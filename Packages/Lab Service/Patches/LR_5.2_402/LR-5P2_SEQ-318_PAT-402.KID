Released LR*5.2*402 SEQ #318
Extracted from mail message
**KIDS**:LR*5.2*402^

**INSTALL NAME**
LR*5.2*402
"BLD",8453,0)
LR*5.2*402^LAB SERVICE^0^3100506^y
"BLD",8453,1,0)
^^8^8^3100506^
"BLD",8453,1,1,0)
This patch is a VM general purpose lab patch that addresses 2 issues.
"BLD",8453,1,2,0)
 
"BLD",8453,1,3,0)
   1.  The option MODIFY AN EXISTING DATA NAME allows for the modification
"BLD",8453,1,4,0)
       of the input parameters for data elements that are not DATA NAMEs,
"BLD",8453,1,5,0)
       leading to, in some cases, a corrupted database.
"BLD",8453,1,6,0)
 
"BLD",8453,1,7,0)
   2.  The option LRENTER (Enter/verify/modify data (manual)) sometimes
"BLD",8453,1,8,0)
       prompts the user to select an accession area twice.
"BLD",8453,4,0)
^9.64PA^^
"BLD",8453,6.3)
1
"BLD",8453,"ABPKG")
n
"BLD",8453,"KRN",0)
^9.67PA^779.2^20
"BLD",8453,"KRN",.4,0)
.4
"BLD",8453,"KRN",.401,0)
.401
"BLD",8453,"KRN",.402,0)
.402
"BLD",8453,"KRN",.403,0)
.403
"BLD",8453,"KRN",.5,0)
.5
"BLD",8453,"KRN",.84,0)
.84
"BLD",8453,"KRN",3.6,0)
3.6
"BLD",8453,"KRN",3.8,0)
3.8
"BLD",8453,"KRN",9.2,0)
9.2
"BLD",8453,"KRN",9.8,0)
9.8
"BLD",8453,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8453,"KRN",9.8,"NM",1,0)
LRWU4^^0^B24817010
"BLD",8453,"KRN",9.8,"NM",2,0)
LRWU6^^0^B10023759
"BLD",8453,"KRN",9.8,"NM","B","LRWU4",1)

"BLD",8453,"KRN",9.8,"NM","B","LRWU6",2)

"BLD",8453,"KRN",19,0)
19
"BLD",8453,"KRN",19.1,0)
19.1
"BLD",8453,"KRN",101,0)
101
"BLD",8453,"KRN",409.61,0)
409.61
"BLD",8453,"KRN",771,0)
771
"BLD",8453,"KRN",779.2,0)
779.2
"BLD",8453,"KRN",870,0)
870
"BLD",8453,"KRN",8989.51,0)
8989.51
"BLD",8453,"KRN",8989.52,0)
8989.52
"BLD",8453,"KRN",8994,0)
8994
"BLD",8453,"KRN","B",.4,.4)

"BLD",8453,"KRN","B",.401,.401)

"BLD",8453,"KRN","B",.402,.402)

"BLD",8453,"KRN","B",.403,.403)

"BLD",8453,"KRN","B",.5,.5)

"BLD",8453,"KRN","B",.84,.84)

"BLD",8453,"KRN","B",3.6,3.6)

"BLD",8453,"KRN","B",3.8,3.8)

"BLD",8453,"KRN","B",9.2,9.2)

"BLD",8453,"KRN","B",9.8,9.8)

"BLD",8453,"KRN","B",19,19)

"BLD",8453,"KRN","B",19.1,19.1)

"BLD",8453,"KRN","B",101,101)

"BLD",8453,"KRN","B",409.61,409.61)

"BLD",8453,"KRN","B",771,771)

"BLD",8453,"KRN","B",779.2,779.2)

"BLD",8453,"KRN","B",870,870)

"BLD",8453,"KRN","B",8989.51,8989.51)

"BLD",8453,"KRN","B",8989.52,8989.52)

"BLD",8453,"KRN","B",8994,8994)

"BLD",8453,"QUES",0)
^9.62^^
"BLD",8453,"REQB",0)
^9.611^2^2
"BLD",8453,"REQB",1,0)
LR*5.2*271^2
"BLD",8453,"REQB",2,0)
LR*5.2*316^2
"BLD",8453,"REQB","B","LR*5.2*271",1)

"BLD",8453,"REQB","B","LR*5.2*316",2)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950304
"PKG",26,22,1,"PAH",1,0)
402^3100506
"PKG",26,22,1,"PAH",1,1,0)
^^8^8^3100506
"PKG",26,22,1,"PAH",1,1,1,0)
This patch is a VM general purpose lab patch that addresses 2 issues.
"PKG",26,22,1,"PAH",1,1,2,0)
 
"PKG",26,22,1,"PAH",1,1,3,0)
   1.  The option MODIFY AN EXISTING DATA NAME allows for the modification
"PKG",26,22,1,"PAH",1,1,4,0)
       of the input parameters for data elements that are not DATA NAMEs,
"PKG",26,22,1,"PAH",1,1,5,0)
       leading to, in some cases, a corrupted database.
"PKG",26,22,1,"PAH",1,1,6,0)
 
"PKG",26,22,1,"PAH",1,1,7,0)
   2.  The option LRENTER (Enter/verify/modify data (manual)) sometimes
"PKG",26,22,1,"PAH",1,1,8,0)
       prompts the user to select an accession area twice.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","LRWU4")
0^1^B24817010^B24612683
"RTN","LRWU4",1,0)
LRWU4 ;DALOI/RWF - READ ACCESSION ;2/7/91  14:49
"RTN","LRWU4",2,0)
 ;;5.2;LAB SERVICE;**128,153,201,271,402**;Sep 27, 1994;Build 1
"RTN","LRWU4",3,0)
 ;
"RTN","LRWU4",4,0)
 ; Reference to ^DISV("LRACC") global supported by DBIA #510
"RTN","LRWU4",5,0)
 ;
"RTN","LRWU4",6,0)
 ; Variable LRVBY set/used by routine LRVER to determine if user
"RTN","LRWU4",7,0)
 ; verifying by accession or UID.
"RTN","LRWU4",8,0)
 ; If variable LRVBY evaluates to 1 then only select by accession.
"RTN","LRWU4",9,0)
 ; If LRVBY<1 or undefined then lookup also by UID.
"RTN","LRWU4",10,0)
 ;
"RTN","LRWU4",11,0)
EN ;
"RTN","LRWU4",12,0)
 N %,DIC,DIR,DIRUT,DUOUT,DTOUT,LRQUIT,LRX
"RTN","LRWU4",13,0)
 ;
"RTN","LRWU4",14,0)
 K LRNATURE
"RTN","LRWU4",15,0)
 S U="^",DT=$$DT^XLFDT,LRQUIT=0
"RTN","LRWU4",16,0)
 F  D AA Q:LRQUIT
"RTN","LRWU4",17,0)
 Q
"RTN","LRWU4",18,0)
 ;
"RTN","LRWU4",19,0)
 ;
"RTN","LRWU4",20,0)
AA ;
"RTN","LRWU4",21,0)
 S DIR(0)="FO^1:30",DIR("A")="Select Accession"_$S($G(LRVBY)=1:"",1:" or UID")
"RTN","LRWU4",22,0)
 S DIR("?")="^D QUES^LRWU4"
"RTN","LRWU4",23,0)
 D ^DIR
"RTN","LRWU4",24,0)
 I Y=""!$D(DIRUT) D QUIT Q
"RTN","LRWU4",25,0)
 S LRX=Y
"RTN","LRWU4",26,0)
 ;
"RTN","LRWU4",27,0)
 S:$L(LRX)>2 ^DISV(DUZ,"LRACC")=LRX
"RTN","LRWU4",28,0)
 S:LRX=" " LRX=$S($D(^DISV(DUZ,"LRACC")):^("LRACC"),1:"?")
"RTN","LRWU4",29,0)
 S (LRAA,LRAD,LRAN)=0
"RTN","LRWU4",30,0)
 ;
"RTN","LRWU4",31,0)
 ; see if entry is UID
"RTN","LRWU4",32,0)
 I $G(LRVBY)<1,$D(^LRO(68,"C",LRX)) D UNIV Q
"RTN","LRWU4",33,0)
 ;
"RTN","LRWU4",34,0)
 ; Parse and process user input.
"RTN","LRWU4",35,0)
 S (X1,X2,X3)="",X1=$P(LRX," ",1),X2=$P(LRX," ",2),X3=$P(LRX," ",3)
"RTN","LRWU4",36,0)
 S:X3=""&(+X2=X2) X3=X2,X2=""
"RTN","LRWU4",37,0)
 I X1'?1A.AN D QUES Q
"RTN","LRWU4",38,0)
 S LRAA=$O(^LRO(68,"B",X1,0))
"RTN","LRWU4",39,0)
 I LRAA<1 D WLQUES Q:LRAA<1
"RTN","LRWU4",40,0)
 S %=$P(^LRO(68,LRAA,0),U,14)
"RTN","LRWU4",41,0)
 S %=$$LKUP^XPDKEY(%)
"RTN","LRWU4",42,0)
 I $L(%),'$D(^XUSEC(%,DUZ)) D WLQUES Q:LRAA<1
"RTN","LRWU4",43,0)
 ;
"RTN","LRWU4",44,0)
 S LRX=$G(^LRO(68,LRAA,0)),LRIDIV=$S($L($P(LRX,U,19)):$P(LRX,U,19),1:"CP")
"RTN","LRWU4",45,0)
 W !,$P(LRX,U)
"RTN","LRWU4",46,0)
 ;
"RTN","LRWU4",47,0)
 ; User entered only accession area identifier, no date or number
"RTN","LRWU4",48,0)
 I X2="",X3="" D
"RTN","LRWU4",49,0)
 . N %DT
"RTN","LRWU4",50,0)
 . S %DT="AEP",%DT("A")="  Accession Date: ",%DT("B")="TODAY"
"RTN","LRWU4",51,0)
 . D DATE^LRWU
"RTN","LRWU4",52,0)
 . I $D(DUOUT) D QUIT Q
"RTN","LRWU4",53,0)
 . I Y<1 D QUES Q
"RTN","LRWU4",54,0)
 . S LRAD=Y
"RTN","LRWU4",55,0)
 I LRQUIT Q
"RTN","LRWU4",56,0)
 ;
"RTN","LRWU4",57,0)
 ; Convert middle value to FileMan date
"RTN","LRWU4",58,0)
 ; Adjust for monthly and quarterly formats (MM00) if user enters 4 digit 
"RTN","LRWU4",59,0)
 ; number as middle part of accession then convert to appropriate date.
"RTN","LRWU4",60,0)
 I LRAD<1 D
"RTN","LRWU4",61,0)
 . N %DT
"RTN","LRWU4",62,0)
 . I X2="" S X2=DT
"RTN","LRWU4",63,0)
 . I X2?4N D
"RTN","LRWU4",64,0)
 . . S X2=$E(DT,1,3)_X2
"RTN","LRWU4",65,0)
 . . I X2>DT S X2=X2-10000
"RTN","LRWU4",66,0)
 . S %DT="EP",X=X2
"RTN","LRWU4",67,0)
 . D ^%DT
"RTN","LRWU4",68,0)
 . I Y>0 S LRAD=Y Q
"RTN","LRWU4",69,0)
 . D QUES
"RTN","LRWU4",70,0)
 I LRAD<1 Q
"RTN","LRWU4",71,0)
 ;
"RTN","LRWU4",72,0)
 ; Convert date entered to apropriate date for accession area transform
"RTN","LRWU4",73,0)
 S X=$P(^LRO(68,LRAA,0),U,3)
"RTN","LRWU4",74,0)
 S LRAD=$S("D"[X:LRAD,X="Y":$E(LRAD,1,3)_"0000","M"[X:$E(LRAD,1,5)_"00","Q"[X:$E(LRAD,1,3)_"0000"+(($E(LRAD,4,5)-1)\3*300+100),1:LRAD)
"RTN","LRWU4",75,0)
 W:X3>0 "  ",+X3
"RTN","LRWU4",76,0)
 ;
"RTN","LRWU4",77,0)
 I X3="",$D(LRACC) D
"RTN","LRWU4",78,0)
 . N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","LRWU4",79,0)
 . S DIR(0)="NO^1:999999",DIR("A")="  Number part of Accession"
"RTN","LRWU4",80,0)
 . D ^DIR
"RTN","LRWU4",81,0)
 . I Y=""!$D(DIRUT) Q
"RTN","LRWU4",82,0)
 . S X3=Y
"RTN","LRWU4",83,0)
 ;
"RTN","LRWU4",84,0)
 I X3="",$D(LRACC) D QUIT Q
"RTN","LRWU4",85,0)
 S LRAN=+X3
"RTN","LRWU4",86,0)
 I LRAN<1,$D(LRACC) D QUES Q
"RTN","LRWU4",87,0)
 I $D(LRACC),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRWU4",88,0)
 . W !,"ACCESSION: ",$P(^LRO(68,LRAA,0),U,11)," ",$$FMTE^XLFDT(LRAD,"5D")," ",LRAN," DOES NOT EXIST!"
"RTN","LRWU4",89,0)
 ;
"RTN","LRWU4",90,0)
 S LRQUIT=1
"RTN","LRWU4",91,0)
 Q
"RTN","LRWU4",92,0)
 ;
"RTN","LRWU4",93,0)
 ;
"RTN","LRWU4",94,0)
QUIT ;
"RTN","LRWU4",95,0)
 S (LRAN,LRAA,LRAD)=-1
"RTN","LRWU4",96,0)
END ;
"RTN","LRWU4",97,0)
 K X1,X2,X3,%DT,DIC,LRIDIV
"RTN","LRWU4",98,0)
 S LRQUIT=1
"RTN","LRWU4",99,0)
 Q
"RTN","LRWU4",100,0)
 ;
"RTN","LRWU4",101,0)
 ;
"RTN","LRWU4",102,0)
UNIV ; see if entry is UID
"RTN","LRWU4",103,0)
 N LRY
"RTN","LRWU4",104,0)
 S LRY=$$CHECKUID(LRX)
"RTN","LRWU4",105,0)
 I 'LRY S (LRAA,LRAD,LRAN)=0 D QUES Q
"RTN","LRWU4",106,0)
 S LRAA=$P(LRY,"^",2),LRAD=$P(LRY,"^",3),LRAN=$P(LRY,"^",4)
"RTN","LRWU4",107,0)
 S LRQUIT=1
"RTN","LRWU4",108,0)
 W "  (",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^"),")"
"RTN","LRWU4",109,0)
 Q
"RTN","LRWU4",110,0)
 ;
"RTN","LRWU4",111,0)
 ;
"RTN","LRWU4",112,0)
QUES ;
"RTN","LRWU4",113,0)
 W $C(7),!,"Enter the accession number",$S($G(LRVBY)<1:" or the unique identifier (UID)",1:""),"."
"RTN","LRWU4",114,0)
 W !,"If entering the accession number, enter in this format:"
"RTN","LRWU4",115,0)
 W !?5," <ACCESSION AREA> <DATE> <NUMBER>"
"RTN","LRWU4",116,0)
 W !?5," ie.  CH 0426 125 or CH 125 or CH T 125",!?5," or if it's a yearly accession area ie. MICRO 85 30173"
"RTN","LRWU4",117,0)
 W:'$D(LRACC) !?5," or just the Accession area, or area and date."
"RTN","LRWU4",118,0)
 W:$D(LRACC) !?5," Must include the Accession area and the final number part."
"RTN","LRWU4",119,0)
 I $G(LRVBY)<1 W !,"If entering the UID, enter the entire 10-15 characters."
"RTN","LRWU4",120,0)
 Q
"RTN","LRWU4",121,0)
 ;
"RTN","LRWU4",122,0)
WLQUES ; Ask user if acession area enter does not match any existing entries
"RTN","LRWU4",123,0)
 N DIC,X
"RTN","LRWU4",124,0)
 S X=X1,DIC="^LRO(68,",DIC(0)="EMOQ"
"RTN","LRWU4",125,0)
 S DIC("S")="Q:$D(LREXMPT)  S %=$P(^(0),U,14) X ""I '$L(%)"" Q:$T  S %=$$LKUP^XPDKEY(%) I $D(^XUSEC(%,DUZ))"
"RTN","LRWU4",126,0)
 W !,X
"RTN","LRWU4",127,0)
 D ^DIC S LRAA=+Y
"RTN","LRWU4",128,0)
 Q
"RTN","LRWU4",129,0)
 ;
"RTN","LRWU4",130,0)
SELBY(X1) ; Select by accession number or unique identifier (UID)
"RTN","LRWU4",131,0)
 ; Call with X1 = message prompt
"RTN","LRWU4",132,0)
 ;    Returns Y = 0 (abort)
"RTN","LRWU4",133,0)
 ;              = 1 (accession number)
"RTN","LRWU4",134,0)
 ;              = 2 (unique identifier)
"RTN","LRWU4",135,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRWU4",136,0)
 S X1=$G(X1,"Select UID")
"RTN","LRWU4",137,0)
 S DIR(0)="SO^1:Accession Number;2:Unique Identifier (UID)",DIR("A")=X1,DIR("B")=1
"RTN","LRWU4",138,0)
 D ^DIR
"RTN","LRWU4",139,0)
 I $D(DIRUT) S Y=0
"RTN","LRWU4",140,0)
 Q Y
"RTN","LRWU4",141,0)
 ;
"RTN","LRWU4",142,0)
UID(LRX,LRY) ; Lookup accession by UID
"RTN","LRWU4",143,0)
 ; Call with LRX = message prompt
"RTN","LRWU4",144,0)
 ;           LRY = default UID to display
"RTN","LRWU4",145,0)
 ;     Returns Y = 0 (abort)
"RTN","LRWU4",146,0)
 ;               = UID
"RTN","LRWU4",147,0)
 ;
"RTN","LRWU4",148,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRWU4",149,0)
 ;
"RTN","LRWU4",150,0)
 S LRX=$G(LRX,"Select UID")
"RTN","LRWU4",151,0)
 S DIR(0)="F^10:10^K:'$D(^LRO(68,""C"",X)) X"
"RTN","LRWU4",152,0)
 S DIR("A")=LRX,DIR("?")="Enter the full 10 character UID"
"RTN","LRWU4",153,0)
 I $L($G(LRY)) S DIR("B")=LRY
"RTN","LRWU4",154,0)
 D ^DIR
"RTN","LRWU4",155,0)
 I $D(DIRUT) S Y=0
"RTN","LRWU4",156,0)
 Q Y
"RTN","LRWU4",157,0)
 ;
"RTN","LRWU4",158,0)
 ;
"RTN","LRWU4",159,0)
CHECKUID(LRX) ; Check if UID is valid, accession exists.
"RTN","LRWU4",160,0)
 ; Call with LRX = UID to check
"RTN","LRWU4",161,0)
 ;     Returns Y = 0 (accession does not exist)
"RTN","LRWU4",162,0)
 ;               = 1 (accession exists)^area^date^number
"RTN","LRWU4",163,0)
 ;
"RTN","LRWU4",164,0)
 N LRY,Y
"RTN","LRWU4",165,0)
 ;
"RTN","LRWU4",166,0)
 S LRY=0
"RTN","LRWU4",167,0)
 S Y=$Q(^LRO(68,"C",LRX))
"RTN","LRWU4",168,0)
 I $QS(Y,3)=LRX,+$QS(Y,4),+$QS(Y,5),+$QS(Y,6) D
"RTN","LRWU4",169,0)
 . I '$D(^LRO(68,+$QS(Y,4),1,+$QS(Y,5),1,+$QS(Y,6),0)) Q
"RTN","LRWU4",170,0)
 . S LRY=1_"^"_$QS(Y,4)_"^"_$QS(Y,5)_"^"_+$QS(Y,6)
"RTN","LRWU4",171,0)
 Q LRY
"RTN","LRWU6")
0^2^B10023759^B9868953
"RTN","LRWU6",1,0)
LRWU6 ;SLC/RWF/BA - MODIFY AN EXISTING DATA NAME ; 5/19/87  23:54 ;
"RTN","LRWU6",2,0)
 ;;5.2;LAB SERVICE;**316,402**;Sep 27, 1994;Build 1
"RTN","LRWU6",3,0)
ACCESS I '$D(^XUSEC("LRLIASON",DUZ)) W $C(7),!,"You do not have access to this option" Q
"RTN","LRWU6",4,0)
BEGIN S U="^",DTIME=$S($D(DTIME):DTIME,1:300) W !!,"This option allows modifying an existing data name." D DT^LRX,TEST
"RTN","LRWU6",5,0)
END K %,DA,DIC,DIK,I,LRDEC,LRHI,LRLO,LRMAX,LRMIN,LRNAME,LROK,LRPIECE,LRSET,LRTYPE,LROK1,Q1,Q2,Q3,Q4,Q5,X,Y
"RTN","LRWU6",6,0)
 Q
"RTN","LRWU6",7,0)
TEST S LROK=1,DIC="^DD(63.04,",DIC(0)="AEM",DIC("S")="I Y>1.999999" D ^DIC Q:Y'>0  S DA=+Y,LRNAME=$P(^DD(63.04,DA,0),U)
"RTN","LRWU6",8,0)
 D DISPLAY W ! F I=0:0 W !,"Do you wish to modify this data name" S %=2 D YN^DICN Q:%  W "Answer 'Y'es or 'N'o"
"RTN","LRWU6",9,0)
 Q:%'=1
"RTN","LRWU6",10,0)
 F I=0:0 W !,"Enter data type for ",LRNAME,": (N)umeric, (S)et of Codes, or (F)ree text? " R X:DTIME Q:X[U!(X="")!(X="N")!(X="S")!(X="F")  W !,"Enter 'N', 'S', 'F', or '^'"
"RTN","LRWU6",11,0)
 I X=""!(X[U) Q
"RTN","LRWU6",12,0)
 ;VMP OIFO BAY PINES;VGF;LR*5.2*316;ADDED H 5 SO USER CAN SEE ERROR MSG
"RTN","LRWU6",13,0)
 S Q1=X D @$S(Q1="N":"NUM^LRWU5",Q1="S":"CODES^LRWU5",1:"FREE^LRWU5") I 'LROK W !,"Nothing has been changed." H 5 Q
"RTN","LRWU6",14,0)
 S DIK="^DD(63.04,",DA(1)=63.04 D IX1^DIK
"RTN","LRWU6",15,0)
 W !!,"'",LRNAME,"' has been modified to:" D DISPLAY
"RTN","LRWU6",16,0)
 Q
"RTN","LRWU6",17,0)
DISPLAY S LRTYPE=$P(^DD(63.04,DA,0),U,2) D @$S(LRTYPE["N":"NUM",LRTYPE["S":"SET",1:"FREE")
"RTN","LRWU6",18,0)
 Q
"RTN","LRWU6",19,0)
NUM S Q2=$P(^DD(63.04,DA,0),U,5,99) W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: NUMERIC",!,"Input Transform: ",Q2
"RTN","LRWU6",20,0)
 I Q2["S Q9=" S Q1=$P($P(Q2,"S Q9=",2),"""",2),LRLO=$P(Q1,","),LRHI=$P(Q1,",",2),LRDEC=$P(Q1,",",3)
"RTN","LRWU6",21,0)
 I Q2'["S Q9=" S LRLO=$S(Q2["X<":+$P(Q2,"X<",2),1:""),LRHI=$S(Q2["X>":+$P(Q2,"X>",2),1:""),LRDEC=$S(Q2["X?.E1"".""":-1+$P(Q2,"X?.E1"".""",2),1:"")
"RTN","LRWU6",22,0)
 W !,"Minimum value: ",LRLO,!,"Maximum value: ",LRHI,!,"Maximum # decimal digits: ",LRDEC
"RTN","LRWU6",23,0)
 Q
"RTN","LRWU6",24,0)
FREE S Q2=$P(^DD(63.04,DA,0),U,5,99) W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: FREE TEXT",!,"Input Transform: ",Q2
"RTN","LRWU6",25,0)
 S LRMIN=$S(Q2["$L(X)<":+$P(Q2,"$L(X)<",2),1:""),LRMAX=$S(Q2["$L(X)>":+$P(Q2,"$L(X)>",2),1:"")
"RTN","LRWU6",26,0)
 W !,"Minimum length: ",LRMIN,!,"Maximum length: ",LRMAX
"RTN","LRWU6",27,0)
 Q
"RTN","LRWU6",28,0)
SET S Q2=$P(^DD(63.04,DA,0),U,3) W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: SET OF CODES"
"RTN","LRWU6",29,0)
 F LRPIECE=1:1 S LRSET=$P(Q2,";",LRPIECE) Q:LRSET'[":"  W !,$P(LRSET,":"),"  -  ",$P(LRSET,":",2)
"RTN","LRWU6",30,0)
 Q
"RTN","LRWU6",31,0)
FIX S P=0 F I=0:0 S P=$O(^LR(P)) Q:P<1  S T=0 F I=0:0 S T=$O(^LR(P,"CH",T)) Q:T<1  I $D(^LR(P,"CH",T,O))&('$D(^(N))) S ^(N)=^(O) K ^(O) W "."
"RTN","LRWU6",32,0)
 K P,T,O,N,I
"RTN","LRWU6",33,0)
 Q
"VER")
8.0^22.0
"BLD",8453,6)
^318
**END**
**END**
