EMERGENCY Released LR*5.2*352 SEQ #304
Extracted from mail message
**KIDS**:LR*5.2*352^

**INSTALL NAME**
LR*5.2*352
"BLD",5958,0)
LR*5.2*352^LAB SERVICE^0^3081009^y
"BLD",5958,4,0)
^9.64PA^69^1
"BLD",5958,4,69,0)
69
"BLD",5958,4,69,2,0)
^9.641^69.05^3
"BLD",5958,4,69,2,69,0)
LAB ORDER ENTRY  (File-top level)
"BLD",5958,4,69,2,69,1,0)
^9.6411^^
"BLD",5958,4,69,2,69.01,0)
SPECIMEN #  (sub-file)
"BLD",5958,4,69,2,69.01,1,0)
^9.6411^^
"BLD",5958,4,69,2,69.05,0)
ICD-9 CODES  (sub-file)
"BLD",5958,4,69,2,69.05,1,0)
^9.6411^9^2
"BLD",5958,4,69,2,69.05,1,5,0)
SOUTHWEST ASIA CONDITIONS
"BLD",5958,4,69,2,69.05,1,9,0)
SHIPBOARD HAZARD AND DEFENSE
"BLD",5958,4,69,222)
y^n^p^^^^n^^n
"BLD",5958,4,69,224)

"BLD",5958,4,"APDD",69,69)

"BLD",5958,4,"APDD",69,69.01)

"BLD",5958,4,"APDD",69,69.05)

"BLD",5958,4,"APDD",69,69.05,5)

"BLD",5958,4,"APDD",69,69.05,9)

"BLD",5958,4,"B",69,69)

"BLD",5958,6)
12^
"BLD",5958,6.3)
1
"BLD",5958,"KRN",0)
^9.67PA^8989.52^19
"BLD",5958,"KRN",.4,0)
.4
"BLD",5958,"KRN",.401,0)
.401
"BLD",5958,"KRN",.402,0)
.402
"BLD",5958,"KRN",.403,0)
.403
"BLD",5958,"KRN",.5,0)
.5
"BLD",5958,"KRN",.84,0)
.84
"BLD",5958,"KRN",3.6,0)
3.6
"BLD",5958,"KRN",3.8,0)
3.8
"BLD",5958,"KRN",9.2,0)
9.2
"BLD",5958,"KRN",9.8,0)
9.8
"BLD",5958,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",5958,"KRN",9.8,"NM",1,0)
LRBEBA^^0^B63890691
"BLD",5958,"KRN",9.8,"NM",2,0)
LRBEBA2^^0^B74544434
"BLD",5958,"KRN",9.8,"NM",3,0)
LRBEBA3^^0^B64272559
"BLD",5958,"KRN",9.8,"NM",4,0)
LRBEBA4^^0^B67413439
"BLD",5958,"KRN",9.8,"NM",5,0)
LRBEBAO^^0^B71512704
"BLD",5958,"KRN",9.8,"NM","B","LRBEBA",1)

"BLD",5958,"KRN",9.8,"NM","B","LRBEBA2",2)

"BLD",5958,"KRN",9.8,"NM","B","LRBEBA3",3)

"BLD",5958,"KRN",9.8,"NM","B","LRBEBA4",4)

"BLD",5958,"KRN",9.8,"NM","B","LRBEBAO",5)

"BLD",5958,"KRN",19,0)
19
"BLD",5958,"KRN",19,"NM",0)
^9.68A^^
"BLD",5958,"KRN",19.1,0)
19.1
"BLD",5958,"KRN",101,0)
101
"BLD",5958,"KRN",409.61,0)
409.61
"BLD",5958,"KRN",771,0)
771
"BLD",5958,"KRN",870,0)
870
"BLD",5958,"KRN",8989.51,0)
8989.51
"BLD",5958,"KRN",8989.52,0)
8989.52
"BLD",5958,"KRN",8994,0)
8994
"BLD",5958,"KRN","B",.4,.4)

"BLD",5958,"KRN","B",.401,.401)

"BLD",5958,"KRN","B",.402,.402)

"BLD",5958,"KRN","B",.403,.403)

"BLD",5958,"KRN","B",.5,.5)

"BLD",5958,"KRN","B",.84,.84)

"BLD",5958,"KRN","B",3.6,3.6)

"BLD",5958,"KRN","B",3.8,3.8)

"BLD",5958,"KRN","B",9.2,9.2)

"BLD",5958,"KRN","B",9.8,9.8)

"BLD",5958,"KRN","B",19,19)

"BLD",5958,"KRN","B",19.1,19.1)

"BLD",5958,"KRN","B",101,101)

"BLD",5958,"KRN","B",409.61,409.61)

"BLD",5958,"KRN","B",771,771)

"BLD",5958,"KRN","B",870,870)

"BLD",5958,"KRN","B",8989.51,8989.51)

"BLD",5958,"KRN","B",8989.52,8989.52)

"BLD",5958,"KRN","B",8994,8994)

"BLD",5958,"QUES",0)
^9.62^^
"BLD",5958,"REQB",0)
^9.611^1^1
"BLD",5958,"REQB",1,0)
LR*5.2*359^2
"BLD",5958,"REQB","B","LR*5.2*359",1)

"FIA",69)
LAB ORDER ENTRY
"FIA",69,0)
^LRO(69,
"FIA",69,0,0)
69D
"FIA",69,0,1)
y^n^f^^^^n^^n
"FIA",69,0,10)

"FIA",69,0,11)

"FIA",69,0,"RLRO")

"FIA",69,0,"VR")
5.2^LR
"FIA",69,69)
0
"FIA",69,69.01)
0
"FIA",69,69.02)
0
"FIA",69,69.03)
0
"FIA",69,69.04)
0
"FIA",69,69.05)
0
"FIA",69,69.05,5)

"FIA",69,69.05,9)

"FIA",69,69.399)
0
"FIA",69,69.3991)
0
"IX",69,69,"APP",0)
69^APP^Index is used to send AMA/Billable panels to PCE.^MU^^R^IR^W^69.03^^^^^A
"IX",69,69,"APP",.1,0)
^^9^9^3060105^
"IX",69,69,"APP",.1,1,0)
The "APP" index is used by routine LRBEBA5 to send Lab data to PCE.
"IX",69,69,"APP",.1,2,0)
EN^LRBEBA5 is called from routine LRNIGHT, the nightly cleanup task.
"IX",69,69,"APP",.1,3,0)
If the current date is the same as the date stored in PANEL PROCESS
"IX",69,69,"APP",.1,4,0)
DATE field (#620) of the LABORATORY SITE file (#69.9), then routine
"IX",69,69,"APP",.1,5,0)
LRBEBA5 uses index "APP" to locate data for AMA/Billable panels that
"IX",69,69,"APP",.1,6,0)
have not been sent to PCE due to pending results for atomic tests on
"IX",69,69,"APP",.1,7,0)
the panel.  Panel tests from the previous calendar month will be
"IX",69,69,"APP",.1,8,0)
"unbundled" and the CPT Codes for the verified atomic tests are sent
"IX",69,69,"APP",.1,9,0)
to PCE.
"IX",69,69,"APP",1)
S ^LRO(69,"APP",+X2(2),DA(2),DA(1),DA)=""
"IX",69,69,"APP",1.4)
I X2(1),X2(2)
"IX",69,69,"APP",2)
K ^LRO(69,"APP",+X1(2),DA(2),DA(1),DA)
"IX",69,69,"APP",2.4)
I X1(1),X1(2),'X2(1)
"IX",69,69,"APP",11.1,0)
^.114IA^2^2
"IX",69,69,"APP",11.1,1,0)
1^F^69.03^22.1^^^F
"IX",69,69,"APP",11.1,2,0)
2^F^69.03^22^^^F
"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2990219^66476
"PKG",26,22,1,"PAH",1,0)
352^3081009^123456804
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","LRBEBA")
0^1^B63890691^B62512443
"RTN","LRBEBA",1,0)
LRBEBA ;DALOI/JAH/FHS - SCI, EI, AND LRBEDGX QUESTIONS ;8/10/04
"RTN","LRBEBA",2,0)
 ;;5.2;LAB SERVICE;**291,352**;Sep 27, 1994;Build 1
"RTN","LRBEBA",3,0)
 ;
"RTN","LRBEBA",4,0)
 ; This routine contains the questions to be asked for 
"RTN","LRBEBA",5,0)
 ; Service Connected Indicator, Environmental Indicator,
"RTN","LRBEBA",6,0)
 ; and Diagnosis.
"RTN","LRBEBA",7,0)
 ;
"RTN","LRBEBA",8,0)
 ; Reference to EN^DDIOL supported by IA #10142
"RTN","LRBEBA",9,0)
 ; Reference to ^DIC supported by IA #10006
"RTN","LRBEBA",10,0)
 ; Reference to $$GET1^DIQ supported by IA #2056
"RTN","LRBEBA",11,0)
 ; Reference to ^DIR supported by IA #10026
"RTN","LRBEBA",12,0)
 ; Reference to ^ICD9 supported by IA #10082
"RTN","LRBEBA",13,0)
 ; Reference to ^DIC(9.4 supported by IA #10048
"RTN","LRBEBA",14,0)
 ;
"RTN","LRBEBA",15,0)
QUES(LRBEDFN,LRBESMP,LRBESPC,TST,DT,LRBEAR,LRBEDP) ; Start asking questions
"RTN","LRBEBA",16,0)
 N DIC,DIR,DTOUT,DUOUT,DIRUT,LRBEFMSG,LRBEST,LRBEQT,X,Y
"RTN","LRBEBA",17,0)
 S:$G(LRBEALO)="" LRBEALO=0 S (LRBEST,LRBEQT)=0
"RTN","LRBEBA",18,0)
 F  D  Q:LRBEQT
"RTN","LRBEBA",19,0)
 .;ensure it's active on the date of encounter
"RTN","LRBEBA",20,0)
 .;S DIC("S")="I $$STATCHK^ICDAPIU(Y,DT)" 
"RTN","LRBEBA",21,0)
 .S LRBEFMSG=" ICD-9 CODE: "
"RTN","LRBEBA",22,0)
 .S DIC("A")="Select "_$S(LRBEALO=0:"Primary",1:"Secondary")_LRBEFMSG
"RTN","LRBEBA",23,0)
 .S DIC="^ICD9(",DIC(0)="AMEQZ" D ^DIC
"RTN","LRBEBA",24,0)
 .I $D(DTOUT)!($D(DUOUT)) S (LRBEST,LRBEQT)=1 K DIC,LRBEAR Q:LRBEQT
"RTN","LRBEBA",25,0)
 .I +Y<1 K DIC S LRBEQT=1 Q:LRBEQT
"RTN","LRBEBA",26,0)
 .S LRBEDGX=+Y
"RTN","LRBEBA",27,0)
 .S LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,TST,LRBEDGX)=$P(Y(0),U,1,3)
"RTN","LRBEBA",28,0)
 .S:'LRBEALO $P(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,TST,LRBEDGX),U,12)=1
"RTN","LRBEBA",29,0)
 .S LRBEALO=1 D SCI(LRBEDFN,DT,.LRBEQT) Q:LRBEQT
"RTN","LRBEBA",30,0)
 K LRBEALO
"RTN","LRBEBA",31,0)
 Q LRBEST
"RTN","LRBEBA",32,0)
 ;
"RTN","LRBEBA",33,0)
SCI(LRBEDFN,LRBECDT,LRBEQT) ; Ask the Indicator Questions
"RTN","LRBEBA",34,0)
 N DIR,DTOUT,DUOUT,DIRUT,I,LRBEA,LRBEB,LRBEBL,LRBESEG,LRBECLY,Y
"RTN","LRBEBA",35,0)
 I $D(LRBEDP(LRBEDGX)) D  Q
"RTN","LRBEBA",36,0)
 .S LRBEBL=$L($G(LRBEDP(LRBEDGX)),U)
"RTN","LRBEBA",37,0)
 .S LRBEB=$P(LRBEDP(LRBEDGX),U,4,LRBEBL)
"RTN","LRBEBA",38,0)
 .S $P(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,TST,LRBEDGX),U,4,LRBEBL)=LRBEB
"RTN","LRBEBA",39,0)
 D CL^SDCO21(LRBEDFN,LRBECDT_".2359","",.LRBECLY)
"RTN","LRBEBA",40,0)
 S LRBESEG="3,7,1,2,4,8,5,6"
"RTN","LRBEBA",41,0)
 F I=1:1:$L(LRBESEG,",") S LRBEA=+$P(LRBESEG,",",I) D  Q:LRBEQT
"RTN","LRBEBA",42,0)
 .I $D(LRBECLY(LRBEA)) D  Q:LRBEQT
"RTN","LRBEBA",43,0)
 ..S DIR("A")="  "_$$GETI(LRBEA)
"RTN","LRBEBA",44,0)
 ..S DIR(0)="YO" D ^DIR
"RTN","LRBEBA",45,0)
 ..I $D(DTOUT)!($D(DUOUT)) S (LRBEST,LRBEQT)=1 K DIC,LRBEAR Q:LRBEQT
"RTN","LRBEBA",46,0)
 ..I +Y=-1 S LRBEQT=1 Q:LRBEQT
"RTN","LRBEBA",47,0)
 ..S $P(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,TST,LRBEDGX),U,LRBEA+3)=Y
"RTN","LRBEBA",48,0)
 ..S $P(LRBEDP(LRBEDGX),U,LRBEA+3)=Y
"RTN","LRBEBA",49,0)
 Q
"RTN","LRBEBA",50,0)
 ;
"RTN","LRBEBA",51,0)
GETI(LRBEA) ; Get type of Indicator
"RTN","LRBEBA",52,0)
 N LRBEX,LRBEQUES,LRBEQUS1
"RTN","LRBEBA",53,0)
 S LRBEQUES="Was treatment related to ",LRBEQUS1="Was treatment for a "
"RTN","LRBEBA",54,0)
 S:LRBEA=1 LRBEX=LRBEQUES_"Agent Orange exposure"
"RTN","LRBEBA",55,0)
 S:LRBEA=2 LRBEX=LRBEQUES_"Ionizing Radiation exposure"
"RTN","LRBEBA",56,0)
 S:LRBEA=3 LRBEX=LRBEQUS1_"Service Connected condition"
"RTN","LRBEBA",57,0)
 S:LRBEA=4 LRBEX=LRBEQUES_"service in SW Asia"
"RTN","LRBEBA",58,0)
 S:LRBEA=5 LRBEX=LRBEQUES_"Military Sexual Trauma"
"RTN","LRBEBA",59,0)
 S:LRBEA=6 LRBEX=LRBEQUES_"Head and Neck Cancer"
"RTN","LRBEBA",60,0)
 S:LRBEA=7 LRBEX=LRBEQUES_"Combat Vet"
"RTN","LRBEBA",61,0)
 S:LRBEA=8 LRBEX=LRBEQUES_"Shipboard Hazard And Defense"
"RTN","LRBEBA",62,0)
 Q LRBEX
"RTN","LRBEBA",63,0)
 ;
"RTN","LRBEBA",64,0)
ERRMSG(MT) ; Display Error Message
"RTN","LRBEBA",65,0)
 N LRBEAST,LRBEFMT,LRBELIN,LRBEMS
"RTN","LRBEBA",66,0)
 S:MT=-1 LRBEMS="An error occurred. Data may or may not have been processed."
"RTN","LRBEBA",67,0)
 S:MT<-1 LRBEMS="No data was processed."
"RTN","LRBEBA",68,0)
 S LRBEMS="* "_LRBEMS_" *",LRBEAST="",$P(LRBEAST,"*",80)="",LRBEFMT="!?"_((80-$L(LRBEMS))/2)
"RTN","LRBEBA",69,0)
 S LRBELIN=$E(LRBEAST,1,$L(LRBEMS)+1)
"RTN","LRBEBA",70,0)
 D EN^DDIOL(LRBELIN,"",LRBEFMT),EN^DDIOL(LRBEMS,"",LRBEFMT),EN^DDIOL(LRBELIN,"",LRBEFMT)
"RTN","LRBEBA",71,0)
 Q
"RTN","LRBEBA",72,0)
 ;
"RTN","LRBEBA",73,0)
SDG1(LRODT,LRSN,LRTN,LRSAMP,LRSPEC,LRTSTS,LRBEAR) ; Set the diagnois 
"RTN","LRBEBA",74,0)
 ;                             and indicators file #69
"RTN","LRBEBA",75,0)
 N LRBEFIL,LRBEIEN,LRBEDFN,LRFDA,LRFDAIEN,LRERR,LRBEPDGX,LRBETNUM
"RTN","LRBEBA",76,0)
 N LRDA,LRBEP,DIK,DA
"RTN","LRBEBA",77,0)
 S DIK="^LRO(69,"_LRODT_",1,"_LRSN_",2,"_LRTN_",2,"
"RTN","LRBEBA",78,0)
 S LRDA=0 F  S LRDA=$O(^LRO(69,LRODT,1,LRSN,2,LRTN,2,LRDA)) Q:LRDA<1  D
"RTN","LRBEBA",79,0)
 . S DA=LRDA D ^DIK
"RTN","LRBEBA",80,0)
 K DA,DIK
"RTN","LRBEBA",81,0)
 S LRBEP=0
"RTN","LRBEBA",82,0)
 I '$D(DFN) S LRBEDFN=$$GET1^DIQ(63,LRDFN,.03,"I")
"RTN","LRBEBA",83,0)
 S:$D(DFN) LRBEDFN=DFN
"RTN","LRBEBA",84,0)
 S LRBEFIL=69.05,LRBETNUM=$O(^LRO(69,LRODT,1,LRSN,2,LRTN,2,""),-1)+1,LRBEPDGX=""
"RTN","LRBEBA",85,0)
 F  S LRBEPDGX=$O(LRBEAR(LRBEDFN,"LRBEDGX",LRSAMP,LRSPEC,LRTSTS,LRBEPDGX)) Q:LRBEPDGX=""  D
"RTN","LRBEBA",86,0)
 .S LRBEPTDT=$G(LRBEAR(LRBEDFN,"LRBEDGX",LRSAMP,LRSPEC,LRTSTS,LRBEPDGX))
"RTN","LRBEBA",87,0)
 .I 'LRBEP,'$P(LRBEPTDT,U,12) Q
"RTN","LRBEBA",88,0)
 .S LRBEP=1
"RTN","LRBEBA",89,0)
 .S LRBEIEN="+"_LRBETNUM_","_LRTN_","_LRSN_","_LRODT_","
"RTN","LRBEBA",90,0)
 .S LRFDAIEN(LRBETNUM)=LRBETNUM
"RTN","LRBEBA",91,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN,.01)=LRBEPDGX
"RTN","LRBEBA",92,0)
 .S:$P(LRBEPTDT,U,6)'="" LRFDA(99,LRBEFIL,LRBEIEN,1)=$P(LRBEPTDT,U,6)
"RTN","LRBEBA",93,0)
 .S:$P(LRBEPTDT,U,10)'="" LRFDA(99,LRBEFIL,LRBEIEN,2)=$P(LRBEPTDT,U,10)
"RTN","LRBEBA",94,0)
 .S:$P(LRBEPTDT,U,4)'="" LRFDA(99,LRBEFIL,LRBEIEN,3)=$P(LRBEPTDT,U,4)
"RTN","LRBEBA",95,0)
 .S:$P(LRBEPTDT,U,5)'="" LRFDA(99,LRBEFIL,LRBEIEN,4)=$P(LRBEPTDT,U,5)
"RTN","LRBEBA",96,0)
 .S:$P(LRBEPTDT,U,7)'="" LRFDA(99,LRBEFIL,LRBEIEN,5)=$P(LRBEPTDT,U,7)
"RTN","LRBEBA",97,0)
 .S:$P(LRBEPTDT,U,8)'="" LRFDA(99,LRBEFIL,LRBEIEN,6)=$P(LRBEPTDT,U,8)
"RTN","LRBEBA",98,0)
 .S:$P(LRBEPTDT,U,9)'="" LRFDA(99,LRBEFIL,LRBEIEN,7)=$P(LRBEPTDT,U,9)
"RTN","LRBEBA",99,0)
 .S:$P(LRBEPTDT,U,11)'="" LRFDA(99,LRBEFIL,LRBEIEN,9)=$P(LRBEPTDT,U,11)
"RTN","LRBEBA",100,0)
 .S:$P(LRBEPTDT,U,12)=1 LRFDA(99,LRBEFIL,LRBEIEN,8)=1         ;Is Primary?
"RTN","LRBEBA",101,0)
 .S LRBETNUM=LRBETNUM+1
"RTN","LRBEBA",102,0)
 .I $P(LRBEPTDT,U,12) K LRBEAR(LRBEDFN,"LRBEDGX",LRSAMP,LRSPEC,LRTSTS,LRBEPDGX) S LRBEPDGX=""
"RTN","LRBEBA",103,0)
 D UPDATE^DIE("","LRFDA(99)","LRFDAIEN","LRERR")
"RTN","LRBEBA",104,0)
 Q
"RTN","LRBEBA",105,0)
 ;
"RTN","LRBEBA",106,0)
SDOS(LRODT,LRSN,LRTN,LRBECDT) ; Set DOS for CIDC
"RTN","LRBEBA",107,0)
 N LRBEIEN,LRFDA,LRERR
"RTN","LRBEBA",108,0)
 S LRBEIEN=LRTN_","_LRSN_","_LRODT_",",LRFDA(99,69.03,LRBEIEN,22)=LRBECDT
"RTN","LRBEBA",109,0)
 D UPDATE^DIE("","LRFDA(99)","","LRERR")
"RTN","LRBEBA",110,0)
 Q
"RTN","LRBEBA",111,0)
 ;
"RTN","LRBEBA",112,0)
CCPT(LRBECPT,LRBECDT,LRBEAR) ; Check the status of the CPT (CSV)
"RTN","LRBEBA",113,0)
 ;
"RTN","LRBEBA",114,0)
 ; Input:
"RTN","LRBEBA",115,0)
 ;  LRBECPT  -  CPT
"RTN","LRBEBA",116,0)
 ;  LRBECDT   -  Date To Be Checked ; Collection date/time
"RTN","LRBEBA",117,0)
 ;  LRBEAR   -  An array passed by reference to hold IEN and Status
"RTN","LRBEBA",118,0)
 ;
"RTN","LRBEBA",119,0)
 ; Output:
"RTN","LRBEBA",120,0)
 ;  ST       -  Status of CPT (Active (1),Inactive (0), or Invalid (-1))
"RTN","LRBEBA",121,0)
 ;  LRBEAR   -  An array passed by reference to hold IEN and Status
"RTN","LRBEBA",122,0)
 ;   LRBEAR(CPT)=IEN^NAME^EFFECTIVE DAT^STATUS 
"RTN","LRBEBA",123,0)
 ;
"RTN","LRBEBA",124,0)
 N LRBEST,LRBEPTDT
"RTN","LRBEBA",125,0)
 S LRBEST=""
"RTN","LRBEBA",126,0)
 S LRBEPTDT=$$CPT^ICPTCOD(LRBECPT,LRBECDT)
"RTN","LRBEBA",127,0)
 S LRBEST=$P(LRBEPTDT,U,7) I 'LRBEST S LRBEST=-1 Q LRBEST
"RTN","LRBEBA",128,0)
 S LRBEAR(LRBECPT)=$P(LRBEPTDT,U,1)_U_$P(LRBEPTDT,U,3)_U_$P(LRBEPTDT,U,6)_U_LRBEST
"RTN","LRBEBA",129,0)
 Q LRBEST
"RTN","LRBEBA",130,0)
 ;
"RTN","LRBEBA",131,0)
EMSGCPT(LRBEAR) ; Print out Inactive CPTs
"RTN","LRBEBA",132,0)
 N CNAM,LRBEASK,LRBEFMT,LRBELIN,LRBECPT,LRBEMS,LRBEMS2,LRBEMS3,LRBEMSG,LRBESP
"RTN","LRBEBA",133,0)
 S LRBEMSG="Please contact HISYS to correct the Inactive CPTs: "
"RTN","LRBEBA",134,0)
 S LRBEMS="*  "_LRBEMSG_"  *",LRBEAST="",$P(LRBEAST,"*",80)="",LRBEFMT="!?"_((80-$L(LRBEMS))/2)
"RTN","LRBEBA",135,0)
 S LRBESP="",$P(LRBESP," ",80)="",LRBELIN=$E(LRBEAST,1,$L(LRBEMS))
"RTN","LRBEBA",136,0)
 S LRBEMS2="*  "_$E(LRBESP,1,$L(LRBEMSG))_"  *"
"RTN","LRBEBA",137,0)
 D EN^DDIOL(LRBELIN,"","!"_LRBEFMT),EN^DDIOL(LRBEMS,"",LRBEFMT),EN^DDIOL(LRBEMS2,"",LRBEFMT)
"RTN","LRBEBA",138,0)
 S LRBECPT="" F  S LRBECPT=$O(LRBEAR(LRBECPT)) Q:LRBECPT=""  D
"RTN","LRBEBA",139,0)
 .Q:$P(LRBEAR(LRBECPT),U,4)'=0
"RTN","LRBEBA",140,0)
 .S CNAM=$P(LRBEAR(LRBECPT),U,2)
"RTN","LRBEBA",141,0)
 .S LRBEMS3="*     "_LRBECPT_$E(LRBESP,1,15-$L(LRBECPT))_$E(CNAM,1,30)
"RTN","LRBEBA",142,0)
 .S LRBEMS3=LRBEMS3_$E(LRBESP,1,($L(LRBEMS)-$L(LRBEMS3))-1)_"*"
"RTN","LRBEBA",143,0)
 .D EN^DDIOL(LRBEMS3,"",LRBEFMT)
"RTN","LRBEBA",144,0)
 D EN^DDIOL(LRBEMS2,"",LRBEFMT),EN^DDIOL(LRBELIN,"",LRBEFMT)
"RTN","LRBEBA",145,0)
 Q
"RTN","LRBEBA",146,0)
 ;
"RTN","LRBEBA",147,0)
BAWRK(LRODT,LRSN,LRI,LRBEY,LRTEST,LRBEDEL,LRBEVST,LRBEROLL,ORIEN) ; Send the Billing Information to PCE
"RTN","LRBEBA",148,0)
 ;input LRBEROLL = 1, if processing from routine LRBEBA5 for roll-up to PCE
"RTN","LRBEBA",149,0)
 ;input ORIEN = OERR Order #; only passed from WORK^LRBEBA4
"RTN","LRBEBA",150,0)
 Q:$G(LRCHG)=1
"RTN","LRBEBA",151,0)
 K ^TMP("LRPXAPI",$J),LRBEAR,LRBEAR1,LRBECPT
"RTN","LRBEBA",152,0)
 N D0,DA,DIC,DIE,DIR,I,T,X1,X2,X3,X9,Z,Z1,Z2,CNT,VADM,VAIN
"RTN","LRBEBA",153,0)
 N LRBETEST,LRTN,LRBESB,LRBETST,LRBEPAN,LRBEMSG,LRDBEDGX,LRBESEQ,LRNOP,LRX
"RTN","LRBEBA",154,0)
 N PXBREQ,LRVN,PXKDONE
"RTN","LRBEBA",155,0)
 I '$G(LRPKG) D
"RTN","LRBEBA",156,0)
 . S LRPKG=$$FIND1^DIC(9.4,,"B","LAB SERVICE","B","","ERR")
"RTN","LRBEBA",157,0)
 I LRPKG<1 D  Q
"RTN","LRBEBA",158,0)
 . D EN^DDIOL("PCE Error Condition -  Lab Service package not installed","","!")
"RTN","LRBEBA",159,0)
 N LRBEAR,LRBEDFN,LRBECDT,LRBEU,LRBEX,LRBEZ,LRBETYP,LRBECDT
"RTN","LRBEBA",160,0)
 N LRBENO,LRBEMOD,LROOS,LRPCECNT,LRI,X,Y,USR
"RTN","LRBEBA",161,0)
 M LRBETEST=LRTEST
"RTN","LRBEBA",162,0)
 M LRBESB=LRSB
"RTN","LRBEBA",163,0)
 S LROOS=$$GET1^DIQ(68,LRAA,.8,"I") I 'LROOS S LROOS=$$GET1^DIQ(69.9,1,.8,"I")
"RTN","LRBEBA",164,0)
 S LRBEMOD=$$GMOD^LRBEBA2(LRAA)
"RTN","LRBEBA",165,0)
 S LRBEDEL=$G(LRBEDEL)
"RTN","LRBEBA",166,0)
 I $G(LRDFN) S:'$G(DFN) DFN=$$GET1^DIQ(63,LRDFN_",",.03,"I")
"RTN","LRBEBA",167,0)
 S LRBEDFN=DFN
"RTN","LRBEBA",168,0)
 S:'$G(LRBEVST) LRBEVST=$P($G(^LRO(69,LRODT,1,LRSN,"PCE")),";")
"RTN","LRBEBA",169,0)
 S (LRBECDT,LRBEDT)=$J($$GET1^DIQ(69.01,LRSN_","_LRODT_",",10,"I"),7,4)
"RTN","LRBEBA",170,0)
 S I=0 F  S I=$O(LRBETEST(I)) Q:I<1  D
"RTN","LRBEBA",171,0)
 . S LRBETST=$P(LRBETEST(I),U,1)
"RTN","LRBEBA",172,0)
 . S LRTN=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRBETST,0))
"RTN","LRBEBA",173,0)
 . I LRTN D SDOS(LRODT,LRSN,LRTN,LRBECDT)
"RTN","LRBEBA",174,0)
 G:$G(LRBENO) KILL
"RTN","LRBEBA",175,0)
 D BLDAR^LRBEBA3(LRBEDFN,LRODT,LRSN,.LRBEAR,.LRBEY,.LRBETEST,.LRBEPAN,LRBEDEL) G:$G(LRBENO) KILL
"RTN","LRBEBA",176,0)
 D STDN^LRBEBA2(LRODT,LRSN,.LRBETEST,.LRBEY) G:$G(LRBENO) KILL
"RTN","LRBEBA",177,0)
 D SOP^LRBEBA2(LRBEDFN,.LRBESB,.LRBEY,.LRBEPAN,$G(LRBEROLL)) G:$G(LRBENO) KILL
"RTN","LRBEBA",178,0)
 I $D(LRBECPT)>1 D
"RTN","LRBEBA",179,0)
 .D OPORD^LRBEBAO Q:$G(LRBENO)
"RTN","LRBEBA",180,0)
 .D OPRES^LRBEBAO(.LRBEAR,.LRBEAR1,LRODT,LRSN,LRBEVST)
"RTN","LRBEBA",181,0)
KILL ;
"RTN","LRBEBA",182,0)
 K ^TMP("LRPXAPI",$J)
"RTN","LRBEBA",183,0)
 K LRPKG,LRBEDIA,LRBEVSIT,LRBEAR,LRBEAR1,LRBEDEL,LRBEDT,LRBEPOS
"RTN","LRBEBA",184,0)
 K LRBEIEN,LRBEMOD,LRBEPTDT,LRBETM,LRBEDN,LRBESMP,LRBESPC,LRBEDGX,LRBEVST,LROOS,LRBERES
"RTN","LRBEBA",185,0)
 K ERRDIS,INROOT,SRC,SUB1,SUB2,SUB3,USR
"RTN","LRBEBA",186,0)
 I '$G(LRBEROLL) K LRBECPT,LRBEY
"RTN","LRBEBA",187,0)
 Q
"RTN","LRBEBA",188,0)
 ;
"RTN","LRBEBA",189,0)
GEDT(LRODT,LRSN,LRBETST) ; Get the Date of Service
"RTN","LRBEBA",190,0)
 N X,Y,LRBEIEN,DIC,LRBEEDT
"RTN","LRBEBA",191,0)
 S LRBEEDT=""
"RTN","LRBEBA",192,0)
 S X=$$GET1^DIQ(60,LRBETST_",",.01)
"RTN","LRBEBA",193,0)
 S DIC="^LRO(69,"_LRODT_",1,"_LRSN_",2,"
"RTN","LRBEBA",194,0)
 S DIC(0)="Z" D ^DIC I +Y<0 K DIC Q 0
"RTN","LRBEBA",195,0)
 S LRBEIEN=+Y_","_LRSN_","_LRODT_","
"RTN","LRBEBA",196,0)
 S LRBEEDT=$$GET1^DIQ(69.03,LRBEIEN,22,"I")
"RTN","LRBEBA",197,0)
 Q LRBEEDT
"RTN","LRBEBA",198,0)
 ;
"RTN","LRBEBA",199,0)
GCDT(LRODT,LRSN) ; Get the collection date/time
"RTN","LRBEBA",200,0)
 N LRBECDT,LRBEIEN
"RTN","LRBEBA",201,0)
 S LRBECDT=""
"RTN","LRBEBA",202,0)
 S LRBEIEN=LRSN_","_LRODT_","
"RTN","LRBEBA",203,0)
 S LRBECDT=$$GET1^DIQ(69.01,LRBEIEN,10,"I")
"RTN","LRBEBA",204,0)
 Q LRBECDT
"RTN","LRBEBA2")
0^2^B74544434^B78928949
"RTN","LRBEBA2",1,0)
LRBEBA2 ;DALOI/JAH/FHS - ORDERING AND RESULTING OUTPATIENT ;8/10/04
"RTN","LRBEBA2",2,0)
 ;;5.2;LAB SERVICE;**291,359,352**;Sep 27, 1994;Build 1
"RTN","LRBEBA2",3,0)
 ;
"RTN","LRBEBA2",4,0)
DG1(LRBESTG) ; Set the DG1 segment into the ^TMP
"RTN","LRBEBA2",5,0)
 N LRBEDGX,LRBETNUM
"RTN","LRBEBA2",6,0)
 S LRBETNUM=$O(^TMP("OR",$J,"LROT",STARTDT,TYPE,SAMP,SPEC,LRSX,"LRBEDGX",""),-1)
"RTN","LRBEBA2",7,0)
 S LRBETNUM=$G(LRBETNUM)+1
"RTN","LRBEBA2",8,0)
 S LRBEDGX=$P($P(LRBESTG,"|",4),"^",1)
"RTN","LRBEBA2",9,0)
 S ^TMP("OR",$J,"LROT",STARTDT,TYPE,SAMP,SPEC,LRSX,"LRBEDGX",LRBETNUM)=LRBEDGX
"RTN","LRBEBA2",10,0)
 Q
"RTN","LRBEBA2",11,0)
ZCL(LRBESTG) ; Set the ZCL segment into the ^TMP
"RTN","LRBEBA2",12,0)
 N LRBEX,LRBETNUM,LRBEIND
"RTN","LRBEBA2",13,0)
 S LRBETNUM=$O(^TMP("OR",$J,"LROT",STARTDT,TYPE,SAMP,SPEC,LRSX,"LRBEDGX",""),-1)
"RTN","LRBEBA2",14,0)
 S LRBEX=$P(LRBESTG,"|",3),LRBEIND=$P(LRBESTG,"|",4)
"RTN","LRBEBA2",15,0)
 S $P(^TMP("OR",$J,"LROT",STARTDT,TYPE,SAMP,SPEC,LRSX,"LRBEDGX",LRBETNUM),U,LRBEX+1)=LRBEIND
"RTN","LRBEBA2",16,0)
 Q
"RTN","LRBEBA2",17,0)
 ;
"RTN","LRBEBA2",18,0)
SDGX69(J,LRBEIEN) ; Set the diagnosis into #69
"RTN","LRBEBA2",19,0)
 N LRBEDGX,LRBEFIL,LRFDA,LRFDAIEN,LRBESEQ,LRBEPTDT,LRBEIEN2
"RTN","LRBEBA2",20,0)
 S LRBESEQ="",LRBEFIL=69.05
"RTN","LRBEBA2",21,0)
 F  S LRBESEQ=$O(^TMP("OR",$J,"LROT",LRSDT,LRXZ,LRSAMP,LRSPEC,J,"LRBEDGX",LRBESEQ)) Q:LRBESEQ=""  D
"RTN","LRBEBA2",22,0)
 .S LRBEPTDT=$G(^TMP("OR",$J,"LROT",LRSDT,LRXZ,LRSAMP,LRSPEC,J,"LRBEDGX",LRBESEQ))
"RTN","LRBEBA2",23,0)
 .S LRBEIEN2=LRBESEQ_","_LRBEIEN
"RTN","LRBEBA2",24,0)
 .I '$D(^LRO(69,LRODT,1,LRSN,2,$P(LRBEIEN,",",1),2,"B",$P(LRBEPTDT,U,1))) S LRBEIEN2="+"_LRBEIEN2
"RTN","LRBEBA2",25,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,.01)=$P(LRBEPTDT,U,1),LRFDAIEN(LRBESEQ)=LRBESEQ
"RTN","LRBEBA2",26,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,1)=$P(LRBEPTDT,U,4)   ;SC
"RTN","LRBEBA2",27,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,2)=$P(LRBEPTDT,U,8)   ;CV
"RTN","LRBEBA2",28,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,3)=$P(LRBEPTDT,U,2)   ;AO
"RTN","LRBEBA2",29,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,4)=$P(LRBEPTDT,U,3)   ;IR
"RTN","LRBEBA2",30,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,5)=$P(LRBEPTDT,U,5)   ;SWAC
"RTN","LRBEBA2",31,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,6)=$P(LRBEPTDT,U,6)   ;MST
"RTN","LRBEBA2",32,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,7)=$P(LRBEPTDT,U,7)   ;HNC
"RTN","LRBEBA2",33,0)
 .S LRFDA(99,LRBEFIL,LRBEIEN2,9)=$P(LRBEPTDT,U,9)   ;SHAD
"RTN","LRBEBA2",34,0)
 .S:LRBESEQ=1 LRFDA(99,LRBEFIL,LRBEIEN2,8)=1         ;Is Primary?
"RTN","LRBEBA2",35,0)
 D UPDATE^DIE("","LRFDA(99)","LRFDAIEN","LRERR")
"RTN","LRBEBA2",36,0)
 Q
"RTN","LRBEBA2",37,0)
 ;
"RTN","LRBEBA2",38,0)
GDG1(LRODT,SN,IFN) ; diagnosis and indicators back to CPRS
"RTN","LRBEBA2",39,0)
 N LRBECNT,LRBEDGX,LRBESEQ,LRBEPTDT
"RTN","LRBEBA2",40,0)
 S LRBECNT=2
"RTN","LRBEBA2",41,0)
 S LRBESEQ=0 F  S LRBESEQ=$O(^LRO(69,LRODT,1,SN,2,IFN,2,LRBESEQ)) Q:LRBESEQ<1  D
"RTN","LRBEBA2",42,0)
 .S LRBEPTDT=$G(^LRO(69,LRODT,1,SN,2,IFN,2,LRBESEQ,0))
"RTN","LRBEBA2",43,0)
 .Q:'$G(LRBEPTDT)
"RTN","LRBEBA2",44,0)
 .S:$P(LRBEPTDT,"^",9)=1 ^TMP("LRX",$J,69,IFN,"LRBEDGX",1)=LRBEPTDT
"RTN","LRBEBA2",45,0)
 .S:$P(LRBEPTDT,"^",9)'=1 ^TMP("LRX",$J,69,IFN,"LRBEDGX",LRBECNT)=LRBEPTDT,LRBECNT=LRBECNT+1
"RTN","LRBEBA2",46,0)
 Q
"RTN","LRBEBA2",47,0)
 ;
"RTN","LRBEBA2",48,0)
SDG1(IFN,CTR,LRBEMSG) ; Setup the DG1 segment For CPRS
"RTN","LRBEBA2",49,0)
 N LRBEX,LRBEDGX,LRBEIEN,LRBESEQ,LRBEPTDT,LRBEXMSG
"RTN","LRBEBA2",50,0)
 S LRBESEQ="" F  S LRBESEQ=$O(^TMP("LRX",$J,69,IFN,"LRBEDGX",LRBESEQ)) Q:LRBESEQ=""  D
"RTN","LRBEBA2",51,0)
 .S LRBEPTDT=$G(^TMP("LRX",$J,69,IFN,"LRBEDGX",LRBESEQ))
"RTN","LRBEBA2",52,0)
 .S LRBEDGX=$$GET1^DIQ(80,$P(LRBEPTDT,U,1)_",",.01,"I")
"RTN","LRBEBA2",53,0)
 .S LRBEXMSG=$$GET1^DIQ(80,$P(LRBEPTDT,U,1)_",",3,"I")
"RTN","LRBEBA2",54,0)
 .S LRBEX=$P(LRBEPTDT,U,1)_"^"_LRBEXMSG_"^80^"_LRBEDGX_"^"_LRBEXMSG_"^ICD9"
"RTN","LRBEBA2",55,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="DG1|"_LRBESEQ_"||"_LRBEX_"|||||||||||||"
"RTN","LRBEBA2",56,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|1|"_$P(LRBEPTDT,U,4)
"RTN","LRBEBA2",57,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|2|"_$P(LRBEPTDT,U,5)
"RTN","LRBEBA2",58,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|3|"_$P(LRBEPTDT,U,2)
"RTN","LRBEBA2",59,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|4|"_$P(LRBEPTDT,U,6)
"RTN","LRBEBA2",60,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|5|"_$P(LRBEPTDT,U,7)
"RTN","LRBEBA2",61,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|6|"_$P(LRBEPTDT,U,8)
"RTN","LRBEBA2",62,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|7|"_$P(LRBEPTDT,U,3)
"RTN","LRBEBA2",63,0)
 .S CTR=CTR+1,@LRBEMSG@(CTR)="ZCL|"_LRBESEQ_"|8|"_$P(LRBEPTDT,U,10)
"RTN","LRBEBA2",64,0)
 Q
"RTN","LRBEBA2",65,0)
 ;
"RTN","LRBEBA2",66,0)
GMOD(LRBEAA,LRBECPT) ; Get external service modifier
"RTN","LRBEBA2",67,0)
 ;input LRBECPT - ien to #81, not required
"RTN","LRBEBA2",68,0)
 N LRBEMOD
"RTN","LRBEBA2",69,0)
 S LRBECPT=$G(LRBECPT)
"RTN","LRBEBA2",70,0)
 S LRBEMOD=$$GMOD^LRBEBA21(LRBEAA,LRBECPT)
"RTN","LRBEBA2",71,0)
 Q LRBEMOD
"RTN","LRBEBA2",72,0)
 ;
"RTN","LRBEBA2",73,0)
SACC(LRODT,LRSN,LRTN,LRSAMP,LRSPEC,LRTSTS,LRBEX) ; Set Accession 
"RTN","LRBEBA2",74,0)
 N LRBEZ
"RTN","LRBEBA2",75,0)
 D CARR(.LRBEX,.LRBEZ,LRSAMP,LRSPEC,LRTSTS)
"RTN","LRBEBA2",76,0)
 D SDG1^LRBEBA(LRODT,LRSN,LRTN,LRSAMP,LRSPEC,LRTSTS,.LRBEZ)
"RTN","LRBEBA2",77,0)
 Q
"RTN","LRBEBA2",78,0)
 ;
"RTN","LRBEBA2",79,0)
CARR(LRBEAR,LRBEARR,LRBESAMP,LRBESPEC,LRTSTS) ; Change the array to only
"RTN","LRBEBA2",80,0)
 ; the specimen that needs to go
"RTN","LRBEBA2",81,0)
 N LRBEDFN,LRBETS,LRBESMP,LRBESPC
"RTN","LRBEBA2",82,0)
 M LRBEARR=LRBEAR
"RTN","LRBEBA2",83,0)
 I '$D(DFN) S LRBEDFN=$$GET1^DIQ(63,LRDFN,.03,"I")
"RTN","LRBEBA2",84,0)
 S:$D(DFN) LRBEDFN=DFN
"RTN","LRBEBA2",85,0)
 S LRBESMP=""
"RTN","LRBEBA2",86,0)
 F  S LRBESMP=$O(LRBEARR(LRBEDFN,"LRBEDGX",LRBESMP)) Q:LRBESMP=""  D
"RTN","LRBEBA2",87,0)
 .I LRBESAMP'=LRBESMP D  Q
"RTN","LRBEBA2",88,0)
 ..K LRBEARR(LRBEDFN,"LRBEDGX",LRBESMP)
"RTN","LRBEBA2",89,0)
  .S LRBESPC=""
"RTN","LRBEBA2",90,0)
 .F  S LRBESPC=$O(LRBEARR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC)) Q:LRBESPC=""  D
"RTN","LRBEBA2",91,0)
 ..I LRBESPEC'=LRBESPC D  Q
"RTN","LRBEBA2",92,0)
 ...K LRBEARR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC)
"RTN","LRBEBA2",93,0)
 ..S LRBETS=""
"RTN","LRBEBA2",94,0)
 ..F  S LRBETS=$O(LRBEARR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETS)) Q:LRBETS=""  D
"RTN","LRBEBA2",95,0)
 ...I LRBETS'=LRTSTS K LRBEARR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETS)
"RTN","LRBEBA2",96,0)
 Q
"RTN","LRBEBA2",97,0)
 ;
"RTN","LRBEBA2",98,0)
BLDAR(LRBEDFN,LRODT,LRSN,LRTN,LRBESMP,LRBESPC,LRBETST,LRBEAR) ; Build array
"RTN","LRBEBA2",99,0)
 ;                                     with diagnosis and indicator info
"RTN","LRBEBA2",100,0)
 K LRBEMSG,LRBESEQ,LRBEPTDT,LRBEODT,LRBEDMSG,LRDBEDGX,LRD
"RTN","LRBEBA2",101,0)
 S LRBEODT=$P(LRODT,"."),LRBEPTDT=""
"RTN","LRBEBA2",102,0)
 S LRTN=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRBETST,0))
"RTN","LRBEBA2",103,0)
 Q:'$G(LRTN)
"RTN","LRBEBA2",104,0)
 S LRBESEQ=0 F  S LRBESEQ=$O(^LRO(69,LRODT,1,LRSN,2,LRTN,2,LRBESEQ)) Q:LRBESEQ<1  D
"RTN","LRBEBA2",105,0)
 . I LRBESEQ,$D(^LRO(69,LRODT,1,LRSN,2,LRTN,2,LRBESEQ,0)) S LRD=^(0) D
"RTN","LRBEBA2",106,0)
 . . S LRBEMSG=+LRD_"^^^"_$P(LRD,U,4)_U_$P(LRD,U,5)_U_$P(LRD,U,2)
"RTN","LRBEBA2",107,0)
 . . S LRBEMSG=LRBEMSG_U_$P(LRD,U,6)_U_$P(LRD,U,7)_U_$P(LRD,U,8)
"RTN","LRBEBA2",108,0)
 . . S LRBEMSG=LRBEMSG_U_$P(LRD,U,3)_U_$P(LRD,U,10)_U_$P(LRD,U,9)
"RTN","LRBEBA2",109,0)
 . . S LRBEDGX=+LRD
"RTN","LRBEBA2",110,0)
 . S LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETST,LRBEDGX)=LRBEMSG
"RTN","LRBEBA2",111,0)
 ;if test has no dx, sc/ei, then find default dx, sc/ei
"RTN","LRBEBA2",112,0)
 S LRBESEQ=$O(^LRO(69,LRODT,1,LRSN,2,LRTN,2,0)) I 'LRBESEQ D
"RTN","LRBEBA2",113,0)
 . D DEFAULT^LRBEBA4 Q:$G(LRBENO)
"RTN","LRBEBA2",114,0)
 . Q:'$G(LRDBEDGX)
"RTN","LRBEBA2",115,0)
 . S LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETST,LRDBEDGX)=LRBEDMSG
"RTN","LRBEBA2",116,0)
 N LRTNX,LRI,LRTNXID
"RTN","LRBEBA2",117,0)
 D BLDAR2(LRBETST,LRBETST,LRBESMP,LRBESPC)
"RTN","LRBEBA2",118,0)
 S LRI=0 F  S LRI=$O(^LAB(60,LRBETST,2,LRI)) Q:LRI<1  D
"RTN","LRBEBA2",119,0)
 . S LRTNX=+$G(^LAB(60,LRBETST,2,LRI,0)) Q:'LRTNX
"RTN","LRBEBA2",120,0)
 . S LRTNXID=$P($P(^LAB(60,LRTNX,0),U,5),";",2)
"RTN","LRBEBA2",121,0)
 . I LRTNXID="" D BLDAR2(LRBETST,LRTNX,LRBESMP,LRBESPC)
"RTN","LRBEBA2",122,0)
 Q
"RTN","LRBEBA2",123,0)
 ;
"RTN","LRBEBA2",124,0)
BLDAR2(LRBETST,XTEST,LRBESMP,LRBESPC) ;
"RTN","LRBEBA2",125,0)
 N LRTNX,LRI,DGX,LRX
"RTN","LRBEBA2",126,0)
 S LRI=0
"RTN","LRBEBA2",127,0)
 F  S LRI=$O(^LAB(60,XTEST,2,LRI)) Q:LRI<1  D
"RTN","LRBEBA2",128,0)
 . S LRTNX=+$G(^LAB(60,XTEST,2,LRI,0)) Q:'LRTNX  D
"RTN","LRBEBA2",129,0)
 . . S DGX=0 F  S DGX=$O(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETST,DGX)) Q:DGX<1  D
"RTN","LRBEBA2",130,0)
 . . . S LRX=$G(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETST,DGX))
"RTN","LRBEBA2",131,0)
 . . . Q:'LRX
"RTN","LRBEBA2",132,0)
 . . . S LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRTNX,DGX)=LRX
"RTN","LRBEBA2",133,0)
 Q
"RTN","LRBEBA2",134,0)
 ;
"RTN","LRBEBA2",135,0)
STDN(LRODT,LRBESN,LRBETEST,LRBEAR1) ;  Test and Data Number
"RTN","LRBEBA2",136,0)
 N LRBEA,LRBEB,LRBEC,LRBED,LRBEDX,LRBEPTDT,X,Y
"RTN","LRBEBA2",137,0)
 S LRBEA="" F  S LRBEA=$O(LRBETEST(LRBEA)) Q:LRBEA=""  D
"RTN","LRBEBA2",138,0)
 .S DIC="^LRO(69,"_LRODT_","_1_","_LRBESN_","_"2,",DIC(0)="MZ"
"RTN","LRBEBA2",139,0)
 .S X=$P(LRBETEST(LRBEA),U,2) D ^DIC K DIC I +Y<1 Q
"RTN","LRBEBA2",140,0)
 .S LRBEB=0 F  S LRBEB=$O(^LRO(69,LRODT,1,LRBESN,2,+Y,2,"B",LRBEB)) Q:LRBEB<1  D
"RTN","LRBEBA2",141,0)
 ..S LRBEC=0 F  S LRBEC=$O(^LRO(69,LRODT,1,LRBESN,2,+Y,2,"B",LRBEB,LRBEC)) Q:'LRBEC  D
"RTN","LRBEBA2",142,0)
 ...S LRBED="" F  S LRBED=$O(LRBEAR1($P(LRBETEST(LRBEA),U,1),LRBED)) Q:LRBED=""  D
"RTN","LRBEBA2",143,0)
 ....S LRBEAR1($P(LRBETEST(LRBEA),U,1),LRBED,LRBEC)=LRBEB
"RTN","LRBEBA2",144,0)
 Q
"RTN","LRBEBA2",145,0)
 ;
"RTN","LRBEBA2",146,0)
SOP(LRBEDFN,LRBESB,LRBEAR1,LRBEPAN,LRBEROLL) ;Outpatient Resulting 
"RTN","LRBEBA2",147,0)
 ; Information in CIDC Array
"RTN","LRBEBA2",148,0)
 N DIC,LRBEDN,LRBESTG,LRBEDGX,LRBEEDT,LRBEEPRO,LRBEOPRO,LRBEQTY,LRBETST
"RTN","LRBEBA2",149,0)
 N LRBEPOS,LRORREFN,LRBE21
"RTN","LRBEBA2",150,0)
 ;LRBERES=Resend PCE date flag
"RTN","LRBEBA2",151,0)
 K LRBECPT S (LRBECPT,LRBEEDT,LRBEEPRO,LRBEOPRO,LRBEQTY,LRORREFN)=""
"RTN","LRBEBA2",152,0)
 S LRBEEPRO=$$GEPRO^LRBEBA4(LRAA),LRBEOPRO=$$GOPRO^LRBEBA4(LRODT,LRSN)
"RTN","LRBEBA2",153,0)
 S LRBETST=0 F  S LRBETST=$O(LRBEAR1(LRBETST)) Q:'LRBETST  D
"RTN","LRBEBA2",154,0)
 . S LRBE21=0
"RTN","LRBEBA2",155,0)
 . ;process AMA/billable panel CPT codes
"RTN","LRBEBA2",156,0)
 . I $D(LRBEPAN(LRBETST)) D EN^LRBEBA21(.LRBE21)
"RTN","LRBEBA2",157,0)
 . ;otherwise process atomic test(s) CPT codes
"RTN","LRBEBA2",158,0)
 . I 'LRBE21 D
"RTN","LRBEBA2",159,0)
 . . S LRY=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRBETST,0))
"RTN","LRBEBA2",160,0)
 . . Q:'LRY
"RTN","LRBEBA2",161,0)
 . . S LRY=LRY_","_LRSN_","_LRODT_","
"RTN","LRBEBA2",162,0)
 . . Q:$$GET1^DIQ(69.03,LRY,10,"I")
"RTN","LRBEBA2",163,0)
 . . I $G(ORIEN),$$GET1^DIQ(69.03,LRY,6,"I")'=ORIEN Q
"RTN","LRBEBA2",164,0)
 . . S LRBECDT=$$GET1^DIQ(69.03,LRY,22,"I")
"RTN","LRBEBA2",165,0)
 . . Q:'LRBECDT
"RTN","LRBEBA2",166,0)
 . . S LRBEDN="" F  S LRBEDN=$O(LRBEAR1(LRBETST,LRBEDN)) Q:LRBEDN=""  D SOP2
"RTN","LRBEBA2",167,0)
 . . I $D(LRBECPT)=11 S LRFDA(1,69.03,LRY,11)=1 D FILE^DIE("KS","LRFDA(1)","ERR")
"RTN","LRBEBA2",168,0)
 Q
"RTN","LRBEBA2",169,0)
 ;
"RTN","LRBEBA2",170,0)
SOP2 ;Process atomic test CPT code
"RTN","LRBEBA2",171,0)
 N OUT,LRBETSTX
"RTN","LRBEBA2",172,0)
 I $G(LRBESB(LRBEDN))'="" D
"RTN","LRBEBA2",173,0)
 . I $P(LRBESB(LRBEDN),U)="pending" Q
"RTN","LRBEBA2",174,0)
 . I $P(LRBESB(LRBEDN),U)="canc" Q
"RTN","LRBEBA2",175,0)
 . I '$G(LRBERES) Q:$P($G(LRBESB(LRBEDN)),U,13)
"RTN","LRBEBA2",176,0)
 . S LRBEQTY=1
"RTN","LRBEBA2",177,0)
 . D GPRO^LRBEBA4(LRBEDN,LRBECDT,LRSPEC,.LRBETSTX) I $G(LRBETSTX),$O(LRBECPT(LRBETSTX,0)) D
"RTN","LRBEBA2",178,0)
 . . D GOREF^LRBEBA21(LRODT,LRSN,LRBEDN,.LRBEAR1,.LRORREFN)
"RTN","LRBEBA2",179,0)
 . . S OUT=0 I $G(LRDFN),$G(LRIDT),$D(^LR(LRDFN,LRSS,LRIDT,$G(LRBEDN))) D
"RTN","LRBEBA2",180,0)
 . . . ;test already sent to PCE
"RTN","LRBEBA2",181,0)
 . . . I '$G(LRBERES) S OUT=$P(^LR(LRDFN,LRSS,LRIDT,$G(LRBEDN)),U,13) Q:OUT
"RTN","LRBEBA2",182,0)
 . . . ;otherwise, mark it as sent to PCE
"RTN","LRBEBA2",183,0)
 . . . S $P(^LR(LRDFN,LRSS,LRIDT,$G(LRBEDN)),U,13)=1
"RTN","LRBEBA2",184,0)
 . . ;don't continue if test already sent to PCE and not re-sending from WORK^LRBEBA4
"RTN","LRBEBA2",185,0)
 . . Q:OUT
"RTN","LRBEBA2",186,0)
 . . S LRI=0 F  S LRI=$O(LRBECPT(LRBETSTX,LRI)) Q:LRI<1  D
"RTN","LRBEBA2",187,0)
 . . . S LRBECPT=$O(LRBECPT(LRBETSTX,LRI,0))
"RTN","LRBEBA2",188,0)
 . . . S LRBEMOD=$$GMOD^LRBEBA2(LRAA,LRBECPT)
"RTN","LRBEBA2",189,0)
 . . . S LRBEPOS=$$GPOS(.LRBESB,LRBEDN)
"RTN","LRBEBA2",190,0)
 . . . D GDGX^LRBEBA21(LRBETST,LRBEDN,.LRBEAR,.LRBEAR1,.LRBEDGX)
"RTN","LRBEBA2",191,0)
 . . . S LRBESTG=LRBECPT_U_LRBEMOD_U_$G(LRBEDGX(LRBETST,1))_U_$G(LRBEDGX(LRBETST,2))_U_$G(LRBEDGX(LRBETST,3))
"RTN","LRBEBA2",192,0)
 . . . S LRBESTG=LRBESTG_U_$G(LRBEDGX(LRBETST,4))_U_LRBECDT_U_LRBEEPRO_U_LRBEOPRO_U_LRBEQTY_U_LRBEPOS
"RTN","LRBEBA2",193,0)
 . . . S LRBESTG=LRBESTG_U_$G(LRBEDGX(LRBETST,5))_U_$G(LRBEDGX(LRBETST,6))_U_$G(LRBEDGX(LRBETST,7))
"RTN","LRBEBA2",194,0)
 . . . S LRBESTG=LRBESTG_U_$G(LRBEDGX(LRBETST,8))_U_LRORREFN
"RTN","LRBEBA2",195,0)
 . . . I $G(LRBECPT(LRBETSTX,LRI,LRBECPT,"COUNT")) S $P(LRBESTG,U,20)=LRBECPT(LRBETSTX,LRI,LRBECPT,"COUNT")+1
"RTN","LRBEBA2",196,0)
 . . . S LRBEAR(LRBEDFN,"LRBEDGX",LRI,LRBEDN)=LRBESTG
"RTN","LRBEBA2",197,0)
 Q
"RTN","LRBEBA2",198,0)
 ;
"RTN","LRBEBA2",199,0)
GPOS(LRBESB,LRBEDN) ; Get the Place of Service
"RTN","LRBEBA2",200,0)
 Q $P($G(LRBESB(LRBEDN)),U,9)
"RTN","LRBEBA2",201,0)
 ;
"RTN","LRBEBA2",202,0)
SLROT(LRXST,LRTEST,LRBEOT) ;
"RTN","LRBEBA2",203,0)
 D SLROT^LRBEBA3(.LRXST,.LRTEST,.LRBEOT)
"RTN","LRBEBA2",204,0)
 Q
"RTN","LRBEBA3")
0^3^B64272559^B62466006
"RTN","LRBEBA3",1,0)
LRBEBA3 ;DALOI/JAH/FHS - ORDERING AND RESULTING OUTPATIENT ;8/10/04
"RTN","LRBEBA3",2,0)
 ;;5.2;LAB SERVICE;**291,359,352**;Sep 27, 1994;Build 1
"RTN","LRBEBA3",3,0)
 ;
"RTN","LRBEBA3",4,0)
BLDAR(LRBEDFN,LRODT,LRSN,LRBEAR,LRBEY,LRBETEST,LRBEPAN,LRBEDEL) ; Build LRBEAR array with
"RTN","LRBEBA3",5,0)
 ; CIDC information
"RTN","LRBEBA3",6,0)
 N LRBEODT,LRBEIEN,LRBETST,LRBETS,LRJ,N,NX,P,X,XX,REQX,OK
"RTN","LRBEBA3",7,0)
 S LRBEAR(LRBEDFN,"DSS ID")=LROOS
"RTN","LRBEBA3",8,0)
 S LRBEAR(LRBEDFN,"ORDGX")="O"
"RTN","LRBEBA3",9,0)
 S LRBEAR(LRBEDFN,"DOS")=LRBECDT
"RTN","LRBEBA3",10,0)
 S LRBEAR(LRBEDFN,"PAT")=$G(LRBEDFN)
"RTN","LRBEBA3",11,0)
 S LRBEAR(LRBEDFN,"POS")=LROOS
"RTN","LRBEBA3",12,0)
 S LRBEAR(LRBEDFN,"DEL")=LRBEDEL
"RTN","LRBEBA3",13,0)
 S LRBEAR(LRBEDFN,"USR")=DUZ
"RTN","LRBEBA3",14,0)
 S LRBEIEN=LRSN_","_LRODT_","
"RTN","LRBEBA3",15,0)
 S LRBEAR(LRBEDFN,"ORDPRO")=$$GET1^DIQ(69.01,LRBEIEN,7,"I")
"RTN","LRBEBA3",16,0)
 S:'+$G(LRSAMP) LRSAMP=$$GET1^DIQ(69.01,LRBEIEN,3,"I")
"RTN","LRBEBA3",17,0)
 ;reset LRBETEST, LRBEY for panel tests
"RTN","LRBEBA3",18,0)
 S LRBETS="" F  S LRBETS=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRBETS)) Q:'LRBETS  D
"RTN","LRBEBA3",19,0)
 .S LRJ=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRBETS,0))
"RTN","LRBEBA3",20,0)
 .Q:($P(^LRO(69,LRODT,1,LRSN,2,LRJ,0),U,9)="CA")
"RTN","LRBEBA3",21,0)
 .I $G(ORIEN),$P(^LRO(69,LRODT,1,LRSN,2,LRJ,0),U,7)'=ORIEN Q
"RTN","LRBEBA3",22,0)
 .I ($G(^LAB(60,LRBETS,12))),($D(^LAB(60,LRBETS,0))#2),'$L($P($G(^LAB(60,LRBETS,0)),U,5)) S LRBEPAN(LRBETS)=""
"RTN","LRBEBA3",23,0)
 .S OK=0,N=0 F  S N=$O(LRBETEST(N)) Q:'N  I LRBETS=+LRBETEST(N) S OK=1
"RTN","LRBEBA3",24,0)
 .I 'OK S N=$O(LRBETEST(""),-1),N=N+1,LRBETEST(N)=LRBETS_U_^LAB(60,LRBETS,0),LRBETEST(N,"P")=LRBETS_U_$$NLT^LRVER1(LRBETS)
"RTN","LRBEBA3",25,0)
 .S NX=0 F  S NX=$O(^LAB(60,LRBETS,2,NX)) Q:'NX  D
"RTN","LRBEBA3",26,0)
 ..S X=+^LAB(60,LRBETS,2,NX,0)
"RTN","LRBEBA3",27,0)
 ..S XX=$P($P(^LAB(60,X,0),U,5),";",2),REQX=$P(^(0),U,17)
"RTN","LRBEBA3",28,0)
 ..I XX,$D(LRBESB(XX)) S P(LRBETS,XX,X)=""
"RTN","LRBEBA3",29,0)
 ..I XX,$D(LRBEPAN(LRBETS)),REQX S P(LRBETS,XX,X)="R"
"RTN","LRBEBA3",30,0)
 ..;if XX null, then possibly another panel
"RTN","LRBEBA3",31,0)
 ..I 'XX D PARRAY(X,LRBETS,.P)
"RTN","LRBEBA3",32,0)
 .;reset LRBEY array;
"RTN","LRBEBA3",33,0)
 .;1st subscript is panel test; 2nd subscript is data identifier of atomic test
"RTN","LRBEBA3",34,0)
 .I $D(P(LRBETS)) D
"RTN","LRBEBA3",35,0)
 ..;retain original LRBEY array node if atomic test exists as a separate accession
"RTN","LRBEBA3",36,0)
 ..I '$D(^LRO(68,$G(LRAA),1,$G(LRAD),1,$G(LRAN),4,LRBETS,0)) K LRBEY(LRBETS)
"RTN","LRBEBA3",37,0)
 ..S XX=0 F  S XX=$O(P(LRBETS,XX)) Q:'XX  D
"RTN","LRBEBA3",38,0)
 ...S LRBEY(LRBETS,XX)=""
"RTN","LRBEBA3",39,0)
 ...S X=$O(P(LRBETS,XX,0))
"RTN","LRBEBA3",40,0)
 ...I P(LRBETS,XX,X)="R" S LRBEY(LRBETS,XX,"R")=X
"RTN","LRBEBA3",41,0)
 ;continue
"RTN","LRBEBA3",42,0)
 S LRBETS="" F  S LRBETS=$O(LRBETEST(LRBETS)) Q:LRBETS=""  D
"RTN","LRBEBA3",43,0)
 .S LRBETST=$P(LRBETEST(LRBETS),U,1)
"RTN","LRBEBA3",44,0)
 .D BLDAR^LRBEBA2(LRBEDFN,LRODT,LRSN,LRBETS,LRSAMP,LRSPEC,LRBETST,.LRBEAR)
"RTN","LRBEBA3",45,0)
 Q
"RTN","LRBEBA3",46,0)
 ;
"RTN","LRBEBA3",47,0)
PARRAY(XTEST,PTEST,P) ;
"RTN","LRBEBA3",48,0)
 N NX,X,XX,REQX
"RTN","LRBEBA3",49,0)
 S NX=0 F  S NX=$O(^LAB(60,XTEST,2,NX)) Q:'NX  D
"RTN","LRBEBA3",50,0)
 .S X=+^LAB(60,XTEST,2,NX,0)
"RTN","LRBEBA3",51,0)
 .S XX=$P($P(^LAB(60,X,0),U,5),";",2),REQX=$P(^(0),U,17)
"RTN","LRBEBA3",52,0)
 .I XX,$D(LRBESB(XX)) S P(PTEST,XX,X)=""
"RTN","LRBEBA3",53,0)
 .I XX,$D(LRBEPAN(PTEST)),REQX S P(PTEST,XX,X)="R"
"RTN","LRBEBA3",54,0)
 Q
"RTN","LRBEBA3",55,0)
 ;
"RTN","LRBEBA3",56,0)
QRYADD(LRODT,LRSN,LRTS,LRBEDFN,LRBESMP,LRBESPC,LRBETS,LRBEX,LRBEXD) ; Query #69 for
"RTN","LRBEBA3",57,0)
 ; default LRBEDGX and SC/EI
"RTN","LRBEBA3",58,0)
 N LRBEA,LRDGX,LRDX,LRDGXD
"RTN","LRBEBA3",59,0)
 S LRDGX=0
"RTN","LRBEBA3",60,0)
 F  S LRDGX=$O(^LRO(69,LRODT,1,LRSN,2,LRTS,2,LRDGX)) Q:LRDGX<1  D
"RTN","LRBEBA3",61,0)
 .S LRDGXD=2
"RTN","LRBEBA3",62,0)
 .S LRBEPTDT=$G(^LRO(69,LRODT,1,LRSN,2,LRTS,2,LRDGX,0)) Q:'LRBEPTDT
"RTN","LRBEBA3",63,0)
 .S LRBEA=$P(LRBEPTDT,U,1)_"^^^"_$P(LRBEPTDT,U,4)_U_$P(LRBEPTDT,U,5)
"RTN","LRBEBA3",64,0)
 .S LRBEA=LRBEA_U_$P(LRBEPTDT,U,2)_U_$P(LRBEPTDT,U,6)_U_$P(LRBEPTDT,U,8)
"RTN","LRBEBA3",65,0)
 .S LRBEA=LRBEA_U_$P(LRBEPTDT,U,7)_U_$P(LRBEPTDT,U,3)_U_$P(LRBEPTDT,U,10)
"RTN","LRBEBA3",66,0)
 .I $P(LRBEPTDT,U,9)=1 S LRBEA=LRBEA_U_$P(LRBEPTDT,U,9),LRDGXD=1
"RTN","LRBEBA3",67,0)
 .S LRBEX(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETS,$P(LRBEA,U))=LRBEA
"RTN","LRBEBA3",68,0)
 .S LRBEXD(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETS,LRDGXD,$P(LRBEA,U))=LRBEA
"RTN","LRBEBA3",69,0)
 Q
"RTN","LRBEBA3",70,0)
 ;
"RTN","LRBEBA3",71,0)
ELIG(DFN) ; Display eligibility and disabilities
"RTN","LRBEBA3",72,0)
 D ELIG^VADPT W !," Eligibility: "_$P(VAEL(1),"^",2)_$S(+VAEL(3):"    SC%: "_$P(VAEL(3),"^",2),1:"")
"RTN","LRBEBA3",73,0)
 W !," Disabilities: " F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  S I1=$S($D(^DPT(DFN,.372,I,0)):^(0),1:"") D:+I1
"RTN","LRBEBA3",74,0)
 .S LRDIS=$S($P($G(^DIC(31,+I1,0)),"^")]""&($P($G(^(0)),"^",4)']""):$P(^(0),"^"),$P($G(^DIC(31,+I1,0)),"^",4)]"":$P(^(0),"^",4),1:""),LRCNT=$P(I1,"^",2)
"RTN","LRBEBA3",75,0)
 .S LRDIS=$E(LRDIS,1,55)
"RTN","LRBEBA3",76,0)
 .I LRDIS]"" W ?15,LRDIS_" - "_LRCNT_"%("_$S($P(I1,"^",3):"SC",1:"NSC")_")",!
"RTN","LRBEBA3",77,0)
 K LRDIS,LRCNT,I,I1,VAEL
"RTN","LRBEBA3",78,0)
 Q
"RTN","LRBEBA3",79,0)
 ;
"RTN","LRBEBA3",80,0)
BALROW(LRODT,LRSN,LRTEST) ; CIDC LROW
"RTN","LRBEBA3",81,0)
 N LRBEA,LRBEB,LRBEAT,LRBET,LRBESN,LRBETS,LRBETST,LRBEQT,LRBEOT,LRBEVAL
"RTN","LRBEBA3",82,0)
 S LRBEVAL=$D(^XUSEC("PROVIDER",DUZ)) Q:'LRBEVAL
"RTN","LRBEBA3",83,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",84,0)
 I '$D(DFN) S LRBEDFN=$$GET1^DIQ(63,LRDFN_",",.03,"I")
"RTN","LRBEBA3",85,0)
 S:$G(LRSN)="" LRSN=1
"RTN","LRBEBA3",86,0)
 D SLROT^LRBEBA3(.LRXST,.LRTEST,.LRBEOT) S:$G(LRSS)="" LRSS="CH"
"RTN","LRBEBA3",87,0)
 S LRBEAT=1,LRBEY=$$SBA^LRBEBA31(LRDFN,.LRBEX,.LRBEQT,.LRBEOT)
"RTN","LRBEBA3",88,0)
 Q
"RTN","LRBEBA3",89,0)
 ;
"RTN","LRBEBA3",90,0)
AQ1 ; Ask question from LRORD1
"RTN","LRBEBA3",91,0)
 N LRBEVAL
"RTN","LRBEBA3",92,0)
 S LRBEVAL=$D(^XUSEC("PROVIDER",DUZ)) Q:'LRBEVAL
"RTN","LRBEBA3",93,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",94,0)
 K LRBEODT D DT^LRX S LRBEODT=%
"RTN","LRBEBA3",95,0)
 S:$G(LRSS)="" LRSS="CH"
"RTN","LRBEBA3",96,0)
 S LRBEAT=1,LRBEY=$$SBA^LRBEBA31(LRDFN,.LRBEX,.LRBEQT,.LROT)
"RTN","LRBEBA3",97,0)
 Q
"RTN","LRBEBA3",98,0)
 ;
"RTN","LRBEBA3",99,0)
AQ2 ; from LROW2A
"RTN","LRBEBA3",100,0)
 N LRBEVAL
"RTN","LRBEBA3",101,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",102,0)
 D SACC^LRBEBA2(LRODT,LRSN,LRTN,LRSSP,LRSPEC,$P(LRTEST(LRI),U,1),.LRBEX)
"RTN","LRBEBA3",103,0)
 Q
"RTN","LRBEBA3",104,0)
 ;
"RTN","LRBEBA3",105,0)
SVST(ENUM,ETYP,LRODT,LRSN) ; Set the Encounter # in #69
"RTN","LRBEBA3",106,0)
 S ^LRO(69,LRODT,1,LRSN,ETYP)=ENUM
"RTN","LRBEBA3",107,0)
 Q
"RTN","LRBEBA3",108,0)
 ;
"RTN","LRBEBA3",109,0)
BALROR(LRORD) ; CIDC LRORD
"RTN","LRBEBA3",110,0)
 N LRBEA,LRBEAT,LRBEB,LRBET,LRBESN,LRBETS,LRBETST,LRBEQT,LRBEODT
"RTN","LRBEBA3",111,0)
 N LRBEOT,LRBEVAL,LRBEZ,LRBETN
"RTN","LRBEBA3",112,0)
 S LRBEVAL=$D(^XUSEC("PROVIDER",DUZ)) Q:'LRBEVAL
"RTN","LRBEBA3",113,0)
 S LRBEVAL=$$CIDC^IBBAPI(DFN) Q:'LRBEVAL
"RTN","LRBEBA3",114,0)
 I '$D(DFN) S LRBEDFN=$$GET1^DIQ(63,LRDFN_",",.03,"I")
"RTN","LRBEBA3",115,0)
 S LRBEAT=1,LRBEY=$$SBA^LRBEBA31(LRDFN,.LRBEX,.LRBEQT,.LROT)
"RTN","LRBEBA3",116,0)
 Q
"RTN","LRBEBA3",117,0)
 ;
"RTN","LRBEBA3",118,0)
SLROT(LRXST,LRTEST,LRBEOT) ;LROT array
"RTN","LRBEBA3",119,0)
 N LRBEA,LRBESMP,LRBESPC
"RTN","LRBEBA3",120,0)
 S LRBESMP="" F  S LRBESMP=$O(LRXST(LRBESMP)) Q:LRBESMP=""  D
"RTN","LRBEBA3",121,0)
 .S LRBEA="" F  S LRBEA=$O(LRXST(LRBESMP,LRBEA)) Q:LRBEA=""  D
"RTN","LRBEBA3",122,0)
 ..S LRBESPC=$P(LRXST(LRBESMP,LRBEA),U,1)
"RTN","LRBEBA3",123,0)
 ..S LRBEOT(LRBESMP,LRBESPC,LRBEA)=$P(LRTEST(LRBEA),U,1)
"RTN","LRBEBA3",124,0)
 Q
"RTN","LRBEBA3",125,0)
 ;
"RTN","LRBEBA3",126,0)
MICRO1(LRODT,LRSN,LRTST,LRCNT) ;get CIDC data for microbiology
"RTN","LRBEBA3",127,0)
 ;called from LRCAPPH1
"RTN","LRBEBA3",128,0)
 N LRBETM
"RTN","LRBEBA3",129,0)
 N AA,DX,DXCNT,FINAL,GOPRO,GEPRO,MOD,ORD,N,X
"RTN","LRBEBA3",130,0)
 S FINAL=$$FINAL^LRBEBA3(LRODT,LRSN,LRTST)
"RTN","LRBEBA3",131,0)
 I $P(FINAL,U)=0 K ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT) Q
"RTN","LRBEBA3",132,0)
 ;continue if micro test completed
"RTN","LRBEBA3",133,0)
 S DXCNT=+$O(^TMP("LRBEDX",$J,999),-1)
"RTN","LRBEBA3",134,0)
 S LRBETM=$P($G(^LRO(69,LRODT,1,LRSN,3)),U) I 'LRBETM S LRBETM=LRODT
"RTN","LRBEBA3",135,0)
 S LRBETM=$$PCETM^LRBEBAO(LRBETM)
"RTN","LRBEBA3",136,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"EVENT D/T")=LRBETM
"RTN","LRBEBA3",137,0)
 S AA=$P($P(FINAL,";",2),U,4)
"RTN","LRBEBA3",138,0)
 S GOPRO=$$GOPRO^LRBEBA4(LRODT,LRSN)
"RTN","LRBEBA3",139,0)
 S GEPRO=$$GEPRO^LRBEBA4(AA)
"RTN","LRBEBA3",140,0)
 S ^TMP("LRPXAPI",$J,"PROVIDER",1,"NAME")=GOPRO
"RTN","LRBEBA3",141,0)
 S ^TMP("LRPXAPI",$J,"PROVIDER",1,"PRIMARY")=1
"RTN","LRBEBA3",142,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"ORD PROVIDER")=GOPRO
"RTN","LRBEBA3",143,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"ENC PROVIDER")=GEPRO
"RTN","LRBEBA3",144,0)
 S ORD=$P($P(FINAL,";",2),U,7)
"RTN","LRBEBA3",145,0)
 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"ORD REFERENCE")=ORD
"RTN","LRBEBA3",146,0)
 S ^TMP("LRBEDX",$J,"ID")=LRODT_U_LRSN
"RTN","LRBEBA3",147,0)
 S N=0 F  S N=$O(^LRO(69,LRODT,1,LRSN,2,LRTST,2,N)) Q:'N  Q:N>4  D
"RTN","LRBEBA3",148,0)
 .S X=^LRO(69,LRODT,1,LRSN,2,LRTST,2,N,0)
"RTN","LRBEBA3",149,0)
 .S DXCNT=DXCNT+1,^TMP("LRBEDX",$J,DXCNT)=X
"RTN","LRBEBA3",150,0)
 .I N=1 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"DIAGNOSIS")=$P(X,U,1)
"RTN","LRBEBA3",151,0)
 .I N>1 S ^TMP("LRPXAPI",$J,"PROCEDURE",LRCNT,"DIAGNOSIS "_N)=$P(X,U,1)
"RTN","LRBEBA3",152,0)
 Q
"RTN","LRBEBA3",153,0)
 ;
"RTN","LRBEBA3",154,0)
MICRO2(LRODT,LRSN) ;setup more CIDC data for microbiology
"RTN","LRBEBA3",155,0)
 ;called from LRCAPPH1
"RTN","LRBEBA3",156,0)
 N DXCNT,EI,EIX,X
"RTN","LRBEBA3",157,0)
 S X=$G(^TMP("LRBEDX",$J,"ID"))
"RTN","LRBEBA3",158,0)
 I ($P(X,U)'=LRODT)!($P(X,U,2)'=LRSN) Q
"RTN","LRBEBA3",159,0)
 S DXCNT=+$O(^TMP("LRBEDX",$J,999),-1)
"RTN","LRBEBA3",160,0)
 Q:'DXCNT
"RTN","LRBEBA3",161,0)
 S DXCNT=0 F  S DXCNT=$O(^TMP("LRBEDX",$J,DXCNT)) Q:'DXCNT  D
"RTN","LRBEBA3",162,0)
 .S X=^TMP("LRBEDX",$J,DXCNT)
"RTN","LRBEBA3",163,0)
 .S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"DIAGNOSIS")=$P(X,U,1)
"RTN","LRBEBA3",164,0)
 .I $P(X,U,2)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL SC")=$P(X,U,2),EIX("SC")=$G(EIX("SC"))+$P(X,U,2)
"RTN","LRBEBA3",165,0)
 .I $P(X,U,3)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL CV")=$P(X,U,3),EIX("CV")=$G(EIX("CV"))+$P(X,U,3)
"RTN","LRBEBA3",166,0)
 .I $P(X,U,4)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL AO")=$P(X,U,4),EIX("AO")=$G(EIX("AO"))+$P(X,U,4)
"RTN","LRBEBA3",167,0)
 .I $P(X,U,5)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL IR")=$P(X,U,5),EIX("IR")=$G(EIX("IR"))+$P(X,U,5)
"RTN","LRBEBA3",168,0)
 .I $P(X,U,6)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL EC")=$P(X,U,6),EIX("EC")=$G(EIX("EC"))+$P(X,U,6)
"RTN","LRBEBA3",169,0)
 .I $P(X,U,7)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL MST")=$P(X,U,7),EIX("MST")=$G(EIX("MST"))+$P(X,U,7)
"RTN","LRBEBA3",170,0)
 .I $P(X,U,8)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL HNC")=$P(X,U,8),EIX("HNC")=$G(EIX("HNC"))+$P(X,U,8)
"RTN","LRBEBA3",171,0)
 .I $P(X,U,10)'="" S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PL SHAD")=$P(X,U,10),EIX("SHAD")=$G(EIX("SHAD"))+$P(X,U,10)
"RTN","LRBEBA3",172,0)
 .I $P(X,U,9) S ^TMP("LRPXAPI",$J,"DX/PL",DXCNT,"PRIMARY")=$P(X,U,9)
"RTN","LRBEBA3",173,0)
 F EI="SC","CV","AO","IR","EC","MST","HNC","SHAD" D
"RTN","LRBEBA3",174,0)
 .I $G(EIX(EI))>1 S EIX(EI)=1
"RTN","LRBEBA3",175,0)
 .I $G(EIX(EI))'="" S ^TMP("LRPXAPI",$J,"ENCOUNTER",1,EI)=EIX(EI)
"RTN","LRBEBA3",176,0)
 Q
"RTN","LRBEBA3",177,0)
 ;
"RTN","LRBEBA3",178,0)
FINAL(LRODT,LRSN,LRTST) ;is microbiology test complete/final?
"RTN","LRBEBA3",179,0)
 ;called from MICRO1 only
"RTN","LRBEBA3",180,0)
 ;returns 1_";"_<0-node of order>, if test completed
"RTN","LRBEBA3",181,0)
 ;        otherwise returns 0
"RTN","LRBEBA3",182,0)
 N AA,AI,AY,NODEO,NODEA,NOKILL,RETURN,TST,TT,X
"RTN","LRBEBA3",183,0)
 S RETURN=0,NODEA=""
"RTN","LRBEBA3",184,0)
 S NODEO=$G(^LRO(69,LRODT,1,LRSN,2,LRTST,0))
"RTN","LRBEBA3",185,0)
 S TST=$P(NODEO,U),AY=$P(NODEO,U,3),AA=$P(NODEO,U,4),AI=$P(NODEO,U,5)
"RTN","LRBEBA3",186,0)
 I TST,AA,AI,AY S NODEA=$G(^LRO(68,AA,1,AY,1,AI,4,TST,0))
"RTN","LRBEBA3",187,0)
 ;does complete date exist?
"RTN","LRBEBA3",188,0)
 I $P(NODEA,U,5) S RETURN=1_";"_NODEO
"RTN","LRBEBA3",189,0)
 I RETURN'=0 D
"RTN","LRBEBA3",190,0)
 .S $P(^LRO(69,LRODT,1,LRSN,2,LRTST,0),U,12)=1
"RTN","LRBEBA3",191,0)
 .S NOKILL=0
"RTN","LRBEBA3",192,0)
 .S TT=0 F  S TT=$O(^LRO(69,LRODT,1,LRSN,2,TT)) Q:'TT  D
"RTN","LRBEBA3",193,0)
 ..S NODEO=^LRO(69,LRODT,1,LRSN,2,TT,0),AA=$P(NODEO,U,4)
"RTN","LRBEBA3",194,0)
 ..I AA,$P(NODEO,U,12)'=1,$P($G(^LRO(68,AA,0)),U,2)="MI" S NOKILL=1
"RTN","LRBEBA3",195,0)
 .I NOKILL=0 S ^LRO(69,"AA",LRCEX,LROA)=""
"RTN","LRBEBA3",196,0)
 Q RETURN
"RTN","LRBEBA4")
0^4^B67413439^B61044712
"RTN","LRBEBA4",1,0)
LRBEBA4 ;DALOI/JAH/FHS - ORDERING AND RESULTING OUTPATIENT ;8/10/04
"RTN","LRBEBA4",2,0)
 ;;5.2;LAB SERVICE;**291,359,352**;Sep 27, 1994;Build 1
"RTN","LRBEBA4",3,0)
 ;
"RTN","LRBEBA4",4,0)
GPRO(LRBEDN,LRBECDT,LRBESPC,LRBETST) ; Get the Procedure (CPT)
"RTN","LRBEBA4",5,0)
 ; A qualified coder will setup the CPTs in #60. The routine look for 
"RTN","LRBEBA4",6,0)
 ; CPTs by specimen, then HCPCS, and lasty, by a default.
"RTN","LRBEBA4",7,0)
 ;
"RTN","LRBEBA4",8,0)
 S X="CH;"_LRBEDN_";1",Y=$O(^LAB(60,"C",X,0))
"RTN","LRBEBA4",9,0)
 Q:+Y<0
"RTN","LRBEBA4",10,0)
 S LRBETST=+Y
"RTN","LRBEBA4",11,0)
PANEL ;Entry point for panel cpt
"RTN","LRBEBA4",12,0)
 N X,Y,DIC,LRBEIEN,LRBENLT,LRN
"RTN","LRBEBA4",13,0)
 S:$G(LRSPEC)="" LRSPEC=$G(LRBESPC)
"RTN","LRBEBA4",14,0)
 S (LRI,LRBECPT)=""
"RTN","LRBEBA4",15,0)
 ; #60 Specimen CPT
"RTN","LRBEBA4",16,0)
SP60 D GCPT(LRBETST,LRBECDT,LRSPEC) Q:$O(LRBECPT(LRBETST,0))
"RTN","LRBEBA4",17,0)
 ;HCPCS CODE
"RTN","LRBEBA4",18,0)
HCPCS D
"RTN","LRBEBA4",19,0)
 . S LRBECPT=$$GET1^DIQ(60,LRBETST_",","HCPCS CODE","I")
"RTN","LRBEBA4",20,0)
 . I LRBECPT D
"RTN","LRBEBA4",21,0)
 . . S LRBECPT=$$CPT^ICPTCOD(LRBECPT,LRBECDT)
"RTN","LRBEBA4",22,0)
 . . I '$P(LRBECPT,U,7) S LRBECPT="" Q
"RTN","LRBEBA4",23,0)
 . . S LRBECPT(LRBETST,$G(LRI)+1,$P(LRBECPT,U))="HCPCS CODE",LRI=$G(LRI)+1
"RTN","LRBEBA4",24,0)
 ;Try file #64
"RTN","LRBEBA4",25,0)
NLT Q:$O(LRBECPT(LRBETST,0))  D
"RTN","LRBEBA4",26,0)
 . N I,LRBENLT,LRX,LRN,LRNM,SUFX
"RTN","LRBEBA4",27,0)
 . S LRBENLT=$$GET1^DIQ(60,LRBETST_",",64,"I")
"RTN","LRBEBA4",28,0)
 . Q:'LRBENLT
"RTN","LRBEBA4",29,0)
 . S LRNM=$P($G(^LAM(LRBENLT,0)),U,2)
"RTN","LRBEBA4",30,0)
 . S LRNM(1)=LRNM
"RTN","LRBEBA4",31,0)
 . S SUFX=$P(LRNM,".",2)
"RTN","LRBEBA4",32,0)
 . I $G(LRCDEF),SUFX'=LRCDEF S LRNM(2)=$P(LRNM,".",1)_"."_LRCDEF
"RTN","LRBEBA4",33,0)
 . I SUFX S LRNM(3)=$P(LRNM,".",1)_"."_"0000"
"RTN","LRBEBA4",34,0)
 . S I=0 F  S I=$O(LRNM(I)) Q:'I  Q:$O(LRBECPT(LRBETST,0))  D
"RTN","LRBEBA4",35,0)
 . . S LRBENLT=$O(^LAM("C",LRNM(I)_" ",0)) Q:'LRBENLT
"RTN","LRBEBA4",36,0)
 . . S LRN=0 F  S LRN=$O(^LAM(LRBENLT,4,"AC","CPT",LRN)) Q:LRN<1  D
"RTN","LRBEBA4",37,0)
 . . . S LRX=$G(^LAM(LRBENLT,4,LRN,0)) Q:'LRX  D
"RTN","LRBEBA4",38,0)
 . . . . Q:'$P(LRX,U,3)!($P(LRX,U,3)>LRBECDT)!($P(LRX,U,4)&($P(LRX,U,4)<LRBECDT))
"RTN","LRBEBA4",39,0)
 . . . . S LRBECPT=+LRX
"RTN","LRBEBA4",40,0)
 . . . . I '$P($$CPT^ICPTCOD(LRBECPT,LRBECDT),U,7) Q
"RTN","LRBEBA4",41,0)
 . . . . S LRBECPT(LRBETST,($G(LRI)+1),LRBECPT)="WKLD CODE-"_LRNM(I),LRI=$G(LRI)+1
"RTN","LRBEBA4",42,0)
 . . . . I LRI>1,LRBECPT(LRBETST,LRI,LRBECPT)=$G(LRBECPT(LRBETST,($G(LRI)-1),LRBECPT)) D
"RTN","LRBEBA4",43,0)
 . . . . . S LRBECPT(LRBETST,($G(LRI)-1),LRBECPT,"COUNT")=+$G(LRBECPT(LRBETST,($G(LRI)-1),LRBECPT,"COUNT"))+1
"RTN","LRBEBA4",44,0)
 . . . . . K LRBECPT(LRBETST,LRI,LRBECPT) S LRI=$G(LRI)-1
"RTN","LRBEBA4",45,0)
 ;Default Site/Spec CPT
"RTN","LRBEBA4",46,0)
SPCPT Q:$O(LRBECPT(LRBETST,0))  D
"RTN","LRBEBA4",47,0)
 . S LRBECPT=$$GET1^DIQ(60,LRBETST_",","DEFAULT SITE/SPECIMEN CPT","E")
"RTN","LRBEBA4",48,0)
 . I LRBECPT D
"RTN","LRBEBA4",49,0)
 . . I '$P($$CPT^ICPTCOD(LRBECPT,LRBECDT),U,7) S LRBECPT="" Q
"RTN","LRBEBA4",50,0)
 . . S LRBECPT(LRBETST,$G(LRI)+1,LRBECPT)="DEFAULT SITE/SPECIMEN CPT",LRI=$G(LRI)+1
"RTN","LRBEBA4",51,0)
 Q
"RTN","LRBEBA4",52,0)
 ;
"RTN","LRBEBA4",53,0)
SCPT(CPT,TDAT) ; Get the CPT/HCPCS Code
"RTN","LRBEBA4",54,0)
 Q $$CPT^ICPTCOD(CPT,TDAT)
"RTN","LRBEBA4",55,0)
 ;
"RTN","LRBEBA4",56,0)
GCPT(LRBETST,LRBECDT,LRSPEC) ; Get the CPT
"RTN","LRBEBA4",57,0)
 N A,ARR,LRBEAX,LRBEIEN,LRBEAR60,X,XX
"RTN","LRBEBA4",58,0)
 S LRBEIEN=LRSPEC_","_LRBETST_",",(LRI,LRBECPT)=""
"RTN","LRBEBA4",59,0)
 D GETS^DIQ(60.01,LRBEIEN,"96*","I","LRBEAR60")
"RTN","LRBEBA4",60,0)
 S A="" F  S A=$O(LRBEAR60(60.196,A)) Q:A=""  D
"RTN","LRBEBA4",61,0)
 . Q:$G(LRBEAR60(60.196,A,1,"I"))=""
"RTN","LRBEBA4",62,0)
 . S ARR($G(LRBEAR60(60.196,A,1,"I")))=$G(LRBEAR60(60.196,A,.01,"I"))
"RTN","LRBEBA4",63,0)
 S XX=$P(LRBECDT,".",1)_"."_9999
"RTN","LRBEBA4",64,0)
 S X=$O(ARR(XX),-1) I X D
"RTN","LRBEBA4",65,0)
 .S LRBEAX=ARR(X)
"RTN","LRBEBA4",66,0)
 .S LRBEAX=$$CPT^ICPTCOD(LRBEAX,LRBECDT)
"RTN","LRBEBA4",67,0)
 .Q:'$P(LRBEAX,U,7)
"RTN","LRBEBA4",68,0)
 .S LRBECPT(LRBETST,($G(LRI)+1),$P(LRBEAX,U))="SPECIMEN CPT",LRI=$G(LRI)+1
"RTN","LRBEBA4",69,0)
 Q
"RTN","LRBEBA4",70,0)
 ;
"RTN","LRBEBA4",71,0)
UPDOR(DFN,ORITEM,ORIEN,ORDX,ORSCEI) ; Update CIDC information from OERR
"RTN","LRBEBA4",72,0)
 I $G(^XTMP("LRPCELOG",0)) D
"RTN","LRBEBA4",73,0)
 . N LRLNOW,LRI
"RTN","LRBEBA4",74,0)
 . F  S LRLNOW=$$NOW^XLFDT Q:'$D(^XTMP("LRPCELOG",3,LRLNOW))
"RTN","LRBEBA4",75,0)
 . S ^XTMP("LRPCELOG",3,LRLNOW)=DFN_U_ORITEM_U_ORIEN_U_"["_ORSCEI_"]"
"RTN","LRBEBA4",76,0)
 . S LRI=0 F  S LRI=$O(ORDX(LRI)) Q:LRI=""  D
"RTN","LRBEBA4",77,0)
 . . S ^XTMP("LRPCELOG",3,LRLNOW,"ORDX",LRI)=ORDX(LRI)
"RTN","LRBEBA4",78,0)
 I $S('$O(ORDX(0)):1,ORSCEI="^^^^^":1,1:0) Q "O^No Diagnosis Entered"
"RTN","LRBEBA4",79,0)
 N LRBEAR,LRBEDFN,LRDFN,LRBEIEN,LRODT,LRORD,LRSN,LRBERMS,LRBETN,LRBETYP
"RTN","LRBEBA4",80,0)
 N LRBEVST,LRAA,LRLLOC,LRSAMP,LRSPEC,LRSB,LRBEY
"RTN","LRBEBA4",81,0)
 S LRBERMS=1,LRORD=$P(ORITEM,";",1),LRODT=$P(ORITEM,";",2)
"RTN","LRBEBA4",82,0)
 S LRSN=$P(ORITEM,";",3),LRBEIEN=LRSN_","_LRODT_","
"RTN","LRBEBA4",83,0)
 S (LRBEDFN,LRDFN)=$$GET1^DIQ(69.01,LRBEIEN,.01,"I")
"RTN","LRBEBA4",84,0)
 S LRSAMP=$$GET1^DIQ(69.01,LRBEIEN,3,"I")
"RTN","LRBEBA4",85,0)
 S LRLLOC=$$GET1^DIQ(69.01,LRBEIEN,8,"I")
"RTN","LRBEBA4",86,0)
 S LRSPEC=$$GET1^DIQ(69.02,"1,"_LRBEIEN,.01,"I") S:LRSPEC="" LRSPEC=72
"RTN","LRBEBA4",87,0)
 I LRORD'=$$GET1^DIQ(69.01,LRBEIEN,9.5,"I") D  Q LRBERMS
"RTN","LRBEBA4",88,0)
 .S LRBERMS="0^"_$$EMSG(1)
"RTN","LRBEBA4",89,0)
 I DFN'=$$GET1^DIQ(63,LRBEDFN_",",.03,"I") D  Q LRBERMS
"RTN","LRBEBA4",90,0)
 .S LRBERMS="0^"_$$EMSG(2)
"RTN","LRBEBA4",91,0)
 S LRBEVST=$P($G(^LRO(69,LRODT,1,LRSN,"PCE")),";",1) D WORK
"RTN","LRBEBA4",92,0)
 Q LRBERMS
"RTN","LRBEBA4",93,0)
 ;
"RTN","LRBEBA4",94,0)
WORK ; Enter the updated information into file
"RTN","LRBEBA4",95,0)
 N LRBEFND,LRBETNM,LRBETST,LRBEZ,LRBERES
"RTN","LRBEBA4",96,0)
 S (LRBETN,LRBEFND)=0
"RTN","LRBEBA4",97,0)
 F  S LRBETN=$O(^LRO(69,LRODT,1,LRSN,2,LRBETN)) Q:LRBETN=""!('LRBETN)  D
"RTN","LRBEBA4",98,0)
 .Q:ORIEN'=$$GET1^DIQ(69.03,LRBETN_","_LRBEIEN,6,"I")
"RTN","LRBEBA4",99,0)
 .S:'LRBEFND LRBEFND=1 S LRAA=""
"RTN","LRBEBA4",100,0)
 .S LRBETST=$$GET1^DIQ(69.03,LRBETN_","_LRBEIEN,.01,"I")
"RTN","LRBEBA4",101,0)
 .S LRBETNM=$$GET1^DIQ(60,LRBETST_",",.01,"I")
"RTN","LRBEBA4",102,0)
 .S LRBEZ(LRBETN)=LRBETST_"^"_LRBETNM K LRBEAR
"RTN","LRBEBA4",103,0)
 .D BLRSB(.LRSB,LRBETN_","_LRBEIEN,LRBETST,.LRBEY)
"RTN","LRBEBA4",104,0)
 .D KILL(LRODT,LRSN,LRBETN),SET(DFN,.ORDX,ORSCEI)
"RTN","LRBEBA4",105,0)
 .D SDG1(LRODT,LRSN,LRBETN,DFN,.LRBEAR)
"RTN","LRBEBA4",106,0)
 I 'LRBEFND S LRBERMS="0^"_$$EMSG(3) Q
"RTN","LRBEBA4",107,0)
 I LRBEVST'="",LRAA'="" S LRBERES=1 D BAWRK^LRBEBA(LRODT,LRSN,1,.LRBEY,.LRBEZ,"",LRBEVST,"",ORIEN)
"RTN","LRBEBA4",108,0)
 Q
"RTN","LRBEBA4",109,0)
 ;
"RTN","LRBEBA4",110,0)
KILL(LRBEODT,LRBESN,LRBETN) ; Kill the existing DGX and SC/EI
"RTN","LRBEBA4",111,0)
 N DA,DIK
"RTN","LRBEBA4",112,0)
 S DA(1)=LRBETN,DA(2)=LRSN,DA(3)=LRODT
"RTN","LRBEBA4",113,0)
 S DA="" F  S DA=$O(^LRO(69,DA(3),1,DA(2),2,DA(1),2,DA)) Q:DA=""  D
"RTN","LRBEBA4",114,0)
 .S DIK="^LRO(69,"_DA(3)_","_1_","_DA(2)_","_2_","_DA(1)_","_2_","
"RTN","LRBEBA4",115,0)
 .D ^DIK
"RTN","LRBEBA4",116,0)
 Q
"RTN","LRBEBA4",117,0)
 ;
"RTN","LRBEBA4",118,0)
SET(DFN,ORDX,ORSCEI) ; Set #69 with new DGX and SC/EI
"RTN","LRBEBA4",119,0)
 N LRBEA
"RTN","LRBEBA4",120,0)
 S LRBEA="" F  S LRBEA=$O(ORDX(LRBEA)) Q:LRBEA=""  D
"RTN","LRBEBA4",121,0)
 .S LRBEAR(DFN,"LRBEDGX",LRBEA,$G(ORDX(LRBEA)))="^^^"_ORSCEI
"RTN","LRBEBA4",122,0)
 .S:LRBEA=1 $P(LRBEAR(DFN,"LRBEDGX",LRBEA,$G(ORDX(LRBEA))),U,12)=1
"RTN","LRBEBA4",123,0)
 Q
"RTN","LRBEBA4",124,0)
 ;
"RTN","LRBEBA4",125,0)
SDG1(LRODT,LRSN,LRBETN,DFN,LRBEAR) ; Set the diagnois 
"RTN","LRBEBA4",126,0)
 ;                             and indicators file #69
"RTN","LRBEBA4",127,0)
 N LRBEA,LRBEFIL,LRBEIEN,LRFDA,LRFDAIEN,LRERR,LRBEPDGX,LRBETNUM
"RTN","LRBEBA4",128,0)
 S LRBEFIL=69.05,LRBETNUM=$O(^LRO(69,LRODT,1,LRSN,2,LRBETN,2,""),-1)+1
"RTN","LRBEBA4",129,0)
 S LRBEA="" F  S LRBEA=$O(LRBEAR(DFN,"LRBEDGX",LRBEA)) Q:LRBEA=""  D
"RTN","LRBEBA4",130,0)
 .S LRBEPDGX=""
"RTN","LRBEBA4",131,0)
 .F  S LRBEPDGX=$O(LRBEAR(DFN,"LRBEDGX",LRBEA,LRBEPDGX)) Q:LRBEPDGX=""  D
"RTN","LRBEBA4",132,0)
 ..S LRBEPTDT=$G(LRBEAR(DFN,"LRBEDGX",LRBEA,LRBEPDGX))
"RTN","LRBEBA4",133,0)
 ..S LRBEIEN="+"_LRBETNUM_","_LRBETN_","_LRSN_","_LRODT_","
"RTN","LRBEBA4",134,0)
 ..S LRFDAIEN(LRBETNUM)=LRBETNUM,LRFDA(99,LRBEFIL,LRBEIEN,.01)=LRBEPDGX
"RTN","LRBEBA4",135,0)
 ..S:$P(LRBEPTDT,U,6)'="" LRFDA(99,LRBEFIL,LRBEIEN,1)=$P(LRBEPTDT,U,6)
"RTN","LRBEBA4",136,0)
 ..S:$P(LRBEPTDT,U,10)'="" LRFDA(99,LRBEFIL,LRBEIEN,2)=$P(LRBEPTDT,U,10)
"RTN","LRBEBA4",137,0)
 ..S:$P(LRBEPTDT,U,4)'="" LRFDA(99,LRBEFIL,LRBEIEN,3)=$P(LRBEPTDT,U,4)
"RTN","LRBEBA4",138,0)
 ..S:$P(LRBEPTDT,U,5)'="" LRFDA(99,LRBEFIL,LRBEIEN,4)=$P(LRBEPTDT,U,5)
"RTN","LRBEBA4",139,0)
 ..S:$P(LRBEPTDT,U,7)'="" LRFDA(99,LRBEFIL,LRBEIEN,5)=$P(LRBEPTDT,U,7)
"RTN","LRBEBA4",140,0)
 ..S:$P(LRBEPTDT,U,8)'="" LRFDA(99,LRBEFIL,LRBEIEN,6)=$P(LRBEPTDT,U,8)
"RTN","LRBEBA4",141,0)
 ..S:$P(LRBEPTDT,U,9)'="" LRFDA(99,LRBEFIL,LRBEIEN,7)=$P(LRBEPTDT,U,9)
"RTN","LRBEBA4",142,0)
 ..S:$P(LRBEPTDT,U,11)'="" LRFDA(99,LRBEFIL,LRBEIEN,9)=$P(LRBEPTDT,U,11)
"RTN","LRBEBA4",143,0)
 ..S:$P(LRBEPTDT,U,12)=1 LRFDA(99,LRBEFIL,LRBEIEN,8)=1         ;Is Primary?
"RTN","LRBEBA4",144,0)
 ..S LRBETNUM=LRBETNUM+1
"RTN","LRBEBA4",145,0)
 D UPDATE^DIE("","LRFDA(99)","LRFDAIEN","LRERR")
"RTN","LRBEBA4",146,0)
 Q
"RTN","LRBEBA4",147,0)
 ;
"RTN","LRBEBA4",148,0)
EMSG(LRBETYP) ; Return Error Message
"RTN","LRBEBA4",149,0)
 N LRBEEMS,LRBETYPN
"RTN","LRBEBA4",150,0)
 S:LRBETYP=1 LRBETYPN="Order Number" S:LRBETYP=2 LRBETYPN="DFN"
"RTN","LRBEBA4",151,0)
 S:LRBETYP=3 LRBETYPN="Orderable Item"
"RTN","LRBEBA4",152,0)
 S LRBEEMS="Possible reasons for failure is the "_LRBETYPN_" did not match."
"RTN","LRBEBA4",153,0)
 Q LRBEEMS
"RTN","LRBEBA4",154,0)
 ;
"RTN","LRBEBA4",155,0)
BLRSB(LRSB,LRBEIENT,LRBETST,LRBEY) ; Build the LRSB global
"RTN","LRBEBA4",156,0)
 N LRBESS,LRBEIDT,LRBESB,LRBEAA,LRBEAD,LRBEAN,LRBEIEN2,LRBET,NX,XX
"RTN","LRBEBA4",157,0)
 S (LRAD,LRBEAD)=$$GET1^DIQ(69.03,LRBEIENT,2,"I")
"RTN","LRBEBA4",158,0)
 S (LRAA,LRBEAA)=$$GET1^DIQ(69.03,LRBEIENT,3,"I") Q:LRAA=""
"RTN","LRBEBA4",159,0)
 S (LRAN,LRBEAN)=$$GET1^DIQ(69.03,LRBEIENT,4,"I")
"RTN","LRBEBA4",160,0)
 S LRBEIEN2=LRBEAN_","_LRBEAD_","_LRBEAA_","
"RTN","LRBEBA4",161,0)
 S (LRSS,LRBESS)=$$GET1^DIQ(68,LRBEAA_",",.02,"I")
"RTN","LRBEBA4",162,0)
 S (LRIDT,LRBEIDT)=$$GET1^DIQ(68.02,LRBEIEN2,13.5,"I")
"RTN","LRBEBA4",163,0)
 S XX=$P($P(^LAB(60,LRBETST,0),U,5),";",2) I XX D
"RTN","LRBEBA4",164,0)
 .S LRSB(XX)=$G(^LR(LRDFN,LRSS,LRIDT,XX))
"RTN","LRBEBA4",165,0)
 .I LRSB(XX)="" K LRSB(XX) Q
"RTN","LRBEBA4",166,0)
 .I "pending^canc"[$P(LRSB(XX),U,1) K LRSB(XX) Q
"RTN","LRBEBA4",167,0)
 .S LRBEY(LRBETST,XX)=""
"RTN","LRBEBA4",168,0)
 S NX=0 F  S NX=$O(^LAB(60,LRBETST,2,NX)) Q:'NX  D
"RTN","LRBEBA4",169,0)
 .S LRBET=+^LAB(60,LRBETST,2,NX,0)
"RTN","LRBEBA4",170,0)
 .S XX=$P($P(^LAB(60,LRBET,0),U,5),";",2) I XX D
"RTN","LRBEBA4",171,0)
 ..S LRSB(XX)=$G(^LR(LRDFN,LRSS,LRIDT,XX))
"RTN","LRBEBA4",172,0)
 ..I LRSB(XX)="" K LRSB(XX) Q
"RTN","LRBEBA4",173,0)
 ..I "pending^canc"[$P(LRSB(XX),U,1) K LRSB(XX) Q
"RTN","LRBEBA4",174,0)
 ..S LRBEY(LRBETST,XX)=""
"RTN","LRBEBA4",175,0)
 Q
"RTN","LRBEBA4",176,0)
 ;
"RTN","LRBEBA4",177,0)
CHKINP(LRDFN,LRBEDAT) ; Check for Inpatient Status)
"RTN","LRBEBA4",178,0)
 N VAIN,VAINDT
"RTN","LRBEBA4",179,0)
 I '$G(DFN) D
"RTN","LRBEBA4",180,0)
 . S DFN=$$GET1^DIQ(63,LRDFN_",",.03,"I")
"RTN","LRBEBA4",181,0)
 . S LRDPF=$$GET1^DIQ(63,LRDFN_",",.02,"I")
"RTN","LRBEBA4",182,0)
 I $G(LRDPF)'=2 Q 0
"RTN","LRBEBA4",183,0)
 S VAINDT=LRBEDAT D INP^VADPT
"RTN","LRBEBA4",184,0)
 Q $G(VAIN(1))
"RTN","LRBEBA4",185,0)
 ;
"RTN","LRBEBA4",186,0)
RFLX() ; Ask the Reflex Question
"RTN","LRBEBA4",187,0)
 N DIR,DUOUT,DTOUT,DIRUT,Y
"RTN","LRBEBA4",188,0)
 S DIR("A")="Is this a Reflex Test? (Y/N): "
"RTN","LRBEBA4",189,0)
 S DIR(0)="YA" D ^DIR
"RTN","LRBEBA4",190,0)
 I $D(DIRUT)!($D(DUOUT)!$D(DTOUT)) Q -1
"RTN","LRBEBA4",191,0)
 Q +Y
"RTN","LRBEBA4",192,0)
 ;
"RTN","LRBEBA4",193,0)
DEFAULT ;Set Default diagnosis
"RTN","LRBEBA4",194,0)
 N LRD,LRI,LRX,LRY,LRD
"RTN","LRBEBA4",195,0)
 S (LRBEDMSG,LRDBEDGX)=""
"RTN","LRBEBA4",196,0)
 S LRI=$O(^LRO(69,LRODT,1,LRSN,2,1,2,0)) Q:LRI<1
"RTN","LRBEBA4",197,0)
 S LRD=$G(^LRO(69,LRODT,1,LRSN,2,1,2,LRI,0))
"RTN","LRBEBA4",198,0)
 Q:'LRD
"RTN","LRBEBA4",199,0)
 S LRDBEDGX=+LRD
"RTN","LRBEBA4",200,0)
 S LRBEDMSG=+LRD_"^^^"_$P(LRD,U,4)_U_$P(LRD,U,5)_U_$P(LRD,U,2)
"RTN","LRBEBA4",201,0)
 S LRBEDMSG=LRBEDMSG_U_$P(LRD,U,6)_U_$P(LRD,U,7)_U_$P(LRD,U,8)
"RTN","LRBEBA4",202,0)
 S LRBEDMSG=LRBEDMSG_U_$P(LRD,U,3)_U_$P(LRD,U,10)_U_$P(LRD,U,9)
"RTN","LRBEBA4",203,0)
 W:$G(LRDBUG) !,LRBEDMSG
"RTN","LRBEBA4",204,0)
 Q
"RTN","LRBEBA4",205,0)
 ;
"RTN","LRBEBA4",206,0)
GEPRO(LRBEAA) ; Provider - Responsible Official
"RTN","LRBEBA4",207,0)
 N X,LRBEPRO
"RTN","LRBEBA4",208,0)
 S LRBEPRO=$$GET1^DIQ(68,LRBEAA_",",.1,"I")
"RTN","LRBEBA4",209,0)
 I $$GET^XUA4A72(LRBEPRO,DT)<0 S LRBEPRO=$$GET1^DIQ(69.9,1,617,"I")
"RTN","LRBEBA4",210,0)
 Q LRBEPRO
"RTN","LRBEBA4",211,0)
 ;
"RTN","LRBEBA4",212,0)
GOPRO(LRODT,LRSN) ; Get the Ordering Provider
"RTN","LRBEBA4",213,0)
 N X,Y,DIC,LRBEPRO
"RTN","LRBEBA4",214,0)
 S LRBEPRO=$$GET1^DIQ(69.01,LRSN_","_LRODT_",",7,"I")
"RTN","LRBEBA4",215,0)
 I $$GET^XUA4A72(LRBEPRO,DT)<0 S LRBEPRO=0 D
"RTN","LRBEBA4",216,0)
 .S X=$$GET1^DIQ(69.9,1,617,"I")
"RTN","LRBEBA4",217,0)
 .I $$GET^XUA4A72(X,DT)>0 S LRBEPRO=X
"RTN","LRBEBA4",218,0)
 Q LRBEPRO
"RTN","LRBEBAO")
0^5^B71512704^B71311928
"RTN","LRBEBAO",1,0)
LRBEBAO ;DALOI/JAH/FHS - ORDERING AND RESULTING FOR OUTPATIENTS ;8/10/04
"RTN","LRBEBAO",2,0)
 ;;5.2;LAB SERVICE;**291,359,352**;Sep 27, 1994;Build 1
"RTN","LRBEBAO",3,0)
 ;
"RTN","LRBEBAO",4,0)
 ; This routine contains the subroutines that get the diagnosis pointers
"RTN","LRBEBAO",5,0)
 ; and indicators at order entry and result verification for outpatient.
"RTN","LRBEBAO",6,0)
 ;
"RTN","LRBEBAO",7,0)
 ; Reference to EN^DDIOL supported by IA #10142
"RTN","LRBEBAO",8,0)
 ; Reference to ^DIC supported by IA #10006
"RTN","LRBEBAO",9,0)
 ; Reference to $$GET1^DIQ supported by IA #2056
"RTN","LRBEBAO",10,0)
 ; Reference to ^DIR supported by IA #10026
"RTN","LRBEBAO",11,0)
 ; Reference to ^ICD9 supported by IA #10082
"RTN","LRBEBAO",12,0)
 ; Reference to ^DIC(9.4 supported by IA #10048
"RTN","LRBEBAO",13,0)
 ; Reference to ^DIC(81.3 supported by IA #2816
"RTN","LRBEBAO",14,0)
 ;
"RTN","LRBEBAO",15,0)
OPORD ; Outpatient Order Entry
"RTN","LRBEBAO",16,0)
 ;
"RTN","LRBEBAO",17,0)
 ; Input:
"RTN","LRBEBAO",18,0)
 ;  LRBEDFN    - Patient's DFN (#2)
"RTN","LRBEBAO",19,0)
 ;  LRBESMP    - Sample
"RTN","LRBEBAO",20,0)
 ;  LRBESPC    - Specimen
"RTN","LRBEBAO",21,0)
 ;  LRBETST    - Ordered Test
"RTN","LRBEBAO",22,0)
 ;  LRBEDGX    - Pointer to Diagnosis (#80)
"RTN","LRBEBAO",23,0)
 ;  LRBEAR(LRBEDFN,"DOS")      - Date of Service
"RTN","LRBEBAO",24,0)
 ;  LRBEAR(LRBEDFN,"PAT")      - Patient DFN (#2)
"RTN","LRBEBAO",25,0)
 ;  LRBEAR(LRBEDFN,"POS")      - Place of Service
"RTN","LRBEBAO",26,0)
 ;  LRBEAR(LRBEDFN,"ORDGX")    - Ordering or Resulting Diagnosis
"RTN","LRBEBAO",27,0)
 ;  LRBEAR(LRBEDFN,"USR")      - User
"RTN","LRBEBAO",28,0)
 ;  LRBEAR(LRBEDFN,"ORDPRO")    - Ordering Provider
"RTN","LRBEBAO",29,0)
 ;  LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETST,LRBEDGX)
"RTN","LRBEBAO",30,0)
 ;   Piece     Desc
"RTN","LRBEBAO",31,0)
 ;   -----     ---------------------------------
"RTN","LRBEBAO",32,0)
 ;   1     -   Diagnosis
"RTN","LRBEBAO",33,0)
 ;   2     -   Unused (blank)
"RTN","LRBEBAO",34,0)
 ;   3     -   Textual Description of  Diagnosis
"RTN","LRBEBAO",35,0)
 ;   4     -   Agent Orange
"RTN","LRBEBAO",36,0)
 ;   5     -   Ionizing Radiation
"RTN","LRBEBAO",37,0)
 ;   6     -   Service Connected Indicator
"RTN","LRBEBAO",38,0)
 ;   7     -   Environmental Contaminamts
"RTN","LRBEBAO",39,0)
 ;   8     -   MST (Military Sexual Tramua)
"RTN","LRBEBAO",40,0)
 ;   9     -   Head and Neck Cancer
"RTN","LRBEBAO",41,0)
 ;   10    -   Combat Veteran
"RTN","LRBEBAO",42,0)
 ;
"RTN","LRBEBAO",43,0)
 ; Output:
"RTN","LRBEBAO",44,0)
 ;  LRBEAR1(VISIT,TST,LRBEPOV)=LRBEDGX
"RTN","LRBEBAO",45,0)
 ;   VISIT      -  Pointer to VISIT (9000010) file
"RTN","LRBEBAO",46,0)
 ;   TST        -  Ordered Test
"RTN","LRBEBAO",47,0)
 ;   LRBEPOV        -  Pointer to V POV (#9000010.07) file
"RTN","LRBEBAO",48,0)
 ;   LRBEDGX        -  Pointer to Diagnosis (#80)
"RTN","LRBEBAO",49,0)
EN ;
"RTN","LRBEBAO",50,0)
 D INIT
"RTN","LRBEBAO",51,0)
 S SUB1="ENCOUNTER",SUB2="DX/PL",SUB3="PROVIDER"
"RTN","LRBEBAO",52,0)
 S LRBEDFN="" F  S LRBEDFN=$O(LRBEAR(LRBEDFN)) Q:LRBEDFN=""  D
"RTN","LRBEBAO",53,0)
 .S LRBETM=$S($P($G(LRBECDT),".",2):LRBECDT,$G(LRCDT):LRCDT,1:DT)
"RTN","LRBEBAO",54,0)
 .S LRBETM=$$PCETM(LRBETM)
"RTN","LRBEBAO",55,0)
 .S ^TMP("LRPXAPI",$J,SUB1,1,"ENC D/T")=LRBETM
"RTN","LRBEBAO",56,0)
 .S ^TMP("LRPXAPI",$J,SUB1,1,"DSS ID")=LROOS
"RTN","LRBEBAO",57,0)
 .S ^TMP("LRPXAPI",$J,SUB1,1,"HOS LOC")=$G(LRBEAR(LRBEDFN,"POS"))
"RTN","LRBEBAO",58,0)
 .S ^TMP("LRPXAPI",$J,SUB1,1,"PATIENT")=$G(LRBEAR(LRBEDFN,"PAT"))
"RTN","LRBEBAO",59,0)
 .S ^TMP("LRPXAPI",$J,SUB1,1,"SERVICE CATEGORY")="X"
"RTN","LRBEBAO",60,0)
 .S ^TMP("LRPXAPI",$J,SUB1,1,"ENCOUNTER TYPE")="A"
"RTN","LRBEBAO",61,0)
 .S ^TMP("LRPXAPI",$J,SUB3,1,"NAME")=$G(LRBEAR(LRBEDFN,"ORDPRO"))
"RTN","LRBEBAO",62,0)
 .S ^TMP("LRPXAPI",$J,SUB3,1,"PRIMARY")=1
"RTN","LRBEBAO",63,0)
 .I $G(LRBEAR(LRBEDFN,"DEL")) D
"RTN","LRBEBAO",64,0)
 ..S ^TMP("LRPXAPI",$J,SUB1,1,"DELETE")=$G(LRBEAR(LRBEDFN,"DEL"))
"RTN","LRBEBAO",65,0)
 .S LRBESMP=""
"RTN","LRBEBAO",66,0)
 .F  S LRBESMP=$O(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP)) Q:LRBESMP=""  D
"RTN","LRBEBAO",67,0)
 ..S LRBESPC=""
"RTN","LRBEBAO",68,0)
 ..F  S LRBESPC=+$O(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC)) Q:LRBESPC<1  D
"RTN","LRBEBAO",69,0)
 ...D OPWRK
"RTN","LRBEBAO",70,0)
 Q
"RTN","LRBEBAO",71,0)
 ;
"RTN","LRBEBAO",72,0)
OPWRK ; More Outpatient Work
"RTN","LRBEBAO",73,0)
 N X,XX,B,BG,N,DX,LRBEDIA
"RTN","LRBEBAO",74,0)
 ;get all primary (n=1) and secondary (n=2) dx
"RTN","LRBEBAO",75,0)
 S LRBETST="" F  S LRBETST=$O(LRBECPT(LRBETST)) Q:'LRBETST  D
"RTN","LRBEBAO",76,0)
 . S LRBETNUM=0 F  S LRBETNUM=$O(LRBECPT(LRBETST,LRBETNUM)) Q:LRBETNUM<1  D
"RTN","LRBEBAO",77,0)
 . . S LRBEDGX=""
"RTN","LRBEBAO",78,0)
 . . F  S LRBEDGX=$O(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETST,LRBEDGX)) Q:LRBEDGX=""  D
"RTN","LRBEBAO",79,0)
 . . . S LRBEPTDT=$G(LRBEAR(LRBEDFN,"LRBEDGX",LRBESMP,LRBESPC,LRBETST,LRBEDGX))
"RTN","LRBEBAO",80,0)
 . . . S N=$S($P(LRBEPTDT,U,12):1,1:2),X=$P(LRBEPTDT,U,4,11)
"RTN","LRBEBAO",81,0)
 . . . ;collapse indicators for same dx
"RTN","LRBEBAO",82,0)
 . . . S XX=$G(DX(N,LRBEDGX))
"RTN","LRBEBAO",83,0)
 . . . F B=1:1:8 I $P(XX,U,B)'=1,$P(X,U,B)'="" S $P(XX,U,B)=$P(X,U,B)
"RTN","LRBEBAO",84,0)
 . . . S DX(N,LRBEDGX)=XX
"RTN","LRBEBAO",85,0)
 ;set primary dx in PCE array
"RTN","LRBEBAO",86,0)
 S LRBEDGX=""
"RTN","LRBEBAO",87,0)
 F  S LRBEDGX=$O(DX(1,LRBEDGX)) Q:LRBEDGX=""  D
"RTN","LRBEBAO",88,0)
 . S LRBEDIA=$G(LRBEDIA)+1,XX=DX(1,LRBEDGX)
"RTN","LRBEBAO",89,0)
 . S ^TMP("LRPXAPI",$J,SUB2,LRBEDIA,"DIAGNOSIS")=LRBEDGX
"RTN","LRBEBAO",90,0)
 . S ^TMP("LRPXAPI",$J,SUB2,LRBEDIA,"PRIMARY")=1
"RTN","LRBEBAO",91,0)
 . F B=1:1:8 I $P(XX,U,B)'="" D
"RTN","LRBEBAO",92,0)
 . . S BG=$$GETT(B)
"RTN","LRBEBAO",93,0)
 . . I '$G(^TMP("LRPXAPI",$J,SUB2,LRBEDIA,BG)) S ^TMP("LRPXAPI",$J,SUB2,LRBEDIA,BG)=$P(XX,U,B)
"RTN","LRBEBAO",94,0)
 . . ;collapse dx indicators into encounter node
"RTN","LRBEBAO",95,0)
 . . I '$G(^TMP("LRPXAPI",$J,SUB1,1,$P(BG," ",2))) S ^TMP("LRPXAPI",$J,SUB1,1,$P(BG," ",2))=$P(XX,U,B)
"RTN","LRBEBAO",96,0)
 ;set secondary dx in PCE array
"RTN","LRBEBAO",97,0)
 S LRBEDGX=""
"RTN","LRBEBAO",98,0)
 F  S LRBEDGX=$O(DX(2,LRBEDGX)) Q:LRBEDGX=""  D
"RTN","LRBEBAO",99,0)
 . S LRBEDIA=$G(LRBEDIA)+1,XX=DX(2,LRBEDGX)
"RTN","LRBEBAO",100,0)
 . S ^TMP("LRPXAPI",$J,SUB2,LRBEDIA,"DIAGNOSIS")=LRBEDGX
"RTN","LRBEBAO",101,0)
 . F B=1:1:8 I $P(XX,U,B)'="" D
"RTN","LRBEBAO",102,0)
 . . S BG=$$GETT(B)
"RTN","LRBEBAO",103,0)
 . . I '$G(^TMP("LRPXAPI",$J,SUB2,LRBEDIA,BG)) S ^TMP("LRPXAPI",$J,SUB2,LRBEDIA,BG)=$P(XX,U,B)
"RTN","LRBEBAO",104,0)
 . . ;collapse dx indicators into encounter node
"RTN","LRBEBAO",105,0)
 . . I '$G(^TMP("LRPXAPI",$J,SUB1,1,$P(BG," ",2))) S ^TMP("LRPXAPI",$J,SUB1,1,$P(BG," ",2))=$P(XX,U,B)
"RTN","LRBEBAO",106,0)
 Q
"RTN","LRBEBAO",107,0)
 ;
"RTN","LRBEBAO",108,0)
GETT(X) ; Indicators for ^TMP
"RTN","LRBEBAO",109,0)
 I '+X Q ""
"RTN","LRBEBAO",110,0)
 Q "PL "_$S(X=1:"AO",X=2:"IR",X=3:"SC",X=4:"EC",X=5:"MST",X=6:"HNC",X=7:"CV",X=8:"SHAD",1:"")
"RTN","LRBEBAO",111,0)
 ;
"RTN","LRBEBAO",112,0)
OPRES(LRBEAR,LRBEAR1,LRODT,LRSN,LRBEVST) ; Outpatient Final Resulting
"RTN","LRBEBAO",113,0)
 ; Inputs:
"RTN","LRBEBAO",114,0)
 ;  LRBEDN    -  Data Number of Test in #63 field 400
"RTN","LRBEBAO",115,0)
 ;  LRBEAR(LRBEDFN,"VST")     -  Patient's Encounter Number #9000010
"RTN","LRBEBAO",116,0)
 ;  LRBEAR(LRBEDFN,"LRBEDGX",LRBEDN)
"RTN","LRBEBAO",117,0)
 ;   Piece     Desc
"RTN","LRBEBAO",118,0)
 ;   1     -   Procedure (CPT)
"RTN","LRBEBAO",119,0)
 ;   2     -   Modifiers (Sub-delimited by "~")
"RTN","LRBEBAO",120,0)
 ;   3     -   Diagnosis
"RTN","LRBEBAO",121,0)
 ;   4     -   Diagnosis 2
"RTN","LRBEBAO",122,0)
 ;   5     -   Diagnosis 3
"RTN","LRBEBAO",123,0)
 ;   6     -   Diagnosis 4
"RTN","LRBEBAO",124,0)
 ;   7     -   Event D/T  (DOS)
"RTN","LRBEBAO",125,0)
 ;   8     -   Encounter Provider
"RTN","LRBEBAO",126,0)
 ;   9     -   Ordering Provider
"RTN","LRBEBAO",127,0)
 ;   10    -   Quantity (Number of times procedure was performed)
"RTN","LRBEBAO",128,0)
 ;   11    -   Place of Service 
"RTN","LRBEBAO",129,0)
 ; Output:
"RTN","LRBEBAO",130,0)
 ;  LRBEAR1(VISIT,TST,LRBEPOV)=LRBEDGX
"RTN","LRBEBAO",131,0)
 ;   VISIT      -  Pointer to VISIT (9000010) file
"RTN","LRBEBAO",132,0)
 ;   TST        -  Ordered Test
"RTN","LRBEBAO",133,0)
 ;   LRBEPOV        -  Pointer to V POV (#9000010.07) file
"RTN","LRBEBAO",134,0)
 ;   LRBEDGX        -  Pointer to Diagnosis (#80)
"RTN","LRBEBAO",135,0)
 ;
"RTN","LRBEBAO",136,0)
 D INIT
"RTN","LRBEBAO",137,0)
 N LRSWSTAT,LRSWDATE
"RTN","LRBEBAO",138,0)
 S LRSWSTAT=$$SWSTAT^IBBAPI
"RTN","LRBEBAO",139,0)
 S LRSWDATE=+$P(LRSWSTAT,U,2)
"RTN","LRBEBAO",140,0)
 S LRSWSTAT=+$P(LRSWSTAT,U)
"RTN","LRBEBAO",141,0)
 S SUB1="PROCEDURE"
"RTN","LRBEBAO",142,0)
 I '$G(LRDBEDGX) D
"RTN","LRBEBAO",143,0)
 . N LRX
"RTN","LRBEBAO",144,0)
 . S (LRDBEDGX,LRX)=0
"RTN","LRBEBAO",145,0)
 . F  S LRX=$O(^LRO(69,LRODT,1,LRSN,2,LRX)) Q:LRX<1!($G(LRDBEDGX))  D
"RTN","LRBEBAO",146,0)
 . . ;set a default diagnosis and sc/ei indicators
"RTN","LRBEBAO",147,0)
 . . I $G(^LRO(69,LRODT,1,LRSN,2,LRX,2,1,0)) S LRDBEDGX=+^(0)
"RTN","LRBEBAO",148,0)
 S LRBEDFN="" F  S LRBEDFN=$O(LRBEAR(LRBEDFN)) Q:LRBEDFN=""  D
"RTN","LRBEBAO",149,0)
 . S LRI=0 F  S LRI=$O(LRBEAR(LRBEDFN,"LRBEDGX",LRI)) Q:LRI<1  D
"RTN","LRBEBAO",150,0)
 . . D OPWRK2
"RTN","LRBEBAO",151,0)
 ;microbiology results sent to PCE in LRCAPPH1
"RTN","LRBEBAO",152,0)
 I $P($G(^LRO(68,$G(LRAA),0)),U,2)'="MI" D SEND
"RTN","LRBEBAO",153,0)
 Q
"RTN","LRBEBAO",154,0)
SEND ; Send if procedure is defined
"RTN","LRBEBAO",155,0)
 N LRLNOW,LRVX,PXALOOK,PXUCV
"RTN","LRBEBAO",156,0)
 I '$G(^TMP("LRPXAPI",$J,"PROCEDURE",1,"PROCEDURE")) G END
"RTN","LRBEBAO",157,0)
 I $G(^XTMP("LRPCELOG",0)) D
"RTN","LRBEBAO",158,0)
 . F  S LRLNOW=$$NOW^XLFDT Q:'$D(^XTMP("LRPCELOG",1,LRLNOW))
"RTN","LRBEBAO",159,0)
 . N LRACCX,LRUIDX
"RTN","LRBEBAO",160,0)
 . S LRACCX=$G(LRACC),LRUIDX=$G(LRUID)
"RTN","LRBEBAO",161,0)
 . M ^XTMP("LRPCELOG",2,LRLNOW)=^TMP("LRPXAPI",$J)
"RTN","LRBEBAO",162,0)
 . S ^XTMP("LRPCELOG",2,LRLNOW,0)=LRACCX_U_LRUIDX
"RTN","LRBEBAO",163,0)
 S LRVX=$$DATA2PCE^PXAPI(INROOT,LRPKG,SRC,.LRBEVSIT,USR,ERRDIS)
"RTN","LRBEBAO",164,0)
 I $D(^XTMP("LRPCELOG",2,+$G(LRLNOW),0)) D
"RTN","LRBEBAO",165,0)
 . S $P(^XTMP("LRPCELOG",2,+$G(LRLNOW),0),U,3,4)=LRVX_U_LRBEVSIT
"RTN","LRBEBAO",166,0)
 . M ^XTMP("LRPCELOG",2,LRLNOW)=^TMP("LRPXAPI",$J)
"RTN","LRBEBAO",167,0)
 I $G(LRBEVSIT) D SVST^LRBEBA3(LRBEVSIT,"PCE",LRODT,LRSN)
"RTN","LRBEBAO",168,0)
END K ^TMP("LRPXAPI",$J),LRBETNUM
"RTN","LRBEBAO",169,0)
 Q
"RTN","LRBEBAO",170,0)
 ;
"RTN","LRBEBAO",171,0)
OPWRK2 ; Outpatient Work Two
"RTN","LRBEBAO",172,0)
 K LRBEPTDT
"RTN","LRBEBAO",173,0)
 S LRBEDN=0 F  S LRBEDN=+$O(LRBEAR(LRBEDFN,"LRBEDGX",LRI,LRBEDN)) Q:LRBEDN<1  D OPWRK3
"RTN","LRBEBAO",174,0)
 Q
"RTN","LRBEBAO",175,0)
OPWRK3 ;
"RTN","LRBEBAO",176,0)
 N JJ
"RTN","LRBEBAO",177,0)
 S LRBEPTDT=$G(LRBEAR(LRBEDFN,"LRBEDGX",LRI,LRBEDN))
"RTN","LRBEBAO",178,0)
 Q:'($L(LRBEPTDT))
"RTN","LRBEBAO",179,0)
 I '$P(LRBEPTDT,U,3) D
"RTN","LRBEBAO",180,0)
 .S $P(LRBEPTDT,U,3)=LRDBEDGX
"RTN","LRBEBAO",181,0)
 .S JJ=$O(^TMP("LRPXAPI",$J,"DX/PL",99),-1)+1
"RTN","LRBEBAO",182,0)
 .S ^TMP("LRPXAPI",$J,"DX/PL",JJ,"DIAGNOSIS")=LRDBEDGX
"RTN","LRBEBAO",183,0)
 .I JJ=1 S ^TMP("LRPXAPI",$J,"DX/PL",JJ,"PRIMARY")=1
"RTN","LRBEBAO",184,0)
 .E  S ^TMP("LRPXAPI",$J,"DX/PL",JJ,"PRIMARY")=0
"RTN","LRBEBAO",185,0)
 S LRBETNUM=$G(LRBETNUM)+1,LRBEIEN=LRSN_","_LRODT_","
"RTN","LRBEBAO",186,0)
 I $P(LRBEPTDT,U,1)'="" D
"RTN","LRBEBAO",187,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"PROCEDURE")=$P(LRBEPTDT,U,1)
"RTN","LRBEBAO",188,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"QTY")=1
"RTN","LRBEBAO",189,0)
 I $P(LRBEPTDT,U,2)'="" D
"RTN","LRBEBAO",190,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"MODIFIERS",$P(LRBEPTDT,U,2))=""
"RTN","LRBEBAO",191,0)
 I $P(LRBEPTDT,U,3)'="" D
"RTN","LRBEBAO",192,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS")=$P(LRBEPTDT,U,3)
"RTN","LRBEBAO",193,0)
 I $P(LRBEPTDT,U,4)'="" D
"RTN","LRBEBAO",194,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS 2")=$P(LRBEPTDT,U,4)
"RTN","LRBEBAO",195,0)
 I $P(LRBEPTDT,U,5)'="" D
"RTN","LRBEBAO",196,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS 3")=$P(LRBEPTDT,U,5)
"RTN","LRBEBAO",197,0)
 I $P(LRBEPTDT,U,6)'="" D
"RTN","LRBEBAO",198,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS 4")=$P(LRBEPTDT,U,6)
"RTN","LRBEBAO",199,0)
 I $P(LRBEPTDT,U,7)'="" D
"RTN","LRBEBAO",200,0)
 . N LRBETM S LRBETM=$P(LRBEPTDT,U,7)
"RTN","LRBEBAO",201,0)
 . S LRBETM=$$PCETM(LRBETM)
"RTN","LRBEBAO",202,0)
 . S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"EVENT D/T")=LRBETM
"RTN","LRBEBAO",203,0)
 I $P(LRBEPTDT,U,8)'="" D
"RTN","LRBEBAO",204,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"ENC PROVIDER")=$P(LRBEPTDT,U,8)
"RTN","LRBEBAO",205,0)
 I $P(LRBEPTDT,U,9)>0 D
"RTN","LRBEBAO",206,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"ORD PROVIDER")=$P(LRBEPTDT,U,9)
"RTN","LRBEBAO",207,0)
 I $P(LRBEPTDT,U,10)'="" D
"RTN","LRBEBAO",208,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"QTY")=$P(LRBEPTDT,U,10)
"RTN","LRBEBAO",209,0)
 I $P(LRBEPTDT,U,12)'="" D
"RTN","LRBEBAO",210,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS 5")=$P(LRBEPTDT,U,12)
"RTN","LRBEBAO",211,0)
 I $P(LRBEPTDT,U,13)'="" D
"RTN","LRBEBAO",212,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS 6")=$P(LRBEPTDT,U,13)
"RTN","LRBEBAO",213,0)
 I $P(LRBEPTDT,U,14)'="" D
"RTN","LRBEBAO",214,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS 7")=$P(LRBEPTDT,U,14)
"RTN","LRBEBAO",215,0)
 I $P(LRBEPTDT,U,15)'="" D
"RTN","LRBEBAO",216,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS 8")=$P(LRBEPTDT,U,15)
"RTN","LRBEBAO",217,0)
 I $P(LRBEPTDT,U,16)'="" D
"RTN","LRBEBAO",218,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"ORD REFERENCE")=$P(LRBEPTDT,U,16)
"RTN","LRBEBAO",219,0)
 I LRSWSTAT,($P(LRBETM,".")'<LRSWDATE) D
"RTN","LRBEBAO",220,0)
 .S ^TMP("LRPXAPI",$J,"PROCEDURE",LRBETNUM,"DEPARTMENT")=108
"RTN","LRBEBAO",221,0)
 I $P(LRBEPTDT,U,20)'="" D
"RTN","LRBEBAO",222,0)
 .S ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"QTY")=$P(LRBEPTDT,U,20)
"RTN","LRBEBAO",223,0)
 I $G(^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS"))=0 K ^TMP("LRPXAPI",$J,SUB1,LRBETNUM,"DIAGNOSIS")
"RTN","LRBEBAO",224,0)
 Q
"RTN","LRBEBAO",225,0)
 ;
"RTN","LRBEBAO",226,0)
INIT ;Setup PCE variables
"RTN","LRBEBAO",227,0)
 S INROOT="^TMP(""LRPXAPI"",$J)"
"RTN","LRBEBAO",228,0)
 I '$G(LRPKG) D  Q:'$G(LRPKG)
"RTN","LRBEBAO",229,0)
 . S X="LAB SERVICE",DIC="^DIC(9.4,",DIC(0)="Z" D ^DIC
"RTN","LRBEBAO",230,0)
 . I Y S LRPKG=+Y
"RTN","LRBEBAO",231,0)
 S SRC="LAB DATA",USR=DUZ,(LRBETNUM,ERRDIS)=0
"RTN","LRBEBAO",232,0)
 K DIC
"RTN","LRBEBAO",233,0)
 Q
"RTN","LRBEBAO",234,0)
PCETM(LRBETM) ;Return date/time without seconds
"RTN","LRBEBAO",235,0)
 N PCETM
"RTN","LRBEBAO",236,0)
 S LRBETM=$G(LRBETM)
"RTN","LRBEBAO",237,0)
 Q:'LRBETM LRBETM
"RTN","LRBEBAO",238,0)
 S PCETM=$E($P(LRBETM,".",2),1,4)
"RTN","LRBEBAO",239,0)
 F  Q:($L(PCETM)=4)  S PCETM=PCETM_0
"RTN","LRBEBAO",240,0)
 I PCETM>2359 S PCETM=2359
"RTN","LRBEBAO",241,0)
 I $E(PCETM,3,4)>59 S PCETM=$E(PCETM,1,2)_59
"RTN","LRBEBAO",242,0)
 I 'PCETM S PCETM="0001"
"RTN","LRBEBAO",243,0)
 S $P(LRBETM,".",2)=PCETM
"RTN","LRBEBAO",244,0)
 Q LRBETM
"VER")
8.0^22.0
"^DD",69,69,0)
FIELD^NL^1^3
"^DD",69,69,0,"ACT")
W !,"  ",!
"^DD",69,69,0,"DDA")
N
"^DD",69,69,0,"DT")
3060206
"^DD",69,69,0,"IX","AA",69.01,13)

"^DD",69,69,0,"IX","AC",69.03,14)

"^DD",69,69,0,"IX","AD",69.03,16)

"^DD",69,69,0,"IX","AE",69.03,10)

"^DD",69,69,0,"IX","AN",69.01,21)

"^DD",69,69,0,"IX","B",69,.01)

"^DD",69,69,0,"IX","C",69.01,9.5)

"^DD",69,69,0,"IX","D",69.01,.01)

"^DD",69,69,0,"NM","LAB ORDER ENTRY")

"^DD",69,69,0,"VRPK")
LR
"^DD",69,69,.01,0)
DATE ORDERED^RDX^^0;1^S %DT="EX" D ^%DT S X=Y,DINUM=Y K:Y<1 X,DINUM
"^DD",69,69,.01,1,0)
^.1
"^DD",69,69,.01,1,1,0)
69^B
"^DD",69,69,.01,1,1,1)
S ^LRO(69,"B",$E(X,1,30),DA)=""
"^DD",69,69,.01,1,1,2)
K ^LRO(69,"B",$E(X,1,30),DA)
"^DD",69,69,.01,3)

"^DD",69,69,.01,21,0)
^^1^1^2841123^
"^DD",69,69,.01,21,1,0)
Date of order.
"^DD",69,69,.01,"DT")
2870914
"^DD",69,69,.5,0)
CURRENT ORDER NUMBER^NJ7,0^^2;1^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",69,69,.5,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 9999999
"^DD",69,69,.5,21,0)
^^1^1^2841129^
"^DD",69,69,.5,21,1,0)
The count of the order number for the current year.
"^DD",69,69,.5,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",69,69,.5,"DT")
2840503
"^DD",69,69,1,0)
SPECIMEN #^69.01PA^^1;0
"^DD",69,69,1,21,0)
^^1^1^2950609^^^^
"^DD",69,69,1,21,1,0)
The sequential specimen number.
"^DD",69,69.01,0)
SPECIMEN # SUB-FIELD^NL^30^29
"^DD",69,69.01,0,"DT")
3060206
"^DD",69,69.01,0,"IX","AA",69.01,.01)

"^DD",69,69.01,0,"IX","AC",69.01,8)

"^DD",69,69.01,0,"IX","AD",69.01,8)

"^DD",69,69.01,0,"IX","AE",69.01,26)
 
"^DD",69,69.01,0,"IX","AL",69.01,21)

"^DD",69,69.01,0,"IX","AN",69.01,21)

"^DD",69,69.01,0,"IX","AN2",69.01,21)

"^DD",69,69.01,0,"IX","AP",69.01,21)

"^DD",69,69.01,0,"IX","AR",69.01,21)

"^DD",69,69.01,0,"NM","SPECIMEN #")

"^DD",69,69.01,0,"UP")
69
"^DD",69,69.01,.001,0)
SPECIMEN #^NJ6,0^^ ^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",69,69.01,.001,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 999999
"^DD",69,69.01,.001,21,0)
^^1^1^2841129^
"^DD",69,69.01,.001,21,1,0)
The sequence number of individual specimens on orders for a given date.
"^DD",69,69.01,.01,0)
LRDFN^RP63'O^LR(^0;1^Q
"^DD",69,69.01,.01,.1)

"^DD",69,69.01,.01,1,0)
^.1
"^DD",69,69.01,.01,1,1,0)
69.01^AA
"^DD",69,69.01,.01,1,1,1)
S ^LRO(69,DA(1),1,"AA",$E(X,1,30),DA)=""
"^DD",69,69.01,.01,1,1,2)
K ^LRO(69,DA(1),1,"AA",$E(X,1,30),DA)
"^DD",69,69.01,.01,1,2,0)
69^D^MUMPS
"^DD",69,69.01,.01,1,2,1)
S ^LRO(69,"D",$E(X,1,30),DA(1),DA)=""
"^DD",69,69.01,.01,1,2,2)
K ^LRO(69,"D",$E(X,1,30),DA(1),DA)
"^DD",69,69.01,.01,2)
S Y(0)=Y S Y1=^DIC($P(^LR(Y(0),0),U,2),0,"GL")_$P(^LR(Y(0),0),U,3)_",0)",Y=$P(@Y1,U) K Y1
"^DD",69,69.01,.01,2.1)
S Y1=^DIC($P(^LR(Y(0),0),U,2),0,"GL")_$P(^LR(Y(0),0),U,3)_",0)",Y=$P(@Y1,U) K Y1
"^DD",69,69.01,.01,21,0)
^^1^1^2890626^^
"^DD",69,69.01,.01,21,1,0)
The internal number in the Lab Data file 63.
"^DD",69,69.01,.01,"DT")
2900830
"^DD",69,69.01,.02,0)
PARENT FILE^CJ12^^ ; ^X ^DD(69.01,.02,9.2) S Y(69.01,.02,101)=$S($D(^LR(D0,0)):^(0),1:"") S X=$S('$D(^DIC(+$P(Y(69.01,.02,101),U,2),0)):"",1:$P(^(0),U,1)) S D0=Y(69.01,.02,2)
"^DD",69,69.01,.02,9)
^
"^DD",69,69.01,.02,9.01)
63^.02;69.01^.01
"^DD",69,69.01,.02,9.1)
LRDFN:PARENT FILE
"^DD",69,69.01,.02,9.2)
S Y(69.01,.02,2)=$S($D(D0):D0,1:""),Y(69.01,.02,1)=$S($D(^LRO(69,D0,1,D1,0)):^(0),1:""),D0=$P(Y(69.01,.02,1),U,1) S:'$D(^LR(+D0,0)) D0=-1
"^DD",69,69.01,.02,21,0)
^^1^1^2841129^
"^DD",69,69.01,.02,21,1,0)
Computed field to give the parent file of the data in file 63.
"^DD",69,69.01,.03,0)
NAME^CJ30^^ ; ^X ^DD(69.01,.03,9.2) S Y(69.01,.03,101)=$S($D(^LR(D0,0)):^(0),1:""),Y(69.01,.03,102)=X,Y=$P(Y(69.01,.03,101),U,3) X:$D(^DD(63,.03,2)) ^(2) S X=Y S D0=Y(69.01,.03,2)
"^DD",69,69.01,.03,9)
^
"^DD",69,69.01,.03,9.01)
63^.03;69.01^.01
"^DD",69,69.01,.03,9.1)
LRDFN:NAME
"^DD",69,69.01,.03,9.2)
S Y(69.01,.03,2)=$S($D(D0):D0,1:""),Y(69.01,.03,1)=$S($D(^LRO(69,D0,1,D1,0)):^(0),1:""),D0=$P(Y(69.01,.03,1),U,1) S:'$D(^LR(+D0,0)) D0=-1
"^DD",69,69.01,.03,21,0)
^^2^2^2841129^
"^DD",69,69.01,.03,21,1,0)
Computed field to give the name of the entry of the data in file 63 from
"^DD",69,69.01,.03,21,2,0)
the parent file for that entry.
"^DD",69,69.01,.11,0)
OERR ORDER #^F^^0;11^K:$L(X)>15!($L(X)<1) X
"^DD",69,69.01,.11,3)
Answer must be 1-15 characters in length.
"^DD",69,69.01,.11,21,0)
^^2^2^2960409^
"^DD",69,69.01,.11,21,1,0)
This field is used to store the OE/RR order number that links Lab with
"^DD",69,69.01,.11,21,2,0)
OE/RR.
"^DD",69,69.01,.11,"DT")
2960409
"^DD",69,69.01,1,0)
ENTERING PERSON^RP200^VA(200,^0;2^Q
"^DD",69,69.01,1,21,0)
^^1^1^2841129^^
"^DD",69,69.01,1,21,1,0)
Points to NEW PERSON file.  Automatically stored.
"^DD",69,69.01,1,"DT")
2920331
"^DD",69,69.01,2,0)
SPECIMEN^69.02PA^^4;0
"^DD",69,69.01,2,21,0)
^^2^2^2841129^
"^DD",69,69.01,2,21,1,0)
Points to the specimen(s) for the given order.  (Some areas of lab
"^DD",69,69.01,2,21,2,0)
treat a collection of samples as a SINGLE collection "sample").
"^DD",69,69.01,3,0)
COLLECTION SAMPLE^RP62^LAB(62,^0;3^Q
"^DD",69,69.01,3,21,0)
^^1^1^2841129^
"^DD",69,69.01,3,21,1,0)
Points to the collection sample appropriate for the test(s) ordered.
"^DD",69,69.01,4,0)
LAB,IMM OR WARD COLLECT^S^LC:LAB COLLECT;WC:WARD COLLECT;SP:SEND PATIENT;I:IMM. LAB COLLECT;P:POC;^0;4^Q
"^DD",69,69.01,4,21,0)
^^1^1^2840827^
"^DD",69,69.01,4,21,1,0)
This designates how the sample or specimen is to reach the lab.
"^DD",69,69.01,4,"DT")
3010601
"^DD",69,69.01,5,0)
DATE/TIME ORDERED^D^^0;5^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.01,5,3)
ENTER THE CURRENT DATE@TIME
"^DD",69,69.01,5,21,0)
^^1^1^2850830^^^
"^DD",69,69.01,5,21,1,0)
Self explanatory.
"^DD",69,69.01,5.5,0)
EST. DATE/TIME OF COLLECTION^D^^0;8^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.01,5.5,21,0)
^^1^1^2920113^
"^DD",69,69.01,5.5,21,1,0)
This is the estimated time of the collection.
"^DD",69,69.01,5.5,"DT")
2850816
"^DD",69,69.01,6,0)
TEST^69.03PA^^2;0
"^DD",69,69.01,6,21,0)
^^1^1^2950609^^^^
"^DD",69,69.01,6,21,1,0)
The tests for the specimen.
"^DD",69,69.01,7,0)
PROVIDER^R*P200'^VA(200,^0;6^S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))",D="AK.PROVIDER" D IX^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.01,7,12)
Selection must be made from active PROVIDERS who hold the PROVIDER security key.
"^DD",69,69.01,7,12.1)
S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))"
"^DD",69,69.01,7,21,0)
^^1^1^2841129^
"^DD",69,69.01,7,21,1,0)
The person signing for the order.
"^DD",69,69.01,7,"DT")
2920904
"^DD",69,69.01,8,0)
REPORT ROUTING LOCATION^R*P44'XO^SC(^0;7^K:$L(X)<2!($L(X)>30) X I $D(X) X:X="?" ^DD(69.01,8,4) Q:X="?"  S L1=X,DIC(0)="EQMZ",DIC=44 D ^DIC S:$D(Y(0)) X=$P(Y(0),U,1) X:Y<1 ^DD(69.01,8,9.2) Q:'$D(X)  S:X']"" X="UNK" S:$D(LRDFN) ^LR(+LRDFN,.1)=X
"^DD",69,69.01,8,1,0)
^.1
"^DD",69,69.01,8,1,1,0)
69.01^AC
"^DD",69,69.01,8,1,1,1)
S ^LRO(69,DA(1),1,"AC",$E(X,1,30),DA)=""
"^DD",69,69.01,8,1,1,2)
K ^LRO(69,DA(1),1,"AC",$E(X,1,30),DA)
"^DD",69,69.01,8,1,1,3)
AC x-ref is set equal to 1 if the entry is on the collection list
"^DD",69,69.01,8,1,2,0)
69.01^AD^MUMPS
"^DD",69,69.01,8,1,2,1)
I $P(^LRO(69,DA(1),1,DA,0),U,4)="LC" S ^LRO(69,DA(1),1,"AD",$E(X,1,30),$P(^LRO(69,DA(1),1,DA,0),U,1),DA)=""
"^DD",69,69.01,8,1,2,2)
K ^LRO(69,DA(1),1,"AD",$E(X,1,30),$P(^LRO(69,DA(1),1,DA,0),U,1),DA)
"^DD",69,69.01,8,2)
S Y(0)=Y S Y(0)=Y
"^DD",69,69.01,8,2.1)
S Y(0)=Y
"^DD",69,69.01,8,3)

"^DD",69,69.01,8,4)
S X="?",DIC(0)="Q",DIC="^SC(",D="B" K DO D DQ^DICQ K DIC S DIC=DIE D DO^DIC1
"^DD",69,69.01,8,9.2)
K X R !?3,"NON-STANDARD LOCATION!, OK? N//",YN:300 I $T S:YN["Y" X=L1
"^DD",69,69.01,8,21,0)
^^2^2^2841129^
"^DD",69,69.01,8,21,1,0)
The service or location from which the order is originating, and
"^DD",69,69.01,8,21,2,0)
where the report will be returned.
"^DD",69,69.01,8,"DT")
2950209
"^DD",69,69.01,9.5,0)
ORDER #^F^^.1;1^K:X[""""!(X'?.ANP)!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<1) X
"^DD",69,69.01,9.5,1,0)
^.1
"^DD",69,69.01,9.5,1,1,0)
69^C^MUMPS
"^DD",69,69.01,9.5,1,1,1)
D C^LRXREF1
"^DD",69,69.01,9.5,1,1,2)
K ^LRO(69,"C",+X,DA(1),DA)
"^DD",69,69.01,9.5,3)
ANSWER MUST BE 1-8 CHARACTERS IN LENGTH
"^DD",69,69.01,9.5,21,0)
^^1^1^2841129^
"^DD",69,69.01,9.5,21,1,0)
The unique assigned order number for an ordering session for one "patient".
"^DD",69,69.01,10,0)
DATE/TIME OF COLLECTION^RDX^^1;1^S %DT(0)="-N",%DT="EPTX" D ^%DT K %DT(0) S X=Y K:Y<1 X
"^DD",69,69.01,10,3)
DATE/TIME CAN'T BE IN THE FUTURE
"^DD",69,69.01,10,21,0)
^^1^1^2841129^
"^DD",69,69.01,10,21,1,0)
When the specimen was collected from the "patient".
"^DD",69,69.01,10,"DT")
2940318
"^DD",69,69.01,11,0)
DATE/TIME OBTAINED INEXACT^S^1:YES;0:NO;^1;2^Q
"^DD",69,69.01,11,21,0)
^^2^2^2841129^
"^DD",69,69.01,11,21,1,0)
If the time the specimen is obtained is not even approximate, this field
"^DD",69,69.01,11,21,2,0)
is set to yes.
"^DD",69,69.01,11,"DT")
2870714
"^DD",69,69.01,12,0)
COLLECTOR^RP200^VA(200,^1;3^Q
"^DD",69,69.01,12,21,0)
^^1^1^2841129^
"^DD",69,69.01,12,21,1,0)
The phlebotomist who is accessioning the collected order.
"^DD",69,69.01,12,"DT")
2920331
"^DD",69,69.01,13,0)
COLLECTION STATUS^S^C:COLLECTED;U:UNCOLLECTED;M:MERGE;^1;4^Q
"^DD",69,69.01,13,1,0)
^.1
"^DD",69,69.01,13,1,1,0)
69^AA^MUMPS
"^DD",69,69.01,13,1,1,1)
S:'$P(^LRO(69,DA(1),1,DA,0),U,10) ^LRO(69,"AA",DA(1)_"|"_DA)=""
"^DD",69,69.01,13,1,1,2)
K ^LRO(69,"AA",DA(1)_"|"_DA)
"^DD",69,69.01,13,1,1,"%D",0)
^^2^2^2910410^^
"^DD",69,69.01,13,1,1,"%D",1,0)
 This cross reference is used to tally WKLD work load. It is deleted
"^DD",69,69.01,13,1,1,"%D",2,0)
after the tally has been made.
"^DD",69,69.01,13,1,1,"DT")
2910410
"^DD",69,69.01,13,21,0)
^^1^1^2841129^
"^DD",69,69.01,13,21,1,0)
This indicates whether the order is collected or uncollected.
"^DD",69,69.01,13,"DT")
2890329
"^DD",69,69.01,14,0)
*VOLUME^F^^1;5^K:$L(X)>10!($L(X)<1) X
"^DD",69,69.01,14,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",69,69.01,14,21,0)
^^1^1^2870708^^
"^DD",69,69.01,14,21,1,0)
No longer used.
"^DD",69,69.01,15,0)
COMMENT^F^^1;6^K:$L(X)>80!($L(X)<2) X
"^DD",69,69.01,15,3)
ANSWER MUST BE 2-80 CHARACTERS IN LENGTH
"^DD",69,69.01,15,21,0)
^^1^1^2841129^
"^DD",69,69.01,15,21,1,0)
Single line comment about the order.
"^DD",69,69.01,16,0)
WARD COMMENTS ON SPECIMEN^69.04^^6;0
"^DD",69,69.01,16,21,0)
^^1^1^2841129^
"^DD",69,69.01,16,21,1,0)
Comments about the order.
"^DD",69,69.01,20,0)
LAB ARRIVAL TIME^D^^3;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.01,20,1,0)
^.1^^0
"^DD",69,69.01,20,21,0)
^^1^1^2850830^^
"^DD",69,69.01,20,21,1,0)
Self explanatory.
"^DD",69,69.01,20,"DT")
3000829
"^DD",69,69.01,21,0)
DATE/TIME RESULTS AVAILABLE^D^^3;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.01,21,1,0)
^.1
"^DD",69,69.01,21,1,1,0)
69.01^AR^MUMPS
"^DD",69,69.01,21,1,1,1)
D AR1^LRXREF,AR2^LRXREF
"^DD",69,69.01,21,1,1,2)
D AR1^LRXREF,AR3^LRXREF
"^DD",69,69.01,21,1,2,0)
69.01^AP^MUMPS
"^DD",69,69.01,21,1,2,1)
D AP^LRXREF,AP1^LRXREF
"^DD",69,69.01,21,1,2,2)
D AP^LRXREF,AP2^LRXREF
"^DD",69,69.01,21,1,3,0)
69.01^AL^MUMPS
"^DD",69,69.01,21,1,3,1)
D AL^LRXREF,AL1^LRXREF
"^DD",69,69.01,21,1,3,2)
D AL^LRXREF,AL2^LRXREF
"^DD",69,69.01,21,1,4,0)
69^AN^MUMPS
"^DD",69,69.01,21,1,4,1)
D AN1^LRXREF
"^DD",69,69.01,21,1,4,2)
D AN2^LRXREF
"^DD",69,69.01,21,1,5,0)
69.01^AN2^MUMPS
"^DD",69,69.01,21,1,5,1)
S ^LRO(69,DA(1),1,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,15),$P(^(0),U,1),9999999-$P(^LRO(69,DA(1),1,DA,1),U,1))=""
"^DD",69,69.01,21,1,5,2)
K ^LRO(69,DA(1),1,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,15),$P(^(0),U,1),9999999-$P(^LRO(69,DA(1),1,DA,1),U,1))
"^DD",69,69.01,21,21,0)
^^1^1^2841129^
"^DD",69,69.01,21,21,1,0)
This is the date/time ALL results for this specimen are complete.
"^DD",69,69.01,21,"DT")
2890807
"^DD",69,69.01,22,0)
MERGE ORDER #^F^^1;7^K:$L(X)>15!($L(X)<1) X
"^DD",69,69.01,22,3)
Answer must be 1-15 characters in length.
"^DD",69,69.01,22,21,0)
^^2^2^2930720^^
"^DD",69,69.01,22,21,1,0)
 If this order was merged with another order, the order number for that
"^DD",69,69.01,22,21,2,0)
order is entered here. Automatically stuffed by the system.
"^DD",69,69.01,22,"DT")
2890329
"^DD",69,69.01,23,0)
ORDERING LOCATION^P44'^SC(^0;9^Q
"^DD",69,69.01,23,3)
This is the location that is ordering the test.
"^DD",69,69.01,23,21,0)
^^2^2^2930327^
"^DD",69,69.01,23,21,1,0)
 This field contains the location ordering the test and to whom completed
"^DD",69,69.01,23,21,2,0)
results will be sent.
"^DD",69,69.01,23,"DT")
2891212
"^DD",69,69.01,24,0)
COUNTED FOR WORKLOAD^S^1:YES;^0;10^Q
"^DD",69,69.01,24,21,0)
^^2^2^2960710^
"^DD",69,69.01,24,21,1,0)
 If this accession has been tallied to wkld totals, a yes will be stuffed
"^DD",69,69.01,24,21,2,0)
into this field by the software which runs in the background.
"^DD",69,69.01,24,"DT")
2910321
"^DD",69,69.01,25,0)
INSTITUTION^P4'^DIC(4,^1;8^Q
"^DD",69,69.01,25,21,0)
^^3^3^2930327^^
"^DD",69,69.01,25,21,1,0)
 This field contains the institution entering the request for this particular
"^DD",69,69.01,25,21,2,0)
test. This field becomes very important when dealing with multi-divisional
"^DD",69,69.01,25,21,3,0)
sites.
"^DD",69,69.01,25,"DT")
2910410
"^DD",69,69.01,30,0)
PCE ENC #^F^^PCE;1^K:$L(X)>30!($L(X)<1) X
"^DD",69,69.01,30,3)
Answer must be 1-30 characters in length.
"^DD",69,69.01,30,21,0)
^^9^9^2981112^
"^DD",69,69.01,30,21,1,0)
 This field contains a list of PCE Encounters generated for this specimen.
"^DD",69,69.01,30,21,2,0)
If ther are multiple laboratory accession areas required for this order,
"^DD",69,69.01,30,21,3,0)
encounter numbers will be stored separated by semi-colons.
"^DD",69,69.01,30,21,4,0)
 
"^DD",69,69.01,30,21,5,0)
This field is also used to control the building of the ^LRO(69,"AE")
"^DD",69,69.01,30,21,6,0)
should LAB ORDER ENTRY (#69) file were to be re-indexed. If the field is
"^DD",69,69.01,30,21,7,0)
defined then the Cancel By field DD(69.03,10,0) will not recreate the
"^DD",69,69.01,30,21,8,0)
X-Reference. The ^LRO(69,"AE") cross reference is used to pass deleted
"^DD",69,69.01,30,21,9,0)
test information to PCE so that the billing record can be updated.
"^DD",69,69.01,30,"DT")
2970318
"^DD",69,69.02,0)
SPECIMEN SUB-FIELD^NL^.01^1
"^DD",69,69.02,0,"NM","SPECIMEN")

"^DD",69,69.02,0,"UP")
69.01
"^DD",69,69.02,.01,0)
SPECIMEN^MP61^LAB(61,^0;1^Q
"^DD",69,69.02,.01,1,0)
^.1^^0
"^DD",69,69.02,.01,21,0)
^^1^1^2841129^
"^DD",69,69.02,.01,21,1,0)
Points to the specimen for the given order.
"^DD",69,69.03,0)
TEST SUB-FIELD^NL^99.1^24
"^DD",69,69.03,0,"DT")
3060206
"^DD",69,69.03,0,"IX","AB",69.03,.01)
 
"^DD",69,69.03,0,"IX","AT",69.03,.01)

"^DD",69,69.03,0,"IX","B",69.03,.01)

"^DD",69,69.03,0,"NM","TEST")

"^DD",69,69.03,0,"UP")
69.01
"^DD",69,69.03,.01,0)
TEST/PROCEDURE^*P60'^LAB(60,^0;1^S DIC("S")="I ""N""'[$P(^(0),U,3)!$D(^XUSEC(""LRSUPER"",DUZ))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.03,.01,1,0)
^.1^^-1
"^DD",69,69.03,.01,1,1,0)
69.03^B
"^DD",69,69.03,.01,1,1,1)
S ^LRO(69,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",69,69.03,.01,1,1,2)
K ^LRO(69,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",69,69.03,.01,1,2,0)
69.03^AT^MUMPS
"^DD",69,69.03,.01,1,2,1)
D AT^LRXREF1 ;  S ^LRO(69,"AT",LRDFN,LRTEST,LRSPEC,LRODT)="This is used for maximum test order frequency.",^(-LRODT)=""
"^DD",69,69.03,.01,1,2,2)
D ATD^LRXREF1 ;  K ^LRO(69,"AT",LRDFN,LRTEST,LRSPEC,LRODT),^(-LRODT)
"^DD",69,69.03,.01,3)

"^DD",69,69.03,.01,12)
CHOOSE ORDERABLE TESTS ONLY
"^DD",69,69.03,.01,12.1)
S DIC("S")="I ""N""'[$P(^(0),U,3)!$D(^XUSEC(""LRSUPER"",DUZ))"
"^DD",69,69.03,.01,12.2)
I "N"'[$P(^(0),U,3)!$D(^XUSEC("LRSUPER",DUZ))
"^DD",69,69.03,.01,21,0)
^^1^1^2950609^^^
"^DD",69,69.03,.01,21,1,0)
The tests for the specimen.
"^DD",69,69.03,.01,"DT")
3021108
"^DD",69,69.03,1,0)
URGENCY^P62.05'^LAB(62.05,^0;2^Q
"^DD",69,69.03,1,3)

"^DD",69,69.03,1,21,0)
^^1^1^2841129^
"^DD",69,69.03,1,21,1,0)
Routine, Stat, etc.
"^DD",69,69.03,1,"DT")
2830824
"^DD",69,69.03,2,0)
ACCESSION DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.03,2,21,0)
^^1^1^2841129^
"^DD",69,69.03,2,21,1,0)
The date piece of the accession.
"^DD",69,69.03,3,0)
ACCESSION AREA^*P68'^LRO(68,^0;4^S DIC("S")="I '$L($P(^(0),U,17))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.03,3,12)
Can not select an Work Area Accession area.
"^DD",69,69.03,3,12.1)
S DIC("S")="I '$L($P(^(0),U,17))"
"^DD",69,69.03,3,21,0)
^^1^1^2850830^^
"^DD",69,69.03,3,21,1,0)
The accession area where the test may be found.
"^DD",69,69.03,3,"DT")
2920106
"^DD",69,69.03,4,0)
ACCESSION NUMBER^NJ5,0^^0;5^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",69,69.03,4,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 99999
"^DD",69,69.03,4,21,0)
^^1^1^2841129^
"^DD",69,69.03,4,21,1,0)
The number piece of the accession where the test may be found.
"^DD",69,69.03,5,0)
COMBINED ON ORDER^NJ7,0^^0;6^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",69,69.03,5,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 9999999
"^DD",69,69.03,5,21,0)
^^3^3^2841129^^
"^DD",69,69.03,5,21,1,0)
If the test has been combined with another order (i.e., this test is
"^DD",69,69.03,5,21,2,0)
a duplication of part of another order), this points to the order with
"^DD",69,69.03,5,21,3,0)
which the test has been combined.
"^DD",69,69.03,5,"DT")
2840829
"^DD",69,69.03,6,0)
OERR INTERNAL FILE #^P100'^OR(100,^0;7^Q
"^DD",69,69.03,6,3)
Answer must be 1-20 characters in length and is automatically entered.
"^DD",69,69.03,6,21,0)
^^2^2^2930720^^^
"^DD",69,69.03,6,21,1,0)
This provides the link to the correlate entry of the test ordered as
"^DD",69,69.03,6,21,2,0)
it appears in OERR.
"^DD",69,69.03,6,"DT")
2930720
"^DD",69,69.03,7,0)
PANEL EXPLODED^S^1:YES;^0;8^Q
"^DD",69,69.03,7,3)
Enter a '1' if the panel has no accession area assigned and has been exploded and accessioned.
"^DD",69,69.03,7,21,0)
^^2^2^2910228^^
"^DD",69,69.03,7,21,1,0)
Used to determine if panel with no accession area assigned has previously
"^DD",69,69.03,7,21,2,0)
been exploded and accessioned.
"^DD",69,69.03,7,"DT")
2910228
"^DD",69,69.03,8,0)
STATUS^S^CA:Canceled;IP:Accepted;^0;9^Q
"^DD",69,69.03,8,3)
Enter the status code for this ordered test.
"^DD",69,69.03,8,21,0)
^^3^3^2970714^^^^
"^DD",69,69.03,8,21,1,0)
This is the internal status for this test.
"^DD",69,69.03,8,21,2,0)
It is used to identify an order when it is canceled, and/or when
"^DD",69,69.03,8,21,3,0)
it is accepted by OE/RR.
"^DD",69,69.03,8,"DT")
2960409
"^DD",69,69.03,9,0)
ORIGIN^S^W:Ward;L:Lab;P:Phone;V:Verbal;S:Standard Lab Protocol;^0;10^Q
"^DD",69,69.03,9,3)
Enter the origin of this ordered test.
"^DD",69,69.03,9,21,0)
^^2^2^2970714^^^
"^DD",69,69.03,9,21,1,0)
This is how the test was ordered/entered into the system using the Lab (LR)
"^DD",69,69.03,9,21,2,0)
options.
"^DD",69,69.03,9,"DT")
2960409
"^DD",69,69.03,10,0)
CANCELED BY^P200'^VA(200,^0;11^Q
"^DD",69,69.03,10,1,0)
^.1
"^DD",69,69.03,10,1,1,0)
69^AE^MUMPS
"^DD",69,69.03,10,1,1,1)
S:'$D(^LRO(69,DA(2),1,DA(1),"PCE")) ^LRO(69,"AE",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,10,1,1,2)
K ^LRO(69,"AE",$E(1,30),DA(2),DA(1),DA)
"^DD",69,69.03,10,1,1,3)
This cross reference is used to update PCE of canceled test
"^DD",69,69.03,10,1,1,"%D",0)
^^6^6^2981026^
"^DD",69,69.03,10,1,1,"%D",1,0)
 This cross reference is set when a test is canceled. The Lab PCE API uses
"^DD",69,69.03,10,1,1,"%D",2,0)
these entries to notify PCE that this test was not performed. After
"^DD",69,69.03,10,1,1,"%D",3,0)
notification of PCE the X-ref is removed.
"^DD",69,69.03,10,1,1,"%D",4,0)
 
"^DD",69,69.03,10,1,1,"%D",5,0)
This X-ref should not be set if no initial notification to PCE that this
"^DD",69,69.03,10,1,1,"%D",6,0)
test was done.
"^DD",69,69.03,10,1,1,"DT")
2981026
"^DD",69,69.03,10,3)
Enter the person who canceled the order.
"^DD",69,69.03,10,21,0)
^^1^1^2960409^
"^DD",69,69.03,10,21,1,0)
This is the person who canceled this test.
"^DD",69,69.03,10,"DT")
2981026
"^DD",69,69.03,11,0)
PCE COUNTED^S^0:NOT COUNTED;1:COUNTED;^0;12^Q
"^DD",69,69.03,11,21,0)
^^2^2^2960614^
"^DD",69,69.03,11,21,1,0)
This field is used to indicate that the test has been counted for
"^DD",69,69.03,11,21,2,0)
a patient encounter (PCE).
"^DD",69,69.03,11,"DT")
2960614
"^DD",69,69.03,12,0)
PCE VISIT #^NJ13,0^^0;13^K:+X'=X!(X>9999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",69,69.03,12,3)
Type a Number between 0 and 9999999999999, 0 Decimal Digits
"^DD",69,69.03,12,21,0)
^^7^7^2961019^
"^DD",69,69.03,12,21,1,0)
 This field contains the NPCDB generated visit number. If this has the PCE
"^DD",69,69.03,12,21,2,0)
counted field set to 1, this field will contain the visit number if the
"^DD",69,69.03,12,21,3,0)
call to the API was successful.
"^DD",69,69.03,12,21,4,0)
 
"^DD",69,69.03,12,21,5,0)
This field became effective as of 11/1/96. Data submitted the NPCDB prior
"^DD",69,69.03,12,21,6,0)
to the installation of LR*5.2*138 will not contain visit number
"^DD",69,69.03,12,21,7,0)
information.
"^DD",69,69.03,12,"DT")
2961019
"^DD",69,69.03,13,0)
UID^F^^.3;1^K:$L(X)>15!($L(X)<10) X
"^DD",69,69.03,13,3)
Answer must be 10-15 characters in length.
"^DD",69,69.03,13,21,0)
^^3^3^2970712^
"^DD",69,69.03,13,21,1,0)
 This is the UID used by the HOST LEDI system for this order/accession.
"^DD",69,69.03,13,21,2,0)
 
"^DD",69,69.03,13,21,3,0)
This field is used by LEDI software.
"^DD",69,69.03,13,"DT")
2970127
"^DD",69,69.03,14,0)
ORDERING SITE^*P4'^DIC(4,^.3;2^S DIC("S")="I $G(^(Y,99))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.03,14,1,0)
^.1
"^DD",69,69.03,14,1,1,0)
69^AC
"^DD",69,69.03,14,1,1,1)
S ^LRO(69,"AC",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,14,1,1,2)
K ^LRO(69,"AC",$E(X,1,30),DA(2),DA(1),DA)
"^DD",69,69.03,14,1,1,"DT")
2961221
"^DD",69,69.03,14,12)
Must have a site number defined
"^DD",69,69.03,14,12.1)
S DIC("S")="I $G(^(Y,99))"
"^DD",69,69.03,14,21,0)
^^7^7^2970712^
"^DD",69,69.03,14,21,1,0)
 This field contains the pointer to the INSTITUTION file for the
"^DD",69,69.03,14,21,2,0)
MailMan domain location of the computer system. All LEDI results are
"^DD",69,69.03,14,21,3,0)
returned to the Ordering computer system.
"^DD",69,69.03,14,21,4,0)
 
"^DD",69,69.03,14,21,5,0)
Location to send LEDI HL7 result messages.
"^DD",69,69.03,14,21,6,0)
 
"^DD",69,69.03,14,21,7,0)
This field is used by LEDI software.
"^DD",69,69.03,14,"DT")
2961221
"^DD",69,69.03,15,0)
COLLECTING SITE^P4'^DIC(4,^.3;3^Q
"^DD",69,69.03,15,3)

"^DD",69,69.03,15,21,0)
^^5^5^2970712^
"^DD",69,69.03,15,21,1,0)
 This field contain the pointer to the INSTITUTION file for the actual
"^DD",69,69.03,15,21,2,0)
collection site. The ordering site is the MailMan location of the computer
"^DD",69,69.03,15,21,3,0)
system. MailMan domain location and the collecting site may be different.
"^DD",69,69.03,15,21,4,0)
 
"^DD",69,69.03,15,21,5,0)
This field is used by LEDI software.
"^DD",69,69.03,15,"DT")
2970226
"^DD",69,69.03,16,0)
HOST UID^F^^.3;4^K:$L(X)>15!($L(X)<10) X
"^DD",69,69.03,16,1,0)
^.1
"^DD",69,69.03,16,1,1,0)
69^AD
"^DD",69,69.03,16,1,1,1)
S ^LRO(69,"AD",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,16,1,1,2)
K ^LRO(69,"AD",$E(X,1,30),DA(2),DA(1),DA)
"^DD",69,69.03,16,1,1,"DT")
2961221
"^DD",69,69.03,16,3)
Answer must be 10-15 characters in length.
"^DD",69,69.03,16,21,0)
^^7^7^2970712^
"^DD",69,69.03,16,21,1,0)
 Each Order/Accession is given a HOST UID. The UID is stored in this
"^DD",69,69.03,16,21,2,0)
location. If LEDI software is used to accession specimens, usually the
"^DD",69,69.03,16,21,3,0)
collecting sites UID is used to track specimens. If the collecting UID
"^DD",69,69.03,16,21,4,0)
conflict is the HOST system number sequence, the HOST UID will be used
"^DD",69,69.03,16,21,5,0)
instead of the collecting site's UID.
"^DD",69,69.03,16,21,6,0)
 
"^DD",69,69.03,16,21,7,0)
This field is used by LEDI software.
"^DD",69,69.03,16,"DT")
2970127
"^DD",69,69.03,17,0)
ORDERING SITE UID^F^^.3;5^K:$L(X)>15!($L(X)<10) X
"^DD",69,69.03,17,3)
Answer must be 10-15 characters in length.
"^DD",69,69.03,17,21,0)
^^3^3^2970712^^
"^DD",69,69.03,17,21,1,0)
 This field contains the collecting sites UID for this specimen.
"^DD",69,69.03,17,21,2,0)
 
"^DD",69,69.03,17,21,3,0)
This field is used by LEDI software.
"^DD",69,69.03,17,"DT")
2970226
"^DD",69,69.03,20,0)
COMBINED FROM^F^^0;14^K:$L(X)>30!($L(X)<3) X
"^DD",69,69.03,20,3)
Answer must be 3-30 characters in length.
"^DD",69,69.03,20,21,0)
^^1^1^2970326^
"^DD",69,69.03,20,21,1,0)
This is a reference to the entry that this test was combined from.
"^DD",69,69.03,20,"DT")
2970326
"^DD",69,69.03,21,0)
ICD-9 CODES^69.05P^^2;0
"^DD",69,69.03,21,21,0)
^^1^1^3030924^
"^DD",69,69.03,21,21,1,0)
ICD-9 ordering diagnosis code.
"^DD",69,69.03,21,"DT")
3030917
"^DD",69,69.03,22,0)
DATE OF SERVICE^D^^3;1^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.03,22,21,0)
^.001^2^2^3051114^^
"^DD",69,69.03,22,21,1,0)
This is the Date of Service to be sent to the billing application for
"^DD",69,69.03,22,21,2,0)
billing.
"^DD",69,69.03,22,"DT")
3051210
"^DD",69,69.03,22.1,0)
PANEL PENDING^S^0:NO;1:YES;^3;2^Q
"^DD",69,69.03,22.1,1,0)
^.1^^0
"^DD",69,69.03,22.1,21,0)
^^4^4^3051114^
"^DD",69,69.03,22.1,21,1,0)
This field will be set to "YES" in the case where an AMA/Billable
"^DD",69,69.03,22.1,21,2,0)
Panel still has one or more atomic tests "pending" verified
"^DD",69,69.03,22.1,21,3,0)
results.
"^DD",69,69.03,22.1,21,4,0)
  
"^DD",69,69.03,22.1,"DT")
3051210
"^DD",69,69.03,99,0)
TEST COMMENTS^69.399^^1;0
"^DD",69,69.03,99.1,0)
CANCEL REASON^69.3991^^1.1;0
"^DD",69,69.04,0)
WARD COMMENTS ON SPECIMEN SUB-FIELD^NL^.01^1
"^DD",69,69.04,0,"NM","WARD COMMENTS ON SPECIMEN")

"^DD",69,69.04,0,"UP")
69.01
"^DD",69,69.04,.01,0)
WARD COMMENTS ON SPECIMEN^W^^0;1^Q
"^DD",69,69.04,.01,21,0)
^^1^1^2841129^
"^DD",69,69.04,.01,21,1,0)
Comments about the order.
"^DD",69,69.04,.01,"DT")
2841001
"^DD",69,69.05,0)
ICD-9 CODES SUB-FIELD^^8^10
"^DD",69,69.05,0,"DT")
3040322
"^DD",69,69.05,0,"IX","B",69.05,.01)

"^DD",69,69.05,0,"NM","ICD-9 CODES")

"^DD",69,69.05,0,"UP")
69.03
"^DD",69,69.05,.01,0)
ICD-9 CODES^P80'^ICD9(^0;1^Q
"^DD",69,69.05,.01,1,0)
^.1
"^DD",69,69.05,.01,1,1,0)
69.05^B
"^DD",69,69.05,.01,1,1,1)
S ^LRO(69,DA(3),1,DA(2),2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",69,69.05,.01,1,1,2)
K ^LRO(69,DA(3),1,DA(2),2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",69,69.05,.01,21,0)
^^5^5^3040210^
"^DD",69,69.05,.01,21,1,0)
ICD-9 ordering diagnosis code.  For CPRS laboratory orders, the ordering
"^DD",69,69.05,.01,21,2,0)
provider enters this diagnosis via CPRS.  For internal laboratory orders,
"^DD",69,69.05,.01,21,3,0)
the provider must indicate the diagnosis code on paper for entry by the
"^DD",69,69.05,.01,21,4,0)
laboratory staff.  When the lab test is resulted, the ordering diagnosis
"^DD",69,69.05,.01,21,5,0)
code will be sent to PCE/PTF for billing purposes.
"^DD",69,69.05,.01,"DT")
3040210
"^DD",69,69.05,1,0)
SERVICE CONNECTION INDICATOR^S^0:NO;1:YES;^0;2^Q
"^DD",69,69.05,1,21,0)
^.001^5^5^3030924^^^
"^DD",69,69.05,1,21,1,0)
Indicates if the care provided is for a service connected or non-service
"^DD",69,69.05,1,21,2,0)
connected condition.  The ordering provider is responsible for providing
"^DD",69,69.05,1,21,3,0)
Service Connection indicator to the laboratory via CPRS entry or, for internal
"^DD",69,69.05,1,21,4,0)
laboratory orders, on paper.  The Service Connection indicator
"^DD",69,69.05,1,21,5,0)
is sent to PCE/PTF at verification.
"^DD",69,69.05,1,"DT")
3030917
"^DD",69,69.05,2,0)
COMBAT VETERAN^S^0:NO;1:YES;^0;3^Q
"^DD",69,69.05,2,21,0)
^^5^5^3040123^
"^DD",69,69.05,2,21,1,0)
Indicates if the care provided is to treat a condition related to Combat 
"^DD",69,69.05,2,21,2,0)
Veteran exposure.  The ordering provider is responsible for providing the 
"^DD",69,69.05,2,21,3,0)
Combat Veteran indicator to the laboratory via CPRS entry or, for internal
"^DD",69,69.05,2,21,4,0)
laboratory orders, on paper.  The Combat Veteran indicator is sent to PCE
"^DD",69,69.05,2,21,5,0)
at verification.
"^DD",69,69.05,2,"DT")
3040123
"^DD",69,69.05,3,0)
AGENT ORANGE^S^0:NO;1:YES;^0;4^Q
"^DD",69,69.05,3,21,0)
^.001^5^5^3060131^^
"^DD",69,69.05,3,21,1,0)
Indicates if the care provided is to treat a condition related to Agent 
"^DD",69,69.05,3,21,2,0)
Orange exposure.  The ordering provider is responsible for providing the 
"^DD",69,69.05,3,21,3,0)
Agent Orange indicator to the laboratory via CPRS entry or, for internal 
"^DD",69,69.05,3,21,4,0)
laboratory orders, on paper.  The Agent Orange indicator is sent to PCE 
"^DD",69,69.05,3,21,5,0)
at verification.
"^DD",69,69.05,3,"DT")
3040123
"^DD",69,69.05,4,0)
IONIZING RADIATION^S^0:NO;1:YES;^0;5^Q
"^DD",69,69.05,4,21,0)
^.001^5^5^3060607^^
"^DD",69,69.05,4,21,1,0)
Indicates if the care provided is to treat a condition related to Ionizing
"^DD",69,69.05,4,21,2,0)
Radiation exposure.  The ordering provider is responsible for ible for 
"^DD",69,69.05,4,21,3,0)
providing the Ionizing Radiation indicator to the laboratory via CPRS
"^DD",69,69.05,4,21,4,0)
entry or, for internal laboratory orders, on paper.  The Ionizing 
"^DD",69,69.05,4,21,5,0)
Radiation indicator is sent to PCE at verification.
"^DD",69,69.05,4,"DT")
3040123
"^DD",69,69.05,5,0)
SOUTHWEST ASIA CONDITIONS^S^0:NO;1:YES;^0;6^Q
"^DD",69,69.05,5,3)
Enter '1' or 'Y(es)' if care provided is to treat a condition related to Southwest Asia Conditions (SWAC); otherwise, enter '0' or 'N(o)'.
"^DD",69,69.05,5,21,0)
^.001^6^6^3081009^^^^
"^DD",69,69.05,5,21,1,0)
Indicates if the care provided is to treat a condition related to 
"^DD",69,69.05,5,21,2,0)
Southwest Asia Conditions (formerly referred to as  Environmental
"^DD",69,69.05,5,21,3,0)
Contaminants ) during the Persian Gulf War.  The ordering provider
"^DD",69,69.05,5,21,4,0)
is responsible for providing the indicator to the laboratory via 
"^DD",69,69.05,5,21,5,0)
CPRS entry or, for internal laboratory orders, on paper.  The 
"^DD",69,69.05,5,21,6,0)
Southwest Asia Conditions indicator is sent to PCE at verification.
"^DD",69,69.05,5,"DT")
3060607
"^DD",69,69.05,6,0)
MILITARY SEXUAL TRAUMA^S^0:NO;1:YES;^0;7^Q
"^DD",69,69.05,6,21,0)
^.001^4^4^3060104^^^
"^DD",69,69.05,6,21,1,0)
Indicates if the care provided is to treat a condition related to MST.  
"^DD",69,69.05,6,21,2,0)
The ordering provider is responsible for providing the Environmental MST
"^DD",69,69.05,6,21,3,0)
indicator to the laboratory via CPRS entry or, for internal laboratory 
"^DD",69,69.05,6,21,4,0)
orders, on paper.  The MST indicator is sent to PCE at verification.
"^DD",69,69.05,6,"DT")
3051223
"^DD",69,69.05,7,0)
HEAD AND NECK CANCER^S^0:NO;1:YES;^0;8^Q
"^DD",69,69.05,7,21,0)
^.001^5^5^3060104^^^^
"^DD",69,69.05,7,21,1,0)
Indicates if the care provided is to treat a condition related to Head 
"^DD",69,69.05,7,21,2,0)
and Neck Cancer. The ordering provider is responsible for providing the 
"^DD",69,69.05,7,21,3,0)
Head and Neck Cancer indicator to the laboratory via CPRS entry or, for 
"^DD",69,69.05,7,21,4,0)
internal laboratory orders, on paper.  The Head and Neck Cancer indicator
"^DD",69,69.05,7,21,5,0)
is sent to PCE at verification.
"^DD",69,69.05,7,"DT")
3051223
"^DD",69,69.05,8,0)
PRIMARY DIAGNOSIS^S^1:YES;0:NO;^0;9^Q
"^DD",69,69.05,8,21,0)
^^1^1^3040322^
"^DD",69,69.05,8,21,1,0)
This diagnosis is the primary diagnosis.
"^DD",69,69.05,8,"DT")
3040322
"^DD",69,69.05,9,0)
SHIPBOARD HAZARD AND DEFENSE^S^0:NO;1:YES;^0;10^Q
"^DD",69,69.05,9,3)
Enter '1' or 'Y(es)' if care provided is to treat a condition related to Shipboard Hazard and Defense (SHAD); otherwise, enter '0' or 'N(o)'.
"^DD",69,69.05,9,21,0)
^.001^5^5^3081009^^^^
"^DD",69,69.05,9,21,1,0)
Indicates if the care provided is to treat a condition related to 
"^DD",69,69.05,9,21,2,0)
Shipboard Hazard And Defense (SHAD).  The ordering provider is responsible
"^DD",69,69.05,9,21,3,0)
for providing the value for the SHAD indicator to the laboratory via CPRS
"^DD",69,69.05,9,21,4,0)
entry or, for internal laboratory orders, on paper.  The indicator value
"^DD",69,69.05,9,21,5,0)
is sent to PCE at verification.
"^DD",69,69.05,9,"DT")
3060606
"^DD",69,69.399,0)
TEST COMMENTS SUB-FIELD^^.01^1
"^DD",69,69.399,0,"DT")
2960409
"^DD",69,69.399,0,"NM","TEST COMMENTS")

"^DD",69,69.399,0,"UP")
69.03
"^DD",69,69.399,.01,0)
TEST COMMENTS^W^^0;1^Q
"^DD",69,69.399,.01,3)
Enter the comments for this test.
"^DD",69,69.399,.01,21,0)
^^1^1^2970703^^
"^DD",69,69.399,.01,21,1,0)
This is the comments associated with the test.
"^DD",69,69.399,.01,"DT")
2960409
"^DD",69,69.3991,0)
CANCEL REASON SUB-FIELD^^.01^1
"^DD",69,69.3991,0,"DT")
2980129
"^DD",69,69.3991,0,"NM","CANCEL REASON")

"^DD",69,69.3991,0,"UP")
69.03
"^DD",69,69.3991,.01,0)
CANCEL REASON^W^^0;1^Q
"^DD",69,69.3991,.01,3)
Enter a free text reason for cancelling this test.
"^DD",69,69.3991,.01,21,0)
^^1^1^2980129^
"^DD",69,69.3991,.01,21,1,0)
This is the free text reason for cancelling a test.
"^DD",69,69.3991,.01,"DT")
2980129
"^DIC",69,69,0)
LAB ORDER ENTRY^69D
"^DIC",69,69,0,"GL")
^LRO(69,
"^DIC",69,69,"%",0)
^1.005^^0
"^DIC",69,69,"%D",0)
^^26^26^2890914^^^^
"^DIC",69,69,"%D",1,0)
This file controls the orderly sequence of lab test ordering.  All ordering
"^DIC",69,69,"%D",2,0)
information is stored in the ^LRO global.  This file is pointed to by many
"^DIC",69,69,"%D",3,0)
other files, and supplies information for order entry and order status 
"^DIC",69,69,"%D",4,0)
output.  No editing of the entries should take place, as it may cause
"^DIC",69,69,"%D",5,0)
corruption or loss of ordering information. The file contains print and 
"^DIC",69,69,"%D",6,0)
sort templates that are used by a variety of lab routines and options to
"^DIC",69,69,"%D",7,0)
format reports.
"^DIC",69,69,"%D",8,0)
 
"^DIC",69,69,"%D",9,0)
CROSS REFERENCE DESCRIPTION:
"^DIC",69,69,"%D",10,0)
 ^LRO(69,"C",'ORDER #',LRODT,LRSN)
"^DIC",69,69,"%D",11,0)
 ^LRO(69,LRODT,1,"AA",LRDFN,LRSN) = Used by LROS (order status)
"^DIC",69,69,"%D",12,0)
 ^LRO(69,"AT",LRDFN,LRTEST,LRSREC,LRODT) = "" This is used for maximum test order frequency.
"^DIC",69,69,"%D",13,0)
  >>> THIS GROUP IS SET AT THE TIME OF VERIFICATION IF NOT A CONTROL. <<<
"^DIC",69,69,"%D",14,0)
 ^LRO(69,DT,1,"AC",'REPORT ROUTING LOCATION',LRSN) = "" or 1
"^DIC",69,69,"%D",15,0)
   Used by some of the reporting routines and collection list
"^DIC",69,69,"%D",16,0)
   (set to 1 when on collection list)
"^DIC",69,69,"%D",17,0)
 ^LRO(69,'DATE RESULTS AVAILABLE',1,"AR",'LOCATION','PT. NAME',LRDFN)
"^DIC",69,69,"%D",18,0)
      This is used by the daily cummulative
"^DIC",69,69,"%D",19,0)
 ^LRO(69,DT,1,"AR",'LOCATION','PT. NAME',LRDFN) = ""
"^DIC",69,69,"%D",20,0)
 ^LRO(69,DT,1,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DIC",69,69,"%D",21,0)
 ^LRO(69,'DRAW DATE',1,"AL",'LOCATION',PNM,LRDFN) = ""
"^DIC",69,69,"%D",22,0)
 ^LRO(69,'DRAW DATE',1,"AP",'DOC NAME',PNM,LRDFN) = ""
"^DIC",69,69,"%D",23,0)
 ^LRO(69,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DIC",69,69,"%D",24,0)
    Used by LRWD to give a list of patients with new lab data since
"^DIC",69,69,"%D",25,0)
    the start of the day.
"^DIC",69,69,"%D",26,0)
 ^LRO(69,DT,1,"AD",'REPORT ROUTING LOCATION',LRDFN,LRSN)= "" Used by the cumm
"^DIC",69,"B","LAB ORDER ENTRY",69)

"BLD",5958,6)
^304
**END**
**END**
