Released LR*5.2*424 SEQ #347
Extracted from mail message
**KIDS**:LR*5.2*424^

**INSTALL NAME**
LR*5.2*424
"BLD",9247,0)
LR*5.2*424^LAB SERVICE^0^3130926^y
"BLD",9247,1,0)
^^6^6^3130910^
"BLD",9247,1,1,0)
This patch will resolve the following issues in the Laboratory package:
"BLD",9247,1,2,0)
 
"BLD",9247,1,3,0)
-Lab test accessioned without appropriate accession area
"BLD",9247,1,4,0)
-<SUBSCRIPT> error when using Enter/verify data (auto instrument) option
"BLD",9247,1,5,0)
-<UNDEFINED> error when editing Autopsy Acc #
"BLD",9247,1,6,0)
-LOINC code not appearing in panel tests
"BLD",9247,4,0)
^9.64PA^63^1
"BLD",9247,4,63,0)
63
"BLD",9247,4,63,2,0)
^9.641^63^1
"BLD",9247,4,63,2,63,0)
LAB DATA  (File-top level)
"BLD",9247,4,63,2,63,1,0)
^9.6411^14^1
"BLD",9247,4,63,2,63,1,14,0)
AUTOPSY  ACC #
"BLD",9247,4,63,222)
y^n^p^^^^n^^n
"BLD",9247,4,63,224)

"BLD",9247,4,"APDD",63,63)

"BLD",9247,4,"APDD",63,63,14)

"BLD",9247,4,"B",63,63)

"BLD",9247,6.3)
4
"BLD",9247,"KRN",0)
^9.67PA^779.2^20
"BLD",9247,"KRN",.4,0)
.4
"BLD",9247,"KRN",.401,0)
.401
"BLD",9247,"KRN",.402,0)
.402
"BLD",9247,"KRN",.403,0)
.403
"BLD",9247,"KRN",.5,0)
.5
"BLD",9247,"KRN",.84,0)
.84
"BLD",9247,"KRN",3.6,0)
3.6
"BLD",9247,"KRN",3.8,0)
3.8
"BLD",9247,"KRN",9.2,0)
9.2
"BLD",9247,"KRN",9.8,0)
9.8
"BLD",9247,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9247,"KRN",9.8,"NM",1,0)
LROE2^^0^B11045939
"BLD",9247,"KRN",9.8,"NM",2,0)
LRVR1^^0^B56575699
"BLD",9247,"KRN",9.8,"NM",3,0)
LRWLST^^0^B33834407
"BLD",9247,"KRN",9.8,"NM","B","LROE2",1)

"BLD",9247,"KRN",9.8,"NM","B","LRVR1",2)

"BLD",9247,"KRN",9.8,"NM","B","LRWLST",3)

"BLD",9247,"KRN",19,0)
19
"BLD",9247,"KRN",19.1,0)
19.1
"BLD",9247,"KRN",101,0)
101
"BLD",9247,"KRN",409.61,0)
409.61
"BLD",9247,"KRN",771,0)
771
"BLD",9247,"KRN",779.2,0)
779.2
"BLD",9247,"KRN",870,0)
870
"BLD",9247,"KRN",8989.51,0)
8989.51
"BLD",9247,"KRN",8989.52,0)
8989.52
"BLD",9247,"KRN",8994,0)
8994
"BLD",9247,"KRN","B",.4,.4)

"BLD",9247,"KRN","B",.401,.401)

"BLD",9247,"KRN","B",.402,.402)

"BLD",9247,"KRN","B",.403,.403)

"BLD",9247,"KRN","B",.5,.5)

"BLD",9247,"KRN","B",.84,.84)

"BLD",9247,"KRN","B",3.6,3.6)

"BLD",9247,"KRN","B",3.8,3.8)

"BLD",9247,"KRN","B",9.2,9.2)

"BLD",9247,"KRN","B",9.8,9.8)

"BLD",9247,"KRN","B",19,19)

"BLD",9247,"KRN","B",19.1,19.1)

"BLD",9247,"KRN","B",101,101)

"BLD",9247,"KRN","B",409.61,409.61)

"BLD",9247,"KRN","B",771,771)

"BLD",9247,"KRN","B",779.2,779.2)

"BLD",9247,"KRN","B",870,870)

"BLD",9247,"KRN","B",8989.51,8989.51)

"BLD",9247,"KRN","B",8989.52,8989.52)

"BLD",9247,"KRN","B",8994,8994)

"BLD",9247,"QUES",0)
^9.62^^
"BLD",9247,"REQB",0)
^9.611^2^2
"BLD",9247,"REQB",1,0)
LR*5.2*350^2
"BLD",9247,"REQB",2,0)
LR*5.2*290^2
"BLD",9247,"REQB","B","LR*5.2*290",2)

"BLD",9247,"REQB","B","LR*5.2*350",1)

"FIA",63)
LAB DATA
"FIA",63,0)
^LR(
"FIA",63,0,0)
63I
"FIA",63,0,1)
y^n^p^^^^n^^n
"FIA",63,0,10)

"FIA",63,0,11)

"FIA",63,0,"RLRO")

"FIA",63,0,"VR")
5.2^LR
"FIA",63,63)
1
"FIA",63,63,14)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2981028^66481
"PKG",26,22,1,"PAH",1,0)
424^3130926
"PKG",26,22,1,"PAH",1,1,0)
^^6^6^3130926
"PKG",26,22,1,"PAH",1,1,1,0)
This patch will resolve the following issues in the Laboratory package:
"PKG",26,22,1,"PAH",1,1,2,0)
 
"PKG",26,22,1,"PAH",1,1,3,0)
-Lab test accessioned without appropriate accession area
"PKG",26,22,1,"PAH",1,1,4,0)
-<SUBSCRIPT> error when using Enter/verify data (auto instrument) option
"PKG",26,22,1,"PAH",1,1,5,0)
-<UNDEFINED> error when editing Autopsy Acc #
"PKG",26,22,1,"PAH",1,1,6,0)
-LOINC code not appearing in panel tests
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","LROE2")
0^1^B11045939^B10836155
"RTN","LROE2",1,0)
LROE2 ;DALISC/FHS - CONTINUED MORE ORDER ENTRY ;8/11/97
"RTN","LROE2",2,0)
 ;;5.2;LAB SERVICE;**121,424**;Sep 27, 1994;Build 4
"RTN","LROE2",3,0)
 ;Formerly apart of LROE1
"RTN","LROE2",4,0)
Q15 ;from LROE1
"RTN","LROE2",5,0)
 Q:'$D(^LRO(69,LRODT,1,LRSN,0))
"RTN","LROE2",6,0)
 I $D(^LRO(69,LRODT,1,LRSN,1)),$P(^(1),"^",4)="U" W !,"This specimen has already been marked as UNCOLLECTED. Are you sure" S %=2 D YN^DICN Q:%'=1  S ^(1)=LRTIM_"^^"_DUZ,DA=LRSN,DA(1)=LRODT,DIE="^LRO(69,"_DA(1)_",1,",DR=16 D ^DIE
"RTN","LROE2",7,0)
 I M9>1 D LRSPEC^LROE1 S S1=$S($D(^LAB(61,+LRSPEC,0)):$P(^(0),U),1:""),S2=$P(^LAB(62,LRSAMP,0),U),S4=$P(^(0),U,3),S3=S1_$S(S1'=S2:"  "_S2,1:"") W !,"Do you have the  ",S3,"  ",S4 K S1,S2,S3,S4 S %=2 D YN^DICN G Q15:%=0 Q:%'=1
"RTN","LROE2",8,0)
 S DA=DT,LRDFN=+^LRO(69,LRODT,1,LRSN,0),LRDPF=+$P(^LR(LRDFN,0),U,2)
"RTN","LROE2",9,0)
 IF '$D(^LRO(69,LRODT,1,LRSN,1)) S LRSTATUS="C",DA=LRODT I '$D(LRSND) D P15^LROE1 Q:LRCDT<1
"RTN","LROE2",10,0)
 I $D(LRSND),$P(^LRO(69,LRODT,1,LRSN,0),U,4)="LC",$D(^(1)) S LRLLOC=$P(^(0),U,7),LROLLOC=$P(^(0),U,9),LRNT=$S($D(LRNT):LRNT,$D(LRTIM):LRTIM,$D(LRCDT):+LRCDT,1:"") D P15^LRPHITEM G PH
"RTN","LROE2",11,0)
 I $D(LRSND) N COMB S COMB=$P($G(^LRO(69,LRODT,1,LRSN,1)),"^",7) S ^LRO(69,LRODT,1,LRSN,1)=LRTIM_"^"_LRUN_"^"_DUZ_"^"_LRSTATUS_"^^^"_COMB_"^"_DUZ(2) S:LRSTATUS="C" ^LRO(69,"AA",+$G(^LRO(69,LRODT,1,LRSN,.1)),LRODT_"|"_LRSN)=""
"RTN","LROE2",12,0)
PH G Q16:LRORD D ORDER^LROW2 G Q16A
"RTN","LROE2",13,0)
Q16 S J=0 D CHECK^LROW2 I J D BAD^LROW2
"RTN","LROE2",14,0)
Q16A I $D(LRLONG),$D(LRSND) S LRSN=LRSND,^TMP("LROE",$J,"LRORD")=LRORD_U_LRODT_U_LRTIM_U_PNM_U_SSN
"RTN","LROE2",15,0)
 K DR S LRTSTS=0
"RTN","LROE2",16,0)
 S LRSN=0 F  S LRSN=$O(LRSN(LRSN)) Q:'LRSN  D Q17
"RTN","LROE2",17,0)
 I $D(LRLONG),$D(LRSND) S LRSN=LRSND D LROE^LRFAST S X=^TMP("LROE",$J,"LRORD"),LRORD=+X,LRODT=$P(X,"^",2),LRTIM=$P(X,"^",3),LRLONG="",PNM=$P(X,"^",4),SSN=$P(X,"^",5)
"RTN","LROE2",18,0)
 Q
"RTN","LROE2",19,0)
Q17 S I=$O(^LRO(69,LRODT,1,LRSN,6,0)),J=$O(^(1)) S:'$D(IOM) IOM=80 K LRSPCDSC S:J LRSPCDSC=^(J,0) S:I DA=LRSN,DA(1)=LRODT,DR=6,DIC="^LRO(69,"_LRODT_",1," D EN^DIQ:I D LRSPEC^LROE1
"RTN","LROE2",20,0)
 N LROACCERR
"RTN","LROE2",21,0)
 D OLD^LRORDST K ^TMP("LR",$J,"TMP")
"RTN","LROE2",22,0)
 Q:$G(LROACCERR)  ;*424 - Do not mark collected
"RTN","LROE2",23,0)
 S $P(^LRO(69,LRODT,1,LRSN,1),U,4)="C",$P(^LRO(69,LRODT,1,LRSN,1),U,8)=DUZ(2),^LRO(69,"AA",+$G(^LRO(69,LRODT,1,LRSN,.1)),LRODT_"|"_LRSN)=""
"RTN","LROE2",24,0)
 Q
"RTN","LRVR1")
0^2^B56575699^B56535395
"RTN","LRVR1",1,0)
LRVR1 ;DALOI/CJS/JAH - LAB ROUTINE DATA VERIFICATION ;11/23/11  12:11
"RTN","LRVR1",2,0)
 ;;5.2;LAB SERVICE;**42,153,221,286,291,350,424**;Sep 27, 1994;Build 4
"RTN","LRVR1",3,0)
 ;
"RTN","LRVR1",4,0)
 N LRBETST,LRBEY,LRI,LRN,LRPRGSQ
"RTN","LRVR1",5,0)
 S (LRI,LRN)=0
"RTN","LRVR1",6,0)
 F  S LRI=$O(^LAH(LRLL,1,"C",LRAN,LRI)) Q:LRI<1  D
"RTN","LRVR1",7,0)
 . N LRX
"RTN","LRVR1",8,0)
 . S LRX=$G(^LAH(LRLL,1,LRI,0))
"RTN","LRVR1",9,0)
 . ; Quit if different accession area.
"RTN","LRVR1",10,0)
 . I $P(LRX,"^",3),$P(LRX,"^",3)'=LRAA Q
"RTN","LRVR1",11,0)
 . ; Quit if different accession date and not a rollover accession (same original accession date).
"RTN","LRVR1",12,0)
 . I $P(LRX,"^",4),$P(LRX,"^",4)'=LRAD,$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),"^",3)'=$P($G(^LRO(68,LRAA,1,$P(LRX,"^",4),1,LRAN,0)),"^",3) Q
"RTN","LRVR1",13,0)
 . I LRN W !
"RTN","LRVR1",14,0)
 . S LRN=LRN+1,LRSQ=LRI,LRPRGSQ(LRI)=""
"RTN","LRVR1",15,0)
 . W !,?2,"Seq #: ",LRI,?13," Accession: ",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^")
"RTN","LRVR1",16,0)
 . I $P(LRX,"^",10) W ?40," Results received: ",$$FMTE^XLFDT($P(LRX,"^",10),"1M")
"RTN","LRVR1",17,0)
 . W !,?20,"UID: ",$P($G(^LAH(LRLL,1,LRI,.3),"UNKNOWN"),"^")
"RTN","LRVR1",18,0)
 . I $P(LRX,"^",11) W ?44," Last updated: ",$$FMTE^XLFDT($P(LRX,"^",11),"1M")
"RTN","LRVR1",19,0)
 ;
"RTN","LRVR1",20,0)
 ; If multiple sets of results then query user if they want to display a specific sequence
"RTN","LRVR1",21,0)
 I LRN>1 D
"RTN","LRVR1",22,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,X,Y
"RTN","LRVR1",23,0)
 . S DIR(0)="SO^0:Skip Display"
"RTN","LRVR1",24,0)
 . S I=0 F  S I=$O(LRPRGSQ(I)) Q:'I  S DIR(0)=DIR(0)_";"_I_":Seq # "_I
"RTN","LRVR1",25,0)
 . S DIR("A")="Display results associated with sequence #",DIR("B")="Skip Display"
"RTN","LRVR1",26,0)
 . D ^DIR
"RTN","LRVR1",27,0)
 . I Y<1 W ! Q
"RTN","LRVR1",28,0)
 . D SEQDISP(LRLL,Y)
"RTN","LRVR1",29,0)
 ;
"RTN","LRVR1",30,0)
 G VER:LRN=1,T3:LRN>1
"RTN","LRVR1",31,0)
 ;
"RTN","LRVR1",32,0)
 ; If attempting to verify reference lab results and no entry in LAH
"RTN","LRVR1",33,0)
 ; associated with this accession then quit - do not allow manual entry
"RTN","LRVR1",34,0)
 ; of ref lab results via this option. Will not store units/normals.
"RTN","LRVR1",35,0)
 I $G(LRDUZ(2)),DUZ(2)'=LRDUZ(2) W !,"No data there" Q
"RTN","LRVR1",36,0)
 ;
"RTN","LRVR1",37,0)
T1 R !,"What tray: ",X:DTIME Q:X["^"!'$T  I X["?"!(X'?.N) W !,"Enter a number" G T1
"RTN","LRVR1",38,0)
 I X'="" S LRTRAY=X G T2
"RTN","LRVR1",39,0)
 I $D(^LRO(68.2,"AS",LRLL)) W !,"Can't MANUALLY add to a SEQUENCE instrument data file." G QUIT
"RTN","LRVR1",40,0)
 W !,"Enter manually" S %=1 D YN^DICN G QUIT:%<1,T1:%=2 S LRSQ=-1 G VER
"RTN","LRVR1",41,0)
 G VER
"RTN","LRVR1",42,0)
 ;
"RTN","LRVR1",43,0)
T2 R !,"What cup: ",X:DTIME Q:X["^"!'$T  I X["?"!(X'?.N) W !,"Enter a number" G T2
"RTN","LRVR1",44,0)
 Q:X=""
"RTN","LRVR1",45,0)
 S LRTRCP=LRTRAY_";"_X I $L(LRTRCP)>200 S LRN=0 G T3 ;*424 - Do not allow string over 200
"RTN","LRVR1",46,0)
 K LRPRGSQ
"RTN","LRVR1",47,0)
 S LRN=0
"RTN","LRVR1",48,0)
 F LRI=0:0 S LRI=$O(^LAH(LRLL,1,"B",LRTRCP,LRI)) Q:LRI<1  S LRN=LRN+1,LRSQ=LRI,LRPRGSQ(LRI)="" W !,?5,LRI
"RTN","LRVR1",49,0)
 ;
"RTN","LRVR1",50,0)
T3 I LRN=0 W !,"No data for that tray & cup" Q
"RTN","LRVR1",51,0)
 I LRN>1 R !,"Choose sequence number: ",X:DTIME Q:'$T  I X["?"!(X'?.N) W !,"Enter a number" G T3
"RTN","LRVR1",52,0)
 I X["^"!(X="") K LRPRGSQ Q
"RTN","LRVR1",53,0)
 S:LRN'=1 LRSQ=X
"RTN","LRVR1",54,0)
 I '$D(^LAH(LRLL,1,LRSQ,0)) W !,"No data there" G T3
"RTN","LRVR1",55,0)
 ;
"RTN","LRVR1",56,0)
VER ; from LRFLAG, LRGP, LRVRW
"RTN","LRVR1",57,0)
 N LRROOT
"RTN","LRVR1",58,0)
 K LRTEST,LRNM,^TMP("LR",$J,"TMP")
"RTN","LRVR1",59,0)
 S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRVR1",60,0)
 ;
"RTN","LRVR1",61,0)
 ; Determine if there are amended results to process via "EM"
"RTN","LRVR1",62,0)
 S LRROOT=$Q(^LAH("LA7 AMENDED RESULTS",LRUID,1,LRLL))
"RTN","LRVR1",63,0)
 I LRROOT'="",$QS(LRROOT,1)="LA7 AMENDED RESULTS",$QS(LRROOT,2)=LRUID,$QS(LRROOT,4)=LRLL D  Q
"RTN","LRVR1",64,0)
 . W !!,"Amended results exist for this accession. Please process these"
"RTN","LRVR1",65,0)
 . W !,"first using option Enter/verify/modify data (manual) [LRENTER]"
"RTN","LRVR1",66,0)
 ;
"RTN","LRVR1",67,0)
 D TEST
"RTN","LRVR1",68,0)
 I $O(^TMP("LR",$J,"TMP",0))="" W !,"No tests in editing profile" Q
"RTN","LRVR1",69,0)
 S X=DUZ D DUZ^LRX
"RTN","LRVR1",70,0)
 G V2:LRSQ>0
"RTN","LRVR1",71,0)
 ;
"RTN","LRVR1",72,0)
 L +^LAH(LRLL):DILOCKTM
"RTN","LRVR1",73,0)
 I '$T Q
"RTN","LRVR1",74,0)
 ;
"RTN","LRVR1",75,0)
 S (^LAH(LRLL),LRSQ)=1+$G(^LAH(LRLL))
"RTN","LRVR1",76,0)
 S ^LAH(LRLL,1,LRSQ,0)="^^"_LRAA_"^"_LRAD_"^"_LRAN_"^^MANUAL"
"RTN","LRVR1",77,0)
 D UID^LAGEN(LRLL,LRSQ,LRUID)
"RTN","LRVR1",78,0)
 D UPDT^LAGEN(LRLL,LRSQ)
"RTN","LRVR1",79,0)
 S ^LAH(LRLL,1,"C",LRAN,LRSQ)=""
"RTN","LRVR1",80,0)
 L -^LAH(LRLL)
"RTN","LRVR1",81,0)
 ;
"RTN","LRVR1",82,0)
V2 K LRPRGSQ(LRSQ)
"RTN","LRVR1",83,0)
 S LRLLOC=0,LROUTINE=$P(^LAB(69.9,1,3),U,2)
"RTN","LRVR1",84,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S LRLLOC=$P(^(0),U,7) S:'$L(LRLLOC) LRLLOC=0 W !,$P(^LRO(69,LRODT,1,LRSN,1),U,6)
"RTN","LRVR1",85,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVR1",86,0)
 I '$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",3) D
"RTN","LRVR1",87,0)
 . N %DT,LRA1,LRA2,LRA3
"RTN","LRVR1",88,0)
 . S %DT("B")=$$FMTE^XLFDT(LRCDT,"1")
"RTN","LRVR1",89,0)
 . S LRSTATUS="C",LRA1=LRAA,LRA2=LRAD,LRA3=LRAN
"RTN","LRVR1",90,0)
 . D P15^LROE1
"RTN","LRVR1",91,0)
 . S LRAA=LRA1,LRAD=LRA2,LRAN=LRA3
"RTN","LRVR1",92,0)
 . I LRCDT<1 Q
"RTN","LRVR1",93,0)
 . I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) S $P(^(3),U,3)=$$NOW^XLFDT
"RTN","LRVR1",94,0)
 ; If user did not update then go to next
"RTN","LRVR1",95,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,3) Q
"RTN","LRVR1",96,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U)
"RTN","LRVR1",97,0)
 I LRCDT<1 Q
"RTN","LRVR1",98,0)
 S LREAL=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,2),LRALERT=LROUTINE
"RTN","LRVR1",99,0)
 S I=0
"RTN","LRVR1",100,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  I $G(^(I,0)) S LRAL=$P($G(^(0)),U,2) D
"RTN","LRVR1",101,0)
 . I $G(LRAL) S LRALERT=$S(LRAL<50&(LRAL<LRALERT):LRAL,LRAL>50&(LRAL-50<LRALERT):LRAL-50,1:LRALERT)
"RTN","LRVR1",102,0)
 S LRSAMP=$P($G(^LRO(69,LRODT,1,LRSN,0)),U,3)
"RTN","LRVR1",103,0)
 ;
"RTN","LRVR1",104,0)
 S LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRVR1",105,0)
 I LRSS'="CH" Q
"RTN","LRVR1",106,0)
 ; Check for valid pointer to file #63 and entry in file #63.
"RTN","LRVR1",107,0)
 S LRIDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5)
"RTN","LRVR1",108,0)
 I LRIDT<1 W !,">>>>ERROR - NO POINTER TO FILE #63 - PLEASE NOTIFY SYSTEM MANAGER^ <<<<<",! Q
"RTN","LRVR1",109,0)
 I '$D(^LR(LRDFN,LRSS,LRIDT,0)) W !,">>>>ERROR - NO ENTRY IN FILE #63 - PLEASE NOTIFY SYSTEM MANAGER<<^ <<<",! Q
"RTN","LRVR1",110,0)
 ;
"RTN","LRVR1",111,0)
 S LRCW=8
"RTN","LRVR1",112,0)
LD S LRSS="CH"
"RTN","LRVR1",113,0)
 ;
"RTN","LRVR1",114,0)
 ; If bad entry then cleanup as best as possible.
"RTN","LRVR1",115,0)
 I '($D(^LAH(LRLL,1,LRSQ,0))#2) D  Q
"RTN","LRVR1",116,0)
 . W !!?5,"No Data for this Accession ",!!
"RTN","LRVR1",117,0)
 . D ZAPALL^LRVR3(LRLL,LRSQ)
"RTN","LRVR1",118,0)
 . K LRPRGSQ
"RTN","LRVR1",119,0)
 ;
"RTN","LRVR1",120,0)
 ; Store any new methods with existing methods on file.
"RTN","LRVR1",121,0)
 S LRMETH=$P(^LAH(LRLL,1,LRSQ,0),U,7) S:$D(LRGVP) LRMETH=LRMETH_"(GV)"
"RTN","LRVR1",122,0)
 I $P($G(^LR(LRDFN,LRSS,LRIDT,0)),U,8)'="" D
"RTN","LRVR1",123,0)
 . N I,X
"RTN","LRVR1",124,0)
 . S X=$P(^LR(LRDFN,LRSS,LRIDT,0),U,8)
"RTN","LRVR1",125,0)
 . F I=1:1:$L(X,";") I $P(X,";",I)'="",LRMETH'[$P(X,";",I) S LRMETH=LRMETH_";"_$P(X,";",I)
"RTN","LRVR1",126,0)
 I LRMETH'="" S $P(^LR(LRDFN,LRSS,LRIDT,0),U,8)=LRMETH
"RTN","LRVR1",127,0)
 ;
"RTN","LRVR1",128,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVR1",129,0)
 ;
"RTN","LRVR1",130,0)
 W:$D(^LAB(62,+LRSAMP,0)) !,"Sample: ",$P(^(0),U)
"RTN","LRVR1",131,0)
 ;
"RTN","LRVR1",132,0)
 D ^LRVR2
"RTN","LRVR1",133,0)
 K LRDL,LRPRGSQ
"RTN","LRVR1",134,0)
 Q  ; leave LRVR1, back to LRVR
"RTN","LRVR1",135,0)
 ;
"RTN","LRVR1",136,0)
 ;
"RTN","LRVR1",137,0)
TEST ; from LRGV1
"RTN","LRVR1",138,0)
 N LRI,LRX
"RTN","LRVR1",139,0)
 S LRI=0
"RTN","LRVR1",140,0)
 F  S LRI=$O(^TMP("LR",$J,"VTO",LRI)) Q:LRI<1  K ^(LRI,"P")
"RTN","LRVR1",141,0)
 S (LRI,LRNT)=0
"RTN","LRVR1",142,0)
 F  S LRI=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRI)) Q:LRI<.5  I $D(^(LRI,0)),'$L($P(^(0),U,6)) S X=^(0) I $D(^TMP("LR",$J,"VTO",+X)) D
"RTN","LRVR1",143,0)
 . S LRNT=LRNT+1,LRTEST(LRNT)=+X,LRX=$S($P(X,"^",2)>50:$P(X,"^",9),1:$P(X,"^"))
"RTN","LRVR1",144,0)
 . I $P(X,"^",9),$P(X,"^")'=$P(X,"^",9),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,$P(X,"^",9))) S LRX=$P(X,"^",9)
"RTN","LRVR1",145,0)
 . S LRTEST(LRNT,"P")=LRX_U_$$NLT^LRVER1(LRX)_"!"
"RTN","LRVR1",146,0)
 . S ^TMP("LR",$J,"VTO",+X,"P")=$P(LRTEST(LRNT,"P"),"!")
"RTN","LRVR1",147,0)
 ;
"RTN","LRVR1",148,0)
TEST1 ; from LRFLAG
"RTN","LRVR1",149,0)
 ;
"RTN","LRVR1",150,0)
 N LRI
"RTN","LRVR1",151,0)
 F LRI=1:1:LRNT S:$D(^LAB(60,+LRTEST(LRI),0)) (LRTEST(LRI),LRBETST(LRI))=LRTEST(LRI)_U_^(0)
"RTN","LRVR1",152,0)
 I $G(LRORDR)'="P" K ^TMP("LR",$J,"TMP")
"RTN","LRVR1",153,0)
 S LRNX=0
"RTN","LRVR1",154,0)
 K LRM
"RTN","LRVR1",155,0)
 F I=1:1 Q:'$D(LRTEST(I))  D
"RTN","LRVR1",156,0)
 . S X=LRTEST(I),XP=$G(LRTEST(I,"P"))
"RTN","LRVR1",157,0)
 . K LRTEST(I)
"RTN","LRVR1",158,0)
 . D EX2
"RTN","LRVR1",159,0)
 K LRTEST
"RTN","LRVR1",160,0)
 Q
"RTN","LRVR1",161,0)
 ;
"RTN","LRVR1",162,0)
 ;
"RTN","LRVR1",163,0)
EX2 ;
"RTN","LRVR1",164,0)
 ; If dataname then process and quit
"RTN","LRVR1",165,0)
 S LRSUB=$P(X,U,6)
"RTN","LRVR1",166,0)
 I LRSUB'="" D  Q
"RTN","LRVR1",167,0)
 . S LRSB=$P(LRSUB,";",2)
"RTN","LRVR1",168,0)
 . Q:'$D(LRVTS(LRSB))
"RTN","LRVR1",169,0)
 . I $D(^TMP("LR",$J,"TMP",LRSB)) S ^(LRSB,"P")=XP
"RTN","LRVR1",170,0)
 . S ^TMP("LR",$J,"TMP",LRSB)=+X
"RTN","LRVR1",171,0)
 . S XP=XP_$$RNLT^LRVER1(+X)
"RTN","LRVR1",172,0)
 . S ^TMP("LR",$J,"TMP",LRSB,"P")=XP
"RTN","LRVR1",173,0)
 . S:$P(X,U,18) LRM(LRSB)=+X,LRM(LRSB,"P")=XP
"RTN","LRVR1",174,0)
 . S LRBEY(+XP,LRSB)=""     ; CIDC
"RTN","LRVR1",175,0)
 ;
"RTN","LRVR1",176,0)
 I $D(^LAB(60,+X,4)),$P(^(4),"^",2) S LRCFL=LRCFL_$P(^(4),"^",2)_U
"RTN","LRVR1",177,0)
 ;
"RTN","LRVR1",178,0)
 ; If panel then explode components of panel and
"RTN","LRVR1",179,0)
 ;  set parent("P" node) to file #60 test being exploded
"RTN","LRVR1",180,0)
 S J=0
"RTN","LRVR1",181,0)
 F  S J=$O(^LAB(60,+X,2,J)) Q:J<1  I $D(^(J,0))#2 D
"RTN","LRVR1",182,0)
 . S LRNT=LRNT+1,Y=^LAB(60,+X,2,J,0)
"RTN","LRVR1",183,0)
 . S LRTEST(LRNT)=+Y_U_^LAB(60,+Y,0)
"RTN","LRVR1",184,0)
 . S LRTEST(LRNT,"P")=+XP_U_$$NLT^LRVER1(+XP)_"!"
"RTN","LRVR1",185,0)
 Q
"RTN","LRVR1",186,0)
 ;
"RTN","LRVR1",187,0)
 ;
"RTN","LRVR1",188,0)
QUIT Q
"RTN","LRVR1",189,0)
 ;
"RTN","LRVR1",190,0)
 ;
"RTN","LRVR1",191,0)
WAIT W !,"Type ""^"" to skip "
"RTN","LRVR1",192,0)
WAIT1 R X:10
"RTN","LRVR1",193,0)
 G LRVR1:X[U,WAIT1:$O(^LAH(LRLL,1,"C",LRAN,0))<1
"RTN","LRVR1",194,0)
 G LRVR1
"RTN","LRVR1",195,0)
 ;
"RTN","LRVR1",196,0)
 ;
"RTN","LRVR1",197,0)
SEQDISP(LRLL,LRISQN) ; Display test results for a LAH entry.
"RTN","LRVR1",198,0)
 ; Call with LRLL = ien of enry in LAH
"RTN","LRVR1",199,0)
 ;         LRISQN = sequence ien of enry in LAH
"RTN","LRVR1",200,0)
 ;
"RTN","LRVR1",201,0)
 N LR60,LRI,LRJ,LRSB,LRX,LRY
"RTN","LRVR1",202,0)
 ;
"RTN","LRVR1",203,0)
 W !!,"Results for Sequence #"_LRISQN
"RTN","LRVR1",204,0)
 ;
"RTN","LRVR1",205,0)
 I $O(^LAH(LRLL,1,LRISQN,1)) D
"RTN","LRVR1",206,0)
 . W !,"Test",?25,"Value",?40,"Flag",?50,"Units"
"RTN","LRVR1",207,0)
 . W !,"----",?25,"-----",?40,"----",?50,"-----"
"RTN","LRVR1",208,0)
 ;
"RTN","LRVR1",209,0)
 ; Display CH subsript results.
"RTN","LRVR1",210,0)
 S LRSB=1
"RTN","LRVR1",211,0)
 F  S LRSB=$O(^LAH(LRLL,1,LRISQN,LRSB)) Q:LRSB<1  D
"RTN","LRVR1",212,0)
 . S LRX=^LAH(LRLL,1,LRISQN,LRSB)
"RTN","LRVR1",213,0)
 . S LR60=+$O(^LAB(60,"C","CH;"_LRSB_";1",0))
"RTN","LRVR1",214,0)
 . S LR60(0)=$G(^LAB(60,LR60,0))
"RTN","LRVR1",215,0)
 . W !,$E($P(LR60(0),"^"),1,24),?25," ",$P(LRX,"^"),?39," ",$P(LRX,"^",2),?49," ",$P($P(LRX,"^",5),"!",7)
"RTN","LRVR1",216,0)
 ;
"RTN","LRVR1",217,0)
 ; Display comments
"RTN","LRVR1",218,0)
 I $D(^LAH(LRLL,1,LRISQN,1)) D
"RTN","LRVR1",219,0)
 . W !,"Comments"
"RTN","LRVR1",220,0)
 . S (LRI,LRY)=0,LRJ=""
"RTN","LRVR1",221,0)
 . F  S LRY=$O(^LAH(LRLL,1,LRISQN,1,LRY)) Q:LRY<1  D
"RTN","LRVR1",222,0)
 . . S LRX=^LAH(LRLL,1,LRISQN,1,LRY),LRI=LRI+1
"RTN","LRVR1",223,0)
 . . W !,"#",LRI," ",$P(LRX,"^")
"RTN","LRVR1",224,0)
 . . I $P(LRX,"^",2) S LRJ=LRJ_$S(LRJ'="":",",1:"")_LRJ
"RTN","LRVR1",225,0)
 . W !,"Comments # ",LRJ," previously processed"
"RTN","LRVR1",226,0)
 ;
"RTN","LRVR1",227,0)
 W !
"RTN","LRVR1",228,0)
 ;
"RTN","LRVR1",229,0)
 Q
"RTN","LRWLST")
0^3^B33834407^B32689066
"RTN","LRWLST",1,0)
LRWLST ;FHS/DALOI - ACCESSION SETUP. LROE1,LRSTIK & LRFAST CALL HERE ; Aug 9, 2004
"RTN","LRWLST",2,0)
 ;;5.2;LAB SERVICE;**46,65,100,121,153,202,290,424**;Sep 27, 1994;Build 4
"RTN","LRWLST",3,0)
 N LRPWL,LRPWDT,LRPWLE
"RTN","LRWLST",4,0)
 D DT^LRX
"RTN","LRWLST",5,0)
 Q:$G(LRKIL)
"RTN","LRWLST",6,0)
 D:$D(XRTL) T0^%ZOSV ; START RESPONSE TIME LOGGING
"RTN","LRWLST",7,0)
 S LRCDT=+^LRO(69,LRODT,1,LRSN,1),LREAL=$P(^(1),U,2),X=^(0),LRLLOC=$P(X,U,7),LROLLOC=$P(X,U,9),LRORIFN=$P(X,"^",11)
"RTN","LRWLST",8,0)
 D LRAA Q:$G(LROACCERR)  D ^LRWLST1  ;*424 - Do not accession if error; LROACCERR from ^LROE2
"RTN","LRWLST",9,0)
 S LRCDT=(+LRCDT)_"^"_LREAL
"RTN","LRWLST",10,0)
 I '$L($P($G(^LRO(69,LRODT,1,LRSN,1)),"^",7)) S CONTROL=$S($L(LRORIFN):"SC",1:"SN") D NEW^LR7OB1(LRODT,LRSN,CONTROL,,,6)
"RTN","LRWLST",11,0)
 K LRTSTS,^TMP("LR",$J,"TMP"),LRNM,DIC,I,LRORIFN,LRBACK
"RTN","LRWLST",12,0)
 I $D(XRT0) S XRTN=$T(+0) D T1^%ZOSV ; STOP RESPONSE TIME LOGGING
"RTN","LRWLST",13,0)
 Q
"RTN","LRWLST",14,0)
 ;
"RTN","LRWLST",15,0)
LRAA ;
"RTN","LRWLST",16,0)
 K LRTSTS,^TMP("LR",$J,"TMP")
"RTN","LRWLST",17,0)
 S LRTSTS=0,LRIX=0,S5=0,LRTN=0
"RTN","LRWLST",18,0)
 F  S LRTN=$O(^LRO(69,LRODT,1,LRSN,2,LRTN)) Q:LRTN<1  D
"RTN","LRWLST",19,0)
 . N LRX
"RTN","LRWLST",20,0)
 . S LRX=^(LRTN,0) I '$P(LRX,U,3),'$P(LRX,U,6),'$P(LRX,U,8),'$P(LRX,U,11) S LRORIFN=$P(LRX,"^",7),LRBACK=$P(LRX,"^",14) D SET
"RTN","LRWLST",21,0)
WL1 ;
"RTN","LRWLST",22,0)
 ; LRDAA is used by POC interface to specify the POC accession area.
"RTN","LRWLST",23,0)
 S LRIX=0
"RTN","LRWLST",24,0)
 F  S LRIX=$O(^TMP("LR",$J,"TMP",LRIX)) Q:LRIX<1  D
"RTN","LRWLST",25,0)
 . S X=^(LRIX),LRTSTS=+X,LRURG=$P(X,"^",2),LRORIFN=$P(X,"^",4),LRBACK=$P(X,"^",5)
"RTN","LRWLST",26,0)
 . S LRST=^LAB(60,LRTSTS,0)
"RTN","LRWLST",27,0)
 . S LRAA=$S($G(LRDAA)>0:LRDAA,$D(^LAB(60,LRTSTS,8,$S($G(LRDUZ(2))>0:LRDUZ(2),1:DUZ(2)),0)):$P(^(0),U,2),1:"")
"RTN","LRWLST",28,0)
 . S LRNM=$P(LRST,U),LRUNQ=+$P(LRST,U,7)
"RTN","LRWLST",29,0)
 . D WL2
"RTN","LRWLST",30,0)
 Q
"RTN","LRWLST",31,0)
 ;
"RTN","LRWLST",32,0)
WL2 ;
"RTN","LRWLST",33,0)
 D FWL:$G(LRAA)="" Q:LRAA=""
"RTN","LRWLST",34,0)
 S LRWL0=^LRO(68,LRAA,0),LRSS=$P(LRWL0,U,2),LRIDIV=$S($L($P(LRWL0,U,19)):$P(LRWL0,U,19),1:"CP")
"RTN","LRWLST",35,0)
 I '$D(LRPHSET),$D(LRNCWL) W !,LRNM," TO ",$P(^LRO(68,LRAA,0),U)," accessions","? Y//" D YN Q:X="^"  IF X["N" S LRAA="" G WL2
"RTN","LRWLST",36,0)
 ;added following line to support unique ID/DALISC/JRR
"RTN","LRWLST",37,0)
 I $P($G(^LRO(68,LRAA,.4)),U)="" D  S LRAA="" Q
"RTN","LRWLST",38,0)
 . W:'$D(LRPHSET) !!?5,"You must enter a 'Numeric Identifier' in field .4 of the Accession file!!",!?10,"Accession Area ",$P($G(^LRO(68,+$G(LRAA),0)),U),!
"RTN","LRWLST",39,0)
 . D UNDO
"RTN","LRWLST",40,0)
 S LRPWL=$P($G(^LRO(68,LRAA,0)),U,4)
"RTN","LRWLST",41,0)
 I LRPWL,$P($G(^LRO(68,LRPWL,.4)),U)="" D  S LRAA="" Q
"RTN","LRWLST",42,0)
 . I $G(LRQUIET) D UNDO Q
"RTN","LRWLST",43,0)
 . W:'$D(LRPHSET) !!?5,"You must enter a 'Numeric Identifier' in field .4 of the Accession file!!"
"RTN","LRWLST",44,0)
 . W !?10,"COMMON Accession Area ",$P($G(^LRO(68,+$G(LRPWL),0)),U),!
"RTN","LRWLST",45,0)
 . D UNDO
"RTN","LRWLST",46,0)
 ;
"RTN","LRWLST",47,0)
 S LRWLC=$P(LRWL0,U,4)
"RTN","LRWLST",48,0)
 S:'LRWLC LRWLC=LRAA
"RTN","LRWLST",49,0)
 S LRTSTS(LRWLC,LRUNQ,LRAA)=LRSS_U_$P(LRWL0,U,12),LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)=^TMP("LR",$J,"TMP",LRIX)
"RTN","LRWLST",50,0)
 Q
"RTN","LRWLST",51,0)
SET ;
"RTN","LRWLST",52,0)
 I $G(LRORDRR)="R" S LRTEST(LRTN)=$G(^LRO(69,LRODT,1,LRSN,2,LRTN,0))
"RTN","LRWLST",53,0)
 S S5=S5+1,I5=$G(^LRO(69,LRODT,1,LRSN,2,LRTN,0))
"RTN","LRWLST",54,0)
 I I5 S ^TMP("LR",$J,"TMP",S5)=$P(I5,U)_U_$P(I5,U,2)_U_LRTN_U_LRORIFN_U_LRBACK_U_$S($G(LRTSP):LRTSP,1:$P(I5,U)),I5=LRTN
"RTN","LRWLST",55,0)
 Q
"RTN","LRWLST",56,0)
FWL ;
"RTN","LRWLST",57,0)
 I $O(^LAB(60,LRTSTS,2,0))>0 D EXP S $P(^LRO(69,LRODT,1,LRSN,2,$P(^TMP("LR",$J,"TMP",LRIX),U,3),0),U,8)=1 Q
"RTN","LRWLST",58,0)
 I '$D(LRNCWL),$D(LRPHSET),LRPHSET W !,"NO ACCESSION AREA FOR ORDER NUMBER ",^LRO(69,LRODT,1,LRSN,.1)," TEST ",$P(^LAB(60,LRTSTS,0),U),! D UNDO Q
"RTN","LRWLST",59,0)
 I '$D(LRNCWL) W !,LRNM," does not have an appropriate accession area.",!,"ORDER # ",LRORD," IS NOT ACCESSIONED",! S LRAA="" D UNDO Q
"RTN","LRWLST",60,0)
 W !,"For test: ",LRNM
"RTN","LRWLST",61,0)
 K DIC
"RTN","LRWLST",62,0)
 S DIC("S")="I '$L($P(^(0),U,17))",DIC="^LRO(68,",DIC(0)="AEFOQZ"
"RTN","LRWLST",63,0)
 D ^DIC
"RTN","LRWLST",64,0)
 K DIC
"RTN","LRWLST",65,0)
 I $D(DUOUT) S LRAA="" Q
"RTN","LRWLST",66,0)
 G:Y<1 FWL
"RTN","LRWLST",67,0)
 S LRAA=+Y
"RTN","LRWLST",68,0)
 Q
"RTN","LRWLST",69,0)
EXP ;
"RTN","LRWLST",70,0)
 S I=0
"RTN","LRWLST",71,0)
 F  S I=$O(^LAB(60,LRTSTS,2,I)) Q:I<1  S J=+^(I,0) I $D(^LAB(60,J,8,DUZ(2),0)) S S5=S5+1,I5=I5+1,^TMP("LR",$J,"TMP",S5)=J_"^"_LRURG_"^"_I5_"^"_LRORIFN_"^"_LRBACK_"^"_$S($G(LRTSP):LRTSP,1:LRTSTS)
"RTN","LRWLST",72,0)
 Q
"RTN","LRWLST",73,0)
PRESET ;
"RTN","LRWLST",74,0)
 I '($D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2) K ^LRO(68,LRAA,1,LRAD,1,LRAN) Q
"RTN","LRWLST",75,0)
 S LROLRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","LRWLST",76,0)
 I $L($P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,5)) S LRDPF=$P(^LR(LROLRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W !,PNM,"  ",SSN," has that log #." S LREND=1 Q  ;W !,"   OK to change it? N//" D YN I X=""!(X'["Y") S LREND=1 Q
"RTN","LRWLST",77,0)
 S LRIDT=9999999-^LRO(68,LRAA,1,LRAD,1,LRAN,3)
"RTN","LRWLST",78,0)
 Q:'$D(^LR(LROLRDFN,LRSS,LRIDT,0))
"RTN","LRWLST",79,0)
PR2 ;
"RTN","LRWLST",80,0)
 S LRNIDT=9999999-LRCDT
"RTN","LRWLST",81,0)
 F  Q:'$D(^LR(LRDFN,LRSS,LRNIDT,0))  D
"RTN","LRWLST",82,0)
 . S LRCDT=$$FMADD^XLFDT(LRCDT,,,,1)
"RTN","LRWLST",83,0)
 . S LRNIDT=9999999-LRCDT
"RTN","LRWLST",84,0)
 I $P(^LR(LROLRDFN,LRSS,LRIDT,0),U,3) S LREND=1 W !,$C(7),"CAN'T DO IT.  The data has been verified for that log number." Q
"RTN","LRWLST",85,0)
 S ^LR(LRDFN,LRSS,LRNIDT,0)=LRCDT_U_LREAL_U_$P(^LR(LROLRDFN,LRSS,LRIDT,0),U,3,4)_U_U_$P(^(0),U,6,99)
"RTN","LRWLST",86,0)
 S J=0 F  S J=$O(^LR(LROLRDFN,LRSS,LRIDT,J)) Q:J<1  S ^LR(LRDFN,LRSS,LRNIDT,J)=^LR(LROLRDFN,LRSS,LRIDT,J)
"RTN","LRWLST",87,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LROSN=$P(X,U,5),LROID=$P(X,U,6),LROCN=$S($D(^(.1)):$P(^(.1),U),1:"")
"RTN","LRWLST",88,0)
 K:$L(LROID) ^LRO(68,LRAA,1,LRAD,1,"C",LROID,LRAN)
"RTN","LRWLST",89,0)
 K:$L(LROCN) ^LRO(68,LRAA,1,LRAD,1,"D",LROCN,LRAN)
"RTN","LRWLST",90,0)
 K ^LRO(68,LRAA,1,LRAD,1,LRAN),^LR(LROLRDFN,LRSS,LRIDT)
"RTN","LRWLST",91,0)
 Q
"RTN","LRWLST",92,0)
YN ;
"RTN","LRWLST",93,0)
 R X:DTIME
"RTN","LRWLST",94,0)
 S:'$T DTOUT=1
"RTN","LRWLST",95,0)
 Q:X=""!(X["N")!(X["Y")
"RTN","LRWLST",96,0)
 W !,"Answer 'Y' or 'N': " G YN
"RTN","LRWLST",97,0)
UNDO ;Clean up ^LRO(69
"RTN","LRWLST",98,0)
 N X,TST
"RTN","LRWLST",99,0)
 S LRIFN=+$O(^LRO(69,LRODT,1,LRSN,2,"B",LRTSTS,0))  Q:LRIFN<1
"RTN","LRWLST",100,0)
 S $P(^LRO(69,LRODT,1,LRSN,2,LRIFN,0),"^",3,6)="^^^"
"RTN","LRWLST",101,0)
 S $P(^LRO(69,LRODT,1,LRSN,1),U,4)="U" ;,$P(^(1),U,6)=LRNM_" NOT ACCESSIONED - TEST DEFINITION INCOMPLETE"
"RTN","LRWLST",102,0)
 S LROACCERR=1 ;*424 - Do not accession or mark collected if error
"RTN","LRWLST",103,0)
 Q
"RTN","LRWLST",104,0)
 S X=$G(^LRO(69,LRODT,1,LRSN,2,LRIFN,0)) Q:'X  S TST(+X)=""
"RTN","LRWLST",105,0)
 S X=$S($D(^LRO(69,LRODT,1,LRSN,2,LRIFN,1.1,0)):$P(^(0),"^",3),1:0)+1,^(0)="^^"_X_"^"_X_"^"_DT,^(X,0)="Not accessioned - Test definition incomplete"
"RTN","LRWLST",106,0)
 D NEW^LR7OB1(LRODT,LRSN,"OC",,.TST)
"RTN","LRWLST",107,0)
 S $P(^LRO(69,LRODT,1,LRSN,2,LRIFN,0),"^",3,6)="^^^",$P(^(0),"^",9,11)="CA^L^"_DUZ
"RTN","LRWLST",108,0)
 Q
"RTN","LRWLST",109,0)
OR ;from LRPHITEM
"RTN","LRWLST",110,0)
 I $G(LRORDRR)="R" S LRTEST(LRTN)=$G(^LRO(69,LRODT,1,LRSN,2,LRTN,0)) Q
"RTN","LRWLST",111,0)
 Q
"VER")
8.0^22.0
"^DD",63,63,14,0)
AUTOPSY  ACC #^RFIX^^AU;6^K:$L(X)>15!($L(X)<5)!'(X?1ANP.ANP1" "2N1" "1N.N) X I $D(X),$D(LRABV),$D(^LR("AAUA",$E(+$G(^LR(DA,"AU")),1,3),$G(LRABV),X)) N ARR S ARR(1)=$C(7)_X_" is already taken for "_LRABV,ARR(2)="" D EN^DDIOL(.ARR) K X
"^DD",63,63,14,.1)

"^DD",63,63,14,1,0)
^.1
"^DD",63,63,14,1,1,0)
63^AAUA^MUMPS
"^DD",63,63,14,1,1,1)
S ^LR("AAUA",$E(+^LR(DA,"AU"),1,3),$P(X," "),$P(X," ",3),DA)=""
"^DD",63,63,14,1,1,2)
K ^LR("AAUA",$E(+^LR(DA,"AU"),1,3),$P(X," "),$P(X," ",3),DA)
"^DD",63,63,14,1,1,"DT")
2950810
"^DD",63,63,14,3)
Answer must be 5-15 characters in length.
"^DD",63,63,14,4)
D EN^DDIOL("Enter as prefix <space> yr <space> number (ex. AU 95 23)")
"^DD",63,63,14,21,0)
^^1^1^2911205^^
"^DD",63,63,14,21,1,0)
This is the number of this autopsy.
"^DD",63,63,14,"DT")
3130926
"BLD",9247,6)
^347
**END**
**END**

