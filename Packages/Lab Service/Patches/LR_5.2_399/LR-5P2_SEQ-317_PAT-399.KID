Released LR*5.2*399 SEQ #317
Extracted from mail message
**KIDS**:LR*5.2*399^

**INSTALL NAME**
LR*5.2*399
"BLD",8379,0)
LR*5.2*399^LAB SERVICE^0^3100201^y
"BLD",8379,1,0)
^^11^11^3100201^
"BLD",8379,1,1,0)
This patch is a VM general purpose lab patch that addresses 2 issues.
"BLD",8379,1,2,0)
 
"BLD",8379,1,3,0)
   1.  The DSS Laboratory Extract gets a <SYNTAX> error when FileMan
"BLD",8379,1,4,0)
       attempts to set an entry into the LAB DSS LAR EXTRACT FILE
"BLD",8379,1,5,0)
       (# 64.036) when the entry has a text test result containing
"BLD",8379,1,6,0)
       a semi-colon (;).
"BLD",8379,1,7,0)
 
"BLD",8379,1,8,0)
   2.  A <SUBSCRIPT> error occurs when a user enters an "^" at the
"BLD",8379,1,9,0)
       RESULT NLT CODE prompt in option LR LOINC UNMAP/DELETE DEFAULT.
"BLD",8379,1,10,0)
       The error also occurs when there is no RESULT NLT CODE on file
"BLD",8379,1,11,0)
       and the user <returns> through this prompt.
"BLD",8379,4,0)
^9.64PA^^
"BLD",8379,6.3)
1
"BLD",8379,"ABPKG")
n
"BLD",8379,"KRN",0)
^9.67PA^779.2^20
"BLD",8379,"KRN",.4,0)
.4
"BLD",8379,"KRN",.401,0)
.401
"BLD",8379,"KRN",.402,0)
.402
"BLD",8379,"KRN",.403,0)
.403
"BLD",8379,"KRN",.5,0)
.5
"BLD",8379,"KRN",.84,0)
.84
"BLD",8379,"KRN",3.6,0)
3.6
"BLD",8379,"KRN",3.8,0)
3.8
"BLD",8379,"KRN",9.2,0)
9.2
"BLD",8379,"KRN",9.8,0)
9.8
"BLD",8379,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8379,"KRN",9.8,"NM",1,0)
LRCAPDAR^^0^B15683759
"BLD",8379,"KRN",9.8,"NM",2,0)
LRLNC0^^0^B90965448
"BLD",8379,"KRN",9.8,"NM","B","LRCAPDAR",1)

"BLD",8379,"KRN",9.8,"NM","B","LRLNC0",2)

"BLD",8379,"KRN",19,0)
19
"BLD",8379,"KRN",19.1,0)
19.1
"BLD",8379,"KRN",101,0)
101
"BLD",8379,"KRN",409.61,0)
409.61
"BLD",8379,"KRN",771,0)
771
"BLD",8379,"KRN",779.2,0)
779.2
"BLD",8379,"KRN",870,0)
870
"BLD",8379,"KRN",8989.51,0)
8989.51
"BLD",8379,"KRN",8989.52,0)
8989.52
"BLD",8379,"KRN",8994,0)
8994
"BLD",8379,"KRN","B",.4,.4)

"BLD",8379,"KRN","B",.401,.401)

"BLD",8379,"KRN","B",.402,.402)

"BLD",8379,"KRN","B",.403,.403)

"BLD",8379,"KRN","B",.5,.5)

"BLD",8379,"KRN","B",.84,.84)

"BLD",8379,"KRN","B",3.6,3.6)

"BLD",8379,"KRN","B",3.8,3.8)

"BLD",8379,"KRN","B",9.2,9.2)

"BLD",8379,"KRN","B",9.8,9.8)

"BLD",8379,"KRN","B",19,19)

"BLD",8379,"KRN","B",19.1,19.1)

"BLD",8379,"KRN","B",101,101)

"BLD",8379,"KRN","B",409.61,409.61)

"BLD",8379,"KRN","B",771,771)

"BLD",8379,"KRN","B",779.2,779.2)

"BLD",8379,"KRN","B",870,870)

"BLD",8379,"KRN","B",8989.51,8989.51)

"BLD",8379,"KRN","B",8989.52,8989.52)

"BLD",8379,"KRN","B",8994,8994)

"BLD",8379,"QUES",0)
^9.62^^
"BLD",8379,"REQB",0)
^9.611^2^2
"BLD",8379,"REQB",1,0)
LR*5.2*394^2
"BLD",8379,"REQB",2,0)
LR*5.2*280^2
"BLD",8379,"REQB","B","LR*5.2*280",2)

"BLD",8379,"REQB","B","LR*5.2*394",1)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950304
"PKG",26,22,1,"PAH",1,0)
399^3100201
"PKG",26,22,1,"PAH",1,1,0)
^^11^11^3100201
"PKG",26,22,1,"PAH",1,1,1,0)
This patch is a VM general purpose lab patch that addresses 2 issues.
"PKG",26,22,1,"PAH",1,1,2,0)
 
"PKG",26,22,1,"PAH",1,1,3,0)
   1.  The DSS Laboratory Extract gets a <SYNTAX> error when FileMan
"PKG",26,22,1,"PAH",1,1,4,0)
       attempts to set an entry into the LAB DSS LAR EXTRACT FILE
"PKG",26,22,1,"PAH",1,1,5,0)
       (# 64.036) when the entry has a text test result containing
"PKG",26,22,1,"PAH",1,1,6,0)
       a semi-colon (;).
"PKG",26,22,1,"PAH",1,1,7,0)
 
"PKG",26,22,1,"PAH",1,1,8,0)
   2.  A <SUBSCRIPT> error occurs when a user enters an "^" at the
"PKG",26,22,1,"PAH",1,1,9,0)
       RESULT NLT CODE prompt in option LR LOINC UNMAP/DELETE DEFAULT.
"PKG",26,22,1,"PAH",1,1,10,0)
       The error also occurs when there is no RESULT NLT CODE on file
"PKG",26,22,1,"PAH",1,1,11,0)
       and the user <returns> through this prompt.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","LRCAPDAR")
0^1^B15683759^B15584035
"RTN","LRCAPDAR",1,0)
LRCAPDAR ;DALOI/FHS/RBN - LAB DSS RESULTS EXTRACT (LAR) ; 8/13/08 1:41pm
"RTN","LRCAPDAR",2,0)
 ;;5.2;LAB SERVICE;**143,169,258,307,326,386,385,394,399**;Sep 27, 1994;Build 1
"RTN","LRCAPDAR",3,0)
 ;
"RTN","LRCAPDAR",4,0)
 ; Call with Start Date (LRSDT)  End Date (LREDT) FileMan format
"RTN","LRCAPDAR",5,0)
 ; Calling routine should have already purged ^LAR(64.036)
"RTN","LRCAPDAR",6,0)
EN S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRCAPDAR",7,0)
 I $S($G(LRSDT)'?7N:1,$G(LREDT)'?7N:1,1:0) Q
"RTN","LRCAPDAR",8,0)
 L +^LAR(64.036):2 G:'$T END
"RTN","LRCAPDAR",9,0)
 N DIR,DIC,DIE,X,I,LR3,LRAA,LRAD,LRAN,LRC,LRSPDT,LRSPTM,UID,Y,DLAYGO
"RTN","LRCAPDAR",10,0)
 N LRDFN,LRDN,LRY,LRNLT,LRLOINC,ARRAY,LRP8
"RTN","LRCAPDAR",11,0)
 S DLAYGO=64
"RTN","LRCAPDAR",12,0)
 I LRSDT>LREDT S X=LRSDT,LRSDT=LREDT,LREDT=X
"RTN","LRCAPDAR",13,0)
 S LRX1=9999999-(LRSDT_.0001),LRX2=9999999-(LREDT_.235959)
"RTN","LRCAPDAR",14,0)
 S:'$D(^LAR(64.036,0))#2 ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^2"
"RTN","LRCAPDAR",15,0)
LR ;
"RTN","LRCAPDAR",16,0)
 K ARRAY S ARRAY("ALL")="" D LOINC^ECXUTL6(.ARRAY) ;Build ^TMP($J,"ECXUTL6")
"RTN","LRCAPDAR",17,0)
 S LRDFN=0 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  I $P($G(^LR(LRDFN,0)),U,2)=2 S LRN=^(0) D
"RTN","LRCAPDAR",18,0)
 . S DFN=$P(LRN,U,3),LRDPF=$P(LRN,U,2)
"RTN","LRCAPDAR",19,0)
 . S LRIDT=LRX2
"RTN","LRCAPDAR",20,0)
 . F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1!(LRIDT>LRX1)  I $D(^(LRIDT,0)),$P(^(0),U,3) S LRVSPEC=$P(^(0),U,5),LRN0=^(0) D
"RTN","LRCAPDAR",21,0)
 . . S LRDN=0 F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRCAPDAR",22,0)
 . . . S LRY=$$TSTRES^LRRPU(LRDFN,"CH",LRIDT,LRDN,"",1)
"RTN","LRCAPDAR",23,0)
 . . . S LRP8=$P(LRY,U,8)
"RTN","LRCAPDAR",24,0)
 . . . S LRNLT=$P($P(LRP8,"!",2),";"),LRLOINC=$P($P(LRP8,"!",3),";")
"RTN","LRCAPDAR",25,0)
 . . . Q:'(+LRLOINC)
"RTN","LRCAPDAR",26,0)
 . . . I +$G(^TMP($J,"ECXUTL6",LRLOINC))>0 D SET
"RTN","LRCAPDAR",27,0)
 . . I $O(LRVV(0)) D FILE
"RTN","LRCAPDAR",28,0)
WRAP K DA,DR,DIC,DIE,DD,DO
"RTN","LRCAPDAR",29,0)
 S (X,DINUM)=1
"RTN","LRCAPDAR",30,0)
 S DIC="^LAR(64.036,",DIC(0)="LNM" D FILE^DICN S DA=+Y
"RTN","LRCAPDAR",31,0)
 G:Y<1 END
"RTN","LRCAPDAR",32,0)
 S DR="9///"_DT,DR(2,64.369)=".01///"_DT_";1///"_LRSDT_";2///"_LREDT_";3///"_$$NOW^LRAFUNC1_";4////"_$G(DUZ)
"RTN","LRCAPDAR",33,0)
 S DIE=DIC D ^DIE G END
"RTN","LRCAPDAR",34,0)
 Q
"RTN","LRCAPDAR",35,0)
SET S LRVV(+$P(^TMP($J,"ECXUTL6",LRLOINC),U,2),LRDN)=$TR($E($P(LRY,U),1,20),";","-")_U_$P(LRY,U,2)_U_LRNLT_U_LRLOINC
"RTN","LRCAPDAR",36,0)
 Q
"RTN","LRCAPDAR",37,0)
END L -^LAR(64.036)
"RTN","LRCAPDAR",38,0)
 K D,D0,D1,DA,DFN,DI,DIC,DIE,DR,I,II,LRDA,LRDPF,LRIDT,LRN,LRN0
"RTN","LRCAPDAR",39,0)
 K LRNOW,LRSB,LRSP,LRTS,LRVR,LRVSPEC,LRVV,LRX1,LRX2,X,DLAYGO
"RTN","LRCAPDAR",40,0)
 K LRDFN,D2,LRSP,LRTS,DINUM,^TMP($J,"ECXUTL6") Q
"RTN","LRCAPDAR",41,0)
FILE K DR,DA,DIC,DIR,LRPROV
"RTN","LRCAPDAR",42,0)
 D UID
"RTN","LRCAPDAR",43,0)
 S LRN0T1=$P(LRN0,U),LRN0T2=$P(LRN0,U,3),LRPROV=$P(LRN0,U,10)
"RTN","LRCAPDAR",44,0)
 S $P(LRN0,U)=$S(LRN0T2<LRN0T1:LRN0T2,1:LRN0T1)
"RTN","LRCAPDAR",45,0)
 S X=$P(^LAR(64.036,0),U,3) S:X<2 X=2 F X=X:1 Q:'$D(^LAR(64.036,X))
"RTN","LRCAPDAR",46,0)
 S DA=X,DIC="^LAR(64.036,",DINUM=X,DIC(0)="LNMF"
"RTN","LRCAPDAR",47,0)
 S LRN0T1=$E($P($P(LRN0,U),".",2),1,4) S:'LRN0T1 LRN0T1=0 I LRN0T1,$E(LRN0T1,3,4)>59 S LRN0T1=$E(LRN0T1,1,2)_"59"
"RTN","LRCAPDAR",48,0)
 S LRN0T2=$E($P($P(LRN0,U,3),".",2),1,4) S:'LRN0T2 LRN0T2=0
"RTN","LRCAPDAR",49,0)
 S DIC("DR")="1///"_LRDPF_";2///"_DFN_";3///"_$P($P(LRN0,U),".")_";4///"_LRN0T1_";5///"_$P($P(LRN0,U,3),".")_";6///"_LRN0T2_";7///`"_LRVSPEC_";12///`"_LRPROV
"RTN","LRCAPDAR",50,0)
 K DD,DO D FILE^DICN K DA S LRDA=Y Q:LRDA<1
"RTN","LRCAPDAR",51,0)
 S $P(^LAR(64.036,+LRDA,0),U,9)=LRSPDT,$P(^(0),U,10)=LRSPTM
"RTN","LRCAPDAR",52,0)
F2 S DA(1)=+LRDA
"RTN","LRCAPDAR",53,0)
 S DIC=DIC_DA(1)_",1,"
"RTN","LRCAPDAR",54,0)
 S DIC(0)="L",DIC("P")=$P(^DD(64.036,8,0),"^",2)
"RTN","LRCAPDAR",55,0)
 F LRTS=0:0 S LRTS=$O(LRVV(LRTS)) Q:LRTS<1  D
"RTN","LRCAPDAR",56,0)
 .S LRDN=0 F  S LRDN=$O(LRVV(LRTS,LRDN)) Q:LRDN<1  D DR1
"RTN","LRCAPDAR",57,0)
 K LRVV,LRN0T1,LRN0T2
"RTN","LRCAPDAR",58,0)
 Q
"RTN","LRCAPDAR",59,0)
DR1 K DR,DIR,DIE S DA=+LRDA
"RTN","LRCAPDAR",60,0)
 S DIC("DR")=".01///"_LRTS_";1///"_$P(LRVV(LRTS,LRDN),U)_";2///"_$P(LRVV(LRTS,LRDN),U,2)_";3///"_$P(LRVV(LRTS,LRDN),U,3)_";4///"_$P(LRVV(LRTS,LRDN),U,4)
"RTN","LRCAPDAR",61,0)
 S X=LRTS
"RTN","LRCAPDAR",62,0)
 K D0 D FILE^DICN
"RTN","LRCAPDAR",63,0)
 Q
"RTN","LRCAPDAR",64,0)
FIX S X=$P(^LAR(64.036,0),U,1,2) K ^LAR(64.036) S ^LAR(64.036,0)=X Q
"RTN","LRCAPDAR",65,0)
UID ;
"RTN","LRCAPDAR",66,0)
 S LRN0T2=$P(LRN0,U,3)
"RTN","LRCAPDAR",67,0)
 S LRSPDT=$P($P(LRN0,U),"."),LRSPTM=$E($P($P(LRN0,U),".",2),1,4)
"RTN","LRCAPDAR",68,0)
 D
"RTN","LRCAPDAR",69,0)
 . I 'LRSPTM S LRSPTM=1 Q
"RTN","LRCAPDAR",70,0)
 . I LRSPTM,$E(LRSPTM,3,4)>59 S LRSPTM=$E(LRSPTM,1,2)_"59"
"RTN","LRCAPDAR",71,0)
 S LRN0T1=LRSPDT_"."_LRSPTM,$P(LRN0,U)=LRN0T1
"RTN","LRCAPDAR",72,0)
 S UID=$P($G(^LR(LRDFN,"CH",LRIDT,"ORU")),U) Q:'$L(UID)
"RTN","LRCAPDAR",73,0)
 S LRC=$Q(^LRO(68,"C",UID)) Q:$QS(LRC,3)'=UID
"RTN","LRCAPDAR",74,0)
 S LRAA=$QS(LRC,4),LRAD=$QS(LRC,5),LRAN=$QS(LRC,6)
"RTN","LRCAPDAR",75,0)
 D
"RTN","LRCAPDAR",76,0)
 . N LR3,LRODT,LROODT,LRSN
"RTN","LRCAPDAR",77,0)
 . Q:'$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  S LR3=^(0)
"RTN","LRCAPDAR",78,0)
 . S LRODT=$P(LR3,U,4),LRSN=$P(LR3,U,5)
"RTN","LRCAPDAR",79,0)
 . S LROODT=$P($G(^LRO(69,LRODT,1,LRSN,0)),U,5)
"RTN","LRCAPDAR",80,0)
 . I $G(LROODT) S $P(LRN0,U)=LROODT
"RTN","LRCAPDAR",81,0)
 Q
"RTN","LRLNC0")
0^2^B90965448^B90839764
"RTN","LRLNC0",1,0)
LRLNC0 ;DALOI/CA/FHS-MAP LAB TESTS TO LOINC CODES ;1-OCT-1998
"RTN","LRLNC0",2,0)
 ;;5.2;LAB SERVICE;**215,232,278,280,399**;Sep 27,1994;Build 1
"RTN","LRLNC0",3,0)
 ;Reference to ^DD supported by IA # 10154
"RTN","LRLNC0",4,0)
 ;=================================================================
"RTN","LRLNC0",5,0)
 ; Ask VistA test to map-Lookup in Lab Test file #60
"RTN","LRLNC0",6,0)
START ;entry point from option LR LOINC MAPPING
"RTN","LRLNC0",7,0)
 S LREND=0,LRLNC1=1 D TEST
"RTN","LRLNC0",8,0)
 I $G(LREND) G EXIT
"RTN","LRLNC0",9,0)
 I '$G(LRNLT) G START
"RTN","LRLNC0",10,0)
 ;MAP DEFAULT
"RTN","LRLNC0",11,0)
DEFAULT ;
"RTN","LRLNC0",12,0)
 N LRNLTX
"RTN","LRLNC0",13,0)
 Q:'$D(^LAM(+$G(LRNLT),0))#2
"RTN","LRLNC0",14,0)
 S LRNLTX=LRNLT
"RTN","LRLNC0",15,0)
 L +^LAM(LRNLTX,9):2 I '$T W !!?5,"Locked by another user",! H 5 Q
"RTN","LRLNC0",16,0)
 W !
"RTN","LRLNC0",17,0)
 K DIR S DIR("B")="No"
"RTN","LRLNC0",18,0)
 S DIR(0)="Y",DIR("A")="Do you want to edit/delete the Default LOINC code"
"RTN","LRLNC0",19,0)
 S DIR("?")="Enter yes to map/change the default LOINC code."
"RTN","LRLNC0",20,0)
 D ^DIR K DIR
"RTN","LRLNC0",21,0)
 L -^LAM(LRNLTX,9)
"RTN","LRLNC0",22,0)
 I $D(DIRUT) Q
"RTN","LRLNC0",23,0)
 I $G(LRDFONLY),$D(DIRUT) Q
"RTN","LRLNC0",24,0)
 I '$G(LRDFONLY),$D(DIRUT) D EXIT G START
"RTN","LRLNC0",25,0)
 I Y D  D DEFAULT^LRLNCMD
"RTN","LRLNC0",26,0)
 . Q:'$G(^LAM(LRNLT,9))
"RTN","LRLNC0",27,0)
 . W !!?5,"Deleting LOINC Default Code",!
"RTN","LRLNC0",28,0)
 . N DA,DR,X,DIE
"RTN","LRLNC0",29,0)
 . S DIE="^LAM(",DA=+LRNLT,DR="25///^S X=""@""" D ^DIE
"RTN","LRLNC0",30,0)
 L -^LAM(LRNLTX,9)
"RTN","LRLNC0",31,0)
 I $G(LRDFONLY) Q
"RTN","LRLNC0",32,0)
 I '$P($P($G(^LAB(60,LRIEN,0)),U,5),";",2) Q
"RTN","LRLNC0",33,0)
ASKSPEC D SPEC
"RTN","LRLNC0",34,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",35,0)
 W !!
"RTN","LRLNC0",36,0)
 S DIR(0)="Y",DIR("A")="Do you want to see possible LOINC code matches"
"RTN","LRLNC0",37,0)
 S DIR("?")="Enter no if you already know the LOINC code."
"RTN","LRLNC0",38,0)
 S DIR("B")="No"
"RTN","LRLNC0",39,0)
 D ^DIR K DIR
"RTN","LRLNC0",40,0)
 I $D(DIRUT) D EXIT G START
"RTN","LRLNC0",41,0)
 I 'Y D ENTERLNC^LRLNCC
"RTN","LRLNC0",42,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",43,0)
 I '$G(LRCODE) D LOINC
"RTN","LRLNC0",44,0)
 I $G(LRNO) D EXIT G START
"RTN","LRLNC0",45,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",46,0)
 I $G(LRNO) D ENTERLNC^LRLNCC
"RTN","LRLNC0",47,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",48,0)
CORRECT W !!
"RTN","LRLNC0",49,0)
 S DIR(0)="Y",DIR("A")="Is this the correct one"
"RTN","LRLNC0",50,0)
 S DIR("B")="Yes"
"RTN","LRLNC0",51,0)
 S DIR("?")="Enter no to select a different code."
"RTN","LRLNC0",52,0)
 D ^DIR K DIR
"RTN","LRLNC0",53,0)
 I $D(DIRUT)!($G(LREND)) D EXIT G START
"RTN","LRLNC0",54,0)
 I 'Y,$G(LRNO) D ENTERLNC^LRLNCC
"RTN","LRLNC0",55,0)
 I 'Y,'$G(LRNO) D LOINC
"RTN","LRLNC0",56,0)
 I $G(LRNO) D EXIT G START
"RTN","LRLNC0",57,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",58,0)
 D CHKSPEC
"RTN","LRLNC0",59,0)
 I $G(LRNO) D EXIT G START
"RTN","LRLNC0",60,0)
 I $G(LRNEXT) G NEXTSP
"RTN","LRLNC0",61,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",62,0)
 D LINK
"RTN","LRLNC0",63,0)
 I $G(LRNEXT) G NEXTSP
"RTN","LRLNC0",64,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",65,0)
 D CHECK
"RTN","LRLNC0",66,0)
 I $G(LRNEXT) G NEXTSP
"RTN","LRLNC0",67,0)
 I $G(LREND) D EXIT G START
"RTN","LRLNC0",68,0)
 D MAP
"RTN","LRLNC0",69,0)
NEXTSP D KILL1
"RTN","LRLNC0",70,0)
 G ASKSPEC
"RTN","LRLNC0",71,0)
KILL1 I $G(LRNLT) L -^LAM(LRNLT,9)
"RTN","LRLNC0",72,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DR,DTOUT,I,LRLNC,LRLNC0,LRLOINC,LRELEC,LRCODE,LRSPEC,LRSPECL,LRSPECN,LRTIME,LRUNTIS,S,Y
"RTN","LRLNC0",73,0)
 K DD,D0,DLAYGO,LRLNCNAM,LRNO,LRNOP,LRLNC1,LRNEXT,LRODLCD,X
"RTN","LRLNC0",74,0)
 Q
"RTN","LRLNC0",75,0)
EXIT I $G(LRNLT) L -^LAM(LRNLT,9)
"RTN","LRLNC0",76,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DR,DTOUT,I,LRCODE,LRDATA,LREND,LRLNC,LRLNC0,LRLOINC,LRELEC,LRIEN,LRNLT
"RTN","LRLNC0",77,0)
 K LRSPEC,LRSPECL,LRSPECN,LRTIME,LRTEST,LRUNITS,S,Y
"RTN","LRLNC0",78,0)
 K DD,DO,DLAYGO,LRLNCNAM,LRNO,LRNOP,LRDEF,LRLNC1,LRNEXT,LROLDCD,X
"RTN","LRLNC0",79,0)
 QUIT
"RTN","LRLNC0",80,0)
TEST W @IOF
"RTN","LRLNC0",81,0)
 K DIR,LRNLT
"RTN","LRLNC0",82,0)
 S DIR(0)="PO^60:QENMZ,",DIR("A")="VistA Lab Test to "_$S($D(LRDEL):"Delete/Unmap",1:"Link/Map")_" to LOINC "
"RTN","LRLNC0",83,0)
 S DIR("?")="Select Lab test you wish to "_$S($D(LRDEL):"delete/unmap",1:"link/map")_" to a LOINC Code"
"RTN","LRLNC0",84,0)
 D ^DIR K DIR
"RTN","LRLNC0",85,0)
 I $D(DIRUT)!'Y K DIRUT S LREND=1 Q
"RTN","LRLNC0",86,0)
 S LRIEN=+Y,LRTEST=$P(Y,U,2)
"RTN","LRLNC0",87,0)
 L +^LAB(60,LRIEN):2 I '$T W !?4,"Another user is editing this entry",! H 5 Q
"RTN","LRLNC0",88,0)
 ;Check for RESULT NLT CODE and if not one let enter
"RTN","LRLNC0",89,0)
 S LRNLT=+$P($G(^LAB(60,LRIEN,64)),U,2)
"RTN","LRLNC0",90,0)
DIS64 D  Q:$G(LR64DIS)
"RTN","LRLNC0",91,0)
 . Q:'$G(LRNLT)
"RTN","LRLNC0",92,0)
 . N LRLNC,LRANS
"RTN","LRLNC0",93,0)
 . S LRLNC=$P($G(^LAM(LRNLT,9)),U) Q:'LRLNC
"RTN","LRLNC0",94,0)
 . D GETS^DIQ(64,LRNLT_",",".01;1","E","LRANS")
"RTN","LRLNC0",95,0)
 . D GETS^DIQ(95.3,LRLNC_",",".01;80","E","LRANS")
"RTN","LRLNC0",96,0)
 . W !,!?5,$G(LRANS(64,LRNLT_",",.01,"E"))_" "_$G(LRANS(64,LRNLT_",",1,"E"))
"RTN","LRLNC0",97,0)
 . W !?4,"Default LOINC Already Mapped to:"
"RTN","LRLNC0",98,0)
 . W !,$G(LRANS(95.3,LRLNC_",",.01,"E"))_"  "_$G(LRANS(95.3,LRLNC_",",80,"E"))
"RTN","LRLNC0",99,0)
 I '$P($G(^LAB(60,LRIEN,64)),U,2) D
"RTN","LRLNC0",100,0)
 .W !!,"There is not a RESULT NLT CODE for "_LRTEST,".",!
"RTN","LRLNC0",101,0)
 .W !,"You must select one now to continue with the mapping of this test!",!
"RTN","LRLNC0",102,0)
 K DIE,DA,DR S DIE="^LAB(60,",DA=+LRIEN,DR=64.1 D ^DIE K DIE,DA,DR
"RTN","LRLNC0",103,0)
 L -^LAB(60,LRIEN)
"RTN","LRLNC0",104,0)
 I $G(X)<1!($D(Y)) S LRNLT="",LREND=1 Q
"RTN","LRLNC0",105,0)
 I $P($G(^LAB(60,+LRIEN,64)),U,2) D
"RTN","LRLNC0",106,0)
 . N DIC,DA,DR
"RTN","LRLNC0",107,0)
 . S DIC="^LAB(60,",DA=+LRIEN,DR=64 W !! W ?5,"IEN: [",DA,"] ",$P(^LAB(60,LRIEN,0),U) S S=$Y D EN^DIQ
"RTN","LRLNC0",108,0)
 W !
"RTN","LRLNC0",109,0)
 S LRNLT=$P($G(^LAB(60,LRIEN,64)),U,2)
"RTN","LRLNC0",110,0)
 I 'LRNLT G TEST
"RTN","LRLNC0",111,0)
 Q
"RTN","LRLNC0",112,0)
SPEC ; Ask Specimen- Lookup in Specimen multiple in Lab Test file #60
"RTN","LRLNC0",113,0)
 W !!
"RTN","LRLNC0",114,0)
LOOK61 K DIC,DA
"RTN","LRLNC0",115,0)
 N LRANS
"RTN","LRLNC0",116,0)
 Q:'$G(LRIEN)
"RTN","LRLNC0",117,0)
 S DIC=61,DIC(0)="AENMZQ"
"RTN","LRLNC0",118,0)
 S DIC("A")="Specimen source: "
"RTN","LRLNC0",119,0)
 D ^DIC
"RTN","LRLNC0",120,0)
 I $D(DUOUT)!($D(DTOUT))!(Y<1) D  Q
"RTN","LRLNC0",121,0)
 .K DIC,DA,DTOUT,DUOUT S LREND=1 Q
"RTN","LRLNC0",122,0)
 Q:$G(LREND)
"RTN","LRLNC0",123,0)
 S LRSPEC=+Y,LRSPECN=Y(0,0)
"RTN","LRLNC0",124,0)
 K DA,DIC,DIE,DR
"RTN","LRLNC0",125,0)
 I '$L($P($G(^LAB(60,LRIEN,0)),U,5)) G OVER
"RTN","LRLNC0",126,0)
 I '$D(^LAB(60,LRIEN,1)) D
"RTN","LRLNC0",127,0)
 .S DIC("P")=$P(^DD(60,100,0),"^",2)
"RTN","LRLNC0",128,0)
 I '$D(^LAB(60,LRIEN,1,LRSPEC)) D  G:$G(LRNOP) LOOK61
"RTN","LRLNC0",129,0)
 . N DIR
"RTN","LRLNC0",130,0)
 . W !," Are you sure you want to add this specimen"
"RTN","LRLNC0",131,0)
 . S DIR(0)="Y" D ^DIR I Y<1 S LRNOP=1 Q
"RTN","LRLNC0",132,0)
 . K DD,DO
"RTN","LRLNC0",133,0)
 . S DA(1)=LRIEN,X=LRSPEC,DINUM=X
"RTN","LRLNC0",134,0)
 . S DIC="^LAB(60,"_DA(1)_",1,"
"RTN","LRLNC0",135,0)
 . S DIC(0)="LMZ",DLAYGO=60.01
"RTN","LRLNC0",136,0)
 . D FILE^DICN S LRANS=Y
"RTN","LRLNC0",137,0)
 ;A DIE call is made to edit fields in subfile
"RTN","LRLNC0",138,0)
 I $P($G(LRANS),U,3) D
"RTN","LRLNC0",139,0)
 .S DIE=DIC K DIC
"RTN","LRLNC0",140,0)
 .S DA=+Y
"RTN","LRLNC0",141,0)
 .S DR="1:9.3"
"RTN","LRLNC0",142,0)
 .D ^DIE
"RTN","LRLNC0",143,0)
 K DIE,DR,DA
"RTN","LRLNC0",144,0)
OVER ;Check to see if linked to file 64.061.  If not, then let enter link.
"RTN","LRLNC0",145,0)
 I '$P($G(^LAB(61,LRSPEC,0)),U,9) D
"RTN","LRLNC0",146,0)
 .W !!,"There is not a LEDI HL7 code for "_LRSPECN,"."
"RTN","LRLNC0",147,0)
 .W !,"You must select one now to continue with the mapping of this test and specimen!",!
"RTN","LRLNC0",148,0)
 I '$P($G(^LAB(61,LRSPEC,0)),U,10) D  G:$G(LRNOP) LOOK61
"RTN","LRLNC0",149,0)
 .W !!,"There is not a TIME ASPECT for "_LRSPECN,".",!
"RTN","LRLNC0",150,0)
 .K DIE,DR,DA S DA=LRSPEC,DIE="^LAB(61,",DR=".09:.0961"
"RTN","LRLNC0",151,0)
 .D ^DIE
"RTN","LRLNC0",152,0)
 .S:$D(DIRUT) LRNOP=1
"RTN","LRLNC0",153,0)
 S LRELEC=$P($G(^LAB(61,LRSPEC,0)),U,9)
"RTN","LRLNC0",154,0)
 I 'LRELEC G SPEC
"RTN","LRLNC0",155,0)
 S LRSPECL=$P(^LAB(64.061,LRELEC,0),U,2)
"RTN","LRLNC0",156,0)
 Q
"RTN","LRLNC0",157,0)
LOINC ;Lookup possible LOINC matches in LAB LOINC file #95.3
"RTN","LRLNC0",158,0)
 D FIND^DIC(95.3,"","80","M",LRTEST,"","","I $P(^(0),U,8)=$G(LRELEC)!(LRELEC=74!(LRELEC=83)!(LRELEC=114)!(LRELEC=1376)&(""SER PLAS BLD""[$P(^(80),"":"",4)))","","LRLOINC","")
"RTN","LRLNC0",159,0)
CODE ;ask which code to map
"RTN","LRLNC0",160,0)
 D CODE^LRLNCC
"RTN","LRLNC0",161,0)
 Q
"RTN","LRLNC0",162,0)
LINK ;Link the code with file 64
"RTN","LRLNC0",163,0)
 S LRDATA=$P(^LAB(60,LRIEN,0),U,12) ;DATA NAME
"RTN","LRLNC0",164,0)
 I '$L(LRDATA) S LRDATA=$P($G(^LAB(60,+$G(LRIEN),0)),U,4) ;Set to subscript of test.
"RTN","LRLNC0",165,0)
 S LRTIME=$P(^LAB(95.3,LRCODE,0),U,7) ;TIME ASPECT
"RTN","LRLNC0",166,0)
 S LRUNITS=$P(^LAB(95.3,LRCODE,0),U,14) ;UNITS
"RTN","LRLNC0",167,0)
 S LRNLT=+$P(^LAM(LRNLT,0),U,2)
"RTN","LRLNC0",168,0)
LR64 ;
"RTN","LRLNC0",169,0)
 K DIC,DA
"RTN","LRLNC0",170,0)
 W !!
"RTN","LRLNC0",171,0)
 S DIC=64,DIC(0)="ENMZ",X=LRNLT
"RTN","LRLNC0",172,0)
 D ^DIC
"RTN","LRLNC0",173,0)
 I Y<1 D EXIT S LREND=1 Q
"RTN","LRLNC0",174,0)
 I $D(DTOUT)!($D(DUOUT)) K DTOUT,DUOUT D EXIT S LREND=1 Q
"RTN","LRLNC0",175,0)
 I 'Y S LRNEXT=1 Q
"RTN","LRLNC0",176,0)
 S LRNLT=+Y
"RTN","LRLNC0",177,0)
 Q
"RTN","LRLNC0",178,0)
CHECK ;Check to see if already mapped to a LOINC code
"RTN","LRLNC0",179,0)
 I $D(^LAM(LRNLT,5,LRSPEC,1,"B",LRTIME)) D SHOWPRE I $D(DIRUT) D EXIT S LREND=1 Q
"RTN","LRLNC0",180,0)
 I Y<1 S LRNEXT=1
"RTN","LRLNC0",181,0)
 Q
"RTN","LRLNC0",182,0)
MAP ;DIE call to add data name,time aspect,units, LOINC code, and lab test fields
"RTN","LRLNC0",183,0)
 L +^LAM(LRNLT,5):1 I '$T W !,"Another user is editing this record" H 5 Q
"RTN","LRLNC0",184,0)
 I '$D(^LAM(LRNLT,5,0)) D
"RTN","LRLNC0",185,0)
 .S DIC("P")=$P(^DD(64,20,0),"^",2)
"RTN","LRLNC0",186,0)
 I '$D(^LAM(LRNLT,5,LRSPEC)) D
"RTN","LRLNC0",187,0)
 .K DD,DO
"RTN","LRLNC0",188,0)
 .S DA(1)=LRNLT,DA=LRSPEC
"RTN","LRLNC0",189,0)
 .S DIC="^LAM("_DA(1)_",5,",DIC(0)="L",DLAYGO=64,X=LRSPEC,DINUM=X
"RTN","LRLNC0",190,0)
 .D FILE^DICN
"RTN","LRLNC0",191,0)
 I '$D(^LAM(LRNLT,5,LRSPEC,1,0)) D
"RTN","LRLNC0",192,0)
 .S DIC("P")=$P(^DD(64.01,30,0),"^",2)
"RTN","LRLNC0",193,0)
 S DA(2)=LRNLT,DA(1)=LRSPEC,X=LRTIME,DINUM=X
"RTN","LRLNC0",194,0)
 S DIC="^LAM("_DA(2)_",5,"_DA(1)_",1,"
"RTN","LRLNC0",195,0)
 I '$D(^LAM(LRNLT,5,LRSPEC,1,LRTIME)) D
"RTN","LRLNC0",196,0)
 .K DD,DO
"RTN","LRLNC0",197,0)
 .S DIC(0)="L",DLAYGO=64
"RTN","LRLNC0",198,0)
 .D FILE^DICN
"RTN","LRLNC0",199,0)
 S DA=LRTIME
"RTN","LRLNC0",200,0)
 K DIE,DR S DIE=DIC K DIC
"RTN","LRLNC0",201,0)
 S DR="1////"_LRUNITS_";2////"_LRDATA_";3////"_LRIEN_";4////"_LRCODE
"RTN","LRLNC0",202,0)
 D ^DIE
"RTN","LRLNC0",203,0)
 L -^LAM(LRNLT,5)
"RTN","LRLNC0",204,0)
 ;HERE SHOW WHAT WAS MAPPED
"RTN","LRLNC0",205,0)
 W @IOF
"RTN","LRLNC0",206,0)
 W !!
"RTN","LRLNC0",207,0)
 W !,"NLT: ",$P($G(^LAM(LRNLT,0)),U)
"RTN","LRLNC0",208,0)
 W !,"WKLD CODE: ",$P($G(^LAM(LRNLT,0)),U,2)
"RTN","LRLNC0",209,0)
 W !,"SPECIMEN: ",$P($G(^LAB(61,LRSPEC,0)),U)
"RTN","LRLNC0",210,0)
 K DIC,DR
"RTN","LRLNC0",211,0)
 S DIC=DIE
"RTN","LRLNC0",212,0)
 S S=$Y
"RTN","LRLNC0",213,0)
 D EN^DIQ
"RTN","LRLNC0",214,0)
INDEX60 ;Stores LOINC code in Laboratory Test file (#60) so know what tests are mapped.
"RTN","LRLNC0",215,0)
 Q:'$L($P($G(^LAB(60,LRIEN,0)),U,5))  ;set only atomic tests
"RTN","LRLNC0",216,0)
 N LRDA,LRFDA,LRERR
"RTN","LRLNC0",217,0)
 I '$G(^LAB(60,LRIEN,1,LRSPEC,0)) D
"RTN","LRLNC0",218,0)
 . K LRFDA,LRDA
"RTN","LRLNC0",219,0)
 . S LRFDA(1,60.01,"+1,"_LRIEN_",",.01)=LRSPEC
"RTN","LRLNC0",220,0)
 . S LRDA(1)=LRSPEC
"RTN","LRLNC0",221,0)
 . D UPDATE^DIE("","LRFDA(1)","LRDA","LRERR")
"RTN","LRLNC0",222,0)
 Q:$D(LRERR)
"RTN","LRLNC0",223,0)
 K LRFDA
"RTN","LRLNC0",224,0)
 S LRFDA(2,60.01,LRSPEC_","_LRIEN_",",95.3)=LRCODE
"RTN","LRLNC0",225,0)
 D FILE^DIE("","LRFDA(2)","LRERR")
"RTN","LRLNC0",226,0)
 Q
"RTN","LRLNC0",227,0)
SHOWPRE ;DISPLAY LOINC CODE ALREADY MAPPED TO NLT
"RTN","LRLNC0",228,0)
 S LRLNC=$P($G(^LAM(LRNLT,5,LRSPEC,1,LRTIME,1)),U)
"RTN","LRLNC0",229,0)
 W !!,"This test and specimen is already mapped to:"
"RTN","LRLNC0",230,0)
 W !,"LOINC code: ",LRLNC,"  ",$G(^LAB(95.3,+LRLNC,80))
"RTN","LRLNC0",231,0)
 W !
"RTN","LRLNC0",232,0)
 K DIR S DIR("B")="No"
"RTN","LRLNC0",233,0)
 S DIR(0)="Y",DIR("A")="Do you want to change this mapping"
"RTN","LRLNC0",234,0)
 S DIR("?")="If you enter yes, the current LOINC code will be overwritten with the LOINC code that you have chosen."
"RTN","LRLNC0",235,0)
 D ^DIR K DIR
"RTN","LRLNC0",236,0)
 Q 
"RTN","LRLNC0",237,0)
CHKSPEC ;Check that specimen of LOINC code same as specimen of test
"RTN","LRLNC0",238,0)
 I LRLNC0(8)=$G(LRELEC) Q
"RTN","LRLNC0",239,0)
 I (LRLNC0(8)=74!(LRLNC0(8)=83)!(LRLNC0(8)=114)!(LRLNC0(8)=1376))&($G(LRELEC)=74!($G(LRELEC)=83)!($G(LRELEC)=114)!($G(LRELEC)=1376)) Q
"RTN","LRLNC0",240,0)
 W !!,"The LOINC code that you have selected does not have the"
"RTN","LRLNC0",241,0)
 W !,"same specimen that you chose to map."
"RTN","LRLNC0",242,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to do this"
"RTN","LRLNC0",243,0)
 S DIR("?")="If you enter yes, the test will be mapped to this LOINC code."
"RTN","LRLNC0",244,0)
 S DIR("B")="Yes"
"RTN","LRLNC0",245,0)
 D ^DIR K DIR
"RTN","LRLNC0",246,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRLNC0",247,0)
 I Y<1 S LRNO=1
"RTN","LRLNC0",248,0)
 Q
"RTN","LRLNC0",249,0)
6206 ;LOINC mapping ANTIMICROBIAL [^LAB(62.060)]
"RTN","LRLNC0",250,0)
 W !!
"RTN","LRLNC0",251,0)
 D EXITMI
"RTN","LRLNC0",252,0)
 S (LRDEL,LRDFONLY)=1
"RTN","LRLNC0",253,0)
 S DIR(0)="PO^62.06:QENMZ",DIR("A")="Select Antimicrobial "
"RTN","LRLNC0",254,0)
 S DIR("?")="Select Antimicrobial Susceptibility Drug"
"RTN","LRLNC0",255,0)
 D ^DIR K DIR
"RTN","LRLNC0",256,0)
 I $D(DIRUT)!(Y<1) K DIRUT D EXITMI Q
"RTN","LRLNC0",257,0)
 S LRIEN=Y,LRTEST=$P(Y(0),U,2)
"RTN","LRLNC0",258,0)
 L +^LAB(62.06,LRIEN):2 I '$T W !?4,"Being edited by another user" H 5 G 6206
"RTN","LRLNC0",259,0)
 ;Display Mapped code
"RTN","LRLNC0",260,0)
 S (LRNLTX,LRNLT)=+$P($G(^LAB(62.06,+LRIEN,64)),U)
"RTN","LRLNC0",261,0)
 I LRNLT D
"RTN","LRLNC0",262,0)
 . N LR64DIS
"RTN","LRLNC0",263,0)
 . S LR64DIS=1 D DIS64
"RTN","LRLNC0",264,0)
 D
"RTN","LRLNC0",265,0)
 . N DIE,DA,DR
"RTN","LRLNC0",266,0)
 . S DIE="^LAB(62.06,",DIC=DIE,DA=+LRIEN,DR=64 D ^DIE
"RTN","LRLNC0",267,0)
 L -^LAB(62.06,LRIEN)
"RTN","LRLNC0",268,0)
 I '$G(^LAB(62.06,+LRIEN,64))!($D(DTOUT))!($D(DUOUT)) G 6206
"RTN","LRLNC0",269,0)
 S LRDATA="LAB(62.06,"_+LRIEN_",",LRIEN=+LRIEN
"RTN","LRLNC0",270,0)
 S LRNLT=$P($G(^LAB(62.06,+LRIEN,64)),U)
"RTN","LRLNC0",271,0)
 I LRNLT S LRTEST=$$GET1^DIQ(64,LRNLT_",",.01,"ERR","ANS")
"RTN","LRLNC0",272,0)
 I LRNLT W ! D DEFAULT
"RTN","LRLNC0",273,0)
 G 6206
"RTN","LRLNC0",274,0)
 Q
"RTN","LRLNC0",275,0)
EXITMI ;Clean up 6206 variables.
"RTN","LRLNC0",276,0)
 K ANS,DA,DIC,DIE,DIR,DIRUT,DR,DTOUT,DUOUT,ERR,LRANS,LRDATA,LRDEF,LRDFONLY,LRNLT,LRNLTX,LRIEN,LRTEST
"RTN","LRLNC0",277,0)
 K LRDEL,LRDFONLY,X,Y
"RTN","LRLNC0",278,0)
 Q
"VER")
8.0^22.0
"BLD",8379,6)
^317
**END**
**END**
