Released XT*7.3*109 SEQ #91
Extracted from mail message
**KIDS**:XT*7.3*109^

**INSTALL NAME**
XT*7.3*109
"BLD",1027,0)
XT*7.3*109^TOOLKIT^0^3080328^y
"BLD",1027,1,0)
^^2^2^3070912^^
"BLD",1027,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",1027,1,2,0)
XT*7.3*109  XPARLIST errors out
"BLD",1027,4,0)
^9.64PA^^
"BLD",1027,6.3)
5
"BLD",1027,"KRN",0)
^9.67PA^779.2^20
"BLD",1027,"KRN",.4,0)
.4
"BLD",1027,"KRN",.401,0)
.401
"BLD",1027,"KRN",.402,0)
.402
"BLD",1027,"KRN",.403,0)
.403
"BLD",1027,"KRN",.5,0)
.5
"BLD",1027,"KRN",.84,0)
.84
"BLD",1027,"KRN",3.6,0)
3.6
"BLD",1027,"KRN",3.8,0)
3.8
"BLD",1027,"KRN",9.2,0)
9.2
"BLD",1027,"KRN",9.8,0)
9.8
"BLD",1027,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",1027,"KRN",9.8,"NM",1,0)
XPARLIST^^0^B8750384
"BLD",1027,"KRN",9.8,"NM",2,0)
XPAREDT1^^0^B14290771
"BLD",1027,"KRN",9.8,"NM","B","XPAREDT1",2)

"BLD",1027,"KRN",9.8,"NM","B","XPARLIST",1)

"BLD",1027,"KRN",19,0)
19
"BLD",1027,"KRN",19.1,0)
19.1
"BLD",1027,"KRN",101,0)
101
"BLD",1027,"KRN",409.61,0)
409.61
"BLD",1027,"KRN",771,0)
771
"BLD",1027,"KRN",779.2,0)
779.2
"BLD",1027,"KRN",870,0)
870
"BLD",1027,"KRN",8989.51,0)
8989.51
"BLD",1027,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",1027,"KRN",8989.51,"NM",1,0)
XPAR ALL ENTITIES^^0
"BLD",1027,"KRN",8989.51,"NM","B","XPAR ALL ENTITIES",1)

"BLD",1027,"KRN",8989.52,0)
8989.52
"BLD",1027,"KRN",8994,0)
8994
"BLD",1027,"KRN","B",.4,.4)

"BLD",1027,"KRN","B",.401,.401)

"BLD",1027,"KRN","B",.402,.402)

"BLD",1027,"KRN","B",.403,.403)

"BLD",1027,"KRN","B",.5,.5)

"BLD",1027,"KRN","B",.84,.84)

"BLD",1027,"KRN","B",3.6,3.6)

"BLD",1027,"KRN","B",3.8,3.8)

"BLD",1027,"KRN","B",9.2,9.2)

"BLD",1027,"KRN","B",9.8,9.8)

"BLD",1027,"KRN","B",19,19)

"BLD",1027,"KRN","B",19.1,19.1)

"BLD",1027,"KRN","B",101,101)

"BLD",1027,"KRN","B",409.61,409.61)

"BLD",1027,"KRN","B",771,771)

"BLD",1027,"KRN","B",779.2,779.2)

"BLD",1027,"KRN","B",870,870)

"BLD",1027,"KRN","B",8989.51,8989.51)

"BLD",1027,"KRN","B",8989.52,8989.52)

"BLD",1027,"KRN","B",8994,8994)

"BLD",1027,"QUES",0)
^9.62^^
"BLD",1027,"REQB",0)
^9.611^1^1
"BLD",1027,"REQB",1,0)
XT*7.3*72^2
"BLD",1027,"REQB","B","XT*7.3*72",1)

"KRN",8989.51,197,-1)
0^1
"KRN",8989.51,197,0)
XPAR ALL ENTITIES^All Entities^0^^^1
"KRN",8989.51,197,1)
F
"KRN",8989.51,197,20,0)
^8989.512^3^3^3080328^^^^
"KRN",8989.51,197,20,1,0)
This is a 'dummy' parameter definition that is used by XPARLIST to get
"KRN",8989.51,197,20,2,0)
a list of all entities.  The Allowable Entities multiple for this parameter
"KRN",8989.51,197,20,3,0)
should list all entities defined in PARAMETERS.
"KRN",8989.51,197,30,0)
^8989.513I^12^11
"KRN",8989.51,197,30,2,0)
70^4.2
"KRN",8989.51,197,30,3,0)
60^4
"KRN",8989.51,197,30,4,0)
50^49
"KRN",8989.51,197,30,5,0)
40^44
"KRN",8989.51,197,30,6,0)
30^8930
"KRN",8989.51,197,30,7,0)
20^404.51
"KRN",8989.51,197,30,8,0)
10^200
"KRN",8989.51,197,30,9,0)
80^9.4
"KRN",8989.51,197,30,10,0)
90^405.4
"KRN",8989.51,197,30,11,0)
100^100.21
"KRN",8989.51,197,30,12,0)
110^3.5
"MBREQ")
0
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",6,-1)
1^1
"PKG",6,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^
"PKG",6,20,0)
^9.402P^^0
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.3^3040428^2970513^2
"PKG",6,22,1,"PAH",1,0)
109^3080328
"PKG",6,22,1,"PAH",1,1,0)
^^2^2^3080328
"PKG",6,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",6,22,1,"PAH",1,1,2,0)
XT*7.3*109  XPARLIST errors out
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XPAREDT1")
0^2^B14290771^B14411024
"RTN","XPAREDT1",1,0)
XPAREDT1 ; SLC/KCM - Supporting Calls - Entities; [3/31/03 7:19am] ;9/12/07  16:19
"RTN","XPAREDT1",2,0)
 ;;7.3;TOOLKIT;**26,109**;Apr 25, 1995;Build 5
"RTN","XPAREDT1",3,0)
 ;
"RTN","XPAREDT1",4,0)
BLDLST ; ...continued from BLDLST^XPAREDIT(LST,PAR)
"RTN","XPAREDT1",5,0)
 ; Build list of entities allowed for this parameter
"RTN","XPAREDT1",6,0)
 ; # is precedence, 'fixed' is VP to implied instance (i.e., SYS, PKG)
"RTN","XPAREDT1",7,0)
 ; .LST(#)=file number^message^order^prefix^fixed^lookup info
"RTN","XPAREDT1",8,0)
 ;     ("M", message) = #
"RTN","XPAREDT1",9,0)
 ;     ("P", prefix) = #
"RTN","XPAREDT1",10,0)
 ;  PAR=ien^name
"RTN","XPAREDT1",11,0)
 N IEN,SEQ,FN,X K LST ; make sure LST is empty initially
"RTN","XPAREDT1",12,0)
 S SEQ=0,LST=0
"RTN","XPAREDT1",13,0)
 F  S SEQ=$O(^XTV(8989.51,+PAR,30,"B",SEQ)) Q:'SEQ  S IEN=$O(^(SEQ,0)) D
"RTN","XPAREDT1",14,0)
 . S FN=$P(^XTV(8989.51,+PAR,30,IEN,0),"^",2) I FN=9.4,(DUZ(0)'["@") Q
"RTN","XPAREDT1",15,0)
 . S X=^XTV(8989.518,FN,0),X=FN_U_$P(X,U,3)_U_U_$P(X,U,2)
"RTN","XPAREDT1",16,0)
 . S LST=LST+1,LST(SEQ)=X
"RTN","XPAREDT1",17,0)
 . S LST("M",$$UPPER($P(X,U,2)))=SEQ
"RTN","XPAREDT1",18,0)
 . S LST("P",$P(X,U,4))=SEQ
"RTN","XPAREDT1",19,0)
 . ; find IEN's where only one entity instance is possible
"RTN","XPAREDT1",20,0)
 . I FN=9.4 D  ; find package to which this parameter belongs
"RTN","XPAREDT1",21,0)
 . . N PRN,PRE
"RTN","XPAREDT1",22,0)
 . . S PRN=$P($G(^XTV(8989.51,+PAR,0)),"^",1) Q:'$L(PRN)
"RTN","XPAREDT1",23,0)
 . . S PRE=PRN F  S PRE=$O(^DIC(9.4,"C",PRE),-1) Q:'$L(PRE)  Q:(PRE=$E(PRN,1,$L(PRE)))  I '($E(PRE,1)=$E(PRN,1)) S PRE="" Q
"RTN","XPAREDT1",24,0)
 . . Q:'$L(PRE)
"RTN","XPAREDT1",25,0)
 . . S X=$O(^DIC(9.4,"C",PRE,0))
"RTN","XPAREDT1",26,0)
 . . S $P(LST(SEQ),U,5)=X_";DIC(9.4,"
"RTN","XPAREDT1",27,0)
 . . S $P(LST(SEQ),U,6)=$P(^DIC(9.4,X,0),"^",1)
"RTN","XPAREDT1",28,0)
 . I FN=4.2 D  ; find domain for this system
"RTN","XPAREDT1",29,0)
 . . S X=$$KSP^XUPARAM("WHERE")
"RTN","XPAREDT1",30,0)
 . . S $P(LST(SEQ),U,5)=$$FIND1^DIC(4.2,"","QX",X)_";DIC(4.2,"
"RTN","XPAREDT1",31,0)
 . . S $P(LST(SEQ),U,6)=X
"RTN","XPAREDT1",32,0)
 . I FN=4 D  ; find division if this site not multi-divisional
"RTN","XPAREDT1",33,0)
 . . S X=$$KSP^XUPARAM("INST")
"RTN","XPAREDT1",34,0)
 . . I $P($G(^DIC(4,X,"DIV")),U,1)'="Y" D
"RTN","XPAREDT1",35,0)
 . . . S $P(LST(SEQ),U,5)=X_";DIC(4,"
"RTN","XPAREDT1",36,0)
 . . . S $P(LST(SEQ),U,6)=$P(^DIC(4,X,0),"^",1)
"RTN","XPAREDT1",37,0)
 . I '$L($P(LST(SEQ),U,5)) D  ; otherwise...
"RTN","XPAREDT1",38,0)
 . . S $P(LST(SEQ),U,6)=$P($G(^DIC(FN,0)),"^",1)
"RTN","XPAREDT1",39,0)
 Q
"RTN","XPAREDT1",40,0)
GETCLS ; ...continued from GETCLS^XPAREDIT(X,PAR,LST)
"RTN","XPAREDT1",41,0)
 ; Choose the class of entity
"RTN","XPAREDT1",42,0)
 ; optionally, lookup entity using variable pointer syntax (PRE.NAME)
"RTN","XPAREDT1",43,0)
 ;   .X=returns seq # or entity in VP format
"RTN","XPAREDT1",44,0)
 ;  PAR=ien^name for parameter
"RTN","XPAREDT1",45,0)
 ; .LST=list from which the entity is selected
"RTN","XPAREDT1",46,0)
 N TMP,DONE
"RTN","XPAREDT1",47,0)
 D SHWCLS
"RTN","XPAREDT1",48,0)
 S DONE=0 F  D  Q:DONE
"RTN","XPAREDT1",49,0)
 . W !,"Enter selection: " R X:DTIME S:'$T X="^" S X=$$UPPER(X)
"RTN","XPAREDT1",50,0)
 . I '$L(X)!(X="^")!(X="^^") S ENT="",DONE=1 Q
"RTN","XPAREDT1",51,0)
 . I $E(X)="?" D HLPCLS I $E(X,1,2)="??" D SHWCLS    ; help requested
"RTN","XPAREDT1",52,0)
 . I X=" " S X=$G(^DISV(DUZ,"XPAR01",+PAR)) Q:'X     ; spacebar recall
"RTN","XPAREDT1",53,0)
 . I +X,$D(LST(X)) S DONE=1 Q                        ; # -> seq #
"RTN","XPAREDT1",54,0)
 . I $D(LST("P",X)) S X=LST("P",X),DONE=1 Q          ; PRE -> seq #
"RTN","XPAREDT1",55,0)
 . I $D(LST("M",X)) S X=LST("M",X),DONE=1 Q          ; NAME -> seq #
"RTN","XPAREDT1",56,0)
 . S TMP=$O(LST("M",X))
"RTN","XPAREDT1",57,0)
 . I $E(TMP,1,$L(X))=X S X=LST("M",TMP),DONE=1 Q     ; PARTIAL -> seq #
"RTN","XPAREDT1",58,0)
 . I $L(X,".")>1,$D(LST("P",$P(X,".",1))) D  Q:DONE  ; if VP syntax
"RTN","XPAREDT1",59,0)
 . . S TMP=$P(X,".",2)
"RTN","XPAREDT1",60,0)
 . . D LOOKUP^XPAREDIT(.TMP,+LST(LST("P",$P(X,".",1)))) ; silent lookup
"RTN","XPAREDT1",61,0)
 . . I $L(TMP) S X=TMP,DONE=1                        ; PRE.NAME -> VP
"RTN","XPAREDT1",62,0)
 . W " ??" D HLPCLS                                  ; invalid entry
"RTN","XPAREDT1",63,0)
 I +X,X'[";" D  ;Don't show for resoved pointer p109
"RTN","XPAREDT1",64,0)
 . W "  ",$P(LST(X),U,2),"   ",$P(LST(X),U,6)  ; echo selection
"RTN","XPAREDT1",65,0)
 . I +LST(X)=9.4 D
"RTN","XPAREDT1",66,0)
 . . W !!,"Parameters set for 'Package' may be replaced if "
"RTN","XPAREDT1",67,0)
 . . W $P(LST(X),U,6),!,"is installed in this account."
"RTN","XPAREDT1",68,0)
 . S ^DISV(DUZ,"XPAR01",+PAR)=X
"RTN","XPAREDT1",69,0)
 Q
"RTN","XPAREDT1",70,0)
SHWCLS ; procedure used only by GETCLS
"RTN","XPAREDT1",71,0)
 ; show entity classes appropriate for this parameter
"RTN","XPAREDT1",72,0)
 N I,X
"RTN","XPAREDT1",73,0)
 W !!,$P(PAR,"^",2)," may be set for the following:",!!
"RTN","XPAREDT1",74,0)
 S I=0 F  S I=$O(LST(I)) Q:'I  S X=LST(I) D
"RTN","XPAREDT1",75,0)
 . W ?5,I,?9,$P(X,"^",2),?23,$P(X,U,4),?30
"RTN","XPAREDT1",76,0)
 . I $L($P(X,U,5)) W "["_$P(X,U,6)_"]",!
"RTN","XPAREDT1",77,0)
 . I '$L($P(X,U,5)) W "[choose from "_$P(X,U,6)_"]",!
"RTN","XPAREDT1",78,0)
 Q
"RTN","XPAREDT1",79,0)
HLPCLS ; procedure used only by GETCLS
"RTN","XPAREDT1",80,0)
 ; display help for entity class selection
"RTN","XPAREDT1",81,0)
 W !,"Enter the number, name, or abbreviation of the selection."
"RTN","XPAREDT1",82,0)
 W !,"You may also use variable pointer syntax (Example: LOC.WEST2)."
"RTN","XPAREDT1",83,0)
 Q
"RTN","XPAREDT1",84,0)
UPPER(X) ; function - convert lower to upper case
"RTN","XPAREDT1",85,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XPARLIST")
0^1^B8750384^B8698571
"RTN","XPARLIST",1,0)
XPARLIST ; SLC/KCM - List parameter values ;8/30/07  16:27
"RTN","XPARLIST",2,0)
 ;;7.3;TOOLKIT;**26,72,109**;Apr 25, 1995;Build 5
"RTN","XPARLIST",3,0)
 ;
"RTN","XPARLIST",4,0)
ALLPARS ; Select parameter and list values
"RTN","XPARLIST",5,0)
 N PAR
"RTN","XPARLIST",6,0)
 D GETPAR^XPAREDIT(.PAR) Q:'PAR
"RTN","XPARLIST",7,0)
 D ALLPAR(+PAR)
"RTN","XPARLIST",8,0)
 Q
"RTN","XPARLIST",9,0)
ALLPAR(PAR) ; List values given parameter
"RTN","XPARLIST",10,0)
 N ENT,INST,VAL,LN,DIRUT,DUOUT,DTOUT
"RTN","XPARLIST",11,0)
 W !!,"Values for "_$P(^XTV(8989.51,PAR,0),U),!! S LN=1
"RTN","XPARLIST",12,0)
 D HEADER
"RTN","XPARLIST",13,0)
 S ENT=0 F  S ENT=$O(^XTV(8989.5,"AC",PAR,ENT)) Q:'ENT  D  Q:$D(DIRUT)
"RTN","XPARLIST",14,0)
 . S INST=""
"RTN","XPARLIST",15,0)
 . F  S INST=$O(^XTV(8989.5,"AC",PAR,ENT,INST)) Q:INST=""  D  Q:$D(DIRUT)
"RTN","XPARLIST",16,0)
 . . D WAIT Q:$D(DIRUT)
"RTN","XPARLIST",17,0)
 . . S VAL=^XTV(8989.5,"AC",PAR,ENT,INST)
"RTN","XPARLIST",18,0)
 . . W $E($$ENTNAME(ENT),1,30),?31
"RTN","XPARLIST",19,0)
 . . W $E($$EXT^XPARDD(INST,PAR,"I"),1,20),?52
"RTN","XPARLIST",20,0)
 . . W $E($$EXT^XPARDD(VAL,PAR,"V"),1,28),!
"RTN","XPARLIST",21,0)
 I '$D(DIRUT) S DIR(0)="E" D ^DIR
"RTN","XPARLIST",22,0)
 Q
"RTN","XPARLIST",23,0)
ALLENTS ; Select entity and list values
"RTN","XPARLIST",24,0)
 N PAR,ENT
"RTN","XPARLIST",25,0)
 S PAR=$O(^XTV(8989.51,"B","XPAR ALL ENTITIES",0))
"RTN","XPARLIST",26,0)
 D GETENT^XPAREDIT(.ENT,PAR_"^Entities") Q:'ENT
"RTN","XPARLIST",27,0)
 D ALLENT(ENT)
"RTN","XPARLIST",28,0)
 Q
"RTN","XPARLIST",29,0)
ALLPKG ; Select package
"RTN","XPARLIST",30,0)
 N DIC,Y
"RTN","XPARLIST",31,0)
 S DIC=9.4,DIC(0)="AEMQ" D ^DIC Q:Y<0
"RTN","XPARLIST",32,0)
 D ALLENT(+Y_";DIC(9.4,")
"RTN","XPARLIST",33,0)
 Q
"RTN","XPARLIST",34,0)
ALLENT(ENT) ; List values given entity
"RTN","XPARLIST",35,0)
 N IEN,PAR,INST,VAL,LN,DIRUT,DUOUT,DTOUT
"RTN","XPARLIST",36,0)
 K ^TMP($J)
"RTN","XPARLIST",37,0)
 W !!,"Values for "_$$ENTNAME(ENT),!! S LN=1
"RTN","XPARLIST",38,0)
 D HEADER
"RTN","XPARLIST",39,0)
 S IEN=0 F  S IEN=$O(^XTV(8989.5,"B",ENT,IEN)) Q:'IEN  D
"RTN","XPARLIST",40,0)
 . S X=^XTV(8989.5,IEN,0),VAL=$G(^XTV(8989.5,IEN,1)) ;p109
"RTN","XPARLIST",41,0)
 . Q:($P(X,U,2)="")!($P(X,U,3)="")
"RTN","XPARLIST",42,0)
 . S ^TMP($J,$P(X,U,2),$P(X,U,3))=VAL
"RTN","XPARLIST",43,0)
 . S ^TMP($J,$P(X,U,2),$P(X,U,3),IEN)=""
"RTN","XPARLIST",44,0)
 S PAR=0 F  S PAR=$O(^TMP($J,PAR)) Q:'PAR  D  Q:$D(DIRUT)
"RTN","XPARLIST",45,0)
 . I '$D(^XTV(8989.51,PAR)) W ">> BROKEN PTR TO PARAMETER ("_PAR_")",! Q
"RTN","XPARLIST",46,0)
 . S INST="" F  S INST=$O(^TMP($J,PAR,INST)) Q:INST=""  D  Q:$D(DIRUT)
"RTN","XPARLIST",47,0)
 . . D WAIT Q:$D(DIRUT)
"RTN","XPARLIST",48,0)
 . . S VAL=^TMP($J,PAR,INST)
"RTN","XPARLIST",49,0)
 . . W $E($P(^XTV(8989.51,PAR,0),U),1,30),?31
"RTN","XPARLIST",50,0)
 . . W $E($$EXT^XPARDD(INST,PAR,"I"),1,20),?52
"RTN","XPARLIST",51,0)
 . . W $E($$EXT^XPARDD(VAL,PAR,"V"),1,28),!
"RTN","XPARLIST",52,0)
 I '$D(DIRUT) S DIR(0)="E" D ^DIR
"RTN","XPARLIST",53,0)
 K ^TMP($J)
"RTN","XPARLIST",54,0)
 Q
"RTN","XPARLIST",55,0)
TMPLT(TLT) ; List values given template
"RTN","XPARLIST",56,0)
 N DIC,Y,ALLENT,ALLINST,DTOUT,DUOUT,DIRUT
"RTN","XPARLIST",57,0)
 I '$G(TLT),$L($G(TLT)) S TLT=$O(^XTV(8989.52,"B",TLT,0))
"RTN","XPARLIST",58,0)
 I '$D(^XTV(8989.52,+$G(TLT),0)) N TLT S DIC=8989.52,DIC(0)="AEMQ" D ^DIC Q:Y<0  S TLT=+Y
"RTN","XPARLIST",59,0)
 D SELENT^XPAREDT3(.ALLENT,TLT) Q:$D(DTOUT)!$D(DUOUT)
"RTN","XPARLIST",60,0)
 D SELINST^XPAREDT3(.ALLINST,ALLENT,TLT) Q:$D(DTOUT)!$D(DUOUT)
"RTN","XPARLIST",61,0)
 D SHWTLT^XPAREDT3(ALLENT,ALLINST,TLT)
"RTN","XPARLIST",62,0)
 S DIR(0)="E" D ^DIR
"RTN","XPARLIST",63,0)
 Q
"RTN","XPARLIST",64,0)
WAIT ; pause display
"RTN","XPARLIST",65,0)
 S LN=LN+1 I LN>(IOSL-4) S DIR(0)="E" D ^DIR W !! D:'$D(DIRUT) HEADER S LN=0
"RTN","XPARLIST",66,0)
 Q
"RTN","XPARLIST",67,0)
ENTNAME(ENT) ; Return TYP: Entity
"RTN","XPARLIST",68,0)
 N X,FN
"RTN","XPARLIST",69,0)
 S FN=+$P(@(U_$P(ENT,";",2)_"0)"),U,2),X=$P(^XTV(8989.518,FN,0),U,2)
"RTN","XPARLIST",70,0)
 S X=X_": "_$$EXTPTR^XPARDD(+ENT,FN)
"RTN","XPARLIST",71,0)
 Q X
"RTN","XPARLIST",72,0)
 ;
"RTN","XPARLIST",73,0)
HEADER ;
"RTN","XPARLIST",74,0)
 W "Parameter",?31,"Instance",?52,"Value",!
"RTN","XPARLIST",75,0)
 W $$REPEAT^XLFSTR("-",IOM-4),!
"RTN","XPARLIST",76,0)
 Q
"VER")
8.0^22.0
"BLD",1027,6)
^91
**END**
**END**
