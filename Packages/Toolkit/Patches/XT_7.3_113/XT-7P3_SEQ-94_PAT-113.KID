EMERGENCY Released XT*7.3*113 SEQ #94
Extracted from mail message
**KIDS**:XT*7.3*113^

**INSTALL NAME**
XT*7.3*113
"BLD",2623,0)
XT*7.3*113^TOOLKIT^0^3081121^y
"BLD",2623,1,0)
^^6^6^3081015^
"BLD",2623,1,1,0)
IDENTITY HUB CHANGES FOR DUPLICATE RECORD MERGE
"BLD",2623,1,2,0)
 
"BLD",2623,1,3,0)
Changes to the Duplicate Record Merge routines to support the new PSIM 
"BLD",2623,1,4,0)
Probabilistic Search.
"BLD",2623,1,5,0)
 
"BLD",2623,1,6,0)
Please see FORUM patch module for details.
"BLD",2623,4,0)
^9.64PA^15.1^1
"BLD",2623,4,15.1,0)
15.1
"BLD",2623,4,15.1,2,0)
^9.641^15.1^1
"BLD",2623,4,15.1,2,15.1,0)
DUPLICATE RESOLUTION  (File-top level)
"BLD",2623,4,15.1,2,15.1,1,0)
^9.6411^99^1
"BLD",2623,4,15.1,2,15.1,1,99,0)
SUPPRESS NEW DUP EMAIL
"BLD",2623,4,15.1,222)
y^n^p^^^^n^^n
"BLD",2623,4,15.1,224)

"BLD",2623,4,"APDD",15.1,15.1)

"BLD",2623,4,"APDD",15.1,15.1,99)

"BLD",2623,4,"B",15.1,15.1)

"BLD",2623,6.3)
5
"BLD",2623,"ABNS",0)
^9.66A^^
"BLD",2623,"ABPKG")
y^y^G.CIRN DEV@DEVCRN.FO-ALBANY.MED.VA.GOV
"BLD",2623,"INID")
^y
"BLD",2623,"INIT")
EN^XT73P113
"BLD",2623,"KRN",0)
^9.67PA^8989.52^19
"BLD",2623,"KRN",.4,0)
.4
"BLD",2623,"KRN",.401,0)
.401
"BLD",2623,"KRN",.402,0)
.402
"BLD",2623,"KRN",.403,0)
.403
"BLD",2623,"KRN",.5,0)
.5
"BLD",2623,"KRN",.84,0)
.84
"BLD",2623,"KRN",3.6,0)
3.6
"BLD",2623,"KRN",3.8,0)
3.8
"BLD",2623,"KRN",9.2,0)
9.2
"BLD",2623,"KRN",9.8,0)
9.8
"BLD",2623,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",2623,"KRN",9.8,"NM",1,0)
XDRDADDS^^0^B13998263
"BLD",2623,"KRN",9.8,"NM",2,0)
XDRDEDT^^0^B33732705
"BLD",2623,"KRN",9.8,"NM",3,0)
XDRDPICK^^0^B86863530
"BLD",2623,"KRN",9.8,"NM",4,0)
XDRCNT^^0^B19633357
"BLD",2623,"KRN",9.8,"NM",5,0)
XDRDCOMP^^0^B12808569
"BLD",2623,"KRN",9.8,"NM",6,0)
XDRDFPD^^0^B14210534
"BLD",2623,"KRN",9.8,"NM",7,0)
XDRDLIST^^0^B16235628
"BLD",2623,"KRN",9.8,"NM",8,0)
XDRDPRGE^^0^B9048519
"BLD",2623,"KRN",9.8,"NM",9,0)
XDRDQUE^^0^B20836456
"BLD",2623,"KRN",9.8,"NM",10,0)
XDRMADD^^0^B42800986
"BLD",2623,"KRN",9.8,"NM",11,0)
XDRDEFLG^^0^B1931825
"BLD",2623,"KRN",9.8,"NM",12,0)
XT73P113^^0^B2774672
"BLD",2623,"KRN",9.8,"NM","B","XDRCNT",4)

"BLD",2623,"KRN",9.8,"NM","B","XDRDADDS",1)

"BLD",2623,"KRN",9.8,"NM","B","XDRDCOMP",5)

"BLD",2623,"KRN",9.8,"NM","B","XDRDEDT",2)

"BLD",2623,"KRN",9.8,"NM","B","XDRDEFLG",11)

"BLD",2623,"KRN",9.8,"NM","B","XDRDFPD",6)

"BLD",2623,"KRN",9.8,"NM","B","XDRDLIST",7)

"BLD",2623,"KRN",9.8,"NM","B","XDRDPICK",3)

"BLD",2623,"KRN",9.8,"NM","B","XDRDPRGE",8)

"BLD",2623,"KRN",9.8,"NM","B","XDRDQUE",9)

"BLD",2623,"KRN",9.8,"NM","B","XDRMADD",10)

"BLD",2623,"KRN",9.8,"NM","B","XT73P113",12)

"BLD",2623,"KRN",19,0)
19
"BLD",2623,"KRN",19.1,0)
19.1
"BLD",2623,"KRN",101,0)
101
"BLD",2623,"KRN",409.61,0)
409.61
"BLD",2623,"KRN",771,0)
771
"BLD",2623,"KRN",870,0)
870
"BLD",2623,"KRN",8989.51,0)
8989.51
"BLD",2623,"KRN",8989.52,0)
8989.52
"BLD",2623,"KRN",8994,0)
8994
"BLD",2623,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",2623,"KRN",8994,"NM",1,0)
XDR ADD POTENTIAL PATIENT DUP^^0
"BLD",2623,"KRN",8994,"NM",2,0)
XDR UPD SUPPR EMAIL^^0
"BLD",2623,"KRN",8994,"NM","B","XDR ADD POTENTIAL PATIENT DUP",1)

"BLD",2623,"KRN",8994,"NM","B","XDR UPD SUPPR EMAIL",2)

"BLD",2623,"KRN","B",.4,.4)

"BLD",2623,"KRN","B",.401,.401)

"BLD",2623,"KRN","B",.402,.402)

"BLD",2623,"KRN","B",.403,.403)

"BLD",2623,"KRN","B",.5,.5)

"BLD",2623,"KRN","B",.84,.84)

"BLD",2623,"KRN","B",3.6,3.6)

"BLD",2623,"KRN","B",3.8,3.8)

"BLD",2623,"KRN","B",9.2,9.2)

"BLD",2623,"KRN","B",9.8,9.8)

"BLD",2623,"KRN","B",19,19)

"BLD",2623,"KRN","B",19.1,19.1)

"BLD",2623,"KRN","B",101,101)

"BLD",2623,"KRN","B",409.61,409.61)

"BLD",2623,"KRN","B",771,771)

"BLD",2623,"KRN","B",870,870)

"BLD",2623,"KRN","B",8989.51,8989.51)

"BLD",2623,"KRN","B",8989.52,8989.52)

"BLD",2623,"KRN","B",8994,8994)

"BLD",2623,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",2623,"QUES",0)
^9.62^^
"BLD",2623,"REQB",0)
^9.611^4^3
"BLD",2623,"REQB",2,0)
XT*7.3*42^1
"BLD",2623,"REQB",3,0)
XT*7.3*47^1
"BLD",2623,"REQB",4,0)
XT*7.3*43^1
"BLD",2623,"REQB","B","XT*7.3*42",2)

"BLD",2623,"REQB","B","XT*7.3*43",4)

"BLD",2623,"REQB","B","XT*7.3*47",3)

"FIA",15.1)
DUPLICATE RESOLUTION
"FIA",15.1,0)
^VA(15.1,
"FIA",15.1,0,0)
15.1P
"FIA",15.1,0,1)
y^n^p^^^^n^^n
"FIA",15.1,0,10)

"FIA",15.1,0,11)

"FIA",15.1,0,"RLRO")

"FIA",15.1,0,"VR")
7.3^XT
"FIA",15.1,15.1)
1
"FIA",15.1,15.1,99)

"INIT")
EN^XT73P113
"KRN",8994,267,-1)
0^1
"KRN",8994,267,0)
XDR ADD POTENTIAL PATIENT DUP^ADD^XDRDADDS^1^A^0^^1^1^^0
"KRN",8994,267,1,0)
^8994.01^5^5^3080707^^
"KRN",8994,267,1,1,0)
Add a record to the VistA DUPLICATE RECORD file (#15), or find an existing
"KRN",8994,267,1,2,0)
record for the pair of potential duplicates passed to the RPC. This was
"KRN",8994,267,1,3,0)
written to allow MPI to add potential duplicate patients to the file, when
"KRN",8994,267,1,4,0)
potential duplicates are detected by the Person Service Identity
"KRN",8994,267,1,5,0)
Management (PSIM) probabilistic search.
"KRN",8994,267,2,0)
^8994.02A^6^3
"KRN",8994,267,2,1,0)
FILE NUMBER^1^20^1^2
"KRN",8994,267,2,1,1,0)
^8994.021^3^3^3080707^^^^
"KRN",8994,267,2,1,1,1,0)
File number for the file to which the potential duplicate records belong. 
"KRN",8994,267,2,1,1,2,0)
For example, if the two potential duplicate entries are on the PATIENT 
"KRN",8994,267,2,1,1,3,0)
file, this value is set to 2.
"KRN",8994,267,2,5,0)
TO_IEN^1^14^1^4
"KRN",8994,267,2,5,1,0)
^8994.021^2^2^3080707^^
"KRN",8994,267,2,5,1,1,0)
Internal Entry Number (IEN) of one of the potential duplicate records. 
"KRN",8994,267,2,5,1,2,0)
For example, this could be a DFN from the PATIENT file (file #2).
"KRN",8994,267,2,6,0)
FROM_IEN^1^14^1^3
"KRN",8994,267,2,6,1,0)
^8994.021^2^2^3080707^^
"KRN",8994,267,2,6,1,1,0)
Internal Entry Number (IEN) of one of the potential duplicate records. 
"KRN",8994,267,2,6,1,2,0)
For example, this could be a DFN from the PATIENT file (file #2).
"KRN",8994,267,2,"B","FILE NUMBER",1)

"KRN",8994,267,2,"B","FROM_IEN",6)

"KRN",8994,267,2,"B","TO_IEN",5)

"KRN",8994,267,2,"PARAMSEQ",2,1)

"KRN",8994,267,2,"PARAMSEQ",3,6)

"KRN",8994,267,2,"PARAMSEQ",4,5)

"KRN",8994,267,3,0)
^8994.03^4^4^3080707^^
"KRN",8994,267,3,1,0)
RETURN =IEN from file 15 DUPLICATE RECORD FILE# - If no errors occur, and 
"KRN",8994,267,3,2,0)
if either an existing record is found, or a new record is added.
"KRN",8994,267,3,3,0)
  
"KRN",8994,267,3,4,0)
RETURN = -1^Error Message - if any errors occur
"KRN",8994,271,-1)
0^2
"KRN",8994,271,0)
XDR UPD SUPPR EMAIL^EN^XDRDEFLG^1^A^0^^1^1^^0
"KRN",8994,271,1,0)
^^9^9^3080919^
"KRN",8994,271,1,1,0)
Used to remotely set the field SUPPRESS NEW DUP EMAIL (#99) on the
"KRN",8994,271,1,2,0)
DUPLICATE RESOLUTION file (#15.1).
"KRN",8994,271,1,3,0)
 
"KRN",8994,271,1,4,0)
SUPPRESS NEW DUP EMAIL is set to 1 (Yes) to suppress the email that is
"KRN",8994,271,1,5,0)
normally sent when a new record is added to the DUPLICATE RECORD file by
"KRN",8994,271,1,6,0)
PSIM (i.e., by a call from routine XDRDADDS)
"KRN",8994,271,1,7,0)
 
"KRN",8994,271,1,8,0)
If SUPPRESS NEW DUP EMAIL is set to 0 (No) or null, the email will be 
"KRN",8994,271,1,9,0)
sent.
"KRN",8994,271,2,0)
^8994.02A^2^2
"KRN",8994,271,2,1,0)
FILE NUMBER^1^20^1^2
"KRN",8994,271,2,1,1,0)
^8994.021^3^3^3080919^^^
"KRN",8994,271,2,1,1,1,0)
File number for the file that is the .01 field of a record in the 
"KRN",8994,271,2,1,1,2,0)
DUPLICATE RESOLUTION file. This is the record that is to be updated by 
"KRN",8994,271,2,1,1,3,0)
this RPC.
"KRN",8994,271,2,2,0)
VALUE^1^1^1^3
"KRN",8994,271,2,2,1,0)
^^2^2^3080919^
"KRN",8994,271,2,2,1,1,0)
Must be set to 1 or 0. This value will be put into the SUPPRESS NEW DUP 
"KRN",8994,271,2,2,1,2,0)
EMAIL field.
"KRN",8994,271,2,"B","FILE NUMBER",1)

"KRN",8994,271,2,"B","VALUE",2)

"KRN",8994,271,2,"PARAMSEQ",2,1)

"KRN",8994,271,2,"PARAMSEQ",3,2)

"KRN",8994,271,3,0)
^8994.03^3^3^3080919^^^
"KRN",8994,271,3,1,0)
RETURN=0  -  if no errors occurred.
"KRN",8994,271,3,2,0)
 
"KRN",8994,271,3,3,0)
RETURN=-1^Error Message  -  if errors occurred
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",189,-1)
1^1
"PKG",189,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP
"PKG",189,20,0)
^9.402P^^
"PKG",189,22,0)
^9.49I^1^1
"PKG",189,22,1,0)
7.3^2950403^2960208
"PKG",189,22,1,"PAH",1,0)
113^3081121
"PKG",189,22,1,"PAH",1,1,0)
^^6^6^3081121
"PKG",189,22,1,"PAH",1,1,1,0)
IDENTITY HUB CHANGES FOR DUPLICATE RECORD MERGE
"PKG",189,22,1,"PAH",1,1,2,0)
 
"PKG",189,22,1,"PAH",1,1,3,0)
Changes to the Duplicate Record Merge routines to support the new PSIM 
"PKG",189,22,1,"PAH",1,1,4,0)
Probabilistic Search.
"PKG",189,22,1,"PAH",1,1,5,0)
 
"PKG",189,22,1,"PAH",1,1,6,0)
Please see FORUM patch module for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","XDRCNT")
0^4^B19633357^B18892090
"RTN","XDRCNT",1,0)
XDRCNT ;SF-IRMFO/OHPRD/LAB - Count/Tally records by status/merged status;   [ 08/13/92  09:50 AM ] ;8/28/08  17:55
"RTN","XDRCNT",2,0)
 ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5
"RTN","XDRCNT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRCNT",4,0)
 ;;
"RTN","XDRCNT",5,0)
START ;
"RTN","XDRCNT",6,0)
 D EN^XDRVCHEK
"RTN","XDRCNT",7,0)
 D INFORM
"RTN","XDRCNT",8,0)
 D INIT
"RTN","XDRCNT",9,0)
 D GETFILE
"RTN","XDRCNT",10,0)
 G:XDRQFLG EOJ
"RTN","XDRCNT",11,0)
 D ZIS
"RTN","XDRCNT",12,0)
 G:XDRQFLG EOJ
"RTN","XDRCNT",13,0)
 D PROCESS
"RTN","XDRCNT",14,0)
 D EOJ
"RTN","XDRCNT",15,0)
 Q
"RTN","XDRCNT",16,0)
EOJ ;Eoj cleanup
"RTN","XDRCNT",17,0)
 K XDRQFLG,XDRD,XDRFL,XDRCNT
"RTN","XDRCNT",18,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XDRCNT",19,0)
 K ZTSK,POP,I,S
"RTN","XDRCNT",20,0)
 W:$D(IOF) @IOF
"RTN","XDRCNT",21,0)
 D ^%ZISC
"RTN","XDRCNT",22,0)
 Q
"RTN","XDRCNT",23,0)
INIT ;initialize variables
"RTN","XDRCNT",24,0)
 S XDRQFLG=0,XDRCNT("PG")=0
"RTN","XDRCNT",25,0)
 S X=$G(^DD(15,.03,0)) I X="" W !!,$C(7),"Dictionary error!!  Notify a programmer!" S XDRQFLG=1 Q
"RTN","XDRCNT",26,0)
 S X=$P(X,U,3)
"RTN","XDRCNT",27,0)
 F I=1:1 S S=$P(X,";",I) Q:S=""  S XDRCNT("STATUS",$P(S,":",1),"CNT")=0,XDRCNT("STATUS",$P(S,":",1),"NAME")=$P(S,":",2)
"RTN","XDRCNT",28,0)
 I '$D(XDRCNT("STATUS")) S XDRQFLG=1 W !!,"Dictionary error!!  Notify a programmer!" Q
"RTN","XDRCNT",29,0)
 S X=$G(^DD(15,.05,0)) I X="" W !!,$C(7),"Dictionary error!!  Notify a programmer!" S XDRQFLG=1 Q
"RTN","XDRCNT",30,0)
 S X=$P(X,U,3)
"RTN","XDRCNT",31,0)
 F I=1:1 S S=$P(X,";",I) Q:S=""  S XDRCNT("MERGE STATUS",$P(S,":",1),"CNT")=0,XDRCNT("MERGE STATUS",$P(S,":",1),"NAME")=$P(S,":",2)
"RTN","XDRCNT",32,0)
 I '$D(XDRCNT("MERGE STATUS")) S XDRQFLG=1 W !!,"Dictionary error!!  Notify a programmer!" Q
"RTN","XDRCNT",33,0)
 S XDRCNT("TOTAL RECS")=0
"RTN","XDRCNT",34,0)
 Q
"RTN","XDRCNT",35,0)
 ;
"RTN","XDRCNT",36,0)
GETFILE ;get file to tally records fo
"RTN","XDRCNT",37,0)
 K XDRFL
"RTN","XDRCNT",38,0)
 ; XT*7.3*113 input variable XDRNOPT to FILE^XDRDQUE-if UNDEF, allows PATIENT file to be selected
"RTN","XDRCNT",39,0)
 N XDRNOPT
"RTN","XDRCNT",40,0)
 S DIC("A")="Tally duplicate entries for which file? " D FILE^XDRDQUE
"RTN","XDRCNT",41,0)
 Q:XDRQFLG
"RTN","XDRCNT",42,0)
 S XDRCNT("GBL")=^DIC(XDRFL,0,"GL"),XDRCNT("GBL")=$P(XDRCNT("GBL"),U,2)
"RTN","XDRCNT",43,0)
 Q
"RTN","XDRCNT",44,0)
ZIS W !! K ZTSK,ZTQUEUED,IOP S %ZIS="PQM" D ^%ZIS
"RTN","XDRCNT",45,0)
 I POP S XDRQFLG=1 Q
"RTN","XDRCNT",46,0)
 I $D(IO("Q")) D TSKMN
"RTN","XDRCNT",47,0)
 Q
"RTN","XDRCNT",48,0)
TSKMN ;
"RTN","XDRCNT",49,0)
 S ZTIO=$S($D(ION):ION,1:IO) I $D(IOST)#2,IOST]"" S ZTIO=ZTIO_";"_IOST
"RTN","XDRCNT",50,0)
 I $D(IO("DOC")),IO("DOC")]"" S ZTIO=ZTIO_";"_IO("DOC")
"RTN","XDRCNT",51,0)
 I $D(IOM)#2,IOM S ZTIO=ZTIO_";"_IOM I $D(IOSL)#2,IOSL S ZTIO=ZTIO_";"_IOSL
"RTN","XDRCNT",52,0)
 K ZTSAVE S ZTSAVE("*")=""
"RTN","XDRCNT",53,0)
 S ZTRTN="PROCESS^XDRCNT",ZTDTH="",ZTDESC="TALLY DUPLICATE RECORD STATUS" D ^%ZTLOAD S XDRQFLG=1
"RTN","XDRCNT",54,0)
 Q
"RTN","XDRCNT",55,0)
PROCESS ;
"RTN","XDRCNT",56,0)
 NEW X,D,S
"RTN","XDRCNT",57,0)
 ;S X=0_";"_XDRCNT("GBL") F  S X=$O(^VA(15,"B",X)) Q:X=""!($P(X,";",2)'=XDRCNT("GBL"))  D
"RTN","XDRCNT",58,0)
 S X=0_";"_XDRCNT("GBL") F  S X=$O(^VA(15,"B",X)) Q:X=""  I $P(X,";",2)=XDRCNT("GBL") D
"RTN","XDRCNT",59,0)
 . S D=0 F  S D=$O(^VA(15,"B",X,D)) Q:D'=+D   D
"RTN","XDRCNT",60,0)
 . . Q:^VA(15,"B",X,D)=1
"RTN","XDRCNT",61,0)
 . . S XDRCNT("TOTAL RECS")=XDRCNT("TOTAL RECS")+1
"RTN","XDRCNT",62,0)
 . . S S=$P(^VA(15,D,0),U,3)
"RTN","XDRCNT",63,0)
 . . I S=""
"RTN","XDRCNT",64,0)
 . . E  S XDRCNT("STATUS",S,"CNT")=$G(XDRCNT("STATUS",S,"CNT"))+1
"RTN","XDRCNT",65,0)
 . . I S="V" D
"RTN","XDRCNT",66,0)
 . . . S S=+$P(^VA(15,D,0),U,5)
"RTN","XDRCNT",67,0)
 . . . S XDRCNT("MERGE STATUS",S,"CNT")=XDRCNT("MERGE STATUS",S,"CNT")+1
"RTN","XDRCNT",68,0)
 . . Q
"RTN","XDRCNT",69,0)
 .Q
"RTN","XDRCNT",70,0)
PRINT ;print report
"RTN","XDRCNT",71,0)
 U IO
"RTN","XDRCNT",72,0)
 D HEADER
"RTN","XDRCNT",73,0)
 W !!,"Total Number of Duplicate Records for File ",$E(XDRD(0,0),1,18),":  ",?65,$J(XDRCNT("TOTAL RECS"),6),!
"RTN","XDRCNT",74,0)
 W !?5,"STATUS field:" S X=0 F  S X=$O(XDRCNT("STATUS",X)) Q:X=""  D
"RTN","XDRCNT",75,0)
 .I $Y>(IOSL-5) D HEADER Q:$D(XDRCNT("QUIT"))  W !
"RTN","XDRCNT",76,0)
 .W ?26,$E(XDRCNT("STATUS",X,"NAME"),1,34),?65,$J(XDRCNT("STATUS",X,"CNT"),6),!
"RTN","XDRCNT",77,0)
 W !?5,"MERGE STATUS field:" S X="" F  S X=$O(XDRCNT("MERGE STATUS",X)) Q:X=""  D
"RTN","XDRCNT",78,0)
 .I $Y>(IOSL-5) D HEADER Q:$D(XDRCNT("QUIT"))  W !
"RTN","XDRCNT",79,0)
 .W ?26,$E(XDRCNT("MERGE STATUS",X,"NAME"),1,34),?65,$J(XDRCNT("MERGE STATUS",X,"CNT"),6),!
"RTN","XDRCNT",80,0)
 .Q
"RTN","XDRCNT",81,0)
 I $E(IOST)="C" W !!,"End of Report.  Press return to exit" R X:DTIME
"RTN","XDRCNT",82,0)
 Q
"RTN","XDRCNT",83,0)
HEADER ;print header information
"RTN","XDRCNT",84,0)
 N DIR,X,Y
"RTN","XDRCNT",85,0)
 I 'XDRCNT("PG") G HEADER1
"RTN","XDRCNT",86,0)
 I $E(IOST)="C",IO=IO(0) W ! S DIR(0)="EO" D ^DIR K DIR I Y=0!(Y="^")!($D(DTOUT)) S XDRCNT("QUIT")="" Q
"RTN","XDRCNT",87,0)
HEADER1 ;
"RTN","XDRCNT",88,0)
 W:$D(IOF) @IOF S XDRCNT("PG")=XDRCNT("PG")+1
"RTN","XDRCNT",89,0)
 W !?3,$P(^DIC(4,DUZ(2),0),U) S Y=DT D DD^%DT W ?50,Y,?70,"Page ",XDRCNT("PG"),?78,!
"RTN","XDRCNT",90,0)
 W !?12,"TALLY OF DUPLICATE RECORDS' STATUS/MERGE STATUS FIELDS"
"RTN","XDRCNT",91,0)
 S XDRCNT("LENG")=7+$L(XDRD(0,0))
"RTN","XDRCNT",92,0)
 W !?((80-XDRCNT("LENG"))/2),"FILE:  ",XDRD(0,0),?78,!
"RTN","XDRCNT",93,0)
 W !,$TR($J("",80)," ","-")
"RTN","XDRCNT",94,0)
 Q
"RTN","XDRCNT",95,0)
INFORM ;inform user
"RTN","XDRCNT",96,0)
 W !!,"This report will tally the Status and Merge Status fields for all",!,"entries in the Duplicate record file for the file that you select.",!
"RTN","XDRCNT",97,0)
 Q
"RTN","XDRDADDS")
0^1^B13998263^n/a
"RTN","XDRDADDS",1,0)
XDRDADDS ;SF-IRMFO/TKW -  SILENT API TO ADD POTENTIAL DUPLICATE PAIR TO FILE 15 ;9/22/08  11:27
"RTN","XDRDADDS",2,0)
 ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5
"RTN","XDRDADDS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","XDRDADDS",4,0)
ADD(XDRSLT,XDRFL,XDRFR,XDRTO) ; Add a pair to the DUPLICATE RECORD file (#15)
"RTN","XDRDADDS",5,0)
 ; Called from REMOTE PROCEDURE - XDR ADD POTENTIAL PATIENT DUPS
"RTN","XDRDADDS",6,0)
 ;  XDRSLT = OUTPUT results.
"RTN","XDRDADDS",7,0)
 ;    set to DFN in file 15 if add was successful, -1^ERRMSG if error
"RTN","XDRDADDS",8,0)
 ;  XDRFL = File number where duplicate records reside. If not passed, defaults to PATIENT file.
"RTN","XDRDADDS",9,0)
 ;  XDRFR = From entry IEN (DFN if PATIENT file entry)
"RTN","XDRDADDS",10,0)
 ;  XDRTO = To entry IEN (DFN if PATIENT file entry)
"RTN","XDRDADDS",11,0)
 ;  
"RTN","XDRDADDS",12,0)
 K XDRSLT
"RTN","XDRDADDS",13,0)
 N XDRGBL,XDRPN1,XDRPN2,XDRI,XDRREC1,XDRREC2,XDRFDA,XDRIEN,XDRPN1,XDRPN2
"RTN","XDRDADDS",14,0)
 N XDRSSN1,XDRSSN2,X,X1,X2,X3,I
"RTN","XDRDADDS",15,0)
 ; Default file is PATIENT file.
"RTN","XDRDADDS",16,0)
 S XDRFL=+$G(XDRFL)
"RTN","XDRDADDS",17,0)
 S:'XDRFL XDRFL=2
"RTN","XDRDADDS",18,0)
 S XDRGBL=$G(^DIC(XDRFL,0,"GL"))
"RTN","XDRDADDS",19,0)
 I (XDRGBL="")!($G(^VA(15.1,XDRFL,0))="") D  Q
"RTN","XDRDADDS",20,0)
 . S XDRSLT="-1^File number parameter missing or invalid" Q
"RTN","XDRDADDS",21,0)
 ; Check IENs to make sure they're valid
"RTN","XDRDADDS",22,0)
 S XDRFR=+$G(XDRFR),XDRTO=+$G(XDRTO)
"RTN","XDRDADDS",23,0)
 S XDRPN1=$P($G(@(XDRGBL_XDRFR_",0)")),U)
"RTN","XDRDADDS",24,0)
 I XDRPN1="" D  Q
"RTN","XDRDADDS",25,0)
 . S XDRSLT="-1^First IEN input parameter invalid" Q
"RTN","XDRDADDS",26,0)
 S XDRPN2=$P($G(@(XDRGBL_XDRTO_",0)")),U)
"RTN","XDRDADDS",27,0)
 I XDRPN2="" D  Q
"RTN","XDRDADDS",28,0)
 . S XDRSLT="-1^Second IEN input parameter invalid" Q
"RTN","XDRDADDS",29,0)
 ; If From and To Record pair are already on the Duplicate Record File save IEN and quit.
"RTN","XDRDADDS",30,0)
 S XDRSLT=0
"RTN","XDRDADDS",31,0)
 S XDRREC1=XDRFR_";"_$P(XDRGBL,U,2)
"RTN","XDRDADDS",32,0)
 S XDRREC2=XDRTO_";"_$P(XDRGBL,U,2)
"RTN","XDRDADDS",33,0)
 S X1=XDRREC1_U_XDRREC2,X2=XDRREC2_U_XDRREC1
"RTN","XDRDADDS",34,0)
 F I=0:0 S I=$O(^VA(15,"B",XDRREC1,I)) Q:I'>0  D  Q:XDRSLT
"RTN","XDRDADDS",35,0)
 . S X3=$P($G(^VA(15,I,0)),U,1,2)
"RTN","XDRDADDS",36,0)
 . I X3'=X1,X3'=X2 Q
"RTN","XDRDADDS",37,0)
 . S XDRSLT=I
"RTN","XDRDADDS",38,0)
 . Q
"RTN","XDRDADDS",39,0)
 Q:XDRSLT
"RTN","XDRDADDS",40,0)
 ; If patients, get SSN
"RTN","XDRDADDS",41,0)
 S (XDRSSN1,XDRSSN2)=""
"RTN","XDRDADDS",42,0)
 I XDRFL=2 D
"RTN","XDRDADDS",43,0)
 . S X=$$GET1^DIQ(2,XDRFR_",",.09) S:X]"" XDRSSN1=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,9)
"RTN","XDRDADDS",44,0)
 . S X=$$GET1^DIQ(2,XDRTO_",",.09) S:X]"" XDRSSN2=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,9)
"RTN","XDRDADDS",45,0)
 . Q
"RTN","XDRDADDS",46,0)
 ; Add new record to DUPLICATE RECORD file.
"RTN","XDRDADDS",47,0)
 K XDRFDA,XDRIEN
"RTN","XDRDADDS",48,0)
 S XDRFDA(15,"+1,",.01)=XDRREC1
"RTN","XDRDADDS",49,0)
 S XDRFDA(15,"+1,",.02)=XDRREC2
"RTN","XDRDADDS",50,0)
 S XDRFDA(15,"+1,",.03)="P"
"RTN","XDRDADDS",51,0)
 S XDRFDA(15,"+1,",.06)=DT
"RTN","XDRDADDS",52,0)
 S XDRFDA(15,"+1,",.09)=.5
"RTN","XDRDADDS",53,0)
 F I=.15,.16,.17,.18,.19 S XDRFDA(15,"+1,",I)=0
"RTN","XDRDADDS",54,0)
 D UPDATE^DIE("","XDRFDA","XDRIEN")
"RTN","XDRDADDS",55,0)
 S I=+$O(XDRIEN(0)),I=$G(XDRIEN(I))
"RTN","XDRDADDS",56,0)
 I 'I D  Q
"RTN","XDRDADDS",57,0)
 . S XDRSLT="-1^Error adding record to DUPLICATE RECORD file" Q
"RTN","XDRDADDS",58,0)
 S XDRSLT=I
"RTN","XDRDADDS",59,0)
 ; Send a notice to the DUPLICATE MANAGER MAIL GROUP if the
"RTN","XDRDADDS",60,0)
 ; SEND NEW DUP REC EMAIL field is not set to 1 (suppress). (XT*7.3*113)
"RTN","XDRDADDS",61,0)
 S X=$$GET1^DIQ(15.1,XDRFL_",",99,"I")
"RTN","XDRDADDS",62,0)
 Q:X=1
"RTN","XDRDADDS",63,0)
 D SENDMSG(XDRFL,XDRFR,XDRPN1,XDRSSN1,XDRTO,XDRPN2,XDRSSN2,XDRSLT)
"RTN","XDRDADDS",64,0)
 Q
"RTN","XDRDADDS",65,0)
 ;
"RTN","XDRDADDS",66,0)
SENDMSG(XDRFL,XDRFR,XDRPN1,XDRSSN1,XDRTO,XDRPN2,XDRSSN2,XDRNEWR) ; Send email message
"RTN","XDRDADDS",67,0)
 N XDRGRP,XDRGRPN,XMY,XMTEXT,XMSUB,XMDUZ,XMDUN,XMZ,X,R
"RTN","XDRDADDS",68,0)
 ; Find DUPLICATE MANAGER MAIL GROUP on DUPLICATE RESOLUTION file.
"RTN","XDRDADDS",69,0)
 S XDRGRP=$$GET1^DIQ(15.1,"2,",.11,"I")
"RTN","XDRDADDS",70,0)
 S XDRGRPN=""
"RTN","XDRDADDS",71,0)
 S:XDRGRP>0 XDRGRPN=$$GET1^DIQ(3.8,XDRGRP,.01)
"RTN","XDRDADDS",72,0)
 I XDRGRPN]"" S XMY("G."_XDRGRPN)=""
"RTN","XDRDADDS",73,0)
 E  S XMY(.5)="" ;If no mail grp found, send msg to postmaster
"RTN","XDRDADDS",74,0)
 S X="PATIENT" S:XDRFL'=2 X=$P($G(^DIC(XDRFL,0)),U)
"RTN","XDRDADDS",75,0)
 ; Build mail message
"RTN","XDRDADDS",76,0)
 S R(1)="The following two "_X_" records have been found to be potential duplicates"
"RTN","XDRDADDS",77,0)
 S R(2)="by the MPI matching algorithm. These records have been added to the local"
"RTN","XDRDADDS",78,0)
 S R(3)="DUPLICATE RECORD file and assigned record number "_XDRNEWR_"."
"RTN","XDRDADDS",79,0)
 S R(4)="Please review these records to verify whether they are duplicates"
"RTN","XDRDADDS",80,0)
 S R(5)="and if so merge using the DUPLICATE RECORD MERGE software."
"RTN","XDRDADDS",81,0)
 S R(6)=""
"RTN","XDRDADDS",82,0)
 S R(7)="  "_X_" 1: "_XDRPN1_"  "_XDRSSN1_"  (IEN #"_XDRFR_")"
"RTN","XDRDADDS",83,0)
 S R(8)="  "_X_" 2: "_XDRPN2_"  "_XDRSSN2_"  (IEN #"_XDRTO_")"
"RTN","XDRDADDS",84,0)
 S XMTEXT="R(",XMSUB="Potential Duplicate "_X_" records found by MPI",XMDUZ=.5
"RTN","XDRDADDS",85,0)
 D ^XMD
"RTN","XDRDADDS",86,0)
 Q
"RTN","XDRDADDS",87,0)
 ;
"RTN","XDRDADDS",88,0)
 ;
"RTN","XDRDCOMP")
0^5^B12808569^B11858573
"RTN","XDRDCOMP",1,0)
XDRDCOMP ;SF-IRMFO/IHS/OHPRD/JCM - COMPARE TWO PATIENTS VIA DUP CHECKER ;8/28/08  17:58
"RTN","XDRDCOMP",2,0)
 ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5
"RTN","XDRDCOMP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRDCOMP",4,0)
 ;;
"RTN","XDRDCOMP",5,0)
 ; This routine will compare two records (patients), and will result with
"RTN","XDRDCOMP",6,0)
 ; a score (0 - 100%) as to how they match up.  You can not compare the
"RTN","XDRDCOMP",7,0)
 ; same record.
"RTN","XDRDCOMP",8,0)
 ;
"RTN","XDRDCOMP",9,0)
 ; *** NOTE *** As of patch XT*7.3*113, this routine is no longer
"RTN","XDRDCOMP",10,0)
 ; available for use on the PATIENT file. *****
"RTN","XDRDCOMP",11,0)
 ;
"RTN","XDRDCOMP",12,0)
START ;
"RTN","XDRDCOMP",13,0)
 S XDRQFLG=0
"RTN","XDRDCOMP",14,0)
 ; XT*7.3*113 - Input param to FILE^XDRDPICK makes PATIENT file unselectable.
"RTN","XDRDCOMP",15,0)
 S XDRFL=$$FILE^XDRDPICK(1) Q:XDRFL'>0
"RTN","XDRDCOMP",16,0)
 G:XDRQFLG END
"RTN","XDRDCOMP",17,0)
 S XDRGL=^DIC(XDRFL,0,"GL")
"RTN","XDRDCOMP",18,0)
 S XDRDTYPE="BASIC" ; ADDED 4/11/96  JLI
"RTN","XDRDCOMP",19,0)
 D LKUP G:XDRQFLG END
"RTN","XDRDCOMP",20,0)
 S %ZIS="Q" D ^%ZIS G:POP END
"RTN","XDRDCOMP",21,0)
 S (IOP,XDRDCOMP("DEVICE"))=ION_";"_IOM_";"_IOSL
"RTN","XDRDCOMP",22,0)
 I $D(IO("Q")) D  G:XDRQFLG END
"RTN","XDRDCOMP",23,0)
 .S ZTRTN="DQ^XDRDCOMP",ZTIO=ION,ZTDESC=$P(^DIC(XDRFL,0),U)_" COMPARISON LIST"
"RTN","XDRDCOMP",24,0)
 .F %="XDRCD","XDRCD2","XDRFL","XDRDTYPE","XDRGL","XDRD(","XDRDCOMP(" S ZTSAVE(%)=""
"RTN","XDRDCOMP",25,0)
 .D ^%ZTLOAD W:$D(ZTSK) !,"Queued as task "_ZTSK,!
"RTN","XDRDCOMP",26,0)
 .S XDRQFLG=1
"RTN","XDRDCOMP",27,0)
DQ ; Entry Point for Taskman
"RTN","XDRDCOMP",28,0)
 U IO W @IOF
"RTN","XDRDCOMP",29,0)
 D ^XDRDSCOR
"RTN","XDRDCOMP",30,0)
 D ^XDRDUP ;S XDRD("NOADD")="" D ^XDRDUP
"RTN","XDRDCOMP",31,0)
 D DITC
"RTN","XDRDCOMP",32,0)
 D SCORE
"RTN","XDRDCOMP",33,0)
 D ^%ZISC
"RTN","XDRDCOMP",34,0)
END D EOJ
"RTN","XDRDCOMP",35,0)
 Q
"RTN","XDRDCOMP",36,0)
 ;
"RTN","XDRDCOMP",37,0)
LKUP ;Look up both reocord.
"RTN","XDRDCOMP",38,0)
 S DIC=XDRGL,DIC(0)="QEAM"
"RTN","XDRDCOMP",39,0)
 S DIC("A")="COMPARE "_$P(^DIC(XDRFL,0),U)_": "
"RTN","XDRDCOMP",40,0)
 D ^DIC ;W !,"X: ",X,"Y: ",Y
"RTN","XDRDCOMP",41,0)
 I $D(DIRUT)!(Y=-1) K DIC,DA S XDRQFLG=1 G LKUPX
"RTN","XDRDCOMP",42,0)
 S XDRCD=+Y S DIT(1)=+Y
"RTN","XDRDCOMP",43,0)
LKUP2 S DIC("A")="    WITH "_$P(^DIC(XDRFL,0),U)_": "
"RTN","XDRDCOMP",44,0)
 D ^DIC K DIC,DA
"RTN","XDRDCOMP",45,0)
 G:$D(DIRUT)!(Y=-1) LKUP
"RTN","XDRDCOMP",46,0)
 S XDRCD2=+Y S DIT(2)=+Y
"RTN","XDRDCOMP",47,0)
 I XDRCD=XDRCD2 W *7,!!,"    CAN NOT COMPARE SAME PATIENT!!  ",!! G LKUP
"RTN","XDRDCOMP",48,0)
LKUPX Q
"RTN","XDRDCOMP",49,0)
 ;
"RTN","XDRDCOMP",50,0)
DITC ;
"RTN","XDRDCOMP",51,0)
 D SHOW^XDRDSHOW(XDRFL,XDRCD,XDRCD2)
"RTN","XDRDCOMP",52,0)
 ;S DFF=XDRFL,DIC=XDRGL,DIT(1)=XDRCD,DIT(2)=XDRCD2,DDIF=2
"RTN","XDRDCOMP",53,0)
 ;S IOP=XDRDCOMP("DEVICE")
"RTN","XDRDCOMP",54,0)
 ;D EN^DITC K DIC,DFF,DIT,IOP,DDIF
"RTN","XDRDCOMP",55,0)
 Q
"RTN","XDRDCOMP",56,0)
SCORE ;
"RTN","XDRDCOMP",57,0)
 S:XDRDSCOR("MAX")>0 XDRD("DUPSCORE%")=XDRD("DUPSCORE")/XDRDSCOR("MAX")
"RTN","XDRDCOMP",58,0)
 S:XDRDSCOR("MAX")=0 XDRD("DUPSCORE%")=0
"RTN","XDRDCOMP",59,0)
 S XDRD("DUPSCORE%")=$J(XDRD("DUPSCORE%"),1,2)
"RTN","XDRDCOMP",60,0)
 S XDRD("DUPSCORE%")=$S(XDRD("DUPSCORE%")<0:0,XDRD("DUPSCORE%")<1:$E(XDRD("DUPSCORE%"),3,4),1:100)
"RTN","XDRDCOMP",61,0)
 ;S IOP=XDRDCOMP("DEVICE") D ^%ZIS U IO
"RTN","XDRDCOMP",62,0)
 W !! F I=0:0 S I=$O(XDRDUP("TEST SCORE",I)) Q:I'>0  I +XDRDUP("TEST SCORE",I)'=0 S J=XDRDTEST(I) W !,$P(J,U),?25,"VALUE = ",$J(XDRDUP("TEST SCORE",I),3,0),"   MAX POSSIBLE = ",$J($P(J,U,6),3,0)
"RTN","XDRDCOMP",63,0)
 W !!,?40,"DUPLICATE THRESHOLD % ",XDRDSCOR("PDT%")
"RTN","XDRDCOMP",64,0)
 W !,?40,"DUPLICATE SCORE % ",$G(XDRD("DUPSCORE%")),!
"RTN","XDRDCOMP",65,0)
 K %,XDRDCNT
"RTN","XDRDCOMP",66,0)
 I '$D(ZTQUEUED),$E(IOST,1,2)'="P-" S DIR(0)="E" D ^DIR K DIR S:X=U XDRQFLG=1
"RTN","XDRDCOMP",67,0)
 ;D ^%ZISC
"RTN","XDRDCOMP",68,0)
 Q
"RTN","XDRDCOMP",69,0)
QUEUE ;** Remove after testing **
"RTN","XDRDCOMP",70,0)
 I '$D(IOP),'$D(XDRDCOMP("DEVICE")) S %ZIS="QMN" D ^%ZIS
"RTN","XDRDCOMP",71,0)
 I POP S XDRQFLG=1 G QUEUEX
"RTN","XDRDCOMP",72,0)
 I $D(IO("Q")),IO=IO(0) W !!,"Sorry, you can't queue to your screen or a slave device.",! K IO("Q") G QUEUE
"RTN","XDRDCOMP",73,0)
 S (IOP,XDRDCOMP("DEVICE"))=ION_";"_IOM_";"_IOSL K %ZIS
"RTN","XDRDCOMP",74,0)
 I '$D(IO("Q")) G QUEUEX
"RTN","XDRDCOMP",75,0)
 S ZTRTN="DQ^XDRDCOMP",ZTIO=ION,ZTDESC=$P(^DIC(XDRFL,0),U)_" COMPARISON LIST"
"RTN","XDRDCOMP",76,0)
 F %="XDRCD","XDRCD2","XDRFL","XDRDTYPE","XDRGL","XDRD(","XDRDCOMP(" S ZTSAVE(%)=""
"RTN","XDRDCOMP",77,0)
 K %
"RTN","XDRDCOMP",78,0)
 ;S XYY=AAA ***************************
"RTN","XDRDCOMP",79,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"Queued as task "_ZTSK,!
"RTN","XDRDCOMP",80,0)
 S XDRQFLG=1
"RTN","XDRDCOMP",81,0)
 K ZTSK
"RTN","XDRDCOMP",82,0)
QUEUEX Q
"RTN","XDRDCOMP",83,0)
 ;
"RTN","XDRDCOMP",84,0)
EOJ ;
"RTN","XDRDCOMP",85,0)
 K XDRDCOMP,XDRDUP,XDRD,XDRFL,XDRGL,XDRQFLG,XDRDTEST,XDRDSCOR
"RTN","XDRDCOMP",86,0)
 K XDRCD,XDRCD2,%IS,POP,IO("C"),IOP,IO("Q"),X,Y,ZTSK
"RTN","XDRDCOMP",87,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XDRDCOMP",88,0)
 Q
"RTN","XDRDEDT")
0^2^B33732705^B30537900
"RTN","XDRDEDT",1,0)
XDRDEDT ;SF-IRMFO/REM - EDIT STATUS FIELD IN FILE 15 ;10/10/08  13:38
"RTN","XDRDEDT",2,0)
 ;;7.3;TOOLKIT;**23,43,113**;Apr 25, 1995;Build 5
"RTN","XDRDEDT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRDEDT",4,0)
EN ;;
"RTN","XDRDEDT",5,0)
 N XDRFIL,X,X1,X2,N1,N2,XDRDELET,XDROSTAT
"RTN","XDRDEDT",6,0)
EN2 K DIE,DIC
"RTN","XDRDEDT",7,0)
 S XDRFIL=$$FILE^XDRDPICK() Q:XDRFIL'>0  S XDRGLB=$G(^DIC(XDRFIL,0,"GL")) Q:XDRGLB=""
"RTN","XDRDEDT",8,0)
 F  D  Q:DA'>0
"RTN","XDRDEDT",9,0)
 . S DIC="^VA(15,",DIC(0)="AEQZ",DIC("S")="I $$SCRN^XDRDEDT(+Y,XDRGLB)"
"RTN","XDRDEDT",10,0)
 . S DIC("A")="Select an Entry to "_$S($D(XDRDELET):"DELETE: ",1:"RESET TO POTENTIAL DUPLICATES: ")
"RTN","XDRDEDT",11,0)
 . D ^DIC S DA=+Y Q:DA<0
"RTN","XDRDEDT",12,0)
 . I $P(^VA(15,DA,0),U,4)<2 S X1=+^VA(15,DA,0),X2=+$P(^(0),U,2)
"RTN","XDRDEDT",13,0)
 . E  S X1=+$P(^VA(15,DA,0),U,2),X2=+^(0)
"RTN","XDRDEDT",14,0)
 . S N1=$P(@(XDRGLB_X1_",0)"),U),N2=$P(@(XDRGLB_X2_",0)"),U)
"RTN","XDRDEDT",15,0)
 . S N1=$$PEELNAM(N1),N2=$$PEELNAM(N2)
"RTN","XDRDEDT",16,0)
 . W !!!,"  Duplicate Record File Entry ",DA," for the ",$P(^DIC(XDRFIL,0),U)," FILE"
"RTN","XDRDEDT",17,0)
 . ; XT*7.3*113 changed to call $$GET1^DIQ instead of EN^DIQ
"RTN","XDRDEDT",18,0)
 . S XDROSTAT=$$GET1^DIQ(15,DA_",",.03)
"RTN","XDRDEDT",19,0)
 . W !?10,X1,?20,N1,!?10,X2,?20,N2,!!?10,"Currently listed as ",XDROSTAT,!!
"RTN","XDRDEDT",20,0)
 . S DIR(0)="Y",DIR("A")="Do you really want to "_$S($D(XDRDELET):"DELETE THIS DUPLICATE RECORD ENTRY",1:"RESET to POTENTIAL DUPLICATE"),DIR("B")="NO"
"RTN","XDRDEDT",21,0)
 . D ^DIR Q:Y'>0
"RTN","XDRDEDT",22,0)
 . D NAME(DA)
"RTN","XDRDEDT",23,0)
 . I $D(XDRDELET) D
"RTN","XDRDEDT",24,0)
 . . N DIK
"RTN","XDRDEDT",25,0)
 . . S DIK="^VA(15," D ^DIK
"RTN","XDRDEDT",26,0)
 . I '$D(XDRDELET) D
"RTN","XDRDEDT",27,0)
 . . K DIE S DIE="^VA(15,",DR=".03///P;.04///@;.05///@;.07///@;.08///@;.1///@;.13///@;.14///@;" D ^DIE K DIE
"RTN","XDRDEDT",28,0)
 . . S:$D(DUZ) $P(^VA(15,DA,0),U,12)=DUZ
"RTN","XDRDEDT",29,0)
 . . K ^VA(15,DA,2)
"RTN","XDRDEDT",30,0)
 . . K ^VA(15,DA,3)
"RTN","XDRDEDT",31,0)
 . W !!,"   ",$S($D(XDRDELET):"Entry DELETED!",1:"Status RESET to POTENTIAL DUPLICATE RECORD."),!!,*7
"RTN","XDRDEDT",32,0)
 . ; If PATIENT and previous status was VERIFIED, NOT A DUPLICATE, inactivate entry
"RTN","XDRDEDT",33,0)
 . ; on the MPI DO NOT LINK file 985.28. - (new with XT*7.3*113)
"RTN","XDRDEDT",34,0)
 . I XDROSTAT'="VERIFIED, NOT A DUPLICATE" Q
"RTN","XDRDEDT",35,0)
 . Q:XDRFIL'=2
"RTN","XDRDEDT",36,0)
 . ; Quit if routine ^MPIFDNL is not loaded
"RTN","XDRDEDT",37,0)
 . S X="MPIFDNL" X ^%ZOSF("TEST") Q:'$T
"RTN","XDRDEDT",38,0)
 . S X=^VA(15,DA,0)
"RTN","XDRDEDT",39,0)
 . D CALLRPC^MPIFDNL(DUZ,DUZ(2),+X,+$P(X,U,2),1)
"RTN","XDRDEDT",40,0)
 . Q
"RTN","XDRDEDT",41,0)
 K DA,DR,DIC,DIE
"RTN","XDRDEDT",42,0)
 Q
"RTN","XDRDEDT",43,0)
SCRN(DA,GLOBAL) ;Screen for verified dup. or verified not dup.
"RTN","XDRDEDT",44,0)
 I $P(^(0),U,5)>1 Q 0 ; But don't take merged or merge in progress!
"RTN","XDRDEDT",45,0)
 I '$D(XDRDELET),$P(^(0),U,3)="P"!($P(^(0),U,3)="O") Q 0 ; DON'T NEED TO SET BACK
"RTN","XDRDEDT",46,0)
 I (U_$P($P(^(0),U),";",2))'=GLOBAL Q 0 ; Take only the specified file
"RTN","XDRDEDT",47,0)
 ;I $P(^(0),U,3)="V" Q 1
"RTN","XDRDEDT",48,0)
 ;I $P(^(0),U,3)="N" Q 1
"RTN","XDRDEDT",49,0)
 Q 1
"RTN","XDRDEDT",50,0)
 ;
"RTN","XDRDEDT",51,0)
NAME(DA) ;
"RTN","XDRDEDT",52,0)
 N X,X1,X2,N,N1,N2
"RTN","XDRDEDT",53,0)
 S X=^VA(15,DA,0),X1=+X,X2=+$P(X,U,2),X=$P($P(X,U),";",2)
"RTN","XDRDEDT",54,0)
 S N1=$P($G(@(U_X_X1_",0)")),U)
"RTN","XDRDEDT",55,0)
 S N2=$P($G(@(U_X_X2_",0)")),U)
"RTN","XDRDEDT",56,0)
 S N=$$PEELNAM(N1)
"RTN","XDRDEDT",57,0)
 I N'=N1 S $P(@(U_X_X1_",0)"),U)=N
"RTN","XDRDEDT",58,0)
 S N=$$PEELNAM(N2)
"RTN","XDRDEDT",59,0)
 I N'=N2 S $P(@(U_X_X2_",0)"),U)=N
"RTN","XDRDEDT",60,0)
 Q
"RTN","XDRDEDT",61,0)
PEELNAM(NAME) ;
"RTN","XDRDEDT",62,0)
 F  Q:NAME'["MERGING INTO"  S NAME=$P($P(NAME,"(",2,10),")",1,$L(NAME,")")-1)
"RTN","XDRDEDT",63,0)
 Q NAME
"RTN","XDRDEDT",64,0)
 ;
"RTN","XDRDEDT",65,0)
DELETE ;
"RTN","XDRDEDT",66,0)
 N XDRFIL,X,X1,X2,N1,N2,XDRDELET
"RTN","XDRDEDT",67,0)
 S XDRDELET=1
"RTN","XDRDEDT",68,0)
 D EN2
"RTN","XDRDEDT",69,0)
 Q
"RTN","XDRDEDT",70,0)
 ;
"RTN","XDRDEDT",71,0)
LOOKUP(FILE) ; FIND PAIRS IN DUPLICATE RECORD FILE
"RTN","XDRDEDT",72,0)
 N FILENAM,NAME,NAME1,NAME2,NAMEA,XDRDIC,DIR,Y,I,J,XDR1,IEN,N,X,FILID,IEN1
"RTN","XDRDEDT",73,0)
 S FILENAM=$P(^DIC(FILE,0),U) I FILENAM="" G NOFILE
"RTN","XDRDEDT",74,0)
 S XDRDIC=$G(^DIC(FILE,0,"GL")) I XDRDIC="" G NOFILE
"RTN","XDRDEDT",75,0)
 S XDRDIC=";"_$E(XDRDIC,2,99)
"RTN","XDRDEDT",76,0)
 ;
"RTN","XDRDEDT",77,0)
LOOK1 K DIR S DIR("A")="Select "_FILENAM,DIR(0)="FO^2" D ^DIR K DIR ; GET PART OF A NAME
"RTN","XDRDEDT",78,0)
 I X="" Q -1
"RTN","XDRDEDT",79,0)
 I $D(DIRUT)!(Y="^") Q -1
"RTN","XDRDEDT",80,0)
 ;
"RTN","XDRDEDT",81,0)
 ; GET A LIST OF NAMES IN THE FILE STARTING WITH THE USERS INPUT AND WHICH HAVE AN IEN THAT IS
"RTN","XDRDEDT",82,0)
 ; IN THE DUPLICATE RECORD FILE
"RTN","XDRDEDT",83,0)
 ;
"RTN","XDRDEDT",84,0)
 S NAME=$NA(^TMP($J,"XDRLIST")) K @NAME
"RTN","XDRDEDT",85,0)
 D FIND^DIC(FILE,"","","",X,"","B^BS5^SSN","I $D(^VA(15,""B"",(Y_XDRDIC)))","",NAME)
"RTN","XDRDEDT",86,0)
 ;
"RTN","XDRDEDT",87,0)
 S NAME1=$NA(@NAME@("DILIST"))
"RTN","XDRDEDT",88,0)
 ;
"RTN","XDRDEDT",89,0)
 ; NOW GO THROUGH THE LIST OF MATCHING NAMES AND CHECK FOR THOSE WHICH HAVE THE DESIRED STATUS
"RTN","XDRDEDT",90,0)
 ;    USE THE DATA UNDER THE 2 NODE WHICH IS THE IEN
"RTN","XDRDEDT",91,0)
 ;
"RTN","XDRDEDT",92,0)
 F I=0:0 S I=$O(@NAME1@(2,I)) Q:I'>0  S IEN=^(I) D
"RTN","XDRDEDT",93,0)
 . S XDR1=IEN_XDRDIC
"RTN","XDRDEDT",94,0)
 . F J=0:0 S J=$O(^VA(15,"B",XDR1,J)) Q:J'>0  I $P(^VA(15,J,0),U,3)="P" Q
"RTN","XDRDEDT",95,0)
 . ; IF NOT AT LEAST ONE WITH THE DESIRED STATUS, THEN REMOVE IT FROM THE ARRAY
"RTN","XDRDEDT",96,0)
 . I J'>0 F J=1,2,"ID" K @NAME1@(J,I)
"RTN","XDRDEDT",97,0)
 . Q
"RTN","XDRDEDT",98,0)
 ;
"RTN","XDRDEDT",99,0)
 S J=$O(@NAME1@(2,0)) I J'>0 G NONAME
"RTN","XDRDEDT",100,0)
 ;
"RTN","XDRDEDT",101,0)
 S NAME2=$NA(^TMP($J,"XDRLI1")) K @NAME2
"RTN","XDRDEDT",102,0)
 S N=0 F I=0:0 S I=$O(@NAME1@(1,I)) Q:I'>0  D
"RTN","XDRDEDT",103,0)
 . S N=N+1
"RTN","XDRDEDT",104,0)
 . S X=@NAME1@(1,I)_" [ien="_@NAME1@(2,I)_"]" F J=0:0 S J=$O(@NAME1@("ID",I,J)) Q:J'>0  S FILID(J)="" S X=X_"  "_@NAME1@("ID",I,J)
"RTN","XDRDEDT",105,0)
 . S @NAME2@(N)=X,@NAME2@(N,"IEN")=@NAME1@(2,I)
"RTN","XDRDEDT",106,0)
 S X=$$ASK(NAME2) I X'>0 G NONAME
"RTN","XDRDEDT",107,0)
 I N>1 W @NAME2@(X)
"RTN","XDRDEDT",108,0)
 S IEN1=@NAME2@(X,"IEN")_XDRDIC K @NAME2,@NAME
"RTN","XDRDEDT",109,0)
 S X=$$PAIR(IEN1,"FILID") I X'>0 G NONAME
"RTN","XDRDEDT",110,0)
 Q X
"RTN","XDRDEDT",111,0)
 ;
"RTN","XDRDEDT",112,0)
PAIR(IENDIC,IDARR) ;
"RTN","XDRDEDT",113,0)
 N FILE,IEN,NAME,XDRN,IEN2,XDRX1,XDRJ,XDRX
"RTN","XDRDEDT",114,0)
 S NAME=$NA(^TMP($J,"XDRPAIR")) K @NAME
"RTN","XDRDEDT",115,0)
 S FILE=+$P(@(U_$P(IENDIC,";",2)_"0)"),U,2),XDRN=0
"RTN","XDRDEDT",116,0)
 F IEN=0:0 S IEN=$O(^VA(15,"B",IENDIC,IEN)) Q:IEN'>0  I $P(^VA(15,IEN,0),U,3)="P" D
"RTN","XDRDEDT",117,0)
 . S XDRN=XDRN+1
"RTN","XDRDEDT",118,0)
 . S XDRX=^VA(15,IEN,0)
"RTN","XDRDEDT",119,0)
 . S IEN2=$P(XDRX,U) I IEN2=IENDIC S IEN2=$P(XDRX,U,2)
"RTN","XDRDEDT",120,0)
 . S IEN2=+IEN2,IENS=IEN2_","
"RTN","XDRDEDT",121,0)
 . S XDRX1=$$GET1^DIQ(FILE,IENS,.01)_" [iens="_IEN2_"]"
"RTN","XDRDEDT",122,0)
 . F XDRJ=0:0 S XDRJ=$O(@IDARR@(XDRJ)) Q:XDRJ'>0  S XDRX1=XDRX1_"  "_$$GET1^DIQ(FILE,IENS,XDRJ)
"RTN","XDRDEDT",123,0)
 . S @NAME@(XDRN)=XDRX1,@NAME@(XDRN,"IEN")=IEN
"RTN","XDRDEDT",124,0)
 I XDRN>1 W !!,"This entry is paired with more than one other record.",!,"Select which pair from the following list:",!
"RTN","XDRDEDT",125,0)
 S XDRX=$$ASK(NAME) I XDRX>0 S XDRX=@NAME@(XDRX,"IEN")
"RTN","XDRDEDT",126,0)
 K @NAME
"RTN","XDRDEDT",127,0)
 Q XDRX
"RTN","XDRDEDT",128,0)
 ;
"RTN","XDRDEDT",129,0)
ASK(ARRAY) ;
"RTN","XDRDEDT",130,0)
 N N,I,N1,NCHOICE
"RTN","XDRDEDT",131,0)
 W !
"RTN","XDRDEDT",132,0)
 S N=0 F I=0:0 S I=$O(@ARRAY@(I)) Q:I'>0  S N=N+1
"RTN","XDRDEDT",133,0)
 I N'>1 S I=+$O(@ARRAY@(0)) W:I>0 @ARRAY@(I) Q I
"RTN","XDRDEDT",134,0)
 I N>5 W "There are "_N_" choices.",!!
"RTN","XDRDEDT",135,0)
 S N1=0,NCHOICE=0
"RTN","XDRDEDT",136,0)
 F I=0:0 S I=$O(@ARRAY@(I)) Q:I'>0  S N1=N1+1 W !,N1,".  ",@ARRAY@(I) I '(N1#5) S NCHOICE=$$ASKEM(N1,N) Q:NCHOICE  Q:$D(DIRUT)
"RTN","XDRDEDT",137,0)
 I 'NCHOICE,'$D(DIRUT) S NCHOICE=$$ASKEM(N1,N1)
"RTN","XDRDEDT",138,0)
 Q NCHOICE
"RTN","XDRDEDT",139,0)
 ;
"RTN","XDRDEDT",140,0)
ASKEM(NCUR,NMAX) ;
"RTN","XDRDEDT",141,0)
 N DIR,Y
"RTN","XDRDEDT",142,0)
 W !! I NCUR<NMAX W !,"Choose from 1 to "_NCUR S DIR("A")="Or return to continue: ",DIR(0)="NO^1:"_NCUR
"RTN","XDRDEDT",143,0)
 E  S DIR("A")="Choose from 1 to "_NCUR,DIR(0)="N^1:"_NCUR
"RTN","XDRDEDT",144,0)
 D ^DIR W ! I $D(DIRUT),'$D(DTOUT),'$D(DUOUT) K DIRUT
"RTN","XDRDEDT",145,0)
 Q $S(Y>0:Y,1:0)
"RTN","XDRDEDT",146,0)
 ;
"RTN","XDRDEDT",147,0)
NOFILE ;
"RTN","XDRDEDT",148,0)
 W !,"FILE ",FILE," NOT FOUND",$C(7),!!
"RTN","XDRDEDT",149,0)
 Q -1
"RTN","XDRDEDT",150,0)
 ;
"RTN","XDRDEDT",151,0)
NONAME ;
"RTN","XDRDEDT",152,0)
 W $C(7),"??"
"RTN","XDRDEDT",153,0)
 G LOOK1
"RTN","XDRDEDT",154,0)
 ;
"RTN","XDRDEFLG")
0^11^B1931825^n/a
"RTN","XDRDEFLG",1,0)
XDRDEFLG ;SF-IRMFO/TKW -  SILENT API TO UPDATE THE SUPPRESS NEW DUP EMAIL FLAG ;9/19/08  16:57
"RTN","XDRDEFLG",2,0)
 ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5
"RTN","XDRDEFLG",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","XDRDEFLG",4,0)
EN(XDRSLT,XDRFL,XDRVAL) ; Update the SUPPRESS NEW DUP EMAIL field on record in file #15.1
"RTN","XDRDEFLG",5,0)
 ; Called from REMOTE PROCEDURE - XDR UPD EMAIL FLAG
"RTN","XDRDEFLG",6,0)
 ;  XDRSLT = OUTPUT results.
"RTN","XDRDEFLG",7,0)
 ;    set to 0 if update was successful, -1^ERRMSG if error
"RTN","XDRDEFLG",8,0)
 ;  XDRFL = 'FILE TO BE CHECKED' field value in file 15.1, defaults to PATIENT file.
"RTN","XDRDEFLG",9,0)
 ;  XDRVAL = 0 or 1 (value to set into field)
"RTN","XDRDEFLG",10,0)
 ;
"RTN","XDRDEFLG",11,0)
 K XDRSLT
"RTN","XDRDEFLG",12,0)
 N XDRGBL,XDRFDA
"RTN","XDRDEFLG",13,0)
 ; Default file is PATIENT file.
"RTN","XDRDEFLG",14,0)
 S XDRFL=+$G(XDRFL)
"RTN","XDRDEFLG",15,0)
 S:'XDRFL XDRFL=2
"RTN","XDRDEFLG",16,0)
 ; Check file number input parameter
"RTN","XDRDEFLG",17,0)
 S XDRGBL=$G(^DIC(XDRFL,0,"GL"))
"RTN","XDRDEFLG",18,0)
 I (XDRGBL="")!($G(^VA(15.1,XDRFL,0))="") D  Q
"RTN","XDRDEFLG",19,0)
 . S XDRSLT="-1^File number parameter missing or invalid" Q
"RTN","XDRDEFLG",20,0)
 ; Make sure XDRVAL is set to 0 or 1
"RTN","XDRDEFLG",21,0)
 S XDRVAL=$G(XDRVAL)
"RTN","XDRDEFLG",22,0)
 I XDRVAL'=0,XDRVAL'=1 D  Q
"RTN","XDRDEFLG",23,0)
 . S XDRSLT="-1^Value parameter is invalid, must be set to 0 or 1" Q
"RTN","XDRDEFLG",24,0)
 ; Update SUPPRESS NEW DUP EMAIL field.
"RTN","XDRDEFLG",25,0)
 S XDRFDA(15.1,XDRFL_",",99)=XDRVAL
"RTN","XDRDEFLG",26,0)
 D FILE^DIE("","XDRFDA")
"RTN","XDRDEFLG",27,0)
 I $D(^TMP("DIERR",$J)) D  Q
"RTN","XDRDEFLG",28,0)
 . S XDRSLT="-1^Error updating FIELD 99, FILE 15.1, REC: "_XDRFL_" - "_$G(^TMP("DIERR",$J,1,"TEXT",1))
"RTN","XDRDEFLG",29,0)
 . Q
"RTN","XDRDEFLG",30,0)
 ; Success
"RTN","XDRDEFLG",31,0)
 S XDRSLT=0
"RTN","XDRDEFLG",32,0)
 Q
"RTN","XDRDEFLG",33,0)
 ;
"RTN","XDRDEFLG",34,0)
 ;
"RTN","XDRDFPD")
0^6^B14210534^B13529157
"RTN","XDRDFPD",1,0)
XDRDFPD ;IHS/OHPRD/LAB - find all potential duplicates for an entry in a file ;6/9/08  11:26
"RTN","XDRDFPD",2,0)
 ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5
"RTN","XDRDFPD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRDFPD",4,0)
START ;
"RTN","XDRDFPD",5,0)
INIT ;Initialization
"RTN","XDRDFPD",6,0)
 W !,"This option will collect all Potential Duplicates for an entry in a file.",!,"It will then add any pairs found to the Duplicate Record file.",!
"RTN","XDRDFPD",7,0)
 D PROCESS
"RTN","XDRDFPD",8,0)
 G:XDRQFLG END
"RTN","XDRDFPD",9,0)
 D INFORM
"RTN","XDRDFPD",10,0)
END D EOJ
"RTN","XDRDFPD",11,0)
 Q
"RTN","XDRDFPD",12,0)
PROCESS ;
"RTN","XDRDFPD",13,0)
 K XDRD
"RTN","XDRDFPD",14,0)
 ; Flag XDRNOPT makes FILE^XDRDQUE not allow selection of PATIENT file - XT*7.3*113
"RTN","XDRDFPD",15,0)
 N XDRNOPT S XDRNOPT=1
"RTN","XDRDFPD",16,0)
 S XDRQFLG=0,XDRDTYPE="b"
"RTN","XDRDFPD",17,0)
 S DIC("A")="Find Potential Duplicates for entry in what file: " D FILE^XDRDQUE
"RTN","XDRDFPD",18,0)
 G:XDRQFLG PROCESSX
"RTN","XDRDFPD",19,0)
 D SETUP
"RTN","XDRDFPD",20,0)
 S XDRGL=^DIC(XDRFL,0,"GL")
"RTN","XDRDFPD",21,0)
 I '$D(XDRCD) D LKUP Q:XDRQFLG
"RTN","XDRDFPD",22,0)
 W:'$D(ZTQUEUED) !!,"Hold On... This may take a little while...",!
"RTN","XDRDFPD",23,0)
 ;
"RTN","XDRDFPD",24,0)
 D POSDUPS^XDRDMAIN
"RTN","XDRDFPD",25,0)
 D:$D(^TMP("XDRD",$J,XDRFL)) CHECK
"RTN","XDRDFPD",26,0)
PROCESSX Q
"RTN","XDRDFPD",27,0)
EOJ ;clean up
"RTN","XDRDFPD",28,0)
 K XDRQFLG,XDRD,XDRDSCOR,XDRDTEST,XDRFL,XDRGL,XDRCD,XDRCD2,XDRDCNT,XDRDMAIN,XDRDTYPE,XDRDUP,XDRDFPD
"RTN","XDRDFPD",29,0)
 K ^TMP("XDRD",$J)
"RTN","XDRDFPD",30,0)
 Q
"RTN","XDRDFPD",31,0)
EN ;Entry Point (caller must pass XDRCD,XDRFL)
"RTN","XDRDFPD",32,0)
 I '$D(XDRCD) S XDRERR=15 D ^XDREMSG G ENX
"RTN","XDRDFPD",33,0)
 I '$D(XDRFL) S XDRERR=14 D ^XDREMSG G ENX
"RTN","XDRDFPD",34,0)
 I '$D(^VA(15.1,XDRFL,0)) S XDRERR=6 D ^XDREMSG G ENX
"RTN","XDRDFPD",35,0)
 D PROCESS
"RTN","XDRDFPD",36,0)
ENX ;
"RTN","XDRDFPD",37,0)
 K XDRDFPD,XDRDSCOR,XDRD,XDRDTEST,XDRGL,XDRCD2,XDRDCNT,XDRDMAIN,XDRDTYPE,XDRDUP
"RTN","XDRDFPD",38,0)
 Q
"RTN","XDRDFPD",39,0)
LKUP ;
"RTN","XDRDFPD",40,0)
 S DIC=XDRGL,DIC(0)="AEMQ",DIC("A")="Find Potential Duplicates for "_$P(^DIC(XDRFL,0),U)_":  "
"RTN","XDRDFPD",41,0)
 D ^DIC K DIC,DA
"RTN","XDRDFPD",42,0)
 I Y=-1 S XDRQFLG=1 G LKUPX
"RTN","XDRDFPD",43,0)
 S XDRCD=+Y
"RTN","XDRDFPD",44,0)
LKUPX ;
"RTN","XDRDFPD",45,0)
 Q
"RTN","XDRDFPD",46,0)
SETUP ;
"RTN","XDRDFPD",47,0)
 S XDRD("COLLECTION ROUTINE")=$S($P($P(XDRD(0),U,9),"-",2)]"":$P($P(XDRD(0),U,9),"-")_"^"_$P($P(XDRD(0),U,9),"-",2),1:U_$P(XDRD(0),U,9))
"RTN","XDRDFPD",48,0)
 I '$D(XDRD("DMAILGRP")),$D(XDRD(0)),$P(XDRD(0),U,11),$D(^XMB(3.8,$P(XDRD(0),U,11),1,"B")) F XDRI=0:0 S XDRI=$O(^XMB(3.8,$P(XDRD(0),U,11),1,"B",XDRI)) Q:'XDRI  S XDRD("DMAILGRP",XDRI)=""
"RTN","XDRDFPD",49,0)
 K XDRI
"RTN","XDRDFPD",50,0)
 D ^XDRDSCOR ; Sets up Duplicate Test Scores
"RTN","XDRDFPD",51,0)
SETUPX ;
"RTN","XDRDFPD",52,0)
 Q
"RTN","XDRDFPD",53,0)
CHECK ;check for duplicates and add to Duplicate record file
"RTN","XDRDFPD",54,0)
 F XDRCD2=0:0 S XDRCD2=$O(^TMP("XDRD",$J,XDRFL,XDRCD2)) Q:'XDRCD2!(XDRQFLG)  D CHECK^XDRDMAIN
"RTN","XDRDFPD",55,0)
 Q
"RTN","XDRDFPD",56,0)
INFORM ;
"RTN","XDRDFPD",57,0)
 S XDRDFPD("PAIR")="",%=0 F  S XDRDFPD("PAIR")=$O(^VA(15,"APOT",$P(XDRGL,"^",2),XDRDFPD("PAIR")))  Q:XDRDFPD("PAIR")=""  D
"RTN","XDRDFPD",58,0)
 .I $P(XDRDFPD("PAIR"),U)=XDRCD!($P(XDRDFPD("PAIR"),U,2)=XDRCD) S %=%+1,XDRDFPD("FOUND",%)=XDRDFPD("PAIR")
"RTN","XDRDFPD",59,0)
 .Q
"RTN","XDRDFPD",60,0)
 I '$D(XDRDFPD("FOUND")) W !!,"NO Potential Duplicates were found for ",$P(^DIC(XDRFL,0),U),":  ",$P(@(XDRGL_XDRCD_",0)"),U) Q
"RTN","XDRDFPD",61,0)
 W !!,"The following ",$P(^DIC(XDRFL,0),U)," entry(ies) are now in the Duplicate  ",!,"Record file as Potential Duplicates to ",!,$P(^DIC(XDRFL,0),U),":  ",$P(@(XDRGL_XDRCD_",0)"),U)
"RTN","XDRDFPD",62,0)
 S X="" F  S X=$O(XDRDFPD("FOUND",X)) Q:X=""  D
"RTN","XDRDFPD",63,0)
 .W !?20,$S($P(XDRDFPD("FOUND",X),U)=XDRCD:$P(@(XDRGL_$P(XDRDFPD("FOUND",X),U,2)_",0)"),U),1:$P(@(XDRGL_$P(XDRDFPD("FOUND",X),U)_",0)"),U))
"RTN","XDRDFPD",64,0)
 .Q
"RTN","XDRDFPD",65,0)
 Q
"RTN","XDRDLIST")
0^7^B16235628^B15430835
"RTN","XDRDLIST",1,0)
XDRDLIST ;SF-IRMFO/IHS/OHPRD/JCM - PRINT POTENTIAL AND VERIFIED DUPLICATES;    [ 08/13/92  09:50 AM ] ;8/28/08  18:13
"RTN","XDRDLIST",2,0)
 ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5
"RTN","XDRDLIST",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRDLIST",4,0)
 ;;
"RTN","XDRDLIST",5,0)
 N XDRFL,XDRFLD
"RTN","XDRDLIST",6,0)
START ;
"RTN","XDRDLIST",7,0)
 S XDRQFLG=0
"RTN","XDRDLIST",8,0)
 ; XT*7.3*113 input variable XDRNOPT to FILE^XDRDQUE-if UNDEF, allows PATIENT file to be selected
"RTN","XDRDLIST",9,0)
 N XDRNOPT
"RTN","XDRDLIST",10,0)
 ;W !!,"Choose type of list."
"RTN","XDRDLIST",11,0)
 S DIR("?")="BRIEF prints the fields: RECORD1, RECORD2 and the IEN for each entry.  CAPTIONED is FileMan's CAPTIONED format."
"RTN","XDRDLIST",12,0)
 S DIR("A")="Choose type of list",DIR(0)="SO^1:BRIEF;2:CAPTIONED" D ^DIR K DIR G:$D(DIRUT) END
"RTN","XDRDLIST",13,0)
 S XDRFLD=Y
"RTN","XDRDLIST",14,0)
 I '$D(XDRFL) S DIC("A")="Select File you wish to list for: " D FILE^XDRDQUE G:XDRQFLG END
"RTN","XDRDLIST",15,0)
 D ASK G:XDRQFLG END ; Asks which type of listing you want
"RTN","XDRDLIST",16,0)
 D @$S(XDRDLIST("ASK")=1:"POT",XDRDLIST("ASK")=2:"NOT",XDRDLIST("ASK")=3:"VER",1:"MERGED")
"RTN","XDRDLIST",17,0)
 G:'XDRQFLG START
"RTN","XDRDLIST",18,0)
END D EOJ ; End of job and cleans up variables
"RTN","XDRDLIST",19,0)
 Q  ; End of routine
"RTN","XDRDLIST",20,0)
 ;
"RTN","XDRDLIST",21,0)
ASK ;
"RTN","XDRDLIST",22,0)
 K XDRDLIST("ASK")
"RTN","XDRDLIST",23,0)
 S XDRDLIST("GL")=$S($D(^DIC(XDRFL,0,"GL")):$P(^DIC(XDRFL,0,"GL"),U,2),1:"")
"RTN","XDRDLIST",24,0)
 I XDRDLIST("GL")']"" S XDRQFLG=1 G ASKX
"RTN","XDRDLIST",25,0)
 W !!,"This utility provides reports on verified and unverified potential duplicates."
"RTN","XDRDLIST",26,0)
WHCH S DIR("A")="report",DIR(0)="SO^1:UNVERIFIED potential duplicates;2:NOT READY TO MERGE VERIFIED duplicates;3:READY TO MERGE VERIFIED duplicates;4:MERGED VERIFIED duplicates" D ^DIR K DIR
"RTN","XDRDLIST",27,0)
 I $D(DIRUT) S XDRQFLG=1 G ASKX
"RTN","XDRDLIST",28,0)
 I Y=" " S XDRQFLG=1 G ASKX
"RTN","XDRDLIST",29,0)
 S XDRDLIST("ASK")=$S(Y=1:1,Y=2:2,Y=3:3,1:4)
"RTN","XDRDLIST",30,0)
 I XDRDLIST("ASK")=1,'$D(^VA(15,"APOT",XDRDLIST("GL"))) W !,"There are no unverified potential duplicates at this time.",$C(7) K XDRDLIST("ASK") G WHCH
"RTN","XDRDLIST",31,0)
 I XDRDLIST("ASK")=3,'$D(^VA(15,"AMRG",XDRDLIST("GL"),1)) W !,"There are no READY TO MERGE verified duplicates at this time.",$C(7) K XDRDLIST("ASK") G WHCH
"RTN","XDRDLIST",32,0)
 I XDRDLIST("ASK")=2,'$D(^VA(15,"AMRG",XDRDLIST("GL"),0)) W !,"There are no NOT READY TO MERGE verified duplicates at this time.",$C(7) K XDRDLIST("ASK") G WHCH
"RTN","XDRDLIST",33,0)
 I XDRDLIST("ASK")=4,'$D(^VA(15,"AFR",XDRDLIST("GL"))) W !,"There are no MERGED VERIFIED duplicates at this time.",$C(7) K XDRDLIST("ASK") G WHCH
"RTN","XDRDLIST",34,0)
 ;
"RTN","XDRDLIST",35,0)
ASKX ;
"RTN","XDRDLIST",36,0)
 Q
"RTN","XDRDLIST",37,0)
 ;
"RTN","XDRDLIST",38,0)
POT ;
"RTN","XDRDLIST",39,0)
 S DIC="^VA(15,",L="",FLDS=$S(XDRFLD=1:"[XDR BRIEF LIST]",1:"[CAPTIONED]")
"RTN","XDRDLIST",40,0)
 S BY="[XDR POTENTIAL DUPLICATE LIST]"
"RTN","XDRDLIST",41,0)
 S DIS(0)="I $P($P(^VA(15,D0,0),U),"";"",2)=XDRDLIST(""GL"")"
"RTN","XDRDLIST",42,0)
 S DHD="Unverified Potential Duplicates"
"RTN","XDRDLIST",43,0)
 D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY
"RTN","XDRDLIST",44,0)
 Q
"RTN","XDRDLIST",45,0)
 ;
"RTN","XDRDLIST",46,0)
VER ;
"RTN","XDRDLIST",47,0)
 S DIC="^VA(15,",L="",FLDS=$S(XDRFLD=1:"[XDR BRIEF LIST]",1:"[CAPTIONED]")
"RTN","XDRDLIST",48,0)
 ;S DIC="^VA(15,",L="",FLDS="[CAPTIONED]"
"RTN","XDRDLIST",49,0)
 S BY="[XDR READY TO MERGE LIST]"
"RTN","XDRDLIST",50,0)
 S DIS(0)="I $P($P(^VA(15,D0,0),U),"";"",2)=XDRDLIST(""GL"")"
"RTN","XDRDLIST",51,0)
 S DHD="Verified Duplicates Ready to Merge"
"RTN","XDRDLIST",52,0)
 D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY
"RTN","XDRDLIST",53,0)
 Q
"RTN","XDRDLIST",54,0)
 ;
"RTN","XDRDLIST",55,0)
NOT ;
"RTN","XDRDLIST",56,0)
 S DIC="^VA(15,",L="",FLDS=$S(XDRFLD=1:"[XDR BRIEF LIST]",1:"[CAPTIONED]")
"RTN","XDRDLIST",57,0)
 ;S DIC="^VA(15,",L="",FLDS="[CAPTIONED]"
"RTN","XDRDLIST",58,0)
 S BY="[XDR NOT READY TO MERGE LIST]"
"RTN","XDRDLIST",59,0)
 S DIS(0)="I $P($P(^VA(15,D0,0),U),"";"",2)=XDRDLIST(""GL"")"
"RTN","XDRDLIST",60,0)
 S DHD="Verified Duplicates Not Ready to Merge"
"RTN","XDRDLIST",61,0)
 D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY
"RTN","XDRDLIST",62,0)
 Q
"RTN","XDRDLIST",63,0)
MERGED ;
"RTN","XDRDLIST",64,0)
 S DIC="^VA(15,",L="",FLDS=$S(XDRFLD=1:"[XDR BRIEF LIST]",1:"[XDR MERGED LIST]")
"RTN","XDRDLIST",65,0)
 ;S DIC="^VA(15,",L="",FLDS="[XDR MERGED LIST]"
"RTN","XDRDLIST",66,0)
 S BY="[XDR MERGED LIST]"
"RTN","XDRDLIST",67,0)
 S DIS(0)="I $P($P(^VA(15,D0,0),U),"";"",2)=XDRDLIST(""GL"")"
"RTN","XDRDLIST",68,0)
 S DHD="Verified Duplicates that are Merged"
"RTN","XDRDLIST",69,0)
 D EN1^DIP K DIC,DIS,DHD,L,FLDS,BY
"RTN","XDRDLIST",70,0)
 Q
"RTN","XDRDLIST",71,0)
EOJ ;
"RTN","XDRDLIST",72,0)
 K XDRDLIST,DIRUT,X,Y,DTOUT,DUOUT,XDRD,XDRFL,XDRQFLG
"RTN","XDRDLIST",73,0)
 Q
"RTN","XDRDPICK")
0^3^B86863530^B76108435
"RTN","XDRDPICK",1,0)
XDRDPICK ;SF-IRMFO.SEA/JLI - SELECT A PAIR OF POTENTIAL DUPLICATES AND VIEW ;10/10/08  13:38
"RTN","XDRDPICK",2,0)
 ;;7.3;TOOLKIT;**23,47,113**;Apr 25, 1995;Build 5
"RTN","XDRDPICK",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRDPICK",4,0)
 ;;
"RTN","XDRDPICK",5,0)
EN ;
"RTN","XDRDPICK",6,0)
 N XDRFL,CMORS1,CMORS2,D0,DA,DIC,DIE,DIR,ICNT,ICNT1,JCNT,LCNT,NCNT,PNCT,TMPGLA,TMPGLB,XDRDA,XDRFILN,XDRGLB,Y,PRIFILE
"RTN","XDRDPICK",7,0)
 ; D EN^XDRVCHEK
"RTN","XDRDPICK",8,0)
 S XDRFL=$$FILE() Q:XDRFL'>0  S PRIFILE=XDRFL,XDRGLB=$P(^DIC(XDRFL,0,"GL"),U,2),XDRFILN=$P(^DIC(XDRFL,0),U)
"RTN","XDRDPICK",9,0)
LOOP ;
"RTN","XDRDPICK",10,0)
 W !!!,"At the following prompt select a POTENTIAL DUPLICATE ENTRY.  If a selection"
"RTN","XDRDPICK",11,0)
 W !,"is not made, you will be given a chance to select from a list if you"
"RTN","XDRDPICK",12,0)
 W !,"want to.  Otherwise, you will be returned to the menu system."
"RTN","XDRDPICK",13,0)
 W !
"RTN","XDRDPICK",14,0)
 S Y=$$LOOKUP^XDRDEDT(XDRFL)
"RTN","XDRDPICK",15,0)
 S XDRDA=+Y I Y>0 D SHOW G LOOP
"RTN","XDRDPICK",16,0)
 S DIR(0)="Y"
"RTN","XDRDPICK",17,0)
 S DIR("A")="Do you want to select from a list of potential duplicates"
"RTN","XDRDPICK",18,0)
 S DIR("B")="YES"
"RTN","XDRDPICK",19,0)
 D ^DIR K DIR Q:Y'>0
"RTN","XDRDPICK",20,0)
 S TMPGLB=$NA(^TMP("XDRDPICK",$J)),TMPGLA=$NA(^TMP("XDRDPICA",$J))
"RTN","XDRDPICK",21,0)
 K @TMPGLB,@TMPGLA
"RTN","XDRDPICK",22,0)
 D ASK
"RTN","XDRDPICK",23,0)
 I XDRDA>0 G LOOP
"RTN","XDRDPICK",24,0)
 K PCNT
"RTN","XDRDPICK",25,0)
 Q
"RTN","XDRDPICK",26,0)
 ;
"RTN","XDRDPICK",27,0)
GETLIST ;
"RTN","XDRDPICK",28,0)
 I XDRGLB="DPT(",$O(^DPT("ACMORS",0))>0 D CMORS Q
"RTN","XDRDPICK",29,0)
 N FLG
"RTN","XDRDPICK",30,0)
 F ICNT=ICNT:0 S ICNT=$O(^VA(15,ICNT)) Q:ICNT'>0  S X=^(ICNT,0) D  Q:'(NCNT#4)&(NCNT>0)&FLG
"RTN","XDRDPICK",31,0)
 . S FLG=1 ;This flag is when NCNT is set from previous call and STATUS is not "P" the first time- - so loop will not quit with (NCNT#4)
"RTN","XDRDPICK",32,0)
 . I $P(X,U,3)'="P" S:PCNT=NCNT FLG=0 Q
"RTN","XDRDPICK",33,0)
 . I $P($P(X,U),";",2)'=XDRGLB Q
"RTN","XDRDPICK",34,0)
 . S NCNT=NCNT+1,X1=+$P(X,U),X2=+$P(X,U,2)
"RTN","XDRDPICK",35,0)
 . I '($D(@(U_XDRGLB_X1_",0)"))#2)!'($D(@(U_XDRGLB_X2_",0)"))#2) S NCNT=NCNT-1 Q
"RTN","XDRDPICK",36,0)
 . S @TMPGLB@(NCNT)=ICNT_U_X1_U_X2
"RTN","XDRDPICK",37,0)
 . S @TMPGLB@(NCNT,1)=@(U_XDRGLB_X1_",0)")
"RTN","XDRDPICK",38,0)
 . S @TMPGLB@(NCNT,2)=@(U_XDRGLB_X2_",0)")
"RTN","XDRDPICK",39,0)
 Q
"RTN","XDRDPICK",40,0)
 ;
"RTN","XDRDPICK",41,0)
ASK ;
"RTN","XDRDPICK",42,0)
 S NCNT=0,ICNT=0,ICNT1=0,JCNT=0,XDRDA=0,PCNT=0
"RTN","XDRDPICK",43,0)
 F  D  D CHEK Q:XDRDA'=0  Q:JCNT'>0
"RTN","XDRDPICK",44,0)
 . D GETLIST
"RTN","XDRDPICK",45,0)
 . S PCNT=NCNT
"RTN","XDRDPICK",46,0)
 . F JCNT=JCNT:0 S JCNT=$O(@TMPGLB@(JCNT)) Q:JCNT'>0  D  Q:'(JCNT#4)
"RTN","XDRDPICK",47,0)
 . . W !!!,$J(JCNT,5),".  ",@TMPGLB@(JCNT,1)
"RTN","XDRDPICK",48,0)
 . . W !,?8,@TMPGLB@(JCNT,2)
"RTN","XDRDPICK",49,0)
 I XDRDA>0 S XDRDA=+@TMPGLB@(XDRDA) D SHOW
"RTN","XDRDPICK",50,0)
 Q
"RTN","XDRDPICK",51,0)
 ;
"RTN","XDRDPICK",52,0)
CHEK ;
"RTN","XDRDPICK",53,0)
 W !
"RTN","XDRDPICK",54,0)
 I JCNT'>0 S DIR(0)="N"
"RTN","XDRDPICK",55,0)
 E  S DIR(0)="NO",DIR("A",1)="Enter Return to continue listing or"
"RTN","XDRDPICK",56,0)
 S DIR("A")="Select the desired entry by number"
"RTN","XDRDPICK",57,0)
 S DIR(0)=DIR(0)_"^1:"_NCNT
"RTN","XDRDPICK",58,0)
 D ^DIR K DIR
"RTN","XDRDPICK",59,0)
 I Y>0 S XDRDA=+Y
"RTN","XDRDPICK",60,0)
 I $D(DUOUT)!$D(DTOUT) S XDRDA=-1 K DTOUT,DUOUT
"RTN","XDRDPICK",61,0)
 K DIRUT
"RTN","XDRDPICK",62,0)
 Q
"RTN","XDRDPICK",63,0)
 ;
"RTN","XDRDPICK",64,0)
SHOW ;
"RTN","XDRDPICK",65,0)
 ;L +^VA(15,+XDRDA,0):30 I '$T G BUSY
"RTN","XDRDPICK",66,0)
 ;I $P(^VA(15,+XDRDA,0),U,3)'="P" L -^VA(15,+XDRDA,0) G BUSY ; NOT AVAILABLE
"RTN","XDRDPICK",67,0)
 ;N XDRXX S XDRXX(15,(+XDRDA)_",",.03)="X"
"RTN","XDRDPICK",68,0)
 ;D FILE^DIE("","XDRXX")
"RTN","XDRDPICK",69,0)
 ;L -^VA(15,+XDRDA,0)
"RTN","XDRDPICK",70,0)
 I '$D(XDRGLB) N XDRGLB S XDRGLB=$P($P(^VA(15,XDRDA,0),U),";",2)
"RTN","XDRDPICK",71,0)
 I $D(@(XDRGLB_(+^VA(15,XDRDA,0))_",-9)"))!$D(@(XDRGLB_(+$P(^VA(15,XDRDA,0),U,2))_",-9)")) W !,$C(7),"One of these entries has already been merged.  Pick another pair.",!! D RESET(XDRDA) Q
"RTN","XDRDPICK",72,0)
 S XQAID=""
"RTN","XDRDPICK",73,0)
 S X=^VA(15,+XDRDA,0)
"RTN","XDRDPICK",74,0)
 S X1=+X,X2=+$P(X,U,2)
"RTN","XDRDPICK",75,0)
 I $$COUNT^XDRRMRG2(XDRFL,X1,X2)>1 S X1=X2,X2=+X
"RTN","XDRDPICK",76,0)
 S XQADATA=XDRDA_U_X1_";"_X2_U_"PRIMARY"_U_XDRFL
"RTN","XDRDPICK",77,0)
 D ^XDRRMRG1
"RTN","XDRDPICK",78,0)
 ; If Primary verifier has set status to DUPLICATE, set STATUS at top level
"RTN","XDRDPICK",79,0)
 ; to "X" (VERIFICATION IN PROCESS)
"RTN","XDRDPICK",80,0)
 S DA=$$FIND1^DIC(15.02,","_XDRDA_",","X","PRIMARY")
"RTN","XDRDPICK",81,0)
 I DA>0 D
"RTN","XDRDPICK",82,0)
 . S X=$P(^VA(15,XDRDA,0),U,3)
"RTN","XDRDPICK",83,0)
 . I X="N"!(X="V") Q
"RTN","XDRDPICK",84,0)
 . S X=^VA(15,XDRDA,2,DA,0)
"RTN","XDRDPICK",85,0)
 . I $P(X,U,2)="V" D
"RTN","XDRDPICK",86,0)
 . . S DR=".03///X;.1///"_DT_";"
"RTN","XDRDPICK",87,0)
 . . S DIE="^VA(15,",DA=XDRDA D ^DIE K DIE,DR
"RTN","XDRDPICK",88,0)
 . . D SETUP^XDRRMRG1(XDRDA)
"RTN","XDRDPICK",89,0)
 . . D CHEKVER^XDRRMRG1
"RTN","XDRDPICK",90,0)
 ; If PATIENT, status=VERIFIED, NOT A DUPLICATE, add patients to MPI DO NOT LINK file(new with XT*7.3*113)
"RTN","XDRDPICK",91,0)
 I XDRFL=2,$P(^VA(15,XDRDA,0),U,3)="N" D
"RTN","XDRDPICK",92,0)
 . ;Quit if routine ^MPIFDNL is not loaded
"RTN","XDRDPICK",93,0)
 . S X="MPIFDNL" X ^%ZOSF("TEST") Q:'$T
"RTN","XDRDPICK",94,0)
 . S X=^VA(15,XDRDA,0)
"RTN","XDRDPICK",95,0)
 . D CALLRPC^MPIFDNL(DUZ,DUZ(2),+X,+$P(X,U,2))
"RTN","XDRDPICK",96,0)
 Q
"RTN","XDRDPICK",97,0)
 ;
"RTN","XDRDPICK",98,0)
BUSY ;
"RTN","XDRDPICK",99,0)
 W !!,$C(7),"Record is being processed by someone else.",!!
"RTN","XDRDPICK",100,0)
 Q
"RTN","XDRDPICK",101,0)
 ;
"RTN","XDRDPICK",102,0)
FILE(XDRFLAG) ;
"RTN","XDRDPICK",103,0)
 ; If XDRFLAG=1, option not available to the PATIENT file (#2) (new with XT*7.3*113)
"RTN","XDRDPICK",104,0)
 N X,XDRPT,XDRFLNM
"RTN","XDRDPICK",105,0)
 S (X,XDRPT)=0
"RTN","XDRDPICK",106,0)
 S XDRFLAG=+$G(XDRFLAG)
"RTN","XDRDPICK",107,0)
 I XDRFLAG=1 W !,"* This option is not available for PATIENTS"
"RTN","XDRDPICK",108,0)
 S XDRFLNM=""
"RTN","XDRDPICK",109,0)
 F I=0:0 S I=$O(^VA(15.1,I)) Q:I'>0  D
"RTN","XDRDPICK",110,0)
 . I XDRFLAG=1,I=2 S XDRPT=1 Q
"RTN","XDRDPICK",111,0)
 . S X=X+1,X(I)=""
"RTN","XDRDPICK",112,0)
 . S XDRFLNM=$P($G(^DIC(I,0)),U)
"RTN","XDRDPICK",113,0)
 . Q
"RTN","XDRDPICK",114,0)
 I X=0 Q -1
"RTN","XDRDPICK",115,0)
 I X=1 Q $O(X(""))
"RTN","XDRDPICK",116,0)
 S:'XDRFLAG XDRFLNM="PATIENT"
"RTN","XDRDPICK",117,0)
 K DIC S DIC=15.1,DIC(0)="AEQM"
"RTN","XDRDPICK",118,0)
 S DIC("A")="Which FILE are the potential duplicates in (e.g., "_XDRFLNM_")? "
"RTN","XDRDPICK",119,0)
 S DIC("B")=XDRFLNM
"RTN","XDRDPICK",120,0)
 I XDRFLAG=1 S DIC("S")="I Y'=2"
"RTN","XDRDPICK",121,0)
 D ^DIC K DIC
"RTN","XDRDPICK",122,0)
 Q +Y
"RTN","XDRDPICK",123,0)
 ;
"RTN","XDRDPICK",124,0)
CMORS ; RETURN DATA RANKED BY CMORS (HIGH VALUES FIRST)
"RTN","XDRDPICK",125,0)
 I '$D(^VA(15,"ACMORS")) D SETCMOR
"RTN","XDRDPICK",126,0)
 I $G(^VA(15,"ACMORS",0))'>0 D SETCMOR
"RTN","XDRDPICK",127,0)
 I $G(^VA(15,"ACMORS",0))>0,$$FMDIFF^XLFDT(DT,^(0))>7 D ASKCMOR
"RTN","XDRDPICK",128,0)
 I ICNT1>0 S ICNT=ICNT-1
"RTN","XDRDPICK",129,0)
 S LCNT=0
"RTN","XDRDPICK",130,0)
 F ICNT=ICNT:0 S ICNT=$O(^VA(15,"ACMORS",ICNT)) Q:ICNT'>0  D  Q:('(NCNT#4))&(LCNT>0)
"RTN","XDRDPICK",131,0)
 . F ICNT1=+ICNT1:0 S ICNT1=$O(^VA(15,"ACMORS",ICNT,ICNT1)) Q:ICNT1'>0  D  Q:('(NCNT#4))&(LCNT>0)
"RTN","XDRDPICK",132,0)
 . . S X=$G(^VA(15,ICNT1,0)) Q:X=""  Q:$P(X,U,3)'="P"  S X1=+X,X2=+$P(X,U,2)
"RTN","XDRDPICK",133,0)
 . . I $D(@TMPGLA@(X1,X2)) Q
"RTN","XDRDPICK",134,0)
 . . S @TMPGLA@(X1,X2)=""
"RTN","XDRDPICK",135,0)
 . . S NCNT=NCNT+1,LCNT=LCNT+1
"RTN","XDRDPICK",136,0)
 . . S @TMPGLB@(NCNT)=ICNT1_U_X1_U_X2
"RTN","XDRDPICK",137,0)
 . . S CMORS1=$P($G(^DPT(X1,"MPI")),U,6),CMORS2=$P($G(^DPT(X2,"MPI")),U,6)
"RTN","XDRDPICK",138,0)
 . . S @TMPGLB@(NCNT,1)=@(U_XDRGLB_X1_",0)")_" (CMOR SCORE = "_$S(CMORS1="":"NULL",1:CMORS1)_")"
"RTN","XDRDPICK",139,0)
 . . S @TMPGLB@(NCNT,2)=@(U_XDRGLB_X2_",0)")_" (CMOR SCORE = "_$S(CMORS2="":"NULL",1:CMORS2)_")"
"RTN","XDRDPICK",140,0)
 Q
"RTN","XDRDPICK",141,0)
 ;
"RTN","XDRDPICK",142,0)
SETCMOR ;
"RTN","XDRDPICK",143,0)
 N I,X,X1,X2,SCOR
"RTN","XDRDPICK",144,0)
 K ^VA(15,"ACMORS")
"RTN","XDRDPICK",145,0)
 F I=0:0 S I=$O(^VA(15,I)) Q:I'>0  S X=^(I,0) D
"RTN","XDRDPICK",146,0)
 . I $P(X,U,3)'="P" Q
"RTN","XDRDPICK",147,0)
 . I $P($P(X,U),";",2)'="DPT(" Q
"RTN","XDRDPICK",148,0)
 . S X1=+X,X2=+$P(X,U,2)
"RTN","XDRDPICK",149,0)
 . S SCOR=$P($G(^DPT(X1,"MPI")),U,6) I SCOR'>0 S SCOR=0
"RTN","XDRDPICK",150,0)
 . S ^VA(15,"ACMORS",(9999999-SCOR),I)=""
"RTN","XDRDPICK",151,0)
 . S SCOR=$P($G(^DPT(X2,"MPI")),U,6) I SCOR'>0 S SCOR=0
"RTN","XDRDPICK",152,0)
 . S ^VA(15,"ACMORS",(9999999-SCOR),I)=""
"RTN","XDRDPICK",153,0)
 S ^VA(15,"ACMORS",0)=DT
"RTN","XDRDPICK",154,0)
 Q
"RTN","XDRDPICK",155,0)
 ;
"RTN","XDRDPICK",156,0)
ASKCMOR ;
"RTN","XDRDPICK",157,0)
 N DIR
"RTN","XDRDPICK",158,0)
 S DIR(0)="Y",DIR("A")="The CMOR scores for activity haven't been checked recently.  Do you want to update these (It might take a couple of minutes)"
"RTN","XDRDPICK",159,0)
 S DIR("B")="YES"
"RTN","XDRDPICK",160,0)
 D ^DIR I Y>0 D SETCMOR
"RTN","XDRDPICK",161,0)
 Q
"RTN","XDRDPICK",162,0)
 ;
"RTN","XDRDPICK",163,0)
SET1 ; HANDLES SETTING OF X-REF ON CMOR SCORES FOR POTENTIAL DUPLICATES
"RTN","XDRDPICK",164,0)
 I X'="P" Q
"RTN","XDRDPICK",165,0)
 N XDRXVAL,XDRXVAL1
"RTN","XDRDPICK",166,0)
 S XDRXVAL=^VA(15,D0,0)
"RTN","XDRDPICK",167,0)
 I $P($P(XDRXVAL,U),";",2)'="DPT(" Q
"RTN","XDRDPICK",168,0)
 S XDRXVAL1=$P($G(^DPT(+XDRXVAL,"MPI")),U,6) I XDRXVAL1="" S XDRXVAL1=-1
"RTN","XDRDPICK",169,0)
 S ^VA(15,"ACMORS",(9999999-XDRXVAL1),D0)=""
"RTN","XDRDPICK",170,0)
 S XDRXVAL1=$P($G(^DPT(+$P(XDRXVAL,U,2),"MPI")),U,6) I XDRXVAL1="" S XDRXVAL1=-1
"RTN","XDRDPICK",171,0)
 S ^VA(15,"ACMORS",(9999999-XDRXVAL1),D0)=""
"RTN","XDRDPICK",172,0)
 Q
"RTN","XDRDPICK",173,0)
 ;
"RTN","XDRDPICK",174,0)
KILL1 ; HANDLES KILLING OF X-REF ON CMOR SCORES FOR POTENTIAL DUPLICATES
"RTN","XDRDPICK",175,0)
 I X'="P" Q
"RTN","XDRDPICK",176,0)
 N XDRXVAL,XDRXVAL1
"RTN","XDRDPICK",177,0)
 S XDRXVAL=^VA(15,D0,0)
"RTN","XDRDPICK",178,0)
 I $P($P(XDRXVAL,U),";",2)'="DPT(" Q
"RTN","XDRDPICK",179,0)
 S XDRXVAL1=+$P($G(^DPT(+XDRXVAL,"MPI")),U,6) I XDRXVAL1="" S XDRXVAL1=-1
"RTN","XDRDPICK",180,0)
 K ^VA(15,"ACMORS",(9999999-XDRXVAL1),D0)
"RTN","XDRDPICK",181,0)
 S XDRXVAL1=+$P($G(^DPT(+$P(XDRXVAL,U,2),"MPI")),U,6) I XDRXVAL1="" S XDRXVAL1=-1
"RTN","XDRDPICK",182,0)
 K ^VA(15,"ACMORS",(9999999-XDRXVAL1),D0)
"RTN","XDRDPICK",183,0)
 Q
"RTN","XDRDPICK",184,0)
 ;
"RTN","XDRDPICK",185,0)
OTHERS ; CHECKS AND MARKS OTHER PAIRS SO ONLY ONE CAN BE PROCESSED AT A TIME
"RTN","XDRDPICK",186,0)
 Q  ; NOT USED CURRENTLY
"RTN","XDRDPICK",187,0)
 ;
"RTN","XDRDPICK",188,0)
 ;   P   CLEAR ALL RELATED
"RTN","XDRDPICK",189,0)
 ;
"RTN","XDRDPICK",190,0)
 ;   X   MARK ALL RELATED
"RTN","XDRDPICK",191,0)
 ;
"RTN","XDRDPICK",192,0)
 ;   V   CLEAR TO
"RTN","XDRDPICK",193,0)
 ;
"RTN","XDRDPICK",194,0)
 ;   O   NOTHING
"RTN","XDRDPICK",195,0)
 ;
"RTN","XDRDPICK",196,0)
 ;   R   MARK ALL RELATED
"RTN","XDRDPICK",197,0)
 ;
"RTN","XDRDPICK",198,0)
 ;  MERGED  CLEAR TO   REALIGN FROM
"RTN","XDRDPICK",199,0)
 I X="O" Q
"RTN","XDRDPICK",200,0)
 N OLDDA,OLDX S OLDDA=DA,OLDX=X N DA,X
"RTN","XDRDPICK",201,0)
 N XDRENTR,IENVAL,XDRPAIR,DONE,XDR0,STATUS,DIREC
"RTN","XDRDPICK",202,0)
 I $D(XDROTHER) Q
"RTN","XDRDPICK",203,0)
 N XDROTHER S XDROTHER=1
"RTN","XDRDPICK",204,0)
 I OLDX="P"!(OLDX="N") D  Q
"RTN","XDRDPICK",205,0)
 . F XDRENTR=$P(^VA(15,OLDDA,0),U),$P(^VA(15,OLDDA,0),U,2) F IENVAL=0:0 S IENVAL=$O(^VA(15,"B",XDRENTR,IENVAL)) Q:IENVAL'>0  I IENVAL'=OLDDA,$P(^VA(15,IENVAL,0),U,3)="O" D
"RTN","XDRDPICK",206,0)
 . . ; Have to check on whether the other member of the pair in process as well.
"RTN","XDRDPICK",207,0)
 . . S XDRPAIR=$P(^VA(15,IENVAL,0),U) IF XDRPAIR=XDRENTR S XDRPAIR=$P(^(0),U,2)
"RTN","XDRDPICK",208,0)
 . . S DONE=0 F IENPAIR=0:0 S IENPAIR=$O(^VA(15,"B",XDRPAIR,IENPAIR)) Q:IENPAIR'>0  I IENPAIR'=IENVAL D  Q:DONE
"RTN","XDRDPICK",209,0)
 . . . S XDR0=^VA(15,IENPAIR,0)
"RTN","XDRDPICK",210,0)
 . . . S STATUS=$P(XDR0,U,3)
"RTN","XDRDPICK",211,0)
 . . . I STATUS="X"!(STATUS="R") S DONE=1 Q
"RTN","XDRDPICK",212,0)
 . . . I STATUS="V" D  Q:DONE
"RTN","XDRDPICK",213,0)
 . . . . S DIREC=$P(XDR0,U,4)
"RTN","XDRDPICK",214,0)
 . . . . I $P(XDR0,U,DIREC)=XDRPAIR S DONE=1 Q  ; IT IS THE 'FROM' ENTRY
"RTN","XDRDPICK",215,0)
 . . . . Q
"RTN","XDRDPICK",216,0)
 . . . Q
"RTN","XDRDPICK",217,0)
 . . D RESET(IENVAL)
"RTN","XDRDPICK",218,0)
 . . Q
"RTN","XDRDPICK",219,0)
 . Q
"RTN","XDRDPICK",220,0)
 I OLDX="X"!(OLDX="R") D  Q
"RTN","XDRDPICK",221,0)
 . F XDRENTR=$P(^VA(15,OLDDA,0),U),$P(^VA(15,OLDDA,0),U,2) F IENVAL=0:0 S IENVAL=$O(^VA(15,"B",XDRENTR,IENVAL)) Q:IENVAL'>0  I IENVAL'=OLDDA,$P(^VA(15,IENVAL,0),U,3)="P" D
"RTN","XDRDPICK",222,0)
 . . N XDRXX S XDRXX(15,IENVAL_",",.03)="O"
"RTN","XDRDPICK",223,0)
 . . D FILE^DIE("","XDRXX")
"RTN","XDRDPICK",224,0)
 . Q
"RTN","XDRDPICK",225,0)
 I OLDX="V"&$D(XDRDADJX) D  Q  ; IF MERGED (XDRDADJX IS SET IN XDRDAJD AND IS RUN BY A CROSS-REFERENCE FOR MERGE STATUS SET TO 'MERGED')
"RTN","XDRDPICK",226,0)
 . F XDRENTR=$P(^VA(15,OLDDA,0),U),$P(^VA(15,OLDDA,0),U,2) D
"RTN","XDRDPICK",227,0)
 . . S DIREC=$P(^VA(15,OLDDA,0),U,4)
"RTN","XDRDPICK",228,0)
 . . F IENVAL=0:0 S IENVAL=$O(^VA(15,"B",XDRENTR,IENVAL)) Q:IENVAL'>0  I IENVAL'=OLDDA,$P(^VA(15,IENVAL,0),U,3)="O" D
"RTN","XDRDPICK",229,0)
 . . . ; Have to check on whether the other member of the pair in process as well.
"RTN","XDRDPICK",230,0)
 . . . S XDRPAIR=$P(^VA(15,IENVAL,0),U) IF XDRPAIR=XDRENTR S XDRPAIR=$P(^(0),U,2)
"RTN","XDRDPICK",231,0)
 . . . S DONE=0 F IENPAIR=0:0 S IENPAIR=$O(^VA(15,"B",XDRPAIR,IENPAIR)) Q:IENPAIR'>0  I IENPAIR'=IENVAL D  Q:DONE
"RTN","XDRDPICK",232,0)
 . . . . S XDR0=^VA(15,IENPAIR,0)
"RTN","XDRDPICK",233,0)
 . . . . S STATUS=$P(XDR0,U,3)
"RTN","XDRDPICK",234,0)
 . . . . I STATUS="X"!(STATUS="R") S DONE=1 Q
"RTN","XDRDPICK",235,0)
 . . . . I STATUS="V" D  Q:DONE
"RTN","XDRDPICK",236,0)
 . . . . . S DIREC=$P(XDR0,U,4)
"RTN","XDRDPICK",237,0)
 . . . . . I $P(XDR0,U,DIREC)=XDRPAIR S DONE=1 Q  ; IT IS THE 'FROM' ENTRY
"RTN","XDRDPICK",238,0)
 . . . . . Q
"RTN","XDRDPICK",239,0)
 . . . . Q
"RTN","XDRDPICK",240,0)
 . . . D RESET(IENVAL) ; RESET TO "P"
"RTN","XDRDPICK",241,0)
 . . . Q
"RTN","XDRDPICK",242,0)
 . . Q
"RTN","XDRDPICK",243,0)
 . Q
"RTN","XDRDPICK",244,0)
 Q
"RTN","XDRDPICK",245,0)
 ;
"RTN","XDRDPICK",246,0)
RESET(DA) ;
"RTN","XDRDPICK",247,0)
 N XDRXX,IENS,X
"RTN","XDRDPICK",248,0)
 I $P(^VA(15,DA,0),U,5)>1 Q
"RTN","XDRDPICK",249,0)
 D NAME^XDRDEDT(DA)
"RTN","XDRDPICK",250,0)
 S X=^VA(15,DA,0)
"RTN","XDRDPICK",251,0)
 S IENS=DA_","
"RTN","XDRDPICK",252,0)
 S XDRXX(15,IENS,.03)="P"
"RTN","XDRDPICK",253,0)
 I $P(X,U,4)'="" S XDRXX(15,IENS,.04)="@"
"RTN","XDRDPICK",254,0)
 I $P(X,U,5)'="" S XDRXX(15,IENS,.05)="@"
"RTN","XDRDPICK",255,0)
 I $P(X,U,7)'="" S XDRXX(15,IENS,.07)="@"
"RTN","XDRDPICK",256,0)
 I $P(X,U,8)'="" S XDRXX(15,IENS,.08)="@"
"RTN","XDRDPICK",257,0)
 I $P(X,U,10)'="" S XDRXX(15,IENS,.1)="@"
"RTN","XDRDPICK",258,0)
 I $P(X,U,13)'="" S XDRXX(15,IENS,.13)="@"
"RTN","XDRDPICK",259,0)
 I $P(X,U,14)'="" S XDRXX(15,IENS,.14)="@"
"RTN","XDRDPICK",260,0)
 D FILE^DIE("","XDRXX")
"RTN","XDRDPICK",261,0)
 S:$D(DUZ) $P(^VA(15,DA,0),U,12)=DUZ
"RTN","XDRDPICK",262,0)
 K ^VA(15,DA,2)
"RTN","XDRDPICK",263,0)
 K ^VA(15,DA,3)
"RTN","XDRDPICK",264,0)
 Q
"RTN","XDRDPRGE")
0^8^B9048519^B8257141
"RTN","XDRDPRGE",1,0)
XDRDPRGE ;SF-IRMFO/IHS/OHPRD/JCM - PURGE DUPLICATE RECORD FILE; ;8/28/08  18:20
"RTN","XDRDPRGE",2,0)
 ;;7.3;TOOLKIT;**23,42,113**;Apr 25, 1995;Build 5
"RTN","XDRDPRGE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRDPRGE",4,0)
 ;;
"RTN","XDRDPRGE",5,0)
START ;
"RTN","XDRDPRGE",6,0)
 D INIT G:XDRQFLG END
"RTN","XDRDPRGE",7,0)
 D ASK G:XDRQFLG END
"RTN","XDRDPRGE",8,0)
DQ ; Entry point for Tasked job
"RTN","XDRDPRGE",9,0)
 I XDRDPRGE("CHOICE")="BOTH" D BOTH I 1
"RTN","XDRDPRGE",10,0)
 E  D XREF
"RTN","XDRDPRGE",11,0)
END D EOJ
"RTN","XDRDPRGE",12,0)
 Q
"RTN","XDRDPRGE",13,0)
 ;
"RTN","XDRDPRGE",14,0)
INIT ;
"RTN","XDRDPRGE",15,0)
 S XDRQFLG=0
"RTN","XDRDPRGE",16,0)
 D FILE
"RTN","XDRDPRGE",17,0)
 G:XDRQFLG INITX
"RTN","XDRDPRGE",18,0)
 S XDRGL=^DIC(XDRFL,0,"GL")
"RTN","XDRDPRGE",19,0)
INITX Q
"RTN","XDRDPRGE",20,0)
 ;
"RTN","XDRDPRGE",21,0)
FILE ;
"RTN","XDRDPRGE",22,0)
 W !,"* This option is not available for PATIENTS" ; (new with XT*7.3*113)
"RTN","XDRDPRGE",23,0)
 S DIC("S")="I Y'=2"
"RTN","XDRDPRGE",24,0)
 S DIC(0)="QEAZ"
"RTN","XDRDPRGE",25,0)
 S DIC("A")="Select File to Be Checked to purge: "
"RTN","XDRDPRGE",26,0)
 S DIC="^VA(15.1," D ^DIC K DIC,X
"RTN","XDRDPRGE",27,0)
 I Y=-1 S XDRQFLG=1 G FILEX
"RTN","XDRDPRGE",28,0)
 S XDRFL=$P(Y(0),U) K Y
"RTN","XDRDPRGE",29,0)
FILEX Q
"RTN","XDRDPRGE",30,0)
 ;
"RTN","XDRDPRGE",31,0)
ASK ;
"RTN","XDRDPRGE",32,0)
 S DIR(0)="S^1:POTENTIAL DUPLICATES PURGE;2:VERIFIED NOT DUPLICATES PURGE;3:ALL RECORDS EXCEPT VERIFIED DUPLICATES PURGE"
"RTN","XDRDPRGE",33,0)
 S DIR("A")="Choice "
"RTN","XDRDPRGE",34,0)
 S DIR("?",1)="Enter a 1 if you wish to purge only the potential non-verified duplicates"
"RTN","XDRDPRGE",35,0)
 S DIR("?",2)="Enter a 2 if you wish to purge only Verified Non-Duplicates"
"RTN","XDRDPRGE",36,0)
 S DIR("?",3)="Enter a 3 if you wish to purge everything except verifed duplicates"
"RTN","XDRDPRGE",37,0)
 D ^DIR K DIR
"RTN","XDRDPRGE",38,0)
 I $D(DIRUT) S XDRQFLG=1 G ASKX
"RTN","XDRDPRGE",39,0)
 S (XDRDPRGE("XREF"),XDRDPRGE("CHOICE"))=$S(Y=1:"APOT",Y=2:"ANOT",1:"BOTH") K Y
"RTN","XDRDPRGE",40,0)
 S DIR(0)="Y"
"RTN","XDRDPRGE",41,0)
 S DIR("A")="Do you wish to Queue this purging (Y/N)"
"RTN","XDRDPRGE",42,0)
 D ^DIR K DIR
"RTN","XDRDPRGE",43,0)
 I $D(DIRUT) S XDRQFLG=1 G ASKX
"RTN","XDRDPRGE",44,0)
 I Y D QUEUE
"RTN","XDRDPRGE",45,0)
ASKX K Y
"RTN","XDRDPRGE",46,0)
 Q
"RTN","XDRDPRGE",47,0)
 ;
"RTN","XDRDPRGE",48,0)
QUEUE ;
"RTN","XDRDPRGE",49,0)
 S ZTRTN="DQ^XDRDPRGE",ZTIO="",ZTDESC="Duplicate Record Purge"
"RTN","XDRDPRGE",50,0)
 F %="XDRFL","XDRGL","XDRDPRGE(" S ZTSAVE(%)=""
"RTN","XDRDPRGE",51,0)
 D ^%ZTLOAD K ZTSK
"RTN","XDRDPRGE",52,0)
 S XDRQFLG=1
"RTN","XDRDPRGE",53,0)
 Q
"RTN","XDRDPRGE",54,0)
 ;
"RTN","XDRDPRGE",55,0)
BOTH ;
"RTN","XDRDPRGE",56,0)
 S XDRDPRGE("XREF")="APOT" D XREF
"RTN","XDRDPRGE",57,0)
 S XDRDPRGE("XREF")="ANOT" D XREF
"RTN","XDRDPRGE",58,0)
 Q
"RTN","XDRDPRGE",59,0)
 ;
"RTN","XDRDPRGE",60,0)
XREF ;
"RTN","XDRDPRGE",61,0)
 G:'$D(^VA(15,XDRDPRGE("XREF"))) XREFX
"RTN","XDRDPRGE",62,0)
 S XDRDPRGE("GL")="^VA(15,"_""""_XDRDPRGE("XREF")_""""_","_""""_$P(XDRGL,U,2)_""""_","
"RTN","XDRDPRGE",63,0)
 S XDRDPRGE("RCDS")=0,DIK="^VA(15," F XDRDI1=0:0 S XDRDPRGE("RCDS")=$O(@(XDRDPRGE("GL")_"XDRDPRGE(""RCDS""))")) Q:XDRDPRGE("RCDS")=""  S DA=$O(@(XDRDPRGE("GL")_"XDRDPRGE(""RCDS""),0)")) D ^DIK
"RTN","XDRDPRGE",64,0)
XREFX K XDRDI1,DIK,DA,XDRDPRGE("GL")
"RTN","XDRDPRGE",65,0)
 Q
"RTN","XDRDPRGE",66,0)
 ;
"RTN","XDRDPRGE",67,0)
EOJ ;
"RTN","XDRDPRGE",68,0)
 K XDRFL,XDRGL,XDRDPRGE
"RTN","XDRDPRGE",69,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","XDRDPRGE",70,0)
 Q
"RTN","XDRDQUE")
0^9^B20836456^B18790342
"RTN","XDRDQUE",1,0)
XDRDQUE ;SF-IRMFO/IHS/OHPRD/JCM - START AND STOP DUPLICATE CHECKER SEARCH ;8/28/08  18:23
"RTN","XDRDQUE",2,0)
 ;;7.3;TOOLKIT;**23,47,113**;Apr 25, 1995;Build 5
"RTN","XDRDQUE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRDQUE",4,0)
 ;;
"RTN","XDRDQUE",5,0)
START ;
"RTN","XDRDQUE",6,0)
 S XDRQFLG=0
"RTN","XDRDQUE",7,0)
 ;*** following commented line to be removed from Toolkit ver after 7.3
"RTN","XDRDQUE",8,0)
 ;S XDRDQUE("TASKMAN STATUS")=$P(@$Q(^%ZTSCH("STATUS","")),U,2) I XDRDQUE("TASKMAN STATUS")'="RUN" W !!,"Taskman does not seem to be running properly, Please notify your site manager.",!! G END
"RTN","XDRDQUE",9,0)
 S XDRDQUE("TASKMAN STATUS")=$$TM^%ZTLOAD
"RTN","XDRDQUE",10,0)
 I 'XDRDQUE("TASKMAN STATUS") W !!,"Taskman does not seem to be running properly, Please notify your site manager.",!! G END
"RTN","XDRDQUE",11,0)
 ; XT*7.3*113, variable XDRNOPT=1 makes option unavailable for the PATIENT file
"RTN","XDRDQUE",12,0)
 N XDRNOPT S XDRNOPT=1
"RTN","XDRDQUE",13,0)
 D FILE G:XDRQFLG END ; Asks user which file to check for dups
"RTN","XDRDQUE",14,0)
 D CHECK^XDRU1 G:XDRQFLG END ; Checks the Duplicate Resolution file
"RTN","XDRDQUE",15,0)
 D ASK G:XDRQFLG END ; Asks user what action and type of search
"RTN","XDRDQUE",16,0)
 D QUEUE G:XDRQFLG END ; Queues search
"RTN","XDRDQUE",17,0)
 I XDRDNSTA="r" D ASK3 D:'XDRQFLG QUEUE
"RTN","XDRDQUE",18,0)
END D EOJ ; Clean up variables
"RTN","XDRDQUE",19,0)
 Q
"RTN","XDRDQUE",20,0)
 ;
"RTN","XDRDQUE",21,0)
FILE ; EP - Called by XDRDCOMP,XDRDLIST,XDRDSCOR,XDRMADD,XDRCNT
"RTN","XDRDQUE",22,0)
 K DIC("B")
"RTN","XDRDQUE",23,0)
 K X S:$D(XDRFL) X=XDRFL
"RTN","XDRDQUE",24,0)
 S DIC(0)=$S($D(X):"Z",1:"QEAZ")
"RTN","XDRDQUE",25,0)
 S:'$D(DIC("A")) DIC("A")="Select file to be checked for duplicates: "
"RTN","XDRDQUE",26,0)
 ; If XDRNOPT=1, don't allow selection of PATIENT file.(new with XT*7.3*113)
"RTN","XDRDQUE",27,0)
 I $G(XDRNOPT)=1 D
"RTN","XDRDQUE",28,0)
 . S DIC("S")="I Y'=2"
"RTN","XDRDQUE",29,0)
 . W:'$D(ZTQUEUED) !,"* This option is not available for PATIENTS"
"RTN","XDRDQUE",30,0)
 . Q
"RTN","XDRDQUE",31,0)
 S DIC="^VA(15.1," D ^DIC K DIC,X
"RTN","XDRDQUE",32,0)
 I Y=-1 S XDRQFLG=1 G FILEX
"RTN","XDRDQUE",33,0)
 S XDRD(0)=Y(0),XDRD(0,0)=Y(0,0),XDRFL=$P(Y(0),U),PRIFILE=XDRFL K Y
"RTN","XDRDQUE",34,0)
 W:'$D(ZTQUEUED) !!
"RTN","XDRDQUE",35,0)
FILEX Q
"RTN","XDRDQUE",36,0)
 ;
"RTN","XDRDQUE",37,0)
ASK ;
"RTN","XDRDQUE",38,0)
 D DISP
"RTN","XDRDQUE",39,0)
 D ASK1 G:XDRQFLG ASKX
"RTN","XDRDQUE",40,0)
 I XDRDSTA="c"&($D(^VA(15.1,XDRFL,"APDTI"))) S XDRDPDTI="" W !!,"Since the Potential Duplicate Threshold has been raised",!,"I will only go through the Potential Duplicates and see if they",!,"meet the new threshold." G ASKX
"RTN","XDRDQUE",41,0)
 D:XDRDSTA="c"&('XDRQFLG) ASK2
"RTN","XDRDQUE",42,0)
ASKX ;
"RTN","XDRDQUE",43,0)
 Q
"RTN","XDRDQUE",44,0)
DISP ;
"RTN","XDRDQUE",45,0)
 D DISP^XDRDSTAT
"RTN","XDRDQUE",46,0)
 S XDRDSTA=$P(XDRD(0),U,2)
"RTN","XDRDQUE",47,0)
 S XDRDTYPE=$P(XDRD(0),U,5)
"RTN","XDRDQUE",48,0)
 Q
"RTN","XDRDQUE",49,0)
ASK1 ;
"RTN","XDRDQUE",50,0)
 S:XDRDSTA']"" XDRDSTA="c"
"RTN","XDRDQUE",51,0)
 S DIR(0)="Y",DIR("A")="Do You wish to "_$S(XDRDSTA="h":"CONTINUE",XDRDSTA="e":"CONTINUE",XDRDSTA="r":"HALT",1:"RUN")_" "_$S(XDRDSTA="r":"this",XDRDSTA="h":"this",XDRDSTA="e":"this",1:"a")_" search (Y/N)"
"RTN","XDRDQUE",52,0)
 D ^DIR K DIR D OUT
"RTN","XDRDQUE",53,0)
 I 'XDRQFLG,'Y,$S(XDRDSTA="r":0,XDRDSTA="c":0,1:1) D  S Y=0
"RTN","XDRDQUE",54,0)
 . S DIR(0)="Y",DIR("A")="Do you wish to mark this run COMPLETED (Y/N)",DIR("B")="NO" D ^DIR K DIR D OUT
"RTN","XDRDQUE",55,0)
 . I Y,'XDRQFLG S DIE="^VA(15.1,",DA=XDRFL,DR=".02////c" D ^DIE K DA,DIE,DR
"RTN","XDRDQUE",56,0)
 S:'Y XDRQFLG=1
"RTN","XDRDQUE",57,0)
 K XDRDNSTA
"RTN","XDRDQUE",58,0)
 S:'XDRQFLG XDRDNSTA=$S(XDRDSTA="h":"r",XDRDSTA="r":"h",1:"r")
"RTN","XDRDQUE",59,0)
 Q
"RTN","XDRDQUE",60,0)
ASK2 ;
"RTN","XDRDQUE",61,0)
 K XDRDTYPE
"RTN","XDRDQUE",62,0)
 S DIR(0)="15.1,.05A",DIR("A")="Which type of Search do you wish to run ? (BASIC/NEW) "
"RTN","XDRDQUE",63,0)
 S DIR("B")="BASIC",DIR("?")="A 'BASIC' search starts at the beginning of the file.  A 'NEW' search uses a cross-reference you specify to determine which entries to test."
"RTN","XDRDQUE",64,0)
 D ^DIR K DIR D OUT
"RTN","XDRDQUE",65,0)
 S XDRDTYPE=$S(Y="b":"BASIC",1:"NEW")
"RTN","XDRDQUE",66,0)
 I XDRDTYPE="BASIC" D
"RTN","XDRDQUE",67,0)
 . N DIR S DIR(0)="Y"
"RTN","XDRDQUE",68,0)
 . S DIR("A",1)="This process will take a **LONG** time (known to exceed 100  hours),"
"RTN","XDRDQUE",69,0)
 . S DIR("A",2)="but you CAN stop and restart the process when you want using"
"RTN","XDRDQUE",70,0)
 . S DIR("A")="the options  OK"
"RTN","XDRDQUE",71,0)
 . D ^DIR S:Y'>0 XDRQFLG=1
"RTN","XDRDQUE",72,0)
 . Q
"RTN","XDRDQUE",73,0)
 Q
"RTN","XDRDQUE",74,0)
 ;
"RTN","XDRDQUE",75,0)
ASK3 ;
"RTN","XDRDQUE",76,0)
 W !
"RTN","XDRDQUE",77,0)
 S DIR(0)="Y",DIR("A")="Do You wish to schedule a time to HALT this search (Y/N)"
"RTN","XDRDQUE",78,0)
 D ^DIR K DIR D OUT
"RTN","XDRDQUE",79,0)
 S:'Y XDRQFLG=1
"RTN","XDRDQUE",80,0)
 G:XDRQFLG ASK3X
"RTN","XDRDQUE",81,0)
 S XDRDNSTA="h"
"RTN","XDRDQUE",82,0)
ASK3X Q
"RTN","XDRDQUE",83,0)
 ;
"RTN","XDRDQUE",84,0)
QUEUE ;
"RTN","XDRDQUE",85,0)
 S ZTRTN="XDRDMAIN",ZTIO="",ZTDESC="Duplicate "_XDRD(0,0)_" Search"
"RTN","XDRDQUE",86,0)
 S:XDRDNSTA="h" ZTDESC="Halt "_ZTDESC
"RTN","XDRDQUE",87,0)
 S ZTSAVE("XDRFL")="" S:$D(XDRDPDTI) ZTSAVE("XDRDPDTI")=""
"RTN","XDRDQUE",88,0)
 S ZTSAVE("XDRDTYPE")="",ZTSAVE("XDRDNSTA")=""
"RTN","XDRDQUE",89,0)
 D ^%ZTLOAD
"RTN","XDRDQUE",90,0)
 S:'$D(ZTQUEUED) XDRQFLG=1
"RTN","XDRDQUE",91,0)
 K ZTSK
"RTN","XDRDQUE",92,0)
QUEUEX Q
"RTN","XDRDQUE",93,0)
 ;
"RTN","XDRDQUE",94,0)
OUT ;
"RTN","XDRDQUE",95,0)
 ; Common point to take care of DIR,DIC, and DIE calls
"RTN","XDRDQUE",96,0)
 I ($D(DTOUT))!($D(DUOUT))!($D(DIRUT)) K DTOUT,DUOUT,DIRUT S XDRQFLG=1
"RTN","XDRDQUE",97,0)
 Q
"RTN","XDRDQUE",98,0)
EOJ ;
"RTN","XDRDQUE",99,0)
 K X,Y,XDRFL,XDRDNSTA,XDRDSTA,XDRQFLG,XDRD,XDRDPDTI,XDRDQUE
"RTN","XDRDQUE",100,0)
 Q
"RTN","XDRMADD")
0^10^B42800986^B35442806
"RTN","XDRMADD",1,0)
XDRMADD ;SF-IRMFO/IHS/OHPRD/JCM,JLI,REM -  USER CREATED VERIFIED DUPLICATE PAIR ENTRY ;8/28/08  18:25
"RTN","XDRMADD",2,0)
 ;;7.3;TOOLKIT;**23,113**;Apr 25, 1995;Build 5
"RTN","XDRMADD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XDRMADD",4,0)
 ;;
"RTN","XDRMADD",5,0)
 N XDRFL,XDRCNTR
"RTN","XDRMADD",6,0)
 S XDRCNTR=0
"RTN","XDRMADD",7,0)
START ;
"RTN","XDRMADD",8,0)
 N XDRADFLG,XDRNOPT
"RTN","XDRMADD",9,0)
 K DIC
"RTN","XDRMADD",10,0)
 ; XT*7.3*113 - Setting of XDRNOPT flag, and checking for XDRFL'=2
"RTN","XDRMADD",11,0)
 ;   in this routine and in SCORE entry point, prevent option
"RTN","XDRMADD",12,0)
 ;   from using the duplicate record checking code on the PATIENT file.
"RTN","XDRMADD",13,0)
 ;   DUPLICATE RECORD entries can be added, but no checking is done.
"RTN","XDRMADD",14,0)
 S (XDRQFLG,XDRADFLG,XDRNOPT)=0
"RTN","XDRMADD",15,0)
 I '$D(XDRFL) D
"RTN","XDRMADD",16,0)
 . S DIC("A")="Add entries from which File: " D FILE^XDRDQUE
"RTN","XDRMADD",17,0)
 . I XDRFL=2 W "* No potential duplicate threshold % check will be calculated for PATIENTS"
"RTN","XDRMADD",18,0)
 . Q
"RTN","XDRMADD",19,0)
 G:XDRQFLG END
"RTN","XDRMADD",20,0)
 D:XDRFL'=2
"RTN","XDRMADD",21,0)
 . S XDRDTYPE=$P(XDRD(0),U,5)
"RTN","XDRMADD",22,0)
 . Q:XDRDTYPE]""
"RTN","XDRMADD",23,0)
 . ;REM -8/20/96 when XDRDTYPE is null set it to basic.
"RTN","XDRMADD",24,0)
 . S $P(^VA(15.1,XDRFL,0),U,5)="b",XDRDTYPE="b"
"RTN","XDRMADD",25,0)
 . Q
"RTN","XDRMADD",26,0)
 S XDRGL=^DIC(XDRFL,0,"GL")
"RTN","XDRMADD",27,0)
 D:XDRCNTR>0  G:XDRQFLG END
"RTN","XDRMADD",28,0)
 . W ! K DIR S DIR(0)="Y",DIR("A")="Do you want to ADD another pair (Y/N)"
"RTN","XDRMADD",29,0)
 . D ^DIR K DIR S:$D(DIRUT)!('Y) XDRQFLG=1
"RTN","XDRMADD",30,0)
 . Q
"RTN","XDRMADD",31,0)
 S XDRCNTR=XDRCNTR+1
"RTN","XDRMADD",32,0)
 ; Skip duplicate record checking for patients
"RTN","XDRMADD",33,0)
 I XDRFL=2 D
"RTN","XDRMADD",34,0)
 . S (XDRDSCOR("MAX"),XDRDSCOR("PDT%"),XDRD("DUPSCORE"),XDRMADD("DUPSCORE%"))=0
"RTN","XDRMADD",35,0)
 . S XDRADFLG=1
"RTN","XDRMADD",36,0)
 I XDRFL'=2 D BYPASS G:XDRQFLG END
"RTN","XDRMADD",37,0)
 D LKUP G:XDRQFLG END
"RTN","XDRMADD",38,0)
 D CHECK G:XDRQFLG<0 START
"RTN","XDRMADD",39,0)
 I XDRFL'=2 D
"RTN","XDRMADD",40,0)
 . D ^XDRDSCOR S:XDRADFLG XDRDSCOR("PDT%")=0 ;REM -8/23/96 to bypass PDT%
"RTN","XDRMADD",41,0)
 . S XDRD("NOADD")="" D ^XDRDUP
"RTN","XDRMADD",42,0)
 . Q
"RTN","XDRMADD",43,0)
 K XDRDTYPE
"RTN","XDRMADD",44,0)
 D SCORE
"RTN","XDRMADD",45,0)
 I XDRFL'=2,XDRMADD("DUPSCORE%")<XDRDSCOR("PDT%") D  G START ; JLI 4/11/96
"RTN","XDRMADD",46,0)
 . W !!,$C(7),"This pair of patients has a duplicate percentage of only ",XDRMADD("DUPSCORE%"),"% which"
"RTN","XDRMADD",47,0)
 . W !,"is less than the minimal percentage for potential duplicates (",XDRDSCOR("PDT%"),"%)."
"RTN","XDRMADD",48,0)
 . W !!?30,"Patients not added!!!",!!
"RTN","XDRMADD",49,0)
 S XDRDA=+XDRDFLG I XDRDA'>0 D ADD
"RTN","XDRMADD",50,0)
 G:XDRQFLG START
"RTN","XDRMADD",51,0)
 D SHOW^XDRDPICK ; D MERGE ; CHANGED TO CURRENT VERIF METHOD, NOT MERGE 4/11/96  JLI
"RTN","XDRMADD",52,0)
 G START ; ADDED 4/11/96 JLI
"RTN","XDRMADD",53,0)
END D EOJ
"RTN","XDRMADD",54,0)
 Q
"RTN","XDRMADD",55,0)
 ;
"RTN","XDRMADD",56,0)
LKUP ;Looks up the records to add.
"RTN","XDRMADD",57,0)
 K XDRCD,XDRCD2
"RTN","XDRMADD",58,0)
 S DIC=XDRGL,DIC(0)="QEAM"
"RTN","XDRMADD",59,0)
 S DIC("S")="I '$D(^VA(15,""AFR"",$P(XDRGL,U,2),Y))"
"RTN","XDRMADD",60,0)
 S DIC("A")="Select "_$P(^DIC(XDRFL,0),U,1)_": "
"RTN","XDRMADD",61,0)
 D ^DIC K DIC,DA
"RTN","XDRMADD",62,0)
 I $D(DIRUT)!(Y=-1) S XDRQFLG=1 G LKUPX
"RTN","XDRMADD",63,0)
 S XDRCD=+Y
"RTN","XDRMADD",64,0)
LKUP2 S DIC=XDRGL,DIC(0)="QEAM"
"RTN","XDRMADD",65,0)
 S DIC("S")="I '$D(^VA(15,""AFR"",$P(XDRGL,U,2),Y))"
"RTN","XDRMADD",66,0)
 S DIC("A")="    Another  "_$P(^DIC(XDRFL,0),U,1)_": "
"RTN","XDRMADD",67,0)
 D ^DIC K DIC,DA
"RTN","XDRMADD",68,0)
 G:$D(DIRUT)!(Y=-1) LKUP
"RTN","XDRMADD",69,0)
 S XDRCD2=+Y
"RTN","XDRMADD",70,0)
 I XDRCD=XDRCD2 W !!,"Please do not try and merge the same patients together.",!! K XDRCD2 G LKUP2
"RTN","XDRMADD",71,0)
 S XDRMADD("REC1")=$S(XDRCD<XDRCD2:XDRCD,1:XDRCD2)
"RTN","XDRMADD",72,0)
 S XDRMADD("REC2")=$S(XDRMADD("REC1")=XDRCD:XDRCD2,1:XDRCD)
"RTN","XDRMADD",73,0)
 S XDRCD=XDRMADD("REC1"),XDRCD2=XDRMADD("REC2")
"RTN","XDRMADD",74,0)
 W !!,"You will be adding the following pair of records to the duplicate record file:",!
"RTN","XDRMADD",75,0)
 W !?5,"RECORD1:  ",$P(@(XDRGL_XDRCD_",0)"),U)
"RTN","XDRMADD",76,0)
 W !?5,"RECORD2:  ",$P(@(XDRGL_XDRCD2_",0)"),U)
"RTN","XDRMADD",77,0)
 W !! K DIR S DIR(0)="E" D ^DIR K DIR I $D(DIRUT) S XDRQFLG=1 Q
"RTN","XDRMADD",78,0)
 W "  Ok, continuing, hold on ...",!
"RTN","XDRMADD",79,0)
 ;W !!,"Hit return to continue " R XDRMADD("ANS"):DTIME W "  Okay, continuing, hold on ...",!
"RTN","XDRMADD",80,0)
LKUPX Q
"RTN","XDRMADD",81,0)
 ;
"RTN","XDRMADD",82,0)
CHECK ;
"RTN","XDRMADD",83,0)
 S XDRDFLG=0 F XDRDI="APOT","ANOT","AVDUP" I $D(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD_U_XDRCD2))!($D(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD2_U_XDRCD))) S XDRDFLG=-1 I XDRDI="APOT" D
"RTN","XDRMADD",84,0)
 . I $D(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD_U_XDRCD2)) S XDRDFLG=$O(^(XDRCD_U_XDRCD2,0)) Q
"RTN","XDRMADD",85,0)
 . S XDRDFLG=$O(^VA(15,XDRDI,$P(XDRGL,U,2),XDRCD2_U_XDRCD,0))
"RTN","XDRMADD",86,0)
 I XDRDFLG W !!,"They are already entered in Duplicate Record file.",!!
"RTN","XDRMADD",87,0)
 K XDRDI
"RTN","XDRMADD",88,0)
 Q
"RTN","XDRMADD",89,0)
 ;
"RTN","XDRMADD",90,0)
SCORE ;
"RTN","XDRMADD",91,0)
 I XDRFL'=2 D
"RTN","XDRMADD",92,0)
 . S XDRMADD("DUPSCORE%")=$S($G(XDRDSCOR("MAX"))=0:0,1:(XDRD("DUPSCORE")/XDRDSCOR("MAX")))
"RTN","XDRMADD",93,0)
 . S XDRMADD("DUPSCORE%")=$J(XDRMADD("DUPSCORE%"),1,2)
"RTN","XDRMADD",94,0)
 . S XDRMADD("DUPSCORE%")=$S(XDRMADD("DUPSCORE%")<0:0,XDRMADD("DUPSCORE%")<1:$E(XDRMADD("DUPSCORE%"),3,4),1:100)
"RTN","XDRMADD",95,0)
 . Q
"RTN","XDRMADD",96,0)
 S XDRDFR=$S(XDRCD<XDRCD2:XDRCD,1:XDRCD2)
"RTN","XDRMADD",97,0)
 S XDRDTO=$S(XDRDFR=XDRCD:XDRCD2,1:XDRCD)
"RTN","XDRMADD",98,0)
 S XDRMADD("STATUS")="X"
"RTN","XDRMADD",99,0)
 Q
"RTN","XDRMADD",100,0)
 ;
"RTN","XDRMADD",101,0)
ADD ;
"RTN","XDRMADD",102,0)
 ;ADD TO DUPLICATE RECORD FILE
"RTN","XDRMADD",103,0)
 S XDRMAINI="MERGE" D ^XDRMAINI ;LAB/OHPRD ADDED THIS
"RTN","XDRMADD",104,0)
 S DIC="^VA(15,",DIC(0)="L",X=XDRDFR_";"_$P(XDRGL,U,2),DLAYGO=15
"RTN","XDRMADD",105,0)
 S XDRMADDX=XDRDTO_";"_$P(XDRGL,U,2)
"RTN","XDRMADD",106,0)
 S DIC("DR")=".02////^S X=XDRMADDX"_";.03////"_XDRMADD("STATUS")
"RTN","XDRMADD",107,0)
 ;S DIC("DR")=DIC("DR")_";.04//2" ;REM -10/2/96 this will be asked in XDRRMRG!
"RTN","XDRMADD",108,0)
 S DIC("DR")=DIC("DR")_";.03///P"_";.06////"_DT_";.09////"_DUZ
"RTN","XDRMADD",109,0)
 S DIC("DR")=DIC("DR")_";.15////"_XDRDSCOR("MAX")_";.17////"_XDRDSCOR("PDT%")_";.18////"_XDRD("DUPSCORE")_";.19////"_XDRMADD("DUPSCORE%")
"RTN","XDRMADD",110,0)
 S:$D(XDRDSCOR("VDT%")) DIC("DR")=DIC("DR")_";.16////"_XDRDSCOR("VDT%")
"RTN","XDRMADD",111,0)
 D
"RTN","XDRMADD",112,0)
 . N I,X1,X2,X3
"RTN","XDRMADD",113,0)
 . S X1=X_U_XDRMADDX,X2=XDRMADDX_U_X
"RTN","XDRMADD",114,0)
 . F I=0:0 S I=$O(^VA(15,"B",X,I)) Q:I'>0  S X3=$P($G(^VA(15,I,0)),U,1,2) I X3=X1!(X3=X2) K X Q
"RTN","XDRMADD",115,0)
 S Y=-1 I $D(X) D FILE^DICN
"RTN","XDRMADD",116,0)
 K DIC,DR,X,DLAYGO
"RTN","XDRMADD",117,0)
 I Y'>0 S XDRQFLG=1 K XDRCD,XDRCD2 G ADDX
"RTN","XDRMADD",118,0)
 S DIE="^VA(15,",(XDRDA,XDRMPDA,DA)=+Y ; ADDED XDRDA TO LIST 4/11/96 JLI
"RTN","XDRMADD",119,0)
 F XDRMORD=0:0 S XDRMORD=$O(XDRDTEST(XDRMORD)) Q:'XDRMORD  S DR="2101///"_$P(XDRDTEST(XDRMORD),U,1),DR(2,15.02101)=".02////"_XDRDUP("TEST SCORE",XDRMORD) D ^DIE K DR
"RTN","XDRMADD",120,0)
ADDX K DIE,DR,DA,XDRMORD,XDRMADDX,XDRDUP("TEST SCORE")
"RTN","XDRMADD",121,0)
 Q
"RTN","XDRMADD",122,0)
 ;
"RTN","XDRMADD",123,0)
MERGE Q  ;
"RTN","XDRMADD",124,0)
 S XDRMPAIR=XDRDFR_"^"_XDRDTO,XDRM("NOVERIFY")=""
"RTN","XDRMADD",125,0)
 D EN^XDRMAIN
"RTN","XDRMADD",126,0)
MERGEX K XDRM
"RTN","XDRMADD",127,0)
 Q
"RTN","XDRMADD",128,0)
 ;
"RTN","XDRMADD",129,0)
BYPASS ;REM -8/20/96 Add record directly into file 15, bypass threshold.
"RTN","XDRMADD",130,0)
 N X,XDRKEY
"RTN","XDRMADD",131,0)
 S (X,XDRKEY)=0 F  S X=$O(^VA(200,DUZ,51,"B",X)) Q:X'>0!(XDRKEY)  D
"RTN","XDRMADD",132,0)
 .I $$GET1^DIQ(19.1,X,.01)="XDRMGR" S XDRKEY=1 Q
"RTN","XDRMADD",133,0)
 Q:'XDRKEY
"RTN","XDRMADD",134,0)
 S DIR(0)="Y",DIR("A")="Do you want to bypass the potential duplicate threshold % check (Y/N)"
"RTN","XDRMADD",135,0)
 S DIR("??")="^W !!,""This will add the pair of records to the Duplicate Record file without checking the potential duplicate threshold %."""
"RTN","XDRMADD",136,0)
 D ^DIR K DIR S XDRADFLG=Y I $D(DTOUT)!($D(DUOUT)) S XDRQFLG=1 Q
"RTN","XDRMADD",137,0)
 I 'XDRADFLG W !!,*7,"Potential duplicate threshold % will NOT be bypassed!",!
"RTN","XDRMADD",138,0)
 I XDRADFLG D
"RTN","XDRMADD",139,0)
 .W !!,"This will add the pair of records directly into the Duplicate Record file."
"RTN","XDRMADD",140,0)
 .S DIR(0)="YO",DIR("A")="Are you sure you want to continue",DIR("B")="NO"
"RTN","XDRMADD",141,0)
 .D ^DIR K DIR S XDRADFLG=Y W ! I $D(DIRUT) S XDRQFLG=1 Q
"RTN","XDRMADD",142,0)
 .I 'XDRADFLG W *7,!!,"Potential duplicate threshold % will NOT be bypassed!",!
"RTN","XDRMADD",143,0)
 Q
"RTN","XDRMADD",144,0)
 ;
"RTN","XDRMADD",145,0)
EOJ ;
"RTN","XDRMADD",146,0)
 K XDRMADD,XDRMORD,XDRDFR,XDRDTO,X,Y,XDRCD,XDRCD2,XDRD,XDRFL,XDRGL
"RTN","XDRMADD",147,0)
 K XDRFL,XDRMPAIR,XDRMPDA,XDRQFLG,XDRDSCOR,XDRDTEST
"RTN","XDRMADD",148,0)
 Q
"RTN","XT73P113")
0^12^B2774672^n/a
"RTN","XT73P113",1,0)
XT73P113 ;OAK-OIFO/TKW  KIDs Post-Init for XT*7.3*113 ;10/15/08  16:12
"RTN","XT73P113",2,0)
 ;;7.3;TOOLKIT;**113**;Apr 25, 1995;Build 5
"RTN","XT73P113",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XT73P113",4,0)
 ;;
"RTN","XT73P113",5,0)
 ;;KIDs Post-Init
"RTN","XT73P113",6,0)
 ;
"RTN","XT73P113",7,0)
EN ; Delete menu item 
"RTN","XT73P113",8,0)
 D BMES^XPDUTL("Put 'Purge Duplicate Record File' option OUT OF ORDER")
"RTN","XT73P113",9,0)
 N RSLT
"RTN","XT73P113",10,0)
 S RSLT=$$LKOPT^XPDMENU("XDR PURGE")
"RTN","XT73P113",11,0)
 I RSLT'>0 D  Q
"RTN","XT73P113",12,0)
 . D BMES^XPDUTL("Option XDR PURGE (Purge Duplicate Record File) is not on your system.")
"RTN","XT73P113",13,0)
 . Q
"RTN","XT73P113",14,0)
 D OUT^XPDMENU("XDR PURGE","Inactivated with patch XT*7.3*113")
"RTN","XT73P113",15,0)
 D BMES^XPDUTL("Delete 'Purge Duplicate Record File' OPTION from the 'Manager Utilities' menu.")
"RTN","XT73P113",16,0)
 S RSLT=$$DELETE^XPDMENU("XDR MANAGER UTILITIES","XDR PURGE")
"RTN","XT73P113",17,0)
 Q:RSLT=1
"RTN","XT73P113",18,0)
 D MES^XPDUTL("  *** Deletion FAILED!! ***")
"RTN","XT73P113",19,0)
 D MES^XPDUTL("  Use the 'Menu Management' option to delete the 'XPD PURGE' menu item")
"RTN","XT73P113",20,0)
 D MES^XPDUTL("  from the 'XDR MANAGER UTILITIES' Menu Option.")
"RTN","XT73P113",21,0)
 Q
"RTN","XT73P113",22,0)
 ;
"RTN","XT73P113",23,0)
 ;
"VER")
8.0^22.0
"^DD",15.1,15.1,99,0)
SUPPRESS NEW DUP EMAIL^S^1:Yes;0:No;^99;1^Q
"^DD",15.1,15.1,99,3)
Enter 1 to suppress email sent when a new entry is added to the DUPLICATE RECORD file. Enter 0 to send email.
"^DD",15.1,15.1,99,21,0)
^^7^7^3080919^
"^DD",15.1,15.1,99,21,1,0)
When a PATIENT pair entry is added to the DUPLICATE RECORD file by PSIM,
"^DD",15.1,15.1,99,21,2,0)
an email is sent to the mail group specified in the DUPLICATE MANAGER MAIL
"^DD",15.1,15.1,99,21,3,0)
GROUP field, notifying them that the patient pair has been added to the
"^DD",15.1,15.1,99,21,4,0)
file with POTENTIAL DUPLICATE, UNVERIFIED status.
"^DD",15.1,15.1,99,21,5,0)
 
"^DD",15.1,15.1,99,21,6,0)
If this field is set to 1 (YES), the email will be suppressed (NOT sent).
"^DD",15.1,15.1,99,21,7,0)
If this field is set to 0 (NO), the email will be sent.
"^DD",15.1,15.1,99,23,0)
^^13^13^3080919^
"^DD",15.1,15.1,99,23,1,0)
This field is initialized to 1 for the PATIENT file record in patch 
"^DD",15.1,15.1,99,23,2,0)
XT*7.3*113, to suppress sending the email messages while IMDQ processes a
"^DD",15.1,15.1,99,23,3,0)
potentially large number of duplicate patients generated by the Initiate
"^DD",15.1,15.1,99,23,4,0)
search engine when its database is initially loaded.
"^DD",15.1,15.1,99,23,5,0)
 
"^DD",15.1,15.1,99,23,6,0)
IMDQ will later use a new option to set the field back to 0, so that email
"^DD",15.1,15.1,99,23,7,0)
messages will be generated when new entries are added to the DUPLICATE
"^DD",15.1,15.1,99,23,8,0)
RECORD file.
"^DD",15.1,15.1,99,23,9,0)
 
"^DD",15.1,15.1,99,23,10,0)
If set to null, it will behave as if the field were set to 0.
"^DD",15.1,15.1,99,23,11,0)
 
"^DD",15.1,15.1,99,23,12,0)
The value in this field does not affect the DUPLICATE RECORD MERGE 
"^DD",15.1,15.1,99,23,13,0)
options.
"^DD",15.1,15.1,99,"DT")
3080919
"BLD",2623,6)
^94
**END**
**END**
