Released SD*5.3*627 SEQ #533
Extracted from mail message
**KIDS**:SD*5.3*627^

**INSTALL NAME**
SD*5.3*627
"BLD",9291,0)
SD*5.3*627^SCHEDULING^0^3160115^y
"BLD",9291,4,0)
^9.64PA^409.85^15
"BLD",9291,4,44,0)
44
"BLD",9291,4,44,2,0)
^9.641^44.04^3
"BLD",9291,4,44,2,44,0)
HOSPITAL LOCATION  (File-top level)
"BLD",9291,4,44,2,44,1,0)
^9.6411^2^2
"BLD",9291,4,44,2,44,1,.01,0)
NAME
"BLD",9291,4,44,2,44,1,2,0)
TYPE
"BLD",9291,4,44,2,44.04,0)
PRIVILEGED USER  (sub-file)
"BLD",9291,4,44,2,44.04,1,0)
^9.6411^.01^1
"BLD",9291,4,44,2,44.04,1,.01,0)
PRIVILEGED USER
"BLD",9291,4,44,2,44.1,0)
PROVIDER  (sub-file)
"BLD",9291,4,44,2,44.1,1,0)
^9.6411^.01^1
"BLD",9291,4,44,2,44.1,1,.01,0)
PROVIDER
"BLD",9291,4,44,222)
y^y^p^^^^n^^n
"BLD",9291,4,44,224)

"BLD",9291,4,403.5,0)
403.5
"BLD",9291,4,403.5,2,0)
^9.641^403.5^1
"BLD",9291,4,403.5,2,403.5,0)
RECALL REMINDERS  (File-top level)
"BLD",9291,4,403.5,2,403.5,1,0)
^9.6411^7^2
"BLD",9291,4,403.5,2,403.5,1,7,0)
USER WHO ENTERED RECALL
"BLD",9291,4,403.5,2,403.5,1,7.5,0)
DATE/TIME RECALL ADDED
"BLD",9291,4,403.5,222)
y^y^p^^^^n^^n
"BLD",9291,4,403.5,224)

"BLD",9291,4,403.56,0)
403.56
"BLD",9291,4,403.56,2,0)
^9.641^403.56^1
"BLD",9291,4,403.56,2,403.56,0)
RECALL REMINDERS REMOVED  (File-top level)
"BLD",9291,4,403.56,2,403.56,1,0)
^9.6411^7^2
"BLD",9291,4,403.56,2,403.56,1,7,0)
USER WHO ENTERED RECALL
"BLD",9291,4,403.56,2,403.56,1,7.5,0)
DATE/TIME RECALL ADDED
"BLD",9291,4,403.56,222)
y^y^p^^^^n^^n
"BLD",9291,4,403.56,224)

"BLD",9291,4,409.3,0)
409.3
"BLD",9291,4,409.3,2,0)
^9.641^409.344^2
"BLD",9291,4,409.3,2,409.3,0)
SD WAIT LIST  (File-top level)
"BLD",9291,4,409.3,2,409.3,1,0)
^9.6411^10.5^7
"BLD",9291,4,409.3,2,409.3,1,1,0)
ORIGINATING DATE
"BLD",9291,4,409.3,2,409.3,1,8.5,0)
WL SPECIFIC HOSPITAL LOCATION
"BLD",9291,4,409.3,2,409.3,1,8.7,0)
WL APPOINTMENT TYPE
"BLD",9291,4,409.3,2,409.3,1,9,0)
ORIGINATING USER
"BLD",9291,4,409.3,2,409.3,1,9.5,0)
DATE/TIME ENTERED
"BLD",9291,4,409.3,2,409.3,1,10.5,0)
ENROLLMENT PRIORITY
"BLD",9291,4,409.3,2,409.3,1,23,0)
CURRENT STATUS
"BLD",9291,4,409.3,2,409.344,0)
PATIENT CONTACT  (sub-file)
"BLD",9291,4,409.3,2,409.344,1,0)
^9.6411^^
"BLD",9291,4,409.3,222)
y^y^p^^^^n^^n
"BLD",9291,4,409.3,224)

"BLD",9291,4,409.81,0)
409.81
"BLD",9291,4,409.81,222)
y^y^f^^^^n
"BLD",9291,4,409.822,0)
409.822
"BLD",9291,4,409.822,222)
y^y^f^^^^n
"BLD",9291,4,409.823,0)
409.823
"BLD",9291,4,409.823,222)
y^y^f^^^^n
"BLD",9291,4,409.824,0)
409.824
"BLD",9291,4,409.824,222)
y^y^f^^^^n
"BLD",9291,4,409.831,0)
409.831
"BLD",9291,4,409.831,222)
y^y^f^^^^n
"BLD",9291,4,409.832,0)
409.832
"BLD",9291,4,409.832,222)
y^y^f^^^^n
"BLD",9291,4,409.833,0)
409.833
"BLD",9291,4,409.833,222)
y^y^f^^^^n
"BLD",9291,4,409.834,0)
409.834
"BLD",9291,4,409.834,222)
y^y^f^^^^n
"BLD",9291,4,409.84,0)
409.84
"BLD",9291,4,409.84,222)
y^y^f^^^^n
"BLD",9291,4,409.845,0)
409.845
"BLD",9291,4,409.845,222)
y^y^f^^^^n
"BLD",9291,4,409.85,0)
409.85
"BLD",9291,4,409.85,222)
y^y^f^^^^n
"BLD",9291,4,"APDD",44,44)

"BLD",9291,4,"APDD",44,44,.01)

"BLD",9291,4,"APDD",44,44,2)

"BLD",9291,4,"APDD",44,44.04)

"BLD",9291,4,"APDD",44,44.04,.01)

"BLD",9291,4,"APDD",44,44.1)

"BLD",9291,4,"APDD",44,44.1,.01)

"BLD",9291,4,"APDD",403.5,403.5)

"BLD",9291,4,"APDD",403.5,403.5,7)

"BLD",9291,4,"APDD",403.5,403.5,7.5)

"BLD",9291,4,"APDD",403.56,403.56)

"BLD",9291,4,"APDD",403.56,403.56,7)

"BLD",9291,4,"APDD",403.56,403.56,7.5)

"BLD",9291,4,"APDD",409.3,409.3)

"BLD",9291,4,"APDD",409.3,409.3,1)

"BLD",9291,4,"APDD",409.3,409.3,8.5)

"BLD",9291,4,"APDD",409.3,409.3,8.7)

"BLD",9291,4,"APDD",409.3,409.3,9)

"BLD",9291,4,"APDD",409.3,409.3,9.5)

"BLD",9291,4,"APDD",409.3,409.3,10.5)

"BLD",9291,4,"APDD",409.3,409.3,23)

"BLD",9291,4,"APDD",409.3,409.344)

"BLD",9291,4,"B",44,44)

"BLD",9291,4,"B",403.5,403.5)

"BLD",9291,4,"B",403.56,403.56)

"BLD",9291,4,"B",409.3,409.3)

"BLD",9291,4,"B",409.81,409.81)

"BLD",9291,4,"B",409.822,409.822)

"BLD",9291,4,"B",409.823,409.823)

"BLD",9291,4,"B",409.824,409.824)

"BLD",9291,4,"B",409.831,409.831)

"BLD",9291,4,"B",409.832,409.832)

"BLD",9291,4,"B",409.833,409.833)

"BLD",9291,4,"B",409.834,409.834)

"BLD",9291,4,"B",409.84,409.84)

"BLD",9291,4,"B",409.845,409.845)

"BLD",9291,4,"B",409.85,409.85)

"BLD",9291,6)
48^
"BLD",9291,6.3)
249
"BLD",9291,"ABNS",0)
^9.66A^1^1
"BLD",9291,"ABNS",1,0)
SD
"BLD",9291,"ABNS",1,1,0)
^9.661A^^
"BLD",9291,"ABNS","B","SD",1)

"BLD",9291,"ABPKG")
n^n
"BLD",9291,"INIT")
POST^SDECINIT
"BLD",9291,"KRN",0)
^9.67PA^779.2^20
"BLD",9291,"KRN",.4,0)
.4
"BLD",9291,"KRN",.401,0)
.401
"BLD",9291,"KRN",.402,0)
.402
"BLD",9291,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",9291,"KRN",.402,"NM",1,0)
SDRR RECALL CARD ADD    FILE #403.5^403.5^0
"BLD",9291,"KRN",.402,"NM",2,0)
SDB    FILE #44^44^0
"BLD",9291,"KRN",.402,"NM","B","SDB    FILE #44",2)

"BLD",9291,"KRN",.402,"NM","B","SDRR RECALL CARD ADD    FILE #403.5",1)

"BLD",9291,"KRN",.403,0)
.403
"BLD",9291,"KRN",.5,0)
.5
"BLD",9291,"KRN",.84,0)
.84
"BLD",9291,"KRN",3.6,0)
3.6
"BLD",9291,"KRN",3.8,0)
3.8
"BLD",9291,"KRN",9.2,0)
9.2
"BLD",9291,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",9291,"KRN",9.8,0)
9.8
"BLD",9291,"KRN",9.8,"NM",0)
^9.68A^164^133
"BLD",9291,"KRN",9.8,"NM",1,0)
SDEC^^0^B119334331
"BLD",9291,"KRN",9.8,"NM",2,0)
SDEC01^^0^B31785408
"BLD",9291,"KRN",9.8,"NM",3,0)
SDEC02^^0^B32953550
"BLD",9291,"KRN",9.8,"NM",4,0)
SDEC03^^0^B10323049
"BLD",9291,"KRN",9.8,"NM",5,0)
SDEC04^^0^B18857087
"BLD",9291,"KRN",9.8,"NM",6,0)
SDEC05^^0^B17215588
"BLD",9291,"KRN",9.8,"NM",7,0)
SDEC06^^0^B7162903
"BLD",9291,"KRN",9.8,"NM",8,0)
SDEC07^^0^B222963350
"BLD",9291,"KRN",9.8,"NM",9,0)
SDEC07A^^0^B68824292
"BLD",9291,"KRN",9.8,"NM",10,0)
SDEC07B^^0^B38090532
"BLD",9291,"KRN",9.8,"NM",11,0)
SDEC08^^0^B196754600
"BLD",9291,"KRN",9.8,"NM",12,0)
SDEC09^^0^B40258209
"BLD",9291,"KRN",9.8,"NM",14,0)
SDEC12^^0^B29844447
"BLD",9291,"KRN",9.8,"NM",15,0)
SDEC13^^0^B12841797
"BLD",9291,"KRN",9.8,"NM",16,0)
SDEC14^^0^B7453405
"BLD",9291,"KRN",9.8,"NM",17,0)
SDEC15^^0^B4187047
"BLD",9291,"KRN",9.8,"NM",18,0)
SDEC16^^0^B47386290
"BLD",9291,"KRN",9.8,"NM",19,0)
SDEC17^^0^B1597668
"BLD",9291,"KRN",9.8,"NM",20,0)
SDEC18^^0^B103998587
"BLD",9291,"KRN",9.8,"NM",21,0)
SDEC19^^0^B8445487
"BLD",9291,"KRN",9.8,"NM",22,0)
SDEC20^^0^B5301458
"BLD",9291,"KRN",9.8,"NM",23,0)
SDEC21^^0^B7740640
"BLD",9291,"KRN",9.8,"NM",24,0)
SDEC22^^0^B7903904
"BLD",9291,"KRN",9.8,"NM",25,0)
SDEC23^^0^B8880360
"BLD",9291,"KRN",9.8,"NM",26,0)
SDEC24^^0^B8031928
"BLD",9291,"KRN",9.8,"NM",27,0)
SDEC25^^0^B107893271
"BLD",9291,"KRN",9.8,"NM",28,0)
SDEC25A^^0^B6651279
"BLD",9291,"KRN",9.8,"NM",29,0)
SDEC25B^^0^B10232111
"BLD",9291,"KRN",9.8,"NM",30,0)
SDEC26^^0^B6836926
"BLD",9291,"KRN",9.8,"NM",31,0)
SDEC27^^0^B106344952
"BLD",9291,"KRN",9.8,"NM",32,0)
SDEC28^^0^B71646964
"BLD",9291,"KRN",9.8,"NM",33,0)
SDEC29^^0^B31682392
"BLD",9291,"KRN",9.8,"NM",34,0)
SDEC30^^0^B3786070
"BLD",9291,"KRN",9.8,"NM",35,0)
SDEC31^^0^B25481973
"BLD",9291,"KRN",9.8,"NM",36,0)
SDEC32^^0^B69352136
"BLD",9291,"KRN",9.8,"NM",37,0)
SDEC33^^0^B10928495
"BLD",9291,"KRN",9.8,"NM",38,0)
SDEC34^^0^B41388078
"BLD",9291,"KRN",9.8,"NM",39,0)
SDEC35^^0^B8873158
"BLD",9291,"KRN",9.8,"NM",40,0)
SDEC36^^0^B3226334
"BLD",9291,"KRN",9.8,"NM",41,0)
SDEC37^^0^B7567190
"BLD",9291,"KRN",9.8,"NM",42,0)
SDEC38^^0^B35171696
"BLD",9291,"KRN",9.8,"NM",44,0)
SDEC40^^0^B66764561
"BLD",9291,"KRN",9.8,"NM",63,0)
SDEC44^^0^B8409964
"BLD",9291,"KRN",9.8,"NM",64,0)
SDEC45^^0^B118776780
"BLD",9291,"KRN",9.8,"NM",65,0)
SDEC46^^0^B11804599
"BLD",9291,"KRN",9.8,"NM",66,0)
SDEC47^^0^B35928564
"BLD",9291,"KRN",9.8,"NM",67,0)
SDEC48^^0^B25736375
"BLD",9291,"KRN",9.8,"NM",69,0)
SDECERR^^0^B718946
"BLD",9291,"KRN",9.8,"NM",70,0)
SDECUTL^^0^B57837892
"BLD",9291,"KRN",9.8,"NM",71,0)
SDECWL^^0^B53903000
"BLD",9291,"KRN",9.8,"NM",72,0)
SDECPTCX^^0^B4715537
"BLD",9291,"KRN",9.8,"NM",73,0)
SDECPTPC^^0^B160453
"BLD",9291,"KRN",9.8,"NM",74,0)
SDECWL1^^0^B116385737
"BLD",9291,"KRN",9.8,"NM",75,0)
SDECWL2^^0^B102907164
"BLD",9291,"KRN",9.8,"NM",76,0)
SDECPTPL^^0^B13347416
"BLD",9291,"KRN",9.8,"NM",77,0)
SDECRT^^0^B5803317
"BLD",9291,"KRN",9.8,"NM",78,0)
SDECRT0^^0^B18723369
"BLD",9291,"KRN",9.8,"NM",79,0)
SDECU^^0^B22991058
"BLD",9291,"KRN",9.8,"NM",80,0)
SDECU2^^0^B28139017
"BLD",9291,"KRN",9.8,"NM",81,0)
SDECINIT^^0^B30544543
"BLD",9291,"KRN",9.8,"NM",82,0)
SDECRPC^^0^B6073216
"BLD",9291,"KRN",9.8,"NM",83,0)
SDECPAT^^0^B3637810
"BLD",9291,"KRN",9.8,"NM",84,0)
SDECPAT1^^0^B1134752
"BLD",9291,"KRN",9.8,"NM",85,0)
SDECPAT2^^0^B255586
"BLD",9291,"KRN",9.8,"NM",86,0)
SDECPAT3^^0^B6176667
"BLD",9291,"KRN",9.8,"NM",87,0)
SDECPAT4^^0^B9974559
"BLD",9291,"KRN",9.8,"NM",88,0)
SDECF^^0^B5042632
"BLD",9291,"KRN",9.8,"NM",89,0)
SDECF2^^0^B1878114
"BLD",9291,"KRN",9.8,"NM",90,0)
SDECRT1^^0^B72713204
"BLD",9291,"KRN",9.8,"NM",91,0)
SDECRT2^^0^B4377091
"BLD",9291,"KRN",9.8,"NM",92,0)
SDEC49^^0^B57319976
"BLD",9291,"KRN",9.8,"NM",93,0)
SDEC50^^0^B81989355
"BLD",9291,"KRN",9.8,"NM",94,0)
SDEC51^^0^B124307281
"BLD",9291,"KRN",9.8,"NM",95,0)
SDEC52^^0^B134090636
"BLD",9291,"KRN",9.8,"NM",96,0)
SDEC52A^^0^B49259718
"BLD",9291,"KRN",9.8,"NM",100,0)
SDECAPI^^0^B60453354
"BLD",9291,"KRN",9.8,"NM",101,0)
SDECAPI4^^0^B83504203
"BLD",9291,"KRN",9.8,"NM",102,0)
SDECV^^0^B107508145
"BLD",9291,"KRN",9.8,"NM",106,0)
SDECFUNC^^0^B8710927
"BLD",9291,"KRN",9.8,"NM",107,0)
SDECDIQ1^^0^B23533098
"BLD",9291,"KRN",9.8,"NM",108,0)
SDECSFGR^^0^B2111835
"BLD",9291,"KRN",9.8,"NM",109,0)
SDECNEW^^0^B4856106
"BLD",9291,"KRN",9.8,"NM",110,0)
SDEC53^^0^B19046849
"BLD",9291,"KRN",9.8,"NM",111,0)
SDRRISRU^^0^B14287203
"BLD",9291,"KRN",9.8,"NM",113,0)
SDEC54^^0^B197526561
"BLD",9291,"KRN",9.8,"NM",115,0)
SDECPT^^0^B2478759
"BLD",9291,"KRN",9.8,"NM",117,0)
SDEC54A^^0^B18379020
"BLD",9291,"KRN",9.8,"NM",118,0)
SDEC55^^0^B16588920
"BLD",9291,"KRN",9.8,"NM",119,0)
SDECALV^^0^B21735458
"BLD",9291,"KRN",9.8,"NM",120,0)
SDECALV1^^0^B23447725
"BLD",9291,"KRN",9.8,"NM",121,0)
SDECEKL^^0^B3200595
"BLD",9291,"KRN",9.8,"NM",122,0)
SDM1A^^0^B121204157
"BLD",9291,"KRN",9.8,"NM",123,0)
SDAM2^^0^B30803018
"BLD",9291,"KRN",9.8,"NM",124,0)
SDAPIAP^^0^B10732233
"BLD",9291,"KRN",9.8,"NM",125,0)
SDCODEL^^0^B11313917
"BLD",9291,"KRN",9.8,"NM",126,0)
SDN^^0^B32745405
"BLD",9291,"KRN",9.8,"NM",127,0)
SDCNP0^^0^B40198602
"BLD",9291,"KRN",9.8,"NM",128,0)
SDAMWI1^^0^B14489968
"BLD",9291,"KRN",9.8,"NM",129,0)
SDEC56^^0^B35889062
"BLD",9291,"KRN",9.8,"NM",130,0)
SDECALVR^^0^B5946964
"BLD",9291,"KRN",9.8,"NM",131,0)
SDECINI1^^0^B187190488
"BLD",9291,"KRN",9.8,"NM",132,0)
SDECINI2^^0^B137379509
"BLD",9291,"KRN",9.8,"NM",133,0)
SDECUTL1^^0^B111920247
"BLD",9291,"KRN",9.8,"NM",134,0)
SDB1^^0^B24033507
"BLD",9291,"KRN",9.8,"NM",135,0)
SDECUTL2^^0^B135475615
"BLD",9291,"KRN",9.8,"NM",136,0)
SDB^^0^B18505043
"BLD",9291,"KRN",9.8,"NM",137,0)
SDEC55A^^0^B79593054
"BLD",9291,"KRN",9.8,"NM",138,0)
SDECLOC^^0^B4435373
"BLD",9291,"KRN",9.8,"NM",140,0)
SDECAR^^0^B56209815
"BLD",9291,"KRN",9.8,"NM",141,0)
SDECAR1^^0^B118549716
"BLD",9291,"KRN",9.8,"NM",142,0)
SDECAR2^^0^B118404786
"BLD",9291,"KRN",9.8,"NM",143,0)
SDECWL3^^0^B12297706
"BLD",9291,"KRN",9.8,"NM",144,0)
SDECIDX^^0^B43106825
"BLD",9291,"KRN",9.8,"NM",145,0)
SDECRMG^^0^B157648695
"BLD",9291,"KRN",9.8,"NM",146,0)
SDECRMG1^^0^B130816452
"BLD",9291,"KRN",9.8,"NM",147,0)
SDECRMG2^^0^B65998765
"BLD",9291,"KRN",9.8,"NM",148,0)
SDWLPL^^0^B39936287
"BLD",9291,"KRN",9.8,"NM",149,0)
SDCNSLT^^0^B41631358
"BLD",9291,"KRN",9.8,"NM",150,0)
SDECLK^^0^B9204662
"BLD",9291,"KRN",9.8,"NM",151,0)
SDEC01A^^0^B81925987
"BLD",9291,"KRN",9.8,"NM",152,0)
SDEC52B^^0^B20509023
"BLD",9291,"KRN",9.8,"NM",153,0)
SDECDIS^^0^B9266353
"BLD",9291,"KRN",9.8,"NM",154,0)
SDECDEV^^0^B4544261
"BLD",9291,"KRN",9.8,"NM",155,0)
SDC^^0^B27637649
"BLD",9291,"KRN",9.8,"NM",156,0)
SDECGMR^^0^B946861
"BLD",9291,"KRN",9.8,"NM",157,0)
SDNACT^^0^B32382178
"BLD",9291,"KRN",9.8,"NM",158,0)
SDREACT^^0^B21351976
"BLD",9291,"KRN",9.8,"NM",159,0)
SDECUT1A^^0^B65268393
"BLD",9291,"KRN",9.8,"NM",160,0)
SDEC01B^^0^B44978361
"BLD",9291,"KRN",9.8,"NM",161,0)
SDCO1^^0^B32537404
"BLD",9291,"KRN",9.8,"NM",162,0)
SDAUT2^^0^B42702600
"BLD",9291,"KRN",9.8,"NM",163,0)
SDEC57^^0^B39358442
"BLD",9291,"KRN",9.8,"NM",164,0)
SDEC57A^^0^B103325420
"BLD",9291,"KRN",9.8,"NM","B","SDAM2",123)

"BLD",9291,"KRN",9.8,"NM","B","SDAMWI1",128)

"BLD",9291,"KRN",9.8,"NM","B","SDAPIAP",124)

"BLD",9291,"KRN",9.8,"NM","B","SDAUT2",162)

"BLD",9291,"KRN",9.8,"NM","B","SDB",136)

"BLD",9291,"KRN",9.8,"NM","B","SDB1",134)

"BLD",9291,"KRN",9.8,"NM","B","SDC",155)

"BLD",9291,"KRN",9.8,"NM","B","SDCNP0",127)

"BLD",9291,"KRN",9.8,"NM","B","SDCNSLT",149)

"BLD",9291,"KRN",9.8,"NM","B","SDCO1",161)

"BLD",9291,"KRN",9.8,"NM","B","SDCODEL",125)

"BLD",9291,"KRN",9.8,"NM","B","SDEC",1)

"BLD",9291,"KRN",9.8,"NM","B","SDEC01",2)

"BLD",9291,"KRN",9.8,"NM","B","SDEC01A",151)

"BLD",9291,"KRN",9.8,"NM","B","SDEC01B",160)

"BLD",9291,"KRN",9.8,"NM","B","SDEC02",3)

"BLD",9291,"KRN",9.8,"NM","B","SDEC03",4)

"BLD",9291,"KRN",9.8,"NM","B","SDEC04",5)

"BLD",9291,"KRN",9.8,"NM","B","SDEC05",6)

"BLD",9291,"KRN",9.8,"NM","B","SDEC06",7)

"BLD",9291,"KRN",9.8,"NM","B","SDEC07",8)

"BLD",9291,"KRN",9.8,"NM","B","SDEC07A",9)

"BLD",9291,"KRN",9.8,"NM","B","SDEC07B",10)

"BLD",9291,"KRN",9.8,"NM","B","SDEC08",11)

"BLD",9291,"KRN",9.8,"NM","B","SDEC09",12)

"BLD",9291,"KRN",9.8,"NM","B","SDEC12",14)

"BLD",9291,"KRN",9.8,"NM","B","SDEC13",15)

"BLD",9291,"KRN",9.8,"NM","B","SDEC14",16)

"BLD",9291,"KRN",9.8,"NM","B","SDEC15",17)

"BLD",9291,"KRN",9.8,"NM","B","SDEC16",18)

"BLD",9291,"KRN",9.8,"NM","B","SDEC17",19)

"BLD",9291,"KRN",9.8,"NM","B","SDEC18",20)

"BLD",9291,"KRN",9.8,"NM","B","SDEC19",21)

"BLD",9291,"KRN",9.8,"NM","B","SDEC20",22)

"BLD",9291,"KRN",9.8,"NM","B","SDEC21",23)

"BLD",9291,"KRN",9.8,"NM","B","SDEC22",24)

"BLD",9291,"KRN",9.8,"NM","B","SDEC23",25)

"BLD",9291,"KRN",9.8,"NM","B","SDEC24",26)

"BLD",9291,"KRN",9.8,"NM","B","SDEC25",27)

"BLD",9291,"KRN",9.8,"NM","B","SDEC25A",28)

"BLD",9291,"KRN",9.8,"NM","B","SDEC25B",29)

"BLD",9291,"KRN",9.8,"NM","B","SDEC26",30)

"BLD",9291,"KRN",9.8,"NM","B","SDEC27",31)

"BLD",9291,"KRN",9.8,"NM","B","SDEC28",32)

"BLD",9291,"KRN",9.8,"NM","B","SDEC29",33)

"BLD",9291,"KRN",9.8,"NM","B","SDEC30",34)

"BLD",9291,"KRN",9.8,"NM","B","SDEC31",35)

"BLD",9291,"KRN",9.8,"NM","B","SDEC32",36)

"BLD",9291,"KRN",9.8,"NM","B","SDEC33",37)

"BLD",9291,"KRN",9.8,"NM","B","SDEC34",38)

"BLD",9291,"KRN",9.8,"NM","B","SDEC35",39)

"BLD",9291,"KRN",9.8,"NM","B","SDEC36",40)

"BLD",9291,"KRN",9.8,"NM","B","SDEC37",41)

"BLD",9291,"KRN",9.8,"NM","B","SDEC38",42)

"BLD",9291,"KRN",9.8,"NM","B","SDEC40",44)

"BLD",9291,"KRN",9.8,"NM","B","SDEC44",63)

"BLD",9291,"KRN",9.8,"NM","B","SDEC45",64)

"BLD",9291,"KRN",9.8,"NM","B","SDEC46",65)

"BLD",9291,"KRN",9.8,"NM","B","SDEC47",66)

"BLD",9291,"KRN",9.8,"NM","B","SDEC48",67)

"BLD",9291,"KRN",9.8,"NM","B","SDEC49",92)

"BLD",9291,"KRN",9.8,"NM","B","SDEC50",93)

"BLD",9291,"KRN",9.8,"NM","B","SDEC51",94)

"BLD",9291,"KRN",9.8,"NM","B","SDEC52",95)

"BLD",9291,"KRN",9.8,"NM","B","SDEC52A",96)

"BLD",9291,"KRN",9.8,"NM","B","SDEC52B",152)

"BLD",9291,"KRN",9.8,"NM","B","SDEC53",110)

"BLD",9291,"KRN",9.8,"NM","B","SDEC54",113)

"BLD",9291,"KRN",9.8,"NM","B","SDEC54A",117)

"BLD",9291,"KRN",9.8,"NM","B","SDEC55",118)

"BLD",9291,"KRN",9.8,"NM","B","SDEC55A",137)

"BLD",9291,"KRN",9.8,"NM","B","SDEC56",129)

"BLD",9291,"KRN",9.8,"NM","B","SDEC57",163)

"BLD",9291,"KRN",9.8,"NM","B","SDEC57A",164)

"BLD",9291,"KRN",9.8,"NM","B","SDECALV",119)

"BLD",9291,"KRN",9.8,"NM","B","SDECALV1",120)

"BLD",9291,"KRN",9.8,"NM","B","SDECALVR",130)

"BLD",9291,"KRN",9.8,"NM","B","SDECAPI",100)

"BLD",9291,"KRN",9.8,"NM","B","SDECAPI4",101)

"BLD",9291,"KRN",9.8,"NM","B","SDECAR",140)

"BLD",9291,"KRN",9.8,"NM","B","SDECAR1",141)

"BLD",9291,"KRN",9.8,"NM","B","SDECAR2",142)

"BLD",9291,"KRN",9.8,"NM","B","SDECDEV",154)

"BLD",9291,"KRN",9.8,"NM","B","SDECDIQ1",107)

"BLD",9291,"KRN",9.8,"NM","B","SDECDIS",153)

"BLD",9291,"KRN",9.8,"NM","B","SDECEKL",121)

"BLD",9291,"KRN",9.8,"NM","B","SDECERR",69)

"BLD",9291,"KRN",9.8,"NM","B","SDECF",88)

"BLD",9291,"KRN",9.8,"NM","B","SDECF2",89)

"BLD",9291,"KRN",9.8,"NM","B","SDECFUNC",106)

"BLD",9291,"KRN",9.8,"NM","B","SDECGMR",156)

"BLD",9291,"KRN",9.8,"NM","B","SDECIDX",144)

"BLD",9291,"KRN",9.8,"NM","B","SDECINI1",131)

"BLD",9291,"KRN",9.8,"NM","B","SDECINI2",132)

"BLD",9291,"KRN",9.8,"NM","B","SDECINIT",81)

"BLD",9291,"KRN",9.8,"NM","B","SDECLK",150)

"BLD",9291,"KRN",9.8,"NM","B","SDECLOC",138)

"BLD",9291,"KRN",9.8,"NM","B","SDECNEW",109)

"BLD",9291,"KRN",9.8,"NM","B","SDECPAT",83)

"BLD",9291,"KRN",9.8,"NM","B","SDECPAT1",84)

"BLD",9291,"KRN",9.8,"NM","B","SDECPAT2",85)

"BLD",9291,"KRN",9.8,"NM","B","SDECPAT3",86)

"BLD",9291,"KRN",9.8,"NM","B","SDECPAT4",87)

"BLD",9291,"KRN",9.8,"NM","B","SDECPT",115)

"BLD",9291,"KRN",9.8,"NM","B","SDECPTCX",72)

"BLD",9291,"KRN",9.8,"NM","B","SDECPTPC",73)

"BLD",9291,"KRN",9.8,"NM","B","SDECPTPL",76)

"BLD",9291,"KRN",9.8,"NM","B","SDECRMG",145)

"BLD",9291,"KRN",9.8,"NM","B","SDECRMG1",146)

"BLD",9291,"KRN",9.8,"NM","B","SDECRMG2",147)

"BLD",9291,"KRN",9.8,"NM","B","SDECRPC",82)

"BLD",9291,"KRN",9.8,"NM","B","SDECRT",77)

"BLD",9291,"KRN",9.8,"NM","B","SDECRT0",78)

"BLD",9291,"KRN",9.8,"NM","B","SDECRT1",90)

"BLD",9291,"KRN",9.8,"NM","B","SDECRT2",91)

"BLD",9291,"KRN",9.8,"NM","B","SDECSFGR",108)

"BLD",9291,"KRN",9.8,"NM","B","SDECU",79)

"BLD",9291,"KRN",9.8,"NM","B","SDECU2",80)

"BLD",9291,"KRN",9.8,"NM","B","SDECUT1A",159)

"BLD",9291,"KRN",9.8,"NM","B","SDECUTL",70)

"BLD",9291,"KRN",9.8,"NM","B","SDECUTL1",133)

"BLD",9291,"KRN",9.8,"NM","B","SDECUTL2",135)

"BLD",9291,"KRN",9.8,"NM","B","SDECV",102)

"BLD",9291,"KRN",9.8,"NM","B","SDECWL",71)

"BLD",9291,"KRN",9.8,"NM","B","SDECWL1",74)

"BLD",9291,"KRN",9.8,"NM","B","SDECWL2",75)

"BLD",9291,"KRN",9.8,"NM","B","SDECWL3",143)

"BLD",9291,"KRN",9.8,"NM","B","SDM1A",122)

"BLD",9291,"KRN",9.8,"NM","B","SDN",126)

"BLD",9291,"KRN",9.8,"NM","B","SDNACT",157)

"BLD",9291,"KRN",9.8,"NM","B","SDREACT",158)

"BLD",9291,"KRN",9.8,"NM","B","SDRRISRU",111)

"BLD",9291,"KRN",9.8,"NM","B","SDWLPL",148)

"BLD",9291,"KRN",19,0)
19
"BLD",9291,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",9291,"KRN",19,"NM",1,0)
SDECRPC^^0
"BLD",9291,"KRN",19,"NM",2,0)
SDEC IDX REFRESH^^0
"BLD",9291,"KRN",19,"NM",3,0)
SDEC ACCESS BLOCK MAINTENANCE^^0
"BLD",9291,"KRN",19,"NM","B","SDEC ACCESS BLOCK MAINTENANCE",3)

"BLD",9291,"KRN",19,"NM","B","SDEC IDX REFRESH",2)

"BLD",9291,"KRN",19,"NM","B","SDECRPC",1)

"BLD",9291,"KRN",19.1,0)
19.1
"BLD",9291,"KRN",19.1,"NM",0)
^9.68A^3^3
"BLD",9291,"KRN",19.1,"NM",1,0)
SDECZMENU^^0
"BLD",9291,"KRN",19.1,"NM",2,0)
SDECZMGR^^0
"BLD",9291,"KRN",19.1,"NM",3,0)
SDECZ REQUEST^^0
"BLD",9291,"KRN",19.1,"NM","B","SDECZ REQUEST",3)

"BLD",9291,"KRN",19.1,"NM","B","SDECZMENU",1)

"BLD",9291,"KRN",19.1,"NM","B","SDECZMGR",2)

"BLD",9291,"KRN",101,0)
101
"BLD",9291,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",9291,"KRN",101,"NM",1,0)
SDEC ADD APPOINTMENT^^0
"BLD",9291,"KRN",101,"NM",2,0)
SDEC CANCEL APPOINTMENT^^0
"BLD",9291,"KRN",101,"NM",3,0)
SDEC CHECKIN APPOINTMENT^^0
"BLD",9291,"KRN",101,"NM",4,0)
SDEC NOSHOW APPOINTMENT^^0
"BLD",9291,"KRN",101,"NM","B","SDEC ADD APPOINTMENT",1)

"BLD",9291,"KRN",101,"NM","B","SDEC CANCEL APPOINTMENT",2)

"BLD",9291,"KRN",101,"NM","B","SDEC CHECKIN APPOINTMENT",3)

"BLD",9291,"KRN",101,"NM","B","SDEC NOSHOW APPOINTMENT",4)

"BLD",9291,"KRN",409.61,0)
409.61
"BLD",9291,"KRN",771,0)
771
"BLD",9291,"KRN",779.2,0)
779.2
"BLD",9291,"KRN",870,0)
870
"BLD",9291,"KRN",8989.51,0)
8989.51
"BLD",9291,"KRN",8989.52,0)
8989.52
"BLD",9291,"KRN",8994,0)
8994
"BLD",9291,"KRN",8994,"NM",0)
^9.68A^140^140
"BLD",9291,"KRN",8994,"NM",1,0)
SDEC ACCGPTYG^^0
"BLD",9291,"KRN",8994,"NM",2,0)
SDEC ACCGROUP^^0
"BLD",9291,"KRN",8994,"NM",3,0)
SDEC ACCTYPE^^0
"BLD",9291,"KRN",8994,"NM",4,0)
SDEC ADDACCG^^0
"BLD",9291,"KRN",8994,"NM",5,0)
SDEC ADDACCTY^^0
"BLD",9291,"KRN",8994,"NM",6,0)
SDEC ADDAGI^^0
"BLD",9291,"KRN",8994,"NM",7,0)
SDEC ADDRES^^0
"BLD",9291,"KRN",8994,"NM",8,0)
SDEC ADDRESU^^0
"BLD",9291,"KRN",8994,"NM",9,0)
SDEC ADDRG^^0
"BLD",9291,"KRN",8994,"NM",10,0)
SDEC ADDRGI^^0
"BLD",9291,"KRN",8994,"NM",11,0)
SDEC APBLKALL^^0
"BLD",9291,"KRN",8994,"NM",12,0)
SDEC APBLKOV^^0
"BLD",9291,"KRN",8994,"NM",13,0)
SDEC APPADD^^0
"BLD",9291,"KRN",8994,"NM",14,0)
SDEC APPDEL^^0
"BLD",9291,"KRN",8994,"NM",15,0)
SDEC APPTEVLG^^0
"BLD",9291,"KRN",8994,"NM",16,0)
SDEC APPTLETR^^0
"BLD",9291,"KRN",8994,"NM",17,0)
SDEC AVADD^^0
"BLD",9291,"KRN",8994,"NM",18,0)
SDEC AVDEL^^0
"BLD",9291,"KRN",8994,"NM",19,0)
SDEC AVDELDT^^0
"BLD",9291,"KRN",8994,"NM",20,0)
SDEC CANCKOUT^^0
"BLD",9291,"KRN",8994,"NM",21,0)
SDEC CANREAS^^0
"BLD",9291,"KRN",8994,"NM",22,0)
SDEC CHECKIN^^0
"BLD",9291,"KRN",8994,"NM",23,0)
SDEC CHECKOUT^^0
"BLD",9291,"KRN",8994,"NM",24,0)
SDEC CLINALL^^0
"BLD",9291,"KRN",8994,"NM",25,0)
SDEC CLINCAN^^0
"BLD",9291,"KRN",8994,"NM",26,0)
SDEC CLINDIS^^0
"BLD",9291,"KRN",8994,"NM",27,0)
SDEC CLINDISW^^0
"BLD",9291,"KRN",8994,"NM",28,0)
SDEC CLINLET^^0
"BLD",9291,"KRN",8994,"NM",29,0)
SDEC CLINLETW^^0
"BLD",9291,"KRN",8994,"NM",30,0)
SDEC CLINPROV^^0
"BLD",9291,"KRN",8994,"NM",31,0)
SDEC CLINSET^^0
"BLD",9291,"KRN",8994,"NM",32,0)
SDEC CLINSTOP^^0
"BLD",9291,"KRN",8994,"NM",33,0)
SDEC COPYAPPT^^0
"BLD",9291,"KRN",8994,"NM",34,0)
SDEC CPCANC^^0
"BLD",9291,"KRN",8994,"NM",35,0)
SDEC CPSTAT^^0
"BLD",9291,"KRN",8994,"NM",36,0)
SDEC CRSCHED^^0
"BLD",9291,"KRN",8994,"NM",37,0)
SDEC CSLOTSCH^^0
"BLD",9291,"KRN",8994,"NM",38,0)
SDEC CURFACG^^0
"BLD",9291,"KRN",8994,"NM",39,0)
SDEC CVARAPPT^^0
"BLD",9291,"KRN",8994,"NM",40,0)
SDEC DELAG^^0
"BLD",9291,"KRN",8994,"NM",41,0)
SDEC DELAGI^^0
"BLD",9291,"KRN",8994,"NM",42,0)
SDEC DELRESGP^^0
"BLD",9291,"KRN",8994,"NM",43,0)
SDEC DELRGI^^0
"BLD",9291,"KRN",8994,"NM",44,0)
SDEC DELRU^^0
"BLD",9291,"KRN",8994,"NM",45,0)
SDEC EDITAPPT^^0
"BLD",9291,"KRN",8994,"NM",46,0)
SDEC EHRPT^^0
"BLD",9291,"KRN",8994,"NM",47,0)
SDEC GETFAC^^0
"BLD",9291,"KRN",8994,"NM",48,0)
SDEC GETREGA^^0
"BLD",9291,"KRN",8994,"NM",49,0)
SDEC HLTHSUMM^^0
"BLD",9291,"KRN",8994,"NM",50,0)
SDEC HOLIDAY^^0
"BLD",9291,"KRN",8994,"NM",51,0)
SDEC HOSPLOC^^0
"BLD",9291,"KRN",8994,"NM",52,0)
SDEC IMHERE^^0
"BLD",9291,"KRN",8994,"NM",53,0)
SDEC NEWPERS^^0
"BLD",9291,"KRN",8994,"NM",54,0)
SDEC NOSHOPAT^^0
"BLD",9291,"KRN",8994,"NM",55,0)
SDEC NOSHOW^^0
"BLD",9291,"KRN",8994,"NM",56,0)
SDEC OVBOOK^^0
"BLD",9291,"KRN",8994,"NM",57,0)
SDEC PATAPPTD^^0
"BLD",9291,"KRN",8994,"NM",58,0)
SDEC PATAPPTH^^0
"BLD",9291,"KRN",8994,"NM",59,0)
SDEC PROVALL^^0
"BLD",9291,"KRN",8994,"NM",60,0)
SDEC PROVCLIN^^0
"BLD",9291,"KRN",8994,"NM",61,0)
SDEC PTLOOKRS^^0
"BLD",9291,"KRN",8994,"NM",62,0)
SDEC PWH^^0
"BLD",9291,"KRN",8994,"NM",63,0)
SDEC RAISEVNT^^0
"BLD",9291,"KRN",8994,"NM",64,0)
SDEC REBKCLIN^^0
"BLD",9291,"KRN",8994,"NM",65,0)
SDEC REBKLIST^^0
"BLD",9291,"KRN",8994,"NM",66,0)
SDEC REBKNEXT^^0
"BLD",9291,"KRN",8994,"NM",67,0)
SDEC REGEVENT^^0
"BLD",9291,"KRN",8994,"NM",68,0)
SDEC RESGPUSR^^0
"BLD",9291,"KRN",8994,"NM",69,0)
SDEC RESGRPUS^^0
"BLD",9291,"KRN",8994,"NM",70,0)
SDEC RESLETRF^^0
"BLD",9291,"KRN",8994,"NM",71,0)
SDEC RESLETRS^^0
"BLD",9291,"KRN",8994,"NM",72,0)
SDEC RESOURCE^^0
"BLD",9291,"KRN",8994,"NM",73,0)
SDEC RESUSER^^0
"BLD",9291,"KRN",8994,"NM",74,0)
SDEC SEARCHAV^^0
"BLD",9291,"KRN",8994,"NM",75,0)
SDEC SETFAC^^0
"BLD",9291,"KRN",8994,"NM",76,0)
SDEC SETRBOOK^^0
"BLD",9291,"KRN",8994,"NM",77,0)
SDEC SPACEBAR^^0
"BLD",9291,"KRN",8994,"NM",78,0)
SDEC SUSRINFO^^0
"BLD",9291,"KRN",8994,"NM",79,0)
SDEC SVSPALL^^0
"BLD",9291,"KRN",8994,"NM",80,0)
SDEC SYSSTAT^^0
"BLD",9291,"KRN",8994,"NM",81,0)
SDEC TPBLKOV^^0
"BLD",9291,"KRN",8994,"NM",82,0)
SDEC UNDOCANA^^0
"BLD",9291,"KRN",8994,"NM",83,0)
SDEC UNREGEV^^0
"BLD",9291,"KRN",8994,"NM",84,0)
SDEC WAITLIST^^0
"BLD",9291,"KRN",8994,"NM",85,0)
SDEC WLCLOSE^^0
"BLD",9291,"KRN",8994,"NM",86,0)
SDEC WLGET^^0
"BLD",9291,"KRN",8994,"NM",87,0)
SDEC WLSET^^0
"BLD",9291,"KRN",8994,"NM",88,0)
SDEC APPTYPES^^0
"BLD",9291,"KRN",8994,"NM",89,0)
SDEC SCHUSR^^0
"BLD",9291,"KRN",8994,"NM",90,0)
SDEC PREFGET^^0
"BLD",9291,"KRN",8994,"NM",91,0)
SDEC PREFGETV^^0
"BLD",9291,"KRN",8994,"NM",92,0)
SDEC PREFSET^^0
"BLD",9291,"KRN",8994,"NM",93,0)
SDEC FAPPTGET^^0
"BLD",9291,"KRN",8994,"NM",94,0)
SDEC REQGET^^0
"BLD",9291,"KRN",8994,"NM",95,0)
SDEC RECAPGET^^0
"BLD",9291,"KRN",8994,"NM",96,0)
SDEC RECDSET^^0
"BLD",9291,"KRN",8994,"NM",97,0)
SDEC RECGET^^0
"BLD",9291,"KRN",8994,"NM",98,0)
SDEC RECPRGET^^0
"BLD",9291,"KRN",8994,"NM",99,0)
SDEC RECSET^^0
"BLD",9291,"KRN",8994,"NM",100,0)
SDEC PCSTGET^^0
"BLD",9291,"KRN",8994,"NM",101,0)
SDEC PCST2GET^^0
"BLD",9291,"KRN",8994,"NM",102,0)
SDEC PCSGET^^0
"BLD",9291,"KRN",8994,"NM",103,0)
SDEC PTSET^^0
"BLD",9291,"KRN",8994,"NM",104,0)
SDEC SUMMGET^^0
"BLD",9291,"KRN",8994,"NM",105,0)
SDEC PTINQ^^0
"BLD",9291,"KRN",8994,"NM",106,0)
SDEC SUMMAGET^^0
"BLD",9291,"KRN",8994,"NM",107,0)
SDEC ETHGET^^0
"BLD",9291,"KRN",8994,"NM",108,0)
SDEC CGET^^0
"BLD",9291,"KRN",8994,"NM",109,0)
SDEC ETHCMGET^^0
"BLD",9291,"KRN",8994,"NM",110,0)
SDEC RACEGET^^0
"BLD",9291,"KRN",8994,"NM",111,0)
SDEC REP1GET^^0
"BLD",9291,"KRN",8994,"NM",112,0)
SDEC WLPCSET^^0
"BLD",9291,"KRN",8994,"NM",113,0)
SDEC APPIDGET^^0
"BLD",9291,"KRN",8994,"NM",114,0)
SDEC FACLIST^^0
"BLD",9291,"KRN",8994,"NM",115,0)
SDEC APPSDGET^^0
"BLD",9291,"KRN",8994,"NM",116,0)
SDEC WLOPEN^^0
"BLD",9291,"KRN",8994,"NM",117,0)
SDECLOC PRIVLOC^^0
"BLD",9291,"KRN",8994,"NM",118,0)
SDEC ARCLOSE^^0
"BLD",9291,"KRN",8994,"NM",119,0)
SDEC ARDGET^^0
"BLD",9291,"KRN",8994,"NM",120,0)
SDEC ARGET^^0
"BLD",9291,"KRN",8994,"NM",121,0)
SDEC ARMRTGET^^0
"BLD",9291,"KRN",8994,"NM",122,0)
SDEC ARMRTSET^^0
"BLD",9291,"KRN",8994,"NM",123,0)
SDEC AROPEN^^0
"BLD",9291,"KRN",8994,"NM",124,0)
SDEC ARPCSET^^0
"BLD",9291,"KRN",8994,"NM",125,0)
SDEC ARSET^^0
"BLD",9291,"KRN",8994,"NM",126,0)
SDECRMG RECCNT^^0
"BLD",9291,"KRN",8994,"NM",127,0)
SDECRMG RMG^^0
"BLD",9291,"KRN",8994,"NM",128,0)
SDECIDX GETREC^^0
"BLD",9291,"KRN",8994,"NM",129,0)
SDECIDX RECCNT^^0
"BLD",9291,"KRN",8994,"NM",130,0)
SDEC WLHIDE^^0
"BLD",9291,"KRN",8994,"NM",131,0)
SDEC HIDE^^0
"BLD",9291,"KRN",8994,"NM",132,0)
SDECLOC UPDPRIV^^0
"BLD",9291,"KRN",8994,"NM",133,0)
SDECAR ARMRTC^^0
"BLD",9291,"KRN",8994,"NM",134,0)
SDECRMG2 URGENCY^^0
"BLD",9291,"KRN",8994,"NM",135,0)
SDECAR ARAPPT^^0
"BLD",9291,"KRN",8994,"NM",136,0)
SDECLK LOCK^^0
"BLD",9291,"KRN",8994,"NM",137,0)
SDECLK UNLOCK^^0
"BLD",9291,"KRN",8994,"NM",138,0)
SDEC PRIV^^0
"BLD",9291,"KRN",8994,"NM",139,0)
SDECDIS DISABIL^^0
"BLD",9291,"KRN",8994,"NM",140,0)
SDECDEV DEVICE^^0
"BLD",9291,"KRN",8994,"NM","B","SDEC ACCGPTYG",1)

"BLD",9291,"KRN",8994,"NM","B","SDEC ACCGROUP",2)

"BLD",9291,"KRN",8994,"NM","B","SDEC ACCTYPE",3)

"BLD",9291,"KRN",8994,"NM","B","SDEC ADDACCG",4)

"BLD",9291,"KRN",8994,"NM","B","SDEC ADDACCTY",5)

"BLD",9291,"KRN",8994,"NM","B","SDEC ADDAGI",6)

"BLD",9291,"KRN",8994,"NM","B","SDEC ADDRES",7)

"BLD",9291,"KRN",8994,"NM","B","SDEC ADDRESU",8)

"BLD",9291,"KRN",8994,"NM","B","SDEC ADDRG",9)

"BLD",9291,"KRN",8994,"NM","B","SDEC ADDRGI",10)

"BLD",9291,"KRN",8994,"NM","B","SDEC APBLKALL",11)

"BLD",9291,"KRN",8994,"NM","B","SDEC APBLKOV",12)

"BLD",9291,"KRN",8994,"NM","B","SDEC APPADD",13)

"BLD",9291,"KRN",8994,"NM","B","SDEC APPDEL",14)

"BLD",9291,"KRN",8994,"NM","B","SDEC APPIDGET",113)

"BLD",9291,"KRN",8994,"NM","B","SDEC APPSDGET",115)

"BLD",9291,"KRN",8994,"NM","B","SDEC APPTEVLG",15)

"BLD",9291,"KRN",8994,"NM","B","SDEC APPTLETR",16)

"BLD",9291,"KRN",8994,"NM","B","SDEC APPTYPES",88)

"BLD",9291,"KRN",8994,"NM","B","SDEC ARCLOSE",118)

"BLD",9291,"KRN",8994,"NM","B","SDEC ARDGET",119)

"BLD",9291,"KRN",8994,"NM","B","SDEC ARGET",120)

"BLD",9291,"KRN",8994,"NM","B","SDEC ARMRTGET",121)

"BLD",9291,"KRN",8994,"NM","B","SDEC ARMRTSET",122)

"BLD",9291,"KRN",8994,"NM","B","SDEC AROPEN",123)

"BLD",9291,"KRN",8994,"NM","B","SDEC ARPCSET",124)

"BLD",9291,"KRN",8994,"NM","B","SDEC ARSET",125)

"BLD",9291,"KRN",8994,"NM","B","SDEC AVADD",17)

"BLD",9291,"KRN",8994,"NM","B","SDEC AVDEL",18)

"BLD",9291,"KRN",8994,"NM","B","SDEC AVDELDT",19)

"BLD",9291,"KRN",8994,"NM","B","SDEC CANCKOUT",20)

"BLD",9291,"KRN",8994,"NM","B","SDEC CANREAS",21)

"BLD",9291,"KRN",8994,"NM","B","SDEC CGET",108)

"BLD",9291,"KRN",8994,"NM","B","SDEC CHECKIN",22)

"BLD",9291,"KRN",8994,"NM","B","SDEC CHECKOUT",23)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINALL",24)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINCAN",25)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINDIS",26)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINDISW",27)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINLET",28)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINLETW",29)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINPROV",30)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINSET",31)

"BLD",9291,"KRN",8994,"NM","B","SDEC CLINSTOP",32)

"BLD",9291,"KRN",8994,"NM","B","SDEC COPYAPPT",33)

"BLD",9291,"KRN",8994,"NM","B","SDEC CPCANC",34)

"BLD",9291,"KRN",8994,"NM","B","SDEC CPSTAT",35)

"BLD",9291,"KRN",8994,"NM","B","SDEC CRSCHED",36)

"BLD",9291,"KRN",8994,"NM","B","SDEC CSLOTSCH",37)

"BLD",9291,"KRN",8994,"NM","B","SDEC CURFACG",38)

"BLD",9291,"KRN",8994,"NM","B","SDEC CVARAPPT",39)

"BLD",9291,"KRN",8994,"NM","B","SDEC DELAG",40)

"BLD",9291,"KRN",8994,"NM","B","SDEC DELAGI",41)

"BLD",9291,"KRN",8994,"NM","B","SDEC DELRESGP",42)

"BLD",9291,"KRN",8994,"NM","B","SDEC DELRGI",43)

"BLD",9291,"KRN",8994,"NM","B","SDEC DELRU",44)

"BLD",9291,"KRN",8994,"NM","B","SDEC EDITAPPT",45)

"BLD",9291,"KRN",8994,"NM","B","SDEC EHRPT",46)

"BLD",9291,"KRN",8994,"NM","B","SDEC ETHCMGET",109)

"BLD",9291,"KRN",8994,"NM","B","SDEC ETHGET",107)

"BLD",9291,"KRN",8994,"NM","B","SDEC FACLIST",114)

"BLD",9291,"KRN",8994,"NM","B","SDEC FAPPTGET",93)

"BLD",9291,"KRN",8994,"NM","B","SDEC GETFAC",47)

"BLD",9291,"KRN",8994,"NM","B","SDEC GETREGA",48)

"BLD",9291,"KRN",8994,"NM","B","SDEC HIDE",131)

"BLD",9291,"KRN",8994,"NM","B","SDEC HLTHSUMM",49)

"BLD",9291,"KRN",8994,"NM","B","SDEC HOLIDAY",50)

"BLD",9291,"KRN",8994,"NM","B","SDEC HOSPLOC",51)

"BLD",9291,"KRN",8994,"NM","B","SDEC IMHERE",52)

"BLD",9291,"KRN",8994,"NM","B","SDEC NEWPERS",53)

"BLD",9291,"KRN",8994,"NM","B","SDEC NOSHOPAT",54)

"BLD",9291,"KRN",8994,"NM","B","SDEC NOSHOW",55)

"BLD",9291,"KRN",8994,"NM","B","SDEC OVBOOK",56)

"BLD",9291,"KRN",8994,"NM","B","SDEC PATAPPTD",57)

"BLD",9291,"KRN",8994,"NM","B","SDEC PATAPPTH",58)

"BLD",9291,"KRN",8994,"NM","B","SDEC PCSGET",102)

"BLD",9291,"KRN",8994,"NM","B","SDEC PCST2GET",101)

"BLD",9291,"KRN",8994,"NM","B","SDEC PCSTGET",100)

"BLD",9291,"KRN",8994,"NM","B","SDEC PREFGET",90)

"BLD",9291,"KRN",8994,"NM","B","SDEC PREFGETV",91)

"BLD",9291,"KRN",8994,"NM","B","SDEC PREFSET",92)

"BLD",9291,"KRN",8994,"NM","B","SDEC PRIV",138)

"BLD",9291,"KRN",8994,"NM","B","SDEC PROVALL",59)

"BLD",9291,"KRN",8994,"NM","B","SDEC PROVCLIN",60)

"BLD",9291,"KRN",8994,"NM","B","SDEC PTINQ",105)

"BLD",9291,"KRN",8994,"NM","B","SDEC PTLOOKRS",61)

"BLD",9291,"KRN",8994,"NM","B","SDEC PTSET",103)

"BLD",9291,"KRN",8994,"NM","B","SDEC PWH",62)

"BLD",9291,"KRN",8994,"NM","B","SDEC RACEGET",110)

"BLD",9291,"KRN",8994,"NM","B","SDEC RAISEVNT",63)

"BLD",9291,"KRN",8994,"NM","B","SDEC REBKCLIN",64)

"BLD",9291,"KRN",8994,"NM","B","SDEC REBKLIST",65)

"BLD",9291,"KRN",8994,"NM","B","SDEC REBKNEXT",66)

"BLD",9291,"KRN",8994,"NM","B","SDEC RECAPGET",95)

"BLD",9291,"KRN",8994,"NM","B","SDEC RECDSET",96)

"BLD",9291,"KRN",8994,"NM","B","SDEC RECGET",97)

"BLD",9291,"KRN",8994,"NM","B","SDEC RECPRGET",98)

"BLD",9291,"KRN",8994,"NM","B","SDEC RECSET",99)

"BLD",9291,"KRN",8994,"NM","B","SDEC REGEVENT",67)

"BLD",9291,"KRN",8994,"NM","B","SDEC REP1GET",111)

"BLD",9291,"KRN",8994,"NM","B","SDEC REQGET",94)

"BLD",9291,"KRN",8994,"NM","B","SDEC RESGPUSR",68)

"BLD",9291,"KRN",8994,"NM","B","SDEC RESGRPUS",69)

"BLD",9291,"KRN",8994,"NM","B","SDEC RESLETRF",70)

"BLD",9291,"KRN",8994,"NM","B","SDEC RESLETRS",71)

"BLD",9291,"KRN",8994,"NM","B","SDEC RESOURCE",72)

"BLD",9291,"KRN",8994,"NM","B","SDEC RESUSER",73)

"BLD",9291,"KRN",8994,"NM","B","SDEC SCHUSR",89)

"BLD",9291,"KRN",8994,"NM","B","SDEC SEARCHAV",74)

"BLD",9291,"KRN",8994,"NM","B","SDEC SETFAC",75)

"BLD",9291,"KRN",8994,"NM","B","SDEC SETRBOOK",76)

"BLD",9291,"KRN",8994,"NM","B","SDEC SPACEBAR",77)

"BLD",9291,"KRN",8994,"NM","B","SDEC SUMMAGET",106)

"BLD",9291,"KRN",8994,"NM","B","SDEC SUMMGET",104)

"BLD",9291,"KRN",8994,"NM","B","SDEC SUSRINFO",78)

"BLD",9291,"KRN",8994,"NM","B","SDEC SVSPALL",79)

"BLD",9291,"KRN",8994,"NM","B","SDEC SYSSTAT",80)

"BLD",9291,"KRN",8994,"NM","B","SDEC TPBLKOV",81)

"BLD",9291,"KRN",8994,"NM","B","SDEC UNDOCANA",82)

"BLD",9291,"KRN",8994,"NM","B","SDEC UNREGEV",83)

"BLD",9291,"KRN",8994,"NM","B","SDEC WAITLIST",84)

"BLD",9291,"KRN",8994,"NM","B","SDEC WLCLOSE",85)

"BLD",9291,"KRN",8994,"NM","B","SDEC WLGET",86)

"BLD",9291,"KRN",8994,"NM","B","SDEC WLHIDE",130)

"BLD",9291,"KRN",8994,"NM","B","SDEC WLOPEN",116)

"BLD",9291,"KRN",8994,"NM","B","SDEC WLPCSET",112)

"BLD",9291,"KRN",8994,"NM","B","SDEC WLSET",87)

"BLD",9291,"KRN",8994,"NM","B","SDECAR ARAPPT",135)

"BLD",9291,"KRN",8994,"NM","B","SDECAR ARMRTC",133)

"BLD",9291,"KRN",8994,"NM","B","SDECDEV DEVICE",140)

"BLD",9291,"KRN",8994,"NM","B","SDECDIS DISABIL",139)

"BLD",9291,"KRN",8994,"NM","B","SDECIDX GETREC",128)

"BLD",9291,"KRN",8994,"NM","B","SDECIDX RECCNT",129)

"BLD",9291,"KRN",8994,"NM","B","SDECLK LOCK",136)

"BLD",9291,"KRN",8994,"NM","B","SDECLK UNLOCK",137)

"BLD",9291,"KRN",8994,"NM","B","SDECLOC PRIVLOC",117)

"BLD",9291,"KRN",8994,"NM","B","SDECLOC UPDPRIV",132)

"BLD",9291,"KRN",8994,"NM","B","SDECRMG RECCNT",126)

"BLD",9291,"KRN",8994,"NM","B","SDECRMG RMG",127)

"BLD",9291,"KRN",8994,"NM","B","SDECRMG2 URGENCY",134)

"BLD",9291,"KRN","B",.4,.4)

"BLD",9291,"KRN","B",.401,.401)

"BLD",9291,"KRN","B",.402,.402)

"BLD",9291,"KRN","B",.403,.403)

"BLD",9291,"KRN","B",.5,.5)

"BLD",9291,"KRN","B",.84,.84)

"BLD",9291,"KRN","B",3.6,3.6)

"BLD",9291,"KRN","B",3.8,3.8)

"BLD",9291,"KRN","B",9.2,9.2)

"BLD",9291,"KRN","B",9.8,9.8)

"BLD",9291,"KRN","B",19,19)

"BLD",9291,"KRN","B",19.1,19.1)

"BLD",9291,"KRN","B",101,101)

"BLD",9291,"KRN","B",409.61,409.61)

"BLD",9291,"KRN","B",771,771)

"BLD",9291,"KRN","B",779.2,779.2)

"BLD",9291,"KRN","B",870,870)

"BLD",9291,"KRN","B",8989.51,8989.51)

"BLD",9291,"KRN","B",8989.52,8989.52)

"BLD",9291,"KRN","B",8994,8994)

"BLD",9291,"QDEF")
^^^^^^^^^^
"BLD",9291,"QUES",0)
^9.62^2^2
"BLD",9291,"QUES",1,0)
POS1 NIGHTJOB
"BLD",9291,"QUES",1,1)
DA^N::T
"BLD",9291,"QUES",1,"A")
ENTER the date and time to start the schedule of the SDEC IDX REFRESH nightly job: 
"BLD",9291,"QUES",1,"B")
T+1@0200
"BLD",9291,"QUES",1,"Q")
Enter a date and time
"BLD",9291,"QUES",1,"QQ")
This is the date/time of the first nightly job.  The job will run at this time every night.
"BLD",9291,"QUES",2,0)
POS2 NOWJOB
"BLD",9291,"QUES",2,1)
YA
"BLD",9291,"QUES",2,"A")
Do you want to schedule the SDEC IDX REFRESH option to run now? 
"BLD",9291,"QUES",2,"B")
Y
"BLD",9291,"QUES",2,"Q")
Enter Y for yes or N for no
"BLD",9291,"QUES",2,"QQ")
Enter Y for yes or N for no
"BLD",9291,"QUES","B","POS1 NIGHTJOB",1)

"BLD",9291,"QUES","B","POS2 NOWJOB",2)

"BLD",9291,"REQB",0)
^9.611^16^16
"BLD",9291,"REQB",1,0)
SD*5.3*132^1
"BLD",9291,"REQB",2,0)
SD*5.3*257^1
"BLD",9291,"REQB",3,0)
SD*5.3*446^1
"BLD",9291,"REQB",4,0)
SD*5.3*478^1
"BLD",9291,"REQB",5,0)
SD*5.3*536^1
"BLD",9291,"REQB",6,0)
SD*5.3*544^1
"BLD",9291,"REQB",7,0)
SD*5.3*567^1
"BLD",9291,"REQB",8,0)
SD*5.3*568^1
"BLD",9291,"REQB",9,0)
SD*5.3*592^1
"BLD",9291,"REQB",10,0)
SD*5.3*622^1
"BLD",9291,"REQB",11,0)
SD*5.3*582^1
"BLD",9291,"REQB",12,0)
SD*5.3*635^1
"BLD",9291,"REQB",13,0)
SD*5.3*630^1
"BLD",9291,"REQB",14,0)
SD*5.3*586^1
"BLD",9291,"REQB",15,0)
SD*5.3*545^1
"BLD",9291,"REQB",16,0)
GMRC*3.0*83^1
"BLD",9291,"REQB","B","GMRC*3.0*83",16)

"BLD",9291,"REQB","B","SD*5.3*132",1)

"BLD",9291,"REQB","B","SD*5.3*257",2)

"BLD",9291,"REQB","B","SD*5.3*446",3)

"BLD",9291,"REQB","B","SD*5.3*478",4)

"BLD",9291,"REQB","B","SD*5.3*536",5)

"BLD",9291,"REQB","B","SD*5.3*544",6)

"BLD",9291,"REQB","B","SD*5.3*545",15)

"BLD",9291,"REQB","B","SD*5.3*567",7)

"BLD",9291,"REQB","B","SD*5.3*568",8)

"BLD",9291,"REQB","B","SD*5.3*582",11)

"BLD",9291,"REQB","B","SD*5.3*586",14)

"BLD",9291,"REQB","B","SD*5.3*592",9)

"BLD",9291,"REQB","B","SD*5.3*622",10)

"BLD",9291,"REQB","B","SD*5.3*630",13)

"BLD",9291,"REQB","B","SD*5.3*635",12)

"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^y^p^^^^n^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
5.3^SD
"FIA",44,44)
1
"FIA",44,44,.01)

"FIA",44,44,2)

"FIA",44,44,2501)

"FIA",44,44,2600)

"FIA",44,44.04)
1
"FIA",44,44.04,.01)

"FIA",44,44.1)
1
"FIA",44,44.1,.01)

"FIA",403.5)
RECALL REMINDERS
"FIA",403.5,0)
^SD(403.5,
"FIA",403.5,0,0)
403.5IP
"FIA",403.5,0,1)
y^y^p^^^^n^^n
"FIA",403.5,0,10)

"FIA",403.5,0,11)

"FIA",403.5,0,"RLRO")

"FIA",403.5,0,"VR")
5.3^SD
"FIA",403.5,403.5)
1
"FIA",403.5,403.5,7)

"FIA",403.5,403.5,7.5)

"FIA",403.56)
RECALL REMINDERS REMOVED
"FIA",403.56,0)
^SD(403.56,
"FIA",403.56,0,0)
403.56P
"FIA",403.56,0,1)
y^y^p^^^^n^^n
"FIA",403.56,0,10)

"FIA",403.56,0,11)

"FIA",403.56,0,"RLRO")

"FIA",403.56,0,"VR")
5.3^SD
"FIA",403.56,403.56)
1
"FIA",403.56,403.56,7)

"FIA",403.56,403.56,7.5)

"FIA",409.3)
SD WAIT LIST
"FIA",409.3,0)
^SDWL(409.3,
"FIA",409.3,0,0)
409.3IP
"FIA",409.3,0,1)
y^y^p^^^^n^^n
"FIA",409.3,0,10)

"FIA",409.3,0,11)

"FIA",409.3,0,"RLRO")

"FIA",409.3,0,"VR")
5.3^SD
"FIA",409.3,409.3)
1
"FIA",409.3,409.3,1)

"FIA",409.3,409.3,8.5)

"FIA",409.3,409.3,8.7)

"FIA",409.3,409.3,9)

"FIA",409.3,409.3,9.5)

"FIA",409.3,409.3,10.5)

"FIA",409.3,409.3,23)

"FIA",409.3,409.3,44)

"FIA",409.3,409.344)
0
"FIA",409.81)
SDEC APPLICATION
"FIA",409.81,0)
^SDEC(409.81,
"FIA",409.81,0,0)
409.81
"FIA",409.81,0,1)
y^y^f^^^^n
"FIA",409.81,0,10)

"FIA",409.81,0,11)

"FIA",409.81,0,"RLRO")

"FIA",409.81,0,"VR")
5.3^SD
"FIA",409.81,409.81)
0
"FIA",409.822)
SDEC ACCESS GROUP
"FIA",409.822,0)
^SDEC(409.822,
"FIA",409.822,0,0)
409.822
"FIA",409.822,0,1)
y^y^f^^^^n
"FIA",409.822,0,10)

"FIA",409.822,0,11)

"FIA",409.822,0,"RLRO")

"FIA",409.822,0,"VR")
5.3^SD
"FIA",409.822,409.822)
0
"FIA",409.823)
SDEC ACCESS TYPE
"FIA",409.823,0)
^SDEC(409.823,
"FIA",409.823,0,0)
409.823
"FIA",409.823,0,1)
y^y^f^^^^n
"FIA",409.823,0,10)

"FIA",409.823,0,11)

"FIA",409.823,0,"RLRO")

"FIA",409.823,0,"VR")
5.3^SD
"FIA",409.823,409.823)
0
"FIA",409.824)
SDEC ACCESS GROUP TYPE
"FIA",409.824,0)
^SDEC(409.824,
"FIA",409.824,0,0)
409.824P
"FIA",409.824,0,1)
y^y^f^^^^n
"FIA",409.824,0,10)

"FIA",409.824,0,11)

"FIA",409.824,0,"RLRO")

"FIA",409.824,0,"VR")
5.3^SD
"FIA",409.824,409.824)
0
"FIA",409.831)
SDEC RESOURCE
"FIA",409.831,0)
^SDEC(409.831,
"FIA",409.831,0,0)
409.831
"FIA",409.831,0,1)
y^y^f^^^^n
"FIA",409.831,0,10)

"FIA",409.831,0,11)

"FIA",409.831,0,"RLRO")

"FIA",409.831,0,"VR")
5.3^SD
"FIA",409.831,409.831)
0
"FIA",409.831,409.8311)
0
"FIA",409.831,409.8311201)
0
"FIA",409.831,409.8311301)
0
"FIA",409.831,409.8312001)
0
"FIA",409.832)
SDEC RESOURCE GROUP
"FIA",409.832,0)
^SDEC(409.832,
"FIA",409.832,0,0)
409.832
"FIA",409.832,0,1)
y^y^f^^^^n
"FIA",409.832,0,10)

"FIA",409.832,0,11)

"FIA",409.832,0,"RLRO")

"FIA",409.832,0,"VR")
5.3^SD
"FIA",409.832,409.832)
0
"FIA",409.832,409.8321)
0
"FIA",409.833)
SDEC RESOURCE USER
"FIA",409.833,0)
^SDEC(409.833,
"FIA",409.833,0,0)
409.833P
"FIA",409.833,0,1)
y^y^f^^^^n
"FIA",409.833,0,10)

"FIA",409.833,0,11)

"FIA",409.833,0,"RLRO")

"FIA",409.833,0,"VR")
5.3^SD
"FIA",409.833,409.833)
0
"FIA",409.834)
SDEC ADDITIONAL RESOURCE
"FIA",409.834,0)
^SDEC(409.834,
"FIA",409.834,0,0)
409.834
"FIA",409.834,0,1)
y^y^f^^^^n
"FIA",409.834,0,10)

"FIA",409.834,0,11)

"FIA",409.834,0,"RLRO")

"FIA",409.834,0,"VR")
5.3^SD
"FIA",409.834,409.834)
0
"FIA",409.84)
SDEC APPOINTMENT
"FIA",409.84,0)
^SDEC(409.84,
"FIA",409.84,0,0)
409.84D
"FIA",409.84,0,1)
y^y^f^^^^n
"FIA",409.84,0,10)

"FIA",409.84,0,11)

"FIA",409.84,0,"RLRO")

"FIA",409.84,0,"VR")
5.3^SD
"FIA",409.84,409.84)
0
"FIA",409.84,409.841)
0
"FIA",409.845)
SDEC PREFERENCES AND SPECIAL NEEDS
"FIA",409.845,0)
^SDEC(409.845,
"FIA",409.845,0,0)
409.845P
"FIA",409.845,0,1)
y^y^f^^^^n
"FIA",409.845,0,10)

"FIA",409.845,0,11)

"FIA",409.845,0,"RLRO")

"FIA",409.845,0,"VR")
5.3^SD
"FIA",409.845,409.845)
0
"FIA",409.845,409.8451)
0
"FIA",409.845,409.84516)
0
"FIA",409.85)
SDEC APPT REQUEST
"FIA",409.85,0)
^SDEC(409.85,
"FIA",409.85,0,0)
409.85P
"FIA",409.85,0,1)
y^y^f^^^^n
"FIA",409.85,0,10)

"FIA",409.85,0,11)

"FIA",409.85,0,"RLRO")

"FIA",409.85,0,"VR")
5.3^SD
"FIA",409.85,409.85)
0
"FIA",409.85,409.851)
0
"FIA",409.85,409.852)
0
"FIA",409.85,409.8544)
0
"INIT")
POST^SDECINIT
"IX",44,44,"AG",0)
44^AG^Index by TYPE and NAME.^R^^R^IR^I^44^^^^^S
"IX",44,44,"AG",.1,0)
^^1^1^3151208
"IX",44,44,"AG",.1,1,0)
This cross reference is used to sort by TYPE and NAME.
"IX",44,44,"AG",1)
S ^SC("AG",X(1),X(2),DA)=""
"IX",44,44,"AG",2)
K ^SC("AG",X(1),X(2),DA)
"IX",44,44,"AG",2.5)
K ^SC("AG")
"IX",44,44,"AG",11.1,0)
^.114IA^2^2
"IX",44,44,"AG",11.1,1,0)
1^F^44^2^^1^F
"IX",44,44,"AG",11.1,2,0)
2^F^44^.01^^2^F
"IX",403.5,403.5,"AC",0)
403.5^AC^Index by DATE/TIME RECALL ADDED and USER WHO ENTERED RECALL^R^^R^IR^I^403.5^^^^^S
"IX",403.5,403.5,"AC",.1,0)
^^2^2^3151208
"IX",403.5,403.5,"AC",.1,1,0)
This cross reference is used to sort by DATE/TIME RECALL ADDED
"IX",403.5,403.5,"AC",.1,2,0)
and USER WHO ENTERED RECALL.
"IX",403.5,403.5,"AC",1)
S ^SD(403.5,"AC",X(1),X(2),DA)=""
"IX",403.5,403.5,"AC",2)
K ^SD(403.5,"AC",X(1),X(2),DA)
"IX",403.5,403.5,"AC",2.5)
K ^SD(403.5,"AC")
"IX",403.5,403.5,"AC",11.1,0)
^.114IA^2^2
"IX",403.5,403.5,"AC",11.1,1,0)
1^F^403.5^7.5^^1^F
"IX",403.5,403.5,"AC",11.1,2,0)
2^F^403.5^7^^2^F
"IX",403.56,403.56,"AC",0)
403.56^AC^Index by DATE/TIME RECALL ADDED and USER WHO ENTERED RECALL^R^^R^IR^I^403.56^^^^^S
"IX",403.56,403.56,"AC",.1,0)
^^2^2^3151208
"IX",403.56,403.56,"AC",.1,1,0)
This cross reference is used to sort by DATE/TIME RECALL ADDED
"IX",403.56,403.56,"AC",.1,2,0)
and USER WHO ENTERED RECALL.
"IX",403.56,403.56,"AC",1)
S ^SD(403.56,"AC",X(1),X(2),DA)=""
"IX",403.56,403.56,"AC",2)
K ^SD(403.56,"AC",X(1),X(2),DA)
"IX",403.56,403.56,"AC",2.5)
K ^SD(403.56,"AC")
"IX",403.56,403.56,"AC",11.1,0)
^.114IA^2^2
"IX",403.56,403.56,"AC",11.1,1,0)
1^F^403.56^7.5^^1^F
"IX",403.56,403.56,"AC",11.1,2,0)
2^F^403.56^7^^2^F
"IX",409.3,409.3,"AC",0)
409.3^AC^Index by ORIGINATING DATE and ORIGINATING USER^R^^R^IR^I^409.3^^^^^S
"IX",409.3,409.3,"AC",.1,0)
^^2^2^3151208
"IX",409.3,409.3,"AC",.1,1,0)
This cross reference is used to sort by ORIGINATING DATE and
"IX",409.3,409.3,"AC",.1,2,0)
ORIGINATING USER.
"IX",409.3,409.3,"AC",1)
S ^SDWL(409.3,"AC",X(1),X(2),DA)=""
"IX",409.3,409.3,"AC",2)
K ^SDWL(409.3,"AC",X(1),X(2),DA)
"IX",409.3,409.3,"AC",2.5)
K ^SDWL(409.3,"AC")
"IX",409.3,409.3,"AC",11.1,0)
^.114IA^2^2
"IX",409.3,409.3,"AC",11.1,1,0)
1^F^409.3^9.5^^1^F
"IX",409.3,409.3,"AC",11.1,2,0)
2^F^409.3^9^^2^F
"IX",409.3,409.3,"AD",0)
409.3^AD^Index by PATIENT and WL SPECIFIC HOSPITAL LOCATION^R^^R^IR^I^409.3^^^^^S
"IX",409.3,409.3,"AD",.1,0)
^^2^2^3151208
"IX",409.3,409.3,"AD",.1,1,0)
This cross reference is used to sort by PATIENT and
"IX",409.3,409.3,"AD",.1,2,0)
WL SPECIFIC HOSPITAL LOCATION.
"IX",409.3,409.3,"AD",1)
S ^SDWL(409.3,"AD",X(1),X(2),DA)=""
"IX",409.3,409.3,"AD",2)
K ^SDWL(409.3,"AD",X(1),X(2),DA)
"IX",409.3,409.3,"AD",2.5)
K ^SDWL(409.3,"AD")
"IX",409.3,409.3,"AD",11.1,0)
^.114IA^2^2
"IX",409.3,409.3,"AD",11.1,1,0)
1^F^409.3^.01^^1^F
"IX",409.3,409.3,"AD",11.1,2,0)
2^F^409.3^8.5^^2^F
"IX",409.831,409.831,"AC",0)
409.831^AC^Index of RESOURCE TYPE^MU^^R^IR^I^409.831^^^^^S
"IX",409.831,409.831,"AC",.1,0)
^^5^5^3151208
"IX",409.831,409.831,"AC",.1,1,0)
This cross-reference is built from both pieces of the
"IX",409.831,409.831,"AC",.1,2,0)
RESOURCE TYPE variable pointer field to speed up the
"IX",409.831,409.831,"AC",.1,3,0)
sorting of resources when given a specific source and ID.
"IX",409.831,409.831,"AC",.1,4,0)
The sources could be HOSPITAL LOCATION, NEW PERSON, or SDEC
"IX",409.831,409.831,"AC",.1,5,0)
ADDITIONAL RESOURCE.
"IX",409.831,409.831,"AC",1)
D RTS^SDEC03(DA,X) Q
"IX",409.831,409.831,"AC",2)
D RTK^SDEC03(DA,X) Q
"IX",409.831,409.831,"AC",2.5)
K ^SDEC(409.831,"AC")
"IX",409.831,409.831,"AC",11.1,0)
^.114IA^2^2
"IX",409.831,409.831,"AC",11.1,1,0)
1^F^409.831^.012^^1^F
"IX",409.831,409.831,"AC",11.1,2,0)
2^F^409.831^.012^^2^F
"IX",409.833,409.833,"AD",0)
409.833^AD^Index by RESOURCENAME and USERNAME.^R^^R^IR^I^409.833^^^^^S
"IX",409.833,409.833,"AD",.1,0)
^^1^1^3151208
"IX",409.833,409.833,"AD",.1,1,0)
This cross reference is used to sort by RESOURCENAME and USERNAME.
"IX",409.833,409.833,"AD",1)
S ^SDEC(409.833,"AD",X(1),X(2),DA)=""
"IX",409.833,409.833,"AD",2)
K ^SDEC(409.833,"AD",X(1),X(2),DA)
"IX",409.833,409.833,"AD",2.5)
K ^SDEC(409.833,"AD")
"IX",409.833,409.833,"AD",11.1,0)
^.114IA^2^2
"IX",409.833,409.833,"AD",11.1,1,0)
1^F^409.833^.01^^1^F
"IX",409.833,409.833,"AD",11.1,2,0)
2^F^409.833^.02^^2^F
"IX",409.85,409.85,"AC",0)
409.85^AC^Index by CREATE DATE and ORIGINATING USER^R^^R^IR^I^409.85^^^^^S
"IX",409.85,409.85,"AC",.1,0)
^^2^2^3151208
"IX",409.85,409.85,"AC",.1,1,0)
This cross reference is used to sort by CREATE DATE and
"IX",409.85,409.85,"AC",.1,2,0)
ORIGINATING USER.
"IX",409.85,409.85,"AC",1)
S ^SDEC(409.85,"AC",X(1),X(2),DA)=""
"IX",409.85,409.85,"AC",2)
K ^SDEC(409.85,"AC",X(1),X(2),DA)
"IX",409.85,409.85,"AC",2.5)
K ^SDEC(409.85,"AC")
"IX",409.85,409.85,"AC",11.1,0)
^.114IA^2^2
"IX",409.85,409.85,"AC",11.1,1,0)
1^F^409.85^9.5^^1^F
"IX",409.85,409.85,"AC",11.1,2,0)
2^F^409.85^9^^2^F
"IX",409.85,409.85,"E",0)
409.85^E^Index by CURRENT STATUS and CREATE DATE.^R^^R^IR^I^409.85^^^^^S
"IX",409.85,409.85,"E",.1,0)
^^1^1^3151208
"IX",409.85,409.85,"E",.1,1,0)
This cross reference is used to sort by CURRENT STATUS and CREATE DATE.
"IX",409.85,409.85,"E",1)
S ^SDEC(409.85,"E",X(1),X(2),DA)=""
"IX",409.85,409.85,"E",2)
K ^SDEC(409.85,"E",X(1),X(2),DA)
"IX",409.85,409.85,"E",2.5)
K ^SDEC(409.85,"E")
"IX",409.85,409.85,"E",11.1,0)
^.114IA^2^2
"IX",409.85,409.85,"E",11.1,1,0)
1^F^409.85^23^^1^F
"IX",409.85,409.85,"E",11.1,2,0)
2^F^409.85^1^^2^F
"KRN",.402,485,-1)
0^2
"KRN",.402,485,0)
SDB^3150804.1251^^44^^^3150828
"KRN",.402,485,"%D",0)
^.4021^1^1^3150628^^
"KRN",.402,485,"%D",1,0)
 
"KRN",.402,485,"AR",44,1122)
1^SDBT6
"KRN",.402,485,"DIAB",1,1,44.03,0)
ALL
"KRN",.402,485,"DIAB",1,1,44.04,0)
ALL
"KRN",.402,485,"DIAB",5,0,44,0)
61;"ALLOW DIRECT PATIENT SCHEDULING?"
"KRN",.402,485,"DR",1,44)
.01;1;60;2504//Y;61ALLOW DIRECT PATIENT SCHEDULING?~;62;9;2502;S:X'["Y" Y="@05";2502.5;@05;S:$S('$D(^DG(43,1,"GL")):1,$D(^DG(43,1,"GL"))&('$P(^DG(43,1,"GL"),"^",2)):1,1:0) Y="@10";
"KRN",.402,485,"DR",1,44,1)
3.5//^S X=+$O(^DG(40.8,0)),X=$S($D(^(X,0)):$P(^(0),"^"),1:"");@10;8;2507//REGULAR;2802;99;S:X="" $P(^SC(DA,99.1),"^",1)="",Y="@15";99.1;@15;2000;2000.5//YES;2508;2509;2510;2511;24;2600;2801;2700;30;2001;2002;
"KRN",.402,485,"DR",1,44,2)
S:+$O(^SC(DA,"ST",0))>0 Y="@25";1914;@25;2003;2005;1918.5;2503;2500;S:X'="Y" Y="@30";2501;@30;10;1916;1918;1910;1912;I '$D(SDLA) S SDLA=X;1913;S:+$O(^SC(DA,"ST",0))>0 Y="@99";1917//4;@99;
"KRN",.402,485,"DR",2,44.03)
.01
"KRN",.402,485,"DR",2,44.04)
.01
"KRN",.402,485,"DR",2,44.1)
.01;.02;
"KRN",.402,485,"DR",2,44.11)
.01;.02;
"KRN",.402,485,"ROU")
^SDBT
"KRN",.402,485,"ROUOLD")
SDBT
"KRN",.402,1759,-1)
0^1
"KRN",.402,1759,0)
SDRR RECALL CARD ADD^3150628.0307^^403.5^^^3150330
"KRN",.402,1759,"DR",1,403.5)
.01;@05;5;5.5;@01;4;S SDFLAG=$$SCREEN^SDRRUTL;S:SDFLAG="" Y="@01";S:$G(SDFLAG)<1 Y="@99";4.5;S:'$$SCREEN1^SDRRUTL Y="@05";4.7;3;2.6;2.5;7////^S X=DUZ;7.5//^S X=$E($$NOW^XLFDT,1,12);@99;I $D(SDFLAG),SDFLAG="" S SDDIK="";
"KRN",.402,1759,"DR",1,403.5,1)
I $D(SDFLAG),SDFLAG=0 S SDDIK=DA;
"KRN",19,11531,-1)
0^1
"KRN",19,11531,0)
SDECRPC^CLINICAL SCHEDULING PROCEDURE CALLS^^B^^^^^^^^
"KRN",19,11531,1,0)
^^2^2^3140724^
"KRN",19,11531,1,1,0)
This option hosts RPCs in the SDEC namespace.  CLINICAL SCHEDULING users 
"KRN",19,11531,1,2,0)
must have access to this option in order to use CLINICAL SCHEDULING.
"KRN",19,11531,99.1)
63560,44455
"KRN",19,11531,"RPC",0)
^19.05P^151^151
"KRN",19,11531,"RPC",1,0)
SDEC ACCGPTYG
"KRN",19,11531,"RPC",2,0)
SDEC ACCGROUP
"KRN",19,11531,"RPC",3,0)
SDEC ACCTYPE
"KRN",19,11531,"RPC",4,0)
SDEC ADDACCG
"KRN",19,11531,"RPC",5,0)
SDEC ADDACCTY
"KRN",19,11531,"RPC",6,0)
SDEC ADDAGI
"KRN",19,11531,"RPC",7,0)
SDEC ADDRES
"KRN",19,11531,"RPC",8,0)
SDEC ADDRESU
"KRN",19,11531,"RPC",9,0)
SDEC ADDRG
"KRN",19,11531,"RPC",10,0)
SDEC ADDRGI
"KRN",19,11531,"RPC",11,0)
SDEC APBLKALL
"KRN",19,11531,"RPC",12,0)
SDEC APBLKOV
"KRN",19,11531,"RPC",13,0)
SDEC APPADD
"KRN",19,11531,"RPC",14,0)
SDEC APPDEL
"KRN",19,11531,"RPC",15,0)
SDEC APPTEVLG
"KRN",19,11531,"RPC",16,0)
SDEC APPTLETR
"KRN",19,11531,"RPC",17,0)
SDEC APPTYPES
"KRN",19,11531,"RPC",18,0)
SDEC AVADD
"KRN",19,11531,"RPC",19,0)
SDEC AVDEL
"KRN",19,11531,"RPC",20,0)
SDEC AVDELDT
"KRN",19,11531,"RPC",21,0)
SDEC CANCKOUT
"KRN",19,11531,"RPC",22,0)
SDEC CANREAS
"KRN",19,11531,"RPC",23,0)
SDEC CHECKIN
"KRN",19,11531,"RPC",24,0)
SDEC CHECKOUT
"KRN",19,11531,"RPC",25,0)
SDEC CLINALL
"KRN",19,11531,"RPC",26,0)
SDEC CLINCAN
"KRN",19,11531,"RPC",27,0)
SDEC CLINDIS
"KRN",19,11531,"RPC",28,0)
SDEC CLINDISW
"KRN",19,11531,"RPC",29,0)
SDEC CLINLET
"KRN",19,11531,"RPC",30,0)
SDEC CLINLETW
"KRN",19,11531,"RPC",31,0)
SDEC CLINPROV
"KRN",19,11531,"RPC",32,0)
SDEC CLINSET
"KRN",19,11531,"RPC",33,0)
SDEC CLINSTOP
"KRN",19,11531,"RPC",34,0)
SDEC COPYAPPT
"KRN",19,11531,"RPC",35,0)
SDEC CPCANC
"KRN",19,11531,"RPC",36,0)
SDEC CPSTAT
"KRN",19,11531,"RPC",37,0)
SDEC CRSCHED
"KRN",19,11531,"RPC",38,0)
SDEC CSLOTSCH
"KRN",19,11531,"RPC",39,0)
SDEC CURFACG
"KRN",19,11531,"RPC",40,0)
SDEC CVARAPPT
"KRN",19,11531,"RPC",41,0)
SDEC DELAG
"KRN",19,11531,"RPC",42,0)
SDEC DELAGI
"KRN",19,11531,"RPC",43,0)
SDEC DELRESGP
"KRN",19,11531,"RPC",44,0)
SDEC DELRGI
"KRN",19,11531,"RPC",45,0)
SDEC DELRU
"KRN",19,11531,"RPC",46,0)
SDEC EDITAPPT
"KRN",19,11531,"RPC",47,0)
SDEC EHRPT
"KRN",19,11531,"RPC",48,0)
SDEC GETFAC
"KRN",19,11531,"RPC",49,0)
SDEC GETREGA
"KRN",19,11531,"RPC",50,0)
SDEC HLTHSUMM
"KRN",19,11531,"RPC",51,0)
SDEC HOLIDAY
"KRN",19,11531,"RPC",52,0)
SDEC HOSPLOC
"KRN",19,11531,"RPC",53,0)
SDEC IMHERE
"KRN",19,11531,"RPC",54,0)
SDEC NEWPERS
"KRN",19,11531,"RPC",55,0)
SDEC NOSHOPAT
"KRN",19,11531,"RPC",56,0)
SDEC NOSHOW
"KRN",19,11531,"RPC",57,0)
SDEC OVBOOK
"KRN",19,11531,"RPC",58,0)
SDEC PATAPPTD
"KRN",19,11531,"RPC",59,0)
SDEC PATAPPTH
"KRN",19,11531,"RPC",60,0)
SDEC PROVALL
"KRN",19,11531,"RPC",61,0)
SDEC PROVCLIN
"KRN",19,11531,"RPC",62,0)
SDEC PTLOOKRS
"KRN",19,11531,"RPC",63,0)
SDEC PWH
"KRN",19,11531,"RPC",64,0)
SDEC RAISEVNT
"KRN",19,11531,"RPC",65,0)
SDEC REBKCLIN
"KRN",19,11531,"RPC",66,0)
SDEC REBKLIST
"KRN",19,11531,"RPC",67,0)
SDEC REBKNEXT
"KRN",19,11531,"RPC",68,0)
SDEC REGEVENT
"KRN",19,11531,"RPC",69,0)
SDEC RESGPUSR
"KRN",19,11531,"RPC",70,0)
SDEC RESGRPUS
"KRN",19,11531,"RPC",71,0)
SDEC RESLETRF
"KRN",19,11531,"RPC",72,0)
SDEC RESLETRS
"KRN",19,11531,"RPC",73,0)
SDEC RESOURCE
"KRN",19,11531,"RPC",74,0)
SDEC RESUSER
"KRN",19,11531,"RPC",75,0)
SDEC SCHUSR
"KRN",19,11531,"RPC",76,0)
SDEC SEARCHAV
"KRN",19,11531,"RPC",77,0)
SDEC SETFAC
"KRN",19,11531,"RPC",78,0)
SDEC SETRBOOK
"KRN",19,11531,"RPC",79,0)
SDEC SPACEBAR
"KRN",19,11531,"RPC",80,0)
SDEC SUSRINFO
"KRN",19,11531,"RPC",81,0)
SDEC SVSPALL
"KRN",19,11531,"RPC",82,0)
SDEC SYSSTAT
"KRN",19,11531,"RPC",83,0)
SDEC TPBLKOV
"KRN",19,11531,"RPC",84,0)
SDEC UNDOCANA
"KRN",19,11531,"RPC",85,0)
SDEC UNREGEV
"KRN",19,11531,"RPC",86,0)
SDEC WAITLIST
"KRN",19,11531,"RPC",87,0)
SDEC WLCLOSE
"KRN",19,11531,"RPC",88,0)
SDEC WLGET
"KRN",19,11531,"RPC",89,0)
SDEC WLSET
"KRN",19,11531,"RPC",90,0)
SDEC PREFGET
"KRN",19,11531,"RPC",91,0)
SDEC PREFGETV
"KRN",19,11531,"RPC",92,0)
SDEC PREFSET
"KRN",19,11531,"RPC",93,0)
SDEC FAPPTGET
"KRN",19,11531,"RPC",94,0)
SDEC RECAPGET
"KRN",19,11531,"RPC",95,0)
SDEC RECDSET
"KRN",19,11531,"RPC",96,0)
SDEC RECGET
"KRN",19,11531,"RPC",97,0)
SDEC RECPRGET
"KRN",19,11531,"RPC",98,0)
SDEC RECSET
"KRN",19,11531,"RPC",99,0)
SDEC REQGET
"KRN",19,11531,"RPC",100,0)
SDEC PCSTGET
"KRN",19,11531,"RPC",101,0)
SDEC PCST2GET
"KRN",19,11531,"RPC",102,0)
SDEC PCSGET
"KRN",19,11531,"RPC",103,0)
SDEC PTSET
"KRN",19,11531,"RPC",104,0)
SDEC PTINQ
"KRN",19,11531,"RPC",105,0)
SDEC SUMMGET
"KRN",19,11531,"RPC",106,0)
SDEC SUMMAGET
"KRN",19,11531,"RPC",107,0)
SDEC APPIDGET
"KRN",19,11531,"RPC",108,0)
SDEC FACLIST
"KRN",19,11531,"RPC",109,0)
SDEC CGET
"KRN",19,11531,"RPC",110,0)
SDEC ETHGET
"KRN",19,11531,"RPC",111,0)
SDEC ETHCMGET
"KRN",19,11531,"RPC",112,0)
SDEC RACEGET
"KRN",19,11531,"RPC",113,0)
SDEC REP1GET
"KRN",19,11531,"RPC",114,0)
SDEC WLPCSET
"KRN",19,11531,"RPC",115,0)
SDEC APPSDGET
"KRN",19,11531,"RPC",116,0)
SDEC WLOPEN
"KRN",19,11531,"RPC",117,0)
SDEC ARCLOSE
"KRN",19,11531,"RPC",118,0)
SDEC ARDGET
"KRN",19,11531,"RPC",119,0)
SDEC ARGET
"KRN",19,11531,"RPC",120,0)
SDEC ARMRTGET
"KRN",19,11531,"RPC",121,0)
SDEC ARMRTSET
"KRN",19,11531,"RPC",122,0)
SDEC AROPEN
"KRN",19,11531,"RPC",123,0)
SDEC ARPCSET
"KRN",19,11531,"RPC",124,0)
SDEC ARSET
"KRN",19,11531,"RPC",125,0)
SDEC HIDE
"KRN",19,11531,"RPC",126,0)
SDEC PRIV
"KRN",19,11531,"RPC",127,0)
SDEC WLHIDE
"KRN",19,11531,"RPC",128,0)
SDECAR ARAPPT
"KRN",19,11531,"RPC",129,0)
SDECAR ARMRTC
"KRN",19,11531,"RPC",130,0)
SDECDEV DEVICE
"KRN",19,11531,"RPC",131,0)
SDECDIS DISABIL
"KRN",19,11531,"RPC",132,0)
SDECIDX GETREC
"KRN",19,11531,"RPC",133,0)
SDECIDX RECCNT
"KRN",19,11531,"RPC",134,0)
SDECLK LOCK
"KRN",19,11531,"RPC",135,0)
SDECLK UNLOCK
"KRN",19,11531,"RPC",136,0)
SDECLOC PRIVLOC
"KRN",19,11531,"RPC",137,0)
SDECLOC UPDPRIV
"KRN",19,11531,"RPC",138,0)
SDECRMG RECCNT
"KRN",19,11531,"RPC",139,0)
SDECRMG RMG
"KRN",19,11531,"RPC",140,0)
SDECRMG2 URGENCY
"KRN",19,11531,"RPC",141,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11531,"RPC",142,0)
DG CHK BS5 XREF ARRAY
"KRN",19,11531,"RPC",143,0)
ORPRF HASFLG
"KRN",19,11531,"RPC",144,0)
ORPRF GETFLG
"KRN",19,11531,"RPC",145,0)
ORWPT DIEDON
"KRN",19,11531,"RPC",146,0)
ORWPT ID INFO
"KRN",19,11531,"RPC",147,0)
ORWPT LAST5
"KRN",19,11531,"RPC",148,0)
ORWPT LAST5 RPL
"KRN",19,11531,"RPC",149,0)
ORWU USERINFO
"KRN",19,11531,"RPC",150,0)
SD VSE FILTER RPC
"KRN",19,11531,"RPC",151,0)
SD VSE REPORT RPC
"KRN",19,11531,"U")
CLINICAL SCHEDULING PROCEDURE 
"KRN",19,11532,-1)
0^2
"KRN",19,11532,0)
SDEC IDX REFRESH^Refresh SDEC Index global^^R^^^^^^^^
"KRN",19,11532,1,0)
^^2^2^3150420^
"KRN",19,11532,1,1,0)
This option prepares the ^XTMP("SDEC","IDX" global and should be 
"KRN",19,11532,1,2,0)
scheduled to run daily at 2am.
"KRN",19,11532,10.1)
Refresh SDEC Index global
"KRN",19,11532,25)
ENTRY^SDECIDX
"KRN",19,11532,200.9)
y
"KRN",19,11532,"U")
REFRESH SDEC INDEX GLOBAL
"KRN",19,11533,-1)
0^3
"KRN",19,11533,0)
SDEC ACCESS BLOCK MAINTENANCE^SDEC ACCESS BLOCK MAINTENANCE^^R^^^^^^^^
"KRN",19,11533,1,0)
^^3^3^3150610^
"KRN",19,11533,1,1,0)
This option maintains the SDEC ACCESS BLOCK file by removing old entries 
"KRN",19,11533,1,2,0)
that are no longer needed and possibly adding future entries.
"KRN",19,11533,1,3,0)
This option should be scheduled to run nightly.
"KRN",19,11533,10.1)
Maintain SDEC ACCESS BLOCKS
"KRN",19,11533,25)
ABM^SDEC04
"KRN",19,11533,"U")
SDEC ACCESS BLOCK MAINTENANCE
"KRN",19.1,580,-1)
0^1
"KRN",19.1,580,0)
SDECZMENU^VISTA SCHEDULING GUI MENU
"KRN",19.1,580,1,0)
^^1^1^3150512^
"KRN",19.1,580,1,1,0)
VistA Scheduling GUI users need to have this key for GUI menu access.
"KRN",19.1,581,-1)
0^2
"KRN",19.1,581,0)
SDECZMGR^VISTA SCHEDULING GUI MANAGER
"KRN",19.1,581,1,0)
^^2^2^3150512^
"KRN",19.1,581,1,1,0)
This key is needed to access management activities from within the VistA 
"KRN",19.1,581,1,2,0)
Scheduling GUI application.
"KRN",19.1,582,-1)
0^3
"KRN",19.1,582,0)
SDECZ REQUEST^Access the Mobile Request Icon
"KRN",19.1,582,1,0)
^^3^3^3150512^
"KRN",19.1,582,1,1,0)
Holders of this security key can access the Mobile Request Icon, the 
"KRN",19.1,582,1,2,0)
Mobile Request List and utilize the buttons within the dialog box: 
"KRN",19.1,582,1,3,0)
Request Scheduled, Request Not Available, Close.
"KRN",101,4541,-1)
0^1
"KRN",101,4541,0)
SDEC ADD APPOINTMENT^SDEC ADD APPOINTMENT^^A^^^^^^^^
"KRN",101,4541,1,0)
^101.06^2^2^3140724^^^
"KRN",101,4541,1,1,0)
Adds an appointment to the CLINICAL SCHEDULING package when the 
"KRN",101,4541,1,2,0)
corresponding appointment in VistA scheduling is added.
"KRN",101,4541,4)
^^^SDEC ADD APPOINTMENT
"KRN",101,4541,20)
I $G(SDAMEVT)=1 D ADDEVT^SDEC07($G(DFN),$G(SDT),$G(SDCL),$G(SDDA))
"KRN",101,4541,99)
63894,66328
"KRN",101,4542,-1)
0^2
"KRN",101,4542,0)
SDEC CANCEL APPOINTMENT^SDEC CANCEL APPOINTMENT^^A^^^^^^^^
"KRN",101,4542,1,0)
^^2^2^3140724^
"KRN",101,4542,1,1,0)
Cancel an appointment in the CLINICAL SCHEDULING package when the 
"KRN",101,4542,1,2,0)
corresponding appointment in the VistA Scheduling is cancelled.
"KRN",101,4542,4)
^^^SDEC CANCEL APPOINTMENT
"KRN",101,4542,20)
I $G(SDAMEVT)=2 D CANEVT^SDEC08($G(DFN),$G(SDT),$G(SDCL))
"KRN",101,4542,99)
63894,66328
"KRN",101,4543,-1)
0^3
"KRN",101,4543,0)
SDEC CHECKIN APPOINTMENT^SDEC CHECKIN APPOINTMENT^^A^^^^^^^^
"KRN",101,4543,1,0)
^^2^2^3140724^
"KRN",101,4543,1,1,0)
Check in an appointment in the CLINICAL SCHEDULING package when the 
"KRN",101,4543,1,2,0)
corresponding appointment in VistA Scheduling is checked in.
"KRN",101,4543,4)
^^^SDEC CHECKIN APPOINTMENT
"KRN",101,4543,20)
I $G(SDAMEVT)=4 D CHKEVT^SDEC25($G(DFN),$G(SDT),$G(SDCL))
"KRN",101,4543,99)
63894,66328
"KRN",101,4544,-1)
0^4
"KRN",101,4544,0)
SDEC NOSHOW APPOINTMENT^SDEC NOSHOW APPOINTMENT^^A^^^^^^^^
"KRN",101,4544,1,0)
^^3^3^3140724^
"KRN",101,4544,1,1,0)
This protocol will no-show an appointment in the CLINICAL SCHEDULING 
"KRN",101,4544,1,2,0)
package when the corresponding appointment in VistA Scheduling is 
"KRN",101,4544,1,3,0)
no-showed.
"KRN",101,4544,4)
^^^SDEC NOSHOW APPOINTMENT
"KRN",101,4544,20)
I $G(SDAMEVT)=3 D NOSEVT^SDEC31($G(DFN),$G(SDT),$G(SDCL))
"KRN",101,4544,99)
63894,66328
"KRN",8994,3008,-1)
0^2
"KRN",8994,3008,0)
SDEC ACCGROUP^ACCGROUP^SDEC^4^R^0^^0
"KRN",8994,3008,1,0)
^8994.01^1^1^3150126^^
"KRN",8994,3008,1,1,0)
Return active entries from the SDEC ACCESS GROUP file 409.822
"KRN",8994,3008,3,0)
^^4^4^3150126^
"KRN",8994,3008,3,1,0)
Global Array in which each array entry contains data from the SDEC 
"KRN",8994,3008,3,2,0)
ACCESS GROUP file 409.822:
"KRN",8994,3008,3,3,0)
 1. IEN
"KRN",8994,3008,3,4,0)
 2. NAME
"KRN",8994,3009,-1)
0^3
"KRN",8994,3009,0)
SDEC ACCTYPE^ACCTYPE^SDEC^4^R^0^^0
"KRN",8994,3009,1,0)
^^1^1^3150126^
"KRN",8994,3009,1,1,0)
Return active entries from the SDEC ACCESS TYPE file 409.823
"KRN",8994,3009,3,0)
^^11^11^3150126^
"KRN",8994,3009,3,1,0)
Global Array in which each entry in the array contains data from
"KRN",8994,3009,3,2,0)
      the SDEC ACCESS TYPE file 409.823:
"KRN",8994,3009,3,3,0)
   1. SDEC_ACCESS_TYPE_IEN
"KRN",8994,3009,3,4,0)
   2. NAME
"KRN",8994,3009,3,5,0)
   3. INACTIVE
"KRN",8994,3009,3,6,0)
   4. DEPARTMENT_NAME
"KRN",8994,3009,3,7,0)
   5. DISPLAY_COLOR
"KRN",8994,3009,3,8,0)
   6. RED
"KRN",8994,3009,3,9,0)
   7. GREEN
"KRN",8994,3009,3,10,0)
   8. BLUE
"KRN",8994,3009,3,11,0)
   9. PREVENT_ACCESS
"KRN",8994,3010,-1)
0^61
"KRN",8994,3010,0)
SDEC PTLOOKRS^PTLOOKRS^SDEC^4^R^0^^0
"KRN",8994,3010,1,0)
^8994.01^3^3^3150806^^^
"KRN",8994,3010,1,1,0)
GET Patients that match the partial lookup. The partial lookup can be a
"KRN",8994,3010,1,2,0)
partial name, Date of Birth, Chart Number, SSN, or empty which will
"KRN",8994,3010,1,3,0)
return all patients.
"KRN",8994,3010,2,0)
^8994.02A^3^3
"KRN",8994,3010,2,1,0)
SDECP^1^^0^1
"KRN",8994,3010,2,1,1,0)
^8994.021^1^1^3150806^^
"KRN",8994,3010,2,1,1,1,0)
Free-Text - Partial name to look up
"KRN",8994,3010,2,2,0)
SDECC^1^^0^2
"KRN",8994,3010,2,2,1,0)
^8994.021^2^2^3150806^^
"KRN",8994,3010,2,2,1,1,0)
Max number of patients to return
"KRN",8994,3010,2,2,1,2,0)
defaults to 10
"KRN",8994,3010,2,3,0)
LASTSUB^1^^0^3
"KRN",8994,3010,2,3,1,0)
^^1^1^3150806^
"KRN",8994,3010,2,3,1,1,0)
last subscripts from previous call
"KRN",8994,3010,2,"B","LASTSUB",3)

"KRN",8994,3010,2,"B","SDECC",2)

"KRN",8994,3010,2,"B","SDECP",1)

"KRN",8994,3010,2,"PARAMSEQ",1,1)

"KRN",8994,3010,2,"PARAMSEQ",2,2)

"KRN",8994,3010,2,"PARAMSEQ",3,3)

"KRN",8994,3010,3,0)
^8994.03^43^43^3150806^^
"KRN",8994,3010,3,1,0)
Global Array in which each array entry contains
"KRN",8994,3010,3,2,0)
   Patient Demographic data
"KRN",8994,3010,3,3,0)
   Data is separated by ^:
"KRN",8994,3010,3,4,0)
   1. NAME - NAME from PATIENT file
"KRN",8994,3010,3,5,0)
   2. HRN 
"KRN",8994,3010,3,6,0)
   3. SSN
"KRN",8994,3010,3,7,0)
   4. DOB - Date of Birth
"KRN",8994,3010,3,8,0)
   5. IEN - DFN pointer to PATIENT file
"KRN",8994,3010,3,9,0)
   6. GENDER
"KRN",8994,3010,3,10,0)
   7. INSTIEN
"KRN",8994,3010,3,11,0)
   8. INSTNAME
"KRN",8994,3010,3,12,0)
   9. USERIEN
"KRN",8994,3010,3,13,0)
  10. USERNAME
"KRN",8994,3010,3,14,0)
  11. PRIGRP - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file
"KRN",8994,3010,3,15,0)
               Valid Values:
"KRN",8994,3010,3,16,0)
                  GROUP 1
"KRN",8994,3010,3,17,0)
                  GROUP 2
"KRN",8994,3010,3,18,0)
                  GROUP 3
"KRN",8994,3010,3,19,0)
                  GROUP 4
"KRN",8994,3010,3,20,0)
                  GROUP 5
"KRN",8994,3010,3,21,0)
                  GROUP 6
"KRN",8994,3010,3,22,0)
                  GROUP 7
"KRN",8994,3010,3,23,0)
                  GROUP 8
"KRN",8994,3010,3,24,0)
  12. ELIGIEN - Pointer to MAS ELIGIBILITY CODE file 8.1
"KRN",8994,3010,3,25,0)
  13. ELIGNAME - NAME from MAS ELIGIBILITY CODE file
"KRN",8994,3010,3,26,0)
  14. SVCCONN - SERVICE CONNECTED field from PATIENT ENROLLMENT file
"KRN",8994,3010,3,27,0)
                Valid values:
"KRN",8994,3010,3,28,0)
                 YES
"KRN",8994,3010,3,29,0)
                 NO
"KRN",8994,3010,3,30,0)
  15. SVCCONNP - SERVICE CONNECTED PERCENTAGE field from
"KRN",8994,3010,3,31,0)
                 PATIENT ENROLLMENT file
"KRN",8994,3010,3,32,0)
                 Numeric between 0-100
"KRN",8994,3010,3,33,0)
  16. TYPEIEN - Pointer to TYPE OF PATIENT file 391
"KRN",8994,3010,3,34,0)
  17. TYPENAME - NAME from TYPE OF PATIENT file 391
"KRN",8994,3010,3,35,0)
  18. PADDRES1 - Patient Address line 1
"KRN",8994,3010,3,36,0)
  19. PADDRES2 - Patient Address line 2
"KRN",8994,3010,3,37,0)
  20. PADDRES3 - Patient Address line 3
"KRN",8994,3010,3,38,0)
  21. PCITY - Patient City
"KRN",8994,3010,3,39,0)
  22. PSTATE - Patient state name
"KRN",8994,3010,3,40,0)
  23. PCOUNTRY - Patient country name
"KRN",8994,3010,3,41,0)
  24. PZIP4 - Patient Zip+4
"KRN",8994,3010,3,42,0)
  25. GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN>
"KRN",8994,3010,3,43,0)
            | <diagnosis by name>
"KRN",8994,3011,-1)
0^84
"KRN",8994,3011,0)
SDEC WAITLIST^WAITLIST^SDEC^4^R^0^^0
"KRN",8994,3011,1,0)
^^1^1^3150128^
"KRN",8994,3011,1,1,0)
Collect Wait List for a Given Resource
"KRN",8994,3011,2,0)
^8994.02A^1^1
"KRN",8994,3011,2,1,0)
SDECRES^1^^1^1
"KRN",8994,3011,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3011,2,1,1,1,0)
Resource ID pointer to SDEC RESOURCE file 409.831
"KRN",8994,3011,2,"B","SDECRES",1)

"KRN",8994,3011,2,"PARAMSEQ",1,1)

"KRN",8994,3011,3,0)
^^15^15^3150128^
"KRN",8994,3011,3,1,0)
Returns a Global Array in which each array entry contains wait list data 
"KRN",8994,3011,3,2,0)
separated by ^:
"KRN",8994,3011,3,3,0)
  1. HOSPITAL_LOC_IEN
"KRN",8994,3011,3,4,0)
  2. WAIT_LIST_IEN
"KRN",8994,3011,3,5,0)
  3. PATIENT_IEN
"KRN",8994,3011,3,6,0)
  4. PATIENT_NAME
"KRN",8994,3011,3,7,0)
  5. HOME_PHONE
"KRN",8994,3011,3,8,0)
  6. WORK_PHONE
"KRN",8994,3011,3,9,0)
  7. CHART
"KRN",8994,3011,3,10,0)
  8. DATE_ADDED
"KRN",8994,3011,3,11,0)
  9. REASON
"KRN",8994,3011,3,12,0)
 10. PRIORITY
"KRN",8994,3011,3,13,0)
 11. PROVIDER
"KRN",8994,3011,3,14,0)
 12. RECALL_DATE
"KRN",8994,3011,3,15,0)
 13. COMMENT
"KRN",8994,3012,-1)
0^83
"KRN",8994,3012,0)
SDEC UNREGEV^UNREGEV^SDEC^4^R^0^^0
"KRN",8994,3012,1,0)
^^1^1^3150128^
"KRN",8994,3012,1,1,0)
Called by client to Unregister client's interest in SDECEVENT
"KRN",8994,3012,2,0)
^8994.02A^3^3
"KRN",8994,3012,2,1,0)
SDECEVENT^1^^1^1
"KRN",8994,3012,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3012,2,1,1,1,0)
Event to un-register
"KRN",8994,3012,2,2,0)
SDECIP^1^^1^2
"KRN",8994,3012,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3012,2,2,1,1,0)
IP Address
"KRN",8994,3012,2,3,0)
SDECPORT^1^^1^3
"KRN",8994,3012,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3012,2,3,1,1,0)
PORT
"KRN",8994,3012,2,"B","SDECEVENT",1)

"KRN",8994,3012,2,"B","SDECIP",2)

"KRN",8994,3012,2,"B","SDECPORT",3)

"KRN",8994,3012,2,"PARAMSEQ",1,1)

"KRN",8994,3012,2,"PARAMSEQ",2,2)

"KRN",8994,3012,2,"PARAMSEQ",3,3)

"KRN",8994,3012,3,0)
^^1^1^3150128^
"KRN",8994,3012,3,1,0)
Single entry in the Global Array with the field ERRORID
"KRN",8994,3013,-1)
0^82
"KRN",8994,3013,0)
SDEC UNDOCANA^UNDOCANA^SDEC^4^R^0^^0
"KRN",8994,3013,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3013,1,1,0)
UnCancel a Cancelled appointment.
"KRN",8994,3013,2,0)
^8994.02A^1^1
"KRN",8994,3013,2,1,0)
SDECAPTID^1^^1^1
"KRN",8994,3013,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3013,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84
"KRN",8994,3013,2,"B","SDECAPTID",1)

"KRN",8994,3013,2,"PARAMSEQ",1,1)

"KRN",8994,3013,3,0)
^^1^1^3150128^
"KRN",8994,3013,3,1,0)
Returns a single entry in the Global Array with the field ERRORID
"KRN",8994,3014,-1)
0^81
"KRN",8994,3014,0)
SDEC TPBLKOV^TPBLKOV^SDEC^4^R^0^^0
"KRN",8994,3014,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3014,1,1,0)
TYPE BLOCKS OVERLAP
"KRN",8994,3014,2,0)
^8994.02A^3^3
"KRN",8994,3014,2,1,0)
SDECSTART^1^^1^1
"KRN",8994,3014,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3014,2,1,1,1,0)
Start date/time in external format
"KRN",8994,3014,2,2,0)
SDECEND^1^^1^2
"KRN",8994,3014,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3014,2,2,1,1,0)
End date/time in external format
"KRN",8994,3014,2,3,0)
SDECRES^1^^1^3
"KRN",8994,3014,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3014,2,3,1,1,0)
Resource name from the SDEC RESOURCE file
"KRN",8994,3014,2,"B","SDECEND",2)

"KRN",8994,3014,2,"B","SDECRES",3)

"KRN",8994,3014,2,"B","SDECSTART",1)

"KRN",8994,3014,2,"PARAMSEQ",1,1)

"KRN",8994,3014,2,"PARAMSEQ",2,2)

"KRN",8994,3014,2,"PARAMSEQ",3,3)

"KRN",8994,3014,3,0)
^^7^7^3150128^
"KRN",8994,3014,3,1,0)
Returns a Global Array in which each array entry contains data Access 
"KRN",8994,3014,3,2,0)
Block data separated by ^:
"KRN",8994,3014,3,3,0)
  1. StartTime
"KRN",8994,3014,3,4,0)
  2. EndTime
"KRN",8994,3014,3,5,0)
  3. AppointmentTypeID
"KRN",8994,3014,3,6,0)
  4. AvailabilityID
"KRN",8994,3014,3,7,0)
  5. ResourceName
"KRN",8994,3015,-1)
0^77
"KRN",8994,3015,0)
SDEC SPACEBAR^SPACEBAR^SDEC^4^R^0^^0
"KRN",8994,3015,1,0)
^^1^1^3150128^
"KRN",8994,3015,1,1,0)
Update ^DISV with most recent lookup value SDECVAL from file SDECDIC
"KRN",8994,3015,2,0)
^8994.02A^2^2
"KRN",8994,3015,2,1,0)
SDECDIC^1^^1^1
"KRN",8994,3015,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3015,2,1,1,1,0)
Data Global in the form GLOBAL(
"KRN",8994,3015,2,2,0)
SDECVAL^1^^1^2
"KRN",8994,3015,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3015,2,2,1,1,0)
Entry number (IEN) in the file
"KRN",8994,3015,2,"B","SDECDIC",1)

"KRN",8994,3015,2,"B","SDECVAL",2)

"KRN",8994,3015,2,"PARAMSEQ",1,1)

"KRN",8994,3015,2,"PARAMSEQ",2,2)

"KRN",8994,3015,3,0)
^^1^1^3150128^
"KRN",8994,3015,3,1,0)
Return Status = 1 if success, 0 if fail
"KRN",8994,3016,-1)
0^75
"KRN",8994,3016,0)
SDEC SETFAC^SETFAC^SDEC^4^R^0^^0
"KRN",8994,3016,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3016,1,1,0)
Remote procedure to Set the current facility/division for a given user.
"KRN",8994,3016,2,0)
^8994.02A^2^2
"KRN",8994,3016,2,1,0)
SDECDUZ^1^^1^1
"KRN",8994,3016,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3016,2,1,1,1,0)
User ID pointer to NEW PERSON file 200
"KRN",8994,3016,2,2,0)
SDECFAC^1^^1^2
"KRN",8994,3016,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3016,2,2,1,1,0)
facility/division to set - pointer to INSTITUTION file 4
"KRN",8994,3016,2,"B","SDECDUZ",1)

"KRN",8994,3016,2,"B","SDECFAC",2)

"KRN",8994,3016,2,"PARAMSEQ",1,1)

"KRN",8994,3016,2,"PARAMSEQ",2,2)

"KRN",8994,3016,3,0)
^^2^2^3150128^
"KRN",8994,3016,3,1,0)
Returns a single entry in the Global Array with fields ERROR_ID and 
"KRN",8994,3016,3,2,0)
ERROR_TEXT
"KRN",8994,3017,-1)
0^74
"KRN",8994,3017,0)
SDEC SEARCHAV^SEARCHAV^SDEC^4^R^0^^0
"KRN",8994,3017,1,0)
^^5^5^3150128^
"KRN",8994,3017,1,1,0)
Searches availability database for availability blocks between
"KRN",8994,3017,1,2,0)
     SDECSTRT and SDECEND for each of the resources in SDECRES.
"KRN",8994,3017,1,3,0)
The av blocks must be one of the types in SDECTYPES, must be
"KRN",8994,3017,1,4,0)
 AM or PM depending on value in SDECAMPM and
"KRN",8994,3017,1,5,0)
 must be on one of the weekdays listed in SDECWKDY.
"KRN",8994,3017,2,0)
^8994.02A^6^6
"KRN",8994,3017,2,1,0)
SDECRES^1^^1^1
"KRN",8994,3017,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3017,2,1,1,1,0)
Pipe | delimited list of resource names
"KRN",8994,3017,2,2,0)
SDECSTRT^1^^0^2
"KRN",8994,3017,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3017,2,2,1,1,0)
Begin date in FM format
"KRN",8994,3017,2,3,0)
SDECEND^1^^0^3
"KRN",8994,3017,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3017,2,3,1,1,0)
End date in FM Format
"KRN",8994,3017,2,4,0)
SDECTYPES^1^^0^4
"KRN",8994,3017,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3017,2,4,1,1,0)
Pipe | delimited list of access type IDs pointers to SDEC ACCESS TYPE file
"KRN",8994,3017,2,5,0)
SDECAMPM^1^^0^5
"KRN",8994,3017,2,5,1,0)
^^1^1^3150128^
"KRN",8994,3017,2,5,1,1,0)
"AM" for am-only, "PM" for pm-only, "BOTH" for both
"KRN",8994,3017,2,6,0)
SDECWKDY^1^^0^6
"KRN",8994,3017,2,6,1,0)
^^1^1^3150128^
"KRN",8994,3017,2,6,1,1,0)
"" if any weekday, else |-delimited list of weekdays
"KRN",8994,3017,2,"B","SDECAMPM",5)

"KRN",8994,3017,2,"B","SDECEND",3)

"KRN",8994,3017,2,"B","SDECRES",1)

"KRN",8994,3017,2,"B","SDECSTRT",2)

"KRN",8994,3017,2,"B","SDECTYPES",4)

"KRN",8994,3017,2,"B","SDECWKDY",6)

"KRN",8994,3017,2,"PARAMSEQ",1,1)

"KRN",8994,3017,2,"PARAMSEQ",2,2)

"KRN",8994,3017,2,"PARAMSEQ",3,3)

"KRN",8994,3017,2,"PARAMSEQ",4,4)

"KRN",8994,3017,2,"PARAMSEQ",5,5)

"KRN",8994,3017,2,"PARAMSEQ",6,6)

"KRN",8994,3017,3,0)
^^17^17^3150128^
"KRN",8994,3017,3,1,0)
recordset containing the start times of availability blocks
"KRN",8994,3017,3,2,0)
  meeting the search criteria. Each Array entry contains the
"KRN",8994,3017,3,3,0)
     following ^ pieces:
"KRN",8994,3017,3,4,0)
   RESOURCENAME
"KRN",8994,3017,3,5,0)
   DATE
"KRN",8994,3017,3,6,0)
   ACCESSTYPE
"KRN",8994,3017,3,7,0)
   COMMENT
"KRN",8994,3017,3,8,0)
   AVAILABILITY - separated by pipe | 
"KRN",8994,3017,3,9,0)
     Each pipe piece contains the following tilde ~ pieces:
"KRN",8994,3017,3,10,0)
     1. AVAILABILITY DATE (no time in external format
"KRN",8994,3017,3,11,0)
     2. Schedule Times - separated by ;;
"KRN",8994,3017,3,12,0)
       each ;; piece contains the following :: pieces:
"KRN",8994,3017,3,13,0)
       1. Schedule Time - 4 character time representation - ie 0800
"KRN",8994,3017,3,14,0)
       2. Number of Patients - Numeric 1-20
"KRN",8994,3017,3,15,0)
       3. Day of Week text
"KRN",8994,3017,3,16,0)
       4. Number of Day text
"KRN",8994,3017,3,17,0)
   AVAILABILITYF - AVAILABLITY FLAG - Date in external format
"KRN",8994,3018,-1)
0^78
"KRN",8994,3018,0)
SDEC SUSRINFO^SUSRINFO^SDEC^4^R^0^^0
"KRN",8994,3018,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3018,1,1,0)
SCHEDULING USER INFO
"KRN",8994,3018,2,0)
^8994.02A^1^1
"KRN",8994,3018,2,1,0)
SDECDUZ^1^^1^1
"KRN",8994,3018,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3018,2,1,1,1,0)
User ID pointer to NEW PERSON file 200
"KRN",8994,3018,2,"B","SDECDUZ",1)

"KRN",8994,3018,2,"PARAMSEQ",1,1)

"KRN",8994,3018,3,0)
^^11^11^3150128^
"KRN",8994,3018,3,1,0)
Global Array containing 1 entry with following: 
"KRN",8994,3018,3,2,0)
    Data is separated by ^:
"KRN",8994,3018,3,3,0)
     1. MANAGER -  YES if the user has the SDECZMGR key
"KRN",8994,3018,3,4,0)
                   NO  if not
"KRN",8994,3018,3,5,0)
     2. USER_NAME
"KRN",8994,3018,3,6,0)
     3. MENU    -  YES if the user has the SDECZMENU key
"KRN",8994,3018,3,7,0)
                   NO  if not
"KRN",8994,3018,3,8,0)
     4. SUPER   -  YES if the user has the SD SUPERVISOR key
"KRN",8994,3018,3,9,0)
                   NO if not
"KRN",8994,3018,3,10,0)
     5. SDWLMENU - YES if the user has the SDWL MENU key
"KRN",8994,3018,3,11,0)
                   NO if not
"KRN",8994,3019,-1)
0^72
"KRN",8994,3019,0)
SDEC RESOURCE^RESOURCE^SDEC^4^R^0^^0
"KRN",8994,3019,1,0)
^8994.01^2^2^3150806^^^
"KRN",8994,3019,1,1,0)
Returns Recordset with ALL RESOURCE names.
"KRN",8994,3019,1,2,0)
Inactive RESOURCES are NOT filtered out.
"KRN",8994,3019,2,0)
^8994.02A^7^7
"KRN",8994,3019,2,1,0)
SDECDUZ^1^^0^1
"KRN",8994,3019,2,1,1,0)
^8994.021^3^3^3150806^^
"KRN",8994,3019,2,1,1,1,0)
User ID pointer to NEW PERSON file 200
"KRN",8994,3019,2,1,1,2,0)
Defaults to current user.
"KRN",8994,3019,2,1,1,3,0)
Checks that THIS user has the proper SECURITY KEY
"KRN",8994,3019,2,2,0)
SDACT^1^^0^2
"KRN",8994,3019,2,2,1,0)
^8994.021^3^3^3150806^^
"KRN",8994,3019,2,2,1,1,0)
Active Flag:
"KRN",8994,3019,2,2,1,2,0)
 1 or YES will return only active resources
"KRN",8994,3019,2,2,1,3,0)
 0, NO, or NULL will include inactive resources
"KRN",8994,3019,2,3,0)
SDTYPE^1^^0^3
"KRN",8994,3019,2,3,1,0)
^^5^5^3150806^
"KRN",8994,3019,2,3,1,1,0)
null will return all resource types
"KRN",8994,3019,2,3,1,2,0)
             H will only return HOSPITAL LOCATION (clinic) resources
"KRN",8994,3019,2,3,1,3,0)
             P will only return NEW PERSON (Provider) resources
"KRN",8994,3019,2,3,1,4,0)
             A will only return SDEC ADDITIONAL RESOURCE resources
"KRN",8994,3019,2,3,1,5,0)
            PH will only return prohibited clinics
"KRN",8994,3019,2,4,0)
MAXREC^1^^0^4
"KRN",8994,3019,2,4,1,0)
^^1^1^3150806^
"KRN",8994,3019,2,4,1,1,0)
Max records returned
"KRN",8994,3019,2,5,0)
LASTSUBI^1^^0^5
"KRN",8994,3019,2,5,1,0)
^^1^1^3150806^
"KRN",8994,3019,2,5,1,1,0)
last subscripts from previous call
"KRN",8994,3019,2,6,0)
SDIEN^1^^0^6
"KRN",8994,3019,2,6,1,0)
^^2^2^3150806^
"KRN",8994,3019,2,6,1,1,0)
pointer to SDEC RESOURCE file
"KRN",8994,3019,2,6,1,2,0)
only 1 record will be returned if SDIEN is present
"KRN",8994,3019,2,7,0)
SDECP^1^^0^7
"KRN",8994,3019,2,7,1,0)
^^1^1^3150806^
"KRN",8994,3019,2,7,1,1,0)
Partial name text
"KRN",8994,3019,2,"B","LASTSUBI",5)

"KRN",8994,3019,2,"B","MAXREC",4)

"KRN",8994,3019,2,"B","SDACT",2)

"KRN",8994,3019,2,"B","SDECDUZ",1)

"KRN",8994,3019,2,"B","SDECP",7)

"KRN",8994,3019,2,"B","SDIEN",6)

"KRN",8994,3019,2,"B","SDTYPE",3)

"KRN",8994,3019,2,"PARAMSEQ",1,1)

"KRN",8994,3019,2,"PARAMSEQ",2,2)

"KRN",8994,3019,2,"PARAMSEQ",3,3)

"KRN",8994,3019,2,"PARAMSEQ",4,4)

"KRN",8994,3019,2,"PARAMSEQ",5,5)

"KRN",8994,3019,2,"PARAMSEQ",6,6)

"KRN",8994,3019,2,"PARAMSEQ",7,7)

"KRN",8994,3019,3,0)
^8994.03^38^38^3150806^^
"KRN",8994,3019,3,1,0)
Returns a global array in which each array entry contains data from
"KRN",8994,3019,3,2,0)
    the SDEC RESOURCE file for each HOSPITAL LOCATION (clinic).
"KRN",8994,3019,3,3,0)
    1. RESOURCEID - Pointer to the SDEC RESOURCE file
"KRN",8994,3019,3,4,0)
    2. RESOURCE_NAME - NAME from SDEC RESOURCE file
"KRN",8994,3019,3,5,0)
    3. INACTIVE   - inactive clinic - INACTIVE is now tied to the
"KRN",8994,3019,3,6,0)
                    HOSPITAL LOCATION. i.e. Is this HOSPITAL LOCATION
"KRN",8994,3019,3,7,0)
                    inactive for this Resource - Returned values will
"KRN",8994,3019,3,8,0)
                    be NO YES
"KRN",8994,3019,3,9,0)
    4. TIMESCALE - Valid Values:
"KRN",8994,3019,3,10,0)
                     5, 10, 15, 20, 30, 60
"KRN",8994,3019,3,11,0)
 
"KRN",8994,3019,3,12,0)
    5. HOSPITAL_LOCATION_ID
"KRN",8994,3019,3,13,0)
    6. <NOT USED> LETTER_TEXT
"KRN",8994,3019,3,14,0)
    7. <NOT USED> NO_SHOW_LETTER
"KRN",8994,3019,3,15,0)
    8. <NOT USED> CLINIC_CANCELLATION_LETTER
"KRN",8994,3019,3,16,0)
    9. VIEW - User can VIEW 1=YES; 0=NO
"KRN",8994,3019,3,17,0)
   10. OVERBOOK - User can OVERBOOK  1=YES; 0=NO
"KRN",8994,3019,3,18,0)
   11. MODIFY_SCHEDULE - User can Modify Schedule  1=YES; 0=NO
"KRN",8994,3019,3,19,0)
   12. MODIFY_APPOINTMENTS User can modify appointments  1=YES; 0=NO
"KRN",8994,3019,3,20,0)
   13. RESOURCETYPE - 3 pipe pieces:
"KRN",8994,3019,3,21,0)
           1. type H, P, or A
"KRN",8994,3019,3,22,0)
           2. IEN - pointer to [H] HOSPITAL LOCATION, [P] NEW PERSON,
"KRN",8994,3019,3,23,0)
                    or [A] SDEC ADDITIONAL RESOURCE file
"KRN",8994,3019,3,24,0)
           3. Name - name from the appropriate type file
"KRN",8994,3019,3,25,0)
   14. DATE      - Date/Time entered in external format
"KRN",8994,3019,3,26,0)
   15. USERIEN   - Entered By User ID pointer to NEW PERSON file 200
"KRN",8994,3019,3,27,0)
   16. USERNAME  - Entered By User name from NEW PERSON file
"KRN",8994,3019,3,28,0)
   17. DATE1     - Inactive Date/Time in external format
"KRN",8994,3019,3,29,0)
   18. USERIEN1  - Inactivating User ID pointer to NEW PERSON file
"KRN",8994,3019,3,30,0)
   19. USERNAME1 - Inactivating User Name from NEW PERSON file
"KRN",8994,3019,3,31,0)
   20. DATE2     - Reactivated Date/Time in external format
"KRN",8994,3019,3,32,0)
   21. USERIEN2  - Reactivating User ID pointer to NEW PERSON file
"KRN",8994,3019,3,33,0)
   22. USERNAME2 - Reactivating User Name from NEW PERSON file
"KRN",8994,3019,3,34,0)
   23. CLINNAME  - Clinic Name from HOSPITAL LOCATION file 44
"KRN",8994,3019,3,35,0)
   24. PROVCLIN  - Boolean indicating 'this' P type resource is a
"KRN",8994,3019,3,36,0)
                   provider for a clinic
"KRN",8994,3019,3,37,0)
                   0 = not a provider
"KRN",8994,3019,3,38,0)
                   1 = is a provider
"KRN",8994,3020,-1)
0^73
"KRN",8994,3020,0)
SDEC RESUSER^RESUSER^SDEC^4^R^0^^0
"KRN",8994,3020,1,0)
^^1^1^3150806^
"KRN",8994,3020,1,1,0)
Returns entries from the SDEC RESOURCE USER file.
"KRN",8994,3020,3,0)
^8994.03^11^11^3150806^^^
"KRN",8994,3020,3,1,0)
Returns a Global Array in which each array entry contains data from the 
"KRN",8994,3020,3,2,0)
SDEC RESOURCE USER file separated by ^:
"KRN",8994,3020,3,3,0)
  1. SDEC_RESOURCE_USER_IEN
"KRN",8994,3020,3,4,0)
  2. RESOURCE_NAME
"KRN",8994,3020,3,5,0)
  3. RESOURCE_ID
"KRN",8994,3020,3,6,0)
  4. OVERBOOK
"KRN",8994,3020,3,7,0)
  5. MODIFY_SCHEDULE
"KRN",8994,3020,3,8,0)
  6. MODIFY_APPTS
"KRN",8994,3020,3,9,0)
  7. USERNAME
"KRN",8994,3020,3,10,0)
  8. USER_ID
"KRN",8994,3020,3,11,0)
  9. MASTEROVERBOOK
"KRN",8994,3021,-1)
0^71
"KRN",8994,3021,0)
SDEC RESLETRS^RESLETRS^SDEC^4^R^0^^0
"KRN",8994,3021,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3021,1,1,0)
Return recordset of RESOURCES and associated LETTERS.
"KRN",8994,3021,1,2,0)
Used in generating rebook letters for a clinic.
"KRN",8994,3021,2,0)
^8994.02A^4^4
"KRN",8994,3021,2,1,0)
SDECLIST^1^^1^1
"KRN",8994,3021,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3021,2,1,1,1,0)
Pipe | delimited list of SDEC RESOURCE ids.
"KRN",8994,3021,2,2,0)
SDLTR^1^^0^2
"KRN",8994,3021,2,2,1,0)
^^2^2^3150128^
"KRN",8994,3021,2,2,1,1,0)
Letter Text flag
"KRN",8994,3021,2,2,1,2,0)
1=return LETTER TEXT
"KRN",8994,3021,2,3,0)
SDNOS^1^^0^3
"KRN",8994,3021,2,3,1,0)
^^2^2^3150128^
"KRN",8994,3021,2,3,1,1,0)
No Show Letter flag
"KRN",8994,3021,2,3,1,2,0)
1=return NO SHOW LETTER text
"KRN",8994,3021,2,4,0)
SDCAN^1^^0^4
"KRN",8994,3021,2,4,1,0)
^^2^2^3150128^
"KRN",8994,3021,2,4,1,1,0)
Clinic Cancellation Letter flag
"KRN",8994,3021,2,4,1,2,0)
1=return CLINIC CANCELLATION LETTER text
"KRN",8994,3021,2,"B","SDCAN",4)

"KRN",8994,3021,2,"B","SDECLIST",1)

"KRN",8994,3021,2,"B","SDLTR",2)

"KRN",8994,3021,2,"B","SDNOS",3)

"KRN",8994,3021,2,"PARAMSEQ",1,1)

"KRN",8994,3021,2,"PARAMSEQ",2,2)

"KRN",8994,3021,2,"PARAMSEQ",3,3)

"KRN",8994,3021,2,"PARAMSEQ",4,4)

"KRN",8994,3021,3,0)
^^7^7^3150128^
"KRN",8994,3021,3,1,0)
Returns a Global Array in which each array entry contains letter data for 
"KRN",8994,3021,3,2,0)
the passed in Resources separated by ^:
"KRN",8994,3021,3,3,0)
  1. RESOURCEID
"KRN",8994,3021,3,4,0)
  2. RESOURCE_NAME
"KRN",8994,3021,3,5,0)
  3. LETTER_TEXT
"KRN",8994,3021,3,6,0)
  4. NO_SHOW_LETTER
"KRN",8994,3021,3,7,0)
  5. CLINIC_CANCELLATION_LETTER
"KRN",8994,3022,-1)
0^70
"KRN",8994,3022,0)
SDEC RESLETRF^RESLETRF^SDEC^4^R^0^^0
"KRN",8994,3022,1,0)
^8994.01^3^3^3150128^^
"KRN",8994,3022,1,1,0)
Return formatted text output of the Resource's Letter - either "LETTER 
"KRN",8994,3022,1,2,0)
TEXT" (also used as Reminder Letter), NO SHOW LETTER, or CLINIC 
"KRN",8994,3022,1,3,0)
CANCELLATION LETTER.
"KRN",8994,3022,2,0)
^8994.02A^2^2
"KRN",8994,3022,2,1,0)
SDECRES^1^^1^1
"KRN",8994,3022,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3022,2,1,1,1,0)
Resource ID Pointer to SDEC RESOURCE file 409.831
"KRN",8994,3022,2,2,0)
SDECLT^1^^1^2
"KRN",8994,3022,2,2,1,0)
^^4^4^3150128^
"KRN",8994,3022,2,2,1,1,0)
Letter Type:
"KRN",8994,3022,2,2,1,2,0)
 "R"=Reminder Letter
"KRN",8994,3022,2,2,1,3,0)
 "C" or "A"=Clinic Cancellation Letter
"KRN",8994,3022,2,2,1,4,0)
 "N"=No Show Letter
"KRN",8994,3022,2,"B","SDECLT",2)

"KRN",8994,3022,2,"B","SDECRES",1)

"KRN",8994,3022,2,"PARAMSEQ",1,1)

"KRN",8994,3022,2,"PARAMSEQ",2,2)

"KRN",8994,3022,3,0)
^^2^2^3150128^
"KRN",8994,3022,3,1,0)
Returns a Global Array in which each array entry is a formatted line of 
"KRN",8994,3022,3,2,0)
text.
"KRN",8994,3023,-1)
0^69
"KRN",8994,3023,0)
SDEC RESGRPUS^RESGRPUS^SDEC^4^R^0^^0
"KRN",8994,3023,1,0)
^^8^8^3150505^
"KRN",8994,3023,1,1,0)
Returns ADO Recordset with all ACTIVE resource group names to which user 
"KRN",8994,3023,1,2,0)
has access
"KRN",8994,3023,1,3,0)
based on entries in SDEC RESOURCE USER file
"KRN",8994,3023,1,4,0)
If SDECDUZ=0 then returns all department names for current DUZ
"KRN",8994,3023,1,5,0)
If user SDECDUZ possesses the key SDECZMGR
"KRN",8994,3023,1,6,0)
then ALL resource group names are returned regardless of whether any 
"KRN",8994,3023,1,7,0)
active resources
"KRN",8994,3023,1,8,0)
are associated with the group or not.
"KRN",8994,3023,2,0)
^8994.02A^1^1
"KRN",8994,3023,2,1,0)
SDECDUZ^1^^1^1
"KRN",8994,3023,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3023,2,1,1,1,0)
User ID pointer to NEW PERSON file 200
"KRN",8994,3023,2,"B","SDECDUZ",1)

"KRN",8994,3023,2,"PARAMSEQ",1,1)

"KRN",8994,3023,3,0)
^^4^4^3150128^
"KRN",8994,3023,3,1,0)
Returns a Global Array in which each array entry contains Resource Group 
"KRN",8994,3023,3,2,0)
ID and name separated by ^:
"KRN",8994,3023,3,3,0)
 1. RESOURCE_GROUPID
"KRN",8994,3023,3,4,0)
 2. RESOURCE_GROUP
"KRN",8994,3024,-1)
0^67
"KRN",8994,3024,0)
SDEC REGEVENT^REGEVENT^SDEC^4^R^0^^0
"KRN",8994,3024,1,0)
^^1^1^3150128^
"KRN",8994,3024,1,1,0)
Called by client to inform the server of client's interest in SDECEVENT
"KRN",8994,3024,2,0)
^8994.02A^3^3
"KRN",8994,3024,2,1,0)
SDECEVENT^1^^1^1
"KRN",8994,3024,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3024,2,1,1,1,0)
Event to register
"KRN",8994,3024,2,2,0)
SDECIP^1^^1^2
"KRN",8994,3024,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3024,2,2,1,1,0)
Client IP address
"KRN",8994,3024,2,3,0)
SDECPORT^1^^1^3
"KRN",8994,3024,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3024,2,3,1,1,0)
Client Port
"KRN",8994,3024,2,"B","SDECEVENT",1)

"KRN",8994,3024,2,"B","SDECIP",2)

"KRN",8994,3024,2,"B","SDECPORT",3)

"KRN",8994,3024,2,"PARAMSEQ",1,1)

"KRN",8994,3024,2,"PARAMSEQ",2,2)

"KRN",8994,3024,2,"PARAMSEQ",3,3)

"KRN",8994,3024,3,0)
^^1^1^3150128^
"KRN",8994,3024,3,1,0)
Recordset with field ERRORID
"KRN",8994,3025,-1)
0^76
"KRN",8994,3025,0)
SDEC SETRBOOK^SETRBOOK^SDEC^4^R^0^^0
"KRN",8994,3025,1,0)
^^1^1^3150128^
"KRN",8994,3025,1,1,0)
Sets rebook date into appointment
"KRN",8994,3025,2,0)
^8994.02A^2^2
"KRN",8994,3025,2,1,0)
SDECAPPT^1^^1^1
"KRN",8994,3025,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3025,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 2
"KRN",8994,3025,2,2,0)
SDECDATE^1^^1^2
"KRN",8994,3025,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3025,2,2,1,1,0)
Rebook date/time in external format
"KRN",8994,3025,2,"B","SDECAPPT",1)

"KRN",8994,3025,2,"B","SDECDATE",2)

"KRN",8994,3025,2,"PARAMSEQ",1,1)

"KRN",8994,3025,2,"PARAMSEQ",2,2)

"KRN",8994,3025,3,0)
^^3^3^3150128^
"KRN",8994,3025,3,1,0)
ErrorID:
"KRN",8994,3025,3,2,0)
  0 if a problem.  Message in ERRORTEXT
"KRN",8994,3025,3,3,0)
  1 if OK
"KRN",8994,3026,-1)
0^66
"KRN",8994,3026,0)
SDEC REBKNEXT^REBKNEXT^SDEC^4^R^0^^0
"KRN",8994,3026,1,0)
^^1^1^3150128^
"KRN",8994,3026,1,1,0)
GET - find next ACCESS BLOCK in resource SDECRES after SDECSTART.
"KRN",8994,3026,2,0)
^8994.02A^3^3
"KRN",8994,3026,2,1,0)
SDECDATE^1^^1^1
"KRN",8994,3026,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3026,2,1,1,1,0)
Date in external format.
"KRN",8994,3026,2,2,0)
SDECRES^1^^1^2
"KRN",8994,3026,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3026,2,2,1,1,0)
Resource ID pointer to SDEC RESOURCE file 409.831
"KRN",8994,3026,2,3,0)
SDECTPID^1^^1^3
"KRN",8994,3026,2,3,1,0)
^^2^2^3150128^
"KRN",8994,3026,2,3,1,1,0)
Access Type Id - Pointer to the SDEC ACCESS TYPE file
"KRN",8994,3026,2,3,1,2,0)
If 0 then any access type will match.
"KRN",8994,3026,2,"B","SDECDATE",1)

"KRN",8994,3026,2,"B","SDECRES",2)

"KRN",8994,3026,2,"B","SDECTPID",3)

"KRN",8994,3026,2,"PARAMSEQ",1,1)

"KRN",8994,3026,2,"PARAMSEQ",2,2)

"KRN",8994,3026,2,"PARAMSEQ",3,3)

"KRN",8994,3026,3,0)
^^5^5^3150128^
"KRN",8994,3026,3,1,0)
Single entry in the Global Array:
"KRN",8994,3026,3,2,0)
   Returns 1 in ERRORID and date in NEXTBLOCK if a block was found or
"KRN",8994,3026,3,3,0)
   NULL in NEXTBLOCK of no date found
"KRN",8994,3026,3,4,0)
   Otherwise, returns 0 and error message in ERRORTEXT
"KRN",8994,3026,3,5,0)
   in which each array entry contains
"KRN",8994,3027,-1)
0^65
"KRN",8994,3027,0)
SDEC REBKLIST^REBKLIST^SDEC^4^R^0^^0
"KRN",8994,3027,1,0)
^^1^1^3150806^
"KRN",8994,3027,1,1,0)
Return patient appointments used in listing Re-Booked appointments.
"KRN",8994,3027,2,0)
^8994.02A^1^1
"KRN",8994,3027,2,1,0)
SDECLIST^1^^1^1
"KRN",8994,3027,2,1,1,0)
^8994.021^2^2^3150806^^
"KRN",8994,3027,2,1,1,1,0)
Pipe | delimited list of SDEC APPOINTMENT ids
"KRN",8994,3027,2,1,1,2,0)
(The last | pieces is null)
"KRN",8994,3027,2,"B","SDECLIST",1)

"KRN",8994,3027,2,"PARAMSEQ",1,1)

"KRN",8994,3027,3,0)
^8994.03^19^19^3150806^^
"KRN",8994,3027,3,1,0)
   Global Array in which each array entry contains the following data 
"KRN",8994,3027,3,2,0)
separated by ^.
"KRN",8994,3027,3,3,0)
     Name
"KRN",8994,3027,3,4,0)
     DOB
"KRN",8994,3027,3,5,0)
     Sex
"KRN",8994,3027,3,6,0)
     HRN
"KRN",8994,3027,3,7,0)
     NewApptDate
"KRN",8994,3027,3,8,0)
     Clinic
"KRN",8994,3027,3,9,0)
     TypeStatus
"KRN",8994,3027,3,10,0)
     RESOURCEID
"KRN",8994,3027,3,11,0)
     APPT_MADE_BY
"KRN",8994,3027,3,12,0)
     DATE_APPT_MADE
"KRN",8994,3027,3,13,0)
     NOTE
"KRN",8994,3027,3,14,0)
     STREET
"KRN",8994,3027,3,15,0)
     CITY
"KRN",8994,3027,3,16,0)
     STATE
"KRN",8994,3027,3,17,0)
     ZIP
"KRN",8994,3027,3,18,0)
     HOMEPHONE
"KRN",8994,3027,3,19,0)
     OldApptDate
"KRN",8994,3028,-1)
0^64
"KRN",8994,3028,0)
SDEC REBKCLIN^REBKCLIN^SDEC^4^R^0^^0
"KRN",8994,3028,1,0)
^8994.01^7^7^3150128^^
"KRN",8994,3028,1,1,0)
Return recordset of rebooked patient appointments
"KRN",8994,3028,1,2,0)
between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"KRN",8994,3028,1,3,0)
Used in generating rebook letters for a clinic
"KRN",8994,3028,1,4,0)
SDECCLST is a |-delimited list of SDEC RESOURCE iens.
"KRN",8994,3028,1,5,0)
 
"KRN",8994,3028,1,6,0)
(The last |-piece is null, so discard it.)
"KRN",8994,3028,1,7,0)
SDECBEG and SDECEND are in external date form.
"KRN",8994,3028,2,0)
^8994.02A^1^1
"KRN",8994,3028,2,1,0)
SDECLIST^1^^1^1
"KRN",8994,3028,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3028,2,1,1,1,0)
Pipe | delimited list of SDEC RESOURCE ids.
"KRN",8994,3028,2,1,1,2,0)
(The last | piece is null, so discard it.)
"KRN",8994,3028,2,"B","SDECLIST",1)

"KRN",8994,3028,2,"PARAMSEQ",1,1)

"KRN",8994,3028,3,0)
^^19^19^3150128^
"KRN",8994,3028,3,1,0)
Global Array in which each array entry contains the following data 
"KRN",8994,3028,3,2,0)
separated by ^.
"KRN",8994,3028,3,3,0)
     Name
"KRN",8994,3028,3,4,0)
     DOB
"KRN",8994,3028,3,5,0)
     Sex
"KRN",8994,3028,3,6,0)
     HRN
"KRN",8994,3028,3,7,0)
     NewApptDate
"KRN",8994,3028,3,8,0)
     Clinic
"KRN",8994,3028,3,9,0)
     TypeStatus
"KRN",8994,3028,3,10,0)
     RESOURCEID
"KRN",8994,3028,3,11,0)
     APPT_MADE_BY
"KRN",8994,3028,3,12,0)
     DATE_APPT_MADE
"KRN",8994,3028,3,13,0)
     NOTE
"KRN",8994,3028,3,14,0)
     STREET
"KRN",8994,3028,3,15,0)
     CITY
"KRN",8994,3028,3,16,0)
     STATE
"KRN",8994,3028,3,17,0)
     ZIP
"KRN",8994,3028,3,18,0)
     HOMEPHONE
"KRN",8994,3028,3,19,0)
     OldApptDate
"KRN",8994,3029,-1)
0^63
"KRN",8994,3029,0)
SDEC RAISEVNT^RAISEVNT^SDEC^4^R^0^^0
"KRN",8994,3029,1,0)
^^1^1^3150128^
"KRN",8994,3029,1,1,0)
Raise Event
"KRN",8994,3029,2,0)
^8994.02A^4^4
"KRN",8994,3029,2,1,0)
SDECEVENT^1^^1^1
"KRN",8994,3029,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3029,2,1,1,1,0)
EVENT
"KRN",8994,3029,2,2,0)
SDECPARAM^1^^0^2
"KRN",8994,3029,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3029,2,2,1,1,0)
Parameter(s)
"KRN",8994,3029,2,3,0)
SDECSIP^1^^0^3
"KRN",8994,3029,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3029,2,3,1,1,0)
IP address
"KRN",8994,3029,2,4,0)
SDECSPT^1^^0^4
"KRN",8994,3029,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3029,2,4,1,1,0)
PORT
"KRN",8994,3029,2,"B","SDECEVENT",1)

"KRN",8994,3029,2,"B","SDECPARAM",2)

"KRN",8994,3029,2,"B","SDECSIP",3)

"KRN",8994,3029,2,"B","SDECSPT",4)

"KRN",8994,3029,2,"PARAMSEQ",1,1)

"KRN",8994,3029,2,"PARAMSEQ",2,2)

"KRN",8994,3029,2,"PARAMSEQ",3,3)

"KRN",8994,3029,2,"PARAMSEQ",4,4)

"KRN",8994,3029,3,0)
^^1^1^3150128^
"KRN",8994,3029,3,1,0)
Single entry in the Global Array of 0.
"KRN",8994,3030,-1)
0^60
"KRN",8994,3030,0)
SDEC PROVCLIN^PROVCLIN^SDEC^4^R^0^^0
"KRN",8994,3030,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3030,1,1,0)
 Remote procedure to return the Providers that are assigned to a given 
"KRN",8994,3030,1,2,0)
Clinic.
"KRN",8994,3030,2,0)
^8994.02A^1^1
"KRN",8994,3030,2,1,0)
SDECPRV^1^^1^1
"KRN",8994,3030,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3030,2,1,1,1,0)
Provider ID pointer to NEW PERSON file 200
"KRN",8994,3030,2,"B","SDECPRV",1)

"KRN",8994,3030,2,"PARAMSEQ",1,1)

"KRN",8994,3030,3,0)
^^4^4^3150128^
"KRN",8994,3030,3,1,0)
Global Array in which each array entry contains clinic ID and name 
"KRN",8994,3030,3,2,0)
separated by ^:
"KRN",8994,3030,3,3,0)
 1. CLINIC_IEN
"KRN",8994,3030,3,4,0)
 2. CLINIC_NAME
"KRN",8994,3031,-1)
0^16
"KRN",8994,3031,0)
SDEC APPTLETR^APPTLETR^SDEC^4^R^0^^0
"KRN",8994,3031,1,0)
^^3^3^3150127^
"KRN",8994,3031,1,1,0)
Print Appointment Letter.
"KRN",8994,3031,1,2,0)
Print appointment letter. Currently supports No-Show, Cancel by Patient, 
"KRN",8994,3031,1,3,0)
and Cancel by Clinic.
"KRN",8994,3031,2,0)
^8994.02A^2^2
"KRN",8994,3031,2,1,0)
SDECAPID^1^^1^1
"KRN",8994,3031,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3031,2,1,1,1,0)
Pointer to appointment in SDEC APPOINTMENT (^SDECAPPT) file 409.84
"KRN",8994,3031,2,2,0)
 LT^1^^1^2
"KRN",8994,3031,2,2,1,0)
^^4^4^3150127^
"KRN",8994,3031,2,2,1,1,0)
Letter Type
"KRN",8994,3031,2,2,1,2,0)
"N" = No Show
"KRN",8994,3031,2,2,1,3,0)
"A" = Cancelled by Patient
"KRN",8994,3031,2,2,1,4,0)
"C" = Cancelled by Clinic
"KRN",8994,3031,2,"B"," LT",2)

"KRN",8994,3031,2,"B","SDECAPID",1)

"KRN",8994,3031,2,"PARAMSEQ",1,1)

"KRN",8994,3031,2,"PARAMSEQ",2,2)

"KRN",8994,3031,3,0)
^^1^1^3150127^
"KRN",8994,3031,3,1,0)
Global array in which each array entry is a line of text.
"KRN",8994,3032,-1)
0^58
"KRN",8994,3032,0)
SDEC PATAPPTH^PATAPPTH^SDEC^4^R^0^^0
"KRN",8994,3032,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3032,1,1,0)
Remote procedure to return the Patient appointment history in formatted 
"KRN",8994,3032,1,2,0)
text.
"KRN",8994,3032,2,0)
^8994.02A^1^1
"KRN",8994,3032,2,1,0)
DFN^1^^1^1
"KRN",8994,3032,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3032,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3032,2,"B","DFN",1)

"KRN",8994,3032,2,"PARAMSEQ",1,1)

"KRN",8994,3032,3,0)
^^1^1^3150128^
"KRN",8994,3032,3,1,0)
Global Array in which each array entry contains a formatted line of text.
"KRN",8994,3033,-1)
0^57
"KRN",8994,3033,0)
SDEC PATAPPTD^PATAPPTD^SDEC^4^R^0^^0
"KRN",8994,3033,1,0)
^^2^2^3150128^
"KRN",8994,3033,1,1,0)
Return recordset of patient appointments used in listing
"KRN",8994,3033,1,2,0)
a patient's appointments and generating patient letters.
"KRN",8994,3033,2,0)
^8994.02A^1^1
"KRN",8994,3033,2,1,0)
DFN^1^^1^1
"KRN",8994,3033,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3033,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3033,2,"B","DFN",1)

"KRN",8994,3033,2,"PARAMSEQ",1,1)

"KRN",8994,3033,3,0)
^^18^18^3150128^
"KRN",8994,3033,3,1,0)
Global Array in which each array entry contains patient appointment data 
"KRN",8994,3033,3,2,0)
separated by ^:
"KRN",8994,3033,3,3,0)
  1. Name
"KRN",8994,3033,3,4,0)
  2. DOB
"KRN",8994,3033,3,5,0)
  3. Sex
"KRN",8994,3033,3,6,0)
  4. HRN
"KRN",8994,3033,3,7,0)
  5. ApptDate
"KRN",8994,3033,3,8,0)
  6. Clinic
"KRN",8994,3033,3,9,0)
  7. TypeStatus
"KRN",8994,3033,3,10,0)
  8. RESOURCEID
"KRN",8994,3033,3,11,0)
  9. APPT_MADE_BY
"KRN",8994,3033,3,12,0)
 10. DATE_APPT_MADE
"KRN",8994,3033,3,13,0)
 11. NOTE
"KRN",8994,3033,3,14,0)
 12. STREET
"KRN",8994,3033,3,15,0)
 13. CITY
"KRN",8994,3033,3,16,0)
 14. STATE
"KRN",8994,3033,3,17,0)
 15. ZIP
"KRN",8994,3033,3,18,0)
 16. HOMEPHONE
"KRN",8994,3034,-1)
0^56
"KRN",8994,3034,0)
SDEC OVBOOK^OVBOOK^SDEC^4^R^0^^0
"KRN",8994,3034,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3034,1,1,0)
Check if Overbook is allowed for given Clinic and Date.
"KRN",8994,3034,2,0)
^8994.02A^3^3
"KRN",8994,3034,2,1,0)
SDCL^1^^1^1
"KRN",8994,3034,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3034,2,1,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3034,2,2,0)
NSDT^1^^1^2
"KRN",8994,3034,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3034,2,2,1,1,0)
date/time of new appointment in external format
"KRN",8994,3034,2,3,0)
SDECRES^1^^1^3
"KRN",8994,3034,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3034,2,3,1,1,0)
Resource to check for overbook - pointer to SDEC RESOURCE file 409.831
"KRN",8994,3034,2,"B","NSDT",2)

"KRN",8994,3034,2,"B","SDCL",1)

"KRN",8994,3034,2,"B","SDECRES",3)

"KRN",8994,3034,2,"PARAMSEQ",1,1)

"KRN",8994,3034,2,"PARAMSEQ",2,2)

"KRN",8994,3034,2,"PARAMSEQ",3,3)

"KRN",8994,3034,3,0)
^^2^2^3150128^
"KRN",8994,3034,3,1,0)
Return a single entry in the recordset - ERRORID that could have the 
"KRN",8994,3034,3,2,0)
value of YES or NO.
"KRN",8994,3035,-1)
0^54
"KRN",8994,3035,0)
SDEC NOSHOPAT^NOSHOPAT^SDEC^4^R^0^^0
"KRN",8994,3035,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3035,1,1,0)
COLLECT NO-SHOW DATA for Patient
"KRN",8994,3035,2,0)
^8994.02A^2^2
"KRN",8994,3035,2,1,0)
DFN^1^^1^1
"KRN",8994,3035,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3035,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3035,2,2,0)
SDCL^1^^1^2
"KRN",8994,3035,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3035,2,2,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3035,2,"B","DFN",1)

"KRN",8994,3035,2,"B","SDCL",2)

"KRN",8994,3035,2,"PARAMSEQ",1,1)

"KRN",8994,3035,2,"PARAMSEQ",2,2)

"KRN",8994,3035,3,0)
^^6^6^3150128^
"KRN",8994,3035,3,1,0)
Single entry in the Global Array separated by ^:
"KRN",8994,3035,3,2,0)
    1. PATIENT_IEN
"KRN",8994,3035,3,3,0)
    2. CLINIC_IEN
"KRN",8994,3035,3,4,0)
    3. TOO_MANY = flag 0=OK; 1=too many no shows
"KRN",8994,3035,3,5,0)
    4. ALLOWED_NO_SHOWS
"KRN",8994,3035,3,6,0)
    5. TOTAL_NO_SHOWS
"KRN",8994,3036,-1)
0^55
"KRN",8994,3036,0)
SDEC NOSHOW^NOSHOW^SDEC^4^R^0^^0
"KRN",8994,3036,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3036,1,1,0)
Sets appointment noshow flag in SDEC APPOINTMENT file
"KRN",8994,3036,2,0)
^8994.02A^4^4
"KRN",8994,3036,2,1,0)
SDECAPTID^1^^1^1
"KRN",8994,3036,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3036,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84.
"KRN",8994,3036,2,2,0)
SDECNS^1^^1^2
"KRN",8994,3036,2,2,1,0)
^^3^3^3150128^
"KRN",8994,3036,2,2,1,1,0)
Cancel flag
"KRN",8994,3036,2,2,1,2,0)
1=YES (Set NOSHOW)
"KRN",8994,3036,2,2,1,3,0)
0=NO (cancel NOSHOW)
"KRN",8994,3036,2,3,0)
USERIEN^1^^0^3
"KRN",8994,3036,2,3,1,0)
^^2^2^3150128^
"KRN",8994,3036,2,3,1,1,0)
User that entered No-Show - pointer to NEW PERSON file 200
"KRN",8994,3036,2,3,1,2,0)
default to current user
"KRN",8994,3036,2,4,0)
SDECDATE^1^^0^4
"KRN",8994,3036,2,4,1,0)
^^2^2^3150128^
"KRN",8994,3036,2,4,1,1,0)
Date/Time that No-Show was entered in external format
"KRN",8994,3036,2,4,1,2,0)
default to NOW.
"KRN",8994,3036,2,"B","SDECAPTID",1)

"KRN",8994,3036,2,"B","SDECDATE",4)

"KRN",8994,3036,2,"B","SDECNS",2)

"KRN",8994,3036,2,"B","USERIEN",3)

"KRN",8994,3036,2,"PARAMSEQ",1,1)

"KRN",8994,3036,2,"PARAMSEQ",2,2)

"KRN",8994,3036,2,"PARAMSEQ",3,3)

"KRN",8994,3036,2,"PARAMSEQ",4,4)

"KRN",8994,3036,3,0)
^^1^1^3150128^
"KRN",8994,3036,3,1,0)
Returns error code in recordset field ERRORID.
"KRN",8994,3037,-1)
0^53
"KRN",8994,3037,0)
SDEC NEWPERS^NEWPERS^SDEC^4^R^0^^0
"KRN",8994,3037,1,0)
^8994.01^2^2^3150806^^^^
"KRN",8994,3037,1,1,0)
return entries from the NEW PERSON table 200 that are 'active' AND have 
"KRN",8994,3037,1,2,0)
PROVIDER CLASS defined.
"KRN",8994,3037,2,0)
^8994.02A^4^4
"KRN",8994,3037,2,1,0)
SDCLASS^1^^0^1
"KRN",8994,3037,2,1,1,0)
^^2^2^3150806^
"KRN",8994,3037,2,1,1,1,0)
usr class ID pointer to USR CLASS file 8930
"KRN",8994,3037,2,1,1,2,0)
default is the 'PROVIDER' USR CLASS
"KRN",8994,3037,2,2,0)
SDPART^1^^0^2
"KRN",8994,3037,2,2,1,0)
^^1^1^3150806^
"KRN",8994,3037,2,2,1,1,0)
Partial user name
"KRN",8994,3037,2,3,0)
MAXREC^1^^0^3
"KRN",8994,3037,2,3,1,0)
^^1^1^3150806^
"KRN",8994,3037,2,3,1,1,0)
Max records returned
"KRN",8994,3037,2,4,0)
LSUB^1^^0^4
"KRN",8994,3037,2,4,1,0)
^8994.021^1^1^3150806^^
"KRN",8994,3037,2,4,1,1,0)
Last subscripts from previous call.
"KRN",8994,3037,2,"B","LSUB",4)

"KRN",8994,3037,2,"B","MAXREC",3)

"KRN",8994,3037,2,"B","SDCLASS",1)

"KRN",8994,3037,2,"B","SDPART",2)

"KRN",8994,3037,2,"PARAMSEQ",1,1)

"KRN",8994,3037,2,"PARAMSEQ",2,2)

"KRN",8994,3037,2,"PARAMSEQ",3,3)

"KRN",8994,3037,2,"PARAMSEQ",4,4)

"KRN",8994,3037,3,0)
^^5^5^3150806^
"KRN",8994,3037,3,1,0)
Global Array in which each array entry contains user ID and name 
"KRN",8994,3037,3,2,0)
separated by ^:
"KRN",8994,3037,3,3,0)
 1. NEW_PERSON_IEN
"KRN",8994,3037,3,4,0)
 2. NAME
"KRN",8994,3037,3,5,0)
 3. LASTSUB
"KRN",8994,3038,-1)
0^87
"KRN",8994,3038,0)
SDEC WLSET^WLSET^SDEC^1^R^0^^0
"KRN",8994,3038,1,0)
^8994.01^1^1^3150128^^^
"KRN",8994,3038,1,1,0)
Waitlist Set
"KRN",8994,3038,2,0)
^8994.02A^1^1
"KRN",8994,3038,2,1,0)
INP^1^^1^1
"KRN",8994,3038,2,1,1,0)
^^61^61^3150128^
"KRN",8994,3038,2,1,1,1,0)
INP(1) = (integer) Wait List IEN point to
"KRN",8994,3038,2,1,1,2,0)
                     SD WAIT LIST file 409.3.
"KRN",8994,3038,2,1,1,3,0)
                     If null, a new entry will be added
"KRN",8994,3038,2,1,1,4,0)
  INP(2) = (text) Patient NAME - name field from the PATIENT file 2
"KRN",8994,3038,2,1,1,5,0)
  INP(3) = (date) Originating Date and Time in external date form
"KRN",8994,3038,2,1,1,6,0)
  INP(4) = (text) Institution name NAME field from the
"KRN",8994,3038,2,1,1,7,0)
                  INSTITUTION file
"KRN",8994,3038,2,1,1,8,0)
  INP(5) = (text) Wait List Type
"KRN",8994,3038,2,1,1,9,0)
                   PCMM TEAM ASSIGNMENT
"KRN",8994,3038,2,1,1,10,0)
                   PCMM POSITION ASSIGNMENT
"KRN",8994,3038,2,1,1,11,0)
                   SERVICE/SPECIALITY
"KRN",8994,3038,2,1,1,12,0)
                   SPECIFIC CLINIC
"KRN",8994,3038,2,1,1,13,0)
  INP(6) = (text) WL Specific Team name - NAME field in the
"KRN",8994,3038,2,1,1,14,0)
                  TEAM file 404.51
"KRN",8994,3038,2,1,1,15,0)
  INP(7) = (text) WL Specific Position name - NAME field in
"KRN",8994,3038,2,1,1,16,0)
                  The TEAM POSITION file 404.57.
"KRN",8994,3038,2,1,1,17,0)
  INP(8) = (text) WL Service/Specialty name - NAME field in
"KRN",8994,3038,2,1,1,18,0)
                  SD WL SERVICE/SPECIALTY file 409.31.
"KRN",8994,3038,2,1,1,19,0)
  INP(9) = (text) WL Specific Clinic name - NAME field in
"KRN",8994,3038,2,1,1,20,0)
                  SD WL CLINIC LOCATION file 409.32.
"KRN",8994,3038,2,1,1,21,0)
  INP(10) = (text) Originating User name - NAME field in
"KRN",8994,3038,2,1,1,22,0)
                   NEW PERSON file 200
"KRN",8994,3038,2,1,1,23,0)
  INP(11) = (text) <NOT USED> Priority - 'ASAP' or 'FUTURE'
"KRN",8994,3038,2,1,1,24,0)
                   Priority is set based on 14 Desired Date of Appt.
"KRN",8994,3038,2,1,1,25,0)
  INP(12) = (text) Request By - 'PROVIDER' or 'PATIENT'
"KRN",8994,3038,2,1,1,26,0)
  INP(13) = (text) Provider name - NAME field in NEW PERSON file 200
"KRN",8994,3038,2,1,1,27,0)
  INP(14) = (date) Desired Date of appointment in external format.
"KRN",8994,3038,2,1,1,28,0)
  INP(15) = (text) comment must be 1-60 characters
"KRN",8994,3038,2,1,1,29,0)
  INP(16) = (text) EWL Enrollee Status
"KRN",8994,3038,2,1,1,30,0)
                    NEW
"KRN",8994,3038,2,1,1,31,0)
                    ESTABLISHED
"KRN",8994,3038,2,1,1,32,0)
                    PRIOR
"KRN",8994,3038,2,1,1,33,0)
                    UNDETERMINED
"KRN",8994,3038,2,1,1,34,0)
  INP(17) = (text) NOT USED - PATIENT TELEPHONE 4-20 characters
"KRN",8994,3038,2,1,1,35,0)
  INP(18) = (text) ENROLLMENT PRIORITY - Valid Values are:
"KRN",8994,3038,2,1,1,36,0)
                                         GROUP 1
"KRN",8994,3038,2,1,1,37,0)
                                         GROUP 
"KRN",8994,3038,2,1,1,38,0)
2                                                                         
"KRN",8994,3038,2,1,1,39,0)
                                 GROUP 3
"KRN",8994,3038,2,1,1,40,0)
                                         GROUP 4
"KRN",8994,3038,2,1,1,41,0)
                                         GROUP 5
"KRN",8994,3038,2,1,1,42,0)
                                         GROUP 6
"KRN",8994,3038,2,1,1,43,0)
                                         GROUP 7
"KRN",8994,3038,2,1,1,44,0)
                                         GROUP 8
"KRN",8994,3038,2,1,1,45,0)
  INP(19) = (text) NOT USED - APPT SCHEDULED
"KRN",8994,3038,2,1,1,46,0)
  INP(20) = (text) MULTIPLE APPOINTMENT RTC NO; YES
"KRN",8994,3038,2,1,1,47,0)
  INP(21) = (integer) MULT APPT RTC INTERVAL integer between 1-365
"KRN",8994,3038,2,1,1,48,0)
  INP(22) = (integer) MULT APPT NUMBER integer between 1-100
"KRN",8994,3038,2,1,1,49,0)
  INP(23) = Patient Contacts separated by ::
"KRN",8994,3038,2,1,1,50,0)
     Each :: piece has the following ~~ pieces:
"KRN",8994,3038,2,1,1,51,0)
      1) = (date) DATE ENTERED external date/time
"KRN",8994,3038,2,1,1,52,0)
      2) = (text) PC ENTERED BY USER ID or NAME - Pointer to
"KRN",8994,3038,2,1,1,53,0)
                  NEW PERSON file or NAME
"KRN",8994,3038,2,1,1,54,0)
      4) = (text) ACTION - 'Called' or 'Message Left'
"KRN",8994,3038,2,1,1,55,0)
      5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"KRN",8994,3038,2,1,1,56,0)
  INP(24) = (optional) SERVICE CONNECTED PRIORITY valid values are
"KRN",8994,3038,2,1,1,57,0)
                        NO YES
"KRN",8994,3038,2,1,1,58,0)
  INP(25) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"KRN",8994,3038,2,1,1,59,0)
  INP(26) = (optional) MRTC calculated preferred dates separated
"KRN",8994,3038,2,1,1,60,0)
                       by pipe |
"KRN",8994,3038,2,1,1,61,0)
                    Each date can be in external format with no time.
"KRN",8994,3038,2,"B","INP",1)

"KRN",8994,3038,2,"PARAMSEQ",1,1)

"KRN",8994,3038,3,0)
^^2^2^3150128^
"KRN",8994,3038,3,1,0)
Return a single entry in the Global Array with the fields ERRORID and 
"KRN",8994,3038,3,2,0)
ERRORTEXT
"KRN",8994,3039,-1)
0^86
"KRN",8994,3039,0)
SDEC WLGET^WLGET^SDEC^4^R^0^^0
"KRN",8994,3039,1,0)
^8994.01^1^1^3150128^^^^
"KRN",8994,3039,1,1,0)
Waitlist GET
"KRN",8994,3039,2,0)
^8994.02A^7^7
"KRN",8994,3039,2,1,0)
WLIEN1^1^^0^1
"KRN",8994,3039,2,1,1,0)
^8994.021^1^1^3150806^^
"KRN",8994,3039,2,1,1,1,0)
Wait List ID pointer to the SD WAIT LIST file 409.3
"KRN",8994,3039,2,2,0)
MAXREC^1^^0^2
"KRN",8994,3039,2,2,1,0)
^8994.021^1^1^3150806^^
"KRN",8994,3039,2,2,1,1,0)
Max records returned
"KRN",8994,3039,2,3,0)
SDBEG^1^^0^3
"KRN",8994,3039,2,3,1,0)
^8994.021^2^2^3150806^^
"KRN",8994,3039,2,3,1,1,0)
Begin date in external format
"KRN",8994,3039,2,3,1,2,0)
defaults to Jan 1, 1800
"KRN",8994,3039,2,4,0)
SDEND^1^^0^4
"KRN",8994,3039,2,4,1,0)
^8994.021^2^2^3150806^^
"KRN",8994,3039,2,4,1,1,0)
End date in external format.
"KRN",8994,3039,2,4,1,2,0)
Defaults to 90 days before TODAY
"KRN",8994,3039,2,5,0)
DFN^1^^0^5
"KRN",8994,3039,2,5,1,0)
^^1^1^3150806^
"KRN",8994,3039,2,5,1,1,0)
Patient ID pointer to PATIENT file 2 
"KRN",8994,3039,2,6,0)
LASTSUB^1^^0^6
"KRN",8994,3039,2,6,1,0)
^^2^2^3150806^
"KRN",8994,3039,2,6,1,1,0)
only used if DFN=""
"KRN",8994,3039,2,6,1,2,0)
Last subscripts from previous call
"KRN",8994,3039,2,7,0)
SDTOP^1^^0^7
"KRN",8994,3039,2,7,1,0)
^^1^1^3150806^
"KRN",8994,3039,2,7,1,1,0)
runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"KRN",8994,3039,2,"B","DFN",5)

"KRN",8994,3039,2,"B","LASTSUB",6)

"KRN",8994,3039,2,"B","MAXREC",2)

"KRN",8994,3039,2,"B","SDBEG",3)

"KRN",8994,3039,2,"B","SDEND",4)

"KRN",8994,3039,2,"B","SDTOP",7)

"KRN",8994,3039,2,"B","WLIEN1",1)

"KRN",8994,3039,2,"PARAMSEQ",1,1)

"KRN",8994,3039,2,"PARAMSEQ",2,2)

"KRN",8994,3039,2,"PARAMSEQ",3,3)

"KRN",8994,3039,2,"PARAMSEQ",4,4)

"KRN",8994,3039,2,"PARAMSEQ",5,5)

"KRN",8994,3039,2,"PARAMSEQ",6,6)

"KRN",8994,3039,2,"PARAMSEQ",7,7)

"KRN",8994,3039,3,0)
^^73^73^3150128^
"KRN",8994,3039,3,1,0)
Return Wait List data in Dataset format with these
"KRN",8994,3039,3,2,0)
          columns:
"KRN",8994,3039,3,3,0)
   DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5]
"KRN",8994,3039,3,4,0)
   ^ GENDER [6] ^ WAIT LIST IEN [7]
"KRN",8994,3039,3,5,0)
   ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9] ^ INSTITUTION NAME [10]
"KRN",8994,3039,3,6,0)
   ^ WAIT LIST TYPE [11] ^ WL SPECIFIC TEAM [12]
"KRN",8994,3039,3,7,0)
   ^ WL SPECIFIC POSITION [13] ^ WL SERVICE/SPECIALTY IEN [14]
"KRN",8994,3039,3,8,0)
   ^ WL SERVICE/SPECIALTY NAME [15]
"KRN",8994,3039,3,9,0)
   ^ WL SPECIFIC CLINIC IEN [16] ^ WLSPECIFIC CLINIC NAME [17]
"KRN",8994,3039,3,10,0)
   ^ ORIGINATING USER IEN [18] ^ ORIGINATING USER NAME [19} ^ PRIORITY 
"KRN",8994,3039,3,11,0)
[20]
"KRN",8994,3039,3,12,0)
   ^ REQUEST BY [21] ^ PROVIDER IEN [22]
"KRN",8994,3039,3,13,0)
   ^ PROVIDER NAME [23] ^ DESIRED DATE OF APPOINTMENT [24] ^ COMMENTS [25]
"KRN",8994,3039,3,14,0)
   ^ EWL ENROLLEE STATUS [26]
"KRN",8994,3039,3,15,0)
   ^ PTPHONE [27] phone number (residence) from patient demographics
"KRN",8994,3039,3,16,0)
   ^ ENROLLMENT PRIORITY [28] - Valid Values are:
"KRN",8994,3039,3,17,0)
                                GROUP 1
"KRN",8994,3039,3,18,0)
                                GROUP 2
"KRN",8994,3039,3,19,0)
                                GROUP 3
"KRN",8994,3039,3,20,0)
                                GROUP 4
"KRN",8994,3039,3,21,0)
                                GROUP 5
"KRN",8994,3039,3,22,0)
                                GROUP 6
"KRN",8994,3039,3,23,0)
                                GROUP 7
"KRN",8994,3039,3,24,0)
                                GROUP 8
"KRN",8994,3039,3,25,0)
   ^ NOT USED - APPT SCHEDULED DATE by pipe | [29]
"KRN",8994,3039,3,26,0)
   ^ MULTIPLE APPOINTMENT RTC 0=NO; 1=YES [30]
"KRN",8994,3039,3,27,0)
   ^ MULT APPT RTC INTERVAL-Integer between 1-365 [31]
"KRN",8994,3039,3,28,0)
   ^ MULT APPT NUMBER-Integer between 1-100 [32]
"KRN",8994,3039,3,29,0)
   ^ PRIGRP [33] ^ ELIGIEN [34] ELIGNAME [35] ^ SVCCONN [36] ^ 
"KRN",8994,3039,3,30,0)
SVCCONNP[37]
"KRN",8994,3039,3,31,0)
   ^ TYPEIEN [38] ^ TYPENAME [39] ^ PCONTACT [40] ^ WLDISPD [41]
"KRN",8994,3039,3,32,0)
   ^ WLDISPU [42] ^ WLDISPUN [43] ^ WLSVCCON [44] ^ PADDRES1 [45]
"KRN",8994,3039,3,33,0)
   ^ PADDRES2 [46] ^ PADDRES3 [47] ^ CITY [48] ^ PSTATE [49] ^ COUNTRY 
"KRN",8994,3039,3,34,0)
[50]
"KRN",8994,3039,3,35,0)
   ^ ZIP4 [51] ^ GAF [52]  ^ DATE/TIME ENTERED [53] ^ MTRCDATES [54]
"KRN",8994,3039,3,36,0)
   ^ SENSITIVE [55] ^ LASTSUB [56]
"KRN",8994,3039,3,37,0)
 
"KRN",8994,3039,3,38,0)
 --[55] SENSITIVE - Sensitive Record Access data separated by pipe |:
"KRN",8994,3039,3,39,0)
  ; 1. return code:
"KRN",8994,3039,3,40,0)
  -1-RPC/API failed
"KRN",8994,3039,3,41,0)
  Required variable not defined
"KRN",8994,3039,3,42,0)
  0-No display/action required
"KRN",8994,3039,3,43,0)
  Not accessing own, employee, or sensitive record
"KRN",8994,3039,3,44,0)
  1-Display warning message
"KRN",8994,3039,3,45,0)
  Sensitive and DG SENSITIVITY key holder
"KRN",8994,3039,3,46,0)
  or Employee and DG SECURITY OFFICER key holder
"KRN",8994,3039,3,47,0)
  2-Display warning message/require OK to continue
"KRN",8994,3039,3,48,0)
  Sensitive and not a DG SENSITIVITY key holder
"KRN",8994,3039,3,49,0)
  Employee and not a DG SECURITY OFFICER key holder
"KRN",8994,3039,3,50,0)
  3-Access to record denied
"KRN",8994,3039,3,51,0)
  Accessing own record
"KRN",8994,3039,3,52,0)
  4-Access to Patient (#2) file records denied
"KRN",8994,3039,3,53,0)
  SSN not defined
"KRN",8994,3039,3,54,0)
  2. display text/message
"KRN",8994,3039,3,55,0)
  3. display text/message
"KRN",8994,3039,3,56,0)
  4. display text/message
"KRN",8994,3039,3,57,0)
 
"KRN",8994,3039,3,58,0)
 --[54] MTRCDATES separated by pipe |, no time
"KRN",8994,3039,3,59,0)
 
"KRN",8994,3039,3,60,0)
 --[52] GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN>
"KRN",8994,3039,3,61,0)
              | <diagnosis by name>
"KRN",8994,3039,3,62,0)
 
"KRN",8994,3039,3,63,0)
--[40] PCONTACT Patient Contact
"KRN",8994,3039,3,64,0)
 PATIENT CONTACT pieced by :: where each :: piece contains the
"KRN",8994,3039,3,65,0)
                 following ~~ pieces:
"KRN",8994,3039,3,66,0)
   1. DATE ENTERED external date/time
"KRN",8994,3039,3,67,0)
   2. PC ENTERED BY USER IEN Pointer to NEW PERSON file
"KRN",8994,3039,3,68,0)
   3. PC ENTERED BY USER NAME NAME from NEW PERSION file
"KRN",8994,3039,3,69,0)
   4. ACTION C=Called; M=Message Left
"KRN",8994,3039,3,70,0)
   5. PATIENT PHONE Free-Text 4-20 characters 
"KRN",8994,3039,3,71,0)
 
"KRN",8994,3039,3,72,0)
 --[29] APPT SCHEDULED DATE
"KRN",8994,3039,3,73,0)
NO LONGER USED
"KRN",8994,3040,-1)
0^85
"KRN",8994,3040,0)
SDEC WLCLOSE^WLCLOSE^SDEC^1^R^0^^0
"KRN",8994,3040,1,0)
^8994.01^2^2^3150806^^^
"KRN",8994,3040,1,1,0)
 Remove a Patient from the Wait List by setting the STATUS to CLOSED
"KRN",8994,3040,1,2,0)
 and updating the DISPOSITION fields.
"KRN",8994,3040,2,0)
^8994.02A^1^1
"KRN",8994,3040,2,1,0)
INP^1^^1^1
"KRN",8994,3040,2,1,1,0)
^8994.021^5^5^3150806^^
"KRN",8994,3040,2,1,1,1,0)
INP - Input parameters array
"KRN",8994,3040,2,1,1,2,0)
      INP(1) - Waitlist ID - Pointer to SD WAIT LIST file
"KRN",8994,3040,2,1,1,3,0)
      INP(2) - Disposition
"KRN",8994,3040,2,1,1,4,0)
      INP(3) - User Id - Pointer to NEW PERSON file
"KRN",8994,3040,2,1,1,5,0)
      INP(4) - Date Dispositioned in external form
"KRN",8994,3040,2,"B","INP",1)

"KRN",8994,3040,2,"PARAMSEQ",1,1)

"KRN",8994,3040,3,0)
^8994.03^2^2^3150806^^^
"KRN",8994,3040,3,1,0)
 This RPC returns the IEN of the closed entry if successful;
"KRN",8994,3040,3,2,0)
 otherwise, it returns -1^<error message>.
"KRN",8994,3041,-1)
0^79
"KRN",8994,3041,0)
SDEC SVSPALL^SVSPALL^SDEC^4^R^0^^0
"KRN",8994,3041,1,0)
^8994.01^2^2^3150128^^^
"KRN",8994,3041,1,1,0)
 Return the IEN and NAME for all entries in the SD WL SERVICE/SPECIALTY 
"KRN",8994,3041,1,2,0)
file
"KRN",8994,3041,3,0)
^^2^2^3150128^
"KRN",8994,3041,3,1,0)
dataset format
"KRN",8994,3041,3,2,0)
 SERVICESPECIALTY_IEN ^ SERVICESPECIALTY_NAME
"KRN",8994,3042,-1)
0^59
"KRN",8994,3042,0)
SDEC PROVALL^PROVALL^SDEC^4^R^0^^0
"KRN",8994,3042,1,0)
^8994.01^1^1^3150806^^
"KRN",8994,3042,1,1,0)
Return all providers for a given clinic from the HOSPITAL LOCATION file 44
"KRN",8994,3042,2,0)
^8994.02A^1^1
"KRN",8994,3042,2,1,0)
SDECCL^1^^1^1
"KRN",8994,3042,2,1,1,0)
^8994.021^1^1^3150806^^^
"KRN",8994,3042,2,1,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3042,2,"B","SDECCL",1)

"KRN",8994,3042,2,"PARAMSEQ",1,1)

"KRN",8994,3042,3,0)
^8994.03^4^4^3150806^^^
"KRN",8994,3042,3,1,0)
Global Array in which each array entry contains provider data separated 
"KRN",8994,3042,3,2,0)
by ^:
"KRN",8994,3042,3,3,0)
 1. PROVIDER_IEN
"KRN",8994,3042,3,4,0)
 2. PROVIDER_NAME
"KRN",8994,3043,-1)
0^24
"KRN",8994,3043,0)
SDEC CLINALL^CLINALL^SDEC^4^R^0^^0
"KRN",8994,3043,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3043,1,1,0)
Return the IEN and NAME for all entries in the SD WL CLINIC LOCATION file
"KRN",8994,3043,3,0)
^^5^5^3150128^
"KRN",8994,3043,3,1,0)
Global Array in which each entry contains the following data from 
"KRN",8994,3043,3,2,0)
the SD WL CLINIC LOCATION file separated by ^:
"KRN",8994,3043,3,3,0)
 1. CLINIC_IEN - pointer to SD WL CLINIC LOCATION file
"KRN",8994,3043,3,4,0)
 2. CLINIC_NAME -NAME from SD WL CLINIC LOCATION file
"KRN",8994,3043,3,5,0)
 3. HOSPITAL_LOCATION_ID - pointer to HOSPITAL LOCATION file 44
"KRN",8994,3044,-1)
0^52
"KRN",8994,3044,0)
SDEC IMHERE^IMHERE^SDEC^1^R^0^^0
"KRN",8994,3044,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3044,1,1,0)
 Returns a simple value to client.  Used to establish continued existence
"KRN",8994,3044,1,2,0)
 of the client to the server; resets the server READ timeout.
"KRN",8994,3044,3,0)
^^2^2^3150128^
"KRN",8994,3044,3,1,0)
 Returns a simple value to client.  Used to establish continued existence
"KRN",8994,3044,3,2,0)
 of the client to the server; resets the server READ timeout.
"KRN",8994,3045,-1)
0^62
"KRN",8994,3045,0)
SDEC PWH^PWH^SDEC^4^R^0^^0
"KRN",8994,3045,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3045,1,1,0)
 Return a list of entries from the HEALTH SUMMARY PWH TYPES file.
"KRN",8994,3045,3,0)
^^1^1^3150128^
"KRN",8994,3045,3,1,0)
returned pointer to list of active Health Summary PWH Types
"KRN",8994,3046,-1)
0^51
"KRN",8994,3046,0)
SDEC HOSPLOC^HOSPLOC^SDEC^4^R^0^^0
"KRN",8994,3046,1,0)
^^1^1^3150128^
"KRN",8994,3046,1,1,0)
Get HOSPITAL LOCATIONS
"KRN",8994,3046,3,0)
^^8^8^3150128^
"KRN",8994,3046,3,1,0)
Global Array in which each array entry
"KRN",8994,3046,3,2,0)
contains HOSPITAL LOCATION data separated by ^:
"KRN",8994,3046,3,3,0)
  1. HOSPITAL_LOCATION_ID
"KRN",8994,3046,3,4,0)
  2. HOSPITAL_LOCATION
"KRN",8994,3046,3,5,0)
  3. DEFAULT_PROVIDER
"KRN",8994,3046,3,6,0)
  4. STOP_CODE_NUMBER
"KRN",8994,3046,3,7,0)
  5. INACTIVATE_DATE
"KRN",8994,3046,3,8,0)
  6. REACTIVATE_DATE
"KRN",8994,3047,-1)
0^50
"KRN",8994,3047,0)
SDEC HOLIDAY^HOLIDAY^SDEC^4^R^0^^0
"KRN",8994,3047,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3047,1,1,0)
Remote Procedure to return data for the HOLIDAY file.
"KRN",8994,3047,2,0)
^8994.02A^1^1
"KRN",8994,3047,2,1,0)
SDECBD^1^^0^1
"KRN",8994,3047,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3047,2,1,1,1,0)
Begin date in external format.
"KRN",8994,3047,2,"B","SDECBD",1)

"KRN",8994,3047,2,"PARAMSEQ",1,1)

"KRN",8994,3047,3,0)
^^4^4^3150128^
"KRN",8994,3047,3,1,0)
Global Array in which each array entry contains the following Holiday 
"KRN",8994,3047,3,2,0)
data separated by ^:
"KRN",8994,3047,3,3,0)
  1. SDEC_HOLIDAY_DATE
"KRN",8994,3047,3,4,0)
  2. HOLIDAY_NAME
"KRN",8994,3048,-1)
0^49
"KRN",8994,3048,0)
SDEC HLTHSUMM^HLTHSUMM^SDEC^4^R^0^^0
"KRN",8994,3048,1,0)
^^1^1^3150128^
"KRN",8994,3048,1,1,0)
 Returns the text for a Health Summary report.
"KRN",8994,3048,2,0)
^8994.02A^1^1
"KRN",8994,3048,2,1,0)
DFN^1^^1^1
"KRN",8994,3048,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3048,2,1,1,1,0)
Patient ID pointer to PATIENT file 2.
"KRN",8994,3048,2,"B","DFN",1)

"KRN",8994,3048,2,"PARAMSEQ",1,1)

"KRN",8994,3048,3,0)
^^1^1^3150128^
"KRN",8994,3048,3,1,0)
Return a single entry in the recordset - ERRORID.
"KRN",8994,3049,-1)
0^68
"KRN",8994,3049,0)
SDEC RESGPUSR^RESGPUSR^SDEC^4^R^0^^0
"KRN",8994,3049,1,0)
^^6^6^3150505^
"KRN",8994,3049,1,1,0)
Returns ADO Recordset with all ACTIVE GROUP/RESOURCE combinations
"KRN",8994,3049,1,2,0)
to which user has access based on entries in SDEC RESOURCE USER file
"KRN",8994,3049,1,3,0)
If SDECDUZ=0 then returns all ACTIVE GROUP/RESOURCE combinations for 
"KRN",8994,3049,1,4,0)
current DUZ
"KRN",8994,3049,1,5,0)
If user SDECDUZ possesses the key SDECZMGR
"KRN",8994,3049,1,6,0)
then ALL ACTIVE resource group names are returned
"KRN",8994,3049,2,0)
^8994.02A^1^1
"KRN",8994,3049,2,1,0)
SDECDUZ^1^^1^1
"KRN",8994,3049,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3049,2,1,1,1,0)
User ID pointer to NEW PERSON file 200
"KRN",8994,3049,2,"B","SDECDUZ",1)

"KRN",8994,3049,2,"PARAMSEQ",1,1)

"KRN",8994,3049,3,0)
^^7^7^3150128^
"KRN",8994,3049,3,1,0)
Returns a Global Array in which each array entry contains active 
"KRN",8994,3049,3,2,0)
Group/Resource combinations separated by ^:
"KRN",8994,3049,3,3,0)
  1. RESOURCE_GROUPID
"KRN",8994,3049,3,4,0)
  2. RESOURCE_GROUP
"KRN",8994,3049,3,5,0)
  3. RESOURCE_GROUP_ITEMID
"KRN",8994,3049,3,6,0)
  4. RESOURCE_NAME
"KRN",8994,3049,3,7,0)
  5. RESOURCEID
"KRN",8994,3050,-1)
0^47
"KRN",8994,3050,0)
SDEC GETFAC^GETFAC^SDEC^4^R^0^^0
"KRN",8994,3050,1,0)
^^2^2^3150128^
"KRN",8994,3050,1,1,0)
Remote procedure to return the currently assigned facilities/divisions 
"KRN",8994,3050,1,2,0)
for a given user.
"KRN",8994,3050,2,0)
^8994.02A^1^1
"KRN",8994,3050,2,1,0)
SDECDUZ^1^^1^1
"KRN",8994,3050,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3050,2,1,1,1,0)
User IEN pointer to NEW PERSON file 200
"KRN",8994,3050,2,"B","SDECDUZ",1)

"KRN",8994,3050,2,"PARAMSEQ",1,1)

"KRN",8994,3050,3,0)
^^11^11^3150128^
"KRN",8994,3050,3,1,0)
Global Array in which each array entry
"KRN",8994,3050,3,2,0)
 contains the following ^ pieces:
"KRN",8994,3050,3,3,0)
     DIV_IEN  = institution Id pointer to the INSTITUTION file 4
"KRN",8994,3050,3,4,0)
                NOTE field in file 200 uses the term DIVISION but the
"KRN",8994,3050,3,5,0)
                field points to the INSTITUTION file.
"KRN",8994,3050,3,6,0)
     DIV_NAME = institution NAME from the INSTITUTION file
"KRN",8994,3050,3,7,0)
     DEFAULT  = Is default division/facility?
"KRN",8994,3050,3,8,0)
                Value can be 'YES' or 'NO'
"KRN",8994,3050,3,9,0)
     TZ_CODE  = CODE from the MAILMAN TIME ZONE file 4.4
"KRN",8994,3050,3,10,0)
     TZ_NAME  = TIME ZONE NAME from the MAILMAN TIME ZONE file
"KRN",8994,3050,3,11,0)
     TZ_DIFF  = DIFFERENTIAL from the MAILMAN TIME ZONE file
"KRN",8994,3051,-1)
0^48
"KRN",8994,3051,0)
SDEC GETREGA^GETREGA^SDEC^4^R^0^^0
"KRN",8994,3051,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3051,1,1,0)
return basic reg info/demographics for given patient
"KRN",8994,3051,2,0)
^8994.02A^1^1
"KRN",8994,3051,2,1,0)
DFN^1^^1^1
"KRN",8994,3051,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3051,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3051,2,"B","DFN",1)

"KRN",8994,3051,2,"PARAMSEQ",1,1)

"KRN",8994,3051,3,0)
^^50^50^3150128^
"KRN",8994,3051,3,1,0)
A single entry in the global array containing patient data separated by ^:
"KRN",8994,3051,3,2,0)
     IEN
"KRN",8994,3051,3,3,0)
     STREET
"KRN",8994,3051,3,4,0)
     CITY
"KRN",8994,3051,3,5,0)
     STATE
"KRN",8994,3051,3,6,0)
     ZIP
"KRN",8994,3051,3,7,0)
     NAME
"KRN",8994,3051,3,8,0)
     DOB
"KRN",8994,3051,3,9,0)
     SSN
"KRN",8994,3051,3,10,0)
     HRN
"KRN",8994,3051,3,11,0)
     HOMEPHONE
"KRN",8994,3051,3,12,0)
     OFCPHONE
"KRN",8994,3051,3,13,0)
     MSGPHONE
"KRN",8994,3051,3,14,0)
     NOK NAME
"KRN",8994,3051,3,15,0)
     RELATIONSHIP
"KRN",8994,3051,3,16,0)
     PHONE
"KRN",8994,3051,3,17,0)
     STREET
"KRN",8994,3051,3,18,0)
     CITY
"KRN",8994,3051,3,19,0)
     STATE
"KRN",8994,3051,3,20,0)
     ZIP
"KRN",8994,3051,3,21,0)
     DATAREVIEWED
"KRN",8994,3051,3,22,0)
     Medicare#
"KRN",8994,3051,3,23,0)
     Suffix
"KRN",8994,3051,3,24,0)
     RegistrationComments 
"KRN",8994,3051,3,25,0)
     GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN>
"KRN",8994,3051,3,26,0)
           | <diagnosis by name>
"KRN",8994,3051,3,27,0)
     PRACE - Patient Race pointer to RACE file 10
"KRN",8994,3051,3,28,0)
     PRACEN - Patient Race name from RACE file
"KRN",8994,3051,3,29,0)
     PETH - Patient Ethnicity list separated by pipe |
"KRN",8994,3051,3,30,0)
            Pointer to ETHNICITY file 10.2
"KRN",8994,3051,3,31,0)
     PETHN - Patient Ethnicity names spearated by pipe |
"KRN",8994,3051,3,32,0)
     PCOUNTRY - Country name
"KRN",8994,3051,3,33,0)
     GENDER - Patient Gender - valid values are MALE FEMALE
"KRN",8994,3051,3,34,0)
     SENSITIVE [31]- Sensitive Record Access data separated by pipe |:
"KRN",8994,3051,3,35,0)
        1. return code:
"KRN",8994,3051,3,36,0)
           -1-RPC/API failed
"KRN",8994,3051,3,37,0)
              Required variable not defined
"KRN",8994,3051,3,38,0)
            0-No display/action required
"KRN",8994,3051,3,39,0)
              Not accessing own, employee, or sensitive record
"KRN",8994,3051,3,40,0)
            1-Display warning message
"KRN",8994,3051,3,41,0)
              Sensitive and DG SENSITIVITY key holder
"KRN",8994,3051,3,42,0)
              or Employee and DG SECURITY OFFICER key holder
"KRN",8994,3051,3,43,0)
            2-Display warning message/require OK to continue
"KRN",8994,3051,3,44,0)
              Sensitive and not a DG SENSITIVITY key holder
"KRN",8994,3051,3,45,0)
              Employee and not a DG SECURITY OFFICER key holder
"KRN",8994,3051,3,46,0)
            3-Access to record denied
"KRN",8994,3051,3,47,0)
              Accessing own record
"KRN",8994,3051,3,48,0)
            4-Access to Patient (#2) file records denied
"KRN",8994,3051,3,49,0)
              SSN not defined
"KRN",8994,3051,3,50,0)
        2. display text/message
"KRN",8994,3052,-1)
0^1
"KRN",8994,3052,0)
SDEC ACCGPTYG^ACCGPTYG^SDEC^4^R^0^^0
"KRN",8994,3052,1,0)
^8994.01^1^1^3150126^^
"KRN",8994,3052,1,1,0)
Get access group types
"KRN",8994,3052,3,0)
^^10^10^3150126^
"KRN",8994,3052,3,1,0)
Global Array in which each array entry contains data from the SDEC ACCESS 
"KRN",8994,3052,3,2,0)
GROUP TYPE file 409.824:
"KRN",8994,3052,3,3,0)
  1. ACCESS_GROUP_TYPEID - Access Group Type ID pointer to
"KRN",8994,3052,3,4,0)
                           SDEC ACCESS GROUP TYPE file 409.824
"KRN",8994,3052,3,5,0)
  2. ACCESS_GROUP_ID     - Access Group ID pointer to
"KRN",8994,3052,3,6,0)
                           SDEC ACCESS GROUP file 409.822
"KRN",8994,3052,3,7,0)
  3. ACCESS_GROUP        - Name from the SDEC ACCESS GROUP file
"KRN",8994,3052,3,8,0)
  4. ACCESS_TYPE_ID      - Access Type ID pointer to the 
"KRN",8994,3052,3,9,0)
                           SDEC ACCESS TYPE file 409.823
"KRN",8994,3052,3,10,0)
  5. ACCESS_TYPE         - Access Type name from SDEC ACCESS TYPE file
"KRN",8994,3053,-1)
0^46
"KRN",8994,3053,0)
SDEC EHRPT^EHRPT^SDEC^4^R^0^^0
"KRN",8994,3053,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3053,1,1,0)
Raise patient selection event to EHR
"KRN",8994,3053,2,0)
^8994.02A^2^2
"KRN",8994,3053,2,1,0)
SDECWID^1^^0^1
"KRN",8994,3053,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3053,2,1,1,1,0)
Work station ID
"KRN",8994,3053,2,2,0)
SDECDFN^1^^1^2
"KRN",8994,3053,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3053,2,2,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3053,2,"B","SDECDFN",2)

"KRN",8994,3053,2,"B","SDECWID",1)

"KRN",8994,3053,2,"PARAMSEQ",1,1)

"KRN",8994,3053,2,"PARAMSEQ",2,2)

"KRN",8994,3053,3,0)
^^1^1^3150128^
"KRN",8994,3053,3,1,0)
Return Status = 1 if success, 0 if error
"KRN",8994,3054,-1)
0^45
"KRN",8994,3054,0)
SDEC EDITAPPT^EDITAPPT^SDEC^4^R^0^^0
"KRN",8994,3054,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3054,1,1,0)
Edit appointment (only 'note text' and appointment length can be edited)
"KRN",8994,3054,2,0)
^8994.02A^3^3
"KRN",8994,3054,2,1,0)
SDECAPTID^1^^1^1
"KRN",8994,3054,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3054,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84
"KRN",8994,3054,2,2,0)
SDECNOTE^1^^1^2
"KRN",8994,3054,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3054,2,2,1,1,0)
Note text
"KRN",8994,3054,2,3,0)
SDECLEN^1^^0^3
"KRN",8994,3054,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3054,2,3,1,1,0)
Length of appointment in minutes.
"KRN",8994,3054,2,"B","SDECAPTID",1)

"KRN",8994,3054,2,"B","SDECLEN",3)

"KRN",8994,3054,2,"B","SDECNOTE",2)

"KRN",8994,3054,2,"PARAMSEQ",1,1)

"KRN",8994,3054,2,"PARAMSEQ",2,2)

"KRN",8994,3054,2,"PARAMSEQ",3,3)

"KRN",8994,3054,3,0)
^^1^1^3150128^
"KRN",8994,3054,3,1,0)
Return a single entry in the Global Array - ERRORID.
"KRN",8994,3055,-1)
0^44
"KRN",8994,3055,0)
SDEC DELRU^DELRU^SDEC^4^R^0^^0
"KRN",8994,3055,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3055,1,1,0)
Delete Resource User from SDEC RESOURCE USER file
"KRN",8994,3055,2,0)
^8994.02A^1^1
"KRN",8994,3055,2,1,0)
SDECIEN^1^^1^1
"KRN",8994,3055,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3055,2,1,1,1,0)
Resource User ID pointer to SDEC RESOURCE USER file
"KRN",8994,3055,2,"B","SDECIEN",1)

"KRN",8994,3055,2,"PARAMSEQ",1,1)

"KRN",8994,3055,3,0)
^^2^2^3150128^
"KRN",8994,3055,3,1,0)
Return a single entry in the recordset containing error message or "" if 
"KRN",8994,3055,3,2,0)
no error.
"KRN",8994,3056,-1)
0^42
"KRN",8994,3056,0)
SDEC DELRESGP^DELRESGP^SDEC^4^R^0^^0
"KRN",8994,3056,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3056,1,1,0)
Deletes entry name SDECGRP from SDEC RESOURCE GROUP file
"KRN",8994,3056,2,0)
^8994.02A^1^1
"KRN",8994,3056,2,1,0)
SDECGRP^1^^1^1
"KRN",8994,3056,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3056,2,1,1,1,0)
Resource Group ID pointer to SDEC RESOURCE GROUP file 409.832.
"KRN",8994,3056,2,"B","SDECGRP",1)

"KRN",8994,3056,2,"PARAMSEQ",1,1)

"KRN",8994,3056,3,0)
^^2^2^3150128^
"KRN",8994,3056,3,1,0)
Return a single entry in the recordset containing error message or "" if 
"KRN",8994,3056,3,2,0)
no error.
"KRN",8994,3057,-1)
0^43
"KRN",8994,3057,0)
SDEC DELRGI^DELRGI^SDEC^4^R^0^^0
"KRN",8994,3057,1,0)
^^1^1^3150806^
"KRN",8994,3057,1,1,0)
Deletes entry SDECIEN1 from entry SDECIEN in the SDEC RESOURCE GROUP file.
"KRN",8994,3057,2,0)
^8994.02A^2^2
"KRN",8994,3057,2,1,0)
SDECIEN^1^^1^1
"KRN",8994,3057,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3057,2,1,1,1,0)
Resource Group ID pointer to SDEC RESOURCE GROUP file
"KRN",8994,3057,2,2,0)
SDECIEN1^1^^1^2
"KRN",8994,3057,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3057,2,2,1,1,0)
Resource ID pointer to SDEC RESOURCE file.
"KRN",8994,3057,2,"B","SDECIEN",1)

"KRN",8994,3057,2,"B","SDECIEN1",2)

"KRN",8994,3057,2,"PARAMSEQ",1,1)

"KRN",8994,3057,2,"PARAMSEQ",2,2)

"KRN",8994,3057,3,0)
^^4^4^3150128^
"KRN",8994,3057,3,1,0)
Return a single entry in the Global Array containing the following 
"KRN",8994,3057,3,2,0)
separated by ^:
"KRN",8994,3057,3,3,0)
  1. RESOURCEGROUPID
"KRN",8994,3057,3,4,0)
  2. ERRORID
"KRN",8994,3058,-1)
0^41
"KRN",8994,3058,0)
SDEC DELAGI^DELAGI^SDEC^4^R^0^^0
"KRN",8994,3058,1,0)
^^2^2^3150806^
"KRN",8994,3058,1,1,0)
Delete entry with the given Access Group and Access Type from the SDEC 
"KRN",8994,3058,1,2,0)
ACCESS GROUP TYPE file.
"KRN",8994,3058,2,0)
^8994.02A^2^2
"KRN",8994,3058,2,1,0)
SDECIEN^1^^1^1
"KRN",8994,3058,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3058,2,1,1,1,0)
Access group ID pointer to SDEC ACCESS GROUP file
"KRN",8994,3058,2,2,0)
SDECIEN1^1^^1^2
"KRN",8994,3058,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3058,2,2,1,1,0)
Access Type ID pointer to SDEC ACCESS TYPE file
"KRN",8994,3058,2,"B","SDECIEN",1)

"KRN",8994,3058,2,"B","SDECIEN1",2)

"KRN",8994,3058,2,"PARAMSEQ",1,1)

"KRN",8994,3058,2,"PARAMSEQ",2,2)

"KRN",8994,3058,3,0)
^^2^2^3150128^
"KRN",8994,3058,3,1,0)
Return a single entry in the recordset containing error message or "" if 
"KRN",8994,3058,3,2,0)
no error.
"KRN",8994,3059,-1)
0^40
"KRN",8994,3059,0)
SDEC DELAG^DELAG^SDEC^4^R^0^^0
"KRN",8994,3059,1,0)
^8994.01^4^4^3150128^^
"KRN",8994,3059,1,1,0)
Deletes entry having IEN SDECGRP from SDEC ACCESS GROUP file.
"KRN",8994,3059,1,2,0)
Also deletes all entries in SDEC ACCESS GROUP TYPE that point to this 
"KRN",8994,3059,1,3,0)
group.
"KRN",8994,3059,1,4,0)
Return recordset containing error message or "" if no error.
"KRN",8994,3059,2,0)
^8994.02A^1^1
"KRN",8994,3059,2,1,0)
SDECGRP^1^^1^1
"KRN",8994,3059,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3059,2,1,1,1,0)
Access Group ID pointer to SDEC ACCESS GROUP file 409.822
"KRN",8994,3059,2,"B","SDECGRP",1)

"KRN",8994,3059,2,"PARAMSEQ",1,1)

"KRN",8994,3059,3,0)
^^1^1^3150128^
"KRN",8994,3059,3,1,0)
Single entry in the recordset containing error message or "" if no error
"KRN",8994,3060,-1)
0^38
"KRN",8994,3060,0)
SDEC CURFACG^CURFACG^SDEC^4^R^0^^0
"KRN",8994,3060,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3060,1,1,0)
Get current division/facility for given user.
"KRN",8994,3060,2,0)
^8994.02A^1^1
"KRN",8994,3060,2,1,0)
SDECDUZ^1^^1^1
"KRN",8994,3060,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3060,2,1,1,1,0)
User ID pointer to NEW PERSON file 200
"KRN",8994,3060,2,"B","SDECDUZ",1)

"KRN",8994,3060,2,"PARAMSEQ",1,1)

"KRN",8994,3060,3,0)
^^1^1^3150128^
"KRN",8994,3060,3,1,0)
Returns the Current Division/Facility for the given user.
"KRN",8994,3061,-1)
0^37
"KRN",8994,3061,0)
SDEC CSLOTSCH^CSLOTSCH^SDEC^4^R^0^^0
"KRN",8994,3061,1,0)
^^1^1^3150128^
"KRN",8994,3061,1,1,0)
GET Assigned Slot Schedule
"KRN",8994,3061,2,0)
^8994.02A^5^5
"KRN",8994,3061,2,1,0)
SDECRES^1^^1^1
"KRN",8994,3061,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3061,2,1,1,1,0)
Resource ID pointer to SDEC RESOURCE file 409.831
"KRN",8994,3061,2,2,0)
SDECSTART^1^^1^2
"KRN",8994,3061,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3061,2,2,1,1,0)
Begin date/time in external format.
"KRN",8994,3061,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3061,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3061,2,3,1,1,0)
End date/time in external format.
"KRN",8994,3061,2,4,0)
SDECTYPES^1^^0^4
"KRN",8994,3061,2,4,1,0)
^^2^2^3150128^
"KRN",8994,3061,2,4,1,1,0)
Pipe |  delimited list of Access Type Names.
"KRN",8994,3061,2,4,1,2,0)
If SDECTYPES is null, then the screen passes all types.
"KRN",8994,3061,2,5,0)
SDECSRCH^1^^0^5
"KRN",8994,3061,2,5,1,0)
^^5^5^3150128^
"KRN",8994,3061,2,5,1,1,0)
Pipe | delimited search info for the Find Appointment function
"KRN",8994,3061,2,5,1,2,0)
 First piece is 1 if we are in a Find Appointment call
"KRN",8994,3061,2,5,1,3,0)
 Second piece is weekday info in the format MTWHFSU
"KRN",8994,3061,2,5,1,4,0)
 Third piece is AM PM info in the form AP
"KRN",8994,3061,2,5,1,5,0)
 If 2nd or 3rd pieces are null, the screen for that piece is skipped
"KRN",8994,3061,2,"B","SDECEND",3)

"KRN",8994,3061,2,"B","SDECRES",1)

"KRN",8994,3061,2,"B","SDECSRCH",5)

"KRN",8994,3061,2,"B","SDECSTART",2)

"KRN",8994,3061,2,"B","SDECTYPES",4)

"KRN",8994,3061,2,"PARAMSEQ",1,1)

"KRN",8994,3061,2,"PARAMSEQ",2,2)

"KRN",8994,3061,2,"PARAMSEQ",3,3)

"KRN",8994,3061,2,"PARAMSEQ",4,4)

"KRN",8994,3061,2,"PARAMSEQ",5,5)

"KRN",8994,3061,3,0)
^^8^8^3150128^
"KRN",8994,3061,3,1,0)
Global Array in which each array entry contains slot data separated by ^:
"KRN",8994,3061,3,2,0)
  1. START_TIME
"KRN",8994,3061,3,3,0)
  2. END_TIME
"KRN",8994,3061,3,4,0)
  3. SLOTS
"KRN",8994,3061,3,5,0)
  4. RESOURCE
"KRN",8994,3061,3,6,0)
  5. ACCESS_TYPE
"KRN",8994,3061,3,7,0)
  6. NOTE
"KRN",8994,3061,3,8,0)
  7. AVAILABILITYID
"KRN",8994,3062,-1)
0^36
"KRN",8994,3062,0)
SDEC CRSCHED^CRSCHED^SDEC^4^R^0^^0
"KRN",8994,3062,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3062,1,1,0)
Create Resource Appointment Schedule
"KRN",8994,3062,2,0)
^8994.02A^4^4
"KRN",8994,3062,2,1,0)
SDECRES^1^^1^1
"KRN",8994,3062,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3062,2,1,1,1,0)
Pipe | delimited list of resource names from the SDEC RESOURCE file
"KRN",8994,3062,2,2,0)
SDECSTART^1^^1^2
"KRN",8994,3062,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3062,2,2,1,1,0)
Start date/time in external form
"KRN",8994,3062,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3062,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3062,2,3,1,1,0)
End date/time in external format.
"KRN",8994,3062,2,4,0)
SDECWKIN^1^^^4
"KRN",8994,3062,2,4,1,0)
^^3^3^3150128^
"KRN",8994,3062,2,4,1,1,0)
Walk-in Flag
"KRN",8994,3062,2,4,1,2,0)
0=do not include walk-ins
"KRN",8994,3062,2,4,1,3,0)
1=include walk-ins
"KRN",8994,3062,2,"B","SDECEND",3)

"KRN",8994,3062,2,"B","SDECRES",1)

"KRN",8994,3062,2,"B","SDECSTART",2)

"KRN",8994,3062,2,"B","SDECWKIN",4)

"KRN",8994,3062,2,"PARAMSEQ",1,1)

"KRN",8994,3062,2,"PARAMSEQ",2,2)

"KRN",8994,3062,2,"PARAMSEQ",3,3)

"KRN",8994,3062,2,"PARAMSEQ",4,4)

"KRN",8994,3062,3,0)
^^20^20^3150128^
"KRN",8994,3062,3,1,0)
Global Array in which each array entry contains data for the Resource 
"KRN",8994,3062,3,2,0)
Appointment Schedule separated by ^:
"KRN",8994,3062,3,3,0)
  1. APPOINTMENTID
"KRN",8994,3062,3,4,0)
  2. START_TIME
"KRN",8994,3062,3,5,0)
  3. END_TIME
"KRN",8994,3062,3,6,0)
  4. CHECKIN
"KRN",8994,3062,3,7,0)
  5. AUXTIME
"KRN",8994,3062,3,8,0)
  6. PATIENTID
"KRN",8994,3062,3,9,0)
  7. PATIENTNAME
"KRN",8994,3062,3,10,0)
  8. RESOURCENAME
"KRN",8994,3062,3,11,0)
  9. NOSHOW
"KRN",8994,3062,3,12,0)
 10. HRN
"KRN",8994,3062,3,13,0)
 11. ACCESSTYPEID
"KRN",8994,3062,3,14,0)
 12. WALKIN
"KRN",8994,3062,3,15,0)
 13. CHECKOUT
"KRN",8994,3062,3,16,0)
 14. VPROVIDER
"KRN",8994,3062,3,17,0)
 15. CANCELLED
"KRN",8994,3062,3,18,0)
 16. NOTE
"KRN",8994,3062,3,19,0)
 17. DAPTDT
"KRN",8994,3062,3,20,0)
 18. APPTREQTYPE
"KRN",8994,3063,-1)
0^33
"KRN",8994,3063,0)
SDEC COPYAPPT^COPYAPPT^SDEC^4^R^0^^0
"KRN",8994,3063,1,0)
^8994.01^7^7^3150128^^^
"KRN",8994,3063,1,1,0)
Copy appointments from HOSPITAL LOCATION entry SDEC44 to SDEC RESOURCE 
"KRN",8994,3063,1,2,0)
entry SDECRES
"KRN",8994,3063,1,3,0)
Beginning with appointments on day SDECBEG and ending on SDECEND, 
"KRN",8994,3063,1,4,0)
inclusive
"KRN",8994,3063,1,5,0)
 
"KRN",8994,3063,1,6,0)
Returns ADO Recordset formatted fields containing count of records copied 
"KRN",8994,3063,1,7,0)
and error message
"KRN",8994,3063,2,0)
^8994.02A^4^4
"KRN",8994,3063,2,1,0)
SDECRES^1^^1^1
"KRN",8994,3063,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3063,2,1,1,1,0)
Resource ID pointer to SDEC RESOURCE file 409.831
"KRN",8994,3063,2,2,0)
SDEC44^1^^1^2
"KRN",8994,3063,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3063,2,2,1,1,0)
Hospital Location ID Pointer to HOSPITAL LOCATION file 44
"KRN",8994,3063,2,3,0)
SDECBEG^1^^1^3
"KRN",8994,3063,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3063,2,3,1,1,0)
Begin date in external format.
"KRN",8994,3063,2,4,0)
SDECEND^1^^1^4
"KRN",8994,3063,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3063,2,4,1,1,0)
End date in external format.
"KRN",8994,3063,2,"B","SDEC44",2)

"KRN",8994,3063,2,"B","SDECBEG",3)

"KRN",8994,3063,2,"B","SDECEND",4)

"KRN",8994,3063,2,"B","SDECRES",1)

"KRN",8994,3063,2,"PARAMSEQ",1,1)

"KRN",8994,3063,2,"PARAMSEQ",2,2)

"KRN",8994,3063,2,"PARAMSEQ",3,3)

"KRN",8994,3063,2,"PARAMSEQ",4,4)

"KRN",8994,3063,3,0)
^^1^1^3150128^
"KRN",8994,3063,3,1,0)
Single entry in the Global Array containing TASK_NUMBER and ERRORID
"KRN",8994,3064,-1)
0^35
"KRN",8994,3064,0)
SDEC CPSTAT^CPSTAT^SDEC^4^R^0^^0
"KRN",8994,3064,1,0)
^8994.01^1^1^3150128^^^
"KRN",8994,3064,1,1,0)
Copy Appointment Status
"KRN",8994,3064,2,0)
^8994.02A^1^1
"KRN",8994,3064,2,1,0)
SDECTSK^1^^1^1
"KRN",8994,3064,2,1,1,0)
^8994.021^1^1^3150128^^
"KRN",8994,3064,2,1,1,1,0)
Tasked Job number.
"KRN",8994,3064,2,"B","SDECTSK",1)

"KRN",8994,3064,2,"PARAMSEQ",1,1)

"KRN",8994,3064,3,0)
^8994.03^1^1^3150128^^
"KRN",8994,3064,3,1,0)
Single entry in the Global Array containing RECORD_COUNT and ERRORID.
"KRN",8994,3065,-1)
0^34
"KRN",8994,3065,0)
SDEC CPCANC^CPCANC^SDEC^4^R^0^^0
"KRN",8994,3065,1,0)
^^3^3^3140723^
"KRN",8994,3065,1,1,0)
Copy Appointment Cancel
"KRN",8994,3065,1,2,0)
Signal tasked job having ZTSK=SDECTSK to cancel
"KRN",8994,3065,1,3,0)
Returns current record count of copy process
"KRN",8994,3066,-1)
0^39
"KRN",8994,3066,0)
SDEC CVARAPPT^CVARAPPT^SDEC^4^R^0^^0
"KRN",8994,3066,1,0)
^8994.01^3^3^3150128^^
"KRN",8994,3066,1,1,0)
return boolean to represent that a clinic allows variable appointment 
"KRN",8994,3066,1,2,0)
length - RPC 
"KRN",8994,3066,1,3,0)
0=Does not allow; 1=Clinic does allow.
"KRN",8994,3066,2,0)
^8994.02A^1^1
"KRN",8994,3066,2,1,0)
SDCL^1^^1^1
"KRN",8994,3066,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3066,2,1,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3066,2,"B","SDCL",1)

"KRN",8994,3066,2,"PARAMSEQ",1,1)

"KRN",8994,3066,3,0)
^^1^1^3150128^
"KRN",8994,3066,3,1,0)
Boolean to represent that a clinic allows variable appointment length.
"KRN",8994,3067,-1)
0^32
"KRN",8994,3067,0)
SDEC CLINSTOP^CLINSTOP^SDEC^4^R^0^^0
"KRN",8994,3067,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3067,1,1,0)
return entries from the CLINIC STOP table 40.7
"KRN",8994,3067,3,0)
^^4^4^3150128^
"KRN",8994,3067,3,1,0)
Global Array in which each entry contains data from the CLINIC STOP file 
"KRN",8994,3067,3,2,0)
40.7 separated by ^:
"KRN",8994,3067,3,3,0)
 1. CLINIC_STOP_IEN
"KRN",8994,3067,3,4,0)
 2. NAME
"KRN",8994,3068,-1)
0^31
"KRN",8994,3068,0)
SDEC CLINSET^CLINSET^SDEC^4^R^0^^0
"KRN",8994,3068,1,0)
^8994.01^2^2^3150806^^
"KRN",8994,3068,1,1,0)
Returns CLINIC SETUP PARAMETERS for clinics that are active in the 
"KRN",8994,3068,1,2,0)
HOSPITAL LOCATION file
"KRN",8994,3068,2,0)
^8994.02A^1^1
"KRN",8994,3068,2,1,0)
SDNOSLOT^1^^0^1
"KRN",8994,3068,2,1,1,0)
^^3^3^3150128^
"KRN",8994,3068,2,1,1,1,0)
no slots flat
"KRN",8994,3068,2,1,1,2,0)
0=return availability
"KRN",8994,3068,2,1,1,3,0)
1=do not return availability
"KRN",8994,3068,2,"B","SDNOSLOT",1)

"KRN",8994,3068,2,"PARAMSEQ",1,1)

"KRN",8994,3068,3,0)
^^15^15^3150128^
"KRN",8994,3068,3,1,0)
Global Array in which each array entry contains the following Clinic data 
"KRN",8994,3068,3,2,0)
separated by ^:
"KRN",8994,3068,3,3,0)
  1. HOSPITAL_LOCATION_ID
"KRN",8994,3068,3,4,0)
  2. HOSPITAL_LOCATION
"KRN",8994,3068,3,5,0)
  3. CREATE_VISIT
"KRN",8994,3068,3,6,0)
  4. VISIT_SERVICE_CATEGORY
"KRN",8994,3068,3,7,0)
  5. MULTIPLE_CLINIC_CODES_USED?
"KRN",8994,3068,3,8,0)
  6. VISIT_PROVIDER_REQUIRED
"KRN",8994,3068,3,9,0)
  7. GENERATE_PCCPLUS_FORMS?
"KRN",8994,3068,3,10,0)
  8. MAX_OVERBOOKS
"KRN",8994,3068,3,11,0)
  9. SDECDAT
"KRN",8994,3068,3,12,0)
 10. SDECDATN
"KRN",8994,3068,3,13,0)
 11. APPTLEN
"KRN",8994,3068,3,14,0)
 12. VAPPTLEN
"KRN",8994,3068,3,15,0)
 13. SLOTS
"KRN",8994,3069,-1)
0^27
"KRN",8994,3069,0)
SDEC CLINDISW^CLINDISW^SDEC^4^R^0^^0
"KRN",8994,3069,1,0)
^^2^2^3150806^
"KRN",8994,3069,1,1,0)
Return formatted text output of the Clinic Schedules Report between dates 
"KRN",8994,3069,1,2,0)
SDECBEG and SDECEND for each clinic in SDECCLST for Walk-ins only.
"KRN",8994,3069,2,0)
^8994.02A^3^3
"KRN",8994,3069,2,1,0)
SDECCLST^1^^1^1
"KRN",8994,3069,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3069,2,1,1,1,0)
Pipe | delimited list of SDEC RESOURCE ids.
"KRN",8994,3069,2,1,1,2,0)
(The last |-pieces is null, so discard it.)
"KRN",8994,3069,2,2,0)
SDECBEG^1^^1^2
"KRN",8994,3069,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3069,2,2,1,1,0)
Begin date in external format.
"KRN",8994,3069,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3069,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3069,2,3,1,1,0)
End date in external format.
"KRN",8994,3069,2,"B","SDECBEG",2)

"KRN",8994,3069,2,"B","SDECCLST",1)

"KRN",8994,3069,2,"B","SDECEND",3)

"KRN",8994,3069,2,"PARAMSEQ",1,1)

"KRN",8994,3069,2,"PARAMSEQ",2,2)

"KRN",8994,3069,2,"PARAMSEQ",3,3)

"KRN",8994,3069,3,0)
^^1^1^3150128^
"KRN",8994,3069,3,1,0)
Global Array in which each array entry contains a line of formatted text.
"KRN",8994,3070,-1)
0^26
"KRN",8994,3070,0)
SDEC CLINDIS^CLINDIS^SDEC^4^R^0^^0
"KRN",8994,3070,1,0)
^8994.01^6^6^3150128^^
"KRN",8994,3070,1,1,0)
Return formatted text output of the Clinic Schedules Report
"KRN",8994,3070,1,2,0)
between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"KRN",8994,3070,1,3,0)
SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece 
"KRN",8994,3070,1,4,0)
is null, so discard it.)
"KRN",8994,3070,1,5,0)
SDECBEG and SDECEND are in external date form.
"KRN",8994,3070,1,6,0)
SDECWI = return only appointments where the WALKIN field is yes
"KRN",8994,3070,2,0)
^8994.02A^4^4
"KRN",8994,3070,2,1,0)
SDECCLST^1^^1^1
"KRN",8994,3070,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3070,2,1,1,1,0)
Pipe | delimited list of SDEC RESOURCE ids.
"KRN",8994,3070,2,1,1,2,0)
(The last |-piece is null, so discard it.)
"KRN",8994,3070,2,2,0)
SDECBEG^1^^1^2
"KRN",8994,3070,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3070,2,2,1,1,0)
Begin Date in external format.
"KRN",8994,3070,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3070,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3070,2,3,1,1,0)
End date in external format.
"KRN",8994,3070,2,4,0)
SDECWI^1^^0^4
"KRN",8994,3070,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3070,2,4,1,1,0)
Flag - 1=return only appointments where the WALKIN field is yes
"KRN",8994,3070,2,"B","SDECBEG",2)

"KRN",8994,3070,2,"B","SDECCLST",1)

"KRN",8994,3070,2,"B","SDECEND",3)

"KRN",8994,3070,2,"B","SDECWI",4)

"KRN",8994,3070,2,"PARAMSEQ",1,1)

"KRN",8994,3070,2,"PARAMSEQ",2,2)

"KRN",8994,3070,2,"PARAMSEQ",3,3)

"KRN",8994,3070,2,"PARAMSEQ",4,4)

"KRN",8994,3070,3,0)
^^1^1^3150128^
"KRN",8994,3070,3,1,0)
Global Array in which each array entry is a line of formatted text.
"KRN",8994,3071,-1)
0^30
"KRN",8994,3071,0)
SDEC CLINPROV^CLINPROV^SDEC^4^R^0^^0
"KRN",8994,3071,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3071,1,1,0)
Remote procedure to return the Providers that are assigned to a Clinic.
"KRN",8994,3071,2,0)
^8994.02A^1^1
"KRN",8994,3071,2,1,0)
SDECCL^1^^1^1
"KRN",8994,3071,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3071,2,1,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3071,2,"B","SDECCL",1)

"KRN",8994,3071,2,"PARAMSEQ",1,1)

"KRN",8994,3071,3,0)
^^5^5^3150128^
"KRN",8994,3071,3,1,0)
Global Array in which array entry contains the following provider data 
"KRN",8994,3071,3,2,0)
for the given clinic separated by ^:
"KRN",8994,3071,3,3,0)
  1. PROVIDER_IEN
"KRN",8994,3071,3,4,0)
  2. PROVIDER_NAME
"KRN",8994,3071,3,5,0)
  3. DEFAULT
"KRN",8994,3072,-1)
0^29
"KRN",8994,3072,0)
SDEC CLINLETW^CLINLETW^SDEC^4^R^0^^0
"KRN",8994,3072,1,0)
^8994.01^7^7^3150128^^
"KRN",8994,3072,1,1,0)
Return recordset of patient walk-in appointments
"KRN",8994,3072,1,2,0)
between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"KRN",8994,3072,1,3,0)
Used in listing a patient's walk-in appointments and generating patient 
"KRN",8994,3072,1,4,0)
letters.
"KRN",8994,3072,1,5,0)
SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece 
"KRN",8994,3072,1,6,0)
is null, so discard it.)
"KRN",8994,3072,1,7,0)
SDECBEG and SDECEND are in external date form.
"KRN",8994,3072,2,0)
^8994.02A^3^3
"KRN",8994,3072,2,1,0)
SDECCLST^1^^1^1
"KRN",8994,3072,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3072,2,1,1,1,0)
Pipe | delimited list of SDEC RESOURCE ids.
"KRN",8994,3072,2,1,1,2,0)
(The last | piece is null, so discard it.)
"KRN",8994,3072,2,2,0)
SDECBEG^1^^1^2
"KRN",8994,3072,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3072,2,2,1,1,0)
Begin date in external format.
"KRN",8994,3072,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3072,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3072,2,3,1,1,0)
End date in external format.
"KRN",8994,3072,2,"B","SDECBEG",2)

"KRN",8994,3072,2,"B","SDECCLST",1)

"KRN",8994,3072,2,"B","SDECEND",3)

"KRN",8994,3072,2,"PARAMSEQ",1,1)

"KRN",8994,3072,2,"PARAMSEQ",2,2)

"KRN",8994,3072,2,"PARAMSEQ",3,3)

"KRN",8994,3072,3,0)
^^18^18^3150128^
"KRN",8994,3072,3,1,0)
Global Array in which each array entry contains the following Clinic 
"KRN",8994,3072,3,2,0)
Letter data separated by ^:
"KRN",8994,3072,3,3,0)
  1. Name
"KRN",8994,3072,3,4,0)
  2. DOB
"KRN",8994,3072,3,5,0)
  3. Sex
"KRN",8994,3072,3,6,0)
  4. HRN
"KRN",8994,3072,3,7,0)
  5. ApptDate
"KRN",8994,3072,3,8,0)
  6. Clinic
"KRN",8994,3072,3,9,0)
  7. TypeStatus
"KRN",8994,3072,3,10,0)
  8. RESOURCEID
"KRN",8994,3072,3,11,0)
  9. APPT_MADE_BY
"KRN",8994,3072,3,12,0)
 10. DATE_APPT_MADE
"KRN",8994,3072,3,13,0)
 11. NOTE
"KRN",8994,3072,3,14,0)
 12. STREET
"KRN",8994,3072,3,15,0)
 13. CITY
"KRN",8994,3072,3,16,0)
 14. STATE
"KRN",8994,3072,3,17,0)
 15. ZIP
"KRN",8994,3072,3,18,0)
 16. HOMEPHONE
"KRN",8994,3073,-1)
0^28
"KRN",8994,3073,0)
SDEC CLINLET^CLINLET^SDEC^4^R^0^^0
"KRN",8994,3073,1,0)
^8994.01^7^7^3150128^^
"KRN",8994,3073,1,1,0)
Return recordset of patient appointments
"KRN",8994,3073,1,2,0)
between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"KRN",8994,3073,1,3,0)
Used in listing a patient's appointments and generating patient letters.
"KRN",8994,3073,1,4,0)
SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece 
"KRN",8994,3073,1,5,0)
is null, so discard it.)
"KRN",8994,3073,1,6,0)
SDECBEG and SDECEND are in external date form.
"KRN",8994,3073,1,7,0)
SDECWI = return only appointments where the WALKIN field is yes
"KRN",8994,3073,2,0)
^8994.02A^4^4
"KRN",8994,3073,2,1,0)
SDECCLST^1^^1^1
"KRN",8994,3073,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3073,2,1,1,1,0)
Pipe | delimited list of SDEC RESOURCE ids.
"KRN",8994,3073,2,1,1,2,0)
(The last | piece is null, so discard it.)
"KRN",8994,3073,2,2,0)
SDECBEG^1^^1^2
"KRN",8994,3073,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3073,2,2,1,1,0)
Begin date in external format.
"KRN",8994,3073,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3073,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3073,2,3,1,1,0)
End date in external format.
"KRN",8994,3073,2,4,0)
SDECWI^1^^^4
"KRN",8994,3073,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3073,2,4,1,1,0)
Flag - 1=return only appointments where the WALKIN field is yes
"KRN",8994,3073,2,"B","SDECBEG",2)

"KRN",8994,3073,2,"B","SDECCLST",1)

"KRN",8994,3073,2,"B","SDECEND",3)

"KRN",8994,3073,2,"B","SDECWI",4)

"KRN",8994,3073,2,"PARAMSEQ",1,1)

"KRN",8994,3073,2,"PARAMSEQ",2,2)

"KRN",8994,3073,2,"PARAMSEQ",3,3)

"KRN",8994,3073,2,"PARAMSEQ",4,4)

"KRN",8994,3073,3,0)
^^18^18^3150128^
"KRN",8994,3073,3,1,0)
Global Array in which each array entry contains the following Clinic 
"KRN",8994,3073,3,2,0)
Letter data separated by ^:
"KRN",8994,3073,3,3,0)
  1. Name
"KRN",8994,3073,3,4,0)
  2. DOB
"KRN",8994,3073,3,5,0)
  3. Sex
"KRN",8994,3073,3,6,0)
  4. HRN
"KRN",8994,3073,3,7,0)
  5. ApptDate
"KRN",8994,3073,3,8,0)
  6. Clinic
"KRN",8994,3073,3,9,0)
  7. TypeStatus
"KRN",8994,3073,3,10,0)
  8. RESOURCEID
"KRN",8994,3073,3,11,0)
  9. APPT_MADE_BY
"KRN",8994,3073,3,12,0)
 10. DATE_APPT_MADE
"KRN",8994,3073,3,13,0)
 11. NOTE
"KRN",8994,3073,3,14,0)
 12. STREET
"KRN",8994,3073,3,15,0)
 13. CITY
"KRN",8994,3073,3,16,0)
 14. STATE
"KRN",8994,3073,3,17,0)
 15. ZIP
"KRN",8994,3073,3,18,0)
 16. HOMEPHONE
"KRN",8994,3074,-1)
0^23
"KRN",8994,3074,0)
SDEC CHECKOUT^CHECKOUT^SDEC^4^R^0^^0
"KRN",8994,3074,1,0)
^^1^1^3150128^
"KRN",8994,3074,1,1,0)
Check Out Appointment
"KRN",8994,3074,2,0)
^8994.02A^5^5
"KRN",8994,3074,2,1,0)
DFN^1^^1^1
"KRN",8994,3074,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3074,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3074,2,2,0)
SDT^1^^1^2
"KRN",8994,3074,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3074,2,2,1,1,0)
Appointment Date/Time in FM format
"KRN",8994,3074,2,3,0)
SDCODT^1^^1^3
"KRN",8994,3074,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3074,2,3,1,1,0)
Date/Time of check-out in FM format
"KRN",8994,3074,2,4,0)
SDECAPTID^1^^1^4
"KRN",8994,3074,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3074,2,4,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84
"KRN",8994,3074,2,5,0)
VPRV^1^^^5
"KRN",8994,3074,2,5,1,0)
^^1^1^3150128^
"KRN",8994,3074,2,5,1,1,0)
V Provider ID pointer to V PROVIDER file
"KRN",8994,3074,2,"B","DFN",1)

"KRN",8994,3074,2,"B","SDCODT",3)

"KRN",8994,3074,2,"B","SDECAPTID",4)

"KRN",8994,3074,2,"B","SDT",2)

"KRN",8994,3074,2,"B","VPRV",5)

"KRN",8994,3074,2,"PARAMSEQ",1,1)

"KRN",8994,3074,2,"PARAMSEQ",2,2)

"KRN",8994,3074,2,"PARAMSEQ",3,3)

"KRN",8994,3074,2,"PARAMSEQ",4,4)

"KRN",8994,3074,2,"PARAMSEQ",5,5)

"KRN",8994,3074,3,0)
^^1^1^3150128^
"KRN",8994,3074,3,1,0)
Single entry in the Global Array - ERRORID.
"KRN",8994,3075,-1)
0^22
"KRN",8994,3075,0)
SDEC CHECKIN^CHECKIN^SDEC^4^R^0^^0
"KRN",8994,3075,1,0)
^^1^1^3150127^
"KRN",8994,3075,1,1,0)
Check In Appointment.
"KRN",8994,3075,2,0)
^8994.02A^11^11
"KRN",8994,3075,2,1,0)
SDECAPTID^1^^1^1
"KRN",8994,3075,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3075,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84
"KRN",8994,3075,2,2,0)
SDECCDT^1^^1^2
"KRN",8994,3075,2,2,1,0)
^^2^2^3150127^
"KRN",8994,3075,2,2,1,1,0)
Check-in date/time
"KRN",8994,3075,2,2,1,2,0)
"@" indicates delete check-in
"KRN",8994,3075,2,3,0)
SDECPRV^1^^0^4
"KRN",8994,3075,2,3,1,0)
^^2^2^3150127^
"KRN",8994,3075,2,3,1,1,0)
Provider pointer to NEW PERSON file
"KRN",8994,3075,2,3,1,2,0)
default to current user
"KRN",8994,3075,2,4,0)
SDECCC^1^^^3
"KRN",8994,3075,2,4,1,0)
^^1^1^3150127^
"KRN",8994,3075,2,4,1,1,0)
Clinic Stop pointer to CLINIC STOP file
"KRN",8994,3075,2,5,0)
SDECROU^1^^0^5
"KRN",8994,3075,2,5,1,0)
^^3^3^3150127^
"KRN",8994,3075,2,5,1,1,0)
Print routine slip flag
"KRN",8994,3075,2,5,1,2,0)
0=false
"KRN",8994,3075,2,5,1,3,0)
1=true
"KRN",8994,3075,2,6,0)
SDECVCL^1^^^6
"KRN",8994,3075,2,6,1,0)
^^1^1^3150127^
"KRN",8994,3075,2,6,1,1,0)
Clinic pointer to HOSPITAL LOCATION file
"KRN",8994,3075,2,7,0)
SDECVFM^1^^^7
"KRN",8994,3075,2,7,1,0)
^^1^1^3150127^
"KRN",8994,3075,2,7,1,1,0)
FORM
"KRN",8994,3075,2,8,0)
SDECOG^1^^^8
"KRN",8994,3075,2,8,1,0)
^^1^1^3150127^
"KRN",8994,3075,2,8,1,1,0)
OUTGUIDE FLAG
"KRN",8994,3075,2,9,0)
SDECCR^1^^^9
"KRN",8994,3075,2,9,1,0)
^^2^2^3150127^
"KRN",8994,3075,2,9,1,1,0)
Generate Chart request upon check-in?
"KRN",8994,3075,2,9,1,2,0)
1=YES
"KRN",8994,3075,2,10,0)
SDECPCC^1^^^10
"KRN",8994,3075,2,10,1,0)
^^1^1^3150127^
"KRN",8994,3075,2,10,1,1,0)
ien of PWH Type
"KRN",8994,3075,2,11,0)
SDECWHF^1^^^11
"KRN",8994,3075,2,11,1,0)
^8994.021^1^1^3150127^^
"KRN",8994,3075,2,11,1,1,0)
Print Patient Wellness Handout flag
"KRN",8994,3075,2,"B","SDECAPTID",1)

"KRN",8994,3075,2,"B","SDECCC",4)

"KRN",8994,3075,2,"B","SDECCDT",2)

"KRN",8994,3075,2,"B","SDECCR",9)

"KRN",8994,3075,2,"B","SDECOG",8)

"KRN",8994,3075,2,"B","SDECPCC",10)

"KRN",8994,3075,2,"B","SDECPRV",3)

"KRN",8994,3075,2,"B","SDECROU",5)

"KRN",8994,3075,2,"B","SDECVCL",6)

"KRN",8994,3075,2,"B","SDECVFM",7)

"KRN",8994,3075,2,"B","SDECWHF",11)

"KRN",8994,3075,2,"PARAMSEQ",1,1)

"KRN",8994,3075,2,"PARAMSEQ",2,2)

"KRN",8994,3075,2,"PARAMSEQ",3,4)

"KRN",8994,3075,2,"PARAMSEQ",4,3)

"KRN",8994,3075,2,"PARAMSEQ",5,5)

"KRN",8994,3075,2,"PARAMSEQ",6,6)

"KRN",8994,3075,2,"PARAMSEQ",7,7)

"KRN",8994,3075,2,"PARAMSEQ",8,8)

"KRN",8994,3075,2,"PARAMSEQ",9,9)

"KRN",8994,3075,2,"PARAMSEQ",10,10)

"KRN",8994,3075,2,"PARAMSEQ",11,11)

"KRN",8994,3075,3,0)
^^1^1^3150127^
"KRN",8994,3075,3,1,0)
Single entry in the Global Array containing ERRORID and MESSAGE
"KRN",8994,3076,-1)
0^21
"KRN",8994,3076,0)
SDEC CANREAS^CANREAS^SDEC^4^R^0^^0
"KRN",8994,3076,1,0)
^^1^1^3150806^
"KRN",8994,3076,1,1,0)
Return entries from the CANCELLATION REASONS file.
"KRN",8994,3076,2,0)
^8994.02A^1^1
"KRN",8994,3076,2,1,0)
SDECIN^1^^0^1
"KRN",8994,3076,2,1,1,0)
^^3^3^3150127^
"KRN",8994,3076,2,1,1,1,0)
Show inactive entries
"KRN",8994,3076,2,1,1,2,0)
0=active only (default)
"KRN",8994,3076,2,1,1,3,0)
1=show active and inactive
"KRN",8994,3076,2,"B","SDECIN",1)

"KRN",8994,3076,2,"PARAMSEQ",1,1)

"KRN",8994,3076,3,0)
^^4^4^3150127^
"KRN",8994,3076,3,1,0)
Global Array containing data from the CANCELLATION REASONS file 409.2:
"KRN",8994,3076,3,2,0)
 1. CANCELLATION_REASONS_IEN
"KRN",8994,3076,3,3,0)
 2. NAME
"KRN",8994,3076,3,4,0)
 3. TYPE
"KRN",8994,3077,-1)
0^25
"KRN",8994,3077,0)
SDEC CLINCAN^CLINCAN^SDEC^4^R^0^^0
"KRN",8994,3077,1,0)
^8994.01^6^6^3150128^^
"KRN",8994,3077,1,1,0)
Return recordset of CANCELLED patient appointments
"KRN",8994,3077,1,2,0)
between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"KRN",8994,3077,1,3,0)
Used in generating cancellation letters for a clinic
"KRN",8994,3077,1,4,0)
SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece 
"KRN",8994,3077,1,5,0)
is null, so discard it.)
"KRN",8994,3077,1,6,0)
SDECBEG and SDECEND are in external date form.
"KRN",8994,3077,2,0)
^8994.02A^3^3
"KRN",8994,3077,2,1,0)
SDECCLST^1^^1^1
"KRN",8994,3077,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3077,2,1,1,1,0)
Pipe | delimited list of SDEC RESOURCE ids.
"KRN",8994,3077,2,1,1,2,0)
(The last |-piece is null, so discard it.)
"KRN",8994,3077,2,2,0)
SDECBEG^1^^1^2
"KRN",8994,3077,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3077,2,2,1,1,0)
Begin time in external format.
"KRN",8994,3077,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3077,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3077,2,3,1,1,0)
End Date in external format.
"KRN",8994,3077,2,"B","SDECBEG",2)

"KRN",8994,3077,2,"B","SDECCLST",1)

"KRN",8994,3077,2,"B","SDECEND",3)

"KRN",8994,3077,2,"PARAMSEQ",1,1)

"KRN",8994,3077,2,"PARAMSEQ",2,2)

"KRN",8994,3077,2,"PARAMSEQ",3,3)

"KRN",8994,3077,3,0)
^^19^19^3150128^
"KRN",8994,3077,3,1,0)
Global Array in which each array entry contains the following cancelled 
"KRN",8994,3077,3,2,0)
appointment data separated by ^:
"KRN",8994,3077,3,3,0)
  1. Name
"KRN",8994,3077,3,4,0)
  2. DOB
"KRN",8994,3077,3,5,0)
  3. Sex
"KRN",8994,3077,3,6,0)
  4. HRN
"KRN",8994,3077,3,7,0)
  5. NewApptDate
"KRN",8994,3077,3,8,0)
  6. Clinic
"KRN",8994,3077,3,9,0)
  7. TypeStatus
"KRN",8994,3077,3,10,0)
  8. RESOURCEID
"KRN",8994,3077,3,11,0)
  9. APPT_MADE_BY
"KRN",8994,3077,3,12,0)
 10. DATE_APPT_MADE
"KRN",8994,3077,3,13,0)
 11. NOTE
"KRN",8994,3077,3,14,0)
 12. STREET
"KRN",8994,3077,3,15,0)
 13. CITY
"KRN",8994,3077,3,16,0)
 14. STATE
"KRN",8994,3077,3,17,0)
 15. ZIP
"KRN",8994,3077,3,18,0)
 16. HOMEPHONE
"KRN",8994,3077,3,19,0)
 17. OldApptDate
"KRN",8994,3078,-1)
0^20
"KRN",8994,3078,0)
SDEC CANCKOUT^CANCKOUT^SDEC^4^R^0^^0
"KRN",8994,3078,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3078,1,1,0)
Cancel Checkout Appointment.
"KRN",8994,3078,2,0)
^8994.02A^1^1
"KRN",8994,3078,2,1,0)
SDECAPTID^1^^1^1
"KRN",8994,3078,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3078,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84
"KRN",8994,3078,2,"B","SDECAPTID",1)

"KRN",8994,3078,2,"PARAMSEQ",1,1)

"KRN",8994,3078,3,0)
^^1^1^3150127^
"KRN",8994,3078,3,1,0)
Global Array containing a single entry ERRORID.
"KRN",8994,3079,-1)
0^18
"KRN",8994,3079,0)
SDEC AVDEL^AVDEL^SDEC^4^R^0^^0
"KRN",8994,3079,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3079,1,1,0)
Cancel Availability - Deletes Access Block
"KRN",8994,3079,2,0)
^8994.02A^1^1
"KRN",8994,3079,2,1,0)
SDECAVID^1^^1^1
"KRN",8994,3079,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3079,2,1,1,1,0)
Availability ID pointer to the SDEC ACCESS BLOCK file 409.821
"KRN",8994,3079,2,"B","SDECAVID",1)

"KRN",8994,3079,2,"PARAMSEQ",1,1)

"KRN",8994,3079,3,0)
^^1^1^3150127^
"KRN",8994,3079,3,1,0)
Returns error code in recordset field ERRORID
"KRN",8994,3080,-1)
0^19
"KRN",8994,3080,0)
SDEC AVDELDT^AVDELDT^SDEC^4^R^0^^0
"KRN",8994,3080,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3080,1,1,0)
Cancel availability in a date range.
"KRN",8994,3080,2,0)
^8994.02A^3^3
"KRN",8994,3080,2,1,0)
SDECRESD^1^^1^1
"KRN",8994,3080,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3080,2,1,1,1,0)
Resource ID pointer to SDEC RESOURCE file 409.831
"KRN",8994,3080,2,2,0)
SDECSTART^1^^1^2
"KRN",8994,3080,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3080,2,2,1,1,0)
Start Date in external format
"KRN",8994,3080,2,3,0)
SDECEND^1^^1^3
"KRN",8994,3080,2,3,1,0)
^^1^1^3150127^
"KRN",8994,3080,2,3,1,1,0)
End date in external format
"KRN",8994,3080,2,"B","SDECEND",3)

"KRN",8994,3080,2,"B","SDECRESD",1)

"KRN",8994,3080,2,"B","SDECSTART",2)

"KRN",8994,3080,2,"PARAMSEQ",1,1)

"KRN",8994,3080,2,"PARAMSEQ",2,2)

"KRN",8994,3080,2,"PARAMSEQ",3,3)

"KRN",8994,3080,3,0)
^^2^2^3150127^
"KRN",8994,3080,3,1,0)
Recordset containing the fields:
"KRN",8994,3080,3,2,0)
ERRORID and ERRORTEXT
"KRN",8994,3081,-1)
0^14
"KRN",8994,3081,0)
SDEC APPDEL^APPDEL^SDEC^4^R^0^^0
"KRN",8994,3081,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3081,1,1,0)
Cancel Appointment
"KRN",8994,3081,2,0)
^8994.02A^6^6
"KRN",8994,3081,2,1,0)
SDECAPTID^1^^1^1
"KRN",8994,3081,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3081,2,1,1,1,0)
Pointer to SDEC APPOINTMENT file 409.84.
"KRN",8994,3081,2,2,0)
SDECTYP^1^^1^2
"KRN",8994,3081,2,2,1,0)
^^3^3^3150127^
"KRN",8994,3081,2,2,1,1,0)
Appointment Status valid values:
"KRN",8994,3081,2,2,1,2,0)
  C=CANCELLED BY CLINIC
"KRN",8994,3081,2,2,1,3,0)
PC=CANCELLED BY PATIENT
"KRN",8994,3081,2,3,0)
SDECCR^1^^0^3
"KRN",8994,3081,2,3,1,0)
^^1^1^3150127^
"KRN",8994,3081,2,3,1,1,0)
pointer to CANCELLATION REASON file 409.2
"KRN",8994,3081,2,4,0)
SDECNOT^1^^0^4
"KRN",8994,3081,2,4,1,0)
^^1^1^3150127^
"KRN",8994,3081,2,4,1,1,0)
Text representing user note
"KRN",8994,3081,2,5,0)
SDECDATE^1^^0^5
"KRN",8994,3081,2,5,1,0)
^^2^2^3150127^
"KRN",8994,3081,2,5,1,1,0)
Cancel Date/Time in external format.
"KRN",8994,3081,2,5,1,2,0)
Defaults to NOW.
"KRN",8994,3081,2,6,0)
USERIEN^1^^0^6
"KRN",8994,3081,2,6,1,0)
^^3^3^3150127^
"KRN",8994,3081,2,6,1,1,0)
User that cancelled appointment
"KRN",8994,3081,2,6,1,2,0)
pointer to NEW PERSON file
"KRN",8994,3081,2,6,1,3,0)
defaults to current user
"KRN",8994,3081,2,"B","SDECAPTID",1)

"KRN",8994,3081,2,"B","SDECCR",3)

"KRN",8994,3081,2,"B","SDECDATE",5)

"KRN",8994,3081,2,"B","SDECNOT",4)

"KRN",8994,3081,2,"B","SDECTYP",2)

"KRN",8994,3081,2,"B","USERIEN",6)

"KRN",8994,3081,2,"PARAMSEQ",1,1)

"KRN",8994,3081,2,"PARAMSEQ",2,2)

"KRN",8994,3081,2,"PARAMSEQ",3,3)

"KRN",8994,3081,2,"PARAMSEQ",4,4)

"KRN",8994,3081,2,"PARAMSEQ",5,5)

"KRN",8994,3081,2,"PARAMSEQ",6,6)

"KRN",8994,3081,3,0)
^^1^1^3150127^
"KRN",8994,3081,3,1,0)
Returns ERRORID
"KRN",8994,3082,-1)
0^15
"KRN",8994,3082,0)
SDEC APPTEVLG^APPTEVLG^SDEC^4^R^0^^0
"KRN",8994,3082,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3082,1,1,0)
Return appointment data for given patient.
"KRN",8994,3082,2,0)
^8994.02A^1^1
"KRN",8994,3082,2,1,0)
DFN^1^^1^1
"KRN",8994,3082,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3082,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3082,2,"B","DFN",1)

"KRN",8994,3082,2,"PARAMSEQ",1,1)

"KRN",8994,3082,3,0)
^^26^26^3150127^
"KRN",8994,3082,3,1,0)
Global Array with a single entry containing appointment data for the 
"KRN",8994,3082,3,2,0)
given patient:
"KRN",8994,3082,3,3,0)
   1. PATIENT_IEN
"KRN",8994,3082,3,4,0)
   2. PATIENT_NAME
"KRN",8994,3082,3,5,0)
   3. CLINIC_IEN
"KRN",8994,3082,3,6,0)
   4. WARD_IEN
"KRN",8994,3082,3,7,0)
   5. APPT_TIME
"KRN",8994,3082,3,8,0)
   6. APPT_NUMBER
"KRN",8994,3082,3,9,0)
   7. APPT_MADE_TIME
"KRN",8994,3082,3,10,0)
   8. APPT_MADE_USER
"KRN",8994,3082,3,11,0)
   9. APPT_MADE_USER_NAME
"KRN",8994,3082,3,12,0)
  10. ROUT_SLIP_DATE
"KRN",8994,3082,3,13,0)
  11. CHECKIN_TIME
"KRN",8994,3082,3,14,0)
  12. CHECKIN_USER
"KRN",8994,3082,3,15,0)
  13. CHECKIN_USER_NAME
"KRN",8994,3082,3,16,0)
  14. CHECKOUT_TIME
"KRN",8994,3082,3,17,0)
  15. CHECKOUT_USER
"KRN",8994,3082,3,18,0)
  16. CHECKOUT_USER_NAME
"KRN",8994,3082,3,19,0)
  17. CHECKOUT_FILED_TIME
"KRN",8994,3082,3,20,0)
  18. NO_SHO_CANCEL_TIME
"KRN",8994,3082,3,21,0)
  19. NO_SHO_CANCEL_USER
"KRN",8994,3082,3,22,0)
  20. NO_SHO_CANCEL_USER_NAME
"KRN",8994,3082,3,23,0)
  21. CHECKED_OUT
"KRN",8994,3082,3,24,0)
  22. REBOOK_DATE
"KRN",8994,3082,3,25,0)
  23. CANCEL_REASON
"KRN",8994,3082,3,26,0)
  24. CANCEL_REMARK
"KRN",8994,3083,-1)
0^12
"KRN",8994,3083,0)
SDEC APBLKOV^APBLKOV^SDEC^4^R^0^^0
"KRN",8994,3083,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3083,1,1,0)
Appointment Blocks Overlap
"KRN",8994,3083,2,0)
^8994.02A^4^4
"KRN",8994,3083,2,1,0)
SDECSTART^1^^1^1
"KRN",8994,3083,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3083,2,1,1,1,0)
Start time for lookup in external format.
"KRN",8994,3083,2,2,0)
SDECEND^1^^1^2
"KRN",8994,3083,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3083,2,2,1,1,0)
End time for lookup in external format.
"KRN",8994,3083,2,3,0)
SDECRES^1^^1^3
"KRN",8994,3083,2,3,1,0)
^^1^1^3150127^
"KRN",8994,3083,2,3,1,1,0)
Resource name from the SDEC RESOURCE file.
"KRN",8994,3083,2,4,0)
SDECWI^1^^0^4
"KRN",8994,3083,2,4,1,0)
^^1^1^3150127^
"KRN",8994,3083,2,4,1,1,0)
walk-in appointments; 1 - Include walkins, otherwise do not include them.
"KRN",8994,3083,2,"B","SDECEND",2)

"KRN",8994,3083,2,"B","SDECRES",3)

"KRN",8994,3083,2,"B","SDECSTART",1)

"KRN",8994,3083,2,"B","SDECWI",4)

"KRN",8994,3083,2,"PARAMSEQ",1,1)

"KRN",8994,3083,2,"PARAMSEQ",2,2)

"KRN",8994,3083,2,"PARAMSEQ",3,3)

"KRN",8994,3083,2,"PARAMSEQ",4,4)

"KRN",8994,3083,3,0)
^^6^6^3150127^
"KRN",8994,3083,3,1,0)
Global Array in which each array entry contains data appointment block
"KRN",8994,3083,3,2,0)
data separated by ^:
"KRN",8994,3083,3,3,0)
 1. START_TIME
"KRN",8994,3083,3,4,0)
 2. END_TIME
"KRN",8994,3083,3,5,0)
 3. PAT_ID
"KRN",8994,3083,3,6,0)
 4. APPTREQTYPE
"KRN",8994,3084,-1)
0^11
"KRN",8994,3084,0)
SDEC APBLKALL^APBLKALL^SDEC^4^R^0^^0
"KRN",8994,3084,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3084,1,1,0)
List of all appointments for all resources
"KRN",8994,3084,2,0)
^8994.02A^2^2
"KRN",8994,3084,2,1,0)
SDECSTART^1^^1^1
"KRN",8994,3084,2,1,1,0)
^8994.021^1^1^3150127^^
"KRN",8994,3084,2,1,1,1,0)
Start date for lookup in external format.
"KRN",8994,3084,2,2,0)
SDECEND^1^^1^2
"KRN",8994,3084,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3084,2,2,1,1,0)
End date for lookup in external format.
"KRN",8994,3084,2,"B","SDECEND",2)

"KRN",8994,3084,2,"B","SDECSTART",1)

"KRN",8994,3084,2,"PARAMSEQ",1,1)

"KRN",8994,3084,2,"PARAMSEQ",2,2)

"KRN",8994,3084,3,0)
^^7^7^3150127^
"KRN",8994,3084,3,1,0)
Global Array in which each array entry contains data appointment block
"KRN",8994,3084,3,2,0)
data separated by ^:
"KRN",8994,3084,3,3,0)
 1. START_TIME
"KRN",8994,3084,3,4,0)
 2. END_TIME
"KRN",8994,3084,3,5,0)
 3. PAT_ID
"KRN",8994,3084,3,6,0)
 4. RES_NAME
"KRN",8994,3084,3,7,0)
 5. APPTREQTYPE
"KRN",8994,3085,-1)
0^8
"KRN",8994,3085,0)
SDEC ADDRESU^ADDRESU^SDEC^4^R^0^^0
"KRN",8994,3085,1,0)
^^1^1^3150127^
"KRN",8994,3085,1,1,0)
ADD/EDIT RESOURCE USER
"KRN",8994,3085,2,0)
^8994.02A^1^1
"KRN",8994,3085,2,1,0)
SDECVAL^1^^1^1
"KRN",8994,3085,2,1,1,0)
^^11^11^3150127^
"KRN",8994,3085,2,1,1,1,0)
SDECVAL = 
"KRN",8994,3085,2,1,1,2,0)
sResourceUserID|sOverbook|sModifySchedule|ResourceID|UserID|sModifyAppoint
"KRN",8994,3085,2,1,1,3,0)
ments|MASTEROVERBOOK
"KRN",8994,3085,2,1,1,4,0)
  sResourceUserID     - If IEN=0 Then this is a new ResourceUser entry
"KRN",8994,3085,2,1,1,5,0)
  sOverbook
"KRN",8994,3085,2,1,1,6,0)
  sModifySchedule
"KRN",8994,3085,2,1,1,7,0)
  ResourceID
"KRN",8994,3085,2,1,1,8,0)
  UserID
"KRN",8994,3085,2,1,1,9,0)
  sModifyAppointments
"KRN",8994,3085,2,1,1,10,0)
  MASTEROVERBOOK      - determines if this user has Master Overbook 
"KRN",8994,3085,2,1,1,11,0)
Authority  0="NO"; 1="YES"
"KRN",8994,3085,2,"B","SDECVAL",1)

"KRN",8994,3085,2,"PARAMSEQ",1,1)

"KRN",8994,3085,3,0)
^^1^1^3150127^
"KRN",8994,3085,3,1,0)
SDEC RESOURCE USER ien
"KRN",8994,3086,-1)
0^9
"KRN",8994,3086,0)
SDEC ADDRG^ADDRG^SDEC^4^R^0^^0
"KRN",8994,3086,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3086,1,1,0)
ADD/EDIT RESOURCE GROUP
"KRN",8994,3086,2,0)
^8994.02A^1^1
"KRN",8994,3086,2,1,0)
SDECVAL^1^^1^1
"KRN",8994,3086,2,1,1,0)
^^5^5^3150127^
"KRN",8994,3086,2,1,1,1,0)
SDECVAL - IEN | NAME
"KRN",8994,3086,2,1,1,2,0)
     IEN  = (required if edit) Resource Group ID - Pointer to the SDEC
"KRN",8994,3086,2,1,1,3,0)
                               RESOURCE GROUP file
"KRN",8994,3086,2,1,1,4,0)
     NAME = (required if new)  Value to be put into the NAME field of
"KRN",8994,3086,2,1,1,5,0)
                               the SDEC RESOURCE GROUP file
"KRN",8994,3086,2,"B","SDECVAL",1)

"KRN",8994,3086,2,"PARAMSEQ",1,1)

"KRN",8994,3086,3,0)
^^1^1^3150127^
"KRN",8994,3086,3,1,0)
IEN of added/edited entry or 0 if error
"KRN",8994,3087,-1)
0^7
"KRN",8994,3087,0)
SDEC ADDRES^ADDRES^SDEC^4^R^0^^0
"KRN",8994,3087,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3087,1,1,0)
ADD/EDIT RESOURCE
"KRN",8994,3087,2,0)
^8994.02A^1^1
"KRN",8994,3087,2,1,0)
SDECVAL^1^^1^1
"KRN",8994,3087,2,1,1,0)
^^43^43^3150127^
"KRN",8994,3087,2,1,1,1,0)
SDECVAL - ResourceID|ResourceName|<NOT USED>|HospLocID|TIME_SCALE
"KRN",8994,3087,2,1,1,2,0)
            |LETTER_TEXT|NO_SHOW_LETTER|CANCELLATION_LETTER
"KRN",8994,3087,2,1,1,3,0)
            | INACTIVATEDDT | INACTIVATEDUSR | REACTIVATEDDT
"KRN",8994,3087,2,1,1,4,0)
            | REACTIVATEDUSR | RESOURCETYPE | RESOURCETYPEIEN
"KRN",8994,3087,2,1,1,5,0)
  1. ResourceID - (optional) Pointer to the SDEC RESOURCE file
"KRN",8994,3087,2,1,1,6,0)
                         a new entry is added if IEN is 0
"KRN",8994,3087,2,1,1,7,0)
  2. ResourceName - (required) Value put into the RESOURCE field
"KRN",8994,3087,2,1,1,8,0)
                               of the SDEC RESOURCE file
"KRN",8994,3087,2,1,1,9,0)
  3. NOT USED  INACTIVE This is 'computed' based on inactivation
"KRN",8994,3087,2,1,1,10,0)
                        and reactivation fields
"KRN",8994,3087,2,1,1,11,0)
  4. HospLocID - (required) Hospital Location ID - pointer to the
"KRN",8994,3087,2,1,1,12,0)
                        HOSPITAL LOCATION file 44
"KRN",8994,3087,2,1,1,13,0)
  5. TIME_SCALE - (optional) Value put into the TIME SCALE field
"KRN",8994,3087,2,1,1,14,0)
                             of the SDEC RESOURCE file
"KRN",8994,3087,2,1,1,15,0)
                         Allowed values: 5 10 15 20 30 60
"KRN",8994,3087,2,1,1,16,0)
  6. LETTER_TEXT - (optional) Value converted to Word Processor and
"KRN",8994,3087,2,1,1,17,0)
                            put into the LETTER TEXT field of the
"KRN",8994,3087,2,1,1,18,0)
                            SDEC RESOURCE file
"KRN",8994,3087,2,1,1,19,0)
  7. NO_SHOW_LETTER - (optional) Value converted to Word Processor
"KRN",8994,3087,2,1,1,20,0)
                            and put into the NO SHOW LETTER field of
"KRN",8994,3087,2,1,1,21,0)
                            the SDEC RESOURCE file
"KRN",8994,3087,2,1,1,22,0)
  8. CANCELLATION_LETTER - (optional) Value converted to
"KRN",8994,3087,2,1,1,23,0)
                            Word Processor and put into the CLINIC
"KRN",8994,3087,2,1,1,24,0)
                                    CANCELLATION LETTER field
"KRN",8994,3087,2,1,1,25,0)
                                    of the SDEC RESOURCE file
"KRN",8994,3087,2,1,1,26,0)
  9. DATE/TIME     - (optional) DATE/TIME entered in external format
"KRN",8994,3087,2,1,1,27,0)
                                Defaults to NOW.
"KRN",8994,3087,2,1,1,28,0)
 10. ENTEREDBY     - (optional) Entered by User pointer to NEW PERSON
"KRN",8994,3087,2,1,1,29,0)
                                Defaults to current user
"KRN",8994,3087,2,1,1,30,0)
 11. INACTIVATEDDT - (optional) inactivated Date/Time external format
"KRN",8994,3087,2,1,1,31,0)
 12. INACTIVATEDUSR- (optional) inactivating user pointer to
"KRN",8994,3087,2,1,1,32,0)
                                NEW PERSON file
"KRN",8994,3087,2,1,1,33,0)
 13. REACTIVATEDDT - (optional) reactivated Date/Time external format
"KRN",8994,3087,2,1,1,34,0)
 14. REACTIVATEDUSR- (optional) reactivating user pointer to
"KRN",8994,3087,2,1,1,35,0)
                                NEW PERSON file
"KRN",8994,3087,2,1,1,36,0)
 15. RESOURCETYPE - (required) valid values are:
"KRN",8994,3087,2,1,1,37,0)
                                H for HOSPITAL LOCATION (or clinic)
"KRN",8994,3087,2,1,1,38,0)
                                P for NEW PERSON (Provider)
"KRN",8994,3087,2,1,1,39,0)
                                A for ADDITIONAL RESOURCE
"KRN",8994,3087,2,1,1,40,0)
 16. RESOURCETYPEIEN - (required) pointer to 1 of the following:
"KRN",8994,3087,2,1,1,41,0)
                                HOSPITAL LOCATION file
"KRN",8994,3087,2,1,1,42,0)
                                NEW PERSON file
"KRN",8994,3087,2,1,1,43,0)
                                ADDITIONAL RESOURCE file
"KRN",8994,3087,2,"B","SDECVAL",1)

"KRN",8994,3087,2,"PARAMSEQ",1,1)

"KRN",8994,3087,3,0)
^^1^1^3150127^
"KRN",8994,3087,3,1,0)
SDEC RESOURCE ien that was added or edited.
"KRN",8994,3088,-1)
0^5
"KRN",8994,3088,0)
SDEC ADDACCTY^ADDACCTY^SDEC^4^R^0^^0
"KRN",8994,3088,1,0)
^^1^1^3150126^
"KRN",8994,3088,1,1,0)
ADD/EDIT ACCESS TYPE entries for the SDEC ACCESS TYPE file 409.823.
"KRN",8994,3088,2,0)
^8994.02A^1^1
"KRN",8994,3088,2,1,0)
SDECVAL^1^^1^1
"KRN",8994,3088,2,1,1,0)
^^13^13^3150126^
"KRN",8994,3088,2,1,1,1,0)
SDECVAL - IEN|NAME|INACTIVE|COLOR|RED|GREEN|BLUE|PREVENT_ACCESS
"KRN",8994,3088,2,1,1,2,0)
 IEN      - (optional) Pointer to the SDEC ACCESS TYPE file
"KRN",8994,3088,2,1,1,3,0)
                       a new entry is added if IEN is null
"KRN",8994,3088,2,1,1,4,0)
 NAME     - (required if new)    Value to be put into the ACCESS TYPE 
"KRN",8994,3088,2,1,1,5,0)
NAME field
"KRN",8994,3088,2,1,1,6,0)
 INACTIVE - (optional) Value to be put into the INACTIVE field
"KRN",8994,3088,2,1,1,7,0)
                       0=active; 1=inactive
"KRN",8994,3088,2,1,1,8,0)
 COLOR    - (optional) Value to be put into the DISPLAY COLOR field
"KRN",8994,3088,2,1,1,9,0)
 RED      - (optional) Value to be put into the RED field
"KRN",8994,3088,2,1,1,10,0)
 GREEN    - (optional) Value to be put into the GREEN field
"KRN",8994,3088,2,1,1,11,0)
 BLUE     - (optional) Value to be put into the BLUE field
"KRN",8994,3088,2,1,1,12,0)
 PREVENT_ACCESS - (optional) Value to be put into the PREVENT ACCESS field
"KRN",8994,3088,2,1,1,13,0)
                             0=NO; 1=YES
"KRN",8994,3088,2,"B","SDECVAL",1)

"KRN",8994,3088,2,"PARAMSEQ",1,1)

"KRN",8994,3088,3,0)
^^1^1^3150126^
"KRN",8994,3088,3,1,0)
SDEC ACCESS TYPE ien of the entry added or edited.
"KRN",8994,3089,-1)
0^4
"KRN",8994,3089,0)
SDEC ADDACCG^ADDACCG^SDEC^4^R^0^^0
"KRN",8994,3089,1,0)
^^1^1^3150126^
"KRN",8994,3089,1,1,0)
ADD/EDIT ACCESS GROUP entries in the SDEC ACCESS GROUP file 409.822.
"KRN",8994,3089,2,0)
^8994.02A^1^1
"KRN",8994,3089,2,1,0)
SDECVAL^1^^1^1
"KRN",8994,3089,2,1,1,0)
^^5^5^3150126^
"KRN",8994,3089,2,1,1,1,0)
Access Group IEN and Name separated by pipe |  <IEN>|<name>:
"KRN",8994,3089,2,1,1,2,0)
 Access Group IEN  - (integer) pointer to the SDEC ACCESS GROUP file
"KRN",8994,3089,2,1,1,3,0)
                               a new entry will be added if null
"KRN",8994,3089,2,1,1,4,0)
 Access Group name - (text)    value to be put into the NAME field of
"KRN",8994,3089,2,1,1,5,0)
                               the SDEC ACCESS GROUP FILE
"KRN",8994,3089,2,"B","SDECVAL",1)

"KRN",8994,3089,2,"PARAMSEQ",1,1)

"KRN",8994,3089,3,0)
^^1^1^3150126^
"KRN",8994,3089,3,1,0)
Access Group IEN that was added or edited.
"KRN",8994,3090,-1)
0^10
"KRN",8994,3090,0)
SDEC ADDRGI^ADDRGI^SDEC^4^R^0^^0
"KRN",8994,3090,1,0)
^^1^1^3150127^
"KRN",8994,3090,1,1,0)
Adds RESOURCEID to RESOURCE GROUP entry SDECIEN
"KRN",8994,3090,2,0)
^8994.02A^2^2
"KRN",8994,3090,2,1,0)
SDECIEN^1^^1^1
"KRN",8994,3090,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3090,2,1,1,1,0)
Resource Group ID - pointer to the SDEC RESOURCE GROUP file
"KRN",8994,3090,2,2,0)
SDECIEN1^1^^1^1
"KRN",8994,3090,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3090,2,2,1,1,0)
Resource ID - pointer to the SDEC RESOURCE file
"KRN",8994,3090,2,"B","SDECIEN",1)

"KRN",8994,3090,2,"B","SDECIEN1",2)

"KRN",8994,3090,2,"PARAMSEQ",1,1)

"KRN",8994,3090,2,"PARAMSEQ",1,2)

"KRN",8994,3090,3,0)
^^1^1^3150127^
"KRN",8994,3090,3,1,0)
Recordset containing added subentry number error message or "" if no error
"KRN",8994,3091,-1)
0^17
"KRN",8994,3091,0)
SDEC AVADD^AVADD^SDEC^4^R^0^^0
"KRN",8994,3091,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3091,1,1,0)
Create entry in SDEC ACCESS BLOCK
"KRN",8994,3091,2,0)
^8994.02A^6^6
"KRN",8994,3091,2,1,0)
SDECSTART^1^^1^1
"KRN",8994,3091,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3091,2,1,1,1,0)
SDEC ACCESS BLOCK start date/time
"KRN",8994,3091,2,2,0)
SDECEND^1^^1^2
"KRN",8994,3091,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3091,2,2,1,1,0)
SDEC ACCESS BLOCK end date/time
"KRN",8994,3091,2,3,0)
SDECTYPID^1^^1^3
"KRN",8994,3091,2,3,1,0)
^^1^1^3150127^
"KRN",8994,3091,2,3,1,1,0)
ACCESS TYPE id pointer to SDEC ACCESS TYPE file
"KRN",8994,3091,2,4,0)
SDECRES^1^^1^4
"KRN",8994,3091,2,4,1,0)
^^1^1^3150127^
"KRN",8994,3091,2,4,1,1,0)
Resource Name from the NAME field of the SDEC RESOURCE file
"KRN",8994,3091,2,5,0)
SDECSLOTS^1^^1^5
"KRN",8994,3091,2,5,1,0)
^^2^2^3150127^
"KRN",8994,3091,2,5,1,1,0)
Value added to the SLOTS field of the SDEC ACCESS BLOCK file
"KRN",8994,3091,2,5,1,2,0)
(must be 0-99)
"KRN",8994,3091,2,6,0)
SDECNOTE^1^^0^6
"KRN",8994,3091,2,6,1,0)
^^2^2^3150127^
"KRN",8994,3091,2,6,1,1,0)
Represents a note
"KRN",8994,3091,2,6,1,2,0)
Text will be converted to a WP field.
"KRN",8994,3091,2,"B","SDECEND",2)

"KRN",8994,3091,2,"B","SDECNOTE",6)

"KRN",8994,3091,2,"B","SDECRES",4)

"KRN",8994,3091,2,"B","SDECSLOTS",5)

"KRN",8994,3091,2,"B","SDECSTART",1)

"KRN",8994,3091,2,"B","SDECTYPID",3)

"KRN",8994,3091,2,"PARAMSEQ",1,1)

"KRN",8994,3091,2,"PARAMSEQ",2,2)

"KRN",8994,3091,2,"PARAMSEQ",3,3)

"KRN",8994,3091,2,"PARAMSEQ",4,4)

"KRN",8994,3091,2,"PARAMSEQ",5,5)

"KRN",8994,3091,2,"PARAMSEQ",6,6)

"KRN",8994,3091,3,0)
^^2^2^3150127^
"KRN",8994,3091,3,1,0)
Recordset having fields:
"KRN",8994,3091,3,2,0)
  AvailabilityID and ErrorNumber
"KRN",8994,3092,-1)
0^13
"KRN",8994,3092,0)
SDEC APPADD^APPADD^SDEC07^4^R^0^^0
"KRN",8994,3092,1,0)
^8994.01^1^1^3150522^^^
"KRN",8994,3092,1,1,0)
ADD NEW APPOINTMENT
"KRN",8994,3092,2,0)
^8994.02A^21^21
"KRN",8994,3092,2,1,0)
SDECSTART^1^^1^1
"KRN",8994,3092,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,1,1,1,0)
Appointment start date/time in external format
"KRN",8994,3092,2,2,0)
SDECEND^1^^1^2
"KRN",8994,3092,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,2,1,1,0)
Appointment end date/time in external format
"KRN",8994,3092,2,3,0)
DFN^1^^1^3
"KRN",8994,3092,2,3,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,3,1,1,0)
Patient ID - pointer to the PATIENT file 2
"KRN",8994,3092,2,4,0)
SDECRES^1^^1^4
"KRN",8994,3092,2,4,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,4,1,1,0)
Resource - pointer to SDEC RESOURCE file
"KRN",8994,3092,2,5,0)
SDECLEN^1^^0^5
"KRN",8994,3092,2,5,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,5,1,1,0)
Appointment duration in minutes
"KRN",8994,3092,2,6,0)
SDECNOTE^1^^0^6
"KRN",8994,3092,2,6,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,6,1,1,0)
Represents a note; Only the 1st 150 characters are used
"KRN",8994,3092,2,7,0)
SDECATID^1^^0^7
"KRN",8994,3092,2,7,1,0)
^^4^4^3150127^
"KRN",8994,3092,2,7,1,1,0)
SDECATID is used for 2 purposes:
"KRN",8994,3092,2,7,1,2,0)
            if SDECATID = "WALKIN" then create a walkin appt.
"KRN",8994,3092,2,7,1,3,0)
            if SDECATID = a number, then it is the access type id
"KRN",8994,3092,2,7,1,4,0)
            (used for rebooking)
"KRN",8994,3092,2,8,0)
SDECCR^1^^0^8
"KRN",8994,3092,2,8,1,0)
^^2^2^3150127^
"KRN",8994,3092,2,8,1,1,0)
0=don't print routing slip for WALKIN/Same Day appointment
"KRN",8994,3092,2,8,1,2,0)
1=allow print routing slip
"KRN",8994,3092,2,9,0)
SDMTRC^1^^0^9
"KRN",8994,3092,2,9,1,0)
^^2^2^3150127^
"KRN",8994,3092,2,9,1,1,0)
MTRC flag (multiple appointments)
"KRN",8994,3092,2,9,1,2,0)
Valid values are  False True
"KRN",8994,3092,2,10,0)
SDDDT^1^^0^10
"KRN",8994,3092,2,10,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,10,1,1,0)
Desired Date of Appointment in external format
"KRN",8994,3092,2,11,0)
SDREQBY^1^^0^11
"KRN",8994,3092,2,11,1,0)
^^4^4^3150127^
"KRN",8994,3092,2,11,1,1,0)
Requested By
"KRN",8994,3092,2,11,1,2,0)
Valid Values are:
"KRN",8994,3092,2,11,1,3,0)
  PROVIDER
"KRN",8994,3092,2,11,1,4,0)
  PATIENT
"KRN",8994,3092,2,12,0)
SDLAB^1^^0^12
"KRN",8994,3092,2,12,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,12,1,1,0)
LAB date/time in external format
"KRN",8994,3092,2,13,0)
PROVIEN^1^^0^13
"KRN",8994,3092,2,13,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,13,1,1,0)
Provider pointer to NEW PERSONE file.
"KRN",8994,3092,2,14,0)
SDID^1^^0^14
"KRN",8994,3092,2,14,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,14,1,1,0)
External ID (free-text)
"KRN",8994,3092,2,15,0)
SDAPTYP^1^^1^15
"KRN",8994,3092,2,15,1,0)
^^5^5^3150127^
"KRN",8994,3092,2,15,1,1,0)
SDAPTYP - (required) Appt Request type - variable pointer pointer to
"KRN",8994,3092,2,15,1,2,0)
                     one of these files:
"KRN",8994,3092,2,15,1,3,0)
  SD WAIT LIST - E|<WL IEN> E|123
"KRN",8994,3092,2,15,1,4,0)
  REQUEST/CONSULTATION - C|<CONSULT IEN> C|123
"KRN",8994,3092,2,15,1,5,0)
  RECALL REMINDERS - R|^<RECALL IEN> R|123
"KRN",8994,3092,2,16,0)
SDSVCP^1^^0^16
"KRN",8994,3092,2,16,1,0)
^^4^4^3150127^
"KRN",8994,3092,2,16,1,1,0)
Service Connected Priority
"KRN",8994,3092,2,16,1,2,0)
Valid values are
"KRN",8994,3092,2,16,1,3,0)
  NO
"KRN",8994,3092,2,16,1,4,0)
  YES
"KRN",8994,3092,2,17,0)
SDSVCPR^1^^0^17
"KRN",8994,3092,2,17,1,0)
^^2^2^3150127^
"KRN",8994,3092,2,17,1,1,0)
Service Connected Percentage
"KRN",8994,3092,2,17,1,2,0)
numeric 0-100
"KRN",8994,3092,2,18,0)
SDCL^1^^1^18
"KRN",8994,3092,2,18,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,18,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3092,2,19,0)
SDEKG^1^^0^19
"KRN",8994,3092,2,19,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,19,1,1,0)
EKG date/time in external format
"KRN",8994,3092,2,20,0)
SDXRAY^1^^0^20
"KRN",8994,3092,2,20,1,0)
^^1^1^3150127^
"KRN",8994,3092,2,20,1,1,0)
X-RAY date/time in external format.
"KRN",8994,3092,2,21,0)
APPTYPE^1^^0^21
"KRN",8994,3092,2,21,1,0)
^^2^2^3150522^
"KRN",8994,3092,2,21,1,1,0)
Appointment Type ID pointer to APPOINTMENT TYPE file 409.1.
"KRN",8994,3092,2,21,1,2,0)
Only used for Consults.
"KRN",8994,3092,2,"B","APPTYPE",21)

"KRN",8994,3092,2,"B","DFN",3)

"KRN",8994,3092,2,"B","PROVIEN",13)

"KRN",8994,3092,2,"B","SDAPTYP",15)

"KRN",8994,3092,2,"B","SDCL",18)

"KRN",8994,3092,2,"B","SDDDT",10)

"KRN",8994,3092,2,"B","SDECATID",7)

"KRN",8994,3092,2,"B","SDECCR",8)

"KRN",8994,3092,2,"B","SDECEND",2)

"KRN",8994,3092,2,"B","SDECLEN",5)

"KRN",8994,3092,2,"B","SDECNOTE",6)

"KRN",8994,3092,2,"B","SDECRES",4)

"KRN",8994,3092,2,"B","SDECSTART",1)

"KRN",8994,3092,2,"B","SDEKG",19)

"KRN",8994,3092,2,"B","SDID",14)

"KRN",8994,3092,2,"B","SDLAB",12)

"KRN",8994,3092,2,"B","SDMTRC",9)

"KRN",8994,3092,2,"B","SDREQBY",11)

"KRN",8994,3092,2,"B","SDSVCP",16)

"KRN",8994,3092,2,"B","SDSVCPR",17)

"KRN",8994,3092,2,"B","SDXRAY",20)

"KRN",8994,3092,2,"PARAMSEQ",1,1)

"KRN",8994,3092,2,"PARAMSEQ",2,2)

"KRN",8994,3092,2,"PARAMSEQ",3,3)

"KRN",8994,3092,2,"PARAMSEQ",4,4)

"KRN",8994,3092,2,"PARAMSEQ",5,5)

"KRN",8994,3092,2,"PARAMSEQ",6,6)

"KRN",8994,3092,2,"PARAMSEQ",7,7)

"KRN",8994,3092,2,"PARAMSEQ",8,8)

"KRN",8994,3092,2,"PARAMSEQ",9,9)

"KRN",8994,3092,2,"PARAMSEQ",10,10)

"KRN",8994,3092,2,"PARAMSEQ",11,11)

"KRN",8994,3092,2,"PARAMSEQ",12,12)

"KRN",8994,3092,2,"PARAMSEQ",13,13)

"KRN",8994,3092,2,"PARAMSEQ",14,14)

"KRN",8994,3092,2,"PARAMSEQ",15,15)

"KRN",8994,3092,2,"PARAMSEQ",16,16)

"KRN",8994,3092,2,"PARAMSEQ",17,17)

"KRN",8994,3092,2,"PARAMSEQ",18,18)

"KRN",8994,3092,2,"PARAMSEQ",19,19)

"KRN",8994,3092,2,"PARAMSEQ",20,20)

"KRN",8994,3092,2,"PARAMSEQ",21,21)

"KRN",8994,3092,3,0)
^8994.03^2^2^3150522^^
"KRN",8994,3092,3,1,0)
A single entry in the Global Array containing recordset having fields
"KRN",8994,3092,3,2,0)
AppointmentID and ErrorNumber
"KRN",8994,3093,-1)
0^6
"KRN",8994,3093,0)
SDEC ADDAGI^ADDAGI^SDEC^4^R^0^^0
"KRN",8994,3093,1,0)
^^1^1^3150127^
"KRN",8994,3093,1,1,0)
Add access group item - Adds ACCESS GROUP TYPE file entry
"KRN",8994,3093,2,0)
^8994.02A^2^2
"KRN",8994,3093,2,1,0)
SDECIEN^1^^1^1
"KRN",8994,3093,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3093,2,1,1,1,0)
 Access Group pointer to the SDEC ACCESS GROUP file
"KRN",8994,3093,2,2,0)
SDECIEN1^1^^1^2
"KRN",8994,3093,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3093,2,2,1,1,0)
Access Type pointer to the SDEC ACCESS TYPE file
"KRN",8994,3093,2,"B","SDECIEN",1)

"KRN",8994,3093,2,"B","SDECIEN1",2)

"KRN",8994,3093,2,"PARAMSEQ",1,1)

"KRN",8994,3093,2,"PARAMSEQ",2,2)

"KRN",8994,3093,3,0)
^^1^1^3150127^
"KRN",8994,3093,3,1,0)
recordset containing added entry number error message or "" if no error
"KRN",8994,3094,-1)
0^80
"KRN",8994,3094,0)
SDEC SYSSTAT^SYSSTAT^SDEC^4^R^0^^0
"KRN",8994,3094,1,0)
^8994.01^1^1^3150128^^^
"KRN",8994,3094,1,1,0)
Return system status.
"KRN",8994,3094,3,0)
^^2^2^3150128^
"KRN",8994,3094,3,1,0)
Returns a single entry in the Global Array with the fields ERROR_ID and 
"KRN",8994,3094,3,2,0)
ERROR_TEXT.
"KRN",8994,3095,-1)
0^88
"KRN",8994,3095,0)
SDEC APPTYPES^APPTYPES^SDEC^4^R^0^^0
"KRN",8994,3095,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3095,1,1,0)
Return all active Appointment types from the APPOINTMENT TYPE file 409.1
"KRN",8994,3095,3,0)
^^1^1^3150127^
"KRN",8994,3095,3,1,0)
Dataset with columns APPTTYPE_IEN and APPTTYPE_NAME
"KRN",8994,3096,-1)
0^89
"KRN",8994,3096,0)
SDEC SCHUSR^SCHUSR^SDEC^4^R^0^^0
"KRN",8994,3096,1,0)
^^2^2^3150128^
"KRN",8994,3096,1,1,0)
Return recordset of all users in NEW PERSON having the SDECZMENU and/or 
"KRN",8994,3096,1,2,0)
SDECZMGR keys.
"KRN",8994,3096,3,0)
^^4^4^3150128^
"KRN",8994,3096,3,1,0)
Returns a Global Array in which each array entry contains a user ID and 
"KRN",8994,3096,3,2,0)
Name separated by ^:
"KRN",8994,3096,3,3,0)
  1. USERID
"KRN",8994,3096,3,4,0)
  2. USERNAME
"KRN",8994,3097,-1)
0^90
"KRN",8994,3097,0)
SDEC PREFGET^PREFGET^SDEC^4^R^0^^0
"KRN",8994,3097,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3097,1,1,0)
Get values from SDEC PREFERENCES AND SPECIAL NEEDS file for a given 
"KRN",8994,3097,1,2,0)
patient.
"KRN",8994,3097,2,0)
^8994.02A^2^2
"KRN",8994,3097,2,1,0)
DFN^1^^1^1
"KRN",8994,3097,2,1,1,0)
^^2^2^3140829^
"KRN",8994,3097,2,1,1,1,0)
(integer) Patient ID - Pointer to the PATIENT file 2  (lookup by name is 
"KRN",8994,3097,2,1,1,2,0)
not accurate if duplicates)
"KRN",8994,3097,2,2,0)
INAC^1^^0^2
"KRN",8994,3097,2,2,1,0)
^^1^1^3150128^
"KRN",8994,3097,2,2,1,1,0)
1=include inactive entries
"KRN",8994,3097,2,"B","DFN",1)

"KRN",8994,3097,2,"B","INAC",2)

"KRN",8994,3097,2,"PARAMSEQ",1,1)

"KRN",8994,3097,2,"PARAMSEQ",2,2)

"KRN",8994,3097,3,0)
^8994.03^35^35^3150128^^
"KRN",8994,3097,3,1,0)
 ; Successful Return:
"KRN",8994,3097,3,2,0)
 ;  Global array containing a list of preferences in which each array 
"KRN",8994,3097,3,3,0)
entry contains preference data separated by ^:
"KRN",8994,3097,3,4,0)
 ;         the ^ pieces are as follows:
"KRN",8994,3097,3,5,0)
 ;          1. (integer)        Patient ID - pointer to PATIENT file
"KRN",8994,3097,3,6,0)
 ;          2. (text)           Preference text
"KRN",8994,3097,3,7,0)
 ;          3. (date/time)      Date/Time preference added in external 
"KRN",8994,3097,3,8,0)
format - defaults to NOW
"KRN",8994,3097,3,9,0)
 ;          4. (integer)        Added by User - Pointer to NEW PERSON 
"KRN",8994,3097,3,10,0)
file - defaults to Current User
"KRN",8994,3097,3,11,0)
 ;          5. (text)           Added by User Name
"KRN",8994,3097,3,12,0)
 ;          6. (date/time)      Date/Time Inactivated in external format
"KRN",8994,3097,3,13,0)
 ;          7. (integer)        Inactivated by user - Pointer to NEW 
"KRN",8994,3097,3,14,0)
PERSON file
"KRN",8994,3097,3,15,0)
 ;          8. (text)           Inactivated by user Name
"KRN",8994,3097,3,16,0)
 ;          9. (text)      Remarks are returned as a single string of 
"KRN",8994,3097,3,17,0)
text that may be delimited by carrage return/line feed $c(13,10).
"KRN",8994,3097,3,18,0)
 ;             1         2               3                4
"KRN",8994,3097,3,19,0)
 ;      
"KRN",8994,3097,3,20,0)
"T00020DFN^T00030PREF_TEXT^T00020DATE_ADDED^T00030ADDED_BY_USER_IEN"
"KRN",8994,3097,3,21,0)
 ;              5                        6                      7
"KRN",8994,3097,3,22,0)
 ;       
"KRN",8994,3097,3,23,0)
^T00030ADDED_BY_USER_NAME^T00020DATE_INACTIVATED^T00030INACTIVATED_BY_USER
"KRN",8994,3097,3,24,0)
_IEN"
"KRN",8994,3097,3,25,0)
 ;              8                              9
"KRN",8994,3097,3,26,0)
 ;       ^T00030INACTIVATED_BY_USER_NAME^T00100REMARKS"_$C(30)
"KRN",8994,3097,3,27,0)
 ; Caught Exception Return:
"KRN",8994,3097,3,28,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3097,3,29,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3097,3,30,0)
 ; Unexpected Exception Return:
"KRN",8994,3097,3,31,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3097,3,32,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3097,3,33,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3097,3,34,0)
generated
"KRN",8994,3097,3,35,0)
 ;     text back to the client.
"KRN",8994,3098,-1)
0^91
"KRN",8994,3098,0)
SDEC PREFGETV^PREFGETV^SDEC^4^R^0^^0
"KRN",8994,3098,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3098,1,1,0)
Get all valid Preference text from SDEC PREFERENCES AND SPECIAL NEEDS 
"KRN",8994,3098,1,2,0)
file.
"KRN",8994,3098,3,0)
^8994.03^12^12^3150128^^
"KRN",8994,3098,3,1,0)
 ; Successful Return:
"KRN",8994,3098,3,2,0)
 ;  Global array containing a list of the valid Preferences in which each 
"KRN",8994,3098,3,3,0)
array entry contains the preference text.
"KRN",8994,3098,3,4,0)
 ; Caught Exception Return:
"KRN",8994,3098,3,5,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3098,3,6,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3098,3,7,0)
 ; Unexpected Exception Return:
"KRN",8994,3098,3,8,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3098,3,9,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3098,3,10,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3098,3,11,0)
generated
"KRN",8994,3098,3,12,0)
 ;     text back to the client.
"KRN",8994,3099,-1)
0^92
"KRN",8994,3099,0)
SDEC PREFSET^PREFSET^SDEC^4^R^0^^0
"KRN",8994,3099,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3099,1,1,0)
Set values to SDEC PREFERENCES AND SPECIAL NEEDS file.
"KRN",8994,3099,2,0)
^8994.02A^2^2
"KRN",8994,3099,2,1,0)
DFN^1^^1^1
"KRN",8994,3099,2,1,1,0)
^^2^2^3140829^
"KRN",8994,3099,2,1,1,1,0)
(integer) Patient ID - Pointer to the PATIENT file 2  (lookup by name is 
"KRN",8994,3099,2,1,1,2,0)
not accurate if duplicates)
"KRN",8994,3099,2,2,0)
PREF^1^^0^2
"KRN",8994,3099,2,2,1,0)
^8994.021^21^21^3150128^^
"KRN",8994,3099,2,2,1,1,0)
 ;  PREF = List of preference data separated by ^
"KRN",8994,3099,2,2,1,2,0)
 ;         Each ^ piece contains the following Pipe pieces |:
"KRN",8994,3099,2,2,1,3,0)
 ;          1. (text)           Preference text; precede text with @ to 
"KRN",8994,3099,2,2,1,4,0)
delete
"KRN",8994,3099,2,2,1,5,0)
 ;                              Valid values are:
"KRN",8994,3099,2,2,1,6,0)
 ;                                GENDER SPECIFIC PROVIDER
"KRN",8994,3099,2,2,1,7,0)
 ;                                HEARING IMPAIRED
"KRN",8994,3099,2,2,1,8,0)
 ;                                LANGUAGE PREFERENCE
"KRN",8994,3099,2,2,1,9,0)
 ;                                NEEDS ESCORT
"KRN",8994,3099,2,2,1,10,0)
 ;                                ON STRETCHER
"KRN",8994,3099,2,2,1,11,0)
 ;                                SPECIAL MODE OF TRANSPORTATION
"KRN",8994,3099,2,2,1,12,0)
 ;          2. (date/time)      Date/Time preference added in external 
"KRN",8994,3099,2,2,1,13,0)
format - defaults to NOW
"KRN",8994,3099,2,2,1,14,0)
 ;          3. (integer)        Added by User - Pointer to NEW PERSON 
"KRN",8994,3099,2,2,1,15,0)
file - defaults to Current User
"KRN",8994,3099,2,2,1,16,0)
 ;          4. (date/time)      Date/Time Inactivated in external format
"KRN",8994,3099,2,2,1,17,0)
 ;          5. (integer/text)   Inactivated by user - Pointer to NEW 
"KRN",8994,3099,2,2,1,18,0)
PERSON file
"KRN",8994,3099,2,2,1,19,0)
 ;          6. (free text)      Remarks single string of text will be 
"KRN",8994,3099,2,2,1,20,0)
converted to word processor format.
"KRN",8994,3099,2,2,1,21,0)
 ;                              @ deletes previous Remark
"KRN",8994,3099,2,"B","DFN",1)

"KRN",8994,3099,2,"B","PREF",2)

"KRN",8994,3099,2,"PARAMSEQ",1,1)

"KRN",8994,3099,2,"PARAMSEQ",2,2)

"KRN",8994,3099,3,0)
^8994.03^13^13^3150128^^
"KRN",8994,3099,3,1,0)
 ; Successful Return:
"KRN",8994,3099,3,2,0)
 ;   A single entry in the Global Array in the format "0^<optional msg 
"KRN",8994,3099,3,3,0)
text>"
"KRN",8994,3099,3,4,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3099,3,5,0)
 ; Caught Exception Return:
"KRN",8994,3099,3,6,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3099,3,7,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3099,3,8,0)
 ; Unexpected Exception Return:
"KRN",8994,3099,3,9,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3099,3,10,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3099,3,11,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3099,3,12,0)
generated
"KRN",8994,3099,3,13,0)
 ;     text back to the client.
"KRN",8994,3100,-1)
0^93
"KRN",8994,3100,0)
SDEC FAPPTGET^FAPPTGET^SDEC^4^R^0^^0
"KRN",8994,3100,1,0)
^8994.01^2^2^3150128^^^
"KRN",8994,3100,1,1,0)
Get Future appointments for a given patient and date range from the 
"KRN",8994,3100,1,2,0)
APPOINTMENT multiple of the PATIENT file 2.
"KRN",8994,3100,2,0)
^8994.02A^4^4
"KRN",8994,3100,2,1,0)
DFN^1^^1^1
"KRN",8994,3100,2,1,1,0)
^^1^1^3140902^
"KRN",8994,3100,2,1,1,1,0)
Patient ID - Pointer to the PATIENT file 2.
"KRN",8994,3100,2,2,0)
SDBEG^1^^0^2
"KRN",8994,3100,2,2,1,0)
^^1^1^3140902^
"KRN",8994,3100,2,2,1,1,0)
Begin of date range to search for appointments in external format.
"KRN",8994,3100,2,3,0)
SDEND^1^^0^3
"KRN",8994,3100,2,3,1,0)
^8994.021^1^1^3140908^^
"KRN",8994,3100,2,3,1,1,0)
End of date range to serch for appointments in external format.
"KRN",8994,3100,2,4,0)
SDANC^1^^0^4
"KRN",8994,3100,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3100,2,4,1,1,0)
ancillary flag  0=all appointments; 1=only ancillary appointments
"KRN",8994,3100,2,"B","DFN",1)

"KRN",8994,3100,2,"B","SDANC",4)

"KRN",8994,3100,2,"B","SDBEG",2)

"KRN",8994,3100,2,"B","SDEND",3)

"KRN",8994,3100,2,"PARAMSEQ",1,1)

"KRN",8994,3100,2,"PARAMSEQ",2,2)

"KRN",8994,3100,2,"PARAMSEQ",3,3)

"KRN",8994,3100,2,"PARAMSEQ",4,4)

"KRN",8994,3100,3,0)
^8994.03^22^22^3150128^^^
"KRN",8994,3100,3,1,0)
Successful Return:
"KRN",8994,3100,3,2,0)
  Global Array in which each array entry contains Appointment Data from 
"KRN",8994,3100,3,3,0)
the
"KRN",8994,3100,3,4,0)
  PATIENT file
"KRN",8994,3100,3,5,0)
  
"KRN",8994,3100,3,6,0)
  Data is separated by ^:
"KRN",8994,3100,3,7,0)
    1. DFN
"KRN",8994,3100,3,8,0)
    2. Clinic IEN
"KRN",8994,3100,3,9,0)
    3. Clinic Name
"KRN",8994,3100,3,10,0)
    4. Appointment Date in external format
"KRN",8994,3100,3,11,0)
    5. Status text
"KRN",8994,3100,3,12,0)
  
"KRN",8994,3100,3,13,0)
"T00020DFN^T00020CLINIC_IEN^T00030CLINIC_NAME^T00020APPT_DATE^T00020STATUS
"KRN",8994,3100,3,14,0)
"
"KRN",8994,3100,3,15,0)
Caught Exception Return:
"KRN",8994,3100,3,16,0)
  A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3100,3,17,0)
  "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3100,3,18,0)
Unexpected Exception Return:
"KRN",8994,3100,3,19,0)
    Handled by the RPC Broker.
"KRN",8994,3100,3,20,0)
    M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3100,3,21,0)
    The RPC execution stops and the RPC Broker sends the error generated
"KRN",8994,3100,3,22,0)
    text back to the client.
"KRN",8994,3101,-1)
0^94
"KRN",8994,3101,0)
SDEC REQGET^REQGET^SDEC^4^R^0^^0
"KRN",8994,3101,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3101,1,1,0)
GET entries with an ACTIVITY of RECEIVED, but do have have an ACTIVITY of 
"KRN",8994,3101,1,2,0)
SCHEDULED from the REQUEST/CONSULTATING file 123
"KRN",8994,3101,2,0)
^8994.02A^4^4
"KRN",8994,3101,2,1,0)
SDBEG^1^^0^1
"KRN",8994,3101,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3101,2,1,1,1,0)
Begin date in external format
"KRN",8994,3101,2,1,1,2,0)
Default to all dates
"KRN",8994,3101,2,2,0)
SDECEND^1^^0^2
"KRN",8994,3101,2,2,1,0)
^^2^2^3150128^
"KRN",8994,3101,2,2,1,1,0)
End date in external format.
"KRN",8994,3101,2,2,1,2,0)
default to all dates
"KRN",8994,3101,2,3,0)
MAXREC^1^^0^3
"KRN",8994,3101,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3101,2,3,1,1,0)
Maximum number of records to return
"KRN",8994,3101,2,4,0)
LASTSUB^1^^0^4
"KRN",8994,3101,2,4,1,0)
^^2^2^3150128^
"KRN",8994,3101,2,4,1,1,0)
Last subscripts from previous call;
"KRN",8994,3101,2,4,1,2,0)
Used to collect the data in multiple background calls.
"KRN",8994,3101,2,"B","LASTSUB",4)

"KRN",8994,3101,2,"B","MAXREC",3)

"KRN",8994,3101,2,"B","SDBEG",1)

"KRN",8994,3101,2,"B","SDECEND",2)

"KRN",8994,3101,2,"PARAMSEQ",1,1)

"KRN",8994,3101,2,"PARAMSEQ",2,2)

"KRN",8994,3101,2,"PARAMSEQ",3,3)

"KRN",8994,3101,2,"PARAMSEQ",4,4)

"KRN",8994,3101,3,0)
^^89^89^3150128^
"KRN",8994,3101,3,1,0)
Global Array in which each array entry contains
"KRN",8994,3101,3,2,0)
   REQUEST/CONSULTATION data from the REQUEST/CONSULTATION file 123
"KRN",8994,3101,3,3,0)
   Data is separated by ^:
"KRN",8994,3101,3,4,0)
   1. IEN - Pointer to REQUEST/CONSULTATION file 123
"KRN",8994,3101,3,5,0)
   2. File entry Date external form
"KRN",8994,3101,3,6,0)
   3. Patient IEN - Pointer to PATIENT file
"KRN",8994,3101,3,7,0)
   4. Patient Name NAME from PATIENT file
"KRN",8994,3101,3,8,0)
   5. To Service - SERVICE NAME text from REQUEST SERVICES file 123.5
"KRN",8994,3101,3,9,0)
   6. CLINIEN - pointer to HOSPITAL LOCATION file
"KRN",8994,3101,3,10,0)
   7. CLINNAME - NAME from HOSPITAL LOCATION file
"KRN",8994,3101,3,11,0)
   8. DATE OF REQUEST external format
"KRN",8994,3101,3,12,0)
   9. PRIO - URGENCY NAME from PROTOCOL file
"KRN",8994,3101,3,13,0)
  10. USERIEN - ATTENTION - Pointer to NEW PERSON file
"KRN",8994,3101,3,14,0)
  11. USERNAME - ATTENTION - NAME from NEW PERSON file
"KRN",8994,3101,3,15,0)
  12. PROVIEN - SENDING PROVIDER IEN - Pointer to NEW PERSON file
"KRN",8994,3101,3,16,0)
  13. PROVNAME - SENDING PROVIDER NAME - NAME from NEW PERSON file
"KRN",8994,3101,3,17,0)
  14. REQUEST TYPE - valid values are:
"KRN",8994,3101,3,18,0)
                     CONSULT
"KRN",8994,3101,3,19,0)
                     PROCEDURE
"KRN",8994,3101,3,20,0)
  15. SERVICE RENDERED AS IN OR OUT - valid values are:
"KRN",8994,3101,3,21,0)
             inpatient
"KRN",8994,3101,3,22,0)
             outpatient
"KRN",8994,3101,3,23,0)
  16. COMM - REASON FOR REQUEST - text converted from WP and may\
"KRN",8994,3101,3,24,0)
                       contain $C(13,10) carrage return/line feed
"KRN",8994,3101,3,25,0)
  17. REQUEST PROCESSING ACTIVITY SEPARATED BY PIPE |
"KRN",8994,3101,3,26,0)
      Each pipe piece contains the following ";;" pieces:
"KRN",8994,3101,3,27,0)
       1. REQUEST PROCESSING ACTIVITY pointer to multiple entry
"KRN",8994,3101,3,28,0)
       2. DATE/TIME OF ACTION ENTRY - external format
"KRN",8994,3101,3,29,0)
       3. ACTIVITY - text
"KRN",8994,3101,3,30,0)
  18. HRN
"KRN",8994,3101,3,31,0)
  19. DOB
"KRN",8994,3101,3,32,0)
  20. SSN
"KRN",8994,3101,3,33,0)
  21. GENDER
"KRN",8994,3101,3,34,0)
  22. INSTIEN
"KRN",8994,3101,3,35,0)
  23. INSTNAME
"KRN",8994,3101,3,36,0)
  24. PRIGRP - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file
"KRN",8994,3101,3,37,0)
               Valid Values:
"KRN",8994,3101,3,38,0)
                  GROUP 1
"KRN",8994,3101,3,39,0)
                  GROUP 2
"KRN",8994,3101,3,40,0)
                  GROUP 3
"KRN",8994,3101,3,41,0)
                  GROUP 4
"KRN",8994,3101,3,42,0)
                  GROUP 5
"KRN",8994,3101,3,43,0)
                  GROUP 6
"KRN",8994,3101,3,44,0)
                  GROUP 7
"KRN",8994,3101,3,45,0)
                  GROUP 8
"KRN",8994,3101,3,46,0)
  25. ELIGIEN - Pointer to MAS ELIGIBILITY CODE file 8.1
"KRN",8994,3101,3,47,0)
  26. ELIGNAME - NAME from MAS ELIGIBILITY CODE file
"KRN",8994,3101,3,48,0)
  27. SVCCONN - SERVICE CONNECTED field from PATIENT ENROLLMENT file
"KRN",8994,3101,3,49,0)
                Valid values:
"KRN",8994,3101,3,50,0)
                 YES
"KRN",8994,3101,3,51,0)
                 NO
"KRN",8994,3101,3,52,0)
  28. SVCCONNP - SERVICE CONNECTED PERCENTAGE field from
"KRN",8994,3101,3,53,0)
                 PATIENT ENROLLMENT file
"KRN",8994,3101,3,54,0)
                 Numeric between 0-100
"KRN",8994,3101,3,55,0)
  29. TYPEIEN - Pointer to TYPE OF PATIENT file 391
"KRN",8994,3101,3,56,0)
  30. TYPENAME - NAME from TYPE OF PATIENT file 391
"KRN",8994,3101,3,57,0)
  31. PADDRES1 - Patient Address line 1
"KRN",8994,3101,3,58,0)
  32. PADDRES2 - Patient Address line 2
"KRN",8994,3101,3,59,0)
  33. PADDRES3 - Patient Address line 3
"KRN",8994,3101,3,60,0)
  34. PCITY - Patient City
"KRN",8994,3101,3,61,0)
  35. PSTATE - Patient state name
"KRN",8994,3101,3,62,0)
  36. PCOUNTRY - Patient country name
"KRN",8994,3101,3,63,0)
  37. PZIP4 - Patient Zip+4
"KRN",8994,3101,3,64,0)
  38. GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN>
"KRN",8994,3101,3,65,0)
           | <diagnosis by name>
"KRN",8994,3101,3,66,0)
  39. SENSITIVE - Sensitive Record Access data
"KRN",8994,3101,3,67,0)
                 separated by pipe |:
"KRN",8994,3101,3,68,0)
    1. return code:
"KRN",8994,3101,3,69,0)
        -1 -RPC/API failed
"KRN",8994,3101,3,70,0)
            Required variable not defined
"KRN",8994,3101,3,71,0)
         0 -No display/action required
"KRN",8994,3101,3,72,0)
            Not accessing own, employee, or sensitive record
"KRN",8994,3101,3,73,0)
         1 -Display warning message
"KRN",8994,3101,3,74,0)
            Sensitive and DG SENSITIVITY key holder
"KRN",8994,3101,3,75,0)
            or Employee and DG SECURITY OFFICER key holder
"KRN",8994,3101,3,76,0)
         2 -Display warning message/require OK to continue
"KRN",8994,3101,3,77,0)
            Sensitive and not a DG SENSITIVITY key holder
"KRN",8994,3101,3,78,0)
            Employee and not a DG SECURITY OFFICER key holder
"KRN",8994,3101,3,79,0)
         3 -Access to record denied
"KRN",8994,3101,3,80,0)
            Accessing own record
"KRN",8994,3101,3,81,0)
         4 -Access to Patient (#2) file records denied
"KRN",8994,3101,3,82,0)
            SSN not defined
"KRN",8994,3101,3,83,0)
    2. display text/message
"KRN",8994,3101,3,84,0)
    3. display text/message
"KRN",8994,3101,3,85,0)
    4. display text/message
"KRN",8994,3101,3,86,0)
  40. LASTSUB - last subscripts of data in the return.
"KRN",8994,3101,3,87,0)
                Will only be in the last record of the return.
"KRN",8994,3101,3,88,0)
                Pass this as LASTSUB in the next call to continue
"KRN",8994,3101,3,89,0)
                collecting data.
"KRN",8994,3102,-1)
0^97
"KRN",8994,3102,0)
SDEC RECGET^RECGET^SDEC^4^R^0^^0
"KRN",8994,3102,1,0)
^^2^2^3150128^
"KRN",8994,3102,1,1,0)
GET entries from the RECALL REMINDERS file 403.5 for a given Patient 
"KRN",8994,3102,1,2,0)
and Recall Date range.
"KRN",8994,3102,2,0)
^8994.02A^5^5
"KRN",8994,3102,2,1,0)
DFN^1^^1^1
"KRN",8994,3102,2,1,1,0)
^^1^1^3140905^
"KRN",8994,3102,2,1,1,1,0)
Pointer to PATIENT file 2.
"KRN",8994,3102,2,2,0)
SDBEG^1^^0^2
"KRN",8994,3102,2,2,1,0)
^^1^1^3140905^
"KRN",8994,3102,2,2,1,1,0)
Begin Date range in external format to search RECALL DATE range. (no time)
"KRN",8994,3102,2,3,0)
SDEND^1^^0^3
"KRN",8994,3102,2,3,1,0)
^8994.021^1^1^3141210^^
"KRN",8994,3102,2,3,1,1,0)
End Date range in external format to search RECALL DATE range. (no time)
"KRN",8994,3102,2,4,0)
MAXREC^1^^0^4
"KRN",8994,3102,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3102,2,4,1,1,0)
maximum number of records to return
"KRN",8994,3102,2,5,0)
LASTSUB^1^^0^5
"KRN",8994,3102,2,5,1,0)
^^2^2^3150128^
"KRN",8994,3102,2,5,1,1,0)
Last subscripts from previous call;
"KRN",8994,3102,2,5,1,2,0)
Used to collect the data in multiple background calls
"KRN",8994,3102,2,"B","DFN",1)

"KRN",8994,3102,2,"B","LASTSUB",5)

"KRN",8994,3102,2,"B","MAXREC",4)

"KRN",8994,3102,2,"B","SDBEG",2)

"KRN",8994,3102,2,"B","SDEND",3)

"KRN",8994,3102,2,"PARAMSEQ",1,1)

"KRN",8994,3102,2,"PARAMSEQ",2,2)

"KRN",8994,3102,2,"PARAMSEQ",3,3)

"KRN",8994,3102,2,"PARAMSEQ",4,4)

"KRN",8994,3102,2,"PARAMSEQ",5,5)

"KRN",8994,3102,3,0)
^^91^91^3150128^
"KRN",8994,3102,3,1,0)
Global Array in which each array entry contains data from the
"KRN",8994,3102,3,2,0)
    RECALL REMINDERS file 403.5.
"KRN",8994,3102,3,3,0)
    Data is separated by ^:
"KRN",8994,3102,3,4,0)
     1. IEN - pointer to RECALL REMINDERS
"KRN",8994,3102,3,5,0)
     2. DFN - Pointer to PATIENT file
"KRN",8994,3102,3,6,0)
     3. NAME - Patient NAME from PATIENT file
"KRN",8994,3102,3,7,0)
     4. HRN
"KRN",8994,3102,3,8,0)
     5. DOB - Date of Birth in external format
"KRN",8994,3102,3,9,0)
     6. SSN - Social Security Number
"KRN",8994,3102,3,10,0)
     7. GENDER
"KRN",8994,3102,3,11,0)
     8 INSTIEN - INSTITUTION ien
"KRN",8994,3102,3,12,0)
     9 INSTNAME - INSTITUTION NAME
"KRN",8994,3102,3,13,0)
    10. ACCESION - Accession # (free-text 1-25 characters)
"KRN",8994,3102,3,14,0)
    11. COMM - COMMENT (free-text 1-80 characters)
"KRN",8994,3102,3,15,0)
    12. FASTING - FAST/NON-FASTING valid values:
"KRN",8994,3102,3,16,0)
                  FASTING
"KRN",8994,3102,3,17,0)
                  NON-FASTING
"KRN",8994,3102,3,18,0)
    13. RRAPPTYP - Test/App pointer to RECALL REMINDERS APPT TYPE
"KRN",8994,3102,3,19,0)
                   file 403.51
"KRN",8994,3102,3,20,0)
    14. RRPROVIEN - Provider - Pointer to RECALL REMINDERS
"KRN",8994,3102,3,21,0)
                    PROVIDERS file 403.54
"KRN",8994,3102,3,22,0)
    15. PROVNAME - Provider NAME of Provider in RECALL REMINDERS
"KRN",8994,3102,3,23,0)
                   PROVIDERS file
"KRN",8994,3102,3,24,0)
    16. CLINIEN - Clinic pointer to HOSPITAL LOCATION file
"KRN",8994,3102,3,25,0)
    17. CLINNAME - Clinic NAME from HOSPITAL LOCATION file
"KRN",8994,3102,3,26,0)
    18. APPTLEN - Length of Appointment numeric between 10 and 120
"KRN",8994,3102,3,27,0)
    19. DATE - Recall Date in external format (no time)
"KRN",8994,3102,3,28,0)
    20. DATE1 - Recall Date (Per patient) in external format
"KRN",8994,3102,3,29,0)
                (no time)
"KRN",8994,3102,3,30,0)
    21. DAPTDT - Date Reminder Sent in external format (no time)
"KRN",8994,3102,3,31,0)
    22. USERIEN - User Who Entered Recall pointer to NEW PERSON
"KRN",8994,3102,3,32,0)
                  file
"KRN",8994,3102,3,33,0)
    23. USERNAME - User Who Entered Recall NAME from NEW PERSON
"KRN",8994,3102,3,34,0)
                   file
"KRN",8994,3102,3,35,0)
  24. DATE2 - Second Print Date in external format (no time)
"KRN",8994,3102,3,36,0)
  25. PRIGRP - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT
"KRN",8994,3102,3,37,0)
               file.  Valid Values:
"KRN",8994,3102,3,38,0)
                       GROUP 1
"KRN",8994,3102,3,39,0)
                       GROUP 2
"KRN",8994,3102,3,40,0)
                       GROUP 3
"KRN",8994,3102,3,41,0)
                       GROUP 4
"KRN",8994,3102,3,42,0)
                       GROUP 5
"KRN",8994,3102,3,43,0)
                       GROUP 6
"KRN",8994,3102,3,44,0)
                       GROUP 7
"KRN",8994,3102,3,45,0)
                       GROUP 8
"KRN",8994,3102,3,46,0)
 26. ELIGIEN - Pointer to MAS ELIGIBILITY CODE file 8.1
"KRN",8994,3102,3,47,0)
 27. ELIGNAME - NAME from MAS ELIGIBILITY CODE file
"KRN",8994,3102,3,48,0)
 28. SVCCONN - SERVICE CONNECTED field from PATIENT ENROLLMENT
"KRN",8994,3102,3,49,0)
               file. Valid values:
"KRN",8994,3102,3,50,0)
                 YES
"KRN",8994,3102,3,51,0)
                  NO
"KRN",8994,3102,3,52,0)
 29. SVCCONNP - SERVICE CONNECTED PERCENTAGE field from PATIENT
"KRN",8994,3102,3,53,0)
                ENROLLMENT file
"KRN",8994,3102,3,54,0)
                  Numeric between 0-100
"KRN",8994,3102,3,55,0)
 30. TYPEIEN - Pointer to TYPE OF PATIENT file 391
"KRN",8994,3102,3,56,0)
 31. TYPENAME - NAME from TYPE OF PATIENT file 391
"KRN",8994,3102,3,57,0)
 32. DATE3    - DATE/TIME RECALL ADDED from RECALL REMINDERS
"KRN",8994,3102,3,58,0)
                file 403.5
"KRN",8994,3102,3,59,0)
 33. PADDRES1 - Patient Address line 1
"KRN",8994,3102,3,60,0)
 34. PADDRES2 - Patient Address line 2
"KRN",8994,3102,3,61,0)
 35. PADDRES3 - Patient Address line 3
"KRN",8994,3102,3,62,0)
 36. PCITY - Patient City
"KRN",8994,3102,3,63,0)
 37. PSTATE - Patient state name
"KRN",8994,3102,3,64,0)
 38. PCOUNTRY - Patient country name
"KRN",8994,3102,3,65,0)
 39. PZIP4 - Patient Zip+4
"KRN",8994,3102,3,66,0)
 40. GAF - <text> | <GAF score> | <GAF date>
"KRN",8994,3102,3,67,0)
           | <diagnosis by IEN> | <diagnosis by name>
"KRN",8994,3102,3,68,0)
 41. SENSITIVE - Sensitive Record Access data
"KRN",8994,3102,3,69,0)
                 separated by pipe |:
"KRN",8994,3102,3,70,0)
   1. return code:
"KRN",8994,3102,3,71,0)
       -1 -RPC/API failed
"KRN",8994,3102,3,72,0)
           Required variable not defined
"KRN",8994,3102,3,73,0)
        0 -No display/action required
"KRN",8994,3102,3,74,0)
           Not accessing own, employee, or sensitive record
"KRN",8994,3102,3,75,0)
        1 -Display warning message
"KRN",8994,3102,3,76,0)
           Sensitive and DG SENSITIVITY key holder
"KRN",8994,3102,3,77,0)
           or Employee and DG SECURITY OFFICER key holder
"KRN",8994,3102,3,78,0)
        2 -Display warning message/require OK to continue
"KRN",8994,3102,3,79,0)
           Sensitive and not a DG SENSITIVITY key holder
"KRN",8994,3102,3,80,0)
           Employee and not a DG SECURITY OFFICER key holder
"KRN",8994,3102,3,81,0)
        3 -Access to record denied
"KRN",8994,3102,3,82,0)
           Accessing own record
"KRN",8994,3102,3,83,0)
        4 -Access to Patient (#2) file records denied
"KRN",8994,3102,3,84,0)
           SSN not defined
"KRN",8994,3102,3,85,0)
   2. display text/message
"KRN",8994,3102,3,86,0)
   3. display text/message
"KRN",8994,3102,3,87,0)
   4. display text/message
"KRN",8994,3102,3,88,0)
 42. LASTSUB - last subscripts of data in the return.
"KRN",8994,3102,3,89,0)
                Will only be in the last record of the return.
"KRN",8994,3102,3,90,0)
                Pass this as LASTSUB in the next call to continue
"KRN",8994,3102,3,91,0)
                collecting data.
"KRN",8994,3103,-1)
0^99
"KRN",8994,3103,0)
SDEC RECSET^RECSET^SDEC^1^R^0^^0
"KRN",8994,3103,1,0)
^^1^1^3150128^
"KRN",8994,3103,1,1,0)
SET/EDIT an entry to the RECALL REMINDERS file 403.5
"KRN",8994,3103,2,0)
^8994.02A^1^1
"KRN",8994,3103,2,1,0)
INP^4^^1^1
"KRN",8994,3103,2,1,1,0)
^^26^26^3150128^
"KRN",8994,3103,2,1,1,1,0)
INP - Input array
"KRN",8994,3103,2,1,1,2,0)
      INP(0) - (optional) IEN pointer to RECALL REMINDERS
"KRN",8994,3103,2,1,1,3,0)
                          a new entry will be added if null
"KRN",8994,3103,2,1,1,4,0)
      INP(1) - (required) DFN Pointer to PATIENT file
"KRN",8994,3103,2,1,1,5,0)
      INP(2) - (optional) Accession # (free-text 1-25 characters)
"KRN",8994,3103,2,1,1,6,0)
      INP(3) - (optional) COMMENT (free-text 1-80 characters)
"KRN",8994,3103,2,1,1,7,0)
      INP(4) - (optional) FAST/NON-FASTING valid values:
"KRN",8994,3103,2,1,1,8,0)
                            FASTING
"KRN",8994,3103,2,1,1,9,0)
                            NON-FASTING
"KRN",8994,3103,2,1,1,10,0)
      INP(5) - (required) Test/App pointer to RECALL REMINDERS APPT
"KRN",8994,3103,2,1,1,11,0)
                          TYPE file 403.51
"KRN",8994,3103,2,1,1,12,0)
      INP(6) - (required) Provider - Pointer to RECALL REMINDERS
"KRN",8994,3103,2,1,1,13,0)
                          PROVIDERS file 403.54
"KRN",8994,3103,2,1,1,14,0)
      INP(7) - (required) Clinic pointer to HOSPITAL LOCATION file
"KRN",8994,3103,2,1,1,15,0)
      INP(8) - (optional) Length of Appointment numeric
"KRN",8994,3103,2,1,1,16,0)
                          between 10 and 120
"KRN",8994,3103,2,1,1,17,0)
      INP(9) - (required) Recall Date in external format (no time)
"KRN",8994,3103,2,1,1,18,0)
      INP(10)- (optional) Recall Date (Per patient) in external format
"KRN",8994,3103,2,1,1,19,0)
                          (no time)
"KRN",8994,3103,2,1,1,20,0)
      INP(11)- (optional) Date Reminder Sent in external format
"KRN",8994,3103,2,1,1,21,0)
                          (no time)
"KRN",8994,3103,2,1,1,22,0)
      INP(12)- (optional) User Who Entered Recall pointer to
"KRN",8994,3103,2,1,1,23,0)
                          NEW PERSON file; default to current user
"KRN",8994,3103,2,1,1,24,0)
      INP(13)- (optional) Second Print Date in external format
"KRN",8994,3103,2,1,1,25,0)
                          (no time)
"KRN",8994,3103,2,1,1,26,0)
      INP(14)- (optional) DATE/TIME Recall Added in external format
"KRN",8994,3103,2,"B","INP",1)

"KRN",8994,3103,2,"PARAMSEQ",1,1)

"KRN",8994,3103,3,0)
^8994.03^11^11^3150128^^
"KRN",8994,3103,3,1,0)
 ; Successful Return:
"KRN",8994,3103,3,2,0)
 ;   Single Value return in the format "0^<Recall Reminders ien>"
"KRN",8994,3103,3,3,0)
 ; Caught Exception Return:
"KRN",8994,3103,3,4,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3103,3,5,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3103,3,6,0)
 ; Unexpected Exception Return:
"KRN",8994,3103,3,7,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3103,3,8,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3103,3,9,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3103,3,10,0)
generated
"KRN",8994,3103,3,11,0)
 ;     text back to the client.
"KRN",8994,3104,-1)
0^96
"KRN",8994,3104,0)
SDEC RECDSET^RECDSET^SDEC^1^R^0^^0
"KRN",8994,3104,1,0)
^8994.01^1^1^3150128^^^
"KRN",8994,3104,1,1,0)
DELETE an entry to the RECALL REMINDERS file 403.5
"KRN",8994,3104,2,0)
^8994.02A^3^3
"KRN",8994,3104,2,1,0)
RECALLIEN^1^^1^1
"KRN",8994,3104,2,1,1,0)
^^1^1^3140905^
"KRN",8994,3104,2,1,1,1,0)
IEN pointer to RECALL REMINDERS
"KRN",8994,3104,2,2,0)
SDRRFTR^1^^0^2
"KRN",8994,3104,2,2,1,0)
^^11^11^3141003^
"KRN",8994,3104,2,2,1,1,0)
Recall Disposition used to populate the
"KRN",8994,3104,2,2,1,2,0)
 ;                          DELETE REASON field in the RECALL REMINDERS
"KRN",8994,3104,2,2,1,3,0)
 ;                          REMOVED file 403.56 when an entry is removed
"KRN",8994,3104,2,2,1,4,0)
 ;                          from RECALL REMINDERS file. Valid Values are:
"KRN",8994,3104,2,2,1,5,0)
 ;                            FAILURE TO RESPOND
"KRN",8994,3104,2,2,1,6,0)
 ;                            MOVED
"KRN",8994,3104,2,2,1,7,0)
 ;                            DECEASED
"KRN",8994,3104,2,2,1,8,0)
 ;                            DOESN'T WANT VA SERVICES
"KRN",8994,3104,2,2,1,9,0)
 ;                            RECEIVED CARE AT ANOTHER VA
"KRN",8994,3104,2,2,1,10,0)
 ;                            OTHER
"KRN",8994,3104,2,2,1,11,0)
 ;                            APPT SCHEDULED
"KRN",8994,3104,2,3,0)
SDCOMM^1^^0^3
"KRN",8994,3104,2,3,1,0)
^^3^3^3150128^
"KRN",8994,3104,2,3,1,1,0)
Text to replace the text in the COMMENT field 2.5 in RECALL REMINDERS 
"KRN",8994,3104,2,3,1,2,0)
prior to the delete which moves teh data including this comment to RECALL 
"KRN",8994,3104,2,3,1,3,0)
REMINDERS REMOVED.
"KRN",8994,3104,2,"B","RECALLIEN",1)

"KRN",8994,3104,2,"B","SDCOMM",3)

"KRN",8994,3104,2,"B","SDRRFTR",2)

"KRN",8994,3104,2,"PARAMSEQ",1,1)

"KRN",8994,3104,2,"PARAMSEQ",2,2)

"KRN",8994,3104,2,"PARAMSEQ",3,3)

"KRN",8994,3104,3,0)
^8994.03^11^11^3150128^^^
"KRN",8994,3104,3,1,0)
 ; Successful Return:
"KRN",8994,3104,3,2,0)
 ;   Single Value return in the format "0^<Recall Reminders ien>"
"KRN",8994,3104,3,3,0)
 ; Caught Exception Return:
"KRN",8994,3104,3,4,0)
 ;   Single Value return in the format "-1^<error text>"
"KRN",8994,3104,3,5,0)
 ;   "T00020ERRORID^T00100ERRORTEXT"
"KRN",8994,3104,3,6,0)
 ; Unexpected Exception Return:
"KRN",8994,3104,3,7,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3104,3,8,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3104,3,9,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3104,3,10,0)
generated
"KRN",8994,3104,3,11,0)
 ;     text back to the client.
"KRN",8994,3105,-1)
0^95
"KRN",8994,3105,0)
SDEC RECAPGET^RECAPGET^SDEC^4^R^0^^0
"KRN",8994,3105,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3105,1,1,0)
GET entries from the RECALL REMINDERS APPT TYPE file 403.51
"KRN",8994,3105,3,0)
^8994.03^15^15^3150128^^
"KRN",8994,3105,3,1,0)
 ; Successful Return:
"KRN",8994,3105,3,2,0)
 ;   Global Array in which each array entry contains Recall Reminders Appt
"KRN",8994,3105,3,3,0)
 ;   type names from the RECALL REMINDERS APPT TYPE file 403.51
"KRN",8994,3105,3,4,0)
 ;    Data is separated by ^:
"KRN",8994,3105,3,5,0)
 ;      1. RECALL REMINDERS APPT TYPE ien
"KRN",8994,3105,3,6,0)
 ;      2. RECALL REMINDERS APPT TYPE name
"KRN",8994,3105,3,7,0)
 ; Caught Exception Return:
"KRN",8994,3105,3,8,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3105,3,9,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3105,3,10,0)
 ; Unexpected Exception Return:
"KRN",8994,3105,3,11,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3105,3,12,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3105,3,13,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3105,3,14,0)
generated
"KRN",8994,3105,3,15,0)
 ;     text back to the client.
"KRN",8994,3106,-1)
0^98
"KRN",8994,3106,0)
SDEC RECPRGET^RECPRGET^SDEC^4^R^0^^0
"KRN",8994,3106,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3106,1,1,0)
GET entries from the RECALL REMINDERS PROVIDERS file 403.54
"KRN",8994,3106,3,0)
^8994.03^27^27^3150128^^
"KRN",8994,3106,3,1,0)
 ; Successful Return:
"KRN",8994,3106,3,2,0)
 ;   Global Array in which each array entry contains data from RECALL 
"KRN",8994,3106,3,3,0)
REMINDERS PROVIDERS file 403.54.
"KRN",8994,3106,3,4,0)
 ;   Data is separated by ^:
"KRN",8994,3106,3,5,0)
 ;     1. IEN - Pointer to RECALL REMINDERS PROVIDERS file
"KRN",8994,3106,3,6,0)
 ;     2. Provider IEN - Pointer to NEW PERSON file
"KRN",8994,3106,3,7,0)
 ;     3. Provider Name - NAME from NEW PERSON file
"KRN",8994,3106,3,8,0)
 ;     4. Team ID - Pointer to RECALL REMINDERS TEAM file 403.55
"KRN",8994,3106,3,9,0)
 ;     5. Team Name - NAME from RECALL REMINDERS TEAM file 403.55
"KRN",8994,3106,3,10,0)
 ;     6. Division ID - Pointer to MEDICAL CENTER DIVISION file 40.8
"KRN",8994,3106,3,11,0)
 ;     7. Division Name - NAME from MEDICAL CENTER DIVISION file 40.8
"KRN",8994,3106,3,12,0)
 ;     8. Direct Phone - Free-Text 7-14 Characters
"KRN",8994,3106,3,13,0)
 ;     9. EXT. - Free-Text 4-20 characters
"KRN",8994,3106,3,14,0)
 ;    10. Status - Valid values are:
"KRN",8994,3106,3,15,0)
 ;                 ACTIVE
"KRN",8994,3106,3,16,0)
 ;                 INACTIVE
"KRN",8994,3106,3,17,0)
 ;    11. Security Key ID - Pointer to SECURITY KEY file 19.1
"KRN",8994,3106,3,18,0)
 ;    12. Security Key Name - NAME from SECURITY KEY file 19.1
"KRN",8994,3106,3,19,0)
 ; Caught Exception Return:
"KRN",8994,3106,3,20,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3106,3,21,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3106,3,22,0)
 ; Unexpected Exception Return:
"KRN",8994,3106,3,23,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3106,3,24,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3106,3,25,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3106,3,26,0)
generated
"KRN",8994,3106,3,27,0)
 ;     text back to the client.
"KRN",8994,3107,-1)
0^100
"KRN",8994,3107,0)
SDEC PCSTGET^PCSTGET^SDEC^4^R^0^^0
"KRN",8994,3107,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3107,1,1,0)
GET patient clinic status for a clinic stop for a given time frame - has 
"KRN",8994,3107,1,2,0)
the patient been seen by the given Clinic Stop code in the past 24 months
"KRN",8994,3107,2,0)
^8994.02A^4^4
"KRN",8994,3107,2,1,0)
DFN^1^^1^1
"KRN",8994,3107,2,1,1,0)
^^1^1^3140911^
"KRN",8994,3107,2,1,1,1,0)
(required) Patient ID - Pointer to the PATIENT file 2
"KRN",8994,3107,2,2,0)
SDCL^1^^1^2
"KRN",8994,3107,2,2,1,0)
^^1^1^3140911^
"KRN",8994,3107,2,2,1,1,0)
(required) Clinic code - Pointer to HOSPITAL LOCATION file
"KRN",8994,3107,2,3,0)
SDBEG^1^^0^3
"KRN",8994,3107,2,3,1,0)
^^2^2^3140911^
"KRN",8994,3107,2,3,1,1,0)
(optional)  Begin date in external format; defaults to 730 days previous 
"KRN",8994,3107,2,3,1,2,0)
(24 months)
"KRN",8994,3107,2,4,0)
SDEND^1^^0^4
"KRN",8994,3107,2,4,1,0)
^8994.021^1^1^3150128^^
"KRN",8994,3107,2,4,1,1,0)
(optional)  End date in external format; defaults to today
"KRN",8994,3107,2,"B","DFN",1)

"KRN",8994,3107,2,"B","SDBEG",3)

"KRN",8994,3107,2,"B","SDCL",2)

"KRN",8994,3107,2,"B","SDEND",4)

"KRN",8994,3107,2,"PARAMSEQ",1,1)

"KRN",8994,3107,2,"PARAMSEQ",2,2)

"KRN",8994,3107,2,"PARAMSEQ",3,3)

"KRN",8994,3107,2,"PARAMSEQ",4,4)

"KRN",8994,3107,3,0)
^8994.03^12^12^3150128^^
"KRN",8994,3107,3,1,0)
 ;   a single entry in the global array indicating that patient has or has
"KRN",8994,3107,3,2,0)
 ;   not been seen.
"KRN",8994,3107,3,3,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3107,3,4,0)
 ; Caught Exception Return:
"KRN",8994,3107,3,5,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3107,3,6,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3107,3,7,0)
 ; Unexpected Exception Return:
"KRN",8994,3107,3,8,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3107,3,9,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3107,3,10,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3107,3,11,0)
generated
"KRN",8994,3107,3,12,0)
 ;     text back to the client.
"KRN",8994,3108,-1)
0^101
"KRN",8994,3108,0)
SDEC PCST2GET^PCST2GET^SDEC^4^R^0^^0
"KRN",8994,3108,1,0)
^8994.01^3^3^3150128^^^
"KRN",8994,3108,1,1,0)
GET patient clinic status for a service/specialty (clinic stop) for a 
"KRN",8994,3108,1,2,0)
given time frame - has the patient been seen any clinics with the given 
"KRN",8994,3108,1,3,0)
service/specialty (clinic stop) in the past 24 months.
"KRN",8994,3108,2,0)
^8994.02A^4^4
"KRN",8994,3108,2,1,0)
DFN^1^^1^1
"KRN",8994,3108,2,1,1,0)
^^1^1^3140930^
"KRN",8994,3108,2,1,1,1,0)
Patient ID - Pointer to the PATIENT file 2
"KRN",8994,3108,2,2,0)
SDSVSP^1^^1^2
"KRN",8994,3108,2,2,1,0)
^^3^3^3140930^
"KRN",8994,3108,2,2,1,1,0)
Service/Specialty name - NAME from the SD WL SERVICE/SPECIALTY file - 
"KRN",8994,3108,2,2,1,2,0)
looks for 1st active
"KRN",8994,3108,2,2,1,3,0)
 OR - Pointer to the SD WL SERVICE/SPECIALTY file
"KRN",8994,3108,2,3,0)
SDBEG^1^^0^3
"KRN",8994,3108,2,3,1,0)
^^1^1^3140930^
"KRN",8994,3108,2,3,1,1,0)
Begin date in external format; defaults to 730 days previous (24 months)
"KRN",8994,3108,2,4,0)
SDEND^1^^0^4
"KRN",8994,3108,2,4,1,0)
^8994.021^1^1^3150128^^^
"KRN",8994,3108,2,4,1,1,0)
End date in external format; defaults to today
"KRN",8994,3108,2,"B","DFN",1)

"KRN",8994,3108,2,"B","SDBEG",3)

"KRN",8994,3108,2,"B","SDEND",4)

"KRN",8994,3108,2,"B","SDSVSP",2)

"KRN",8994,3108,2,"PARAMSEQ",1,1)

"KRN",8994,3108,2,"PARAMSEQ",2,2)

"KRN",8994,3108,2,"PARAMSEQ",3,3)

"KRN",8994,3108,2,"PARAMSEQ",4,4)

"KRN",8994,3108,3,0)
^8994.03^13^13^3150128^^^
"KRN",8994,3108,3,1,0)
; Successful Return:
"KRN",8994,3108,3,2,0)
 ;   a single entry in the global array indicating that patient has or has
"KRN",8994,3108,3,3,0)
 ;   not been seen.
"KRN",8994,3108,3,4,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3108,3,5,0)
 ; Caught Exception Return:
"KRN",8994,3108,3,6,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3108,3,7,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3108,3,8,0)
 ; Unexpected Exception Return:
"KRN",8994,3108,3,9,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3108,3,10,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3108,3,11,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3108,3,12,0)
generated
"KRN",8994,3108,3,13,0)
 ;     text back to the client.
"KRN",8994,3109,-1)
0^102
"KRN",8994,3109,0)
SDEC PCSGET^PCSGET^SDEC^4^R^0^^0
"KRN",8994,3109,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3109,1,1,0)
GET clinics for a service/specialty (clinic stop)
"KRN",8994,3109,2,0)
^8994.02A^1^1
"KRN",8994,3109,2,1,0)
SDSVSP^1^^1^1
"KRN",8994,3109,2,1,1,0)
^8994.021^3^3^3150128^^
"KRN",8994,3109,2,1,1,1,0)
Service/Specialty name - NAME from the SD WL SERVICE/SPECIALTY file
"KRN",8994,3109,2,1,1,2,0)
                         - looks for 1st active
"KRN",8994,3109,2,1,1,3,0)
                         OR - Pointer to the SD WL SERVICE/SPECIALTY file
"KRN",8994,3109,2,"B","SDSVSP",1)

"KRN",8994,3109,2,"PARAMSEQ",1,1)

"KRN",8994,3109,3,0)
^8994.03^15^15^3150128^^
"KRN",8994,3109,3,1,0)
; Successful Return:
"KRN",8994,3109,3,2,0)
 ;   global array containing Clinic IEN and Name of matching Hospital 
"KRN",8994,3109,3,3,0)
Locations
"KRN",8994,3109,3,4,0)
 ;   CLINSTOP  - pointer to CLINIC STOP file 40.7
"KRN",8994,3109,3,5,0)
 ;   CLINIEN   - pointer to the HOSPITAL LOCATION file 44
"KRN",8994,3109,3,6,0)
 ;   CLINNAME  - NAME from the HOSPITAL LOCATION file
"KRN",8994,3109,3,7,0)
 ; Caught Exception Return:
"KRN",8994,3109,3,8,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3109,3,9,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3109,3,10,0)
 ; Unexpected Exception Return:
"KRN",8994,3109,3,11,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3109,3,12,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3109,3,13,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3109,3,14,0)
generated
"KRN",8994,3109,3,15,0)
 ;     text back to the client.
"KRN",8994,3110,-1)
0^103
"KRN",8994,3110,0)
SDEC PTSET^PTSET^SDEC^4^R^0^^0
"KRN",8994,3110,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3110,1,1,0)
SET patient demographics
"KRN",8994,3110,2,0)
^8994.02A^1^1
"KRN",8994,3110,2,1,0)
INP^4^^1^1
"KRN",8994,3110,2,1,1,0)
^^25^25^3150128^
"KRN",8994,3110,2,1,1,1,0)
all input except DFN is optional
"KRN",8994,3110,2,1,1,2,0)
   INP(1) = DFN - (required) pointer to PATIENT file
"KRN",8994,3110,2,1,1,3,0)
   INP(2) = RACE - pointer to the RACE file 10
"KRN",8994,3110,2,1,1,4,0)
   INP(3) = ETHNICITY - multiple Ethnicity separated by pipe |
"KRN",8994,3110,2,1,1,5,0)
            Each pipe piece contains the following ;; pieces:
"KRN",8994,3110,2,1,1,6,0)
           ETHNICITY INFORMATION - pointer to the ETHNICITY file 10.2
"KRN",8994,3110,2,1,1,7,0)
           METHOD OF COLLECTION - pointer to the ETHNICITY COLLECTION
"KRN",8994,3110,2,1,1,8,0)
                                  METHOD file 10.3
"KRN",8994,3110,2,1,1,9,0)
   INP(4) = ADDRESS1 - Street Address (Line 1) Free text 3-30
"KRN",8994,3110,2,1,1,10,0)
                       characters
"KRN",8994,3110,2,1,1,11,0)
   INP(5) = ADDRESS2 - Street Address (Line 2) Free text 3-30
"KRN",8994,3110,2,1,1,12,0)
                       characters
"KRN",8994,3110,2,1,1,13,0)
   INP(6) = ADDRESS3 - Street Address (Line 3) Free text 3-30
"KRN",8994,3110,2,1,1,14,0)
                       characters
"KRN",8994,3110,2,1,1,15,0)
   INP(7) = ZIP CODE - Zip+4 Free text of 5 or 9 digits
"KRN",8994,3110,2,1,1,16,0)
   INP(8) = CITY - Free text 2-15 characters
"KRN",8994,3110,2,1,1,17,0)
   INP(9) = STATE - pointer to STATE file 5
"KRN",8994,3110,2,1,1,18,0)
   INP(10) = COUNTRY - pointer to COUNTRY CODE file 779.004
"KRN",8994,3110,2,1,1,19,0)
   INP(11) = BAD ADDRESS INDICATOR - Valid Values:
"KRN",8994,3110,2,1,1,20,0)
              UNDELIVERABLE
"KRN",8994,3110,2,1,1,21,0)
              HOMELESS
"KRN",8994,3110,2,1,1,22,0)
              OTHER
"KRN",8994,3110,2,1,1,23,0)
              ADDRESS NOT FOUND
"KRN",8994,3110,2,1,1,24,0)
   INP(12) = PHONE (RESIDENCE) - free text 4-20 characters
"KRN",8994,3110,2,1,1,25,0)
   INP(13) = PHONE (WORK) - free text 4-20 characters
"KRN",8994,3110,2,"B","INP",1)

"KRN",8994,3110,2,"PARAMSEQ",1,1)

"KRN",8994,3110,3,0)
^8994.03^11^11^3150128^^
"KRN",8994,3110,3,1,0)
 ; Successful Return:
"KRN",8994,3110,3,2,0)
 ;   Single Value return in the format "0^"
"KRN",8994,3110,3,3,0)
 ; Caught Exception Return:
"KRN",8994,3110,3,4,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3110,3,5,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3110,3,6,0)
 ; Unexpected Exception Return:
"KRN",8994,3110,3,7,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3110,3,8,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3110,3,9,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3110,3,10,0)
generated
"KRN",8994,3110,3,11,0)
 ;     text back to the client.
"KRN",8994,3111,-1)
0^105
"KRN",8994,3111,0)
SDEC PTINQ^PTINQ^SDEC^4^R^0^^0
"KRN",8994,3111,1,0)
^8994.01^1^1^3150128^^^
"KRN",8994,3111,1,1,0)
Return the data from ORWPT PTINQ in datatable format
"KRN",8994,3111,2,0)
^8994.02A^1^1
"KRN",8994,3111,2,1,0)
DFN^1^^1^1
"KRN",8994,3111,2,1,1,0)
^8994.021^2^2^3150128^^^
"KRN",8994,3111,2,1,1,1,0)
 (integer) Patient ID - Pointer to the PATIENT file 2  (lookup by name is
"KRN",8994,3111,2,1,1,2,0)
 not accurate if duplicates)
"KRN",8994,3111,2,"B","DFN",1)

"KRN",8994,3111,2,"PARAMSEQ",1,1)

"KRN",8994,3111,3,0)
^8994.03^5^5^3150128^^^
"KRN",8994,3111,3,1,0)
 Successful Return:
"KRN",8994,3111,3,2,0)
   Global Array in which each array entry contains patient data:
"KRN",8994,3111,3,3,0)
   "T00250PATIENT_INFO"
"KRN",8994,3111,3,4,0)
 Unexpected Exception Return:
"KRN",8994,3111,3,5,0)
   Handled by RPC Broker
"KRN",8994,3112,-1)
0^104
"KRN",8994,3112,0)
SDEC SUMMGET^SUMMGET^SDEC^4^R^0^^0
"KRN",8994,3112,1,0)
^^1^1^3150128^
"KRN",8994,3112,1,1,0)
GET Audit Summary for given date range
"KRN",8994,3112,2,0)
^8994.02A^3^3
"KRN",8994,3112,2,1,0)
SDBEG^1^^0^1
"KRN",8994,3112,2,1,1,0)
^^1^1^3141006^
"KRN",8994,3112,2,1,1,1,0)
Begin Date in external form; default to all dates
"KRN",8994,3112,2,2,0)
SDEND^1^^0^2
"KRN",8994,3112,2,2,1,0)
^^1^1^3141006^
"KRN",8994,3112,2,2,1,1,0)
End Date in external form; default to all dates
"KRN",8994,3112,2,3,0)
USER^1^^0^3
"KRN",8994,3112,2,3,1,0)
^^2^2^3150128^
"KRN",8994,3112,2,3,1,1,0)
User ID pointer to NEW PERSON file 200
"KRN",8994,3112,2,3,1,2,0)
Used to filter by user
"KRN",8994,3112,2,"B","SDBEG",1)

"KRN",8994,3112,2,"B","SDEND",2)

"KRN",8994,3112,2,"B","USER",3)

"KRN",8994,3112,2,"PARAMSEQ",1,1)

"KRN",8994,3112,2,"PARAMSEQ",2,2)

"KRN",8994,3112,2,"PARAMSEQ",3,3)

"KRN",8994,3112,3,0)
^^45^45^3150128^
"KRN",8994,3112,3,1,0)
Global Array in which each array entry contains
"KRN",8994,3112,3,2,0)
                     summary date separated by ^:
"KRN",8994,3112,3,3,0)
    1. REQUESTTYPE - Valid Values:
"KRN",8994,3112,3,4,0)
         EWL
"KRN",8994,3112,3,5,0)
         RECALL
"KRN",8994,3112,3,6,0)
         CONSULT
"KRN",8994,3112,3,7,0)
    2. DFN - Pointer to PATIENT file 2
"KRN",8994,3112,3,8,0)
    3. NAME - Patient name from NAME field of PATIENT file
"KRN",8994,3112,3,9,0)
    4. DATE - Start Date in external format:
"KRN",8994,3112,3,10,0)
               ORIGINATING DATE if EWL
"KRN",8994,3112,3,11,0)
               DATE/TIME RECALL ADDED if RECALL
"KRN",8994,3112,3,12,0)
    5. USERIEN - pointer to NEW PERSON file 200
"KRN",8994,3112,3,13,0)
    6. USERNAME - NAME from NEW PERSON file
"KRN",8994,3112,3,14,0)
               ORIGINATING USER if EWL
"KRN",8994,3112,3,15,0)
               USER WHO ENTERED RECALL if Recall
"KRN",8994,3112,3,16,0)
    7. DATE1 - date in external format
"KRN",8994,3112,3,17,0)
               EWL DATE DISPOSITIONED
"KRN",8994,3112,3,18,0)
    8. PROVIEN - pointer to NEW PERSON file 200
"KRN",8994,3112,3,19,0)
               EWL USER DISPOSITIONED
"KRN",8994,3112,3,20,0)
    9. PROVNAME - NAME from NEW PERSION file
"KRN",8994,3112,3,21,0)
               EWL USER DISPOSITIONED
"KRN",8994,3112,3,22,0)
   10. PCONTACT - EWL - Patient Contact
"KRN",8994,3112,3,23,0)
      PATIENT CONTACT pieced by :: where each :: piece contains the
"KRN",8994,3112,3,24,0)
      following ~~ pieces:
"KRN",8994,3112,3,25,0)
       1. DATE ENTERED external date/time
"KRN",8994,3112,3,26,0)
       2. PC ENTERED BY USER IEN Pointer to NEW PERSON file
"KRN",8994,3112,3,27,0)
       3. PC ENTERED BY USER NAME NAME from NEW PERSION file
"KRN",8994,3112,3,28,0)
       4. ACTION C=Called; M=Message Left
"KRN",8994,3112,3,29,0)
   11. APPT_SCHED_DATE - [NOT USED]
"KRN",8994,3112,3,30,0)
   12. DATE2 - RECALL - Contains 4 pipe | pieces:
"KRN",8994,3112,3,31,0)
       1. APPT DATE - Date/Time in external format
"KRN",8994,3112,3,32,0)
       2. DELETE DATE in external format - represents CANCEL
"KRN",8994,3112,3,33,0)
       3. DELETE CLERK ien
"KRN",8994,3112,3,34,0)
       4. DELETE CLERK name
"KRN",8994,3112,3,35,0)
   13. CLINIEN - Clinic pointer to the HOSPITAL LOCATION file 44
"KRN",8994,3112,3,36,0)
   14. CLINNAME - Clinic NAME from the HOSPITAL LOCATION file
"KRN",8994,3112,3,37,0)
   15. ACTIVITY - CONSULT Activity list separated by pipe |
"KRN",8994,3112,3,38,0)
        Only Activities of SCHEDULED and CANCELED are included
"KRN",8994,3112,3,39,0)
      Each pipe piece contains the following ;; pieces:
"KRN",8994,3112,3,40,0)
      1. REQUEST/CONSULT ien
"KRN",8994,3112,3,41,0)
      2. pointer to REQUEST PROCESING ACTIVITY multiple
"KRN",8994,3112,3,42,0)
      3. Date/time of Action Entry in external format
"KRN",8994,3112,3,43,0)
      4. ACTIVITY
"KRN",8994,3112,3,44,0)
      5. WHO ENTERED ACTIVITY ien - Pointer to NEW PERSON file
"KRN",8994,3112,3,45,0)
      6. WHO ENTERED ACTIVITY Name - NAME from NEW PERSON file
"KRN",8994,3113,-1)
0^106
"KRN",8994,3113,0)
SDEC SUMMAGET^SUMMAGET^SDEC^4^R^0^^0
"KRN",8994,3113,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3113,1,1,0)
get ALL appointments with a cancel status from SDEC APPOINTMENT for given 
"KRN",8994,3113,1,2,0)
date range and user
"KRN",8994,3113,2,0)
^8994.02A^3^3
"KRN",8994,3113,2,1,0)
SDBEG^1^^0^1
"KRN",8994,3113,2,1,1,0)
^^1^1^3141009^
"KRN",8994,3113,2,1,1,1,0)
Filter Begin Date in external form; default to all dates
"KRN",8994,3113,2,2,0)
SDEND^1^^0^2
"KRN",8994,3113,2,2,1,0)
^^1^1^3141009^
"KRN",8994,3113,2,2,1,1,0)
Filter End Date in external form; default to all dates
"KRN",8994,3113,2,3,0)
USER^1^^0^3
"KRN",8994,3113,2,3,1,0)
^8994.021^1^1^3150128^^
"KRN",8994,3113,2,3,1,1,0)
pointer to new person file - used to filter by user
"KRN",8994,3113,2,"B","SDBEG",1)

"KRN",8994,3113,2,"B","SDEND",2)

"KRN",8994,3113,2,"B","USER",3)

"KRN",8994,3113,2,"PARAMSEQ",1,1)

"KRN",8994,3113,2,"PARAMSEQ",2,2)

"KRN",8994,3113,2,"PARAMSEQ",3,3)

"KRN",8994,3113,3,0)
^8994.03^32^32^3150128^^
"KRN",8994,3113,3,1,0)
  Successful Return: ; global array in which each array entry contains 
"KRN",8994,3113,3,2,0)
data from the SDEC APPOINTMENT file
"KRN",8994,3113,3,3,0)
  each entry contains the following ^ pieces:
"KRN",8994,3113,3,4,0)
    1. APPT - Pointer to SDEC APPOINTMENT file
"KRN",8994,3113,3,5,0)
    2. DATE - Appointment Start time in external format from
"KRN",8994,3113,3,6,0)
              STARTTIME field of SDEC APPOINTMENT file
"KRN",8994,3113,3,7,0)
    3. IEN - patient pointer to PATIENT file
"KRN",8994,3113,3,8,0)
    4. NAME - patient name from PATIENT file
"KRN",8994,3113,3,9,0)
    5. CLINIEN - Clinic pointer to HOSPITAL LOCATION file
"KRN",8994,3113,3,10,0)
    6. CLINNAME - Clinic name from HOSPITAL LOCATION file
"KRN",8994,3113,3,11,0)
    7. DATE1 - Cancel Date/Time in external format from
"KRN",8994,3113,3,12,0)
               CANCEL DATETIME field
"KRN",8994,3113,3,13,0)
    8. USERIEN - DATA ENTRY CLERK ien pointer to NEW PERSON file
"KRN",8994,3113,3,14,0)
    9. USERNAME - DATA ENTRY CLERK name from NEW PERSON file
"KRN",8994,3113,3,15,0)
   10. PROVIEN - Provider ien from PROVIDER field pointer to
"KRN",8994,3113,3,16,0)
                 NEW PERSON file
"KRN",8994,3113,3,17,0)
   11. PROVNAME - provider name of PROVIDER from NEW PERSON file
"KRN",8994,3113,3,18,0)
   12. STATUS - text from STATUS field valid values are:
"KRN",8994,3113,3,19,0)
                CANCELLED BY CLINIC & AUTO RE-BOOK
"KRN",8994,3113,3,20,0)
                CANCELLED BY PATIENT
"KRN",8994,3113,3,21,0)
                CANCELLED BY PATIENT & AUTO-REBOOK
"KRN",8994,3113,3,22,0)
 
"KRN",8994,3113,3,23,0)
Caught Exception Return:
"KRN",8994,3113,3,24,0)
  A single entry in the Global Array in the format
"KRN",8994,3113,3,25,0)
    "-1^<error text>"
"KRN",8994,3113,3,26,0)
  "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3113,3,27,0)
Unexpected Exception Return:
"KRN",8994,3113,3,28,0)
  Handled by the RPC Broker.
"KRN",8994,3113,3,29,0)
  M errors are trapped by the use of M and Kernel error
"KRN",8994,3113,3,30,0)
  handling.
"KRN",8994,3113,3,31,0)
  The RPC execution stops and the RPC Broker sends the error
"KRN",8994,3113,3,32,0)
generated text back to the client.
"KRN",8994,3114,-1)
0^114
"KRN",8994,3114,0)
SDEC FACLIST^FACLIST^SDEC^4^R^0^^0
"KRN",8994,3114,1,0)
^8994.01^1^1^3141209^^
"KRN",8994,3114,1,1,0)
Return list of remote facilities for patient
"KRN",8994,3115,-1)
0^113
"KRN",8994,3115,0)
SDEC APPIDGET^APPIDGET^SDEC^4^R^0^^0
"KRN",8994,3115,1,0)
^8994.01^1^1^3150127^^^
"KRN",8994,3115,1,1,0)
GET SDEC APPOINTMENT ien for given External ID
"KRN",8994,3115,2,0)
^8994.02A^1^1
"KRN",8994,3115,2,1,0)
SDID^1^^1^1
"KRN",8994,3115,2,1,1,0)
^8994.021^1^1^3150127^^^
"KRN",8994,3115,2,1,1,1,0)
Free-Text - External ID from EXTERNAL ID field in SDEC APPOINTMENT
"KRN",8994,3115,2,"B","SDID",1)

"KRN",8994,3115,2,"PARAMSEQ",1,1)

"KRN",8994,3115,3,0)
^8994.03^13^13^3150127^^^
"KRN",8994,3115,3,1,0)
 ; Successful Return: Global Array in which each array entry contains an 
"KRN",8994,3115,3,2,0)
appointment ID:
"KRN",8994,3115,3,3,0)
 ;  1. SDECAPTID - appointment ID pointer to SDEC APPOINTMENT
"KRN",8994,3115,3,4,0)
 ;
"KRN",8994,3115,3,5,0)
 ; Caught Exception Return:
"KRN",8994,3115,3,6,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3115,3,7,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3115,3,8,0)
 ; Unexpected Exception Return:
"KRN",8994,3115,3,9,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3115,3,10,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3115,3,11,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3115,3,12,0)
generated
"KRN",8994,3115,3,13,0)
 ;     text back to the client.
"KRN",8994,3116,-1)
0^107
"KRN",8994,3116,0)
SDEC ETHGET^ETHGET^SDEC^4^R^0^^0
"KRN",8994,3116,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3116,1,1,0)
Return all active entries from the ETHNICITY file 10.2.
"KRN",8994,3116,3,0)
^8994.03^13^13^3150128^^
"KRN",8994,3116,3,1,0)
 ; Successful Return: Global Array in which each array entry
"KRN",8994,3116,3,2,0)
 ; contains an ethinicity IEN, name, and abbreviation
"KRN",8994,3116,3,3,0)
 ; from the ETHNICITY file 10.2:
"KRN",8994,3116,3,4,0)
 ;    ETHNICITY ^ ETHNICITYNAME ^ ETHNICITYABBR
"KRN",8994,3116,3,5,0)
 ; Caught Exception Return:
"KRN",8994,3116,3,6,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3116,3,7,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3116,3,8,0)
 ; Unexpected Exception Return:
"KRN",8994,3116,3,9,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3116,3,10,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3116,3,11,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3116,3,12,0)
generated
"KRN",8994,3116,3,13,0)
 ;     text back to the client.
"KRN",8994,3117,-1)
0^108
"KRN",8994,3117,0)
SDEC CGET^CGET^SDEC^4^R^0^^0
"KRN",8994,3117,1,0)
^8994.01^1^1^3150127^^
"KRN",8994,3117,1,1,0)
GET active Countries from the COUNTRY CODE file 779.004
"KRN",8994,3117,3,0)
^8994.03^13^13^3150127^^
"KRN",8994,3117,3,1,0)
 ; Successful Return: Global Array in which each array entry
"KRN",8994,3117,3,2,0)
 ; contains a Country code IEN, name, and abbreviation
"KRN",8994,3117,3,3,0)
 ; from the COUNTRY CODE file 779.004:
"KRN",8994,3117,3,4,0)
 ;    COUNTRY ^ COUNTRYNAME ^ COUNTRYABBR
"KRN",8994,3117,3,5,0)
 ; Caught Exception Return:
"KRN",8994,3117,3,6,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3117,3,7,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3117,3,8,0)
 ; Unexpected Exception Return:
"KRN",8994,3117,3,9,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3117,3,10,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3117,3,11,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3117,3,12,0)
generated
"KRN",8994,3117,3,13,0)
 ;     text back to the client.
"KRN",8994,3118,-1)
0^109
"KRN",8994,3118,0)
SDEC ETHCMGET^ETHCMGET^SDEC^4^R^0^^0
"KRN",8994,3118,1,0)
^8994.01^2^2^3150128^^^
"KRN",8994,3118,1,1,0)
Return the ID, Name, and Abbreviation for each entry in the RACE AND 
"KRN",8994,3118,1,2,0)
ETHNICITY COLLECTION METHOD file 10.3.
"KRN",8994,3118,3,0)
^8994.03^13^13^3150128^^
"KRN",8994,3118,3,1,0)
 ; Successful Return: Global Array in which each array entry
"KRN",8994,3118,3,2,0)
 ; contains an IEN, name, and abbreviation
"KRN",8994,3118,3,3,0)
 ; from file 10.3:
"KRN",8994,3118,3,4,0)
 ;    IEN ^ NAME ^ ABBR
"KRN",8994,3118,3,5,0)
 ; Caught Exception Return:
"KRN",8994,3118,3,6,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3118,3,7,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3118,3,8,0)
 ; Unexpected Exception Return:
"KRN",8994,3118,3,9,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3118,3,10,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3118,3,11,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3118,3,12,0)
generated
"KRN",8994,3118,3,13,0)
 ;     text back to the client.
"KRN",8994,3119,-1)
0^110
"KRN",8994,3119,0)
SDEC RACEGET^RACEGET^SDEC^4^R^0^^0
"KRN",8994,3119,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3119,1,1,0)
Return the IEN, Name, and Abbreviation for all
"KRN",8994,3119,1,2,0)
active entries in the RACE file 10
"KRN",8994,3119,3,0)
^8994.03^13^13^3150128^^
"KRN",8994,3119,3,1,0)
 ; Successful Return: Global Array in which each array entry
"KRN",8994,3119,3,2,0)
 ; contains a race IEN, name, and abbreviation
"KRN",8994,3119,3,3,0)
 ; from the RACE file 10:
"KRN",8994,3119,3,4,0)
 ;    RACEIEN ^ RACENAME ^ RACEABBR
"KRN",8994,3119,3,5,0)
 ; Caught Exception Return:
"KRN",8994,3119,3,6,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3119,3,7,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3119,3,8,0)
 ; Unexpected Exception Return:
"KRN",8994,3119,3,9,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3119,3,10,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3119,3,11,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3119,3,12,0)
generated
"KRN",8994,3119,3,13,0)
 ;     text back to the client.
"KRN",8994,3120,-1)
0^111
"KRN",8994,3120,0)
SDEC REP1GET^REP1GET^SDEC^4^R^0^^0
"KRN",8994,3120,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3120,1,1,0)
GET clinic data for report.
"KRN",8994,3120,3,0)
^^54^54^3150128^
"KRN",8994,3120,3,1,0)
Global Array in which each array
"KRN",8994,3120,3,2,0)
                  entry contains an clinic data separated by ^: 
"KRN",8994,3120,3,3,0)
  1. CLINIEN - clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3120,3,4,0)
  2. CLINNAME - clinic NAME from HOSPITAL LOCATION file 44
"KRN",8994,3120,3,5,0)
  3. TYPE - clinic type - only valid value is 'CLINIC'
"KRN",8994,3120,3,6,0)
  4. INSTIEN - institution ID pointer to INSTITUTION file
"KRN",8994,3120,3,7,0)
  5. INSTNAME - institution NAME from INSTITUTION file
"KRN",8994,3120,3,8,0)
  6. DIVIEN - division ID pointer to MEDICAL CENTER DIVISION
"KRN",8994,3120,3,9,0)
              file 40.8
"KRN",8994,3120,3,10,0)
  7. DIVNAME - division NAME from MEDICAL CENTER DIVISIOn file
"KRN",8994,3120,3,11,0)
  8. STOP_CODE_ID - stop code ID pointer to CLINIC STOP file 40.7
"KRN",8994,3120,3,12,0)
  9. STOP_CODE_NUMBER - stop code number
"KRN",8994,3120,3,13,0)
  10. SERVICE - service assigned - valid values:
"KRN",8994,3120,3,14,0)
      MEDICINE
"KRN",8994,3120,3,15,0)
      SURGERY
"KRN",8994,3120,3,16,0)
      PSYCHIATRY
"KRN",8994,3120,3,17,0)
      REHAB MEDICINE
"KRN",8994,3120,3,18,0)
      NEUROLOGY
"KRN",8994,3120,3,19,0)
      NONE
"KRN",8994,3120,3,20,0)
  11. TREATSPECID - treating specialty ID pointer to
"KRN",8994,3120,3,21,0)
                    FACILITY TREATING SPECIALTY file 45.7
"KRN",8994,3120,3,22,0)
  12. TREATSPECNAME - treating specialty NAME from
"KRN",8994,3120,3,23,0)
                    FACILITY TREATING SPECIALTY file
"KRN",8994,3120,3,24,0)
  13. PROVIEN - default provider ID pointer to NEW PERSON file 200
"KRN",8994,3120,3,25,0)
  14. PROVNAME - default provider NAME from NEW PERSON file
"KRN",8994,3120,3,26,0)
  15. AGENCYID - agency ID pointer to AGENCY file 4.11
"KRN",8994,3120,3,27,0)
  16. AGENCYNAME - agency NAME from AGENCY file
"KRN",8994,3120,3,28,0)
  17. APPTLEN - length of app't numeric 10-240 and
"KRN",8994,3120,3,29,0)
                multiple of 10 or 15
"KRN",8994,3120,3,30,0)
  18. VAPPTLEN - variable appointment length 'V' means
"KRN",8994,3120,3,31,0)
                 "YES, VARIABLE LENGTH"; otherwise null
"KRN",8994,3120,3,32,0)
  19. PROHIBITACC - prohibit access to clinic? 'YES' or null
"KRN",8994,3120,3,33,0)
  20. NON-COUNT - non-count clinic? 'YES' 'NO'
"KRN",8994,3120,3,34,0)
  21. INACTIVATE_DT - inactivate date in external format
"KRN",8994,3120,3,35,0)
                      date clinic was inactivated
"KRN",8994,3120,3,36,0)
  22. REACTIVATE_DT - reactivate date in external format
"KRN",8994,3120,3,37,0)
                      date clinic was reactivated
"KRN",8994,3120,3,38,0)
  23. DEF-APPT-TYPE_ID - default appointment type ID pointer to
"KRN",8994,3120,3,39,0)
                         APPOINTMENT TYPE file 409.1
"KRN",8994,3120,3,40,0)
  24. DEF-APPT-TYPE_NAME - default appointment type NAME from
"KRN",8994,3120,3,41,0)
                           APPOINTMENT TYPE file
"KRN",8994,3120,3,42,0)
  25. PROVIDERS - Providers separated by pipe.
"KRN",8994,3120,3,43,0)
      Each pipe piece contains the following ;; pieces:
"KRN",8994,3120,3,44,0)
         1. provider ID pointer to NEW PERSON FILE 200
"KRN",8994,3120,3,45,0)
         2. provider NAME from NEW PERSON file
"KRN",8994,3120,3,46,0)
         3. default provider? 'NO' 'YES'
"KRN",8994,3120,3,47,0)
  26. CLIN-SVCS-RES_ID - clinic services resource ID pointer to
"KRN",8994,3120,3,48,0)
  27. CLIN-SVCS-RES_NAME - clinic services resource NAME
"KRN",8994,3120,3,49,0)
  28. CLINIC-GRP_ID - clinic group (reports) ID pointer to
"KRN",8994,3120,3,50,0)
                      CLINIC GROUP file 409.67
"KRN",8994,3120,3,51,0)
  29. CLINIC-GRP_NAME - clinic group (reports) NAME from
"KRN",8994,3120,3,52,0)
                        CLINIC GROUP file
"KRN",8994,3120,3,53,0)
  30. DATE - Date/Time this Clinic was created in external format
"KRN",8994,3120,3,54,0)
  31. MAXDAYS - max # days for future booking
"KRN",8994,3121,-1)
0^112
"KRN",8994,3121,0)
SDEC WLPCSET^WLPCSET^SDEC^4^R^0^^0
"KRN",8994,3121,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3121,1,1,0)
SET update patient contacts in SD WAIT LIST file
"KRN",8994,3121,2,0)
^8994.02A^2^2
"KRN",8994,3121,2,1,0)
INP^1^^1^1
"KRN",8994,3121,2,1,1,0)
^^8^8^3141202^
"KRN",8994,3121,2,1,1,1,0)
;  INP = Patient Contacts separated by ::
"KRN",8994,3121,2,1,1,2,0)
 ;            Each :: piece has the following ~~ pieces:  (same as they 
"KRN",8994,3121,2,1,1,3,0)
are passed into SDEC WLSET)
"KRN",8994,3121,2,1,1,4,0)
 ;            1) = (required)    DATE ENTERED external date/time
"KRN",8994,3121,2,1,1,5,0)
 ;            2) = (optional)    PC ENTERED BY USER ID or NAME - Pointer 
"KRN",8994,3121,2,1,1,6,0)
to NEW PERSON file or NAME
"KRN",8994,3121,2,1,1,7,0)
 ;            4) = (optional)    ACTION - 'Called' or 'Message Left'
"KRN",8994,3121,2,1,1,8,0)
 ;            5) = (optional)    PATIENT PHONE Free-Text 4-20 characters
"KRN",8994,3121,2,2,0)
WLIEN^1^^1^2
"KRN",8994,3121,2,2,1,0)
^8994.021^1^1^3150128^^
"KRN",8994,3121,2,2,1,1,0)
Wait List Id pointer to SDEC WAIT LIST file 409.3
"KRN",8994,3121,2,"B","INP",1)

"KRN",8994,3121,2,"B","WLIEN",2)

"KRN",8994,3121,2,"PARAMSEQ",1,1)

"KRN",8994,3121,2,"PARAMSEQ",2,2)

"KRN",8994,3121,3,0)
^8994.03^12^12^3150128^^
"KRN",8994,3121,3,1,0)
    Successful Return:
"KRN",8994,3121,3,2,0)
      A single entry in the Global Array in the format
"KRN",8994,3121,3,3,0)
      "0^<optional msg text>"
"KRN",8994,3121,3,4,0)
      "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3121,3,5,0)
   Caught Exception Return:
"KRN",8994,3121,3,6,0)
    A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3121,3,7,0)
    "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3121,3,8,0)
   Unexpected Exception Return:
"KRN",8994,3121,3,9,0)
      Handled by the RPC Broker.
"KRN",8994,3121,3,10,0)
      M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3121,3,11,0)
      The RPC execution stops and the RPC Broker sends the error
"KRN",8994,3121,3,12,0)
      generated text back to the client.
"KRN",8994,3122,-1)
0^115
"KRN",8994,3122,0)
SDEC APPSDGET^APPSDGET^SDEC^4^R^0^^0
"KRN",8994,3122,1,0)
^8994.01^2^2^3150127^^
"KRN",8994,3122,1,1,0)
GET appointment entries from SDEC APPOINTMENT file 409.84
"KRN",8994,3122,1,2,0)
  all records returned if all input is null
"KRN",8994,3122,2,0)
^8994.02A^8^8
"KRN",8994,3122,2,1,0)
MAXREC^1^^0^1
"KRN",8994,3122,2,1,1,0)
^^1^1^3141223^
"KRN",8994,3122,2,1,1,1,0)
Max records returned default to all
"KRN",8994,3122,2,2,0)
LASTSUB^1^^0^2
"KRN",8994,3122,2,2,1,0)
^^1^1^3141223^
"KRN",8994,3122,2,2,1,1,0)
last subscripts from previous call
"KRN",8994,3122,2,3,0)
SDBEG^1^^0^3
"KRN",8994,3122,2,3,1,0)
^^2^2^3141223^
"KRN",8994,3122,2,3,1,1,0)
Begin Date range in external format
"KRN",8994,3122,2,3,1,2,0)
Default to all dates
"KRN",8994,3122,2,4,0)
SDEND^1^^0^4
"KRN",8994,3122,2,4,1,0)
^^2^2^3141223^
"KRN",8994,3122,2,4,1,1,0)
End Date range in external format
"KRN",8994,3122,2,4,1,2,0)
Default to all dates
"KRN",8994,3122,2,5,0)
NOTEFLG^1^^0^5
"KRN",8994,3122,2,5,1,0)
^^2^2^3141223^
"KRN",8994,3122,2,5,1,1,0)
1=do NOT return NOTE text
"KRN",8994,3122,2,5,1,2,0)
0=return NOTE text
"KRN",8994,3122,2,6,0)
SDRES^1^^0^6
"KRN",8994,3122,2,6,1,0)
^^2^2^3141223^
"KRN",8994,3122,2,6,1,1,0)
Resource ID pointer to SDEC RESOURCE file
"KRN",8994,3122,2,6,1,2,0)
Default to all resources
"KRN",8994,3122,2,7,0)
DFN^1^^0^7
"KRN",8994,3122,2,7,1,0)
^^2^2^3141223^
"KRN",8994,3122,2,7,1,1,0)
pointer to PATIENT file 2
"KRN",8994,3122,2,7,1,2,0)
Default to all patients
"KRN",8994,3122,2,8,0)
SDID^1^^0^8
"KRN",8994,3122,2,8,1,0)
^8994.021^1^1^3150127^^
"KRN",8994,3122,2,8,1,1,0)
external ID (free-text)
"KRN",8994,3122,2,"B","DFN",7)

"KRN",8994,3122,2,"B","LASTSUB",2)

"KRN",8994,3122,2,"B","MAXREC",1)

"KRN",8994,3122,2,"B","NOTEFLG",5)

"KRN",8994,3122,2,"B","SDBEG",3)

"KRN",8994,3122,2,"B","SDEND",4)

"KRN",8994,3122,2,"B","SDID",8)

"KRN",8994,3122,2,"B","SDRES",6)

"KRN",8994,3122,2,"PARAMSEQ",1,1)

"KRN",8994,3122,2,"PARAMSEQ",2,2)

"KRN",8994,3122,2,"PARAMSEQ",3,3)

"KRN",8994,3122,2,"PARAMSEQ",4,4)

"KRN",8994,3122,2,"PARAMSEQ",5,5)

"KRN",8994,3122,2,"PARAMSEQ",6,6)

"KRN",8994,3122,2,"PARAMSEQ",7,7)

"KRN",8994,3122,2,"PARAMSEQ",8,8)

"KRN",8994,3122,3,0)
^8994.03^64^64^3150127^^
"KRN",8994,3122,3,1,0)
 ; Successful Return:
"KRN",8994,3122,3,2,0)
 ; Global Array in which each array entry contains data from the
"KRN",8994,3122,3,3,0)
 ; SDEC APPOINTMENT file 409.84.
"KRN",8994,3122,3,4,0)
 ; Data is separated by ^:
"KRN",8994,3122,3,5,0)
 ; 1. IEN - pointer to SDEC APPOINTMENT file
"KRN",8994,3122,3,6,0)
 ; 2. DATE1 - STARTTIME in external format
"KRN",8994,3122,3,7,0)
 ; 3. DATE2 - ENDTIME in external format
"KRN",8994,3122,3,8,0)
 ; 4. CHECKIN_TIME - CHECKIN date/time in external format
"KRN",8994,3122,3,9,0)
 ; 5. DATE - CHECK IN TIME ENTERED - date/time in external format
"KRN",8994,3122,3,10,0)
 ; 6. DFN - Patient ID
"KRN",8994,3122,3,11,0)
 ; 7. NAME - Patient NAME
"KRN",8994,3122,3,12,0)
 ; 8. SDEC_ACCESS_TYPE_IEN - access type ID pointer to
"KRN",8994,3122,3,13,0)
 ;                           SDEC ACCESS TYPE file
"KRN",8994,3122,3,14,0)
 ; 9. SDEC_ACCESS_TYPE_NAME - access type NAME from
"KRN",8994,3122,3,15,0)
 ;                            SDEC ACCESS TYPE file
"KRN",8994,3122,3,16,0)
 ; 10. RESOURCEID - Pointer to the SDEC RESOURCE file
"KRN",8994,3122,3,17,0)
 ; 11. RESOURCE_NAME - NAME from SDEC RESOURCE file
"KRN",8994,3122,3,18,0)
 ; 12. USERIEN - DATA ENTRY CLERK id pointer to NEW PERSON file
"KRN",8994,3122,3,19,0)
 ; 13. USERNAME - DATA ENTRY CLERK name from NEW PERSON file
"KRN",8994,3122,3,20,0)
 ; 14. DATE3 - DATE APPT MADE in external format
"KRN",8994,3122,3,21,0)
 ; 15. NOSHOW - NOSHOW flag 1=YES; 0=NO default to no
"KRN",8994,3122,3,22,0)
 ; 16. DATE4 - NOSHOW DATETIME in external format
"KRN",8994,3122,3,23,0)
 ; 17. USERIEN1 - NOSHOW BY USER id pointer to NEW PERSON file
"KRN",8994,3122,3,24,0)
 ; 18. USERNAME1 - NOSHOW BY USER name from NEW PERSON file
"KRN",8994,3122,3,25,0)
 ; 19. DATE5 - REBOOK DATETIME in external format
"KRN",8994,3122,3,26,0)
 ; 20. DATE6 - CANCEL DATETIME in external format
"KRN",8994,3122,3,27,0)
 ; 21. USERIEN2 - CANCELLED BY USER id pointer to NEW PERSON file
"KRN",8994,3122,3,28,0)
 ; 22. USERNAME2 - CANCELLED BY USER name from NEW PERSON file
"KRN",8994,3122,3,29,0)
 ; 23. CANCELLATION_REASONS_IEN - CANCELLATION REASON id pointer
"KRN",8994,3122,3,30,0)
 ;                            to CANCELLATION REASONS file 409.2
"KRN",8994,3122,3,31,0)
 ; 24. CANCELLATION_REASONS_NAME - CANCELLATION REASON name from
"KRN",8994,3122,3,32,0)
 ;                            CANCELLATION REASONS file
"KRN",8994,3122,3,33,0)
 ; 25. WALKIN - WALKIN flag y=YES; n=NO default to NO
"KRN",8994,3122,3,34,0)
 ; 26. CHECKOUT - CHECKOUT date/time in external format
"KRN",8994,3122,3,35,0)
 ; 27. V_PROVIDER_IEN - V PROVIDER IEN id pointer to
"KRN",8994,3122,3,36,0)
 ;                      V PROVIDER file
"KRN",8994,3122,3,37,0)
 ; 28. V_PROVIDER_NAME - V PROVIDER name from V PROVIDER FILE
"KRN",8994,3122,3,38,0)
 ; 29. PROVIEN - PROVIDER id pointer to NEW PERSON file
"KRN",8994,3122,3,39,0)
 ; 30. PROVNAME - PROVIDER name from NEW PERSON file
"KRN",8994,3122,3,40,0)
 ; 31. STATUS - STATUS set of codes
"KRN",8994,3122,3,41,0)
 ;              valid values in external form are:
"KRN",8994,3122,3,42,0)
 ;                NO-SHOW
"KRN",8994,3122,3,43,0)
 ;                CLINIC
"KRN",8994,3122,3,44,0)
 ;                NO-SHOW & AUTO RE-BOOK
"KRN",8994,3122,3,45,0)
 ;                CANCELLED BY CLINIC & AUTO RE-BOOK
"KRN",8994,3122,3,46,0)
 ;                INPATIENT APPOINTMENT
"KRN",8994,3122,3,47,0)
 ;                CANCELLED BY PATIENT
"KRN",8994,3122,3,48,0)
 ;                CANCELLED BY PATIENT & AUTO-REBOOK
"KRN",8994,3122,3,49,0)
 ;                NO ACTION TAKEN
"KRN",8994,3122,3,50,0)
 ; 32. APPTLEN - LENGTH OF APPT numeric 5-120
"KRN",8994,3122,3,51,0)
 ; 33. APPT_STAT_IEN - PREV APPT STATUS id pointer to
"KRN",8994,3122,3,52,0)
 ;                     APPOINTMENT STATUS file 409.63
"KRN",8994,3122,3,53,0)
 ; 34. APPT_STAT_NAME - PREV APPT STATUS name from
"KRN",8994,3122,3,54,0)
 ;                      APPOINTMENT STATUS file
"KRN",8994,3122,3,55,0)
 ; 35. DAPTDT - DESIRED DATE OF APPOINTMENT in external format
"KRN",8994,3122,3,56,0)
 ; 36. SDID - EXTERNAL ID free-text
"KRN",8994,3122,3,57,0)
 ; 37. SDAPTYP - APPT REQUEST TYPE - variable pointer pointer
"KRN",8994,3122,3,58,0)
 ;               to one of these files:
"KRN",8994,3122,3,59,0)
 ;                SD WAIT LIST - E|<WL IEN> E|123
"KRN",8994,3122,3,60,0)
 ;                REQUEST/CONSULTATION - C|<CONSULT IEN> C|123
"KRN",8994,3122,3,61,0)
 ;                RECALL REMINDERS - R|^<RECALL IEN> R|123
"KRN",8994,3122,3,62,0)
 ; 38. NOTE - NOTE free-text converted from Word Processing
"KRN",8994,3122,3,63,0)
 ;            field. May contain Carriage return/line feed
"KRN",8994,3122,3,64,0)
 ;            characters
"KRN",8994,3123,-1)
0^116
"KRN",8994,3123,0)
SDEC WLOPEN^WLOPEN^SDEC^4^R^0^^0
"KRN",8994,3123,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3123,1,1,0)
SET Waitlist Open/re-open
"KRN",8994,3123,2,0)
^8994.02A^3^3
"KRN",8994,3123,2,1,0)
WLIEN^1^^0^2
"KRN",8994,3123,2,1,1,0)
^8994.021^1^1^3150128^^^
"KRN",8994,3123,2,1,1,1,0)
Waitlist ID - Pointer to SD WAIT LIST file
"KRN",8994,3123,2,2,0)
WLDDT^1^^0^3
"KRN",8994,3123,2,2,1,0)
^8994.021^1^1^3150128^^
"KRN",8994,3123,2,2,1,1,0)
Desired Date of appointment in external format
"KRN",8994,3123,2,3,0)
WLAPP^1^^0^1
"KRN",8994,3123,2,3,1,0)
^8994.021^1^1^3150128^^
"KRN",8994,3123,2,3,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84
"KRN",8994,3123,2,"B","WLAPP",3)

"KRN",8994,3123,2,"B","WLDDT",2)

"KRN",8994,3123,2,"B","WLIEN",1)

"KRN",8994,3123,2,"PARAMSEQ",1,3)

"KRN",8994,3123,2,"PARAMSEQ",2,1)

"KRN",8994,3123,2,"PARAMSEQ",3,2)

"KRN",8994,3123,3,0)
^8994.03^1^1^3150128^^
"KRN",8994,3123,3,1,0)
Single entry in the global array containing a return code and text.
"KRN",8994,3124,-1)
0^117
"KRN",8994,3124,0)
SDECLOC PRIVLOC^PRIVLOC^SDECLOC^4^R^0^^1
"KRN",8994,3124,1,0)
^8994.01^1^1^3150420^^
"KRN",8994,3124,1,1,0)
Returns Privileged User data for Hospital Locations.
"KRN",8994,3124,2,0)
^8994.02A^1^1
"KRN",8994,3124,2,1,0)
LOCATION^1^^1^1
"KRN",8994,3124,2,1,1,0)
^8994.021^1^1^3150420^^
"KRN",8994,3124,2,1,1,1,0)
IEN to Hospital Location file.
"KRN",8994,3124,2,"B","LOCATION",1)

"KRN",8994,3124,2,"PARAMSEQ",1,1)

"KRN",8994,3124,3,0)
^8994.03^12^12^3150420^^
"KRN",8994,3124,3,1,0)
Global Array in which each array element contains information separated 
"KRN",8994,3124,3,2,0)
by ^:
"KRN",8994,3124,3,3,0)
1. Hospital Location IEN
"KRN",8994,3124,3,4,0)
2. Hospital Location Name
"KRN",8994,3124,3,5,0)
3. Privileged User IEN
"KRN",8994,3124,3,6,0)
4. Privileged User Name
"KRN",8994,3124,3,7,0)
 
"KRN",8994,3124,3,8,0)
Unexpected Exception Return:
"KRN",8994,3124,3,9,0)
  Handled by the RPC Broker.
"KRN",8994,3124,3,10,0)
  M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3124,3,11,0)
  The RPC execution stops and the RPC Broker sends the error
"KRN",8994,3124,3,12,0)
  generated text back.
"KRN",8994,3125,-1)
0^127
"KRN",8994,3125,0)
SDECRMG RMG^RMG^SDECRMG^4^R^0^^0
"KRN",8994,3125,1,0)
^^3^3^3150420^
"KRN",8994,3125,1,1,0)
This RPC returns data from the ^XTMP("SDECIDX",$J,"XREF" global.
"KRN",8994,3125,1,2,0)
This call uses the filter and sort arrays passed in to return data in the 
"KRN",8994,3125,1,3,0)
desired format. This call returns a list of items by a key.
"KRN",8994,3125,2,0)
^8994.02A^4^4
"KRN",8994,3125,2,1,0)
MAXREC^1^^^1
"KRN",8994,3125,2,1,1,0)
^^1^1^3150420^
"KRN",8994,3125,2,1,1,1,0)
MAXIMUM number of records to return. The default is 25 if left blank.
"KRN",8994,3125,2,2,0)
LASTSUB^1^^^2
"KRN",8994,3125,2,2,1,0)
^^4^4^3150420^
"KRN",8994,3125,2,2,1,1,0)
This parameter would contain the key of the last record processed.
"KRN",8994,3125,2,2,1,2,0)
If this parameter is included, the routine will retrieve the next MAXREC 
"KRN",8994,3125,2,2,1,3,0)
number of items from the previous filter/sort request and will not 
"KRN",8994,3125,2,2,1,4,0)
initiate a new search.
"KRN",8994,3125,2,3,0)
FILTER^2^^^3
"KRN",8994,3125,2,3,1,0)
^^11^11^3150420^
"KRN",8994,3125,2,3,1,1,0)
This parameter will contain the filter data. Filters can be in any order
"KRN",8994,3125,2,3,1,2,0)
 and in any number.
"KRN",8994,3125,2,3,1,3,0)
 
"KRN",8994,3125,2,3,1,4,0)
 It has 2 pieces to each entry. The first piece is the type and the second
"KRN",8994,3125,2,3,1,5,0)
 piece is the value.  Below are examples
"KRN",8994,3125,2,3,1,6,0)
 FILTER(1)=WAITTIME^>=90
"KRN",8994,3125,2,3,1,7,0)
 FILTER(2)=REQUESTTYPE^E~C
"KRN",8994,3125,2,3,1,8,0)
 FILTER(3)=PRIORITYGROUP^GROUP 1~GROUP 2 Clinics is a list of clinics in 
"KRN",8994,3125,2,3,1,9,0)
EXTERNAL FORMAT
"KRN",8994,3125,2,3,1,10,0)
 Origination date and desired date are list of dates in EXTERNAL format
"KRN",8994,3125,2,3,1,11,0)
 PatientName is a list of internal DFNS
"KRN",8994,3125,2,4,0)
SORT^2^^^4
"KRN",8994,3125,2,4,1,0)
^^11^11^3150420^
"KRN",8994,3125,2,4,1,1,0)
The sort array tells how to return the requested data.
"KRN",8994,3125,2,4,1,2,0)
 Sort can be any number and in any order.
"KRN",8994,3125,2,4,1,3,0)
 
"KRN",8994,3125,2,4,1,4,0)
 SORT(1)=WAITTIME
"KRN",8994,3125,2,4,1,5,0)
 SORT(2)=REQUESTTYPE
"KRN",8994,3125,2,4,1,6,0)
 SORT(3)=PRIORITYGROUP
"KRN",8994,3125,2,4,1,7,0)
 SORT(4)=DESIREDDATE
"KRN",8994,3125,2,4,1,8,0)
 SORT(5)=ORIGINATIONDATE
"KRN",8994,3125,2,4,1,9,0)
 SORT(6)=CLINICS
"KRN",8994,3125,2,4,1,10,0)
 SORT(7)=PATIENTNAME
"KRN",8994,3125,2,4,1,11,0)
 SORT(8)=SCVISIT
"KRN",8994,3125,2,"B","FILTER",3)

"KRN",8994,3125,2,"B","LASTSUB",2)

"KRN",8994,3125,2,"B","MAXREC",1)

"KRN",8994,3125,2,"B","SORT",4)

"KRN",8994,3125,2,"PARAMSEQ",1,1)

"KRN",8994,3125,2,"PARAMSEQ",2,2)

"KRN",8994,3125,2,"PARAMSEQ",3,3)

"KRN",8994,3125,2,"PARAMSEQ",4,4)

"KRN",8994,3125,3,0)
^^34^34^3150420^
"KRN",8994,3125,3,1,0)
^TMP("SDECRMG",7628,0)="T00030TYPE^T00030IEN^T00030KEY"_$c(30)
"KRN",8994,3125,3,2,0)
 ^TMP("SDECRMG",7628,1)="E^119^0|0|3141102|3140919|119"_$c(30)
"KRN",8994,3125,3,3,0)
 ^TMP("SDECRMG",7628,2)="E^69^0|1|3140924|3140905|69"_$c(30)
"KRN",8994,3125,3,4,0)
 FILTER(4)=DESIREDDATE^02/20/2015~03/01/2015
"KRN",8994,3125,3,5,0)
 FILTER(5)=ORIGINATIONDATE^11/23/2014~11/24/2014~11/25/2014
"KRN",8994,3125,3,6,0)
 FILTER(6)=CLINICS^CARDIOLOGY CLINIC~FAMILY PRACTICE
"KRN",8994,3125,3,7,0)
 FILTER(7)=PATIENTNAME^15~23~100
"KRN",8994,3125,3,8,0)
 FILTER(8)=SCVISIT^False
"KRN",8994,3125,3,9,0)
 
"KRN",8994,3125,3,10,0)
 Waittime is a set of codes: <30,30-60,60-90,>=90,all
"KRN",8994,3125,3,11,0)
 Priority group is a set of codes NULL, GROUP 1 - GROUP 7
"KRN",8994,3125,3,12,0)
 Request type is a set of codes E(wait list),A(Appt request),R(recall
"KRN",8994,3125,3,13,0)
 list),C(consult)
"KRN",8994,3125,3,14,0)
 SCVisit is true/false
"KRN",8994,3125,3,15,0)
^TMP("SDECRMG",7628,3)="E^148^0|1|3141003|3140929|148"_$c(30)
"KRN",8994,3125,3,16,0)
 ^TMP("SDECRMG",7628,4)="E^187^0|1|3141008|3141008|187"_$c(30)
"KRN",8994,3125,3,17,0)
 ^TMP("SDECRMG",7628,5)="E^143^0|1|3141009|3140925|143"_$c(30)
"KRN",8994,3125,3,18,0)
 ^TMP("SDECRMG",7628,6)="E^181^0|1|3141009|3141008|181"_$c(30)
"KRN",8994,3125,3,19,0)
 ^TMP("SDECRMG",7628,7)="R^78^0|1|3141016|3141014|78"_$c(30)
"KRN",8994,3125,3,20,0)
 ^TMP("SDECRMG",7628,8)="E^205^0|1|3141017|3141014|205"_$c(30)
"KRN",8994,3125,3,21,0)
 ^TMP("SDECRMG",7628,9)="E^207^0|1|3141017|3141014|207"_$c(30)
"KRN",8994,3125,3,22,0)
 ^TMP("SDECRMG",7628,10)="E^192^0|1|3141023|3141010|192"_$c(30)
"KRN",8994,3125,3,23,0)
 ^TMP("SDECRMG",7628,11)="R^47^0|1|3141023|3141010|47"_$c(30)
"KRN",8994,3125,3,24,0)
 ^TMP("SDECRMG",7628,12)="E^199^0|1|3141023|3141013|199"_$c(30)
"KRN",8994,3125,3,25,0)
 ^TMP("SDECRMG",7628,13)="R^67^0|1|3141023|3141014|67"_$c(30)
"KRN",8994,3125,3,26,0)
 ^TMP("SDECRMG",7628,14)="R^64^0|1|3141024|3141014|64"_$c(30)
"KRN",8994,3125,3,27,0)
 ^TMP("SDECRMG",7628,15)="R^114^0|1|3141028|114"_$c(30)
"KRN",8994,3125,3,28,0)
 ^TMP("SDECRMG",7628,16)="R^60^0|1|3141029|3141014|60"_$c(30)
"KRN",8994,3125,3,29,0)
 ^TMP("SDECRMG",7628,17)="R^94^0|1|3141029|3141020|94"_$c(30)
"KRN",8994,3125,3,30,0)
 ^TMP("SDECRMG",7628,18)="E^159^0|1|3141030|3141002|159"_$c(30)
"KRN",8994,3125,3,31,0)
 
"KRN",8994,3125,3,32,0)
 The first piece is the request type (E,R,A,C)
"KRN",8994,3125,3,33,0)
 The second piece is the IEN of the request type
"KRN",8994,3125,3,34,0)
 The 3rd piece is the KEY to retrieving further data
"KRN",8994,3126,-1)
0^126
"KRN",8994,3126,0)
SDECRMG RECCNT^RECCNT^SDECRMG1^1^R^0^^0
"KRN",8994,3126,1,0)
^^2^2^3150629^
"KRN",8994,3126,1,1,0)
Returns the number of entries in the filter call in 
"KRN",8994,3126,1,2,0)
^TMP("SDECIDX",$J,"COUNT") node.
"KRN",8994,3127,-1)
0^129
"KRN",8994,3127,0)
SDECIDX RECCNT^RECCNT^SDECIDX^1^R^0^^0
"KRN",8994,3127,1,0)
^^1^1^3150420^
"KRN",8994,3127,1,1,0)
Returns the number of entries in the ^XTMP("SDEC","IDX","COUNT") node.
"KRN",8994,3128,-1)
0^128
"KRN",8994,3128,0)
SDECIDX GETREC^GETREC^SDECIDX^4^R^0^^0
"KRN",8994,3128,1,0)
^^6^6^3150420^
"KRN",8994,3128,1,1,0)
This RPC returns content from the ^XTMP("SDEC","IDX" global and serves as 
"KRN",8994,3128,1,2,0)
the default start up list.  The records are sorted by:
"KRN",8994,3128,1,3,0)
Priority Group
"KRN",8994,3128,1,4,0)
  SVC %
"KRN",8994,3128,1,5,0)
    Desired Date
"KRN",8994,3128,1,6,0)
      Origination Date
"KRN",8994,3128,2,0)
^8994.02A^3^3
"KRN",8994,3128,2,1,0)
LASTREC^1^^0^1
"KRN",8994,3128,2,1,1,0)
^^2^2^3150420^
"KRN",8994,3128,2,1,1,1,0)
Holds the "KEY" of the last returned record and indicates where to start 
"KRN",8994,3128,2,1,1,2,0)
with the next bolus of records.
"KRN",8994,3128,2,2,0)
MAXREC^1^^0^2
"KRN",8994,3128,2,2,1,0)
^^1^1^3150420^
"KRN",8994,3128,2,2,1,1,0)
Indicates the number of records to return. Defaults to 25.
"KRN",8994,3128,2,3,0)
STYLE^1^1^0^3
"KRN",8994,3128,2,3,1,0)
^8994.021^1^1^3150420^^
"KRN",8994,3128,2,3,1,1,0)
Available values are "R" and "D". Indicates format of return data.
"KRN",8994,3128,2,"B","LASTREC",1)

"KRN",8994,3128,2,"B","MAXREC",2)

"KRN",8994,3128,2,"B","STYLE",3)

"KRN",8994,3128,2,"PARAMSEQ",1,1)

"KRN",8994,3128,2,"PARAMSEQ",2,2)

"KRN",8994,3128,2,"PARAMSEQ",3,3)

"KRN",8994,3128,3,0)
^^5^5^3150420^
"KRN",8994,3128,3,1,0)
Style "D" returns two nodes the first containing the Header format and 
"KRN",8994,3128,3,2,0)
the second the data.
"KRN",8994,3128,3,3,0)
 
"KRN",8994,3128,3,4,0)
Style "R" returns a Header node and then one or mode nodes containing the 
"KRN",8994,3128,3,5,0)
type of record, the record IEN and the record key.
"KRN",8994,3129,-1)
0^130
"KRN",8994,3129,0)
SDEC WLHIDE^WLHIDE^SDEC^4^R^0^^0
"KRN",8994,3129,1,0)
^^2^2^3150420^
"KRN",8994,3129,1,1,0)
GET wait list entries in which the associated clinic's 'HIDE FROM DISPLAY 
"KRN",8994,3129,1,2,0)
IN VSE GUI? field is 'YES'.
"KRN",8994,3129,3,0)
^^12^12^3150420^
"KRN",8994,3129,3,1,0)
RETURN:
"KRN",8994,3129,3,2,0)
 DFN
"KRN",8994,3129,3,3,0)
 ORIGDT   = ORIGINATING DATE
"KRN",8994,3129,3,4,0)
 TYPE     = Wait List Type
"KRN",8994,3129,3,5,0)
 CLINIEN  = Clinic IEN pointer to HOSPITAL LOCATION file 44
"KRN",8994,3129,3,6,0)
 WLCLNAME = WL SPECIFIC CLINIC
"KRN",8994,3129,3,7,0)
 USERIEN  = Originating User
"KRN",8994,3129,3,8,0)
 USERNAME = Originating User name
"KRN",8994,3129,3,9,0)
 DATE1    = Date/Time Entered
"KRN",8994,3129,3,10,0)
 DAPTDT   = Desired Date of appointment
"KRN",8994,3129,3,11,0)
 STATUS   = Current Status
"KRN",8994,3129,3,12,0)
            OPEN   CLOSED
"KRN",8994,3130,-1)
0^125
"KRN",8994,3130,0)
SDEC ARSET^ARSET^SDEC^1^R^0^^0
"KRN",8994,3130,1,0)
^^1^1^3150420^
"KRN",8994,3130,1,1,0)
Appointment Request Set
"KRN",8994,3130,2,0)
^8994.02A^1^1
"KRN",8994,3130,2,1,0)
INP^2^^1^1
"KRN",8994,3130,2,1,1,0)
^^43^43^3150420^
"KRN",8994,3130,2,1,1,1,0)
  ;  INP(1)  = (integer)  Wait List IEN point to
"KRN",8994,3130,2,1,1,2,0)
  ;                       SDEC APPT REQUEST file 409.85.
"KRN",8994,3130,2,1,1,3,0)
  ;                       If null, a new entry will be added
"KRN",8994,3130,2,1,1,4,0)
  ;  INP(2)  = (text)     DFN Pointer to the PATIENT file 2
"KRN",8994,3130,2,1,1,5,0)
  ;  INP(3)  = (date)     Originating Date/time in external date form
"KRN",8994,3130,2,1,1,6,0)
  ;  INP(4)  = (text)     Institution name NAME field from the 
"KRN",8994,3130,2,1,1,7,0)
INSTITUTION file
"KRN",8994,3130,2,1,1,8,0)
  ;  INP(5)  = (text)     Request Type
"KRN",8994,3130,2,1,1,9,0)
  ;  INP(6)  = (text)     REQ Specific Clinic name - NAME field in file 44
"KRN",8994,3130,2,1,1,10,0)
  ;  INP(7)  = (text)     Originating User name  - NAME field in NEW 
"KRN",8994,3130,2,1,1,11,0)
PERSON file 200
"KRN",8994,3130,2,1,1,12,0)
  ;  INP(8)  = (text)     Priority - 'ASAP' or 'FUTURE'
"KRN",8994,3130,2,1,1,13,0)
  ;  INP(9)  = (text)     Request By - 'PROVIDER' or 'PATIENT'
"KRN",8994,3130,2,1,1,14,0)
  ;  INP(10) = (text)     Provider name  - NAME field in NEW PERSON file 
"KRN",8994,3130,2,1,1,15,0)
200
"KRN",8994,3130,2,1,1,16,0)
  ;  INP(11) = (date)     Desired Date of appointment in external format.
"KRN",8994,3130,2,1,1,17,0)
  ;  INP(12) = (text)     comment must be 1-60 characters
"KRN",8994,3130,2,1,1,18,0)
  ;  INP(13) = (text)     ENROLLMENT PRIORITY - Valid Values are:
"KRN",8994,3130,2,1,1,19,0)
  ;                                             GROUP 1
"KRN",8994,3130,2,1,1,20,0)
  ;                                             GROUP 2
"KRN",8994,3130,2,1,1,21,0)
  ;                                             GROUP 3
"KRN",8994,3130,2,1,1,22,0)
  ;                                             GROUP 4
"KRN",8994,3130,2,1,1,23,0)
  ;                                             GROUP 5
"KRN",8994,3130,2,1,1,24,0)
  ;                                             GROUP 6
"KRN",8994,3130,2,1,1,25,0)
  ;                                             GROUP 7
"KRN",8994,3130,2,1,1,26,0)
  ;                                             GROUP 8
"KRN",8994,3130,2,1,1,27,0)
  ;  INP(14) = (text)     MULTIPLE APPOINTMENT RTC      NO; YES
"KRN",8994,3130,2,1,1,28,0)
  ;  INP(15) = (integer)  MULT APPT RTC INTERVAL integer between 1-365
"KRN",8994,3130,2,1,1,29,0)
  ;  INP(16) = (integer)  MULT APPT NUMBER integer between 1-100
"KRN",8994,3130,2,1,1,30,0)
  ;  INP(17) = Patient Contacts separated by ::
"KRN",8994,3130,2,1,1,31,0)
  ;            Each :: piece has the following ~~ pieces:
"KRN",8994,3130,2,1,1,32,0)
  ;            1) = (date)    DATE ENTERED external date/time
"KRN",8994,3130,2,1,1,33,0)
  ;            2) = (text)    PC ENTERED BY USER ID or NAME - Pointer to 
"KRN",8994,3130,2,1,1,34,0)
  ;                           NEW PERSON file or NAME
"KRN",8994,3130,2,1,1,35,0)
  ;            4) = (text)    ACTION - 'Called' or 'Message Left'
"KRN",8994,3130,2,1,1,36,0)
  ;            5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"KRN",8994,3130,2,1,1,37,0)
  ;  INP(18) = (optional) SERVICE CONNECTED PRIORITY valid values are NO  
"KRN",8994,3130,2,1,1,38,0)
YES
"KRN",8994,3130,2,1,1,39,0)
  ;  INP(19) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"KRN",8994,3130,2,1,1,40,0)
  ;  INP(20) = (optional) MRTC calculated preferred dates separated by 
"KRN",8994,3130,2,1,1,41,0)
pipe |:
"KRN",8994,3130,2,1,1,42,0)
  ;                       Each date can be in external format with no 
"KRN",8994,3130,2,1,1,43,0)
time.
"KRN",8994,3130,2,"B","INP",1)

"KRN",8994,3130,2,"PARAMSEQ",1,1)

"KRN",8994,3130,3,0)
^^2^2^3150420^
"KRN",8994,3130,3,1,0)
Return a single entry in the Global Array with the fields ERRORID and 
"KRN",8994,3130,3,2,0)
ERRORTEXT.
"KRN",8994,3131,-1)
0^118
"KRN",8994,3131,0)
SDEC ARCLOSE^ARCLOSE^SDEC^1^R^0^^0
"KRN",8994,3131,1,0)
^^2^2^3150420^
"KRN",8994,3131,1,1,0)
Remove a Patient from the Appointment Requested by setting the STATUS to 
"KRN",8994,3131,1,2,0)
CLOSED and updating the DISPOSITION fields.
"KRN",8994,3131,2,0)
^8994.02A^1^1
"KRN",8994,3131,2,1,0)
INP^2^^1^1
"KRN",8994,3131,2,1,1,0)
^^5^5^3150420^
"KRN",8994,3131,2,1,1,1,0)
 INP - Input parameters array
"KRN",8994,3131,2,1,1,2,0)
       INP(1) - Waitlist ID - Pointer to SD WAIT LIST file
"KRN",8994,3131,2,1,1,3,0)
       INP(2) - Disposition
"KRN",8994,3131,2,1,1,4,0)
       INP(3) - User Id - Pointer to NEW PERSON file
"KRN",8994,3131,2,1,1,5,0)
       INP(4) - Date Dispositioned in external form
"KRN",8994,3131,2,"B","INP",1)

"KRN",8994,3131,2,"PARAMSEQ",1,1)

"KRN",8994,3131,3,0)
^^2^2^3150420^
"KRN",8994,3131,3,1,0)
This RPC returns the IEN of the closed entry if successful; otherwise, it 
"KRN",8994,3131,3,2,0)
returns -1^<error message>
"KRN",8994,3132,-1)
0^119
"KRN",8994,3132,0)
SDEC ARDGET^ARDGET^SDEC^4^R^0^^0
"KRN",8994,3132,1,0)
^^1^1^3150420^
"KRN",8994,3132,1,1,0)
GET values for the disposition field of the SDEC APPT REQUEST file 409.85.
"KRN",8994,3132,3,0)
^^2^2^3150420^
"KRN",8994,3132,3,1,0)
Global array containing a list of the valid DISPOSITION values in which 
"KRN",8994,3132,3,2,0)
each array entry contains the disposition text.
"KRN",8994,3133,-1)
0^120
"KRN",8994,3133,0)
SDEC ARGET^ARGET^SDEC^4^R^0^^0
"KRN",8994,3133,1,0)
^^1^1^3150420^
"KRN",8994,3133,1,1,0)
App[ointment Request GET
"KRN",8994,3133,2,0)
^8994.02A^6^6
"KRN",8994,3133,2,1,0)
ARIEN1^1^^0^1
"KRN",8994,3133,2,1,1,0)
^^1^1^3150420^
"KRN",8994,3133,2,1,1,1,0)
Appt Request ID pointer to the SDEC APPT REQUEST fiel 409.85.
"KRN",8994,3133,2,2,0)
MAXREC^1^^0^2
"KRN",8994,3133,2,2,1,0)
^^1^1^3150420^
"KRN",8994,3133,2,2,1,1,0)
Max records returned.
"KRN",8994,3133,2,3,0)
SDBEG^1^^0^3
"KRN",8994,3133,2,3,1,0)
^^1^1^3150420^
"KRN",8994,3133,2,3,1,1,0)
Begin Date in external format.
"KRN",8994,3133,2,4,0)
SDEND^1^^0^4
"KRN",8994,3133,2,4,1,0)
^^1^1^3150420^
"KRN",8994,3133,2,4,1,1,0)
End date in external format.
"KRN",8994,3133,2,5,0)
DFN^1^^0^5
"KRN",8994,3133,2,5,1,0)
^^1^1^3150420^
"KRN",8994,3133,2,5,1,1,0)
Patient ID pointer to PATIENT file 2.
"KRN",8994,3133,2,6,0)
LASTSUB^1^^0^6
"KRN",8994,3133,2,6,1,0)
^^1^1^3150420^
"KRN",8994,3133,2,6,1,1,0)
Last subscript from previous call.
"KRN",8994,3133,2,"B","ARIEN1",1)

"KRN",8994,3133,2,"B","DFN",5)

"KRN",8994,3133,2,"B","LASTSUB",6)

"KRN",8994,3133,2,"B","MAXREC",2)

"KRN",8994,3133,2,"B","SDBEG",3)

"KRN",8994,3133,2,"B","SDEND",4)

"KRN",8994,3133,2,"PARAMSEQ",1,1)

"KRN",8994,3133,2,"PARAMSEQ",2,2)

"KRN",8994,3133,2,"PARAMSEQ",3,3)

"KRN",8994,3133,2,"PARAMSEQ",4,4)

"KRN",8994,3133,2,"PARAMSEQ",5,5)

"KRN",8994,3133,2,"PARAMSEQ",6,6)

"KRN",8994,3133,3,0)
^^66^66^3150420^
"KRN",8994,3133,3,1,0)
  ;   DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5] ^ 
"KRN",8994,3133,3,2,0)
GENDER [
"KRN",8994,3133,3,3,0)
6] ^ WAIT LIST IEN [7]
"KRN",8994,3133,3,4,0)
  ; ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9] ^ INSTITUTION NAME [10] 
"KRN",8994,3133,3,5,0)
^ APP T
"KRN",8994,3133,3,6,0)
YPE [11]
"KRN",8994,3133,3,7,0)
  ; ^ SPECIFIC CLINIC IEN [12] ^ SPECIFIC CLINIC NAME [13] ^ ORIGINATING 
"KRN",8994,3133,3,8,0)
USER IE
"KRN",8994,3133,3,9,0)
N [14] ^ ORIGINATING USER NAME [15}
"KRN",8994,3133,3,10,0)
  ; ^ PRIORITY [16] ^ REQUEST BY [17] ^ PROVIDER IEN [18] ^ PROVIDER NAME 
"KRN",8994,3133,3,11,0)
[19] ^
"KRN",8994,3133,3,12,0)
 DESIRED DATE OF APPOINTMENT [20]
"KRN",8994,3133,3,13,0)
  ; ^ COMMENTS [21] ^ ENROLLMENT PRIORITY [22]  ^ MULTIPLE APPOINTMENT 
"KRN",8994,3133,3,14,0)
RTC 0=NO;
"KRN",8994,3133,3,15,0)
 1=YES [23]
"KRN",8994,3133,3,16,0)
  ; ^ MULT APPT RTC INTERVAL-Integer between 1-365 [24] ^ MULT APPT 
"KRN",8994,3133,3,17,0)
NUMBER-Integ
"KRN",8994,3133,3,18,0)
er between 1-100 [25]
"KRN",8994,3133,3,19,0)
  ; ^ PRIGRP [26] ^ ELIGIEN [27] ELIGNAME [28] ^ SVCCONN [28] ^ 
"KRN",8994,3133,3,20,0)
SVCCONNP[30] ^ T
"KRN",8994,3133,3,21,0)
YPEIEN [31] ^ TYPENAME [32]
"KRN",8994,3133,3,22,0)
  ; ^ PCONTACT [33] ^ ARDISPD [34] ^ ARDISPU [35] ^ ARDISPUN [36] ^ 
"KRN",8994,3133,3,23,0)
ARSVCCON [37
"KRN",8994,3133,3,24,0)
] ^ PADDRES1 [38] ^ PADDRES2 [39]
"KRN",8994,3133,3,25,0)
  ; ^ PADDRES3 [40] ^ PCITY [41] ^ PSTATE [42] ^ PCOUNTRY [43] ^ PZIP4 
"KRN",8994,3133,3,26,0)
[44] ^ GA
"KRN",8994,3133,3,27,0)
F [45] ^ DATE/TIME ENTERED [46]
"KRN",8994,3133,3,28,0)
  ; ^ MTRCDATES [47] ^ SENSITIVE [48] ^ LASTSUB [49]
"KRN",8994,3133,3,29,0)
  ;
"KRN",8994,3133,3,30,0)
  ;--[48] SENSITIVE - Sensitive Record Access data separated by pipe |:
"KRN",8994,3133,3,31,0)
  ;        ;   1. return code:
"KRN",8994,3133,3,32,0)
  ;               -1-RPC/API failed
"KRN",8994,3133,3,33,0)
  ;                  Required variable not defined
"KRN",8994,3133,3,34,0)
  ;                0-No display/action required
"KRN",8994,3133,3,35,0)
  ;                  Not accessing own, employee, or sensitive record
"KRN",8994,3133,3,36,0)
  ;                1-Display warning message
"KRN",8994,3133,3,37,0)
  ;                  Sensitive and DG SENSITIVITY key holder
"KRN",8994,3133,3,38,0)
  ;                  or Employee and DG SECURITY OFFICER key holder
"KRN",8994,3133,3,39,0)
  ;                2-Display warning message/require OK to continue
"KRN",8994,3133,3,40,0)
  ;                  Sensitive and not a DG SENSITIVITY key holder
"KRN",8994,3133,3,41,0)
  ;                  Employee and not a DG SECURITY OFFICER key holder
"KRN",8994,3133,3,42,0)
  ;                3-Access to record denied
"KRN",8994,3133,3,43,0)
  ;                  Accessing own record
"KRN",8994,3133,3,44,0)
  ;                4-Access to Patient (#2) file records denied
"KRN",8994,3133,3,45,0)
  ;                  SSN not defined
"KRN",8994,3133,3,46,0)
  ;   2. display text/message
"KRN",8994,3133,3,47,0)
  ;   3. display text/message
"KRN",8994,3133,3,48,0)
  ;   4. display text/message
"KRN",8994,3133,3,49,0)
  ;
"KRN",8994,3133,3,50,0)
  ;--[47] MTRCDATES separated by pipe |, no time
"KRN",8994,3133,3,51,0)
  ;
"KRN",8994,3133,3,52,0)
  ;--[45] GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | 
"KRN",8994,3133,3,53,0)
<diagno
"KRN",8994,3133,3,54,0)
sis by name>
"KRN",8994,3133,3,55,0)
  ;
"KRN",8994,3133,3,56,0)
  ;--[33] PCONTACT   Patient Contact
"KRN",8994,3133,3,57,0)
  ;  PATIENT CONTACT pieced by :: where each :: piece contains the 
"KRN",8994,3133,3,58,0)
following ~~
"KRN",8994,3133,3,59,0)
pieces:
"KRN",8994,3133,3,60,0)
  ;         1. DATE ENTERED                external date/time
"KRN",8994,3133,3,61,0)
  ;         2. PC ENTERED BY USER IEN      Pointer to NEW PERSON file
"KRN",8994,3133,3,62,0)
  ;         3. PC ENTERED BY USER NAME     NAME from NEW PERSION file
"KRN",8994,3133,3,63,0)
 
"KRN",8994,3133,3,64,0)
Enter RETURN to continue or '^' to exit:
"KRN",8994,3133,3,65,0)
  ;         4. ACTION                      C=Called; M=Message Left
"KRN",8994,3133,3,66,0)
  ;         5. PATIENT PHONE               Free-Text 4-20 characters
"KRN",8994,3134,-1)
0^121
"KRN",8994,3134,0)
SDEC ARMRTGET^ARMRTGET^SDEC^4^R^0^^0
"KRN",8994,3134,1,0)
^^1^1^3150420^
"KRN",8994,3134,1,1,0)
Get number of entries and values in MRTC CALC PREF DATES.
"KRN",8994,3134,2,0)
^8994.02A^1^1
"KRN",8994,3134,2,1,0)
ARIEN^1^^1^1
"KRN",8994,3134,2,1,1,0)
^^1^1^3150420^
"KRN",8994,3134,2,1,1,1,0)
Pointer to SDEC APPT REQUEST file.
"KRN",8994,3134,2,"B","ARIEN",1)

"KRN",8994,3134,2,"PARAMSEQ",1,1)

"KRN",8994,3134,3,0)
^^2^2^3150420^
"KRN",8994,3134,3,1,0)
1st entry contains a count of the number of dates in MRTC CALC PREF DATES.
"KRN",8994,3134,3,2,0)
2-n entry contains each date.
"KRN",8994,3135,-1)
0^122
"KRN",8994,3135,0)
SDEC ARMRTSET^ARMRTSET^SDEC^4^R^0^^0
"KRN",8994,3135,1,0)
^^2^2^3150420^
"KRN",8994,3135,1,1,0)
Set MRTC CALC PREF DATES dates - clears the multiple and sets the new 
"KRN",8994,3135,1,2,0)
ones that are passed in.
"KRN",8994,3135,2,0)
^8994.02A^2^2
"KRN",8994,3135,2,1,0)
ARIEN^1^^1^1
"KRN",8994,3135,2,1,1,0)
^^1^1^3150420^
"KRN",8994,3135,2,1,1,1,0)
Pointer to SDEC APPT REQUEST file.
"KRN",8994,3135,2,2,0)
MRTC^1^^0^2
"KRN",8994,3135,2,2,1,0)
^^2^2^3150420^
"KRN",8994,3135,2,2,1,1,0)
calculated preferred dates separated by pipe |:
"KRN",8994,3135,2,2,1,2,0)
  Each date can be in external format with no time.
"KRN",8994,3135,2,"B","ARIEN",1)

"KRN",8994,3135,2,"B","MRTC",2)

"KRN",8994,3135,2,"PARAMSEQ",1,1)

"KRN",8994,3135,2,"PARAMSEQ",2,2)

"KRN",8994,3135,3,0)
^^1^1^3150420^
"KRN",8994,3135,3,1,0)
ERRORCODE^MESSAGE
"KRN",8994,3136,-1)
0^123
"KRN",8994,3136,0)
SDEC AROPEN^AROPEN^SDEC^4^R^0^^0
"KRN",8994,3136,1,0)
^^1^1^3150420^
"KRN",8994,3136,1,1,0)
SET Appt Request Open/Re-Open.
"KRN",8994,3136,2,0)
^8994.02A^3^3
"KRN",8994,3136,2,1,0)
ARIEN^1^^0^2
"KRN",8994,3136,2,1,1,0)
^8994.021^1^1^3150420^^
"KRN",8994,3136,2,1,1,1,0)
Pointer to SDEC APPT REQUEST file
"KRN",8994,3136,2,2,0)
ARDDT^1^^0^3
"KRN",8994,3136,2,2,1,0)
^8994.021^1^1^3150420^^
"KRN",8994,3136,2,2,1,1,0)
Desired Date of appointment in external format.
"KRN",8994,3136,2,3,0)
ARAPP^1^^0^1
"KRN",8994,3136,2,3,1,0)
^8994.021^1^1^3150420^^
"KRN",8994,3136,2,3,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84.
"KRN",8994,3136,2,"B","ARAPP",3)

"KRN",8994,3136,2,"B","ARDDT",2)

"KRN",8994,3136,2,"B","ARIEN",1)

"KRN",8994,3136,2,"PARAMSEQ",1,3)

"KRN",8994,3136,2,"PARAMSEQ",2,1)

"KRN",8994,3136,2,"PARAMSEQ",3,2)

"KRN",8994,3136,3,0)
^^1^1^3150420^
"KRN",8994,3136,3,1,0)
Single entry in the global array containing a return code and text.
"KRN",8994,3137,-1)
0^124
"KRN",8994,3137,0)
SDEC ARPCSET^ARPCSET^SDEC^4^R^0^^0
"KRN",8994,3137,1,0)
^^1^1^3150420^
"KRN",8994,3137,1,1,0)
SET/update patient contacts in SDEC APPT REQUEST file
"KRN",8994,3137,2,0)
^8994.02A^2^2
"KRN",8994,3137,2,1,0)
INP^1^^1^1
"KRN",8994,3137,2,1,1,0)
^^8^8^3150420^
"KRN",8994,3137,2,1,1,1,0)
  ;  INP = Patient Contacts separated by ::
"KRN",8994,3137,2,1,1,2,0)
  ;            Each :: piece has the following ~~ pieces:  (same as they
"KRN",8994,3137,2,1,1,3,0)
 are passed into SDEC WLSET)
"KRN",8994,3137,2,1,1,4,0)
  ;            1) = (required)    DATE ENTERED external date/time
"KRN",8994,3137,2,1,1,5,0)
  ;            2) = (optional)    PC ENTERED BY USER ID or NAME - Pointer
"KRN",8994,3137,2,1,1,6,0)
 to NEW PERSON file or NAME
"KRN",8994,3137,2,1,1,7,0)
  ;            4) = (optional)    ACTION - 'Called' or 'Message Left'
"KRN",8994,3137,2,1,1,8,0)
  ;            5) = (optional)    PATIENT PHONE Free-Text 4-20 characters
"KRN",8994,3137,2,2,0)
ARIEN^1^^1^2
"KRN",8994,3137,2,2,1,0)
^^1^1^3150420^
"KRN",8994,3137,2,2,1,1,0)
Pointer to SDEC APPT REQUEST file 409.85.
"KRN",8994,3137,2,"B","ARIEN",2)

"KRN",8994,3137,2,"B","INP",1)

"KRN",8994,3137,2,"PARAMSEQ",1,1)

"KRN",8994,3137,2,"PARAMSEQ",2,2)

"KRN",8994,3137,3,0)
^^11^11^3150420^
"KRN",8994,3137,3,1,0)
A single entry in the Global Array in the format
"KRN",8994,3137,3,2,0)
       "0^<optional msg text>"
"KRN",8994,3137,3,3,0)
       "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3137,3,4,0)
    Caught Exception Return:
"KRN",8994,3137,3,5,0)
     A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3137,3,6,0)
     "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3137,3,7,0)
    Unexpected Exception Return:
"KRN",8994,3137,3,8,0)
       Handled by the RPC Broker.
"KRN",8994,3137,3,9,0)
       M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3137,3,10,0)
       The RPC execution stops and the RPC Broker sends the error
"KRN",8994,3137,3,11,0)
       generated text back to the client.
"KRN",8994,3138,-1)
0^131
"KRN",8994,3138,0)
SDEC HIDE^HIDE^SDEC^4^R^0^^0
"KRN",8994,3138,1,0)
^^4^4^3150423^
"KRN",8994,3138,1,1,0)
This RPC returns a list of IENs and NAMEs of the clinics that are flagged 
"KRN",8994,3138,1,2,0)
to be hidden from the display in the scheduler.
"KRN",8994,3138,1,3,0)
This are identified when the HIDE FROM DISPLAY IN VSE GUI? field in the 
"KRN",8994,3138,1,4,0)
HOSPITAL LOCATION file is defined as 'YES'.
"KRN",8994,3138,3,0)
^^2^2^3150423^
"KRN",8994,3138,3,1,0)
This remote procedure returns an array in which each entry is of the 
"KRN",8994,3138,3,2,0)
format IEN ^ NAME.
"KRN",8994,3139,-1)
0^132
"KRN",8994,3139,0)
SDECLOC UPDPRIV^UPDPRIV^SDECLOC^2^R^0^^0
"KRN",8994,3139,1,0)
^8994.01^2^2^3150427^^
"KRN",8994,3139,1,1,0)
Supports updating the list of privileged users for a hospital location.
"KRN",8994,3139,1,2,0)
This RPC will purge existing entries and populate with the passed array.
"KRN",8994,3139,2,0)
^8994.02A^2^2
"KRN",8994,3139,2,1,0)
LOC^1^^1^1
"KRN",8994,3139,2,1,1,0)
^8994.021^1^1^3150427^^
"KRN",8994,3139,2,1,1,1,0)
IEN to the HOSPITAL LOCATION file.
"KRN",8994,3139,2,2,0)
LST^2^^^2
"KRN",8994,3139,2,2,1,0)
^^5^5^3150427^
"KRN",8994,3139,2,2,1,1,0)
Array in the following format:
"KRN",8994,3139,2,2,1,2,0)
 
"KRN",8994,3139,2,2,1,3,0)
LST(1)=NEW PERSON IEN
"KRN",8994,3139,2,2,1,4,0)
LST(2)=NEW PERSON IEN
"KRN",8994,3139,2,2,1,5,0)
LST(3)=NEW PERSON IEN
"KRN",8994,3139,2,"B","LOC",1)

"KRN",8994,3139,2,"B","LST",2)

"KRN",8994,3139,2,"PARAMSEQ",1,1)

"KRN",8994,3139,2,"PARAMSEQ",2,2)

"KRN",8994,3139,3,0)
^8994.03^5^5^3150427^^
"KRN",8994,3139,3,1,0)
1^SUCCESSFUL
"KRN",8994,3139,3,2,0)
 
"KRN",8994,3139,3,3,0)
or
"KRN",8994,3139,3,4,0)
 
"KRN",8994,3139,3,5,0)
-1^Error message
"KRN",8994,3140,-1)
0^133
"KRN",8994,3140,0)
SDECAR ARMRTC^ARMRTC^SDECAR^4^R^0^^0
"KRN",8994,3140,1,0)
^^1^1^3150511^
"KRN",8994,3140,1,1,0)
GET the number of MRTC appointments made for this request.
"KRN",8994,3140,2,0)
^8994.02A^1^1
"KRN",8994,3140,2,1,0)
ARIEN^1^^1^1
"KRN",8994,3140,2,1,1,0)
^^1^1^3150511^
"KRN",8994,3140,2,1,1,1,0)
Pointer to SDEC APPT REQUEST file 409.85.
"KRN",8994,3140,2,"B","ARIEN",1)

"KRN",8994,3140,2,"PARAMSEQ",1,1)

"KRN",8994,3140,3,0)
^^2^2^3150511^
"KRN",8994,3140,3,1,0)
Global array with 1 entry containing the count of the appointments made 
"KRN",8994,3140,3,2,0)
under the COUNT header.
"KRN",8994,3141,-1)
0^134
"KRN",8994,3141,0)
SDECRMG2 URGENCY^URGENCY^SDECRMG2^4^R^0^^0
"KRN",8994,3141,1,0)
^^2^2^3150522^
"KRN",8994,3141,1,1,0)
GET valid urgency protocol values that are used in the URGENCY field 5 of 
"KRN",8994,3141,1,2,0)
the REQUEST CONSULTATION file 123.
"KRN",8994,3141,3,0)
^^5^5^3150522^
"KRN",8994,3141,3,1,0)
Global array in which each entry contains the IEN and NAME of a protocol 
"KRN",8994,3141,3,2,0)
entry:
"KRN",8994,3141,3,3,0)
  1. IEN     - pointer to PROTOCOL file 101
"KRN",8994,3141,3,4,0)
  2. NAME    - name field from PROTOCOL file
"KRN",8994,3141,3,5,0)
  3. SYNONYM - Short name list separated by pipe.
"KRN",8994,3142,-1)
0^135
"KRN",8994,3142,0)
SDECAR ARAPPT^ARAPPT^SDECAR^4^R^0^^0
"KRN",8994,3142,1,0)
^^1^1^3150713^
"KRN",8994,3142,1,1,0)
GET appointment request for given SDEC APPOINTMENT id.
"KRN",8994,3142,2,0)
^8994.02A^1^1
"KRN",8994,3142,2,1,0)
SDAPPT^1^^1^1
"KRN",8994,3142,2,1,1,0)
^^1^1^3150713^
"KRN",8994,3142,2,1,1,1,0)
Pointer to SDEC APPOINTMENT file 409.84.
"KRN",8994,3142,2,"B","SDAPPT",1)

"KRN",8994,3142,2,"PARAMSEQ",1,1)

"KRN",8994,3142,3,0)
^^10^10^3150713^
"KRN",8994,3142,3,1,0)
Global array with 1 entry containing the REQUEST TYPE and IEN of the 
"KRN",8994,3142,3,2,0)
associated appointment separated by pipe |:
"KRN",8994,3142,3,3,0)
  1. Request Type - A  APPT
"KRN",8994,3142,3,4,0)
                    C  Consult
"KRN",8994,3142,3,5,0)
                    E  EWL
"KRN",8994,3142,3,6,0)
                    R  Recall
"KRN",8994,3142,3,7,0)
  2. IEN - pointer to either the SDEC APPT REQUEST
"KRN",8994,3142,3,8,0)
                                 REQUEST/CONSULTATION
"KRN",8994,3142,3,9,0)
                                 SD WAIT LIST
"KRN",8994,3142,3,10,0)
                              or RECALL REMINDERS file.
"KRN",8994,3143,-1)
0^136
"KRN",8994,3143,0)
SDECLK LOCK^LOCK^SDECLK^4^R^0^^0
"KRN",8994,3143,1,0)
^^6^6^3150723^
"KRN",8994,3143,1,1,0)
This RPC attempts to lock a request record.
"KRN",8994,3143,1,2,0)
Request records are in one of these files:
"KRN",8994,3143,1,3,0)
SDEC APPT REQUEST
"KRN",8994,3143,1,4,0)
REQUEST/CONSULTATION
"KRN",8994,3143,1,5,0)
SD WAIT LIST
"KRN",8994,3143,1,6,0)
RECALL REMINDERS
"KRN",8994,3143,2,0)
^8994.02A^1^1
"KRN",8994,3143,2,1,0)
REQ^1^^1^1
"KRN",8994,3143,2,1,1,0)
^^6^6^3150723^
"KRN",8994,3143,2,1,1,1,0)
Appt Request type - variable pointer pointer
"KRN",8994,3143,2,1,1,2,0)
                    to one of these files:
"KRN",8994,3143,2,1,1,3,0)
                      SDEC APPT REQUEST    - A|<APPT IEN>     A|123
"KRN",8994,3143,2,1,1,4,0)
                      SD WAIT LIST         - E|<WL IEN>       E|123
"KRN",8994,3143,2,1,1,5,0)
                      REQUEST/CONSULTATION - C|<CONSULT IEN>  C|123
"KRN",8994,3143,2,1,1,6,0)
                      RECALL REMINDERS     - R|^<RECALL IEN>  R|123
"KRN",8994,3143,2,"B","REQ",1)

"KRN",8994,3143,2,"PARAMSEQ",1,1)

"KRN",8994,3143,3,0)
^^4^4^3150723^
"KRN",8994,3143,3,1,0)
A single entry in the global array indicating the success/failure
"KRN",8994,3143,3,2,0)
of getting the lock:
"KRN",8994,3143,3,3,0)
   1. CODE    -  1 if successful, or 0^Message if could not get lock
"KRN",8994,3143,3,4,0)
   2. MESSAGE -  Message Text
"KRN",8994,3144,-1)
0^137
"KRN",8994,3144,0)
SDECLK UNLOCK^UNLOCK^SDECLK^4^R^0^^0
"KRN",8994,3144,1,0)
^^1^1^3150723^
"KRN",8994,3144,1,1,0)
This RPC unlocks the request record that was locked using SDECLK LOCK.
"KRN",8994,3144,2,0)
^8994.02A^2^2
"KRN",8994,3144,2,1,0)
REQ^1^^1^1
"KRN",8994,3144,2,1,1,0)
^^6^6^3150723^
"KRN",8994,3144,2,1,1,1,0)
Appt Request type - variable pointer pointer
"KRN",8994,3144,2,1,1,2,0)
                    to one of these files:
"KRN",8994,3144,2,1,1,3,0)
                      SDEC APPT REQUEST    - A|<APPT IEN>     A|123
"KRN",8994,3144,2,1,1,4,0)
                      SD WAIT LIST         - E|<WL IEN>       E|123
"KRN",8994,3144,2,1,1,5,0)
                      REQUEST/CONSULTATION - C|<CONSULT IEN>  C|123
"KRN",8994,3144,2,1,1,6,0)
                      RECALL REMINDERS     - R|^<RECALL IEN>  R|123
"KRN",8994,3144,2,2,0)
FLG^1^^0^2
"KRN",8994,3144,2,2,1,0)
^^5^5^3150723^
"KRN",8994,3144,2,2,1,1,0)
Unlock if other job
"KRN",8994,3144,2,2,1,2,0)
        0 = (default) only unlock if lock belongs to current user
"KRN",8994,3144,2,2,1,3,0)
                      and current $J job
"KRN",8994,3144,2,2,1,4,0)
        1 = unlock even if the lock does not belong to current
"KRN",8994,3144,2,2,1,5,0)
            user and current $J job
"KRN",8994,3144,2,"B","FLG",2)

"KRN",8994,3144,2,"B","REQ",1)

"KRN",8994,3144,2,"PARAMSEQ",1,1)

"KRN",8994,3144,2,"PARAMSEQ",2,2)

"KRN",8994,3144,3,0)
^^6^6^3150723^
"KRN",8994,3144,3,1,0)
A single entry in the global array indicating the success/failure of
"KRN",8994,3144,3,2,0)
releasing the lock:
"KRN",8994,3144,3,3,0)
   1. CODE    -  1 if successful, or 0^Message if could not get lock
"KRN",8994,3144,3,4,0)
   2. MESSAGE -  Message Text
"KRN",8994,3144,3,5,0)
                 If message text="Not your lock" you can call again and
"KRN",8994,3144,3,6,0)
                 send 1 as the 2nd input to unlock anyway.
"KRN",8994,3145,-1)
0^138
"KRN",8994,3145,0)
SDEC PRIV^PRIV^SDEC^4^R^0^^0
"KRN",8994,3145,1,0)
^^1^1^3150724^
"KRN",8994,3145,1,1,0)
IS this USER in the PRIVILEGED USER multiple for the clinic.
"KRN",8994,3145,2,0)
^8994.02A^2^2
"KRN",8994,3145,2,1,0)
CLINIEN^1^^1^1
"KRN",8994,3145,2,1,1,0)
^^1^1^3150724^
"KRN",8994,3145,2,1,1,1,0)
Pointer to the HOSPITAL LOCATION file 44.
"KRN",8994,3145,2,2,0)
USER^1^^1^2
"KRN",8994,3145,2,2,1,0)
^^1^1^3150724^
"KRN",8994,3145,2,2,1,1,0)
Pointer to the NEW PERSON file 200.
"KRN",8994,3145,2,"B","CLINIEN",1)

"KRN",8994,3145,2,"B","USER",2)

"KRN",8994,3145,2,"PARAMSEQ",1,1)

"KRN",8994,3145,2,"PARAMSEQ",2,2)

"KRN",8994,3145,3,0)
^^4^4^3150724^
"KRN",8994,3145,3,1,0)
A single boolean entry indicating that the USER is a PRIVILEGED USER for 
"KRN",8994,3145,3,2,0)
the clinic.
"KRN",8994,3145,3,3,0)
     RETURNCODE - 0=NO; 1=YES; -1=error
"KRN",8994,3145,3,4,0)
     MESSAGE
"KRN",8994,3146,-1)
0^139
"KRN",8994,3146,0)
SDECDIS DISABIL^DISABIL^SDECDIS^4^R^0^^0
"KRN",8994,3146,1,0)
^^1^1^3150807^
"KRN",8994,3146,1,1,0)
GET rated disabilities for the given patient
"KRN",8994,3146,2,0)
^8994.02A^1^1
"KRN",8994,3146,2,1,0)
DFN^1^^1^1
"KRN",8994,3146,2,1,1,0)
^^1^1^3150807^
"KRN",8994,3146,2,1,1,1,0)
pointer to PATIENT file 2
"KRN",8994,3146,2,"B","DFN",1)

"KRN",8994,3146,2,"PARAMSEQ",1,1)

"KRN",8994,3146,3,0)
^^33^33^3150807^
"KRN",8994,3146,3,1,0)
1. DFN          - patient ID pointer to PATIENT file 2
"KRN",8994,3146,3,2,0)
2. DISABILITIES - RATED DISABILITIES from multiple field .3721
"KRN",8994,3146,3,3,0)
                  separated by pipe
"KRN",8994,3146,3,4,0)
                  Each pipe piece contains the following ;; pieces:
"KRN",8994,3146,3,5,0)
                   1. DISABILITY id pointer to DISABILITY CONDITION file 
"KRN",8994,3146,3,6,0)
31
"KRN",8994,3146,3,7,0)
                   2. DISABILITY NAME from DISABILITY CONDITION file
"KRN",8994,3146,3,8,0)
                   3. DISABILITY % - percentage at which the VA rated this
"KRN",8994,3146,3,9,0)
                                     disability
"KRN",8994,3146,3,10,0)
                   4. SERVICE_CONNECTED - 0=NO=Patient is not service
"KRN",8994,3146,3,11,0)
                                            connected for this disability
"KRN",8994,3146,3,12,0)
                                          1=YES=Patient IS service
"KRN",8994,3146,3,13,0)
                                            connected for this disability
"KRN",8994,3146,3,14,0)
                   5. EXTREMITY - BL = BOTH LOWER
"KRN",8994,3146,3,15,0)
                                  BU = BOTH UPPER
"KRN",8994,3146,3,16,0)
                                  RL = RIGHT LOWER
"KRN",8994,3146,3,17,0)
                                  RU = RIGHT UPPER
"KRN",8994,3146,3,18,0)
                                  LL = LEFT LOWER
"KRN",8994,3146,3,19,0)
                                  LU = LEFT UPPER
"KRN",8994,3146,3,20,0)
                   6. ORIG_DATE - ORIGINAL EFFECTIVE DATE in external 
"KRN",8994,3146,3,21,0)
format
"KRN",8994,3146,3,22,0)
                   7. CURR_DATE         - CURRENT EFFECTIVE DATE
"KRN",8994,3146,3,23,0)
                                          in external format
"KRN",8994,3146,3,24,0)
3. SVCCONN - Y=YES=Patient Service Connected
"KRN",8994,3146,3,25,0)
             N=NO=Patient NOT Service Connected
"KRN",8994,3146,3,26,0)
4. SVCCONNP - Patient's service connected percentage
"KRN",8994,3146,3,27,0)
5. PRIMARY  - from field .361 pointer to ELIGIBILITY CODE file 8
"KRN",8994,3146,3,28,0)
6. PRIMARY_NAME - name from ELIGIBILITY CODE file
"KRN",8994,3146,3,29,0)
7. SECONDARY - from PATIENT ELIGIBILITIES multiple field 361 separated by
"KRN",8994,3146,3,30,0)
               pipe
"KRN",8994,3146,3,31,0)
               Each pipe piece contains the following ;; pieces:
"KRN",8994,3146,3,32,0)
               1. ELIGIBILITY id pointer to ELIGIBILITY CODE file 8
"KRN",8994,3146,3,33,0)
               2. ELIGIBILITY name from ELIGIBILITY CODE file
"KRN",8994,3147,-1)
0^140
"KRN",8994,3147,0)
SDECDEV DEVICE^DEVICE^SDECDEV^4^R^0^^0
"KRN",8994,3147,1,0)
^^1^1^3150914^
"KRN",8994,3147,1,1,0)
List of devices in the device file that are active printers.
"KRN",8994,3147,3,0)
^^2^2^3150914^
"KRN",8994,3147,3,1,0)
Global Array in the format:
"KRN",8994,3147,3,2,0)
   S @SDECY@(CNT)="I00030PRINTER_IEN^T00040PRINTER_NAME"
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,20,0)
^9.402P^^
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^2930813^2960613
"PKG",48,22,1,"PAH",1,0)
627^3160115^101058
"QUES","POS1 NIGHTJOB",0)
DA^N::T
"QUES","POS1 NIGHTJOB","?")
Enter a date and time
"QUES","POS1 NIGHTJOB","??")
This is the date/time of the first nightly job.  The job will run at this time every night.
"QUES","POS1 NIGHTJOB","A")
ENTER the date and time to start the schedule of the SDEC IDX REFRESH nightly job: 
"QUES","POS1 NIGHTJOB","B")
T+1@0200
"QUES","POS2 NOWJOB",0)
YA
"QUES","POS2 NOWJOB","?")
Enter Y for yes or N for no
"QUES","POS2 NOWJOB","??")
Enter Y for yes or N for no
"QUES","POS2 NOWJOB","A")
Do you want to schedule the SDEC IDX REFRESH option to run now? 
"QUES","POS2 NOWJOB","B")
Y
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
133
"RTN","SDAM2")
0^123^B30803018^B28969353
"RTN","SDAM2",1,0)
SDAM2 ;ALB/MJK - Appt Mgt (cont) ;JAN 15, 2016
"RTN","SDAM2",2,0)
 ;;5.3;Scheduling;**250,296,327,478,446,627**;Aug 13, 1993;Build 249
"RTN","SDAM2",3,0)
 ;
"RTN","SDAM2",4,0)
CI ; -- protocol SDAM APPT CHECK IN entry pt
"RTN","SDAM2",5,0)
 ; input:  VALMY := array entries
"RTN","SDAM2",6,0)
 ;
"RTN","SDAM2",7,0)
 N %,SDI,SDAT,VALMY,SDAMCIDT,SDCIACT
"RTN","SDAM2",8,0)
 D SEL^VALM2 S SDI=0,SDCIACT=""
"RTN","SDAM2",9,0)
 D NOW^%DTC S SDAMCIDT=$P(%,".")_"."_$E($P(%,".",2)_"0000",1,4)
"RTN","SDAM2",10,0)
 F  S SDI=$O(VALMY(SDI)) Q:'SDI  I $D(^TMP("SDAMIDX",$J,SDI)) K SDAT D
"RTN","SDAM2",11,0)
 .S SDAT=^TMP("SDAMIDX",$J,SDI)
"RTN","SDAM2",12,0)
 .W !,^TMP("SDAM",$J,+SDAT,0)
"RTN","SDAM2",13,0)
 .D:VALMCC SELECT^VALM10(+SDAT,1)
"RTN","SDAM2",14,0)
 .D ONE($P(SDAT,U,2),$P(SDAT,U,4),$P(SDAT,U,3),$P(SDAT,U,5),0,SDAMCIDT)
"RTN","SDAM2",15,0)
 .D:VALMCC SELECT^VALM10(+SDAT,0)
"RTN","SDAM2",16,0)
 S VALMBCK=$S(VALMCC:"",1:"R")
"RTN","SDAM2",17,0)
 Q
"RTN","SDAM2",18,0)
 ;
"RTN","SDAM2",19,0)
ONE(DFN,SDCL,SDT,SDDA,SDASK,SDAMCIDT) ; -- check in one appt
"RTN","SDAM2",20,0)
 ; input:  DFN := ifn of patient
"RTN","SDAM2",21,0)
 ;        SDCL := clinic#
"RTN","SDAM2",22,0)
 ;         SDT := appt d/t
"RTN","SDAM2",23,0)
 ;        SDDA := ifn in ^SC multiple or null
"RTN","SDAM2",24,0)
 ;       SDASK := ask d/t of ci always [1|yes or 0|no]
"RTN","SDAM2",25,0)
 ;    SDAMCIDT := ci date/time [optional]
"RTN","SDAM2",26,0)
 ;
"RTN","SDAM2",27,0)
 I $D(XRTL) D T0^%ZOSV
"RTN","SDAM2",28,0)
 S:'SDDA SDDA=$$FIND(DFN,SDT,SDCL)
"RTN","SDAM2",29,0)
 I 'SDDA W !!,*7,"You cannot check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",30,0)
 N SDATA,SDCIHDL,X S SDATA=SDDA_U_DFN_U_SDT_U_SDCL,SDCIHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDAM2",31,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDAM2",32,0)
 I '$D(^SD(409.63,"ACI",1,+SDATA("BEFORE","STATUS"))) W !!,*7,"You cannot check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",33,0)
 ; *** mt blocking removed
"RTN","SDAM2",34,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$G(EASACT)'="W",$$MT^EASMTCHK(DFN,"","C",SDT) D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",35,0)
 I $P(SDT,".")>DT W !!,*7,"It is too soon to check in this appointment." D PAUSE^VALM1 G ONEQ
"RTN","SDAM2",36,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDAM2",37,0)
 S DR="",X=$G(^SC(SDCL,"S",SDT,1,SDDA,"C"))
"RTN","SDAM2",38,0)
 I +X S DR=309
"RTN","SDAM2",39,0)
 ; -- already co'ed
"RTN","SDAM2",40,0)
 I DR="",$P(X,U,3) D
"RTN","SDAM2",41,0)
 .S DR="309//"
"RTN","SDAM2",42,0)
 .I $P(^SC(SDCL,0),U,24)!(SDASK) S DR=DR_$$FTIME^VALM1($P(X,U,3)) Q
"RTN","SDAM2",43,0)
 .S DR=DR_"//^S X="_$P(X,U,3)
"RTN","SDAM2",44,0)
 ;
"RTN","SDAM2",45,0)
 I DR="",$P(^SC(SDCL,0),U,24)!(SDASK) S DR="309//"_$S(SDAMCIDT:$$FTIME^VALM1(SDAMCIDT),1:"NOW")
"RTN","SDAM2",46,0)
 I DR="" S DR="309///"_$S(SDAMCIDT:"/"_SDAMCIDT,1:"NOW")
"RTN","SDAM2",47,0)
 S DA(2)=SDCL,DA(1)=SDT,DA=SDDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1," D ^DIE
"RTN","SDAM2",48,0)
 ;update SDEC APPOINTMENT   ;alb/sat 627
"RTN","SDAM2",49,0)
 N SDECAPPT,SDECDT
"RTN","SDAM2",50,0)
 S SDECAPPT=$$APPTGET^SDECUTL(DFN,SDT,SDCL)
"RTN","SDAM2",51,0)
 S SDECDT=$$GET1^DIQ(44.003,SDDA_","_SDT_","_SDCL_",",309,"I")
"RTN","SDAM2",52,0)
 D SDECCHK^SDEC25(SDECAPPT,SDECDT)
"RTN","SDAM2",53,0)
 ;alb/sat 627 end addition/modification
"RTN","SDAM2",54,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDAM2",55,0)
 I '$P(SDATA("AFTER","STATUS"),U,4),'$P(SDATA("BEFORE","STATUS"),U,4) W !?8,*7,"...appointment has not been checked in" D PAUSE^VALM1
"RTN","SDAM2",56,0)
 I SDATA("BEFORE","STATUS")'=SDATA("AFTER","STATUS") D
"RTN","SDAM2",57,0)
 .I $P(SDATA("AFTER","STATUS"),U,4),'$P(SDATA("BEFORE","STATUS"),U,4) W !?8,"...checked in ",$$FTIME^VALM1($P(SDATA("AFTER","STATUS"),U,4))
"RTN","SDAM2",58,0)
 .I $D(SDCIACT) D
"RTN","SDAM2",59,0)
 ..S Y=SDATA("AFTER","STATUS"),Y1=$P(Y,U,4),Y=$P(Y,U,3)
"RTN","SDAM2",60,0)
 ..I $P(SDATA("BEFORE","STATUS"),U,3)'=Y D UPD($$LOWER^VALM1(Y),"STAT",+SDAT,1),UPD("","TIME",+SDAT,1)
"RTN","SDAM2",61,0)
 ..I $P(SDATA("AFTER","STATUS"),U,3)["CHECKED IN" D UPD($S($P(Y1,".")=DT:$$TIME^SDAM1($P(Y1,".",2)),1:"     "),"TIME",+SDAT,1)
"RTN","SDAM2",62,0)
 .D EVT^SDAMEVT(.SDATA,4,0,SDCIHDL) ; 4 := ci evt , 0 := interactive mode
"RTN","SDAM2",63,0)
 I $D(XRT0) S XRTN="SDAM2" D T1^%ZOSV
"RTN","SDAM2",64,0)
ONEQ K DA,DIE,DR,DQ,DE,Y,Y1 Q
"RTN","SDAM2",65,0)
 ;
"RTN","SDAM2",66,0)
 ;
"RTN","SDAM2",67,0)
FIND(DFN,SDT,SDCL) ; -- return appt ifn for pat
"RTN","SDAM2",68,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDAM2",69,0)
 ;                 SDT := appt d/t
"RTN","SDAM2",70,0)
 ;                SDCL := ifn of clinic
"RTN","SDAM2",71,0)
 ;  output: [returned] := ifn if pat has appt on date/time
"RTN","SDAM2",72,0)
 ;
"RTN","SDAM2",73,0)
 N Y
"RTN","SDAM2",74,0)
 S Y=0 F  S Y=$O(^SC(SDCL,"S",SDT,1,Y)) Q:'Y  I $D(^(Y,0)),DFN=+^(0),$D(^DPT(+DFN,"S",SDT,0)),$$VALID(DFN,SDCL,SDT,Y) S CNSTLNK=$P($G(^SC(SDCL,"S",SDT,1,Y,"CONS")),U) K:CNSTLNK="" CNSTLNK Q  ;SD/478
"RTN","SDAM2",75,0)
 Q Y
"RTN","SDAM2",76,0)
 ;
"RTN","SDAM2",77,0)
UPD(TEXT,FLD,LINE,SAVE) ; -- update data for screen
"RTN","SDAM2",78,0)
 D FLDTEXT^VALM10(LINE,FLD,TEXT)
"RTN","SDAM2",79,0)
 D:VALMCC CNTRL^VALM10(LINE,$P(VALMDDF(FLD),U,2),$P(VALMDDF(FLD),U,3),IOINHI,IOINORM,+$G(SAVE))
"RTN","SDAM2",80,0)
 Q
"RTN","SDAM2",81,0)
 ;
"RTN","SDAM2",82,0)
MAKE ; -- make appt action
"RTN","SDAM2",83,0)
 N ORACTION,ORVP,XQORQUIT,SDAMERR
"RTN","SDAM2",84,0)
 D FULL^VALM1
"RTN","SDAM2",85,0)
 W !!,VALMHDR(1)
"RTN","SDAM2",86,0)
 D ^SDM
"RTN","SDAM2",87,0)
 I '$D(SDAMERR) D BLD^SDAM
"RTN","SDAM2",88,0)
 I $D(SDAMERR) D PAUSE^VALM1
"RTN","SDAM2",89,0)
 D SDM^SDKILL S VALMBCK="R"
"RTN","SDAM2",90,0)
 Q
"RTN","SDAM2",91,0)
 ;
"RTN","SDAM2",92,0)
WI ; -- walk-in visit action
"RTN","SDAM2",93,0)
 S VALMBCK="R"
"RTN","SDAM2",94,0)
 D FULL^VALM1
"RTN","SDAM2",95,0)
 I SDAMTYP="P" I $$CL^SDAMWI(SDFN) D BLD^SDAM1
"RTN","SDAM2",96,0)
 I SDAMTYP="C" I $$PT^SDAMWI(SDCLN) D BLD^SDAM3
"RTN","SDAM2",97,0)
 ;evaluate wait list ;SD/327
"RTN","SDAM2",98,0)
EWLCHK ;check if patient has any open EWL entries (SD/372)
"RTN","SDAM2",99,0)
 ;CLN expected as clinic IEN
"RTN","SDAM2",100,0)
 I '$D(DFN) Q
"RTN","SDAM2",101,0)
 Q:'$D(SDT)
"RTN","SDAM2",102,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"APPT")
"RTN","SDAM2",103,0)
 N SD S SD=SDT
"RTN","SDAM2",104,0)
 I '$D(SC) S SC=+$G(CLN)
"RTN","SDAM2",105,0)
 ;
"RTN","SDAM2",106,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"APPT")
"RTN","SDAM2",107,0)
 W:$D(IOF) @IOF D APPT^SDWLEVAL(DFN,SD,SC)
"RTN","SDAM2",108,0)
 Q:'$D(^TMP($J,"APPT"))
"RTN","SDAM2",109,0)
 N SDEV D EN^SDWLEVAL(DFN,.SDEV) I SDEV,$L(SDEV(1))>0 D
"RTN","SDAM2",110,0)
 .K ^TMP("SDWLPL",$J),^TMP($J,"SDWLPL")
"RTN","SDAM2",111,0)
 .D INIT^SDWLPL(DFN,"M")
"RTN","SDAM2",112,0)
 .Q:'$D(^TMP($J,"SDWLPL"))
"RTN","SDAM2",113,0)
 .D LIST^SDWLPL("M",DFN)
"RTN","SDAM2",114,0)
 .F  Q:'$D(^TMP($J,"SDWLPL"))  N SDR D ANSW^SDWLEVAL(1,.SDR) I 'SDR D LIST^SDWLPL("M",DFN) D
"RTN","SDAM2",115,0)
 ..F  N SDR  D ANSW^SDWLEVAL(0,.SDR) Q:'$D(^TMP($J,"SDWLPL"))  I 'SDR W !,"MUST ENTER A REASON NOT TO DISPOSITION MATCHED EWL ENTRY",!
"RTN","SDAM2",116,0)
 I $D(^TMP($J,"APPT")) N SDEV D EN^SDWLEVAL(DFN,.SDEV) I SDEV,$L(SDEV(1))>0 D
"RTN","SDAM2",117,0)
 .Q:'$D(^TMP($J,"SDWLPL"))  D ASKREM^SDWLEVAL S SDCTN=1 ;display and process selected open EWL entries
"RTN","SDAM2",118,0)
 .Q
"RTN","SDAM2",119,0)
 Q
"RTN","SDAM2",120,0)
 ;
"RTN","SDAM2",121,0)
DATE ; -- change date range
"RTN","SDAM2",122,0)
 S VALMB=SDBEG D RANGE^VALM11
"RTN","SDAM2",123,0)
 I $S('VALMBEG:1,SDBEG'=VALMBEG:0,1:SDEND=VALMEND) W !!,"Date range was not changed." D PAUSE^VALM1 S VALMBCK="" G DATEQ
"RTN","SDAM2",124,0)
 S SDBEG=VALMBEG,SDEND=VALMEND
"RTN","SDAM2",125,0)
 I SDAMTYP="P" D BLD^SDAM1
"RTN","SDAM2",126,0)
 I SDAMTYP="C" D BLD^SDAM3
"RTN","SDAM2",127,0)
 S VALMBCK="R"
"RTN","SDAM2",128,0)
DATEQ K VALMB,VALMBEG,VALMEND Q
"RTN","SDAM2",129,0)
 ;
"RTN","SDAM2",130,0)
INP(DFN,VDATE) ; -- determine inpatient status ; dom is not an inpatient appt
"RTN","SDAM2",131,0)
 N SDINP,VAINDT,VADMVT
"RTN","SDAM2",132,0)
 S SDINP="",VAINDT=VDATE D ADM^VADPT2 G INPQ:'VADMVT
"RTN","SDAM2",133,0)
 I $P(^DG(43,1,0),U,21),$P($G(^DIC(42,+$P($G(^DGPM(VADMVT,0)),U,6),0)),U,3)="D" G INPQ
"RTN","SDAM2",134,0)
 S SDINP="I"
"RTN","SDAM2",135,0)
INPQ Q SDINP
"RTN","SDAM2",136,0)
 ;
"RTN","SDAM2",137,0)
VALID(DFN,SDCL,SDT,SDDA) ; -- return valid appt.
"RTN","SDAM2",138,0)
 ; **NOTE:  For speed consideration the ^SC and ^DPT nodes must be
"RTN","SDAM2",139,0)
 ;          check to see they exist prior to calling this entry point.
"RTN","SDAM2",140,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDAM2",141,0)
 ;                 SDT := appt d/t
"RTN","SDAM2",142,0)
 ;                SDCL := ifn of clinic
"RTN","SDAM2",143,0)
 ;                SDDA := ifn of appt
"RTN","SDAM2",144,0)
 ;  output: [returned] := 1 for valid appt., 0 for not valid
"RTN","SDAM2",145,0)
 Q $S($P(^SC(SDCL,"S",SDT,1,SDDA,0),U,9)'="C":1,$P(^DPT(DFN,"S",SDT,0),U,2)["C":1,1:0)
"RTN","SDAMWI1")
0^128^B14489968^B10737470
"RTN","SDAMWI1",1,0)
SDAMWI1 ;ALB/MJK - Walk-Ins (cont.) ;JAN 15, 2016
"RTN","SDAMWI1",2,0)
 ;;5.3;Scheduling;**94,167,206,168,544,627**;Aug 13, 1993;Build 249
"RTN","SDAMWI1",3,0)
 ;
"RTN","SDAMWI1",4,0)
MAKE(DFN,SDCL,SDT) ; -- set globals for appt
"RTN","SDAMWI1",5,0)
 ;    input:     DFN ; SDCL := clinic# ; SDT := appt d/t
"RTN","SDAMWI1",6,0)
 ; returned: success := 1
"RTN","SDAMWI1",7,0)
 ;
"RTN","SDAMWI1",8,0)
 N SD,SDAP,SDINP,SC,DA,DIK
"RTN","SDAMWI1",9,0)
 S SC=SDCL,X=SDT,SDINP=$$INP^SDAM2(DFN,SDT)
"RTN","SDAMWI1",10,0)
 S SD=SDT D EN1^SDM3
"RTN","SDAMWI1",11,0)
 S:'$D(^DPT(DFN,"S",0)) ^(0)="^2.98P^^"
"RTN","SDAMWI1",12,0)
 S ^DPT(DFN,"S",SDT,0)=SC_"^"_$$STATUS^SDM1A(SC,SDINP,SDT)_"^^^^^4^^^^^^^^^"_SDAPTYP_"^^"_$G(DUZ)_"^"_DT_"^^^^^"_$G(SDXSCAT)_"^W^0"
"RTN","SDAMWI1",13,0)
 ;xref DATE APPT. MADE field
"RTN","SDAMWI1",14,0)
 D
"RTN","SDAMWI1",15,0)
 .N DIV
"RTN","SDAMWI1",16,0)
 .S DA=SDT,DA(1)=DFN,DIK="^DPT(DA(1),""S"",",DIK(1)=20 D EN1^DIK
"RTN","SDAMWI1",17,0)
 .Q
"RTN","SDAMWI1",18,0)
 F I=1:1 I '$D(^SC(SC,"S",SDT,1,I)) S:'$D(^(0)) ^(0)="^44.003PA^^" S ^(I,0)=DFN_"^"_SDSL_"^^^^"_DUZ_"^"_DT,^SC(SC,"S",SDT,0)=SDT,SDDA=I D RT,EVT,DUAL,ROUT(DFN) Q
"RTN","SDAMWI1",19,0)
 S SDAP=$$APPTGET^SDECUTL(DFN,SDT,SDCL)  ;get SDEC APPOINTMENT ien
"RTN","SDAMWI1",20,0)
 I SDAP="" D SDEC   ;alb/sat 627
"RTN","SDAMWI1",21,0)
 ;update availability grid
"RTN","SDAMWI1",22,0)
 N HSI,SDDIF,SI,SL,STARTDAY,STR,SDNOT,X,SB,Y,S,I,ST,SS,SM
"RTN","SDAMWI1",23,0)
 S SD=SDT,SC=SDCL
"RTN","SDAMWI1",24,0)
 I '$D(^SC(SC,"ST",$P(SD,"."),1)) Q 1
"RTN","SDAMWI1",25,0)
  S SL=^SC(+SC,"SL"),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDAMWI1",26,0)
SC L +^SC(SC,"ST",$P(SD,"."),1):5 G:'$T SC S S=^SC(SC,"ST",$P(SD,"."),1) S I=SD#1-SB*100,ST=I#1*SI\.6+($P(I,".")*SI),SS=SL*HSI/60*SDDIF+ST+ST G C:(I<1!'$F(S,"["))&(S'["CAN")
"RTN","SDAMWI1",27,0)
 S SM=0
"RTN","SDAMWI1",28,0)
 I SM<7 S %=$F(S,"[",SS-1) S:'%!($P(SL,"^",6)<3) %=999 I $F(S,"]",SS)'<%!(SDDIF=2&$E(S,ST+ST+1,SS-1)["[") S SM=7
"RTN","SDAMWI1",29,0)
SP I ST+ST>$L(S) S S=S_"  " G SP
"RTN","SDAMWI1",30,0)
 S SDNOT=1 F I=ST+ST:SDDIF:SS-SDDIF S ST=$E(S,I+1) S:ST="" ST=" " S Y=$E(STR,$F(STR,ST)-2) G C:S["CAN"!(ST="X"&($D(^SC(+SC,"ST",$P(SD,"."),"CAN")))),C:Y="" S:Y'?1NL&(SM<6) SM=6 S ST=$E(S,I+2,999) S:ST="" ST=" " S S=$E(S,1,I)_Y_ST
"RTN","SDAMWI1",31,0)
 S ^SC(+SC,"ST",$P(SD,"."),1)=S
"RTN","SDAMWI1",32,0)
C L -^SC(+SC,"ST",$P(SD,"."),1)
"RTN","SDAMWI1",33,0)
 Q 1
"RTN","SDAMWI1",34,0)
 ;
"RTN","SDAMWI1",35,0)
SDEC  ;update SDEC APPOINTMENT file 409.84  ;alb/sat 627
"RTN","SDAMWI1",36,0)
 N SDAPPT,SDRES  ;alb/sat 627 - add SDAPPT
"RTN","SDAMWI1",37,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDAMWI1",38,0)
 S:SDAPTYP="" SDAPTYP=$$GET1^DIQ(44,SDCL_",",2507,"I")
"RTN","SDAMWI1",39,0)
 I $G(SDWL)="" N SDCLN S SDCLN=$$GET1^DIQ(44,SDCL_",",.01) S SDAPPT=$$SDWLA^SDM1A(DFN,SDT,SDCLN,$P(SDT,".",1),SDAPTYP)
"RTN","SDAMWI1",40,0)
 S SDRES=$$GETRES^SDECUTL(SDCL)
"RTN","SDAMWI1",41,0)
 D SDECADD^SDEC07(SDT,$$FMADD^XLFDT(SDT,,,+$G(SL)),DFN,SDRES,"WALKIN",$P(SDT,".",1),"",$S($G(SDWL)'="":"E|"_SDWL,1:"A|"_SDAPPT),,SDCL,,,,SDAPTYP) ;ADD SDEC APPOINTMENT ENTRY
"RTN","SDAMWI1",42,0)
 Q
"RTN","SDAMWI1",43,0)
 ;end additional/modification  ;alb/sat 627
"RTN","SDAMWI1",44,0)
 ;
"RTN","SDAMWI1",45,0)
RT ; -- request record
"RTN","SDAMWI1",46,0)
 S SDRT="A",SDTTM=SDT,SDPL=I,SDSC=SC D RT^SDUTL
"RTN","SDAMWI1",47,0)
 Q
"RTN","SDAMWI1",48,0)
 ;
"RTN","SDAMWI1",49,0)
ROUT(DFN) ; -- print routing slip
"RTN","SDAMWI1",50,0)
 S DIR("A")="DO YOU WANT TO PRINT A ROUTING SLIP NOW",DIR(0)="Y"
"RTN","SDAMWI1",51,0)
 W ! D ^DIR K DIR G ROUTQ:$D(DIRUT)!(Y=0)
"RTN","SDAMWI1",52,0)
 K IOP S (SDX,SDSTART,ORDER,SDREP)="" D EN^SDROUT1
"RTN","SDAMWI1",53,0)
ROUTQ Q
"RTN","SDAMWI1",54,0)
 ;
"RTN","SDAMWI1",55,0)
DUAL ; -- ask elig if pt has more than one
"RTN","SDAMWI1",56,0)
 I $O(VAEL(1,0))>0 S SDEMP="" D ELIG^SDM4:"369"[SDAPTYP S SDEMP=$S(SDDECOD:SDDECOD,1:SDEMP) I +SDEMP S $P(^SC(SC,"S",SDT,1,I,0),"^",10)=+SDEMP K SDEMP
"RTN","SDAMWI1",57,0)
 Q
"RTN","SDAMWI1",58,0)
 ;
"RTN","SDAMWI1",59,0)
EVT ; -- separate if need to NEW vars
"RTN","SDAMWI1",60,0)
 N I,DIV D MAKE^SDAMEVT(DFN,SDT,SDCL,SDDA,0)
"RTN","SDAMWI1",61,0)
 Q
"RTN","SDAPIAP")
0^124^B10732233^B8835503
"RTN","SDAPIAP",1,0)
SDAPIAP ;ALB/MJK - Outpatient API/Appointments ;JAN 15, 2016
"RTN","SDAPIAP",2,0)
 ;;5.3;Scheduling;**27,132,627**;08/13/93;Build 249
"RTN","SDAPIAP",3,0)
 ;
"RTN","SDAPIAP",4,0)
EN(DFN,SDT,SDCL,SDUZ,SDMODE,SDVIEN) ; -- check api for appts
"RTN","SDAPIAP",5,0)
 N SDDA,SDOE
"RTN","SDAPIAP",6,0)
 S SDOE=0
"RTN","SDAPIAP",7,0)
 ; -- verify that check-out can occur
"RTN","SDAPIAP",8,0)
 D CHECK(DFN,SDT,SDCL,.SDDA) I $$ERRCHK^SDAPIER() G ENQ
"RTN","SDAPIAP",9,0)
 ;
"RTN","SDAPIAP",10,0)
 ; -- file check-out data ; get encounter ien
"RTN","SDAPIAP",11,0)
 S SDOE=$$FILE(DFN,SDT,SDCL,SDUZ,SDDA,SDMODE,$G(SDVIEN))
"RTN","SDAPIAP",12,0)
 ;
"RTN","SDAPIAP",13,0)
ENQ Q SDOE
"RTN","SDAPIAP",14,0)
 ;
"RTN","SDAPIAP",15,0)
CHECK(DFN,SDT,SDCL,SDDA) ; -- check if event can occur/allowed
"RTN","SDAPIAP",16,0)
 N SDATA,STATUS
"RTN","SDAPIAP",17,0)
 ; -- error if appt node doesn't exist
"RTN","SDAPIAP",18,0)
 S SDATA=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDAPIAP",19,0)
 I SDATA="" D ERRFILE^SDAPIER(100,SDT_U_DFN) G CHECKQ
"RTN","SDAPIAP",20,0)
 ;
"RTN","SDAPIAP",21,0)
 ; -- error if different clinic
"RTN","SDAPIAP",22,0)
 I +SDATA'=SDCL D ERRFILE^SDAPIER(101,+SDATA_U_SDCL) G CHECKQ
"RTN","SDAPIAP",23,0)
 ;
"RTN","SDAPIAP",24,0)
 ; -- error if no slot for appt
"RTN","SDAPIAP",25,0)
 S SDDA=$$FIND^SDAM2(DFN,SDT,SDCL) I 'SDDA D ERRFILE^SDAPIER(102,SDT_U_SDCL) G CHECKQ
"RTN","SDAPIAP",26,0)
 ;
"RTN","SDAPIAP",27,0)
 ; -- get appt status data
"RTN","SDAPIAP",28,0)
 S STATUS=$$STATUS^SDAM1(DFN,SDT,SDCL,SDATA,SDDA)
"RTN","SDAPIAP",29,0)
 ;
"RTN","SDAPIAP",30,0)
 ; -- error if current status won't allow checking-out
"RTN","SDAPIAP",31,0)
 I '$D(^SD(409.63,"ACO",1,+STATUS)) D ERRFILE^SDAPIER(103,$P(STATUS,";",2)) G CHECKQ
"RTN","SDAPIAP",32,0)
 ;
"RTN","SDAPIAP",33,0)
 ; -- warning if already checked-out
"RTN","SDAPIAP",34,0)
 I $P(STATUS,";",2)="CHECKED OUT" D ERRFILE^SDAPIER(1100)
"RTN","SDAPIAP",35,0)
 ;
"RTN","SDAPIAP",36,0)
 ; -- error if appt date if after today
"RTN","SDAPIAP",37,0)
 I SDT>(DT+.2359) D ERRFILE^SDAPIER(104,SDT) G CHECKQ
"RTN","SDAPIAP",38,0)
CHECKQ Q
"RTN","SDAPIAP",39,0)
 ;
"RTN","SDAPIAP",40,0)
FILE(DFN,SDT,SDCL,SDUZ,SDDA,SDMODE,SDVIEN) ; -- file data
"RTN","SDAPIAP",41,0)
 N SDATA,SDHDL,SDOE,SDCOMPF,SDLOG
"RTN","SDAPIAP",42,0)
 S SDOE=""
"RTN","SDAPIAP",43,0)
 ;
"RTN","SDAPIAP",44,0)
 ; -- setup event driver data
"RTN","SDAPIAP",45,0)
 D BEFORE^SDCO1(.SDATA,DFN,SDT,SDCL,SDDA,.SDHDL)
"RTN","SDAPIAP",46,0)
 ;
"RTN","SDAPIAP",47,0)
 ; -- set elig for appt
"RTN","SDAPIAP",48,0)
 D ELIG^SDCO1(DFN,SDT,SDCL,SDDA) ; may need to expand
"RTN","SDAPIAP",49,0)
 ;
"RTN","SDAPIAP",50,0)
 ; -- get encounter ien ; error if none returned
"RTN","SDAPIAP",51,0)
 S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL,$G(SDVIEN))
"RTN","SDAPIAP",52,0)
 I 'SDOE D ERRFILE^SDAPIER(110) G FILEQ
"RTN","SDAPIAP",53,0)
 ;
"RTN","SDAPIAP",54,0)
 ; -- time stamp check-out and log data
"RTN","SDAPIAP",55,0)
 D DT(DFN,SDT,SDCL,SDDA,$G(@SDROOT@("DATE/TIME")))
"RTN","SDAPIAP",56,0)
 D LOGDATA(SDOE)
"RTN","SDAPIAP",57,0)
 ;
"RTN","SDAPIAP",58,0)
 ; -- update SDEC APPOINTMENT  ;alb/sat 627
"RTN","SDAPIAP",59,0)
 I $G(@SDROOT@("DATE/TIME")) D
"RTN","SDAPIAP",60,0)
 .N SDECAPPT,SDECVPRV
"RTN","SDAPIAP",61,0)
 .S SDECAPPT=$$APPTGET^SDECUTL(DFN,SDT,SDCL)  ;get SDEC APPOINTMENT ien
"RTN","SDAPIAP",62,0)
 .S SDECVPRV=$O(^AUPNVPRV("AD",+$G(SDVIEN),0))
"RTN","SDAPIAP",63,0)
 .D CO1^SDEC25B(SDECAPPT,@SDROOT@("DATE/TIME"),SDOE,SDECVPRV)  ;call update
"RTN","SDAPIAP",64,0)
 ;end addition/modification  ;alb/sat 627
"RTN","SDAPIAP",65,0)
 ;
"RTN","SDAPIAP",66,0)
 ; -- process data
"RTN","SDAPIAP",67,0)
 D FILE^SDAPICO(SDOE,SDUZ)
"RTN","SDAPIAP",68,0)
 ;
"RTN","SDAPIAP",69,0)
 ; -- update check-out completion
"RTN","SDAPIAP",70,0)
 D EN^SDCOM(SDOE,SDMODE,SDHDL,.SDCOMPF)
"RTN","SDAPIAP",71,0)
 ;
"RTN","SDAPIAP",72,0)
 ; -- set visit change flag for event driver
"RTN","SDAPIAP",73,0)
 D CHANGE^SDAMEVT4(.SDHDL,$P($G(^SCE(SDOE,0)),U,8),$G(@SDROOT@("VISIT CHANGE FLAGS")))
"RTN","SDAPIAP",74,0)
 ;
"RTN","SDAPIAP",75,0)
 ; -- get after values and invoke event driver
"RTN","SDAPIAP",76,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDHDL)
"RTN","SDAPIAP",77,0)
 D EVT^SDAMEVT(.SDATA,5,SDMODE,SDHDL)
"RTN","SDAPIAP",78,0)
 ;
"RTN","SDAPIAP",79,0)
 ; -- cleanup event driver vars
"RTN","SDAPIAP",80,0)
 D CLEAN^SDAMEVT(SDHDL)
"RTN","SDAPIAP",81,0)
 ;
"RTN","SDAPIAP",82,0)
FILEQ Q SDOE
"RTN","SDAPIAP",83,0)
 ;
"RTN","SDAPIAP",84,0)
DT(DFN,SDT,SDCL,SDDA,SDCODT) ; -- time stamp check out date
"RTN","SDAPIAP",85,0)
 ; -- NOTE: this code duplicates at DT^SDCO1 but silent
"RTN","SDAPIAP",86,0)
 N %DT,DR,SDCIDT,X,DIE,DA
"RTN","SDAPIAP",87,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDAPIAP",88,0)
 S X=$G(^SC(SDCL,"S",SDT,1,SDDA,"C")),SDCIDT=+X
"RTN","SDAPIAP",89,0)
 ;IF $P(X,U,3) G DTQ
"RTN","SDAPIAP",90,0)
 S DR="" IF $G(SDCODT) S DR="303R////"_$S(SDCODT<SDCIDT:SDCIDT,1:SDCODT)
"RTN","SDAPIAP",91,0)
 IF DR]"" D DIE^SDCO1(SDCL,SDT,SDDA,DR)
"RTN","SDAPIAP",92,0)
DTQ Q
"RTN","SDAPIAP",93,0)
 ;
"RTN","SDAPIAP",94,0)
LOGDATA(SDOE,SDLOG) ; -- log user, date/time and other data
"RTN","SDAPIAP",95,0)
 N DIE,DA,DR,Y,X
"RTN","SDAPIAP",96,0)
 S SDLOG("USER")=$S(+$G(SDUZ):+SDUZ,1:$G(DUZ)) ; -- editing user
"RTN","SDAPIAP",97,0)
 S SDLOG("DATE/TIME")=$$NOW^XLFDT()            ; -- last edited
"RTN","SDAPIAP",98,0)
 S DIE="^SCE(",DA=SDOE,DR="[SD ENCOUNTER LOG]" D ^DIE
"RTN","SDAPIAP",99,0)
 Q
"RTN","SDAPIAP",100,0)
 ;
"RTN","SDAUT2")
0^162^B42702600^B31407723
"RTN","SDAUT2",1,0)
SDAUT2 ;MAN/GRR - LOOK FOR OPEN SLOTS ;JAN 15, 2016
"RTN","SDAUT2",2,0)
 ;;5.3;Scheduling;**206,168,186,478,627**;Aug 13, 1993;Build 249
"RTN","SDAUT2",3,0)
 K SDNOSH
"RTN","SDAUT2",4,0)
EN1 S (FND,DUPE)=0,NDATE="",SDSOH=$S('$D(^SC(SC,"SL")):0,$P(^("SL"),"^",8)']"":0,1:1) I $S('$D(^DPT(+A,.35)):0,$P(^(.35),"^",1)']"":0,1:1) S MESS="NOT REBOOKED, PATIENT HAS DIED" G END
"RTN","SDAUT2",5,0)
 S MESS="" K SDPAT S:'$D(J) SDPAT="" F NDATE=SDSTRTDT-1:0 S NDATE=$O(^SC(SC,"ST",NDATE)) Q:NDATE'>0!(NDATE>ENDATE)!(FND)  I ^(NDATE,1)["[",$E(NDATE,6,7) S Z=^(1) I '$D(^HOLIDAY(NDATE))!(SDSOH) S HNDATE=NDATE D SRCH Q:FND
"RTN","SDAUT2",6,0)
 I 'FND,$D(SDPAT) S NDATE="",MESS="NOT REBOOKED, NO PATTERN FOUND" G END
"RTN","SDAUT2",7,0)
 I 'FND S NDATE="",MESS="NOT REBOOKED, NO OPEN SLOTS" G END
"RTN","SDAUT2",8,0)
 ;
"RTN","SDAUT2",9,0)
 ;**186**  MLR 11/30/00  Checking date for "non-cancelled" appointments
"RTN","SDAUT2",10,0)
 D DUPE
"RTN","SDAUT2",11,0)
 ;
"RTN","SDAUT2",12,0)
 N SDATA,SDDA,SDABHDL S SDDA=L,SDABHDL=$$HANDLE^SDAMEVT(1) D BEFORE^SDAMEVT(.SDATA,+A,GDATE,SC,SDDA,SDABHDL)
"RTN","SDAUT2",13,0)
 S NDATE=CKDATE,DNODE=^DPT(+A,"S",GDATE,0),$P(DNODE,"^",2)=$S($D(SDNOSH):"NA",$D(SDCP):$S(SDCP:"PCA",1:"CA"),1:"CA"),$P(DNODE,"^",10)=NDATE D STORE S ^DPT(+A,"S",NDATE,0)=HOLD,^DPT(+A,"S",GDATE,0)=DNODE,^SC(SC,"S",NDATE,1,0)="^44.003PA^^"
"RTN","SDAUT2",14,0)
 ;xref DATE APPT. MADE field
"RTN","SDAUT2",15,0)
 D
"RTN","SDAUT2",16,0)
 .N DIV,DA,DIK
"RTN","SDAUT2",17,0)
 .S DA=NDATE,DA(1)=+A,DIK="^DPT(DA(1),""S"",",DIK(1)=20 D EN1^DIK
"RTN","SDAUT2",18,0)
 .Q
"RTN","SDAUT2",19,0)
 I '$D(SDCP) S SDNODE=^SC(SC,"S",GDATE,1,L,0)
"RTN","SDAUT2",20,0)
 N LNK,CY
"RTN","SDAUT2",21,0)
 K QT S ^SC(SC,"ST",HNDATE,1)=Z,^SC(SC,"S",NDATE,0)=NDATE F CY=1:1 I '$D(^SC(SC,"S",NDATE,1,CY)) D  Q:$D(QT)  ;SD/478
"RTN","SDAUT2",22,0)
 .S ^(CY,0)=+A_"^"_LEN,$P(^SC(SC,"S",NDATE,1,CY,0),"^",4,8)=$P(SDNODE,"^",4)_"^^"_$S($D(DUZ):DUZ,1:"")_"^"_DT_"^"_$P(SDNODE,"^",8) ;SD/478
"RTN","SDAUT2",23,0)
 .S TPAT=$P(SDNODE,U) I $D(AUTO(SC,$S($D(SDCP):SD,1:GDATE),TPAT)) S LNK=AUTO(SC,GDATE,TPAT) D AUTOREB^SDCNSLT(SC,NDATE,LNK,CY)  ;SD/478
"RTN","SDAUT2",24,0)
 .S QT=""  ;SD/478
"RTN","SDAUT2",25,0)
 S $P(^SC(SC,"S",NDATE,1,CY,0),"^",10)=$P(SDNODE,"^",10) ;SD/478
"RTN","SDAUT2",26,0)
 I $D(^SC("ARAD",SC,GDATE,+A)) S ^SC("ARAD",SC,NDATE,+A)=""
"RTN","SDAUT2",27,0)
 S SDTTM=NDATE,SDPL=CY,SDSC=SC,DFN=+A,SDRT="A" D RT^SDUTL,EVT ;SD/478
"RTN","SDAUT2",28,0)
END K ARG,BTIM,CKDATE,CNT,DIF,DISBEG,DNODE,FND,GOT,HDIF,HH1,HH2,HH3,HNDATE,HOLD,HSTM,HT1,HT2,HT3,INC,INCM,J,K,LEN,M,MM1,MM2,MM3,MMD,MMD2,NC,NS,NSTM,NTIM,REM,SDPAT,SDPL,SDSC,SDT20,SDTEST,SDTTM,STM,STR,TEMP,TM,WH,XK,^UTILITY($J,"I")
"RTN","SDAUT2",29,0)
 Q
"RTN","SDAUT2",30,0)
 ;
"RTN","SDAUT2",31,0)
DUPE ;**186**  MLR  Checking date for "non-cancelled" appointments prior to
"RTN","SDAUT2",32,0)
 ;11/30/00      setting "MULTIPLE APPNTS. ON CANCELLED DATE" message
"RTN","SDAUT2",33,0)
 N I S I=$P(GDATE,"."),DUPE=0
"RTN","SDAUT2",34,0)
 F  S I=$O(^DPT(+A,"S",I)) Q:'I!DUPE!($P(I,".")>GDATE)  D
"RTN","SDAUT2",35,0)
 . Q:I=GDATE
"RTN","SDAUT2",36,0)
 . I $P(^DPT(+A,"S",I,0),U,2)="I" S DUPE=1 Q
"RTN","SDAUT2",37,0)
 . I $P(^DPT(+A,"S",I,0),U,2)="" S DUPE=1 Q
"RTN","SDAUT2",38,0)
 . Q
"RTN","SDAUT2",39,0)
 Q  ;DUPE
"RTN","SDAUT2",40,0)
 ;
"RTN","SDAUT2",41,0)
SRCH I $D(SDCP),(GDATE\1)=NDATE Q
"RTN","SDAUT2",42,0)
 S LEN=$P(A,"^",2),INC=$P(^SC(SC,"SL"),"^",6),DISBEG=$P(^("SL"),"^",3),STR="123456789jklmnopqrstuvwxyz",INCM=$S(INC=4:15,INC=3:20,INC=6:10,INC=2:30,INC=1:60,1:0) G:INCM=0 NO S SDDIF=$S(INC<3:8/INC,1:2) K SDTEST N SDIV S SDIV=""
"RTN","SDAUT2",43,0)
 S:$D(^SC(+SC,0)) SDIV=$S('$P(^(0),"^",15):$O(^DG(40.8,0)),1:$P(^(0),"^",15)) I $D(^DG(40.8,+SDIV,"LTR")) F XK=3,4,5 I $P(^DPT(+A,"S",GDATE,0),"^",XK)]"" S TEMP=$P($P(^(0),"^",XK),".",2),SDTEST(XK)=$P(^DG(40.8,SDIV,"LTR"),"^",(XK-1)) D FTM,FTM3
"RTN","SDAUT2",44,0)
 S BTIM=$S($D(^SC(SC,"SDP")):$P(^("SDP"),"^",3),1:""),BTIM=$S($E(+$O(SDTEST("")),2,999)>BTIM:$E(+$O(SDTEST("")),2,999),1:BTIM) S:DISBEG="" DISBEG=8
"RTN","SDAUT2",45,0)
 S NS=LEN\INCM,ST=$F(Z,"["),GOT=0,INC=$S(INC<3:4,1:INC)
"RTN","SDAUT2",46,0)
 I BTIM]"" S ARG=INC*2,DIF=BTIM-DISBEG S:DIF>0 ST=DIF*ARG+ARG+1
"RTN","SDAUT2",47,0)
 S CNT=0 F J=0:SDDIF:80 Q:$E(Z,ST+J,80)'["]"  S K=$E(Z,ST+J),CNT=$S(K]""&(STR[K):CNT+1,1:0) S:$S(STR[K:0,K?1A!(K=0):0,1:1) SDST=$F(Z,"[",ST+J),J=$S('SDST:80,1:SDST-SDDIF-ST) I CNT=NS D MORE Q:GOT  S CNT=0
"RTN","SDAUT2",48,0)
 Q
"RTN","SDAUT2",49,0)
MORE S TM=(NS-1)*SDDIF,STM=ST+J-TM,NSTM=STM-1/(INC*2)-1,HSTM=$P(NSTM,".",1)+DISBEG,HSTM=$S(HSTM<10:".0"_HSTM,1:"."_HSTM)
"RTN","SDAUT2",50,0)
 I NSTM\1'=NSTM S REM="."_$E($P(NSTM,".",2),1,3),MIN=REM*60+.1,HSTM=HSTM_$P(MIN,".",1)
"RTN","SDAUT2",51,0)
 S CKDATE=NDATE_HSTM,CKDATE=+CKDATE I $D(^DPT(+A,"S",CKDATE,0)),$P(^(0),"^",2)'["C" Q
"RTN","SDAUT2",52,0)
 S FND=1,GOT=1 F M=STM:SDDIF:STM+(NS*SDDIF)-2 S CHAR=$E(Z,M,M),WH=$F(STR,CHAR)-2,NC=$S(WH<1:0,1:$E(STR,WH,WH)),Z=$E(Z,1,M-1)_NC_$E(Z,M+1,99)
"RTN","SDAUT2",53,0)
 Q
"RTN","SDAUT2",54,0)
STORE S SDINP=$$INP^SDAM2(+A,NDATE)
"RTN","SDAUT2",55,0)
 S HOLD=SC_"^"_$$STATUS^SDM1A(SC,SDINP,NDATE)_"^"_$P(^DPT(+A,"S",GDATE,0),"^",3,5)_"^^"_$P(^(0),"^",7,9)_"^^"_$P(^(0),"^",11)_"^^"_$P(^(0),"^",13)_"^^^"_$P(^(0),"^",16)_"^^^"_DT_"^^^^^^A^0"
"RTN","SDAUT2",56,0)
 F XK=3,4,5 I $P(HOLD,"^",XK)]"" S TEMP=$P($P(HOLD,"^",XK),".",2) D FTM,FTM1 S TEMP=HNDATE_NTIM,$P(HOLD,"^",XK)=TEMP K SDINP
"RTN","SDAUT2",57,0)
 Q
"RTN","SDAUT2",58,0)
FTM S HT1="."_$P(GDATE,".",2)+.000001,HT2="."_TEMP+.000001,HT3="."_$P(NDATE,".",2)+.000001,HH1=$E(HT1,1,3),MM1=$E(HT1,4,5),HH2=$E(HT2,1,3),MM2=$E(HT2,4,5)
"RTN","SDAUT2",59,0)
 I MM2>MM1 S MM1=MM1+60,HH1=HH1-.01
"RTN","SDAUT2",60,0)
 S MMD=MM1-MM2,HDIF=HH1-HH2 Q
"RTN","SDAUT2",61,0)
FTM1 S HH3=$E(HT3,1,3),MM3=$E(HT3,4,5)
"RTN","SDAUT2",62,0)
 I MMD>MM3 S MM3=MM3+60,HH3=HH3-.01
"RTN","SDAUT2",63,0)
 S MMD2=MM3-MMD,HH3=HH3-HDIF,NTIM=HH3_MMD2,NTIM=+NTIM
"RTN","SDAUT2",64,0)
 Q
"RTN","SDAUT2",65,0)
FTM3 S HH1="."_$E(SDTEST(XK),1,2),MM1=$E(SDTEST(XK),3,4),MM2=MM1+MMD S:MM2>59 MM2=MM2-60,HDIF=HDIF+.01 S HH2=HH1+HDIF,HH2=HH2*100 S:MM2>0 HH1=HH1+.01 S SDTEST(-(HH2))="" K SDTEST(XK)
"RTN","SDAUT2",66,0)
 Q
"RTN","SDAUT2",67,0)
NO W !,"THIS CLINIC IS MISSING THE INCREMENTS PER HOUR FIELD, CANNOT REBOOK",! K ^UTILITY($J,"I") Q
"RTN","SDAUT2",68,0)
 ;
"RTN","SDAUT2",69,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDAUT2",70,0)
 ; -- noshow event
"RTN","SDAUT2",71,0)
 I $D(SDNOSH) D NOSHOW^SDAMEVT(.SDATA,DFN,GDATE,SDSC,SDDA,0,SDABHDL)
"RTN","SDAUT2",72,0)
 ; -- cancel event
"RTN","SDAUT2",73,0)
 I '$D(SDNOSH) D CANCEL^SDAMEVT(.SDATA,DFN,GDATE,SDSC,SDDA,0,SDABHDL)
"RTN","SDAUT2",74,0)
 N SDGDATE S SDGDATE=GDATE ;ALB/SAT 627 - save prev appt datetime
"RTN","SDAUT2",75,0)
 ; -- make appt evt
"RTN","SDAUT2",76,0)
 N NDATE,GDATE,A,SDCL,B,A8,SDCTRL,CNT,SDWH,SDCP,SDMSG,SDCTR K SDATA
"RTN","SDAUT2",77,0)
 D MAKE^SDAMEVT(DFN,SDTTM,SDSC,SDPL,0)
"RTN","SDAUT2",78,0)
 ;ALB/SAT 627 - also change SDEC files on auto rebook
"RTN","SDAUT2",79,0)
 D ADDSDEC(DFN,SDTTM,SDSC,SDGDATE)
"RTN","SDAUT2",80,0)
 Q
"RTN","SDAUT2",81,0)
ADDSDEC(DFN,SD,SC,SDGDATE) ;ALB/SAT 627 - Add SDEC file changes
"RTN","SDAUT2",82,0)
 N APIEN,APPTYPE,EESTAT,FOUND,PROVIEN
"RTN","SDAUT2",83,0)
 N SDAPTYP,SDDDT,SDECATID,SDECEND,SDECNOTE,SDECRESD
"RTN","SDAUT2",84,0)
 N STATUS,WALKIN,ZNODE
"RTN","SDAUT2",85,0)
 S FOUND=0
"RTN","SDAUT2",86,0)
 S APIEN="" F  S APIEN=$O(^SDEC(409.84,"B",SDGDATE,APIEN)) Q:APIEN=""!(FOUND)  D
"RTN","SDAUT2",87,0)
 .I $P(^SDEC(409.84,APIEN,0),U,5)=DFN D
"RTN","SDAUT2",88,0)
 ..S ZNODE=^SDEC(409.84,APIEN,0),FOUND=1
"RTN","SDAUT2",89,0)
 ..S SDECEND=$P(ZNODE,U,2)
"RTN","SDAUT2",90,0)
 ..S APPTYPE=$P(ZNODE,U,6)
"RTN","SDAUT2",91,0)
 ..S SDECRESD=$P(ZNODE,U,7)
"RTN","SDAUT2",92,0)
 ..S WALKIN=$P(ZNODE,U,13)
"RTN","SDAUT2",93,0)
 ..S PROVIEN=$P(ZNODE,U,16)
"RTN","SDAUT2",94,0)
 ..S STATUS=$P(ZNODE,U,17)
"RTN","SDAUT2",95,0)
 ..S SDDDT=$P(ZNODE,U,20)
"RTN","SDAUT2",96,0)
 ..S SDAPTYP=$P(^SDEC(409.84,APIEN,2),U)
"RTN","SDAUT2",97,0)
 ..S EESTAT=$P(^SDEC(409.84,APIEN,2),U,2)
"RTN","SDAUT2",98,0)
 ..S SDECNOTE=$$GETNOTE(APIEN)
"RTN","SDAUT2",99,0)
 Q:'FOUND
"RTN","SDAUT2",100,0)
 S SDAPTYP=$S($P(SDAPTYP,";",2)="SDWL(409.3,":"E",$P(SDAPTYP,";",2)="GMR(123,":"C",$P(SDAPTYP,";",2)="SD(403.5,":"R",$P(SDAPTYP,";",2)="SDEC(409.85,":"A",1:"")_"|"_$P(SDAPTYP,";")
"RTN","SDAUT2",101,0)
 S SDECATID=$S(WALKIN="y":"WALKIN",1:0)
"RTN","SDAUT2",102,0)
 D SDECADD^SDEC07(SD,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,"",SDAPTYP,PROVIEN,SC,SDECNOTE,SD,"",APPTYPE,EESTAT)
"RTN","SDAUT2",103,0)
 I $P(SDAPTYP,"|")="A" D
"RTN","SDAUT2",104,0)
 .N RET,INP,ARIEN
"RTN","SDAUT2",105,0)
 .S ARIEN=$P(SDAPTYP,"|",2)
"RTN","SDAUT2",106,0)
 .S INP(1)=ARIEN,INP(2)="SA",INP(3)=$G(DUZ),INP(4)=DT
"RTN","SDAUT2",107,0)
 .D ARCLOSE1^SDEC(.RET,.INP)
"RTN","SDAUT2",108,0)
 Q
"RTN","SDAUT2",109,0)
GETNOTE(APIEN) ;ALB/SAT 627 - Add SDEC file changes
"RTN","SDAUT2",110,0)
 N SDECIEN,SDNOTE
"RTN","SDAUT2",111,0)
 S SDNOTE=""
"RTN","SDAUT2",112,0)
 I $D(^SDEC(409.84,APIEN,1)) D
"RTN","SDAUT2",113,0)
 .S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.84,APIEN,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDAUT2",114,0)
 ..S SDNOTE=SDNOTE_$G(^SDEC(409.84,APIEN,1,SDECIEN,0))
"RTN","SDAUT2",115,0)
 Q SDNOTE
"RTN","SDB")
0^136^B18505043^B18180788
"RTN","SDB",1,0)
SDB ;FLA/RF,BSN/GRR - SET UP A CLINIC ;JAN 15, 2016
"RTN","SDB",2,0)
 ;;5.3;Scheduling;**20,63,167,455,568,586,627**;Aug 13, 1993;Build 249
"RTN","SDB",3,0)
 ;
"RTN","SDB",4,0)
 ; ICDFMT Added for Patch SD*5.3*586 - ICD10 remediation
"RTN","SDB",5,0)
 N ICDFMT
"RTN","SDB",6,0)
 S SDTOP=1,SDZQ=1 K SDREACT
"RTN","SDB",7,0)
C Q:$D(SDREACT)!('$D(SDTOP))  W !! D DT^DICRW S (DLAYGO,DIC)=44,DIC(0)="MAQEZL",DIC("A")="Select CLINIC NAME: ",DIC("DR")="2////C",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))" K SDREACT
"RTN","SDB",8,0)
 D TURNON^DIAUTL(44,".01;8;2502;2503;2505;2506")
"RTN","SDB",9,0)
 D ^DIC K DIC("A"),DIC("S") G:Y<0 END S DIE=44,DA=+Y S:$P(Y,U,3)=1 DIE("NO^")=""
"RTN","SDB",10,0)
 K SDIN,SDINH,SDRE,SDRE1 I $D(^SC(DA,"I")),+^("I")>0 S SDIN=+^("I"),SDINH=SDIN,SDRE=+$P(^("I"),"^",2)
"RTN","SDB",11,0)
 S DR="[SDB]",ICDFMT=4 S:'$D(^SC(DA,"ST",0)) ^SC(DA,"ST",0)="^44.005" D ^DIE K DIE("NO^")
"RTN","SDB",12,0)
EN ;Q:$D(SDONE)&('$D(SDTOP))  SD*5.3*455 added 2nd Go on next line
"RTN","SDB",13,0)
 D:$P(^SC(DA,0),U,3)="C" SDRES^SDECUTL2(DA)   ;alb/sat 627
"RTN","SDB",14,0)
 G C:'$D(^SC(DA,"SL")) G C:'+$G(^SC(DA,"SL")) S SL=^("SL"),STARTDAY=8,X=$P(SL,U,3),D=$P(SL,U,6),SI=$S(D:D,1:4),DIC(0)="MAQEZL",(DIC,DIE)="^SC("_DA_",""T"",",DIC("W")=$P($T(DOW),";",3) S:'$D(^("T",0)) ^(0)="^44.002D" S:$L(X) STARTDAY=X
"RTN","SDB",15,0)
 ;K SDREACT
"RTN","SDB",16,0)
G1 D:$D(SDREACT)&('$D(SDTOP)) E1 S SI=$P(SL,"^",6) K Y,HY S SDFSW="" S:$D(SDINH) SDIN=SDINH D PRINT
"RTN","SDB",17,0)
 S (SDREB,SDEL)=0,(SDSAV,SDPAT)="" R !!,"AVAILABILITY DATE: ",X:DTIME Q:U[X&$D(SDREACT)  G C:U[X S %DT="EFX" K Y D ^%DT G HLPD^SDB1:X["?" S POP=0 I $D(SDIN),$S(SDIN>Y!(SDIN=0):0,(SDRE'>Y&(SDRE'=0))!(SDRE=0&(SDIN=0)):0,1:1) D INACT G:POP G1
"RTN","SDB",18,0)
 G EN:$D(SDONE)&(Y<0)&('$D(SDTOP)),EN:$D(SDREACT)&(Y<0),C:Y<0&('$D(SDREACT)) S SD=Y,X=Y D DOW^SDM0 S DOW=Y
"RTN","SDB",19,0)
 D EN1^SDB0 Q:$D(SDREACT)
"RTN","SDB",20,0)
END K %,%DT,%H,C,CCXN,CNT,COLLAT,CTR,D0,DA,DFN,DG,DGO,DH,DI,DIC,DIE,DIFLD,DIK,DK,DL,DLAYGO,DM,DOW,DR,ENDATE,H1,H2,HSI,I,J,LT,M1,M2,MAX,NSL,POP,S,SB,SC,SD,SDAV,SDCL,SDDIF,SDEL,SDFSW,SDHX,SDIN,SDINA,SDINH,SDREACT,SDSDL,SDL,SDLA,SDMAX,SDMM,SDPAT
"RTN","SDB",21,0)
 K SDRE,SDREB,SDRVE,SDSAV,SDSOH,SDT,SDTOP,SDW,SDZQ,SDA1,SI,SL,SLT,SM,SS,SDSTRTDT,STARTDAY,STIME,STR,T1,T2,WY,X,Y,Y1,ZDX,DIRUT
"RTN","SDB",22,0)
 Q
"RTN","SDB",23,0)
INACT Q:Y<0  S POP=1,Y=SDIN D DTS^SDUTL S Y1=Y,Y=SDRE D:Y DTS^SDUTL W !,*7,"Clinic is inactive",$S('SDRE:" as of ",1:" from "),Y1,$S('SDRE:"",1:" to "_Y) Q
"RTN","SDB",24,0)
 ;
"RTN","SDB",25,0)
E1 S:'$D(^SC(DA,"T"_DOW,9999999,1))&($O(^SC(DA,"T"_DOW,0))>0) ^SC(DA,"T"_DOW,9999999,1)="",^(0)=9999999 D TX^SDB1 S:'$D(SDRE) SDRE=D0 Q
"RTN","SDB",26,0)
DOW ;;S %=$E(^(0),1,3),I=$E(^(0),4,5),I=I>2&'(%#4)+$E("144025036146",I) X "F %=%:-1:281 S I=%#4=1+1+I" W "  ",$P("SUN^MON^TUES^WEDNES^THURS^FRI^SATUR",U,$E(^(0),6,7)+I#7+1),"DAY"
"RTN","SDB",27,0)
 Q
"RTN","SDB",28,0)
PRINT ;Print cancelled days
"RTN","SDB",29,0)
 N Y I '$D(^TMP("SDAVAIL",$J)) G PRINTQ
"RTN","SDB",30,0)
 W !,"Availability has been cancelled previously.  The day(s) has been overwritten",!,"with the new availability.  Would you like to see the day(s) that has been affected"
"RTN","SDB",31,0)
 S %=1 D YN^DICN G:%=-1!(%=2) PRINTQ I %=0 D HELP G PRINT
"RTN","SDB",32,0)
 S %ZIS="PMQ" D ^%ZIS I POP G PRINTQ
"RTN","SDB",33,0)
 I '$D(IO("Q")) G PRINT1
"RTN","SDB",34,0)
 S Y=$$QUE(0) G PRINTQ
"RTN","SDB",35,0)
 ;
"RTN","SDB",36,0)
PRINT1 N SDAVAIL,SDLINE S SDAVAIL=0,$P(SDLINE,"=",80)=""
"RTN","SDB",37,0)
 U IO W !,"Dates of Availability Previously Cancelled for "_$E($P($G(^SC(DA,0)),U),1,25),?70,$$FDATE^VALM1(DT),!,SDLINE
"RTN","SDB",38,0)
 F  S SDAVAIL=$O(^TMP("SDAVAIL",$J,SDAVAIL)) Q:'SDAVAIL  D
"RTN","SDB",39,0)
 .W !,$$FDATE^VALM1(SDAVAIL)_" "_$G(^TMP("SDAVAIL",$J,SDAVAIL))
"RTN","SDB",40,0)
 ;
"RTN","SDB",41,0)
PRINTQ K ^TMP("SDAVAIL",$J)
"RTN","SDB",42,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","SDB",43,0)
 Q
"RTN","SDB",44,0)
HELP ;
"RTN","SDB",45,0)
 W !,"Answer 'Y'es or 'N'o."
"RTN","SDB",46,0)
 Q
"RTN","SDB",47,0)
QUE(X) ; -- que job
"RTN","SDB",48,0)
 ; return: did job que [ 1|yes   0|no ]
"RTN","SDB",49,0)
 ;
"RTN","SDB",50,0)
 K ZTSK,IO("Q")
"RTN","SDB",51,0)
 S ZTDESC="Previously Cancelled Availability Dates",ZTRTN="PRINT1^SDB"
"RTN","SDB",52,0)
 F  S X=$O(^TMP("SDAVAIL",$J,X)) Q:'X  D
"RTN","SDB",53,0)
 .S ZTSAVE("^TMP(""SDAVAIL"",$J,")=^TMP("SDAVAIL",$J,X)
"RTN","SDB",54,0)
 S ZTSAVE("DA")=DA
"RTN","SDB",55,0)
 D ^%ZTLOAD W:$D(ZTSK) "   (Task: ",ZTSK,")"
"RTN","SDB",56,0)
 Q $D(ZTSK)
"RTN","SDB1")
0^134^B24033507^B23427765
"RTN","SDB1",1,0)
SDB1 ;ALB/GRR - SET UP A CLINIC ;JAN 15, 2016
"RTN","SDB1",2,0)
 ;;5.3;Scheduling;**20,183,221,567,627**;Aug 13, 1993;Build 249
"RTN","SDB1",3,0)
 ;
"RTN","SDB1",4,0)
 ;DH=PATTERN  DO=EXPIRATION DATE  X=START DATE
"RTN","SDB1",5,0)
B1 S DR=0,SB=STARTDAY-1/100,STR="{}&%?#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDONE=1
"RTN","SDB1",6,0)
 N SDX,SDSL,SL,SI,SDSI,SDSOH,STARTDAY,HSI
"RTN","SDB1",7,0)
SETX Q:'$D(^SC(DA,"SL"))  S SDSL=^("SL"),SL=+^("SL"),SDX=$P(SDSL,U,3),STARTDAY=$S($L(SDX):SDX,1:8),SDX=$P(SDSL,U,6),HSI=$S('SDX:4,SDX<3:8/SDX,1:2),SI=$S(SDX:SDX,1:4),SDSI=SI S:SI=1 SI=4 S:SI=2 SI=4 S SDSOH=$S($P(SDSL,U,8)']"":0,1:1)
"RTN","SDB1",8,0)
X I X'>DO,$G(^SC(DA,"ST",X,1))["**CANCELLED**"!($G(^SC(DA,"ST",X,1))["X") S ^TMP("SDAVAIL",$J,X)=^(1)
"RTN","SDB1",9,0)
 Q:(X'<DO)!(X'<(DT+50000))  I $D(^SC(DA,"ST",X,9)) S DR=X,SDSAV=0 G SM
"RTN","SDB1",10,0)
 K ^SC(DA,"ST",X) I DR<0,'$O(^(X)) Q
"RTN","SDB1",11,0)
 G X2:X+1<DR
"RTN","SDB1",12,0)
 S DR=+$O(^SC(DA,"S",X)),SDSAV=0 G X2:DR\1-X
"RTN","SDB1",13,0)
SM S SM=$P("SU^MO^TU^WE^TH^FR^SA",U,DOW+1)_" "_$E(X,6,7)_$J("",SI+SI-6)_DH_$J("",64-$L(DH)) S:'SDSAV SDSAV=1,SDPAT=SM
"RTN","SDB1",14,0)
I S I=DR#1-SB*100,I=I#1*SI\.6+(I\1*SI)*2,S=$E(SM,I,999),SM=$E(SM,1,I-1)
"RTN","SDB1",15,0)
 F Y=0:0 S Y=$O(^SC(DA,"S",DR,1,Y)) Q:Y'>0  I $P(^(Y,0),"^",9)'["C" S SDSL=$P(^(0),U,2)/SL*(SL\(60/SDSI))*HSI-HSI F I=0:HSI:SDSL S ST=$E(S,I+2) S:ST="" ST=" " S S=$E(S,1,I+2-1)_$E(STR,$F(STR,ST)-2)_$E(S,I+3,999) D OB
"RTN","SDB1",16,0)
 S SM=SM_S,DR=+$O(^SC(DA,"S",DR)) I DR\1=X G I
"RTN","SDB1",17,0)
 I $L(SM)>SM S ^SC(DA,"ST",X,0)=X,^(1)=SM S:'$D(^SC(DA,"ST",0)) ^(0)="^44.005DA^^" I $D(^SC(DA,"ST",X,9)) S ^SC(DA,"OST",X,1)=SDPAT,^(0)=X S:'$D(^SC(DA,"OST",0)) ^(0)="^44.0002DA^^"
"RTN","SDB1",18,0)
 F SDCAN=X:0 S SDCAN=$O(^SC(DA,"SDCAN",SDCAN)) Q:(SDCAN\1-(X\1))!'SDCAN  K ^(SDCAN)
"RTN","SDB1",19,0)
X2 I X#100<22 S X=X+7
"RTN","SDB1",20,0)
 E  S X1=X,X2=7 D C^%DTC
"RTN","SDB1",21,0)
 G X
"RTN","SDB1",22,0)
 ;
"RTN","SDB1",23,0)
DEL1 S (DH,DO,X)="" W !,*7,*7,"DELETE " S SDEL=1
"RTN","SDB1",24,0)
D I $D(SDIN),SDIN>D0 S SDRE1=$S(SDRE:SDRE,1:9999999)
"RTN","SDB1",25,0)
 W $P("SUN^MON^TUES^WEDNES^THURS^FRI^SATUR",U,DOW+1),"DAYS " S DH=X,OK=0,CTR=0
"RTN","SDB1",26,0)
 S SDSOH=$S('$D(^SC(DA,"SL")):0,$P(^("SL"),"^",8)']"":0,1:1)
"RTN","SDB1",27,0)
 F X=D0:0 S X=+$O(^SC(DA,"T",X)) Q:X'>0  D DOW^SDM0 I Y=DOW S Y=X,DO=Y W "UNTIL " D DT^DIO2 G R
"RTN","SDB1",28,0)
 I X'>0,$D(SDIN),SDIN>D0 S SDRE1=$S(SDRE=0:9999999,1:SDRE) S X=SDIN F I=0:1:6 D DOW^SDM0 S:Y=DOW OK=1 Q:OK  S X1=X,X2=1 D C^%DTC Q:X>SDRE1
"RTN","SDB1",29,0)
 I OK S Y=X,DO=D0 W " UNTIL " D DT^DIO2 G R
"RTN","SDB1",30,0)
 S DO=9999999 W "INDEFINITELY"
"RTN","SDB1",31,0)
R K OK S %="" D YN^DICN I '% W !,"REPLY YES (Y) OR NO (N)" G R
"RTN","SDB1",32,0)
EN1 S D=D0 G 1:((%-1)>0),G1^SDB:%<0
"RTN","SDB1",33,0)
 S Y="" I '$D(^SC(DA,"T"_DOW,D0,1)) S Y=+$O(^SC(DA,"T"_DOW,D0)) I Y>D0 S X=^(Y,1),POP=0 D CHK1 K:'POP ^SC(DA,"T"_DOW,Y) S ^SC(DA,"T"_DOW,D0,1)=X,^(0)=D0 D TX
"RTN","SDB1",34,0)
 I Y<0,'$D(^SC(DA,"T"_DOW,D0)) S ^(D0,1)="",^(0)=D0 D TX
"RTN","SDB1",35,0)
 S ^SC(DA,"T"_DOW,DO,1)=DH,^(0)=DO D TX
"RTN","SDB1",36,0)
 S X=D0 D B1 S MAX=30,SC=DA,SDSTRTDT=SD G:'CNT G1^SDB D WAIT^DICD,OVR^SDAUT1 W !,"PATTERN FILED!",! Q:'SDZQ  G G1^SDB
"RTN","SDB1",37,0)
 ;
"RTN","SDB1",38,0)
1 I SDEL S POP=0 D APPCK I POP D DELERR G OVR
"RTN","SDB1",39,0)
11 G:$D(^HOLIDAY(D,0))&('SDSOH) OVR S POP=0 D:$D(SDIN) CHK2 G:POP OVR W !,"...FOR " S Y=D D DT^DIO2 S %=2 D YN^DICN I '% W !,"REPLY YES (Y) OR NO (N)" G 11
"RTN","SDB1",40,0)
 I %<0 D   ;alb/sat 627
"RTN","SDB1",41,0)
 .D SDRES^SDECUTL2(DA)
"RTN","SDB1",42,0)
 G G1^SDB:(%<0) I (%-1) G OVR
"RTN","SDB1",43,0)
 S (POP,SDREB)=0 D APPCK I POP D APPERR G:(%-1) OVR S SDREB=1
"RTN","SDB1",44,0)
 W " ...OK" S X=D,DO=X+1,^SC(DA,"ST",X,9)=D,SDREACT=1 S:'$D(^SC(DA,"ST",0)) ^(0)="^44.005DA^^" D B1  ;SD*567 change set of 9 node to selected date
"RTN","SDB1",45,0)
OVR I D#100<22 S D=D+7 S POP=0 D:$D(SDIN) CHK2 G G1^SDB:POP=1,1
"RTN","SDB1",46,0)
 S X1=D,X2=7 D C^%DTC S D=X S POP=0 D:$D(SDIN) CHK2 G G1^SDB:POP=1,1
"RTN","SDB1",47,0)
 ;
"RTN","SDB1",48,0)
APPCK F A=D:0 S A=+$O(^SC(DA,"S",A)) Q:A'>0!(A\1-D)  F SDA1=0:0 S SDA1=+$O(^SC(DA,"S",A,1,SDA1)) Q:SDA1'>0  I $P(^SC(DA,"S",A,1,SDA1,0),"^",9)'["C" S POP=1 Q
"RTN","SDB1",49,0)
 Q
"RTN","SDB1",50,0)
APPERR W *7,!,"THERE ARE ALREADY APPOINTMENTS PENDING ON THIS DATE",!,"ARE YOU SURE YOU WANT TO CHANGE THE EXISTING AVAILABILITY" S %=2 D YN^DICN
"RTN","SDB1",51,0)
 I '% W !,"IF YOU SAY YES, THE EXISTING APPOINTMENTS MAY BECOME OVERBOOKS WHEN THE NEW AVAILABILITY IS APPLIED",!,"ANSWER YES OR NO" G APPERR
"RTN","SDB1",52,0)
 Q
"RTN","SDB1",53,0)
DELERR S Y=D W !,"... " D DT^DIQ W " HAS PENDING APPTS - DELETE AVAILABILITY NOT ALLOWED" Q
"RTN","SDB1",54,0)
CHK1 Q:'$D(SDIN)
"RTN","SDB1",55,0)
 I Y=SDIN S POP=1
"RTN","SDB1",56,0)
 Q
"RTN","SDB1",57,0)
 ;
"RTN","SDB1",58,0)
CHK2 I SDIN<D,SDRE,SDRE'>D K SDIN Q
"RTN","SDB1",59,0)
 I SDIN<D,SDRE=0 S POP=1 Q
"RTN","SDB1",60,0)
 I SDIN<D,SDRE>D S POP=2,D=SDRE,X=D F I=0:1:6 D DOW^SDM0 Q:Y=DOW  S X1=D,X2=1 D C^%DTC S D=X
"RTN","SDB1",61,0)
 S Y=SDIN D DTS^SDUTL S Y1=Y,Y=SDRE1 D DTS^SDUTL W:POP=2&('CTR) !!,"    Clinic is inactive from ",Y1," to ",Y,! S:POP=2 CTR=1
"RTN","SDB1",62,0)
 Q
"RTN","SDB1",63,0)
OB S SDSLOT=$E(STR,$F(STR,ST)-2) I SDSLOT?1P,SDSLOT'?1" " S ^SC(DA,"S",DR,1,Y,"OB")="O" K SDSLOT Q
"RTN","SDB1",64,0)
 K ^SC(DA,"S",DR,1,Y,"OB"),SDSLOT Q
"RTN","SDB1",65,0)
HLPD W !,"ENTER THE DATE THIS CLINIC BECOMES AVAILABLE TO SEE PATIENTS"
"RTN","SDB1",66,0)
 W !,"THE DATE ENTERED WILL BE THE FIRST DATE THAT APPOINTMENTS CAN",!,"BE MADE FOR THIS CLINIC" G G1^SDB
"RTN","SDB1",67,0)
TX S:'$D(^SC(DA,"T"_DOW,0)) ^(0)="^44.0"_$S(DOW<4:DOW+6,DOW<6:"0"_DOW+4,1:"001")_"A^^" Q
"RTN","SDC")
0^155^B27637649^B27191984
"RTN","SDC",1,0)
SDC ;MAN/GRR,ALB/LDB - CANCEL A CLINIC'S AVAILABILITY ;JAN 15, 2016
"RTN","SDC",2,0)
 ;;5.3;Scheduling;**15,32,79,132,167,478,487,523,545,627**;Aug 13, 1993;Build 249
"RTN","SDC",3,0)
 N SDATA,SDCNHDL ; for evt dvr
"RTN","SDC",4,0)
SDC1 K SDLT,SDCP S NOAP="" D LO^DGUTL
"RTN","SDC",5,0)
 S DIC=44,DIC(0)="MEQA",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))",DIC("A")="Select CLINIC NAME: " D ^DIC K DIC("S"),DIC("A") G:'$D(^SC(+Y,"SL")) END^SDC0
"RTN","SDC",6,0)
 S SC=+Y,SL=^("SL"),%DT="AEXF",%DT("A")="CANCEL '"_$P(Y,U,2)_"' FOR WHAT DATE: " D ^%DT K %DT G:Y<0 END^SDC0 ;NAKED REFERNCE - ^SC(IFN,"SL")
"RTN","SDC",7,0)
 S (SD,CDATE)=Y,%=$P(SL,U,6),SI=$S(%="":4,%<3:4,%:%,1:4),%=$P(SL,U,3),STARTDAY=$S($L(%):%,1:8) D NOW^%DTC S SDTIME=%
"RTN","SDC",8,0)
 K SDRE,SDIN,SDRE1 I $D(^SC(SC,"I")) S SDIN=+^("I"),SDRE=+$P(^("I"),"^",2),Y=SDRE D:Y DTS^SDUTL S SDRE1=$S(SDRE:" to "_Y,1:"")
"RTN","SDC",9,0)
 I $S('$D(SDIN):0,SDIN'>0!(SDIN>SD):0,SDRE'>SD&(SDRE):0,1:1) W !,*7,"Clinic is inactive ",$S('SDRE:"as of ",1:"from ") S Y=SDIN D DTS^SDUTL W Y,SDRE1 G SDC1
"RTN","SDC",10,0)
 I '$D(^SC(SC,"ST",SD,1)) S DH="" D B S ^SC(SC,"ST",SD,1)=$P("SU^MO^TU^WE^TH^FR^SA",U,DOW+1)_" "_$E(SD,6,7)_$J("",SI+SI-6)_DH,^(0)=SD G N
"RTN","SDC",11,0)
 I ^(1)["CANCELLED" W !,"APPOINTMENTS HAVE ALREADY BEEN CANCELLED",!,*7 S ANS="N",SDTIME="*",SDV1=$S($P(^SC(SC,0),"^",15):$P(^(0),"^",15),1:+$O(^DG(40.8,0))) K SDX G ASKL^SDC0 ;NAKED REFERENCE - ^SC(IFN,"ST",Date,1)
"RTN","SDC",12,0)
N I '$F(^SC(SC,"ST",SD,1),"[") K:^(1)?2U.E ^SC(SC,"ST",SD) W !,*7,"CLINIC DOES NOT MEET ON THAT DAY" G SDC1 ; KILLs node if not holiday
"RTN","SDC",13,0)
 I $O(^SC(SC,"S",SD))\1-SD W *7,!?5,"NO APPOINTMENTS SCHEDULED" S NOAP=1 G W
"RTN","SDC",14,0)
 W !,"FIRST, I'LL LIST THE EXISTING APPOINTMENTS",!
"RTN","SDC",15,0)
 K DUOUT,DTOUT D ^SDC1 I $D(DUOUT)!$D(DTOUT) D END^SDC0 Q
"RTN","SDC",16,0)
 I ^SC(SC,"ST",SD,1)["X" G ^SDC2
"RTN","SDC",17,0)
W S DH=0,%="" W !,"WANT TO CANCEL THE WHOLE DAY" D YN^DICN I '% W !,"REPLY YES (Y) OR NO (N)" G W
"RTN","SDC",18,0)
 I %=1 G WP:$$COED^SDC4(SC,SD,SD+.2359,1),ALL
"RTN","SDC",19,0)
 Q:%<1
"RTN","SDC",20,0)
WP S %="" W !,"WANT TO CANCEL PART OF THE DAY" D YN^DICN I '% W !,"REPLY YES (Y) OR NO (N)" G WP
"RTN","SDC",21,0)
 Q:(%-1)
"RTN","SDC",22,0)
F R !,"STARTING TIME: ",X:DTIME Q:U[X  D TC^SDC2 G F:Y<0 S FR=Y,ST=%
"RTN","SDC",23,0)
T R !,"ENDING TIME: ",X:DTIME Q:U[X  D TC^SDC2 G T:Y<0 S SDHTO=X,TO=Y I TO'>FR W !,"Ending time must be greater than starting time",*7 G T
"RTN","SDC",24,0)
 I $$COED^SDC4(SC,FR,TO,1) K FR,SDHTO,TO,ST W ! G F
"RTN","SDC",25,0)
ROPT R !,"Reason for cancellation:  ",I:DTIME I I?1"?".E W !,"YOU MAY ENTER A MESSAGE CONCERNING THE CANCELLATION HERE" G ROPT
"RTN","SDC",26,0)
 N CANREM S CANREM=I
"RTN","SDC",27,0)
 Q:I["^"  I '$D(^SC(SC,"SDCAN",0)) S ^SC(SC,"SDCAN",0)="^44.05D^"_FR_"^1" G SKIP
"RTN","SDC",28,0)
 S A=^SC(SC,"SDCAN",0),SDCNT=$P(A,"^",4),^SC(SC,"SDCAN",0)=$P(A,"^",1,2)_"^"_FR_"^"_(SDCNT+1)
"RTN","SDC",29,0)
SKIP S ^SC(SC,"SDCAN",FR,0)=FR_"^"_SDHTO
"RTN","SDC",30,0)
 S NOAP=$S($O(^SC(SC,"S",(FR-.0001)))'>0:1,$O(^SC(SC,"S",(FR-.0001)))>TO:1,1:0) I 'NOAP S NOAP=$S($O(^SC(SC,"S",+$O(^SC(SC,"S",(FR-.0001))),0))="MES":1,1:0)
"RTN","SDC",31,0)
 S ^SC(SC,"S",FR,0)=FR,^("MES")="CANCELLED UNTIL "_X_$S(I?.P:"",1:" ("_I_")") D S S I=^(1),I=I_$J("",%-$L(I)),Y=""
"RTN","SDC",32,0)
 F X=0:2:% S DH=$E(I,X+SI+SI),P=$S(X<ST:DH_$E(I,X+1+SI+SI),X=%:$S(Y="[":Y,1:DH)_$E(I,X+1+SI+SI),1:$S(Y="["&(X=ST):"]",1:"X")_"X"),Y=$S(DH="]":"",DH="[":DH,1:Y),I=$E(I,1,X-1+SI+SI)_P_$E(I,X+2+SI+SI,999)
"RTN","SDC",33,0)
 S:'$F(I,"[") I5=$F(I,"X"),I=$E(I,1,(I5-2))_"["_$E(I,I5,999) K I5
"RTN","SDC",34,0)
 S DH=0,^(1)=I,FR=FR-.0001 G C ;NAKED REFERENCE - ^SC(IFN,"ST",Date,1)
"RTN","SDC",35,0)
S S ^("CAN")=^SC(SC,"ST",SD,1) Q
"RTN","SDC",36,0)
 ;
"RTN","SDC",37,0)
ALL N CANREM
"RTN","SDC",38,0)
 W !,"Reason for cancellation: " R CANREM:DTIME I $L(CANREM)>160!($L(CANREM)<3) W !,*7,"Reason must be between 3 to 160 characters long",! G ALL
"RTN","SDC",39,0)
 D S S ^(1)="   "_$E(SD,6,7)_"    **CANCELLED**",FR=SD,TO=SD+.9 ;NAKED REFERENCE - ^SC(IFN,"ST",Date,1)
"RTN","SDC",40,0)
C S FR=$O(^SC(SC,"S",FR)) I FR<1!(FR'<TO) W !!,"CANCELLED!  " K SDX G CHKEND^SDC0
"RTN","SDC",41,0)
 N TDH,TMPD,DIE,DR,NODE
"RTN","SDC",42,0)
 F I=0:0 S I=$O(^SC(SC,"S",FR,1,I)) Q:I'>0  D
"RTN","SDC",43,0)
 .I '$D(^SC(SC,"S",FR,1,I,0)) I $D(^("C")) S J=FR,J2=I D DELETE^SDC1 K J,J2 Q  ;SD*5.3*545 delete corrupt node
"RTN","SDC",44,0)
 .I '+$G(^SC(SC,"S",FR,1,I,0)) S J=FR,J2=I D DELETE^SDC1 K J,J2 Q  ;SD*5.3*545 if DFN is missing delete record
"RTN","SDC",45,0)
 .S DFN=+^SC(SC,"S",FR,1,I,0),SDCNHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDC",46,0)
 .D BEFORE^SDAMEVT(.SDATA,DFN,FR,SC,I,SDCNHDL)
"RTN","SDC",47,0)
 .S $P(^SC(SC,"S",FR,1,I,0),"^",9)="C"
"RTN","SDC",48,0)
 .S:$D(^DPT(DFN,"S",FR,0)) NODE=^(0)  ;added SD/523
"RTN","SDC",49,0)
 .Q:$P(NODE,U,1)'=SC                  ;added SD/523
"RTN","SDC",50,0)
 .S ^DPT("ASDCN",SC,FR,DFN)=""
"RTN","SDC",51,0)
 .S SDSC=SC,SDTTM=FR,SDPL=I,TDH=DH,TMPD=CANREM D CANCEL^SDCNSLT S DH=TDH ;SD/478
"RTN","SDC",52,0)
 .I $D(^DPT(DFN,"S",FR,0)),$P(^(0),"^",2)'["C" S $P(^(0),"^",2)="C",$P(^(0),"^",12)=DUZ,$P(^(0),"^",14)=SDTIME,DH=DH+1,TDH=DH,DIE="^DPT(DFN,"_"""S"""_",",DR="17///^S X=CANREM",DA=FR D ^DIE S DH=TDH D MORE
"RTN","SDC",53,0)
 .D SDEC^SDCNP0(DFN,FR,SC,"C","",$G(CANREM),SDTIME,DUZ)   ;alb/sat 627
"RTN","SDC",54,0)
 G C
"RTN","SDC",55,0)
 ;
"RTN","SDC",56,0)
B S X=SD D DOW^SDM0 S DOW=Y,SS=+$O(^SC(SC,"T"_Y,X)) I $D(^(SS,1)),^(1)]"" S DH=^(1),DO=X+1,DA(1)=SC
"RTN","SDC",57,0)
 Q
"RTN","SDC",58,0)
MORE I $D(^SC("ARAD",SC,FR,DFN)) S ^(DFN)="N"
"RTN","SDC",59,0)
 S SDIV=$S($P(^SC(SC,0),"^",15)]"":$P(^(0),"^",15),1:" 1"),SDV1=$S(SDIV:SDIV,1:+$O(^DG(40.8,0))) I $D(^DPT("ASDPSD","C",SDIV,SC,FR,DFN)) K ^(DFN)
"RTN","SDC",60,0)
 S SDH=DH,SDTTM=FR,SDSC=SC,SDPL=I,SDRT="D" D RT^SDUTL
"RTN","SDC",61,0)
 S DH=SDH K SDH D CK1,EVT
"RTN","SDC",62,0)
 K SD1,SDIV,SDPL,SDRT,SDSC,SDTTM,SDX Q
"RTN","SDC",63,0)
CK1 S SDX=0 F SD1=FR\1:0 S SD1=$O(^DPT(DFN,"S",SD1)) Q:'SD1!((SD1\1)'=(FR\1))  I $P(^(SD1,0),"^",2)'["C",$P(^(0),"^",2)'["N" S SDX=1 Q
"RTN","SDC",64,0)
 Q:SDX  F SD1=2,4 I $D(^SC("AAS",SD1,FR\1,DFN)) S SDX=1 Q
"RTN","SDC",65,0)
 Q:SDX  IF $D(^SCE(+$$EXAE^SDOE(DFN,FR\1,FR\1),0)) S SDX=1
"RTN","SDC",66,0)
 Q:SDX  K ^DPT("ASDPSD","B",SDIV,FR\1,DFN) Q
"RTN","SDC",67,0)
 ;
"RTN","SDC",68,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDC",69,0)
 ; -- cancel event
"RTN","SDC",70,0)
 N FR,I,SDTIME,DH,SC
"RTN","SDC",71,0)
 D CANCEL^SDAMEVT(.SDATA,DFN,SDTTM,SDSC,SDPL,0,SDCNHDL) K SDATA,SDCNHDL
"RTN","SDC",72,0)
 Q
"RTN","SDC",73,0)
 ;
"RTN","SDCNP0")
0^127^B40198602^B37888084
"RTN","SDCNP0",1,0)
SDCNP0 ;ALB/LDB - CANCEL APPT. FOR A PATIENT ;JAN 15, 2016
"RTN","SDCNP0",2,0)
 ;;5.3;Scheduling;**132,167,478,517,572,592,627**;Aug 13, 1993;Build 249
"RTN","SDCNP0",3,0)
 ;
"RTN","SDCNP0",4,0)
 ; Reference/ICR
"RTN","SDCNP0",5,0)
 ; ^VALM1 - 10116
"RTN","SDCNP0",6,0)
 ;
"RTN","SDCNP0",7,0)
EN2 D WAIT^DICD S NDT=HDT/1,L=0 F J=1:1 S NDT=$O(^DPT(DFN,"S",NDT)) Q:NDT'>0!(SDPV&(NDT'<SDTM))  S SD0=^(NDT,0) I $P(SD0,"^",2)'["C" S SC=+SD0,L=L\1+1,APL="" D FLEN^SDCNP1A S ^UTILITY($J,"SDCNP",L)=NDT_"^"_SC_"^"_COV_"^"_APL_"^^"_APL D CHKSO
"RTN","SDCNP0",8,0)
WH1 G:L'>0 NO S (SDCTRL,SDCTR)=0,APP="" N SDITEM W:'SDERR @IOF
"RTN","SDCNP0",9,0)
 W ! F Z=0:0 S Z=$O(^UTILITY($J,"SDCNP",Z)) Q:Z'>0  S SDITEM=$J($S(Z\1=Z:"("_$J(Z,2)_") ",1:""),5) D  Q:SDCTRL
"RTN","SDCNP0",10,0)
 .I SDITEM["(" W !,SDITEM S HLDCSND=""
"RTN","SDCNP0",11,0)
 .I SDITEM'["(" W SDITEM
"RTN","SDCNP0",12,0)
 .S AT=$S($P(^(Z),"^",2)'?.N:1,1:0),Y=$P($P(^(Z),"^"),".") D DT^SDM0 S X=$P(^(Z),"^"),^(Z,"CNT")="" X ^DD("FUNC",2,1) W " ",$J(X,8) D MORE W:AT ! Q:SDCTRL
"RTN","SDCNP0",13,0)
 S:SDERR SDCTRL=1 I Z>0 G:SDCTRL&(APP']"") NOPE^SDCNP1 G:SDCTRL DEL
"RTN","SDCNP0",14,0)
 D WH G NOPE^SDCNP1:APP']"",DEL
"RTN","SDCNP0",15,0)
WH W !!,"SELECT APPOINTMENTS TO BE CANCELLED" W:Z>0 " OR HIT RETURN TO CONTINUE DISPLAY" R ": ",APP:DTIME I '$T!(APP="^") S SDCTRL=1,APP="" Q
"RTN","SDCNP0",16,0)
 S SDMSG="W !,""Enter appt. numbers separated by commas and/or a range separated"",!,""by dashes (ie 2,4,6-9)"" H 2" I APP["?" X SDMSG G WH
"RTN","SDCNP0",17,0)
 S SDCTRL=$S(APP']"":0,1:1) Q
"RTN","SDCNP0",18,0)
DEL S SDERR=0 F J=1:1 S SDDH=$P(APP,",",J) Q:SDDH']""  D MTCH^SDCNP1
"RTN","SDCNP0",19,0)
 G:SDERR WH1
"RTN","SDCNP0",20,0)
DEL1 F J=1:1 S SDDH=$P(APP,",",J) Q:SDDH']""  S SDDI=$P(SDDH,"-"),SDDM=$P(SDDH,"-",2) D CKK^SDCNP1A Q:SDERR  D CKK1^SDCNP1A Q:SDERR  Q:'SDDI  F A1=SDDI:1:$S(SDDM:SDDM,1:SDDI) D BEGD
"RTN","SDCNP0",21,0)
 G:SDERR WH1 G NOPE^SDCNP1
"RTN","SDCNP0",22,0)
BEGD S (SD,S)=$P(^UTILITY($J,"SDCNP",A1),"^",1),I=$P(^UTILITY($J,"SDCNP",A1),"^",2)
"RTN","SDCNP0",23,0)
 S SL=^SC(I,"SL"),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDCNP0",24,0)
 I $$CODT^SDCOU(DFN,+^UTILITY($J,"SDCNP",A1),+$P(^(A1),U,2)) W !,*7,">>> Appointment #",A1," has a check out date and cannot be cancelled." Q
"RTN","SDCNP0",25,0)
 D PROT^SDCNP1A Q:SDPRT=1  D CAN S $P(^UTILITY($J,"SDCNP",A1),"^",4)="*** JUST CANCELLED ***" Q
"RTN","SDCNP0",26,0)
CAN Q:$P(^UTILITY($J,"SDCNP",A1),"^",4)["JUST CANCELLED"  S CNT=CNT+1,DIV=$S($P(^SC(I,0),"^",15)]"":" "_$P(^(0),"^",15),1:" 1") I $D(^DPT("ASDPSD","C",DIV,I,S,DFN)) K ^(DFN)
"RTN","SDCNP0",27,0)
 N SDATA,SDCPHDL,SDNOW,SDCLI S SDCPHDL=$$HANDLE^SDAMEVT(1) D BEFORE^SDAMEVT(.SDATA,DFN,S,I,"",SDCPHDL)
"RTN","SDCNP0",28,0)
 S SDCLI=I ;changed variable name I to SDCLI(Hospital location file IEN) as the value of I is manipulated by ^DIE SD*5.3*592
"RTN","SDCNP0",29,0)
 S:'$D(^DPT(DFN,"S",0)) ^(0)="^2.98P^^" I $D(SDREM) S DIE="^DPT("_DFN_",""S"",",(DA,Y)=S,DA(1)=DFN,DR="17///^S X="_"""""_SDREM_""""" D ^DIE K DIE,DR
"RTN","SDCNP0",30,0)
 S ^DPT("ASDCN",SDCLI,DA,DA(1))=$S(SDWH["P":1,1:"") K DA
"RTN","SDCNP0",31,0)
 ;removed rounding logic for time and changed direct global writes to fileman call SD*5.3*592
"RTN","SDCNP0",32,0)
 D NOW^%DTC S SDNOW=%,DIE="^DPT("_DFN_",""S"",",DA=S,DA(1)=DFN,DR="3///^S X=SDWH;14////^S X=DUZ;15///^S X=SDNOW;16////^S X=SDSCR" D ^DIE K DIE,DR,DA
"RTN","SDCNP0",33,0)
 S (DA,Y)=0 F X=0:0 S X=+$O(^SC(SDCLI,"S",S,1,X)) Q:'$D(^(X,0))  D C Q:Y&(DA)
"RTN","SDCNP0",34,0)
 D SDEC(DFN,S,SDCLI,SDWH,SDSCR,SDREM,SDNOW,DUZ) ;update SDEC APPOINTMENT   /alb/sat  SD/627
"RTN","SDCNP0",35,0)
 I $D(^DPT("ASDPSD","B",DIV,S\1,DFN)) D CK1
"RTN","SDCNP0",36,0)
 Q:'Y  S SL=$P(^SC(SDCLI,"S",S,1,Y,0),U,2) I DA,'$D(^("OB")) K ^SC(SDCLI,"S",S,1,DA,"OB")
"RTN","SDCNP0",37,0)
 S SDDA=DA,SDTTM=S,SDRT="D",SDPL=Y,SDSC=SDCLI D RT^SDUTL D CANCEL^SDCNSLT S Y=SDPL,S=SDTTM,SDCLI=SDSC,DA=SDDA K SDDA ;SD/478
"RTN","SDCNP0",38,0)
 S SDNODE=^SC(SDCLI,"S",S,1,Y,0),^SC("ARAD",SDCLI,S,DFN)="N",TLNK=$P($G(^SC(SDCLI,"S",S,1,Y,"CONS")),U) K ^SC(SDCLI,"S",S,1,Y) K:$O(^SC(SDCLI,"S",S,0))'>0 ^SC(SDCLI,"S",S,0) D CLRK^SDCNP1  ;SD/478
"RTN","SDCNP0",39,0)
 K:TLNK'="" ^SC("AWAS1",TLNK),TLNK ;SD/478
"RTN","SDCNP0",40,0)
 ;S SDNODE=^SC(I,"S",S,1,Y,0),^SC("ARAD",I,S,DFN)="N" S DA(2)=I,DA(1)=S,DA=Y,DIK="^SC("_DA(2)_",""S"","_DA(1)_",1," D ^DIK K:$O(^SC(I,"S",S,0))'>0 ^SC(I,"S",S,0) D CLRK^SDCNP1 ;SD/478
"RTN","SDCNP0",41,0)
 D EVT
"RTN","SDCNP0",42,0)
 Q:'$D(^SC(SDCLI,"ST",SD\1,1))
"RTN","SDCNP0",43,0)
EN01 S S=^SC(SDCLI,"ST",SD\1,1),Y=SD#1-SB*100,ST=Y#1*SI\.6+(Y\1*SI),SS=SL*HSI/60
"RTN","SDCNP0",44,0)
 I Y'<1 F I=ST+ST:SDDIF S Y=$E(STR,$F(STR,$E(S,I+1))) Q:Y=""  S S=$E(S,1,I)_Y_$E(S,I+2,999),SS=SS-1 Q:SS'>0
"RTN","SDCNP0",45,0)
 S ^(1)=S Q  ;NAKED REFERENCE - ^SC(IFN,"ST",Date,1)
"RTN","SDCNP0",46,0)
C I +^SC(SDCLI,"S",S,1,X,0)=DFN S Y=X Q  ;changed variable name I to SDCLI SD*5.3*592
"RTN","SDCNP0",47,0)
 Q:'$D(^("OB"))!DA  S:^("OB")?1"O".E DA=X Q
"RTN","SDCNP0",48,0)
NO W !,"NO ",$S('SDPV:"PENDING",1:"PREVIOUS")," APPOINTMENTS",*7,*7,*7
"RTN","SDCNP0",49,0)
 D END^SDCNP G RD^SDCNP
"RTN","SDCNP0",50,0)
 Q
"RTN","SDCNP0",51,0)
CHKSO S COV=$S($P(^DPT(DFN,"S",NDT,0),"^",11)=1:" (COLLATERAL) ",1:"") F SDJ=3,4,5 I $P(^DPT(DFN,"S",NDT,0),"^",SDJ)]"" S L=L+.1,^UTILITY($J,"SDCNP",L)=$P(^(0),"^",SDJ)_"^"_$S(SDJ=3:"LAB",SDJ=4:"XRAY",1:"EKG")_"^0^0"
"RTN","SDCNP0",52,0)
 Q
"RTN","SDCNP0",53,0)
MORE S SDCTR=SDCTR+2 I AT W ?41,$P(^UTILITY($J,"SDCNP",Z),"^",2) G OVR
"RTN","SDCNP0",54,0)
 W " ",$S($P(^UTILITY($J,"SDCNP",Z),"^",4)?.N:"("_$P(^(Z),"^",4)_" MIN) ",1:$P(^(Z),"^",4))," ",$S($D(^SC($P(^(Z),"^",2),0)):$P(^(0),"^",1),1:"DELETED CLINIC"),$P(^UTILITY($J,"SDCNP",Z),"^",3) ;SD/478
"RTN","SDCNP0",55,0)
 N CSND,CSDT,CSSD,CONSULT,Y
"RTN","SDCNP0",56,0)
 S CSND=^UTILITY($J,"SDCNP",Z),CSDT=$P(CSND,U),CSSD=$P(CSND,U,2),HLDCSND=CSND S CONSULT=$$CONSULT(CSSD,CSDT) I +$G(CONSULT) S Y=$P(^GMR(123,CONSULT,0),U) D DD^%DT W !?5,"CONSULT ",Y,"/ ",CONSULT
"RTN","SDCNP0",57,0)
 D STATUS($X>55)
"RTN","SDCNP0",58,0)
OVR ;Following code added SD/517
"RTN","SDCNP0",59,0)
 I '$D(CSND) I $G(HLDCSND) I (($P(HLDCSND,U,4)="")!($P(HLDCSND,U,6)="")) D
"RTN","SDCNP0",60,0)
 .W !!,"**********************************************************************"
"RTN","SDCNP0",61,0)
 .W !,"* WARNING: There is a data inconsistency or data corruption problem  *"
"RTN","SDCNP0",62,0)
 .W !,"* with the above appointment.  Corrective action needs to be taken.  *"
"RTN","SDCNP0",63,0)
 .W !,"* Please cancel the appointment above.  If it is a valid appointment,*"
"RTN","SDCNP0",64,0)
 .W !,"* it will have to be re-entered via Appointment Management.          *"
"RTN","SDCNP0",65,0)
 .W !,"**********************************************************************"
"RTN","SDCNP0",66,0)
 .S SDCTR=21
"RTN","SDCNP0",67,0)
 .K HLDCSND
"RTN","SDCNP0",68,0)
 ;
"RTN","SDCNP0",69,0)
 I SDCTR>20,$O(^UTILITY($J,"SDCNP",Z)) S (SDCTRL,SDCTR)=0 W *7 D WH W:'SDCTRL @IOF
"RTN","SDCNP0",70,0)
 Q
"RTN","SDCNP0",71,0)
 ;
"RTN","SDCNP0",72,0)
CONSULT(CSSD,CSDT) ;
"RTN","SDCNP0",73,0)
 N CSI S CONSULT=""
"RTN","SDCNP0",74,0)
 S CSI=0 F  S CSI=$O(^SC(CSSD,"S",CSDT,1,CSI)) Q:'+CSI  I $P($G(^SC(CSSD,"S",CSDT,1,CSI,0)),U)=DFN S CONSULT=$P($G(^SC(CSSD,"S",CSDT,1,CSI,"CONS")),U) Q  ;SD/478
"RTN","SDCNP0",75,0)
 Q CONSULT
"RTN","SDCNP0",76,0)
CK1 S SDX=0 F SD1=S\1:0 S SD1=$O(^DPT(DFN,"S",SD1)) Q:'SD1!((SD1\1)'=(S\1))  I $P(^(SD1,0),"^",2)'["C",$P(^(0),"^",2)'["N" S SDX=1 Q
"RTN","SDCNP0",77,0)
 Q:SDX  F SD1=2,4 I $D(^SC("AAS",SD1,S\1,DFN)) S SDX=1 Q
"RTN","SDCNP0",78,0)
 Q:SDX  IF $D(^SCE(+$$EXAE^SDOE(DFN,S\1,S\1),0)) S SDX=1
"RTN","SDCNP0",79,0)
 Q:SDX  K ^DPT("ASDPSD","B",DIV,S\1,DFN) Q
"RTN","SDCNP0",80,0)
 ;
"RTN","SDCNP0",81,0)
SDEC(DFN,S,SDCLI,SDWH,SDSCR,SDREM,SDNOW,SDDUZ) ;update SDEC APPOINTMENT   /alb/sat  SD/627
"RTN","SDCNP0",82,0)
 N SDECAPPT
"RTN","SDCNP0",83,0)
 S SDECAPPT=$$APPTGET^SDECUTL(DFN,S,SDCLI)
"RTN","SDCNP0",84,0)
 D:+SDECAPPT SDECCAN^SDEC08(SDECAPPT,SDWH,SDSCR,SDREM,SDNOW,$S($G(SDDUZ)'="":SDDUZ,1:DUZ))
"RTN","SDCNP0",85,0)
 Q
"RTN","SDCNP0",86,0)
 ;end addition/modification  /alb/sat  SD/627
"RTN","SDCNP0",87,0)
 ;
"RTN","SDCNP0",88,0)
STATUS(LF) ;
"RTN","SDCNP0",89,0)
 W:LF !
"RTN","SDCNP0",90,0)
 W ?55,"(",$E($$LOWER^VALM1($P($$STATUS^SDAM1(DFN,+^UTILITY($J,"SDCNP",Z),+$P(^(Z),U,2),$G(^DPT(DFN,"S",+^(Z),0))),";",3)),1,23),")"
"RTN","SDCNP0",91,0)
 W:'LF !
"RTN","SDCNP0",92,0)
 Q
"RTN","SDCNP0",93,0)
 ;
"RTN","SDCNP0",94,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDCNP0",95,0)
 N I,STR,SS,SL,SD,SB,SI,HSI,J,APP,S,A1,STARTDAY,CNT,DIV,SDERR,SDDIF
"RTN","SDCNP0",96,0)
 D CANCEL^SDAMEVT(.SDATA,DFN,SDTTM,SDSC,SDPL,0,SDCPHDL)
"RTN","SDCNP0",97,0)
 Q
"RTN","SDCNSLT")
0^149^B41631358^B40912591
"RTN","SDCNSLT",1,0)
SDCNSLT ;ALB/HAG - LINK APPOINTMENTS TO CONSULTS ;JAN 15, 2016
"RTN","SDCNSLT",2,0)
 ;;5.3;Scheduling;**478,496,630,627**;Aug 13, 1993;Build 249
"RTN","SDCNSLT",3,0)
A ;===GET ACTIVE AND PENDING CONSULT
"RTN","SDCNSLT",4,0)
 N A,ND,CNT,CONS,CPRSTAT,DTENTR,DTIN,DTLMT,DTR,NOS,NOSHOW,SENDER,SERVICE,SRV,P8,PROC,PT,PTNM,STATUS
"RTN","SDCNSLT",5,0)
 K TMP S NOSHOW="no-show",CNT=0,$P(DSH,"-",IOM-1)="",PT=DFN,X1=DT,X2=-365 D C^%DTC S DTLMT=X
"RTN","SDCNSLT",6,0)
 S A=":" F  S A=$O(^GMR(123,"F",PT,A),-1) Q:'+A  S ND=$G(^GMR(123,A,0)) Q:ND=""  S PROC=$P($G(^GMR(123,A,1.11)),U),DTENTR=$P(ND,U) I DTENTR>DTLMT S CPRSTAT=$P(ND,U,12) D:CPRSTAT=5!(CPRSTAT=6)!(CPRSTAT=8)!(CPRSTAT=13)
"RTN","SDCNSLT",7,0)
 .Q:$D(^XTMP("SDECLKC-"_A))  ;do not display consult if locked by VS GUI  ;alb/sat 627
"RTN","SDCNSLT",8,0)
 .I STPCOD'="" S SRV=$P(ND,U,5) Q:'+SRV  I $D(^GMR(123.5,"AB1",STPCOD,SRV)) S PTIEN=$P(ND,U,2) D
"RTN","SDCNSLT",9,0)
 ..I CPRSTAT=8 S SHOW=0 Q:$D(^SC("AWAS1",A))  S NOS=$O(^GMR(123,A,40,":"),-1) Q:'+NOS  S X2=$P($G(^GMR(123,A,40,NOS,0)),U),X1=DT D ^%DTC Q:X'=""&(X>180)  D SCHED(PTIEN,STPCOD,.SHOW) Q:'SHOW
"RTN","SDCNSLT",10,0)
 ..;CPRSTAT 13 is a cancel
"RTN","SDCNSLT",11,0)
 ..I CPRSTAT=13 S NOS=$O(^GMR(123,A,40,":"),-1) Q:'+NOS  S NOS=$O(^GMR(123,A,40,NOS),-1) Q:'+NOS  S X2=$P($G(^GMR(123,A,40,NOS,0)),U),X1=DT D ^%DTC Q:X'=""&(X>180)  S COMMENT=$G(^GMR(123,A,40,NOS,1,1,0)) Q:COMMENT'[NOSHOW
"RTN","SDCNSLT",12,0)
 ..S:+PTIEN PTNM=$P(^DPT(PTIEN,0),U) S SERVICE=$P(^GMR(123.5,SRV,0),U),STATUS=$P(^ORD(100.01,CPRSTAT,0),U),SENDER=$P(ND,U,14) S:+SENDER SENDER=$P(^VA(200,SENDER,0),U)
"RTN","SDCNSLT",13,0)
 ..S Y=DTENTR D DD^%DT S DTIN=Y,DTR=$E(DTENTR,4,5)_"/"_$E(DTENTR,6,7)_"/"_$E(DTENTR,2,3)_"@"_$P(Y,"@",2)
"RTN","SDCNSLT",14,0)
 ..S CNT=CNT+1,TMP(CNT)=PTIEN_U_SERVICE_U_SENDER_U_STATUS_U_DTR_U_A_U_DTIN_U_$P(ND,U,17)_U_PROC
"RTN","SDCNSLT",15,0)
 Q:'$D(TMP)
"RTN","SDCNSLT",16,0)
QST N DIR,DTOUT,DUOUT,CNSULT
"RTN","SDCNSLT",17,0)
 S DIR(0)="Y",DIR("A")="Will this appointment be for a CONSULT/PROCEDURE",DIR("B")="YES",DIR("?")="Answer 'Y'es if appointment is for a Consult or Procedure." W ! D ^DIR S CNSULT=Y
"RTN","SDCNSLT",18,0)
 I CNSULT[U!(CNSULT=0)!(CNSULT="") K TMP Q
"RTN","SDCNSLT",19,0)
HDR W !!,"Please select from the list of consult(s), press 0 for none.",! ;LLS 05-JAN-2015 SD*5.3*630
"RTN","SDCNSLT",20,0)
 W !,PTNM,!!,"# Service",?68,"Cons #",!,DSH ;LLS 05-JAN-2015 SD*5.3*630
"RTN","SDCNSLT",21,0)
 S A=0 F  S A=$O(TMP(A)) Q:'+A  S ND=TMP(A),P8=$P(ND,U,8) D  ;LLS 05-JAN-2015 SD*5.3*630
"RTN","SDCNSLT",22,0)
 . W !,A,".",?3,$S(P8="P":$E($P(ND,U,9),1,63),1:$E($P(ND,U,2),1,63)),?68,$P(ND,U,6) W !,?4,"Request DT: ",$E($P(ND,U,5),1,14),?31,"FROM: ",$E($P(ND,U,3),1,33),?71,"TYPE: ",$S(P8="P":"P",P8="C":"C",1:"") ;LLS 05-JAN-2015 SD*5.3*630
"RTN","SDCNSLT",23,0)
 W !
"RTN","SDCNSLT",24,0)
READ R !,"Select Consult: ",CONS:DTIME G:CONS="" A
"RTN","SDCNSLT",25,0)
 I CONS=0!(CONS[U) W " ... NONE." K TMP Q
"RTN","SDCNSLT",26,0)
 I "? "[CONS W !," Select consult by number on the left side." G READ
"RTN","SDCNSLT",27,0)
 I '$D(TMP(CONS)) W *7," ?? Select consult by number on the left side." G READ
"RTN","SDCNSLT",28,0)
 S CNSLTLNK=$P(TMP(CONS),U,6)
"RTN","SDCNSLT",29,0)
 Q
"RTN","SDCNSLT",30,0)
SCHED(PTIEN,STPCOD,SHOW) ;===CONSULT IS SCHEDULE NOW CHECK IF IT HAS APPOINTMENT BY STOP CODE.
"RTN","SDCNSLT",31,0)
 N APT,CLNC,B,S1,S2,S3,S4,STOP,STOPCOD,X,Y
"RTN","SDCNSLT",32,0)
 S %DT="ST",X="T-1" D ^%DT S APT=Y,S1=0,STOP=0 F  S APT=$O(^DPT(PTIEN,"S",APT)) Q:'+APT!(STOP)  S S1=1,CLNC=$P(^DPT(PTIEN,"S",APT,0),U) I CLNC'="" S STOPCOD=$P(^SC(CLNC,0),U,7) I STOPCOD'="" S S2=0 I STOPCOD=STPCOD S S2=1 D
"RTN","SDCNSLT",33,0)
 .S S3=0,S4=0,B=0 F  S B=$O(^SC(CLNC,"S",APT,1,B)) Q:'+B!(STOP)  S S3=1 D
"RTN","SDCNSLT",34,0)
 ..I ($P($G(^SC(CLNC,"S",APT,1,B,0)),U)=PTIEN) S S4=1,STOP=1,SHOW=0
"RTN","SDCNSLT",35,0)
 I S1=0 S SHOW=1 Q  ;show if no appointment in the patient side
"RTN","SDCNSLT",36,0)
 I S2=0 S SHOW=1 Q  ;show if stop code does not match
"RTN","SDCNSLT",37,0)
 I S3=0 S SHOW=1 Q  ;show if no appointment in the clinic
"RTN","SDCNSLT",38,0)
 I S4=0 S SHOW=1 Q  ;show if patient does not match in appointment
"RTN","SDCNSLT",39,0)
 Q
"RTN","SDCNSLT",40,0)
LINK(SC,SDY,SD,CNSLTLNK) ;===LINK APPOINTMENT TO CONSULT
"RTN","SDCNSLT",41,0)
 N DA,DIE,DR,TDA,X
"RTN","SDCNSLT",42,0)
 S TDA=SDY,DA(2)=SC,DA(1)=SD,DA=TDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,",DR="688////^S X=CNSLTLNK" D ^DIE
"RTN","SDCNSLT",43,0)
 Q
"RTN","SDCNSLT",44,0)
EDITCS(SD,TMPD,TMPYCLNC,CNSLTLNK) ;===MARK CONSULT AS SCHEDULED
"RTN","SDCNSLT",45,0)
 N CSCHDT,SNDPRV,TME,X,Y,COMMENT,ER
"RTN","SDCNSLT",46,0)
 S %DT="ST",X="NOW" D ^%DT S CSCHDT=Y
"RTN","SDCNSLT",47,0)
 S SNDPRV=$P($G(^GMR(123,CNSLTLNK,0)),U,14),Y=SD D DD^%DT S TME=$P($P(Y,"@",2),":",1,2)
"RTN","SDCNSLT",48,0)
 S COMMENT(1)=$P(TMPYCLNC,U,2)_" Consult Appt. on "_$E(SD,4,5)_"/"_$E(SD,6,7)_"/"_$E(SD,2,3)_" @ "_TME
"RTN","SDCNSLT",49,0)
 S COMMENT(2)=TMPD
"RTN","SDCNSLT",50,0)
 D SCH^SDQQCN2(.ER,CNSLTLNK,SNDPRV,CSCHDT,0,,.COMMENT) K COMMENT
"RTN","SDCNSLT",51,0)
 Q
"RTN","SDCNSLT",52,0)
CANCEL ;===appt was cancelled then mark consult as edit/resubmit, add comment.
"RTN","SDCNSLT",53,0)
 N APPT,CONSULT,CPRSSTAT,ER,GM40,GMRND,SDPATNT,USER,SNDPRV,J
"RTN","SDCNSLT",54,0)
 ;Variables CNDIE, CNDA and CNINDX used in calling routine for Cancel letter printed comment in consult.
"RTN","SDCNSLT",55,0)
 S:$D(SCLNK) CONSULT=SCLNK
"RTN","SDCNSLT",56,0)
 S:'$D(SCLNK) CONSULT=$P($G(^SC(SDSC,"S",SDTTM,1,SDPL,"CONS")),U)
"RTN","SDCNSLT",57,0)
 Q:'+CONSULT
"RTN","SDCNSLT",58,0)
 S:$D(SCSNOD) SDPATNT=$P(SCSNOD,U)
"RTN","SDCNSLT",59,0)
 S:'$D(SCSNOD) SDPATNT=$P($G(^SC(SDSC,"S",SDTTM,1,SDPL,0)),U)
"RTN","SDCNSLT",60,0)
 S CPRSSTAT=$P($G(^GMR(123,CONSULT,0)),U,12) I CPRSSTAT'="" S CPRSSTAT=$P($G(^ORD(100.01,CPRSSTAT,0)),U) Q:CPRSSTAT'="SCHEDULED"
"RTN","SDCNSLT",61,0)
 S SNDPRV=$P($G(^GMR(123,CONSULT,0)),U,14)
"RTN","SDCNSLT",62,0)
 S USER=$P(^VA(200,DUZ,0),U),Y=SDTTM D DD^%DT S APPT=$E(SDTTM,4,5)_"/"_$E(SDTTM,6,7)_"/"_$E(SDTTM,2,3)_" @ "_$P(Y,"@",2)
"RTN","SDCNSLT",63,0)
 S COMMENT(1)=$P(^SC(SDSC,0),U)_" Appt. on "_APPT_" was cancelled"_$S($D(SDWH):$S(SDWH["P":" by the Patient.",SDWH["C":" by the Clinic.",1:"."),$D(SDADM):" for administrative purposes.",1:", whole clinic.")
"RTN","SDCNSLT",64,0)
 S CNINDX=2 S:$D(TMPD) COMMENT(2)="Remarks: "_TMPD,CNINDX=CNINDX+1 K TMPD
"RTN","SDCNSLT",65,0)
 N SDERR S SDERR=$$STATUS^GMRCGUIS(CONSULT,6,3,SNDPRV,"","",.COMMENT)
"RTN","SDCNSLT",66,0)
 S CNDIE="^GMR(123,"_CONSULT_",40,",CNDA=+$G(COMMENT(0))
"RTN","SDCNSLT",67,0)
 K COMMENT,DA
"RTN","SDCNSLT",68,0)
 S AUTO(SDSC,SDTTM,SDPATNT)=CONSULT
"RTN","SDCNSLT",69,0)
 S DA(2)=SDSC,DA(1)=SDTTM,DA=SDPL,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,",DR="688///@" D ^DIE
"RTN","SDCNSLT",70,0)
 K SCSNOD,SDADM,SCLNK
"RTN","SDCNSLT",71,0)
 Q
"RTN","SDCNSLT",72,0)
AUTOREB(SC,NDATE,LNK,CY) ;===AUTO REBOOK
"RTN","SDCNSLT",73,0)
 N DIC,DA,DIE,DR,Y,TME,SNDPRV,CSCHDT,COMMENT,ER
"RTN","SDCNSLT",74,0)
 S DA(2)=SC,DA(1)=NDATE,DA=CY,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,",DR="688////^S X=LNK" D ^DIE
"RTN","SDCNSLT",75,0)
 S Y=NDATE D DD^%DT S TME=$P(Y,"@",2)
"RTN","SDCNSLT",76,0)
 S COMMENT(1)=$P(^SC(SC,0),U)_" Consult Appt. on "_$E(NDATE,4,5)_"/"_$E(NDATE,6,7)_"/"_$E(NDATE,2,3)_" @ "_TME_" (Auto Rebooked)."
"RTN","SDCNSLT",77,0)
 S %DT="ST",X="NOW" D ^%DT S CSCHDT=Y
"RTN","SDCNSLT",78,0)
 S SNDPRV=$P($G(^GMR(123,LNK,0)),U,14)
"RTN","SDCNSLT",79,0)
 D SCH^SDQQCN2(.ER,LNK,SNDPRV,CSCHDT,0,,.COMMENT) K COMMENT
"RTN","SDCNSLT",80,0)
 Q
"RTN","SDCNSLT",81,0)
NOSHOW(SC,SDDTM,CNPAT,CNSTLNK,CN,AUTO,NSDIE,NSDA) ;
"RTN","SDCNSLT",82,0)
 ;Appt. was a NoShow, then mark Consult as Edit/Resubmit, add comment using silent call to notify user.
"RTN","SDCNSLT",83,0)
 ;Variables NSDIE and NSDA used in calling routine for NoShow letter printed comment in consult.
"RTN","SDCNSLT",84,0)
 N CSNOD,CPRSSTAT,NOSHOW,CSRQSRV,TPRNT,CSPRT,USER,Y,APPT,COMMENT,DA,DIC,DUZ2,DIC,DR,GM40,GMRND,ER,SNDPRV,J
"RTN","SDCNSLT",85,0)
 S CSNOD=$G(^GMR(123,CNSTLNK,0)),CPRSSTAT=$P(CSNOD,U,12),SNDPRV=$P(CSNOD,U,14),NOSHOW="no-show",AUTO(SC,SDDTM,CNPAT)=CNSTLNK
"RTN","SDCNSLT",86,0)
 I CPRSSTAT'="" S CPRSSTAT=$P($G(^ORD(100.01,CPRSSTAT,0)),U) Q:CPRSSTAT'="SCHEDULED"
"RTN","SDCNSLT",87,0)
 S CSRQSRV=$P(CSNOD,U,5) I CSRQSRV'="" S TPRNT=$P($G(^GMR(123.5,CSRQSRV,123)),U,9) I TPRNT'="" S:$P($G(^%ZIS(1,TPRNT,0)),U)'="" CSPRT=$P(^(0),U) ;reprint consult
"RTN","SDCNSLT",88,0)
 S USER=$P(^VA(200,DUZ,0),U),Y=SDDTM D DD^%DT S APPT=$E(SDDTM,4,5)_"/"_$E(SDDTM,6,7)_"/"_$E(SDDTM,2,3)_" @ "_$P(Y,"@",2)
"RTN","SDCNSLT",89,0)
 S COMMENT(1)=$P(^SC(SC,0),U)_" Appt. on "_APPT_" was a "_NOSHOW_"." ;no-show is a key word used by a search do not change
"RTN","SDCNSLT",90,0)
 N SDERR S SDERR=$$STATUS^GMRCGUIS(CNSTLNK,6,3,SNDPRV,"","",.COMMENT)
"RTN","SDCNSLT",91,0)
 S NSDIE="^GMR(123,"_CNSTLNK_",40,",NSDA=+$G(COMMENT(0))
"RTN","SDCNSLT",92,0)
 K COMMENT,DA
"RTN","SDCNSLT",93,0)
 S DA(2)=SC,DA(1)=SDDTM,DA=CN,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,",DR="688///@" D ^DIE
"RTN","SDCNSLT",94,0)
 I $D(CSPRT) D EN^GMRCP5(CNSTLNK,"C",CSPRT)
"RTN","SDCNSLT",95,0)
 K CNSTLNK Q
"RTN","SDCO1")
0^161^B32537404^B29919726
"RTN","SDCO1",1,0)
SDCO1 ;ALB/RMO - Appointment - Check Out ;JAN 15, 2016
"RTN","SDCO1",2,0)
 ;;5.3;Scheduling;**27,132,149,193,250,296,446,538,627**;08/13/93;Build 249
"RTN","SDCO1",3,0)
 ;
"RTN","SDCO1",4,0)
 ;check out if sd/369 is released before 446!!!
"RTN","SDCO1",5,0)
 ;
"RTN","SDCO1",6,0)
EN ;Entry point for SDCO APPT CHECK OUT protocol
"RTN","SDCO1",7,0)
 N SDCOALBF,SDCOAP,SDCOBG,SDCODT,VALMY
"RTN","SDCO1",8,0)
 S VALMBCK=""
"RTN","SDCO1",9,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SDCO1",10,0)
 D FULL^VALM1
"RTN","SDCO1",11,0)
 S SDCOAP=0 D NOW^%DTC S SDCODT=$P(%,".")_"."_$E($P(%,".",2)_"0000",1,4)
"RTN","SDCO1",12,0)
 F  S SDCOAP=$O(VALMY(SDCOAP)) Q:'SDCOAP  D
"RTN","SDCO1",13,0)
 .I $D(^TMP("SDAMIDX",$J,SDCOAP)) K SDAT S SDAT=^(SDCOAP) D
"RTN","SDCO1",14,0)
 ..W !!,^TMP("SDAM",$J,+SDAT,0)
"RTN","SDCO1",15,0)
 ..I $$CHK^SDCOU(SDCOAP) D CO(+$P(SDAT,"^",2),+$P(SDAT,"^",3),+$P(SDAT,"^",4),+$P(SDAT,"^",5),0,SDCODT,"CO",+SDAT,.SDCOALBF)
"RTN","SDCO1",16,0)
 I $G(SDCOALBF) S SDCOBG=VALMBG W ! D BLD^SDAM S:$D(@VALMAR@(SDCOBG,0)) VALMBG=SDCOBG
"RTN","SDCO1",17,0)
 S VALMBCK="R"
"RTN","SDCO1",18,0)
 K SDAT
"RTN","SDCO1",19,0)
 Q
"RTN","SDCO1",20,0)
 ;
"RTN","SDCO1",21,0)
CO(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOACT,SDLNE,SDCOALBF) ;Appt Check Out
"RTN","SDCO1",22,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDCO1",23,0)
 ;           SDT      Appointment Date/Time
"RTN","SDCO1",24,0)
 ;           SDCL     Hospital Location file IEN for Appt
"RTN","SDCO1",25,0)
 ;           SDDA     IEN in ^SC multiple or null [Optional]
"RTN","SDCO1",26,0)
 ;           SDASK    Ask Check Out Date/Time     [Optional]
"RTN","SDCO1",27,0)
 ;           SDCODT   Date/Time of Check Out      [Optional]
"RTN","SDCO1",28,0)
 ;           SDCOACT  Appt Mgmt Check Out Action  [Optional]
"RTN","SDCO1",29,0)
 ;           SDLNE    Appt Mgmt Line Number       [Optional]
"RTN","SDCO1",30,0)
 ; Output -- SDCOALBF Re-build Appt Mgmt List
"RTN","SDCO1",31,0)
 I $D(XRTL) D T0^%ZOSV
"RTN","SDCO1",32,0)
 N SDCOQUIT,SDOE,SDATA,SDECAPPT
"RTN","SDCO1",33,0)
 S:'SDDA SDDA=$$FIND^SDAM2(DFN,SDT,SDCL)
"RTN","SDCO1",34,0)
 I 'SDDA W !!,*7,">>> You cannot check out this appointment." D PAUSE^VALM1 G COQ
"RTN","SDCO1",35,0)
 S SDATA=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDCO1",36,0)
 ; ** MT Blocking removed
"RTN","SDCO1",37,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$G(EASACT)'="W",$$MT^EASMTCHK(DFN,$P($G(SDATA),U,16),"C",$G(SDT)) D PAUSE^VALM1 G COQ
"RTN","SDCO1",38,0)
 ;
"RTN","SDCO1",39,0)
 ;-- if new encounter, pass to PCE
"RTN","SDCO1",40,0)
 I $$NEW^SDPCE(SDT) D  S VALMBCK="R",SDCOALBF=1 G COQ
"RTN","SDCO1",41,0)
 . N SDCOED
"RTN","SDCO1",42,0)
 . S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDCO1",43,0)
 . ;
"RTN","SDCO1",44,0)
 . ; -- has appt already been checked out
"RTN","SDCO1",45,0)
 . S SDCOED=$$CHK($TR($$STATUS^SDAM1(DFN,SDT,SDCL,SDATA,SDDA),";","^"))
"RTN","SDCO1",46,0)
 . ;
"RTN","SDCO1",47,0)
 . ; -- if not checked out then do interview process
"RTN","SDCO1",48,0)
 . IF '$$CODT^SDCOU(DFN,SDT,SDCL) D
"RTN","SDCO1",49,0)
 . . N SDCOMKF,SDTRES
"RTN","SDCO1",50,0)
 . . ;
"RTN","SDCO1",51,0)
 . . ; -- first, check if should make follow-up appt
"RTN","SDCO1",52,0)
 . . IF $G(SDCOACT)="CO",'SDCOED D
"RTN","SDCO1",53,0)
 . . . N SDCOMKF
"RTN","SDCO1",54,0)
 . . . D MC^SDCO5(SDOE,1,.SDCOMKF,.SDCOQUIT) Q:$D(SDCOQUIT)
"RTN","SDCO1",55,0)
 . . . ;
"RTN","SDCO1",56,0)
 . . . ; -- Set flag to re-build appointment list
"RTN","SDCO1",57,0)
 . . . IF $G(SDCOMKF) S SDCOALBF=1
"RTN","SDCO1",58,0)
 . . ;
"RTN","SDCO1",59,0)
 . . ; -- c/o interview if user didn't quit
"RTN","SDCO1",60,0)
 . . I '$D(SDCOQUIT),'SDCOED D
"RTN","SDCO1",61,0)
 . . . N SDAPTYP
"RTN","SDCO1",62,0)
 . . . S SDTRES=$$INTV^PXAPI("INTV","SD","PIMS",$P($G(^SCE(+SDOE,0)),U,5),$P($G(^SCE(+SDOE,0)),U,4),DFN)
"RTN","SDCO1",63,0)
 . . . Q:SDTRES<0
"RTN","SDCO1",64,0)
 . . . ;update SDEC APPOINTMENT - alb/sat 627
"RTN","SDCO1",65,0)
 . . . S SDECAPPT=$$APPTGET^SDECUTL(DFN,SDT,SDCL)  ;get SDEC APPOINTMENT ien
"RTN","SDCO1",66,0)
 . . . I SDECAPPT="" D SDEC^SDAMWI1 S SDECAPPT=$$APPTGET^SDECUTL(DFN,SDT,SDCL)
"RTN","SDCO1",67,0)
 . . . D CO1^SDEC25B(SDECAPPT,$S($G(SDCODT)="":$E($$NOW^XLFDT,1,12),1:SDCODT),+SDOE)
"RTN","SDCO1",68,0)
 . . . ;
"RTN","SDCO1",69,0)
 . . . ; -- ask user if they want to see c/o screen
"RTN","SDCO1",70,0)
 . . . S SDGAFC=$$ASK^SDCO6
"RTN","SDCO1",71,0)
 . . . I 'SDGAFC D
"RTN","SDCO1",72,0)
 . . . .N SDELIG
"RTN","SDCO1",73,0)
 . . . .S SDELIG=$$ELSTAT^SDUTL2(DFN)
"RTN","SDCO1",74,0)
 . . . .I $$MHCLIN^SDUTL2(SDCL),'($$COLLAT^SDUTL2(SDELIG)!$P(SDATA,U,11)) D
"RTN","SDCO1",75,0)
 . . . . .I $$NEWGAF^SDUTL2(DFN) D
"RTN","SDCO1",76,0)
 . . . . . .I '$$GAFCM^SDUTL2() S SDGAFC=1
"RTN","SDCO1",77,0)
 . . .I SDGAFC D EN^SDCO(SDOE,,1)
"RTN","SDCO1",78,0)
 . ;
"RTN","SDCO1",79,0)
 . ; -- if already checked out then show c/o screen
"RTN","SDCO1",80,0)
 . E  D EN^SDCO(SDOE,,1)
"RTN","SDCO1",81,0)
 ;
"RTN","SDCO1",82,0)
 ; -- view if old encounters
"RTN","SDCO1",83,0)
 S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDCO1",84,0)
 D EN^SDCO(SDOE,,1)
"RTN","SDCO1",85,0)
 ;
"RTN","SDCO1",86,0)
COQ K % D EWLCHK Q
"RTN","SDCO1",87,0)
 Q
"RTN","SDCO1",88,0)
EWLCHK ;check if patient has any open EWL entries (SD/372)
"RTN","SDCO1",89,0)
 ;get appointment
"RTN","SDCO1",90,0)
 ;
"RTN","SDCO1",91,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"APPT")
"RTN","SDCO1",92,0)
 W:$D(IOF) @IOF D APPT^SDWLEVAL(DFN,SDT,SDCL)
"RTN","SDCO1",93,0)
 Q:'$D(^TMP($J,"APPT"))
"RTN","SDCO1",94,0)
 N SDEV D EN^SDWLEVAL(DFN,.SDEV) I SDEV,$L(SDEV(1))>0 D
"RTN","SDCO1",95,0)
 .K ^TMP("SDWLPL",$J),^TMP($J,"SDWLPL")
"RTN","SDCO1",96,0)
 .D INIT^SDWLPL(DFN,"M")
"RTN","SDCO1",97,0)
 .Q:'$D(^TMP($J,"SDWLPL"))
"RTN","SDCO1",98,0)
 .D LIST^SDWLPL("M",DFN)
"RTN","SDCO1",99,0)
 .F  Q:'$D(^TMP($J,"SDWLPL"))  N SDR D ANSW^SDWLEVAL(1,.SDR) I 'SDR D LIST^SDWLPL("M",DFN) D
"RTN","SDCO1",100,0)
 ..F  N SDR  D ANSW^SDWLEVAL(0,.SDR) Q:'$D(^TMP($J,"SDWLPL"))  I 'SDR W !!,"MUST ACCEPT OR ENTER A REASON NOT TO DISPOSITION MATCHED EWL ENTRY",!
"RTN","SDCO1",101,0)
 ..Q
"RTN","SDCO1",102,0)
 .Q
"RTN","SDCO1",103,0)
 Q
"RTN","SDCO1",104,0)
 ;
"RTN","SDCO1",105,0)
BEFORE(SDATA,DFN,SDT,SDCL,SDDA,SDHDL) ; -- event driver before ; not used
"RTN","SDCO1",106,0)
 S SDATA=SDDA_"^"_DFN_"^"_SDT_"^"_SDCL,SDHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDCO1",107,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDHDL)
"RTN","SDCO1",108,0)
 Q
"RTN","SDCO1",109,0)
 ;
"RTN","SDCO1",110,0)
AFTER(SDATA,DFN,SDT,SDCL,SDDA,SDHDL,SDLNE) ; -- event driver after ; not used
"RTN","SDCO1",111,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDHDL)
"RTN","SDCO1",112,0)
 D:$G(SDLNE) UPD(DFN,SDT,SDCL,SDLNE,SDATA("BEFORE","STATUS"),SDATA("AFTER","STATUS"))
"RTN","SDCO1",113,0)
 D EVT^SDAMEVT(.SDATA,5,0,SDHDL)
"RTN","SDCO1",114,0)
 Q
"RTN","SDCO1",115,0)
 ;
"RTN","SDCO1",116,0)
UPD(DFN,SDT,SDCL,SDLNE,SDSTB,SDSTA) ; -- update appt mgmt screen ; used by AFTER but AFTER is not used
"RTN","SDCO1",117,0)
 N SDAMBOLD
"RTN","SDCO1",118,0)
 I $P(SDSTB,"^",3)'=$P(SDSTA,"^",3) D UPD^SDAM2($$LOWER^VALM1($P(SDSTA,"^",3)),"STAT",SDLNE),UPD^SDAM2("","TIME",SDLNE) S SDAMBOLD(DFN,SDT,SDCL)=""
"RTN","SDCO1",119,0)
 I $P(SDSTA,"^",3)["CHECKED OUT",$P($P(SDSTA,"^",5),".")=DT D UPD^SDAM2($$TIME^SDAM1($P($P(SDSTA,"^",5),".",2)),"TIME",SDLNE)
"RTN","SDCO1",120,0)
 Q
"RTN","SDCO1",121,0)
 ;
"RTN","SDCO1",122,0)
ELIG(DFN,SDT,SDCL,SDDA) ; -- update elig if blank
"RTN","SDCO1",123,0)
 N X,DR
"RTN","SDCO1",124,0)
 I $P(^SC(SDCL,"S",SDT,1,SDDA,0),U,10)="" D
"RTN","SDCO1",125,0)
 .S X=+$G(^DPT(DFN,.36)),X=$S('$D(^DIC(8,X,0)):"",$P(^(0),U,4)=6:"",1:X)
"RTN","SDCO1",126,0)
 .I X]"" S DR="30////^S X="_X D DIE(SDCL,SDT,SDDA,DR)
"RTN","SDCO1",127,0)
 Q
"RTN","SDCO1",128,0)
 ;
"RTN","SDCO1",129,0)
CHK(SDSTB) ; -- is appointment checked out
"RTN","SDCO1",130,0)
 N Y
"RTN","SDCO1",131,0)
 I "^2^8^12^"[("^"_+SDSTB_"^"),$P(SDSTB,"^",3)["CHECKED OUT" S Y=1
"RTN","SDCO1",132,0)
 Q +$G(Y)
"RTN","SDCO1",133,0)
 ;
"RTN","SDCO1",134,0)
DT(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOQUIT) ;Update Check Out Date
"RTN","SDCO1",135,0)
 N %DT,DR,SDCIDT,X
"RTN","SDCO1",136,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDCO1",137,0)
 S DR="",SDCIDT=$P($G(^SC(SDCL,"S",SDT,1,SDDA,"C")),"^"),X=$P($G(^("C")),"^",3)
"RTN","SDCO1",138,0)
 I X G DTQ:'SDASK  S DR="303R"
"RTN","SDCO1",139,0)
 I DR="",$P(^SC(SDCL,0),U,24),$$REQ^SDM1A(SDT)="CO" S DR="303R//"_$S($G(SDCODT):$$FTIME^VALM1($S(SDCODT<SDCIDT:SDCIDT,1:SDCODT)),1:"NOW")
"RTN","SDCO1",140,0)
 I DR="" S DR="303R///"_$S($G(SDCODT):"/"_$S(SDCODT<SDCIDT:SDCIDT,1:SDCODT),1:"NOW")
"RTN","SDCO1",141,0)
 S DR="S SDCOQUIT="""";"_DR_";K SDCOQUIT"
"RTN","SDCO1",142,0)
 D DIE(SDCL,SDT,SDDA,DR)
"RTN","SDCO1",143,0)
DTQ Q
"RTN","SDCO1",144,0)
 ;
"RTN","SDCO1",145,0)
DIE(SDCL,SDT,SDDA,DR) ; -- update appt data in ^SC
"RTN","SDCO1",146,0)
 N DA,DIE
"RTN","SDCO1",147,0)
 S DA(2)=SDCL,DA(1)=SDT,DA=SDDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,"
"RTN","SDCO1",148,0)
 D ^DIE K DQ,DE
"RTN","SDCO1",149,0)
DIEQ Q
"RTN","SDCODEL")
0^125^B11313917^B9522371
"RTN","SDCODEL",1,0)
SDCODEL ;ALB/RMO - Delete Check Out ;JAN 15, 2016
"RTN","SDCODEL",2,0)
 ;;5.3;Scheduling;**20,27,44,97,105,110,132,257,627**;Aug 13, 1993;Build 249
"RTN","SDCODEL",3,0)
 ;
"RTN","SDCODEL",4,0)
EN(SDOE,SDMOD,SDELHDL,SDELSRC) ;Delete Check Out
"RTN","SDCODEL",5,0)
 ; Input  -- SDOE     Outpatient Encounter file IEN
"RTN","SDCODEL",6,0)
 ;           SDMOD    1=Interactive and 0=Non-interactive
"RTN","SDCODEL",7,0)
 ;           SDELHDL  Check Out Deletion Handle  [Optional]
"RTN","SDCODEL",8,0)
 ;           SDELSRC  Source of delete
"RTN","SDCODEL",9,0)
 ; Output -- Delete Check Out
"RTN","SDCODEL",10,0)
 N DA,DFN,DE,DIE,DR,SDCL,SDDA,SDEVTF,SDOE0,SDOEP,SDORG,SDT,SDVSAV,SDVFLG
"RTN","SDCODEL",11,0)
 D SET(SDOE,.SDOE0,.SDT,.DFN,.SDCL,.SDORG,.SDDA)
"RTN","SDCODEL",12,0)
 S SDVSAV=$P(SDOE0,U,5)
"RTN","SDCODEL",13,0)
 ;
"RTN","SDCODEL",14,0)
 ; -- ok to delete?
"RTN","SDCODEL",15,0)
 IF '$$EDITOK^SDCO3(SDOE,SDMOD) G ENQ
"RTN","SDCODEL",16,0)
 ;
"RTN","SDCODEL",17,0)
 IF $G(SDELSRC)'="PCE" S X=$$DELVFILE^PXAPI("ALL",$P($G(^SCE(SDOE,0)),U,5),"","","",1)
"RTN","SDCODEL",18,0)
 S SDVFLG=1
"RTN","SDCODEL",19,0)
 ;
"RTN","SDCODEL",20,0)
 ; -- get handle if not passed and do 'before'
"RTN","SDCODEL",21,0)
 I '$G(SDELHDL) N SDATA,SDELHDL S SDEVTF=1 D EVT^SDCOU1(SDOE,"BEFORE",.SDELHDL,.SDATA)
"RTN","SDCODEL",22,0)
 ;
"RTN","SDCODEL",23,0)
 I $G(SDMOD) W !!,">>> Deleting check out information..."
"RTN","SDCODEL",24,0)
 ;
"RTN","SDCODEL",25,0)
 ; -- delete child data for appts, disposition and stop code addition
"RTN","SDCODEL",26,0)
 I "^1^2^3^"[("^"_SDORG_"^") D CHLD(SDOE,SDMOD) ;SD/257
"RTN","SDCODEL",27,0)
 ;
"RTN","SDCODEL",28,0)
 ; -- delete SDOE pointers and co d/t
"RTN","SDCODEL",29,0)
 I SDORG=1 D
"RTN","SDCODEL",30,0)
 .S DA(1)=DFN,DA=SDT,DIE="^DPT("_DFN_",""S"",",DR="21///@" D ^DIE
"RTN","SDCODEL",31,0)
 .I $G(SDMOD) W !?3,"...deleting check out date/time"
"RTN","SDCODEL",32,0)
 .S DR="303///@" D DIE^SDCO1(SDCL,SDT,+SDDA,DR)
"RTN","SDCODEL",33,0)
 I SDORG=3 D
"RTN","SDCODEL",34,0)
 .S DA(1)=DFN,DA=+SDDA,DIE="^DPT("_DFN_",""DIS"",",DR="18///@" D ^DIE
"RTN","SDCODEL",35,0)
 ;
"RTN","SDCODEL",36,0)
 ; -- do final deletes for sdoe
"RTN","SDCODEL",37,0)
 D CO(SDOE,SDMOD)
"RTN","SDCODEL",38,0)
 D OE(SDOE,SDMOD)
"RTN","SDCODEL",39,0)
 D SDEC(DFN,SDT,SDCL)   ;delete checkout in SDEC APPOINTMENT  ;alb/sat 627
"RTN","SDCODEL",40,0)
 ;
"RTN","SDCODEL",41,0)
 I $G(SDMOD) W !,">>> done."
"RTN","SDCODEL",42,0)
 ;
"RTN","SDCODEL",43,0)
 ; -- if handle not passed, then 'after' and event
"RTN","SDCODEL",44,0)
 I $G(SDEVTF) D EVT^SDCOU1(SDOE,"AFTER",SDELHDL,.SDATA,SDOE0)
"RTN","SDCODEL",45,0)
 ;
"RTN","SDCODEL",46,0)
 ; -- call pce to make sure its data is gone
"RTN","SDCODEL",47,0)
 I $G(SDVFLG) D DEAD^PXUTLSTP(SDVSAV)
"RTN","SDCODEL",48,0)
ENQ Q
"RTN","SDCODEL",49,0)
 ;
"RTN","SDCODEL",50,0)
CHLD(SDOEP,SDMOD) ;Delete Children
"RTN","SDCODEL",51,0)
 N DFN,SDCL,SDDA,SDOE0,SDOEC,SDORG,SDT
"RTN","SDCODEL",52,0)
 S SDOEC=0
"RTN","SDCODEL",53,0)
 F  S SDOEC=$O(^SCE("APAR",SDOEP,SDOEC)) Q:'SDOEC  D
"RTN","SDCODEL",54,0)
 .D SET(SDOEC,.SDOE0,.SDT,.DFN,.SDCL,.SDORG,.SDDA)
"RTN","SDCODEL",55,0)
 .D OE(SDOEC,SDMOD)
"RTN","SDCODEL",56,0)
 Q
"RTN","SDCODEL",57,0)
 ;
"RTN","SDCODEL",58,0)
SET(SDOE,SDOE0,SDT,DFN,SDCL,SDORG,SDDA) ;Set Variables
"RTN","SDCODEL",59,0)
 S SDOE0=$G(^SCE(+SDOE,0)),SDT=+SDOE0,DFN=+$P(SDOE0,"^",2),SDCL=+$P(SDOE0,"^",4),SDORG=+$P(SDOE0,"^",8),SDDA=$P(SDOE0,"^",9)
"RTN","SDCODEL",60,0)
 Q
"RTN","SDCODEL",61,0)
 ;
"RTN","SDCODEL",62,0)
CO(SDOE,SDMOD) ;Delete Classification
"RTN","SDCODEL",63,0)
 N DA,DIK,SDFL,SDI
"RTN","SDCODEL",64,0)
 I $P($G(^SCE(SDOE,0)),"^",6) G COQ
"RTN","SDCODEL",65,0)
 I $O(^SDD(409.42,"AO",SDOE,0))>0 D
"RTN","SDCODEL",66,0)
 .I $G(SDMOD) W !?3,"...deleting classifications"
"RTN","SDCODEL",67,0)
 .D DEL(SDOE,409.42)
"RTN","SDCODEL",68,0)
COQ Q
"RTN","SDCODEL",69,0)
 ;
"RTN","SDCODEL",70,0)
DEL(SDOE,SDFL) ;Delete Classification
"RTN","SDCODEL",71,0)
 N DA,DIK,SDI
"RTN","SDCODEL",72,0)
 S DIK="^SDD("_SDFL_",",SDI=0
"RTN","SDCODEL",73,0)
 F  S SDI=$O(^SDD(SDFL,"AO",SDOE,SDI)) Q:'SDI  S DA=+$O(^(SDI,0)) D ^DIK
"RTN","SDCODEL",74,0)
 Q
"RTN","SDCODEL",75,0)
 ;
"RTN","SDCODEL",76,0)
OE(SDOE,SDMOD) ;Delete Outpatient Encounter
"RTN","SDCODEL",77,0)
 N DA,DIK,SDVSIT,SDORG,SDAT
"RTN","SDCODEL",78,0)
 IF '$$EDITOK^SDCO3(SDOE,SDMOD) G OEQ
"RTN","SDCODEL",79,0)
 S SDAT=$P($G(^SCE(+SDOE,0)),U,1)
"RTN","SDCODEL",80,0)
 S SDVSIT=$P($G(^SCE(SDOE,0)),U,5),SDORG=$P($G(^SCE(SDOE,0)),U,8)
"RTN","SDCODEL",81,0)
 S DA=SDOE,DIK="^SCE(" D ^DIK
"RTN","SDCODEL",82,0)
 S X=$$KILL^VSITKIL(SDVSIT)
"RTN","SDCODEL",83,0)
OEQ Q
"RTN","SDCODEL",84,0)
 ;
"RTN","SDCODEL",85,0)
COMDT(SDOE,SDMOD) ;Delete Check Out Process Completion Date
"RTN","SDCODEL",86,0)
 N DA,DE,DIE,DQ,DR
"RTN","SDCODEL",87,0)
 I $G(SDMOD) W !?3,"...deleting check out process completion date"
"RTN","SDCODEL",88,0)
 S DA=SDOE,DIE="^SCE(",DR=".07///@" D ^DIE
"RTN","SDCODEL",89,0)
 Q
"RTN","SDCODEL",90,0)
 ;
"RTN","SDCODEL",91,0)
SDEC(DFN,SDT,SDCL)   ;delete check out in SDEC APPOINTMENT  ;alb/sat 627
"RTN","SDCODEL",92,0)
 N SDECAPID
"RTN","SDCODEL",93,0)
 S SDECAPID=$$APPTGET^SDECUTL(DFN,SDT,SDCL)
"RTN","SDCODEL",94,0)
 D CANAPPT^SDEC25(SDECAPID)
"RTN","SDCODEL",95,0)
 Q
"RTN","SDEC")
0^1^B119334331^n/a
"RTN","SDEC",1,0)
SDEC ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC",3,0)
 ;
"RTN","SDEC",4,0)
 Q
"RTN","SDEC",5,0)
 ;
"RTN","SDEC",6,0)
ACCGROUP(SDECY) ;EP return active entries from the SDEC ACCESS GROUP file 409.822
"RTN","SDEC",7,0)
 D ACCGROUP^SDEC45(.SDECY) Q
"RTN","SDEC",8,0)
ACCGPTYG(SDECY) ;EP Get access group types
"RTN","SDEC",9,0)
 D ACCGPTYG^SDEC15(.SDECY) Q
"RTN","SDEC",10,0)
ACCTYPE(SDECY) ;EP return active entries from the SDEC ACCESS TYPE file 409.823
"RTN","SDEC",11,0)
 D ACCTYPE^SDEC45(.SDECY) Q
"RTN","SDEC",12,0)
ADDACCG(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS GROUP
"RTN","SDEC",13,0)
 D ADDACCG^SDEC21(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",14,0)
ADDACCTY(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS TYPE
"RTN","SDEC",15,0)
 D ADDACCTY^SDEC14(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",16,0)
ADDAGI(SDECY,SDECIEN,SDECIEN1) ;EP Add access group item - Adds ACCESS GROUP TYPE file entry
"RTN","SDEC",17,0)
 D ADDAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",18,0)
ADDRES(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE
"RTN","SDEC",19,0)
 D ADDRES^SDEC16(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",20,0)
ADDRESU(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE USER
"RTN","SDEC",21,0)
 D ADDRESU^SDEC18(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",22,0)
ADDRG(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE GROUP
"RTN","SDEC",23,0)
 D ADDRG^SDEC19(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",24,0)
ADDRGI(SDECY,SDECIEN,SDECIEN1) ;EP Adds RESOURCEID SDECIEN1 to RESOURCE GROUP entry SDECIEN
"RTN","SDEC",25,0)
 D ADDRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",26,0)
APBLKALL(SDECY,SDECSTART,SDECEND) ;EP List of all appointments for all resources
"RTN","SDEC",27,0)
 D APBLKALL^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",28,0)
APBLKOV(SDECY,SDECSTART,SDECEND,SDECRES,SDECWI) ;EP APPT BLOCKS OVERLAP
"RTN","SDEC",29,0)
 D APBLKOV^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES),$G(SDECWI)) Q
"RTN","SDEC",30,0)
APPADD ;EP ADD NEW APPOINTMENT
"RTN","SDEC",31,0)
 Q  ;rpc calls directly to APPADD^SDEC07
"RTN","SDEC",32,0)
APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER) ;EP Cancels appointment
"RTN","SDEC",33,0)
 D APPDEL^SDEC08(.SDECY,$G(SDECAPTID),$G(SDECTYP),$G(SDECCR),$G(SDECNOT),$G(SDECDATE),$G(SDUSER)) Q
"RTN","SDEC",34,0)
APPIDGET(SDECY,SDID) ;GET SDEC APPOINTMENT ien for given External ID
"RTN","SDEC",35,0)
 D APPIDGET^SDEC55(.SDECY,$G(SDID)) Q
"RTN","SDEC",36,0)
APPSDGET(SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN) ;GET appointment data from SDEC APPOINTMENT file 409.84
"RTN","SDEC",37,0)
 D APPSDGET^SDEC55A(.SDECY,$G(MAXREC),$G(LASTSUB),$G(SDBEG),$G(SDEND),$G(NOTEFLG),$G(SDRES),$G(DFN),$G(SDID),$G(SDIEN)) Q
"RTN","SDEC",38,0)
APPTEVLG(SDECY,DFN) ;EP return appointment data for given patient - RPC
"RTN","SDEC",39,0)
 D APPTEVLG^SDEC38(.SDECY,$G(DFN)) Q
"RTN","SDEC",40,0)
APPTLETR(SDECY,SDECAPID,LT) ;EP Print Appointment Letter
"RTN","SDEC",41,0)
 D APPTLETR^SDEC40(.SDECY,$G(SDECAPID),$G(LT)) Q
"RTN","SDEC",42,0)
APPTYPES(RET,DFN) ; EP for SDEC APPTYPES - Return all active Appointment types from the APPOINTMENT TYPE file 409.1
"RTN","SDEC",43,0)
 D APPTYPES^SDECWL(.RET,$G(DFN)) Q
"RTN","SDEC",44,0)
ARCLOSE(RET,INP...) ;
"RTN","SDEC",45,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",46,0)
ARCLOSE1(RET,INP) ; Appt Request CLOSE  (without ... for VistA calls)
"RTN","SDEC",47,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",48,0)
ARDGET(SDECY) ;get values for disposition field of SDEC APPT REQUEST file
"RTN","SDEC",49,0)
 D ARDGET^SDECAR(.SDECY) Q
"RTN","SDEC",50,0)
ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;EP Appt Request GET
"RTN","SDEC",51,0)
 D ARGET^SDECAR1(.RET,$G(ARIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP)) Q
"RTN","SDEC",52,0)
ARMRTGET(SDECY,ARIEN) ;GET number of entries and values in MRTC CALC PREF DATES
"RTN","SDEC",53,0)
 D ARMRTGET^SDECAR(.SDECY,$G(ARIEN)) Q
"RTN","SDEC",54,0)
ARMRTSET(SDECY,ARIEN,MRTC) ;SET MRTC CALC PREF DATES dates - clears the multiple and sets the new ones that are passed in
"RTN","SDEC",55,0)
 D ARMRTSET^SDECAR(.SDECY,$G(ARIEN),$G(MRTC)) Q
"RTN","SDEC",56,0)
AROPEN(RET,ARAPP,ARIEN,ARDDT) ;Appt Request Open/re-open
"RTN","SDEC",57,0)
 D AROPEN^SDECAR(.RET,$G(ARAPP),$G(ARIEN),$G(ARDDT)) Q
"RTN","SDEC",58,0)
ARPCSET(SDECY,INP,ARIEN) ;SET update patient contacts in SDEC APPT REQUEST file
"RTN","SDEC",59,0)
 D ARPCSET^SDECAR(.SDECY,$G(INP),$G(ARIEN)) Q
"RTN","SDEC",60,0)
ARSET(RET,INP...) ;EP Appt Request Set
"RTN","SDEC",61,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",62,0)
ARSET1(RET,INP) ;EP Appt Request Set (without ... for VistA calls)
"RTN","SDEC",63,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",64,0)
AVADD(SDECY,SDECSTART,SDECEND,SDECTYPID,SDECRES,SDECSLOTS,SDECNOTE) ;EP SET Create entry in SDEC ACCESS BLOCK
"RTN","SDEC",65,0)
 D AVADD^SDEC12(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECTYPID),$G(SDECRES),$G(SDECSLOTS),$G(SDECNOTE)) Q
"RTN","SDEC",66,0)
AVDEL(SDECY,SDECAVID) ;EP Cancel Availability - Deletes Access Block
"RTN","SDEC",67,0)
 D AVDEL^SDEC13(.SDECY,$G(SDECAVID)) Q
"RTN","SDEC",68,0)
AVDELDT(SDECY,SDECRESD,SDECSTART,SDECEND) ;EP Cancel availability in a date range
"RTN","SDEC",69,0)
 D AVDELDT^SDEC13(.SDECY,$G(SDECRESD),$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",70,0)
CANCKOUT(SDECY,SDECAPTID) ;EP Cancel Check Out appointment
"RTN","SDEC",71,0)
 D CANCKOUT^SDEC25(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",72,0)
CANREAS(SDECY,SDECIN) ;EP return active/inactive entries from the CANCELLATION REASONS table 409.2
"RTN","SDEC",73,0)
 D CANREAS^SDEC45(.SDECY,$G(SDECIN)) Q
"RTN","SDEC",74,0)
CGET(SDECY) ;GET active Countries from the COUNTRY CODE file 779.004
"RTN","SDEC",75,0)
 D CGET^SDEC55(.SDECY) Q
"RTN","SDEC",76,0)
CHECKIN(SDECY,SDECAPTID,SDECCDT,SDECCC,SDECPRV,SDECROU,SDECVCL,SDECVFM,SDECOG,SDECCR,SDECPCC,SDECWHF) ;EP Check in appointment
"RTN","SDEC",77,0)
 D CHECKIN^SDEC25(.SDECY,$G(SDECAPTID),$G(SDECCDT),$G(SDECCC),$G(SDECPRV),$G(SDECROU),$G(SDECVCL),$G(SDECVFM),$G(SDECOG),$G(SDECCR),$G(SDECPCC),$G(SDECWHF)) Q
"RTN","SDEC",78,0)
CHECKOUT(SDECY,DFN,SDT,SDCODT,SDECAPTID,VPRV) ;EP Check Out appointment
"RTN","SDEC",79,0)
 D CHECKOUT^SDEC25(.SDECY,$G(DFN),$G(SDT),$G(SDCODT),$G(SDECAPTID),$G(VPRV)) Q
"RTN","SDEC",80,0)
CLINALL(RET) ; EP Return the IEN and NAME for all entries in the SD WL CLINIC LOCATION file
"RTN","SDEC",81,0)
 D CLINALL^SDECWL(.RET) Q
"RTN","SDEC",82,0)
CLINCAN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of CANCELLED patient appointments
"RTN","SDEC",83,0)
 D CLINCAN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",84,0)
CLINDIS(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP Return formatted text output of the Clinic Schedules Report
"RTN","SDEC",85,0)
 D CLINDIS^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",86,0)
CLINDISW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return formatted text output of the Clinic Schedules Report for Walkins
"RTN","SDEC",87,0)
 D CLINDISW^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",88,0)
CLINLET(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP CLINIC LETTERS Appointment data
"RTN","SDEC",89,0)
 D CLINLET^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",90,0)
CLINLETW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP CLINIC LETTERS WALK-IN Appointment data for Walk-in Appointments only
"RTN","SDEC",91,0)
 D CLINLETW^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",92,0)
CLINPROV(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",93,0)
 D CLINPROV^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",94,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP) ;EP Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC",95,0)
 D CLINSET^SDEC32(.SDECY,$G(SDNOSLOT),$G(SDIENS),$G(SDECP)) Q
"RTN","SDEC",96,0)
CLINSTOP(SDECY) ;EP CLINIC STOP remote procedure
"RTN","SDEC",97,0)
 D CLINSTOP^SDEC45(.SDECY) Q
"RTN","SDEC",98,0)
COPYAPPT(SDECY,SDECRES,SDEC44,SDECBEG,SDECEND) ;EP Copy appointments from HOSPITAL LOCATION to SDEC RESOURCE
"RTN","SDEC",99,0)
 D COPYAPPT^SDEC29(.SDECY,$G(SDECRES),$G(SDEC44),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",100,0)
CPCANC(SDECY,SDECTSK) ;EP Copy Appointment Cancel
"RTN","SDEC",101,0)
 D CPCANC^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",102,0)
CPSTAT(SDECY,SDECTSK) ;EP Copy Appointment Status
"RTN","SDEC",103,0)
 D CPSTAT^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",104,0)
CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN) ;EP Create Resource Appointment Schedule
"RTN","SDEC",105,0)
 D CRSCHED^SDEC02(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECWKIN)) Q
"RTN","SDEC",106,0)
CSLOTSCH(SDECY,SDECRES,SDECSTART,SDECEND,SDECTYPES,SDECSRCH) ;GET Create Assigned Slot Schedule
"RTN","SDEC",107,0)
 D CSLOTSCH^SDEC04(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECTYPES),$G(SDECSRCH)) Q
"RTN","SDEC",108,0)
CURFACG(SDECY,SDECDUZ) ;EP  get current division/facility for given user
"RTN","SDEC",109,0)
 D CURFACG^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",110,0)
CVARAPPT(SDECY,SDCL) ;EP IS Clinic Variable Appointment Length
"RTN","SDEC",111,0)
 D CVARAPPT^SDEC37(.SDECY,$G(SDCL)) Q
"RTN","SDEC",112,0)
DELAG(SDECY,SDECGRP) ;EP Deletes entry having IEN SDECGRP from SDEC ACCESS GROUP file
"RTN","SDEC",113,0)
 D DELAG^SDEC21(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",114,0)
DELAGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry having Access Group SDECIEN and Access Type SDECIEN1 the SDEC ACCESS GROUP TYPE file
"RTN","SDEC",115,0)
 D DELAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",116,0)
DELRESGP(SDECY,SDECGRP) ;EP Deletes entry name SDECGRP from SDEC RESOURCE GROUP file
"RTN","SDEC",117,0)
 D DELRESGP^SDEC19(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",118,0)
DELRGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry SDECIEN1 from entry SDECIEN in the SDEC RESOURCE GROUP file
"RTN","SDEC",119,0)
 D DELRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",120,0)
DELRU(SDECY,SDECIEN) ;EP Delete Resource User from SDEC RESOURCE USER file
"RTN","SDEC",121,0)
 D DELRU^SDEC18(.SDECY,$G(SDECIEN)) Q
"RTN","SDEC",122,0)
EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN) ;EP Edit appointment (only 'note text' and appointment length can be edited)
"RTN","SDEC",123,0)
 D EDITAPPT^SDEC26(.SDECY,$G(SDECAPTID),$G(SDECNOTE),$G(SDECLEN)) Q
"RTN","SDEC",124,0)
EHRPT(SDECY,SDECWID,SDECDFN) ;EP Raise patient selection event to EHR
"RTN","SDEC",125,0)
 D EHRPT^SDEC30(.SDECY,$G(SDECWID),$G(SDECDFN)) Q
"RTN","SDEC",126,0)
ETHGET(SDECY) ;GET active Ethnicities from the ETHNICITY file 10.2
"RTN","SDEC",127,0)
 D ETHGET^SDEC55(.SDECY) Q
"RTN","SDEC",128,0)
ETHCMGET(SDECY) ;GET values from the RACE AND ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC",129,0)
 D ETHCMGET^SDEC55(.SDECY) Q
"RTN","SDEC",130,0)
FACLIST(SDECY,DFN) ; Return list of remote facilities for patient
"RTN","SDEC",131,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",132,0)
FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC) ;GET Future appointments for given patient and date range
"RTN","SDEC",133,0)
 D FAPPTGET^SDEC50(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(SDANC)) Q
"RTN","SDEC",134,0)
GETFAC(SDECY,SDECDUZ) ;EP Gets all facilities for a user
"RTN","SDEC",135,0)
 D GETFAC^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",136,0)
GETONE(SDECY,SDGMR) ;EP Return data on one consult
"RTN","SDEC",137,0)
 D GETONE^SDEC51(.SDECY,$G(SDGMR)) Q
"RTN","SDEC",138,0)
GETREGA(SDECRET,DFN) ;EP return basic reg info/demographics for given patient
"RTN","SDEC",139,0)
 D GETREGA^SDEC09(.SDECRET,$G(DFN)) Q
"RTN","SDEC",140,0)
GETVPRV(BGOY,VPRV) ;EP return data from the V PROVIDER file
"RTN","SDEC",141,0)
 D GETVPRV^SDEC44(.BGOY,$G(VPRV)) Q
"RTN","SDEC",142,0)
HIDE(SDECY) ;Return clinics hidden from display
"RTN","SDEC",143,0)
 D HIDE^SDEC45(.SDECY) Q
"RTN","SDEC",144,0)
HLTHSUMM(SDECY,DFN) ;EP Health Summary for given patient
"RTN","SDEC",145,0)
 ;D HLTHSUMM^SDEC41(.SDECY,$G(DFN)) Q
"RTN","SDEC",146,0)
 Q
"RTN","SDEC",147,0)
HOLIDAY(SDECY,SDECBD) ;EP return all entries from the HOLIDAY file 40.5
"RTN","SDEC",148,0)
 D HOLIDAY^SDEC45(.SDECY,$G(SDECBD)) Q
"RTN","SDEC",149,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;EP return HOSPITAL LOCATIONs
"RTN","SDEC",150,0)
 D HOSPLOC^SDEC32(.SDECY,$G(SDECP),$G(MAXREC),$G(LSUB)) Q
"RTN","SDEC",151,0)
IMHERE(SDECRES) ;EP I'm Here
"RTN","SDEC",152,0)
 D IMHERE^SDEC31(.SDECRES) Q
"RTN","SDEC",153,0)
NEWPERS(SDECY,SDCLASS,SDPART,MAXREC,LSUB,INACT) ;return entries from the USR CLASS MEMBERSHIP file that have the given USR CLASS (default is PROVIDER)
"RTN","SDEC",154,0)
 D NEWPERS^SDEC45(.SDECY,$G(SDCLASS),$G(SDPART),$G(MAXREC),$G(LSUB),$G(INACT)) Q
"RTN","SDEC",155,0)
NOSHOPAT(SDECY,DFN,SDCL) ;EP COLLECT NO-SHOW DATA for Patient
"RTN","SDEC",156,0)
 D NOSHOPAT^SDEC37(.SDECY,$G(DFN),$G(SDCL)) Q
"RTN","SDEC",157,0)
NOSHOW(SDECY,SDECAPTID,SDECNS,USERIEN,SDECDATE) ;EP Sets appointment noshow flag in SDEC APPOINTMENT file
"RTN","SDEC",158,0)
 D NOSHOW^SDEC31(.SDECY,$G(SDECAPTID),$G(SDECNS),$G(USERIEN),$G(SDECDATE)) Q
"RTN","SDEC",159,0)
OVBOOK(SDECY,SDCL,SDBEG,SDECRES) ;EP RPC - OVERBOOK - CHECK FOR OVERBOOK FOR GIVEN CLINIC, DATE, AND RESOURCE
"RTN","SDEC",160,0)
 D OVBOOK^SDEC07A(.SDECY,$G(SDCL),$G(SDBEG),$G(SDECRES)) Q
"RTN","SDEC",161,0)
PATAPPTD(SDECY,DFN) ;EP Return the Patient appointment display
"RTN","SDEC",162,0)
 D PATAPPTD^SDEC27(.SDECY,$G(DFN)) Q
"RTN","SDEC",163,0)
PATAPPTH(SDECY,DFN) ;EP return patient's appointment history for given patient - RPC
"RTN","SDEC",164,0)
 D PATAPPTH^SDEC48(.SDECY,$G(DFN)) Q
"RTN","SDEC",165,0)
PCSGET(SDECY,SDSVSP) ;GET clinics for a service/specialty (clinic stop)
"RTN","SDEC",166,0)
 D PCSGET^SDEC50(.SDECY,$G(SDSVSP)) Q
"RTN","SDEC",167,0)
PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND) ;GET patient clinic status for a clinic for a given time frame - has the patient been seen by the given Clinic in the past 24 months
"RTN","SDEC",168,0)
 D PCSTGET^SDEC50(.SDECY,$G(DFN),$G(SDCL),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",169,0)
PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND) ;GET patient clinic status for a service/specialty (clinic stop) for a given time frame - has the patient been seen any clinics with the given service/specialty (clinic stop) in the past 24 months
"RTN","SDEC",170,0)
 D PCST2GET^SDEC50(.SDECY,$G(DFN),$G(STOP),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",171,0)
PREFGET(SDECY,DFN,INAC) ;EP Get values from SDEC PREFERENCES AND SPECIAL NEEDS file for given patient
"RTN","SDEC",172,0)
 D PREFGET^SDEC49(.SDECY,$G(DFN),$G(INAC)) Q
"RTN","SDEC",173,0)
PREFGETV(SDECY) ;EP Get all valid PREFERENCE text from SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC",174,0)
 D PREFGETV^SDEC49(.SDECY) Q
"RTN","SDEC",175,0)
PREFSET(SDECY,DFN,PREF) ;EP Set values to SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC",176,0)
 D PREFSET^SDEC49(.SDECY,$G(DFN),$G(PREF)) Q
"RTN","SDEC",177,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC",178,0)
 D PRIV^SDEC32(.SDECY,$G(CLINIEN),$G(USER)) Q
"RTN","SDEC",179,0)
PROVALL(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",180,0)
 D PROVALL^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",181,0)
PROVCLIN(SDECY,SDECPRV) ;EP PROVIDER CLINICS remote procedure
"RTN","SDEC",182,0)
 D PROVCLIN^SDEC45(.SDECY,$G(SDECPRV)) Q
"RTN","SDEC",183,0)
PTINQ(SDECY,DFN) ;GET output from ORWPT PTINQ in DataTable format
"RTN","SDEC",184,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",185,0)
PTLOOKRS(SDECY,SDECP,SDECC,LASTSUB) ;EP Patient Lookup
"RTN","SDEC",186,0)
 D PTLOOKRS^SDEC28(.SDECY,$G(SDECP),$G(SDECC),$G(LASTSUB)) Q
"RTN","SDEC",187,0)
PTSET(SDECY,INP...) ;SET patient demographics
"RTN","SDEC",188,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",189,0)
PTSET1(SDECY,INP) ;SET patient demographics (call from debug)
"RTN","SDEC",190,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",191,0)
PWH(SDECY) ;EP return list of active Health Summary PWH Types - RPC
"RTN","SDEC",192,0)
 ;D PWH^SDEC39(.SDECY) Q
"RTN","SDEC",193,0)
 Q
"RTN","SDEC",194,0)
RACEGET(SDECY) ;GET active Race entries from the RACE file 10
"RTN","SDEC",195,0)
 D RACEGET^SDEC55(.SDECY) Q
"RTN","SDEC",196,0)
RAISEVNT(SDECY,SDECEVENT,SDECPARAM,SDECSIP,SDECSPT) ;EP RAISE EVENT
"RTN","SDEC",197,0)
 D RAISEVNT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECPARAM),$G(SDECSIP),$G(SDECSPT)) Q
"RTN","SDEC",198,0)
REBKCLIN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of rebooked patient appointments between given dates
"RTN","SDEC",199,0)
 D REBKCLIN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",200,0)
REBKLIST(SDECY,SDECLIST) ;EP patient appointments used in listing REBOOKED appointments for a list of appointmentIDs.
"RTN","SDEC",201,0)
 D REBKLIST^SDEC34(.SDECY,$G(SDECLIST)) Q
"RTN","SDEC",202,0)
REBKNEXT(SDECY,SDECDATE,SDECRES,SDECTPID) ;EP find the next ACCESS BLOCK in resource SDECRES after SDECSTART
"RTN","SDEC",203,0)
 D REBKNEXT^SDEC33(.SDECY,$G(SDECDATE),$G(SDECRES),$G(SDECTPID)) Q
"RTN","SDEC",204,0)
RECIEN(SDECY,RECIEN) ;GET RECALL REMINDERS for given ID
"RTN","SDEC",205,0)
 D RECIEN^SDEC52(.SDECY,$G(RECIEN)) Q
"RTN","SDEC",206,0)
RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP) ; GET entries from the RECALL REMINDERS file 403.5 for a given Patient and Recall Date range.
"RTN","SDEC",207,0)
 D RECGET^SDEC52(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(RECIEN),$G(SDSTOP)) Q
"RTN","SDEC",208,0)
RECSET(SDECY,INP...) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",209,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",210,0)
RECSET1(SDECY,INP) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",211,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",212,0)
RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM) ; DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",213,0)
 D RECDSET^SDEC52A(.SDECY,$G(RECALLIEN),$G(SDRRFTR),$G(SDCOMM)) Q
"RTN","SDEC",214,0)
RECAPGET(SDECY) ; GET entries from the RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC",215,0)
 D RECAPGET^SDEC52B(.SDECY) Q
"RTN","SDEC",216,0)
RECPRGET(SDECY,RECINACT,SDECP,MAXREC,LASTSUB) ;GET entries from the RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC",217,0)
 D RECPRGET^SDEC52B(.SDECY,$G(RECINACT),$G(SDECP),$G(MAXREC),$G(LASTSUB)) Q
"RTN","SDEC",218,0)
REGEVENT(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP Called by client to inform server of client's interest in SDECEVENT
"RTN","SDEC",219,0)
 D REGEVENT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",220,0)
REP1GET(SDECY,MAXREC,LASTSUB,PNAME) ;GET clinic data for report
"RTN","SDEC",221,0)
 D REP1GET^SDEC56(.SDECY,$G(MAXREC),$G(LASTSUB),$G(PNAME)) Q
"RTN","SDEC",222,0)
REQGET(SDECY,SDBEG,SDEND,MAXREC,LASTSUB,SDGMR) ; GET entries with an ACTIVITY of RECEIVED, but do not have an ACTIVITY of SCHEDULED from the REQUEST/CONSULTATING file 123
"RTN","SDEC",223,0)
 D REQGET^SDEC51(.SDECY,$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(SDGMR)) Q
"RTN","SDEC",224,0)
RESGPUSR(SDECY,SDECDUZ) ;EP GROUP RESOURCE
"RTN","SDEC",225,0)
 D RESGPUSR^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",226,0)
RESGRPUS(SDECY,SDECDUZ) ;EP return ACTIVE resource group names for the given user
"RTN","SDEC",227,0)
 D RESGRPUS^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",228,0)
RESLETRF(SDECY,SDECRES,SDECLT) ;EP Return formatted text output of the Resource's Letter - either "LETTER TEXT" (also used as Reminder Letter), NO SHOW LETTER, or CLINIC CANCELLATION LETTER.
"RTN","SDEC",229,0)
 D RESLETRF^SDEC47(.SDECY,$G(SDECRES),$G(SDECLT)) Q
"RTN","SDEC",230,0)
RESLETRS(SDECY,SDECLIST,SDLTR,SDNOS,SDCAN) ;EP GET recordset of RESOURCES and associated LETTERS
"RTN","SDEC",231,0)
 D RESLETRS^SDEC35(.SDECY,$G(SDECLIST),$G(SDLTR),$G(SDNOS),$G(SDCAN)) Q
"RTN","SDEC",232,0)
RESUSER(SDECY,SDRES) ;EP SDEC RESOURCE USER remote procedure returns all entries from the SDEC RESOURCE USER table 409.833
"RTN","SDEC",233,0)
 D RESUSER^SDEC45(.SDECY,$G(SDRES)) Q
"RTN","SDEC",234,0)
RESOURCE(SDECY,SDECDUZ,SDACT,SDTYPE,MAXREC,LASTSUBI,SDIEN,SDECP) ;EP Returns ADO Recordset with ALL RESOURCE names
"RTN","SDEC",235,0)
 D RESOURCE^SDEC01A(.SDECY,$G(SDECDUZ),$G(SDACT),$G(SDTYPE),$G(MAXREC),$G(LASTSUBI),$G(SDIEN),$G(SDECP)) Q
"RTN","SDEC",236,0)
SCHUSR(SDECY) ;EP Return recordset of all users in NEW PERSON having SDECZMENU key
"RTN","SDEC",237,0)
 D SCHUSR^SDEC17(.SDECY) Q
"RTN","SDEC",238,0)
SEARCHAV(SDECY,SDECRES,SDECSTRT,SDECEND,SDECTYPES,SDECAMPM,SDECWKDY) ;EP Searches availability database
"RTN","SDEC",239,0)
 D SEARCHAV^SDEC24(.SDECY,$G(SDECRES),$G(SDECSTRT),$G(SDECEND),$G(SDECTYPES),$G(SDECAMPM),$G(SDECWKDY)) Q
"RTN","SDEC",240,0)
SETFAC(SDECY,SDECDUZ,SDECFAC) ;EP SET FACILITY
"RTN","SDEC",241,0)
 D SETFAC^SDEC46(.SDECY,$G(SDECDUZ),$G(SDECFAC)) Q
"RTN","SDEC",242,0)
SETRBOOK(SDECY,SDECAPPT,SDECDATE) ;EP Sets rebook date into appointment
"RTN","SDEC",243,0)
 D SETRBOOK^SDEC33(.SDECY,$G(SDECAPPT),$G(SDECDATE)) Q
"RTN","SDEC",244,0)
SPACEBAR(SDECY,SDECDIC,SDECVAL) ;EP Update ^DISV with most recent lookup value SDECVAL from file SDECDIC
"RTN","SDEC",245,0)
 D SPACEBAR^SDEC30(.SDECY,$G(SDECDIC),$G(SDECVAL)) Q
"RTN","SDEC",246,0)
SUMMGET(SDECRET,SDBEG,SDEND,USER,LSUB,MAXREC) ;GET Audit Summary for given date range
"RTN","SDEC",247,0)
 D SUMMGET^SDEC54(.SDECRET,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",248,0)
SUMMAGET(SDECY,SDBEG,SDEND,USER,LSUB,MAXREC) ;get ALL appointments with a cancel status from SDEC APPOINTMENT for given date range and user
"RTN","SDEC",249,0)
 D SUMMAGET^SDEC54A(.SDECY,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",250,0)
SUSRINFO(SDECY,SDECDUZ) ;EP SCHEDULING USER INFO
"RTN","SDEC",251,0)
 D SUSRINFO^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",252,0)
SVSPALL(RET) ; EP return IEN and NAME for all entries in the SD WL SERVICE/SPECIALTY file
"RTN","SDEC",253,0)
 D SVSPALL^SDECWL(.RET) Q
"RTN","SDEC",254,0)
SYSSTAT(SDECY) ; EP SYSTEM STATUS
"RTN","SDEC",255,0)
 D SYSSTAT^SDECUTL(.SDECY) Q
"RTN","SDEC",256,0)
TPBLKOV(SDECY,SDECSTART,SDECEND,SDECRES) ;EP TYPE BLOCKS OVERLAP
"RTN","SDEC",257,0)
 D TPBLKOV^SDEC06(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES)) Q
"RTN","SDEC",258,0)
UNDOCANA(SDECY,SDECAPTID) ;EP  Undo Cancel Appointment
"RTN","SDEC",259,0)
 D UNDOCANA^SDEC08(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",260,0)
UNREGEV(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP rpc SDE UNREGEV Called by client to Unregister client's interest in SDECEVENT
"RTN","SDEC",261,0)
 D UNREGEV^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",262,0)
WAITLIST(SDECY,SDECRES) ;EP COLLECT WAITLIST DATA
"RTN","SDEC",263,0)
 D WAITLIST^SDEC36(.SDECY,$G(SDECRES)) Q
"RTN","SDEC",264,0)
WLCLOSE(RET,INP...) ; Waitlist CLOSE
"RTN","SDEC",265,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",266,0)
WLCLOSE1(RET,INP) ; Waitlist CLOSE  (without ... for VistA calls)
"RTN","SDEC",267,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",268,0)
WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;EP Waitlist GET
"RTN","SDEC",269,0)
 D WLGET^SDECWL1(.RET,$G(WLIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP)) Q
"RTN","SDEC",270,0)
WLHIDE(SDECY,DFN,WLCL) ;GET wait list entries in which the associated clinic's 'HIDE FROM DISPLAY?' field is 'YES'
"RTN","SDEC",271,0)
 D WLHIDE^SDECWL3(.SDECY,$G(DFN),$G(WLCL)) Q
"RTN","SDEC",272,0)
WLOPEN(RET,WLAPP,WLIEN,WLDDT) ;SET Waitlist Open/re-open
"RTN","SDEC",273,0)
 D WLOPEN^SDECWL(.RET,$G(WLAPP),$G(WLIEN),$G(WLDDT)) Q
"RTN","SDEC",274,0)
WLPCSET(SDECY,INP,WLIEN) ;SET update patient contacts in SD WAIT LIST file
"RTN","SDEC",275,0)
 D WLPCSET^SDECWL(.SDECY,$G(INP),$G(WLIEN)) Q
"RTN","SDEC",276,0)
WLSET(RET,INP...) ;EP Waitlist Set
"RTN","SDEC",277,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC",278,0)
WLSET1(RET,INP) ;EP Waitlist Set (without ... for VistA calls)
"RTN","SDEC",279,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC01")
0^2^B31785408^n/a
"RTN","SDEC01",1,0)
SDEC01 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC01",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC01",3,0)
 ;
"RTN","SDEC01",4,0)
 Q
"RTN","SDEC01",5,0)
 ;
"RTN","SDEC01",6,0)
SUSRINFO(SDECY,SDECDUZ) ;get SCHEDULING USER INFO
"RTN","SDEC01",7,0)
 ;SUSRINFO(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",8,0)
 ;INPUT:
"RTN","SDEC01",9,0)
 ; SDECDUZ = (optional) user ID pointer to NEW PATIENT file
"RTN","SDEC01",10,0)
 ;                      Default to current user
"RTN","SDEC01",11,0)
 ; RETURN:
"RTN","SDEC01",12,0)
 ;   Successful Return:
"RTN","SDEC01",13,0)
 ;     Global Array containing 1 entry with following:
"RTN","SDEC01",14,0)
 ;   Data is separated by ^:
"RTN","SDEC01",15,0)
 ;    1. MANAGER -  YES if the user has the SDECZMGR key
"RTN","SDEC01",16,0)
 ;                  NO  if not
"RTN","SDEC01",17,0)
 ;    2. USER_NAME
"RTN","SDEC01",18,0)
 ;    3. MENU    -  YES if the user has the SDECZMENU key
"RTN","SDEC01",19,0)
 ;                  NO  if not
"RTN","SDEC01",20,0)
 ;    4. SUPER   -  YES if the user has the SD SUPERVISOR key
"RTN","SDEC01",21,0)
 ;                  NO if not
"RTN","SDEC01",22,0)
 ;    5. SDWLMENU - YES if the user has the SDWL MENU key
"RTN","SDEC01",23,0)
 ;                  NO if not
"RTN","SDEC01",24,0)
 ;    6. SDECRMIC - YES if the user has the SDECZ REQUEST key
"RTN","SDEC01",25,0)
 ;                  NO if not
"RTN","SDEC01",26,0)
 ;    7. SDOB     - YES if the user has the SDOB key
"RTN","SDEC01",27,0)
 ;                  NO if not
"RTN","SDEC01",28,0)
 ;    8. SDMOB    - YES if the user has the SDMOB key
"RTN","SDEC01",29,0)
 ;                  NO if not
"RTN","SDEC01",30,0)
 N SDECMENU,SDECMGR,SDECERR,SDECI,SDSUPER,SDWLMENU,SDECRMIC
"RTN","SDEC01",31,0)
 N SDOB,SDMOB,SDTMP
"RTN","SDEC01",32,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC01",33,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",34,0)
 S SDECI=0
"RTN","SDEC01",35,0)
 S SDECERR=""
"RTN","SDEC01",36,0)
 S SDTMP="T00010MANAGER^T00020USER_NAME^T00030MENU^T00030SUPER^T00030SDWLMENU^T00030SDECRMIC"
"RTN","SDEC01",37,0)
 S SDTMP=SDTMP_"^T00030SDOB^T00030SDMOB"
"RTN","SDEC01",38,0)
 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC01",39,0)
 ;Check SECURITY KEY file for SDECZMGR keys
"RTN","SDEC01",40,0)
 I '+$G(SDECDUZ) S SDECDUZ=DUZ
"RTN","SDEC01",41,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",42,0)
 S SDECMGR=$S(SDECMGR=1:"YES",1:"NO")
"RTN","SDEC01",43,0)
 S SDECMENU=$$APSEC("SDECZMENU",SDECDUZ)
"RTN","SDEC01",44,0)
 S SDECMENU=$S(SDECMENU=1:"YES",1:"NO")
"RTN","SDEC01",45,0)
 S SDSUPER=$$APSEC("SD SUPERVISOR",SDECDUZ)
"RTN","SDEC01",46,0)
 S SDSUPER=$S(SDSUPER=1:"YES",1:"NO")
"RTN","SDEC01",47,0)
 S SDWLMENU=$$APSEC("SDWL MENU",SDECDUZ)
"RTN","SDEC01",48,0)
 S SDWLMENU=$S(SDWLMENU=1:"YES",1:"NO")
"RTN","SDEC01",49,0)
 S SDECRMIC=$$APSEC("SDECZ REQUEST",SDECDUZ)
"RTN","SDEC01",50,0)
 S SDECRMIC=$S(SDECRMIC=1:"YES",1:"NO")
"RTN","SDEC01",51,0)
 S SDOB=$$APSEC("SDOB",SDECDUZ)
"RTN","SDEC01",52,0)
 S SDOB=$S(SDOB=1:"YES",1:"NO")
"RTN","SDEC01",53,0)
 S SDMOB=$$APSEC("SDMOB",SDECDUZ)
"RTN","SDEC01",54,0)
 S SDMOB=$S(SDMOB=1:"YES",1:"NO")
"RTN","SDEC01",55,0)
 S SDECI=SDECI+1
"RTN","SDEC01",56,0)
 S ^TMP("SDEC",$J,SDECI)=SDECMGR_"^"_$$GET1^DIQ(200,SDECDUZ_",",.01)_"^"_SDECMENU_"^"_SDSUPER_"^"_SDWLMENU_"^"_SDECRMIC_"^"_SDOB_"^"_SDMOB_$C(30)
"RTN","SDEC01",57,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)_SDECERR
"RTN","SDEC01",58,0)
 Q
"RTN","SDEC01",59,0)
 ;
"RTN","SDEC01",60,0)
RESGRPUS(SDECY,SDECDUZ) ;return ACTIVE resource group names for the given user
"RTN","SDEC01",61,0)
 ;RESGRPUS(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",62,0)
 ;Returns ADO Recordset with all ACTIVE resource group names to which user has access
"RTN","SDEC01",63,0)
 ;based on entries in SDEC RESOURCE USER file
"RTN","SDEC01",64,0)
 ;If SDECDUZ=0 then returns all department names for current DUZ
"RTN","SDEC01",65,0)
 ;If user SDECDUZ possesses the key SDECZMGR
"RTN","SDEC01",66,0)
 ;then ALL resource group names are returned regardless of whether any active resources
"RTN","SDEC01",67,0)
 ;are associated with the group or not.
"RTN","SDEC01",68,0)
 ;
"RTN","SDEC01",69,0)
 N SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI
"RTN","SDEC01",70,0)
 N SDECMGR,SDECNOD
"RTN","SDEC01",71,0)
 K ^TMP("SDEC01",$J)
"RTN","SDEC01",72,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC01",73,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",74,0)
 S SDECI=0
"RTN","SDEC01",75,0)
 S SDECERR=""
"RTN","SDEC01",76,0)
 S ^TMP("SDEC",$J,SDECI)="I00020RESOURCE_GROUPID^T00030RESOURCE_GROUP"_$C(30)
"RTN","SDEC01",77,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01",78,0)
 ;Check SECURITY KEY file for SDECZMGR keys
"RTN","SDEC01",79,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",80,0)
 ;
"RTN","SDEC01",81,0)
 ;User does not have SDECZMGR keys, so
"RTN","SDEC01",82,0)
 ;$O THRU AC XREF OF SDEC RESOURCE USER
"RTN","SDEC01",83,0)
 I 'SDECMGR,$D(^SDEC(409.833,"AC",SDECDUZ)) S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.833,"AC",SDECDUZ,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",84,0)
 . S SDECRES=$P(^SDEC(409.833,SDECIEN,0),U)
"RTN","SDEC01",85,0)
 . Q:'$D(^SDEC(409.832,"AB",SDECRES))
"RTN","SDEC01",86,0)
 . Q:'$D(^SDEC(409.831,SDECRES))
"RTN","SDEC01",87,0)
 . S SDECRNOD=^SDEC(409.831,SDECRES,0)
"RTN","SDEC01",88,0)
 . ;QUIT if the resource is inactive
"RTN","SDEC01",89,0)
 . Q:$P(SDECRNOD,U,2)=1
"RTN","SDEC01",90,0)
 . S SDECDEP=0 F  S SDECDEP=$O(^SDEC(409.832,"AB",SDECRES,SDECDEP)) Q:'+SDECDEP  D
"RTN","SDEC01",91,0)
 . . Q:'$D(^SDEC(409.832,SDECDEP,0))
"RTN","SDEC01",92,0)
 . . Q:$D(^TMP("SDEC01",$J,SDECDEP))
"RTN","SDEC01",93,0)
 . . S ^TMP("SDEC01",$J,SDECDEP)=""
"RTN","SDEC01",94,0)
 . . S SDECDEPN=$P(^SDEC(409.832,SDECDEP,0),U)
"RTN","SDEC01",95,0)
 . . S SDECI=SDECI+1
"RTN","SDEC01",96,0)
 . . S ^TMP("SDEC",$J,SDECI)=SDECDEP_U_SDECDEPN_$C(30)
"RTN","SDEC01",97,0)
 . . Q
"RTN","SDEC01",98,0)
 . Q
"RTN","SDEC01",99,0)
 ;
"RTN","SDEC01",100,0)
 ;User does have SDECZMGR keys, so
"RTN","SDEC01",101,0)
 ;$O THRU SDEC RESOURCE GROUP file directly
"RTN","SDEC01",102,0)
 I SDECMGR S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.832,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",103,0)
 . Q:'$D(^SDEC(409.832,SDECIEN,0))
"RTN","SDEC01",104,0)
 . S SDECNOD=^SDEC(409.832,SDECIEN,0)
"RTN","SDEC01",105,0)
 . S SDECDEPN=$P(SDECNOD,U)
"RTN","SDEC01",106,0)
 . S SDECI=SDECI+1
"RTN","SDEC01",107,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECDEPN_$C(30)
"RTN","SDEC01",108,0)
 . Q
"RTN","SDEC01",109,0)
 ;
"RTN","SDEC01",110,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)_SDECERR
"RTN","SDEC01",111,0)
 Q
"RTN","SDEC01",112,0)
 ;
"RTN","SDEC01",113,0)
RESGPUSR(SDECY,SDECDUZ) ;GROUP RESOURCE
"RTN","SDEC01",114,0)
 ;RESGPUSR(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",115,0)
 ;Returns ADO Recordset with all ACTIVE GROUP/RESOURCE combinations
"RTN","SDEC01",116,0)
 ;to which user has access based on entries in SDEC RESOURCE USER file
"RTN","SDEC01",117,0)
 ;If SDECDUZ=0 then returns all ACTIVE GROUP/RESOURCE combinations for current DUZ
"RTN","SDEC01",118,0)
 ;If user SDECDUZ possesses the key SDECZMGR
"RTN","SDEC01",119,0)
 ;then ALL ACTIVE resource group names are returned
"RTN","SDEC01",120,0)
 ;
"RTN","SDEC01",121,0)
 N SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI
"RTN","SDEC01",122,0)
 N SDECRESN,SDECMGR,SDECRESD,SDECNOD,SDECSUBID
"RTN","SDEC01",123,0)
 N SDCL,SDPRV,SDTYP
"RTN","SDEC01",124,0)
 K ^TMP("SDEC01",$J)
"RTN","SDEC01",125,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC01",126,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",127,0)
 S SDECI=0
"RTN","SDEC01",128,0)
 S SDECERR=""
"RTN","SDEC01",129,0)
 S ^TMP("SDEC",$J,SDECI)="I00020RESOURCE_GROUPID^T00030RESOURCE_GROUP^I00020RESOURCE_GROUP_ITEMID^T00030RESOURCE_NAME^I00020RESOURCEID"_$C(30)
"RTN","SDEC01",130,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01",131,0)
 ;Check SECURITY KEY file for SDECZMGR key
"RTN","SDEC01",132,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",133,0)
 ;
"RTN","SDEC01",134,0)
 S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.832,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",135,0)
 . Q:'$D(^SDEC(409.832,SDECIEN,0))
"RTN","SDEC01",136,0)
 . S SDECNOD=^SDEC(409.832,SDECIEN,0)
"RTN","SDEC01",137,0)
 . S SDECDEPN=$P(SDECNOD,U)
"RTN","SDEC01",138,0)
 . S SDECRES=0 F  S SDECRES=$O(^SDEC(409.832,SDECIEN,1,SDECRES)) Q:'+SDECRES  D
"RTN","SDEC01",139,0)
 . . N SDECRESD
"RTN","SDEC01",140,0)
 . . Q:'$D(^SDEC(409.832,SDECIEN,1,SDECRES,0))
"RTN","SDEC01",141,0)
 . . S SDECRESD=$P(^SDEC(409.832,SDECIEN,1,SDECRES,0),"^")
"RTN","SDEC01",142,0)
 . . Q:'$D(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC01",143,0)
 . . S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC01",144,0)
 . . Q:SDECRNOD=""
"RTN","SDEC01",145,0)
 . . ;QUIT if the resource is inactive
"RTN","SDEC01",146,0)
 . . S SDCL=$P(SDECRNOD,U,4)
"RTN","SDEC01",147,0)
 . . S SDTYP=$P(SDECRNOD,U,11)
"RTN","SDEC01",148,0)
 . . I $P(SDTYP,";",2)="VA(200," D RESPRV1^SDEC01B($P(SDTYP,";",1),SDCL)
"RTN","SDEC01",149,0)
 . . Q:$$GET1^DIQ(409.831,SDECRESD_",",.02)="YES"
"RTN","SDEC01",150,0)
 . . S SDECRESN=$P(SDECRNOD,U)
"RTN","SDEC01",151,0)
 . . S SDECI=SDECI+1
"RTN","SDEC01",152,0)
 . . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECDEPN_U_SDECRES_U_SDECRESN_U_SDECRESD_$C(30)
"RTN","SDEC01",153,0)
 . . Q
"RTN","SDEC01",154,0)
 . Q
"RTN","SDEC01",155,0)
 ;
"RTN","SDEC01",156,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)_SDECERR
"RTN","SDEC01",157,0)
 Q
"RTN","SDEC01",158,0)
 ;
"RTN","SDEC01",159,0)
APSEC(SDECKEY,SDECDUZ) ;EP - Return TRUE (1) if user has keys SDECKEY, otherwise, returns FALSE (0)
"RTN","SDEC01",160,0)
 ;
"RTN","SDEC01",161,0)
 N SDECIEN,SDECPKEY
"RTN","SDEC01",162,0)
 I '$G(SDECDUZ) Q 0
"RTN","SDEC01",163,0)
 ;
"RTN","SDEC01",164,0)
 I SDECKEY="" Q 0
"RTN","SDEC01",165,0)
 I '$D(^DIC(19.1,"B",SDECKEY)) Q 0
"RTN","SDEC01",166,0)
 S SDECIEN=$O(^DIC(19.1,"B",SDECKEY,0))
"RTN","SDEC01",167,0)
 I '+SDECIEN Q 0
"RTN","SDEC01",168,0)
 I '$D(^VA(200,SDECDUZ,51,SDECIEN,0)) Q 0
"RTN","SDEC01",169,0)
 Q 1
"RTN","SDEC01A")
0^151^B81925987^n/a
"RTN","SDEC01A",1,0)
SDEC01A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC01A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC01A",3,0)
 ;
"RTN","SDEC01A",4,0)
 Q
"RTN","SDEC01A",5,0)
 ;
"RTN","SDEC01A",6,0)
RESOURCE(SDECY,SDECDUZ,SDACT,SDTYPE,MAXREC,LASTSUBI,SDIEN,SDECP) ;Returns ADO Recordset with ALL RESOURCE names
"RTN","SDEC01A",7,0)
 ;   SDECDUZ = (optional) pointer to NEW PERSON file
"RTN","SDEC01A",8,0)
 ;                       Defaults to current user
"RTN","SDEC01A",9,0)
 ;                       checks that overbook is allowed
"RTN","SDEC01A",10,0)
 ;   SDACT   = (optional) 1 or YES will return only active resources
"RTN","SDEC01A",11,0)
 ;                       0, NO, or null will include inactive
"RTN","SDEC01A",12,0)
 ;   SDTYPE    = (optional) null will return all resource types
"RTN","SDEC01A",13,0)
 ;            H will only return HOSPITAL LOCATION (clinic) resources
"RTN","SDEC01A",14,0)
 ;            P will only return NEW PERSON (Provider) resources
"RTN","SDEC01A",15,0)
 ;            A will only return SDEC ADDITIONAL RESOURCE resources
"RTN","SDEC01A",16,0)
 ;            PH will only return prohibited clinics
"RTN","SDEC01A",17,0)
 ;   MAXREC   - (optional) Max records returned
"RTN","SDEC01A",18,0)
 ;   LASTSUBI - (optional) last subscripts from previous call
"RTN","SDEC01A",19,0)
 ;   SDIEN    - (optional) pointer to SDEC RESOURCE file
"RTN","SDEC01A",20,0)
 ;                         only 1 record will be returned if SDIEN is present
"RTN","SDEC01A",21,0)
 ;   SDECP  - (optional) Partial name text
"RTN","SDEC01A",22,0)
 ;RETURN:
"RTN","SDEC01A",23,0)
 ;  Successful Return:
"RTN","SDEC01A",24,0)
 ;   a global array in which each array entry contains data from the
"RTN","SDEC01A",25,0)
 ;      SDEC RESOURCE file
"RTN","SDEC01A",26,0)
 ;   1. RESOURCEID - Pointer to the SDEC RESOURCE file
"RTN","SDEC01A",27,0)
 ;   2. RESOURCE_NAME - NAME from SDEC RESOURCE file
"RTN","SDEC01A",28,0)
 ;   3. INACTIVE   - inactive Clinic - Returned values will be NO YES
"RTN","SDEC01A",29,0)
 ;   4. TIMESCALE - Valid Values:
"RTN","SDEC01A",30,0)
 ;                    5, 10, 15, 20, 30, 60
"RTN","SDEC01A",31,0)
 ;   5. HOSPITAL_LOCATION_ID
"RTN","SDEC01A",32,0)
 ;   6. <NOT USED> LETTER_TEXT
"RTN","SDEC01A",33,0)
 ;   7. <NOT USED> NO_SHOW_LETTER
"RTN","SDEC01A",34,0)
 ;   8. <NOT USED> CLINIC_CANCELLATION_LETTER
"RTN","SDEC01A",35,0)
 ;   9. VIEW - User can VIEW 1=YES; 0=NO
"RTN","SDEC01A",36,0)
 ;  10. OVERBOOK - User can OVERBOOK  1=YES; 0=NO
"RTN","SDEC01A",37,0)
 ;  11. MODIFY_SCHEDULE - User can Modify Schedule  1=YES; 0=NO
"RTN","SDEC01A",38,0)
 ;  12. MODIFY_APPOINTMENTS User can modify appointments  1=YES; 0=NO
"RTN","SDEC01A",39,0)
 ;  13. RESOURCETYPE - 3 pipe pieces:
"RTN","SDEC01A",40,0)
 ;          1. type H, P, or A
"RTN","SDEC01A",41,0)
 ;          2. IEN - pointer to [H] HOSPITAL LOCATION, [P] NEW PERSON,
"RTN","SDEC01A",42,0)
 ;                   or [A] SDEC ADDITIONAL RESOURCE file
"RTN","SDEC01A",43,0)
 ;          3. Name - name from the appropriate type file
"RTN","SDEC01A",44,0)
 ;  14. DATE      - Date/Time entered in external format
"RTN","SDEC01A",45,0)
 ;  15. USERIEN   - Entered By User ID pointer to NEW PERSON file 200
"RTN","SDEC01A",46,0)
 ;  16. USERNAME  - Entered By User name from NEW PERSON file
"RTN","SDEC01A",47,0)
 ;  17. DATE1     - Inactive Date/Time in external format
"RTN","SDEC01A",48,0)
 ;  18. USERIEN1  - Inactivating User ID pointer to NEW PERSON file
"RTN","SDEC01A",49,0)
 ;  19. USERNAME1 - Inactivating User Name from NEW PERSON file
"RTN","SDEC01A",50,0)
 ;  20. DATE2     - Reactivated Date/Time in external format
"RTN","SDEC01A",51,0)
 ;  21. USERIEN2  - Reactivating User ID pointer to NEW PERSON file
"RTN","SDEC01A",52,0)
 ;  22. USERNAME2 - Reactivating User Name from NEW PERSON file
"RTN","SDEC01A",53,0)
 ;  23. CLINNAME  - Clinic Name from HOSPITAL LOCATION file 44
"RTN","SDEC01A",54,0)
 ;  24. PROVCLIN  - Boolean indicating 'this' P type resource is a provider for a clinic
"RTN","SDEC01A",55,0)
 ;                  0  = not a provider (not found in the AVADPR index for file 44)
"RTN","SDEC01A",56,0)
 ;                  1  = is a provider
"RTN","SDEC01A",57,0)
 ;  25. PRIVLOC   - Boolean indicating presence of privileged users for hospital location
"RTN","SDEC01A",58,0)
 ;  26. PRHBLOC   - Boolean indicating if location is a Prohibit Access clinic
"RTN","SDEC01A",59,0)
 ;  27. LASTSUB   - Last subscript in return data. Used in next call to
"RTN","SDEC01A",60,0)
 ;                  SDEC RESOURCE to get additional records
"RTN","SDEC01A",61,0)
 ;
"RTN","SDEC01A",62,0)
 ;
"RTN","SDEC01A",63,0)
 N SDA,SDCL,SDDATA,SDMSG,SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI,SDEC,SDECLTR
"RTN","SDEC01A",64,0)
 N SDECNOS,SDECCAN,SDTYPR,SDX,SDPRO,PRO,SDK
"RTN","SDEC01A",65,0)
 S SDX="",SDPRO=0
"RTN","SDEC01A",66,0)
 S SDECY="^TMP(""SDEC01A"","_$J_",""RESOURCE"")"
"RTN","SDEC01A",67,0)
 K @SDECY
"RTN","SDEC01A",68,0)
 S SDECI=0
"RTN","SDEC01A",69,0)
 S (SDECERR,SDTYPR)=""
"RTN","SDEC01A",70,0)
 ;                              1                2                   3              4               5                          6                 7
"RTN","SDEC01A",71,0)
 S @SDECY@(SDECI)="I00010RESOURCEID^T00030RESOURCE_NAME^T00010INACTIVE^I00010TIMESCALE^I00010HOSPITAL_LOCATION_ID^T00030LETTER_TEXT^T00030NO_SHOW_LETTER"
"RTN","SDEC01A",72,0)
 ;                                        8                                9          10             11                    12
"RTN","SDEC01A",73,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030CLINIC_CANCELLATION_LETTER^I00010VIEW^I00010OVERBOOK^I00010MODIFY_SCHEDULE^I00010MODIFY_APPOINTMENTS"
"RTN","SDEC01A",74,0)
 ;                                        13                 14         15            16
"RTN","SDEC01A",75,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030RESOURCETYPE^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDEC01A",76,0)
 ;                                        17          18             19              20          21             22
"RTN","SDEC01A",77,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030DATE1^T00030USERIEN1^T00030USERNAME1^T00030DATE2^T00030USERIEN2^T00030USERNAME2"
"RTN","SDEC01A",78,0)
 ;                                        23             24           25              26            27
"RTN","SDEC01A",79,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030CLINNAME^T00030PROVCLIN^T00030PRIVLOC^T00030PRHBLOC^T00030LASTSUB"_$C(30)
"RTN","SDEC01A",80,0)
 ;validate user
"RTN","SDEC01A",81,0)
 S SDECDUZ=$G(SDECDUZ)
"RTN","SDEC01A",82,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01A",83,0)
 ;validate active
"RTN","SDEC01A",84,0)
 S SDACT=$G(SDACT)
"RTN","SDEC01A",85,0)
 S SDACT=$S(SDACT=1:1,SDACT="YES":1,1:0)
"RTN","SDEC01A",86,0)
 ;validate type
"RTN","SDEC01A",87,0)
 S SDTYPE=$G(SDTYPE)
"RTN","SDEC01A",88,0)
 ;MGH added new type
"RTN","SDEC01A",89,0)
 I SDTYPE="PH" S SDPRO=1
"RTN","SDEC01A",90,0)
 S SDTYPE=$S(SDTYPE="H":"SC(",SDTYPE="P":"VA(200",SDTYPE="A":"SDEC",1:"")
"RTN","SDEC01A",91,0)
 ;validate MAXREC
"RTN","SDEC01A",92,0)
 S MAXREC=$G(MAXREC,9999999)
"RTN","SDEC01A",93,0)
 ;validate LASTSUBI
"RTN","SDEC01A",94,0)
 S LASTSUBI=$G(LASTSUBI)
"RTN","SDEC01A",95,0)
 ;validate SDIEN
"RTN","SDEC01A",96,0)
 ;MGH changed to allow multiple IENS
"RTN","SDEC01A",97,0)
 ;S SDIEN=$G(SDIEN)
"RTN","SDEC01A",98,0)
 ;I SDIEN'="",'$D(^SDEC(409.831,+SDIEN,0)) S SDIEN=""
"RTN","SDEC01A",99,0)
 I $G(SDIEN) D  G RESX
"RTN","SDEC01A",100,0)
 .F SDK=1:1:$L(SDIEN,"|") D
"RTN","SDEC01A",101,0)
 ..S SDECIEN=$P(SDIEN,"|",SDK)
"RTN","SDEC01A",102,0)
 ..Q:'$D(^SDEC(409.831,+SDECIEN,0))
"RTN","SDEC01A",103,0)
 ..S SDECRES=SDECIEN
"RTN","SDEC01A",104,0)
 ..D RES1
"RTN","SDEC01A",105,0)
 ;ien lookup
"RTN","SDEC01A",106,0)
 ;I +SDIEN S SDECRES=+SDIEN D RES1 G RESX
"RTN","SDEC01A",107,0)
 ;validate SDECP
"RTN","SDEC01A",108,0)
 S SDECP=$G(SDECP)
"RTN","SDEC01A",109,0)
 ;partial name lookup
"RTN","SDEC01A",110,0)
 I SDECP'="" D
"RTN","SDEC01A",111,0)
 .S SDX=$S($P(LASTSUBI,"|",1)'="":$$GETSUB^SDEC56($P(LASTSUBI,"|",1)),1:$$GETSUB^SDEC56(SDECP)) F  S SDX=$O(^SDEC(409.831,"B",SDX)) Q:SDX=""  Q:SDX'[SDECP  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",112,0)
 ..S SDECRES=$S($P(LASTSUBI,"|",2)'="":$P(LASTSUBI,"|",2),1:0)
"RTN","SDEC01A",113,0)
 ..S LASTSUBI="" F  S SDECRES=$O(^SDEC(409.831,"B",SDX,SDECRES)) Q:'+SDECRES  D RES1  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",114,0)
 ;$O THRU SDEC RESOURCE File
"RTN","SDEC01A",115,0)
 I SDECP="",'+SDIEN S SDECRES=$S($P(LASTSUBI,"|",2)'="":$P(LASTSUBI,"|",2),1:0) F  S SDECRES=$O(^SDEC(409.831,SDECRES)) Q:'+SDECRES  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",116,0)
 .D RES1
"RTN","SDEC01A",117,0)
RESX ;
"RTN","SDEC01A",118,0)
 I SDECI>0,SDECP'="",'+$G(SDECRES),SDX="" S $P(@SDECY@(SDECI),U,27)=""
"RTN","SDEC01A",119,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC01A",120,0)
 Q
"RTN","SDEC01A",121,0)
RES1 ; get data for 1 resource
"RTN","SDEC01A",122,0)
 Q:'$D(^SDEC(409.831,SDECRES,0))
"RTN","SDEC01A",123,0)
 S SDECRNOD=^SDEC(409.831,SDECRES,0)
"RTN","SDEC01A",124,0)
 I SDTYPE'="" Q:$P(SDECRNOD,U,11)'[SDTYPE
"RTN","SDEC01A",125,0)
 S SDTYPR=$P(SDECRNOD,U,11)
"RTN","SDEC01A",126,0)
 S $P(SDTYPR,"|",1)=$S($P(SDTYPR,";",2)="SC(":"H",$P(SDTYPR,";",2)="VA(200,":"P",$P(SDTYPR,";",2)="SDEC(409.834,":"A",1:"")
"RTN","SDEC01A",127,0)
 S $P(SDTYPR,"|",2)=$P($P(SDECRNOD,U,11),";",1)
"RTN","SDEC01A",128,0)
 S $P(SDTYPR,"|",3)=$$GET1^DIQ(409.831,SDECRES_",",.012)
"RTN","SDEC01A",129,0)
 I $P(SDTYPR,"|",1)="P" D RESPRV1^SDEC01B($P(SDTYPR,"|",2),$P(SDECRNOD,U,4))  ;do not include provider resource if NEW PERSON is not active
"RTN","SDEC01A",130,0)
 I $P(SDTYPR,"|",1)="H" D CHKC^SDEC01B($P(SDTYPR,"|",2),SDECRES)
"RTN","SDEC01A",131,0)
 I +SDACT,$$GET1^DIQ(409.831,SDECRES_",",.02)="YES" Q   ;do not include inactive entries
"RTN","SDEC01A",132,0)
 D GETACC(.SDECACC,SDECDUZ,SDECRES)
"RTN","SDEC01A",133,0)
 ;I SDACT Q:$$GET1^DIQ(409.831,SDECRES_",",.02)'="YES"  ;do not include inactive entries
"RTN","SDEC01A",134,0)
 K SDECRDAT
"RTN","SDEC01A",135,0)
 F SDEC=1:1:4 S $P(SDECRDAT,U,SDEC)=$P(SDECRNOD,U,SDEC)
"RTN","SDEC01A",136,0)
 S SDECRDAT=SDECRES_U_SDECRDAT   ;1,2-5
"RTN","SDEC01A",137,0)
 S SDCL=$P(SDECRDAT,U,5)
"RTN","SDEC01A",138,0)
 ;Q:$$GET1^DIQ(44,SDCL_",",2502.3,"I")=1  ;HIDE FROM DISPLAY?
"RTN","SDEC01A",139,0)
 S PRO=0
"RTN","SDEC01A",140,0)
 ;MGH code for new type to only contain prohibited clinics
"RTN","SDEC01A",141,0)
 Q:$G(SDCL)=""&(SDPRO=1)
"RTN","SDEC01A",142,0)
 Q:$G(SDCL)&(SDPRO=1)&($$GET1^DIQ(44,SDCL_",",2500)'="YES")
"RTN","SDEC01A",143,0)
 S $P(SDECRDAT,U,3)=$$GET1^DIQ(409.831,SDECRES_",",.02)
"RTN","SDEC01A",144,0)
 ;Get letter text from wp field
"RTN","SDEC01A",145,0)
 S SDECLTR=""
"RTN","SDEC01A",146,0)
 I 0,$D(^SDEC(409.831,SDECRES,1)) D
"RTN","SDEC01A",147,0)
 . S SDECIEN=0
"RTN","SDEC01A",148,0)
 . F  S SDECIEN=$O(^SDEC(409.831,SDECRES,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",149,0)
 . . S SDECLTR=SDECLTR_$G(^SDEC(409.831,SDECRES,1,SDECIEN,0))
"RTN","SDEC01A",150,0)
 . . S SDECLTR=SDECLTR_$C(13)_$C(10)
"RTN","SDEC01A",151,0)
 S SDECNOS=""
"RTN","SDEC01A",152,0)
 I 0,$D(^SDEC(409.831,SDECRES,12)) D
"RTN","SDEC01A",153,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,12,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",154,0)
 . . S SDECNOS=SDECNOS_$G(^SDEC(409.831,SDECRES,12,SDECIEN,0))
"RTN","SDEC01A",155,0)
 . . S SDECNOS=SDECNOS_$C(13)_$C(10)
"RTN","SDEC01A",156,0)
 S SDECCAN=""
"RTN","SDEC01A",157,0)
 I 0,$D(^SDEC(409.831,SDECRES,13)) D
"RTN","SDEC01A",158,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,13,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",159,0)
 . . S SDECCAN=SDECCAN_$G(^SDEC(409.831,SDECRES,13,SDECIEN,0))
"RTN","SDEC01A",160,0)
 . . S SDECCAN=SDECCAN_$C(13)_$C(10)
"RTN","SDEC01A",161,0)
 N SDECACC,SDECMGR
"RTN","SDEC01A",162,0)
 S SDECACC="0^0^0^0"
"RTN","SDEC01A",163,0)
 S SDECMGR=$O(^DIC(19.1,"B","SDECZMGR",0))
"RTN","SDEC01A",164,0)
 I +SDECMGR,$D(^VA(200,SDECDUZ,51,SDECMGR)) S SDECACC="1^1^1^1"
"RTN","SDEC01A",165,0)
 I SDECACC="0^0^0^0" D
"RTN","SDEC01A",166,0)
 . N SDECNOD,SDECRUID
"RTN","SDEC01A",167,0)
 . S SDECRUID=0
"RTN","SDEC01A",168,0)
 . ;Get entry for this user and resource
"RTN","SDEC01A",169,0)
 . F  S SDECRUID=$O(^SDEC(409.833,"AC",SDECDUZ,SDECRUID)) Q:'+SDECRUID  I $D(^SDEC(409.833,SDECRUID,0)),$P(^(0),U)=SDECRES Q
"RTN","SDEC01A",170,0)
 . Q:'+SDECRUID
"RTN","SDEC01A",171,0)
 . S $P(SDECACC,U)=1
"RTN","SDEC01A",172,0)
 . S SDECNOD=$G(^SDEC(409.833,SDECRUID,0))
"RTN","SDEC01A",173,0)
 . S $P(SDECACC,U,2)=+$P(SDECNOD,U,3)
"RTN","SDEC01A",174,0)
 . S $P(SDECACC,U,3)=+$P(SDECNOD,U,4)
"RTN","SDEC01A",175,0)
 . S $P(SDECACC,U,4)=+$P(SDECNOD,U,5)
"RTN","SDEC01A",176,0)
 ;                     6         7         8         9-12
"RTN","SDEC01A",177,0)
 S SDECRDAT=SDECRDAT_U_SDECLTR_U_SDECNOS_U_SDECCAN_U_SDECACC_U_SDTYPR
"RTN","SDEC01A",178,0)
 ;D GETS^DIQ(409.831,SDECRES_",","**","IE","SDDATA","SDMSG")
"RTN","SDEC01A",179,0)
 K SDDATA D GETS^DIQ(409.831,SDECRES_",",".01:.04","IE","SDDATA","SDMSG")
"RTN","SDEC01A",180,0)
 S SDA="SDDATA(409.831,"""_SDECRES_","")"
"RTN","SDEC01A",181,0)
 S $P(SDECRDAT,U,14)=@SDA@(.015,"E")   ;date/time entered
"RTN","SDEC01A",182,0)
 S $P(SDECRDAT,U,15)=@SDA@(.016,"I")   ;entered by user id
"RTN","SDEC01A",183,0)
 S $P(SDECRDAT,U,16)=@SDA@(.016,"E")   ;entered by user name
"RTN","SDEC01A",184,0)
 S $P(SDECRDAT,U,17)=@SDA@(.021,"E")   ;inactive date/time
"RTN","SDEC01A",185,0)
 S $P(SDECRDAT,U,18)=@SDA@(.022,"I")   ;inactivated by user ID
"RTN","SDEC01A",186,0)
 S $P(SDECRDAT,U,19)=@SDA@(.022,"E")   ;inactivated by user name
"RTN","SDEC01A",187,0)
 S $P(SDECRDAT,U,20)=@SDA@(.025,"E")   ;reactivated date/time
"RTN","SDEC01A",188,0)
 S $P(SDECRDAT,U,21)=@SDA@(.026,"I")   ;reactivating user ID
"RTN","SDEC01A",189,0)
 S $P(SDECRDAT,U,22)=@SDA@(.026,"E")   ;reactivating user name
"RTN","SDEC01A",190,0)
 S $P(SDECRDAT,U,23)=$$GET1^DIQ(44,SDCL_",",.01)  ;clinic name
"RTN","SDEC01A",191,0)
 S $P(SDECRDAT,U,24)=$S($P(SDTYPR,"|",1)="P":''$O(^SC("AVADPR",+$P(SDTYPR,"|",2),0)),1:0)
"RTN","SDEC01A",192,0)
 S:$G(SDCL) $P(SDECRDAT,U,25)=$S($G(SDCL):$P($G(^SC(SDCL,"SDPRIV",0)),U,4)>0,1:0)  ;contains privileged users
"RTN","SDEC01A",193,0)
 S:$G(SDCL) $P(SDECRDAT,U,26)=$$GET1^DIQ(44,SDCL_",",2500)["Y"  ;prohibited clinic
"RTN","SDEC01A",194,0)
 S $P(SDECRDAT,U,27)=SDX_"|"_SDECRES   ;LASTSUB
"RTN","SDEC01A",195,0)
 S SDECI=SDECI+1
"RTN","SDEC01A",196,0)
 S @SDECY@(SDECI)=SDECRDAT_$C(30)
"RTN","SDEC01A",197,0)
 Q
"RTN","SDEC01A",198,0)
 ;
"RTN","SDEC01A",199,0)
GETACC(SDECACC,SDECDUZ,SDECRES) ;get view, overbook, modify appt, and modify schedule abilities
"RTN","SDEC01A",200,0)
 ;INPUT:
"RTN","SDEC01A",201,0)
 ; SDECDUZ = user ID pointer to NEW PERSON file
"RTN","SDEC01A",202,0)
 ; SDECRES = resource ID pointer to SDEC RESOURCE file
"RTN","SDEC01A",203,0)
 ;RETURN:
"RTN","SDEC01A",204,0)
 ; .SDECACC  = access separated by ^:
"RTN","SDEC01A",205,0)
 ;   1. VIEW - User can VIEW 1=YES; 0=NO
"RTN","SDEC01A",206,0)
 ;   2. OVERBOOK - User can OVERBOOK  1=YES; 0=NO
"RTN","SDEC01A",207,0)
 ;   3. MODIFY SCHEDULE - User can Modify Schedule  1=YES; 0=NO
"RTN","SDEC01A",208,0)
 ;   4. MODIFY APPOINTMENTS User can modify appointments  1=YES; 0=NO
"RTN","SDEC01A",209,0)
 N SDECMGR
"RTN","SDEC01A",210,0)
 S SDECACC="0^0^0^0"
"RTN","SDEC01A",211,0)
 S SDECMGR=$O(^DIC(19.1,"B","SDECZMGR",0))
"RTN","SDEC01A",212,0)
 I +SDECMGR,$D(^VA(200,SDECDUZ,51,SDECMGR)) S SDECACC="1^1^1^1"
"RTN","SDEC01A",213,0)
 I SDECACC="0^0^0^0" D
"RTN","SDEC01A",214,0)
 . N SDECNOD,SDECRUID
"RTN","SDEC01A",215,0)
 . S SDECRUID=0
"RTN","SDEC01A",216,0)
 . ;Get entry for this user and resource
"RTN","SDEC01A",217,0)
 . F  S SDECRUID=$O(^SDEC(409.833,"AC",SDECDUZ,SDECRUID)) Q:'+SDECRUID  I $D(^SDEC(409.833,SDECRUID,0)),$P(^(0),U)=SDECRES Q
"RTN","SDEC01A",218,0)
 . Q:'+SDECRUID
"RTN","SDEC01A",219,0)
 . S $P(SDECACC,U)=1
"RTN","SDEC01A",220,0)
 . S SDECNOD=$G(^SDEC(409.833,SDECRUID,0))
"RTN","SDEC01A",221,0)
 . S $P(SDECACC,U,2)=+$P(SDECNOD,U,3)
"RTN","SDEC01A",222,0)
 . S $P(SDECACC,U,3)=+$P(SDECNOD,U,4)
"RTN","SDEC01A",223,0)
 . S $P(SDECACC,U,4)=+$P(SDECNOD,U,5)
"RTN","SDEC01A",224,0)
 Q
"RTN","SDEC01A",225,0)
 ;
"RTN","SDEC01A",226,0)
GETLTRS(SDECLTR,SDECNOS,SDECCAN,SDECRES,SDCL) ;get resource letters
"RTN","SDEC01A",227,0)
 ;INPUT:
"RTN","SDEC01A",228,0)
 ; SDECRES = resource ID pointer to SDEC RESOURCE file
"RTN","SDEC01A",229,0)
 ; SDCL    = clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDEC01A",230,0)
 ;RETURN:
"RTN","SDEC01A",231,0)
 ; .SDECLTR = LETTER TEXT
"RTN","SDEC01A",232,0)
 ; .SDECNOS = NO SHOW LETTER
"RTN","SDEC01A",233,0)
 ; .SDECCAN = CLINIC CANCELLATION LETTER
"RTN","SDEC01A",234,0)
 ; .Get letter text from wp field
"RTN","SDEC01A",235,0)
 N SDECIEN
"RTN","SDEC01A",236,0)
 S SDECLTR=""
"RTN","SDEC01A",237,0)
 I $D(^SDEC(409.831,SDECRES,2,SDCL,1)) D
"RTN","SDEC01A",238,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",239,0)
 . . S SDECLTR=SDECLTR_$G(^SDEC(409.831,SDECRES,2,SDCL,1,SDECIEN,0))
"RTN","SDEC01A",240,0)
 . . S SDECLTR=SDECLTR_$C(13)_$C(10)
"RTN","SDEC01A",241,0)
 S SDECNOS=""
"RTN","SDEC01A",242,0)
 I $D(^SDEC(409.831,SDECRES,2,SDCL,12)) D
"RTN","SDEC01A",243,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,12,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",244,0)
 . . S SDECNOS=SDECNOS_$G(^SDEC(409.831,SDECRES,2,SDCL,12,SDECIEN,0))
"RTN","SDEC01A",245,0)
 . . S SDECNOS=SDECNOS_$C(13)_$C(10)
"RTN","SDEC01A",246,0)
 S SDECCAN=""
"RTN","SDEC01A",247,0)
 I $D(^SDEC(409.831,SDECRES,13)) D
"RTN","SDEC01A",248,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,13,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",249,0)
 . . S SDECCAN=SDECCAN_$G(^SDEC(409.831,SDECRES,2,SDCL,13,SDECIEN,0))
"RTN","SDEC01A",250,0)
 . . S SDECCAN=SDECCAN_$C(13)_$C(10)
"RTN","SDEC01A",251,0)
 Q
"RTN","SDEC01B")
0^160^B44978361^n/a
"RTN","SDEC01B",1,0)
SDEC01B ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC01B",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC01B",3,0)
 ;
"RTN","SDEC01B",4,0)
 Q
"RTN","SDEC01B",5,0)
 ;
"RTN","SDEC01B",6,0)
RESDG(SDRES)  ;remove SDEC RESOURCE from all SDEC RESOURCE GROUPs
"RTN","SDEC01B",7,0)
 N SDECY,SDI,SDJ
"RTN","SDEC01B",8,0)
 S SDECY=""
"RTN","SDEC01B",9,0)
 S SDRES=$G(SDRES) Q:'+SDRES  Q:'$D(^SDEC(409.831,+SDRES,0))
"RTN","SDEC01B",10,0)
 S SDI=9999999 F  S SDI=$O(^SDEC(409.832,"AB",+SDRES,SDI),-1) Q:SDI=""  D
"RTN","SDEC01B",11,0)
 .D DELRGI^SDEC(.SDECY,SDI,SDRES)
"RTN","SDEC01B",12,0)
 Q
"RTN","SDEC01B",13,0)
 ;
"RTN","SDEC01B",14,0)
RESDGA     ;remove all inactive SDEC RESOURCEs from all SDEC RESOURCE GROUPs
"RTN","SDEC01B",15,0)
 N SDI,X
"RTN","SDEC01B",16,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.831,SDI)) Q:SDI'>0  S X=$$GET1^DIQ(409.831,SDI_",",.02)="YES"   ;computed routine calls RESDG
"RTN","SDEC01B",17,0)
 Q
"RTN","SDEC01B",18,0)
 ;
"RTN","SDEC01B",19,0)
RESCK(SDRES)      ;check if SDEC RESOURCE is inactive ;remove from all SDEC RESOURCE GROUPs if inactive
"RTN","SDEC01B",20,0)
 N X
"RTN","SDEC01B",21,0)
 S SDRES=$G(SDRES) Q:'+SDRES  Q:'$D(^SDEC(409.831,+SDRES,0))
"RTN","SDEC01B",22,0)
 S X=$$GET1^DIQ(409.831,SDRES_",",.02)="YES"   ;computed routines calls RESDG
"RTN","SDEC01B",23,0)
 Q
"RTN","SDEC01B",24,0)
 ;
"RTN","SDEC01B",25,0)
USRDG(SDDUZ) ;remove SDEC RESOURCEs associated with SDDUZ from all SDEC RESOURCE GROUPs
"RTN","SDEC01B",26,0)
 ; SDDUZ = pointer to NEW PERSON file 200
"RTN","SDEC01B",27,0)
 N SDRES
"RTN","SDEC01B",28,0)
 S SDRES=0 F  S SDRES=$O(^SDEC(409.831,"AC","P",SDDUZ,SDRES)) Q:SDRES=""  D
"RTN","SDEC01B",29,0)
 .D RESDG(SDRES)
"RTN","SDEC01B",30,0)
 Q
"RTN","SDEC01B",31,0)
 ;
"RTN","SDEC01B",32,0)
 ;
"RTN","SDEC01B",33,0)
RESPRV1(SDPRV,SDCL,SDPRVN)  ;process 1 provider
"RTN","SDEC01B",34,0)
 N EFFDT,EXPDT,PACT,SDFDA,SDIEN,SDMSG,SDRES
"RTN","SDEC01B",35,0)
 ;look for existing resource
"RTN","SDEC01B",36,0)
 S (EFFDT,EXPDT)=""
"RTN","SDEC01B",37,0)
 S SDCL=$G(SDCL) Q:'$D(^SC(+SDCL,0))
"RTN","SDEC01B",38,0)
 S SDPRV=$G(SDPRV) Q:'$D(^VA(200,+SDPRV,0))
"RTN","SDEC01B",39,0)
 S SDPRVN=$G(SDPRVN) S:SDPRVN="" SDPRVN=$$GET1^DIQ(200,SDPRV_",",.01)
"RTN","SDEC01B",40,0)
 S SDRES=$O(^SDEC(409.831,"AC","P",SDPRV,0))
"RTN","SDEC01B",41,0)
 I SDRES'="",$$CHKP(SDPRV,SDRES) Q  ;if entry found, update and quit
"RTN","SDEC01B",42,0)
 ;S SDRES=$O(^SDEC(409.831,"B",SDPRVN,0))  ;look for existing SDEC RESOURCE id with provider name
"RTN","SDEC01B",43,0)
 ;I SDRES'="",$$CHKP(SDPRV,SDRES) Q  ;if entry found, update and quit
"RTN","SDEC01B",44,0)
 S SDRES="+1"
"RTN","SDEC01B",45,0)
 S PACT=$$PC^SDEC45(SDPRV,DT,.EFFDT,.EXPDT)
"RTN","SDEC01B",46,0)
 S:EXPDT="" EXPDT=DT
"RTN","SDEC01B",47,0)
 ;
"RTN","SDEC01B",48,0)
 K SDFDA,SDIEN,SDMSG
"RTN","SDEC01B",49,0)
 S SDFDA=$NA(SDFDA(409.831,SDRES_","))
"RTN","SDEC01B",50,0)
 S @SDFDA@(.01)=SDPRVN
"RTN","SDEC01B",51,0)
 S @SDFDA@(.012)=SDPRV_";VA(200,"
"RTN","SDEC01B",52,0)
 S @SDFDA@(.015)=$E($$NOW^XLFDT,1,12)
"RTN","SDEC01B",53,0)
 S @SDFDA@(.016)=DUZ
"RTN","SDEC01B",54,0)
 S:+PACT @SDFDA@(.021)=EXPDT
"RTN","SDEC01B",55,0)
 S @SDFDA@(.04)=SDCL
"RTN","SDEC01B",56,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC01B",57,0)
 S SDRES=SDIEN(1)
"RTN","SDEC01B",58,0)
 Q
"RTN","SDEC01B",59,0)
CHKP(USER,SDRES) ;update existing provider resource entry
"RTN","SDEC01B",60,0)
 ;returns 0=SDRES does not match USER ;1=matches and updated
"RTN","SDEC01B",61,0)
 N EFFDT,EXPDT,RACT,PACT,RSN,RSTS,RSTYP,SDFDA,SCN,SDNOD,SCTS
"RTN","SDEC01B",62,0)
 S RSTYP=$$GET1^DIQ(409.831,SDRES_",",.012,"I")
"RTN","SDEC01B",63,0)
 Q:$P(RSTYP,";",1)'=USER 0
"RTN","SDEC01B",64,0)
 ;
"RTN","SDEC01B",65,0)
 S SCN=$$GET1^DIQ(200,USER_",",.01)
"RTN","SDEC01B",66,0)
 S RSN=$$GET1^DIQ(409.831,SDRES_",",.01)
"RTN","SDEC01B",67,0)
 S:SCN'=RSN SDFDA(409.831,SDRES_",",.01)=SCN
"RTN","SDEC01B",68,0)
 ;
"RTN","SDEC01B",69,0)
 S (EFFDT,EXPDT)=""
"RTN","SDEC01B",70,0)
 S PACT=$$PC^SDEC45(SDPRV,DT,.EFFDT,.EXPDT)
"RTN","SDEC01B",71,0)
 S RACT=$$GET1^DIQ(409.831,SDRES_",",.02) S RACT=$S(RACT="YES":1,1:0)
"RTN","SDEC01B",72,0)
 I RACT'=PACT D
"RTN","SDEC01B",73,0)
 .S SDNOD=$G(^SDEC(409.831,SDRES,0))
"RTN","SDEC01B",74,0)
 .I PACT=0 S SDFDA(409.831,SDRES_",",.021)="@",SDFDA(409.831,SDRES_",",.025)="@"
"RTN","SDEC01B",75,0)
 .E  S SDFDA(409.831,SDRES_",",.021)=$S(EXPDT="":$$FMADD^XLFDT(DT,-1),EXPDT'>DT:EXPDT,1:$$FMADD^XLFDT(DT,-1)),SDFDA(409.831,SDRES_",",.025)="@"
"RTN","SDEC01B",76,0)
 ;
"RTN","SDEC01B",77,0)
 I $D(SDFDA) D UPDATE^DIE("","SDFDA")
"RTN","SDEC01B",78,0)
 D:+PACT RESCK(SDRES)
"RTN","SDEC01B",79,0)
 Q 1
"RTN","SDEC01B",80,0)
 ;
"RTN","SDEC01B",81,0)
CHKC(SDCL,SDRES) ;update existing clinic resource entry
"RTN","SDEC01B",82,0)
 N CINACT,CREACT,RINACT,RREACT,RSN,RSTS,RSTYP,SDFDA,SCN,SCTS
"RTN","SDEC01B",83,0)
 S RSTYP=$$GET1^DIQ(409.831,SDRES_",",.012,"I")
"RTN","SDEC01B",84,0)
 Q:$P(RSTYP,";",1)'=SDCL
"RTN","SDEC01B",85,0)
 ;
"RTN","SDEC01B",86,0)
 S SCN=$$GET1^DIQ(44,SDCL_",",.01)
"RTN","SDEC01B",87,0)
 S RSN=$$GET1^DIQ(409.831,SDRES_",",.01)
"RTN","SDEC01B",88,0)
 S:SCN'=RSN SDFDA(409.831,SDRES_",",.01)=SCN
"RTN","SDEC01B",89,0)
 ;
"RTN","SDEC01B",90,0)
 S CINACT=$$GET1^DIQ(44,SDCL_",",2505,"I")
"RTN","SDEC01B",91,0)
 S RINACT=$$GET1^DIQ(409.831,SDRES_",",.021,"I")
"RTN","SDEC01B",92,0)
 S:CINACT'=RINACT SDFDA(409.831,SDRES_",",.021)=CINACT,SDFDA(409.831,SDRES_",",.022)="@"
"RTN","SDEC01B",93,0)
 S CREACT=$$GET1^DIQ(44,SDCL_",",2506,"I")
"RTN","SDEC01B",94,0)
 S RREACT=$$GET1^DIQ(409.831,SDRES_",",.025)
"RTN","SDEC01B",95,0)
 S:CREACT'=RREACT SDFDA(409.831,SDRES_",",.025)=CREACT,SDFDA(409.831,SDRES_",",.026)="@"
"RTN","SDEC01B",96,0)
 ;
"RTN","SDEC01B",97,0)
 S SCTS=$$GET1^DIQ(44,SDCL_",",1917,"I") S SCTS=$S(SCTS=6:10,SCTS=4:15,SCTS=3:20,SCTS=2:30,1:60)
"RTN","SDEC01B",98,0)
 S RSTS=$$GET1^DIQ(409.831,SDRES_",",.03,"I")
"RTN","SDEC01B",99,0)
 S:SCTS'=RSTS SDFDA(409.831,SDRES_",",.03)=SCTS  ;time scale
"RTN","SDEC01B",100,0)
 ;
"RTN","SDEC01B",101,0)
 I $D(SDFDA) D UPDATE^DIE("","SDFDA")
"RTN","SDEC01B",102,0)
 Q
"RTN","SDEC01B",103,0)
 ;
"RTN","SDEC01B",104,0)
RESCLIN1(SDCL,SDRESH)   ;
"RTN","SDEC01B",105,0)
 N SDCLN,SDDATA,SDFDA,SDFIELDS,SDFOUND,SDIEN,SDIN,SDLET,SDMSG,SDRES11,SDRN,SDMSG,SDTS,SDWP
"RTN","SDEC01B",106,0)
 S SDFOUND=0
"RTN","SDEC01B",107,0)
 ; .01 name; 2 type; 1912 len of appt; 2508 no show let; 2509 pre-appt let; 2510 clinic can let;
"RTN","SDEC01B",108,0)
 S SDFIELDS=".01;2;50.01;1912;1917;2505;2506;2508;2509;2510"
"RTN","SDEC01B",109,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC01B",110,0)
 I SDDATA(44,SDCL_",",2,"I")="C" D
"RTN","SDEC01B",111,0)
 .;Q:SDDATA(44,SDCL_",",50.01,"I")=1  ;OOS?
"RTN","SDEC01B",112,0)
 .S SDIN=SDDATA(44,SDCL_",",2505,"I"),SDRN=SDDATA(44,SDCL_",",2506,"I")
"RTN","SDEC01B",113,0)
 .Q:$$INACT(SDIN,SDRN)
"RTN","SDEC01B",114,0)
 .S SDCLN=SDDATA(44,SDCL_",",.01,"E")   ;clinic name
"RTN","SDEC01B",115,0)
 .;look for existing to allow this post-init to be re-entrant
"RTN","SDEC01B",116,0)
 .S SDRESH=0 F  S SDRESH=$O(^SDEC(409.831,"ALOC",SDCL,SDRESH)) Q:SDRESH'>0  D  Q:+SDFOUND
"RTN","SDEC01B",117,0)
 ..S SDRES11=$$GET1^DIQ(409.831,SDRESH_",",.012,"I")
"RTN","SDEC01B",118,0)
 ..I $P(SDRES11,";",2)="SC(",$P(SDRES11,";",1)=SDCL S SDFOUND=1
"RTN","SDEC01B",119,0)
 .I +SDFOUND D CHKC(SDCL,SDRESH) Q
"RTN","SDEC01B",120,0)
 .S SDRESH=$O(^SDEC(409.831,"B",$$UP^XLFSTR(SDCLN),0))  ;look for existing SDEC RESOURCE id with clinic name
"RTN","SDEC01B",121,0)
 .I SDRESH'="" Q
"RTN","SDEC01B",122,0)
 .S SDRESH="+1"
"RTN","SDEC01B",123,0)
 .K SDFDA,SDIEN,SDMSG
"RTN","SDEC01B",124,0)
 .S SDFDA=$NA(SDFDA(409.831,SDRESH_","))
"RTN","SDEC01B",125,0)
 .S @SDFDA@(.01)=SDCLN
"RTN","SDEC01B",126,0)
 .S @SDFDA@(.012)=SDCL_";SC("
"RTN","SDEC01B",127,0)
 .S @SDFDA@(.015)=$E($$NOW^XLFDT,1,12)
"RTN","SDEC01B",128,0)
 .S @SDFDA@(.016)=DUZ
"RTN","SDEC01B",129,0)
 .I SDDATA(44,SDCL_",",2505,"I")'="" S @SDFDA@(.021)=SDDATA(44,SDCL_",",2505,"I")
"RTN","SDEC01B",130,0)
 .I SDDATA(44,SDCL_",",2506,"I")'="" S @SDFDA@(.025)=SDDATA(44,SDCL_",",2506,"I")
"RTN","SDEC01B",131,0)
 .S SDTS=SDDATA(44,SDCL_",",1917,"I") S @SDFDA@(.03)=$S(SDTS=5:5,SDTS=6:10,SDTS=4:15,SDTS=3:20,SDTS=2:30,SDTS=45:15,1:60)  ;time scale
"RTN","SDEC01B",132,0)
 .S @SDFDA@(.04)=SDCL
"RTN","SDEC01B",133,0)
 .D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC01B",134,0)
 .I $D(SDMSG) W !,"RESCLIN: Unable to store clinic "_SDCL_" in resource." Q
"RTN","SDEC01B",135,0)
 .S SDRESH=SDIEN(1)
"RTN","SDEC01B",136,0)
 .;get letter text
"RTN","SDEC01B",137,0)
 .S SDLET=SDDATA(44,SDCL_",",2509,"I")
"RTN","SDEC01B",138,0)
 .D RESLET(SDLET,.SDWP)
"RTN","SDEC01B",139,0)
 .I $D(SDWP) D WP^DIE(409.831,SDRESH_",",1,"","SDWP")
"RTN","SDEC01B",140,0)
 .;get no show letter
"RTN","SDEC01B",141,0)
 .S SDLET=SDDATA(44,SDCL_",",2508,"I")
"RTN","SDEC01B",142,0)
 .D RESLET(SDLET,.SDWP)
"RTN","SDEC01B",143,0)
 .I $D(SDWP) D WP^DIE(409.831,SDRESH_",",1201,"","SDWP")
"RTN","SDEC01B",144,0)
 .;get clinic cancellation letter
"RTN","SDEC01B",145,0)
 .S SDLET=SDDATA(44,SDCL_",",2510,"I")
"RTN","SDEC01B",146,0)
 .D RESLET(SDLET,.SDWP)
"RTN","SDEC01B",147,0)
 .I $D(SDWP) D WP^DIE(409.831,SDRESH_",",1301,"","SDWP")
"RTN","SDEC01B",148,0)
 Q
"RTN","SDEC01B",149,0)
RESLET(SDLET,SDWP) ;get letter text
"RTN","SDEC01B",150,0)
 ;INPUT:
"RTN","SDEC01B",151,0)
 ;  SDLET - Letter ID pointer to LETTER file 407.5
"RTN","SDEC01B",152,0)
 ;RETURN
"RTN","SDEC01B",153,0)
 ; .SDWP  - Word Processor array used to store text using WP^DIE
"RTN","SDEC01B",154,0)
 N SDMSG,SDWPI,SDWPJ,SDWP2,SDWP3,X
"RTN","SDEC01B",155,0)
 S X=$$GET1^DIQ(407.5,SDLET_",",2,"","SDWP2","SDMSG")
"RTN","SDEC01B",156,0)
 Q:$D(SDMSG)
"RTN","SDEC01B",157,0)
 S X=$$GET1^DIQ(407.5,SDLET_",",3,"","SDWP3","SDMSG")
"RTN","SDEC01B",158,0)
 S SDWPI=0
"RTN","SDEC01B",159,0)
 S SDWPJ="" F  S SDWPJ=$O(SDWP2(SDWPJ)) Q:SDWPJ=""  S SDWPI=SDWPI+1 S SDWP(SDWPI)=SDWP2(SDWPJ)
"RTN","SDEC01B",160,0)
 S SDWPJ="" F  S SDWPJ=$O(SDWP3(SDWPJ)) Q:SDWPJ=""  S SDWPI=SDWPI+1 S SDWP(SDWPI)=SDWP3(SDWPJ)
"RTN","SDEC01B",161,0)
 Q
"RTN","SDEC01B",162,0)
INACT(SDIN,SDRN) ;
"RTN","SDEC01B",163,0)
 ;0=ACTIVATE
"RTN","SDEC01B",164,0)
 ;1=INACTIVE
"RTN","SDEC01B",165,0)
 N NOW,RET
"RTN","SDEC01B",166,0)
 S RET=0
"RTN","SDEC01B",167,0)
 S NOW=$P($$NOW^XLFDT,".",1)
"RTN","SDEC01B",168,0)
 S SDIN=$P($G(SDIN),".",1)
"RTN","SDEC01B",169,0)
 S SDRN=$P($G(SDRN),".",1)
"RTN","SDEC01B",170,0)
 Q:SDIN="" 0   ;no inactive date
"RTN","SDEC01B",171,0)
 Q:NOW<SDIN 0  ;inactive date still in future
"RTN","SDEC01B",172,0)
 I SDIN'>NOW D
"RTN","SDEC01B",173,0)
 .;MGH added one more check on dates
"RTN","SDEC01B",174,0)
 .S RET=$S(SDRN="":1,SDRN'>NOW:0,SDRN>SDIN:0,1:1)
"RTN","SDEC01B",175,0)
 Q RET
"RTN","SDEC02")
0^3^B32953550^n/a
"RTN","SDEC02",1,0)
SDEC02 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC02",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC02",3,0)
 ;
"RTN","SDEC02",4,0)
 Q
"RTN","SDEC02",5,0)
 ;
"RTN","SDEC02",6,0)
CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN) ;Create Resource Appointment Schedule
"RTN","SDEC02",7,0)
 ;CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN)  external parameter tag is in SDEC
"RTN","SDEC02",8,0)
 ;Create Resource Appointment Schedule recordset
"RTN","SDEC02",9,0)
 ;On error, returns 0 in APPOINTMENTID field and error text in NOTE field
"RTN","SDEC02",10,0)
 ;
"RTN","SDEC02",11,0)
 ;$O Thru ^SDEC(409.84,"ARSRC", RESOURCE, STARTTIME, APPTID)
"RTN","SDEC02",12,0)
 ;SDECRES   - pipe | delimited list of resource names
"RTN","SDEC02",13,0)
 ;SDECSTART - Start date/time in external form
"RTN","SDEC02",14,0)
 ;SDECEND   - End Date/time in external form
"RTN","SDEC02",15,0)
 ;SDECWKIN  - Include Walk-ins 1=return walkins; 0=skip walk-ins
"RTN","SDEC02",16,0)
 ;9-27-2004 Added walkin to returned datatable
"RTN","SDEC02",17,0)
 ;TODO: Change SDECRES from names to IDs
"RTN","SDEC02",18,0)
 ;RETURN:
"RTN","SDEC02",19,0)
 ;  Global Array in which each array entry contains data for the Resource Appointment Schedule separated by ^:
"RTN","SDEC02",20,0)
 ; 1. APPOINTMENTID
"RTN","SDEC02",21,0)
 ; 2. START_TIME
"RTN","SDEC02",22,0)
 ; 3. END_TIME
"RTN","SDEC02",23,0)
 ; 4. CHECKIN
"RTN","SDEC02",24,0)
 ; 5. AUXTIME
"RTN","SDEC02",25,0)
 ; 6. PATIENTID
"RTN","SDEC02",26,0)
 ; 7. PATIENTNAME
"RTN","SDEC02",27,0)
 ; 8. RESOURCENAME
"RTN","SDEC02",28,0)
 ; 9. NOSHOW
"RTN","SDEC02",29,0)
 ;10. HRN
"RTN","SDEC02",30,0)
 ;11. ACCESSTYPEID
"RTN","SDEC02",31,0)
 ;12. WALKIN
"RTN","SDEC02",32,0)
 ;13. CHECKOUT
"RTN","SDEC02",33,0)
 ;14. VPROVIDER
"RTN","SDEC02",34,0)
 ;15. CANCELLED
"RTN","SDEC02",35,0)
 ;16. NOTE
"RTN","SDEC02",36,0)
 ;17. DAPTDT
"RTN","SDEC02",37,0)
 ;18. APPTREQTYPE
"RTN","SDEC02",38,0)
 ;19. DIEDON
"RTN","SDEC02",39,0)
 ;20. EESTAT - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC02",40,0)
 ;
"RTN","SDEC02",41,0)
 N SDECERR,SDECIEN,SDECDEPD,SDECDEPN,SDECRESD,SDECI,SDECJ,SDECRESN,SDECS,SDECAD,SDECZ,SDECQ,SDECNOD,SDECTMP
"RTN","SDEC02",42,0)
 N SDECPAT,SDECNOT,SDECZPCD,SDECPCD,SDDDT,SDAPTYP
"RTN","SDEC02",43,0)
 N %DT,X,Y
"RTN","SDEC02",44,0)
 K ^TMP("SDEC02",$J)
"RTN","SDEC02",45,0)
 S SDECERR=""
"RTN","SDEC02",46,0)
 S SDECY="^TMP(""SDEC02"","_$J_")"
"RTN","SDEC02",47,0)
 ;                1                   2                3              4             5             6
"RTN","SDEC02",48,0)
 S SDECTMP="I00020APPOINTMENTID^D00030START_TIME^D00030END_TIME^D00030CHECKIN^D00030AUXTIME^I00020PATIENTID^"
"RTN","SDEC02",49,0)
 ;                        7                 8                  9            10        11                 12
"RTN","SDEC02",50,0)
 S SDECTMP=SDECTMP_"T00030PATIENTNAME^T00030RESOURCENAME^I00005NOSHOW^T00020HRN^I00005ACCESSTYPEID^I00005WALKIN^"
"RTN","SDEC02",51,0)
 ;                        13             14              15              16         17           18
"RTN","SDEC02",52,0)
 S SDECTMP=SDECTMP_"D00030CHECKOUT^I00020VPROVIDER^T00020CANCELLED^T00250NOTE^T00030DAPTDT^T00030APPTREQTYPE^"
"RTN","SDEC02",53,0)
 S SDECTMP=SDECTMP_"T00030DIEDON^T00030EESTAT"
"RTN","SDEC02",54,0)
 S ^TMP("SDEC02",$J,0)=SDECTMP_$C(30)
"RTN","SDEC02",55,0)
 ;
"RTN","SDEC02",56,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC02",57,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC02",58,0)
 S %DT="T",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC02",59,0)
 I SDECSTART=-1 S ^TMP("SDEC02",$J,0)=^TMP("SDEC02",$J,0)_$C(31) Q
"RTN","SDEC02",60,0)
 S %DT="T",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC02",61,0)
 I SDECEND=-1 S ^TMP("SDEC02",$J,0)=^TMP("SDEC02",$J,0)_$C(31) Q
"RTN","SDEC02",62,0)
 ;
"RTN","SDEC02",63,0)
 S SDECI=0
"RTN","SDEC02",64,0)
 D STRES
"RTN","SDEC02",65,0)
 ;
"RTN","SDEC02",66,0)
 S ^TMP("SDEC02",$J,SDECI)=^TMP("SDEC02",$J,SDECI)_$C(31)
"RTN","SDEC02",67,0)
 Q
"RTN","SDEC02",68,0)
 ;
"RTN","SDEC02",69,0)
STRES ;
"RTN","SDEC02",70,0)
 F SDECJ=1:1:$L(SDECRES,"|") S SDECRESN=$P(SDECRES,"|",SDECJ) D
"RTN","SDEC02",71,0)
 . Q:SDECRESN=""
"RTN","SDEC02",72,0)
 . I +SDECRESN Q:'$D(^SDEC(409.831,+SDECRESN,0))
"RTN","SDEC02",73,0)
 . I +SDECRESN S SDECRESD=SDECRESN
"RTN","SDEC02",74,0)
 . I '+SDECRESN Q:'$D(^SDEC(409.831,"B",SDECRESN))
"RTN","SDEC02",75,0)
 . I '+SDECRESN S SDECRESD=$O(^SDEC(409.831,"B",SDECRESN,0))
"RTN","SDEC02",76,0)
 . Q:'+SDECRESD
"RTN","SDEC02",77,0)
 . S SDECRESN=$P($G(^SDEC(409.831,SDECRESD,0)),U,1)
"RTN","SDEC02",78,0)
 . Q:'$D(^SDEC(409.84,"ARSRC",SDECRESD))
"RTN","SDEC02",79,0)
 . S SDECS=SDECSTART-.0001
"RTN","SDEC02",80,0)
 . F  S SDECS=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS)) Q:'+SDECS  Q:SDECS>SDECEND  D
"RTN","SDEC02",81,0)
 . . S SDECAD=0 F  S SDECAD=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS,SDECAD)) Q:'+SDECAD  D STCOMM(SDECAD,SDECRESN)
"RTN","SDEC02",82,0)
 Q
"RTN","SDEC02",83,0)
 ;
"RTN","SDEC02",84,0)
STCOMM(SDECAD,SDECRESN)      ;
"RTN","SDEC02",85,0)
 ;SDECAD is the appointment IEN
"RTN","SDEC02",86,0)
 N SDECC,SDECCAN,SDECCO,SDECQ,SDECZ,SDECSUBC,SDECHRN,SDECPATD,SDECATID,SDECISWK
"RTN","SDEC02",87,0)
 N DIEDON,SDECVPRV
"RTN","SDEC02",88,0)
 Q:'$D(^SDEC(409.84,SDECAD,0))
"RTN","SDEC02",89,0)
 S SDECNOD=^SDEC(409.84,SDECAD,0)
"RTN","SDEC02",90,0)
 S SDECCAN=($P(SDECNOD,U,12)]"")  ;CANCELLED flag  1=cancelled; 0=not cancelled
"RTN","SDEC02",91,0)
 S SDECISWK=0
"RTN","SDEC02",92,0)
 S:$P(SDECNOD,U,13)="y" SDECISWK=1
"RTN","SDEC02",93,0)
 I +$G(SDECWKIN) Q:SDECISWK  ;Don't return walkins if appt is WALKIN and SDECWKIN is 1
"RTN","SDEC02",94,0)
 S SDECCO=$TR($$FMTE^XLFDT($P(SDECNOD,U,14)),"@"," ") ;APPOINTMENT CHECKOUT TIME
"RTN","SDEC02",95,0)
 S SDECVPRV=$P(SDECNOD,U,16) ;POINTER TO V PROVIDER TABLE ^AUPNVPRV
"RTN","SDEC02",96,0)
 S SDECZ=SDECAD_"^"
"RTN","SDEC02",97,0)
 F SDECQ=1:1:4 D
"RTN","SDEC02",98,0)
 . S Y=$P(SDECNOD,U,SDECQ)
"RTN","SDEC02",99,0)
 . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC02",100,0)
 . S SDECZ=SDECZ_Y_"^"
"RTN","SDEC02",101,0)
 S SDECPATD=$P(SDECNOD,U,5)
"RTN","SDEC02",102,0)
 S $P(SDECZ,"^",6)=SDECPATD ;PATIENT ID
"RTN","SDEC02",103,0)
 S SDECPAT=""
"RTN","SDEC02",104,0)
 I SDECPATD]"",$D(^DPT(SDECPATD,0)) S SDECPAT=$P(^DPT(SDECPATD,0),U)
"RTN","SDEC02",105,0)
 S $P(SDECZ,"^",7)=SDECPAT ;PATIENT NAME
"RTN","SDEC02",106,0)
 S $P(SDECZ,"^",8)=SDECRESN ;RESOURCENAME
"RTN","SDEC02",107,0)
 S $P(SDECZ,"^",9)=+$P(SDECNOD,U,10) ;NOSHOW
"RTN","SDEC02",108,0)
 S SDECHRN=""
"RTN","SDEC02",109,0)
 I $D(DUZ(2)),DUZ(2)>0 S SDECHRN=$P($G(^AUPNPAT(SDECPATD,41,DUZ(2),0)),U,2) ;HRN
"RTN","SDEC02",110,0)
 S $P(SDECZ,"^",10)=SDECHRN
"RTN","SDEC02",111,0)
 S SDECATID=$P(SDECNOD,U,6)
"RTN","SDEC02",112,0)
 S:'+SDECATID SDECATID=0 ;UNKNOWN TYPE
"RTN","SDEC02",113,0)
 S $P(SDECZ,"^",11)=SDECATID
"RTN","SDEC02",114,0)
 S $P(SDECZ,"^",12)=SDECISWK
"RTN","SDEC02",115,0)
 S $P(SDECZ,"^",13)=SDECCO  ;CHECKOUT TIME
"RTN","SDEC02",116,0)
 S $P(SDECZ,"^",14)=SDECVPRV  ;POINTER TO NEW PERSON
"RTN","SDEC02",117,0)
 S $P(SDECZ,"^",15)=SDECCAN   ;CANCELLED
"RTN","SDEC02",118,0)
 S SDECI=SDECI+1
"RTN","SDEC02",119,0)
 S ^TMP("SDEC02",$J,SDECI)=SDECZ_"^"
"RTN","SDEC02",120,0)
 ;NOTE  [16]
"RTN","SDEC02",121,0)
 S SDECNOT="",SDECQ=0 F  S SDECQ=$O(^SDEC(409.84,SDECAD,1,SDECQ)) Q:'+SDECQ  D
"RTN","SDEC02",122,0)
 . S SDECNOT=$G(^SDEC(409.84,SDECAD,1,SDECQ,0))
"RTN","SDEC02",123,0)
 . S:$E(SDECNOT,$L(SDECNOT)-1,$L(SDECNOT))'=" " SDECNOT=SDECNOT_" "
"RTN","SDEC02",124,0)
 . S SDECI=SDECI+1
"RTN","SDEC02",125,0)
 . S ^TMP("SDEC02",$J,SDECI)=SDECNOT
"RTN","SDEC02",126,0)
 S ^TMP("SDEC02",$J,SDECI)=^TMP("SDEC02",$J,SDECI)_"^"
"RTN","SDEC02",127,0)
 ;additional data
"RTN","SDEC02",128,0)
 S SDECZ=""
"RTN","SDEC02",129,0)
 S SDECZ=$S($P(SDECNOD,U,20)'="":$$FMTE^XLFDT($P(SDECNOD,U,20)),1:"")   ;[17]
"RTN","SDEC02",130,0)
 ;appt request type
"RTN","SDEC02",131,0)
 S SDAPTYP=$P($G(^SDEC(409.84,SDECAD,2)),U,1)
"RTN","SDEC02",132,0)
 S:SDAPTYP'="" SDAPTYP=$S($P(SDAPTYP,";",2)["SDWL":"E",$P(SDAPTYP,";",2)["GMR":"C",$P(SDAPTYP,";",2)="SD(403.5,":"R",$P(SDAPTYP,";",2)="SDEC(409.85,":"A",1:"")_"|"_$P(SDAPTYP,";",1)
"RTN","SDEC02",133,0)
 S $P(SDECZ,"^",2)=SDAPTYP  ;[18]
"RTN","SDEC02",134,0)
 S DIEDON="" D DIEDON^ORWPT(.DIEDON,SDECPATD)
"RTN","SDEC02",135,0)
 S $P(SDECZ,"^",3)=DIEDON  ;[19]
"RTN","SDEC02",136,0)
 S $P(SDECZ,"^",4)=$$GET1^DIQ(409.84,SDECAD_",",.23,"E")  ;[20]
"RTN","SDEC02",137,0)
 S SDECI=SDECI+1 S ^TMP("SDEC02",$J,SDECI)=SDECZ
"RTN","SDEC02",138,0)
 S SDECI=SDECI+1
"RTN","SDEC02",139,0)
 S ^TMP("SDEC02",$J,SDECI)=$C(30)
"RTN","SDEC02",140,0)
 Q
"RTN","SDEC02",141,0)
 ;
"RTN","SDEC02",142,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC02",143,0)
 S SDECI=SDECI+1
"RTN","SDEC02",144,0)
 S ^TMP("SDEC02",$J,SDECI)="0^^^^^^^^^^^"_SDECERR_$C(30)
"RTN","SDEC02",145,0)
 S SDECI=SDECI+1
"RTN","SDEC02",146,0)
 S ^TMP("SDEC02",$J,SDECI)=$C(31)
"RTN","SDEC02",147,0)
 Q
"RTN","SDEC02",148,0)
 ;
"RTN","SDEC02",149,0)
ETRAP ;EP Error trap entry
"RTN","SDEC02",150,0)
 D ^%ZTER
"RTN","SDEC02",151,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC02",152,0)
 S SDECI=SDECI+1
"RTN","SDEC02",153,0)
 D ERR(SDECI,"SDEC31 Error")
"RTN","SDEC02",154,0)
 Q
"RTN","SDEC03")
0^4^B10323049^n/a
"RTN","SDEC03",1,0)
SDEC03 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC03",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC03",3,0)
 ;
"RTN","SDEC03",4,0)
 Q
"RTN","SDEC03",5,0)
 ;
"RTN","SDEC03",6,0)
XR2S(SDECDA) ;build the ARSRC xref for the RESOURCE field of the SDEC APPOINTMENT file
"RTN","SDEC03",7,0)
 ;Format is ^SDEC(409.84,"ARSRC",RESOURCEID,STARTTIME,APPTID)
"RTN","SDEC03",8,0)
 Q:'$D(^SDEC(409.84,SDECDA,0))
"RTN","SDEC03",9,0)
 N SDECNOD,SDECAPPID,SDECRSID,SDECS
"RTN","SDEC03",10,0)
 S SDECNOD=^SDEC(409.84,SDECDA,0)
"RTN","SDEC03",11,0)
 S SDECAPPID=SDECDA
"RTN","SDEC03",12,0)
 S SDECRSID=$P(SDECNOD,U,7)
"RTN","SDEC03",13,0)
 Q:'+SDECAPPID>0
"RTN","SDEC03",14,0)
 Q:'+SDECRSID>0
"RTN","SDEC03",15,0)
 S SDECS=$P(SDECNOD,U)
"RTN","SDEC03",16,0)
 Q:'+SDECS
"RTN","SDEC03",17,0)
 S ^SDEC(409.84,"ARSRC",SDECRSID,SDECS,SDECAPPID)=""
"RTN","SDEC03",18,0)
 Q
"RTN","SDEC03",19,0)
 ;
"RTN","SDEC03",20,0)
XR2K(SDECA) ;kill the ARSRC xref for the RESOURCE field of the SDEC APPOINTMENT file
"RTN","SDEC03",21,0)
 Q:'$D(^SDEC(409.84,SDECA,0))
"RTN","SDEC03",22,0)
 N SDECNOD,SDECAPPID,SDECRSID,SDECS
"RTN","SDEC03",23,0)
 S SDECNOD=^SDEC(409.84,SDECA,0)
"RTN","SDEC03",24,0)
 S SDECAPPID=SDECA
"RTN","SDEC03",25,0)
 S SDECRSID=$P(SDECNOD,U,7)
"RTN","SDEC03",26,0)
 S SDECS=$P(SDECNOD,U)
"RTN","SDEC03",27,0)
 Q:'+SDECAPPID>0
"RTN","SDEC03",28,0)
 Q:'+SDECRSID>0
"RTN","SDEC03",29,0)
 Q:'+SDECS>0
"RTN","SDEC03",30,0)
 K ^SDEC(409.84,"ARSRC",SDECRSID,SDECS,SDECAPPID)
"RTN","SDEC03",31,0)
 Q
"RTN","SDEC03",32,0)
XR4S(SDECDA) ;build ARSCT xref for the STARTTIME field of the SDEC ACCESS BLOCK file
"RTN","SDEC03",33,0)
 ;Format is ^SDEC(409.821,"ARSCT",RESOURCEID,STARTTIME,DA)
"RTN","SDEC03",34,0)
 Q:'$D(^SDEC(409.821,SDECDA,0))
"RTN","SDEC03",35,0)
 N SDECNOD,SDECR,SDECS
"RTN","SDEC03",36,0)
 S SDECNOD=^SDEC(409.821,SDECDA,0)
"RTN","SDEC03",37,0)
 S SDECR=$P(SDECNOD,U)
"RTN","SDEC03",38,0)
 S SDECS=$P(SDECNOD,U,2)
"RTN","SDEC03",39,0)
 Q:'+SDECR>0
"RTN","SDEC03",40,0)
 Q:'+SDECS>0
"RTN","SDEC03",41,0)
 S ^SDEC(409.821,"ARSCT",SDECR,SDECS,SDECDA)=""
"RTN","SDEC03",42,0)
 Q
"RTN","SDEC03",43,0)
 ;
"RTN","SDEC03",44,0)
XR4K(SDECDA) ;kill ARSCT xref for the STARTTIME field of the SDEC ACCESS BLOCK file
"RTN","SDEC03",45,0)
 Q:'$D(^SDEC(409.821,SDECDA,0))
"RTN","SDEC03",46,0)
 N SDECNOD,SDECR,SDECS
"RTN","SDEC03",47,0)
 S SDECNOD=^SDEC(409.821,SDECDA,0)
"RTN","SDEC03",48,0)
 S SDECR=$P(SDECNOD,U)
"RTN","SDEC03",49,0)
 S SDECS=$P(SDECNOD,U,2)
"RTN","SDEC03",50,0)
 Q:'+SDECR>0
"RTN","SDEC03",51,0)
 Q:'+SDECS>0
"RTN","SDEC03",52,0)
 K ^SDEC(409.821,"ARSCT",SDECR,SDECS,SDECDA)
"RTN","SDEC03",53,0)
 Q
"RTN","SDEC03",54,0)
 ;
"RTN","SDEC03",55,0)
 ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC03",56,0)
XRC1(SDDA) ;computed routine for INACTIVE field in SDEC RESOURCE
"RTN","SDEC03",57,0)
 ;NO = active; YES = inactive
"RTN","SDEC03",58,0)
 N SDNOD,N21,N25,X
"RTN","SDEC03",59,0)
 S X=""
"RTN","SDEC03",60,0)
 S SDNOD=^SDEC(409.831,SDDA,0)
"RTN","SDEC03",61,0)
 S N21=$P(SDNOD,U,7)   ;inactive date/time
"RTN","SDEC03",62,0)
 S N25=$P(SDNOD,U,9)   ;reactive date/time
"RTN","SDEC03",63,0)
 I (N21="") S X="NO" Q X
"RTN","SDEC03",64,0)
 I (N25'="")&(N25>$$NOW^XLFDT) S X="YES" D RESDG^SDEC01B(SDDA) Q X
"RTN","SDEC03",65,0)
 I (N25'="")&(N25'>$$NOW^XLFDT) S X="NO" Q X
"RTN","SDEC03",66,0)
 I (N21<$$NOW^XLFDT) S X="YES" D RESDG^SDEC01B(SDDA) Q X
"RTN","SDEC03",67,0)
 S X="NO"
"RTN","SDEC03",68,0)
 Q X
"RTN","SDEC03",69,0)
 ;
"RTN","SDEC03",70,0)
XRC1M(SDDA,SDDA1) ;computed routine for INACTIVE field in SDEC RESOURCE; supports multiple HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC03",71,0)
 N SDNOD,N21,N22,N25,N26,X
"RTN","SDEC03",72,0)
 S X=""
"RTN","SDEC03",73,0)
 S SDNOD=^SDEC(409.831,SDDA,2,SDDA1,0)
"RTN","SDEC03",74,0)
 S N21=$P(SDNOD,U,7)
"RTN","SDEC03",75,0)
 S N22=$P(SDNOD,U,8)
"RTN","SDEC03",76,0)
 S N25=$P(SDNOD,U,9)
"RTN","SDEC03",77,0)
 S N26=$P(SDNOD,U,10)
"RTN","SDEC03",78,0)
 I (N21="")&(N22="") S X="NO" Q X
"RTN","SDEC03",79,0)
 I (N25="")!(N26="") S X="YES" Q X
"RTN","SDEC03",80,0)
 S X="NO"
"RTN","SDEC03",81,0)
 Q X
"RTN","SDEC03",82,0)
 ;
"RTN","SDEC03",83,0)
OT1(SDTYPE) ;output transform for RESOURCE TYPE in SDEC RESOURCE file 409.831
"RTN","SDEC03",84,0)
 ;INPUT:
"RTN","SDEC03",85,0)
 ; SDTYPE - internal format of RESOURCE TYPE
"RTN","SDEC03",86,0)
 ;RETURN:
"RTN","SDEC03",87,0)
 ;  SDRET - external text description of RESOURCE TYPE
"RTN","SDEC03",88,0)
 N SDRET
"RTN","SDEC03",89,0)
 I $P(SDTYPE,";",2)="SC(" S SDRET="CLINIC" Q SDRET
"RTN","SDEC03",90,0)
 I $P(SDTYPE,";",2)="VA(200," S SDRET="PROVIDER" Q SDRET
"RTN","SDEC03",91,0)
 I $P(SDTYPE,";",2)="SDEC(409.834," S SDRET="ADD'L RESOURCE" Q SDRET
"RTN","SDEC03",92,0)
 Q ""
"RTN","SDEC03",93,0)
 ;
"RTN","SDEC03",94,0)
N44S(SDCL,SDCLN) ;MUMPS xref for NAME of file 44 to update SDEC RESOURCE name if changed in 44
"RTN","SDEC03",95,0)
 N SDFDA,SDI,SDTYP
"RTN","SDEC03",96,0)
 ;find clinic resource in SDEC RESOURCE
"RTN","SDEC03",97,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI'>0  D
"RTN","SDEC03",98,0)
 .S SDTYP=$$GET1^DIQ(409.831,SDI_",",.012,"I")
"RTN","SDEC03",99,0)
 .Q:$P(SDTYP,";",2)'="SC("
"RTN","SDEC03",100,0)
 .S SDFDA(409.831,SDI_",",.01)=SDCLN
"RTN","SDEC03",101,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC03",102,0)
 Q
"RTN","SDEC03",103,0)
 ;
"RTN","SDEC03",104,0)
RTS(SDDA,X) ;New Style MUMPS xref for RESOURCE TYPE field of SDEC RESOURCE file 409.831
"RTN","SDEC03",105,0)
 N SD1,SD2
"RTN","SDEC03",106,0)
 S SD1=$E($$OT1(X),1)
"RTN","SDEC03",107,0)
 S SD2=$P(X,";",1)
"RTN","SDEC03",108,0)
 S ^SDEC(409.831,"AC",SD1,SD2,SDDA)=""
"RTN","SDEC03",109,0)
 Q
"RTN","SDEC03",110,0)
RTK(SDDA,X) ;New Style MUMPS xref for RESOURCE TYPE field of SDEC RESOURCE file 409.831
"RTN","SDEC03",111,0)
 N SD1,SD2
"RTN","SDEC03",112,0)
 S SD1=$E($$OT1(X),1)
"RTN","SDEC03",113,0)
 S SD2=$P(X,";",1)
"RTN","SDEC03",114,0)
 K ^SDEC(409.831,"AC",SD1,SD2,SDDA)
"RTN","SDEC03",115,0)
 Q
"RTN","SDEC04")
0^5^B18857087^n/a
"RTN","SDEC04",1,0)
SDEC04 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC04",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC04",3,0)
 ;
"RTN","SDEC04",4,0)
 Q
"RTN","SDEC04",5,0)
 ;
"RTN","SDEC04",6,0)
CSLOTSCH(SDECY,SDECRES,SDECSTART,SDECEND,SDECTYPES,SDECSRCH) ;GET Create Assigned Slot Schedule
"RTN","SDEC04",7,0)
 ;Create Assigned Slot Schedule recordset
"RTN","SDEC04",8,0)
 ;This call is used both to create a schedule of availability for the calendar display
"RTN","SDEC04",9,0)
 ;and to search for availability in the Find Appointment function
"RTN","SDEC04",10,0)
 ;
"RTN","SDEC04",11,0)
 ;SDECRES is resource name
"RTN","SDEC04",12,0)
 ;
"RTN","SDEC04",13,0)
 ;SDECTYPES is |-delimited list of Access Type Names
"RTN","SDEC04",14,0)
 ;If SDECTYPES is "" then the screen passes all types.
"RTN","SDEC04",15,0)
 ;
"RTN","SDEC04",16,0)
 ;SDECSRCH is |-delimited search info for the Find Appointment function
"RTN","SDEC04",17,0)
 ;First piece is 1 if we are in a Find Appointment call
"RTN","SDEC04",18,0)
 ;Second piece is weekday info in the format MTWHFSU
"RTN","SDEC04",19,0)
 ;Third piece is AM PM info in the form AP
"RTN","SDEC04",20,0)
 ;If 2nd or 3rd pieces are null, the screen for that piece is skipped
"RTN","SDEC04",21,0)
 ;RETURN:
"RTN","SDEC04",22,0)
 ; Global Array in which each array entry contains slot data separated by ^:
"RTN","SDEC04",23,0)
 ; 1. START_TIME
"RTN","SDEC04",24,0)
 ; 2. END_TIME
"RTN","SDEC04",25,0)
 ; 3. SLOTS
"RTN","SDEC04",26,0)
 ; 4. RESOURCE
"RTN","SDEC04",27,0)
 ; 5. ACCESS_TYPE
"RTN","SDEC04",28,0)
 ; 6. NOTE
"RTN","SDEC04",29,0)
 ; 7. AVAILABILITYID
"RTN","SDEC04",30,0)
 ;
"RTN","SDEC04",31,0)
 N CNT
"RTN","SDEC04",32,0)
 N SDECAD,SDECALO,SDECBS,SDECDEP,SDECERR,SDECI,SDECIEN,SDECK,SDECL,SDECNEND,SDECNOD
"RTN","SDEC04",33,0)
 N SDECNOT,SDECNSTART,SDECPEND,SDECQ,SDECRESD,SDECRESN,SDECS,SDECSUBCD,SDECTMP
"RTN","SDEC04",34,0)
 N SDAB,SDECTYPE,SDECTYPED,SDECZ
"RTN","SDEC04",35,0)
 N %DT,X,Y
"RTN","SDEC04",36,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC04",37,0)
 S SDECERR=""
"RTN","SDEC04",38,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC04",39,0)
 S SDECALO=0,SDECI=0
"RTN","SDEC04",40,0)
 S ^TMP("SDEC",$J,SDECI)="T00030START_TIME^T00030END_TIME^I00010SLOTS^T00030RESOURCE^T00010ACCESS_TYPE^T00250NOTE^I00030AVAILABILITYID"_$C(30)
"RTN","SDEC04",41,0)
 ;
"RTN","SDEC04",42,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC04",43,0)
 S SDECSTART=Y
"RTN","SDEC04",44,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC04",45,0)
 S SDECEND=Y
"RTN","SDEC04",46,0)
 S SDECTYPES=$G(SDECTYPES)
"RTN","SDEC04",47,0)
 S SDECSRCH=$G(SDECSRCH)
"RTN","SDEC04",48,0)
 ;validate SDECRES
"RTN","SDEC04",49,0)
 S SDECRES=$G(SDECRES) I SDECRES="" S @SDECY@(1)="-1^Invalid Resource ID" Q
"RTN","SDEC04",50,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) S @SDECY@(1)="-1^Resource ID is required" Q
"RTN","SDEC04",51,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0)) I '+SDECRES S @SDECY@(1)="-1^Invalid Resource ID" Q
"RTN","SDEC04",52,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC04",53,0)
 K @SDAB
"RTN","SDEC04",54,0)
 D GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)
"RTN","SDEC04",55,0)
 D:SDECTYPES'="" SDTYPES(.SDTYPES,SDECTYPES)
"RTN","SDEC04",56,0)
 ;Get Access Type IDs
"RTN","SDEC04",57,0)
 I 0,'+SDECSRCH S SDECTYPED=""
"RTN","SDEC04",58,0)
 I 0,+SDECSRCH F SDECK=1:1:$L(SDECTYPES,"|") D
"RTN","SDEC04",59,0)
 . S SDECL=$P(SDECTYPES,"|",SDECK)
"RTN","SDEC04",60,0)
 . I SDECL="" S $P(SDECTYPED,"|",SDECK)=0 Q
"RTN","SDEC04",61,0)
 . I '$D(^SDEC(409.823,"B",SDECL)) S $P(SDECTYPED,"|",SDECK)=0 Q
"RTN","SDEC04",62,0)
 . S $P(SDECTYPED,"|",SDECK)=$O(^SDEC(409.823,"B",SDECL,0))
"RTN","SDEC04",63,0)
 ;
"RTN","SDEC04",64,0)
 N SD1,SD2,SD3,SD4,SDI,SDN,SDNOD
"RTN","SDEC04",65,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC04",66,0)
 .S SDNOD=@SDAB@(SDI)
"RTN","SDEC04",67,0)
 .S Y=$P(SDNOD,U,2) X ^DD("DD") S SD1=$TR(Y,"@"," ")
"RTN","SDEC04",68,0)
 .S Y=$P(SDNOD,U,3) X ^DD("DD") S SD2=$TR(Y,"@"," ")
"RTN","SDEC04",69,0)
 .S SD3=+$P(SDNOD,U,4)
"RTN","SDEC04",70,0)
 .S SD4=$P($G(^SDEC(409.831,SDECRES,0)),U,1)
"RTN","SDEC04",71,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SD1_U_SD2_U_SD3_U_SD4_U_$P(SDNOD,U,5)_U_U_SDI_$C(30)
"RTN","SDEC04",72,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC04",73,0)
 K @SDAB
"RTN","SDEC04",74,0)
 Q
"RTN","SDEC04",75,0)
 ;
"RTN","SDEC04",76,0)
GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)  ;load SDEC ACCESS BLOCKS from file 44
"RTN","SDEC04",77,0)
 N SDCL,SDI,SDJ
"RTN","SDEC04",78,0)
 S SDECRES=$G(SDECRES) Q:SDECRES=""
"RTN","SDEC04",79,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) Q
"RTN","SDEC04",80,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0))
"RTN","SDEC04",81,0)
 G:'SDECRES GETX
"RTN","SDEC04",82,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC04",83,0)
 G:Y=-1 GETX
"RTN","SDEC04",84,0)
 S SDECSTART=Y
"RTN","SDEC04",85,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC04",86,0)
 G:Y=-1 GETX
"RTN","SDEC04",87,0)
 S SDECEND=Y
"RTN","SDEC04",88,0)
 S SDCL=$$GET1^DIQ(409.831,SDECRES_",",.04,"I")
"RTN","SDEC04",89,0)
 G:SDCL="" GETX
"RTN","SDEC04",90,0)
 ;L +^SDEC(409.831,SDECRES):5 G:'$T GETX
"RTN","SDEC04",91,0)
 S SDI=$$FMADD^XLFDT(SDECSTART,-1)
"RTN","SDEC04",92,0)
 F  S SDI=$$FMADD^XLFDT(SDI,1) Q:SDI>$P(SDECEND,".",1)  D
"RTN","SDEC04",93,0)
 .Q:$G(^SC(SDCL,"ST",SDI,1))["**CANCELLED**"
"RTN","SDEC04",94,0)
 .I ($O(^SC(SDCL,"T",0))="")!($O(^SC(SDCL,"T",0))>SDI) Q
"RTN","SDEC04",95,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDI)) Q   ;do not schedule on holidays
"RTN","SDEC04",96,0)
 .Q:$$INACTIVE^SDEC32(SDCL,$P(SDI,".",1))   ;don't get availability if clinic inactive on day SDI
"RTN","SDEC04",97,0)
 .D RESAB^SDECUTL2(SDAB,SDCL,SDI,SDI_"."_2359,SDECRES)
"RTN","SDEC04",98,0)
GETX ;
"RTN","SDEC04",99,0)
 ;L -^SDEC(409.831,SDECRES)
"RTN","SDEC04",100,0)
 Q
"RTN","SDEC04",101,0)
 ;
"RTN","SDEC04",102,0)
ABM ;Maintenance routine for SDEC ACCESS BLOCK file to be scheduled nightly
"RTN","SDEC04",103,0)
 Q
"RTN","SDEC04",104,0)
 ;
"RTN","SDEC04",105,0)
SDTYPES(SDTYPES,SDECTYPES) ;
"RTN","SDEC04",106,0)
 N SDI,SDTYPE,SDTYPEN
"RTN","SDEC04",107,0)
 K SDTYPES
"RTN","SDEC04",108,0)
 F SDI=1:1:$L(SDECTYPES,"|") D
"RTN","SDEC04",109,0)
 .S SDTYPEN=$P(SDECTYPES,"|",SDI)
"RTN","SDEC04",110,0)
 .I +SDTYPEN S SDTYPE=SDTYPEN,SDTYPEN=$$GET1^DIQ(409.823,SDTYPE_",",.01)
"RTN","SDEC04",111,0)
 .E  S SDTYPE=$O(^SDEC(409.823,"B",$E(SDTYPEN,1,30),0))
"RTN","SDEC04",112,0)
 .S:SDTYPE'="" SDTYPES(SDTYPE)=SDTYPEN
"RTN","SDEC04",113,0)
 Q
"RTN","SDEC04",114,0)
 ;
"RTN","SDEC04",115,0)
DEL(SDRES,SDBEG,SDEND) ;delete access blocks
"RTN","SDEC04",116,0)
 Q
"RTN","SDEC05")
0^6^B17215588^n/a
"RTN","SDEC05",1,0)
SDEC05 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC05",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC05",3,0)
 ;
"RTN","SDEC05",4,0)
 Q
"RTN","SDEC05",5,0)
 ;
"RTN","SDEC05",6,0)
 ;
"RTN","SDEC05",7,0)
APBLKOV(SDECY,SDECSTART,SDECEND,SDECRES,SDECWI) ;APPT BLOCKS OVERLAP
"RTN","SDEC05",8,0)
 ;APBLKOV(SDECY,SDECSTART,SDECEND,SDECRES,SDECWI)  external parameter tag is in SDEC
"RTN","SDEC05",9,0)
 ;SDECRES is resource name
"RTN","SDEC05",10,0)
 ;SDECWI is for walk-in appointments. 1 - Include walkins, otherwise do not include them.
"RTN","SDEC05",11,0)
 ;
"RTN","SDEC05",12,0)
 N SDECERR,SDECIEN,SDECDEP,SDECBS,SDECI,SDECNEND,SDECNSTART,SDECPEND,SDECRESD,SDECRESN,SDECS,SDECAD,SDECNOD,SDECPAT
"RTN","SDEC05",13,0)
 N %DT,X,Y
"RTN","SDEC05",14,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC05",15,0)
 S SDECERR=""
"RTN","SDEC05",16,0)
 S SDECY="^TMP(""SDEC"","_$J_")",SDECI=0
"RTN","SDEC05",17,0)
 S ^TMP("SDEC",$J,SDECI)="D00030START_TIME^D00030END_TIME^I00010PAT_ID^T00030APPTREQTYPE"_$C(30)
"RTN","SDEC05",18,0)
 D
"RTN","SDEC05",19,0)
 . S SDECBS=0
"RTN","SDEC05",20,0)
 . S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC05",21,0)
 . S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC05",22,0)
 . S %DT="T",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC05",23,0)
 . I SDECSTART=-1 S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC05",24,0)
 . S %DT="T",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC05",25,0)
 . I SDECEND=-1 S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC05",26,0)
 . I $L(SDECEND,".")=1 S SDECEND=SDECEND+.9999 ;Go to end of day
"RTN","SDEC05",27,0)
 . S SDECRESN=SDECRES
"RTN","SDEC05",28,0)
 . Q:SDECRESN=""
"RTN","SDEC05",29,0)
 . Q:'$D(^SDEC(409.831,"B",SDECRESN))
"RTN","SDEC05",30,0)
 . S SDECRESD=$O(^SDEC(409.831,"B",SDECRESN,0))
"RTN","SDEC05",31,0)
 . Q:'+SDECRESD
"RTN","SDEC05",32,0)
 . Q:'$D(^SDEC(409.84,"ARSRC",SDECRESD))
"RTN","SDEC05",33,0)
 . D STRES(SDECRESD,SDECSTART,SDECEND,$G(SDECWI))
"RTN","SDEC05",34,0)
 . Q
"RTN","SDEC05",35,0)
 ;
"RTN","SDEC05",36,0)
 S ^TMP("SDEC",$J,$G(SDECI,0))=^TMP("SDEC",$J,$G(SDECI,0))_$C(31)
"RTN","SDEC05",37,0)
 Q
"RTN","SDEC05",38,0)
 ;
"RTN","SDEC05",39,0)
APBLKALL(SDECY,SDECSTART,SDECEND) ;List of all appointments for all resources
"RTN","SDEC05",40,0)
 ;APBLKALL(SDECY,SDECSTART,SDECEND)  external parameter tag is in SDEC
"RTN","SDEC05",41,0)
 ; Input:  SDECSTART - Start Date
"RTN","SDEC05",42,0)
 ;         SDECEND   - End Date
"RTN","SDEC05",43,0)
 ;
"RTN","SDEC05",44,0)
 N SDECDATA,SDECRIEN,SDECRESN,SDECI
"RTN","SDEC05",45,0)
 S SDECRIEN=0 F  S SDECRIEN=$O(^SDEC(409.831,SDECRIEN)) Q:'SDECRIEN  D
"RTN","SDEC05",46,0)
 .S SDECRESN=$$GET1^DIQ(409.831,SDECRIEN,.01,"E")
"RTN","SDEC05",47,0)
 .Q:SDECRESN=""
"RTN","SDEC05",48,0)
 .; Call existing API to gather appointments for each resource found
"RTN","SDEC05",49,0)
 .K SDECDATA
"RTN","SDEC05",50,0)
 .D APBLKOV^SDEC(.SDECDATA,$G(SDECSTART),$G(SDECEND),$G(SDECRESN),1) ;Call tag in ^SDEC
"RTN","SDEC05",51,0)
 .D GATHER(SDECDATA,SDECRESN)
"RTN","SDEC05",52,0)
 .K ^TMP("SDEC",$J)
"RTN","SDEC05",53,0)
 M ^TMP("SDEC",$J)=^TMP("SDEC05",$J)
"RTN","SDEC05",54,0)
 K ^TMP("SDEC05",$J)
"RTN","SDEC05",55,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC05",56,0)
 S ^TMP("SDEC",$J,0)="D00030START_TIME^D00030END_TIME^I00010PAT_ID^T00030RES_NAME^T00030APPTREQTYPE"_$C(30)
"RTN","SDEC05",57,0)
 S SDECI=$O(^TMP("SDEC",$J,""),-1)
"RTN","SDEC05",58,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC05",59,0)
 Q
"RTN","SDEC05",60,0)
 ;
"RTN","SDEC05",61,0)
GATHER(SDECDAT,SDECRESN) ;
"RTN","SDEC05",62,0)
 ; Called by APBLKBR to retrieve data gathered for each resource.
"RTN","SDEC05",63,0)
 N X,SDECADAT,SDECI
"RTN","SDEC05",64,0)
 S X=0 F  S X=$O(@SDECDAT@(X)) Q:'X  D
"RTN","SDEC05",65,0)
 .S SDECADAT=$G(@SDECDAT@(X)) Q:SDECADAT=$C(31)
"RTN","SDEC05",66,0)
 .S SDECI=$O(^TMP("SDEC05",$J,""),-1) S SDECI=$G(SDECI)+1
"RTN","SDEC05",67,0)
 .S SDECADAT=$P(SDECADAT,$C(30),1)
"RTN","SDEC05",68,0)
 .S ^TMP("SDEC05",$J,SDECI)=$P(SDECADAT,U,1,3)_U_SDECRESN_U_$P(SDECADAT,U,4)_$C(30)
"RTN","SDEC05",69,0)
 Q
"RTN","SDEC05",70,0)
 ;
"RTN","SDEC05",71,0)
STRES(SDECRESD,SDECSTART,SDECEND,SDECWI) ;
"RTN","SDEC05",72,0)
 ;$O THRU "ARSRC" XREF OF ^SDEC(409.84,
"RTN","SDEC05",73,0)
 ;Start at the beginning of the day -- appts can't overlap days
"RTN","SDEC05",74,0)
 S SDECS=$P(SDECSTART,"."),SDECS=SDECS-.0001
"RTN","SDEC05",75,0)
 F  S SDECS=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS)) Q:'+SDECS  Q:SDECS>SDECEND  D
"RTN","SDEC05",76,0)
 . S SDECAD=0 F  S SDECAD=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS,SDECAD)) Q:'+SDECAD  D STCOMM(SDECAD,$G(SDECWI)) ;SDECAD Is the AppointmentID
"RTN","SDEC05",77,0)
 . Q
"RTN","SDEC05",78,0)
 Q
"RTN","SDEC05",79,0)
 ;
"RTN","SDEC05",80,0)
STCOMM(SDECAD,SDECWI) ;
"RTN","SDEC05",81,0)
 N SDAPTYP
"RTN","SDEC05",82,0)
 S SDECNEND=0,SDECNSTART=0,SDECPEND=0
"RTN","SDEC05",83,0)
 Q:'$D(^SDEC(409.84,SDECAD,0))
"RTN","SDEC05",84,0)
 S SDECNOD=^SDEC(409.84,SDECAD,0)
"RTN","SDEC05",85,0)
 S SDECPAT=$P(SDECNOD,U,5)
"RTN","SDEC05",86,0)
 Q:$P(SDECNOD,U,10)=1  ;NO-SHOW Flag
"RTN","SDEC05",87,0)
 Q:$P(SDECNOD,U,12)]""  ;CANCELLED APPT
"RTN","SDEC05",88,0)
 I '$G(SDECWI) Q:$P(SDECNOD,U,13)="y"  ;WALKIN
"RTN","SDEC05",89,0)
 S SDECNSTART=$P(SDECNOD,U)
"RTN","SDEC05",90,0)
 S SDECNEND=$P(SDECNOD,U,2)
"RTN","SDEC05",91,0)
 I SDECNEND'>SDECSTART Q  ;End is less than start
"RTN","SDEC05",92,0)
 S Y=SDECNSTART X ^DD("DD") S SDECNSTART=$TR(Y,"@"," ")
"RTN","SDEC05",93,0)
 S Y=SDECNEND X ^DD("DD") S SDECNEND=$TR(Y,"@"," ")
"RTN","SDEC05",94,0)
 ;appt request type
"RTN","SDEC05",95,0)
 S SDAPTYP=$P($G(^SDEC(409.84,SDECAD,2)),U,1)
"RTN","SDEC05",96,0)
 S:SDAPTYP'="" SDAPTYP=$S($P(SDAPTYP,";",2)["SDWL":"E",$P(SDAPTYP,";",2)["GMR":"C",$P(SDAPTYP,";",2)="SD(403.5,":"R",1:"")_"|"_$P(SDAPTYP,";",1)
"RTN","SDEC05",97,0)
 S SDECI=SDECI+1
"RTN","SDEC05",98,0)
 S ^TMP("SDEC",$J,SDECI)=SDECNSTART_U_SDECNEND_U_SDECPAT_U_SDAPTYP_$C(30)
"RTN","SDEC05",99,0)
 Q
"RTN","SDEC06")
0^7^B7162903^n/a
"RTN","SDEC06",1,0)
SDEC06 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC06",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC06",3,0)
 ;
"RTN","SDEC06",4,0)
 Q
"RTN","SDEC06",5,0)
 ;
"RTN","SDEC06",6,0)
TPBLKOV(SDECY,SDECSTART,SDECEND,SDECRES) ;TYPE BLOCKS OVERLAP
"RTN","SDEC06",7,0)
 ;TPBLKOV(SDECY,SDECSTART,SDECEND,SDECRES)  external parameter tag in SDEC
"RTN","SDEC06",8,0)
 ;SDECSTART - Start date/time in external format
"RTN","SDEC06",9,0)
 ;SDECEND   - End date/time in external format
"RTN","SDEC06",10,0)
 ;SDECRES   - Resource name from the NAME field of the SDEC RESOURCE file
"RTN","SDEC06",11,0)
 ;SDECRES is resource name
"RTN","SDEC06",12,0)
 ;RETURN:
"RTN","SDEC06",13,0)
 ;Returns a Global Array in which each array entry contains data Access Block data separated by ^:
"RTN","SDEC06",14,0)
 ; 1. StartTime
"RTN","SDEC06",15,0)
 ; 2. EndTime
"RTN","SDEC06",16,0)
 ; 3. AppointmentTypeID
"RTN","SDEC06",17,0)
 ; 4. AvailabilityID
"RTN","SDEC06",18,0)
 ; 5. ResourceName
"RTN","SDEC06",19,0)
 N SDAB,SDECERR,SDECIEN,SDECDEP,SDECBS,SDECI,SDECNEND,SDECNSTART,SDECPEND,SDECRESD,SDECRESN,SDECS,SDECTPID,SDECNOD,SDECAD
"RTN","SDEC06",20,0)
 N %DT,X,Y
"RTN","SDEC06",21,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC06",22,0)
 K @SDAB
"RTN","SDEC06",23,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC06",24,0)
 S SDECERR=""
"RTN","SDEC06",25,0)
 S SDECY="^TMP(""SDEC"","_$J_")",SDECI=0
"RTN","SDEC06",26,0)
 S ^TMP("SDEC",$J,SDECI)="D00030StartTime^D00030EndTime^I00010AppointmentTypeID^I00010AvailabilityID^T00030ResourceName"_$C(30)
"RTN","SDEC06",27,0)
 D
"RTN","SDEC06",28,0)
 . S SDECBS=0
"RTN","SDEC06",29,0)
 . S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC06",30,0)
 . S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC06",31,0)
 . S %DT="T",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC06",32,0)
 . I SDECSTART=-1 S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC06",33,0)
 . S %DT="T",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC06",34,0)
 . I SDECEND=-1 S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC06",35,0)
 . I $L(SDECEND,".")=1 S SDECEND=SDECEND+.9999 ;Go to end of day
"RTN","SDEC06",36,0)
 . S SDECRESN=SDECRES
"RTN","SDEC06",37,0)
 . Q:SDECRESN=""
"RTN","SDEC06",38,0)
 . I +SDECRESN S SDECRESD=SDECRESN,SDECRESN=$P($G(^SDEC(409.831,+SDECRESN,0)),U,1)
"RTN","SDEC06",39,0)
 . E  S SDECRESD=$O(^SDEC(409.831,"B",SDECRESN,0))
"RTN","SDEC06",40,0)
 . I ('+SDECRESD)!('$D(^SDEC(409.831,+SDECRESD,0))) Q
"RTN","SDEC06",41,0)
 . D GETSLOTS^SDEC04(SDAB,SDECRESD,SDECSTART,SDECEND)
"RTN","SDEC06",42,0)
 . D STCOMM(SDECRESN,SDECRESD,SDAB)
"RTN","SDEC06",43,0)
 . Q
"RTN","SDEC06",44,0)
 ;
"RTN","SDEC06",45,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC06",46,0)
 K @SDAB
"RTN","SDEC06",47,0)
 Q
"RTN","SDEC06",48,0)
 ;
"RTN","SDEC06",49,0)
STCOMM(SDECRESN,SDECRESD,SDAB) ;EP
"RTN","SDEC06",50,0)
 ;
"RTN","SDEC06",51,0)
 S SDECNEND=0,SDECNSTART=0,SDECPEND=0
"RTN","SDEC06",52,0)
 ;
"RTN","SDEC06",53,0)
 N SDI
"RTN","SDEC06",54,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC06",55,0)
 .S SDECNOD=@SDAB@(SDI)
"RTN","SDEC06",56,0)
 .S SDECNSTART=$P(SDECNOD,U,2)
"RTN","SDEC06",57,0)
 .S SDECNEND=$P(SDECNOD,U,3)
"RTN","SDEC06",58,0)
 .I SDECNEND'>SDECSTART Q
"RTN","SDEC06",59,0)
 .S Y=SDECNSTART X ^DD("DD") S SDECNSTART=$TR(Y,"@"," ")
"RTN","SDEC06",60,0)
 .S Y=SDECNEND X ^DD("DD") S SDECNEND=$TR(Y,"@"," ")
"RTN","SDEC06",61,0)
 .S SDECTPID=$P(SDECNOD,U,5)
"RTN","SDEC06",62,0)
 .S SDECI=SDECI+1
"RTN","SDEC06",63,0)
 .S ^TMP("SDEC",$J,SDECI)=SDECNSTART_U_SDECNEND_U_+SDECTPID_U_SDI_U_SDECRESN_$C(30)
"RTN","SDEC06",64,0)
 Q
"RTN","SDEC07")
0^8^B222963350^n/a
"RTN","SDEC07",1,0)
SDEC07 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC07",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC07",3,0)
 ;
"RTN","SDEC07",4,0)
 ;Reference is made to ICR #4837
"RTN","SDEC07",5,0)
 Q
"RTN","SDEC07",6,0)
 ;
"RTN","SDEC07",7,0)
APPADD(SDECY,SDECSTART,SDECEND,DFN,SDECRES,SDECLEN,SDECNOTE,SDECATID,SDECCR,SDMRTC,SDDDT,SDREQBY,SDLAB,PROVIEN,SDID,SDAPTYP,SDSVCP,SDSVCPR,SDCL,SDEKG,SDXRAY,APPTYPE,EESTAT,OVB) ;ADD NEW APPOINTMENT
"RTN","SDEC07",8,0)
 ;APPADD(SDECY,SDECSTART,SDECEND,DFN,SDECRES,SDECLEN,SDECNOTE,SDECATID,SDECCR,SDMRTC,SDDDT,SDREQBY,SDLAB,PROVIEN,SDID,SDAPTYP,SDSVCP,SDSVCPR,SDCL,SDEKG,SDXRAY,APPTYPE)
"RTN","SDEC07",9,0)
 ;  external parameter tag is in SDEC
"RTN","SDEC07",10,0)
 ;Create entry in SDEC APPOINTMENT
"RTN","SDEC07",11,0)
 ;INPUT:
"RTN","SDEC07",12,0)
 ;  1. SDECSTART - (external date/time format) Appointment start date/time
"RTN","SDEC07",13,0)
 ;  2. SDECEND   - (external date/time format) Appointment end date/time
"RTN","SDEC07",14,0)
 ;  3. DFN       - (integer) Patient ID - pointer to the PATIENT file 2
"RTN","SDEC07",15,0)
 ;  4. SDECRES   - (required) Resource Name from the NAME field of the
"RTN","SDEC07",16,0)
 ;                       SDEC RESOURCE file
"RTN","SDEC07",17,0)
 ;                    OR pointer to the SDEC RESOURCE file
"RTN","SDEC07",18,0)
 ;  5. SDECLEN   - (optional) Appointment duration in minutes
"RTN","SDEC07",19,0)
 ;  6. SDECNOTE  - (text) Represents a note; Only the 1st 150 characters are used
"RTN","SDEC07",20,0)
 ;  7. SDECATID  - SDECATID is used for 2 purposes:
"RTN","SDEC07",21,0)
 ;                  if SDECATID = "WALKIN" then create a walkin appt.
"RTN","SDEC07",22,0)
 ;                  if SDECATID = a number, then it is the access type id
"RTN","SDEC07",23,0)
 ;                    (used for rebooking)
"RTN","SDEC07",24,0)
 ;  8. SDECCR    - (flag) 0=don't print routing slip for WALKIN/Same Day
"RTN","SDEC07",25,0)
 ;                       appointment
"RTN","SDEC07",26,0)
 ;                     1=allow print routing slip
"RTN","SDEC07",27,0)
 ;  9. SDMRTC    - (optional) MTRC flag (multiple appointments) - Valid values False  True
"RTN","SDEC07",28,0)
 ; 10. SDDDT     - (optional) Desired Date of Appointment in external format
"RTN","SDEC07",29,0)
 ; 11. SDREQBY   - (optional) Requested By - valid values are PROVIDER  PATIENT
"RTN","SDEC07",30,0)
 ; 12. SDLAB     - (optional) LAB date/time in external format
"RTN","SDEC07",31,0)
 ; 13. PROVIEN   - (optional) Provider pointer to NEW PERSON file
"RTN","SDEC07",32,0)
 ; 14. SDID      - (optional) External ID (free-text)
"RTN","SDEC07",33,0)
 ; 15. SDAPTYP   - (required) Appt Request type - variable pointer pointer to one of these files:
"RTN","SDEC07",34,0)
 ;                         SD WAIT LIST         - E|<WL IEN>       E|123
"RTN","SDEC07",35,0)
 ;                         REQUEST/CONSULTATION - C|<CONSULT IEN>  C|123
"RTN","SDEC07",36,0)
 ;                         RECALL REMINDERS     - R|^<RECALL IEN>  R|123
"RTN","SDEC07",37,0)
 ; 16. SDSVCP    - (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDEC07",38,0)
 ; 17. SDSVCPR   - (optional) SERVICE CONNECTED PERCENTAGE   numeric 0-100
"RTN","SDEC07",39,0)
 ; 18. SDCL      - (required) clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC07",40,0)
 ; 19. SDEKG - (optional) EKG date/time in external format
"RTN","SDEC07",41,0)
 ; 20. SDXRAY- (optional) X-Ray date/time in external format
"RTN","SDEC07",42,0)
 ; 21. APPTYPE - (optional) Appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC07",43,0)
 ; 22. EESTAT  - (optional) Patient Status   N=NEW  E=ESTABLISHED
"RTN","SDEC07",44,0)
 ; 23. OVB     - (optional) overbook flag - 1=yes, this appointment is an overbook
"RTN","SDEC07",45,0)
 ;
"RTN","SDEC07",46,0)
 ;RETURN:
"RTN","SDEC07",47,0)
 ;  recordset having fields
"RTN","SDEC07",48,0)
 ;  AppointmentID and ErrorNumber
"RTN","SDEC07",49,0)
 ;
"RTN","SDEC07",50,0)
 N SDAPPTYP
"RTN","SDEC07",51,0)
 N SDECERR,SDECIEN,SDECDEP,SDECI,SDECJ,SDECAPPTI,SDECDJ,SDECRESD,SDECRNOD,SDECC,SDECERR,SDECWKIN
"RTN","SDEC07",52,0)
 N SDECNOEV,SDECDEV,SDECDERR,SDECTMP,SAVESTRT
"RTN","SDEC07",53,0)
 N %DT,X,Y,DGQUIET
"RTN","SDEC07",54,0)
 S SDECNOEV=1 ;Don't execute SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",55,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC07",56,0)
 S SDECERR=0
"RTN","SDEC07",57,0)
 S SDECI=0
"RTN","SDEC07",58,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC07",59,0)
 S ^TMP("SDEC",$J,SDECI)="I00020APPOINTMENTID^T00020ERRORID"_$C(30)
"RTN","SDEC07",60,0)
 S SDECI=SDECI+1
"RTN","SDEC07",61,0)
 ;Check input data for errors
"RTN","SDEC07",62,0)
 S SAVESTRT=SDECSTART         ;MGH save date/time for consult request
"RTN","SDEC07",63,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC07",64,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC07",65,0)
 S %DT="RXT",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC07",66,0)
 I SDECSTART=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid Start Time") Q
"RTN","SDEC07",67,0)
 S %DT="RXT",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC07",68,0)
 I SDECEND=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",69,0)
 I $L(SDECEND,".")=1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",70,0)
 I SDECSTART>SDECEND S SDECTMP=SDECEND,SDECEND=SDECSTART,SDECSTART=SDECTMP
"RTN","SDEC07",71,0)
 S DFN=$G(DFN)
"RTN","SDEC07",72,0)
 I DFN="" D ERR(SDECI+1,"SDEC07: Patient ID required.") Q
"RTN","SDEC07",73,0)
 I '$D(^DPT(DFN,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Patient ID") Q
"RTN","SDEC07",74,0)
 ;Validate Resource
"RTN","SDEC07",75,0)
 S SDECERR=0 K SDECRESD
"RTN","SDEC07",76,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC07",77,0)
 I +SDECRES,'$D(^SDEC(409.831,SDECRES,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",78,0)
 I '+SDECRES,'$D(^SDEC(409.831,"B",SDECRES)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",79,0)
 S SDECRESD=$S(+SDECRES:+SDECRES,1:$O(^SDEC(409.831,"B",SDECRES,0)))
"RTN","SDEC07",80,0)
 S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC07",81,0)
 I SDECRNOD="" D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment -- invalid Resource entry.") Q
"RTN","SDEC07",82,0)
 S SDECWKIN=0
"RTN","SDEC07",83,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",84,0)
 I SDECATID="WALKIN" S SDECWKIN=1
"RTN","SDEC07",85,0)
 I SDECATID'?.N&(SDECATID'="WALKIN") S SDECATID=""
"RTN","SDEC07",86,0)
 ;validate appointment length - if passed in, must be 5-120
"RTN","SDEC07",87,0)
 S SDECLEN=$G(SDECLEN)
"RTN","SDEC07",88,0)
 ;I SDECLEN'="",(+SDECLEN<5)!(SDECLEN>120) D ERR(SDECI+1,"SDEC07 Error: Appointment length must be between 5 - 120.") Q
"RTN","SDEC07",89,0)
 ;validate MTRC flag (optional)
"RTN","SDEC07",90,0)
 S SDMRTC=$$UP^XLFSTR($G(SDMRTC))
"RTN","SDEC07",91,0)
 S SDMRTC=$S(SDMRTC="TRUE":1,1:0)
"RTN","SDEC07",92,0)
 ;validate desired date of appt (optional)
"RTN","SDEC07",93,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",94,0)
 I SDDDT'="" S %DT="" S X=$P(SDDDT,"@",1) D ^%DT S SDDDT=Y I Y=-1 S SDDDT=""
"RTN","SDEC07",95,0)
 I SDDDT="",SDECATID'="WALKIN" S SDDDT=$P(SDECSTART,".",1)
"RTN","SDEC07",96,0)
 ;validate requested by
"RTN","SDEC07",97,0)
 S SDREQBY=$$UP^XLFSTR($G(SDREQBY))
"RTN","SDEC07",98,0)
 I SDREQBY'="" S SDREQBY=$S(SDREQBY="PROVIDER":1,SDREQBY="PATIENT":2,1:0)
"RTN","SDEC07",99,0)
 ;validate lab date/time (optional)
"RTN","SDEC07",100,0)
 S SDLAB=$G(SDLAB)
"RTN","SDEC07",101,0)
 I SDLAB'="" S %DT="T" S X=SDLAB D ^%DT S SDLAB=Y I Y=-1 S SDLAB=""
"RTN","SDEC07",102,0)
 ;validate EKG date/time (optional)
"RTN","SDEC07",103,0)
 S SDEKG=$G(SDEKG)
"RTN","SDEC07",104,0)
 I SDEKG'="" S %DT="T" S X=SDEKG D ^%DT S SDEKG=Y I Y=-1 S SDEKG=""
"RTN","SDEC07",105,0)
 ;validate XRAY date/time (optional)
"RTN","SDEC07",106,0)
 S SDXRAY=$G(SDXRAY)
"RTN","SDEC07",107,0)
 I SDXRAY'="" S %DT="T" S X=SDXRAY D ^%DT S SDXRAY=Y I Y=-1 S SDXRAY=""
"RTN","SDEC07",108,0)
 ;validate provider
"RTN","SDEC07",109,0)
 I '$D(^VA(200,+$G(PROVIEN),0)) S PROVIEN=""
"RTN","SDEC07",110,0)
 S SDID=$G(SDID)
"RTN","SDEC07",111,0)
 ;validate clinic
"RTN","SDEC07",112,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",113,0)
 I SDCL'="" I '$D(^SC(SDCL,0)) S SDCL=""
"RTN","SDEC07",114,0)
 I SDCL="" S SDCL=$$GET1^DIQ(409.831,SDECRESD_",",.04,"I")   ;clinic ID   ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC07",115,0)
 ;validate appt request type (required)
"RTN","SDEC07",116,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",117,0)
 I SDAPTYP'="" D
"RTN","SDEC07",118,0)
 .I $P(SDAPTYP,"|",1)="E" I '$D(^SDWL(409.3,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",119,0)
 .I $P(SDAPTYP,"|",1)="R" I '$D(^SD(403.5,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",120,0)
 .I $P(SDAPTYP,"|",1)="C" I '$D(^GMR(123,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""  ;ICR 4837
"RTN","SDEC07",121,0)
 .I $P(SDAPTYP,"|",1)="A" I '$D(^SDEC(409.85,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",122,0)
 .;I SDAPTYP="" D ERR(SDECI+1,"SDEC07 Error: Invalid appointment request type.") Q   ;support for multiple HOSPITAL LOCATIONs are implemented in SDEC RESOURCE
"RTN","SDEC07",123,0)
 I SDCL="" D
"RTN","SDEC07",124,0)
 .S:$P(SDAPTYP,"|",1)="E" SDCL=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",13.2,"I")
"RTN","SDEC07",125,0)
 .S:$P(SDAPTYP,"|",1)="R" SDCL=$$GET1^DIQ(403.5,$P(SDAPTYP,"|",2)_",",4.5,"I")
"RTN","SDEC07",126,0)
 .S:$P(SDAPTYP,"|",1)="C" SDCL=$P($G(^GMR(123,+$P(SDAPTYP,"|",2),0)),U,4)       ;ICR 4837 ICR states 'Zero node read into variable'
"RTN","SDEC07",127,0)
 .S:$P(SDAPTYP,"|",1)="A" SDCL=$$GET1^DIQ(409.85,$P(SDAPTYP,"|",2)_",",8,"I")
"RTN","SDEC07",128,0)
 I SDCL="" D ERR(SDECI+1,"SDEC07 Error: Invalid clinic ID.") Q
"RTN","SDEC07",129,0)
 I $$INACTIVE^SDEC32(SDCL) D ERR(SDECI+1,"SDEC07 Error: "_$$GET1^DIQ(44,SDCL_",",.01)_" is an inactive clinic.") Q
"RTN","SDEC07",130,0)
 ;validate service connected
"RTN","SDEC07",131,0)
 S SDSVCP=$G(SDSVCP)
"RTN","SDEC07",132,0)
 I SDSVCP'="" S SDSVCP=+$G(SDSVCP) S:(+SDSVCP<0)!(+SDSVCP>100) SDSVCP=""
"RTN","SDEC07",133,0)
 S SDSVCPR=$G(SDSVCPR)
"RTN","SDEC07",134,0)
 S SDSVCPR=$S(SDSVCPR=0:0,SDSVCPR="NO":0,SDSVCPR=1:1,SDSVCPR="YES":1,1:"")
"RTN","SDEC07",135,0)
 ;validate note
"RTN","SDEC07",136,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07",137,0)
 ;validate APPTYPE
"RTN","SDEC07",138,0)
 S APPTYPE=$G(APPTYPE) I APPTYPE'="",'$D(^SD(409.1,+APPTYPE,0)) S APPTYPE=""
"RTN","SDEC07",139,0)
 ;validate Patient Status (EESTAT)
"RTN","SDEC07",140,0)
 S EESTAT=$G(EESTAT)
"RTN","SDEC07",141,0)
 I EESTAT="" D
"RTN","SDEC07",142,0)
 .I $P(SDAPTYP,"|",1)="E" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",27,"I")
"RTN","SDEC07",143,0)
 .I $P(SDAPTYP,"|",1)="A" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",.02,"I")
"RTN","SDEC07",144,0)
 S EESTAT=$S(EESTAT="N":"N",EESTAT="NEW":"N",EESTAT="E":"E",EESTAT="ESTABLISHED":"E",1:"")
"RTN","SDEC07",145,0)
 ;validate OVB (overbook)
"RTN","SDEC07",146,0)
 S OVB=+$G(OVB)
"RTN","SDEC07",147,0)
 D
"RTN","SDEC07",148,0)
 .S SDAPPTYP=+APPTYPE
"RTN","SDEC07",149,0)
 .I 'SDAPPTYP D
"RTN","SDEC07",150,0)
 ..I $P(SDAPTYP,"|",1)="E" S SDAPPTYP=$$GET1^DIQ(409.3,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",151,0)
 ..I $P(SDAPTYP,"|",1)="A" S SDAPPTYP=$$GET1^DIQ(409.85,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",152,0)
 ..I $P(SDAPTYP,"|",1)="C",+APPTYPE S SDAPPTYP=+APPTYPE
"RTN","SDEC07",153,0)
 .S:'SDAPPTYP SDAPPTYP=$O(^SD(409.1,"B","REGULAR",0))
"RTN","SDEC07",154,0)
 ;Lock SDEC node
"RTN","SDEC07",155,0)
 L +^SDEC(409.84,DFN):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") Q
"RTN","SDEC07",156,0)
 ;
"RTN","SDEC07",157,0)
 ;TSTART
"RTN","SDEC07",158,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,1)
"RTN","SDEC07",159,0)
 I 'SDECAPPTID D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment to SDEC APPOINTMENT file.") Q
"RTN","SDEC07",160,0)
 ;Save the Appointment and start a new transaction that will get rolled back if there's an error
"RTN","SDEC07",161,0)
 ;TCOMMIT
"RTN","SDEC07",162,0)
 ;TSTART
"RTN","SDEC07",163,0)
 ; call chart request
"RTN","SDEC07",164,0)
 S SDECDEV=""  ;$$GET1^DIQ(9009020.2,$$DIV^SDECU,.05) I SDECDEV="" S SDECDERR="SDEC07 Error: No file room printer is defined for the chart request."
"RTN","SDEC07",165,0)
 I SDECATID="WALKIN",$G(SDECCR),$G(SDECDEV)'="" S DGQUIET=1 D WISD^SDECRT(DFN,$P(SDECSTART,"."),"",SDECDEV)
"RTN","SDEC07",166,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",167,0)
 ;
"RTN","SDEC07",168,0)
 ;Create Appointment in VistA ;TODO: have this call APPVISTA^SDEC07
"RTN","SDEC07",169,0)
 I +SDCL,$D(^SC(SDCL,0)) D  I +SDECERR D ERR(SDECI+1,$P(SDECERR,U,2))
"RTN","SDEC07",170,0)
 . S SDECC("PAT")=DFN
"RTN","SDEC07",171,0)
 . S SDECC("CLN")=SDCL
"RTN","SDEC07",172,0)
 . S SDECC("TYP")=$S(+SDECWKIN:4,SDAPPTYP=1:1,1:3)   ;3 for scheduled appts, 4 for walkins
"RTN","SDEC07",173,0)
 . S SDECC("COL")=$S(SDAPPTYP=7:1,1:"")   ;collateral visit if appointment type is COLLATERAL OF VET.
"RTN","SDEC07",174,0)
 . S SDECC("APT")=SDAPPTYP
"RTN","SDEC07",175,0)
 . S SDECC("ADT")=SDECSTART
"RTN","SDEC07",176,0)
 . S SDECC("LEN")=SDECLEN
"RTN","SDEC07",177,0)
 . S SDECC("OI")=$E($G(SDECNOTE),1,150) ;File 44 has 150 character limit on OTHER field
"RTN","SDEC07",178,0)
 . S SDECC("OI")=$TR(SDECC("OI"),";"," ") ;No semicolons allowed
"RTN","SDEC07",179,0)
 . S SDECC("OI")=$$STRIP(SDECC("OI")) ;Strip control characters from note
"RTN","SDEC07",180,0)
 . S SDECC("RES")=SDECRESD
"RTN","SDEC07",181,0)
 . S SDECC("USR")=DUZ
"RTN","SDEC07",182,0)
 . S SDECC("MTR")=$G(SDMRTC)
"RTN","SDEC07",183,0)
 . S SDECC("DDT")=SDDDT
"RTN","SDEC07",184,0)
 . S SDECC("REQ")=SDREQBY
"RTN","SDEC07",185,0)
 . S SDECC("LAB")=SDLAB
"RTN","SDEC07",186,0)
 . S SDECC("XRA")=SDXRAY
"RTN","SDEC07",187,0)
 . S SDECC("EKG")=SDEKG
"RTN","SDEC07",188,0)
 . S SDECC("OVB")=+OVB
"RTN","SDEC07",189,0)
 . S:$P(SDAPTYP,"|",1)="C" SDECC("CON")=$P(SDAPTYP,"|",2)
"RTN","SDEC07",190,0)
 . S SDECERR=$$MAKE^SDEC07B(.SDECC)
"RTN","SDEC07",191,0)
 . Q:SDECERR
"RTN","SDEC07",192,0)
 . ;Update Clinic availability
"RTN","SDEC07",193,0)
 . D AVUPDT(SDCL,SDECSTART,SDECLEN)
"RTN","SDEC07",194,0)
 . ;L
"RTN","SDEC07",195,0)
 . Q
"RTN","SDEC07",196,0)
 ;update wait list
"RTN","SDEC07",197,0)
 I $P(SDAPTYP,"|",1)="E" D EWL^SDEC07A($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCP,SDSVCPR,SDECNOTE,SDAPPTYP)
"RTN","SDEC07",198,0)
 ;update appt request
"RTN","SDEC07",199,0)
 I $P(SDAPTYP,"|",1)="A" D
"RTN","SDEC07",200,0)
 .D UPDATE^SDECAR2($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCP,SDSVCPR,SDECNOTE,SDAPPTYP)
"RTN","SDEC07",201,0)
 .D:$G(SDMRTC) AR433^SDECAR2($P(SDAPTYP,"|",2),SDECAPPTID)
"RTN","SDEC07",202,0)
 ;
"RTN","SDEC07",203,0)
 ;Return Recordset
"RTN","SDEC07",204,0)
 ;TCOMMIT
"RTN","SDEC07",205,0)
 L -^SDEC(409.84,DFN)
"RTN","SDEC07",206,0)
 S SDECI=SDECI+1
"RTN","SDEC07",207,0)
 S ^TMP("SDEC",$J,SDECI)=SDECAPPTID_"^"_$G(SDECDERR)_$C(30)
"RTN","SDEC07",208,0)
 S SDECI=SDECI+1
"RTN","SDEC07",209,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07",210,0)
 Q
"RTN","SDEC07",211,0)
 ;
"RTN","SDEC07",212,0)
 ;Create Appointment
"RTN","SDEC07",213,0)
APPVISTA(SDECLEN,SDECNOTE,DFN,SDECRESD,SDECSTART,SDECWKIN,SDCL) ;
"RTN","SDEC07",214,0)
 N SDECC,SDECRNOD
"RTN","SDEC07",215,0)
 S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC07",216,0)
 I SDECRNOD="" D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment -- invalid Resource entry.") Q 1
"RTN","SDEC07",217,0)
 S SDECERR=""
"RTN","SDEC07",218,0)
 I +SDCL,$D(^SC(SDCL,0)) D  I +SDECERR D ERR(SDECI+1,SDECERR) Q SDECERR
"RTN","SDEC07",219,0)
 . S SDECC("PAT")=DFN
"RTN","SDEC07",220,0)
 . S SDECC("CLN")=SDCL
"RTN","SDEC07",221,0)
 . S SDECC("TYP")=3 ;3 for scheduled appts, 4 for walkins
"RTN","SDEC07",222,0)
 . S:SDECWKIN SDECC("TYP")=4
"RTN","SDEC07",223,0)
 . S SDECC("ADT")=SDECSTART
"RTN","SDEC07",224,0)
 . S SDECC("LEN")=SDECLEN
"RTN","SDEC07",225,0)
 . S SDECC("OI")=$E($G(SDECNOTE),1,150) ;File 44 has 150 character limit on OTHER field
"RTN","SDEC07",226,0)
 . S SDECC("OI")=$TR(SDECC("OI"),";"," ") ;No semicolons allowed
"RTN","SDEC07",227,0)
 . S SDECC("OI")=$$STRIP(SDECC("OI")) ;Strip control characters from note
"RTN","SDEC07",228,0)
 . S SDECC("RES")=SDECRESD
"RTN","SDEC07",229,0)
 . S SDECC("USR")=DUZ
"RTN","SDEC07",230,0)
 . S SDECERR=$$MAKE^SDEC07B(.SDECC)
"RTN","SDEC07",231,0)
 . Q:SDECERR
"RTN","SDEC07",232,0)
 . D AVUPDT(SDCL,SDECSTART,SDECLEN)
"RTN","SDEC07",233,0)
 . ;L
"RTN","SDEC07",234,0)
 . Q
"RTN","SDEC07",235,0)
 Q +SDECERR
"RTN","SDEC07",236,0)
 ;
"RTN","SDEC07",237,0)
SDECDEL(SDECAPPTID) ;Deletes appointment SDECAPPTID from SDECAPPOINTMETN
"RTN","SDEC07",238,0)
 N DA,DIK
"RTN","SDEC07",239,0)
 S DIK="^SDEC(409.84,",DA=SDECAPPTID
"RTN","SDEC07",240,0)
 D ^DIK
"RTN","SDEC07",241,0)
 Q
"RTN","SDEC07",242,0)
 ;
"RTN","SDEC07",243,0)
STRIP(SDECZ) ;Replace control characters with spaces
"RTN","SDEC07",244,0)
 N SDECI
"RTN","SDEC07",245,0)
 F SDECI=1:1:$L(SDECZ) I (32>$A($E(SDECZ,SDECI))) S SDECZ=$E(SDECZ,1,SDECI-1)_" "_$E(SDECZ,SDECI+1,999)
"RTN","SDEC07",246,0)
 Q SDECZ
"RTN","SDEC07",247,0)
 ;
"RTN","SDEC07",248,0)
SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,SDF) ;ADD SDEC APPOINTMENT ENTRY
"RTN","SDEC07",249,0)
 ;SDF       - (optional) flags
"RTN","SDEC07",250,0)
 ;                       1. called from GUI (update consult only if called from GUI)
"RTN","SDEC07",251,0)
 ;Returns ien in SDECAPPT or 0 if failed
"RTN","SDEC07",252,0)
 ;called from SDEC APPADD rpc and from VistA via SDM1A
"RTN","SDEC07",253,0)
 ;Create entry in SDEC APPOINTMENT
"RTN","SDEC07",254,0)
 N SDIEN,SDECAPPTID,SDECFDA,SDECIEN,SDECMSG
"RTN","SDEC07",255,0)
 S SDECSTART=$G(SDECSTART)
"RTN","SDEC07",256,0)
 S SAVESTRT=$G(SAVESTRT),SDECRES=$G(SDECRES)         ;MGH save date/time for consult request
"RTN","SDEC07",257,0)
 S SDECEND=$G(SDECEND)
"RTN","SDEC07",258,0)
 S DFN=$G(DFN)
"RTN","SDEC07",259,0)
 S SDECRESD=$G(SDECRESD)
"RTN","SDEC07",260,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",261,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",262,0)
 S SDID=$G(SDID)
"RTN","SDEC07",263,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",264,0)
 S SDAPPTYP=$G(SDAPPTYP)
"RTN","SDEC07",265,0)
 S PROVIEN=$G(PROVIEN)
"RTN","SDEC07",266,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",267,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07",268,0)
 S SDF=$G(SDF,0)
"RTN","SDEC07",269,0)
 I PROVIEN="" D
"RTN","SDEC07",270,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC07",271,0)
 S SDIEN=$$APPTGET^SDECUTL(DFN,SDECSTART,SDCL)
"RTN","SDEC07",272,0)
 S SDIEN=$S(SDIEN'="":SDIEN_",",1:"+1,")
"RTN","SDEC07",273,0)
 S SDECFDA(409.84,SDIEN,.01)=SDECSTART
"RTN","SDEC07",274,0)
 S SDECFDA(409.84,SDIEN,.02)=SDECEND
"RTN","SDEC07",275,0)
 S SDECFDA(409.84,SDIEN,.05)=DFN
"RTN","SDEC07",276,0)
 S:+SDAPPTYP SDECFDA(409.84,SDIEN,.06)=SDAPPTYP
"RTN","SDEC07",277,0)
 ;S:SDECATID?.N SDECFDA(409.84,SDIEN,.06)=SDECATID
"RTN","SDEC07",278,0)
 S SDECFDA(409.84,SDIEN,.07)=SDECRESD
"RTN","SDEC07",279,0)
 S SDECFDA(409.84,SDIEN,.08)=$G(DUZ)
"RTN","SDEC07",280,0)
 S SDECFDA(409.84,SDIEN,.09)=$P($$NOW^XLFDT,".",1)
"RTN","SDEC07",281,0)
 S SDECFDA(409.84,SDIEN,.1)=""
"RTN","SDEC07",282,0)
 S SDECFDA(409.84,SDIEN,.101)=""
"RTN","SDEC07",283,0)
 S SDECFDA(409.84,SDIEN,.102)=""
"RTN","SDEC07",284,0)
 S SDECFDA(409.84,SDIEN,.11)=""
"RTN","SDEC07",285,0)
 S SDECFDA(409.84,SDIEN,.12)=""
"RTN","SDEC07",286,0)
 S SDECFDA(409.84,SDIEN,.121)=""
"RTN","SDEC07",287,0)
 S SDECFDA(409.84,SDIEN,.122)=""
"RTN","SDEC07",288,0)
 S:SDECATID="WALKIN" SDECFDA(409.84,SDIEN,.13)="y"
"RTN","SDEC07",289,0)
 S:PROVIEN'="" SDECFDA(409.84,SDIEN,.16)=PROVIEN
"RTN","SDEC07",290,0)
 S SDECFDA(409.84,SDIEN,.17)=""
"RTN","SDEC07",291,0)
 S:$G(SDECLEN)'="" SDECFDA(409.84,SDIEN,.18)=SDECLEN
"RTN","SDEC07",292,0)
 S SDECFDA(409.84,SDIEN,.2)=SDDDT
"RTN","SDEC07",293,0)
 S:$G(SDID)'="" SDECFDA(409.84,SDIEN,.21)=SDID
"RTN","SDEC07",294,0)
 S:SDAPTYP'="" SDECFDA(409.84,SDIEN,.22)=$P(SDAPTYP,"|",2)_";"_$S($P(SDAPTYP,"|",1)="E":"SDWL(409.3,",$P(SDAPTYP,"|",1)="C":"GMR(123,",$P(SDAPTYP,"|",1)="R":"SD(403.5,",$P(SDAPTYP,"|",1)="A":"SDEC(409.85,",1:"")
"RTN","SDEC07",295,0)
 S:$G(EESTAT)'="" SDECFDA(409.84,SDIEN,.23)=EESTAT
"RTN","SDEC07",296,0)
 K SDECIEN,SDECMSG
"RTN","SDEC07",297,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC07",298,0)
 S SDECAPPTID=$S(SDIEN'="+1,":+SDIEN,1:+$G(SDECIEN(1)))
"RTN","SDEC07",299,0)
 K SDECMSG
"RTN","SDEC07",300,0)
 D WP^DIE(409.84,$S(+$G(SDECAPPTID):SDECAPPTID_",",1:SDIEN_","),1,"","@","SDECMSG")
"RTN","SDEC07",301,0)
 I SDECAPPTID'="" D
"RTN","SDEC07",302,0)
 .I $P(SDAPTYP,"|",1)="C",SDF D
"RTN","SDEC07",303,0)
 ..D REQSET^SDEC07A($P(SDAPTYP,"|",2),PROVIEN,"",1,"",SDECNOTE,SAVESTRT,SDECRES)   ;MGH added 3 parameters to this call
"RTN","SDEC07",304,0)
 Q SDECAPPTID
"RTN","SDEC07",305,0)
 ;
"RTN","SDEC07",306,0)
SDECWP(SDECAPPTID,SDECNOTE) ;
"RTN","SDEC07",307,0)
 ;Add WP field
"RTN","SDEC07",308,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC07",309,0)
 I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC07",310,0)
 I $D(SDECNOTE(.5)) D
"RTN","SDEC07",311,0)
 . D WP^DIE(409.84,SDECAPPTID_",",1,"","SDECNOTE","SDECMSG")
"RTN","SDEC07",312,0)
 Q
"RTN","SDEC07",313,0)
 ;
"RTN","SDEC07",314,0)
ADDEVT(DFN,SDECSTART,SDECSC,SDCLA) ;EP
"RTN","SDEC07",315,0)
 ;Called by SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",316,0)
 ;SDECSC=IEN of clinic in ^SC
"RTN","SDEC07",317,0)
 ;SDCLA=IEN for ^SC(SDECSC,"S",SDECSTART,1,SDCLA). Use to get Length & Note
"RTN","SDEC07",318,0)
 ;
"RTN","SDEC07",319,0)
 N SDECNOD,SDECLEN,SDECAPPTID,SDECNODP,SDECWKIN,SDECRES
"RTN","SDEC07",320,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC07",321,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0))
"RTN","SDEC07",322,0)
 Q:'+$G(SDECRES)
"RTN","SDEC07",323,0)
 S SDECNOD=$G(^SC(SDECSC,"S",SDECSTART,1,SDCLA,0))
"RTN","SDEC07",324,0)
 Q:SDECNOD=""
"RTN","SDEC07",325,0)
 S SDECNODP=$G(^DPT(DFN,"S",SDECSTART,0))
"RTN","SDEC07",326,0)
 S SDECWKIN=""
"RTN","SDEC07",327,0)
 S:$P(SDECNODP,U,7)=4 SDECWKIN="WALKIN" ;Purpose of Visit field of DPT Appointment subfile
"RTN","SDEC07",328,0)
 S SDECLEN=$P(SDECNOD,U,2)
"RTN","SDEC07",329,0)
 Q:'+SDECLEN
"RTN","SDEC07",330,0)
 S SDECEND=$$FMADD^XLFDT(SDECSTART,0,0,SDECLEN,0)
"RTN","SDEC07",331,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRES,SDECWKIN,,,,,SDECSC,,,,,,1)
"RTN","SDEC07",332,0)
 Q:'+SDECAPPTID
"RTN","SDEC07",333,0)
 S SDECNOTE=$P(SDECNOD,U,4)
"RTN","SDEC07",334,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",335,0)
 D ADDEVT3(SDECRES)
"RTN","SDEC07",336,0)
 Q
"RTN","SDEC07",337,0)
 ;
"RTN","SDEC07",338,0)
ADDEVT3(SDECRES) ;
"RTN","SDEC07",339,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC07",340,0)
 Q
"RTN","SDEC07",341,0)
 N SDECRESN
"RTN","SDEC07",342,0)
 S SDECRESN=$G(^SDEC(409.831,SDECRES,0))
"RTN","SDEC07",343,0)
 Q:SDECRESN=""
"RTN","SDEC07",344,0)
 S SDECRESN=$P(SDECRESN,"^")
"RTN","SDEC07",345,0)
 ;D EVENT^BMXMEVN("SDEC SCHEDULE",SDECRESN)
"RTN","SDEC07",346,0)
 Q
"RTN","SDEC07",347,0)
 ;
"RTN","SDEC07",348,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC07",349,0)
 S SDECI=SDECI+1
"RTN","SDEC07",350,0)
 S SDECERR=$TR(SDECERR,"^","~")
"RTN","SDEC07",351,0)
 S ^TMP("SDEC",$J,SDECI)=$G(SDECAPPTID,0)_"^"_SDECERR_$C(30)
"RTN","SDEC07",352,0)
 S SDECI=SDECI+1
"RTN","SDEC07",353,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07",354,0)
 L
"RTN","SDEC07",355,0)
 Q
"RTN","SDEC07",356,0)
 ;
"RTN","SDEC07",357,0)
ETRAP ;EP Error trap entry
"RTN","SDEC07",358,0)
 D ^%ZTER
"RTN","SDEC07",359,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC07",360,0)
 S SDECI=SDECI+1
"RTN","SDEC07",361,0)
 D ERR(SDECI,"SDEC07 Error")
"RTN","SDEC07",362,0)
 Q
"RTN","SDEC07",363,0)
 ;
"RTN","SDEC07",364,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC07",365,0)
 ;
"RTN","SDEC07",366,0)
DOW N SDTMP S SDTMP=$E(X,1,3),Y=$E(X,4,5),Y=Y>2&'(SDTMP#4)+$E("144025036146",Y)
"RTN","SDEC07",367,0)
 F SDTMP=SDTMP:-1:281 S Y=SDTMP#4=1+1+Y
"RTN","SDEC07",368,0)
 S Y=$E(X,6,7)+Y#7
"RTN","SDEC07",369,0)
 Q
"RTN","SDEC07",370,0)
 ;
"RTN","SDEC07",371,0)
AVUPDT(SDCL,SDECSTART,SDECLEN) ;Update Clinic availability
"RTN","SDEC07",372,0)
 ;SEE SDM1
"RTN","SDEC07",373,0)
 N %,ABORT,SDNOT,Y,DFN,SDVAL
"RTN","SDEC07",374,0)
 N SL,STARTDAY,X,SC,SB,HSI,SI,STR,SDDIF,SDMAX,SDDATE,SDDMAX,SDSDATE,CCXN,MXOK,COV,SDPROG
"RTN","SDEC07",375,0)
 N X1,SDEDT,X2,SD,SM,SS,S,SDLOCK,ST,I,SDECINC
"RTN","SDEC07",376,0)
 S Y=SDCL   ;,DFN=DFN  ;renamed SDECPATID to DFN
"RTN","SDEC07",377,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDEC07",378,0)
 ;Determine maximum days for scheduling
"RTN","SDEC07",379,0)
 S SDMAX(1)=$P($G(^SC(+SC,"SDP")),U,2) S:'SDMAX(1) SDMAX(1)=365
"RTN","SDEC07",380,0)
 S (SDMAX,SDDMAX)=$$FMADD^XLFDT(DT,SDMAX(1))
"RTN","SDEC07",381,0)
 S SDDATE=SDECSTART
"RTN","SDEC07",382,0)
 S SDSDATE=SDDATE,SDDATE=SDDATE\1
"RTN","SDEC07",383,0)
1 ;L  Q:$D(SDXXX)  S CCXN=0 K MXOK,COV,SDPROT Q:DFN<0  S SC=+SC
"RTN","SDEC07",384,0)
 ;Q:$D(SDXXX)
"RTN","SDEC07",385,0)
 S CCXN=0 K MXOK,COV,SDPROT Q:$G(DFN)<0  S SC=+SC
"RTN","SDEC07",386,0)
 S X1=DT,SDEDT=365 S:$D(^SC(SC,"SDP")) SDEDT=$P(^SC(SC,"SDP"),"^",2)
"RTN","SDEC07",387,0)
 S X2=SDEDT D C^%DTC S SDEDT=X
"RTN","SDEC07",388,0)
 S Y=SDECSTART
"RTN","SDEC07",389,0)
EN1 S (X,SD)=Y,SM=0 D DOW
"RTN","SDEC07",390,0)
S I '$D(^SC(SC,"ST",$P(SD,"."),1)) S SS=+$O(^SC(+SC,"T"_Y,SD)) Q:SS'>0  Q:^(SS,1)=""  S ^SC(+SC,"ST",$P(SD,"."),1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SD,6,7)_$J("",SI+SI-6)_^(1),^(0)=$P(SD,".")
"RTN","SDEC07",391,0)
 S S=SDECLEN
"RTN","SDEC07",392,0)
 ;Check if SDECLEN evenly divisible by appointment length
"RTN","SDEC07",393,0)
 S SDVAL=$P(SL,U)
"RTN","SDEC07",394,0)
 I SDECLEN<SDVAL S SDECLEN=SDVAL
"RTN","SDEC07",395,0)
 I SDECLEN#SDVAL'=0 D
"RTN","SDEC07",396,0)
 . S SDECINC=SDECLEN\SDVAL
"RTN","SDEC07",397,0)
 . S SDECINC=SDECINC+1
"RTN","SDEC07",398,0)
 . S SDECLEN=SDVAL*SDECINC
"RTN","SDEC07",399,0)
 S SL=S_U_$P(SL,U,2,99)
"RTN","SDEC07",400,0)
SC S SDLOCK=$S('$D(SDLOCK):1,1:SDLOCK+1) Q:SDLOCK>9
"RTN","SDEC07",401,0)
 L +^SC(SC,"ST",$P(SD,"."),1):5 G:'$T SC
"RTN","SDEC07",402,0)
 S SDLOCK=0,S=^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",403,0)
 S I=SD#1-SB*100,ST=I#1*SI\.6+($P(I,".")*SI),SS=SL*HSI/60*SDDIF+ST+ST
"RTN","SDEC07",404,0)
 I (I<1!'$F(S,"["))&(S'["CAN") L -^SC(SC,"ST",$P(SD,"."),1) Q
"RTN","SDEC07",405,0)
 I SM<7 S %=$F(S,"[",SS-1) S:'%!($P(SL,"^",6)<3) %=999 I $F(S,"]",SS)'<%!(SDDIF=2&$E(S,ST+ST+1,SS-1)["[") S SM=7
"RTN","SDEC07",406,0)
 ;
"RTN","SDEC07",407,0)
SP I ST+ST>$L(S),$L(S)<80 S S=S_" " G SP
"RTN","SDEC07",408,0)
 S SDNOT=1
"RTN","SDEC07",409,0)
 S ABORT=0
"RTN","SDEC07",410,0)
 F I=ST+ST:SDDIF:SS-SDDIF D  Q:ABORT
"RTN","SDEC07",411,0)
 . S ST=$E(S,I+1) S:ST="" ST=" "
"RTN","SDEC07",412,0)
 . S Y=$E(STR,$F(STR,ST)-2)
"RTN","SDEC07",413,0)
 . I S["CAN"!(ST="X"&($D(^SC(+SC,"ST",$P(SD,"."),"CAN")))) S ABORT=1 Q
"RTN","SDEC07",414,0)
 . I Y="" S ABORT=1 Q
"RTN","SDEC07",415,0)
 . S:Y'?1NL&(SM<6) SM=6 S ST=$E(S,I+2,999) S:ST="" ST=" " S S=$E(S,1,I)_Y_ST
"RTN","SDEC07",416,0)
 . Q
"RTN","SDEC07",417,0)
 S ^SC(SC,"ST",$P(SD,"."),1)=S
"RTN","SDEC07",418,0)
 L -^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",419,0)
 Q
"RTN","SDEC07",420,0)
 ;
"RTN","SDEC07",421,0)
ERROR ;
"RTN","SDEC07",422,0)
 D ERR1("Error")
"RTN","SDEC07",423,0)
 Q
"RTN","SDEC07",424,0)
 ;
"RTN","SDEC07",425,0)
ERR1(SDECERR) ;Error processing
"RTN","SDEC07",426,0)
 S SDECI=SDECI+1
"RTN","SDEC07",427,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC07",428,0)
 S SDECI=SDECI+1
"RTN","SDEC07",429,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07",430,0)
 Q
"RTN","SDEC07A")
0^9^B68824292^n/a
"RTN","SDEC07A",1,0)
SDEC07A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC07A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC07A",3,0)
 ;
"RTN","SDEC07A",4,0)
 ;Reference is made to ICR #6185
"RTN","SDEC07A",5,0)
 Q
"RTN","SDEC07A",6,0)
 ;
"RTN","SDEC07A",7,0)
OVBOOK(SDECY,SDCL,NSDT,SDECRES) ;RPC - OVERBOOK - Check if Overbook is allowed for given Clinic and Date.
"RTN","SDEC07A",8,0)
 ;OVBOOK(SDECY,SDCL,NSDT,SDECRES)  external parameter tag is in SDEC
"RTN","SDEC07A",9,0)
 ;  .SDECY   = returned pointer to OVERBOOK data
"RTN","SDEC07A",10,0)
 ;   SDCL    = clinic code - pointer to Hospital Location file ^SC
"RTN","SDEC07A",11,0)
 ;   NSDT    = date/time of new appointment
"RTN","SDEC07A",12,0)
 ;   SDECRES = resource to check for overbook
"RTN","SDEC07A",13,0)
 N %DT,AP,SDECI,OB,SDBK,OBCNT,OBMAX,SDCLN,SDCLRES,SDCLSL,SDCNT,SDRET,SDT,SDTD,SDTE,X,Y
"RTN","SDEC07A",14,0)
 N SD30,SDARR,OBCNTSUM
"RTN","SDEC07A",15,0)
 S OBCNTSUM=0
"RTN","SDEC07A",16,0)
 ; SDTD  = new schedule Date only in FM format
"RTN","SDEC07A",17,0)
 ; SDT   = loop value for $o through schedules
"RTN","SDEC07A",18,0)
 ; SDTE  = end of loop schedule
"RTN","SDEC07A",19,0)
 ; NSDT  = new appointment schedule Date/Time will be converted to FM format
"RTN","SDEC07A",20,0)
 S SDECI=0
"RTN","SDEC07A",21,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC07A",22,0)
 K @SDECY
"RTN","SDEC07A",23,0)
 S @SDECY@(0)="T00020ERRORID"_$C(30)
"RTN","SDEC07A",24,0)
 ;check for valid Hospital location
"RTN","SDEC07A",25,0)
 I '+SDCL D ERR1("Invalid Clinic ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",26,0)
 I '$D(^SC(SDCL,0)) D ERR1("Invalid Clinic ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",27,0)
 ;check for valid resource ID
"RTN","SDEC07A",28,0)
 I '+SDECRES D ERR1("Invalid Resource ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",29,0)
 I '$D(^SDEC(409.831,SDECRES,0)) D ERR1("Invalid Resource ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",30,0)
 ;check for valid DATE/TIME
"RTN","SDEC07A",31,0)
 S %DT="T"
"RTN","SDEC07A",32,0)
 S X=NSDT
"RTN","SDEC07A",33,0)
 D ^%DT   ; GET FM FORMAT FOR APPOINTMENT DATE/TIME
"RTN","SDEC07A",34,0)
 S NSDT=Y
"RTN","SDEC07A",35,0)
 I NSDT=-1 D ERR1("Invalid Appointment Date.") Q
"RTN","SDEC07A",36,0)
 S SDTD=$P(NSDT,".")
"RTN","SDEC07A",37,0)
 ; data header
"RTN","SDEC07A",38,0)
 ; OVERBOOK  0=not overbooked; 1=overbooked
"RTN","SDEC07A",39,0)
 S @SDECY@(0)="T00020OVERBOOK"_$C(30)
"RTN","SDEC07A",40,0)
 ;get allowed number of overbookings for clinic
"RTN","SDEC07A",41,0)
 S SDCLSL=$G(^SC(SDCL,"SL"))
"RTN","SDEC07A",42,0)
 S OBMAX=$P(SDCLSL,U,7)
"RTN","SDEC07A",43,0)
 I '+OBMAX S (OBCNT,OBMAX)=0 G XIT
"RTN","SDEC07A",44,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC07A",45,0)
 K @SDAB
"RTN","SDEC07A",46,0)
 D GETSLOTS^SDEC04(SDAB,SDECRES,SDTD,SDTD_".2359")
"RTN","SDEC07A",47,0)
 N IDX,SDR,SDSTART,SDSTOP,SDSLOTS,XX
"RTN","SDEC07A",48,0)
 S IDX="" F  S IDX=$O(@SDAB@(IDX)) Q:IDX=""  D
"RTN","SDEC07A",49,0)
 .S XX=@SDAB@(IDX)
"RTN","SDEC07A",50,0)
 .S SDSTART=$P(XX,U,2),SDSTOP=$P(XX,U,3),SDSLOTS=$P(XX,U,4)
"RTN","SDEC07A",51,0)
 .;loop thru schedule
"RTN","SDEC07A",52,0)
 .; SDBK(<appt time>,<appt end time>)=counter starting at 0
"RTN","SDEC07A",53,0)
 .K SDBK  ;overbook counter array
"RTN","SDEC07A",54,0)
 .S SDRET="" D CRSCHED^SDEC(.SDRET,SDECRES,SDSTART,SDSTOP)
"RTN","SDEC07A",55,0)
 .K SDARR
"RTN","SDEC07A",56,0)
 .S SD30=1,SDCNT=0,SDT=0 F  S SDT=$O(@SDRET@(SDT)) Q:SDT=""  D
"RTN","SDEC07A",57,0)
 ..S SDR=$G(@SDRET@(SDT))
"RTN","SDEC07A",58,0)
 ..I $P(SDR,U,1)[$c(30) S SD30=1 Q
"RTN","SDEC07A",59,0)
 ..Q:SD30'=1
"RTN","SDEC07A",60,0)
 ..S SDCNT=SDCNT+1
"RTN","SDEC07A",61,0)
 ..S SDARR($P(SDR,U,1))=""
"RTN","SDEC07A",62,0)
 ..S SD30=0
"RTN","SDEC07A",63,0)
 .S SDCNT=0 F  S SDCNT=$O(SDARR(SDCNT)) Q:SDCNT=""  D
"RTN","SDEC07A",64,0)
 ..S SDR=$G(^SDEC(409.84,+SDCNT,0))
"RTN","SDEC07A",65,0)
 ..S SDT=$P(SDR,U,1)
"RTN","SDEC07A",66,0)
 ..S SDTE=$P(SDR,U,2)
"RTN","SDEC07A",67,0)
 ..Q:$P(SDR,U,12)]""  ;dont count cancelled appts
"RTN","SDEC07A",68,0)
 ..;if time ranges overlap, add to SDBK array
"RTN","SDEC07A",69,0)
 ..I (SDTE>SDT)&(((SDT'<SDSTART)&(SDT<SDSTOP))!((SDTE>SDSTART)&(SDTE'>SDSTOP))!((SDT'>SDSTART)&(SDTE'<SDSTOP))) D
"RTN","SDEC07A",70,0)
 ...D CKOB(SDT,SDTE,.SDBK)
"RTN","SDEC07A",71,0)
 ..;;D CKOB($P(SDT,".")_".0000",$P(SDTE,".")_".2359",.SDBK)
"RTN","SDEC07A",72,0)
 .S OBCNT=$$CNTOB(.SDBK,SDECRES,SDTD,OBMAX,SDAB)
"RTN","SDEC07A",73,0)
 .S OBCNTSUM=OBCNTSUM+OBCNT
"RTN","SDEC07A",74,0)
 .K @SDRET,SDBK
"RTN","SDEC07A",75,0)
XIT ;
"RTN","SDEC07A",76,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",77,0)
 ;S @SDECY@(SDECI)=$S(OBCNT<OBMAX:"YES",1:"NO")
"RTN","SDEC07A",78,0)
 S @SDECY@(SDECI)=$S(OBCNTSUM<OBMAX:"YES",1:"NO")
"RTN","SDEC07A",79,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",80,0)
 S @SDECY@(SDECI)=$C(30)
"RTN","SDEC07A",81,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",82,0)
 S @SDECY@(SDECI)=$C(31)
"RTN","SDEC07A",83,0)
 Q
"RTN","SDEC07A",84,0)
 ;
"RTN","SDEC07A",85,0)
 ;find appointment in SDEC APPOINTMENT file
"RTN","SDEC07A",86,0)
SDECAP(SDECSDT,DFN) ;
"RTN","SDEC07A",87,0)
 N SDECAPN,SDECRES,ID
"RTN","SDEC07A",88,0)
 S SDECRES=0
"RTN","SDEC07A",89,0)
 S ID=0
"RTN","SDEC07A",90,0)
 F  S ID=$O(^SDEC(409.84,"B",SDECSDT,ID)) Q:ID'>0  Q:SDECRES'=0  D
"RTN","SDEC07A",91,0)
 . S SDECAPN=$G(^SDEC(409.84,ID,0))
"RTN","SDEC07A",92,0)
 . I $P(SDECAPN,U,5)=DFN S SDECRES=$P(SDECAPN,U,7)
"RTN","SDEC07A",93,0)
 Q SDECRES
"RTN","SDEC07A",94,0)
 ;
"RTN","SDEC07A",95,0)
 ;check if appointment start/stop is in range of an existing appointment
"RTN","SDEC07A",96,0)
CKOB(START,STOP,SDBK) ;called internally
"RTN","SDEC07A",97,0)
 ;  START   = appointment start date/time in FM format
"RTN","SDEC07A",98,0)
 ;  STOP    = appointment stop date/time in FM format
"RTN","SDEC07A",99,0)
 ; .SDBK    = bookings Array -  SDBK(<appt time>,<appt end time>)=counter starting at 0
"RTN","SDEC07A",100,0)
 N B,E,OB,OBF
"RTN","SDEC07A",101,0)
 S OBF=0
"RTN","SDEC07A",102,0)
 S B=""
"RTN","SDEC07A",103,0)
 F  S B=$O(SDBK(B)) Q:B'>0  D  Q:+OBF
"RTN","SDEC07A",104,0)
 . S E="" F  S E=$O(SDBK(B,E)) Q:E'>0  D  Q:+OBF
"RTN","SDEC07A",105,0)
 . . S OB=SDBK(B,E)
"RTN","SDEC07A",106,0)
 . . S OBF=1
"RTN","SDEC07A",107,0)
 . . ;S OBF=(($$FMADD^XLFDT(START,B,2)'<0)&($$FMADD^XLFDT(START,E,2)<0))!(($$FMADD^XLFDT(STOP,B,2)>0)&($$FMADD^XLFDT(STOP,E,2)'<0))
"RTN","SDEC07A",108,0)
 . . ;S OBF=(($P(START,".",2)'<$P(B,".",2))&($P(START,".",2)'>$P(E,".",2)))!(($P(STOP,".",2)>$P(B,".",2))&($P(STOP,".",2)'>$P(E,".",2)))
"RTN","SDEC07A",109,0)
 . . I OBF S SDBK(B,E)=(OB+1)
"RTN","SDEC07A",110,0)
 I 'OBF S SDBK(START,STOP)=1
"RTN","SDEC07A",111,0)
 ;
"RTN","SDEC07A",112,0)
 Q
"RTN","SDEC07A",113,0)
 ;
"RTN","SDEC07A",114,0)
 ;count overbookings
"RTN","SDEC07A",115,0)
CNTOB(SDBK,SDECRES,SDTD,OBMAX,SDAB) ;called internally
"RTN","SDEC07A",116,0)
 N AB,ABF,ABN,CNT,BK,SLOTS,B,E
"RTN","SDEC07A",117,0)
 S BK=""
"RTN","SDEC07A",118,0)
 S CNT=0
"RTN","SDEC07A",119,0)
 S B="" F  S B=$O(SDBK(B)) Q:B=""  D  Q:CNT'<OBMAX
"RTN","SDEC07A",120,0)
 . S E="" F  S E=$O(SDBK(B,E)) Q:E=""  D  Q:CNT'<OBMAX
"RTN","SDEC07A",121,0)
 . . S BK=SDBK(B,E)
"RTN","SDEC07A",122,0)
 . . Q:'+BK
"RTN","SDEC07A",123,0)
 . . S SLOTS=$$SLOTS(B,E,SDAB)   ;find access block
"RTN","SDEC07A",124,0)
 . . I '+SLOTS S CNT=CNT+BK
"RTN","SDEC07A",125,0)
 . . E  S BK=BK-SLOTS S:BK<0 BK=0 S CNT=CNT+BK
"RTN","SDEC07A",126,0)
 Q CNT
"RTN","SDEC07A",127,0)
SLOTS(B,E,SDAB) ;find access block
"RTN","SDEC07A",128,0)
 N ABF,ABN,SDI,SLOTS
"RTN","SDEC07A",129,0)
 S SLOTS=""
"RTN","SDEC07A",130,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D  Q:+ABF
"RTN","SDEC07A",131,0)
 .S ABN=@SDAB@(SDI)
"RTN","SDEC07A",132,0)
 .S ABF=((B'<$P(ABN,U,2))&(B<$P(ABN,U,3)))!((E>$P(ABN,U,2))&(E'>$P(ABN,U,3)))
"RTN","SDEC07A",133,0)
 .S:ABF SLOTS=+$P(ABN,U,4)
"RTN","SDEC07A",134,0)
 Q SLOTS
"RTN","SDEC07A",135,0)
 ;
"RTN","SDEC07A",136,0)
REQSET(SDRIEN,SDPROV,SDUSR,SDACT,SDECTYP,SDECNOTE,SAVESTRT,SDECRES) ;add SCHEDULED activity to REQUEST/CONSULTATION file
"RTN","SDEC07A",137,0)
 ;INPUT:
"RTN","SDEC07A",138,0)
 ; SDRIEN  - (required) pointer to RFEQUEST/CONSULTATION file 123
"RTN","SDEC07A",139,0)
 ; SDPROV  - (required) Provider pointer to NEW PERSON
"RTN","SDEC07A",140,0)
 ; SDUSR   - (optional) User that entered appointment pointer to NEW PERSON
"RTN","SDEC07A",141,0)
 ; SDACT   - (required) ACTIVITY type to add  1=SCHEDULED  2=STATUS CHANGE
"RTN","SDEC07A",142,0)
 ; SDECTYP - (required if SDACT=2) appointment Status valid values:
"RTN","SDEC07A",143,0)
 ;                          C=CANCELLED BY CLINIC
"RTN","SDEC07A",144,0)
 ;                         PC=CANCELLED BY PATIENT
"RTN","SDEC07A",145,0)
 ; SDECNOTE - Comments from Appointment
"RTN","SDEC07A",146,0)
 ; SDECSTRT - Appointment time
"RTN","SDEC07A",147,0)
 ; SDECRES  - Appointment Resource
"RTN","SDEC07A",148,0)
 N SDDT,SDFDA,SDI,SDIEN,SDOA,SDOS,SDPDC,SDSCHED,SDSCHEDF,SDSTAT,SDTXT,SDERR,Y
"RTN","SDEC07A",149,0)
 S SDACT=$G(SDACT)
"RTN","SDEC07A",150,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC07A",151,0)
 Q:"12"'[SDACT
"RTN","SDEC07A",152,0)
 S SDSCHEDF=0
"RTN","SDEC07A",153,0)
 S SDUSR=$G(SDUSR)
"RTN","SDEC07A",154,0)
 S:SDUSR="" SDUSR=DUZ
"RTN","SDEC07A",155,0)
 S:'$D(^VA(200,+SDUSR,0)) SDUSR=DUZ  ;take this out
"RTN","SDEC07A",156,0)
 S SDSCHED=$$GETIEN^SDEC51("SCHEDULED")
"RTN","SDEC07A",157,0)
 S SDSTAT=$$GETIEN^SDEC51("STATUS CHANGE")
"RTN","SDEC07A",158,0)
 S SDPDC=$O(^ORD(100.01,"B","DISCONTINUED",0))
"RTN","SDEC07A",159,0)
 I SDACT=1,SDSCHED="" Q
"RTN","SDEC07A",160,0)
 I SDACT=2,SDSTAT="" Q
"RTN","SDEC07A",161,0)
 Q:$$GET1^DIQ(123,SDRIEN_",",8,"I")=SDPDC   ;never update file 123 if CPRS STATUS is DISCONTINUED
"RTN","SDEC07A",162,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07A",163,0)
 ;it is possible to have multiple scheduled activities; make sure there is not already a SCHEDULED activity
"RTN","SDEC07A",164,0)
 ;S SDI=0 F  S SDI=$O(^GMR(123,SDRIEN,40,SDI)) Q:SDI'>0  D  Q:+SDSCHEDF
"RTN","SDEC07A",165,0)
 ;.I $P($G(^GMR(123,SDRIEN,40,SDI,0)),U,2)=SDSCHED S SDSCHEDF=1 Q
"RTN","SDEC07A",166,0)
 ;Q:+SDSCHEDF
"RTN","SDEC07A",167,0)
 S SDDT=$E($$NOW^XLFDT,1,12)
"RTN","SDEC07A",168,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",.01)=SDDT                                   ;ICR 6185
"RTN","SDEC07A",169,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",1)=$S(SDACT=1:SDSCHED,SDACT=2:SDSTAT,1:"")  ;ICR 6185
"RTN","SDEC07A",170,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",2)=SDDT                                     ;ICR 6185
"RTN","SDEC07A",171,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",3)=SDPROV                                   ;ICR 6185
"RTN","SDEC07A",172,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",4)=SDUSR                                    ;ICR 6185
"RTN","SDEC07A",173,0)
 D UPDATE^DIE("","SDFDA","SDIEN")
"RTN","SDEC07A",174,0)
 S SDTXT=""
"RTN","SDEC07A",175,0)
 ;MGH modified to add in note text and appointment data
"RTN","SDEC07A",176,0)
 I SDACT=1 D
"RTN","SDEC07A",177,0)
 .S SDTXT(1)=$P($G(^SDEC(409.831,+SDECRES,0)),U,1)_" Consult Appt. on "_SAVESTRT
"RTN","SDEC07A",178,0)
 .I SDECNOTE'="" S SDTXT(2)=SDECNOTE
"RTN","SDEC07A",179,0)
 I SDACT=2 D
"RTN","SDEC07A",180,0)
 .S SDECTYP=$G(SDECTYP)
"RTN","SDEC07A",181,0)
 .S SDTXT="CANCELLED BY "_$S(SDECTYP="C":"THE CLINIC",1:"THE PATIENT") S SDTXT(1)=SDTXT,SDTXT=""
"RTN","SDEC07A",182,0)
 .;I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC07A",183,0)
 .I SDECNOTE'="" S SDTXT(2)=SDECNOTE
"RTN","SDEC07A",184,0)
 I $D(SDTXT) D
"RTN","SDEC07A",185,0)
 .D WP^DIE(123.02,SDIEN(1)_","_SDRIEN_",",5,"","SDTXT","SDERR")   ;ICR 6185
"RTN","SDEC07A",186,0)
 ;set CPRS status field
"RTN","SDEC07A",187,0)
 S SDOS=$O(^ORD(100.01,"B","SCHEDULED",0))
"RTN","SDEC07A",188,0)
 S SDOA=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDEC07A",189,0)
 I SDOS'="" D
"RTN","SDEC07A",190,0)
 .K SDFDA
"RTN","SDEC07A",191,0)
 .S SDFDA(123,SDRIEN_",",8)=$S(SDACT=1:SDOS,1:SDOA)
"RTN","SDEC07A",192,0)
 .D UPDATE^DIE("","SDFDA")                          ;ICR 6185
"RTN","SDEC07A",193,0)
 Q
"RTN","SDEC07A",194,0)
 ;
"RTN","SDEC07A",195,0)
EWL(WLIEN,APPDT,SDCL,SVCP,SVCPR,NOTE,SDAPPTYP) ;update SD WAIT LIST at appointment add
"RTN","SDEC07A",196,0)
 ;INPUT:
"RTN","SDEC07A",197,0)
 ;  WLIEN = Wait List ID pointer to SD WAIT LIST file 409.3
"RTN","SDEC07A",198,0)
 ;  APPDT = Appointment date/time (Scheduled Date of appt) in fm format
"RTN","SDEC07A",199,0)
 ;  SDCL  = Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC07A",200,0)
 ;  SVCP  = Service Connected Percentage numeric 0-100
"RTN","SDEC07A",201,0)
 ;  SVCPR = Service Connected Priority  0:NO  1:YES
"RTN","SDEC07A",202,0)
 ;  NOTE  = Comment only 1st 60 characters are used
"RTN","SDEC07A",203,0)
 ;  SDAPPTYP - (optional) Appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC07A",204,0)
 ;
"RTN","SDEC07A",205,0)
 ;all input must be verified by calling routine
"RTN","SDEC07A",206,0)
 N SDDIV,SDFDA,SDSN
"RTN","SDEC07A",207,0)
 S:+$G(SDAPPTYP) SDFDA(409.3,WLIEN_",",8.7)=SDAPPTYP
"RTN","SDEC07A",208,0)
 S SDFDA(409.3,WLIEN_",",13)=APPDT                     ;SCHEDULED DATE OF APPT       = APPDT  (SDECSTART)
"RTN","SDEC07A",209,0)
 S SDFDA(409.3,WLIEN_",",13.1)=$P($$NOW^XLFDT,".",1)   ;DATE APPT. MADE              = TODAY
"RTN","SDEC07A",210,0)
 S SDFDA(409.3,WLIEN_",",13.2)=SDCL                    ;APPT CLINIC                  = SDCL   (SDECSCD)
"RTN","SDEC07A",211,0)
 S SDFDA(409.3,WLIEN_",",13.3)=$P($G(^SC(SDCL,0)),U,4) ;APPT INSTITUTION             = Get from 44 using SDCL
"RTN","SDEC07A",212,0)
 S SDFDA(409.3,WLIEN_",",13.4)=$P($G(^SC(SDCL,0)),U,7) ;APPT STOP CODE               = Get from 44 using SDCL
"RTN","SDEC07A",213,0)
 S SDDIV=$P($G(^SC(SDCL,0)),U,15)
"RTN","SDEC07A",214,0)
 S SDSN=$S(SDDIV'="":$P($G(^DG(40.8,SDDIV,0)),U,2),1:"")
"RTN","SDEC07A",215,0)
 S SDFDA(409.3,WLIEN_",",13.6)=SDSN                    ;APPT STATION NUMBER
"RTN","SDEC07A",216,0)
 S SDFDA(409.3,WLIEN_",",13.7)=DUZ                     ;APPT CLERK                   = Current User
"RTN","SDEC07A",217,0)
 S SDFDA(409.3,WLIEN_",",13.8)="R"                     ;APPT STATUS                  = R:Scheduled/Kept
"RTN","SDEC07A",218,0)
 S:SVCP'="" SDFDA(409.3,WLIEN_",",14)=SVCP                      ;SERVICE CONNECTED PERCENTAGE = SVCP   (SDSVCP)
"RTN","SDEC07A",219,0)
 S:SVCPR'="" SDFDA(409.3,WLIEN_",",15)=SVCPR                     ;SERVICE CONNECTED PRIORITY   = SVCPR  (SDSVCPR)
"RTN","SDEC07A",220,0)
 S:$G(NOTE)'="" SDFDA(409.3,WLIEN_",",25)=NOTE
"RTN","SDEC07A",221,0)
 S SDFDA(409.3,WLIEN_",",27)="U"                       ;EWL ENROLLEE STATUS          = U:UNDETERMINED
"RTN","SDEC07A",222,0)
 S SDFDA(409.3,WLIEN_",",27.2)=0                       ;EWL ENROLLEE DATABASE FILE   = 0:NONE
"RTN","SDEC07A",223,0)
 S SDFDA(409.3,WLIEN_",",28)=DUZ                       ;EDITING USER                 = Current User
"RTN","SDEC07A",224,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDEC07A",225,0)
 Q
"RTN","SDEC07A",226,0)
 ;
"RTN","SDEC07A",227,0)
ERROR ;
"RTN","SDEC07A",228,0)
 D ERR1("Error")
"RTN","SDEC07A",229,0)
 Q
"RTN","SDEC07A",230,0)
 ;
"RTN","SDEC07A",231,0)
ERR1(SDECERR) ;Error processing
"RTN","SDEC07A",232,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",233,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC07A",234,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",235,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07A",236,0)
 Q
"RTN","SDEC07B")
0^10^B38090532^n/a
"RTN","SDEC07B",1,0)
SDEC07B ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC07B",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC07B",3,0)
 ;
"RTN","SDEC07B",4,0)
 Q
"RTN","SDEC07B",5,0)
 ;
"RTN","SDEC07B",6,0)
MAKE(BSDR) ;PEP; call to store appt made
"RTN","SDEC07B",7,0)
 ;
"RTN","SDEC07B",8,0)
 ; Make call using: S ERR=$$MAKE^SDEC07B(.ARRAY)
"RTN","SDEC07B",9,0)
 ;
"RTN","SDEC07B",10,0)
 ; Input Array -
"RTN","SDEC07B",11,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDEC07B",12,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDEC07B",13,0)
 ; BSDR("TYP") = C&P if appointment type is C&P, 3 for scheduled appts, 4 for walkins
"RTN","SDEC07B",14,0)
 ; BSDR("COL") = collateral if appointment type is COLLATERAL OF VET.
"RTN","SDEC07B",15,0)
 ; BSDR("APT") = Appointment type pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC07B",16,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDEC07B",17,0)
 ; BSDR("LEN") = appointment length in minutes (5-120)
"RTN","SDEC07B",18,0)
 ; BSDR("OI")  = reason for appt - up to 150 characters
"RTN","SDEC07B",19,0)
 ; BSDR("USR") = user who made appt
"RTN","SDEC07B",20,0)
 ; BSDR("RES") = resource pointer to SDEC RESOURCE ^SDEC(409.831,
"RTN","SDEC07B",21,0)
 ; BSDR("MTR") = MTRC flag (multiple appointments) 0=False (default)  1=True
"RTN","SDEC07B",22,0)
 ; BSDR("DDT") = Desired Date of Appt in fm format
"RTN","SDEC07B",23,0)
 ; BSDR("REQ") = Requested By - valid values are 1=PROVIDER  2=PATIENT or ""
"RTN","SDEC07B",24,0)
 ; BSDR("LAB") = LAB date/time in fm format
"RTN","SDEC07B",25,0)
 ; BSDR("EKG") = EKG date/time in fm format
"RTN","SDEC07B",26,0)
 ; BSDR("XRA") = XRAY date/time in fm format
"RTN","SDEC07B",27,0)
 ; BSDR("CON") = Consult link - pointer to file 123
"RTN","SDEC07B",28,0)
 ; BSDR("OVB") = overbook flag - 1=yes, this is an overbook
"RTN","SDEC07B",29,0)
 ;
"RTN","SDEC07B",30,0)
 ;Output: error status and message
"RTN","SDEC07B",31,0)
 ;   = 0 or null:  everything okay
"RTN","SDEC07B",32,0)
 ;   = 1^message:  error and reason
"RTN","SDEC07B",33,0)
 ;
"RTN","SDEC07B",34,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDEC07B",35,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDEC07B",36,0)
 I "1234"'[$G(BSDR("TYP")) Q 1_U_"Appt Type error: "_$G(BSDR("TYP"))
"RTN","SDEC07B",37,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDEC07B",38,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDEC07B",39,0)
 ;
"RTN","SDEC07B",40,0)
 I ($G(BSDR("LEN"))<5)!($G(BSDR("LEN"))>240) Q 1_U_"Appt Length error: "_$G(BSDR("LEN"))
"RTN","SDEC07B",41,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Made Appt Error: "_$G(BSDR("USR"))
"RTN","SDEC07B",42,0)
 I $D(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0)),$P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)'="C",$P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)'="PC" Q 1_U_"Patient "_$$GET1^DIQ(2,BSDR("PAT")_",",.01)_" already has appt at "_$$FMTE^XLFDT(BSDR("ADT"))
"RTN","SDEC07B",43,0)
 ;
"RTN","SDEC07B",44,0)
 N DIC,DA,Y,X,DD,DO,DLAYGO
"RTN","SDEC07B",45,0)
 N SDECERR
"RTN","SDEC07B",46,0)
 N SDFU,SDNA,SDRET,SDSRT
"RTN","SDEC07B",47,0)
 ;
"RTN","SDEC07B",48,0)
 S BSDR("APT")=+$G(BSDR("APT"))
"RTN","SDEC07B",49,0)
 S BSDR("COL")=+$G(BSDR("COL"))
"RTN","SDEC07B",50,0)
 ;get scheduling request type AND next ava. appt. indicator
"RTN","SDEC07B",51,0)
 S SDSRT=$$SDSRT(BSDR("TYP"),BSDR("MTR"),BSDR("DDT"),BSDR("REQ"))
"RTN","SDEC07B",52,0)
 ; next ava.appt. indicator field 26
"RTN","SDEC07B",53,0)
 S SDNA=$P(SDSRT,U,2)
"RTN","SDEC07B",54,0)
 ; scheduling request type field 25
"RTN","SDEC07B",55,0)
 S SDSRT=$P(SDSRT,U,1)
"RTN","SDEC07B",56,0)
 ;determine if Follow-up visit field 28
"RTN","SDEC07B",57,0)
 S SDRET=""
"RTN","SDEC07B",58,0)
 D PCSTGET^SDEC(.SDRET,BSDR("PAT"),BSDR("CLN"))
"RTN","SDEC07B",59,0)
 S SDFU=$P($P(@SDRET@(1),U,2),$C(30,31),1)
"RTN","SDEC07B",60,0)
 S SDFU=$S(SDFU="YES":1,1:0)
"RTN","SDEC07B",61,0)
 K @SDRET
"RTN","SDEC07B",62,0)
 ;store
"RTN","SDEC07B",63,0)
 I $D(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0)),(($P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)="C")!($P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)="PC")) D
"RTN","SDEC07B",64,0)
 . ; "un-cancel" existing appt in file 2
"RTN","SDEC07B",65,0)
 . N SDECFDA,SDECIENS,SDECMSG
"RTN","SDEC07B",66,0)
 . S SDECIENS=BSDR("ADT")_","_BSDR("PAT")_","
"RTN","SDEC07B",67,0)
 . S SDECFDA(2.98,SDECIENS,".01")=BSDR("CLN")
"RTN","SDEC07B",68,0)
 . S SDECFDA(2.98,SDECIENS,"3")=$S($G(^DPT(+$G(BSDR("PAT")),.1))'="":"I",1:"")
"RTN","SDEC07B",69,0)
 . S SDECFDA(2.98,SDECIENS,"5")=BSDR("LAB")    ;lab date/time
"RTN","SDEC07B",70,0)
 . S SDECFDA(2.98,SDECIENS,"6")=BSDR("XRA")    ;xray date/time
"RTN","SDEC07B",71,0)
 . S SDECFDA(2.98,SDECIENS,"7")=BSDR("EKG")    ;ekg date/time
"RTN","SDEC07B",72,0)
 . S SDECFDA(2.98,SDECIENS,"9")=BSDR("TYP")
"RTN","SDEC07B",73,0)
 . S:+BSDR("APT") SDECFDA(2.98,SDECIENS,"9.5")=BSDR("APT")
"RTN","SDEC07B",74,0)
 . S:+BSDR("COL") SDECFDA(2.98,SDECIENS,"13")=BSDR("COL")
"RTN","SDEC07B",75,0)
 . S SDECFDA(2.98,SDECIENS,"14")=""
"RTN","SDEC07B",76,0)
 . S SDECFDA(2.98,SDECIENS,"15")=""
"RTN","SDEC07B",77,0)
 . S SDECFDA(2.98,SDECIENS,"16")=""
"RTN","SDEC07B",78,0)
 . S SDECFDA(2.98,SDECIENS,"19")=DUZ           ;data entry clerk
"RTN","SDEC07B",79,0)
 . S SDECFDA(2.98,SDECIENS,"20")=$$NOW^XLFDT
"RTN","SDEC07B",80,0)
 . S SDECFDA(2.98,SDECIENS,"25")=SDSRT         ;scheduling request type
"RTN","SDEC07B",81,0)
 . S SDECFDA(2.98,SDECIENS,"26")=SDNA          ;next ava. appt. indicator
"RTN","SDEC07B",82,0)
 . S SDECFDA(2.98,SDECIENS,"27")=BSDR("DDT")   ;desired date of appt
"RTN","SDEC07B",83,0)
 . S SDECFDA(2.98,SDECIENS,"28")=SDFU          ;follow-up visit  yes/no
"RTN","SDEC07B",84,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC07B",85,0)
 . N SDECTEMP S SDECTEMP=$G(SDECMSG)
"RTN","SDEC07B",86,0)
 E  D  I $G(SDECERR(1)) Q 1_U_"FileMan add to DPT error: Patient="_BSDR("PAT")_" Appt="_BSDR("ADT")
"RTN","SDEC07B",87,0)
 . ; add appt to file 2
"RTN","SDEC07B",88,0)
 . N SDECFDA,SDECIENS,SDECMSG
"RTN","SDEC07B",89,0)
 . S SDECIENS="?+2,"_BSDR("PAT")_","
"RTN","SDEC07B",90,0)
 . S SDECIENS(2)=BSDR("ADT")
"RTN","SDEC07B",91,0)
 . S SDECFDA(2.98,SDECIENS,.01)=BSDR("CLN")
"RTN","SDEC07B",92,0)
 . S SDECFDA(2.98,SDECIENS,"3")=$S($G(^DPT(+$G(BSDR("PAT")),.1))'="":"I",1:"")
"RTN","SDEC07B",93,0)
 . S SDECFDA(2.98,SDECIENS,"5")=BSDR("LAB")    ;lab date/time
"RTN","SDEC07B",94,0)
 . S SDECFDA(2.98,SDECIENS,"9")=BSDR("TYP")
"RTN","SDEC07B",95,0)
 . S:+BSDR("APT") SDECFDA(2.98,SDECIENS,"9.5")=BSDR("APT")
"RTN","SDEC07B",96,0)
 . S:+BSDR("COL") SDECFDA(2.98,SDECIENS,"13")=BSDR("COL")
"RTN","SDEC07B",97,0)
 . S SDECFDA(2.98,SDECIENS,"14")=""
"RTN","SDEC07B",98,0)
 . S SDECFDA(2.98,SDECIENS,"15")=""
"RTN","SDEC07B",99,0)
 . S SDECFDA(2.98,SDECIENS,"16")=""
"RTN","SDEC07B",100,0)
 . S SDECFDA(2.98,SDECIENS,"19")=DUZ           ;data entry clerk
"RTN","SDEC07B",101,0)
 . S SDECFDA(2.98,SDECIENS,"20")=$$NOW^XLFDT
"RTN","SDEC07B",102,0)
 . S SDECFDA(2.98,SDECIENS,"25")=SDSRT         ;scheduling request type
"RTN","SDEC07B",103,0)
 . S SDECFDA(2.98,SDECIENS,"26")=SDNA          ;next ava. appt. indicator
"RTN","SDEC07B",104,0)
 . S SDECFDA(2.98,SDECIENS,"27")=BSDR("DDT")   ;desired date of appt
"RTN","SDEC07B",105,0)
 . S SDECFDA(2.98,SDECIENS,"28")=SDFU          ;follow-up visit  yes/no
"RTN","SDEC07B",106,0)
 . D UPDATE^DIE("","SDECFDA","SDECIENS","SDECERR(1)")
"RTN","SDEC07B",107,0)
 ;
"RTN","SDEC07B",108,0)
 ; add appt to file 44
"RTN","SDEC07B",109,0)
 K DIC,DA,X,Y,DLAYGO,DD,DO
"RTN","SDEC07B",110,0)
 I '$D(^SC(BSDR("CLN"),"S",0)) S ^SC(BSDR("CLN"),"S",0)="^44.001DA^^"
"RTN","SDEC07B",111,0)
 I '$D(^SC(BSDR("CLN"),"S",BSDR("ADT"),0)) D  I Y<1 Q 1_U_"Error adding date to file 44: Clinic="_BSDR("CLN")_" Date="_BSDR("ADT")
"RTN","SDEC07B",112,0)
 . S DIC="^SC("_BSDR("CLN")_",""S"",",DA(1)=BSDR("CLN"),(X,DINUM)=BSDR("ADT")
"RTN","SDEC07B",113,0)
 . S DIC("P")="44.001DA",DIC(0)="L",DLAYGO=44.001
"RTN","SDEC07B",114,0)
 . S Y=1 I '$D(@(DIC_X_")")) D FILE^DICN
"RTN","SDEC07B",115,0)
 ;
"RTN","SDEC07B",116,0)
 K DIC,DA,X,Y,DLAYGO,DD,DO,DINUM
"RTN","SDEC07B",117,0)
 S DIC="^SC("_BSDR("CLN")_",""S"","_BSDR("ADT")_",1,"
"RTN","SDEC07B",118,0)
 S DA(2)=BSDR("CLN"),DA(1)=BSDR("ADT"),X=BSDR("PAT")
"RTN","SDEC07B",119,0)
 S DIC("DR")="1////"_BSDR("LEN")_";3///"_$E($G(BSDR("OI")),1,150)_";7////"_BSDR("USR")_";8////"_$$NOW^XLFDT_$S(+$G(BSDR("OVB")):";9////O",1:"")
"RTN","SDEC07B",120,0)
 S DIC("P")="44.003PA",DIC(0)="L",DLAYGO=44.003
"RTN","SDEC07B",121,0)
 D FILE^DICN
"RTN","SDEC07B",122,0)
 ;add consult link
"RTN","SDEC07B",123,0)
 I $G(BSDR("CON")) D
"RTN","SDEC07B",124,0)
 .N SDFDA,SDIEN
"RTN","SDEC07B",125,0)
 .S SDIEN=+Y
"RTN","SDEC07B",126,0)
 .Q:SDIEN=-1
"RTN","SDEC07B",127,0)
 .S SDFDA(44.003,SDIEN_","_BSDR("ADT")_","_BSDR("CLN")_",",688)=BSDR("CON")
"RTN","SDEC07B",128,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC07B",129,0)
 ;
"RTN","SDEC07B",130,0)
 Q 0
"RTN","SDEC07B",131,0)
 ; call event driver
"RTN","SDEC07B",132,0)
 NEW DFN,SDT,SDCL,SDDA,SDMODE
"RTN","SDEC07B",133,0)
 S DFN=BSDR("PAT"),SDT=BSDR("ADT"),SDCL=BSDR("CLN"),SDMODE=2
"RTN","SDEC07B",134,0)
 S SDDA=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDEC07B",135,0)
 D MAKE^SDAMEVT(DFN,SDT,SDCL,SDDA,SDMODE)
"RTN","SDEC07B",136,0)
 Q 0
"RTN","SDEC07B",137,0)
 ;
"RTN","SDEC07B",138,0)
SDSRT(TYP,MTR,DDT,REQ) ;get SCHEDULING REQUEST TYPE and NEXT AVA.APPT. INDICATOR
"RTN","SDEC07B",139,0)
 ;INPUT:
"RTN","SDEC07B",140,0)
 ; TYP =  3 for scheduled appts, 4 for walkins
"RTN","SDEC07B",141,0)
 ; MTR = MTRC flag (multiple appointments) 0=False (default)  1=True
"RTN","SDEC07B",142,0)
 ; DDT = Desired Date of Appt in fm format
"RTN","SDEC07B",143,0)
 ; REQ = Requested By - valid values are 1=PROVIDER  2=PATIENT or ""
"RTN","SDEC07B",144,0)
 ;RETURN: 2 ^ pieces:
"RTN","SDEC07B",145,0)
 ;     1 - SCHEDULING REQUEST TYPE  internal format - valid values:
"RTN","SDEC07B",146,0)
 ;          N:'NEXT AVAILABLE' APPT.
"RTN","SDEC07B",147,0)
 ;          C:OTHER THAN 'NEXT AVA.' (CLINICIAN REQ.)
"RTN","SDEC07B",148,0)
 ;          P:OTHER THAN 'NEXT AVA.' (PATIENT REQ.)
"RTN","SDEC07B",149,0)
 ;          W:WALKIN APPT.
"RTN","SDEC07B",150,0)
 ;          M:MULTIPLE APPT. BOOKING
"RTN","SDEC07B",151,0)
 ;          A:AUTO REBOOK
"RTN","SDEC07B",152,0)
 ;          O:OTHER THAN 'NEXT AVA.' APPT.
"RTN","SDEC07B",153,0)
 ;     2 - NEXT AVA. APPT. INDICATOR  internal format - valid values:
"RTN","SDEC07B",154,0)
 ;          N:'NEXT AVAILABLE' APPT.
"RTN","SDEC07B",155,0)
 ;          C:OTHER THAN 'NEXT AVA.' (CLINICIAN REQ.)
"RTN","SDEC07B",156,0)
 ;          P:OTHER THAN 'NEXT AVA.' (PATIENT REQ.)
"RTN","SDEC07B",157,0)
 ;          W:WALKIN APPT.
"RTN","SDEC07B",158,0)
 ;          M:MULTIPLE APPT. BOOKING
"RTN","SDEC07B",159,0)
 ;          A:AUTO REBOOK
"RTN","SDEC07B",160,0)
 ;          O:OTHER THAN 'NEXT AVA.' APPT.
"RTN","SDEC07B",161,0)
 ;
"RTN","SDEC07B",162,0)
 N RET
"RTN","SDEC07B",163,0)
 S RET=""
"RTN","SDEC07B",164,0)
 ;1. If user creates a walkin appointment would be W:WALKIN APPT, 0:NOT INDICATED TO BE A 'NEXT AVA.' APPT
"RTN","SDEC07B",165,0)
 I TYP=4 Q "W^0"
"RTN","SDEC07B",166,0)
 ;2. If user creates an rm request with MTRC flagged
"RTN","SDEC07B",167,0)
 ;   AND desired date is 'today'
"RTN","SDEC07B",168,0)
 ; would be M:MULTIPLE APPT. BOOKING, 3:'NEXT AVA.' APPT. INDICATED BY USER & CALCULATION
"RTN","SDEC07B",169,0)
 I +MTR,$P($$NOW^XLFDT,".",1)=DDT Q "M^3"
"RTN","SDEC07B",170,0)
 ;3. If user creates an rm request with MTRC flagged
"RTN","SDEC07B",171,0)
 ;   AND desired date is not 'today'
"RTN","SDEC07B",172,0)
 ; would be M:MULTIPLE APPT. BOOKING, 0:'NOT INDICATED TO BE A 'NEXT AVA.' APPT
"RTN","SDEC07B",173,0)
 I +MTR,$P($$NOW^XLFDT,".",1)'=DDT Q "M^0"
"RTN","SDEC07B",174,0)
 ;4. If the user enters a desired date for the clinic stop that is today
"RTN","SDEC07B",175,0)
 ;  then N:'NEXT AVAILABLE' APPT., 1:'NEXT AVA.' APPT. INDICATED BY USER
"RTN","SDEC07B",176,0)
 I $P($$NOW^XLFDT(),".",1)=DDT Q "N^1"
"RTN","SDEC07B",177,0)
 ;5. If the user enters a desired date not today
"RTN","SDEC07B",178,0)
 ;   AND the request is by patient
"RTN","SDEC07B",179,0)
 ; then P:OTHER THAN 'NEXT AVA.' (PATIENT REQ.); 0:NOT INDICATED TO BE A 'NEXT AVA.' APPT.
"RTN","SDEC07B",180,0)
 I $P($$NOW^XLFDT(),".",1)'=DDT,REQ=2 Q "P^0"
"RTN","SDEC07B",181,0)
 ;6. If the user enters a desired date not today
"RTN","SDEC07B",182,0)
 ;   AND the request is by provider
"RTN","SDEC07B",183,0)
 ; then C:OTHER THAN 'NEXT AVA.' (CLINICIAN REQ.); 0:NOT INDICATED TO BE A 'NEXT AVA.' APPT.
"RTN","SDEC07B",184,0)
 I $P($$NOW^XLFDT(),".",1)'=DDT,REQ=1 Q "C^0"
"RTN","SDEC07B",185,0)
 Q RET
"RTN","SDEC08")
0^11^B196754600^n/a
"RTN","SDEC08",1,0)
SDEC08 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC08",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC08",3,0)
 ;
"RTN","SDEC08",4,0)
 Q
"RTN","SDEC08",5,0)
 ;
"RTN","SDEC08",6,0)
APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER) ;Cancels appointment
"RTN","SDEC08",7,0)
 ;APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER)  external parameter tag is in SDEC
"RTN","SDEC08",8,0)
 ;SDECAPTID - (required) pointer to SDEC APPOINTMENT file
"RTN","SDEC08",9,0)
 ;SDECTYP   - (required) appointment Status valid values:
"RTN","SDEC08",10,0)
 ;                          C=CANCELLED BY CLINIC
"RTN","SDEC08",11,0)
 ;                         PC=CANCELLED BY PATIENT
"RTN","SDEC08",12,0)
 ;SDECCR    - (optional) pointer to CANCELLATION REASON File (409.2)
"RTN","SDEC08",13,0)
 ;SDECNOT   - (optional) text representing user note
"RTN","SDEC08",14,0)
 ;SDECDATE   - (optional) Cancel Date/Time in external format; defaults to NOW
"RTN","SDEC08",15,0)
 ;SDUSER     - (optional) User that cancelled appt; defaults to current user
"RTN","SDEC08",16,0)
 ;Returns error code in recordset field ERRORID
"RTN","SDEC08",17,0)
 ;
"RTN","SDEC08",18,0)
 N SDECNOD,SDECPATID,SDECSTART,DIK,DA,SDECID,SDECI,SDECZ,SDECERR
"RTN","SDEC08",19,0)
 N SDECLOC,SDECLEN,SDECSCIEN,SDECSCIEN1
"RTN","SDEC08",20,0)
 N SDECNOEV,SDECSC1,SDRET
"RTN","SDEC08",21,0)
 N %DT,X,Y
"RTN","SDEC08",22,0)
 S SDECNOEV=1 ;Don't execute SDEC CANCEL APPOINTMENT protocol
"RTN","SDEC08",23,0)
 S SDECSCIEN1=0
"RTN","SDEC08",24,0)
 ;
"RTN","SDEC08",25,0)
 S SDECI=0
"RTN","SDEC08",26,0)
 S SDECY="^TMP(""SDEC08"","_$J_",""APPDEL"")"
"RTN","SDEC08",27,0)
 K @SDECY
"RTN","SDEC08",28,0)
 S @SDECY@(SDECI)="T00020ERRORID"_$C(30)
"RTN","SDEC08",29,0)
 S SDECI=SDECI+1
"RTN","SDEC08",30,0)
 ;validate SDEC APPOINTMENT pointer (required)
"RTN","SDEC08",31,0)
 I '$D(^SDEC(409.84,+$G(SDECAPTID),0)) D ERR(SDECI,"SDEC08: Invalid Appointment ID") Q
"RTN","SDEC08",32,0)
 ;validate appointment status type (required)
"RTN","SDEC08",33,0)
 S SDECTYP=$G(SDECTYP)
"RTN","SDEC08",34,0)
 S SDECTYP=$S(SDECTYP="C":"C",SDECTYP="CANCELLED BY CLINIC":"C",SDECTYP="PC":"PC",SDECTYP="CANCELLED BY PATIENT":"PC",1:"")
"RTN","SDEC08",35,0)
 I SDECTYP="" D ERR(SDECI,"SDEC08: Invalid status type") Q
"RTN","SDEC08",36,0)
 ;validate CANCELLATION REASON pointer (optional)
"RTN","SDEC08",37,0)
 S SDECCR=$G(SDECCR)
"RTN","SDEC08",38,0)
 I SDECCR'="" I '$D(^SD(409.2,+SDECCR,0)) S SDECCR=$O(^SD(409.2,"B","SDECCR",0))
"RTN","SDEC08",39,0)
 ;validate cancel date/time
"RTN","SDEC08",40,0)
 S SDECDATE=$G(SDECDATE)
"RTN","SDEC08",41,0)
 I SDECDATE'="" S %DT="T" S X=SDECDATE D ^%DT S SDECDATE=Y I Y=-1 S SDECDATE=""
"RTN","SDEC08",42,0)
 I $G(SDECDATE)="" S SDECDATE=$$NOW^XLFDT
"RTN","SDEC08",43,0)
 ;validate user
"RTN","SDEC08",44,0)
 S SDUSER=$G(SDUSER)
"RTN","SDEC08",45,0)
 I SDUSER'="" I '$D(^VA(200,+SDUSER,0)) S SDUSER=""
"RTN","SDEC08",46,0)
 I SDUSER="" S SDUSER=DUZ
"RTN","SDEC08",47,0)
 ;
"RTN","SDEC08",48,0)
 TSTART
"RTN","SDEC08",49,0)
 ;
"RTN","SDEC08",50,0)
 ;Delete APPOINTMENT entries
"RTN","SDEC08",51,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC08",52,0)
 S SDECPATID=$P(SDECNOD,U,5)
"RTN","SDEC08",53,0)
 S SDECSTART=$P(SDECNOD,U)
"RTN","SDEC08",54,0)
 ;
"RTN","SDEC08",55,0)
 ;Lock SDEC node
"RTN","SDEC08",56,0)
 L +^SDEC(409.84,SDECPATID):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") TROLLBACK  Q
"RTN","SDEC08",57,0)
 ;cancel check-in if walkin
"RTN","SDEC08",58,0)
 I $P(SDECNOD,U,13)="y" D
"RTN","SDEC08",59,0)
 .S SDRET=""
"RTN","SDEC08",60,0)
 .D CHECKIN^SDEC25(.SDRET,SDECAPTID,"@")
"RTN","SDEC08",61,0)
 ;cancel SDEC APPOINTMENT record
"RTN","SDEC08",62,0)
 D SDECCAN(SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER,1)
"RTN","SDEC08",63,0)
 ;
"RTN","SDEC08",64,0)
 S SDECSC1=$P(SDECNOD,U,7) ;RESOURCEID
"RTN","SDEC08",65,0)
 I SDECSC1]"",$D(^SDEC(409.831,SDECSC1,0)) D  I +$G(SDECZ) S SDECERR=+SDECZ D ERR(SDECI,$P(SDECZ,U,2)) Q
"RTN","SDEC08",66,0)
 . S SDECNOD=^SDEC(409.831,SDECSC1,0)
"RTN","SDEC08",67,0)
 . S SDECLOC=$P(SDECNOD,U,4) ;HOSPITAL LOCATION
"RTN","SDEC08",68,0)
 . Q:'+SDECLOC
"RTN","SDEC08",69,0)
 . S SDECSCIEN=$$SCIEN^SDECU2(SDECPATID,SDECLOC,SDECSTART) I SDECSCIEN="" D  I 'SDECZ Q  ;Q:SDECZ
"RTN","SDEC08",70,0)
 . . S SDECERR="SDEC08: Unable to find associated appointment for this patient. "
"RTN","SDEC08",71,0)
 . . S SDECZ=1
"RTN","SDEC08",72,0)
 . . I '$D(^SDEC(409.831,SDECSC1,20)) S SDECZ=0 Q
"RTN","SDEC08",73,0)
 . . N SDEC1
"RTN","SDEC08",74,0)
 . . S SDEC1=0
"RTN","SDEC08",75,0)
 . . F  S SDEC1=$O(^SDEC(409.831,SDECSC1,20,SDEC1)) Q:'+SDEC1  Q:SDECZ=0  D
"RTN","SDEC08",76,0)
 . . . Q:'$D(^SDEC(409.831,SDECSC1,20,SDEC1,0))
"RTN","SDEC08",77,0)
 . . . S SDECLOC=$P(^SDEC(409.831,SDECSC1,20,SDEC1,0),U)
"RTN","SDEC08",78,0)
 . . . S SDECSCIEN=$$SCIEN^SDECU2(SDECPATID,SDECLOC,SDECSTART) I +SDECSCIEN S SDECZ=0 Q
"RTN","SDEC08",79,0)
 . S SDECERR="SDEC08: CANCEL^SDEC08 Returned "
"RTN","SDEC08",80,0)
 . I SDECLOC']"" S SDECZ="0^Unable to find associated appointment for this patient." Q
"RTN","SDEC08",81,0)
 . I '$D(^SC(SDECLOC,0)) S SDECZ="0^Unable to find associated appointment for this patient." Q
"RTN","SDEC08",82,0)
 . S SDECNOD=$G(^SC(SDECLOC,"S",SDECSTART,1,+SDECSCIEN,0))
"RTN","SDEC08",83,0)
 . I SDECNOD="" S SDECZ="0^Unable to find associated appointment for this patient." Q
"RTN","SDEC08",84,0)
 . S SDECLEN=$P(SDECNOD,U,2)
"RTN","SDEC08",85,0)
 . D APCAN(.SDECZ,SDECLOC,SDECPATID,SDECSTART,SDECAPTID,SDECLEN)
"RTN","SDEC08",86,0)
 . Q:+$G(SDECZ)
"RTN","SDEC08",87,0)
 . D AVUPDT(SDECLOC,SDECSTART,SDECLEN)
"RTN","SDEC08",88,0)
 . D AR433D^SDECAR2(SDECAPTID)
"RTN","SDEC08",89,0)
 . ;L
"RTN","SDEC08",90,0)
 ;
"RTN","SDEC08",91,0)
 TCOMMIT
"RTN","SDEC08",92,0)
 L -^SDEC(409.84,SDECPATID)
"RTN","SDEC08",93,0)
 S SDECI=SDECI+1
"RTN","SDEC08",94,0)
 S @SDECY@(SDECI)=""_$C(30)
"RTN","SDEC08",95,0)
 S SDECI=SDECI+1
"RTN","SDEC08",96,0)
 S @SDECY@(SDECI)=$C(31)
"RTN","SDEC08",97,0)
 Q
"RTN","SDEC08",98,0)
 ;
"RTN","SDEC08",99,0)
AVUPDT(SDECSCD,SDECSTART,SDECLEN) ;Update Clinic availability
"RTN","SDEC08",100,0)
 ;See SDCNP0
"RTN","SDEC08",101,0)
 N HSI,I,S,SB,SD,SDDIF,SI,SL,SS,ST,STARTDAY,STR,X,Y
"RTN","SDEC08",102,0)
 S (SD,S)=SDECSTART
"RTN","SDEC08",103,0)
 S I=SDECSCD
"RTN","SDEC08",104,0)
 Q:'$D(^SC(I,"ST",SD\1,1))
"RTN","SDEC08",105,0)
 S SL=^SC(I,"SL"),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2)
"RTN","SDEC08",106,0)
 S SL=SDECLEN
"RTN","SDEC08",107,0)
 S S=^SC(I,"ST",SD\1,1),Y=SD#1-SB*100,ST=Y#1*SI\.6+(Y\1*SI),SS=SL*HSI/60
"RTN","SDEC08",108,0)
 I Y'<1 F I=ST+ST:SDDIF S Y=$E(STR,$F(STR,$E(S,I+1))) Q:Y=""  S S=$E(S,1,I)_Y_$E(S,I+2,999),SS=SS-1 Q:SS'>0
"RTN","SDEC08",109,0)
 S ^SC(SDECSCD,"ST",SD\1,1)=S
"RTN","SDEC08",110,0)
 Q
"RTN","SDEC08",111,0)
 ;
"RTN","SDEC08",112,0)
APCAN(SDECZ,SDECLOC,SDECDFN,SDECSD,SDECAPTID,SDECLEN) ;
"RTN","SDEC08",113,0)
 ;Cancel appointment for patient SDECDFN in clinic SDECSC1
"RTN","SDEC08",114,0)
 ;at time SDECSD
"RTN","SDEC08",115,0)
 N SDECPNOD,SDECC,DA,DIE,DPTST,DR,%H
"RTN","SDEC08",116,0)
 ;save data into SDEC APPOINTMENT in case of uncancel (status & appt length)
"RTN","SDEC08",117,0)
 S SDECPNOD=^DPT(SDECPATID,"S",SDECSD,0)
"RTN","SDEC08",118,0)
 S DPTST=$P(SDECPNOD,U,2)
"RTN","SDEC08",119,0)
 S DIE=409.84
"RTN","SDEC08",120,0)
 S DA=SDECAPTID
"RTN","SDEC08",121,0)
 S DR=".17///"_DPTST_";"_".18///"_SDECLEN
"RTN","SDEC08",122,0)
 D ^DIE
"RTN","SDEC08",123,0)
 S SDECC("PAT")=SDECDFN
"RTN","SDEC08",124,0)
 S SDECC("CLN")=SDECLOC
"RTN","SDEC08",125,0)
 S SDECC("TYP")=SDECTYP
"RTN","SDEC08",126,0)
 S SDECC("ADT")=SDECSD
"RTN","SDEC08",127,0)
 S %H=$H D YMD^%DTC
"RTN","SDEC08",128,0)
 S SDECC("CDT")=SDECDATE   ;X+%
"RTN","SDEC08",129,0)
 S SDECC("NOT")=SDECNOT
"RTN","SDEC08",130,0)
 S:+SDECCR SDECC("CR")=SDECCR
"RTN","SDEC08",131,0)
 S SDECC("USR")=SDUSER
"RTN","SDEC08",132,0)
 ;
"RTN","SDEC08",133,0)
 S SDECZ=$$CANCEL(.SDECC)
"RTN","SDEC08",134,0)
 Q
"RTN","SDEC08",135,0)
 ;
"RTN","SDEC08",136,0)
SDECCAN(SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER,SDF) ;cancel SDEC APPOINTMENT entry
"RTN","SDEC08",137,0)
 ;SDECAPTID - (required) pointer to SDEC APPOINTMENT file
"RTN","SDEC08",138,0)
 ;SDECTYP   - (required) appointment Status valid values:
"RTN","SDEC08",139,0)
 ;                          C=CANCELLED BY CLINIC
"RTN","SDEC08",140,0)
 ;                         PC=CANCELLED BY PATIENT
"RTN","SDEC08",141,0)
 ;SDECCR    - (optional) pointer to CANCELLATION REASON File (409.2)
"RTN","SDEC08",142,0)
 ;SDECNOT   - (optional) text representing user note
"RTN","SDEC08",143,0)
 ;SDECDATE   - (optional) Cancel Date/Time in fm format; defaults to NOW) ;
"RTN","SDEC08",144,0)
 ;SDF       - (optional) flags
"RTN","SDEC08",145,0)
 ;                       1. called from GUI (update consult only if called from GUI)
"RTN","SDEC08",146,0)
 ;Cancel SDEC APPOINTMENT entry
"RTN","SDEC08",147,0)
 N DFN,PROVIEN,Y
"RTN","SDEC08",148,0)
 N SDAPTYP,SDCL,SDI,SDIEN,SDECIENS,SDECFDA,SDECMSG,SDECWP,SDT
"RTN","SDEC08",149,0)
 S SDF=$G(SDF,0)
"RTN","SDEC08",150,0)
 S SDT=$$GET1^DIQ(409.84,SDECAPTID_",",.01,"I")
"RTN","SDEC08",151,0)
 S SDECIENS=SDECAPTID_","
"RTN","SDEC08",152,0)
 S SDECFDA(409.84,SDECIENS,.12)=$S($G(SDECDATE)'="":SDECDATE,1:$$NOW^XLFDT)
"RTN","SDEC08",153,0)
 S SDECFDA(409.84,SDECIENS,.121)=$S($G(SDUSER)'="":SDUSER,1:DUZ)
"RTN","SDEC08",154,0)
 S:$G(SDECCR)'="" SDECFDA(409.84,SDECIENS,.122)=SDECCR
"RTN","SDEC08",155,0)
 S SDECFDA(409.84,SDECIENS,.17)=SDECTYP
"RTN","SDEC08",156,0)
 K SDECMSG
"RTN","SDEC08",157,0)
 D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC08",158,0)
 S SDAPTYP=$$GET1^DIQ(409.84,SDECAPTID_",",.22,"I")
"RTN","SDEC08",159,0)
 I $G(SDECNOT)'="" D
"RTN","SDEC08",160,0)
 .K SDECMSG,SDECWP
"RTN","SDEC08",161,0)
 .S SDECWP(1)=SDECNOT
"RTN","SDEC08",162,0)
 .D WP^DIE(409.84,SDECIENS,1,"A","SDECWP","SDECMSG")
"RTN","SDEC08",163,0)
 I $P(SDAPTYP,";",2)="GMR(123,",SDF D
"RTN","SDEC08",164,0)
 .S SDCL=$$SDCL^SDECUTL(SDECAPTID)
"RTN","SDEC08",165,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC08",166,0)
 .D REQSET^SDEC07A($P(SDAPTYP,";",1),PROVIEN,"",2,SDECTYP,SDECNOT)  ;MGH added note to call
"RTN","SDEC08",167,0)
 I $P(SDAPTYP,";",2)="SDWL(409.3," D   ;update EWL
"RTN","SDEC08",168,0)
 .S DFN=$$GET1^DIQ(409.3,$P(SDAPTYP,";",1)_",",.01,"I")
"RTN","SDEC08",169,0)
 .Q:DFN=""
"RTN","SDEC08",170,0)
 .S SDIEN=0 F  S SDIEN=$O(^SDWL(409.3,"B",DFN,SDIEN)) Q:SDIEN=""  D
"RTN","SDEC08",171,0)
 ..I $$GET1^DIQ(409.3,SDIEN_",",13,"I")=SDT D
"RTN","SDEC08",172,0)
 ...K SDECFDA,SDECMSG,SDECWP
"RTN","SDEC08",173,0)
 ...;S SDIEN=$P(SDAPTYP,";",1)
"RTN","SDEC08",174,0)
 ...S SDECFDA(409.3,SDIEN_",",13)="@"
"RTN","SDEC08",175,0)
 ...S SDECFDA(409.3,SDIEN_",",13.1)="@"
"RTN","SDEC08",176,0)
 ...S SDECFDA(409.3,SDIEN_",",13.2)="@"
"RTN","SDEC08",177,0)
 ...S SDECFDA(409.3,SDIEN_",",13.3)="@"
"RTN","SDEC08",178,0)
 ...S SDECFDA(409.3,SDIEN_",",13.4)="@"
"RTN","SDEC08",179,0)
 ...S SDECFDA(409.3,SDIEN_",",13.5)="@"
"RTN","SDEC08",180,0)
 ...S SDECFDA(409.3,SDIEN_",",13.6)="@"
"RTN","SDEC08",181,0)
 ...S SDECFDA(409.3,SDIEN_",",13.7)="@"
"RTN","SDEC08",182,0)
 ...S SDECFDA(409.3,SDIEN_",",13.8)="@"
"RTN","SDEC08",183,0)
 ...D UPDATE^DIE("","SDECFDA")
"RTN","SDEC08",184,0)
 ...D WLOPEN^SDECWL("","",SDIEN)
"RTN","SDEC08",185,0)
 I $P(SDAPTYP,";",2)="SDEC(409.85," D   ;update APPT
"RTN","SDEC08",186,0)
 .K SDECFDA,SDECMSG,SDECWP
"RTN","SDEC08",187,0)
 .D AROPEN^SDECAR("",SDECAPTID)
"RTN","SDEC08",188,0)
 .S SDIEN=$P(SDAPTYP,";",1)
"RTN","SDEC08",189,0)
 .S SDECFDA(409.3,SDIEN_",",13)="@"
"RTN","SDEC08",190,0)
 .S SDECFDA(409.3,SDIEN_",",13.1)="@"
"RTN","SDEC08",191,0)
 .S SDECFDA(409.3,SDIEN_",",13.2)="@"
"RTN","SDEC08",192,0)
 .S SDECFDA(409.3,SDIEN_",",13.3)="@"
"RTN","SDEC08",193,0)
 .S SDECFDA(409.3,SDIEN_",",13.4)="@"
"RTN","SDEC08",194,0)
 .S SDECFDA(409.3,SDIEN_",",13.5)="@"
"RTN","SDEC08",195,0)
 .S SDECFDA(409.3,SDIEN_",",13.6)="@"
"RTN","SDEC08",196,0)
 .S SDECFDA(409.3,SDIEN_",",13.7)="@"
"RTN","SDEC08",197,0)
 .S SDECFDA(409.3,SDIEN_",",13.8)="@"
"RTN","SDEC08",198,0)
 .D UPDATE^DIE("","SDECFDA")
"RTN","SDEC08",199,0)
 Q
"RTN","SDEC08",200,0)
 ;
"RTN","SDEC08",201,0)
CANEVT(SDECPAT,SDECSTART,SDECSC) ;EP Called by SDEC CANCEL APPOINTMENT event
"RTN","SDEC08",202,0)
 ;when appointments cancelled via PIMS interface.
"RTN","SDEC08",203,0)
 ;Propagates cancellation to SDECAPPT and raises refresh event to running GUI clients
"RTN","SDEC08",204,0)
 N SDECFOUND,SDECRES
"RTN","SDEC08",205,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC08",206,0)
 Q:'+$G(SDECSC)
"RTN","SDEC08",207,0)
 S SDECFOUND=0
"RTN","SDEC08",208,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0)) S SDECFOUND=$$CANEVT1(SDECRES,SDECSTART,SDECPAT)
"RTN","SDEC08",209,0)
 I SDECFOUND D CANEVT3(SDECRES) Q
"RTN","SDEC08",210,0)
 Q
"RTN","SDEC08",211,0)
 ;
"RTN","SDEC08",212,0)
CANEVT1(SDECRES,SDECSTART,SDECPAT) ;
"RTN","SDEC08",213,0)
 ;Get appointment id in SDECAPT
"RTN","SDEC08",214,0)
 ;If found, call SDECCAN(SDECAPPT) and return 1
"RTN","SDEC08",215,0)
 ;else return 0
"RTN","SDEC08",216,0)
 N SDECFOUND,SDECAPPT
"RTN","SDEC08",217,0)
 S SDECFOUND=0
"RTN","SDEC08",218,0)
 Q:'+SDECRES SDECFOUND
"RTN","SDEC08",219,0)
 Q:'$D(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART)) SDECFOUND
"RTN","SDEC08",220,0)
 S SDECAPPT=0 F  S SDECAPPT=$O(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART,SDECAPPT)) Q:'+SDECAPPT  D  Q:SDECFOUND
"RTN","SDEC08",221,0)
 . S SDECNOD=$G(^SDEC(409.84,SDECAPPT,0)) Q:SDECNOD=""
"RTN","SDEC08",222,0)
 . I $P(SDECNOD,U,5)=SDECPAT,$P(SDECNOD,U,12)="" S SDECFOUND=1 Q
"RTN","SDEC08",223,0)
 I SDECFOUND,+$G(SDECAPPT) D SDECCAN(SDECAPPT,,,,,,1)
"RTN","SDEC08",224,0)
 Q SDECFOUND
"RTN","SDEC08",225,0)
 ;
"RTN","SDEC08",226,0)
CANEVT3(SDECRES) ;
"RTN","SDEC08",227,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC08",228,0)
 ;
"RTN","SDEC08",229,0)
 Q
"RTN","SDEC08",230,0)
 N SDECRESN
"RTN","SDEC08",231,0)
 S SDECRESN=$G(^SDEC(409.831,SDECRES,0))
"RTN","SDEC08",232,0)
 Q:SDECRESN=""
"RTN","SDEC08",233,0)
 S SDECRESN=$P(SDECRESN,"^")
"RTN","SDEC08",234,0)
 ;D EVENT^SDEC23("SCHEDULE-"_SDECRESN,"","","")
"RTN","SDEC08",235,0)
 ;D EVENT^BMXMEVN("SDEC SCHEDULE",SDECRESN)
"RTN","SDEC08",236,0)
 Q
"RTN","SDEC08",237,0)
 ;
"RTN","SDEC08",238,0)
CANCEL(BSDR) ;EP; called to cancel appt
"RTN","SDEC08",239,0)
 ;
"RTN","SDEC08",240,0)
 ; Make call using: S ERR=$$CANCEL^SDEC08(.ARRAY)
"RTN","SDEC08",241,0)
 ;
"RTN","SDEC08",242,0)
 ; Input Array -
"RTN","SDEC08",243,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDEC08",244,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDEC08",245,0)
 ; BSDR("TYP") = C for canceled by clinic; PC for patient canceled
"RTN","SDEC08",246,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDEC08",247,0)
 ; BSDR("CDT") = cancel date and time
"RTN","SDEC08",248,0)
 ; BSDR("USR") = user who canceled appt
"RTN","SDEC08",249,0)
 ; BSDR("CR")  = cancel reason - pointer to file 409.2
"RTN","SDEC08",250,0)
 ; BSDR("NOT") = cancel remarks - optional notes to 160 characters
"RTN","SDEC08",251,0)
 ;
"RTN","SDEC08",252,0)
 ;Output: error status and message
"RTN","SDEC08",253,0)
 ;   = 0 or null:  everything okay
"RTN","SDEC08",254,0)
 ;   = 1^message:  error and reason
"RTN","SDEC08",255,0)
 ;
"RTN","SDEC08",256,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDEC08",257,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDEC08",258,0)
 I ($G(BSDR("TYP"))'="C"),($G(BSDR("TYP"))'="PC") Q 1_U_"Cancel Status error: "_$G(BSDR("TYP"))
"RTN","SDEC08",259,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDEC08",260,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDEC08",261,0)
 I $G(BSDR("CDT")) S BSDR("CDT")=+$E(BSDR("CDT"),1,12)  ;remove seconds
"RTN","SDEC08",262,0)
 I $G(BSDR("CDT"))'?7N1".".4N Q 1_U_"Cancel Date/Time error: "_$G(BSDR("CDT"))
"RTN","SDEC08",263,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Canceled Appt Error: "_$G(BSDR("USR"))
"RTN","SDEC08",264,0)
 I '$D(^SD(409.2,+$G(BSDR("CR")))) Q 1_U_"Cancel Reason error: "_$G(BSDR("CR"))
"RTN","SDEC08",265,0)
 ;
"RTN","SDEC08",266,0)
 NEW IEN,DIE,DA,DR,SDMODE
"RTN","SDEC08",267,0)
 S IEN=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDEC08",268,0)
 I 'IEN Q 1_U_"Error trying to find appointment for cancel: Patient="_BSDR("PAT")_" Clinic="_BSDR("CLN")_" Appt="_BSDR("ADT")
"RTN","SDEC08",269,0)
 ;
"RTN","SDEC08",270,0)
 I $$CI^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"),IEN) Q 1_U_"Patient already checked in; cannot cancel until checkin deleted: Patient="_BSDR("PAT")_" Clinic="_BSDR("CLN")_" Appt="_BSDR("ADT")
"RTN","SDEC08",271,0)
 ;
"RTN","SDEC08",272,0)
 ; remember before status
"RTN","SDEC08",273,0)
 NEW SDATA,DFN,SDT,SDCL,SDDA,SDCPHDL
"RTN","SDEC08",274,0)
 S DFN=BSDR("PAT"),SDT=BSDR("ADT"),SDCL=BSDR("CLN"),SDMODE=2,SDDA=IEN
"RTN","SDEC08",275,0)
 S SDCPHDL=$$HANDLE^SDAMEVT(1),SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDEC08",276,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCPHDL)
"RTN","SDEC08",277,0)
 ;
"RTN","SDEC08",278,0)
 ; get user who made appt and date appt made from ^SC
"RTN","SDEC08",279,0)
 ;    because data in ^SC will be deleted
"RTN","SDEC08",280,0)
 NEW USER,DATE
"RTN","SDEC08",281,0)
 S USER=$P($G(^SC(SDCL,"S",SDT,1,IEN,0)),U,6)
"RTN","SDEC08",282,0)
 S DATE=$P($G(^SC(SDCL,"S",SDT,1,IEN,0)),U,7)
"RTN","SDEC08",283,0)
 ;
"RTN","SDEC08",284,0)
 ; update file 2 info
"RTN","SDEC08",285,0)
 NEW DIE,DA,DR
"RTN","SDEC08",286,0)
 N SDFDA,SDIEN,SDMSG
"RTN","SDEC08",287,0)
 S SDFDA="SDFDA(2.98,SDT_"",""_DFN_"","")"
"RTN","SDEC08",288,0)
 S @SDFDA@(3)=BSDR("TYP")
"RTN","SDEC08",289,0)
 S @SDFDA@(14)=BSDR("USR")
"RTN","SDEC08",290,0)
 S @SDFDA@(15)=BSDR("CDT")
"RTN","SDEC08",291,0)
 S:+$G(BSDR("CR")) @SDFDA@(16)=BSDR("CR")
"RTN","SDEC08",292,0)
 S:$G(BSDR("NOT"))]"" @SDFDA@(17)=$E(BSDR("NOT"),1,160)
"RTN","SDEC08",293,0)
 S @SDFDA@(19)=USER
"RTN","SDEC08",294,0)
 S @SDFDA@(20)=DATE
"RTN","SDEC08",295,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDEC08",296,0)
 N SDPCE
"RTN","SDEC08",297,0)
 S SDPCE=$P($G(^DPT(DFN,"S",SDT,0)),U,20)
"RTN","SDEC08",298,0)
 D:+SDPCE EN^SDCODEL(SDPCE,0)  ;remove OUTPATIENT ENCOUNTER link
"RTN","SDEC08",299,0)
 ;
"RTN","SDEC08",300,0)
 ; delete data in ^SC
"RTN","SDEC08",301,0)
 NEW DIK,DA
"RTN","SDEC08",302,0)
 S DIK="^SC("_BSDR("CLN")_",""S"","_BSDR("ADT")_",1,"
"RTN","SDEC08",303,0)
 S DA(2)=BSDR("CLN"),DA(1)=BSDR("ADT"),DA=IEN
"RTN","SDEC08",304,0)
 D ^DIK
"RTN","SDEC08",305,0)
 ; call event driver
"RTN","SDEC08",306,0)
 S SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDEC08",307,0)
 ;D CANCEL^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDMODE,SDCPHDL)
"RTN","SDEC08",308,0)
 Q 0
"RTN","SDEC08",309,0)
 ;
"RTN","SDEC08",310,0)
UNDOCANA(SDECY,SDECAPTID) ;Undo Cancel Appointment
"RTN","SDEC08",311,0)
 ;UNDOCANA(SDECY,SDECAPTID)  external parameter tag in SDEC
"RTN","SDEC08",312,0)
 ;called by SDEC UNCANCEL APPT
"RTN","SDEC08",313,0)
 ; SDECAPTID = ien of appointment in SDEC APPOINTMENT (^SDECAPPT) file 409.84
"RTN","SDEC08",314,0)
 N SDECDAM,SDECDEC,SDECI,SDECNOD,SDECPATID,SDECSTART
"RTN","SDEC08",315,0)
 S SDECNOEV=1 ;Don't execute SDEC CANCEL APPOINTMENT protocol  ;is this used?
"RTN","SDEC08",316,0)
 ;
"RTN","SDEC08",317,0)
 S SDECI=0
"RTN","SDEC08",318,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC08",319,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC08",320,0)
 S ^TMP("SDEC",$J,SDECI)="T00020ERRORID"_$C(30)
"RTN","SDEC08",321,0)
 TSTART
"RTN","SDEC08",322,0)
 I '+SDECAPTID TROLLBACK  D ERR(SDECI+1,"Invalid Appointment ID.") Q
"RTN","SDEC08",323,0)
 I '$D(^SDEC(409.84,SDECAPTID,0)) TROLLBACK  D ERR(SDECI+1,"Invalid Appointment ID") Q
"RTN","SDEC08",324,0)
 ;Make sure appointment is cancelled
"RTN","SDEC08",325,0)
 I $$GET1^DIQ(409.84,SDECAPTID_",",.12)="" TROLLBACK  D ERR(SDECI+1,"Appointment is not Cancelled.") Q
"RTN","SDEC08",326,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC08",327,0)
 ;appts cancelled by patient cannot be uncancelled. /* removed 9/17/2010 */
"RTN","SDEC08",328,0)
 ;I $P(^DPT($P(SDECNOD,U,5),"S",$P(SDECNOD,U,1),0),U,2)="PC" TROLLBACK  D ERR(SDECI+1,"Cancelled by patient appointment can not be uncancelled.") Q
"RTN","SDEC08",329,0)
 ;get appointment data
"RTN","SDEC08",330,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC08",331,0)
 S SDECDAM=$P(SDECNOD,U,9)                  ;date appt made
"RTN","SDEC08",332,0)
 S SDECDEC=$P(SDECNOD,U,8)                  ;data entry clerk
"RTN","SDEC08",333,0)
 S SDECLEN=$P(SDECNOD,U,18)                 ;length of appt in minutes
"RTN","SDEC08",334,0)
 S SDECNOTE=$G(^SDEC(409.84,SDECAPTID,1,1,0))  ;note from SDEC APPOINTMENT
"RTN","SDEC08",335,0)
 S SDECPATID=$P(SDECNOD,U,5)                ;pointer to VA PATIENT file 2
"RTN","SDEC08",336,0)
 S SDECSC1=$P($G(SDECNOD),U,7)              ;resource
"RTN","SDEC08",337,0)
 S SDECSTART=$P(SDECNOD,U)                  ;appt start time
"RTN","SDEC08",338,0)
 S SDECWKIN=$P($G(SDECNOD),U,13)            ;walkin
"RTN","SDEC08",339,0)
 ;lock SDEC node
"RTN","SDEC08",340,0)
 L +^SDEC(409.84,SDECPATID):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") TROLLBACK  Q
"RTN","SDEC08",341,0)
 ;uncancel SDEC APPOINTMENT
"RTN","SDEC08",342,0)
 D SDECUCAN(SDECAPTID)
"RTN","SDEC08",343,0)
 I SDECSC1]"",$D(^SDEC(409.831,SDECSC1,0)) D  I +$G(SDECZ) S SDECERR=SDECERR_$P(SDECZ,U,2) D ERR(SDECI,SDECERR) Q
"RTN","SDEC08",344,0)
 . S SDECLOC=""
"RTN","SDEC08",345,0)
 . S SDECNOD=^SDEC(409.831,SDECSC1,0)
"RTN","SDEC08",346,0)
 . S SDECLOC=$P(SDECNOD,U,4) ;HOSPITAL LOCATION   ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC08",347,0)
 . I SDECLOC="" S SDECLOC=$$SDCL^SDECUTL(SDECAPTID)  ;HOSPITAL LOCATION
"RTN","SDEC08",348,0)
 . Q:'+SDECLOC
"RTN","SDEC08",349,0)
 . ;uncancel patient appointment and re-instate clinic appointment
"RTN","SDEC08",350,0)
 . S SDECZ=""
"RTN","SDEC08",351,0)
 . D APUCAN(.SDECZ,SDECLOC,SDECPATID,SDECSTART,SDECDAM,SDECDEC,SDECLEN,SDECNOTE,SDECSC1,SDECWKIN)
"RTN","SDEC08",352,0)
 TCOMMIT
"RTN","SDEC08",353,0)
 L -^SDEC(409.84,SDECPATID)
"RTN","SDEC08",354,0)
 S SDECI=SDECI+1
"RTN","SDEC08",355,0)
 S ^TMP("SDEC",$J,SDECI)=""_$C(30)
"RTN","SDEC08",356,0)
 S SDECI=SDECI+1
"RTN","SDEC08",357,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC08",358,0)
 Q
"RTN","SDEC08",359,0)
 ;
"RTN","SDEC08",360,0)
SDECUCAN(SDECAPTID) ;called internally to update SDEC APPOINTMENT by clearing cancel date/time
"RTN","SDEC08",361,0)
 N PROVIEN,SDAPTYP,SDCL,SDRES
"RTN","SDEC08",362,0)
 S SDECIENS=SDECAPTID_","
"RTN","SDEC08",363,0)
 S SDECFDA(409.84,SDECIENS,.12)=""
"RTN","SDEC08",364,0)
 K SDECMSG
"RTN","SDEC08",365,0)
 D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC08",366,0)
 S SDAPTYP=$$GET1^DIQ(409.84,SDECAPTID_",",.22,"I")
"RTN","SDEC08",367,0)
 I $P(SDAPTYP,";",2)="GMR(123," D
"RTN","SDEC08",368,0)
 .S SDCL=$$SDCL^SDECUTL(SDECAPTID)
"RTN","SDEC08",369,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC08",370,0)
 .D REQSET^SDEC07A($P(SDAPTYP,";",1),PROVIEN,"",1)
"RTN","SDEC08",371,0)
 Q
"RTN","SDEC08",372,0)
 ;
"RTN","SDEC08",373,0)
APUCAN(SDECZ,SDECLOC,SDECPATID,SDECSTART,SDECDAM,SDECDEC,SDECLEN,SDECNOTE,SDECRES,SDECWKIN) ;
"RTN","SDEC08",374,0)
 ;unCancel appointment for patient SDECDFN in clinic SDECSC1
"RTN","SDEC08",375,0)
 ;  SDECLOC   = pointer to hospital location ^SC file 44
"RTN","SDEC08",376,0)
 ;  SDECPATID = pointer to VA Patient ^DPT file 2
"RTN","SDEC08",377,0)
 ;  SDECSTART = Appointment time
"RTN","SDEC08",378,0)
 ;  SDECDAM   = Date appointment made in FM format
"RTN","SDEC08",379,0)
 ;  SDECDEC   = Data entry clerk - pointer to NEW PERSON file 200
"RTN","SDEC08",380,0)
 N SDECC,%H
"RTN","SDEC08",381,0)
 S SDECC("PAT")=SDECPATID
"RTN","SDEC08",382,0)
 S SDECC("CLN")=SDECLOC
"RTN","SDEC08",383,0)
 S SDECC("ADT")=SDECSTART
"RTN","SDEC08",384,0)
 S SDECC("NOTE")=SDECNOTE  ;user note
"RTN","SDEC08",385,0)
 S SDECC("RES")=SDECRES
"RTN","SDEC08",386,0)
 S SDECC("USR")=DUZ
"RTN","SDEC08",387,0)
 S SDECC("LEN")=SDECLEN
"RTN","SDEC08",388,0)
 S SDECC("WKIN")=SDECWKIN
"RTN","SDEC08",389,0)
 ;
"RTN","SDEC08",390,0)
 S SDECZ=$$UNCANCEL(.SDECC)
"RTN","SDEC08",391,0)
 Q
"RTN","SDEC08",392,0)
 ;
"RTN","SDEC08",393,0)
UNCANCEL(BSDR) ;PEP; called to ucancel appt
"RTN","SDEC08",394,0)
 ;
"RTN","SDEC08",395,0)
 ; Make call using: S ERR=$$UNCANCEL(.ARRAY)
"RTN","SDEC08",396,0)
 ;
"RTN","SDEC08",397,0)
 ; Input Array -
"RTN","SDEC08",398,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDEC08",399,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDEC08",400,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDEC08",401,0)
 ; BSDR("USR") = user who uncanceled appt
"RTN","SDEC08",402,0)
 ; BSDR("NOTE") = appointment note from SDEC APPOINTMENT
"RTN","SDEC08",403,0)
 ; BSDR("LEN") = appt length in minutes (numeric)
"RTN","SDEC08",404,0)
 ; BSDR("RES") = resource
"RTN","SDEC08",405,0)
 ; BSDR("WKIN")= walkin
"RTN","SDEC08",406,0)
 ;
"RTN","SDEC08",407,0)
 ;Output: error status and message
"RTN","SDEC08",408,0)
 ;   = 0 or null:  everything okay
"RTN","SDEC08",409,0)
 ;   = 1^message:  error and reason
"RTN","SDEC08",410,0)
 ;
"RTN","SDEC08",411,0)
 N DPTNOD,DPTNODR
"RTN","SDEC08",412,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDEC08",413,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDEC08",414,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDEC08",415,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDEC08",416,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Canceled Appt Error: "_$G(BSDR("USR"))
"RTN","SDEC08",417,0)
 ;
"RTN","SDEC08",418,0)
 S SDECERR=$$APPVISTA^SDEC07(BSDR("LEN"),BSDR("NOTE"),BSDR("PAT"),BSDR("RES"),BSDR("ADT"),BSDR("WKIN"),BSDR("CLN"))
"RTN","SDEC08",419,0)
 Q SDECERR
"RTN","SDEC08",420,0)
 ;
"RTN","SDEC08",421,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC08",422,0)
 S SDECI=SDECI+1
"RTN","SDEC08",423,0)
 S SDECERR=$TR(SDECERR,"^","~")
"RTN","SDEC08",424,0)
 TROLLBACK
"RTN","SDEC08",425,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC08",426,0)
 S SDECI=SDECI+1
"RTN","SDEC08",427,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC08",428,0)
 Q
"RTN","SDEC08",429,0)
 ;
"RTN","SDEC08",430,0)
ETRAP ;EP Error trap entry
"RTN","SDEC08",431,0)
 D ^%ZTER
"RTN","SDEC08",432,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC08",433,0)
 S SDECI=SDECI+1
"RTN","SDEC08",434,0)
 D ERR(SDECI,"SDEC08 Error")
"RTN","SDEC08",435,0)
 Q
"RTN","SDEC09")
0^12^B40258209^n/a
"RTN","SDEC09",1,0)
SDEC09 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC09",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC09",3,0)
 ;
"RTN","SDEC09",4,0)
 Q
"RTN","SDEC09",5,0)
 ;
"RTN","SDEC09",6,0)
 ;
"RTN","SDEC09",7,0)
GETREGA(SDECRET,DFN) ;return basic reg info/demographics for given patient
"RTN","SDEC09",8,0)
 ;GETREGA(SDECRET,DFN)  external parameter tag is in SDEC
"RTN","SDEC09",9,0)
 ;DFN - Patient ID - Pointer to PATIENT file
"RTN","SDEC09",10,0)
 ;Returns IEN^STREET^CITY^STATE^ZIP^NAME^DOB^SSN^HRN
"RTN","SDEC09",11,0)
 ;   10 HOMEPHONE^OFCPHONE^MSGPHONE^
"RTN","SDEC09",12,0)
 ;   13 NOK NAME^RELATIONSHIP^PHONE^STREET^CITY^STATE^ZIP
"RTN","SDEC09",13,0)
 ;   20 DATAREVIEWED^
"RTN","SDEC09",14,0)
 ;   21 Medicare#^Suffix
"RTN","SDEC09",15,0)
 ;   23 RegistrationComments
"RTN","SDEC09",16,0)
 ;   24 GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDEC09",17,0)
 ;   25 PRACE  - Patient Race pointer to RACE file 10 | separates entries
"RTN","SDEC09",18,0)
 ;   26 PRACEN - Patient Race name from RACE file | separates entries
"RTN","SDEC09",19,0)
 ;   27 PETH   - Patient Ethnicity list separated by pipe |
"RTN","SDEC09",20,0)
 ;               Pointer to ETHNICITY file 10.2
"RTN","SDEC09",21,0)
 ;   28 PETHN  - Patient Ethnicity names separated by pipe |
"RTN","SDEC09",22,0)
 ;   29 PCOUNTRY - Country pointer to COUNTRY CODE file
"RTN","SDEC09",23,0)
 ;   30 GENDER  - Patient Gender - valid values are MALE  FEMALE
"RTN","SDEC09",24,0)
 ;   31 SENSITIVE - Sensitive Record Access data separated by pipe |:
"RTN","SDEC09",25,0)
 ;            1. return code:
"RTN","SDEC09",26,0)
 ;               -1-RPC/API failed
"RTN","SDEC09",27,0)
 ;                  Required variable not defined
"RTN","SDEC09",28,0)
 ;                0-No display/action required
"RTN","SDEC09",29,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDEC09",30,0)
 ;                1-Display warning message
"RTN","SDEC09",31,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDEC09",32,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDEC09",33,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDEC09",34,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDEC09",35,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDEC09",36,0)
 ;                3-Access to record denied
"RTN","SDEC09",37,0)
 ;                  Accessing own record
"RTN","SDEC09",38,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDEC09",39,0)
 ;                  SSN not defined
"RTN","SDEC09",40,0)
 ;            2. display text/message
"RTN","SDEC09",41,0)
 ;            3. display text/message
"RTN","SDEC09",42,0)
 ;            4. display text/message
"RTN","SDEC09",43,0)
 ;   32 SVCCONN  - Patient's Service Connected status
"RTN","SDEC09",44,0)
 ;                 YES   NO
"RTN","SDEC09",45,0)
 ;   33 SVCCONNP - Patient's Service Connected Percentage
"RTN","SDEC09",46,0)
 ;                 Numeric 0-100
"RTN","SDEC09",47,0)
 ;   34 BADADD   - BAD ADDRESS INDICATOR
"RTN","SDEC09",48,0)
 ;                     1=UNDELIVERABLE
"RTN","SDEC09",49,0)
 ;                     2=HOMELESS
"RTN","SDEC09",50,0)
 ;                     3=OTHER
"RTN","SDEC09",51,0)
 ;                     4=ADDRESS NOT FOUND
"RTN","SDEC09",52,0)
 ;
"RTN","SDEC09",53,0)
 ;For patient with ien DFN
"RTN","SDEC09",54,0)
 ;K ^TMP("SDEC",$J)
"RTN","SDEC09",55,0)
 N SDDEMO,SDECI,SDECNOD,SDECNAM,SDSENS,Y
"RTN","SDEC09",56,0)
 N PRACE,PRACEN,PETH,PETHN,PCOUNTRY,SVCCONN,SVCCONNP
"RTN","SDEC09",57,0)
 S SDECRET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC09",58,0)
 K @SDECRET
"RTN","SDEC09",59,0)
 S SDECI=0
"RTN","SDEC09",60,0)
 ;
"RTN","SDEC09",61,0)
 S ^TMP("SDEC",$J,0)="T00030IEN^T00030STREET^T00030CITY^T00030STATE^T00030ZIP^T00030NAME^D00030DOB^T00030SSN^T00030HRN"
"RTN","SDEC09",62,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030HOMEPHONE^T00030OFCPHONE^T00030MSGPHONE"
"RTN","SDEC09",63,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030NOK NAME^T00030RELATIONSHIP^T00030PHONE^T00030STREET^T00030CITY^T00030STATE^T00030ZIP"
"RTN","SDEC09",64,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^D00030DATAREVIEWED"
"RTN","SDEC09",65,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030Medicare#^T00030Suffix"
"RTN","SDEC09",66,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030RegistrationComments^T00100GAF"
"RTN","SDEC09",67,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN^T00030PCOUNTRY^T00030GENDER^T00100SENSITIVE"
"RTN","SDEC09",68,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030SVCCONN^T00030SVCCONNP^T00030BADADD"
"RTN","SDEC09",69,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_$C(30)
"RTN","SDEC09",70,0)
 ;
"RTN","SDEC09",71,0)
 S SDECY="ERROR"
"RTN","SDEC09",72,0)
 I '+DFN S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC09",73,0)
 I '$D(^DPT(+DFN,0)) S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC09",74,0)
 S SDECY=""
"RTN","SDEC09",75,0)
 S $P(SDECY,U)=DFN
"RTN","SDEC09",76,0)
 S $P(SDECY,U,23)=""
"RTN","SDEC09",77,0)
 S SDECNOD=^DPT(+DFN,0)
"RTN","SDEC09",78,0)
 S $P(SDECY,"^",6)=$P(SDECNOD,U) ;NAME
"RTN","SDEC09",79,0)
 S $P(SDECY,"^",8)=$P(SDECNOD,U,9) ;SSN
"RTN","SDEC09",80,0)
 S Y=$P(SDECNOD,U,3) I Y]""  X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC09",81,0)
 S $P(SDECY,"^",7)=Y ;DOB
"RTN","SDEC09",82,0)
 S $P(SDECY,"^",9)=""
"RTN","SDEC09",83,0)
 I $D(DUZ(2)) I DUZ(2)>0 S $P(SDECY,"^",9)=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;HRN
"RTN","SDEC09",84,0)
 D MAIL
"RTN","SDEC09",85,0)
 D PHONE
"RTN","SDEC09",86,0)
 D NOK
"RTN","SDEC09",87,0)
 D GAF
"RTN","SDEC09",88,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC09",89,0)
 ;S ($P(SDECY,"^",25),PRACE)=$P(SDECNOD,U,6)   ;get race
"RTN","SDEC09",90,0)
 S $P(SDECY,U,25)=PRACE
"RTN","SDEC09",91,0)
 S $P(SDECY,U,26)=PRACEN
"RTN","SDEC09",92,0)
 ;S $P(SDECY,"^",26)=$S(+PRACE:$P($G(^DIC(10,PRACE,0)),U,1),1:"")
"RTN","SDEC09",93,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC09",94,0)
 S:PETH'="" $P(SDECY,"^",27)=PETH
"RTN","SDEC09",95,0)
 S:PETHN'="" $P(SDECY,"^",28)=PETHN
"RTN","SDEC09",96,0)
 S $P(SDECY,"^",30)=$S($P(SDECNOD,U,2)="M":"MALE",$P(SDECNOD,U,2)="F":"FEMALE",1:"")
"RTN","SDEC09",97,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN) S $P(SDECY,"^",31)=SDSENS
"RTN","SDEC09",98,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC09",99,0)
 S $P(SDECY,"^",29)=SDDEMO("PCOUNTRY")
"RTN","SDEC09",100,0)
 S $P(SDECY,"^",32)=SDDEMO("SVCCONN")
"RTN","SDEC09",101,0)
 S $P(SDECY,"^",33)=SDDEMO("SVCCONNP")
"RTN","SDEC09",102,0)
 S $P(SDECY,"^",34)=SDDEMO("BADADD")
"RTN","SDEC09",103,0)
 ;D DATAREV
"RTN","SDEC09",104,0)
 ;D MEDICARE
"RTN","SDEC09",105,0)
 ;D REGCMT
"RTN","SDEC09",106,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECY_$C(30,31)
"RTN","SDEC09",107,0)
 Q
"RTN","SDEC09",108,0)
 ;
"RTN","SDEC09",109,0)
GAF ;24 determine if GAF score needed
"RTN","SDEC09",110,0)
 N GAF,GAFR
"RTN","SDEC09",111,0)
 S GAFR=""
"RTN","SDEC09",112,0)
 S GAF=$$NEWGAF^SDUTL2(DFN)
"RTN","SDEC09",113,0)
 S:GAF="" GAF=-1
"RTN","SDEC09",114,0)
 S $P(GAFR,"|",1)=$S(+GAF:"New GAF Required",1:"No new GAF required")
"RTN","SDEC09",115,0)
 S $P(GAFR,"|",2)=$P(GAF,U,2)
"RTN","SDEC09",116,0)
 S $P(GAFR,"|",3)=$$FMTE^XLFDT($P(GAF,U,3))
"RTN","SDEC09",117,0)
 S $P(GAFR,"|",4)=$P(GAF,U,4)
"RTN","SDEC09",118,0)
 S $P(GAFR,"|",5)=$P($G(^VA(200,+$P(GAF,U,4),0)),U,1)
"RTN","SDEC09",119,0)
 S $P(SDECY,"^",24)=GAFR
"RTN","SDEC09",120,0)
 Q
"RTN","SDEC09",121,0)
 ;
"RTN","SDEC09",122,0)
MAIL N SDECST
"RTN","SDEC09",123,0)
 NEW SDECNOD
"RTN","SDEC09",124,0)
 Q:'$D(^DPT(+DFN,.11))
"RTN","SDEC09",125,0)
 S SDECNOD=^DPT(+DFN,.11)
"RTN","SDEC09",126,0)
 Q:SDECNOD=""
"RTN","SDEC09",127,0)
 S $P(SDECY,"^",2)=$E($P(SDECNOD,U),1,50) ;STREET
"RTN","SDEC09",128,0)
 S $P(SDECY,"^",3)=$P(SDECNOD,U,4) ;CITY
"RTN","SDEC09",129,0)
 S SDECST=$P(SDECNOD,U,5)
"RTN","SDEC09",130,0)
 I +SDECST,$D(^DIC(5,+SDECST,0)) S SDECST=$P(^DIC(5,+SDECST,0),U,2)
"RTN","SDEC09",131,0)
 S $P(SDECY,"^",4)=SDECST ;STATE
"RTN","SDEC09",132,0)
 S $P(SDECY,"^",5)=$P(SDECNOD,U,6) ;ZIP
"RTN","SDEC09",133,0)
 ;S $P(SDECY,"^",29)=$$GET1^DIQ(2,DFN_",",.1173)
"RTN","SDEC09",134,0)
 Q
"RTN","SDEC09",135,0)
 ;
"RTN","SDEC09",136,0)
PHONE ;PHONE 10,11,12 HOME,OFC,MSG
"RTN","SDEC09",137,0)
 N SDECNOD
"RTN","SDEC09",138,0)
 I $D(^DPT(+DFN,.13)) D
"RTN","SDEC09",139,0)
 . S SDECNOD=^DPT(+DFN,.13)
"RTN","SDEC09",140,0)
 . S $P(SDECY,U,10)=$P(SDECNOD,U,1)
"RTN","SDEC09",141,0)
 . S $P(SDECY,U,11)=$P(SDECNOD,U,2)
"RTN","SDEC09",142,0)
 I $D(^DPT(+DFN,.121)) D
"RTN","SDEC09",143,0)
 . S SDECNOD=^DPT(+DFN,.121)
"RTN","SDEC09",144,0)
 . S $P(SDECY,U,12)=$P(SDECNOD,U,10)
"RTN","SDEC09",145,0)
 Q
"RTN","SDEC09",146,0)
 ;
"RTN","SDEC09",147,0)
NOK ;NOK
"RTN","SDEC09",148,0)
 ;   13 NOK NAME^RELATIONSHIP^PHONE^STREET^CITY^STATE^ZIP
"RTN","SDEC09",149,0)
 N Y,SDECST,SDECNOD
"RTN","SDEC09",150,0)
 I $D(^DPT(+DFN,.21)) D
"RTN","SDEC09",151,0)
 . S SDECNOD=^DPT(+DFN,.21)
"RTN","SDEC09",152,0)
 . S $P(SDECY,U,13)=$P(SDECNOD,U,1)
"RTN","SDEC09",153,0)
 . S $P(SDECY,U,14)=""  ;$$VAL^SDECDIQ1(9000001,DFN,2802)
"RTN","SDEC09",154,0)
 . S $P(SDECY,U,15)=$P(SDECNOD,U,9)
"RTN","SDEC09",155,0)
 . S $P(SDECY,U,16)=$P(SDECNOD,U,3)
"RTN","SDEC09",156,0)
 . S $P(SDECY,U,17)=$P(SDECNOD,U,6)
"RTN","SDEC09",157,0)
 . S SDECST=$P(SDECNOD,U,7)
"RTN","SDEC09",158,0)
 . I +SDECST D
"RTN","SDEC09",159,0)
 . . I $D(^DIC(5,+SDECST,0)) S SDECST=$P(^DIC(5,+SDECST,0),U,2),$P(SDECY,U,18)=SDECST
"RTN","SDEC09",160,0)
 . S $P(SDECY,U,19)=$P(SDECNOD,U,8)
"RTN","SDEC09",161,0)
 Q
"RTN","SDEC09",162,0)
 ;
"RTN","SDEC09",163,0)
DATAREV Q  S $P(SDECY,U,20)=""  ;$P($$VAL^SDECDIQ1(9000001,DFN,16651),"@")
"RTN","SDEC09",164,0)
 Q
"RTN","SDEC09",165,0)
 ;
"RTN","SDEC09",166,0)
REGCMT N SDECI,SDECM,SDECR
"RTN","SDEC09",167,0)
 Q
"RTN","SDEC09",168,0)
 S SDECR=""
"RTN","SDEC09",169,0)
 D ENP^SDECDIQ1(9000001,DFN,1301,"SDECM(")
"RTN","SDEC09",170,0)
 S SDECI=0 F  S SDECI=$O(SDECM(1301,SDECI)) Q:'+SDECI  D
"RTN","SDEC09",171,0)
 . S SDECR=SDECR_" "_SDECM(1301,SDECI)
"RTN","SDEC09",172,0)
 S $P(SDECY,U,23)=$TR($E(SDECR,1,1024),U," ") ; MJL 1/17/2007
"RTN","SDEC09",173,0)
 Q
"RTN","SDEC09",174,0)
 ;
"RTN","SDEC09",175,0)
MEDICARE ;
"RTN","SDEC09",176,0)
 S $P(SDECY,U,21)="" ;$$VAL^SDECDIQ1(9000003,DFN,.03)
"RTN","SDEC09",177,0)
 S $P(SDECY,U,22)="" ;$$VAL^SDECDIQ1(9000003,DFN,.04)
"RTN","SDEC09",178,0)
 Q
"RTN","SDEC09",179,0)
 ;
"RTN","SDEC09",180,0)
GETMCARE(SDECY,DFN) ;
"RTN","SDEC09",181,0)
 ;Returns IEN^MEDICARE#^SUFFIX^SUBENTRY#^TYPE^ELIG.BEGIN^ELIG.END |
"RTN","SDEC09",182,0)
 ;File is dinum
"RTN","SDEC09",183,0)
 ;
"RTN","SDEC09",184,0)
 Q
"RTN","SDEC09",185,0)
 N ASDGX,C,N,SDECNUM,SDECSUF,SDECBLD
"RTN","SDEC09",186,0)
 S SDECNUM=$$VAL^SDECDIQ1(9000003,DFN,.03)
"RTN","SDEC09",187,0)
 S SDECSUF=$$VAL^SDECDIQ1(9000003,DFN,.04)
"RTN","SDEC09",188,0)
 D ENPM^SDECDIQ1(9000003.11,DFN_",0",".01:.03","ASDGX(")
"RTN","SDEC09",189,0)
 S C=1,N=0,SDECBLD=""
"RTN","SDEC09",190,0)
 F  S N=$O(ASDGX(N)) Q:'N  D
"RTN","SDEC09",191,0)
 . S $P(SDECY,"|",C)=DFN_U_SDECNUM_U_SDECSUF_U_N_U_ASDGX(N,.03)_U_ASDGX(N,.01)_U_ASDGX(N,.02)
"RTN","SDEC09",192,0)
 . S C=C+1
"RTN","SDEC09",193,0)
 . Q
"RTN","SDEC09",194,0)
 Q
"RTN","SDEC09",195,0)
 ;
"RTN","SDEC09",196,0)
GETPVTIN(SDECY,DFN) ;
"RTN","SDEC09",197,0)
 ;Returns IEN^SUBENTRY^INSURER^POLICYNUMBER^ELIG.BEGIN^ELIG.END|...
"RTN","SDEC09",198,0)
 ;File is dinum
"RTN","SDEC09",199,0)
 ;
"RTN","SDEC09",200,0)
 Q
"RTN","SDEC09",201,0)
 N ASDGX,C,N
"RTN","SDEC09",202,0)
 D ENPM^SDECDIQ1(9000006.11,DFN_",0",".01;.02;.06;.07","ASDGX(")
"RTN","SDEC09",203,0)
 S C=1,N=0
"RTN","SDEC09",204,0)
 F  S N=$O(ASDGX(N)) Q:'N  D
"RTN","SDEC09",205,0)
 . S $P(SDECY,"|",C)=DFN_U_N_U_ASDGX(N,.01)_U_ASDGX(N,.02)_U_ASDGX(N,.06)_U_ASDGX(N,.07)
"RTN","SDEC09",206,0)
 . S C=C+1
"RTN","SDEC09",207,0)
 . Q
"RTN","SDEC09",208,0)
 Q
"RTN","SDEC09",209,0)
 ;
"RTN","SDEC09",210,0)
DFN(FILE,DFN) ; -- returns ien for file
"RTN","SDEC09",211,0)
 Q ""
"RTN","SDEC09",212,0)
 I FILE'[9000004 Q DFN
"RTN","SDEC09",213,0)
 Q +$O(^AUPNMCD("B",DFN,0))
"RTN","SDEC12")
0^14^B29844447^n/a
"RTN","SDEC12",1,0)
SDEC12 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC12",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC12",3,0)
 ;
"RTN","SDEC12",4,0)
 Q
"RTN","SDEC12",5,0)
 ;
"RTN","SDEC12",6,0)
AVADD(SDECY,SDECSTART,SDECEND,SDECTYPID,SDECRES,SDECSLOTS,SDECNOTE) ;Create entry in SDEC ACCESS BLOCK
"RTN","SDEC12",7,0)
 ;AVADD(SDECY,SDECSTART,SDECEND,SDECTYPID,SDECRES,SDECSLOTS,SDECNOTE)  external parameter tag is in SDEC
"RTN","SDEC12",8,0)
 ;INPUT:
"RTN","SDEC12",9,0)
 ; SDECSTART - (required) SDEC ACCESS BLOCK start date/time
"RTN","SDEC12",10,0)
 ; SDECEND   - (required) SDEC ACCESS BLOCK end date/time
"RTN","SDEC12",11,0)
 ; SDECTYPID - (required) ACCESS TYPE ien - pointer to the SDEC ACCESS TYPE file
"RTN","SDEC12",12,0)
 ; SDECRES   - (required) Resource Name from the NAME field of the
"RTN","SDEC12",13,0)
 ;                        SDEC RESOURCE file
"RTN","SDEC12",14,0)
 ; SDECSLOTS - (required) Value added to the SLOTS field of the
"RTN","SDEC12",15,0)
 ;                       SDEC ACCESS BLOCK file (must be 0-99)
"RTN","SDEC12",16,0)
 ; SDECNOTE  - (optional) Represents a note; will be converted to a WP field
"RTN","SDEC12",17,0)
 ;
"RTN","SDEC12",18,0)
 ;RETURN:
"RTN","SDEC12",19,0)
 ; Recordset having fields
"RTN","SDEC12",20,0)
 ; AvailabilityID and ErrorNumber
"RTN","SDEC12",21,0)
 ;
"RTN","SDEC12",22,0)
 ;
"RTN","SDEC12",23,0)
 N SDAB,SDECERR,SDECIEN,SDECDEP,SDECI,SDECAVID,SDECI,SDECERR,SDECFDA,SDECMSG,SDECRESD,SDECTMP
"RTN","SDEC12",24,0)
 N SDI,SDNOD,%DT,X,Y
"RTN","SDEC12",25,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC12",26,0)
 S SDECERR=0
"RTN","SDEC12",27,0)
 S SDECI=0
"RTN","SDEC12",28,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC12",29,0)
 S ^TMP("SDEC",$J,0)="I00020AVAILABILITYID^I00020ERRORID"_$C(30)
"RTN","SDEC12",30,0)
 ;Check input data for errors
"RTN","SDEC12",31,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC12",32,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC12",33,0)
 S %DT="RXT",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC12",34,0)
 I SDECSTART=-1 D ERR(70) Q
"RTN","SDEC12",35,0)
 S %DT="RXT",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC12",36,0)
 I SDECEND=-1 D ERR(70) Q
"RTN","SDEC12",37,0)
 I $L(SDECEND,".")=1 D ERR(70) Q
"RTN","SDEC12",38,0)
 I SDECSTART>SDECEND S SDECTMP=SDECEND,SDECEND=SDECSTART,SDECSTART=SDECTMP
"RTN","SDEC12",39,0)
 I $P(SDECSTART,".",1)'=$P(SDECEND,".",1) D ERR(70) Q
"RTN","SDEC12",40,0)
 ;Validate Access Type
"RTN","SDEC12",41,0)
 I '+SDECTYPID D ERR(70) Q
"RTN","SDEC12",42,0)
 I '$D(^SDEC(409.823,+SDECTYPID,0)) D ERR(70) Q
"RTN","SDEC12",43,0)
 ;Validate Resource
"RTN","SDEC12",44,0)
 I '$D(^SDEC(409.831,"B",SDECRES)) S SDECERR=70 D ERR(SDECERR) Q
"RTN","SDEC12",45,0)
 S SDECRESD=$O(^SDEC(409.831,"B",SDECRES,0)) I '+SDECRESD S SDECERR=70 D ERR(SDECERR) Q
"RTN","SDEC12",46,0)
 S SDNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC12",47,0)
 I $P($P(SDNOD,U,11),";",2)'="SC(" D ERR(70) Q  ;only add to clinics
"RTN","SDEC12",48,0)
 ;Validate SDECSLOTS
"RTN","SDEC12",49,0)
 S SDECSLOTS=$G(SDECSLOTS,0)
"RTN","SDEC12",50,0)
 ;get current slots for the day
"RTN","SDEC12",51,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC12",52,0)
 K @SDAB
"RTN","SDEC12",53,0)
 D GETSLOTS^SDEC04(SDAB,SDECRESD,$P(SDECSTART,".",1),$P(SDECEND,".",1)_".2359")
"RTN","SDEC12",54,0)
 S SDI=$P($G(@SDAB@("CNT")),U,1)+1
"RTN","SDEC12",55,0)
 S @SDAB@(SDI)=U_SDECSTART_U_SDECEND_U_SDECSLOTS_U_SDECTYPID
"RTN","SDEC12",56,0)
 ;
"RTN","SDEC12",57,0)
 ;update AVAILABILITY in file 44 for clinic type resource
"RTN","SDEC12",58,0)
 D AV44($P(SDECSTART,".",1),$P(SDNOD,U,4),SDECRESD)
"RTN","SDEC12",59,0)
 ;
"RTN","SDEC12",60,0)
 ;Return Recordset
"RTN","SDEC12",61,0)
 S SDECI=SDECI+1
"RTN","SDEC12",62,0)
 S ^TMP("SDEC",$J,SDECI)=SDECAVID_"^-1"_$C(30)
"RTN","SDEC12",63,0)
 S SDECI=SDECI+1
"RTN","SDEC12",64,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC12",65,0)
 Q
"RTN","SDEC12",66,0)
 ;
"RTN","SDEC12",67,0)
AV44(SDAY,SDCL,SDRES)  ;update AVAILABILITY in file 44
"RTN","SDEC12",68,0)
 N SDAB,SDAPL,SDI,SDJ,SDNOD
"RTN","SDEC12",69,0)
 N CNT,LAST,H1,H2,M1,M2
"RTN","SDEC12",70,0)
 S SDAPL=$$GET1^DIQ(44,SDCL_",",1912,"I")
"RTN","SDEC12",71,0)
 ;delete all slots for the day in file 44
"RTN","SDEC12",72,0)
 D DEL(SDCL,SDAY_".0001",SDAY_".2359")
"RTN","SDEC12",73,0)
 ;add all blocks for the day to file 44
"RTN","SDEC12",74,0)
 S CNT=0
"RTN","SDEC12",75,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC12",76,0)
 .S SDNOD=@SDAB@(SDI)
"RTN","SDEC12",77,0)
 .Q:'$P(SDNOD,U,4)
"RTN","SDEC12",78,0)
 .S H1=$E($P($P(SDNOD,U,2),".",2),1,2) S:H1?1N H1=H1_"0"
"RTN","SDEC12",79,0)
 .S M1=$E($P($P(SDNOD,U,2),".",2),3,4) S:M1?1N M1=M1_"0" S:M1="" M1="00"
"RTN","SDEC12",80,0)
 .S H2=$E($P($P(SDNOD,U,3),".",2),1,2) S:H2?1N H2=H2_"0"
"RTN","SDEC12",81,0)
 .S M2=$E($P($P(SDNOD,U,3),".",2),3,4) S:M2?1N M2=M2_"0" S:M2="" M2="00"
"RTN","SDEC12",82,0)
 .D AVA(.CNT,SDCL,SDAY,H1_M1,H2_M2,$P(SDNOD,U,4),SDAPL)
"RTN","SDEC12",83,0)
 ;update zero node for day
"RTN","SDEC12",84,0)
 I +CNT S ^SC(SDCL,"T",SDAY,2,0)="^44.004A^"_CNT_"^"_CNT
"RTN","SDEC12",85,0)
 ;update zero node for "T"
"RTN","SDEC12",86,0)
 S (CNT,LAST,SDI)=0 F  S SDI=$O(^SC(SDCL,"T",SDI)) Q:SDI'>0  D
"RTN","SDEC12",87,0)
 .S LAST=SDI,CNT=CNT+1
"RTN","SDEC12",88,0)
 S ^SC(SDCL,"T",0)="^44.002DA^"_LAST_"^"_CNT
"RTN","SDEC12",89,0)
 D CA(SDCL,SDAY)
"RTN","SDEC12",90,0)
 Q
"RTN","SDEC12",91,0)
CA(SDCL,SDAY)  ;set current availability in PATTERN if does not already exist
"RTN","SDEC12",92,0)
 N D,D0,DA,DH,DO,DOW,SDREACT,SI,SL,STARTDAY,%DT,X,Y N CTR,OK
"RTN","SDEC12",93,0)
 S DA=SDCL
"RTN","SDEC12",94,0)
 S D0=SDAY
"RTN","SDEC12",95,0)
 S SL=^SC(DA,"SL")
"RTN","SDEC12",96,0)
 S D=$P(SL,U,6),SI=$S(D:D,1:4)
"RTN","SDEC12",97,0)
 S DH=SL*SI\60
"RTN","SDEC12",98,0)
 S STARTDAY=$$GET1^DIQ(44,DA_",",1914) S:STARTDAY="" STARTDAY=8
"RTN","SDEC12",99,0)
 ;build pattern from AVAILABILITY; from SDB0
"RTN","SDEC12",100,0)
 F X=0:0 S X=$O(^SC(DA,"T",D0,2,X)) Q:X'>0  S Y=^(X,0) F D=1:1:DH S Y(Y#100*SI\60+(Y\100*SI)-(STARTDAY*SI)+D)=$S($P(Y,U,2):$E("123456789jklmnopqrstuvwxyz",$P(Y,U,2)),1:0)
"RTN","SDEC12",101,0)
 S (DH,DO,X)=""
"RTN","SDEC12",102,0)
 ;I $D(HSI) I HSI=1!(HSI=2) D CKSI1^SDB0
"RTN","SDEC12",103,0)
 F Y=1:1 S DH=$D(Y(Y)),X=X_$S('DH&DO:"]",'DO&DH:"[",Y#SI=1:"|",1:" ")_$S(DH:Y(Y),1:" "),DO=DH I 'DH,$O(Y(Y))'>0 Q
"RTN","SDEC12",104,0)
 K Y
"RTN","SDEC12",105,0)
 S DH=X,OK=0,CTR=0
"RTN","SDEC12",106,0)
 S D=D0,X=D0,DO=$$FMADD^XLFDT(X,1)
"RTN","SDEC12",107,0)
 S X=D,Y="" D DOW^SDM0 S DOW=Y
"RTN","SDEC12",108,0)
 S ^SC(DA,"ST",X,9)=D,SDREACT=1 S:'$D(^SC(DA,"ST",0)) ^(0)="^44.005DA^^" D B1^SDB1
"RTN","SDEC12",109,0)
 Q
"RTN","SDEC12",110,0)
AVA(CNT,SDCL,SDAY,T1,T2,SDSLOTS,SDAPL)  ;add block to AVAILABILITY
"RTN","SDEC12",111,0)
 N ADF,FM,H1,M1,SDTIME
"RTN","SDEC12",112,0)
 Q:'SDSLOTS
"RTN","SDEC12",113,0)
 S ADF=0
"RTN","SDEC12",114,0)
 I '$D(^SC(SDCL,"T",SDAY,0)) S ^SC(SDCL,"T",SDAY,0)=SDAY S ADF=1
"RTN","SDEC12",115,0)
 S SDTIME=T1
"RTN","SDEC12",116,0)
 F  Q:(SDAY_"."_SDTIME)>(SDAY_"."_T2)  D
"RTN","SDEC12",117,0)
 .S CNT=CNT+1 S ^SC(SDCL,"T",SDAY,2,CNT,0)=SDTIME_"^"_SDSLOTS
"RTN","SDEC12",118,0)
 .S FM=SDAY_"."_SDTIME S FM=$$FMADD^XLFDT(FM,,,SDAPL)
"RTN","SDEC12",119,0)
 .S H1=$E($P(FM,".",2),1,2) S:H1?1N H1=H1_"0"
"RTN","SDEC12",120,0)
 .S M1=$E($P(FM,".",2),3,4) S:M1?1N M1=M1_"0" S:M1="" M1="00"
"RTN","SDEC12",121,0)
 .S SDTIME=H1_M1
"RTN","SDEC12",122,0)
 Q
"RTN","SDEC12",123,0)
 ;
"RTN","SDEC12",124,0)
DEL(SDCL,SDBEG,SDEND)  ;delete AVAILABILITY from file 44
"RTN","SDEC12",125,0)
 N AV,D1,D2,DIK,H1,H2,M1,M2,SDAY,SDI,SDNOD
"RTN","SDEC12",126,0)
 S SDAY=$P(SDBEG,".",1)
"RTN","SDEC12",127,0)
 Q:'$D(^SC(SDCL,"T",SDAY))
"RTN","SDEC12",128,0)
 S H1=$E($P(SDBEG,".",2),1,2) S:H1?1N H1=H1_"0"
"RTN","SDEC12",129,0)
 S M1=$E($P(SDBEG,".",2),3,4) S:M1?1N M1=M1_"0" S:M1="" M1="00"
"RTN","SDEC12",130,0)
 S H2=$E($P(SDEND,".",2),1,2) S:H2?1N H2=H2_"0"
"RTN","SDEC12",131,0)
 S M2=$E($P(SDEND,".",2),3,4) S:M2?1N M2=M2_"0" S:M2="" M2="00"
"RTN","SDEC12",132,0)
 ;array of existing blocks
"RTN","SDEC12",133,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"T",SDAY,2,SDI)) Q:SDI'>0  D
"RTN","SDEC12",134,0)
 .S AV($P($G(^SC(SDCL,"T",SDAY,2,SDI,0)),U,1))=SDI
"RTN","SDEC12",135,0)
 Q:'$D(AV)
"RTN","SDEC12",136,0)
 S D1=$G(AV(H1_M1),1),D2=$G(AV(H2_M2),999)
"RTN","SDEC12",137,0)
 S SDI=D1-1 F  S SDI=$O(^SC(SDCL,"T",SDAY,2,SDI)) Q:SDI'>0  Q:SDI>D2  D
"RTN","SDEC12",138,0)
 .S DIK="^SC("_SDCL_",""T"","_SDAY_",2,"
"RTN","SDEC12",139,0)
 .S DA=SDI
"RTN","SDEC12",140,0)
 .D ^DIK
"RTN","SDEC12",141,0)
 Q
"RTN","SDEC12",142,0)
 ;
"RTN","SDEC12",143,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC12",144,0)
 ;
"RTN","SDEC12",145,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC12",146,0)
 S SDECI=SDECI+1
"RTN","SDEC12",147,0)
 S ^TMP("SDEC",$J,SDECI)="0^"_ERRNO_$C(30)
"RTN","SDEC12",148,0)
 S SDECI=SDECI+1
"RTN","SDEC12",149,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC12",150,0)
 Q
"RTN","SDEC13")
0^15^B12841797^n/a
"RTN","SDEC13",1,0)
SDEC13 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC13",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC13",3,0)
 ;
"RTN","SDEC13",4,0)
 Q
"RTN","SDEC13",5,0)
 ;
"RTN","SDEC13",6,0)
AVDELDT(SDECY,SDECRESD,SDECSTART,SDECEND) ;Cancel availability in a date range
"RTN","SDEC13",7,0)
 ;AVDELDT(SDECY,SDECRESD,SDECSTART,SDECEND)  external parameter tag is in SDEC
"RTN","SDEC13",8,0)
 ;SDECRESD is SDEC RESOURCE ien
"RTN","SDEC13",9,0)
 ;SDECSTART and SDECEND are external dates
"RTN","SDEC13",10,0)
 ;
"RTN","SDEC13",11,0)
 N BMXIEN,SDECI,%DT,X,Y
"RTN","SDEC13",12,0)
 N SDBEG,SDCL,SDEND,SDECNOD
"RTN","SDEC13",13,0)
 S SDECI=0
"RTN","SDEC13",14,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC13",15,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC13",16,0)
 S ^TMP("SDEC",$J,SDECI)="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC13",17,0)
 S X=SDECSTART
"RTN","SDEC13",18,0)
 S %DT="X" D ^%DT
"RTN","SDEC13",19,0)
 I Y=-1 D ERR(0,"AVDELDT-SDEC13: Invalid Start Date") Q
"RTN","SDEC13",20,0)
 S SDECSTART=$P(Y,".")
"RTN","SDEC13",21,0)
 S X=SDECEND
"RTN","SDEC13",22,0)
 S %DT="X" D ^%DT
"RTN","SDEC13",23,0)
 I Y=-1 D ERR(0,"AVDELDT-SDEC13: Invalid End Date") Q
"RTN","SDEC13",24,0)
 S SDECEND=$P(Y,".")_".2359"
"RTN","SDEC13",25,0)
 I '+SDECRESD D ERR(0,"AVDELDT-SDEC13: Invalid Resource ID") Q
"RTN","SDEC13",26,0)
 I $P($P($G(^SDEC(409.831,+SDECRESD,0)),U,11),";",2)'="SC(" D ERR(0,"AVDELDT-SDEC13: Resource is not a Clinic type") Q  ;only add to clinics
"RTN","SDEC13",27,0)
 ;get resource, start, end times
"RTN","SDEC13",28,0)
 S SDCL=$$GET1^DIQ(409.831,SDECRESD_",",.04,"I")
"RTN","SDEC13",29,0)
 ;
"RTN","SDEC13",30,0)
 F  S SDECSTART=$O(^SDEC(409.821,"ARSCT",SDECRESD,SDECSTART)) Q:'+SDECSTART  Q:SDECSTART>SDECEND  D
"RTN","SDEC13",31,0)
 . S BMXIEN=0
"RTN","SDEC13",32,0)
 . F  S BMXIEN=$O(^SDEC(409.821,"ARSCT",SDECRESD,SDECSTART,BMXIEN)) Q:'+BMXIEN  D
"RTN","SDEC13",33,0)
 . . ;get resource, start, end times
"RTN","SDEC13",34,0)
 . . S SDECNOD=$G(^SDEC(409.821,BMXIEN,0))
"RTN","SDEC13",35,0)
 . . S SDBEG=$P(SDECNOD,U,2)
"RTN","SDEC13",36,0)
 . . S SDEND=$P(SDECNOD,U,3)
"RTN","SDEC13",37,0)
 . . D CALLDIK(BMXIEN)
"RTN","SDEC13",38,0)
 . . ;delete AVAILABILITY from file 44
"RTN","SDEC13",39,0)
 . . D DEL^SDEC12(SDCL,SDBEG,SDEND)
"RTN","SDEC13",40,0)
 ;
"RTN","SDEC13",41,0)
 S SDECI=SDECI+1
"RTN","SDEC13",42,0)
 S ^TMP("SDEC",$J,SDECI)="-1^"_$C(30)_$C(31)
"RTN","SDEC13",43,0)
 Q
"RTN","SDEC13",44,0)
ERROR ;
"RTN","SDEC13",45,0)
 D ^%ZTER
"RTN","SDEC13",46,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC13",47,0)
 S SDECI=SDECI+1
"RTN","SDEC13",48,0)
 D ERR(0,"SDEC13 Error")
"RTN","SDEC13",49,0)
 Q
"RTN","SDEC13",50,0)
 ;
"RTN","SDEC13",51,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC13",52,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC13",53,0)
 S SDECI=SDECI+1
"RTN","SDEC13",54,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_$G(ERRTXT)_$C(30)
"RTN","SDEC13",55,0)
 S SDECI=SDECI+1
"RTN","SDEC13",56,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC13",57,0)
 Q
"RTN","SDEC13",58,0)
 ;
"RTN","SDEC13",59,0)
AVDEL(SDECY,SDECAVID) ;Cancel Availability - Deletes Access Block
"RTN","SDEC13",60,0)
 ;AVDEL(SDECY,SDECAVID)  external parameter tag is in SDEC
"RTN","SDEC13",61,0)
 ;Deletes Access block
"RTN","SDEC13",62,0)
 ;SDECAVID is entry number in SDEC ACCESS BLOCK file
"RTN","SDEC13",63,0)
 ;Returns error code in recordset field ERRORID
"RTN","SDEC13",64,0)
 ;
"RTN","SDEC13",65,0)
 N SDECNOD,SDECSTART,DIK,DA,SDECID,SDECI,SDECEND,SDECRSID
"RTN","SDEC13",66,0)
 N SDBEG,SDCL,SDEND,SDRES
"RTN","SDEC13",67,0)
 ;
"RTN","SDEC13",68,0)
 S SDECI=0
"RTN","SDEC13",69,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC13",70,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC13",71,0)
 S ^TMP("SDEC",$J,0)="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC13",72,0)
 I '+SDECAVID D ERR(70) Q
"RTN","SDEC13",73,0)
 I '$D(^SDEC(409.821,SDECAVID,0)) D ERR(70) Q
"RTN","SDEC13",74,0)
 ;get resource, start, end times
"RTN","SDEC13",75,0)
 S SDECNOD=$G(^SDEC(409.821,SDECAVID,0))
"RTN","SDEC13",76,0)
 S SDRES=$P(SDECNOD,U,1)
"RTN","SDEC13",77,0)
 S SDCL=$$GET1^DIQ(409.831,SDRES_",",.04,"I")
"RTN","SDEC13",78,0)
 S SDBEG=$P(SDECNOD,U,2)
"RTN","SDEC13",79,0)
 S SDEND=$P(SDECNOD,U,3)
"RTN","SDEC13",80,0)
 ;
"RTN","SDEC13",81,0)
 ;Delete AVAILABILITY entries
"RTN","SDEC13",82,0)
 D CALLDIK(SDECAVID)
"RTN","SDEC13",83,0)
 ;
"RTN","SDEC13",84,0)
 ;rebuild AVAILABILITY in file 44
"RTN","SDEC13",85,0)
 D AV44^SDEC12($P(SDBEG,".",1),SDCL,SDRES)
"RTN","SDEC13",86,0)
 ;
"RTN","SDEC13",87,0)
 S SDECI=SDECI+1
"RTN","SDEC13",88,0)
 S ^TMP("SDEC",$J,SDECI)="-1^"_$C(30)_$C(31)
"RTN","SDEC13",89,0)
 Q
"RTN","SDEC13",90,0)
 ;
"RTN","SDEC13",91,0)
CALLDIK(SDECAVID) ;
"RTN","SDEC13",92,0)
 ;Delete AVAILABILITY entries
"RTN","SDEC13",93,0)
 ;
"RTN","SDEC13",94,0)
 S DIK="^SDEC(409.821,"
"RTN","SDEC13",95,0)
 S DA=SDECAVID
"RTN","SDEC13",96,0)
 D ^DIK
"RTN","SDEC13",97,0)
 ;
"RTN","SDEC13",98,0)
 Q
"RTN","SDEC13",99,0)
 ;
"RTN","SDEC13",100,0)
APTINBLK(SDECAVID) ;
"RTN","SDEC13",101,0)
 ;
"RTN","SDEC13",102,0)
 ;NOTE: This Subroutine Not called in current version.  Keep code for later use.
"RTN","SDEC13",103,0)
 ;
"RTN","SDEC13",104,0)
 ;N SDECS,SDECID,SDECHIT,SDECNOD,SDECE,SDECSTART,SDECEND,SDECRSID
"RTN","SDEC13",105,0)
 ;S SDECNOD=^SDEC(409.821,SDECAVID,0)
"RTN","SDEC13",106,0)
 ;S SDECSTART=$P(SDECNOD,U,3)
"RTN","SDEC13",107,0)
 ;S SDECEND=$P(SDECNOD,U,4)
"RTN","SDEC13",108,0)
 ;S SDECRSID=$P(SDECNOD,U,1)
"RTN","SDEC13",109,0)
 ;I '$D(^SDECDAPRS("ARSRC",SDECRSID)) Q 0
"RTN","SDEC13",110,0)
 ;;If any appointments start at the AV block start time:
"RTN","SDEC13",111,0)
 ;I $D(^SDECDAPRS("ARSRC",SDECRSID,SDECSTART)) Q 1
"RTN","SDEC13",112,0)
 ;;Find the first appt time SDECS on the same day as the av block
"RTN","SDEC13",113,0)
 ;S SDECS=$O(^SDECDAPRS("ARSRC",SDECRSID,$P(SDECSTART,".")))
"RTN","SDEC13",114,0)
 ;I SDECS>SDECEND Q 0
"RTN","SDEC13",115,0)
 ;;For all the appts that day with start times less
"RTN","SDEC13",116,0)
 ;;than the av block's end time, find any whose end time is
"RTN","SDEC13",117,0)
 ;;greater than the av block's start time
"RTN","SDEC13",118,0)
 ;S SDECHIT=0
"RTN","SDEC13",119,0)
 ;S SDECS=SDECS-.0001
"RTN","SDEC13",120,0)
 ;F  S SDECS=$O(^SDECDAPRS("ARSRC",SDECRSID,SDECS)) Q:'+SDECS  Q:SDECS'<SDECEND  D  Q:SDECHIT
"RTN","SDEC13",121,0)
 ;. S SDECID=0 F  S SDECID=$O(^SDECDAPRS("ARSRC",SDECRSID,SDECS,SDECID)) Q:'+SDECID  D  Q:SDECHIT
"RTN","SDEC13",122,0)
 ;. . Q:'$D(^SDECDAPT(SDECID,0))
"RTN","SDEC13",123,0)
 ;. . S SDECNOD=^SDECDAPT(SDECID,0)
"RTN","SDEC13",124,0)
 ;. . S SDECE=$P(SDECNOD,U,2)
"RTN","SDEC13",125,0)
 ;. . I SDECE>SDECSTART S SDECHIT=1 Q
"RTN","SDEC13",126,0)
 ;;
"RTN","SDEC13",127,0)
 ;I SDECHIT Q 1
"RTN","SDEC13",128,0)
 Q 0
"RTN","SDEC14")
0^16^B7453405^n/a
"RTN","SDEC14",1,0)
SDEC14 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC14",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC14",3,0)
 ;
"RTN","SDEC14",4,0)
 Q
"RTN","SDEC14",5,0)
 ;
"RTN","SDEC14",6,0)
ADDACCTY(SDECY,SDECVAL) ;ADD/EDIT ACCESS TYPE
"RTN","SDEC14",7,0)
 ;ADDACCTY(SDECY,SDECVAL)  external parameter tag is in SDEC
"RTN","SDEC14",8,0)
 ;Add/Edit ACCESS TYPE entry
"RTN","SDEC14",9,0)
 ;INPUT:
"RTN","SDEC14",10,0)
 ; SDECVAL - IEN|NAME|INACTIVE|COLOR|RED|GREEN|BLUE|PREVENT_ACCESS
"RTN","SDEC14",11,0)
 ; IEN      - (optional) Pointer to the SDEC ACCESS TYPE file
"RTN","SDEC14",12,0)
 ;                       a new entry is added if IEN is null
"RTN","SDEC14",13,0)
 ; NAME     - (required if new)    Value to be put into the ACCESS TYPE NAME field
"RTN","SDEC14",14,0)
 ; INACTIVE - (optional) Value to be put into the INACTIVE field
"RTN","SDEC14",15,0)
 ;                       0=active; 1=inactive
"RTN","SDEC14",16,0)
 ; COLOR    - (optional) Value to be put into the DISPLAY COLOR field
"RTN","SDEC14",17,0)
 ; RED      - (optional) Value to be put into the RED field
"RTN","SDEC14",18,0)
 ; GREEN    - (optional) Value to be put into the GREEN field
"RTN","SDEC14",19,0)
 ; BLUE     - (optional) Value to be put into the BLUE field
"RTN","SDEC14",20,0)
 ; PREVENT_ACCESS - (optional) Value to be put into the PREVENT ACCESS field
"RTN","SDEC14",21,0)
 ;                             0=NO; 1=YES
"RTN","SDEC14",22,0)
 ;RETURN:
"RTN","SDEC14",23,0)
 ; SDEC ACCESS TYPE ien
"RTN","SDEC14",24,0)
 ;
"RTN","SDEC14",25,0)
 N SDECIENS,SDECFDA,SDECIEN,SDECINA,SDECMSG,SDEC,SDECNAM,SDECPA
"RTN","SDEC14",26,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC14",27,0)
 K @SDECY
"RTN","SDEC14",28,0)
 S ^TMP("SDEC",$J,0)="I00020ACCESSTYPEID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC14",29,0)
 I SDECVAL="" D ERR(0,"SDEC14: Invalid null input Parameter") Q
"RTN","SDEC14",30,0)
 S SDECIEN=$P(SDECVAL,"|")
"RTN","SDEC14",31,0)
 I +SDECIEN D
"RTN","SDEC14",32,0)
 . S SDEC="EDIT"
"RTN","SDEC14",33,0)
 . S SDECIENS=SDECIEN_","
"RTN","SDEC14",34,0)
 E  D
"RTN","SDEC14",35,0)
 . S SDEC="ADD"
"RTN","SDEC14",36,0)
 . S SDECIENS="+1,"
"RTN","SDEC14",37,0)
 ;
"RTN","SDEC14",38,0)
 S SDECNAM=$P(SDECVAL,"|",2)
"RTN","SDEC14",39,0)
 I SDECNAM="" D ERR(0,"SDEC14: Invalid null Access Type name.") Q
"RTN","SDEC14",40,0)
 ;
"RTN","SDEC14",41,0)
 ;Prevent adding entry with duplicate name
"RTN","SDEC14",42,0)
 I $D(^SDEC(409.823,"B",SDECNAM)),$O(^SDEC(409.823,"B",SDECNAM,0))'=SDECIEN D  Q
"RTN","SDEC14",43,0)
 . D ERR(0,"SDEC14: Cannot have two Access Types with the same name.")
"RTN","SDEC14",44,0)
 . Q
"RTN","SDEC14",45,0)
 ;setup inactive flag
"RTN","SDEC14",46,0)
 S SDECINA=$P(SDECVAL,"|",3)
"RTN","SDEC14",47,0)
 S SDECINA=$S(SDECINA="YES":1,1:0)
"RTN","SDEC14",48,0)
 ;setup prevent access flag
"RTN","SDEC14",49,0)
 S SDECPA=$P(SDECVAL,"|",8)
"RTN","SDEC14",50,0)
 S SDECPA=$S(SDECPA="YES":1,1:0)
"RTN","SDEC14",51,0)
 ;
"RTN","SDEC14",52,0)
 S SDECFDA(409.823,SDECIENS,.01)=$P(SDECVAL,"|",2) ;NAME
"RTN","SDEC14",53,0)
 S SDECFDA(409.823,SDECIENS,.02)=SDECINA ;INACTIVE
"RTN","SDEC14",54,0)
 S SDECFDA(409.823,SDECIENS,.04)=$P(SDECVAL,"|",4) ;COLOR
"RTN","SDEC14",55,0)
 S SDECFDA(409.823,SDECIENS,.05)=$P(SDECVAL,"|",5) ;RED
"RTN","SDEC14",56,0)
 S SDECFDA(409.823,SDECIENS,.06)=$P(SDECVAL,"|",6) ;GREEN
"RTN","SDEC14",57,0)
 S SDECFDA(409.823,SDECIENS,.07)=$P(SDECVAL,"|",7) ;BLUE
"RTN","SDEC14",58,0)
 S SDECFDA(409.823,SDECIENS,.08)=SDECPA  ;PREVENT ACCESS
"RTN","SDEC14",59,0)
 K SDECMSG
"RTN","SDEC14",60,0)
 I SDEC="ADD" D
"RTN","SDEC14",61,0)
 . K SDECIEN
"RTN","SDEC14",62,0)
 . D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC14",63,0)
 . S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC14",64,0)
 E  D
"RTN","SDEC14",65,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC14",66,0)
 S ^TMP("SDEC",$J,1)=$G(SDECIEN)_"^-1"_$C(30)_$C(31)
"RTN","SDEC14",67,0)
 Q
"RTN","SDEC14",68,0)
 ;
"RTN","SDEC14",69,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC14",70,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC14",71,0)
 S SDECI=SDECI+1
"RTN","SDEC14",72,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_ERRTXT_$C(30)
"RTN","SDEC14",73,0)
 S SDECI=SDECI+1
"RTN","SDEC14",74,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC14",75,0)
 Q
"RTN","SDEC14",76,0)
 ;
"RTN","SDEC14",77,0)
ERROR ;
"RTN","SDEC14",78,0)
 D ^%ZTER
"RTN","SDEC14",79,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC14",80,0)
 S SDECI=SDECI+1
"RTN","SDEC14",81,0)
 D ERR(0,"SDEC14 Error")
"RTN","SDEC14",82,0)
 Q
"RTN","SDEC15")
0^17^B4187047^n/a
"RTN","SDEC15",1,0)
SDEC15 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC15",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC15",3,0)
 ;
"RTN","SDEC15",4,0)
 Q
"RTN","SDEC15",5,0)
 ;
"RTN","SDEC15",6,0)
 ;
"RTN","SDEC15",7,0)
ACCGPTYG(SDECY) ;Get access group types
"RTN","SDEC15",8,0)
 ;ACCGPTYG(SDECY)  external parameter tag is in SDEC
"RTN","SDEC15",9,0)
 ;Returns ADO recordset containing ACTIVE Access types ordered alphabetically
"RTN","SDEC15",10,0)
 ;by Access Group
"RTN","SDEC15",11,0)
 ;AccessGroupID, AccessGroup, AccessTypeID, AccessType
"RTN","SDEC15",12,0)
 ;
"RTN","SDEC15",13,0)
 N SDEC0,SDEC1,SDEC2,SDECGPN,SDECI,SDECNOD,SDECTN
"RTN","SDEC15",14,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC15",15,0)
 K @SDECY
"RTN","SDEC15",16,0)
 S SDECI=0
"RTN","SDEC15",17,0)
 S ^TMP("SDEC",$J,SDECI)="I00020ACCESS_GROUP_TYPEID^I00020ACCESS_GROUP_ID^T00030ACCESS_GROUP^I00020ACCESS_TYPE_ID^T00030ACCESS_TYPE"_$C(30)
"RTN","SDEC15",18,0)
 ;
"RTN","SDEC15",19,0)
 ;$O Through "B" x-ref of SDEC ACCESS GROUP file
"RTN","SDEC15",20,0)
 S SDECGPN=0 F  S SDECGPN=$O(^SDEC(409.822,"B",SDECGPN)) Q:SDECGPN=""  D
"RTN","SDEC15",21,0)
 . S SDEC0=$O(^SDEC(409.822,"B",SDECGPN,0))
"RTN","SDEC15",22,0)
 . Q:'+SDEC0
"RTN","SDEC15",23,0)
 . Q:'$D(^SDEC(409.822,SDEC0,0))  ;INDEX VALIDITY CHECK
"RTN","SDEC15",24,0)
 . Q:'$D(^SDEC(409.824,"B",SDEC0))
"RTN","SDEC15",25,0)
 . ;$O through "B" x-ref of SDEC ACCESS GROUP TYPE
"RTN","SDEC15",26,0)
 . S SDEC1=0 F  S SDEC1=$O(^SDEC(409.824,"B",SDEC0,SDEC1)) Q:'+SDEC1  D
"RTN","SDEC15",27,0)
 . . Q:'$D(^SDEC(409.824,SDEC1,0))
"RTN","SDEC15",28,0)
 . . S SDEC2=$P(^SDEC(409.824,SDEC1,0),U,2)
"RTN","SDEC15",29,0)
 . . Q:'+SDEC2
"RTN","SDEC15",30,0)
 . . Q:'$D(^SDEC(409.823,SDEC2,0))
"RTN","SDEC15",31,0)
 . . S SDECNOD=^SDEC(409.823,SDEC2,0)
"RTN","SDEC15",32,0)
 . . Q:$P(SDECNOD,U,2)=1  ;INACTIVE
"RTN","SDEC15",33,0)
 . . S SDECTN=$P(SDECNOD,U)
"RTN","SDEC15",34,0)
 . . S SDECI=SDECI+1
"RTN","SDEC15",35,0)
 . . S ^TMP("SDEC",$J,SDECI)=SDEC1_U_SDEC0_U_SDECGPN_U_SDEC2_U_SDECTN_$C(30)
"RTN","SDEC15",36,0)
 . . Q
"RTN","SDEC15",37,0)
 . Q
"RTN","SDEC15",38,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC15",39,0)
 Q
"RTN","SDEC15",40,0)
 ;
"RTN","SDEC15",41,0)
ERR(SDECI,SDECID,SDECERR) ;Error processing
"RTN","SDEC15",42,0)
 S SDECI=SDECI+1
"RTN","SDEC15",43,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_"^^^^"_$C(30)
"RTN","SDEC15",44,0)
 S SDECI=SDECI+1
"RTN","SDEC15",45,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC15",46,0)
 Q
"RTN","SDEC15",47,0)
 ;
"RTN","SDEC15",48,0)
ETRAP ;EP Error trap entry
"RTN","SDEC15",49,0)
 I '$D(SDECI) N SDECI S SDECI=999
"RTN","SDEC15",50,0)
 S SDECI=SDECI+1
"RTN","SDEC15",51,0)
 D ERR(SDECI,99,70)
"RTN","SDEC15",52,0)
 Q
"RTN","SDEC16")
0^18^B47386290^n/a
"RTN","SDEC16",1,0)
SDEC16 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC16",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC16",3,0)
 ;
"RTN","SDEC16",4,0)
 Q
"RTN","SDEC16",5,0)
 ;
"RTN","SDEC16",6,0)
ADDRES(SDECY,SDECVAL) ;ADD/EDIT RESOURCE
"RTN","SDEC16",7,0)
 ;ADDRES(SDECY,SDECVAL)  external parameter tag is in SDEC
"RTN","SDEC16",8,0)
 ;Add/Edit SDEC RESOURCE entry
"RTN","SDEC16",9,0)
 ;INPUT:
"RTN","SDEC16",10,0)
 ;   SDECVAL - ResourceID|ResourceName|<NOT USED>|HospLocID|TIME_SCALE
"RTN","SDEC16",11,0)
 ;            |LETTER_TEXT|NO_SHOW_LETTER|CANCELLATION_LETTER
"RTN","SDEC16",12,0)
 ;            | INACTIVATEDDT | INACTIVATEDUSR | REACTIVATEDDT
"RTN","SDEC16",13,0)
 ;            | REACTIVATEDUSR | RESOURCETYPE | RESOURCETYPEIEN
"RTN","SDEC16",14,0)
 ;  1. ResourceID - (optional) Pointer to the SDEC RESOURCE file
"RTN","SDEC16",15,0)
 ;                         a new entry is added if IEN is 0
"RTN","SDEC16",16,0)
 ;  2. ResourceName - (required) Value put into the RESOURCE field
"RTN","SDEC16",17,0)
 ;                               of the SDEC RESOURCE file
"RTN","SDEC16",18,0)
 ;  3. NOT USED  INACTIVE This is 'computed' based on inactivation
"RTN","SDEC16",19,0)
 ;                        and reactivation fields
"RTN","SDEC16",20,0)
 ;  4. HospLocID - (required) Hospital Location ID - pointer to the
"RTN","SDEC16",21,0)
 ;                        HOSPITAL LOCATION file 44
"RTN","SDEC16",22,0)
 ;  5. TIME_SCALE - (optional) Value put into the TIME SCALE field
"RTN","SDEC16",23,0)
 ;                             of the SDEC RESOURCE file
"RTN","SDEC16",24,0)
 ;                         Allowed values: 5 10 15 20 30 60
"RTN","SDEC16",25,0)
 ;  6. LETTER_TEXT - (optional) Value converted to Word Processor and
"RTN","SDEC16",26,0)
 ;                            put into the LETTER TEXT field of the
"RTN","SDEC16",27,0)
 ;                            SDEC RESOURCE file
"RTN","SDEC16",28,0)
 ;  7. NO_SHOW_LETTER - (optional) Value converted to Word Processor
"RTN","SDEC16",29,0)
 ;                            and put into the NO SHOW LETTER field of
"RTN","SDEC16",30,0)
 ;                            the SDEC RESOURCE file
"RTN","SDEC16",31,0)
 ;  8. CANCELLATION_LETTER - (optional) Value converted to
"RTN","SDEC16",32,0)
 ;                            Word Processor and put into the CLINIC
"RTN","SDEC16",33,0)
 ;                                    CANCELLATION LETTER field
"RTN","SDEC16",34,0)
 ;                                    of the SDEC RESOURCE file
"RTN","SDEC16",35,0)
 ;  9. DATE/TIME     - (optional) DATE/TIME entered in external format
"RTN","SDEC16",36,0)
 ;                                Defaults to NOW.
"RTN","SDEC16",37,0)
 ; 10. ENTEREDBY     - (optional) Entered by User pointer to NEW PERSON
"RTN","SDEC16",38,0)
 ;                                Defaults to current user
"RTN","SDEC16",39,0)
 ; 11. INACTIVATEDDT - (optional) inactivated Date/Time external format
"RTN","SDEC16",40,0)
 ; 12. INACTIVATEDUSR- (optional) inactivating user pointer to
"RTN","SDEC16",41,0)
 ;                                NEW PERSON file
"RTN","SDEC16",42,0)
 ; 13. REACTIVATEDDT - (optional) reactivated Date/Time external format
"RTN","SDEC16",43,0)
 ; 14. REACTIVATEDUSR- (optional) reactivating user pointer to
"RTN","SDEC16",44,0)
 ;                                NEW PERSON file
"RTN","SDEC16",45,0)
 ; 15. RESOURCETYPE - (required) valid values are:
"RTN","SDEC16",46,0)
 ;                                H for HOSPITAL LOCATION (or clinic)
"RTN","SDEC16",47,0)
 ;                                P for NEW PERSON (Provider)
"RTN","SDEC16",48,0)
 ;                                A for ADDITIONAL RESOURCE
"RTN","SDEC16",49,0)
 ; 16. RESOURCETYPEIEN - (required) pointer to 1 of the following:
"RTN","SDEC16",50,0)
 ;                                HOSPITAL LOCATION file
"RTN","SDEC16",51,0)
 ;                                NEW PERSON file
"RTN","SDEC16",52,0)
 ;                                ADDITIONAL RESOURCE file
"RTN","SDEC16",53,0)
 ;RETURN:
"RTN","SDEC16",54,0)
 ; SDEC RESOURCE ien
"RTN","SDEC16",55,0)
 ;
"RTN","SDEC16",56,0)
 ;
"RTN","SDEC16",57,0)
 N SDECIENS,SDECFDA,SDECIEN,SDECMSG,SDEC,SDECINA,SDECNOTE,SDECNAM
"RTN","SDEC16",58,0)
 N SDEDT,SDEUSR,SDIDT,SDIUSR,SDRDT,SDRUSR,SDREST,SDRESTID
"RTN","SDEC16",59,0)
 N %DT,X,Y
"RTN","SDEC16",60,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC16",61,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC16",62,0)
 S ^TMP("SDEC",$J,0)="I00020RESOURCEID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC16",63,0)
 ; Changed following from a $G = "" to $D check: $G didn't work since SDECVAL is an array. MJL 10/18/2006
"RTN","SDEC16",64,0)
 I SDECVAL="",$D(SDECVAL)<2 D ERR(0,"SDEC16: Invalid null input Parameter") Q
"RTN","SDEC16",65,0)
 ;Unpack array at @XWBARY
"RTN","SDEC16",66,0)
 I SDECVAL="" D
"RTN","SDEC16",67,0)
 . N SDECC S SDECC=0 F  S SDECC=$O(SDECVAL(SDECC)) Q:'SDECC  D
"RTN","SDEC16",68,0)
 . . S SDECVAL=SDECVAL_SDECVAL(SDECC)
"RTN","SDEC16",69,0)
 ;validate ien
"RTN","SDEC16",70,0)
 S SDECIEN=$P(SDECVAL,"|")
"RTN","SDEC16",71,0)
 I SDECIEN'="" I '$D(^SDEC(409.831,+SDECIEN,0)) D ERR(0,"SDEC16: Invalid IEN "_SDECIEN) Q
"RTN","SDEC16",72,0)
 I +SDECIEN D
"RTN","SDEC16",73,0)
 . S SDEC="EDIT"
"RTN","SDEC16",74,0)
 . S SDECIENS=+SDECIEN_","
"RTN","SDEC16",75,0)
 E  D
"RTN","SDEC16",76,0)
 . S SDEC="ADD"
"RTN","SDEC16",77,0)
 . S SDECIENS="+1,"
"RTN","SDEC16",78,0)
 ;validate name
"RTN","SDEC16",79,0)
 S SDECNAM=$P(SDECVAL,"|",2)
"RTN","SDEC16",80,0)
 I SDEC="ADD",SDECNAM="" D ERR(0,"SDEC16: Resource Name is required.")
"RTN","SDEC16",81,0)
 ;Prevent adding entry with duplicate name
"RTN","SDEC16",82,0)
 I $D(^SDEC(409.831,"B",SDECNAM)),$O(^SDEC(409.831,"B",SDECNAM,0))'=SDECIEN D  Q
"RTN","SDEC16",83,0)
 . D ERR(0,"SDEC16: Cannot have two Resources with the same name.")
"RTN","SDEC16",84,0)
 . Q
"RTN","SDEC16",85,0)
 ;validate resource type (required)
"RTN","SDEC16",86,0)
 S SDREST=$P(SDECVAL,"|",15)
"RTN","SDEC16",87,0)
 S SDREST=$S(SDREST="H":"SC(",SDREST="P":"VA(200,",SDREST="A":"SDEC(409.834,",1:"")
"RTN","SDEC16",88,0)
 I SDEC="ADD",SDREST="" D ERR(0,"SDEC16: Invalid resource type "_$P(SDECVAL,"|",15)) Q
"RTN","SDEC16",89,0)
 ;validate resource type ID (required)
"RTN","SDEC16",90,0)
 S SDRESTID=$P(SDECVAL,"|",16)
"RTN","SDEC16",91,0)
 I SDEC="ADD" I '$D(@("^"_SDREST_+SDRESTID_",0)")) D ERR(0,"SDEC16: Invalid resource type ID "_$P(SDECVAL,"|",16)) Q
"RTN","SDEC16",92,0)
 ;validate date/time entered
"RTN","SDEC16",93,0)
 S SDEDT=$P(SDECVAL,"|",9),Y=""
"RTN","SDEC16",94,0)
 I SDEDT'="" S %DT="TX" S X=$G(SDEDT) D ^%DT S SDEDT=Y
"RTN","SDEC16",95,0)
 I Y=-1 D ERR(0,"SDEC16: Invalid date/time entered "_$P(SDECVAL,"|",9)) Q
"RTN","SDEC16",96,0)
 ;validate entered by user
"RTN","SDEC16",97,0)
 S SDEUSR=$P(SDECVAL,"|",10)
"RTN","SDEC16",98,0)
 I SDEUSR'="" I '$D(^VA(200,+SDEUSR,0)) D ERR(0,"SDEC16: Invalid entered by user id "_$P(SDECVAL,"|",10)) Q
"RTN","SDEC16",99,0)
 ;validate inactivation date
"RTN","SDEC16",100,0)
 S SDIDT=$P(SDECVAL,"|",11),Y=""
"RTN","SDEC16",101,0)
 I SDIDT'="" S %DT="TX" S X=$G(SDIDT) D ^%DT S SDIDT=Y
"RTN","SDEC16",102,0)
 I Y=-1 D ERR(0,"SDEC16: Invalid inactivation date "_$P(SDECVAL,"|",11)) Q
"RTN","SDEC16",103,0)
 ;validate inactivation user
"RTN","SDEC16",104,0)
 S SDIUSR=$P(SDECVAL,"|",12)
"RTN","SDEC16",105,0)
 I SDIUSR'="" I '$D(^VA(200,+SDIUSR,0)) D ERR(0,"SDEC16: Invalid inactivation user id "_$P(SDECVAL,"|",12)) Q
"RTN","SDEC16",106,0)
 ;validate reactivation date
"RTN","SDEC16",107,0)
 S SDRDT=$P(SDECVAL,"|",13),Y=""
"RTN","SDEC16",108,0)
 I SDRDT'="" S %DT="TX" S X=$G(SDRDT) D ^%DT S SDRDT=Y
"RTN","SDEC16",109,0)
 I Y=-1 D ERR(0,"SDEC16: Invalid reactivation date "_$P(SDECVAL,"|",13)) Q
"RTN","SDEC16",110,0)
 ;validate reactivation user
"RTN","SDEC16",111,0)
 S SDRUSR=$P(SDECVAL,"|",14)
"RTN","SDEC16",112,0)
 I SDRUSR'="" I '$D(^VA(200,+SDRUSR,0)) D ERR(0,"SDEC16: Invalid reactivation user id "_$P(SDECVAL,"|",14)) Q
"RTN","SDEC16",113,0)
 ;
"RTN","SDEC16",114,0)
 S:$P(SDECVAL,"|",2)'="" SDECFDA(409.831,SDECIENS,.01)=$P(SDECVAL,"|",2) ;NAME
"RTN","SDEC16",115,0)
 I SDRESTID'="",SDREST'="" S SDECFDA(409.831,SDECIENS,.012)=SDRESTID_";"_SDREST   ;resource type
"RTN","SDEC16",116,0)
 I SDEDT'="" S SDECFDA(409.831,SDECIENS,.015)=SDEDT
"RTN","SDEC16",117,0)
 I SDEUSR'="" S SDECFDA(409.831,SDECIENS,.016)=SDEUSR
"RTN","SDEC16",118,0)
 I SDIDT'="" S SDECFDA(409.831,SDECIENS,.021)=SDIDT S SDECFDA(409.831,SDECIENS,.025)=""
"RTN","SDEC16",119,0)
 I SDIUSR'="" S SDECFDA(409.831,SDECIENS,.022)=SDIUSR S SDECFDA(409.831,SDECIENS,.026)=""
"RTN","SDEC16",120,0)
 I SDRDT'="" S SDECFDA(409.831,SDECIENS,.025)=SDRDT
"RTN","SDEC16",121,0)
 I SDRUSR'="" S SDECFDA(409.831,SDECIENS,.026)=SDRUSR
"RTN","SDEC16",122,0)
 I +$P(SDECVAL,"|",5) S SDECFDA(409.831,SDECIENS,.03)=+$P(SDECVAL,"|",5) ;TIME SCALE
"RTN","SDEC16",123,0)
 I +$P(SDECVAL,"|",4) S SDECFDA(409.831,SDECIENS,.04)=$P(SDECVAL,"|",4) ;HOSPITAL LOCATION
"RTN","SDEC16",124,0)
 ;
"RTN","SDEC16",125,0)
 K SDECMSG
"RTN","SDEC16",126,0)
 I SDEC="ADD" D  ;TODO: Check for error
"RTN","SDEC16",127,0)
 . K SDECIEN
"RTN","SDEC16",128,0)
 . D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC16",129,0)
 . S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC16",130,0)
 E  D
"RTN","SDEC16",131,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC16",132,0)
 ;
"RTN","SDEC16",133,0)
 I $P(SDECVAL,"|",2)="@" D RSRCDEL(SDECIEN) G RSRCX
"RTN","SDEC16",134,0)
 ;LETTER TEXT wp field
"RTN","SDEC16",135,0)
 S SDECNOTE=$P(SDECVAL,"|",6)
"RTN","SDEC16",136,0)
 ;
"RTN","SDEC16",137,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC16",138,0)
 I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC16",139,0)
 ;
"RTN","SDEC16",140,0)
 I $D(SDECNOTE(.5)) D
"RTN","SDEC16",141,0)
 . D WP^DIE(409.831,SDECIEN_",",1,"","SDECNOTE","SDECMSG")
"RTN","SDEC16",142,0)
 ;
"RTN","SDEC16",143,0)
 ;NO SHOW LETTER wp fields
"RTN","SDEC16",144,0)
 K SDECNOTE
"RTN","SDEC16",145,0)
 S SDECNOTE=$P(SDECVAL,"|",7)
"RTN","SDEC16",146,0)
 ;
"RTN","SDEC16",147,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC16",148,0)
 I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC16",149,0)
 ;
"RTN","SDEC16",150,0)
 I $D(SDECNOTE(.5)) D
"RTN","SDEC16",151,0)
 . D WP^DIE(409.831,SDECIEN_",",1201,"","SDECNOTE","SDECMSG")
"RTN","SDEC16",152,0)
 ;
"RTN","SDEC16",153,0)
 ;CANCELLATION LETTER wp field
"RTN","SDEC16",154,0)
 K SDECNOTE
"RTN","SDEC16",155,0)
 S SDECNOTE=$P(SDECVAL,"|",8)
"RTN","SDEC16",156,0)
 ;
"RTN","SDEC16",157,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC16",158,0)
 I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC16",159,0)
 ;
"RTN","SDEC16",160,0)
 I $D(SDECNOTE(.5)) D
"RTN","SDEC16",161,0)
 . D WP^DIE(409.831,SDECIEN_",",1301,"","SDECNOTE","SDECMSG")
"RTN","SDEC16",162,0)
 I $$GET1^DIQ(409.831,SDECIEN_",",.02)="YES"   ;computed code calls RESDG^SDEC01B
"RTN","SDEC16",163,0)
RSRCX ;
"RTN","SDEC16",164,0)
 S ^TMP("SDEC",$J,1)=$G(SDECIEN)_"^"_$C(30)_$C(31)
"RTN","SDEC16",165,0)
 Q
"RTN","SDEC16",166,0)
 ;
"RTN","SDEC16",167,0)
RSRCDEL(SDECIEN)  ;delete resource from supporting files
"RTN","SDEC16",168,0)
 N SDECG,SDECH,SDECS,DA,DIE,DR
"RTN","SDEC16",169,0)
 ;remove SDEC RESOURCE from SDEC RESOURCE GROUP(s)
"RTN","SDEC16",170,0)
 S SDECG=""
"RTN","SDEC16",171,0)
 F  S SDECG=$O(^SDEC(409.832,"AB",SDECIEN,SDECG)) Q:SDECG=""  D
"RTN","SDEC16",172,0)
 . S SDECS=""
"RTN","SDEC16",173,0)
 . F  S SDECS=$O(^SDEC(409.832,"AB",SDECIEN,SDECG,SDECS)) Q:SDECS=""  D
"RTN","SDEC16",174,0)
 . . S DIE="^SDEC(409.832,"_SDECG_",1,"
"RTN","SDEC16",175,0)
 . . S DA=SDECS
"RTN","SDEC16",176,0)
 . . S DA(1)=SDECG
"RTN","SDEC16",177,0)
 . . S DR=".01///@"
"RTN","SDEC16",178,0)
 . . D ^DIE
"RTN","SDEC16",179,0)
 ;
"RTN","SDEC16",180,0)
 ;remove SDEC RESOURCE from SDEC RESOURCE USER(s)
"RTN","SDEC16",181,0)
 S SDECG=$O(^SDEC(409.833,"B",SDECIEN,"")) D
"RTN","SDEC16",182,0)
 .I SDECG'="" D
"RTN","SDEC16",183,0)
 ..S DIE=409.833
"RTN","SDEC16",184,0)
 ..S DA=SDECG
"RTN","SDEC16",185,0)
 ..S DR=".01///@"
"RTN","SDEC16",186,0)
 ..D ^DIE
"RTN","SDEC16",187,0)
 ;
"RTN","SDEC16",188,0)
 ;remove appointments that are linked to SDEC RESOURCE in the SDEC APPOINTMENT file
"RTN","SDEC16",189,0)
 S SDECG=""
"RTN","SDEC16",190,0)
 F  S SDECG=$O(^SDEC(409.84,"ARSRC",SDECIEN,SDECG)) Q:SDECG=""  D
"RTN","SDEC16",191,0)
 . S SDECH=""
"RTN","SDEC16",192,0)
 . S SDECH=$O(^SDEC(409.84,"ARSRC",SDECIEN,SDECG,SDECH)) Q:SDECH=""  D
"RTN","SDEC16",193,0)
 . . S DIE=409.84
"RTN","SDEC16",194,0)
 . . S DA=SDECH
"RTN","SDEC16",195,0)
 . . S DR=".01///@"
"RTN","SDEC16",196,0)
 . . D ^DIE
"RTN","SDEC16",197,0)
 ;
"RTN","SDEC16",198,0)
 Q
"RTN","SDEC16",199,0)
 ;
"RTN","SDEC16",200,0)
ERROR ;
"RTN","SDEC16",201,0)
 D ^%ZTER
"RTN","SDEC16",202,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC16",203,0)
 S SDECI=SDECI+1
"RTN","SDEC16",204,0)
 D ERR(0,"SDEC16 Error")
"RTN","SDEC16",205,0)
 Q
"RTN","SDEC16",206,0)
 ;
"RTN","SDEC16",207,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC16",208,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC16",209,0)
 S SDECI=SDECI+1
"RTN","SDEC16",210,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_ERRTXT_$C(30)
"RTN","SDEC16",211,0)
 S SDECI=SDECI+1
"RTN","SDEC16",212,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC16",213,0)
 Q
"RTN","SDEC17")
0^19^B1597668^n/a
"RTN","SDEC17",1,0)
SDEC17 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC17",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC17",3,0)
 ;
"RTN","SDEC17",4,0)
 Q
"RTN","SDEC17",5,0)
 ;
"RTN","SDEC17",6,0)
SCHUSR(SDECY) ;Return recordset of all users in NEW PERSON having SDECZMENU and/or SDECZMGR key
"RTN","SDEC17",7,0)
 ;SCHUSR(SDECY)  external parameter tag is in SDEC
"RTN","SDEC17",8,0)
 ;
"RTN","SDEC17",9,0)
 N SDECDUZ,SDECKEY,SDECI,SDECNAM,SDECKEYN
"RTN","SDEC17",10,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC17",11,0)
 K @SDECY
"RTN","SDEC17",12,0)
 K ^TMP($J,"SDEC17")
"RTN","SDEC17",13,0)
 S SDECI=0
"RTN","SDEC17",14,0)
 S @SDECY@(0)="I00020USERID^T00030USERNAME"_$C(30)
"RTN","SDEC17",15,0)
 ;$O Through ^VA(200,"AB",
"RTN","SDEC17",16,0)
 F SDECKEYN="SDECZMENU","SDECZMGR" S SDECKEY=+$O(^DIC(19.1,"B",SDECKEYN,0)) D
"RTN","SDEC17",17,0)
 . Q:'+SDECKEY  S SDECDUZ=0 F  S SDECDUZ=$O(^VA(200,"AB",SDECKEY,SDECDUZ)) Q:'+SDECDUZ  D
"RTN","SDEC17",18,0)
 . . Q:SDECDUZ<1
"RTN","SDEC17",19,0)
 . . Q:'$D(^VA(200,SDECDUZ,0))
"RTN","SDEC17",20,0)
 . . Q:$D(^TMP($J,"SDEC17",SDECDUZ))
"RTN","SDEC17",21,0)
 . . S SDECNAM=$P(^VA(200,SDECDUZ,0),U)
"RTN","SDEC17",22,0)
 . . S SDECI=SDECI+1
"RTN","SDEC17",23,0)
 . . S ^TMP($J,"SDEC17",SDECDUZ)=""
"RTN","SDEC17",24,0)
 . . S @SDECY@(SDECI)=SDECDUZ_"^"_SDECNAM_$C(30)
"RTN","SDEC17",25,0)
 . . Q
"RTN","SDEC17",26,0)
 . Q
"RTN","SDEC17",27,0)
 ;
"RTN","SDEC17",28,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC17",29,0)
 Q
"RTN","SDEC18")
0^20^B103998587^n/a
"RTN","SDEC18",1,0)
SDEC18 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC18",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC18",3,0)
 ;
"RTN","SDEC18",4,0)
 Q
"RTN","SDEC18",5,0)
 ;
"RTN","SDEC18",6,0)
DELRU(SDECY,SDECIEN) ;Delete Resource User from SDEC RESOURCE USER file
"RTN","SDEC18",7,0)
 ;DELRU(SDECY,SDECIEN)  external parameter tag is in SDEC
"RTN","SDEC18",8,0)
 ;SDECIEN - Resource User ID - Pointer to SDEC RESOURCE USER file
"RTN","SDEC18",9,0)
 ;Deletes entry SDECIEN from RESOURCE USERS file
"RTN","SDEC18",10,0)
 ;Return recordset containing error message or "" if no error
"RTN","SDEC18",11,0)
 ;Called by SDEC DELETE RESOURCEUSER
"RTN","SDEC18",12,0)
 ;
"RTN","SDEC18",13,0)
 N SDECI,DIK,DA
"RTN","SDEC18",14,0)
 S SDECI=0
"RTN","SDEC18",15,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC18",16,0)
 K @SDECY
"RTN","SDEC18",17,0)
 S ^TMP("SDEC",$J,0)="I00020RESOURCEUSERID^I00020ERRORID"_$C(30)
"RTN","SDEC18",18,0)
 I '+SDECIEN D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC18",19,0)
 I '$D(^SDEC(409.833,SDECIEN,0)) D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC18",20,0)
 ;Delete entry SDECIEN
"RTN","SDEC18",21,0)
 S DIK="^SDEC(409.833,"
"RTN","SDEC18",22,0)
 S DA=SDECIEN
"RTN","SDEC18",23,0)
 D ^DIK
"RTN","SDEC18",24,0)
 ;
"RTN","SDEC18",25,0)
 S SDECI=SDECI+1
"RTN","SDEC18",26,0)
 S ^TMP("SDEC",$J,SDECI)=SDECIEN_"^"_"-1"_$C(30)_$C(31)
"RTN","SDEC18",27,0)
 Q
"RTN","SDEC18",28,0)
 ;
"RTN","SDEC18",29,0)
ADDRESU(SDECY,SDECVAL) ;ADD/EDIT RESOURCE USER
"RTN","SDEC18",30,0)
 ;ADDRESU(SDECY,SDECVAL)  external parameter tag is in SDEC
"RTN","SDEC18",31,0)
 ;Add/Edit SDEC RESOURCEUSER entry
"RTN","SDEC18",32,0)
 ;SDECVAL is sResourceUserID|sOverbook|sModifySchedule|ResourceID|UserID|sModifyAppointments|MASTEROVERBOOK
"RTN","SDEC18",33,0)
 ;If IEN=0 Then this is a new ResourceUser entry
"RTN","SDEC18",34,0)
 ; MASTEROVERBOOK = determines if this user has Master Overbook Authority  0="NO"; 1="YES"
"RTN","SDEC18",35,0)
 ;
"RTN","SDEC18",36,0)
 N SDECIENS,SDECFDA,SDECIEN,SDECMSG,SDEC,SDECOVB,SDECMOD,SDECI,SDECUID,SDECRID
"RTN","SDEC18",37,0)
 N SDECRES,SDECRSU,SDECF,SDECAPPT,SDECMOB
"RTN","SDEC18",38,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC18",39,0)
 K @SDECY
"RTN","SDEC18",40,0)
 S SDECI=0
"RTN","SDEC18",41,0)
 S ^TMP("SDEC",$J,SDECI)="I00020RESOURCEID^I00020ERRORID"_$C(30)
"RTN","SDEC18",42,0)
 S SDECIEN=$P(SDECVAL,"|")
"RTN","SDEC18",43,0)
 I +SDECIEN D
"RTN","SDEC18",44,0)
 . S SDEC="EDIT"
"RTN","SDEC18",45,0)
 . S SDECIENS=SDECIEN_","
"RTN","SDEC18",46,0)
 E  D
"RTN","SDEC18",47,0)
 . S SDEC="ADD"
"RTN","SDEC18",48,0)
 . S SDECIENS="+1,"
"RTN","SDEC18",49,0)
 ;
"RTN","SDEC18",50,0)
 I '+$P(SDECVAL,"|",4) D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC18",51,0)
 I '+$P(SDECVAL,"|",5) D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC18",52,0)
 ;
"RTN","SDEC18",53,0)
 S SDECRID=$P(SDECVAL,"|",4) ;ResourceID
"RTN","SDEC18",54,0)
 S SDECUID=$P(SDECVAL,"|",5) ;UserID
"RTN","SDEC18",55,0)
 S SDECRSU=0 ;ResourceUserID
"RTN","SDEC18",56,0)
 S SDECF=0 ;flag
"RTN","SDEC18",57,0)
 ;If this is an add, check if the user is already assigned to the resource.
"RTN","SDEC18",58,0)
 ;If so, then change to an edit
"RTN","SDEC18",59,0)
 I SDEC="ADD" F  S SDECRSU=$O(^SDEC(409.833,"AC",SDECUID,SDECRSU)) Q:'+SDECRSU  D  Q:SDECF
"RTN","SDEC18",60,0)
 . S SDECRES=$G(^SDEC(409.833,SDECRSU,0))
"RTN","SDEC18",61,0)
 . S SDECRES=$P(SDECRES,U) ;ResourceID
"RTN","SDEC18",62,0)
 . S:SDECRES=SDECRID SDECF=1
"RTN","SDEC18",63,0)
 I SDECF S SDEC="EDIT",SDECIEN=SDECRSU,SDECIENS=SDECIEN_","
"RTN","SDEC18",64,0)
 ;
"RTN","SDEC18",65,0)
 S SDECOVB=$P(SDECVAL,"|",2)
"RTN","SDEC18",66,0)
 S SDECOVB=$S(SDECOVB="YES":1,1:0)
"RTN","SDEC18",67,0)
 S SDECMOD=$P(SDECVAL,"|",3)
"RTN","SDEC18",68,0)
 S SDECMOD=$S(SDECMOD="YES":1,1:0)
"RTN","SDEC18",69,0)
 S SDECAPPT=$P(SDECVAL,"|",6)
"RTN","SDEC18",70,0)
 S SDECAPPT=$S(SDECAPPT="YES":1,1:0)
"RTN","SDEC18",71,0)
 S SDECMOB=$P(SDECVAL,"|",7)
"RTN","SDEC18",72,0)
 S SDECMOB=$S(SDECMOB="YES":1,1:0) ;Master Overbook Authority
"RTN","SDEC18",73,0)
 ;
"RTN","SDEC18",74,0)
 S SDECFDA(409.833,SDECIENS,.01)=$P(SDECVAL,"|",4) ;RESOURCE ID
"RTN","SDEC18",75,0)
 S SDECFDA(409.833,SDECIENS,.02)=$P(SDECVAL,"|",5) ;USERID
"RTN","SDEC18",76,0)
 S SDECFDA(409.833,SDECIENS,.03)=SDECOVB ;OVERBOOK
"RTN","SDEC18",77,0)
 S SDECFDA(409.833,SDECIENS,.04)=SDECMOD ;MODIFY SCHEDULE
"RTN","SDEC18",78,0)
 S SDECFDA(409.833,SDECIENS,.05)=SDECAPPT ;ADD, EDIT, DELETE APPOINMENTS
"RTN","SDEC18",79,0)
 S SDECFDA(409.833,SDECIENS,.06)=SDECMOB ;Master Overbook Authority
"RTN","SDEC18",80,0)
 I SDEC="ADD" D
"RTN","SDEC18",81,0)
 . K SDECIEN
"RTN","SDEC18",82,0)
 . D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC18",83,0)
 . S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC18",84,0)
 E  D
"RTN","SDEC18",85,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC18",86,0)
 ;S ^TMP("SDEC",$J,1)=$G(SDECIEN)_"^-1"_$C(31)
"RTN","SDEC18",87,0)
 S ^TMP("SDEC",$J,1)=$C(31)
"RTN","SDEC18",88,0)
 Q
"RTN","SDEC18",89,0)
 ;
"RTN","SDEC18",90,0)
ERR(SDECI,SDECID,SDECERR) ;Error processing
"RTN","SDEC18",91,0)
 S SDECI=SDECI+1
"RTN","SDEC18",92,0)
 S ^TMP("SDEC",$J,SDECI)=SDECID_"^"_SDECERR_$C(30,31)
"RTN","SDEC18",93,0)
 Q
"RTN","SDEC18",94,0)
 ;
"RTN","SDEC18",95,0)
MADERR(SDECMSG) ;
"RTN","SDEC18",96,0)
 W !,SDECMSG
"RTN","SDEC18",97,0)
 Q
"RTN","SDEC18",98,0)
 ;
"RTN","SDEC18",99,0)
MADSCR(SDECDUZ,SDECZMGR,SDECZMENU) ;EP - File 200 screening code for MADDRU
"RTN","SDEC18",100,0)
 ;Called from DIR to screen for scheduling users
"RTN","SDEC18",101,0)
 I $D(^VA(200,SDECDUZ,51,"B",SDECZMENU)) Q 1
"RTN","SDEC18",102,0)
 I $D(^VA(200,SDECDUZ,51,"B",SDECZMGR)) Q 1
"RTN","SDEC18",103,0)
 Q 0
"RTN","SDEC18",104,0)
 ;
"RTN","SDEC18",105,0)
MADDRU ;EP -Command line utility to bulk-add users and set access rights IHS/HMW 20060420 **1**
"RTN","SDEC18",106,0)
 ;Main entry point
"RTN","SDEC18",107,0)
 ;
"RTN","SDEC18",108,0)
 N SDEC,SDECZMENU,SDECZMGR,DIR
"RTN","SDEC18",109,0)
 ;
"RTN","SDEC18",110,0)
 ;INIT
"RTN","SDEC18",111,0)
 K ^TMP($J)
"RTN","SDEC18",112,0)
 S SDECZMENU=$O(^DIC(19.1,"B","SDECZMENU",0)) I '+SDECZMENU D MADERR("Error: SDECZMENU KEY NOT FOUND.") Q
"RTN","SDEC18",113,0)
 S SDECZMGR=$O(^DIC(19.1,"B","SDECZMGR",0)) I '+SDECZMGR D MADERR("Error: SDECZMGR KEY NOT FOUND.") Q
"RTN","SDEC18",114,0)
 ;
"RTN","SDEC18",115,0)
 D MADUSR
"RTN","SDEC18",116,0)
 I '$D(^TMP($J,"SDEC MADDRU","USER")) D MADERR("Cancelled:  No Users selected.") Q
"RTN","SDEC18",117,0)
 D MADRES
"RTN","SDEC18",118,0)
 I '$D(^TMP($J,"SDEC MADDRU","RESOURCE")) D MADERR("Cancelled:  No Resources selected.") Q
"RTN","SDEC18",119,0)
 I '$$MADACC(.SDEC) ;D MADERR("Selected users will have no access to the selected clinics.")
"RTN","SDEC18",120,0)
 I '$$MADCONF(.SDEC) W ! D MADERR("--Cancelled") Q
"RTN","SDEC18",121,0)
 D MADASS(.SDEC)
"RTN","SDEC18",122,0)
 W ! D MADERR("--Done")
"RTN","SDEC18",123,0)
 ;
"RTN","SDEC18",124,0)
 Q
"RTN","SDEC18",125,0)
 ;
"RTN","SDEC18",126,0)
MADUSR ;Prompt for users from file 200 who have SDECUSER key
"RTN","SDEC18",127,0)
 ;Store results in ^TMP($J,"SDEC MADDRU","USER",DUZ) array
"RTN","SDEC18",128,0)
 N DIRUT,Y,DIR
"RTN","SDEC18",129,0)
 S DIR(0)="PO^200:EMZ",DIR("S")="I $$MADSCR^SDEC18(Y,SDECZMGR,SDECZMENU)"
"RTN","SDEC18",130,0)
 S Y=0
"RTN","SDEC18",131,0)
 K ^TMP($J,"SDEC MADDRU","USER")
"RTN","SDEC18",132,0)
 W !!,"-------Select Users-------"
"RTN","SDEC18",133,0)
 F  D ^DIR Q:$G(DIRUT)  Q:'Y  D
"RTN","SDEC18",134,0)
 . S ^TMP($J,"SDEC MADDRU","USER",+Y)=""
"RTN","SDEC18",135,0)
 Q
"RTN","SDEC18",136,0)
 ;
"RTN","SDEC18",137,0)
MADRES ;Prompt for Resources
"RTN","SDEC18",138,0)
 ;Store results in ^TMP($J,"SDEC MADDRU","RESOURCE",ResourceID) array
"RTN","SDEC18",139,0)
 N DIRUT,Y,DIR
"RTN","SDEC18",140,0)
 S DIR(0)="PO^409.831:EMZ"
"RTN","SDEC18",141,0)
 S Y=0
"RTN","SDEC18",142,0)
 K ^TMP($J,"SDEC MADDRU","RESOURCE")
"RTN","SDEC18",143,0)
 W !!,"-------Select Resources-------"
"RTN","SDEC18",144,0)
 F  D ^DIR Q:$G(DIRUT)  Q:'Y  D
"RTN","SDEC18",145,0)
 . S ^TMP($J,"SDEC MADDRU","RESOURCE",+Y)=""
"RTN","SDEC18",146,0)
 Q
"RTN","SDEC18",147,0)
 ;
"RTN","SDEC18",148,0)
MADACC(SDEC) ;Prompt for access level.
"RTN","SDEC18",149,0)
 ;Start with Overbook and go to read-only access.
"RTN","SDEC18",150,0)
 ;Store results in variables for:
"RTN","SDEC18",151,0)
 ;sOverbook, sModifySchedule, sModifyAppointments
"RTN","SDEC18",152,0)
 ;
"RTN","SDEC18",153,0)
 N DIRUT,Y,DIR,J
"RTN","SDEC18",154,0)
 W !!,"-------Select Access Level-------"
"RTN","SDEC18",155,0)
 S Y=0
"RTN","SDEC18",156,0)
 F J="MODIFY","OVERBOOK","WRITE","READ" S SDEC(J)=1
"RTN","SDEC18",157,0)
 S DIR(0)="Y"
"RTN","SDEC18",158,0)
 ;
"RTN","SDEC18",159,0)
 S DIR("A")="Allow users to Modify Clinic Availability"
"RTN","SDEC18",160,0)
 D ^DIR
"RTN","SDEC18",161,0)
 Q:$G(DIRUT) 0
"RTN","SDEC18",162,0)
 Q:Y 1
"RTN","SDEC18",163,0)
 S SDEC("MODIFY")=0
"RTN","SDEC18",164,0)
 ;
"RTN","SDEC18",165,0)
 S DIR("A")="Allow users to Overbook the selected clinics"
"RTN","SDEC18",166,0)
 D ^DIR
"RTN","SDEC18",167,0)
 Q:$G(DIRUT) 0
"RTN","SDEC18",168,0)
 Q:Y 1
"RTN","SDEC18",169,0)
 S SDEC("OVERBOOK")=0
"RTN","SDEC18",170,0)
 ;
"RTN","SDEC18",171,0)
 S DIR("A")="Allow users to Add, Edit and Delete appointments in the selected resources"
"RTN","SDEC18",172,0)
 D ^DIR
"RTN","SDEC18",173,0)
 Q:$G(DIRUT)
"RTN","SDEC18",174,0)
 Q:Y 1
"RTN","SDEC18",175,0)
 S SDEC("WRITE")=0
"RTN","SDEC18",176,0)
 ;
"RTN","SDEC18",177,0)
 S DIR("A")="Allow users to View appointments in the selected resources"
"RTN","SDEC18",178,0)
 D ^DIR
"RTN","SDEC18",179,0)
 Q:$G(DIRUT)
"RTN","SDEC18",180,0)
 Q:Y 1
"RTN","SDEC18",181,0)
 S SDEC("READ")=0
"RTN","SDEC18",182,0)
 ;
"RTN","SDEC18",183,0)
 Q 0
"RTN","SDEC18",184,0)
 ;
"RTN","SDEC18",185,0)
MADCONF(SDEC) ;Confirm selections
"RTN","SDEC18",186,0)
 N DIR,DIRUT,Y
"RTN","SDEC18",187,0)
 S DIR(0)="Y"
"RTN","SDEC18",188,0)
 W !!,"-------Confirm Selections-------"
"RTN","SDEC18",189,0)
 I SDEC("READ")=0 D
"RTN","SDEC18",190,0)
 . S DIR("A")="Are you sure you want to remove all access to these clinics for these users"
"RTN","SDEC18",191,0)
 E  D
"RTN","SDEC18",192,0)
 . W !,"Selected users will be assigned the following access:"
"RTN","SDEC18",193,0)
 . W !,"Modify clinic availability:  ",?50,SDEC("MODIFY")
"RTN","SDEC18",194,0)
 . W !,"Overbook Appointments:  ",?50,SDEC("OVERBOOK")
"RTN","SDEC18",195,0)
 . W !,"Add, Edit and Delete Appointments:  ",?50,SDEC("WRITE")
"RTN","SDEC18",196,0)
 . W !,"View Clinic Appointments:  ",?50,SDEC("READ")
"RTN","SDEC18",197,0)
 . S DIR("A")="Are you sure you want to assign these access rights to the selected users"
"RTN","SDEC18",198,0)
 D ^DIR
"RTN","SDEC18",199,0)
 Q:$G(DIRUT) 0
"RTN","SDEC18",200,0)
 Q:$G(Y) 1
"RTN","SDEC18",201,0)
 Q 0
"RTN","SDEC18",202,0)
 ;
"RTN","SDEC18",203,0)
MADASS(SDEC) ;
"RTN","SDEC18",204,0)
 ;Assign access level to selected users and resources
"RTN","SDEC18",205,0)
 ;Loop through selected users
"RTN","SDEC18",206,0)
 ;. Loop through selected resources
"RTN","SDEC18",207,0)
 ; . . If an entry in ^SDECRSU for this user/resource combination exists, then
"RTN","SDEC18",208,0)
 ; . . . S sResourceUserID = to it
"RTN","SDEC18",209,0)
 ; . . Else
"RTN","SDEC18",210,0)
 ; . . . S sResourceUserID = 0
"RTN","SDEC18",211,0)
 ; . . Call MADFILE
"RTN","SDEC18",212,0)
 N SDECU,SDECR,SDECRUID,SDECVAL
"RTN","SDEC18",213,0)
 S SDECU=0
"RTN","SDEC18",214,0)
 F  S SDECU=$O(^TMP($J,"SDEC MADDRU","USER",SDECU)) Q:'+SDECU  D
"RTN","SDEC18",215,0)
 . S SDECR=0 F  S SDECR=$O(^TMP($J,"SDEC MADDRU","RESOURCE",SDECR)) Q:'+SDECR  D
"RTN","SDEC18",216,0)
 . . S SDECRUID=$$MADEXST(SDECU,SDECR)
"RTN","SDEC18",217,0)
 . . S SDECVAL=SDECRUID_"|"_SDEC("OVERBOOK")_"|"_SDEC("MODIFY")_"|"_SDECR_"|"_SDECU_"|"_SDEC("WRITE")
"RTN","SDEC18",218,0)
 . . I +SDECRUID,SDEC("READ")=0 D MADDEL(SDECRUID)
"RTN","SDEC18",219,0)
 . . Q:SDEC("READ")=0
"RTN","SDEC18",220,0)
 . . D MADFILE(SDECVAL)
"RTN","SDEC18",221,0)
 . . Q
"RTN","SDEC18",222,0)
 . Q
"RTN","SDEC18",223,0)
 Q
"RTN","SDEC18",224,0)
 ;
"RTN","SDEC18",225,0)
MADDEL(SDECRUID) ;
"RTN","SDEC18",226,0)
 ;Delete entry SDECRUID from SDEC RESOURCE USER file
"RTN","SDEC18",227,0)
 N DIK,DA
"RTN","SDEC18",228,0)
 Q:'+SDECRUID
"RTN","SDEC18",229,0)
 Q:'$D(^SDEC(409.833,SDECRUID))
"RTN","SDEC18",230,0)
 S DIK="^SDEC(409.833,"
"RTN","SDEC18",231,0)
 S DA=SDECRUID
"RTN","SDEC18",232,0)
 D ^DIK
"RTN","SDEC18",233,0)
 Q
"RTN","SDEC18",234,0)
 ;
"RTN","SDEC18",235,0)
MADFILE(SDECVAL) ;
"RTN","SDEC18",236,0)
 ;
"RTN","SDEC18",237,0)
 ;Add/Edit SDEC RESOURCEUSER entry
"RTN","SDEC18",238,0)
 ;SDECVAL is sResourceUserID|sOverbook|sModifySchedule|ResourceID|UserID|sModifyAppointments
"RTN","SDEC18",239,0)
 ;If sResourceUserID=0 Then this is a new ResourceUser entry
"RTN","SDEC18",240,0)
 ;
"RTN","SDEC18",241,0)
 N SDECIENS,SDECFDA,SDECIEN,SDECMSG,SDEC,SDECOVB,SDECMOD,SDECI,SDECUID,SDECRID
"RTN","SDEC18",242,0)
 N SDECRES,SDECRSU,SDECF,SDECAPPT
"RTN","SDEC18",243,0)
 S SDECIEN=$P(SDECVAL,"|")
"RTN","SDEC18",244,0)
 I +SDECIEN D
"RTN","SDEC18",245,0)
 . S SDEC="EDIT"
"RTN","SDEC18",246,0)
 . S SDECIENS=SDECIEN_","
"RTN","SDEC18",247,0)
 E  D
"RTN","SDEC18",248,0)
 . S SDEC="ADD"
"RTN","SDEC18",249,0)
 . S SDECIENS="+1,"
"RTN","SDEC18",250,0)
 ;
"RTN","SDEC18",251,0)
 I '+$P(SDECVAL,"|",4) D MADERR("Error in MADFILE^SDEC18: No Resource ID") Q
"RTN","SDEC18",252,0)
 I '+$P(SDECVAL,"|",5) D MADERR("Error in MADFILE^SDEC18: No User ID") Q
"RTN","SDEC18",253,0)
 ;
"RTN","SDEC18",254,0)
 S SDECRID=$P(SDECVAL,"|",4) ;ResourceID
"RTN","SDEC18",255,0)
 S SDECUID=$P(SDECVAL,"|",5) ;UserID
"RTN","SDEC18",256,0)
 S SDECRSU=0 ;ResourceUserID
"RTN","SDEC18",257,0)
 S SDECF=0 ;flag
"RTN","SDEC18",258,0)
 ;If this is an add, check if the user is already assigned to the resource.
"RTN","SDEC18",259,0)
 ;If so, then change to an edit
"RTN","SDEC18",260,0)
 I SDEC="ADD" F  S SDECRSU=$O(^SDEC(409.833,"AC",SDECUID,SDECRSU)) Q:'+SDECRSU  D  Q:SDECF
"RTN","SDEC18",261,0)
 . S SDECRES=$G(^SDEC(409.833,SDECRSU,0))
"RTN","SDEC18",262,0)
 . S SDECRES=$P(SDECRES,U) ;ResourceID
"RTN","SDEC18",263,0)
 . S:SDECRES=SDECRID SDECF=1
"RTN","SDEC18",264,0)
 I SDECF S SDEC="EDIT",SDECIEN=SDECRSU,SDECIENS=SDECIEN_","
"RTN","SDEC18",265,0)
 ;
"RTN","SDEC18",266,0)
 S SDECOVB=$P(SDECVAL,"|",2)
"RTN","SDEC18",267,0)
 S SDECMOD=$P(SDECVAL,"|",3)
"RTN","SDEC18",268,0)
 S SDECAPPT=$P(SDECVAL,"|",6)
"RTN","SDEC18",269,0)
 ;
"RTN","SDEC18",270,0)
 S SDECFDA(409.833,SDECIENS,.01)=$P(SDECVAL,"|",4) ;RESOURCE ID
"RTN","SDEC18",271,0)
 S SDECFDA(409.833,SDECIENS,.02)=$P(SDECVAL,"|",5) ;USERID
"RTN","SDEC18",272,0)
 S SDECFDA(409.833,SDECIENS,.03)=SDECOVB ;OVERBOOK
"RTN","SDEC18",273,0)
 S SDECFDA(409.833,SDECIENS,.04)=SDECMOD ;MODIFY SCHEDULE
"RTN","SDEC18",274,0)
 S SDECFDA(409.833,SDECIENS,.05)=SDECAPPT ;ADD, EDIT, DELETE APPOINMENTS
"RTN","SDEC18",275,0)
 K SDECMSG
"RTN","SDEC18",276,0)
 I SDEC="ADD" D
"RTN","SDEC18",277,0)
 . K SDECIEN
"RTN","SDEC18",278,0)
 . D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC18",279,0)
 . S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC18",280,0)
 E  D
"RTN","SDEC18",281,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC18",282,0)
 Q
"RTN","SDEC18",283,0)
 ;
"RTN","SDEC18",284,0)
MADEXST(SDECU,SDECR) ;
"RTN","SDEC18",285,0)
 ;Returns SDEC RESOURCE USER ID
"RTN","SDEC18",286,0)
 ;if there is a SDEC RESOURCE USER entry for
"RTN","SDEC18",287,0)
 ;user SDECU and resource SDECR
"RTN","SDEC18",288,0)
 ;Otherwise, returns 0
"RTN","SDEC18",289,0)
 ;
"RTN","SDEC18",290,0)
 N SDECID,SDECFOUND,SDECNOD
"RTN","SDEC18",291,0)
 I '$D(^SDEC(409.833,"AC",SDECU)) Q 0
"RTN","SDEC18",292,0)
 S SDECID=0,SDECFOUND=0
"RTN","SDEC18",293,0)
 F  S SDECID=$O(^SDEC(409.833,"AC",SDECU,SDECID)) Q:'+SDECID  D  Q:SDECFOUND
"RTN","SDEC18",294,0)
 . S SDECNOD=$G(^SDEC(409.833,SDECID,0))
"RTN","SDEC18",295,0)
 . I +SDECNOD=SDECR S SDECFOUND=SDECID
"RTN","SDEC18",296,0)
 . Q
"RTN","SDEC18",297,0)
 Q SDECFOUND
"RTN","SDEC18",298,0)
ADDRUXR(SDECR,SDECU)   ;Called from X-ref to add a resource user
"RTN","SDEC18",299,0)
 N IEN,SCIEN,SDECFDA,SDECIENS,SDECIEN,SDECMSG
"RTN","SDEC18",300,0)
 S SCIEN=0 F  S SCIEN=$O(^SDEC(409.831,"ALOC",SDECR,SCIEN)) Q:SCIEN'>0  S TYPE=$$GET1^DIQ(409.831,SCIEN_",",.012,"I") Q:TYPE["SC("
"RTN","SDEC18",301,0)
 I +SCIEN D
"RTN","SDEC18",302,0)
 .S IEN=$O(^SDEC(409.833,"AD",SCIEN,SDECU,""))
"RTN","SDEC18",303,0)
 .;If IEN,person is already in file for this clinic can quit.
"RTN","SDEC18",304,0)
 .I '+IEN D
"RTN","SDEC18",305,0)
 ..S SDECIENS="+1,"
"RTN","SDEC18",306,0)
 ..S SDECFDA(409.833,SDECIENS,.01)=SCIEN ;RESOURCE ID
"RTN","SDEC18",307,0)
 ..S SDECFDA(409.833,SDECIENS,.02)=SDECU ;USERID
"RTN","SDEC18",308,0)
 ..K SDECIEN
"RTN","SDEC18",309,0)
 ..D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC18",310,0)
 ..S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC18",311,0)
 Q
"RTN","SDEC18",312,0)
DELRUXR(SDECR,SDECU)  ;Called from X-ref to delete a resource user
"RTN","SDEC18",313,0)
 N IEN,SCIEN,SDECFDA,SDECIENS,SDECIEN,SDECMSG,TYPE
"RTN","SDEC18",314,0)
 N DA,DIK
"RTN","SDEC18",315,0)
 S SCIEN=0 F  S SCIEN=$O(^SDEC(409.831,"ALOC",SDECR,SCIEN)) Q:SCIEN'>0  S TYPE=$$GET1^DIQ(409.831,SCIEN_",",.012,"I") Q:TYPE["SC("
"RTN","SDEC18",316,0)
 I +SCIEN D
"RTN","SDEC18",317,0)
 .S IEN=$O(^SDEC(409.833,"AD",SCIEN,SDECU,""))
"RTN","SDEC18",318,0)
 .;Only need to delete if person is in file for this clinic
"RTN","SDEC18",319,0)
 .I +IEN D
"RTN","SDEC18",320,0)
 ..;Delete entry SDECIEN
"RTN","SDEC18",321,0)
 ..S DIK="^SDEC(409.833,"
"RTN","SDEC18",322,0)
 ..S DA=IEN
"RTN","SDEC18",323,0)
 ..D ^DIK
"RTN","SDEC18",324,0)
 Q
"RTN","SDEC19")
0^21^B8445487^n/a
"RTN","SDEC19",1,0)
SDEC19 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC19",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC19",3,0)
 ;
"RTN","SDEC19",4,0)
 Q
"RTN","SDEC19",5,0)
 ;
"RTN","SDEC19",6,0)
ADDRG(SDECY,SDECVAL) ;ADD/EDIT RESOURCE GROUP
"RTN","SDEC19",7,0)
 ;ADDRG(SDECY,SDECVAL)  external parameter tag is in SDEC
"RTN","SDEC19",8,0)
 ;Add a new SDEC RESOURCE GROUP entry
"RTN","SDEC19",9,0)
 ;INPUT:
"RTN","SDEC19",10,0)
 ; SDECVAL - IEN | NAME
"RTN","SDEC19",11,0)
 ;           IEN  = (integer) Resource Group ID - Pointer to the SDEC RESOURCE GROUP file
"RTN","SDEC19",12,0)
 ;           NAME = (text)    Value to be put into the NAME field of the SDEC RESOURCE GROUP file
"RTN","SDEC19",13,0)
 ;RETURN:
"RTN","SDEC19",14,0)
 ;  IEN of added/edited entry or 0 if error
"RTN","SDEC19",15,0)
 ;
"RTN","SDEC19",16,0)
 N SDECIENS,SDECFDA,SDECMSG,SDECIEN,SDEC,SDECNAM
"RTN","SDEC19",17,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC19",18,0)
 K @SDECY
"RTN","SDEC19",19,0)
 S ^TMP("SDEC",$J,0)="I00020RESOURCEGROUPID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC19",20,0)
 I SDECVAL="" D ERR(0,"SDEC19: Invalid null input Parameter") Q
"RTN","SDEC19",21,0)
 S SDECIEN=$P(SDECVAL,"|")
"RTN","SDEC19",22,0)
 I SDECIEN'="" I '$D(^SDEC(409.832,SDECIEN,0)) D ERR(0,"SDEC19: Invalid Resource Group ID.")
"RTN","SDEC19",23,0)
 S SDECNAM=$P(SDECVAL,"|",2)
"RTN","SDEC19",24,0)
 I +SDECIEN D
"RTN","SDEC19",25,0)
 . S SDEC="EDIT"
"RTN","SDEC19",26,0)
 . S SDECIENS=SDECIEN_","
"RTN","SDEC19",27,0)
 E  D
"RTN","SDEC19",28,0)
 . S SDEC="ADD"
"RTN","SDEC19",29,0)
 . S SDECIENS="+1,"
"RTN","SDEC19",30,0)
 I SDEC="ADD",SDECNAM="" D ERR(0,"SDEC16: Resource Group ID is required.") ;name required for ADD
"RTN","SDEC19",31,0)
 ;
"RTN","SDEC19",32,0)
 ;Prevent adding entry with duplicate name
"RTN","SDEC19",33,0)
 I SDECNAM'="",$D(^SDEC(409.832,"B",SDECNAM)),$O(^SDEC(409.832,"B",SDECNAM,0))'=SDECIEN D  Q
"RTN","SDEC19",34,0)
 . D ERR(0,"SDEC19: Cannot have two Resource Groups with the same name.")
"RTN","SDEC19",35,0)
 . Q
"RTN","SDEC19",36,0)
 ;
"RTN","SDEC19",37,0)
 S SDECFDA(409.832,SDECIENS,.01)=SDECNAM ;NAME
"RTN","SDEC19",38,0)
 I SDEC="ADD" D
"RTN","SDEC19",39,0)
 . K SDECIEN
"RTN","SDEC19",40,0)
 . D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC19",41,0)
 . S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC19",42,0)
 E  D
"RTN","SDEC19",43,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC19",44,0)
 S ^TMP("SDEC",$J,1)=$G(SDECIEN)_"^"_$C(30)_$C(31)
"RTN","SDEC19",45,0)
 Q
"RTN","SDEC19",46,0)
 ;
"RTN","SDEC19",47,0)
DELRESGP(SDECY,SDECGRP) ;Deletes entry name SDECGRP from SDEC RESOURCE GROUP file
"RTN","SDEC19",48,0)
 ;DELRESGP(SDECY,SDECGRP)  external parameter tag is in SDEC
"RTN","SDEC19",49,0)
 ;Return recordset containing error message or "" if no error
"RTN","SDEC19",50,0)
 ;
"RTN","SDEC19",51,0)
 N SDECI,DIK,DA,SDECIEN
"RTN","SDEC19",52,0)
 S SDECI=0
"RTN","SDEC19",53,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC19",54,0)
 K @SDECY
"RTN","SDEC19",55,0)
 S ^TMP("SDEC",$J,0)="I00020RESOURCEGROUPID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC19",56,0)
 I SDECGRP="" D ERR(0,"DELRG~SDEC19: Invalid null Resource Group Name") Q
"RTN","SDEC19",57,0)
 S SDECIEN=$O(^SDEC(409.832,"B",SDECGRP,0))
"RTN","SDEC19",58,0)
 I '+SDECIEN D ERR(0,"DELRG~SDEC19: Invalid Resource Group Name") Q
"RTN","SDEC19",59,0)
 I '$D(^SDEC(409.832,SDECIEN,0)) D ERR(0,"DELRG~SDEC19: Invalid Resource Group IEN") Q
"RTN","SDEC19",60,0)
 ;Delete entry SDECIEN
"RTN","SDEC19",61,0)
 S DIK="^SDEC(409.832,"
"RTN","SDEC19",62,0)
 S DA=SDECIEN
"RTN","SDEC19",63,0)
 D ^DIK
"RTN","SDEC19",64,0)
 ;
"RTN","SDEC19",65,0)
 S SDECI=SDECI+1
"RTN","SDEC19",66,0)
 S ^TMP("SDEC",$J,SDECI)=SDECIEN_"^"_$C(30)_$C(31)
"RTN","SDEC19",67,0)
 Q
"RTN","SDEC19",68,0)
 ;
"RTN","SDEC19",69,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC19",70,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC19",71,0)
 S SDECI=SDECI+1
"RTN","SDEC19",72,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_ERRTXT_$C(30)
"RTN","SDEC19",73,0)
 S SDECI=SDECI+1
"RTN","SDEC19",74,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC19",75,0)
 Q
"RTN","SDEC19",76,0)
 ;
"RTN","SDEC19",77,0)
ERROR ;
"RTN","SDEC19",78,0)
 D ^%ZTER
"RTN","SDEC19",79,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC19",80,0)
 S SDECI=SDECI+1
"RTN","SDEC19",81,0)
 D ERR(0,"SDEC19 Error")
"RTN","SDEC19",82,0)
 Q
"RTN","SDEC20")
0^22^B5301458^n/a
"RTN","SDEC20",1,0)
SDEC20 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC20",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC20",3,0)
 ;
"RTN","SDEC20",4,0)
 Q
"RTN","SDEC20",5,0)
 ;
"RTN","SDEC20",6,0)
DELRGI(SDECY,SDECIEN,SDECIEN1) ;Deletes entry SDECIEN1 from entry SDECIEN in the SDEC RESOURCE GROUP file
"RTN","SDEC20",7,0)
 ;DELRGI(SDECY,SDECIEN,SDECIEN1)  external parameter tag is in SDEC
"RTN","SDEC20",8,0)
 ;Return recordset containing error message or "" if no error
"RTN","SDEC20",9,0)
 ;SDECIEN  - Resource Group Id - Pointer to SDEC RESOURCE GROUP file
"RTN","SDEC20",10,0)
 ;SDECIEN1 - Resource ID - Pointer to SDEC RESOURCE file
"RTN","SDEC20",11,0)
 ;Called by SDEC DELETE RES GROUP ITEM
"RTN","SDEC20",12,0)
 ;
"RTN","SDEC20",13,0)
 N SDECI,SDFDA,DA
"RTN","SDEC20",14,0)
 S SDECI=0
"RTN","SDEC20",15,0)
 S SDECY="^TMP(""SDEC20"","_$J_",""DELRGI"")"
"RTN","SDEC20",16,0)
 K @SDECY
"RTN","SDEC20",17,0)
 S @SDECY@(0)="I00020RESOURCEGROUPID^I00020ERRORID"_$C(30)
"RTN","SDEC20",18,0)
 I '+SDECIEN D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",19,0)
 I '+SDECIEN1 D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",20,0)
 S DA=$O(^SDEC(409.832,SDECIEN,1,"B",SDECIEN1,0))
"RTN","SDEC20",21,0)
 G:DA="" XIT
"RTN","SDEC20",22,0)
 I '$D(^SDEC(409.832,SDECIEN,1,DA,0)) D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",23,0)
 ;
"RTN","SDEC20",24,0)
 ;Delete entry SDECIEN1
"RTN","SDEC20",25,0)
 S SDFDA(409.8321,DA_","_SDECIEN_",",.01)="@"
"RTN","SDEC20",26,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDEC20",27,0)
XIT ;
"RTN","SDEC20",28,0)
 S SDECI=SDECI+1
"RTN","SDEC20",29,0)
 S @SDECY@(SDECI)=SDECIEN_"^"_"0"_$C(30)_$C(31)
"RTN","SDEC20",30,0)
 Q
"RTN","SDEC20",31,0)
 ;
"RTN","SDEC20",32,0)
ADDRGI(SDECY,SDECIEN,SDECIEN1) ;Adds RESOURCEID to RESOURCE GROUP entry SDECIEN
"RTN","SDEC20",33,0)
 ;ADDRGI(SDECY,SDECIEN,SDECIEN1)  external parameter tag is in SDEC
"RTN","SDEC20",34,0)
 ;INPUT:
"RTN","SDEC20",35,0)
 ; SDECIEN  - (required) Resource Group ID - pointer to the SDEC RESOURCE GROUP file
"RTN","SDEC20",36,0)
 ; SDECIEN1 - (required) Resource ID - pointer to the SDEC RESOURCE file
"RTN","SDEC20",37,0)
 ;RETURN:
"RTN","SDEC20",38,0)
 ; Recordset containing added subentry number error message or "" if no error
"RTN","SDEC20",39,0)
 ;
"RTN","SDEC20",40,0)
 N SDECI,SDECIENS,SDECMSG,SDECFDA
"RTN","SDEC20",41,0)
 S SDECI=0
"RTN","SDEC20",42,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC20",43,0)
 K @SDECY
"RTN","SDEC20",44,0)
 S ^TMP("SDEC",$J,0)="I00020RESOURCEGROUPITEMID^I00020ERRORID"_$C(30)
"RTN","SDEC20",45,0)
 I '+SDECIEN D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",46,0)
 I '+SDECIEN1 D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",47,0)
 I '$D(^SDEC(409.832,SDECIEN,0)) D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",48,0)
 I '$D(^SDEC(409.831,SDECIEN1,0)) D ERR(SDECI,SDECIEN1,70) Q
"RTN","SDEC20",49,0)
 I $D(^SDEC(409.832,SDECIEN,1,"B",SDECIEN1)) D ERR(SDECI,0,0) Q
"RTN","SDEC20",50,0)
 ;^SDEC(409.832,3,1,"B",3,1)=
"RTN","SDEC20",51,0)
 ;
"RTN","SDEC20",52,0)
 S SDECIENS="+1,"_SDECIEN_","
"RTN","SDEC20",53,0)
 S SDECFDA(409.8321,SDECIENS,.01)=SDECIEN1 ;RESOURCEID
"RTN","SDEC20",54,0)
 K SDECIEN
"RTN","SDEC20",55,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC20",56,0)
 S SDECI=SDECI+1
"RTN","SDEC20",57,0)
 S ^TMP("SDEC",$J,SDECI)=+$G(SDECIEN(1))_"^"_"-1"_$C(30)_$C(31)
"RTN","SDEC20",58,0)
 Q
"RTN","SDEC20",59,0)
 ;
"RTN","SDEC20",60,0)
ERR(SDECI,SDECID,SDECERR) ;Error processing
"RTN","SDEC20",61,0)
 S SDECI=SDECI+1
"RTN","SDEC20",62,0)
 S ^TMP("SDEC",$J,SDECI)=SDECID_"^"_SDECERR_$C(30)
"RTN","SDEC20",63,0)
 S SDECI=SDECI+1
"RTN","SDEC20",64,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC20",65,0)
 Q
"RTN","SDEC20",66,0)
 ;
"RTN","SDEC20",67,0)
ETRAP ;EP Error trap entry
"RTN","SDEC20",68,0)
 I '$D(SDECI) N SDECI S SDECI=999
"RTN","SDEC20",69,0)
 S SDECI=SDECI+1
"RTN","SDEC20",70,0)
 D ERR(SDECI,99,70)
"RTN","SDEC20",71,0)
 Q
"RTN","SDEC21")
0^23^B7740640^n/a
"RTN","SDEC21",1,0)
SDEC21 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC21",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC21",3,0)
 ;
"RTN","SDEC21",4,0)
 Q
"RTN","SDEC21",5,0)
 ;
"RTN","SDEC21",6,0)
ADDACCG(SDECY,SDECVAL) ;ADD/EDIT ACCESS GROUP
"RTN","SDEC21",7,0)
 ;ADDACCG(SDECY,SDECVAL)  external parameter tag is in SDEC
"RTN","SDEC21",8,0)
 ;Add a new SDEC ACCESS GROUP entry
"RTN","SDEC21",9,0)
 ;INPUT:
"RTN","SDEC21",10,0)
 ; SDECVAL - Access Group IEN and Name separated by pipe |  <IEN>|<name>
"RTN","SDEC21",11,0)
 ;        Access Group IEN  - (integer) pointer to the SDEC ACCESS GROUP file
"RTN","SDEC21",12,0)
 ;                                      a new entry will be added if null
"RTN","SDEC21",13,0)
 ;        Access Group name - (text)    value to be put into the NAME field of
"RTN","SDEC21",14,0)
 ;                                      the SDEC ACCESS GROUP FILE
"RTN","SDEC21",15,0)
 ;RETURN:
"RTN","SDEC21",16,0)
 ; Access Group IEN
"RTN","SDEC21",17,0)
 ;
"RTN","SDEC21",18,0)
 N SDECIENS,SDECFDA,SDECMSG,SDECIEN,SDEC,SDECNAM
"RTN","SDEC21",19,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC21",20,0)
 K @SDECY
"RTN","SDEC21",21,0)
 S ^TMP("SDEC",$J,0)="I00020ACCESSGROUPID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC21",22,0)
 I SDECVAL="" D ERR(0,"SDEC21: Invalid null input Parameter") Q
"RTN","SDEC21",23,0)
 S SDECIEN=$P(SDECVAL,"|")
"RTN","SDEC21",24,0)
 S SDECNAM=$P(SDECVAL,"|",2)
"RTN","SDEC21",25,0)
 I +SDECIEN D
"RTN","SDEC21",26,0)
 . S SDEC="EDIT"
"RTN","SDEC21",27,0)
 . S SDECIENS=SDECIEN_","
"RTN","SDEC21",28,0)
 E  D
"RTN","SDEC21",29,0)
 . S SDEC="ADD"
"RTN","SDEC21",30,0)
 . S SDECIENS="+1,"
"RTN","SDEC21",31,0)
 ;
"RTN","SDEC21",32,0)
 S SDECNAM=$P(SDECVAL,"|",2)
"RTN","SDEC21",33,0)
 I SDECNAM="" D ERR(0,"SDEC14: Invalid null Access Type name.") Q
"RTN","SDEC21",34,0)
 ;
"RTN","SDEC21",35,0)
 ;Prevent adding entry with duplicate name
"RTN","SDEC21",36,0)
 I $D(^SDEC(409.822,"B",SDECNAM)),$O(^SDEC(409.822,"B",SDECNAM,0))'=SDECIEN D  Q
"RTN","SDEC21",37,0)
 . D ERR(0,"SDEC21: Cannot have two Access Groups with the same name.")
"RTN","SDEC21",38,0)
 . Q
"RTN","SDEC21",39,0)
 ;
"RTN","SDEC21",40,0)
 S SDECFDA(409.822,SDECIENS,.01)=SDECNAM ;NAME
"RTN","SDEC21",41,0)
 I SDEC="ADD" D
"RTN","SDEC21",42,0)
 . K SDECIEN
"RTN","SDEC21",43,0)
 . D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC21",44,0)
 . S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC21",45,0)
 E  D
"RTN","SDEC21",46,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC21",47,0)
 S ^TMP("SDEC",$J,1)=$G(SDECIEN)_"^"_$C(30)_$C(31)
"RTN","SDEC21",48,0)
 Q
"RTN","SDEC21",49,0)
 ;
"RTN","SDEC21",50,0)
DELAG(SDECY,SDECGRP) ;Deletes entry having IEN SDECGRP from SDEC ACCESS GROUP file
"RTN","SDEC21",51,0)
 ;DELAG(SDECY,SDECGRP)  external parameter tag is in SDEC
"RTN","SDEC21",52,0)
 ;Also deletes all entries in SDEC ACCESS GROUP TYPE that point to this group
"RTN","SDEC21",53,0)
 ;Return recordset containing error message or "" if no error
"RTN","SDEC21",54,0)
 ;Called by SDEC DELETE ACCESS GROUP
"RTN","SDEC21",55,0)
 ;
"RTN","SDEC21",56,0)
 N SDECI,DIK,DA,SDECIEN,SDECIEN1
"RTN","SDEC21",57,0)
 S SDECI=0
"RTN","SDEC21",58,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC21",59,0)
 K @SDECY
"RTN","SDEC21",60,0)
 S ^TMP("SDEC",$J,0)="I00020ACCESSGROUPID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC21",61,0)
 S SDECIEN=SDECGRP
"RTN","SDEC21",62,0)
 I '+SDECIEN D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC21",63,0)
 I '$D(^SDEC(409.822,SDECIEN,0)) D ERR(0,"SDEC14: Invalid Access Group ID name.") Q
"RTN","SDEC21",64,0)
 ;
"RTN","SDEC21",65,0)
 ;Delete SDECACCESS GROUP TYPE entries
"RTN","SDEC21",66,0)
 ;
"RTN","SDEC21",67,0)
 S SDECIEN1=0 F  S SDECIEN1=$O(^SDEC(409.824,"B",SDECIEN,SDECIEN1)) Q:'SDECIEN1  D
"RTN","SDEC21",68,0)
 . S DIK="^SDEC(409.824,"
"RTN","SDEC21",69,0)
 . S DA=SDECIEN1
"RTN","SDEC21",70,0)
 . D ^DIK
"RTN","SDEC21",71,0)
 . Q
"RTN","SDEC21",72,0)
 ;
"RTN","SDEC21",73,0)
 ;Delete entry SDECIEN in SDEC ACCESS GROUP
"RTN","SDEC21",74,0)
 S DIK="^SDEC(409.822,"
"RTN","SDEC21",75,0)
 S DA=SDECIEN
"RTN","SDEC21",76,0)
 D ^DIK
"RTN","SDEC21",77,0)
 ;
"RTN","SDEC21",78,0)
 S SDECI=SDECI+1
"RTN","SDEC21",79,0)
 S ^TMP("SDEC",$J,SDECI)=SDECIEN_"^"_""_$C(30)_$C(31)
"RTN","SDEC21",80,0)
 Q
"RTN","SDEC21",81,0)
 ;
"RTN","SDEC21",82,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC21",83,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC21",84,0)
 S SDECI=SDECI+1
"RTN","SDEC21",85,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_ERRTXT_$C(30,31)
"RTN","SDEC21",86,0)
 Q
"RTN","SDEC21",87,0)
 ;
"RTN","SDEC21",88,0)
ERROR ;
"RTN","SDEC21",89,0)
 D ^%ZTER
"RTN","SDEC21",90,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC21",91,0)
 S SDECI=SDECI+1
"RTN","SDEC21",92,0)
 D ERR(0,"SDEC21 Error")
"RTN","SDEC21",93,0)
 Q
"RTN","SDEC22")
0^24^B7903904^n/a
"RTN","SDEC22",1,0)
SDEC22 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC22",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC22",3,0)
 ;
"RTN","SDEC22",4,0)
 Q
"RTN","SDEC22",5,0)
 ;
"RTN","SDEC22",6,0)
DELAGI(SDECY,SDECIEN,SDECIEN1) ;Deletes entry having Access Group SDECIEN and Access Type SDECIEN1 the SDEC ACCESS GROUP TYPE file
"RTN","SDEC22",7,0)
 ;DELAGI(SDECY,SDECIEN,SDECIEN1)  external parameter tag is in SDEC
"RTN","SDEC22",8,0)
 ;INPUT:
"RTN","SDEC22",9,0)
 ; SDECIEN  - Access group ID pointer to SDEC ACCESS GROUP file
"RTN","SDEC22",10,0)
 ; SDECIEN1 - Access Type ID pointer to SDEC ACCESS TYPE file
"RTN","SDEC22",11,0)
 ;Return recordset containing error message or "" if no error
"RTN","SDEC22",12,0)
 ;
"RTN","SDEC22",13,0)
 N SDECI,DIK,DA,SDECIEN2,SDI
"RTN","SDEC22",14,0)
 S SDECI=0
"RTN","SDEC22",15,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC22",16,0)
 K @SDECY
"RTN","SDEC22",17,0)
 S ^TMP("SDEC",$J,0)="I00020ACCESSGROUPTYPEID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC22",18,0)
 I '+SDECIEN D ERR(0,"SDEC22: Invalid Access Group ID") Q
"RTN","SDEC22",19,0)
 I '+SDECIEN1 D ERR(0,"SDEC22: Invalid Access Type ID") Q
"RTN","SDEC22",20,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.824,"B",SDECIEN,SDI)) Q:SDI'>0  D
"RTN","SDEC22",21,0)
 .S SDECIEN2=$$GET1^DIQ(409.824,SDI_",",.02,"I")
"RTN","SDEC22",22,0)
 .I SDECIEN2=SDECIEN1 D
"RTN","SDEC22",23,0)
 ..;Delete entry
"RTN","SDEC22",24,0)
 ..S DIK="^SDEC(409.824,"
"RTN","SDEC22",25,0)
 ..S DA=SDI
"RTN","SDEC22",26,0)
 ..D ^DIK
"RTN","SDEC22",27,0)
 S SDECI=SDECI+1
"RTN","SDEC22",28,0)
 S ^TMP("SDEC",$J,SDECI)=SDECIEN2_"^"_"-1"_$C(30)_$C(31)
"RTN","SDEC22",29,0)
 Q
"RTN","SDEC22",30,0)
 ;
"RTN","SDEC22",31,0)
ADDAGI(SDECY,SDECIEN,SDECIEN1) ;Add access group item - Adds SDEC ACCESS GROUP TYPE file entry
"RTN","SDEC22",32,0)
 ;ADDAGI(SDECY,SDECIEN,SDECIEN1)  external parameter tag is in SDEC
"RTN","SDEC22",33,0)
 ;INPUT:
"RTN","SDEC22",34,0)
 ;  SDECIEN  Access Group pointer to the SDEC ACCESS GROUP file
"RTN","SDEC22",35,0)
 ;  SDECIEN1 Access Type pointer to the SDEC ACCESS TYPE file
"RTN","SDEC22",36,0)
 ;Adds SDEC ACCESS GROUP TYPE file entry having access group SDECIEN and access type SDECIEN1
"RTN","SDEC22",37,0)
 ;RETURN:
"RTN","SDEC22",38,0)
 ;  recordset containing added entry number error message or "" if no error
"RTN","SDEC22",39,0)
 ;
"RTN","SDEC22",40,0)
 N SDECI,SDECIEN2,SDECIENS,SDECMSG,SDECFDA,SDFOUND
"RTN","SDEC22",41,0)
 S (SDECI,SDFOUND)=0
"RTN","SDEC22",42,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC22",43,0)
 K @SDECY
"RTN","SDEC22",44,0)
 ;S ^TMP("SDEC",$J,0)="I00020ACCESSGROUPTYPEID^I00020ERRORID"_$C(30)
"RTN","SDEC22",45,0)
 S ^TMP("SDEC",$J,0)="I00020ACCESSGROUPTYPEID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC22",46,0)
 I '+SDECIEN D ERR(0,"SDEC22: Invalid null Access Group ID") Q
"RTN","SDEC22",47,0)
 I '+SDECIEN1 D ERR(0,"SDEC22: Invalid null Access Type ID") Q
"RTN","SDEC22",48,0)
 I '$D(^SDEC(409.822,SDECIEN,0)) D ERR(0,"SDEC22: Invalid Access Group ID") Q
"RTN","SDEC22",49,0)
 I '$D(^SDEC(409.823,SDECIEN1,0)) D ERR(0,"SDEC22: Invalid Access Type ID") Q
"RTN","SDEC22",50,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.824,"B",SDECIEN,SDI)) Q:SDI'>0  D  Q:SDFOUND=1
"RTN","SDEC22",51,0)
 .S SDECIEN2=$$GET1^DIQ(409.824,SDI_",",.02,"I")
"RTN","SDEC22",52,0)
 .I SDECIEN2=SDECIEN1 S SDFOUND=1 S ^TMP("SDEC",$J,SDECI+1)=+SDECIENS_"^"_$C(30)_$C(31)
"RTN","SDEC22",53,0)
 Q:SDFOUND=1
"RTN","SDEC22",54,0)
 S SDECIENS="+1,"
"RTN","SDEC22",55,0)
 S SDECFDA(409.824,SDECIENS,.01)=SDECIEN ;ACCESS GROUP ID
"RTN","SDEC22",56,0)
 S SDECFDA(409.824,SDECIENS,.02)=SDECIEN1 ;ACCESS TYPE ID
"RTN","SDEC22",57,0)
 K SDECIEN
"RTN","SDEC22",58,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC22",59,0)
 S SDECI=SDECI+1
"RTN","SDEC22",60,0)
 S ^TMP("SDEC",$J,SDECI)=+$G(SDECIEN(1))_"^"_$C(30)_$C(31)
"RTN","SDEC22",61,0)
 Q
"RTN","SDEC22",62,0)
 ;
"RTN","SDEC22",63,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC22",64,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC22",65,0)
 S SDECI=SDECI+1
"RTN","SDEC22",66,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_ERRTXT_$C(30)
"RTN","SDEC22",67,0)
 S SDECI=SDECI+1
"RTN","SDEC22",68,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC22",69,0)
 Q
"RTN","SDEC22",70,0)
 ;
"RTN","SDEC22",71,0)
ERROR ;
"RTN","SDEC22",72,0)
 D ^%ZTER
"RTN","SDEC22",73,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC22",74,0)
 S SDECI=SDECI+1
"RTN","SDEC22",75,0)
 D ERR(0,"SDEC22 Error")
"RTN","SDEC22",76,0)
 Q
"RTN","SDEC23")
0^25^B8880360^n/a
"RTN","SDEC23",1,0)
SDEC23 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC23",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC23",3,0)
 ;
"RTN","SDEC23",4,0)
 Q
"RTN","SDEC23",5,0)
 ;
"RTN","SDEC23",6,0)
 ;
"RTN","SDEC23",7,0)
EVENT(SDECEVENT,SDECPARAM,SDECSIP,SDECSPT) ;EP
"RTN","SDEC23",8,0)
 ;Raise event to interested clients
"RTN","SDEC23",9,0)
 ;Clients are listed in ^TMP("SDEC23",$J,"EVENT",EVENT_NAME,IP,PORT)
"RTN","SDEC23",10,0)
 ;SDECSIP and SDECSPT represent the sender's IP and PORT.
"RTN","SDEC23",11,0)
 ;The event will not be raised back to the sender if these are non-null
"RTN","SDEC23",12,0)
 ;
"RTN","SDEC23",13,0)
 N POP,X
"RTN","SDEC23",14,0)
 Q:'$D(^TMP("SDEC23",$J,"EVENT",SDECEVENT))
"RTN","SDEC23",15,0)
 S SDECIP=0 F  S SDECIP=$O(^TMP("SDEC23",$J,"EVENT",SDECEVENT,SDECIP)) Q:SDECIP=""  D
"RTN","SDEC23",16,0)
 . S SDECPORT=0 F  S SDECPORT=$O(^TMP("SDEC23",$J,"EVENT",SDECEVENT,SDECIP,SDECPORT)) Q:'+SDECPORT  D
"RTN","SDEC23",17,0)
 . . I SDECIP=SDECSIP Q  ;,SDECPORT=SDECSPT Q
"RTN","SDEC23",18,0)
 . . D CALL^%ZISTCP(SDECIP,SDECPORT,5)
"RTN","SDEC23",19,0)
 . . I POP K ^TMP("SDEC23",$J,"EVENT",SDECEVENT,SDECIP,SDECPORT) Q
"RTN","SDEC23",20,0)
 . . ;U IO R X#3:5
"RTN","SDEC23",21,0)
 . . I X'="ACK" K ^TMP("SDEC23",$J,"EVENT",SDECEVENT,SDECIP,SDECPORT) Q
"RTN","SDEC23",22,0)
 . . S SDECPARAM=$S(SDECPARAM="":"",1:U_SDECPARAM)
"RTN","SDEC23",23,0)
 . . U IO W SDECEVENT,SDECPARAM,!
"RTN","SDEC23",24,0)
 . . D ^%ZISC
"RTN","SDEC23",25,0)
 . . Q
"RTN","SDEC23",26,0)
 . Q
"RTN","SDEC23",27,0)
 Q
"RTN","SDEC23",28,0)
 ;
"RTN","SDEC23",29,0)
EVERR(SDECEVENT,SDECIP,SDECPORT) ;
"RTN","SDEC23",30,0)
 ;
"RTN","SDEC23",31,0)
 Q:$G(SDECEVENT)=""
"RTN","SDEC23",32,0)
 Q:$G(SDECIP)=""
"RTN","SDEC23",33,0)
 Q:$G(SDECIP)=""
"RTN","SDEC23",34,0)
 K ^TMP("SDEC23",$J,"EVENT",SDECEVENT,SDECIP,SDECPORT)
"RTN","SDEC23",35,0)
 Q
"RTN","SDEC23",36,0)
 ;
"RTN","SDEC23",37,0)
REGET ;EP
"RTN","SDEC23",38,0)
 ;Error trap from REGEVNT
"RTN","SDEC23",39,0)
 ;
"RTN","SDEC23",40,0)
 I '$D(SDECI) N SDECI S SDECI=999
"RTN","SDEC23",41,0)
 S SDECI=SDECI+1
"RTN","SDEC23",42,0)
 D REGERR(SDECI,99)
"RTN","SDEC23",43,0)
 Q
"RTN","SDEC23",44,0)
 ;
"RTN","SDEC23",45,0)
REGERR(SDECI,SDECERID) ;Error processing
"RTN","SDEC23",46,0)
 S SDECI=SDECI+1
"RTN","SDEC23",47,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_$C(30)
"RTN","SDEC23",48,0)
 S SDECI=SDECI+1
"RTN","SDEC23",49,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC23",50,0)
 Q
"RTN","SDEC23",51,0)
 ;
"RTN","SDEC23",52,0)
 ;
"RTN","SDEC23",53,0)
REGEVENT(SDECY,SDECEVENT,SDECIP,SDECPORT) ;Called by client to inform VISTA server of client's interest in SDECEVENT
"RTN","SDEC23",54,0)
 ;REGEVENT(SDECY,SDECEVENT,SDECIP,SDECPORT)  external parameter tag is in SDEC
"RTN","SDEC23",55,0)
 ;SDECEVENT - Event to register with VistA
"RTN","SDEC23",56,0)
 ;SDECIP    - Client IP address
"RTN","SDEC23",57,0)
 ;SDECPORT  - Client Port
"RTN","SDEC23",58,0)
 ;Returns RECORDSET with field ERRORID.
"RTN","SDEC23",59,0)
 ;If everything ok then ERRORID = 0;
"RTN","SDEC23",60,0)
 ;
"RTN","SDEC23",61,0)
 N SDECI
"RTN","SDEC23",62,0)
 S SDECI=0
"RTN","SDEC23",63,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC23",64,0)
 K @SDECY
"RTN","SDEC23",65,0)
 S ^TMP("SDEC",$J,0)="I00020ERRORID"_$C(30)
"RTN","SDEC23",66,0)
 I '+SDECPORT D REGERR(SDECI,1) Q
"RTN","SDEC23",67,0)
 I SDECIP="" D REGERR(SDECI,2) Q
"RTN","SDEC23",68,0)
 S ^TMP("SDEC23",$J,"EVENT",SDECEVENT,SDECIP,SDECPORT)=""
"RTN","SDEC23",69,0)
 ;
"RTN","SDEC23",70,0)
 S SDECI=SDECI+1
"RTN","SDEC23",71,0)
 S ^TMP("SDEC",$J,SDECI)="0"_$C(30)_$C(31)
"RTN","SDEC23",72,0)
 Q
"RTN","SDEC23",73,0)
 ;
"RTN","SDEC23",74,0)
UNREGEV(SDECY,SDECEVENT,SDECIP,SDECPORT) ;Called by client to Unregister client's interest in SDECEVENT
"RTN","SDEC23",75,0)
 ;UNREGEV(SDECY,SDECEVENT,SDECIP,SDECPORT)  external parameter tag in SDEC
"RTN","SDEC23",76,0)
 ;Returns RECORDSET with field ERRORID.
"RTN","SDEC23",77,0)
 ;If everything ok then ERRORID = 0;
"RTN","SDEC23",78,0)
 ;
"RTN","SDEC23",79,0)
 N SDECI
"RTN","SDEC23",80,0)
 S SDECI=0
"RTN","SDEC23",81,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC23",82,0)
 K @SDECY
"RTN","SDEC23",83,0)
 S ^TMP("SDEC",$J,0)="I00020ERRORID"_$C(30)
"RTN","SDEC23",84,0)
 I '+SDECPORT D REGERR(SDECI,1) Q
"RTN","SDEC23",85,0)
 I SDECIP="" D REGERR(SDECI,2) Q
"RTN","SDEC23",86,0)
 K ^TMP("SDEC23",$J,"EVENT",SDECEVENT,SDECIP,SDECPORT)
"RTN","SDEC23",87,0)
 ;
"RTN","SDEC23",88,0)
 S SDECI=SDECI+1
"RTN","SDEC23",89,0)
 S ^TMP("SDEC",$J,SDECI)="0"_$C(30)_$C(31)
"RTN","SDEC23",90,0)
 Q
"RTN","SDEC23",91,0)
 ;
"RTN","SDEC23",92,0)
RAISEVNT(SDECY,SDECEVENT,SDECPARAM,SDECSIP,SDECSPT) ;RAISE EVENT
"RTN","SDEC23",93,0)
 ;RAISEVNT(SDECY,SDECEVENT,SDECPARAM,SDECSIP,SDECSPT)  external parameter tag is in SDEC
"RTN","SDEC23",94,0)
 ;RPC Called to raise event SDECEVENT with parameter SDECPARAM
"RTN","SDEC23",95,0)
 ;SDECSIP and SDECSPT represent the sender's IP and PORT.
"RTN","SDEC23",96,0)
 ;If not null, these will prevent the event from being raised back
"RTN","SDEC23",97,0)
 ;to the sender.
"RTN","SDEC23",98,0)
 ;Returns a RECORDSET wit the field ERRORID.
"RTN","SDEC23",99,0)
 ;If everything ok then ERRORID = 0;
"RTN","SDEC23",100,0)
 ;
"RTN","SDEC23",101,0)
 N SDECI
"RTN","SDEC23",102,0)
 S SDECI=0
"RTN","SDEC23",103,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC23",104,0)
 K @SDECY
"RTN","SDEC23",105,0)
 S ^TMP("SDEC",$J,0)="I00020ERRORID"_$C(30)
"RTN","SDEC23",106,0)
 ;
"RTN","SDEC23",107,0)
 D EVENT(SDECEVENT,SDECPARAM,SDECSIP,SDECSPT)
"RTN","SDEC23",108,0)
 ;
"RTN","SDEC23",109,0)
 S SDECI=SDECI+1
"RTN","SDEC23",110,0)
 S ^TMP("SDEC",$J,SDECI)="0"_$C(30)_$C(31)
"RTN","SDEC23",111,0)
 Q
"RTN","SDEC24")
0^26^B8031928^n/a
"RTN","SDEC24",1,0)
SDEC24 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC24",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC24",3,0)
 ;
"RTN","SDEC24",4,0)
 Q
"RTN","SDEC24",5,0)
 ;
"RTN","SDEC24",6,0)
SEARCHAV(SDECY,SDECRES,SDECSTRT,SDECEND,SDECTYPES,SDECAMPM,SDECWKDY)  ;Searches availability database
"RTN","SDEC24",7,0)
 ;SEARCHAV(SDECY,SDECRES,SDECSTRT,SDECEND,SDECTYPES,SDECAMPM,SDECWKDY)  external parameter tag is in SDEC
"RTN","SDEC24",8,0)
 ;Searches availability database for availability blocks between
"RTN","SDEC24",9,0)
 ;     SDECSTRT and SDECEND for each of the resources in SDECRES.
"RTN","SDEC24",10,0)
 ;The av blocks must be one of the types in SDECTYPES, must be
"RTN","SDEC24",11,0)
 ;AM or PM depending on value in SDECAMPM and
"RTN","SDEC24",12,0)
 ;must be on one of the weekdays listed in SDECWKDY.
"RTN","SDEC24",13,0)
 ;
"RTN","SDEC24",14,0)
 ;Return recordset containing the start times of availability blocks
"RTN","SDEC24",15,0)
 ;meeting the search criteria.
"RTN","SDEC24",16,0)
 ;
"RTN","SDEC24",17,0)
 ;Variables:
"RTN","SDEC24",18,0)
 ;SDECRES |-Delimited list of resource names
"RTN","SDEC24",19,0)
 ;SDECSTRT FM-formatted beginning date of search
"RTN","SDEC24",20,0)
 ;SDECEND FM-Formatted ending date of search
"RTN","SDEC24",21,0)
 ;SDECTYPES |-Delimited list of access type IENs
"RTN","SDEC24",22,0)
 ;SDECAMPM "AM" for am-only, "PM" for pm-only, "BOTH" for both
"RTN","SDEC24",23,0)
 ;SDECWKDY "" if any weekday, else |-delimited list of weekdays
"RTN","SDEC24",24,0)
 ;
"RTN","SDEC24",25,0)
 ;NOTE: If SDECEND="" Then:
"RTN","SDEC24",26,0)
 ; either ONE record is returned matching the first available block
"RTN","SDEC24",27,0)
 ; -or- NO record is returned indicating no available block exists
"RTN","SDEC24",28,0)
 ;
"RTN","SDEC24",29,0)
 N %DT,SDEC,X,Y
"RTN","SDEC24",30,0)
 S X=SDECSTRT,%DT="X" D ^%DT S SDECSTRT=$P(Y,".")
"RTN","SDEC24",31,0)
 S:+SDECSTRT<0 SDECSTRT=DT
"RTN","SDEC24",32,0)
 S X=SDECEND,%DT="X" D ^%DT S SDECEND=$P(Y,".")
"RTN","SDEC24",33,0)
 S:+SDECEND<0 SDECEND=9990101
"RTN","SDEC24",34,0)
 S SDECEND=SDECEND_".99"
"RTN","SDEC24",35,0)
 N SDECRESN,SDECRESD,SDECDATE,SDECI,SDECABD,SDECNOD,SDECATD,SDECATN
"RTN","SDEC24",36,0)
 N SDAB,SDECTYPE
"RTN","SDEC24",37,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC24",38,0)
 K @SDAB
"RTN","SDEC24",39,0)
 ;
"RTN","SDEC24",40,0)
 ;Set up access types array
"RTN","SDEC24",41,0)
 F SDEC=1:1:$L(SDECTYPES,"|") D
"RTN","SDEC24",42,0)
 . S SDECATD=$P(SDECTYPES,"|",SDEC)
"RTN","SDEC24",43,0)
 . S:+SDECATD SDEC(409.823,SDECATD)=""
"RTN","SDEC24",44,0)
 ;
"RTN","SDEC24",45,0)
 S SDECI=0
"RTN","SDEC24",46,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC24",47,0)
 K @SDECY
"RTN","SDEC24",48,0)
 S ^TMP("SDEC",$J,0)="T00030RESOURCENAME^D00030DATE^T00030ACCESSTYPE^T00030COMMENT"_$C(30)
"RTN","SDEC24",49,0)
 F SDEC=1:1:$L(SDECRES,"|") S SDECRESN=$P(SDECRES,"|",SDEC) D
"RTN","SDEC24",50,0)
 . Q:'$D(^SDEC(409.831,"B",SDECRESN))
"RTN","SDEC24",51,0)
 . S SDECRESD=$O(^SDEC(409.831,"B",SDECRESN,0))
"RTN","SDEC24",52,0)
 . Q:'+SDECRESD
"RTN","SDEC24",53,0)
 . Q:'$D(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC24",54,0)
 . D GETSLOTS^SDEC04(SDAB,SDECRESD,SDECSTRT,SDECEND)
"RTN","SDEC24",55,0)
 . Q:'$O(@SDAB@(0))  ;$D(^SDEC(409.821,"ARSCT",SDECRESD))
"RTN","SDEC24",56,0)
 . S SDECNOD=@SDAB@(1)
"RTN","SDEC24",57,0)
 . S SDECDATE=$P(SDECNOD,U,2)   ;$O(^SDEC(409.821,"ARSCT",SDECRESD,SDECSTRT))
"RTN","SDEC24",58,0)
 . Q:SDECDATE=""
"RTN","SDEC24",59,0)
 . Q:SDECDATE>SDECEND
"RTN","SDEC24",60,0)
 . ;TODO: Screen for AMPM
"RTN","SDEC24",61,0)
 . ;TODO: Screen for Weekday
"RTN","SDEC24",62,0)
 . ;
"RTN","SDEC24",63,0)
 . S SDECI=SDECI+1
"RTN","SDEC24",64,0)
 . ;S SDECABD=$O(^SDEC(409.821,"ARSCT",SDECRESD,SDECDATE,0))
"RTN","SDEC24",65,0)
 . ;S SDECNOD=$G(^SDEC(409.821,SDECABD,0))
"RTN","SDEC24",66,0)
 . Q:SDECNOD=""
"RTN","SDEC24",67,0)
 . S Y=$P(SDECDATE,".")
"RTN","SDEC24",68,0)
 . D DD^%DT
"RTN","SDEC24",69,0)
 . S SDECATD=$P(SDECNOD,U,5) ;ACCESS TYPE POINTER
"RTN","SDEC24",70,0)
 . S SDECATD=$G(^SDEC(409.823,+SDECATD,0))
"RTN","SDEC24",71,0)
 . S SDECATN=$P(SDECATD,U)
"RTN","SDEC24",72,0)
 . I +SDECATD,SDECTYPES]"" Q:'$D(SDEC(409.823,SDECATD))
"RTN","SDEC24",73,0)
 . ;TODO: Screen for TYPE ----DONE!
"RTN","SDEC24",74,0)
 . ;TODO: Comment
"RTN","SDEC24",75,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECRESN_U_Y_U_SDECATN_U_$C(30)
"RTN","SDEC24",76,0)
 S SDECI=SDECI+1
"RTN","SDEC24",77,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC24",78,0)
 Q
"RTN","SDEC25")
0^27^B107893271^n/a
"RTN","SDEC25",1,0)
SDEC25 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC25",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC25",3,0)
 ;
"RTN","SDEC25",4,0)
 Q
"RTN","SDEC25",5,0)
 ;
"RTN","SDEC25",6,0)
CHECKIN(SDECY,SDECAPTID,SDECCDT,SDECCC,SDECPRV,SDECROU,SDECVCL,SDECVFM,SDECOG,SDECCR,SDECPCC,SDECWHF) ;Check in appointment
"RTN","SDEC25",7,0)
 ;CHECKIN(SDECY,SDECAPTID,SDECCDT,SDECCC,SDECPRV,SDECROU,SDECVCL,SDECVFM,SDECOG,SDECCR,SDECPCC,SDECWHF)
"RTN","SDEC25",8,0)
 ;  external parameter tag is in SDEC
"RTN","SDEC25",9,0)
 ;
"RTN","SDEC25",10,0)
 ; INPUT: SDECAPTID - (required) Appointment ID
"RTN","SDEC25",11,0)
 ;        SDECCDT   - (optional) Check-in date/time
"RTN","SDEC25",12,0)
 ;                               "@" - indicates delete check-in
"RTN","SDEC25",13,0)
 ;        SDECCC    - (????????) Clinic Stop pointer to CLINIC STOP file
"RTN","SDEC25",14,0)
 ;        SDECPRV   - (optional) Provider pointer to NEW PERSON file
"RTN","SDEC25",15,0)
 ;                               default to current user
"RTN","SDEC25",16,0)
 ;        SDECROU   - (optional) Print Routing Slip flag, valid values:
"RTN","SDEC25",17,0)
 ;                                 0=false   1=true
"RTN","SDEC25",18,0)
 ;        SDECVCL   - (????????) Clinic pointer to HOSPITAL LOCATION
"RTN","SDEC25",19,0)
 ;        SDECVFM   - FORM
"RTN","SDEC25",20,0)
 ;        SDECOG    - OUTGUIDE FLAG
"RTN","SDEC25",21,0)
 ;        SDECCR    - Generate Chart request upon check-in? (1-Yes, otherwise no)
"RTN","SDEC25",22,0)
 ;        SDECPCC   - ien of PWH Type in HEALTH SUMMARY PWH TYPE file ^APCHPWHT
"RTN","SDEC25",23,0)
 ;        SDECWHF   - Print Patient Wellness Handout flag
"RTN","SDEC25",24,0)
 ;
"RTN","SDEC25",25,0)
ENDBG ;
"RTN","SDEC25",26,0)
 N BSDVSTN,EMSG
"RTN","SDEC25",27,0)
 N SDECNOD,SDECPATID,SDECSTART,DIK,DA,SDECID,SDECI,SDECZ,SDECIENS,SDECVEN
"RTN","SDEC25",28,0)
 N SDECNOEV,SDECCAN,SDECR1,%DT,X,Y
"RTN","SDEC25",29,0)
 S SDECNOEV=1 ;Don't execute protocol
"RTN","SDEC25",30,0)
 S SDECCAN=0
"RTN","SDEC25",31,0)
 ;
"RTN","SDEC25",32,0)
 S SDECI=0
"RTN","SDEC25",33,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC25",34,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC25",35,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID^T00150MESSAGE"_$C(30)
"RTN","SDEC25",36,0)
 ;validate SDEC appointment ID
"RTN","SDEC25",37,0)
 I '+$G(SDECAPTID) D ERR("SDEC25: Invalid Appointment ID") Q
"RTN","SDEC25",38,0)
 I '$D(^SDEC(409.84,+SDECAPTID,0)) D ERR("SDEC25: Invalid Appointment ID") Q
"RTN","SDEC25",39,0)
 ;validate checkin date/time (required)
"RTN","SDEC25",40,0)
 S SDECCDT=$G(SDECCDT)
"RTN","SDEC25",41,0)
 S:SDECCDT="@" SDECCAN=1
"RTN","SDEC25",42,0)
 I 'SDECCAN,SDECCDT'="" S %DT="T" S X=SDECCDT D ^%DT S SDECCDT=Y I Y=-1 S SDECCDT=""
"RTN","SDEC25",43,0)
 I SDECCDT="" D ERR("SDEC25: Invalid Check-In Time") Q
"RTN","SDEC25",44,0)
 ;validate clinic stop code
"RTN","SDEC25",45,0)
 S SDECCC=$G(SDECCC)
"RTN","SDEC25",46,0)
 I SDECCC'="" I '$D(^DIC(40.7,SDECCC,0)) S SDECCC=""
"RTN","SDEC25",47,0)
 ;validate provider (optional)
"RTN","SDEC25",48,0)
 S SDECPRV=$G(SDECPRV)
"RTN","SDEC25",49,0)
 I SDECPRV'="" I '$D(^VA(200,+SDECPRV,0)) S SDECPRV=""
"RTN","SDEC25",50,0)
 ;I SDECPRV="" S SDECPRV=DUZ
"RTN","SDEC25",51,0)
 ;I SDECPRV="" S SDECPRV=""
"RTN","SDEC25",52,0)
 ;validate routine slip flag (optional)
"RTN","SDEC25",53,0)
 S SDECROU=$$UP^XLFSTR($G(SDECROU))
"RTN","SDEC25",54,0)
 S SDECROU=$S(SDECROU=1:"true",SDECROU="TRUE":"true",1:0)
"RTN","SDEC25",55,0)
 ;validate clinic
"RTN","SDEC25",56,0)
 S SDECVCL=$G(SDECVCL)
"RTN","SDEC25",57,0)
 I SDECVCL'="" I '$D(^SC(SDECVCL,0)) S SDECVCL=""
"RTN","SDEC25",58,0)
 I SDECCC="",SDECVCL'="" S SDECCC=$P($G(^SC(SDECVCL,0)),U,7)   ;get clinic stop from 44
"RTN","SDEC25",59,0)
 ;
"RTN","SDEC25",60,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC25",61,0)
 S DFN=$P(SDECNOD,U,5)
"RTN","SDEC25",62,0)
 S SDECPATID=$P(SDECNOD,U,5)
"RTN","SDEC25",63,0)
 S SDECSTART=$P(SDECNOD,U)
"RTN","SDEC25",64,0)
 ;
"RTN","SDEC25",65,0)
 S SDECR1=$P(SDECNOD,U,7) ;RESOURCEID
"RTN","SDEC25",66,0)
 ;if resourceId is not null AND there is a valid resource record
"RTN","SDEC25",67,0)
 I SDECR1]"",$D(^SDEC(409.831,SDECR1,0)) D  I +$G(SDECZ) D ERR($P(SDECZ,U,2)) Q
"RTN","SDEC25",68,0)
 . S SDECNOD=^SDEC(409.831,SDECR1,0)
"RTN","SDEC25",69,0)
 . S SDECSC1=$P(SDECNOD,U,4) ;HOSPITAL LOCATION
"RTN","SDEC25",70,0)
 . ;Hospital Location is required for CHECKIN
"RTN","SDEC25",71,0)
 . ;I 'SDECSC1]"",'$D(^SC(+SDECSC1,0)) D ERR("SDEC25: Clinic not defined for this Resource: "_$P(SDECNOD,U,1)_" ("_SDECSC1_")") Q
"RTN","SDEC25",72,0)
 . I 'SDECSC1]"",'$D(^SC(+SDECSC1,0)) D ERR("Clinic not defined for this Resource: "_$P(SDECNOD,U,1)_" ("_SDECSC1_")") Q
"RTN","SDEC25",73,0)
 . ;Checkin SDEC APPOINTMENT entry
"RTN","SDEC25",74,0)
 . D SDECCHK(SDECAPTID,$S(SDECCAN:"",1:SDECCDT)) ; sets field .03 (Checkin), in file 409.84
"RTN","SDEC25",75,0)
 . ;Process cancel checkin
"RTN","SDEC25",76,0)
 . I $G(SDECCAN) D CANCHKIN(SDECPATID,SDECSC1,SDECSTART) Q
"RTN","SDEC25",77,0)
 . D APCHK(.SDECZ,SDECSC1,SDECPATID,SDECCDT,SDECSTART)
"RTN","SDEC25",78,0)
 . I $G(SDECPRV) S DIE="^SDEC(409.84,",DA=SDECAPTID,DR=".16///"_SDECPRV D ^DIE
"RTN","SDEC25",79,0)
 ;
"RTN","SDEC25",80,0)
 S SDECI=SDECI+1
"RTN","SDEC25",81,0)
 S ^TMP("SDEC",$J,SDECI)="0^"_$S($G(EMSG)'="":EMSG,1:"")_$C(30)
"RTN","SDEC25",82,0)
 S SDECI=SDECI+1
"RTN","SDEC25",83,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC25",84,0)
 Q
"RTN","SDEC25",85,0)
 ;
"RTN","SDEC25",86,0)
SDECCHK(SDECAPTID,SDECCDT) ;
"RTN","SDEC25",87,0)
 N SDECFDA,SDECMSG
"RTN","SDEC25",88,0)
 S SDECIENS=SDECAPTID_","
"RTN","SDEC25",89,0)
 S SDECFDA(409.84,SDECIENS,.03)=SDECCDT
"RTN","SDEC25",90,0)
 S SDECFDA(409.84,SDECIENS,.04)=$S(SDECCDT'="":$$NOW^XLFDT,1:"")
"RTN","SDEC25",91,0)
 D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC25",92,0)
 Q
"RTN","SDEC25",93,0)
 ;
"RTN","SDEC25",94,0)
APCHK(SDECZ,SDECSC1,SDECDFN,SDECCDT,SDECSTART)         ;
"RTN","SDEC25",95,0)
 ;Checkin appointment for patient SDECDFN in clinic SDECSC1
"RTN","SDEC25",96,0)
 ;at time SDECSD
"RTN","SDEC25",97,0)
 N APTN,BSDMSG,SDECC
"RTN","SDEC25",98,0)
 S SDECC("PAT")=SDECPATID
"RTN","SDEC25",99,0)
 S SDECC("HOS LOC")=SDECSC1
"RTN","SDEC25",100,0)
 S SDECC("CLINIC CODE")=SDECCC
"RTN","SDEC25",101,0)
 S SDECC("PROVIDER")=SDECPRV
"RTN","SDEC25",102,0)
 S SDECC("APPT DATE")=SDECSTART
"RTN","SDEC25",103,0)
 S SDECC("CDT")=SDECCDT
"RTN","SDEC25",104,0)
 S SDECC("USR")=DUZ
"RTN","SDEC25",105,0)
 ;find IEN in ^SC multiple or null
"RTN","SDEC25",106,0)
 S APTN=$$FIND^SDAM2(SDECC("PAT"),SDECC("APPT DATE"),SDECC("HOS LOC"))
"RTN","SDEC25",107,0)
 ;
"RTN","SDEC25",108,0)
 ;Required by NEW API:
"RTN","SDEC25",109,0)
 S SDECC("SRV CAT")="A"
"RTN","SDEC25",110,0)
 S SDECC("TIME RANGE")=-1
"RTN","SDEC25",111,0)
 S SDECC("VISIT DATE")=SDECCDT
"RTN","SDEC25",112,0)
 S SDECC("SITE")=$G(DUZ(2))
"RTN","SDEC25",113,0)
 S SDECC("VISIT TYPE")="V"
"RTN","SDEC25",114,0)
 S SDECC("CLN")=SDECC("HOS LOC")
"RTN","SDEC25",115,0)
 S SDECC("ADT")=SDECC("APPT DATE")
"RTN","SDEC25",116,0)
 ;
"RTN","SDEC25",117,0)
 ;Set up SDECVEN array containing VEN EHP CLINIC, VEN EHP FORM, OUTGUIDE FLAG
"RTN","SDEC25",118,0)
 ;These values come from input param
"RTN","SDEC25",119,0)
 S SDECVEN("CLINIC")=SDECVCL
"RTN","SDEC25",120,0)
 S SDECVEN("FORM")=SDECVFM
"RTN","SDEC25",121,0)
 S SDECVEN("OUTGUIDE")=SDECOG
"RTN","SDEC25",122,0)
 ;
"RTN","SDEC25",123,0)
 N SDECOUT
"RTN","SDEC25",124,0)
 D GETVISIT^SDECAPI4(.SDECC,.SDECOUT)
"RTN","SDEC25",125,0)
 ;K SDECC
"RTN","SDEC25",126,0)
 ;I SDECOUT(0)=1 S BSDVSTN=$O(SDECOUT(0))         ;if match found, set visit IEN
"RTN","SDEC25",127,0)
 ;D VISIT^SDECV(SDECC("HOS LOC"),SDECC("APPT DATE"),APTN,SDECC("PAT"),SDECC("CLINIC CODE"),SDECC("PROVIDER"),,.BSDMSG,.BSDVSTN,.SDECC)   ;replace GETVISIT^SDECAPI4 to make sure all visit data is updated
"RTN","SDEC25",128,0)
 Q
"RTN","SDEC25",129,0)
 ;
"RTN","SDEC25",130,0)
CANCHKIN(DFN,SDCL,SDT) ; Logic to cancel a checkin if the checkin date/time is passed in as '@'
"RTN","SDEC25",131,0)
 ; input:  DFN := ifn of patient
"RTN","SDEC25",132,0)
 ;        SDCL := clinic#
"RTN","SDEC25",133,0)
 ;         SDT := appt d/t
"RTN","SDEC25",134,0)
 ;
"RTN","SDEC25",135,0)
 N SDDA
"RTN","SDEC25",136,0)
 S SDDA=$$FIND(DFN,SDT,SDCL)
"RTN","SDEC25",137,0)
 ;I 'SDDA D ERR("SDEC25: Could not locate appointment in database or appointment is cancelled.") Q
"RTN","SDEC25",138,0)
 I 'SDDA D ERR("Could not locate appointment in database or appointment is cancelled.") Q
"RTN","SDEC25",139,0)
 N SDATA,SDCIHDL,X S SDATA=SDDA_U_DFN_U_SDT_U_SDCL,SDCIHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDEC25",140,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDEC25",141,0)
 S FDA(44.003,SDDA_","_SDT_","_SDCL_",",309)="" D FILE^DIE(,"FDA","ERR")
"RTN","SDEC25",142,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDEC25",143,0)
 D CHKEVTD(DFN,SDT,SDCL)
"RTN","SDEC25",144,0)
 K FDA,ERR
"RTN","SDEC25",145,0)
 Q
"RTN","SDEC25",146,0)
 ;
"RTN","SDEC25",147,0)
FIND(DFN,SDT,SDCL) ; -- return appt ifn for pat
"RTN","SDEC25",148,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDEC25",149,0)
 ;                 SDT := appt d/t
"RTN","SDEC25",150,0)
 ;                SDCL := ifn of clinic
"RTN","SDEC25",151,0)
 ;  output: [returned] := ifn if pat has appt on date/time
"RTN","SDEC25",152,0)
 ;
"RTN","SDEC25",153,0)
 N Y
"RTN","SDEC25",154,0)
 S Y=0 F  S Y=$O(^SC(SDCL,"S",SDT,1,Y)) Q:'Y  I $D(^(Y,0)),DFN=+^(0),$D(^DPT(+DFN,"S",SDT,0)),$$VALID(DFN,SDCL,SDT,Y) Q
"RTN","SDEC25",155,0)
 Q Y
"RTN","SDEC25",156,0)
 ;
"RTN","SDEC25",157,0)
VALID(DFN,SDCL,SDT,SDDA) ; -- return valid appt.
"RTN","SDEC25",158,0)
 ; **NOTE:  For speed consideration the ^SC and ^DPT nodes must be
"RTN","SDEC25",159,0)
 ;          check to see they exist prior to calling this entry point.
"RTN","SDEC25",160,0)
 ;   input:        DFN := ifn of pat.
"RTN","SDEC25",161,0)
 ;                 SDT := appt d/t
"RTN","SDEC25",162,0)
 ;                SDCL := ifn of clinic
"RTN","SDEC25",163,0)
 ;                SDDA := ifn of appt
"RTN","SDEC25",164,0)
 ;  output: [returned] := 1 for valid appt., 0 for not valid
"RTN","SDEC25",165,0)
 Q $S($P(^SC(SDCL,"S",SDT,1,SDDA,0),U,9)'="C":1,$P(^DPT(DFN,"S",SDT,0),U,2)["C":1,1:0)
"RTN","SDEC25",166,0)
 ;
"RTN","SDEC25",167,0)
CHKEVT(SDECPAT,SDECSTART,SDECSC) ;EP Called by SDEC CHECKIN APPOINTMENT event
"RTN","SDEC25",168,0)
 ;when appointments CHECKIN via PIMS interface.
"RTN","SDEC25",169,0)
 ;Propagates CHECKIN to SDECAPPT and raises refresh event to running GUI clients
"RTN","SDEC25",170,0)
 ;
"RTN","SDEC25",171,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC25",172,0)
 Q:'+$G(SDECSC)
"RTN","SDEC25",173,0)
 N SDECSTAT,SDECFOUND,SDECRES
"RTN","SDEC25",174,0)
 S SDECSTAT=""
"RTN","SDEC25",175,0)
 S:$G(SDATA("AFTER","STATUS"))["CHECKED IN" SDECSTAT=$P(SDATA("AFTER","STATUS"),"^",4)
"RTN","SDEC25",176,0)
 S SDECFOUND=0
"RTN","SDEC25",177,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0)) S SDECFOUND=$$CHKEVT1(SDECRES,SDECSTART,SDECPAT,SDECSTAT)
"RTN","SDEC25",178,0)
 I SDECFOUND D CHKEVT3(SDECRES) Q
"RTN","SDEC25",179,0)
 Q
"RTN","SDEC25",180,0)
 ;
"RTN","SDEC25",181,0)
CHKEVT1(SDECRES,SDECSTART,SDECPAT,SDECSTAT) ;
"RTN","SDEC25",182,0)
 ;Get appointment id in SDECAPT
"RTN","SDEC25",183,0)
 ;If found, call SDECNOS(SDECAPPT) and return 1
"RTN","SDEC25",184,0)
 ;else return 0
"RTN","SDEC25",185,0)
 N SDECFOUND,SDECAPPT
"RTN","SDEC25",186,0)
 S SDECFOUND=0
"RTN","SDEC25",187,0)
 Q:'+$G(SDECRES) SDECFOUND
"RTN","SDEC25",188,0)
 Q:'$D(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART)) SDECFOUND
"RTN","SDEC25",189,0)
 S SDECAPPT=0 F  S SDECAPPT=$O(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART,SDECAPPT)) Q:'+SDECAPPT  D  Q:SDECFOUND
"RTN","SDEC25",190,0)
 . S SDECNOD=$G(^SDEC(409.84,SDECAPPT,0)) Q:SDECNOD=""
"RTN","SDEC25",191,0)
 . I $P(SDECNOD,U,5)=SDECPAT,$P(SDECNOD,U,12)="" S SDECFOUND=1 Q
"RTN","SDEC25",192,0)
 I SDECFOUND,+$G(SDECAPPT) D SDECCHK(SDECAPPT,SDECSTAT)
"RTN","SDEC25",193,0)
 Q SDECFOUND
"RTN","SDEC25",194,0)
 ;
"RTN","SDEC25",195,0)
CHKEVT3(SDECRES) ;
"RTN","SDEC25",196,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC25",197,0)
 ;
"RTN","SDEC25",198,0)
 Q
"RTN","SDEC25",199,0)
 N SDECRESN
"RTN","SDEC25",200,0)
 S SDECRESN=$G(^SDEC(409.831,SDECRES,0))
"RTN","SDEC25",201,0)
 Q:SDECRESN=""
"RTN","SDEC25",202,0)
 S SDECRESN=$P(SDECRESN,"^")
"RTN","SDEC25",203,0)
 ;D EVENT^SDEC23("SCHEDULE-"_SDECRESN,"","","")
"RTN","SDEC25",204,0)
 ;D EVENT^BMXMEVN("SDEC SCHEDULE",SDECRESN)
"RTN","SDEC25",205,0)
 Q
"RTN","SDEC25",206,0)
 ;
"RTN","SDEC25",207,0)
CHKEVTD(SDECPAT,SDECSTART,SDECSC) ;EP Called by SDEC CHECKIN APPOINTMENT event
"RTN","SDEC25",208,0)
 ;when  an appointment CHECKIN is deleted via.
"RTN","SDEC25",209,0)
 ;Deletes CHECKIN to and raises refresh event to running GUI clients
"RTN","SDEC25",210,0)
 ;
"RTN","SDEC25",211,0)
 ;
"RTN","SDEC25",212,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC25",213,0)
 Q:'+$G(SDECSC)
"RTN","SDEC25",214,0)
 N SDECSTAT,SDECFOUND,SDECRES
"RTN","SDEC25",215,0)
 S SDECSTAT=""
"RTN","SDEC25",216,0)
 S:$G(SDATA("AFTER","STATUS"))'="CHECKED IN" SDECSTAT=$P(SDATA("AFTER","STATUS"),"^",4)
"RTN","SDEC25",217,0)
 I SDECSTAT="" S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0))
"RTN","SDEC25",218,0)
 I SDECRES D CHKEVT3(SDECRES) Q
"RTN","SDEC25",219,0)
 S SDECFOUND=0
"RTN","SDEC25",220,0)
 ;
"RTN","SDEC25",221,0)
 ;I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0)) S SDECFOUND=$$CHKEVT1(SDECRES,SDECSTART,SDECPAT,SDECSTAT)
"RTN","SDEC25",222,0)
 ;I SDECFOUND D CHKEVT3(SDECRES) Q
"RTN","SDEC25",223,0)
 Q
"RTN","SDEC25",224,0)
 ;
"RTN","SDEC25",225,0)
 ;CHECK OUT APPOINTMENT - RPC
"RTN","SDEC25",226,0)
CHECKOUT(SDECY,DFN,SDT,SDCODT,SDECAPTID,VPRV) ;Check Out appointment
"RTN","SDEC25",227,0)
 ;CHECKOUT(SDECY,DFN,SDT,SDCODT,SDECAPTID,VPRV)  external parameter tag is in SDEC
"RTN","SDEC25",228,0)
 ; Returns   SDECY
"RTN","SDEC25",229,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDEC25",230,0)
 ;           SDT      Appointment Date/Time in FM format
"RTN","SDEC25",231,0)
 ;           SDCODT   Date/Time of Check Out FM FORMAT [REQUIRED]
"RTN","SDEC25",232,0)
 ;           SDECAPTID - Appointment ID
"RTN","SDEC25",233,0)
 ;           VPRV      - V Provider
"RTN","SDEC25",234,0)
 ;SETUP ERROR TRACKING
"RTN","SDEC25",235,0)
 N APIERR,CNT,ERR,%DT,X,Y
"RTN","SDEC25",236,0)
 N SDCL,SDASK,SDCOACT,SDCOALBF,SDDA,SDLNE,SDQUIET
"RTN","SDEC25",237,0)
 N SDECI,SDECNOD
"RTN","SDEC25",238,0)
 S SDECI=0
"RTN","SDEC25",239,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC25",240,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC25",241,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC25",242,0)
 I '+SDECAPTID D ERR("Invalid Appointment ID.") Q
"RTN","SDEC25",243,0)
 I '$D(^SDEC(409.84,SDECAPTID,0)) D ERR("Invalid Appointment ID.") Q
"RTN","SDEC25",244,0)
 ;INITIALIZE VARIABLES
"RTN","SDEC25",245,0)
 S %DT="T"
"RTN","SDEC25",246,0)
 S X=SDT
"RTN","SDEC25",247,0)
 D ^%DT   ; GET FM FORMAT FOR APPOINTMENT DATE/TIME
"RTN","SDEC25",248,0)
 S SDT=Y
"RTN","SDEC25",249,0)
 S X=SDCODT
"RTN","SDEC25",250,0)
 D ^%DT   ; GET FM FORMAT FOR CHECKOUT DATE/TIME
"RTN","SDEC25",251,0)
 ;ChecOut time cannot be in the future
"RTN","SDEC25",252,0)
 S SDCODT=Y
"RTN","SDEC25",253,0)
 I SDCODT>$$HTFM^XLFDT($H) D ERR("Check Out time cannot be in the future.") Q
"RTN","SDEC25",254,0)
 ;
"RTN","SDEC25",255,0)
 ;appointment record
"RTN","SDEC25",256,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC25",257,0)
 ;make sure CHECKOUT time is after CHECKIN time
"RTN","SDEC25",258,0)
 I SDCODT<=$P(SDECNOD,U,3) D ERR("Check Out time must be at least 1 minute after the Check In time of "_$TR($$FMTE^XLFDT($P(SDECNOD,U,3)),"@"," ")_".") Q
"RTN","SDEC25",259,0)
 ;Hospital Location of RESOURCE
"RTN","SDEC25",260,0)
 S SDECRES=$P(SDECNOD,U,7) ;RESOURCEID
"RTN","SDEC25",261,0)
 S SDECNOD=^SDEC(409.831,SDECRES,0)
"RTN","SDEC25",262,0)
 S SDCL=$P(SDECNOD,U,4) ;HOSPITAL LOCATION
"RTN","SDEC25",263,0)
 ;
"RTN","SDEC25",264,0)
 S SDDA=0
"RTN","SDEC25",265,0)
 S SDASK=0
"RTN","SDEC25",266,0)
 S SDCOALBF=""
"RTN","SDEC25",267,0)
 S SDCOACT="CO"
"RTN","SDEC25",268,0)
 S SDLNE=""
"RTN","SDEC25",269,0)
 S SDQUIET=1
"RTN","SDEC25",270,0)
 K APIERR
"RTN","SDEC25",271,0)
 S APIERR=0
"RTN","SDEC25",272,0)
 D CO^SDEC25A(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOACT,SDLNE,.SDCOALBF,SDECAPTID,SDQUIET,VPRV,.APIERR) ;Appt Check Out
"RTN","SDEC25",273,0)
 ;ERROR(S) FOUND
"RTN","SDEC25",274,0)
 I APIERR>0 D
"RTN","SDEC25",275,0)
 . S CNT=""
"RTN","SDEC25",276,0)
 . F  S CNT=$O(APIERR(CNT)) Q:CNT=""  S ERR=APIERR(CNT) S SDECI=SDECI+1 D ERR(ERR)
"RTN","SDEC25",277,0)
 ;NO ERROR
"RTN","SDEC25",278,0)
 I APIERR<1 D
"RTN","SDEC25",279,0)
 . S SDECI=SDECI+1
"RTN","SDEC25",280,0)
 . S ^TMP("SDEC",$J,SDECI)="0"_$C(30)
"RTN","SDEC25",281,0)
 . S SDECI=SDECI+1
"RTN","SDEC25",282,0)
 . S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC25",283,0)
 Q
"RTN","SDEC25",284,0)
 ;
"RTN","SDEC25",285,0)
 ;CHECK OUT APPOINTMENT - RPC
"RTN","SDEC25",286,0)
CANCKOUT(SDECY,SDECAPTID) ;Cancel Check Out appointment
"RTN","SDEC25",287,0)
 ;CANCKOUT(SDECY,SDECAPTID)  external parameter tag is in SDEC
"RTN","SDEC25",288,0)
 ; Returns   SDECY
"RTN","SDEC25",289,0)
 ; Input  -- SDECAPTID - Appointment ID
"RTN","SDEC25",290,0)
 N APS,DA,DFN,DIE,DR,RES
"RTN","SDEC25",291,0)
 N SDCL,SDN,SDOE,SDT,SDV
"RTN","SDEC25",292,0)
 N SDECI,SDECNOD
"RTN","SDEC25",293,0)
 S SDECI=0
"RTN","SDEC25",294,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC25",295,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC25",296,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC25",297,0)
 I '+SDECAPTID D ERR("Invalid Appointment ID.") Q
"RTN","SDEC25",298,0)
 I '$D(^SDEC(409.84,SDECAPTID,0)) D ERR("Invalid Appointment ID.") Q
"RTN","SDEC25",299,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC25",300,0)
 S APS=$P(SDECNOD,U,19)
"RTN","SDEC25",301,0)
 S DFN=$P(SDECNOD,U,5)
"RTN","SDEC25",302,0)
 S SDT=$P(SDECNOD,U)
"RTN","SDEC25",303,0)
 S RES=$P(SDECNOD,U,7)
"RTN","SDEC25",304,0)
 S SDCL=$P(^SDEC(409.831,RES,0),U,4)
"RTN","SDEC25",305,0)
 I $P(SDECNOD,U,14)="" D ERR("Appointment is not Checked Out.") Q
"RTN","SDEC25",306,0)
 ; ^SDECAPPT: update piece 8: Data Entry Clerk; clear piece 14: CHECKOUT;
"RTN","SDEC25",307,0)
 S DIE="^SDEC(409.84,"
"RTN","SDEC25",308,0)
 S DA=SDECAPTID
"RTN","SDEC25",309,0)
 S DR=".14////@;.08///"_DUZ
"RTN","SDEC25",310,0)
 D ^DIE
"RTN","SDEC25",311,0)
 ; ^SC file 44: clear piece C;3: CHECKED OUT; clear piece C;4: CHECK OUT USER; clear C;6: CHECK OUT ENTERED
"RTN","SDEC25",312,0)
 S DIE="^SC("_SDCL_",""S"","_SDT_",1,"
"RTN","SDEC25",313,0)
 S DA(2)=SDCL,DA(1)=SDT,(DA,SDN)=$$SCIEN^SDECU2(DFN,SDCL,SDT)
"RTN","SDEC25",314,0)
 S DR="303///@;304///@;306///@"
"RTN","SDEC25",315,0)
 D ^DIE
"RTN","SDEC25",316,0)
 ; ^AUPNVSIT file 9000010: clear piece 18: CHECK OUT DATE&TIME
"RTN","SDEC25",317,0)
 S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDEC25",318,0)
 S SDV=$$GET1^DIQ(409.68,SDOE,.05,"I")
"RTN","SDEC25",319,0)
 I +SDV D
"RTN","SDEC25",320,0)
 . S DIE="^AUPNVSIT(",DA=SDV
"RTN","SDEC25",321,0)
 . S DR=".18///@"
"RTN","SDEC25",322,0)
 . D ^DIE
"RTN","SDEC25",323,0)
 ; ^SCE file 409.68: Set piece 12 back to CHECKED IN, pointer to APPOINTMENT STATUS file 409.63; clear piece 7: CHECK OUT PROCESS COMPLETION
"RTN","SDEC25",324,0)
 I +APS D
"RTN","SDEC25",325,0)
 . S DIE=409.68,DA=SDOE,DR=".07///@;.12///"_APS_";101///"_DUZ_";102///"_$$NOW^XLFDT
"RTN","SDEC25",326,0)
 . D ^DIE
"RTN","SDEC25",327,0)
 S SDECI=SDECI+1
"RTN","SDEC25",328,0)
 S ^TMP("SDEC",$J,SDECI)="0"_$C(30)
"RTN","SDEC25",329,0)
 S SDECI=SDECI+1
"RTN","SDEC25",330,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC25",331,0)
 Q
"RTN","SDEC25",332,0)
 ;
"RTN","SDEC25",333,0)
CANAPPT(SDECAPTID)  ;external call to cancel check out in SDEC APPOINTMENT called by SDCODEL for VistA Delete Check Out
"RTN","SDEC25",334,0)
 N APS,DA,DIE,DR,DFN,RES,SDCL,SDT
"RTN","SDEC25",335,0)
 N SDECNOD
"RTN","SDEC25",336,0)
 I '+$G(SDECAPTID) Q
"RTN","SDEC25",337,0)
 I '$D(^SDEC(409.84,+SDECAPTID,0)) Q
"RTN","SDEC25",338,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC25",339,0)
 S APS=$P(SDECNOD,U,19)
"RTN","SDEC25",340,0)
 S DFN=$P(SDECNOD,U,5)
"RTN","SDEC25",341,0)
 S SDT=$P(SDECNOD,U)
"RTN","SDEC25",342,0)
 S RES=$P(SDECNOD,U,7)
"RTN","SDEC25",343,0)
 S SDCL=$P(^SDEC(409.831,RES,0),U,4)
"RTN","SDEC25",344,0)
 I $P(SDECNOD,U,14)="" Q
"RTN","SDEC25",345,0)
 ; ^SDEC(409.84: update piece 8: Data Entry Clerk; clear piece 14: CHECKOUT;
"RTN","SDEC25",346,0)
 S DIE="^SDEC(409.84,"
"RTN","SDEC25",347,0)
 S DA=SDECAPTID
"RTN","SDEC25",348,0)
 S DR=".14////@;.08///"_DUZ
"RTN","SDEC25",349,0)
 D ^DIE
"RTN","SDEC25",350,0)
 Q
"RTN","SDEC25",351,0)
 ;
"RTN","SDEC25",352,0)
ERROR ;
"RTN","SDEC25",353,0)
 D ERR("VISTA Error")
"RTN","SDEC25",354,0)
 Q
"RTN","SDEC25",355,0)
 ;
"RTN","SDEC25",356,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC25",357,0)
 S SDECI=SDECI+1
"RTN","SDEC25",358,0)
 S ^TMP("SDEC",$J,SDECI)=ERRNO_$C(30)
"RTN","SDEC25",359,0)
 S SDECI=SDECI+1
"RTN","SDEC25",360,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC25",361,0)
 Q
"RTN","SDEC25A")
0^28^B6651279^n/a
"RTN","SDEC25A",1,0)
SDEC25A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC25A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC25A",3,0)
 ;
"RTN","SDEC25A",4,0)
 Q
"RTN","SDEC25A",5,0)
 ;
"RTN","SDEC25A",6,0)
CO(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOACT,SDLNE,SDCOALBF,SDECAPTID,SDQUIET,VPRV,APIERR) ;Appt Check Out
"RTN","SDEC25A",7,0)
 ; Input  -- DFN      Patient file IEN
"RTN","SDEC25A",8,0)
 ;           SDT      Appointment Date/Time
"RTN","SDEC25A",9,0)
 ;           SDCL     Hospital Location file IEN for Appt
"RTN","SDEC25A",10,0)
 ;           SDDA     IEN in ^SC multiple or null [Optional]
"RTN","SDEC25A",11,0)
 ;           SDASK    Ask Check Out Date/Time     [Optional]
"RTN","SDEC25A",12,0)
 ;           SDCODT   Date/Time of Check Out      [Optional]
"RTN","SDEC25A",13,0)
 ;           SDCOACT  Appt Mgmt Check Out Action  [Optional]
"RTN","SDEC25A",14,0)
 ;           SDLNE    Appt Mgmt Line Number       [Optional]
"RTN","SDEC25A",15,0)
 ; Output -- SDCOALBF Re-build Appt Mgmt List
"RTN","SDEC25A",16,0)
 ; Input  -- SDECAPTID Appointment ID
"RTN","SDEC25A",17,0)
 ;           SDQUIET  No Terminal output 0=allow display 1=do not allow
"RTN","SDEC25A",18,0)
 ;           VPRV     V Provider IEN - pointer to V PROVIDER file
"RTN","SDEC25A",19,0)
 N SDCOQUIT,SDOE,SDATA
"RTN","SDEC25A",20,0)
 N VALMBCK
"RTN","SDEC25A",21,0)
 S:'SDDA SDDA=$$FIND^SDAM2(DFN,SDT,SDCL)
"RTN","SDEC25A",22,0)
 I 'SDDA D  Q  ; RETURN ERROR IF SDQUIET
"RTN","SDEC25A",23,0)
 . S APIERR=$G(APIERR)+1 S APIERR(APIERR)="SDCO1: Cannot check out this appointment - Hospital Location not identified."
"RTN","SDEC25A",24,0)
 . G COQ
"RTN","SDEC25A",25,0)
 S SDATA=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDEC25A",26,0)
 ; ** MT Blocking removed
"RTN","SDEC25A",27,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$G(EASACT)'="W",$$MT^EASMTCHK(DFN,$P($G(SDATA),U,16),"C",$G(SDT)) D PAUSE^VALM1 G COQ
"RTN","SDEC25A",28,0)
 ;
"RTN","SDEC25A",29,0)
 ;-- if new encounter, pass to PCE
"RTN","SDEC25A",30,0)
 I $$NEW^SDPCE(SDT) D  S VALMBCK="R",SDCOALBF=1 G COQ
"RTN","SDEC25A",31,0)
 . N SDCOED
"RTN","SDEC25A",32,0)
 . S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDEC25A",33,0)
 . ;
"RTN","SDEC25A",34,0)
 . ; -- has appt already been checked out
"RTN","SDEC25A",35,0)
 . S SDCOED=$$CHK($TR($$STATUS^SDAM1(DFN,SDT,SDCL,SDATA,SDDA),";","^"))
"RTN","SDEC25A",36,0)
 . ;
"RTN","SDEC25A",37,0)
 . D CO^SDEC25B(SDOE,DFN,SDT,SDCL,SDCODT,SDECAPTID,SDQUIET,VPRV,.APIERR) Q
"RTN","SDEC25A",38,0)
 ;
"RTN","SDEC25A",39,0)
COQ K % Q
"RTN","SDEC25A",40,0)
 ;
"RTN","SDEC25A",41,0)
 ;
"RTN","SDEC25A",42,0)
 ;
"RTN","SDEC25A",43,0)
CHK(SDSTB) ; -- is appointment checked out
"RTN","SDEC25A",44,0)
 N Y
"RTN","SDEC25A",45,0)
 I "^2^8^12^"[("^"_+SDSTB_"^"),$P(SDSTB,"^",3)["CHECKED OUT" S Y=1
"RTN","SDEC25A",46,0)
 Q +$G(Y)
"RTN","SDEC25A",47,0)
 ;
"RTN","SDEC25A",48,0)
DT(DFN,SDT,SDCL,SDDA,SDASK,SDCODT,SDCOQUIT) ;Update Check Out Date
"RTN","SDEC25A",49,0)
 N %DT,DR,SDCIDT,X
"RTN","SDEC25A",50,0)
 S:'$D(^SC(SDCL,"S",0)) ^(0)="^44.001DA^^"
"RTN","SDEC25A",51,0)
 S DR="",SDCIDT=$P($G(^SC(SDCL,"S",SDT,1,SDDA,"C")),"^"),X=$P($G(^("C")),"^",3)
"RTN","SDEC25A",52,0)
 I X G DTQ:'SDASK  S DR="303R"
"RTN","SDEC25A",53,0)
 I DR="",$P(^SC(SDCL,0),U,24),$$REQ^SDM1A(SDT)="CO" S DR="303R//"_$S($G(SDCODT):$$FTIME^VALM1($S(SDCODT<SDCIDT:SDCIDT,1:SDCODT)),1:"NOW")
"RTN","SDEC25A",54,0)
 I DR="" S DR="303R///"_$S($G(SDCODT):"/"_$S(SDCODT<SDCIDT:SDCIDT,1:SDCODT),1:"NOW")
"RTN","SDEC25A",55,0)
 S DR="S SDCOQUIT="""";"_DR_";K SDCOQUIT"
"RTN","SDEC25A",56,0)
 D DIE(SDCL,SDT,SDDA,DR)
"RTN","SDEC25A",57,0)
DTQ Q
"RTN","SDEC25A",58,0)
 ;
"RTN","SDEC25A",59,0)
DIE(SDCL,SDT,SDDA,DR) ; -- update appt data in ^SC
"RTN","SDEC25A",60,0)
 N DA,DIE
"RTN","SDEC25A",61,0)
 S DA(2)=SDCL,DA(1)=SDT,DA=SDDA,DIE="^SC("_DA(2)_",""S"","_DA(1)_",1,"
"RTN","SDEC25A",62,0)
 D ^DIE K DQ,DE
"RTN","SDEC25A",63,0)
DIEQ Q
"RTN","SDEC25B")
0^29^B10232111^n/a
"RTN","SDEC25B",1,0)
SDEC25B ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC25B",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC25B",3,0)
 ;
"RTN","SDEC25B",4,0)
 Q
"RTN","SDEC25B",5,0)
 ;
"RTN","SDEC25B",6,0)
CO(SDOE,DFN,SDT,SDCL,SDCODT,SDECAPTID,SDQUIET,VPRV,APIERR) ;EP; called to ask check-out date/time   ;SAT ADDED PARAMETERS SDCODT, SDECAPTID, & SDQUIET
"RTN","SDEC25B",7,0)
 ;  Called by SDCO1
"RTN","SDEC25B",8,0)
 ; SDOE      = Outpatient Encounter IEN
"RTN","SDEC25B",9,0)
 ;  DFN      = Patient IEN
"RTN","SDEC25B",10,0)
 ;  SDT      = Appointment Date/Time
"RTN","SDEC25B",11,0)
 ; SDCL      = Clinic IEN
"RTN","SDEC25B",12,0)
 ; SDCODT    = APPOINTMENT CHECKOUT TIME [OPTIONAL - USED WHEN SDQUIET=1] USER ENTERED FORMAT
"RTN","SDEC25B",13,0)
 ; SDECAPTID = APPOINTMENT ID - POINTER TO ^SDECAPPT
"RTN","SDEC25B",14,0)
 ; SDQUIET   = ALLOW NO TERMINAL INPUT/OUTPUT 0=ALLOW; 1=DO NOT ALLOW
"RTN","SDEC25B",15,0)
 ; VPRV      = V Provider IEN - pointer to V PROVIDER file
"RTN","SDEC25B",16,0)
 ; APIERR    = Returned Array of errors
"RTN","SDEC25B",17,0)
 ;             APIERR = counter
"RTN","SDEC25B",18,0)
 ;             APIERR(counter)=message -- <Prog name>: <message>
"RTN","SDEC25B",19,0)
 ;
"RTN","SDEC25B",20,0)
 I '$G(SDOE) D ^%ZTER Q  ;lets trap an error here to see what is causing the problem
"RTN","SDEC25B",21,0)
 N DIE,DA,DR,SDECNOD,SDN,SDV,AUPNVSIT
"RTN","SDEC25B",22,0)
 S DIE="^SC("_SDCL_",""S"","_SDT_",1,"
"RTN","SDEC25B",23,0)
 S DA(2)=SDCL,DA(1)=SDT,(DA,SDN)=$$SCIEN^SDECU2(DFN,SDCL,SDT)
"RTN","SDEC25B",24,0)
 ;S DA(4)=SDCL,DA(3)="S",DA(2)=SDT,DA(1)=1,(DA,SDN)=$$SCIEN^SDECU2(DFN,SDCL,SDT)
"RTN","SDEC25B",25,0)
 ;CHECK THAT APPOINTMENT IS CHECKED IN
"RTN","SDEC25B",26,0)
 I $P($G(^SC(+SDCL,"S",SDT,1,SDN,"C")),U)="" D  Q
"RTN","SDEC25B",27,0)
 . S APIERR=$G(APIERR)+1 S APIERR(APIERR)="SDEC25B: Patient not checked in"
"RTN","SDEC25B",28,0)
 . Q
"RTN","SDEC25B",29,0)
 ;
"RTN","SDEC25B",30,0)
 S DR="303///"_$$FMTE^XLFDT(SDCODT)_";304///`"_DUZ_";306///"_$$NOW^XLFDT
"RTN","SDEC25B",31,0)
 D ^DIE
"RTN","SDEC25B",32,0)
 ;
"RTN","SDEC25B",33,0)
 ; if checked out and status not updated, do it now
"RTN","SDEC25B",34,0)
 I $P($G(^SC(+SDCL,"S",SDT,1,DA,"C")),U,3)]"" D
"RTN","SDEC25B",35,0)
 . ;UPDATE APPOINTMENT SCHEDULE GLOBAL ^SDEC(409.84
"RTN","SDEC25B",36,0)
 . I $G(SDECAPTID) D
"RTN","SDEC25B",37,0)
 . . S PSTAT=$P(^SCE(SDOE,0),U,12)
"RTN","SDEC25B",38,0)
 . . S DIE="^SDEC(409.84,"
"RTN","SDEC25B",39,0)
 . . S DA=SDECAPTID
"RTN","SDEC25B",40,0)
 . . S DR=".14///"_$G(SDCODT)_";.19///"_PSTAT
"RTN","SDEC25B",41,0)
 . . D ^DIE
"RTN","SDEC25B",42,0)
 . . ;possibly update VProvider
"RTN","SDEC25B",43,0)
 . . S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC25B",44,0)
 . . I $G(VPRV),+$P(SDECNOD,U,15) D
"RTN","SDEC25B",45,0)
 . . . ;get SDEC appointment schedule
"RTN","SDEC25B",46,0)
 . . . S DIE="^AUPNVPRV("
"RTN","SDEC25B",47,0)
 . . . S DA=$P(SDECNOD,U,15)
"RTN","SDEC25B",48,0)
 . . . S DR=".01///"_VPRV
"RTN","SDEC25B",49,0)
 . . . D ^DIE
"RTN","SDEC25B",50,0)
 . ;
"RTN","SDEC25B",51,0)
 . Q:$$GET1^DIQ(409.68,SDOE,.12)="CHECKED OUT"
"RTN","SDEC25B",52,0)
 . S DIE=409.68,DA=SDOE,DR=".12///14;101///"_DUZ_";102///"_$$NOW^XLFDT
"RTN","SDEC25B",53,0)
 . D ^DIE
"RTN","SDEC25B",54,0)
 . ;
"RTN","SDEC25B",55,0)
 . ; if visit pointer stored, update visit checkout date/time
"RTN","SDEC25B",56,0)
 . S SDV=$$GET1^DIQ(409.68,SDOE,.05,"I") Q:'SDV
"RTN","SDEC25B",57,0)
 . Q:'$D(^AUPNVSIT(SDV,0))  Q:$$GET1^DIQ(9000010,SDV,.05,"I")'=DFN
"RTN","SDEC25B",58,0)
 . Q:$$GET1^DIQ(9000010,SDV,.11,"I")=1    ;deleted
"RTN","SDEC25B",59,0)
 . ;
"RTN","SDEC25B",60,0)
 . ;cmi/maw 5/1/2009 PATCH 1010 RQMT 34
"RTN","SDEC25B",61,0)
 . S DIE="^AUPNVSIT(",DA=SDV
"RTN","SDEC25B",62,0)
 . S DR=".18///"_$P($G(^SC(+SDCL,"S",SDT,1,SDN,"C")),U,3)
"RTN","SDEC25B",63,0)
 . D ^DIE
"RTN","SDEC25B",64,0)
 Q
"RTN","SDEC25B",65,0)
 ;
"RTN","SDEC25B",66,0)
CO1(SDECAPTID,SDCODT,SDOE,VPRV)  ;external checkout called from FILE^SDAPIAP to update SDEC APPOINTMENT from VistA appointment check out
"RTN","SDEC25B",67,0)
 ;INPUT:
"RTN","SDEC25B",68,0)
 ; SDECAPTID = Appt ID pointer to SDEC APPOINTMENT file
"RTN","SDEC25B",69,0)
 ; SDCODT    = Checkout date/time in fm format
"RTN","SDEC25B",70,0)
 ; SDOE      = outpatient encounter pointer to OUTPATIENT ENCOUNTER file 409.68
"RTN","SDEC25B",71,0)
 ; VPRV      = V Provider pointer to V PROVIDER file
"RTN","SDEC25B",72,0)
 N DA,DR,PSTAT,SDEDNOD
"RTN","SDEC25B",73,0)
 I $G(SDECAPTID) D
"RTN","SDEC25B",74,0)
  . S PSTAT=$P(^SCE(SDOE,0),U,12)
"RTN","SDEC25B",75,0)
  . S DIE="^SDEC(409.84,"
"RTN","SDEC25B",76,0)
  . S DA=SDECAPTID
"RTN","SDEC25B",77,0)
  . S DR=".14///"_$G(SDCODT)_";.19///"_PSTAT
"RTN","SDEC25B",78,0)
  . D ^DIE
"RTN","SDEC25B",79,0)
  . ;possibly update VProvider
"RTN","SDEC25B",80,0)
  . S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC25B",81,0)
  . I $G(VPRV),+$P(SDECNOD,U,15) D
"RTN","SDEC25B",82,0)
  . . ;get SDEC appointment schedule
"RTN","SDEC25B",83,0)
  . . S DIE="^AUPNVPRV("
"RTN","SDEC25B",84,0)
  . . S DA=$P(SDECNOD,U,15)
"RTN","SDEC25B",85,0)
  . . S DR=".01///"_VPRV
"RTN","SDEC25B",86,0)
  . . D ^DIE
"RTN","SDEC25B",87,0)
 Q
"RTN","SDEC26")
0^30^B6836926^n/a
"RTN","SDEC26",1,0)
SDEC26 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC26",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC26",3,0)
 ;
"RTN","SDEC26",4,0)
 Q
"RTN","SDEC26",5,0)
 ;
"RTN","SDEC26",6,0)
EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN) ;Edit appointment (only 'note text' and appointment length can be edited)
"RTN","SDEC26",7,0)
 ;EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN)  external parameter tag is in SDEC
"RTN","SDEC26",8,0)
 ; SDECAPTID - Appointment ID - Pointer to SDEC APPOINTMENT
"RTN","SDEC26",9,0)
 ; SDECNOTE  - Note
"RTN","SDEC26",10,0)
 ; SDECLEN   - If there is a change in the length of appointment, this is the new value (in minutes) for length
"RTN","SDEC26",11,0)
 ;
"RTN","SDEC26",12,0)
 N SDECAP,SDECCL,SDECNEND,SDECNOD,SDECOLEN,SDECPAT,SDECPATID,SDECRES,SDECSTART
"RTN","SDEC26",13,0)
 N DIK,DA,SDECID,SDECI,SDECZ,SDECIENS,SDECEND
"RTN","SDEC26",14,0)
 ;
"RTN","SDEC26",15,0)
 S SDECI=0
"RTN","SDEC26",16,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC26",17,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC26",18,0)
 S ^TMP("SDEC",$J,SDECI)="T00020ERRORID"_$C(30)
"RTN","SDEC26",19,0)
 S SDECI=SDECI+1
"RTN","SDEC26",20,0)
 ;validate SDEC appointment pointer
"RTN","SDEC26",21,0)
 I '+SDECAPTID D ERR(SDECI,"SDEC26: Invalid Appointment ID") Q
"RTN","SDEC26",22,0)
 I '$D(^SDEC(409.84,SDECAPTID,0)) D ERR(SDECI,"SDEC26: Invalid Appointment ID") Q
"RTN","SDEC26",23,0)
 ;TSTART
"RTN","SDEC26",24,0)
 ;Add WP field
"RTN","SDEC26",25,0)
 ;I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC26",26,0)
 S SDECNOTE(1)=SDECNOTE,SDECNOTE=""
"RTN","SDEC26",27,0)
 ;I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC26",28,0)
 I $D(SDECNOTE(1)) D
"RTN","SDEC26",29,0)
 . D WP^DIE(409.84,SDECAPTID_",",1,"","SDECNOTE","SDECMSG")
"RTN","SDEC26",30,0)
 ;
"RTN","SDEC26",31,0)
 ;Edit appointment length
"RTN","SDEC26",32,0)
 I $G(SDECLEN),$G(SDECLEN)>0 D
"RTN","SDEC26",33,0)
 . S SDECSTART=$$GET1^DIQ(409.84,SDECAPTID,.01,"I"),SDECEND=$$GET1^DIQ(409.84,SDECAPTID,.02,"I")
"RTN","SDEC26",34,0)
 . S SDECOLEN=$$FMDIFF^XLFDT(SDECEND,SDECSTART,2),SDECOLEN=SDECOLEN/60
"RTN","SDEC26",35,0)
 . Q:SDECOLEN=SDECLEN
"RTN","SDEC26",36,0)
 . S SDECRES=$$GET1^DIQ(409.84,SDECAPTID,.07,"I") Q:'SDECRES
"RTN","SDEC26",37,0)
 . S SDECPAT=$$GET1^DIQ(409.84,SDECAPTID,.05,"I") Q:'SDECPAT
"RTN","SDEC26",38,0)
 . S SDECCL=$$GET1^DIQ(409.831,SDECRES,.04,"I") Q:'SDECCL
"RTN","SDEC26",39,0)
 . S SDECAP=0 F  S SDECAP=$O(^SC(SDECCL,"S",SDECSTART,1,SDECAP)) Q:'SDECAP  D
"RTN","SDEC26",40,0)
 . . S SDECIENS=SDECAP_","_SDECSTART_","_SDECCL_","
"RTN","SDEC26",41,0)
 . . I $$GET1^DIQ(44.003,SDECIENS,.01,"I")=SDECPAT,$$GET1^DIQ(44.003,SDECIENS,1,"I")=SDECOLEN D
"RTN","SDEC26",42,0)
 . . . S FDA(44.003,SDECIENS,1)=SDECLEN D FILE^DIE(,"FDA") K FDA
"RTN","SDEC26",43,0)
 . . . S SDECNEND=$$FMADD^XLFDT(SDECSTART,,,SDECLEN)
"RTN","SDEC26",44,0)
 . . . S FDA(409.84,SDECAPTID_",",.02)=SDECNEND D FILE^DIE(,"FDA") K FDA
"RTN","SDEC26",45,0)
 ;
"RTN","SDEC26",46,0)
 ;Return Recordset
"RTN","SDEC26",47,0)
 ;TCOMMIT
"RTN","SDEC26",48,0)
 S SDECI=SDECI+1
"RTN","SDEC26",49,0)
 S ^TMP("SDEC",$J,SDECI)="-1"_$C(30)
"RTN","SDEC26",50,0)
 S SDECI=SDECI+1
"RTN","SDEC26",51,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC26",52,0)
 Q
"RTN","SDEC26",53,0)
 ;
"RTN","SDEC26",54,0)
 ;
"RTN","SDEC26",55,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC26",56,0)
 S SDECI=SDECI+1
"RTN","SDEC26",57,0)
 TROLLBACK
"RTN","SDEC26",58,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC26",59,0)
 S SDECI=SDECI+1
"RTN","SDEC26",60,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC26",61,0)
 Q
"RTN","SDEC26",62,0)
 ;
"RTN","SDEC26",63,0)
ETRAP ;EP Error trap entry
"RTN","SDEC26",64,0)
 TROLLBACK
"RTN","SDEC26",65,0)
 D ^%ZTER
"RTN","SDEC26",66,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC26",67,0)
 S SDECI=SDECI+1
"RTN","SDEC26",68,0)
 D ERR(SDECI,"SDEC26 Error")
"RTN","SDEC26",69,0)
 Q
"RTN","SDEC27")
0^31^B106344952^n/a
"RTN","SDEC27",1,0)
SDEC27 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC27",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC27",3,0)
 ;
"RTN","SDEC27",4,0)
 Q
"RTN","SDEC27",5,0)
 ;
"RTN","SDEC27",6,0)
PATAPPTD(SDECY,DFN) ;Return the Patient appointment display
"RTN","SDEC27",7,0)
 ;PATAPPTD(SDECY,DFN)  external parameter tag is in SDEC
"RTN","SDEC27",8,0)
 ;Return recordset of patient appointments used in listing
"RTN","SDEC27",9,0)
 ;a patient's appointments and generating patient letters.
"RTN","SDEC27",10,0)
 ;RETURN:
"RTN","SDEC27",11,0)
 ; Global Array in which each array entry contains patient appointment data separated by ^:
"RTN","SDEC27",12,0)
 ; 1. Name
"RTN","SDEC27",13,0)
 ; 2. DOB
"RTN","SDEC27",14,0)
 ; 3. Sex
"RTN","SDEC27",15,0)
 ; 4. HRN
"RTN","SDEC27",16,0)
 ; 5. ApptDate
"RTN","SDEC27",17,0)
 ; 6. Clinic
"RTN","SDEC27",18,0)
 ; 7. TypeStatus
"RTN","SDEC27",19,0)
 ; 8. RESOURCEID
"RTN","SDEC27",20,0)
 ; 9. APPT_MADE_BY
"RTN","SDEC27",21,0)
 ;10. DATE_APPT_MADE
"RTN","SDEC27",22,0)
 ;11. NOTE
"RTN","SDEC27",23,0)
 ;12. STREET
"RTN","SDEC27",24,0)
 ;13. CITY
"RTN","SDEC27",25,0)
 ;14. STATE
"RTN","SDEC27",26,0)
 ;15. ZIP
"RTN","SDEC27",27,0)
 ;16. HOMEPHONE
"RTN","SDEC27",28,0)
 ;17. EESTAT - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC27",29,0)
 ;
"RTN","SDEC27",30,0)
 N SDECI,SDECIEN,SDECNOD,SDECNAM,SDECDOB,SDECHRN,SDECSEX,SDECCNID,SDECCNOD,SDECMADE,SDECCLRK,SDECNOT,SDECQ
"RTN","SDEC27",31,0)
 N EESTAT,SDECSTRT,SDECDPT
"RTN","SDEC27",32,0)
 N SDECSTRE,SDECCITY,SDECST,SDECZIP,SDECPHON
"RTN","SDEC27",33,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC27",34,0)
 K @SDECY
"RTN","SDEC27",35,0)
 S SDECI=0
"RTN","SDEC27",36,0)
 S ^TMP("SDEC",$J,SDECI)="T00030Name^D00020DOB^T00030Sex^T00030HRN^D00030ApptDate^T00030Clinic^T00030TypeStatus"
"RTN","SDEC27",37,0)
 S ^TMP("SDEC",$J,SDECI)=^(SDECI)_"^I00010RESOURCEID^T00030APPT_MADE_BY^D00020DATE_APPT_MADE^T00250NOTE^T00030STREET^T00030CITY^T00030STATE^T00030ZIP^T00030HOMEPHONE^T00030EESTAT"_$C(30)
"RTN","SDEC27",38,0)
 ;Get patient info
"RTN","SDEC27",39,0)
 ;
"RTN","SDEC27",40,0)
 I '+DFN S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC27",41,0)
 I '$D(^DPT(+DFN,0)) S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC27",42,0)
 S SDECNOD=$$PATINFO(DFN)
"RTN","SDEC27",43,0)
 S SDECNAM=$P(SDECNOD,U) ;NAME
"RTN","SDEC27",44,0)
 S SDECSEX=$P(SDECNOD,U,2) ;SEX
"RTN","SDEC27",45,0)
 S SDECDOB=$P(SDECNOD,U,3) ;DOB
"RTN","SDEC27",46,0)
 S SDECHRN=$P(SDECNOD,U,4) ;Health Record Number for location DUZ(2)
"RTN","SDEC27",47,0)
 S SDECSTRE=$P(SDECNOD,U,5) ;Street
"RTN","SDEC27",48,0)
 S SDECCITY=$P(SDECNOD,U,6) ;City
"RTN","SDEC27",49,0)
 S SDECST=$P(SDECNOD,U,7) ;State
"RTN","SDEC27",50,0)
 S SDECZIP=$P(SDECNOD,U,8) ;zip
"RTN","SDEC27",51,0)
 S SDECPHON=$P(SDECNOD,U,9) ;homephone
"RTN","SDEC27",52,0)
 ;
"RTN","SDEC27",53,0)
 ;Organize ^DPT(DFN,"S," nodes
"RTN","SDEC27",54,0)
 ; into SDECDPT(CLINIC,DATE)
"RTN","SDEC27",55,0)
 ;
"RTN","SDEC27",56,0)
 I $D(^DPT(DFN,"S")) S SDECDT=0 F  S SDECDT=$O(^DPT(DFN,"S",SDECDT)) Q:'+SDECDT  D
"RTN","SDEC27",57,0)
 . S SDECNOD=$G(^DPT(DFN,"S",SDECDT,0))
"RTN","SDEC27",58,0)
 . S SDECCID=$P(SDECNOD,U)
"RTN","SDEC27",59,0)
 . Q:'+SDECCID
"RTN","SDEC27",60,0)
 . Q:'$D(^SC(SDECCID,0))
"RTN","SDEC27",61,0)
 . S SDECDPT(SDECCID,SDECDT)=SDECNOD
"RTN","SDEC27",62,0)
 ;
"RTN","SDEC27",63,0)
 ;$O Through ^SDEC("CPAT",
"RTN","SDEC27",64,0)
 S SDECIEN=0
"RTN","SDEC27",65,0)
 I $D(^SDEC(409.84,"CPAT",DFN)) F  S SDECIEN=$O(^SDEC(409.84,"CPAT",DFN,SDECIEN)) Q:'SDECIEN  D
"RTN","SDEC27",66,0)
 . N SDECNOD,SDECAPT,SDECCID,SDECCNOD,SDECCLN,SDEC44,SDECDNOD,SDECSTAT,SDEC,SDECTYPE,SDECLIN
"RTN","SDEC27",67,0)
 . S SDECNOD=$G(^SDEC(409.84,SDECIEN,0))
"RTN","SDEC27",68,0)
 . Q:SDECNOD=""
"RTN","SDEC27",69,0)
 . Q:$P(SDECNOD,U,12)]""  ;CANCELLED
"RTN","SDEC27",70,0)
 . S Y=$P(SDECNOD,U)
"RTN","SDEC27",71,0)
 . Q:'+Y
"RTN","SDEC27",72,0)
 . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC27",73,0)
 . S SDECAPT=Y ;Appointment date time
"RTN","SDEC27",74,0)
 . S SDECCLRK=$P(SDECNOD,U,8) ;Appointment made by
"RTN","SDEC27",75,0)
 . S:+SDECCLRK SDECCLRK=$G(^VA(200,SDECCLRK,0)),SDECCLRK=$P(SDECCLRK,U)
"RTN","SDEC27",76,0)
 . S Y=$P(SDECNOD,U,9) ;Date Appointment Made
"RTN","SDEC27",77,0)
 . I +Y X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC27",78,0)
 . S SDECMADE=Y
"RTN","SDEC27",79,0)
 . ;NOTE
"RTN","SDEC27",80,0)
 . S SDECNOT=""
"RTN","SDEC27",81,0)
 . I $D(^SDEC(409.84,SDECIEN,1,0)) S SDECNOT="",SDECQ=0 F  S SDECQ=$O(^SDEC(409.84,SDECIEN,1,SDECQ)) Q:'+SDECQ  D
"RTN","SDEC27",82,0)
 . . S SDECLIN=$G(^SDEC(409.84,SDECIEN,1,SDECQ,0))
"RTN","SDEC27",83,0)
 . . S:(SDECLIN'="")&($E(SDECLIN,$L(SDECLIN)-1,$L(SDECLIN))'=" ") SDECLIN=SDECLIN_" "
"RTN","SDEC27",84,0)
 . . S SDECNOT=SDECNOT_SDECLIN
"RTN","SDEC27",85,0)
 . ;Resource
"RTN","SDEC27",86,0)
 . S SDECCID=$P(SDECNOD,U,7) ;IEN of SDEC RESOURCE
"RTN","SDEC27",87,0)
 . Q:'+SDECCID
"RTN","SDEC27",88,0)
 . Q:'$D(^SDEC(409.831,SDECCID,0))
"RTN","SDEC27",89,0)
 . S SDECCNOD=$G(^SDEC(409.831,SDECCID,0)) ;SDEC RESOURCE node
"RTN","SDEC27",90,0)
 . Q:SDECCNOD=""
"RTN","SDEC27",91,0)
 . S SDECCLN=$P(SDECCNOD,U) ;Text name of SDEC Resource
"RTN","SDEC27",92,0)
 . S SDEC44=$P(SDECCNOD,U,4) ;File 44 pointer
"RTN","SDEC27",93,0)
 . ;If appt entry in ^DPT(PAT,"S" exists for this clinic, get the TYPE/STATUS info from
"RTN","SDEC27",94,0)
 . ;the SDECDPT array and delete the SDECDPT node
"RTN","SDEC27",95,0)
 . S SDECTYPE=""
"RTN","SDEC27",96,0)
 . I +SDEC44,$D(SDECDPT(SDEC44,$P(SDECNOD,U))) D  ;SDECNOD is the SDEC APPOINTMENT node
"RTN","SDEC27",97,0)
 . . S SDECDNOD=SDECDPT(SDEC44,$P(SDECNOD,U)) ;SDECDNOD is a copy of the ^DPT(PAT,"S" node
"RTN","SDEC27",98,0)
 . . S SDECTYPE=$$STATUS(DFN,$P(SDECNOD,U),SDECDNOD)
"RTN","SDEC27",99,0)
 . . K SDECDPT(SDEC44,$P(SDECNOD,U))
"RTN","SDEC27",100,0)
 . S EESTAT=$$GET1^DIQ(409.84,SDECIEN_",",.23,"E")
"RTN","SDEC27",101,0)
 . S SDECI=SDECI+1
"RTN","SDEC27",102,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECNAM_"^"_SDECDOB_"^"_SDECSEX_"^"_SDECHRN_"^"_SDECAPT_"^"_SDECCLN_"^"_SDECTYPE_"^"_SDECCID_"^"_SDECCLRK_"^"_SDECMADE_"^"_SDECNOT_"^"_SDECSTRE_"^"_SDECCITY_"^"_SDECST_"^"_SDECZIP_"^"_SDECPHON_"^"_EESTAT_$C(30)
"RTN","SDEC27",103,0)
 . Q
"RTN","SDEC27",104,0)
 ;
"RTN","SDEC27",105,0)
 ;Go through remaining SDECDPT( entries
"RTN","SDEC27",106,0)
 I $D(SDECDPT) S SDEC44=0 D
"RTN","SDEC27",107,0)
 . F  S SDEC44=$O(SDECDPT(SDEC44)) Q:'+SDEC44  S SDECDT=0 D
"RTN","SDEC27",108,0)
 . . F  S SDECDT=$O(SDECDPT(SDEC44,SDECDT)) Q:'+SDECDT  D
"RTN","SDEC27",109,0)
 . . . S SDECDNOD=SDECDPT(SDEC44,SDECDT)
"RTN","SDEC27",110,0)
 . . . S Y=SDECDT
"RTN","SDEC27",111,0)
 . . . Q:'+Y
"RTN","SDEC27",112,0)
 . . . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC27",113,0)
 . . . S SDECAPT=Y
"RTN","SDEC27",114,0)
 . . . S SDECTYPE=$$STATUS(DFN,SDECDT,SDECDNOD) ;IHS/OIT/HMW 20050208 Added
"RTN","SDEC27",115,0)
 . . . S SDECCLN=$P($G(^SC(SDEC44,0)),U)
"RTN","SDEC27",116,0)
 . . . S SDECCLRK=$P(SDECDNOD,U,18)
"RTN","SDEC27",117,0)
 . . . S:+SDECCLRK SDECCLRK=$G(^VA(200,SDECCLRK,0)),SDECCLRK=$P(SDECCLRK,U)
"RTN","SDEC27",118,0)
 . . . S Y=$P(SDECDNOD,U,19)
"RTN","SDEC27",119,0)
 . . . I +Y X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC27",120,0)
 . . . S SDECMADE=Y
"RTN","SDEC27",121,0)
 . . . S SDECNOT=""
"RTN","SDEC27",122,0)
 . . . S SDECI=SDECI+1
"RTN","SDEC27",123,0)
 . . . S ^TMP("SDEC",$J,SDECI)=SDECNAM_"^"_SDECDOB_"^"_SDECSEX_"^"_SDECHRN_"^"_SDECAPT_"^"_SDECCLN_"^"_SDECTYPE_"^"_"^"_SDECCLRK_"^"_SDECMADE_"^"_SDECNOT_"^"_SDECSTRE_"^"_SDECCITY_"^"_SDECST_"^"_SDECZIP_"^"_SDECPHON_"^"_$C(30)
"RTN","SDEC27",124,0)
 . . . K SDECDPT(SDEC44,SDECDT)
"RTN","SDEC27",125,0)
 ;
"RTN","SDEC27",126,0)
 S SDECI=SDECI+1
"RTN","SDEC27",127,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC27",128,0)
 Q
"RTN","SDEC27",129,0)
 ;
"RTN","SDEC27",130,0)
STATUS(PAT,DATE,NODE) ; returns appt status
"RTN","SDEC27",131,0)
 NEW TYP
"RTN","SDEC27",132,0)
 S TYP=$$APPTYP^SDECU2(PAT,DATE)    ;sched vs. walkin
"RTN","SDEC27",133,0)
 I $P(NODE,U,2)["C" Q TYP_" - CANCELLED"
"RTN","SDEC27",134,0)
 I $P(NODE,U,2)'="NT",$P(NODE,U,2)["N" Q TYP_" - NO SHOW"
"RTN","SDEC27",135,0)
 I $$CO^SDECU2(PAT,+NODE,DATE) Q TYP_" - CHECKED OUT"
"RTN","SDEC27",136,0)
 I $$CI^SDECU2(PAT,+NODE,DATE) Q TYP_" - CHECKED IN"
"RTN","SDEC27",137,0)
 Q TYP
"RTN","SDEC27",138,0)
 ;
"RTN","SDEC27",139,0)
ERROR ;
"RTN","SDEC27",140,0)
 D ERR("VISTA Error")
"RTN","SDEC27",141,0)
 Q
"RTN","SDEC27",142,0)
 ;
"RTN","SDEC27",143,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC27",144,0)
 N SDECERR
"RTN","SDEC27",145,0)
 S:'$D(SDECI) SDECI=999
"RTN","SDEC27",146,0)
 S SDECERR=ERRNO
"RTN","SDEC27",147,0)
 S SDECI=SDECI+1
"RTN","SDEC27",148,0)
 S ^TMP("SDEC",$J,SDECI)="^^^^^^^^^^^^^^^"_$C(30)
"RTN","SDEC27",149,0)
 S SDECI=SDECI+1
"RTN","SDEC27",150,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC27",151,0)
 Q
"RTN","SDEC27",152,0)
PATINFO(DFN) ;EP
"RTN","SDEC27",153,0)
 ;Intrisic Function returns NAME^SEX^DOB^HRN^STREET^CITY^STATE^ZIP^PHONE for patient ien DFN
"RTN","SDEC27",154,0)
 ;DOB is in external format
"RTN","SDEC27",155,0)
 ;HRN depends on existence of DUZ(2)
"RTN","SDEC27",156,0)
 ;
"RTN","SDEC27",157,0)
 N SDECNOD,SDECNAM,SDECSEX,SDECDOB,SDECHRN,SDECSTRT,SDECCITY,SDECST,SDECZIP,SDECPHON
"RTN","SDEC27",158,0)
 S SDECNOD=^DPT(+DFN,0)
"RTN","SDEC27",159,0)
 S SDECNAM=$P(SDECNOD,U) ;NAME
"RTN","SDEC27",160,0)
 S SDECSEX=$P(SDECNOD,U,2)
"RTN","SDEC27",161,0)
 S SDECSEX=$S(SDECSEX="F":"FEMALE",SDECSEX="M":"MALE",1:"")
"RTN","SDEC27",162,0)
 S Y=$P(SDECNOD,U,3) I Y]""  X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC27",163,0)
 S SDECDOB=Y ;DOB
"RTN","SDEC27",164,0)
 S SDECHRN=""
"RTN","SDEC27",165,0)
 I $D(DUZ(2)) I DUZ(2)>0 S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;HRN
"RTN","SDEC27",166,0)
 ;
"RTN","SDEC27",167,0)
 S SDECNOD=$G(^DPT(+DFN,.11))
"RTN","SDEC27",168,0)
 S (SDECSTRT,SDECCITY,SDECST,SDECZIP)=""
"RTN","SDEC27",169,0)
 I SDECNOD]"" D
"RTN","SDEC27",170,0)
 . S SDECSTRT=$E($P(SDECNOD,U),1,50) ;STREET
"RTN","SDEC27",171,0)
 . S SDECCITY=$P(SDECNOD,U,4) ;CITY
"RTN","SDEC27",172,0)
 . S SDECST=$P(SDECNOD,U,5) ;STATE
"RTN","SDEC27",173,0)
 . I +SDECST,$D(^DIC(5,+SDECST,0)) S SDECST=$P(^DIC(5,+SDECST,0),U,2)
"RTN","SDEC27",174,0)
 . S SDECZIP=$P(SDECNOD,U,6) ;ZIP
"RTN","SDEC27",175,0)
 ;
"RTN","SDEC27",176,0)
 S SDECNOD=$G(^DPT(+DFN,.13)) ;PHONE
"RTN","SDEC27",177,0)
 S SDECPHON=$P(SDECNOD,U)
"RTN","SDEC27",178,0)
 ;
"RTN","SDEC27",179,0)
 Q SDECNAM_U_SDECSEX_U_SDECDOB_U_SDECHRN_U_SDECSTRT_U_SDECCITY_U_SDECST_U_SDECZIP_U_SDECPHON
"RTN","SDEC27",180,0)
 ;
"RTN","SDEC27",181,0)
CLINLET(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;CLINIC LETTERS Appointment data
"RTN","SDEC27",182,0)
 ;CLINLET(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI)  external parameter tag is in SDEC
"RTN","SDEC27",183,0)
 ;Return recordset of patient appointments
"RTN","SDEC27",184,0)
 ;between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"RTN","SDEC27",185,0)
 ;Used in listing a patient's appointments and generating patient letters.
"RTN","SDEC27",186,0)
 ;SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece is null, so discard it.)
"RTN","SDEC27",187,0)
 ;SDECBEG and SDECEND are in external date form.
"RTN","SDEC27",188,0)
 ;SDECWI = return only appointments where the WALKIN field is yes
"RTN","SDEC27",189,0)
 ;RETURN:
"RTN","SDEC27",190,0)
 ; Global Array in which each array entry contains the following Clinic Letter data separated by ^:
"RTN","SDEC27",191,0)
 ; 1. Name
"RTN","SDEC27",192,0)
 ; 2. DOB
"RTN","SDEC27",193,0)
 ; 3. Sex
"RTN","SDEC27",194,0)
 ; 4. HRN
"RTN","SDEC27",195,0)
 ; 5. ApptDate
"RTN","SDEC27",196,0)
 ; 6. Clinic
"RTN","SDEC27",197,0)
 ; 7. TypeStatus
"RTN","SDEC27",198,0)
 ; 8. RESOURCEID
"RTN","SDEC27",199,0)
 ; 9. APPT_MADE_BY
"RTN","SDEC27",200,0)
 ;10. DATE_APPT_MADE
"RTN","SDEC27",201,0)
 ;11. NOTE
"RTN","SDEC27",202,0)
 ;12. STREET
"RTN","SDEC27",203,0)
 ;13. CITY
"RTN","SDEC27",204,0)
 ;14. STATE
"RTN","SDEC27",205,0)
 ;15. ZIP
"RTN","SDEC27",206,0)
 ;16. HOMEPHONE
"RTN","SDEC27",207,0)
 ;
"RTN","SDEC27",208,0)
 N SDECI,SDECNOD,SDECNAM,SDECDOB,SDECHRN,SDECSEX,SDECCID,SDECCNOD,SDECDT
"RTN","SDEC27",209,0)
 N SDECJ,SDECAID,DFN,SDECPNOD,SDECCLN,SDECCLRK,SDECMADE,SDECNOT,SDECLIN
"RTN","SDEC27",210,0)
 N SDECSTRT,%DT,X,Y
"RTN","SDEC27",211,0)
 N SDECSTRE,SDECCITY,SDECST,SDECZIP,SDECPHON
"RTN","SDEC27",212,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC27",213,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC27",214,0)
 S SDECI=0
"RTN","SDEC27",215,0)
 S ^TMP("SDEC",$J,SDECI)="T00030Name^D00020DOB^T00030Sex^T00030HRN^D00030ApptDate^T00030Clinic^T00030TypeStatus"
"RTN","SDEC27",216,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_"^I00010RESOURCEID^T00030APPT_MADE_BY^D00020DATE_APPT_MADE^T00250NOTE^T00030STREET^T00030CITY^T00030STATE^T00030ZIP^T00030HOMEPHONE"_$C(30)
"RTN","SDEC27",217,0)
 ;
"RTN","SDEC27",218,0)
 ;Convert beginning and ending dates
"RTN","SDEC27",219,0)
 ;
"RTN","SDEC27",220,0)
 S X=SDECBEG,%DT="X" D ^%DT S SDECBEG=$P(Y,"."),SDECBEG=SDECBEG-1,SDECBEG=SDECBEG_".9999"
"RTN","SDEC27",221,0)
 I Y=-1 D ERR(SDECI,0,"Routine: SDEC27, Error: Invalid Date") Q
"RTN","SDEC27",222,0)
 S X=SDECEND,%DT="X" D ^%DT S SDECEND=$P(Y,"."),SDECEND=SDECEND_".9999"
"RTN","SDEC27",223,0)
 I Y=-1 D ERR(SDECI,0,"Routine: SDEC27, Error: Invalid Date") Q
"RTN","SDEC27",224,0)
 I SDECCLST="" D ERR(SDECI,0,"Routine: SDEC27, Error: Null clinic list") Q
"RTN","SDEC27",225,0)
 ;
"RTN","SDEC27",226,0)
 ;For each clinic in SDECCLST $O through ^SDEC(409.84,"ARSRC",ResourceIEN,FMDate,ApptIEN)
"RTN","SDEC27",227,0)
 ;
"RTN","SDEC27",228,0)
 F SDECJ=1:1:$L(SDECCLST,"|")-1 S SDECCID=$P(SDECCLST,"|",SDECJ) D
"RTN","SDEC27",229,0)
 . S SDECCLN=$G(^SDEC(409.831,SDECCID,0)) S SDECCLN=$P(SDECCLN,U) Q:SDECCLN=""
"RTN","SDEC27",230,0)
 . S SDECSTRT=SDECBEG F  S SDECSTRT=$O(^SDEC(409.84,"ARSRC",SDECCID,SDECSTRT)) Q:'+SDECSTRT  Q:SDECSTRT>SDECEND  D
"RTN","SDEC27",231,0)
 . . S SDECAID=0 F  S SDECAID=$O(^SDEC(409.84,"ARSRC",SDECCID,SDECSTRT,SDECAID)) Q:'+SDECAID  D
"RTN","SDEC27",232,0)
 . . . S SDECNOD=$G(^SDEC(409.84,SDECAID,0))
"RTN","SDEC27",233,0)
 . . . Q:SDECNOD=""
"RTN","SDEC27",234,0)
 . . . Q:$P(SDECNOD,U,12)]""  ;CANCELLED
"RTN","SDEC27",235,0)
 . . . I '$G(SDECWI),$P(SDECNOD,U,13)="y" Q  ;DO NOT ALLOW WALKIN
"RTN","SDEC27",236,0)
 . . . I $G(SDECWI),$P(SDECNOD,U,13)'="y" Q  ;ONLY ALLOW WALKIN
"RTN","SDEC27",237,0)
 . . . S Y=$P(SDECNOD,U)
"RTN","SDEC27",238,0)
 . . . Q:'+Y
"RTN","SDEC27",239,0)
 . . . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC27",240,0)
 . . . S SDECAPT=Y ;Appointment date time
"RTN","SDEC27",241,0)
 . . . ;
"RTN","SDEC27",242,0)
 . . . ;NOTE
"RTN","SDEC27",243,0)
 . . . S SDECNOT=""
"RTN","SDEC27",244,0)
 . . . I $D(^SDEC(409.84,SDECAID,1,0)) S SDECQ=0 F  S SDECQ=$O(^SDEC(409.84,SDECAID,1,SDECQ)) Q:'+SDECQ  D
"RTN","SDEC27",245,0)
 . . . . S SDECLIN=$G(^SDEC(409.84,SDECAID,1,SDECQ,0))
"RTN","SDEC27",246,0)
 . . . . S:(SDECLIN'="")&($E(SDECLIN,$L(SDECLIN)-1,$L(SDECLIN))'=" ") SDECLIN=SDECLIN_" "
"RTN","SDEC27",247,0)
 . . . . S SDECNOT=SDECNOT_SDECLIN
"RTN","SDEC27",248,0)
 . . . ;
"RTN","SDEC27",249,0)
 . . . S DFN=$P(SDECNOD,U,5)
"RTN","SDEC27",250,0)
 . . . S SDECPNOD=$$PATINFO(DFN)
"RTN","SDEC27",251,0)
 . . . S SDECNAM=$P(SDECPNOD,U) ;NAME
"RTN","SDEC27",252,0)
 . . . S SDECSEX=$P(SDECPNOD,U,2) ;SEX
"RTN","SDEC27",253,0)
 . . . S SDECDOB=$P(SDECPNOD,U,3) ;DOB
"RTN","SDEC27",254,0)
 . . . S SDECHRN=$P(SDECPNOD,U,4) ;Health Record Number for location DUZ(2)
"RTN","SDEC27",255,0)
 . . . S SDECSTRE=$P(SDECPNOD,U,5) ;Street
"RTN","SDEC27",256,0)
 . . . S SDECCITY=$P(SDECPNOD,U,6) ;City
"RTN","SDEC27",257,0)
 . . . S SDECST=$P(SDECPNOD,U,7) ;State
"RTN","SDEC27",258,0)
 . . . S SDECZIP=$P(SDECPNOD,U,8) ;zip
"RTN","SDEC27",259,0)
 . . . S SDECPHON=$P(SDECPNOD,U,9) ;homephone
"RTN","SDEC27",260,0)
 . . . S SDECTYPE="" ;Type/status doesn't exist for SDEC APPT clinics and it's not needed for clinic letters
"RTN","SDEC27",261,0)
 . . . S SDECCLRK=$P(SDECNOD,U,8)
"RTN","SDEC27",262,0)
 . . . S:+SDECCLRK SDECCLRK=$G(^VA(200,SDECCLRK,0)),SDECCLRK=$P(SDECCLRK,U)
"RTN","SDEC27",263,0)
 . . . S Y=$P(SDECNOD,U,9)
"RTN","SDEC27",264,0)
 . . . I +Y X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC27",265,0)
 . . . S SDECMADE=Y
"RTN","SDEC27",266,0)
 . . . S SDECI=SDECI+1
"RTN","SDEC27",267,0)
 . . . S ^TMP("SDEC",$J,SDECI)=SDECNAM_"^"_SDECDOB_"^"_SDECSEX_"^"_SDECHRN_"^"_SDECAPT_"^"_SDECCLN_"^"_SDECTYPE_"^"_SDECCID_"^"_SDECCLRK_"^"_SDECMADE_"^"_SDECNOT_"^"_SDECSTRE_"^"_SDECCITY_"^"_SDECST_"^"_SDECZIP_"^"_SDECPHON_$C(30)
"RTN","SDEC27",268,0)
 ;
"RTN","SDEC27",269,0)
 S SDECI=SDECI+1
"RTN","SDEC27",270,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC27",271,0)
 Q
"RTN","SDEC27",272,0)
 ;
"RTN","SDEC27",273,0)
CLINLETW(SDECY,SDECCLST,SDECBEG,SDECEND) ;CLINIC LETTERS WALK-IN Appointment data for Walk-in Appointments only
"RTN","SDEC27",274,0)
 ;CLINLETW(SDECY,SDECCLST,SDECBEG,SDECEND)  external parameter tag is in SDEC
"RTN","SDEC27",275,0)
 ;Return recordset of patient walk-in appointments
"RTN","SDEC27",276,0)
 ;between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"RTN","SDEC27",277,0)
 ;Used in listing a patient's walk-in appointments and generating patient letters.
"RTN","SDEC27",278,0)
 ;SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece is null, so discard it.)
"RTN","SDEC27",279,0)
 ;SDECBEG and SDECEND are in external date form.
"RTN","SDEC27",280,0)
 ;RETURN:
"RTN","SDEC27",281,0)
 ; Global Array in which each array entry contains the following Clinic Letter data separated by ^:
"RTN","SDEC27",282,0)
 ; 1. Name
"RTN","SDEC27",283,0)
 ; 2. DOB
"RTN","SDEC27",284,0)
 ; 3. Sex
"RTN","SDEC27",285,0)
 ; 4. HRN
"RTN","SDEC27",286,0)
 ; 5. ApptDate
"RTN","SDEC27",287,0)
 ; 6. Clinic
"RTN","SDEC27",288,0)
 ; 7. TypeStatus
"RTN","SDEC27",289,0)
 ; 8. RESOURCEID
"RTN","SDEC27",290,0)
 ; 9. APPT_MADE_BY
"RTN","SDEC27",291,0)
 ;10. DATE_APPT_MADE
"RTN","SDEC27",292,0)
 ;11. NOTE
"RTN","SDEC27",293,0)
 ;12. STREET
"RTN","SDEC27",294,0)
 ;13. CITY
"RTN","SDEC27",295,0)
 ;14. STATE
"RTN","SDEC27",296,0)
 ;15. ZIP
"RTN","SDEC27",297,0)
 ;16. HOMEPHONE
"RTN","SDEC27",298,0)
 S:$G(U)="" U="^"
"RTN","SDEC27",299,0)
 D CLINLET(.SDECY,SDECCLST,SDECBEG,SDECEND,1)
"RTN","SDEC27",300,0)
 Q
"RTN","SDEC28")
0^32^B71646964^n/a
"RTN","SDEC28",1,0)
SDEC28 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC28",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC28",3,0)
 ;
"RTN","SDEC28",4,0)
 Q
"RTN","SDEC28",5,0)
 ;
"RTN","SDEC28",6,0)
PTLOOKRS(SDECY,SDECP,SDECC,LASTSUB)  ;Patient Lookup
"RTN","SDEC28",7,0)
 ;SDECP   - (optional)    Free-Text - Partial name to look up
"RTN","SDEC28",8,0)
 ;SDECC   - (optional) Max number of patients to return; defaults to 10
"RTN","SDEC28",9,0)
 ;LASTSUB - (optional) last subscripts from previous call
"RTN","SDEC28",10,0)
 ;Find up to SDECC patients matching SDECP*
"RTN","SDEC28",11,0)
 ;Supports DOB Lookup, SSN Lookup
"RTN","SDEC28",12,0)
 ;
"RTN","SDEC28",13,0)
 N SDECI
"RTN","SDEC28",14,0)
 S SDECI=0
"RTN","SDEC28",15,0)
 S SDECP=$TR(SDECP,$C(13),"")
"RTN","SDEC28",16,0)
 S SDECP=$TR(SDECP,$C(10),"")
"RTN","SDEC28",17,0)
 S SDECP=$TR(SDECP,$C(9),"")
"RTN","SDEC28",18,0)
 S:$G(SDECC)="" SDECC=10
"RTN","SDEC28",19,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC28",20,0)
 N GAF,PADDRES1,PADDRES2,PADDRES3,PCITY,PLIST,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC28",21,0)
 N SDECHRN,SDECZ,SDECRET,SDECDPT,SDECRET,DFN,SDECFILE
"RTN","SDEC28",22,0)
 N SDECIENS,SDECFIELDS,SDECFLAGS,SDECVALUE,SDECNUMBER,SDECINDEXES,SDECSCREEN
"RTN","SDEC28",23,0)
 N SDECTARG,SDECMSG,SDECRSLT,SDECCNT,SDDEMO,%DT,X,Y,SDECIDEN,SDECX,SDSENS
"RTN","SDEC28",24,0)
 N PRACE,PRACEN,PETH,PETHN
"RTN","SDEC28",25,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC28",26,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC28",27,0)
 S ^TMP("SDEC",$J,0)="T00030ERROR_CODE^T00030ERROR_TEXT"_$C(30)
"RTN","SDEC28",28,0)
 I '+$G(DUZ) S SDECI=SDECI+1 S @SDECY@(SDECI)="0^Invalid User."_$C(30)_$C(31) Q
"RTN","SDEC28",29,0)
 I '$D(DUZ(2)) S SDECI=SDECI+1 S @SDECY@(SDECI)="0^Invalid Institution."_$C(30)_$C(31) Q
"RTN","SDEC28",30,0)
 S ^TMP("SDEC",$J,0)="T00030NAME^T00030HRN^T00030SSN^D00030DOB^T00030IEN^T00030GENDER^I00010INSTIEN^T00030INSTNAME"  ;8
"RTN","SDEC28",31,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^I00010USERIEN^T00030USERNAME"  ;10
"RTN","SDEC28",32,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"  ;15
"RTN","SDEC28",33,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030TYPEIEN^T00030TYPENAME^T00030PADDRES1^T00030PADDRES2"              ;19
"RTN","SDEC28",34,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030PADDRES3^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4"      ;24
"RTN","SDEC28",35,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030GAF^T00100SENSITIVE^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"  ;30
"RTN","SDEC28",36,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030LASTSUB"_$C(30)                                                       ;31
"RTN","SDEC28",37,0)
 ;
"RTN","SDEC28",38,0)
DFN ;Patient ID passed in
"RTN","SDEC28",39,0)
 I $E(SDECP)="#" D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",40,0)
 . S DFN=$E(SDECP,2,$L(SDECP))
"RTN","SDEC28",41,0)
 . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",42,0)
 . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",43,0)
 . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",44,0)
 . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",45,0)
 . D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",46,0)
 . Q
"RTN","SDEC28",47,0)
 ;
"RTN","SDEC28",48,0)
DOB ;DOB Lookup
"RTN","SDEC28",49,0)
 I +DUZ(2),((SDECP?1.2N1"/"1.2N1"/"1.4N)!(SDECP?1.2N1" "1.2N1" "1.4N)!(SDECP?1.2N1"-"1.2N1"-"1.4N)!(SDECP?1.2N1"."1.2N1"."1.4N)) D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",50,0)
 . S X=SDECP S %DT="P" D ^%DT S SDECP=Y Q:'+Y
"RTN","SDEC28",51,0)
 . Q:'$D(^DPT("ADOB",SDECP))
"RTN","SDEC28",52,0)
 . S DFN=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:0)
"RTN","SDEC28",53,0)
 . S LASTSUB=""
"RTN","SDEC28",54,0)
 . F  S DFN=$O(^DPT("ADOB",SDECP,DFN)) Q:'+DFN  D  Q:SDECI'<SDECC
"RTN","SDEC28",55,0)
 . . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",56,0)
 . . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",57,0)
 . . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",58,0)
 . . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",59,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY,DFN)
"RTN","SDEC28",60,0)
 . . Q
"RTN","SDEC28",61,0)
 . I SDECI>0,'+DFN S $P(@SDECY@(SDECI),U,31)=""
"RTN","SDEC28",62,0)
 . Q
"RTN","SDEC28",63,0)
 ;
"RTN","SDEC28",64,0)
 ;SSN Lookup
"RTN","SDEC28",65,0)
 I (SDECP?3.9N)!(SDECP?9N.1"P")!(SDECP?3N1"-"2N1"-"4N.1"P") D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",66,0)
 .;SSN Lookup (BS - last 4)
"RTN","SDEC28",67,0)
 .I SDECP?3.4N D
"RTN","SDEC28",68,0)
 ..S SDECP1=$S(SDECP?4N:SDECP-1,1:SDECP_$$FILL^SDECU(4-$L(SDECP),0))
"RTN","SDEC28",69,0)
 ..F  S SDECP1=$O(^DPT("BS",SDECP1)) Q:SDECP1=""  Q:SDECP1'[SDECP  Q:(SDECP?4N)&(SDECP1'=SDECP)  D
"RTN","SDEC28",70,0)
 ...S DFN=0 F  S DFN=$O(^DPT("BS",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",71,0)
 ....Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",72,0)
 ....S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",73,0)
 ....;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",74,0)
 ....;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",75,0)
 ....D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",76,0)
 .;(partial/full ssn)
"RTN","SDEC28",77,0)
 .D SSN(SDECP,.SDECI,SDECY)
"RTN","SDEC28",78,0)
 ;
"RTN","SDEC28",79,0)
 ;SSN Lookup (BS5)
"RTN","SDEC28",80,0)
 I SDECP?1A1.4N D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",81,0)
 .S SDECP1=$S(SDECP?1A4N:$E(SDECP,1)_($E(SDECP,2,5)-1),1:SDECP)
"RTN","SDEC28",82,0)
 .F  S SDECP1=$O(^DPT("BS5",SDECP1)) Q:SDECP1=""  Q:SDECP1'[SDECP  Q:(SDECP?1A4N)&(SDECP1'=SDECP)  D
"RTN","SDEC28",83,0)
 ..S DFN=0 F  S DFN=$O(^DPT("BS5",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",84,0)
 ...Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",85,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",86,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",87,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",88,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",89,0)
 ;
"RTN","SDEC28",90,0)
 ;Chart# Lookup  (not currently used)
"RTN","SDEC28",91,0)
 I 0,+DUZ(2),SDECP]"",$D(^AUPNPAT("D",SDECP)) D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",92,0)
 . S DFN=0 F  S DFN=$O(^AUPNPAT("D",SDECP,DFN)) Q:'+DFN  I $D(^AUPNPAT("D",SDECP,DFN,DUZ(2))) D  Q
"RTN","SDEC28",93,0)
 . . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",94,0)
 . . S SDECHRN=SDECP ;CHART
"RTN","SDEC28",95,0)
 . . ;I $D(^AUPNPAT(DFN,41,DUZ(2),0)),$P(^(0),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",96,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",97,0)
 . . Q
"RTN","SDEC28",98,0)
 . Q
"RTN","SDEC28",99,0)
 ;
"RTN","SDEC28",100,0)
 ;Partial name
"RTN","SDEC28",101,0)
 N SDARR
"RTN","SDEC28",102,0)
 I SDECP?2.A.E D  Q
"RTN","SDEC28",103,0)
 .;F SDECX=1:1:$P(SDECRSLT("DILIST",0),U) D
"RTN","SDEC28",104,0)
 .S SDECX=$S($P(LASTSUB,U,1)'="":$$GETSUB^SDECU($P(LASTSUB,U,1)),1:$$GETSUB^SDECU(SDECP))
"RTN","SDEC28",105,0)
 .F  S SDECX=$O(^DPT("B",SDECX)) Q:SDECX'[SDECP  Q:SDECX=""  D  Q:SDECI'<SDECC
"RTN","SDEC28",106,0)
 ..S DFN=$S($P(LASTSUB,U,2)'="":$P(LASTSUB,U,2),1:0)
"RTN","SDEC28",107,0)
 ..S LASTSUB=""
"RTN","SDEC28",108,0)
 ..F  S DFN=$O(^DPT("B",SDECX,DFN)) Q:DFN=""  D  Q:SDECI'<SDECC
"RTN","SDEC28",109,0)
 ...Q:$D(SDARR(DFN))
"RTN","SDEC28",110,0)
 ...S SDARR(DFN)=""
"RTN","SDEC28",111,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",112,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",113,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",114,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY,SDECX_"|"_DFN)
"RTN","SDEC28",115,0)
 ...Q
"RTN","SDEC28",116,0)
 .I SDECI>0,(SDECX="")!(SDECX'[SDECP) S $P(@SDECY@(SDECI),U,31)=""
"RTN","SDEC28",117,0)
 .S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC28",118,0)
 ;
"RTN","SDEC28",119,0)
 ;All Patients
"RTN","SDEC28",120,0)
 N FROM,SDSUB
"RTN","SDEC28",121,0)
 ;I SDECP'?1N.E D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",122,0)
 I SDECP="" D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",123,0)
 . K PLIST
"RTN","SDEC28",124,0)
 . S FROM=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:"")
"RTN","SDEC28",125,0)
 . D LISTALL^SDECPTPL(.PLIST,FROM,1,SDECC)
"RTN","SDEC28",126,0)
 . S SDECCNT=0 F  S SDECCNT=$O(PLIST(SDECCNT)) Q:'SDECCNT  D
"RTN","SDEC28",127,0)
 . . S DFN=$P(PLIST(SDECCNT),U)
"RTN","SDEC28",128,0)
 . . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",129,0)
 . . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",130,0)
 . . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",131,0)
 . . S SDSUB=$P(PLIST(SDECCNT),U,2)
"RTN","SDEC28",132,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY,SDSUB)
"RTN","SDEC28",133,0)
 . . Q
"RTN","SDEC28",134,0)
 . Q
"RTN","SDEC28",135,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31)
"RTN","SDEC28",136,0)
 Q
"RTN","SDEC28",137,0)
 ;
"RTN","SDEC28",138,0)
GET1(DFN,SDECHRN,SDECI,SDECY,LSUB) ;
"RTN","SDEC28",139,0)
 N PETH,PETHN,PRACE,PRACEN
"RTN","SDEC28",140,0)
 N SDECZ,SDECDPT,SDDEMO
"RTN","SDEC28",141,0)
 S SDECI=$G(SDECI)
"RTN","SDEC28",142,0)
 S LSUB=$G(LSUB)
"RTN","SDEC28",143,0)
 S SDECZ=""
"RTN","SDEC28",144,0)
 S SDECZ=$$GET1^DIQ(2,DFN_",",.01)
"RTN","SDEC28",145,0)
 S $P(SDECZ,U,2)=SDECHRN
"RTN","SDEC28",146,0)
 S SDECDPT=$G(^DPT(DFN,0))
"RTN","SDEC28",147,0)
 S $P(SDECZ,U,3)=$P(SDECDPT,U,9) ;SSN
"RTN","SDEC28",148,0)
 S Y=$P(SDECDPT,U,3) X ^DD("DD")
"RTN","SDEC28",149,0)
 S $P(SDECZ,U,4)=Y ;DOB
"RTN","SDEC28",150,0)
 S $P(SDECZ,U,5)=DFN
"RTN","SDEC28",151,0)
 ; Add Gender
"RTN","SDEC28",152,0)
 S $P(SDECZ,U,6)=$P(SDECDPT,U,2)
"RTN","SDEC28",153,0)
 ; Add Institution IEN and Name
"RTN","SDEC28",154,0)
 S $P(SDECZ,U,7)=DUZ(2)
"RTN","SDEC28",155,0)
 S $P(SDECZ,U,8)=$P(^DIC(4,DUZ(2),0),U)
"RTN","SDEC28",156,0)
 ; Add User IEN and Name
"RTN","SDEC28",157,0)
 S $P(SDECZ,U,9)=DUZ
"RTN","SDEC28",158,0)
 S $P(SDECZ,U,10)=$P(^VA(200,DUZ,0),U)
"RTN","SDEC28",159,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)     ;use to get PATIENT ENROLLMENT data
"RTN","SDEC28",160,0)
 S $P(SDECZ,U,11)=SDDEMO("PRIGRP")
"RTN","SDEC28",161,0)
 S $P(SDECZ,U,12)=SDDEMO("ELIGIEN")
"RTN","SDEC28",162,0)
 S $P(SDECZ,U,13)=SDDEMO("ELIGNAME")
"RTN","SDEC28",163,0)
 S $P(SDECZ,U,14)=SDDEMO("SVCCONN")
"RTN","SDEC28",164,0)
 S $P(SDECZ,U,15)=SDDEMO("SVCCONNP")
"RTN","SDEC28",165,0)
 S $P(SDECZ,U,16)=SDDEMO("TYPEIEN")
"RTN","SDEC28",166,0)
 S $P(SDECZ,U,17)=SDDEMO("TYPENAME")
"RTN","SDEC28",167,0)
 S $P(SDECZ,U,18)=SDDEMO("PADDRES1")   ;18   - Patient Address line 1
"RTN","SDEC28",168,0)
 S $P(SDECZ,U,19)=SDDEMO("PADDRES2")   ;19   - Patient Address line 2
"RTN","SDEC28",169,0)
 S $P(SDECZ,U,20)=SDDEMO("PADDRES3")   ;20  - Patient Address line 3
"RTN","SDEC28",170,0)
 S $P(SDECZ,U,21)=SDDEMO("PCITY")      ;21   - Patient City
"RTN","SDEC28",171,0)
 S $P(SDECZ,U,22)=SDDEMO("PSTATE")     ;22   - Patient state name
"RTN","SDEC28",172,0)
 S $P(SDECZ,U,23)=SDDEMO("PCOUNTRY")   ;23   - Patient country ID
"RTN","SDEC28",173,0)
 S $P(SDECZ,U,24)=SDDEMO("PZIP+4")     ;24   - Patient Zip+4
"RTN","SDEC28",174,0)
 S $P(SDECZ,U,25)=$$GAF^SDECU2(DFN)    ;25
"RTN","SDEC28",175,0)
 S $P(SDECZ,U,26)=$$PTSEC^SDECUTL(DFN) ;26   - sensitivity
"RTN","SDEC28",176,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC28",177,0)
 S $P(SDECZ,U,27)=PRACE
"RTN","SDEC28",178,0)
 S $P(SDECZ,U,28)=PRACEN
"RTN","SDEC28",179,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC28",180,0)
 S:PETH'="" $P(SDECZ,U,29)=PETH
"RTN","SDEC28",181,0)
 S:PETHN'="" $P(SDECZ,U,30)=PETHN
"RTN","SDEC28",182,0)
 S $P(SDECZ,U,31)=LSUB   ;SDECX_"|"_DFN
"RTN","SDEC28",183,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDECZ_$C(30)
"RTN","SDEC28",184,0)
 Q
"RTN","SDEC28",185,0)
 ;
"RTN","SDEC28",186,0)
SSN(SDECP,SDECI,SDECY)  ;
"RTN","SDEC28",187,0)
 I $D(^DPT("SSN",$E(SDECP,1,9)_"P")) D
"RTN","SDEC28",188,0)
 .N SDECP1
"RTN","SDEC28",189,0)
 .S SDECP1=$E(SDECP,1,9)_"O"
"RTN","SDEC28",190,0)
 .S SDECP1=$O(^DPT("SSN",SDECP1)) Q:SDECP1=""  Q:SDECP1'[$E(SDECP,1,9)  D SSN1
"RTN","SDEC28",191,0)
 E  D
"RTN","SDEC28",192,0)
 .N SDLEN S SDLEN=$L(SDECP)
"RTN","SDEC28",193,0)
 .I SDLEN=9 S SDECP1=SDECP D SSN1
"RTN","SDEC28",194,0)
 .E  D
"RTN","SDEC28",195,0)
 ..S SDECP1=SDECP_$$FILL^SDECU(9-SDLEN,0)
"RTN","SDEC28",196,0)
 ..F  S SDECP1=$O(^DPT("SSN",SDECP1)) Q:SDECP1=""  Q:$E(SDECP1,1,SDLEN)'=SDECP  D SSN1
"RTN","SDEC28",197,0)
 Q
"RTN","SDEC28",198,0)
SSN1 ;
"RTN","SDEC28",199,0)
 S DFN=0 F  S DFN=$O(^DPT("SSN",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",200,0)
 .Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",201,0)
 .S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",202,0)
 .;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",203,0)
 .;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",204,0)
 .D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",205,0)
 .Q
"RTN","SDEC28",206,0)
 Q
"RTN","SDEC28",207,0)
 ;
"RTN","SDEC28",208,0)
ERROR ;
"RTN","SDEC28",209,0)
 D ERR("Error")
"RTN","SDEC28",210,0)
 Q
"RTN","SDEC28",211,0)
 ;
"RTN","SDEC28",212,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC28",213,0)
 S SDECRET="T00030NAME^T00030HRN^T00030SSN^D00030DOB^T00030IEN^T00030GENDER"
"RTN","SDEC28",214,0)
 S SDECRET=SDECRET_"^I00010INSTIEN^T00030INSTNAME^I00010USERIEN^T00030USERNAME"
"RTN","SDEC28",215,0)
 S SDECRET=SDECRET_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"_$C(30)_$C(31)
"RTN","SDEC28",216,0)
 Q
"RTN","SDEC29")
0^33^B31682392^n/a
"RTN","SDEC29",1,0)
SDEC29 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC29",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC29",3,0)
 ;
"RTN","SDEC29",4,0)
 Q
"RTN","SDEC29",5,0)
 ;
"RTN","SDEC29",6,0)
COPYAPPT(SDECY,SDECRES,SDEC44,SDECBEG,SDECEND) ;Copy appointments from HOSPITAL LOCATION to SDEC RESOURCE
"RTN","SDEC29",7,0)
 ;COPYAPPT(SDECY,SDECRES,SDEC44,SDECBEG,SDECEND)  external parameter tag is in SDEC
"RTN","SDEC29",8,0)
 ;Copy appointments from HOSPITAL LOCATION entry SDEC44 to SDEC RESOURCE entry SDECRES
"RTN","SDEC29",9,0)
 ;Beginning with appointments on day SDECBEG and ending on SDECEND, inclusive
"RTN","SDEC29",10,0)
 ;
"RTN","SDEC29",11,0)
 ;Returns ADO Recordset formatted fields containing count of records copied and error message:
"RTN","SDEC29",12,0)
 ;
"RTN","SDEC29",13,0)
 ;
"RTN","SDEC29",14,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC29",15,0)
 K @SDECY
"RTN","SDEC29",16,0)
 N SDECI,SDECST,%DT,X,Y,ZTDESC,ZTDTH,ZTRTN,ZTSAVE,ZTSK
"RTN","SDEC29",17,0)
 S SDECI=0
"RTN","SDEC29",18,0)
 S ^TMP("SDEC",$J,0)="T00010TASK_NUMBER^T00020ERRORID"_$C(30)
"RTN","SDEC29",19,0)
 ;
"RTN","SDEC29",20,0)
 ;Convert beginning and ending dates
"RTN","SDEC29",21,0)
 ;
"RTN","SDEC29",22,0)
 S X=SDECBEG,%DT="X" D ^%DT S SDECBEG=$P(Y,"."),SDECBEG=SDECBEG-1
"RTN","SDEC29",23,0)
 I Y=-1 D ERR(SDECI,0,"Routine: SDEC29, Error: Invalid Date") Q
"RTN","SDEC29",24,0)
 S X=SDECEND,%DT="X" D ^%DT S SDECEND=$P(Y,"."),SDECEND=SDECEND+1
"RTN","SDEC29",25,0)
 I Y=-1 D ERR(SDECI,0,"Routine: SDEC29, Error: Invalid Date") Q
"RTN","SDEC29",26,0)
 ;
"RTN","SDEC29",27,0)
 S ZTRTN="ZTM^SDEC29",ZTDTH=$H,ZTDESC="COPY PATIENT APPTS"
"RTN","SDEC29",28,0)
 S ZTSAVE("SDECBEG")="",ZTSAVE("SDECEND")="",ZTSAVE("SDEC44")="",ZTSAVE("SDECRES")=""
"RTN","SDEC29",29,0)
 D ^%ZTLOAD
"RTN","SDEC29",30,0)
 ;
"RTN","SDEC29",31,0)
 S SDECI=SDECI+1
"RTN","SDEC29",32,0)
 S SDECST=$S($G(ZTSK)>0:"OK",1:"Unable to create task.")
"RTN","SDEC29",33,0)
 S ^TMP("SDEC",$J,SDECI)=$G(ZTSK)_"^"_SDECST_$C(30)_$C(31)
"RTN","SDEC29",34,0)
 Q
"RTN","SDEC29",35,0)
 ;
"RTN","SDEC29",36,0)
ZTM ;EP
"RTN","SDEC29",37,0)
 ;Taskman entry point
"RTN","SDEC29",38,0)
 ;$O through ^SC(SDEC44,"S",
"RTN","SDEC29",39,0)
 Q:'$D(ZTSK)
"RTN","SDEC29",40,0)
 N SDECCNT,SDECIEN,SDECNOD,SDECNOTE,SDECCAN,SDECPAT,SDECLEN,SDECMADE,SDECCLRK,SDECPAT,SDECQUIT
"RTN","SDEC29",41,0)
 S SDECCNT=0,SDECQUIT=0
"RTN","SDEC29",42,0)
 S ^TMP("SDEC29",$J,ZTSK)=SDECCNT
"RTN","SDEC29",43,0)
 TSTART
"RTN","SDEC29",44,0)
 F  S SDECBEG=$O(^SC(SDEC44,"S",SDECBEG)) Q:'+SDECBEG  Q:SDECBEG>SDECEND  Q:SDECQUIT  D
"RTN","SDEC29",45,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SC(SDEC44,"S",SDECBEG,1,SDECIEN)) Q:'+SDECIEN  Q:SDECQUIT  D
"RTN","SDEC29",46,0)
 . . S SDECNOD=$G(^SC(SDEC44,"S",SDECBEG,1,SDECIEN,0))
"RTN","SDEC29",47,0)
 . . Q:'+SDECNOD
"RTN","SDEC29",48,0)
 . . S SDECCAN=$P(SDECNOD,U,9)
"RTN","SDEC29",49,0)
 . . Q:SDECCAN="C"
"RTN","SDEC29",50,0)
 . . S SDECPAT=$P(SDECNOD,U)
"RTN","SDEC29",51,0)
 . . S SDECLEN=$P(SDECNOD,U,2) ;duration in minutes
"RTN","SDEC29",52,0)
 . . S SDECCLRK=$P(SDECNOD,U,6) ;appt made by (clerk)
"RTN","SDEC29",53,0)
 . . S SDECMADE=$P(SDECNOD,U,7) ;date appt made
"RTN","SDEC29",54,0)
 . . S SDECNOTE=$P(SDECNOD,U,4) ;'OTHER' field contains note
"RTN","SDEC29",55,0)
 . . S SDECCNT=SDECCNT+$$XFER(SDECRES,SDECBEG,SDECPAT,SDECLEN,SDECCLRK,SDECMADE,SDECNOTE)
"RTN","SDEC29",56,0)
 . . I +SDECCNT,SDECCNT#10=0 S ^TMP("SDEC29",$J,ZTSK)=SDECCNT_" records copied." ;every 10th record
"RTN","SDEC29",57,0)
 . . I $D(^TMP("SDEC29",$J,ZTSK,"CANCEL")) S SDECQUIT=1 ;Check for cancel flag
"RTN","SDEC29",58,0)
 . . Q
"RTN","SDEC29",59,0)
 . Q
"RTN","SDEC29",60,0)
 I 'SDECQUIT TCOMMIT
"RTN","SDEC29",61,0)
 E  TROLLBACK
"RTN","SDEC29",62,0)
 S ^TMP("SDEC29",$J,ZTSK)=$S(SDECQUIT:"Cancelled.  No records copied.",1:"Finished.  "_SDECCNT_" records copied.")
"RTN","SDEC29",63,0)
 Q
"RTN","SDEC29",64,0)
 ;
"RTN","SDEC29",65,0)
ZTMERR ;
"RTN","SDEC29",66,0)
 TROLLBACK
"RTN","SDEC29",67,0)
 D ^%ZTER
"RTN","SDEC29",68,0)
 Q
"RTN","SDEC29",69,0)
 ;
"RTN","SDEC29",70,0)
XFER(SDECRES,SDECBEG,SDECPAT,SDECLEN,SDECCLRK,SDECMADE,SDECNOTE) ;EP
"RTN","SDEC29",71,0)
 ;
"RTN","SDEC29",72,0)
 ;Copy record to SDEC APPOINTMENT file
"RTN","SDEC29",73,0)
 ;Return 1 if record copied, otherwise 0
"RTN","SDEC29",74,0)
 ;
"RTN","SDEC29",75,0)
 ;$O Thru ^SDECAPPT to determine if this appt already added
"RTN","SDEC29",76,0)
 N SDECEND,SDECIEN,SDECFND,SDECPAT2,SDECFDA,SDECIENS
"RTN","SDEC29",77,0)
 S SDECIEN=0,SDECFND=0
"RTN","SDEC29",78,0)
 F  S SDECIEN=$O(^SDEC(409.84,"ARSRC",SDECRES,SDECBEG,SDECIEN)) Q:'+SDECIEN  D  Q:SDECFND
"RTN","SDEC29",79,0)
 . S SDECNOD=$G(^SDEC(409.84,SDECIEN,0))
"RTN","SDEC29",80,0)
 . Q:'+SDECNOD
"RTN","SDEC29",81,0)
 . S SDECPAT2=$P(SDECNOD,U,5)
"RTN","SDEC29",82,0)
 . S SDECFND=0
"RTN","SDEC29",83,0)
 . I SDECPAT2=SDECPAT S SDECFND=1
"RTN","SDEC29",84,0)
 . Q
"RTN","SDEC29",85,0)
 Q:SDECFND 0
"RTN","SDEC29",86,0)
 ;
"RTN","SDEC29",87,0)
 ;Add to SDEC APPOINTMENT
"RTN","SDEC29",88,0)
 S SDECEND=SDECBEG
"RTN","SDEC29",89,0)
 ;Calculate ending time from beginning time and duration.
"RTN","SDEC29",90,0)
 S SDECEND=$$ADDMIN(SDECBEG,SDECLEN)
"RTN","SDEC29",91,0)
 S SDECIENS="+1,"
"RTN","SDEC29",92,0)
 S SDECFDA(409.84,SDECIENS,.01)=SDECBEG
"RTN","SDEC29",93,0)
 S SDECFDA(409.84,SDECIENS,.02)=SDECEND
"RTN","SDEC29",94,0)
 S SDECFDA(409.84,SDECIENS,.05)=SDECPAT
"RTN","SDEC29",95,0)
 S SDECFDA(409.84,SDECIENS,.07)=SDECRES
"RTN","SDEC29",96,0)
 S SDECFDA(409.84,SDECIENS,.08)=SDECCLRK
"RTN","SDEC29",97,0)
 S SDECFDA(409.84,SDECIENS,.09)=SDECMADE
"RTN","SDEC29",98,0)
 ;
"RTN","SDEC29",99,0)
 K SDECIEN
"RTN","SDEC29",100,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC29",101,0)
 S SDECIEN=+$G(SDECIEN(1))
"RTN","SDEC29",102,0)
 I '+SDECIEN Q 0
"RTN","SDEC29",103,0)
 ;
"RTN","SDEC29",104,0)
 ;Add WP field
"RTN","SDEC29",105,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE="" D
"RTN","SDEC29",106,0)
 . D WP^DIE(409.84,SDECIEN_",",1,"","SDECNOTE","SDECMSG")
"RTN","SDEC29",107,0)
 ;
"RTN","SDEC29",108,0)
 Q 1
"RTN","SDEC29",109,0)
 ;
"RTN","SDEC29",110,0)
ERR(SDECI,SDECCNT,SDECERR) ;Error processing
"RTN","SDEC29",111,0)
 S SDECI=SDECI+1
"RTN","SDEC29",112,0)
 S ^TMP("SDEC",$J,SDECI)=SDECCNT_"^"_SDECERR_$C(30)
"RTN","SDEC29",113,0)
 S SDECI=SDECI+1
"RTN","SDEC29",114,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC29",115,0)
 Q
"RTN","SDEC29",116,0)
 ;
"RTN","SDEC29",117,0)
ETRAP ;EP Error trap entry
"RTN","SDEC29",118,0)
 D ^%ZTER
"RTN","SDEC29",119,0)
 I '$D(SDECI) N SDECI S SDECI=999
"RTN","SDEC29",120,0)
 S SDECI=SDECI+1
"RTN","SDEC29",121,0)
 D ERR(SDECI,$G(SDECCNT),"Routine: SDEC29, Error")
"RTN","SDEC29",122,0)
 Q
"RTN","SDEC29",123,0)
 ;
"RTN","SDEC29",124,0)
CPSTAT(SDECY,SDECTSK) ;Copy Appointment Status
"RTN","SDEC29",125,0)
 ;CPSTAT(SDECY,SDECTSK)  external parameter tag is in SDEC
"RTN","SDEC29",126,0)
 ;Return status (copied record count) of tasked job having ZTSK=SDECTSK
"RTN","SDEC29",127,0)
 ;
"RTN","SDEC29",128,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC29",129,0)
 K @SDECY
"RTN","SDEC29",130,0)
 N SDECI,SDECCNT
"RTN","SDEC29",131,0)
 S SDECI=0
"RTN","SDEC29",132,0)
 S ^TMP("SDEC",$J,0)="T00020RECORD_COUNT^T00020ERRORID"_$C(30)
"RTN","SDEC29",133,0)
 S SDECCNT=$G(^TMP("SDEC29",$J,SDECTSK))
"RTN","SDEC29",134,0)
 I SDECCNT["Finished" K ^TMP("SDEC29",$J,SDECTSK)
"RTN","SDEC29",135,0)
 I SDECCNT["Cancelled" K ^TMP("SDEC29",$J,SDECTSK)
"RTN","SDEC29",136,0)
 S SDECI=SDECI+1
"RTN","SDEC29",137,0)
 S ^TMP("SDEC",$J,SDECI)=SDECCNT_"^"_"OK"_$C(30)_$C(31)
"RTN","SDEC29",138,0)
 Q
"RTN","SDEC29",139,0)
 ;
"RTN","SDEC29",140,0)
CPCANC(SDECY,SDECTSK) ;Copy Appointment Cancel
"RTN","SDEC29",141,0)
 ;CPCANC(SDECY,SDECTSK)  external parameter tag is in SDEC
"RTN","SDEC29",142,0)
 ;Signal tasked job having ZTSK=SDECTSK to cancel
"RTN","SDEC29",143,0)
 ;Returns current record count of copy process
"RTN","SDEC29",144,0)
 ;
"RTN","SDEC29",145,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC29",146,0)
 N SDECI,SDECCNT
"RTN","SDEC29",147,0)
 S SDECI=0
"RTN","SDEC29",148,0)
 S ^TMP("SDEC",$J,0)="T00020RECORD_COUNT^T00020ERRORID"_$C(30)
"RTN","SDEC29",149,0)
 S SDECCNT=$G(^TMP("SDEC29",$J,SDECTSK))
"RTN","SDEC29",150,0)
 I SDECCNT["FINISHED" K ^TMP("SDEC29",$J,SDECTSK)
"RTN","SDEC29",151,0)
 E  S ^TMP("SDEC29",$J,SDECTSK,"CANCEL")=""
"RTN","SDEC29",152,0)
 S SDECI=SDECI+1
"RTN","SDEC29",153,0)
 S ^TMP("SDEC",$J,SDECI)=SDECCNT_"^"_"OK"_$C(30)_$C(31)
"RTN","SDEC29",154,0)
 Q
"RTN","SDEC29",155,0)
 ;
"RTN","SDEC29",156,0)
ADDMIN(SDECSTRT,SDECLEN) ;
"RTN","SDEC29",157,0)
 ;
"RTN","SDEC29",158,0)
 ;Add SDECLEN minutes to time SDECSTRT and return end time
"RTN","SDEC29",159,0)
 N SDECEND,SDECH,SDECM,SDECSTIM,SDECETIM
"RTN","SDEC29",160,0)
 S SDECEND=$P(SDECSTRT,".")
"RTN","SDEC29",161,0)
 ;
"RTN","SDEC29",162,0)
 ;Convert start time to minutes past midnight
"RTN","SDEC29",163,0)
 S SDECSTIM=$P(SDECSTRT,".",2)
"RTN","SDEC29",164,0)
 S SDECSTIM=SDECSTIM_"0000"
"RTN","SDEC29",165,0)
 S SDECSTIM=$E(SDECSTIM,1,4)
"RTN","SDEC29",166,0)
 S SDECH=$E(SDECSTIM,1,2)
"RTN","SDEC29",167,0)
 S SDECH=SDECH*60
"RTN","SDEC29",168,0)
 S SDECH=SDECH+$E(SDECSTIM,3,4)
"RTN","SDEC29",169,0)
 ;
"RTN","SDEC29",170,0)
 ;Add duration to find minutes past midnight of end time
"RTN","SDEC29",171,0)
 S SDECETIM=SDECH+SDECLEN
"RTN","SDEC29",172,0)
 ;
"RTN","SDEC29",173,0)
 ;Convert back to a time
"RTN","SDEC29",174,0)
 S SDECH=SDECETIM\60
"RTN","SDEC29",175,0)
 S SDECH="00"_SDECH
"RTN","SDEC29",176,0)
 S SDECH=$E(SDECH,$L(SDECH)-1,$L(SDECH))
"RTN","SDEC29",177,0)
 S SDECM=SDECETIM#60
"RTN","SDEC29",178,0)
 S SDECM="00"_SDECM
"RTN","SDEC29",179,0)
 S SDECM=$E(SDECM,$L(SDECM)-1,$L(SDECM))
"RTN","SDEC29",180,0)
 S SDECETIM=SDECH_SDECM
"RTN","SDEC29",181,0)
 I SDECETIM>2400 S SDECETIM=2400
"RTN","SDEC29",182,0)
 S $P(SDECEND,".",2)=SDECETIM
"RTN","SDEC29",183,0)
 Q SDECEND
"RTN","SDEC30")
0^34^B3786070^n/a
"RTN","SDEC30",1,0)
SDEC30 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC30",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC30",3,0)
 ;
"RTN","SDEC30",4,0)
 Q
"RTN","SDEC30",5,0)
 ;
"RTN","SDEC30",6,0)
SPACEBAR(SDECY,SDECDIC,SDECVAL) ;Update ^DISV with most recent lookup value SDECVAL from file SDECDIC
"RTN","SDEC30",7,0)
 ;SPACEBAR(SDECY,SDECDIC,SDECVAL)  external parameter tag is in SDEC
"RTN","SDEC30",8,0)
 ;SDECDIC is the data global in the form GLOBAL(
"RTN","SDEC30",9,0)
 ;SDECVAL is the entry number (IEN) in the file
"RTN","SDEC30",10,0)
 ;
"RTN","SDEC30",11,0)
 ;Return Status = 1 if success, 0 if fail
"RTN","SDEC30",12,0)
 ;
"RTN","SDEC30",13,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC30",14,0)
 K @SDECY
"RTN","SDEC30",15,0)
 N SDEC1,SDECRES
"RTN","SDEC30",16,0)
 S SDECI=0
"RTN","SDEC30",17,0)
 I (SDECDIC="")!('+$G(SDECVAL)) D ERR(SDECI+1,99) Q
"RTN","SDEC30",18,0)
 S SDECDIC="^"_SDECDIC
"RTN","SDEC30",19,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC30",20,0)
 I $D(@(SDECDIC_"SDECVAL,0)")),'$D(^(-9)) D     ;Note:  Naked reference is immediately preceded by the full global reference per SAC 2.2.2.8
"RTN","SDEC30",21,0)
 . S ^DISV(DUZ,SDECDIC)=SDECVAL
"RTN","SDEC30",22,0)
 . S SDECRES=1
"RTN","SDEC30",23,0)
 E  S SDECRES=0
"RTN","SDEC30",24,0)
 S SDECI=SDECI+1
"RTN","SDEC30",25,0)
 S ^TMP("SDEC",$J,SDECI)=SDECRES_$C(30)_$C(31)
"RTN","SDEC30",26,0)
 Q
"RTN","SDEC30",27,0)
 ;
"RTN","SDEC30",28,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC30",29,0)
 S SDECI=SDECI+1
"RTN","SDEC30",30,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC30",31,0)
 S SDECI=SDECI+1
"RTN","SDEC30",32,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC30",33,0)
 Q
"RTN","SDEC30",34,0)
 ;
"RTN","SDEC30",35,0)
ETRAP ;EP Error trap entry
"RTN","SDEC30",36,0)
 I '$D(SDECI) N SDECI S SDECI=999
"RTN","SDEC30",37,0)
 S SDECI=SDECI+1
"RTN","SDEC30",38,0)
 D ERR(99,0)
"RTN","SDEC30",39,0)
 Q
"RTN","SDEC30",40,0)
 ;
"RTN","SDEC30",41,0)
EHRPT(SDECY,SDECWID,SDECDFN) ;Raise patient selection event to CLIENT
"RTN","SDEC30",42,0)
 ;EHRPT(SDECY,SDECWID,SDECDFN)  external parameter tag is in SDEC
"RTN","SDEC30",43,0)
 ;Return Status = 1 if success, 0 if error
"RTN","SDEC30",44,0)
 ;
"RTN","SDEC30",45,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC30",46,0)
 K @SDECY
"RTN","SDEC30",47,0)
 N SDEC1,SDECRES
"RTN","SDEC30",48,0)
 S SDECI=0,SDECRES=1
"RTN","SDEC30",49,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC30",50,0)
 I '+SDECDFN D ERR(SDECI+1,0) Q
"RTN","SDEC30",51,0)
 ;
"RTN","SDEC30",52,0)
 D PEVENT(SDECWID,SDECDFN) ;Raise patient selected event
"RTN","SDEC30",53,0)
 ;
"RTN","SDEC30",54,0)
 S SDECI=SDECI+1
"RTN","SDEC30",55,0)
 S ^TMP("SDEC",$J,SDECI)=SDECRES_$C(30)_$C(31)
"RTN","SDEC30",56,0)
 Q
"RTN","SDEC30",57,0)
 ;
"RTN","SDEC30",58,0)
PEVENT(SDECWID,DFN) ;EP - Raise patient selection event to CLIENT
"RTN","SDEC30",59,0)
 ;
"RTN","SDEC30",60,0)
 ;Change patient context to patient DFN
"RTN","SDEC30",61,0)
 ;on all CLIENT client sessions associated with user DUZ
"RTN","SDEC30",62,0)
 ;and workstation SDECWID.
"RTN","SDEC30",63,0)
 ;
"RTN","SDEC30",64,0)
 ;If SDECWID is "", the context change is sent to
"RTN","SDEC30",65,0)
 ;all CLIENT client sessions belonging to user DUZ.
"RTN","SDEC30",66,0)
 ;
"RTN","SDEC30",67,0)
 Q:'$G(DUZ)
"RTN","SDEC30",68,0)
 ;N UID,BRET
"RTN","SDEC30",69,0)
 ;S BRET=0,UID=0
"RTN","SDEC30",70,0)
 ;F  S BRET=$$NXTUID^CIANBUTL(.UID,1) Q:'UID  D
"RTN","SDEC30",71,0)
 ;. Q:DUZ'=$$GETVAR^CIANBUTL("DUZ",,,UID)
"RTN","SDEC30",72,0)
 ;. I SDECWID'="" Q:SDECWID'=$TR($$GETVAR^CIANBUTL("WID",,,UID),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SDEC30",73,0)
 ;. D QUEUE^CIANBEVT("CONTEXT.PATIENT",+DFN,UID)
"RTN","SDEC30",74,0)
 Q
"RTN","SDEC31")
0^35^B25481973^n/a
"RTN","SDEC31",1,0)
SDEC31 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC31",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC31",3,0)
 ;
"RTN","SDEC31",4,0)
 Q
"RTN","SDEC31",5,0)
 ;
"RTN","SDEC31",6,0)
NOSHOW(SDECY,SDECAPTID,SDECNS,USERIEN,SDECDATE)  ;Sets appointment noshow flag in SDEC APPOINTMENT file
"RTN","SDEC31",7,0)
 ;NOSHOW(SDECY,SDECAPTID,SDECNS,USERIEN,SDECDATE)  external parameter tag is in SDEC
"RTN","SDEC31",8,0)
 ;Called by SDEC NOSHOW
"RTN","SDEC31",9,0)
 ;SDECAPTID - (required) Appointment ID - Pointer to SDEC APPOINTMENT file
"RTN","SDEC31",10,0)
 ;SDECNS    - (required) Cancel flag  1=YES (Set NOSHOW); 0=NO (Cancel NOSHOW)
"RTN","SDEC31",11,0)
 ;USERIEN   - (optional) User that entered NoShow pointer to NEW PERSON
"RTN","SDEC31",12,0)
 ;                       default to current user
"RTN","SDEC31",13,0)
 ;SDECDATE  - (optional) Date/Time that No-show was entered in external format
"RTN","SDEC31",14,0)
 ;                      default to NOW.
"RTN","SDEC31",15,0)
 ;Calls CANCEL^SDEC08 to set noshow data in ^DPT
"RTN","SDEC31",16,0)
 ;Returns error code in recordset field ERRORID
"RTN","SDEC31",17,0)
 ;
"RTN","SDEC31",18,0)
 N SDECNOD,DFN,SDECSTART,SDECID,SDECI,SDECZ,SDECERR,SDECMSG,SDFDA,SDECIENS
"RTN","SDEC31",19,0)
 N SDECNOEV,%DT,X,Y
"RTN","SDEC31",20,0)
 S SDECNOEV=1 ;Don't execute protocol
"RTN","SDEC31",21,0)
 ;
"RTN","SDEC31",22,0)
 S SDECI=0
"RTN","SDEC31",23,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC31",24,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC31",25,0)
 S ^TMP("SDEC",$J,SDECI)="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC31",26,0)
 S SDECI=SDECI+1
"RTN","SDEC31",27,0)
 ;validate SDEC appointment ID
"RTN","SDEC31",28,0)
 I '+SDECAPTID D ERR(0,"SDEC31: Invalid Appointment ID") Q
"RTN","SDEC31",29,0)
 I '$D(^SDEC(409.84,SDECAPTID,0)) D ERR(0,"SDEC31: Invalid Appointment ID") Q
"RTN","SDEC31",30,0)
 ;validate cancel flag
"RTN","SDEC31",31,0)
 S SDECNS=$G(SDECNS)
"RTN","SDEC31",32,0)
 S SDECNS=$S(SDECNS="YES":1,SDECNS=1:1,SDECNS="NO":0,SDECNS=0:0,1:"")
"RTN","SDEC31",33,0)
 I SDECNS="" D ERR(0,"SDEC31: Invalid No Show value") Q
"RTN","SDEC31",34,0)
 ;validate user IEN (optional)
"RTN","SDEC31",35,0)
 S USERIEN=$G(USERIEN)
"RTN","SDEC31",36,0)
 I USERIEN'="" I '$D(^VA(200,+USERIEN,0)) S USERIEN=""
"RTN","SDEC31",37,0)
 I USERIEN="" S USERIEN=DUZ
"RTN","SDEC31",38,0)
 ;validate cancel date/time (optional)
"RTN","SDEC31",39,0)
 S SDECDATE=$G(SDECDATE)
"RTN","SDEC31",40,0)
 I SDECDATE'="" S %DT="T" S X=SDECDATE D ^%DT S SDECDATE=Y I Y=-1 S SDECDATE=""
"RTN","SDEC31",41,0)
 I $G(SDECDATE)="" S SDECDATE=$$NOW^XLFDT
"RTN","SDEC31",42,0)
 TSTART
"RTN","SDEC31",43,0)
 ;
"RTN","SDEC31",44,0)
 ;Edit SDEC APPOINTMENT entry NOSHOW field
"RTN","SDEC31",45,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC31",46,0)
 ;I SDECNOD="" D ERR(0,"SDEC31: Invalid Appointment ID") Q
"RTN","SDEC31",47,0)
 S DFN=$P(SDECNOD,U,5)
"RTN","SDEC31",48,0)
 S SDECSTART=$P(SDECNOD,U)
"RTN","SDEC31",49,0)
 ;
"RTN","SDEC31",50,0)
 D SDECNOS(SDECAPTID,SDECNS,USERIEN,SDECDATE)
"RTN","SDEC31",51,0)
 I $D(SDECMSG("DIERR")) S SDECMSG=$G(SDECMSG("DIERR",1,"TEXT",1)) D ERR(0,"SDEC31: "_SDECMSG) Q
"RTN","SDEC31",52,0)
 ;
"RTN","SDEC31",53,0)
 S SDCL=$P(SDECNOD,U,7) ;RESOURCEID
"RTN","SDEC31",54,0)
 I SDCL]"",$D(^SDEC(409.831,SDCL,0)) D  I $G(SDECZ)]"" S SDECERR="SDEC31: APNOSHO Returned: "_SDECZ D ERR(0,SDECERR) Q
"RTN","SDEC31",55,0)
 . S SDECNOD=^SDEC(409.831,SDCL,0)
"RTN","SDEC31",56,0)
 . S SDCL=$P(SDECNOD,U,4) ;HOSPITAL LOCATION
"RTN","SDEC31",57,0)
 . I SDCL]"",$D(^SC(SDCL,0)) D APNOSHO(.SDECZ,SDCL,DFN,SDECSTART,SDECNS,USERIEN,SDECDATE,SDECAPTID)
"RTN","SDEC31",58,0)
 ;
"RTN","SDEC31",59,0)
 TCOMMIT
"RTN","SDEC31",60,0)
 S SDECI=SDECI+1
"RTN","SDEC31",61,0)
 S ^TMP("SDEC",$J,SDECI)="1^"_$C(30)
"RTN","SDEC31",62,0)
 S SDECI=SDECI+1
"RTN","SDEC31",63,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC31",64,0)
 Q
"RTN","SDEC31",65,0)
 ;
"RTN","SDEC31",66,0)
APNOSHO(SDECZ,SDCL,DFN,SDT,SDECNS,USERIEN,SDECCDT,SDAPID)  ;
"RTN","SDEC31",67,0)
 ; update file 2 info
"RTN","SDEC31",68,0)
 ;Set noshow for patient DFN in clinic SDCL
"RTN","SDEC31",69,0)
 ;at time SDT
"RTN","SDEC31",70,0)
 N SDECC,%H,SDECIEN,SDRTYP
"RTN","SDEC31",71,0)
 N SDECIENS,SDFDA,SDECMSG,IEN
"RTN","SDEC31",72,0)
 S %H=$H D YMD^%DTC
"RTN","SDEC31",73,0)
 ;
"RTN","SDEC31",74,0)
 S SDECIENS=SDT_","_DFN_","
"RTN","SDEC31",75,0)
 I +SDECNS D
"RTN","SDEC31",76,0)
 . S SDFDA(2.98,SDECIENS,3)="N"
"RTN","SDEC31",77,0)
 . S SDFDA(2.98,SDECIENS,14)=USERIEN
"RTN","SDEC31",78,0)
 . S SDFDA(2.98,SDECIENS,15)=SDECCDT
"RTN","SDEC31",79,0)
 E  D
"RTN","SDEC31",80,0)
 . S SDFDA(2.98,SDECIENS,3)=""
"RTN","SDEC31",81,0)
 . S SDFDA(2.98,SDECIENS,14)=""
"RTN","SDEC31",82,0)
 . S SDFDA(2.98,SDECIENS,15)=""
"RTN","SDEC31",83,0)
 K SDECIEN
"RTN","SDEC31",84,0)
 D UPDATE^DIE("","SDFDA","SDECIEN","SDECMSG")
"RTN","SDEC31",85,0)
 S SDECZ=$G(SDECMSG("DIERR",1,"TEXT",1))
"RTN","SDEC31",86,0)
 S SDRTYP=$$GET1^DIQ(409.84,SDAPID_",",.22,"I")
"RTN","SDEC31",87,0)
 I $P(SDRTYP,";",2)="GMR(123," D
"RTN","SDEC31",88,0)
 .S IEN=$$SCIEN^SDECU2(DFN,SDCL,SDT)
"RTN","SDEC31",89,0)
 .D NOSHOW^SDCNSLT(SDCL,SDT,DFN,$P(SDRTYP,";",1),IEN)     ;,AUTO,NSDIE,NSDA)
"RTN","SDEC31",90,0)
 Q
"RTN","SDEC31",91,0)
 ;
"RTN","SDEC31",92,0)
SDECNOS(SDECAPTID,SDECNS,USERIEN,SDECDATE) ;
"RTN","SDEC31",93,0)
 ;
"RTN","SDEC31",94,0)
 N SDFDA,SDECIENS
"RTN","SDEC31",95,0)
 S SDECIENS=SDECAPTID_","
"RTN","SDEC31",96,0)
 S SDFDA(409.84,SDECIENS,.1)=SDECNS ;NOSHOW
"RTN","SDEC31",97,0)
 S SDFDA(409.84,SDECIENS,.101)=$S(+SDECNS:SDECDATE,1:"")  ;NOSHOW DATE
"RTN","SDEC31",98,0)
 S SDFDA(409.84,SDECIENS,.102)=$S(+SDECNS:USERIEN,1:"")   ;NOSHOW USER
"RTN","SDEC31",99,0)
 D FILE^DIE("","SDFDA","SDECMSG")
"RTN","SDEC31",100,0)
 ;
"RTN","SDEC31",101,0)
 Q
"RTN","SDEC31",102,0)
 ;
"RTN","SDEC31",103,0)
NOSEVT(SDECPAT,SDECSTART,SDECSC) ;EP Called by SDEC NOSHOW APPOINTMENT event
"RTN","SDEC31",104,0)
 ;when appointments NOSHOW via PIMS interface.
"RTN","SDEC31",105,0)
 ;Propagates NOSHOW to SDECAPPT and raises refresh event to running GUI clients
"RTN","SDEC31",106,0)
 ;
"RTN","SDEC31",107,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC31",108,0)
 Q:'+$G(SDECSC)
"RTN","SDEC31",109,0)
 ;Q:$G(SDATA("AFTER","STATUS"))["AUTO RE-BOOK"
"RTN","SDEC31",110,0)
 N SDECSTAT,SDECFOUND,SDECRES
"RTN","SDEC31",111,0)
 S SDECSTAT=1
"RTN","SDEC31",112,0)
 ;S:$G(SDATA("BEFORE","STATUS"))["NO-SHOW" SDECSTAT=0
"RTN","SDEC31",113,0)
 S SDECFOUND=0
"RTN","SDEC31",114,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0)) S SDECFOUND=$$NOSEVT1(SDECRES,SDECSTART,SDECPAT,SDECSTAT)
"RTN","SDEC31",115,0)
 I SDECFOUND D NOSEVT3(SDECRES) Q
"RTN","SDEC31",116,0)
 Q
"RTN","SDEC31",117,0)
 ;
"RTN","SDEC31",118,0)
NOSEVT1(SDECRES,SDECSTART,SDECPAT,SDECSTAT) ;
"RTN","SDEC31",119,0)
 ;Get appointment id in SDECAPT
"RTN","SDEC31",120,0)
 ;If found, call SDECNOS(SDECAPPT) and return 1
"RTN","SDEC31",121,0)
 ;else return 0
"RTN","SDEC31",122,0)
 N SDECFOUND,SDECAPPT
"RTN","SDEC31",123,0)
 S SDECFOUND=0
"RTN","SDEC31",124,0)
 Q:'+$G(SDECRES) SDECFOUND
"RTN","SDEC31",125,0)
 Q:'$D(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART)) SDECFOUND
"RTN","SDEC31",126,0)
 S SDECAPPT=0 F  S SDECAPPT=$O(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART,SDECAPPT)) Q:'+SDECAPPT  D  Q:SDECFOUND
"RTN","SDEC31",127,0)
 . S SDECNOD=$G(^SDEC(409.84,SDECAPPT,0)) Q:SDECNOD=""
"RTN","SDEC31",128,0)
 . I $P(SDECNOD,U,5)=SDECPAT,$P(SDECNOD,U,12)="" S SDECFOUND=1 Q
"RTN","SDEC31",129,0)
 I SDECFOUND,+$G(SDECAPPT) D SDECNOS(SDECAPPT,SDECSTAT)
"RTN","SDEC31",130,0)
 Q SDECFOUND
"RTN","SDEC31",131,0)
 ;
"RTN","SDEC31",132,0)
NOSEVT3(SDECRES) ;
"RTN","SDEC31",133,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC31",134,0)
 ;
"RTN","SDEC31",135,0)
 Q
"RTN","SDEC31",136,0)
 N SDECRESN
"RTN","SDEC31",137,0)
 S SDECRESN=$G(^SDEC(409.831,SDECRES,0))
"RTN","SDEC31",138,0)
 Q:SDECRESN=""
"RTN","SDEC31",139,0)
 S SDECRESN=$P(SDECRESN,"^")
"RTN","SDEC31",140,0)
 ;D EVENT^BMXMEVN("SDEC SCHEDULE",SDECRESN)
"RTN","SDEC31",141,0)
 Q
"RTN","SDEC31",142,0)
 ;
"RTN","SDEC31",143,0)
 ;
"RTN","SDEC31",144,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC31",145,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC31",146,0)
 S SDECI=SDECI+1
"RTN","SDEC31",147,0)
 TROLLBACK
"RTN","SDEC31",148,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_ERRTXT_$C(30)
"RTN","SDEC31",149,0)
 S SDECI=SDECI+1
"RTN","SDEC31",150,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC31",151,0)
 Q
"RTN","SDEC31",152,0)
 ;
"RTN","SDEC31",153,0)
ETRAP ;EP Error trap entry
"RTN","SDEC31",154,0)
 D ^%ZTER
"RTN","SDEC31",155,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC31",156,0)
 S SDECI=SDECI+1
"RTN","SDEC31",157,0)
 D ERR(0,"SDEC31 Error")
"RTN","SDEC31",158,0)
 Q
"RTN","SDEC31",159,0)
 ;
"RTN","SDEC31",160,0)
IMHERE(SDECRES) ;I'm Here
"RTN","SDEC31",161,0)
 ;IMHERE(SDECRES)  external parameter tag is in SDEC
"RTN","SDEC31",162,0)
 ;Entry point for SDEC IM HERE remote procedure
"RTN","SDEC31",163,0)
 ; Returns a simple value to client.  Used to establish continued existence
"RTN","SDEC31",164,0)
 ; of the client to the server; resets the server READ timeout.
"RTN","SDEC31",165,0)
 S SDECRES=1
"RTN","SDEC31",166,0)
 Q
"RTN","SDEC31",167,0)
 ;
"RTN","SDEC32")
0^36^B69352136^n/a
"RTN","SDEC32",1,0)
SDEC32 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC32",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC32",3,0)
 ;
"RTN","SDEC32",4,0)
 Q
"RTN","SDEC32",5,0)
 ;
"RTN","SDEC32",6,0)
 ;
"RTN","SDEC32",7,0)
ERROR ;
"RTN","SDEC32",8,0)
 D ERR("VistA Error")
"RTN","SDEC32",9,0)
 Q
"RTN","SDEC32",10,0)
 ;
"RTN","SDEC32",11,0)
ERR(SDECERR) ;Error processing
"RTN","SDEC32",12,0)
 S SDECI=SDECI+1
"RTN","SDEC32",13,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC32",14,0)
 Q
"RTN","SDEC32",15,0)
 ;
"RTN","SDEC32",16,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;return HOSPITAL LOCATIONs
"RTN","SDEC32",17,0)
 ;HOSPLOC(SDECY)  external parameter tag is in SDEC
"RTN","SDEC32",18,0)
 ;INPUT:
"RTN","SDEC32",19,0)
 ;  SDECP  - (optional) Partial name text
"RTN","SDEC32",20,0)
 ;  MAXREC - (optional) Max number of records to return
"RTN","SDEC32",21,0)
 ;  LSUB   - (optional) subscripts from last call to pick up where left off
"RTN","SDEC32",22,0)
 ;RETURN:
"RTN","SDEC32",23,0)
 ;Global Array in which each array entry
"RTN","SDEC32",24,0)
 ;contains HOSPITAL LOCATION data separated by ^:
"RTN","SDEC32",25,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",26,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",27,0)
 ; 3. DEFAULT_PROVIDER
"RTN","SDEC32",28,0)
 ; 4. STOP_CODE_NUMBER
"RTN","SDEC32",29,0)
 ; 5. INACTIVATE_DATE
"RTN","SDEC32",30,0)
 ; 6. REACTIVATE_DATE
"RTN","SDEC32",31,0)
 ; 7. LASTSUB
"RTN","SDEC32",32,0)
 N SDECI,SDECIEN,SDECNOD,SDECNOD1,SDECNAM,SDECINA,SDECREA,SDECSCOD
"RTN","SDEC32",33,0)
 N SDECIEN1,SDECPRV,SDDUP,SDNAM
"RTN","SDEC32",34,0)
 N LASTSUB,X
"RTN","SDEC32",35,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",36,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",37,0)
 S SDECI=0
"RTN","SDEC32",38,0)
 S ^TMP("SDEC",$J,SDECI)="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030DEFAULT_PROVIDER^T00030STOP_CODE_NUMBER^D00020INACTIVATE_DATE^D00020REACTIVATE_DATE^T00030LASTSUB"_$C(30)
"RTN","SDEC32",39,0)
 ;
"RTN","SDEC32",40,0)
 S SDECP=$G(SDECP)
"RTN","SDEC32",41,0)
 S MAXREC=+$G(MAXREC)
"RTN","SDEC32",42,0)
 S LSUB=$G(LSUB)
"RTN","SDEC32",43,0)
 S:LSUB="" SDECNAM=$S(SDECP'="":$$GETSUB^SDEC56(SDECP),1:"")
"RTN","SDEC32",44,0)
 S:LSUB'="" SDECNAM=$$GETSUB^SDEC56($P(LSUB,"|",1))
"RTN","SDEC32",45,0)
 F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:(SDECP'="")&(SDECNAM'[SDECP)  Q:SDECNAM=""  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",46,0)
 . S SDECIEN=$S(LSUB'="":$P(LSUB,"|",2),1:0) S LSUB="" F  S SDECIEN=$O(^SC("B",SDECNAM,SDECIEN)) Q:SDECIEN'>0  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",47,0)
 .. Q:'+SDECIEN>0
"RTN","SDEC32",48,0)
 .. Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",49,0)
 .. Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",50,0)
 .. S SDECINA=$$GET1^DIQ(44,SDECIEN_",",2505) ;INACTIVATE
"RTN","SDEC32",51,0)
 .. S SDECREA=$$GET1^DIQ(44,SDECIEN_",",2506) ;REACTIVATE
"RTN","SDEC32",52,0)
 .. S SDECNOD=^SC(SDECIEN,0)
"RTN","SDEC32",53,0)
 .. Q:$D(SDDUP(+SDECIEN))
"RTN","SDEC32",54,0)
 .. S SDDUP(+SDECIEN)=""
"RTN","SDEC32",55,0)
 .. S SDNAM=$P(SDECNOD,U)
"RTN","SDEC32",56,0)
 .. S SDECSCOD=$$GET1^DIQ(44,SDECIEN_",",8) ;STOP CODE
"RTN","SDEC32",57,0)
 .. ;Calculate default provider
"RTN","SDEC32",58,0)
 .. S SDECPRV=""
"RTN","SDEC32",59,0)
 .. I $D(^SC(SDECIEN,"PR")) D
"RTN","SDEC32",60,0)
 ... S SDECIEN1=0 F  S SDECIEN1=$O(^SC(SDECIEN,"PR",SDECIEN1)) Q:'+SDECIEN1  Q:SDECPRV]""  D
"RTN","SDEC32",61,0)
 .... S SDECNOD1=$G(^SC(SDECIEN,"PR",SDECIEN1,0))
"RTN","SDEC32",62,0)
 .... S:$P(SDECNOD1,U,2)="1" SDECPRV=$$GET1^DIQ(200,$P(SDECNOD1,U),.01)
"RTN","SDEC32",63,0)
 .... Q
"RTN","SDEC32",64,0)
 ... Q
"RTN","SDEC32",65,0)
 .. S LASTSUB=SDECNAM_"|"_SDECIEN
"RTN","SDEC32",66,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",67,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDNAM_U_SDECPRV_U_SDECSCOD_U_SDECINA_U_SDECREA_U_LASTSUB_$C(30)
"RTN","SDEC32",68,0)
 .. Q
"RTN","SDEC32",69,0)
 I SDECNAM="",SDECIEN="" S $P(^TMP("SDEC",$J,SDECI),U,7)=""  ;clear lastsub for last entry if finished
"RTN","SDEC32",70,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",71,0)
 K SDDUP
"RTN","SDEC32",72,0)
 Q
"RTN","SDEC32",73,0)
 ;
"RTN","SDEC32",74,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP) ;Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC32",75,0)
 ;CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP)  external parameter tag is in SDEC
"RTN","SDEC32",76,0)
 ;INPUT:
"RTN","SDEC32",77,0)
 ; SDNOSLOT - no slots flag - 0=return availability  1=do not return availability
"RTN","SDEC32",78,0)
 ; SDIENS - IENs for individual hospital locations separated by pipes
"RTN","SDEC32",79,0)
 ;Returns CLINIC SETUP PARAMETERS file entries for clinics which
"RTN","SDEC32",80,0)
 ;are active in ^SC
"RTN","SDEC32",81,0)
 ;MGH Added SDIENS as input paramter to for hospital location IENs
"RTN","SDEC32",82,0)
 ;MGH Added SDECP for partial name lookup
"RTN","SDEC32",83,0)
 ;RETURN
"RTN","SDEC32",84,0)
 ; Global Array in which each array entry contains the following Clinic data separated by ^:
"RTN","SDEC32",85,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",86,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",87,0)
 ; 3. CREATE_VISIT
"RTN","SDEC32",88,0)
 ; 4. VISIT_SERVICE_CATEGORY
"RTN","SDEC32",89,0)
 ; 5. MULTIPLE_CLINIC_CODES_USED?
"RTN","SDEC32",90,0)
 ; 6. VISIT_PROVIDER_REQUIRED
"RTN","SDEC32",91,0)
 ; 7. GENERATE_PCCPLUS_FORMS?
"RTN","SDEC32",92,0)
 ; 8. MAX_OVERBOOKS
"RTN","SDEC32",93,0)
 ; 9. SDECDAT
"RTN","SDEC32",94,0)
 ;10. SDECDATN
"RTN","SDEC32",95,0)
 ;11. APPTLEN              - 1912   Appointment Length Numeric 10-240
"RTN","SDEC32",96,0)
 ;12. VAPPTLEN
"RTN","SDEC32",97,0)
 ;13. SLOTS
"RTN","SDEC32",98,0)
 ;14. PRIVUSERPRESENT_BOOL
"RTN","SDEC32",99,0)
 ;15. PROTECTED
"RTN","SDEC32",100,0)
 ;16. HOUR_DISPLAY_BEGIN   - 1914   Hour Clinic Display Begins
"RTN","SDEC32",101,0)
 ;17. DISPLAY_INCREMENTS   - 1917   Display increments per hour
"RTN","SDEC32",102,0)
 ;                                  1=60-MIN
"RTN","SDEC32",103,0)
 ;                                  2=30-MIN
"RTN","SDEC32",104,0)
 ;                                  4=15-MIN
"RTN","SDEC32",105,0)
 ;                                  3=20-MIN
"RTN","SDEC32",106,0)
 ;                                  6=10-MIN
"RTN","SDEC32",107,0)
 ;18. HOLIDAYS             - 1918.5 Schedule on Holidays?  Y=YES
"RTN","SDEC32",108,0)
 ;19. SPECIAL              - <not used in 627>
"RTN","SDEC32",109,0)
 ;20. CLINIC_STOP          - Stop code Number pointer to CLINIC STOP file 40.7
"RTN","SDEC32",110,0)
 N SDA,SDAPLEN,SDAR,SDDATA,SDFIELDS,SDI,SDJ,SDK,SDSLOTS,SDVAPL,SDECI,SDECIEN,SDECNOD,SDECNAM,SDECINA,SDECREA,SDTMP
"RTN","SDEC32",111,0)
 N SDECCRV,SDECDAT,SDECDATN,SDECVSC,SDECMULT,SDECREQ,SDECPCC,SDECMOB,SDECHPRV,SDECPROT,SDECNAM
"RTN","SDEC32",112,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",113,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",114,0)
 S SDECI=0
"RTN","SDEC32",115,0)
 ;              1                          2                       3                  4
"RTN","SDEC32",116,0)
 S SDTMP="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030CREATE_VISIT^T00030VISIT_SERVICE_CATEGORY"
"RTN","SDEC32",117,0)
 ;                     5                                 6                             7
"RTN","SDEC32",118,0)
 S SDTMP=SDTMP_"^T00030MULTIPLE_CLINIC_CODES_USED?^T00030VISIT_PROVIDER_REQUIRED^T00030GENERATE_PCCPLUS_FORMS?"
"RTN","SDEC32",119,0)
 ;                     8                   9             10             11            12             13             14
"RTN","SDEC32",120,0)
 S SDTMP=SDTMP_"^T00030MAX_OVERBOOKS^T00030SDECDAT^T00030SDECDATN^T00030APPTLEN^T00030VAPPTLEN^T00030SLOTS^B00001PRIVUSERPRESENT_BOOL"
"RTN","SDEC32",121,0)
 ;                     15              16                       17                       18
"RTN","SDEC32",122,0)
 S SDTMP=SDTMP_"^B00001PROTECTED^T00030HOUR_DISPLAY_BEGIN^T00030DISPLAY_INCREMENTS^T00030HOLIDAYS^T00030SPECIAL^T00030CLINIC_STOP"
"RTN","SDEC32",123,0)
 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC32",124,0)
 ;
"RTN","SDEC32",125,0)
 S (SDECDAT,SDECDATN)=""
"RTN","SDEC32",126,0)
 S SDNOSLOT=$G(SDNOSLOT)
"RTN","SDEC32",127,0)
 ;MGH change made for individual locations
"RTN","SDEC32",128,0)
 I $G(SDIENS) D
"RTN","SDEC32",129,0)
 .F SDK=1:1:$L(SDIENS,"|") D
"RTN","SDEC32",130,0)
 ..S SDECIEN=$P(SDIENS,"|",SDK)
"RTN","SDEC32",131,0)
 ..D PROCESS(SDECIEN)
"RTN","SDEC32",132,0)
 ;MGH change made for partial name lookup
"RTN","SDEC32",133,0)
 I $G(SDECP)'="" D
"RTN","SDEC32",134,0)
 .S SDECNAM=$$GETSUB^SDECU(SDECP)
"RTN","SDEC32",135,0)
 .F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:SDECNAM'[SDECP  D
"RTN","SDEC32",136,0)
 ..S SDECIEN=$O(^SC("B",SDECNAM,""))
"RTN","SDEC32",137,0)
 ..I +SDECIEN D PROCESS(SDECIEN)
"RTN","SDEC32",138,0)
 I $G(SDIENS)=""&($G(SDECP)="") S SDECIEN=0 F  S SDECIEN=$O(^SC(SDECIEN)) Q:SDECIEN'>0  D
"RTN","SDEC32",139,0)
 .D PROCESS(SDECIEN)
"RTN","SDEC32",140,0)
 S SDI="" F  S SDI=$O(SDAR(SDI)) Q:SDI=""  D
"RTN","SDEC32",141,0)
 .S SDJ="" F  S SDJ=$O(SDAR(SDI,SDJ)) Q:SDJ=""  D
"RTN","SDEC32",142,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",143,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDAR(SDI,SDJ)_$C(30)
"RTN","SDEC32",144,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",145,0)
 Q
"RTN","SDEC32",146,0)
PROCESS(SDECIEN) ;Process an individual clinic
"RTN","SDEC32",147,0)
 ;MGH broke this out to do all locations or individual ones
"RTN","SDEC32",148,0)
 N SDDI,SDH,SDHDB,SDSTOP
"RTN","SDEC32",149,0)
 Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",150,0)
 Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",151,0)
 D RESCLIN1^SDEC01B(SDECIEN)
"RTN","SDEC32",152,0)
 S SDSLOTS=""
"RTN","SDEC32",153,0)
 K SDDATA,SDMSG
"RTN","SDEC32",154,0)
 ;S SDFIELDS=".01;2;1912;1913;1914;1917;1918;1918.5"_$S(SDNOSLOT:"",1:";1920*")_";2502.3;2505;2506;2507"
"RTN","SDEC32",155,0)
 S SDFIELDS=".01;2;8;1912;1913;1914;1917;1918;1918.5"_$S(SDNOSLOT:"",1:";1920*")_";2505;2506;2507"
"RTN","SDEC32",156,0)
 D GETS^DIQ(44,SDECIEN_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC32",157,0)
 Q:$G(SDDATA(44,SDECIEN_",",2,"I"))'="C"
"RTN","SDEC32",158,0)
 ;Q:$G(SDDATA(44,SDECIEN_",",2502.3,"I"))=1  ;HIDE FROM DISPLAY?
"RTN","SDEC32",159,0)
 S SDA="SDDATA(44,"""_SDECIEN_","")"
"RTN","SDEC32",160,0)
 S SDAPLEN=@SDA@(1912,"E")    ;length of appointment
"RTN","SDEC32",161,0)
 S SDVAPL=@SDA@(1913,"I")     ;variable appointment length V means yes
"RTN","SDEC32",162,0)
 S SDHDB=@SDA@(1914,"E")      ;hour clinic display begins
"RTN","SDEC32",163,0)
 S:SDHDB="" SDHDB=8
"RTN","SDEC32",164,0)
 S SDDI=@SDA@(1917,"I")       ;display increments per hour
"RTN","SDEC32",165,0)
 S SDECINA=@SDA@(2505,"E") ;INACTIVATE
"RTN","SDEC32",166,0)
 S SDECREA=@SDA@(2506,"E") ;REACTIVATE
"RTN","SDEC32",167,0)
 S SDECDAT=@SDA@(2507,"I") ;DEFAULT APPOINTMENT TYPE ien
"RTN","SDEC32",168,0)
 S SDECDATN=@SDA@(2507,"E") ;DEFAULT APPOINTMENT TYPE name
"RTN","SDEC32",169,0)
 S SDSTOP=@SDA@(8,"I")      ;STOP CODE NUMBER
"RTN","SDEC32",170,0)
 I SDECINA]""&(SDECREA="") Q  ;Clinic is inactivated and has no reactivate date
"RTN","SDEC32",171,0)
 I SDECINA]""&(SDECREA]"")&(SDECINA>SDECREA) Q  ;MGH Inactive date is later than reactive date
"RTN","SDEC32",172,0)
 S SDECNAM=@SDA@(.01,"E")
"RTN","SDEC32",173,0)
 S SDECMOB=@SDA@(1918,"E")
"RTN","SDEC32",174,0)
 S SDH=@SDA@(1918.5,"I")
"RTN","SDEC32",175,0)
 S SDECCRV=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.09)   ;Create Visit at Check-In?
"RTN","SDEC32",176,0)
 S SDECVSC=""  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.12)   ;Visit Service Category
"RTN","SDEC32",177,0)
 S SDECMULT=1 ;$$GET1^DIQ(9009017.2,SDECIEN_",",.13)  ;Multiple Clinic codes used?
"RTN","SDEC32",178,0)
 S SDECREQ=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.14)   ;Visit Provider Required
"RTN","SDEC32",179,0)
 S SDECPCC=0  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.15)   ;Generate PCCPlus Forms?
"RTN","SDEC32",180,0)
 S:'SDNOSLOT SDSLOTS=$$GETSLOTS(.SDDATA)
"RTN","SDEC32",181,0)
 S SDECHPRV=$O(^SC(+SDECIEN,"SDPRIV",0))>0
"RTN","SDEC32",182,0)
 S SDECPROT=$G(^SC(+SDECIEN,"SDPROT"))="Y"
"RTN","SDEC32",183,0)
 ;       1         2         3         4         5          6         7         8
"RTN","SDEC32",184,0)
 S SDTMP=SDECIEN_U_SDECNAM_U_SDECCRV_U_SDECVSC_U_SDECMULT_U_SDECREQ_U_SDECPCC_U_SDECMOB
"RTN","SDEC32",185,0)
 ;               9         10         11        12           13       14         15
"RTN","SDEC32",186,0)
 S SDTMP=SDTMP_U_SDECDAT_U_SDECDATN_U_+SDAPLEN_U_SDVAPL_U_SDSLOTS_U_SDECHPRV_U_SDECPROT
"RTN","SDEC32",187,0)
 ;               16      17     18    19   20
"RTN","SDEC32",188,0)
 S SDTMP=SDTMP_U_SDHDB_U_SDDI_U_SDH_U_""_U_SDSTOP
"RTN","SDEC32",189,0)
 S SDAR(SDECNAM,SDECIEN)=SDTMP
"RTN","SDEC32",190,0)
 Q
"RTN","SDEC32",191,0)
 ;
"RTN","SDEC32",192,0)
 ;
"RTN","SDEC32",193,0)
GETSLOTS(SDDATA) ;get slots - NUMBER OF PATIENTS in the AVAILABILITY multiple of file 44
"RTN","SDEC32",194,0)
 ;INPUT:
"RTN","SDEC32",195,0)
 ; SDDATA - array from GETS^DIQ against file 44 above to collect timeslots from
"RTN","SDEC32",196,0)
 N SDI,SDDT,SDSLOTS
"RTN","SDEC32",197,0)
 S SDSLOTS=""
"RTN","SDEC32",198,0)
 S SDI="" F  S SDI=$O(SDDATA(44.004,SDI)) Q:SDI=""  D
"RTN","SDEC32",199,0)
 .S SDDT=$P(SDI,",",2)                        ;get date
"RTN","SDEC32",200,0)
 .S SDDT=SDDT_"."_SDDATA(44.004,SDI,.01,"I")  ;get time
"RTN","SDEC32",201,0)
 .S SDDT=$$FMTE^XLFDT(SDDT)
"RTN","SDEC32",202,0)
 .S SDSLOTS=$S(SDSLOTS'="":SDSLOTS_"|",1:"")_SDDT_";;"_SDDATA(44.004,SDI,1,"E")
"RTN","SDEC32",203,0)
 Q SDSLOTS
"RTN","SDEC32",204,0)
 ;
"RTN","SDEC32",205,0)
INACTIVE(SDCL,SDDT) ;determine if clinic is active
"RTN","SDEC32",206,0)
 ; X=0=ACTIVE
"RTN","SDEC32",207,0)
 ; X=1=INACTIVE
"RTN","SDEC32",208,0)
 N SDNODI,N21,N25,X
"RTN","SDEC32",209,0)
 S SDDT=$G(SDDT) I SDDT="" S SDDT=DT
"RTN","SDEC32",210,0)
 S SDDT=$P(SDDT,".",1)
"RTN","SDEC32",211,0)
 S X=1
"RTN","SDEC32",212,0)
 S SDNODI=$G(^SC(SDCL,"I"))
"RTN","SDEC32",213,0)
 Q:SDNODI="" 0
"RTN","SDEC32",214,0)
 S N21=$P(SDNODI,U,1)   ;inactive date/time
"RTN","SDEC32",215,0)
 S N25=$P(SDNODI,U,2)   ;reactive date/time
"RTN","SDEC32",216,0)
 I (N21="") S X=0 Q X
"RTN","SDEC32",217,0)
 I (N21'="")&(N21>SDDT) S X=0 Q X
"RTN","SDEC32",218,0)
 I (N25'="")&(N25'>SDDT) S X=0 Q X
"RTN","SDEC32",219,0)
 Q X
"RTN","SDEC32",220,0)
 ;
"RTN","SDEC32",221,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC32",222,0)
 ;INPUT:
"RTN","SDEC32",223,0)
 ;  CLINIEN - pointer to HOSPITAL LOCATION file 44
"RTN","SDEC32",224,0)
 ;  USER    - pointer to NEW PERSON file 200
"RTN","SDEC32",225,0)
 ;RETURN:
"RTN","SDEC32",226,0)
 ;  A single boolean entry indicating that the USER is a PRIVILEGED USER for the clinic.
"RTN","SDEC32",227,0)
 ;    RETURNCODE - 0=NO; 1=YES; -1=error
"RTN","SDEC32",228,0)
 ;    MESSAGE
"RTN","SDEC32",229,0)
 N SDRET
"RTN","SDEC32",230,0)
 S SDECY="^TMP(""SDEC32"","_$J_",""PRIV"")"
"RTN","SDEC32",231,0)
 K @SDECY
"RTN","SDEC32",232,0)
 S @SDECY@(0)="T00030RETURNCODE^MESSAGE"_$C(30)
"RTN","SDEC32",233,0)
 S CLINIEN=$G(CLINIEN)
"RTN","SDEC32",234,0)
 I (CLINIEN="")!('$D(^SC(CLINIEN,0))) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31) Q
"RTN","SDEC32",235,0)
 S USER=$G(USER)
"RTN","SDEC32",236,0)
 I (USER="")!('$D(^VA(200,USER,0))) S @SDECY@(1)="-1^Invalid user ID."_$C(30,31) Q
"RTN","SDEC32",237,0)
 S SDRET=$D(^SC(CLINIEN,"SDPRIV",USER,0))
"RTN","SDEC32",238,0)
 S $P(SDRET,U,2)=$S(SDRET=1:"YES",1:"NO")
"RTN","SDEC32",239,0)
 S @SDECY@(1)=SDRET_$C(30,31)
"RTN","SDEC32",240,0)
 Q
"RTN","SDEC33")
0^37^B10928495^n/a
"RTN","SDEC33",1,0)
SDEC33 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC33",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC33",3,0)
 ;
"RTN","SDEC33",4,0)
 Q
"RTN","SDEC33",5,0)
 ;
"RTN","SDEC33",6,0)
REBKNEXT(SDECY,SDECDATE,SDECRES,SDECTPID) ; find the next ACCESS BLOCK in resource SDECRES after SDECSTART
"RTN","SDEC33",7,0)
 ;REBKNEXT(SDECY,SDECDATE,SDECRES,SDECTPID)  external parameter tag is in SDEC
"RTN","SDEC33",8,0)
 ;SDECDATE - Date in external form
"RTN","SDEC33",9,0)
 ;SDECRES  - Resource Name from the NAME field of the SDEC RESOURCE file
"RTN","SDEC33",10,0)
 ;SDECTPID - Access Type Id - Pointer to the SDEC ACCESS TYPE file
"RTN","SDEC33",11,0)
 ;Returns 1 in ERRORID and date in NEXTBLOCK if a block was found or NULL in NEXTBLOCK of no date found
"RTN","SDEC33",12,0)
 ;Otherwise, returns 0 and error message in ERRORTEXT
"RTN","SDEC33",13,0)
 ;If SDECTPID = 0 then any access type match
"RTN","SDEC33",14,0)
 ;
"RTN","SDEC33",15,0)
 N SDAB,SDECI,SDECIENS,SDI,%DT,SDECMSG,X,Y,SDECRESD,SDECFND,SDECIEN,SDECNOD,SDECATID
"RTN","SDEC33",16,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC33",17,0)
 K @SDAB
"RTN","SDEC33",18,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC33",19,0)
 K @SDECY
"RTN","SDEC33",20,0)
 S SDECI=0
"RTN","SDEC33",21,0)
 S ^TMP("SDEC",$J,SDECI)="I00020ERRORID^D00010NEXTBLOCK^T00030ERRORTEXT"_$C(30)
"RTN","SDEC33",22,0)
 ;
"RTN","SDEC33",23,0)
 I SDECRES="" D ERR2("","SDEC REBOOK NEXT BLOCK: Invalid resource name") Q
"RTN","SDEC33",24,0)
 I '$D(^SDEC(409.831,"B",SDECRES)) D ERR2(SDECRES,"SDEC REBOOK NEXT BLOCK: Invalid resource name") Q
"RTN","SDEC33",25,0)
 S SDECRESD=$O(^SDEC(409.831,"B",SDECRES,0))
"RTN","SDEC33",26,0)
 I '+SDECRESD D ERR2(SDECRES,"SDEC REBOOK NEXT BLOCK: Invalid resource name") Q
"RTN","SDEC33",27,0)
 S X=SDECDATE,%DT="XT" D ^%DT
"RTN","SDEC33",28,0)
 I Y=-1 D ERR2(1,"SDEC REBOOK NEXT BLOCK: Invalid datetime") Q
"RTN","SDEC33",29,0)
 S SDECDATE=$P(Y,".")
"RTN","SDEC33",30,0)
 ;
"RTN","SDEC33",31,0)
 S SDECFND=0
"RTN","SDEC33",32,0)
 D GETSLOTS^SDEC04(SDAB,SDECRESD,SDECDATE,$$FMADD^XLFDT(SDECDATE,10))
"RTN","SDEC33",33,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC33",34,0)
 .S SDECNOD=@SDAB@(SDI)
"RTN","SDEC33",35,0)
 .Q:+$P(SDECNOD,U,4)=0  ;Slots
"RTN","SDEC33",36,0)
 .S SDECATID=$P(SDECNOD,U,5)
"RTN","SDEC33",37,0)
 .I SDECTPID=0!(SDECATID=SDECTPID) S SDECFND=$P(SDECNOD,U,2) Q
"RTN","SDEC33",38,0)
 ;
"RTN","SDEC33",39,0)
 I SDECFND=0 S SDECFND=""
"RTN","SDEC33",40,0)
 E  S Y=SDECFND X ^DD("DD") S SDECFND=Y
"RTN","SDEC33",41,0)
 S SDECFND=$TR(SDECFND,"@"," ")
"RTN","SDEC33",42,0)
 S SDECI=SDECI+1
"RTN","SDEC33",43,0)
 S ^TMP("SDEC",$J,SDECI)="1^"_SDECFND_"^"_$C(30)_$C(31)
"RTN","SDEC33",44,0)
 Q
"RTN","SDEC33",45,0)
 ;
"RTN","SDEC33",46,0)
SETRBOOK(SDECY,SDECAPPT,SDECDATE) ;Sets rebook date into appointment
"RTN","SDEC33",47,0)
 ;SETRBOOK(SDECY,SDECAPPT,SDECDATE)  external parameter tag is in SDEC
"RTN","SDEC33",48,0)
 ;SDECAPPT - Appointment ID
"RTN","SDEC33",49,0)
 ;SDECDATE - Rebook Datetime in external format
"RTN","SDEC33",50,0)
 ;Called by SDEC REBOOK SET
"RTN","SDEC33",51,0)
 ;
"RTN","SDEC33",52,0)
 ;ErrorID:
"RTN","SDEC33",53,0)
 ; 0 if a problem.  Message in ERRORTEXT
"RTN","SDEC33",54,0)
 ; 1 if OK
"RTN","SDEC33",55,0)
 ;
"RTN","SDEC33",56,0)
 N SDECFDA,SDECI,SDECIENS,%DT,SDECMSG,X,Y
"RTN","SDEC33",57,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC33",58,0)
 K @SDECY
"RTN","SDEC33",59,0)
 S SDECI=0
"RTN","SDEC33",60,0)
 S ^TMP("SDEC",$J,SDECI)="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC33",61,0)
 ;
"RTN","SDEC33",62,0)
 I '+SDECAPPT
"RTN","SDEC33",63,0)
 I '$D(^SDEC(409.84,SDECAPPT,0)) D ERR(1,"SDEC REBOOK SET: Invalid appointment ID") Q
"RTN","SDEC33",64,0)
 S X=SDECDATE,%DT="XT" D ^%DT
"RTN","SDEC33",65,0)
 I Y=-1 D ERR(1,"SDEC REBOOK SET: Invalid rebook datetime") Q
"RTN","SDEC33",66,0)
 S SDECDATE=Y
"RTN","SDEC33",67,0)
 S SDECIENS=SDECAPPT_","
"RTN","SDEC33",68,0)
 S SDECFDA(409.84,SDECIENS,.11)=SDECDATE
"RTN","SDEC33",69,0)
 ;
"RTN","SDEC33",70,0)
 K SDECMSG
"RTN","SDEC33",71,0)
 D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC33",72,0)
 S SDECI=SDECI+1
"RTN","SDEC33",73,0)
 S ^TMP("SDEC",$J,SDECI)="1^"_$C(31)
"RTN","SDEC33",74,0)
 ;
"RTN","SDEC33",75,0)
 Q
"RTN","SDEC33",76,0)
 ;
"RTN","SDEC33",77,0)
ERR(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC33",78,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC33",79,0)
 S SDECI=SDECI+1
"RTN","SDEC33",80,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^"_ERRTXT_$C(30)
"RTN","SDEC33",81,0)
 S SDECI=SDECI+1
"RTN","SDEC33",82,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC33",83,0)
 Q
"RTN","SDEC33",84,0)
 ;
"RTN","SDEC33",85,0)
ERROR ;
"RTN","SDEC33",86,0)
 D ^%ZTER
"RTN","SDEC33",87,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC33",88,0)
 S SDECI=SDECI+1
"RTN","SDEC33",89,0)
 D ERR(0,"SDEC33 Error")
"RTN","SDEC33",90,0)
 Q
"RTN","SDEC33",91,0)
 ;
"RTN","SDEC33",92,0)
ERR2(SDECERID,ERRTXT) ;Error processing
"RTN","SDEC33",93,0)
 S:'+$G(SDECI) SDECI=999999
"RTN","SDEC33",94,0)
 S SDECI=SDECI+1
"RTN","SDEC33",95,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERID_"^^"_ERRTXT_$C(30)
"RTN","SDEC33",96,0)
 S SDECI=SDECI+1
"RTN","SDEC33",97,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC33",98,0)
 Q
"RTN","SDEC33",99,0)
 ;
"RTN","SDEC33",100,0)
ERROR2 ;
"RTN","SDEC33",101,0)
 D ^%ZTER
"RTN","SDEC33",102,0)
 I '+$G(SDECI) N SDECI S SDECI=999999
"RTN","SDEC33",103,0)
 S SDECI=SDECI+1
"RTN","SDEC33",104,0)
 D ERR2(0,"SDEC33 Error")
"RTN","SDEC33",105,0)
 Q
"RTN","SDEC34")
0^38^B41388078^n/a
"RTN","SDEC34",1,0)
SDEC34 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC34",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC34",3,0)
 ;
"RTN","SDEC34",4,0)
 Q
"RTN","SDEC34",5,0)
 ;
"RTN","SDEC34",6,0)
RBERR ;
"RTN","SDEC34",7,0)
 ;Called from RBCLIN on error to set up header
"RTN","SDEC34",8,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC34",9,0)
 S ^TMP("SDEC",$J,0)="T00030Name^D00020DOB^T00030Sex^T00030HRN^D00030NewApptDate^T00030Clinic^T00030TypeStatus^I00010RESOURCEID"
"RTN","SDEC34",10,0)
 S ^TMP("SDEC",$J,0)=^(0)_"^T00030APPT_MADE_BY^D00020DATE_APPT_MADE^T00250NOTE^T00030STREET^T00030CITY^T00030STATE^T00030ZIP^T00030HOMEPHONE^D00030OldApptDate"_$C(30)
"RTN","SDEC34",11,0)
 D ERR(999)
"RTN","SDEC34",12,0)
 Q
"RTN","SDEC34",13,0)
 ;
"RTN","SDEC34",14,0)
CLINCAN(SDECY,SDECCLST,SDECBEG,SDECEND) ;Return recordset of CANCELLED patient appointments
"RTN","SDEC34",15,0)
 ;CLINCAN(SDECY,SDECCLST,SDECBEG,SDECEND)  external parameter tag is in SDEC
"RTN","SDEC34",16,0)
 ;Return recordset of CANCELLED patient appointments
"RTN","SDEC34",17,0)
 ;between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"RTN","SDEC34",18,0)
 ;Used in generating cancellation letters for a clinic
"RTN","SDEC34",19,0)
 ;SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece is null, so discard it.)
"RTN","SDEC34",20,0)
 ;SDECBEG and SDECEND are in external date form.
"RTN","SDEC34",21,0)
 ;RETURN:
"RTN","SDEC34",22,0)
 ; Global Array in which each array entry contains the following cancelled appointment data separated by ^:
"RTN","SDEC34",23,0)
 ; 1. Name
"RTN","SDEC34",24,0)
 ; 2. DOB
"RTN","SDEC34",25,0)
 ; 3. Sex
"RTN","SDEC34",26,0)
 ; 4. HRN
"RTN","SDEC34",27,0)
 ; 5. NewApptDate
"RTN","SDEC34",28,0)
 ; 6. Clinic
"RTN","SDEC34",29,0)
 ; 7. TypeStatus
"RTN","SDEC34",30,0)
 ; 8. RESOURCEID
"RTN","SDEC34",31,0)
 ; 9. APPT_MADE_BY
"RTN","SDEC34",32,0)
 ;10. DATE_APPT_MADE
"RTN","SDEC34",33,0)
 ;11. NOTE
"RTN","SDEC34",34,0)
 ;12. STREET
"RTN","SDEC34",35,0)
 ;13. CITY
"RTN","SDEC34",36,0)
 ;14. STATE
"RTN","SDEC34",37,0)
 ;15. ZIP
"RTN","SDEC34",38,0)
 ;16. HOMEPHONE
"RTN","SDEC34",39,0)
 ;17. OldApptDate
"RTN","SDEC34",40,0)
 N SDECCAN
"RTN","SDEC34",41,0)
 S SDECCAN=1
"RTN","SDEC34",42,0)
 D REBKCLIN(.SDECY,SDECCLST,SDECBEG,SDECEND)
"RTN","SDEC34",43,0)
 ;
"RTN","SDEC34",44,0)
 Q
"RTN","SDEC34",45,0)
 ;
"RTN","SDEC34",46,0)
REBKCLIN(SDECY,SDECCLST,SDECBEG,SDECEND) ;Return recordset of rebooked patient appointments between given dates
"RTN","SDEC34",47,0)
 ;REBKCLIN(SDECY,SDECCLST,SDECBEG,SDECEND)  external parameter tag is in SDEC
"RTN","SDEC34",48,0)
 ;Return recordset of rebooked patient appointments
"RTN","SDEC34",49,0)
 ;between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"RTN","SDEC34",50,0)
 ;Used in generating rebook letters for a clinic
"RTN","SDEC34",51,0)
 ;SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece is null, so discard it.)
"RTN","SDEC34",52,0)
 ;SDECBEG and SDECEND are in external date form.
"RTN","SDEC34",53,0)
 ;Called by SDEC REBOOK CLINIC LIST and SDEC CANCEL CLINIC LIST via entry point CANCLIN above
"RTN","SDEC34",54,0)
 ;
"RTN","SDEC34",55,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC34",56,0)
 K @SDECY
"RTN","SDEC34",57,0)
 N %DT,X,Y,SDECJ,SDECCID,SDECCLN,SDECSTRT,SDECAID,SDECNOD,SDECLIST,SDEC,BSDY
"RTN","SDEC34",58,0)
 ;Convert beginning and ending dates
"RTN","SDEC34",59,0)
 ;
"RTN","SDEC34",60,0)
 S X=SDECBEG,%DT="XT" D ^%DT S SDECBEG=$P(Y,"."),SDECBEG=SDECBEG-1,SDECBEG=SDECBEG_".9999"
"RTN","SDEC34",61,0)
 I Y=-1 D RBERR(1) Q
"RTN","SDEC34",62,0)
 S X=SDECEND,%DT="XT" D ^%DT S SDECEND=$P(Y,"."),SDECEND=SDECEND_".9999"
"RTN","SDEC34",63,0)
 I Y=-1 D RBERR(1) Q
"RTN","SDEC34",64,0)
 I SDECCLST="" D RBERR(1) Q
"RTN","SDEC34",65,0)
 ;
"RTN","SDEC34",66,0)
 ;
"RTN","SDEC34",67,0)
 ;If SDECCLST is a list of resource NAMES, look up each name and convert to IEN
"RTN","SDEC34",68,0)
 F SDECJ=1:1:$L(SDECCLST,"|")-1 S SDEC=$P(SDECCLST,"|",SDECJ) D  S $P(SDECCLST,"|",SDECJ)=BSDY
"RTN","SDEC34",69,0)
 . S BSDY=""
"RTN","SDEC34",70,0)
 . I SDEC]"",$D(^SDEC(409.831,SDEC,0)) S BSDY=SDEC Q
"RTN","SDEC34",71,0)
 . I SDEC]"",$D(^SDEC(409.831,"B",SDEC)) S BSDY=$O(^SDEC(409.831,"B",SDEC,0)) Q
"RTN","SDEC34",72,0)
 . Q
"RTN","SDEC34",73,0)
 ;
"RTN","SDEC34",74,0)
 ;For each clinic in SDECCLST $O through ^SDEC(409.84,"ARSRC",ResourceIEN,FMDate,ApptIEN)
"RTN","SDEC34",75,0)
 ;
"RTN","SDEC34",76,0)
 S SDECLIST=""
"RTN","SDEC34",77,0)
 F SDECJ=1:1:$L(SDECCLST,"|")-1 S SDECCID=$P(SDECCLST,"|",SDECJ) D:+SDECCID
"RTN","SDEC34",78,0)
 . S SDECCLN=$G(^SDEC(409.831,SDECCID,0)) S SDECCLN=$P(SDECCLN,U) Q:SDECCLN=""
"RTN","SDEC34",79,0)
 . S SDECSTRT=SDECBEG F  S SDECSTRT=$O(^SDEC(409.84,"ARSRC",SDECCID,SDECSTRT)) Q:'+SDECSTRT  Q:SDECSTRT>SDECEND  D
"RTN","SDEC34",80,0)
 . . S SDECAID=0 F  S SDECAID=$O(^SDEC(409.84,"ARSRC",SDECCID,SDECSTRT,SDECAID)) Q:'+SDECAID  D
"RTN","SDEC34",81,0)
 . . . S SDECNOD=$G(^SDEC(409.84,SDECAID,0))
"RTN","SDEC34",82,0)
 . . . I $D(SDECCAN) D  Q
"RTN","SDEC34",83,0)
 . . . . I $P(SDECNOD,U,12) S SDECLIST=SDECLIST_SDECAID_"|" ;Cancelled appt
"RTN","SDEC34",84,0)
 . . . I $P(SDECNOD,U,11) S SDECLIST=SDECLIST_SDECAID_"|" ;Rebooked appt
"RTN","SDEC34",85,0)
 D REBKLIST(.SDECY,SDECLIST)
"RTN","SDEC34",86,0)
 Q
"RTN","SDEC34",87,0)
 ;
"RTN","SDEC34",88,0)
REBKLIST(SDECY,SDECLIST) ;patient appointments used in listing REBOOKED appointments for a list of appointmentIDs.
"RTN","SDEC34",89,0)
 ;REBKLIST(SDECY,SDECLIST)  external parameter tag is in SDEC
"RTN","SDEC34",90,0)
 ;SDECLIST - pipe |-delimited list of SDEC APPOINTMENT iens (the last |-piece is null)
"RTN","SDEC34",91,0)
 ;
"RTN","SDEC34",92,0)
 N SDECI,SDECIEN,SDECNOD,SDECCNID,SDECCNOD,SDECMADE,SDECCLRK,SDECNOT,SDECQ,SDEC
"RTN","SDEC34",93,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC34",94,0)
 K @SDECY
"RTN","SDEC34",95,0)
 S SDECI=0
"RTN","SDEC34",96,0)
 S ^TMP("SDEC",$J,SDECI)="T00030Name^D00020DOB^T00030Sex^T00030HRN^D00030NewApptDate^T00030Clinic^T00030TypeStatus"
"RTN","SDEC34",97,0)
 S ^TMP("SDEC",$J,SDECI)=^(SDECI)_"^I00010RESOURCEID^T00030APPT_MADE_BY^D00020DATE_APPT_MADE^T00250NOTE^T00030STREET^T00030CITY^T00030STATE^T00030ZIP^T00030HOMEPHONE^D00030OldApptDate"_$C(30)
"RTN","SDEC34",98,0)
 ;
"RTN","SDEC34",99,0)
 ;Iterate through SDECLIST
"RTN","SDEC34",100,0)
 S SDECIEN=0
"RTN","SDEC34",101,0)
 F SDEC=1:1:$L(SDECLIST,"|")-1 S SDECIEN=$P(SDECLIST,"|",SDEC) D
"RTN","SDEC34",102,0)
 . N SDECNOD,SDECAPT,SDECCID,SDECCNOD,SDECCLN,SDEC44,SDECDNOD,SDECSTAT,SDEC,SDECTYPE,SDECLIN,SDECPAT
"RTN","SDEC34",103,0)
 . N SDECSTRE,SDECCITY,SDECST,SDECZIP,SDECPHON
"RTN","SDEC34",104,0)
 . N SDECNAM,SDECDOB,SDECHRN,SDECSEX
"RTN","SDEC34",105,0)
 . N SDECREBK
"RTN","SDEC34",106,0)
 . S SDECNOD=$G(^SDEC(409.84,SDECIEN,0))
"RTN","SDEC34",107,0)
 . Q:SDECNOD=""
"RTN","SDEC34",108,0)
 . S SDECPAT=$P(SDECNOD,U,5) ;PATIENT ien
"RTN","SDEC34",109,0)
 . Q:'+SDECPAT
"RTN","SDEC34",110,0)
 . Q:'$D(^DPT(SDECPAT))
"RTN","SDEC34",111,0)
 . D PINFO(SDECPAT)
"RTN","SDEC34",112,0)
 . S Y=$P(SDECNOD,U)
"RTN","SDEC34",113,0)
 . Q:'+Y
"RTN","SDEC34",114,0)
 . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC34",115,0)
 . S SDECAPT=Y ;Appointment date time
"RTN","SDEC34",116,0)
 . S SDECREBK=""
"RTN","SDEC34",117,0)
 . S Y=$P(SDECNOD,U,11)
"RTN","SDEC34",118,0)
 . I +Y X ^DD("DD") S Y=$TR(Y,"@"," ") S SDECREBK=Y ;Rebook date time
"RTN","SDEC34",119,0)
 . S SDECCLRK=$P(SDECNOD,U,8) ;Appointment made by
"RTN","SDEC34",120,0)
 . S:+SDECCLRK SDECCLRK=$G(^VA(200,SDECCLRK,0)),SDECCLRK=$P(SDECCLRK,U)
"RTN","SDEC34",121,0)
 . S Y=$P(SDECNOD,U,9) ;Date Appointment Made
"RTN","SDEC34",122,0)
 . I +Y X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC34",123,0)
 . S SDECMADE=Y
"RTN","SDEC34",124,0)
 . ;NOTE
"RTN","SDEC34",125,0)
 . S SDECNOT=""
"RTN","SDEC34",126,0)
 . I $D(^SDEC(409.84,SDECIEN,1,0)) S SDECNOT="",SDECQ=0 F  S SDECQ=$O(^SDEC(409.84,SDECIEN,1,SDECQ)) Q:'+SDECQ  D
"RTN","SDEC34",127,0)
 . . S SDECLIN=$G(^SDEC(409.84,SDECIEN,1,SDECQ,0))
"RTN","SDEC34",128,0)
 . . S:(SDECLIN'="")&($E(SDECLIN,$L(SDECLIN)-1,$L(SDECLIN))'=" ") SDECLIN=SDECLIN_" "
"RTN","SDEC34",129,0)
 . . S SDECNOT=SDECNOT_SDECLIN
"RTN","SDEC34",130,0)
 . ;Resource
"RTN","SDEC34",131,0)
 . S SDECCID=$P(SDECNOD,U,7) ;IEN of SDEC RESOURCE
"RTN","SDEC34",132,0)
 . Q:'+SDECCID
"RTN","SDEC34",133,0)
 . Q:'$D(^SDEC(409.831,SDECCID,0))
"RTN","SDEC34",134,0)
 . S SDECCNOD=$G(^SDEC(409.831,SDECCID,0)) ;SDEC RESOURCE node
"RTN","SDEC34",135,0)
 . Q:SDECCNOD=""
"RTN","SDEC34",136,0)
 . S SDECCLN=$P(SDECCNOD,U) ;Text name of SDEC Resource
"RTN","SDEC34",137,0)
 . S SDECTYPE="" ;Unused in this recordset
"RTN","SDEC34",138,0)
 . S SDECI=SDECI+1
"RTN","SDEC34",139,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECNAM_"^"_SDECDOB_"^"_SDECSEX_"^"_SDECHRN_"^"_SDECREBK_"^"_SDECCLN_"^"_SDECTYPE_"^"_SDECCID_"^"_SDECCLRK_"^"_SDECMADE_"^"_SDECNOT_"^"_SDECSTRE_"^"_SDECCITY_"^"_SDECST_"^"_SDECZIP_"^"_SDECPHON_"^"_SDECAPT_$C(30)
"RTN","SDEC34",140,0)
 . Q
"RTN","SDEC34",141,0)
 ;
"RTN","SDEC34",142,0)
 S SDECI=SDECI+1
"RTN","SDEC34",143,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC34",144,0)
 Q
"RTN","SDEC34",145,0)
 ;
"RTN","SDEC34",146,0)
PINFO(SDECPAT) ;
"RTN","SDEC34",147,0)
 ;Get patient info
"RTN","SDEC34",148,0)
 N SDECNOD
"RTN","SDEC34",149,0)
 S SDECNOD=$$PATINFO^SDEC27(SDECPAT)
"RTN","SDEC34",150,0)
 S SDECNAM=$P(SDECNOD,U) ;NAME
"RTN","SDEC34",151,0)
 S SDECSEX=$P(SDECNOD,U,2) ;SEX
"RTN","SDEC34",152,0)
 S SDECDOB=$P(SDECNOD,U,3) ;DOB
"RTN","SDEC34",153,0)
 S SDECHRN=$P(SDECNOD,U,4) ;Health Record Number for location DUZ(2)
"RTN","SDEC34",154,0)
 S SDECSTRE=$P(SDECNOD,U,5) ;Street
"RTN","SDEC34",155,0)
 S SDECCITY=$P(SDECNOD,U,6) ;City
"RTN","SDEC34",156,0)
 S SDECST=$P(SDECNOD,U,7) ;State
"RTN","SDEC34",157,0)
 S SDECZIP=$P(SDECNOD,U,8) ;zip
"RTN","SDEC34",158,0)
 S SDECPHON=$P(SDECNOD,U,9) ;homephone
"RTN","SDEC34",159,0)
 Q
"RTN","SDEC34",160,0)
 ;
"RTN","SDEC34",161,0)
ERROR ;
"RTN","SDEC34",162,0)
 D ERR("VistA Error")
"RTN","SDEC34",163,0)
 Q
"RTN","SDEC34",164,0)
 ;
"RTN","SDEC34",165,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC34",166,0)
 S:'$D(SDECI) SDECI=999
"RTN","SDEC34",167,0)
 S SDECI=SDECI+1
"RTN","SDEC34",168,0)
 S ^TMP("SDEC",$J,SDECI)="^^^^^^^^^^^^^^^^"_$C(30)
"RTN","SDEC34",169,0)
 S SDECI=SDECI+1
"RTN","SDEC34",170,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC34",171,0)
 Q
"RTN","SDEC35")
0^39^B8873158^n/a
"RTN","SDEC35",1,0)
SDEC35 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC35",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC35",3,0)
 ;
"RTN","SDEC35",4,0)
 Q
"RTN","SDEC35",5,0)
 ;
"RTN","SDEC35",6,0)
RESLETRS(SDECY,SDECLIST,SDLTR,SDNOS,SDCAN) ;Return recordset of RESOURCES and associated LETTERS
"RTN","SDEC35",7,0)
 ;RESLETRS(SDECY,SDECLIST,SDLTR,SDNOS,SDCAN)  external parameter tag is in SDEC
"RTN","SDEC35",8,0)
 ;   SDECLIST = (required) pipe | delimited list of SDEC RESOURCE iens
"RTN","SDEC35",9,0)
 ;                         resource ID pointer to SDEC RESOURCE file
"RTN","SDEC35",10,0)
 ;   SDLTR  = (optional) 1 will return the LETTER TEXT
"RTN","SDEC35",11,0)
 ;                         0 will not return the LETTER TEXT (default)
"RTN","SDEC35",12,0)
 ;   SDNOS  = (optional) 1 will return the NO SHOW LETTER text
"RTN","SDEC35",13,0)
 ;                         0 will not return the NO SHOW LETTER text (default)
"RTN","SDEC35",14,0)
 ;   SDCAN  = (optional) 1 will return the CLINIC CANCELLATION LETTER text
"RTN","SDEC35",15,0)
 ;                         0 will not return the CLINIC CANCELLATION text (default)
"RTN","SDEC35",16,0)
 ;RETURN:
"RTN","SDEC35",17,0)
 ;  Successful Return:
"RTN","SDEC35",18,0)
 ;   1. RESOURCEID
"RTN","SDEC35",19,0)
 ;   2. RESOURCE_NAME
"RTN","SDEC35",20,0)
 ;   3. LETTER_TEXT
"RTN","SDEC35",21,0)
 ;   4. NO_SHOW_LETTER
"RTN","SDEC35",22,0)
 ;   5. CLINIC_CANCELLATION_LETTER
"RTN","SDEC35",23,0)
 ;
"RTN","SDEC35",24,0)
 N BSDY
"RTN","SDEC35",25,0)
 N SDECI,SDECIEN,SDECJ,SDEC,SDECLTR,SDECNOS,SDECCAN,SDECIEN1,SDECNAM
"RTN","SDEC35",26,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC35",27,0)
 K @SDECY
"RTN","SDEC35",28,0)
 S SDECI=0
"RTN","SDEC35",29,0)
 S ^TMP("SDEC",$J,SDECI)="I00010RESOURCEID^T00030RESOURCE_NAME^T00030LETTER_TEXT^T00030NO_SHOW_LETTER^T00030CLINIC_CANCELLATION_LETTER"_$C(30)
"RTN","SDEC35",30,0)
 ;validate flags
"RTN","SDEC35",31,0)
 S SDLTR=$G(SDLTR)
"RTN","SDEC35",32,0)
 S SDNOS=$G(SDNOS)
"RTN","SDEC35",33,0)
 S SDCAN=$G(SDCAN)
"RTN","SDEC35",34,0)
 ;
"RTN","SDEC35",35,0)
 ;If SDECLIST is a list of resource NAMES, look up each name and convert to IEN
"RTN","SDEC35",36,0)
 F SDECJ=1:1:$L(SDECLIST,"|")-1 S SDEC=$P(SDECLIST,"|",SDECJ) D  S $P(SDECLIST,"|",SDECJ)=BSDY
"RTN","SDEC35",37,0)
 . S BSDY=""
"RTN","SDEC35",38,0)
 . I SDEC]"",$D(^SDEC(409.831,SDEC,0)) S BSDY=SDEC Q
"RTN","SDEC35",39,0)
 . I SDEC]"",$D(^SDEC(409.831,"B",SDEC)) S BSDY=$O(^SDEC(409.831,"B",SDEC,0)) Q
"RTN","SDEC35",40,0)
 . Q
"RTN","SDEC35",41,0)
 ;
"RTN","SDEC35",42,0)
 ;Get letter text from wp fields
"RTN","SDEC35",43,0)
 S SDECIEN=0
"RTN","SDEC35",44,0)
 F SDEC=1:1:$L(SDECLIST,"|") S SDECIEN=$P(SDECLIST,"|",SDEC) D
"RTN","SDEC35",45,0)
 . Q:'$D(^SDEC(409.831,+SDECIEN))
"RTN","SDEC35",46,0)
 . S SDECNAM=$P(^SDEC(409.831,SDECIEN,0),U)
"RTN","SDEC35",47,0)
 . S SDECLTR=""
"RTN","SDEC35",48,0)
 . I +SDLTR,$D(^SDEC(409.831,SDECIEN,1)) D
"RTN","SDEC35",49,0)
 . . S SDECIEN1=0 F  S SDECIEN1=$O(^SDEC(409.831,SDECIEN,1,SDECIEN1)) Q:'+SDECIEN1  D
"RTN","SDEC35",50,0)
 . . . S SDECLTR=SDECLTR_$G(^SDEC(409.831,SDECIEN,1,SDECIEN1,0))
"RTN","SDEC35",51,0)
 . . . S SDECLTR=SDECLTR_$C(13)_$C(10)
"RTN","SDEC35",52,0)
 . S SDECNOS=""
"RTN","SDEC35",53,0)
 . I +SDNOS,$D(^SDEC(409.831,SDECIEN,12)) D
"RTN","SDEC35",54,0)
 . . S SDECIEN1=0 F  S SDECIEN1=$O(^SDEC(409.831,SDECIEN,12,SDECIEN1)) Q:'+SDECIEN1  D
"RTN","SDEC35",55,0)
 . . . S SDECNOS=SDECNOS_$G(^SDEC(409.831,SDECIEN,12,SDECIEN1,0))
"RTN","SDEC35",56,0)
 . . . S SDECNOS=SDECNOS_$C(13)_$C(10)
"RTN","SDEC35",57,0)
 . S SDECCAN=""
"RTN","SDEC35",58,0)
 . I SDCAN,$D(^SDEC(409.831,SDECIEN,13)) D
"RTN","SDEC35",59,0)
 . . S SDECIEN1=0 F  S SDECIEN1=$O(^SDEC(409.831,SDECIEN,13,SDECIEN1)) Q:'+SDECIEN1  D
"RTN","SDEC35",60,0)
 . . . S SDECCAN=SDECCAN_$G(^SDEC(409.831,SDECIEN,13,SDECIEN1,0))
"RTN","SDEC35",61,0)
 . . . S SDECCAN=SDECCAN_$C(13)_$C(10)
"RTN","SDEC35",62,0)
 . S SDECI=SDECI+1
"RTN","SDEC35",63,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECNAM_U_SDECLTR_U_SDECNOS_U_SDECCAN_$C(30)
"RTN","SDEC35",64,0)
 ;
"RTN","SDEC35",65,0)
 S SDECI=SDECI+1
"RTN","SDEC35",66,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC35",67,0)
 Q
"RTN","SDEC35",68,0)
 ;
"RTN","SDEC35",69,0)
ERROR ;
"RTN","SDEC35",70,0)
 D ERR("Error")
"RTN","SDEC35",71,0)
 Q
"RTN","SDEC35",72,0)
 ;
"RTN","SDEC35",73,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC35",74,0)
 S:'$D(SDECI) SDECI=999
"RTN","SDEC35",75,0)
 S SDECI=SDECI+1
"RTN","SDEC35",76,0)
 S ^TMP("SDEC",$J,SDECI)="^^^^"_$C(30)
"RTN","SDEC35",77,0)
 S SDECI=SDECI+1
"RTN","SDEC35",78,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC35",79,0)
 Q
"RTN","SDEC36")
0^40^B3226334^n/a
"RTN","SDEC36",1,0)
SDEC36 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC36",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC36",3,0)
 ;
"RTN","SDEC36",4,0)
 Q
"RTN","SDEC36",5,0)
 ;
"RTN","SDEC36",6,0)
 ;COLLECT WAITLIST FOR GIVEN RESOURCE - RPC
"RTN","SDEC36",7,0)
WAITLIST(SDECY,SDECRES) ;COLLECT WAITLIST DATA
"RTN","SDEC36",8,0)
 ;WAITLIST(SDECY,SDECRES)  external parameter tag in SDEC
"RTN","SDEC36",9,0)
 ;  .SDECY   = returned pointer to list of waitlist data
"RTN","SDEC36",10,0)
 ;   SDECRES = resource code - pointer to ^SDEC(409.831 (SDEC RESOURCE)
"RTN","SDEC36",11,0)
 ; called by SDEC WAITLIST remote procedure
"RTN","SDEC36",12,0)
 ;RETURN:
"RTN","SDEC36",13,0)
 ;Returns a Global Array in which each array entry contains wait list data separated by ^:
"RTN","SDEC36",14,0)
 ; 1. HOSPITAL_LOC_IEN
"RTN","SDEC36",15,0)
 ; 2. WAIT_LIST_IEN
"RTN","SDEC36",16,0)
 ; 3. PATIENT_IEN
"RTN","SDEC36",17,0)
 ; 4. PATIENT_NAME
"RTN","SDEC36",18,0)
 ; 5. HOME_PHONE
"RTN","SDEC36",19,0)
 ; 6. WORK_PHONE
"RTN","SDEC36",20,0)
 ; 7. CHART
"RTN","SDEC36",21,0)
 ; 8. DATE_ADDED
"RTN","SDEC36",22,0)
 ; 9. REASON
"RTN","SDEC36",23,0)
 ;10. PRIORITY
"RTN","SDEC36",24,0)
 ;11. PROVIDER
"RTN","SDEC36",25,0)
 ;12. RECALL_DATE
"RTN","SDEC36",26,0)
 ;13. COMMENT
"RTN","SDEC36",27,0)
 N SDECI,SDECNOD,SDECRESN,SDECSC,SDECTMP,BSDWL,SDECWLD,SDECWLN,CI,WL
"RTN","SDEC36",28,0)
 S SDECI=0
"RTN","SDEC36",29,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC36",30,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC36",31,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC36",32,0)
 ;                1                      2                   3                 4                  5
"RTN","SDEC36",33,0)
 S SDECTMP="I00020HOSPITAL_LOC_IEN^I00020WAIT_LIST_IEN^I00020PATIENT_IEN^T00030PATIENT_NAME^T00030HOME_PHONE^"
"RTN","SDEC36",34,0)
 ;                        6                7           8                9            10             11
"RTN","SDEC36",35,0)
 S SDECTMP=SDECTMP_"T00020WORK_PHONE^T00030CHART^D00020DATE_ADDED^T00030REASON^T00020PRIORITY^I00020PROVIDER^"
"RTN","SDEC36",36,0)
 ;                        12                13
"RTN","SDEC36",37,0)
 S SDECTMP=SDECTMP_"D00020RECALL_DATE^T00250COMMENT"_$C(30)
"RTN","SDEC36",38,0)
 S ^TMP("SDEC",$J,0)=SDECTMP_$C(31)
"RTN","SDEC36",39,0)
 Q   ;TODO - this is looking at ^BSDWL - needs to be changed to look at ^SDWL
"RTN","SDEC36",40,0)
 ;
"RTN","SDEC36",41,0)
ERROR ;
"RTN","SDEC36",42,0)
 D ERR("VISTA Error")
"RTN","SDEC36",43,0)
 Q
"RTN","SDEC36",44,0)
 ;
"RTN","SDEC36",45,0)
ERR(SDECERR) ;Error processing
"RTN","SDEC36",46,0)
 S SDECI=SDECI+1
"RTN","SDEC36",47,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30,31)
"RTN","SDEC36",48,0)
 Q
"RTN","SDEC37")
0^41^B7567190^n/a
"RTN","SDEC37",1,0)
SDEC37 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC37",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC37",3,0)
 ;
"RTN","SDEC37",4,0)
 Q
"RTN","SDEC37",5,0)
 ;
"RTN","SDEC37",6,0)
 ;  NS  = RETURN NO-SHOW DATA FOR GIVEN PATIENT - RPC
"RTN","SDEC37",7,0)
 ;  VAL = return boolean to represent that a clinic allows variable appointment length - RPC
"RTN","SDEC37",8,0)
 ;
"RTN","SDEC37",9,0)
 ;RETURN NO-SHOW DATA FOR GIVEN PATIENT - RPC
"RTN","SDEC37",10,0)
NOSHOPAT(SDECY,DFN,SDCL) ;COLLECT NO-SHOW DATA for Patient
"RTN","SDEC37",11,0)
 ;NOSHOPAT(SDECY,DFN,SDCL)  external parameter tag is in SDEC
"RTN","SDEC37",12,0)
 ;  .SDECY   = returned pointer to NO SHOW data
"RTN","SDEC37",13,0)
 ;   DFN = patient code - pointer to ^DPT(DFN)
"RTN","SDEC37",14,0)
 ;   SDCL = clinic code - pointer to Hospital Location file ^SC
"RTN","SDEC37",15,0)
 N SDECI,SDBEG,SDEND,NSC,SD2,SDCLN,SDT,SDTN
"RTN","SDEC37",16,0)
 S SDECI=0
"RTN","SDEC37",17,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC37",18,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC37",19,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC37",20,0)
 ;check for valid patient
"RTN","SDEC37",21,0)
 I '+DFN D ERR("Invalid Patient ID.") Q
"RTN","SDEC37",22,0)
 I '$D(^DPT(DFN,0)) D ERR("Invalid Patient ID.") Q
"RTN","SDEC37",23,0)
 ; data header
"RTN","SDEC37",24,0)
 ; TOO_MANY = flag  0=OK; 1=too many no shows
"RTN","SDEC37",25,0)
 S ^TMP("SDEC",$J,0)="I00020PATIENT_IEN^I00020CLINIC_IEN^I00020TOO_MANY^I00020ALLOWED_NO_SHOWS^I00020TOTAL_NO_SHOWS"_$C(30)
"RTN","SDEC37",26,0)
 ;get allowed number of no shows for clinic
"RTN","SDEC37",27,0)
 S SDCLN=$G(^SC(SDCL,"SDP"))
"RTN","SDEC37",28,0)
 ;loop thru schedule
"RTN","SDEC37",29,0)
 S SDEND=DT   ;$P($$NOW^XLFDT,".",1)
"RTN","SDEC37",30,0)
 S SDBEG=$$FMADD^XLFDT(SDEND,-365)
"RTN","SDEC37",31,0)
 S NSC=0  ;no show counter
"RTN","SDEC37",32,0)
 S SDT=SDBEG
"RTN","SDEC37",33,0)
 F  S SDT=$O(^DPT(DFN,"S",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D
"RTN","SDEC37",34,0)
 . S SDTN=^DPT(DFN,"S",SDT,0)
"RTN","SDEC37",35,0)
 . I ($P(SDTN,U)=SDCL) D
"RTN","SDEC37",36,0)
 . . S SD2=$P(SDTN,U,2)
"RTN","SDEC37",37,0)
 . . I SD2["N",$$NOSHOW(DFN,SDT,$P(SDTN,U),SDTN) S NSC=NSC+1
"RTN","SDEC37",38,0)
 S SDECI=SDECI+1
"RTN","SDEC37",39,0)
 S ^TMP("SDEC",$J,SDECI)=DFN_U_SDCL_U_($P(SDCLN,U,1)'>NSC)_U_$P(SDCLN,U)_U_NSC
"RTN","SDEC37",40,0)
 S SDECI=SDECI+1
"RTN","SDEC37",41,0)
 S ^TMP("SDEC",$J,SDECI)=$C(30)
"RTN","SDEC37",42,0)
 S SDECI=SDECI+1
"RTN","SDEC37",43,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC37",44,0)
 Q
"RTN","SDEC37",45,0)
 ;
"RTN","SDEC37",46,0)
NOSHOW(DFN,SDT,CIFN,PAT) ;Input:  DFN=Patient IFN, SDT=Appointment D/T
"RTN","SDEC37",47,0)
 ;  CIFN=Clinic IFN, PAT=Zero node of pat. appt., DA=Clinic appt. IFN
"RTN","SDEC37",48,0)
 ;                        Output:  1 or 0 for noshow yes/no
"RTN","SDEC37",49,0)
 N NSQUERY,NS S NS=1,NSQUERY=$$STATUS^SDAM1(DFN,SDT,CIFN,PAT)
"RTN","SDEC37",50,0)
 I $P(NSQUERY,";",3)["ACTION REQ" S NS=0
"RTN","SDEC37",51,0)
NOSHOWQ Q NS
"RTN","SDEC37",52,0)
 ;
"RTN","SDEC37",53,0)
CVARAPPT(SDECY,SDCL) ;IS Clinic Variable Appointment Length
"RTN","SDEC37",54,0)
 ;CVARAPPT(SDECY,SDCL)  external parameter tag is in SDEC
"RTN","SDEC37",55,0)
 ;return boolean to represent that a clinic allows variable appointment length - RPC
"RTN","SDEC37",56,0)
 N SDECI,VAL
"RTN","SDEC37",57,0)
 S SDECI=0
"RTN","SDEC37",58,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC37",59,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC37",60,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC37",61,0)
 ;check for valid clinic ID
"RTN","SDEC37",62,0)
 I '+SDCL D ERR("Invalid Clinic ID.") Q
"RTN","SDEC37",63,0)
 I '$D(^SC(SDCL,0)) D ERR("Invalid Clinic ID.") Q
"RTN","SDEC37",64,0)
 ; data header
"RTN","SDEC37",65,0)
 ; VAR_APPT_FLAG = flag  0=Clinic does not Allow Variable Appointment; 1=Clinic Allows Variable Appointment
"RTN","SDEC37",66,0)
 S ^TMP("SDEC",$J,0)="I00020VAR_APPT_FLAG"_$C(30)
"RTN","SDEC37",67,0)
 ;get VARIABLE APPOINTMENT FLAG for clinic
"RTN","SDEC37",68,0)
 S VAL=$$GET1^DIQ(44,SDCL_",",1913) ;Variable Appointment Length
"RTN","SDEC37",69,0)
 S VAL=$S(VAL["YES":1,1:0)
"RTN","SDEC37",70,0)
 S SDECI=SDECI+1
"RTN","SDEC37",71,0)
 S ^TMP("SDEC",$J,SDECI)=VAL
"RTN","SDEC37",72,0)
 S SDECI=SDECI+1
"RTN","SDEC37",73,0)
 S ^TMP("SDEC",$J,SDECI)=$C(30)
"RTN","SDEC37",74,0)
 S SDECI=SDECI+1
"RTN","SDEC37",75,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC37",76,0)
 Q
"RTN","SDEC37",77,0)
 ;
"RTN","SDEC37",78,0)
ERROR ;
"RTN","SDEC37",79,0)
 D ERR("VISTA Error")
"RTN","SDEC37",80,0)
 Q
"RTN","SDEC37",81,0)
 ;
"RTN","SDEC37",82,0)
ERR(SDECERR) ;Error processing
"RTN","SDEC37",83,0)
 S SDECI=SDECI+1
"RTN","SDEC37",84,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC37",85,0)
 S SDECI=SDECI+1
"RTN","SDEC37",86,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC37",87,0)
 Q
"RTN","SDEC37",88,0)
 ;
"RTN","SDEC38")
0^42^B35171696^n/a
"RTN","SDEC38",1,0)
SDEC38 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC38",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC38",3,0)
 ;
"RTN","SDEC38",4,0)
 Q
"RTN","SDEC38",5,0)
 ;
"RTN","SDEC38",6,0)
APPTEVLG(SDECY,DFN) ;GET appointment data for given patient
"RTN","SDEC38",7,0)
 ;APPTEVLG(SDECY,DFN)  external parameter tag is in SDEC
"RTN","SDEC38",8,0)
 ;INPUT:
"RTN","SDEC38",9,0)
 ;   DFN = patient code - pointer to ^DPT(DFN)
"RTN","SDEC38",10,0)
 ;RETURN:
"RTN","SDEC38",11,0)
 ;Global Array with a single entry containing appointment data for the given patient:
"RTN","SDEC38",12,0)
 ;  1. PATIENT_IEN
"RTN","SDEC38",13,0)
 ;  2. PATIENT_NAME
"RTN","SDEC38",14,0)
 ;  3. CLINIC_IEN
"RTN","SDEC38",15,0)
 ;  4. WARD_IEN
"RTN","SDEC38",16,0)
 ;  5. APPT_TIME
"RTN","SDEC38",17,0)
 ;  6. APPT_NUMBER
"RTN","SDEC38",18,0)
 ;  7. APPT_MADE_TIME
"RTN","SDEC38",19,0)
 ;  8. APPT_MADE_USER
"RTN","SDEC38",20,0)
 ;  9. APPT_MADE_USER_NAME
"RTN","SDEC38",21,0)
 ; 10. ROUT_SLIP_DATE
"RTN","SDEC38",22,0)
 ; 11. CHECKIN_TIME
"RTN","SDEC38",23,0)
 ; 12. CHECKIN_USER
"RTN","SDEC38",24,0)
 ; 13. CHECKIN_USER_NAME
"RTN","SDEC38",25,0)
 ; 14. CHECKOUT_TIME
"RTN","SDEC38",26,0)
 ; 15. CHECKOUT_USER
"RTN","SDEC38",27,0)
 ; 16. CHECKOUT_USER_NAME
"RTN","SDEC38",28,0)
 ; 17. CHECKOUT_FILED_TIME
"RTN","SDEC38",29,0)
 ; 18. NO_SHO_CANCEL_TIME
"RTN","SDEC38",30,0)
 ; 19. NO_SHO_CANCEL_USER
"RTN","SDEC38",31,0)
 ; 20. NO_SHO_CANCEL_USER_NAME
"RTN","SDEC38",32,0)
 ; 21. CHECKED_OUT
"RTN","SDEC38",33,0)
 ; 22. REBOOK_DATE
"RTN","SDEC38",34,0)
 ; 23. CANCEL_REASON
"RTN","SDEC38",35,0)
 ; 24. CANCEL_REMARK
"RTN","SDEC38",36,0)
 ;
"RTN","SDEC38",37,0)
 N AMN,AMT,AMU,APN,APT,SDECI,SDECTMP,CIN,CIT,CIU,COE,COF,CON,COT,COU,CRM,CRS
"RTN","SDEC38",38,0)
 N DPTS,DPTSR,NSN,NST,NSU,PAT,PN,RBD,RSD,S,SC,SDCL,SDCLS,SDCLSC,SDW
"RTN","SDEC38",39,0)
 S SDECI=0
"RTN","SDEC38",40,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC38",41,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC38",42,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC38",43,0)
 ;check for valid Patient
"RTN","SDEC38",44,0)
 I '+DFN D ERR^SDECERR("Invalid Patient ID.") Q
"RTN","SDEC38",45,0)
 I '$D(^DPT(DFN,0)) D ERR^SDECERR("Invalid Patient ID.") Q
"RTN","SDEC38",46,0)
 ; data header
"RTN","SDEC38",47,0)
 S SDECTMP="T00020PATIENT_IEN^T00020PATIENT_NAME^T00020CLINIC_IEN^T00020WARD_IEN^T00020APPT_TIME^T00020APPT_NUMBER"
"RTN","SDEC38",48,0)
 S SDECTMP=SDECTMP_"^T00020APPT_MADE_TIME^T00020APPT_MADE_USER^T00020APPT_MADE_USER_NAME^T00020ROUT_SLIP_DATE"
"RTN","SDEC38",49,0)
 S SDECTMP=SDECTMP_"^T00020CHECKIN_TIME^T00020CHECKIN_USER^T00020CHECKIN_USER_NAME"
"RTN","SDEC38",50,0)
 S SDECTMP=SDECTMP_"^T00020CHECKOUT_TIME^T00020CHECKOUT_USER^T00020CHECKOUT_USER_NAME^T00020CHECKOUT_FILED_TIME"
"RTN","SDEC38",51,0)
 S SDECTMP=SDECTMP_"^T00020NO_SHO_CANCEL_TIME^T00020NO_SHO_CANCEL_USER^T00020NO_SHO_CANCEL_USER_NAME^T00020CHECKED_OUT"
"RTN","SDEC38",52,0)
 S SDECTMP=SDECTMP_"^T00020REBOOK_DATE^T00100CANCEL_REASON^T00100CANCEL_REMARK"_$C(30)
"RTN","SDEC38",53,0)
 S ^TMP("SDEC",$J,0)=SDECTMP
"RTN","SDEC38",54,0)
 S PN=$$GET1^DIQ(2,DFN_",",.01)
"RTN","SDEC38",55,0)
 S APN=0
"RTN","SDEC38",56,0)
 S SDCLS=""
"RTN","SDEC38",57,0)
 S SDCLSC=""
"RTN","SDEC38",58,0)
 ;loop thru patient appointments
"RTN","SDEC38",59,0)
 S S=0 F  S S=$O(^DPT(DFN,"S",S)) Q:S'>0  D
"RTN","SDEC38",60,0)
 . S DPTS=$G(^DPT(DFN,"S",S,0))
"RTN","SDEC38",61,0)
 . S DPTSR=$G(^DPT(DFN,"S",S,"R"))
"RTN","SDEC38",62,0)
 . S SDCL=$P(DPTS,U)        ;get clinic
"RTN","SDEC38",63,0)
 . S PAT="",SC=0 F  S SC=$O(^SC(SDCL,"S",S,1,SC)) Q:SC'>0  D  Q:PAT=DFN  ;get appt record from clinic
"RTN","SDEC38",64,0)
 . . S SDCLS=$G(^SC(SDCL,"S",S,1,SC,0))
"RTN","SDEC38",65,0)
 . . S SDCLSC=$G(^SC(SDCL,"S",S,1,SC,"C"))
"RTN","SDEC38",66,0)
 . . S PAT=$P(SDCLS,U)
"RTN","SDEC38",67,0)
 . . I PAT=DFN Q
"RTN","SDEC38",68,0)
 . S SDECTMP=DFN_U                                 ;01 PATIENT_IEN
"RTN","SDEC38",69,0)
 . S SDECTMP=SDECTMP_PN_U                          ;02 PATIENT_NAME
"RTN","SDEC38",70,0)
 . S SDECTMP=SDECTMP_SDCL_U                        ;03 CLINIC_IEN
"RTN","SDEC38",71,0)
 . S SDW=$S($D(^DPT(DFN,.1)):^(.1),1:"Outpatient") ;04 WARD_IEN
"RTN","SDEC38",72,0)
 . S SDECTMP=SDECTMP_SDW_U
"RTN","SDEC38",73,0)
 . S APT=$TR($$FMTE^XLFDT(S),"@"," ")              ;05 APPT_TIME
"RTN","SDEC38",74,0)
 . S SDECTMP=SDECTMP_APT_U
"RTN","SDEC38",75,0)
 . S APN=APN+1                                     ;06 APPT_NUMBER
"RTN","SDEC38",76,0)
 . S SDECTMP=SDECTMP_APN_U
"RTN","SDEC38",77,0)
 . S AMT=$P(DPTS,U,19)                             ;07 APPT_MADE_TIME
"RTN","SDEC38",78,0)
 . S:AMT'="" AMT=$TR($$FMTE^XLFDT(AMT),"@"," ")
"RTN","SDEC38",79,0)
 . S SDECTMP=SDECTMP_AMT_U
"RTN","SDEC38",80,0)
 . S AMU=$P(DPTS,U,18)                             ;08 APPT_MADE_USER
"RTN","SDEC38",81,0)
 . S SDECTMP=SDECTMP_AMU_U
"RTN","SDEC38",82,0)
 . S AMN=$$GET1^DIQ(200,AMU_",",.01)               ;09 APPT_MADE_USER_NAME
"RTN","SDEC38",83,0)
 . S SDECTMP=SDECTMP_AMN_U
"RTN","SDEC38",84,0)
 . S RSD=$P(DPTS,U,13)                             ;10 ROUT_SLIP_DATE
"RTN","SDEC38",85,0)
 . S:RSD'="" RSD=$TR($$FMTE^XLFDT(RSD),"@"," ")
"RTN","SDEC38",86,0)
 . S SDECTMP=SDECTMP_RSD_U
"RTN","SDEC38",87,0)
 . S CIT=$P(SDCLSC,U)                              ;11 CHECKIN_TIME
"RTN","SDEC38",88,0)
 . S:CIT'="" CIT=$TR($$FMTE^XLFDT(CIT),"@"," ")
"RTN","SDEC38",89,0)
 . S SDECTMP=SDECTMP_CIT_U
"RTN","SDEC38",90,0)
 . S CIU=$P(SDCLSC,U,2)                            ;12 CHECKIN_USER
"RTN","SDEC38",91,0)
 . S SDECTMP=SDECTMP_CIU_U
"RTN","SDEC38",92,0)
 . S CIN=$$GET1^DIQ(200,CIU_",",.01)               ;13 CHECKIN_USER_NAME
"RTN","SDEC38",93,0)
 . S SDECTMP=SDECTMP_CIN_U
"RTN","SDEC38",94,0)
 . S COT=$P(SDCLSC,U,3)                            ;14 CHECKOUT_TIME
"RTN","SDEC38",95,0)
 . S:COT'="" COT=$TR($$FMTE^XLFDT(COT),"@"," ")
"RTN","SDEC38",96,0)
 . S SDECTMP=SDECTMP_COT_U
"RTN","SDEC38",97,0)
 . S COU=$P(SDCLSC,U,4)                            ;15 CHECKOUT_USER
"RTN","SDEC38",98,0)
 . S SDECTMP=SDECTMP_COU_U
"RTN","SDEC38",99,0)
 . S CON=$$GET1^DIQ(200,COU_",",.01)               ;16 CHECKOUT_USER_NAME
"RTN","SDEC38",100,0)
 . S SDECTMP=SDECTMP_CON_U
"RTN","SDEC38",101,0)
 . S COE=$P(SDCLSC,U,6)                            ;17 CHECKOUT_FILED_TIME
"RTN","SDEC38",102,0)
 . S:COE'="" COE=$TR($$FMTE^XLFDT(COE),"@"," ")
"RTN","SDEC38",103,0)
 . S SDECTMP=SDECTMP_COE_U
"RTN","SDEC38",104,0)
 . S NST=$P(DPTS,U,14)                             ;18 NO_SHO_CANCEL_TIME
"RTN","SDEC38",105,0)
 . S:NST'="" NST=$TR($$FMTE^XLFDT(NST),"@"," ")
"RTN","SDEC38",106,0)
 . S SDECTMP=SDECTMP_NST_U
"RTN","SDEC38",107,0)
 . S NSU=$P(DPTS,U,12)                             ;19 NO_SHO_CANCEL_USER
"RTN","SDEC38",108,0)
 . S SDECTMP=SDECTMP_NSU_U
"RTN","SDEC38",109,0)
 . S NSN=$$GET1^DIQ(200,NSU_",",.01)               ;20 NO_SHO_CANCEL_USER_NAME
"RTN","SDEC38",110,0)
 . S SDECTMP=SDECTMP_NSN_U
"RTN","SDEC38",111,0)
 . S COF=$S($P(SDCLSC,U,3)'="":"YES",SDCLSC'="":"NO",1:"") ;21 CHECKED_OUT
"RTN","SDEC38",112,0)
 . S SDECTMP=SDECTMP_COF_U
"RTN","SDEC38",113,0)
 . S RBD=$P(DPTS,U,10)                             ;22 REBOOK_DATE
"RTN","SDEC38",114,0)
 . S:RBD'="" RBD=$TR($$FMTE^XLFDT(RBD),"@"," ")
"RTN","SDEC38",115,0)
 . S SDECTMP=SDECTMP_RBD_U
"RTN","SDEC38",116,0)
 . S SDECI=SDECI+1
"RTN","SDEC38",117,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECTMP
"RTN","SDEC38",118,0)
 . S CRS=$P(DPTS,U,15)                             ;23 CANCEL_REASON
"RTN","SDEC38",119,0)
 . S SDECI=SDECI+1
"RTN","SDEC38",120,0)
 . S ^TMP("SDEC",$J,SDECI)=CRS_U
"RTN","SDEC38",121,0)
 . S CRM=$P(DPTSR,U)                               ;24 CANCEL_REMARK
"RTN","SDEC38",122,0)
 . S SDECI=SDECI+1
"RTN","SDEC38",123,0)
 . S ^TMP("SDEC",$J,SDECI)=CRM
"RTN","SDEC38",124,0)
 . S SDECI=SDECI+1
"RTN","SDEC38",125,0)
 . S ^TMP("SDEC",$J,SDECI)=$C(30)
"RTN","SDEC38",126,0)
 ;
"RTN","SDEC38",127,0)
 S SDECI=SDECI+1
"RTN","SDEC38",128,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC38",129,0)
 Q
"RTN","SDEC38",130,0)
 ;
"RTN","SDEC38",131,0)
NOSHOW(DFN,SDT,CIFN,PAT) ;Input:  DFN=Patient IFN, SDT=Appointment D/T
"RTN","SDEC38",132,0)
 ;  CIFN=Clinic IFN, PAT=Zero node of pat. appt., DA=Clinic appt. IFN
"RTN","SDEC38",133,0)
 ;                        Output:  1 or 0 for noshow yes/no
"RTN","SDEC38",134,0)
 N NSQUERY,NS S NS=1,NSQUERY=$$STATUS^SDAM1(DFN,SDT,CIFN,PAT)
"RTN","SDEC38",135,0)
 I $P(NSQUERY,";",3)["ACTION REQ" S NS=0
"RTN","SDEC38",136,0)
NOSHOWQ Q NS
"RTN","SDEC38",137,0)
 ;
"RTN","SDEC38",138,0)
 ;return boolean to represent that a clinic allows variable appointment length - RPC
"RTN","SDEC38",139,0)
VAL(SDECY,SDCL) ;return boolean to represent that a clinic allows variable appointment length - RPC
"RTN","SDEC38",140,0)
 ; SDEC CLINIC VAR APPT
"RTN","SDEC38",141,0)
 N SDECI,VAL
"RTN","SDEC38",142,0)
 S SDECI=0
"RTN","SDEC38",143,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC38",144,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC38",145,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC38",146,0)
 ;check for valid clinic ID
"RTN","SDEC38",147,0)
 I '+SDCL D ERR^SDECERR("Invalid Clinic ID.") Q
"RTN","SDEC38",148,0)
 I '$D(^SC(SDCL,0)) D ERR^SDECERR("Invalid Clinic ID.") Q
"RTN","SDEC38",149,0)
 ; data header
"RTN","SDEC38",150,0)
 ; VAR_APPT_FLAG = flag  0=Clinic does not Allow Variable Appointment; 1=Clinic Allows Variable Appointment
"RTN","SDEC38",151,0)
 S ^TMP("SDEC",$J,0)="I00020VAR_APPT_FLAG"_$C(30)
"RTN","SDEC38",152,0)
 ;get VARIABLE APPOINTMENT FLAG for clinic
"RTN","SDEC38",153,0)
 S VAL=$$GET1^DIQ(44,SDCL_",",1913) ;Variable Appointment Length
"RTN","SDEC38",154,0)
 S VAL=$S(VAL["YES":1,1:0)
"RTN","SDEC38",155,0)
 S SDECI=SDECI+1
"RTN","SDEC38",156,0)
 S ^TMP("SDEC",$J,SDECI)=VAL
"RTN","SDEC38",157,0)
 S SDECI=SDECI+1
"RTN","SDEC38",158,0)
 S ^TMP("SDEC",$J,SDECI)=$C(30)
"RTN","SDEC38",159,0)
 S SDECI=SDECI+1
"RTN","SDEC38",160,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC38",161,0)
 Q
"RTN","SDEC40")
0^44^B66764561^n/a
"RTN","SDEC40",1,0)
SDEC40 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC40",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC40",3,0)
 ;
"RTN","SDEC40",4,0)
 Q
"RTN","SDEC40",5,0)
 ;
"RTN","SDEC40",6,0)
 ;  APL - Print Appointment Letter
"RTN","SDEC40",7,0)
 ;
"RTN","SDEC40",8,0)
APPTLETR(SDECY,SDECAPID,LT)  ;Print Appointment Letter
"RTN","SDEC40",9,0)
 ;APPTLETR(SDECY,SDECAPID,LT)  external parameter tag is in SDEC
"RTN","SDEC40",10,0)
 ; SDECAPPT = Pointer to appointment in SDEC APPOINTMENT file 409.84
"RTN","SDEC40",11,0)
 ; LT       = Letter type - "N"=No Show; "P"=Pre-Appointment; "A"=Cancelled by Patient; "C"=Cancelled by Clinic
"RTN","SDEC40",12,0)
 ; Called by SDEC PRINT APPT LETTER remote procedure
"RTN","SDEC40",13,0)
 N SDECI,SDECNOD,SDECTMP,DFN,IN,RES,SCLT,SDC,SDLET,SDS,SDT,X1,X2,Y
"RTN","SDEC40",14,0)
 N SDIV,SDFORM,SDNAM,SDSSN
"RTN","SDEC40",15,0)
 S SDECI=0
"RTN","SDEC40",16,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC40",17,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC40",18,0)
 S ^TMP("SDEC",$J,0)="T00080ERRORID"_$C(30)
"RTN","SDEC40",19,0)
 I '+SDECAPID D ERR^SDECERR("Invalid Appointment ID.") Q
"RTN","SDEC40",20,0)
 I '$D(^SDEC(409.84,SDECAPID,0)) D ERR^SDECERR("Invalid Appointment ID.") Q
"RTN","SDEC40",21,0)
 I $G(LT)="" S LT="P"  ;D ERR^SDECERR("Invalid Letter Type.") Q
"RTN","SDEC40",22,0)
 S SDECNOD=^SDEC(409.84,SDECAPID,0)
"RTN","SDEC40",23,0)
 S SDT=$P(SDECNOD,U)  ;Get appt time
"RTN","SDEC40",24,0)
 S DFN=$P(SDECNOD,U,5)  ;Get patient pointer to VA PATIENT (^DPT) file 2
"RTN","SDEC40",25,0)
 S RES=$P(SDECNOD,U,7) S SDC=$P(^SDEC(409.831,RES,0),U,4)  ;get resource and clinic
"RTN","SDEC40",26,0)
 S SDS=^DPT(DFN,"S",SDT,0)
"RTN","SDEC40",27,0)
 S SCLT=$S(LT="N":1,LT="P":2,LT="C":3,LT="A":4,1:"2") ;get storage position of LETTER pointer
"RTN","SDEC40",28,0)
 S SDLET=$P($G(^SC(SDC,"LTR")),U,SCLT)
"RTN","SDEC40",29,0)
 I SDLET="" D ERR^SDECERR($S(SCLT=1:"No-Show",SCLT=2:"Pre-Appointment",SCLT=3:"Clinic Cancellation",1:"Patient Cancellation")_"Letter not defined for Clinic "_$P(^SC(SDC,0),U)_".") Q
"RTN","SDEC40",30,0)
 S SDIV=$P(^SC(SDC,0),"^",15),SDIV=$S(SDIV:SDIV,1:$O(^DG(40.8,0)))
"RTN","SDEC40",31,0)
 S SDFORM=$P($G(^DG(40.8,SDIV,"LTR")),U,1)
"RTN","SDEC40",32,0)
 ; data header
"RTN","SDEC40",33,0)
 S ^TMP("SDEC",$J,0)="T00080TEXT"_$C(30)
"RTN","SDEC40",34,0)
 D PRT(DFN,SDC,SDT,LT,SDLET,SDFORM)
"RTN","SDEC40",35,0)
 D WRAPP(DFN,SDC,SDT,LT,SDLET)
"RTN","SDEC40",36,0)
 D REST(DFN,SDC,SDT,LT,SDLET,SDFORM)
"RTN","SDEC40",37,0)
 S SDECI=SDECI+1 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(30,31)
"RTN","SDEC40",38,0)
 Q
"RTN","SDEC40",39,0)
 ;
"RTN","SDEC40",40,0)
 ;
"RTN","SDEC40",41,0)
PRT(DFN,SDC,SD,LT,SDLET,SDFORM) ;
"RTN","SDEC40",42,0)
 ;  DFN - pointer to PATIENT file 2
"RTN","SDEC40",43,0)
 ;  SDC - pointer to HOSPITAL LOCATION file 44
"RTN","SDEC40",44,0)
 ;  SD  - appointment time in FM format
"RTN","SDEC40",45,0)
 ;  LT  - Letter type - "N"=No Show; "P"=Pre-Appointment; "A"=Cancelled by Patient; "C"=Cancelled by Clinic
"RTN","SDEC40",46,0)
 ;  SDLET - pointer to LETTER file 407.5
"RTN","SDEC40",47,0)
 ;WRITE GREETING AND OPENING TEXT OF LETTER
"RTN","SDEC40",48,0)
 N A,DPTNAME,IN,X,Y
"RTN","SDEC40",49,0)
 S A=DFN
"RTN","SDEC40",50,0)
 Q:DFN=""
"RTN","SDEC40",51,0)
 Q:LT=""
"RTN","SDEC40",52,0)
 S SDFORM=$G(SDFORM)
"RTN","SDEC40",53,0)
 S Y=DT D DTS^SDUTL
"RTN","SDEC40",54,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(64," ")_Y_$C(13,10)
"RTN","SDEC40",55,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(64," ")_$$LAST4(A)_$C(13,10)
"RTN","SDEC40",56,0)
 I 'SDFORM D
"RTN","SDEC40",57,0)
 .F I=1:1:4 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",58,0)
 .D ADDR
"RTN","SDEC40",59,0)
 .F I=1:1:4 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",60,0)
 ;
"RTN","SDEC40",61,0)
 S DPTNAME("FILE")=2,DPTNAME("FIELD")=".01",DPTNAME("IENS")=(+A)_","
"RTN","SDEC40",62,0)
 S X=$$NAMEFMT^XLFNAME(.DPTNAME,"G","M")
"RTN","SDEC40",63,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="Dear "_$S($P(^DPT(+A,0),"^",2)="M":"Mr. ",1:"Ms. ")_X_","_$C(13,10)
"RTN","SDEC40",64,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",65,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",66,0)
 ;loop and display initial section of Letter
"RTN","SDEC40",67,0)
 S IN=0 F  S IN=$O(^VA(407.5,SDLET,1,IN)) Q:IN'>0  D
"RTN","SDEC40",68,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=^VA(407.5,SDLET,1,IN,0)_$C(13,10)
"RTN","SDEC40",69,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",70,0)
 Q
"RTN","SDEC40",71,0)
 ;
"RTN","SDEC40",72,0)
WRAPP(DFN,SDC,SD,LT,SDLET) ;WRITE APPOINTMENT INFORMATION
"RTN","SDEC40",73,0)
 N B,DOW,S,SDCL,SDDAT,SDHX,SDT0,SDTMP,SDX,SDX1,X
"RTN","SDEC40",74,0)
 S SDX=SD
"RTN","SDEC40",75,0)
 S SDCL=$P(^SC(+SDC,0),"^",1),SDCL="   Clinic:  "_SDCL D FORM ; SD*5.3*622 end changes
"RTN","SDEC40",76,0)
 ;
"RTN","SDEC40",77,0)
 S SDX1=SDX ;S:$D(SDS) S=SDS F B=3,4,5 I $P(S,"^",B)]"" S SDCL=$S(B=3:"LAB",B=4:"XRAY",1:"EKG"),SDX=$P(S,"^",B) D FORM
"RTN","SDEC40",78,0)
 S (SDX,X)=SDX1 Q
"RTN","SDEC40",79,0)
 ; SD*5.3*622 - add more detail for appointment and format it
"RTN","SDEC40",80,0)
FORM S:$D(SDX) X=SDX S SDHX=X D DW^%DTC S DOW=X,X=SDHX X ^DD("FUNC",2,1) S SDT0=X,SDDAT=$P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC","^",$E(SDHX,4,5))_" "_+$E(SDHX,6,7)_", "_(1700+$E(SDHX,1,3))
"RTN","SDEC40",81,0)
 I '$D(B) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="     Date/Time: "_DOW_"  "_$J(SDDAT,12)_$S('$D(B)&$D(SDC):$J(SDT0,9),1:"")_$C(13,10)
"RTN","SDEC40",82,0)
 I '$D(B),$D(SDC) D
"RTN","SDEC40",83,0)
 .S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="    "_SDCL_$C(13,10)
"RTN","SDEC40",84,0)
 ; get default provider if defined for a given clinic, print it on the
"RTN","SDEC40",85,0)
 ; letter only if we have a YES on file, same for clinic location
"RTN","SDEC40",86,0)
 ; skip printing the provider label if the field is empty in file #44
"RTN","SDEC40",87,0)
 N J,SDLOC,SDPROV,SDPRNM,SDTEL,SDTELEXT
"RTN","SDEC40",88,0)
 S SDLOC=$P($G(^SC(+SDC,0)),"^",11) ; physical location of the clinic
"RTN","SDEC40",89,0)
 S SDTEL=$G(^SC(+SDC,99))        ; telephone number of clinic
"RTN","SDEC40",90,0)
 S SDTELEXT="" I SDTEL]"",$G(^SC(+SDC,99.1))]"" D
"RTN","SDEC40",91,0)
 .S SDTELEXT=^SC(+SDC,99.1)  ; telephone ext of clinic
"RTN","SDEC40",92,0)
 ; get default provider, if any
"RTN","SDEC40",93,0)
 F J=0:0 S J=$O(^SC(+SDC,"PR",J)) Q:'J>0  I $P($G(^SC(+SDC,"PR",J,0)),U,2)=1 S SDPROV=+$P(^SC(+SDC,"PR",J,0),U,1)
"RTN","SDEC40",94,0)
 I $D(SDC),'$D(B),$P($G(^VA(407.5,SDLET,3)),U,2)="Y" D
"RTN","SDEC40",95,0)
 .I SDLOC]"" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="     "_"Location:  "_SDLOC_$C(13,10)
"RTN","SDEC40",96,0)
 I $D(SDC),'$D(B),SDTEL]"" D
"RTN","SDEC40",97,0)
 .S SDTMP="    Telephone:  "_SDTEL
"RTN","SDEC40",98,0)
 .I SDTELEXT]"" S SDTMP=SDTMP_"   Telephone Ext.:  "_SDTELEXT
"RTN","SDEC40",99,0)
 .S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(13,10)
"RTN","SDEC40",100,0)
 I $D(SDPROV) D
"RTN","SDEC40",101,0)
 .I $D(SDC),SDPROV>0 S SDPRNM=$P(^VA(200,SDPROV,0),U,1)
"RTN","SDEC40",102,0)
 .I $D(SDC),'$D(B),$P($G(^VA(407.5,SDLET,3)),U,1)="Y" I SDPRNM]"" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="     Provider:  "_$G(SDPRNM)_$C(13,10)
"RTN","SDEC40",103,0)
 ; call handler for LAB, XRAY, and EKG tests
"RTN","SDEC40",104,0)
 I $D(B) D TST
"RTN","SDEC40",105,0)
 Q
"RTN","SDEC40",106,0)
REST(DFN,SDC,SD,LT,SDLET,SDFORM) ;WRITE THE REMAINDER OF LETTER
"RTN","SDEC40",107,0)
 N A,Z5,I,IN,X
"RTN","SDEC40",108,0)
 S A=DFN
"RTN","SDEC40",109,0)
 S SDFORM=$G(SDFORM)
"RTN","SDEC40",110,0)
 ;loop and display final section of Letter
"RTN","SDEC40",111,0)
 S IN=0 F  S IN=$O(^VA(407.5,SDLET,2,IN)) Q:IN'>0  D
"RTN","SDEC40",112,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=^VA(407.5,SDLET,2,IN,0)_$C(13,10)
"RTN","SDEC40",113,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",114,0)
 D:SDFORM=1 ADDR
"RTN","SDEC40",115,0)
 Q
"RTN","SDEC40",116,0)
ADDR K VAHOW S DFN=+A S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_$$FML^DGNFUNC(DFN)_$C(13,10)
"RTN","SDEC40",117,0)
 I $D(^DG(43,1,"BT")),'$P(^("BT"),"^",3) S VAPA("P")=""
"RTN","SDEC40",118,0)
 S X1=DT,X2=5 D C^%DTC ;I '$D(VAPA("P")) S (VATEST("ADD",9),VATEST("ADD",10))=X
"RTN","SDEC40",119,0)
 D ADD^VADPT D
"RTN","SDEC40",120,0)
 .;CHANGE STATE TO ABBR.
"RTN","SDEC40",121,0)
 .N SDIENS,X
"RTN","SDEC40",122,0)
 .I $D(VAPA(5)) S SDIENS=+VAPA(5)_",",X=$$GET1^DIQ(5,SDIENS,1),$P(VAPA(5),U,2)=X
"RTN","SDEC40",123,0)
 .I $D(VAPA(17)) S SDIENS=+VAPA(17)_",",X=$$GET1^DIQ(5,SDIENS,1),$P(VAPA(17),U,2)=X
"RTN","SDEC40",124,0)
 .K SDIENS Q
"RTN","SDEC40",125,0)
 N SDCCACT1,SDCCACT2,LL
"RTN","SDEC40",126,0)
 S SDCCACT1=VAPA(12),SDCCACT2=$P($G(VAPA(22,2)),"^",3)
"RTN","SDEC40",127,0)
 ;if confidential address is not active for scheduling/appointment letters, print to regular address
"RTN","SDEC40",128,0)
 I ($G(SDCCACT1)=0)!($G(SDCCACT2)'="Y") D
"RTN","SDEC40",129,0)
 .F LL=1:1:3 I VAPA(LL)]"" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_VAPA(LL)_$C(13,10)
"RTN","SDEC40",130,0)
 .;if country is blank display as USA
"RTN","SDEC40",131,0)
 .I (VAPA(25)="")!($P(VAPA(25),"^",2)="UNITED STATES")  D  ;display city,state,zip
"RTN","SDEC40",132,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_VAPA(4)_" "_$P(VAPA(5),U,2)_"  "_$P(VAPA(11),U,2)_$C(13,10)
"RTN","SDEC40",133,0)
 .E  D  ;display postal code,city,province
"RTN","SDEC40",134,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_VAPA(24)_" "_VAPA(4)_" "_VAPA(23)_$C(13,10)
"RTN","SDEC40",135,0)
 .I ($P(VAPA(25),"^",2)'="UNITED STATES") S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_$P(VAPA(25),U,2)_$C(13,10) ;display country
"RTN","SDEC40",136,0)
 ;if confidential address is active for scheduling/appointment letters, print to confidential address
"RTN","SDEC40",137,0)
 I $G(SDCCACT1)=1,$G(SDCCACT2)="Y" D
"RTN","SDEC40",138,0)
 .F LL=13:1:15 I VAPA(LL)]"" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_VAPA(LL)_$C(13,10)
"RTN","SDEC40",139,0)
 .I (VAPA(28)="")!($P(VAPA(28),"^",2)="UNITED STATES") D
"RTN","SDEC40",140,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_VAPA(16)_" "_$P(VAPA(17),U,2)_"  "_$P(VAPA(18),U,2)_$C(13,10)
"RTN","SDEC40",141,0)
 .E  D
"RTN","SDEC40",142,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_VAPA(27)_" "_VAPA(16)_" "_VAPA(26)_$C(13,10)
"RTN","SDEC40",143,0)
 .I ($P(VAPA(28),"^",2)'="UNITED STATES") S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(11," ")_$P(VAPA(28),U,2)_$C(13,10)
"RTN","SDEC40",144,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",145,0)
 D KVAR^VADPT
"RTN","SDEC40",146,0)
 Q
"RTN","SDEC40",147,0)
 ;
"RTN","SDEC40",148,0)
 ;
"RTN","SDEC40",149,0)
LAST4(DFN) ;Return patient "last four"
"RTN","SDEC40",150,0)
 N SDX
"RTN","SDEC40",151,0)
 S SDX=$G(^DPT(+DFN,0))
"RTN","SDEC40",152,0)
 Q $E(SDX)_$E($P(SDX,U,9),6,9)
"RTN","SDEC40",153,0)
 ;
"RTN","SDEC40",154,0)
BADADD ;Print patients with a Bad Address Indicator
"RTN","SDEC40",155,0)
 I '$D(^TMP($J,"BADADD")) Q
"RTN","SDEC40",156,0)
 N SDHDR,SDHDR1
"RTN","SDEC40",157,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(79,"*")_$C(13,10)
"RTN","SDEC40",158,0)
 S SDHDR="BAD ADDRESS INDICATOR LIST" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU((80-$L(SDHDR)/2)," ")_SDHDR_$C(13,10)
"RTN","SDEC40",159,0)
 S SDHDR1="** THE LETTER FOR THESE PATIENT(S) DID NOT PRINT DUE TO A BAD ADDRESS INDICATOR."
"RTN","SDEC40",160,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="Last 4"_$C(13,10)
"RTN","SDEC40",161,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="of SSN   "_"Patient Name"_$C(13,10)
"RTN","SDEC40",162,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$FILL^SDECU(79,"*")_$C(13,10)
"RTN","SDEC40",163,0)
 N SDNAM,SDDFN
"RTN","SDEC40",164,0)
 S SDNAM="" F  S SDNAM=$O(^TMP($J,"BADADD",SDNAM)) Q:SDNAM=""  D
"RTN","SDEC40",165,0)
 . S SDDFN=0 F  S SDDFN=$O(^TMP($J,"BADADD",SDNAM,SDDFN)) Q:'SDDFN  D
"RTN","SDEC40",166,0)
 . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$$LAST4(SDDFN)_"      "_SDNAM_$C(13,10)
"RTN","SDEC40",167,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",168,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",169,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDHDR1_$C(13,10)
"RTN","SDEC40",170,0)
 Q
"RTN","SDEC40",171,0)
 ;
"RTN","SDEC40",172,0)
TST ; SD*5.3*622 - handle scheduled tests
"RTN","SDEC40",173,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(13,10)
"RTN","SDEC40",174,0)
 I ($L(SDCL)=3&($E(SDCL,1,3)="LAB")) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDCL_" SCHEDULED:  "_DOW_"  "_$J(SDDAT,12)_"  "_$J(SDT0,5)_$C(13,10)
"RTN","SDEC40",175,0)
 I ($L(SDCL)=4&($E(SDCL,1,4)="XRAY")) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDCL_" SCHEDULED:  "_DOW_"  "_$J(SDDAT,12)_"  "_$J(SDT0,5)_$C(13,10)
"RTN","SDEC40",176,0)
 I ($L(SDCL)=3&($E(SDCL,1,3)="EKG")) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDCL_" SCHEDULED:  "_DOW_"  "_$J(SDDAT,12)_"  "_$J(SDT0,5)_$C(13,10)
"RTN","SDEC40",177,0)
 Q
"RTN","SDEC44")
0^63^B8409964^n/a
"RTN","SDEC44",1,0)
SDEC44 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC44",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC44",3,0)
 ;
"RTN","SDEC44",4,0)
 Q
"RTN","SDEC44",5,0)
 ;
"RTN","SDEC44",6,0)
 ; Get primary provider for a visit
"RTN","SDEC44",7,0)
 ;  VIEN = Visit IEN
"RTN","SDEC44",8,0)
 ;  Returns Provider IEN ^ Provider Name ^ V Provider IEN
"RTN","SDEC44",9,0)
PRIPRV(VIEN) ;EP
"RTN","SDEC44",10,0)
 N X,Y,RET
"RTN","SDEC44",11,0)
 Q:'VIEN $$ERR("Invalid visit IEN.")
"RTN","SDEC44",12,0)
 S X=0,RET=""
"RTN","SDEC44",13,0)
 F  S X=$O(^AUPNVPRV("AD",VIEN,X)) Q:'X  D  Q:RET>0
"RTN","SDEC44",14,0)
 .S Y=$G(^AUPNVPRV(X,0))
"RTN","SDEC44",15,0)
 .S:$P(Y,U,4)="P" RET=$P(Y,U)_U_$P($G(^VA(200,+Y,0)),U)_U_X
"RTN","SDEC44",16,0)
 Q RET
"RTN","SDEC44",17,0)
 ;
"RTN","SDEC44",18,0)
 ; Set primary provider
"RTN","SDEC44",19,0)
 ;  INP = Visit IEN [1] ^ Patient IEN [2] ^ Provider IEN [3] ^ Primary/Secondary (P/S) [4] ^
"RTN","SDEC44",20,0)
 ;        Force Conversion to Primary (Y/N) [5]
"RTN","SDEC44",21,0)
SETVPRV(RET,INP) ;
"RTN","SDEC44",22,0)
 N X,VIEN,VPRV,DFN,PRV,PRI,FORCE,PRIPRV,IENS,FDA,FNUM
"RTN","SDEC44",23,0)
 S RET="",FNUM=$$FNUM
"RTN","SDEC44",24,0)
 S VIEN=+INP
"RTN","SDEC44",25,0)
 S DFN=$P(INP,U,2)
"RTN","SDEC44",26,0)
 S RET=$$CHKVISIT^SDECUTL(VIEN,DFN)
"RTN","SDEC44",27,0)
 Q:RET
"RTN","SDEC44",28,0)
 S PRV=$P(INP,U,3)
"RTN","SDEC44",29,0)
 S PRI=$P(INP,U,4)
"RTN","SDEC44",30,0)
 S:'$L(PRI) PRI="S"
"RTN","SDEC44",31,0)
 S FORCE=$P(INP,U,5)
"RTN","SDEC44",32,0)
 S FORCE=FORCE!(FORCE="Y")
"RTN","SDEC44",33,0)
 S PRIPRV=$$PRIPRV(VIEN)
"RTN","SDEC44",34,0)
 I PRIPRV>0,PRI="P",+PRIPRV'=PRV D  Q:RET
"RTN","SDEC44",35,0)
 .I FORCE S FDA(FNUM,$P(PRIPRV,U,3)_",",.04)="S"
"RTN","SDEC44",36,0)
 .E  S RET=$$ERR("SDEC44",$P(PRIPRV,U,2))
"RTN","SDEC44",37,0)
 S (X,VPRV)=0
"RTN","SDEC44",38,0)
 F  S X=$O(^AUPNVPRV("AD",VIEN,X)) Q:'X  D  Q:VPRV
"RTN","SDEC44",39,0)
 .S:$P($G(^AUPNVPRV(X,0)),U)=PRV VPRV=X
"RTN","SDEC44",40,0)
 S IENS=$S(VPRV:VPRV_",",1:"+1,")
"RTN","SDEC44",41,0)
 S FDA=$NA(FDA(FNUM,IENS))
"RTN","SDEC44",42,0)
 S @FDA@(.01)=PRV
"RTN","SDEC44",43,0)
 S @FDA@(.02)=DFN
"RTN","SDEC44",44,0)
 S @FDA@(.03)=VIEN
"RTN","SDEC44",45,0)
 S @FDA@(.04)=PRI
"RTN","SDEC44",46,0)
 S RET=$$UPDATE^SDECUTL(.FDA)
"RTN","SDEC44",47,0)
 Q
"RTN","SDEC44",48,0)
 ; Return V File #
"RTN","SDEC44",49,0)
FNUM() Q 9000010.06
"RTN","SDEC44",50,0)
 ;
"RTN","SDEC44",51,0)
GETVPRV(BGOY,VPRV)  ;return data from the V PROVIDER file
"RTN","SDEC44",52,0)
 ;GETVPRV(BGOY,VPRV)  external parameter tag is in SDEC
"RTN","SDEC44",53,0)
 ;  .BGOY   = returned pointer to list of V PROVIDER data
"RTN","SDEC44",54,0)
 ;   VPRV    = V PROVIDER code - pointer to ^AUPNVPRV
"RTN","SDEC44",55,0)
 ; called by SDEC GETVPRV
"RTN","SDEC44",56,0)
 N BGOI,BGONOD,BGOVP
"RTN","SDEC44",57,0)
 S BGOI=0
"RTN","SDEC44",58,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC44",59,0)
 S BGOY="^TMP(""SDEC""_$J_"")"""
"RTN","SDEC44",60,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC44",61,0)
 ;check for valid V PROVIDER
"RTN","SDEC44",62,0)
 I '+VPRV D ERR("SDEC44: Invalid V Provider ID") Q
"RTN","SDEC44",63,0)
 I '$D(^AUPNVPRV(VPRV,0)) D ERR("SDEC44: Invalid V Provider ID") Q
"RTN","SDEC44",64,0)
 S BGONOD=^AUPNVPRV(VPRV,0)
"RTN","SDEC44",65,0)
 ;                        1                    2                  3                  4           5
"RTN","SDEC44",66,0)
 S ^TMP("SDEC",$J,0)="I00020V_PROVIDER_IEN^I00020PROVIDER_IEN^I00020PATIENT_NAME^T00030VISIT^T00030PROVIDER_STATUS"_$C(30)
"RTN","SDEC44",67,0)
 S BGOVP=VPRV_U   ; V_PROVIDER_IEN
"RTN","SDEC44",68,0)
 S BGOVP=BGOVP_$P(BGONOD,U,1)_U  ; PROVIDER_IEN
"RTN","SDEC44",69,0)
 S BGOVP=BGOVP_$P(BGONOD,U,2)_U  ; PATIENT_NAME
"RTN","SDEC44",70,0)
 S BGOVP=BGOVP_$P(BGONOD,U,3)_U  ; VISIT
"RTN","SDEC44",71,0)
 S BGOVP=BGOVP_$P(BGONOD,U,5)    ; PROVIDER_STATUS
"RTN","SDEC44",72,0)
 S BGOI=BGOI+1
"RTN","SDEC44",73,0)
 S ^TMP("SDEC",$J,BGOI)=BGOVP
"RTN","SDEC44",74,0)
 S BGOI=BGOI+1
"RTN","SDEC44",75,0)
 S ^TMP("SDEC",$J,BGOI)=$C(30)
"RTN","SDEC44",76,0)
 S BGOI=BGOI+1
"RTN","SDEC44",77,0)
 S ^TMP("SDEC",$J,BGOI)=$C(31)
"RTN","SDEC44",78,0)
 Q
"RTN","SDEC44",79,0)
 ;
"RTN","SDEC44",80,0)
ERROR ;
"RTN","SDEC44",81,0)
 D ERR("Error")
"RTN","SDEC44",82,0)
 Q
"RTN","SDEC44",83,0)
 ;
"RTN","SDEC44",84,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC44",85,0)
 S BGOI=$G(BGOI)+1
"RTN","SDEC44",86,0)
 S ^TMP("SDEC",$J,BGOI)=ERRNO_$C(30)
"RTN","SDEC44",87,0)
 S BGOI=BGOI+1
"RTN","SDEC44",88,0)
 S ^TMP("SDEC",$J,BGOI)=$C(31)
"RTN","SDEC44",89,0)
 Q
"RTN","SDEC45")
0^64^B118776780^n/a
"RTN","SDEC45",1,0)
SDEC45 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC45",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC45",3,0)
 ;
"RTN","SDEC45",4,0)
 Q
"RTN","SDEC45",5,0)
 ;
"RTN","SDEC45",6,0)
CLINSTOP(SDECY) ;CLINIC STOP remote procedure
"RTN","SDEC45",7,0)
 ;CLINSTOP(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",8,0)
 ;return entries from the CLINIC STOP table 40.7
"RTN","SDEC45",9,0)
 N SDECC,SDECI,SDECNOD,SDIEN
"RTN","SDEC45",10,0)
 ;
"RTN","SDEC45",11,0)
 S SDECI=0
"RTN","SDEC45",12,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",13,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",14,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_STOP_IEN^T00020CODE^T00020NAME"_$C(30)
"RTN","SDEC45",15,0)
 S SDECN=""
"RTN","SDEC45",16,0)
 F  S SDECN=$O(^DIC(40.7,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",17,0)
 .S SDECC="" F  S SDECC=$O(^DIC(40.7,"B",SDECN,SDECC)) Q:SDECC=""  D
"RTN","SDEC45",18,0)
 ..S SDECNOD=^DIC(40.7,SDECC,0)
"RTN","SDEC45",19,0)
 ..I $P(SDECNOD,U,3)'="",$P($P(SDECNOD,U,3),".",1)'>$P($$NOW^XLFDT,".",1) Q
"RTN","SDEC45",20,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_$P(SDECNOD,U,2)_U_$P(SDECNOD,U,1)_$C(30)
"RTN","SDEC45",21,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",22,0)
 Q
"RTN","SDEC45",23,0)
 ;
"RTN","SDEC45",24,0)
CANREAS(SDECY,SDECIN) ;return active/inactive entries from the CANCELLATION REASONS file 409.2
"RTN","SDEC45",25,0)
 ;CANREAS(SDECY,SDECIN)  external parameter tag is in SDEC
"RTN","SDEC45",26,0)
 ; INPUT:  SDECIN - (optional) Flag: show inactive  0=active only (default); 1=show active and inactive
"RTN","SDEC45",27,0)
 N SDECC,SDECI,SDECNOD,SDTYPE
"RTN","SDEC45",28,0)
 ;
"RTN","SDEC45",29,0)
 S SDECI=0
"RTN","SDEC45",30,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",31,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",32,0)
 S ^TMP("SDEC",$J,0)="T00020CANCELLATION_REASONS_IEN^T00020NAME^T00030TYPE"_$C(30)
"RTN","SDEC45",33,0)
 S:($G(SDECIN)="")!("01"'[$G(SDECIN)) SDECIN=0  ;default to active only
"RTN","SDEC45",34,0)
 S SDECN=""
"RTN","SDEC45",35,0)
 F  S SDECN=$O(^SD(409.2,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",36,0)
 . S SDECC=$O(^SD(409.2,"B",SDECN,""))
"RTN","SDEC45",37,0)
 . S SDECNOD=^SD(409.2,SDECC,0)
"RTN","SDEC45",38,0)
 . I SDECIN!($P($G(SDECNOD),U,4)'=1) D
"RTN","SDEC45",39,0)
 . . S SDTYPE=$S($P(SDECNOD,U,2)="P":"PATIENT",$P(SDECNOD,U,2)="C":"CLINIC",$P(SDECNOD,U,2)="B":"BOTH",1:"")
"RTN","SDEC45",40,0)
 . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_$P(SDECNOD,U,1)_U_SDTYPE_$C(30)
"RTN","SDEC45",41,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",42,0)
 Q
"RTN","SDEC45",43,0)
 ;
"RTN","SDEC45",44,0)
NEWPERS(SDECY,SDCLASS,SDPART,MAXREC,LSUB,INACT) ;return entries from the USR CLASS MEMBERSHIP file that have the 'PROVIDER' USR CLASS
"RTN","SDEC45",45,0)
 ;NEWPERS(SDECY,SDCLASS)  external parameter tag is in SDEC
"RTN","SDEC45",46,0)
 ; INPUT:
"RTN","SDEC45",47,0)
 ;   SDCLASS - (not used) usr class ID pointer to USR CLASS file 8930
"RTN","SDEC45",48,0)
 ;                        default is the 'PROVIDER' USR CLASS
"RTN","SDEC45",49,0)
 ;   SDPART  - (optional) Partial user name
"RTN","SDEC45",50,0)
 ;   MAXREC  - (optional) Max records returned
"RTN","SDEC45",51,0)
 ;   LSUB    - (optional) Last subscripts from previous call
"RTN","SDEC45",52,0)
 ;   INACT   - (optional) inactive flag
"RTN","SDEC45",53,0)
 ;                         0=return only active users that do not have an active PERSON CLASS
"RTN","SDEC45",54,0)
 ;                         1=return active AND inactive users
"RTN","SDEC45",55,0)
 N SDECI,SDECN,SDIEN,SDINACT
"RTN","SDEC45",56,0)
 N SDACT
"RTN","SDEC45",57,0)
 S INACT=$G(INACT)
"RTN","SDEC45",58,0)
 S SDECI=0
"RTN","SDEC45",59,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",60,0)
 K @SDECY
"RTN","SDEC45",61,0)
 S @SDECY@(SDECI)="T00020NEW_PERSON_IEN^T00020NAME^T00030LASTSUB^T00030INACTIVE"_$C(30)
"RTN","SDEC45",62,0)
 S SDPART=$G(SDPART)
"RTN","SDEC45",63,0)
 S MAXREC=$G(MAXREC)
"RTN","SDEC45",64,0)
 S LSUB=$G(LSUB)
"RTN","SDEC45",65,0)
 D NP2
"RTN","SDEC45",66,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",67,0)
 Q
"RTN","SDEC45",68,0)
NP2 ;partial name lookup
"RTN","SDEC45",69,0)
 N SDCLS,SDECC,SDECN,SDECNPS,SDTMP
"RTN","SDEC45",70,0)
 S SDECN=$S($P(LSUB,"|",1)'="":$$GETSUB^SDECU($P(LSUB,"|",1)),SDPART'="":$$GETSUB^SDECU(SDPART),1:"")
"RTN","SDEC45",71,0)
 F  S SDECN=$O(^VA(200,"B",SDECN)) Q:SDECN=""  Q:(SDPART'="")&(SDECN'[SDPART)  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC45",72,0)
 .S SDECC=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2),1:0)
"RTN","SDEC45",73,0)
 .S LSUB=""
"RTN","SDEC45",74,0)
 .F  S SDECC=$O(^VA(200,"B",SDECN,SDECC)) Q:SDECC'>0  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC45",75,0)
 ..I $$PC(SDECC),'INACT D USRDG^SDEC01B(SDECC) Q   ;$$ISTERM^USRLM(SDECC) Q
"RTN","SDEC45",76,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_SDECN_U_SDECN_"|"_SDECC_U_$$PC(SDECC)_$C(30)
"RTN","SDEC45",77,0)
 I (SDECI>0),('MAXREC)!(SDECI<MAXREC) D
"RTN","SDEC45",78,0)
 .S SDTMP=$P(^TMP("SDEC",$J,SDECI),$C(30),1)
"RTN","SDEC45",79,0)
 .S $P(SDTMP,U,3)=""
"RTN","SDEC45",80,0)
 .S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC45",81,0)
 Q
"RTN","SDEC45",82,0)
PC(USR,SDT,EFFDT,EXPDT,SDF) ;is USR active - does USR have an active PERSON CLASS
"RTN","SDEC45",83,0)
 ;PC called from NP2 above and SDEC1A
"RTN","SDEC45",84,0)
 ;  USR - (required) pointer to NEW PERSON file 200
"RTN","SDEC45",85,0)
 ;  SDT - (optional) date in FM format to determine active status; default to 'today'
"RTN","SDEC45",86,0)
 ;  SDF - (optional) flags
"RTN","SDEC45",87,0)
 ;                   1. do not check TERMINATION DATE
"RTN","SDEC45",88,0)
 ;RETURN:
"RTN","SDEC45",89,0)
 ; 0=active; 1=inactive
"RTN","SDEC45",90,0)
 ; .EFFDT - latest effective date
"RTN","SDEC45",91,0)
 ; .EXPDT - latest expiration date; "" if no expiration against current active
"RTN","SDEC45",92,0)
 N RET,SDI,TD,EFF,EXP
"RTN","SDEC45",93,0)
 S SDF=$G(SDF,0)
"RTN","SDEC45",94,0)
 S RET=1
"RTN","SDEC45",95,0)
 I '$E(SDF) S TD=$$GET1^DIQ(200,USR_",",9.2,"I") I TD'="",TD'>DT G:+RET PCX
"RTN","SDEC45",96,0)
 S (EFFDT,EXPDT)=""
"RTN","SDEC45",97,0)
 I $G(USR)="" Q 1
"RTN","SDEC45",98,0)
 S SDT=$G(SDT) I SDT="" S SDT=DT
"RTN","SDEC45",99,0)
 I SDT'?7N Q RET
"RTN","SDEC45",100,0)
 S SDI=0 F  S SDI=$O(^VA(200,USR,"USC1",SDI)) Q:SDI'>0  D  Q:RET=0
"RTN","SDEC45",101,0)
 .S EFF=$P(^VA(200,USR,"USC1",SDI,0),U,2)
"RTN","SDEC45",102,0)
 .S EXP=$P(^VA(200,USR,"USC1",SDI,0),U,3)
"RTN","SDEC45",103,0)
 .I EFF'="",EFF>EFFDT S EFFDT=EFF
"RTN","SDEC45",104,0)
 .I EXP'="",EXP>EXPDT S EXPDT=EXP
"RTN","SDEC45",105,0)
 .I SDT'<EFF,(EXP="")!(SDT<EXP) S RET=0 S EFFDT=EFF S EXPDT=$S(EXP'="":EXP,1:"")
"RTN","SDEC45",106,0)
PCX ;
"RTN","SDEC45",107,0)
 Q RET
"RTN","SDEC45",108,0)
 ;
"RTN","SDEC45",109,0)
 ;S SDIEN=0 F  S SDIEN=$O(^XUSEC("PROVIDER",SDIEN)) Q:SDIEN'>0  D
"RTN","SDEC45",110,0)
 ;.S SDINACT=$$GET1^DIQ(200,SDIEN_",",53.4,"I")
"RTN","SDEC45",111,0)
 ;.I SDINACT'="" S:SDINACT>$$NOW^XLFDT SDINACT=""
"RTN","SDEC45",112,0)
 ;.I SDINACT="" D
"RTN","SDEC45",113,0)
 ;..S SDECN=$$GET1^DIQ(200,SDIEN_",",.01)
"RTN","SDEC45",114,0)
 ;..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDIEN_U_SDECN_$C(30)
"RTN","SDEC45",115,0)
 ;S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",116,0)
 ;Q
"RTN","SDEC45",117,0)
 ;
"RTN","SDEC45",118,0)
 ;Q
"RTN","SDEC45",119,0)
 ;
"RTN","SDEC45",120,0)
ACCTYPE(SDECY) ;return active entries from the SDEC ACCESS TYPE file 409.823
"RTN","SDEC45",121,0)
 ;ACCTYPE(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",122,0)
 ; INPUT:  none
"RTN","SDEC45",123,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",124,0)
 S SDECI=0
"RTN","SDEC45",125,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",126,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",127,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_ACCESS_TYPE_IEN^T00020NAME^T00020INACTIVE^T00020DEPARTMENT_NAME^T00020DISPLAY_COLOR^T00020RED^T00020GREEN^T00020BLUE^T00020PREVENT_ACCESS"_$C(30)
"RTN","SDEC45",128,0)
 S SDECN=""
"RTN","SDEC45",129,0)
 F  S SDECN=$O(^SDEC(409.823,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",130,0)
 . S SDECC=$O(^SDEC(409.823,"B",SDECN,""))
"RTN","SDEC45",131,0)
 . S SDECIN=$$GET1^DIQ(409.823,SDECC_",",.02)
"RTN","SDEC45",132,0)
 . I SDECIN'="YES" D
"RTN","SDEC45",133,0)
 . . S SDECNOD=SDECC_U_$$GET1^DIQ(409.823,SDECC_",",.01)_U_SDECIN
"RTN","SDEC45",134,0)
 . . S SDECNOD=SDECNOD_U_$$GET1^DIQ(409.823,SDECC_",",.03)_U_$$GET1^DIQ(409.823,SDECC_",",.04)_U_$$GET1^DIQ(409.823,SDECC_",",.05)
"RTN","SDEC45",135,0)
 . . S SDECNOD=SDECNOD_U_$$GET1^DIQ(409.823,SDECC_",",.06)_U_$$GET1^DIQ(409.823,SDECC_",",.07)_U_$$GET1^DIQ(409.823,SDECC_",",.08)
"RTN","SDEC45",136,0)
 . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECNOD_$C(30)
"RTN","SDEC45",137,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",138,0)
 Q
"RTN","SDEC45",139,0)
 ;
"RTN","SDEC45",140,0)
ACCGROUP(SDECY) ;return active entries from the SDEC ACCESS GROUP file 409.822
"RTN","SDEC45",141,0)
 ;ACCGROUP(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",142,0)
 ; INPUT:  none
"RTN","SDEC45",143,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",144,0)
 S SDECI=0
"RTN","SDEC45",145,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",146,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",147,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_ACCESS_GROUP_IEN^T00020NAME"_$C(30)
"RTN","SDEC45",148,0)
 S SDECN=""
"RTN","SDEC45",149,0)
 F  S SDECN=$O(^SDEC(409.822,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",150,0)
 . S SDECC=$O(^SDEC(409.822,"B",SDECN,""))
"RTN","SDEC45",151,0)
 . S SDECNOD=SDECC_U_$$GET1^DIQ(409.822,SDECC_",",.01)
"RTN","SDEC45",152,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECNOD_$C(30)
"RTN","SDEC45",153,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",154,0)
 Q
"RTN","SDEC45",155,0)
 ;
"RTN","SDEC45",156,0)
RESUSER(SDECY,SDRES) ;SDEC RESOURCE USER remote procedure returns all entries from the SDEC RESOURCE USER file 409.833
"RTN","SDEC45",157,0)
 ;RESUSER(SDECY,SDRES) external parameter tag is in SDEC
"RTN","SDEC45",158,0)
 ; INPUT:
"RTN","SDEC45",159,0)
 ; SDRES = Resource ID pointer to SDEC RESOURCE file 409.831
"RTN","SDEC45",160,0)
 ;RETURN:
"RTN","SDEC45",161,0)
 ; Returns a Global Array in which each array entry contains data from the SDEC RESOURCE USER file separated by ^:
"RTN","SDEC45",162,0)
 ; 1. SDEC_RESOURCE_USER_IEN
"RTN","SDEC45",163,0)
 ; 2. RESOURCE_NAME
"RTN","SDEC45",164,0)
 ; 3. RESOURCE_ID
"RTN","SDEC45",165,0)
 ; 4. OVERBOOK
"RTN","SDEC45",166,0)
 ; 5. MODIFY_SCHEDULE
"RTN","SDEC45",167,0)
 ; 6. MODIFY_APPTS
"RTN","SDEC45",168,0)
 ; 7. USERNAME
"RTN","SDEC45",169,0)
 ; 8. USER_ID
"RTN","SDEC45",170,0)
 ; 9. MASTEROVERBOOK
"RTN","SDEC45",171,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",172,0)
 S SDECI=0
"RTN","SDEC45",173,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",174,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",175,0)
 ; 1 2 3 4 5
"RTN","SDEC45",176,0)
 S SDECTMP="T00020SDEC_RESOURCE_USER_IEN^T00020RESOURCE_NAME^T00020RESOURCE_ID^T00020OVERBOOK^T00020MODIFY_SCHEDULE^"
"RTN","SDEC45",177,0)
 ; 6 7 8 9
"RTN","SDEC45",178,0)
 S SDECTMP=SDECTMP_"T00020MODIFY_APPTS^T00020USERNAME^T00020USER_ID^T00020MASTEROVERBOOK"_$C(30)
"RTN","SDEC45",179,0)
 S ^TMP("SDEC",$J,0)=SDECTMP
"RTN","SDEC45",180,0)
 S SDRES=$G(SDRES)
"RTN","SDEC45",181,0)
 I SDRES'="",'$D(^SDEC(409.831,+SDRES,0)) S ^TMP("SDEC",$J,1)="-1^Invalid Resource ID." Q
"RTN","SDEC45",182,0)
 I SDRES'="" S SDECC=0 F  S SDECC=$O(^SDEC(409.833,"B",+SDRES,SDECC)) Q:SDECC'>0  D GET1
"RTN","SDEC45",183,0)
 I SDRES="" S SDECC=0 F  S SDECC=$O(^SDEC(409.833,SDECC)) Q:SDECC'>0  D GET1
"RTN","SDEC45",184,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",185,0)
 Q
"RTN","SDEC45",186,0)
GET1 ;
"RTN","SDEC45",187,0)
 N TD
"RTN","SDEC45",188,0)
 S SDECNOD=^SDEC(409.833,SDECC,0)
"RTN","SDEC45",189,0)
 ;Q:$$PC($P(SDECNOD,U,2))
"RTN","SDEC45",190,0)
 S TD=$$GET1^DIQ(200,$P(SDECNOD,U,2)_",",9.2,"I") I TD'="",TD'>DT Q
"RTN","SDEC45",191,0)
 S SDECTMP=SDECC                                           ;1. resource user ID
"RTN","SDEC45",192,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.01)     ;2. resource name
"RTN","SDEC45",193,0)
 S SDECTMP=SDECTMP_U_$P(SDECNOD,U,1)                       ;3. resource ID - pointer to SDEC RESOURCE
"RTN","SDEC45",194,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.03)     ;4. overbook
"RTN","SDEC45",195,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.04)     ;5. modify schedule
"RTN","SDEC45",196,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.05)     ;6. modify appointments
"RTN","SDEC45",197,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.02)     ;7. user name
"RTN","SDEC45",198,0)
 S SDECTMP=SDECTMP_U_$P(SDECNOD,U,2)                       ;8. user ID
"RTN","SDEC45",199,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.06)     ;9. master overbook
"RTN","SDEC45",200,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",201,0)
 Q
"RTN","SDEC45",202,0)
 ;
"RTN","SDEC45",203,0)
HOLIDAY(SDECY,SDECBD) ;return all entries from the HOLIDAY file 40.5
"RTN","SDEC45",204,0)
 ;HOLIDAY(SDECY,SDECBD)  external parameter tag is in SDEC
"RTN","SDEC45",205,0)
 ; INPUT:  SDECBD = begin date in external format (defaults to 'today')
"RTN","SDEC45",206,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP,%DT,X,Y
"RTN","SDEC45",207,0)
 S SDECI=0
"RTN","SDEC45",208,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",209,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",210,0)
 I $G(SDECBD)'=""&(SDECBD'="1/1/0001@00:00") D
"RTN","SDEC45",211,0)
 . S X=$P(SDECBD,"@",1)
"RTN","SDEC45",212,0)
 . S %DT=""
"RTN","SDEC45",213,0)
 . D ^%DT
"RTN","SDEC45",214,0)
 . S SDECBD=Y
"RTN","SDEC45",215,0)
 I SDECBD=-1 D ERR("SDEC45: Invalid date specified.") Q
"RTN","SDEC45",216,0)
 I $G(SDECBD)="" S SDECBD=$$DT^XLFDT()      ;default to 'today'
"RTN","SDEC45",217,0)
 I $$FR^XLFDT(SDECBD) S SDECBD=$$DT^XLFDT() ;check if date in valid range
"RTN","SDEC45",218,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_HOLIDAY_DATE^T00020HOLIDAY_NAME"_$C(30)
"RTN","SDEC45",219,0)
 S SDECN=SDECBD-1
"RTN","SDEC45",220,0)
 F  S SDECN=$O(^HOLIDAY("B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",221,0)
 . S SDECC=$O(^HOLIDAY("B",SDECN,""))
"RTN","SDEC45",222,0)
 . S SDECTMP=$$FMTE^XLFDT($P(^HOLIDAY(SDECC,0),"^",1),5)  ;holiday date
"RTN","SDEC45",223,0)
 . S SDECTMP=SDECTMP_U_$$GET1^DIQ(40.5,SDECC_",",2)       ;holiday name
"RTN","SDEC45",224,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",225,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",226,0)
 Q
"RTN","SDEC45",227,0)
 ;
"RTN","SDEC45",228,0)
CLINPROV(SDECY,SDECCL) ;return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC45",229,0)
 ;CLINPROV(SDECY,SDECCL)  external parameter tag is in SDEC
"RTN","SDEC45",230,0)
 ; INPUT:  SDECCL = Clinic (Hospital Location) IEN from file 44 ^SC
"RTN","SDEC45",231,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP
"RTN","SDEC45",232,0)
 S SDECI=0
"RTN","SDEC45",233,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",234,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",235,0)
 ;check inputs
"RTN","SDEC45",236,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC45",237,0)
 I $G(SDECCL)="" D ERR("SDEC45: Clinic not specified.") Q
"RTN","SDEC45",238,0)
 I '$D(^SC(SDECCL)) D ERR("SDEC45: Invalid clinic specified.") Q
"RTN","SDEC45",239,0)
 S ^TMP("SDEC",$J,0)="T00020PROVIDER_IEN^T00020PROVIDER_NAME^T00030DEFAULT"_$C(30)
"RTN","SDEC45",240,0)
 S SDECC=0
"RTN","SDEC45",241,0)
 F  S SDECC=$O(^SC(SDECCL,"PR",SDECC)) Q:SDECC'>0  D
"RTN","SDEC45",242,0)
 . S SDECNOD=^SC(SDECCL,"PR",SDECC,0)
"RTN","SDEC45",243,0)
 . S SDECTMP=$P(SDECNOD,U,1)                            ;provider IEN
"RTN","SDEC45",244,0)
 . D RESPRV1^SDEC01B(SDECTMP,SDECCL)
"RTN","SDEC45",245,0)
 . S $P(SDECTMP,U,2)=$$GET1^DIQ(200,SDECTMP_",",.01)    ;provider name
"RTN","SDEC45",246,0)
 . S $P(SDECTMP,U,3)=$S($P(SDECNOD,U,2)=1:"YES",1:"NO") ;default provider
"RTN","SDEC45",247,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",248,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",249,0)
 Q
"RTN","SDEC45",250,0)
 ;
"RTN","SDEC45",251,0)
PROVALL(SDECY,SDECCL) ;return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC45",252,0)
 ;PROVALL(SDECY,SDECCL)  external parameter tag is in SDEC
"RTN","SDEC45",253,0)
 ; INPUT:  SDECCL = Clinic (Hospital Location) IEN from file 44 ^SC
"RTN","SDEC45",254,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP,SDECARRI,SDECCL,SDECARRN,SDECPRNM,SDECIEN
"RTN","SDEC45",255,0)
 S SDECI=0
"RTN","SDEC45",256,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",257,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",258,0)
 ;check inputs
"RTN","SDEC45",259,0)
 S ^TMP("SDEC",$J,0)="T00020PROVIDER_IEN^T00030PROVIDER_NAME"_$C(30)
"RTN","SDEC45",260,0)
 S SDECCL=0
"RTN","SDEC45",261,0)
 F  S SDECCL=$O(^SC(SDECCL)) Q:'SDECCL  D
"RTN","SDEC45",262,0)
 . S SDECC=0
"RTN","SDEC45",263,0)
 . F  S SDECC=$O(^SC(SDECCL,"PR",SDECC)) Q:SDECC'>0  D
"RTN","SDEC45",264,0)
 . . S SDECNOD=^SC(SDECCL,"PR",SDECC,0)
"RTN","SDEC45",265,0)
 . . S SDECTMP=$P(SDECNOD,U,1)                           ;provider IEN
"RTN","SDEC45",266,0)
 . . D RESPRV1^SDEC01B(SDECTMP,SDECCL)
"RTN","SDEC45",267,0)
 . . S SDECARRI(SDECTMP)="" ; Save array of Provider IENs
"RTN","SDEC45",268,0)
 S SDECTMP="" F  S SDECTMP=$O(SDECARRI(SDECTMP)) Q:SDECTMP=""  D
"RTN","SDEC45",269,0)
 . S SDECPRNM=$$GET1^DIQ(200,SDECTMP_",",.01)
"RTN","SDEC45",270,0)
 . S:SDECPRNM'="" SDECARRN(SDECPRNM)=SDECTMP
"RTN","SDEC45",271,0)
 S SDECPRNM="" F  S SDECPRNM=$O(SDECARRN(SDECPRNM)) Q:SDECPRNM=""  D
"RTN","SDEC45",272,0)
 . S SDECIEN=SDECARRN(SDECPRNM)
"RTN","SDEC45",273,0)
 . S SDECI=SDECI+1
"RTN","SDEC45",274,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECPRNM_$C(30)
"RTN","SDEC45",275,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",276,0)
 Q
"RTN","SDEC45",277,0)
 ;
"RTN","SDEC45",278,0)
PROVCLIN(SDECY,SDECPRV) ;PROVIDER CLINICS remote procedure
"RTN","SDEC45",279,0)
 ;PROVCLIN(SDECY,SDECPRV)  external parameter tag is in SDEC
"RTN","SDEC45",280,0)
 ; return all clinics for a given provider from the NEW PERSON file 200
"RTN","SDEC45",281,0)
 ; INPUT:  SDECPRV = Provider (NEW PERSON) IEN from file 200
"RTN","SDEC45",282,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP
"RTN","SDEC45",283,0)
 S SDECI=0
"RTN","SDEC45",284,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",285,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",286,0)
 ;check inputs
"RTN","SDEC45",287,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC45",288,0)
 I $G(SDECPRV)="" D ERR("SDEC45: Provider not specified.") Q
"RTN","SDEC45",289,0)
 I '$D(^VA(200,SDECPRV)) D ERR("SDEC45: Invalid provider specified.") Q
"RTN","SDEC45",290,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_IEN^T00020CLINIC_NAME"_$C(30)
"RTN","SDEC45",291,0)
 D CLINICS
"RTN","SDEC45",292,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",293,0)
 Q
"RTN","SDEC45",294,0)
 ;
"RTN","SDEC45",295,0)
CLINICS ; -- sets ^TMP for provider's clinics
"RTN","SDEC45",296,0)
 NEW CLN,IEN,NAME
"RTN","SDEC45",297,0)
 S CLN=0 F  S CLN=$O(^SC("AVADPR",SDECPRV,CLN)) Q:'CLN  D
"RTN","SDEC45",298,0)
 . S IEN=0 F  S IEN=$O(^SC("AVADPR",SDECPRV,CLN,IEN)) Q:'IEN  D
"RTN","SDEC45",299,0)
 .. ;I ^SC("AVADPR",SDECPRV,CLN,IEN)'=1 Q   ;not default provider
"RTN","SDEC45",300,0)
 .. Q:$$GET1^DIQ(44,CLN_",",50.01,"I")=1   ;OOS?
"RTN","SDEC45",301,0)
 .. D RESPRV1^SDEC01B(SDECPRV,IEN)
"RTN","SDEC45",302,0)
 .. S NAME=$$GET1^DIQ(44,CLN,.01)
"RTN","SDEC45",303,0)
 .. S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=CLN_U_NAME_$C(30)
"RTN","SDEC45",304,0)
 Q
"RTN","SDEC45",305,0)
 ;
"RTN","SDEC45",306,0)
HIDE(SDECY) ; --- Returns list of clinics that are Hidden
"RTN","SDEC45",307,0)
 N IEN,NAME,SDECI
"RTN","SDEC45",308,0)
 S SDECI=0
"RTN","SDEC45",309,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",310,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",311,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_IEN^T00020CLINIC_NAME"_$C(30,31)
"RTN","SDEC45",312,0)
 Q
"RTN","SDEC45",313,0)
ERROR ;
"RTN","SDEC45",314,0)
 D ERR("VISTA Error")
"RTN","SDEC45",315,0)
 Q
"RTN","SDEC45",316,0)
 ;
"RTN","SDEC45",317,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC45",318,0)
 S SDECI=SDECI+1
"RTN","SDEC45",319,0)
 S ^TMP("SDEC",$J,SDECI)=ERRNO_$C(30,31)
"RTN","SDEC45",320,0)
 Q
"RTN","SDEC46")
0^65^B11804599^n/a
"RTN","SDEC46",1,0)
SDEC46 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC46",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC46",3,0)
 ;
"RTN","SDEC46",4,0)
 Q
"RTN","SDEC46",5,0)
 ;
"RTN","SDEC46",6,0)
CURFACG(SDECY,SDECDUZ) ;get current division/facility for given user
"RTN","SDEC46",7,0)
 ;CURFACG(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC46",8,0)
 ; SDECDUZ = user IEN from the NEW PERSON file 200
"RTN","SDEC46",9,0)
 ; returns the Current Division/Facility for the given user
"RTN","SDEC46",10,0)
 N SDECCD,SDECI,SDECSUB
"RTN","SDEC46",11,0)
 S SDECI=0
"RTN","SDEC46",12,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",13,0)
 K @SDECY
"RTN","SDEC46",14,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID"_$C(30)
"RTN","SDEC46",15,0)
 ;check if valid user
"RTN","SDEC46",16,0)
 I $G(SDECDUZ)="" D ERR("0^SDEC46: User not specified.") Q
"RTN","SDEC46",17,0)
 I '$D(^VA(200,SDECDUZ)) D ERR("0^SDEC46: Invalid user specified.") Q
"RTN","SDEC46",18,0)
 S ^TMP("SDEC",$J,0)="T00020CURRENT_DIV"_$C(30)
"RTN","SDEC46",19,0)
 S SDECSUB="^VA(200,"_SDECDUZ_",""2"","
"RTN","SDEC46",20,0)
 S SDECCD=$G(^DISV(SDECDUZ,SDECSUB))
"RTN","SDEC46",21,0)
 I SDECCD'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECCD_$C(30)
"RTN","SDEC46",22,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",23,0)
 Q
"RTN","SDEC46",24,0)
 ;
"RTN","SDEC46",25,0)
GETFAC(SDECY,SDECDUZ) ;Gets all facilities for a user
"RTN","SDEC46",26,0)
 ;GETFAC(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC46",27,0)
 ; Input SDECDUZ - (required) user IEN from the NEW PERSON file 200
"RTN","SDEC46",28,0)
 ; Returns:
"RTN","SDEC46",29,0)
 ;Global Array in which each array entry
"RTN","SDEC46",30,0)
 ;contains the following ^ pieces:
"RTN","SDEC46",31,0)
 ;    DIV_IEN  = institution Id pointer to the INSTITUTION file 4
"RTN","SDEC46",32,0)
 ;               NOTE field in file 200 uses the term DIVISION but the
"RTN","SDEC46",33,0)
 ;               field points to the INSTITUTION file.
"RTN","SDEC46",34,0)
 ;    DIV_NAME = institution NAME from the INSTITUTION file
"RTN","SDEC46",35,0)
 ;    DEFAULT  = Is default division/facility?
"RTN","SDEC46",36,0)
 ;               Value can be 'YES' or 'NO'
"RTN","SDEC46",37,0)
 ;    TZ_CODE  = CODE from the MAILMAN TIME ZONE file 4.4
"RTN","SDEC46",38,0)
 ;    TZ_NAME  = TIME ZONE NAME from the MAILMAN TIME ZONE file
"RTN","SDEC46",39,0)
 ;    TZ_DIFF  = DIFFERENTIAL from the MAILMAN TIME ZONE file
"RTN","SDEC46",40,0)
 N SDECFN,SDECI,SDECN,SDECNOD,SDTMP,SDTZ,SDTZN
"RTN","SDEC46",41,0)
 S SDECI=0
"RTN","SDEC46",42,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",43,0)
 K @SDECY
"RTN","SDEC46",44,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID"_$C(30)
"RTN","SDEC46",45,0)
 ;check if valid user
"RTN","SDEC46",46,0)
 I $G(SDECDUZ)="" D ERR("0^SDEC46: User not specified.") Q
"RTN","SDEC46",47,0)
 I '$D(^VA(200,+SDECDUZ)) D ERR("0^SDEC46: Invalid user specified.") Q
"RTN","SDEC46",48,0)
 S ^TMP("SDEC",$J,0)="T00020DIV_IEN^T00020DIV_NAME^T00020DEFAULT^T00030TZ_CODE^T00030TZ_NAME^T00030TZ_DIFF"_$C(30)
"RTN","SDEC46",49,0)
 S SDTZ=$$GET1^DIQ(4.3,"1,",1,"I")
"RTN","SDEC46",50,0)
 S SDTZN=$G(^XMB(4.4,SDTZ,0))
"RTN","SDEC46",51,0)
 S SDECFN=0
"RTN","SDEC46",52,0)
 F  S SDECFN=$O(^VA(200,+SDECDUZ,2,SDECFN)) Q:SDECFN'>0  D
"RTN","SDEC46",53,0)
 . S SDECNOD=$G(^VA(200,+SDECDUZ,2,SDECFN,0))
"RTN","SDEC46",54,0)
 . S SDTMP=SDECFN_U_$P(^DIC(4,SDECFN,0),U,1)_U_$S($P(SDECNOD,U,2)=1:"YES",1:"NO")
"RTN","SDEC46",55,0)
 . S SDTMP=SDTMP_U_$P(SDTZN,U,1)_U_$P(SDTZN,U,2)_U_$P(SDTZN,U,3)
"RTN","SDEC46",56,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC46",57,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",58,0)
 Q
"RTN","SDEC46",59,0)
 ;
"RTN","SDEC46",60,0)
SETFAC(SDECY,SDECDUZ,SDECFAC) ;SET FACILITY
"RTN","SDEC46",61,0)
 ;SETFAC(SDECY,SDECDUZ,SDECFAC)  external parameter tag is in SDEC
"RTN","SDEC46",62,0)
 ; SDECDUZ = user IEN - pointer to the NEW PERSON file 200
"RTN","SDEC46",63,0)
 ; SDECFAC = facility/division to set - pointer to the INSTITUTE file 4
"RTN","SDEC46",64,0)
 ;Returns ERROR_ID^ERROR_TEXT
"RTN","SDEC46",65,0)
 ;   where ERROR_ID = 1 if successful; 0 if failed
"RTN","SDEC46",66,0)
 ;Fails if SDECFAC is not one of the current user's divisions
"RTN","SDEC46",67,0)
 N SDECI,SDECSUB
"RTN","SDEC46",68,0)
 S SDECI=0
"RTN","SDEC46",69,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",70,0)
 K @SDECY
"RTN","SDEC46",71,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID^T00020ERROR_TEXT"_$C(30)
"RTN","SDEC46",72,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC46",73,0)
 I '+SDECFAC S SDECI=SDECI+1 S ^TMP("SDEC",$J,1)=0_U_"Division not specified."_$C(30) S SDECI=SDECI+1 S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC46",74,0)
 I '$D(^VA(200,SDECDUZ,2,+SDECFAC)) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=0_U_"Invalid division specified."_$C(30) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31) Q
"RTN","SDEC46",75,0)
 S SDECSUB="^VA(200,"_SDECDUZ_",""2"","
"RTN","SDEC46",76,0)
 S ^DISV(SDECDUZ,SDECSUB)=SDECFAC
"RTN","SDEC46",77,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=1_U_""_$C(30)
"RTN","SDEC46",78,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31) Q
"RTN","SDEC46",79,0)
 Q
"RTN","SDEC46",80,0)
 ;
"RTN","SDEC46",81,0)
ERROR ;
"RTN","SDEC46",82,0)
 D ERR("Error")
"RTN","SDEC46",83,0)
 Q
"RTN","SDEC46",84,0)
 ;
"RTN","SDEC46",85,0)
ERR(ERRTXT) ;Error processing
"RTN","SDEC46",86,0)
 S:'$D(SDECI) SDECI=999
"RTN","SDEC46",87,0)
 S ERRTXT=$G(ERRTXT)
"RTN","SDEC46",88,0)
 S SDECI=SDECI+1
"RTN","SDEC46",89,0)
 S ^TMP("SDEC",$J,SDECI)=ERRTXT_$C(30)
"RTN","SDEC46",90,0)
 S SDECI=SDECI+1
"RTN","SDEC46",91,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",92,0)
 Q
"RTN","SDEC47")
0^66^B35928564^n/a
"RTN","SDEC47",1,0)
SDEC47 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC47",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC47",3,0)
 ;
"RTN","SDEC47",4,0)
 Q
"RTN","SDEC47",5,0)
 ;
"RTN","SDEC47",6,0)
CLINDIS(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;Return formatted text output of the Clinic Schedules Report
"RTN","SDEC47",7,0)
 ;CLINDIS(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI)  external parameter tag is in SDEC
"RTN","SDEC47",8,0)
 ;Return formatted text output of the Clinic Schedules Report
"RTN","SDEC47",9,0)
 ;between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"RTN","SDEC47",10,0)
 ;SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece is null, so discard it.)
"RTN","SDEC47",11,0)
 ;SDECBEG and SDECEND are in external date form.
"RTN","SDEC47",12,0)
 ;SDECWI = return only appointments where the WALKIN field is yes
"RTN","SDEC47",13,0)
 ;
"RTN","SDEC47",14,0)
 N SDECI,SDECNOD,SDECNAM,SDECDOB,SDECHRN,SDECSEX,SDECCID,SDECCNOD,SDECDT
"RTN","SDEC47",15,0)
 N SDECJ,SDECAID,SDECPAT,SDECPNOD,SDECCLN,SDECCLRK,SDECMADE,SDECNOT,SDECLIN
"RTN","SDEC47",16,0)
 N SDECSTRT,SDECAPT,SDECQ,SDECTMP,SDECTYPE
"RTN","SDEC47",17,0)
 N SDECSTRE,SDECCITY,SDECST,SDECZIP,SDECPHON,%DT,X,Y
"RTN","SDEC47",18,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC47",19,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC47",20,0)
 S SDECI=0
"RTN","SDEC47",21,0)
 S ^TMP("SDEC",$J,SDECI)="T00080TEXT"_$C(30)
"RTN","SDEC47",22,0)
 ;
"RTN","SDEC47",23,0)
 ;Convert beginning and ending dates
"RTN","SDEC47",24,0)
 ;
"RTN","SDEC47",25,0)
 S SDECBEG=$P(SDECBEG,"@",1)
"RTN","SDEC47",26,0)
 S X=SDECBEG,%DT="X" D ^%DT S SDECBEG=$P(Y,"."),SDECBEG=SDECBEG-1,SDECBEG=SDECBEG_".9999"
"RTN","SDEC47",27,0)
 I Y=-1 D ERR("0^Routine: SDEC47, Error: Invalid Date") Q
"RTN","SDEC47",28,0)
 S SDECEND=$P(SDECEND,"@",1)
"RTN","SDEC47",29,0)
 S X=SDECEND,%DT="X" D ^%DT S SDECEND=$P(Y,"."),SDECEND=SDECEND_".9999"
"RTN","SDEC47",30,0)
 I Y=-1 D ERR("0^Routine: SDEC47, Error: Invalid Date") Q
"RTN","SDEC47",31,0)
 I SDECCLST="" D ERR("0^Routine: SDEC47, Error: Null clinic list") Q
"RTN","SDEC47",32,0)
 ;
"RTN","SDEC47",33,0)
 ;header
"RTN","SDEC47",34,0)
 ;                                     1                18          30      38          50             66            79
"RTN","SDEC47",35,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="Name             DOB         Sex     HRN         Clinic"_$C(30)
"RTN","SDEC47",36,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="====             ===         ===     ===         ======"_$C(30)
"RTN","SDEC47",37,0)
 ;For each clinic in SDECCLST $O through ^SDEC(409.84,"ARSRC",ResourceIEN,FMDate,ApptIEN)
"RTN","SDEC47",38,0)
 F SDECJ=1:1:$L(SDECCLST,"|")-1 S SDECCID=$P(SDECCLST,"|",SDECJ) D
"RTN","SDEC47",39,0)
 . S SDECCLN=$G(^SDEC(409.831,SDECCID,0)) S SDECCLN=$P(SDECCLN,U) Q:SDECCLN=""
"RTN","SDEC47",40,0)
 . S SDECSTRT=SDECBEG F  S SDECSTRT=$O(^SDEC(409.84,"ARSRC",SDECCID,SDECSTRT)) Q:'+SDECSTRT  Q:SDECSTRT>SDECEND  D
"RTN","SDEC47",41,0)
 . . S SDECAID=0 F  S SDECAID=$O(^SDEC(409.84,"ARSRC",SDECCID,SDECSTRT,SDECAID)) Q:'+SDECAID  D
"RTN","SDEC47",42,0)
 . . . S SDECNOD=$G(^SDEC(409.84,SDECAID,0))
"RTN","SDEC47",43,0)
 . . . Q:SDECNOD=""
"RTN","SDEC47",44,0)
 . . . Q:$P(SDECNOD,U,12)]""  ;CANCELLED
"RTN","SDEC47",45,0)
 . . . I '$G(SDECWI),$P(SDECNOD,U,13)="y" Q  ;DO NOT ALLOW WALKIN
"RTN","SDEC47",46,0)
 . . . I $G(SDECWI),$P(SDECNOD,U,13)'="y" Q  ;ONLY ALLOW WALKIN
"RTN","SDEC47",47,0)
 . . . S Y=$P(SDECNOD,U)
"RTN","SDEC47",48,0)
 . . . Q:'+Y
"RTN","SDEC47",49,0)
 . . . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC47",50,0)
 . . . S SDECAPT=Y ;Appointment date time
"RTN","SDEC47",51,0)
 . . . ;
"RTN","SDEC47",52,0)
 . . . ;NOTE
"RTN","SDEC47",53,0)
 . . . S SDECNOT=""
"RTN","SDEC47",54,0)
 . . . I $D(^SDEC(409.84,SDECAID,1,0)) S SDECQ=0 F  S SDECQ=$O(^SDEC(409.84,SDECAID,1,SDECQ)) Q:'+SDECQ  D
"RTN","SDEC47",55,0)
 . . . . S SDECLIN=$G(^SDEC(409.84,SDECAID,1,SDECQ,0))
"RTN","SDEC47",56,0)
 . . . . S:(SDECLIN'="")&($E(SDECLIN,$L(SDECLIN)-1,$L(SDECLIN))'=" ") SDECLIN=SDECLIN_" "
"RTN","SDEC47",57,0)
 . . . . S SDECNOT=SDECNOT_SDECLIN
"RTN","SDEC47",58,0)
 . . . ;
"RTN","SDEC47",59,0)
 . . . S SDECPAT=$P(SDECNOD,U,5)
"RTN","SDEC47",60,0)
 . . . S SDECPNOD=$$PATINFO^SDEC27(SDECPAT)
"RTN","SDEC47",61,0)
 . . . S SDECNAM=$P(SDECPNOD,U) ;NAME
"RTN","SDEC47",62,0)
 . . . S SDECSEX=$P(SDECPNOD,U,2) ;SEX
"RTN","SDEC47",63,0)
 . . . S SDECDOB=$P(SDECPNOD,U,3) ;DOB
"RTN","SDEC47",64,0)
 . . . S SDECHRN=$P(SDECPNOD,U,4) ;Health Record Number for location DUZ(2)
"RTN","SDEC47",65,0)
 . . . S SDECSTRE=$P(SDECPNOD,U,5) ;Street
"RTN","SDEC47",66,0)
 . . . S SDECCITY=$P(SDECPNOD,U,6) ;City
"RTN","SDEC47",67,0)
 . . . S SDECST=$P(SDECPNOD,U,7) ;State
"RTN","SDEC47",68,0)
 . . . S SDECZIP=$P(SDECPNOD,U,8) ;zip
"RTN","SDEC47",69,0)
 . . . S SDECPHON=$P(SDECPNOD,U,9) ;homephone
"RTN","SDEC47",70,0)
 . . . S SDECTYPE="" ;Type/status doesn't exist for SDEC APPT clinics and it's not needed for clinic letters
"RTN","SDEC47",71,0)
 . . . S SDECCLRK=$P(SDECNOD,U,8)
"RTN","SDEC47",72,0)
 . . . S:+SDECCLRK SDECCLRK=$G(^VA(200,SDECCLRK,0)),SDECCLRK=$P(SDECCLRK,U)
"RTN","SDEC47",73,0)
 . . . S Y=$P(SDECNOD,U,9)
"RTN","SDEC47",74,0)
 . . . I +Y X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC47",75,0)
 . . . S SDECMADE=Y
"RTN","SDEC47",76,0)
 . . . S SDECTMP=$E(SDECNAM,1,15)
"RTN","SDEC47",77,0)
 . . . S SDECTMP=SDECTMP_$$FILL^SDECU(17-$L(SDECTMP))_SDECDOB
"RTN","SDEC47",78,0)
 . . . S SDECTMP=SDECTMP_$$FILL^SDECU(29-$L(SDECTMP))_SDECSEX
"RTN","SDEC47",79,0)
 . . . S SDECTMP=SDECTMP_$$FILL^SDECU(37-$L(SDECTMP))_SDECHRN
"RTN","SDEC47",80,0)
 . . . S SDECTMP=SDECTMP_$$FILL^SDECU(49-$L(SDECTMP))_$E(SDECCLN,1,15)
"RTN","SDEC47",81,0)
 . . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC47",82,0)
 . . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="APPOINTMENT DATE: "_SDECAPT_$C(30)
"RTN","SDEC47",83,0)
 . . . S SDECTMP="APPT MADE BY:     "_$E(SDECCLRK,1,20)
"RTN","SDEC47",84,0)
 . . . S SDECTMP=SDECTMP_$$FILL^SDECU(39-$L(SDECTMP))_"DATE APPT MADE:   "_SDECMADE
"RTN","SDEC47",85,0)
 . . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC47",86,0)
 . . . I SDECSTRE'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="Address: "_SDECSTRE_$C(30)
"RTN","SDEC47",87,0)
 . . . I SDECCITY'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="         "_SDECCITY_", "_SDECST_"  "_SDECZIP_$C(30)
"RTN","SDEC47",88,0)
 . . . I SDECPHON'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="Phone:   "_SDECPHON_$C(30)
"RTN","SDEC47",89,0)
 . . . I SDECNOT'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="NOTE: "_$E(SDECNOT,1,73)_$C(30)
"RTN","SDEC47",90,0)
 . . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=""_$C(30)
"RTN","SDEC47",91,0)
 ;
"RTN","SDEC47",92,0)
 S SDECI=SDECI+1
"RTN","SDEC47",93,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC47",94,0)
 Q
"RTN","SDEC47",95,0)
 ;
"RTN","SDEC47",96,0)
CLINDISW(SDECY,SDECCLST,SDECBEG,SDECEND) ;Return formatted text output of the Clinic Schedules Report for Walkins
"RTN","SDEC47",97,0)
 ;CLINDISW(SDECY,SDECCLST,SDECBEG,SDECEND)  external parameter tag is in SDEC
"RTN","SDEC47",98,0)
 ;Return formatted text output of the Clinic Schedules Report for Walkins
"RTN","SDEC47",99,0)
 ;between dates SDECBEG and SDECEND for each clinic in SDECCLST.
"RTN","SDEC47",100,0)
 ;SDECCLST is a |-delimited list of SDEC RESOURCE iens.  (The last |-piece is null, so discard it.)
"RTN","SDEC47",101,0)
 ;SDECBEG and SDECEND are in external date form.
"RTN","SDEC47",102,0)
 S:$G(U)="" U="^"
"RTN","SDEC47",103,0)
 D CLINDIS(.SDECY,SDECCLST,SDECBEG,SDECEND,1)
"RTN","SDEC47",104,0)
 Q
"RTN","SDEC47",105,0)
 ;
"RTN","SDEC47",106,0)
RESLETRF(SDECY,SDECRES,SDECLT) ;Return formatted text output of the Resource's Letter - either "LETTER TEXT" (also used as Reminder Letter), NO SHOW LETTER, or CLINIC CANCELLATION LETTER.
"RTN","SDEC47",107,0)
 ;RESLETRF(SDECY,SDECRES,SDECLT)  external parameter tag is in SDEC
"RTN","SDEC47",108,0)
 ;Called by SDEC RESOURCE LETTER FORMATTED
"RTN","SDEC47",109,0)
 ;Return formatted text output of the Resource's Letter - either "LETTER TEXT" (also used as Reminder Letter), NO SHOW LETTER, or CLINIC CANCELLATION LETTER.
"RTN","SDEC47",110,0)
 ;SDECRES = Resource IEN from the SDEC RESOURCE file
"RTN","SDEC47",111,0)
 ;SDECLT  = Letter type: "R"=Reminder Letter; "C" or "A"=Clinic Cancellation letter; "N"=No Show Letter
"RTN","SDEC47",112,0)
 ;
"RTN","SDEC47",113,0)
 N SDECH,SDECI,SDECJ,SDECL
"RTN","SDEC47",114,0)
 N SDECNOD,SDECNAM,SDECDOB,SDECHRN,SDECSEX,SDECCID,SDECCNOD,SDECDT
"RTN","SDEC47",115,0)
 N SDECJ,SDECAID,SDECPAT,SDECPNOD,SDECCLN,SDECCLRK,SDECMADE,SDECNOT,SDECLIN
"RTN","SDEC47",116,0)
 N SDECSTRT
"RTN","SDEC47",117,0)
 N SDECSTRE,SDECCITY,SDECST,SDECZIP,SDECPHON
"RTN","SDEC47",118,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC47",119,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC47",120,0)
 S SDECI=0
"RTN","SDEC47",121,0)
 ;check resource
"RTN","SDEC47",122,0)
 I $G(SDECRES)="" D ERR("0^SDEC47: Resource not specified.")
"RTN","SDEC47",123,0)
 I '$D(^SDEC(409.831,SDECRES)) D ERR("0^SDEC47: Invalid Resource specified.")
"RTN","SDEC47",124,0)
 ;check letter type
"RTN","SDEC47",125,0)
 I $G(SDECLT)="" D ERR("0^SDEC47: Letter type not specified.")
"RTN","SDEC47",126,0)
 I "ACNR"'[SDECLT D ERR("0^SDEC47: Invalid letter type specified.")
"RTN","SDEC47",127,0)
 ;return header
"RTN","SDEC47",128,0)
 S ^TMP("SDEC",$J,0)="T00080TEXT"_$c(30)
"RTN","SDEC47",129,0)
 ;
"RTN","SDEC47",130,0)
 ;format body of letter
"RTN","SDEC47",131,0)
 S SDECH=0
"RTN","SDEC47",132,0)
 F  S SDECH=$O(^SDEC(409.831,SDECRES,$S(SDECLT="A":13,SDECLT="C":13,SDECLT="N":12,1:1),SDECH)) Q:SDECH=""  D
"RTN","SDEC47",133,0)
 . S SDECL=$G(^SDEC(409.831,SDECRES,$S(SDECLT="A":13,SDECLT="C":13,SDECLT="N":12,1:1),SDECH,0))
"RTN","SDEC47",134,0)
 . I SDECL'="",$L(SDECL)>79 S SDECL=$$FL^SDECUTL(SDECL,80)
"RTN","SDEC47",135,0)
 . F SDECJ=1:1:$L(SDECL,"||") S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$P(SDECL,"||",SDECJ)_$C(30)
"RTN","SDEC47",136,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC47",137,0)
 Q
"RTN","SDEC47",138,0)
 ;
"RTN","SDEC47",139,0)
ERROR ;
"RTN","SDEC47",140,0)
 D ERR("VISTA Error")
"RTN","SDEC47",141,0)
 Q
"RTN","SDEC47",142,0)
 ;
"RTN","SDEC47",143,0)
ERR(ERRTXT) ;Error processing
"RTN","SDEC47",144,0)
 S:'$D(SDECI) SDECI=999
"RTN","SDEC47",145,0)
 S ERRTXT=$G(ERRTXT)
"RTN","SDEC47",146,0)
 S SDECI=SDECI+1
"RTN","SDEC47",147,0)
 S ^TMP("SDEC",$J,SDECI)=ERRTXT_$C(30)
"RTN","SDEC47",148,0)
 S SDECI=SDECI+1
"RTN","SDEC47",149,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC47",150,0)
 Q
"RTN","SDEC48")
0^67^B25736375^n/a
"RTN","SDEC48",1,0)
SDEC48 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC48",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC48",3,0)
 ;
"RTN","SDEC48",4,0)
 Q
"RTN","SDEC48",5,0)
 ;
"RTN","SDEC48",6,0)
 ;  DAP = return appointment data for given patient - RPC
"RTN","SDEC48",7,0)
 ;
"RTN","SDEC48",8,0)
 ;return formatted appointment data for given patient - RPC
"RTN","SDEC48",9,0)
PATAPPTH(SDECY,DFN) ;return patient's appointment history for given patient - RPC
"RTN","SDEC48",10,0)
 ;PATAPPTH(SDECY,DFN)  external parameter tag is in SDEC
"RTN","SDEC48",11,0)
 ; RPC Name is SDEC PATIENT HISTORY
"RTN","SDEC48",12,0)
 ;  .SDECY   = returned pointer to appointment data
"RTN","SDEC48",13,0)
 ;   DFN = patient code - pointer to ^DPT(DFN)
"RTN","SDEC48",14,0)
 N AMN,AMT,AMU,APN,APT,SDECI,SDECTMP,CIN,CIT,CIU,COE,COF,CON,COT,COU,CRM,CRS
"RTN","SDEC48",15,0)
 N DPTS,DPTSR,NSN,NST,NSU,PAT,PN,RBD,RSD,S,SC,SDCL,SDCLS,SDCLSC,SDW
"RTN","SDEC48",16,0)
 S SDECI=0
"RTN","SDEC48",17,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC48",18,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC48",19,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC48",20,0)
 ;check for valid Patient
"RTN","SDEC48",21,0)
 I '+DFN D ERR^SDECERR("Invalid Patient ID.") Q
"RTN","SDEC48",22,0)
 I '$D(^DPT(DFN,0)) D ERR^SDECERR("Invalid Patient ID.") Q
"RTN","SDEC48",23,0)
 ; data header
"RTN","SDEC48",24,0)
 S ^TMP("SDEC",$J,0)="T00080TEXT"_$C(30)
"RTN","SDEC48",25,0)
 S PN=$$GET1^DIQ(2,DFN_",",.01)
"RTN","SDEC48",26,0)
 S APN=0
"RTN","SDEC48",27,0)
 S SDCLS=""
"RTN","SDEC48",28,0)
 S SDCLSC=""
"RTN","SDEC48",29,0)
 ;loop thru patient appointments
"RTN","SDEC48",30,0)
 S S=0 F  S S=$O(^DPT(DFN,"S",S)) Q:S'>0  D
"RTN","SDEC48",31,0)
 . S DPTS=$G(^DPT(DFN,"S",S,0))
"RTN","SDEC48",32,0)
 . S DPTSR=$G(^DPT(DFN,"S",S,"R"))
"RTN","SDEC48",33,0)
 . S SDCL=$P(DPTS,U)        ;get clinic
"RTN","SDEC48",34,0)
 . S PAT="",SC=0 F  S SC=$O(^SC(SDCL,"S",S,1,SC)) Q:SC'>0  D  Q:PAT=DFN  ;get appt record from clinic
"RTN","SDEC48",35,0)
 . . S SDCLS=$G(^SC(SDCL,"S",S,1,SC,0))
"RTN","SDEC48",36,0)
 . . S SDCLSC=$G(^SC(SDCL,"S",S,1,SC,"C"))
"RTN","SDEC48",37,0)
 . . S PAT=$P(SDCLS,U)
"RTN","SDEC48",38,0)
 . . I PAT=DFN Q
"RTN","SDEC48",39,0)
 . ;
"RTN","SDEC48",40,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="PATIENT NAME: "_PN_$C(30)
"RTN","SDEC48",41,0)
 . ;
"RTN","SDEC48",42,0)
 . S SDECTMP="CLINIC: "_$E($$GET1^DIQ(44,SDCL_",",.01),1,37)
"RTN","SDEC48",43,0)
 . S SDW=$S($D(^DPT(DFN,.1)):^DPT(DFN,.1),1:"Outpatient") ;04 WARD_IEN
"RTN","SDEC48",44,0)
 . S:SDW'="" SDECTMP=SDECTMP_$$FILL^SDECU(39-$L(SDECTMP))_"WARD: "_$S(+SDW:$$GET1^DIQ(42,SDW_",",.01),1:SDW)
"RTN","SDEC48",45,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC48",46,0)
 . S SDECTMP=""
"RTN","SDEC48",47,0)
 . ;
"RTN","SDEC48",48,0)
 . S APT=$TR($$FMTE^XLFDT(S),"@"," ")
"RTN","SDEC48",49,0)
 . S SDECTMP="APPT TIME: "_APT
"RTN","SDEC48",50,0)
 . S APN=APN+1
"RTN","SDEC48",51,0)
 . S SDECTMP=SDECTMP_$$FILL^SDECU(39-$L(SDECTMP))_"APPT NUMBER: "_APN
"RTN","SDEC48",52,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC48",53,0)
 . S SDECTMP=""
"RTN","SDEC48",54,0)
 . ;
"RTN","SDEC48",55,0)
 . S AMT=$P(DPTS,U,19)
"RTN","SDEC48",56,0)
 . S:AMT'="" AMT=$TR($$FMTE^XLFDT(AMT),"@"," ")
"RTN","SDEC48",57,0)
 . S:AMT'="" SDECTMP="APPT MADE TIME: "_AMT
"RTN","SDEC48",58,0)
 . S AMU=$P(DPTS,U,18)
"RTN","SDEC48",59,0)
 . S AMN=$$GET1^DIQ(200,AMU_",",.01)
"RTN","SDEC48",60,0)
 . S:AMN'="" SDECTMP=SDECTMP_$$FILL^SDECU(39-$L(SDECTMP))_"APPT MADE BY: "_AMN
"RTN","SDEC48",61,0)
 . I SDECTMP'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC48",62,0)
 . S SDECTMP=""
"RTN","SDEC48",63,0)
 . ;
"RTN","SDEC48",64,0)
 . S RSD=$P(DPTS,U,13)
"RTN","SDEC48",65,0)
 . S:RSD'="" RSD=$TR($$FMTE^XLFDT(RSD),"@"," ")
"RTN","SDEC48",66,0)
 . I RSD'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="ROUTING SLIP DATE: "_RSD_$C(30)
"RTN","SDEC48",67,0)
 . ;
"RTN","SDEC48",68,0)
 . S CIT=$P(SDCLSC,U)
"RTN","SDEC48",69,0)
 . S:CIT'="" CIT=$TR($$FMTE^XLFDT(CIT),"@"," ")
"RTN","SDEC48",70,0)
 . S:CIT'="" SDECTMP="CHECKIN TIME: "_CIT
"RTN","SDEC48",71,0)
 . S CIU=$P(SDCLSC,U,2)                            ;12 CHECKIN_USER
"RTN","SDEC48",72,0)
 . S CIN=$$GET1^DIQ(200,CIU_",",.01)               ;13 CHECKIN_USER_NAME
"RTN","SDEC48",73,0)
 . S:CIN'="" SDECTMP=SDECTMP_$$FILL^SDECU(39-$L(SDECTMP))_"CHECKED IN BY: "_CIN
"RTN","SDEC48",74,0)
 . I SDECTMP'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC48",75,0)
 . S SDECTMP=""
"RTN","SDEC48",76,0)
 . ;
"RTN","SDEC48",77,0)
 . S COT=$P(SDCLSC,U,3)                            ;14 CHECKOUT_TIME
"RTN","SDEC48",78,0)
 . S:COT'="" COT=$TR($$FMTE^XLFDT(COT),"@"," ")
"RTN","SDEC48",79,0)
 . S:COT'="" SDECTMP="CHECKOUT TIME: "_COT
"RTN","SDEC48",80,0)
 . S COU=$P(SDCLSC,U,4)                            ;15 CHECKOUT_USER
"RTN","SDEC48",81,0)
 . S:COU'="" CON=$$GET1^DIQ(200,COU_",",.01)               ;16 CHECKOUT_USER_NAME
"RTN","SDEC48",82,0)
 . S:$G(CON)'="" SDECTMP=SDECTMP_$$FILL^SDECU(39-$L(SDECTMP))_"CHECKED OUT BY: "_CON
"RTN","SDEC48",83,0)
 . I SDECTMP'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC48",84,0)
 . S SDECTMP=""
"RTN","SDEC48",85,0)
 . S COE=$P(SDCLSC,U,6)                            ;17 CHECKOUT_FILED_TIME
"RTN","SDEC48",86,0)
 . S:COE'="" COE=$TR($$FMTE^XLFDT(COE),"@"," ")
"RTN","SDEC48",87,0)
 . I COE'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="CHECKOUT FILED AT: "_COE
"RTN","SDEC48",88,0)
 . ;
"RTN","SDEC48",89,0)
 . S NST=$P(DPTS,U,14)                             ;18 NO_SHO_CANCEL_TIME
"RTN","SDEC48",90,0)
 . S:NST'="" NST=$TR($$FMTE^XLFDT(NST),"@"," ")
"RTN","SDEC48",91,0)
 . S:NST'="" SDECTMP="NOSHOW CANCEL: "_NST
"RTN","SDEC48",92,0)
 . S NSU=$P(DPTS,U,12)                             ;19 NO_SHO_CANCEL_USER
"RTN","SDEC48",93,0)
 . S:NSU'="" NSN=$$GET1^DIQ(200,NSU_",",.01)               ;20 NO_SHO_CANCEL_USER_NAME
"RTN","SDEC48",94,0)
 . S:$G(NSN)'="" SDECTMP=SDECTMP_$$FILL^SDECU(39-$L(SDECTMP))_"NO SHOW CANCELLED BY: "_$E(NSN,1,17)
"RTN","SDEC48",95,0)
 . I SDECTMP'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC48",96,0)
 . S SDECTMP=""
"RTN","SDEC48",97,0)
 . ;
"RTN","SDEC48",98,0)
 . S COF=$S($P(SDCLSC,U,3)'="":"YES",SDCLSC'="":"NO",1:"") ;21 CHECKED_OUT
"RTN","SDEC48",99,0)
 . I COF'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="CHECKED OUT: "_COF_$C(30)
"RTN","SDEC48",100,0)
 . ;
"RTN","SDEC48",101,0)
 . S RBD=$P(DPTS,U,10)                             ;22 REBOOK_DATE
"RTN","SDEC48",102,0)
 . S:RBD'="" RBD=$TR($$FMTE^XLFDT(RBD),"@"," ")
"RTN","SDEC48",103,0)
 . I RBD'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="REBOOK DATE: "_RBD_$C(30)
"RTN","SDEC48",104,0)
 . ;
"RTN","SDEC48",105,0)
 . S CRS=$P(DPTS,U,15)                             ;23 CANCEL_REASON
"RTN","SDEC48",106,0)
 . I CRS'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="CANCEL REASON: "_$E(CRS,1,63)_$C(30)
"RTN","SDEC48",107,0)
 . ;
"RTN","SDEC48",108,0)
 . S CRM=$P(DPTSR,U)                               ;24 CANCEL_REMARK
"RTN","SDEC48",109,0)
 . I CRM'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)="CANCEL REMARK: "_$E(CRM,1,63)_$C(30)
"RTN","SDEC48",110,0)
 . ;
"RTN","SDEC48",111,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=""_$C(30)
"RTN","SDEC48",112,0)
 ;
"RTN","SDEC48",113,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC48",114,0)
 Q
"RTN","SDEC49")
0^92^B57319976^n/a
"RTN","SDEC49",1,0)
SDEC49 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC49",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC49",3,0)
 ;
"RTN","SDEC49",4,0)
 Q
"RTN","SDEC49",5,0)
 ;
"RTN","SDEC49",6,0)
PREFSET(SDECY,DFN,PREF) ; Set values to SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC49",7,0)
 ;PREFSET(SDECY,DFN,PREF)  external parameter tag is in SDEC
"RTN","SDEC49",8,0)
 ;INPUT:
"RTN","SDEC49",9,0)
 ;  DFN  = (integer) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC49",10,0)
 ;  PREF = List of preference data separated by ^
"RTN","SDEC49",11,0)
 ;         Each ^ piece contains the following Pipe pieces |:
"RTN","SDEC49",12,0)
 ;          1. (required)       Preference text; precede text with @ to delete
"RTN","SDEC49",13,0)
 ;                              use SDEC PREFGETV to get current valid values.
"RTN","SDEC49",14,0)
 ;                              Valid values at this time are:
"RTN","SDEC49",15,0)
 ;                                GENDER SPECIFIC PROVIDER
"RTN","SDEC49",16,0)
 ;                                HEARING IMPAIRED
"RTN","SDEC49",17,0)
 ;                                LANGUAGE PREFERENCE
"RTN","SDEC49",18,0)
 ;                                NEEDS ESCORT
"RTN","SDEC49",19,0)
 ;                                ON STRETCHER
"RTN","SDEC49",20,0)
 ;                                SPECIAL MODE OF TRANSPORTATION
"RTN","SDEC49",21,0)
 ;                                MORNING
"RTN","SDEC49",22,0)
 ;                                AFTERNOON
"RTN","SDEC49",23,0)
 ;                                MONDAY
"RTN","SDEC49",24,0)
 ;                                TUESDAY
"RTN","SDEC49",25,0)
 ;                                WEDNESDAY
"RTN","SDEC49",26,0)
 ;                                THURSDAY
"RTN","SDEC49",27,0)
 ;                                FRIDAY
"RTN","SDEC49",28,0)
 ;          2. (optional)       Date/Time preference added in external format - defaults to NOW (new entry only)
"RTN","SDEC49",29,0)
 ;          3. (optional)       Added by User - Pointer to NEW PERSON file - defaults to Current User (new entry only)
"RTN","SDEC49",30,0)
 ;          4. (optional)       Date/Time Inactivated in external format  default to NOW if active flag set to inactive
"RTN","SDEC49",31,0)
 ;          5. (optional)       Inactivated by user - Pointer to NEW PERSON file default to current user if active flag set to inactive
"RTN","SDEC49",32,0)
 ;          6. (optional )      Remarks single string of text will be converted to word processor format.
"RTN","SDEC49",33,0)
 ;                              @ deletes previous Remark
"RTN","SDEC49",34,0)
 ;          7. (optional)       active flag 0=inactive; 1=active; default to active
"RTN","SDEC49",35,0)
 ;RETURN:
"RTN","SDEC49",36,0)
 ; Successful Return:
"RTN","SDEC49",37,0)
 ;   A single entry in the Global Array in the format "0^<optional msg text>"
"RTN","SDEC49",38,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",39,0)
 ; Caught Exception Return:
"RTN","SDEC49",40,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC49",41,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",42,0)
 ; Unexpected Exception Return:
"RTN","SDEC49",43,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC49",44,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC49",45,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC49",46,0)
 ;     text back to the client.
"RTN","SDEC49",47,0)
 ;
"RTN","SDEC49",48,0)
 N PIEN,PIEN1,SDFDA,SDI,SDIEN,SDACT,SDINOD,SDINOD1,SDMSG,SDPREF,SDQUIT,SDREMARK,X,Y,%DT
"RTN","SDEC49",49,0)
 S SDECI=0
"RTN","SDEC49",50,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC49",51,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC49",52,0)
 ; data header
"RTN","SDEC49",53,0)
 S @SDECY@(0)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC49",54,0)
 ;check for valid Patient
"RTN","SDEC49",55,0)
 I '+DFN D ERR1^SDECERR(1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",56,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",57,0)
 ;check for existing patient entry
"RTN","SDEC49",58,0)
 S PIEN=$O(^SDEC(409.845,"B",DFN,0))
"RTN","SDEC49",59,0)
 ;add new patient entry
"RTN","SDEC49",60,0)
 I 'PIEN D
"RTN","SDEC49",61,0)
 .S SDFDA(409.845,"+1,",.01)=DFN
"RTN","SDEC49",62,0)
 .D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC49",63,0)
 .S PIEN=$G(SDIEN(1))
"RTN","SDEC49",64,0)
 I 'PIEN D ERR1^SDECERR(1,"Error adding patient "_DFN_" to SDEC PREFERENCES AND SPECIAL NEEDS file.",.SDECI,SDECY) Q
"RTN","SDEC49",65,0)
 ;get list of valid preferences
"RTN","SDEC49",66,0)
 D PREF(.SDPREF)   ;SDPREF(<TEXT>)=<CODE>
"RTN","SDEC49",67,0)
 ;add preference data
"RTN","SDEC49",68,0)
 F SDI=1:1:$L(PREF,"^") D
"RTN","SDEC49",69,0)
 .S SDINOD=$P(PREF,"^",SDI)
"RTN","SDEC49",70,0)
 .Q:SDINOD=""
"RTN","SDEC49",71,0)
 .I $E($P(SDINOD,"|",1),1)="@" D  Q
"RTN","SDEC49",72,0)
 ..I $D(SDPREF($P($P(SDINOD,"|",1),"@",2))) D  Q
"RTN","SDEC49",73,0)
 ...;delete this preference if @
"RTN","SDEC49",74,0)
 ...K SDFDA,SDMSG
"RTN","SDEC49",75,0)
 ...S PIEN1=$O(^SDEC(409.845,PIEN,1,"B",SDPREF($P($P(SDINOD,"|",1),"@",2)),0))
"RTN","SDEC49",76,0)
 ...Q:'PIEN1
"RTN","SDEC49",77,0)
 ...S SDFDA=$NA(SDFDA(409.8451,PIEN1_","_PIEN_","))
"RTN","SDEC49",78,0)
 ...S @SDFDA@(.01)="@"
"RTN","SDEC49",79,0)
 ...D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDEC49",80,0)
 .I '$D(SDPREF($P(SDINOD,"|",1))) Q
"RTN","SDEC49",81,0)
 .S PIEN1=$O(^SDEC(409.845,PIEN,1,"B",SDPREF($P(SDINOD,"|",1)),0))
"RTN","SDEC49",82,0)
 .;quit if no changes to this preference
"RTN","SDEC49",83,0)
 .;I PIEN1="",$P(SDINOD,"|",7)'=1 Q
"RTN","SDEC49",84,0)
 .S SDQUIT=0
"RTN","SDEC49",85,0)
 .;I PIEN1'="" D
"RTN","SDEC49",86,0)
 .;.D GETS^DIQ(409.8451,PIEN1_","_PIEN_",","**","IE","SDINOD1","WLMSG")
"RTN","SDEC49",87,0)
 .;.S SDACT=SDINOD1(409.8451,PIEN1_","_PIEN_",",4,"I")'=""   ;)&(SDINOD1(409.8451,PIEN1_","_PIEN_",",5,"I")="")
"RTN","SDEC49",88,0)
 .;.S SDQUIT=$S((SDACT=1)&($P(SDINOD,"|",7)=1):1,(SDACT'=1)&($P(SDINOD,"|",7)'=1):1,1:0)
"RTN","SDEC49",89,0)
 .Q:+SDQUIT
"RTN","SDEC49",90,0)
 .;edit preference record
"RTN","SDEC49",91,0)
 .I +PIEN1 D
"RTN","SDEC49",92,0)
 ..K SDFDA,SDIEN,SDMSG
"RTN","SDEC49",93,0)
 ..S SDFDA=$NA(SDFDA(409.8451,PIEN1_","_PIEN_","))
"RTN","SDEC49",94,0)
 ..;I $P(SDINOD,"|",2)'="" S %DT="TX" S X=$P(SDINOD,"|",2) D ^%DT S @SDFDA@(2)=$S(Y=-1:$$NOW^XLFDT,1:Y)  ;date/time added
"RTN","SDEC49",95,0)
 ..;I $P(SDINOD,"|",3)'="" S @SDFDA@(3)=$S(+$P(SDINOD,"|",3):+$P(SDINOD,"|",3),1:DUZ)     ;added by user
"RTN","SDEC49",96,0)
 ..S @SDFDA@(4)=$S($P(SDINOD,"|",7)=1:"",1:$$TIME($P(SDINOD,"|",4)))  ;1=active
"RTN","SDEC49",97,0)
 ..S @SDFDA@(5)=$S($P(SDINOD,"|",7)=1:"",1:$$USER($P(SDINOD,"|",5)))  ;1=active
"RTN","SDEC49",98,0)
 ..D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDEC49",99,0)
 .;
"RTN","SDEC49",100,0)
 .;add new preference record
"RTN","SDEC49",101,0)
 .I '+PIEN1 D
"RTN","SDEC49",102,0)
 ..K SDFDA,SDIEN,SDMSG
"RTN","SDEC49",103,0)
 ..S SDFDA=$NA(SDFDA(409.8451,"+1,"_PIEN_","))
"RTN","SDEC49",104,0)
 ..S @SDFDA@(.01)=SDPREF($P(SDINOD,"|",1))   ;preference code
"RTN","SDEC49",105,0)
 ..S %DT="TX" S X=$P(SDINOD,"|",2) D ^%DT S @SDFDA@(2)=$S(Y=-1:$$NOW^XLFDT,1:Y)  ;date/time added
"RTN","SDEC49",106,0)
 ..S @SDFDA@(3)=$S(+$P(SDINOD,"|",3):+$P(SDINOD,"|",3),1:DUZ)     ;added by user
"RTN","SDEC49",107,0)
 ..S @SDFDA@(4)=$S($P(SDINOD,"|",7)=1:"",1:$$TIME($P(SDINOD,"|",4)))
"RTN","SDEC49",108,0)
 ..S @SDFDA@(5)=$S($P(SDINOD,"|",7)=1:"",1:$$USER($P(SDINOD,"|",5)))
"RTN","SDEC49",109,0)
 ..;I $P(SDINOD,"|",4)'="" S %DT="TX" S X=$P(SDINOD,"|",4) D ^%DT I Y'=-1 S @SDFDA@(4)=Y
"RTN","SDEC49",110,0)
 ..;I +$P(SDINOD,"|",5) S @SDFDA@(5)=+$P(SDINOD,"|",5)
"RTN","SDEC49",111,0)
 ..D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC49",112,0)
 ..S PIEN1=SDIEN(1)
"RTN","SDEC49",113,0)
 .;add/edit remark
"RTN","SDEC49",114,0)
 .I +PIEN1,$P(SDINOD,"|",6)'="" D
"RTN","SDEC49",115,0)
 ..K SDMSG
"RTN","SDEC49",116,0)
 ..S SDREMARK=$P(SDINOD,"|",6)
"RTN","SDEC49",117,0)
 ..I SDREMARK]"" S SDREMARK(.5)=SDREMARK,SDREMARK="" D
"RTN","SDEC49",118,0)
 ...D WP^DIE(409.8451,PIEN1_","_PIEN_",",6,"","SDREMARK","SDMSG")
"RTN","SDEC49",119,0)
 ;
"RTN","SDEC49",120,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^COMPLETED"_$C(30,31)
"RTN","SDEC49",121,0)
 Q
"RTN","SDEC49",122,0)
 ;
"RTN","SDEC49",123,0)
 ;===============================================================
"RTN","SDEC49",124,0)
 ;
"RTN","SDEC49",125,0)
PREFGET(SDECY,DFN,INAC) ; Get values from SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC49",126,0)
 ;PREFGET(SDECY,DFN,INAC)  external parameter tag is in SDEC
"RTN","SDEC49",127,0)
 ;INPUT:
"RTN","SDEC49",128,0)
 ;  DFN  = (integer) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC49",129,0)
 ;  INAC = (optional) include inactive entries
"RTN","SDEC49",130,0)
 ;RETURN:
"RTN","SDEC49",131,0)
 ; Successful Return:
"RTN","SDEC49",132,0)
 ;  Global array containing a list of preferences in which each array entry contains preference data separated by ^:
"RTN","SDEC49",133,0)
 ;         the ^ pieces are as follows:
"RTN","SDEC49",134,0)
 ;          1. (integer)        Patient ID - pointer to PATIENT file
"RTN","SDEC49",135,0)
 ;          2. (text)           Preference text
"RTN","SDEC49",136,0)
 ;          3. (date/time)      Date/Time preference added in external format - defaults to NOW
"RTN","SDEC49",137,0)
 ;          4. (integer)        Added by User - Pointer to NEW PERSON file - defaults to Current User
"RTN","SDEC49",138,0)
 ;          5. (text)           Added by User Name
"RTN","SDEC49",139,0)
 ;          6. (date/time)      Date/Time Inactivated in external format
"RTN","SDEC49",140,0)
 ;          7. (integer)        Inactivated by user - Pointer to NEW PERSON file
"RTN","SDEC49",141,0)
 ;          8. (text)           Inactivated by user Name
"RTN","SDEC49",142,0)
 ;          9. (text)      Remarks are returned as a single string of text that may be delimited by carriage return/line feed $c(13,10).
"RTN","SDEC49",143,0)
 ;             1         2               3                4
"RTN","SDEC49",144,0)
 ;      "T00020DFN^T00030PREF_TEXT^T00020DATE_ADDED^T00030ADDED_BY_USER_IEN"
"RTN","SDEC49",145,0)
 ;              5                        6                      7
"RTN","SDEC49",146,0)
 ;       ^T00030ADDED_BY_USER_NAME^T00020DATE_INACTIVATED^T00030INACTIVATED_BY_USER_IEN"
"RTN","SDEC49",147,0)
 ;              8                              9
"RTN","SDEC49",148,0)
 ;       ^T00030INACTIVATED_BY_USER_NAME^T00100REMARKS"_$C(30)
"RTN","SDEC49",149,0)
 ; Caught Exception Return:
"RTN","SDEC49",150,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC49",151,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",152,0)
 ; Unexpected Exception Return:
"RTN","SDEC49",153,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC49",154,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC49",155,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC49",156,0)
 ;     text back to the client.
"RTN","SDEC49",157,0)
 ;
"RTN","SDEC49",158,0)
 N PIEN,PIEN1,PIEN1NOD
"RTN","SDEC49",159,0)
 N SDFDA,SDI,SDIEN,SDINOD,SDMSG,SDPREF,SDREMARK,SDTMP,SDWP,SDWPA
"RTN","SDEC49",160,0)
 N X
"RTN","SDEC49",161,0)
 S SDECI=0
"RTN","SDEC49",162,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC49",163,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC49",164,0)
 ; data header
"RTN","SDEC49",165,0)
 S @SDECY@(SDECI)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC49",166,0)
 ;check for valid Patient
"RTN","SDEC49",167,0)
 I '+$G(DFN) D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",168,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",169,0)
 ;              1         2               3                4
"RTN","SDEC49",170,0)
 S SDTMP="T00020DFN^T00030PREF_TEXT^T00020DATE_ADDED^T00030ADDED_BY_USER_IEN"
"RTN","SDEC49",171,0)
 ;                     5                        6                      7
"RTN","SDEC49",172,0)
 S SDTMP=SDTMP_"^T00030ADDED_BY_USER_NAME^T00020DATE_INACTIVATED^T00030INACTIVATED_BY_USER_IEN"
"RTN","SDEC49",173,0)
 ;                     8                              9
"RTN","SDEC49",174,0)
 S SDTMP=SDTMP_"^T00030INACTIVATED_BY_USER_NAME^T00100REMARKS"_$C(30)
"RTN","SDEC49",175,0)
 S @SDECY@(SDECI)=SDTMP
"RTN","SDEC49",176,0)
 ;check for existing patient entry in SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC49",177,0)
 S PIEN=$O(^SDEC(409.845,"B",DFN,0))
"RTN","SDEC49",178,0)
 I '+PIEN S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31) Q
"RTN","SDEC49",179,0)
 D PREF1(.SDPREF)    ;SDPREF(<CODE>)=<TEXT>
"RTN","SDEC49",180,0)
 S PIEN1=0 F  S PIEN1=$O(^SDEC(409.845,PIEN,1,PIEN1)) Q:PIEN1'>0  D
"RTN","SDEC49",181,0)
 .S PIEN1NOD=^SDEC(409.845,PIEN,1,PIEN1,0)
"RTN","SDEC49",182,0)
 .I '+$G(INAC) Q:$P(PIEN1NOD,U,4)'=""
"RTN","SDEC49",183,0)
 .S SDTMP=DFN_U_SDPREF($P(PIEN1NOD,U,1))_U_$$FMTE^XLFDT($P(PIEN1NOD,U,2),8)_U_$P(PIEN1NOD,U,3)_U_$P($G(^VA(200,+$P(PIEN1NOD,U,3),0)),U,1)
"RTN","SDEC49",184,0)
 .S SDTMP=SDTMP_U_$S($P(PIEN1NOD,U,4)'="":$$FMTE^XLFDT($P(PIEN1NOD,U,4),8),1:"")_U_$P(PIEN1NOD,U,5)
"RTN","SDEC49",185,0)
 .S SDTMP=SDTMP_U_$S($P(PIEN1NOD,U,5)'="":$P($G(^VA(200,+$P(PIEN1NOD,U,5),0)),U,1),1:"")
"RTN","SDEC49",186,0)
 .;get remark
"RTN","SDEC49",187,0)
 .K SDWP S X=$$GET1^DIQ(409.8451,PIEN1_","_PIEN_",",6,"","SDWP","SDMSG")
"RTN","SDEC49",188,0)
 .S SDWPA=""
"RTN","SDEC49",189,0)
 .S SDI=0 F  S SDI=$O(SDWP(SDI)) Q:SDI=""  D
"RTN","SDEC49",190,0)
 ..S SDWPA=$S(SDWPA'="":SDWPA_$C(13,10),1:"")_SDWP(SDI)
"RTN","SDEC49",191,0)
 .S:SDWPA'="" SDTMP=SDTMP_U_SDWPA
"RTN","SDEC49",192,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC49",193,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC49",194,0)
 Q
"RTN","SDEC49",195,0)
 ;
"RTN","SDEC49",196,0)
 ;=================================================
"RTN","SDEC49",197,0)
 ;
"RTN","SDEC49",198,0)
PREFGETV(SDECY) ;
"RTN","SDEC49",199,0)
 ;PREFGETV(SDECY)  external parameter tag is in SDEC
"RTN","SDEC49",200,0)
 ;INPUT: none
"RTN","SDEC49",201,0)
 ;RETURN:
"RTN","SDEC49",202,0)
 ; Successful Return:
"RTN","SDEC49",203,0)
 ;  Global array containing a list of the valid Preferences in which each array entry contains the preference text.
"RTN","SDEC49",204,0)
 ; Caught Exception Return:
"RTN","SDEC49",205,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC49",206,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",207,0)
 ; Unexpected Exception Return:
"RTN","SDEC49",208,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC49",209,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC49",210,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC49",211,0)
 ;     text back to the client.
"RTN","SDEC49",212,0)
 N SDI,SDX,SDXI,SDECI
"RTN","SDEC49",213,0)
 S SDECI=0
"RTN","SDEC49",214,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC49",215,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC49",216,0)
 ; data header
"RTN","SDEC49",217,0)
 S @SDECY@(SDECI)="T00030TEXT"_$C(30)
"RTN","SDEC49",218,0)
 S SDX=$P($G(^DD(409.8451,.01,0)),U,3)
"RTN","SDEC49",219,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDEC49",220,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDEC49",221,0)
 .Q:SDXI=""
"RTN","SDEC49",222,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=$P(SDXI,":",2)_$C(30)
"RTN","SDEC49",223,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC49",224,0)
 Q
"RTN","SDEC49",225,0)
 ;
"RTN","SDEC49",226,0)
 ;=================================================
"RTN","SDEC49",227,0)
 ;
"RTN","SDEC49",228,0)
PREF(PREF) ;
"RTN","SDEC49",229,0)
 N SDI,SDX,SDXI
"RTN","SDEC49",230,0)
 S SDX=$P($G(^DD(409.8451,.01,0)),U,3)
"RTN","SDEC49",231,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDEC49",232,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDEC49",233,0)
 .Q:SDXI=""
"RTN","SDEC49",234,0)
 .S PREF($P(SDXI,":",2))=$P(SDXI,":",1)
"RTN","SDEC49",235,0)
 Q
"RTN","SDEC49",236,0)
 ;
"RTN","SDEC49",237,0)
PREF1(PREF) ;
"RTN","SDEC49",238,0)
 N SDI,SDX,SDXI
"RTN","SDEC49",239,0)
 S SDX=$P($G(^DD(409.8451,.01,0)),U,3)
"RTN","SDEC49",240,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDEC49",241,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDEC49",242,0)
 .Q:SDXI=""
"RTN","SDEC49",243,0)
 .S PREF($P(SDXI,":",1))=$P(SDXI,":",2)
"RTN","SDEC49",244,0)
 Q
"RTN","SDEC49",245,0)
 ;
"RTN","SDEC49",246,0)
TIME(TIME)  ;
"RTN","SDEC49",247,0)
 ;INPUT:
"RTN","SDEC49",248,0)
 ; TIME = date/time in external form
"RTN","SDEC49",249,0)
 N RET,X,Y,%DT
"RTN","SDEC49",250,0)
 S RET=""
"RTN","SDEC49",251,0)
 S TIME=$G(TIME)
"RTN","SDEC49",252,0)
 I TIME'="" S %DT="TX" S X=TIME D ^%DT S RET=Y I Y=-1 S RET=""
"RTN","SDEC49",253,0)
 I RET="" S RET=$E($$NOW^XLFDT,1,12)
"RTN","SDEC49",254,0)
 Q RET
"RTN","SDEC49",255,0)
 ;
"RTN","SDEC49",256,0)
USER(USER)  ;
"RTN","SDEC49",257,0)
 ;INPUT:
"RTN","SDEC49",258,0)
 ; USER = user pointer to NEW PERSON file
"RTN","SDEC49",259,0)
 N RET
"RTN","SDEC49",260,0)
 S RET=""
"RTN","SDEC49",261,0)
 S USER=$G(USER)
"RTN","SDEC49",262,0)
 I USER'="" I $D(^VA(200,USER,0)) S RET=USER
"RTN","SDEC49",263,0)
 I RET="" S RET=DUZ
"RTN","SDEC49",264,0)
 Q RET
"RTN","SDEC50")
0^93^B81989355^n/a
"RTN","SDEC50",1,0)
SDEC50 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC50",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC50",3,0)
 ;
"RTN","SDEC50",4,0)
 Q
"RTN","SDEC50",5,0)
 ;
"RTN","SDEC50",6,0)
FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC) ; GET Future appointments for given patient and date range
"RTN","SDEC50",7,0)
 ;FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC)  external parameter tag is in SDEC
"RTN","SDEC50",8,0)
 ;INPUT:
"RTN","SDEC50",9,0)
 ;  DFN   = (required) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC50",10,0)
 ;  SDBEG = (required) Begin of date range to search for appointments in external format
"RTN","SDEC50",11,0)
 ;  SDEND = (required) End of date range to search for appointments in external format
"RTN","SDEC50",12,0)
 ;  SDANC = (optional) ancillary flag  0=all appointments; 1=only ancillary appointments
"RTN","SDEC50",13,0)
 ;RETURN:
"RTN","SDEC50",14,0)
 ; Successful Return:
"RTN","SDEC50",15,0)
 ;   Global Array in which each array entry contains Appointment Data from the PATIENT file
"RTN","SDEC50",16,0)
 ;   Data is separated by ^:
"RTN","SDEC50",17,0)
 ;     1. DFN
"RTN","SDEC50",18,0)
 ;     2. CLINIC_IEN  - Clinic IEN
"RTN","SDEC50",19,0)
 ;     3. CLINIC_NAME - Clinic Name
"RTN","SDEC50",20,0)
 ;     4. APPT_DATE - Appointment Date in external format
"RTN","SDEC50",21,0)
 ;     5. STATUS    - Status text
"RTN","SDEC50",22,0)
 ;     6. ANCTXT    - Ancillary Text
"RTN","SDEC50",23,0)
 ;     7. CONS      -Consult Link pointer to REQUEST/CONSULTATION file 123
"RTN","SDEC50",24,0)
 ;   "T00020DFN^T00020CLINIC_IEN^T00030CLINIC_NAME^T00020APPT_DATE^T00020STATUS^T00100ANCTXT^T00030CONS"
"RTN","SDEC50",25,0)
 ; Caught Exception Return:
"RTN","SDEC50",26,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",27,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",28,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",29,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",30,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",31,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",32,0)
 ;     text back to the client.
"RTN","SDEC50",33,0)
 ;
"RTN","SDEC50",34,0)
 N SDANCT,SDCL,SDCLN,SDCONS,SDATA,SDDT,SDST,SDT,X,Y,%DT
"RTN","SDEC50",35,0)
 S SDECI=0
"RTN","SDEC50",36,0)
 K ^TMP("SDEC50",$J)
"RTN","SDEC50",37,0)
 S SDECY="^TMP(""SDEC50"","_$J_")"
"RTN","SDEC50",38,0)
 ; data header
"RTN","SDEC50",39,0)
 S @SDECY@(0)="T00020DFN^T00020CLINIC_IEN^T00030CLINIC_NAME^T00020APPT_DATE^T00020STATUS^T00100ANCTXT^T00030CONS"_$C(30)
"RTN","SDEC50",40,0)
 ;validate Patient (required)
"RTN","SDEC50",41,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC50",42,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC50",43,0)
 ;validate begin date/time (required)
"RTN","SDEC50",44,0)
 S:$G(SDBEG)="" SDBEG=$P($$NOW^XLFDT,".",1)
"RTN","SDEC50",45,0)
 S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y
"RTN","SDEC50",46,0)
 I Y=-1 D ERR1^SDECERR(-1,"Invalid Begin Time.",.SDECI,SDECY) Q
"RTN","SDEC50",47,0)
 ;validate end date/time (required)
"RTN","SDEC50",48,0)
 S:$G(SDEND)="" SDEND=1000000
"RTN","SDEC50",49,0)
 S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y
"RTN","SDEC50",50,0)
 I Y=-1 D ERR1^SDECERR(-1,"Invalid End Time.",.SDECI,SDECY) Q
"RTN","SDEC50",51,0)
 ;validate ancillary flag (optional)
"RTN","SDEC50",52,0)
 S SDANC=$G(SDANC)
"RTN","SDEC50",53,0)
 S:SDANC'=1 SDANC=0
"RTN","SDEC50",54,0)
 S SDT=SDBEG F  S SDT=$O(^DPT(DFN,"S",SDT)) Q:SDT=""  Q:SDT>SDEND  D
"RTN","SDEC50",55,0)
 .S SDST=$$GET1^DIQ(2.98,SDT_","_DFN_",",100)      ;current status
"RTN","SDEC50",56,0)
 .;Q:SDST'="FUTURE"
"RTN","SDEC50",57,0)
 .;Q:'("I"[$P(^DPT(DFN,"S",SDT,0),U,2))  ;removed 6/24/2015
"RTN","SDEC50",58,0)
 .S SDANCT=""
"RTN","SDEC50",59,0)
 .S SDATA=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDEC50",60,0)
 .S SDANCT=$$ANC^SDAM1
"RTN","SDEC50",61,0)
 .I +SDANC,SDANCT="" Q  ;quit if not ancillary
"RTN","SDEC50",62,0)
 .S SDCL=$$GET1^DIQ(2.98,SDT_","_DFN_",",.01,"I")  ;clinic IEN
"RTN","SDEC50",63,0)
 .S SDCLN=$$GET1^DIQ(2.98,SDT_","_DFN_",",.01)     ;clinic name
"RTN","SDEC50",64,0)
 .S SDDT=$$GET1^DIQ(2.98,SDT_","_DFN_",",.001)     ;appt time
"RTN","SDEC50",65,0)
 .S CONS=$$CONS(SDCL,DFN,SDT)
"RTN","SDEC50",66,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=DFN_U_SDCL_U_SDCLN_U_SDDT_U_SDST_U_SDANCT_U_CONS_$C(30)
"RTN","SDEC50",67,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC50",68,0)
 Q
"RTN","SDEC50",69,0)
 ;
"RTN","SDEC50",70,0)
CONS(SDCL,DFN,SDDT) ;check for consult in file 44
"RTN","SDEC50",71,0)
 ; SDCL = (required) clinic IEN
"RTN","SDEC50",72,0)
 ; DFN  = (required) patient IEN
"RTN","SDEC50",73,0)
 ; SDDT = (required) appointment time in FM format
"RTN","SDEC50",74,0)
 N CONS,CSTAT,SDI,SDJ
"RTN","SDEC50",75,0)
 S CONS=""
"RTN","SDEC50",76,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"S",SDDT,1,SDI)) Q:SDI'>0  D  Q:CONS'=""
"RTN","SDEC50",77,0)
 .I $P($G(^SC(SDCL,"S",SDDT,1,SDI,0)),U,1)=DFN D
"RTN","SDEC50",78,0)
 ..S CONS=$G(^SC(SDCL,"S",SDDT,1,SDI,"CONS"))
"RTN","SDEC50",79,0)
 ..I +CONS D
"RTN","SDEC50",80,0)
 ...S CSTAT=$P($G(^GMR(123,CONS,0)),U,12)
"RTN","SDEC50",81,0)
 ...S:(CSTAT=1!(CSTAT=2)!(CSTAT=13)) CONS=""
"RTN","SDEC50",82,0)
 Q CONS
"RTN","SDEC50",83,0)
 ;
"RTN","SDEC50",84,0)
PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND)  ;GET patient clinic status for a clinic for a given time frame - has the patient been seen by the given Clinic in the past 24 months
"RTN","SDEC50",85,0)
 ;PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND)  external parameter tag is in SDEC
"RTN","SDEC50",86,0)
 ;INPUT:
"RTN","SDEC50",87,0)
 ;  DFN   = (required) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC50",88,0)
 ;  SDCL  = (required) Clinic code - Pointer to HOSPITAL LOCATION file
"RTN","SDEC50",89,0)
 ;  SDBEG = (optional)  Begin date in external format; defaults to 730 days previous (24 months)
"RTN","SDEC50",90,0)
 ;  SDEND = (optional)  End date in external format; defaults to today
"RTN","SDEC50",91,0)
 ;RETURN:
"RTN","SDEC50",92,0)
 ; Successful Return:
"RTN","SDEC50",93,0)
 ;   a single entry in the global array indicating that patient has or has
"RTN","SDEC50",94,0)
 ;   not been seen.
"RTN","SDEC50",95,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",96,0)
 ; Caught Exception Return:
"RTN","SDEC50",97,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",98,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",99,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",100,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",101,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",102,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",103,0)
 ;     text back to the client.
"RTN","SDEC50",104,0)
 N SDASD,SDECI,SDS,SDSCN,SDSNOD,SDSD,SDSTP,SDT,SDVSP,SDWL,SDYN
"RTN","SDEC50",105,0)
 N X,Y,%DT,APIEN
"RTN","SDEC50",106,0)
 S SDECI=0
"RTN","SDEC50",107,0)
 S SDECY="^TMP(""SDEC50"","_$J_",""PCSTGET"")"
"RTN","SDEC50",108,0)
 K @SDECY
"RTN","SDEC50",109,0)
 ; data header
"RTN","SDEC50",110,0)
 S @SDECY@(0)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC50",111,0)
 ;check for valid Patient
"RTN","SDEC50",112,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",113,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",114,0)
 ;check for valid Clinic
"RTN","SDEC50",115,0)
 I '+SDCL D ERR1^SDECERR(-1,"Invalid Clinic ID.",SDECI,SDECY) Q
"RTN","SDEC50",116,0)
 I '$D(^SC(SDCL,0)) D ERR1^SDECERR(-1,"Invalid Clinic ID.",SDECI,SDECY) Q
"RTN","SDEC50",117,0)
 ;check times
"RTN","SDEC50",118,0)
 I $G(SDBEG)'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=""
"RTN","SDEC50",119,0)
 S:$G(SDBEG)="" SDBEG=$P($$FMADD^XLFDT($$NOW^XLFDT,-730),".",1)
"RTN","SDEC50",120,0)
 I $G(SDEND)'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND="" Q
"RTN","SDEC50",121,0)
 S:$G(SDEND)="" SDEND=$P($$NOW^XLFDT,".",1)
"RTN","SDEC50",122,0)
 S SDSCN=$P($G(^SC(+$G(SDCL),0)),U,7)   ;get stop code number
"RTN","SDEC50",123,0)
 I '+SDSCN D ERR1^SDECERR(-1,"Clinic "_$P($G(^SC(+$G(SDCL),0)),U,1)_" does not have a STOP CODE NUMBER defined.",SDECI,SDECY) Q
"RTN","SDEC50",124,0)
 S SDYN="NO"
"RTN","SDEC50",125,0)
 ;look in SD WAIT LIST file for SDSCN stop code
"RTN","SDEC50",126,0)
 S SDWL="" F  S SDWL=$O(^SDWL(409.3,"B",DFN,SDWL)) Q:SDWL=""  D  Q:SDYN="YES"
"RTN","SDEC50",127,0)
 .S SDSD=$P($G(^SDWL(409.3,SDWL,0)),U,23)
"RTN","SDEC50",128,0)
 .I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",129,0)
 ..S SDSTP=$P($G(^SDWL(409.3,SDWL,"SDAPT")),U,4)
"RTN","SDEC50",130,0)
 ..I SDSTP=SDSCN S SDYN="YES"
"RTN","SDEC50",131,0)
 .Q:SDYN="YES"
"RTN","SDEC50",132,0)
 ;look in PATIENT Appointments
"RTN","SDEC50",133,0)
 I SDYN'="YES" D
"RTN","SDEC50",134,0)
 .S SDS="" F  S SDS=$O(^DPT(DFN,"S",SDS)) Q:SDS=""  D  Q:SDYN="YES"
"RTN","SDEC50",135,0)
 ..S SDSD=$$GET1^DIQ(2.98,SDS_","_DFN_",",.001,"I")
"RTN","SDEC50",136,0)
 ..I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",137,0)
 ...I $P($G(^DPT(DFN,"S",SDS,0)),U,1)=SDCL D
"RTN","SDEC50",138,0)
 ....S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",139,0)
 ....Q:APIEN=""
"RTN","SDEC50",140,0)
 ....S:$G(^SC(SDCL,"S",SDS,1,+APIEN,"C"))'="" SDYN="YES"
"RTN","SDEC50",141,0)
 ;look in HOSPITAL LOCATION
"RTN","SDEC50",142,0)
 I SDYN'="YES" D
"RTN","SDEC50",143,0)
 .S SDS=SDBEG F  S SDS=$O(^SC(SDCL,"S",SDS)) Q:SDS'>0  Q:SDS>SDEND  D  Q:SDYN="YES"
"RTN","SDEC50",144,0)
 ..S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",145,0)
 ..Q:APIEN=""
"RTN","SDEC50",146,0)
 ..S:$P($G(^SC(SDCL,"S",SDS,1,APIEN,"C")),U,1)'="" SDYN="YES"
"RTN","SDEC50",147,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^"_SDYN_$C(30,31)
"RTN","SDEC50",148,0)
 Q
"RTN","SDEC50",149,0)
 ;
"RTN","SDEC50",150,0)
PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND)  ;GET patient clinic status for a service/specialty (clinic stop) for a given time frame - has the patient been seen any clinics with the given service/specialty (clinic stop) in the past 24 months
"RTN","SDEC50",151,0)
 ;PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND)  external parameter tag is in SDEC
"RTN","SDEC50",152,0)
 ;INPUT:
"RTN","SDEC50",153,0)
 ;  DFN     = (required) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC50",154,0)
 ;  STOP    = (required) CLINIC STOP or Service/Specialty name - NAME from the SD WL SERVICE/SPECIALTY file - looks for 1st active
"RTN","SDEC50",155,0)
 ;                       OR - Pointer to the CLINIC STOP file
"RTN","SDEC50",156,0)
 ;  SDBEG   = (optional)  Begin date in external format; defaults to 730 days previous (24 months)
"RTN","SDEC50",157,0)
 ;  SDEND   = (optional)  End date in external format; defaults to today
"RTN","SDEC50",158,0)
 ;RETURN:
"RTN","SDEC50",159,0)
 ; Successful Return:
"RTN","SDEC50",160,0)
 ;   a single entry in the global array indicating that patient has or has
"RTN","SDEC50",161,0)
 ;   not been seen.
"RTN","SDEC50",162,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",163,0)
 ; Caught Exception Return:
"RTN","SDEC50",164,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",165,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",166,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",167,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",168,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",169,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",170,0)
 ;     text back to the client.
"RTN","SDEC50",171,0)
 N SDASD,SDF,SDSCN,SDECI,SDSNOD,SDSD,SDSTP,SDT,SDVSP,SDWL,SDYN
"RTN","SDEC50",172,0)
 N H,WLSRVSP,X,Y,%DT
"RTN","SDEC50",173,0)
 S WLSRVSP=""
"RTN","SDEC50",174,0)
 S (SDF,SDECI,SDSCN)=0
"RTN","SDEC50",175,0)
 S SDECY="^TMP(""SDEC50"","_$J_",""PCST2GET"")"
"RTN","SDEC50",176,0)
 K @SDECY
"RTN","SDEC50",177,0)
 ; data header
"RTN","SDEC50",178,0)
 S @SDECY@(0)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC50",179,0)
 ;check for valid Patient
"RTN","SDEC50",180,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",181,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",182,0)
 ;check for valid Service/Specialty
"RTN","SDEC50",183,0)
 S STOP=$G(STOP)
"RTN","SDEC50",184,0)
 ;I +SDSVSP,$D(^SDWL(409.31,SDSVSP,0)) S SDSCN=$P($G(^SDWL(409.31,SDSVSP,0)),U,1) S SDF=1
"RTN","SDEC50",185,0)
 I +STOP,'$D(^DIC(40.7,STOP,0)) D ERR1^SDECERR(-1,"Invalid stop code.",SDECI,SDECY) Q
"RTN","SDEC50",186,0)
 I +STOP S SDSCN=$$GET1^DIQ(40.7,STOP_",",.01) S SDF=1
"RTN","SDEC50",187,0)
 I 'SDF,'+STOP D
"RTN","SDEC50",188,0)
 .S H="" F  S H=$O(^DIC(40.7,"B",STOP,H)) Q:H=""  D  Q:+STOP
"RTN","SDEC50",189,0)
 ..I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDEC50",190,0)
 ..S STOP=H
"RTN","SDEC50",191,0)
 I '+STOP D ERR1^SDECERR(-1,"Invalid Stop code.",SDECI,SDECY) Q
"RTN","SDEC50",192,0)
 ;check times
"RTN","SDEC50",193,0)
 I $G(SDBEG)'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=""
"RTN","SDEC50",194,0)
 S:$G(SDBEG)="" SDBEG=$P($$FMADD^XLFDT($$NOW^XLFDT,-730),".",1)
"RTN","SDEC50",195,0)
 I $G(SDEND)'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND="" Q
"RTN","SDEC50",196,0)
 S:$G(SDEND)="" SDEND=$P($$NOW^XLFDT,".",1)
"RTN","SDEC50",197,0)
 S SDYN="NO"
"RTN","SDEC50",198,0)
 D LOOKWL
"RTN","SDEC50",199,0)
 I SDYN'="YES" S SDCL=0 F  S SDCL=$O(^SC(SDCL)) Q:SDCL'>0  D  Q:SDYN="YES"
"RTN","SDEC50",200,0)
 .S SDCLN=$P($G(^SC(SDCL,0)),U,7)
"RTN","SDEC50",201,0)
 .D:SDCLN=STOP LOOK
"RTN","SDEC50",202,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^"_SDYN_$C(30,31)
"RTN","SDEC50",203,0)
 Q
"RTN","SDEC50",204,0)
 ;
"RTN","SDEC50",205,0)
LOOK ;
"RTN","SDEC50",206,0)
 ;look in PATIENT Appointments
"RTN","SDEC50",207,0)
 I SDYN'="YES" D
"RTN","SDEC50",208,0)
 .S SDS="" F  S SDS=$O(^DPT(DFN,"S",SDS)) Q:SDS=""  D  Q:SDYN="YES"
"RTN","SDEC50",209,0)
 ..S SDSD=$$GET1^DIQ(2.98,SDS_","_DFN_",",.001,"I")
"RTN","SDEC50",210,0)
 ..I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",211,0)
 ...I $P($G(^DPT(DFN,"S",SDS,0)),U,1)=SDCL D
"RTN","SDEC50",212,0)
 ....S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",213,0)
 ....I APIEN'="",$G(^SC(SDCL,"S",SDS,1,APIEN,"C"))'="" S SDYN="YES"
"RTN","SDEC50",214,0)
 ;look in HOSPITAL LOCATION
"RTN","SDEC50",215,0)
 I SDYN'="YES" D
"RTN","SDEC50",216,0)
 .S SDS=SDBEG F  S SDS=$O(^SC(SDCL,"S",SDS)) Q:SDS'>0  Q:SDS>SDEND  D  Q:SDYN="YES"
"RTN","SDEC50",217,0)
 ..S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",218,0)
 ..Q:APIEN=""
"RTN","SDEC50",219,0)
 ..S:$P($G(^SC(SDCL,"S",SDS,1,APIEN,"C")),U,1)'="" SDYN="YES"
"RTN","SDEC50",220,0)
 Q
"RTN","SDEC50",221,0)
 ;
"RTN","SDEC50",222,0)
LOOKWL ;
"RTN","SDEC50",223,0)
 ;look in SD WAIT LIST file for STOP stop code
"RTN","SDEC50",224,0)
 S SDWL="" F  S SDWL=$O(^SDWL(409.3,"B",DFN,SDWL)) Q:SDWL=""  D  Q:SDYN="YES"
"RTN","SDEC50",225,0)
 .S SDSD=$P($G(^SDWL(409.3,SDWL,0)),U,23)
"RTN","SDEC50",226,0)
 .I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",227,0)
 ..S SDSTP=$P($G(^SDWL(409.3,SDWL,"SDAPT")),U,4)
"RTN","SDEC50",228,0)
 ..I SDSTP=STOP S SDYN="YES"
"RTN","SDEC50",229,0)
 .Q:SDYN="YES"
"RTN","SDEC50",230,0)
 Q
"RTN","SDEC50",231,0)
 ;
"RTN","SDEC50",232,0)
PCSGET(SDECY,SDSVSP)  ;GET clinics for a service/specialty (clinic stop)
"RTN","SDEC50",233,0)
 ;PCSGET(SDECY,SDSVSP)  external parameter tag is in SDEC
"RTN","SDEC50",234,0)
 ;INPUT:
"RTN","SDEC50",235,0)
 ;  SDSVSP  = (required) Service/Specialty name - NAME from the SD WL SERVICE/SPECIALTY file - looks for 1st active
"RTN","SDEC50",236,0)
 ;                       OR - Pointer to the SD WL SERVICE/SPECIALTY file
"RTN","SDEC50",237,0)
 ;RETURN:
"RTN","SDEC50",238,0)
 ; Successful Return:
"RTN","SDEC50",239,0)
 ;   global array containing Clinic IEN and Name of matching Hospital Locations
"RTN","SDEC50",240,0)
 ;   CLINSTOP  - pointer to CLINIC STOP file 40.7
"RTN","SDEC50",241,0)
 ;   CLINIEN   - pointer to the HOSPITAL LOCATION file 44
"RTN","SDEC50",242,0)
 ;   CLINNAME  - NAME from the HOSPITAL LOCATION file
"RTN","SDEC50",243,0)
 ; Caught Exception Return:
"RTN","SDEC50",244,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",245,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",246,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",247,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",248,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",249,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",250,0)
 ;     text back to the client.
"RTN","SDEC50",251,0)
 N SDASD,SDSCN,SDECI,SDSNOD,SDSD,SDSTP,SDT,SDVSP,SDWL
"RTN","SDEC50",252,0)
 N H,WLSRVSP,X,Y
"RTN","SDEC50",253,0)
 S WLSRVSP=""
"RTN","SDEC50",254,0)
 S (SDECI,SDSCN)=0
"RTN","SDEC50",255,0)
 S SDECY="^TMP(""SDEC50"","_$J_",""PCSGET"")"
"RTN","SDEC50",256,0)
 K @SDECY
"RTN","SDEC50",257,0)
 ; data header
"RTN","SDEC50",258,0)
 S @SDECY@(0)="T00030CLINSTOP^T00030CLINIEN^T00030CLINNAME"_$C(30)
"RTN","SDEC50",259,0)
 ;check for valid Service/Specialty
"RTN","SDEC50",260,0)
 S SDSVSP=$G(SDSVSP)
"RTN","SDEC50",261,0)
 I SDSVSP="" D ERR1^SDECERR(-1,"Service/Specialty ID required",SDECI,SDECY) Q
"RTN","SDEC50",262,0)
 I +SDSVSP,$D(^SDWL(409.31,+SDSVSP,0)) S SDSCN=$P($G(^SDWL(409.31,SDSVSP,0)),U,1)
"RTN","SDEC50",263,0)
 I '+SDSVSP D
"RTN","SDEC50",264,0)
 .S H=0 F  S H=$O(^DIC(40.7,"B",SDSVSP,H)) Q:H=""  D  Q:SDSCN'=0
"RTN","SDEC50",265,0)
 ..I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDEC50",266,0)
 ..S SDSCN=H
"RTN","SDEC50",267,0)
 I '+SDSCN D ERR1^SDECERR(-1,"Invalid Service/Specialty.",SDECI,SDECY) Q
"RTN","SDEC50",268,0)
 S SDCL=0 F  S SDCL=$O(^SC(SDCL)) Q:SDCL'>0  D
"RTN","SDEC50",269,0)
 .S SDCLN=$P($G(^SC(SDCL,0)),U,7)
"RTN","SDEC50",270,0)
 .I $$GET1^DIQ(44,SDCL_",",2505,)'="",$$GET1^DIQ(44,SDCL_",",2506)="" Q   ;only active
"RTN","SDEC50",271,0)
 .I SDCLN=SDSCN S SDECI=SDECI+1 S @SDECY@(SDECI)=SDSCN_U_SDCL_U_$P($G(^SC(SDCL,0)),U,1)_$C(30)
"RTN","SDEC50",272,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC50",273,0)
 Q
"RTN","SDEC51")
0^94^B124307281^n/a
"RTN","SDEC51",1,0)
SDEC51 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC51",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC51",3,0)
 ;
"RTN","SDEC51",4,0)
 ;Reference is made to ICR's #4837, #4557, #6185, and #6186
"RTN","SDEC51",5,0)
 Q
"RTN","SDEC51",6,0)
 ;
"RTN","SDEC51",7,0)
REQGET(SDECY,SDBEG,SDEND,MAXREC,LASTSUB,SDGMR) ; GET entries that are not SCHEDULED.
"RTN","SDEC51",8,0)
REQGETA ;
"RTN","SDEC51",9,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PTPHONE,PZIP4
"RTN","SDEC51",10,0)
 N SDECI,SDI,SDJ,SDREASON,SDREC,SDRECL,SDRPA,SDRPA0,SDTMP,SDWP,X,Y,%DT
"RTN","SDEC51",11,0)
 N SDCNT,SDCAN,SDCDC,SDCANF,SDCSTOP,SDSCHED,SDSCHEDF,SDSENS,SDSTAT,SDSTATF,SDDONE
"RTN","SDEC51",12,0)
 N DIC,ELIGIEN,ELIGNAME,GAF,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDEC51",13,0)
 N SDDEMO,SDSUB
"RTN","SDEC51",14,0)
 N DOB,GENDER,HRN,INSTIEN,INSTNAME,NAME,SSN,SVVCCONN
"RTN","SDEC51",15,0)
 S SDSUB=""
"RTN","SDEC51",16,0)
 S SDECI=0
"RTN","SDEC51",17,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC51",18,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC51",19,0)
 ; data header
"RTN","SDEC51",20,0)
 D HDR
"RTN","SDEC51",21,0)
 S (SDCANF,SDSCHEDF)=0
"RTN","SDEC51",22,0)
 S SDREC=$$GETIEN("RECEIVED")
"RTN","SDEC51",23,0)
 I SDREC="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC51",24,0)
 S SDSCHED=$$GETIEN("SCHEDULED")
"RTN","SDEC51",25,0)
 I SDSCHED="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC51",26,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")
"RTN","SDEC51",27,0)
 S SDCAN=$$GETIEN("CANCELLED")
"RTN","SDEC51",28,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE")
"RTN","SDEC51",29,0)
 S SDCDC=$$GETIEN("DISCONTINUED")
"RTN","SDEC51",30,0)
 ;validate SDBEG (optional)
"RTN","SDEC51",31,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC51",32,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC51",33,0)
 I $G(SDBEG)="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC51",34,0)
 ;validate SDEND (optional)
"RTN","SDEC51",35,0)
 S SDEND=$G(SDEND)
"RTN","SDEC51",36,0)
 I SDEND'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC51",37,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC51",38,0)
 ;validate SDGMR (optional)
"RTN","SDEC51",39,0)
 S SDGMR=$G(SDGMR)
"RTN","SDEC51",40,0)
 I SDGMR'="" I '$D(^GMR(123,+SDGMR,0)) D ERR1^SDECERR(-1,"Invalid Request/Consultation ID.",.SDECI,SDECY) Q   ;ICR 4837
"RTN","SDEC51",41,0)
 I SDGMR'="" D REQGET1 G REQX
"RTN","SDEC51",42,0)
 ;validate MAXREC (optional)
"RTN","SDEC51",43,0)
 S MAXREC=+$G(MAXREC)
"RTN","SDEC51",44,0)
 I 'MAXREC S MAXREC=9999999
"RTN","SDEC51",45,0)
 ;validate LASTSUB (optional)
"RTN","SDEC51",46,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC51",47,0)
 S SDCNT=0
"RTN","SDEC51",48,0)
 S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:(SDBEG-1)_".2359")
"RTN","SDEC51",49,0)
 ;ICR 6185 allows use of "AG" xref
"RTN","SDEC51",50,0)
 F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)>SDEND  D  I SDECI>(MAXREC-1) S SDSUB=SDJ_"|"_$S(SDGMR>0:SDGMR,1:"") Q
"RTN","SDEC51",51,0)
 .S SDGMR=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0),LASTSUB="" F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC51",52,0)
 ..D REQGET1
"RTN","SDEC51",53,0)
REQX ;
"RTN","SDEC51",54,0)
 S SDTMP=@SDECY@(SDECI) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDEC51",55,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,40)=SDSUB
"RTN","SDEC51",56,0)
 S @SDECY@(SDECI)=SDTMP_$C(30,31)
"RTN","SDEC51",57,0)
 Q
"RTN","SDEC51",58,0)
HDR ;Get the header information
"RTN","SDEC51",59,0)
 ;              1                 2           3         4
"RTN","SDEC51",60,0)
 S SDTMP="T00020CONSULTIEN^T00020ORIGDT^T00020DFN^T00030NAME"
"RTN","SDEC51",61,0)
 ;                     5                6             7              8                     9
"RTN","SDEC51",62,0)
 S SDTMP=SDTMP_"^T00030TO_SERVICE^T00010CLINIEN^T00030CLINNAME^T00030DATE_OF_REQUEST^T00030PRIO"
"RTN","SDEC51",63,0)
 ;                     10            11             12            13
"RTN","SDEC51",64,0)
 S SDTMP=SDTMP_"^T00030USERIEN^T00030USERNAME^T00030PROVIEN^T00030PROVNAME"
"RTN","SDEC51",65,0)
 ;                     14                 15                        16         17
"RTN","SDEC51",66,0)
 S SDTMP=SDTMP_"^T00030REQUEST_TYPE^T00030SERVICE_RENDERED_AS^T00100COMM^T00500REQ_PROC_ACT"
"RTN","SDEC51",67,0)
 ;                     18        19        20        21           22            23
"RTN","SDEC51",68,0)
 S SDTMP=SDTMP_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC51",69,0)
 ;                     24           25            26             27            28
"RTN","SDEC51",70,0)
 S SDTMP=SDTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDEC51",71,0)
 ;                     29            30             31             32             33
"RTN","SDEC51",72,0)
 S SDTMP=SDTMP_"^T00030TYPEIEN^T00030TYPENAME^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3"
"RTN","SDEC51",73,0)
 ;                     34          35           36             37          38      39             40
"RTN","SDEC51",74,0)
 S SDTMP=SDTMP_"^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00030GAF^T00100SENSITIVE^T00030LASTSUB"
"RTN","SDEC51",75,0)
 ;                     41         42            43            44          45           46         47
"RTN","SDEC51",76,0)
 S SDTMP=SDTMP_"^T00100STOP^T00030PTPHONE^T00030URGENCY^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"
"RTN","SDEC51",77,0)
 ;                     48            49
"RTN","SDEC51",78,0)
 S SDTMP=SDTMP_"^T00030PRHBLOC^T00030EARLIEST"
"RTN","SDEC51",79,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC51",80,0)
 Q
"RTN","SDEC51",81,0)
GETONE(SDECY,SDGMR) ;Get one specific consult
"RTN","SDEC51",82,0)
 ;              1                 2           3         4
"RTN","SDEC51",83,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC51",84,0)
 N SDECI,SDI,SDJ,SDREASON,SDREC,SDRECL,SDRPA,SDRPA0,SDTMP,SDWP,X,Y,%DT
"RTN","SDEC51",85,0)
 N SDCNT,SDCAN,SDCDC,SDCANF,SDCSTOP,SDSCHED,SDSCHEDF,SDSENS,SDSTAT,SDSTATF,SDDONE
"RTN","SDEC51",86,0)
 N ELIGIEN,ELIGNAME,GAF,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDEC51",87,0)
 N SDDEMO,SDSUB
"RTN","SDEC51",88,0)
 N DOB,GENDER,HRN,INSTIEN,INSTNAME,NAME,SSN,SVVCCONN
"RTN","SDEC51",89,0)
 N PRACE,PRACEN,PETH,PETHN
"RTN","SDEC51",90,0)
 S SDSUB=""
"RTN","SDEC51",91,0)
 S SDECI=0
"RTN","SDEC51",92,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC51",93,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC51",94,0)
 D HDR
"RTN","SDEC51",95,0)
 S (SDCANF,SDSCHEDF)=0
"RTN","SDEC51",96,0)
 S SDREC=$$GETIEN("RECEIVED")
"RTN","SDEC51",97,0)
 I SDREC="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC51",98,0)
 S SDSCHED=$$GETIEN("SCHEDULED")
"RTN","SDEC51",99,0)
 I SDSCHED="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC51",100,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")
"RTN","SDEC51",101,0)
 S SDCAN=$$GETIEN("CANCELLED")
"RTN","SDEC51",102,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE")
"RTN","SDEC51",103,0)
 S SDCDC=$$GETIEN("DISCONTINUED")
"RTN","SDEC51",104,0)
 D REQGET1
"RTN","SDEC51",105,0)
 Q
"RTN","SDEC51",106,0)
REQGET1 ;
"RTN","SDEC51",107,0)
 N SDCL,SDGMR0,SDDATA,SDSER,SDSTOP,SIEN,STOP,IN,PRHBLOC
"RTN","SDEC51",108,0)
 N PRIO
"RTN","SDEC51",109,0)
 S SDRECL="",SDSTOP=""
"RTN","SDEC51",110,0)
 S (SDCANF,SDSCHEDF,SDSTATF)=0
"RTN","SDEC51",111,0)
 S SDCL=$P($G(^GMR(123,+SDGMR,0)),U,6)   ;ICR 4837
"RTN","SDEC51",112,0)
 S PRHBLOC=$S($$GET1^DIQ(44,+SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDEC51",113,0)
 S SDGMR0=$G(^GMR(123,SDGMR,0))   ;ICR 4837 states 'Zero node read into variable'
"RTN","SDEC51",114,0)
 S IN=$P(SDGMR0,U,18)   ;$$GET1^DIQ(123,SDGMR_",",14)
"RTN","SDEC51",115,0)
 ;Q:IN="inpatient"            ;Inpatient consults do not have appointments
"RTN","SDEC51",116,0)
 S SDSER=$P(SDGMR0,U,5)
"RTN","SDEC51",117,0)
 I +SDSER D
"RTN","SDEC51",118,0)
 .S SIEN=0 F  S SIEN=$O(^GMR(123.5,SDSER,688,SIEN)) Q:'+SIEN  D
"RTN","SDEC51",119,0)
 ..S STOP=$G(^GMR(123.5,SDSER,688,SIEN,0))   ;ICR 4557
"RTN","SDEC51",120,0)
 ..I SDSTOP="" S SDSTOP=STOP
"RTN","SDEC51",121,0)
 ..E  S SDSTOP=SDSTOP_"|"_STOP
"RTN","SDEC51",122,0)
 S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")
"RTN","SDEC51",123,0)
 Q:DFN=""
"RTN","SDEC51",124,0)
 ;
"RTN","SDEC51",125,0)
 Q:$$REQCHK(.SDRECL,SDGMR,DFN)
"RTN","SDEC51",126,0)
 ;
"RTN","SDEC51",127,0)
 ;Q:SDCANF
"RTN","SDEC51",128,0)
 ;Q:SDSCHEDF
"RTN","SDEC51",129,0)
 I 1 D
"RTN","SDEC51",130,0)
 .;get REASON FOR REQUEST wp text
"RTN","SDEC51",131,0)
 .K SDWP
"RTN","SDEC51",132,0)
 .S X=$$GET1^DIQ(123,SDGMR_",",20,"","SDWP")
"RTN","SDEC51",133,0)
 .;S SDREASON=""
"RTN","SDEC51",134,0)
 .;I $D(SDWP) S SDI="" F  S SDI=$O(SDWP(SDI)) Q:SDI=""  S SDREASON=$S(SDREASON'="":SDREASON_$C(13,10),1:"")_$TR(SDWP(SDI),"^") Q
"RTN","SDEC51",135,0)
 .;collect demographics
"RTN","SDEC51",136,0)
 .D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC51",137,0)
 .S NAME=SDDEMO("NAME")
"RTN","SDEC51",138,0)
 .S DOB=SDDEMO("DOB")
"RTN","SDEC51",139,0)
 .S GENDER=SDDEMO("GENDER")
"RTN","SDEC51",140,0)
 .S HRN=SDDEMO("HRN")
"RTN","SDEC51",141,0)
 .S SSN=SDDEMO("SSN")
"RTN","SDEC51",142,0)
 .S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDEC51",143,0)
 .S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDEC51",144,0)
 .S PRIGRP=SDDEMO("PRIGRP")       ;24
"RTN","SDEC51",145,0)
 .S ELIGIEN=SDDEMO("ELIGIEN")     ;25
"RTN","SDEC51",146,0)
 .S ELIGNAME=SDDEMO("ELIGNAME")   ;26
"RTN","SDEC51",147,0)
 .S SVVCCONN=SDDEMO("SVCCONN")    ;27
"RTN","SDEC51",148,0)
 .S SVCCONNP=SDDEMO("SVCCONNP")   ;28
"RTN","SDEC51",149,0)
 .S TYPEIEN=SDDEMO("TYPEIEN")     ;29
"RTN","SDEC51",150,0)
 .S TYPENAME=SDDEMO("TYPENAME")   ;30
"RTN","SDEC51",151,0)
 .S PADDRES1=SDDEMO("PADDRES1")   ;31   - Patient Address line 1
"RTN","SDEC51",152,0)
 .S PADDRES2=SDDEMO("PADDRES2")   ;32   - Patient Address line 2
"RTN","SDEC51",153,0)
 .S PADDRES3=SDDEMO("PADDRES3")   ;33   - Patient Address line 3
"RTN","SDEC51",154,0)
 .S PCITY=SDDEMO("PCITY")         ;34   - Patient City
"RTN","SDEC51",155,0)
 .S PSTATE=SDDEMO("PSTATE")       ;35   - Patient state name
"RTN","SDEC51",156,0)
 .S PCOUNTRY=SDDEMO("PCOUNTRY")   ;36   - Patient country name
"RTN","SDEC51",157,0)
 .S PZIP4=SDDEMO("PZIP+4")        ;37   - Patient Zip+4
"RTN","SDEC51",158,0)
 .S PTPHONE=SDDEMO("HPHONE")      ;42   - Patient phone
"RTN","SDEC51",159,0)
 .S GAF=$$GAF^SDECU2(DFN)         ;38
"RTN","SDEC51",160,0)
 .S SDSENS=$$PTSEC^SDECUTL(DFN)   ;39
"RTN","SDEC51",161,0)
 .D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC51",162,0)
 .D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC51",163,0)
 .S PRIO=$$PRIO(SDGMR)
"RTN","SDEC51",164,0)
 .;       1         2                                     3                  4
"RTN","SDEC51",165,0)
 .S SDTMP=SDGMR_"^"_$$GET1^DIQ(123,SDGMR_",",.01,"I")_"^"_$P(SDGMR0,U,2)_"^"_$$GET1^DIQ(123,SDGMR_",",.02)
"RTN","SDEC51",166,0)
 .;                 5                               6                                   7                               8
"RTN","SDEC51",167,0)
 .S SDTMP=SDTMP_"^"_$$GET1^DIQ(123,SDGMR_",",1)_"^"_$$GET1^DIQ(123,SDGMR_",",2,"I")_"^"_$$GET1^DIQ(123,SDGMR_",",2)_"^"_$$GET1^DIQ(123,SDGMR_",",3,"I")
"RTN","SDEC51",168,0)
 .;                 9        10                                  11                              12
"RTN","SDEC51",169,0)
 .S SDTMP=SDTMP_"^"_PRIO_"^"_$$GET1^DIQ(123,SDGMR_",",7,"I")_"^"_$$GET1^DIQ(123,SDGMR_",",7)_"^"_$P(SDGMR0,U,14)
"RTN","SDEC51",170,0)
 .;                 13                               14                               15
"RTN","SDEC51",171,0)
 .S SDTMP=SDTMP_"^"_$$GET1^DIQ(123,SDGMR_",",10)_"^"_$$GET1^DIQ(123,SDGMR_",",13)_"^"_$$GET1^DIQ(123,SDGMR_",",14)
"RTN","SDEC51",172,0)
 .;                 16     17
"RTN","SDEC51",173,0)
 .S SDTMP=SDTMP_"^"_""_"^"_SDRECL
"RTN","SDEC51",174,0)
 .;               18   19    20    21       22        23
"RTN","SDEC51",175,0)
 .S SDTMP=SDTMP_U_""_U_DOB_U_SSN_U_GENDER_U_INSTIEN_U_INSTNAME    ;23
"RTN","SDEC51",176,0)
 .;               24       25        26         27         28
"RTN","SDEC51",177,0)
 .S SDTMP=SDTMP_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVVCCONN_U_SVCCONNP   ;28
"RTN","SDEC51",178,0)
 .;               29        30         31         32         33
"RTN","SDEC51",179,0)
 .S SDTMP=SDTMP_U_TYPEIEN_U_TYPENAME_U_PADDRES1_U_PADDRES2_U_PADDRES3 ;33
"RTN","SDEC51",180,0)
 .;               34      35       36         37      38      39
"RTN","SDEC51",181,0)
 .S SDTMP=SDTMP_U_PCITY_U_PSTATE_U_PCOUNTRY_U_PZIP4_U_GAF_U_SDSENS    ;39
"RTN","SDEC51",182,0)
 .S SDTMP=SDTMP_U_U_SDSTOP_U_PTPHONE_U_$$GET1^DIQ(123,SDGMR_",",5,"I")  ;save the 40th position for LASTSUB if it is to be returned
"RTN","SDEC51",183,0)
 .S SDTMP=SDTMP_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_PRHBLOC_U_$$GET1^DIQ(123,SDGMR_",",17,"I")   ;49
"RTN","SDEC51",184,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC51",185,0)
 Q
"RTN","SDEC51",186,0)
 ;
"RTN","SDEC51",187,0)
PRIO(SDGMR) ;
"RTN","SDEC51",188,0)
 N FED,PRIO,PRIO1,SDED
"RTN","SDEC51",189,0)
 S PRIO=""
"RTN","SDEC51",190,0)
 S SDED=$P($$GET1^DIQ(123,SDGMR_",",17,"I"),".",1)   ;earliest date  ;ICR 6185
"RTN","SDEC51",191,0)
 S FED=$P($$GET1^DIQ(123,SDGMR_",",.01,"I"),".",1)   ;file entry date  ;ICR 4837
"RTN","SDEC51",192,0)
 S PRIO1=$$GET1^DIQ(123,SDGMR_",",5)                 ;urgency text  ;ICR 4837
"RTN","SDEC51",193,0)
 I SDED="" S PRIO=PRIO1               ;2.6.17.2 - use URGENCY text if EARLIEST DATE is null
"RTN","SDEC51",194,0)
 I (PRIO=""),(FED="")!(SDED'=FED) S PRIO=SDED  ;2.6.17.1 - use EARLIEST DATE if not = FILE ENTRY DATE
"RTN","SDEC51",195,0)
 I (PRIO=""),((PRIO1["STAT")!(PRIO1["NEXT AVAILABLE")!(PRIO1["EMERGENCY")!(PRIO1["TODAY")) S PRIO=SDED  ;2.6.17.3
"RTN","SDEC51",196,0)
 S:PRIO="" PRIO=PRIO1  ;2.6.17.3
"RTN","SDEC51",197,0)
 Q PRIO
"RTN","SDEC51",198,0)
 ;
"RTN","SDEC51",199,0)
REQCHK(SDRECL,SDGMR,DFN) ;
"RTN","SDEC51",200,0)
 N SDCAN,SDCANF,SDCDC,SDCSTAT,SDDONE,SDES,SDESF,SDPA,SDPDC,SDRPA,SDRPA0,SDSCHED,SDSCHEDF,SDSER,SDSTAT,SDSTATF
"RTN","SDEC51",201,0)
 S SDPA=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDEC51",202,0)
 S SDPDC=$O(^ORD(100.01,"B","DISCONTINUED",0))
"RTN","SDEC51",203,0)
 S SDCSTAT=$$GET1^DIQ(123,SDGMR_",",8,"I")
"RTN","SDEC51",204,0)
 Q:SDCSTAT=SDPDC 1   ;don't return this entry if CPRS STATUS is DISCONTINUED
"RTN","SDEC51",205,0)
 S SDSCHED=$$GETIEN("SCHEDULED")      ;$O(^GMR(123.1,"B","SCHEDULED",0))
"RTN","SDEC51",206,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")   ;$O(^GMR(123.1,"B","STATUS CHANGE",0))
"RTN","SDEC51",207,0)
 S SDCAN=$$GETIEN("CANCELLED")        ;$O(^GMR(123.1,"B","CANCELLED",0))
"RTN","SDEC51",208,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE") ;$O(^GMR(123.1,"B","COMPLETE/UPDATE",0))
"RTN","SDEC51",209,0)
 S SDCDC=$$GETIEN("DISCONTINUED")     ;$O(^GMR(123.1,"B","DISCONTINUED",0))
"RTN","SDEC51",210,0)
 S SDES=$$GETIEN("EDIT/RESUBMITTED")
"RTN","SDEC51",211,0)
 S SDSER=$$GET1^DIQ(123,SDGMR_",",1,"I")   ;ICR 6185
"RTN","SDEC51",212,0)
 S DFN=$G(DFN) I '+DFN S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")   ;ICR 6185
"RTN","SDEC51",213,0)
 S SDRECL=$G(SDRECL)
"RTN","SDEC51",214,0)
 S (SDCANF,SDESF,SDSCHEDF,SDSTATF)=0
"RTN","SDEC51",215,0)
 ;SDESF - if 1 we have determined this request should be returned (return 0)
"RTN","SDEC51",216,0)
 S SDRPA=9999999 F  S SDRPA=$O(^GMR(123,SDGMR,40,SDRPA),-1) Q:SDRPA'>0  D  Q:SDCANF=1  Q:SDSCHEDF=1  Q:SDESF=1   ;ICR 6185
"RTN","SDEC51",217,0)
 .K SDDATA
"RTN","SDEC51",218,0)
 .D GETS^DIQ(123.02,SDRPA_","_SDGMR_",",".01;1;2;4","IE","SDDATA")   ;ICR 6185
"RTN","SDEC51",219,0)
 .S SDRPA0=SDDATA(123.02,SDRPA_","_SDGMR_",",1,"I")  ;  $G(^GMR(123,SDGMR,40,SDRPA,0))
"RTN","SDEC51",220,0)
 .I SDRPA0'=SDSCHED,SDRPA0'=SDSTAT,SDRPA0'=SDCAN,SDRPA0'=SDDONE,SDRPA0'=SDCDC,SDRPA0'=SDES Q  ;SDRECL is getting too long; only watch the ones we need
"RTN","SDEC51",221,0)
 .I (SDRPA0=SDCAN)!(SDRPA0=SDDONE)!(SDRPA0=SDCDC) S SDCANF=1 Q    ;skip completed consults/mgh
"RTN","SDEC51",222,0)
 .I SDRPA0=SDES S SDESF=1 Q
"RTN","SDEC51",223,0)
 .I SDRPA0=SDSCHED,SDSTATF=1 S SDESF=1 Q
"RTN","SDEC51",224,0)
 .I SDRPA0=SDSCHED,SDSTATF'=1,$$SDCHED(DFN,SDDATA(123.02,SDRPA_","_SDGMR_",",2,"I"),SDSER) S SDSCHEDF=1 Q
"RTN","SDEC51",225,0)
 .;I SDRPA0=SDSTAT,$$FINDTXT(SDGMR,SDRPA) S SDSTATF=1
"RTN","SDEC51",226,0)
 .I SDRPA0=SDSTAT,SDCSTAT=SDPA S SDSTATF=1
"RTN","SDEC51",227,0)
 .S:$L($G(SDRECL))<225 SDRECL=SDRPA_";;"_SDDATA(123.02,SDRPA_","_SDGMR_",",.01,"E")_";;"_SDRPA0_$S(SDRECL'="":"|"_SDRECL,1:"")
"RTN","SDEC51",228,0)
 K SDDATA
"RTN","SDEC51",229,0)
 Q:SDSCHEDF SDSCHEDF
"RTN","SDEC51",230,0)
 Q:SDCANF SDCANF
"RTN","SDEC51",231,0)
 Q:SDESF 0
"RTN","SDEC51",232,0)
 Q 0
"RTN","SDEC51",233,0)
 ;
"RTN","SDEC51",234,0)
GETIEN(NAME) ;get ID from REQUEST ACTION TYPES file 123.1   ;ICR 6186
"RTN","SDEC51",235,0)
 N DIC
"RTN","SDEC51",236,0)
 S DIC=123.1
"RTN","SDEC51",237,0)
 S DIC(0)="BO"
"RTN","SDEC51",238,0)
 S X=NAME
"RTN","SDEC51",239,0)
 D ^DIC
"RTN","SDEC51",240,0)
 I Y=-1 Q ""
"RTN","SDEC51",241,0)
 Q $P(Y,U,1)
"RTN","SDEC51",242,0)
 ;
"RTN","SDEC51",243,0)
SDCHED(DFN,SDACTDT,SDTSVC) ;look for appointment with stop code for REQUEST SERVICES
"RTN","SDEC51",244,0)
 ;INPUT:
"RTN","SDEC51",245,0)
 ; DFN     - patient ID pointer to PATIENT file
"RTN","SDEC51",246,0)
 ; SDACTDT - actual activity date in FM format
"RTN","SDEC51",247,0)
 ; SDTSVC  - request services ID pointer to REQUEST SERVICES file 123.5
"RTN","SDEC51",248,0)
 ;RETURN:
"RTN","SDEC51",249,0)
 ; 0 = no appointment found with matching stop code
"RTN","SDEC51",250,0)
 ; 1 = appointment found with matching stop code
"RTN","SDEC51",251,0)
 ;Q 1   ;do not check for match for now
"RTN","SDEC51",252,0)
 N SDCL,SDI,SDRET,SDSTP,SDSTPL
"RTN","SDEC51",253,0)
 S SDRET=0
"RTN","SDEC51",254,0)
 S SDTSVC=$G(SDTSVC)
"RTN","SDEC51",255,0)
 Q:SDTSVC="" 0
"RTN","SDEC51",256,0)
 S SDACTDT=$P($G(SDACTDT),".",1)
"RTN","SDEC51",257,0)
 I SDACTDT'?7N S SDACTDT=1000103
"RTN","SDEC51",258,0)
 S SDI=0 F  S SDI=$O(^GMR(123.5,SDTSVC,688,SDI)) Q:SDI'>0  D  Q:SDRET=1
"RTN","SDEC51",259,0)
 .S SDSTPL(+$P($G(^GMR(123.5,SDTSVC,688,SDI,0)),U,1))=""    ;ICR 4557
"RTN","SDEC51",260,0)
 S SDI=$$FMADD^XLFDT(SDACTDT,-2) F  S SDI=$O(^DPT(DFN,"S",SDI)) Q:SDI'>0  D
"RTN","SDEC51",261,0)
 .S SDCL=$$GET1^DIQ(2.98,SDI_","_DFN_",",.01,"I")
"RTN","SDEC51",262,0)
 .S SDSTP=$$GET1^DIQ(44,SDCL_",",8,"I")
"RTN","SDEC51",263,0)
 .S:$D(SDSTPL(+SDSTP)) SDRET=1
"RTN","SDEC51",264,0)
 Q SDRET
"RTN","SDEC51",265,0)
 ;
"RTN","SDEC51",266,0)
FINDTXT(SDGMR,SDRPA,SDTXT) ;find text in word processing field
"RTN","SDEC51",267,0)
 ;INPUT:
"RTN","SDEC51",268,0)
 ; SDGMR - Pointer to REQUEST/CONSULTATION file
"RTN","SDEC51",269,0)
 ; SDRPA - Pointer to REQUEST PROCESSING ACTIVITY in REQUEST/CONSULTATION file
"RTN","SDEC51",270,0)
 ; SDTXT - (optional) text to search for; defaults to "CANCELLED BY THE PATIENT"
"RTN","SDEC51",271,0)
 ;RETURN:
"RTN","SDEC51",272,0)
 ; 1=Text Fount; 0=Not Found
"RTN","SDEC51",273,0)
 N SDI,SDMSG,SDPREV,SDRET,SDTHIS,SDWP,X
"RTN","SDEC51",274,0)
 S (SDTHIS,SDPREV)=""
"RTN","SDEC51",275,0)
 S SDRET=0
"RTN","SDEC51",276,0)
 ;S:$G(SDTXT)="" SDTXT="CANCELLED BY THE PATIENT"
"RTN","SDEC51",277,0)
 S:$G(SDTXT)="" SDTXT="CANCELLED BY"
"RTN","SDEC51",278,0)
 K SDWP S X=$$GET1^DIQ(123.02,SDRPA_","_SDGMR_",",5,"","SDWP","SDMSG")   ;ICR 6185
"RTN","SDEC51",279,0)
 S SDI=0 F  S SDI=$O(SDWP(SDI)) Q:SDI=""  D  Q:SDRET=1
"RTN","SDEC51",280,0)
 .S SDTHIS=SDWP(SDI)
"RTN","SDEC51",281,0)
 .I $$UP^XLFSTR(SDPREV_SDTHIS)[SDTXT S SDRET=1
"RTN","SDEC51",282,0)
 .S SDPREV=SDTHIS
"RTN","SDEC51",283,0)
 Q SDRET
"RTN","SDEC52")
0^95^B134090636^n/a
"RTN","SDEC52",1,0)
SDEC52 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC52",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC52",3,0)
 ;
"RTN","SDEC52",4,0)
 Q
"RTN","SDEC52",5,0)
 ;
"RTN","SDEC52",6,0)
RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP) ; GET entries from the RECALL REMINDERS file 403.5 for a given Patient and Recall Date range.
"RTN","SDEC52",7,0)
RECGETA ;
"RTN","SDEC52",8,0)
 ;RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP)  external parameter tag is in SDEC
"RTN","SDEC52",9,0)
 ;INPUT:
"RTN","SDEC52",10,0)
 ;  DFN    = (optional) pointer to PATIENT file 2; returns all data if null
"RTN","SDEC52",11,0)
 ;  SDBEG  = (optional) Begin Date range in external format to search RECALL DATE range. (no time)
"RTN","SDEC52",12,0)
 ;  SDEND  = (optional) End Date range in external format to search RECALL DATE range. (no time)
"RTN","SDEC52",13,0)
 ;  MAXREC -  (optional) maximum number of records to return
"RTN","SDEC52",14,0)
 ;  LASTSUB - (optional) last subscripts from previous call;
"RTN","SDEC52",15,0)
 ;                          Used to collect the data in multiple
"RTN","SDEC52",16,0)
 ;                          background calls
"RTN","SDEC52",17,0)
 ;  RECIEN  - (optional)  Recall Reminders ID pointer to RECALL REMINDERS file
"RTN","SDEC52",18,0)
 ;                       returns the single record pointed to by RECIEN
"RTN","SDEC52",19,0)
 ;  SDTOP    - (optional) runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"RTN","SDEC52",20,0)
 ;
"RTN","SDEC52",21,0)
 ;RETURN:
"RTN","SDEC52",22,0)
 ; Successful Return:
"RTN","SDEC52",23,0)
 ;   Global Array in which each array entry contains data from the RECALL REMINDERS file 403.5.
"RTN","SDEC52",24,0)
 ;   Data is separated by ^:
"RTN","SDEC52",25,0)
 ;     1. IEN        - pointer to RECALL REMINDERS
"RTN","SDEC52",26,0)
 ;     2. DFN        - Pointer to PATIENT file
"RTN","SDEC52",27,0)
 ;     3. NAME       - Patient NAME from PATIENT file
"RTN","SDEC52",28,0)
 ;     4. HRN
"RTN","SDEC52",29,0)
 ;     5. DOB        - Date of Birth in external format
"RTN","SDEC52",30,0)
 ;     6. SSN        - Social Security Number
"RTN","SDEC52",31,0)
 ;     7. GENDER
"RTN","SDEC52",32,0)
 ;     8  INSTIEN    - INSTITUTION ien
"RTN","SDEC52",33,0)
 ;     9  INSTNAME   - INSTITUTION NAME
"RTN","SDEC52",34,0)
 ;    10. ACCESION   - Accession # (free-text 1-25 characters)
"RTN","SDEC52",35,0)
 ;    11. COMM       - COMMENT (free-text 1-80 characters)
"RTN","SDEC52",36,0)
 ;    12. FASTING    - FAST/NON-FASTING  valid values:
"RTN","SDEC52",37,0)
 ;                           FASTING
"RTN","SDEC52",38,0)
 ;                           NON-FASTING
"RTN","SDEC52",39,0)
 ;    13. RRAPPTYP    - Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52",40,0)
 ;    14. RRPROVIEN  - Provider - Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52",41,0)
 ;    15. PROVNAME   - Provider NAME of Provider in RECALL REMINDERS PROVIDERS file
"RTN","SDEC52",42,0)
 ;    16. CLINIEN    - Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC52",43,0)
 ;    17. CLINNAME   - Clinic NAME from HOSPITAL LOCATION file
"RTN","SDEC52",44,0)
 ;    18. APPTLEN    - Length of Appointment  numeric between 10 and 120
"RTN","SDEC52",45,0)
 ;    19. DATE       - Recall Date in external format (no time)
"RTN","SDEC52",46,0)
 ;    20. DATE1      - Recall Date (Per patient) in external format (no time)
"RTN","SDEC52",47,0)
 ;    21. DAPTDT     - Date Reminder Sent in external format (no time)
"RTN","SDEC52",48,0)
 ;    22. USERIEN    - User Who Entered Recall pointer to NEW PERSON file
"RTN","SDEC52",49,0)
 ;    23. USERNAME   - User Who Entered Recall NAME from NEW PERSON file
"RTN","SDEC52",50,0)
 ;    24. DATE2      - Second Print Date in external format (no time)
"RTN","SDEC52",51,0)
 ;    25. PRIGRP     - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file
"RTN","SDEC52",52,0)
 ;                      Valid Values:
"RTN","SDEC52",53,0)
 ;                       GROUP 1
"RTN","SDEC52",54,0)
 ;                       GROUP 2
"RTN","SDEC52",55,0)
 ;                       GROUP 3
"RTN","SDEC52",56,0)
 ;                       GROUP 4
"RTN","SDEC52",57,0)
 ;                       GROUP 5
"RTN","SDEC52",58,0)
 ;                       GROUP 6
"RTN","SDEC52",59,0)
 ;                       GROUP 7
"RTN","SDEC52",60,0)
 ;                       GROUP 8
"RTN","SDEC52",61,0)
 ;    26. ELIGIEN    - Pointer to MAS ELIGIBILITY CODE file 8.1
"RTN","SDEC52",62,0)
 ;    27. ELIGNAME   - NAME from MAS ELIGIBILITY CODE file
"RTN","SDEC52",63,0)
 ;    28. SVCCONN    - SERVICE CONNECTED field from PATIENT ENROLLMENT file
"RTN","SDEC52",64,0)
 ;                      Valid values:
"RTN","SDEC52",65,0)
 ;                      YES
"RTN","SDEC52",66,0)
 ;                      NO
"RTN","SDEC52",67,0)
 ;    29. SVCCONNP   - SERVICE CONNECTED PERCENTAGE field from PATIENT ENROLLMENT file
"RTN","SDEC52",68,0)
 ;                      Numeric between 0-100
"RTN","SDEC52",69,0)
 ;    30. TYPEIEN    - Pointer to TYPE OF PATIENT file 391
"RTN","SDEC52",70,0)
 ;    31. TYPENAME   - NAME from TYPE OF PATIENT file 391
"RTN","SDEC52",71,0)
 ;    32. DATE3      - DATE/TIME RECALL ADDED from RECALL REMINDERS file 403.5
"RTN","SDEC52",72,0)
 ;    33. PADDRES1   - Patient Address line 1
"RTN","SDEC52",73,0)
 ;    34. PADDRES2   - Patient Address line 2
"RTN","SDEC52",74,0)
 ;    35. PADDRES3   - Patient Address line 3
"RTN","SDEC52",75,0)
 ;    36. PCITY      - Patient City
"RTN","SDEC52",76,0)
 ;    37. PSTATE     - Patient state name
"RTN","SDEC52",77,0)
 ;    38. PCOUNTRY   - Patient country pointer to COUNTRY CODE file 779.004
"RTN","SDEC52",78,0)
 ;    39. PZIP4      - Patient Zip+4
"RTN","SDEC52",79,0)
 ;    40. GAF        - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDEC52",80,0)
 ;    41. SENSITIVE - Sensitive Record Access data
"RTN","SDEC52",81,0)
 ;                separated by pipe |:
"RTN","SDEC52",82,0)
 ;           1. return code:
"RTN","SDEC52",83,0)
 ;              -1 -RPC/API failed
"RTN","SDEC52",84,0)
 ;                  Required variable not defined
"RTN","SDEC52",85,0)
 ;               0 -No display/action required
"RTN","SDEC52",86,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDEC52",87,0)
 ;               1 -Display warning message
"RTN","SDEC52",88,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDEC52",89,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDEC52",90,0)
 ;               2 -Display warning message/require OK to continue
"RTN","SDEC52",91,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDEC52",92,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDEC52",93,0)
 ;               3 -Access to record denied
"RTN","SDEC52",94,0)
 ;                  Accessing own record
"RTN","SDEC52",95,0)
 ;               4 -Access to Patient (#2) file records denied
"RTN","SDEC52",96,0)
 ;                  SSN not defined
"RTN","SDEC52",97,0)
 ;           2. display text/message
"RTN","SDEC52",98,0)
 ;           3. display text/message
"RTN","SDEC52",99,0)
 ;           4. display text/message
"RTN","SDEC52",100,0)
 ; 42. LASTSUB - last subscripts of data in the return.
"RTN","SDEC52",101,0)
 ;               Will only be in the last record of the return.
"RTN","SDEC52",102,0)
 ;               Pass this as LASTSUB in the next call to continue
"RTN","SDEC52",103,0)
 ;               collecting data.
"RTN","SDEC52",104,0)
 ; 43. PTPHONE ? Patient Phone number ? Free-text 4-20 characters
"RTN","SDEC52",105,0)
 ; 44. PRACE  - Patient Race pointer to RACE file 10 | separates entries
"RTN","SDEC52",106,0)
 ; 45. PRACEN - Patient Race name from RACE file | separates entries
"RTN","SDEC52",107,0)
 ; 46. PETH   - Patient Ethnicity list separated by pipe |
"RTN","SDEC52",108,0)
 ;               Pointer to ETHNICITY file 10.2
"RTN","SDEC52",109,0)
 ; 47. PETHN  - Patient Ethnicity names separated by pipe |
"RTN","SDEC52",110,0)
 ; 48. PRHBLOC - Boolean indicating if location is a
"RTN","SDEC52",111,0)
 ;               Prohibit Access clinic
"RTN","SDEC52",112,0)
 ;
"RTN","SDEC52",113,0)
 ; Caught Exception Return:
"RTN","SDEC52",114,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC52",115,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC52",116,0)
 ; Unexpected Exception Return:
"RTN","SDEC52",117,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52",118,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52",119,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52",120,0)
 ;     text back to the client.
"RTN","SDEC52",121,0)
 N SDDATA,SDECI,SDDEMO,SDMSG,SDTMP
"RTN","SDEC52",122,0)
 N ACCESION,APPTLEN,CLINIEN,CLINNAME,COMM,DAPTDT,DATE,DATE1,DATE2,DATE3,DOB,ELIGIEN,ELIGNAME,FASTING
"RTN","SDEC52",123,0)
 N GAF,GENDER,HRN,IEN,INSTIEN,INSTNAME,NAME,PD,PM,PRIGRP,RRAPPTYP,RRPROVNAME,PTINFO,RRPROVIEN,SSN
"RTN","SDEC52",124,0)
 N SVCCONNP,SVVCCONN,SDDFN
"RTN","SDEC52",125,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PTPHONE,PZIP4
"RTN","SDEC52",126,0)
 N SDCNT,SDI,SDSENS,SDSUB,TYPEIEN,TYPENAME,USERIEN,USERNAME,X,Y,%DT
"RTN","SDEC52",127,0)
 S SDSUB=""
"RTN","SDEC52",128,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECGET"")"
"RTN","SDEC52",129,0)
 K @SDECY
"RTN","SDEC52",130,0)
 S SDECI=0
"RTN","SDEC52",131,0)
 D HDR
"RTN","SDEC52",132,0)
 ;validate RECIEN (optional)
"RTN","SDEC52",133,0)
 S RECIEN=$G(RECIEN)
"RTN","SDEC52",134,0)
 I RECIEN'="" I '$D(^SD(403.5,RECIEN,0)) D ERR1^SDECERR(-1,"Invalid Recall Reminders ID.",SDECI,SDECY) Q
"RTN","SDEC52",135,0)
 I RECIEN'="" D RECIEN1 G RECX
"RTN","SDEC52",136,0)
 S SDCNT=0
"RTN","SDEC52",137,0)
 ;validate SDBEG
"RTN","SDEC52",138,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC52",139,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC52",140,0)
 I $G(SDBEG)="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC52",141,0)
 ;validate SDEND (optional)
"RTN","SDEC52",142,0)
 S SDEND=$G(SDEND)
"RTN","SDEC52",143,0)
 I SDEND'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",144,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",145,0)
 ;validate SDSTOP (optional)
"RTN","SDEC52",146,0)
 S SDSTOP=$G(SDSTOP)
"RTN","SDEC52",147,0)
 ;validate DFN (optional)
"RTN","SDEC52",148,0)
 S DFN=$G(DFN)
"RTN","SDEC52",149,0)
 I DFN'="" I '$D(^DPT(DFN,0)) S DFN=""
"RTN","SDEC52",150,0)
 ;get all records for a specific patient
"RTN","SDEC52",151,0)
 I +DFN D RECGET1(DFN,,SDBEG,SDEND) G RECX
"RTN","SDEC52",152,0)
 ;get records in specified date range
"RTN","SDEC52",153,0)
 ;validate MAXREC (optional)
"RTN","SDEC52",154,0)
 S MAXREC=$G(MAXREC) I 'MAXREC S MAXREC=9999999
"RTN","SDEC52",155,0)
 ;validate LASTSUB (optional)
"RTN","SDEC52",156,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC52",157,0)
 D RECGETD
"RTN","SDEC52",158,0)
RECX S SDTMP=@SDECY@(SDECI) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDEC52",159,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,42)=SDSUB
"RTN","SDEC52",160,0)
 S @SDECY@(SDECI)=SDTMP_$C(30,31)
"RTN","SDEC52",161,0)
 Q
"RTN","SDEC52",162,0)
 ;
"RTN","SDEC52",163,0)
HDR ;Print out the header
"RTN","SDEC52",164,0)
 S SDTMP="T00030IEN^T00030DFN^T00030NAME^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC52",165,0)
 S SDTMP=SDTMP_"^T00030ACCESION^T00080COMM^T00030FASTING^T00030RRAPPTYP"
"RTN","SDEC52",166,0)
 S SDTMP=SDTMP_"^T00030RRPROVIEN^T00030PROVNAME^T00030CLINIEN^T00030CLINNAME^T00030APPTLEN"
"RTN","SDEC52",167,0)
 S SDTMP=SDTMP_"^T00030DATE^T00030DATE1^T00030DAPTDT^T00030USERIEN^T00030USERNAME^T00030DATE2"
"RTN","SDEC52",168,0)
 S SDTMP=SDTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDEC52",169,0)
 S SDTMP=SDTMP_"^T00030TYPEIEN^T00030TYPENAME^T00030DATE3^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3"
"RTN","SDEC52",170,0)
 S SDTMP=SDTMP_"^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00030GAF^T00100SENSITIVE^T00030LASTSUB^T00030PTPHONE"
"RTN","SDEC52",171,0)
 S SDTMP=SDTMP_"^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN^T00030PRHBLOC"
"RTN","SDEC52",172,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC52",173,0)
 Q
"RTN","SDEC52",174,0)
 ;
"RTN","SDEC52",175,0)
RECGET1(DFN,IEN,SDBEG,SDEND) ;get all recall data for 1 patient
"RTN","SDEC52",176,0)
 ; DFN = (required) patient ID pointer to PATIENT file 2
"RTN","SDEC52",177,0)
 ; IEN - (optional) recall ID pointer to RECALL REMINDERS file
"RTN","SDEC52",178,0)
 ;                  all records in date range will be return if IEN=""
"RTN","SDEC52",179,0)
 N X,Y,%DT
"RTN","SDEC52",180,0)
 ;check for valid Patient (required)
"RTN","SDEC52",181,0)
 I '$D(^DPT(+$G(DFN),0)) D ERR1^SDECERR(-1,"Invalid Patient ID",SDECI,SDECY) Q
"RTN","SDEC52",182,0)
 ;check begin date (optional)
"RTN","SDEC52",183,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1000101
"RTN","SDEC52",184,0)
 I $G(SDBEG)="" S SDBEG=1000101
"RTN","SDEC52",185,0)
 ;check end date (optional)
"RTN","SDEC52",186,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)   ;9991231
"RTN","SDEC52",187,0)
 I $G(SDEND)="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)   ;9991231
"RTN","SDEC52",188,0)
 ;get PATIENT data
"RTN","SDEC52",189,0)
 D RECGETP(DFN)
"RTN","SDEC52",190,0)
 ;get RECALL REMINDERS data
"RTN","SDEC52",191,0)
 S IEN=$G(IEN)
"RTN","SDEC52",192,0)
 I IEN'="" D GET1 Q
"RTN","SDEC52",193,0)
 I IEN="" F  S IEN=$O(^SD(403.5,"B",DFN,IEN)) Q:IEN=""  D GET1
"RTN","SDEC52",194,0)
 Q
"RTN","SDEC52",195,0)
 ;
"RTN","SDEC52",196,0)
RECGETD ;get recall data for date range
"RTN","SDEC52",197,0)
 I 'SDSTOP D
"RTN","SDEC52",198,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1) F  S SDI=$O(^SD(403.5,"D",SDI)) Q:SDI'>0  Q:SDI>$P(SDEND,".",1)  D  I SDECI>(MAXREC-1) S SDSUB=SDI_"|"_$S(SDDFN>0:SDDFN,1:"") Q
"RTN","SDEC52",199,0)
 ..S SDDFN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:"") S LASTSUB="" F  S SDDFN=$O(^SD(403.5,"D",SDI,SDDFN)) Q:SDDFN'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC52",200,0)
 ...S DFN=$$GET1^DIQ(403.5,SDDFN_",",.01,"I")  D RECGET1(DFN,SDDFN,SDBEG,SDEND)
"RTN","SDEC52",201,0)
 I +SDSTOP D
"RTN","SDEC52",202,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1) F  S SDI=$O(^SD(403.5,"D",SDI),-1) Q:SDI'>0  Q:SDI<$P(SDBEG,".",1)  D  I SDECI>(MAXREC-1) S SDSUB=SDI_"|"_$S(SDDFN>0:SDDFN,1:"") Q
"RTN","SDEC52",203,0)
 ..S SDDFN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999) S LASTSUB="" F  S SDDFN=$O(^SD(403.5,"D",SDI,SDDFN),-1) Q:SDDFN'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC52",204,0)
 ...S DFN=$$GET1^DIQ(403.5,SDDFN_",",.01,"I")  D RECGET1(DFN,SDDFN,SDBEG,SDEND)
"RTN","SDEC52",205,0)
 Q
"RTN","SDEC52",206,0)
RECIEN(SDECY,RECIEN) ;Get recall data for one entry
"RTN","SDEC52",207,0)
RECIEN1 ;
"RTN","SDEC52",208,0)
 ;Input is IEN to retieve data on
"RTN","SDEC52",209,0)
 N ACCESION,APPTLEN,CLINIEN,CLINNAME,COMM,DAPTDT,DATE,DATE1,DATE2,DATE3,DOB,ELIGIEN,ELIGNAME,FASTING
"RTN","SDEC52",210,0)
 N GAF,GENDER,HRN,IEN,INSTIEN,INSTNAME,NAME,PD,PM,PRIGRP,RRAPPTYP,RRPROVNAME,PTINFO,RRPROVIEN,SSN
"RTN","SDEC52",211,0)
 N SVCCONNP,SVVCCONN,SDBEG,SDEND
"RTN","SDEC52",212,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC52",213,0)
 N SDCNT,SDI,SDSENS,SDSUB,TYPEIEN,TYPENAME,USERIEN,USERNAME,X,Y,%DT
"RTN","SDEC52",214,0)
 S SDSUB=""
"RTN","SDEC52",215,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECGET"")"
"RTN","SDEC52",216,0)
 K @SDECY
"RTN","SDEC52",217,0)
 S SDECI=0
"RTN","SDEC52",218,0)
 D HDR
"RTN","SDEC52",219,0)
 S SDBEG=1000101
"RTN","SDEC52",220,0)
 S SDEND=9991231
"RTN","SDEC52",221,0)
 S DFN=$$GET1^DIQ(403.5,RECIEN_",",.01,"I")  I +DFN D
"RTN","SDEC52",222,0)
 .D RECGETP(DFN)
"RTN","SDEC52",223,0)
 .D RECGET1(DFN,RECIEN,SDBEG,SDEND)
"RTN","SDEC52",224,0)
 Q
"RTN","SDEC52",225,0)
 ;
"RTN","SDEC52",226,0)
RECGETP(DFN) ;get patient data
"RTN","SDEC52",227,0)
 ;collect demographics
"RTN","SDEC52",228,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC52",229,0)
 S NAME=SDDEMO("NAME")
"RTN","SDEC52",230,0)
 S DOB=SDDEMO("DOB")
"RTN","SDEC52",231,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDEC52",232,0)
 S HRN=SDDEMO("HRN")
"RTN","SDEC52",233,0)
 S SSN=SDDEMO("SSN")
"RTN","SDEC52",234,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDEC52",235,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDEC52",236,0)
 S PRIGRP=SDDEMO("PRIGRP")       ;25
"RTN","SDEC52",237,0)
 S ELIGIEN=SDDEMO("ELIGIEN")     ;26
"RTN","SDEC52",238,0)
 S ELIGNAME=SDDEMO("ELIGNAME")   ;27
"RTN","SDEC52",239,0)
 S SVVCCONN=SDDEMO("SVCCONN")    ;28
"RTN","SDEC52",240,0)
 S SVCCONNP=SDDEMO("SVCCONNP")   ;29
"RTN","SDEC52",241,0)
 S TYPEIEN=SDDEMO("TYPEIEN")     ;30
"RTN","SDEC52",242,0)
 S TYPENAME=SDDEMO("TYPENAME")   ;31
"RTN","SDEC52",243,0)
 S PADDRES1=SDDEMO("PADDRES1")   ;33   - Patient Address line 1
"RTN","SDEC52",244,0)
 S PADDRES2=SDDEMO("PADDRES2")   ;34   - Patient Address line 2
"RTN","SDEC52",245,0)
 S PADDRES3=SDDEMO("PADDRES3")   ;35  - Patient Address line 3
"RTN","SDEC52",246,0)
 S PCITY=SDDEMO("PCITY")         ;36   - Patient City
"RTN","SDEC52",247,0)
 S PSTATE=SDDEMO("PSTATE")       ;37   - Patient state name
"RTN","SDEC52",248,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")   ;38   - Patient country name
"RTN","SDEC52",249,0)
 S PZIP4=SDDEMO("PZIP+4")        ;39   - Patient Zip+4
"RTN","SDEC52",250,0)
 S PTPHONE=SDDEMO("HPHONE")      ;43   - Patient Phone
"RTN","SDEC52",251,0)
 S GAF=$$GAF^SDECU2(DFN)         ;40
"RTN","SDEC52",252,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)   ;41
"RTN","SDEC52",253,0)
 Q
"RTN","SDEC52",254,0)
 ;
"RTN","SDEC52",255,0)
GET1 ;
"RTN","SDEC52",256,0)
 N PRACE,PRACEN,PETH,PETHN,PRHBLOC,PROVNAME
"RTN","SDEC52",257,0)
 K SDDATA,SDMSG
"RTN","SDEC52",258,0)
 S PRHBLOC=0
"RTN","SDEC52",259,0)
 D GETS^DIQ(403.5,IEN,"**","IE","SDDATA","SDMSG")
"RTN","SDEC52",260,0)
 S DATE=SDDATA(403.5,IEN_",",5,"I")
"RTN","SDEC52",261,0)
 Q:(DATE<SDBEG)!(DATE>SDEND)
"RTN","SDEC52",262,0)
 S ACCESION=SDDATA(403.5,IEN_",",2,"E")   ;    10. Accession # (free-text 1-25 characters)
"RTN","SDEC52",263,0)
 S COMM=SDDATA(403.5,IEN_",",2.5,"E")     ;    11. COMMENT (free-text 1-80 characters)
"RTN","SDEC52",264,0)
 S FASTING=SDDATA(403.5,IEN_",",2.6,"I")  ;    12. FASTING/NON-FASTING
"RTN","SDEC52",265,0)
 S RRAPPTYP=SDDATA(403.5,IEN_",",3,"I")   ;    13. Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52",266,0)
 S RRPROVIEN=SDDATA(403.5,IEN_",",4,"I")  ;    14. Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52",267,0)
 S PROVNAME=SDDATA(403.5,IEN_",",4,"E")   ;    15. Provider NAME of Provider in RECALL REMINDERS PROVIDERS file
"RTN","SDEC52",268,0)
 S CLINIEN=SDDATA(403.5,IEN_",",4.5,"I")  ;    16. Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC52",269,0)
 S CLINNAME=SDDATA(403.5,IEN_",",4.5,"E") ;    17. Clinic NAME from HOSPITAL LOCATION file
"RTN","SDEC52",270,0)
 ;I CLINIEN'="",$$GET1^DIQ(44,CLINIEN_",",2502.3,"I")=1 Q   ;check HIDE FROM DISPLAY IN VSE GUI?
"RTN","SDEC52",271,0)
 S:CLINIEN'="" PRHBLOC=$S($$GET1^DIQ(44,+CLINIEN_",",2500,"I")="Y":1,1:0)
"RTN","SDEC52",272,0)
 S APPTLEN=SDDATA(403.5,IEN_",",4.7,"E")  ;    18. Length of Appointment  numeric between 10 and 120
"RTN","SDEC52",273,0)
 S DATE=SDDATA(403.5,IEN_",",5,"I") S DATE=$$FMTE^XLFDT(DATE)           ;19. Recall Date in external format (no time)
"RTN","SDEC52",274,0)
 S DATE1=SDDATA(403.5,IEN_",",5.5,"I") S DATE1=$$FMTE^XLFDT(DATE1)      ;20. Recall Date (Per patient) in external format (no time)
"RTN","SDEC52",275,0)
 S DAPTDT=SDDATA(403.5,IEN_",",6,"I") S DAPTDT=$$FMTE^XLFDT(DAPTDT)     ;21. Date Reminder Sent in external format (no time)
"RTN","SDEC52",276,0)
 S USERIEN=SDDATA(403.5,IEN_",",7,"I")    ;    22. User Who Entered Recall pointer to NEW PERSON file
"RTN","SDEC52",277,0)
 S USERNAME=SDDATA(403.5,IEN_",",7,"E")   ;    23. User Who Entered Recall NAME from NEW PERSON file
"RTN","SDEC52",278,0)
 S DATE3=SDDATA(403.5,IEN_",",7.5,"E")     ;    32. DATE/TIME RECALL ADDED
"RTN","SDEC52",279,0)
 S:DATE3="" DATE3=DATE
"RTN","SDEC52",280,0)
 S DATE2=SDDATA(403.5,IEN_",",8,"I") S DATE2=$$FMTE^XLFDT(DATE2)        ;24. Second Print Date in external format (no time)
"RTN","SDEC52",281,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC52",282,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC52",283,0)
 S SDTMP=IEN_U_DFN_U_NAME_U_HRN_U_DOB_U_SSN_U_GENDER_U_INSTIEN_U_INSTNAME      ; 9
"RTN","SDEC52",284,0)
 S SDTMP=SDTMP_U_ACCESION_U_COMM_U_FASTING_U_RRAPPTYP                          ;13
"RTN","SDEC52",285,0)
 S SDTMP=SDTMP_U_RRPROVIEN_U_PROVNAME_U_CLINIEN_U_CLINNAME_U_APPTLEN           ;18
"RTN","SDEC52",286,0)
 S SDTMP=SDTMP_U_DATE_U_DATE1_U_DAPTDT_U_USERIEN_U_USERNAME_U_DATE2            ;24
"RTN","SDEC52",287,0)
 S SDTMP=SDTMP_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVVCCONN_U_SVCCONNP             ;29
"RTN","SDEC52",288,0)
 S SDTMP=SDTMP_U_TYPEIEN_U_TYPENAME_U_DATE3_U_PADDRES1_U_PADDRES2_U_PADDRES3   ;35
"RTN","SDEC52",289,0)
 S SDTMP=SDTMP_U_PCITY_U_PSTATE_U_PCOUNTRY_U_PZIP4_U_GAF_U_SDSENS              ;41
"RTN","SDEC52",290,0)
 S SDTMP=SDTMP_U_U_PTPHONE_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_PRHBLOC           ;47
"RTN","SDEC52",291,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC52",292,0)
 Q
"RTN","SDEC52A")
0^96^B49259718^n/a
"RTN","SDEC52A",1,0)
SDEC52A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC52A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC52A",3,0)
 ;
"RTN","SDEC52A",4,0)
 Q
"RTN","SDEC52A",5,0)
 ;
"RTN","SDEC52A",6,0)
RECSET(SDECY,INP) ; SET/EDIT an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC52A",7,0)
 ;RECSET(SDECY,INP...)  external parameter tag is in SDEC
"RTN","SDEC52A",8,0)
 ;INPUT:
"RTN","SDEC52A",9,0)
 ;  INP - Input array
"RTN","SDEC52A",10,0)
 ;   INP(1) - (optional) IEN pointer to RECALL REMINDERS
"RTN","SDEC52A",11,0)
 ;                       a new entry will be added if null
"RTN","SDEC52A",12,0)
 ;   INP(2) - (required) DFN Pointer to PATIENT file
"RTN","SDEC52A",13,0)
 ;   INP(3) - (optional) Accession # (free-text 1-25 characters)
"RTN","SDEC52A",14,0)
 ;   INP(4) - (optional) COMMENT (free-text 1-80 characters)
"RTN","SDEC52A",15,0)
 ;   INP(5) - (optional) FAST/NON-FASTING  valid values:
"RTN","SDEC52A",16,0)
 ;                                           FASTING
"RTN","SDEC52A",17,0)
 ;                                           NON-FASTING
"RTN","SDEC52A",18,0)
 ;   INP(6) - (required) Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52A",19,0)
 ;   INP(7) - (required) Provider - Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52A",20,0)
 ;   INP(8) - (required) Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC52A",21,0)
 ;   INP(9) - (optional) Length of Appointment  numeric between 10 and 120
"RTN","SDEC52A",22,0)
 ;   INP(10) - (required) Recall Date in external format (no time)
"RTN","SDEC52A",23,0)
 ;   INP(11)- (optional) Recall Date (Per patient) in external format (no time)
"RTN","SDEC52A",24,0)
 ;   INP(12)- (optional) Date Reminder Sent in external format (no time)
"RTN","SDEC52A",25,0)
 ;   INP(13)- (optional) User Who Entered Recall pointer to NEW PERSON file; default to current user
"RTN","SDEC52A",26,0)
 ;   INP(14)- (optional) Second Print Date in external format (no time)
"RTN","SDEC52A",27,0)
 ;   INP(15)- (optional) DATE/TIME Recall Added in external format
"RTN","SDEC52A",28,0)
 ;RETURN:
"RTN","SDEC52A",29,0)
 ; Successful Return:
"RTN","SDEC52A",30,0)
 ;   Single Value return in the format "0^<Recall Reminders ien>"
"RTN","SDEC52A",31,0)
 ; Caught Exception Return:
"RTN","SDEC52A",32,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC52A",33,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC52A",34,0)
 ; Unexpected Exception Return:
"RTN","SDEC52A",35,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52A",36,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52A",37,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52A",38,0)
 ;     text back to the client.
"RTN","SDEC52A",39,0)
 ;
"RTN","SDEC52A",40,0)
 N APPTLEN,CLINIEN,DATE1,DATE,DATE2,DATE3,DAPTDT,DFN,FASTING,ORGDT
"RTN","SDEC52A",41,0)
 N PROVIEN,RECALLIEN,RRAPPTYP,RRNOD,RRPROVIEN
"RTN","SDEC52A",42,0)
 N SDFDA,SDIEN,SDMSG,SDRET
"RTN","SDEC52A",43,0)
 N X,Y,%DT
"RTN","SDEC52A",44,0)
 K ^TMP("SDEC52",$J,"RECSET")
"RTN","SDEC52A",45,0)
 ; data header
"RTN","SDEC52A",46,0)
 S SDECY="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC52A",47,0)
 ;
"RTN","SDEC52A",48,0)
 ;check IEN of RECALL REMINDERS if passed in (optional)
"RTN","SDEC52A",49,0)
 S RECALLIEN=$G(INP(1))
"RTN","SDEC52A",50,0)
 I RECALLIEN'="" I '$D(^SD(403.5,+RECALLIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS id."_$C(30,31) Q
"RTN","SDEC52A",51,0)
 I RECALLIEN'="" S RRNOD=$G(^SD(403.5,+RECALLIEN,0))
"RTN","SDEC52A",52,0)
 I RECALLIEN="" S RECALLIEN="+1"
"RTN","SDEC52A",53,0)
 ;
"RTN","SDEC52A",54,0)
 ;check provider (required)
"RTN","SDEC52A",55,0)
 S RRPROVIEN=$G(INP(7))
"RTN","SDEC52A",56,0)
 I +RRPROVIEN I '$D(^SD(403.54,+RRPROVIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS PROVIDERS id."_$C(30,31) Q
"RTN","SDEC52A",57,0)
 I '+RRPROVIEN,RECALLIEN="+1" S SDECY=SDECY_"-1^RECALL REMINDERS PROVIDERS id is required."_$C(30,31) Q
"RTN","SDEC52A",58,0)
 ;check that user has the correct security key
"RTN","SDEC52A",59,0)
 S SDRET=$$KEY(RRPROVIEN) I SDRET S SDECY=SDECY_SDRET_$C(30,31) Q
"RTN","SDEC52A",60,0)
 ;check for valid Patient (required)
"RTN","SDEC52A",61,0)
 S DFN=$G(INP(2))
"RTN","SDEC52A",62,0)
 I +DFN I '$D(^DPT(+DFN,0)) S SDECY=SDECY_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDEC52A",63,0)
 I '+DFN,RECALLIEN="+1" S SDECY=SDECY_"-1^Patient ID is required."_$C(30,31) Q
"RTN","SDEC52A",64,0)
 ;check Test/App pointer (required)
"RTN","SDEC52A",65,0)
 S RRAPPTYP=$G(INP(6))
"RTN","SDEC52A",66,0)
 I +RRAPPTYP I '$D(^SD(403.51,+RRAPPTYP)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS APPT TYPE id."_$C(30,31) Q
"RTN","SDEC52A",67,0)
 I '+RRAPPTYP,RECALLIEN="+1" S SDECY=SDECY_"-1^RECALL REMINDERS APPT TYPE is required."_$C(30,31) Q
"RTN","SDEC52A",68,0)
 ;check Clinic (required)
"RTN","SDEC52A",69,0)
 S CLINIEN=$G(INP(8))
"RTN","SDEC52A",70,0)
 I +CLINIEN I '$D(^SC(+CLINIEN)) S SDECY=SDECY_"-1^Invalid Clinic id."_$C(30,31) Q
"RTN","SDEC52A",71,0)
 I '+CLINIEN,RECALLIEN="+1" S SDECY=SDECY_"-1^Clinic ID is required."_$C(30,31) Q
"RTN","SDEC52A",72,0)
 ;check Recall Date (required)
"RTN","SDEC52A",73,0)
 S DATE=$G(INP(10))
"RTN","SDEC52A",74,0)
 I DATE'="" S %DT="" S X=$P(DATE,"@",1) D ^%DT S DATE=Y I Y=-1 S SDECY=SDECY_"-1^Invalid Recall Date."_$C(30,31) Q
"RTN","SDEC52A",75,0)
 I DATE="",RECALLIEN="+1" S SDECY=SDECY_"-1^Recall Date is required."_$C(30,31) Q
"RTN","SDEC52A",76,0)
 ;
"RTN","SDEC52A",77,0)
 ;check FAST/NON-FASTING (optional)
"RTN","SDEC52A",78,0)
 S FASTING=$G(INP(5))
"RTN","SDEC52A",79,0)
 I FASTING'="" S FASTING=$S($$UP^XLFSTR(FASTING)="FASTING":"f",$$UP^XLFSTR(FASTING)="NON-FASTING":"n",$$UP^XLFSTR(FASTING)="F":"f",$$UP^XLFSTR(FASTING)="N":"n",1:"")
"RTN","SDEC52A",80,0)
 ;check Length of Appointment (optional)
"RTN","SDEC52A",81,0)
 S APPTLEN=$G(INP(9))
"RTN","SDEC52A",82,0)
 I APPTLEN'="" I APPTLEN<10,APPTLEN>120 S APPTLEN=""
"RTN","SDEC52A",83,0)
 ;check Recall Date (per Patient) (optional)
"RTN","SDEC52A",84,0)
 S DATE1=$G(INP(11))
"RTN","SDEC52A",85,0)
 I DATE1'="" S %DT="" S X=$P(DATE1,"@",1) D ^%DT S DATE1=Y I Y=-1 S DATE1=""
"RTN","SDEC52A",86,0)
 ;check date reminder sent (optional)
"RTN","SDEC52A",87,0)
 S DAPTDT=$G(INP(12))
"RTN","SDEC52A",88,0)
 I DAPTDT'="" S %DT="" S X=$P(DAPTDT,"@",1) D ^%DT S DAPTDT=Y I Y=-1 S ORGDT=""
"RTN","SDEC52A",89,0)
 ;check User Who Entered Recall (optional) default to current
"RTN","SDEC52A",90,0)
 S PROVIEN=$G(INP(13))
"RTN","SDEC52A",91,0)
 I (PROVIEN="")!('$D(^VA(200,+PROVIEN))) S PROVIEN=DUZ
"RTN","SDEC52A",92,0)
 ;check Second Print date (optional)
"RTN","SDEC52A",93,0)
 S DATE2=$G(INP(14))
"RTN","SDEC52A",94,0)
 I DATE2="" S %DT="" S X=$P(DATE2,"@",1) D ^%DT S DATE2=Y I Y=-1 S DATE2=""
"RTN","SDEC52A",95,0)
 ;check DATE/TIME RECALL ADDED (optional)
"RTN","SDEC52A",96,0)
 S DATE3=$G(INP(15))
"RTN","SDEC52A",97,0)
 I DATE3'="" S %DT="" S X=$P(DATE3,"@",1) D ^%DT S DATE3=Y I Y=-1 S DATE3=""
"RTN","SDEC52A",98,0)
 I DATE3'="",$G(RRNOD)'="",$P(RRNOD,U,14)'="" S DATE3=""   ;only add DATE/TIME RECALL ADDED if it is not already there
"RTN","SDEC52A",99,0)
 ;
"RTN","SDEC52A",100,0)
 S SDFDA=$NA(SDFDA(403.5,RECALLIEN_","))
"RTN","SDEC52A",101,0)
 S @SDFDA@(.01)=DFN
"RTN","SDEC52A",102,0)
 S:$G(INP(3))'="" @SDFDA@(2)=$E(INP(3),1,25)
"RTN","SDEC52A",103,0)
 S:$G(INP(4))'="" @SDFDA@(2.5)=$E(INP(4),1,80)
"RTN","SDEC52A",104,0)
 S:$G(FASTING)'="" @SDFDA@(2.6)=FASTING
"RTN","SDEC52A",105,0)
 S @SDFDA@(3)=RRAPPTYP
"RTN","SDEC52A",106,0)
 S @SDFDA@(4)=RRPROVIEN
"RTN","SDEC52A",107,0)
 S @SDFDA@(4.5)=CLINIEN
"RTN","SDEC52A",108,0)
 S:APPTLEN'="" @SDFDA@(4.7)=APPTLEN
"RTN","SDEC52A",109,0)
 S @SDFDA@(5)=DATE
"RTN","SDEC52A",110,0)
 S:DATE1'="" @SDFDA@(5.5)=DATE1
"RTN","SDEC52A",111,0)
 S:DAPTDT'="" @SDFDA@(6)=DAPTDT
"RTN","SDEC52A",112,0)
 S @SDFDA@(7)=PROVIEN
"RTN","SDEC52A",113,0)
 S:DATE3'="" @SDFDA@(7.5)=DATE3
"RTN","SDEC52A",114,0)
 S:DATE2'="" @SDFDA@(8)=DATE2
"RTN","SDEC52A",115,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC52A",116,0)
 S:RECALLIEN="+1" RECALLIEN=SDIEN(1)
"RTN","SDEC52A",117,0)
 I $D(SDMSG) S SDECY=SDECY_"-1^Error updating RECALL REMINDERS file"_$C(30,31)
"RTN","SDEC52A",118,0)
 I '$D(SDMSG) S SDECY=SDECY_"0^"_$S(RECALLIEN'="":RECALLIEN,1:SDIEN(1))_$C(30,31)
"RTN","SDEC52A",119,0)
 Q
"RTN","SDEC52A",120,0)
 ;
"RTN","SDEC52A",121,0)
RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM) ; DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC52A",122,0)
 ;RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM)  external parameter tag is in SDEC
"RTN","SDEC52A",123,0)
 ;INPUT:
"RTN","SDEC52A",124,0)
 ;  INP - Input array
"RTN","SDEC52A",125,0)
 ;   RECALLIEN - (required) IEN pointer to RECALL REMINDERS
"RTN","SDEC52A",126,0)
 ;   SDRRFTR   - (optional) Recall Disposition used to populate the
"RTN","SDEC52A",127,0)
 ;                          DELETE REASON field in the RECALL REMINDERS
"RTN","SDEC52A",128,0)
 ;                          REMOVED file 403.56 when an entry is removed
"RTN","SDEC52A",129,0)
 ;                          from RECALL REMINDERS file. Valid Values are:
"RTN","SDEC52A",130,0)
 ;                            FAILURE TO RESPOND
"RTN","SDEC52A",131,0)
 ;                            MOVED
"RTN","SDEC52A",132,0)
 ;                            DECEASED
"RTN","SDEC52A",133,0)
 ;                            DOESN'T WANT VA SERVICES
"RTN","SDEC52A",134,0)
 ;                            RECEIVED CARE AT ANOTHER VA
"RTN","SDEC52A",135,0)
 ;                            OTHER
"RTN","SDEC52A",136,0)
 ;                            APPT SCHEDULED
"RTN","SDEC52A",137,0)
 ;   SDCOMM  - (optional) Text to replace the text in the COMMENT
"RTN","SDEC52A",138,0)
 ;                        Field 2.5 in RECALL REMINDERS prior to the
"RTN","SDEC52A",139,0)
 ;                       delete which moves the data including this
"RTN","SDEC52A",140,0)
 ;                       comment to RECALL REMINDERS REMOVED
"RTN","SDEC52A",141,0)
 ;RETURN:
"RTN","SDEC52A",142,0)
 ; Successful Return:
"RTN","SDEC52A",143,0)
 ;   Single Value return in the format "0^<Recall Reminders ien>"
"RTN","SDEC52A",144,0)
 ; Caught Exception Return:
"RTN","SDEC52A",145,0)
 ;   Single Value return in the format "-1^<error text>"
"RTN","SDEC52A",146,0)
 ;   "T00020ERRORID^T00100ERRORTEXT"
"RTN","SDEC52A",147,0)
 ; Unexpected Exception Return:
"RTN","SDEC52A",148,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52A",149,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52A",150,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52A",151,0)
 ;     text back to the client.
"RTN","SDEC52A",152,0)
 ;
"RTN","SDEC52A",153,0)
 N APPTLEN,DATE1,DATE,DATE2,DAPTDT,DFN,FASTING,PROVIEN,RRAPPTYP,SDFDA,SDIEN,SDMSG,SDRET
"RTN","SDEC52A",154,0)
 ; data header
"RTN","SDEC52A",155,0)
 S SDECY="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC52A",156,0)
 ;
"RTN","SDEC52A",157,0)
 ;check IEN of RECALL REMINDERS (required)
"RTN","SDEC52A",158,0)
 I (RECALLIEN="")!('$D(^SD(403.5,+RECALLIEN))) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS id."_$C(30,31) Q
"RTN","SDEC52A",159,0)
 ;check disposition (optional)
"RTN","SDEC52A",160,0)
 S SDRRFTR=$G(SDRRFTR)
"RTN","SDEC52A",161,0)
 I SDRRFTR'="" S SDRRFTR=$S(SDRRFTR="FAILURE TO RESPOND":1,SDRRFTR="MOVED":2,SDRRFTR="DECEASED":3,SDRRFTR="DOESN'T WANT VA SERVICES":4,SDRRFTR="RECEIVED CARE AT ANOTHER VA":5,SDRRFTR="OTHER":6,SDRRFTR="APPT SCHEDULED":7,1:"")
"RTN","SDEC52A",162,0)
 I SDRRFTR="" K SDRRFTR
"RTN","SDEC52A",163,0)
 ;
"RTN","SDEC52A",164,0)
 ;check provider (required)
"RTN","SDEC52A",165,0)
 ;I +RRPROVIEN I '$D(^SD(403.54,+RRPROVIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS PROVIDERS id."_$C(30,31) Q
"RTN","SDEC52A",166,0)
 ;I '+RRPROVIEN S SDECY=SDECY_"-1^RECALL REMINDERS PROVIDERS id is required."_$C(30,31) Q
"RTN","SDEC52A",167,0)
 S RRPROVIEN=$P($G(^SD(403.5,+RECALLIEN,0)),U,5)
"RTN","SDEC52A",168,0)
 I '$D(^SD(403.54,+RRPROVIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS PROVIDERS defined in RECALL REMINDERS file for id "_RECALLIEN_"."_$C(30,31) Q
"RTN","SDEC52A",169,0)
 ;
"RTN","SDEC52A",170,0)
 ;verify comment (optional)
"RTN","SDEC52A",171,0)
 S SDCOMM=$G(SDCOMM)
"RTN","SDEC52A",172,0)
 I SDCOMM'="" D  ;replace existing comment before calling move/delete
"RTN","SDEC52A",173,0)
 .K SDFDA
"RTN","SDEC52A",174,0)
 .S SDFDA(403.5,RECALLIEN_",",2.5)=$E(SDCOMM,1,80)
"RTN","SDEC52A",175,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC52A",176,0)
 ;
"RTN","SDEC52A",177,0)
 S SDRET=$$RECSETD(RECALLIEN,RRPROVIEN)
"RTN","SDEC52A",178,0)
 S SDECY=SDECY_SDRET_$C(30,31)
"RTN","SDEC52A",179,0)
 Q
"RTN","SDEC52A",180,0)
 ;
"RTN","SDEC52A",181,0)
RECSETD(RECALLIEN,RRPROVIEN) ;delete entry
"RTN","SDEC52A",182,0)
 ;INPUT
"RTN","SDEC52A",183,0)
 ; RECALLIEN - Pointer to RECALL REMINDERS file
"RTN","SDEC52A",184,0)
 ; RRPROVIEN
"RTN","SDEC52A",185,0)
 ;RETURN
"RTN","SDEC52A",186,0)
 ; "0^<TEXT>"  = delete successful
"RTN","SDEC52A",187,0)
 ; "-1^<TEXT>" = delete unsuccessful
"RTN","SDEC52A",188,0)
 N RET,SDFDA,SDIEN,SDMSG
"RTN","SDEC52A",189,0)
 S RET=$$KEY(RECALLIEN,RRPROVIEN)
"RTN","SDEC52A",190,0)
 Q:RET RET
"RTN","SDEC52A",191,0)
 S SDFDA=$NA(SDFDA(403.5,RECALLIEN_","))
"RTN","SDEC52A",192,0)
 S @SDFDA@(.01)="@"
"RTN","SDEC52A",193,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC52A",194,0)
 I $D(SDMSG) S RET="-1^Error deleting RECALL REMINDERS file"_$C(30,31)
"RTN","SDEC52A",195,0)
 I '$D(SDMSG) S RET="0^"_RECALLIEN
"RTN","SDEC52A",196,0)
 Q RET
"RTN","SDEC52A",197,0)
 ;
"RTN","SDEC52A",198,0)
KEY(RECALLIEN,RRPROVIEN) ;check that user has the correct SECURITY KEY
"RTN","SDEC52A",199,0)
 ;INPUT:
"RTN","SDEC52A",200,0)
 ; RRPROVIEN - Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52A",201,0)
 ;RETURN
"RTN","SDEC52A",202,0)
 ;  0=User has the correct SECURITY KEY
"RTN","SDEC52A",203,0)
 ;  "-1^<text>" = User does not have the correct SECURITY KEY
"RTN","SDEC52A",204,0)
 N KEY,KY,RET,SDPRV,SDFLAG
"RTN","SDEC52A",205,0)
 S RET="-1^THE PROVIDER ASSIGNED TO THIS RECALL REMINDER IS ASSIGNED A SECURITY KEY WHICH YOU DO NOT HAVE. PLEASE CONTACT YOUR RECALL COORDINATOR."
"RTN","SDEC52A",206,0)
 S (SDPRV,KEY,SDFLAG)="" S SDPRV=$P($G(^SD(403.5,+RECALLIEN,0)),U,5) D
"RTN","SDEC52A",207,0)
 .I SDPRV="" S RET=0
"RTN","SDEC52A",208,0)
 .I SDPRV'="" S KEY=$P($G(^SD(403.54,SDPRV,0)),U,7) D
"RTN","SDEC52A",209,0)
 ..I KEY="" S RET=0 Q
"RTN","SDEC52A",210,0)
 ..N VALUE
"RTN","SDEC52A",211,0)
 ..S VALUE=$$LKUP^XPDKEY(KEY) K KY D OWNSKEY^XUSRB(.KY,VALUE,DUZ)
"RTN","SDEC52A",212,0)
 ..I $G(KY(0))'=0 S RET=0
"RTN","SDEC52A",213,0)
 Q RET
"RTN","SDEC52B")
0^152^B20509023^n/a
"RTN","SDEC52B",1,0)
SDEC52B ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC52B",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC52B",3,0)
 ;
"RTN","SDEC52B",4,0)
 Q
"RTN","SDEC52B",5,0)
 ;
"RTN","SDEC52B",6,0)
RECAPGET(SDECY) ; GET entries from the RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52B",7,0)
 ;RECAPGET(SDECY)  external parameter tag is in SDEC
"RTN","SDEC52B",8,0)
 ;INPUT: none
"RTN","SDEC52B",9,0)
 ;RETURN:
"RTN","SDEC52B",10,0)
 ; Successful Return:
"RTN","SDEC52B",11,0)
 ;   Global Array in which each array entry contains Recall Reminders Appt
"RTN","SDEC52B",12,0)
 ;   type names from the RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52B",13,0)
 ;    Data is separated by ^:
"RTN","SDEC52B",14,0)
 ;      1. RECALL REMINDERS APPT TYPE ien
"RTN","SDEC52B",15,0)
 ;      2. RECALL REMINDERS APPT TYPE name
"RTN","SDEC52B",16,0)
 ; Caught Exception Return:
"RTN","SDEC52B",17,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC52B",18,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC52B",19,0)
 ; Unexpected Exception Return:
"RTN","SDEC52B",20,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52B",21,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52B",22,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52B",23,0)
 ;     text back to the client.
"RTN","SDEC52B",24,0)
 ;
"RTN","SDEC52B",25,0)
 N NAME,SDECI,SDI
"RTN","SDEC52B",26,0)
 S SDECI=0
"RTN","SDEC52B",27,0)
 K ^TMP("SDEC52",$J,"RECAPGET")
"RTN","SDEC52B",28,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECAPGET"")"
"RTN","SDEC52B",29,0)
 ; data header
"RTN","SDEC52B",30,0)
 S @SDECY@(SDECI)="T00030RRAPPTYP^T00030RRAPPTYPN"_$C(30)
"RTN","SDEC52B",31,0)
 S SDI=0 F  S SDI=$O(^SD(403.51,SDI)) Q:SDI'>0  D
"RTN","SDEC52B",32,0)
 .S NAME=$$GET1^DIQ(403.51,SDI_",",.01)   ; $P($G(^SD(403.51,SDI,0)),U,1)
"RTN","SDEC52B",33,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDI_U_NAME_$C(30)
"RTN","SDEC52B",34,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC52B",35,0)
 Q
"RTN","SDEC52B",36,0)
 ;
"RTN","SDEC52B",37,0)
RECPRGET(SDECY,RECINACT,SDECP,MAXREC,LASTSUB) ; GET entries from the RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52B",38,0)
 ;RECAPGET(SDECY,RECINACT)  external parameter tag is in SDEC
"RTN","SDEC52B",39,0)
 ;INPUT:
"RTN","SDEC52B",40,0)
 ; RECINACT - flag to include inactive providers
"RTN","SDEC52B",41,0)
 ; SDECP    - (optional) Partial name text
"RTN","SDEC52B",42,0)
 ; MAXREC   - (optional) Max records returned
"RTN","SDEC52B",43,0)
 ; LASTSUB  - (optional) last subscripts from previous call
"RTN","SDEC52B",44,0)
 ;RETURN:
"RTN","SDEC52B",45,0)
 ; Successful Return:
"RTN","SDEC52B",46,0)
 ;   Global Array in which each array entry contains data from RECALL REMINDERS PROVIDERS file 403.54.
"RTN","SDEC52B",47,0)
 ;   Data is separated by ^:
"RTN","SDEC52B",48,0)
 ;     1. IEN - Pointer to RECALL REMINDERS PROVIDERS file
"RTN","SDEC52B",49,0)
 ;     2. Provider IEN - Pointer to NEW PERSON file
"RTN","SDEC52B",50,0)
 ;     3. Provider Name - NAME from NEW PERSON file
"RTN","SDEC52B",51,0)
 ;     4. Team ID - Pointer to RECALL REMINDERS TEAM file 403.55
"RTN","SDEC52B",52,0)
 ;     5. Team Name - NAME from RECALL REMINDERS TEAM file 403.55
"RTN","SDEC52B",53,0)
 ;     6. Division ID - Pointer to MEDICAL CENTER DIVISION file 40.8
"RTN","SDEC52B",54,0)
 ;     7. Division Name - NAME from MEDICAL CENTER DIVISION file 40.8
"RTN","SDEC52B",55,0)
 ;     8. Direct Phone - Free-Text 7-14 Characters
"RTN","SDEC52B",56,0)
 ;     9. EXT. - Free-Text 4-20 characters
"RTN","SDEC52B",57,0)
 ;    10. Status - Valid values are:
"RTN","SDEC52B",58,0)
 ;                 ACTIVE
"RTN","SDEC52B",59,0)
 ;                 INACTIVE
"RTN","SDEC52B",60,0)
 ;    11. Security Key ID - Pointer to SECURITY KEY file 19.1
"RTN","SDEC52B",61,0)
 ;    12. Security Key Name - NAME from SECURITY KEY file 19.1
"RTN","SDEC52B",62,0)
 ;    13. LASTSUB - Subscripts from last call
"RTN","SDEC52B",63,0)
 ; Caught Exception Return:
"RTN","SDEC52B",64,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC52B",65,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC52B",66,0)
 ; Unexpected Exception Return:
"RTN","SDEC52B",67,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52B",68,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52B",69,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52B",70,0)
 ;     text back to the client.
"RTN","SDEC52B",71,0)
 ;
"RTN","SDEC52B",72,0)
 N LSUB,PRVDATA,SDCNT,SDECI,SDI,SDJ,SDK,SDTMP
"RTN","SDEC52B",73,0)
 S (SDI,SDJ,SDK)=""
"RTN","SDEC52B",74,0)
 S (SDCNT,SDECI)=0
"RTN","SDEC52B",75,0)
 K ^TMP("RECDATA",$J)
"RTN","SDEC52B",76,0)
 S RECINACT=$G(RECINACT)
"RTN","SDEC52B",77,0)
 I RECINACT="" S RECINACT=0
"RTN","SDEC52B",78,0)
 K ^TMP("SDEC52",$J,"RECPRGET")
"RTN","SDEC52B",79,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECPRGET"")"
"RTN","SDEC52B",80,0)
 ; data header
"RTN","SDEC52B",81,0)
 S SDTMP="T00030RRPROVIEN^T00030PROVIEN^T00030PROVNAME^T00030TEAMID^T00030TEAMNAME^T00030DIVIEN"
"RTN","SDEC52B",82,0)
 S SDTMP=SDTMP_"^T00030DIVNAME^T00030PTELEPHONE^T00020EXT^T00010RRPSTATUS^T00020KEYIEN^T00030KEYNAME"
"RTN","SDEC52B",83,0)
 S SDTMP=SDTMP_"^T00030LASTSUB"
"RTN","SDEC52B",84,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC52B",85,0)
 S SDECP=$G(SDECP)
"RTN","SDEC52B",86,0)
 S MAXREC=$G(MAXREC,200) S:MAXREC="" MAXREC=200
"RTN","SDEC52B",87,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC52B",88,0)
 I SDECP'="" D
"RTN","SDEC52B",89,0)
 .S SDK=$S($P(LASTSUB,"|",1)'="":$$GETSUB^SDECU($P(LASTSUB,"|",1)),1:$$GETSUB^SDECU(SDECP))
"RTN","SDEC52B",90,0)
 .F  S SDK=$O(^VA(200,"B",SDK)) Q:SDK=""  Q:SDK'[SDECP  D  Q:SDCNT'<MAXREC
"RTN","SDEC52B",91,0)
 ..S SDJ=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:0)
"RTN","SDEC52B",92,0)
 ..F  S SDJ=$O(^VA(200,"B",SDK,SDJ)) Q:SDJ'>0  D  Q:SDCNT'<MAXREC
"RTN","SDEC52B",93,0)
 ...S SDI=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDEC52B",94,0)
 ...F  S SDI=$O(^SD(403.54,"B",SDJ,SDI)) Q:SDI'>0  D GET1PR(SDI,RECINACT,.SDCNT) Q:SDCNT'<MAXREC
"RTN","SDEC52B",95,0)
 E  S SDI=0 F  S SDI=$O(^SD(403.54,SDI)) Q:SDI'>0  D GET1PR(SDI,RECINACT,.SDCNT)
"RTN","SDEC52B",96,0)
 N PRVNAME
"RTN","SDEC52B",97,0)
 S PRVNAME=""
"RTN","SDEC52B",98,0)
 F  S PRVNAME=$O(^TMP("RECDATA",$J,PRVNAME)) Q:PRVNAME=""  D
"RTN","SDEC52B",99,0)
 .S PRVDATA=$G(^TMP("RECDATA",$J,PRVNAME))
"RTN","SDEC52B",100,0)
 .S SDECI=SDECI+1
"RTN","SDEC52B",101,0)
 .S @SDECY@(SDECI)=PRVDATA_$C(30)
"RTN","SDEC52B",102,0)
 .S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC52B",103,0)
 I SDCNT'<MAXREC,SDECP'="",SDK[SDECP D
"RTN","SDEC52B",104,0)
 .S SDTMP=$P(@SDECY@(SDECI),$C(30,31),1)
"RTN","SDEC52B",105,0)
 .S $P(SDTMP,U,13)=SDK_"|"_SDJ_"|"_SDI
"RTN","SDEC52B",106,0)
 .S @SDECY@(SDECI)=SDTMP_$C(30,31)
"RTN","SDEC52B",107,0)
 K ^TMP("RECDATA",$J)
"RTN","SDEC52B",108,0)
 Q
"RTN","SDEC52B",109,0)
GET1PR(SDI,RECINACT,SDCNT)  ;
"RTN","SDEC52B",110,0)
 N SDDATA,SDMSG
"RTN","SDEC52B",111,0)
 N RRPSTATUS,DIVIEN,DIVNAME,EXT,KEYIEN,KEYNAME,PROVIEN,PROVNAME,TEAMID,TEAMNAME,PTELE
"RTN","SDEC52B",112,0)
 D GETS^DIQ(403.54,SDI,"**","IE","SDDATA","SDMSG")
"RTN","SDEC52B",113,0)
 S PROVIEN=SDDATA(403.54,SDI_",",.01,"I")
"RTN","SDEC52B",114,0)
 S PROVNAME=SDDATA(403.54,SDI_",",.01,"E")
"RTN","SDEC52B",115,0)
 S TEAMID=SDDATA(403.54,SDI_",",1,"I")
"RTN","SDEC52B",116,0)
 S TEAMNAME=SDDATA(403.54,SDI_",",1,"E")
"RTN","SDEC52B",117,0)
 S DIVIEN=SDDATA(403.54,SDI_",",2,"I")
"RTN","SDEC52B",118,0)
 S DIVNAME=SDDATA(403.54,SDI_",",2,"E")
"RTN","SDEC52B",119,0)
 S PTELE=SDDATA(403.54,SDI_",",3,"I")
"RTN","SDEC52B",120,0)
 S EXT=SDDATA(403.54,SDI_",",4,"I")
"RTN","SDEC52B",121,0)
 S RRPSTATUS=SDDATA(403.54,SDI_",",5,"E")
"RTN","SDEC52B",122,0)
 S KEYIEN=SDDATA(403.54,SDI_",",6,"I")
"RTN","SDEC52B",123,0)
 S KEYNAME=SDDATA(403.54,SDI_",",6,"E")
"RTN","SDEC52B",124,0)
 Q:RRPSTATUS="INACTIVE"&(RECINACT=0)
"RTN","SDEC52B",125,0)
 S SDCNT=SDCNT+1
"RTN","SDEC52B",126,0)
 S ^TMP("RECDATA",$J,PROVNAME)=SDI_U_PROVIEN_U_PROVNAME_U_TEAMID_U_TEAMNAME_U_DIVIEN_U_DIVNAME_U_PTELE_U_EXT_U_RRPSTATUS_U_KEYIEN_U_KEYNAME
"RTN","SDEC52B",127,0)
 Q
"RTN","SDEC53")
0^110^B19046849^n/a
"RTN","SDEC53",1,0)
SDEC53 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC53",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC53",3,0)
 ;
"RTN","SDEC53",4,0)
 Q
"RTN","SDEC53",5,0)
 ;
"RTN","SDEC53",6,0)
PTSET(SDECY,INP) ;SET patient demographics
"RTN","SDEC53",7,0)
 ;PTSET(SDECY,INP...)  external parameter tag is in SDEC
"RTN","SDEC53",8,0)
 ;INPUT:
"RTN","SDEC53",9,0)
 ;  all input except DFN is optional
"RTN","SDEC53",10,0)
 ;  INP(1)  = DFN       - (required) pointer to PATIENT file
"RTN","SDEC53",11,0)
 ;  INP(2)  = RACE      -  pointer to the RACE file 10
"RTN","SDEC53",12,0)
 ;                         Each pipe piece contains the following pieces (Race1;;Method1|Race2;;Method2):
"RTN","SDEC53",13,0)
 ;                         RACE INFORMATION - pointer to the RACE file 10
"RTN","SDEC53",14,0)
 ;                         METHOD OF COLLECTION - pointer to the RACE AND ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC53",15,0)
 ;  INP(3)  = ETHNICITY -  multiple Ethnicity separated by pipe |
"RTN","SDEC53",16,0)
 ;                         Each pipe piece contains the following ;; pieces:
"RTN","SDEC53",17,0)
 ;              ETHNICITY INFORMATION - pointer to the ETHNICITY file 10.2
"RTN","SDEC53",18,0)
 ;              METHOD OF COLLECTION - pointer to the ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC53",19,0)
 ;  INP(4)  = ADDRESS1 - Street Address (Line 1) Free text 3-30 characters
"RTN","SDEC53",20,0)
 ;  INP(5)  = ADDRESS2 - Street Address (Line 2) Free text 3-30 characters
"RTN","SDEC53",21,0)
 ;  INP(6)  = ADDRESS3 - Street Address (Line 3) Free text 3-30 characters
"RTN","SDEC53",22,0)
 ;  INP(7)  = ZIP CODE - Zip+4 Free text of 5 or 9 digits
"RTN","SDEC53",23,0)
 ;  INP(8)  = CITY     - Free text 2-15 characters
"RTN","SDEC53",24,0)
 ;  INP(9)  = STATE    - pointer to STATE file 5
"RTN","SDEC53",25,0)
 ;  INP(10)  = COUNTRY  - pointer to COUNTRY CODE file 779.004
"RTN","SDEC53",26,0)
 ;  INP(11) = BAD ADDRESS INDICATOR - Valid Values:
"RTN","SDEC53",27,0)
 ;                  UNDELIVERABLE
"RTN","SDEC53",28,0)
 ;                  HOMELESS
"RTN","SDEC53",29,0)
 ;                  OTHER
"RTN","SDEC53",30,0)
 ;                  ADDRESS NOT FOUND
"RTN","SDEC53",31,0)
 ;  INP(12) = PHONE (RESIDENCE) - free text 4-20 characters
"RTN","SDEC53",32,0)
 ;  INP(13) = PHONE (WORK)      - free text 4-20 characters
"RTN","SDEC53",33,0)
 ;RETURN:
"RTN","SDEC53",34,0)
 ; Successful Return:
"RTN","SDEC53",35,0)
 ;   Single Value return in the format "0^"
"RTN","SDEC53",36,0)
 ; Caught Exception Return:
"RTN","SDEC53",37,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC53",38,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC53",39,0)
 ; Unexpected Exception Return:
"RTN","SDEC53",40,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC53",41,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC53",42,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC53",43,0)
 ;     text back to the client.
"RTN","SDEC53",44,0)
 N ADD1,ADD2,ADD3,BADADD,CITY,COUNTRY,DFN,ETH,ETHN,ETHN1,PHONER,PHONEW,RACE,STATE,ZIP
"RTN","SDEC53",45,0)
 N SDECI,SDFDA,SDI,SDIN,SDMSG,RACEN,RACEN1
"RTN","SDEC53",46,0)
 S SDECI=0
"RTN","SDEC53",47,0)
 S SDECY="^TMP(""SDEC53"","_$J_",""PTSET"")"
"RTN","SDEC53",48,0)
 K @SDECY
"RTN","SDEC53",49,0)
 ; data header
"RTN","SDEC53",50,0)
 S @SDECY@(0)="T00030RETURNCODE^T00030TEXT"_$C(30)
"RTN","SDEC53",51,0)
 ;check for valid Patient
"RTN","SDEC53",52,0)
 S DFN=$G(INP(1))
"RTN","SDEC53",53,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC53",54,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC53",55,0)
 ;check RACE
"RTN","SDEC53",56,0)
 ;S RACE=$G(INP(2))
"RTN","SDEC53",57,0)
 ;I RACE'="" I '$D(^DIC(10,RACE,0)) S RACE=""
"RTN","SDEC53",58,0)
 S RACEN=$G(INP(2))
"RTN","SDEC53",59,0)
 I RACEN'="" D
"RTN","SDEC53",60,0)
 .S RACEN1="" F SDI=1:1:$L(RACEN,"|") D
"RTN","SDEC53",61,0)
 ..S SDIN=$P(RACEN,"|",SDI)
"RTN","SDEC53",62,0)
 ..I $D(^DIC(10,+$P(SDIN,";;"),0)) D
"RTN","SDEC53",63,0)
 ...I $P(SDIN,";;",2)'="",$D(^DIC(10.3,+$P(SDIN,";;",2),0)) S RACEN1=$S(RACEN1'="":RACEN1_"|",1:"")_SDIN
"RTN","SDEC53",64,0)
 ...I $P(SDIN,";;",2)="" S RACEN1=$S(RACEN1'="":RACEN1_"|",1:"")_SDIN
"RTN","SDEC53",65,0)
 .S RACEN=RACEN1
"RTN","SDEC53",66,0)
 ;check ethnicity
"RTN","SDEC53",67,0)
 S ETHN=$G(INP(3))
"RTN","SDEC53",68,0)
 I ETHN'="" D
"RTN","SDEC53",69,0)
 .S ETHN1="" F SDI=1:1:$L(ETHN,"|") D
"RTN","SDEC53",70,0)
 ..S SDIN=$P(ETHN,"|",SDI)
"RTN","SDEC53",71,0)
 ..I $D(^DIC(10.2,+$P(SDIN,";;",1),0)) D
"RTN","SDEC53",72,0)
 ...I $P(SDIN,";;",2)'="",$D(^DIC(10.3,+$P(SDIN,";;",2),0)) S ETHN1=$S(ETHN1'="":ETHN1_"|",1:"")_SDIN
"RTN","SDEC53",73,0)
 ...I $P(SDIN,";;",2)="" S ETHN1=$S(ETHN1'="":ETHN1_"|",1:"")_SDIN
"RTN","SDEC53",74,0)
 .S ETHN=ETHN1
"RTN","SDEC53",75,0)
 ;check zip
"RTN","SDEC53",76,0)
 S ZIP=$G(INP(7))
"RTN","SDEC53",77,0)
 I ZIP'="" I $L(ZIP)'=5,$L(ZIP)'=9 S @SDECY@(1)="-1^Invalid ZIP."_$C(30,31) ;S ZIP=""
"RTN","SDEC53",78,0)
 ;check state
"RTN","SDEC53",79,0)
 S STATE=$G(INP(9))
"RTN","SDEC53",80,0)
 I STATE'="" I '$D(^DIC(5,+STATE,0)) S @SDECY@(1)="-1^Invalid State ID."_$C(30,31) Q  ;S STATE=""
"RTN","SDEC53",81,0)
 ;check country
"RTN","SDEC53",82,0)
 S COUNTRY=$G(INP(10))
"RTN","SDEC53",83,0)
 I COUNTRY'="" I '$D(^HL(779.004,+COUNTRY,0)) S @SDECY@(1)="-1^Invalid COUNTRY ID."_$C(30,31) Q  ;S COUNTRY=""
"RTN","SDEC53",84,0)
 S BADADD=$G(INP(11))
"RTN","SDEC53",85,0)
 I BADADD'="" S BADADD=$S(BADADD="UNDELIVERABLE":1,BADADD="HOMELESS":2,BADADD="OTHER":3,BADADD="ADDRESS NOT FOUND":4,1:"")
"RTN","SDEC53",86,0)
 S SDFDA="SDFDA(2,DFN_"","")"
"RTN","SDEC53",87,0)
 ;S:RACE'="" @SDFDA@(.06)=RACE
"RTN","SDEC53",88,0)
 S:$G(INP(4))'="" @SDFDA@(.111)=INP(4)
"RTN","SDEC53",89,0)
 S:$G(INP(5))'="" @SDFDA@(.112)=INP(5)
"RTN","SDEC53",90,0)
 S:$G(INP(6))'="" @SDFDA@(.113)=INP(6)
"RTN","SDEC53",91,0)
 S:ZIP'="" @SDFDA@(.1112)=ZIP
"RTN","SDEC53",92,0)
 S:$G(INP(8))'="" @SDFDA@(.114)=INP(8)
"RTN","SDEC53",93,0)
 S:STATE'="" @SDFDA@(.115)=STATE
"RTN","SDEC53",94,0)
 S:COUNTRY'="" @SDFDA@(.1173)=COUNTRY
"RTN","SDEC53",95,0)
 S:BADADD'="" @SDFDA@(.121)=BADADD
"RTN","SDEC53",96,0)
 S:$G(INP(12))'="" @SDFDA@(.131)=INP(12)
"RTN","SDEC53",97,0)
 S:$G(INP(13))'="" @SDFDA@(.132)=INP(13)
"RTN","SDEC53",98,0)
 ;D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDEC53",99,0)
 I $D(SDFDA)=11 D UPDATE^DIE("","SDFDA")
"RTN","SDEC53",100,0)
 I $D(SDMSG) D ERR1^SDECERR(-1,"Error storing data.",SDECI,SDECY) Q
"RTN","SDEC53",101,0)
 I RACEN'="" F SDI=1:1:$L(RACEN,"|") D
"RTN","SDEC53",102,0)
 .K SDFDA
"RTN","SDEC53",103,0)
 .S SDIN=$P(RACEN,"|",SDI)
"RTN","SDEC53",104,0)
 .S RACE=$O(^DPT(DFN,.02,"B",$P(SDIN,";;"),0))
"RTN","SDEC53",105,0)
 .S RACE=$S(RACE'="":RACE,1:"+1")
"RTN","SDEC53",106,0)
 .S SDFDA="SDFDA(2.02,"_$S(RACE'="":RACE_""",""",1:"""+1")_""","_DFN_",)"
"RTN","SDEC53",107,0)
 .S SDFDA=$NA(SDFDA(2.02,RACE_","_DFN_","))
"RTN","SDEC53",108,0)
 .S @SDFDA@(.01)=$P(SDIN,";;")
"RTN","SDEC53",109,0)
 .S:$P(SDIN,";;",2)'="" @SDFDA@(.02)=$P(SDIN,";;",2)
"RTN","SDEC53",110,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC53",111,0)
 I ETHN'="" F SDI=1:1:$L(ETHN,"|") D
"RTN","SDEC53",112,0)
 .K SDFDA
"RTN","SDEC53",113,0)
 .S SDIN=$P(ETHN,"|",SDI)
"RTN","SDEC53",114,0)
 .S ETH=$O(^DPT(DFN,.06,"B",$P(SDIN,";;",1),0))
"RTN","SDEC53",115,0)
 .S ETH=$S(ETH'="":ETH,1:"+1")
"RTN","SDEC53",116,0)
 .S SDFDA="SDFDA(2.06,"_$S(ETH'="":ETH_""",""",1:"""+1")_""","_DFN_",)"
"RTN","SDEC53",117,0)
 .S SDFDA=$NA(SDFDA(2.06,ETH_","_DFN_","))
"RTN","SDEC53",118,0)
 .S @SDFDA@(.01)=$P(SDIN,";;",1)
"RTN","SDEC53",119,0)
 .S:$P(SDIN,";;",2)'="" @SDFDA@(.02)=$P(SDIN,";;",2)
"RTN","SDEC53",120,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC53",121,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^"_$C(30,31)
"RTN","SDEC53",122,0)
 Q
"RTN","SDEC54")
0^113^B197526561^n/a
"RTN","SDEC54",1,0)
SDEC54 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC54",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC54",3,0)
 ;
"RTN","SDEC54",4,0)
 ;Reference is made to ICR #6185
"RTN","SDEC54",5,0)
 Q
"RTN","SDEC54",6,0)
 ;
"RTN","SDEC54",7,0)
 ;DATE RANGE FOR INPUT
"RTN","SDEC54",8,0)
SUMMGET(SDECRET,SDBEG,SDEND,USER,LSUB,MAXREC)  ;GET Audit Summary for given date range
"RTN","SDEC54",9,0)
 ;SUMMGET(SDECRET,SDBEG,SDEND,USER)  external parameter tag is in SDEC
"RTN","SDEC54",10,0)
 ;INPUT:
"RTN","SDEC54",11,0)
 ; SDBEG  = (optional) Filter Begin Date in external form; default to all dates
"RTN","SDEC54",12,0)
 ; SDEND  = (optional) Filter End Date in external form; default to all dates
"RTN","SDEC54",13,0)
 ; USER   = (optional) pointer to new person file - used to filter by user
"RTN","SDEC54",14,0)
 ; LSUB   = (optional) subscripts from previous call
"RTN","SDEC54",15,0)
 ; MAXREC = (optional) Max records to return
"RTN","SDEC54",16,0)
 ;RETURN:
"RTN","SDEC54",17,0)
 ; Successful Return: Global Array in which each array entry contains summary data separated by ^:
"RTN","SDEC54",18,0)
 ;  1. REQUESTTYPE - Valid Values:
"RTN","SDEC54",19,0)
 ;                    EWL
"RTN","SDEC54",20,0)
 ;                    RECALL
"RTN","SDEC54",21,0)
 ;                    CONSULT
"RTN","SDEC54",22,0)
 ;                    APPT
"RTN","SDEC54",23,0)
 ;  2. DFN         - Pointer to PATIENT file 2
"RTN","SDEC54",24,0)
 ;  3. NAME        - Patient name from NAME field of PATIENT file
"RTN","SDEC54",25,0)
 ;  4. DATE        - Start Date in external format:
"RTN","SDEC54",26,0)
 ;                    DATE/TIME ENTERED if APPT
"RTN","SDEC54",27,0)
 ;                    ORIGINATING DATE if EWL
"RTN","SDEC54",28,0)
 ;                    DATE/TIME RECALL ADDED if RECALL
"RTN","SDEC54",29,0)
 ;  5. USERIEN     - pointer to NEW PERSON file 200
"RTN","SDEC54",30,0)
 ;  6. USERNAME    - NAME from NEW PERSON file
"RTN","SDEC54",31,0)
 ;                    ORIGINATING USER if EWL
"RTN","SDEC54",32,0)
 ;                    USER WHO ENTERED RECALL if Recall
"RTN","SDEC54",33,0)
 ;  7. DATE1 - date in external format
"RTN","SDEC54",34,0)
 ;             APPT DATE DISPOSITIONED
"RTN","SDEC54",35,0)
 ;             EWL DATE DISPOSITIONED
"RTN","SDEC54",36,0)
 ;  8. PROVIEN - pointer to NEW PERSON file 200
"RTN","SDEC54",37,0)
 ;             APPT USER DISPOSITIONED
"RTN","SDEC54",38,0)
 ;             EWL USER DISPOSITIONED
"RTN","SDEC54",39,0)
 ;  9. PROVNAME - NAME from NEW PERSION file
"RTN","SDEC54",40,0)
 ;             EWL USER DISPOSITIONED
"RTN","SDEC54",41,0)
 ; 10. PCONTACT    - EWL and APPT - Patient Contact
"RTN","SDEC54",42,0)
 ;  PATIENT CONTACT pieced by :: where each :: piece contains the following ~~ pieces:
"RTN","SDEC54",43,0)
 ;         1. DATE ENTERED                external date/time
"RTN","SDEC54",44,0)
 ;         2. PC ENTERED BY USER IEN      Pointer to NEW PERSON file
"RTN","SDEC54",45,0)
 ;         3. PC ENTERED BY USER NAME     NAME from NEW PERSION file
"RTN","SDEC54",46,0)
 ;         4. ACTION                      C=Called; M=Message Left
"RTN","SDEC54",47,0)
 ;         5. PATIENT PHONE
"RTN","SDEC54",48,0)
 ; 11. APPT_SCHED_DATE [NOT USED]
"RTN","SDEC54",49,0)
 ; 12. DATE2    - RECALL - Contains 4 pipe | pieces:
"RTN","SDEC54",50,0)
 ;                1. APPT DATE - Date/Time in external format
"RTN","SDEC54",51,0)
 ;                2. DELETE DATE in external format - represents CANCEL
"RTN","SDEC54",52,0)
 ;                3. DELETE CLERK ien
"RTN","SDEC54",53,0)
 ;                4. DELETE CLERK name
"RTN","SDEC54",54,0)
 ; 13. CLINIEN  - Clinic pointer to the HOSPITAL LOCATION file 44
"RTN","SDEC54",55,0)
 ; 14. CLINNAME - Clinic NAME from the HOSPITAL LOCATION file
"RTN","SDEC54",56,0)
 ; 15. ACTIVITY - CONSULT Activity list separated by pipe |
"RTN","SDEC54",57,0)
 ;     Only Activities of SCHEDULED and CANCELED are included
"RTN","SDEC54",58,0)
 ;     Each pipe piece contains the following ;; pieces:
"RTN","SDEC54",59,0)
 ;     1. REQUEST/CONSULT ien
"RTN","SDEC54",60,0)
 ;     2. pointer to REQUEST PROCESING ACTIVITY multiple
"RTN","SDEC54",61,0)
 ;     3. Date/time of Action Entry in external format
"RTN","SDEC54",62,0)
 ;     4. ACTIVITY
"RTN","SDEC54",63,0)
 ;     5. WHO ENTERED ACTIVITY ien - Pointer to NEW PERSON file
"RTN","SDEC54",64,0)
 ;     6. WHO ENTERED ACTIVITY Name - NAME from NEW PERSON file
"RTN","SDEC54",65,0)
 ; 16. IEN - pointer to the file indicated by field 1 REQUESTTYPE
"RTN","SDEC54",66,0)
 ; 17. LASTSUB - Last referenced subscripts used to pass into next call
"RTN","SDEC54",67,0)
 ; 18. NUMBER - This record is NUMBER ## of TOTAL
"RTN","SDEC54",68,0)
 ; 19. TOTAL  - total number of records returned. Only the last record will contain this data piece
"RTN","SDEC54",69,0)
 ;              This number will accumulate with multiple calls if LSUB is passed in.
"RTN","SDEC54",70,0)
 ;
"RTN","SDEC54",71,0)
 ; Caught Exception Return:
"RTN","SDEC54",72,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC54",73,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC54",74,0)
 ; Unexpected Exception Return:
"RTN","SDEC54",75,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC54",76,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC54",77,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC54",78,0)
 ;     text back to the client.
"RTN","SDEC54",79,0)
 N CLOSED,COUNT,DISPDT,DISPU,FNUM,NAMEPART,PROVNAME,RET,WLDATA,WLIEN,X,Y,%DT
"RTN","SDEC54",80,0)
 N ARIEN,SDDATA,SDEC54,SDECI,SDECY,SDNUM,SDTMP,SDTOT,SDDEMO,SDSUB,SDT,SDU,USER1
"RTN","SDEC54",81,0)
 S SDECRET="^TMP(""SDEC54"","_$J_",""SUMMGET"")"
"RTN","SDEC54",82,0)
 K @SDECRET
"RTN","SDEC54",83,0)
 S SDSUB=""
"RTN","SDEC54",84,0)
 S SDEC54=0
"RTN","SDEC54",85,0)
 ;              1                 2         3          4          5             6
"RTN","SDEC54",86,0)
 S SDTMP="T00030REQUESTTYPE^T00030DFN^T00030NAME^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDEC54",87,0)
 ;                     7           8             9              10             11
"RTN","SDEC54",88,0)
 S SDTMP=SDTMP_"^T00030DATE1^T00030PROVIEN^T00030PROVNAME^T00030PCONTACT^T00030APPT_SCHED_DATE"
"RTN","SDEC54",89,0)
 ;                     12          13            14             15
"RTN","SDEC54",90,0)
 S SDTMP=SDTMP_"^T00030DATE2^T00030CLINIEN^T00030CLINNAME^T00030ACTIVITY^T00030IEN"
"RTN","SDEC54",91,0)
 S SDTMP=SDTMP_"^T00030LASTSUB^T00030NUMBER^T00030TOTAL"
"RTN","SDEC54",92,0)
 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",93,0)
 ;check begin date (optional)
"RTN","SDEC54",94,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1000101
"RTN","SDEC54",95,0)
 I $G(SDBEG)="" S SDBEG=1000101
"RTN","SDEC54",96,0)
 ;check end date (optional)
"RTN","SDEC54",97,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=9991231
"RTN","SDEC54",98,0)
 I $G(SDEND)="" S SDEND=9991231
"RTN","SDEC54",99,0)
 ;check user
"RTN","SDEC54",100,0)
 S USER=$G(USER)
"RTN","SDEC54",101,0)
 I '$D(^VA(200,+USER,0)) S USER=""
"RTN","SDEC54",102,0)
 ;check LSUB   <TYPE> | <SUBSCRIPT [ <SUBSCRIPT> ...
"RTN","SDEC54",103,0)
 S LSUB=$G(LSUB)
"RTN","SDEC54",104,0)
 S SDTOT=+$P(LSUB,"|",1)
"RTN","SDEC54",105,0)
 ;check MAXREC
"RTN","SDEC54",106,0)
 S MAXREC=$G(MAXREC) S:'+MAXREC MAXREC=100
"RTN","SDEC54",107,0)
 ;get SD WAIT LIST data
"RTN","SDEC54",108,0)
 I (LSUB="")!($P(LSUB,"|",2)="WL") D WL
"RTN","SDEC54",109,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",110,0)
 ;get SDEC APPT REQUEST data
"RTN","SDEC54",111,0)
 I (LSUB="")!($P(LSUB,"|",2)="APPT") D APPT
"RTN","SDEC54",112,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",113,0)
 ;get RECALL and RECALL REMOVED data
"RTN","SDEC54",114,0)
 I (LSUB="")!($P(LSUB,"|",2)="REC") D RECALL
"RTN","SDEC54",115,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",116,0)
 ;D RREMOVED
"RTN","SDEC54",117,0)
 ;get REQUEST/CONSULTATION data
"RTN","SDEC54",118,0)
 I (LSUB="")!($P(LSUB,"|",2)="REQ") D REQGET
"RTN","SDEC54",119,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",120,0)
XIT ;
"RTN","SDEC54",121,0)
 I SDEC54>0 S SDTMP=$P(@SDECRET@(SDEC54),$C(30),1) S $P(SDTMP,U,19)=(SDTOT+SDEC54) S:SDSUB'="" $P(SDTMP,U,17)=SDSUB S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",122,0)
 S @SDECRET@(SDEC54)=@SDECRET@(SDEC54)_$C(31)
"RTN","SDEC54",123,0)
 Q
"RTN","SDEC54",124,0)
 ;
"RTN","SDEC54",125,0)
WL ; get SD WAIT LIST data
"RTN","SDEC54",126,0)
 ;get WAIT LIST data
"RTN","SDEC54",127,0)
 D WLINIT
"RTN","SDEC54",128,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",129,0)
 S NAMEPART=""
"RTN","SDEC54",130,0)
 K @RET
"RTN","SDEC54",131,0)
 S CLOSED=1
"RTN","SDEC54",132,0)
 S FNUM=$$FNUM^SDECWL
"RTN","SDEC54",133,0)
 ;S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"C",DUZ(2),WLIEN)) Q:'WLIEN  D
"RTN","SDEC54",134,0)
 S SDT=$S($P(LSUB,"|",3)'="":$$FMADD^XLFDT($P(LSUB,"|",3),,,-1),1:SDBEG-1) F  S SDT=$O(^SDWL(409.3,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",135,0)
 .I USER'="" S SDU=USER D WL1
"RTN","SDEC54",136,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SDWL(409.3,"AC",SDT,SDU)) Q:SDU'>0  D WL1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",137,0)
 K @RET
"RTN","SDEC54",138,0)
 Q
"RTN","SDEC54",139,0)
WL1 ;
"RTN","SDEC54",140,0)
 S WLIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0) S LSUB="" F  S WLIEN=$O(^SDWL(409.3,"AC",SDT,SDU,WLIEN)) Q:WLIEN'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",141,0)
 .S COUNT=0
"RTN","SDEC54",142,0)
 .D ONEPAT^SDECWL1
"RTN","SDEC54",143,0)
 .K WLDATA
"RTN","SDEC54",144,0)
 .S WLDATA=$G(@RET@(COUNT))
"RTN","SDEC54",145,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",146,0)
 .S WLDATA=$P(WLDATA,$C(31),1)
"RTN","SDEC54",147,0)
 .Q:WLDATA=""
"RTN","SDEC54",148,0)
 .;get disposition data, if any
"RTN","SDEC54",149,0)
 .;S DISPDT=$P($G(^SDWL(409.3,WLIEN,"DIS")),U,1)
"RTN","SDEC54",150,0)
 .;S DISPU=$P($G(^SDWL(409.3,WLIEN,"DIS")),U,2)
"RTN","SDEC54",151,0)
 .;        1       2               3                4                5                 6
"RTN","SDEC54",152,0)
 .S SDTMP="EWL"_U_$P(WLDATA,U,1)_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,53)_U_$P(WLDATA,U,18)_U_$P(WLDATA,U,19)
"RTN","SDEC54",153,0)
 .;               7                 8                 9                 10                11
"RTN","SDEC54",154,0)
 .S SDTMP=SDTMP_U_$P(WLDATA,U,41)_U_$P(WLDATA,U,42)_U_$P(WLDATA,U,43)_U_$P(WLDATA,U,40)_U_$P(WLDATA,U,29)
"RTN","SDEC54",155,0)
 .S SDTMP=SDTMP_U_U_U_U_U_WLIEN_U_U_(SDTOT+SDEC54+1)
"RTN","SDEC54",156,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",157,0)
 Q
"RTN","SDEC54",158,0)
 ;
"RTN","SDEC54",159,0)
APPT ; get SD WAIT LIST data
"RTN","SDEC54",160,0)
 ;get WAIT LIST data
"RTN","SDEC54",161,0)
 D WLINIT
"RTN","SDEC54",162,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",163,0)
 S NAMEPART=""
"RTN","SDEC54",164,0)
 K @RET
"RTN","SDEC54",165,0)
 S CLOSED=1
"RTN","SDEC54",166,0)
 S FNUM=409.85
"RTN","SDEC54",167,0)
 S SDT=$S($P(LSUB,"|",3)'="":$$FMADD^XLFDT($P(LSUB,"|",3),,,-1),1:SDBEG-1) F  S SDT=$O(^SDEC(409.85,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",168,0)
 .I USER'="" S SDU=USER D APPT1
"RTN","SDEC54",169,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SDEC(409.85,"AC",SDT,SDU)) Q:SDU'>0  D APPT1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",170,0)
 K @RET
"RTN","SDEC54",171,0)
 Q
"RTN","SDEC54",172,0)
APPT1 ;
"RTN","SDEC54",173,0)
 S ARIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0) S LSUB="" F  S ARIEN=$O(^SDEC(409.85,"AC",SDT,SDU,ARIEN)) Q:ARIEN'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",174,0)
 .S COUNT=0
"RTN","SDEC54",175,0)
 .D ONEPAT^SDECAR1
"RTN","SDEC54",176,0)
 .K WLDATA
"RTN","SDEC54",177,0)
 .S WLDATA=$G(@RET@(COUNT))
"RTN","SDEC54",178,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",179,0)
 .S WLDATA=$P(WLDATA,$C(31),1)
"RTN","SDEC54",180,0)
 .Q:WLDATA=""
"RTN","SDEC54",181,0)
 .;get disposition data, if any
"RTN","SDEC54",182,0)
 .;S DISPDT=$P($G(^SDEC(409.85,ARIEN,"DIS")),U,1)
"RTN","SDEC54",183,0)
 .;S DISPU=$P($G(^SDEC(409.85,ARIEN,"DIS")),U,2)
"RTN","SDEC54",184,0)
 .;        1        2               3                4                5                 6
"RTN","SDEC54",185,0)
 .S SDTMP="APPT"_U_$P(WLDATA,U,1)_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,46)_U_$P(WLDATA,U,14)_U_""
"RTN","SDEC54",186,0)
 .;               7                 8                 9                 10                11
"RTN","SDEC54",187,0)
 .S SDTMP=SDTMP_U_$P(WLDATA,U,34)_U_$P(WLDATA,U,35)_U_$P(WLDATA,U,36)_U_$P(WLDATA,U,33)_U_$P(WLDATA,U,59)
"RTN","SDEC54",188,0)
 .S SDTMP=SDTMP_U_U_U_U_U_ARIEN_U_U_(SDTOT+SDEC54+1)
"RTN","SDEC54",189,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",190,0)
 Q
"RTN","SDEC54",191,0)
 ;
"RTN","SDEC54",192,0)
REQGET ;get REQUEST/CONSULTATION data for SCHEDULED and CANCELED activities (from SDEC51)
"RTN","SDEC54",193,0)
 N LSUB1,SDCAN,SDCANL,SDGMR,SDGMR0,SDI,SDJ,SDK,SDNOD,SDRPA,SDRPA0,SDSCHED,SDSCHEDF,STSTATF
"RTN","SDEC54",194,0)
 N RQCNT,SDGMR,SDT,SDU
"RTN","SDEC54",195,0)
 S RQCNT=SDEC54
"RTN","SDEC54",196,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",197,0)
 K @SDECY
"RTN","SDEC54",198,0)
 S SDECI=0
"RTN","SDEC54",199,0)
 S SDSCHEDF=0
"RTN","SDEC54",200,0)
 S SDCAN=$$GETIEN^SDEC51("CANCELLED")
"RTN","SDEC54",201,0)
 I SDCAN="" Q  ;D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC54",202,0)
 S SDSCHED=$$GETIEN^SDEC51("SCHEDULED")
"RTN","SDEC54",203,0)
 I SDSCHED="" Q  ;D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC54",204,0)
 ;S SDT=SDBEG-1 F  S SDT=$O(^GMR(123,"AG",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D
"RTN","SDEC54",205,0)
 ;begin "AG" replacement 1 of 4
"RTN","SDEC54",206,0)
 K ^TMP($J,"SDEC54","AG")
"RTN","SDEC54",207,0)
 S LSUB1=$P(LSUB,"|",3)
"RTN","SDEC54",208,0)
 S SDI=$S(LSUB1'="":$$FMADD^XLFDT(LSUB1,,,-1),1:$P(SDBEG,".",1))
"RTN","SDEC54",209,0)
 F  S SDI=$O(^GMR(123,"B",SDI)) Q:SDI=""  Q:(SDEND'="")&($P(SDI,".",1)>$P(SDEND,".",1))  D  I RQCNT'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQ|"_SDI_"|"_SDJ_"|"_SDK Q
"RTN","SDEC54",210,0)
 .S SDJ=0 F  S SDJ=$O(^GMR(123,"B",SDI,SDJ)) Q:SDJ=""  D  I RQCNT'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQ|"_SDI_"|"_SDJ_"|"_SDK Q
"RTN","SDEC54",211,0)
 ..S SDK=0 F  S SDK=$O(^GMR(123,SDJ,40,SDK)) Q:SDK'>0  D  I RQCNT'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQ|"_SDI_"|"_SDJ_"|"_SDK Q   ;ICR 6185
"RTN","SDEC54",212,0)
 ...K SDNOD
"RTN","SDEC54",213,0)
 ...D GETS^DIQ(123.02,SDK_","_SDJ_",",".01;3","I","SDNOD")   ;ICR 6185
"RTN","SDEC54",214,0)
 ...S SDT=SDNOD(123.02,SDK_","_SDJ_",",.01,"I")
"RTN","SDEC54",215,0)
 ...S SDU=SDNOD(123.02,SDK_","_SDJ_",",3,"I")
"RTN","SDEC54",216,0)
 ...I SDT'="",SDU'="" S ^TMP($J,"SDEC54","AG",SDT,SDU,SDJ,SDK)="",RQCNT=RQCNT+1
"RTN","SDEC54",217,0)
 S SDT="" F  S SDT=$O(^TMP($J,"SDEC54","AG",SDT)) Q:SDT=""  D
"RTN","SDEC54",218,0)
 .;end "AG" replacement 1 of 4
"RTN","SDEC54",219,0)
 .I USER'="" S SDU=USER D REQGET1
"RTN","SDEC54",220,0)
 .;I USER="" S SDU=0 F  S SDU=$O(^GMR(123,"AG",SDT,SDU)) Q:SDU'>0  D REQGET1   ;"AG" replacement 2 of 4
"RTN","SDEC54",221,0)
 .I USER="" S SDU=0 F  S SDU=$O(^TMP($J,"SDEC54","AG",SDT,SDU)) Q:SDU'>0  D REQGET1
"RTN","SDEC54",222,0)
 K ^TMP($J,"SDEC54","AG")
"RTN","SDEC54",223,0)
 Q
"RTN","SDEC54",224,0)
REQGET1 ;
"RTN","SDEC54",225,0)
 N SDSTATF
"RTN","SDEC54",226,0)
 ;S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDT,SDU,SDGMR)) Q:SDGMR'>0  D   ;"AG" replacement 3 of 4
"RTN","SDEC54",227,0)
 S SDGMR=0 F  S SDGMR=$O(^TMP($J,"SDEC54","AG",SDT,SDU,SDGMR)) Q:SDGMR'>0  D
"RTN","SDEC54",228,0)
 .S SDCANL=""
"RTN","SDEC54",229,0)
 .S (SDSCHEDF,SDSTATF)=0
"RTN","SDEC54",230,0)
 .;S SDGMR0=$G(^GMR(123,SDGMR,0))
"RTN","SDEC54",231,0)
 .;S SDRPA=0 F  S SDRPA=$O(^GMR(123,"AG",SDT,SDU,SDGMR,SDRPA)) Q:SDRPA'>0  D   ;"AG" replacement 4 of 4
"RTN","SDEC54",232,0)
 .S SDRPA=0 F  S SDRPA=$O(^TMP($J,"SDEC54","AG",SDT,SDU,SDGMR,SDRPA)) Q:SDRPA'>0  D
"RTN","SDEC54",233,0)
 ..S SDRPA0=$G(^GMR(123,SDGMR,40,SDRPA,0))  ;ICR 6185
"RTN","SDEC54",234,0)
 ..I ($P(SDRPA0,U,2)=SDCAN)!($P(SDRPA0,U,2)=SDSCHED) D
"RTN","SDEC54",235,0)
 ...S SDCANL=$S(SDCANL'="":SDCANL_"|",1:"")_SDGMR_";;"_SDRPA_";;"_$$FMTE^XLFDT($P(SDRPA0,U,1))
"RTN","SDEC54",236,0)
 ...S SDCANL=SDCANL_";;"_$$GET1^DIQ(123.02,SDRPA_","_SDGMR_",",1)_";;"_$P(SDRPA0,U,5)_";;"_$P($G(^VA(200,+$P(SDRPA0,U,5),0)),U,1)
"RTN","SDEC54",237,0)
 .I SDCANL'="" D
"RTN","SDEC54",238,0)
 ..S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")
"RTN","SDEC54",239,0)
 ..;collect demographics
"RTN","SDEC54",240,0)
 ..;D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC54",241,0)
 ..S NAME=$$GET1^DIQ(2,DFN_",",.01)   ;SDDEMO("NAME")
"RTN","SDEC54",242,0)
 ..K SDDATA,SDMSG
"RTN","SDEC54",243,0)
 ..;SDCANL=<REQUEST PROCESSING ACTIVITY pointer> ;; <DATE/TIME OF ACTION ENTRY> ;; <ACTIVITY> ;; <WHO ENTERED ACTIVITY ien> ;; <WHO ENTERED ACTIVITY name>
"RTN","SDEC54",244,0)
 ..S SDTMP="CONSULT"_U_DFN_U_NAME_U_U_U                 ;6
"RTN","SDEC54",245,0)
 ..S SDTMP=SDTMP_U_U_U_U_U                              ;11
"RTN","SDEC54",246,0)
 ..S SDTMP=SDTMP_U_U_U_U_SDCANL_U_SDGMR_U_U_(SDTOT+SDEC54+1)   ;18
"RTN","SDEC54",247,0)
 ..S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",248,0)
 Q
"RTN","SDEC54",249,0)
 ;
"RTN","SDEC54",250,0)
RECALL ;get RECALL REMINDERS data
"RTN","SDEC54",251,0)
 N SDECY,SDR,SDT,SDU
"RTN","SDEC54",252,0)
 S SDT=$S($P(LSUB,"|",3)'="":$$FMADD^XLFDT($P(LSUB,"|",3),,,-1),1:SDBEG-1) F  S SDT=$O(^SD(403.5,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",253,0)
 .I USER'="" S SDU=USER D RECALL1
"RTN","SDEC54",254,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SD(403.5,"AC",SDT,SDU)) Q:SDU'>0  Q:(USER'="")&(SDU'=USER)  D RECALL1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",255,0)
 Q
"RTN","SDEC54",256,0)
RECALL1 ;
"RTN","SDEC54",257,0)
 S SDR=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0)  F  S SDR=$O(^SD(403.5,"AC",SDT,SDU,SDR)) Q:SDR'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",258,0)
 .S SDECY=""
"RTN","SDEC54",259,0)
 .D RECIEN^SDEC(.SDECY,SDR)
"RTN","SDEC54",260,0)
 .Q:$G(@SDECY@(1))=""
"RTN","SDEC54",261,0)
 .S WLDATA=@SDECY@(1)
"RTN","SDEC54",262,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",263,0)
 .S SDTMP="RECALL"_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,3)_U_$P(WLDATA,U,32)_U_$P(WLDATA,U,22)_U_$P(WLDATA,U,23)     ;6
"RTN","SDEC54",264,0)
 .S SDTMP=SDTMP_U_U_U_U_U                                                                                      ;11
"RTN","SDEC54",265,0)
 .S SDTMP=SDTMP_U_$P(WLDATA,U,19)_U_$P(WLDATA,U,16)_U_$P(WLDATA,U,17)_U_U_$P(WLDATA,U,1)_U_U_(SDTOT+SDEC54+1)  ;18
"RTN","SDEC54",266,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",267,0)
 .K @SDECY
"RTN","SDEC54",268,0)
 Q
"RTN","SDEC54",269,0)
 ;
"RTN","SDEC54",270,0)
RREMOVED ;
"RTN","SDEC54",271,0)
 N SDT,SDU
"RTN","SDEC54",272,0)
 S SDT=SDBEG-1 F  S SDT=$O(^SD(403.56,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D
"RTN","SDEC54",273,0)
 .I USER'="" S SDU=USER D RR1
"RTN","SDEC54",274,0)
 .I USER="" S SDU=0 F  S SDU=$O(^SD(403.56,"AC",SDT,SDU)) Q:SDU'>0  Q:(USER'="")&(SDU'=USER)  D RR1
"RTN","SDEC54",275,0)
 Q
"RTN","SDEC54",276,0)
RR1 ;
"RTN","SDEC54",277,0)
 N IEN
"RTN","SDEC54",278,0)
 S IEN=0 F  S IEN=$O(^SD(403.56,"AC",SDT,SDU,IEN)) Q:IEN'>0  D RECGET1
"RTN","SDEC54",279,0)
 Q
"RTN","SDEC54",280,0)
RECGET1 ;get recall reminder removed for 1 entry
"RTN","SDEC54",281,0)
 ;collect demographics
"RTN","SDEC54",282,0)
 N DELDT,DELN,DELU,DFN
"RTN","SDEC54",283,0)
 N ACCESION,APPTLEN,CLINIEN,CLINNAME,COMM,DAPTDT,DATE,DATE1,DATE2,DATE3,FASTING
"RTN","SDEC54",284,0)
 N RRAPPTYP,RRPROVIEN,NAME,USERIEN,USERNAME
"RTN","SDEC54",285,0)
 ;get RECALL REMINDERS data
"RTN","SDEC54",286,0)
 K SDDATA,SDMSG
"RTN","SDEC54",287,0)
 D GETS^DIQ(403.56,IEN,"**","IE","SDDATA","SDMSG")
"RTN","SDEC54",288,0)
 S DFN=SDDATA(403.56,IEN_",",.01,"I")
"RTN","SDEC54",289,0)
 D DEMO
"RTN","SDEC54",290,0)
 S DATE3=SDDATA(403.56,IEN_",",7.5,"E")     ;    32. DATE/TIME RECALL ADDED
"RTN","SDEC54",291,0)
 ;Q:'$$CKDT^SDEC54A(DATE3,SDBEG,SDEND)
"RTN","SDEC54",292,0)
 S DATE=SDDATA(403.56,IEN_",",5,"I")
"RTN","SDEC54",293,0)
 ;Q:(DATE<SDBEG)!(DATE>SDEND)
"RTN","SDEC54",294,0)
 S ACCESION=SDDATA(403.56,IEN_",",2,"E")   ;    10. Accession # (free-text 1-25 characters)
"RTN","SDEC54",295,0)
 S COMM=SDDATA(403.56,IEN_",",2.5,"E")     ;    11. COMMENT (free-text 1-80 characters)
"RTN","SDEC54",296,0)
 S FASTING=SDDATA(403.56,IEN_",",2.6,"I")  ;    12. FASTING/NON-FASTING
"RTN","SDEC54",297,0)
 S RRAPPTYP=SDDATA(403.56,IEN_",",3,"I")   ;    13. Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC54",298,0)
 S RRPROVIEN=SDDATA(403.56,IEN_",",4,"I")  ;    14. Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC54",299,0)
 I +USER S USER1=$P($G(^SD(403.54,+RRPROVIEN)),U,1) Q:USER1'=USER
"RTN","SDEC54",300,0)
 S PROVNAME=SDDATA(403.56,IEN_",",4,"E")   ;    15. Provider NAME of Provider in RECALL REMINDERS PROVIDERS file
"RTN","SDEC54",301,0)
 S CLINIEN=SDDATA(403.56,IEN_",",4.5,"I")  ;    16. Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC54",302,0)
 S CLINNAME=SDDATA(403.56,IEN_",",4.5,"E") ;    17. Clinic NAME from HOSPITAL LOCATION file
"RTN","SDEC54",303,0)
 S APPTLEN=SDDATA(403.56,IEN_",",4.7,"E")  ;    18. Length of Appointment  numeric between 10 and 120
"RTN","SDEC54",304,0)
 S DATE=SDDATA(403.56,IEN_",",5,"I") S DATE=$$FMTE^XLFDT(DATE)           ;19. Recall Date in external format (no time)
"RTN","SDEC54",305,0)
 S DATE1=$G(SDDATA(403.56,IEN_",",5.5,"I")) S DATE1=$$FMTE^XLFDT(DATE1)      ;20. Recall Date (Per patient) in external format (no time)
"RTN","SDEC54",306,0)
 S DAPTDT=SDDATA(403.56,IEN_",",6,"I") S DAPTDT=$$FMTE^XLFDT(DAPTDT)     ;21. Date Reminder Sent in external format (no time)
"RTN","SDEC54",307,0)
 S USERIEN=SDDATA(403.56,IEN_",",7,"I")    ;    22. User Who Entered Recall pointer to NEW PERSON file
"RTN","SDEC54",308,0)
 S USERNAME=SDDATA(403.56,IEN_",",7,"E")   ;    23. User Who Entered Recall NAME from NEW PERSON file
"RTN","SDEC54",309,0)
 S DATE2=$G(SDDATA(403.56,IEN_",",8,"I")) S DATE2=$$FMTE^XLFDT(DATE2)        ;24. Second Print Date in external format (no time)
"RTN","SDEC54",310,0)
 S DELDT=$G(SDDATA(403.56,IEN_",",201,"E")) S DELDT=$$FMTE^XLFDT(DELDT)
"RTN","SDEC54",311,0)
 S DELU=$G(SDDATA(403.56,IEN_",",202,"I"))
"RTN","SDEC54",312,0)
 S DELN=$G(SDDATA(403.56,IEN_",",202,"E"))
"RTN","SDEC54",313,0)
 ;        1         2     3      4       5                 6
"RTN","SDEC54",314,0)
 S SDTMP="RECALL"_U_DFN_U_NAME_U_DATE2_U_USERIEN_U_USERNAME
"RTN","SDEC54",315,0)
 S SDTMP=SDTMP_U_U_U_U_U
"RTN","SDEC54",316,0)
 ;               12                                 13        14
"RTN","SDEC54",317,0)
 S SDTMP=SDTMP_U_DATE_"|"_DELDT_"|"_DELU_"|"_DELN_U_CLINIEN_U_CLINNAME
"RTN","SDEC54",318,0)
 S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",319,0)
 Q
"RTN","SDEC54",320,0)
 ;
"RTN","SDEC54",321,0)
DEMO ;get patient demographics
"RTN","SDEC54",322,0)
 N SDDEMO
"RTN","SDEC54",323,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC54",324,0)
 S NAME=SDDEMO("NAME")
"RTN","SDEC54",325,0)
 Q
"RTN","SDEC54",326,0)
 ;
"RTN","SDEC54",327,0)
WLINIT ;
"RTN","SDEC54",328,0)
 N NAME,NAMEPART,DOB,GENDER,HRN,SSN,INSTIEN,INSTNAME
"RTN","SDEC54",329,0)
 N PRIGRP,ELIGIEN,ELIGNAME,SVCCONN,SVCCONNP,TYPEIEN
"RTN","SDEC54",330,0)
 N TYPENAME,PTPHONE,WLORIGDT,WLINST,WLINSTNM,WLTYPE
"RTN","SDEC54",331,0)
 N WLTEAM,WLPOS,WLSSIEN,WLSSNAME,WLCLIEN,WLCLNAME
"RTN","SDEC54",332,0)
 N WLUSER,WLUSRNM,WLPRIO,WLENPRI,WLREQBY,WLPROV
"RTN","SDEC54",333,0)
 N WLPROVNM,WLDAPTDT,WLCOMM,WLEESTAT,WLASD,WLMAR
"RTN","SDEC54",334,0)
 N WLMAI,WLMAN,WLPC
"RTN","SDEC54",335,0)
 Q
"RTN","SDEC54A")
0^117^B18379020^n/a
"RTN","SDEC54A",1,0)
SDEC54A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC54A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC54A",3,0)
 ;
"RTN","SDEC54A",4,0)
 Q
"RTN","SDEC54A",5,0)
 ;
"RTN","SDEC54A",6,0)
SUMMAGET(SDECY,SDBEG,SDEND,USER,LSUB,MAXREC) ;get ALL appointments with a cancel status from SDEC APPOINTMENT for given date range and user
"RTN","SDEC54A",7,0)
 ;SUMMAGET(SDECY,SDBEG,SDEND,USER)  external parameter tag is in SDEC
"RTN","SDEC54A",8,0)
 ;INPUT:
"RTN","SDEC54A",9,0)
 ; SDBEG = (optional) Filter Begin Date in external form; default to all dates
"RTN","SDEC54A",10,0)
 ; SDEND = (optional) Filter End Date in external form; default to all dates
"RTN","SDEC54A",11,0)
 ; USER  = (optional) pointer to new person file - used to filter by user
"RTN","SDEC54A",12,0)
 ; LSUB   = (optional) subscripts from previous call
"RTN","SDEC54A",13,0)
 ; MAXREC = (optional) Max records to return
"RTN","SDEC54A",14,0)
 ;RETURN:
"RTN","SDEC54A",15,0)
 ; global array in which each array entry contains data from the SDEC APPOINTMENT file
"RTN","SDEC54A",16,0)
 ; each entry contains the following ^ pieces:
"RTN","SDEC54A",17,0)
 ;   1. APPT     - Pointer to SDEC APPOINTMENT file
"RTN","SDEC54A",18,0)
 ;   2. DATE     - Appointment Start time in external format from STARTTIME field of SDEC APPOINTMENT file
"RTN","SDEC54A",19,0)
 ;   3. IEN      - patient pointer to PATIENT file
"RTN","SDEC54A",20,0)
 ;   4. NAME     - patient name from PATIENT file
"RTN","SDEC54A",21,0)
 ;   5. CLINIEN  - Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC54A",22,0)
 ;   6. CLINNAME - Clinic name from HOSPITAL LOCATION file
"RTN","SDEC54A",23,0)
 ;   7. DATE1    - Cancel Date/Time in external format from CANCEL DATETIME field
"RTN","SDEC54A",24,0)
 ;   8. USERIEN  - DATA ENTRY CLERK ien pointer to NEW PERSON file
"RTN","SDEC54A",25,0)
 ;   9. USERNAME - DATA ENTRY CLERK name from NEW PERSON file
"RTN","SDEC54A",26,0)
 ;  10. PROVIEN  - Provider ien from PROVIDER field pointer to NEW PERSON file
"RTN","SDEC54A",27,0)
 ;  11. PROVNAME - provider name of PROVIDER from NEW PERSON file
"RTN","SDEC54A",28,0)
 ;  12. STATUS   - text from STATUS field valid values are:
"RTN","SDEC54A",29,0)
 ;                 CANCELLED BY CLINIC & AUTO RE-BOOK
"RTN","SDEC54A",30,0)
 ;                 CANCELLED BY PATIENT
"RTN","SDEC54A",31,0)
 ;                 CANCELLED BY PATIENT & AUTO-REBOOK
"RTN","SDEC54A",32,0)
 ;  13. EESTAT   - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC54A",33,0)
 ;  14. LASTSUB - Last referenced subscripts used to pass into next call
"RTN","SDEC54A",34,0)
 ;  15. NUMBER - This record is NUMBER ## of TOTAL
"RTN","SDEC54A",35,0)
 ;  16. TOTAL  - total number of records returned. Only the last record will contain this data piece
"RTN","SDEC54A",36,0)
 ;              This number will accumulate with multiple calls if LSUB is passed in.
"RTN","SDEC54A",37,0)
 N DATE,DATE1,X,Y,%DT
"RTN","SDEC54A",38,0)
 N SDECI,SDCLIN,SDI,SDJ,SDNOD,SDRES,SDSTAT,SDSUB,SDTMP,SDTOT
"RTN","SDEC54A",39,0)
 S SDSUB=""
"RTN","SDEC54A",40,0)
 S SDECY="^TMP(""SDEC54"","_$J_",""SUMMAGET"")"
"RTN","SDEC54A",41,0)
 K @SDECY
"RTN","SDEC54A",42,0)
 S SDECI=0
"RTN","SDEC54A",43,0)
 ;              1          2          3         4          5             6
"RTN","SDEC54A",44,0)
 S SDTMP="T00030APPT^T00030DATE^T00030IEN^T00030NAME^T00030CLINIEN^T00030CLINNAME"
"RTN","SDEC54A",45,0)
 ;                     7           8             9              10             11
"RTN","SDEC54A",46,0)
 S SDTMP=SDTMP_"^T00030DATE1^T00030USERIEN^T00030USERNAME^T00030PROVIEN^T00030PROVNAME"
"RTN","SDEC54A",47,0)
 ;                     12          13            14            15           16
"RTN","SDEC54A",48,0)
 S SDTMP=SDTMP_"^T00030STATUS^T00030EESTAT^T00030LASTSUB^T00030NUMBER^T00030TOTAL"
"RTN","SDEC54A",49,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",50,0)
 ;check begin date (optional)
"RTN","SDEC54A",51,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1000101
"RTN","SDEC54A",52,0)
 I $G(SDBEG)="" S SDBEG=1000101
"RTN","SDEC54A",53,0)
 ;check end date (optional)
"RTN","SDEC54A",54,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=9991231
"RTN","SDEC54A",55,0)
 I $G(SDEND)="" S SDEND=9991231
"RTN","SDEC54A",56,0)
 ;check user
"RTN","SDEC54A",57,0)
 S USER=$G(USER)
"RTN","SDEC54A",58,0)
 I '$D(^VA(200,+USER,0)) S USER=""
"RTN","SDEC54A",59,0)
 ;check LSUB   <TYPE> | <SUBSCRIPT [ <SUBSCRIPT> ...
"RTN","SDEC54A",60,0)
 S LSUB=$G(LSUB)
"RTN","SDEC54A",61,0)
 S SDTOT=+$P(LSUB,"|",1)
"RTN","SDEC54A",62,0)
 ;check MAXREC
"RTN","SDEC54A",63,0)
 S MAXREC=$G(MAXREC) S:'+MAXREC MAXREC=100
"RTN","SDEC54A",64,0)
 ;
"RTN","SDEC54A",65,0)
 S SDJ=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2)-.0001,1:SDBEG)
"RTN","SDEC54A",66,0)
 F  S SDJ=$O(^SDEC(409.84,"B",SDJ)) Q:SDJ'>0  Q:SDJ=""  Q:SDJ>SDEND  D  I SDECI'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDECI)_"|"_SDJ_"|"_SDI Q
"RTN","SDEC54A",67,0)
 .S SDI=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54A",68,0)
 .S LSUB=""
"RTN","SDEC54A",69,0)
 .F  S SDI=$O(^SDEC(409.84,"B",SDJ,SDI)) Q:SDI'>0  D  I SDECI'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDECI)_"|"_SDJ_"|"_SDI Q
"RTN","SDEC54A",70,0)
 ..S SDNOD=$G(^SDEC(409.84,SDI,0))
"RTN","SDEC54A",71,0)
 ..;get/check status
"RTN","SDEC54A",72,0)
 ..S SDSTAT=$P(SDNOD,U,17)
"RTN","SDEC54A",73,0)
 ..S SDSTAT=$S(SDSTAT="CA":"CANCELLED BY CLINIC & AUTO RE-BOOK",SDSTAT="PC":"CANCELLED BY PATIENT",SDSTAT="PCA":"CANCELLED BY PATIENT & AUTO-REBOOK",1:"")
"RTN","SDEC54A",74,0)
 ..Q:SDSTAT=""
"RTN","SDEC54A",75,0)
 ..Q:'$$CKDT($P(SDNOD,U,1),SDBEG,SDEND)
"RTN","SDEC54A",76,0)
 ..I +USER Q:$P(SDNOD,U,8)'=USER   ;compare USER to DATA ENTRY CLERK
"RTN","SDEC54A",77,0)
 ..;get clinic via resource
"RTN","SDEC54A",78,0)
 ..S SDRES=$P(SDNOD,U,7)
"RTN","SDEC54A",79,0)
 ..S SDCLIN=$P($G(^SDEC(409.831,+SDRES,0)),U,4)
"RTN","SDEC54A",80,0)
 ..S DATE=$$FMTE^XLFDT($P(SDNOD,U,1))          ;STARTTIME
"RTN","SDEC54A",81,0)
 ..S DATE1=$$FMTE^XLFDT($P(SDNOD,U,12))
"RTN","SDEC54A",82,0)
 ..;       1     2      3               4
"RTN","SDEC54A",83,0)
 ..S SDTMP=SDI_U_DATE_U_$P(SDNOD,U,5)_U_$$GET1^DIQ(2,$P(SDNOD,U,5)_",",.01)
"RTN","SDEC54A",84,0)
 ..;               5        6                               7
"RTN","SDEC54A",85,0)
 ..S SDTMP=SDTMP_U_SDCLIN_U_$$GET1^DIQ(44,SDCLIN_",",.01)_U_DATE1
"RTN","SDEC54A",86,0)
 ..;               8               9
"RTN","SDEC54A",87,0)
 ..S SDTMP=SDTMP_U_$P(SDNOD,U,8)_U_$$GET1^DIQ(200,$P(SDNOD,U,8)_",",.01)
"RTN","SDEC54A",88,0)
 ..;               10               11                                       12       13
"RTN","SDEC54A",89,0)
 ..S SDTMP=SDTMP_U_$P(SDNOD,U,16)_U_$$GET1^DIQ(200,$P(SDNOD,U,16)_",",.01)_U_SDSTAT_U_$$GET1^DIQ(409.84,SDI_",",.23,"E")
"RTN","SDEC54A",90,0)
 ..;               14   15
"RTN","SDEC54A",91,0)
 ..S SDTMP=SDTMP_U_""_U_(SDTOT+SDECI+1)
"RTN","SDEC54A",92,0)
 ..S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",93,0)
 I SDECI>0 S SDTMP=$P(@SDECY@(SDECI),$C(30),1) S $P(SDTMP,U,16)=(SDTOT+SDECI) S:SDSUB'="" $P(SDTMP,U,14)=SDSUB S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",94,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC54A",95,0)
 Q
"RTN","SDEC54A",96,0)
 ;
"RTN","SDEC54A",97,0)
CKDT(DATE,BEG,END)  ;check date range
"RTN","SDEC54A",98,0)
 ;RETURN
"RTN","SDEC54A",99,0)
 ; 0=out of range
"RTN","SDEC54A",100,0)
 ; 1=in range
"RTN","SDEC54A",101,0)
 N X,Y,%DT
"RTN","SDEC54A",102,0)
 I $G(BEG)="",$G(END)="" Q 1
"RTN","SDEC54A",103,0)
 I $G(DATE)="" Q 1
"RTN","SDEC54A",104,0)
 S %DT="T" S X=$P(DATE,"@",1) D ^%DT S DATE=Y
"RTN","SDEC54A",105,0)
 I DATE=-1 Q 0
"RTN","SDEC54A",106,0)
 Q:DATE<BEG 0
"RTN","SDEC54A",107,0)
 Q:DATE>END 0
"RTN","SDEC54A",108,0)
 Q 1
"RTN","SDEC55")
0^118^B16588920^n/a
"RTN","SDEC55",1,0)
SDEC55 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC55",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC55",3,0)
 ;
"RTN","SDEC55",4,0)
 Q
"RTN","SDEC55",5,0)
 ;
"RTN","SDEC55",6,0)
 ;DATE RANGE FOR INPUT
"RTN","SDEC55",7,0)
APPIDGET(SDECY,SDID)  ;GET SDEC APPOINTMENT ien for given External ID
"RTN","SDEC55",8,0)
 ;APPIDGET(SDECY,SDID)  external parameter tag is in SDEC
"RTN","SDEC55",9,0)
 ;INPUT:
"RTN","SDEC55",10,0)
 ; SDID = (required) External ID from EXTERNAL ID field in SDEC APPOINTMENT
"RTN","SDEC55",11,0)
 ;RETURN:
"RTN","SDEC55",12,0)
 ; Successful Return: Global Array in which each array entry contains an appointment ID:
"RTN","SDEC55",13,0)
 ;  1. SDECAPTID - appointment ID pointer to SDEC APPOINTMENT
"RTN","SDEC55",14,0)
 ;
"RTN","SDEC55",15,0)
 ; Caught Exception Return:
"RTN","SDEC55",16,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC55",17,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC55",18,0)
 ; Unexpected Exception Return:
"RTN","SDEC55",19,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC55",20,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC55",21,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC55",22,0)
 ;     text back to the client.
"RTN","SDEC55",23,0)
 N SDECI,SDI
"RTN","SDEC55",24,0)
 S SDECY="^TMP(""SDEC55"","_$J_",""APPIDGET"")"
"RTN","SDEC55",25,0)
 K @SDECY
"RTN","SDEC55",26,0)
 S SDECI=0
"RTN","SDEC55",27,0)
 S @SDECY@(SDECI)="T00030SDECAPTID"_$C(30)
"RTN","SDEC55",28,0)
 I $G(SDID)="" D ERR1^SDECERR(-1,"Invalid External ID.",.SDECI,SDECY)
"RTN","SDEC55",29,0)
 S SDI="" F  S SDI=$O(^SDEC(409.84,"AEX",SDID,SDI)) Q:SDI=""  D
"RTN","SDEC55",30,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDI_$C(30)
"RTN","SDEC55",31,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC55",32,0)
 Q
"RTN","SDEC55",33,0)
 ;
"RTN","SDEC55",34,0)
ETHGET(SDECY)  ;GET active Ethnicities from the ETHNICITY file 10.2
"RTN","SDEC55",35,0)
 ;ETHGET(.SDECY)  external parameter tag is in SDEC
"RTN","SDEC55",36,0)
 ;INPUT - none
"RTN","SDEC55",37,0)
 ;RETURN:
"RTN","SDEC55",38,0)
 ; Successful Return: Global Array in which each array entry
"RTN","SDEC55",39,0)
 ; contains an ethnicity IEN, name, and abbreviation
"RTN","SDEC55",40,0)
 ; from the ETHNICITY file 10.2:
"RTN","SDEC55",41,0)
 ;    ETHNICITY ^ ETHNICITYNAME ^ ETHNICITYABBR
"RTN","SDEC55",42,0)
 ; Caught Exception Return:
"RTN","SDEC55",43,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC55",44,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC55",45,0)
 ; Unexpected Exception Return:
"RTN","SDEC55",46,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC55",47,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC55",48,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC55",49,0)
 ;     text back to the client.
"RTN","SDEC55",50,0)
 N SDECI,SDI,SDNOD
"RTN","SDEC55",51,0)
 S SDECY="^TMP(""SDEC55"","_$J_",""ETHGET"")"
"RTN","SDEC55",52,0)
 K @SDECY
"RTN","SDEC55",53,0)
 S SDECI=0
"RTN","SDEC55",54,0)
 S @SDECY@(SDECI)="T00030ETHNICITY^T00030ETHNICITYNAME^T00030ETHNICITYABBR"_$C(30)
"RTN","SDEC55",55,0)
 S SDI=0 F  S SDI=$O(^DIC(10.2,SDI)) Q:SDI'>0  D
"RTN","SDEC55",56,0)
 .Q:+$P($G(^DIC(10.2,SDI,.02)),U,1)
"RTN","SDEC55",57,0)
 .S SDNOD=^DIC(10.2,SDI,0)
"RTN","SDEC55",58,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDI_U_$P(SDNOD,U,1)_U_$P(SDNOD,U,2)_$C(30)
"RTN","SDEC55",59,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC55",60,0)
 Q
"RTN","SDEC55",61,0)
 ;
"RTN","SDEC55",62,0)
ETHCMGET(SDECY)  ;GET values from the RACE AND ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC55",63,0)
 ;ETHCMGET(.SDECY)  external parameter tag is in SDEC
"RTN","SDEC55",64,0)
 ;INPUT - none
"RTN","SDEC55",65,0)
 ;RETURN:
"RTN","SDEC55",66,0)
 ; Successful Return: Global Array in which each array entry
"RTN","SDEC55",67,0)
 ; contains an IEN, name, and abbreviation
"RTN","SDEC55",68,0)
 ; from file 10.3:
"RTN","SDEC55",69,0)
 ;    IEN ^ NAME ^ ABBR
"RTN","SDEC55",70,0)
 ; Caught Exception Return:
"RTN","SDEC55",71,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC55",72,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC55",73,0)
 ; Unexpected Exception Return:
"RTN","SDEC55",74,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC55",75,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC55",76,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC55",77,0)
 ;     text back to the client.
"RTN","SDEC55",78,0)
 N SDECI,SDI,SDNOD
"RTN","SDEC55",79,0)
 S SDECY="^TMP(""SDEC55"","_$J_",""ETHCMGET"")"
"RTN","SDEC55",80,0)
 K @SDECY
"RTN","SDEC55",81,0)
 S SDECI=0
"RTN","SDEC55",82,0)
 S @SDECY@(SDECI)="T00030IEN^T00030NAME^T00030ABBR"_$C(30)
"RTN","SDEC55",83,0)
 S SDI=0 F  S SDI=$O(^DIC(10.3,SDI)) Q:SDI'>0  D
"RTN","SDEC55",84,0)
 .S SDNOD=^DIC(10.3,SDI,0)
"RTN","SDEC55",85,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDI_U_$P(SDNOD,U,1)_U_$P(SDNOD,U,2)_$C(30)
"RTN","SDEC55",86,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC55",87,0)
 Q
"RTN","SDEC55",88,0)
 ;
"RTN","SDEC55",89,0)
CGET(SDECY)  ;GET active Countries from the COUNTRY CODE file 779.004
"RTN","SDEC55",90,0)
 ;CGET(.SDECY)  external parameter tag is in SDEC
"RTN","SDEC55",91,0)
 ;INPUT - none
"RTN","SDEC55",92,0)
 ;RETURN:
"RTN","SDEC55",93,0)
 ; Successful Return: Global Array in which each array entry
"RTN","SDEC55",94,0)
 ; contains a Country code IEN, name, and abbreviation
"RTN","SDEC55",95,0)
 ; from the COUNTRY CODE file 779.004:
"RTN","SDEC55",96,0)
 ;    COUNTRY ^ COUNTRYNAME ^ COUNTRYABBR
"RTN","SDEC55",97,0)
 ; Caught Exception Return:
"RTN","SDEC55",98,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC55",99,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC55",100,0)
 ; Unexpected Exception Return:
"RTN","SDEC55",101,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC55",102,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC55",103,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC55",104,0)
 ;     text back to the client.
"RTN","SDEC55",105,0)
 N SDECI,SDI,SDNOD,SDDATE,SDSTAT
"RTN","SDEC55",106,0)
 S SDECY="^TMP(""SDEC55"","_$J_",""CGET"")"
"RTN","SDEC55",107,0)
 K @SDECY
"RTN","SDEC55",108,0)
 S SDECI=0
"RTN","SDEC55",109,0)
 S @SDECY@(SDECI)="T00030COUNTRY^T00030COUNTRYNAME^T00030COUNTRYABBR"_$C(30)
"RTN","SDEC55",110,0)
 S SDI=0 F  S SDI=$O(^HL(779.004,SDI)) Q:SDI'>0  D
"RTN","SDEC55",111,0)
 .S SDDATE=$O(^HL(779.004,SDI,"TERMSTATUS","B",9999999),-1)
"RTN","SDEC55",112,0)
 .S:SDDATE'="" SDSTAT=$O(^HL(779.004,SDI,"TERMSTATUS","B",SDDATE,0))
"RTN","SDEC55",113,0)
 .Q:+$P($G(^HL(779.004,SDI,"TERMSTATUS",+$G(SDSTAT),0)),U,2)=0
"RTN","SDEC55",114,0)
 .S SDNOD=^HL(779.004,SDI,0)
"RTN","SDEC55",115,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDI_U_$P(SDNOD,U,2)_U_$P(SDNOD,U,1)_$C(30)
"RTN","SDEC55",116,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC55",117,0)
 Q
"RTN","SDEC55",118,0)
 ;
"RTN","SDEC55",119,0)
RACEGET(SDECY)  ;GET active Race entries from the RACE file 10
"RTN","SDEC55",120,0)
 ;RACEGET(.SDECY)  external parameter tag is in SDEC
"RTN","SDEC55",121,0)
 ;INPUT - none
"RTN","SDEC55",122,0)
 ;RETURN:
"RTN","SDEC55",123,0)
 ; Successful Return: Global Array in which each array entry
"RTN","SDEC55",124,0)
 ; contains a race IEN, name, and abbreviation
"RTN","SDEC55",125,0)
 ; from the RACE file 10:
"RTN","SDEC55",126,0)
 ;    RACEIEN ^ RACENAME ^ RACEABBR
"RTN","SDEC55",127,0)
 ; Caught Exception Return:
"RTN","SDEC55",128,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC55",129,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC55",130,0)
 ; Unexpected Exception Return:
"RTN","SDEC55",131,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC55",132,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC55",133,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC55",134,0)
 ;     text back to the client.
"RTN","SDEC55",135,0)
 N SDECI,SDI,SDNOD
"RTN","SDEC55",136,0)
 S SDECY="^TMP(""SDEC55"","_$J_",""RACEGET"")"
"RTN","SDEC55",137,0)
 K @SDECY
"RTN","SDEC55",138,0)
 S SDECI=0
"RTN","SDEC55",139,0)
 S @SDECY@(SDECI)="T00030RACEIEN^T00030RACENAME^T00030RACEABBR"_$C(30)
"RTN","SDEC55",140,0)
 S SDI=0 F  S SDI=$O(^DIC(10,SDI)) Q:SDI'>0  D
"RTN","SDEC55",141,0)
 .Q:+$P($G(^DIC(10,SDI,.02)),U,1)
"RTN","SDEC55",142,0)
 .S SDNOD=^DIC(10,SDI,0)
"RTN","SDEC55",143,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDI_U_$P(SDNOD,U,1)_U_$P(SDNOD,U,2)_$C(30)
"RTN","SDEC55",144,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC55",145,0)
 Q
"RTN","SDEC55A")
0^137^B79593054^n/a
"RTN","SDEC55A",1,0)
SDEC55A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC55A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC55A",3,0)
 ;
"RTN","SDEC55A",4,0)
 Q
"RTN","SDEC55A",5,0)
 ;
"RTN","SDEC55A",6,0)
APPSDGET(SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN)  ;GET appointment data from SDEC APPOINTMENT file 409.84
"RTN","SDEC55A",7,0)
 ;APPSDGET(.SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN)  external parameter tag is in SDEC
"RTN","SDEC55A",8,0)
 ;INPUT:
"RTN","SDEC55A",9,0)
 ; 1. MAXREC = (optional) Max records returned default to all
"RTN","SDEC55A",10,0)
 ; 2. LASTSUB = (optional) last subscripts from previous call
"RTN","SDEC55A",11,0)
 ; 3. SDBEG = (optional) Begin Date range in external format
"RTN","SDEC55A",12,0)
 ;                    Default to all dates
"RTN","SDEC55A",13,0)
 ; 4. SDEND = (optional) End Date range in external format
"RTN","SDEC55A",14,0)
 ;                    Default to all dates
"RTN","SDEC55A",15,0)
 ; 5. NOTEFLG = (optional) 1=do NOT return NOTE text
"RTN","SDEC55A",16,0)
 ;                      0=return NOTE text
"RTN","SDEC55A",17,0)
 ; 6. SDRES = (optional) Resource ID pointer to SDEC RESOURCE file
"RTN","SDEC55A",18,0)
 ;                    Default to all resources
"RTN","SDEC55A",19,0)
 ; 7. DFN = (optional) pointer to PATIENT file 2
"RTN","SDEC55A",20,0)
 ;                  Default to all patients
"RTN","SDEC55A",21,0)
 ; 8. SDID = (optional) external ID (free-text)
"RTN","SDEC55A",22,0)
 ;                   Default to all external IDs
"RTN","SDEC55A",23,0)
 ; 9. SDIEN = (optional) pointer to SDEC APPOINTMENT file 409.84
"RTN","SDEC55A",24,0)
 ;RETURN:
"RTN","SDEC55A",25,0)
 ; Successful Return:
"RTN","SDEC55A",26,0)
 ; Global Array in which each array entry contains data from the
"RTN","SDEC55A",27,0)
 ; SDEC APPOINTMENT file 409.84.
"RTN","SDEC55A",28,0)
 ; Data is separated by ^:
"RTN","SDEC55A",29,0)
 ; 1. IEN - pointer to SDEC APPOINTMENT file
"RTN","SDEC55A",30,0)
 ; 2. DATE1 - STARTTIME in external format
"RTN","SDEC55A",31,0)
 ; 3. DATE2 - ENDTIME in external format
"RTN","SDEC55A",32,0)
 ; 4. CHECKIN_TIME - CHECKIN date/time in external format
"RTN","SDEC55A",33,0)
 ; 5. DATE - CHECK IN TIME ENTERED - date/time in external format
"RTN","SDEC55A",34,0)
 ; 6. DFN - Patient ID
"RTN","SDEC55A",35,0)
 ; 7. NAME - Patient NAME
"RTN","SDEC55A",36,0)
 ; 8. SDEC_ACCESS_TYPE_IEN - access type ID pointer to
"RTN","SDEC55A",37,0)
 ;                           SDEC ACCESS TYPE file
"RTN","SDEC55A",38,0)
 ; 9. SDEC_ACCESS_TYPE_NAME - access type NAME from
"RTN","SDEC55A",39,0)
 ;                            SDEC ACCESS TYPE file
"RTN","SDEC55A",40,0)
 ; 10. RESOURCEID - Pointer to the SDEC RESOURCE file
"RTN","SDEC55A",41,0)
 ; 11. RESOURCE_NAME - NAME from SDEC RESOURCE file
"RTN","SDEC55A",42,0)
 ; 12. USERIEN - DATA ENTRY CLERK id pointer to NEW PERSON file
"RTN","SDEC55A",43,0)
 ; 13. USERNAME - DATA ENTRY CLERK name from NEW PERSON file
"RTN","SDEC55A",44,0)
 ; 14. DATE3 - DATE APPT MADE in external format
"RTN","SDEC55A",45,0)
 ; 15. NOSHOW - NOSHOW flag 1=YES; 0=NO default to no
"RTN","SDEC55A",46,0)
 ; 16. DATE4 - NOSHOW DATETIME in external format
"RTN","SDEC55A",47,0)
 ; 17. USERIEN1 - NOSHOW BY USER id pointer to NEW PERSON file
"RTN","SDEC55A",48,0)
 ; 18. USERNAME1 - NOSHOW BY USER name from NEW PERSON file
"RTN","SDEC55A",49,0)
 ; 19. DATE5 - REBOOK DATETIME in external format
"RTN","SDEC55A",50,0)
 ; 20. DATE6 - CANCEL DATETIME in external format
"RTN","SDEC55A",51,0)
 ; 21. USERIEN2 - CANCELLED BY USER id pointer to NEW PERSON file
"RTN","SDEC55A",52,0)
 ; 22. USERNAME2 - CANCELLED BY USER name from NEW PERSON file
"RTN","SDEC55A",53,0)
 ; 23. CANCELLATION_REASONS_IEN - CANCELLATION REASON id pointer
"RTN","SDEC55A",54,0)
 ;                            to CANCELLATION REASONS file 409.2
"RTN","SDEC55A",55,0)
 ; 24. CANCELLATION_REASONS_NAME - CANCELLATION REASON name from
"RTN","SDEC55A",56,0)
 ;                            CANCELLATION REASONS file
"RTN","SDEC55A",57,0)
 ; 25. WALKIN - WALKIN flag y=YES; n=NO default to NO
"RTN","SDEC55A",58,0)
 ; 26. CHECKOUT - CHECKOUT date/time in external format
"RTN","SDEC55A",59,0)
 ; 27. V_PROVIDER_IEN - V PROVIDER IEN id pointer to
"RTN","SDEC55A",60,0)
 ;                      V PROVIDER file
"RTN","SDEC55A",61,0)
 ; 28. V_PROVIDER_NAME - V PROVIDER name from V PROVIDER FILE
"RTN","SDEC55A",62,0)
 ; 29. PROVIEN - PROVIDER id pointer to NEW PERSON file
"RTN","SDEC55A",63,0)
 ; 30. PROVNAME - PROVIDER name from NEW PERSON file
"RTN","SDEC55A",64,0)
 ; 31. STATUS - STATUS set of codes
"RTN","SDEC55A",65,0)
 ;              valid values in external form are:
"RTN","SDEC55A",66,0)
 ;                NO-SHOW
"RTN","SDEC55A",67,0)
 ;                CLINIC
"RTN","SDEC55A",68,0)
 ;                NO-SHOW & AUTO RE-BOOK
"RTN","SDEC55A",69,0)
 ;                CANCELLED BY CLINIC & AUTO RE-BOOK
"RTN","SDEC55A",70,0)
 ;                INPATIENT APPOINTMENT
"RTN","SDEC55A",71,0)
 ;                CANCELLED BY PATIENT
"RTN","SDEC55A",72,0)
 ;                CANCELLED BY PATIENT & AUTO-REBOOK
"RTN","SDEC55A",73,0)
 ;                NO ACTION TAKEN
"RTN","SDEC55A",74,0)
 ; 32. APPTLEN - LENGTH OF APPT numeric 5-120
"RTN","SDEC55A",75,0)
 ; 33. APPT_STAT_IEN - PREV APPT STATUS id pointer to
"RTN","SDEC55A",76,0)
 ;                     APPOINTMENT STATUS file 409.63
"RTN","SDEC55A",77,0)
 ; 34. APPT_STAT_NAME - PREV APPT STATUS name from
"RTN","SDEC55A",78,0)
 ;                      APPOINTMENT STATUS file
"RTN","SDEC55A",79,0)
 ; 35. DAPTDT - DESIRED DATE OF APPOINTMENT in external format
"RTN","SDEC55A",80,0)
 ; 36. SDID - EXTERNAL ID free-text
"RTN","SDEC55A",81,0)
 ; 37. SDAPTYP - APPT REQUEST TYPE - variable pointer pointer
"RTN","SDEC55A",82,0)
 ;               to one of these files:
"RTN","SDEC55A",83,0)
 ;                SD WAIT LIST - E|<WL IEN> E|123
"RTN","SDEC55A",84,0)
 ;                REQUEST/CONSULTATION - C|<CONSULT IEN> C|123
"RTN","SDEC55A",85,0)
 ;                RECALL REMINDERS - R|^<RECALL IEN> R|123
"RTN","SDEC55A",86,0)
 ; 38. NOTE - NOTE free-text converted from Word Processing
"RTN","SDEC55A",87,0)
 ;            field. May contain Carriage return/line feed
"RTN","SDEC55A",88,0)
 ;            characters
"RTN","SDEC55A",89,0)
 ; 39. EESTAT - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC55A",90,0)
 ;
"RTN","SDEC55A",91,0)
 N SD1,SD2,SDAPP,SDECI,SDI,SDJ,SDTMP,X,Y,%DT
"RTN","SDEC55A",92,0)
 S SDECY="^TMP(""SDEC55A"","_$J_",""APPSDGET"")"
"RTN","SDEC55A",93,0)
 K @SDECY
"RTN","SDEC55A",94,0)
 S SDECI=0
"RTN","SDEC55A",95,0)
 ;              1         2           3           4                  5          6         7
"RTN","SDEC55A",96,0)
 S SDTMP="T00030IEN^T00030DATE1^T00030DATE2^T00030CHECKIN_TIME^T00030DATE^T00030DFN^T00030NAME"
"RTN","SDEC55A",97,0)
 ;                     8                          9                           10               11
"RTN","SDEC55A",98,0)
 S SDTMP=SDTMP_"^T00030SDEC_ACCESS_TYPE_IEN^T00030SDEC_ACCESS_TYPE_NAME^T00030RESOURCEID^T00030RESOURCE_NAME"
"RTN","SDEC55A",99,0)
 ;                     12            13             14          15           16          17             18
"RTN","SDEC55A",100,0)
 S SDTMP=SDTMP_"^T00030USERIEN^T00030USERNAME^T00030DATE3^T00030NOSHOW^T00030DATE4^T00030USERIEN1^T00030USERNAME1"
"RTN","SDEC55A",101,0)
 ;                     19          20          21             22              23
"RTN","SDEC55A",102,0)
 S SDTMP=SDTMP_"^T00030DATE5^T00030DATE6^T00030USERIEN2^T00030USERNAME2^T00030CANCELLATION_REASONS_IEN"
"RTN","SDEC55A",103,0)
 ;                     24                              25           26             27                   28
"RTN","SDEC55A",104,0)
 S SDTMP=SDTMP_"^T00030CANCELLATION_REASONS_NAME^T00030WALKIN^T00030CHECKOUT^T00030V_PROVIDER_IEN^T00030V_PROVIDER_NAME"
"RTN","SDEC55A",105,0)
 ;                     29            30             31           32            33                  34
"RTN","SDEC55A",106,0)
 S SDTMP=SDTMP_"^T00030PROVIEN^T00030PROVNAME^T00030STATUS^T00030APPTLEN^T00030APPT_STAT_IEN^T00030APPT_STAT_NAME"
"RTN","SDEC55A",107,0)
 ;                     35           36         37            38
"RTN","SDEC55A",108,0)
 S SDTMP=SDTMP_"^T00030DAPTDT^T00030SDID^T00030SDAPTYP^T00200NOTE^T00030EESTAT"
"RTN","SDEC55A",109,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC55A",110,0)
 ;validate MAXREC - optional
"RTN","SDEC55A",111,0)
 S MAXREC=$G(MAXREC)
"RTN","SDEC55A",112,0)
 I MAXREC'="" I '+MAXREC S MAXREC=""
"RTN","SDEC55A",113,0)
 ;validate LASTSUB - optional
"RTN","SDEC55A",114,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC55A",115,0)
 S SD1=$P(LASTSUB,"|",1),SD2=$P(LASTSUB,"|",2)
"RTN","SDEC55A",116,0)
 I SD2'="" I SDID="" S SD1=SD1-.0001
"RTN","SDEC55A",117,0)
 ;validate SDBEG - optional
"RTN","SDEC55A",118,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC55A",119,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 D ERR1^SDECERR(-1,"Invalid begin date/time.",SDECI,SDECY) Q
"RTN","SDEC55A",120,0)
 I SDBEG="" S SDBEG=1000101
"RTN","SDEC55A",121,0)
 ;validate SDEND - optional
"RTN","SDEC55A",122,0)
 S SDEND=$G(SDEND)
"RTN","SDEC55A",123,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y_".2359" I Y=-1 D ERR1^SDECERR(-1,"Invalid end date/time.",SDECI,SDECY) Q
"RTN","SDEC55A",124,0)
 I SDEND="" S SDEND=9991231.2359
"RTN","SDEC55A",125,0)
 ;validate NOTEFLG - optional
"RTN","SDEC55A",126,0)
 S NOTEFLG=$S($G(NOTEFLG)=1:1,1:0)
"RTN","SDEC55A",127,0)
 ;validate SDRES -optional
"RTN","SDEC55A",128,0)
 S SDRES=$G(SDRES)
"RTN","SDEC55A",129,0)
 I SDRES'="" I '$D(^SDEC(409.831,SDRES,0)) D ERR1^SDECERR(-1,"Invalid resource ID.",SDECI,SDECY) Q
"RTN","SDEC55A",130,0)
 ;validate DFN -optional
"RTN","SDEC55A",131,0)
 S DFN=$G(DFN)
"RTN","SDEC55A",132,0)
 I DFN'="" I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid patient ID.",SDECI,SDECY) Q
"RTN","SDEC55A",133,0)
 ;validate SDID - optional
"RTN","SDEC55A",134,0)
 S SDID=$G(SDID)
"RTN","SDEC55A",135,0)
 ;validate SDIEN - optional
"RTN","SDEC55A",136,0)
 S SDIEN=$G(SDIEN)
"RTN","SDEC55A",137,0)
 I SDIEN'="",'$D(^SDEC(409.84,SDIEN,0)) D ERR1^SDECERR(-1,"Invalid ID.",SDECI,SDECY) Q
"RTN","SDEC55A",138,0)
 I SDIEN'="" D GET1(SDIEN,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",139,0)
 G:SDIEN'="" GETX
"RTN","SDEC55A",140,0)
 ;look in external id xref AEX
"RTN","SDEC55A",141,0)
 I SDID'="" D
"RTN","SDEC55A",142,0)
 .S SDAPP=$S(SD1'="":SD1,1:0) F  S SDAPP=$O(^SDEC(409.84,"AEX",SDID,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDAPP Q
"RTN","SDEC55A",143,0)
 ..D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",144,0)
 G:SDID'="" GETX
"RTN","SDEC55A",145,0)
 ;look in patient xref CPAT
"RTN","SDEC55A",146,0)
 I DFN'="" D
"RTN","SDEC55A",147,0)
 .S SDAPP=$S(SD1'="":SD1,1:0) F  S SDAPP=$O(^SDEC(409.84,"CPAT",DFN,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDAPP Q
"RTN","SDEC55A",148,0)
 ..D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",149,0)
 G:DFN'="" GETX
"RTN","SDEC55A",150,0)
 ;look in resource xref ARSRC
"RTN","SDEC55A",151,0)
 I SDRES'="" D
"RTN","SDEC55A",152,0)
 .S SDI=$S(SD1'="":SD1,1:SDBEG) F  S SDI=$O(^SDEC(409.84,"ARSRC",SDRES,SDI)) Q:SDI'>0  Q:SDI>SDEND  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",153,0)
 ..S SDAPP=$S(SD2'="":SD2,1:0) S SD2=0 F  S SDAPP=$O(^SDEC(409.84,"ARSRC",SDRES,SDI,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",154,0)
 ...D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",155,0)
 G:SDRES'="" GETX
"RTN","SDEC55A",156,0)
 ;look in start time xref B
"RTN","SDEC55A",157,0)
 S SDI=$S(SD1'="":SD1,1:SDBEG) F  S SDI=$O(^SDEC(409.84,"B",SDI)) Q:SDI'>0  Q:SDI>SDEND  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",158,0)
 .S SDAPP=$S(SD2'="":SD2,1:0) S SD2=0 F  S SDAPP=$O(^SDEC(409.84,"B",SDI,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",159,0)
 ..D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",160,0)
GETX  S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC55A",161,0)
 Q
"RTN","SDEC55A",162,0)
GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDECI,SDECY) ;get 1 appointment record
"RTN","SDEC55A",163,0)
 ;INPUT:
"RTN","SDEC55A",164,0)
 ; SDAPP - appointment ID pointer to SDEC APPOINTMENT file 409.84
"RTN","SDEC55A",165,0)
 N SDA,SDDATA,SDNOTE,SDRET,SDTYP,SDX,SDY
"RTN","SDEC55A",166,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC55A",167,0)
 S SDEND=$G(SDEND)
"RTN","SDEC55A",168,0)
 S NOTEFLG=$G(NOTEFLG)
"RTN","SDEC55A",169,0)
 S SDRES=$G(SDRES)
"RTN","SDEC55A",170,0)
 S DFN=$G(DFN)
"RTN","SDEC55A",171,0)
 S SDID=$G(SDID)
"RTN","SDEC55A",172,0)
 S SDECI=$G(SDECI)
"RTN","SDEC55A",173,0)
 S SDECY=$G(SDECY)
"RTN","SDEC55A",174,0)
 D GETS^DIQ(409.84,SDAPP_",",".01:.23","IE","SDDATA")
"RTN","SDEC55A",175,0)
 S SDA="SDDATA(409.84,"""_SDAPP_","")"
"RTN","SDEC55A",176,0)
 S $P(SDRET,U,1)=SDAPP           ;ien
"RTN","SDEC55A",177,0)
 S $P(SDRET,U,2)=@SDA@(.01,"E")  ;start time
"RTN","SDEC55A",178,0)
 Q:(SDBEG'="")&($P(@SDA@(.01,"I"),".",1)<$P(SDBEG,".",1))
"RTN","SDEC55A",179,0)
 S $P(SDRET,U,3)=@SDA@(.02,"E")  ;end time
"RTN","SDEC55A",180,0)
 Q:(SDEND'="")&($P(@SDA@(.02,"I"),".",1)>$P(SDEND,".",1))
"RTN","SDEC55A",181,0)
 S $P(SDRET,U,4)=@SDA@(.03,"E")  ;check in time
"RTN","SDEC55A",182,0)
 S $P(SDRET,U,5)=@SDA@(.04,"E")  ;check in time entered
"RTN","SDEC55A",183,0)
 S $P(SDRET,U,6)=@SDA@(.05,"I")  ;patient ID
"RTN","SDEC55A",184,0)
 Q:(DFN'="")&($P(SDRET,U,6)'=DFN)
"RTN","SDEC55A",185,0)
 S $P(SDRET,U,7)=@SDA@(.05,"E")  ;patient NAME
"RTN","SDEC55A",186,0)
 S $P(SDRET,U,8)=@SDA@(.06,"I")  ;access type ID
"RTN","SDEC55A",187,0)
 S $P(SDRET,U,9)=@SDA@(.06,"E")  ;access type NAME
"RTN","SDEC55A",188,0)
 S $P(SDRET,U,10)=@SDA@(.07,"I")  ;resource ID
"RTN","SDEC55A",189,0)
 Q:(SDRES'="")&($P(SDRET,U,10)'=SDRES)
"RTN","SDEC55A",190,0)
 S $P(SDRET,U,11)=@SDA@(.07,"E")  ;resource NAME
"RTN","SDEC55A",191,0)
 S $P(SDRET,U,12)=@SDA@(.08,"I")  ;data entry clerk ID
"RTN","SDEC55A",192,0)
 S $P(SDRET,U,13)=@SDA@(.08,"E")  ;data entry clerk NAME
"RTN","SDEC55A",193,0)
 S $P(SDRET,U,14)=@SDA@(.09,"E")  ;date appointment made
"RTN","SDEC55A",194,0)
 S $P(SDRET,U,15)=@SDA@(.1,"E")   ;noshow flag
"RTN","SDEC55A",195,0)
 S $P(SDRET,U,16)=@SDA@(.101,"E") ;no show date time
"RTN","SDEC55A",196,0)
 S $P(SDRET,U,17)=@SDA@(.102,"I") ;no show by user ID
"RTN","SDEC55A",197,0)
 S $P(SDRET,U,18)=@SDA@(.102,"E") ;no show by user NAME
"RTN","SDEC55A",198,0)
 S $P(SDRET,U,19)=@SDA@(.11,"E") ;rebook date time
"RTN","SDEC55A",199,0)
 S $P(SDRET,U,20)=@SDA@(.12,"E") ;cancel date time
"RTN","SDEC55A",200,0)
 S $P(SDRET,U,21)=@SDA@(.121,"I") ;cancelled by user ID
"RTN","SDEC55A",201,0)
 S $P(SDRET,U,22)=@SDA@(.121,"E") ;cancelled by user NAME
"RTN","SDEC55A",202,0)
 S $P(SDRET,U,23)=@SDA@(.122,"I") ;cancellation reason ID
"RTN","SDEC55A",203,0)
 S $P(SDRET,U,24)=@SDA@(.122,"E") ;cancellation reason NAME
"RTN","SDEC55A",204,0)
 S $P(SDRET,U,25)=@SDA@(.13,"E")  ;walk-in
"RTN","SDEC55A",205,0)
 S $P(SDRET,U,26)=@SDA@(.14,"E")  ;check-out date/time
"RTN","SDEC55A",206,0)
 S $P(SDRET,U,27)=@SDA@(.15,"I")  ;v provider ID
"RTN","SDEC55A",207,0)
 S $P(SDRET,U,28)=@SDA@(.15,"E")  ;v provider NAME
"RTN","SDEC55A",208,0)
 S $P(SDRET,U,29)=@SDA@(.16,"I")  ;provider ID
"RTN","SDEC55A",209,0)
 S $P(SDRET,U,30)=@SDA@(.16,"E")  ;provider NAME
"RTN","SDEC55A",210,0)
 S $P(SDRET,U,31)=@SDA@(.17,"E")  ;status
"RTN","SDEC55A",211,0)
 S $P(SDRET,U,32)=@SDA@(.18,"E")  ;length of appt
"RTN","SDEC55A",212,0)
 S $P(SDRET,U,33)=@SDA@(.19,"I")  ;prev appt status ID
"RTN","SDEC55A",213,0)
 S $P(SDRET,U,34)=@SDA@(.19,"E")  ;prev appt status NAME
"RTN","SDEC55A",214,0)
 S $P(SDRET,U,35)=@SDA@(.2,"E")   ;desired date of appointment
"RTN","SDEC55A",215,0)
 S $P(SDRET,U,36)=@SDA@(.21,"E")  ;external id
"RTN","SDEC55A",216,0)
 Q:(SDID'="")&($P(SDRET,U,36)'=SDID)
"RTN","SDEC55A",217,0)
 S SDX=@SDA@(.22,"I") S SDY=$P(SDX,";",2)
"RTN","SDEC55A",218,0)
 S SDTYP=$S(SDY="SDWL(409.3,":"E|",SDY="GMR(123,":"C|",SDY="SD(403.5,":"R|",SDY="SDEC(409.85,":"A|",1:"")_$P(SDX,";",1)  ;appt request type
"RTN","SDEC55A",219,0)
 S $P(SDRET,U,37)=SDTYP
"RTN","SDEC55A",220,0)
 ;
"RTN","SDEC55A",221,0)
 N SDECIEN
"RTN","SDEC55A",222,0)
 S SDNOTE=""
"RTN","SDEC55A",223,0)
 I 'NOTEFLG I $D(^SDEC(409.84,SDAPP,1)) D
"RTN","SDEC55A",224,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.84,SDAPP,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC55A",225,0)
 . . S SDNOTE=SDNOTE_$G(^SDEC(409.84,SDAPP,1,SDECIEN,0))
"RTN","SDEC55A",226,0)
 . . S SDNOTE=SDNOTE_$C(13)_$C(10)
"RTN","SDEC55A",227,0)
 S $P(SDRET,U,38)=SDNOTE
"RTN","SDEC55A",228,0)
 S $P(SDRET,U,39)=@SDA@(.23,"E")  ;patient status
"RTN","SDEC55A",229,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDRET_$C(30)
"RTN","SDEC55A",230,0)
 K SDDATA
"RTN","SDEC55A",231,0)
 Q
"RTN","SDEC56")
0^129^B35889062^n/a
"RTN","SDEC56",1,0)
SDEC56 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC56",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC56",3,0)
 ;
"RTN","SDEC56",4,0)
 Q
"RTN","SDEC56",5,0)
 ;
"RTN","SDEC56",6,0)
REP1GET(SDECY,MAXREC,LASTSUB,PNAME)   ;GET clinic data for report
"RTN","SDEC56",7,0)
 ;INPUT:
"RTN","SDEC56",8,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDEC56",9,0)
 ;  LASTSUB  - (optional) last subscripts from previous call
"RTN","SDEC56",10,0)
 ;  PNAME    - (optional) partial name
"RTN","SDEC56",11,0)
 ;RETURN:
"RTN","SDEC56",12,0)
 ;  1. CLINIEN  - clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC56",13,0)
 ;  2. CLINNAME - clinic NAME from HOSPITAL LOCATION file 44
"RTN","SDEC56",14,0)
 ;  3. TYPE     - clinic type - only valid value is 'CLINIC'
"RTN","SDEC56",15,0)
 ;  4. INSTIEN  - institution ID pointer to INSTITUTION file
"RTN","SDEC56",16,0)
 ;  5. INSTNAME - institution NAME from INSTITUTION file
"RTN","SDEC56",17,0)
 ;  6. DIVIEN   - division ID pointer to MEDICAL CENTER DIVISION file 40.8
"RTN","SDEC56",18,0)
 ;  7. DIVNAME  - division NAME from MEDICAL CENTER DIVISION file
"RTN","SDEC56",19,0)
 ;  8. STOP_CODE_ID     - stop code ID pointer to CLINIC STOP file 40.7
"RTN","SDEC56",20,0)
 ;  9. STOP_CODE_NUMBER - stop code number
"RTN","SDEC56",21,0)
 ; 10. SERVICE  - service assigned - valid values:
"RTN","SDEC56",22,0)
 ;                 MEDICINE
"RTN","SDEC56",23,0)
 ;                 SURGERY
"RTN","SDEC56",24,0)
 ;                 PSYCHIATRY
"RTN","SDEC56",25,0)
 ;                 REHAB MEDICINE
"RTN","SDEC56",26,0)
 ;                 NEUROLOGY
"RTN","SDEC56",27,0)
 ;                 NONE
"RTN","SDEC56",28,0)
 ; 11. TREATSPECID   - treating specialty ID pointer to FACILITY TREATING SPECIALTY file 45.7
"RTN","SDEC56",29,0)
 ; 12. TREATSPECNAME - treating specialty NAME from FACILITY TREATING SPECIALTY file
"RTN","SDEC56",30,0)
 ; 13. PROVIEN  - default provider ID pointer to NEW PERSON file 200
"RTN","SDEC56",31,0)
 ; 14. PROVNAME - default provider NAME from NEW PERSON file
"RTN","SDEC56",32,0)
 ; 15. AGENCYID   - agency ID pointer to AGENCY file 4.11
"RTN","SDEC56",33,0)
 ; 16. AGENCYNAME - agency NAME from AGENCY file
"RTN","SDEC56",34,0)
 ; 17. APPTLEN    - length of app't numeric 10-240 and multiple of 10 or 15
"RTN","SDEC56",35,0)
 ; 18. VAPPTLEN   - variable appointment length  'V' means "YES, VARIABLE LENGTH"; otherwise null
"RTN","SDEC56",36,0)
 ; 19. PROHIBITACC - prohibit access to clinic?  'YES'  or null
"RTN","SDEC56",37,0)
 ; 20. NON-COUNT  - non-count clinic?  'YES'  'NO'
"RTN","SDEC56",38,0)
 ; 21. INACTIVATE_DT - inactivate date in external format - date clinic was inactivated
"RTN","SDEC56",39,0)
 ; 22. REACTIVATE_DT - reactivate date in external format - date clinic was reactivated
"RTN","SDEC56",40,0)
 ; 23. DEF-APPT-TYPE_ID   - default appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC56",41,0)
 ; 24. DEF-APPT-TYPE_NAME - default appointment type NAME from APPOINTMENT TYPE file
"RTN","SDEC56",42,0)
 ; 25. PROVIDERS - Providers separated by pipe.
"RTN","SDEC56",43,0)
 ;       Each pipe piece contains the following ;; pieces:
"RTN","SDEC56",44,0)
 ;         1. provider ID pointer to NEW PERSON FILE 200
"RTN","SDEC56",45,0)
 ;         2. provider NAME from NEW PERSON file
"RTN","SDEC56",46,0)
 ;         3. default provider?  'NO'  'YES'
"RTN","SDEC56",47,0)
 ; 26. CLIN-SVCS-RES_ID   - clinic services resource ID pointer to
"RTN","SDEC56",48,0)
 ; 27. CLIN-SVCS-RES_NAME - clinic services resource NAME
"RTN","SDEC56",49,0)
 ; 28. CLINIC-GRP_ID   - clinic group (reports) ID pointer to CLINIC GROUP file 409.67
"RTN","SDEC56",50,0)
 ; 29. CLINIC-GRP_NAME - clinic group (reports) NAME from CLINIC GROUP file
"RTN","SDEC56",51,0)
 ; 30. DATE            - Date/Time this Clinic was created in external format
"RTN","SDEC56",52,0)
 ; 31. MAXDAYS - max # days for future booking  2002
"RTN","SDEC56",53,0)
 ; 32. LASTSUB - last subscripts of data in the return.
"RTN","SDEC56",54,0)
 ;               Pass this as LASTSUB in the next call to continue
"RTN","SDEC56",55,0)
 ;               collecting data.
"RTN","SDEC56",56,0)
 N SDA,SDAUD,SDAUDNOD,SDCL,SDCLN,SDDATA,SDFIELDS,SDECI,SDI,SDMSG,SDTMP
"RTN","SDEC56",57,0)
 S SDECY="^TMP(""SDEC56"","_$J_",""HLREP1"")"
"RTN","SDEC56",58,0)
 K @SDECY
"RTN","SDEC56",59,0)
 ;              1             2              3          4             5
"RTN","SDEC56",60,0)
 S SDTMP="T00030CLINIEN^T00030CLINNAME^T00030TYPE^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC56",61,0)
 ;                     6            7             8                  9
"RTN","SDEC56",62,0)
 S SDTMP=SDTMP_"^T00030DIVIEN^T00030DIVNAME^T00030STOP_CODE_ID^T00030STOP_CODE_NUMBER"
"RTN","SDEC56",63,0)
 ;                     10            11                12
"RTN","SDEC56",64,0)
 S SDTMP=SDTMP_"^T00030SERVICE^T00030TREATSPECID^T00030TREATSPECNAME"
"RTN","SDEC56",65,0)
 ;                     13            14             15             16               17
"RTN","SDEC56",66,0)
 S SDTMP=SDTMP_"^T00030PROVIEN^T00030PROVNAME^T00030AGENCYID^T00030AGENCYNAME^T00030APPTLEN"
"RTN","SDEC56",67,0)
 ;                     18             19                20              21
"RTN","SDEC56",68,0)
 S SDTMP=SDTMP_"^T00030VAPPTLEN^T00030PROHIBITACC^T00030NON-COUNT^T00030INACTIVATE_DT"
"RTN","SDEC56",69,0)
 ;                     22                  23                     24
"RTN","SDEC56",70,0)
 S SDTMP=SDTMP_"^T00030REACTIVATE_DT^T00030DEF-APPT-TYPE_ID^T00030DEF-APPT-TYPE_NAME"
"RTN","SDEC56",71,0)
 ;                     25              26                     27
"RTN","SDEC56",72,0)
 S SDTMP=SDTMP_"^T00030PROVIDERS^T00030CLIN-SVCS-RES_ID^T00030CLIN-SVCS-RES_NAME"
"RTN","SDEC56",73,0)
 ;                     28                  29                    30
"RTN","SDEC56",74,0)
 S SDTMP=SDTMP_"^T00030CLINIC-GRP_ID^T00030CLINIC-GRP_NAME^T00030DATE^T00030MAXDAYS^T00030LASTSUB"
"RTN","SDEC56",75,0)
 S SDECI=0
"RTN","SDEC56",76,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC56",77,0)
 S MAXREC=+$G(MAXREC,200)
"RTN","SDEC56",78,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC56",79,0)
 S PNAME=$G(PNAME)
"RTN","SDEC56",80,0)
 S SDCLN=$S($P(LASTSUB,"|",2)'="":$$GETSUB($P(LASTSUB,"|",2)),PNAME'="":$$GETSUB(PNAME),1:"")
"RTN","SDEC56",81,0)
 F  S SDCLN=$O(^SC("AG","C",SDCLN)) S:(PNAME'="")&($E(SDCLN,1,$L(PNAME))'=PNAME) SDCLN="" Q:SDCLN=""  D  I +MAXREC,SDECI'<MAXREC Q
"RTN","SDEC56",82,0)
 .S SDCL=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDEC56",83,0)
 .S LASTSUB=""
"RTN","SDEC56",84,0)
 .F  S SDCL=$O(^SC("AG","C",SDCLN,SDCL)) Q:SDCL'>0  D  I +MAXREC,SDECI'<MAXREC Q
"RTN","SDEC56",85,0)
 ..K SDDATA,SDMSG
"RTN","SDEC56",86,0)
 ..S SDFIELDS=".01;2;3;3.5;8;9;9.5;16;23;29;31;1912;1913;2002;2500;2502;2505;2506;2507"
"RTN","SDEC56",87,0)
 ..D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC56",88,0)
 ..S SDA="SDDATA(44,"""_SDCL_","")"
"RTN","SDEC56",89,0)
 ..;Q:@SDA@(2,"I")'="C"
"RTN","SDEC56",90,0)
 ..S SDTMP=""
"RTN","SDEC56",91,0)
 ..S $P(SDTMP,U,1)=SDCL              ;clinic ID
"RTN","SDEC56",92,0)
 ..S $P(SDTMP,U,2)=@SDA@(.01,"E")    ;clinic name
"RTN","SDEC56",93,0)
 ..S $P(SDTMP,U,3)=@SDA@(2,"E")      ;clinic type
"RTN","SDEC56",94,0)
 ..S $P(SDTMP,U,4)=@SDA@(3,"I")      ;institution ID
"RTN","SDEC56",95,0)
 ..S $P(SDTMP,U,5)=@SDA@(3,"E")      ;institution name
"RTN","SDEC56",96,0)
 ..S $P(SDTMP,U,6)=@SDA@(3.5,"I")    ;division ID
"RTN","SDEC56",97,0)
 ..S $P(SDTMP,U,7)=@SDA@(3.5,"E")    ;division NAME
"RTN","SDEC56",98,0)
 ..S $P(SDTMP,U,8)=@SDA@(8,"I")      ;stop code ID
"RTN","SDEC56",99,0)
 ..S $P(SDTMP,U,9)=@SDA@(8,"E")      ;stop code number
"RTN","SDEC56",100,0)
 ..S $P(SDTMP,U,10)=@SDA@(9,"E")     ;service
"RTN","SDEC56",101,0)
 ..S $P(SDTMP,U,11)=@SDA@(9.5,"I")   ;treating specialty ID
"RTN","SDEC56",102,0)
 ..S $P(SDTMP,U,12)=@SDA@(9.5,"E")   ;treating specialty name
"RTN","SDEC56",103,0)
 ..S $P(SDTMP,U,13)=@SDA@(16,"I")    ;default provider ID
"RTN","SDEC56",104,0)
 ..S $P(SDTMP,U,14)=@SDA@(16,"E")    ;default provider name
"RTN","SDEC56",105,0)
 ..S $P(SDTMP,U,15)=@SDA@(23,"I")    ;agency ID
"RTN","SDEC56",106,0)
 ..S $P(SDTMP,U,16)=@SDA@(23,"E")    ;agency name
"RTN","SDEC56",107,0)
 ..S $P(SDTMP,U,17)=+@SDA@(1912,"E")  ;length of appointment
"RTN","SDEC56",108,0)
 ..S $P(SDTMP,U,18)=@SDA@(1913,"I")  ;variable appointment
"RTN","SDEC56",109,0)
 ..S $P(SDTMP,U,19)=@SDA@(2500,"E")  ;prohibit access to clinic
"RTN","SDEC56",110,0)
 ..S $P(SDTMP,U,20)=@SDA@(2502,"E")  ;non-count clinic?
"RTN","SDEC56",111,0)
 ..S $P(SDTMP,U,21)=@SDA@(2505,"E")  ;inactivate date
"RTN","SDEC56",112,0)
 ..S $P(SDTMP,U,22)=@SDA@(2506,"E")  ;reactivate date
"RTN","SDEC56",113,0)
 ..S $P(SDTMP,U,23)=@SDA@(2507,"I")  ;default appointment type ID
"RTN","SDEC56",114,0)
 ..S $P(SDTMP,U,24)=@SDA@(2507,"E")  ;default appointment type name
"RTN","SDEC56",115,0)
 ..S $P(SDTMP,U,25)=$$GETPRV(SDCL)   ;providers - IEN ;; NAME ;; DEF? | ...
"RTN","SDEC56",116,0)
 ..S $P(SDTMP,U,26)=@SDA@(29,"I")    ;clinic services resource ID
"RTN","SDEC56",117,0)
 ..S $P(SDTMP,U,27)=@SDA@(29,"E")    ;clinic services resource name
"RTN","SDEC56",118,0)
 ..S $P(SDTMP,U,28)=@SDA@(31,"I")    ;clinic group (reports) ID
"RTN","SDEC56",119,0)
 ..S $P(SDTMP,U,29)=@SDA@(31,"E")    ;clinic group (reports) name
"RTN","SDEC56",120,0)
 ..S SDAUD=$O(^DIA(44,"B",SDCL,0))
"RTN","SDEC56",121,0)
 ..S SDAUDNOD=$G(^DIA(44,+SDAUD,0))
"RTN","SDEC56",122,0)
 ..I $P(SDAUDNOD,U,5)="A" S $P(SDTMP,U,30)=$$FMTE^XLFDT($P(SDAUDNOD,U,2),"M")
"RTN","SDEC56",123,0)
 ..S $P(SDTMP,U,31)=@SDA@(2002,"E")  ;max # days for future booking
"RTN","SDEC56",124,0)
 ..S $P(SDTMP,U,32)=""               ;LASTSUB setup after the loop in last record
"RTN","SDEC56",125,0)
 ..;
"RTN","SDEC56",126,0)
 ..S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC56",127,0)
 S:SDCLN'="" $P(@SDECY@(SDECI),U,32)="C"_"|"_SDCLN_"|"_SDCL
"RTN","SDEC56",128,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC56",129,0)
 Q
"RTN","SDEC56",130,0)
 ;
"RTN","SDEC56",131,0)
GETPRV(SDCL)  ;get providers from PROVIDER multiple in file 44
"RTN","SDEC56",132,0)
 ;INPUT:
"RTN","SDEC56",133,0)
 ; SDCL - clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC56",134,0)
 ;RETURN:
"RTN","SDEC56",135,0)
 ; PROVIDERS - Providers separated by pipe.
"RTN","SDEC56",136,0)
 ;       Each pipe piece contains the following ;; pieces:
"RTN","SDEC56",137,0)
 ;         1. provider ID pointer to NEW PERSON FILE 200
"RTN","SDEC56",138,0)
 ;         2. provider NAME from NEW PERSON file
"RTN","SDEC56",139,0)
 ;         3. default provider?  'NO'  'YES'
"RTN","SDEC56",140,0)
 N SDI,SDNOD,SDRET
"RTN","SDEC56",141,0)
 S SDRET=""
"RTN","SDEC56",142,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"PR",SDI)) Q:SDI'>0  D
"RTN","SDEC56",143,0)
 .S SDNOD=$G(^SC(SDCL,"PR",SDI,0))
"RTN","SDEC56",144,0)
 .S SDRET=$S(SDRET'="":SDRET_"|",1:"")_$P(SDNOD,U,1)_";;"_$$GET1^DIQ(200,$P(SDNOD,U,1)_",",.01)_";;"_$S($P(SDNOD,U,2)=1:"YES",1:"NO")
"RTN","SDEC56",145,0)
 Q SDRET
"RTN","SDEC56",146,0)
 ;
"RTN","SDEC56",147,0)
GETSUB(TXT)  ;
"RTN","SDEC56",148,0)
 N LAST
"RTN","SDEC56",149,0)
 S LAST=$E(TXT,$L(TXT))
"RTN","SDEC56",150,0)
 S LAST=$C($A(LAST)-1)
"RTN","SDEC56",151,0)
 S LAST=$E(TXT,1,$L(TXT)-1)_LAST_"ZZZZ"
"RTN","SDEC56",152,0)
 Q LAST
"RTN","SDEC57")
0^163^B39358442^n/a
"RTN","SDEC57",1,0)
SDEC57 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC57",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC57",3,0)
 ;
"RTN","SDEC57",4,0)
 Q
"RTN","SDEC57",5,0)
 ;APPSLOTS - return appt slots and availability
"RTN","SDEC57",6,0)
 ;SDECY=Return global array
"RTN","SDEC57",7,0)
 ;  FM DATE ^ SLOT START TIME ^ SLOT STOP TIME ^ AVAILABILITY CODE
"RTN","SDEC57",8,0)
 ;  Availability codes 0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23
"RTN","SDEC57",9,0)
 ;SDECRES=Resource name
"RTN","SDEC57",10,0)
 ;SDECSTRT=Start date/time
"RTN","SDEC57",11,0)
 ;SDECEND=End date/time
"RTN","SDEC57",12,0)
APPSLOTS(SDECY,SDECRES,SDECSTART,SDECEND) ;GET Create Assigned Slot Schedule
"RTN","SDEC57",13,0)
 N CNT
"RTN","SDEC57",14,0)
 N SDECAD,SDECALO,SDECBS,SDECDEP,SDECERR,SDECI,SDECIEN,SDECK,SDECL,SDECNEND,SDECNOD
"RTN","SDEC57",15,0)
 N SDECNOT,SDECNSTART,SDECPEND,SDECQ,SDECRESD,SDECRESN,SDECS,SDECSUBCD,SDECTMP
"RTN","SDEC57",16,0)
 N SDAB,SDECTYPE,SDECTYPED,SDECZ
"RTN","SDEC57",17,0)
 N %DT,X,Y
"RTN","SDEC57",18,0)
 S SDECERR=""
"RTN","SDEC57",19,0)
 S SDECY="^TMP(""SDEC57"","_$J_",""APPSLOTS"")"
"RTN","SDEC57",20,0)
 K @SDECY
"RTN","SDEC57",21,0)
 S SDECALO=0,SDECI=0
"RTN","SDEC57",22,0)
 S @SDECY@(SDECI)="T00030DATE^T00030START_TIME^T00030END_TIME^I00010AVAILABILITY"_$C(30)
"RTN","SDEC57",23,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",24,0)
 S SDECSTART=Y
"RTN","SDEC57",25,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",26,0)
 S SDECEND=Y
"RTN","SDEC57",27,0)
 ;validate SDECRES
"RTN","SDEC57",28,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC57",29,0)
 I SDECRES']"" S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",30,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",31,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0)) I '+SDECRES S @SDECY@(1)="-1^Invalid Resource ID"_$C(30)_$C(31) Q
"RTN","SDEC57",32,0)
 S SDAB="^TMP("_$J_",""SDEC57"",""BLKS"")"
"RTN","SDEC57",33,0)
 K @SDAB
"RTN","SDEC57",34,0)
 D GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)
"RTN","SDEC57",35,0)
 ;Get Access Type IDs
"RTN","SDEC57",36,0)
 N SD1,SD2,SD3,SD4,SDI,SDNOD,SDENDDT
"RTN","SDEC57",37,0)
 N SDSTRTDT,SDSLOTS,SDSTOPTM,SDSTRTTM
"RTN","SDEC57",38,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC57",39,0)
 .S SDNOD=@SDAB@(SDI)
"RTN","SDEC57",40,0)
 .S SD1=$P(SDNOD,U,2) ;start DT
"RTN","SDEC57",41,0)
 .S SD2=$P(SDNOD,U,3) ;end DT
"RTN","SDEC57",42,0)
 .S SD3=+$P(SDNOD,U,4) ;slots
"RTN","SDEC57",43,0)
 .S SD4=$P(SDNOD,U,5) ;access type(1=avail,2=not avail,3=canc)
"RTN","SDEC57",44,0)
 .S SDSTRTDT=$P(SD1,".")
"RTN","SDEC57",45,0)
 .S SDENDDT=$P(SD2,".")
"RTN","SDEC57",46,0)
 .S SDSTRTTM=$E($P(SD1_"0000",".",2),1,4)
"RTN","SDEC57",47,0)
 .S SDSTOPTM=$E($P(SD2_"0000",".",2),1,4)
"RTN","SDEC57",48,0)
 .S SDSLOTS=$P(SDNOD,U,4)
"RTN","SDEC57",49,0)
 .S SDSLOTS=$S(SDSLOTS=" ":"",1:SDSLOTS)
"RTN","SDEC57",50,0)
 .S SDSLOTS=$S(SD4=2:"",SD4=3:"X",1:SDSLOTS)
"RTN","SDEC57",51,0)
 .S SDECI=SDECI+1,@SDECY@(SDECI)=SDSTRTDT_U_SDSTRTTM_U_SDSTOPTM_U_SDSLOTS_$C(30)
"RTN","SDEC57",52,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC57",53,0)
 K @SDAB
"RTN","SDEC57",54,0)
 Q
"RTN","SDEC57",55,0)
 ;
"RTN","SDEC57",56,0)
GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)  ;load SDEC ACCESS BLOCKS from file 44
"RTN","SDEC57",57,0)
 N SDCL,SDI,SDJ
"RTN","SDEC57",58,0)
 S SDECRES=$G(SDECRES) Q:SDECRES=""
"RTN","SDEC57",59,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) Q
"RTN","SDEC57",60,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0))
"RTN","SDEC57",61,0)
 Q:'SDECRES
"RTN","SDEC57",62,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",63,0)
 Q:Y=-1
"RTN","SDEC57",64,0)
 S SDECSTART=Y
"RTN","SDEC57",65,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",66,0)
 Q:Y=-1
"RTN","SDEC57",67,0)
 S SDECEND=Y
"RTN","SDEC57",68,0)
 S SDCL=$$GET1^DIQ(409.831,SDECRES_",",.04,"I")
"RTN","SDEC57",69,0)
 Q:SDCL=""
"RTN","SDEC57",70,0)
 S SDI=$$FMADD^XLFDT(SDECSTART,-1)
"RTN","SDEC57",71,0)
 F  S SDI=$$FMADD^XLFDT(SDI,1) Q:SDI>$P(SDECEND,".",1)  D
"RTN","SDEC57",72,0)
 .Q:$G(^SC(SDCL,"ST",SDI,1))["**CANCELLED**"
"RTN","SDEC57",73,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDI)) Q   ;do not schedule on holidays
"RTN","SDEC57",74,0)
 .Q:$$INACTIVE^SDEC32(SDCL,$P(SDI,".",1))   ;don't get availability if clinic inactive on day SDI
"RTN","SDEC57",75,0)
 .D RESAB(SDAB,SDCL,SDI,SDI_"."_2359,SDECRES)
"RTN","SDEC57",76,0)
 Q
"RTN","SDEC57",77,0)
 ;
"RTN","SDEC57",78,0)
RESAB(SDAB,SDCL,SDBEG,SDEND,SDECRES)   ;build access blocks for 1 clinic
"RTN","SDEC57",79,0)
 ; SDECRES (optional) Resource pointer to SDEC RESOURCE file
"RTN","SDEC57",80,0)
 ;                    used to build access blocks from clinic availability
"RTN","SDEC57",81,0)
 ;                    for only this resource; all resources are build if null
"RTN","SDEC57",82,0)
 ;  .01    name
"RTN","SDEC57",83,0)
 ;    2    type (clinic)
"RTN","SDEC57",84,0)
 ;   1912  length of app't
"RTN","SDEC57",85,0)
 ;   1914  hour clinic display begins default is 8am; whole number 0-16
"RTN","SDEC57",86,0)
 ;   1917  display increments per hour
"RTN","SDEC57",87,0)
 ;   2505  inactive date
"RTN","SDEC57",88,0)
 ;   2506  reactivate date
"RTN","SDEC57",89,0)
 N SDAY,SDCLS,SDDATA,SDFIELDS,SDIN,SDLEN,SDRA,SDSI,SDT
"RTN","SDEC57",90,0)
 I $P($G(SDBEG),".",1)'?7N S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1)
"RTN","SDEC57",91,0)
 I $P($G(SDEND),".",1)'?7N S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),365)
"RTN","SDEC57",92,0)
 S SDECRES=$G(SDECRES) I SDECRES'="",'$D(^SDEC(409.831,+SDECRES,0)) S SDECRES=""
"RTN","SDEC57",93,0)
 S SDFIELDS=".01;2;1912;1914;1917;2505;2506"
"RTN","SDEC57",94,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC57",95,0)
 Q:SDDATA(44,SDCL_",",2,"I")'="C"   ;only clinic
"RTN","SDEC57",96,0)
 I $$INACTIVE(SDCL,.SDBEG,.SDEND,SDDATA(44,SDCL_",",2505,"I"),SDDATA(44,SDCL_",",2506,"I")) Q   ;only active
"RTN","SDEC57",97,0)
 S SDLEN=SDDATA(44,SDCL_",",1912,"I")  ;length of app't is required in file 44
"RTN","SDEC57",98,0)
 S SDCLS=SDDATA(44,SDCL_",",1914,"I")   ;hour clinic display begins
"RTN","SDEC57",99,0)
 S:SDCLS="" SDCLS=8 ;apply default start time of 0800
"RTN","SDEC57",100,0)
 ;SDSI=DISPLAY INCREMENTS PER HOUR (1-60min,2-30min,3-20min,4-15min,6-10min)
"RTN","SDEC57",101,0)
 S SDSI=SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",102,0)
 D TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)
"RTN","SDEC57",103,0)
 Q
"RTN","SDEC57",104,0)
 ;
"RTN","SDEC57",105,0)
TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND) ;add/update access blocks for day template SDT
"RTN","SDEC57",106,0)
 ;SDBEG  = (optional) Start date in fileman format; defaults to 'today'
"RTN","SDEC57",107,0)
 ;SDEND = (optional) Stop date in fileman format; defaults to 365 days
"RTN","SDEC57",108,0)
 N SDAY,SDAY1,SDBLKS,SDE,SDE1,SDJ,SDPAT,SDPAT1,SDSIM
"RTN","SDEC57",109,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",110,0)
 Q:SDCL=""
"RTN","SDEC57",111,0)
 S SDLEN=$G(SDLEN)
"RTN","SDEC57",112,0)
 ;LENGTH OF APP'T
"RTN","SDEC57",113,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDEC57",114,0)
 S SDCLS=$G(SDCLS)
"RTN","SDEC57",115,0)
 ;HOUR CLINIC DISPLAY BEGINS
"RTN","SDEC57",116,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDEC57",117,0)
 S SDSI=$G(SDSI)
"RTN","SDEC57",118,0)
 ;DISPLAY INCREMENTS PER HOUR
"RTN","SDEC57",119,0)
 I SDSI="" S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",120,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC57",121,0)
 D TDAY1
"RTN","SDEC57",122,0)
 Q
"RTN","SDEC57",123,0)
TDAY1 ;
"RTN","SDEC57",124,0)
 N D,SDA,SDTP,SS,ST,Y
"RTN","SDEC57",125,0)
 ;SDA=begin position of pattern on template
"RTN","SDEC57",126,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDEC57",127,0)
 S SDTP=""
"RTN","SDEC57",128,0)
 I '$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S ST='$$ST(SDCL,SDBEG) Q:ST
"RTN","SDEC57",129,0)
 I $D(^SC(SDCL,"ST",$P(SDBEG,".",1),9)) S SDTP=$G(^SC(SDCL,"OST",$P(SDBEG,".",1),1)) S SDTP=$E(SDTP,SDA,$L(SDTP))
"RTN","SDEC57",130,0)
 E  D
"RTN","SDEC57",131,0)
 .;get day of week number
"RTN","SDEC57",132,0)
 .S D=$$DOW^XLFDT($P(SDBEG,".",1),1)
"RTN","SDEC57",133,0)
 .S Y=D#7
"RTN","SDEC57",134,0)
 .;find day template pattern
"RTN","SDEC57",135,0)
 .S SS=$$FDT(SDCL,Y)
"RTN","SDEC57",136,0)
 .Q:SS=""
"RTN","SDEC57",137,0)
 .S SDTP=SS
"RTN","SDEC57",138,0)
 Q:SDTP=""
"RTN","SDEC57",139,0)
 K SDBLKS
"RTN","SDEC57",140,0)
 D GETBLKS^SDEC57A(.SDBLKS,SDTP,$P(SDBEG,".",1),SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDEC57",141,0)
 D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,$P(SDBEG,".",1))
"RTN","SDEC57",142,0)
 K SDBLKS
"RTN","SDEC57",143,0)
 Q
"RTN","SDEC57",144,0)
 ;
"RTN","SDEC57",145,0)
ST(SDCL,SDBEG) ;build ST
"RTN","SDEC57",146,0)
 ;RETURN - 0=not buildable or built as holiday ;1=buildable
"RTN","SDEC57",147,0)
 N D,SC,SDDT,SS,Y
"RTN","SDEC57",148,0)
 S SDDT=$P(SDBEG,".",1)
"RTN","SDEC57",149,0)
 S SC=SDCL
"RTN","SDEC57",150,0)
 S D=$$DOW^XLFDT(SDDT,1)
"RTN","SDEC57",151,0)
 S Y=D#7
"RTN","SDEC57",152,0)
 I $D(^HOLIDAY(SDDT))&($$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y") D H Q 0
"RTN","SDEC57",153,0)
 S SS=$$FDT(SDCL,Y)
"RTN","SDEC57",154,0)
 Q:+SS="" 0
"RTN","SDEC57",155,0)
 S ^SC(+SDCL,"ST",SDDT,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDDT,6,7)_$S(SDSI=3:"",SDSI=6:"      ",1:"  ")_SS,^SC(+SDCL,"ST",SDDT,0)=SDDT
"RTN","SDEC57",156,0)
 Q 1
"RTN","SDEC57",157,0)
FDT(SDCL,Y)  ;find day template pattern
"RTN","SDEC57",158,0)
 N SDE,SDTP
"RTN","SDEC57",159,0)
 S SDTP=""
"RTN","SDEC57",160,0)
 S SDE=$O(^SC(SDCL,"T"_Y,99999999),-1)
"RTN","SDEC57",161,0)
 Q:'SDE ""
"RTN","SDEC57",162,0)
 S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",163,0)
 Q:SDTP="" ""
"RTN","SDEC57",164,0)
 F  S SDE=$O(^SC(SDCL,"T"_Y,SDE),-1) Q:SDE'>0  Q:$P(SDBEG,".",1)'<SDE  S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",165,0)
 Q SDTP
"RTN","SDEC57",166,0)
H ;update ST as holiday
"RTN","SDEC57",167,0)
 S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^HOLIDAY(X,0),U,2),^SC(+SC,"ST",X,0)=X
"RTN","SDEC57",168,0)
 Q
"RTN","SDEC57",169,0)
 ;
"RTN","SDEC57",170,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC57",171,0)
 ;
"RTN","SDEC57",172,0)
INACTIVE(SDCL,SDBEG,SDEND,IDATE,RDATE)  ;
"RTN","SDEC57",173,0)
 ;INPUT:
"RTN","SDEC57",174,0)
 ;  SDCL  - clinic ID
"RTN","SDEC57",175,0)
 ; .SDBEG - begin date in FM format, no time
"RTN","SDEC57",176,0)
 ; .SDEND - end date in FM format, no time
"RTN","SDEC57",177,0)
 ;  IDATE - clinic's inactivation date
"RTN","SDEC57",178,0)
 ;  RDATE - clinic's reactivation date
"RTN","SDEC57",179,0)
 ;RETURN:
"RTN","SDEC57",180,0)
 ; 0=Clinic is active
"RTN","SDEC57",181,0)
 ; 1=Clinic is inactive
"RTN","SDEC57",182,0)
 ; active  0 0
"RTN","SDEC57",183,0)
 I IDATE="" Q 0
"RTN","SDEC57",184,0)
 ;  active but inactivated in future
"RTN","SDEC57",185,0)
 I IDATE>SDBEG S SDEND=IDATE Q 0
"RTN","SDEC57",186,0)
 ; inactive 1 0
"RTN","SDEC57",187,0)
 I IDATE<=SDBEG,RDATE="" Q 1
"RTN","SDEC57",188,0)
 ; inactive 1 1 inactive but reactivated
"RTN","SDEC57",189,0)
 ;  inactive now reactive now
"RTN","SDEC57",190,0)
 I IDATE<=SDBEG,RDATE<=SDBEG Q 0
"RTN","SDEC57",191,0)
 ;  inactive now reactive future
"RTN","SDEC57",192,0)
 I IDATE<=SDBEG,RDATE>IDATE S SDBEG=RDATE Q 0
"RTN","SDEC57",193,0)
 Q 1
"RTN","SDEC57A")
0^164^B103325420^n/a
"RTN","SDEC57A",1,0)
SDEC57A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDEC57A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDEC57A",3,0)
 ;
"RTN","SDEC57A",4,0)
 Q
"RTN","SDEC57A",5,0)
 ;
"RTN","SDEC57A",6,0)
 ;build access block array SDBLKS from pattern SDPAT
"RTN","SDEC57A",7,0)
GETBLKS(SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL) ;
"RTN","SDEC57A",8,0)
 ;INPUT:
"RTN","SDEC57A",9,0)
 ;  SDPAT - Pattern from CURRENT AVAILABILITY field of PATTERN multiple in file 44
"RTN","SDEC57A",10,0)
 ;  SDAY  - date (no time) in FM format
"RTN","SDEC57A",11,0)
 ;  SDCLS - hour clinic display begins from field 1914 in file 44
"RTN","SDEC57A",12,0)
 ;  SDLEN - length of app't from field 1912 in file 44
"RTN","SDEC57A",13,0)
 ;  SDSI  - display increments per hour
"RTN","SDEC57A",14,0)
 ;  SDCL  - clinic IEN
"RTN","SDEC57A",15,0)
 ;RETURN:
"RTN","SDEC57A",16,0)
 ; .SDBLKS - array of access block data to be stored in SDEC ACCESS BLOCK file
"RTN","SDEC57A",17,0)
 ;           SDBLKS(<count>)=<start time> ^ <end time> ^ <slots> ^ <access type>
"RTN","SDEC57A",18,0)
 N DTARRAY
"RTN","SDEC57A",19,0)
 N SDATAV,SDATCA,SDATUN,SDF,SDI,SDSIM,SDSTPAT
"RTN","SDEC57A",20,0)
 S SDF=0
"RTN","SDEC57A",21,0)
 ;get SDEC ACCESS TYPEs
"RTN","SDEC57A",22,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",23,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDEC57A",24,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",25,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDEC57A",26,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDEC57A",27,0)
 S SDSTPAT=$G(^SC(SDCL,"ST",SDAY,1)) I SDSTPAT["CANCELLED" S SDF=1,SDSTPAT=$G(^SC(SDCL,"ST",SDAY,"CAN"))   ;get PATTERN from file 44
"RTN","SDEC57A",28,0)
 S SDSTPAT=$E(SDSTPAT,SDSIM+SDSIM,90)
"RTN","SDEC57A",29,0)
 D:SDSTPAT'="" ARRAY^SDECUTL2(.DTARRAY,SDSTPAT,SDAY,SDLEN,SDCLS,SDSI) ;convert pattern to array
"RTN","SDEC57A",30,0)
 S SDPAT=SDSTPAT
"RTN","SDEC57A",31,0)
 K SDBLKS
"RTN","SDEC57A",32,0)
 ;1 2 3 4 OR 6
"RTN","SDEC57A",33,0)
 D @SDSI
"RTN","SDEC57A",34,0)
 Q
"RTN","SDEC57A",35,0)
1  ;1 increments per hour (60 min)
"RTN","SDEC57A",36,0)
 N AU,BCNT,BMIN,BSLOT,BSTART,BTIME,BSTOP,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDTAR,SDI,SLOT,STA
"RTN","SDEC57A",37,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",38,0)
 S SDI=0,SLOT=""
"RTN","SDEC57A",39,0)
 F CNT1=2:2 S SLOT=$E(SDPAT,CNT1) Q:$$VAL(SLOT)  Q:CNT1>$L(SDPAT)  ;find 1st slot ;might not be on the hour
"RTN","SDEC57A",40,0)
 I CNT1>6 D
"RTN","SDEC57A",41,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDEC57A",42,0)
 .S BTIME=SDCLS+(CNT1\8)
"RTN","SDEC57A",43,0)
 .S HR=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)
"RTN","SDEC57A",44,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",45,0)
 .S BTIME=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",46,0)
 .S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",47,0)
 .S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_0_U_SDATUN
"RTN","SDEC57A",48,0)
 S (BSLOT,BSTART)=""
"RTN","SDEC57A",49,0)
 S HOUR=(SDCLS+(CNT1\8))-1
"RTN","SDEC57A",50,0)
 F CNT=CNT1:8 D  Q:SLOT=""
"RTN","SDEC57A",51,0)
 .S HOUR=HOUR+1   ;I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDEC57A",52,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",53,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",54,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",55,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR))="X"
"RTN","SDEC57A",56,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",57,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",58,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",59,0)
 .I 1 D
"RTN","SDEC57A",60,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",61,0)
 ..S BMIN=$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",62,0)
 ..S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")
"RTN","SDEC57A",63,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",64,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",65,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",66,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",67,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",68,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)   ;_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDEC57A",69,0)
 .S BCNT=CNT
"RTN","SDEC57A",70,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_0_U_SDATUN
"RTN","SDEC57A",71,0)
 Q
"RTN","SDEC57A",72,0)
2  ;2 increments per hour (30 min)
"RTN","SDEC57A",73,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",74,0)
 S (BSLOT,BSTART,SLOT,STA)=""
"RTN","SDEC57A",75,0)
 S SDI=0
"RTN","SDEC57A",76,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",77,0)
 ;find 1st slot-might not be on the hour
"RTN","SDEC57A",78,0)
 F CNT1=2:2 S:(CNT1#8)=2 HOUR=HOUR+1 S SLOT=$E(SDPAT,CNT1) Q:$$VAL(SLOT)  Q:CNT1>$L(SDPAT)
"RTN","SDEC57A",79,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDEC57A",80,0)
 ;get array of start times
"RTN","SDEC57A",81,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",82,0)
 I CNT1>2 D
"RTN","SDEC57A",83,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDEC57A",84,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",85,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",86,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",87,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDEC57A",88,0)
 S BSTART=""
"RTN","SDEC57A",89,0)
 I ((CNT1#8)=2)!((CNT1#8)=4) S HOUR=HOUR-1
"RTN","SDEC57A",90,0)
 F CNT=CNT1:4 D  Q:SLOT=""
"RTN","SDEC57A",91,0)
 .I ((CNT#8)=2)!((CNT#8)=4) S HOUR=HOUR+1
"RTN","SDEC57A",92,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",93,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",94,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",95,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",96,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",97,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",98,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",99,0)
 .I 1 D
"RTN","SDEC57A",100,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",101,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",102,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",103,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",104,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",105,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",106,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",107,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:3,1:"")
"RTN","SDEC57A",108,0)
 .S BCNT=CNT
"RTN","SDEC57A",109,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDEC57A",110,0)
 Q
"RTN","SDEC57A",111,0)
3  ;3 increments per hour (20 min)
"RTN","SDEC57A",112,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",113,0)
 S (BSLOT,BSTART,SLOT)=""
"RTN","SDEC57A",114,0)
 S SDI=0
"RTN","SDEC57A",115,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",116,0)
 F CNT1=2:2 S:(CNT1#6)=2 HOUR=HOUR+1 S SLOT=$E(SDPAT,CNT1) Q:$$VAL(SLOT)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDEC57A",117,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDEC57A",118,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",119,0)
 I CNT1>2 D
"RTN","SDEC57A",120,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDEC57A",121,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",122,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",123,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#6)=4:$P(STA(HR,4),U,2),(CNT1#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",124,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDEC57A",125,0)
 S BSTART=""
"RTN","SDEC57A",126,0)
 I ((CNT1#6)=2) S HOUR=HOUR-1
"RTN","SDEC57A",127,0)
 F CNT=CNT1:2 D  Q:SLOT=""
"RTN","SDEC57A",128,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDEC57A",129,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",130,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",131,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",132,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#6)=4:$P(STA(HR,4),U,1),(CNT#6)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",133,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",134,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",135,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",136,0)
 .I 1 D
"RTN","SDEC57A",137,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",138,0)
 ..S BTIME=$S(((CNT#6)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",139,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",140,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",141,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",142,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",143,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",144,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:2,(CNT#6)=0:4,1:"")
"RTN","SDEC57A",145,0)
 .S BCNT=CNT
"RTN","SDEC57A",146,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDEC57A",147,0)
 Q
"RTN","SDEC57A",148,0)
4  ;4 increments per hour (15 min)
"RTN","SDEC57A",149,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",150,0)
 S (BSLOT,BSTART,SLOT,STA)=""
"RTN","SDEC57A",151,0)
 S SDI=0
"RTN","SDEC57A",152,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",153,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",154,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDEC57A",155,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDEC57A",156,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",157,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",158,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",159,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",160,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",161,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",162,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",163,0)
 .I 1 D
"RTN","SDEC57A",164,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",165,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",166,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",167,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",168,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",169,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",170,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",171,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDEC57A",172,0)
 .S BCNT=CNT
"RTN","SDEC57A",173,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDEC57A",174,0)
 Q
"RTN","SDEC57A",175,0)
6  ;6 increments per hour (10 min)
"RTN","SDEC57A",176,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",177,0)
 S (BSLOT,BSTART,SLOT)=""
"RTN","SDEC57A",178,0)
 S SDI=0
"RTN","SDEC57A",179,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",180,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",181,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDEC57A",182,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDEC57A",183,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",184,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",185,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",186,0)
 .S SDCAN=$G(DTARRAY(SDAY,$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:$P(STA(HR,4),U,1),(CNT#12)=6:$P(STA(HR,6),U,1),(CNT#12)=8:$P(STA(HR,8),U,1),(CNT#12)=10:$P(STA(HR,10),U,1),(CNT#12)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",187,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",188,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",189,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",190,0)
 .I 1 D
"RTN","SDEC57A",191,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",192,0)
 ..S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",193,0)
 ..S BTIME=HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",194,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",195,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",196,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",197,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",198,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",199,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:1,(CNT#12)=6:2,(CNT#12)=8:3,(CNT#12)=10:4,(CNT#12)=0:5,1:"")
"RTN","SDEC57A",200,0)
 .S BCNT=CNT
"RTN","SDEC57A",201,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDEC57A",202,0)
 Q
"RTN","SDEC57A",203,0)
STA ;
"RTN","SDEC57A",204,0)
 N HRP
"RTN","SDEC57A",205,0)
 S HRP=HR-1 S HRP=$S($L(HRP)=1:"0"_HRP,1:HRP)
"RTN","SDEC57A",206,0)
 I $D(STA(HRP)) D
"RTN","SDEC57A",207,0)
 .S STA(HR,4)=STA(HRP,4)
"RTN","SDEC57A",208,0)
 .S:SDSI'=3 STA(HR,6)=STA(HRP,6)
"RTN","SDEC57A",209,0)
 .S:SDSI=6 STA(HR,8)=STA(HRP,8)
"RTN","SDEC57A",210,0)
 .S:SDSI=6 STA(HR,10)=STA(HRP,10)
"RTN","SDEC57A",211,0)
 .S STA(HR,0)=STA(HRP,0)
"RTN","SDEC57A",212,0)
 .S STA(HR,2)=STA(HRP,2)
"RTN","SDEC57A",213,0)
 E  X "D B"_SDSI_"^SDECUT1A(.STA,"""_HR_""",0)"
"RTN","SDEC57A",214,0)
 Q
"RTN","SDEC57A",215,0)
 ;
"RTN","SDEC57A",216,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT)  ;make block
"RTN","SDEC57A",217,0)
 N SDATAV,SDATUN
"RTN","SDEC57A",218,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",219,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",220,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_SLOT_U_$S($$VAL(SLOT):SDATAV,1:SDATUN)
"RTN","SDEC57A",221,0)
 Q
"RTN","SDEC57A",222,0)
 ;0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23,
"RTN","SDEC57A",223,0)
 ;'*$!@#?' for overbook outside normal hours, X for cancelled
"RTN","SDEC57A",224,0)
VAL(SLOT) ;Return 1 if valid available/overbook slots character
"RTN","SDEC57A",225,0)
 I $L(SLOT)=0 Q 0
"RTN","SDEC57A",226,0)
 Q "*$!@#0123456789jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX"[$E(SLOT,1)
"RTN","SDECALV")
0^119^B21735458^n/a
"RTN","SDECALV",1,0)
SDECALV ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECALV",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECALV",3,0)
 ;
"RTN","SDECALV",4,0)
EN1(SDALVR)  ;
"RTN","SDECALV",5,0)
EN ;VISIT CREATION
"RTN","SDECALV",6,0)
 ;required:
"RTN","SDECALV",7,0)
 ;  SDDATE
"RTN","SDECALV",8,0)
 ;  SDLOC
"RTN","SDECALV",9,0)
 ;  SDPAT
"RTN","SDECALV",10,0)
 ;optional:
"RTN","SDECALV",11,0)
 ; SDALV  (used in SDECALV1)
"RTN","SDECALV",12,0)
 ; SDALVR (used in SDECALV1)
"RTN","SDECALV",13,0)
 ; SDAPDT
"RTN","SDECALV",14,0)
 ; SDCODT
"RTN","SDECALV",15,0)
 ; SDHL - HOSPITAL LOCATION id
"RTN","SDECALV",16,0)
 ; SDLOC
"RTN","SDECALV",17,0)
 ; SDOPT
"RTN","SDECALV",18,0)
 ; SDPROT
"RTN","SDECALV",19,0)
 ; SDPVL
"RTN","SDECALV",20,0)
 ; SDTYPE
"RTN","SDECALV",21,0)
 ; SDUSR
"RTN","SDECALV",22,0)
 ; SDVELG
"RTN","SDECALV",23,0)
 N D0,DA,DIC,DIE,DR
"RTN","SDECALV",24,0)
 N SDAFLG,SDCAT,SDCLN,SDVSIT
"RTN","SDECALV",25,0)
 N SDAPDT,SDCAT,SDCODT,SDDATE,SDHL,SDLOC,SDOLOC,SDOPT,SDPAT,SDPROT,SDPVL
"RTN","SDECALV",26,0)
 N SDTYPE,SDUSR,SDVELG
"RTN","SDECALV",27,0)
 D INIT^SDECALV1(.SDALVR)
"RTN","SDECALV",28,0)
 S SDAPDT=$G(SDALVR("APPT DATE"))
"RTN","SDECALV",29,0)
 S SDCAT=$G(SDALVR("SDCAT"))
"RTN","SDECALV",30,0)
 S SDDATE=$G(SDALVR("SDDATE"))
"RTN","SDECALV",31,0)
 S SDHL=$G(SDALVR("SDHL"))
"RTN","SDECALV",32,0)
 S SDLOC=$G(SDALVR("SDLOC"))
"RTN","SDECALV",33,0)
 S SDCODT=$G(SDALVR("SDCODT"))
"RTN","SDECALV",34,0)
 S SDOLOC=$G(SDALVR("SDOLOC"))
"RTN","SDECALV",35,0)
 S SDOPT=$G(SDALVR("SDOPT"))
"RTN","SDECALV",36,0)
 S SDPAT=$G(SDALVR("SDPAT"))
"RTN","SDECALV",37,0)
 S SDPROT=$G(SDALVR("SDPROT"))
"RTN","SDECALV",38,0)
 S SDPVL=$G(SDALVR("SDPVL"))
"RTN","SDECALV",39,0)
 S SDTYPE=$G(SDALVR("SDTYPE"))
"RTN","SDECALV",40,0)
 S SDUSR=$G(SDALVR("SDUSR"))
"RTN","SDECALV",41,0)
 S SDVELG=$G(SDALVR("SDVELG"))
"RTN","SDECALV",42,0)
 I $D(SDAFLG) D EOJ Q
"RTN","SDECALV",43,0)
 LOCK +^TMP("SDECALV",SDPAT):60
"RTN","SDECALV",44,0)
 I $D(SDADD) D GENVISIT,EOJ Q  ; forced add
"RTN","SDECALV",45,0)
 Q
"RTN","SDECALV",46,0)
 ;
"RTN","SDECALV",47,0)
AUTO ; NON-INTERACTIVE MODE
"RTN","SDECALV",48,0)
 S SDAVDC=9999999-$P(SDDATE,".")_"."_$P(SDDATE,".",2)
"RTN","SDECALV",49,0)
 F SDAI=0:0 S SDAI=$O(^AUPNVSIT("AA",SDPAT,SDAVDC,SDAI)) Q:SDAI=""  D CHECK Q:SDVSIT
"RTN","SDECALV",50,0)
 Q:SDVSIT
"RTN","SDECALV",51,0)
 D GENVISIT
"RTN","SDECALV",52,0)
 Q
"RTN","SDECALV",53,0)
 ;
"RTN","SDECALV",54,0)
CHECK ; CHECK VISIT AUTO MODE
"RTN","SDECALV",55,0)
 N SDAX
"RTN","SDECALV",56,0)
 S SDAX=^AUPNVSIT(SDAI,0)
"RTN","SDECALV",57,0)
 Q:$P(SDAX,U,11)
"RTN","SDECALV",58,0)
 I $D(SDCLN),$P(SDAX,U,8)'=SDCLN Q  ;CHANGED THIS LINE ON 4/4/96 - DOES THIS FIX IT?
"RTN","SDECALV",59,0)
 I '$D(SDCLN),$P(SDAX,U,8)]"" Q  ;if not passing clinic and visit has clinic do not select this visit
"RTN","SDECALV",60,0)
 Q:$P(SDAX,U,3)'=SDTYPE
"RTN","SDECALV",61,0)
 Q:$P(SDAX,U,6)'=SDLOC
"RTN","SDECALV",62,0)
 Q:$P(SDAX,U,7)'=SDCAT
"RTN","SDECALV",63,0)
 S SDVSIT=SDAI
"RTN","SDECALV",64,0)
 Q
"RTN","SDECALV",65,0)
 ;
"RTN","SDECALV",66,0)
 ;--------------------------------------------------------------
"RTN","SDECALV",67,0)
 ;
"RTN","SDECALV",68,0)
GENVISIT ; GENERATE NEW VISIT
"RTN","SDECALV",69,0)
 ;INPUT:
"RTN","SDECALV",70,0)
 ; SDALVR("SDDATE")     .01  VISIT/ADMIT DATE&TIME in fm format
"RTN","SDECALV",71,0)
 ;                      .02  DATE VISIT CREATED
"RTN","SDECALV",72,0)
 ; SDALVR("SDTYPE")     .03  TYPE  valid values:
"RTN","SDECALV",73,0)
 ;       I:IHS
"RTN","SDECALV",74,0)
 ;       C:CONTRACT
"RTN","SDECALV",75,0)
 ;       T:TRIBAL
"RTN","SDECALV",76,0)
 ;       O:OTHER
"RTN","SDECALV",77,0)
 ;       6:638 PROGRAM
"RTN","SDECALV",78,0)
 ;       V:VA
"RTN","SDECALV",79,0)
 ; SDPAT                .05  Patient pointer to PATIENT file 2
"RTN","SDECALV",80,0)
 ; SDLOC                .06  LOC. OF ENCOUNTER pointer to LOCATION file
"RTN","SDECALV",81,0)
 ; SDCAT                .07  Service Category
"RTN","SDECALV",82,0)
 ; SDCLN                .08  DSS ID (Clinic Stop)
"RTN","SDECALV",83,0)
 ; SDPVL                .12  Parent Visit Link
"RTN","SDECALV",84,0)
 ;                      .13  Date Last Modified in fm format
"RTN","SDECALV",85,0)
 ; SDCODT               .18  Check out Date&Time
"RTN","SDECALV",86,0)
 ; SDVELG               .21  Eligibility pointer to ELIGIBILITY CODE file 8
"RTN","SDECALV",87,0)
 ; SDHL                 .22  Hospital Location pointer to file 44
"RTN","SDECALV",88,0)
 ; SDUSR                .23  Created by user pointer to NEW PERSON
"RTN","SDECALV",89,0)
 ; SDOPT                .24  Option used to Create pointer to OPTION file
"RTN","SDECALV",90,0)
 ; SDPROT               .25  Protocol pointer to PROTOCOL file
"RTN","SDECALV",91,0)
 ; SDOLOC               2101 outside location
"RTN","SDECALV",92,0)
 ;
"RTN","SDECALV",93,0)
 N AUPNDOB,AUPNDOD,AUPNSEX
"RTN","SDECALV",94,0)
 N SDDOB,SDDOD,SDFDA,SDIEN,SDMSG,SDSEX,X,Y,%DT
"RTN","SDECALV",95,0)
 S Y=SDPAT D ^AUPNPAT K Y
"RTN","SDECALV",96,0)
 S SDSEX=AUPNSEX,SDDOB=AUPNDOB,SDDOD=AUPNDOD
"RTN","SDECALV",97,0)
 S X=$G(SDDATE),%DT="TRXN" D ^%DT S X=Y I X=-1 S SDAFLG=2,SDAFLG("ERR")=".01^"_SDDATE_"^DATE INVALID FOR PATIENT,CANNOT CREATE VISIT .01 VALUE" Q
"RTN","SDECALV",98,0)
 D VSIT01^AUPNVSIT
"RTN","SDECALV",99,0)
 I '$D(X) S SDAFLG=2,SDAFLG("ERR")=".01^"_SDDATE_"^DATE INVALID FOR PATIENT,CANNOT CREATE VISIT .01 VALUE" Q
"RTN","SDECALV",100,0)
 S SDFDA="SDFDA(9000010,""+1,"")"
"RTN","SDECALV",101,0)
 S @SDFDA@(.01)=SDDATE
"RTN","SDECALV",102,0)
 S @SDFDA@(.02)=$$NOW^XLFDT
"RTN","SDECALV",103,0)
 S @SDFDA@(.03)=$G(SDTYPE)
"RTN","SDECALV",104,0)
 S @SDFDA@(.05)=$G(SDPAT)
"RTN","SDECALV",105,0)
 S @SDFDA@(.06)=$G(SDLOC)
"RTN","SDECALV",106,0)
 S @SDFDA@(.07)=$G(SDCAT)
"RTN","SDECALV",107,0)
 S @SDFDA@(.08)=$G(SDCLN)
"RTN","SDECALV",108,0)
 S @SDFDA@(.12)=$G(SDPVL)
"RTN","SDECALV",109,0)
 S @SDFDA@(.13)=DT
"RTN","SDECALV",110,0)
 S @SDFDA@(.18)=$G(SDCODT)
"RTN","SDECALV",111,0)
 S @SDFDA@(.21)=$G(SDVELG)
"RTN","SDECALV",112,0)
 S @SDFDA@(.22)=$G(SDHL)
"RTN","SDECALV",113,0)
 S @SDFDA@(.23)=$G(SDUSR)
"RTN","SDECALV",114,0)
 S @SDFDA@(.24)=$G(SDOPT)
"RTN","SDECALV",115,0)
 S @SDFDA@(.25)=$G(SDPROT)
"RTN","SDECALV",116,0)
 S @SDFDA@(2101)=$S($G(SDOLOC)]"":SDOLOC,1:"")
"RTN","SDECALV",117,0)
 S VID=$$GETVID^VSITVID S @SDFDA@(15001)=VID
"RTN","SDECALV",118,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDECALV",119,0)
 ;
"RTN","SDECALV",120,0)
 I $D(SDMSG) S SDAFLG=2,SDAFLG("ERR")=".01^"_SDALVR("CDT")_"^VISIT CREATION FAILED" Q
"RTN","SDECALV",121,0)
 S SDVSIT=+SDIEN(1)
"RTN","SDECALV",122,0)
 I $T(GETVID^VSITVID)]"",$P($G(^DIC(150.9,1,4)),U,2)]"" S VID=$$GETVID^VSITVID S DIE=9000010,DA=SDVSIT,DR="15001///"_VID D ^DIE K VID,DIE,DR,DA
"RTN","SDECALV",123,0)
 S SDVSIT("NEW")=1
"RTN","SDECALV",124,0)
 Q
"RTN","SDECALV",125,0)
 ;
"RTN","SDECALV",126,0)
 ;--------------------------------------------------------------
"RTN","SDECALV",127,0)
 ;
"RTN","SDECALV",128,0)
INIT ; INITIALIZATION/EDIT INPUT VARIABLES
"RTN","SDECALV",129,0)
 D INIT^SDECALV1
"RTN","SDECALV",130,0)
 Q
"RTN","SDECALV",131,0)
 ;
"RTN","SDECALV",132,0)
EOJ ; CLEAN UP
"RTN","SDECALV",133,0)
 LOCK -^TMP("SDECALV",SDPAT)
"RTN","SDECALV",134,0)
 ; The line below must 'hard set' the clinic code because
"RTN","SDECALV",135,0)
 ; ^DIE would have to be called recursively.  An exception to the
"RTN","SDECALV",136,0)
 ; standard has been granted by DSM/OIRM.
"RTN","SDECALV",137,0)
 I SDVSIT,$D(SDCLN),$P(^AUPNVSIT(SDVSIT,0),U,8)="" S $P(^AUPNVSIT(SDVSIT,0),U,8)=SDCLN ; ***** BAD, VERY BAD, FORGIVE US PLEASE *****
"RTN","SDECALV",138,0)
 ;I SDVSIT,$P($G(^AUPNVSIT(SDVSIT,11)),U,4)="" S $P(^AUPNVSIT(SDVSIT,11),U,4)=$$UID^AUPNVSIT(SDVSIT) ;stuff UID if blank
"RTN","SDECALV",139,0)
 K X,Y
"RTN","SDECALV",140,0)
 K DIRUT,DTOUT,DUOUT
"RTN","SDECALV",141,0)
 K SDADD,SDADF
"RTN","SDECALV",142,0)
 K SDAC,SDAI,SDAL,SDALV,SDAO,SDAVD,SDAVDC,SDAX,SDA11
"RTN","SDECALV",143,0)
 I $D(SDALVR)\10 S SDALVR("SDPAT")=SDPAT,SDALVR("SDVSIT")=SDVSIT S:$D(SDVSIT("NEW")) SDALVR("SDVSIT","NEW")=SDVSIT("NEW") S:$D(SDAFLG) SDALVR("SDAFLG")=SDAFLG D EN1^SDECEKL
"RTN","SDECALV",144,0)
 Q
"RTN","SDECALV1")
0^120^B23447725^n/a
"RTN","SDECALV1",1,0)
SDECALV1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECALV1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECALV1",3,0)
 ;
"RTN","SDECALV1",4,0)
 Q
"RTN","SDECALV1",5,0)
 ;
"RTN","SDECALV1",6,0)
INIT(SDALVR) ;EP;INITIALIZATION/EDIT INPUT VARIABLES
"RTN","SDECALV1",7,0)
 ;required
"RTN","SDECALV1",8,0)
 ; SDDATE
"RTN","SDECALV1",9,0)
 ; SDLOC
"RTN","SDECALV1",10,0)
 ; SDPAT
"RTN","SDECALV1",11,0)
 ;optional
"RTN","SDECALV1",12,0)
 ; SDAC
"RTN","SDECALV1",13,0)
 ; SDALV
"RTN","SDECALV1",14,0)
 ; SDALVR
"RTN","SDECALV1",15,0)
 ; SDAPDT
"RTN","SDECALV1",16,0)
 ; SDCAT
"RTN","SDECALV1",17,0)
 ; SDCODT
"RTN","SDECALV1",18,0)
 ; SDEVM
"RTN","SDECALV1",19,0)
 ; SDHL
"RTN","SDECALV1",20,0)
 ; SDOLOC
"RTN","SDECALV1",21,0)
 ; SDOPT
"RTN","SDECALV1",22,0)
 ; SDPROT
"RTN","SDECALV1",23,0)
 ; SDPVL
"RTN","SDECALV1",24,0)
 ; SDTBP
"RTN","SDECALV1",25,0)
 ; SDTYPE
"RTN","SDECALV1",26,0)
 ; SDVELG
"RTN","SDECALV1",27,0)
 ; SDVSIT
"RTN","SDECALV1",28,0)
 N SDAL,SDAX
"RTN","SDECALV1",29,0)
 N SDAPDT,SDCAT,SDEVM,SDCODT,SDDATE,SDHL,SDLOC,SDOLOC,SDOPT,SDPAT,SDPROT,SDPVL
"RTN","SDECALV1",30,0)
 N SDTPB,SDTYPE,SDUSR,SDVELG,SDVSIT
"RTN","SDECALV1",31,0)
 S SDAPDT=$G(SDALVR("APPT DATE"))
"RTN","SDECALV1",32,0)
 S SDCAT=$G(SDALVR("SDCAT"))
"RTN","SDECALV1",33,0)
 S SDEVM=$G(SDALVR("SDEVM"))
"RTN","SDECALV1",34,0)
 S SDDATE=$G(SDALVR("SDDATE"))
"RTN","SDECALV1",35,0)
 S SDHL=$G(SDALVR("SDHL"))
"RTN","SDECALV1",36,0)
 S SDLOC=$G(SDALVR("SDLOC"))
"RTN","SDECALV1",37,0)
 S SDCODT=$G(SDALVR("SDCODT"))
"RTN","SDECALV1",38,0)
 S SDOLOC=$G(SDALVR("SDOLOC"))
"RTN","SDECALV1",39,0)
 S SDOPT=$G(SDALVR("SDOPT"))
"RTN","SDECALV1",40,0)
 S SDPAT=$G(SDALVR("SDPAT"))
"RTN","SDECALV1",41,0)
 S SDPROT=$G(SDALVR("SDPROT"))
"RTN","SDECALV1",42,0)
 S SDPVL=$G(SDALVR("SDPVL"))
"RTN","SDECALV1",43,0)
 S SDTPB=$G(SDALVR("SDTPB"))
"RTN","SDECALV1",44,0)
 S SDTYPE=$G(SDALVR("SDTYPE"))
"RTN","SDECALV1",45,0)
 S SDUSR=$G(SDALVR("SDUSR"))
"RTN","SDECALV1",46,0)
 S SDVELG=$G(SDALVR("SDVELG"))
"RTN","SDECALV1",47,0)
 S SDVSIT=$G(SDALVR("SDVSIT"))
"RTN","SDECALV1",48,0)
 S SDVSIT("NEW")=$G(SDALVR("SDVSIT","NEW"))
"RTN","SDECALV1",49,0)
 K SDAFLG,SDALVR("SDAFLG"),SDVSIT("NEW"),SDALVR("SDVSIT","NEW")
"RTN","SDECALV1",50,0)
 I $D(SDALVR)\10 S SDAX="" F SDAL=0:0 S SDAX=$O(SDALVR(SDAX)) Q:SDAX=""  S @SDAX=SDALVR(SDAX)
"RTN","SDECALV1",51,0)
 S U="^",SDVSIT=""
"RTN","SDECALV1",52,0)
 D EDIT
"RTN","SDECALV1",53,0)
 Q:$D(SDAFLG)
"RTN","SDECALV1",54,0)
 Q
"RTN","SDECALV1",55,0)
 ;
"RTN","SDECALV1",56,0)
EDIT ; EDIT PASSED VARIABLES
"RTN","SDECALV1",57,0)
 N DIC,X,Y
"RTN","SDECALV1",58,0)
 I $D(SDADF),SDADF=+SDADF,SDADF>0,SDADF<4
"RTN","SDECALV1",59,0)
 E  K SDADF ;        kill it if it isn't right
"RTN","SDECALV1",60,0)
 S:$P(SDDATE,".",2)="" SDDATE=+SDDATE_".12"
"RTN","SDECALV1",61,0)
 S SDDATE=$E(SDDATE,1,12)
"RTN","SDECALV1",62,0)
 S:'$D(SDTYPE) SDTYPE="I"
"RTN","SDECALV1",63,0)
 I SDTYPE="" S SDAFLG=3,SDAFLG("ERR")=".03^"_SDTYPE_"^TYPE OF VISIT MISSING" Q
"RTN","SDECALV1",64,0)
 S:'$D(SDCAT) SDCAT="A"
"RTN","SDECALV1",65,0)
 S:SDCAT="" SDCAT="A"
"RTN","SDECALV1",66,0)
 S:$E(SDPAT)="`" SDPAT=$E(SDPAT,2,99)
"RTN","SDECALV1",67,0)
 I '$D(^AUPNPAT(SDPAT,0)) S SDAFLG=3,SDAFLG("ERR")=".05^"_SDPAT_"^PATIENT NOT IN AUPNPAT GLOBAL" Q
"RTN","SDECALV1",68,0)
 S:$E(SDLOC)="`" SDLOC=$E(SDLOC,2,99)
"RTN","SDECALV1",69,0)
 I '$D(^AUTTLOC(SDLOC,0)) S SDAFLG=3,SDAFLG("ERR")=".06^"_SDLOC_"^LOCATION PTR NOT IN AUTTLOC" Q
"RTN","SDECALV1",70,0)
 I $D(SDOLOC),SDOLOC?.E1C.E S SDAFLG=3,SDAFLG("ERR")="2101^"_SDOLOC_"^OUTSIDE LOCATION FAILED INPUT TX" Q
"RTN","SDECALV1",71,0)
 I $G(SDOLOC)]"",$L(SDOLOC)<2!($L(SDOLOC)>50) S SDAFLG=3,SDAFLG("ERR")="2101^"_SDOLOC_"^OUTSIDE LOCATION FAILED INPUT TX" Q
"RTN","SDECALV1",72,0)
 I $D(SDCLN),SDCLN="" K SDCLN Q
"RTN","SDECALV1",73,0)
 Q:'$D(SDCLN)
"RTN","SDECALV1",74,0)
 S:$E(SDCLN)="`" SDCLN=$E(SDCLN,2,99)
"RTN","SDECALV1",75,0)
 I SDCLN?1N.N,'$D(^DIC(40.7,SDCLN,0)) S SDAFLG=3,SDAFLG("ERR")=".08^"_SDCLN_"^CLINIC NOT VALID" Q
"RTN","SDECALV1",76,0)
 I SDCLN'?1N.N S X=SDCLN,DIC="^DIC(40.7,",DIC(0)="M" D ^DIC S:+Y>0 SDCLN=+Y
"RTN","SDECALV1",77,0)
 I SDCLN'?1N.N S SDAFLG=3,SDAFLG("ERR")=".08^"_SDCLN_"^CLINIC NOT VALID" Q
"RTN","SDECALV1",78,0)
 I $D(SDTPB) S X="`"_SDTPB I '$D(X) S SDAFLG=3,SDAFLG("ERR")=".04^"_SDTPB_"^.04 VALUE MUST BE IN INTERNAL FORMAT AND PASS INPUT TX" Q
"RTN","SDECALV1",79,0)
12 ;
"RTN","SDECALV1",80,0)
 I $D(SDPVL),'$D(^AUPNVSIT(SDPVL))!($P($G(^AUPNVSIT(SDPVL,0)),U,11)) S SDAFLG=3,SDAFLG("ERR")=".12^"_SDPVL_"^MUST BE INTERNAL VALUE AND VALID VISIT PTR" Q
"RTN","SDECALV1",81,0)
16 ;
"RTN","SDECALV1",82,0)
 ;I $G(SDAPPT)]"" S %=$$EXTSET^XBFUNC(9000010,.16,SDAPPT) I %="" S SDAFLG=3,SDAFLG("ERR")=".16^"_SDAPPT_"^WALKIN / APPT FAILED INPUT TX" Q
"RTN","SDECALV1",83,0)
17 ;
"RTN","SDECALV1",84,0)
 I $G(SDEVM)]"",'SDEVM S SDAFLG=3,SDAFLG("ERR")=".17^"_SDEVM_"^EVAL&MAN NOT VALID INTERNAL FORMAT" Q
"RTN","SDECALV1",85,0)
 ;I $G(SDEVM) S %=$P($G(^DD(9000010,.17,12.1)),"=",2) S X=$$FIND1^SDDIC(81,SDEVM,"I",%) I 'X S SDAFLG=3,SDAFLG("ERR")=".17^"_SDEVM_"^EVAL&MAN FAILED INPUT TX" Q
"RTN","SDECALV1",86,0)
18 ;
"RTN","SDECALV1",87,0)
 I $G(SDCODT)]"" S X=$$FMTE^XLFDT(SDCODT) X $P(^DD(9000010,.18,0),U,5,99) I '$D(X) S SDAFLG=3,SDAFLG("ERR")=".18^"_SDCODT_"^CHECK OUT DATE/TIME FAILED INPUT TX" Q
"RTN","SDECALV1",88,0)
19 ;
"RTN","SDECALV1",89,0)
 ;I $G(SDLS)]"" S %=$$EXTSET^XBFUNC(9000010,.19,SDLS) I %="" S SDAFLG=3,SDAFLG("ERR")=".19^"_SDLS_"^LEVEL OF SERVICE FAILED INPUT TX" Q
"RTN","SDECALV1",90,0)
21 ;
"RTN","SDECALV1",91,0)
 I $G(SDVELG)]"",'SDVELG S SDAFLG=3,SDAFLG("ERR")=".21^"_SDVELG_"^VA ELIG NOT VALID INTERNAL FORMAT" Q
"RTN","SDECALV1",92,0)
 ;I $G(SDVELG) S %=$P($G(^DD(9000010,.21,12.1)),"=",2) S X=$$FIND1^SDDIC(8,SDVELG,"I",%) I 'X S SDAFLG=3,SDAFLG("ERR")=".21^"_SDVELG_"^VA ELIG FAILED INPUT TX" Q
"RTN","SDECALV1",93,0)
22 ;
"RTN","SDECALV1",94,0)
 I $G(SDHL)]"",'SDHL S SDAFLG=3,SDAFLG("ERR")=".22^"_SDHL_"^HOSPITAL LOCATION NOT VALID INTERNAL FORMAT" Q
"RTN","SDECALV1",95,0)
 ;I $G(SDHL) S %=$P($G(^DD(9000010,.22,12.1)),"=",2) S X=$$FIND1^SDDIC(44,SDHL,"I",%) I 'X S SDAFLG=3,SDAFLG("ERR")=".22^"_SDHL_"^HOSPITAL LOCATION FAILED INPUT TX" Q
"RTN","SDECALV1",96,0)
24 ;
"RTN","SDECALV1",97,0)
 I $G(SDOPT)]"",'SDOPT S SDAFLG=3,SDAFLG("ERR")=".24^"_SDOPT_"^OPTION USED TO CREATE NOT VALID INTERNAL FORMAT" Q
"RTN","SDECALV1",98,0)
 ;I $G(SDOPT) S %=$P($G(^DD(9000010,.24,12.1)),"=",2) S X=$$FIND1^SDDIC(19,SDOPT,"I",%) I 'X S SDAFLG=3,SDAFLG("ERR")=".24^"_SDOPT_"^OPTION USED TO CREATE FAILED INPUT TX" Q
"RTN","SDECALV1",99,0)
 Q
"RTN","SDECALV1",100,0)
25 ;
"RTN","SDECALV1",101,0)
 I $G(SDPROT)]"",'SDPROT S SDAFLG=3,SDAFLG("ERR")=".25^"_SDPROT_"^PROTOCOL USED TO CREATE NOT VALID INTERNAL FORMAT" Q
"RTN","SDECALV1",102,0)
 ;I $G(SDPROT) S %=$P($G(^DD(9000010,.25,12.1)),"=",2) S X=$$FIND1^SDDIC(101,SDPROT,"I",%) I 'X S SDAFLG=3,SDAFLG("ERR")=".25^"_SDPROT_"^PROTOCOL USED TO CREATE FAILED INPUT TX" Q
"RTN","SDECALV1",103,0)
26 ;
"RTN","SDECALV1",104,0)
 I $G(SDAPDT)]"" S X=$$FMTE^XLFDT(SDAPDT) X $P(^DD(9000010,.26,0),U,5,99) I '$D(X) S SDAFLG=3,SDAFLG("ERR")=".26^"_SDAPDT_"^APPT DATE/TIME FAILED INPUT TX - MUST BE IN INTERNAL FM FORMAT" Q
"RTN","SDECALV1",105,0)
 Q
"RTN","SDECALVR")
0^130^B5946964^n/a
"RTN","SDECALVR",1,0)
SDECALVR ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECALVR",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECALVR",3,0)
 ;
"RTN","SDECALVR",4,0)
 Q
"RTN","SDECALVR",5,0)
 ;
"RTN","SDECALVR",6,0)
 ; Add entries to VISIT related files.  from APCDALVAR
"RTN","SDECALVR",7,0)
 ;
"RTN","SDECALVR",8,0)
VPROV(SDEC) ;add provider to V PROVIDER file
"RTN","SDECALVR",9,0)
 ;INPUT:
"RTN","SDECALVR",10,0)
 ; SDEC("PRO") -  provider pointer to NEW PERSON file
"RTN","SDECALVR",11,0)
 ; SDEC("PAT")  -  DFN pointer to PATIENT file
"RTN","SDECALVR",12,0)
 ; SDEC("VST") -  visit ien pointer to VISIT file
"RTN","SDECALVR",13,0)
 ; SDEC("TMP") -  (not used) input template "[SDECALVR 9000010.06 (ADD)]"
"RTN","SDECALVR",14,0)
 ; SDEC("TPS")  -  "P"
"RTN","SDECALVR",15,0)
 ; SDEC("TOA")  -  OPERATING/ATTENDING
"RTN","SDECALVR",16,0)
 ; SDEC("CDT")  -  event date and time
"RTN","SDECALVR",17,0)
 ;
"RTN","SDECALVR",18,0)
 N SDFDA,SDIEN,SDIENS,SDMSG
"RTN","SDECALVR",19,0)
 N SDCDT,SDCHK,SDPRO,SDTOA,SDTPS,SDVST
"RTN","SDECALVR",20,0)
 N DFN
"RTN","SDECALVR",21,0)
 ;validate provider (required)
"RTN","SDECALVR",22,0)
 S SDPRO=$G(SDEC("PRO"))
"RTN","SDECALVR",23,0)
 Q:'+SDPRO
"RTN","SDECALVR",24,0)
 Q:'$D(^VA(200,SDPRO,0))
"RTN","SDECALVR",25,0)
 ;validate patient (required)
"RTN","SDECALVR",26,0)
 S DFN=$G(SDEC("PAT"))
"RTN","SDECALVR",27,0)
 Q:'+DFN
"RTN","SDECALVR",28,0)
 Q:'$D(^DPT(DFN,0))
"RTN","SDECALVR",29,0)
 ;validate visit (required)
"RTN","SDECALVR",30,0)
 S SDVST=$G(SDEC("VST"))
"RTN","SDECALVR",31,0)
 Q:'+SDVST
"RTN","SDECALVR",32,0)
 Q:'$D(^AUPNVSIT(SDVST,0))
"RTN","SDECALVR",33,0)
 ;validate primary/secondary (required)
"RTN","SDECALVR",34,0)
 S SDTPS=$G(SDEC("TPS"))
"RTN","SDECALVR",35,0)
 Q:$S(SDTPS="P":0,SDTPS="S":0,1:1)
"RTN","SDECALVR",36,0)
 ;validate operating attending (optional)
"RTN","SDECALVR",37,0)
 S SDTOA=$G(SDEC("TOA"))
"RTN","SDECALVR",38,0)
 S SDTOA=$S(SDTOA="A":"A",SDTOA="ATTENDING":"A",SDTOA="O":"O",SDTOA="OPERATING":"O",1:"")
"RTN","SDECALVR",39,0)
 ;validate event date and time
"RTN","SDECALVR",40,0)
 S SDCDT=$G(SDEC("CDT"))
"RTN","SDECALVR",41,0)
 ;check for existing entry
"RTN","SDECALVR",42,0)
 S SDCHK=$$VPROVFND(DFN,SDVST,SDPRO)
"RTN","SDECALVR",43,0)
 S SDIENS=$S(+SDCHK:""""_SDCHK_",""",1:"""+1,""")
"RTN","SDECALVR",44,0)
 ;
"RTN","SDECALVR",45,0)
 S SDFDA="SDFDA(9000010.06,"_SDIENS_")"
"RTN","SDECALVR",46,0)
 S @SDFDA@(.01)=SDPRO
"RTN","SDECALVR",47,0)
 S @SDFDA@(.02)=DFN
"RTN","SDECALVR",48,0)
 S @SDFDA@(.03)=SDVST
"RTN","SDECALVR",49,0)
 S @SDFDA@(.04)=SDTPS
"RTN","SDECALVR",50,0)
 S:SDTOA'="" @SDFDA@(.05)=SDTOA
"RTN","SDECALVR",51,0)
 S:SDCDT'="" @SDFDA@(1201)=SDCDT
"RTN","SDECALVR",52,0)
 ;D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDECALVR",53,0)
 D UPDATE^DIE("","SDFDA","SDIEN")
"RTN","SDECALVR",54,0)
 ;
"RTN","SDECALVR",55,0)
 ;I $D(SDMSG) S SDAFLG=2,SDAFLG("ERR")=".01^"_SDPRO_"^V PROVIDER ENTRY FAILED" Q
"RTN","SDECALVR",56,0)
 Q
"RTN","SDECALVR",57,0)
 ;
"RTN","SDECALVR",58,0)
VPROVFND(DFN,SDVST,SDPRO)  ;find existing V PROVIDER entry
"RTN","SDECALVR",59,0)
 N SDH1,SDH2,SDH3,SDRET
"RTN","SDECALVR",60,0)
 S SDRET=0
"RTN","SDECALVR",61,0)
 S SDH1="" F  S SDH1=$O(^AUPNVPRV("AD",SDVST,SDH1)) Q:SDH1=""  D
"RTN","SDECALVR",62,0)
 .S SDH1(SDH1)=""
"RTN","SDECALVR",63,0)
 Q:'$D(SDH1) SDRET
"RTN","SDECALVR",64,0)
 S SDH2="" F  S SDH2=$O(^AUPNVPRV("C",DFN,SDH2)) Q:SDH2=""  D
"RTN","SDECALVR",65,0)
 .S:$D(SDH1(SDH2)) SDH2(SDH2)=""  ;only matching entries will be in SDH2 array
"RTN","SDECALVR",66,0)
 Q:'$D(SDH2) SDRET
"RTN","SDECALVR",67,0)
 S SDH3="" F  S SDH3=$O(^AUPNVPRV("B",SDPRO,SDH3)) Q:SDH3=""  D
"RTN","SDECALVR",68,0)
 .S:$D(SDH2(SDH3)) SDH3(SDH3)=""  ;only matching entries will be in SDH3 array
"RTN","SDECALVR",69,0)
 Q:'$D(SDH3) SDRET
"RTN","SDECALVR",70,0)
 S SDRET=$O(SDH3(9999999),-1)
"RTN","SDECALVR",71,0)
 Q +SDRET
"RTN","SDECAPI")
0^100^B60453354^n/a
"RTN","SDECAPI",1,0)
SDECAPI ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECAPI",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECAPI",3,0)
 ;
"RTN","SDECAPI",4,0)
 Q
"RTN","SDECAPI",5,0)
 ;
"RTN","SDECAPI",6,0)
MAKE(BSDR) ;PEP; call to store appt made
"RTN","SDECAPI",7,0)
 ;
"RTN","SDECAPI",8,0)
 ; Make call using: S ERR=$$MAKE^SDECAPI(.ARRAY)
"RTN","SDECAPI",9,0)
 ;
"RTN","SDECAPI",10,0)
 ; Input Array -
"RTN","SDECAPI",11,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDECAPI",12,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDECAPI",13,0)
 ; BSDR("TYP") = 3 for scheduled appts, 4 for walkins
"RTN","SDECAPI",14,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDECAPI",15,0)
 ; BSDR("LEN") = appointment length in minutes (5-120)
"RTN","SDECAPI",16,0)
 ; BSDR("OI")  = reason for appt - up to 150 characters
"RTN","SDECAPI",17,0)
 ; BSDR("USR") = user who made appt
"RTN","SDECAPI",18,0)
 ;
"RTN","SDECAPI",19,0)
 ;Output: error status and message
"RTN","SDECAPI",20,0)
 ;   = 0 or null:  everything okay
"RTN","SDECAPI",21,0)
 ;   = 1^message:  error and reason
"RTN","SDECAPI",22,0)
 ;
"RTN","SDECAPI",23,0)
 N BSDXERR
"RTN","SDECAPI",24,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDECAPI",25,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDECAPI",26,0)
 I ($G(BSDR("TYP"))<3)!($G(BSDR("TYP"))>4) Q 1_U_"Appt Type error: "_$G(BSDR("TYP"))
"RTN","SDECAPI",27,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDECAPI",28,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDECAPI",29,0)
 ;
"RTN","SDECAPI",30,0)
 I ($G(BSDR("LEN"))<5)!($G(BSDR("LEN"))>240) Q 1_U_"Appt Length error: "_$G(BSDR("LEN"))
"RTN","SDECAPI",31,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Made Appt Error: "_$G(BSDR("USR"))
"RTN","SDECAPI",32,0)
 I $D(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0)),$P(^(0),U,2)'="C" Q 1_U_"Patient "_BSDR("PAT")_" already has appt at "_BSDR("ADT")
"RTN","SDECAPI",33,0)
 ;
"RTN","SDECAPI",34,0)
 NEW DIC,DA,Y,X,DD,DO,DLAYGO
"RTN","SDECAPI",35,0)
 ;
"RTN","SDECAPI",36,0)
 I $D(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0)),$P(^(0),U,2)="C" D
"RTN","SDECAPI",37,0)
 . ; "un-cancel" existing appt in file 2
"RTN","SDECAPI",38,0)
 . N BSDXFDA,BSDXIENS,BSDXMSG
"RTN","SDECAPI",39,0)
 . S BSDXIENS=BSDR("ADT")_","_BSDR("PAT")_","
"RTN","SDECAPI",40,0)
 . S BSDXFDA(2.98,BSDXIENS,".01")=BSDR("CLN")
"RTN","SDECAPI",41,0)
 . S BSDXFDA(2.98,BSDXIENS,"3")=""
"RTN","SDECAPI",42,0)
 . S BSDXFDA(2.98,BSDXIENS,"9")=BSDR("TYP")
"RTN","SDECAPI",43,0)
 . S BSDXFDA(2.98,BSDXIENS,"9.5")=9
"RTN","SDECAPI",44,0)
 . S BSDXFDA(2.98,BSDXIENS,"14")=""
"RTN","SDECAPI",45,0)
 . S BSDXFDA(2.98,BSDXIENS,"15")=""
"RTN","SDECAPI",46,0)
 . S BSDXFDA(2.98,BSDXIENS,"16")=""
"RTN","SDECAPI",47,0)
 . S BSDXFDA(2.98,BSDXIENS,"19")=""
"RTN","SDECAPI",48,0)
 . S BSDXFDA(2.98,BSDXIENS,"20")=$$NOW^XLFDT
"RTN","SDECAPI",49,0)
 . D FILE^DIE("","BSDXFDA","BSDXMSG")
"RTN","SDECAPI",50,0)
 . N BSDXTEMP S BSDXTEMP=$G(BSDXMSG)
"RTN","SDECAPI",51,0)
 E  D  I $G(BSDXERR(1)) Q 1_U_"FileMan add to DPT error: Patient="_BSDR("PAT")_" Appt="_BSDR("ADT")
"RTN","SDECAPI",52,0)
 . ; add appt to file 2
"RTN","SDECAPI",53,0)
 . ; call to silent server call
"RTN","SDECAPI",54,0)
 . N BSDXFDA,BSDXIENS,BSDXMSG
"RTN","SDECAPI",55,0)
 . S BSDXIENS="?+2,"_BSDR("PAT")_","
"RTN","SDECAPI",56,0)
 . S BSDXIENS(2)=BSDR("ADT")
"RTN","SDECAPI",57,0)
 . S BSDXFDA(2.98,BSDXIENS,.01)=BSDR("CLN")
"RTN","SDECAPI",58,0)
 . S BSDXFDA(2.98,BSDXIENS,"9")=BSDR("TYP")
"RTN","SDECAPI",59,0)
 . S BSDXFDA(2.98,BSDXIENS,"9.5")=9
"RTN","SDECAPI",60,0)
 . S BSDXFDA(2.98,BSDXIENS,"20")=$$NOW^XLFDT
"RTN","SDECAPI",61,0)
 . D UPDATE^DIE("","BSDXFDA","BSDXIENS","BSDXERR(1)")
"RTN","SDECAPI",62,0)
 ;
"RTN","SDECAPI",63,0)
 ; add appt to file 44
"RTN","SDECAPI",64,0)
 K DIC,DA,X,Y,DLAYGO,DD,DO
"RTN","SDECAPI",65,0)
 I '$D(^SC(BSDR("CLN"),"S",0)) S ^SC(BSDR("CLN"),"S",0)="^44.001DA^^"
"RTN","SDECAPI",66,0)
 I '$D(^SC(BSDR("CLN"),"S",BSDR("ADT"),0)) D  I Y<1 Q 1_U_"Error adding date to file 44: Clinic="_BSDR("CLN")_" Date="_BSDR("ADT")
"RTN","SDECAPI",67,0)
 . S DIC="^SC("_BSDR("CLN")_",""S"",",DA(1)=BSDR("CLN"),(X,DINUM)=BSDR("ADT")
"RTN","SDECAPI",68,0)
 . S DIC("P")="44.001DA",DIC(0)="L",DLAYGO=44.001
"RTN","SDECAPI",69,0)
 . S Y=1 I '$D(@(DIC_X_")")) D FILE^DICN
"RTN","SDECAPI",70,0)
 ;
"RTN","SDECAPI",71,0)
 K DIC,DA,X,Y,DLAYGO,DD,DO,DINUM
"RTN","SDECAPI",72,0)
 S DIC="^SC("_BSDR("CLN")_",""S"","_BSDR("ADT")_",1,"
"RTN","SDECAPI",73,0)
 S DA(2)=BSDR("CLN"),DA(1)=BSDR("ADT"),X=BSDR("PAT")
"RTN","SDECAPI",74,0)
 S DIC("DR")="1///"_BSDR("LEN")_";3///"_$E($G(BSDR("OI")),1,150)_";7////"_BSDR("USR")_";8////"_$$NOW^XLFDT
"RTN","SDECAPI",75,0)
 S DIC("P")="44.003PA",DIC(0)="L",DLAYGO=44.003
"RTN","SDECAPI",76,0)
 D FILE^DICN
"RTN","SDECAPI",77,0)
 ;
"RTN","SDECAPI",78,0)
 ; call event driver
"RTN","SDECAPI",79,0)
 NEW DFN,SDT,SDCL,SDDA,SDMODE
"RTN","SDECAPI",80,0)
 S DFN=BSDR("PAT"),SDT=BSDR("ADT"),SDCL=BSDR("CLN"),SDMODE=2
"RTN","SDECAPI",81,0)
 S SDDA=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDECAPI",82,0)
 D MAKE^SDAMEVT(DFN,SDT,SDCL,SDDA,SDMODE)
"RTN","SDECAPI",83,0)
 Q 0
"RTN","SDECAPI",84,0)
 ;
"RTN","SDECAPI",85,0)
CHECKIN(BSDR) ;EP; call to add checkin info to appt
"RTN","SDECAPI",86,0)
 ;
"RTN","SDECAPI",87,0)
 ; Input array -
"RTN","SDECAPI",88,0)
 ;  BSDR("PAT") = ien of patient in file 2
"RTN","SDECAPI",89,0)
 ;  BSDR("CLN") = ien of clinic in file 44
"RTN","SDECAPI",90,0)
 ;  BSDR("ADT") = appt date/time
"RTN","SDECAPI",91,0)
 ;  BSDR("CDT") = checkin date/time
"RTN","SDECAPI",92,0)
 ;  BSDR("USR") = checkin user
"RTN","SDECAPI",93,0)
 ;  BSDR("OPT") = option used to create visit (optional)
"RTN","SDECAPI",94,0)
 ;
"RTN","SDECAPI",95,0)
 ;  BSDR("VIEN") = visit IEN (sent if new visit is NOT to be created)
"RTN","SDECAPI",96,0)
 ;
"RTN","SDECAPI",97,0)
 ; variables to create visit under event driver
"RTN","SDECAPI",98,0)
 ;  BSDR("CC")  = clinic code for creating visit - optional
"RTN","SDECAPI",99,0)
 ;  BSDR("PRV") = visit provider - pointer to file 200
"RTN","SDECAPI",100,0)
 ;
"RTN","SDECAPI",101,0)
 ; Output value -
"RTN","SDECAPI",102,0)
 ;              = 0 means everything worked
"RTN","SDECAPI",103,0)
 ;              = 1^message means error with reason message
"RTN","SDECAPI",104,0)
 ;
"RTN","SDECAPI",105,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDECAPI",106,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDECAPI",107,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDECAPI",108,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDECAPI",109,0)
 I $G(BSDR("CDT")) S BSDR("CDT")=+$E(BSDR("CDT"),1,12)  ;remove seconds
"RTN","SDECAPI",110,0)
 I $G(BSDR("CDT"))'?7N1".".4N Q 1_U_"Checkin Date/Time error: "_$G(BSDR("CDT"))
"RTN","SDECAPI",111,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Made Appt Error: "_$G(BSDR("USR"))
"RTN","SDECAPI",112,0)
 ;
"RTN","SDECAPI",113,0)
 ; find ien for appt in file 44
"RTN","SDECAPI",114,0)
 NEW IEN,DIE,DA,DR,BSDVSTN
"RTN","SDECAPI",115,0)
 S IEN=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDECAPI",116,0)
 I 'IEN Q 1_U_"Error trying to find appointment for checkin: Patient="_BSDR("PAT")_" Clinic="_BSDR("CLN")_" Appt="_BSDR("ADT")
"RTN","SDECAPI",117,0)
 ;
"RTN","SDECAPI",118,0)
 ; remember before status
"RTN","SDECAPI",119,0)
 NEW SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL
"RTN","SDECAPI",120,0)
 S DFN=BSDR("PAT"),SDT=BSDR("ADT"),SDCL=BSDR("CLN"),SDMODE=2,SDDA=IEN
"RTN","SDECAPI",121,0)
 S SDCIHDL=$$HANDLE^SDAMEVT(1),SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDECAPI",122,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDECAPI",123,0)
 ;
"RTN","SDECAPI",124,0)
 ; set checkin
"RTN","SDECAPI",125,0)
 N SDFDA
"RTN","SDECAPI",126,0)
 S SDFDA(44.003,IEN_","_BSDR("ADT")_","_BSDR("CLN")_",",302)=BSDR("USR")
"RTN","SDECAPI",127,0)
 S SDFDA(44.003,IEN_","_BSDR("ADT")_","_BSDR("CLN")_",",305)=$$NOW^XLFDT()
"RTN","SDECAPI",128,0)
 S SDFDA(44.003,IEN_","_BSDR("ADT")_","_BSDR("CLN")_",",309)=BSDR("CDT")
"RTN","SDECAPI",129,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECAPI",130,0)
 ;
"RTN","SDECAPI",131,0)
 ;S DIE="^SC("_BSDR("CLN")_",""S"","_BSDR("ADT")_",1,"
"RTN","SDECAPI",132,0)
 ;S DA(2)=BSDR("CLN"),DA(1)=BSDR("ADT"),DA=IEN
"RTN","SDECAPI",133,0)
 ;S DR="309///"_BSDR("CDT")_";302///`"_BSDR("USR")_";305///"_$$NOW^XLFDT
"RTN","SDECAPI",134,0)
 ;D ^DIE
"RTN","SDECAPI",135,0)
 ;
"RTN","SDECAPI",136,0)
 ; set after status
"RTN","SDECAPI",137,0)
 S SDDA=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDECAPI",138,0)
 S SDCIHDL=$$HANDLE^SDAMEVT(1),SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDECAPI",139,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCIHDL)
"RTN","SDECAPI",140,0)
 ;
"RTN","SDECAPI",141,0)
 ; set visit variable if not creating new visit
"RTN","SDECAPI",142,0)
 ; event driver kills variable after all protocols run
"RTN","SDECAPI",143,0)
 I $G(BSDR("VIEN")) S BSDVSTN=BSDR("VIEN")
"RTN","SDECAPI",144,0)
 ;
"RTN","SDECAPI",145,0)
 ; call event driver
"RTN","SDECAPI",146,0)
 ;D EVT^SDAMEVT(.SDATA,4,SDMODE,SDCIHDL)
"RTN","SDECAPI",147,0)
 Q 0
"RTN","SDECAPI",148,0)
 ;
"RTN","SDECAPI",149,0)
CANCEL(BSDR) ;PEP; called to cancel appt
"RTN","SDECAPI",150,0)
 ;
"RTN","SDECAPI",151,0)
 ; Make call using: S ERR=$$CANCEL^SDECAPI(.ARRAY)
"RTN","SDECAPI",152,0)
 ;
"RTN","SDECAPI",153,0)
 ; Input Array -
"RTN","SDECAPI",154,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDECAPI",155,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDECAPI",156,0)
 ; BSDR("TYP") = C for canceled by clinic; PC for patient canceled
"RTN","SDECAPI",157,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDECAPI",158,0)
 ; BSDR("CDT") = cancel date and time
"RTN","SDECAPI",159,0)
 ; BSDR("USR") = user who canceled appt
"RTN","SDECAPI",160,0)
 ; BSDR("CR")  = cancel reason - pointer to file 409.2
"RTN","SDECAPI",161,0)
 ; BSDR("NOT") = cancel remarks - optional notes to 160 characters
"RTN","SDECAPI",162,0)
 ;
"RTN","SDECAPI",163,0)
 ;Output: error status and message
"RTN","SDECAPI",164,0)
 ;   = 0 or null:  everything okay
"RTN","SDECAPI",165,0)
 ;   = 1^message:  error and reason
"RTN","SDECAPI",166,0)
 ;
"RTN","SDECAPI",167,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDECAPI",168,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDECAPI",169,0)
 I ($G(BSDR("TYP"))'="C"),($G(BSDR("TYP"))'="PC") Q 1_U_"Cancel Status error: "_$G(BSDR("TYP"))
"RTN","SDECAPI",170,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDECAPI",171,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDECAPI",172,0)
 I $G(BSDR("CDT")) S BSDR("CDT")=+$E(BSDR("CDT"),1,12)  ;remove seconds
"RTN","SDECAPI",173,0)
 I $G(BSDR("CDT"))'?7N1".".4N Q 1_U_"Cancel Date/Time error: "_$G(BSDR("CDT"))
"RTN","SDECAPI",174,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Canceled Appt Error: "_$G(BSDR("USR"))
"RTN","SDECAPI",175,0)
 I '$D(^SD(409.2,+$G(BSDR("CR")))) Q 1_U_"Cancel Reason error: "_$G(BSDR("CR"))
"RTN","SDECAPI",176,0)
 ;
"RTN","SDECAPI",177,0)
 NEW IEN,DIE,DA,DR
"RTN","SDECAPI",178,0)
 S IEN=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDECAPI",179,0)
 I 'IEN Q 1_U_"Error trying to find appointment for cancel: Patient="_BSDR("PAT")_" Clinic="_BSDR("CLN")_" Appt="_BSDR("ADT")
"RTN","SDECAPI",180,0)
 ;
"RTN","SDECAPI",181,0)
 I $$CI^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"),IEN) Q 1_U_"Patient already checked in; cannot cancel until checkin deleted: Patient="_BSDR("PAT")_" Clinic="_BSDR("CLN")_" Appt="_BSDR("ADT")
"RTN","SDECAPI",182,0)
 ;
"RTN","SDECAPI",183,0)
 ; remember before status
"RTN","SDECAPI",184,0)
 NEW SDATA,DFN,SDT,SDCL,SDDA,SDCPHDL
"RTN","SDECAPI",185,0)
 S DFN=BSDR("PAT"),SDT=BSDR("ADT"),SDCL=BSDR("CLN"),SDMODE=2,SDDA=IEN
"RTN","SDECAPI",186,0)
 S SDCPHDL=$$HANDLE^SDAMEVT(1),SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDECAPI",187,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCPHDL)
"RTN","SDECAPI",188,0)
 ;
"RTN","SDECAPI",189,0)
 ; get user who made appt and date appt made from ^SC
"RTN","SDECAPI",190,0)
 ;    because data in ^SC will be deleted
"RTN","SDECAPI",191,0)
 NEW USER,DATE
"RTN","SDECAPI",192,0)
 S USER=$P($G(^SC(SDCL,"S",SDT,1,IEN,0)),U,6)
"RTN","SDECAPI",193,0)
 S DATE=$P($G(^SC(SDCL,"S",SDT,1,IEN,0)),U,7)
"RTN","SDECAPI",194,0)
 ;
"RTN","SDECAPI",195,0)
 ; update file 2 info
"RTN","SDECAPI",196,0)
 I $D(^DPT(DFN,"S",SDT)) D  ; allows cancellation to continue if DPT node missing
"RTN","SDECAPI",197,0)
 . NEW DIE,DA,DR
"RTN","SDECAPI",198,0)
 . S DIE="^DPT("_DFN_",""S"",",DA(1)=DFN,DA=SDT
"RTN","SDECAPI",199,0)
 . S DR="3///"_BSDR("TYP")_";14///`"_BSDR("USR")_";15///"_BSDR("CDT")_";16///`"_BSDR("CR")_";19///`"_USER_";20///"_DATE
"RTN","SDECAPI",200,0)
 . S:$G(BSDR("NOT"))]"" DR=DR_";17///"_$E(BSDR("NOT"),1,160)
"RTN","SDECAPI",201,0)
 . D ^DIE
"RTN","SDECAPI",202,0)
 ;
"RTN","SDECAPI",203,0)
 ; delete data in ^SC
"RTN","SDECAPI",204,0)
 NEW DIK,DA
"RTN","SDECAPI",205,0)
 S DIK="^SC("_BSDR("CLN")_",""S"","_BSDR("ADT")_",1,"
"RTN","SDECAPI",206,0)
 S DA(2)=BSDR("CLN"),DA(1)=BSDR("ADT"),DA=IEN
"RTN","SDECAPI",207,0)
 D ^DIK
"RTN","SDECAPI",208,0)
 ;
"RTN","SDECAPI",209,0)
 ; call event driver
"RTN","SDECAPI",210,0)
 D CANCEL^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDMODE,SDCPHDL)
"RTN","SDECAPI",211,0)
 Q 0
"RTN","SDECAPI",212,0)
 ;
"RTN","SDECAPI",213,0)
FUTURE(BSDPAT) ;PEPAPI that returns 1 if patient has a future appointment or 0 if not DFN is passed in
"RTN","SDECAPI",214,0)
 N BSDDA,BSDFUT
"RTN","SDECAPI",215,0)
 S BSDFUT=0
"RTN","SDECAPI",216,0)
 S BSDDA=0 F  S BSDDA=$O(^DPT(BSDPAT,"S",BSDDA)) Q:'BSDDA  D
"RTN","SDECAPI",217,0)
 . I BSDDA>DT S BSDFUT=1
"RTN","SDECAPI",218,0)
 Q $G(BSDFUT)
"RTN","SDECAPI",219,0)
 ;
"RTN","SDECAPI4")
0^101^B83504203^n/a
"RTN","SDECAPI4",1,0)
SDECAPI4 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECAPI4",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECAPI4",3,0)
 ;
"RTN","SDECAPI4",4,0)
 Q
"RTN","SDECAPI4",5,0)
 ;
"RTN","SDECAPI4",6,0)
GETVISIT(BSDIN,BSDOUT) ;Private Entry Point
"RTN","SDECAPI4",7,0)
 ; >> All date/time variables must be in FileMan internal format
"RTN","SDECAPI4",8,0)
 ; Special Incoming Variables:
"RTN","SDECAPI4",9,0)
 ;  BSDIN("FORCE ADD")   = 1    ; no matter what, create new visit (Optional)
"RTN","SDECAPI4",10,0)
 ;  BSDIN ("NEVER ADD")  = 1    ; never add visit, just try to find one or more (Optional)
"RTN","SDECAPI4",11,0)
 ;  BSDIN("ANCILLARY")   = 1    ; for ancillary packages to create noon visit if no match found (Optional)
"RTN","SDECAPI4",12,0)
 ;  BSDIN("SHOW VISITS") = 1    ; this will display visits if more than one match
"RTN","SDECAPI4",13,0)
 ; Incoming Variables used in Matching: REQUIRED
"RTN","SDECAPI4",14,0)
 ;  BSDIN("PAT")         = patient IEN (file 2 or 9000001)
"RTN","SDECAPI4",15,0)
 ;  BSDIN("VISIT DATE")  = visit date & time (same as check-in date & time)
"RTN","SDECAPI4",16,0)
 ;  BSDIN ("SITE")       = location of encounter IEN (file 4 or 9999999.06)
"RTN","SDECAPI4",17,0)
 ;  BSDIN("VISIT TYPE")  = internal value for field .03 in Visit file
"RTN","SDECAPI4",18,0)
 ;  BSDIN("SRV CAT")     = internal value for service category
"RTN","SDECAPI4",19,0)
 ;  BSDIN("TIME RANGE")  = #   ; range in minutes for matching on visit time; REQUIRED unless FORCE ADD set
"RTN","SDECAPI4",20,0)
 ;                             ;   zero=exact matches only; -1=don't match on time
"RTN","SDECAPI4",21,0)
 ;   These are used to match if sent (Optional)
"RTN","SDECAPI4",22,0)
 ;  BSDIN("PROVIDER")    = IEN for provider to match from file 200
"RTN","SDECAPI4",23,0)
 ;  BSDIN("CLINIC CODE") = IEN of clinic stop code (file 40.7)
"RTN","SDECAPI4",24,0)
 ;  BSDIN("HOS LOC")     = IEN of hospital location (file 44, field .22 in VISIT file)
"RTN","SDECAPI4",25,0)
 ;  BSDIN("DEF CC")      = IEN of default clinic code for package making call PATCH 1009
"RTN","SDECAPI4",26,0)
 ;  BSDIN("DEF HL")      = IEN of default hospital location for package making call PATCH 1009
"RTN","SDECAPI4",27,0)
 ; Incoming Variables used in creating appt and visit
"RTN","SDECAPI4",28,0)
 ;  BSDIN("APPT DATE")   = appt date & time (Required for scheduled appts and walk-ins; check-in will be performed)
"RTN","SDECAPI4",29,0)
 ;  BSDIN("USR")         = user IEN in file 200; REQUIRED
"RTN","SDECAPI4",30,0)
 ;  BSDIN("OPT")         = name for Option Used To Create field, for check-in only (Optional)
"RTN","SDECAPI4",31,0)
 ;  BSDIN("OI")          = reason for appointment; for walk-ins (Optional)
"RTN","SDECAPI4",32,0)
 ; Incoming PCC variables for adding additional info to visit (Optional)
"RTN","SDECAPI4",33,0)
 ;  BSDIN("SDTPB")  = Third Party Billed (#.04)
"RTN","SDECAPI4",34,0)
 ;  BSDIN("SDPVL")  = Parent Visit Link (#.12)
"RTN","SDECAPI4",35,0)
 ;  BSDIN("SDAPPT") = WalkIn/Appt (#.16)
"RTN","SDECAPI4",36,0)
 ;  BSDIN("SDEVM")  = Evaluation and Management Code (#.17)
"RTN","SDECAPI4",37,0)
 ;  BSDIN("SDCODT") = Check Out Date & Time (#.18)
"RTN","SDECAPI4",38,0)
 ;  BSDIN("SDLS")   = Level of Service -PCC Form  (#.19).
"RTN","SDECAPI4",39,0)
 ;  BSDIN("SDVELG") = Eligibility (#.21)
"RTN","SDECAPI4",40,0)
 ;  BSDIN("SDPROT") = Protocol (#.25).
"RTN","SDECAPI4",41,0)
 ;  BSDIN("SDOPT")  = Option Used To Create (#.24)
"RTN","SDECAPI4",42,0)
 ;  BSDIN("SDOLOC") = Outside Location (#2101)
"RTN","SDECAPI4",43,0)
 ; Outgoing Array:
"RTN","SDECAPI4",44,0)
 ;  BSDOUT(0) always set; if = 0 none found and may have error message in 2nd piece
"RTN","SDECAPI4",45,0)
 ;                        if = 1 and BSDOUT(visit ien)="ADD" new visit just created
"RTN","SDECAPI4",46,0)
 ;                        if = 1 and BSDOUT(visit ien)=#; # is time difference in minutes
"RTN","SDECAPI4",47,0)
 ;                        if >1, multiple BSDOUT(visit ien) entries exist
"RTN","SDECAPI4",48,0)
 NEW BSDTMP K BSDOUT
"RTN","SDECAPI4",49,0)
 M BSDTMP=BSDIN    ;don't mess with incoming array
"RTN","SDECAPI4",50,0)
 IF '$$HAVEREQ(.BSDTMP,.BSDOUT) Q    ;check required fields
"RTN","SDECAPI4",51,0)
 ; if FORCE ADD set, bypass check-in & create visit
"RTN","SDECAPI4",52,0)
 ; if forced add, skip visit match attempt
"RTN","SDECAPI4",53,0)
 ;IF $G(BSDTMP("FORCE ADD")) D APPTDT Q
"RTN","SDECAPI4",54,0)
 I '$G(BSDTMP("SDOPT")) D
"RTN","SDECAPI4",55,0)
 .I $G(BSDTMP("OPT"))]"",BSDTMP("OPT")?.N,$D(^DIC(19,BSDTMP("OPT"))) S BSDTMP("SDOPT")=BSDTMP("OPT") Q
"RTN","SDECAPI4",56,0)
 .I $G(BSDTMP("OPT"))]"",$E(BSDTMP("OPT"),1,1)="`" S BSDTMP("SDOPT")=$TR(BSDTMP("OPT"),"`") Q
"RTN","SDECAPI4",57,0)
 .I $G(BSDTMP("OPT"))]"",BSDTMP("OPT")'?.N S BSDTMP("SDOPT")=$O(^DIC(19,"B",BSDTMP("OPT"),0)) Q
"RTN","SDECAPI4",58,0)
 .I $G(BSDTMP("SDOPT"))]"",$E(BSDTMP("SDOPT"),1,1)="`" S BSDTMP("SDOPT")=$TR(BSDTMP("SDOPT"),"`") Q
"RTN","SDECAPI4",59,0)
 .I $G(BSDTMP("SDOPT"))]"",BSDTMP("SDOPT")'?.N S BSDTMP("SDOPT")=$O(^DIC(19,"B",BSDTMP("SDOPT"),0)) Q
"RTN","SDECAPI4",60,0)
 I $G(BSDTMP("FORCE ADD")) D ADDVIST(.BSDTMP,.BSDOUT) Q
"RTN","SDECAPI4",61,0)
 ; attempt to find matching visits; return BSDOUT array
"RTN","SDECAPI4",62,0)
 I '$G(BSDTMP("FORCE ADD")) D MATCH(.BSDTMP,.BSDOUT)
"RTN","SDECAPI4",63,0)
 ;if >1 visits found, return full array and quit, unless they pass it the variable to show visits then we will display
"RTN","SDECAPI4",64,0)
 ;(calling app decides next step)
"RTN","SDECAPI4",65,0)
 ;IF BSDOUT(0)>1 Q
"RTN","SDECAPI4",66,0)
 ;if appt date set, go to check-in
"RTN","SDECAPI4",67,0)
 ;IF $G(BSDTMP("APPT DATE")),'$G(BSDTMP("NEVER ADD")) D APPTDT Q
"RTN","SDECAPI4",68,0)
 ;if only 1 visit found, return ien and quit
"RTN","SDECAPI4",69,0)
 ;IF BSDOUT(0)'=1 Q
"RTN","SDECAPI4",70,0)
 ; added 2nd match, move never add checks & not kill variables
"RTN","SDECAPI4",71,0)
 ;if called by ancillary package, just create noon visit and quit
"RTN","SDECAPI4",72,0)
 ;IF $G(BSDTMP("ANCILLARY")) D  Q
"RTN","SDECAPI4",73,0)
 ;. K BSDTMP("ANCILLARY"),BSDTMP("PROVIDER")            ; set up to find other ancillaries
"RTN","SDECAPI4",74,0)
 ;. D MATCH(.BSDTMP,.BSDOUT) I BSDOUT(0)=1 Q            ; try to match on hos loc or clinic
"RTN","SDECAPI4",75,0)
 ;. I $G(BSDTMP("NEVER ADD"))=1 Q                       ; if in never add mode, quit after 2nd match
"RTN","SDECAPI4",76,0)
 ;. S BSDTMP("VISIT DATE")=BSDTMP("VISIT DATE")\1       ; take off time; PCC will add noon
"RTN","SDECAPI4",77,0)
 ;. D ADDVIST(.BSDTMP,.BSDOUT)                          ; create noon visit
"RTN","SDECAPI4",78,0)
 ;if no visits found but in never add mode, just quit
"RTN","SDECAPI4",79,0)
 ;IF $G(BSDTMP("NEVER ADD"))=1 Q
"RTN","SDECAPI4",80,0)
 ;otherwise, logic falls through to create visit choices
"RTN","SDECAPI4",81,0)
APPTDT ;
"RTN","SDECAPI4",82,0)
 I $G(BSDTMP("CALLER"))]"",$G(BSDTMP("CALLER"))="BSD CHECKIN" Q  ;interactive visit creation
"RTN","SDECAPI4",83,0)
 ;if no appointment date/time sent, just create visit and quit
"RTN","SDECAPI4",84,0)
 IF '$G(BSDTMP("APPT DATE")) D ADDVIST(.BSDTMP,.BSDOUT) Q
"RTN","SDECAPI4",85,0)
 ; if one matching visit found, check-in but don't create visit
"RTN","SDECAPI4",86,0)
 I BSDOUT(0)=1 S BSDTMP("VIEN")=$O(BSDOUT(0))
"RTN","SDECAPI4",87,0)
 ;if patient already has appt at this time, call Check-in (which creates visit) then quit
"RTN","SDECAPI4",88,0)
 NEW IEN,ERR,V
"RTN","SDECAPI4",89,0)
 S IEN=$$SCIEN^SDECU2(BSDTMP("PAT"),BSDTMP("HOS LOC"),BSDTMP("APPT DATE"))  ;find appt
"RTN","SDECAPI4",90,0)
 I IEN D  Q
"RTN","SDECAPI4",91,0)
 . ; set variables used by checkin call
"RTN","SDECAPI4",92,0)
 . S BSDTMP("CDT")=BSDTMP("VISIT DATE")
"RTN","SDECAPI4",93,0)
 . S BSDTMP("CC")=$G(BSDTMP("CLINIC CODE"))
"RTN","SDECAPI4",94,0)
 . S BSDTMP("PRV")=$G(BSDTMP("PROVIDER"))
"RTN","SDECAPI4",95,0)
 . ; set more variables to use in BSDAPI
"RTN","SDECAPI4",96,0)
 . S BSDTMP("CLN")=$G(BSDTMP("HOS LOC"))
"RTN","SDECAPI4",97,0)
 . S BSDTMP("ADT")=$G(BSDTMP("APPT DATE"))
"RTN","SDECAPI4",98,0)
 . S ERR=$$CHECKIN^SDECAPI(.BSDTMP)      ;check in and create visit
"RTN","SDECAPI4",99,0)
 . ; reset BSDOUT only if truly added one.
"RTN","SDECAPI4",100,0)
 . I 'ERR S V=$$GETVST^SDECU2(BSDTMP("PAT"),BSDTMP("APPT DATE")) I V,'$G(BSDTMP("VIEN")) S:BSDOUT(0)=0 BSDOUT(0)=1 S BSDOUT(V)="ADD" Q
"RTN","SDECAPI4",101,0)
 . I ERR S BSDOUT(0)=0_U_$P(ERR,U,2)
"RTN","SDECAPI4",102,0)
 ; else call walk-in (which calls make appt, checkin and create visit)
"RTN","SDECAPI4",103,0)
 D WALKIN(.BSDTMP,.BSDOUT)
"RTN","SDECAPI4",104,0)
 Q
"RTN","SDECAPI4",105,0)
MATCH(IN,OUT) ; find matching visits based on IN array
"RTN","SDECAPI4",106,0)
 S OUT(0)=0
"RTN","SDECAPI4",107,0)
 NEW END,DATE,VIEN,STOP,DIFF,MATCH
"RTN","SDECAPI4",108,0)
 S MATCH=0
"RTN","SDECAPI4",109,0)
 D TIME(IN("TIME RANGE"),IN("VISIT DATE"),.DATE,.END)
"RTN","SDECAPI4",110,0)
 F  S DATE=$O(^AUPNVSIT("AA",IN("PAT"),DATE)) Q:'DATE  Q:(DATE>END)  D
"RTN","SDECAPI4",111,0)
 . S VIEN=0
"RTN","SDECAPI4",112,0)
 . F  S VIEN=$O(^AUPNVSIT("AA",IN("PAT"),DATE,VIEN)) Q:'VIEN  D
"RTN","SDECAPI4",113,0)
 . . I $$GET1^DIQ(9000010,VIEN,.11)="DELETED" Q                ;check for delete flag just in case xref not killed
"RTN","SDECAPI4",114,0)
 . . I IN("SITE")'=$$GET1^DIQ(9000010,VIEN,.06,"I") Q          ;no match on loc of enc
"RTN","SDECAPI4",115,0)
 . . I IN("VISIT TYPE")'=$$GET1^DIQ(9000010,VIEN,.03,"I") Q    ;no match on visit type
"RTN","SDECAPI4",116,0)
 . . ; get observation and day surgery visits
"RTN","SDECAPI4",117,0)
 . . I IN("SRV CAT")["CENRT" Q  ;don't look at HIM excluded visits
"RTN","SDECAPI4",118,0)
 . . I $$GET1^DIQ(90000010,VIEN,.07,"I")["CENRT" Q  ;don't look at HIM excluded visits
"RTN","SDECAPI4",119,0)
 . . I IN("SRV CAT")=$$GET1^DIQ(9000010,VIEN,.07,"I") S MATCH=1       ;no match on service category
"RTN","SDECAPI4",120,0)
 . . I IN("SRV CAT")="A",$G(IN("ANCILLARY")),$$GET1^DIQ(9000010,VIEN,.07,"I")="O" S MATCH=1  ;match if observation
"RTN","SDECAPI4",121,0)
 . . I IN("SRV CAT")="A",$G(IN("ANCILLARY")),$$GET1^DIQ(9000010,VIEN,.07,"I")="D" S MATCH=1
"RTN","SDECAPI4",122,0)
 . . I '$G(MATCH) Q
"RTN","SDECAPI4",123,0)
 . . I IN("TIME RANGE")>-1 S STOP=0 D  Q:STOP                  ;check time range
"RTN","SDECAPI4",124,0)
 . . . S DIFF=$$TIMEDIF(IN("VISIT DATE"),VIEN)                 ;find difference in minutes
"RTN","SDECAPI4",125,0)
 . . . I $$ABS^XLFMTH(DIFF)>IN("TIME RANGE") S STOP=1
"RTN","SDECAPI4",126,0)
 . . I '$$PRVMTCH Q   ; if provider sent and didn't match, skip
"RTN","SDECAPI4",127,0)
 . . ; if called by ancillary, falls through and sets visit into array
"RTN","SDECAPI4",128,0)
 . . ; otherwise, check if app wants to match on clinic code or hosp location
"RTN","SDECAPI4",129,0)
 . . I '$G(IN("ANCILLARY")) S STOP=0 D  Q:STOP
"RTN","SDECAPI4",130,0)
 . . . I $G(IN("HOS LOC")),'$G(IN("CLINIC CODE")) S IN("CLINIC CODE")=$$GET1^DIQ(44,IN("HOS LOC"),8,"I")
"RTN","SDECAPI4",131,0)
 . . . I $G(IN("CLINIC CODE")),IN("CLINIC CODE")'=$$GET1^DIQ(9000010,VIEN,.08,"I") S STOP=1 Q  ;no match on clinic code
"RTN","SDECAPI4",132,0)
 . . . ; if both have appt date and visit was triage clinic, is a match
"RTN","SDECAPI4",133,0)
 . . . ; create visit on same day no matter what
"RTN","SDECAPI4",134,0)
 . . . I $G(IN("HOS LOC")),(IN("HOS LOC")'=$$GET1^DIQ(9000010,VIEN,.22,"I")) S STOP=1 Q  ;no match on hospital location
"RTN","SDECAPI4",135,0)
 . . . ; if same clinic & same provider but not triage, make new visit
"RTN","SDECAPI4",136,0)
 . . . I $G(IN("APPT DATE")),$$GET1^DIQ(9000010,VIEN,.26,"I"),'$$TRIAGE(VIEN) S STOP=1 Q
"RTN","SDECAPI4",137,0)
 . . ; must be good match, increment counter and set array node
"RTN","SDECAPI4",138,0)
 . . S OUT(0)=OUT(0)+1
"RTN","SDECAPI4",139,0)
 . . S OUT(VIEN)=$$TIMEDIF(IN("VISIT DATE"),VIEN)
"RTN","SDECAPI4",140,0)
 Q
"RTN","SDECAPI4",141,0)
 ;
"RTN","SDECAPI4",142,0)
PRVMTCH() ; do visits match on provider?
"RTN","SDECAPI4",143,0)
 NEW PRVS,IEN
"RTN","SDECAPI4",144,0)
 I '$G(IN("PROVIDER")) Q 1     ; if no provider sent, assume okay
"RTN","SDECAPI4",145,0)
 ;if visit is triage clinic & new encounter is not ancillary, skip provider match
"RTN","SDECAPI4",146,0)
 I $$TRIAGE(VIEN),'$G(IN("ANCILLARY")) Q 1
"RTN","SDECAPI4",147,0)
 ; find all v provider entries for visit
"RTN","SDECAPI4",148,0)
 S IEN=0 F  S IEN=$O(^AUPNVPRV("AD",VIEN,IEN)) Q:'IEN  D
"RTN","SDECAPI4",149,0)
 . S PRVS(+$G(^AUPNVPRV(IEN,0)))=""
"RTN","SDECAPI4",150,0)
 ;if incoming provider in list, this is match
"RTN","SDECAPI4",151,0)
 I $D(PRVS(IN("PROVIDER"))) Q 1
"RTN","SDECAPI4",152,0)
 ;otherwise, no match
"RTN","SDECAPI4",153,0)
 Q 0
"RTN","SDECAPI4",154,0)
 ;
"RTN","SDECAPI4",155,0)
TIMEDIF(VDTTM,VIEN) ; return time diff between incoming time and current visit
"RTN","SDECAPI4",156,0)
 Q $$FMDIFF^XLFDT(VDTTM,+$G(^AUPNVSIT(VIEN,0)),2)\60
"RTN","SDECAPI4",157,0)
 ;
"RTN","SDECAPI4",158,0)
ADDVIST(BSDTMP,BSDOUT)  ;
"RTN","SDECAPI4",159,0)
 N %DT,SDALVR,SUB,X,Y
"RTN","SDECAPI4",160,0)
 N SDDATE,SDHL,SDLOC,SDCODT,SDPAT
"RTN","SDECAPI4",161,0)
 S SUB="SD" F  S SUB=$O(BSDTMP(SUB)) Q:SUB=""  Q:$E(SUB,1,2)'="SD"  S SDALVR(SUB)=BSDTMP(SUB)
"RTN","SDECAPI4",162,0)
 S SDALVR("AUPNTALK")="",SDALVR("SDANE")=""        ;keep it silent
"RTN","SDECAPI4",163,0)
 S (SDLOC,SDALVR("SDLOC"))=BSDTMP("SITE")                     ;facility
"RTN","SDECAPI4",164,0)
 S (SDPAT,SDALVR("SDPAT"))=BSDTMP("PAT")                      ;patient
"RTN","SDECAPI4",165,0)
 S SDALVR("SDTYPE")=BSDTMP("VISIT TYPE")              ;visit type
"RTN","SDECAPI4",166,0)
 S SDALVR("SDCAT")=BSDTMP("SRV CAT")                  ;srv cat
"RTN","SDECAPI4",167,0)
 S (SDDATE,SDALVR("SDDATE"))=BSDTMP("VISIT DATE")              ;chkin dt
"RTN","SDECAPI4",168,0)
 I $G(BSDTMP("CLINIC CODE")) S SDALVR("SDCLN")="`"_BSDTMP("CLINIC CODE")      ;clinic code ien w/`
"RTN","SDECAPI4",169,0)
 S (SDHL,SDALVR("SDHL"))=$G(BSDTMP("HOS LOC"))               ;clinic name
"RTN","SDECAPI4",170,0)
 S SDALVR("SDAPDT")=$G(BSDTMP("APPT DATE"))           ;appt date
"RTN","SDECAPI4",171,0)
 S SDALVR("SDUSR")=$G(BSDTMP("USR"))
"RTN","SDECAPI4",172,0)
 S SDALVR("SDADD")=1                                  ;force add
"RTN","SDECAPI4",173,0)
 S SDCODT=BSDTMP("SDCODT")
"RTN","SDECAPI4",174,0)
 ;create visit
"RTN","SDECAPI4",175,0)
 ;D EN^SDECALV   ;D ^APCDALV
"RTN","SDECAPI4",176,0)
 D EN1^SDECALV(.SDALVR)
"RTN","SDECAPI4",177,0)
 ;if no visit created,error quit
"RTN","SDECAPI4",178,0)
 I '$G(SDALVR("SDVSIT")) D  Q
"RTN","SDECAPI4",179,0)
 . S BSDOUT(0)="0^Error Creating Visit"
"RTN","SDECAPI4",180,0)
 ; set new visit info in out array
"RTN","SDECAPI4",181,0)
 S BSDOUT(SDALVR("SDVSIT"))="ADD",BSDOUT(0)=1
"RTN","SDECAPI4",182,0)
 Q
"RTN","SDECAPI4",183,0)
 ;
"RTN","SDECAPI4",184,0)
WALKIN(BSDATA,OUT) ;EP; create walkin appt which is checked in and visit created
"RTN","SDECAPI4",185,0)
 ; also called by BSDAPI3 to create ancillary walkin appt
"RTN","SDECAPI4",186,0)
 NEW ERR,V
"RTN","SDECAPI4",187,0)
 S OUT(0)=0    ;initialize outgoing count
"RTN","SDECAPI4",188,0)
 S BSDATA("CLN")=$G(BSDATA("HOS LOC"))
"RTN","SDECAPI4",189,0)
 S BSDATA("TYP")=4   ;4=walkin
"RTN","SDECAPI4",190,0)
 S BSDATA("ADT")=$G(BSDATA("APPT DATE"))
"RTN","SDECAPI4",191,0)
 I '$D(BSDATA("LEN")) S BSDATA("LEN")=$$GET1^DIQ(44,BSDATA("CLN"),1912)
"RTN","SDECAPI4",192,0)
 ; make walkin appt
"RTN","SDECAPI4",193,0)
 S ERR=$$MAKE^SDECAPI(.BSDATA) I ERR S $P(OUT(0),U,2)=$P(ERR,U,2) Q
"RTN","SDECAPI4",194,0)
 ; set variables used by checkin call
"RTN","SDECAPI4",195,0)
 S BSDATA("CDT")=BSDATA("VISIT DATE")
"RTN","SDECAPI4",196,0)
 S BSDATA("CC")=$G(BSDATA("CLINIC CODE"))
"RTN","SDECAPI4",197,0)
 S BSDATA("PRV")=$G(BSDATA("PROVIDER"))
"RTN","SDECAPI4",198,0)
 ; check in appt and create visit
"RTN","SDECAPI4",199,0)
 S ERR=$$CHECKIN^SDECAPI(.BSDATA)
"RTN","SDECAPI4",200,0)
 ; update out array based on result
"RTN","SDECAPI4",201,0)
 ;reset BSDOUT(0) only if added new visit
"RTN","SDECAPI4",202,0)
 I 'ERR S V=$$GETVST^SDECU2(BSDATA("PAT"),BSDATA("APPT DATE")) I V,'$G(BSDTMP("VIEN")) S:OUT(0)=0 OUT(0)=1 S OUT(V)="ADD"   ;visit added
"RTN","SDECAPI4",203,0)
 I ERR S $P(OUT(0),U,2)=$P(ERR,U,2)          ;error
"RTN","SDECAPI4",204,0)
 Q
"RTN","SDECAPI4",205,0)
 ;
"RTN","SDECAPI4",206,0)
HAVEREQ(IN,OUT) ; check required fields
"RTN","SDECAPI4",207,0)
 I ('$G(IN("FORCE ADD"))),('$D(IN("TIME RANGE"))) S OUT(0)="0^Missing Time Range" Q 0
"RTN","SDECAPI4",208,0)
 I '$D(IN("PAT")) S OUT(0)="0^Missing Patient IEN" Q 0
"RTN","SDECAPI4",209,0)
 I '$D(IN("VISIT DATE")) S OUT(0)="0^Missing Visit Date" Q 0
"RTN","SDECAPI4",210,0)
 I '$D(IN("SITE")) S OUT(0)="0^Missing Facility/Site" Q 0
"RTN","SDECAPI4",211,0)
 I '$D(IN("VISIT TYPE")) S OUT(0)="0^Missing Visit Type" Q 0
"RTN","SDECAPI4",212,0)
 I '$D(IN("SRV CAT")) S OUT(0)="0^Missing Service Category" Q 0
"RTN","SDECAPI4",213,0)
 I '$D(IN("USR")) S OUT(0)="0^Missing User IEN" Q 0
"RTN","SDECAPI4",214,0)
 I $G(IN("HOS LOC")),'$G(IN("CLINIC CODE")) S IN("CLINIC CODE")=$$GET1^DIQ(44,IN("HOS LOC"),8,"I")
"RTN","SDECAPI4",215,0)
 ; convert service category
"RTN","SDECAPI4",216,0)
 I $G(IN("APPT DATE")),$G(IN("HOS LOC")) S IN("SRV CAT")=$$SERCAT^SDECV(IN("HOS LOC"),IN("PAT"))
"RTN","SDECAPI4",217,0)
 Q 1
"RTN","SDECAPI4",218,0)
 ;
"RTN","SDECAPI4",219,0)
TIME(RANGE,VISIT,DATE,END) ; set DATE and END based on TIME RANGE setting in minutes
"RTN","SDECAPI4",220,0)
 NEW TMDIF,SW
"RTN","SDECAPI4",221,0)
 S TMDIF=$S(RANGE<1:0,1:RANGE)
"RTN","SDECAPI4",222,0)
 S DATE=$$FMADD^XLFDT(VISIT,,,-TMDIF)
"RTN","SDECAPI4",223,0)
 S END=$$FMADD^XLFDT(VISIT,,,TMDIF)
"RTN","SDECAPI4",224,0)
 I (DATE\1)<(END\1) S SW=(END\1),END=(DATE\1)_".9999",DATE=SW
"RTN","SDECAPI4",225,0)
 S DATE=(9999999-(DATE\1)_"."_$P(DATE,".",2))-.0001
"RTN","SDECAPI4",226,0)
 S END=9999999-(END\1)_"."_$P(END,".",2)
"RTN","SDECAPI4",227,0)
 I RANGE=-1 S END=(END\1)_".9999",DATE=(DATE\1)     ;no time range used; go from begin one day to end
"RTN","SDECAPI4",228,0)
 Q
"RTN","SDECAPI4",229,0)
 ;
"RTN","SDECAPI4",230,0)
TRIAGE(VST) ; returns 1 if visit's hosp loc is triage type
"RTN","SDECAPI4",231,0)
 NEW HL
"RTN","SDECAPI4",232,0)
 S HL=$$GET1^DIQ(9000010,VST,.22,"I") I 'HL Q 0
"RTN","SDECAPI4",233,0)
 Q +$$GET1^DIQ(9009017.2,HL,.16,"I")
"RTN","SDECAPI4",234,0)
 ;
"RTN","SDECAR")
0^140^B56209815^n/a
"RTN","SDECAR",1,0)
SDECAR ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECAR",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECAR",3,0)
 ;
"RTN","SDECAR",4,0)
 Q
"RTN","SDECAR",5,0)
 ;
"RTN","SDECAR",6,0)
ARCLOSE(RET,INP) ;Appointment Request Close
"RTN","SDECAR",7,0)
 ;ARCLOSE(RET,INP...)  external parameter tag in SDEC
"RTN","SDECAR",8,0)
 ; INP - Input parameters array
"RTN","SDECAR",9,0)
 ;     INP(1) - Request ID - Pointer to SDEC APPT REQUEST file
"RTN","SDECAR",10,0)
 ;     INP(2) - Disposition
"RTN","SDECAR",11,0)
 ;     INP(3) - User Id - Pointer to NEW PERSON file
"RTN","SDECAR",12,0)
 ;     INP(4) - Date Dispositioned in external form
"RTN","SDECAR",13,0)
 N MI,ARDISP,ARDISPBY,ARDISPDT,ARFDA,ARIEN,ARMSG,ARRET
"RTN","SDECAR",14,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECAR",15,0)
 ;validate IEN
"RTN","SDECAR",16,0)
 S ARIEN=$G(INP(1)) I ARIEN="" S RET=RET_"-1^Missing IEN"_$C(30,31) Q
"RTN","SDECAR",17,0)
 ;validate DISPOSITION
"RTN","SDECAR",18,0)
 S ARDISP=$G(INP(2))
"RTN","SDECAR",19,0)
 I (ARDISP'="D"),(ARDISP'="NC"),(ARDISP'="SA"),(ARDISP'="CC"),(ARDISP'="NN"),(ARDISP'="ER"),(ARDISP'="TR"),(ARDISP'="CL") D
"RTN","SDECAR",20,0)
 .S:ARDISP="DEATH" ARDISP="D"
"RTN","SDECAR",21,0)
 .S:ARDISP="REMOVED/NON-VA CARE" ARDISP="NC"
"RTN","SDECAR",22,0)
 .S:ARDISP="REMOVED/SCHEDULED-ASSIGNED" ARDISP="SA"
"RTN","SDECAR",23,0)
 .S:ARDISP="REMOVED/VA CONTRACT CARE" ARDISP="CC"
"RTN","SDECAR",24,0)
 .S:ARDISP="REMOVED/NO LONGER NECESSARY" ARDISP="NN"
"RTN","SDECAR",25,0)
 .S:ARDISP="ENTERED IN ERROR" ARDISP="ER"
"RTN","SDECAR",26,0)
 .S:ARDISP="TRANSFERRED TO EWL" ARDISP="TR"
"RTN","SDECAR",27,0)
 .S:ARDISP="CHANGED CLINIC" ARDISP="CL"
"RTN","SDECAR",28,0)
 I ARDISP="" S RET=RET_"-1^Missing value for DISPOSITION"_$C(30,31) Q
"RTN","SDECAR",29,0)
 I (ARDISP'="D"),(ARDISP'="NC"),(ARDISP'="SA"),(ARDISP'="CC"),(ARDISP'="NN"),(ARDISP'="ER"),(ARDISP'="TR"),(ARDISP'="CL") D
"RTN","SDECAR",30,0)
 .S RET=RET_"-1^Invalid value for DISPOSITION"_$C(30,31) Q
"RTN","SDECAR",31,0)
 ;validate DISPOSITIONED BY
"RTN","SDECAR",32,0)
 S ARDISPBY=$G(INP(3),DUZ)
"RTN","SDECAR",33,0)
 I '+ARDISPBY S ARDISPBY=$O(^VA(200,"B",ARDISPBY,0))
"RTN","SDECAR",34,0)
 I '$D(^VA(200,+ARDISPBY,0)) S RET=RET_"-1^Invalid 'DISPOSITIONED BY' user"_$C(30,31) Q
"RTN","SDECAR",35,0)
 ;validate DATE DISPOSITIONED
"RTN","SDECAR",36,0)
 S ARDISPDT=$G(INP(4),DT) I ARDISPDT'="" S %DT="" S X=ARDISPDT D ^%DT S ARDISPDT=Y
"RTN","SDECAR",37,0)
 I Y=-1 S RET=RET_"-1^Invalid 'DATE DISPOSITIONED'"_$C(30,31) Q
"RTN","SDECAR",38,0)
 S ARFDA=$NA(ARFDA($$FNUM,ARIEN_","))
"RTN","SDECAR",39,0)
 S @ARFDA@(19)=ARDISPDT
"RTN","SDECAR",40,0)
 S @ARFDA@(20)=ARDISPBY
"RTN","SDECAR",41,0)
 S @ARFDA@(21)=ARDISP
"RTN","SDECAR",42,0)
 S @ARFDA@(23)="C"
"RTN","SDECAR",43,0)
 D UPDATE^DIE("","ARFDA","ARRET","ARMSG")
"RTN","SDECAR",44,0)
 I $D(ARMSG("DIERR")) D
"RTN","SDECAR",45,0)
 . F MI=1:1:$G(ARMSG("DIERR")) S RET=RET_"-1^"_$G(ARMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECAR",46,0)
 S RET=RET_$C(31)
"RTN","SDECAR",47,0)
 Q
"RTN","SDECAR",48,0)
 ;
"RTN","SDECAR",49,0)
AROPEN(RET,ARAPP,ARIEN,ARDDT) ;SET Appointment Request Open/re-open
"RTN","SDECAR",50,0)
 ;AROPEN(RET,ARAPP,ARIEN,ARDDT)  external parameter tag in SDEC
"RTN","SDECAR",51,0)
 ;INPUT:
"RTN","SDECAR",52,0)
 ;     ARAPP - (required if no ARIEN) Appointment ID pointer to
"RTN","SDECAR",53,0)
 ;                                    SDEC APPOINTMENT file 409.84
"RTN","SDECAR",54,0)
 ;     ARIEN - (required if no ARAPP) Request ID - Pointer to
"RTN","SDECAR",55,0)
 ;                                    SDEC APPOINTMENT REQUEST file
"RTN","SDECAR",56,0)
 ;     ARDDT - (optional) Desired Date of appointment in external format
"RTN","SDECAR",57,0)
 N SDART,SDECI,SDQ,ARFDA,ARMSG,X,Y,%DT
"RTN","SDECAR",58,0)
 S RET="^TMP(""SDECAR"","_$J_",""AROPEN"")"
"RTN","SDECAR",59,0)
 K @RET
"RTN","SDECAR",60,0)
 S (SDECI,SDQ)=0
"RTN","SDECAR",61,0)
 S @RET@(SDECI)="T00030ERRORID^T00030ERRTEXT"_$C(30)
"RTN","SDECAR",62,0)
 ;validate ARAPP (required if ARIEN not passed it)
"RTN","SDECAR",63,0)
 S ARAPP=$G(ARAPP)
"RTN","SDECAR",64,0)
 I ARAPP'="" I $D(^SDEC(409.84,ARAPP,0)) D
"RTN","SDECAR",65,0)
 .S SDART=$$GET1^DIQ(409.84,ARAPP_",",.22,"I")
"RTN","SDECAR",66,0)
 .I $P(SDART,";",2)'="SDEC(409.85," S SDECI=SDECI+1 S @RET@(SDECI)="-1^Not a Requested appointment."_$C(30),SDQ=1 Q
"RTN","SDECAR",67,0)
 .I $G(ARIEN)'="",ARIEN'=$P(SDART,";",1) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Appointment Request does not match item passed in."_$C(30),SDQ=1 Q
"RTN","SDECAR",68,0)
 .S ARIEN=$P(SDART,";",1)
"RTN","SDECAR",69,0)
 G:SDQ ARX
"RTN","SDECAR",70,0)
 ;validate ARIEN
"RTN","SDECAR",71,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",72,0)
 I ARIEN="" S SDECI=SDECI+1 S @RET@(SDECI)="-1^Appointment Request ID or Appointment ID is required."_$C(30,31) Q
"RTN","SDECAR",73,0)
 I '$D(^SDEC(409.85,ARIEN,0)) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid Appt Request ID."_$C(30,31) Q
"RTN","SDECAR",74,0)
 ;validate ARDDT
"RTN","SDECAR",75,0)
 S ARDDT=$P($G(ARDDT),"@",1)
"RTN","SDECAR",76,0)
 I $G(ARDDT)'="" S %DT="" S X=ARDDT D ^%DT I Y=-1 S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid desired date of appointment."_$C(30,31) Q
"RTN","SDECAR",77,0)
 ;
"RTN","SDECAR",78,0)
 S ARFDA=$NA(ARFDA(409.85,ARIEN_","))
"RTN","SDECAR",79,0)
 S @ARFDA@(19)=""
"RTN","SDECAR",80,0)
 S @ARFDA@(20)=""
"RTN","SDECAR",81,0)
 S @ARFDA@(21)=""
"RTN","SDECAR",82,0)
 S:ARDDT'="" @ARFDA@(22)=ARDDT
"RTN","SDECAR",83,0)
 S @ARFDA@(23)="OPEN"
"RTN","SDECAR",84,0)
 D UPDATE^DIE("E","ARFDA","ARRET","ARMSG")
"RTN","SDECAR",85,0)
 I $D(ARMSG("DIERR")) D
"RTN","SDECAR",86,0)
 . F MI=1:1:$G(ARMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="-1^"_$G(ARMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECAR",87,0)
 I '$D(ARMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="0^"_ARIEN_$C(30)
"RTN","SDECAR",88,0)
ARX S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDECAR",89,0)
 Q
"RTN","SDECAR",90,0)
 ;
"RTN","SDECAR",91,0)
FNUM(RET) ;file number
"RTN","SDECAR",92,0)
 S RET=409.85
"RTN","SDECAR",93,0)
 Q RET
"RTN","SDECAR",94,0)
 ;
"RTN","SDECAR",95,0)
 ;
"RTN","SDECAR",96,0)
ARPCSET(SDECY,INP,ARIEN) ;SET update patient contacts in SDEC APPT REQUEST file
"RTN","SDECAR",97,0)
 ;ARSETPC(SDECY,INP,ARIEN)  external parameter tag in SDEC
"RTN","SDECAR",98,0)
 ;  INP = Patient Contacts separated by ::
"RTN","SDECAR",99,0)
 ;            Each :: piece has the following ~~ pieces:  (same as they are passed into SDEC ARLSET)
"RTN","SDECAR",100,0)
 ;            1) = (required)    DATE ENTERED external date/time
"RTN","SDECAR",101,0)
 ;            2) = (optional)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECAR",102,0)
 ;            4) = (optional)    ACTION - valid values are:
"RTN","SDECAR",103,0)
 ;                               CALLED   MESSAGE LEFT   LETTER
"RTN","SDECAR",104,0)
 ;            5) = (optional)    PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECAR",105,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECAR",106,0)
 ;  ARIEN = (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR",107,0)
 N SDECI,SDTMP,ARMSG1
"RTN","SDECAR",108,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARSETPC"")"
"RTN","SDECAR",109,0)
 K @SDECY
"RTN","SDECAR",110,0)
 S SDECI=0
"RTN","SDECAR",111,0)
 S @SDECY@(SDECI)="T00030RETURNCODE^T00030TEXT"_$C(30)
"RTN","SDECAR",112,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",113,0)
 I (ARIEN="")!('$D(^SDEC(409.85,ARIEN,0))) D ERR1^SDECERR(-1,"Invalid wait list ID "_ARIEN_".",SDECI,SDECY) Q
"RTN","SDECAR",114,0)
 D AR23^SDECAR2(INP,ARIEN)
"RTN","SDECAR",115,0)
 I $D(ARMSG1) D ERR1^SDECERR(-1,"Error storing patient contacts.",SDECI,SDECY) Q
"RTN","SDECAR",116,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^SUCCESS"_$C(30,31)
"RTN","SDECAR",117,0)
 Q
"RTN","SDECAR",118,0)
 ;
"RTN","SDECAR",119,0)
ARDGET(SDECY) ;get values for disposition field of SDEC APPT REQUEST file
"RTN","SDECAR",120,0)
 ;ARDGET(SDECY)  external parameter tag is in SDEC
"RTN","SDECAR",121,0)
 ;INPUT: none
"RTN","SDECAR",122,0)
 ;RETURN:
"RTN","SDECAR",123,0)
 ; Successful Return:
"RTN","SDECAR",124,0)
 ;  Global array containing a list of the valid DISPOSITION values in which
"RTN","SDECAR",125,0)
 ;  each array entry contains the disposition text.
"RTN","SDECAR",126,0)
 ; Caught Exception Return:
"RTN","SDECAR",127,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDECAR",128,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDECAR",129,0)
 ; Unexpected Exception Return:
"RTN","SDECAR",130,0)
 ;     Handled by the RPC Broker.
"RTN","SDECAR",131,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDECAR",132,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDECAR",133,0)
 ;     text back to the client.
"RTN","SDECAR",134,0)
 N SDI,SDX,SDXI,SDECI
"RTN","SDECAR",135,0)
 S SDECI=0
"RTN","SDECAR",136,0)
 K ^TMP("SDEC",$J)
"RTN","SDECAR",137,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDECAR",138,0)
 ; data header
"RTN","SDECAR",139,0)
 S @SDECY@(SDECI)="T00030TEXT"_$C(30)
"RTN","SDECAR",140,0)
 S SDX=$P($G(^DD(409.85,21,0)),U,3)
"RTN","SDECAR",141,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDECAR",142,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDECAR",143,0)
 .Q:SDXI=""
"RTN","SDECAR",144,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=$P(SDXI,":",2)_$C(30)
"RTN","SDECAR",145,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECAR",146,0)
 Q
"RTN","SDECAR",147,0)
 ;
"RTN","SDECAR",148,0)
ARMRTGET(SDECY,ARIEN) ;GET number of entries and values in MRTC CALC PREF DATES
"RTN","SDECAR",149,0)
 ;ARMRTGET(SDECY,ARIEN)
"RTN","SDECAR",150,0)
 ;INPUT:
"RTN","SDECAR",151,0)
 ; ARIEN - (required) pointer to SDEC APPT REQUEST file
"RTN","SDECAR",152,0)
 ;RETURN:
"RTN","SDECAR",153,0)
 ; 1st entry contains a count of the number of dates in MRTC CALC PREF DATES
"RTN","SDECAR",154,0)
 ; 2-n entry contains each date
"RTN","SDECAR",155,0)
 N ARDATA,SDC,SDECI,SDI
"RTN","SDECAR",156,0)
 S SDC=0
"RTN","SDECAR",157,0)
 S SDECI=1  ;save position 1 for count in SDC
"RTN","SDECAR",158,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARMRTGET"")"
"RTN","SDECAR",159,0)
 K @SDECY
"RTN","SDECAR",160,0)
 ; data header
"RTN","SDECAR",161,0)
 S @SDECY@(0)="T00030ERRORCODE^T00030MESSAGE"_$C(30)
"RTN","SDECAR",162,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",163,0)
 I ARIEN="" S @SDECY@(1)="-1^SDEC APPT REQUEST id is required." Q
"RTN","SDECAR",164,0)
 I '$D(^SDEC(409.85,+ARIEN,0)) S @SDECY@(1)="-1^Invalid SDEC APPT REQUEST id." Q
"RTN","SDECAR",165,0)
 D GETS^DIQ(409.85,+ARIEN,"43.5*","E","ARDATA")
"RTN","SDECAR",166,0)
 S SDI=0 F  S SDI=$O(ARDATA(409.851,SDI)) Q:SDI=""  D
"RTN","SDECAR",167,0)
 .S SDC=SDC+1
"RTN","SDECAR",168,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=ARDATA(409.851,SDI,.01,"E")_$C(30)
"RTN","SDECAR",169,0)
 S @SDECY@(1)=SDC_$C(30)
"RTN","SDECAR",170,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECAR",171,0)
 Q
"RTN","SDECAR",172,0)
 ;
"RTN","SDECAR",173,0)
ARMRTSET(SDECY,ARIEN,MRTC) ;SET MRTC CALC PREF DATES dates - clears the multiple and sets the new ones that are passed into MRTC
"RTN","SDECAR",174,0)
 ;ARMRTSET(SDECY,ARIEN,MRTC)
"RTN","SDECAR",175,0)
 ;INPUT:
"RTN","SDECAR",176,0)
 ; ARIEN - (required) pointer to SDEC APPT REQUEST file
"RTN","SDECAR",177,0)
 ; MRTC  - (optional) MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR",178,0)
 ;                    Each date can be in external format with no time.
"RTN","SDECAR",179,0)
 ;RETURN:
"RTN","SDECAR",180,0)
 ; ERRORCODE^MESSAGE
"RTN","SDECAR",181,0)
 N SDI,MRTC1
"RTN","SDECAR",182,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARMRTSET"")"
"RTN","SDECAR",183,0)
 K @SDECY
"RTN","SDECAR",184,0)
 ; data header
"RTN","SDECAR",185,0)
 S @SDECY@(0)="T00030ERRORCODE^T00030MESSAGE"_$C(30)
"RTN","SDECAR",186,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",187,0)
 I ARIEN="" S @SDECY@(1)="-1^SDEC APPT REQUEST id is required." Q
"RTN","SDECAR",188,0)
 I '$D(^SDEC(409.85,+ARIEN,0)) S @SDECY@(1)="-1^Invalid SDEC APPT REQUEST id." Q
"RTN","SDECAR",189,0)
 S MRTC=$G(MRTC)
"RTN","SDECAR",190,0)
 I MRTC="" S @SDECY@(1)="0"_$C(30,31) Q  ;not an error, just nothing to do
"RTN","SDECAR",191,0)
 D MT(ARIEN)
"RTN","SDECAR",192,0)
 D AR435^SDECAR2(MRTC,ARIEN)
"RTN","SDECAR",193,0)
 S @SDECY@(1)="0"_$C(30,31)
"RTN","SDECAR",194,0)
 Q
"RTN","SDECAR",195,0)
MT(ARIEN)  ; clear out existing MRTC CALC PREF DATES
"RTN","SDECAR",196,0)
 N DA,DIK,SDI
"RTN","SDECAR",197,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,ARIEN,5,SDI)) Q:SDI'>0  D
"RTN","SDECAR",198,0)
 .S DIK="^SDEC(409.85,"_ARIEN_",5,"
"RTN","SDECAR",199,0)
 .S DA=SDI
"RTN","SDECAR",200,0)
 .S DA(1)=ARIEN
"RTN","SDECAR",201,0)
 .D ^DIK
"RTN","SDECAR",202,0)
 Q
"RTN","SDECAR",203,0)
 ;
"RTN","SDECAR",204,0)
ARMRTC(RET,ARIEN) ;GET the number of MRTC appointments made for this request
"RTN","SDECAR",205,0)
 ;INPUT:
"RTN","SDECAR",206,0)
 ;  ARIEN - (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR",207,0)
 ;RETURN
"RTN","SDECAR",208,0)
 ;  Global array with 1 entry containing the count of appointments made under the COUNT header
"RTN","SDECAR",209,0)
 N SDC,SDECI,SDI
"RTN","SDECAR",210,0)
 S RET="^TMP(""SDECAR1"","_$J_",""ARMRTC"")"
"RTN","SDECAR",211,0)
 K @RET
"RTN","SDECAR",212,0)
 S (SDC,SDECI)=0
"RTN","SDECAR",213,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",214,0)
 I '$D(^SDEC(409.85,ARIEN,0)) S @RET@(1)="-1^Invalid ID"_$C(30,31) Q
"RTN","SDECAR",215,0)
 S @RET@(SDECI)="T00030COUNT"_$C(30)
"RTN","SDECAR",216,0)
 S @RET@(1)=$$MRTC(ARIEN)_$C(30,31)
"RTN","SDECAR",217,0)
 Q
"RTN","SDECAR",218,0)
MRTC(ARIEN) ;
"RTN","SDECAR",219,0)
 N SDC,SDI
"RTN","SDECAR",220,0)
 S SDC=0
"RTN","SDECAR",221,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,ARIEN,2,SDI)) Q:SDI'>0  D
"RTN","SDECAR",222,0)
 .S SDC=SDC+1
"RTN","SDECAR",223,0)
 Q SDC
"RTN","SDECAR",224,0)
 ;
"RTN","SDECAR",225,0)
ARAPPT(SDECY,SDAPPT) ;GET appointment request for given SDEC APPOINTMENT id
"RTN","SDECAR",226,0)
 ;INPUT:
"RTN","SDECAR",227,0)
 ;  SDAPPT - (required) pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECAR",228,0)
 ;RETURN
"RTN","SDECAR",229,0)
 ;  Global array with 1 entry containing the REQUEST TYPE and IEN of the associated appointment separated by pipe |:
"RTN","SDECAR",230,0)
 ;    1. Request Type - A  APPT
"RTN","SDECAR",231,0)
 ;                      C  Consult
"RTN","SDECAR",232,0)
 ;                      E  EWL
"RTN","SDECAR",233,0)
 ;                      R  Recall
"RTN","SDECAR",234,0)
 ;    2. IEN - pointer to either the SDEC APPT REQUEST, REQUEST/CONSULTATION, SD WAIT LIST, or RECALL REMINDERS file
"RTN","SDECAR",235,0)
 ;
"RTN","SDECAR",236,0)
 N SDECI,SDTYP,SDX,SDY
"RTN","SDECAR",237,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARAPPT"")"
"RTN","SDECAR",238,0)
 K @SDECY
"RTN","SDECAR",239,0)
 S SDECI=0
"RTN","SDECAR",240,0)
 S @SDECY@(SDECI)="T00030SDAPTYP"_$C(30)
"RTN","SDECAR",241,0)
 S SDAPPT=$G(SDAPPT)
"RTN","SDECAR",242,0)
 I SDAPPT="" S @SDECY@(1)="-1^SDEC APPOINTMENT id is required."_$C(30,31) Q
"RTN","SDECAR",243,0)
 I '$D(^SDEC(409.84,+SDAPPT,0)) S @SDECY@(1)="-1^Invalid SDEC APPOINTMENT ID."_$C(30,31) Q
"RTN","SDECAR",244,0)
 S SDX=$$GET1^DIQ(409.84,SDAPPT_",",.22,"I")
"RTN","SDECAR",245,0)
 S SDY=$P(SDX,";",2)
"RTN","SDECAR",246,0)
 S SDTYP=$S(SDY="SDWL(409.3,":"E|",SDY="GMR(123,":"C|",SDY="SD(403.5,":"R|",SDY="SDEC(409.85,":"A|",1:"")_$P(SDX,";",1)  ;appt request type
"RTN","SDECAR",247,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTYP_$C(30,31)
"RTN","SDECAR",248,0)
 Q
"RTN","SDECAR1")
0^141^B118549716^n/a
"RTN","SDECAR1",1,0)
SDECAR1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECAR1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECAR1",3,0)
 ;
"RTN","SDECAR1",4,0)
 Q
"RTN","SDECAR1",5,0)
 ;
"RTN","SDECAR1",6,0)
 ; Get SDEC APPOINTMENT REQUEST for all entries in the user's Institution
"RTN","SDECAR1",7,0)
 ; where the Current Status is not C(losed).
"RTN","SDECAR1",8,0)
ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;Waitlist GET
"RTN","SDECAR1",9,0)
ARGET1 ;
"RTN","SDECAR1",10,0)
 ;ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB)  external parameter tag in SDEC
"RTN","SDECAR1",11,0)
 ;INPUT:
"RTN","SDECAR1",12,0)
 ;  ARIEN1   - (optional) wait list ID pointer to SDED(409.85
"RTN","SDECAR1",13,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDECAR1",14,0)
 ;  SDBEG    - (optional) Begin date in external format - defaults to jan 1,1800
"RTN","SDECAR1",15,0)
 ;  SDEND    - (optional) End date in external format - defaults to 90 before TODAY
"RTN","SDECAR1",16,0)
 ;  DFN      - (optional) patient ID pointer to PATIENT file 2
"RTN","SDECAR1",17,0)
 ;  LASTSUB  - (optional) only used if DFN=""
"RTN","SDECAR1",18,0)
 ;            last subscripts from previous call
"RTN","SDECAR1",19,0)
 ;             <origination date/time> | <wait list ID>
"RTN","SDECAR1",20,0)
 ;  SDTOP    - (optional) runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"RTN","SDECAR1",21,0)
 ;
"RTN","SDECAR1",22,0)
 ;RETURN:  Return Appointment Request data in a Dataset format with these columns:
"RTN","SDECAR1",23,0)
 ;   DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5] ^ GENDER [6] ^ APPT REQUEST IEN [7]
"RTN","SDECAR1",24,0)
 ; ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9] ^ INSTITUTION NAME [10] ^ APP TYPE [11]
"RTN","SDECAR1",25,0)
 ; ^ SPECIFIC CLINIC IEN [12] ^ SPECIFIC CLINIC NAME [13] ^ ORIGINATING USER IEN [14] ^ ORIGINATING USER NAME [15}
"RTN","SDECAR1",26,0)
 ; ^ PRIORITY [16] ^ REQUEST BY [17] ^ PROVIDER IEN [18] ^ PROVIDER NAME [19] ^ DESIRED DATE OF APPOINTMENT [20]
"RTN","SDECAR1",27,0)
 ; ^ COMMENTS [21] ^ ENROLLMENT PRIORITY [22]  ^ MULTIPLE APPOINTMENT RTC 0=NO; 1=YES [23]
"RTN","SDECAR1",28,0)
 ; ^ MULT APPT RTC INTERVAL-Integer between 1-365 [24] ^ MULT APPT NUMBER-Integer between 1-100 [25]
"RTN","SDECAR1",29,0)
 ; ^ PRIGRP [26] ^ ELIGIEN [27] ELIGNAME [28] ^ SVCCONN [29] ^ SVCCONNP[30] ^ TYPEIEN [31] ^ TYPENAME [32]
"RTN","SDECAR1",30,0)
 ; ^ PCONTACT [33] ^ ARDISPD [34] ^ ARDISPU [35] ^ ARDISPUN [36] ^ ARSVCCON [37] ^ PADDRES1 [38] ^ PADDRES2 [39]
"RTN","SDECAR1",31,0)
 ; ^ PADDRES3 [40] ^ PCITY [41] ^ PSTATE [42] ^ PCOUNTRY [43] ^ PZIP4 [44] ^ GAF [45] ^ DATE/TIME ENTERED [46]
"RTN","SDECAR1",32,0)
 ; ^ MTRCDATES [47] ^ SENSITIVE [48] ^^^^^^^ LASTSUB [56] ^ STOPIEN [57] ^ STOPNAME [58] ^ APPT_SCHED_DATE [59]
"RTN","SDECAR1",33,0)
 ; ^ MRTCCOUNT [60] ^ PTPHONE [61] ^ APPTYPE [62] ^ EESTAT [63] ^ PRHBLOC [64]
"RTN","SDECAR1",34,0)
 ;
"RTN","SDECAR1",35,0)
 ;--[64] Boolean indicating if location is a Prohibit Access clinic
"RTN","SDECAR1",36,0)
 ;
"RTN","SDECAR1",37,0)
 ;--[48] SENSITIVE - Sensitive Record Access data separated by pipe |:
"RTN","SDECAR1",38,0)
 ;        ;   1. return code:
"RTN","SDECAR1",39,0)
 ;               -1-RPC/API failed
"RTN","SDECAR1",40,0)
 ;                  Required variable not defined
"RTN","SDECAR1",41,0)
 ;                0-No display/action required
"RTN","SDECAR1",42,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDECAR1",43,0)
 ;                1-Display warning message
"RTN","SDECAR1",44,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDECAR1",45,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDECAR1",46,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDECAR1",47,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDECAR1",48,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDECAR1",49,0)
 ;                3-Access to record denied
"RTN","SDECAR1",50,0)
 ;                  Accessing own record
"RTN","SDECAR1",51,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDECAR1",52,0)
 ;                  SSN not defined
"RTN","SDECAR1",53,0)
 ;   2. display text/message
"RTN","SDECAR1",54,0)
 ;   3. display text/message
"RTN","SDECAR1",55,0)
 ;   4. display text/message
"RTN","SDECAR1",56,0)
 ;
"RTN","SDECAR1",57,0)
 ;--[47] MTRCDATES separated by pipe |, no time
"RTN","SDECAR1",58,0)
 ;
"RTN","SDECAR1",59,0)
 ;--[45] GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDECAR1",60,0)
 ;
"RTN","SDECAR1",61,0)
 ;--[33] PCONTACT   Patient Contact
"RTN","SDECAR1",62,0)
 ;  PATIENT CONTACT pieced by :: where each :: piece contains the following ~~ pieces:
"RTN","SDECAR1",63,0)
 ;         1. DATE ENTERED                external date/time
"RTN","SDECAR1",64,0)
 ;         2. PC ENTERED BY USER IEN      Pointer to NEW PERSON file
"RTN","SDECAR1",65,0)
 ;         3. PC ENTERED BY USER NAME     NAME from NEW PERSION file
"RTN","SDECAR1",66,0)
 ;         4. ACTION                      C=Called; M=Message Left; L=LETTER
"RTN","SDECAR1",67,0)
 ;         5. PATIENT PHONE               Free-Text 4-20 characters
"RTN","SDECAR1",68,0)
 ;
"RTN","SDECAR1",69,0)
 ;--[59] APPT_SCHED_DATE
"RTN","SDECAR1",70,0)
 ;       APPT DATA separated by "~~"
"RTN","SDECAR1",71,0)
 ;         1. SCHEDULED DATE OF APPOINTMENT
"RTN","SDECAR1",72,0)
 ;        12. APPT CLERK ien
"RTN","SDECAR1",73,0)
 ;        13. APPT CLERK name
"RTN","SDECAR1",74,0)
 ;        17. DATE APPT. MADE
"RTN","SDECAR1",75,0)
 ;
"RTN","SDECAR1",76,0)
 ;     ^  |  ;;  ::  ~~  {{
"RTN","SDECAR1",77,0)
 ;
"RTN","SDECAR1",78,0)
 ;VARIABLES:  these numbers are wrong
"RTN","SDECAR1",79,0)
 ; DFN       DFN [1]
"RTN","SDECAR1",80,0)
 ; NAME      PATIENT NAME [2]
"RTN","SDECAR1",81,0)
 ; HRN       PATIENT HRN [3]
"RTN","SDECAR1",82,0)
 ; DOB       DOB [4]
"RTN","SDECAR1",83,0)
 ; SSN       LAST4SSN [5]
"RTN","SDECAR1",84,0)
 ; GENDER    GENDER [6]
"RTN","SDECAR1",85,0)
 ; ARIEN     RECORD# [7]
"RTN","SDECAR1",86,0)
 ; ARORIGDT  ORIGINATING DATE [8]
"RTN","SDECAR1",87,0)
 ; INSTIEN    INSTITUTION [9]
"RTN","SDECAR1",88,0)
 ; INSTNAME  INSTITUTION NAME [10]
"RTN","SDECAR1",89,0)
 ; ARTYPE    APPOINTMENT TYPE [11]
"RTN","SDECAR1",90,0)
 ; ARCLIN    SPECIFIC CLINIC [13]
"RTN","SDECAR1",91,0)
 ; ARUSER    ORIGINATING USER [14]
"RTN","SDECAR1",92,0)
 ; ARPRIO    PRIORITY [15]
"RTN","SDECAR1",93,0)
 ; ARREQBY   REQUEST BY [16]
"RTN","SDECAR1",94,0)
 ; ARPROV    PROVIDER [17]
"RTN","SDECAR1",95,0)
 ; ARDAPTDT  DESIRED DATE OF APPOINTMENT [18]
"RTN","SDECAR1",96,0)
 ; ARCOMM    COMMENTS [19]
"RTN","SDECAR1",97,0)
 ; PTPHONE   PATIENT TELEPHONE [20]
"RTN","SDECAR1",98,0)
 ; ARENPRI   ENROLLMENT PRIORITY [21]
"RTN","SDECAR1",99,0)
 N CLOSED,FNUM,NAME,DOB,SSN4,GENDER,ARORIGDT,ARINST,ARINSTNM,ARTYPE,ARTEAM,ARPOS
"RTN","SDECAR1",100,0)
 N ELIGIEN,ELIGNAME,FRULES,GLOREF,HRN,INSTIEN,INSTNAME,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDECAR1",101,0)
 N PCOUNTRY,SDSUB,SDTMP,SSN,ARSSIEN,ARSSNAME,ARCLIEN,ARCLNAME
"RTN","SDECAR1",102,0)
 N ARUSER,ARPRIO,ARREQBY,ARPROV,ARPROVNM,ARDAPTDT,ARCOMM,AREESTAT,ARUSRNM
"RTN","SDECAR1",103,0)
 N ARCLIENL,AREDT,ARIEN,PTINFOLSTA,ARDISPD,ARDISPU,ARDISPUN,ARSVCCON
"RTN","SDECAR1",104,0)
 N ARMAI,ARMAN,ARMAR,ARSTAT,ARSTOP,ARSTOPN,COUNT,STR
"RTN","SDECAR1",105,0)
 N PCITY,GAF,PSTATE,PZIP4,PADDRES1,PADDRES2,PADDRES3,PPC,PTPHONE,ARENPRI,ARASD,ARPC,ARDATA
"RTN","SDECAR1",106,0)
 N SDCL,SDI,SDJ,SDMTRC,SDPS,SDSENS,SDDEMO,X,Y,%DT
"RTN","SDECAR1",107,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECAR1",108,0)
 K @RET
"RTN","SDECAR1",109,0)
 S FNUM=$$FNUM^SDECAR,COUNT=0
"RTN","SDECAR1",110,0)
 S MAXREC=+$G(MAXREC,50)
"RTN","SDECAR1",111,0)
 D HDR
"RTN","SDECAR1",112,0)
 S GLOREF=$NA(^SDEC(409.85,"C",DUZ(2)))
"RTN","SDECAR1",113,0)
 S FRULES=1
"RTN","SDECAR1",114,0)
 S ARIEN=0
"RTN","SDECAR1",115,0)
 ;F  S WLIEN=$O(@GLOREF@(WLIEN)) Q:'WLIEN  D ONEPAT I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",116,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECAR1",117,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=3100101
"RTN","SDECAR1",118,0)
 I SDBEG="" S SDBEG=3100101
"RTN","SDECAR1",119,0)
 S SDEND=$G(SDEND)
"RTN","SDECAR1",120,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECAR1",121,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECAR1",122,0)
 S DFN=$G(DFN)
"RTN","SDECAR1",123,0)
 I DFN'="",'$D(^DPT(DFN,0)) S DFN=""
"RTN","SDECAR1",124,0)
 S LASTSUB=$S(DFN="":$G(LASTSUB),1:"")
"RTN","SDECAR1",125,0)
 S SDTOP=+$G(SDTOP)
"RTN","SDECAR1",126,0)
 ;single IEN
"RTN","SDECAR1",127,0)
 S ARIEN1=$G(ARIEN1)
"RTN","SDECAR1",128,0)
 I +ARIEN1 I '$D(^SDEC(409.85,+ARIEN1,0))  S ARIEN1=""
"RTN","SDECAR1",129,0)
 I +ARIEN1 D
"RTN","SDECAR1",130,0)
 .S ARIEN=+ARIEN1
"RTN","SDECAR1",131,0)
 .S FRULES=0  ;no rules - just return the single record
"RTN","SDECAR1",132,0)
 .D ONEPAT
"RTN","SDECAR1",133,0)
 I +ARIEN1 S @RET@(COUNT)=@RET@(COUNT)_$C(31) Q
"RTN","SDECAR1",134,0)
 ;by patient
"RTN","SDECAR1",135,0)
 I +DFN D
"RTN","SDECAR1",136,0)
 .I 'SDTOP S ARIEN=0 F  S ARIEN=$O(^SDEC(409.85,"B",+DFN,ARIEN)) Q:ARIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",137,0)
 .I +SDTOP S ARIEN=999999999 F  S ARIEN=$O(^SDEC(409.85,"B",+DFN,ARIEN),-1) Q:ARIEN'>0  D ONEPAT
"RTN","SDECAR1",138,0)
 ;all by date range
"RTN","SDECAR1",139,0)
 I 'DFN D
"RTN","SDECAR1",140,0)
 .I 'SDTOP D
"RTN","SDECAR1",141,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1)
"RTN","SDECAR1",142,0)
 ..F  S SDJ=$O(^SDEC(409.85,"E","O",SDJ)) Q:SDJ'>0  Q:SDJ>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",143,0)
 ...S ARIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0)
"RTN","SDECAR1",144,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"E","O",SDJ,ARIEN)) Q:ARIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_ARIEN Q
"RTN","SDECAR1",145,0)
 ....S SDSUB=""
"RTN","SDECAR1",146,0)
 ....D ONEPAT
"RTN","SDECAR1",147,0)
 .I +SDTOP D
"RTN","SDECAR1",148,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1)
"RTN","SDECAR1",149,0)
 ..F  S SDJ=$O(^SDEC(409.85,"E","O",SDJ),-1) Q:SDJ'>0  Q:SDJ<SDBEG  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",150,0)
 ...S ARIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999)
"RTN","SDECAR1",151,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"E","O",SDJ,ARIEN),-1) Q:ARIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_ARIEN Q
"RTN","SDECAR1",152,0)
 ....S SDSUB=""
"RTN","SDECAR1",153,0)
 ....D ONEPAT
"RTN","SDECAR1",154,0)
 S SDTMP=@RET@(COUNT) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECAR1",155,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,56)=SDSUB
"RTN","SDECAR1",156,0)
 S @RET@(COUNT)=SDTMP_$C(30,31)
"RTN","SDECAR1",157,0)
 Q
"RTN","SDECAR1",158,0)
HDR ;Send back the header
"RTN","SDECAR1",159,0)
 ;                     1         2
"RTN","SDECAR1",160,0)
 S @RET@(COUNT)="T00030DFN^T00030NAME"
"RTN","SDECAR1",161,0)
 ;                                   3         4         5         6            7         8
"RTN","SDECAR1",162,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^I00010IEN^D00030ORIGDT"
"RTN","SDECAR1",163,0)
 ;                                   9             10             11          12            13
"RTN","SDECAR1",164,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030INSTIEN^T00030INSTNAME^T00030TYPE^T00030CLINIEN^T00030CLINNAME"
"RTN","SDECAR1",165,0)
 ;                                   14            15             16         17          18            19
"RTN","SDECAR1",166,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030USERIEN^T00030USERNAME^T00030PRIO^T00030REQBY^T00030PROVIEN^T00030PROVNAME"
"RTN","SDECAR1",167,0)
 ;                                   20           21         22
"RTN","SDECAR1",168,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030DAPTDT^T00250COMM^T00030ENROLLMENT_PRIORITY"
"RTN","SDECAR1",169,0)
 ;                                   23                             24                           25
"RTN","SDECAR1",170,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00010MULTIPLE APPOINTMENT RTC^T00010MULT APPT RTC INTERVAL^T00010MULT APPT NUMBER"
"RTN","SDECAR1",171,0)
 ;                                   26           27            28             29            30
"RTN","SDECAR1",172,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDECAR1",173,0)
 ;                                   31            32             33             34            35            36
"RTN","SDECAR1",174,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030TYPEIEN^T00030TYPENAME^T00100PCONTACT^T00030ARDISPD^T00030ARDISPU^T00030ARDISPUN"
"RTN","SDECAR1",175,0)
 ;                                   37             38             39             40             41
"RTN","SDECAR1",176,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030WLSVCCON^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3^T00030PCITY"
"RTN","SDECAR1",177,0)
 ;                                   42           43             44          45        46         47
"RTN","SDECAR1",178,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00050GAF^T00030DATE^T00030MTRCDATES"
"RTN","SDECAR1",179,0)
 ;                                   48              49         50         51         52         53
"RTN","SDECAR1",180,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00100SENSITIVE^T00030NU49^T00030NU50^T00030NU51^T00030NU52^T00030NU53"
"RTN","SDECAR1",181,0)
 ;                                   54         55         56            57            58             59
"RTN","SDECAR1",182,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030NU54^T00030NU55^T00030LASTSUB^T00030STOPIEN^T00030STOPNAME^T00250APPT_SCHED_DATE"
"RTN","SDECAR1",183,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030MRTCCOUNT^T00030PTPHONE^T00030APPTYPE^T00030EESTAT^T00030PRHBLOC"_$C(30)
"RTN","SDECAR1",184,0)
 Q
"RTN","SDECAR1",185,0)
 ;
"RTN","SDECAR1",186,0)
ONEPAT ; Process one patient
"RTN","SDECAR1",187,0)
 N APPTYPE,ARMRTC,PRHBLOC
"RTN","SDECAR1",188,0)
 K ARASD,ARDATA,ARSDOA,ARDAM,ARCLERK,ARCLERKN
"RTN","SDECAR1",189,0)
 S FRULES=$G(FRULES)
"RTN","SDECAR1",190,0)
 D GETS^DIQ(FNUM,ARIEN,"**","IE","ARDATA","ARMSG")
"RTN","SDECAR1",191,0)
 S ARSTAT=ARDATA(FNUM,ARIEN_",",23,"I")
"RTN","SDECAR1",192,0)
 I FRULES I '+$G(CLOSED) Q:ARSTAT="C"  ; Ignore CLOSED records; CLOSED setup and used from SDEC54 only
"RTN","SDECAR1",193,0)
 S ARORIGDT=ARDATA(FNUM,ARIEN_",",1,"I")
"RTN","SDECAR1",194,0)
 I FRULES I ($P(ARORIGDT,".",1)<SDBEG)!($P(ARORIGDT,".",1)>SDEND) Q
"RTN","SDECAR1",195,0)
 S DFN=ARDATA(FNUM,ARIEN_",",.01,"I")
"RTN","SDECAR1",196,0)
 Q:DFN=""
"RTN","SDECAR1",197,0)
 S SDPS=ARDATA(FNUM,ARIEN_",",.02,"E")
"RTN","SDECAR1",198,0)
 S SDCL=ARDATA(FNUM,ARIEN_",",8,"I")
"RTN","SDECAR1",199,0)
 ;Q:(SDCL'="")&($$GET1^DIQ(44,SDCL_",",2502.3,"I")=1)  ;check HIDE FROM DISPLAY? in file 44
"RTN","SDECAR1",200,0)
 S PRHBLOC=$S($$GET1^DIQ(44,SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDECAR1",201,0)
 ;collect demographics
"RTN","SDECAR1",202,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDECAR1",203,0)
 S NAME=SDDEMO("NAME")
"RTN","SDECAR1",204,0)
 S DOB=SDDEMO("DOB")
"RTN","SDECAR1",205,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDECAR1",206,0)
 S HRN=SDDEMO("HRN")
"RTN","SDECAR1",207,0)
 S SSN=SDDEMO("SSN")
"RTN","SDECAR1",208,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDECAR1",209,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDECAR1",210,0)
 S PRIGRP=SDDEMO("PRIGRP")
"RTN","SDECAR1",211,0)
 S ELIGIEN=SDDEMO("ELIGIEN")
"RTN","SDECAR1",212,0)
 S ELIGNAME=SDDEMO("ELIGNAME")
"RTN","SDECAR1",213,0)
 S SVCCONN=SDDEMO("SVCCONN")
"RTN","SDECAR1",214,0)
 S SVCCONNP=SDDEMO("SVCCONNP")
"RTN","SDECAR1",215,0)
 S TYPEIEN=SDDEMO("TYPEIEN")
"RTN","SDECAR1",216,0)
 S TYPENAME=SDDEMO("TYPENAME")
"RTN","SDECAR1",217,0)
 S PADDRES1=SDDEMO("PADDRES1")
"RTN","SDECAR1",218,0)
 S PADDRES2=SDDEMO("PADDRES2")
"RTN","SDECAR1",219,0)
 S PADDRES3=SDDEMO("PADDRES3")
"RTN","SDECAR1",220,0)
 S PCITY=SDDEMO("PCITY")
"RTN","SDECAR1",221,0)
 S PSTATE=SDDEMO("PSTATE")
"RTN","SDECAR1",222,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")
"RTN","SDECAR1",223,0)
 S PZIP4=SDDEMO("PZIP+4")
"RTN","SDECAR1",224,0)
 ;
"RTN","SDECAR1",225,0)
 S GAF=$$GAF^SDECU2(DFN)
"RTN","SDECAR1",226,0)
 ;
"RTN","SDECAR1",227,0)
 S PTPHONE=SDDEMO("HPHONE")    ;ARDATA(FNUM,ARIEN_",",.05,"I")  ;msc/sat
"RTN","SDECAR1",228,0)
 S ARINST=ARDATA(FNUM,ARIEN_",",2,"I")
"RTN","SDECAR1",229,0)
 S ARINSTNM=ARDATA(FNUM,ARIEN_",",2,"E")
"RTN","SDECAR1",230,0)
 S ARTYPE=ARDATA(FNUM,ARIEN_",",4,"I")
"RTN","SDECAR1",231,0)
 S ARCLIENL=ARDATA(FNUM,ARIEN_",",8,"I")
"RTN","SDECAR1",232,0)
 S ARSTOP=ARDATA(FNUM,ARIEN_",",8.5,"I")
"RTN","SDECAR1",233,0)
 S ARSTOPN=ARDATA(FNUM,ARIEN_",",8.5,"E")
"RTN","SDECAR1",234,0)
 ;S ARCLIEN=$P($G(^SDWL(409.32,+ARCLIENL,0)),U,1)
"RTN","SDECAR1",235,0)
 S ARCLIEN=ARCLIENL
"RTN","SDECAR1",236,0)
 S ARCLNAME=ARDATA(FNUM,ARIEN_",",8,"E")
"RTN","SDECAR1",237,0)
 S APPTYPE=ARDATA(FNUM,ARIEN_",",8.7,"I")
"RTN","SDECAR1",238,0)
 S ARUSER=ARDATA(FNUM,ARIEN_",",9,"I")
"RTN","SDECAR1",239,0)
 S ARUSRNM=ARDATA(FNUM,ARIEN_",",9,"E")
"RTN","SDECAR1",240,0)
 S AREDT=$G(ARDATA(FNUM,ARIEN_",",9.5,"E"))   ;53
"RTN","SDECAR1",241,0)
 S ARPRIO=ARDATA(FNUM,ARIEN_",",10,"I")
"RTN","SDECAR1",242,0)
 S ARENPRI=ARDATA(FNUM,ARIEN_",",10.5,"E")   ;msc/sat
"RTN","SDECAR1",243,0)
 S ARREQBY=ARDATA(FNUM,ARIEN_",",11,"I")
"RTN","SDECAR1",244,0)
 S ARPROV=ARDATA(FNUM,ARIEN_",",12,"I")
"RTN","SDECAR1",245,0)
 S ARPROVNM=ARDATA(FNUM,ARIEN_",",12,"E")
"RTN","SDECAR1",246,0)
 S ARSDOA=ARDATA(FNUM,ARIEN_",",13,"E")      ;scheduled date of appt
"RTN","SDECAR1",247,0)
 S ARDAM=ARDATA(FNUM,ARIEN_",",13.1,"E")     ;date appt. made
"RTN","SDECAR1",248,0)
 S ARCLERK=ARDATA(FNUM,ARIEN_",",13.7,"I")   ;appt clerk ien
"RTN","SDECAR1",249,0)
 S ARCLERKN=ARDATA(FNUM,ARIEN_",",13.7,"E")   ;appt clerk name
"RTN","SDECAR1",250,0)
 S ARASD=""
"RTN","SDECAR1",251,0)
 S:ARSDOA'="" $P(ARASD,"~~",1)=ARSDOA
"RTN","SDECAR1",252,0)
 S:ARCLERK'="" $P(ARASD,"~~",12)=ARCLERK
"RTN","SDECAR1",253,0)
 S:ARCLERKN'="" $P(ARASD,"~~",13)=ARCLERKN
"RTN","SDECAR1",254,0)
 S:ARDAM'="" $P(ARASD,"~~",17)=ARDAM
"RTN","SDECAR1",255,0)
 S ARSVCCON=ARDATA(FNUM,ARIEN_",",15,"E")
"RTN","SDECAR1",256,0)
 S ARDAPTDT=ARDATA(FNUM,ARIEN_",",22,"I")
"RTN","SDECAR1",257,0)
 S ARCOMM=ARDATA(FNUM,ARIEN_",",25,"I")
"RTN","SDECAR1",258,0)
 ;S AREESTAT=ARDATA(FNUM,ARIEN_",",27,"I")
"RTN","SDECAR1",259,0)
 S ARMAR=$$GET1^DIQ(409.85,ARIEN_",",41)
"RTN","SDECAR1",260,0)
 S ARMAI=$$GET1^DIQ(409.85,ARIEN_",",42)
"RTN","SDECAR1",261,0)
 S ARMAN=$$GET1^DIQ(409.85,ARIEN_",",43)
"RTN","SDECAR1",262,0)
 S ARPC=$$WLPC(.ARDATA,ARIEN)
"RTN","SDECAR1",263,0)
 S ARDISPD=ARDATA(FNUM,ARIEN_",",19,"E")
"RTN","SDECAR1",264,0)
 S ARDISPU=ARDATA(FNUM,ARIEN_",",20,"I")
"RTN","SDECAR1",265,0)
 S ARDISPUN=ARDATA(FNUM,ARIEN_",",20,"E")
"RTN","SDECAR1",266,0)
 S ARMRTC=$$MRTC^SDECAR(ARIEN)
"RTN","SDECAR1",267,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)
"RTN","SDECAR1",268,0)
 S (SDI,SDMTRC)="" F  S SDI=$O(ARDATA(409.857,SDI)) Q:SDI=""  S SDMTRC=$S(SDMTRC'="":SDMTRC_"|",1:"")_ARDATA(409.857,SDI,.01,"E")
"RTN","SDECAR1",269,0)
 S COUNT=COUNT+1
"RTN","SDECAR1",270,0)
 ;     1     2      3    4     5     6        7       8          9        10         11
"RTN","SDECAR1",271,0)
 S STR=DFN_U_NAME_U_""_U_DOB_U_SSN_U_GENDER_U_ARIEN_U_ARORIGDT_U_ARINST_U_ARINSTNM_U_ARTYPE
"RTN","SDECAR1",272,0)
 ;           12        13         14       15        16       17        18
"RTN","SDECAR1",273,0)
 S STR=STR_U_ARCLIEN_U_ARCLNAME_U_ARUSER_U_ARUSRNM_U_ARPRIO_U_ARREQBY_U_ARPROV
"RTN","SDECAR1",274,0)
 ;           19         20         21       22        23      24      25
"RTN","SDECAR1",275,0)
 S STR=STR_U_ARPROVNM_U_ARDAPTDT_U_ARCOMM_U_ARENPRI_U_ARMAR_U_ARMAI_U_ARMAN
"RTN","SDECAR1",276,0)
 ;           26       27        28         29        30         31        32         33
"RTN","SDECAR1",277,0)
 S STR=STR_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVCCONN_U_SVCCONNP_U_TYPEIEN_U_TYPENAME_U_ARPC
"RTN","SDECAR1",278,0)
 ;           34        35        36         37         38         39         40         41      42
"RTN","SDECAR1",279,0)
 S STR=STR_U_ARDISPD_U_ARDISPU_U_ARDISPUN_U_ARSVCCON_U_PADDRES1_U_PADDRES2_U_PADDRES3_U_PCITY_U_PSTATE
"RTN","SDECAR1",280,0)
 ;           43         44      45    46      47       48                       57   (save 56 for SDSUB)
"RTN","SDECAR1",281,0)
 S STR=STR_U_PCOUNTRY_U_PZIP4_U_GAF_U_AREDT_U_SDMTRC_U_SDSENS_U_U_U_U_U_U_U_U_U_ARSTOP_U_ARSTOPN_U_ARASD
"RTN","SDECAR1",282,0)
 S STR=STR_U_ARMRTC_U_PTPHONE_U_APPTYPE_U_SDPS_U_PRHBLOC
"RTN","SDECAR1",283,0)
 S @RET@(COUNT)=STR_$C(30)
"RTN","SDECAR1",284,0)
 Q
"RTN","SDECAR1",285,0)
 ;
"RTN","SDECAR1",286,0)
WLPC(ARDATA,ASDIEN) ;
"RTN","SDECAR1",287,0)
 N PC,PC1,PCIEN
"RTN","SDECAR1",288,0)
 S PC=""
"RTN","SDECAR1",289,0)
 S PCIEN="" F  S PCIEN=$O(ARDATA(409.8544,PCIEN)) Q:PCIEN=""  D
"RTN","SDECAR1",290,0)
 .Q:$P(PCIEN,",",2)'=ASDIEN
"RTN","SDECAR1",291,0)
 .S PC1=""
"RTN","SDECAR1",292,0)
 .S $P(PC1,"~~",1)=ARDATA(409.8544,PCIEN,.01,"E")    ;DATE ENTERED
"RTN","SDECAR1",293,0)
 .S $P(PC1,"~~",2)=ARDATA(409.8544,PCIEN,2,"I")      ;PC ENTERED BY USER IEN
"RTN","SDECAR1",294,0)
 .S $P(PC1,"~~",3)=ARDATA(409.8544,PCIEN,2,"E")      ;PC ENTERED BY USER NAME
"RTN","SDECAR1",295,0)
 .S $P(PC1,"~~",4)=ARDATA(409.8544,PCIEN,3,"E")      ;ACTION
"RTN","SDECAR1",296,0)
 .S $P(PC1,"~~",5)=ARDATA(409.8544,PCIEN,4,"E")      ;PATIENT PHONE
"RTN","SDECAR1",297,0)
 .S PC=$S(PC'="":PC_"::",1:"")_PC1
"RTN","SDECAR1",298,0)
 Q PC
"RTN","SDECAR2")
0^142^B118404786^n/a
"RTN","SDECAR2",1,0)
SDECAR2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECAR2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECAR2",3,0)
 ;
"RTN","SDECAR2",4,0)
 Q
"RTN","SDECAR2",5,0)
 ;
"RTN","SDECAR2",6,0)
ARSET(RET,INP) ;Appointment Request Set
"RTN","SDECAR2",7,0)
 ;ARSET(RET,INP...)  external parameter tag in SDEC
"RTN","SDECAR2",8,0)
 ;  INP(1)  = (integer)  Wait List IEN point to
"RTN","SDECAR2",9,0)
 ;                       SDEC APPT REQUEST file 409.85.
"RTN","SDECAR2",10,0)
 ;                       If null, a new entry will be added
"RTN","SDECAR2",11,0)
 ;  INP(2)  = (text)     DFN Pointer to the PATIENT file 2
"RTN","SDECAR2",12,0)
 ;  INP(3)  = (date)     Originating Date/time in external date form
"RTN","SDECAR2",13,0)
 ;  INP(4)  = (text)     Institution name NAME field from the INSTITUTION file
"RTN","SDECAR2",14,0)
 ;  INP(5)  = (text)     Request Type
"RTN","SDECAR2",15,0)
 ;  INP(6)  = (text)     REQ Specific Clinic name - NAME field in file 44
"RTN","SDECAR2",16,0)
 ;  INP(7)  = (text)     Originating User name  - NAME field in NEW PERSON file 200
"RTN","SDECAR2",17,0)
 ;  INP(8)  = (text)     Priority - 'ASAP' or 'FUTURE'
"RTN","SDECAR2",18,0)
 ;  INP(9)  = (text)     Request By - 'PROVIDER' or 'PATIENT'
"RTN","SDECAR2",19,0)
 ;  INP(10) = (text)     Provider name  - NAME field in NEW PERSON file 200
"RTN","SDECAR2",20,0)
 ;  INP(11) = (date)     Desired Date of appointment in external format.
"RTN","SDECAR2",21,0)
 ;  INP(12) = (text)     comment must be 1-60 characters
"RTN","SDECAR2",22,0)
 ;  INP(13) = (text)     ENROLLMENT PRIORITY - Valid Values are:
"RTN","SDECAR2",23,0)
 ;                                             GROUP 1
"RTN","SDECAR2",24,0)
 ;                                             GROUP 2
"RTN","SDECAR2",25,0)
 ;                                             GROUP 3
"RTN","SDECAR2",26,0)
 ;                                             GROUP 4
"RTN","SDECAR2",27,0)
 ;                                             GROUP 5
"RTN","SDECAR2",28,0)
 ;                                             GROUP 6
"RTN","SDECAR2",29,0)
 ;                                             GROUP 7
"RTN","SDECAR2",30,0)
 ;                                             GROUP 8
"RTN","SDECAR2",31,0)
 ;  INP(14) = (text)     MULTIPLE APPOINTMENT RTC      NO; YES
"RTN","SDECAR2",32,0)
 ;  INP(15) = (integer)  MULT APPT RTC INTERVAL integer between 1-365
"RTN","SDECAR2",33,0)
 ;  INP(16) = (integer)  MULT APPT NUMBER integer between 1-100
"RTN","SDECAR2",34,0)
 ;  INP(17) = Patient Contacts separated by ::
"RTN","SDECAR2",35,0)
 ;            Each :: piece has the following ~~ pieces:
"RTN","SDECAR2",36,0)
 ;            1) = (date)    DATE ENTERED external date/time
"RTN","SDECAR2",37,0)
 ;            2) = (text)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECAR2",38,0)
 ;            4) = (optional) ACTION - valid values are:
"RTN","SDECAR2",39,0)
 ;                             CALLED
"RTN","SDECAR2",40,0)
 ;                             MESSAGE LEFT
"RTN","SDECAR2",41,0)
 ;                             LETTER
"RTN","SDECAR2",42,0)
 ;            5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECAR2",43,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECAR2",44,0)
 ;  INP(18) = (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDECAR2",45,0)
 ;  INP(19) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"RTN","SDECAR2",46,0)
 ;  INP(20) = (optional) MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR2",47,0)
 ;                       Each date can be in external format with no time.
"RTN","SDECAR2",48,0)
 ;  INP(21) = (optional) CLINIC STOP pointer to CLINIC STOP file 40.7
"RTN","SDECAR2",49,0)
 ;                       used to populate the REQ SERVICE/SPECIALTY field in 409.85
"RTN","SDECAR2",50,0)
 ;  INP(22) = (optional) Appointment Type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECAR2",51,0)
 ;  INP(23) = (optional) Patient Status
"RTN","SDECAR2",52,0)
 ;                          N = NEW
"RTN","SDECAR2",53,0)
 ;                          E = ESTABLISHED
"RTN","SDECAR2",54,0)
 ;
"RTN","SDECAR2",55,0)
 N X,Y,%DT
"RTN","SDECAR2",56,0)
 N DFN,MI,ARAPTYP,ARIEN,ARORIGDT,ARORIGDTI,ARINST,ARINSTI,ARTYPE,ARTEAM,ARPOS,ARSRVSP,ARCLIN
"RTN","SDECAR2",57,0)
 N ARUSER,ARPRIO,ARREQBY,ARPROV,ARDAPTDT,ARCOMM,AREESTAT,AREDT,ARQUIT
"RTN","SDECAR2",58,0)
 N FNUM,FDA,ARNEW,ARRET,ARMSG,ARDATA,ARERR,ARHOSN
"RTN","SDECAR2",59,0)
 N ARMAI,ARMAN,ARMAR,ARPATTEL,ARENPRI,ARSTOP,ARSVCCON,ARSVCCOP
"RTN","SDECAR2",60,0)
 S ARQUIT=0
"RTN","SDECAR2",61,0)
 S FNUM=$$FNUM^SDECAR
"RTN","SDECAR2",62,0)
 S RET="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDECAR2",63,0)
 ; Use MERGE instead of SET so we can know if values were actually specified or not.
"RTN","SDECAR2",64,0)
 ; This way, if a value is null, we will delete any previous value,
"RTN","SDECAR2",65,0)
 ; but if it is missing, then we will just ignore it.
"RTN","SDECAR2",66,0)
 M ARIEN=INP(1)
"RTN","SDECAR2",67,0)
 S DFN=$G(INP(2))
"RTN","SDECAR2",68,0)
 I '+DFN S RET=RET_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDECAR2",69,0)
 I '$D(^DPT(DFN,0)) S RET=RET_"-1^Invalid Patient ID"_$C(30,31) Q
"RTN","SDECAR2",70,0)
 S AREDT=$P($G(INP(3)),":",1,2)
"RTN","SDECAR2",71,0)
 S %DT="TX" S X=AREDT D ^%DT S AREDT=Y
"RTN","SDECAR2",72,0)
 I Y=-1 S RET=RET_"-1^Invalid Origination date."_$C(30,31) Q
"RTN","SDECAR2",73,0)
 S ARORIGDT=$P(AREDT,".",1)
"RTN","SDECAR2",74,0)
 S ARINST=$G(INP(4)) I ARINST'="" D
"RTN","SDECAR2",75,0)
 .I '+ARINST S ARINST=$O(^DIC(4,"B",ARINST,0))
"RTN","SDECAR2",76,0)
 M ARTYPE=INP(5)
"RTN","SDECAR2",77,0)
 S ARCLIN=$G(INP(6))
"RTN","SDECAR2",78,0)
 I ARCLIN'="" D
"RTN","SDECAR2",79,0)
 .I +ARCLIN D
"RTN","SDECAR2",80,0)
 ..I '$D(^SC(+ARCLIN,0)) S RET=RET_"-1^"_ARCLIN_" is an invalid Clinic ID."_$C(30,31) S ARQUIT=1 Q
"RTN","SDECAR2",81,0)
 ..;S ARCLIN=$$GET1^DIQ(44,ARCLIN_",",.01)
"RTN","SDECAR2",82,0)
 .I '+ARCLIN D
"RTN","SDECAR2",83,0)
 ..S ARCLIN=$O(^SC("B",ARCLIN,0))
"RTN","SDECAR2",84,0)
 ..I ARCLIN="" S RET=RET_"-1^"_ARCLIN_" is an invalid Clinic Name."_$C(30,31) S ARQUIT=1 Q
"RTN","SDECAR2",85,0)
 S ARUSER=$G(INP(7))
"RTN","SDECAR2",86,0)
 I ARUSER'="" I '+ARUSER S ARUSER=$O(^VA(200,"B",ARUSER,0))
"RTN","SDECAR2",87,0)
 I ARUSER="" S ARUSER=DUZ
"RTN","SDECAR2",88,0)
 S ARREQBY=$G(INP(9)) I ARREQBY'="" D
"RTN","SDECAR2",89,0)
 .S ARREQBY=$S(ARREQBY="PATIENT":2,ARREQBY="PROVIDER":1,1:"")
"RTN","SDECAR2",90,0)
 S ARPROV=$G(INP(10)) I ARPROV'="" I '+ARPROV S ARPROV=$O(^VA(200,"B",ARPROV,0))
"RTN","SDECAR2",91,0)
 S ARDAPTDT=INP(11)
"RTN","SDECAR2",92,0)
 S %DT="" S X=$P($G(ARDAPTDT),"@",1) D ^%DT S ARPRIO=$S(Y=$P($$NOW^XLFDT,".",1):"A",1:"F")
"RTN","SDECAR2",93,0)
 S ARDAPTDT=Y
"RTN","SDECAR2",94,0)
 I Y=-1 S ARDAPTDT=""   ;S RET=RET_"-1^Invalid Desired Date."_$C(30,31) Q
"RTN","SDECAR2",95,0)
 M ARCOMM=INP(12)
"RTN","SDECAR2",96,0)
 S ARENPRI=$G(INP(13)) D
"RTN","SDECAR2",97,0)
 .S:ARENPRI'="" ARENPRI=$S(ARENPRI="GROUP 1":1,ARENPRI="GROUP 2":2,ARENPRI="GROUP 3":3,ARENPRI="GROUP 4":4,ARENPRI="GROUP 5":5,ARENPRI="GROUP 6":6,ARENPRI="GROUP 7":7,ARENPRI="GROUP 8":8,1:ARENPRI)
"RTN","SDECAR2",98,0)
 S ARMAR=$G(INP(14)) I ARMAR'="" S ARMAR=$S(ARMAR="YES":1,1:0)
"RTN","SDECAR2",99,0)
 M ARMAI=INP(15)
"RTN","SDECAR2",100,0)
 M ARMAN=INP(16)
"RTN","SDECAR2",101,0)
 S ARSVCCON=$G(INP(18)) S:ARSVCCON'="" ARSVCCON=$S(ARSVCCON="YES":1,1:0)
"RTN","SDECAR2",102,0)
 M ARSVCCOP=INP(19) I $G(ARSVCCOP)'="" S ARSVCCOP=+$G(ARSVCCOP) S:(+ARSVCCOP<0)!(+ARSVCCOP>100) ARSVCCOP=""
"RTN","SDECAR2",103,0)
 S ARSTOP=$G(INP(21))
"RTN","SDECAR2",104,0)
 S ARAPTYP=+$G(INP(22)) I +ARAPTYP,'$D(^SD(409.1,ARAPTYP,0)) S ARAPTYP=""
"RTN","SDECAR2",105,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR2",106,0)
 S ARNEW=ARIEN=""
"RTN","SDECAR2",107,0)
 I ARNEW D
"RTN","SDECAR2",108,0)
 . S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","SDECAR2",109,0)
 . S @FDA@(.01)=+DFN   ;$S(+DFN:$P($G(^DPT(DFN,0)),U),1:DFN)
"RTN","SDECAR2",110,0)
 . ;This handles the date/time coming in as "8/27/2014 12:00:00 AM"
"RTN","SDECAR2",111,0)
 . S:$G(ARORIGDT)'="" @FDA@(1)=ARORIGDT
"RTN","SDECAR2",112,0)
 . S:$G(ARINST)'="" @FDA@(2)=+ARINST
"RTN","SDECAR2",113,0)
 . S:$G(ARTYPE)'="" @FDA@(4)=$S(ARTYPE="APPOINTMENT":"APPT",ARTYPE="MOBILE":"MOBILE",1:ARTYPE)
"RTN","SDECAR2",114,0)
 . S:$G(ARCLIN)'="" @FDA@(8)=+ARCLIN
"RTN","SDECAR2",115,0)
 . S:$G(ARSTOP)'="" @FDA@(8.5)=+ARSTOP
"RTN","SDECAR2",116,0)
 . S:+ARAPTYP @FDA@(8.7)=+ARAPTYP
"RTN","SDECAR2",117,0)
 . S:$G(ARUSER)'="" @FDA@(9)=+ARUSER
"RTN","SDECAR2",118,0)
 . S:$G(AREDT)'="" @FDA@(9.5)=AREDT
"RTN","SDECAR2",119,0)
 . S:$G(ARPRIO)'="" @FDA@(10)=ARPRIO
"RTN","SDECAR2",120,0)
 . S:$G(ARENPRI)'="" @FDA@(10.5)=ARENPRI
"RTN","SDECAR2",121,0)
 . S:$G(ARREQBY)'="" @FDA@(11)=ARREQBY
"RTN","SDECAR2",122,0)
 . S:$G(ARPROV)'="" @FDA@(12)=+ARPROV
"RTN","SDECAR2",123,0)
 . S:$G(ARSVCCOP)'="" @FDA@(14)=ARSVCCOP
"RTN","SDECAR2",124,0)
 . S:$G(ARSVCCON)'="" @FDA@(15)=+ARSVCCON
"RTN","SDECAR2",125,0)
 . S:$G(ARDAPTDT)'="" @FDA@(22)=ARDAPTDT
"RTN","SDECAR2",126,0)
 . S @FDA@(23)="O"
"RTN","SDECAR2",127,0)
 . S:$G(ARCOMM)'="" @FDA@(25)=ARCOMM
"RTN","SDECAR2",128,0)
 . S:$G(ARMAR)'="" @FDA@(41)=ARMAR
"RTN","SDECAR2",129,0)
 . I +ARMAR,$G(ARMAI)'="" S @FDA@(42)=ARMAI
"RTN","SDECAR2",130,0)
 . I +ARMAR,$G(ARMAN)'="" S @FDA@(43)=ARMAN
"RTN","SDECAR2",131,0)
 . S:$G(INP(23))'="" @FDA@(.02)=$S(INP(23)="N":"N",INP(23)="NEW":"N",INP(23)="E":"E",INP(23)="ESTABLISHED":"E",1:"")
"RTN","SDECAR2",132,0)
 E  D
"RTN","SDECAR2",133,0)
 . S ARIEN=ARIEN_"," ; Append the comma for both
"RTN","SDECAR2",134,0)
 . K ARDATA,ARERR
"RTN","SDECAR2",135,0)
 . D GETS^DIQ(FNUM,ARIEN,"*","IE","ARDATA","ARERR")
"RTN","SDECAR2",136,0)
 . I $D(ARERR) M ARMSG=ARERR K FDA Q
"RTN","SDECAR2",137,0)
 . S FDA=$NA(FDA(FNUM,ARIEN))
"RTN","SDECAR2",138,0)
 . I $D(ARORIGDT) D
"RTN","SDECAR2",139,0)
 . . S ARORIGDT=$P(ARORIGDT,"@",1) S %DT="" S X=ARORIGDT D ^%DT S ARORIGDTI=Y
"RTN","SDECAR2",140,0)
 . . I ARORIGDTI'=ARDATA(FNUM,ARIEN,1,"I") S @FDA@(1)=$S(ARORIGDT="":"@",1:ARORIGDT)
"RTN","SDECAR2",141,0)
 . I $D(ARINST),ARINST'=ARDATA(FNUM,ARIEN,2,"I") S @FDA@(2)=+ARINST
"RTN","SDECAR2",142,0)
 . I $D(ARTYPE),ARTYPE'=ARDATA(FNUM,ARIEN,4,"E") S @FDA@(4)=$S(ARTYPE="APPOINTMENT":"APPT",ARTYPE="MOBILE":"MOBILE",1:ARTYPE)
"RTN","SDECAR2",143,0)
 . I $D(ARCLIN),ARCLIN'=ARDATA(FNUM,ARIEN,8,"I") S @FDA@(8)=+ARCLIN
"RTN","SDECAR2",144,0)
 . I $D(ARSTOP),ARSTOP'=ARDATA(FNUM,ARIEN,8.5,"I") S @FDA@(8.5)=+ARSTOP
"RTN","SDECAR2",145,0)
 . S:+ARAPTYP @FDA@(8.7)=+ARAPTYP
"RTN","SDECAR2",146,0)
 . I $D(ARUSER),ARUSER'=ARDATA(FNUM,ARIEN,9,"I") S @FDA@(9)=+ARUSER
"RTN","SDECAR2",147,0)
 . I $D(AREDT),AREDT'=$G(ARDATA(FNUM,ARIEN,9.5,"I")) S @FDA@(9.5)=AREDT
"RTN","SDECAR2",148,0)
 . I $D(ARPRIO),ARPRIO'=ARDATA(FNUM,ARIEN,10,"I") S @FDA@(10)=$S(ARPRIO="":"@",1:ARPRIO)
"RTN","SDECAR2",149,0)
 . I $D(ARENPRI),ARENPRI'=ARDATA(FNUM,ARIEN,10.5,"E") S @FDA@(10.5)=ARENPRI
"RTN","SDECAR2",150,0)
 . I $D(ARREQBY),ARREQBY'=ARDATA(FNUM,ARIEN,11,"I") S @FDA@(11)=$S(ARREQBY="":"@",1:ARREQBY)
"RTN","SDECAR2",151,0)
 . I $D(ARPROV),ARPROV'=ARDATA(FNUM,ARIEN,12,"I") S @FDA@(12)=+ARPROV
"RTN","SDECAR2",152,0)
 . I $D(ARSVCCOP),ARSVCCOP'=$G(ARDATA(FNUM,ARIEN,14,"I")) S @FDA@(14)=ARSVCCOP
"RTN","SDECAR2",153,0)
 . I $D(ARSVCCON),ARSVCCON'=ARDATA(FNUM,ARIEN,15,"E") S @FDA@(15)=+ARSVCCON
"RTN","SDECAR2",154,0)
 . I $D(ARDAPTDT),ARDAPTDT'=ARDATA(FNUM,ARIEN,22,"I") S @FDA@(22)=$S(ARDAPTDT="":"@",1:ARDAPTDT)
"RTN","SDECAR2",155,0)
 . I $D(ARCOMM),ARCOMM'=ARDATA(FNUM,ARIEN,25,"I") S @FDA@(25)=$S(ARCOMM="":"@",1:ARCOMM)
"RTN","SDECAR2",156,0)
 . S:$G(ARMAR)'="" @FDA@(41)=ARMAR
"RTN","SDECAR2",157,0)
 . S:$G(ARMAI)'="" @FDA@(42)=ARMAI
"RTN","SDECAR2",158,0)
 . S:$G(ARMAN)'="" @FDA@(43)=ARMAN
"RTN","SDECAR2",159,0)
 . S:$G(INP(23))'="" @FDA@(.02)=$S(INP(23)="N":"N",INP(23)="NEW":"N",INP(23)="E":"E",INP(23)="ESTABLISHED":"E",1:"")
"RTN","SDECAR2",160,0)
 ; Only call UPDATE^DIE if there are any array entries in FDA
"RTN","SDECAR2",161,0)
 D:$D(@FDA) UPDATE^DIE("","FDA","ARRET","ARMSG")
"RTN","SDECAR2",162,0)
 I $D(ARMSG) D
"RTN","SDECAR2",163,0)
 . F MI=1:1:$G(ARMSG("DIERR")) S RET=RET_"-1^"_$G(ARMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECAR2",164,0)
 . S RET=RET_$C(31)
"RTN","SDECAR2",165,0)
 Q:$D(ARMSG)
"RTN","SDECAR2",166,0)
 S ARINSTI=$P($G(^SDEC(409.85,$S(+ARIEN:ARIEN,1:ARRET(1)),0)),U,3)
"RTN","SDECAR2",167,0)
 I $G(INP(17))'="" D AR23(INP(17),$S(+ARIEN:ARIEN,1:ARRET(1)))   ;patient contacts
"RTN","SDECAR2",168,0)
 I +ARMAR,$G(INP(20))'="" D AR435(INP(20),$S(+ARIEN:ARIEN,1:ARRET(1)))  ;MRTC CALC PREF DATES
"RTN","SDECAR2",169,0)
 I +$G(ARRET(1)) S RET=RET_ARRET(1)_U_$C(30,31)
"RTN","SDECAR2",170,0)
 E  S RET=RET_+ARIEN_U_$C(30,31)
"RTN","SDECAR2",171,0)
 Q
"RTN","SDECAR2",172,0)
 ;
"RTN","SDECAR2",173,0)
AR433(ARIEN,SDEC) ;set MULT APPTS MADE
"RTN","SDECAR2",174,0)
 ;INPUT:
"RTN","SDECAR2",175,0)
 ;  ARIEN  = (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",176,0)
 ;  SDEC   = (required) pointers to SDEC APPOINTMENT file 409.84 separated by pipe
"RTN","SDECAR2",177,0)
 N SDAPP,SDFDA,SDI
"RTN","SDECAR2",178,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR2",179,0)
 Q:'$D(^SDEC(409.85,ARIEN,0))
"RTN","SDECAR2",180,0)
 S SDEC=$G(SDEC)
"RTN","SDECAR2",181,0)
 F SDI=1:1:$L(SDEC,"|") D
"RTN","SDECAR2",182,0)
 .K SDFDA
"RTN","SDECAR2",183,0)
 .S SDAPP=$P(SDEC,"|",SDI)
"RTN","SDECAR2",184,0)
 .Q:'$D(^SDEC(409.84,SDAPP,0))
"RTN","SDECAR2",185,0)
 .Q:$O(^SDEC(409.85,ARIEN,2,"B",SDAPP,0))
"RTN","SDECAR2",186,0)
 .S SDFDA(409.852,"+1,"_ARIEN_",",.01)=SDAPP
"RTN","SDECAR2",187,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",188,0)
 Q
"RTN","SDECAR2",189,0)
AR433D(SDEC) ;delete MULT APPTS MADE
"RTN","SDECAR2",190,0)
 ;INPUT:
"RTN","SDECAR2",191,0)
 ;  SDEC   = (required) pointers to SDEC APPOINTMENT file 409.84 separated by pipe
"RTN","SDECAR2",192,0)
 N ARIEN,DFN,SDAPP,SDFDA,SDI,SDJ
"RTN","SDECAR2",193,0)
 S SDEC=$G(SDEC)
"RTN","SDECAR2",194,0)
 F SDI=1:1:$L(SDEC,"|") D
"RTN","SDECAR2",195,0)
 .S SDAPP=$P(SDEC,"|",SDI)
"RTN","SDECAR2",196,0)
 .Q:'$D(^SDEC(409.84,SDAPP,0))
"RTN","SDECAR2",197,0)
 .S DFN=$$GET1^DIQ(409.84,SDAPP_",",.05,"I")
"RTN","SDECAR2",198,0)
 .S ARIEN="" F  S ARIEN=$O(^SDEC(409.85,"B",DFN,ARIEN)) Q:ARIEN=""  D
"RTN","SDECAR2",199,0)
 ..S SDJ="" F  S SDJ=$O(^SDEC(409.85,ARIEN,2,"B",SDAPP,SDJ)) Q:SDJ=""  D
"RTN","SDECAR2",200,0)
 ...S SDFDA(409.852,SDJ_","_ARIEN_",",.01)="@"
"RTN","SDECAR2",201,0)
 ...D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",202,0)
 Q
"RTN","SDECAR2",203,0)
 ;
"RTN","SDECAR2",204,0)
AR435(SDDT,ARIEN) ;set dates into MRTC CALC PREF DATES multiple field 43.5
"RTN","SDECAR2",205,0)
 ;INPUT:
"RTN","SDECAR2",206,0)
 ; ARIEN - Requested date ID pointer to SDEC REQUESTED APPT file 409.85
"RTN","SDECAR2",207,0)
 ; SDDT  - MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR2",208,0)
 ;         Each date can be in external format with no time.
"RTN","SDECAR2",209,0)
 N SDI,SDJ,SDFDA,X,Y,%DT
"RTN","SDECAR2",210,0)
 F SDI=1:1:$L(SDDT,"|") D
"RTN","SDECAR2",211,0)
 .S %DT="" S X=$P($P(SDDT,"|",SDI),"@",1) D ^%DT S SDJ=Y
"RTN","SDECAR2",212,0)
 .Q:SDJ=-1
"RTN","SDECAR2",213,0)
 .Q:$O(^SDEC(409.85,ARIEN,5,"B",SDJ,0))   ;don't add duplicates
"RTN","SDECAR2",214,0)
 .S SDFDA(409.851,"+1,"_ARIEN_",",.01)=SDJ
"RTN","SDECAR2",215,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",216,0)
 Q
"RTN","SDECAR2",217,0)
 ;
"RTN","SDECAR2",218,0)
WLACT(NAME) ;
"RTN","SDECAR2",219,0)
 N ACTIVE,H
"RTN","SDECAR2",220,0)
 S ACTIVE=""
"RTN","SDECAR2",221,0)
 S H="" F  S H=$O(^DIC(40.7,"B",NAME,H)) Q:H=""  D  Q:ACTIVE'=""
"RTN","SDECAR2",222,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECAR2",223,0)
 .S ACTIVE=H
"RTN","SDECAR2",224,0)
 Q ACTIVE
"RTN","SDECAR2",225,0)
 ;
"RTN","SDECAR2",226,0)
AR23(INP17,ARI) ;Patient Contacts
"RTN","SDECAR2",227,0)
 N STR17,ARASD,ARASDH,ARDATA1,ARERR1,ARI1,ARIENS,ARIENS1,ARRET1,FDA
"RTN","SDECAR2",228,0)
 N ARDT,ARUSR,X,Y,%DT
"RTN","SDECAR2",229,0)
 S ARIENS=ARI_","
"RTN","SDECAR2",230,0)
 F ARI1=1:1:$L(INP17,"::") D
"RTN","SDECAR2",231,0)
 .S STR17=$P(INP17,"::",ARI1)
"RTN","SDECAR2",232,0)
 .K FDA
"RTN","SDECAR2",233,0)
 .S %DT="T" S X=$P($P(STR17,"~~",1),":",1,2) D ^%DT S ARASD=Y
"RTN","SDECAR2",234,0)
 .I (ARASD=-1)!(ARASD="") Q
"RTN","SDECAR2",235,0)
 .S ARDT=$P($P(STR17,"~~",1),":",1,2)
"RTN","SDECAR2",236,0)
 .S ARASDH=""  ;$O(^SDEC(409.85,ARI,4,"B",ARASD,0))
"RTN","SDECAR2",237,0)
 .S ARIENS1=$S(ARASDH'="":ARASDH,1:"+1")_","_ARIENS
"RTN","SDECAR2",238,0)
 .S FDA=$NA(FDA(409.8544,ARIENS1))
"RTN","SDECAR2",239,0)
 .I ARASDH'="" D
"RTN","SDECAR2",240,0)
 ..D GETS^DIQ(409.8544,ARIENS1,"*","IE","ARDATA1","ARERR1")
"RTN","SDECAR2",241,0)
 ..I $P(STR17,"~~",1)'="" S @FDA@(.01)=ARDT ;DATE ENTERED external date/time
"RTN","SDECAR2",242,0)
 ..I $P(STR17,"~~",2)'="" S ARUSR=$P(STR17,"~~",2) S @FDA@(2)=$S(ARUSR="":"@",+ARUSR:$P($G(^VA(200,ARUSR,0)),U,1),1:ARUSER)  ;PC ENTERED BY USER
"RTN","SDECAR2",243,0)
 ..I $P(STR17,"~~",4)'="" S @FDA@(3)=$P(STR17,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECAR2",244,0)
 ..I $P(STR17,"~~",5)'="" S @FDA@(4)=$P(STR17,"~~",5)     ;PATIENT PHONE
"RTN","SDECAR2",245,0)
 ..;I $P(STR17,"~~",6)'="" S @FDA@(5)=$E($P(STR17,"~~",6),1,160)     ;COMMENT
"RTN","SDECAR2",246,0)
 .I ARASDH="" D
"RTN","SDECAR2",247,0)
 ..I $P(STR17,"~~",1)'="" S @FDA@(.01)=ARDT ;DATE ENTERED external date/time
"RTN","SDECAR2",248,0)
 ..I $P(STR17,"~~",2)'="" S ARUSR=$P(STR17,"~~",2) S @FDA@(2)=$S(ARUSR="":"@",+ARUSR:$P($G(^VA(200,ARUSR,0)),U,1),1:ARUSR)     ;PC ENTERED BY USER
"RTN","SDECAR2",249,0)
 ..I $P(STR17,"~~",4)'="" S @FDA@(3)=$P(STR17,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECAR2",250,0)
 ..I $P(STR17,"~~",5)'="" S @FDA@(4)=$P(STR17,"~~",5)     ;PATIENT PHONE
"RTN","SDECAR2",251,0)
 ..;I $P(STR17,"~~",6)'="" S @FDA@(5)=$E($P(STR17,"~~",6),1,160)     ;COMMENT
"RTN","SDECAR2",252,0)
 .D:$D(@FDA) UPDATE^DIE("E","FDA","ARRET1","ARMSG1")
"RTN","SDECAR2",253,0)
 Q
"RTN","SDECAR2",254,0)
UPDATE(ARIEN,APPDT,SDCL,SVCP,SVCPR,NOTE,SDAPPTYP) ;update REQ APPT REQUEST at appointment add
"RTN","SDECAR2",255,0)
 ;INPUT:
"RTN","SDECAR2",256,0)
 ;  ARIEN = Appt Request pointer to SD WAIT LIST file 409.85
"RTN","SDECAR2",257,0)
 ;  APPDT = Appointment date/time (Scheduled Date of appt) in fm format
"RTN","SDECAR2",258,0)
 ;  SDCL  = Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDECAR2",259,0)
 ;  SVCP  = Service Connected Percentage numeric 0-100
"RTN","SDECAR2",260,0)
 ;  SVCPR = Service Connected Priority  0:NO  1:YES
"RTN","SDECAR2",261,0)
 ;  NOTE  = Comment only 1st 60 characters are used
"RTN","SDECAR2",262,0)
 ;  SDAPPTYP = (optional) Appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECAR2",263,0)
 ;
"RTN","SDECAR2",264,0)
 ;all input must be verified by calling routine
"RTN","SDECAR2",265,0)
 N SDDIV,SDFDA,SDSN,SDMSG
"RTN","SDECAR2",266,0)
 S:+$G(SDAPPTYP) SDFDA(409.85,ARIEN_",",8.7)=SDAPPTYP
"RTN","SDECAR2",267,0)
 S SDFDA(409.85,ARIEN_",",13)=APPDT                     ;SCHEDULED DATE OF APPT       = APPDT  (SDECSTART)
"RTN","SDECAR2",268,0)
 S SDFDA(409.85,ARIEN_",",13.1)=$P($$NOW^XLFDT,".",1)   ;DATE APPT. MADE              = TODAY
"RTN","SDECAR2",269,0)
 S SDFDA(409.85,ARIEN_",",13.2)=SDCL                    ;APPT CLINIC                  = SDCL   (SDECSCD)
"RTN","SDECAR2",270,0)
 S SDFDA(409.85,ARIEN_",",13.3)=$P($G(^SC(SDCL,0)),U,4) ;APPT INSTITUTION             = Get from 44 using SDCL
"RTN","SDECAR2",271,0)
 S SDFDA(409.85,ARIEN_",",13.4)=$P($G(^SC(SDCL,0)),U,7) ;APPT STOP CODE               = Get from 44 using SDCL
"RTN","SDECAR2",272,0)
 S SDDIV=$P($G(^SC(SDCL,0)),U,15)
"RTN","SDECAR2",273,0)
 S SDSN=$S(SDDIV'="":$P($G(^DG(40.8,SDDIV,0)),U,2),1:"")
"RTN","SDECAR2",274,0)
 S SDFDA(409.85,ARIEN_",",13.6)=SDSN                    ;APPT STATION NUMBER
"RTN","SDECAR2",275,0)
 S SDFDA(409.85,ARIEN_",",13.7)=DUZ                     ;APPT CLERK                   = Current User
"RTN","SDECAR2",276,0)
 S SDFDA(409.85,ARIEN_",",13.8)="R"                     ;APPT STATUS                  = R:Scheduled/Kept
"RTN","SDECAR2",277,0)
 S:SVCP'="" SDFDA(409.85,ARIEN_",",14)=SVCP                      ;SERVICE CONNECTED PERCENTAGE = SVCP   (SDSVCP)
"RTN","SDECAR2",278,0)
 S:SVCPR'="" SDFDA(409.85,ARIEN_",",15)=SVCPR                     ;SERVICE CONNECTED PRIORITY   = SVCPR  (SDSVCPR)
"RTN","SDECAR2",279,0)
 S:$G(NOTE)'="" SDFDA(409.85,ARIEN_",",25)=NOTE
"RTN","SDECAR2",280,0)
 D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDECAR2",281,0)
 Q
"RTN","SDECDEV")
0^154^B4544261^n/a
"RTN","SDECDEV",1,0)
SDECDEV ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECDEV",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECDEV",3,0)
 ;
"RTN","SDECDEV",4,0)
 Q
"RTN","SDECDEV",5,0)
 ;
"RTN","SDECDEV",6,0)
DEVICE(SDECY) ;EP List of printers
"RTN","SDECDEV",7,0)
 ; OUTPUT:
"RTN","SDECDEV",8,0)
 ;       SDECY(n)=REPORT TEXT
"RTN","SDECDEV",9,0)
 ;
"RTN","SDECDEV",10,0)
 N SDECI,FROM,DIR,ARR
"RTN","SDECDEV",11,0)
 S SDECI=0
"RTN","SDECDEV",12,0)
 S SDECY=$NA(^TMP("SDECDEV",$J,"DEVICE")) K @SDECY
"RTN","SDECDEV",13,0)
 S @SDECY@(SDECI)="I00030PRINTER_IEN^T00040PRINTER_NAME"_$C(30)
"RTN","SDECDEV",14,0)
 N CNT,IEN,X,Y,X0,XLOC,XSEC,XTYPE,XSTYPE,XTIME,XOSD,MW,PL,DEV
"RTN","SDECDEV",15,0)
 S FROM="",DIR=1
"RTN","SDECDEV",16,0)
 F  S FROM=$O(^%ZIS(1,"B",FROM),DIR),IEN=0 Q:FROM=""  D
"RTN","SDECDEV",17,0)
 .F  S IEN=$O(^%ZIS(1,"B",FROM,IEN)) Q:'IEN  D
"RTN","SDECDEV",18,0)
 ..Q:$D(ARR(IEN))
"RTN","SDECDEV",19,0)
 ..S ARR(IEN)=""
"RTN","SDECDEV",20,0)
 ..S DEV="",X0=$G(^%ZIS(1,IEN,0)),XLOC=$P($G(^(1)),U),XOSD=+$G(^(90)),MW=$G(^(91)),XSEC=$G(^(95)),XSTYPE=+$G(^("SUBTYPE")),XTIME=$P($G(^("TIME")),U),XTYPE=$P($G(^("TYPE")),U)
"RTN","SDECDEV",21,0)
 ..Q:$E($G(^%ZIS(2,XSTYPE,0)))'="P"                ; Printers only
"RTN","SDECDEV",22,0)
 ..Q:"^TRM^HG^CHAN^OTH^"'[(U_XTYPE_U)
"RTN","SDECDEV",23,0)
 ..Q:$P(X0,U,2)="0"!($P(X0,U,12)=2)                ; Queuing allowed
"RTN","SDECDEV",24,0)
 ..I XOSD,XOSD'>DT Q                               ; Out of Service
"RTN","SDECDEV",25,0)
 ..I $L(XTIME) D  Q:'$L(XTIME)                     ; Prohibited Times
"RTN","SDECDEV",26,0)
 ...S Y=$P($H,",",2),Y=Y\60#60+(Y\3600*100),X=$P(XTIME,"-",2)
"RTN","SDECDEV",27,0)
 ...S:X'<XTIME&(Y'>X&(Y'<XTIME))!(X<XTIME&(Y'<XTIME!(Y'>X))) XTIME=""
"RTN","SDECDEV",28,0)
 ..I $L(XSEC),$G(DUZ(0))'="@",$TR(XSEC,$G(DUZ(0)))=XSEC Q
"RTN","SDECDEV",29,0)
 ..S PL=$P(MW,U,3),MW=$P(MW,U),X=$G(^%ZIS(2,XSTYPE,1))
"RTN","SDECDEV",30,0)
 ..S:'MW MW=$P(X,U)
"RTN","SDECDEV",31,0)
 ..S:'PL PL=$P(X,U,3)
"RTN","SDECDEV",32,0)
 ..S X=$P(X0,U)
"RTN","SDECDEV",33,0)
 ..Q:$E(X,1,4)["NULL"
"RTN","SDECDEV",34,0)
 ..S:X'=FROM X=FROM_"  <"_X_">"
"RTN","SDECDEV",35,0)
 ..S SDECI=SDECI+1,@SDECY@(SDECI)=IEN_U_$P(X0,U)_$C(30)
"RTN","SDECDEV",36,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECDEV",37,0)
 Q
"RTN","SDECDIQ1")
0^107^B23533098^n/a
"RTN","SDECDIQ1",1,0)
SDECDIQ1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECDIQ1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECDIQ1",3,0)
 ;
"RTN","SDECDIQ1",4,0)
 Q
"RTN","SDECDIQ1",5,0)
 ;
"RTN","SDECDIQ1",6,0)
 ; Documentation for the APIs in this routine can be found
"RTN","SDECDIQ1",7,0)
 ; in routine XBDIQ0.
"RTN","SDECDIQ1",8,0)
 ;
"RTN","SDECDIQ1",9,0)
DOC ;
"RTN","SDECDIQ1",10,0)
 Q
"RTN","SDECDIQ1",11,0)
 ;
"RTN","SDECDIQ1",12,0)
EN ;PEP - Returns single entries
"RTN","SDECDIQ1",13,0)
 NEW XB0,XBDIC,XBFN,XBGBL,XBNEWPAR,XBGL
"RTN","SDECDIQ1",14,0)
 S XBDIC=DIC
"RTN","SDECDIQ1",15,0)
 I DA'=+DA D PARSE(DA)
"RTN","SDECDIQ1",16,0)
 D DICFNGL(DIC),^SDECSFGR(XBFN,.XBGBL)
"RTN","SDECDIQ1",17,0)
 S XBDIC=$P(XBGBL,"DA,"),DIC=XBDIC
"RTN","SDECDIQ1",18,0)
 D ENDIQ1,EXIT
"RTN","SDECDIQ1",19,0)
 Q
"RTN","SDECDIQ1",20,0)
 ;
"RTN","SDECDIQ1",21,0)
ENP(DIC,DA,DR,DIQ,XBFMT) ;PEP - param pass into EN
"RTN","SDECDIQ1",22,0)
 S:'$D(DIQ(0)) DIQ(0)=$G(XBFMT)
"RTN","SDECDIQ1",23,0)
 D EN
"RTN","SDECDIQ1",24,0)
 Q
"RTN","SDECDIQ1",25,0)
 ;
"RTN","SDECDIQ1",26,0)
ENPM(DIC,DA,DR,DIQ,XBFMT) ;PEP - param pass into EN
"RTN","SDECDIQ1",27,0)
 S:'$D(DIQ(0)) DIQ(0)=$G(XBFMT)
"RTN","SDECDIQ1",28,0)
 D ENM
"RTN","SDECDIQ1",29,0)
 Q
"RTN","SDECDIQ1",30,0)
 ;
"RTN","SDECDIQ1",31,0)
ENM ;PEP - get multiple entries
"RTN","SDECDIQ1",32,0)
 NEW XB0,XBDIC,XBFN,XBGBL,XBNEWPAR,XBGL
"RTN","SDECDIQ1",33,0)
 S XBDIC=DIC
"RTN","SDECDIQ1",34,0)
 S:$G(DA)="" DA=0
"RTN","SDECDIQ1",35,0)
 I DA'=+DA D PARSE(DA)
"RTN","SDECDIQ1",36,0)
 S:(+$G(DIQ(0))'>0) DIQ(0)=1_$G(DIQ(0))
"RTN","SDECDIQ1",37,0)
 D DICFNGL(DIC)
"RTN","SDECDIQ1",38,0)
 S XBDIC=$P(XBGL,"DA,"),DIC=XBDIC,DA=0,DIC(0)=""
"RTN","SDECDIQ1",39,0)
 I $D(DIC("S")) S XBDICS=DIC("S")
"RTN","SDECDIQ1",40,0)
 F  S DA=$O(@(XBDIC_"DA)")) Q:DA'>0  D
"RTN","SDECDIQ1",41,0)
 . S XB0=@(XBDIC_"DA,0)")
"RTN","SDECDIQ1",42,0)
 . I $L($G(XBDICS)) S DIC("S")=XBDICS
"RTN","SDECDIQ1",43,0)
 . I $D(DIC("S")) S X="`"_DA,DIC(0)="N" D ^DIC Q:Y'>0
"RTN","SDECDIQ1",44,0)
 . S DIC=XBDIC
"RTN","SDECDIQ1",45,0)
 . D ENDIQ1
"RTN","SDECDIQ1",46,0)
 .Q
"RTN","SDECDIQ1",47,0)
 KILL XBDICS
"RTN","SDECDIQ1",48,0)
 S DA=""
"RTN","SDECDIQ1",49,0)
 D EXIT
"RTN","SDECDIQ1",50,0)
 Q
"RTN","SDECDIQ1",51,0)
 ;
"RTN","SDECDIQ1",52,0)
ENDIQ1 ;EP - call EN^DIQ1
"RTN","SDECDIQ1",53,0)
 NEW XBDIQ,XBGBL0,XBGLS,XBLVL,XBUDA,XB,XB0
"RTN","SDECDIQ1",54,0)
 S XBDIQ=DIQ,XBDIQ(0)=$G(DIQ(0))
"RTN","SDECDIQ1",55,0)
 NEW DIQ,XBDTMP
"RTN","SDECDIQ1",56,0)
 D LEVELS
"RTN","SDECDIQ1",57,0)
 D
"RTN","SDECDIQ1",58,0)
 . NEW DIC,DR,DA
"RTN","SDECDIQ1",59,0)
 . D SETDIQ1
"RTN","SDECDIQ1",60,0)
 . D ENDIQ1X
"RTN","SDECDIQ1",61,0)
 .Q
"RTN","SDECDIQ1",62,0)
 D PULLDIQ1
"RTN","SDECDIQ1",63,0)
 Q:XBDIQ(0)'["I"  ;  Internal if XB["I"
"RTN","SDECDIQ1",64,0)
 KILL DIC
"RTN","SDECDIQ1",65,0)
 S DIC=XBDIC ;reset dic
"RTN","SDECDIQ1",66,0)
 S DIQ(0)="I"
"RTN","SDECDIQ1",67,0)
 D ENDIQ1X,PULLDIQ1
"RTN","SDECDIQ1",68,0)
 KILL ^UTILITY("DIQ1",$J)
"RTN","SDECDIQ1",69,0)
 Q
"RTN","SDECDIQ1",70,0)
 ;
"RTN","SDECDIQ1",71,0)
ENDIQ1X ;EP - to call DIQ1 with new
"RTN","SDECDIQ1",72,0)
 ;I $G(XBDIQ1(0))["N" S DIQ(0)=$G(DIQ(0))_"N"
"RTN","SDECDIQ1",73,0)
 I $G(XBFMT)["N",$G(DIQ(0))'["N" S DIQ(0)=$G(DIQ(0))_"N"
"RTN","SDECDIQ1",74,0)
 D EN^SDECNEW("ENDIQ1XN^SDECDIQ1","DR;DA;DIC;DIQ;XBDTMP;XBSRCFL")
"RTN","SDECDIQ1",75,0)
 Q
"RTN","SDECDIQ1",76,0)
 ;
"RTN","SDECDIQ1",77,0)
ENDIQ1XN ;EP
"RTN","SDECDIQ1",78,0)
 S DIQ="XBDTMP("
"RTN","SDECDIQ1",79,0)
 D EN^DIQ1
"RTN","SDECDIQ1",80,0)
 Q
"RTN","SDECDIQ1",81,0)
 ;
"RTN","SDECDIQ1",82,0)
EXIT ;EP
"RTN","SDECDIQ1",83,0)
 KILL XBI,XBDEST,XBNEWPAR
"RTN","SDECDIQ1",84,0)
 Q
"RTN","SDECDIQ1",85,0)
 ;
"RTN","SDECDIQ1",86,0)
PULLDIQ1 ;EP - PULL FROM ^UTILITY("DIQ1",$J)
"RTN","SDECDIQ1",87,0)
 D %XY
"RTN","SDECDIQ1",88,0)
 S XBGLS=XBDIQ_"""ID"")" S @XBGLS=DA_":"_DIC_":"_XBUDA_":"_+XBDIQ(0)
"RTN","SDECDIQ1",89,0)
 D %XY^%RCR
"RTN","SDECDIQ1",90,0)
 Q
"RTN","SDECDIQ1",91,0)
 ;
"RTN","SDECDIQ1",92,0)
%XY ;EP - set %X & %Y to format
"RTN","SDECDIQ1",93,0)
 N %
"RTN","SDECDIQ1",94,0)
 KILL %X,%Y
"RTN","SDECDIQ1",95,0)
 S XBUDA=""
"RTN","SDECDIQ1",96,0)
0 I +XBDIQ(0)=0 D  Q
"RTN","SDECDIQ1",97,0)
 . S %X="XBDTMP("_XBFN_","_DA_",",%Y=XBDIQ
"RTN","SDECDIQ1",98,0)
 .Q
"RTN","SDECDIQ1",99,0)
1 I +XBDIQ(0)=1 D  Q
"RTN","SDECDIQ1",100,0)
 . S %X="XBDTMP("_XBFN_",",%Y=XBDIQ,XBUDA=DA_","
"RTN","SDECDIQ1",101,0)
 .Q
"RTN","SDECDIQ1",102,0)
2 I +XBDIQ(0)=2 D  Q
"RTN","SDECDIQ1",103,0)
 . S %X="XBDTMP("_XBFN_","
"RTN","SDECDIQ1",104,0)
 . D  ;build da(x),..,da subscripts
"RTN","SDECDIQ1",105,0)
 .. S %Y=""
"RTN","SDECDIQ1",106,0)
 .. F %=1:1 Q:'$G(DA(%))  S %Y=DA(%)_","_%Y
"RTN","SDECDIQ1",107,0)
 ..Q
"RTN","SDECDIQ1",108,0)
 . S XBUDA=%Y_DA_","
"RTN","SDECDIQ1",109,0)
 . S %Y=XBDIQ_%Y
"RTN","SDECDIQ1",110,0)
 .Q
"RTN","SDECDIQ1",111,0)
%XYE Q
"RTN","SDECDIQ1",112,0)
 ;--
"RTN","SDECDIQ1",113,0)
DICFNGL(X) ;EP - set XBFN & XBGL0 return 1 error
"RTN","SDECDIQ1",114,0)
 NEW Y
"RTN","SDECDIQ1",115,0)
 KILL XBGL,XBFN
"RTN","SDECDIQ1",116,0)
 I X S XBFN=X D ^SDECSFGR(XBFN,.XBGL) Q
"RTN","SDECDIQ1",117,0)
 I 'X S Y=X_"0)" S XBFN=+$P(@Y,U,2),Y=0 D ^SDECSFGR(XBFN,.XBGL)
"RTN","SDECDIQ1",118,0)
 Q
"RTN","SDECDIQ1",119,0)
 ;
"RTN","SDECDIQ1",120,0)
DICFNGLX ;
"RTN","SDECDIQ1",121,0)
 Q
"RTN","SDECDIQ1",122,0)
 ;
"RTN","SDECDIQ1",123,0)
VAL(DIC,DA,DR) ;PEP - extrinsic pull a value for a field
"RTN","SDECDIQ1",124,0)
 NEW DIQ,XBT
"RTN","SDECDIQ1",125,0)
 S DIQ="XBT("
"RTN","SDECDIQ1",126,0)
 D EN
"RTN","SDECDIQ1",127,0)
 Q $G(XBT(+DR))
"RTN","SDECDIQ1",128,0)
 ;
"RTN","SDECDIQ1",129,0)
VALI(DIC,DA,DR) ;PEP - extrinsic pull a value for a field
"RTN","SDECDIQ1",130,0)
 NEW DIQ,XBT
"RTN","SDECDIQ1",131,0)
 S DIQ="XBT(",DIQ(0)="I"
"RTN","SDECDIQ1",132,0)
 D EN
"RTN","SDECDIQ1",133,0)
 Q $G(XBT(+DR,"I"))
"RTN","SDECDIQ1",134,0)
 ;
"RTN","SDECDIQ1",135,0)
PARSE(XBDA) ;PEP - parse DA literal into da array
"RTN","SDECDIQ1",136,0)
 NEW D,I,J
"RTN","SDECDIQ1",137,0)
 F I=1:1 S D(I)=$P(XBDA,",",I) Q:D(I)=""
"RTN","SDECDIQ1",138,0)
 S I=I-1
"RTN","SDECDIQ1",139,0)
 F J=0:1:I-1 S DA(J)=D(I-J)
"RTN","SDECDIQ1",140,0)
 F J=0:1:I-1 F  Q:(DA(J)=+DA(J))  S DA(J)=@(DA(J))
"RTN","SDECDIQ1",141,0)
 S DA=DA(0)
"RTN","SDECDIQ1",142,0)
 KILL DA(0)
"RTN","SDECDIQ1",143,0)
 Q
"RTN","SDECDIQ1",144,0)
 ;
"RTN","SDECDIQ1",145,0)
DIC(XBFN) ;PEP -  Extrinsic entry to return DIC from global
"RTN","SDECDIQ1",146,0)
 NEW XBDIC
"RTN","SDECDIQ1",147,0)
 D EN^SDECSFGR(XBFN,.XBDIC)
"RTN","SDECDIQ1",148,0)
 S XBDIC=$P(XBDIC,"DA,")
"RTN","SDECDIQ1",149,0)
 Q XBDIC
"RTN","SDECDIQ1",150,0)
 ;
"RTN","SDECDIQ1",151,0)
LEVELS ;EP - setup XB_FN_DA_DR_FLD arrays for upper levels it they exist
"RTN","SDECDIQ1",152,0)
 ;set bottom level
"RTN","SDECDIQ1",153,0)
 KILL XB
"RTN","SDECDIQ1",154,0)
 S XBLVL=0
"RTN","SDECDIQ1",155,0)
 S XB(0,"DR")=DR,XB(0,"DA")=DA,XB(0,"FN")=XBFN
"RTN","SDECDIQ1",156,0)
 S XB(0,"FLD")=""
"RTN","SDECDIQ1",157,0)
 S XB(0,"PAR")=$G(^DD(XB(0,"FN"),0,"UP"))
"RTN","SDECDIQ1",158,0)
 S:XB(0,"PAR")]"" XB(XBLVL,"FLD")=$O(^DD(XB(0,"PAR"),"SB",XB(0,"FN"),""))
"RTN","SDECDIQ1",159,0)
 D ^SDECSFGR(XB(0,"FN"),.XBGBL0)
"RTN","SDECDIQ1",160,0)
 S XB(0,"GBL")=$P(XBGBL0,"DA,")
"RTN","SDECDIQ1",161,0)
 I XB(0,"PAR")]"" S XB(0+1,"FN")=XB(0,"PAR"),XBLVL=XBLVL+1 D PARENT
"RTN","SDECDIQ1",162,0)
 Q
"RTN","SDECDIQ1",163,0)
 ;
"RTN","SDECDIQ1",164,0)
PARENT ; gather parent information
"RTN","SDECDIQ1",165,0)
 ; build elements from XBFN(XBLVL)
"RTN","SDECDIQ1",166,0)
 S XB(XBLVL,"DA")=DA(XBLVL)
"RTN","SDECDIQ1",167,0)
 S XB(XBLVL,"DR")=XB(XBLVL-1,"FLD")
"RTN","SDECDIQ1",168,0)
 S XB(XBLVL,"FLD")=""
"RTN","SDECDIQ1",169,0)
 S XB(XBLVL,"PAR")=$G(^DD(XB(XBLVL,"FN"),0,"UP"))
"RTN","SDECDIQ1",170,0)
 S:XB(XBLVL,"PAR")]"" XB(XBLVL,"FLD")=$O(^DD(XB(XBLVL,"PAR"),"SB",XB(XBLVL,"FN"),""))
"RTN","SDECDIQ1",171,0)
 D ^SDECSFGR(XB(XBLVL,"FN"),.XBGBL0)
"RTN","SDECDIQ1",172,0)
 S XB(XBLVL,"GBL")=$P(XBGBL0,"DA,")
"RTN","SDECDIQ1",173,0)
 I XB(XBLVL,"PAR")]"" S XB(XBLVL+1,"FN")=XB(XBLVL,"PAR"),XBLVL=XBLVL+1 D PARENT
"RTN","SDECDIQ1",174,0)
EPAR ;
"RTN","SDECDIQ1",175,0)
 Q
"RTN","SDECDIQ1",176,0)
 ;
"RTN","SDECDIQ1",177,0)
SETDIQ1 ;EP - set DR(fn and DA(fn arrays for DIQ1
"RTN","SDECDIQ1",178,0)
 F XBLVL=0:1 Q:'$D(XB(XBLVL))  D
"RTN","SDECDIQ1",179,0)
 . S DR(XB(XBLVL,"FN"))=XB(XBLVL,"DR")
"RTN","SDECDIQ1",180,0)
 . S DA(XB(XBLVL,"FN"))=XB(XBLVL,"DA")
"RTN","SDECDIQ1",181,0)
 . S DIC=XB(XBLVL,"GBL")
"RTN","SDECDIQ1",182,0)
 . S DR=XB(XBLVL,"DR")
"RTN","SDECDIQ1",183,0)
 . S DA=XB(XBLVL,"DA")
"RTN","SDECDIQ1",184,0)
 .Q
"RTN","SDECDIQ1",185,0)
 ;   kill off redundant DR( and DA(
"RTN","SDECDIQ1",186,0)
 S XBLVL=XBLVL-1
"RTN","SDECDIQ1",187,0)
 KILL DR(XB(XBLVL,"FN")),DA(XB(XBLVL,"FN"))
"RTN","SDECDIQ1",188,0)
 Q
"RTN","SDECDIQ1",189,0)
 ;
"RTN","SDECDIS")
0^153^B9266353^n/a
"RTN","SDECDIS",1,0)
SDECDIS ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECDIS",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECDIS",3,0)
 ;
"RTN","SDECDIS",4,0)
 Q
"RTN","SDECDIS",5,0)
 ;
"RTN","SDECDIS",6,0)
DISABIL(SDECY,DFN) ;GET rated disabilities for the given patient
"RTN","SDECDIS",7,0)
 ;INPUT:
"RTN","SDECDIS",8,0)
 ; DFN - (required) pointer to PATIENT file 2
"RTN","SDECDIS",9,0)
 ;RETURN:
"RTN","SDECDIS",10,0)
 ;  1. DFN          - patient ID pointer to PATIENT file 2
"RTN","SDECDIS",11,0)
 ;  2. DISABILITIES - RATED DISABILITIES from multiple field .3721 separated by pipe
"RTN","SDECDIS",12,0)
 ;                    each pipe piece contains the following ;; pieces:
"RTN","SDECDIS",13,0)
 ;                     1. DISABILITY id pointer to DISABILITY CONDITION file 31
"RTN","SDECDIS",14,0)
 ;                     2. DISABILITY NAME from DISABILITY CONDITION file
"RTN","SDECDIS",15,0)
 ;                     3. DISABILITY % - percentage at which the VA rated this disability
"RTN","SDECDIS",16,0)
 ;                     4. SERVICE_CONNECTED - 0=NO=Patient is not service connected for this disability
"RTN","SDECDIS",17,0)
 ;                                            1=YES=Patient IS service connected for this disability
"RTN","SDECDIS",18,0)
 ;                     5. EXTREMITY - BL = BOTH LOWER
"RTN","SDECDIS",19,0)
 ;                                    BU = BOTH UPPER
"RTN","SDECDIS",20,0)
 ;                                    RL = RIGHT LOWER
"RTN","SDECDIS",21,0)
 ;                                    RU = RIGHT UPPER
"RTN","SDECDIS",22,0)
 ;                                    LL = LEFT LOWER
"RTN","SDECDIS",23,0)
 ;                                    LU = LEFT UPPER
"RTN","SDECDIS",24,0)
 ;                     6. ORIG_DATE - ORIGINAL EFFECTIVE DATE in external format
"RTN","SDECDIS",25,0)
 ;                     7. CURR_DATE         - CURRENT EFFECTIVE DATE in external format
"RTN","SDECDIS",26,0)
 ;  3. SVCCONN - Y=YES=Patient Service Connected          ;$$GET1^DIQ(2,DFN_",",.301,"E")  ;$S(+PCE:SDD(27.11,PCE_",",50.02,"E"),1:"")
"RTN","SDECDIS",27,0)
 ;               N=NO=Patient NOT Service Connected
"RTN","SDECDIS",28,0)
 ; 4. SVCCONNP - Patient's service connected percentage   ;S RET("SVCCONNP")=$$GET1^DIQ(2,DFN_",",.302,"E")
"RTN","SDECDIS",29,0)
 ; 5. PRIMARY  - from field .361 pointer to ELIGIBILITY CODE file 8
"RTN","SDECDIS",30,0)
 ; 6. PRIMARY_NAME - name from ELIGIBILITY CODE file
"RTN","SDECDIS",31,0)
 ; 7. SECONDARY - from PATIENT ELIGIBILITIES multiple field 361 separated by pipe (see SC^DGMTR)
"RTN","SDECDIS",32,0)
 ;                each pipe piece contains the following ;; pieces:
"RTN","SDECDIS",33,0)
 ;                 1. ELIGIBILITY id pointer to ELIGIBILITY CODE file 8
"RTN","SDECDIS",34,0)
 ;                 2. ELIGIBILITY name from ELIGIBILITY CODE file
"RTN","SDECDIS",35,0)
 ;
"RTN","SDECDIS",36,0)
 N SDDATA,SDI,SDRET,SDTMP,SDTMP1
"RTN","SDECDIS",37,0)
 S SDECY="^TMP(""SDECDIS"","_$J_",""DIS"")"
"RTN","SDECDIS",38,0)
 K @SDECY
"RTN","SDECDIS",39,0)
 S SDTMP="T00030DFN^T00100DISABILITIES^T00030SVCCONN^T00030SVCCONNP^T00030PRIMARY^T00030PRIMARY_NAME^T00030SECONDARY"
"RTN","SDECDIS",40,0)
 S @SDECY@(0)=SDTMP_$C(30)
"RTN","SDECDIS",41,0)
 S DFN=$G(DFN)
"RTN","SDECDIS",42,0)
 I (DFN="")!('$D(^DPT(DFN,0))) S @SDECY@(1)="-1^Invalid patient id."_$C(30,31) Q
"RTN","SDECDIS",43,0)
 S SDRET=DFN
"RTN","SDECDIS",44,0)
 S SDTMP=""
"RTN","SDECDIS",45,0)
 D GETS^DIQ(2,DFN,".3721*","IE","SDDATA")
"RTN","SDECDIS",46,0)
 S SDI="" F  S SDI=$O(SDDATA(2.04,SDI)) Q:SDI=""  D
"RTN","SDECDIS",47,0)
 .S SDTMP1=""
"RTN","SDECDIS",48,0)
 .S $P(SDTMP1,";;",1)=SDDATA(2.04,SDI,.01,"I")   ;DISABILITY CONDITION id
"RTN","SDECDIS",49,0)
 .S $P(SDTMP1,";;",2)=SDDATA(2.04,SDI,.01,"E")   ;name
"RTN","SDECDIS",50,0)
 .S $P(SDTMP1,";;",3)=SDDATA(2.04,SDI,2,"I")     ;disability %
"RTN","SDECDIS",51,0)
 .S $P(SDTMP1,";;",4)=SDDATA(2.04,SDI,3,"I")     ;service connected
"RTN","SDECDIS",52,0)
 .S $P(SDTMP1,";;",5)=SDDATA(2.04,SDI,4,"I")     ;extremity affcted
"RTN","SDECDIS",53,0)
 .S $P(SDTMP1,";;",6)=SDDATA(2.04,SDI,5,"E")     ;original effective date
"RTN","SDECDIS",54,0)
 .S $P(SDTMP1,";;",7)=SDDATA(2.04,SDI,6,"E")     ;current effective date
"RTN","SDECDIS",55,0)
 .S SDTMP=$S(SDTMP'="":SDTMP_"|",1:"")_SDTMP1
"RTN","SDECDIS",56,0)
 S $P(SDRET,U,2)=SDTMP
"RTN","SDECDIS",57,0)
 S $P(SDRET,U,3)=$$GET1^DIQ(2,DFN_",",.301,"I")  ;service connected
"RTN","SDECDIS",58,0)
 S $P(SDRET,U,4)=$$GET1^DIQ(2,DFN_",",.302,"I")  ;service connected percentage
"RTN","SDECDIS",59,0)
 S $P(SDRET,U,5)=$$GET1^DIQ(2,DFN_",",.361,"I")  ;primary eligibility code id
"RTN","SDECDIS",60,0)
 S $P(SDRET,U,6)=$$GET1^DIQ(2,DFN_",",.361,"E")  ;primary eligibility code name
"RTN","SDECDIS",61,0)
 S SDTMP=""
"RTN","SDECDIS",62,0)
 D GETS^DIQ(2,DFN,"361*","IE","SDDATA")
"RTN","SDECDIS",63,0)
 S SDI="" F  S SDI=$O(SDDATA(2.0361,SDI)) Q:SDI=""  D
"RTN","SDECDIS",64,0)
 .S SDTMP1=""
"RTN","SDECDIS",65,0)
 .S $P(SDTMP1,";;",1)=SDDATA(2.0361,SDI,.01,"I")   ;eligibility id
"RTN","SDECDIS",66,0)
 .S $P(SDTMP1,";;",2)=SDDATA(2.0361,SDI,.01,"E")   ;eligibility name
"RTN","SDECDIS",67,0)
 .S SDTMP=$S(SDTMP'="":SDTMP_"|",1:"")_SDTMP1
"RTN","SDECDIS",68,0)
 S $P(SDRET,U,7)=SDTMP
"RTN","SDECDIS",69,0)
 S @SDECY@(1)=SDRET_$C(30,31)
"RTN","SDECDIS",70,0)
 Q
"RTN","SDECEKL")
0^121^B3200595^n/a
"RTN","SDECEKL",1,0)
SDECEKL ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECEKL",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECEKL",3,0)
 ;
"RTN","SDECEKL",4,0)
 Q
"RTN","SDECEKL",5,0)
 ;
"RTN","SDECEKL",6,0)
EN ;KILL VARIABLES AND RESET VARS
"RTN","SDECEKL",7,0)
 I $E(DUZ("AG"))="I" S:$D(SDDUZ) DUZ(0)=SDDUZ
"RTN","SDECEKL",8,0)
 I $E(DUZ("AG"))="I" S:$D(SDDUZ2) DUZ(2)=SDDUZ2
"RTN","SDECEKL",9,0)
 K D0,DA,DIC,DIE,DIK,DLAYGO,DR
"RTN","SDECEKL",10,0)
 K SDAFLG
"RTN","SDECEKL",11,0)
 K ^TMP("APCD",$J)
"RTN","SDECEKL",12,0)
 ;
"RTN","SDECEKL",13,0)
EN1 ;
"RTN","SDECEKL",14,0)
 ;
"RTN","SDECEKL",15,0)
 K Y
"RTN","SDECEKL",16,0)
 K AICDHLIM,XTLKHLIM
"RTN","SDECEKL",17,0)
 K SDCAT,SDCLN,SDDATE,SDLOC,SDTIME,SDTYPE,SDVSIT,SDLOOK,SDTPCC,SDTACC,SDFV,SDAX,SDAL,SDNOK,SDEQX,SDMOD,SDMPQ,SDTVST,SDTLOC,SDTTYP,SDTCAT,SDTCLN,SDEXIT,SDOLOC
"RTN","SDECEKL",18,0)
 K SDTBP,SDPVL,SDAPPT,SDEVM,SDCODT,SDLS,SDVELG,SDHL,SDOPT,SDPROT,SDAPDT
"RTN","SDECEKL",19,0)
 K SDPAT,SDDOB,SDSEX,SDDOD,SDRV
"RTN","SDECEKL",20,0)
 K AUPNDOB,AUPNDOD,AUPNPAT,AUPNSEX,AUPNDAYS,AUPNVSIT,AUPNLK
"RTN","SDECEKL",21,0)
 K SDLPAT,SDLDAT,SDLVST,SDMNE,SDNOCL,SDNOXV,SDAMN
"RTN","SDECEKL",22,0)
 K SDAPP,SDBEEP,SDDUZ,SDDUZ2,SDFLG,SDL,SDMODE,SDOCAT,SDODAT,SDOTYP,SDOVRR,SDPVC,SDTPLT,SDVLK,SDX,SDENV,SDEMF,SDEIN,SD,SDNOXV
"RTN","SDECEKL",23,0)
 Q
"RTN","SDECEKL",24,0)
EN2 ;CALLED TO KILL ENVIRONMENTAL VARS
"RTN","SDECEKL",25,0)
 ;optional
"RTN","SDECEKL",26,0)
 ;  APMFMENU
"RTN","SDECEKL",27,0)
 K AUPNLK
"RTN","SDECEKL",28,0)
 K SDPARM,SDNRV,SDRVON,SDRVOF,SDSITE,SDTRM,SDDEFL,SDDEFS,SDDEFC,SDDEFT
"RTN","SDECEKL",29,0)
 Q
"RTN","SDECERR")
0^69^B718946^n/a
"RTN","SDECERR",1,0)
SDECERR ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECERR",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECERR",3,0)
 ;
"RTN","SDECERR",4,0)
 Q
"RTN","SDECERR",5,0)
 ;
"RTN","SDECERR",6,0)
 ;  ERROR  = General error catch routine used by @^%ZOSF("TRAP")
"RTN","SDECERR",7,0)
 ;  ERR    = Error logging routine
"RTN","SDECERR",8,0)
 ;
"RTN","SDECERR",9,0)
ERROR ;
"RTN","SDECERR",10,0)
 D ERR("Error")
"RTN","SDECERR",11,0)
 Q
"RTN","SDECERR",12,0)
 ;
"RTN","SDECERR",13,0)
ERR(SDECERR) ;Error processing
"RTN","SDECERR",14,0)
 ; SDECERR = Error text OR error code
"RTN","SDECERR",15,0)
 ; SDECI   = pointer into return global array (might decide to pass this in for clarity)
"RTN","SDECERR",16,0)
 I +SDECERR S SDECERR=SDECERR+134234112 ;vbObjectError
"RTN","SDECERR",17,0)
 S SDECI=SDECI+1
"RTN","SDECERR",18,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDECERR",19,0)
 S SDECI=SDECI+1
"RTN","SDECERR",20,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDECERR",21,0)
 Q
"RTN","SDECERR",22,0)
 ;
"RTN","SDECERR",23,0)
ERR1(ERRCODE,ERRTXT,SDECI,SDECY) ;Error processing
"RTN","SDECERR",24,0)
 ; ERRCODE = represents Return code in first ^ piece
"RTN","SDECERR",25,0)
 ; ERRTXT  = represents Message text in 2nd ^ piece
"RTN","SDECERR",26,0)
 ; SDECI   = pointer into return global array
"RTN","SDECERR",27,0)
 S SDECI=SDECI+1
"RTN","SDECERR",28,0)
 S @SDECY@(SDECI)=ERRCODE_"^"_ERRTXT_$C(30,31)
"RTN","SDECERR",29,0)
 Q
"RTN","SDECF")
0^88^B5042632^n/a
"RTN","SDECF",1,0)
SDECF ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECF",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECF",3,0)
 ;
"RTN","SDECF",4,0)
 Q
"RTN","SDECF",5,0)
 ;
"RTN","SDECF",6,0)
MSG(DATA,PRE,POST) ;EP; -- writes line to device
"RTN","SDECF",7,0)
 NEW I,FORMAT
"RTN","SDECF",8,0)
 S FORMAT="" I $G(PRE)>0 F I=1:1:PRE S FORMAT=FORMAT_"!"
"RTN","SDECF",9,0)
 D EN^DDIOL(DATA,"",FORMAT)
"RTN","SDECF",10,0)
 I $G(POST)>0 F I=1:1:POST D EN^DDIOL("","","!")
"RTN","SDECF",11,0)
 Q
"RTN","SDECF",12,0)
 ;
"RTN","SDECF",13,0)
ZIS(X,BDGRTN,BDGDESC,BDGVAR,BDGDEV,BDGCOP) ;EP
"RTN","SDECF",14,0)
 ; -- called to select device and send print
"RTN","SDECF",15,0)
 N ZTDESC,ZTDTH,ZTRTN,ZTSAVE
"RTN","SDECF",16,0)
 K %ZIS,IOP,POP,ZTIO
"RTN","SDECF",17,0)
 I X="F" D     ;forced queuing; no user interaction
"RTN","SDECF",18,0)
 . S ZTIO=BDGDEV,ZTDTH=$H
"RTN","SDECF",19,0)
 I X'="F" D  Q:'$D(IO("Q"))
"RTN","SDECF",20,0)
 . S %ZIS=X
"RTN","SDECF",21,0)
 . I $G(BDGDEV)]"" S %ZIS("B")=BDGDEV
"RTN","SDECF",22,0)
 . D ^%ZIS
"RTN","SDECF",23,0)
 . Q:POP
"RTN","SDECF",24,0)
 . Q:$D(IO("Q"))
"RTN","SDECF",25,0)
 . I $G(BDGCOP)>1 D  Q
"RTN","SDECF",26,0)
 .. N J
"RTN","SDECF",27,0)
 .. F J=1:1:BDGCOP D @BDGRTN
"RTN","SDECF",28,0)
 . D @BDGRTN
"RTN","SDECF",29,0)
 I $G(BDGCOP)>1 D  Q
"RTN","SDECF",30,0)
 . N K
"RTN","SDECF",31,0)
 . F K=1:1:BDGCOP D  ;changed from k to j
"RTN","SDECF",32,0)
 .. K IO("Q") S ZTRTN=BDGRTN,ZTDESC=BDGDESC
"RTN","SDECF",33,0)
 .. I $G(BDGDTH)]"" S ZTDTH=BDGDTH  ;if time is already put in then set to that
"RTN","SDECF",34,0)
 .. F I=1:1 S J=$P(BDGVAR,";",I) Q:J=""  S ZTSAVE(J)=""
"RTN","SDECF",35,0)
 .. D ^%ZTLOAD
"RTN","SDECF",36,0)
 .. S BDGDTH=$G(ZTSK("D"))  ;set time equal to what they put in the first time
"RTN","SDECF",37,0)
 .. K ZTSK
"RTN","SDECF",38,0)
 . D ^%ZISC
"RTN","SDECF",39,0)
 . K BDGDTH
"RTN","SDECF",40,0)
 K IO("Q") S ZTRTN=BDGRTN,ZTDESC=BDGDESC
"RTN","SDECF",41,0)
 F I=1:1 S J=$P(BDGVAR,";",I) Q:J=""  S ZTSAVE(J)=""
"RTN","SDECF",42,0)
 D ^%ZTLOAD K ZTSK D ^%ZISC
"RTN","SDECF",43,0)
 Q
"RTN","SDECF",44,0)
 ;
"RTN","SDECF",45,0)
READ(TYPE,PROMPT,DEFAULT,HELP,SCREEN,DIRA) ;EP; calls reader, returns response
"RTN","SDECF",46,0)
 NEW DIR,Y,DIRUT,DLAYGO
"RTN","SDECF",47,0)
 S DIR(0)=TYPE
"RTN","SDECF",48,0)
 I $E(TYPE,1)="P",$P(TYPE,":",2)["L" S DLAYGO=+$P(TYPE,U,2)
"RTN","SDECF",49,0)
 I $D(SCREEN) S DIR("S")=SCREEN
"RTN","SDECF",50,0)
 I $G(PROMPT)]"" S DIR("A")=PROMPT
"RTN","SDECF",51,0)
 I $G(DEFAULT)]"" S DIR("B")=DEFAULT
"RTN","SDECF",52,0)
 I $D(HELP) S DIR("?")=HELP
"RTN","SDECF",53,0)
 I $D(DIRA(1)) S Y=0 F  S Y=$O(DIRA(Y)) Q:Y=""  S DIR("A",Y)=DIRA(Y)
"RTN","SDECF",54,0)
 D ^DIR
"RTN","SDECF",55,0)
 Q Y
"RTN","SDECF",56,0)
 ;
"RTN","SDECF",57,0)
TIME(DATE) ;EP returns time in 12:00 PM format for date send
"RTN","SDECF",58,0)
 Q $$UP^XLFSTR($E($$FMTE^XLFDT($E(DATE,1,12),"P"),14,21))
"RTN","SDECF2")
0^89^B1878114^n/a
"RTN","SDECF2",1,0)
SDECF2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECF2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECF2",3,0)
 ;
"RTN","SDECF2",4,0)
 Q
"RTN","SDECF2",5,0)
 ;
"RTN","SDECF2",6,0)
HRCN(PAT,SITE) ;EP; return chart number for patient at this site
"RTN","SDECF2",7,0)
 ;called by ADT ITEMS file
"RTN","SDECF2",8,0)
 I $G(PAT)="" Q ""  ;cmi/maw 6/12/2008 PATCH 1009 added for missing pat node in file 44 for appt
"RTN","SDECF2",9,0)
 Q $P($G(^AUPNPAT(PAT,41,SITE,0)),U,2)
"RTN","SDECF2",10,0)
 ;
"RTN","SDECF2",11,0)
HRCND(X) ;EP; add dashes to chart # passed as X
"RTN","SDECF2",12,0)
 ;called by ADT ITEMS file
"RTN","SDECF2",13,0)
 S X="00000"_X,X=$E(X,$L(X)-5,$L(X))
"RTN","SDECF2",14,0)
 S X=$E(X,1,2)_"-"_$E(X,3,4)_"-"_$E(X,5,6)
"RTN","SDECF2",15,0)
 Q X
"RTN","SDECF2",16,0)
 ;
"RTN","SDECF2",17,0)
HRCNT(X) ;EP; return terminal digit format of chart # passed as X
"RTN","SDECF2",18,0)
 NEW STYLE ;S STYLE=$$GET1^DIQ(9009020.2,$$DIV^SDECU,.09,"I") I STYLE="" S STYLE="A"
"RTN","SDECF2",19,0)
 S STYLE="A"
"RTN","SDECF2",20,0)
 S X="00000"_X,X=$E(X,$L(X)-5,$L(X))
"RTN","SDECF2",21,0)
 I STYLE="A" S X=$E(X,5,6)_"-"_$E(X,3,4)_"-"_$E(X,1,2)
"RTN","SDECF2",22,0)
 E  S X=$E(X,5,6)_"-"_$E(X,1,2)_"-"_$E(X,3,4)
"RTN","SDECF2",23,0)
 Q X
"RTN","SDECF2",24,0)
 ;
"RTN","SDECF2",25,0)
NAMEPRT(DFN,CONVERT) ;EP; return printable name
"RTN","SDECF2",26,0)
 ;CONVERT=1 means convert to mixed case letters
"RTN","SDECF2",27,0)
 NEW VADM,X
"RTN","SDECF2",28,0)
 D DEM^VADPT
"RTN","SDECF2",29,0)
 S X=$P($P(VADM(1),",",2)," ")_" "_$P(VADM(1),",")
"RTN","SDECF2",30,0)
 I $G(CONVERT) X ^DD("FUNC",14,1)
"RTN","SDECF2",31,0)
 Q X
"RTN","SDECF2",32,0)
 ;
"RTN","SDECF2",33,0)
DEAD(PAT) ;EP; returns 1 if patient has died
"RTN","SDECF2",34,0)
 Q $S($G(^DPT(PAT,.35)):1,1:0)
"RTN","SDECF2",35,0)
 ;
"RTN","SDECF2",36,0)
DOD(PAT) ;EP; returns patient's date of death
"RTN","SDECF2",37,0)
 Q $$GET1^DIQ(2,PAT,.351)
"RTN","SDECFUNC")
0^106^B8710927^n/a
"RTN","SDECFUNC",1,0)
SDECFUNC ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECFUNC",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECFUNC",3,0)
 ;
"RTN","SDECFUNC",4,0)
 Q
"RTN","SDECFUNC",5,0)
 ;
"RTN","SDECFUNC",6,0)
FNDPATRN(STR,PAT) ;PEP - Find pattern in string.  Return beginning position.
"RTN","SDECFUNC",7,0)
 ;
"RTN","SDECFUNC",8,0)
 ; E.g.: $$FNDPATRN^SDECFUNC("ABC8RX","1A1N") will return 3.
"RTN","SDECFUNC",9,0)
 ;
"RTN","SDECFUNC",10,0)
 I '$L($G(STR))!('$L($G(PAT))) Q 0
"RTN","SDECFUNC",11,0)
 I STR'?@(".E"_PAT_".E") Q 0
"RTN","SDECFUNC",12,0)
 NEW I,J
"RTN","SDECFUNC",13,0)
 S J=0
"RTN","SDECFUNC",14,0)
 F I=1:1:$L(STR) I $E(STR,I,$L(STR))?@(PAT_".E") S J=I Q
"RTN","SDECFUNC",15,0)
 Q J
"RTN","SDECFUNC",16,0)
 ;
"RTN","SDECFUNC",17,0)
GETPATRN(STR,PAT) ;PEP - Retrieve pattern from string.
"RTN","SDECFUNC",18,0)
 ;
"RTN","SDECFUNC",19,0)
 ; E.g.: $$GETPATRN^SDECFUNC("ABC8RX","1A1N") will return "C8".
"RTN","SDECFUNC",20,0)
 ;
"RTN","SDECFUNC",21,0)
 I '$L($G(STR))!('$L($G(PAT))) Q ""
"RTN","SDECFUNC",22,0)
 NEW I,S
"RTN","SDECFUNC",23,0)
 S I=$$FNDPATRN^SDECFUNC(STR,PAT)
"RTN","SDECFUNC",24,0)
 I 'I Q ""
"RTN","SDECFUNC",25,0)
 S S=$E(STR,I,$L(STR))
"RTN","SDECFUNC",26,0)
 F I=1:1 Q:(S="")!(S?@PAT)  S S=$E(S,1,$L(S)-1)
"RTN","SDECFUNC",27,0)
 Q S
"RTN","SDECFUNC",28,0)
 ;
"RTN","SDECFUNC",29,0)
INTSET(FILE,FIELD,EXTVAL) ;PEP - Get Intnl Field Value Given Extnl Field Value
"RTN","SDECFUNC",30,0)
 ; For a set of codes type field
"RTN","SDECFUNC",31,0)
 ;
"RTN","SDECFUNC",32,0)
 ; E.g.: $$INTSET^SDECFUNC(9000001,.21,"RETIRED") returns 5.
"RTN","SDECFUNC",33,0)
 ;
"RTN","SDECFUNC",34,0)
 I '$G(FILE)!('$G(FIELD)) Q ""
"RTN","SDECFUNC",35,0)
 I $G(EXTVAL)="" Q ""
"RTN","SDECFUNC",36,0)
 I '$D(^DD(FILE,FIELD)) Q ""
"RTN","SDECFUNC",37,0)
 S EXTVAL=":"_EXTVAL_";"
"RTN","SDECFUNC",38,0)
 I $P(^DD(FILE,FIELD,0),"^",3)'[EXTVAL Q ""
"RTN","SDECFUNC",39,0)
 NEW %,%A,%B
"RTN","SDECFUNC",40,0)
 S %=$P(^DD(FILE,FIELD,0),"^",3),%A=$P(%,EXTVAL),%B=$L(%A,";")
"RTN","SDECFUNC",41,0)
 Q $P(%A,";",%B)
"RTN","SDECFUNC",42,0)
 ;
"RTN","SDECFUNC",43,0)
EXTSET(FILE,FIELD,INTVAL) ;PEP - Get Extnl Field Value Given Intnl Field Value
"RTN","SDECFUNC",44,0)
 ; For a set of codes type field
"RTN","SDECFUNC",45,0)
 ;
"RTN","SDECFUNC",46,0)
 ; E.g.: $$EXTSET^SDECFUNC(9000001,.21,5) returns "RETIRED".
"RTN","SDECFUNC",47,0)
 ;
"RTN","SDECFUNC",48,0)
 I '$G(FILE)!('$G(FIELD)) Q ""
"RTN","SDECFUNC",49,0)
 I $G(INTVAL)="" Q ""
"RTN","SDECFUNC",50,0)
 I '$D(^DD(FILE,FIELD)) Q ""
"RTN","SDECFUNC",51,0)
 I $P(^DD(FILE,FIELD,0),"^",3)'[INTVAL Q ""
"RTN","SDECFUNC",52,0)
 NEW %,%A
"RTN","SDECFUNC",53,0)
 S %=$P(^DD(FILE,FIELD,0),"^",3),%A=$P(%,(INTVAL_":"),2)
"RTN","SDECFUNC",54,0)
 Q $P(%A,";")
"RTN","SDECFUNC",55,0)
 ;
"RTN","SDECFUNC",56,0)
DECFRAC(X) ;PEP - Convert Decimal to Fraction (X contains Decimal number).
"RTN","SDECFUNC",57,0)
 ;
"RTN","SDECFUNC",58,0)
 ; E.g.: $$DECFRAC^SDECFUNC(.25) returns "1/4".
"RTN","SDECFUNC",59,0)
 ;
"RTN","SDECFUNC",60,0)
 Q:'$D(X) ""
"RTN","SDECFUNC",61,0)
 Q:$E(X)'="." ""
"RTN","SDECFUNC",62,0)
 NEW D,N
"RTN","SDECFUNC",63,0)
 S N=+$P(X,".",2)
"RTN","SDECFUNC",64,0)
 Q:'N ""
"RTN","SDECFUNC",65,0)
 S $P(D,"0",$L(+X))="" S D="1"_D
"RTN","SDECFUNC",66,0)
 F  Q:(N#2)  S N=N/2,D=D/2
"RTN","SDECFUNC",67,0)
 F  Q:(N#5)  S N=N/5,D=D/5
"RTN","SDECFUNC",68,0)
 Q N_"/"_D
"RTN","SDECFUNC",69,0)
 ;
"RTN","SDECFUNC",70,0)
C(X,Y) ;PEP - Center X in field length Y/IOM/80.
"RTN","SDECFUNC",71,0)
 Q $J("",$S($D(Y):Y,$G(IOM):IOM,1:80)-$L(X)\2)_X
"RTN","SDECFUNC",72,0)
 ;
"RTN","SDECFUNC",73,0)
GDT(JDT) ;PEP - Return Gregorian Date, given Julian Date.
"RTN","SDECFUNC",74,0)
 Q:'$G(JDT) -1
"RTN","SDECFUNC",75,0)
 S:'$D(DT) DT=$$DT^XLFDT
"RTN","SDECFUNC",76,0)
 Q $$HTE^XLFDT($P($$FMTH^XLFDT($E(DT,1,3)_"0101"),",")+JDT-1)
"RTN","SDECFUNC",77,0)
 ;
"RTN","SDECFUNC",78,0)
JDT(XBDT) ;PEP - Return Julian Date, given FM date.
"RTN","SDECFUNC",79,0)
 Q:'$D(XBDT) -1
"RTN","SDECFUNC",80,0)
 Q:'(XBDT?7N) -1
"RTN","SDECFUNC",81,0)
 S:'$D(DT) DT=$$DT^XLFDT
"RTN","SDECFUNC",82,0)
 Q $$FMDIFF^XLFDT(XBDT,$E(DT,1,3)_"0101")+1
"RTN","SDECFUNC",83,0)
 ;
"RTN","SDECFUNC",84,0)
USR() ;PEP - Return name of current user for ^VA(200.
"RTN","SDECFUNC",85,0)
 Q $S($G(DUZ):$S($D(^VA(200,DUZ,0)):$P(^(0),U),1:"UNKNOWN"),1:"DUZ UNDEFINED OR 0")
"RTN","SDECFUNC",86,0)
 ;
"RTN","SDECFUNC",87,0)
LOC() ;PEP - Return location name from file 4 based on DUZ(2).
"RTN","SDECFUNC",88,0)
 Q $S($G(DUZ(2)):$S($D(^DIC(4,DUZ(2),0)):$P(^(0),U),1:"UNKNOWN"),1:"DUZ(2) UNDEFINED OR 0")
"RTN","SDECFUNC",89,0)
 ;
"RTN","SDECFUNC",90,0)
CV(X) ;PEP - Given a Namespace, return current version.
"RTN","SDECFUNC",91,0)
 Q $$VERSION^XPDUTL(X)  ;IHS/SET/GTH XB*3*9 10/29/2002
"RTN","SDECFUNC",92,0)
 Q:'$L($G(X)) -1
"RTN","SDECFUNC",93,0)
 S X=$O(^DIC(9.4,"C",X,0))
"RTN","SDECFUNC",94,0)
 Q:'X -1
"RTN","SDECFUNC",95,0)
 Q $G(^DIC(9.4,X,"VERSION"),-1)
"RTN","SDECFUNC",96,0)
 ;
"RTN","SDECFUNC",97,0)
 ;Begin New Code;IHS/SET/GTH XB*3*9 10/29/2002
"RTN","SDECFUNC",98,0)
FNAME(N) ;PEP - Given File number, return File Name.
"RTN","SDECFUNC",99,0)
 Q:'$L($G(N)) -1
"RTN","SDECFUNC",100,0)
 S N=$O(^DD(N,0,"NM",""))
"RTN","SDECFUNC",101,0)
 Q:'$L(N) -1
"RTN","SDECFUNC",102,0)
 Q N
"RTN","SDECFUNC",103,0)
 ;
"RTN","SDECFUNC",104,0)
FGLOB(N) ;PEP - Given File number, return File Global.
"RTN","SDECFUNC",105,0)
 Q:'$L($G(N)) -1
"RTN","SDECFUNC",106,0)
 Q $G(^DIC(N,0,"GL"),-1)
"RTN","SDECFUNC",107,0)
 ;
"RTN","SDECFUNC",108,0)
ZEROTH(A,B,C,D,E,F,G,H,I,J,K) ;PEP - Return dd 0th node.  A is file #, rest fields.
"RTN","SDECFUNC",109,0)
 I '$G(A) Q -1
"RTN","SDECFUNC",110,0)
 I '$G(B) Q -1
"RTN","SDECFUNC",111,0)
 F %=67:1:75 Q:'$G(@($C(%)))  S A=+$P(^DD(A,B,0),U,2),B=@($C(%))
"RTN","SDECFUNC",112,0)
 I 'A!('B) Q -1
"RTN","SDECFUNC",113,0)
 I '$D(^DD(A,B,0)) Q -1
"RTN","SDECFUNC",114,0)
 Q U_$P(^DD(A,B,0),U,2)
"RTN","SDECFUNC",115,0)
 ;End New Code;IHS/SET/GTH XB*3*9 10/29/2002
"RTN","SDECFUNC",116,0)
 ;
"RTN","SDECGMR")
0^156^B946861^n/a
"RTN","SDECGMR",1,0)
SDECGMR ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECGMR",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECGMR",3,0)
 ;
"RTN","SDECGMR",4,0)
 Q
"RTN","SDECGMR",5,0)
 ;
"RTN","SDECGMR",6,0)
STOP(GMRSTOP,SDGMR)  ;get stop codes from field 688 of REQUEST SERVICES file 123.5
"RTN","SDECGMR",7,0)
 ; .GMRSTOP - returned array of STOP CODE pointers to CLINIC STOP file 40.7
"RTN","SDECGMR",8,0)
 ;            GMRSTOP(<clinic stop id>)=<clinic stop name>
"RTN","SDECGMR",9,0)
 ;  SDGMR   - (required) pointer to REQUEST/CONSULTATION file 123
"RTN","SDECGMR",10,0)
 N RS,SDDATA,SDI,SDIEN,SDNM
"RTN","SDECGMR",11,0)
 K GMRSTOP
"RTN","SDECGMR",12,0)
 S RS=$$GET1^DIQ(123,SDGMR_",",1,"I")  ;get TO SERVICE
"RTN","SDECGMR",13,0)
 D GETS^DIQ(123.5,RS_",","688*","IE","SDDATA")
"RTN","SDECGMR",14,0)
 S SDI=0 F  S SDI=$O(SDDATA(123.5688,SDI)) Q:SDI=""  D
"RTN","SDECGMR",15,0)
 .S SDIEN=$G(SDDATA(123.5688,SDI,.01,"I"))
"RTN","SDECGMR",16,0)
 .S SDNM=$G(SDDATA(123.5688,SDI,.01,"E"))
"RTN","SDECGMR",17,0)
 .S:+SDIEN GMRSTOP(SDIEN)=SDNM
"RTN","SDECGMR",18,0)
 Q
"RTN","SDECIDX")
0^144^B43106825^n/a
"RTN","SDECIDX",1,0)
SDECIDX ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECIDX",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECIDX",3,0)
 ;
"RTN","SDECIDX",4,0)
 ; The following entry point causes the ^XTMP("SDEC","IDX" global
"RTN","SDECIDX",5,0)
 ; to be rebuilt based on the scheduling of the SDEC BUILD IDX option.
"RTN","SDECIDX",6,0)
ENTRY ; When executed, the following actions will occur:
"RTN","SDECIDX",7,0)
 ; - purge existing ^XTMP("SDEC","IDX" data
"RTN","SDECIDX",8,0)
 ; - Loop through files 123, 403.3, 409.5, and 409.85 and placing content
"RTN","SDECIDX",9,0)
 ;   into the XTMP global for retrieval by the SDECIDX GET RPC call.
"RTN","SDECIDX",10,0)
 ;
"RTN","SDECIDX",11,0)
 D PURGE
"RTN","SDECIDX",12,0)
 D BUILD
"RTN","SDECIDX",13,0)
 Q
"RTN","SDECIDX",14,0)
 ;
"RTN","SDECIDX",15,0)
PURGE ;EP- Delete the content of the global and set zero node
"RTN","SDECIDX",16,0)
 ;
"RTN","SDECIDX",17,0)
 K ^XTMP("SDEC","IDX")
"RTN","SDECIDX",18,0)
 S ^XTMP("SDEC",0)=$$FMADD^XLFDT(DT,7)_U_$$DT^XLFDT
"RTN","SDECIDX",19,0)
 Q
"RTN","SDECIDX",20,0)
 ;
"RTN","SDECIDX",21,0)
BUILD ;EP- Generate content
"RTN","SDECIDX",22,0)
 ;
"RTN","SDECIDX",23,0)
 N FILE,CNT,DLM
"RTN","SDECIDX",24,0)
 S DLM="|"
"RTN","SDECIDX",25,0)
 F LP=123,403.5,409.3,409.85 D
"RTN","SDECIDX",26,0)
 .D BLD(LP)
"RTN","SDECIDX",27,0)
 D SETNODEC(CNT)
"RTN","SDECIDX",28,0)
 Q
"RTN","SDECIDX",29,0)
 ;
"RTN","SDECIDX",30,0)
BLD(FIL) ;EP-
"RTN","SDECIDX",31,0)
 I FIL=123 D  Q
"RTN","SDECIDX",32,0)
 .D BLD123
"RTN","SDECIDX",33,0)
 E  I FIL=403.5 D  Q
"RTN","SDECIDX",34,0)
 .D BLD4035
"RTN","SDECIDX",35,0)
 E  I FIL=409.3 D  Q
"RTN","SDECIDX",36,0)
 .D BLD4093
"RTN","SDECIDX",37,0)
 E  I FIL=409.85 D  Q
"RTN","SDECIDX",38,0)
 .D BLD40985
"RTN","SDECIDX",39,0)
 Q
"RTN","SDECIDX",40,0)
 ;
"RTN","SDECIDX",41,0)
BLD123 ;EP- REQUEST/CONSULTATION (C)
"RTN","SDECIDX",42,0)
 Q:'$$TEST("REQGET^SDEC51")
"RTN","SDECIDX",43,0)
 ;Key stored in 4Oth piece
"RTN","SDECIDX",44,0)
 ;SVCCONN - 27th piece
"RTN","SDECIDX",45,0)
 ;SVCCONNP - 28th piece
"RTN","SDECIDX",46,0)
 ;WLSVCCON - no value use ""
"RTN","SDECIDX",47,0)
 ;Desired DATE - no value use 0
"RTN","SDECIDX",48,0)
 ;Origination Date - ORIGDT - 2nd piece
"RTN","SDECIDX",49,0)
 ;Priority Group (PRIGRP header)- 24th piece
"RTN","SDECIDX",50,0)
 N LP,NOD,NODRMG,GBL,SDSUB,SVCP
"RTN","SDECIDX",51,0)
 N SDECY,SDECY1,SDBEG,SDEND,MAXREC,LASTSUB,SORTSTR
"RTN","SDECIDX",52,0)
 S GBL="~GMR(123,"
"RTN","SDECIDX",53,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^C|WAITTIME^>=90|ALL^C",,,200)
"RTN","SDECIDX",54,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",55,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",56,0)
 .D REQGET^SDEC(.SDECY1,,,,,$P(NODRMG,U,2))
"RTN","SDECIDX",57,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",58,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",59,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",60,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,1)_DLM_"C",NOD,40)
"RTN","SDECIDX",61,0)
 .I $P(NOD,U,8)'="" D
"RTN","SDECIDX",62,0)
 ..K SDSUB
"RTN","SDECIDX",63,0)
 ..S SDSUB($P(NOD,U,8))=""
"RTN","SDECIDX",64,0)
 ..D SETXREF("C","E",.SDSUB,$P(NOD,U,1))
"RTN","SDECIDX",65,0)
 .K @SDECY1
"RTN","SDECIDX",66,0)
 K @SDECY
"RTN","SDECIDX",67,0)
 Q
"RTN","SDECIDX",68,0)
BLD4035 ;EP- RECALL REMINDERS (R)
"RTN","SDECIDX",69,0)
 Q:'$$TEST("RECGET^SDEC52")
"RTN","SDECIDX",70,0)
 ;Key stored in 42nd piece
"RTN","SDECIDX",71,0)
 ;SVCCONN - 28th piece
"RTN","SDECIDX",72,0)
 ;SVCCONNP - 29th piece
"RTN","SDECIDX",73,0)
 ;WLSVCCON - no value use ""
"RTN","SDECIDX",74,0)
 ;Desired DATE - 19th piece - External format
"RTN","SDECIDX",75,0)
 ;Origination Date - ORIGDT - 32nd piece
"RTN","SDECIDX",76,0)
 ;Priority Group (PRIGRP header)- 25th piece
"RTN","SDECIDX",77,0)
 N LP,NOD,NODRMG,GBL,SVCP,SORTSTR
"RTN","SDECIDX",78,0)
 N SDECY,SDECY1,DFN,SDBEG,SDEND,MAXREC,LASTSUB
"RTN","SDECIDX",79,0)
 S GBL="~SD(403.5,"
"RTN","SDECIDX",80,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^R|WAITTIME^>=90",,,200)
"RTN","SDECIDX",81,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",82,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",83,0)
 .D RECGET^SDEC(.SDECY1,,,,,,$P(NODRMG,U,2))
"RTN","SDECIDX",84,0)
 .D SETNODEP(GBL,@SDECY1@(0))
"RTN","SDECIDX",85,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",86,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",87,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,1)_DLM_"R",NOD,42)
"RTN","SDECIDX",88,0)
 .K @SDECY1
"RTN","SDECIDX",89,0)
 K @SDECY
"RTN","SDECIDX",90,0)
 Q
"RTN","SDECIDX",91,0)
BLD4093 ;EP- SD WAIT LIST (E)
"RTN","SDECIDX",92,0)
 Q:'$$TEST("WLGET^SDECWL1")
"RTN","SDECIDX",93,0)
 ;Key stored in 56th piece
"RTN","SDECIDX",94,0)
 ;SVCCONN - 36th piece
"RTN","SDECIDX",95,0)
 ;SVCCONNP - 37th piece
"RTN","SDECIDX",96,0)
 ;Desired DATE - 24th piece
"RTN","SDECIDX",97,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECIDX",98,0)
 ;Enrollment Priority Group (PRIGRP header) - 33rd piece
"RTN","SDECIDX",99,0)
 ;WLSVCCON - 44th piece
"RTN","SDECIDX",100,0)
 N LP,NOD,NODRMG,GBL,SCPRI,SVCP
"RTN","SDECIDX",101,0)
 N SDECY,SDECY1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SORTSTR
"RTN","SDECIDX",102,0)
 S GBL="~SDWL(409.3,"
"RTN","SDECIDX",103,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^E|WAITTIME^>=90",,,200)
"RTN","SDECIDX",104,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",105,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",106,0)
 .D WLGET^SDEC(.SDECY1,$P(NODRMG,U,2))
"RTN","SDECIDX",107,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",108,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",109,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",110,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,7)_DLM_"E",NOD,56)
"RTN","SDECIDX",111,0)
 .K @SDECY1
"RTN","SDECIDX",112,0)
 K @SDECY
"RTN","SDECIDX",113,0)
 Q
"RTN","SDECIDX",114,0)
BLD40985 ;EP- SDEC APPT REQUEST (A)
"RTN","SDECIDX",115,0)
 Q:'$$TEST("ARGET^SDECAR1")
"RTN","SDECIDX",116,0)
 ;Key stored in 56th piece
"RTN","SDECIDX",117,0)
 ;SVCCONN - 29th piece
"RTN","SDECIDX",118,0)
 ;SVCCONNP - 30th piece
"RTN","SDECIDX",119,0)
 ;Desired DATE - 20th piece
"RTN","SDECIDX",120,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECIDX",121,0)
 ;Priority Group (PRIGRP header) - 26th piece
"RTN","SDECIDX",122,0)
 ;WLSVCCON = 37th piece
"RTN","SDECIDX",123,0)
 N LP,NOD,NODRMG,GBL,SVCP,SORTSTR
"RTN","SDECIDX",124,0)
 N SDECY,SDECY1,DFN,MAXREC,LASTSUB,ARIEN1,SDBEG,SDEND
"RTN","SDECIDX",125,0)
 S GBL="~SDEC(409.85,"
"RTN","SDECIDX",126,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^A|WAITTIME^>=90",,,200)
"RTN","SDECIDX",127,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",128,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",129,0)
 .D ARGET^SDEC(.SDECY1,$P(NODRMG,U,2))
"RTN","SDECIDX",130,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",131,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",132,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",133,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,7)_DLM_"A",NOD,56)
"RTN","SDECIDX",134,0)
 .K @SDECY1
"RTN","SDECIDX",135,0)
 K @SDECY
"RTN","SDECIDX",136,0)
 Q
"RTN","SDECIDX",137,0)
 ;
"RTN","SDECIDX",138,0)
SETNODE(S1,S3,VAL,KEYP) ;EP-
"RTN","SDECIDX",139,0)
 ; S1   - Sort String
"RTN","SDECIDX",140,0)
 ; S2   - not used
"RTN","SDECIDX",141,0)
 ; S3   - GBL | IEN | <request type> ACER
"RTN","SDECIDX",142,0)
 ; VAL  -
"RTN","SDECIDX",143,0)
 ; KEYP -
"RTN","SDECIDX",144,0)
 Q:'$L($D(S1))!'$L($D(S3))
"RTN","SDECIDX",145,0)
 N KEY
"RTN","SDECIDX",146,0)
 S KEY=S1_DLM_S3
"RTN","SDECIDX",147,0)
 S CNT=$G(CNT)+1
"RTN","SDECIDX",148,0)
 S VAL=$P(VAL,$C(30))
"RTN","SDECIDX",149,0)
 S:$G(KEYP) $P(VAL,U,KEYP)=KEY
"RTN","SDECIDX",150,0)
 S ^XTMP("SDEC","IDX","XREF1",S1,0,S3)=CNT
"RTN","SDECIDX",151,0)
 S ^XTMP("SDEC","IDX","DATA",CNT)=$G(VAL)
"RTN","SDECIDX",152,0)
 S ^XTMP("SDEC","IDX","XREF2",KEY)=CNT
"RTN","SDECIDX",153,0)
 Q
"RTN","SDECIDX",154,0)
 ;
"RTN","SDECIDX",155,0)
SETXREF(S4,S5,DX,DA,VAL) ;request type specific xref for 1 entry
"RTN","SDECIDX",156,0)
 ;  S4  = request type A C E or R
"RTN","SDECIDX",157,0)
 ;  S5  = xref subscript
"RTN","SDECIDX",158,0)
 ; .DX  = array of subscripts
"RTN","SDECIDX",159,0)
 ;  DA  = pointer to request type
"RTN","SDECIDX",160,0)
 ; VAL  = value to set xref to; default to ""
"RTN","SDECIDX",161,0)
 N SDI,SDSUB
"RTN","SDECIDX",162,0)
 S VAL=$G(VAL)
"RTN","SDECIDX",163,0)
 S SDSUB=""
"RTN","SDECIDX",164,0)
 S SDI="" F  S SDI=$O(DX(SDI)) Q:SDI=""  D
"RTN","SDECIDX",165,0)
 .S SDSUB=$S(SDSUB'="":SDSUB_",",1:"")_SDI
"RTN","SDECIDX",166,0)
 S ^XTMP("SDEC","IDX","XREF"_S4,S5,SDSUB,DA)=VAL
"RTN","SDECIDX",167,0)
 Q
"RTN","SDECIDX",168,0)
 ;
"RTN","SDECIDX",169,0)
SETNODEC(CNT) ;EP-
"RTN","SDECIDX",170,0)
 S ^XTMP("SDEC","IDX","COUNT")=$G(CNT)
"RTN","SDECIDX",171,0)
 Q
"RTN","SDECIDX",172,0)
 ;
"RTN","SDECIDX",173,0)
SETNODEP(GBL,VAL) ;EP-
"RTN","SDECIDX",174,0)
 Q:'$L($D(GBL))
"RTN","SDECIDX",175,0)
 S ^XTMP("SDEC","IDX","PATTERNS",GBL)=$P($G(VAL),$C(30))
"RTN","SDECIDX",176,0)
 Q
"RTN","SDECIDX",177,0)
 ;
"RTN","SDECIDX",178,0)
PC(VAL,PIECE,DLM) ;EP-
"RTN","SDECIDX",179,0)
 S DLM=$G(DLM,U)
"RTN","SDECIDX",180,0)
 Q $P($G(VAL),DLM,+$G(PIECE))
"RTN","SDECIDX",181,0)
 ;
"RTN","SDECIDX",182,0)
 ; Test for tag/routine
"RTN","SDECIDX",183,0)
TEST(X) ;EP
"RTN","SDECIDX",184,0)
 N Z
"RTN","SDECIDX",185,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","SDECIDX",186,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","SDECIDX",187,0)
 X ^%ZOSF("TEST")
"RTN","SDECIDX",188,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","SDECIDX",189,0)
 ;
"RTN","SDECIDX",190,0)
 ; The GETREC entry point is called by the SDECIDX GETREC RPC.
"RTN","SDECIDX",191,0)
 ; Input: LASTREC - (optional) holds the key to the last call and when passed
"RTN","SDECIDX",192,0)
 ;                             the next bolus of data will start with the
"RTN","SDECIDX",193,0)
 ;                             following record.
"RTN","SDECIDX",194,0)
 ;        MAXREC - (optional) returns 25 records by default
"RTN","SDECIDX",195,0)
 ;        STYLE -  (optional) (D)ata (default) or (R)ecord pointer.
"RTN","SDECIDX",196,0)
 ;                  (D)ata returns data in the format specific to the file
"RTN","SDECIDX",197,0)
 ;                  (R)ecord returns the Type^IEN of the Type file
"RTN","SDECIDX",198,0)
 ;
"RTN","SDECIDX",199,0)
GETREC(DATA,LASTREC,MAXREC,STYLE) ;EP-
"RTN","SDECIDX",200,0)
 N LP,REC,IDX,CNT,DLM
"RTN","SDECIDX",201,0)
 S DLM="|"
"RTN","SDECIDX",202,0)
 S DATA=$$TMPGBL
"RTN","SDECIDX",203,0)
 S LASTREC=$G(LASTREC,"")
"RTN","SDECIDX",204,0)
 S MAXREC=$G(MAXREC,25)
"RTN","SDECIDX",205,0)
 S STYLE=$G(STYLE,"D")
"RTN","SDECIDX",206,0)
 S CNT=0
"RTN","SDECIDX",207,0)
 I STYLE="D" D
"RTN","SDECIDX",208,0)
 .S LP=LASTREC F  S LP=$O(^XTMP("SDEC","IDX","XREF2",LP)) Q:LP=""  D  Q:((CNT\2)=MAXREC)
"RTN","SDECIDX",209,0)
 ..S REC=^(LP)
"RTN","SDECIDX",210,0)
 ..I $$PC(LP,8,DLM)="R",'$D(^SD(403.5,$$PC(LP,7,DLM),0)) Q    ;record has been moved to RECALL REMINDERS REMOVED
"RTN","SDECIDX",211,0)
 ..S REC=$P(^XTMP("SDEC","IDX","DATA",REC),$C(30))
"RTN","SDECIDX",212,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",213,0)
 ..S @DATA@(CNT)=$G(^XTMP("SDEC","IDX","PATTERNS",$P(LP,DLM,6)))_$C(30)
"RTN","SDECIDX",214,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",215,0)
 ..S @DATA@(CNT)=REC_$C(30)
"RTN","SDECIDX",216,0)
 E  I STYLE="R" D
"RTN","SDECIDX",217,0)
 .S @DATA@(0)="T00030TYPE^T00030IEN^T00030KEY"_$C(30)
"RTN","SDECIDX",218,0)
 .S LP=LASTREC F  S LP=$O(^XTMP("SDEC","IDX","XREF2",LP)) Q:LP=""  D  Q:(CNT=MAXREC)
"RTN","SDECIDX",219,0)
 ..I $$PC(LP,8,DLM)="R",'$D(^SD(403.5,$$PC(LP,7,DLM),0)) Q    ;record has been moved to RECALL REMINDERS REMOVED
"RTN","SDECIDX",220,0)
 ..I $$PC(LP,8,DLM)="C",$$REQCHK^SDEC51("",$$PC(LP,7,DLM)) Q    ;record has an activity scheduled or has been cancelled
"RTN","SDECIDX",221,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",222,0)
 ..S @DATA@(CNT)=$$PC(LP,8,DLM)_U_$$PC(LP,7,DLM)_U_LP_$C(30)
"RTN","SDECIDX",223,0)
 S @DATA@(CNT)=$P(@DATA@(CNT),$C(30))_$C(30,31)
"RTN","SDECIDX",224,0)
 Q
"RTN","SDECIDX",225,0)
 ;
"RTN","SDECIDX",226,0)
TMPGBL() ;EP-
"RTN","SDECIDX",227,0)
 K ^TMP("SDECIDX",$J) Q $NA(^($J))
"RTN","SDECIDX",228,0)
 ; Convert external dates to FileMan format
"RTN","SDECIDX",229,0)
CVTDT(VAL) ;EP-
"RTN","SDECIDX",230,0)
 D DT^DILF(,VAL,.VAL)
"RTN","SDECIDX",231,0)
 Q VAL
"RTN","SDECIDX",232,0)
 ; Returns inverse date value
"RTN","SDECIDX",233,0)
INVDT(VAL) ;EP-
"RTN","SDECIDX",234,0)
 Q:(VAL<1) VAL
"RTN","SDECIDX",235,0)
 Q (9999999.9999-VAL)
"RTN","SDECIDX",236,0)
RECCNT(DATA) ;EP-
"RTN","SDECIDX",237,0)
 S DATA=+$G(^XTMP("SDEC","IDX","COUNT"))
"RTN","SDECIDX",238,0)
 Q
"RTN","SDECINI1")
0^131^B187190488^n/a
"RTN","SDECINI1",1,0)
SDECINI1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECINI1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECINI1",3,0)
 ;
"RTN","SDECINI1",4,0)
 Q
"RTN","SDECINI1",5,0)
 ;
"RTN","SDECINI1",6,0)
RESAB  ;populate SDEC ACCESS BLOCK file from existing AVAILABILITY in file 44
"RTN","SDECINI1",7,0)
 Q
"RTN","SDECINI1",8,0)
 ;
"RTN","SDECINI1",9,0)
SDWLCL  ;populate SD WL CLINIC LOCATION file with clinics from file 44
"RTN","SDECINI1",10,0)
 N SDCL,SDCLID,SDCLN,SDCLRD,SDDATA,SDFDA,SDFIELDS,SDIEN,SDMSG,SDW
"RTN","SDECINI1",11,0)
 W !!,"Updating SD WL CLINIC LOCATION file 409.32 with clinics from file 44..."
"RTN","SDECINI1",12,0)
 S SDCL=0 F  S SDCL=$O(^SC(SDCL)) Q:SDCL'>0  D
"RTN","SDECINI1",13,0)
 .K SDDATA,SDMSG
"RTN","SDECINI1",14,0)
 .; .01 name; 2 type; 1912 len of appt; 2508 no show let; 2509 pre-appt let; 2510 clinic can let;
"RTN","SDECINI1",15,0)
 .;S SDFIELDS=".01;2;3;1912;2502.3;2505;2506;2508;2509;2510"
"RTN","SDECINI1",16,0)
 .S SDFIELDS=".01;2;3;1912;2505;2506;2508;2509;2510"
"RTN","SDECINI1",17,0)
 .D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDECINI1",18,0)
 .Q:SDDATA(44,SDCL_",",2,"I")'="C"
"RTN","SDECINI1",19,0)
 .;Q:SDDATA(44,SDCL_",",2502.3,"I")=1
"RTN","SDECINI1",20,0)
 .S SDCLN=SDDATA(44,SDCL_",",.01,"E")   ;clinic name
"RTN","SDECINI1",21,0)
 .;look for existing to allow this post-init to be re-entrant
"RTN","SDECINI1",22,0)
 .I $O(^SDWL(409.32,"B",SDCL,0)) D SDWLCL1(SDCL,.SDDATA) Q  ;W !,"SDWLCL: Clinic "_SDCLN_" is already defined in SD WL CLINIC LOCATION." Q
"RTN","SDECINI1",23,0)
 .S SDCLID=SDDATA(44,SDCL_",",2505,"I")
"RTN","SDECINI1",24,0)
 .S SDCLRD=SDDATA(44,SDCL_",",2506,"I")
"RTN","SDECINI1",25,0)
 .Q:$$INACTIVE^SDECUTL2(SDCL,$P($$NOW^XLFDT,".",1),9991231,SDCLID,SDCLRD)
"RTN","SDECINI1",26,0)
 .I SDDATA(44,SDCL_",",3,"I")="" D  Q
"RTN","SDECINI1",27,0)
 ..W !,"SDWLCL: Clinic "_SDCLN_" does not have an INSTITUTION defined in file 44."
"RTN","SDECINI1",28,0)
 ..W !,"        Unable to store "_SDCLN_" in the SD WL CLINIC LOCATION file."
"RTN","SDECINI1",29,0)
 .S SDW="+1"
"RTN","SDECINI1",30,0)
 .K SDFDA,SDIEN,SDMSG
"RTN","SDECINI1",31,0)
 .S SDFDA=$NA(SDFDA(409.32,SDW_","))
"RTN","SDECINI1",32,0)
 .S @SDFDA@(.01)=SDCL
"RTN","SDECINI1",33,0)
 .S @SDFDA@(.02)=SDDATA(44,SDCL_",",3,"I")
"RTN","SDECINI1",34,0)
 .I SDCLID="" S @SDFDA@(1)=$P($$NOW^XLFDT,".",1)
"RTN","SDECINI1",35,0)
 .I SDCLID="" S @SDFDA@(2)=DUZ
"RTN","SDECINI1",36,0)
 .I SDCLID'="" S @SDFDA@(3)=SDDATA(44,SDCL_",",2505,"I")
"RTN","SDECINI1",37,0)
 .I SDCLID'="" S @SDFDA@(4)=DUZ  ;SDDATA(44,SDCL_",",2506,"I")
"RTN","SDECINI1",38,0)
 .D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDECINI1",39,0)
 .I $D(SDMSG) W !,"SDWLCL: Unable to store clinic "_SDCL_" in SD WL CLINIC LOCATION." Q
"RTN","SDECINI1",40,0)
 Q
"RTN","SDECINI1",41,0)
SDWLCL1(SDCL,SDDATA)  ;
"RTN","SDECINI1",42,0)
 N SDAD,SDCLI,SDCLAD,SDCLID,SDCLRD,SDFDA,SDI,SDID
"RTN","SDECINI1",43,0)
 S SDI="" F  S SDI=$O(^SDWL(409.32,"B",SDCL,SDI)) Q:SDI'>0  D
"RTN","SDECINI1",44,0)
 .S SDAD=$$GET1^DIQ(409.32,SDI_",",1,"I")
"RTN","SDECINI1",45,0)
 .S SDID=$$GET1^DIQ(409.32,SDI_",",3,"I")
"RTN","SDECINI1",46,0)
 .S SDCLAD=$P($$NOW^XLFDT,".",1)
"RTN","SDECINI1",47,0)
 .S SDCLID=SDDATA(44,SDCL_",",2505,"I")
"RTN","SDECINI1",48,0)
 .S SDCLRD=SDDATA(44,SDCL_",",2506,"I")
"RTN","SDECINI1",49,0)
 .S SDCLI=$$INACTIVE^SDECUTL2(SDCL,SDCLAD,9991231,SDCLID,SDCLRD)
"RTN","SDECINI1",50,0)
 .Q:SDCLI=0  ;leave the settings in 409.32 as they are if clinic is active
"RTN","SDECINI1",51,0)
 .;I SDCLI=0 D  ;clinic is active
"RTN","SDECINI1",52,0)
 .;.I SDID="",((SDAD="")!(SDAD>SDCLAD)) D
"RTN","SDECINI1",53,0)
 .;..K SDFDA
"RTN","SDECINI1",54,0)
 .;..S SDFDA=$NA(SDFDA(409.32,SDI_","))
"RTN","SDECINI1",55,0)
 .;..S @SDFDA@(1)=SDCLAD
"RTN","SDECINI1",56,0)
 .;..S @SDFDA@(2)=DUZ
"RTN","SDECINI1",57,0)
 .;..D UPDATE^DIE("","SDFDA")
"RTN","SDECINI1",58,0)
 .I SDCLI=1 D  ;clinic is inactive
"RTN","SDECINI1",59,0)
 ..I SDID'="",SDID<=SDCLAD Q   ;409.32 is already inactive
"RTN","SDECINI1",60,0)
 ..K SDFDA
"RTN","SDECINI1",61,0)
 ..S SDFDA=$NA(SDFDA(409.32,SDI_","))
"RTN","SDECINI1",62,0)
 ..S @SDFDA@(3)=SDCLAD
"RTN","SDECINI1",63,0)
 ..S @SDFDA@(4)=DUZ
"RTN","SDECINI1",64,0)
 ..D UPDATE^DIE("","SDFDA")
"RTN","SDECINI1",65,0)
 Q
"RTN","SDECINI1",66,0)
 ;
"RTN","SDECINI1",67,0)
INDEX ;initialize new xrefs
"RTN","SDECINI1",68,0)
 N CNT,DA,DIK,GMR,SDCL,SDWL,Y
"RTN","SDECINI1",69,0)
 ;
"RTN","SDECINI1",70,0)
 ;44
"RTN","SDECINI1",71,0)
 ;AVADPR in file 44
"RTN","SDECINI1",72,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI1",73,0)
 W !!,"Build new 'AVADPR' and 'AG' indexes for HOSPITAL LOCATION file 44"
"RTN","SDECINI1",74,0)
 W !,Y
"RTN","SDECINI1",75,0)
 S SDCL=0 F  S SDCL=$O(^SC(SDCL)) Q:SDCL'>0  D AVADPR44(SDCL)
"RTN","SDECINI1",76,0)
 D AG44()  ;AG
"RTN","SDECINI1",77,0)
 ;
"RTN","SDECINI1",78,0)
 ;403.5
"RTN","SDECINI1",79,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI1",80,0)
 W !!,"Build new 'AC' index for RECALL REMINDERS file 403.5"
"RTN","SDECINI1",81,0)
 W !,Y
"RTN","SDECINI1",82,0)
 D AC4035()   ;AC
"RTN","SDECINI1",83,0)
 ;
"RTN","SDECINI1",84,0)
 ;403.56
"RTN","SDECINI1",85,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI1",86,0)
 W !!,"Build new 'AC' index for RECALL REMINDERS REMOVED file 403.56"
"RTN","SDECINI1",87,0)
 W !,Y
"RTN","SDECINI1",88,0)
 D AC40356()  ;AC
"RTN","SDECINI1",89,0)
 ;
"RTN","SDECINI1",90,0)
 ;409.3
"RTN","SDECINI1",91,0)
 ;E in file 409.3
"RTN","SDECINI1",92,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI1",93,0)
 W !!,"Build new 'E','AC','AD', and 'AE' indexes for SD WAIT LIST file 409.3"
"RTN","SDECINI1",94,0)
 W !,Y
"RTN","SDECINI1",95,0)
 N DA,DIK,SDCL
"RTN","SDECINI1",96,0)
 D E4093()      ;E
"RTN","SDECINI1",97,0)
 D AE4093()     ;AE
"RTN","SDECINI1",98,0)
 D AC4093()     ;AC
"RTN","SDECINI1",99,0)
 D AD4093()     ;AD
"RTN","SDECINI1",100,0)
 ;
"RTN","SDECINI1",101,0)
 ;409.831
"RTN","SDECINI1",102,0)
 D AC409831()
"RTN","SDECINI1",103,0)
 ;
"RTN","SDECINI1",104,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI1",105,0)
 W !!,"Build new 'AD' index for SDEC RESOURCE USER file 409.833"
"RTN","SDECINI1",106,0)
 W !,Y
"RTN","SDECINI1",107,0)
 D AD833()
"RTN","SDECINI1",108,0)
 ;
"RTN","SDECINI1",109,0)
 ;409.85
"RTN","SDECINI1",110,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI1",111,0)
 W !!,"Build new 'E' and 'AC' index for SDEC APPT REQUEST file 409.85"
"RTN","SDECINI1",112,0)
 W !,Y
"RTN","SDECINI1",113,0)
 D E40985()
"RTN","SDECINI1",114,0)
 ;
"RTN","SDECINI1",115,0)
 ;123  this will be done in GMRC*3.0*83
"RTN","SDECINI1",116,0)
 ;S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI1",117,0)
 ;W !!,"Build new 'AG' index for REQUEST/CONSULTATION file 123"
"RTN","SDECINI1",118,0)
 ;W !,Y
"RTN","SDECINI1",119,0)
 ;D I123()
"RTN","SDECINI1",120,0)
 Q
"RTN","SDECINI1",121,0)
 ;
"RTN","SDECINI1",122,0)
AC409831() ;create and build NEW style AC for all SDEC RESOURCE entries in file 44
"RTN","SDECINI1",123,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",124,0)
 S GMRCXR("FILE")=409.831
"RTN","SDECINI1",125,0)
 S GMRCXR("NAME")="AC"
"RTN","SDECINI1",126,0)
 S GMRCXR("TYPE")="MU"
"RTN","SDECINI1",127,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",128,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",129,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",130,0)
 S GMRCXR("SHORT DESCR")="Index of RESOURCE TYPE"
"RTN","SDECINI1",131,0)
 S GMRCXR("DESCR",1)="This cross-reference is built from both pieces of the"
"RTN","SDECINI1",132,0)
 S GMRCXR("DESCR",2)="RESOURCE TYPE variable pointer field to speed up the"
"RTN","SDECINI1",133,0)
 S GMRCXR("DESCR",3)="sorting of resources when given a specific source and ID."
"RTN","SDECINI1",134,0)
 S GMRCXR("DESCR",4)="The sources could be HOSPITAL LOCATION, NEW PERSON, or SDEC"
"RTN","SDECINI1",135,0)
 S GMRCXR("DESCR",5)="ADDITIONAL RESOURCE."
"RTN","SDECINI1",136,0)
 S GMRCXR("SET")="D RTS^SDEC03(DA,X) Q"
"RTN","SDECINI1",137,0)
 S GMRCXR("KILL")="D RTK^SDEC03(DA,X) Q"
"RTN","SDECINI1",138,0)
 S GMRCXR("WHOLE KILL")="K ^SDEC(409.831,""AC"")"
"RTN","SDECINI1",139,0)
 S GMRCXR("VAL",1)=.012
"RTN","SDECINI1",140,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",141,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",142,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",143,0)
 S GMRCXR("VAL",1,"TYPE")="F"
"RTN","SDECINI1",144,0)
 S GMRCXR("VAL",2)=.012
"RTN","SDECINI1",145,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",146,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",147,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",148,0)
 S GMRCXR("VAL",2,"TYPE")="F"
"RTN","SDECINI1",149,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",150,0)
 Q
"RTN","SDECINI1",151,0)
 ;
"RTN","SDECINI1",152,0)
AG44() ;create and build NEW style AG for all HOSPITAL LOCATION entries in file 44
"RTN","SDECINI1",153,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",154,0)
 S GMRCXR("FILE")=44
"RTN","SDECINI1",155,0)
 S GMRCXR("NAME")="AG"
"RTN","SDECINI1",156,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",157,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",158,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",159,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",160,0)
 S GMRCXR("SHORT DESCR")="Index by TYPE and NAME."
"RTN","SDECINI1",161,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by TYPE and NAME."
"RTN","SDECINI1",162,0)
 S GMRCXR("VAL",1)=2
"RTN","SDECINI1",163,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",164,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",165,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",166,0)
 S GMRCXR("VAL",2)=.01
"RTN","SDECINI1",167,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",168,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",169,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",170,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",171,0)
 Q
"RTN","SDECINI1",172,0)
 ;
"RTN","SDECINI1",173,0)
AVADPR44(SDCL) ;rebuild AVADPR for given Hospital Location in file 44
"RTN","SDECINI1",174,0)
 N DA,DIK,SDI
"RTN","SDECINI1",175,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"PR",SDI)) Q:SDI'>0  D
"RTN","SDECINI1",176,0)
 .S DIK="^SC("_SDCL_",""PR"","
"RTN","SDECINI1",177,0)
 .S DA(1)=SDCL
"RTN","SDECINI1",178,0)
 .S DA=SDI
"RTN","SDECINI1",179,0)
 .S DIK(1)=".01^AVADPR"
"RTN","SDECINI1",180,0)
 .D EN1^DIK
"RTN","SDECINI1",181,0)
 Q
"RTN","SDECINI1",182,0)
 ;
"RTN","SDECINI1",183,0)
AC4035() ;create and build NEW style AC for all RECALL REMINDERS entries in file 403.5
"RTN","SDECINI1",184,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",185,0)
 K GMRCXR
"RTN","SDECINI1",186,0)
 S GMRCXR("FILE")=403.5
"RTN","SDECINI1",187,0)
 S GMRCXR("INDEX")="AC"
"RTN","SDECINI1",188,0)
 S GMRCXR("FLAGS")="K"
"RTN","SDECINI1",189,0)
 D DELIXN^DDMOD(GMRCXR("FILE"),GMRCXR("INDEX"),GMRCXR("FLAGS"))
"RTN","SDECINI1",190,0)
 K GMRCXR
"RTN","SDECINI1",191,0)
 S GMRCXR("FILE")=403.5
"RTN","SDECINI1",192,0)
 S GMRCXR("NAME")="AC"
"RTN","SDECINI1",193,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",194,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",195,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",196,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",197,0)
 S GMRCXR("SHORT DESCR")="Index by DATE/TIME RECALL ADDED and USER WHO ENTERED RECALL"
"RTN","SDECINI1",198,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by DATE/TIME RECALL ADDED"
"RTN","SDECINI1",199,0)
 S GMRCXR("DESCR",2)="and USER WHO ENTERED RECALL."
"RTN","SDECINI1",200,0)
 S GMRCXR("VAL",1)=7.5
"RTN","SDECINI1",201,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",202,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",203,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",204,0)
 S GMRCXR("VAL",2)=7
"RTN","SDECINI1",205,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",206,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",207,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",208,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",209,0)
 Q
"RTN","SDECINI1",210,0)
 ;
"RTN","SDECINI1",211,0)
AC40356() ;create and build NEW style AC for all RECALL REMINDERS REMOVED entries in file 403.56
"RTN","SDECINI1",212,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",213,0)
 K GMRCXR
"RTN","SDECINI1",214,0)
 S GMRCXR("FILE")=403.56
"RTN","SDECINI1",215,0)
 S GMRCXR("INDEX")="AC"
"RTN","SDECINI1",216,0)
 S GMRCXR("FLAGS")="K"
"RTN","SDECINI1",217,0)
 D DELIXN^DDMOD(GMRCXR("FILE"),GMRCXR("INDEX"),GMRCXR("FLAGS"))
"RTN","SDECINI1",218,0)
 K GMRCXR
"RTN","SDECINI1",219,0)
 S GMRCXR("FILE")=403.56
"RTN","SDECINI1",220,0)
 S GMRCXR("NAME")="AC"
"RTN","SDECINI1",221,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",222,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",223,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",224,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",225,0)
 S GMRCXR("SHORT DESCR")="Index by DATE/TIME RECALL ADDED and USER WHO ENTERED RECALL"
"RTN","SDECINI1",226,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by DATE/TIME RECALL ADDED"
"RTN","SDECINI1",227,0)
 S GMRCXR("DESCR",2)="and USER WHO ENTERED RECALL."
"RTN","SDECINI1",228,0)
 S GMRCXR("VAL",1)=7.5
"RTN","SDECINI1",229,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",230,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",231,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",232,0)
 S GMRCXR("VAL",2)=7
"RTN","SDECINI1",233,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",234,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",235,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",236,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",237,0)
 Q
"RTN","SDECINI1",238,0)
 ;
"RTN","SDECINI1",239,0)
E4093(SDWL) ;rebuild E for given SD WAIT LIST in file 409.3
"RTN","SDECINI1",240,0)
 N DA,DIK
"RTN","SDECINI1",241,0)
 S DIK="^SDWL(409.3,"
"RTN","SDECINI1",242,0)
 ;S DA(1)=SDWL
"RTN","SDECINI1",243,0)
 S DIK(1)=23
"RTN","SDECINI1",244,0)
 D ENALL^DIK
"RTN","SDECINI1",245,0)
 Q
"RTN","SDECINI1",246,0)
AF4093() ;create and build NEW style AF for all SD WAIT LIST entries in file 409.3
"RTN","SDECINI1",247,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",248,0)
 S GMRCXR("FILE")=409.3
"RTN","SDECINI1",249,0)
 S GMRCXR("NAME")="AF"
"RTN","SDECINI1",250,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",251,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",252,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",253,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",254,0)
 ;S GMRCXR("ROOT TYPE")="W"
"RTN","SDECINI1",255,0)
 ;S GMRCXR("ROOT FILE")=123.02
"RTN","SDECINI1",256,0)
 S GMRCXR("SHORT DESCR")="Index by CURRENT STATUS and ORIGINATING DATE."
"RTN","SDECINI1",257,0)
 S GMRCXR("DESCR",1)="This xref is used to speed up the lookup of open or closed"
"RTN","SDECINI1",258,0)
 S GMRCXR("DESCR",2)="wait list entries for a given time range.."
"RTN","SDECINI1",259,0)
 S GMRCXR("VAL",1)=23
"RTN","SDECINI1",260,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",261,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",262,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",263,0)
 S GMRCXR("VAL",2)=1
"RTN","SDECINI1",264,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",265,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",266,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",267,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",268,0)
 Q
"RTN","SDECINI1",269,0)
AE4093(SDWL) ;rebuild AE for given SD WAIT LIST in file 409.3
"RTN","SDECINI1",270,0)
 N DA,DIK
"RTN","SDECINI1",271,0)
 S DIK="^SDWL(409.3,"
"RTN","SDECINI1",272,0)
 ;S DA(1)=SDWL
"RTN","SDECINI1",273,0)
 S DIK(1)=8.5
"RTN","SDECINI1",274,0)
 D ENALL^DIK
"RTN","SDECINI1",275,0)
 Q
"RTN","SDECINI1",276,0)
AC4093() ;create and build NEW style AC for all SD WAIT LIST entries in file 409.3
"RTN","SDECINI1",277,0)
 N GMRCXR
"RTN","SDECINI1",278,0)
 K GMRCXR
"RTN","SDECINI1",279,0)
 S GMRCXR("FILE")=409.3
"RTN","SDECINI1",280,0)
 S GMRCXR("INDEX")="AC"
"RTN","SDECINI1",281,0)
 S GMRCXR("FLAGS")="K"
"RTN","SDECINI1",282,0)
 D DELIXN^DDMOD(GMRCXR("FILE"),GMRCXR("INDEX"),GMRCXR("FLAGS"))
"RTN","SDECINI1",283,0)
 K GMRCXR
"RTN","SDECINI1",284,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",285,0)
 S GMRCXR("FILE")=409.3
"RTN","SDECINI1",286,0)
 S GMRCXR("NAME")="AC"
"RTN","SDECINI1",287,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",288,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",289,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",290,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",291,0)
 S GMRCXR("SHORT DESCR")="Index by ORIGINATING DATE and ORIGINATING USER"
"RTN","SDECINI1",292,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by ORIGINATING DATE and"
"RTN","SDECINI1",293,0)
 S GMRCXR("DESCR",2)="ORIGINATING USER."
"RTN","SDECINI1",294,0)
 S GMRCXR("VAL",1)=9.5
"RTN","SDECINI1",295,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",296,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",297,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",298,0)
 S GMRCXR("VAL",2)=9
"RTN","SDECINI1",299,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",300,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",301,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",302,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",303,0)
 Q
"RTN","SDECINI1",304,0)
AD4093() ;create and build NEW style AD for all SD WAIT LIST entries in file 409.3
"RTN","SDECINI1",305,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",306,0)
 N GMRCXR
"RTN","SDECINI1",307,0)
 K GMRCXR
"RTN","SDECINI1",308,0)
 S GMRCXR("FILE")=409.3
"RTN","SDECINI1",309,0)
 S GMRCXR("INDEX")="AD"
"RTN","SDECINI1",310,0)
 S GMRCXR("FLAGS")="K"
"RTN","SDECINI1",311,0)
 D DELIXN^DDMOD(GMRCXR("FILE"),GMRCXR("INDEX"),GMRCXR("FLAGS"))
"RTN","SDECINI1",312,0)
 K GMRCXR
"RTN","SDECINI1",313,0)
 S GMRCXR("FILE")=409.3
"RTN","SDECINI1",314,0)
 S GMRCXR("NAME")="AD"
"RTN","SDECINI1",315,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",316,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",317,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",318,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",319,0)
 S GMRCXR("SHORT DESCR")="Index by PATIENT and WL SPECIFIC HOSPITAL LOCATION"
"RTN","SDECINI1",320,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by PATIENT and"
"RTN","SDECINI1",321,0)
 S GMRCXR("DESCR",2)="WL SPECIFIC HOSPITAL LOCATION."
"RTN","SDECINI1",322,0)
 S GMRCXR("VAL",1)=.01
"RTN","SDECINI1",323,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",324,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",325,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",326,0)
 S GMRCXR("VAL",2)=8.5
"RTN","SDECINI1",327,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",328,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",329,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",330,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",331,0)
 Q
"RTN","SDECINI1",332,0)
 ;
"RTN","SDECINI1",333,0)
E40985() ;create NEW style E and AC for SDEC APPT REQUEST file 409.85
"RTN","SDECINI1",334,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",335,0)
 S GMRCXR("FILE")=409.85
"RTN","SDECINI1",336,0)
 S GMRCXR("NAME")="E"
"RTN","SDECINI1",337,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",338,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",339,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",340,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",341,0)
 S GMRCXR("SHORT DESCR")="Index by CURRENT STATUS and CREATE DATE."
"RTN","SDECINI1",342,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by CURRENT STATUS and CREATE DATE."
"RTN","SDECINI1",343,0)
 S GMRCXR("VAL",1)=23
"RTN","SDECINI1",344,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",345,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",346,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",347,0)
 S GMRCXR("VAL",2)=1
"RTN","SDECINI1",348,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",349,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",350,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",351,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",352,0)
 ;AC
"RTN","SDECINI1",353,0)
 K GMRCXR
"RTN","SDECINI1",354,0)
 S GMRCXR("FILE")=409.85
"RTN","SDECINI1",355,0)
 S GMRCXR("INDEX")="AC"
"RTN","SDECINI1",356,0)
 S GMRCXR("FLAGS")="K"
"RTN","SDECINI1",357,0)
 D DELIXN^DDMOD(GMRCXR("FILE"),GMRCXR("INDEX"),GMRCXR("FLAGS"))
"RTN","SDECINI1",358,0)
 K GMRCXR
"RTN","SDECINI1",359,0)
 S GMRCXR("FILE")=409.85
"RTN","SDECINI1",360,0)
 S GMRCXR("NAME")="AC"
"RTN","SDECINI1",361,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",362,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",363,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",364,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",365,0)
 S GMRCXR("SHORT DESCR")="Index by CREATE DATE and ORIGINATING USER"
"RTN","SDECINI1",366,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by CREATE DATE and"
"RTN","SDECINI1",367,0)
 S GMRCXR("DESCR",2)="ORIGINATING USER."
"RTN","SDECINI1",368,0)
 S GMRCXR("VAL",1)=9.5
"RTN","SDECINI1",369,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",370,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",371,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",372,0)
 S GMRCXR("VAL",2)=9
"RTN","SDECINI1",373,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",374,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",375,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",376,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",377,0)
 Q
"RTN","SDECINI1",378,0)
 ;
"RTN","SDECINI1",379,0)
AD833() ;create and build NEW style AD for all SDEC RESOURCE USER entries in file 409.833
"RTN","SDECINI1",380,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",381,0)
 K GMRCXR
"RTN","SDECINI1",382,0)
 S GMRCXR("FILE")=409.833
"RTN","SDECINI1",383,0)
 S GMRCXR("INDEX")="AD"
"RTN","SDECINI1",384,0)
 S GMRCXR("FLAGS")="K"
"RTN","SDECINI1",385,0)
 D DELIXN^DDMOD(GMRCXR("FILE"),GMRCXR("INDEX"),GMRCXR("FLAGS"))
"RTN","SDECINI1",386,0)
 K GMRCXR
"RTN","SDECINI1",387,0)
 S GMRCXR("FILE")=409.833
"RTN","SDECINI1",388,0)
 S GMRCXR("NAME")="AD"
"RTN","SDECINI1",389,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",390,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",391,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",392,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",393,0)
 ;S GMRCXR("ROOT TYPE")="W"
"RTN","SDECINI1",394,0)
 ;S GMRCXR("ROOT FILE")=123.02
"RTN","SDECINI1",395,0)
 S GMRCXR("SHORT DESCR")="Index by RESOURCENAME and USERNAME."
"RTN","SDECINI1",396,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by RESOURCENAME and USERNAME."
"RTN","SDECINI1",397,0)
 S GMRCXR("VAL",1)=.01
"RTN","SDECINI1",398,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",399,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",400,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",401,0)
 S GMRCXR("VAL",2)=.02
"RTN","SDECINI1",402,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",403,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",404,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",405,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",406,0)
 Q
"RTN","SDECINI1",407,0)
 ;
"RTN","SDECINI1",408,0)
I123() ;create and build NEW style AG for all REQUEST/CONSULTATION entries in file 123
"RTN","SDECINI1",409,0)
 N GMRCXR,GMRCRES,GMRCOUT
"RTN","SDECINI1",410,0)
 S GMRCXR("FILE")=123
"RTN","SDECINI1",411,0)
 S GMRCXR("NAME")="AG"
"RTN","SDECINI1",412,0)
 S GMRCXR("TYPE")="R"
"RTN","SDECINI1",413,0)
 S GMRCXR("USE")="S"
"RTN","SDECINI1",414,0)
 S GMRCXR("EXECUTION")="R"
"RTN","SDECINI1",415,0)
 S GMRCXR("ACTIVITY")="IR"
"RTN","SDECINI1",416,0)
 S GMRCXR("SHORT DESCR")="Index by DATE/TIME OF ACTION ENTRY and WHO ENTERED ACTIVITY."
"RTN","SDECINI1",417,0)
 S GMRCXR("ROOT TYPE")="W"
"RTN","SDECINI1",418,0)
 S GMRCXR("ROOT FILE")=123.02
"RTN","SDECINI1",419,0)
 S GMRCXR("DESCR",1)="This cross reference is used to sort by DATE/TIME OF ACTION ENTRY and"
"RTN","SDECINI1",420,0)
 S GMRCXR("DESCR",2)="WHO ENTERED ACTIVITY."
"RTN","SDECINI1",421,0)
 S GMRCXR("VAL",1)=.01
"RTN","SDECINI1",422,0)
 S GMRCXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECINI1",423,0)
 S GMRCXR("VAL",1,"LENGTH")=""
"RTN","SDECINI1",424,0)
 S GMRCXR("VAL",1,"COLLATION")="F"
"RTN","SDECINI1",425,0)
 S GMRCXR("VAL",2)=4
"RTN","SDECINI1",426,0)
 S GMRCXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECINI1",427,0)
 S GMRCXR("VAL",2,"LENGTH")=""
"RTN","SDECINI1",428,0)
 S GMRCXR("VAL",2,"COLLATION")="F"
"RTN","SDECINI1",429,0)
 D CREIXN^DDMOD(.GMRCXR,"S",.GMRCRES,"GMRCOUT")
"RTN","SDECINI1",430,0)
 Q
"RTN","SDECINI2")
0^132^B137379509^n/a
"RTN","SDECINI2",1,0)
SDECINI2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECINI2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECINI2",3,0)
 ;
"RTN","SDECINI2",4,0)
 ;Reference is made to ICR #6185
"RTN","SDECINI2",5,0)
 Q
"RTN","SDECINI2",6,0)
 ;
"RTN","SDECINI2",7,0)
SDAPPT  ;populate SDEC APPOINTMENT file with all existing patient appointments
"RTN","SDECINI2",8,0)
 N DFN,SDA,SDAPL,SDCAPL,SDCL,SDDATA,SDFDA,SDI,SDIEN,SDMSG,SDNOD,SDPRV,SDS,SDSP,SDTODAY,Y
"RTN","SDECINI2",9,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",10,0)
 W !!,"Updating SDEC APPOINTMENT file 409.84 with existing patient appointments..."
"RTN","SDECINI2",11,0)
 W !,Y
"RTN","SDECINI2",12,0)
 S SDTODAY=$P($$NOW^XLFDT,".",1)
"RTN","SDECINI2",13,0)
 S DFN=0 F  S DFN=$O(^DPT(DFN)) Q:DFN'>0  D
"RTN","SDECINI2",14,0)
 .S SDS=SDTODAY F  S SDS=$O(^DPT(DFN,"S",SDS)) Q:SDS'>0  D
"RTN","SDECINI2",15,0)
 ..D SDECADD
"RTN","SDECINI2",16,0)
 ;cleanup previous appointment lengths that did not account for variable appt length
"RTN","SDECINI2",17,0)
 S SDI=SDTODAY F  S SDI=$O(^SDEC(409.84,"B",SDI),-1) Q:SDI=""  D
"RTN","SDECINI2",18,0)
 .S SDIEN="" F  S SDIEN=$O(^SDEC(409.84,"B",SDI,SDIEN)) Q:SDIEN=""  D
"RTN","SDECINI2",19,0)
 ..S SDNOD=$G(^SDEC(409.84,SDIEN,0))
"RTN","SDECINI2",20,0)
 ..S SDRES=$P(SDNOD,U,7)
"RTN","SDECINI2",21,0)
 ..S SDCL=$$GET1^DIQ(409.831,+SDRES_",",.04,"I")
"RTN","SDECINI2",22,0)
 ..Q:SDCL=""
"RTN","SDECINI2",23,0)
 ..S DFN=$P(SDNOD,U,5)
"RTN","SDECINI2",24,0)
 ..S SDS=$P(SDNOD,U,1)
"RTN","SDECINI2",25,0)
 ..S SDSP=$$FNDAPPT(SDCL,DFN,SDS)
"RTN","SDECINI2",26,0)
 ..S SDAPL=$P($G(^SC(SDCL,"S",SDS,1,+SDSP,0)),U,2)
"RTN","SDECINI2",27,0)
 ..S SDCAPL=$S(SDAPL'="":SDAPL,1:$P($G(^SC(SDCL,"SL")),U,1))
"RTN","SDECINI2",28,0)
 ..I SDCAPL'=$P(SDNOD,U,18) D APL(SDIEN,SDS,SDCAPL)
"RTN","SDECINI2",29,0)
 ;
"RTN","SDECINI2",30,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",31,0)
 W !!,Y
"RTN","SDECINI2",32,0)
 W !,"END - Updating SDEC APPOINTMENT file 409.84 with existing patient appointments..."
"RTN","SDECINI2",33,0)
 Q
"RTN","SDECINI2",34,0)
SDECADD  ;add SDEC APPOINTMENT entry
"RTN","SDECINI2",35,0)
 N SDAPL,SDCAPL,SDAPTYP,SDCAN,SDCHK,SDCL,SDCLN,SDECAPPTID,SDECFDA,SDECIEN,SDECMSG,SDECRESD
"RTN","SDECINI2",36,0)
 N SDNOS,SDREC,SDSP,SDSTAT,SDVPRV,SDWL
"RTN","SDECINI2",37,0)
 K SDDATA,SDMSG
"RTN","SDECINI2",38,0)
 D GETS^DIQ(2.98,SDS_","_DFN_",","**","IE","SDDATA","SDMSG")
"RTN","SDECINI2",39,0)
 S SDA="SDDATA(2.98,"""_SDS_","_DFN_","")"
"RTN","SDECINI2",40,0)
 S SDFDA=$NA(SDFDA(409.84,"+1,"))
"RTN","SDECINI2",41,0)
 S SDCL=@SDA@(.01,"I")
"RTN","SDECINI2",42,0)
 S SDCLN=@SDA@(.01,"E")
"RTN","SDECINI2",43,0)
 S SDECRESD=$O(^SDEC(409.831,"B",SDCLN,0))
"RTN","SDECINI2",44,0)
 S SDSP=$$FNDAPPT(SDCL,DFN,SDS)   ;get clinic appt pointer
"RTN","SDECINI2",45,0)
 ;look for SDWL, consult, then recall. If none found, add APPT entry
"RTN","SDECINI2",46,0)
 S SDAPTYP=""
"RTN","SDECINI2",47,0)
 S SDWL=$$FNDSDWL(DFN,SDS,SDCL) I SDWL'="" S SDAPTYP=SDWL_";SDWL(409.3,"
"RTN","SDECINI2",48,0)
 I SDAPTYP="" I SDSP'="",$P($G(^SC(SDCL,"S",SDS,1,SDSP,"CONS")),U,1)'="" S SDAPTYP=$P($G(^SC(SDCL,"S",SDS,1,SDSP,"CONS")),U,1)_";GMR(123,"
"RTN","SDECINI2",49,0)
 I SDAPTYP="" S SDREC=$$RECALL^SDECUTL(DFN,SDS,SDCL) I SDREC'="" S SDAPTYP=SDREC_";SD(403.5,"
"RTN","SDECINI2",50,0)
 ;I SDAPTYP="" S SDAPPT=$$FNDAREQ(DFN,SDS,SDCL) I SDAPPT'="" S SDAPTYP=SDAPPT_";SDEC(409.84,"
"RTN","SDECINI2",51,0)
 ;Q:$$SDECCHK(DFN,SDS,SDECRESD,SDAPTYP)   ;check appt already exists
"RTN","SDECINI2",52,0)
 S SDAPL=$P($G(^SC(SDCL,"S",SDS,1,+SDSP,0)),U,2)
"RTN","SDECINI2",53,0)
 S SDCAPL=$S(SDAPL'="":SDAPL,1:$P($G(^SC(SDCL,"SL")),U,1))   ;appt length
"RTN","SDECINI2",54,0)
 Q:$$SDECCHK(DFN,SDS,SDECRESD,,SDCAPL)   ;check appt already exists
"RTN","SDECINI2",55,0)
 I SDAPTYP="" S SDWL=$$SDWLA^SDM1A(DFN,SDS,SDCL,@SDA@(27,"I"),@SDA@(9.5,"I")) I SDWL'="" S SDAPTYP=SDWL_";SDEC(409.85,"
"RTN","SDECINI2",56,0)
 S:SDAPTYP'="" @SDFDA@(.22)=SDAPTYP
"RTN","SDECINI2",57,0)
 ;Create entry in SDEC APPOINTMENT
"RTN","SDECINI2",58,0)
 S SDSTAT=@SDA@(3,"I")                           ;status
"RTN","SDECINI2",59,0)
 S SDNOS=$S(SDSTAT="N":1,SDSTAT="NA":1,1:0)      ;no show flag
"RTN","SDECINI2",60,0)
 S SDCAN=$S(SDSTAT="C":1,SDSTAT="CA":1,SDSTAT="PC":1,SDSTAT="PCA":1,1:0)  ;cancel flag
"RTN","SDECINI2",61,0)
 S SDCHK=$S(SDSP'="":$G(^SC(SDCL,"S",SDS,1,SDSP,"C")),1:"")               ;clinic C checkin node
"RTN","SDECINI2",62,0)
 ;
"RTN","SDECINI2",63,0)
 S @SDFDA@(.01)=SDS                              ;start time
"RTN","SDECINI2",64,0)
 S @SDFDA@(.02)=$$FMADD^XLFDT(SDS,,,SDCAPL)       ;end time
"RTN","SDECINI2",65,0)
 S:$P(SDCHK,U,1) @SDFDA@(.03)=$P(SDCHK,U,1)      ;check-in
"RTN","SDECINI2",66,0)
 S:$P(SDCHK,U,5) @SDFDA@(.04)=$P(SDCHK,U,5)      ;check-in time entered
"RTN","SDECINI2",67,0)
 S @SDFDA@(.05)=DFN
"RTN","SDECINI2",68,0)
 ;S:SDECATID?.N @SDFDA@(.06)=SDECATID
"RTN","SDECINI2",69,0)
 S @SDFDA@(.07)=SDECRESD                         ;resource
"RTN","SDECINI2",70,0)
 S @SDFDA@(.08)=@SDA@(19,"I")                    ;entered by
"RTN","SDECINI2",71,0)
 S @SDFDA@(.09)=@SDA@(20,"I")                    ;date appt made
"RTN","SDECINI2",72,0)
 S @SDFDA@(.1)=+SDNOS                            ;no show 1=YES 0=NO
"RTN","SDECINI2",73,0)
 S:SDNOS @SDFDA@(.101)=@SDA@(15,"I")             ;no show date/time
"RTN","SDECINI2",74,0)
 S:SDNOS @SDFDA@(.102)=@SDA@(14,"I")             ;no show user
"RTN","SDECINI2",75,0)
 S:@SDA@(12,"I")'="" @SDFDA@(.11)=@SDA@(12,"I")  ;auto rebook date/time
"RTN","SDECINI2",76,0)
 S:SDCAN @SDFDA@(.12)=@SDA@(15,"I")              ;cancel date/time (same as no show date/time)
"RTN","SDECINI2",77,0)
 S:SDCAN @SDFDA@(.121)=@SDA@(14,"I")             ;cancel by user
"RTN","SDECINI2",78,0)
 S:SDCAN @SDFDA@(.122)=@SDA@(16,"I")             ;cancellation reason
"RTN","SDECINI2",79,0)
 S:@SDA@(25,"I")="W" @SDFDA@(.13)="y"            ;walk-in
"RTN","SDECINI2",80,0)
 S:$P(SDCHK,U,3)'="" @SDFDA@(.14)=$P(SDCHK,U,3)  ;checked out date/time
"RTN","SDECINI2",81,0)
 S SDVPRV=$$FNDVPRV(DFN,SDS)
"RTN","SDECINI2",82,0)
 S:$P(SDVPRV,U,1)'="" @SDFDA@(.15)=$P(SDVPRV,U,1)  ;v provider
"RTN","SDECINI2",83,0)
 S:$P(SDVPRV,U,2)'="" @SDFDA@(.16)=$P(SDVPRV,U,2)  ;provider
"RTN","SDECINI2",84,0)
 S @SDFDA@(.17)=""
"RTN","SDECINI2",85,0)
 S @SDFDA@(.18)=SDCAPL                              ;appt length
"RTN","SDECINI2",86,0)
 S @SDFDA@(.19)=""
"RTN","SDECINI2",87,0)
 S @SDFDA@(.2)=@SDA@(27,"I")                       ;desired date of appt
"RTN","SDECINI2",88,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECINI2",89,0)
 K SDECIEN,SDECMSG
"RTN","SDECINI2",90,0)
 Q
"RTN","SDECINI2",91,0)
 ;
"RTN","SDECINI2",92,0)
FNDVPRV(DFN,APPDT)   ;get v provider for given patient and date/time
"RTN","SDECINI2",93,0)
 N SDI,SDNOD,SDRET
"RTN","SDECINI2",94,0)
 S SDRET=""
"RTN","SDECINI2",95,0)
 S SDI=0 F  S SDI=$O(^AUPNVPRV("B",DFN,SDI)) Q:SDI'>0  D  Q:SDRET'=""
"RTN","SDECINI2",96,0)
 .Q:$$GET1^DIQ(9000010.06,SDI_",",12,"I")'=APPDT
"RTN","SDECINI2",97,0)
 .S SDRET=SDI_U_$$GET1^DIQ(9000010.06,SDI_",",.01,"I")
"RTN","SDECINI2",98,0)
 Q SDRET
"RTN","SDECINI2",99,0)
 ;
"RTN","SDECINI2",100,0)
FNDAPPT(SDCL,DFN,SDS)  ;get clinic appointment pointer
"RTN","SDECINI2",101,0)
 N SDI,SDRET
"RTN","SDECINI2",102,0)
 S SDRET=""
"RTN","SDECINI2",103,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"S",SDS,1,SDI)) Q:SDI'>0  D  Q:SDRET'=""
"RTN","SDECINI2",104,0)
 .I DFN=$$GET1^DIQ(44.003,SDI_","_SDS_","_SDCL_",",.01,"I") S SDRET=SDI
"RTN","SDECINI2",105,0)
 Q SDRET
"RTN","SDECINI2",106,0)
 ;
"RTN","SDECINI2",107,0)
FNDSDWL(DFN,SDS,SDCL)   ;get wait list entry
"RTN","SDECINI2",108,0)
 N SDI,SDNOD,SDRET
"RTN","SDECINI2",109,0)
 S SDRET=""
"RTN","SDECINI2",110,0)
 S SDI=0 F  S SDI=$O(^SDWL(409.3,"B",DFN,SDI)) Q:SDI'>0  D  Q:SDRET'=""
"RTN","SDECINI2",111,0)
 .S SDNOD=$G(^SDWL(409.3,SDI,"SDAPT"))
"RTN","SDECINI2",112,0)
 .I $P($G(^SDWL(409.3,SDI,0)),U,23)=SDS,$P(SDNOD,U,2)=SDCL S SDRET=SDI
"RTN","SDECINI2",113,0)
 Q SDRET
"RTN","SDECINI2",114,0)
 ;
"RTN","SDECINI2",115,0)
FNDAREQ(DFN,SDS,SDCL)   ;get SDEC APPT REQUEST entry
"RTN","SDECINI2",116,0)
 N SDI,SDNOD,SDRET
"RTN","SDECINI2",117,0)
 S SDRET=""
"RTN","SDECINI2",118,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,"B",DFN,SDI)) Q:SDI'>0  D  Q:SDRET'=""
"RTN","SDECINI2",119,0)
 .S SDNOD=$G(^SDEC(409.85,SDI,"SDAPT"))
"RTN","SDECINI2",120,0)
 .I $P(SDNOD,U,1)=SDS,$P(SDNOD,U,2)=SDCL S SDRET=SDI
"RTN","SDECINI2",121,0)
 Q SDRET
"RTN","SDECINI2",122,0)
 ;
"RTN","SDECINI2",123,0)
SDECCHK(DFN,SDS,SDRES,SDAPTYP,SDCAPL)  ;check for existing SDEC APPOINTMENT entry
"RTN","SDECINI2",124,0)
 N SDFDA,SDI,SDNOD,SDNOD2,SDRET,SDTYP
"RTN","SDECINI2",125,0)
 ;S:$G(SDAPTYP)="" SDAPTYP=";SDEC(409.85,"
"RTN","SDECINI2",126,0)
 S SDRET=0
"RTN","SDECINI2",127,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.84,"CPAT",DFN,SDI)) Q:SDI'>0  D  Q:+SDRET
"RTN","SDECINI2",128,0)
 .S SDNOD=$G(^SDEC(409.84,SDI,0))
"RTN","SDECINI2",129,0)
 .;S SDNOD2=$G(^SDEC(409.84,SDI,2))
"RTN","SDECINI2",130,0)
 .I $P(SDNOD,U,1)=SDS,$P(SDNOD,U,7)=SDRES S SDRET=SDI D
"RTN","SDECINI2",131,0)
 ..;I $P($P(SDNOD2,U,1),";",2)=$P(SDAPTYP,";",2) S SDRET=SDI
"RTN","SDECINI2",132,0)
 ..;check request type
"RTN","SDECINI2",133,0)
 ..S SDTYP=$P($G(^SDEC(409.84,SDI,2)),U,1)
"RTN","SDECINI2",134,0)
 ..I $P(SDTYP,";",2)="SDWL(409.3," D
"RTN","SDECINI2",135,0)
 ...I $D(^SDWL(409.3,$P(SDTYP,";",1),0)),$$GET1^DIQ(409.3,$P(SDTYP,";",1),.01,"I")=DFN Q
"RTN","SDECINI2",136,0)
 ...I $D(^SDEC(409.85,$P(SDTYP,";",1),0)),$$GET1^DIQ(409.85,$P(SDTYP,";",1),.01,"I")=DFN D
"RTN","SDECINI2",137,0)
 ....S SDFDA(409.84,SDI_",",.22)=$P(SDTYP,";",1)_";SDEC(409.85,"
"RTN","SDECINI2",138,0)
 ....D UPDATE^DIE("","SDFDA")
"RTN","SDECINI2",139,0)
 ..I $P(SDNOD,U,18)'=SDCAPL D APL(SDI,SDS,SDCAPL)
"RTN","SDECINI2",140,0)
 Q SDRET
"RTN","SDECINI2",141,0)
APL(SDIEN,SDS,SDCAPL)  ;
"RTN","SDECINI2",142,0)
 N SDFDA
"RTN","SDECINI2",143,0)
 S SDFDA(409.84,SDIEN_",",.18)=SDCAPL
"RTN","SDECINI2",144,0)
 S SDFDA(409.84,SDIEN_",",.02)=$$FMADD^XLFDT(SDS,,,SDCAPL)
"RTN","SDECINI2",145,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECINI2",146,0)
 Q
"RTN","SDECINI2",147,0)
 ;
"RTN","SDECINI2",148,0)
CHK  ;check cross-reference integrity
"RTN","SDECINI2",149,0)
 N SDA,SDDT,SDI,SDNAM,SDNOD,SDNOD1,SDNOD2,Y
"RTN","SDECINI2",150,0)
 W !!,"No changes taking place during existing cross-reference validity checks."
"RTN","SDECINI2",151,0)
 ;B xref in file 44
"RTN","SDECINI2",152,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",153,0)
 W !!,"BEGIN existing cross-reference validity checks for B xref of file 44."
"RTN","SDECINI2",154,0)
 W !,Y
"RTN","SDECINI2",155,0)
 S SDNAM="" F  S SDNAM=$O(^SC("B",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",156,0)
 .S SDI="" F  S SDI=$O(^SC("B",SDNAM,SDI)) Q:SDI=""  D
"RTN","SDECINI2",157,0)
 ..I '$D(^SC(+SDI,0)) S SDA(44,"B","INVALID",SDI,SDNAM)="" Q
"RTN","SDECINI2",158,0)
 ..S SDNOD=$E($$GET1^DIQ(44,+SDI_",",.01),1,30)
"RTN","SDECINI2",159,0)
 ..I SDNOD="" S SDA(44,"B","MISMATCH",+SDI,SDNAM,"<no name>")="" Q
"RTN","SDECINI2",160,0)
 ..I $E(SDNOD,1,30)'=$E(SDNAM,1,30) S SDA(44,"B","MISMATCH",+SDI,SDNAM,SDNOD)="" Q
"RTN","SDECINI2",161,0)
 I '$D(SDA(44,"B")) W !,"  No issues found."
"RTN","SDECINI2",162,0)
 I $D(SDA(44,"B")) W !,"  See summary below."
"RTN","SDECINI2",163,0)
 ;B xref in file 409.3 SD WAIT LIST
"RTN","SDECINI2",164,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",165,0)
 W !!,"BEGIN existing cross-reference validity checks for B xref of file 409.3."
"RTN","SDECINI2",166,0)
 W !,Y
"RTN","SDECINI2",167,0)
 S SDNAM="" F  S SDNAM=$O(^SDWL(409.3,"B",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",168,0)
 .S SDI="" F  S SDI=$O(^SDWL(409.3,"B",SDNAM,SDI)) Q:SDI=""  D
"RTN","SDECINI2",169,0)
 ..I '$D(^SDWL(409.3,+SDI,0)) S SDA(409.3,"B","INVALID",SDI,SDNAM)="" Q
"RTN","SDECINI2",170,0)
 ..S SDNOD=$E($$GET1^DIQ(409.3,+SDI_",",.01,"I"),1,30)
"RTN","SDECINI2",171,0)
 ..I SDNOD="" S SDA(409.3,"B","MISMATCH",+SDI,SDNAM,"<no patient>")="" Q
"RTN","SDECINI2",172,0)
 ..I SDNOD'=SDNAM S SDA(409.3,"B","MISMATCH",+SDI,SDNAM,SDNOD)="" Q
"RTN","SDECINI2",173,0)
 I '$D(SDA(409.3,"B")) W !,"  No issues found."
"RTN","SDECINI2",174,0)
 I $D(SDA(409.3,"B")) W !,"  See summary below."
"RTN","SDECINI2",175,0)
 ;B xref in file 403.5 RECALL REMINDERS
"RTN","SDECINI2",176,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",177,0)
 W !!,"BEGIN existing cross-reference validity checks for B xref of file 403.5."
"RTN","SDECINI2",178,0)
 W !,Y
"RTN","SDECINI2",179,0)
 S SDNAM="" F  S SDNAM=$O(^SD(403.5,"B",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",180,0)
 .S SDI="" F  S SDI=$O(^SD(403.5,"B",SDNAM,SDI)) Q:SDI=""  D
"RTN","SDECINI2",181,0)
 ..I '$D(^SD(403.5,+SDI,0)) S SDA(403.5,"B","INVALID",SDI,SDNAM)="" Q
"RTN","SDECINI2",182,0)
 ..S SDNOD=$E($$GET1^DIQ(403.5,+SDI_",",.01,"I"),1,30)
"RTN","SDECINI2",183,0)
 ..I SDNOD="" S SDA(403.5,"B","MISMATCH",+SDI,SDNAM,"<no patient>")="" Q
"RTN","SDECINI2",184,0)
 ..I SDNOD'=SDNAM S SDA(403.5,"B","MISMATCH",+SDI,SDNAM,SDNOD)="" Q
"RTN","SDECINI2",185,0)
 I '$D(SDA(403.5,"B")) W !,"  No issues found."
"RTN","SDECINI2",186,0)
 I $D(SDA(403.5,"B")) W !,"  See summary below."
"RTN","SDECINI2",187,0)
 ;D xref in file 403.5 RECALL REMINDERS
"RTN","SDECINI2",188,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",189,0)
 W !!,"BEGIN existing cross-reference validity checks for D xref of file 403.5."
"RTN","SDECINI2",190,0)
 W !,Y
"RTN","SDECINI2",191,0)
 S SDNAM="" F  S SDNAM=$O(^SD(403.5,"D",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",192,0)
 .S SDI="" F  S SDI=$O(^SD(403.5,"D",SDNAM,SDI)) Q:SDI=""  D
"RTN","SDECINI2",193,0)
 ..I '$D(^SD(403.5,+SDI,0)) S SDA(403.5,"D","INVALID",SDI,SDNAM)="" Q
"RTN","SDECINI2",194,0)
 ..S SDNOD=$E($$GET1^DIQ(403.5,+SDI_",",5,"I"),1,30)
"RTN","SDECINI2",195,0)
 ..I SDNOD="" S SDA(403.5,"D","MISMATCH",+SDI,SDNAM,"<no patient>")="" Q
"RTN","SDECINI2",196,0)
 ..I SDNOD'=SDNAM S SDA(403.5,"D","MISMATCH",+SDI,SDNAM,SDNOD)="" Q
"RTN","SDECINI2",197,0)
 I '$D(SDA(403.5,"D")) W !,"  No issues found."
"RTN","SDECINI2",198,0)
 I $D(SDA(403.5,"D")) W !,"  See summary below."
"RTN","SDECINI2",199,0)
 ;AD xref in file 123 REQUEST/CONSULTATION  ICR 6185
"RTN","SDECINI2",200,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",201,0)
 W !!,"BEGIN existing cross-reference validity checks for AD xref of file 123."
"RTN","SDECINI2",202,0)
 W !,Y
"RTN","SDECINI2",203,0)
 S SDNAM="" F  S SDNAM=$O(^GMR(123,"AD",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",204,0)
 .S SDDT="" F  S SDDT=$O(^GMR(123,"AD",SDNAM,SDDT)) Q:SDDT=""  D
"RTN","SDECINI2",205,0)
 ..S SDI="" F  S SDI=$O(^GMR(123,"AD",SDNAM,SDDT,SDI)) Q:SDI=""  D
"RTN","SDECINI2",206,0)
 ...I '$D(^GMR(123,+SDI,0)) S SDA(123,"AD","INVALID",SDI,SDNAM)="" Q
"RTN","SDECINI2",207,0)
 ...S SDNOD1=$$GET1^DIQ(123,+SDI_",",.02,"I")
"RTN","SDECINI2",208,0)
 ...I SDNOD1="" S SDA(123,"AD","MISMATCH",+SDI,SDNAM,"<no patient>")="" Q
"RTN","SDECINI2",209,0)
 ...I SDNOD1'=SDNAM S SDA(123,"AD","MISMATCH",+SDI,SDNAM,SDNOD1)="" Q
"RTN","SDECINI2",210,0)
 ...S SDNOD2=$$GET1^DIQ(123,+SDI_",",3,"I")
"RTN","SDECINI2",211,0)
 ...I SDNOD2="" S SDA(123,"AD","MISMATCH",+SDI,SDDT,"<no date of request>")="" Q
"RTN","SDECINI2",212,0)
 ...S SDNOD2=9999999-SDNOD2
"RTN","SDECINI2",213,0)
 ...I SDNOD2'=SDDT S SDA(123,"AD","MISMATCH",+SDI,SDDT,SDNOD2)="" Q
"RTN","SDECINI2",214,0)
 I '$D(SDA(123,"AD")) W !,"  No issues found."
"RTN","SDECINI2",215,0)
 I $D(SDA(123,"AB")) W !,"  See summary below."
"RTN","SDECINI2",216,0)
 ;E xref in file 123 REQUEST/CONSULTATION   ICR 6185
"RTN","SDECINI2",217,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",218,0)
 W !!,"BEGIN existing cross-reference validity checks for E xref of file 123."
"RTN","SDECINI2",219,0)
 W !,Y
"RTN","SDECINI2",220,0)
 S SDNAM="" F  S SDNAM=$O(^GMR(123,"E",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",221,0)
 .S SDI="" F  S SDI=$O(^GMR(123,"E",SDNAM,SDI)) Q:SDI=""  D
"RTN","SDECINI2",222,0)
 ..I '$D(^GMR(123,+SDI,0)) S SDA(123,"E","INVALID",SDI,SDNAM)="" Q
"RTN","SDECINI2",223,0)
 ..S SDNOD=$$GET1^DIQ(123,+SDI_",",3,"I")
"RTN","SDECINI2",224,0)
 ..I SDNOD="" S SDA(123,"E","MISMATCH",+SDI,SDNAM,"<no patient>")="" Q
"RTN","SDECINI2",225,0)
 ..I SDNOD'=SDNAM S SDA(123,"E","MISMATCH",+SDI,SDNAM,SDNOD)="" Q
"RTN","SDECINI2",226,0)
 I '$D(SDA(123,"E")) W !,"  No issues found."
"RTN","SDECINI2",227,0)
 I $D(SDA(123,"E")) W !,"  See summary below."
"RTN","SDECINI2",228,0)
 ;AB xref in file 200 NEW PERSON
"RTN","SDECINI2",229,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",230,0)
 W !!,"BEGIN existing cross-reference validity checks for AB xref of file 200."
"RTN","SDECINI2",231,0)
 W !,Y
"RTN","SDECINI2",232,0)
 S SDNAM="" F  S SDNAM=$O(^VA(200,"AB",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",233,0)
 .S SDDT="" F  S SDDT=$O(^VA(200,"AB",SDNAM,SDDT)) Q:SDDT=""  D
"RTN","SDECINI2",234,0)
 ..S SDI="" F  S SDI=$O(^VA(200,"AB",SDNAM,SDDT,SDI)) Q:SDI=""  D
"RTN","SDECINI2",235,0)
 ...I '$D(^VA(200,+SDDT,51,SDI,0)) S SDA(200,"AB","INVALID",SDDT,SDNAM)=""  ;SDDT=id to 200; SDNAM=id to key
"RTN","SDECINI2",236,0)
 I '$D(SDA(200,"AB")) W !,"  No issues found."
"RTN","SDECINI2",237,0)
 I $D(SDA(200,"AB")) W !,"  See summary below."
"RTN","SDECINI2",238,0)
 ;B xref in file 200 NEW PERSON
"RTN","SDECINI2",239,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",240,0)
 W !!,"BEGIN existing cross-reference validity checks for B xref of file 200."
"RTN","SDECINI2",241,0)
 W !,Y
"RTN","SDECINI2",242,0)
 S SDNAM="" F  S SDNAM=$O(^VA(200,"B",SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",243,0)
 .S SDI="" F  S SDI=$O(^VA(200,"B",SDNAM,SDI)) Q:SDI=""  D
"RTN","SDECINI2",244,0)
 ..I '$D(^VA(200,+SDI,0)) S SDA(200,"B","INVALID",SDI,SDNAM)="" Q
"RTN","SDECINI2",245,0)
 ..S SDNOD=$E($$GET1^DIQ(200,+SDI_",",.01,"I"),1,30)
"RTN","SDECINI2",246,0)
 ..I SDNOD="" S SDA(200,"B","MISMATCH",+SDI,SDNAM,"<no new person>")="" Q
"RTN","SDECINI2",247,0)
 ..I $E(SDNOD,1,30)'=$E(SDNAM,1,30) S SDA(200,"B","MISMATCH",+SDI,SDNAM,SDNOD)="" Q
"RTN","SDECINI2",248,0)
 I '$D(SDA(200,"B")) W !,"  No issues found."
"RTN","SDECINI2",249,0)
 I $D(SDA(200,"B")) W !,"  See summary below."
"RTN","SDECINI2",250,0)
 D CHKW(.SDA)
"RTN","SDECINI2",251,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINI2",252,0)
 W !!,Y
"RTN","SDECINI2",253,0)
 W !,"END existing cross-reference validity checks.",!!
"RTN","SDECINI2",254,0)
 Q
"RTN","SDECINI2",255,0)
CHKW(SDA) ;
"RTN","SDECINI2",256,0)
 N SDF,SDI,SDNAM,SDNOD,SDS
"RTN","SDECINI2",257,0)
 N T1,T2,T3
"RTN","SDECINI2",258,0)
 Q:'$O(SDA(0))
"RTN","SDECINI2",259,0)
 W !!,"  SUMMARY of existing cross-reference validity checks:"
"RTN","SDECINI2",260,0)
 W !,"  ----------------------------------------------------"
"RTN","SDECINI2",261,0)
 ;set tabs
"RTN","SDECINI2",262,0)
 S T1=2,T2=14,T3=46
"RTN","SDECINI2",263,0)
 S SDF="" F  S SDF=$O(SDA(SDF)) Q:SDF=""  D
"RTN","SDECINI2",264,0)
 .S SDS="" F  S SDS=$O(SDA(SDF,SDS)) Q:SDS=""  D
"RTN","SDECINI2",265,0)
 ..;Invalid pointers
"RTN","SDECINI2",266,0)
 ..I $D(SDA(SDF,SDS,"INVALID"))>1 D
"RTN","SDECINI2",267,0)
 ...W !!,"INVALID POINTERS found in "_SDS_" xref of file "_SDF
"RTN","SDECINI2",268,0)
 ...W !,?T1,"ID",?T2,"XREF NAME"
"RTN","SDECINI2",269,0)
 ...W !,?T1,"--",?T2,"---------"
"RTN","SDECINI2",270,0)
 ...S SDI="" F  S SDI=$O(SDA(SDF,SDS,"INVALID",SDI)) Q:SDI=""  D
"RTN","SDECINI2",271,0)
 ....S SDNAM="" F  S SDNAM=$O(SDA(SDF,SDS,"INVALID",SDI,SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",272,0)
 .....W !,?T1,SDI,?T2,SDNAM
"RTN","SDECINI2",273,0)
 ..I $D(SDA(SDF,SDS,"MISMATCH"))>1 D
"RTN","SDECINI2",274,0)
 ...W !!,"NAMES DO NOT MATCH found in "_SDS_" xref of file "_SDF
"RTN","SDECINI2",275,0)
 ...W !,?T1,"ID",?T2,"XREF NAME",?T3,"ENTRY NAME"
"RTN","SDECINI2",276,0)
 ...W !,?T1,"--",?T2,"---------",?T3,"----------"
"RTN","SDECINI2",277,0)
 ...S SDI="" F  S SDI=$O(SDA(SDF,SDS,"MISMATCH",SDI)) Q:SDI=""  D
"RTN","SDECINI2",278,0)
 ....S SDNAM="" F  S SDNAM=$O(SDA(SDF,SDS,"MISMATCH",SDI,SDNAM)) Q:SDNAM=""  D
"RTN","SDECINI2",279,0)
 .....S SDNOD="" F  S SDNOD=$O(SDA(SDF,SDS,"MISMATCH",SDI,SDNAM,SDNOD)) Q:SDNOD=""  D
"RTN","SDECINI2",280,0)
 ......W !,?T1,SDI,?T2,SDNAM,?T3,SDNOD
"RTN","SDECINI2",281,0)
 ;I '$D(SDA) W !,"  No issues found."
"RTN","SDECINI2",282,0)
 Q
"RTN","SDECINIT")
0^81^B30544543^n/a
"RTN","SDECINIT",1,0)
SDECINIT ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECINIT",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECINIT",3,0)
 ;
"RTN","SDECINIT",4,0)
 Q
"RTN","SDECINIT",5,0)
 ;
"RTN","SDECINIT",6,0)
PRE ;
"RTN","SDECINIT",7,0)
 Q
"RTN","SDECINIT",8,0)
 ;
"RTN","SDECINIT",9,0)
POST ;
"RTN","SDECINIT",10,0)
 D RPC
"RTN","SDECINIT",11,0)
 D CHK^SDECINI2
"RTN","SDECINIT",12,0)
 D INDEX^SDECINI1
"RTN","SDECINIT",13,0)
 ;D SDWLCL^SDECINI1
"RTN","SDECINIT",14,0)
 D RESCLIN
"RTN","SDECINIT",15,0)
 D RESAV
"RTN","SDECINIT",16,0)
 ;D RESAB^SDECINI1
"RTN","SDECINIT",17,0)
 D SDAPPT^SDECINI2
"RTN","SDECINIT",18,0)
 D SCH
"RTN","SDECINIT",19,0)
 Q
"RTN","SDECINIT",20,0)
 ;
"RTN","SDECINIT",21,0)
SCH ;schedule options
"RTN","SDECINIT",22,0)
 N NOW,QTIME,Y
"RTN","SDECINIT",23,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINIT",24,0)
 W !!,"Scheduling SDEC IDX REFRESH ..."
"RTN","SDECINIT",25,0)
 W !,Y
"RTN","SDECINIT",26,0)
 ;schedule SDEC IDX REFRESH to run nightly
"RTN","SDECINIT",27,0)
 S QTIME=$G(XPDQUES("POS1 NIGHTJOB"))  ;cannot NEW XPDQUES in this routine - XPDQUES is defined during the install questions
"RTN","SDECINIT",28,0)
 D:QTIME SCHTSK("SDEC IDX REFRESH",QTIME,"24H")
"RTN","SDECINIT",29,0)
 ;schedule SDEC IDX REFRESH to run one time 'NOW'
"RTN","SDECINIT",30,0)
 S NOW=$G(XPDQUES("POS2 NOWJOB"))  ;cannot NEW XPDQUES in this routine - XPDQUES is defined during the install questions
"RTN","SDECINIT",31,0)
 D:$$UP^XLFSTR(NOW)=1 ONE
"RTN","SDECINIT",32,0)
 Q
"RTN","SDECINIT",33,0)
SCHTSK(OPTNAME,QTIME,QFREQ) ; Schedule Option
"RTN","SDECINIT",34,0)
 N FDA,SCHNM,DIC,X,Y,SDIEN S SDIEN=""
"RTN","SDECINIT",35,0)
 Q:$G(OPTNAME)=""
"RTN","SDECINIT",36,0)
 I $G(QTIME)="" S QTIME=$P($$NOW^XLFDT,".",1)_".02"
"RTN","SDECINIT",37,0)
 S QFREQ=$G(QFREQ)
"RTN","SDECINIT",38,0)
 S DIC(0)="I",X=OPTNAME,DIC="^DIC(19,"
"RTN","SDECINIT",39,0)
 D ^DIC Q:'(Y>0)  S SCHNM=+Y
"RTN","SDECINIT",40,0)
 ;D CLEAN^DILF
"RTN","SDECINIT",41,0)
 S FDA(19.2,"?+1,",.01)=SCHNM,X=SCHNM
"RTN","SDECINIT",42,0)
 I 'SCHNM D  Q
"RTN","SDECINIT",43,0)
 .W !,OPTNAME," option can't be scheduled - option does not exist"
"RTN","SDECINIT",44,0)
 ;S FDA(19.2,"?+1,",1)=SCHNM
"RTN","SDECINIT",45,0)
 S FDA(19.2,"?+1,",2)=QTIME   ;$P($$NOW^XLFDT,".")_".01"
"RTN","SDECINIT",46,0)
 S FDA(19.2,"?+1,",6)=QFREQ
"RTN","SDECINIT",47,0)
 ;S FDA(19.2,"?+1,",9)="SP"  SP is STARTUP/PERSISTENT
"RTN","SDECINIT",48,0)
 D UPDATE^DIE("","FDA","SDIEN")
"RTN","SDECINIT",49,0)
 W !,"Scheduled option ",OPTNAME
"RTN","SDECINIT",50,0)
 D CLEAN^DILF
"RTN","SDECINIT",51,0)
 Q
"RTN","SDECINIT",52,0)
ONE ;One time queue setup for SDEC IDX REFRESH
"RTN","SDECINIT",53,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","SDECINIT",54,0)
 S ZTRTN="ENTRY^SDECIDX"
"RTN","SDECINIT",55,0)
 S ZTIO=""
"RTN","SDECINIT",56,0)
 S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,1)
"RTN","SDECINIT",57,0)
 S ZTDESC="One time Queue: SDEC IDX REFRESH"
"RTN","SDECINIT",58,0)
 D ^%ZTLOAD
"RTN","SDECINIT",59,0)
 Q
"RTN","SDECINIT",60,0)
 ;
"RTN","SDECINIT",61,0)
RPC ;register SDEC rpcs
"RTN","SDECINIT",62,0)
 N Y
"RTN","SDECINIT",63,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINIT",64,0)
 W !!,"Registering new RPCs..."
"RTN","SDECINIT",65,0)
 W !,Y
"RTN","SDECINIT",66,0)
 D REGNMSP^SDECRPC("SDEC","SDECRPC")
"RTN","SDECINIT",67,0)
 D REGNMSP^SDECRPC("DG SENSITIVE RECORD ACCESS","SDECRPC")
"RTN","SDECINIT",68,0)
 D REGNMSP^SDECRPC("DG CHK BS5 XREF ARRAY","SDECRPC")
"RTN","SDECINIT",69,0)
 D REGNMSP^SDECRPC("ORPRF HASFLG","SDECRPC")
"RTN","SDECINIT",70,0)
 D REGNMSP^SDECRPC("ORPRF GETFLG","SDECRPC")
"RTN","SDECINIT",71,0)
 D REGNMSP^SDECRPC("ORWPT DIEDON","SDECRPC")
"RTN","SDECINIT",72,0)
 D REGNMSP^SDECRPC("ORWPT ID INFO","SDECRPC")
"RTN","SDECINIT",73,0)
 D REGNMSP^SDECRPC("ORWPT LAST5","SDECRPC")
"RTN","SDECINIT",74,0)
 D REGNMSP^SDECRPC("ORWPT LAST5 RPL","SDECRPC")
"RTN","SDECINIT",75,0)
 D REGNMSP^SDECRPC("ORWU USERINFO","SDECRPC")
"RTN","SDECINIT",76,0)
 Q
"RTN","SDECINIT",77,0)
 ;
"RTN","SDECINIT",78,0)
RESCLIN ;populate SDEC RESOURCE with clinics from file 44
"RTN","SDECINIT",79,0)
 N SDCL,SDCLN,SDDATA,SDFDA,SDFIELDS,SDFOUND,SDI,SDIEN,SDMSG,SDRESH,SDRES11,SDTS,Y
"RTN","SDECINIT",80,0)
 N SDIN,SDRN
"RTN","SDECINIT",81,0)
 S SDRESH=""
"RTN","SDECINIT",82,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINIT",83,0)
 W !!,"Updating new SDEC RESOURCE file 409.831 with clinics and providers from file 44..."
"RTN","SDECINIT",84,0)
 W !,Y
"RTN","SDECINIT",85,0)
 ;D SDRTYP(.SDRTYP)
"RTN","SDECINIT",86,0)
 D CLEAR^SDECU      ;purge SDEC RESOURCE USER file
"RTN","SDECINIT",87,0)
 D RESDGA^SDEC01B   ;remove inactive resources from SDEC RESOURCE GROUPs
"RTN","SDECINIT",88,0)
 S SDCL=0 F  S SDCL=$O(^SC(SDCL)) Q:SDCL'>0  D
"RTN","SDECINIT",89,0)
 .D RESCLIN1^SDEC01B(SDCL,.SDRESH)
"RTN","SDECINIT",90,0)
 .;populate from providers and privileged users
"RTN","SDECINIT",91,0)
 .D RESPRVA
"RTN","SDECINIT",92,0)
 Q
"RTN","SDECINIT",93,0)
 ;
"RTN","SDECINIT",94,0)
RESPRVA ;called from RSCLIN
"RTN","SDECINIT",95,0)
 ;K SDDATA,SDMSG
"RTN","SDECINIT",96,0)
 N SDFOUND,TD
"RTN","SDECINIT",97,0)
 S SDFOUND=0
"RTN","SDECINIT",98,0)
 S SDJ=0 F  S SDJ=$O(^SC(SDCL,"PR",SDJ)) Q:SDJ'>0  D
"RTN","SDECINIT",99,0)
 .S SDPRV=$P($G(^SC(SDCL,"PR",SDJ,0)),U,1)
"RTN","SDECINIT",100,0)
 .S SDPRVN=$$UP^XLFSTR($$GET1^DIQ(200,SDPRV_",",.01))
"RTN","SDECINIT",101,0)
 .Q:SDPRVN=""
"RTN","SDECINIT",102,0)
 .D RESPRV1^SDEC01B(SDPRV,SDCL,SDPRVN)
"RTN","SDECINIT",103,0)
 S SDJ=0 F  S SDJ=$O(^SC(SDCL,"SDPRIV",SDJ)) Q:SDJ'>0  D
"RTN","SDECINIT",104,0)
 .S SDPRV=$P($G(^SC(SDCL,"SDPRIV",SDJ,0)),U,1)
"RTN","SDECINIT",105,0)
 .S SDPRVN=$$UP^XLFSTR($$GET1^DIQ(200,SDPRV_",",.01))
"RTN","SDECINIT",106,0)
 .Q:SDPRVN=""
"RTN","SDECINIT",107,0)
 .S TD=$$GET1^DIQ(200,SDJ_",",9.2,"I")
"RTN","SDECINIT",108,0)
 .I TD'="",$P(TD,".",1)'>$P($$NOW^XLFDT,".",1) Q  ;only process active entries
"RTN","SDECINIT",109,0)
 .;MGH commented out
"RTN","SDECINIT",110,0)
 .D RESPRV1^SDEC01B(SDPRV,SDCL,SDPRVN)    ;add to SDEC RESOURCE
"RTN","SDECINIT",111,0)
 .D:$G(SDRESH)'="" RESUPRV1   ;add to SDEC RESOURCE USER
"RTN","SDECINIT",112,0)
 Q
"RTN","SDECINIT",113,0)
RESUPRV1 ;add privileged provider to SDEC RESOURCE USER
"RTN","SDECINIT",114,0)
 N SDF,SDFDA,SDIEN,SDMSG,SDNOD,SDRU
"RTN","SDECINIT",115,0)
 S SDF=0
"RTN","SDECINIT",116,0)
 Q:$O(^SDEC(409.833,"AD",SDRESH,SDPRV,0))  ;stop if existing SDEC RESOURCE USER id with provider ID.
"RTN","SDECINIT",117,0)
 S SDRU="+1"
"RTN","SDECINIT",118,0)
 ;
"RTN","SDECINIT",119,0)
 S SDFDA=$NA(SDFDA(409.833,SDRU_","))
"RTN","SDECINIT",120,0)
 S @SDFDA@(.01)=SDRESH
"RTN","SDECINIT",121,0)
 S @SDFDA@(.02)=SDPRV
"RTN","SDECINIT",122,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDECINIT",123,0)
 Q
"RTN","SDECINIT",124,0)
 ;
"RTN","SDECINIT",125,0)
SDRTYP(SDRTYP) ;build array of resource types
"RTN","SDECINIT",126,0)
 ;INPUT: none
"RTN","SDECINIT",127,0)
 ;RETURN:
"RTN","SDECINIT",128,0)
 ; .SDRTYP - array of resource types
"RTN","SDECINIT",129,0)
 ;          SDRTYP(<ien>;<file ref> , <SDEC RESOURCE ien>)=""
"RTN","SDECINIT",130,0)
 Q
"RTN","SDECINIT",131,0)
 N SDI,SDTYP
"RTN","SDECINIT",132,0)
 K SDRTYP
"RTN","SDECINIT",133,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.831,SDI)) Q:SDI'>0  D
"RTN","SDECINIT",134,0)
 .S SDTYP=$$GET1^DIQ(409.831,SDI_",",.012,"I")
"RTN","SDECINIT",135,0)
 .I SDTYP'="" S SDRTYP(SDTYP,SDI)=""
"RTN","SDECINIT",136,0)
 Q
"RTN","SDECINIT",137,0)
 ;
"RTN","SDECINIT",138,0)
RESAV ;add AVAILABLE and UNAVAILABLE to SDEC ACCESS TYPE file
"RTN","SDECINIT",139,0)
 N Y
"RTN","SDECINIT",140,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECINIT",141,0)
 W !!,"Updating SDEC ACCESS TYPE file 409.823 with entries for ""AVAILABLE"" and ""UNAVAILABLE""..."
"RTN","SDECINIT",142,0)
 W !,Y
"RTN","SDECINIT",143,0)
 I '$O(^SDEC(409.823,"B","AVAILABLE",0)) D AVAILADD("AVAILABLE")
"RTN","SDECINIT",144,0)
 I '$O(^SDEC(409.823,"B","UNAVAILABLE",0)) D AVAILADD("UNAVAILABLE")
"RTN","SDECINIT",145,0)
 Q
"RTN","SDECINIT",146,0)
AVAILADD(SDTXT) ;add to SDEC ACCESS TYPE file
"RTN","SDECINIT",147,0)
 N SDAV,SDFDA
"RTN","SDECINIT",148,0)
 S SDAV=$O(^SDEC(409.823,"B",SDTXT,0))
"RTN","SDECINIT",149,0)
 Q:+SDAV
"RTN","SDECINIT",150,0)
 S SDFDA(409.823,"+1,",.01)=SDTXT
"RTN","SDECINIT",151,0)
 S SDFDA(409.823,"+1,",.04)=$S(SDTXT="AVAILABLE":"YELLOW",1:"GRAY")
"RTN","SDECINIT",152,0)
 S SDFDA(409.823,"+1,",.05)=$S(SDTXT="AVAILABLE":247,1:230)
"RTN","SDECINIT",153,0)
 S SDFDA(409.823,"+1,",.06)=$S(SDTXT="AVAILABLE":254,1:230)
"RTN","SDECINIT",154,0)
 S SDFDA(409.823,"+1,",.07)=$S(SDTXT="AVAILABLE":46,1:230)
"RTN","SDECINIT",155,0)
 S SDFDA(409.823,"+1,",.08)=0  ;$S(SDTXT="AVAILABLE":0,1:1)
"RTN","SDECINIT",156,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECINIT",157,0)
 Q
"RTN","SDECLK")
0^150^B9204662^n/a
"RTN","SDECLK",1,0)
SDECLK ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECLK",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECLK",3,0)
 ;
"RTN","SDECLK",4,0)
 Q
"RTN","SDECLK",5,0)
 ;
"RTN","SDECLK",6,0)
LOCK(SDECY,REQ) ; -- Attempt to lock request record
"RTN","SDECLK",7,0)
 ;INPUT:
"RTN","SDECLK",8,0)
 ; REQ = Request - (required) Appt Request type - variable pointer pointer
"RTN","SDECLK",9,0)
 ;                            to one of these files:
"RTN","SDECLK",10,0)
 ;                         SDEC APPT REQUEST    - A|<APPT IEN>     A|123
"RTN","SDECLK",11,0)
 ;                         SD WAIT LIST         - E|<WL IEN>       E|123
"RTN","SDECLK",12,0)
 ;                         REQUEST/CONSULTATION - C|<CONSULT IEN>  C|123
"RTN","SDECLK",13,0)
 ;                         RECALL REMINDERS     - R|^<RECALL IEN>  R|123
"RTN","SDECLK",14,0)
 ;RETURN:
"RTN","SDECLK",15,0)
 ; A single entry in the global array indicating the success/failure of getting the lock:
"RTN","SDECLK",16,0)
 ;   1. CODE    -  1 if successful, or 0^Message if could not get lock
"RTN","SDECLK",17,0)
 ;   2. MESSAGE -  Message Text
"RTN","SDECLK",18,0)
 N RET,SDI,SDTYP,SDIEN
"RTN","SDECLK",19,0)
 N Y,SDECLK,NOW,NOW1
"RTN","SDECLK",20,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDECLK",21,0)
 K @SDECY
"RTN","SDECLK",22,0)
 S @SDECY@(0)="T00030CODE^T00030MESSAGE"_$C(30)
"RTN","SDECLK",23,0)
 I $G(REQ)="" S RET="0^Invalid Request input"_$C(30,31) Q
"RTN","SDECLK",24,0)
 S SDTYP=$P(REQ,"|",1) I "ACER"'[SDTYP S @SDECY@(1)="0^Invalid Request Type"_$C(30,31) Q
"RTN","SDECLK",25,0)
 S SDIEN=$P(REQ,"|",2) I SDIEN'?1.N S @SDECY@(1)="0^Invalid Request ID"_$C(30,31) Q
"RTN","SDECLK",26,0)
 S SDECLK=$G(^XTMP("SDECLK"_SDTYP_"-"_SDIEN,1)) I SDECLK=(DUZ_U_$J) S @SDECY@(1)="1^You already have the lock"_$C(30,31) Q
"RTN","SDECLK",27,0)
 L +^XTMP("SDECLK"_SDTYP_"-"_SDIEN):5 I '$T S @SDECY@(1)="0^"_$S(+SDECLK:$P($G(^VA(200,+SDECLK,0)),U),1:"Another person")_" is editing this request."_$C(30,31) Q
"RTN","SDECLK",28,0)
 ;unlock previous locks
"RTN","SDECLK",29,0)
 S SDI="SDECLK" F  S SDI=$O(^XTMP(SDI)) Q:SDI'["SDECLK"  Q:SDI=""  D
"RTN","SDECLK",30,0)
 .;I ^XTMP(SDI,1)=DUZ_U_$J D
"RTN","SDECLK",31,0)
 .I ($P($G(^XTMP(SDI,1)),U,1)=DUZ)!($P($G(^XTMP(SDI,1)),U,1)="") D
"RTN","SDECLK",32,0)
 ..L -^XTMP(SDI)
"RTN","SDECLK",33,0)
 ..K ^XTMP(SDI)
"RTN","SDECLK",34,0)
 S NOW=$$NOW^XLFDT,NOW1=$$FMADD^XLFDT(NOW,1)
"RTN","SDECLK",35,0)
 S ^XTMP("SDECLK"_SDTYP_"-"_SDIEN,0)=NOW1_U_NOW_"^VSE GUI Request Lock"
"RTN","SDECLK",36,0)
 S ^XTMP("SDECLK"_SDTYP_"-"_SDIEN,1)=DUZ_U_$J
"RTN","SDECLK",37,0)
 S @SDECY@(1)="1^Lock successful"_$C(30,31)
"RTN","SDECLK",38,0)
 Q
"RTN","SDECLK",39,0)
 ;
"RTN","SDECLK",40,0)
UNLOCK(SDECY,REQ,FLG) ; -- Unlock request record
"RTN","SDECLK",41,0)
 ;INPUT:
"RTN","SDECLK",42,0)
 ; REQ = (required) - Appt Request type - variable pointer pointer
"RTN","SDECLK",43,0)
 ;                            to one of these files:
"RTN","SDECLK",44,0)
 ;                         SDEC APPT REQUEST    - A|<APPT IEN>     A|123
"RTN","SDECLK",45,0)
 ;                         SD WAIT LIST         - E|<WL IEN>       E|123
"RTN","SDECLK",46,0)
 ;                         REQUEST/CONSULTATION - C|<CONSULT IEN>  C|123
"RTN","SDECLK",47,0)
 ;                         RECALL REMINDERS     - R|^<RECALL IEN>  R|123
"RTN","SDECLK",48,0)
 ; FLG = (optional) Unlock if other job
"RTN","SDECLK",49,0)
 ;        0 = (default) only unlock if lock belongs to current user and current $J job
"RTN","SDECLK",50,0)
 ;        1 = unlock even if the lock does not belong to current user and current $J job
"RTN","SDECLK",51,0)
 ;RETURN:
"RTN","SDECLK",52,0)
 ; A single entry in the global array indicating the success of unlocking the record:
"RTN","SDECLK",53,0)
 ;   1. CODE    -  1 if successful, or 0^Message if could not get lock
"RTN","SDECLK",54,0)
 ;   2. MESSAGE -  Message Text
"RTN","SDECLK",55,0)
 ;                 If message text="Not your lock" you can call again and send 1 as the 2nd input to unlock anyway.
"RTN","SDECLK",56,0)
 N SDTYP,SDIEN
"RTN","SDECLK",57,0)
 N Y,SDECLK,NOW,NOW1
"RTN","SDECLK",58,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDECLK",59,0)
 K @SDECY
"RTN","SDECLK",60,0)
 S @SDECY@(0)="T00030CODE^T00030MESSAGE"_$C(30)
"RTN","SDECLK",61,0)
 I $G(REQ)="" S @SDECY@(1)="0^Invalid Request input"_$C(30,31) Q
"RTN","SDECLK",62,0)
 S SDTYP=$P(REQ,"|",1) I "ACER"'[SDTYP S @SDECY@(1)="0^Invalid Request Type"_$C(30,31) Q
"RTN","SDECLK",63,0)
 S SDIEN=$P(REQ,"|",2) I SDIEN'?1.N S @SDECY@(1)="0^Invalid Request ID"_$C(30,31) Q
"RTN","SDECLK",64,0)
 I $G(FLG)'=1,$D(^XTMP("SDECLK"_SDTYP_"-"_SDIEN,1)),$P($G(^XTMP("SDECLK"_SDTYP_"-"_SDIEN,1)),U,1)'=DUZ S @SDECY@(1)="0^Not your lock"_$C(30,31) Q
"RTN","SDECLK",65,0)
 L -^XTMP("SDECLK"_SDTYP_"-"_SDIEN)
"RTN","SDECLK",66,0)
 ;I $G(^XTMP("SDECLK"_SDTYP_"-"_SDIEN,1))=(DUZ_U_$J)
"RTN","SDECLK",67,0)
 K ^XTMP("SDECLK"_SDTYP_"-"_SDIEN)
"RTN","SDECLK",68,0)
 S @SDECY@(1)="1^Unlock successful"_$C(30,31)
"RTN","SDECLK",69,0)
 Q
"RTN","SDECLOC")
0^138^B4435373^n/a
"RTN","SDECLOC",1,0)
SDECLOC ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECLOC",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECLOC",3,0)
 ;Input HIEN     - File 44 IEN
"RTN","SDECLOC",4,0)
 ;      INACTIVE - Inactive flag.  0=return active only; 1=return active and inactive entries
"RTN","SDECLOC",5,0)
 ;Output - Hospital Location IEN^Hospital Location Name^Privileged User IEN^Privileged User^INACTIVE
"RTN","SDECLOC",6,0)
PRIVLOC(DATA,HIEN,INACTIVE) ;EP
"RTN","SDECLOC",7,0)
 N LP,CNT,INACT
"RTN","SDECLOC",8,0)
 S INACTIVE=$G(INACTIVE)
"RTN","SDECLOC",9,0)
 S DATA=$$TMPGBL()
"RTN","SDECLOC",10,0)
 S (LP,CNT)=0
"RTN","SDECLOC",11,0)
 S @DATA@(0)="I00020HOSPLOCID^T00030HOSPLOCID^I00020NEWPERSONID^T00030NEWPERSONNAME^T00030INACTIVE"_$C(30)
"RTN","SDECLOC",12,0)
 Q:'$G(HIEN)
"RTN","SDECLOC",13,0)
 F  S LP=$O(^SC(HIEN,"SDPRIV",LP)) Q:'LP  D
"RTN","SDECLOC",14,0)
 .S INACT=$$PC^SDEC45(LP)
"RTN","SDECLOC",15,0)
 .I 'INACTIVE,INACT Q
"RTN","SDECLOC",16,0)
 .S CNT=CNT+1,@DATA@(CNT)=HIEN_U_$P(^SC(HIEN,0),U)_U_LP_U_$$GET1^DIQ(200,LP,.01)_U_$S(+INACT:"INACTIVE",1:"ACTIVE")_$C(30)
"RTN","SDECLOC",17,0)
 S @DATA@(CNT)=@DATA@(CNT)_$C(31)
"RTN","SDECLOC",18,0)
 Q
"RTN","SDECLOC",19,0)
 ; Update the list of privileged users for a hospital location
"RTN","SDECLOC",20,0)
 ; Input - LOC = IEN of Hospital Location file entry
"RTN","SDECLOC",21,0)
 ;         LST = Array of NEW PERSON IENs. For example,
"RTN","SDECLOC",22,0)
 ;               LST(1)=34
"RTN","SDECLOC",23,0)
 ;               LST(2)=65
"RTN","SDECLOC",24,0)
UPDPRIV(DATA,LOC,LST) ;
"RTN","SDECLOC",25,0)
 K DATA
"RTN","SDECLOC",26,0)
 N LP,FDA,CNT,VAL,ERR,IENS,IEN
"RTN","SDECLOC",27,0)
 I $L($G(LST)) D
"RTN","SDECLOC",28,0)
 .S CNT=$L(LST,",") F LP=1:1:CNT S LST($P(LST,",",LP))=$P(LST,",",LP)
"RTN","SDECLOC",29,0)
 .S LST=""
"RTN","SDECLOC",30,0)
 S DATA(0)="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDECLOC",31,0)
 I '$G(LOC) D  Q
"RTN","SDECLOC",32,0)
 .S DATA(1)="-1^MISSING LOCATION IEN"_$C(30,31)
"RTN","SDECLOC",33,0)
 .D ^%ZTER
"RTN","SDECLOC",34,0)
 I '$D(^SC(LOC,0)) D  Q
"RTN","SDECLOC",35,0)
 .S DATA(1)="-1^LOCATION FILE ENTRY IS MISSING"_$C(30,31)
"RTN","SDECLOC",36,0)
 .D ^%ZTER
"RTN","SDECLOC",37,0)
 D PURGE(LOC)
"RTN","SDECLOC",38,0)
 S CNT=0
"RTN","SDECLOC",39,0)
 S LP=0 F  S LP=$O(LST(LP)) Q:'LP  D
"RTN","SDECLOC",40,0)
 .S VAL=LST(LP)
"RTN","SDECLOC",41,0)
 .S CNT=CNT+1
"RTN","SDECLOC",42,0)
 .S IENS(CNT)=+VAL
"RTN","SDECLOC",43,0)
 .S IEN="+"_CNT_","
"RTN","SDECLOC",44,0)
 .S FDA(44.04,IEN_LOC_",",.01)=+VAL
"RTN","SDECLOC",45,0)
 D:CNT UPDATE^DIE(,"FDA","IENS","ERR")
"RTN","SDECLOC",46,0)
 I $D(ERR) D
"RTN","SDECLOC",47,0)
 .S DATA(1)="-1^"_$G(ERR("DIERR",1,"TEXT",1))_$C(30,31)
"RTN","SDECLOC",48,0)
 E  S DATA(1)="1^SUCCESSFUL"_$C(30,31)
"RTN","SDECLOC",49,0)
 Q
"RTN","SDECLOC",50,0)
 ; Purge existings entries prior to updating
"RTN","SDECLOC",51,0)
 ; Input - IEN of Hospital Location file
"RTN","SDECLOC",52,0)
PURGE(IEN) ;EP-
"RTN","SDECLOC",53,0)
 N DIK,DA
"RTN","SDECLOC",54,0)
 S DIK="^SC("_IEN_",""SDPRIV"","
"RTN","SDECLOC",55,0)
 S DA(1)=IEN
"RTN","SDECLOC",56,0)
 S DA=999999999 F  S DA=$O(^SC(IEN,"SDPRIV",DA),-1) Q:'DA  D ^DIK
"RTN","SDECLOC",57,0)
 ;S DA=0 F  S DA=$O(^SC(IEN,"SDPRIV",DA)) Q:'DA  D ^DIK
"RTN","SDECLOC",58,0)
 Q
"RTN","SDECLOC",59,0)
TMPGBL() ;EP-
"RTN","SDECLOC",60,0)
 K ^TMP("SDECLOC",$J) Q $NA(^($J))
"RTN","SDECNEW")
0^109^B4856106^n/a
"RTN","SDECNEW",1,0)
SDECNEW ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECNEW",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECNEW",3,0)
 ;
"RTN","SDECNEW",4,0)
 Q
"RTN","SDECNEW",5,0)
 ;
"RTN","SDECNEW",6,0)
 ;
"RTN","SDECNEW",7,0)
 ;  PROGRAMMERS:  DO NOT USE THE FIRST LINE FOR ENTRY.
"RTN","SDECNEW",8,0)
 ;                USE LABEL EN^XBNEW() FOR ENTRY.
"RTN","SDECNEW",9,0)
 ;
"RTN","SDECNEW",10,0)
 ; EN^XBNEW("TAG^ROUTINE","variable list")
"RTN","SDECNEW",11,0)
 ;
"RTN","SDECNEW",12,0)
 ; Variable list has the form "AGDFN;AGINS;AGP*".
"RTN","SDECNEW",13,0)
 ; Wild card * allowed.
"RTN","SDECNEW",14,0)
 ;
"RTN","SDECNEW",15,0)
 ; XBRET has the form "TAG^ROUTINE:VAR;NSVAR*"
"RTN","SDECNEW",16,0)
 ;
"RTN","SDECNEW",17,0)
 ; This allows for the nesting of die calls by
"RTN","SDECNEW",18,0)
 ;
"RTN","SDECNEW",19,0)
 ; 1. Building and executing an exclusive new from preselected
"RTN","SDECNEW",20,0)
 ;    kernel variables and any local variables &/or name
"RTN","SDECNEW",21,0)
 ;    spaces identified by the calling parameter.
"RTN","SDECNEW",22,0)
 ;
"RTN","SDECNEW",23,0)
 ; 2. After executing the new (....) XBNEW performs a DO call
"RTN","SDECNEW",24,0)
 ;    to the program entry point identified by the calling
"RTN","SDECNEW",25,0)
 ;    parameter.  The entry point passed should build the
"RTN","SDECNEW",26,0)
 ;    variables and execute the DIE call to be nested.
"RTN","SDECNEW",27,0)
 ;
"RTN","SDECNEW",28,0)
 ; 3. As XBNEW quits to return to the calling program it pops
"RTN","SDECNEW",29,0)
 ;    the variable stack.
"RTN","SDECNEW",30,0)
 ;
"RTN","SDECNEW",31,0)
 ;
"RTN","SDECNEW",32,0)
 NEW XB,XBNS,XBN,XB,XBY,XBL,XBKVAR
"RTN","SDECNEW",33,0)
 G S
"RTN","SDECNEW",34,0)
 ;
"RTN","SDECNEW",35,0)
EN(XBRT,XBNS) ;PEP XBRT=TAG^ROUTINE  XBNS=variable list ";" with * allowed
"RTN","SDECNEW",36,0)
 NEW XB,XBN,XB,XBY,XBL,XBKVAR,XBRET
"RTN","SDECNEW",37,0)
 S XBRET=XBRT_":"_XBNS
"RTN","SDECNEW",38,0)
S ;
"RTN","SDECNEW",39,0)
 N XBI
"RTN","SDECNEW",40,0)
 I XBRET'[":" S XBRET=XBRET_":"
"RTN","SDECNEW",41,0)
 S XBN="XBRET",XBKVAR=$P($T(XBKVAR),";;",2),XBNS=$P(XBRET,":",2)
"RTN","SDECNEW",42,0)
 I XBNS="" G RETURN
"RTN","SDECNEW",43,0)
 F XBI=1:1 S (XB,XBY)=$P(XBNS,";",XBI) Q:XB=""  D
"RTN","SDECNEW",44,0)
 . I XB'["*" S XBN=XBN_","_XB Q
"RTN","SDECNEW",45,0)
 . S (XB,XBY)=$P(XB,"*"),XBN=XBN_","_XB,XBL=$L(XB)
"RTN","SDECNEW",46,0)
 . F  S XBY=$O(@XBY) Q:((XBY="")!(XB'=$E(XBY,1,XBL)))  S XBN=XBN_","_XBY
"RTN","SDECNEW",47,0)
 .Q
"RTN","SDECNEW",48,0)
RETURN ;
"RTN","SDECNEW",49,0)
 S XBN="("_XBN_","_XBKVAR_")",$P(XBRET,":",2)=XBN
"RTN","SDECNEW",50,0)
NEW ;
"RTN","SDECNEW",51,0)
 NEW @($P(XBRET,":",2))
"RTN","SDECNEW",52,0)
 D @($P(XBRET,":",1))
"RTN","SDECNEW",53,0)
 Q
"RTN","SDECNEW",54,0)
 ;
"RTN","SDECNEW",55,0)
END ;--------------------------------------------------------------
"RTN","SDECNEW",56,0)
 ; the following taken from the variable list in KILL^XUSCLEAN from  KERNEL
"RTN","SDECNEW",57,0)
XBKVAR ;;DUZ,DTIME,DT,DISYS,IO,IOBS,IOF,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,%ZH0,XQVOL,XQY,XQY0,XQDIC,XQPSM,XQPT,XQAUDIT,XQXFLG,ZTSTOP,ZTQUEUED,ZTREQ,XQORS;; IHS/SET/GTH XB*3*9 10/29/2002
"RTN","SDECNEW",58,0)
 ;;DUZ,DTIME,DT,DISYS,IO,IOF,IOBS,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,ZTSTOP,ZTQUEUED,ZTREQ
"RTN","SDECNEW",59,0)
 ;--------------------------------------------------------------
"RTN","SDECNEW",60,0)
 Q
"RTN","SDECNEW",61,0)
 ;
"RTN","SDECPAT")
0^83^B3637810^n/a
"RTN","SDECPAT",1,0)
SDECPAT ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPAT",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPAT",3,0)
 ;
"RTN","SDECPAT",4,0)
 Q
"RTN","SDECPAT",5,0)
 ;
"RTN","SDECPAT",6,0)
 ; This routine sets standard patient variables
"RTN","SDECPAT",7,0)
START(SDDFN,DFN,SSN,AGE,DOB,SEX) ;
"RTN","SDECPAT",8,0)
 S:$D(X) AUPNPATX=X
"RTN","SDECPAT",9,0)
 S AUPNPAT=+SDDFN
"RTN","SDECPAT",10,0)
 S AUPNSEX=$P(^DPT(AUPNPAT,0),U,2),AUPNDOB=$P(^(0),U,3),AUPNDOD="" S:$D(^(.35)) AUPNDOD=$P(^(.35),U,1)
"RTN","SDECPAT",11,0)
 S X2=AUPNDOB,X1=$S('AUPNDOD:DT,AUPNDOD:AUPNDOD,1:DT)
"RTN","SDECPAT",12,0)
 D ^%DTC
"RTN","SDECPAT",13,0)
 S AUPNDAYS=X
"RTN","SDECPAT",14,0)
 ;S X="BEHOPTCX" X ^%ZOSF("TEST") I $T D SETCTX^BEHOPTCX(+AUPNPAT)
"RTN","SDECPAT",15,0)
 K X,X1,X2
"RTN","SDECPAT",16,0)
 S:$D(AUPNPATX) X=AUPNPATX
"RTN","SDECPAT",17,0)
 K %T,%Y,AUPNPATX
"RTN","SDECPAT",18,0)
 S DFN=AUPNPAT
"RTN","SDECPAT",19,0)
 S SSN=$$SSN(AUPNPAT)
"RTN","SDECPAT",20,0)
 S AGE=$$AGE(AUPNPAT)
"RTN","SDECPAT",21,0)
 S DOB=$$DOB(AUPNPAT)
"RTN","SDECPAT",22,0)
 S SEX=$$SEX(AUPNPAT)
"RTN","SDECPAT",23,0)
 Q
"RTN","SDECPAT",24,0)
 ;
"RTN","SDECPAT",25,0)
KILL ;PEP - KILL VARIABLES SET BY THIS ROUTINE
"RTN","SDECPAT",26,0)
 K AUPNPAT,AUPNSEX,AUPNDOB,AUPNDOD,AUPNDAYS
"RTN","SDECPAT",27,0)
 K AGE,DFN,DOB,SEX,SSN
"RTN","SDECPAT",28,0)
 Q
"RTN","SDECPAT",29,0)
 ;
"RTN","SDECPAT",30,0)
 ;  NOTE TO PROGRAMMERS:
"RTN","SDECPAT",31,0)
 ;   All parameters are required, except the Format parameter ("F").
"RTN","SDECPAT",32,0)
 ;   The default for the Format parameter is the internal format of
"RTN","SDECPAT",33,0)
 ;   the returned value.
"RTN","SDECPAT",34,0)
 ;
"RTN","SDECPAT",35,0)
AGE(DFN,D,F) ;PEP - Given DFN, return Age.
"RTN","SDECPAT",36,0)
 ;return age on date d in format f (defaults to DT and age in years)
"RTN","SDECPAT",37,0)
 Q $$AGE^SDECPAT3(DFN,$G(D),$G(F))
"RTN","SDECPAT",38,0)
 ;
"RTN","SDECPAT",39,0)
CDEATH(DFN,F) ;PEP - returns Cause of Death in F format
"RTN","SDECPAT",40,0)
 Q $$CDEATH^SDECPAT3(DFN,$G(F))
"RTN","SDECPAT",41,0)
 ;
"RTN","SDECPAT",42,0)
DEC(PID) ;PEP - RETURN DECRYPTED PATIENT IDENTIFIER
"RTN","SDECPAT",43,0)
 Q:$$DEC^SDECPAT4(PID)
"RTN","SDECPAT",44,0)
 ;----------
"RTN","SDECPAT",45,0)
ENC(DFN) ;PEP
"RTN","SDECPAT",46,0)
 Q $$ENC^SDECPAT4(DFN)
"RTN","SDECPAT",47,0)
 ;----------
"RTN","SDECPAT",48,0)
DOB(DFN,F) ;PEP - Given DFN, return Date of Birth according to F.
"RTN","SDECPAT",49,0)
 Q $$DOB^SDECPAT3(DFN,$G(F))
"RTN","SDECPAT",50,0)
 ;
"RTN","SDECPAT",51,0)
DOD(DFN,F) ;PEP - Given DFN, return Date of Death in FM format.
"RTN","SDECPAT",52,0)
 Q $$DOD^SDECPAT3(DFN,$G(F))
"RTN","SDECPAT",53,0)
 ;
"RTN","SDECPAT",54,0)
ELIGSTAT(DFN,F) ;PEP - returns eligibility status in F format
"RTN","SDECPAT",55,0)
 Q $$ELIGSTAT^SDECPAT3(DFN,$G(F))
"RTN","SDECPAT",56,0)
 ;
"RTN","SDECPAT",57,0)
HRN(DFN,L,F) ;PEP
"RTN","SDECPAT",58,0)
 ;f patch 4 05/08/96
"RTN","SDECPAT",59,0)
 Q $$HRN^SDECPAT3(DFN,L,$G(F))
"RTN","SDECPAT",60,0)
 ;
"RTN","SDECPAT",61,0)
MCD(P,D) ;PEP - Is patient P medicaid eligible on date D?
"RTN","SDECPAT",62,0)
 Q $$MCD^SDECPAT2(P,D)
"RTN","SDECPAT",63,0)
 ;
"RTN","SDECPAT",64,0)
MCDPN(P,D,F) ;PEP - return medicaid plan name for patient P on date D in form F.
"RTN","SDECPAT",65,0)
 Q $$MCDPN^SDECPAT2(P,D,$G(F))
"RTN","SDECPAT",66,0)
 ;
"RTN","SDECPAT",67,0)
MCR(P,D) ;PEP - Is patient P medicare eligible on date D?
"RTN","SDECPAT",68,0)
 Q $$MCR^SDECPAT2(P,D)
"RTN","SDECPAT",69,0)
 ;
"RTN","SDECPAT",70,0)
PI(P,D) ;PEP - Is patient P private insurance eligible on date D?
"RTN","SDECPAT",71,0)
 Q $$PI^SDECPAT2(P,D)
"RTN","SDECPAT",72,0)
 ;
"RTN","SDECPAT",73,0)
PIN(P,D,F) ;PEP - return private insurer name for patient P on date D in form F.
"RTN","SDECPAT",74,0)
 Q $$PIN^SDECPAT2(P,D,$G(F))
"RTN","SDECPAT",75,0)
 ;
"RTN","SDECPAT",76,0)
SEX(DFN) ;PEP - Given DFN, return Sex.
"RTN","SDECPAT",77,0)
 Q $$SEX^SDECPAT3(DFN)
"RTN","SDECPAT",78,0)
 ;
"RTN","SDECPAT",79,0)
SSN(DFN) ;PEP - Given DFN, return SSN.
"RTN","SDECPAT",80,0)
 Q $$SSN^SDECPAT3(DFN)
"RTN","SDECPAT",81,0)
 ;
"RTN","SDECPAT",82,0)
RR(P,D) ;PEP -  Is patient P railroad eligible on date D?
"RTN","SDECPAT",83,0)
 Q $$RRE^SDECPAT2(P,D)
"RTN","SDECPAT1")
0^84^B1134752^n/a
"RTN","SDECPAT1",1,0)
SDECPAT1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPAT1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPAT1",3,0)
 ;
"RTN","SDECPAT1",4,0)
 Q
"RTN","SDECPAT1",5,0)
 ;
"RTN","SDECPAT1",6,0)
 ; BEN:
"RTN","SDECPAT1",7,0)
 ;   Input - DFN
"RTN","SDECPAT1",8,0)
 ;   Output - 1 = Yes
"RTN","SDECPAT1",9,0)
 ;            0 = No
"RTN","SDECPAT1",10,0)
 ;           -1 = No/old tribe or unable.
"RTN","SDECPAT1",11,0)
 ;
"RTN","SDECPAT1",12,0)
BEN(DFN) ;PEP - Return BEN/Non-BEN Status.
"RTN","SDECPAT1",13,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT1",14,0)
 I '$D(^AUPNPAT(DFN)) Q -1
"RTN","SDECPAT1",15,0)
 NEW AUPN,AUPNTR,Y,X
"RTN","SDECPAT1",16,0)
 S Y=1
"RTN","SDECPAT1",17,0)
 D ENP^SDECDIQ1(9000001,DFN,"1108;1109.9;1111","AUPN(","I")
"RTN","SDECPAT1",18,0)
 I AUPN(1108,"I")'>0 Q -1 ;no tribe
"RTN","SDECPAT1",19,0)
 D ENP^SDECDIQ1(9999999.03,AUPN(1108,"I"),".04;.02","AUPNTR(")
"RTN","SDECPAT1",20,0)
 I AUPNTR(.04)="YES" Q -1 ;old tribe code
"RTN","SDECPAT1",21,0)
 F X="000","970" I AUPNTR(.02)=X S Y=0 Q  ;non-indian tribes
"RTN","SDECPAT1",22,0)
 I 'Y Q Y
"RTN","SDECPAT1",23,0)
 I 999=AUPNTR(.02),AUPN(1109.9)>0 Q 1 ;unspecified ,Quantum>0
"RTN","SDECPAT1",24,0)
 Q Y
"RTN","SDECPAT1",25,0)
 ;
"RTN","SDECPAT2")
0^85^B255586^n/a
"RTN","SDECPAT2",1,0)
SDECPAT2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPAT2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPAT2",3,0)
 ;
"RTN","SDECPAT2",4,0)
 Q
"RTN","SDECPAT2",5,0)
 ;place holder routine for future implementations
"RTN","SDECPAT2",6,0)
 ;
"RTN","SDECPAT2",7,0)
 ;---------
"RTN","SDECPAT2",8,0)
 ; MCR:     Input -  P = DFN
"RTN","SDECPAT2",9,0)
 ;                   D = Date
"RTN","SDECPAT2",10,0)
 ;          Output - 1 = Yes, patient is/was MCare eligible on date D.
"RTN","SDECPAT2",11,0)
 ;                   0 = No, or unable.
"RTN","SDECPAT2",12,0)
 ;
"RTN","SDECPAT2",13,0)
 ;      Examples: I $$MCR^SDECPAT(DFN,2930701)
"RTN","SDECPAT2",14,0)
 ;                S AGMCR=$$MCR^SDECPAT(DFN,DT)
"RTN","SDECPAT2",15,0)
 ;
"RTN","SDECPAT2",16,0)
MCR(P,D) ;EP - Is patient P medicare eligible on date D.  1 = yes, 0 = no.
"RTN","SDECPAT2",17,0)
 ; I = IEN in ^AUPNMCR multiple.
"RTN","SDECPAT2",18,0)
 Q 0
"RTN","SDECPAT2",19,0)
 ;
"RTN","SDECPAT2",20,0)
 ;----------
"RTN","SDECPAT2",21,0)
 ; MCD:     Input -  P = DFN
"RTN","SDECPAT2",22,0)
 ;                   D = Date
"RTN","SDECPAT2",23,0)
 ;          Output - 1 = Yes, patient is/was MCaid eligible on date D.
"RTN","SDECPAT2",24,0)
 ;                   0 = No, or unable.
"RTN","SDECPAT2",25,0)
 ;
"RTN","SDECPAT2",26,0)
 ;      Examples: I $$MCD^SDECPAT(DFN,2930701)
"RTN","SDECPAT2",27,0)
 ;                S AGMCD=$$MCD^SDECPAT(DFN,DT)
"RTN","SDECPAT2",28,0)
 ;
"RTN","SDECPAT2",29,0)
MCD(P,D) ;EP - Is patient P medicaid eligible on date D.
"RTN","SDECPAT2",30,0)
 ; I = IEN.
"RTN","SDECPAT2",31,0)
 ; J = Node 11 IEN in ^AUPNMCD.
"RTN","SDECPAT2",32,0)
 Q 0
"RTN","SDECPAT2",33,0)
 ;
"RTN","SDECPAT2",34,0)
 ;----------
"RTN","SDECPAT2",35,0)
 ; MCDPN:   Input -  P = DFN
"RTN","SDECPAT2",36,0)
 ;                   D = Date
"RTN","SDECPAT2",37,0)
 ;                   F = Form for output of plan (Insurer) name.
"RTN","SDECPAT2",38,0)
 ; If F = "E", return external form, else pointer to INSURER file.
"RTN","SDECPAT2",39,0)
 ;          Output - Literal = Cleartext name of insurer.
"RTN","SDECPAT2",40,0)
 ;                   Number = Pointer to INSURER file.
"RTN","SDECPAT2",41,0)
 ;
"RTN","SDECPAT2",42,0)
 ;      Examples: I $$MCDPN^SDECPAT(DFN,2930701)
"RTN","SDECPAT2",43,0)
 ;                S AGMCDPN=$$MCDPN^SDECPAT(DFN,DT,"E")
"RTN","SDECPAT2",44,0)
 ;
"RTN","SDECPAT2",45,0)
MCDPN(P,D,F) ;EP - return medicaid plan name for patient P on date D in form F.
"RTN","SDECPAT2",46,0)
 ; I = IEN
"RTN","SDECPAT2",47,0)
 ; J = Node 11 IEN
"RTN","SDECPAT2",48,0)
 Q 0
"RTN","SDECPAT2",49,0)
 ;
"RTN","SDECPAT2",50,0)
 ;
"RTN","SDECPAT2",51,0)
 ;----------
"RTN","SDECPAT2",52,0)
 ; PI:      Input -  P = DFN
"RTN","SDECPAT2",53,0)
 ;                   D = Date
"RTN","SDECPAT2",54,0)
 ;          Output - 1 = Yes, patient is/was PI eligible on date D.
"RTN","SDECPAT2",55,0)
 ;                   0 = No, or unable.
"RTN","SDECPAT2",56,0)
 ;
"RTN","SDECPAT2",57,0)
 ;      Examples: I $$PI^SDECPAT(DFN,2930701)
"RTN","SDECPAT2",58,0)
 ;                S AGPI=$$PI^SDECPAT(DFN,DT)
"RTN","SDECPAT2",59,0)
 ;
"RTN","SDECPAT2",60,0)
PI(P,D) ;EP - Is patient P private insurance eligible on date D. 1= yes, 0=no.
"RTN","SDECPAT2",61,0)
 ; I = IEN
"RTN","SDECPAT2",62,0)
 ; Y = 1:yes, 0:no
"RTN","SDECPAT2",63,0)
 ; X = Pointer to INSURER file.
"RTN","SDECPAT2",64,0)
 Q 0
"RTN","SDECPAT2",65,0)
 ;
"RTN","SDECPAT2",66,0)
 ;----------
"RTN","SDECPAT2",67,0)
 ; PIN:     Input -  P = DFN
"RTN","SDECPAT2",68,0)
 ;                   D = Date
"RTN","SDECPAT2",69,0)
 ;                   F = Form for output of plan (Insurer) name.
"RTN","SDECPAT2",70,0)
 ; If F = "E", return external form, else pointer to INSURER file.
"RTN","SDECPAT2",71,0)
 ;          Output - Literal = Cleartext name of insurer.
"RTN","SDECPAT2",72,0)
 ;                   Number = Pointer to INSURER file.
"RTN","SDECPAT2",73,0)
 ;
"RTN","SDECPAT2",74,0)
 ;      Examples: I $$PIN^SDECPAT(DFN,2930701)
"RTN","SDECPAT2",75,0)
 ;                S AGPIN=$$PIN^SDECPAT(DFN,DT,"E")
"RTN","SDECPAT2",76,0)
 ;
"RTN","SDECPAT2",77,0)
PIN(P,D,F) ;EP - return private insurer name for patient P on date D in form F
"RTN","SDECPAT2",78,0)
 ; I = IEN
"RTN","SDECPAT2",79,0)
 Q 0
"RTN","SDECPAT2",80,0)
 ;
"RTN","SDECPAT2",81,0)
 ;Begin New Code;IHS/SET/GTH AUPN*99.1*8 10/04/2002
"RTN","SDECPAT2",82,0)
RRE(P,D) ;EP - Does pt have Railroad insurance on date?  1 = yes, 0 = no.
"RTN","SDECPAT2",83,0)
 ; I = IEN in ^AUPNRRE multiple.
"RTN","SDECPAT2",84,0)
 Q 0
"RTN","SDECPAT2",85,0)
 ;
"RTN","SDECPAT2",86,0)
 ;End New Code;IHS/SET/GTH AUPN*99.1*8 10/04/2002
"RTN","SDECPAT3")
0^86^B6176667^n/a
"RTN","SDECPAT3",1,0)
SDECPAT3 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPAT3",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPAT3",3,0)
 ;
"RTN","SDECPAT3",4,0)
 Q
"RTN","SDECPAT3",5,0)
 ;
"RTN","SDECPAT3",6,0)
AGE(DFN,D,F) ;EP - Given DFN, return Age.
"RTN","SDECPAT3",7,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT3",8,0)
 I '$D(^DPT(DFN,0)) Q -1
"RTN","SDECPAT3",9,0)
 I $$DOB^SDECPAT(DFN,"")<0 Q -1
"RTN","SDECPAT3",10,0)
 ;S:$G(D)="" D=DT ;IHS/CMI/LAB - added DOD check patch 8
"RTN","SDECPAT3",11,0)
 S:$G(D)="" D=$S(+$$DOD^SDECPAT3(DFN):$$DOD^SDECPAT3(DFN),1:DT)
"RTN","SDECPAT3",12,0)
 S:$G(F)="" F="Y"
"RTN","SDECPAT3",13,0)
 N %,%1
"RTN","SDECPAT3",14,0)
 S %=$$FMDIFF^XLFDT(D,$$DOB^SDECPAT(DFN,""))
"RTN","SDECPAT3",15,0)
 S %1=%\365.25
"RTN","SDECPAT3",16,0)
 I F="Y" Q %1
"RTN","SDECPAT3",17,0)
 Q $S(%1>2:%1_" YRS",%<31:%_" DYS",1:%\30_" MOS")
"RTN","SDECPAT3",18,0)
 ;
"RTN","SDECPAT3",19,0)
CDEATH(DFN,F) ;EP - returns Cause of Death in F format
"RTN","SDECPAT3",20,0)
 ;F="E":ICD narrative, F="I":ien of icd code, F="C":icd code
"RTN","SDECPAT3",21,0)
 I '$G(DFN) Q ""
"RTN","SDECPAT3",22,0)
 I '$D(^AUPNPAT(DFN)) Q ""
"RTN","SDECPAT3",23,0)
 I '$P($G(^AUPNPAT(DFN,11)),"^",14) Q ""
"RTN","SDECPAT3",24,0)
 I '$D(^ICD9($P(^AUPNPAT(DFN,11),"^",14))) Q ""
"RTN","SDECPAT3",25,0)
 S F=$G(F)
"RTN","SDECPAT3",26,0)
 I F="I" Q $P(^AUPNPAT(DFN,11),"^",14)
"RTN","SDECPAT3",27,0)
 I F="E" Q $P($$ICDDX^ICDCODE($P(^AUPNPAT(DFN,11),"^",14),$S($P($G(^DPT(DFN,.35)),U,1)]"":$P(^DPT(DFN,.35),U,1),1:DT)),"^",2) ;CSV
"RTN","SDECPAT3",28,0)
 Q $P($$ICDDX^ICDCODE($P(^AUPNPAT(DFN,11),"^",14)),"^",2)
"RTN","SDECPAT3",29,0)
 ;
"RTN","SDECPAT3",30,0)
DOB(DFN,F) ;EP - Given DFN, return Date of Birth according to F.
"RTN","SDECPAT3",31,0)
 ; If F="E" produce the External form, else FM format.
"RTN","SDECPAT3",32,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT3",33,0)
 I '$D(^DPT(DFN,0)) Q -1
"RTN","SDECPAT3",34,0)
 S F=$G(F)
"RTN","SDECPAT3",35,0)
 ;beginning Y2K mods - change 2 parameter is FMTE call to 5
"RTN","SDECPAT3",36,0)
 ;Q $S(F="E":$$FMTE^XLFDT($P(^DPT(DFN,0),"^",3)),F="S":$$FMTE^XLFDT($P(^DPT(DFN,0),"^",3),2),1:$P(^DPT(DFN,0),"^",3)) ;Y2000 IHS/CMI/LAB - commented out
"RTN","SDECPAT3",37,0)
 Q $S(F="E":$$FMTE^XLFDT($P(^DPT(DFN,0),"^",3)),F="S":$$FMTE^XLFDT($P(^DPT(DFN,0),"^",3),5),1:$P(^DPT(DFN,0),"^",3))  ;Y2000 IHS/CMI/LAB
"RTN","SDECPAT3",38,0)
 ;end Y2K mods
"RTN","SDECPAT3",39,0)
 ;
"RTN","SDECPAT3",40,0)
DOD(DFN,F) ;EP - Given DFN, return Date of Death according to F.
"RTN","SDECPAT3",41,0)
 ; If F="E" produce the External form, else FM format.
"RTN","SDECPAT3",42,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT3",43,0)
 I '$D(^DPT(DFN,0)) Q -1
"RTN","SDECPAT3",44,0)
 S F=$G(F)
"RTN","SDECPAT3",45,0)
 Q $S(F="E":$$FMTE^XLFDT($P($G(^DPT(DFN,.35)),"^")),1:$P($G(^DPT(DFN,.35)),"^"))
"RTN","SDECPAT3",46,0)
 ;
"RTN","SDECPAT3",47,0)
ELIGSTAT(DFN,F) ;EP - returns eligibility status in F format
"RTN","SDECPAT3",48,0)
 ;F="E":eligibility type (name), F="I":internal set of codes
"RTN","SDECPAT3",49,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT3",50,0)
 I '$D(^AUPNPAT(DFN,11)) Q -1
"RTN","SDECPAT3",51,0)
 S F=$G(F)
"RTN","SDECPAT3",52,0)
 Q $S(F="E":$$EXTSET^SDECFUNC(9000001,1112,$P(^AUPNPAT(DFN,11),"^",12)),1:$P(^AUPNPAT(DFN,11),"^",12))
"RTN","SDECPAT3",53,0)
 ;
"RTN","SDECPAT3",54,0)
HRN(DFN,L,F) ;EP - return HRN at L location
"RTN","SDECPAT3",55,0)
 ;L must be ien of location of encounter
"RTN","SDECPAT3",56,0)
 ;F is optional.  If F=2 hrn will be prefixed with site abbreviation
"RTN","SDECPAT3",57,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT3",58,0)
 I '$D(^AUPNPAT(DFN)) Q -1
"RTN","SDECPAT3",59,0)
 I '$G(L) Q -1
"RTN","SDECPAT3",60,0)
 I $G(F)=2,'$D(^AUTTLOC(L,0)) Q -1
"RTN","SDECPAT3",61,0)
 Q $S($D(^AUPNPAT(DFN,41,L,0)):$S($G(F)=2:$P(^AUTTLOC(L,0),"^",7)_" ",1:"")_$P(^AUPNPAT(DFN,41,L,0),"^",2),1:"")
"RTN","SDECPAT3",62,0)
 Q $P($G(^AUPNPAT(DFN,41,L,0)),"^",2)
"RTN","SDECPAT3",63,0)
 ;
"RTN","SDECPAT3",64,0)
SEX(DFN) ;EP - Given DFN, return Sex.
"RTN","SDECPAT3",65,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT3",66,0)
 I '$D(^DPT(DFN,0)) Q -1
"RTN","SDECPAT3",67,0)
 Q $P(^DPT(DFN,0),"^",2)
"RTN","SDECPAT3",68,0)
 ;
"RTN","SDECPAT3",69,0)
SSN(DFN) ;EP - Given DFN, return SSN.
"RTN","SDECPAT3",70,0)
 I '$G(DFN) Q -1
"RTN","SDECPAT3",71,0)
 I '$D(^DPT(DFN,0)) Q -1
"RTN","SDECPAT3",72,0)
 Q $P(^DPT(DFN,0),"^",9)
"RTN","SDECPAT4")
0^87^B9974559^n/a
"RTN","SDECPAT4",1,0)
SDECPAT4 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPAT4",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPAT4",3,0)
 ;
"RTN","SDECPAT4",4,0)
 Q
"RTN","SDECPAT4",5,0)
 ;
"RTN","SDECPAT4",6,0)
 ; This routine is passed a patient ien and returns an encrypted patient
"RTN","SDECPAT4",7,0)
 ; identifier 12 bytes long.  The entry point DEC reverses the process
"RTN","SDECPAT4",8,0)
 ; and returns the decoded output in a 27 byte long string.
"RTN","SDECPAT4",9,0)
 ;
"RTN","SDECPAT4",10,0)
ENC(DFN) ;EP - RETURN ENCRYPTED PATIENT IDENTIFIER
"RTN","SDECPAT4",11,0)
 NEW AUPNV,AUPNX,AUPNY,I,X,X1,Y
"RTN","SDECPAT4",12,0)
 S AUPNV=""
"RTN","SDECPAT4",13,0)
 G:'$G(DFN) ENCX ;                       exit if no patient ien passed
"RTN","SDECPAT4",14,0)
 G:'$D(^DPT(DFN,0)) ENCX ;               exit if patient doesn't exist
"RTN","SDECPAT4",15,0)
 ;----------
"RTN","SDECPAT4",16,0)
 ; take 1st 3 chars of name, replace punctuation with numbers, pad out
"RTN","SDECPAT4",17,0)
 ;   to 3 chars
"RTN","SDECPAT4",18,0)
 S AUPNX=$E($P($P(^DPT(DFN,0),U),","),1,3)
"RTN","SDECPAT4",19,0)
 S AUPNX=$TR(AUPNX," '-.,","01234")
"RTN","SDECPAT4",20,0)
 F I=1:1:(3-$L(AUPNX)) S AUPNX=AUPNX_"5"
"RTN","SDECPAT4",21,0)
 S AUPNV=AUPNX
"RTN","SDECPAT4",22,0)
 ;----------
"RTN","SDECPAT4",23,0)
 ; take 1st initial, 0 if null
"RTN","SDECPAT4",24,0)
 S AUPNX=$E($P($P(^DPT(DFN,0),U),",",2)) S:AUPNX="" AUPNX=0
"RTN","SDECPAT4",25,0)
 ;----------
"RTN","SDECPAT4",26,0)
 ; concatenate in reverse order
"RTN","SDECPAT4",27,0)
 S AUPNV=$E(AUPNV,3)_$E(AUPNV,2)_$E(AUPNV)_AUPNX
"RTN","SDECPAT4",28,0)
 ;----------
"RTN","SDECPAT4",29,0)
 ; concatenate fileman date of birth (converted to $H/hex format)
"RTN","SDECPAT4",30,0)
 S AUPNX=$$DOB^SDECPAT(DFN) S:$L(AUPNX)'=7 AUPNX=3991231
"RTN","SDECPAT4",31,0)
 S AUPNX=$$FMTH^XLFDT(AUPNX,1)
"RTN","SDECPAT4",32,0)
 S X=AUPNX,X1=16 D CNV^XTBASE S Y=$E(Y,1,4)
"RTN","SDECPAT4",33,0)
 F I=1:1:(4-$L(Y)) S Y=Y_"-"
"RTN","SDECPAT4",34,0)
 S AUPNV=AUPNV_Y
"RTN","SDECPAT4",35,0)
 ;----------
"RTN","SDECPAT4",36,0)
 ; concatenate last 4 digits of SSN
"RTN","SDECPAT4",37,0)
 S AUPNX=$E($$SSN^SDECPAT(DFN),6,9) S:$L(AUPNX)'=4 AUPNX="9999"
"RTN","SDECPAT4",38,0)
 F I=1:1:4 D
"RTN","SDECPAT4",39,0)
 . S X=$E(AUPNX,I)
"RTN","SDECPAT4",40,0)
 . I X<5 S X=X+5,$E(AUPNX,I)=X I 1
"RTN","SDECPAT4",41,0)
 . E  S X=X-5,$E(AUPNX,I)=X
"RTN","SDECPAT4",42,0)
 . Q
"RTN","SDECPAT4",43,0)
 S AUPNV=AUPNV_AUPNX
"RTN","SDECPAT4",44,0)
 ;----------
"RTN","SDECPAT4",45,0)
 ; shuffle
"RTN","SDECPAT4",46,0)
 S AUPNV=$E(AUPNV,4,6)_$E(AUPNV,10,12)_$E(AUPNV,1,3)_$E(AUPNV,7,9)
"RTN","SDECPAT4",47,0)
 ;----------
"RTN","SDECPAT4",48,0)
 ; encrypt
"RTN","SDECPAT4",49,0)
 D ENCRYPT
"RTN","SDECPAT4",50,0)
 ;----------
"RTN","SDECPAT4",51,0)
ENCX ;
"RTN","SDECPAT4",52,0)
 Q AUPNV
"RTN","SDECPAT4",53,0)
 ;
"RTN","SDECPAT4",54,0)
 ;
"RTN","SDECPAT4",55,0)
ENCRYPT ;
"RTN","SDECPAT4",56,0)
 S AUPNV=$TR(AUPNV,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","UVWXJKLMYZABQRSTCDGHIEFNOP")
"RTN","SDECPAT4",57,0)
 S AUPNV=$TR(AUPNV,"1234567890","8967320415")
"RTN","SDECPAT4",58,0)
 Q
"RTN","SDECPAT4",59,0)
 ;
"RTN","SDECPAT4",60,0)
 ;
"RTN","SDECPAT4",61,0)
 ;
"RTN","SDECPAT4",62,0)
DEC(PID) ;EP - RETURN DECRYPTED PATIENT IDENTIFIER
"RTN","SDECPAT4",63,0)
 NEW AUPNV,AUPNX,AUPNY,I,X,X1,Y
"RTN","SDECPAT4",64,0)
 S AUPNV=""
"RTN","SDECPAT4",65,0)
 G:$G(PID)="" DECX ;                     exit if no string
"RTN","SDECPAT4",66,0)
 G:$L(PID)'=12 DECX ;                    exit if string not 12 chars
"RTN","SDECPAT4",67,0)
 S AUPNV="["
"RTN","SDECPAT4",68,0)
 ;----------
"RTN","SDECPAT4",69,0)
 ; decrypt
"RTN","SDECPAT4",70,0)
 D DECRYPT
"RTN","SDECPAT4",71,0)
 ;----------
"RTN","SDECPAT4",72,0)
 ; unshuffle
"RTN","SDECPAT4",73,0)
 S PID=$E(PID,7,9)_$E(PID,1,3)_$E(PID,10,12)_$E(PID,4,6)
"RTN","SDECPAT4",74,0)
 ;----------
"RTN","SDECPAT4",75,0)
 ; take 1st 3 chars of name, replace numbers with punctuation
"RTN","SDECPAT4",76,0)
 S AUPNX=""
"RTN","SDECPAT4",77,0)
 F I=3,2,1 S AUPNX=AUPNX_$E(PID,I)
"RTN","SDECPAT4",78,0)
 S AUPNX=$TR(AUPNX,"01234"," '-.,")
"RTN","SDECPAT4",79,0)
 S AUPNY=""
"RTN","SDECPAT4",80,0)
 F I=1:1:3 S:$E(AUPNX,I)'="5" AUPNY=AUPNY_$E(AUPNX,I)
"RTN","SDECPAT4",81,0)
 S AUPNX=AUPNY_","_$S($E(PID,4)'="0":$E(PID,4),1:"")
"RTN","SDECPAT4",82,0)
 S AUPNV=AUPNV_AUPNX
"RTN","SDECPAT4",83,0)
 ;----------
"RTN","SDECPAT4",84,0)
 ; fileman date of birth (converted to external format)
"RTN","SDECPAT4",85,0)
 S AUPNX=""
"RTN","SDECPAT4",86,0)
 S X=$E(PID,5,8)
"RTN","SDECPAT4",87,0)
 F I=1:1:4 S:$E(X,I)'="-" AUPNX=AUPNX_$E(X,I)
"RTN","SDECPAT4",88,0)
 S X=AUPNX,X1=16 D DEC^XTBASE S AUPNX=Y
"RTN","SDECPAT4",89,0)
 S AUPNX=$$HTE^XLFDT(AUPNX,1)
"RTN","SDECPAT4",90,0)
 S AUPNV=AUPNV_"__"_AUPNX
"RTN","SDECPAT4",91,0)
 ;----------
"RTN","SDECPAT4",92,0)
 ; last 4 digits of SSN
"RTN","SDECPAT4",93,0)
 S AUPNX=$E(PID,9,12)
"RTN","SDECPAT4",94,0)
 F I=1:1:4 D
"RTN","SDECPAT4",95,0)
 . S X=$E(AUPNX,I)
"RTN","SDECPAT4",96,0)
 . I X<5 S X=X+5,$E(AUPNX,I)=X I 1
"RTN","SDECPAT4",97,0)
 . E  S X=X-5,$E(AUPNX,I)=X
"RTN","SDECPAT4",98,0)
 . Q
"RTN","SDECPAT4",99,0)
 S:AUPNX="9999" AUPNX="    "
"RTN","SDECPAT4",100,0)
 S AUPNV=AUPNV_"__"_AUPNX
"RTN","SDECPAT4",101,0)
 ;----------
"RTN","SDECPAT4",102,0)
 S AUPNV=AUPNV_"]"
"RTN","SDECPAT4",103,0)
DECX ;
"RTN","SDECPAT4",104,0)
 Q AUPNV
"RTN","SDECPAT4",105,0)
 ;
"RTN","SDECPAT4",106,0)
DECRYPT ;
"RTN","SDECPAT4",107,0)
 S PID=$TR(PID,"UVWXJKLMYZABQRSTCDGHIEFNOP","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SDECPAT4",108,0)
 S PID=$TR(PID,"8967320415","1234567890")
"RTN","SDECPAT4",109,0)
 Q
"RTN","SDECPT")
0^115^B2478759^n/a
"RTN","SDECPT",1,0)
SDECPT ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPT",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPT",3,0)
 ;
"RTN","SDECPT",4,0)
 Q
"RTN","SDECPT",5,0)
 ;
"RTN","SDECPT",6,0)
PTINQ(SDECY,DFN) ; Return output from ORWPT PTINQ in DataTable format
"RTN","SDECPT",7,0)
 ;PTINQ(SDECY,DFN)  external parameter tag is in SDEC
"RTN","SDECPT",8,0)
 ;Return detailed patient information for display in GUI form
"RTN","SDECPT",9,0)
 ;INPUT:
"RTN","SDECPT",10,0)
 ;  DFN       - (required) Patient ID - pointer to the PATIENT file 2
"RTN","SDECPT",11,0)
 ;RETURN:
"RTN","SDECPT",12,0)
 ;  DataTable with one column: PATIENT_INFO
"RTN","SDECPT",13,0)
 ;
"RTN","SDECPT",14,0)
 N II,SDECI,SDECARR
"RTN","SDECPT",15,0)
 S SDECY=$NA(^TMP("SDEC",$J))
"RTN","SDECPT",16,0)
 K @SDECY
"RTN","SDECPT",17,0)
 S SDECI=0
"RTN","SDECPT",18,0)
 S @SDECY@(SDECI)="T00250PATIENT_INFO"_$C(30)
"RTN","SDECPT",19,0)
 S DFN=$G(DFN)
"RTN","SDECPT",20,0)
 I DFN="" D ERR1^SDECERR(-1,"Patient ID required.",SDECI,SDECY)
"RTN","SDECPT",21,0)
 I '$D(DFN) D ERR1^SDECERR(-1,"Invalid patient ID "_DFN_".",SDECI,SDECY)
"RTN","SDECPT",22,0)
 D PTINQ^ORWPT(.SDECARR,DFN)
"RTN","SDECPT",23,0)
 F II=1:1:$O(@SDECARR@(""),-1) D
"RTN","SDECPT",24,0)
 . S SDECI=SDECI+1
"RTN","SDECPT",25,0)
 . S @SDECY@(SDECI)=@SDECARR@(II)_$C(30)
"RTN","SDECPT",26,0)
 S SDECI=SDECI+1
"RTN","SDECPT",27,0)
 S @SDECY@(SDECI)=$C(31)
"RTN","SDECPT",28,0)
 K @SDECARR
"RTN","SDECPT",29,0)
 Q
"RTN","SDECPT",30,0)
 ;
"RTN","SDECPT",31,0)
FACLIST ; Return list of remote facilities for patient
"RTN","SDECPT",32,0)
 ;FACLIST(SDECY,DFN)
"RTN","SDECPT",33,0)
 ;INPUT:
"RTN","SDECPT",34,0)
 ;  DFN       - (required) Patient ID - pointer to the PATIENT file 2
"RTN","SDECPT",35,0)
 ;RETURN:
"RTN","SDECPT",36,0)
 ;  DataTable with one column: PATIENT_INFO
"RTN","SDECPT",37,0)
 ;
"RTN","SDECPT",38,0)
 N II,SDECI,SDECARR
"RTN","SDECPT",39,0)
 S SDECY=$NA(^TMP("SDECPT",$J))
"RTN","SDECPT",40,0)
 K @SDECY
"RTN","SDECPT",41,0)
 S SDECI=0
"RTN","SDECPT",42,0)
 S @SDECY@(SDECI)="T00030R1^T00030R2^T00030R3^T00030R4^T00030R5"_$C(30)
"RTN","SDECPT",43,0)
 D FACLIST^ORWCIRN(.SDECARR,DFN)
"RTN","SDECPT",44,0)
 S II="" F  S II=$O(SDECARR(II)) Q:II=""  D
"RTN","SDECPT",45,0)
 . S SDECI=SDECI+1
"RTN","SDECPT",46,0)
 . S @SDECY@(SDECI)=@SDECARR@(II)_$C(30)
"RTN","SDECPT",47,0)
 S SDECI=SDECI+1
"RTN","SDECPT",48,0)
 S @SDECY@(SDECI)=$C(31)
"RTN","SDECPT",49,0)
 K @SDECARR
"RTN","SDECPT",50,0)
 Q
"RTN","SDECPTCX")
0^72^B4715537^n/a
"RTN","SDECPTCX",1,0)
SDECPTCX ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPTCX",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPTCX",3,0)
 ;
"RTN","SDECPTCX",4,0)
 Q
"RTN","SDECPTCX",5,0)
 ;
"RTN","SDECPTCX",6,0)
 ;=================================================================
"RTN","SDECPTCX",7,0)
 ; Selects patient & returns key information
"RTN","SDECPTCX",8,0)
 ;  1    2   3   4    5      6    7    8      9       10     11  12 13  14  15  16     17     18      19
"RTN","SDECPTCX",9,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^VET^SENSITIVE^ADMITTED^HRN^SC^SC%^ICN^DOD^TS^PRIMTEAM^PRIMPRV^ATTND
"RTN","SDECPTCX",10,0)
PTINFO(DATA,DFN,SLCT) ;
"RTN","SDECPTCX",11,0)
 N X,CA,WL,RB,TS,DOD,AT,VT,VAEL,VAERR,VDT,LINE
"RTN","SDECPTCX",12,0)
 K ^TMP("ORWPCE",$J)
"RTN","SDECPTCX",13,0)
 Q:'$D(^DPT(+DFN,0))
"RTN","SDECPTCX",14,0)
 S X=^DPT(DFN,0),WL=$P($G(^(.1)),U),RB=$P($G(^(.101)),U),CA=+$G(^(.105)),TS=+$G(^(.103)),DOD=+$G(^(.35)),AT=+$G(^(.1041)),VT=$G(^("VET"))
"RTN","SDECPTCX",15,0)
 S DATA=$P(X,U,1,3)_U_$$FMTSSN($P(X,U,9))_U_U_WL_U_RB
"RTN","SDECPTCX",16,0)
 S:$L(WL) $P(DATA,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",WL,0)),44))
"RTN","SDECPTCX",17,0)
 S $P(DATA,U,8)=VT="Y"
"RTN","SDECPTCX",18,0)
 S $P(DATA,U,9)=$$ISSENS(DFN)
"RTN","SDECPTCX",19,0)
 S:CA $P(DATA,U,10)=$P($G(^DGPM(CA,0)),U)
"RTN","SDECPTCX",20,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","SDECPTCX",21,0)
 S $P(DATA,U,11)=$$HRN(DFN)
"RTN","SDECPTCX",22,0)
 D ELIG^VADPT
"RTN","SDECPTCX",23,0)
 S $P(DATA,U,12,13)=$P($G(VAEL(3)),U,1,2)
"RTN","SDECPTCX",24,0)
 S $P(DATA,U,14)=$$ICN(DFN)
"RTN","SDECPTCX",25,0)
 S $P(DATA,U,15)=DOD
"RTN","SDECPTCX",26,0)
 S $P(DATA,U,16)=TS
"RTN","SDECPTCX",27,0)
 S $P(DATA,U,17)=$P($$OUTPTTM^SDECPTPC(DFN),U,2)
"RTN","SDECPTCX",28,0)
 S $P(DATA,U,18)=$P($$OUTPTPR^SDECPTPC(DFN),U,2)
"RTN","SDECPTCX",29,0)
 S $P(DATA,U,19)=$S(AT:$P($G(^VA(200,AT,0)),U),1:"")
"RTN","SDECPTCX",30,0)
 ;D:$G(SLCT) LAST(,DFN)
"RTN","SDECPTCX",31,0)
 Q
"RTN","SDECPTCX",32,0)
 ; Save/retrieve last patient selected for current institution
"RTN","SDECPTCX",33,0)
LAST(DATA,DFN) ;
"RTN","SDECPTCX",34,0)
 S DATA=""
"RTN","SDECPTCX",35,0)
 Q
"RTN","SDECPTCX",36,0)
 ;D:$$ISACTIVE($G(DFN)) EN^XPAR("USR","BEHOPTCX LAST PATIENT","`"_DUZ(2),"`"_DFN)
"RTN","SDECPTCX",37,0)
 ;S DATA=$$GET^XPAR("USR","BEHOPTCX LAST PATIENT",DUZ(2),"I")
"RTN","SDECPTCX",38,0)
 ;S:DATA ^DISV(DUZ,"^DPT(")=DATA
"RTN","SDECPTCX",39,0)
 ;S:'$$GET^XPAR("ALL","BEHOPTCX RECALL LAST") DATA=""
"RTN","SDECPTCX",40,0)
 Q
"RTN","SDECPTCX",41,0)
 ; Returns true if selectable patient
"RTN","SDECPTCX",42,0)
ISACTIVE(DFN,QUALS) ;EP
"RTN","SDECPTCX",43,0)
 N X
"RTN","SDECPTCX",44,0)
 ;S:'$D(DEMO) DEMO=+$$GET^XPAR("ALL","BEHOPTCX DEMO MODE",,"Q")
"RTN","SDECPTCX",45,0)
 S X=$G(^DPT(+DFN,0))
"RTN","SDECPTCX",46,0)
 Q:'$L(X)!$P(X,U,19) 0
"RTN","SDECPTCX",47,0)
 ;I '$P(X,U,21),$$LKPQUAL("@BEHOPTCX DEMO MODE",.QUALS) Q 0
"RTN","SDECPTCX",48,0)
 ;Q:$$LKPQUAL("MSC DG ALL SITES HIPAA",.QUALS) 1
"RTN","SDECPTCX",49,0)
 ;Q:'$O(^AUPNPAT(DFN,41,0)) '$$LKPQUAL("@BEHOPTCX REQUIRES HRN",.QUALS)
"RTN","SDECPTCX",50,0)
 Q ''$L($$HRN(DFN))
"RTN","SDECPTCX",51,0)
 ; Return requested lookup qualifier  (NOT USED)
"RTN","SDECPTCX",52,0)
LKPQUAL(QUAL,CACHE) ;EP
"RTN","SDECPTCX",53,0)
 N RET
"RTN","SDECPTCX",54,0)
 S RET=$G(CACHE(QUAL))
"RTN","SDECPTCX",55,0)
 S:'$L(RET) (RET,CACHE(QUAL))=+$$APSEC^SDEC01(QUAL,DUZ)
"RTN","SDECPTCX",56,0)
 Q RET
"RTN","SDECPTCX",57,0)
 ; Returns sensitive patient status
"RTN","SDECPTCX",58,0)
ISSENS(DFN) ;
"RTN","SDECPTCX",59,0)
 N RET
"RTN","SDECPTCX",60,0)
 D PTSEC^DGSEC4(.RET,DFN,0)
"RTN","SDECPTCX",61,0)
 Q $G(RET(1))
"RTN","SDECPTCX",62,0)
 ; Return ICN
"RTN","SDECPTCX",63,0)
ICN(DFN) N X
"RTN","SDECPTCX",64,0)
 S X=$S($L($T(GETICN^MPIF001)):+$$GETICN^MPIF001(DFN),1:"")
"RTN","SDECPTCX",65,0)
 Q $S(X>0:X,1:"")
"RTN","SDECPTCX",66,0)
 ; Return HRN given DFN
"RTN","SDECPTCX",67,0)
HRN(DFN) ;EP
"RTN","SDECPTCX",68,0)
 N X
"RTN","SDECPTCX",69,0)
 S X=$G(^AUPNPAT(DFN,41,+$G(DUZ(2)),0))
"RTN","SDECPTCX",70,0)
 Q $S($P(X,U,3):"",1:$P(X,U,2))
"RTN","SDECPTCX",71,0)
 ;
"RTN","SDECPTCX",72,0)
FMTSSN(SSN,MF) ;EP - P7  ;msc/sat add MF flag to mask SSN  0=no mask; 1=mask
"RTN","SDECPTCX",73,0)
 N X
"RTN","SDECPTCX",74,0)
 S MF=$G(MF,0)
"RTN","SDECPTCX",75,0)
 S X=$S(MF:$E(SSN,6,$L(SSN)),1:SSN)
"RTN","SDECPTCX",76,0)
 Q:MF "XXX-XX-"_$S($L(X):X,1:"XXXX")
"RTN","SDECPTCX",77,0)
 Q X
"RTN","SDECPTPC")
0^73^B160453^n/a
"RTN","SDECPTPC",1,0)
SDECPTPC ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPTPC",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPTPC",3,0)
 ;
"RTN","SDECPTPC",4,0)
 Q
"RTN","SDECPTPC",5,0)
 ;
"RTN","SDECPTPC",6,0)
 ;=================================================================
"RTN","SDECPTPC",7,0)
USESD() Q 1   ;$G(DUZ("AG"))'="I"
"RTN","SDECPTPC",8,0)
 ; Get the primary provider
"RTN","SDECPTPC",9,0)
OUTPTPR(DFN) ;EP
"RTN","SDECPTPC",10,0)
 Q $$OUTPTPR^SDUTL3(DFN)
"RTN","SDECPTPC",11,0)
 ;N PCP
"RTN","SDECPTPC",12,0)
 ;S PCP=$$GET1^DIQ(9000001,DFN,.14,"I")
"RTN","SDECPTPC",13,0)
 ;Q $S(PCP:PCP_U_$P(^VA(200,PCP,0),U),1:"")
"RTN","SDECPTPC",14,0)
 ; Get team
"RTN","SDECPTPC",15,0)
OUTPTTM(DFN) ;EP
"RTN","SDECPTPC",16,0)
 Q $$OUTPTTM^SDUTL3(DFN)
"RTN","SDECPTPL")
0^76^B13347416^n/a
"RTN","SDECPTPL",1,0)
SDECPTPL ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECPTPL",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECPTPL",3,0)
 ;
"RTN","SDECPTPL",4,0)
 Q
"RTN","SDECPTPL",5,0)
 ;
"RTN","SDECPTPL",6,0)
 ;=================================================================
"RTN","SDECPTPL",7,0)
 ; Return a bolus of patient names
"RTN","SDECPTPL",8,0)
LISTALL(DATA,FROM,DIR,MAX) ;
"RTN","SDECPTPL",9,0)
 N CNT,IEN,MAX,GBL,QUALS,DEMO
"RTN","SDECPTPL",10,0)
 S MAX=$G(MAX,44),CNT=0,QUALS=""
"RTN","SDECPTPL",11,0)
 S GBL=$NA(^DPT("B"))
"RTN","SDECPTPL",12,0)
 F  S FROM=$O(@GBL@(FROM),DIR),IEN=0 Q:FROM=""  D  Q:CNT'<MAX
"RTN","SDECPTPL",13,0)
 .F  S IEN=$O(@GBL@(FROM,IEN)) Q:'IEN  D
"RTN","SDECPTPL",14,0)
 ..I '($D(@GBL@(FROM,IEN))#2) Q
"RTN","SDECPTPL",15,0)
 ..S:$$ISACTIVE^SDECPTCX(IEN,.QUALS) CNT=CNT+1,DATA(CNT)=IEN_U_FROM
"RTN","SDECPTPL",16,0)
 Q
"RTN","SDECPTPL",17,0)
 ;
"RTN","SDECPTPL",18,0)
 ; Lookup by full or partial SSN
"RTN","SDECPTPL",19,0)
LOOKUP(DATA,ID) ;
"RTN","SDECPTPL",20,0)
 N IEN,XREF,CNT,QUALS
"RTN","SDECPTPL",21,0)
 S DATA=^TMP("SDECPTPL",$J),(CNT,IEN)=0,ID=$$UP^XLFSTR($TR(ID,"-")),XREF=$S(ID?4N:"BS",ID?1A4N:"BS5",1:"SSN")
"RTN","SDECPTPL",22,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","SDECPTPL",23,0)
 .S:$$ISACTIVE^SDECPTCX(IEN,.QUALS) CNT=CNT+1,@DATA@(CNT)=IEN_U_$P(^DPT(IEN,0),U)_U_$$SSN(IEN)_"   "_$$DOB^DPTLK1(IEN)
"RTN","SDECPTPL",24,0)
 Q
"RTN","SDECPTPL",25,0)
 ; Return list of patients with specified HRN
"RTN","SDECPTPL",26,0)
HRNLKP(DATA,HRN) ;
"RTN","SDECPTPL",27,0)
 N CNT,DFN,QUALS
"RTN","SDECPTPL",28,0)
 S CNT=0,HRN=$$UP^XLFSTR($TR(HRN,"-"))
"RTN","SDECPTPL",29,0)
 S:HRN?1.N HRN=+HRN
"RTN","SDECPTPL",30,0)
 F DFN=0:0 S DFN=$O(^AUPNPAT("D",HRN,DFN)) Q:'DFN  D:$D(^(DFN,DUZ(2)))
"RTN","SDECPTPL",31,0)
 .S:$$ISACTIVE^SDECPTCX(DFN,.QUALS) CNT=CNT+1,DATA(CNT)=DFN_U_$P(^DPT(DFN,0),U)_U_HRN_"   "_$$DOB^DPTLK1(DFN)
"RTN","SDECPTPL",32,0)
 Q
"RTN","SDECPTPL",33,0)
 ; Patient lookup using IEN
"RTN","SDECPTPL",34,0)
IENLKP(DATA,IEN) ;
"RTN","SDECPTPL",35,0)
 N DFN
"RTN","SDECPTPL",36,0)
 I $E(IEN)="`" D
"RTN","SDECPTPL",37,0)
 .S DFN=+$E(IEN,2,$L(IEN))
"RTN","SDECPTPL",38,0)
 .S:$$ISACTIVE^SDECPTCX(DFN) DATA(1)=DFN_U_$P(^DPT(DFN,0),U)_U_$$HRN^SDECPTCX(DFN)_"   "_$$DOB^DPTLK1(DFN)
"RTN","SDECPTPL",39,0)
 Q
"RTN","SDECPTPL",40,0)
 ; Patient lookup using DOB
"RTN","SDECPTPL",41,0)
DOBLKP(DATA,DOB) ;
"RTN","SDECPTPL",42,0)
 N DFN,%DT,X,Y,CNT,QUALS
"RTN","SDECPTPL",43,0)
 S DATA=^TMP("SDECPTPL",$J)
"RTN","SDECPTPL",44,0)
 I $E(DOB)="B" D
"RTN","SDECPTPL",45,0)
 .S DOB=$E(DOB,2,$L(DOB)),CNT=0
"RTN","SDECPTPL",46,0)
 .S %DT="P",X=DOB D ^%DT
"RTN","SDECPTPL",47,0)
 .I Y>0 S DOB=Y D
"RTN","SDECPTPL",48,0)
 ..S DFN=0 F  S DFN=$O(^DPT("ADOB",DOB,DFN)) Q:DFN<1  D
"RTN","SDECPTPL",49,0)
 ...S:$$ISACTIVE^SDECPTCX(DFN,.QUALS) CNT=CNT+1,@DATA@(CNT)=DFN_U_$P(^DPT(DFN,0),U)_U_$$HRN^SDECPTCX(DFN)_"   "_$$DOB^DPTLK1(DFN)
"RTN","SDECPTPL",50,0)
 Q
"RTN","SDECPTPL",51,0)
 ; Return formatted SSN for patient
"RTN","SDECPTPL",52,0)
SSN(DFN) N SSN
"RTN","SDECPTPL",53,0)
 S SSN=$$SSN^DPTLK1(DFN)
"RTN","SDECPTPL",54,0)
 Q $S(SSN?9N.1"P":$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,10),1:"")
"RTN","SDECPTPL",55,0)
 ; Returns information about a list or lists
"RTN","SDECPTPL",56,0)
 ;   LIST = IEN (19930.4) of list (all lists returned if not specified)
"RTN","SDECPTPL",57,0)
 ;   Returns IEN^NAME^FLAGS^ENTITY^DFLT
"RTN","SDECPTPL",58,0)
 ;      where DFLT is default item settings as
"RTN","SDECPTPL",59,0)
 ;         IEN^NAME^START DATE^END DATE^DATE LABEL
"RTN","SDECPTPL",60,0)
LISTINFO(DATA,LIST) ;
"RTN","SDECPTPL",61,0)
 Q
"RTN","SDECPTPL",62,0)
 ; Screen logic for lists
"RTN","SDECPTPL",63,0)
LISTSCRN(LIST) ;
"RTN","SDECPTPL",64,0)
 I 1
"RTN","SDECPTPL",65,0)
 D EXEC(13)
"RTN","SDECPTPL",66,0)
 Q $T
"RTN","SDECPTPL",67,0)
 ; Call logic to generate patient list
"RTN","SDECPTPL",68,0)
LISTPTS(DATA,LIST,IEN,FLT) ;
"RTN","SDECPTPL",69,0)
 N START,END
"RTN","SDECPTPL",70,0)
 D PARSEFLT(.FLT,.START,.END)
"RTN","SDECPTPL",71,0)
 D EXEC(10)
"RTN","SDECPTPL",72,0)
 Q
"RTN","SDECPTPL",73,0)
 ; Call logic to generate list selections
"RTN","SDECPTPL",74,0)
LISTSEL(DATA,LIST,FROM,DIR,MAX,FLT) ;
"RTN","SDECPTPL",75,0)
 N START,END
"RTN","SDECPTPL",76,0)
 D PARSEFLT(.FLT,.START,.END)
"RTN","SDECPTPL",77,0)
 D EXEC(11)
"RTN","SDECPTPL",78,0)
 Q
"RTN","SDECPTPL",79,0)
 ; Parse list filter
"RTN","SDECPTPL",80,0)
PARSEFLT(FLT,START,END) ;
"RTN","SDECPTPL",81,0)
 S FLT=$P($G(FLT),U),START=$P(FLT,";"),END=$P(FLT,";",2)
"RTN","SDECPTPL",82,0)
 D:$L(START) DT^DILF("T",START,.START,"","")
"RTN","SDECPTPL",83,0)
 D:$L(END) DT^DILF("T",END,.END,"","")
"RTN","SDECPTPL",84,0)
 Q
"RTN","SDECPTPL",85,0)
 ; Call logic to manage user lists
"RTN","SDECPTPL",86,0)
MANAGE(DATA,LIST,ACTION,NAME,VAL) ;
"RTN","SDECPTPL",87,0)
 D EXEC(12)
"RTN","SDECPTPL",88,0)
 Q
"RTN","SDECPTPL",89,0)
 ; Execute logic at specified node
"RTN","SDECPTPL",90,0)
EXEC(NODE) ;
"RTN","SDECPTPL",91,0)
 Q
"RTN","SDECPTPL",92,0)
EXECERR K DATA
"RTN","SDECPTPL",93,0)
 S DATA(1)="-1^Error: "_$$EC^%ZOSV
"RTN","SDECPTPL",94,0)
 I 0
"RTN","SDECPTPL",95,0)
 Q
"RTN","SDECPTPL",96,0)
 ; Return default patient list source
"RTN","SDECPTPL",97,0)
GETDFLT(DATA) ;
"RTN","SDECPTPL",98,0)
 S DATA=$$GET^XPAR("ALL",$$PARAMSRC)
"RTN","SDECPTPL",99,0)
 D:DATA LISTINFO(.DATA,DATA)
"RTN","SDECPTPL",100,0)
 Q
"RTN","SDECPTPL",101,0)
 ; Save new default patient list settings
"RTN","SDECPTPL",102,0)
 ;   LIST = Default list (if missing, default is deleted)
"RTN","SDECPTPL",103,0)
 ;  .VAL  = Default settings for lists (optional)
"RTN","SDECPTPL",104,0)
SAVEDFLT(DATA,LIST,VAL) ;
"RTN","SDECPTPL",105,0)
 N LP
"RTN","SDECPTPL",106,0)
 S LIST=$S($G(LIST)>0:"`"_+LIST,1:"@")
"RTN","SDECPTPL",107,0)
 D EN^XPAR("USR",$$PARAMSRC,1,LIST,.DATA)
"RTN","SDECPTPL",108,0)
 I 'DATA,$D(VAL) D
"RTN","SDECPTPL",109,0)
 .;D NDEL^XPAR("USR",$$PARAMITM)
"RTN","SDECPTPL",110,0)
 .F LP=0:0 S LP=$O(VAL(LP)) Q:'LP!DATA  D
"RTN","SDECPTPL",111,0)
 ..S VAL=VAL(LP)
"RTN","SDECPTPL",112,0)
 ..D:VAL>0 EN^XPAR("USR",$$PARAMITM,"`"_+VAL,$TR($P(VAL,U,5,99),U,"~"),.DATA)
"RTN","SDECPTPL",113,0)
 Q
"RTN","SDECPTPL",114,0)
 ; Return date ranges for clinic appointments
"RTN","SDECPTPL",115,0)
CLINRNG(DATA) ;
"RTN","SDECPTPL",116,0)
 D GETWP^XPAR(.DATA,"ALL","BEHOPTPL DATE RANGES")
"RTN","SDECPTPL",117,0)
 Q
"RTN","SDECPTPL",118,0)
 ; Returns parameter name for default source
"RTN","SDECPTPL",119,0)
PARAMSRC() Q "BEHOPTPL DEFAULT SOURCE"
"RTN","SDECPTPL",120,0)
 ; Returns parameter name for default item
"RTN","SDECPTPL",121,0)
PARAMITM() Q "BEHOPTPL DEFAULT ITEM"
"RTN","SDECRMG")
0^145^B157648695^n/a
"RTN","SDECRMG",1,0)
SDECRMG ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRMG",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRMG",3,0)
 ;
"RTN","SDECRMG",4,0)
 Q
"RTN","SDECRMG",5,0)
 ;
"RTN","SDECRMG",6,0)
 ; Get data for GUI Request Management Grid display from:
"RTN","SDECRMG",7,0)
 ;  SD WAIT LIST
"RTN","SDECRMG",8,0)
 ;  RECALL REMINDERS
"RTN","SDECRMG",9,0)
 ;  REQUEST/CONSULTATION
"RTN","SDECRMG",10,0)
 ;  SDEC APPT REQUEST
"RTN","SDECRMG",11,0)
RMG(DATA,MAXREC,LASTSUB,FILTERIN,SORTIN,MGIENS,SDMAX) ;GET Request management Grid data
"RTN","SDECRMG",12,0)
 ;INPUT:
"RTN","SDECRMG",13,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDECRMG",14,0)
 ;  LASTSUB  - (optional) last subscripts from previous call
"RTN","SDECRMG",15,0)
 ;  FILTERIN - (optional) list of filters separated by pipe |
"RTN","SDECRMG",16,0)
 ;                        each | piece will contain the following ^ pieces
"RTN","SDECRMG",17,0)
 ;                        <filterName> ^ <value>
"RTN","SDECRMG",18,0)
 ;  SORTIN   - (optional) list of sort criteria separated by pipe |
"RTN","SDECRMG",19,0)
 ;  MGIENS   - (optional) list of IENs separated by pipe | to be sorted to the top of the return
"RTN","SDECRMG",20,0)
 ;                        each IEN needs to be prefaced by the request type initial:
"RTN","SDECRMG",21,0)
 ;                          A = APPT     A123
"RTN","SDECRMG",22,0)
 ;                          E = EWL      E123
"RTN","SDECRMG",23,0)
 ;                          C = Consult  C123  ;not implemented
"RTN","SDECRMG",24,0)
 ;                          R = Recall   R123  ;not implemented
"RTN","SDECRMG",25,0)
 ;  SDMAX    - (optional) Max records allowed to be accumulated
"RTN","SDECRMG",26,0)
 ;
"RTN","SDECRMG",27,0)
 ;RETURN:
"RTN","SDECRMG",28,0)
 ; Temp global containing the TYPE, IEN, KEY
"RTN","SDECRMG",29,0)
 N FILTER,MORE,SORT
"RTN","SDECRMG",30,0)
 S SDMAX=$G(SDMAX,200)
"RTN","SDECRMG",31,0)
 K ^TMP("SDECRMG",$J)
"RTN","SDECRMG",32,0)
 ;validate MAXREC
"RTN","SDECRMG",33,0)
 S MAXREC=$G(MAXREC)
"RTN","SDECRMG",34,0)
 S:'MAXREC MAXREC=9999999   ;MAXREC=25
"RTN","SDECRMG",35,0)
 I $G(LASTSUB)'="" D GETMORE(.DATA,LASTSUB,MAXREC) Q
"RTN","SDECRMG",36,0)
 E  D
"RTN","SDECRMG",37,0)
 .K ^TMP("SDECIDX",$J)
"RTN","SDECRMG",38,0)
 .S FILTERIN=$G(FILTERIN)
"RTN","SDECRMG",39,0)
 .S SORTIN=$G(SORTIN)
"RTN","SDECRMG",40,0)
 .S MGIENS=$G(MGIENS)
"RTN","SDECRMG",41,0)
 .D:FILTERIN'="" VALFIL(FILTERIN,.FILTER)
"RTN","SDECRMG",42,0)
 .D:SORTIN'="" VALSORT(SORTIN,.SORT)
"RTN","SDECRMG",43,0)
 .D:MGIENS'="" IEN(.MGIENS)
"RTN","SDECRMG",44,0)
 .D QUERY(MAXREC,.FILTER,.SORT,SDMAX,.MORE,.MGIENS)
"RTN","SDECRMG",45,0)
 .S LASTSUB=""
"RTN","SDECRMG",46,0)
 .D GETMORE(.DATA,LASTSUB,MAXREC,MORE)
"RTN","SDECRMG",47,0)
 Q
"RTN","SDECRMG",48,0)
QUERY(MAXREC,FILTER,SORT,SDMAX,MORE,MGIENS)  ;
"RTN","SDECRMG",49,0)
 N I,SDECI,SDHDR,SDI,SDIDX,SDIC,SDRET,DFN,SDAPTYP,SDBEG,SVCCONN,SVCCONNP,PRIGRP,DESDT,ORIGDT,ORIGDTR
"RTN","SDECRMG",50,0)
 N %DT,X,Y,FIL,DATA,PRI,PTLST,PTS,TMP,TMP1,CLINIC,CNT,ORIG,DESDTR,ID,SDSVC,SDSVCN,SVCCON,SVCCONP,URG
"RTN","SDECRMG",51,0)
 S (CNT,MORE,SDECI,SDIC)=0
"RTN","SDECRMG",52,0)
 S (CLINIC,SDALL,SDAPTYP,SDBEG,SDEND,SDSVC,SORT,PTLST,SVCCONNP,SVCCON,SVCCONN,PRIGRP,PTS,DESDT,DESDTR,ORIGDT,ORIGDTR,URG)=""
"RTN","SDECRMG",53,0)
 ;Loop through the filters and set up the variables)
"RTN","SDECRMG",54,0)
 I '$D(FILTER) D
"RTN","SDECRMG",55,0)
 .S FILTER(1)="WAITTIME^>90"
"RTN","SDECRMG",56,0)
 .S FILTER(2)="REQUESTTYPE^E~A~R~C"
"RTN","SDECRMG",57,0)
 I $D(SORT)'>1 D
"RTN","SDECRMG",58,0)
 .S SORT(1)="PRIORITYGROUP"
"RTN","SDECRMG",59,0)
 .S SORT(2)="DESIREDDATE"
"RTN","SDECRMG",60,0)
 .S SORT(3)="ORIGINATIONDATE"
"RTN","SDECRMG",61,0)
 .S SORT("D")=1
"RTN","SDECRMG",62,0)
 ;
"RTN","SDECRMG",63,0)
 S FIL=0  F  S FIL=$O(FILTER(FIL)) Q:FIL'>0  D
"RTN","SDECRMG",64,0)
 .S DATA=$G(FILTER(FIL))
"RTN","SDECRMG",65,0)
 .I $P(DATA,U,1)="ALL" D
"RTN","SDECRMG",66,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",67,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",68,0)
 ...S ID=$P(TMP,"~",I)
"RTN","SDECRMG",69,0)
 ...I "ACER"[ID S SDALL(ID)="" S SDALL=1
"RTN","SDECRMG",70,0)
 .I $P(DATA,U,1)="CLINICS" D
"RTN","SDECRMG",71,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",72,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",73,0)
 ...S ID=$$VALCL($P(TMP,"~",I))
"RTN","SDECRMG",74,0)
 ...I ID>0 S CLINIC(ID)=""
"RTN","SDECRMG",75,0)
 ..I $D(CLINIC)>0 S CLINIC=1
"RTN","SDECRMG",76,0)
 .I $P(DATA,U,1)="DESIREDDATE" D
"RTN","SDECRMG",77,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",78,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",79,0)
 ...S ID=$$DESDT($P(TMP,"~",I))
"RTN","SDECRMG",80,0)
 ...I ID>0 S DESDT(ID)=""
"RTN","SDECRMG",81,0)
 ..I $D(DESDT)>0 D
"RTN","SDECRMG",82,0)
 ...S DESDT=1
"RTN","SDECRMG",83,0)
 ...D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",84,0)
 ...S SDBEG=1000101
"RTN","SDECRMG",85,0)
 ...S SDEND=9991231
"RTN","SDECRMG",86,0)
 .I $P(DATA,U,1)="DESIREDDATERANGE" D
"RTN","SDECRMG",87,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",88,0)
 ..S DESDTR=$$DESDTR(TMP)
"RTN","SDECRMG",89,0)
 ..D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",90,0)
 ..S SDBEG=1000101
"RTN","SDECRMG",91,0)
 ..S SDEND=9991231
"RTN","SDECRMG",92,0)
 .I $P(DATA,U,1)="PATIENTNAME" D
"RTN","SDECRMG",93,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",94,0)
 ..F I=1:1:$L(TMP,"~") S:$P(TMP,"~",I)'="" PTS($P(TMP,"~",I))=""
"RTN","SDECRMG",95,0)
 ..D VALPT(.PTS)
"RTN","SDECRMG",96,0)
 ..I $D(PTS)>0 S PTS=1
"RTN","SDECRMG",97,0)
 .I $P(DATA,U,1)="ORIGINATIONDATE" D
"RTN","SDECRMG",98,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",99,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",100,0)
 ...S ID=$$ORIG($P(TMP,"~",I))
"RTN","SDECRMG",101,0)
 ...I ID>0 S ORIGDT(ID)=""
"RTN","SDECRMG",102,0)
 ...S SDBEG=$S(SDBEG="":ID,SDBEG>ID:ID,1:SDBEG)
"RTN","SDECRMG",103,0)
 ...S SDEND=$S(SDEND="":ID,ID>SDEND:ID,1:SDEND)
"RTN","SDECRMG",104,0)
 ..I $D(ORIGDT)>0 D
"RTN","SDECRMG",105,0)
 ...S ORIGDT=1
"RTN","SDECRMG",106,0)
 ...D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",107,0)
 .I $P(DATA,U,1)="ORIGDATERANGE" D
"RTN","SDECRMG",108,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",109,0)
 ..S ORIGDTR=$$DESDTR(TMP)
"RTN","SDECRMG",110,0)
 ..D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",111,0)
 ..S SDBEG=1000101
"RTN","SDECRMG",112,0)
 ..S SDEND=9991231
"RTN","SDECRMG",113,0)
 .I $P(DATA,U,1)="PRIORITYGROUPS" D
"RTN","SDECRMG",114,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",115,0)
 ..F I=1:1:$L(TMP,"~") S TMP1=$P(TMP,"~",I) S:TMP1="NULL" TMP1="GROUP 0" S PRI(TMP1)=""
"RTN","SDECRMG",116,0)
 ..D VALPRI(.PRI)
"RTN","SDECRMG",117,0)
 ..I $D(PRI)>0 S PRIGRP=1
"RTN","SDECRMG",118,0)
 .I $P(DATA,U,1)="REQUESTTYPE" D
"RTN","SDECRMG",119,0)
 ..I $P(DATA,U,2)="" S SDAPTYP="E~A~R~C"
"RTN","SDECRMG",120,0)
 ..E  S SDAPTYP=$P(DATA,U,2)
"RTN","SDECRMG",121,0)
 ..D VALSD
"RTN","SDECRMG",122,0)
 .I $P(DATA,U,1)="SCVISIT" D   ;SCVISIT is compared to the patient's SERVICE CONNECTED
"RTN","SDECRMG",123,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",124,0)
 ..S SVCCONN=$S($$UP^XLFSTR(TMP)="FALSE":"NO",$$UP^XLFSTR(TMP)="TRUE":"YES",$$UP^XLFSTR(TMP)="BOTH":"",1:TMP)
"RTN","SDECRMG",125,0)
 .I $P(DATA,U,1)="SERVICERELATED" D   ;SERVICERELATED is compared to field 15 in SD WAIT LIST and SDEC APPT REQUEST
"RTN","SDECRMG",126,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",127,0)
 ..S SVCCON=$S($$UP^XLFSTR(TMP)="NO":"NO",$$UP^XLFSTR(TMP)="FALSE":"NO",$$UP^XLFSTR(TMP)="YES":"YES",$$UP^XLFSTR(TMP)="TRUE":"YES",$$UP^XLFSTR(TMP)="BOTH":"",1:"")
"RTN","SDECRMG",128,0)
 .I $P(DATA,U,1)="SERVICES" D  ;SERVICES are clinic stop pointers to the CLINIC STOP file
"RTN","SDECRMG",129,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",130,0)
 ..F I=1:1:$L(TMP,"~") S SDSVCN=$$GET1^DIQ(40.7,+$P(TMP,"~",I)_",",.01) S:SDSVCN'="" SDSVC(SDSVCN)="",SDSVC=1
"RTN","SDECRMG",131,0)
 .I $P(DATA,U,1)="WAITTIME",SDBEG="",SDEND="" D
"RTN","SDECRMG",132,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",133,0)
 ..S SDBEG=$S(TMP["ALL DAYS":"",TMP="<30":"29",TMP="30-60":"60",TMP="60-90":"90",TMP=">=90":"",1:"")
"RTN","SDECRMG",134,0)
 ..S SDEND=$S(TMP["ALL DAYS":"",TMP="<30":"DT",TMP="30-60":"30",TMP="60-90":"60",TMP=">=90":"90",1:"90")
"RTN","SDECRMG",135,0)
 ..D VALID
"RTN","SDECRMG",136,0)
 .I $P(DATA,U,1)="URGENCY" D
"RTN","SDECRMG",137,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",138,0)
 ..F I=1:1:$L(TMP,"~") I $D(^ORD(101,+$P(TMP,"~",I),0)) S URG($P(TMP,"~",I))="",URG=1
"RTN","SDECRMG",139,0)
 ..S:$D(URG)>1 SDAPTYP="C"
"RTN","SDECRMG",140,0)
 I SDAPTYP="" S SDAPTYP="A~E~R~C"
"RTN","SDECRMG",141,0)
 ;
"RTN","SDECRMG",142,0)
 ;Now let's find our patients
"RTN","SDECRMG",143,0)
 I $D(PTS)>1 D PATIENT(.PTS,SDAPTYP,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,PRIGRP,.SORT,SDMAX,.URG,.SDSVC,.MORE,.ORIGDTR,DESDTR,.MGIENS,.SDALL)
"RTN","SDECRMG",144,0)
 E  D REQUEST(SDAPTYP,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.MORE,.ORIGDTR,DESDTR,.MGIENS,.SDALL)
"RTN","SDECRMG",145,0)
 S ^TMP("SDECIDX",$J,"MORE")=+MORE
"RTN","SDECRMG",146,0)
 Q
"RTN","SDECRMG",147,0)
VALID ;validate begin date
"RTN","SDECRMG",148,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECRMG",149,0)
 I SDBEG'="" S %DT="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-SDBEG)
"RTN","SDECRMG",150,0)
 I SDBEG="" S SDBEG=1000101   ;$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDECRMG",151,0)
 ;validate end date
"RTN","SDECRMG",152,0)
 S SDEND=$G(SDEND)
"RTN","SDECRMG",153,0)
 I SDEND'="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-SDEND)
"RTN","SDECRMG",154,0)
 I SDEND="" S SDEND=9991231   ;$$FMADD^XLFDT($P($$NOW^XLFDT,".",-90))
"RTN","SDECRMG",155,0)
 Q
"RTN","SDECRMG",156,0)
VALPT(PTS) ;Validate patients
"RTN","SDECRMG",157,0)
 ;validate DFN
"RTN","SDECRMG",158,0)
 N LP
"RTN","SDECRMG",159,0)
 S LP="" F  S LP=$O(PTS(LP)) Q:LP=""  D
"RTN","SDECRMG",160,0)
 .I '$D(^DPT(LP,0)) K PTS(LP)
"RTN","SDECRMG",161,0)
 Q
"RTN","SDECRMG",162,0)
VALSD(SDAPTYP) ;validate SDAPTYP
"RTN","SDECRMG",163,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDECRMG",164,0)
 S:SDAPTYP="" SDAPTYP="ACER"
"RTN","SDECRMG",165,0)
 I "ACER"'[SDAPTYP S @SDECY@(1)="-1^Invalid Request Type." Q
"RTN","SDECRMG",166,0)
 Q
"RTN","SDECRMG",167,0)
VALPRI(PRI) ;validate PRIGRP
"RTN","SDECRMG",168,0)
 N LP,TMP
"RTN","SDECRMG",169,0)
 S LP="" F  S LP=$O(PRI(LP)) Q:LP=""  D
"RTN","SDECRMG",170,0)
 .S TMP=LP
"RTN","SDECRMG",171,0)
 .I TMP="" S TMP="GROUP 0"
"RTN","SDECRMG",172,0)
 .I TMP'="GROUP 0",TMP'="GROUP 1",TMP'="GROUP 2",TMP'="GROUP 3",TMP'="GROUP 4",TMP'="GROUP 5",TMP'="GROUP 6",TMP'="GROUP 7",TMP'="GROUP 8" K PRI(LP)
"RTN","SDECRMG",173,0)
 Q
"RTN","SDECRMG",174,0)
DESDTR(DATA) ;validate desired date range and origination date range
"RTN","SDECRMG",175,0)
 N %DT,SDBEG,SDEND,X,Y
"RTN","SDECRMG",176,0)
 S SDBEG=$P(DATA,"~",1)
"RTN","SDECRMG",177,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y
"RTN","SDECRMG",178,0)
 I (SDBEG="")!(SDBEG=-1) S SDBEG=1000101
"RTN","SDECRMG",179,0)
 S SDEND=$P(DATA,"~",2)
"RTN","SDECRMG",180,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y
"RTN","SDECRMG",181,0)
 I (SDEND="")!(SDEND=-1) S SDEND=9991231
"RTN","SDECRMG",182,0)
 Q SDBEG_"~"_SDEND
"RTN","SDECRMG",183,0)
DESDT(DESDT) ;validate DESDT
"RTN","SDECRMG",184,0)
  N %DT,X,Y
"RTN","SDECRMG",185,0)
  I DESDT'="" S %DT="" S X=$P(DESDT,"@",1) D ^%DT S DESDT=Y
"RTN","SDECRMG",186,0)
  Q DESDT
"RTN","SDECRMG",187,0)
ORIG(ORIG) ;validate ORIGDT
"RTN","SDECRMG",188,0)
  N %DT,X,Y
"RTN","SDECRMG",189,0)
  I ORIG'="" S %DT="" S X=$P(ORIG,"@",1) D ^%DT S ORIG=Y
"RTN","SDECRMG",190,0)
  Q ORIG
"RTN","SDECRMG",191,0)
VALCL(CLINIC) ;validate Clinic
"RTN","SDECRMG",192,0)
  N IEN
"RTN","SDECRMG",193,0)
  ;is CLINIC an IEN
"RTN","SDECRMG",194,0)
  I +CLINIC,$D(^SC(CLINIC,0)) Q CLINIC
"RTN","SDECRMG",195,0)
  ;CLINIC is a name
"RTN","SDECRMG",196,0)
  S IEN=""
"RTN","SDECRMG",197,0)
  S IEN=$O(^SC("B",CLINIC,IEN))
"RTN","SDECRMG",198,0)
  I IEN="" S IEN=0
"RTN","SDECRMG",199,0)
  Q IEN
"RTN","SDECRMG",200,0)
VALFIL(FILTERIN,FILTER)  ;validate filters and build FILTER array
"RTN","SDECRMG",201,0)
 N SDC,SDI
"RTN","SDECRMG",202,0)
 K FILTER
"RTN","SDECRMG",203,0)
 S FILTERIN=$G(FILTERIN)
"RTN","SDECRMG",204,0)
 Q:FILTERIN=""
"RTN","SDECRMG",205,0)
 S SDC=0
"RTN","SDECRMG",206,0)
 F SDI=1:1:$L(FILTERIN,"|") D
"RTN","SDECRMG",207,0)
 .S SDC=SDC+1 S FILTER(SDC)=$P(FILTERIN,"|",SDI),FILTER("B",$P($P(FILTERIN,"|",SDI),"^",1),SDC)=$P(FILTERIN,"|",SDI)
"RTN","SDECRMG",208,0)
 Q
"RTN","SDECRMG",209,0)
VALSORT(SORTIN,SORT)  ;validate filters and build FILTER array
"RTN","SDECRMG",210,0)
 N SDC,SDI
"RTN","SDECRMG",211,0)
 K SORT
"RTN","SDECRMG",212,0)
 S SORTIN=$G(SORTIN,"|")
"RTN","SDECRMG",213,0)
 Q:SORTIN=""
"RTN","SDECRMG",214,0)
 S SDC=0
"RTN","SDECRMG",215,0)
 F SDI=1:1:$L(SORTIN,"|") D
"RTN","SDECRMG",216,0)
 .S SDC=SDC+1 S (SORT("B",$P(SORTIN,"|",SDI),SDC),SORT(SDC))=$P(SORTIN,"|",SDI)
"RTN","SDECRMG",217,0)
 Q
"RTN","SDECRMG",218,0)
IEN(MGIENS)  ;build IEN array
"RTN","SDECRMG",219,0)
 N SDI
"RTN","SDECRMG",220,0)
 S MGIENS=$G(MGIENS)
"RTN","SDECRMG",221,0)
 Q:MGIENS=""
"RTN","SDECRMG",222,0)
 F SDI=1:1:$L(MGIENS,"|") D
"RTN","SDECRMG",223,0)
 .S MGIENS($P(MGIENS,"|",SDI))=""
"RTN","SDECRMG",224,0)
 Q
"RTN","SDECRMG",225,0)
REQUEST(SDAPTYP,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,MORE,ORIGDTR,DESDTR,MGIENS,SDALL) ;Filter first on request type
"RTN","SDECRMG",226,0)
 N SDCNT,SDLAST,SDMAX1
"RTN","SDECRMG",227,0)
 S SDCNT=0
"RTN","SDECRMG",228,0)
 D:MGIENS'="" MGIENS^SDECRMG2(.MGIENS,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT)
"RTN","SDECRMG",229,0)
 S MORE=1
"RTN","SDECRMG",230,0)
 I SDAPTYP["E" D WAIT^SDECRMG1(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL)
"RTN","SDECRMG",231,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",232,0)
 I SDAPTYP["A" D APPT^SDECRMG1(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL)
"RTN","SDECRMG",233,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",234,0)
 I SDAPTYP["C" D CONSULT^SDECRMG2(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",235,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",236,0)
 I SDAPTYP["R" D RECALL^SDECRMG1(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",237,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",238,0)
 S MORE=0
"RTN","SDECRMG",239,0)
 Q
"RTN","SDECRMG",240,0)
PATIENT(PTS,SDAPTYP,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,PRIGRP,SORT,SDMAX,URG,SDSVC,MORE,ORIGDTR,DESDTR,MGIENS,SDALL) ;Filter first on patient
"RTN","SDECRMG",241,0)
 N LOOP,DFN,SDCNT,SDLAST,SDMAX1
"RTN","SDECRMG",242,0)
 S SDCNT=0
"RTN","SDECRMG",243,0)
 D:MGIENS'="" MGIENS^SDECRMG2(.MGIENS,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT)
"RTN","SDECRMG",244,0)
 S LOOP="" F  S LOOP=$O(PTS(LOOP)) Q:LOOP=""  D
"RTN","SDECRMG",245,0)
 .S DFN=LOOP
"RTN","SDECRMG",246,0)
 .S MORE=1
"RTN","SDECRMG",247,0)
 .I (SDAPTYP["A")!(SDAPTYP["V") D APPT^SDECRMG1(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL)
"RTN","SDECRMG",248,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",249,0)
 .I SDAPTYP["C" D CONSULT^SDECRMG2(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",250,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",251,0)
 .I SDAPTYP["R" D RECALL^SDECRMG1(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",252,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",253,0)
 .I SDAPTYP["E" D WAIT^SDECRMG1(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL)
"RTN","SDECRMG",254,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",255,0)
 .S MORE=0
"RTN","SDECRMG",256,0)
 Q
"RTN","SDECRMG",257,0)
GETMORE(DATA,LASTSUB,MAX,MORE)  ;
"RTN","SDECRMG",258,0)
 N LP,CNT,NODE
"RTN","SDECRMG",259,0)
 S CNT=0,MAX=$G(MAX),MORE=$G(MORE)
"RTN","SDECRMG",260,0)
 I MAX="" S MAX=25
"RTN","SDECRMG",261,0)
 S DATA=$$TMPGBL
"RTN","SDECRMG",262,0)
 S @DATA@(0)="T00030TYPE^T00030IEN^T00030KEY^T00030TOTAL^T00030MORE"_$C(30)
"RTN","SDECRMG",263,0)
 S LP=LASTSUB F  S LP=$O(^TMP("SDECIDX",$J,"XREF",LP)) Q:LP=""  D  Q:(CNT=MAX)
"RTN","SDECRMG",264,0)
 .S NODE=$G(^TMP("SDECIDX",$J,"XREF",LP))
"RTN","SDECRMG",265,0)
 .S $P(NODE,U,4)=$G(^TMP("SDECIDX",$J,"COUNT"))
"RTN","SDECRMG",266,0)
 .S $P(NODE,U,5)=+$G(^TMP("SDECIDX",$J,"MORE"))
"RTN","SDECRMG",267,0)
 .S CNT=CNT+1
"RTN","SDECRMG",268,0)
 .S @DATA@(CNT)=NODE_$C(30)
"RTN","SDECRMG",269,0)
 S @DATA@(CNT)=$P(@DATA@(CNT),$C(30))_$C(30,31)
"RTN","SDECRMG",270,0)
 Q
"RTN","SDECRMG",271,0)
 ;
"RTN","SDECRMG",272,0)
TMPGBL() ;EP-
"RTN","SDECRMG",273,0)
 K ^TMP("SDECRMG",$J) Q $NA(^($J))
"RTN","SDECRMG",274,0)
 ;
"RTN","SDECRMG",275,0)
CALIGN(DATA,SDHDR) ;
"RTN","SDECRMG",276,0)
 N RET,SDI,SDPOS
"RTN","SDECRMG",277,0)
 S RET=""
"RTN","SDECRMG",278,0)
 F SDI=1:1:$L(DATA,U) D
"RTN","SDECRMG",279,0)
 .S SDPOS=SDHDR("C",SDI)
"RTN","SDECRMG",280,0)
 .S $P(RET,U,SDPOS)=$P(DATA,U,SDI)
"RTN","SDECRMG",281,0)
 S $P(RET,U,SDHDR("C","RMGTYPE"))="C"
"RTN","SDECRMG",282,0)
 Q RET
"RTN","SDECRMG",283,0)
 ;
"RTN","SDECRMG",284,0)
GETNEXT(LASTSUB,MAXREC,SDECY) ;return next set of records
"RTN","SDECRMG",285,0)
 N SD1,SD2,SD3,SD4,SD5,SDECI,SDIDX,SDSUB,SDTMP
"RTN","SDECRMG",286,0)
 S MAXREC=$G(MAXREC,25)
"RTN","SDECRMG",287,0)
 S SDIDX=$P(LASTSUB,"|",1)
"RTN","SDECRMG",288,0)
 S SDSUB=""
"RTN","SDECRMG",289,0)
 S SDECI=0
"RTN","SDECRMG",290,0)
 S @SDECY@(SDECI)=@SDIDX@("HDR")
"RTN","SDECRMG",291,0)
 S SD1=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:"") S $P(LASTSUB,"|",2)=""
"RTN","SDECRMG",292,0)
 F  S SD1=$O(@SDIDX@("DATA",SD1)) Q:SD1=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",2)=SD1 Q
"RTN","SDECRMG",293,0)
 .S SD2=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:"") S $P(LASTSUB,"|",3)=""
"RTN","SDECRMG",294,0)
 .F  S SD2=$O(@SDIDX@("DATA",SD1,SD2)) Q:SD2=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",3)=SD2 Q
"RTN","SDECRMG",295,0)
 ..S SD3=$S($P(LASTSUB,"|",4)'="":$P(LASTSUB,"|",4),1:"") S $P(LASTSUB,"|",4)=""
"RTN","SDECRMG",296,0)
 ..F  S SD3=$O(@SDIDX@("DATA",SD1,SD2,SD3)) Q:SD3=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",4)=SD3 Q
"RTN","SDECRMG",297,0)
 ...S SD4=$S($P(LASTSUB,"|",5)'="":$P(LASTSUB,"|",5),1:"") S $P(LASTSUB,"|",5)=""
"RTN","SDECRMG",298,0)
 ...F  S SD4=$O(@SDIDX@("DATA",SD1,SD2,SD3,SD4)) Q:SD4=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",5)=SD4 Q
"RTN","SDECRMG",299,0)
 ....S SD5=$S($P(LASTSUB,"|",6)'="":$P(LASTSUB,"|",6),1:"") S $P(LASTSUB,"|",6)=""
"RTN","SDECRMG",300,0)
 ....F  S SD5=$O(@SDIDX@("DATA",SD1,SD2,SD3,SD4,SD5)) Q:SD5=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",6)=SD5 Q
"RTN","SDECRMG",301,0)
 .....S SDECI=SDECI+1 S @SDECY@(SDECI)=@SDIDX@("DATA",SD1,SD2,SD3,SD4,SD5)_$C(30)
"RTN","SDECRMG",302,0)
 I SDSUB="" K @SDIDX
"RTN","SDECRMG",303,0)
 I SDSUB'="" D
"RTN","SDECRMG",304,0)
 .S $P(SDSUB,"|",1)=SDIDX
"RTN","SDECRMG",305,0)
 .S SDTMP=@SDECY@(SDECI)
"RTN","SDECRMG",306,0)
 .S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECRMG",307,0)
 .S $P(SDTMP,U,@SDIDX@("LASTSUB"))=SDSUB
"RTN","SDECRMG",308,0)
 .S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECRMG",309,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECRMG",310,0)
 Q
"RTN","SDECRMG",311,0)
 ;
"RTN","SDECRMG",312,0)
SFILTER(FILTERS,FILTER1,FILVAL)  ;set/change existing filter value
"RTN","SDECRMG",313,0)
 N FILD
"RTN","SDECRMG",314,0)
 S FILD="" F  S FILD=$O(^FILTERS("B",FILTER1,FILD)) Q:FILD=""  D
"RTN","SDECRMG",315,0)
 .S $P(FILTERS(FILD),"^",2)=FILVAL
"RTN","SDECRMG",316,0)
 Q
"RTN","SDECRMG1")
0^146^B130816452^n/a
"RTN","SDECRMG1",1,0)
SDECRMG1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRMG1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRMG1",3,0)
 ;
"RTN","SDECRMG1",4,0)
 ; The following entry point causes the ^XTMP("SDEC","IDX" global
"RTN","SDECRMG1",5,0)
 ; to be rebuilt based on the scheduling of the SDEC BUILD IDX option.
"RTN","SDECRMG1",6,0)
WAIT(SDCY,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTE,ORIGDTR,SDCNT,MGIENS,SDALL)  ;EP
"RTN","SDECRMG1",7,0)
 ;Key stored in 56th piec
"RTN","SDECRMG1",8,0)
 ;SVCCONNP - 37th piece
"RTN","SDECRMG1",9,0)
 ;Desired DATE - 24th piece
"RTN","SDECRMG1",10,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECRMG1",11,0)
 ;Priority Group - 33th piece
"RTN","SDECRMG1",12,0)
 ;IEN in 7th piece
"RTN","SDECRMG1",13,0)
 Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",14,0)
 N LP,NOD,GBL,DLM,TYP,SDCF,SDI,X
"RTN","SDECRMG1",15,0)
 N RET,WLIEN1,LASTSUB
"RTN","SDECRMG1",16,0)
 S SDCF=1
"RTN","SDECRMG1",17,0)
 I +CLINIC S SDCF=0 D
"RTN","SDECRMG1",18,0)
 .S SDI="" F  S SDI=$O(CLINIC(SDI)) Q:SDI=""  D  Q:SDCF=1
"RTN","SDECRMG1",19,0)
 ..S:$O(^SDWL(409.32,"B",SDI,0)) SDCF=1
"RTN","SDECRMG1",20,0)
 Q:'+SDCF
"RTN","SDECRMG1",21,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",22,0)
 S GBL="~SDWL(409.3,"
"RTN","SDECRMG1",23,0)
 S DLM="|",TYP="E",LASTSUB=""
"RTN","SDECRMG1",24,0)
 S WLIEN1=$G(WLIEN1),MAXREC=$G(MAXREC),SDBEG=$G(SDBEG),SDEND=$G(SDEND),DFN=$G(DFN),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",25,0)
 S:SDBEG="" SDBEG=1000101
"RTN","SDECRMG1",26,0)
 S:SDEND="" SDEND=$S(DFN'="":9991231,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))
"RTN","SDECRMG1",27,0)
 S SVCCONN=$G(SVCCONN)
"RTN","SDECRMG1",28,0)
 S SVCCON=$G(SVCCON)
"RTN","SDECRMG1",29,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",30,0)
 S SDLASTE=$G(SDLASTE)
"RTN","SDECRMG1",31,0)
 F  D  Q:SDLASTE=""  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",32,0)
 .D WLGET^SDEC(.RET,WLIEN1,SDMAX-SDCNT,SDBEG,SDEND,DFN,SDLASTE,+$D(SORT("B","ETOPD")))
"RTN","SDECRMG1",33,0)
 .S X=$O(@RET@(9999999),-1) S NOD=@RET@(X) S SDLASTE=$P(NOD,U,56)
"RTN","SDECRMG1",34,0)
 .I 'X S SDLASTE="" Q
"RTN","SDECRMG1",35,0)
 .S LP=0 F  S LP=$O(@RET@(LP)) Q:LP=""  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",36,0)
 ..S NOD=@RET@(LP)
"RTN","SDECRMG1",37,0)
 ..Q:$D(MGIENS("E"_$P(NOD,U,7)))
"RTN","SDECRMG1",38,0)
 ..D WAIT1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD)
"RTN","SDECRMG1",39,0)
 Q
"RTN","SDECRMG1",40,0)
WAIT1(MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,NOD,MGIENS,SDALL) ;get/check/process 1 entry
"RTN","SDECRMG1",41,0)
 N CLGP,DDTE,DESGP,IEN,ODTE,ORIGGP,PGRP,PT,SCPRI,SORTSTR,SVCP,SVCPINV,TYP,WAITD
"RTN","SDECRMG1",42,0)
 S TYP="E"
"RTN","SDECRMG1",43,0)
 S PGRP=$P(NOD,U,33)   ;compare to ENROLLMENT PRIORITY 28 instead of Patient's Priority Group in 33
"RTN","SDECRMG1",44,0)
 S PT=$P(NOD,U,1)
"RTN","SDECRMG1",45,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q             ;No match on patients
"RTN","SDECRMG1",46,0)
 I PGRP="" S PGRP="GROUP 0"
"RTN","SDECRMG1",47,0)
 I PRIGRP=1,$D(PRI(PGRP))=0 Q                 ;No match on priority group
"RTN","SDECRMG1",48,0)
 S CLGP=$P(NOD,U,16) ;I CLGP'="" S CLGP=$$GET1^DIQ(409.32,CLGP_",",.01,"I")
"RTN","SDECRMG1",49,0)
 I +CLINIC,CLGP="" Q
"RTN","SDECRMG1",50,0)
 I +CLINIC,CLGP'="",$D(CLINIC(CLGP))=0 Q       ;match clinic filter
"RTN","SDECRMG1",51,0)
 ;I CLGP'="",$$GET1^DIQ(44,CLGP_",",2502.3,"I")=1 Q  ;do not return if HIDE FROM DISPLAY IN GUI? is yes
"RTN","SDECRMG1",52,0)
 S DESGP=$P(NOD,U,24)
"RTN","SDECRMG1",53,0)
 I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",54,0)
 I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",55,0)
 S ORIGGP=$P(NOD,U,8)
"RTN","SDECRMG1",56,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",57,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",58,0)
 S IEN=$P(NOD,U,7)
"RTN","SDECRMG1",59,0)
 S SVCP=$P(NOD,U,37)
"RTN","SDECRMG1",60,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG1",61,0)
 I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(NOD,U,36)="")  Q:SVCCONN'=$P(NOD,U,36)   ;SCVisit for filter (patient)
"RTN","SDECRMG1",62,0)
 ;S SCPRI=$S($P(NOD,U,36)="YES":0,1:1)                                                        ;SCVisit for sorting
"RTN","SDECRMG1",63,0)
 S SCPRI=$P(NOD,U,26)="YES"
"RTN","SDECRMG1",64,0)
 I SVCCON'="",SVCCON'="BOTH" Q:(SVCCON="NO")&($P(NOD,U,44)="")  Q:SVCCON'=$P(NOD,U,44)       ;SERVICERELATED for filter (request)
"RTN","SDECRMG1",65,0)
 I +SDSVC Q:$P(NOD,U,15)=""  Q:'$D(SDSVC($P(NOD,U,15)))             ;Service/Clinic Stop
"RTN","SDECRMG1",66,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT($P(NOD,U,8)))
"RTN","SDECRMG1",67,0)
 S WAITD=9999999-WAITD                          ;Wait days for sorting
"RTN","SDECRMG1",68,0)
 S ODTE=$P($$CVTDT($P(NOD,U,8)),".")   ;Origination date for sorting
"RTN","SDECRMG1",69,0)
 S DDTE=$P($$CVTDT($P(NOD,U,24)),".")  ;Desired date for sorting
"RTN","SDECRMG1",70,0)
 ;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",71,0)
 S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,.MGIENS)
"RTN","SDECRMG1",72,0)
 D SETNODE(WAITD,TYP,IEN,NOD,56,SORTSTR,.SDCNT)
"RTN","SDECRMG1",73,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG1",74,0)
 Q
"RTN","SDECRMG1",75,0)
APPT(SDECY,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,MGIENS,SDALL)  ; EP get data from appt request file
"RTN","SDECRMG1",76,0)
  Q:'$$TEST("ARGET^SDECAR1")
"RTN","SDECRMG1",77,0)
  Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",78,0)
 ;Key stored in 56th piece
"RTN","SDECRMG1",79,0)
 ;SVCCONNP - 30th piece
"RTN","SDECRMG1",80,0)
 ;Desired DATE - 20th piece
"RTN","SDECRMG1",81,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECRMG1",82,0)
 ;Priority Group - 26th piece
"RTN","SDECRMG1",83,0)
 ;IEN in 7th piece
"RTN","SDECRMG1",84,0)
 N LP,NOD,GBL,DLM,TYP,X
"RTN","SDECRMG1",85,0)
 N RET,LASTSUB
"RTN","SDECRMG1",86,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",87,0)
 S SVCCONN=$G(SVCCONN)
"RTN","SDECRMG1",88,0)
 S SVCCON=$G(SVCCON)
"RTN","SDECRMG1",89,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",90,0)
 S LASTSUB=""
"RTN","SDECRMG1",91,0)
 S DLM="|",TYP="A"
"RTN","SDECRMG1",92,0)
 S GBL="~SDEC(409.85,"
"RTN","SDECRMG1",93,0)
 S MAXREC=$G(MAXREC),SDBEG=$G(SDBEG),SDEND=$G(SDEND),DFN=$G(DFN),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",94,0)
 S:SDBEG="" SDBEG=1000101
"RTN","SDECRMG1",95,0)
 S:SDEND="" SDEND=$S(DFN'="":9991231,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))
"RTN","SDECRMG1",96,0)
 S SDLASTA=$G(SDLASTA)
"RTN","SDECRMG1",97,0)
 F  D  Q:SDLASTA=""  Q:SDCNT'<SDMAX   ;we throw some records out based on filters; continue until there are SDMAX records
"RTN","SDECRMG1",98,0)
 .D ARGET^SDEC(.RET,,SDMAX-SDCNT,SDBEG,SDEND,DFN,SDLASTA)
"RTN","SDECRMG1",99,0)
 .S X=$O(@RET@(9999999),-1) S NOD=@RET@(X) S SDLASTA=$P(NOD,U,56)  ;get LASTSUB
"RTN","SDECRMG1",100,0)
 .I 'X S SDLASTA="" Q
"RTN","SDECRMG1",101,0)
 .S LP=0 F  S LP=$O(@RET@(LP)) Q:LP=""  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",102,0)
 ..S NOD=@RET@(LP)
"RTN","SDECRMG1",103,0)
 ..Q:$D(MGIENS("A"_$P(NOD,U,7)))
"RTN","SDECRMG1",104,0)
 ..D APPT1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD)
"RTN","SDECRMG1",105,0)
 Q
"RTN","SDECRMG1",106,0)
APPT1(MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,NOD,MGIENS) ;get/check/process 1 entry
"RTN","SDECRMG1",107,0)
 N CLGP,DDTE,DESGP,IEN,ODTE,ORIGGP,PGRP,PT,SCPRI,SORTSTR,SVCP,SVCPINV,TYP,WAITD
"RTN","SDECRMG1",108,0)
 S TYP="A"
"RTN","SDECRMG1",109,0)
 S PGRP=$P(NOD,U,26)   ;compare to ENROLLMENT PRIORITY 22 instead of Patient's Priority Group in 26
"RTN","SDECRMG1",110,0)
 I PGRP="" S PGRP="GROUP 0"              ;Priority Grp
"RTN","SDECRMG1",111,0)
 S PT=$P(NOD,U,1)                        ;Patient
"RTN","SDECRMG1",112,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q         ;match clinic
"RTN","SDECRMG1",113,0)
 I PRIGRP=1,$D(PRI(PGRP))=0 Q          ;No match on priority group
"RTN","SDECRMG1",114,0)
 S CLGP=$P(NOD,U,12)
"RTN","SDECRMG1",115,0)
 I +CLINIC,$D(CLINIC(+CLGP))=0 Q         ;match clinic
"RTN","SDECRMG1",116,0)
 ;I CLGP'="",$$GET1^DIQ(44,CLGP_",",2502.3,"I")=1 Q  ;sat - do not return if HIDE FROM DISPLAY IN GUI? is yes
"RTN","SDECRMG1",117,0)
 S DESGP=$P(NOD,U,20)
"RTN","SDECRMG1",118,0)
 I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",119,0)
 I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",120,0)
 S ORIGGP=$P(NOD,U,8)
"RTN","SDECRMG1",121,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",122,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",123,0)
 S IEN=$P(NOD,U,7)
"RTN","SDECRMG1",124,0)
 S SVCP=$P(NOD,U,30)
"RTN","SDECRMG1",125,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG1",126,0)
 I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(NOD,U,29)="")  Q:SVCCONN'=$P(NOD,U,29)       ;SCVisit for filter (patient)
"RTN","SDECRMG1",127,0)
 ;S SCPRI=$S($P(NOD,U,36)="YES":0,1:1)            ;SCVisit for sorting
"RTN","SDECRMG1",128,0)
 I SVCCON'="",SVCCON'="BOTH" Q:(SVCCON="NO")&($P(NOD,U,37)="")  Q:SVCCON'=$P(NOD,U,37)           ;SERVICERELATED for filter (request)
"RTN","SDECRMG1",129,0)
 S SCPRI=1                                       ;SCVisit for sorting
"RTN","SDECRMG1",130,0)
 I +SDSVC Q:$P(NOD,U,58)=""  Q:'$D(SDSVC($P(NOD,U,58)))             ;Service/Clinic Stop
"RTN","SDECRMG1",131,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$P(NOD,U,8))
"RTN","SDECRMG1",132,0)
 S WAITD=9999999-WAITD
"RTN","SDECRMG1",133,0)
 S ODTE=$P($$CVTDT($P(NOD,U,8)),".")
"RTN","SDECRMG1",134,0)
 S DDTE=$P($$CVTDT($P(NOD,U,20)),".")
"RTN","SDECRMG1",135,0)
 ;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",136,0)
 S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,.MGIENS)
"RTN","SDECRMG1",137,0)
 D SETNODE(WAITD,TYP,IEN,NOD,56,SORTSTR,.SDCNT)
"RTN","SDECRMG1",138,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG1",139,0)
 Q
"RTN","SDECRMG1",140,0)
 ;
"RTN","SDECRMG1",141,0)
 ;Return recall list
"RTN","SDECRMG1",142,0)
RECALL(RET,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTR,ORIGDTR,SDCNT,MGIENS,SDALL) ;EP
"RTN","SDECRMG1",143,0)
 Q:'$$TEST("RECGET^SDEC52")
"RTN","SDECRMG1",144,0)
 Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",145,0)
 ;Key stored in 42nd piece
"RTN","SDECRMG1",146,0)
 ;SVCCONNP - 29th piece
"RTN","SDECRMG1",147,0)
 ;Desired DATE - 19th piece - External format
"RTN","SDECRMG1",148,0)
 ;Origination Date - ORIGDT - 32nd piece
"RTN","SDECRMG1",149,0)
 ;Priority Group - 25th piece
"RTN","SDECRMG1",150,0)
 ;IEN - 1st piece
"RTN","SDECRMG1",151,0)
 N LP,NOD,GBL,SVCP,PG,DD,OD,DLM,TYP,PT,SORTSTR,SVCP,SCPRI,ORIGGP
"RTN","SDECRMG1",152,0)
 N CLGP,IEN,PGRP,SDECY,SVCP,SVCPINV,LASTSUB,ODTE,DDTE,WAITD,X
"RTN","SDECRMG1",153,0)
 Q:$G(SVCCON)'=""   ;only SD WAIT LIST and SDEC APPT REQUEST have this value
"RTN","SDECRMG1",154,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",155,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",156,0)
 S GBL="~SD(403.5,"
"RTN","SDECRMG1",157,0)
 S DLM="|",TYP="R",LASTSUB=""
"RTN","SDECRMG1",158,0)
 S DFN=$G(DFN),SDBEG=$G(SDBEG),SDEND=$G(SDEND),MAXREC=$G(MAXREC),SDLASTR=$G(SDLASTR),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",159,0)
 F  D  Q:SDLASTR=""  Q:SDCNT'<SDMAX   ;we throw some records out based on filters; continue until there are SDMAX records
"RTN","SDECRMG1",160,0)
 .D RECGET^SDEC(.SDECY,DFN,SDBEG,SDEND,SDMAX-SDCNT,SDLASTR)
"RTN","SDECRMG1",161,0)
 .S X=$O(@SDECY@(9999999),-1) S NOD=@SDECY@(X) S SDLASTR=$P(NOD,U,56)  ;get LASTSUB
"RTN","SDECRMG1",162,0)
 .I 'X S SDLASTR="" Q
"RTN","SDECRMG1",163,0)
 .S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP=""  D
"RTN","SDECRMG1",164,0)
 ..S NOD=@SDECY@(LP)
"RTN","SDECRMG1",165,0)
 ..S SVCP=$P(NOD,U,29)                             ;Service connected percentage
"RTN","SDECRMG1",166,0)
 ..S SVCPINV=100-SVCP
"RTN","SDECRMG1",167,0)
 ..S PGRP=$P(NOD,U,25)
"RTN","SDECRMG1",168,0)
 ..S PT=$P(NOD,U,2)                                ;Patient
"RTN","SDECRMG1",169,0)
 ..I PTS'="",PT'="",$D(PTS(PT))=0 Q
"RTN","SDECRMG1",170,0)
 ..I PGRP="" S PGRP="GROUP 0"                      ;Priority Grp
"RTN","SDECRMG1",171,0)
 ..I PRIGRP'="",$D(PRI(PGRP))=0 Q                 ;No match on priority group
"RTN","SDECRMG1",172,0)
 ..S CLGP=$P(NOD,U,16)
"RTN","SDECRMG1",173,0)
 ..I +CLINIC,CLGP'="",$D(CLINIC(CLGP))=0 Q                 ;match clinic
"RTN","SDECRMG1",174,0)
 ..;I CLGP'="",$$GET1^DIQ(44,CLGP_",",2502.3,"I")=1 Q  ;do not return if HIDE FROM DISPLAY IN GUI? is yes
"RTN","SDECRMG1",175,0)
 ..I +SDSVC N SDSVCN S SDSVCN=$$GET1^DIQ(44,+$P(NOD,U,16)_",",8,"E") Q:SDSVCN=""  Q:'$D(SDSVC(SDSVCN))   ;check service
"RTN","SDECRMG1",176,0)
 ..S DESGP=$P(NOD,U,19)
"RTN","SDECRMG1",177,0)
 ..I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",178,0)
 ..I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",179,0)
 ..S ORIGGP=$P(NOD,U,32)
"RTN","SDECRMG1",180,0)
 ..I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",181,0)
 ..I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",182,0)
 ..S IEN=$P(NOD,U,1)
"RTN","SDECRMG1",183,0)
 ..I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(NOD,U,28)="")  Q:SVCCONN'=$P(NOD,U,28)           ;SCVisit for filter (patient)
"RTN","SDECRMG1",184,0)
 ..S SCPRI=0                               ;SCVisit for sorting
"RTN","SDECRMG1",185,0)
 ..S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT($P(NOD,U,19)))
"RTN","SDECRMG1",186,0)
 ..S WAITD=9999999-WAITD
"RTN","SDECRMG1",187,0)
 ..S ODTE=$P($$CVTDT($P(NOD,U,32)),".")
"RTN","SDECRMG1",188,0)
 ..S DDTE=$P($$CVTDT($P(NOD,U,19)),".")
"RTN","SDECRMG1",189,0)
 ..;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",190,0)
 ..S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI)
"RTN","SDECRMG1",191,0)
 ..D SETNODE(WAITD,TYP,IEN,NOD,42,SORTSTR,.SDCNT)
"RTN","SDECRMG1",192,0)
 ..;S SDCNT=SDCNT+1
"RTN","SDECRMG1",193,0)
 Q
"RTN","SDECRMG1",194,0)
 ;
"RTN","SDECRMG1",195,0)
SETNODE(S1,S2,S3,VAL,KEYP,SLIST,CNT) ;EP-
"RTN","SDECRMG1",196,0)
 ;  S1    =Wait Days
"RTN","SDECRMG1",197,0)
 ;  S2    =Request Type - A C E R
"RTN","SDECRMG1",198,0)
 ;  S3    =Request Type IEN
"RTN","SDECRMG1",199,0)
 ;  VAL   = Request Type data from rpc call
"RTN","SDECRMG1",200,0)
 ;  KEYP  = Storage piece number where LASTSUB is stored
"RTN","SDECRMG1",201,0)
 ;  SLIST = Sort String from $$SORT
"RTN","SDECRMG1",202,0)
 Q:'$L($D(S1))!'$L($D(S2))!'$L($D(S3))
"RTN","SDECRMG1",203,0)
 N KEY,DLM
"RTN","SDECRMG1",204,0)
 S DLM="|"
"RTN","SDECRMG1",205,0)
 Q:$D(^TMP("SDECIDX",$J,"XREF-ID",S2_DLM_S3))  ;quit if duplicate
"RTN","SDECRMG1",206,0)
 ;S KEY=9999999-S1_DLM_S2_DLM_S3_DLM_SLIST
"RTN","SDECRMG1",207,0)
 S KEY=SLIST_DLM_S3
"RTN","SDECRMG1",208,0)
 S CNT=$G(CNT)+1
"RTN","SDECRMG1",209,0)
 S VAL=$P(VAL,$C(30))
"RTN","SDECRMG1",210,0)
 S:$G(KEYP) $P(VAL,U,KEYP)=KEY
"RTN","SDECRMG1",211,0)
 S ^TMP("SDECIDX",$J,"DATA",CNT)=$G(VAL)
"RTN","SDECRMG1",212,0)
 S ^TMP("SDECIDX",$J,"XREF",KEY)=S2_U_S3_U_KEY
"RTN","SDECRMG1",213,0)
 S ^TMP("SDECIDX",$J,"COUNT")=CNT
"RTN","SDECRMG1",214,0)
 S ^TMP("SDECIDX",$J,"XREF-ID",S2_DLM_S3)=""
"RTN","SDECRMG1",215,0)
 Q
"RTN","SDECRMG1",216,0)
 ;
"RTN","SDECRMG1",217,0)
SETNODEP(GBL,VAL) ;EP-
"RTN","SDECRMG1",218,0)
 Q:'$L($D(GBL))
"RTN","SDECRMG1",219,0)
 S ^XTMP("SDEC","IDX","PATTERNS",GBL)=$P($G(VAL),$C(30))
"RTN","SDECRMG1",220,0)
 Q
"RTN","SDECRMG1",221,0)
 ;
"RTN","SDECRMG1",222,0)
PC(VAL,PIECE,DLM) ;EP-
"RTN","SDECRMG1",223,0)
 S DLM=$G(DLM,U)
"RTN","SDECRMG1",224,0)
 Q $P($G(VAL),DLM,+$G(PIECE))
"RTN","SDECRMG1",225,0)
 ;
"RTN","SDECRMG1",226,0)
 ;SORT(SORT)   ;Sort out the variables
"RTN","SDECRMG1",227,0)
SORT(SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,MGIENS) ;
"RTN","SDECRMG1",228,0)
 N SOR,SCNT,SD,STRING,DLM,STR
"RTN","SDECRMG1",229,0)
 N STCNT,STID,STJ,STTYP
"RTN","SDECRMG1",230,0)
 S SCNT=0,(STR,STRING)="",DLM="|"
"RTN","SDECRMG1",231,0)
 I $D(MGIENS(TYP_IEN)) S STRING="0|0|0"
"RTN","SDECRMG1",232,0)
 S SOR=""  F  S SOR=$O(SORT(SOR)) Q:SOR'>0  D
"RTN","SDECRMG1",233,0)
 .S SCNT=SCNT+1
"RTN","SDECRMG1",234,0)
 .S SD=$G(SORT(SOR))
"RTN","SDECRMG1",235,0)
 .S STR=""
"RTN","SDECRMG1",236,0)
 .;I SD?1A1.N.A D
"RTN","SDECRMG1",237,0)
 .;.S STCNT=-1
"RTN","SDECRMG1",238,0)
 .;.S STTYP=$E(SD,1),SD=$E(SD,2,$L(SD))
"RTN","SDECRMG1",239,0)
 .;.F STJ=1:1:$L(SD,"~") D
"RTN","SDECRMG1",240,0)
 .;..S STID=$P(SD,"~",STJ)
"RTN","SDECRMG1",241,0)
 .;..Q:TYP'=STTYP
"RTN","SDECRMG1",242,0)
 .;..Q:STID'=IEN
"RTN","SDECRMG1",243,0)
 .;..S STCNT=STCNT+1 S STR="0|"_STCNT
"RTN","SDECRMG1",244,0)
 .S STR=$S(SD="RTOPD":$S(TYP="R":0,1:1),SD="ATOPD":$S(TYP="A":0,1:1),SD="ETOPD":$S(TYP="E":0,1:1),SD="CTOPD":$S(TYP="C":0,1:1),1:"")
"RTN","SDECRMG1",245,0)
 .S:STR=0 STR=STR_"|"_$$PAD(999999999-IEN)
"RTN","SDECRMG1",246,0)
 .I SD="PRIORITYGROUP" D
"RTN","SDECRMG1",247,0)
 ..S STR=$S(PGRP="GROUP 0":0,PGRP="GROUP 1":1,PGRP="GROUP 2":2,PGRP="GROUP 3":3,PGRP="GROUP 4":4,PGRP="GROUP 5":5,PGRP="GROUP 6":6,PGRP="GROUP 7":7,PGRP="GROUP 8":8,1:0)
"RTN","SDECRMG1",248,0)
 ..S STR=STR_DLM_0
"RTN","SDECRMG1",249,0)
 ..;I +SCPRI S STR=$S(STR=0:0,1:1)_DLM_0
"RTN","SDECRMG1",250,0)
 ..;E  S STR=STR_DLM_1
"RTN","SDECRMG1",251,0)
 .S:STR="" STR=$S(SD="WAITTIME":WAITD,SD="REQUESTTYPE":TYP,SD="PATIENTNAME":PT,SD="SCVISIT":SVCPINV,SD="CLINICS":CLGP,SD="DESIREDDATE":DDTE,SD="ORIGINATIONDATE":ODTE,1:"")
"RTN","SDECRMG1",252,0)
 .I SD="PATIENTNAME" S STR=$$GET1^DIQ(2,PT_",",.01)
"RTN","SDECRMG1",253,0)
 .I SD="CLINICS" S STR=$$GET1^DIQ(44,CLGP_",",.01)
"RTN","SDECRMG1",254,0)
 .I STRING="" S STRING=STR
"RTN","SDECRMG1",255,0)
 .E  S STRING=STRING_DLM_STR
"RTN","SDECRMG1",256,0)
 Q STRING
"RTN","SDECRMG1",257,0)
 ;
"RTN","SDECRMG1",258,0)
PAD(STRING,CHAR,CNT) ;prepend characters (default is 0 zero) to STRING
"RTN","SDECRMG1",259,0)
 N SDI,SDR
"RTN","SDECRMG1",260,0)
 S STRING=$G(STRING)
"RTN","SDECRMG1",261,0)
 S CHAR=$G(CHAR)
"RTN","SDECRMG1",262,0)
 S:CHAR="" CHAR="0"
"RTN","SDECRMG1",263,0)
 S CNT=$G(CNT)
"RTN","SDECRMG1",264,0)
 S:+CNT CNT=+CNT+1
"RTN","SDECRMG1",265,0)
 S:'+CNT CNT=10   ;(9 characters)
"RTN","SDECRMG1",266,0)
 S $P(SDR,CHAR,CNT-$L(STRING))=STRING
"RTN","SDECRMG1",267,0)
 Q SDR
"RTN","SDECRMG1",268,0)
 ; Test for tag/routine
"RTN","SDECRMG1",269,0)
TEST(X) ;EP
"RTN","SDECRMG1",270,0)
 N Z
"RTN","SDECRMG1",271,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","SDECRMG1",272,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","SDECRMG1",273,0)
 X ^%ZOSF("TEST")
"RTN","SDECRMG1",274,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","SDECRMG1",275,0)
 ;
"RTN","SDECRMG1",276,0)
TMPGBL() ;EP-
"RTN","SDECRMG1",277,0)
 K ^TMP("SDECIDX",$J) Q $NA(^($J))
"RTN","SDECRMG1",278,0)
 ; Convert external dates to FileMan format
"RTN","SDECRMG1",279,0)
CVTDT(VAL) ;EP-
"RTN","SDECRMG1",280,0)
 D DT^DILF(,VAL,.VAL)
"RTN","SDECRMG1",281,0)
 Q VAL
"RTN","SDECRMG1",282,0)
 ; Returns inverse date value
"RTN","SDECRMG1",283,0)
INVDT(VAL) ;EP-
"RTN","SDECRMG1",284,0)
 Q:(VAL<1) VAL
"RTN","SDECRMG1",285,0)
 Q (9999999.9999-VAL)
"RTN","SDECRMG1",286,0)
RECCNT(DATA) ;EP-
"RTN","SDECRMG1",287,0)
 S DATA=$G(^TMP("SDECIDX",$J,"COUNT"))
"RTN","SDECRMG1",288,0)
 Q
"RTN","SDECRMG2")
0^147^B65998765^n/a
"RTN","SDECRMG2",1,0)
SDECRMG2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRMG2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRMG2",3,0)
 ;
"RTN","SDECRMG2",4,0)
 ;Reference is made to ICR #6185
"RTN","SDECRMG2",5,0)
 Q
"RTN","SDECRMG2",6,0)
 ;
"RTN","SDECRMG2",7,0)
URGENCY(SDECY) ;GET valid urgency protocol values that are used in the URGENCY field 5 of the REQUEST CONSULTAION file 123
"RTN","SDECRMG2",8,0)
 ;INPUT: none
"RTN","SDECRMG2",9,0)
 ;RETURN:
"RTN","SDECRMG2",10,0)
 ; Global array in which each entry contains the IEN and NAME of a protocol entry
"RTN","SDECRMG2",11,0)
 ;    1. IEN     - pointer to PROTOCOL file 101
"RTN","SDECRMG2",12,0)
 ;    2. NAME    - name field from PROTOCOL file
"RTN","SDECRMG2",13,0)
 ;    3. SYNONYM - Short name list separated by pipe.
"RTN","SDECRMG2",14,0)
 ;                 Synonym that might be what is recognized by the users
"RTN","SDECRMG2",15,0)
 N SDECI,SDI,SDID,SDJ,SDK,SDNAME,SDSYN
"RTN","SDECRMG2",16,0)
 S SDECY="^TMP(""SDECRMG2"","_$J_",""URGENCY"")"
"RTN","SDECRMG2",17,0)
 K @SDECY
"RTN","SDECRMG2",18,0)
 S SDECI=0
"RTN","SDECRMG2",19,0)
 S @SDECY@(SDECI)="T00030IEN^T00030NAME^T00030SYNONYM"_$C(30)
"RTN","SDECRMG2",20,0)
 S SDI="GMRCURGENCY" F  S SDI=$O(^ORD(101,"B",SDI)) Q:$P(SDI," ",1)'="GMRCURGENCY"  Q:SDI=""  D
"RTN","SDECRMG2",21,0)
 .S SDJ="" F  S SDJ=$O(^ORD(101,"B",SDI,SDJ)) Q:SDJ=""  D
"RTN","SDECRMG2",22,0)
 ..S SDNAME=$$GET1^DIQ(101,SDJ_",",.01)
"RTN","SDECRMG2",23,0)
 ..S SDSYN=""
"RTN","SDECRMG2",24,0)
 ..S SDK=0 F  S SDK=$O(^ORD(101,SDJ,2,SDK)) Q:SDK'>0  D
"RTN","SDECRMG2",25,0)
 ...S SDSYN=SDSYN_$S(SDSYN'="":"|",1:"")_$$GET1^DIQ(101.02,SDK_","_SDJ_",",.01)
"RTN","SDECRMG2",26,0)
 ..S SDECI=SDECI+1
"RTN","SDECRMG2",27,0)
 ..S @SDECY@(SDECI)=SDJ_U_SDNAME_U_SDSYN_$C(30)
"RTN","SDECRMG2",28,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECRMG2",29,0)
 Q
"RTN","SDECRMG2",30,0)
 ;
"RTN","SDECRMG2",31,0)
CONSULT(RET,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTC,ORIGDTR,SDCNT,MGIENS,SDALL) ;REQUEST/CONSULTATION
"RTN","SDECRMG2",32,0)
 N LOOP,CLIEN,SDSTOP
"RTN","SDECRMG2",33,0)
 Q:$G(SVCCON)'=""   ;only SD WAIT LIST and SDEC APPT REQUEST have this value
"RTN","SDECRMG2",34,0)
 Q:+$G(CLINIC)
"RTN","SDECRMG2",35,0)
 S SVCCONN=$G(SVCCONN)
"RTN","SDECRMG2",36,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG2",37,0)
 S SDMAX=$G(SDMAX,200)   ;S SDMAX=$S(+SDMAX>100:100,+SDMAX:SDMAX,1:50)
"RTN","SDECRMG2",38,0)
 S SDSTOP=+$D(SORT("B","CTOPD"))
"RTN","SDECRMG2",39,0)
 S SDBEG=$G(SDBEG) S:SDBEG="" SDBEG=1000101
"RTN","SDECRMG2",40,0)
 S SDEND=$G(SDEND) S:SDEND="" SDEND=$S(DFN'="":9991231,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))
"RTN","SDECRMG2",41,0)
 I $D(SDALL("C")) D CDTRALL Q
"RTN","SDECRMG2",42,0)
 I +DFN D CDFN Q
"RTN","SDECRMG2",43,0)
 ;I DESDT'="" D CDTR Q
"RTN","SDECRMG2",44,0)
 ;I DESDTR'="" D CDTR1 Q
"RTN","SDECRMG2",45,0)
 I ORIGDT'="" D COR Q
"RTN","SDECRMG2",46,0)
 I +CLINIC D  Q
"RTN","SDECRMG2",47,0)
 .S LOOP="" F  S LOOP=$O(CLINIC(LOOP)) Q:LOOP=""  D
"RTN","SDECRMG2",48,0)
 ..S CLIEN=LOOP
"RTN","SDECRMG2",49,0)
 ..D CSDCL
"RTN","SDECRMG2",50,0)
 D CDTR
"RTN","SDECRMG2",51,0)
 Q
"RTN","SDECRMG2",52,0)
COR ;look up REQUEST/CONSULTATION by file entry date
"RTN","SDECRMG2",53,0)
 N SDGMR,SDI,SDJ
"RTN","SDECRMG2",54,0)
 N %DT,X,Y
"RTN","SDECRMG2",55,0)
 S SDI="" F  S SDI=$O(ORIGDT(SDI)) Q:SDI=""  D
"RTN","SDECRMG2",56,0)
 .S SDJ=SDI
"RTN","SDECRMG2",57,0)
 .F  S SDJ=$O(^GMR(123,"B",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)'=SDI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",58,0)
 ..I 'SDSTOP S SDGMR=0 F  S SDGMR=$O(^GMR(123,"B",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",59,0)
 ..I +SDSTOP S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"B",SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",60,0)
 Q
"RTN","SDECRMG2",61,0)
CSDCL ;look up REQUEST/CONSULTATION by clinic
"RTN","SDECRMG2",62,0)
 N SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",63,0)
 N %DT,X,Y
"RTN","SDECRMG2",64,0)
 I 'SDSTOP S SDGMR=0 F  S SDGMR=$O(^GMR(123,"H",CLIEN,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX    ;ICR 6185
"RTN","SDECRMG2",65,0)
 I +SDSTOP S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"H",CLIEN,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",66,0)
 Q
"RTN","SDECRMG2",67,0)
CDTR ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",68,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1,SD90
"RTN","SDECRMG2",69,0)
 N %DT,X,Y
"RTN","SDECRMG2",70,0)
 S SD90=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDECRMG2",71,0)
 S SDCNT=$G(SDCNT,0)
"RTN","SDECRMG2",72,0)
 I 'SDSTOP D
"RTN","SDECRMG2",73,0)
 .;S (SDJ,SDJ1)=$S(DESDT'="":$P(DESDT,".",1),1:SDBEG)
"RTN","SDECRMG2",74,0)
 .S (SDJ,SDJ1)=SDBEG
"RTN","SDECRMG2",75,0)
 .;F  S SDJ=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)>SDEND  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",76,0)
 .;.S SDGMR=0 F  S SDGMR=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",77,0)
 .;Q:SDCNT'<SDMAX
"RTN","SDECRMG2",78,0)
 .;S:SDJ="" SDJ=SD90
"RTN","SDECRMG2",79,0)
 .F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)>SDEND  D  Q:SDCNT'<SDMAX    ;ICR 6185
"RTN","SDECRMG2",80,0)
 ..S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",81,0)
 I +SDSTOP D
"RTN","SDECRMG2",82,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":$P(DESDT,".",1)+1,1:SDEND)
"RTN","SDECRMG2",83,0)
 .F  S SDJ=$O(^GMR(123,"AG",SDJ),-1) Q:SDJ'>0  Q:(DESDT'="")&($P(SDJ,".",1)'=SDJ1)  Q:SDJ<SDBEG  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",84,0)
 ..S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",85,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG2",86,0)
 .;I SDJ="" S SDJ=$S(DESDT'="":$P(DESDT,".",1)+1,1:SDEND),SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDECRMG2",87,0)
 .;F  S SDJ=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ),-1) Q:SDJ'>0  Q:(DESDT'="")&($P(SDJ,".",1)'=SDJ1)  Q:SDJ<SDBEG  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",88,0)
 .;.S SDGMR=999999999 F  S SDGMR=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",89,0)
 Q
"RTN","SDECRMG2",90,0)
CDTR1 ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",91,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",92,0)
 N %DT,X,Y
"RTN","SDECRMG2",93,0)
 S SDJ=$P(DESDTR,"~",1)-1
"RTN","SDECRMG2",94,0)
 S SDJ1=$P(DESDTR,"~",2)
"RTN","SDECRMG2",95,0)
 F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  Q:SDJ>SDJ1  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",96,0)
 .S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",97,0)
 Q
"RTN","SDECRMG2",98,0)
CDTRALL ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",99,0)
 N SDBEGI,SDCNT,SDENDI,SDGMR,SDJ
"RTN","SDECRMG2",100,0)
 N %DT,X,Y
"RTN","SDECRMG2",101,0)
 S SDCNT=$G(SDCNT,0)
"RTN","SDECRMG2",102,0)
 S SDJ=0
"RTN","SDECRMG2",103,0)
 F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",104,0)
 .S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",105,0)
 Q
"RTN","SDECRMG2",106,0)
CDFN ;look up REQUEST/CONSULTATION by patient
"RTN","SDECRMG2",107,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",108,0)
 N %DT,X,Y
"RTN","SDECRMG2",109,0)
 S SDBEGI=9999999-SDBEG
"RTN","SDECRMG2",110,0)
 S SDENDI=9999999-SDEND
"RTN","SDECRMG2",111,0)
 I 'SDSTOP D
"RTN","SDECRMG2",112,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":9999999-$P(DESDT,".",1),1:SDENDI)
"RTN","SDECRMG2",113,0)
 .F  S SDJ=$O(^GMR(123,"AD",DFN,SDJ)) Q:SDJ'>0  Q:SDJ>SDBEGI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",114,0)
 ..S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AD",DFN,SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",115,0)
 I +SDSTOP D
"RTN","SDECRMG2",116,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":9999999-$P(DESDT,".",1)+1,1:SDBEGI)
"RTN","SDECRMG2",117,0)
 .F  S SDJ=$O(^GMR(123,"AD",DFN,SDJ),-1) Q:SDJ'>0  Q:(DESDT'="")&($P(SDJ,".",1)'=SDJ1)  Q:SDJ<SDENDI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",118,0)
 ..S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"AD",DFN,SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",119,0)
 Q
"RTN","SDECRMG2",120,0)
CGET1 ;
"RTN","SDECRMG2",121,0)
 N SDECY,Y,SDR,SDR2,SDR8,CLGP,PGRP,IEN,PT,SORTSTR,TYP,ODTE,DDTE,WAITD,SVPC,SVCPINV,ORIGGP,DESGP,SCPRI,SDR9,SVCP
"RTN","SDECRMG2",122,0)
 N GMRSTOP,SDEDT,SDI,SDSVCF,SDSVCN
"RTN","SDECRMG2",123,0)
 S SDSVCF=0
"RTN","SDECRMG2",124,0)
 D GETONE^SDEC(.SDECY,SDGMR)
"RTN","SDECRMG2",125,0)
 S SDR=$G(@SDECY@(1))
"RTN","SDECRMG2",126,0)
 S SDR=$P(SDR,$C(30))
"RTN","SDECRMG2",127,0)
 S TYP="C"
"RTN","SDECRMG2",128,0)
 I SDR="" Q
"RTN","SDECRMG2",129,0)
 I +URG I '$D(URG(+$P(SDR,U,43))) Q
"RTN","SDECRMG2",130,0)
 S SDR2=$P($P(SDR,U,2),".",1)   ; S %DT="" S X=$P(SDR2,"@",1) D ^%DT S SDR2=$P(Y,".",1)
"RTN","SDECRMG2",131,0)
 S SDR9=$P($P(SDR,U,9),".",1)   ; S %DT="" S X=$P(SDR8,"@",1) D ^%DT S SDR8=$P(Y,".",1)
"RTN","SDECRMG2",132,0)
 S PGRP=$P(SDR,U,24)
"RTN","SDECRMG2",133,0)
 S PT=$P(SDR,U,3)                           ;Patient
"RTN","SDECRMG2",134,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q
"RTN","SDECRMG2",135,0)
 I PGRP="" S PGRP="GROUP 0"
"RTN","SDECRMG2",136,0)
 I PRIGRP'="",$D(PRI(PGRP))=0 Q             ;No match on priority group
"RTN","SDECRMG2",137,0)
 S CLGP=$P(SDR,U,6)
"RTN","SDECRMG2",138,0)
 I +$G(CLINIC),$D(CLINIC(+CLGP))=0 Q    ;match clinic
"RTN","SDECRMG2",139,0)
 S DESGP=$P(SDR,U,9)
"RTN","SDECRMG2",140,0)
 S SDEDT=$P(SDR,U,49) I SDEDT'="",(SDEDT>SDEND)!(SDEDT<SDBEG) Q
"RTN","SDECRMG2",141,0)
 ;I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG2",142,0)
 I DESDTR'="",'$$INRANGE(SDEDT,$P(DESDTR,"~",1),$P(DESDTR,"~",2))  Q  ;   (SDEDT'>SDR8<SDBEG)!(SDR8>SDEND) G CGET1X      ;check date range of earliest date
"RTN","SDECRMG2",143,0)
 I +DESDT,$D(DESDT(+SDEDT))=0 Q   ;match EARLIEST DATE with desired date
"RTN","SDECRMG2",144,0)
 S ORIGGP=$P(SDR,U,2)
"RTN","SDECRMG2",145,0)
 I SDEDT="",ORIGGP'="",(ORIGGP>SDEND)!(ORIGGP<SDBEG) Q
"RTN","SDECRMG2",146,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG2",147,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT($P(ORIGGP,".",1)))=0 Q  ;match origination date with file entry date
"RTN","SDECRMG2",148,0)
 I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(SDR,U,27)="")  Q:SVCCONN'=$P(SDR,U,27)           ;SCVisit for filter (patient)
"RTN","SDECRMG2",149,0)
 ;I +SDSVC N SDSVCN S SDSVCN=$$GET1^DIQ(44,+$P(SDR,U,6)_",",8,"E") Q:SDSVCN=""  Q:'$D(SDSVC(SDSVCN))   ;check service
"RTN","SDECRMG2",150,0)
 I +SDSVC D  Q:'SDSVCF
"RTN","SDECRMG2",151,0)
 .D STOP^SDECGMR(.GMRSTOP,SDGMR)
"RTN","SDECRMG2",152,0)
 .S SDI=0 F  S SDI=$O(GMRSTOP(SDI)) Q:SDI=""  D  Q:SDSVCF=1
"RTN","SDECRMG2",153,0)
 ..S SDSVCN=GMRSTOP(SDI)
"RTN","SDECRMG2",154,0)
 ..S:$D(SDSVC(SDSVCN)) SDSVCF=1
"RTN","SDECRMG2",155,0)
 S SCPRI=0                               ;SCVisit for sorting
"RTN","SDECRMG2",156,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT^SDECRMG1($P(SDR,U,2)))
"RTN","SDECRMG2",157,0)
 S IEN=$P(SDR,U,1)
"RTN","SDECRMG2",158,0)
 S SVCP=$P(SDR,U,28)
"RTN","SDECRMG2",159,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG2",160,0)
 ;S ODTE=$$INVDT^SDECRMG1($P(SDR2,"."))
"RTN","SDECRMG2",161,0)
 S ODTE=$P(SDR2,".")
"RTN","SDECRMG2",162,0)
 S DDTE=$TR($P(SDR9,"-",2)," ","")
"RTN","SDECRMG2",163,0)
 S WAITD=9999999-WAITD
"RTN","SDECRMG2",164,0)
 ;S SORTSTR=$$SORT^SDECRMG1(.SORT)
"RTN","SDECRMG2",165,0)
 ;S SORTSTR=$$SORT^SDECRMG1(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI)
"RTN","SDECRMG2",166,0)
 S SORTSTR=$$SORT^SDECRMG1(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,SDEDT,ODTE,SCPRI)
"RTN","SDECRMG2",167,0)
 D SETNODE^SDECRMG1(WAITD,TYP,IEN,SDR,42,SORTSTR,.SDCNT)
"RTN","SDECRMG2",168,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG2",169,0)
 Q
"RTN","SDECRMG2",170,0)
CGET1X ;
"RTN","SDECRMG2",171,0)
 K @SDECY
"RTN","SDECRMG2",172,0)
 Q
"RTN","SDECRMG2",173,0)
 ;
"RTN","SDECRMG2",174,0)
INRANGE(CHK,BEG,END)  ;
"RTN","SDECRMG2",175,0)
 ; return 1 if CHK is within BEG and END inclusive
"RTN","SDECRMG2",176,0)
 ; return 0 if not
"RTN","SDECRMG2",177,0)
 Q:CHK="" 0
"RTN","SDECRMG2",178,0)
 Q:CHK<BEG 0
"RTN","SDECRMG2",179,0)
 Q:CHK>END 0
"RTN","SDECRMG2",180,0)
 Q 1
"RTN","SDECRMG2",181,0)
 ;
"RTN","SDECRMG2",182,0)
MGIENS(MGIENS,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT) ;get specified IENs and sort to the top
"RTN","SDECRMG2",183,0)
 ;  MGIENS("A123")=""
"RTN","SDECRMG2",184,0)
 N SDI,SIEN,STYP
"RTN","SDECRMG2",185,0)
 S SDI="" F  S SDI=$O(MGIENS(SDI)) Q:SDI=""  D
"RTN","SDECRMG2",186,0)
 .S STYP=$E(SDI,1)
"RTN","SDECRMG2",187,0)
 .S SIEN=$E(SDI,2,$L(SDI))
"RTN","SDECRMG2",188,0)
 .D @STYP
"RTN","SDECRMG2",189,0)
 Q
"RTN","SDECRMG2",190,0)
A ;
"RTN","SDECRMG2",191,0)
 N NOD,RET
"RTN","SDECRMG2",192,0)
 D ARGET^SDEC(.RET,SIEN)
"RTN","SDECRMG2",193,0)
 S NOD=@RET@(1) D APPT1^SDECRMG1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD,.MGIENS)
"RTN","SDECRMG2",194,0)
 Q
"RTN","SDECRMG2",195,0)
C ;
"RTN","SDECRMG2",196,0)
 Q
"RTN","SDECRMG2",197,0)
E ;
"RTN","SDECRMG2",198,0)
 N NOD,RET
"RTN","SDECRMG2",199,0)
 D WLGET^SDEC(.RET,SIEN)
"RTN","SDECRMG2",200,0)
 S NOD=@RET@(1) D WAIT1^SDECRMG1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD,.MGIENS)
"RTN","SDECRMG2",201,0)
 Q
"RTN","SDECRMG2",202,0)
R ;
"RTN","SDECRMG2",203,0)
 Q
"RTN","SDECRPC")
0^82^B6073216^n/a
"RTN","SDECRPC",1,0)
SDECRPC ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRPC",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRPC",3,0)
 ;
"RTN","SDECRPC",4,0)
 Q
"RTN","SDECRPC",5,0)
 ;
"RTN","SDECRPC",6,0)
 ;=================================================================
"RTN","SDECRPC",7,0)
 ;
"RTN","SDECRPC",8,0)
 ; Register/unregister RPCs within a given namespace to a context
"RTN","SDECRPC",9,0)
REGNMSP(NMSP,CTX,DEL) ;EP
"RTN","SDECRPC",10,0)
 N RPC,IEN,LEN
"RTN","SDECRPC",11,0)
 S LEN=$L(NMSP),CTX=+$$GETOPT(CTX)
"RTN","SDECRPC",12,0)
 I $G(DEL) D
"RTN","SDECRPC",13,0)
 .S IEN=0
"RTN","SDECRPC",14,0)
 .F  S IEN=$O(^DIC(19,CTX,"RPC","B",IEN)) Q:'IEN  D
"RTN","SDECRPC",15,0)
 ..I $E($G(^XWB(8994,IEN,0)),1,LEN)=NMSP,$$REGRPC(IEN,CTX,1)
"RTN","SDECRPC",16,0)
 E  D
"RTN","SDECRPC",17,0)
 .Q:LEN<2
"RTN","SDECRPC",18,0)
 .S RPC=NMSP
"RTN","SDECRPC",19,0)
 .F  D:$L(RPC)  S RPC=$O(^XWB(8994,"B",RPC)) Q:NMSP'=$E(RPC,1,LEN)
"RTN","SDECRPC",20,0)
 ..F IEN=0:0 S IEN=$O(^XWB(8994,"B",RPC,IEN)) Q:'IEN  I $$REGRPC(IEN,.CTX)
"RTN","SDECRPC",21,0)
 Q
"RTN","SDECRPC",22,0)
 ; Register/unregister an RPC to/from a context
"RTN","SDECRPC",23,0)
 ; RPC = IEN or name of RPC
"RTN","SDECRPC",24,0)
 ; CTX = IEN or name of context
"RTN","SDECRPC",25,0)
 ; DEL = If nonzero, the RPC is unregistered (defaults to 0)
"RTN","SDECRPC",26,0)
 ; Returns -1 if already registered; 0 if failed; 1 if succeeded
"RTN","SDECRPC",27,0)
REGRPC(RPC,CTX,DEL) ;EP
"RTN","SDECRPC",28,0)
 S RPC=+$$GETRPC(RPC)
"RTN","SDECRPC",29,0)
 Q $S(RPC<1:0,1:$$REGMULT(19.05,"RPC",RPC,.CTX,.DEL))
"RTN","SDECRPC",30,0)
 ; Add/remove a context to/from the ITEM multiple of another context.
"RTN","SDECRPC",31,0)
REGCTX(SRC,DST,DEL) ;EP
"RTN","SDECRPC",32,0)
 S SRC=+$$GETOPT(SRC)
"RTN","SDECRPC",33,0)
 Q $S('SRC:0,1:$$REGMULT(19.01,10,SRC,.DST,.DEL))
"RTN","SDECRPC",34,0)
 ; Add/delete an entry to/from a specified OPTION multiple.
"RTN","SDECRPC",35,0)
 ; SFN = Subfile #
"RTN","SDECRPC",36,0)
 ; NOD = Subnode for multiple
"RTN","SDECRPC",37,0)
 ; ITM = Item IEN to add
"RTN","SDECRPC",38,0)
 ; CTX = Option to add to
"RTN","SDECRPC",39,0)
 ; DEL = Delete flag (optional)
"RTN","SDECRPC",40,0)
REGMULT(SFN,NOD,ITM,CTX,DEL) ;
"RTN","SDECRPC",41,0)
 N FDA,IEN
"RTN","SDECRPC",42,0)
 S CTX=+$$GETOPT(CTX)
"RTN","SDECRPC",43,0)
 S DEL=+$G(DEL)
"RTN","SDECRPC",44,0)
 S IEN=+$O(^DIC(19,CTX,NOD,"B",ITM,0))
"RTN","SDECRPC",45,0)
 Q:'IEN=DEL -1
"RTN","SDECRPC",46,0)
 K ^TMP("DIERR",$J)
"RTN","SDECRPC",47,0)
 I DEL S FDA(SFN,IEN_","_CTX_",",.01)="@"
"RTN","SDECRPC",48,0)
 E  S FDA(SFN,"+1,"_CTX_",",.01)=ITM
"RTN","SDECRPC",49,0)
 D UPDATE^DIE("","FDA")
"RTN","SDECRPC",50,0)
 S FDA='$D(^TMP("DIERR",$J)) K ^($J)
"RTN","SDECRPC",51,0)
 Q FDA
"RTN","SDECRPC",52,0)
 ; Register a protocol to an extended action protocol
"RTN","SDECRPC",53,0)
 ; Input: P-Parent protocol
"RTN","SDECRPC",54,0)
 ;        C-Child protocol
"RTN","SDECRPC",55,0)
REGPROT(P,C,ERR) ;EP
"RTN","SDECRPC",56,0)
 N IENARY,PIEN,AIEN,FDA
"RTN","SDECRPC",57,0)
 D
"RTN","SDECRPC",58,0)
 .I '$L(P)!('$L(C)) S ERR="Missing input parameter" Q
"RTN","SDECRPC",59,0)
 .S IENARY(1)=$$FIND1^DIC(101,"","",P)
"RTN","SDECRPC",60,0)
 .S AIEN=$$FIND1^DIC(101,"","",C)
"RTN","SDECRPC",61,0)
 .I 'IENARY(1)!'AIEN S ERR="Unknown protocol name" Q
"RTN","SDECRPC",62,0)
 .S FDA(101.01,"?+2,"_IENARY(1)_",",.01)=AIEN
"RTN","SDECRPC",63,0)
 .D UPDATE^DIE("S","FDA","IENARY","ERR")
"RTN","SDECRPC",64,0)
 Q:$Q $G(ERR)=""
"RTN","SDECRPC",65,0)
 Q
"RTN","SDECRPC",66,0)
 ; Remove nonexistent RPCs from context
"RTN","SDECRPC",67,0)
CLNRPC(CTX) ;EP
"RTN","SDECRPC",68,0)
 N IEN
"RTN","SDECRPC",69,0)
 S CTX=+$$GETOPT(CTX)
"RTN","SDECRPC",70,0)
 F IEN=0:0 S IEN=$O(^DIC(19,CTX,"RPC","B",IEN)) Q:'IEN  D:'$D(^XWB(8994,IEN)) REGRPC(IEN,CTX,1)
"RTN","SDECRPC",71,0)
 Q
"RTN","SDECRPC",72,0)
 ; Return IEN of option
"RTN","SDECRPC",73,0)
GETOPT(X) ;EP
"RTN","SDECRPC",74,0)
 N Y
"RTN","SDECRPC",75,0)
 Q:X=+X X
"RTN","SDECRPC",76,0)
 S Y=$$FIND1^DIC(19,"","X",X)
"RTN","SDECRPC",77,0)
 W:'Y "Cannot find option "_X,!!
"RTN","SDECRPC",78,0)
 Q Y
"RTN","SDECRPC",79,0)
 ; Return IEN of RPC
"RTN","SDECRPC",80,0)
GETRPC(X) ;EP
"RTN","SDECRPC",81,0)
 N Y
"RTN","SDECRPC",82,0)
 Q:X=+X X
"RTN","SDECRPC",83,0)
 S Y=$$FIND1^DIC(8994,"","X",X)
"RTN","SDECRPC",84,0)
 W:'Y "Cannot find RPC "_X,!!
"RTN","SDECRPC",85,0)
 Q Y
"RTN","SDECRT")
0^77^B5803317^n/a
"RTN","SDECRT",1,0)
SDECRT ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRT",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRT",3,0)
 ;
"RTN","SDECRT",4,0)
 Q
"RTN","SDECRT",5,0)
 ;
"RTN","SDECRT",6,0)
WISD(DFN,SDATE,BSDMODE,BSDDEV,BSDNHS) ;PEP; print routing slip for walkin/same day appt
"RTN","SDECRT",7,0)
 ; Check for DFN if user enters by Clinic, but does not select a Pt
"RTN","SDECRT",8,0)
 N DIR,DIV,ORDER,%ZIS
"RTN","SDECRT",9,0)
 N SDREP,SDSTART,SDX,Y
"RTN","SDECRT",10,0)
 I +$G(DFN)=0 Q
"RTN","SDECRT",11,0)
 ;
"RTN","SDECRT",12,0)
 N %DIS,DGPGM,VAR,VAR1,DEV,POP
"RTN","SDECRT",13,0)
 S SDX="ALL",ORDER="",SDREP=0,SDSTART="",DIV=$$DIV^SDECU
"RTN","SDECRT",14,0)
 ;
"RTN","SDECRT",15,0)
 S VAR="DIV^ORDER^SDX^SDATE^DFN^SDREP^SDSTART^BSDMODE^BSDNHS"
"RTN","SDECRT",16,0)
 S VAR1="DIV;ORDER;SDX;SDATE;DFN;SDREP;SDSTART;BSDMODE;BSDNHS"
"RTN","SDECRT",17,0)
 ;
"RTN","SDECRT",18,0)
 S DGPGM="SINGLE^SDECROUT"
"RTN","SDECRT",19,0)
 I $G(BSDDEV)]"" D ZIS^SDECF("F","SINGLE^BSDROUT","ROUTING SLIP",VAR1,BSDDEV) Q
"RTN","SDECRT",20,0)
 S DEV=$S(BSDMODE="CR":".05",1:".11")   ;default printer fields
"RTN","SDECRT",21,0)
 S BDGDEV=$$GET1^DIQ(9009020.2,$$DIV^SDECU,DEV)
"RTN","SDECRT",22,0)
 I BDGDEV="" K BDGDEV Q
"RTN","SDECRT",23,0)
 S %ZIS("A")="FILE ROOM PRINTER: " D ZIS^DGUTQ I POP D END^SDROUT1 Q
"RTN","SDECRT",24,0)
 D SINGLE
"RTN","SDECRT",25,0)
 Q
"RTN","SDECRT",26,0)
 ;
"RTN","SDECRT",27,0)
SINGLE ;EP; queued entry point for single routing slips
"RTN","SDECRT",28,0)
 ; called by WISD subroutine
"RTN","SDECRT",29,0)
 U IO K ^TMP("SDRS",$J)
"RTN","SDECRT",30,0)
 NEW BSDT,CLN,IEN,BSDMOD2
"RTN","SDECRT",31,0)
 ;
"RTN","SDECRT",32,0)
 ; find all appts for patient
"RTN","SDECRT",33,0)
 I BSDMODE="CR" S BSDMOD2="CR",BSDMODE=""
"RTN","SDECRT",34,0)
 S BSDT=SDATE\1
"RTN","SDECRT",35,0)
 F  S BSDT=$O(^DPT(DFN,"S",BSDT)) Q:'BSDT  Q:(BSDT\1>SDATE)  D
"RTN","SDECRT",36,0)
 . S CLN=+$G(^DPT(DFN,"S",BSDT,0)) Q:'CLN   ;clinic ien
"RTN","SDECRT",37,0)
 . S IEN=0 F  S IEN=$O(^SC(CLN,"S",BSDT,1,IEN)) Q:'IEN  Q:$P($G(^SC(CLN,"S",BSDT,1,IEN,0)),U)=DFN
"RTN","SDECRT",38,0)
 . Q:'IEN                                   ;appt ien in ^sc
"RTN","SDECRT",39,0)
 . D FIND^SDECRT0(CLN,BSDT,IEN,ORDER,BSDMODE,SDX,SDSTART,"",SDREP,SDATE)
"RTN","SDECRT",40,0)
 I $D(BSDMOD2) S BSDMODE=BSDMOD2
"RTN","SDECRT",41,0)
 ;
"RTN","SDECRT",42,0)
 ; if no future appts, set something so RS will print
"RTN","SDECRT",43,0)
 I '$D(^TMP("SDRS",$J)) S ^TMP("SDRS",$J,$$GET1^DIQ(2,DFN,.01),$$TERM(DFN),DFN)=""
"RTN","SDECRT",44,0)
 ;
"RTN","SDECRT",45,0)
 D PRINT^SDECRT1(ORDER,SDATE,SDX,SDSTART,"",SDREP)
"RTN","SDECRT",46,0)
 Q
"RTN","SDECRT",47,0)
 ;
"RTN","SDECRT",48,0)
TERM(PAT) ; returns chart # in terminal digit format
"RTN","SDECRT",49,0)
 NEW N,T
"RTN","SDECRT",50,0)
 S N=$$HRCN^SDECF2(PAT,$G(DUZ(2)))         ;chart #
"RTN","SDECRT",51,0)
 S T=$$HRCNT^SDECF2(N)                     ;terminal digit format
"RTN","SDECRT",52,0)
 I $$GET1^DIQ(9009020.2,+$$DIV^SDECU,.18)="NO" D
"RTN","SDECRT",53,0)
 . S T=$$HRCND^SDECF2(N)                   ;use chart # per site param
"RTN","SDECRT",54,0)
 Q T
"RTN","SDECRT0")
0^78^B18723369^n/a
"RTN","SDECRT0",1,0)
SDECRT0 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRT0",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRT0",3,0)
 ;
"RTN","SDECRT0",4,0)
 Q
"RTN","SDECRT0",5,0)
 ;
"RTN","SDECRT0",6,0)
FIND(CLN,APPT,APPN,ORDER,BSDMODE,SDX,SDSTART,SDSTOP,SDREP,SDATE) ;EP; -- set up ^tmp sort for patient's appt
"RTN","SDECRT0",7,0)
 ; called by START^SDECRT and SINGLE^SDECRT
"RTN","SDECRT0",8,0)
 ; assumes SD variables SDX,SDSTART,SDSTOP,SDREP,SDATE are set
"RTN","SDECRT0",9,0)
 ; CLN=clinic ien, APPT=appt date/time, APPN=appt ien in ^SC
"RTN","SDECRT0",10,0)
 ; ORDER=1 means sort by terminal digit (or chart # per site param)
"RTN","SDECRT0",11,0)
 ; ORDER=2 means sort by clinic; ORDER=3 means sort by principal clinic
"RTN","SDECRT0",12,0)
 ; ORDER=4 means sort by name; ORDER="" means single routing slip
"RTN","SDECRT0",13,0)
 ; BSDMODE="WI" for walkins, "SD" for same day, "" for all others
"RTN","SDECRT0",14,0)
 ; BSDMODE="CR" used for chart requests in routine BSDROUT
"RTN","SDECRT0",15,0)
 ;
"RTN","SDECRT0",16,0)
 ;
"RTN","SDECRT0",17,0)
 NEW DFN,HRCN,TERM,FIRST
"RTN","SDECRT0",18,0)
 NEW BSDSC,BSDGD,BSDL
"RTN","SDECRT0",19,0)
 S DFN=$P(^SC(CLN,"S",APPT,1,APPN,0),U)     ;patient ien
"RTN","SDECRT0",20,0)
 S HRCN=$$HRCN^SDECF2(DFN,$$FAC^SDECU(CLN))   ;chart #
"RTN","SDECRT0",21,0)
 S TERM=$$HRCNT^SDECF2(HRCN)                 ;terminal digit format
"RTN","SDECRT0",22,0)
 I $$GET1^DIQ(9009020.2,+$$DIVC^SDECU(CLN),.18)="NO" D
"RTN","SDECRT0",23,0)
 . S TERM=$$HRCND^SDECF2(HRCN)               ;use chart # per site param
"RTN","SDECRT0",24,0)
 ;
"RTN","SDECRT0",25,0)
 Q:'$$PRTOK(DFN,APPT,TERM)                  ;okay to print this appt?
"RTN","SDECRT0",26,0)
 ;
"RTN","SDECRT0",27,0)
 S FIRST=$$FIRST(DFN,APPT)                  ;first appt that day?
"RTN","SDECRT0",28,0)
 ;
"RTN","SDECRT0",29,0)
 D STOPS(DFN,APPT,CLN,TERM,ORDER)           ;xray, lab, ekg stops
"RTN","SDECRT0",30,0)
 I ORDER=1 D TDO(DFN,APPT,CLN,TERM,"",FIRST) Q
"RTN","SDECRT0",31,0)
 I ORDER=2 D CLO(DFN,APPT,CLN,TERM,"",FIRST) Q
"RTN","SDECRT0",32,0)
 I ORDER=3 D PCO(DFN,APPT,CLN,TERM,"",FIRST) Q
"RTN","SDECRT0",33,0)
 D NMO(DFN,APPT,CLN,TERM,"",FIRST) Q
"RTN","SDECRT0",34,0)
 ;
"RTN","SDECRT0",35,0)
TDO(P,D,C,T,S,F) ; -- sort by terminal digit
"RTN","SDECRT0",36,0)
 I $G(F) S ^TMP("SDRS",$J," "_T," "_T,P)=1    ;1st for patient for date
"RTN","SDECRT0",37,0)
 S ^TMP("SDRS",$J," "_T," "_T,P,D)=C_U_$G(S)_U_$G(BSDMODE)
"RTN","SDECRT0",38,0)
 Q
"RTN","SDECRT0",39,0)
 ;
"RTN","SDECRT0",40,0)
CLO(P,D,C,T,S,F) ; -- sort by clinic
"RTN","SDECRT0",41,0)
 NEW N S N=$$GET1^DIQ(44,C,.01) Q:N=""     ;clinic name
"RTN","SDECRT0",42,0)
 I SDX["ALL",SDSTART]"",SDSTART]N Q  ;not in print range
"RTN","SDECRT0",43,0)
 I SDX["ALL",SDSTOP]"",N]SDSTOP Q    ;not in print range
"RTN","SDECRT0",44,0)
 ;
"RTN","SDECRT0",45,0)
 I $G(F),'$D(^TMP("SDRS",$J,P)) S ^TMP("SDRS",$J,P,N)=1    ;1st for patient for date
"RTN","SDECRT0",46,0)
 S ^TMP("SDRS1",$J,P,D)=N
"RTN","SDECRT0",47,0)
 ;
"RTN","SDECRT0",48,0)
 S ^TMP("SDRS",$J,N," "_T,P,D)=C_U_$G(S)_U_$G(BSDMODE)
"RTN","SDECRT0",49,0)
 Q
"RTN","SDECRT0",50,0)
 ;
"RTN","SDECRT0",51,0)
PCO(P,D,C,T,S,F) ; -- sort by principal clinic
"RTN","SDECRT0",52,0)
 NEW PRINC S PRINC=$$PRIN^SDECU(C)
"RTN","SDECRT0",53,0)
 I PRINC="UNAFFILIATED CLINICS" S PRINC=$$GET1^DIQ(44,+C,.01)
"RTN","SDECRT0",54,0)
 I SDX["ALL",SDSTART]"",SDSTART]PRINC Q  ;not print range
"RTN","SDECRT0",55,0)
 I SDX["ALL",SDSTOP]"",PRINC]SDSTOP Q    ;not print range
"RTN","SDECRT0",56,0)
 ;
"RTN","SDECRT0",57,0)
 I $G(F),'$D(^TMP("SDRS",$J,P)) S ^TMP("SDRS",$J,P,PRINC)=1     ;1st 4 pat 4 dt
"RTN","SDECRT0",58,0)
 S ^TMP("SDRS1",$J,P,D)=PRINC                                   ;sort by patient then date/time
"RTN","SDECRT0",59,0)
 ;
"RTN","SDECRT0",60,0)
 S ^TMP("SDRS",$J,PRINC," "_T,P,D)=C_U_$G(S)_U_$G(BSDMODE)
"RTN","SDECRT0",61,0)
 Q
"RTN","SDECRT0",62,0)
 ;
"RTN","SDECRT0",63,0)
NMO(P,D,C,T,S,F) ; -- sort by name
"RTN","SDECRT0",64,0)
 NEW N S N=$$GET1^DIQ(2,P,.01)             ;patient name
"RTN","SDECRT0",65,0)
 I $G(F) S ^TMP("SDRS",$J,N," "_T,P)=1        ;1st for patient for date
"RTN","SDECRT0",66,0)
 S ^TMP("SDRS",$J,N," "_T,P,D)=C_U_$G(S)_U_$G(BSDMODE)
"RTN","SDECRT0",67,0)
 Q
"RTN","SDECRT0",68,0)
 ;
"RTN","SDECRT0",69,0)
 ;
"RTN","SDECRT0",70,0)
STOPS(P,D,C,T,ORDER) ; checks for xray, lab or ekg stops
"RTN","SDECRT0",71,0)
 NEW I,A,STOP
"RTN","SDECRT0",72,0)
 F I=3,4,5 I $P(^DPT(P,"S",D,0),U,I)]"" D
"RTN","SDECRT0",73,0)
 . S A=$P(^DPT(P,"S",D,0),U,I),STOP=$S(I=3:"LAB",I=4:"XRAY",1:"EKG")
"RTN","SDECRT0",74,0)
 . I ORDER=1 D TDO(P,A,C,T,STOP) Q
"RTN","SDECRT0",75,0)
 . I ORDER=2 D CLO(P,A,C,T,STOP) Q
"RTN","SDECRT0",76,0)
 . I ORDER=3 D PCO(P,A,C,T,STOP) Q
"RTN","SDECRT0",77,0)
 . D NMO(P,A,C,T,STOP)
"RTN","SDECRT0",78,0)
 Q
"RTN","SDECRT0",79,0)
 ;
"RTN","SDECRT0",80,0)
PRTOK(P,D,TERM) ; -- check to see if rs should be printed for patient
"RTN","SDECRT0",81,0)
 ; remove cancelled appts from list
"RTN","SDECRT0",82,0)
 I ('$G(^DPT(P,"S",D,0)))!($P($G(^DPT(P,"S",D,0)),U,2)["C") Q 0
"RTN","SDECRT0",83,0)
 ;
"RTN","SDECRT0",84,0)
 I SDX["ALL",SDSTART="" Q 1   ;1st printing of all routing slips
"RTN","SDECRT0",85,0)
 ;
"RTN","SDECRT0",86,0)
 ; can have range of items to print; checking range
"RTN","SDECRT0",87,0)
 ;    clinic ranges to be checked later
"RTN","SDECRT0",88,0)
 ;NEW X S X=1 I SDX["ALL" D  Q X
"RTN","SDECRT0",89,0)
 NEW X S X=1 I 'SDREP D  Q X
"RTN","SDECRT0",90,0)
 . I SDX["ADD",$P(^DPT(P,"S",D,0),U,13)]"" S X=0 Q          ;if add-on, don't print if already printed
"RTN","SDECRT0",91,0)
 . I ORDER=1,SDSTART]"",SDSTART]$E(TERM,1,2) S X=0 Q   ;before beginning
"RTN","SDECRT0",92,0)
 . I ORDER=1,SDSTOP]"",$E(TERM,1,2)]SDSTOP S X=0 Q     ;after end
"RTN","SDECRT0",93,0)
 . I ORDER=4,SDSTART]$$GET1^DIQ(2,P,.01) S X=0 Q   ;before beginning
"RTN","SDECRT0",94,0)
 . I ORDER=4,$$GET1^DIQ(2,P,.01)]SDSTOP S X=0 Q   ;before beginning
"RTN","SDECRT0",95,0)
 ;
"RTN","SDECRT0",96,0)
 ; if reprinting add-ons, only reprint those already printed that day
"RTN","SDECRT0",97,0)
 I SDREP,SDX["ADD" Q $S($P($G(^DPT(P,"S",D,0)),U,13)\1=SDSTART:1,1:0)
"RTN","SDECRT0",98,0)
 ;
"RTN","SDECRT0",99,0)
 Q 1
"RTN","SDECRT0",100,0)
 ;
"RTN","SDECRT0",101,0)
FIRST(DFN,DATE)    ;EP -- returns 1 if first appt that day for patient
"RTN","SDECRT0",102,0)
 I (ORDER'=2),(ORDER'=3) Q 0       ;for sorts by clinic only
"RTN","SDECRT0",103,0)
 NEW X,Y
"RTN","SDECRT0",104,0)
 S X=DATE\1
"RTN","SDECRT0",105,0)
 F  S X=$O(^DPT(DFN,"S",X)) Q:(X\1>DATE\1)  Q:'X  Q:$D(Y)  D
"RTN","SDECRT0",106,0)
 . Q:$P(^DPT(DFN,"S",X,0),U,2)["C"    ;ignore cancelled appts
"RTN","SDECRT0",107,0)
 . S Y=$S(X=DATE:1,1:0)
"RTN","SDECRT0",108,0)
 Q $G(Y)
"RTN","SDECRT1")
0^90^B72713204^n/a
"RTN","SDECRT1",1,0)
SDECRT1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRT1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRT1",3,0)
 ;
"RTN","SDECRT1",4,0)
 Q
"RTN","SDECRT1",5,0)
 ;
"RTN","SDECRT1",6,0)
PRINT(ORDER,SDATE,SDX,SDSTART,SDSTOP,SDREP) ;EP; called to print routing slips
"RTN","SDECRT1",7,0)
 ; called by SDROUT0
"RTN","SDECRT1",8,0)
 ; assumes the following variables are set: SDSTART,SDSTOP,SDX,SDREP,DIV
"RTN","SDECRT1",9,0)
 ; loop by sort criteria and get patient
"RTN","SDECRT1",10,0)
 NEW SORT,TERM,DFN,BSDI,CNT,SDCNT,SECOND
"RTN","SDECRT1",11,0)
 S SORT=0
"RTN","SDECRT1",12,0)
 F  S SORT=$O(^TMP("SDRS",$J,SORT)) Q:SORT=""  D
"RTN","SDECRT1",13,0)
 . S TERM=0 F  S TERM=$O(^TMP("SDRS",$J,SORT,TERM)) Q:TERM=""  D
"RTN","SDECRT1",14,0)
 .. S DFN=0 F  S DFN=$O(^TMP("SDRS",$J,SORT,TERM,DFN)) Q:'DFN  D
"RTN","SDECRT1",15,0)
 ... ;
"RTN","SDECRT1",16,0)
 ... I $$FORMAT="DUPLICATE" S SECOND=0  ;print 2 per page
"RTN","SDECRT1",17,0)
 ... D RS(SORT,TERM,DFN,1)              ;print one rs for file room
"RTN","SDECRT1",18,0)
 ... ;
"RTN","SDECRT1",19,0)
 ... ; now print a copy for each appt if parameter set that way
"RTN","SDECRT1",20,0)
 ... I $$MORERS S CNT=$$APPTCNT(SORT,TERM,DFN) F BSDI=1:1:CNT D RS(SORT,TERM,DFN,0)
"RTN","SDECRT1",21,0)
 ... ;
"RTN","SDECRT1",22,0)
 ... D OTHER(DFN)     ;print other forms
"RTN","SDECRT1",23,0)
 K SDCNT   ;remove this line to print # of rs printed on end of report
"RTN","SDECRT1",24,0)
 K BDGSDEV  ;cmi/anch/maw 5/9/2008 PATCH 1009 rqmt 64 kill storage of device name after printing of all RS and other docs
"RTN","SDECRT1",25,0)
 K SDSTOP D END^SDROUT1
"RTN","SDECRT1",26,0)
 Q
"RTN","SDECRT1",27,0)
 ;
"RTN","SDECRT1",28,0)
RS(SORT,TERM,DFN,FIRST) ; -- print rs
"RTN","SDECRT1",29,0)
 ; quit if not first appt that day when sorting by clinic
"RTN","SDECRT1",30,0)
 ;
"RTN","SDECRT1",31,0)
 ;If printing >1 RS and is second or more time through, sorting by clinic, quit if not first appt that day
"RTN","SDECRT1",32,0)
 I (FIRST=0)&(ORDER=2) Q:'$G(^TMP("SDRS",$J,DFN,SORT))
"RTN","SDECRT1",33,0)
 I (FIRST=0)&(ORDER=3) Q:'$G(^TMP("SDRS",$J,DFN,SORT))
"RTN","SDECRT1",34,0)
 ;
"RTN","SDECRT1",35,0)
 ;if printing only one RS and sorting by clinic, quit if this is not first appt
"RTN","SDECRT1",36,0)
 I ($$FIRST^SDECRT0(DFN,+$O(^TMP("SDRS",$J,SORT,TERM,DFN,0)))=0),(ORDER=2),($$MORERS=0) Q
"RTN","SDECRT1",37,0)
 I ($$FIRST^SDECRT0(DFN,+$O(^TMP("SDRS",$J,SORT,TERM,DFN,0)))=0),(ORDER=3),($$MORERS=0) Q
"RTN","SDECRT1",38,0)
 ;
"RTN","SDECRT1",39,0)
 NEW DATE,CLN,BSDPG
"RTN","SDECRT1",40,0)
 D RSHED(DFN)                                ;rs heading
"RTN","SDECRT1",41,0)
 S DATE=0 D CURHED                           ;current appt heading
"RTN","SDECRT1",42,0)
 F  S DATE=$O(^TMP("SDRS",$J,SORT,TERM,DFN,DATE)) Q:'DATE  D
"RTN","SDECRT1",43,0)
 . S CLN=^TMP("SDRS",$J,SORT,TERM,DFN,DATE)
"RTN","SDECRT1",44,0)
 . ;
"RTN","SDECRT1",45,0)
 . ; make sure RS by clinic contains all appts for date
"RTN","SDECRT1",46,0)
 . I (ORDER=2)!(ORDER=3) D APPTC(DFN,TERM,DATE),PRTDT(DFN,DATE,CLN,$P(CLN,U,3)) S DATE=9999999 Q
"RTN","SDECRT1",47,0)
 . ;
"RTN","SDECRT1",48,0)
 . D APPT(DFN,DATE,CLN)                      ;display appt info
"RTN","SDECRT1",49,0)
 . D PRTDT(DFN,DATE,CLN,$P(CLN,U,3))         ;record date printed
"RTN","SDECRT1",50,0)
 I $$FORMAT="LONG" D FUTURE(DFN)             ;find future appts
"RTN","SDECRT1",51,0)
 D PRINTED                                   ;date printed
"RTN","SDECRT1",52,0)
 ;
"RTN","SDECRT1",53,0)
 I $$FORMAT="DUPLICATE",'SECOND D
"RTN","SDECRT1",54,0)
 . S SECOND=1                      ;mark as second one per page
"RTN","SDECRT1",55,0)
 . F  Q:$Y>((IOSL)\2)  W !         ;move to middle of piece of paper
"RTN","SDECRT1",56,0)
 . W !,$$REPEAT^XLFSTR("-",IOM)    ;dashed line between routing slips
"RTN","SDECRT1",57,0)
 . D RS(SORT,TERM,DFN,FIRST)
"RTN","SDECRT1",58,0)
 Q
"RTN","SDECRT1",59,0)
 ;
"RTN","SDECRT1",60,0)
APPTC(DFN,TERM,DATE)         ; -- loop through all patient's appts for date
"RTN","SDECRT1",61,0)
 NEW APDT,CLN,ARRAY,SORT
"RTN","SDECRT1",62,0)
 S APDT=(DATE\1)-.0001
"RTN","SDECRT1",63,0)
 F  S APDT=$O(^TMP("SDRS1",$J,DFN,APDT)) Q:'APDT  D
"RTN","SDECRT1",64,0)
 . S SORT=$G(^TMP("SDRS1",$J,DFN,APDT))
"RTN","SDECRT1",65,0)
 . S CLN=$G(^TMP("SDRS",$J,SORT,TERM,DFN,APDT))
"RTN","SDECRT1",66,0)
 . D APPT(DFN,APDT,CLN)
"RTN","SDECRT1",67,0)
 Q
"RTN","SDECRT1",68,0)
 ;
"RTN","SDECRT1",69,0)
APPT(DFN,DATE,CLN) ; -- print individual appointments
"RTN","SDECRT1",70,0)
 I $Y>(IOSL-3) D RSHED(DFN),CURHED
"RTN","SDECRT1",71,0)
 NEW X,Y
"RTN","SDECRT1",72,0)
 I $P(CLN,U,3)'="CR" S X=DATE D TM^SDROUT0 W !,$J(X,8)  ;appt time
"RTN","SDECRT1",73,0)
 I $P(CLN,U,3)="CR" D
"RTN","SDECRT1",74,0)
 . W !,"CR-"_$E(DATE,4,5)_"/"_$E(DATE,6,7)_"-"_($E(DATE,1,3)+1700)
"RTN","SDECRT1",75,0)
 ;
"RTN","SDECRT1",76,0)
 ; mark walkins, same day appts and chart requests
"RTN","SDECRT1",77,0)
 I $P(CLN,U,3)'="CR" W ?9,$P(CLN,U,3)
"RTN","SDECRT1",78,0)
 ;
"RTN","SDECRT1",79,0)
 S X=CLN I $P(CLN,U,2)]"" S X=$P(CLN,U,2)_" Stop"    ;xray or lab stop
"RTN","SDECRT1",80,0)
 E  S X=$$GET1^DIQ(44,+CLN,.01)                      ;clinic name
"RTN","SDECRT1",81,0)
 W ?13,$E(X,1,25)                                    ;print it
"RTN","SDECRT1",82,0)
 I $P(CLN,U,2)="" D
"RTN","SDECRT1",83,0)
 . I $$FORMAT="SHORT" W !?11                         ;adjust print head
"RTN","SDECRT1",84,0)
 . E  W ?40
"RTN","SDECRT1",85,0)
 . W $$GET1^DIQ(44,+CLN,10)                          ;physical location
"RTN","SDECRT1",86,0)
 . W:$$FORMAT'="SHORT" ?68,$$GET1^DIQ(44,+CLN,99)    ;clinic telephone
"RTN","SDECRT1",87,0)
 ;
"RTN","SDECRT1",88,0)
 ;chart request
"RTN","SDECRT1",89,0)
 S X=0 F  S X=$O(^SC(+CLN,"C",DATE\1,1,X)) Q:'X  D
"RTN","SDECRT1",90,0)
 . Q:+$G(^SC(+CLN,"C",DATE\1,1,X,0))'=DFN
"RTN","SDECRT1",91,0)
 . S Y=$G(^SC(+CLN,"C",DATE\1,1,X,9999999))
"RTN","SDECRT1",92,0)
 . ;
"RTN","SDECRT1",93,0)
 . NEW COL S COL=$S($$FORMAT="SHORT":3,1:13)
"RTN","SDECRT1",94,0)
 . W !?COL,$P(Y,U,3)   ;deliver to info
"RTN","SDECRT1",95,0)
 . W !?COL,"Requested at "_$$FMTE^XLFDT($E(+Y,1,12))_" by "_$$GET1^DIQ(200,+$P(Y,U,2),.01)_" x"_$$GET1^DIQ(200,+$P(Y,U,2),.132)
"RTN","SDECRT1",96,0)
 Q
"RTN","SDECRT1",97,0)
 ;
"RTN","SDECRT1",98,0)
PRTDT(P,D,C,MODE) ; -- called to set date routing slip printed
"RTN","SDECRT1",99,0)
 NEW DIE,DA,DR
"RTN","SDECRT1",100,0)
 I MODE="CR" D PRTCR(P,D,C) Q     ;chart request printed
"RTN","SDECRT1",101,0)
 Q:'$D(^DPT(P,"S",D,0))
"RTN","SDECRT1",102,0)
 Q:$P(^DPT(P,"S",D,0),U,2)["C"
"RTN","SDECRT1",103,0)
 S DIE="^DPT("_P_",""S"",",DA=D,DA(1)=P
"RTN","SDECRT1",104,0)
 S DR="8///Y" S:$P(^DPT(P,"S",D,0),U,13)="" DR=DR_";8.5///^S X=""NOW"""
"RTN","SDECRT1",105,0)
 D ^DIE
"RTN","SDECRT1",106,0)
 Q
"RTN","SDECRT1",107,0)
 ;
"RTN","SDECRT1",108,0)
PRTCR(PAT,DATE,CLN) ; -- set date/time chart request printed
"RTN","SDECRT1",109,0)
 NEW X,DIE,DA,DR,IEN
"RTN","SDECRT1",110,0)
 S IEN=0 F  S IEN=$O(^SC(+CLN,"C",(DATE\1),1,IEN)) Q:'IEN  D
"RTN","SDECRT1",111,0)
 . Q:+$G(^SC(+CLN,"C",(DATE\1),1,IEN,0))'=PAT          ;wrong patient
"RTN","SDECRT1",112,0)
 . S DIE="^SC("_(+CLN)_",""C"","_(DATE\1)_",1,"
"RTN","SDECRT1",113,0)
 . S DA=IEN,DA(1)=DATE\1,DA(2)=+CLN,DR="9999999.04///^S X=""NOW"""
"RTN","SDECRT1",114,0)
 . D ^DIE
"RTN","SDECRT1",115,0)
 Q
"RTN","SDECRT1",116,0)
 ;
"RTN","SDECRT1",117,0)
FUTURE(DFN) ; -- print future appts
"RTN","SDECRT1",118,0)
 NEW BSDX,BSDY,BSDI,X,Y
"RTN","SDECRT1",119,0)
 ; print subheading (and page heading if needed)
"RTN","SDECRT1",120,0)
 I $O(^DPT(DFN,"S",SDATE_".9"))>0 D
"RTN","SDECRT1",121,0)
 . I $Y>(IOSL-5) D RSHED(DFN)
"RTN","SDECRT1",122,0)
 . D FUTHED
"RTN","SDECRT1",123,0)
 ;
"RTN","SDECRT1",124,0)
 ; loop through future appts and print
"RTN","SDECRT1",125,0)
 F BSDX=SDATE_".9":0 S BSDX=$O(^DPT(DFN,"S",BSDX)) Q:BSDX=""  D
"RTN","SDECRT1",126,0)
 . I $Y>(IOSL-5) D RSHED(DFN),FUTHED
"RTN","SDECRT1",127,0)
 . S BSDY=$G(^DPT(DFN,"S",BSDX,0))          ;appt data
"RTN","SDECRT1",128,0)
 . Q:$P(BSDY,U,2)["C"                       ;skip cancelled appts
"RTN","SDECRT1",129,0)
 . ;
"RTN","SDECRT1",130,0)
 . ; display extra stops if scheduled
"RTN","SDECRT1",131,0)
 . F BSDI=3,4,5 I $P(BSDY,U,BSDI)]"" D
"RTN","SDECRT1",132,0)
 .. I $Y>(IOSL-5) D RSHED(DFN),FUTHED
"RTN","SDECRT1",133,0)
 .. S (X,Y)=$P(BSDY,U,BSDI)
"RTN","SDECRT1",134,0)
 .. D TM^SDROUT0,DTS^SDUTL W !,Y,?13,$J(X,8)   ;date and time
"RTN","SDECRT1",135,0)
 .. W ?22,$S(BSDI=3:"LAB",BSDI=4:"XRAY",1:"EKG")," Stop"
"RTN","SDECRT1",136,0)
 . ;
"RTN","SDECRT1",137,0)
 . ; display main appt
"RTN","SDECRT1",138,0)
 . S (X,Y)=BSDX D TM^SDROUT0,DTS^SDUTL W !,Y,?13,$J(X,8)  ;date/time
"RTN","SDECRT1",139,0)
 . W ?21,$$GET1^DIQ(44,+BSDY,.01)                         ;clinic
"RTN","SDECRT1",140,0)
 . W ?55,$$GET1^DIQ(44,+BSDY,10)                          ;location
"RTN","SDECRT1",141,0)
 Q
"RTN","SDECRT1",142,0)
 ;
"RTN","SDECRT1",143,0)
PRINTED ; add date printed, requested by and increment count of rs printed
"RTN","SDECRT1",144,0)
 I SDREP,SDX'["ALL" D  Q
"RTN","SDECRT1",145,0)
 . W !!,"DATE ORIGINALLY PRINTED  : ",$$FMTE^XLFDT(SDSTART)
"RTN","SDECRT1",146,0)
 . W !,"DATE REPRINTED: ",$$FMTE^XLFDT(DT)
"RTN","SDECRT1",147,0)
 . S SDCNT=$G(SDCNT)+1             ;increment # of routing slips printed
"RTN","SDECRT1",148,0)
 W !!,"DATE PRINTED: ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","SDECRT1",149,0)
 W !,"Requested by: ",$$GET1^DIQ(200,$G(DUZ),.01)
"RTN","SDECRT1",150,0)
 S SDCNT=$G(SDCNT)+1             ;increment # of routing slips printed
"RTN","SDECRT1",151,0)
 Q
"RTN","SDECRT1",152,0)
 ;
"RTN","SDECRT1",153,0)
CURHED ; -- print current appt heading
"RTN","SDECRT1",154,0)
 W !!?9,"**CURRENT APPOINTMENTS**"
"RTN","SDECRT1",155,0)
 W !?3,"TIME",?13,"CLINIC" Q:$$FORMAT="SHORT"   ;short and narrow
"RTN","SDECRT1",156,0)
 W ?40,"LOCATION",?68,"PHONE"
"RTN","SDECRT1",157,0)
 Q
"RTN","SDECRT1",158,0)
 ;
"RTN","SDECRT1",159,0)
FUTHED ; -- print future appt heading
"RTN","SDECRT1",160,0)
 W !!,?9,"**FUTURE APPOINTMENTS**",!,$$REPEAT^XLFSTR("=",79)
"RTN","SDECRT1",161,0)
 W !,"  DATE",?13,"TIME",?21,"CLINIC",?55,"LOCATION",!
"RTN","SDECRT1",162,0)
 Q
"RTN","SDECRT1",163,0)
 ;
"RTN","SDECRT1",164,0)
RSHED(DFN) ; -- routing slip heading
"RTN","SDECRT1",165,0)
 I $$FORMAT="DUPLICATE",SECOND W !
"RTN","SDECRT1",166,0)
 E  I $G(SDCNT)>0 W @IOF
"RTN","SDECRT1",167,0)
 W !,"FACILITY: ",$$GET1^DIQ(40.8,$$DIV,.01)
"RTN","SDECRT1",168,0)
 W ?40,"**",$E($$CONF^SDECU,1,25),"**"
"RTN","SDECRT1",169,0)
 S BSDPG=$G(BSDPG)+1 W !,"PAGE ",BSDPG,?10,"OUTPATIENT ROUTING SLIP"
"RTN","SDECRT1",170,0)
 ;
"RTN","SDECRT1",171,0)
 W !!,$$GET1^DIQ(2,DFN,.01),?30,"HRCN: ",$$HRCN^SDECF2(DFN,+$G(DUZ(2)))
"RTN","SDECRT1",172,0)
 ;
"RTN","SDECRT1",173,0)
 W !?5,"DOB: ",$$GET1^DIQ(2,DFN,.03)
"RTN","SDECRT1",174,0)
 W ?44,"APPT DT:  ",$$FMTE^XLFDT(SDATE,5)
"RTN","SDECRT1",175,0)
 ;
"RTN","SDECRT1",176,0)
 I $$DEAD^SDECF2(DFN) W !?10,"**** PATIENT DIED ON ",$$DOD^SDECF2(DFN)," ****"
"RTN","SDECRT1",177,0)
 ;
"RTN","SDECRT1",178,0)
 Q:BSDPG>1       ;rest only needs to be on first page
"RTN","SDECRT1",179,0)
 ;
"RTN","SDECRT1",180,0)
 I $$FORMAT="LONG" D
"RTN","SDECRT1",181,0)
 . NEW VAPA,I D ADD^VADPT F I=1:1:3 W:VAPA(I)]"" !,VAPA(I)   ;street
"RTN","SDECRT1",182,0)
 . W !,VAPA(4),", ",$P(VAPA(5),U,2),"  ",VAPA(6)        ;city,state,zip
"RTN","SDECRT1",183,0)
 Q
"RTN","SDECRT1",184,0)
 ;
"RTN","SDECRT1",185,0)
OTHER(DFN) ; -- calls other forms
"RTN","SDECRT1",186,0)
 Q:$$GET1^DIQ(9009020.2,$$DIV,.04)'="YES"  ;print forms with rs?
"RTN","SDECRT1",187,0)
 ;
"RTN","SDECRT1",188,0)
 ; only print extra forms with first routing slip for day
"RTN","SDECRT1",189,0)
 I (ORDER=2)!(ORDER=3) Q:'$G(^TMP("SDRS",$J,DFN,SORT))
"RTN","SDECRT1",190,0)
 ;
"RTN","SDECRT1",191,0)
 D HS(DFN,SDATE)    ;   health summary
"RTN","SDECRT1",192,0)
 D MP(DFN,SDATE)    ;   med profile
"RTN","SDECRT1",193,0)
 S IO=$$CHKDV($G(BDGSDEV))  ;cmi/anch/maw 5/9/2008 add check to see if device is still open
"RTN","SDECRT1",194,0)
 D APRO(DFN,SDATE)  ;   action profile
"RTN","SDECRT1",195,0)
 D AIU(DFN,SDATE)   ;   address/insurance update
"RTN","SDECRT1",196,0)
 Q
"RTN","SDECRT1",197,0)
 ;
"RTN","SDECRT1",198,0)
HS(DFN,SDATE) ; -- health summary
"RTN","SDECRT1",199,0)
 Q
"RTN","SDECRT1",200,0)
 ;NEW Y
"RTN","SDECRT1",201,0)
 ;S Y=$$ONE(DFN,SDATE,.04) I 'Y Q
"RTN","SDECRT1",202,0)
 ;D HS^BSDFORM(DFN,$P(Y,U,2)) Q
"RTN","SDECRT1",203,0)
 ;
"RTN","SDECRT1",204,0)
MP(DFN,SDATE) ; -- med profile
"RTN","SDECRT1",205,0)
 Q
"RTN","SDECRT1",206,0)
 ;NEW BSDRX
"RTN","SDECRT1",207,0)
 ;S BSDRX=$$ONE(DFN,SDATE,.06) I 'BSDRX Q
"RTN","SDECRT1",208,0)
 ;I $P(BSDRX,U,2)'=2 D MP^BSDFORM(DFN)
"RTN","SDECRT1",209,0)
 ;Q
"RTN","SDECRT1",210,0)
 ;
"RTN","SDECRT1",211,0)
APRO(DFN,SDATE) ; -- action profiles (one for each appt where needed)
"RTN","SDECRT1",212,0)
 NEW BSDX,CLN,Y
"RTN","SDECRT1",213,0)
 S BSDX=SDATE\1
"RTN","SDECRT1",214,0)
 F  S BSDX=$O(^DPT(DFN,"S",BSDX)) Q:BSDX=""  Q:BSDX>(SDATE+.2400)  D
"RTN","SDECRT1",215,0)
 . S CLN=$P($G(^DPT(DFN,"S",BSDX,0)),U) Q:CLN=""  Q:$P(^(0),U,2)["C"
"RTN","SDECRT1",216,0)
 . S Y=$$GET1^DIQ(9009017.2,CLN,.06,"I") Q:Y=0  Q:Y=1
"RTN","SDECRT1",217,0)
 . ;D APRO^BSDFORM(CLN,DFN,SDATE)
"RTN","SDECRT1",218,0)
 Q
"RTN","SDECRT1",219,0)
 ;
"RTN","SDECRT1",220,0)
AIU(DFN,SDATE) ; -- insurance update
"RTN","SDECRT1",221,0)
 Q
"RTN","SDECRT1",222,0)
 ;
"RTN","SDECRT1",223,0)
ONE(DFN,SDATE,FORM) ; -- returns 1 if at least one  clinic for pat wants form
"RTN","SDECRT1",224,0)
 NEW X,Y,Z,C
"RTN","SDECRT1",225,0)
 S Y=0,X=SDATE\1
"RTN","SDECRT1",226,0)
 F  S X=$O(^DPT(DFN,"S",X)) Q:X=""  Q:X>(SDATE+.2400)  Q:(+Y=1)  D
"RTN","SDECRT1",227,0)
 . S C=$P($G(^DPT(DFN,"S",X,0)),U) Q:C=""  Q:$P(^(0),U,2)["C"
"RTN","SDECRT1",228,0)
 . S Z=$$GET1^DIQ(9009017.2,C,FORM,"I") Q:+Z=0   ;form not turned on
"RTN","SDECRT1",229,0)
 . I FORM=.06 S Y=1_U_Z Q
"RTN","SDECRT1",230,0)
 . I FORM=.04 S Y=1_U_$$GET1^DIQ(9009017.2,C,.05,"I") Q  ;hs type ien
"RTN","SDECRT1",231,0)
 . S Y=1
"RTN","SDECRT1",232,0)
 ;
"RTN","SDECRT1",233,0)
 ; if none found, check chart requests
"RTN","SDECRT1",234,0)
 I Y=0 D
"RTN","SDECRT1",235,0)
 . S C=0 F  S C=$O(^SC("AIHSCR",DFN,C)) Q:'C  Q:Y=1  D
"RTN","SDECRT1",236,0)
 .. I $O(^SC("AIHSCR",DFN,C,(SDATE\1),0)) D
"RTN","SDECRT1",237,0)
 ... S Z=$$GET1^DIQ(9009017.2,C,FORM,"I") Q:+Z=0   ;form not turned on
"RTN","SDECRT1",238,0)
 ... I FORM=.06 S Y=1_U_Z Q
"RTN","SDECRT1",239,0)
 ... I FORM=.04 S Y=1_U_$$GET1^DIQ(9009017.2,C,.05,"I") Q  ;hs type ien
"RTN","SDECRT1",240,0)
 ... S Y=1
"RTN","SDECRT1",241,0)
 Q Y
"RTN","SDECRT1",242,0)
 ;
"RTN","SDECRT1",243,0)
 ;
"RTN","SDECRT1",244,0)
MORERS() ; -- returns 1 if want >1 rs
"RTN","SDECRT1",245,0)
 Q $$GET1^DIQ(9009020.2,$$DIV,.03,"I")
"RTN","SDECRT1",246,0)
 ;
"RTN","SDECRT1",247,0)
DIV() ; -- returns division ien
"RTN","SDECRT1",248,0)
 Q $$DIV^SDECU
"RTN","SDECRT1",249,0)
 ;
"RTN","SDECRT1",250,0)
FORMAT() ; -- returns format used - short, long or duplicate
"RTN","SDECRT1",251,0)
 Q $$GET1^DIQ(9009020.2,$$DIV,.16)
"RTN","SDECRT1",252,0)
 ;
"RTN","SDECRT1",253,0)
APPTCNT(A,B,C) ; -- count how many appts patient has for date
"RTN","SDECRT1",254,0)
 NEW CNT,X S (CNT,X)=0
"RTN","SDECRT1",255,0)
 F  S X=$O(^TMP("SDRS",$J,A,B,C,X)) Q:'X  D
"RTN","SDECRT1",256,0)
 . Q:$P(^TMP("SDRS",$J,A,B,C,X),U,2)]""   ;don't count test stops
"RTN","SDECRT1",257,0)
 . S CNT=CNT+1
"RTN","SDECRT1",258,0)
 Q CNT
"RTN","SDECRT1",259,0)
 ;
"RTN","SDECRT1",260,0)
CHKDV(SDEV) ;-- check to see if the original device got closed and if so reopen it
"RTN","SDECRT1",261,0)
 N IOP
"RTN","SDECRT1",262,0)
 I SDEV="" Q IO
"RTN","SDECRT1",263,0)
 I IO=SDEV Q IO
"RTN","SDECRT1",264,0)
 S IOP=SDEV D ^%ZIS
"RTN","SDECRT1",265,0)
 Q IO
"RTN","SDECRT1",266,0)
 ;
"RTN","SDECRT2")
0^91^B4377091^n/a
"RTN","SDECRT2",1,0)
SDECRT2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECRT2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECRT2",3,0)
 ;
"RTN","SDECRT2",4,0)
 Q
"RTN","SDECRT2",5,0)
 ;
"RTN","SDECRT2",6,0)
CRSET(CLN,DATE,DFN,ORDER,SDSTART,SDSTOP) ;EP; process single chart request
"RTN","SDECRT2",7,0)
 ; called by CRLOOP and by chart request software
"RTN","SDECRT2",8,0)
 NEW HRCN,TERM,BSDMODE
"RTN","SDECRT2",9,0)
 ;
"RTN","SDECRT2",10,0)
 S HRCN=$$HRCN^SDECF2(DFN,+$$FAC^SDECU(CLN))  ;chart #
"RTN","SDECRT2",11,0)
 S TERM=$$HRCNT^SDECF2(HRCN)                 ;terminal digit format
"RTN","SDECRT2",12,0)
 I $$GET1^DIQ(9009020.2,+$$DIVC^SDECU(CLN),.18)="NO" D
"RTN","SDECRT2",13,0)
 . S TERM=$$HRCND^SDECF2(HRCN)               ;use chart # per site param
"RTN","SDECRT2",14,0)
 ;
"RTN","SDECRT2",15,0)
 ;set chart request as first item for day-makes extra forms print
"RTN","SDECRT2",16,0)
 ;too hard to find first cr for patient for day AND hopefully
"RTN","SDECRT2",17,0)
 ;chart request not being made if patient already has appt
"RTN","SDECRT2",18,0)
 ;
"RTN","SDECRT2",19,0)
 S BSDMODE="CR"
"RTN","SDECRT2",20,0)
 ;
"RTN","SDECRT2",21,0)
 I ORDER="" D  Q  ;make sure all cr for date are printed
"RTN","SDECRT2",22,0)
 . I $D(^TMP("SDRS",$J,$$GET1^DIQ(2,DFN,.01)," "_TERM,DFN,DATE)) D
"RTN","SDECRT2",23,0)
 .. NEW I F I=.01:.01:.99 Q:'$D(^TMP("SDRS",$J,$$GET1^DIQ(2,DFN,.01)," "_TERM,DFN,(DATE+I)))
"RTN","SDECRT2",24,0)
 .. D NMO^SDECRT0(DFN,(DATE_I),CLN,TERM,"",1)
"RTN","SDECRT2",25,0)
 . E  D NMO^SDECRT0(DFN,DATE,CLN,TERM,"",1)
"RTN","SDECRT2",26,0)
 ;
"RTN","SDECRT2",27,0)
 I ORDER=1,SDSTART]"",SDSTART]$E(TERM,1,2) Q   ;before beginning
"RTN","SDECRT2",28,0)
 I ORDER=1,SDSTOP]"",$E(TERM,1,2)]SDSTOP Q     ;after end
"RTN","SDECRT2",29,0)
 I ORDER=4,SDSTART]"",SDSTART]$$GET1^DIQ(2,DFN,.01) Q   ;before beginning   ;IHS/ITSC/LJF 10/25/2004 PATCH 1003
"RTN","SDECRT2",30,0)
 I ORDER=4,SDSTOP]"",$$GET1^DIQ(2,DFN,.01)]SDSTOP Q     ;after end of range ;IHS/ITSC/LJF 10/25/2004 PATCH 1003
"RTN","SDECRT2",31,0)
 ;
"RTN","SDECRT2",32,0)
 I ORDER=1 D TDO^SDECRT0(DFN,DATE,CLN,TERM,"",1) Q
"RTN","SDECRT2",33,0)
 I ORDER=2 D CLO^SDECRT0(DFN,DATE,CLN,TERM,"",1) Q
"RTN","SDECRT2",34,0)
 I ORDER=3 D PCO^SDECRT0(DFN,DATE,CLN,TERM,"",1) Q
"RTN","SDECRT2",35,0)
 D NMO^SDECRT0(DFN,DATE,CLN,TERM,"",1) Q
"RTN","SDECRT2",36,0)
 Q
"RTN","SDECSFGR")
0^108^B2111835^n/a
"RTN","SDECSFGR",1,0)
SDECSFGR ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECSFGR",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECSFGR",3,0)
 ;
"RTN","SDECSFGR",4,0)
 Q
"RTN","SDECSFGR",5,0)
 ;
"RTN","SDECSFGR",6,0)
 ; NOTE TO PROGRAMMERS;  Use entry point EN.  Do not use the
"RTN","SDECSFGR",7,0)
 ; first line of this routine, as pending initiatives in MDC
"RTN","SDECSFGR",8,0)
 ; might make a formal list on the first line of a routine
"RTN","SDECSFGR",9,0)
 ; invalid.  GTH 07-10-95
"RTN","SDECSFGR",10,0)
 ;
"RTN","SDECSFGR",11,0)
 ; Given a file or subfile number and global reference form,
"RTN","SDECSFGR",12,0)
 ; this routine will return the global reference in the form
"RTN","SDECSFGR",13,0)
 ; specified.
"RTN","SDECSFGR",14,0)
 ;
"RTN","SDECSFGR",15,0)
 ; F (form) is optional but if passed should equal 1 or 2.
"RTN","SDECSFGR",16,0)
 ; If F is not passed the default form will be 1.
"RTN","SDECSFGR",17,0)
 ;
"RTN","SDECSFGR",18,0)
 ;   F = 1 will be in the form ^GLOBAL(DA(2),11,DA(1),11,DA,
"RTN","SDECSFGR",19,0)
 ;   F = 2 will be in the form ^GLOBAL(D0,11,D1,11,D2,
"RTN","SDECSFGR",20,0)
 ;
"RTN","SDECSFGR",21,0)
 ; Formal list:
"RTN","SDECSFGR",22,0)
 ;
"RTN","SDECSFGR",23,0)
 ; 1) S = subfile number (call by value)
"RTN","SDECSFGR",24,0)
 ; 2) G = global reference (call by reference)
"RTN","SDECSFGR",25,0)
 ; 3) F = global reference form (call by value)
"RTN","SDECSFGR",26,0)
 ;
"RTN","SDECSFGR",27,0)
 ; *** NO ERROR CHECKING DONE ***
"RTN","SDECSFGR",28,0)
 ;
"RTN","SDECSFGR",29,0)
START ;
"RTN","SDECSFGR",30,0)
 ; D = Field
"RTN","SDECSFGR",31,0)
 ; I = Counter
"RTN","SDECSFGR",32,0)
 ; L = Level
"RTN","SDECSFGR",33,0)
 ; N = Node
"RTN","SDECSFGR",34,0)
 ; P = Parent
"RTN","SDECSFGR",35,0)
 ;
"RTN","SDECSFGR",36,0)
 NEW D,I,L,N,P
"RTN","SDECSFGR",37,0)
 ;
"RTN","SDECSFGR",38,0)
 S G="",L=1
"RTN","SDECSFGR",39,0)
 I '$D(^DD(S,0,"UP")) D NOPARENT Q
"RTN","SDECSFGR",40,0)
 D BACKUP
"RTN","SDECSFGR",41,0)
 S G=^DIC(P,0,"GL")
"RTN","SDECSFGR",42,0)
 I $G(F)=2 D  S G=G_"D"_(I+1)_"," I 1
"RTN","SDECSFGR",43,0)
 . F I=0:1 S G=G_"D"_I_","_N(99-L)_",",L=L-1 Q:L=0
"RTN","SDECSFGR",44,0)
 . Q
"RTN","SDECSFGR",45,0)
 E  D  S G=G_"DA,"
"RTN","SDECSFGR",46,0)
 . F L=L:-1:0 Q:L=0  S G=G_"DA("_L_"),"_N(99-L)_","
"RTN","SDECSFGR",47,0)
 . Q
"RTN","SDECSFGR",48,0)
 Q
"RTN","SDECSFGR",49,0)
 ;
"RTN","SDECSFGR",50,0)
BACKUP ; BACKUP TREE
"RTN","SDECSFGR",51,0)
 S P=^DD(S,0,"UP")
"RTN","SDECSFGR",52,0)
 S D=$O(^DD(P,"SB",S,""))
"RTN","SDECSFGR",53,0)
 S N(99-L)=$P($P(^DD(P,D,0),"^",4),";",1)
"RTN","SDECSFGR",54,0)
 S:N(99-L)'=+N(99-L) N(99-L)=""""_N(99-L)_""""
"RTN","SDECSFGR",55,0)
 I $D(^DD(P,0,"UP")) S S=P,L=L+1 D BACKUP
"RTN","SDECSFGR",56,0)
 Q
"RTN","SDECSFGR",57,0)
 ;
"RTN","SDECSFGR",58,0)
NOPARENT ; for no parent
"RTN","SDECSFGR",59,0)
 S G=^DIC(S,0,"GL")
"RTN","SDECSFGR",60,0)
 I $G(F)=2 S G=G_"D0" I 1
"RTN","SDECSFGR",61,0)
 E  S G=G_"DA,"
"RTN","SDECSFGR",62,0)
 Q
"RTN","SDECSFGR",63,0)
 ;
"RTN","SDECSFGR",64,0)
DIC(S) ;PEP - Extrinsic entry to return root global from FILE number
"RTN","SDECSFGR",65,0)
 NEW G
"RTN","SDECSFGR",66,0)
 D EN(S,.G)
"RTN","SDECSFGR",67,0)
 S G=$P(G,"DA,")
"RTN","SDECSFGR",68,0)
 Q G
"RTN","SDECSFGR",69,0)
 ;
"RTN","SDECSFGR",70,0)
EN(S,G,F) ;PEP - RETURN SUBFILE GLOBAL REFERENCE
"RTN","SDECSFGR",71,0)
 G START
"RTN","SDECSFGR",72,0)
 ;--------------------
"RTN","SDECU")
0^79^B22991058^n/a
"RTN","SDECU",1,0)
SDECU ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECU",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECU",3,0)
 ;
"RTN","SDECU",4,0)
 Q
"RTN","SDECU",5,0)
 ;
"RTN","SDECU",6,0)
DIV() ;EP; -- returns division ien for user
"RTN","SDECU",7,0)
 ;Q +$O(^DG(40.8,"C",DUZ(2),0))  ;cmi/maw 10/1/2009 patch 1011 orig line
"RTN","SDECU",8,0)
 Q +$O(^DG(40.8,"AD",DUZ(2),0))  ;cmi/maw 10/1/2009 patch 1011 for station number
"RTN","SDECU",9,0)
 ;
"RTN","SDECU",10,0)
DIVC(CLINIC) ;EP; -- returns division for clinic
"RTN","SDECU",11,0)
 Q $$GET1^DIQ(44,+CLINIC,3.5,"I")
"RTN","SDECU",12,0)
 ;
"RTN","SDECU",13,0)
FAC(CLINIC) ;EP; -- returns institution for clinic based on division
"RTN","SDECU",14,0)
 NEW X S X=$$DIVC(CLINIC)
"RTN","SDECU",15,0)
 Q $S(+X:$$GET1^DIQ(40.8,+X,.07,"I"),1:"")
"RTN","SDECU",16,0)
 ;
"RTN","SDECU",17,0)
PRIN(CLINIC) ;PEP -- returns name of clinic's principal clinic
"RTN","SDECU",18,0)
 NEW X S X=$$GET1^DIQ(44,+CLINIC,1916)
"RTN","SDECU",19,0)
 Q $S(X]"":X,1:"UNAFFILIATED CLINICS")
"RTN","SDECU",20,0)
 ;
"RTN","SDECU",21,0)
CONF() ;EP; -- returns confidential warning
"RTN","SDECU",22,0)
 Q "Confidential Patient Data Covered by Privacy Act"
"RTN","SDECU",23,0)
 ;
"RTN","SDECU",24,0)
GREETING(LETTER,PAT) ;EP; -- returns letter salutation
"RTN","SDECU",25,0)
 NEW LINE
"RTN","SDECU",26,0)
 S LINE="Dear "
"RTN","SDECU",27,0)
 S LINE=LINE_$S($$SEX^SDECPAT(PAT)="M":"Mr. ",1:"Ms. ")
"RTN","SDECU",28,0)
 ;
"RTN","SDECU",29,0)
 ;S LINE=LINE_$$NAMEPRT^BDGF2(PAT,1)  ;add printable name
"RTN","SDECU",30,0)
 ;S LINE=LINE_$$NAMEPRT^BDGF2(PAT,1)_","  ;add printable name
"RTN","SDECU",31,0)
 Q LINE
"RTN","SDECU",32,0)
 ;
"RTN","SDECU",33,0)
PRV(SDCL)   ;
"RTN","SDECU",34,0)
 Q
"RTN","SDECU",35,0)
 ;
"RTN","SDECU",36,0)
PAUSE N X
"RTN","SDECU",37,0)
 U IO(0) W !!,"Press RETURN to continue, '^' to exit:"
"RTN","SDECU",38,0)
 R X:$G(DTIME)
"RTN","SDECU",39,0)
 U IO
"RTN","SDECU",40,0)
 Q
"RTN","SDECU",41,0)
 ;
"RTN","SDECU",42,0)
CLEAR  ;remove SDEC RESOURCE USER entries; command line utility for testing
"RTN","SDECU",43,0)
 N DA,DIK,SDI,SDJ,SDK
"RTN","SDECU",44,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.833,SDI)) Q:SDI'>0  D
"RTN","SDECU",45,0)
 .;W !,SDI
"RTN","SDECU",46,0)
 .S DIK="^SDEC(409.833,"
"RTN","SDECU",47,0)
 .S DA=SDI
"RTN","SDECU",48,0)
 .D ^DIK
"RTN","SDECU",49,0)
 Q
"RTN","SDECU",50,0)
 ;S SDI=0 F  S SDI=$O(^SDEC(409.833,SDI)) Q:SDI'>0  W !,SDI S DIK="^SDEC(409.833," S DA=SDI D ^DIK
"RTN","SDECU",51,0)
 ;
"RTN","SDECU",52,0)
DUPS ;find duplicate entries in SDEC APPOINTMENT
"RTN","SDECU",53,0)
 N DUP,H,NOD,NOD2,PAT,RES,TYP
"RTN","SDECU",54,0)
 ;    1         2             3           4                  5                   6
"RTN","SDECU",55,0)
 ;DUP("ENTERED",<entered d/t>,<date/time>,<patient ien_name>,<resource ien_name>,type)=CNT
"RTN","SDECU",56,0)
 ;DUP("START",  <entered d/t>,<date/time>,<patient ien_name>,<resource ien_name>,type)=CNT
"RTN","SDECU",57,0)
 S H=0 F  S H=$O(^SDEC(409.84,H)) Q:H'>0  D
"RTN","SDECU",58,0)
 .S NOD=$G(^SDEC(409.84,H,0))
"RTN","SDECU",59,0)
 .S NOD2=$G(^SDEC(409.84,H,2))
"RTN","SDECU",60,0)
 .S PAT=$P(NOD,U,5)_" "_$$GET1^DIQ(2,$P(NOD,U,5)_",",.01)
"RTN","SDECU",61,0)
 .S RES=$P(NOD,U,7)_" "_$$GET1^DIQ(409.831,$P(NOD,U,7)_",",.01)
"RTN","SDECU",62,0)
 .S TYP=$$GET1^DIQ(409.84,H_",",.22) S TYP=$S(TYP="":0,1:TYP)
"RTN","SDECU",63,0)
 .S DUP("ENTERED",$P(NOD,U,9),$P(NOD,U,1),PAT,RES,TYP)=$G(DUP($P(NOD,U,1),PAT,RES,$P(NOD,U,9),TYP))+1
"RTN","SDECU",64,0)
 .S DUP("START",$P(NOD,U,1),PAT,RES,$P(NOD,U,9),TYP)=$G(DUP($P(NOD,U,1),PAT,RES,$P(NOD,U,9),TYP))+1
"RTN","SDECU",65,0)
 N S1,S2,S3,S4,S5
"RTN","SDECU",66,0)
 S S1="" F  S S1=$O(DUP(S1)) Q:S1=""  D
"RTN","SDECU",67,0)
 .S S2="" F  S S2=$O(DUP(S1,S2)) Q:S2=""  D
"RTN","SDECU",68,0)
 ..S S3="" F  S S3=$O(DUP(S1,S2,S3)) Q:S3=""  D
"RTN","SDECU",69,0)
 ...S S4="" F  S S4=$O(DUP(S1,S2,S3,S4)) Q:S4=""  D
"RTN","SDECU",70,0)
 ....S S5="" F  S S5=$O(DUP(S1,S2,S3,S4,S5)) Q:S5=""  D
"RTN","SDECU",71,0)
 .....W !,$E(S1,1,12),?(14),$E(S2,1,15),?(31),$E(S3,1,15),?(48),$E(S4,1,12),?(62),S5,"   ",DUP(S1,S2,S3,S4,S5)
"RTN","SDECU",72,0)
 Q
"RTN","SDECU",73,0)
 ;
"RTN","SDECU",74,0)
GETSUB(TXT)  ;
"RTN","SDECU",75,0)
 N LAST
"RTN","SDECU",76,0)
 S LAST=$E(TXT,$L(TXT))
"RTN","SDECU",77,0)
 S LAST=$C($A(LAST)-1)
"RTN","SDECU",78,0)
 S LAST=$E(TXT,1,$L(TXT)-1)_LAST_"~"
"RTN","SDECU",79,0)
 Q LAST
"RTN","SDECU",80,0)
 ;
"RTN","SDECU",81,0)
FILL(PADS,CHAR)  ;pad string
"RTN","SDECU",82,0)
 N I,RET
"RTN","SDECU",83,0)
 S CHAR=$G(CHAR)
"RTN","SDECU",84,0)
 S:CHAR="" CHAR=" "
"RTN","SDECU",85,0)
 S RET=""
"RTN","SDECU",86,0)
 F I=1:1:PADS S RET=RET_CHAR
"RTN","SDECU",87,0)
 Q RET
"RTN","SDECU",88,0)
 ;
"RTN","SDECU",89,0)
RPC(BUILD) ;list rpcs  Same as fields used in 7.2 Interface Detailed Design
"RTN","SDECU",90,0)
 N DASH,RP,RPA,RPN,SDI,SDJ,SDK
"RTN","SDECU",91,0)
 Q:$G(BUILD)=""
"RTN","SDECU",92,0)
 S BUILD=$O(^XPD(9.6,"B",BUILD,0))
"RTN","SDECU",93,0)
 Q:BUILD=""
"RTN","SDECU",94,0)
 S $P(DASH,"-",75)="-"
"RTN","SDECU",95,0)
 S SDI=0 F  S SDI=$O(^XPD(9.6,BUILD,"KRN",8994,"NM",SDI)) Q:SDI'>0  D
"RTN","SDECU",96,0)
 .S RPN=$P($G(^XPD(9.6,BUILD,"KRN",8994,"NM",SDI,0)),U,1)
"RTN","SDECU",97,0)
 .S RP(RPN)=$O(^XWB(8994,"B",RPN,0))
"RTN","SDECU",98,0)
 S RPN="" F  S RPN=$O(RP(RPN)) Q:RPN=""  D
"RTN","SDECU",99,0)
 .S RP=RP(RPN)
"RTN","SDECU",100,0)
 .W !!,DASH,!!
"RTN","SDECU",101,0)
 .;NAME
"RTN","SDECU",102,0)
 .W RPN
"RTN","SDECU",103,0)
 .;DESCRIPTION
"RTN","SDECU",104,0)
 .S SDJ=0 F  S SDJ=$O(^XWB(8994,RP,1,SDJ)) Q:SDJ'>0  W !,^(SDJ,0)
"RTN","SDECU",105,0)
 .;INPUT
"RTN","SDECU",106,0)
 .W !!,"***INPUT:"
"RTN","SDECU",107,0)
 .I $O(^XWB(8994,RP,2,0))'>0 W !," NO INPUT"
"RTN","SDECU",108,0)
 .S SDJ=0 F  S SDJ=$O(^XWB(8994,RP,2,SDJ)) Q:SDJ'>0  D
"RTN","SDECU",109,0)
 ..W !," ",$P(^XWB(8994,RP,2,SDJ,0),U,1)
"RTN","SDECU",110,0)
 ..S SDK=0 F  S SDK=$O(^XWB(8994,RP,2,SDJ,1,SDK)) Q:SDK'>0  D
"RTN","SDECU",111,0)
 ...W !,^XWB(8994,RP,2,SDJ,1,SDK,0)
"RTN","SDECU",112,0)
 .W !!,"***RETURN:"
"RTN","SDECU",113,0)
 .S SDJ=0 F  S SDJ=$O(^XWB(8994,RP,3,SDJ)) Q:SDJ'>0  D
"RTN","SDECU",114,0)
 ..W !,^XWB(8994,RP,3,SDJ,0)
"RTN","SDECU",115,0)
 Q
"RTN","SDECU",116,0)
 ;
"RTN","SDECU",117,0)
RPC2(BUILD) ;list rpcs - same fields as 6.2.2.3.11 Remote Procedure Call (RPC)
"RTN","SDECU",118,0)
 N DASH,DATA,RP,RPA,RPN,SDI,SDJ,SDK,X
"RTN","SDECU",119,0)
 Q:$G(BUILD)=""
"RTN","SDECU",120,0)
 S BUILD=$O(^XPD(9.6,"B",BUILD,0))
"RTN","SDECU",121,0)
 Q:BUILD=""
"RTN","SDECU",122,0)
 S $P(DASH,"-",75)="-"
"RTN","SDECU",123,0)
 S SDI=0 F  S SDI=$O(^XPD(9.6,BUILD,"KRN",8994,"NM",SDI)) Q:SDI'>0  D
"RTN","SDECU",124,0)
 .S RPN=$P($G(^XPD(9.6,BUILD,"KRN",8994,"NM",SDI,0)),U,1)
"RTN","SDECU",125,0)
 .S RP(RPN)=$O(^XWB(8994,"B",RPN,0))
"RTN","SDECU",126,0)
 S RPN="" F  S RPN=$O(RP(RPN)) Q:RPN=""  D
"RTN","SDECU",127,0)
 .S RP=RP(RPN)
"RTN","SDECU",128,0)
 .K DATA
"RTN","SDECU",129,0)
 .D GETS^DIQ(8994,RP,"*","IE","DATA")
"RTN","SDECU",130,0)
 .S X="DATA(8994,"""_RP_","")"
"RTN","SDECU",131,0)
 .W !!,DASH,!!
"RTN","SDECU",132,0)
 .W "Name",?20,RPN
"RTN","SDECU",133,0)
 .W !,"TAG^RTN",?20,@X@(.02,"E")_"^"_@X@(.03,"E")
"RTN","SDECU",134,0)
 .W !!,"***Input Parameters"
"RTN","SDECU",135,0)
 .I $O(^XWB(8994,RP,2,0))'>0 W !," NO INPUT"
"RTN","SDECU",136,0)
 .S SDJ=0 F  S SDJ=$O(^XWB(8994,RP,2,SDJ)) Q:SDJ'>0  D
"RTN","SDECU",137,0)
 ..W !," ",$P(^XWB(8994,RP,2,SDJ,0),U,1)
"RTN","SDECU",138,0)
 ..S SDK=0 F  S SDK=$O(^XWB(8994,RP,2,SDJ,1,SDK)) Q:SDK'>0  D
"RTN","SDECU",139,0)
 ...W !,^XWB(8994,RP,2,SDJ,1,SDK,0)
"RTN","SDECU",140,0)
 .W !!,"Return Value Type",?20,@X@(.04,"E")
"RTN","SDECU",141,0)
 .;DESCRIPTION
"RTN","SDECU",142,0)
 .W !!,"DESCRIPTION"
"RTN","SDECU",143,0)
 .S SDJ=0 F  S SDJ=$O(^XWB(8994,RP,1,SDJ)) Q:SDJ'>0  W !,^(SDJ,0)
"RTN","SDECU",144,0)
 Q
"RTN","SDECU2")
0^80^B28139017^n/a
"RTN","SDECU2",1,0)
SDECU2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECU2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECU2",3,0)
 ;
"RTN","SDECU2",4,0)
 Q
"RTN","SDECU2",5,0)
 ;
"RTN","SDECU2",6,0)
SCIEN(PAT,CLINIC,DATE) ;PEP; returns ien for appt in ^SC
"RTN","SDECU2",7,0)
 NEW X,IEN
"RTN","SDECU2",8,0)
 S X=0 F  S X=$O(^SC(CLINIC,"S",DATE,1,X)) Q:'X  Q:$G(IEN)  D
"RTN","SDECU2",9,0)
 . Q:$P($G(^SC(CLINIC,"S",DATE,1,X,0)),U,9)="C"  ;cancelled
"RTN","SDECU2",10,0)
 . I +$G(^SC(CLINIC,"S",DATE,1,X,0))=PAT S IEN=X
"RTN","SDECU2",11,0)
 Q $G(IEN)
"RTN","SDECU2",12,0)
 ;
"RTN","SDECU2",13,0)
CI(PAT,CLINIC,DATE,SDIEN) ;PEP; -- returns 1 if appt already checked-in
"RTN","SDECU2",14,0)
 NEW X
"RTN","SDECU2",15,0)
 S X=$G(SDIEN)   ;ien sent in call
"RTN","SDECU2",16,0)
 I 'X S X=$$SCIEN(PAT,CLINIC,DATE) I 'X Q 0
"RTN","SDECU2",17,0)
 S X=$P($G(^SC(CLINIC,"S",DATE,1,X,"C")),U)
"RTN","SDECU2",18,0)
 Q $S(X:1,1:0)
"RTN","SDECU2",19,0)
 ;
"RTN","SDECU2",20,0)
APPTYP(PAT,DATE) ;PEP; -- returns type of appt (scheduled or walk-in)
"RTN","SDECU2",21,0)
 NEW X S X=$P($G(^DPT(PAT,"S",DATE,0)),U,7)
"RTN","SDECU2",22,0)
 Q $S(X=3:"SCHED",X=4:"WALK-IN",1:"??")
"RTN","SDECU2",23,0)
 ;
"RTN","SDECU2",24,0)
CO(PAT,CLINIC,DATE,SDIEN) ;PEP; -- returns 1 if appt already checked-out
"RTN","SDECU2",25,0)
 NEW X
"RTN","SDECU2",26,0)
 S X=$G(SDIEN)   ;ien sent in call
"RTN","SDECU2",27,0)
 I 'X S X=$$SCIEN(PAT,CLINIC,DATE) I 'X Q 0
"RTN","SDECU2",28,0)
 S X=$P($G(^SC(CLINIC,"S",DATE,1,X,"C")),U,3)
"RTN","SDECU2",29,0)
 Q $S(X:1,1:0)
"RTN","SDECU2",30,0)
 ;
"RTN","SDECU2",31,0)
GETVST(PAT,DATE) ;PEP; returns visit ien for appt date and patient
"RTN","SDECU2",32,0)
 NEW X
"RTN","SDECU2",33,0)
 I ('PAT)!('DATE) Q 0
"RTN","SDECU2",34,0)
 S X=$G(^DPT(PAT,"S",DATE,0)) I 'X Q 0   ;appt node
"RTN","SDECU2",35,0)
 S X=$P(X,U,20) I 'X Q 0                 ;outpt encounter ptr
"RTN","SDECU2",36,0)
 S X=$G(^SCE(X,0)) I 'X Q 0              ;outpt encounter node
"RTN","SDECU2",37,0)
 I $P(X,U,2)'=PAT Q 0                    ;patient ptr
"RTN","SDECU2",38,0)
 Q $P(X,U,5)                             ;visit ptr
"RTN","SDECU2",39,0)
 ;
"RTN","SDECU2",40,0)
PDEMO(RET,DFN) ;GET specific patient demographics
"RTN","SDECU2",41,0)
 ;INPUT:
"RTN","SDECU2",42,0)
 ; DFN - Pointer to PATIENT file 2
"RTN","SDECU2",43,0)
 ;RETURN:
"RTN","SDECU2",44,0)
 ;  .RET = Return Array
"RTN","SDECU2",45,0)
 ;   RET("DOB")      = Date of Birth
"RTN","SDECU2",46,0)
 ;   RET("ELIGIEN")  = Pointer to MAS ELIGIBILITY CODE file 8.1
"RTN","SDECU2",47,0)
 ;   RET("ELIGNAME") = NAME from MAS ELIGIBILITY CODE file
"RTN","SDECU2",48,0)
 ;   RET("GENDER")
"RTN","SDECU2",49,0)
 ;   RET("HRN")      = health record number
"RTN","SDECU2",50,0)
 ;   RET("INSTIEN")  = Institution IEN
"RTN","SDECU2",51,0)
 ;   RET("INSTNAME") = Institution Name
"RTN","SDECU2",52,0)
 ;   RET("NAME")     = Patient name
"RTN","SDECU2",53,0)
 ;   RET("PADDRES1")= STREET ADDRESS [LINE 1]
"RTN","SDECU2",54,0)
 ;   RET("PADDRES2")= STREET ADDRESS [LINE 2]
"RTN","SDECU2",55,0)
 ;   RET("PADDRES3")= STREET ADDRESS [LINE 3]
"RTN","SDECU2",56,0)
 ;   RET("PZIP+4")   = ZIP+4
"RTN","SDECU2",57,0)
 ;   RET("PCITY")    = CITY
"RTN","SDECU2",58,0)
 ;   RET("PSTATE")   = STATE name
"RTN","SDECU2",59,0)
 ;   RET("PCOUNTRY") = COUNTRY name
"RTN","SDECU2",60,0)
 ;   RET("BADADD")   = BAD ADDRESS INDICATOR
"RTN","SDECU2",61,0)
 ;                     1=UNDELIVERABLE
"RTN","SDECU2",62,0)
 ;                     2=HOMELESS
"RTN","SDECU2",63,0)
 ;                     3=OTHER
"RTN","SDECU2",64,0)
 ;                     4=ADDRESS NOT FOUND
"RTN","SDECU2",65,0)
 ;   RET("HPHONE")   = Home phone
"RTN","SDECU2",66,0)
 ;   RET("OPHONE")   = Office phone
"RTN","SDECU2",67,0)
 ;   RET("PRIGRP")   = ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file
"RTN","SDECU2",68,0)
 ;             Valid Values:
"RTN","SDECU2",69,0)
 ;               GROUP 1
"RTN","SDECU2",70,0)
 ;               GROUP 2
"RTN","SDECU2",71,0)
 ;               GROUP 3
"RTN","SDECU2",72,0)
 ;               GROUP 4
"RTN","SDECU2",73,0)
 ;               GROUP 5
"RTN","SDECU2",74,0)
 ;               GROUP 6
"RTN","SDECU2",75,0)
 ;               GROUP 7
"RTN","SDECU2",76,0)
 ;               GROUP 8
"RTN","SDECU2",77,0)
 ;   RET("SSN")      = Social Security number
"RTN","SDECU2",78,0)
 ;   RET("SVCCONN")  = SERVICE CONNECTED field from PATIENT ENROLLMENT file
"RTN","SDECU2",79,0)
 ;             Valid values:
"RTN","SDECU2",80,0)
 ;             YES
"RTN","SDECU2",81,0)
 ;             NO
"RTN","SDECU2",82,0)
 ;   RET("SVCCONNP") = SERVICE CONNECTED PERCENTAGE field from PATIENT ENROLLMENT file
"RTN","SDECU2",83,0)
 ;             Numeric between 0-100
"RTN","SDECU2",84,0)
 ;   RET("TYPEIEN") = Pointer to TYPE OF PATIENT file 391
"RTN","SDECU2",85,0)
 ;   RET("TYPENAME")= NAME from TYPE OF PATIENT file 391
"RTN","SDECU2",86,0)
 N SDD,SDM
"RTN","SDECU2",87,0)
 N PCE,PD,PM,PTINFO
"RTN","SDECU2",88,0)
 ;collect demographics
"RTN","SDECU2",89,0)
 Q:'+$G(DFN)
"RTN","SDECU2",90,0)
 Q:'$D(^DPT(DFN,0))
"RTN","SDECU2",91,0)
 K RET
"RTN","SDECU2",92,0)
 D PTINFO^SDECPTCX(.PTINFO,DFN)
"RTN","SDECU2",93,0)
 D GETS^DIQ(9000001,DFN_",","**","IE","PD","PM")
"RTN","SDECU2",94,0)
 I '$D(PM) D
"RTN","SDECU2",95,0)
 .S RET("INSTIEN")=$G(PD(9000001.41,+DUZ(2)_","_DFN_",",.01,"I"))
"RTN","SDECU2",96,0)
 .S RET("INSTNAME")=$G(PD(9000001.41,+DUZ(2)_","_DFN_",",.01,"E"))
"RTN","SDECU2",97,0)
 E  S (RET("INSTIEN"),RET("INSTNAME"))=""
"RTN","SDECU2",98,0)
 S RET("NAME")=$P($G(PTINFO),U)
"RTN","SDECU2",99,0)
 S RET("GENDER")=$P($G(PTINFO),U,2)
"RTN","SDECU2",100,0)
 S RET("DOB")=$$FMTE^XLFDT($P($G(PTINFO),U,3))
"RTN","SDECU2",101,0)
 S RET("SSN")=$P($G(PTINFO),U,4)
"RTN","SDECU2",102,0)
 S RET("HRN")=$$HRN^SDECPAT(DFN,DUZ(2))
"RTN","SDECU2",103,0)
 S PCE=$P($G(^DPT(DFN,"ENR")),U,1)
"RTN","SDECU2",104,0)
 D:+PCE GETS^DIQ(27.11,+PCE_",",".07;50.01;50.02;50.03","IE","SDD","SDM")
"RTN","SDECU2",105,0)
 S RET("PRIGRP")=$S(+PCE:SDD(27.11,PCE_",",.07,"E"),1:"")
"RTN","SDECU2",106,0)
 S RET("ELIGIEN")=$S(+PCE:SDD(27.11,PCE_",",50.01,"I"),1:"")
"RTN","SDECU2",107,0)
 S RET("ELIGNAME")=$S(+PCE:SDD(27.11,PCE_",",50.01,"E"),1:"")
"RTN","SDECU2",108,0)
 S RET("SVCCONN")=$$GET1^DIQ(2,DFN_",",.301,"E")  ;$S(+PCE:SDD(27.11,PCE_",",50.02,"E"),1:"")
"RTN","SDECU2",109,0)
 S RET("SVCCONNP")=$$GET1^DIQ(2,DFN_",",.302,"E")  ;$S(+PCE:SDD(27.11,PCE_",",50.03,"I"),1:"")
"RTN","SDECU2",110,0)
 S RET("TYPEIEN")=$$GET1^DIQ(2,DFN_",",391,"I")
"RTN","SDECU2",111,0)
 S RET("TYPENAME")=$$GET1^DIQ(2,DFN_",",391,"E")
"RTN","SDECU2",112,0)
 ;get address
"RTN","SDECU2",113,0)
 K SDD,SDM D GETS^DIQ(2,DFN_",",".111;.1112;.112;.113;.114;.115;.116;.121;.131;.132;.1173","IE","SDD","SDM")
"RTN","SDECU2",114,0)
 S RET("PADDRES1")=$G(SDD(2,DFN_",",.111,"E"))  ; STREET ADDRESS [LINE 1]
"RTN","SDECU2",115,0)
 S RET("PADDRES2")=$G(SDD(2,DFN_",",.112,"E"))  ; STREET ADDRESS [LINE 2]
"RTN","SDECU2",116,0)
 S RET("PADDRES3")=$G(SDD(2,DFN_",",.113,"E"))  ; STREET ADDRESS [LINE 3]
"RTN","SDECU2",117,0)
 S RET("PZIP+4")=$G(SDD(2,DFN_",",.1112,"E"))    ; ZIP+4
"RTN","SDECU2",118,0)
 S RET("PCITY")=$G(SDD(2,DFN_",",.114,"E"))      ; CITY
"RTN","SDECU2",119,0)
 S RET("PSTATE")=$G(SDD(2,DFN_",",.115,"E"))     ; STATE name
"RTN","SDECU2",120,0)
 S RET("PCOUNTRY")=$G(SDD(2,DFN_",",.1173,"I"))  ; COUNTRY
"RTN","SDECU2",121,0)
 I RET("PCOUNTRY")'="",'+RET("PCOUNTRY") S RET("PCOUNTRY")=$O(^HL(779.004,"B",RET("PCOUNTRY"),0))
"RTN","SDECU2",122,0)
 S RET("BADADD")=$G(SDD(2,DFN_",",.121,"I"))     ;bad address indicator
"RTN","SDECU2",123,0)
 ;get phone
"RTN","SDECU2",124,0)
 S RET("HPHONE")=$G(SDD(2,DFN_",",.131,"E"))     ;phone number (residence) (home phone)
"RTN","SDECU2",125,0)
 S RET("OPHONE")=$G(SDD(2,DFN_",",.132,"E"))     ;phone number (work) (office phone)
"RTN","SDECU2",126,0)
 Q
"RTN","SDECU2",127,0)
 ;
"RTN","SDECU2",128,0)
GAF(DFN) ;determine if GAF score needed
"RTN","SDECU2",129,0)
 N GAF,GAFR
"RTN","SDECU2",130,0)
 S GAFR=""
"RTN","SDECU2",131,0)
 S GAF=$$NEWGAF^SDUTL2(DFN)
"RTN","SDECU2",132,0)
 S:GAF="" GAF=-1
"RTN","SDECU2",133,0)
 S $P(GAFR,"|",1)=$S(+GAF:"New GAF Required",1:"No new GAF required")
"RTN","SDECU2",134,0)
 S $P(GAFR,"|",2)=$P(GAF,U,2)
"RTN","SDECU2",135,0)
 S $P(GAFR,"|",3)=$$FMTE^XLFDT($P(GAF,U,3))
"RTN","SDECU2",136,0)
 S $P(GAFR,"|",4)=$P(GAF,U,4)
"RTN","SDECU2",137,0)
 S $P(GAFR,"|",5)=$P($G(^VA(200,+$P(GAF,U,4),0)),U,1)
"RTN","SDECU2",138,0)
 Q GAFR
"RTN","SDECU2",139,0)
 ;
"RTN","SDECU2",140,0)
ETH(DFN,PETH,PETHN) ;get ethnicity list
"RTN","SDECU2",141,0)
 ;INPUT:
"RTN","SDECU2",142,0)
 ;  DFN = Patient ID pointer to PATIENT file
"RTN","SDECU2",143,0)
 ;RETURN:
"RTN","SDECU2",144,0)
 ;   PETH   - Patient Ethnicity list separated by pipe |
"RTN","SDECU2",145,0)
 ;               Pointer to ETHNICITY file 10.2
"RTN","SDECU2",146,0)
 ;   PETHN  - Patient Ethnicity names separated by pipe |
"RTN","SDECU2",147,0)
 N SDI,SDID
"RTN","SDECU2",148,0)
 S (PETH,PETHN)=""
"RTN","SDECU2",149,0)
 S SDI=0 F  S SDI=$O(^DPT(DFN,.06,SDI)) Q:SDI'>0  D
"RTN","SDECU2",150,0)
 .S SDID=$P($G(^DPT(DFN,.06,SDI,0)),U,1)
"RTN","SDECU2",151,0)
 .S PETH=$S(PETH'="":PETH_"|",1:"")_SDID
"RTN","SDECU2",152,0)
 .S PETHN=$S(PETHN'="":PETHN_"|",1:"")_$P($G(^DIC(10.2,SDID,0)),U,1)
"RTN","SDECU2",153,0)
 Q
"RTN","SDECU2",154,0)
RACELST(DFN,RACEIEN,RACENAM) ;get list of race information for given patient
"RTN","SDECU2",155,0)
 ;INPUT:
"RTN","SDECU2",156,0)
 ;  DFN = Patient ID pointer to PATIENT file
"RTN","SDECU2",157,0)
 ;RETURN:
"RTN","SDECU2",158,0)
 ;   RACEIEN  - Patient race list separated by pipe |
"RTN","SDECU2",159,0)
 ;               Pointer to RACE file 10
"RTN","SDECU2",160,0)
 ;   RACENAM  - Patient race names separated by pipe |
"RTN","SDECU2",161,0)
 N SDI,SDID
"RTN","SDECU2",162,0)
 S (RACEIEN,RACENAM)=""
"RTN","SDECU2",163,0)
 S SDI=0 F  S SDI=$O(^DPT(DFN,.02,SDI)) Q:SDI'>0  D
"RTN","SDECU2",164,0)
 .S SDID=$P($G(^DPT(DFN,.02,SDI,0)),U,1)
"RTN","SDECU2",165,0)
 .S RACEIEN=$S(RACEIEN'="":RACEIEN_"|",1:"")_SDID
"RTN","SDECU2",166,0)
 .S RACENAM=$S(RACENAM'="":RACENAM_"|",1:"")_$P($G(^DIC(10,SDID,0)),U,1)
"RTN","SDECU2",167,0)
 Q
"RTN","SDECUT1A")
0^159^B65268393^n/a
"RTN","SDECUT1A",1,0)
SDECUT1A ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECUT1A",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECUT1A",3,0)
 ;
"RTN","SDECUT1A",4,0)
 Q
"RTN","SDECUT1A",5,0)
 ;
"RTN","SDECUT1A",6,0)
A(STA,SDCL,SDBEG,SDSI,SDCLS) ;get array of start times
"RTN","SDECUT1A",7,0)
 N HR,HR1,MIN,NOD,OFFSET,SDAY,SDI,SDTDAY,SDTDONE,SDTAR
"RTN","SDECUT1A",8,0)
 S SDTDONE=0
"RTN","SDECUT1A",9,0)
 S SDTDAY=$$GETDAY^SDECUTL1($P(SDBEG,".",1))
"RTN","SDECUT1A",10,0)
 S SDAY=$$FMADD^XLFDT(SDBEG,1) F  S SDAY=$O(^SC(SDCL,"T",SDAY),-1) Q:SDAY'>0  D  Q:+SDTDONE
"RTN","SDECUT1A",11,0)
 .Q:$$GETDAY^SDECUTL1(SDAY)'=SDTDAY
"RTN","SDECUT1A",12,0)
 .I SDAY'=$P(SDBEG,".",1),$D(^SC(SDCL,"ST",SDAY,9)) Q
"RTN","SDECUT1A",13,0)
 .K SDTAR
"RTN","SDECUT1A",14,0)
 .M SDTAR=^SC(SDCL,"T",SDAY)
"RTN","SDECUT1A",15,0)
 .S SDTDONE=1
"RTN","SDECUT1A",16,0)
 D @("A"_SDSI)
"RTN","SDECUT1A",17,0)
 Q
"RTN","SDECUT1A",18,0)
A1 ;
"RTN","SDECUT1A",19,0)
 S OFFSET=""
"RTN","SDECUT1A",20,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",21,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",22,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",23,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",24,0)
 .I +MIN'<0,+MIN<15 S OFFSET=+MIN
"RTN","SDECUT1A",25,0)
 .I OFFSET="",+MIN'<15,+MIN<30 S OFFSET=(+MIN)-15
"RTN","SDECUT1A",26,0)
 .I OFFSET="",+MIN'<30,+MIN<45 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",27,0)
 .I OFFSET="",+MIN'<45,+MIN'>59 S OFFSET=(+MIN)-45
"RTN","SDECUT1A",28,0)
 .D B1(.STA,HR,OFFSET)
"RTN","SDECUT1A",29,0)
 S HR1=""
"RTN","SDECUT1A",30,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",31,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",32,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",33,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",34,0)
 .S HR=HR1
"RTN","SDECUT1A",35,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",36,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",37,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",38,0)
 ..D B1(.STA,HR,OFFSET)
"RTN","SDECUT1A",39,0)
 Q
"RTN","SDECUT1A",40,0)
B1(STA,HR,OFFSET) ;
"RTN","SDECUT1A",41,0)
 N MIN
"RTN","SDECUT1A",42,0)
 S MIN=15+OFFSET
"RTN","SDECUT1A",43,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",44,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",45,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",46,0)
 S MIN=45+OFFSET
"RTN","SDECUT1A",47,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",48,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",49,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",50,0)
 Q
"RTN","SDECUT1A",51,0)
A2 ;
"RTN","SDECUT1A",52,0)
 S OFFSET=""
"RTN","SDECUT1A",53,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",54,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",55,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",56,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",57,0)
 .I +MIN'<0,+MIN<15 S OFFSET=+MIN
"RTN","SDECUT1A",58,0)
 .I OFFSET="",+MIN'<15,+MIN<30 S OFFSET=(+MIN)-15
"RTN","SDECUT1A",59,0)
 .I OFFSET="",+MIN'<30,+MIN<45 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",60,0)
 .I OFFSET="",+MIN'<45,+MIN'>59 S OFFSET=(+MIN)-45
"RTN","SDECUT1A",61,0)
 .D B2(.STA,HR,OFFSET)
"RTN","SDECUT1A",62,0)
 S HR1=""
"RTN","SDECUT1A",63,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",64,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",65,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",66,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",67,0)
 .S HR=HR1
"RTN","SDECUT1A",68,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",69,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",70,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",71,0)
 ..D B2(.STA,HR,OFFSET)
"RTN","SDECUT1A",72,0)
 Q
"RTN","SDECUT1A",73,0)
B2(STA,HR,OFFSET) ;
"RTN","SDECUT1A",74,0)
 N MIN
"RTN","SDECUT1A",75,0)
 S MIN=15+OFFSET
"RTN","SDECUT1A",76,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",77,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",78,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",79,0)
 S MIN=45+OFFSET
"RTN","SDECUT1A",80,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",81,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",82,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",83,0)
 Q
"RTN","SDECUT1A",84,0)
A3 ;get array of start times
"RTN","SDECUT1A",85,0)
 N HR,HR1,MIN,NOD,OFFSET,SDAY,SDI,SDTDAY,SDTDONE
"RTN","SDECUT1A",86,0)
 S SDTDONE=0
"RTN","SDECUT1A",87,0)
 S SDTDAY=$$GETDAY^SDECUTL1($P(SDBEG,".",1))
"RTN","SDECUT1A",88,0)
 S SDAY=$$FMADD^XLFDT(SDBEG,1) F  S SDAY=$O(^SC(SDCL,"T",SDAY),-1) Q:SDAY'>0  D  Q:+SDTDONE
"RTN","SDECUT1A",89,0)
 .Q:$$GETDAY^SDECUTL1(SDAY)'=SDTDAY
"RTN","SDECUT1A",90,0)
 .I SDAY'=$P(SDBEG,".",1),$D(^SC(SDCL,"ST",SDAY,9)) Q
"RTN","SDECUT1A",91,0)
 .K SDTAR
"RTN","SDECUT1A",92,0)
 .M SDTAR=^SC(SDCL,"T",SDAY)
"RTN","SDECUT1A",93,0)
 .S SDTDONE=1
"RTN","SDECUT1A",94,0)
 S OFFSET=""
"RTN","SDECUT1A",95,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",96,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",97,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",98,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",99,0)
 .I +MIN'<0,+MIN<20 S OFFSET=+MIN
"RTN","SDECUT1A",100,0)
 .I OFFSET="",+MIN'<20,+MIN<40 S OFFSET=(+MIN)-20   ; S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",101,0)
 .I OFFSET="",+MIN'<40,+MIN'>59 S OFFSET=(+MIN)-40 S STA(HR,2)=MIN_U_$S(MIN="00":"",$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",102,0)
 .D B3(.STA,HR,OFFSET)
"RTN","SDECUT1A",103,0)
 S HR1=""
"RTN","SDECUT1A",104,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",105,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",106,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",107,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",108,0)
 .S HR=HR1
"RTN","SDECUT1A",109,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",110,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",111,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",112,0)
 ..D B3(.STA,HR,OFFSET)
"RTN","SDECUT1A",113,0)
 Q
"RTN","SDECUT1A",114,0)
B3(STA,HR,OFFSET) ;
"RTN","SDECUT1A",115,0)
 N MIN
"RTN","SDECUT1A",116,0)
 S MIN=20+OFFSET
"RTN","SDECUT1A",117,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",118,0)
 S MIN=40+OFFSET
"RTN","SDECUT1A",119,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",120,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",121,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",122,0)
 Q
"RTN","SDECUT1A",123,0)
A4 ;
"RTN","SDECUT1A",124,0)
 S OFFSET=""
"RTN","SDECUT1A",125,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",126,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",127,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",128,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",129,0)
 .I +MIN'<0,+MIN<15 S OFFSET=+MIN
"RTN","SDECUT1A",130,0)
 .I OFFSET="",+MIN'<15,+MIN<30 S OFFSET=(+MIN)-15
"RTN","SDECUT1A",131,0)
 .I OFFSET="",+MIN'<30,+MIN<45 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",132,0)
 .I OFFSET="",+MIN'<45,+MIN'>59 S OFFSET=(+MIN)-45
"RTN","SDECUT1A",133,0)
 .D B4(.STA,HR,OFFSET)
"RTN","SDECUT1A",134,0)
 S HR1=""
"RTN","SDECUT1A",135,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",136,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",137,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",138,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",139,0)
 .S HR=HR1
"RTN","SDECUT1A",140,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",141,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",142,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",143,0)
 ..D B4(.STA,HR,OFFSET)
"RTN","SDECUT1A",144,0)
 Q
"RTN","SDECUT1A",145,0)
B4(STA,HR,OFFSET) ;
"RTN","SDECUT1A",146,0)
 N MIN
"RTN","SDECUT1A",147,0)
 S MIN=15+OFFSET
"RTN","SDECUT1A",148,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",149,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",150,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",151,0)
 S MIN=45+OFFSET
"RTN","SDECUT1A",152,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",153,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",154,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",155,0)
 Q
"RTN","SDECUT1A",156,0)
A6 ;
"RTN","SDECUT1A",157,0)
 S OFFSET=""
"RTN","SDECUT1A",158,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",159,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",160,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",161,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",162,0)
 .I +MIN'<0,+MIN<10 S OFFSET=+MIN
"RTN","SDECUT1A",163,0)
 .I OFFSET="",+MIN'<10,+MIN<20 S OFFSET=(+MIN)-10
"RTN","SDECUT1A",164,0)
 .I OFFSET="",+MIN'<20,+MIN<30 S OFFSET=(+MIN)-20
"RTN","SDECUT1A",165,0)
 .I OFFSET="",+MIN'<30,+MIN<40 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",166,0)
 .I OFFSET="",+MIN'<40,+MIN<50 S OFFSET=(+MIN)-40
"RTN","SDECUT1A",167,0)
 .I OFFSET="",+MIN'<50,+MIN'>59 S OFFSET=(+MIN)-50
"RTN","SDECUT1A",168,0)
 .D B6(.STA,HR,OFFSET)
"RTN","SDECUT1A",169,0)
 S HR1=""
"RTN","SDECUT1A",170,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",171,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",172,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",173,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",174,0)
 .S HR=HR1
"RTN","SDECUT1A",175,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",176,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",177,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",178,0)
 ..D B6(.STA,HR,OFFSET)
"RTN","SDECUT1A",179,0)
 Q
"RTN","SDECUT1A",180,0)
B6(STA,HR,OFFSET) ;
"RTN","SDECUT1A",181,0)
 N MIN
"RTN","SDECUT1A",182,0)
 S MIN=10+OFFSET
"RTN","SDECUT1A",183,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",184,0)
 S MIN=20+OFFSET
"RTN","SDECUT1A",185,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",186,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",187,0)
 S STA(HR,8)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",188,0)
 S MIN=40+OFFSET
"RTN","SDECUT1A",189,0)
 S STA(HR,10)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",190,0)
 S MIN=50+OFFSET
"RTN","SDECUT1A",191,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",192,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",193,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",194,0)
 Q
"RTN","SDECUT1A",195,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT)  ;make block
"RTN","SDECUT1A",196,0)
 N SDATAV,SDATUN
"RTN","SDECUT1A",197,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUT1A",198,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUT1A",199,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_SLOT_U_$S(+SLOT:SDATAV,1:SDATUN)
"RTN","SDECUT1A",200,0)
 Q
"RTN","SDECUT1A",201,0)
 ;
"RTN","SDECUT1A",202,0)
RESNB(SDAB,SDBLKS,SDCL,SDAY,SDRES)  ;create/update access blocks for 1 day
"RTN","SDECUT1A",203,0)
 N SDI,SDJ,SDNOD,SDRESP
"RTN","SDECUT1A",204,0)
 Q:'$D(SDBLKS)
"RTN","SDECUT1A",205,0)
 Q:$G(SDAY)'?7N
"RTN","SDECUT1A",206,0)
 S SDRESP=$G(SDRES)
"RTN","SDECUT1A",207,0)
 ;delete all related access blocks
"RTN","SDECUT1A",208,0)
 ;build new access blocks with calls to RESNB1
"RTN","SDECUT1A",209,0)
 S SDI="" F  S SDI=$O(SDBLKS(SDI)) Q:SDI=""  D
"RTN","SDECUT1A",210,0)
 .S SDNOD=SDBLKS(SDI)
"RTN","SDECUT1A",211,0)
 .Q:$P($P(SDNOD,U,1),".",1)'=SDAY
"RTN","SDECUT1A",212,0)
 .D RESNB1(SDAB,SDCL,$P(SDNOD,U,1),$P(SDNOD,U,2),$P(SDNOD,U,3),$P(SDNOD,U,4))
"RTN","SDECUT1A",213,0)
 Q
"RTN","SDECUT1A",214,0)
 ;
"RTN","SDECUT1A",215,0)
RESNBD(SDCL,SDAY,SDRESP) ;delete access blocks for the day
"RTN","SDECUT1A",216,0)
 Q
"RTN","SDECUT1A",217,0)
 ;
"RTN","SDECUT1A",218,0)
RESNB1(SDAB,SDCL,SDSTART,SDSTOP,SDSLOTS,SDAT,SDRES)  ;create/update 1 access block
"RTN","SDECUT1A",219,0)
 ;INPUT:
"RTN","SDECUT1A",220,0)
 ; SDAB    - global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUT1A",221,0)
 ; SDCL    - clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDECUT1A",222,0)
 ;           not used if SDRES is passed in
"RTN","SDECUT1A",223,0)
 ; SDSTART - start time in FM format
"RTN","SDECUT1A",224,0)
 ; SDSTOP  - stop time in FM format
"RTN","SDECUT1A",225,0)
 ; SDSLOTS - number of slots
"RTN","SDECUT1A",226,0)
 ; SDAT    - access type ID pointer to SDEC ACCESS TYPE file
"RTN","SDECUT1A",227,0)
 ; SDRES   - resource ID pointer to SDEC RESOURCE file
"RTN","SDECUT1A",228,0)
 ;           only update this resource if passed in
"RTN","SDECUT1A",229,0)
 ;           calling routine needs to make sure SDRES belongs to the proper HOSPITAL LOCATION (sdcl)
"RTN","SDECUT1A",230,0)
 S SDRES=$G(SDRES)
"RTN","SDECUT1A",231,0)
 D RESNBR
"RTN","SDECUT1A",232,0)
 Q
"RTN","SDECUT1A",233,0)
 ;only update passed in resource
"RTN","SDECUT1A",234,0)
 I SDRES'="" I $D(^SDEC(409.831,"ALOC",SDCL,SDRES)) D RESNBR  Q
"RTN","SDECUT1A",235,0)
 ;update all resources if no resource passed in
"RTN","SDECUT1A",236,0)
 I SDRES="" S SDRES=0 F  S SDRES=$O(^SDEC(409.831,"ALOC",SDCL,SDRES)) Q:SDRES'>0  D RESNBR
"RTN","SDECUT1A",237,0)
 Q
"RTN","SDECUT1A",238,0)
RESNBR  ;create access block for 1 resource
"RTN","SDECUT1A",239,0)
 N SDCNT,SDFDA,SDIEN,SDIENS,SDMSG
"RTN","SDECUT1A",240,0)
 S (SDCNT,@SDAB@("CNT"))=$G(@SDAB@("CNT"))+1
"RTN","SDECUT1A",241,0)
 S @SDAB@(SDCNT)=SDRES_U_SDSTART_U_SDSTOP_U_SDSLOTS_U_SDAT
"RTN","SDECUT1A",242,0)
 Q
"RTN","SDECUT1A",243,0)
 ;
"RTN","SDECUT1A",244,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUT1A",245,0)
 ;
"RTN","SDECUT1A",246,0)
GETDAY(DATE)  ;return day of the week
"RTN","SDECUT1A",247,0)
 N DOW,RET
"RTN","SDECUT1A",248,0)
 S RET=""
"RTN","SDECUT1A",249,0)
 S DATE=$P($G(DATE),".",1)
"RTN","SDECUT1A",250,0)
 Q:DATE'?7N RET
"RTN","SDECUT1A",251,0)
 S DOW="S %=$E(DATE,1,3),I=$E(DATE,4,5),I=I>2&'(%#4)+$E(""144025036146"",I) X ""F %=%:-1:281 S I=%#4=1+1+I"" S RET=$P(""SUN^MON^TUES^WEDNES^THURS^FRI^SATUR"",U,$E(DATE,6,7)+I#7+1)_""DAY"""
"RTN","SDECUT1A",252,0)
 X DOW
"RTN","SDECUT1A",253,0)
 Q RET
"RTN","SDECUTL")
0^70^B57837892^n/a
"RTN","SDECUTL",1,0)
SDECUTL ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECUTL",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECUTL",3,0)
 ;
"RTN","SDECUTL",4,0)
 ;Reference is made to ICR #4837
"RTN","SDECUTL",5,0)
 Q
"RTN","SDECUTL",6,0)
 ;
"RTN","SDECUTL",7,0)
SYSSTAT(SDECY)   ; SYSTEM STATUS
"RTN","SDECUTL",8,0)
 ;SYSSTAT(SDECY)  external parameter tag in SDEC
"RTN","SDECUTL",9,0)
 N SDECCNT,SDECD,SDECH,SDECII,SDECROW,SDECROW1,SDECYA
"RTN","SDECUTL",10,0)
 S SDECII=0
"RTN","SDECUTL",11,0)
 S SDECY=$NA(^TMP("SDEC",$J)) K @SDECY
"RTN","SDECUTL",12,0)
 ;S SDECYA=$NA(^SDECTMPA($J)) K @SDECYA
"RTN","SDECUTL",13,0)
 S @SDECY@(SDECII)="T00080ERROR_ID^T00080ERROR_TEXT"_$C(30)
"RTN","SDECUTL",14,0)
 S SDECII=SDECII+1 S @SDECY@(SDECII)=$C(30,31)
"RTN","SDECUTL",15,0)
 Q
"RTN","SDECUTL",16,0)
 ;
"RTN","SDECUTL",17,0)
STRIP(SDECSTR) ;
"RTN","SDECUTL",18,0)
 ; SDECSTR = input string to parse
"RTN","SDECUTL",19,0)
 N SDECDN,SDECI,SDECPC,SDECPCNT,SDECPDN,SDECRET
"RTN","SDECUTL",20,0)
 Q:$E(SDECSTR,1,8)="        " ""
"RTN","SDECUTL",21,0)
 S SDECI=""
"RTN","SDECUTL",22,0)
 S SDECRET=""
"RTN","SDECUTL",23,0)
 S SDECPCNT=""
"RTN","SDECUTL",24,0)
 S SDECDN=""
"RTN","SDECUTL",25,0)
 F  Q:SDECDN  D
"RTN","SDECUTL",26,0)
 . S SDECI=SDECI+1
"RTN","SDECUTL",27,0)
 . Q:$E(SDECSTR,SDECI)=" "
"RTN","SDECUTL",28,0)
 . S SDECPCNT=SDECPCNT+1
"RTN","SDECUTL",29,0)
 . S SDECPC=""
"RTN","SDECUTL",30,0)
 . S SDECPDN=""
"RTN","SDECUTL",31,0)
 . F  Q:SDECPDN  D
"RTN","SDECUTL",32,0)
 . . S SDECPC=SDECPC_$E(SDECSTR,SDECI)
"RTN","SDECUTL",33,0)
 . . S SDECI=SDECI+1
"RTN","SDECUTL",34,0)
 . . I ($E(SDECSTR,SDECI)=" ")!(SDECI>$L(SDECSTR)) S SDECPDN=1
"RTN","SDECUTL",35,0)
 . ;
"RTN","SDECUTL",36,0)
 . S SDECRET=$S(SDECPCNT'=1:SDECRET_U,1:"")_$S(SDECPCNT=4:$E(SDECPC,1,8),1:SDECPC)
"RTN","SDECUTL",37,0)
 . I (SDECPCNT=4)!(SDECI>$L(SDECSTR)) S SDECDN=1
"RTN","SDECUTL",38,0)
 ;
"RTN","SDECUTL",39,0)
 Q SDECRET
"RTN","SDECUTL",40,0)
 ;
"RTN","SDECUTL",41,0)
FL(SDECSTR,SDECW,SDECD) ;EP
"RTN","SDECUTL",42,0)
 ;format line
"RTN","SDECUTL",43,0)
 ; SDECSTR = Text String to be formatted
"RTN","SDECUTL",44,0)
 ; SDECW   = Maximum width of text line
"RTN","SDECUTL",45,0)
 ; SDECD   = Delimiter; defaults to double pipe "||" to be used as the line separator
"RTN","SDECUTL",46,0)
 ;
"RTN","SDECUTL",47,0)
 ;RETURNS string delimited by double pipe "||" to be used as line separator
"RTN","SDECUTL",48,0)
 N SDECOUT,SDECPTR,SDECTMP
"RTN","SDECUTL",49,0)
 I $G(SDECW)="" S SDECW=80
"RTN","SDECUTL",50,0)
 I '+SDECW S SDECW=80
"RTN","SDECUTL",51,0)
 I $L(SDECSTR)<=SDECW Q SDECSTR
"RTN","SDECUTL",52,0)
 I $G(SDECD)="" S SDECD="||"
"RTN","SDECUTL",53,0)
 S SDECOUT=""
"RTN","SDECUTL",54,0)
 S SDECPTR=SDECW
"RTN","SDECUTL",55,0)
 ;handle no spaces in the string
"RTN","SDECUTL",56,0)
 I SDECSTR'[" " D
"RTN","SDECUTL",57,0)
 . F  Q:SDECSTR=""  D
"RTN","SDECUTL",58,0)
 . . I $L(SDECSTR)<=SDECW D
"RTN","SDECUTL",59,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_SDECSTR
"RTN","SDECUTL",60,0)
 . . . S SDECSTR=""
"RTN","SDECUTL",61,0)
 . . I $L(SDECSTR)>SDECW D
"RTN","SDECUTL",62,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_$E(SDECSTR,1,SDECW)
"RTN","SDECUTL",63,0)
 . . . S SDECSTR=$E(SDECSTR,SDECW+1,$L(SDECSTR))
"RTN","SDECUTL",64,0)
 ;string does contain a space
"RTN","SDECUTL",65,0)
 I SDECSTR[" " D
"RTN","SDECUTL",66,0)
 . F  Q:SDECSTR=""  D
"RTN","SDECUTL",67,0)
 . . I $L(SDECSTR)<=SDECW D
"RTN","SDECUTL",68,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_SDECSTR
"RTN","SDECUTL",69,0)
 . . . S SDECSTR=""
"RTN","SDECUTL",70,0)
 . . I $L(SDECSTR)>SDECW D
"RTN","SDECUTL",71,0)
 . . . F  Q:$E(SDECSTR,SDECPTR)=" "  D
"RTN","SDECUTL",72,0)
 . . . . S SDECPTR=SDECPTR-1
"RTN","SDECUTL",73,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_$E(SDECSTR,1,SDECPTR-1)
"RTN","SDECUTL",74,0)
 . . . S SDECSTR=$E(SDECSTR,SDECPTR+1,$L(SDECSTR))
"RTN","SDECUTL",75,0)
 . . . S SDECPTR=SDECW
"RTN","SDECUTL",76,0)
 Q SDECOUT
"RTN","SDECUTL",77,0)
 ;
"RTN","SDECUTL",78,0)
 ; Check and validate visit
"RTN","SDECUTL",79,0)
CHKVISIT(VIEN,DFN,CAT) ;EP
"RTN","SDECUTL",80,0)
 N RET,X0
"RTN","SDECUTL",81,0)
 S RET=$$ISLOCKED(VIEN)
"RTN","SDECUTL",82,0)
 Q:RET $S(RET<0:$$ERR^SDEC44("Visit "_VIEN_" not found."),1:$$ERR^SDEC44("Visit "_VIEN_" is locked."))
"RTN","SDECUTL",83,0)
 S X0=$G(^AUPNVSIT(VIEN,0))
"RTN","SDECUTL",84,0)
 I $G(DFN),$P(X0,U,5)'=DFN S RET=$$ERR^SDEC44("Visit "_VIEN_" does not belong to Patient "_DFN_".")
"RTN","SDECUTL",85,0)
 E  I $P(X0,U,11) S RET=$$ERR^SDEC44("Visit "_VIEN_" has been deleted.")
"RTN","SDECUTL",86,0)
 E  I $L($G(CAT)),CAT'[$P(X0,U,7) S RET=$$ERR^SDEC44("Service Category of Visit "_VIEN_" is not "_CAT_".",$$EXTERNAL^DILFD(9000010,.07,,$P(X0,U,7)))
"RTN","SDECUTL",87,0)
 Q RET
"RTN","SDECUTL",88,0)
 ;
"RTN","SDECUTL",89,0)
 ; Returns visit lock status:
"RTN","SDECUTL",90,0)
 ;  -1:  Visit not found
"RTN","SDECUTL",91,0)
 ;   0:  Visit is not locked
"RTN","SDECUTL",92,0)
 ;   1:  Visit is locked
"RTN","SDECUTL",93,0)
ISLOCKED(IEN) ;PEP - Is visit locked?
"RTN","SDECUTL",94,0)
 N DAT,DAYS,EXPDT
"RTN","SDECUTL",95,0)
 S DAT=$$VISREFDT(IEN)
"RTN","SDECUTL",96,0)
 Q:'DAT -1
"RTN","SDECUTL",97,0)
 ;IHS/MSC/PLS - 02/18/09 - Parameter now holds lock expiration date
"RTN","SDECUTL",98,0)
 ;S EXPDT=$$GET^XPAR("USR","BEHOENCX VISIT LOCK OVERRIDE","`"_IEN)
"RTN","SDECUTL",99,0)
 ;Q:EXPDT'<$$DT^XLFDT() 0
"RTN","SDECUTL",100,0)
 ;D:EXPDT DEL^XPAR("USR","BEHOENCX VISIT LOCK OVERRIDE","`"_IEN)  ; remove expired locked
"RTN","SDECUTL",101,0)
 ;Q:$$GET^XPAR("USR","BEHOENCX VISIT LOCK OVERRIDE","`"_IEN) 0
"RTN","SDECUTL",102,0)
 ;S DAYS=$$GET^XPAR("ALL","BEHOENCX VISIT LOCKED")
"RTN","SDECUTL",103,0)
 Q $$FMDIFF^XLFDT(DT,DAT)>1   ;$S(DAYS<1:1,1:DAYS)
"RTN","SDECUTL",104,0)
 ; Returns reference date for visit lock check
"RTN","SDECUTL",105,0)
VISREFDT(IEN) ;
"RTN","SDECUTL",106,0)
 N ADM,DIS,DAT
"RTN","SDECUTL",107,0)
 S DAT=$P($G(^AUPNVSIT(+IEN,0)),U,2)
"RTN","SDECUTL",108,0)
 Q:'DAT ""
"RTN","SDECUTL",109,0)
 S ADM=$O(^DGPM("AVISIT",IEN,0))
"RTN","SDECUTL",110,0)
 Q:'ADM DAT
"RTN","SDECUTL",111,0)
 S DIS=$P($G(^DGPM(ADM,0)),U,17)
"RTN","SDECUTL",112,0)
 Q $S(DIS:$P($G(^DGPM(DIS,0)),U),1:DT)
"RTN","SDECUTL",113,0)
 ;
"RTN","SDECUTL",114,0)
 ; Add/edit a file entry
"RTN","SDECUTL",115,0)
UPDATE(FDA,FLG,IEN) ;EP
"RTN","SDECUTL",116,0)
 N ERR,DFN,X
"RTN","SDECUTL",117,0)
 I $G(FLG)["@" S FLG=$TR(FLG,"@")
"RTN","SDECUTL",118,0)
 E  D
"RTN","SDECUTL",119,0)
 .S X="FDA"
"RTN","SDECUTL",120,0)
 .F  S X=$Q(@X) Q:'$L(X)  K:'$L(@X) @X
"RTN","SDECUTL",121,0)
 Q:$D(FDA)'>1 ""
"RTN","SDECUTL",122,0)
 D UPDATE^DIE(.FLG,"FDA","IEN","ERR")
"RTN","SDECUTL",123,0)
 K FDA
"RTN","SDECUTL",124,0)
 Q $S($G(ERR("DIERR",1)):-ERR("DIERR",1)_U_ERR("DIERR",1,"TEXT",1),1:"")
"RTN","SDECUTL",125,0)
 ;
"RTN","SDECUTL",126,0)
ISACTIVE(ADT,IDT,CDT)  ;is CDT an active date given an active date and inactive date
"RTN","SDECUTL",127,0)
 ;INPUT:
"RTN","SDECUTL",128,0)
 ; ADT = Activation date in FM format
"RTN","SDECUTL",129,0)
 ; IDT = Inactivation date in FM format
"RTN","SDECUTL",130,0)
 ; CDT = date to check - default to 'today'
"RTN","SDECUTL",131,0)
 ;RETURN:
"RTN","SDECUTL",132,0)
 ; 0=inactive
"RTN","SDECUTL",133,0)
 ; 1=active
"RTN","SDECUTL",134,0)
 ; 2=ADT & IDT null; calling routine can decide if default to active or inactive
"RTN","SDECUTL",135,0)
 ; 3=date to check is before both activation and inactivation; calling routine can decide if default to active or inactive
"RTN","SDECUTL",136,0)
 N RET
"RTN","SDECUTL",137,0)
 S RET=""
"RTN","SDECUTL",138,0)
 S ADT=$S($P($G(ADT),".",1)?7N:$P(ADT,".",1),1:"")
"RTN","SDECUTL",139,0)
 S IDT=$S($P($G(IDT),".",1)?7N:$P(IDT,".",1),1:"")
"RTN","SDECUTL",140,0)
 S CDT=$S($P($G(CDT),".",1)?7N:$P(CDT,".",1),1:$P($$NOW^XLFDT,".",1))
"RTN","SDECUTL",141,0)
 ;0 0
"RTN","SDECUTL",142,0)
 I ADT="",IDT="" S RET=2
"RTN","SDECUTL",143,0)
 Q:RET'="" RET
"RTN","SDECUTL",144,0)
 ;1 0
"RTN","SDECUTL",145,0)
 I ADT'="",IDT="" D
"RTN","SDECUTL",146,0)
 .S RET=1   ;TODO: what if 'today' or CDT is before ADT
"RTN","SDECUTL",147,0)
 Q:RET'="" RET
"RTN","SDECUTL",148,0)
 ;0 1
"RTN","SDECUTL",149,0)
 I ADT="",IDT'="" S RET=0   ;TODO: what if 'today' or CDT is before IDT
"RTN","SDECUTL",150,0)
 Q:RET'="" RET
"RTN","SDECUTL",151,0)
 ;1 1
"RTN","SDECUTL",152,0)
 ; active < T < inactive
"RTN","SDECUTL",153,0)
 I CDT>=ADT,CDT<=IDT S RET=1
"RTN","SDECUTL",154,0)
 Q:RET'="" RET
"RTN","SDECUTL",155,0)
 ; active < inactive < T
"RTN","SDECUTL",156,0)
 I ADT<IDT,IDT<CDT S RET=0
"RTN","SDECUTL",157,0)
 Q:RET'="" RET
"RTN","SDECUTL",158,0)
 ; inactive < T < active
"RTN","SDECUTL",159,0)
 I IDT<CDT,CDT<ADT S RET=0
"RTN","SDECUTL",160,0)
 Q:RET'="" RET
"RTN","SDECUTL",161,0)
 ; inactive < active < T
"RTN","SDECUTL",162,0)
 I IDT<ADT,ADT<CDT S RET=1
"RTN","SDECUTL",163,0)
 Q:RET'="" RET
"RTN","SDECUTL",164,0)
 ;T < active < inactive AND T < inactive < active
"RTN","SDECUTL",165,0)
 I RET="" S RET=3  ;should not get here
"RTN","SDECUTL",166,0)
 Q RET
"RTN","SDECUTL",167,0)
 ;
"RTN","SDECUTL",168,0)
APPTGET(DFN,SDBEG,SDCL,SDRES) ;get SDEC APPOINTMENT for given patient, time, and clinic
"RTN","SDECUTL",169,0)
 N SDAPPT,SDI,SDNOD,SDRCL,SDARES
"RTN","SDECUTL",170,0)
 S SDAPPT=""
"RTN","SDECUTL",171,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL",172,0)
 S SDRES=$G(SDRES)
"RTN","SDECUTL",173,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.84,"CPAT",DFN,SDI)) Q:SDI'>0  D  Q:SDAPPT'=""
"RTN","SDECUTL",174,0)
 .S SDNOD=$G(^SDEC(409.84,SDI,0))
"RTN","SDECUTL",175,0)
 .Q:SDBEG'=$P(SDNOD,U,1)
"RTN","SDECUTL",176,0)
 .I +SDRES Q:+SDRES'=$P(SDNOD,U,7)
"RTN","SDECUTL",177,0)
 .I 'SDRES S SDARES=$P(SDNOD,U,7) S SDRCL=$P($G(^SDEC(409.831,+SDARES,0)),U,4) Q:SDRCL'=SDCL
"RTN","SDECUTL",178,0)
 .S SDAPPT=SDI
"RTN","SDECUTL",179,0)
 Q SDAPPT
"RTN","SDECUTL",180,0)
 ;
"RTN","SDECUTL",181,0)
GETRES(SDCL,INACT)  ;get resource for clinic - SDEC RESOURCE
"RTN","SDECUTL",182,0)
 N SDHLN,SDI,SDNOD,SDRES,SDRES1
"RTN","SDECUTL",183,0)
 S (SDRES,SDRES1)=""
"RTN","SDECUTL",184,0)
 S SDHLN=$P($G(^SC(SDCL,0)),U,1)
"RTN","SDECUTL",185,0)
 Q:SDHLN=""
"RTN","SDECUTL",186,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI=""  D  Q:SDRES'=""
"RTN","SDECUTL",187,0)
 .S SDNOD=$G(^SDEC(409.831,SDI,0))
"RTN","SDECUTL",188,0)
 .I '$G(INACT) Q:$$GET1^DIQ(409.831,SDI_",",.02)="YES"
"RTN","SDECUTL",189,0)
 .S:SDRES1="" SDRES1=SDI
"RTN","SDECUTL",190,0)
 .Q:$P($P(SDNOD,U,11),";",2)'="SC("
"RTN","SDECUTL",191,0)
 .S SDRES=SDI
"RTN","SDECUTL",192,0)
 .;I $$UP^XLFSTR($P(SDNOD,U,1))=SDHLN S SDRES=SDI
"RTN","SDECUTL",193,0)
 I SDRES="",SDRES1'="" S SDRES=SDRES1
"RTN","SDECUTL",194,0)
 Q SDRES
"RTN","SDECUTL",195,0)
 ;
"RTN","SDECUTL",196,0)
RECALL(DFN,SDT,SDCL)  ;is this appointment for RECALL
"RTN","SDECUTL",197,0)
 ;INPUT:
"RTN","SDECUTL",198,0)
 ; DFN  = Patient ID pointer to PATIENT file 2
"RTN","SDECUTL",199,0)
 ; SDT  = Appointment date/time in fm format
"RTN","SDECUTL",200,0)
 N SDI,SDNOD1,SDRET
"RTN","SDECUTL",201,0)
 S SDRET=""
"RTN","SDECUTL",202,0)
 S SDI=0 F  S SDI=$O(^SD(403.56,"B",DFN,SDI)) Q:SDI'>0  D  Q:SDRET'=""
"RTN","SDECUTL",203,0)
 .S SDNOD1=$G(^SD(403.56,SDI,1))
"RTN","SDECUTL",204,0)
 .Q:$P(SDNOD1,U,1)'=SDT
"RTN","SDECUTL",205,0)
 .Q:$P(SDNOD1,U,2)'=SDCL
"RTN","SDECUTL",206,0)
 .S SDRET=SDI
"RTN","SDECUTL",207,0)
 Q SDRET
"RTN","SDECUTL",208,0)
 ;
"RTN","SDECUTL",209,0)
SDCL(SDAPID)  ;get clinic for given SDEC APPOINTMENT id
"RTN","SDECUTL",210,0)
 ;INPUT:
"RTN","SDECUTL",211,0)
 ; SDAPID - appt ID pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECUTL",212,0)
 ;RETURN:
"RTN","SDECUTL",213,0)
 ; Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDECUTL",214,0)
 N SDAPTYP,SDCL
"RTN","SDECUTL",215,0)
 S SDCL=""
"RTN","SDECUTL",216,0)
 S SDAPTYP=$$GET1^DIQ(409.84,SDAPID_",",.22,"I")
"RTN","SDECUTL",217,0)
 S:$P(SDAPTYP,"|",2)="SDWL(409.3," SDCL=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",13.2,"I")
"RTN","SDECUTL",218,0)
 S:$P(SDAPTYP,"|",1)="SD(403.5," SDCL=$$GET1^DIQ(403.5,$P(SDAPTYP,"|",2)_",",4.5,"I")
"RTN","SDECUTL",219,0)
 S:$P(SDAPTYP,"|",1)="GMR(123," SDCL=$$GET1^DIQ(123,$P(SDAPTYP,"|",2)_",",.04,"I")    ;ICR 4837
"RTN","SDECUTL",220,0)
 Q SDCL
"RTN","SDECUTL",221,0)
 ;
"RTN","SDECUTL",222,0)
PTSEC(DFN)  ;patient sensitive & record access checks; calls DG SENSITIVE RECORD ACCESS api
"RTN","SDECUTL",223,0)
 ;INPUT:
"RTN","SDECUTL",224,0)
 ; DFN - patient ID pointer to PATIENT file 2
"RTN","SDECUTL",225,0)
 ;RETURN:
"RTN","SDECUTL",226,0)
 ; RESULT - the following pipe pieces:
"RTN","SDECUTL",227,0)
 ;   1. return code:
"RTN","SDECUTL",228,0)
 ;               -1-RPC/API failed
"RTN","SDECUTL",229,0)
 ;                  Required variable not defined
"RTN","SDECUTL",230,0)
 ;                0-No display/action required
"RTN","SDECUTL",231,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDECUTL",232,0)
 ;                1-Display warning message
"RTN","SDECUTL",233,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDECUTL",234,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDECUTL",235,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDECUTL",236,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDECUTL",237,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDECUTL",238,0)
 ;                3-Access to record denied
"RTN","SDECUTL",239,0)
 ;                  Accessing own record
"RTN","SDECUTL",240,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDECUTL",241,0)
 ;                  SSN not defined
"RTN","SDECUTL",242,0)
 ;   2. display text/message
"RTN","SDECUTL",243,0)
 ;   3. display text/message
"RTN","SDECUTL",244,0)
 ;   4. display text/message
"RTN","SDECUTL",245,0)
 ;
"RTN","SDECUTL",246,0)
 N SDI,SDLINE,SDRET,SDSEC,SDTXT
"RTN","SDECUTL",247,0)
 K SDRET,SDSEC
"RTN","SDECUTL",248,0)
 S SDRET=""
"RTN","SDECUTL",249,0)
 D PTSEC^DGSEC4(.SDSEC,DFN,0)
"RTN","SDECUTL",250,0)
 S $P(SDRET,"|",1)=SDSEC(1)
"RTN","SDECUTL",251,0)
 S:$G(SDSEC(2))'="" $P(SDRET,"|",2)=SDSEC(2)  ;I DUZ=51 S:$G(SDSEC(2))'="" $P(SDRET,"|",2)=$$STRIP1(SDSEC(2))
"RTN","SDECUTL",252,0)
 S:$G(SDSEC(3))'="" $P(SDRET,"|",3)=SDSEC(3)  ;I DUZ=51 S:$G(SDSEC(3))'="" $P(SDRET,"|",3)=$$STRIP1(SDSEC(3))
"RTN","SDECUTL",253,0)
 S SDTXT=""
"RTN","SDECUTL",254,0)
 S SDI=3 F  S SDI=$O(SDSEC(SDI)) Q:SDI=""  D
"RTN","SDECUTL",255,0)
 .S SDLINE=$$STRIP1(SDSEC(SDI))
"RTN","SDECUTL",256,0)
 .Q:SDLINE?." "
"RTN","SDECUTL",257,0)
 .S SDTXT=$S(SDTXT'="":SDTXT,1:"")_SDLINE
"RTN","SDECUTL",258,0)
 S:SDTXT'="" $P(SDRET,"|",4)=SDTXT
"RTN","SDECUTL",259,0)
 Q SDRET
"RTN","SDECUTL",260,0)
 ;
"RTN","SDECUTL",261,0)
STRIP1(SDTXT)  ;strip out "*"
"RTN","SDECUTL",262,0)
 N SDI
"RTN","SDECUTL",263,0)
 S SDTXT=$TR(SDTXT,"*","")
"RTN","SDECUTL",264,0)
 F SDI=$L(SDTXT):-1:1 Q:$E(SDTXT,SDI)'=" "  S SDTXT=$E(SDTXT,1,$L(SDTXT)-1)
"RTN","SDECUTL",265,0)
 Q SDTXT
"RTN","SDECUTL1")
0^133^B111920247^n/a
"RTN","SDECUTL1",1,0)
SDECUTL1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECUTL1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECUTL1",3,0)
 ;
"RTN","SDECUTL1",4,0)
 Q
"RTN","SDECUTL1",5,0)
 ;
"RTN","SDECUTL1",6,0)
GETBLKS(SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL)   ;build access block array SDBLKS from pattern SDPAT
"RTN","SDECUTL1",7,0)
 ;INPUT:
"RTN","SDECUTL1",8,0)
 ;  SDPAT - Pattern from CURRENT AVAILABILITY field of PATTERN multiple in file 44
"RTN","SDECUTL1",9,0)
 ;  SDAY  - date (no time) in FM format
"RTN","SDECUTL1",10,0)
 ;  SDCLS - hour clinic display begins from field 1914 in file 44
"RTN","SDECUTL1",11,0)
 ;  SDLEN - length of app't from field 1912 in file 44
"RTN","SDECUTL1",12,0)
 ;  SDSI  - display increments per hour
"RTN","SDECUTL1",13,0)
 ;RETURN:
"RTN","SDECUTL1",14,0)
 ; .SDBLKS - array of access block data to be stored in SDEC ACCESS BLOCK file
"RTN","SDECUTL1",15,0)
 ;           SDBLKS(<count>)=<start time> ^ <end time> ^ <slots> ^ <access type>
"RTN","SDECUTL1",16,0)
 N DTARRAY
"RTN","SDECUTL1",17,0)
 N SDATAV,SDATUN,SDI,SDSIM,SDSTPAT
"RTN","SDECUTL1",18,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL1",19,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL1",20,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDECUTL1",21,0)
 ;          $S(X="":4,X<3:4,X:X,1:4)
"RTN","SDECUTL1",22,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL1",23,0)
 ;S SDPAT=$E(SDPAT,SDSIM+SDSIM,90)
"RTN","SDECUTL1",24,0)
 S SDSTPAT=$G(^SC(SDCL,"ST",SDAY,1))   ;get PATTERN from file 44
"RTN","SDECUTL1",25,0)
 D:SDSTPAT'="" ARRAY^SDECUTL2(.DTARRAY,SDSTPAT,SDAY,SDLEN,SDCLS,SDSI)  ;convert pattern to array
"RTN","SDECUTL1",26,0)
 K SDBLKS
"RTN","SDECUTL1",27,0)
 ;1 2 3 4 OR 6
"RTN","SDECUTL1",28,0)
 D @SDSI
"RTN","SDECUTL1",29,0)
 Q
"RTN","SDECUTL1",30,0)
1  ;1 increments per hour (60 min)
"RTN","SDECUTL1",31,0)
 N AU,BCNT,BMIN,BSLOT,BSTART,BTIME,BSTOP,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDTAR,SDI,SLOT,STA
"RTN","SDECUTL1",32,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",33,0)
 S SDI=0
"RTN","SDECUTL1",34,0)
 F CNT1=2:2 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",35,0)
 I CNT1>6 D
"RTN","SDECUTL1",36,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",37,0)
 .S BTIME=SDCLS+(CNT1\8)
"RTN","SDECUTL1",38,0)
 .S HR=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)
"RTN","SDECUTL1",39,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",40,0)
 .S BTIME=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",41,0)
 .S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",42,0)
 .S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_0_U_SDATUN
"RTN","SDECUTL1",43,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",44,0)
 S HOUR=(SDCLS+(CNT1\8))-1
"RTN","SDECUTL1",45,0)
 F CNT=CNT1:8 D  Q:SLOT=""
"RTN","SDECUTL1",46,0)
 .S HOUR=HOUR+1   ;I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",47,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",48,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",49,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",50,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR))="X"
"RTN","SDECUTL1",51,0)
 .S SLOT=$S(SDCAN:" ",1:$E(SDPAT,CNT)) S SLOT=$S(SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",52,0)
 .S:BSLOT="" BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",53,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",54,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",55,0)
 ..S BMIN=$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",56,0)
 ..S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")
"RTN","SDECUTL1",57,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",58,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",59,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",60,0)
 ..S BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",61,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)   ;_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDECUTL1",62,0)
 .S BCNT=CNT
"RTN","SDECUTL1",63,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_0_U_SDATUN
"RTN","SDECUTL1",64,0)
 Q
"RTN","SDECUTL1",65,0)
2  ;2 increments per hour (30 min)
"RTN","SDECUTL1",66,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",67,0)
 S (BSLOT,BSTART,STA)=""
"RTN","SDECUTL1",68,0)
 S SDI=0
"RTN","SDECUTL1",69,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",70,0)
 F CNT1=2:2 S:(CNT1#8)=2 HOUR=HOUR+1 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",71,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDECUTL1",72,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",73,0)
 I CNT1>2 D
"RTN","SDECUTL1",74,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",75,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",76,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",77,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",78,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDECUTL1",79,0)
 S BSTART=""
"RTN","SDECUTL1",80,0)
 I ((CNT1#8)=2)!((CNT1#8)=4) S HOUR=HOUR-1
"RTN","SDECUTL1",81,0)
 F CNT=CNT1:4 D  Q:SLOT=""
"RTN","SDECUTL1",82,0)
 .I ((CNT#8)=2)!((CNT#8)=4) S HOUR=HOUR+1
"RTN","SDECUTL1",83,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",84,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",85,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",86,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",87,0)
 .S SLOT=$S(SDCAN:" ",1:$E(SDPAT,CNT)) S SLOT=$S(SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",88,0)
 .S:BSLOT="" BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",89,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",90,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",91,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",92,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",93,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",94,0)
 ..;I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".0000"
"RTN","SDECUTL1",95,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",96,0)
 ..S BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",97,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:3,1:"")
"RTN","SDECUTL1",98,0)
 .S BCNT=CNT
"RTN","SDECUTL1",99,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",100,0)
 Q
"RTN","SDECUTL1",101,0)
3  ;3 increments per hour (20 min)
"RTN","SDECUTL1",102,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",103,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",104,0)
 S SDI=0
"RTN","SDECUTL1",105,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",106,0)
 F CNT1=2:2 S:(CNT1#6)=2 HOUR=HOUR+1 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",107,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDECUTL1",108,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",109,0)
 I CNT1>2 D
"RTN","SDECUTL1",110,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",111,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",112,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",113,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#6)=4:$P(STA(HR,4),U,2),(CNT1#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",114,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDECUTL1",115,0)
 S BSTART=""
"RTN","SDECUTL1",116,0)
 I ((CNT1#6)=2) S HOUR=HOUR-1
"RTN","SDECUTL1",117,0)
 F CNT=CNT1:2 D  Q:SLOT=""
"RTN","SDECUTL1",118,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",119,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",120,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",121,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",122,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#6)=4:$P(STA(HR,4),U,1),(CNT#6)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",123,0)
 .S SLOT=$S(SDCAN:" ",1:$E(SDPAT,CNT)) S SLOT=$S(SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",124,0)
 .S:BSLOT="" BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",125,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",126,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",127,0)
 ..;S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",128,0)
 ..S BTIME=$S(((CNT#6)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",129,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",130,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",131,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",132,0)
 ..S BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",133,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:2,(CNT#6)=0:4,1:"")
"RTN","SDECUTL1",134,0)
 .S BCNT=CNT
"RTN","SDECUTL1",135,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",136,0)
 Q
"RTN","SDECUTL1",137,0)
4  ;4 increments per hour (15 min)
"RTN","SDECUTL1",138,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",139,0)
 S (BSLOT,BSTART,STA)=""
"RTN","SDECUTL1",140,0)
 S SDI=0
"RTN","SDECUTL1",141,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",142,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",143,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDECUTL1",144,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",145,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",146,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",147,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",148,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",149,0)
 .S SLOT=$S(SDCAN:" ",1:$E(SDPAT,CNT)) S SLOT=$S(SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",150,0)
 .S:BSLOT="" BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",151,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",152,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",153,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",154,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",155,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",156,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",157,0)
 ..S BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",158,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDECUTL1",159,0)
 .S BCNT=CNT
"RTN","SDECUTL1",160,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",161,0)
 Q
"RTN","SDECUTL1",162,0)
6  ;6 increments per hour (10 min)
"RTN","SDECUTL1",163,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",164,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",165,0)
 S SDI=0
"RTN","SDECUTL1",166,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",167,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",168,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDECUTL1",169,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",170,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",171,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",172,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",173,0)
 .S SDCAN=$G(DTARRAY(SDAY,$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:$P(STA(HR,4),U,1),(CNT#12)=6:$P(STA(HR,6),U,1),(CNT#12)=8:$P(STA(HR,8),U,1),(CNT#12)=10:$P(STA(HR,10),U,1),(CNT#12)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",174,0)
 .S SLOT=$S(SDCAN:" ",1:$E(SDPAT,CNT)) S SLOT=$S(SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",175,0)
 .S:BSLOT="" BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",176,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",177,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",178,0)
 ..S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",179,0)
 ..S BTIME=HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",180,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",181,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",182,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",183,0)
 ..S BSLOT=$S(+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",184,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:1,(CNT#12)=6:2,(CNT#12)=8:3,(CNT#12)=10:4,(CNT#12)=0:5,1:"")
"RTN","SDECUTL1",185,0)
 .S BCNT=CNT
"RTN","SDECUTL1",186,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",187,0)
 Q
"RTN","SDECUTL1",188,0)
STA ;
"RTN","SDECUTL1",189,0)
 N HRP
"RTN","SDECUTL1",190,0)
 S HRP=HR-1 S HRP=$S($L(HRP)=1:"0"_HRP,1:HRP)
"RTN","SDECUTL1",191,0)
 I $D(STA(HRP)) D
"RTN","SDECUTL1",192,0)
 .S STA(HR,4)=STA(HRP,4)
"RTN","SDECUTL1",193,0)
 .S:SDSI'=3 STA(HR,6)=STA(HRP,6)
"RTN","SDECUTL1",194,0)
 .S:SDSI=6 STA(HR,8)=STA(HRP,8)
"RTN","SDECUTL1",195,0)
 .S:SDSI=6 STA(HR,10)=STA(HRP,10)
"RTN","SDECUTL1",196,0)
 .S STA(HR,0)=STA(HRP,0)
"RTN","SDECUTL1",197,0)
 .S STA(HR,2)=STA(HRP,2)
"RTN","SDECUTL1",198,0)
 E  X "D B"_SDSI_"^SDECUT1A(.STA,"""_HR_""",0)"
"RTN","SDECUTL1",199,0)
 Q
"RTN","SDECUTL1",200,0)
 ;
"RTN","SDECUTL1",201,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT)  ;make block
"RTN","SDECUTL1",202,0)
 N SDATAV,SDATUN
"RTN","SDECUTL1",203,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL1",204,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL1",205,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_SLOT_U_$S(+SLOT:SDATAV,1:SDATUN)
"RTN","SDECUTL1",206,0)
 Q
"RTN","SDECUTL1",207,0)
 ;
"RTN","SDECUTL1",208,0)
RESNB(SDAB,SDBLKS,SDCL,SDAY,SDRES)  ;create/update access blocks for 1 day
"RTN","SDECUTL1",209,0)
 N SDI,SDJ,SDNOD,SDRESP
"RTN","SDECUTL1",210,0)
 Q:'$D(SDBLKS)
"RTN","SDECUTL1",211,0)
 Q:$G(SDAY)'?7N
"RTN","SDECUTL1",212,0)
 S SDRESP=$G(SDRES)
"RTN","SDECUTL1",213,0)
 ;delete all related access blocks
"RTN","SDECUTL1",214,0)
 ;build new access blocks with calls to RESNB1
"RTN","SDECUTL1",215,0)
 S SDI="" F  S SDI=$O(SDBLKS(SDI)) Q:SDI=""  D
"RTN","SDECUTL1",216,0)
 .S SDNOD=SDBLKS(SDI)
"RTN","SDECUTL1",217,0)
 .Q:$P($P(SDNOD,U,1),".",1)'=SDAY
"RTN","SDECUTL1",218,0)
 .D RESNB1(SDAB,SDCL,$P(SDNOD,U,1),$P(SDNOD,U,2),$P(SDNOD,U,3),$P(SDNOD,U,4))
"RTN","SDECUTL1",219,0)
 Q
"RTN","SDECUTL1",220,0)
 ;
"RTN","SDECUTL1",221,0)
RESNBD(SDCL,SDAY,SDRESP) ;delete access blocks for the day
"RTN","SDECUTL1",222,0)
 Q
"RTN","SDECUTL1",223,0)
 ;
"RTN","SDECUTL1",224,0)
RESNB1(SDAB,SDCL,SDSTART,SDSTOP,SDSLOTS,SDAT,SDRES)  ;create/update 1 access block
"RTN","SDECUTL1",225,0)
 ;INPUT:
"RTN","SDECUTL1",226,0)
 ; SDAB    - global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUTL1",227,0)
 ; SDCL    - clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDECUTL1",228,0)
 ;           not used if SDRES is passed in
"RTN","SDECUTL1",229,0)
 ; SDSTART - start time in FM format
"RTN","SDECUTL1",230,0)
 ; SDSTOP  - stop time in FM format
"RTN","SDECUTL1",231,0)
 ; SDSLOTS - number of slots
"RTN","SDECUTL1",232,0)
 ; SDAT    - access type ID pointer to SDEC ACCESS TYPE file
"RTN","SDECUTL1",233,0)
 ; SDRES   - resource ID pointer to SDEC RESOURCE file
"RTN","SDECUTL1",234,0)
 ;           only update this resource if passed in
"RTN","SDECUTL1",235,0)
 ;           calling routine needs to make sure SDRES belongs to the proper HOSPITAL LOCATION (sdcl)
"RTN","SDECUTL1",236,0)
 S SDRES=$G(SDRES)
"RTN","SDECUTL1",237,0)
 D RESNBR
"RTN","SDECUTL1",238,0)
 Q
"RTN","SDECUTL1",239,0)
 ;only update passed in resource
"RTN","SDECUTL1",240,0)
 I SDRES'="" I $D(^SDEC(409.831,"ALOC",SDCL,SDRES)) D RESNBR  Q
"RTN","SDECUTL1",241,0)
 ;update all resources if no resource passed in
"RTN","SDECUTL1",242,0)
 I SDRES="" S SDRES=0 F  S SDRES=$O(^SDEC(409.831,"ALOC",SDCL,SDRES)) Q:SDRES'>0  D RESNBR
"RTN","SDECUTL1",243,0)
 Q
"RTN","SDECUTL1",244,0)
RESNBR  ;create access block for 1 resource
"RTN","SDECUTL1",245,0)
 N SDCNT,SDFDA,SDIEN,SDIENS,SDMSG
"RTN","SDECUTL1",246,0)
 S (SDCNT,@SDAB@("CNT"))=$G(@SDAB@("CNT"))+1
"RTN","SDECUTL1",247,0)
 S @SDAB@(SDCNT)=SDRES_U_SDSTART_U_SDSTOP_U_SDSLOTS_U_SDAT
"RTN","SDECUTL1",248,0)
 Q
"RTN","SDECUTL1",249,0)
 ;
"RTN","SDECUTL1",250,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUTL1",251,0)
 ;
"RTN","SDECUTL1",252,0)
GETDAY(DATE)  ;return day of the week
"RTN","SDECUTL1",253,0)
 N DOW,RET
"RTN","SDECUTL1",254,0)
 S RET=""
"RTN","SDECUTL1",255,0)
 S DATE=$P($G(DATE),".",1)
"RTN","SDECUTL1",256,0)
 Q:DATE'?7N RET
"RTN","SDECUTL1",257,0)
 S DOW="S %=$E(DATE,1,3),I=$E(DATE,4,5),I=I>2&'(%#4)+$E(""144025036146"",I) X ""F %=%:-1:281 S I=%#4=1+1+I"" S RET=$P(""SUN^MON^TUES^WEDNES^THURS^FRI^SATUR"",U,$E(DATE,6,7)+I#7+1)_""DAY"""
"RTN","SDECUTL1",258,0)
 X DOW
"RTN","SDECUTL1",259,0)
 Q RET
"RTN","SDECUTL2")
0^135^B135475615^n/a
"RTN","SDECUTL2",1,0)
SDECUTL2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECUTL2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECUTL2",3,0)
 ;
"RTN","SDECUTL2",4,0)
 Q
"RTN","SDECUTL2",5,0)
 ;
"RTN","SDECUTL2",6,0)
RESAB(SDAB,SDCL,SDBEG,SDEND,SDECRES)   ;build access blocks for 1 clinic
"RTN","SDECUTL2",7,0)
 ; SDECRES (optional) Resource pointer to SDEC RESOURCE file
"RTN","SDECUTL2",8,0)
 ;                    used to build access blocks from clinic availability
"RTN","SDECUTL2",9,0)
 ;                    for only this resource; all resources are build if null
"RTN","SDECUTL2",10,0)
 ;  .01    name
"RTN","SDECUTL2",11,0)
 ;    2    type (clinic)
"RTN","SDECUTL2",12,0)
 ;   1912  length of app't
"RTN","SDECUTL2",13,0)
 ;   1914  hour clinic display begins default is 8am; whole number 0-16
"RTN","SDECUTL2",14,0)
 ;   1917  display increments per hour
"RTN","SDECUTL2",15,0)
 ;   2505  inactive date
"RTN","SDECUTL2",16,0)
 ;   2506  reactivate date
"RTN","SDECUTL2",17,0)
 N SDAY,SDCLS,SDDATA,SDFIELDS,SDIN,SDLEN,SDRA,SDSI,SDT
"RTN","SDECUTL2",18,0)
 I $P($G(SDBEG),".",1)'?7N S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1)
"RTN","SDECUTL2",19,0)
 I $P($G(SDEND),".",1)'?7N S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),365)
"RTN","SDECUTL2",20,0)
 S SDECRES=$G(SDECRES) I SDECRES'="",'$D(^SDEC(409.831,+SDECRES,0)) S SDECRES=""
"RTN","SDECUTL2",21,0)
 S SDFIELDS=".01;2;1912;1914;1917;2505;2506"
"RTN","SDECUTL2",22,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDECUTL2",23,0)
 Q:SDDATA(44,SDCL_",",2,"I")'="C"   ;only clinic
"RTN","SDECUTL2",24,0)
 I $$INACTIVE(SDCL,.SDBEG,.SDEND,SDDATA(44,SDCL_",",2505,"I"),SDDATA(44,SDCL_",",2506,"I")) Q   ;only active
"RTN","SDECUTL2",25,0)
 S SDLEN=SDDATA(44,SDCL_",",1912,"I")  ;length of app't is required in file 44
"RTN","SDECUTL2",26,0)
 S SDCLS=SDDATA(44,SDCL_",",1914,"I")   ;hour clinic display begins
"RTN","SDECUTL2",27,0)
 S:SDCLS="" SDCLS=8
"RTN","SDECUTL2",28,0)
 S SDSI=SDDATA(44,SDCL_",",1917,"I")
"RTN","SDECUTL2",29,0)
 ;add to SDEC ACCESS BLOCK from AVAILABILITY in file 44
"RTN","SDECUTL2",30,0)
 I 0 S SDAY=$$FMADD^XLFDT(SDBEG,-1) F  S SDAY=$O(^SC(SDCL,"T",SDAY)) Q:SDAY'>0  Q:SDAY>SDEND  D
"RTN","SDECUTL2",31,0)
 .D RESABDAY(SDAB,SDCL,SDAY,SDLEN,SDCLS,+SDECRES)
"RTN","SDECUTL2",32,0)
 ;add to SDEC ACCESS BLOCK from day templates in file 44
"RTN","SDECUTL2",33,0)
 ;F SDT="T0","T1","T2","T3","T4","T5","T6" D
"RTN","SDECUTL2",34,0)
 D TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)
"RTN","SDECUTL2",35,0)
 Q
"RTN","SDECUTL2",36,0)
 ;
"RTN","SDECUTL2",37,0)
TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)   ;add/update access blocks for day template SDT
"RTN","SDECUTL2",38,0)
 ;SDBEG  = (optional) Start date in fileman format; defaults to 'today'
"RTN","SDECUTL2",39,0)
 ;SDEND = (optional) Stop date in fileman format; defaults to 365 days
"RTN","SDECUTL2",40,0)
 N SDAY,SDAY1,SDBLKS,SDE,SDE1,SDJ,SDPAT,SDPAT1,SDSIM
"RTN","SDECUTL2",41,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL2",42,0)
 Q:SDCL=""
"RTN","SDECUTL2",43,0)
 ;S SDT=$G(SDT)
"RTN","SDECUTL2",44,0)
 ;Q:SDT'?1"T"1N
"RTN","SDECUTL2",45,0)
 S SDLEN=$G(SDLEN)
"RTN","SDECUTL2",46,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDECUTL2",47,0)
 S SDCLS=$G(SDCLS)
"RTN","SDECUTL2",48,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDECUTL2",49,0)
 S SDSI=$G(SDSI)
"RTN","SDECUTL2",50,0)
 I SDSI="" S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;SDDATA(44,SDCL_",",1917,"I")
"RTN","SDECUTL2",51,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECUTL2",52,0)
 ;S STDAT=$O(^SC(SDCL,"T",0)) S:STDAT<1 STDAT=DT
"RTN","SDECUTL2",53,0)
 ;S SDBEG=$S(SDBEG'?7N:STDAT,SDBEG<STDAT:STDAT,1:SDBEG)
"RTN","SDECUTL2",54,0)
 ;S SDAY1=$$FMADD^XLFDT(SDBEG,-1)
"RTN","SDECUTL2",55,0)
 ;S SDEND=$G(SDEND) I SDEND="" S SDEND=SDBEG_".2359"
"RTN","SDECUTL2",56,0)
 ;
"RTN","SDECUTL2",57,0)
 ;SDBEG - SDEND
"RTN","SDECUTL2",58,0)
 ;F  S SDAY1=$$FMADD^XLFDT(SDAY1,1) Q:$P(SDAY1,".",1)>$P(SDEND,".",1)  D TDAY1
"RTN","SDECUTL2",59,0)
 D TDAY1
"RTN","SDECUTL2",60,0)
 Q
"RTN","SDECUTL2",61,0)
TDAY1 ;
"RTN","SDECUTL2",62,0)
 N D,SDA,SDTP,SS,ST,Y
"RTN","SDECUTL2",63,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDECUTL2",64,0)
 S SDTP=""
"RTN","SDECUTL2",65,0)
 I '$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S ST='$$ST(SDCL,SDBEG) Q:ST
"RTN","SDECUTL2",66,0)
 ;Q:'$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1))
"RTN","SDECUTL2",67,0)
 I $D(^SC(SDCL,"ST",$P(SDBEG,".",1),9)) S SDTP=$G(^SC(SDCL,"OST",$P(SDBEG,".",1),1)) S SDTP=$E(SDTP,SDA,$L(SDTP))
"RTN","SDECUTL2",68,0)
 E  D
"RTN","SDECUTL2",69,0)
 .S D=$$DOW^XLFDT($P(SDBEG,".",1),1)
"RTN","SDECUTL2",70,0)
 .S Y=D#7
"RTN","SDECUTL2",71,0)
 .S SS=$$FDT(SDCL,Y)
"RTN","SDECUTL2",72,0)
 .Q:SS=""
"RTN","SDECUTL2",73,0)
 .S SDTP=SS
"RTN","SDECUTL2",74,0)
 Q:SDTP=""
"RTN","SDECUTL2",75,0)
 K SDBLKS
"RTN","SDECUTL2",76,0)
 D GETBLKS^SDECUTL1(.SDBLKS,SDTP,$P(SDBEG,".",1),SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDECUTL2",77,0)
 D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,$P(SDBEG,".",1))
"RTN","SDECUTL2",78,0)
 K SDBLKS
"RTN","SDECUTL2",79,0)
 Q
"RTN","SDECUTL2",80,0)
 ;
"RTN","SDECUTL2",81,0)
 S SDPAT1=$E($P($T(DAY),U,$E(SDT,2)+2),1,2)
"RTN","SDECUTL2",82,0)
 S SDAY=$S(SDAY1'="":$$FMADD^XLFDT(SDAY1,-1),1:$P($$NOW^XLFDT,".",1))   ;$$FMADD^XLFDT(SDE,-1)
"RTN","SDECUTL2",83,0)
 S SDE1=$$FMADD^XLFDT(SDAY,1)   ;$S(SDEND'="":SDEND,1:$$FMADD^XLFDT(SDAY,365))   ;$S(SDAY1'="":SDAY1,1:$$FMADD^XLFDT(SDAY,365))
"RTN","SDECUTL2",84,0)
 F  S SDAY=$$FMADD^XLFDT($P($$SCH^XLFDT($E("UMTWRFS",$E(SDT,2)+1),SDAY),".",1),1) Q:SDAY'>0  Q:SDAY>SDE1  D
"RTN","SDECUTL2",85,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDAY)) Q   ;do not schedule on holidays
"RTN","SDECUTL2",86,0)
 .Q:$D(^SC(SDCL,"T",SDAY,2,1))  ;if AVAILABILITY defined, this day is already built
"RTN","SDECUTL2",87,0)
 .S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL2",88,0)
 .S SDPAT=SDPAT1_" "_$E(SDAY,6,7)_$J("",SDSIM+SDSIM-6)_SDTP
"RTN","SDECUTL2",89,0)
 .K SDBLKS
"RTN","SDECUTL2",90,0)
 .D GETBLKS^SDECUTL1(.SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDECUTL2",91,0)
 .D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,SDAY)
"RTN","SDECUTL2",92,0)
 .K SDBLKS
"RTN","SDECUTL2",93,0)
 Q
"RTN","SDECUTL2",94,0)
ST(SDCL,SDBEG) ;build ST
"RTN","SDECUTL2",95,0)
 ;RETURN - 0=not buildable or built as holiday ;1=buildable
"RTN","SDECUTL2",96,0)
 N D,SC,SDDT,SS,Y
"RTN","SDECUTL2",97,0)
 S SDDT=$P(SDBEG,".",1)
"RTN","SDECUTL2",98,0)
 S SC=SDCL
"RTN","SDECUTL2",99,0)
 S D=$$DOW^XLFDT(SDDT,1)
"RTN","SDECUTL2",100,0)
 S Y=D#7
"RTN","SDECUTL2",101,0)
 I $D(^HOLIDAY(SDDT))&($$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y") D H Q 0
"RTN","SDECUTL2",102,0)
 S SS=$$FDT(SDCL,Y)
"RTN","SDECUTL2",103,0)
 Q:+SS="" 0
"RTN","SDECUTL2",104,0)
 S ^SC(+SDCL,"ST",SDDT,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDDT,6,7)_$S(SDSI=3:"",SDSI=6:"      ",1:"  ")_SS,^SC(+SDCL,"ST",SDDT,0)=SDDT
"RTN","SDECUTL2",105,0)
 Q 1
"RTN","SDECUTL2",106,0)
FDT(SDCL,Y)  ;find day template pattern
"RTN","SDECUTL2",107,0)
 N SDE,SDTP
"RTN","SDECUTL2",108,0)
 S SDTP=""
"RTN","SDECUTL2",109,0)
 S SDE=$O(^SC(SDCL,"T"_Y,99999999),-1)
"RTN","SDECUTL2",110,0)
 Q:'SDE ""
"RTN","SDECUTL2",111,0)
 S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDECUTL2",112,0)
 Q:SDTP="" ""
"RTN","SDECUTL2",113,0)
 F  S SDE=$O(^SC(SDCL,"T"_Y,SDE),-1) Q:SDE'>0  Q:$P(SDBEG,".",1)'<SDE  S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDECUTL2",114,0)
 Q SDTP
"RTN","SDECUTL2",115,0)
H ;update ST as holiday
"RTN","SDECUTL2",116,0)
 S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^HOLIDAY(X,0),U,2),^SC(+SC,"ST",X,0)=X
"RTN","SDECUTL2",117,0)
 Q
"RTN","SDECUTL2",118,0)
 ;
"RTN","SDECUTL2",119,0)
RESABDAY(SDAB,SDCL,SDAY,SDLEN,SDCLS,SDECRES)  ;add/update access blocks for AVAILABILITY on a specific day
"RTN","SDECUTL2",120,0)
 ;INPUT:
"RTN","SDECUTL2",121,0)
 ; SDAB  - (required) global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUTL2",122,0)
 ; SDCL  - (required) clinic ID
"RTN","SDECUTL2",123,0)
 ; SDAY  - (required) date in fm format (no time)
"RTN","SDECUTL2",124,0)
 ; SDLEN - (optional) length of appointment
"RTN","SDECUTL2",125,0)
 ; SDCLS - (optional) hour schedule starts; default to 8
"RTN","SDECUTL2",126,0)
 ; SDECRES - (optional) pointer to SDEC RESOURCE file
"RTN","SDECUTL2",127,0)
 N SDBLKS
"RTN","SDECUTL2",128,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL2",129,0)
 Q:SDCL=""
"RTN","SDECUTL2",130,0)
 S SDECRES=$G(SDECRES)
"RTN","SDECUTL2",131,0)
 S SDAY=$G(SDAY)
"RTN","SDECUTL2",132,0)
 Q:SDAY'?7N
"RTN","SDECUTL2",133,0)
 S SDLEN=$G(SDLEN)
"RTN","SDECUTL2",134,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDECUTL2",135,0)
 S SDCLS=$G(SDCLS)
"RTN","SDECUTL2",136,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDECUTL2",137,0)
 D SDAY(.SDBLKS,SDCL,SDAY,SDLEN,SDCLS)
"RTN","SDECUTL2",138,0)
 I $D(SDBLKS) D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,SDAY,SDECRES)
"RTN","SDECUTL2",139,0)
 ;D CA^SDEC12(SDCL,SDAY)
"RTN","SDECUTL2",140,0)
 Q
"RTN","SDECUTL2",141,0)
 ;
"RTN","SDECUTL2",142,0)
SDAY(SDBLKS,SDCL,SDAY,SDLEN,SDCLS)   ;build blocks for the day
"RTN","SDECUTL2",143,0)
 ;INPUT:
"RTN","SDECUTL2",144,0)
 ; SDCL  - clinic pointer to HOSPITAL LOCATION file
"RTN","SDECUTL2",145,0)
 ; SDAY  - date (no time) in FM format
"RTN","SDECUTL2",146,0)
 ; SDLEN - length of appointment in minutes
"RTN","SDECUTL2",147,0)
 ; SDCLS - hour clinic display begins default is 8am; whole number 0-16
"RTN","SDECUTL2",148,0)
 N SDATAV,SDATUN,SDB1,SDBI,SDDH,SDEND,SDEND1,SDNOD2,SDSI,SDTIME
"RTN","SDECUTL2",149,0)
 N SDAV,SDCLS4
"RTN","SDECUTL2",150,0)
 N PSLOT,PTIME
"RTN","SDECUTL2",151,0)
 S:$G(SDCLS)="" SDCLS=8
"RTN","SDECUTL2",152,0)
 S SDCLS4=$S($L(SDCLS)=1:"0",1:"")_SDCLS_"00"
"RTN","SDECUTL2",153,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL2",154,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL2",155,0)
 S SDDH=$$GET1^DIQ(44,SDCL_",",1917,"E")   ;display increments per hour
"RTN","SDECUTL2",156,0)
 S SDDH=$E(SDDH,1,2)
"RTN","SDECUTL2",157,0)
 S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;display increments per hour (internal)
"RTN","SDECUTL2",158,0)
 S (PTIME,PSLOT,SDB1)=""
"RTN","SDECUTL2",159,0)
 S SDBI=0
"RTN","SDECUTL2",160,0)
 K SDBLKS
"RTN","SDECUTL2",161,0)
 S SDTIME=$O(^SC(SDCL,"T",SDAY,2,0))
"RTN","SDECUTL2",162,0)
 Q:SDTIME=""
"RTN","SDECUTL2",163,0)
 D SDAV(.SDAV,SDCL,SDAY,SDLEN,SDCLS,SDSI)
"RTN","SDECUTL2",164,0)
 S SDNOD2=$G(SDAV(2,SDTIME,0)) I $$COMPARE(SDCLS4,$P(SDNOD2,U,1))=2 D
"RTN","SDECUTL2",165,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDCLS4)_U_$$FM(SDAY_"."_$P(SDNOD2,U,1))_U_U_SDATUN
"RTN","SDECUTL2",166,0)
 S SDTIME=0 F  S SDTIME=$O(SDAV(2,SDTIME)) Q:SDTIME'>0  D
"RTN","SDECUTL2",167,0)
 .S SDNOD2=$G(SDAV(2,SDTIME,0))
"RTN","SDECUTL2",168,0)
 .S:SDB1="" SDB1=$P(SDNOD2,U,1)
"RTN","SDECUTL2",169,0)
 .I PTIME'="" D
"RTN","SDECUTL2",170,0)
 ..I (PSLOT'=$P(SDNOD2,U,2))!(($$ADD(PTIME,SDLEN)'=$P(SDNOD2,U,1))) D   ;new block
"RTN","SDECUTL2",171,0)
 ...S SDEND=$$ADD(PTIME,SDLEN) S SDEND=$S(SDEND<$P(SDNOD2,U,1):SDEND,1:$P(SDNOD2,U,1))  ;use the lesser of the 2
"RTN","SDECUTL2",172,0)
 ...S SDEND1=$S($E(SDEND,1,2)>23:"2359",1:SDEND)
"RTN","SDECUTL2",173,0)
 ...;S SDEND1=$S($E(SDEND,1,2)>23:"0000",1:SDEND)
"RTN","SDECUTL2",174,0)
 ...S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDB1)_U_$$FM(SDAY_"."_SDEND1)_U_PSLOT_U_SDATAV
"RTN","SDECUTL2",175,0)
 ...I SDEND'=$P(SDNOD2,U,1) D
"RTN","SDECUTL2",176,0)
 ....S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDEND)_U_$$FM(SDAY_"."_$P(SDNOD2,U,1))_U_0_U_SDATUN
"RTN","SDECUTL2",177,0)
 ...S SDB1=$P(SDNOD2,U,1)
"RTN","SDECUTL2",178,0)
 .S PTIME=$P(SDNOD2,U,1)
"RTN","SDECUTL2",179,0)
 .S PSLOT=$P(SDNOD2,U,2)
"RTN","SDECUTL2",180,0)
 I SDB1'="" D   ;setup last block
"RTN","SDECUTL2",181,0)
 .S SDEND=$$ADD(PTIME,$S(SDLEN>SDDH:SDLEN,1:SDDH))
"RTN","SDECUTL2",182,0)
 .S SDEND1=$S($E(SDEND,1,2)>23:"2359",1:SDEND)
"RTN","SDECUTL2",183,0)
 .;S SDEND1=$S($E(SDEND,1,2)>23:"0000",1:SDEND)
"RTN","SDECUTL2",184,0)
 .I $E(SDEND,1,2)>23 S SDEND="2359"
"RTN","SDECUTL2",185,0)
 .;I $E(SDEND,1,2)>23 S SDEND="0000"
"RTN","SDECUTL2",186,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDB1)_U_$$FM(SDAY_"."_SDEND)_U_PSLOT_U_SDATAV
"RTN","SDECUTL2",187,0)
 I PTIME<1800 D
"RTN","SDECUTL2",188,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDEND)_U_$$FM(SDAY_".1800")_U_0_U_SDATUN
"RTN","SDECUTL2",189,0)
 K SDAV
"RTN","SDECUTL2",190,0)
 Q
"RTN","SDECUTL2",191,0)
 ;
"RTN","SDECUTL2",192,0)
COMPARE(T1,T2)   ;compare time
"RTN","SDECUTL2",193,0)
 ;RETURN:
"RTN","SDECUTL2",194,0)
 ;  0 = same
"RTN","SDECUTL2",195,0)
 ;  1 = T1 is greater than
"RTN","SDECUTL2",196,0)
 ;  2 = T1 is less than
"RTN","SDECUTL2",197,0)
 N T1M,T2M
"RTN","SDECUTL2",198,0)
 S T1M=+T1,T2M=+T2
"RTN","SDECUTL2",199,0)
 Q:T1M=T2M 0
"RTN","SDECUTL2",200,0)
 Q:T1M>T2M 1
"RTN","SDECUTL2",201,0)
 Q:T1M<T2M 2
"RTN","SDECUTL2",202,0)
 Q -1   ;sanity check should not happen
"RTN","SDECUTL2",203,0)
 ;
"RTN","SDECUTL2",204,0)
ADD(HM,M)  ;add minutes M to HourMinute HM and return with 4 digit military time
"RTN","SDECUTL2",205,0)
 N H1,M1
"RTN","SDECUTL2",206,0)
 S H1=$E(HM,1,2)
"RTN","SDECUTL2",207,0)
 S M1=$E(HM,3,4)
"RTN","SDECUTL2",208,0)
 S M1=M1+M
"RTN","SDECUTL2",209,0)
AGAIN  I M1>59 S M1=M1-60,H1=H1+1 G:M1>59 AGAIN
"RTN","SDECUTL2",210,0)
 I $L(H1)=1 S H1="0"_H1
"RTN","SDECUTL2",211,0)
 I $L(M1)=1 S M1="0"_M1
"RTN","SDECUTL2",212,0)
 Q H1_M1
"RTN","SDECUTL2",213,0)
 ;
"RTN","SDECUTL2",214,0)
FM(SDDATE)  ;use to strip zeros off of the end of the time
"RTN","SDECUTL2",215,0)
 N %DT,X,Y
"RTN","SDECUTL2",216,0)
 S %DT="DT",X=SDDATE D ^%DT
"RTN","SDECUTL2",217,0)
 Q Y
"RTN","SDECUTL2",218,0)
 ;
"RTN","SDECUTL2",219,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUTL2",220,0)
 ;
"RTN","SDECUTL2",221,0)
SDB(SDEC)  ;add/update access blocks after clinic modifications using SDBUILD in routine SDB
"RTN","SDECUTL2",222,0)
 ; SDEC = array of modified days or day templates
"RTN","SDECUTL2",223,0)
 ;         SDEC(<clinic ID>,<day/template>)=""
"RTN","SDECUTL2",224,0)
 ;              day      = date in FM format
"RTN","SDECUTL2",225,0)
 ;              template = T#
"RTN","SDECUTL2",226,0)
 N %,SDCL,SDCLN,SDT
"RTN","SDECUTL2",227,0)
 S SDCL="" F  S SDCL=$O(SDEC(SDCL)) Q:SDCL=""  D
"RTN","SDECUTL2",228,0)
 .D SDRES(SDCL)
"RTN","SDECUTL2",229,0)
 .S SDT="" F  S SDT=$O(SDEC(SDCL,SDT)) Q:SDT=""  D
"RTN","SDECUTL2",230,0)
 ..I $E(SDT,1)="T" D TDAY(SDCL,SDT)
"RTN","SDECUTL2",231,0)
 ..I SDT?7N D RESABDAY(SDCL,SDT)
"RTN","SDECUTL2",232,0)
 K SDEC
"RTN","SDECUTL2",233,0)
 Q
"RTN","SDECUTL2",234,0)
 ;
"RTN","SDECUTL2",235,0)
SDRES(SDCL)  ;add clinic resource
"RTN","SDECUTL2",236,0)
 N SDDATA,SDDI,SDFDA,SDFOUND,SDI,SDNOD,SDRT
"RTN","SDECUTL2",237,0)
 S SDFOUND=0
"RTN","SDECUTL2",238,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI=""  D  Q:SDFOUND=1
"RTN","SDECUTL2",239,0)
 .S SDNOD=$G(^SDEC(409.831,SDI,0))
"RTN","SDECUTL2",240,0)
 .S SDRT=$P(SDNOD,U,11)
"RTN","SDECUTL2",241,0)
 .I $P(SDRT,";",2)="SC(",$P(SDRT,";",1)=SDCL S SDFOUND=1
"RTN","SDECUTL2",242,0)
 Q:SDFOUND=1
"RTN","SDECUTL2",243,0)
 S SDFIELDS=".01;1917"
"RTN","SDECUTL2",244,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA")
"RTN","SDECUTL2",245,0)
 S SDFDA(409.831,"+1,",.01)=SDDATA(44,SDCL_",",.01,"E")
"RTN","SDECUTL2",246,0)
 S SDDI=SDDATA(44,SDCL_",",1917,"E") S SDFDA(409.831,"+1,",.03)=$E(SDDI,1,2)
"RTN","SDECUTL2",247,0)
 S SDFDA(409.831,"+1,",.04)=SDCL
"RTN","SDECUTL2",248,0)
 S SDFDA(409.831,"+1,",.012)=SDCL_";SC("
"RTN","SDECUTL2",249,0)
 S SDFDA(409.831,"+1,",.015)=$E($$NOW^XLFDT,1,12)
"RTN","SDECUTL2",250,0)
 S SDFDA(409.831,"+1,",.016)=DUZ
"RTN","SDECUTL2",251,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",252,0)
 Q
"RTN","SDECUTL2",253,0)
 ;
"RTN","SDECUTL2",254,0)
INACTIVE(SDCL,SDBEG,SDEND,IDATE,RDATE)  ;
"RTN","SDECUTL2",255,0)
 ;INPUT:
"RTN","SDECUTL2",256,0)
 ;  SDCL  - clinic ID
"RTN","SDECUTL2",257,0)
 ; .SDBEG - begin date in FM format, no time
"RTN","SDECUTL2",258,0)
 ; .SDEND - end date in FM format, no time
"RTN","SDECUTL2",259,0)
 ;  IDATE - clinic's inactivation date
"RTN","SDECUTL2",260,0)
 ;  RDATE - clinic's reactivation date
"RTN","SDECUTL2",261,0)
 ;RETURN:
"RTN","SDECUTL2",262,0)
 ; 0=Clinic is active
"RTN","SDECUTL2",263,0)
 ; 1=Clinic is inactive
"RTN","SDECUTL2",264,0)
 ; active  0 0
"RTN","SDECUTL2",265,0)
 I IDATE="" Q 0
"RTN","SDECUTL2",266,0)
 ;  active but inactivated in future
"RTN","SDECUTL2",267,0)
 I IDATE>SDBEG S SDEND=IDATE Q 0
"RTN","SDECUTL2",268,0)
 ; inactive 1 0
"RTN","SDECUTL2",269,0)
 I IDATE<=SDBEG,RDATE="" Q 1
"RTN","SDECUTL2",270,0)
 ; inactive 1 1 inactive but reactivated
"RTN","SDECUTL2",271,0)
 ;  inactive now reactive now
"RTN","SDECUTL2",272,0)
 I IDATE<=SDBEG,RDATE<=SDBEG Q 0
"RTN","SDECUTL2",273,0)
 ;  inactive now reactive future
"RTN","SDECUTL2",274,0)
 I IDATE<=SDBEG,RDATE>IDATE S SDBEG=RDATE Q 0
"RTN","SDECUTL2",275,0)
 Q 1
"RTN","SDECUTL2",276,0)
 ;
"RTN","SDECUTL2",277,0)
DEL ;
"RTN","SDECUTL2",278,0)
 N H
"RTN","SDECUTL2",279,0)
 S H=0 F  S H=$O(^SDEC(409.821,H)) Q:H'>0  W !,H,"   ",$G(^SDEC(409.821,H,0)) S SDFDA(409.821,H_",",.01)="@" D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",280,0)
 K ^SDEC(409.821,"ARSCT")
"RTN","SDECUTL2",281,0)
 Q
"RTN","SDECUTL2",282,0)
DEL1 ;
"RTN","SDECUTL2",283,0)
 N H
"RTN","SDECUTL2",284,0)
 S H=0 F  S H=$O(^SDEC(409.821,H)) Q:H'>0  S SDFDA(409.821,H_",",.01)="@" D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",285,0)
 K ^SDEC(409.821,"ARSCT")
"RTN","SDECUTL2",286,0)
 Q
"RTN","SDECUTL2",287,0)
 ;
"RTN","SDECUTL2",288,0)
ARRAY(DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI)  ;build date/time array from pattern
"RTN","SDECUTL2",289,0)
 ; .DTARRAY   - Array of cancelled date/times
"RTN","SDECUTL2",290,0)
 ;             CARRAY(FMDATE,TIME)=<slots>
"RTN","SDECUTL2",291,0)
 ;  SDPAT - (required) pattern
"RTN","SDECUTL2",292,0)
 ;  SDAY  - (required) date in FM format (no time)
"RTN","SDECUTL2",293,0)
 ;  SDLEN - (required) length of appointment
"RTN","SDECUTL2",294,0)
 ;  SDCLS - (required) hour schedule starts; default to 8
"RTN","SDECUTL2",295,0)
 ;  SDSI  - (required) display increments per hour
"RTN","SDECUTL2",296,0)
 N SDA,SDI,SDSIM
"RTN","SDECUTL2",297,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDECUTL2",298,0)
 ;          $S(X="":4,X<3:4,X:X,1:4)
"RTN","SDECUTL2",299,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDECUTL2",300,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL2",301,0)
 S:$E(SDPAT)?1A SDPAT=$E(SDPAT,SDA,$L(SDPAT))
"RTN","SDECUTL2",302,0)
 K SDBLKS
"RTN","SDECUTL2",303,0)
 ;1 2 3 4 OR 6
"RTN","SDECUTL2",304,0)
 D @SDSI
"RTN","SDECUTL2",305,0)
 Q
"RTN","SDECUTL2",306,0)
1  ;1 increments per hour (60 min)
"RTN","SDECUTL2",307,0)
 N BSTART,CNT,HOUR,SDI
"RTN","SDECUTL2",308,0)
 S BSTART=""
"RTN","SDECUTL2",309,0)
 S SDI=0
"RTN","SDECUTL2",310,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",311,0)
 F CNT=2:8 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",312,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",313,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL2",314,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$E(SDPAT,CNT)
"RTN","SDECUTL2",315,0)
 Q
"RTN","SDECUTL2",316,0)
2  ;2 increments per hour (30 min)
"RTN","SDECUTL2",317,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",318,0)
 S BSTART=""
"RTN","SDECUTL2",319,0)
 S SDI=0
"RTN","SDECUTL2",320,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",321,0)
 F CNT=2:4 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",322,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",323,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:30,1:"00")
"RTN","SDECUTL2",324,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$E(SDPAT,CNT)
"RTN","SDECUTL2",325,0)
 Q
"RTN","SDECUTL2",326,0)
3  ;3 increments per hour (20 min)
"RTN","SDECUTL2",327,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",328,0)
 S BSTART=""
"RTN","SDECUTL2",329,0)
 S SDI=0
"RTN","SDECUTL2",330,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",331,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",332,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",333,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:20,(CNT#6)=0:40,1:"00")
"RTN","SDECUTL2",334,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$E(SDPAT,CNT)
"RTN","SDECUTL2",335,0)
 Q
"RTN","SDECUTL2",336,0)
4  ;4 increments per hour (15 min)
"RTN","SDECUTL2",337,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",338,0)
 S BSTART=""
"RTN","SDECUTL2",339,0)
 S SDI=0
"RTN","SDECUTL2",340,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",341,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",342,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",343,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:30,(CNT#8)=0:45,1:"00")
"RTN","SDECUTL2",344,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$E(SDPAT,CNT)
"RTN","SDECUTL2",345,0)
 Q
"RTN","SDECUTL2",346,0)
6  ;6 increments per hour (10 min)
"RTN","SDECUTL2",347,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",348,0)
 S BSTART=""
"RTN","SDECUTL2",349,0)
 S SDI=0
"RTN","SDECUTL2",350,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",351,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",352,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",353,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:10,(CNT#12)=6:20,(CNT#12)=8:30,(CNT#12)=10:40,(CNT#12)=0:5,1:"00")
"RTN","SDECUTL2",354,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$E(SDPAT,CNT)
"RTN","SDECUTL2",355,0)
 Q
"RTN","SDECUTL2",356,0)
SDAV(SDAV,SDCL,SDAY,SDLEN,SDCLS,SDSI)  ;build modified availability array from AVAILABILITY in 44
"RTN","SDECUTL2",357,0)
 N DTARRAY
"RTN","SDECUTL2",358,0)
 N SDCAN,SDI,SDPAT,SDTIME
"RTN","SDECUTL2",359,0)
 K SDAV
"RTN","SDECUTL2",360,0)
 M SDAV=^SC(SDCL,"T",SDAY)
"RTN","SDECUTL2",361,0)
 S SDPAT=$G(^SC(SDCL,"ST",SDAY,1))   ;get PATTERN from file 44
"RTN","SDECUTL2",362,0)
 Q:SDPAT=""
"RTN","SDECUTL2",363,0)
 D ARRAY(.DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI)  ;convert pattern to array
"RTN","SDECUTL2",364,0)
 S SDTIME=0 F  S SDTIME=$O(SDAV(2,SDTIME)) Q:SDTIME'>0  D
"RTN","SDECUTL2",365,0)
 .S SDNOD2=$G(SDAV(2,SDTIME,0))
"RTN","SDECUTL2",366,0)
 .I $G(DTARRAY(SDAY,$P(SDNOD2,U,1)))="X" D
"RTN","SDECUTL2",367,0)
 ..K SDAV(2,SDTIME,0)
"RTN","SDECUTL2",368,0)
 Q
"RTN","SDECV")
0^102^B107508145^n/a
"RTN","SDECV",1,0)
SDECV ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECV",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECV",3,0)
 ;
"RTN","SDECV",4,0)
 Q
"RTN","SDECV",5,0)
 ;
"RTN","SDECV",6,0)
CHKIN(BSDEVT,BSDCLN,BSDDT,APTN,DFN,BSDVSTN) ;EP; -- ask visit related check-in questions
"RTN","SDECV",7,0)
 ; called by Scheduling Event driver
"RTN","SDECV",8,0)
 ; user interface for 2 questions (clinic code and provider)
"RTN","SDECV",9,0)
 ; Input variables:
"RTN","SDECV",10,0)
 ;      BSDEVT = type of event (4=checkin)
"RTN","SDECV",11,0)
 ;      BSDCLN = clinic ien
"RTN","SDECV",12,0)
 ;      BSDDT  = appt date/time
"RTN","SDECV",13,0)
 ;      APTN   = ien for appt under date multiple
"RTN","SDECV",14,0)
 ;      DFN    = patient ien
"RTN","SDECV",15,0)
 Q:$G(BSDEVT)'=4  ;quit if not a checkin
"RTN","SDECV",16,0)
 Q:'$G(DFN)  Q:'$G(BSDCLN)  Q:'$G(BSDDT)  Q:'$G(APTN)
"RTN","SDECV",17,0)
 ;I $$GET1^DIQ(9009017.2,+BSDCLN,.09)'="YES" Q  ;don't create visit
"RTN","SDECV",18,0)
 ; if patient already checked in, use VDATE code
"RTN","SDECV",19,0)
 ;I $P(SDATA("BEFORE","STATUS"),U,4)]"" D  Q
"RTN","SDECV",20,0)
 ;. N BSDMSG
"RTN","SDECV",21,0)
 ;. D VDATE(BSDEVT,BSDCLN,BSDDT,APTN,DFN,$P(SDATA("BEFORE","STATUS"),U,4),.BSDMSG)
"RTN","SDECV",22,0)
 ;. D VSTUPD(BSDCLN,BSDDT,APTN,DFN,.BSDMSG)
"RTN","SDECV",23,0)
 ;. ;
"RTN","SDECV",24,0)
 ;. ; display any messages (error messages in reverse video)
"RTN","SDECV",25,0)
 ;. I $D(BSDMSG) D
"RTN","SDECV",26,0)
 ;.. NEW I F I=1:1 Q:'$D(BSDMSG(I))  D
"RTN","SDECV",27,0)
 ;... I $P(BSDMSG(I),U)>0,$G(IORVON) D MSG(IORVON_$P(BSDMSG(I),U,2)_IORVOFF,1,0),PAUSE^SDECU Q
"RTN","SDECV",28,0)
 ;... D MSG($P(BSDMSG(I),U,2),1,0)
"RTN","SDECV",29,0)
 Q:'$G(^SC(+BSDCLN,"S",BSDDT,1,APTN,"C"))  ;not checked-in
"RTN","SDECV",30,0)
 N BSDCC,BSDVP,BSDMSG
"RTN","SDECV",31,0)
 S BSDCC=$$CLNCODE(BSDCLN)        ;ask clinic code
"RTN","SDECV",32,0)
 S BSDVP=$$PROV(BSDCLN)           ;ask visit provider
"RTN","SDECV",33,0)
 ; call to new API - GETVISIT^SDECAPI4
"RTN","SDECV",34,0)
 NEW BSDVAR,BSDOUT
"RTN","SDECV",35,0)
 S BSDVAR("NEVER ADD")=1              ;first time through just check for matches
"RTN","SDECV",36,0)
 D SETVAR                             ;set basic variables for API call
"RTN","SDECV",37,0)
 D GETVISIT^SDECAPI4(.BSDVAR,.BSDOUT)   ;call new API
"RTN","SDECV",38,0)
 K BSDVAR
"RTN","SDECV",39,0)
 I BSDOUT(0)=1 S BSDVSTN=$O(BSDOUT(0))         ;if match found, set visit IEN
"RTN","SDECV",40,0)
 D VISIT(BSDCLN,BSDDT,APTN,DFN,BSDCC,BSDVP,.BSDMSG)   ;create visit call
"RTN","SDECV",41,0)
 I $D(BSDMSG) D
"RTN","SDECV",42,0)
 . NEW I F I=1:1 Q:'$D(BSDMSG(I))  D MSG($P(BSDMSG(I),U,2),1,0)
"RTN","SDECV",43,0)
 . D PAUSE^SDECU
"RTN","SDECV",44,0)
 Q
"RTN","SDECV",45,0)
 ;
"RTN","SDECV",46,0)
VISIT(BSDCLN,BSDDT,APTN,DFN,BSDCC,BSDPROV,BSDOPT,BSDMSG,BSDVSTN,SDECC) ;EP; -- create visit
"RTN","SDECV",47,0)
 ;
"RTN","SDECV",48,0)
 ; called by CHKIN subroutine above and by applications where
"RTN","SDECV",49,0)
 ; all data is already known
"RTN","SDECV",50,0)
 ; silent update to database; no user interface
"RTN","SDECV",51,0)
 ; Input variables:
"RTN","SDECV",52,0)
 ;      BSDCLN  = clinic ien
"RTN","SDECV",53,0)
 ;      BSDDT   = appt date/time
"RTN","SDECV",54,0)
 ;      APTN    = ien for appt under date multiple
"RTN","SDECV",55,0)
 ;      DFN     = patient ien
"RTN","SDECV",56,0)
 ;      BSDCC   = clinic code ien
"RTN","SDECV",57,0)
 ;      BSDPROV = visit provider ien
"RTN","SDECV",58,0)
 ;      BSDOPT  = option used to create visit (optional)
"RTN","SDECV",59,0)
 ;      BSDMSG  = called by reference, upon exit contains user msgs
"RTN","SDECV",60,0)
 ;                first piece is error code; 2nd piece is message
"RTN","SDECV",61,0)
 ;                Error = 0 (no problems)
"RTN","SDECV",62,0)
 ;                        1 (problem setting visit variables)
"RTN","SDECV",63,0)
 ;                        2 (problem creating visit)
"RTN","SDECV",64,0)
 ;                        3 (problem changing visit date/time)
"RTN","SDECV",65,0)
 Q:'$G(BSDCLN)  Q:'$G(BSDDT)  Q:'$G(APTN)  Q:'$G(DFN)
"RTN","SDECV",66,0)
 Q:'$G(BSDCC)
"RTN","SDECV",67,0)
 Q:'$G(^SC(+BSDCLN,"S",BSDDT,1,APTN,"C"))  ;not checked-in
"RTN","SDECV",68,0)
 I $G(BSDVSTN) D PROVUPD,HOSLUPD Q   ;if have visit already, update providers & clinic then quit
"RTN","SDECV",69,0)
 ; else create visit, add provider and create VCN
"RTN","SDECV",70,0)
 N BSDVAR,BSDR,BSDRET
"RTN","SDECV",71,0)
 D SETVAR
"RTN","SDECV",72,0)
 S BSDVAR("APCDAPPT")=$S($P(^DPT(DFN,"S",BSDDT,0),U,7)=3:"A",$P(^DPT(DFN,"S",BSDDT,0),U,7)=4:"W",1:"U")    ;walk-in vs appt
"RTN","SDECV",73,0)
 I "CT"[BSDVAR("SRV CAT") K BSDVAR("APCDAPPT")  ; not needed for phone calls & cr
"RTN","SDECV",74,0)
 I $G(BSDOPT)]"" S BSDVAR("APCDOPT")=$O(^DIC(19,"B",BSDOPT,0))  ;option used
"RTN","SDECV",75,0)
 E  S BSDVAR("APCDOPT")=$O(^DIC(19,"B","SDAM APPT MGT",0))
"RTN","SDECV",76,0)
 S BSDVAR("SHOW VISITS")=1  ; variable to show visits to link to
"RTN","SDECV",77,0)
 S BSDVAR("CALLER")="SDEC CHECKIN"  ; add variable that shows who the caller is for API
"RTN","SDECV",78,0)
 K BSDR("VIEN")  ; hangs around after a multiple visit
"RTN","SDECV",79,0)
 S BSDVAR("ADT")=$G(SDECC("ADT"))
"RTN","SDECV",80,0)
 S BSDVAR("CDT")=$G(SDECC("CDT"))
"RTN","SDECV",81,0)
 S BSDVAR("CLN")=$G(SDECC("CLN"))
"RTN","SDECV",82,0)
 S BSDVAR("PROVIDER")=$G(SDECC("PROVIDER"))
"RTN","SDECV",83,0)
 S BSDVAR("VISIT TYPE")=$G(SDECC("VISIT TYPE"))
"RTN","SDECV",84,0)
 D GETVISIT^SDECAPI4(.BSDVAR,.BSDRET)
"RTN","SDECV",85,0)
 I BSDRET(0)>1 D
"RTN","SDECV",86,0)
 . ;D SELECT^BSDAPI5(.BSDVAR,.BSDRET)
"RTN","SDECV",87,0)
 I '$G(BSDR("VIEN")) D
"RTN","SDECV",88,0)
 . S BSDVAR("FORCE ADD")=1
"RTN","SDECV",89,0)
 . D GETVISIT^SDECAPI4(.BSDVAR,.BSDRET)
"RTN","SDECV",90,0)
 D MSGADD(0,"Visit Attached/Created.")
"RTN","SDECV",91,0)
 S BSDVSTN=$O(BSDRET(0))
"RTN","SDECV",92,0)
 I '$G(BSDVSTN) S MAW="S $ZE=""BSDV NO VISIT CREATED"" D ^ZTER" X MAW K MAW Q  ; quit if no visit
"RTN","SDECV",93,0)
 I $G(BSDR("VIEN")) S BSDVSTN=BSDR("VIEN")  ; set to selected visit var
"RTN","SDECV",94,0)
 ; -- add provider to visit
"RTN","SDECV",95,0)
 I $G(BSDPROV),'$$PP(BSDVSTN,BSDPROV),$P($G(^AUPNVSIT(BSDVSTN,0)),U,5)=DFN D  ;make sure visit patient and dfn are same before adding provider
"RTN","SDECV",96,0)
 . K SDEC
"RTN","SDECV",97,0)
 . S SDEC("PRO")=BSDPROV
"RTN","SDECV",98,0)
 . S SDEC("PAT")=DFN
"RTN","SDECV",99,0)
 . S SDEC("VST")=BSDVSTN
"RTN","SDECV",100,0)
 . S SDEC("TMP")="[SDECALVR 9000010.06 (ADD)]"
"RTN","SDECV",101,0)
 . S SDEC("TPS")="P"
"RTN","SDECV",102,0)
 . S SDEC("TOA")=""
"RTN","SDECV",103,0)
 . S SDEC("CDT")=$G(BSDVAR("CDT"))
"RTN","SDECV",104,0)
 . D VPROV^SDECALVR(.SDEC)
"RTN","SDECV",105,0)
 . D MSGADD(0,"Provider added to visit.")
"RTN","SDECV",106,0)
 ;DO NOT KILL BSDVSTN, BSDVCN OR BSDOPT; KILLED AT END OF EVT DRIVER
"RTN","SDECV",107,0)
VSTEND D EN1^SDECEKL,EN2^SDECEKL K SDECALVR,X
"RTN","SDECV",108,0)
 Q
"RTN","SDECV",109,0)
 ;
"RTN","SDECV",110,0)
PP(VSTN,PROV) ;
"RTN","SDECV",111,0)
 N FOUND,IEN,PRIM,PRV
"RTN","SDECV",112,0)
 S (IEN,FOUND,PRIM)=0
"RTN","SDECV",113,0)
 I '$G(VSTN) Q FOUND
"RTN","SDECV",114,0)
 F  S IEN=$O(^AUPNVPRV("AD",VSTN,IEN)) Q:'IEN  D
"RTN","SDECV",115,0)
 . I $P($G(^AUPNVPRV(IEN,0)),U)=PROV S FOUND=1   ;provider on visit
"RTN","SDECV",116,0)
 . I $$GET1^DIQ(9000010.06,IEN,.04)="PRIMARY" S FOUND=1  ;do not allow multiple primary providers
"RTN","SDECV",117,0)
 I $G(FOUND) S MAW="S $ZE=""BSDV MULT PRIM PROV PROBLEM"" D ^ZTER" X MAW K MAW
"RTN","SDECV",118,0)
 Q $G(FOUND)           ;PRIMARY already on visit
"RTN","SDECV",119,0)
 ;
"RTN","SDECV",120,0)
VDATE(BSDEVT,BSDCLN,BSDDT,APTN,DFN,BSDCKO,BSDMSG) ;EP
"RTN","SDECV",121,0)
 ;if new time entered, update visit
"RTN","SDECV",122,0)
 ; called by Scheduling Event Driver; use if check-in time was changed
"RTN","SDECV",123,0)
 ; silent update to database; no user interface
"RTN","SDECV",124,0)
 ; Input variables:
"RTN","SDECV",125,0)
 ;    BSDEVT    =  type of event (4=checkin)
"RTN","SDECV",126,0)
 ;    BSDCLN    =  clinic ien
"RTN","SDECV",127,0)
 ;    BSDDT     =  appt date & time
"RTN","SDECV",128,0)
 ;    APTN      =  ien for appt under date multiple
"RTN","SDECV",129,0)
 ;    DFN       =  Patient ien
"RTN","SDECV",130,0)
 ;    BSDCKO    =  old check-in date/time
"RTN","SDECV",131,0)
 ;    BSDMSG    =  called by reference, upon exit contains user msgs
"RTN","SDECV",132,0)
 ;
"RTN","SDECV",133,0)
 Q:$G(BSDEVT)'=4   ;quit if not a checkin
"RTN","SDECV",134,0)
 ;I $$GET1^DIQ(9009017.2,+BSDCLN,.09)'="YES" Q  ;don't create visit
"RTN","SDECV",135,0)
 N APCDVSIT,BSDCK
"RTN","SDECV",136,0)
 ; find visit based on old check-in time
"RTN","SDECV",137,0)
 S APCDVSIT=$O(^AUPNVSIT("AA",DFN,$$RDT(BSDCKO),0)) Q:'APCDVSIT
"RTN","SDECV",138,0)
 I $O(^AUPNVSIT("AA",DFN,$$RDT(BSDCKO),APCDVSIT)) D MSGADD(4,"More than 1 visit for date/time; visit must be updated manually.") Q
"RTN","SDECV",139,0)
 ; get new check-in time
"RTN","SDECV",140,0)
 S BSDCK=$G(^SC(BSDCLN,"S",BSDDT,1,APTN,"C")) Q:BSDCK=BSDCKO
"RTN","SDECV",141,0)
 Q
"RTN","SDECV",142,0)
 ;
"RTN","SDECV",143,0)
RDT(X) ; -- reverse date
"RTN","SDECV",144,0)
 Q 9999999-$P(X,".")_"."_$P(X,".",2)
"RTN","SDECV",145,0)
 ;
"RTN","SDECV",146,0)
CLNCODE(CLINIC) ; -- asks user for clinic code
"RTN","SDECV",147,0)
 N Y,DIR,CODE
"RTN","SDECV",148,0)
 F  Q:$G(Y)>0  D
"RTN","SDECV",149,0)
 . S DIR(0)="P^40.7:EMZQ",DIR("A")="CLINIC CODE for VISIT"
"RTN","SDECV",150,0)
 . S CODE=$$GET1^DIQ(40.7,+$$GET1^DIQ(44,CLINIC,8,"I"),1)  ;code #
"RTN","SDECV",151,0)
 . ;do not set default if multiple clinic codes used in clinic
"RTN","SDECV",152,0)
 . ;I CODE,$$GET1^DIQ(9009017.2,CLINIC,.13)'="YES" S DIR("B")=CODE
"RTN","SDECV",153,0)
 . I CODE]"",$$GET1^DIQ(9009017.2,CLINIC,.13)'="YES" S DIR("B")=CODE
"RTN","SDECV",154,0)
 . S DIR("?")="This is required.  Please try again"
"RTN","SDECV",155,0)
 . D ^DIR
"RTN","SDECV",156,0)
 Q +Y
"RTN","SDECV",157,0)
 ;
"RTN","SDECV",158,0)
PROV(CLINIC) ; - asks user for visit provider
"RTN","SDECV",159,0)
 N DIC,X,Y
"RTN","SDECV",160,0)
 F  Q:($G(Y)>0)  D
"RTN","SDECV",161,0)
 . S DIC=200,DIC(0)="AMEQZ",DIC("A")="VISIT PROVIDER:  "
"RTN","SDECV",162,0)
 . S DIC("B")=$$GET1^DIQ(200,+$$PRV^SDECU(CLINIC),.01)
"RTN","SDECV",163,0)
 . I DIC("B")="" K DIC("B")
"RTN","SDECV",164,0)
 . S DIC("S")="I $D(^XUSEC(""PROVIDER"",+Y))"
"RTN","SDECV",165,0)
 . D ^DIC K DIC
"RTN","SDECV",166,0)
 . I Y<1,$$GET1^DIQ(9009017.2,CLINIC,.14)'="YES" S Y="1^QUIT" Q
"RTN","SDECV",167,0)
 . I Y<1 D MSG("This is required.  Please try again.",1,0)
"RTN","SDECV",168,0)
 I $P(Y,U,2)="QUIT" Q 0
"RTN","SDECV",169,0)
 Q $$PRVIEN(+Y)
"RTN","SDECV",170,0)
 ;
"RTN","SDECV",171,0)
PRVIEN(Y) ; -- determines correct provider file to use
"RTN","SDECV",172,0)
 I $P(^DD(9000010.06,.01,0),U,2)["200" Q +Y
"RTN","SDECV",173,0)
 Q $P(^VA(200,+Y,0),U,16)
"RTN","SDECV",174,0)
 ;
"RTN","SDECV",175,0)
 ;
"RTN","SDECV",176,0)
MSGADD(ERROR,STRING) ; -- put message string into array
"RTN","SDECV",177,0)
 N I
"RTN","SDECV",178,0)
 S I=$O(BSDMSG(""),-1)+1   ;get next subscript
"RTN","SDECV",179,0)
 S BSDMSG(I)=ERROR_U_STRING
"RTN","SDECV",180,0)
 Q
"RTN","SDECV",181,0)
 ;
"RTN","SDECV",182,0)
MSG(DATA,PRE,POST) ; -- writes line to device
"RTN","SDECV",183,0)
 N I,FORMAT
"RTN","SDECV",184,0)
 S FORMAT="" I PRE>0 F I=1:1:PRE S FORMAT=FORMAT_"!"
"RTN","SDECV",185,0)
 D EN^DDIOL(DATA,"",FORMAT)
"RTN","SDECV",186,0)
 I POST>0 F I=1:1:POST D EN^DDIOL("","","!")
"RTN","SDECV",187,0)
 Q
"RTN","SDECV",188,0)
 ;
"RTN","SDECV",189,0)
FAC(CLINIC) ; -- return facility location ien for clinic
"RTN","SDECV",190,0)
 ; try institution field in file 44, then institution based on division
"RTN","SDECV",191,0)
 ; then try user's division and make sure it is a PCC site
"RTN","SDECV",192,0)
 N FAC
"RTN","SDECV",193,0)
 S FAC=$$GET1^DIQ(44,CLINIC,3,"I")
"RTN","SDECV",194,0)
 I 'FAC S FAC=$$GET1^DIQ(40.8,+$$GET1^DIQ(44,BSDCLN,3.5,"I"),.07,"I")
"RTN","SDECV",195,0)
 I 'FAC S FAC=$G(DUZ(2))
"RTN","SDECV",196,0)
 ;I '$D(^APCDSITE(+FAC)) S FAC=0
"RTN","SDECV",197,0)
 Q FAC
"RTN","SDECV",198,0)
 ;
"RTN","SDECV",199,0)
SERCAT(CLINIC,PAT) ;EP; -- returns service category for visit
"RTN","SDECV",200,0)
 NEW CLNCAT
"RTN","SDECV",201,0)
 I $G(^DPT(PAT,.1))]"" Q "I"                       ;in hospital if inpt
"RTN","SDECV",202,0)
 S CLNCAT=$$GET1^DIQ(9009017.2,CLINIC,.12,"I")     ;clinic's service category
"RTN","SDECV",203,0)
 Q $S(CLNCAT]"":CLNCAT,1:"A")
"RTN","SDECV",204,0)
 ;
"RTN","SDECV",205,0)
VSTUPD(BSDCLN,BSDDT,APTN,DFN,BSDMSG) ; interactive updating of visit data during check-in edit
"RTN","SDECV",206,0)
 ; if check in time different, update visit if there is one
"RTN","SDECV",207,0)
 N BSDCK,AUPNVSIT,DIE,DA,DR,VPROV
"RTN","SDECV",208,0)
 ; get new check-in time
"RTN","SDECV",209,0)
 S BSDCK=+$G(^SC(BSDCLN,"S",BSDDT,1,APTN,"C")) Q:'BSDCK
"RTN","SDECV",210,0)
 ;
"RTN","SDECV",211,0)
 ; find visit based on new check-in time
"RTN","SDECV",212,0)
 S AUPNVSIT=$O(^AUPNVSIT("AA",DFN,$$RDT(BSDCK),0)) Q:'AUPNVSIT
"RTN","SDECV",213,0)
 I $O(^AUPNVSIT("AA",DFN,$$RDT(BSDCK),AUPNVSIT)) D MSGADD(4,"More than 1 visit for date/time; visit must be updated manually.") Q
"RTN","SDECV",214,0)
 ; if visit already has provider, edit it
"RTN","SDECV",215,0)
 NEW DA,DIE,DR
"RTN","SDECV",216,0)
 S DA=$O(^AUPNVPRV("AD",AUPNVSIT,0)) I DA D  Q
"RTN","SDECV",217,0)
 . L +^AUPNVPRV(AUPNVSIT):10  Q:'$T
"RTN","SDECV",218,0)
 . S DIE=9000010.06,DR=".01" D ^DIE
"RTN","SDECV",219,0)
 . L -^AUPNVPRV(AUPNVSIT)
"RTN","SDECV",220,0)
 ; else, add v provider entry
"RTN","SDECV",221,0)
 NEW VPROV S VPROV=$$PROV(BSDCLN) I VPROV>0 D
"RTN","SDECV",222,0)
 . NEW APCDALVR
"RTN","SDECV",223,0)
 . S APCDALVR("APCDTPRO")="`"_VPROV
"RTN","SDECV",224,0)
 . S APCDALVR("APCDPAT")=DFN
"RTN","SDECV",225,0)
 . S APCDALVR("APCDVSIT")=AUPNVSIT
"RTN","SDECV",226,0)
 . S APCDALVR("APCDATMP")="[APCDALVR 9000010.06 (ADD)]"
"RTN","SDECV",227,0)
 . S APCDALVR("APCDTPS")="P",APCDALVR("APCDTOA")=""
"RTN","SDECV",228,0)
 . D ^SDECALVR
"RTN","SDECV",229,0)
 . D MSGADD(0,"Provider added to visit.")
"RTN","SDECV",230,0)
 Q
"RTN","SDECV",231,0)
 ;
"RTN","SDECV",232,0)
PROVUPD ; will update provider on visit that was created earlier
"RTN","SDECV",233,0)
 ;if provider sent is not already on visit, assume provider should be primary
"RTN","SDECV",234,0)
 Q:'$D(BSDPROV)    ;no provider sent
"RTN","SDECV",235,0)
 Q:'$G(BSDPROV)    ;quits if provider is set to zero PATCH 1012 8/19/2010
"RTN","SDECV",236,0)
 ;look at providers on visit
"RTN","SDECV",237,0)
 N FOUND,IEN,PRIM,PRV
"RTN","SDECV",238,0)
 S (IEN,FOUND,PRIM)=0
"RTN","SDECV",239,0)
 F  S IEN=$O(^AUPNVPRV("AD",BSDVSTN,IEN)) Q:'IEN  D
"RTN","SDECV",240,0)
 . I $P($G(^AUPNVPRV(IEN,0)),U)=BSDPROV S FOUND=1   ;provider on visit
"RTN","SDECV",241,0)
 . I $$GET1^DIQ(9000010.06,IEN,.04)="PRIMARY" S PRIM=IEN
"RTN","SDECV",242,0)
 ;
"RTN","SDECV",243,0)
 I FOUND Q           ;provider already on visit, leave alone
"RTN","SDECV",244,0)
 ;
"RTN","SDECV",245,0)
 ; if other provider is primary, switch him/her to secondary
"RTN","SDECV",246,0)
 I PRIM L +^AUPNVPRV(PRIM):10  I $T S DIE=9000010.06,DA=PRIM,DR=".04///S" D ^DIE L -^AUPNVPRV(PRIM)
"RTN","SDECV",247,0)
 ;
"RTN","SDECV",248,0)
 I $G(BSDVSTN),$P($G(^AUPNVSIT(BSDVSTN,0)),U,5)'=$G(DFN) Q  ; don't allow a v provider update if not the correct patient for some reason
"RTN","SDECV",249,0)
 K APCDALVR
"RTN","SDECV",250,0)
 S APCDALVR("APCDTPRO")="`"_BSDPROV
"RTN","SDECV",251,0)
 S APCDALVR("APCDPAT")=DFN
"RTN","SDECV",252,0)
 S APCDALVR("APCDVSIT")=BSDVSTN
"RTN","SDECV",253,0)
 S APCDALVR("APCDATMP")="[APCDALVR 9000010.06 (ADD)]"
"RTN","SDECV",254,0)
 S APCDALVR("APCDTPS")="P",APCDALVR("APCDTOA")=""
"RTN","SDECV",255,0)
 ;D ^APCDALVR
"RTN","SDECV",256,0)
 D ^SDECALVR
"RTN","SDECV",257,0)
 D MSGADD(0,"Provider added to visit.")
"RTN","SDECV",258,0)
 Q
"RTN","SDECV",259,0)
 ;
"RTN","SDECV",260,0)
HOSLUPD ; update hospital location on visit
"RTN","SDECV",261,0)
 N DIE,DA,DR
"RTN","SDECV",262,0)
 L +^AUPNVSIT(BSDVSTN):10
"RTN","SDECV",263,0)
 Q:'$T
"RTN","SDECV",264,0)
 S DIE="^AUPNVSIT(",DA=BSDVSTN,DR=".22///`"_BSDCLN
"RTN","SDECV",265,0)
 D ^DIE
"RTN","SDECV",266,0)
 L -^AUPNVSIT(BSDVSTN)
"RTN","SDECV",267,0)
 Q
"RTN","SDECV",268,0)
 ;
"RTN","SDECV",269,0)
SETVAR ; sets basic variables needed by API call
"RTN","SDECV",270,0)
 S BSDVAR("PAT")=DFN,BSDVAR("VISIT DATE")=+$G(^SC(BSDCLN,"S",BSDDT,1,APTN,"C"))
"RTN","SDECV",271,0)
 S BSDVAR("SITE")=$$FAC(BSDCLN)
"RTN","SDECV",272,0)
 S BSDVAR("VISIT TYPE")=$$GET1^DIQ(9001001.2,BSDVAR("SITE"),.11,"I")
"RTN","SDECV",273,0)
 I BSDVAR("VISIT TYPE")="" S BSDVAR("VISIT TYPE")=$$GET1^DIQ(9001000,BSDVAR("SITE"),.04,"I")
"RTN","SDECV",274,0)
 I BSDVAR("VISIT TYPE")="" K BSDVAR("VISIT TYPE")
"RTN","SDECV",275,0)
 S BSDVAR("SRV CAT")=$$SERCAT(BSDCLN,DFN)
"RTN","SDECV",276,0)
 S BSDVAR("CLINIC CODE")=BSDCC
"RTN","SDECV",277,0)
 S BSDVAR("HOS LOC")=+BSDCLN
"RTN","SDECV",278,0)
 S BSDVAR("APPT DATE")=BSDDT
"RTN","SDECV",279,0)
 S BSDVAR("USR")=DUZ
"RTN","SDECV",280,0)
 S BSDVAR("TIME RANGE")=-1
"RTN","SDECV",281,0)
 Q
"RTN","SDECV",282,0)
 ;
"RTN","SDECV",283,0)
EN1 ;CLEANUP
"RTN","SDECV",284,0)
 ;
"RTN","SDECV",285,0)
 K Y
"RTN","SDECV",286,0)
 K AICDHLIM,XTLKHLIM
"RTN","SDECV",287,0)
 K APCDCAT,APCDCLN,APCDDATE,APCDLOC,APCDTIME,APCDTYPE,APCDVSIT,APCDLOOK,APCDTPCC,APCDTACC,APCDFV,APCDAX,APCDAL,APCDNOK,APCDEQX,APCDMOD,APCDMPQ,APCDTVST,APCDTLOC,APCDTTYP,APCDTCAT,APCDTCLN,APCDEXIT,APCDOLOC
"RTN","SDECV",288,0)
 K APCDTBP,APCDPVL,APCDAPPT,APCDEVM,APCDCODT,APCDLS,APCDVELG,APCDHL,APCDOPT,APCDPROT,APCDAPDT
"RTN","SDECV",289,0)
 K APCDPAT,APCDDOB,APCDSEX,APCDDOD,APCDRV
"RTN","SDECV",290,0)
 K AUPNDOB,AUPNDOD,AUPNPAT,AUPNSEX,AUPNDAYS,AUPNVSIT  ;,AUPNLK("INAC")
"RTN","SDECV",291,0)
 K APCDLPAT,APCDLDAT,APCDLVST,APCDMNE,APCDNOCL,APCDNOXV,APCDAMN
"RTN","SDECV",292,0)
 K APCDAPP,APCDBEEP,APCDDUZ,APCDDUZ2,APCDFLG,APCDL,APCDMODE,APCDOCAT,APCDODAT,APCDOTYP,APCDOVRR,APCDPVC,APCDTPLT,APCDVLK,APCDX,APCDENV,APCDEMF,APCDEIN,APCD,APCDNOXV
"RTN","SDECV",293,0)
 Q
"RTN","SDECV",294,0)
EN2 ;CLEANUP
"RTN","SDECV",295,0)
 ;I '$D(APMFMENU) K AUPNLK("ALL")
"RTN","SDECV",296,0)
 K APCDPARM,APCDNRV,APCDRVON,APCDRVOF,APCDSITE,APCDTRM,APCDDEFL,APCDDEFS,APCDDEFC,APCDDEFT
"RTN","SDECV",297,0)
 Q
"RTN","SDECWL")
0^71^B53903000^n/a
"RTN","SDECWL",1,0)
SDECWL ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECWL",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECWL",3,0)
 ;
"RTN","SDECWL",4,0)
 Q
"RTN","SDECWL",5,0)
 ;
"RTN","SDECWL",6,0)
 ; entry points for Clinical Scheduling/Wait List related Remote Procedures
"RTN","SDECWL",7,0)
APPTGET(RET,WLIEN) ; EP for SDEC WLGET remote procedure
"RTN","SDECWL",8,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECWL",9,0)
 S RET="-1^Not yet implemented"_$C(30,31)
"RTN","SDECWL",10,0)
 Q
"RTN","SDECWL",11,0)
 ;------------------------------------------------
"RTN","SDECWL",12,0)
DEL(RET,INP)  ;not used
"RTN","SDECWL",13,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECWL",14,0)
 S RET="-1^Not yet implemented"_$C(30,31)
"RTN","SDECWL",15,0)
 Q
"RTN","SDECWL",16,0)
 ;
"RTN","SDECWL",17,0)
WLCLOSE(RET,INP) ;Waitlist Close
"RTN","SDECWL",18,0)
 ; INP - Input parameters array
"RTN","SDECWL",19,0)
 ;     INP(1) - Waitlist ID - Pointer to SD WAIT LIST file
"RTN","SDECWL",20,0)
 ;     INP(2) - Disposition
"RTN","SDECWL",21,0)
 ;     INP(3) - User Id - Pointer to NEW PERSON file
"RTN","SDECWL",22,0)
 ;     INP(4) - Date Dispositioned in external form
"RTN","SDECWL",23,0)
 N MI,WLDISP,WLDISPBY,WLDISPDT,WLFDA,WLIEN,WLMSG,WLRET
"RTN","SDECWL",24,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECWL",25,0)
 ;validate IEN
"RTN","SDECWL",26,0)
 S WLIEN=$G(INP(1)) I WLIEN="" S RET=RET_"-1^Missing IEN"_$C(30,31) Q
"RTN","SDECWL",27,0)
 ;validate DISPOSITION
"RTN","SDECWL",28,0)
 S WLDISP=$G(INP(2))
"RTN","SDECWL",29,0)
 I (WLDISP'="D"),(WLDISP'="NC"),(WLDISP'="SA"),(WLDISP'="CC"),(WLDISP'="NN"),(WLDISP'="ER"),(WLDISP'="TR"),(WLDISP'="CL") D
"RTN","SDECWL",30,0)
 .S:WLDISP="DEATH" WLDISP="D"
"RTN","SDECWL",31,0)
 .S:WLDISP="REMOVED/NON-VA CARE" WLDISP="NC"
"RTN","SDECWL",32,0)
 .S:WLDISP="REMOVED/SCHEDULED-ASSIGNED" WLDISP="SA"
"RTN","SDECWL",33,0)
 .S:WLDISP="REMOVED/VA CONTRACT CARE" WLDISP="CC"
"RTN","SDECWL",34,0)
 .S:WLDISP="REMOVED/NO LONGER NECESSARY" WLDISP="NN"
"RTN","SDECWL",35,0)
 .S:WLDISP="ENTERED IN ERROR" WLDISP="ER"
"RTN","SDECWL",36,0)
 .S:WLDISP="TRANSFERRED" WLDISP="TR"
"RTN","SDECWL",37,0)
 .S:WLDISP="CHANGED CLINIC" WLDISP="CL"
"RTN","SDECWL",38,0)
 I WLDISP="" S RET=RET_"-1^Missing value for DISPOSITION"_$C(30,31) Q
"RTN","SDECWL",39,0)
 I (WLDISP'="D"),(WLDISP'="NC"),(WLDISP'="SA"),(WLDISP'="CC"),(WLDISP'="NN"),(WLDISP'="ER"),(WLDISP'="TR"),(WLDISP'="CL") D
"RTN","SDECWL",40,0)
 .S RET=RET_"-1^Invalid value for DISPOSITION"_$C(30,31) Q
"RTN","SDECWL",41,0)
 ;validate DISPOSITIONED BY
"RTN","SDECWL",42,0)
 S WLDISPBY=$G(INP(3),DUZ)
"RTN","SDECWL",43,0)
 I '+WLDISPBY S WLDISPBY=$O(^VA(200,"B",WLDISPBY,0))
"RTN","SDECWL",44,0)
 I '+WLDISPBY S RET=RET_"-1^Invalid 'DISPOSITIONED BY' user"_$C(30,31) Q
"RTN","SDECWL",45,0)
 ;validate DATE DISPOSITIONED
"RTN","SDECWL",46,0)
 S WLDISPDT=$G(INP(4),DT) I WLDISPDT'="" S %DT="" S X=WLDISPDT D ^%DT S WLDISPDT=Y
"RTN","SDECWL",47,0)
 I Y=-1 S RET=RET_"-1^Invalid 'DATE DISPOSITIONED'"_$C(30,31) Q
"RTN","SDECWL",48,0)
 S WLFDA=$NA(WLFDA($$FNUM,WLIEN_","))
"RTN","SDECWL",49,0)
 S @WLFDA@(19)=WLDISPDT
"RTN","SDECWL",50,0)
 S @WLFDA@(20)=WLDISPBY
"RTN","SDECWL",51,0)
 S @WLFDA@(21)=WLDISP
"RTN","SDECWL",52,0)
 S @WLFDA@(23)="C"
"RTN","SDECWL",53,0)
 D UPDATE^DIE("","WLFDA","WLRET","WLMSG")
"RTN","SDECWL",54,0)
 I $D(WLMSG("DIERR")) D
"RTN","SDECWL",55,0)
 . F MI=1:1:$G(WLMSG("DIERR")) S RET=RET_"-1^"_$G(WLMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECWL",56,0)
 S RET=RET_$C(31)
"RTN","SDECWL",57,0)
 Q
"RTN","SDECWL",58,0)
 ;
"RTN","SDECWL",59,0)
WLOPEN(RET,WLAPP,WLIEN,WLDDT) ;SET Waitlist Open/re-open
"RTN","SDECWL",60,0)
 ;WLOPEN(RET,WLAPP,WLIEN,WLDDT)  external parameter tag in SDEC
"RTN","SDECWL",61,0)
 ;INPUT:
"RTN","SDECWL",62,0)
 ;     WLAPP - (required if no WLIEN) Appointment ID pointer to
"RTN","SDECWL",63,0)
 ;                                    SDEC APPOINTMENT file 409.84
"RTN","SDECWL",64,0)
 ;     WLIEN - (required if no WLAPP) Waitlist ID - Pointer to
"RTN","SDECWL",65,0)
 ;                                    SD WAIT LIST file
"RTN","SDECWL",66,0)
 ;     WLDDT - (optional) Desired Date of appointment in external format
"RTN","SDECWL",67,0)
 N SDART,SDECI,SDQ,WLFDA,WLMSG,X,Y,%DT
"RTN","SDECWL",68,0)
 S RET="^TMP(""SDECWL"","_$J_",""WLOPEN"")"
"RTN","SDECWL",69,0)
 K @RET
"RTN","SDECWL",70,0)
 S (SDECI,SDQ)=0
"RTN","SDECWL",71,0)
 S @RET@(SDECI)="T00030ERRORID^T00030ERRTEXT"_$C(30)
"RTN","SDECWL",72,0)
 ;validate WLAPP (required if WLIEN not passed it)
"RTN","SDECWL",73,0)
 S WLAPP=$G(WLAPP)
"RTN","SDECWL",74,0)
 I WLAPP'="" I $D(^SDEC(409.84,WLAPP,0)) D
"RTN","SDECWL",75,0)
 .S SDART=$$GET1^DIQ(409.84,WLAPP_",",.22,"I")
"RTN","SDECWL",76,0)
 .I $P(SDART,";",2)'="SDWL(409.3," S SDECI=SDECI+1 S @RET@(SDECI)="-1^Not an EWL appointment."_$C(30),SDQ=1 Q
"RTN","SDECWL",77,0)
 .I $G(WLIEN)'="",WLIEN'=$P(SDART,";",1) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Appointment EWL does not match passed in EWL."_$C(30),SDQ=1 Q
"RTN","SDECWL",78,0)
 .S WLIEN=$P(SDART,";",1)
"RTN","SDECWL",79,0)
 G:SDQ WLX
"RTN","SDECWL",80,0)
 ;validate WLIEN
"RTN","SDECWL",81,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL",82,0)
 I WLIEN="" S SDECI=SDECI+1 S @RET@(SDECI)="-1^Wait List ID or Appointment ID is required."_$C(30,31) Q
"RTN","SDECWL",83,0)
 I '$D(^SDWL(409.3,WLIEN,0)) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid wait list ID."_$C(30,31) Q
"RTN","SDECWL",84,0)
 ;validate WLDDT
"RTN","SDECWL",85,0)
 S WLDDT=$P($G(WLDDT),"@",1)
"RTN","SDECWL",86,0)
 I $G(WLDDT)'="" S %DT="" S X=WLDDT D ^%DT I Y=-1 S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid desired date of appointment."_$C(30,31) Q
"RTN","SDECWL",87,0)
 ;
"RTN","SDECWL",88,0)
 S WLFDA=$NA(WLFDA(409.3,WLIEN_","))
"RTN","SDECWL",89,0)
 S @WLFDA@(19)=""
"RTN","SDECWL",90,0)
 S @WLFDA@(20)=""
"RTN","SDECWL",91,0)
 S @WLFDA@(21)=""
"RTN","SDECWL",92,0)
 S:WLDDT'="" @WLFDA@(22)=WLDDT
"RTN","SDECWL",93,0)
 S @WLFDA@(23)="OPEN"
"RTN","SDECWL",94,0)
 D UPDATE^DIE("E","WLFDA","WLRET","WLMSG")
"RTN","SDECWL",95,0)
 I $D(WLMSG("DIERR")) D
"RTN","SDECWL",96,0)
 . F MI=1:1:$G(WLMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="-1^"_$G(WLMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECWL",97,0)
 I '$D(WLMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="0^"_WLIEN_$C(30)
"RTN","SDECWL",98,0)
WLX  S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDECWL",99,0)
 Q
"RTN","SDECWL",100,0)
 ;
"RTN","SDECWL",101,0)
FNUM(RET)   ;file number
"RTN","SDECWL",102,0)
 S RET=409.3
"RTN","SDECWL",103,0)
 Q RET
"RTN","SDECWL",104,0)
 ;
"RTN","SDECWL",105,0)
CLINALL(RET) ;Return the IEN and NAME for all entries in the SD WL CLINIC LOCATION file
"RTN","SDECWL",106,0)
 ;CLINALL(RET)  external parameter tag is in SDEC
"RTN","SDECWL",107,0)
 N CLINARR,CLINIEN,CLINNAME,COUNT,GLOREF,INACTIVE,LOCIEN,X
"RTN","SDECWL",108,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECWL",109,0)
 K @RET
"RTN","SDECWL",110,0)
 S @RET@(0)="T00020CLINIC_IEN^T00030CLINIC_NAME^T00020HOSPITAL_LOCATION_ID"_$C(30)
"RTN","SDECWL",111,0)
 S GLOREF=$NA(^SDWL(409.32))
"RTN","SDECWL",112,0)
 ; Search for all SD WL CLINIC LOCATION entries
"RTN","SDECWL",113,0)
 ; Lookup the HOSPITAL LOCATION name
"RTN","SDECWL",114,0)
 ; Save the names in a local array so the return array will be sorted by Name
"RTN","SDECWL",115,0)
 S CLINIEN=0
"RTN","SDECWL",116,0)
 F  S CLINIEN=$O(@GLOREF@(CLINIEN)) Q:'CLINIEN  D
"RTN","SDECWL",117,0)
 . S INACTIVE=$$GET1^DIQ(409.32,CLINIEN_",",3,"I")
"RTN","SDECWL",118,0)
 . I (INACTIVE'="")&($P(INACTIVE,".",1)<=$P($$NOW^XLFDT,".",1)) Q
"RTN","SDECWL",119,0)
 . S LOCIEN=$P(@GLOREF@(CLINIEN,0),U)
"RTN","SDECWL",120,0)
 . S CLINNAME=$P($G(^SC(LOCIEN,0)),U)
"RTN","SDECWL",121,0)
 . ;Q:$$GET1^DIQ(44,LOCIEN_",",2502.3,"I")=1
"RTN","SDECWL",122,0)
 . I CLINNAME'="" S CLINARR(CLINNAME)=CLINIEN_U_LOCIEN
"RTN","SDECWL",123,0)
 S CLINNAME="",COUNT=0
"RTN","SDECWL",124,0)
 F  S CLINNAME=$O(CLINARR(CLINNAME)) Q:CLINNAME=""  D
"RTN","SDECWL",125,0)
 . S COUNT=COUNT+1,@RET@(COUNT)=$P(CLINARR(CLINNAME),U)_U_CLINNAME_U_$P(CLINARR(CLINNAME),U,2)_$C(30)
"RTN","SDECWL",126,0)
 S @RET@(COUNT)=@RET@(COUNT)_$C(31)
"RTN","SDECWL",127,0)
 Q
"RTN","SDECWL",128,0)
 ;
"RTN","SDECWL",129,0)
SVSPALL(RET) ;return IEN and NAME for all entries in the SD WL SERVICE/SPECIALTY file
"RTN","SDECWL",130,0)
 ;SVSPALL(RET)  external parameter tag is in SDEC
"RTN","SDECWL",131,0)
 N COUNT,GLOREF,CLSTPIEN,SVSPARR,SVSPIEN,SVSPNAME,X
"RTN","SDECWL",132,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECWL",133,0)
 K @RET
"RTN","SDECWL",134,0)
 S @RET@(0)="T00020SERVICESPECIALTY_IEN^T00030SERVICESPECIALTY_NAME"_$C(30)
"RTN","SDECWL",135,0)
 S GLOREF=$NA(^SDWL(409.31))
"RTN","SDECWL",136,0)
 ; Search for all SD WL SERVICE/SPECIALTY entries
"RTN","SDECWL",137,0)
 ; Lookup the CLINIC STOP name
"RTN","SDECWL",138,0)
 ; Save the names in a local array so the return array will be sorted by Name
"RTN","SDECWL",139,0)
 S SVSPIEN=0
"RTN","SDECWL",140,0)
 F  S SVSPIEN=$O(@GLOREF@(SVSPIEN)) Q:'SVSPIEN  D
"RTN","SDECWL",141,0)
 . S CLSTPIEN=$P(@GLOREF@(SVSPIEN,0),U)
"RTN","SDECWL",142,0)
 . S SVSPNAME=$P($G(^DIC(40.7,CLSTPIEN,0)),U)
"RTN","SDECWL",143,0)
 . I SVSPNAME'="" S SVSPARR(SVSPNAME)=SVSPIEN
"RTN","SDECWL",144,0)
 S SVSPNAME="",COUNT=0
"RTN","SDECWL",145,0)
 F  S SVSPNAME=$O(SVSPARR(SVSPNAME)) Q:SVSPNAME=""  D
"RTN","SDECWL",146,0)
 . S COUNT=COUNT+1,@RET@(COUNT)=SVSPARR(SVSPNAME)_U_SVSPNAME_$C(30)
"RTN","SDECWL",147,0)
 ;S COUNT=COUNT+1,@RET@(COUNT)=$C(31)
"RTN","SDECWL",148,0)
 S @RET@(COUNT)=@RET@(COUNT)_$C(31)
"RTN","SDECWL",149,0)
 Q
"RTN","SDECWL",150,0)
 ;
"RTN","SDECWL",151,0)
APPTYPES(RET,DFN) ; EP for SDEC APPTYPES
"RTN","SDECWL",152,0)
 ;APPTYPES(RET,DFN)  external parameter tag is in SDEC
"RTN","SDECWL",153,0)
 ; Return the different appointment types
"RTN","SDECWL",154,0)
 N APTYDATA,APTYIEN,APTYINAC,APTYNAME,COUNT,GLOREF
"RTN","SDECWL",155,0)
 N ISVET,PTYPE,SDEC,SDI
"RTN","SDECWL",156,0)
 S PTYPE=""
"RTN","SDECWL",157,0)
 S ISVET=1   ;0=not a vet; 1=is a vet
"RTN","SDECWL",158,0)
 S RET=$NA(^TMP("SDEC",$J)),COUNT=0
"RTN","SDECWL",159,0)
 K @RET
"RTN","SDECWL",160,0)
 S @RET@(0)="T00020APPTTYPE_IEN^T00030APPTTYPE_NAME"_$C(30)
"RTN","SDECWL",161,0)
 S DFN=$G(DFN) I DFN'="" S:'$D(^DPT(+DFN,0)) DFN=""
"RTN","SDECWL",162,0)
 S GLOREF=$NA(^SD(409.1))
"RTN","SDECWL",163,0)
 I '+DFN D
"RTN","SDECWL",164,0)
 .S APTYNAME="" F  S APTYNAME=$O(@GLOREF@("B",APTYNAME)) Q:APTYNAME=""  D
"RTN","SDECWL",165,0)
 ..S APTYIEN=0 F  S APTYIEN=$O(@GLOREF@("B",APTYNAME,APTYIEN)) Q:'APTYIEN  D
"RTN","SDECWL",166,0)
 ...S APTYDATA=$G(@GLOREF@(APTYIEN,0))
"RTN","SDECWL",167,0)
 ...Q:$P(APTYDATA,U,3)
"RTN","SDECWL",168,0)
 ...S COUNT=COUNT+1,@RET@(COUNT)=APTYIEN_U_APTYNAME_$C(30)
"RTN","SDECWL",169,0)
 ;
"RTN","SDECWL",170,0)
 I +DFN D
"RTN","SDECWL",171,0)
 .N VAEL D ELIG^VADPT
"RTN","SDECWL",172,0)
 .S SDEC=$S($D(^DIC(8,+VAEL(1),0)):$P(^(0),U,5),1:"")
"RTN","SDECWL",173,0)
 .S APTYNAME="" F  S APTYNAME=$O(@GLOREF@("B",APTYNAME)) Q:APTYNAME=""  D
"RTN","SDECWL",174,0)
 ..S APTYIEN=0 F  S APTYIEN=$O(@GLOREF@("B",APTYNAME,APTYIEN)) Q:'APTYIEN  D
"RTN","SDECWL",175,0)
 ...S APTYDATA=$G(@GLOREF@(APTYIEN,0))
"RTN","SDECWL",176,0)
 ...Q:$P(APTYDATA,U,3)
"RTN","SDECWL",177,0)
 ...I $S(SDEC["Y":1,1:$P(APTYDATA,U,5)),$S('$P(APTYDATA,U,6):1,$D(VAEL(1,+$P(APTYDATA,U,6))):1,+VAEL(1)=$P(APTYDATA,U,6):1,1:0) D
"RTN","SDECWL",178,0)
 ....S COUNT=COUNT+1,@RET@(COUNT)=APTYIEN_U_APTYNAME_$C(30)
"RTN","SDECWL",179,0)
 ;
"RTN","SDECWL",180,0)
 S @RET@(COUNT)=@RET@(COUNT)_$C(31)
"RTN","SDECWL",181,0)
 Q
"RTN","SDECWL",182,0)
 ;
"RTN","SDECWL",183,0)
WLPCSET(SDECY,INP,WLIEN)  ;SET update patient contacts in SD WAIT LIST file
"RTN","SDECWL",184,0)
 ;WLSETPC(SDECY,INP,WLIEN)  external parameter tag in SDEC
"RTN","SDECWL",185,0)
 ;  INP = Patient Contacts separated by ::
"RTN","SDECWL",186,0)
 ;            Each :: piece has the following ~~ pieces:  (same as they are passed into SDEC WLSET)
"RTN","SDECWL",187,0)
 ;            1) = (required)    DATE ENTERED external date/time
"RTN","SDECWL",188,0)
 ;            2) = (optional)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECWL",189,0)
 ;            4) = (optional) ACTION - valid values are:
"RTN","SDECWL",190,0)
 ;                              CALLED
"RTN","SDECWL",191,0)
 ;                              MESSAGE LEFT
"RTN","SDECWL",192,0)
 ;                              LETTER
"RTN","SDECWL",193,0)
 ;            5) = (optional)    PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECWL",194,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECWL",195,0)
 ;  WLIEN = (required) Wait List Id pointer to SDEC WAIT LIST file 409.3
"RTN","SDECWL",196,0)
 N SDECI,SDTMP,WLMSG1
"RTN","SDECWL",197,0)
 S SDECY="^TMP(""SDECWL"","_$J_",""WLSETPC"")"
"RTN","SDECWL",198,0)
 K @SDECY
"RTN","SDECWL",199,0)
 S SDECI=0
"RTN","SDECWL",200,0)
 S @SDECY@(SDECI)="T00030RETURNCODE^T00030TEXT"_$C(30)
"RTN","SDECWL",201,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL",202,0)
 I (WLIEN="")!('$D(^SDWL(409.3,WLIEN,0))) D ERR1^SDECERR(-1,"Invalid wait list ID "_WLIEN_".",SDECI,SDECY) Q
"RTN","SDECWL",203,0)
 D WL23^SDECWL2(INP,WLIEN)
"RTN","SDECWL",204,0)
 I $D(WLMSG1) D ERR1^SDECERR(-1,"Error storing patient contacts.",SDECI,SDECY) Q
"RTN","SDECWL",205,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^SUCCESS"_$C(30,31)
"RTN","SDECWL",206,0)
 Q
"RTN","SDECWL1")
0^74^B116385737^n/a
"RTN","SDECWL1",1,0)
SDECWL1 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECWL1",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECWL1",3,0)
 ;
"RTN","SDECWL1",4,0)
 Q
"RTN","SDECWL1",5,0)
 ;
"RTN","SDECWL1",6,0)
 ; Get SD WAIT LIST for all entries in the user's Institution
"RTN","SDECWL1",7,0)
 ; where the Current Status is not C(losed).
"RTN","SDECWL1",8,0)
WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;Waitlist GET
"RTN","SDECWL1",9,0)
WLGETA ;
"RTN","SDECWL1",10,0)
 ;WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB)  external parameter tag in SDEC
"RTN","SDECWL1",11,0)
 ;INPUT:
"RTN","SDECWL1",12,0)
 ;  WLIEN1   - (optional) wait list ID pointer to SDWL(409.3
"RTN","SDECWL1",13,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDECWL1",14,0)
 ;  SDBEG    - (optional) Begin date in external format - defaults to jan 1,1800
"RTN","SDECWL1",15,0)
 ;  SDEND    - (optional) End date in external format - defaults to 90 days before TODAY
"RTN","SDECWL1",16,0)
 ;  DFN      - (optional) patient ID pointer to PATIENT file 2
"RTN","SDECWL1",17,0)
 ;  LASTSUB  - (optional) only used if DFN=""
"RTN","SDECWL1",18,0)
 ;            last subscripts from previous call
"RTN","SDECWL1",19,0)
 ;             <origination date/time> | <wait list ID>
"RTN","SDECWL1",20,0)
 ;  SDTOP    - (optional) runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"RTN","SDECWL1",21,0)
 ;
"RTN","SDECWL1",22,0)
 ;RETURN:  Return Wait List data in an OVID Dataset format with these columns:
"RTN","SDECWL1",23,0)
 ;   DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5] ^ GENDER [6] ^ WAIT LIST IEN [7]
"RTN","SDECWL1",24,0)
 ; ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9] ^ INSTITUTION NAME [10] ^ WAIT LIST TYPE [11] ^ WL SPECIFIC TEAM [12]
"RTN","SDECWL1",25,0)
 ; ^ WL SPECIFIC POSITION [13] ^ WL SERVICE/SPECIALTY IEN [14] ^ WL SERVICE/SPECIALTY NAME [15]
"RTN","SDECWL1",26,0)
 ; ^ WL SPECIFIC CLINIC IEN (file 44) [16] ^ WLSPECIFIC CLINIC NAME [17]
"RTN","SDECWL1",27,0)
 ; ^ ORIGINATING USER IEN [18] ^ ORIGINATING USER NAME [19} ^ PRIORITY [20] ^ REQUEST BY [21] ^ PROVIDER IEN [22]
"RTN","SDECWL1",28,0)
 ; ^ PROVIDER NAME [23] ^ DESIRED DATE OF APPOINTMENT [24] ^ COMMENTS [25] ^ EWL ENROLLEE STATUS [26]
"RTN","SDECWL1",29,0)
 ; ^ NOT USED PTPHONE [27] ^ ENROLLMENT PRIORITY [28] ^ NOT USED [29]
"RTN","SDECWL1",30,0)
 ; ^ <NOT USED> MULTIPLE APPOINTMENT RTC 0=NO; 1=YES [30] ^ <NOT USED> MULT APPT RTC INTERVAL-Integer between 1-365 [31]
"RTN","SDECWL1",31,0)
 ; ^ <NOT USED> MULT APPT NUMBER-Integer between 1-100 [32]
"RTN","SDECWL1",32,0)
 ; ^ PRIGRP [33] ^ ELIGIEN [34] ELIGNAME [35] ^ SVCCONN [36] ^ SVCCONNP[37] ^ TYPEIEN [38] ^ TYPENAME [39]
"RTN","SDECWL1",33,0)
 ; ^ PCONTACT [40] ^ WLDISPD [41] ^ WLDISPU [42] ^ WLDISPUN [43] ^ WLSVCCON [44] ^ PADDRES1 [45] ^ PADDRES2 [46]
"RTN","SDECWL1",34,0)
 ; ^ PADDRES3 [47] ^ PCITY [48] ^ PSTATE [49] ^ PCOUNTRY [50] ^ PZIP4 [51] ^ GAF [52] ^ DATE/TIME ENTERED [53]
"RTN","SDECWL1",35,0)
 ; ^ <NOT USED> [54] ^ SENSITIVE [55] ^ LASTSUB [56] ^ PRACE [57] ^ PRACEN [58] ^ PETH [59] ^ PETHN [60] ^ APPTYPE [61]
"RTN","SDECWL1",36,0)
 ; ^ PRHBLOC [62]
"RTN","SDECWL1",37,0)
 ;
"RTN","SDECWL1",38,0)
 ;--[64] Boolean indicating if location is a Prohibit Access clinic
"RTN","SDECWL1",39,0)
 ;--[55] SENSITIVE - Sensitive Record Access data separated by pipe |:
"RTN","SDECWL1",40,0)
 ;        ;   1. return code:
"RTN","SDECWL1",41,0)
 ;               -1-RPC/API failed
"RTN","SDECWL1",42,0)
 ;                  Required variable not defined
"RTN","SDECWL1",43,0)
 ;                0-No display/action required
"RTN","SDECWL1",44,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDECWL1",45,0)
 ;                1-Display warning message
"RTN","SDECWL1",46,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDECWL1",47,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDECWL1",48,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDECWL1",49,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDECWL1",50,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDECWL1",51,0)
 ;                3-Access to record denied
"RTN","SDECWL1",52,0)
 ;                  Accessing own record
"RTN","SDECWL1",53,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDECWL1",54,0)
 ;                  SSN not defined
"RTN","SDECWL1",55,0)
 ;   2. display text/message
"RTN","SDECWL1",56,0)
 ;   3. display text/message
"RTN","SDECWL1",57,0)
 ;   4. display text/message
"RTN","SDECWL1",58,0)
 ;
"RTN","SDECWL1",59,0)
 ;--[54] <NOT USED> MTRCDATES separated by pipe |, no time
"RTN","SDECWL1",60,0)
 ;
"RTN","SDECWL1",61,0)
 ;--[52] GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDECWL1",62,0)
 ;
"RTN","SDECWL1",63,0)
 ;--[40] PCONTACT   Patient Contact
"RTN","SDECWL1",64,0)
 ;  PATIENT CONTACT pieced by :: where each :: piece contains the following ~~ pieces:
"RTN","SDECWL1",65,0)
 ;         1. DATE ENTERED                external date/time
"RTN","SDECWL1",66,0)
 ;         2. PC ENTERED BY USER IEN      Pointer to NEW PERSON file
"RTN","SDECWL1",67,0)
 ;         3. PC ENTERED BY USER NAME     NAME from NEW PERSION file
"RTN","SDECWL1",68,0)
 ;         4. ACTION                      C=Called; M=Message Left; L=LETTER
"RTN","SDECWL1",69,0)
 ;         5. PATIENT PHONE               Free-Text 4-20 characters
"RTN","SDECWL1",70,0)
 ;
"RTN","SDECWL1",71,0)
 ;     ^  |  ;;  ::  ~~  {{
"RTN","SDECWL1",72,0)
 ;--[29] APPT_SCHED_DATE
"RTN","SDECWL1",73,0)
 ;       APPT DATA separated by "~~"
"RTN","SDECWL1",74,0)
 ;         1. SCHEDULED DATE OF APPOINTMENT
"RTN","SDECWL1",75,0)
 ;        12. APPT CLERK ien
"RTN","SDECWL1",76,0)
 ;        13. APPT CLERK name
"RTN","SDECWL1",77,0)
 ;        17. DATE APPT. MADE
"RTN","SDECWL1",78,0)
 ;
"RTN","SDECWL1",79,0)
 N CLOSED,FNUM,NAME,DOB,SSN4,GENDER,WLORIGDT,WLINST,WLINSTNM,WLTYPE,WLTEAM,WLPOS
"RTN","SDECWL1",80,0)
 N ELIGIEN,ELIGNAME,FRULES,GLOREF,HRN,INSTIEN,INSTNAME,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDECWL1",81,0)
 N PCOUNTRY,SDSUB,SDTMP,SSN,WLSSIEN,WLSSNAME,WLCLIEN,WLCLNAME
"RTN","SDECWL1",82,0)
 N WLUSER,WLPRIO,WLREQBY,WLPROV,WLPROVNM,WLDAPTDT,WLCOMM,WLEESTAT,WLUSRNM
"RTN","SDECWL1",83,0)
 N WLCLIENL,WLEDT,WLIEN,PTINFOLSTA,WLDISPD,WLDISPU,WLDISPUN,WLSVCCON
"RTN","SDECWL1",84,0)
 N WLSTAT,COUNT,STR
"RTN","SDECWL1",85,0)
 N PCITY,GAF,PSTATE,PZIP4,PADDRES1,PADDRES2,PADDRES3,PPC,PTPHONE,WLENPRI,WLASD,WLPC,WLDATA
"RTN","SDECWL1",86,0)
 N SDI,SDJ,SDMTRC,SDSENS,SDDEMO,X,Y,%DT
"RTN","SDECWL1",87,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECWL1",88,0)
 K @RET
"RTN","SDECWL1",89,0)
 S FNUM=$$FNUM^SDECWL,COUNT=0
"RTN","SDECWL1",90,0)
 S MAXREC=+$G(MAXREC,50)
"RTN","SDECWL1",91,0)
 D HDR
"RTN","SDECWL1",92,0)
 S GLOREF=$NA(^SDWL(409.3,"C",DUZ(2)))
"RTN","SDECWL1",93,0)
 S FRULES=1
"RTN","SDECWL1",94,0)
 S WLIEN=0
"RTN","SDECWL1",95,0)
 ;F  S WLIEN=$O(@GLOREF@(WLIEN)) Q:'WLIEN  D ONEPAT I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",96,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECWL1",97,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=3100101
"RTN","SDECWL1",98,0)
 I SDBEG="" S SDBEG=3100101
"RTN","SDECWL1",99,0)
 S SDEND=$G(SDEND)
"RTN","SDECWL1",100,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECWL1",101,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECWL1",102,0)
 S DFN=$G(DFN)
"RTN","SDECWL1",103,0)
 I DFN'="",'$D(^DPT(DFN,0)) S DFN=""
"RTN","SDECWL1",104,0)
 S LASTSUB=$S(DFN="":$G(LASTSUB),1:"")
"RTN","SDECWL1",105,0)
 S SDTOP=+$G(SDTOP)
"RTN","SDECWL1",106,0)
 ;single IEN
"RTN","SDECWL1",107,0)
 S WLIEN1=$G(WLIEN1)
"RTN","SDECWL1",108,0)
 I +WLIEN1 I '$D(^SDWL(409.3,+WLIEN1,0))  S COUNT=COUNT+1 S @RET@(COUNT)="-1^Invalid Wait List ID." Q  ;S WLIEN1=""
"RTN","SDECWL1",109,0)
 I +WLIEN1 D
"RTN","SDECWL1",110,0)
 .S WLIEN=+WLIEN1
"RTN","SDECWL1",111,0)
 .S FRULES=0  ;no rules - just return the single record
"RTN","SDECWL1",112,0)
 .D ONEPAT
"RTN","SDECWL1",113,0)
 I +WLIEN1 S @RET@(COUNT)=@RET@(COUNT)_$C(31) Q
"RTN","SDECWL1",114,0)
 ;by patient
"RTN","SDECWL1",115,0)
 I +DFN D
"RTN","SDECWL1",116,0)
 .I 'SDTOP S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"B",+DFN,WLIEN)) Q:WLIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",117,0)
 .I SDTOP S WLIEN=999999999 F  S WLIEN=$O(^SDWL(409.3,"B",+DFN,WLIEN),-1) Q:WLIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",118,0)
 ;all by date range
"RTN","SDECWL1",119,0)
 I 'DFN D
"RTN","SDECWL1",120,0)
 .I 'SDTOP D
"RTN","SDECWL1",121,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1)
"RTN","SDECWL1",122,0)
 ..F  S SDJ=$O(^SDWL(409.3,"E","O",SDJ)) Q:SDJ'>0  Q:SDJ>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",123,0)
 ...S WLIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0) S LASTSUB=""
"RTN","SDECWL1",124,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"E","O",SDJ,WLIEN)) Q:WLIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_WLIEN Q
"RTN","SDECWL1",125,0)
 ....S SDSUB=""
"RTN","SDECWL1",126,0)
 ....D ONEPAT
"RTN","SDECWL1",127,0)
 .I +SDTOP D
"RTN","SDECWL1",128,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1)
"RTN","SDECWL1",129,0)
 ..F  S SDJ=$O(^SDWL(409.3,"E","O",SDJ),-1) Q:SDJ'>0  Q:SDJ<SDBEG  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",130,0)
 ...S WLIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999) S LASTSUB=""
"RTN","SDECWL1",131,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"E","O",SDJ,WLIEN),-1) Q:WLIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_WLIEN Q
"RTN","SDECWL1",132,0)
 ....S SDSUB=""
"RTN","SDECWL1",133,0)
 ....D ONEPAT
"RTN","SDECWL1",134,0)
 S SDTMP=@RET@(COUNT) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECWL1",135,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,56)=SDSUB
"RTN","SDECWL1",136,0)
 S @RET@(COUNT)=SDTMP_$C(30,31)
"RTN","SDECWL1",137,0)
 Q
"RTN","SDECWL1",138,0)
 ;
"RTN","SDECWL1",139,0)
HDR ;Output header
"RTN","SDECWL1",140,0)
 ;                     1         2
"RTN","SDECWL1",141,0)
 S @RET@(COUNT)="T00030DFN^T00030NAME"
"RTN","SDECWL1",142,0)
 ;                                   3         4         5         6            7         8
"RTN","SDECWL1",143,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^I00010IEN^D00030ORIGDT"
"RTN","SDECWL1",144,0)
 ;                                   9             10             11         12         13
"RTN","SDECWL1",145,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030INSTIEN^T00030INSTNAME^T00030TYPE^T00030TEAM^T00030POS"
"RTN","SDECWL1",146,0)
 ;                                   14             15              16            17
"RTN","SDECWL1",147,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030SRVSPIEN^T00030SRVSPNAME^T00030CLINIEN^T00030CLINNAME"
"RTN","SDECWL1",148,0)
 ;                                   18            19             20         21          22            23
"RTN","SDECWL1",149,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030USERIEN^T00030USERNAME^T00030PRIO^T00030REQBY^T00030PROVIEN^T00030PROVNAME"
"RTN","SDECWL1",150,0)
 ;                                   24           25         26           27               28
"RTN","SDECWL1",151,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030DAPTDT^T00250COMM^T00030EESTAT^T00030PTELEPHONE^T00030ENROLLMENT_PRIORITY"
"RTN","SDECWL1",152,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00250APPT_SCHED_DATE^T00010MULTIPLE APPOINTMENT RTC^T00010MULT APPT RTC INTERVAL"
"RTN","SDECWL1",153,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00010MULT APPT NUMBER"
"RTN","SDECWL1",154,0)
 ;                                                                             36
"RTN","SDECWL1",155,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDECWL1",156,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030TYPEIEN^T00030TYPENAME^T00100PCONTACT^T00030WLDISPD^T00030WLDISPU^T00030WLDISPUN"
"RTN","SDECWL1",157,0)
 ;                                   44             45             46           47               48
"RTN","SDECWL1",158,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030WLSVCCON^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3^T00030PCITY"
"RTN","SDECWL1",159,0)
 ;                                   49           50             51          52        53         54
"RTN","SDECWL1",160,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00050GAF^T00030DATE^T00030MTRCDATES"
"RTN","SDECWL1",161,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00100SENSITIVE^T00030LASTSUB^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"
"RTN","SDECWL1",162,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030APPTYPE^T00030PRHBLOC"_$C(30)
"RTN","SDECWL1",163,0)
 Q
"RTN","SDECWL1",164,0)
ONEPAT ; Process one patient
"RTN","SDECWL1",165,0)
 ;D GETS^DIQ(FNUM,WLIEN,"23;.01;.05;1;2;4;5;6;7;8;8.5;9;10,10.5;11;12;12.5;22;25;27","IE","WLDATA","WLMSG")
"RTN","SDECWL1",166,0)
 N SDCL,WLSDOA,WLDAM,WLCLERK,WLCLERKN
"RTN","SDECWL1",167,0)
 N APPTYPE,PRACE,PRACEN,PETH,PETHN,PRHBLOC
"RTN","SDECWL1",168,0)
 K WLDATA
"RTN","SDECWL1",169,0)
 S FRULES=$G(FRULES)
"RTN","SDECWL1",170,0)
 D GETS^DIQ(FNUM,WLIEN,"**","IE","WLDATA","WLMSG")
"RTN","SDECWL1",171,0)
 S WLSTAT=WLDATA(FNUM,WLIEN_",",23,"I")
"RTN","SDECWL1",172,0)
 I FRULES I '+$G(CLOSED) Q:WLSTAT="C"  ; Ignore CLOSED records; CLOSED setup and used from SDEC54 only
"RTN","SDECWL1",173,0)
 S WLORIGDT=WLDATA(FNUM,WLIEN_",",1,"I")
"RTN","SDECWL1",174,0)
 I FRULES I ($P(WLORIGDT,".",1)<SDBEG)!($P(WLORIGDT,".",1)>SDEND) Q
"RTN","SDECWL1",175,0)
 S DFN=WLDATA(FNUM,WLIEN_",",.01,"I")
"RTN","SDECWL1",176,0)
 Q:DFN=""
"RTN","SDECWL1",177,0)
 S WLCLIENL=WLDATA(FNUM,WLIEN_",",8,"I")
"RTN","SDECWL1",178,0)
 S SDCL=WLDATA(FNUM,WLIEN_",",8.5,"I")
"RTN","SDECWL1",179,0)
 I SDCL="" S SDCL=$$GET1^DIQ(409.32,WLCLIENL_",",.01,"I")
"RTN","SDECWL1",180,0)
 ;Q:(SDCL'="")&($$GET1^DIQ(44,SDCL_",",2502.3,"I")=1)  ;check HIDE FROM DISPLAY? in file 44
"RTN","SDECWL1",181,0)
 S PRHBLOC=$S($$GET1^DIQ(44,SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDECWL1",182,0)
 ;collect demographics
"RTN","SDECWL1",183,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDECWL1",184,0)
 S NAME=SDDEMO("NAME")
"RTN","SDECWL1",185,0)
 S DOB=SDDEMO("DOB")
"RTN","SDECWL1",186,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDECWL1",187,0)
 S HRN=SDDEMO("HRN")
"RTN","SDECWL1",188,0)
 S SSN=SDDEMO("SSN")
"RTN","SDECWL1",189,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDECWL1",190,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDECWL1",191,0)
 S PRIGRP=SDDEMO("PRIGRP")       ;33
"RTN","SDECWL1",192,0)
 S ELIGIEN=SDDEMO("ELIGIEN")     ;34
"RTN","SDECWL1",193,0)
 S ELIGNAME=SDDEMO("ELIGNAME")   ;35
"RTN","SDECWL1",194,0)
 S SVCCONN=SDDEMO("SVCCONN")     ;36
"RTN","SDECWL1",195,0)
 S SVCCONNP=SDDEMO("SVCCONNP")   ;37
"RTN","SDECWL1",196,0)
 S TYPEIEN=SDDEMO("TYPEIEN")     ;38
"RTN","SDECWL1",197,0)
 S TYPENAME=SDDEMO("TYPENAME")   ;39
"RTN","SDECWL1",198,0)
 S PADDRES1=SDDEMO("PADDRES1")   ;45
"RTN","SDECWL1",199,0)
 S PADDRES2=SDDEMO("PADDRES2")   ;46
"RTN","SDECWL1",200,0)
 S PADDRES3=SDDEMO("PADDRES3")   ;47
"RTN","SDECWL1",201,0)
 S PCITY=SDDEMO("PCITY")         ;48
"RTN","SDECWL1",202,0)
 S PSTATE=SDDEMO("PSTATE")       ;49
"RTN","SDECWL1",203,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")   ;50
"RTN","SDECWL1",204,0)
 S PZIP4=SDDEMO("PZIP+4")        ;51
"RTN","SDECWL1",205,0)
 ;
"RTN","SDECWL1",206,0)
 S GAF=$$GAF^SDECU2(DFN)
"RTN","SDECWL1",207,0)
 ;
"RTN","SDECWL1",208,0)
 S PTPHONE=SDDEMO("HPHONE")    ;WLDATA(FNUM,WLIEN_",",.05,"I")  ;msc/sat
"RTN","SDECWL1",209,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDECWL1",210,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDECWL1",211,0)
 S WLINST=WLDATA(FNUM,WLIEN_",",2,"I")
"RTN","SDECWL1",212,0)
 S WLINSTNM=WLDATA(FNUM,WLIEN_",",2,"E")
"RTN","SDECWL1",213,0)
 S WLTYPE=WLDATA(FNUM,WLIEN_",",4,"I")
"RTN","SDECWL1",214,0)
 Q:"34"'[WLTYPE   ;only look for SERVICE/SPECIALITY or SPECIFIC CLINIC ;todo-need xref
"RTN","SDECWL1",215,0)
 S WLTEAM=WLDATA(FNUM,WLIEN_",",5,"I")
"RTN","SDECWL1",216,0)
 S WLPOS=WLDATA(FNUM,WLIEN_",",6,"I")
"RTN","SDECWL1",217,0)
 S WLSSIEN=WLDATA(FNUM,WLIEN_",",7,"I")
"RTN","SDECWL1",218,0)
 S WLSSNAME=WLDATA(FNUM,WLIEN_",",7,"E")
"RTN","SDECWL1",219,0)
 S WLCLIEN=$P($G(^SDWL(409.32,+WLCLIENL,0)),U,1)
"RTN","SDECWL1",220,0)
 S WLCLNAME=WLDATA(FNUM,WLIEN_",",8,"E")
"RTN","SDECWL1",221,0)
 S APPTYPE=WLDATA(FNUM,WLIEN_",",8.7,"I")
"RTN","SDECWL1",222,0)
 S WLUSER=WLDATA(FNUM,WLIEN_",",9,"I")
"RTN","SDECWL1",223,0)
 S WLUSRNM=WLDATA(FNUM,WLIEN_",",9,"E")
"RTN","SDECWL1",224,0)
 S WLEDT=$G(WLDATA(FNUM,WLIEN_",",9.5,"E"))   ;53
"RTN","SDECWL1",225,0)
 S WLPRIO=WLDATA(FNUM,WLIEN_",",10,"I")
"RTN","SDECWL1",226,0)
 S WLENPRI=WLDATA(FNUM,WLIEN_",",10.5,"E")   ;msc/sat
"RTN","SDECWL1",227,0)
 S WLREQBY=WLDATA(FNUM,WLIEN_",",11,"I")
"RTN","SDECWL1",228,0)
 S WLPROV=WLDATA(FNUM,WLIEN_",",12,"I")
"RTN","SDECWL1",229,0)
 S WLPROVNM=WLDATA(FNUM,WLIEN_",",12,"E")
"RTN","SDECWL1",230,0)
 S WLSDOA=WLDATA(FNUM,WLIEN_",",13,"E")    ;scheduled date of appt
"RTN","SDECWL1",231,0)
 S WLDAM=WLDATA(FNUM,WLIEN_",",13.1,"E")   ;date appt. made
"RTN","SDECWL1",232,0)
 S WLCLERK=WLDATA(FNUM,WLIEN_",",13.7,"I") ;appt clerk
"RTN","SDECWL1",233,0)
 S WLCLERKN=WLDATA(FNUM,WLIEN_",",13.7,"E") ;appt clerk name
"RTN","SDECWL1",234,0)
 S WLSVCCON=WLDATA(FNUM,WLIEN_",",15,"E")
"RTN","SDECWL1",235,0)
 S WLDAPTDT=WLDATA(FNUM,WLIEN_",",22,"I")
"RTN","SDECWL1",236,0)
 S WLCOMM=WLDATA(FNUM,WLIEN_",",25,"I")
"RTN","SDECWL1",237,0)
 S WLEESTAT=WLDATA(FNUM,WLIEN_",",27,"I")
"RTN","SDECWL1",238,0)
 S WLASD=""
"RTN","SDECWL1",239,0)
 S:WLSDOA'="" $P(WLASD,"~~",1)=WLSDOA
"RTN","SDECWL1",240,0)
 S:WLCLERK'="" $P(WLASD,"~~",12)=WLCLERK
"RTN","SDECWL1",241,0)
 S:WLCLERKN'="" $P(WLASD,"~~",13)=WLCLERKN
"RTN","SDECWL1",242,0)
 S:WLDAM'="" $P(WLASD,"~~",17)=WLDAM
"RTN","SDECWL1",243,0)
 S WLPC=$$WLPC(.WLDATA,WLIEN)
"RTN","SDECWL1",244,0)
 S WLDISPD=WLDATA(FNUM,WLIEN_",",19,"E")
"RTN","SDECWL1",245,0)
 S WLDISPU=WLDATA(FNUM,WLIEN_",",20,"I")
"RTN","SDECWL1",246,0)
 S WLDISPUN=WLDATA(FNUM,WLIEN_",",20,"E")
"RTN","SDECWL1",247,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)
"RTN","SDECWL1",248,0)
 S SDMTRC=""  ;S (SDI,SDMTRC)="" F  S SDI=$O(WLDATA(409.37,SDI)) Q:SDI=""  S SDMTRC=$S(SDMTRC'="":SDMTRC_"|",1:"")_WLDATA(409.37,SDI,.01,"E")
"RTN","SDECWL1",249,0)
 S COUNT=COUNT+1
"RTN","SDECWL1",250,0)
 ;     1     2      3    4     5     6        7       8          9        10         11       12       13
"RTN","SDECWL1",251,0)
 S STR=DFN_U_NAME_U_""_U_DOB_U_SSN_U_GENDER_U_WLIEN_U_WLORIGDT_U_WLINST_U_WLINSTNM_U_WLTYPE_U_WLTEAM_U_WLPOS   ;13
"RTN","SDECWL1",252,0)
 ;           14        15         16        17         18       19        20       21        22
"RTN","SDECWL1",253,0)
 S STR=STR_U_WLSSIEN_U_WLSSNAME_U_WLCLIEN_U_WLCLNAME_U_WLUSER_U_WLUSRNM_U_WLPRIO_U_WLREQBY_U_WLPROV            ;22
"RTN","SDECWL1",254,0)
 S STR=STR_U_WLPROVNM_U_WLDAPTDT_U_WLCOMM_U_WLEESTAT_U_PTPHONE_U_WLENPRI_U_WLASD_U_""_U_""_U_""                ;32
"RTN","SDECWL1",255,0)
 S STR=STR_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVCCONN_U_SVCCONNP_U_TYPEIEN_U_TYPENAME_U_WLPC                      ;40
"RTN","SDECWL1",256,0)
 S STR=STR_U_WLDISPD_U_WLDISPU_U_WLDISPUN_U_WLSVCCON_U_PADDRES1_U_PADDRES2_U_PADDRES3_U_PCITY_U_PSTATE         ;49
"RTN","SDECWL1",257,0)
 ;           50         51      52    53      54   55       56   57      58       59     60
"RTN","SDECWL1",258,0)
 S STR=STR_U_PCOUNTRY_U_PZIP4_U_GAF_U_WLEDT_U_""_U_SDSENS_U_""_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_APPTYPE       ;62
"RTN","SDECWL1",259,0)
 S STR=STR_U_PRHBLOC
"RTN","SDECWL1",260,0)
 S @RET@(COUNT)=STR_$C(30)
"RTN","SDECWL1",261,0)
 Q
"RTN","SDECWL1",262,0)
 ;
"RTN","SDECWL1",263,0)
WLPC(WLDATA,ASDIEN) ;
"RTN","SDECWL1",264,0)
 N PC,PC1,PCIEN
"RTN","SDECWL1",265,0)
 S PC=""
"RTN","SDECWL1",266,0)
 S PCIEN="" F  S PCIEN=$O(WLDATA(409.344,PCIEN)) Q:PCIEN=""  D
"RTN","SDECWL1",267,0)
 .Q:$P(PCIEN,",",2)'=ASDIEN
"RTN","SDECWL1",268,0)
 .S PC1=""
"RTN","SDECWL1",269,0)
 .S $P(PC1,"~~",1)=WLDATA(409.344,PCIEN,.01,"E")    ;DATE ENTERED
"RTN","SDECWL1",270,0)
 .S $P(PC1,"~~",2)=WLDATA(409.344,PCIEN,2,"I")      ;PC ENTERED BY USER IEN
"RTN","SDECWL1",271,0)
 .S $P(PC1,"~~",3)=WLDATA(409.344,PCIEN,2,"E")      ;PC ENTERED BY USER NAME
"RTN","SDECWL1",272,0)
 .S $P(PC1,"~~",4)=WLDATA(409.344,PCIEN,3,"E")      ;ACTION
"RTN","SDECWL1",273,0)
 .S $P(PC1,"~~",5)=WLDATA(409.344,PCIEN,4,"E")      ;PATIENT PHONE
"RTN","SDECWL1",274,0)
 .S PC=$S(PC'="":PC_"::",1:"")_PC1
"RTN","SDECWL1",275,0)
 Q PC
"RTN","SDECWL2")
0^75^B102907164^n/a
"RTN","SDECWL2",1,0)
SDECWL2 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECWL2",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECWL2",3,0)
 ;
"RTN","SDECWL2",4,0)
 Q
"RTN","SDECWL2",5,0)
 ;
"RTN","SDECWL2",6,0)
WLSET(RET,INP) ;Waitlist Set
"RTN","SDECWL2",7,0)
 ;WLSET(RET,INP...)  external parameter tag in SDEC
"RTN","SDECWL2",8,0)
 ;  INP(1)  = (integer)  Wait List IEN point to
"RTN","SDECWL2",9,0)
 ;                       SD WAIT LIST file 409.3.
"RTN","SDECWL2",10,0)
 ;                       If null, a new entry will be added
"RTN","SDECWL2",11,0)
 ;  INP(2)  = (text)     DFN Pointer to the PATIENT file 2
"RTN","SDECWL2",12,0)
 ;  INP(3)  = (date)     Originating Date/time in external date form
"RTN","SDECWL2",13,0)
 ;  INP(4)  = (text)     Institution name NAME field from the INSTITUTION file
"RTN","SDECWL2",14,0)
 ;  INP(5)  = (text)     Wait List Type
"RTN","SDECWL2",15,0)
 ;                        PCMM TEAM ASSIGNMENT
"RTN","SDECWL2",16,0)
 ;                        PCMM POSITION ASSIGNMENT
"RTN","SDECWL2",17,0)
 ;                        SERVICE/SPECIALITY
"RTN","SDECWL2",18,0)
 ;                        SPECIFIC CLINIC
"RTN","SDECWL2",19,0)
 ;  INP(6)  = (text)     WL Specific Team name - NAME field in the TEAM file 404.51
"RTN","SDECWL2",20,0)
 ;  INP(7)  = (text)     WL Specific Position name - NAME field in the
"RTN","SDECWL2",21,0)
 ;                       TEAM POSITION file 404.57.
"RTN","SDECWL2",22,0)
 ;  INP(8)  = (text)     WL Service/Specialty name - NAME field in
"RTN","SDECWL2",23,0)
 ;                       SD WL SERVICE/SPECIALTY file 409.31 OR ien from 409.31
"RTN","SDECWL2",24,0)
 ;  INP(9)  = (text)     WL Specific Clinic name - NAME field in
"RTN","SDECWL2",25,0)
 ;                       SD WL CLINIC LOCATION file 409.32.
"RTN","SDECWL2",26,0)
 ;  INP(10) = (text)     Originating User name  - NAME field in NEW PERSON file 200
"RTN","SDECWL2",27,0)
 ;  INP(11) = (text)     Priority - 'ASAP' or 'FUTURE'
"RTN","SDECWL2",28,0)
 ;  INP(12) = (text)     Request By - 'PROVIDER' or 'PATIENT'
"RTN","SDECWL2",29,0)
 ;  INP(13) = (text)     Provider name  - NAME field in NEW PERSON file 200
"RTN","SDECWL2",30,0)
 ;  INP(14) = (date)     Desired Date of appointment in external format.
"RTN","SDECWL2",31,0)
 ;  INP(15) = (text)     comment must be 1-60 characters
"RTN","SDECWL2",32,0)
 ;  INP(16) = (text)     EWL Enrollee Status
"RTN","SDECWL2",33,0)
 ;                        NEW
"RTN","SDECWL2",34,0)
 ;                        ESTABLISHED
"RTN","SDECWL2",35,0)
 ;                        PRIOR
"RTN","SDECWL2",36,0)
 ;                        UNDETERMINED
"RTN","SDECWL2",37,0)
 ;  INP(17) = (text)     NOT USED - PATIENT TELEPHONE  4-20 characters
"RTN","SDECWL2",38,0)
 ;  INP(18) = (text)     ENROLLMENT PRIORITY - Valid Values are:
"RTN","SDECWL2",39,0)
 ;                                             GROUP 1
"RTN","SDECWL2",40,0)
 ;                                             GROUP 2
"RTN","SDECWL2",41,0)
 ;                                             GROUP 3
"RTN","SDECWL2",42,0)
 ;                                             GROUP 4
"RTN","SDECWL2",43,0)
 ;                                             GROUP 5
"RTN","SDECWL2",44,0)
 ;                                             GROUP 6
"RTN","SDECWL2",45,0)
 ;                                             GROUP 7
"RTN","SDECWL2",46,0)
 ;                                             GROUP 8
"RTN","SDECWL2",47,0)
 ;  INP(19) = (text)    NOT USED - APPT SCHEDULED DATE
"RTN","SDECWL2",48,0)
 ;  INP(20) = (text)     <NOT USED>  MULTIPLE APPOINTMENT RTC      NO; YES
"RTN","SDECWL2",49,0)
 ;  INP(21) = (integer)  <NOT USED>  MULT APPT RTC INTERVAL integer between 1-365
"RTN","SDECWL2",50,0)
 ;  INP(22) = (integer)  <NOT USED>  MULT APPT NUMBER integer between 1-100
"RTN","SDECWL2",51,0)
 ;  INP(23) = Patient Contacts separated by ::
"RTN","SDECWL2",52,0)
 ;            Each :: piece has the following ~~ pieces:
"RTN","SDECWL2",53,0)
 ;            1) = (date)    DATE ENTERED external date/time
"RTN","SDECWL2",54,0)
 ;            2) = (text)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECWL2",55,0)
 ;            4) = (text)    ACTION - 'CALLED', 'MESSAGE LEFT', or 'LETTER'
"RTN","SDECWL2",56,0)
 ;            5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECWL2",57,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECWL2",58,0)
 ;  INP(24) = (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDECWL2",59,0)
 ;  INP(25) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"RTN","SDECWL2",60,0)
 ;  INP(27) = (optional) Appointment Type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECWL2",61,0)
 ;
"RTN","SDECWL2",62,0)
 N X,Y,%DT
"RTN","SDECWL2",63,0)
 N DFN,MI,WLIEN,WLORIGDT,WLINST,WLINSTI,WLTYPE,WLTEAM,WLPOS,WLSRVSP,WLCLIN
"RTN","SDECWL2",64,0)
 N WLUSER,WLPRIO,WLREQBY,WLPROV,WLDAPTDT,WLCOMM,WLEESTAT,WLEDT,WLQUIT
"RTN","SDECWL2",65,0)
 N FNUM,FDA,WLNEW,WLRET,WLMSG,WLDATA,WLERR,WLHOS
"RTN","SDECWL2",66,0)
 N WLAPTYP,WLPATTEL,WLENPRI,WLSVCCON,WLSVCCOP
"RTN","SDECWL2",67,0)
 S WLQUIT=0
"RTN","SDECWL2",68,0)
 S FNUM=$$FNUM^SDECWL
"RTN","SDECWL2",69,0)
 S RET="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDECWL2",70,0)
 ; Use MERGE instead of SET so we can know if values were actually specified or not.
"RTN","SDECWL2",71,0)
 ; This way, if a value is null, we will delete any previous value,
"RTN","SDECWL2",72,0)
 ; but if it is missing, then we will just ignore it.
"RTN","SDECWL2",73,0)
 M WLIEN=INP(1)
"RTN","SDECWL2",74,0)
 S DFN=$G(INP(2))
"RTN","SDECWL2",75,0)
 I '+DFN S RET=RET_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDECWL2",76,0)
 I '$D(^DPT(DFN,0)) S RET=RET_"-1^Invalid Patient ID"_$C(30,31) Q
"RTN","SDECWL2",77,0)
 S WLEDT=$P($G(INP(3)),":",1,2)
"RTN","SDECWL2",78,0)
 S %DT="TX" S X=WLEDT D ^%DT S WLEDT=Y
"RTN","SDECWL2",79,0)
 I Y=-1 S RET=RET_"-1^Invalid Origination date."_$C(30,31) Q
"RTN","SDECWL2",80,0)
 S WLORIGDT=$P(WLEDT,".",1)
"RTN","SDECWL2",81,0)
 S WLINST=$G(INP(4)) I WLINST'="" D
"RTN","SDECWL2",82,0)
 .I '+WLINST S WLINST=$O(^DIC(4,"B",WLINST,0))
"RTN","SDECWL2",83,0)
 S WLTYPE=$G(INP(5)) I WLTYPE'="" S WLTYPE=$S(WLTYPE="PCMM TEAM ASSIGNMENT":1,WLTYPE="PCMM POSSITION ASSIGNMENT":2,WLTYPE="SERVICE/SPECIALITY":3,WLTYPE="SPECIFIC CLINIC":4,+WLTYPE:+WLTYPE,1:"")
"RTN","SDECWL2",84,0)
 I WLTYPE="" S RET=RET_"-1^Invalid Wait List Type."_$c(30,31) Q
"RTN","SDECWL2",85,0)
 S WLTEAM=$G(INP(6)) I WLTEAM'="" D
"RTN","SDECWL2",86,0)
 .I '+WLTEAM S WLTEAM=$O(^SCTM(404.51,"B",WLTEAM,0))
"RTN","SDECWL2",87,0)
 .I +WLTEAM I '$D(^SCTM(404.51,+WLTEAM,0)) S WLTEAM=""
"RTN","SDECWL2",88,0)
 S WLPOS=$G(INP(7)) I WLPOS'="" D
"RTN","SDECWL2",89,0)
 .I '+WLPOS S WLPOS=$O(^DIC(404.57,"B",WLPOS,0))
"RTN","SDECWL2",90,0)
 .I +WLPOS I '$D(^SCTM(404.57,WLPOS,0)) S WLPOS=""
"RTN","SDECWL2",91,0)
 S WLCLIN=$G(INP(9))
"RTN","SDECWL2",92,0)
 I WLCLIN'="" D   ;WLCLIN pointer to SD WL CLINIC LOCATION; WLHOS pointer to HOSPITAL LOCATION
"RTN","SDECWL2",93,0)
 .I +WLCLIN D
"RTN","SDECWL2",94,0)
 ..I '$D(^SDWL(409.32,+WLCLIN,0)) S RET=RET_"-1^"_WLCLIN_" is an invalid WL Waitlist Specific Clinic ID."_$C(30,31) S WLQUIT=1 Q
"RTN","SDECWL2",95,0)
 ..S WLHOS=+$P($G(^SDWL(409.32,+WLCLIN,0)),U,1)
"RTN","SDECWL2",96,0)
 .I '+WLCLIN D
"RTN","SDECWL2",97,0)
 ..S WLHOS=$O(^SC("B",WLCLIN,0))  ;$S(+WLCLIN:$P($G(^SC($P($G(^SDWL(409.32,WLCLIN,0)),U,1),0)),U,1),1:WLCLIN)
"RTN","SDECWL2",98,0)
 ..S WLCLIN=$O(^SDWL(409.32,"B",+WLHOS,0)) I 'WLCLIN S RET=RET_"-1^"_WLCLIN_" is an invalid WL Waitlist Specific Clinic Name."_$C(30,31) S WLQUIT=1 Q
"RTN","SDECWL2",99,0)
 S INP(8)=$G(INP(8))
"RTN","SDECWL2",100,0)
 S WLUSER=$G(INP(10))
"RTN","SDECWL2",101,0)
 I WLUSER'="" I '+WLUSER S WLUSER=$O(^VA(200,"B",WLUSER,0))
"RTN","SDECWL2",102,0)
 I WLUSER="" S WLUSER=DUZ
"RTN","SDECWL2",103,0)
 S WLREQBY=$G(INP(12)) I WLREQBY'="" S WLREQBY=$S(WLREQBY="PATIENT":2,WLREQBY="PROVIDER":1,1:"")
"RTN","SDECWL2",104,0)
 S WLPROV=$G(INP(13)) I WLPROV'="" I '+WLPROV S WLPROV=$O(^VA(200,"B",WLPROV,0))
"RTN","SDECWL2",105,0)
 S WLDAPTDT=$G(INP(14))
"RTN","SDECWL2",106,0)
 S %DT="" S X=$P($G(WLDAPTDT),"@",1) D ^%DT S WLPRIO=$S(Y=$P($$NOW^XLFDT,".",1):"A",1:"F")
"RTN","SDECWL2",107,0)
 S WLDAPTDT=Y
"RTN","SDECWL2",108,0)
 I Y=-1 S WLDAPTDT=""   ;S RET=RET_"-1^Invalid Desired Date."_$C(30,31) Q
"RTN","SDECWL2",109,0)
 M WLCOMM=INP(15)
"RTN","SDECWL2",110,0)
 S WLEESTAT=$G(INP(16)) I WLEESTAT'="" S WLEESTAT=$S(WLEESTAT="NEW":"N",WLEESTAT="ESTABLISHED":"E",WLEESTAT="PRIOR":"P",WLEESTAT="UNDETERMINED":"U",1:WLEESTAT)
"RTN","SDECWL2",111,0)
 M WLPATTEL=INP(17)
"RTN","SDECWL2",112,0)
 S WLENPRI=$G(INP(18)) D
"RTN","SDECWL2",113,0)
 .S:WLENPRI'="" WLENPRI=$S(WLENPRI="GROUP 1":1,WLENPRI="GROUP 2":2,WLENPRI="GROUP 3":3,WLENPRI="GROUP 4":4,WLENPRI="GROUP 5":5,WLENPRI="GROUP 6":6,WLENPRI="GROUP 7":7,WLENPRI="GROUP 8":8,1:WLENPRI)
"RTN","SDECWL2",114,0)
 S WLSVCCON=$G(INP(24)) S:WLSVCCON'="" WLSVCCON=$S(WLSVCCON="YES":1,1:0)
"RTN","SDECWL2",115,0)
 S WLSVCCOP=$G(INP(25)) I WLSVCCOP'="" S WLSVCCOP=+$G(WLSVCCOP) S:(+WLSVCCOP<0)!(+WLSVCCOP>100) WLSVCCOP=""
"RTN","SDECWL2",116,0)
 S WLAPTYP=+$G(INP(27)) I +WLAPTYP,'$D(^SD(409.1,WLAPTYP,0)) S WLAPTYP=""
"RTN","SDECWL2",117,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL2",118,0)
 S WLNEW=WLIEN=""
"RTN","SDECWL2",119,0)
 I WLNEW D
"RTN","SDECWL2",120,0)
 . S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","SDECWL2",121,0)
 . S @FDA@(.01)=+DFN
"RTN","SDECWL2",122,0)
 . ;This handles the date/time coming in as "8/27/2014 12:00:00 AM"
"RTN","SDECWL2",123,0)
 . S:$G(WLORIGDT)'="" @FDA@(1)=WLORIGDT
"RTN","SDECWL2",124,0)
 . S:$G(WLINST)'="" @FDA@(2)=+WLINST
"RTN","SDECWL2",125,0)
 . S:$G(WLTYPE)'="" @FDA@(4)=WLTYPE
"RTN","SDECWL2",126,0)
 . ;S:$G(WLTEAM)'="" @FDA@(5)=+WLTEAM
"RTN","SDECWL2",127,0)
 . S:$G(WLPOS)'="" @FDA@(6)=+WLPOS
"RTN","SDECWL2",128,0)
 . ;S:$G(WLSRVSP)'="" @FDA@(7)=$S(+WLSRVSP:$P($G(^SDWL(409.31,WLSRVSP,0)),U),1:WLSRVSP)
"RTN","SDECWL2",129,0)
 . S:$G(WLCLIN)'="" @FDA@(8)=+WLCLIN
"RTN","SDECWL2",130,0)
 . S:$G(WLHOS)'="" @FDA@(8.5)=WLHOS
"RTN","SDECWL2",131,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",132,0)
 . S:$G(WLUSER)'="" @FDA@(9)=+WLUSER
"RTN","SDECWL2",133,0)
 . S:$G(WLEDT)'="" @FDA@(9.5)=WLEDT
"RTN","SDECWL2",134,0)
 . S:$G(WLPRIO)'="" @FDA@(10)=WLPRIO
"RTN","SDECWL2",135,0)
 . S:$G(WLENPRI)'="" @FDA@(10.5)=WLENPRI
"RTN","SDECWL2",136,0)
 . S:$G(WLREQBY)'="" @FDA@(11)=WLREQBY
"RTN","SDECWL2",137,0)
 . S:$G(WLPROV)'="" @FDA@(12)=+WLPROV
"RTN","SDECWL2",138,0)
 . S:$G(WLSVCCOP)'="" @FDA@(14)=WLSVCCOP
"RTN","SDECWL2",139,0)
 . S:$G(WLSVCCON)'="" @FDA@(15)=WLSVCCON
"RTN","SDECWL2",140,0)
 . S:$G(WLDAPTDT)'="" @FDA@(22)=WLDAPTDT
"RTN","SDECWL2",141,0)
 . S @FDA@(23)="O"
"RTN","SDECWL2",142,0)
 . S:$G(WLCOMM)'="" @FDA@(25)=WLCOMM
"RTN","SDECWL2",143,0)
 . S:$G(WLEESTAT)'="" @FDA@(27)=WLEESTAT
"RTN","SDECWL2",144,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",145,0)
 E  D
"RTN","SDECWL2",146,0)
 . S WLIEN=WLIEN_"," ; Append the comma for both
"RTN","SDECWL2",147,0)
 . K WLDATA,WLERR
"RTN","SDECWL2",148,0)
 . D GETS^DIQ(FNUM,WLIEN,"*","IE","WLDATA","WLERR")
"RTN","SDECWL2",149,0)
 . I $D(WLERR) M WLMSG=WLERR K FDA Q
"RTN","SDECWL2",150,0)
 . S FDA=$NA(FDA(FNUM,WLIEN))
"RTN","SDECWL2",151,0)
 . I $D(WLORIGDT) D
"RTN","SDECWL2",152,0)
 . . I WLORIGDT'=WLDATA(FNUM,WLIEN,1,"I") S @FDA@(1)=WLORIGDT
"RTN","SDECWL2",153,0)
 . I $D(WLINST),WLINST'=WLDATA(FNUM,WLIEN,2,"I") S @FDA@(2)=$S(WLINST="":"@",1:+WLINST)
"RTN","SDECWL2",154,0)
 . I $D(WLTYPE),WLTYPE'=WLDATA(FNUM,WLIEN,4,"E") S @FDA@(4)=WLTYPE
"RTN","SDECWL2",155,0)
 . ;I $D(WLTEAM),WLTEAM'=WLDATA(FNUM,WLIEN,5,"I") S @FDA@(5)=$S(WLTEAM="":"@",1:+WLTEAM)
"RTN","SDECWL2",156,0)
 . I $D(WLPOS),WLPOS'=WLDATA(FNUM,WLIEN,6,"I") S @FDA@(6)=$S(WLPOS="":"@",1:+WLPOS)
"RTN","SDECWL2",157,0)
 . ;I $D(WLSRVSP),WLSRVSP'=WLDATA(FNUM,WLIEN,7,"I") S @FDA@(7)=$S(WLSRVSP="":"@",+WLSRVSP:$P($G(^DIC(40.7,$P($G(^SDWL(409.31,WLSRVSP,0)),U),0)),U),1:WLSRVSP)
"RTN","SDECWL2",158,0)
 . I $D(WLCLIN),WLCLIN'=WLDATA(FNUM,WLIEN,8,"I") S @FDA@(8)=$S(WLCLIN="":"@",1:+WLCLIN)
"RTN","SDECWL2",159,0)
 . I $D(WLHOS),WLHOS'=WLDATA(FNUM,WLIEN,8,"I") S @FDA@(8.5)=WLHOS
"RTN","SDECWL2",160,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",161,0)
 . I $D(WLUSER),WLUSER'=WLDATA(FNUM,WLIEN,9,"I") S @FDA@(9)=$S(WLUSER="":"@",1:+WLUSER)
"RTN","SDECWL2",162,0)
 . I $D(WLEDT),WLEDT'=$G(WLDATA(FNUM,WLIEN,9.5,"I")) S @FDA@(9.5)=WLEDT
"RTN","SDECWL2",163,0)
 . I $D(WLPRIO),WLPRIO'=WLDATA(FNUM,WLIEN,10,"I") S @FDA@(10)=$S(WLPRIO="":"@",1:WLPRIO)
"RTN","SDECWL2",164,0)
 . I $D(WLENPRI),WLENPRI'=WLDATA(FNUM,WLIEN,10.5,"E") S @FDA@(10.5)=WLENPRI
"RTN","SDECWL2",165,0)
 . I $D(WLREQBY),WLREQBY'=WLDATA(FNUM,WLIEN,11,"I") S @FDA@(11)=$S(WLREQBY="":"@",1:WLREQBY)
"RTN","SDECWL2",166,0)
 . I $D(WLPROV),WLPROV'=WLDATA(FNUM,WLIEN,12,"I") S @FDA@(12)=$S(WLPROV="":"@",1:+WLPROV)
"RTN","SDECWL2",167,0)
 . I $D(WLSVCCOP),WLSVCCOP'=$G(WLDATA(FNUM,WLIEN,14,"I")) S @FDA@(14)=WLSVCCOP
"RTN","SDECWL2",168,0)
 . I $D(WLSVCCON),WLSVCCON'=WLDATA(FNUM,WLIEN,15,"E") S @FDA@(15)=WLSVCCON
"RTN","SDECWL2",169,0)
 . I $D(WLDAPTDT),WLDAPTDT'=WLDATA(FNUM,WLIEN,22,"I") S @FDA@(22)=$S(WLDAPTDT="":"@",1:WLDAPTDT)
"RTN","SDECWL2",170,0)
 . I $D(WLCOMM),WLCOMM'=WLDATA(FNUM,WLIEN,25,"I") S @FDA@(25)=$S(WLCOMM="":"@",1:WLCOMM)
"RTN","SDECWL2",171,0)
 . I $D(WLEESTAT),WLEESTAT'=WLDATA(FNUM,WLIEN,27,"I") S @FDA@(27)=$S(WLEESTAT="":"@",1:WLEESTAT)
"RTN","SDECWL2",172,0)
 ; Only call UPDATE^DIE if there are any array entries in FDA
"RTN","SDECWL2",173,0)
 D:$D(@FDA) UPDATE^DIE("","FDA","WLRET","WLMSG")
"RTN","SDECWL2",174,0)
 I $D(WLMSG) D
"RTN","SDECWL2",175,0)
 . F MI=1:1:$G(WLMSG("DIERR")) S RET=RET_"-1^"_$G(WLMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECWL2",176,0)
 . S RET=RET_$C(31)
"RTN","SDECWL2",177,0)
 Q:$D(WLMSG)
"RTN","SDECWL2",178,0)
 S WLINSTI=$P($G(^SDWL(409.3,$S(+WLIEN:WLIEN,1:WLRET(1)),0)),U,3)
"RTN","SDECWL2",179,0)
 I $G(INP(6))'="" D WL6   ;wl specific team
"RTN","SDECWL2",180,0)
 I $G(INP(8))'="" D WL8   ;wl service specialty
"RTN","SDECWL2",181,0)
 I $D(INP(23)) D WL23(INP(23),$S(+WLIEN:WLIEN,1:WLRET(1)))   ;patient contacts
"RTN","SDECWL2",182,0)
 I +$G(WLRET(1)) S RET=RET_WLRET(1)_U_$C(30,31)
"RTN","SDECWL2",183,0)
 E  S RET=RET_+WLIEN_U_$C(30,31)
"RTN","SDECWL2",184,0)
 Q
"RTN","SDECWL2",185,0)
 ;
"RTN","SDECWL2",186,0)
WL6 ;WL SPECIFIC TEAM does not store with bulk UPDATE^DIE with external data; don't know why
"RTN","SDECWL2",187,0)
 N FDA,H
"RTN","SDECWL2",188,0)
 S H=$O(^SCTM(404.51,"B",+$G(INP(6)),0))
"RTN","SDECWL2",189,0)
 I +H K FDA S FDA=$NA(FDA(409.3,$S(+WLIEN:WLIEN,1:WLRET(1))_",")) S @FDA@(5)=H D UPDATE^DIE("","FDA")
"RTN","SDECWL2",190,0)
 Q
"RTN","SDECWL2",191,0)
 ;
"RTN","SDECWL2",192,0)
WL8 ;WL SERVICE/SPECIALTY does not store with bulk UPDATE^DIE if duplicates; need to look for 1st active one
"RTN","SDECWL2",193,0)
 ; WL Service/Specialty name - NAME field in
"RTN","SDECWL2",194,0)
 ; SD WL SERVICE/SPECIALTY file 409.31.
"RTN","SDECWL2",195,0)
 N SDWLNOD,WLSRVSP
"RTN","SDECWL2",196,0)
 S WLSRVSP=""
"RTN","SDECWL2",197,0)
 I +INP(8) S WLSRVSP=$$GET1^DIQ+INP(8)
"RTN","SDECWL2",198,0)
 I WLSRVSP="" S H="" F  S H=$O(^DIC(40.7,"B",$G(INP(8)),H)) Q:H=""  D  Q:WLSRVSP'=""
"RTN","SDECWL2",199,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECWL2",200,0)
 .S WLSRVSP=$O(^SDWL(409.31,"B",H,0))
"RTN","SDECWL2",201,0)
 I WLSRVSP'="" K FDA S FDA=$NA(FDA(409.3,$S(+WLIEN:WLIEN,1:WLRET(1))_",")) S @FDA@(7)=WLSRVSP D UPDATE^DIE("","FDA")
"RTN","SDECWL2",202,0)
 Q
"RTN","SDECWL2",203,0)
 ;
"RTN","SDECWL2",204,0)
WLACT(NAME) ;
"RTN","SDECWL2",205,0)
 N ACTIVE,H
"RTN","SDECWL2",206,0)
 S ACTIVE=""
"RTN","SDECWL2",207,0)
 S H="" F  S H=$O(^DIC(40.7,"B",NAME,H)) Q:H=""  D  Q:ACTIVE'=""
"RTN","SDECWL2",208,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECWL2",209,0)
 .S ACTIVE=H
"RTN","SDECWL2",210,0)
 Q ACTIVE
"RTN","SDECWL2",211,0)
 ;
"RTN","SDECWL2",212,0)
WL23(INP23,WLI) ;Patient Contacts
"RTN","SDECWL2",213,0)
 N STR23,WLASD,WLASDH,WLDATA1,WLERR1,WLI1,WLIENS,WLIENS1,WLRET1,FDA
"RTN","SDECWL2",214,0)
 N WLUSR,X,Y,%DT
"RTN","SDECWL2",215,0)
 S WLIENS=WLI_","
"RTN","SDECWL2",216,0)
 F WLI1=1:1:$L(INP23,"::") D
"RTN","SDECWL2",217,0)
 .S STR23=$P(INP23,"::",WLI1)
"RTN","SDECWL2",218,0)
 .K FDA
"RTN","SDECWL2",219,0)
 .S %DT="T" S X=$P($P(STR23,"~~",1),":",1,2) D ^%DT S WLASD=Y
"RTN","SDECWL2",220,0)
 .I (WLASD=-1)!(WLASD="") Q
"RTN","SDECWL2",221,0)
 .S WLASDH=""  ;$O(^SDWL(409.3,WLI,4,"B",WLASD,0))
"RTN","SDECWL2",222,0)
 .S WLIENS1=$S(WLASDH'="":WLASDH,1:"+1")_","_WLIENS
"RTN","SDECWL2",223,0)
 .S FDA=$NA(FDA(409.344,WLIENS1))
"RTN","SDECWL2",224,0)
 .I WLASDH'="" D
"RTN","SDECWL2",225,0)
 ..D GETS^DIQ(409.344,WLIENS1,"*","IE","WLDATA1","WLERR1")
"RTN","SDECWL2",226,0)
 ..I $P(STR23,"~~",1)'="" S @FDA@(.01)=$P($P(STR23,"~~",1),":",1,2) ;DATE ENTERED external date/time
"RTN","SDECWL2",227,0)
 ..I $P(STR23,"~~",2)'="" S WLUSR=$P(STR23,"~~",2) S @FDA@(2)=$S(WLUSR="":"@",+WLUSR:$P($G(^VA(200,WLUSR,0)),U,1),1:WLUSR)  ;PC ENTERED BY USER
"RTN","SDECWL2",228,0)
 ..I $P(STR23,"~~",4)'="" S @FDA@(3)=$P(STR23,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECWL2",229,0)
 ..I $P(STR23,"~~",5)'="" S @FDA@(4)=$P(STR23,"~~",5)     ;PATIENT PHONE
"RTN","SDECWL2",230,0)
 ..;I $P(STR23,"~~",6)'="" S @FDA@(5)=$E($P(STR23,"~~",6),1,160)     ;COMMENT
"RTN","SDECWL2",231,0)
 .I WLASDH="" D
"RTN","SDECWL2",232,0)
 ..I $P(STR23,"~~",1)'="" S @FDA@(.01)=$P($P(STR23,"~~",1),":",1,2) ;DATE ENTERED external date/time
"RTN","SDECWL2",233,0)
 ..I $P(STR23,"~~",2)'=""  S WLUSR=$P(STR23,"~~",2) S @FDA@(2)=$S(WLUSR="":"@",+WLUSR:$P($G(^VA(200,WLUSR,0)),U,1),1:WLUSR)     ;PC ENTERED BY USER
"RTN","SDECWL2",234,0)
 ..I $P(STR23,"~~",4)'="" S @FDA@(3)=$P(STR23,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECWL2",235,0)
 ..I $P(STR23,"~~",5)'="" S @FDA@(4)=$P(STR23,"~~",5)     ;PATIENT PHONE
"RTN","SDECWL2",236,0)
 ..;I $P(STR23,"~~",6)'="" S @FDA@(5)=$E($P(STR23,"~~",6),1,160)     ;COMMENT
"RTN","SDECWL2",237,0)
 .D:$D(@FDA) UPDATE^DIE("E","FDA","WLRET1","WLMSG1")
"RTN","SDECWL2",238,0)
 .;D:$D(@FDA) UPDATE^DIE("E","FDA","WLRET1")
"RTN","SDECWL2",239,0)
 Q
"RTN","SDECWL3")
0^143^B12297706^n/a
"RTN","SDECWL3",1,0)
SDECWL3 ;ALB/SAT - VISTA SCHEDULING RPCS ;JAN 15, 2016
"RTN","SDECWL3",2,0)
 ;;5.3;Scheduling;**627**;Aug 13, 1993;Build 249
"RTN","SDECWL3",3,0)
 ;
"RTN","SDECWL3",4,0)
 Q
"RTN","SDECWL3",5,0)
 ;
"RTN","SDECWL3",6,0)
WLHIDE(SDECY,DFN,WLCL) ;GET wait list entries in which the associated clinic's 'HIDE FROM DISPLAY?' field is 'YES'
"RTN","SDECWL3",7,0)
 ;WLHIDE(SDECY,DFN,WLCL)  external parameter tag in SDEC
"RTN","SDECWL3",8,0)
 ; INPUT:
"RTN","SDECWL3",9,0)
 ;   DFN   = (optional) Patient ID pointer to PATIENT file 2
"RTN","SDECWL3",10,0)
 ;   WLCL  = (optional) Clinic ID pointer to SD WL CLINIC LOCATION
"RTN","SDECWL3",11,0)
 ; RETURN:
"RTN","SDECWL3",12,0)
 ;  DFN
"RTN","SDECWL3",13,0)
 ;  ORIGDT   = Originating Date
"RTN","SDECWL3",14,0)
 ;  TYPE     = Wait List Type
"RTN","SDECWL3",15,0)
 ;  CLINIEN  = Clinic IEN pointer to HOSPITAL LOCATION file 44
"RTN","SDECWL3",16,0)
 ;  WLCLNAME = WL SPECIFIC CLINIC
"RTN","SDECWL3",17,0)
 ;  USERIEN  = Originating User
"RTN","SDECWL3",18,0)
 ;  USERNAME = Originating User name
"RTN","SDECWL3",19,0)
 ;  DATE1    = Date/Time Entered
"RTN","SDECWL3",20,0)
 ;  DAPTDT   = Desired Date of appointment
"RTN","SDECWL3",21,0)
 ;  STATUS   = Current Status
"RTN","SDECWL3",22,0)
 ;               OPEN   CLOSED
"RTN","SDECWL3",23,0)
 N CLINIEN,DAPTDT,DATE1,ORIGDT,STATUS,TYPE,USERIEN,USERNAME,WLCLIEN,WLCLNAME
"RTN","SDECWL3",24,0)
 N SDI,SDCL,SDCL1,SDECI,SDDATA,INACTIVE,SDFIELDS,SDTMP,PTNAME
"RTN","SDECWL3",25,0)
 N WLIEN
"RTN","SDECWL3",26,0)
 S SDCL=""
"RTN","SDECWL3",27,0)
 S SDECI=0
"RTN","SDECWL3",28,0)
 S SDECY=$NA(^TMP("SDECWL3",$J,"WLHIDE"))
"RTN","SDECWL3",29,0)
 K @SDECY
"RTN","SDECWL3",30,0)
 S SDTMP="I00030DFN^T00030ORIGDT^T00030TYPE^T00030CLINIEN^T00030WLCLNAME^T00030USERIEN^"
"RTN","SDECWL3",31,0)
 S SDTMP=SDTMP_"T00030USERNAME^T00030DATE1^T00030DAPTDT^T00030STATUS^T00030PATIENTNAME"_$C(30)
"RTN","SDECWL3",32,0)
 S @SDECY@(SDECI)=SDTMP
"RTN","SDECWL3",33,0)
 S DFN=$G(DFN)
"RTN","SDECWL3",34,0)
 I DFN'="" I '$D(^DPT(DFN,0)) S @SDECY@(1)="-1^Invalid Patient ID." Q
"RTN","SDECWL3",35,0)
 S WLCL=$G(WLCL)
"RTN","SDECWL3",36,0)
 I +WLCL D
"RTN","SDECWL3",37,0)
 .S SDI=0 F  S SDI=$O(^SDWL(409.32,"B",WLCL,SDI)) Q:SDI=""  D   ;Need to get the correct IEN
"RTN","SDECWL3",38,0)
 ..S INACTIVE=$$GET1^DIQ(409.32,SDI_",",3,"I")
"RTN","SDECWL3",39,0)
 ..I (INACTIVE'="")&($P(INACTIVE,".",1)<=$P($$NOW^XLFDT,".",1)) Q
"RTN","SDECWL3",40,0)
 ..S (SDCL,SDCL1)=$$GET1^DIQ(409.32,+SDI_",",.01,"I")
"RTN","SDECWL3",41,0)
 ;I +WLCL,SDCL="" S @SDECY@(1)="-1^Invalid Clinic Location ID." Q
"RTN","SDECWL3",42,0)
 I +DFN D
"RTN","SDECWL3",43,0)
 .I 'WLCL S (SDCL,SDCL1)=0
"RTN","SDECWL3",44,0)
 .E  S SDCL=WLCL-1
"RTN","SDECWL3",45,0)
 .F  S SDCL=$O(^SDWL(409.3,"AD",DFN,SDCL)) Q:SDCL'>0  Q:(WLCL>0)&(WLCL'=SDCL)  D
"RTN","SDECWL3",46,0)
 ..Q:$P($G(^SC(SDCL,0)),U,26)'=1
"RTN","SDECWL3",47,0)
 ..S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"AD",DFN,SDCL,WLIEN)) Q:WLIEN'>0  D GET1
"RTN","SDECWL3",48,0)
 G:DFN'="" XIT
"RTN","SDECWL3",49,0)
 S SDCL1=+SDCL
"RTN","SDECWL3",50,0)
 S SDCL=$S(+SDCL:SDCL-1,1:0) F  S SDCL=$O(^SC("AF",1,SDCL)) Q:SDCL'>0  Q:(SDCL1>0)&(SDCL1'=SDCL)  D
"RTN","SDECWL3",51,0)
 .S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"AE",SDCL,WLIEN)) Q:WLIEN'>0  D GET1
"RTN","SDECWL3",52,0)
XIT ;
"RTN","SDECWL3",53,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECWL3",54,0)
 Q
"RTN","SDECWL3",55,0)
 ;
"RTN","SDECWL3",56,0)
GET1 ;
"RTN","SDECWL3",57,0)
 K SDDATA
"RTN","SDECWL3",58,0)
 Q:$P($G(^SDWL(409.3,WLIEN,0)),U,17)="C"
"RTN","SDECWL3",59,0)
 S SDFIELDS=".01;1;4;8;8.5;9;9.5;22;23"
"RTN","SDECWL3",60,0)
 D GETS^DIQ(409.3,WLIEN,SDFIELDS,"IE","SDDATA")
"RTN","SDECWL3",61,0)
 S DFN=SDDATA(409.3,WLIEN_",",.01,"I")    ;DFN
"RTN","SDECWL3",62,0)
 S PTNAME=$$GET1^DIQ(2,DFN,.01)           ;NAME OF PT
"RTN","SDECWL3",63,0)
 S ORIGDT=SDDATA(409.3,WLIEN_",",1,"E")   ;ORIGINATING DATE
"RTN","SDECWL3",64,0)
 S TYPE=SDDATA(409.3,WLIEN_",",4,"E")     ;WAIT LIST TYPE
"RTN","SDECWL3",65,0)
 S CLINIEN=SDDATA(409.3,WLIEN_",",8.5,"I")  ;CLINIC IEN
"RTN","SDECWL3",66,0)
 I CLINIEN="" D
"RTN","SDECWL3",67,0)
 .S WLCLIEN=SDDATA(409.3,WLIEN_",",8,"I")
"RTN","SDECWL3",68,0)
 .S CLINIEN=$$GET1^DIQ(409.32,WLCLIEN_",",.01,"I")
"RTN","SDECWL3",69,0)
 Q:CLINIEN=""
"RTN","SDECWL3",70,0)
 S WLCLNAME=$$GET1^DIQ(44,CLINIEN_",",.01)  ;Clinic name
"RTN","SDECWL3",71,0)
 S USERIEN=SDDATA(409.3,WLIEN_",",9,"I")  ;ORIGINATING USER
"RTN","SDECWL3",72,0)
 S USERNAME=SDDATA(409.3,WLIEN_",",9,"E") ;ORIGINATING USER name
"RTN","SDECWL3",73,0)
 S DATE1=SDDATA(409.3,WLIEN_",",9.5,"E")  ;DATE/TIME ENTERED
"RTN","SDECWL3",74,0)
 S DAPTDT=SDDATA(409.3,WLIEN_",",22,"E")  ;Desired Date of Appointment
"RTN","SDECWL3",75,0)
 S STATUS=SDDATA(409.3,WLIEN_",",23,"E")  ;CURRENT STATUS
"RTN","SDECWL3",76,0)
 S SDTMP=DFN_U_ORIGDT_U_TYPE_U_CLINIEN_U_WLCLNAME_U_USERIEN_U_USERNAME
"RTN","SDECWL3",77,0)
 S SDTMP=SDTMP_U_DATE1_U_DAPTDT_U_STATUS_U_PTNAME
"RTN","SDECWL3",78,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECWL3",79,0)
 Q
"RTN","SDM1A")
0^122^B121204157^B78000980
"RTN","SDM1A",1,0)
SDM1A ;SF/GFT,ALB/TMP - MAKE APPOINTMENT ;JAN 15, 2016
"RTN","SDM1A",2,0)
 ;;5.3;Scheduling;**26,94,155,206,168,223,241,263,327,478,446,544,621,622,627**;Aug 13, 1993;Build 249
"RTN","SDM1A",3,0)
 ;
"RTN","SDM1A",4,0)
OK I $D(SDMLT) D ^SDM4 Q:X="^"!(SDMADE=2)
"RTN","SDM1A",5,0)
 S ^SC(SC,"ST",$P(SD,"."),1)=S,^DPT(DFN,"S",SD,0)=SC,^SC(SC,"S",SD,0)=SD S:'$D(^DPT(DFN,"S",0)) ^(0)="^2.98P^^" S:'$D(^SC(SC,"S",0)) ^(0)="^44.001DA^^" L
"RTN","SDM1A",6,0)
S1 L +^SC(SC,"S",SD,1):$G(DILOCKTM,5) W:'$T "Another user is editing this record.  Trying again.",! G:'$T S1 F SDY=1:1 I '$D(^SC(SC,"S",SD,1,SDY)) S:'$D(^(0)) ^(0)="^44.003PA^^" S ^(SDY,0)=DFN_U_(+SL)_"^^^^"_$G(DUZ)_U_DT L -^SC(SC,"S",SD,1) Q
"RTN","SDM1A",7,0)
 I SM S ^("OB")="O" ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,"OB")
"RTN","SDM1A",8,0)
 I $D(^SC(SC,"RAD")),^("RAD")="Y"!(^("RAD")=1) S ^SC("ARAD",SC,SD,DFN)=""
"RTN","SDM1A",9,0)
 S SDINP=$$INP^SDAM2(DFN,SD)
"RTN","SDM1A",10,0)
 ;-- added sub-category
"RTN","SDM1A",11,0)
 S COV=3,SDYC="",COV=$S(COLLAT=1:1,1:3),SDYC=$S(COLLAT=7:1,1:"")
"RTN","SDM1A",12,0)
 S:SD<DT SDSRTY="W"
"RTN","SDM1A",13,0)
 S ^DPT(DFN,"S",SD,0)=SC_"^"_$$STATUS(SC,SDINP,SD)_"^^^^^"_COV_"^^^^"_SDYC_"^^^^^"_SDAPTYP_U_$G(SD17)_"^"_$G(DUZ)_U_DT_"^^^^^"_$G(SDXSCAT)_U_$P($G(SDSRTY),U,2)_U_$$NAVA^SDMANA(SC,SD,$P($G(SDSRTY),U,2)) ;544 added DUZ
"RTN","SDM1A",14,0)
 S ^DPT(DFN,"S",SD,1)=$G(SDDATE)_U_$G(SDSRFU)
"RTN","SDM1A",15,0)
 I $D(SDMULT) S SDCLNCND=^SC(SC,0),STPCOD=$P(SDCLNCND,U,7),TMPYCLNC=SC_U_$P(SDCLNCND,U) D A^SDCNSLT ;SD/478 MULTI CLINIC OPTION SELECTED
"RTN","SDM1A",16,0)
 ;xref DATE APPT. MADE field
"RTN","SDM1A",17,0)
 D
"RTN","SDM1A",18,0)
 .N DIV,DA,DIK
"RTN","SDM1A",19,0)
 .S DA=SD,DA(1)=DFN,DIK="^DPT(DA(1),""S"",",DIK(1)=20 D EN1^DIK
"RTN","SDM1A",20,0)
 .Q
"RTN","SDM1A",21,0)
 K:$D(^DPT(DFN,"S",SD,"R")) ^("R") K:$D(^DPT("ASDCN",SC,SD,DFN)) ^(DFN)
"RTN","SDM1A",22,0)
 S SDRT="A",SDTTM=SD,SDPL=SDY,SDSC=SC D RT^SDUTL
"RTN","SDM1A",23,0)
 W !,"   ",+SL,"-MINUTE APPOINTMENT MADE" K SDINP
"RTN","SDM1A",24,0)
 ;confirm request type & follow-up indicator
"RTN","SDM1A",25,0)
 I $D(SDSRTY(0)) D CONF(.SDSRTY,.SDSRFU,DFN,SD,SC) W !
"RTN","SDM1A",26,0)
 I $P(SD,".")'>DT,$D(^DPT(DFN,.321)) D EN1^SDM3
"RTN","SDM1A",27,0)
 ;Wait List SD*5.3*263
"RTN","SDM1A",28,0)
 ;I '$D(SDWLLIST) D ^SDWLR ;replaced with sd/372, see below
"RTN","SDM1A",29,0)
EWLCHK ;check if patient has any open EWL entries (SD/372)
"RTN","SDM1A",30,0)
 ;get appointment
"RTN","SDM1A",31,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"APPT")
"RTN","SDM1A",32,0)
 D APPT^SDWLEVAL(DFN,SD,SC)
"RTN","SDM1A",33,0)
 Q:'$D(^TMP($J,"APPT"))
"RTN","SDM1A",34,0)
 N SDWL,SDWLF,SDWLIST S SDWL="" S SDWLF=0   ;alb/sat 627
"RTN","SDM1A",35,0)
 N SDEV D EN^SDWLEVAL(DFN,.SDEV) I SDEV,$L(SDEV(1))>0 D
"RTN","SDM1A",36,0)
 .K ^TMP("SDWLPL",$J),^TMP($J,"SDWLPL")
"RTN","SDM1A",37,0)
 .D INIT^SDWLPL(DFN,"M")
"RTN","SDM1A",38,0)
 .Q:'$D(^TMP($J,"SDWLPL"))
"RTN","SDM1A",39,0)
 .D LIST^SDWLPL("M",DFN)
"RTN","SDM1A",40,0)
 .D SDGET(.SDWLIST)   ;alb/sat 627
"RTN","SDM1A",41,0)
 .F  Q:'$D(^TMP($J,"SDWLPL"))  N SDR D ANSW^SDWLEVAL(1,.SDR) S:SDR SDWLF=1 I 'SDR D LIST^SDWLPL("M",DFN) D
"RTN","SDM1A",42,0)
 ..F  N SDR D ANSW^SDWLEVAL(0,.SDR) Q:'$D(^TMP($J,"SDWLPL"))  I 'SDR W !,"MUST ENTER A REASON NOT TO DISPOSITION MATCHED EWL ENTRY",!
"RTN","SDM1A",43,0)
 .S:+SDWLF SDWL=$$SDWL(.SDWLIST)   ;alb/sat 627
"RTN","SDM1A",44,0)
 ;update SDEC APPOINTMENT file 409.84  ;alb/sat 627
"RTN","SDM1A",45,0)
 N SDECAR,SDREC,SDRES
"RTN","SDM1A",46,0)
 S SDREC=""
"RTN","SDM1A",47,0)
 I $G(CNSLTLNK)="",SDWL="" S SDREC=$$RECALL^SDECUTL(DFN,SD,SDSC)  ;check if recall appt
"RTN","SDM1A",48,0)
 I SDWL="",$G(CNSLTLNK)="",SDREC="" S SDECAR=$$SDWLA(DFN,SD,SDSC,SDDATE,$G(SDAPTYP))
"RTN","SDM1A",49,0)
 S SDRES=$$GETRES^SDECUTL(SC)
"RTN","SDM1A",50,0)
 S SDAPTYP=$G(SDAPTYP) S:SDAPTYP="" SDAPTYP=$$GET1^DIQ(44,SC_",",2507,"I")
"RTN","SDM1A",51,0)
 D SDECADD^SDEC07(SD,$$FMADD^XLFDT(SD,,,+SL),DFN,SDRES,0,SDDATE,"",$S(+SDWL:"E|"_SDWL,+$G(CNSLTLNK):"C|"_CNSLTLNK,+SDREC:"R|"_SDREC,+SDECAR:"A|"_SDECAR,1:""),,SC,,,,SDAPTYP) ;ADD SDEC APPOINTMENT ENTRY
"RTN","SDM1A",52,0)
 ;end addition/modification  ;alb/sat 627
"RTN","SDM1A",53,0)
 ;CREATE 120 FLAG IF APPLICABLE; appt created
"RTN","SDM1A",54,0)
FLG N SDST S SDST=$G(^TMP($J,"APPT",1)) I +SDST>0 D
"RTN","SDM1A",55,0)
 .Q  ; sd/446
"RTN","SDM1A",56,0)
 .N SDT,SDDES,SDPAR,SDDES1,SDT1 S SDPAR=0 S SDT=+SDST,SDDES=$P(SDST,U,17) I SDDES="" S SDDES=DT ; today's date if no desired date
"RTN","SDM1A",57,0)
 .S X=SDT D H^%DTC S SDT1=%H
"RTN","SDM1A",58,0)
 .S X=SDDES D H^%DTC S SDDES1=%H
"RTN","SDM1A",59,0)
 .I SDT1-SDDES1>120 N SD120,SD120A S SD120=1,SD120A=1  D
"RTN","SDM1A",60,0)
 ..; CREATE ewl eN SDPR S SDPR=$S(SDDES=DT:"A",1:"F") entry with 120 flag
"RTN","SDM1A",61,0)
 ..N SDPR S SDPR=$S(SDDES=DT:"A",1:"F") ;10
"RTN","SDM1A",62,0)
 ..N SDWLIN S SDWLIN=+$P(SDST,U,15) ;2
"RTN","SDM1A",63,0)
 ..N SDWLSCPR S SDWLSCPR=0 I +$P(SDST,U,10)=11 S SDWLSCPR=1 ;15
"RTN","SDM1A",64,0)
 ..N SC,SDWLSCL S SC=+$P(SDST,U,2) D
"RTN","SDM1A",65,0)
 ...I $D(^SDWL(409.32,"B",SC)) S SDWLSCL=$O(^SDWL(409.32,"B",SC,"")) Q  ;8
"RTN","SDM1A",66,0)
 ...;create 409.32 entry
"RTN","SDM1A",67,0)
 ...N DA,DIC S DIC(0)="LX",X=SC,DIC="^SDWL(409.32," D FILE^DICN
"RTN","SDM1A",68,0)
 ...S SDWLSCL=DA
"RTN","SDM1A",69,0)
 ...S DIE="^SDWL(409.32,"
"RTN","SDM1A",70,0)
 ...S DR=".02////^S X=SDWLIN" D ^DIE
"RTN","SDM1A",71,0)
 ...S DR="1////^S X=DT"
"RTN","SDM1A",72,0)
 ...S DR=DR_";2////^S X=DUZ"
"RTN","SDM1A",73,0)
 ...D ^DIE S SDPAR=1
"RTN","SDM1A",74,0)
 ..N DA S DIC(0)="LX",(X,SDWLDFN)=+$P(SDST,U,4),X=SDWLDFN,DIC="^SDWL(409.3," D FILE^DICN
"RTN","SDM1A",75,0)
 ..F  L +^SDWL(409.3,DA):$G(DILOCKTM,5) Q:$T  D
"RTN","SDM1A",76,0)
 ...I '$T W !,"Unable to acquire a lock on the Wait List file" Q
"RTN","SDM1A",77,0)
 ..; Update EWL variables.
"RTN","SDM1A",78,0)
 ..S SDWLDA=DA D EN^SDWLE11 ; get enrollee both SDWLDA and SDWLDFN have to be
"RTN","SDM1A",79,0)
 ..N SDWLCM S SDWLCM=" > 120 days; appt created"
"RTN","SDM1A",80,0)
 ..N SDWLSCPG S SDWLSCPG=$S($P($G(^DPT(SDWLDFN,.3)),U,1)="Y":$P(^(.3),U,2),1:"")
"RTN","SDM1A",81,0)
 ..S DR="1////^S X=DT"
"RTN","SDM1A",82,0)
 ..S DR=DR_";2////^S X=SDWLIN"
"RTN","SDM1A",83,0)
 ..S DR=DR_";4////^S X=4"
"RTN","SDM1A",84,0)
 ..S DR=DR_";8////^S X=SDWLSCL"
"RTN","SDM1A",85,0)
 ..S DR=DR_";9////^S X=DUZ"
"RTN","SDM1A",86,0)
 ..S DR=DR_";10////^S X=SDPR"
"RTN","SDM1A",87,0)
 ..S DR=DR_";11////^S X=2" ; by patient for this entry to avoid asking for provider
"RTN","SDM1A",88,0)
 ..S DR=DR_";14////^S X=SDWLSCPG"
"RTN","SDM1A",89,0)
 ..S DR=DR_";15////^S X=SDWLSCPR"
"RTN","SDM1A",90,0)
 ..S DR=DR_";22////^S X=SDDES"
"RTN","SDM1A",91,0)
 ..S DR=DR_";23////^S X=""O"""
"RTN","SDM1A",92,0)
 ..S DR=DR_";25////^S X=SDWLCM"
"RTN","SDM1A",93,0)
 ..S DR=DR_";36////^S X=SD120"
"RTN","SDM1A",94,0)
 ..S DR=DR_";39////^S X=SD120A"
"RTN","SDM1A",95,0)
 ..S DIE="^SDWL(409.3,"
"RTN","SDM1A",96,0)
 ..D ^DIE
"RTN","SDM1A",97,0)
 ..L -^SDWL(409.3,DA)
"RTN","SDM1A",98,0)
 ..D MESS^SDWL120(SDWLDFN,SC,SDT,SDPAR)
"RTN","SDM1A",99,0)
 ;continue appointment entry process
"RTN","SDM1A",100,0)
ORD S %=2 W !,"WANT PATIENT NOTIFIED OF LAB,X-RAY, OR EKG STOPS" D YN^DICN I '% W !,"  Enter YES to notify patient on appt. letter of LAB, X-RAY, or EKG stops" G ORD
"RTN","SDM1A",101,0)
 I '(%-1) D ORDY^SDM3
"RTN","SDM1A",102,0)
OTHER R !,"  OTHER INFO: ",D:DTIME I D["^" W !,*7,"'^' not allowed - hit return if no 'OTHER INFO' is to be entered" G OTHER
"RTN","SDM1A",103,0)
 S TMPD=D I $L(D)>150 D MSG^SDMM G OTHER ;SD/478
"RTN","SDM1A",104,0)
 I D]"",D?."?"!(D'?.ANP) W "  ENTER LAB, SCAN, ETC." G OTHER
"RTN","SDM1A",105,0)
 I $L($G(^SC(SC,"S",SD,1,SDY,0)))+$L(D)+$L(DT)+$S($D(DUZ):$L(DUZ),1:0)>250 D MSG^SDMM G OTHER  ; sd/446
"RTN","SDM1A",106,0)
 ;S $P(^(0),"^",4)=D,$P(^(0),U,6,7)=$S($D(DUZ):DUZ,1:"")_U_DT ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,0)
"RTN","SDM1A",107,0)
 S $P(^(0),"^",4)=D ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,0) 544 moved DUZ&DT to tag S1.
"RTN","SDM1A",108,0)
 D:$D(TMP) LINK^SDCNSLT(SC,SDY,SD,CNSLTLNK) ;SD/478
"RTN","SDM1A",109,0)
 D:$D(TMP) EDITCS^SDCNSLT(SD,TMPD,TMPYCLNC,CNSLTLNK) ;SD/478
"RTN","SDM1A",110,0)
 K TMP  ;SD/478
"RTN","SDM1A",111,0)
XR I $S('$D(^SC(SC,"RAD")):1,^("RAD")="Y":0,^("RAD")=1:0,1:1) S %=2 W !,"WANT PREVIOUS X-RAY RESULTS SENT TO CLINIC" D YN^DICN G:'% HXR I '(%-1) S ^SC("ARAD",SC,SD,DFN)=""
"RTN","SDM1A",112,0)
SDMM S SDEMP=0 I COLLAT=7 S:SDEC'=SDCOL SDEMP=SDCOL G OV
"RTN","SDM1A",113,0)
 D ELIG^VADPT I $O(VAEL(1,0))>0 D ELIG^SDM4:"369"[SDAPTYP S SDEMP=$S(SDDECOD:SDDECOD,1:SDEMP)
"RTN","SDM1A",114,0)
OV Q:$D(SDZM)  K SDQ1,SDEC,SDCOL I +SDEMP S $P(^SC(SC,"S",SD,1,SDY,0),"^",10)=+SDEMP
"RTN","SDM1A",115,0)
 S SDMADE=1 D EVT
"RTN","SDM1A",116,0)
LET ; SD*5.3*622 - help user print the PRE-APPT letter for a patient
"RTN","SDM1A",117,0)
 ; check for a PRE-APPT letter defined and if none, don't issue a device prompt
"RTN","SDM1A",118,0)
 N SDFN ; new SDFN to see the patient prompt next time
"RTN","SDM1A",119,0)
 S %=2 W !!,"WANT TO PRINT THE PRE-APPOINTMENT LETTER" D YN^DICN I %=0 W !,"RESPOND YES (Y) OR NO (N)" G:'% LET
"RTN","SDM1A",120,0)
 I (%=2)!(%=-1) Q
"RTN","SDM1A",121,0)
 I $P($G(^SC(SC,"LTR")),U,2)="" D  Q
"RTN","SDM1A",122,0)
 . W $C(7),!!,"PATIENT "_$P(^DPT(DFN,0),U,1)," ",$P(^(0),U,9)," HAS FUTURE APPTS., but"
"RTN","SDM1A",123,0)
 . W !,$P(^SC(SC,0),U,1)_" is not assigned a PRE-APPOINTMENT LETTER",!
"RTN","SDM1A",124,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","SDM1A",125,0)
 ;
"RTN","SDM1A",126,0)
 ; pre-define letter type (P), the division, date for appt, etc.
"RTN","SDM1A",127,0)
 S (SDBD,SDED)=SDTTM,L0="P",SD9=0,VAUTNALL=1,VAUTNI=2,S1="P",SDLT=1,SDV1=1,SDFORM=""
"RTN","SDM1A",128,0)
 S L2=$S(L0="P":"^SDL1",1:"^SDL1"),J=SDBD
"RTN","SDM1A",129,0)
 S (A,SDFN,S)=DFN,L="^SDL1",SDCL=+$P(^SC(SC,0),U,1),SDC=SC,SDX=SDTTM
"RTN","SDM1A",130,0)
 S SDLET=$P(^SC(SC,"LTR"),U,2) ; letter IEN
"RTN","SDM1A",131,0)
 S SDLET1=SDLET
"RTN","SDM1A",132,0)
 I SDY["DPT(" S SDAMTYP="P",SDFN=+SDY
"RTN","SDM1A",133,0)
 I SDY["SC(" S SDAMTYP="C",SDCLN=+SDY
"RTN","SDM1A",134,0)
 ; prepare to queue the letter if the user so desires
"RTN","SDM1A",135,0)
 N %ZIS,POP,ZTDESC,ZTRTN,ZTSAVE
"RTN","SDM1A",136,0)
 S %ZIS("B")="",POP=0,%ZIS="MQ" D ^%ZIS Q:POP
"RTN","SDM1A",137,0)
 I $D(IO("Q")) S ZTRTN="QUE^SDM1A",ZTDESC="PRINT PRE-APPT LETTER",ZTSAVE("*")="" D ^%ZTLOAD,HOME^%ZIS K IO("Q") Q
"RTN","SDM1A",138,0)
 D QUE ; print right away without getting into the queue
"RTN","SDM1A",139,0)
 D HOME^%ZIS
"RTN","SDM1A",140,0)
 Q
"RTN","SDM1A",141,0)
 ;
"RTN","SDM1A",142,0)
QUE ; execute whether by queue or immediate print request
"RTN","SDM1A",143,0)
 U IO
"RTN","SDM1A",144,0)
 D PRT^SDLT,WRAPP^SDLT
"RTN","SDM1A",145,0)
 ; if there are x-ray, lab, or ekg appts, print them too
"RTN","SDM1A",146,0)
 S SDATA=$G(^DPT(DFN,"S",SDX,0))
"RTN","SDM1A",147,0)
 I $D(SDATA) F B=3,4,5 D
"RTN","SDM1A",148,0)
 . S SDCL=$S(B=3:"LAB",B=4:"XRAY",1:"EKG")
"RTN","SDM1A",149,0)
 . S SDX=$P($G(SDATA),U,B)
"RTN","SDM1A",150,0)
 . S SC=SDCL Q:$G(SDX)=""  D FORM^SDLT
"RTN","SDM1A",151,0)
 ;
"RTN","SDM1A",152,0)
 D REST^SDLT
"RTN","SDM1A",153,0)
 D ^%ZISC
"RTN","SDM1A",154,0)
 Q  ; SD*5.3*622 - end of changes
"RTN","SDM1A",155,0)
 ;
"RTN","SDM1A",156,0)
HXR W !,"  Enter YES to have previous XRAY results sent to the clinic" G XR
"RTN","SDM1A",157,0)
 Q
"RTN","SDM1A",158,0)
CS S SDCS=+$P(^SC(+SC,0),"^",7) I $S('$D(^DIC(40.7,SDCS,0)):1,'$P(^(0),"^",3):0,1:$P(^(0),"^",3)'>DT) W !!,*7,"** WARNING - CLINIC HAS AN INVALID OR INACTIVE STOP CODE!!!",!!
"RTN","SDM1A",159,0)
 S SDCS=+$P(^SC(+SC,0),"^",18) I $S('SDCS:0,'$D(^DIC(40.7,SDCS,0)):1,'$P(^(0),"^",3):0,1:$P(^(0),"^",3)'>DT) W !!,*7,"** WARNING - CLINIC HAS AN INVALID OR INACTIVE CREDIT STOP CODE!!!",!!
"RTN","SDM1A",160,0)
 K SDCS Q
"RTN","SDM1A",161,0)
STATUS(SDCL,SDINP,SDT) ; -- determine status for NEW appts
"RTN","SDM1A",162,0)
 Q $S(SDINP]"":SDINP,$$CHK(.SDCL,.SDT):"NT",1:"")
"RTN","SDM1A",163,0)
CHK(SDCL,SDT) ; -- should appt be NT'ed
"RTN","SDM1A",164,0)
 ; -- non-count clinic check := don't NT appt
"RTN","SDM1A",165,0)
 ; -- appt update executed   := need to NT appt
"RTN","SDM1A",166,0)
 ; -- otherwise              := don't NT appt
"RTN","SDM1A",167,0)
 Q $S($P($G(^SC(SDCL,0)),U,17)="Y":0,$D(^SDD(409.65,"AUPD",$P(SDT,"."))):1,1:0)
"RTN","SDM1A",168,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDM1A",169,0)
 D MAKE^SDAMEVT(DFN,SD,SC,SDY,0)
"RTN","SDM1A",170,0)
 Q
"RTN","SDM1A",171,0)
REQ(SDT) ; -- which is required check in(CI) or out(CO)
"RTN","SDM1A",172,0)
 Q $S($$REQDT()>SDT:"CI",1:"CO")
"RTN","SDM1A",173,0)
REQDT() ; -- co required date
"RTN","SDM1A",174,0)
 Q $S($P(^DG(43,1,"SCLR"),U,23):$P(^("SCLR"),U,23),1:2931001)
"RTN","SDM1A",175,0)
COCMP(DFN,SDT) ; -- date CO completed
"RTN","SDM1A",176,0)
 Q $P($G(^SCE(+$P($G(^DPT(DFN,"S",SDT,0)),U,20),0)),U,7)
"RTN","SDM1A",177,0)
CI(SDCL,SDT,SDDA,SDACT) ; -- ok to update DPT
"RTN","SDM1A",178,0)
 N C
"RTN","SDM1A",179,0)
 I '$$CHK(.SDCL,.SDT) G CIQ
"RTN","SDM1A",180,0)
 I $$REQ(SDT)'="CI" G CIQ
"RTN","SDM1A",181,0)
 I SDACT="SET",$D(^DPT(+^SC(SDCL,"S",SDT,1,SDDA,0),"S",SDT,0)),$P(^(0),U,2)="NT" S $P(^(0),U,2)=""
"RTN","SDM1A",182,0)
 I SDACT="KILL" S C=$G(^SC(SDCL,"S",SDT,1,SDDA,"C")) I $D(^DPT(+$G(^(0)),"S",SDT,0)),$P(^(0),U,2)="",'$P(C,U,3) S $P(^(0),U,2)="NT"
"RTN","SDM1A",183,0)
CIQ Q
"RTN","SDM1A",184,0)
CO(SDCL,SDT,SDDA,SDACT) ; -- ok to update DPT
"RTN","SDM1A",185,0)
 N DFN,C
"RTN","SDM1A",186,0)
 I '$$CHK(.SDCL,.SDT) G COQ
"RTN","SDM1A",187,0)
 I $$REQ(.SDT)'="CO" D  G COQ
"RTN","SDM1A",188,0)
 .I SDACT="SET",$D(^DPT(+^SC(SDCL,"S",SDT,1,SDDA,0),"S",SDT,0)),$P(^(0),U,2)="NT" S $P(^(0),U,2)=""
"RTN","SDM1A",189,0)
 .I SDACT="KILL" S C=$G(^SC(SDCL,"S",SDT,1,SDDA,"C")) I $D(^DPT(+$G(^(0)),"S",SDT,0)),$P(^(0),U,2)="",'C S $P(^(0),U,2)="NT"
"RTN","SDM1A",190,0)
 S DFN=+^SC(SDCL,"S",SDT,1,SDDA,0)
"RTN","SDM1A",191,0)
 D UPD(.DFN,.SDT,$$COCMP(.DFN,.SDT),$S(SDACT="SET":X,1:""))
"RTN","SDM1A",192,0)
COQ Q
"RTN","SDM1A",193,0)
UPD(DFN,SDT,SDCOCMP,SDCODT) ; -- update status
"RTN","SDM1A",194,0)
 N Y
"RTN","SDM1A",195,0)
 I $D(^DPT(DFN,"S",SDT,0)) S Y=$P(^(0),U,2) D
"RTN","SDM1A",196,0)
 .I 'SDCOCMP!('SDCODT) S:Y="" $P(^DPT(DFN,"S",SDT,0),U,2)="NT" Q
"RTN","SDM1A",197,0)
 .S:Y="NT" $P(^DPT(DFN,"S",SDT,0),U,2)=""
"RTN","SDM1A",198,0)
 Q
"RTN","SDM1A",199,0)
OE(SDOE,SDACT) ; -- called by x-ref on co completed field(#.07) in ^SCE
"RTN","SDM1A",200,0)
 N Y S Y=^SCE(SDOE,0)
"RTN","SDM1A",201,0)
 I $P(Y,U,8)'=1 G OEQ
"RTN","SDM1A",202,0)
 I $$REQ(+Y)'="CO" G OEQ
"RTN","SDM1A",203,0)
 I '$$CANT(+$P(Y,U,2),+Y,SDOE),'$$CHK(+$P(Y,U,4),+Y) G OEQ
"RTN","SDM1A",204,0)
 D UPD(+$P(Y,U,2),+Y,$S(SDACT="SET":X,1:""),$P($G(^SC(+$P(Y,U,4),"S",+Y,1,+$P(Y,U,9),"C")),U,3))
"RTN","SDM1A",205,0)
OEQ Q
"RTN","SDM1A",206,0)
CONF(SDSRTY,SDSRFU,DFN,SDT,SC) ;Confirm scheduling request type
"RTN","SDM1A",207,0)
 ;Input: SDSRTY=request type
"RTN","SDM1A",208,0)
 ;Input: SDSRFU=follow-up indicator
"RTN","SDM1A",209,0)
 ;Input: DFN=patient ien
"RTN","SDM1A",210,0)
 ;Input: SDT=appointment date/time
"RTN","SDM1A",211,0)
 ;Input: SC=clinic ifn
"RTN","SDM1A",212,0)
 N DIR,DIE,DA,DR,SDX,SDY,X,Y
"RTN","SDM1A",213,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","SDM1A",214,0)
 S DIR("A")="THIS APPOINTMENT IS MARKED AS '"_SDSRTY(0)_"', IS THIS CORRECT"
"RTN","SDM1A",215,0)
 W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDM1A",216,0)
 I 'Y S SDX='SDSRTY,SDX(0)=$$TXRT(.SDX) W !!,"THIS APPOINTMENT HAS NOW BEEN MARKED AS '"_$S('SDSRTY:"",1:"NOT ")_"NEXT AVAILABLE'."
"RTN","SDM1A",217,0)
 ;S DIR("A")="THIS APPOINTMENT IS DEFINED AS '"_$S(SDSRFU:"FOLLOW-UP",1:"OTHER THAN FOLLOW-UP")_"', OK"
"RTN","SDM1A",218,0)
 ;W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDM1A",219,0)
 ;I 'Y S SDY='SDSRFU W "  (changed)"
"RTN","SDM1A",220,0)
 Q:'$D(SDX)  S DR=""
"RTN","SDM1A",221,0)
 I $D(SDX) S DR="25///^S X=$P(SDX,U,2);26///^S X=$$NAVA^SDMANA(SC,SDT,$P(SDX,U,2))"
"RTN","SDM1A",222,0)
 ;I $D(SDY) S:$L(DR) DR=DR_";" S DR=DR_"26///^S X=SDY"
"RTN","SDM1A",223,0)
 S DA=SDT,DA(1)=DFN
"RTN","SDM1A",224,0)
 S DIE="^DPT(DA(1),""S""," D ^DIE
"RTN","SDM1A",225,0)
 Q
"RTN","SDM1A",226,0)
TXRT(SDSRTY)    ;Transform request type
"RTN","SDM1A",227,0)
 ;Input: SDSRTY=variable to return request type (pass by reference)
"RTN","SDM1A",228,0)
 ;Output: external text for SDSRTY(0)
"RTN","SDM1A",229,0)
 I SDSRTY S SDSRTY=SDSRTY_U_"N" Q "NEXT AVAILABLE"
"RTN","SDM1A",230,0)
 S SDSRTY=SDSRTY_U_"O" Q "NOT NEXT AVAILABLE"
"RTN","SDM1A",231,0)
CANT(DFN,SDT,SDOE) ;Determine if clinic appt. has been marked "NT"
"RTN","SDM1A",232,0)
 ;Output: '1' if appt. points to encounter and is marked "NT", otherwise '0'
"RTN","SDM1A",233,0)
 N SDAPP S SDAPP=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDM1A",234,0)
 Q:$P(SDAPP,U,20)'=SDOE 0
"RTN","SDM1A",235,0)
 Q $P(SDAPP,U,2)="NT"
"RTN","SDM1A",236,0)
SDGET(SDWLIST)  ;build array of wait list entries that are in ^TMP($J,"SDWLPL")
"RTN","SDM1A",237,0)
 N SDI
"RTN","SDM1A",238,0)
 K SDWLIST
"RTN","SDM1A",239,0)
 S SDI="" F  S SDI=$O(^TMP($J,"SDWLPL",SDI)) Q:SDI=""  D
"RTN","SDM1A",240,0)
 .S SDWLIST(+$G(^TMP($J,"SDWLPL",SDI)))=""
"RTN","SDM1A",241,0)
 Q
"RTN","SDM1A",242,0)
 ; -- Variable doc for above tags
"RTN","SDM1A",243,0)
 ;     SDCL := file 44 ien
"RTN","SDM1A",244,0)
 ;      SDT := appt date/time
"RTN","SDM1A",245,0)
 ;      DFN := file 2 ien
"RTN","SDM1A",246,0)
 ;     SDDA := ^SC(SDCL,"S",SDT,1,SDDA,0)
"RTN","SDM1A",247,0)
 ;    SDACT := current x-ref action 'set' or 'kill'
"RTN","SDM1A",248,0)
 ;  SDCOCMP := check out completed date
"RTN","SDM1A",249,0)
 ;   SDCODT := check out date/time
"RTN","SDM1A",250,0)
 ;     SDOE := Outpatient Encounter ien
"RTN","SDM1A",251,0)
 ;    SDINP := inpatient status ('I' or null)
"RTN","SDM1A",252,0)
 ;    SDINP := inpatient status ('I' or null)
"RTN","SDM1A",253,0)
 ;
"RTN","SDM1A",254,0)
SDWL(SDWLIST)  ;determine EWL that was closed for this appointment   ;alb/sat  SD/627
"RTN","SDM1A",255,0)
 N SDI
"RTN","SDM1A",256,0)
 S SDI="" F  S SDI=$O(^TMP($J,"SDWLPL",SDI)) Q:SDI=""  D
"RTN","SDM1A",257,0)
 .I $D(SDWLIST(+$G(^TMP($J,"SDWLPL",SDI)))) K SDWLIST(+$G(^TMP($J,"SDWLPL",SDI)))
"RTN","SDM1A",258,0)
 Q $O(SDWLIST(0))
"RTN","SDM1A",259,0)
SDWLA(DFN,SD,SDSC,SDDATE,SDAPTYP)  ;add SDEC APPT REQUEST entry  ;alb/sat  SD/627
"RTN","SDM1A",260,0)
 ;INPUT:
"RTN","SDM1A",261,0)
 ; DFN
"RTN","SDM1A",262,0)
 ; SD     = appointment date/time in fm format
"RTN","SDM1A",263,0)
 ; SDSC   = clinic code pointer to HOSPITAL LOCATION file
"RTN","SDM1A",264,0)
 ; SDDATE = desired date of appointment
"RTN","SDM1A",265,0)
 ; SDAPTYP = pointer to APPOINTMENT TYPE file 409.1
"RTN","SDM1A",266,0)
 N SDECINP,SDWLSTAT,SDARIEN,SDWLRET
"RTN","SDM1A",267,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDM1A",268,0)
 ;get clinic location name
"RTN","SDM1A",269,0)
 K ^TMP("SDEC50",$J,"PCSTGET")
"RTN","SDM1A",270,0)
 D PCSTGET^SDEC(.SDWLRET,DFN,SDSC)
"RTN","SDM1A",271,0)
 S SDWLSTAT=$P($P($G(^TMP("SDEC50",$J,"PCSTGET",1)),$C(30),1),U,2)
"RTN","SDM1A",272,0)
 K ^TMP("SDEC50",$J,"PCSTGET")
"RTN","SDM1A",273,0)
 ;set appt request entry
"RTN","SDM1A",274,0)
 S SDECINP(1)=""
"RTN","SDM1A",275,0)
 S SDECINP(2)=DFN                 ;patient
"RTN","SDM1A",276,0)
 S SDECINP(3)=$E($$NOW^XLFDT,1,12)  ;originating date/time
"RTN","SDM1A",277,0)
 S SDECINP(4)=DUZ(2)              ;institution
"RTN","SDM1A",278,0)
 S SDECINP(5)="APPOINTMENT"   ;wait list type - specific clinic
"RTN","SDM1A",279,0)
 S SDECINP(6)=SDSC               ;clinic
"RTN","SDM1A",280,0)
 S SDECINP(7)=DUZ                ;originating user
"RTN","SDM1A",281,0)
 S SDECINP(8)="ASAP"             ;priority
"RTN","SDM1A",282,0)
 S SDECINP(9)="PATIENT"          ;requested by
"RTN","SDM1A",283,0)
 S SDECINP(11)=SDDATE             ;desired date of appointment
"RTN","SDM1A",284,0)
 ;S SDECINP(16)=$S(SDWLSTAT="YES":"ESTABLISHED",1:"NEW")
"RTN","SDM1A",285,0)
 S SDECINP(14)="NO"               ;multiple appointment RTC
"RTN","SDM1A",286,0)
 S SDECINP(15)=0
"RTN","SDM1A",287,0)
 S SDECINP(16)=0
"RTN","SDM1A",288,0)
 S:+SDAPTYP SDECINP(22)=+SDAPTYP  ;appointment type
"RTN","SDM1A",289,0)
 K SDWLRET
"RTN","SDM1A",290,0)
 S SDWLRET=""
"RTN","SDM1A",291,0)
 D ARSET1^SDEC(.SDWLRET,.SDECINP)
"RTN","SDM1A",292,0)
 S SDARIEN=$P($P(SDWLRET,$C(30),2),U,1)
"RTN","SDM1A",293,0)
 S SDWLRET=""
"RTN","SDM1A",294,0)
 Q:'$D(^SDEC(409.85,+SDARIEN,0)) ""
"RTN","SDM1A",295,0)
 ;close appt request entry
"RTN","SDM1A",296,0)
 K INP
"RTN","SDM1A",297,0)
 S INP(1)=SDARIEN
"RTN","SDM1A",298,0)
 S INP(2)="REMOVED/SCHEDULED-ASSIGNED"
"RTN","SDM1A",299,0)
 S INP(3)=DUZ
"RTN","SDM1A",300,0)
 S INP(4)=$P(SD,".",1)
"RTN","SDM1A",301,0)
 D ARCLOSE1^SDEC(.SDWLRET,.INP)
"RTN","SDM1A",302,0)
 Q SDARIEN
"RTN","SDN")
0^126^B32745405^B30846315
"RTN","SDN",1,0)
SDN ;SF/GFT,ALB/LDB - RECORD NO SHOWS ;JAN 15, 2016
"RTN","SDN",2,0)
 ;;5.3;Scheduling;**32,79,398,478,627**;Aug 13, 1993;Build 249
"RTN","SDN",3,0)
 ;
"RTN","SDN",4,0)
 N SDATA ; for evt driver
"RTN","SDN",5,0)
 S U="^" D NOW^%DTC S SDTIME=%,SDLT1="" K ^UTILITY($J),SDCP,SDLT D LO^DGUTL
"RTN","SDN",6,0)
 S SDDT=DT,SDV1=$O(^DG(40.8,0)) D DIV^SDUTL I $T S DIC=40.8,DIC(0)="AEQM" S SDLT=1 D NSLET1^SDDIV K SDLT G:Y<0 END^SDN0 S SDV1=DIV
"RTN","SDN",7,0)
7 R !!,"NO-SHOWS FOR WHAT DATE: ",X:DTIME Q:U[X  S %DT="EP",%DT(0)=-DT D ^%DT G 7:Y<0 S SDT=Y,SDYES=""
"RTN","SDN",8,0)
 S SM="S SDCT=0 F I=SD1:0:SD2 S I=$N(^DPT(+Y,""S"",I)) S:I<0!(I'<SD2) I=9999999 I I\1=SDT,$D(^(I,0)),+^(0)=SC,$P(^(0),U,2)'[""C"",'$$CODT^SDCOU(+Y,I,SC) Q"
"RTN","SDN",9,0)
 S SM1="S SDCT=0 F I=SD1:0 S I=$N(^DPT(+Y,""S"",I)) Q:I<0!(I'<SD2)  I I\1=SDT,$D(^(I,0)),+^(0)=SC,$P(^(0),""^"",2)'[""C"",'$$CODT^SDCOU(+Y,I,SC) S SDCT=SDCT+1,SDT(SDCT)=I"
"RTN","SDN",10,0)
71 W ! K DIC S SC=0,DIC="^SC(",DIC(0)="AEMQ",DIC("A")="Select CLINIC NAME: ",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS"")),$S($P(^(0),""^"",15)=SDV1:1,'$P(^(0),""^"",15):1,'SDV1:1,1:0)"
"RTN","SDN",11,0)
 D ^DIC K DIC("A"),DIC("S") G 73:Y<0 S SC=+Y,SD1=SDT,SD2=SDT+1 S SDMSG=" DOES NOT HAVE A NO-SHOW LETTER ASSIGNED TO IT!"
"RTN","SDN",12,0)
72 Q:$D(SDNSACT)  S SD1=SDT,DIC="^DPT(",DIC(0)="AEMQ",DIC("S")=SM
"RTN","SDN",13,0)
 K SDT S SDT=SD1
"RTN","SDN",14,0)
 D ^DIC K DIC("S") G 71:"^"[X,72:Y<0 S DFN=+Y X SM1 D SDMLT Q:'SDCT  S I=SDT(SDCT)
"RTN","SDN",15,0)
EN1 ; -- entry pt for protocol action
"RTN","SDN",16,0)
 S SDSTAT=$P(^DPT(+DFN,"S",I,0),U,2) I SDSTAT="I" D NS^SDN2 G 72
"RTN","SDN",17,0)
 I SDSTAT=""!(SDSTAT="NT") D  G 72
"RTN","SDN",18,0)
 .N SDNSHDL,SDDA S SDNSHDL=$$HANDLE^SDAMEVT(1),SDDA=$$FIND^SDAM2(DFN,I,SC)
"RTN","SDN",19,0)
 .S SDDTM=I D BEFORE^SDAMEVT(.SDATA,DFN,SDDTM,SC,SDDA,SDNSHDL)
"RTN","SDN",20,0)
 .S $P(^DPT(+DFN,"S",I,0),U,2)="N",$P(^(0),"^",14)=SDTIME S:$D(DUZ) $P(^(0),"^",12)=DUZ
"RTN","SDN",21,0)
 .;update SDEC APPOINTMENT   ;alb/sat  SD/627
"RTN","SDN",22,0)
 .N SDECAPPT S SDECAPPT=$$APPTGET^SDECUTL(DFN,SDDTM,SC)
"RTN","SDN",23,0)
 .D SDECNOS^SDEC31(SDECAPPT,1,DUZ,SDTIME)
"RTN","SDN",24,0)
 .;end addition/modification  ;alb/sat SD/627
"RTN","SDN",25,0)
 .S:'SDYES SDYES=1
"RTN","SDN",26,0)
 .S:'$D(^UTILITY($J,"CL",DFN,SC,I))&(SDSTAT'="C") ^(I)=""
"RTN","SDN",27,0)
 .W "...OK   New Status: ",$P($$STATUS^SDAM1(DFN,I,SC,^DPT(DFN,"S",I,0),SDDA),";",3)
"RTN","SDN",28,0)
 .D EVT K SDATA
"RTN","SDN",29,0)
 W:$P(^DPT(+DFN,"S",I,0),U,2)["A" *7,!,"THIS APPOINTMENT ALREADY A NO-SHOW AND REBOOKED... ARE YOU SURE YOU"
"RTN","SDN",30,0)
ALNS S %=2 W:$P(^DPT(+DFN,"S",I,0),U,2)'["A" !,*7,"  ALREADY RECORDED AS NO-SHOW..." W " WANT TO ERASE" D YN^DICN I '% W !,"RESPOND YES OR NO" G ALNS
"RTN","SDN",31,0)
 I (%-1) G 72
"RTN","SDN",32,0)
 I '(%-1) W "...NO LONGER A NO-SHOW!" D
"RTN","SDN",33,0)
 .N SDNSHDL,SDDA S SDNSHDL=$$HANDLE^SDAMEVT(1),SDDA=$$FIND^SDAM2(DFN,I,SC)
"RTN","SDN",34,0)
 .S SDDTM=I D BEFORE^SDAMEVT(.SDATA,DFN,SDDTM,SC,SDDA,SDNSHDL)
"RTN","SDN",35,0)
 .S SDINP=$$INP^SDAM2(DFN,SDDTM),X=I,Y=DFN
"RTN","SDN",36,0)
 .S $P(^DPT(+Y,"S",SDDTM,0),U,2)=$S(SDINP["I":SDINP,1:""),$P(^(0),"^",14)="",$P(^(0),"^",12)=""
"RTN","SDN",37,0)
 .I SDINP="",$$CHK^SDM1A(SC,SDDTM),+$$STATUS^SDAM1(DFN,SDDTM,SC,^DPT(DFN,"S",SDDTM,0),SDDA)'=1 S $P(^DPT(DFN,"S",SDDTM,0),U,2)="NT" ; not inpt and not ci
"RTN","SDN",38,0)
 .D EVT K SDATA
"RTN","SDN",39,0)
 .K SDINP,^UTILITY($J,"CL",+Y,SC,SDDTM),SDDTM
"RTN","SDN",40,0)
 G 72
"RTN","SDN",41,0)
73 ;
"RTN","SDN",42,0)
 G:SDYES ASKA G END^SDN0
"RTN","SDN",43,0)
CK1 S SD1=I X SM I I<SD2,$P(^DPT(+Y,"S",I,0),U,2)["C" S POP=1
"RTN","SDN",44,0)
 S:I'<SD2 POP=1 Q:'POP  I I'<SD2 S POP=1 Q
"RTN","SDN",45,0)
 G CK1
"RTN","SDN",46,0)
ASKA S %=2,DTOUT=0 W !,"WANT TO AUTO-REBOOK NO-SHOW APPOINTMENTS NOW" D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G ASKA
"RTN","SDN",47,0)
 W:DTOUT " NO" S ANS=$S(%=1:"Y",1:"N"),(SDED,DATEND)=SDT+.9
"RTN","SDN",48,0)
 I $D(SDNSACT),'SDNSACT,%=1 S SDNSACT=1 ;No-show action flag
"RTN","SDN",49,0)
ASKL S %=1,DTOUT=0,SDLET="" W !,"WANT LETTERS PRINTED NOW" D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G ASKL
"RTN","SDN",50,0)
 W:DTOUT " NO" S ALS=$S(%=1:"Y",1:"N")
"RTN","SDN",51,0)
 I $D(SDNSACT),(ALS="Y"),$$BADADR^DGUTL3(+DFN) D  ;display, don't print BAI list
"RTN","SDN",52,0)
 . W *7,!,"** THIS PATIENT HAS BEEN FLAGGED WITH A BAD ADDRESS INDICATOR, NO LETTER"
"RTN","SDN",53,0)
 . W !,"WILL BE PRINTED."
"RTN","SDN",54,0)
 . S ALS="N"
"RTN","SDN",55,0)
 . S DIR(0)="E" D ^DIR K DIR(0)
"RTN","SDN",56,0)
 I ALS'["Y"&(ANS'["Y") D DIS^SDNDIS G END^SDN0
"RTN","SDN",57,0)
RD1 I $D(SDNSACT) S Y=SC G RD2
"RTN","SDN",58,0)
 R !!,"FOR CLINIC: ALL// ",X:DTIME K C,DIC Q:X="^"  S X=$$UP^XLFSTR(X) G AOR:X="ALL"!(X="") I X?.E1"?" W !,?3,"ENTER A CLINIC NAME, OR 'ALL' FOR ALL CLINICS" G RD1
"RTN","SDN",59,0)
 S DIC(0)="QEM",DIC=44,DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC("S") G:Y<0 RD1
"RTN","SDN",60,0)
RD2 S C=+Y I '$D(^SC(C,"LTR")) W !,$P(^SC(C,0),"^")_SDMSG S ALS="N"
"RTN","SDN",61,0)
 I $D(^SC(C,"LTR")),'+^("LTR") W !,$P(^SC(C,0),"^")_SDMSG S ALS="N"
"RTN","SDN",62,0)
 I $D(^SC(C,"LTR")),+^("LTR") S SDLET=+^("LTR")
"RTN","SDN",63,0)
AOR S:'$D(C) C="ALL" I ANS'["Y"&(ALS'["Y") D DIS^SDNDIS G END^SDN0
"RTN","SDN",64,0)
 D DIS^SDNDIS
"RTN","SDN",65,0)
 ;S DGPGM="START^SDN0",DGVAR="SC^SDDT^ALS^ANS^SDLET^SDV1^SDT^C^DATEND^SDTIME^SDLT1"
"RTN","SDN",66,0)
 ;S POP=0 D ZIS^DGUTQ G:POP END^SDN0
"RTN","SDN",67,0)
 S %ZIS="MQ" K IO("Q") D ^%ZIS G:POP END^SDN0
"RTN","SDN",68,0)
 I $D(IO("Q")) D  D:IO'=IO(0) NSLTR W @IOF G END^SDN0
"RTN","SDN",69,0)
 .S ZTRTN="START^SDN0" F ZTS="SC","SDDT","ALS","ANS","SDLET","SDV1","SDT","C","DATEND","SDTIME","SDLT1","AUTO(" S ZTSAVE(ZTS)=""
"RTN","SDN",70,0)
 .K ZTS D ^%ZTLOAD
"RTN","SDN",71,0)
 D:IO'=IO(0) NSLTR D START^SDN0,^%ZISC W @IOF G END^SDN0
"RTN","SDN",72,0)
 ;G START^SDN0     ;???
"RTN","SDN",73,0)
 Q
"RTN","SDN",74,0)
NSLTR I ANS["Y",ALS["Y" S:$D(NSDIE) @(NSDIE_NSDA_",1,2,0)")="NO-SHOW AUTO-REBOOK letter printed." K NSDIE,NSDA ;SD/478 AT THIS POINT NO SHOW AUTO REBOOK LETTER IS PRINTED.
"RTN","SDN",75,0)
 I ALS["Y" S:$D(NSDIE) @(NSDIE_NSDA_",1,2,0)")="NO-SHOW letter printed." K NSDIE,NSDA ;SD/478 AT THIS POINT NO SHOW LETTER IS PRINTED.
"RTN","SDN",76,0)
 Q
"RTN","SDN",77,0)
SDMLT ;
"RTN","SDN",78,0)
 N SDCNT,SDSTAT
"RTN","SDN",79,0)
 S SDCNT=SDCT,SDCT=0
"RTN","SDN",80,0)
 F  S SDCT=$O(SDT(SDCT)) Q:'SDCT  D
"RTN","SDN",81,0)
 .S SDSTAT=$$STATUS^SDAM1(DFN,SDT(SDCT),SC,^DPT(DFN,"S",SDT(SDCT),0))
"RTN","SDN",82,0)
 .W !,SDCT,"). ",$$FTIME^VALM1(SDT(SDCT)),"   Status: ",$P(SDSTAT,";",3) W:$P(SDSTAT,";",4) *7
"RTN","SDN",83,0)
 S SDCT=SDCNT
"RTN","SDN",84,0)
ASK I SDCT>1!($P(SDSTAT,";",4)) R !!,"SELECT APPOINTMENT: ",SDCT:DTIME Q:'$T!(U[SDCT)  I SDCT["?"!('$D(SDT(SDCT))) W !,"Please enter one number to indicate which appointment." S SDCT=SDCNT G ASK
"RTN","SDN",85,0)
 W ! Q
"RTN","SDN",86,0)
 ;
"RTN","SDN",87,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDN",88,0)
 N I,SDINP,Y,SDSTAT,SDTIME,SDYES,SM,SM1,SD1,SD2,SDMSG,SDT,SDCT,CNSTLNK,CN,CNPAT
"RTN","SDN",89,0)
 D NOSHOW^SDAMEVT(.SDATA,DFN,SDDTM,SC,SDDA,0,SDNSHDL)
"RTN","SDN",90,0)
 S CNSTLNK="",CN=0 F  S CN=$O(^SC(SC,"S",SDDTM,1,CN)) Q:'+CN  S CNPAT=$P($G(^SC(SC,"S",SDDTM,1,CN,0)),U) I CNPAT=DFN S CNSTLNK=$P($G(^SC(SC,"S",SDDTM,1,CN,"CONS")),U) Q  ;SD/478
"RTN","SDN",91,0)
 D:+CNSTLNK NOSHOW^SDCNSLT(SC,SDDTM,CNPAT,CNSTLNK,CN,.AUTO,.NSDIE,.NSDA) ;SD/478
"RTN","SDN",92,0)
 Q
"RTN","SDN",93,0)
 ;
"RTN","SDNACT")
0^157^B32382178^B29097285
"RTN","SDNACT",1,0)
SDNACT ;ALB/TMP - INACTIVATE A CLINIC ;JAN 15, 2016
"RTN","SDNACT",2,0)
 ;;5.3;Scheduling;**63,380,549,568,622,627**;Aug 13, 1993;Build 249
"RTN","SDNACT",3,0)
 S:'$D(DTIME) DTIME=300 I '$D(DT) D DT^SDUTL
"RTN","SDNACT",4,0)
 S SDAY="Sun^Mon^Tues^Wednes^Thurs^Fri^Satur",SDZQ=1
"RTN","SDNACT",5,0)
 D DT^DICRW S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC NAME: ",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))"
"RTN","SDNACT",6,0)
 D TURNON^DIAUTL(44,".01;8;2502;2503;2505;2506")
"RTN","SDNACT",7,0)
 D ^DIC K DIC("A"),DIC("S") G:Y<0 END S SC=+Y,SDX="",SDX1=9999999
"RTN","SDNACT",8,0)
 N SDRES S SDRES=$$CLNCK^SDUTL2(SC,0)
"RTN","SDNACT",9,0)
 I 'SDRES D
"RTN","SDNACT",10,0)
 .W !,?5,"WARNING:     Clinic's Stop Code ",$P(SDRES,U,2)
"RTN","SDNACT",11,0)
 .W !,?5,"Recommend:   Clinic be corrected."
"RTN","SDNACT",12,0)
 I $D(^SC(SC,"I")),+^("I")'=0,+^("I")'>DT,+$P(^("I"),"^",2)'>0 W *7,!,"This clinic was inactivated effective: " S Y=+^("I") D DTS^SDUTL W Y G END
"RTN","SDNACT",13,0)
 I $D(^SC(SC,"I")),+^("I")>DT G CHECK
"RTN","SDNACT",14,0)
 I $D(^SC(SC,"I")),+^("I")'>DT,+$P(^("I"),"^",2)'<DT W !,*7,"Clinic is already inactive until " S Y=+$P(^("I"),"^",2) D DTS^SDUTL W Y G END
"RTN","SDNACT",15,0)
D S %DT="AEFX",%DT("A")="Enter Date Clinic is to be Inactivated: " D ^%DT K %DT G:Y'>0 END S SDDATE=Y I Y<DT W "??",!,*7,"Inactivate date must be greater than or equal to today's date" G D
"RTN","SDNACT",16,0)
 I SDX<9999999,Y>SDX1,SDX1 W "??",!,*7,"Inactivate date must be < reactivate date" G D
"RTN","SDNACT",17,0)
 S POP=0 F I=SDDATE-.0001:0 S I=$O(^SC(SC,"S",I)) Q:'I!(POP)!(SDDATE'<SDX1&(SDX1))  F I1=0:0 S I1=$O(^SC(SC,"S",I,1,I1)) Q:'I1  I $P(^(I1,0),"^",9)'="C" S POP=1 Q
"RTN","SDNACT",18,0)
 I POP W *7,!,"Can't inactivate the clinic - appointments exist beyond " S Y=SDDATE D DT^DIQ G END
"RTN","SDNACT",19,0)
 I SDX'="" D CHG1 G OVR
"RTN","SDNACT",20,0)
 K SDN S ^SC(SC,"I")="",X=SDDATE D DOW^SDM0 S SDN(Y)=SDDATE F I=1:1:6 S X2=1,X1=X D C^%DTC,DOW^SDM0 S SDN(Y)=X
"RTN","SDNACT",21,0)
 F I=0:1:6 S J=$O(^SC(SC,"T"_I,SDN(I))) D GOT
"RTN","SDNACT",22,0)
OVR F I=SDDATE-.0001:0 S I=$O(^SC(SC,"ST",I)) Q:'I!(I>SDX1)  K ^(I)
"RTN","SDNACT",23,0)
 F I=SDDATE-.0001:0 S I=$O(^SC(SC,"T",I)) Q:'I!(I>SDX1)  K ^(I)
"RTN","SDNACT",24,0)
 F I=SDDATE-.0001:0 S I=$O(^SC(SC,"OST",I)) Q:'I!(I>SDX1)  K ^(I)
"RTN","SDNACT",25,0)
 S DIE="^SC(",DA=SC,DR="2505///^S X=SDDATE" D ^DIE  ;SD*549 use FM API to update field so Audit Trail functions properly
"RTN","SDNACT",26,0)
 D SDEC(SC,SDDATE)  ;alb/sat 627
"RTN","SDNACT",27,0)
 W !!,"Clinic will be inactivated effective " N SDDT S Y=SDDATE D DTS^SDUTL W Y S SDDT=Y D QUE G END ; SD*5.3*622 - call mail delivery
"RTN","SDNACT",28,0)
 ;
"RTN","SDNACT",29,0)
CHECK W *7,!,"This clinic is to be inactivated as of " S SDX=+^("I"),Y=SDX D DTS^SDUTL W Y S SDX1=+$P(^("I"),"^",2),Y=SDX1 I Y D DTS^SDUTL W " and reactivated as of ",Y ;NAKED REFERENCE - ^SC(DFN,"I")
"RTN","SDNACT",30,0)
 S %=1 W !,"Do you want to change the inactivate date" D YN^DICN I '% W !,"RESPOND YES OR NO" G CHECK
"RTN","SDNACT",31,0)
 G D:'(%-1),END:(%<0),DEL
"RTN","SDNACT",32,0)
 ;
"RTN","SDNACT",33,0)
DEL S %=2 W !,"Do you want to delete the inactivate date" D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G DEL
"RTN","SDNACT",34,0)
 G:(%-1) END
"RTN","SDNACT",35,0)
 I '$D(^SC(SC,"SL")) W !,*7,"Cannot Delete - 'SL' node doesn't exist" G END
"RTN","SDNACT",36,0)
 G ^SDNACT1
"RTN","SDNACT",37,0)
CHG1 K SDN S X1=SDDATE,X2=6 D C^%DTC S SDNL=X,X=SDDATE D DOW^SDM0 S SDN(Y)=X
"RTN","SDNACT",38,0)
 F I=1:1:6 S X1=X,X2=1 D C^%DTC,DOW^SDM0 S SDN(Y)=X
"RTN","SDNACT",39,0)
 S X1=SDX,X2=6 D C^%DTC S SDOL=X,X1=SDX,X2=-1 D C^%DTC
"RTN","SDNACT",40,0)
 F I=0:0 S X2=1,X1=X D C^%DTC Q:X>SDOL  D DOW^SDM0 S:$D(^SC(SC,"T"_Y))&($O(^SC(SC,"T"_Y,0))'=9999999) ^SC(SC,"T"_Y,SDN(Y),1)=$S($D(^SC(SC,"T"_Y,X,1)):^(1),1:""),^(0)=SDN(Y) D A1,A
"RTN","SDNACT",41,0)
 I SDDATE<SDX F I=0:1:6 F J=SDNL:0 S J=$O(^SC(SC,"T"_I,J)) Q:'J!(J'<SDX)  K ^SC(SC,"T"_I,J)
"RTN","SDNACT",42,0)
 Q
"RTN","SDNACT",43,0)
A1 S:'$D(^SC(SC,"T"_Y,9999999,1)) ^(1)="",^(0)=9999999 K:(SDN(Y)-X) ^SC(SC,"T"_Y,X)
"RTN","SDNACT",44,0)
 Q
"RTN","SDNACT",45,0)
A I $O(^SC(SC,"T"_Y,SDN(Y)))>0 S SD=$O(^SC(SC,"T"_Y,SDN(Y))) S:^SC(SC,"T"_Y,SD,1)]"" ^SC(SC,"T"_Y,SDN(Y),1)=^SC(SC,"T"_Y,SD,1),^(0)=SDN(Y),^SC(SC,"T"_Y,SD,1)=""
"RTN","SDNACT",46,0)
 I SDX'>SDDATE,$O(^SC(SC,"ST",SDX-.1))>0 F Z=SDX-.1:0 S Z=$O(^SC(SC,"ST",Z)) Q:'Z!(SDX1&(Z'<SDX1))  K ^SC(SC,"ST",Z)
"RTN","SDNACT",47,0)
 K SD,Z Q
"RTN","SDNACT",48,0)
GOT S SD=$O(^SC(SC,"T"_I,0))
"RTN","SDNACT",49,0)
 I J>0,SD'=9999999 S ^SC(SC,"T"_I,SDN(I),1)=^SC(SC,"T"_I,J,1),^(0)=SDN(I) K ^SC(SC,"T"_I,J) F J1=J:0 S J1=$O(^SC(SC,"T"_I,J1)) Q:'J1  K ^SC(SC,"T"_I,J1)
"RTN","SDNACT",50,0)
 S ^SC(SC,"T"_I,9999999,1)="",^(0)=9999999
"RTN","SDNACT",51,0)
 Q
"RTN","SDNACT",52,0)
END K A,DA,CNT,D0,DH,DO,DOW,I,I1,J,J1,POP,SC,SD,SD0,SDAY,SDEL,SDDATE,SDFSW,SDN,SDNL,SDOL,SDREACT,SI,SL,STARTDAY,SDX,SDX1,SDZQ,X,X1,X2,Y,Z,DIE,DR,DIC Q
"RTN","SDNACT",53,0)
 ;
"RTN","SDNACT",54,0)
MAIL ; SD*5.3*622 - send bulletin to advise of clinic inactivation date
"RTN","SDNACT",55,0)
 N SDNAME,SDMYARR,SDTEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","SDNACT",56,0)
 S XMSUB="CLINIC INACTIVATED"
"RTN","SDNACT",57,0)
 S XMY("G.SD CLINIC INACTIVATE REMINDER")=""
"RTN","SDNACT",58,0)
 S XMDUZ=.5
"RTN","SDNACT",59,0)
 S XMY(DUZ)="",XMY(XMDUZ)=""
"RTN","SDNACT",60,0)
 S SDMYARR("FILE")=200
"RTN","SDNACT",61,0)
 S SDMYARR("FIELD")=.01
"RTN","SDNACT",62,0)
 S SDMYARR("IENS")=DUZ
"RTN","SDNACT",63,0)
 S SDNAME=$$BLDNAME^XLFNAME(.SDMYARR) ; covered by IA #3065
"RTN","SDNACT",64,0)
 ;
"RTN","SDNACT",65,0)
 S SDTEXT(1)="CLINIC NAME:   "_$$GET1^DIQ(44,+SC,.01,"E")
"RTN","SDNACT",66,0)
 S SDTEXT(2)="INACTIVATION DATE:   "_SDDT
"RTN","SDNACT",67,0)
 S SDTEXT(3)=" "
"RTN","SDNACT",68,0)
 S SDTEXT(4)="Clinic inactivated by "_SDNAME_" on "_SDDT
"RTN","SDNACT",69,0)
 S SDTEXT(5)=" "
"RTN","SDNACT",70,0)
 S SDTEXT(6)="Please perform the following steps immediately:"
"RTN","SDNACT",71,0)
 S SDTEXT(7)=" "
"RTN","SDNACT",72,0)
 S SDTEXT(8)="1. Add at least 2 Z's (UPPERCASE) in front of the clinic name"
"RTN","SDNACT",73,0)
 S SDTEXT(9)="2. Validate that the Clinic Scheduling Grid has been removed"
"RTN","SDNACT",74,0)
 S SDTEXT(10)=" "
"RTN","SDNACT",75,0)
 S XMTEXT="SDTEXT("
"RTN","SDNACT",76,0)
 D ^XMD
"RTN","SDNACT",77,0)
 Q
"RTN","SDNACT",78,0)
 ;
"RTN","SDNACT",79,0)
QUE ; leave job to TaskMan for dates in the future, otherwise deliver
"RTN","SDNACT",80,0)
 ; message immediately for an inactivation date equal to the current
"RTN","SDNACT",81,0)
 ; date
"RTN","SDNACT",82,0)
 N SDDTH,SDTQ,Y,ZTRTN,ZTIO,ZTSAVE,ZTDESC,ZTDTH
"RTN","SDNACT",83,0)
 S SDTQ=DT
"RTN","SDNACT",84,0)
 I $D(^SC(SC,"I")) D
"RTN","SDNACT",85,0)
 . S SDDT=$P(^SC(+SC,"I"),"^",1)
"RTN","SDNACT",86,0)
 . I SDDT=SDTQ S Y=DT D DTS^SDUTL S SDDT=Y D MAIL Q
"RTN","SDNACT",87,0)
 . I SDDT<SDTQ Q  ; don't care for dates on the past
"RTN","SDNACT",88,0)
 . I SDDT>SDTQ D
"RTN","SDNACT",89,0)
 .. S SDDTH=$$FMTH^XLFDT(SDDT+.0100) ; queue at 1 am on desired date
"RTN","SDNACT",90,0)
 .. S ZTDTH=SDDTH
"RTN","SDNACT",91,0)
 .. S Y=SDDT D DTS^SDUTL S SDDT=Y
"RTN","SDNACT",92,0)
 .. S ZTDESC="CLINIC INACTIVATION REMINDER QUEUE"
"RTN","SDNACT",93,0)
 .. S ZTRTN="QUE^SDNACT"
"RTN","SDNACT",94,0)
 .. S ZTIO="NULL"
"RTN","SDNACT",95,0)
 .. S ZTSAVE("*")=""
"RTN","SDNACT",96,0)
 .. D ^%ZTLOAD
"RTN","SDNACT",97,0)
 Q  ; SD*5.3*622 - end of changes
"RTN","SDNACT",98,0)
 ;
"RTN","SDNACT",99,0)
SDEC(SC,SDDATE) ;update INACTIVATED DATE/TIME in SDEC RESOURCE   ;alb/sat 627
"RTN","SDNACT",100,0)
 N SDFDA,SDI,SDJ,SDRES
"RTN","SDNACT",101,0)
 S SDRES=$$GETRES^SDECUTL(SC)
"RTN","SDNACT",102,0)
 Q:SDRES=""
"RTN","SDNACT",103,0)
 S SDFDA(409.831,SDRES_",",.021)=SDDATE
"RTN","SDNACT",104,0)
 S SDFDA(409.831,SDRES_",",.022)=DUZ
"RTN","SDNACT",105,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDNACT",106,0)
 ;update SDEC RESOURCE GROUP file
"RTN","SDNACT",107,0)
 S SDI="" F  S SDI=$O(^SDEC(409.832,"AB",SDRES,SDI)) Q:SDI=""  D
"RTN","SDNACT",108,0)
 .S SDJ="" F  S SDJ=$O(^SDEC(409.832,"AB",SDRES,SDI,SDJ)) Q:SDJ=""  D
"RTN","SDNACT",109,0)
 ..K SDFDA
"RTN","SDNACT",110,0)
 ..S SDFDA(409.8321,SDJ_","_SDI_",",.01)="@"
"RTN","SDNACT",111,0)
 ..D UPDATE^DIE("","SDFDA")
"RTN","SDNACT",112,0)
 Q
"RTN","SDREACT")
0^158^B21351976^B20261844
"RTN","SDREACT",1,0)
SDREACT ;ALB/TMP - REACTIVATE A CLINIC ;JAN 15, 2016
"RTN","SDREACT",2,0)
 ;;5.3;Scheduling;**63,167,380,568,627**;Aug 13, 1993;Build 249
"RTN","SDREACT",3,0)
 S:'$D(DTIME) DTIME=300 I '$D(DT) D DT^SDUTL
"RTN","SDREACT",4,0)
 S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC NAME: ",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))"
"RTN","SDREACT",5,0)
 D TURNON^DIAUTL(44,".01;8;2502;2503;2505;2506")
"RTN","SDREACT",6,0)
 D ^DIC K DIC G:Y<0 END S DA=+Y I $S('$D(^SC(DA,"I")):1,'$P(^("I"),"^",1):1,1:0) W *7,!,"NOT INACTIVE!!" G SDREACT
"RTN","SDREACT",7,0)
 S SDX=+^SC(DA,"I"),SDX1=+$P(^("I"),"^",2) G:'SDX1 PREACT
"RTN","SDREACT",8,0)
 I SDX1>DT W !,*7,"Clinic is inactive as of " S Y=SDX D DTS^SDUTL W Y S Y=SDX1 D DTS^SDUTL W !,?5,"and is already scheduled to be reactivated as of ",Y G CHG
"RTN","SDREACT",9,0)
 W *7,!,"Clinic cannot be reactivated - not inactive" G SDREACT
"RTN","SDREACT",10,0)
PREACT N SDRES S SDRES=$$CLNCK^SDUTL2(DA,1)
"RTN","SDREACT",11,0)
 I 'SDRES W !,?5,"Clinic MUST be corrected before continuing." G SDREACT
"RTN","SDREACT",12,0)
REACT S SDREACT="" S %DT("A")="Enter date clinic is to be reactivated: ",%DT="AEX" D ^%DT G:Y<0 SDREACT
"RTN","SDREACT",13,0)
 K %DT S (SD,SDH,SDRE)=Y,(SDINACT,SDIN)=SDX
"RTN","SDREACT",14,0)
 I SD'>SDINACT W !,*7,"Reactivate date must be later than inactivate date" G REACT
"RTN","SDREACT",15,0)
 G:'$D(^SC(DA,"SL")) SDREACT S SL=^("SL"),X=$P(^("SL"),"^",3),STARTDAY=$S($L(X):X,1:8),SI=$P(^("SL"),"^",6),SDFSW="",X=SD,SDRE1=SDRE D DOW^SDM0 S DOW=Y
"RTN","SDREACT",16,0)
 S Y=SD D DTS^SDUTL W !!,"AVAILABILITY DATE: ",Y,"  (" S Y=SD D DT^DIQ W ")" S (SDZQ,SDEL,POP)=0 D EN1^SDB0
"RTN","SDREACT",17,0)
 I '$D(SDREACT) W *7,!,"Clinic not reactivated!!!" G END
"RTN","SDREACT",18,0)
 F I=0:1:6 F I1=0:0 S I1=$O(^SC(DA,"T"_I,I1)),I2=$S(I1'>0:0,'$D(^(I1,1)):0,^(1)]"":1,1:0) Q:I2  I I1'>0 D CLEAN Q
"RTN","SDREACT",19,0)
 K IENS,FDA S IENS=DA_",",FDA(44,IENS,2506)=SDH D FILE^DIE("","FDA")
"RTN","SDREACT",20,0)
 D SDEC(DA,SDH)  ;alb/sat 627
"RTN","SDREACT",21,0)
 S Y=SDH D DTS^SDUTL W !,*7,"Clinic will be reactivated effective ",Y
"RTN","SDREACT",22,0)
MORE W !,"Do you want to set up additional availabilities for this clinic now" S %=1 D YN^DICN I '% W !,"ANSWER (Y)ES OR (N)O" G MORE
"RTN","SDREACT",23,0)
 G:(%-1)!(%<0) END S SDZQ=1 G EN^SDB
"RTN","SDREACT",24,0)
 ;
"RTN","SDREACT",25,0)
CHG W !,"Do you want to change the reactivate date" S %=1 D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G CHG
"RTN","SDREACT",26,0)
 G END:(%<0),DEL:(%-1)
"RTN","SDREACT",27,0)
DT R !,"Enter new reactivate date: ",X:DTIME G:"^"[X END S %DT="EX" D ^%DT G:Y<0 DT
"RTN","SDREACT",28,0)
 I Y'>SDX W *7,!,"Must be > inactivate date" G DT
"RTN","SDREACT",29,0)
 I Y=SDX1 W *7,!,"That is the current reactivate date" G DT
"RTN","SDREACT",30,0)
 S SDRE=+Y
"RTN","SDREACT",31,0)
 S POP=0 I SDRE>SDX1 S K=SDRE_.9 F I=SDX1-.1:0 S I=$O(^SC(DA,"S",I)) Q:I'>0!(I>K)  F J=0:0 S J=$O(^SC(DA,"S",I,1,J)) Q:J'>0  I $P(^(J,0),"^",9)'["C" S POP=1 Q
"RTN","SDREACT",32,0)
 I POP W !,"Valid appointments exist before the new reactivate date ... must reactivate before " S Y=I D DTS^SDUTL W Y G REACT
"RTN","SDREACT",33,0)
 K SDN S X=SDRE D NEW
"RTN","SDREACT",34,0)
 K SDO S X=SDX1 D DOW^SDM0 S SDO(Y)=X F I=1:1:6 S X1=X,X2=1 D C^%DTC,DOW^SDM0 S SDO(Y)=X
"RTN","SDREACT",35,0)
 I SDRE>SDX1 D C1
"RTN","SDREACT",36,0)
 F I=0:1:6 I $D(^SC(DA,"T"_I,SDO(I),1)) S ^SC(DA,"T"_I,SDN(I),1)=^SC(DA,"T"_I,SDO(I),1),^(0)=SDN(I) I SDN(I)'=SDO(I) K ^SC(DA,"T"_I,SDO(I))
"RTN","SDREACT",37,0)
 K IENS,FDA S IENS=DA_",",FDA(44,IENS,2506)=SDRE D FILE^DIE("","FDA")
"RTN","SDREACT",38,0)
 W !,"Clinic will now be reactivated effective " S Y=SDRE D DTS^SDUTL W Y G END
"RTN","SDREACT",39,0)
C1 F I=SDX-.1:0 S I=$O(^SC(DA,"ST",I)) Q:I'>0!(I'<SDRE)  K ^(I)
"RTN","SDREACT",40,0)
 F I=SDX-.1:0 S I=$O(^SC(DA,"T",I)) Q:I'>0!(I'<SDRE)  K ^(I)
"RTN","SDREACT",41,0)
 F I=SDX-.1:0 S I=$O(^SC(DA,"OST",I)) Q:I'>0!(I'<SDRE)  K ^(I)
"RTN","SDREACT",42,0)
 Q
"RTN","SDREACT",43,0)
DEL S POP=0 F I=SDX1-.1:0 S I=$O(^SC(DA,"S",I)) Q:I'>0  F J=0:0 S J=$O(^SC(DA,"S",I,1,J)) Q:J'>0  I $P(^(J,0),"^",9)'["C" S POP=1 Q
"RTN","SDREACT",44,0)
 G:POP END
"RTN","SDREACT",45,0)
D1 S %=2 W !,"Do you want to delete the reactivate date" D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G D1
"RTN","SDREACT",46,0)
 G END:(%-1)
"RTN","SDREACT",47,0)
 F I=SDX1-.1:0 S I=$O(^SC(DA,"T",I)) Q:I'>0  K ^(I)
"RTN","SDREACT",48,0)
 K SDN S X=SDX D NEW
"RTN","SDREACT",49,0)
 F I=0:1:6 F J=SDN(I):0 S J=$O(^SC(DA,"T"_I,J)) S:J'>0 ^SC(DA,"T"_I,9999999,1)="",^(0)=9999999 Q:J'>0  K:J'=9999999 ^SC(DA,"T"_I,J) I J=9999999 S ^SC(DA,"T"_I,J,1)="",^(0)=J Q
"RTN","SDREACT",50,0)
 F I=SDX1-.1:0 S I=$O(^SC(DA,"OST",I)) Q:I'>0  K ^(I)
"RTN","SDREACT",51,0)
 F I=SDX1-.1:0 S I=$O(^SC(DA,"ST",I)) Q:I'>0  K ^(I)
"RTN","SDREACT",52,0)
 K IENS,FDA S IENS=DA_",",FDA(44,IENS,2506)="@" D FILE^DIE("","FDA")
"RTN","SDREACT",53,0)
 W !,*7,"Reactivation date DELETED!!" G END
"RTN","SDREACT",54,0)
 ;
"RTN","SDREACT",55,0)
NEW D DOW^SDM0 S SDN(Y)=X F I=1:1:6 S X1=X,X2=1 D C^%DTC,DOW^SDM0 S SDN(Y)=X
"RTN","SDREACT",56,0)
 Q
"RTN","SDREACT",57,0)
CLEAN F I2=0:0 S I2=$O(^SC(DA,"T"_I,I2)) Q:I2'>0  K ^(I2)
"RTN","SDREACT",58,0)
 Q
"RTN","SDREACT",59,0)
 ;
"RTN","SDREACT",60,0)
END K CNT,D0,DA,DIC,DH,DO,DOW,H1,H2,HSDX,SDX1,SDZQ,SI,I,I1,I2,J,K,LT,M1,M2,NSL,POP,SC,SD,SDH,SDFSW,SDIN,SDINACT,SDN,SDO,SDRE,SDRE1,SDREACT,SDTOP,SI,SL,SLT,STARTDAY,STIME,T1,T2,X,X1,X2,Y Q
"RTN","SDREACT",61,0)
 ;
"RTN","SDREACT",62,0)
SDEC(SC,SDDATE) ;update REACTIVATED DATE/TIME in SDEC RESOURCE  ;alb/sat 627
"RTN","SDREACT",63,0)
 N SDFDA,SDRES
"RTN","SDREACT",64,0)
 S SDRES=$$GETRES^SDECUTL(SC,1)
"RTN","SDREACT",65,0)
 Q:SDRES=""
"RTN","SDREACT",66,0)
 S SDFDA(409.831,SDRES_",",.025)=SDDATE
"RTN","SDREACT",67,0)
 S SDFDA(409.831,SDRES_",",.026)=DUZ
"RTN","SDREACT",68,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDREACT",69,0)
 Q
"RTN","SDRRISRU")
0^111^B14287203^B13362967
"RTN","SDRRISRU",1,0)
SDRRISRU ;10N20/MAH - Recall Reminder Utilities ;JAN 15, 2016
"RTN","SDRRISRU",2,0)
 ;;5.3;Scheduling;**536,627**;Aug 13, 1993;Build 249
"RTN","SDRRISRU",3,0)
 ;
"RTN","SDRRISRU",4,0)
OPENSLOT(SDRRIEN,SDRRST,SDRRND) ; Function returns the number of open (available)
"RTN","SDRRISRU",5,0)
 ; slots at the clinic during the time period.
"RTN","SDRRISRU",6,0)
 ; SDRRIEN - IEN of clinic in file #44
"RTN","SDRRISRU",7,0)
 ; SDRRST  - (optional) start checking on this date (default=today)
"RTN","SDRRISRU",8,0)
 ; SDRRND  - (optional) end of time period (default=last day of month)
"RTN","SDRRISRU",9,0)
 N SDRRNOAV,SDRRTOT,SDRRHOL,SDRRT,SDRRTPT,SDRRTPDT,SDRRDT,SDRRDA
"RTN","SDRRISRU",10,0)
 N SDRRFTR,CK,CLIN1,DA,DFN
"RTN","SDRRISRU",11,0)
 I '$D(SDRRST) S SDRRST=DT
"RTN","SDRRISRU",12,0)
 I '$D(SDRRND) D  ; end of month
"RTN","SDRRISRU",13,0)
 . S SDRRND=$E($$SCH^XLFDT("1M(L)",SDRRST),1,7)
"RTN","SDRRISRU",14,0)
 . S SDRRND=$$FMADD^XLFDT(SDRRND,1)
"RTN","SDRRISRU",15,0)
 . Q:$E(SDRRST,1,5)=$E(SDRRND,1,5)
"RTN","SDRRISRU",16,0)
 . S SDRRND=$$FMADD^XLFDT($E(SDRRND,1,5)_"01",-1)
"RTN","SDRRISRU",17,0)
 S SDRRST=$$FMADD^XLFDT(SDRRST,-1)
"RTN","SDRRISRU",18,0)
 S SDRRNOAV=0
"RTN","SDRRISRU",19,0)
 I '$O(^SC(SDRRIEN,"OST",SDRRST)),'$O(^SC(SDRRIEN,"ST",SDRRST,0)) D
"RTN","SDRRISRU",20,0)
 . N SDRRI,SDRRDOW
"RTN","SDRRISRU",21,0)
 . F SDRRI=0:1:6 S SDRRDOW=$O(^SC(SDRRIEN,"T"_SDRRI,SDRRST)) Q:SDRRDOW  S:SDRRDOW SDRRNOAV=1
"RTN","SDRRISRU",22,0)
 I SDRRNOAV Q 0  ; No future dates available
"RTN","SDRRISRU",23,0)
 I '$D(SDRRYEAR) N SDRRYEAR D YEAR
"RTN","SDRRISRU",24,0)
 S SDRRHOL=($P($G(^SC(SDRRIEN,"SL")),U,8)="Y")
"RTN","SDRRISRU",25,0)
 S SDRRTOT=0,SDRRDT=SDRRST
"RTN","SDRRISRU",26,0)
 F  S SDRRDT=$O(SDRRYEAR(SDRRDT)) Q:SDRRDT>SDRRND!'SDRRDT  D
"RTN","SDRRISRU",27,0)
 . I 'SDRRHOL,$P(SDRRYEAR(SDRRDT),U,2) Q
"RTN","SDRRISRU",28,0)
 . S SDRRTPDT=$G(^SC(SDRRIEN,"ST",SDRRDT,1)) ; Pattern
"RTN","SDRRISRU",29,0)
 . I SDRRTPDT="" D  Q:SDRRTPDT=""
"RTN","SDRRISRU",30,0)
 . . S SDRRT="T"_+SDRRYEAR(SDRRDT)
"RTN","SDRRISRU",31,0)
 . . S SDRRTPT=$O(^SC(SDRRIEN,SDRRT,SDRRDT)) Q:SDRRTPT=""
"RTN","SDRRISRU",32,0)
 . . S SDRRTPDT=$G(^SC(SDRRIEN,SDRRT,SDRRTPT,1))
"RTN","SDRRISRU",33,0)
 . S SDRRTOT=SDRRTOT+$$AVAIL(SDRRTPDT)
"RTN","SDRRISRU",34,0)
 Q SDRRTOT
"RTN","SDRRISRU",35,0)
AVAIL(SDRRPAT) ; Given pattern, returns number of available slots.
"RTN","SDRRISRU",36,0)
 ; Check the pattern for available slots
"RTN","SDRRISRU",37,0)
 ; 0-9 and j-z = available slots where j=10, k=11...z=26
"RTN","SDRRISRU",38,0)
 ; $A(1)=49 $A(9)=57 $A("j")=106 $A("z")=122
"RTN","SDRRISRU",39,0)
 N SDRRCNT,SDRRCHAR,I
"RTN","SDRRISRU",40,0)
 S SDRRCNT=0
"RTN","SDRRISRU",41,0)
 S SDRRPAT=$TR($E(SDRRPAT,6,$L(SDRRPAT)),"|[] ","")
"RTN","SDRRISRU",42,0)
 F I=1:1:$L(SDRRPAT) S SDRRCHAR=$A(SDRRPAT,I) D
"RTN","SDRRISRU",43,0)
 . I SDRRCHAR>48,SDRRCHAR<58 S SDRRCNT=SDRRCNT+$C(SDRRCHAR) Q
"RTN","SDRRISRU",44,0)
 . I SDRRCHAR>105,SDRRCHAR<123 S SDRRCNT=SDRRCNT+SDRRCHAR-96
"RTN","SDRRISRU",45,0)
 Q SDRRCNT
"RTN","SDRRISRU",46,0)
YEAR ; Set-up 1 year dates
"RTN","SDRRISRU",47,0)
 ; This array is used for available appointments
"RTN","SDRRISRU",48,0)
 N SDRRI,SDRRDT
"RTN","SDRRISRU",49,0)
 S SDRRDT=SDRRST
"RTN","SDRRISRU",50,0)
 F SDRRI=1:1:365 D  Q:SDRRDT=SDRRND
"RTN","SDRRISRU",51,0)
 . S SDRRDT=$$FMADD^XLFDT(SDRRDT,1)
"RTN","SDRRISRU",52,0)
 . S SDRRYEAR(SDRRDT)=$$DOW^XLFDT(SDRRDT,1)
"RTN","SDRRISRU",53,0)
 . I $D(^HOLIDAY(SDRRDT)) S $P(SDRRYEAR(SDRRDT),U,2)=1
"RTN","SDRRISRU",54,0)
 Q
"RTN","SDRRISRU",55,0)
DELETE ; This entry point is invoked by the new style xref A66201 on the .01 field of file 403.5
"RTN","SDRRISRU",56,0)
 I $D(SDRRDA),$D(APPT),$D(CLIN1) D  Q
"RTN","SDRRISRU",57,0)
 .D DELAPPT(SDRRDA,APPT,CLIN1)
"RTN","SDRRISRU",58,0)
 D DELUSER(DA)
"RTN","SDRRISRU",59,0)
 Q
"RTN","SDRRISRU",60,0)
DELAPPT(SDRRIEN,APPT,CLIN1) ; Record deleted from Recall List because of appointment.
"RTN","SDRRISRU",61,0)
 N SDRRFDA
"RTN","SDRRISRU",62,0)
 S SDRRFDA(403.56,"+1,",101)=APPT ; appt date
"RTN","SDRRISRU",63,0)
 S SDRRFDA(403.56,"+1,",102)=CLIN1 ; appt clinic
"RTN","SDRRISRU",64,0)
 D DELSET(SDRRIEN,.SDRRFDA)
"RTN","SDRRISRU",65,0)
 Q
"RTN","SDRRISRU",66,0)
DELUSER(SDRRIEN) ; Record deleted by a user.
"RTN","SDRRISRU",67,0)
 N SDRRFDA
"RTN","SDRRISRU",68,0)
 S SDRRFDA(403.56,"+1,",201)=$E($$NOW^XLFDT(),1,12) ; delete date
"RTN","SDRRISRU",69,0)
 S SDRRFDA(403.56,"+1,",202)=DUZ ; delete clerk
"RTN","SDRRISRU",70,0)
 S:$G(SDRRFTR) SDRRFDA(403.56,"+1,",203)=SDRRFTR ; delete reason:
"RTN","SDRRISRU",71,0)
 D DELSET(SDRRIEN,.SDRRFDA)
"RTN","SDRRISRU",72,0)
 Q
"RTN","SDRRISRU",73,0)
DELSET(SDRRIEN,SDRRFDA) ;
"RTN","SDRRISRU",74,0)
 N SDRRREC
"RTN","SDRRISRU",75,0)
 S SDRRREC=$G(^SD(403.5,SDRRIEN,0))
"RTN","SDRRISRU",76,0)
 S SDRRFDA(403.56,"+1,",.01)=$P(SDRRREC,U,1) ; patient
"RTN","SDRRISRU",77,0)
 S SDRRFDA(403.56,"+1,",2)=$P(SDRRREC,U,3)   ; accession #
"RTN","SDRRISRU",78,0)
 S SDRRFDA(403.56,"+1,",2.5)=$P(SDRRREC,U,7) ; comment
"RTN","SDRRISRU",79,0)
 S SDRRFDA(403.56,"+1,",2.6)=$P(SDRRREC,U,8) ; fast / non-fast
"RTN","SDRRISRU",80,0)
 S SDRRFDA(403.56,"+1,",3)=$P(SDRRREC,U,4)   ; test/app.
"RTN","SDRRISRU",81,0)
 S SDRRFDA(403.56,"+1,",4)=$P(SDRRREC,U,5)   ; provider
"RTN","SDRRISRU",82,0)
 S SDRRFDA(403.56,"+1,",4.5)=$P(SDRRREC,U,2) ; clinic
"RTN","SDRRISRU",83,0)
 S SDRRFDA(403.56,"+1,",4.7)=$P(SDRRREC,U,9) ; length of appt.
"RTN","SDRRISRU",84,0)
 S SDRRFDA(403.56,"+1,",5)=$P(SDRRREC,U,6)   ; recall date
"RTN","SDRRISRU",85,0)
 S SDRRFDA(403.56,"+1,",6)=$P(SDRRREC,U,10)  ; date reminder sent
"RTN","SDRRISRU",86,0)
 S SDRRFDA(403.56,"+1,",7)=$P(SDRRREC,U,11)  ; user who entered recall
"RTN","SDRRISRU",87,0)
 S SDRRFDA(403.56,"+1,",7.5)=$P(SDRRREC,U,14) ;DATE/TIME RECALL ADDED   ;alb/sat SD*5.3*627
"RTN","SDRRISRU",88,0)
 D UPDATE^DIE("","SDRRFDA")
"RTN","SDRRISRU",89,0)
 Q
"RTN","SDWLPL")
0^148^B39936287^B39152733
"RTN","SDWLPL",1,0)
SDWLPL ;IOFO BAY PINES/DMR,ESW - WAIT LIST PICK LIST ;JAN 15, 2016
"RTN","SDWLPL",2,0)
 ;;5.3;scheduling;**327,394,417,446,538,627**;AUG 13, 1993;Build 249
"RTN","SDWLPL",3,0)
 ;
"RTN","SDWLPL",4,0)
 ;
"RTN","SDWLPL",5,0)
 ;09/23/2006 Patch SD*5.3*417 Upper/Lower case usage.
"RTN","SDWLPL",6,0)
 ;SD*5.3*446 - Included M - matched appointments
"RTN","SDWLPL",7,0)
 ;
"RTN","SDWLPL",8,0)
 I '$D(^SDWL(409.3,"B",DFN)) Q
"RTN","SDWLPL",9,0)
 S NN=""
"RTN","SDWLPL",10,0)
 W !,"This patient is currently on the Wait List."
"RTN","SDWLPL",11,0)
 ;
"RTN","SDWLPL",12,0)
ANS1 ;
"RTN","SDWLPL",13,0)
 S DIR("B")="NO",DIR("A")="Do you want to display open Wait list entries? (Y or N): ",DIR(0)="Y^AO" D ^DIR
"RTN","SDWLPL",14,0)
 K DIR
"RTN","SDWLPL",15,0)
 Q:'Y
"RTN","SDWLPL",16,0)
 ;
"RTN","SDWLPL",17,0)
ANS2(DFN,ANS2) ;
"RTN","SDWLPL",18,0)
 N STR S ANS2=" ",STR=",A,S,C,"
"RTN","SDWLPL",19,0)
 F  Q:STR[ANS2!(ANS2="^")  D
"RTN","SDWLPL",20,0)
TST .W !!,"Display Open Wait List entries selection:",!
"RTN","SDWLPL",21,0)
 .S DIR(0)="S^A:ALL;C:Matching Appt CLINIC;S:matching Appt SPECIALTY",DIR("B")="A",DIR("A")="Select Entry or ""^"" to QUIT " D ^DIR S ANS2=Y
"RTN","SDWLPL",22,0)
 .IF ANS2'="A"&(ANS2'="S")&(ANS2'="C")&(ANS2'="^") W !!,"PLEASE ENTER 'A' for All entries, 'C' for clinic or 'S' for current specialty/stop code or '^' to quit."
"RTN","SDWLPL",23,0)
 K DIR
"RTN","SDWLPL",24,0)
 Q:ANS2="^"
"RTN","SDWLPL",25,0)
 D INIT(DFN,ANS2) I '$D(^TMP($J,"SDWLPL")) W !!,"No selected open EWL entry has been found!" Q
"RTN","SDWLPL",26,0)
DISPLAY ;
"RTN","SDWLPL",27,0)
 D LIST(ANS2,DFN)
"RTN","SDWLPL",28,0)
 Q
"RTN","SDWLPL",29,0)
 ;
"RTN","SDWLPL",30,0)
INIT(DFN,ANS2,FLG) ;
"RTN","SDWLPL",31,0)
 ; ANS2: A - ALL
"RTN","SDWLPL",32,0)
 ;       S - All Specialties
"RTN","SDWLPL",33,0)
 ;       C - All Clinics
"RTN","SDWLPL",34,0)
 ;       M - Matches stop codes only
"RTN","SDWLPL",35,0)
 ;  FLG: (optional)
"RTN","SDWLPL",36,0)
 ;       NR - do not diplay entries with NON REMOVAL REASON - in check out
"RTN","SDWLPL",37,0)
 S (INST,SCODE,CLINIC,DENTER,REQBY,DESIRD,SCPRI,IEN,SSN)="" K ^TMP("SDWLPL",$J),^TMP($J,"SDWLPL")
"RTN","SDWLPL",38,0)
 F  S IEN=$O(^SDWL(409.3,"B",DFN,IEN)) Q:IEN=""  D
"RTN","SDWLPL",39,0)
 .Q:$$GET1^DIQ(409.3,IEN_",",23,"I")="C"
"RTN","SDWLPL",40,0)
 .;I $G(FLG)="NR" Q:$$GET1^DIQ(409.3,IEN_",",18,"I")'=""    ; include non-removed for 'NR flag
"RTN","SDWLPL",41,0)
 .;Q:$$GET1^DIQ(409.3,IEN_",",18,"I")'=""    ;
"RTN","SDWLPL",42,0)
 .Q:$D(^XTMP("SDECLKE-"_IEN))  ;do not display EWL if locked by VS GUI  ;alb/sat 627
"RTN","SDWLPL",43,0)
 .S ^TMP("SDWLPL",$J,IEN)=$G(^SDWL(409.3,IEN,0)) S DENTER="",DENTER=$P($G(^TMP("SDWLPL",$J,IEN)),"^",2)
"RTN","SDWLPL",44,0)
 .S (WLTYPE,TYPE,WLTN,NUM)="",TYPE=$P($G(^TMP("SDWLPL",$J,IEN)),"^",5)
"RTN","SDWLPL",45,0)
 .IF DENTER'=""&(TYPE'="") D
"RTN","SDWLPL",46,0)
 ..IF ANS2="A" D ARAY1
"RTN","SDWLPL",47,0)
 ..IF ANS2="S" D ARAY2
"RTN","SDWLPL",48,0)
 ..IF ANS2="C" D ARAY3
"RTN","SDWLPL",49,0)
 ..IF ANS2="M" D ARAY4
"RTN","SDWLPL",50,0)
 ;
"RTN","SDWLPL",51,0)
 K ANS1,NN,INST,SCODE,CLINIC,DENTER,REQBY,DESIRD,SCPRI
"RTN","SDWLPL",52,0)
 K CLINIC,WLTYPE,TYPE,WLTN,NUM,REC
"RTN","SDWLPL",53,0)
 Q
"RTN","SDWLPL",54,0)
 ;
"RTN","SDWLPL",55,0)
ARAY1 ;
"RTN","SDWLPL",56,0)
 IF TYPE=1 S WLTYPE="PCMM TEAM",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",6),WLTNI=$$GET1^DIQ(404.51,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(404.51,NUM_",",.01)
"RTN","SDWLPL",57,0)
 IF TYPE=2 S WLTYPE="PCMM POSITION",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",7),WLTNI=$$GET1^DIQ(404.57,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(404.57,NUM_",",.01)
"RTN","SDWLPL",58,0)
 IF TYPE=3 S WLTYPE="SERV/SPECIALTY",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",8),WLTNI=$$GET1^DIQ(409.31,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.31,NUM_",",.01)
"RTN","SDWLPL",59,0)
 IF TYPE=4 S WLTYPE="CLINIC",NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",9),WLTNI=$$GET1^DIQ(409.32,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.32,NUM_",",.01)
"RTN","SDWLPL",60,0)
 D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",61,0)
 Q
"RTN","SDWLPL",62,0)
 ;
"RTN","SDWLPL",63,0)
ARAY2 ;
"RTN","SDWLPL",64,0)
 IF TYPE=3 D
"RTN","SDWLPL",65,0)
 .S SCODE=+$P($G(^TMP($J,"APPT",1)),U,13),NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",8),WLTNI=$$GET1^DIQ(409.31,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.31,NUM_",",.01)
"RTN","SDWLPL",66,0)
 .;Q:SCODE'=WLTNI
"RTN","SDWLPL",67,0)
 .S WLTYPE="SERV/SPECIAL"
"RTN","SDWLPL",68,0)
 .D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",69,0)
 Q
"RTN","SDWLPL",70,0)
 ;
"RTN","SDWLPL",71,0)
ARAY3 ;
"RTN","SDWLPL",72,0)
 IF TYPE=4 D
"RTN","SDWLPL",73,0)
 .S CLINIC=+$P($G(^TMP($J,"APPT",1)),U,2),NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",9),WLTNI=$$GET1^DIQ(409.32,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.32,NUM_",",.01)
"RTN","SDWLPL",74,0)
 .;Q:CLINIC'=WLTNI
"RTN","SDWLPL",75,0)
 .S WLTYPE="CLINIC"
"RTN","SDWLPL",76,0)
 .D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",77,0)
 Q
"RTN","SDWLPL",78,0)
ARAY4 ;identify both clinic and specialties EWL matching by stop code with entered appointment
"RTN","SDWLPL",79,0)
 S SCODE=+$P($G(^TMP($J,"APPT",1)),U,13)
"RTN","SDWLPL",80,0)
 IF TYPE=3 D  Q
"RTN","SDWLPL",81,0)
 .S NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",8),WLTNI=$$GET1^DIQ(409.31,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.31,NUM_",",.01)
"RTN","SDWLPL",82,0)
 .Q:SCODE'=WLTNI
"RTN","SDWLPL",83,0)
 .S WLTYPE="SERV/SPECIAL"
"RTN","SDWLPL",84,0)
 .D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",85,0)
 IF TYPE=4 D
"RTN","SDWLPL",86,0)
 .N SDCLSC
"RTN","SDWLPL",87,0)
 .S NUM=$P($G(^TMP("SDWLPL",$J,IEN)),"^",9),WLTNI=$$GET1^DIQ(409.32,NUM_",",.01,"I"),WLTN=$$GET1^DIQ(409.32,NUM_",",.01)
"RTN","SDWLPL",88,0)
 .S SDCLSC=$$GET1^DIQ(44,WLTNI_",",8,"I") ; STOP CODE
"RTN","SDWLPL",89,0)
 .Q:SCODE'=SDCLSC
"RTN","SDWLPL",90,0)
 .S WLTYPE="CLINIC"
"RTN","SDWLPL",91,0)
 .D SAVE(TYPE,WLTNI,IEN)
"RTN","SDWLPL",92,0)
 Q
"RTN","SDWLPL",93,0)
 ;
"RTN","SDWLPL",94,0)
SAVE(TYPE,WLTNI,IEN) ;
"RTN","SDWLPL",95,0)
 S REQBY=$P($G(^TMP("SDWLPL",$J,IEN)),"^",12)
"RTN","SDWLPL",96,0)
 S INST=$P($G(^TMP("SDWLPL",$J,IEN)),"^",3)
"RTN","SDWLPL",97,0)
 N DESIRED S DESIRED=$P($G(^TMP("SDWLPL",$J,IEN)),"^",16)
"RTN","SDWLPL",98,0)
 S SCPRI=$E($$GET1^DIQ(409.3,IEN_",",15)) ;SC priority
"RTN","SDWLPL",99,0)
 N NAME,SSN S NAME=$$GET1^DIQ(2,DFN_",",.01),SSN=$$GET1^DIQ(2,DFN_",",.09)
"RTN","SDWLPL",100,0)
 N SDBY S SDBY=$$GET1^DIQ(409.3,IEN_",",11),SDBY=$E(SDBY,1,3)
"RTN","SDWLPL",101,0)
 N SDNR S SDNR=$$GET1^DIQ(409.3,IEN_",",18,"E") ; non removal reason
"RTN","SDWLPL",102,0)
 S NN=$O(^TMP($J,"SDWLPL",""),-1)+1
"RTN","SDWLPL",103,0)
 S ^TMP($J,"SDWLPL",NN)=IEN_U_WLTYPE_U_SCPRI_U_WLTN_U_INST_U_DENTER_U_SDBY_U_DESIRED
"RTN","SDWLPL",104,0)
 ;
"RTN","SDWLPL",105,0)
 N SPIEC S SPIEC=$S(TYPE=4:9,TYPE=3:10,TYPE=2:11,TYPE=1:12)
"RTN","SDWLPL",106,0)
 S $P(^TMP($J,"SDWLPL",NN),U,SPIEC)=WLTNI
"RTN","SDWLPL",107,0)
 S $P(^TMP($J,"SDWLPL",NN),U,13)=SDNR
"RTN","SDWLPL",108,0)
 K ^TMP("SDWLPL",$J,IEN)
"RTN","SDWLPL",109,0)
 Q
"RTN","SDWLPL",110,0)
 ;
"RTN","SDWLPL",111,0)
LIST(ANS2,DFN) ;
"RTN","SDWLPL",112,0)
 W:$D(IOF) @IOF
"RTN","SDWLPL",113,0)
 ;D APPTD^SDWLEVAL ;display appointment(s) again
"RTN","SDWLPL",114,0)
 W !,"=========================================================================="
"RTN","SDWLPL",115,0)
 N NAME,SSN S NAME=$$GET1^DIQ(2,DFN_",",.01),SSN=$$GET1^DIQ(2,DFN_",",.09)
"RTN","SDWLPL",116,0)
 ;W !!,$S(ANS2="A":" All",ANS2="C":" All Clinics",ANS2="M":" Matched Entries:",ANS2="S":" All Specialties",1:" All")
"RTN","SDWLPL",117,0)
 W !," Open EWL entries matching appointment specialty"
"RTN","SDWLPL",118,0)
 W !,"------------------------------" I ANS2'="A" W "-----------"
"RTN","SDWLPL",119,0)
 W !,"EW List Type   SC/P  Waiting for Institution  Orig Date   By  Des. Date Reopen"
"RTN","SDWLPL",120,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","SDWLPL",121,0)
 S (REC,NUM)=""
"RTN","SDWLPL",122,0)
 F  S NUM=$O(^TMP($J,"SDWLPL",NUM)) Q:NUM=""  S REC=^TMP($J,"SDWLPL",NUM) D
"RTN","SDWLPL",123,0)
 .S IEN=+REC N SDP,SDR D
"RTN","SDWLPL",124,0)
 ..S SDP=$E($$GET1^DIQ(409.3,IEN_",",10)) ;priority
"RTN","SDWLPL",125,0)
 ..S SDR=$$GET1^DIQ(409.3,IEN_",",29,"I") ;reopen reason
"RTN","SDWLPL",126,0)
 .N SDINS,SDIN S SDINS=$P(REC,"^",5) S SDIN=$$GET1^DIQ(4,SDINS_",",.01,"I")
"RTN","SDWLPL",127,0)
 .W !,NUM_". ",$E($P(REC,"^",2),1,12),?16,$P(REC,"^",3)_"/"_SDP,?21,$E($P(REC,U,4),1,13),?35,SDIN,?47,$$FMTE^XLFDT($P(REC,"^",6),8),?59,$P(REC,"^",7),?63,$$FMTE^XLFDT($P(REC,"^",8),8),?77,SDR
"RTN","SDWLPL",128,0)
 .N SDUP,SDLO
"RTN","SDWLPL",129,0)
 .S SDUP="ABCDEFGHIJKLMNOPRSTUWQXYzv",SDLO="abcdefghijklmnoprstuwqxyzv"
"RTN","SDWLPL",130,0)
 .N SMT S SMT=$$GET1^DIQ(409.3,IEN_",",25) I SMT'="" S SMT=$TR(SMT,SDUP,SDLO) W !?2,"Comment: ",SMT
"RTN","SDWLPL",131,0)
 .N SMO S SMO=$$GET1^DIQ(409.3,IEN_",",30) I SMO'="" S SMO=$TR(SMO,SDUP,SDLO) W !?2,"Reopen: ",SMO
"RTN","SDWLPL",132,0)
 .I $P(REC,U,13)'="" W !?2,"Non-Removal Reason: ",$P(REC,U,13)
"RTN","SDWLPL",133,0)
 Q
"SEC","^DIC",409.81,409.81,0,"AUDIT")

"SEC","^DIC",409.81,409.81,0,"DD")

"SEC","^DIC",409.81,409.81,0,"DEL")

"SEC","^DIC",409.81,409.81,0,"LAYGO")

"SEC","^DIC",409.81,409.81,0,"RD")

"SEC","^DIC",409.81,409.81,0,"WR")

"SEC","^DIC",409.822,409.822,0,"AUDIT")

"SEC","^DIC",409.822,409.822,0,"DD")

"SEC","^DIC",409.822,409.822,0,"DEL")

"SEC","^DIC",409.822,409.822,0,"LAYGO")

"SEC","^DIC",409.822,409.822,0,"RD")

"SEC","^DIC",409.822,409.822,0,"WR")

"SEC","^DIC",409.823,409.823,0,"AUDIT")

"SEC","^DIC",409.823,409.823,0,"DD")

"SEC","^DIC",409.823,409.823,0,"DEL")

"SEC","^DIC",409.823,409.823,0,"LAYGO")

"SEC","^DIC",409.823,409.823,0,"RD")

"SEC","^DIC",409.823,409.823,0,"WR")

"SEC","^DIC",409.824,409.824,0,"AUDIT")

"SEC","^DIC",409.824,409.824,0,"DD")

"SEC","^DIC",409.824,409.824,0,"DEL")

"SEC","^DIC",409.824,409.824,0,"LAYGO")

"SEC","^DIC",409.824,409.824,0,"RD")

"SEC","^DIC",409.824,409.824,0,"WR")

"SEC","^DIC",409.831,409.831,0,"AUDIT")

"SEC","^DIC",409.831,409.831,0,"DD")

"SEC","^DIC",409.831,409.831,0,"DEL")

"SEC","^DIC",409.831,409.831,0,"LAYGO")

"SEC","^DIC",409.831,409.831,0,"RD")

"SEC","^DIC",409.831,409.831,0,"WR")

"SEC","^DIC",409.832,409.832,0,"AUDIT")

"SEC","^DIC",409.832,409.832,0,"DD")

"SEC","^DIC",409.832,409.832,0,"DEL")

"SEC","^DIC",409.832,409.832,0,"LAYGO")

"SEC","^DIC",409.832,409.832,0,"RD")

"SEC","^DIC",409.832,409.832,0,"WR")

"SEC","^DIC",409.833,409.833,0,"AUDIT")

"SEC","^DIC",409.833,409.833,0,"DD")

"SEC","^DIC",409.833,409.833,0,"DEL")

"SEC","^DIC",409.833,409.833,0,"LAYGO")

"SEC","^DIC",409.833,409.833,0,"RD")

"SEC","^DIC",409.833,409.833,0,"WR")

"SEC","^DIC",409.834,409.834,0,"AUDIT")

"SEC","^DIC",409.834,409.834,0,"DD")

"SEC","^DIC",409.834,409.834,0,"DEL")

"SEC","^DIC",409.834,409.834,0,"LAYGO")

"SEC","^DIC",409.834,409.834,0,"RD")

"SEC","^DIC",409.834,409.834,0,"WR")

"SEC","^DIC",409.84,409.84,0,"AUDIT")

"SEC","^DIC",409.84,409.84,0,"DD")

"SEC","^DIC",409.84,409.84,0,"DEL")

"SEC","^DIC",409.84,409.84,0,"LAYGO")

"SEC","^DIC",409.84,409.84,0,"RD")

"SEC","^DIC",409.84,409.84,0,"WR")

"SEC","^DIC",409.845,409.845,0,"AUDIT")

"SEC","^DIC",409.845,409.845,0,"DD")

"SEC","^DIC",409.845,409.845,0,"DEL")

"SEC","^DIC",409.845,409.845,0,"LAYGO")

"SEC","^DIC",409.845,409.845,0,"RD")

"SEC","^DIC",409.845,409.845,0,"WR")

"SEC","^DIC",409.85,409.85,0,"AUDIT")
 
"SEC","^DIC",409.85,409.85,0,"DD")
 
"SEC","^DIC",409.85,409.85,0,"DEL")
 
"SEC","^DIC",409.85,409.85,0,"LAYGO")
 
"SEC","^DIC",409.85,409.85,0,"RD")
 
"SEC","^DIC",409.85,409.85,0,"WR")
 
"UP",44,44.04,-1)
44^SDPRIV
"UP",44,44.04,0)
44.04
"UP",44,44.1,-1)
44^PR
"UP",44,44.1,0)
44.1
"UP",409.3,409.344,-1)
409.3^4
"UP",409.3,409.344,0)
409.344
"VER")
8.0^22.0
"^DD",44,44,.01,0)
NAME^RFa^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E)!(X'?.ANP) X
"^DD",44,44,.01,1,0)
^.1
"^DD",44,44,.01,1,1,0)
44^B
"^DD",44,44,.01,1,1,1)
S ^SC("B",$E(X,1,30),DA)=""
"^DD",44,44,.01,1,1,2)
K ^SC("B",$E(X,1,30),DA)
"^DD",44,44,.01,1,1,"DT")
3150504
"^DD",44,44,.01,1,2,0)
^^TRIGGER^42^.01
"^DD",44,44,.01,1,2,1)
X ^DD(44,.01,1,2,1.3) I X S X=DIV X ^DD(44,.01,1,2,89.2) S X=$P(Y(101),U,1),X=X S X=X S D0=I(0,0) S DIU=X K Y S X=DIV S X=DIV X ^DD(44,.01,1,2,1.4)
"^DD",44,44,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^SC(D0,42)):^(42),1:"") S X=Y(0)'=$S('$D(^DIC(42,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1))
"^DD",44,44,.01,1,2,1.4)
S DIH=$S($D(^DIC(42,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(0)=DIV_$S(%]"":U_%,1:""),DIH=42,DIG=.01 D ^DICR:$O(^DD(DIH,DIG,1,0))'=""
"^DD",44,44,.01,1,2,2)
Q
"^DD",44,44,.01,1,2,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^SC(D0,42)):^(42),1:""),D0=$P(Y(1),U,1) S:'$D(^DIC(42,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^DIC(42,D0,0)):^(0),1:"")
"^DD",44,44,.01,1,2,"%D",0)
^^5^5^3150818^
"^DD",44,44,.01,1,2,"%D",1,0)
This TRIGGER updates the WARD LOCATION FILE POINTER field with a matching 
"^DD",44,44,.01,1,2,"%D",2,0)
WARD LOCATION when the name is changed for this HOSPITAL LOCATION. If 
"^DD",44,44,.01,1,2,"%D",3,0)
there is not a matching WARD LOCATION with the new name, a new WARD 
"^DD",44,44,.01,1,2,"%D",4,0)
LOCATION is added and that new entry is pointed to by the WARD LOCATION 
"^DD",44,44,.01,1,2,"%D",5,0)
FILE POINTER field.
"^DD",44,44,.01,1,2,"CREATE CONDITION")
NAME'=WARD LOCATION FILE POINTER
"^DD",44,44,.01,1,2,"CREATE VALUE")
NAME
"^DD",44,44,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",44,44,.01,1,2,"FIELD")
WARD LOCATION FILE POINTER:NAME
"^DD",44,44,.01,1,3,0)
44^ATEAM^MUMPS
"^DD",44,44,.01,1,3,1)
Q
"^DD",44,44,.01,1,3,2)
Q
"^DD",44,44,.01,1,3,"%D",0)
^^7^7^2960402^
"^DD",44,44,.01,1,3,"%D",1,0)
The 'TEAM' cross reference of this file is created & modified through
"^DD",44,44,.01,1,3,"%D",2,0)
changes to the ASSOCIATED CLINIC (#.09) Field of the TEAM POSITION (#404.57)
"^DD",44,44,.01,1,3,"%D",3,0)
File and the NAME (#.01) Field of the TEAM (#404.51) File.  This results
"^DD",44,44,.01,1,3,"%D",4,0)
in a whole-file cross-reference with which a clinic can be looked-up
"^DD",44,44,.01,1,3,"%D",5,0)
for a team that has a team position with an associated clinic.  The
"^DD",44,44,.01,1,3,"%D",6,0)
'ATEAM' cross-reference does not do anything - it is here for
"^DD",44,44,.01,1,3,"%D",7,0)
documentation purposes.
"^DD",44,44,.01,1,3,"DT")
2960402
"^DD",44,44,.01,1,4,0)
44^AH^MUMPS
"^DD",44,44,.01,1,4,1)
D N44S^SDEC03(DA,$E(X,1,30))
"^DD",44,44,.01,1,4,2)
Q
"^DD",44,44,.01,1,4,"%D",0)
^^2^2^3150713^
"^DD",44,44,.01,1,4,"%D",1,0)
This cross reference maintains the name of the associated clinic 
"^DD",44,44,.01,1,4,"%D",2,0)
resource in the SDEC RESOURCE file.
"^DD",44,44,.01,1,4,"DT")
3150713
"^DD",44,44,.01,1,10,0)
44^AD^MUMPS
"^DD",44,44,.01,1,10,1)
Q
"^DD",44,44,.01,1,10,2)
S RTPL=X,X="RTP6" X ^%ZOSF("TEST") S X=RTPL K RTPL I $T D ^RTP6
"^DD",44,44,.01,1,12,0)
^^TRIGGER^403.12^.01
"^DD",44,44,.01,1,12,1)
X ^DD(44,.01,1,12,1.3) I X S X=DIV X ^DD(44,.01,1,12,89.2) S X=$P(Y(101),U,1) S D0=I(0,0) S DIU=X K Y S X=DIV S X=DIV X ^DD(44,.01,1,12,1.4)
"^DD",44,44,.01,1,12,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^SC(D0,0)):^(0),1:"") S X=Y(0)'=$S('$D(^SCRS(403.12,+$P(Y(1),U,29),0)):"",1:$P(^(0),U,1))
"^DD",44,44,.01,1,12,1.4)
S DIH=$S($D(^SCRS(403.12,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,1)=DIV,DIH=403.12,DIG=.01 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",44,44,.01,1,12,2)
Q
"^DD",44,44,.01,1,12,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^SC(D0,0)):^(0),1:""),D0=$P(Y(1),U,29) S:'$D(^SCRS(403.12,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^SCRS(403.12,D0,0)):^(0),1:"")
"^DD",44,44,.01,1,12,"%D",0)
^^2^2^2950606^
"^DD",44,44,.01,1,12,"%D",1,0)
This trigger cross-reference is used to update the Name field (#.01) of the
"^DD",44,44,.01,1,12,"%D",2,0)
Clinic Services Resource file (#403.12).
"^DD",44,44,.01,1,12,"CREATE CONDITION")
NAME'=CLINIC SERVICES RESOURCE
"^DD",44,44,.01,1,12,"CREATE VALUE")
NAME
"^DD",44,44,.01,1,12,"DELETE VALUE")
NO EFFECT
"^DD",44,44,.01,1,12,"DT")
2950322
"^DD",44,44,.01,1,12,"FIELD")
CLINIC SERVICES RESOURCE:NAME
"^DD",44,44,.01,3)
Answer must be 2-30 characters in length.
"^DD",44,44,.01,5,1,0)
42^.01^3
"^DD",44,44,.01,7.5)
S:X?1"%".N1"$" X=$TR(X,"%$","`")
"^DD",44,44,.01,21,0)
^.001^2^2^3141103^^^^
"^DD",44,44,.01,21,1,0)
Name given by user to any ward, clinic, fileroom, operating room
"^DD",44,44,.01,21,2,0)
or other location within a VA facility.
"^DD",44,44,.01,"AUDIT")
y
"^DD",44,44,.01,"DEL",.01,0)
I $P(^SC(D0,0),"^",3)["C" W !,*7,"No deletion of clinics allowed - you must inactivate them!!!"
"^DD",44,44,.01,"DEL",1900,0)
I $O(^SC(DA,"S",DT))'="" W !?10,*7,"FUTURE APP'TS IN CLINIC!"
"^DD",44,44,.01,"DT")
3150713
"^DD",44,44,2,0)
TYPE^RSXa^C:CLINIC;M:MODULE;W:WARD;Z:OTHER LOCATION;N:NON-CLINIC STOP;F:FILE AREA;I:IMAGING;OR:OPERATING ROOM;^0;3^K:'$D(^DIC(40.9,"C",X)) X I $D(X) S SDX=$O(^DIC(40.9,"C",X,0)) K:SDX'>0 X K SDX
"^DD",44,44,2,.1)

"^DD",44,44,2,1,0)
^.1^^-1
"^DD",44,44,2,1,1,0)
^^TRIGGER^44^2.1
"^DD",44,44,2,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SC(D0,0)):^(0),1:"") S X=$P(Y(1),U,22),X=X S DIU=X K Y X ^DD(44,2,1,1,1.1) X ^DD(44,2,1,1,1.4)
"^DD",44,44,2,1,1,1.1)
S X=DIV S SDX=$O(^DIC(40.9,"C",X,0)) S:SDX'>0 SDX=0 S X=$S('SDX:"",$D(^DIC(40.9,+SDX,0)):+SDX,1:"") K SDX
"^DD",44,44,2,1,1,1.4)
S DIH=$S($D(^SC(DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,21,99))  S DIH=DIH_U" S %=$P(DIH,U,23,999),DIU=$P(DIH,U,22),^(0)=$P(DIH,U,1,21)_U_DIV_$S(%]"":U_%,1:""),DIH=44,DIG=2.1 D ^DICR:$O(^DD(DIH,DIG,1,0))'=""
"^DD",44,44,2,1,1,2)
Q
"^DD",44,44,2,1,1,"%D",0)
^^4^4^3150818^
"^DD",44,44,2,1,1,"%D",1,0)
This TRIGGER updates the TYPE EXTENSION field 2.1 with an entry from the 
"^DD",44,44,2,1,1,"%D",2,0)
LOCATION TYPE file that has the same name.
"^DD",44,44,2,1,1,"%D",3,0)
This update to the TYPE EXTENSION field happens when the TYPE field 2 is 
"^DD",44,44,2,1,1,"%D",4,0)
defined or modified.
"^DD",44,44,2,1,1,"CREATE VALUE")
S SDX=$O(^DIC(40.9,"C",X,0)) S:SDX'>0 SDX=0 S X=$S('SDX:"",$D(^DIC(40.9,+SDX,0)):+SDX,1:"") K SDX
"^DD",44,44,2,1,1,"DELETE VALUE")
NO EFFECT
"^DD",44,44,2,1,1,"FIELD")
TYPE E
"^DD",44,44,2,21,0)
^^2^2^2920212^
"^DD",44,44,2,21,1,0)
Type of location assigned to entries into this file, i.e. Ward,
"^DD",44,44,2,21,2,0)
Clinic, Fileroom, Operating Room, Other.
"^DD",44,44,2,"AUDIT")
y
"^DD",44,44,2,"DT")
3150818
"^DD",44,44,2501,0)
PRIVILEGED USER^44.04PA^^SDPRIV;0
"^DD",44,44,2501,21,0)
^^4^4^2920212^^
"^DD",44,44,2501,21,1,0)
Privileged users set up to have access to book to clinic.
"^DD",44,44,2501,21,2,0)
Once one privileged user is entered into this multiple, no other
"^DD",44,44,2501,21,3,0)
user will have access to book to the clinic.  Each individual who
"^DD",44,44,2501,21,4,0)
should have access to clinic must be entered one at a time.
"^DD",44,44,2600,0)
PROVIDER^44.1P^^PR;0
"^DD",44,44,2600,21,0)
^^4^4^2961029^^^^
"^DD",44,44,2600,21,1,0)
Enter in this field the providers associated with this clinic.  These
"^DD",44,44,2600,21,2,0)
providers will then be displayed when updating the provider through
"^DD",44,44,2600,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44,2600,21,4,0)
the correct provider.
"^DD",44,44.04,0)
PRIVILEGED USER SUB-FIELD^NL^.01^1
"^DD",44,44.04,0,"NM","PRIVILEGED USER")

"^DD",44,44.04,.01,0)
PRIVILEGED USER^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",44,44.04,.01,1,0)
^.1
"^DD",44,44.04,.01,1,1,0)
44^ARU^MUMPS
"^DD",44,44.04,.01,1,1,1)
D ADDRUXR^SDEC18(DA(1),DA)
"^DD",44,44.04,.01,1,1,2)
D DELRUXR^SDEC18(DA(1),DA)
"^DD",44,44.04,.01,1,1,"%D",0)
^^3^3^3150424^
"^DD",44,44.04,.01,1,1,"%D",1,0)
This MUMPS cross references is used to maintain the SDEC RESOURCE USER 
"^DD",44,44.04,.01,1,1,"%D",2,0)
file along with the resource link to the SDEC RESOURCE file based on 
"^DD",44,44.04,.01,1,1,"%D",3,0)
'this' HOSPITAL LOCATION.
"^DD",44,44.04,.01,1,1,"DT")
3150424
"^DD",44,44.04,.01,21,0)
^^1^1^2920212^
"^DD",44,44.04,.01,21,1,0)
Privileged users set up to have access to book to clinic.
"^DD",44,44.04,.01,"DT")
3150424
"^DD",44,44.1,0)
PROVIDER SUB-FIELD^^.02^2
"^DD",44,44.1,0,"NM","PROVIDER")

"^DD",44,44.1,.01,0)
PROVIDER^M*P200'^VA(200,^0;1^S DIC("S")="I $$SCREEN^SDUTL2(Y,DT)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.1,.01,1,0)
^.1
"^DD",44,44.1,.01,1,1,0)
44.1^B
"^DD",44,44.1,.01,1,1,1)
S ^SC(DA(1),"PR","B",$E(X,1,30),DA)=""
"^DD",44,44.1,.01,1,1,2)
K ^SC(DA(1),"PR","B",$E(X,1,30),DA)
"^DD",44,44.1,.01,1,2,0)
44^AVADPR^MUMPS
"^DD",44,44.1,.01,1,2,1)
S ^SC("AVADPR",X,DA(1),DA)=$P(^SC(DA(1),"PR",DA,0),U,2)
"^DD",44,44.1,.01,1,2,2)
K ^SC("AVADPR",X,DA(1),DA)
"^DD",44,44.1,.01,1,2,"%D",0)
^.101^3^3^3141229^^
"^DD",44,44.1,.01,1,2,"%D",1,0)
FINDS A PROVIDER'S CLINICS
"^DD",44,44.1,.01,1,2,"%D",2,0)
Cross-reference to easily find all clinics for a particular provider and 
"^DD",44,44.1,.01,1,2,"%D",3,0)
if that provider is listed as default.
"^DD",44,44.1,.01,1,2,"DT")
3140910
"^DD",44,44.1,.01,3)

"^DD",44,44.1,.01,4)
D HELP^SDUTL2(DT)
"^DD",44,44.1,.01,12)
Provider must be active and have an active entry in the NEW PERSON file for PERSON CLASS.
"^DD",44,44.1,.01,12.1)
S DIC("S")="I $$SCREEN^SDUTL2(Y,DT)"
"^DD",44,44.1,.01,21,0)
^^4^4^2961029^^^^
"^DD",44,44.1,.01,21,1,0)
Enter in this field the providers associated with this clinic.  These
"^DD",44,44.1,.01,21,2,0)
providers will then be displayed when updating the provider through
"^DD",44,44.1,.01,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44.1,.01,21,4,0)
the correct provider.
"^DD",44,44.1,.01,"DT")
3140910
"^DD",403.5,403.5,7,0)
USER WHO ENTERED RECALL^P200'^VA(200,^0;11^Q
"^DD",403.5,403.5,7,3)
New person who entered or edited Recall entry
"^DD",403.5,403.5,7,5,1,0)
403.5^5^1900001
"^DD",403.5,403.5,7,21,0)
^^1^1^3080715^
"^DD",403.5,403.5,7,21,1,0)
User who enter or edit a Recall entry.
"^DD",403.5,403.5,7,"DT")
3150403
"^DD",403.5,403.5,7.5,0)
DATE/TIME RECALL ADDED^DX^^0;14^S %DT="ET" D ^%DT S X=Y K:(Y<1)!(X>$E($$NOW^XLFDT,1,12)) X
"^DD",403.5,403.5,7.5,3)
Enter a date and time not in the future
"^DD",403.5,403.5,7.5,21,0)
^^1^1^3150318^
"^DD",403.5,403.5,7.5,21,1,0)
Date and Time this recall reminder was added. Cannot be in the future.
"^DD",403.5,403.5,7.5,"DT")
3150403
"^DD",403.56,403.56,7,0)
USER WHO ENTERED RECALL^P200'^VA(200,^0;11^Q
"^DD",403.56,403.56,7,3)
Select user who last entered or edited the recall entry.
"^DD",403.56,403.56,7,21,0)
^^1^1^3080717^
"^DD",403.56,403.56,7,21,1,0)
The person who entered or edited Recall entry.
"^DD",403.56,403.56,7,"DT")
3150403
"^DD",403.56,403.56,7.5,0)
DATE/TIME RECALL ADDED^D^^0;12^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",403.56,403.56,7.5,3)
Enter a date and time
"^DD",403.56,403.56,7.5,21,0)
^^1^1^3141016^
"^DD",403.56,403.56,7.5,21,1,0)
Date and time this recall reminder was added.
"^DD",403.56,403.56,7.5,"DT")
3150403
"^DD",409.3,409.3,1,0)
ORIGINATING DATE^D^^0;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",409.3,409.3,1,1,0)
^.1^^-1
"^DD",409.3,409.3,1,1,2,0)
409.3^ETOO^MUMPS
"^DD",409.3,409.3,1,1,2,1)
S:$P(^SDWL(409.3,DA,0),U,17)'="" ^SDWL(409.3,"E",$P(^SDWL(409.3,DA,0),U,17),X,DA)=""
"^DD",409.3,409.3,1,1,2,2)
K:$P(^SDWL(409.3,DA,0),U,17)'="" ^SDWL(409.3,"E",$P(^SDWL(409.3,DA,0),U,17),X,DA)
"^DD",409.3,409.3,1,1,2,"%D",0)
^^4^4^3150320^
"^DD",409.3,409.3,1,1,2,"%D",1,0)
This xref actually updates the "E" xref for CURRENT STATUS in the event 
"^DD",409.3,409.3,1,1,2,"%D",2,0)
that the ORIGINATING DATE is changed.
"^DD",409.3,409.3,1,1,2,"%D",3,0)
This xref is used to speed up the lookup of open or closed wait list 
"^DD",409.3,409.3,1,1,2,"%D",4,0)
entries for a given time range.
"^DD",409.3,409.3,1,1,2,"DT")
3150320
"^DD",409.3,409.3,1,21,0)
^.001^1^1^3020912^^^^
"^DD",409.3,409.3,1,21,1,0)
Date the patient was placed on the Wait List (Sch/PCMM)
"^DD",409.3,409.3,1,"DT")
3150403
"^DD",409.3,409.3,8.5,0)
WL SPECIFIC HOSPITAL LOCATION^P44'^SC(^0;24^Q
"^DD",409.3,409.3,8.5,1,0)
^.1
"^DD",409.3,409.3,8.5,1,1,0)
409.3^AE
"^DD",409.3,409.3,8.5,1,1,1)
S ^SDWL(409.3,"AE",$E(X,1,30),DA)=""
"^DD",409.3,409.3,8.5,1,1,2)
K ^SDWL(409.3,"AE",$E(X,1,30),DA)
"^DD",409.3,409.3,8.5,1,1,"%D",0)
^^2^2^3150430^
"^DD",409.3,409.3,8.5,1,1,"%D",1,0)
This xref is used to find entries associated with a particular HOSPITAL 
"^DD",409.3,409.3,8.5,1,1,"%D",2,0)
LOCATION.
"^DD",409.3,409.3,8.5,1,1,"DT")
3150430
"^DD",409.3,409.3,8.5,3)
Select a hospital location
"^DD",409.3,409.3,8.5,21,0)
^^1^1^3150126^
"^DD",409.3,409.3,8.5,21,1,0)
This is the HOSPITAL LOCATION in which the WL SPECIFIC CLINIC points to.
"^DD",409.3,409.3,8.5,"DT")
3150430
"^DD",409.3,409.3,8.7,0)
WL APPOINTMENT TYPE^P409.1'^SD(409.1,^0;26^Q
"^DD",409.3,409.3,8.7,3)
Select an appointment type.
"^DD",409.3,409.3,8.7,21,0)
^^2^2^3150522^
"^DD",409.3,409.3,8.7,21,1,0)
This field represents the appointment type for the appointment that is to 
"^DD",409.3,409.3,8.7,21,2,0)
be associated with this wait list request.
"^DD",409.3,409.3,8.7,"DT")
3150522
"^DD",409.3,409.3,9,0)
ORIGINATING USER^P200'^VA(200,^0;10^Q
"^DD",409.3,409.3,9,21,0)
^.001^1^1^3020626^^
"^DD",409.3,409.3,9,21,1,0)
User that enters the patient to the wait list.
"^DD",409.3,409.3,9,"DT")
3150403
"^DD",409.3,409.3,9.5,0)
DATE/TIME ENTERED^D^^3;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.3,409.3,9.5,3)
Enter a date. Time is optional.
"^DD",409.3,409.3,9.5,21,0)
^.001^1^1^3141114^^
"^DD",409.3,409.3,9.5,21,1,0)
This is the Date and optional Time that this Wait List entry was entered.
"^DD",409.3,409.3,9.5,"DT")
3141027
"^DD",409.3,409.3,10.5,0)
ENROLLMENT PRIORITY^S^1:GROUP 1;2:GROUP 2;3:GROUP 3;4:GROUP 4;5:GROUP 5;6:GROUP 6;7:GROUP 7;8:GROUP 8;^0;25^Q
"^DD",409.3,409.3,10.5,3)
Select an enrollment priority
"^DD",409.3,409.3,10.5,21,0)
^.001^2^2^3141020^^^^
"^DD",409.3,409.3,10.5,21,1,0)
The ENROLLMENT PRIORITY field represents the Wait List Enrollment 
"^DD",409.3,409.3,10.5,21,2,0)
Priority.
"^DD",409.3,409.3,10.5,"DT")
3140923
"^DD",409.3,409.3,23,0)
CURRENT STATUS^S^O:OPEN;C:CLOSED;^0;17^Q
"^DD",409.3,409.3,23,1,0)
^.1
"^DD",409.3,409.3,23,1,1,0)
409.3^E^MUMPS
"^DD",409.3,409.3,23,1,1,1)
S:$P(^SDWL(409.3,DA,0),U,2)'="" ^SDWL(409.3,"E",X,$P(^SDWL(409.3,DA,0),U,2),DA)=""
"^DD",409.3,409.3,23,1,1,2)
K:$P(^SDWL(409.3,DA,0),U,2)'="" ^SDWL(409.3,"E",X,$P(^SDWL(409.3,DA,0),U,2),DA)
"^DD",409.3,409.3,23,1,1,"%D",0)
^.101^2^2^3141212^^^
"^DD",409.3,409.3,23,1,1,"%D",1,0)
This xref is used to speed up the lookup of open or closed wait list
"^DD",409.3,409.3,23,1,1,"%D",2,0)
entries for a given time range.
"^DD",409.3,409.3,23,1,1,"DT")
3141202
"^DD",409.3,409.3,23,3)
Enter O or OPEN if the wait list entry is open. Enter C or CLOSED if the wait list entry is closed.
"^DD",409.3,409.3,23,21,0)
^.001^3^3^3141215^^^^
"^DD",409.3,409.3,23,21,1,0)
If the Wait List(Sch/PCMM) entry is dispositioned the
"^DD",409.3,409.3,23,21,2,0)
status = CLOSED, otherwise the Wait List(Sch/PCMM) entry
"^DD",409.3,409.3,23,21,3,0)
status = OPEN
"^DD",409.3,409.3,23,"DT")
3141202
"^DD",409.3,409.3,44,0)
PATIENT CONTACT^409.344D^^4;0
"^DD",409.3,409.3,44,21,0)
^.001^1^1^3150902^^^^
"^DD",409.3,409.3,44,21,1,0)
This multiple records the patient contact events.
"^DD",409.3,409.344,0)
PATIENT CONTACT SUB-FIELD^^4^4
"^DD",409.3,409.344,0,"DT")
3150902
"^DD",409.3,409.344,0,"IX","B",409.344,.01)

"^DD",409.3,409.344,0,"NM","PATIENT CONTACT")

"^DD",409.3,409.344,0,"UP")
409.3
"^DD",409.3,409.344,.01,0)
DATE ENTERED^D^^0;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.3,409.344,.01,1,0)
^.1
"^DD",409.3,409.344,.01,1,1,0)
409.344^B
"^DD",409.3,409.344,.01,1,1,1)
S ^SDWL(409.3,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",409.3,409.344,.01,1,1,2)
K ^SDWL(409.3,DA(1),4,"B",$E(X,1,30),DA)
"^DD",409.3,409.344,.01,3)
Enter a date. Time is optional.
"^DD",409.3,409.344,.01,21,0)
^^3^3^3141114^
"^DD",409.3,409.344,.01,21,1,0)
This DATE ENTERED field represents the Date that an attempt was made to 
"^DD",409.3,409.344,.01,21,2,0)
contact the patient regarding 'this' appointment. The time can also be 
"^DD",409.3,409.344,.01,21,3,0)
optionally entered.
"^DD",409.3,409.344,.01,"DT")
3141114
"^DD",409.3,409.344,2,0)
ENTERED BY USER^P200'^VA(200,^0;2^Q
"^DD",409.3,409.344,2,3)
Select a provider
"^DD",409.3,409.344,2,21,0)
^.001^3^3^3141016^^
"^DD",409.3,409.344,2,21,1,0)
The ENTERED BY USER field points to the NEW PERSON file and represents 
"^DD",409.3,409.344,2,21,2,0)
the user/provider that made an attempt to contact the patient regarding 
"^DD",409.3,409.344,2,21,3,0)
'this' appointment.
"^DD",409.3,409.344,2,"DT")
3141001
"^DD",409.3,409.344,3,0)
ACTION^S^C:CALLED;M:MESSAGE LEFT;L:LETTER;^0;3^Q
"^DD",409.3,409.344,3,3)
Select an action
"^DD",409.3,409.344,3,21,0)
^^5^5^3150421^
"^DD",409.3,409.344,3,21,1,0)
The ACTION field represents the attempt that was made to contact the 
"^DD",409.3,409.344,3,21,2,0)
patient regarding 'this' appointment.
"^DD",409.3,409.344,3,21,3,0)
   C = Called
"^DD",409.3,409.344,3,21,4,0)
   M = Message Left
"^DD",409.3,409.344,3,21,5,0)
   L = LETTER
"^DD",409.3,409.344,3,"DT")
3150421
"^DD",409.3,409.344,4,0)
PATIENT PHONE^F^^0;4^K:$L(X)>20!($L(X)<4) X
"^DD",409.3,409.344,4,3)
Answer must be 4-20 characters in length.
"^DD",409.3,409.344,4,21,0)
^^1^1^3141113^
"^DD",409.3,409.344,4,21,1,0)
This is the phone number used to contact the patient.
"^DD",409.3,409.344,4,"DT")
3141113
"^DD",409.81,409.81,0)
FIELD^^.03^3
"^DD",409.81,409.81,0,"DDA")
N
"^DD",409.81,409.81,0,"DT")
3140808
"^DD",409.81,409.81,0,"IX","B",409.81,.01)

"^DD",409.81,409.81,0,"NM","SDEC APPLICATION")

"^DD",409.81,409.81,0,"VRPK")
SD
"^DD",409.81,409.81,.01,0)
MAJOR VERSION^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",409.81,409.81,.01,1,0)
^.1
"^DD",409.81,409.81,.01,1,1,0)
409.81^B
"^DD",409.81,409.81,.01,1,1,1)
S ^SDEC(409.81,"B",$E(X,1,30),DA)=""
"^DD",409.81,409.81,.01,1,1,2)
K ^SDEC(409.81,"B",$E(X,1,30),DA)
"^DD",409.81,409.81,.01,3)
Answer must be 1-30 characters in length.
"^DD",409.81,409.81,.01,21,0)
^.001^2^2^3141016^^
"^DD",409.81,409.81,.01,21,1,0)
Major part of a version number.
"^DD",409.81,409.81,.01,21,2,0)
i.e. for version 1.0, 1 is the Major Version; 0 is the Minor version 
"^DD",409.81,409.81,.01,"DT")
3140808
"^DD",409.81,409.81,.02,0)
MINOR VERSION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",409.81,409.81,.02,3)
Answer must be 1-30 characters in length.
"^DD",409.81,409.81,.02,21,0)
^.001^2^2^3141016^^
"^DD",409.81,409.81,.02,21,1,0)
Major part of a version number.
"^DD",409.81,409.81,.02,21,2,0)
i.e. for version 1.0, 1 is the Major Version; 0 is the Minor version
"^DD",409.81,409.81,.02,"DT")
3140808
"^DD",409.81,409.81,.03,0)
BUILD^D^^0;3^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",409.81,409.81,.03,3)
Enter a date and time
"^DD",409.81,409.81,.03,21,0)
^.001^1^1^3141016^^
"^DD",409.81,409.81,.03,21,1,0)
Build date is the date of the current build of this Major.Minor version.
"^DD",409.81,409.81,.03,"DT")
3140808
"^DD",409.822,409.822,0)
FIELD^^.01^1
"^DD",409.822,409.822,0,"DDA")
N
"^DD",409.822,409.822,0,"DT")
3140812
"^DD",409.822,409.822,0,"IX","B",409.822,.01)

"^DD",409.822,409.822,0,"NM","SDEC ACCESS GROUP")

"^DD",409.822,409.822,0,"PT",409.824,.01)

"^DD",409.822,409.822,0,"VRPK")
SD
"^DD",409.822,409.822,.01,0)
ACCESS GROUP^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",409.822,409.822,.01,1,0)
^.1
"^DD",409.822,409.822,.01,1,1,0)
409.822^B
"^DD",409.822,409.822,.01,1,1,1)
S ^SDEC(409.822,"B",$E(X,1,30),DA)=""
"^DD",409.822,409.822,.01,1,1,2)
K ^SDEC(409.822,"B",$E(X,1,30),DA)
"^DD",409.822,409.822,.01,3)
Answer must be 3-30 characters in length.
"^DD",409.822,409.822,.01,21,0)
^^1^1^3141016^
"^DD",409.822,409.822,.01,21,1,0)
The name of this access group.
"^DD",409.822,409.822,.01,"DT")
3140812
"^DD",409.823,409.823,0)
FIELD^^.03^8
"^DD",409.823,409.823,0,"DDA")
N
"^DD",409.823,409.823,0,"DT")
3140812
"^DD",409.823,409.823,0,"IX","B",409.823,.01)

"^DD",409.823,409.823,0,"NM","SDEC ACCESS TYPE")

"^DD",409.823,409.823,0,"PT",409.821,.05)

"^DD",409.823,409.823,0,"PT",409.824,.02)

"^DD",409.823,409.823,0,"VRPK")
SD
"^DD",409.823,409.823,.01,0)
ACCESS TYPE NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",409.823,409.823,.01,1,0)
^.1
"^DD",409.823,409.823,.01,1,1,0)
409.823^B
"^DD",409.823,409.823,.01,1,1,1)
S ^SDEC(409.823,"B",$E(X,1,30),DA)=""
"^DD",409.823,409.823,.01,1,1,2)
K ^SDEC(409.823,"B",$E(X,1,30),DA)
"^DD",409.823,409.823,.01,3)
Answer must be 3-30 characters in length.
"^DD",409.823,409.823,.01,21,0)
^^1^1^3141016^
"^DD",409.823,409.823,.01,21,1,0)
The name of this access type.
"^DD",409.823,409.823,.01,"DT")
3140812
"^DD",409.823,409.823,.02,0)
INACTIVE^S^1:YES;0:NO;^0;2^Q
"^DD",409.823,409.823,.02,3)
Enter 1 or YES if this access type is inactive. Enter 0 or NO if this access type is active.
"^DD",409.823,409.823,.02,21,0)
^.001^1^1^3141021^^
"^DD",409.823,409.823,.02,21,1,0)
Yes/No field indicating that this access type has been inactivated.
"^DD",409.823,409.823,.02,"DT")
3140812
"^DD",409.823,409.823,.03,0)
DEPARTMENT NAME^P409.832'^SDEC(409.832,^0;3^Q
"^DD",409.823,409.823,.03,3)
Select a department
"^DD",409.823,409.823,.03,21,0)
^^2^2^3141016^
"^DD",409.823,409.823,.03,21,1,0)
A Resource Group can also be referred to as a department.
"^DD",409.823,409.823,.03,21,2,0)
This is the Resource Group that this access type belongs to.
"^DD",409.823,409.823,.03,"DT")
3140812
"^DD",409.823,409.823,.04,0)
DISPLAY COLOR^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",409.823,409.823,.04,3)
Answer must be 1-30 characters in length.
"^DD",409.823,409.823,.04,21,0)
^^2^2^3141016^
"^DD",409.823,409.823,.04,21,1,0)
Free-Text name of the color used to display the block for this access 
"^DD",409.823,409.823,.04,21,2,0)
type.
"^DD",409.823,409.823,.04,"DT")
3140812
"^DD",409.823,409.823,.05,0)
RED^NJ3,0^^0;5^K:+X'=X!(X>255)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.823,409.823,.05,3)
Type a number between 0 and 255, 0 decimal digits.
"^DD",409.823,409.823,.05,21,0)
^^2^2^3141016^
"^DD",409.823,409.823,.05,21,1,0)
This is the numeric color code for the degree of the RED rgb 
"^DD",409.823,409.823,.05,21,2,0)
attribute used in displaying a block for this access type.
"^DD",409.823,409.823,.05,"DT")
3140812
"^DD",409.823,409.823,.06,0)
GREEN^NJ3,0^^0;6^K:+X'=X!(X>255)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.823,409.823,.06,3)
Type a number between 0 and 255, 0 decimal digits.
"^DD",409.823,409.823,.06,21,0)
^^2^2^3141016^
"^DD",409.823,409.823,.06,21,1,0)
This is the numeric color code for the degree of the GREEN rgb
"^DD",409.823,409.823,.06,21,2,0)
attribute used in displaying a block for this access type.
"^DD",409.823,409.823,.06,"DT")
3140812
"^DD",409.823,409.823,.07,0)
BLUE^NJ3,0^^0;7^K:+X'=X!(X>255)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.823,409.823,.07,3)
Type a number between 0 and 255, 0 decimal digits.
"^DD",409.823,409.823,.07,21,0)
^^2^2^3141016^
"^DD",409.823,409.823,.07,21,1,0)
This is the numeric color code for the degree of the BLUE rgb
"^DD",409.823,409.823,.07,21,2,0)
attribute used in displaying a block for this access type.
"^DD",409.823,409.823,.07,"DT")
3140812
"^DD",409.823,409.823,.08,0)
PREVENT ACCESS^S^1:YES;0:NO;^0;8^Q
"^DD",409.823,409.823,.08,3)
Enter 1 or YES if the client should prevent access to this access type. Enter 0 or NO if the client should be allowed access to this access type.
"^DD",409.823,409.823,.08,21,0)
^.001^2^2^3141021^^
"^DD",409.823,409.823,.08,21,1,0)
This field is used by the client to show this access type as a read-only 
"^DD",409.823,409.823,.08,21,2,0)
block.
"^DD",409.823,409.823,.08,"DT")
3140812
"^DD",409.824,409.824,0)
FIELD^^.02^2
"^DD",409.824,409.824,0,"DDA")
N
"^DD",409.824,409.824,0,"DT")
3140812
"^DD",409.824,409.824,0,"IX","B",409.824,.01)

"^DD",409.824,409.824,0,"NM","SDEC ACCESS GROUP TYPE")

"^DD",409.824,409.824,0,"VRPK")
SD
"^DD",409.824,409.824,.01,0)
ACCESS GROUP^RP409.822^SDEC(409.822,^0;1^Q
"^DD",409.824,409.824,.01,1,0)
^.1
"^DD",409.824,409.824,.01,1,1,0)
409.824^B
"^DD",409.824,409.824,.01,1,1,1)
S ^SDEC(409.824,"B",$E(X,1,30),DA)=""
"^DD",409.824,409.824,.01,1,1,2)
K ^SDEC(409.824,"B",$E(X,1,30),DA)
"^DD",409.824,409.824,.01,3)
Select an access group
"^DD",409.824,409.824,.01,21,0)
^^1^1^3141016^
"^DD",409.824,409.824,.01,21,1,0)
The access group that is to be linked to an access type.
"^DD",409.824,409.824,.01,"DT")
3140812
"^DD",409.824,409.824,.02,0)
ACCESS TYPE^P409.823'^SDEC(409.823,^0;2^Q
"^DD",409.824,409.824,.02,3)
Select an access type
"^DD",409.824,409.824,.02,21,0)
^^1^1^3141016^
"^DD",409.824,409.824,.02,21,1,0)
The access type that is to be linked to an access group.
"^DD",409.824,409.824,.02,"DT")
3140812
"^DD",409.831,409.831,0)
FIELD^^.02^15
"^DD",409.831,409.831,0,"DDA")
N
"^DD",409.831,409.831,0,"DT")
3141029
"^DD",409.831,409.831,0,"IX","ALOC",409.831,.04)

"^DD",409.831,409.831,0,"IX","ASSOC",409.8312001,.01)

"^DD",409.831,409.831,0,"IX","B",409.831,.01)

"^DD",409.831,409.831,0,"NM","SDEC RESOURCE")

"^DD",409.831,409.831,0,"PT",409.821,.01)

"^DD",409.831,409.831,0,"PT",409.8321,.01)

"^DD",409.831,409.831,0,"PT",409.833,.01)

"^DD",409.831,409.831,0,"PT",409.84,.07)

"^DD",409.831,409.831,0,"VRPK")
SD
"^DD",409.831,409.831,.01,0)
RESOURCE^RF^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",409.831,409.831,.01,1,0)
^.1
"^DD",409.831,409.831,.01,1,1,0)
409.831^B
"^DD",409.831,409.831,.01,1,1,1)
S ^SDEC(409.831,"B",$E(X,1,30),DA)=""
"^DD",409.831,409.831,.01,1,1,2)
K ^SDEC(409.831,"B",$E(X,1,30),DA)
"^DD",409.831,409.831,.01,3)
Answer must be 3-30 characters in length.
"^DD",409.831,409.831,.01,21,0)
^^1^1^3141016^
"^DD",409.831,409.831,.01,21,1,0)
The name for this resource.
"^DD",409.831,409.831,.01,"DT")
3140916
"^DD",409.831,409.831,.01,"V",0)
^.12P^3^3
"^DD",409.831,409.831,.01,"V",1,0)
44^CLINIC^1^C^n^y
"^DD",409.831,409.831,.01,"V",2,0)
200^USER^2^U^n^y
"^DD",409.831,409.831,.01,"V",3,0)
409.834^ADDITIONAL RESOURCE^3^A^n^y
"^DD",409.831,409.831,.012,0)
RESOURCE TYPE^VO^^0;11^Q
"^DD",409.831,409.831,.012,2)
S Y(0)=Y S Y=$$OT1^SDEC03(Y)
"^DD",409.831,409.831,.012,2.1)
S Y=$$OT1^SDEC03(Y)
"^DD",409.831,409.831,.012,3)
Select a Resource Type
"^DD",409.831,409.831,.012,21,0)
^^2^2^3141029^
"^DD",409.831,409.831,.012,21,1,0)
This is a variable pointer field that can point to HOSPITAL LOCATION file 
"^DD",409.831,409.831,.012,21,2,0)
44, NEW PERSON file 200, or SDEC ADDITIONAL RESOURCE file 409.834.
"^DD",409.831,409.831,.012,"DT")
3151027
"^DD",409.831,409.831,.012,"V",0)
^.12P^3^3
"^DD",409.831,409.831,.012,"V",1,0)
44^CLINIC^1^H^^y
"^DD",409.831,409.831,.012,"V",2,0)
200^PROVIDER^2^P^n^y
"^DD",409.831,409.831,.012,"V",3,0)
409.834^ADDITIONAL RESOURCE^3^A^n^y
"^DD",409.831,409.831,.015,0)
DATE/TIME ENTERED^D^^0;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.831,409.831,.015,3)
Enter a date and time
"^DD",409.831,409.831,.015,21,0)
^^1^1^3141029^
"^DD",409.831,409.831,.015,21,1,0)
This is the Date and time that this Resource was added.
"^DD",409.831,409.831,.015,"DT")
3141029
"^DD",409.831,409.831,.016,0)
ENTERED BY USER^P200'^VA(200,^0;6^Q
"^DD",409.831,409.831,.016,3)
Select a user
"^DD",409.831,409.831,.016,21,0)
^^1^1^3141029^
"^DD",409.831,409.831,.016,21,1,0)
This is the user that defined this resource.
"^DD",409.831,409.831,.016,"DT")
3141029
"^DD",409.831,409.831,.02,0)
INACTIVE^CJ8^^ ; ^S X=$$XRC1^SDEC03(DA)
"^DD",409.831,409.831,.02,3)
Is this resource inactive (yes/no)
"^DD",409.831,409.831,.02,9)
^
"^DD",409.831,409.831,.02,9.01)

"^DD",409.831,409.831,.02,9.1)
S X=$$XRC1^SDEC03(DA)
"^DD",409.831,409.831,.02,21,0)
^.001^3^3^3141114^^^^
"^DD",409.831,409.831,.02,21,1,0)
This computed field displays the inactive status of this resource.
"^DD",409.831,409.831,.02,21,2,0)
NO means this resource is not inactive (is active).
"^DD",409.831,409.831,.02,21,3,0)
YES means this resource inactive.
"^DD",409.831,409.831,.02,"DT")
3141114
"^DD",409.831,409.831,.021,0)
INACTIVATED DATE/TIME^D^^0;7^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.831,409.831,.021,3)
Enter a date and time
"^DD",409.831,409.831,.021,21,0)
^^1^1^3141029^
"^DD",409.831,409.831,.021,21,1,0)
This is the date and time that this resource was inactivated.
"^DD",409.831,409.831,.021,"DT")
3141029
"^DD",409.831,409.831,.022,0)
INACTIVATED BY USER^P200'^VA(200,^0;8^Q
"^DD",409.831,409.831,.022,3)
Select a user
"^DD",409.831,409.831,.022,21,0)
^^1^1^3141029^
"^DD",409.831,409.831,.022,21,1,0)
This is the user that inactivated this resource.
"^DD",409.831,409.831,.022,"DT")
3141029
"^DD",409.831,409.831,.025,0)
REACTIVATED DATE/TIME^D^^0;9^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.831,409.831,.025,3)
Enter a date and time
"^DD",409.831,409.831,.025,21,0)
^^1^1^3141029^
"^DD",409.831,409.831,.025,21,1,0)
This is the date and time this resource was re-activated.
"^DD",409.831,409.831,.025,"DT")
3141029
"^DD",409.831,409.831,.026,0)
REACTIVATED BY USER^P200'^VA(200,^0;10^Q
"^DD",409.831,409.831,.026,3)
Select a user
"^DD",409.831,409.831,.026,21,0)
^^1^1^3141029^
"^DD",409.831,409.831,.026,21,1,0)
This is the user that re-activated this resource.
"^DD",409.831,409.831,.026,"DT")
3141029
"^DD",409.831,409.831,.03,0)
TIME SCALE^S^5:5;10:10;15:15;20:20;30:30;60:60;^0;3^Q
"^DD",409.831,409.831,.03,3)
Select time scale
"^DD",409.831,409.831,.03,21,0)
^.001^2^2^3141016^^
"^DD",409.831,409.831,.03,21,1,0)
This is where the Time Scale is defined for this resource.
"^DD",409.831,409.831,.03,21,2,0)
The time scale is in Minutes and can be 5, 10, 15, 20, 30, or 60 minutes.
"^DD",409.831,409.831,.03,"DT")
3140812
"^DD",409.831,409.831,.04,0)
HOSPITAL LOCATION^P44'^SC(^0;4^Q
"^DD",409.831,409.831,.04,1,0)
^.1
"^DD",409.831,409.831,.04,1,1,0)
409.831^ALOC
"^DD",409.831,409.831,.04,1,1,1)
S ^SDEC(409.831,"ALOC",$E(X,1,30),DA)=""
"^DD",409.831,409.831,.04,1,1,2)
K ^SDEC(409.831,"ALOC",$E(X,1,30),DA)
"^DD",409.831,409.831,.04,1,1,"%D",0)
^.101^2^2^3141114^^
"^DD",409.831,409.831,.04,1,1,"%D",1,0)
This "ALOC" xref is used to look up an SDEC RESOURCE record using a 
"^DD",409.831,409.831,.04,1,1,"%D",2,0)
HOSPITAL LOCATION id.
"^DD",409.831,409.831,.04,1,1,"DT")
3140812
"^DD",409.831,409.831,.04,3)
Select a hospital location
"^DD",409.831,409.831,.04,21,0)
^^1^1^3141020^
"^DD",409.831,409.831,.04,21,1,0)
This is where a HOSPITAL LOCATION (or Clinic) is linked to this Resource.
"^DD",409.831,409.831,.04,"DT")
3140812
"^DD",409.831,409.831,1,0)
LETTER TEXT^409.8311^^1;0
"^DD",409.831,409.831,1,21,0)
^.001^1^1^3141016^^
"^DD",409.831,409.831,1,21,1,0)
This is where the LETTER TEXT for a Resource is defined.
"^DD",409.831,409.831,1201,0)
NO SHOW LETTER^409.8311201^^12;0
"^DD",409.831,409.831,1201,21,0)
^.001^1^1^3141016^^
"^DD",409.831,409.831,1201,21,1,0)
This is where the NO SHOW LETTER is defined for this Resource.
"^DD",409.831,409.831,1301,0)
CLINIC CANCELLATION LETTER^409.8311301^^13;0
"^DD",409.831,409.831,1301,21,0)
^^1^1^3141016^
"^DD",409.831,409.831,1301,21,1,0)
This is where the CLINIC CANCELLATION LETTER is defined for this Resource.
"^DD",409.831,409.831,2001,0)
ASSOCIATED VISTA CLINICS^409.8312001P^^20;0
"^DD",409.831,409.831,2001,21,0)
^.001^2^2^3141016^^
"^DD",409.831,409.831,2001,21,1,0)
Additional HOSPITAL LOCATIONs (or Clinics) can be listed here for this 
"^DD",409.831,409.831,2001,21,2,0)
Resource.
"^DD",409.831,409.8311,0)
LETTER TEXT SUB-FIELD^^.01^1
"^DD",409.831,409.8311,0,"DT")
3140812
"^DD",409.831,409.8311,0,"NM","LETTER TEXT")

"^DD",409.831,409.8311,0,"UP")
409.831
"^DD",409.831,409.8311,.01,0)
LETTER TEXT^Wx^^0;1^Q
"^DD",409.831,409.8311,.01,3)
Enter letter text
"^DD",409.831,409.8311,.01,21,0)
^^1^1^3141016^
"^DD",409.831,409.8311,.01,21,1,0)
This is where the LETTER TEXT for a Resource is defined.
"^DD",409.831,409.8311,.01,"DT")
3140812
"^DD",409.831,409.8311201,0)
NO SHOW LETTER SUB-FIELD^^.01^1
"^DD",409.831,409.8311201,0,"DT")
3140812
"^DD",409.831,409.8311201,0,"NM","NO SHOW LETTER")

"^DD",409.831,409.8311201,0,"UP")
409.831
"^DD",409.831,409.8311201,.01,0)
NO SHOW LETTER^Wx^^0;1^Q
"^DD",409.831,409.8311201,.01,3)
Enter No Show Letter
"^DD",409.831,409.8311201,.01,21,0)
^^1^1^3141016^
"^DD",409.831,409.8311201,.01,21,1,0)
This is where the NO SHOW LETTER is defined for this Resource.
"^DD",409.831,409.8311201,.01,"DT")
3140812
"^DD",409.831,409.8311301,0)
CLINIC CANCELLATION LETTER SUB-FIELD^^.01^1
"^DD",409.831,409.8311301,0,"DT")
3140812
"^DD",409.831,409.8311301,0,"NM","CLINIC CANCELLATION LETTER")

"^DD",409.831,409.8311301,0,"UP")
409.831
"^DD",409.831,409.8311301,.01,0)
CLINIC CANCELLATION LETTER^Wx^^0;1^Q
"^DD",409.831,409.8311301,.01,3)
Enter clinic cancellation letter
"^DD",409.831,409.8311301,.01,21,0)
^.001^1^1^3141016^^
"^DD",409.831,409.8311301,.01,21,1,0)
This is where the CLINIC CANCELLATION LETTER is defined for this Resource.
"^DD",409.831,409.8311301,.01,"DT")
3140812
"^DD",409.831,409.8312001,0)
ASSOCIATED VISTA CLINICS SUB-FIELD^^.01^1
"^DD",409.831,409.8312001,0,"DT")
3140812
"^DD",409.831,409.8312001,0,"IX","B",409.8312001,.01)

"^DD",409.831,409.8312001,0,"NM","ASSOCIATED VISTA CLINICS")

"^DD",409.831,409.8312001,0,"UP")
409.831
"^DD",409.831,409.8312001,.01,0)
ASSOCIATED VISTA CLINICS^MP44'^SC(^0;1^Q
"^DD",409.831,409.8312001,.01,1,0)
^.1^^-1
"^DD",409.831,409.8312001,.01,1,1,0)
409.8312001^B
"^DD",409.831,409.8312001,.01,1,1,1)
S ^SDEC(409.831,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",409.831,409.8312001,.01,1,1,2)
K ^SDEC(409.831,DA(1),20,"B",$E(X,1,30),DA)
"^DD",409.831,409.8312001,.01,1,2,0)
409.831^ASSOC
"^DD",409.831,409.8312001,.01,1,2,1)
S ^SDEC(409.831,"ASSOC",$E(X,1,30),DA(1),DA)=""
"^DD",409.831,409.8312001,.01,1,2,2)
K ^SDEC(409.831,"ASSOC",$E(X,1,30),DA(1),DA)
"^DD",409.831,409.8312001,.01,1,2,"%D",0)
^.101^2^2^3141209^^
"^DD",409.831,409.8312001,.01,1,2,"%D",1,0)
This "ASSOC" xref is used to find a SDEC RESOURCE record using a HOSPITAL 
"^DD",409.831,409.8312001,.01,1,2,"%D",2,0)
LOCATION id that was used in the ASSOCIATED VISTA CLINICS multiple.
"^DD",409.831,409.8312001,.01,1,2,"DT")
3140812
"^DD",409.831,409.8312001,.01,3)
Select a clinic
"^DD",409.831,409.8312001,.01,21,0)
^^2^2^3141016^
"^DD",409.831,409.8312001,.01,21,1,0)
Additional HOSPITAL LOCATIONs (or Clinics) can be listed here for this
"^DD",409.831,409.8312001,.01,21,2,0)
Resource.
"^DD",409.831,409.8312001,.01,"DT")
3141210
"^DD",409.832,409.832,0)
FIELD^^1^3
"^DD",409.832,409.832,0,"DDA")
N
"^DD",409.832,409.832,0,"DT")
3141020
"^DD",409.832,409.832,0,"IX","AB",409.8321,.01)

"^DD",409.832,409.832,0,"IX","B",409.832,.01)

"^DD",409.832,409.832,0,"NM","SDEC RESOURCE GROUP")

"^DD",409.832,409.832,0,"PT",409.823,.03)

"^DD",409.832,409.832,0,"VRPK")
SD
"^DD",409.832,409.832,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",409.832,409.832,.01,1,0)
^.1
"^DD",409.832,409.832,.01,1,1,0)
409.832^B
"^DD",409.832,409.832,.01,1,1,1)
S ^SDEC(409.832,"B",$E(X,1,30),DA)=""
"^DD",409.832,409.832,.01,1,1,2)
K ^SDEC(409.832,"B",$E(X,1,30),DA)
"^DD",409.832,409.832,.01,3)
Answer must be 3-30 characters in length.
"^DD",409.832,409.832,.01,21,0)
^.001^1^1^3141016^^
"^DD",409.832,409.832,.01,21,1,0)
Free-Text entry to define the Resource Group name.
"^DD",409.832,409.832,.01,"DT")
3141016
"^DD",409.832,409.832,.02,0)
INACTIVATION DATE^D^^0;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.832,409.832,.02,3)
Enter a date. Time is optional.
"^DD",409.832,409.832,.02,21,0)
^^2^2^3141020^
"^DD",409.832,409.832,.02,21,1,0)
Date/Time in which this Resource Group was inactivated.
"^DD",409.832,409.832,.02,21,2,0)
Time is optional.
"^DD",409.832,409.832,.02,"DT")
3141020
"^DD",409.832,409.832,1,0)
RESOURCE^409.8321P^^1;0
"^DD",409.832,409.832,1,21,0)
^.001^2^2^3141017^^^^
"^DD",409.832,409.832,1,21,1,0)
These are the Resources (SDEC RESOURCE)
"^DD",409.832,409.832,1,21,2,0)
that belong to this Resource Group.
"^DD",409.832,409.8321,0)
RESOURCE SUB-FIELD^^.01^1
"^DD",409.832,409.8321,0,"DT")
3140812
"^DD",409.832,409.8321,0,"IX","B",409.8321,.01)

"^DD",409.832,409.8321,0,"NM","RESOURCE")

"^DD",409.832,409.8321,0,"UP")
409.832
"^DD",409.832,409.8321,.01,0)
RESOURCE^MP409.831'^SDEC(409.831,^0;1^Q
"^DD",409.832,409.8321,.01,1,0)
^.1
"^DD",409.832,409.8321,.01,1,1,0)
409.8321^B
"^DD",409.832,409.8321,.01,1,1,1)
S ^SDEC(409.832,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",409.832,409.8321,.01,1,1,2)
K ^SDEC(409.832,DA(1),1,"B",$E(X,1,30),DA)
"^DD",409.832,409.8321,.01,1,2,0)
409.832^AB
"^DD",409.832,409.8321,.01,1,2,1)
S ^SDEC(409.832,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",409.832,409.8321,.01,1,2,2)
K ^SDEC(409.832,"AB",$E(X,1,30),DA(1),DA)
"^DD",409.832,409.8321,.01,1,2,"%D",0)
^^2^2^3141020^
"^DD",409.832,409.8321,.01,1,2,"%D",1,0)
This "AB" xref is used to find a SDEC RESOURCE GROUP record using a SDEC 
"^DD",409.832,409.8321,.01,1,2,"%D",2,0)
RESOURCE id.
"^DD",409.832,409.8321,.01,1,2,"DT")
3140812
"^DD",409.832,409.8321,.01,3)
Select a resource
"^DD",409.832,409.8321,.01,21,0)
^.001^1^1^3141016^^
"^DD",409.832,409.8321,.01,21,1,0)
Resource (SDEC RESOURCE) that belongs to this Resource Group.
"^DD",409.832,409.8321,.01,"DT")
3140812
"^DD",409.833,409.833,0)
FIELD^^.06^6
"^DD",409.833,409.833,0,"DDA")
N
"^DD",409.833,409.833,0,"DT")
3140812
"^DD",409.833,409.833,0,"IX","AC",409.833,.02)

"^DD",409.833,409.833,0,"IX","B",409.833,.01)

"^DD",409.833,409.833,0,"NM","SDEC RESOURCE USER")

"^DD",409.833,409.833,0,"VRPK")
SD
"^DD",409.833,409.833,.01,0)
RESOURCENAME^RP409.831^SDEC(409.831,^0;1^Q
"^DD",409.833,409.833,.01,1,0)
^.1
"^DD",409.833,409.833,.01,1,1,0)
409.833^B
"^DD",409.833,409.833,.01,1,1,1)
S ^SDEC(409.833,"B",$E(X,1,30),DA)=""
"^DD",409.833,409.833,.01,1,1,2)
K ^SDEC(409.833,"B",$E(X,1,30),DA)
"^DD",409.833,409.833,.01,3)
Select a resource
"^DD",409.833,409.833,.01,21,0)
^.001^2^2^3141016^^
"^DD",409.833,409.833,.01,21,1,0)
This is the Resource (SDEC RESOURCE) that is to be linked to a 
"^DD",409.833,409.833,.01,21,2,0)
user (NEW PERSON).
"^DD",409.833,409.833,.01,"DT")
3140812
"^DD",409.833,409.833,.02,0)
USERNAME^P200'^VA(200,^0;2^Q
"^DD",409.833,409.833,.02,1,0)
^.1
"^DD",409.833,409.833,.02,1,1,0)
409.833^AC
"^DD",409.833,409.833,.02,1,1,1)
S ^SDEC(409.833,"AC",$E(X,1,30),DA)=""
"^DD",409.833,409.833,.02,1,1,2)
K ^SDEC(409.833,"AC",$E(X,1,30),DA)
"^DD",409.833,409.833,.02,1,1,"%D",0)
^^2^2^3141020^
"^DD",409.833,409.833,.02,1,1,"%D",1,0)
This AC xref is used to look up the SDEC RESOURCE USER record using the 
"^DD",409.833,409.833,.02,1,1,"%D",2,0)
given User (NEW PERSON).
"^DD",409.833,409.833,.02,1,1,"DT")
3140812
"^DD",409.833,409.833,.02,3)
Select the user who is linked to the Resource.
"^DD",409.833,409.833,.02,21,0)
^.001^2^2^3141017^^^
"^DD",409.833,409.833,.02,21,1,0)
This is the user (NEW PERSON file) that will be linked to a 
"^DD",409.833,409.833,.02,21,2,0)
Resource (SDEC RESOURCE file).
"^DD",409.833,409.833,.02,"DT")
3140812
"^DD",409.833,409.833,.03,0)
OVERBOOK^S^1:YES;0:NO;^0;3^Q
"^DD",409.833,409.833,.03,3)
Enter 1 or YES if this user is allowed to overbook. Enter 0 or NO if this user is not allowed to overbook.
"^DD",409.833,409.833,.03,21,0)
^.001^1^1^3141020^^^^
"^DD",409.833,409.833,.03,21,1,0)
Define if this user has Overbook privileges.
"^DD",409.833,409.833,.03,"DT")
3140812
"^DD",409.833,409.833,.04,0)
MODIFY SCHEDULE^S^1:YES;0:NO;^0;4^Q
"^DD",409.833,409.833,.04,3)
Enter 1 or YES if this user is allowed to modify schedules. Enter 0 or NO if this user is not allowed to modify schedules.
"^DD",409.833,409.833,.04,21,0)
^.001^1^1^3141020^^^^
"^DD",409.833,409.833,.04,21,1,0)
Define if this user can Modify Schedules.
"^DD",409.833,409.833,.04,"DT")
3140812
"^DD",409.833,409.833,.05,0)
MODIFY APPOINTMENTS^S^1:YES;0:NO;^0;5^Q
"^DD",409.833,409.833,.05,3)
Enter 1 or YES if this user is allowed to modify appointments. Enter 0 or NO if this user is not allowed to modify appointments.
"^DD",409.833,409.833,.05,21,0)
^.001^1^1^3141020^^^^
"^DD",409.833,409.833,.05,21,1,0)
Define if this user can Modify Appointments.
"^DD",409.833,409.833,.05,"DT")
3140812
"^DD",409.833,409.833,.06,0)
MASTEROVERBOOK^S^1:YES;0:NO;^0;6^Q
"^DD",409.833,409.833,.06,3)
Enter 1 or YES if this user has master overbook privileges. Enter 0 or NO if this user does not have these privileges.
"^DD",409.833,409.833,.06,21,0)
^.001^1^1^3141020^^^^
"^DD",409.833,409.833,.06,21,1,0)
Define if this user has Master Overbook capabilities.
"^DD",409.833,409.833,.06,"DT")
3140812
"^DD",409.834,409.834,0)
FIELD^^2^2
"^DD",409.834,409.834,0,"DDA")
N
"^DD",409.834,409.834,0,"DT")
3140915
"^DD",409.834,409.834,0,"IX","B",409.834,.01)

"^DD",409.834,409.834,0,"NM","SDEC ADDITIONAL RESOURCE")

"^DD",409.834,409.834,0,"PT",409.831,.01)

"^DD",409.834,409.834,0,"PT",409.831,.012)

"^DD",409.834,409.834,0,"VRPK")
SD
"^DD",409.834,409.834,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",409.834,409.834,.01,1,0)
^.1
"^DD",409.834,409.834,.01,1,1,0)
409.834^B
"^DD",409.834,409.834,.01,1,1,1)
S ^SDEC(409.834,"B",$E(X,1,30),DA)=""
"^DD",409.834,409.834,.01,1,1,2)
K ^SDEC(409.834,"B",$E(X,1,30),DA)
"^DD",409.834,409.834,.01,3)
Answer must be 3-30 characters in length.
"^DD",409.834,409.834,.01,21,0)
^^1^1^3141016^
"^DD",409.834,409.834,.01,21,1,0)
Name of this resource.
"^DD",409.834,409.834,.01,"DT")
3140915
"^DD",409.834,409.834,2,0)
INACTIVE^S^1:YES;0:NO;^0;2^Q
"^DD",409.834,409.834,2,3)
Enter 1 or YES if this additional resource is inactive. Enter 0 or NO if this additional resource is active.
"^DD",409.834,409.834,2,21,0)
^.001^1^1^3141021^^^
"^DD",409.834,409.834,2,21,1,0)
Yes/No field to indicate that this resource is inactive.
"^DD",409.834,409.834,2,"DT")
3140915
"^DD",409.84,409.84,0)
FIELD^^.23^28
"^DD",409.84,409.84,0,"DDA")
N
"^DD",409.84,409.84,0,"DT")
3150618
"^DD",409.84,409.84,0,"IX","AEX",409.84,.21)

"^DD",409.84,409.84,0,"IX","ARSRC",409.84,.07)

"^DD",409.84,409.84,0,"IX","B",409.84,.01)

"^DD",409.84,409.84,0,"IX","CPAT",409.84,.05)

"^DD",409.84,409.84,0,"NM","SDEC APPOINTMENT")

"^DD",409.84,409.84,0,"PT",409.852,.01)

"^DD",409.84,409.84,0,"VRPK")
SD
"^DD",409.84,409.84,.01,0)
STARTTIME^RD^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.01,1,0)
^.1
"^DD",409.84,409.84,.01,1,1,0)
409.84^B
"^DD",409.84,409.84,.01,1,1,1)
S ^SDEC(409.84,"B",$E(X,1,30),DA)=""
"^DD",409.84,409.84,.01,1,1,2)
K ^SDEC(409.84,"B",$E(X,1,30),DA)
"^DD",409.84,409.84,.01,3)
Enter a date and time
"^DD",409.84,409.84,.01,21,0)
^.001^1^1^3141021^^^^
"^DD",409.84,409.84,.01,21,1,0)
Date and Time this appointment is scheduled to start.
"^DD",409.84,409.84,.01,"DT")
3141021
"^DD",409.84,409.84,.02,0)
ENDTIME^RD^^0;2^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.02,3)
Enter a date and time
"^DD",409.84,409.84,.02,21,0)
^.001^1^1^3141021^^
"^DD",409.84,409.84,.02,21,1,0)
The date and time that this appointment ended.
"^DD",409.84,409.84,.02,"DT")
3141021
"^DD",409.84,409.84,.03,0)
CHECKIN^D^^0;3^S %DT="ETR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.03,3)
Enter a date and time
"^DD",409.84,409.84,.03,21,0)
^.001^1^1^3141103^^
"^DD",409.84,409.84,.03,21,1,0)
Date and Time of the Check-In for this appointment.
"^DD",409.84,409.84,.03,"DT")
3141103
"^DD",409.84,409.84,.04,0)
CHECK IN TIME ENTERED^D^^0;4^S %DT="ETR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.04,3)
Enter a date and time
"^DD",409.84,409.84,.04,21,0)
^.001^1^1^3141103^^
"^DD",409.84,409.84,.04,21,1,0)
Date/Time the Check-In was entered.
"^DD",409.84,409.84,.04,"DT")
3141103
"^DD",409.84,409.84,.05,0)
PATIENT^P9000001'^AUPNPAT(^0;5^Q
"^DD",409.84,409.84,.05,1,0)
^.1
"^DD",409.84,409.84,.05,1,1,0)
409.84^CPAT
"^DD",409.84,409.84,.05,1,1,1)
S ^SDEC(409.84,"CPAT",$E(X,1,30),DA)=""
"^DD",409.84,409.84,.05,1,1,2)
K ^SDEC(409.84,"CPAT",$E(X,1,30),DA)
"^DD",409.84,409.84,.05,1,1,"%D",0)
^^1^1^3141022^
"^DD",409.84,409.84,.05,1,1,"%D",1,0)
This xref is used to look up appointments by Patient.
"^DD",409.84,409.84,.05,1,1,"DT")
3140812
"^DD",409.84,409.84,.05,3)
Select a patient
"^DD",409.84,409.84,.05,21,0)
^^1^1^3141016^
"^DD",409.84,409.84,.05,21,1,0)
This is the patient that this appointment is scheduled for.
"^DD",409.84,409.84,.05,"DT")
3140812
"^DD",409.84,409.84,.06,0)
APPOINTMENT TYPE^P409.1'^SD(409.1,^0;6^Q
"^DD",409.84,409.84,.06,3)
Select an appointment type.
"^DD",409.84,409.84,.06,21,0)
^^1^1^3150522^
"^DD",409.84,409.84,.06,21,1,0)
This field represents the Appointment Type.
"^DD",409.84,409.84,.06,23,0)
^^1^1^3150522^
"^DD",409.84,409.84,.06,23,1,0)
This field is a pointer to the APPOINTMENT TYPE file 409.1.
"^DD",409.84,409.84,.06,"DT")
3150522
"^DD",409.84,409.84,.07,0)
RESOURCE^P409.831'^SDEC(409.831,^0;7^Q
"^DD",409.84,409.84,.07,1,0)
^.1
"^DD",409.84,409.84,.07,1,1,0)
409.84^ARSRC^MUMPS
"^DD",409.84,409.84,.07,1,1,1)
D XR2S^SDEC03(DA)
"^DD",409.84,409.84,.07,1,1,2)
D XR2K^SDEC03(DA)
"^DD",409.84,409.84,.07,1,1,"%D",0)
^^2^2^3140812^
"^DD",409.84,409.84,.07,1,1,"%D",1,0)
This index is used to find all appointments for a given resource during a 
"^DD",409.84,409.84,.07,1,1,"%D",2,0)
given time period.
"^DD",409.84,409.84,.07,1,1,"DT")
3140812
"^DD",409.84,409.84,.07,3)
Select a resource
"^DD",409.84,409.84,.07,21,0)
^^1^1^3141016^
"^DD",409.84,409.84,.07,21,1,0)
This field represents the resource that is scheduled for this appointment.
"^DD",409.84,409.84,.07,"DT")
3140812
"^DD",409.84,409.84,.08,0)
DATA ENTRY CLERK^P200'^VA(200,^0;8^Q
"^DD",409.84,409.84,.08,3)
Select the clerk who entered this appointment.
"^DD",409.84,409.84,.08,21,0)
^.001^1^1^3141017^^^^
"^DD",409.84,409.84,.08,21,1,0)
Field contains the ien of the clerk who made the appointment.
"^DD",409.84,409.84,.08,"DT")
3140812
"^DD",409.84,409.84,.09,0)
DATE APPT MADE^D^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.09,3)
Enter a date
"^DD",409.84,409.84,.09,21,0)
^.001^1^1^3141022^^^^
"^DD",409.84,409.84,.09,21,1,0)
Field contains the date the appointment was made.
"^DD",409.84,409.84,.09,"DT")
3141022
"^DD",409.84,409.84,.1,0)
NOSHOW^S^1:YES;0:NO;^0;10^Q
"^DD",409.84,409.84,.1,3)
Enter 1 or YES if this appointment was a No-Show. Enter 0 or NO if this appointment was not a No-Show.
"^DD",409.84,409.84,.1,21,0)
^.001^1^1^3141021^^
"^DD",409.84,409.84,.1,21,1,0)
Yes/No field indicating this appointment was a No-Show.
"^DD",409.84,409.84,.1,"DT")
3140812
"^DD",409.84,409.84,.101,0)
NOSHOW DATETIME^D^^0;23^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.101,3)
Enter a date and time
"^DD",409.84,409.84,.101,21,0)
^.001^1^1^3141021^^^
"^DD",409.84,409.84,.101,21,1,0)
This is the Date/Time that the No-Show was entered.
"^DD",409.84,409.84,.101,"DT")
3141021
"^DD",409.84,409.84,.102,0)
NOSHOW BY USER^P200'^VA(200,^0;24^Q
"^DD",409.84,409.84,.102,3)
Select the user that entered the No-Show
"^DD",409.84,409.84,.102,21,0)
^.001^1^1^3141017^^^^
"^DD",409.84,409.84,.102,21,1,0)
This is the User that entered the No-Show.
"^DD",409.84,409.84,.102,"DT")
3141015
"^DD",409.84,409.84,.11,0)
REBOOK DATETIME^D^^0;11^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.11,3)
Enter a date and time
"^DD",409.84,409.84,.11,21,0)
^.001^1^1^3141021^^
"^DD",409.84,409.84,.11,21,1,0)
This the date and time that the rebooking was entered.
"^DD",409.84,409.84,.11,"DT")
3141021
"^DD",409.84,409.84,.12,0)
CANCEL DATETIME^D^^0;12^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.12,3)
Enter cancellation date and time
"^DD",409.84,409.84,.12,21,0)
^.001^1^1^3141021^^
"^DD",409.84,409.84,.12,21,1,0)
The date/time the cancellation was entered.
"^DD",409.84,409.84,.12,"DT")
3141021
"^DD",409.84,409.84,.121,0)
CANCELLED BY USER^P200'^VA(200,^0;21^Q
"^DD",409.84,409.84,.121,3)
Select the user who entered this cancellation.
"^DD",409.84,409.84,.121,21,0)
^.001^1^1^3141017^^^^
"^DD",409.84,409.84,.121,21,1,0)
This is the user that entered the cancellation.
"^DD",409.84,409.84,.121,"DT")
3141014
"^DD",409.84,409.84,.122,0)
CANCELLATION REASON^P409.2'^SD(409.2,^0;22^Q
"^DD",409.84,409.84,.122,3)
Select a cancellation reason
"^DD",409.84,409.84,.122,21,0)
^.001^2^2^3141016^^
"^DD",409.84,409.84,.122,21,1,0)
Reason for Cancellation that was selected from the CANCELLATION REASON 
"^DD",409.84,409.84,.122,21,2,0)
file 409.2.
"^DD",409.84,409.84,.122,"DT")
3141014
"^DD",409.84,409.84,.13,0)
WALKIN^S^y:YES;n:NO;^0;13^Q
"^DD",409.84,409.84,.13,3)
Enter y or YES if this is a walk-in appointment. Enter n or NO if this is not a walk-in appointment.
"^DD",409.84,409.84,.13,21,0)
^.001^2^2^3141021^^
"^DD",409.84,409.84,.13,21,1,0)
Yes/No field to indicate that this appointment was a Walk-in or adhoc 
"^DD",409.84,409.84,.13,21,2,0)
appointment.
"^DD",409.84,409.84,.13,"DT")
3140812
"^DD",409.84,409.84,.14,0)
CHECKOUT^D^^0;14^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.14,3)
Enter checkout date and time
"^DD",409.84,409.84,.14,21,0)
^.001^1^1^3141021^^
"^DD",409.84,409.84,.14,21,1,0)
CHECKOUT DATE/TIME FOR APPOINTMENT.
"^DD",409.84,409.84,.14,"DT")
3141021
"^DD",409.84,409.84,.15,0)
V PROVIDER IEN^P9000010.06'^AUPNVPRV(^0;15^Q
"^DD",409.84,409.84,.15,3)
Select provider
"^DD",409.84,409.84,.15,21,0)
^^1^1^3141016^
"^DD",409.84,409.84,.15,21,1,0)
V PROVIDER IEN is the pointer to the V PROVIDER file for the patient.
"^DD",409.84,409.84,.15,"DT")
3140812
"^DD",409.84,409.84,.16,0)
PROVIDER^P200'^VA(200,^0;16^Q
"^DD",409.84,409.84,.16,3)
Select a provider
"^DD",409.84,409.84,.16,21,0)
^^1^1^3141016^
"^DD",409.84,409.84,.16,21,1,0)
The primary provider for this appointment.
"^DD",409.84,409.84,.16,"DT")
3140812
"^DD",409.84,409.84,.17,0)
STATUS^S^N:NO-SHOW;C:CANCELLED BY CLINIC;NA:NO-SHOW & AUTO RE-BOOK;CA:CANCELLED BY CLINIC & AUTO RE-BOOK;I:INPATIENT APPOINTMENT;PC:CANCELLED BY PATIENT;PCA:CANCELLED BY PATIENT & AUTO-REBOOK;NT:NO ACTION TAKEN;^0;17^Q
"^DD",409.84,409.84,.17,3)
Select an appointment status
"^DD",409.84,409.84,.17,21,0)
^.001^2^2^3150618^^
"^DD",409.84,409.84,.17,21,1,0)
Populated by SDEC CANCEL APPOINTMENT in the event there is an 'undo' of a 
"^DD",409.84,409.84,.17,21,2,0)
Cancelled Appointment.
"^DD",409.84,409.84,.17,"DT")
3150618
"^DD",409.84,409.84,.18,0)
LENGTH OF APPT^NJ3,0^^0;18^K:+X'=X!(X>120)!(X<5)!(X?.E1"."1N.N) X
"^DD",409.84,409.84,.18,3)
Type a number between 5 and 120, 0 decimal digits.
"^DD",409.84,409.84,.18,21,0)
^^3^3^3141016^
"^DD",409.84,409.84,.18,21,1,0)
This represents the length of this appointment in minutes. This is 
"^DD",409.84,409.84,.18,21,2,0)
populated when an appointment is cancelled and is used in the event that 
"^DD",409.84,409.84,.18,21,3,0)
the appointment is re-instated.
"^DD",409.84,409.84,.18,"DT")
3140812
"^DD",409.84,409.84,.19,0)
PREV APPT STATUS^P409.63'^SD(409.63,^0;19^Q
"^DD",409.84,409.84,.19,3)
Select an appointment status
"^DD",409.84,409.84,.19,21,0)
^^3^3^3141016^
"^DD",409.84,409.84,.19,21,1,0)
Pointer to APPOINTMENT STATUS file; used to restore status in visit 
"^DD",409.84,409.84,.19,21,2,0)
encounter in the event that a user re-instates the appointment after 
"^DD",409.84,409.84,.19,21,3,0)
a 'cancel' has been processed.
"^DD",409.84,409.84,.19,"DT")
3140812
"^DD",409.84,409.84,.2,0)
DESIRED DATE OF APPOINTMENT^D^^0;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.2,3)
Enter the desired date for this appointment.
"^DD",409.84,409.84,.2,21,0)
^.001^1^1^3141022^^^
"^DD",409.84,409.84,.2,21,1,0)
This is the appointment date that is needed/desired.
"^DD",409.84,409.84,.2,"DT")
3141022
"^DD",409.84,409.84,.21,0)
EXTERNAL ID^F^^0;25^K:$L(X)>50!($L(X)<1) X
"^DD",409.84,409.84,.21,1,0)
^.1
"^DD",409.84,409.84,.21,1,1,0)
409.84^AEX
"^DD",409.84,409.84,.21,1,1,1)
S ^SDEC(409.84,"AEX",$E(X,1,30),DA)=""
"^DD",409.84,409.84,.21,1,1,2)
K ^SDEC(409.84,"AEX",$E(X,1,30),DA)
"^DD",409.84,409.84,.21,1,1,"%D",0)
^^1^1^3141016^
"^DD",409.84,409.84,.21,1,1,"%D",1,0)
Used to lookup the SDEC APPOINTMENT ien using the external ID.
"^DD",409.84,409.84,.21,1,1,"DT")
3141016
"^DD",409.84,409.84,.21,3)
Answer must be 1-50 characters in length.
"^DD",409.84,409.84,.21,21,0)
^^1^1^3141017^
"^DD",409.84,409.84,.21,21,1,0)
This is used to hold an external identifier.
"^DD",409.84,409.84,.21,"DT")
3141016
"^DD",409.84,409.84,.22,0)
APPT REQUEST TYPE^VO^^2;1^Q
"^DD",409.84,409.84,.22,2)
S Y(0)=Y S Y=$S($P(Y,";",2)="SDWL(409.3,":"EWL",$P(Y,";",2)="GMR(123,":"CONSULT",$P(Y,";",2)="SD(403.5,":"RECALL",$P(Y,";",2)="SDEC(409.85,":"APPT",1:"")
"^DD",409.84,409.84,.22,2.1)
S Y=$S($P(Y,";",2)="SDWL(409.3,":"EWL",$P(Y,";",2)="GMR(123,":"CONSULT",$P(Y,";",2)="SD(403.5,":"RECALL",$P(Y,";",2)="SDEC(409.85,":"APPT",1:"")
"^DD",409.84,409.84,.22,3)
Select from SD WAIT LIST, REQUEST/CONSULTATION, SDEC APPT REQUEST, or RECALL REMINDERS.
"^DD",409.84,409.84,.22,21,0)
^.001^3^3^3150420^^
"^DD",409.84,409.84,.22,21,1,0)
This Variable Pointer field holds a pointer to either the SD WAIT LIST 
"^DD",409.84,409.84,.22,21,2,0)
file, REQUEST/CONSULTATION file, SDEC APPT REQUEST, or RECALL REMINDERS 
"^DD",409.84,409.84,.22,21,3,0)
file.
"^DD",409.84,409.84,.22,"DT")
3150910
"^DD",409.84,409.84,.22,"V",0)
^.12P^4^4
"^DD",409.84,409.84,.22,"V",1,0)
409.3^EWL^1^E^n^y
"^DD",409.84,409.84,.22,"V",2,0)
123^CONSULT^2^C^n^y
"^DD",409.84,409.84,.22,"V",3,0)
403.5^RECALL^3^R^n^y
"^DD",409.84,409.84,.22,"V",4,0)
409.85^APPT^4^A^n^y
"^DD",409.84,409.84,.23,0)
PATIENT STATUS^S^N:NEW;E:ESTABLISHED;^2;2^Q
"^DD",409.84,409.84,.23,3)
Enter N or NEW if the patient is a new patient. Enter E or ESTABLISHED if this patient has been seen in the past 24 months.
"^DD",409.84,409.84,.23,21,0)
^^3^3^3150609^
"^DD",409.84,409.84,.23,21,1,0)
This field represents the status of the patient in regards to being a 
"^DD",409.84,409.84,.23,21,2,0)
'NEW' or 'ESTABLISHED' patient.
"^DD",409.84,409.84,.23,21,3,0)
An ESTABLISHED patient has been seen within the past 24 months.
"^DD",409.84,409.84,.23,"DT")
3150609
"^DD",409.84,409.84,1,0)
NOTE^409.841^^1;0
"^DD",409.84,409.84,1,21,0)
^.001^1^1^3141016^^
"^DD",409.84,409.84,1,21,1,0)
This holds the text regarding the reason for the appointment.
"^DD",409.84,409.841,0)
NOTE SUB-FIELD^^.01^1
"^DD",409.84,409.841,0,"DT")
3140812
"^DD",409.84,409.841,0,"NM","NOTE")

"^DD",409.84,409.841,0,"UP")
409.84
"^DD",409.84,409.841,.01,0)
NOTE^Wx^^0;1^Q
"^DD",409.84,409.841,.01,3)
Enter the reason for this appointment.
"^DD",409.84,409.841,.01,21,0)
^.001^1^1^3141016^^
"^DD",409.84,409.841,.01,21,1,0)
For each entry, this is a line of text for the reason for the appointment.
"^DD",409.84,409.841,.01,"DT")
3140812
"^DD",409.845,409.845,0)
FIELD^^1^2
"^DD",409.845,409.845,0,"DDA")
N
"^DD",409.845,409.845,0,"DT")
3141118
"^DD",409.845,409.845,0,"IX","B",409.845,.01)

"^DD",409.845,409.845,0,"NM","SDEC PREFERENCES AND SPECIAL NEEDS")

"^DD",409.845,409.845,0,"VRPK")
SD
"^DD",409.845,409.845,.01,0)
PATIENT^RP2^DPT(^0;1^Q
"^DD",409.845,409.845,.01,1,0)
^.1
"^DD",409.845,409.845,.01,1,1,0)
409.845^B
"^DD",409.845,409.845,.01,1,1,1)
S ^SDEC(409.845,"B",$E(X,1,30),DA)=""
"^DD",409.845,409.845,.01,1,1,2)
K ^SDEC(409.845,"B",$E(X,1,30),DA)
"^DD",409.845,409.845,.01,3)
Select a patient
"^DD",409.845,409.845,.01,21,0)
^.001^1^1^3141016^^
"^DD",409.845,409.845,.01,21,1,0)
This is where the PATIENT is defined for the Patient Preferences.
"^DD",409.845,409.845,.01,"DT")
3140828
"^DD",409.845,409.845,1,0)
PREFERENCES^409.8451S^^1;0
"^DD",409.845,409.845,1,21,0)
^.001^1^1^3141118^^^^
"^DD",409.845,409.845,1,21,1,0)
Multiple patient preferences are defined here for a specific patient.
"^DD",409.845,409.845,1,"DT")
3140829
"^DD",409.845,409.8451,0)
PREFERENCES SUB-FIELD^^6^6
"^DD",409.845,409.8451,0,"DT")
3141118
"^DD",409.845,409.8451,0,"IX","B",409.8451,.01)

"^DD",409.845,409.8451,0,"NM","PREFERENCES")

"^DD",409.845,409.8451,0,"UP")
409.845
"^DD",409.845,409.8451,.01,0)
PREFERENCE^MRS^G:GENDER SPECIFIC PROVIDER;H:HEARING IMPAIRED;L:LANGUAGE PREFERENCE;N:NEEDS ESCORT;O:ON STRETCHER;S:SPECIAL MODE OF TRANSPORTATION;M:MORNING;A:AFTERNOON;MON:MONDAY;TUE:TUESDAY;WED:WEDNESDAY;THU:THURSDAY;FRI:FRIDAY;^0;1^Q
"^DD",409.845,409.8451,.01,1,0)
^.1
"^DD",409.845,409.8451,.01,1,1,0)
409.8451^B
"^DD",409.845,409.8451,.01,1,1,1)
S ^SDEC(409.845,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",409.845,409.8451,.01,1,1,2)
K ^SDEC(409.845,DA(1),1,"B",$E(X,1,30),DA)
"^DD",409.845,409.8451,.01,3)
Select a preference
"^DD",409.845,409.8451,.01,21,0)
^.001^1^1^3141118^^
"^DD",409.845,409.8451,.01,21,1,0)
The specific preference being defined for this patient.
"^DD",409.845,409.8451,.01,"DT")
3141118
"^DD",409.845,409.8451,2,0)
DATE/TIME ADDED^D^^0;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.845,409.8451,2,3)
Enter a date. Time is optional.
"^DD",409.845,409.8451,2,21,0)
^^2^2^3141020^
"^DD",409.845,409.8451,2,21,1,0)
Date/Time this preference was added.
"^DD",409.845,409.8451,2,21,2,0)
Time is optional.
"^DD",409.845,409.8451,2,"DT")
3141020
"^DD",409.845,409.8451,3,0)
ADDED BY USER^P200'^VA(200,^0;3^Q
"^DD",409.845,409.8451,3,3)
Select the user who entered this preference.
"^DD",409.845,409.8451,3,21,0)
^.001^1^1^3141017^^
"^DD",409.845,409.8451,3,21,1,0)
User that entered this preference.
"^DD",409.845,409.8451,3,"DT")
3140828
"^DD",409.845,409.8451,4,0)
INACTIVE DATE^D^^0;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.845,409.8451,4,3)
Enter a date. Time is optional.
"^DD",409.845,409.8451,4,21,0)
^^2^2^3141020^
"^DD",409.845,409.8451,4,21,1,0)
Date and time that this preference was inactivated.
"^DD",409.845,409.8451,4,21,2,0)
Time is optional.
"^DD",409.845,409.8451,4,"DT")
3141020
"^DD",409.845,409.8451,5,0)
INACTIVATED BY USER^P200'^VA(200,^0;5^Q
"^DD",409.845,409.8451,5,3)
Select the user who inactivated this preference.
"^DD",409.845,409.8451,5,21,0)
^.001^1^1^3141017^^
"^DD",409.845,409.8451,5,21,1,0)
User that inactivated this preference.
"^DD",409.845,409.8451,5,"DT")
3140829
"^DD",409.845,409.8451,6,0)
REMARKS^409.84516^^1;0
"^DD",409.845,409.8451,6,21,0)
^^1^1^3141016^
"^DD",409.845,409.8451,6,21,1,0)
This field contains additional remarks and details for this preference.
"^DD",409.845,409.84516,0)
REMARKS SUB-FIELD^^.01^1
"^DD",409.845,409.84516,0,"DT")
3140828
"^DD",409.845,409.84516,0,"NM","REMARKS")

"^DD",409.845,409.84516,0,"UP")
409.8451
"^DD",409.845,409.84516,.01,0)
REMARKS^Wx^^0;1^Q
"^DD",409.845,409.84516,.01,3)
Enter text
"^DD",409.845,409.84516,.01,21,0)
^^1^1^3141016^
"^DD",409.845,409.84516,.01,21,1,0)
This field contains additional remarks and details for this preference.
"^DD",409.845,409.84516,.01,"DT")
3140828
"^DD",409.85,409.85,0)
FIELD^^.02^37
"^DD",409.85,409.85,0,"DDA")
N
"^DD",409.85,409.85,0,"DT")
3160104
"^DD",409.85,409.85,0,"IX","B",409.85,.01)

"^DD",409.85,409.85,0,"IX","C",409.85,2)

"^DD",409.85,409.85,0,"IX","SC",409.85,8)

"^DD",409.85,409.85,0,"IX","SCC",409.85,8)

"^DD",409.85,409.85,0,"NM","SDEC APPT REQUEST")

"^DD",409.85,409.85,0,"PT",409.84,.22)

"^DD",409.85,409.85,0,"VRPK")
SD
"^DD",409.85,409.85,.01,0)
PATIENT^RP2^DPT(^0;1^Q
"^DD",409.85,409.85,.01,1,0)
^.1
"^DD",409.85,409.85,.01,1,1,0)
409.85^B
"^DD",409.85,409.85,.01,1,1,1)
S ^SDEC(409.85,"B",$E(X,1,30),DA)=""
"^DD",409.85,409.85,.01,1,1,2)
K ^SDEC(409.85,"B",$E(X,1,30),DA)
"^DD",409.85,409.85,.01,3)
Enter the name of the patient for this Appt Request.
"^DD",409.85,409.85,.01,21,0)
^.001^2^2^3150423^^
"^DD",409.85,409.85,.01,21,1,0)
This is the name of the patient that is to be on the SDEC APPT REQUEST 
"^DD",409.85,409.85,.01,21,2,0)
list.
"^DD",409.85,409.85,.01,23,0)
^.001^2^2^3150423^^^
"^DD",409.85,409.85,.01,23,1,0)
The patient selection is from the PATIENT file #2.
"^DD",409.85,409.85,.01,23,2,0)
The SDEC APPT REQUEST is 'this' file #409.85.
"^DD",409.85,409.85,.01,"DT")
3150625
"^DD",409.85,409.85,.02,0)
PATIENT STATUS^S^N:NEW;E:ESTABLISHED;^0;7^Q
"^DD",409.85,409.85,.02,3)
Enter N or NEW if the patient is a new patient. Enter E or ESTABLISHED if this patient has been seen in the past 24 months.
"^DD",409.85,409.85,.02,21,0)
^.001^3^3^3150803^^
"^DD",409.85,409.85,.02,21,1,0)
This field represents the status of the patient in regards to being a 
"^DD",409.85,409.85,.02,21,2,0)
'NEW' or 'ESTABLISHED' patient.
"^DD",409.85,409.85,.02,21,3,0)
An ESTABLISHED patient has been seen within the past 24 months.
"^DD",409.85,409.85,.02,"DT")
3150609
"^DD",409.85,409.85,1,0)
CREATE DATE^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.85,1,3)
Enter the date the request was made.
"^DD",409.85,409.85,1,21,0)
^^1^1^3150423^
"^DD",409.85,409.85,1,21,1,0)
This field represents the date that the appointment request was made.
"^DD",409.85,409.85,1,"DT")
3150625
"^DD",409.85,409.85,2,0)
INSTITUTION^R*P4'^DIC(4,^0;3^S DIC("S")="I $P(^(0),U,11)=""N"",$$TF^XUAF4(+Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.85,409.85,2,1,0)
^.1
"^DD",409.85,409.85,2,1,1,0)
409.85^C
"^DD",409.85,409.85,2,1,1,1)
S ^SDEC(409.85,"C",$E(X,1,30),DA)=""
"^DD",409.85,409.85,2,1,1,2)
K ^SDEC(409.85,"C",$E(X,1,30),DA)
"^DD",409.85,409.85,2,1,1,"%D",0)
^^2^2^3150418^
"^DD",409.85,409.85,2,1,1,"%D",1,0)
This xref is used to speed up the lookup of Appointment Requests by 
"^DD",409.85,409.85,2,1,1,"%D",2,0)
INSTITUTION.
"^DD",409.85,409.85,2,1,1,"DT")
3150418
"^DD",409.85,409.85,2,3)
Select an Institution
"^DD",409.85,409.85,2,12)
Only allow a National/Medical Institution.
"^DD",409.85,409.85,2,12.1)
S DIC("S")="I $P(^(0),U,11)=""N"",$$TF^XUAF4(+Y)"
"^DD",409.85,409.85,2,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,2,21,1,0)
This field represents the Institution assigned to identify the specific 
"^DD",409.85,409.85,2,21,2,0)
location.
"^DD",409.85,409.85,2,"DT")
3150418
"^DD",409.85,409.85,4,0)
REQUEST TYPE^RS^APPT:APPOINTMENT;MOBILE:MOBILE;^0;5^Q
"^DD",409.85,409.85,4,3)
Select an appointment request type
"^DD",409.85,409.85,4,21,0)
^.001^3^3^3151029^^^
"^DD",409.85,409.85,4,21,1,0)
This field represents the type of appointment request that being 
"^DD",409.85,409.85,4,21,2,0)
requested.
"^DD",409.85,409.85,4,21,3,0)
.
"^DD",409.85,409.85,4,"DT")
3151029
"^DD",409.85,409.85,8,0)
REQ SPECIFIC CLINIC^RP44'^SC(^0;9^Q
"^DD",409.85,409.85,8,1,0)
^.1
"^DD",409.85,409.85,8,1,1,0)
409.85^SC^MUMPS
"^DD",409.85,409.85,8,1,1,1)
I $D(X) S ^SDEC(409.85,"SC",$P(^SC(X,0),U,1),DA)=""
"^DD",409.85,409.85,8,1,1,2)
K ^SDEC(409.85,"SC",$P(^SC(X,0),U,1),DA)
"^DD",409.85,409.85,8,1,1,"%D",0)
^^1^1^3150418^
"^DD",409.85,409.85,8,1,1,"%D",1,0)
Sort and Lookup Appointment Request by Clinic name.
"^DD",409.85,409.85,8,1,1,"DT")
3150418
"^DD",409.85,409.85,8,1,2,0)
409.85^SCC^MUMPS
"^DD",409.85,409.85,8,1,2,1)
I $D(X) S ^SDEC(409.85,"SCC",$P(^SDEC(409.85,DA,0),U,1),X,DA)=""
"^DD",409.85,409.85,8,1,2,2)
K ^SDEC(409.85,"SCC",$P(^SDEC(409.85,DA,0),U,1),X,DA)
"^DD",409.85,409.85,8,1,2,"%D",0)
^^1^1^3150418^
"^DD",409.85,409.85,8,1,2,"%D",1,0)
Sort/Lookup Appointment Request by Specific Clinic.
"^DD",409.85,409.85,8,1,2,"DT")
3150418
"^DD",409.85,409.85,8,3)
Select a clinic
"^DD",409.85,409.85,8,21,0)
^^4^4^3150423^
"^DD",409.85,409.85,8,21,1,0)
This field represents the clinic that this appointment request is for.
"^DD",409.85,409.85,8,21,2,0)
 
"^DD",409.85,409.85,8,21,3,0)
If the patient has been assigned to the APPT REQUEST list, enter the
"^DD",409.85,409.85,8,21,4,0)
clinic that the patient is waiting for an appointment.
"^DD",409.85,409.85,8,"DT")
3150418
"^DD",409.85,409.85,8.5,0)
REQ SERVICE/SPECIALTY^*P40.7'^DIC(40.7,^0;4^S DIC("S")="I ($P(^(0),U,3)="""")!($P($P(^(0),U,3),""."",1)>$P($$NOW^XLFDT,""."",1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.85,409.85,8.5,3)
Select a CLINIC STOP
"^DD",409.85,409.85,8.5,12)
Allow only active CLINIC STOP entries.
"^DD",409.85,409.85,8.5,12.1)
S DIC("S")="I ($P(^(0),U,3)="""")!($P($P(^(0),U,3),""."",1)>$P($$NOW^XLFDT,""."",1))"
"^DD",409.85,409.85,8.5,21,0)
^.001^2^2^3150429^^
"^DD",409.85,409.85,8.5,21,1,0)
This field represents the CLINIC STOP code (also referred to as 
"^DD",409.85,409.85,8.5,21,2,0)
SERVICE/SPECIALTY) that is associated with this appointment.
"^DD",409.85,409.85,8.5,"DT")
3150418
"^DD",409.85,409.85,8.7,0)
REQ APPOINTMENT TYPE^P409.1'^SD(409.1,^0;6^Q
"^DD",409.85,409.85,8.7,3)
Select an appointment type.
"^DD",409.85,409.85,8.7,21,0)
^^1^1^3150522^
"^DD",409.85,409.85,8.7,21,1,0)
This field represents the appointment type for this request.
"^DD",409.85,409.85,8.7,"DT")
3150522
"^DD",409.85,409.85,9,0)
ORIGINATING USER^P200'^VA(200,^0;10^Q
"^DD",409.85,409.85,9,3)
Select a user
"^DD",409.85,409.85,9,21,0)
^^1^1^3150423^
"^DD",409.85,409.85,9,21,1,0)
This is the user that entered this appointment request.
"^DD",409.85,409.85,9,"DT")
3150418
"^DD",409.85,409.85,9.5,0)
DATE/TIME ENTERED^D^^3;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.85,9.5,3)
Enter a date. Time is optional.
"^DD",409.85,409.85,9.5,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,9.5,21,1,0)
This is the Date and optional Time that this appointment request entry 
"^DD",409.85,409.85,9.5,21,2,0)
was entered.
"^DD",409.85,409.85,9.5,"DT")
3150418
"^DD",409.85,409.85,10,0)
PRIORITY^RS^A:ASAP;F:FUTURE;^0;11^Q
"^DD",409.85,409.85,10,3)
Enter A or ASAP to set the priority as 'As Soon As Possible'. Enter F or FUTURE to set the priority as Future.
"^DD",409.85,409.85,10,21,0)
^^7^7^3150423^
"^DD",409.85,409.85,10,21,1,0)
This represents the appointment priority. 
"^DD",409.85,409.85,10,21,2,0)
 
"^DD",409.85,409.85,10,21,3,0)
Future indicates that the patient needs an appointment in the 
"^DD",409.85,409.85,10,21,4,0)
future and a desired date will be entered by the user.  ASAP indicates 
"^DD",409.85,409.85,10,21,5,0)
that the patient needs an appointment before the currently next available 
"^DD",409.85,409.85,10,21,6,0)
appointment (as soon as a slot opens).  The desired date for ASAP will be 
"^DD",409.85,409.85,10,21,7,0)
set by the system as the current date.
"^DD",409.85,409.85,10,"DT")
3150418
"^DD",409.85,409.85,10.5,0)
ENROLLMENT PRIORITY^S^1:GROUP 1;2:GROUP 2;3:GROUP 3;4:GROUP 4;5:GROUP 5;6:GROUP 6;7:GROUP 7;8:GROUP 8;^0;25^Q
"^DD",409.85,409.85,10.5,3)
Select an enrollment priority.
"^DD",409.85,409.85,10.5,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,10.5,21,1,0)
The ENROLLMENT PRIORITY field represents the appointment Enrollment 
"^DD",409.85,409.85,10.5,21,2,0)
Priority.
"^DD",409.85,409.85,10.5,"DT")
3150418
"^DD",409.85,409.85,11,0)
REQUESTED BY^RS^1:PROVIDER;2:PATIENT;^0;12^Q
"^DD",409.85,409.85,11,3)
Enter 1 or PROVIDER if the requestor was a provider. Enter 2 or PATIENT if the requestor was the patient.
"^DD",409.85,409.85,11,21,0)
^.001^2^2^3150423^^
"^DD",409.85,409.85,11,21,1,0)
This field identifies who requested the appointment - the patient or a 
"^DD",409.85,409.85,11,21,2,0)
provider.
"^DD",409.85,409.85,11,"DT")
3150422
"^DD",409.85,409.85,12,0)
PROVIDER^P200'^VA(200,^0;13^Q
"^DD",409.85,409.85,12,3)
Select the provider that requested the patient's appointment.
"^DD",409.85,409.85,12,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,12,21,1,0)
This field represents the provider that requested the appointment if the 
"^DD",409.85,409.85,12,21,2,0)
appointment was requested by a provider.
"^DD",409.85,409.85,12,"DT")
3150418
"^DD",409.85,409.85,13,0)
SCHEDULED DATE OF APPT^D^^0;23^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.85,13,3)
Enter the date and optional time of the scheduled appointment for this request.
"^DD",409.85,409.85,13,21,0)
^^3^3^3150423^
"^DD",409.85,409.85,13,21,1,0)
This is the appointment date and optional time scheduled for the patient.
"^DD",409.85,409.85,13,21,2,0)
This appointment may be used as a reason for closing 'this' appointment 
"^DD",409.85,409.85,13,21,3,0)
request.
"^DD",409.85,409.85,13,23,0)
^.001^1^1^3150423^^^^
"^DD",409.85,409.85,13,23,1,0)
This is a date/time of the scheduled appointment related to this entry.
"^DD",409.85,409.85,13,"DT")
3150418
"^DD",409.85,409.85,13.1,0)
DATE APPT. MADE^D^^SDAPT;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.85,13.1,3)
Enter the date that the appointment was made.
"^DD",409.85,409.85,13.1,21,0)
^.001^1^1^3150423^^^^
"^DD",409.85,409.85,13.1,21,1,0)
This is the date the appointment was created.
"^DD",409.85,409.85,13.1,23,0)
^.001^2^2^3150423^^^^
"^DD",409.85,409.85,13.1,23,1,0)
The Appointment Creation Date. It corresponds to the DATE APPT. MADE 
"^DD",409.85,409.85,13.1,23,2,0)
field (#20) of the APPOINTMENT multiple (#1900) in the PATIENT file (#2).
"^DD",409.85,409.85,13.1,"DT")
3150423
"^DD",409.85,409.85,13.2,0)
APPT CLINIC^P44'^SC(^SDAPT;2^Q
"^DD",409.85,409.85,13.2,3)
Select the clinic that this appointment is scheduled for.
"^DD",409.85,409.85,13.2,21,0)
^^1^1^3150423^
"^DD",409.85,409.85,13.2,21,1,0)
This is the clinic this appointment was created for.
"^DD",409.85,409.85,13.2,23,0)
^.001^1^1^3150423^^^
"^DD",409.85,409.85,13.2,23,1,0)
Pointer to the HOSPITAL LOCATION file (#44) of the related appointment.
"^DD",409.85,409.85,13.2,"DT")
3150418
"^DD",409.85,409.85,13.3,0)
APPT INSTITUTION^P4'^DIC(4,^SDAPT;3^Q
"^DD",409.85,409.85,13.3,3)
Select an Institution.
"^DD",409.85,409.85,13.3,21,0)
^^1^1^3150423^
"^DD",409.85,409.85,13.3,21,1,0)
This is the institution the clinic appointment belongs to.
"^DD",409.85,409.85,13.3,23,0)
^.001^2^2^3150423^^^^
"^DD",409.85,409.85,13.3,23,1,0)
A pointer from the HOSPITAL LOCATION file of the scheduled appointment to 
"^DD",409.85,409.85,13.3,23,2,0)
the INSTITUTION file (#4).
"^DD",409.85,409.85,13.3,"DT")
3150418
"^DD",409.85,409.85,13.4,0)
APPT STOP CODE^P40.7'^DIC(40.7,^SDAPT;4^Q
"^DD",409.85,409.85,13.4,3)
Select a CLINIC STOP code.
"^DD",409.85,409.85,13.4,21,0)
^^3^3^3150423^
"^DD",409.85,409.85,13.4,21,1,0)
This is the stop code/specialty of a clinic associated with the patient 
"^DD",409.85,409.85,13.4,21,2,0)
appointment. This may be different that the STOP CODE defined in the REQ 
"^DD",409.85,409.85,13.4,21,3,0)
SERVICE/SPECIALTY field.
"^DD",409.85,409.85,13.4,23,0)
^.001^2^2^3150423^^^
"^DD",409.85,409.85,13.4,23,1,0)
This is the primary STOP CODE Number pointer to the CLINIC STOP file 
"^DD",409.85,409.85,13.4,23,2,0)
(#40.7).
"^DD",409.85,409.85,13.4,"DT")
3150418
"^DD",409.85,409.85,13.5,0)
APPT CREDIT STOP CODE^P40.7'^DIC(40.7,^SDAPT;5^Q
"^DD",409.85,409.85,13.5,3)
Select a CLINIC STOP code.
"^DD",409.85,409.85,13.5,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,13.5,21,1,0)
This is the credit stop code optionally assigned to the HOSPITAL LOCATION 
"^DD",409.85,409.85,13.5,21,2,0)
file associated with the scheduled appointment.
"^DD",409.85,409.85,13.5,23,0)
^.001^4^4^3150423^^^
"^DD",409.85,409.85,13.5,23,1,0)
This is the secondary (optional) Stop Code Number pointer to the CLINIC 
"^DD",409.85,409.85,13.5,23,2,0)
STOP file (#40.7).
"^DD",409.85,409.85,13.5,23,3,0)
This stop code is assigned to the HOSPITAL LOCATION file associated with 
"^DD",409.85,409.85,13.5,23,4,0)
the scheduled appointment.
"^DD",409.85,409.85,13.5,"DT")
3150418
"^DD",409.85,409.85,13.6,0)
APPT STATION NUMBER^F^^SDAPT;6^K:$L(X)>6!($L(X)<3) X
"^DD",409.85,409.85,13.6,3)
Answer must be 3-6 characters in length.
"^DD",409.85,409.85,13.6,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,13.6,21,1,0)
This is the 3-digit station number assigned to the facility plus up to 3 
"^DD",409.85,409.85,13.6,21,2,0)
optional modifiers.
"^DD",409.85,409.85,13.6,23,0)
^.001^2^2^3150423^^^
"^DD",409.85,409.85,13.6,23,1,0)
This is the STATION NUMBER field (#99) of the INSTITUTION file (#4) 
"^DD",409.85,409.85,13.6,23,2,0)
associated with the scheduled appointment.
"^DD",409.85,409.85,13.6,"DT")
3150418
"^DD",409.85,409.85,13.7,0)
APPT CLERK^P200'^VA(200,^SDAPT;7^Q
"^DD",409.85,409.85,13.7,3)
Select an Appt Clerk
"^DD",409.85,409.85,13.7,21,0)
^^1^1^3150423^
"^DD",409.85,409.85,13.7,21,1,0)
This is the person who assigned the appointment to the REQUEST entry.
"^DD",409.85,409.85,13.7,23,0)
^^2^2^3150423^
"^DD",409.85,409.85,13.7,23,1,0)
This is a pointer to the NEW PERSON file and it represents a person who 
"^DD",409.85,409.85,13.7,23,2,0)
entered the scheduled appointment into the Appointment Request.
"^DD",409.85,409.85,13.7,"DT")
3150418
"^DD",409.85,409.85,13.8,0)
APPT STATUS^S^R:Scheduled/Kept;I:Inpatient;NS:No-Show;NSR:No_Show, Rescheduled;CP:Canceled by Patient;CPR:Canceled by Patient, Rescheduled;CC:Canceled by Clinic;CCR:Canceled by Clinic, Rescheduled;NT:No Action Taken;^SDAPT;8^Q
"^DD",409.85,409.85,13.8,3)
Select an Appt Status
"^DD",409.85,409.85,13.8,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,13.8,21,1,0)
This field identifies the status of the appointment that is associated 
"^DD",409.85,409.85,13.8,21,2,0)
with this appointment request.
"^DD",409.85,409.85,13.8,"DT")
3150418
"^DD",409.85,409.85,14,0)
SERVICE CONNECTED PERCENTAGE^NJ3,0^^SC;1^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.85,409.85,14,3)
Type a number between 0 and 100, 0 decimal digits.
"^DD",409.85,409.85,14,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,14,21,1,0)
The SERVICE CONNECTED PERCENTAGE is used to determine the service 
"^DD",409.85,409.85,14,21,2,0)
connected priority.
"^DD",409.85,409.85,14,"DT")
3150418
"^DD",409.85,409.85,15,0)
SERVICE CONNECTED PRIORITY^S^0:NO;1:YES;^SC;2^Q
"^DD",409.85,409.85,15,3)
Enter 0 or NO if the appointment does not get a Service Connected Priority. Enter 1 or YES if the appointment DOES get a Service Connected Priority.
"^DD",409.85,409.85,15,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,15,21,1,0)
This field represents whether the appointment has a Service Connected 
"^DD",409.85,409.85,15,21,2,0)
Priority.
"^DD",409.85,409.85,15,"DT")
3150418
"^DD",409.85,409.85,19,0)
DATE DISPOSITIONED^D^^DIS;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.85,19,3)
Enter a date.
"^DD",409.85,409.85,19,21,0)
^.001^2^2^3150423^^
"^DD",409.85,409.85,19,21,1,0)
This represents the date that the patient is dispositioned from the 
"^DD",409.85,409.85,19,21,2,0)
Appointment Request list.
"^DD",409.85,409.85,19,"DT")
3150423
"^DD",409.85,409.85,20,0)
DISPOSITIONED BY^P200'^VA(200,^DIS;2^Q
"^DD",409.85,409.85,20,3)
Select a user/provider
"^DD",409.85,409.85,20,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,20,21,1,0)
This represents the user who dispositioned the patient from the 
"^DD",409.85,409.85,20,21,2,0)
appointment request list.
"^DD",409.85,409.85,20,"DT")
3150418
"^DD",409.85,409.85,21,0)
DISPOSITION^S^D:DEATH;NC:REMOVED/NON-VA CARE;SA:REMOVED/SCHEDULED-ASSIGNED;CC:REMOVED/VA CONTRACT CARE;NN:REMOVED/NO LONGER NECESSARY;ER:ENTERED IN ERROR;TR:TRANSFERRED TO EWL;CL:CHANGED CLINIC;^DIS;3^Q
"^DD",409.85,409.85,21,3)
Select a disposition
"^DD",409.85,409.85,21,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,21,21,1,0)
This field represents the reason this patient has been dispositioned from 
"^DD",409.85,409.85,21,21,2,0)
this appointment Request.
"^DD",409.85,409.85,21,"DT")
3150418
"^DD",409.85,409.85,22,0)
CID/PREFERRED DATE OF APPT^RD^^0;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.85,22,3)
Enter the CID/Preferred Date of this appointment.
"^DD",409.85,409.85,22,21,0)
^^8^8^3150423^
"^DD",409.85,409.85,22,21,1,0)
This CID/PREFERRED DATE OF APPT field represents the date that the 
"^DD",409.85,409.85,22,21,2,0)
patient or provider has requested for the appointment.
"^DD",409.85,409.85,22,21,3,0)
 
"^DD",409.85,409.85,22,21,4,0)
 
"^DD",409.85,409.85,22,21,5,0)
If the priority is ASAP, this is the date the patient is placed on the
"^DD",409.85,409.85,22,21,6,0)
REQUEST List (SCHEDULING).
"^DD",409.85,409.85,22,21,7,0)
If the priority is FUTURE, the user enters the date that the 
"^DD",409.85,409.85,22,21,8,0)
patient/provider is requesting that the appointment is to be scheduled.
"^DD",409.85,409.85,22,"DT")
3150423
"^DD",409.85,409.85,23,0)
CURRENT STATUS^S^O:OPEN;C:CLOSED;^0;17^Q
"^DD",409.85,409.85,23,3)
Enter O or OPEN if the APPT Request entry is open. Enter C or CLOSED if the APPT Request entry is closed.
"^DD",409.85,409.85,23,21,0)
^^3^3^3150804^
"^DD",409.85,409.85,23,21,1,0)
This field represents the current status of this appointment request.
"^DD",409.85,409.85,23,21,2,0)
If the APPT Request entry is dispositioned, the status = 
"^DD",409.85,409.85,23,21,3,0)
CLOSED, otherwise, the APPT Request entry status = OPEN.
"^DD",409.85,409.85,23,"DT")
3150625
"^DD",409.85,409.85,25,0)
COMMENTS^F^^0;18^K:$L(X)>80!($L(X)<1) X
"^DD",409.85,409.85,25,3)
Answer must be 1-80 characters in length.
"^DD",409.85,409.85,25,21,0)
^.001^7^7^3160104^^
"^DD",409.85,409.85,25,21,1,0)
This Free Text field represents information related to the appointment 
"^DD",409.85,409.85,25,21,2,0)
request.
"^DD",409.85,409.85,25,21,3,0)
 
"^DD",409.85,409.85,25,21,4,0)
 
"^DD",409.85,409.85,25,21,5,0)
example: see progress note date 5/01/02 this would direct the scheduling 
"^DD",409.85,409.85,25,21,6,0)
clerk to a note that may contain lab, xray orders that need to be 
"^DD",409.85,409.85,25,21,7,0)
completed prior to the appointment.
"^DD",409.85,409.85,25,"DT")
3160104
"^DD",409.85,409.85,41,0)
MULTIPLE APPOINTMENT RTC^S^0:NO;1:YES;^3;1^Q
"^DD",409.85,409.85,41,3)
Select 1 or YES if multiple appointments are needed. Select 0 or NO if multiple appointments are not needed.
"^DD",409.85,409.85,41,21,0)
^^7^7^3150423^
"^DD",409.85,409.85,41,21,1,0)
This field represents that Multiple Appointments need to be made.
"^DD",409.85,409.85,41,21,2,0)
 
"^DD",409.85,409.85,41,21,3,0)
If set to NO (0 zero), Multiple Appointment (Return to Clinic) are not 
"^DD",409.85,409.85,41,21,4,0)
scheduled.
"^DD",409.85,409.85,41,21,5,0)
 
"^DD",409.85,409.85,41,21,6,0)
If set to YES (1), Multiple Appointment (Return to Clinic) could be 
"^DD",409.85,409.85,41,21,7,0)
scheduled.
"^DD",409.85,409.85,41,"DT")
3150418
"^DD",409.85,409.85,42,0)
MULT APPT RTC INTERVAL^NJ3,0^^3;2^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.85,409.85,42,3)
Type a number between 0 and 365, 0 decimal digits.
"^DD",409.85,409.85,42,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,42,21,1,0)
The MULT APPT RTC INTERVAL represents the number of Days between 
"^DD",409.85,409.85,42,21,2,0)
appointments.
"^DD",409.85,409.85,42,"DT")
3150418
"^DD",409.85,409.85,43,0)
MULT APPT NUMBER^NJ3,0^^3;3^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",409.85,409.85,43,3)
Type a number between 0 and 100, 0 decimal digits.
"^DD",409.85,409.85,43,21,0)
^^1^1^3150423^
"^DD",409.85,409.85,43,21,1,0)
This field represents the number of appointments that may be needed.
"^DD",409.85,409.85,43,"DT")
3150418
"^DD",409.85,409.85,43.3,0)
MULT APPTS MADE^409.852P^^2;0
"^DD",409.85,409.85,43.3,21,0)
^^2^2^3150511^
"^DD",409.85,409.85,43.3,21,1,0)
These are the MRTC Appointments that have been made for this appointment 
"^DD",409.85,409.85,43.3,21,2,0)
request.
"^DD",409.85,409.85,43.3,23,0)
^^1^1^3150511^
"^DD",409.85,409.85,43.3,23,1,0)
These appointments are pointers to the SDEC APPOINTMENT file 409.84.
"^DD",409.85,409.85,43.5,0)
MRTC CALC PREF DATES^409.851D^^5;0
"^DD",409.85,409.85,43.5,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,43.5,21,1,0)
This multiple field holds the dates that are requested for multiple 
"^DD",409.85,409.85,43.5,21,2,0)
appointments.
"^DD",409.85,409.85,44,0)
PATIENT CONTACT^409.8544D^^4;0
"^DD",409.85,409.85,44,21,0)
^.001^1^1^3150902^^^^
"^DD",409.85,409.85,44,21,1,0)
This multiple records the patient contact events.
"^DD",409.85,409.851,0)
MRTC CALC PREF DATES SUB-FIELD^^.01^1
"^DD",409.85,409.851,0,"DT")
3150418
"^DD",409.85,409.851,0,"IX","B",409.851,.01)

"^DD",409.85,409.851,0,"NM","MRTC CALC PREF DATES")

"^DD",409.85,409.851,0,"UP")
409.85
"^DD",409.85,409.851,.01,0)
MRTC CALC PREF DATES^MD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.851,.01,1,0)
^.1
"^DD",409.85,409.851,.01,1,1,0)
409.851^B
"^DD",409.85,409.851,.01,1,1,1)
S ^SDEC(409.85,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",409.85,409.851,.01,1,1,2)
K ^SDEC(409.85,DA(1),5,"B",$E(X,1,30),DA)
"^DD",409.85,409.851,.01,3)
Enter a date
"^DD",409.85,409.851,.01,21,0)
^^2^2^3150423^
"^DD",409.85,409.851,.01,21,1,0)
This field represents one of the dates requested for one of the multiple 
"^DD",409.85,409.851,.01,21,2,0)
appointments.
"^DD",409.85,409.851,.01,"DT")
3150418
"^DD",409.85,409.852,0)
MULT APPTS MADE SUB-FIELD^^.01^1
"^DD",409.85,409.852,0,"DT")
3150511
"^DD",409.85,409.852,0,"IX","B",409.852,.01)

"^DD",409.85,409.852,0,"NM","MULT APPTS MADE")

"^DD",409.85,409.852,0,"UP")
409.85
"^DD",409.85,409.852,.01,0)
MULT APPTS MADE^MP409.84'^SDEC(409.84,^0;1^Q
"^DD",409.85,409.852,.01,1,0)
^.1
"^DD",409.85,409.852,.01,1,1,0)
409.852^B
"^DD",409.85,409.852,.01,1,1,1)
S ^SDEC(409.85,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",409.85,409.852,.01,1,1,2)
K ^SDEC(409.85,DA(1),2,"B",$E(X,1,30),DA)
"^DD",409.85,409.852,.01,3)
Select an appointment
"^DD",409.85,409.852,.01,21,0)
^.001^2^2^3150511^^
"^DD",409.85,409.852,.01,21,1,0)
This field represents one of the Multiple Appointments that have been 
"^DD",409.85,409.852,.01,21,2,0)
made based on this appointment request.
"^DD",409.85,409.852,.01,23,0)
^^1^1^3150511^
"^DD",409.85,409.852,.01,23,1,0)
Pointer to the SDEC APPOINTMENT file 409.84.
"^DD",409.85,409.852,.01,"DT")
3150511
"^DD",409.85,409.8544,0)
PATIENT CONTACT SUB-FIELD^^4^4
"^DD",409.85,409.8544,0,"DT")
3150902
"^DD",409.85,409.8544,0,"IX","B",409.8544,.01)

"^DD",409.85,409.8544,0,"NM","PATIENT CONTACT")

"^DD",409.85,409.8544,0,"UP")
409.85
"^DD",409.85,409.8544,.01,0)
DATE ENTERED^D^^0;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.8544,.01,1,0)
^.1
"^DD",409.85,409.8544,.01,1,1,0)
409.8544^B
"^DD",409.85,409.8544,.01,1,1,1)
S ^SDEC(409.85,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",409.85,409.8544,.01,1,1,2)
K ^SDEC(409.85,DA(1),4,"B",$E(X,1,30),DA)
"^DD",409.85,409.8544,.01,3)
Enter the date and optional time that this patient was contacted.
"^DD",409.85,409.8544,.01,21,0)
^.001^3^3^3150423^^^^
"^DD",409.85,409.8544,.01,21,1,0)
This DATE ENTERED field represents the Date that an attempt was made to 
"^DD",409.85,409.8544,.01,21,2,0)
contact the patient regarding 'this' appointment REQUEST.
"^DD",409.85,409.8544,.01,21,3,0)
The time can also be optionally entered.
"^DD",409.85,409.8544,.01,"DT")
3150422
"^DD",409.85,409.8544,2,0)
ENTERED BY USER^P200'^VA(200,^0;2^Q
"^DD",409.85,409.8544,2,3)
Select a user/provider
"^DD",409.85,409.8544,2,21,0)
^^2^2^3150423^
"^DD",409.85,409.8544,2,21,1,0)
This ENTERED BY USER field represents the user/provider that made an 
"^DD",409.85,409.8544,2,21,2,0)
attempt to contact the patient regarding this appointment request.
"^DD",409.85,409.8544,2,"DT")
3150418
"^DD",409.85,409.8544,3,0)
ACTION^S^C:CALLED;M:MESSAGE LEFT;L:LETTER;^0;3^Q
"^DD",409.85,409.8544,3,3)
Select an action.
"^DD",409.85,409.8544,3,21,0)
^.001^5^5^3150423^^
"^DD",409.85,409.8544,3,21,1,0)
The ACTION field represents the attempt that was made to contact the 
"^DD",409.85,409.8544,3,21,2,0)
patient regarding 'this' appointment.
"^DD",409.85,409.8544,3,21,3,0)
C = Called
"^DD",409.85,409.8544,3,21,4,0)
M = Message Left
"^DD",409.85,409.8544,3,21,5,0)
L = Letter
"^DD",409.85,409.8544,3,"DT")
3150418
"^DD",409.85,409.8544,4,0)
PATIENT PHONE^F^^0;4^K:$L(X)>20!($L(X)<4) X
"^DD",409.85,409.8544,4,3)
Answer must be 4-20 characters in length.
"^DD",409.85,409.8544,4,21,0)
^.001^1^1^3150423^^
"^DD",409.85,409.8544,4,21,1,0)
This is the phone number used to contact the patient.
"^DD",409.85,409.8544,4,"DT")
3150418
"^DIC",409.81,409.81,0)
SDEC APPLICATION^409.81
"^DIC",409.81,409.81,0,"GL")
^SDEC(409.81,
"^DIC",409.81,409.81,"%",0)
^1.005^^0
"^DIC",409.81,409.81,"%D",0)
^^1^1^3141010^
"^DIC",409.81,409.81,"%D",1,0)
This is where Versions and Builds are recorded for Clinic Scheduling.
"^DIC",409.81,"B","SDEC APPLICATION",409.81)

"^DIC",409.822,409.822,0)
SDEC ACCESS GROUP^409.822
"^DIC",409.822,409.822,0,"GL")
^SDEC(409.822,
"^DIC",409.822,409.822,"%",0)
^1.005^^0
"^DIC",409.822,409.822,"%D",0)
^^4^4^3141010^
"^DIC",409.822,409.822,"%D",1,0)
This is where Access Groups are defined.
"^DIC",409.822,409.822,"%D",2,0)
These Groups are sometimes termed as 'department'.
"^DIC",409.822,409.822,"%D",3,0)
These are used to 'group' access types to tie together a group of 
"^DIC",409.822,409.822,"%D",4,0)
Resources that may be selected from.
"^DIC",409.822,"B","SDEC ACCESS GROUP",409.822)

"^DIC",409.823,409.823,0)
SDEC ACCESS TYPE^409.823
"^DIC",409.823,409.823,0,"GL")
^SDEC(409.823,
"^DIC",409.823,409.823,"%",0)
^1.005^^0
"^DIC",409.823,409.823,"%D",0)
^^5^5^3141022^
"^DIC",409.823,409.823,"%D",1,0)
This is where Access Types are defined.
"^DIC",409.823,409.823,"%D",2,0)
The Resource object points to this file.
"^DIC",409.823,409.823,"%D",3,0)
This is where the Group (or department) 
"^DIC",409.823,409.823,"%D",4,0)
is linked to a resource and where the colors are
"^DIC",409.823,409.823,"%D",5,0)
defined for the calendar.
"^DIC",409.823,"B","SDEC ACCESS TYPE",409.823)

"^DIC",409.824,409.824,0)
SDEC ACCESS GROUP TYPE^409.824
"^DIC",409.824,409.824,0,"GL")
^SDEC(409.824,
"^DIC",409.824,409.824,"%",0)
^1.005^^0
"^DIC",409.824,409.824,"%D",0)
^^2^2^3141017^
"^DIC",409.824,409.824,"%D",1,0)
This is where Access Groups and Access Types are paired together.
"^DIC",409.824,409.824,"%D",2,0)
This is used to group Resources.
"^DIC",409.824,"B","SDEC ACCESS GROUP TYPE",409.824)

"^DIC",409.831,409.831,0)
SDEC RESOURCE^409.831
"^DIC",409.831,409.831,0,"GL")
^SDEC(409.831,
"^DIC",409.831,409.831,"%",0)
^1.005^^0
"^DIC",409.831,409.831,"%D",0)
^^4^4^3141010^
"^DIC",409.831,409.831,"%D",1,0)
This is where a Resource object is defined for Clinical Scheduling.
"^DIC",409.831,409.831,"%D",2,0)
A Resource Object can be a NEW PERSON, HOSPITAL LOCATION, or an SDEC 
"^DIC",409.831,409.831,"%D",3,0)
ADDITIONAL RESOURCE.
"^DIC",409.831,409.831,"%D",4,0)
A Resource is linked to a HOSPITAL LOCATION (or Clinic).
"^DIC",409.831,"B","SDEC RESOURCE",409.831)

"^DIC",409.832,409.832,0)
SDEC RESOURCE GROUP^409.832
"^DIC",409.832,409.832,0,"GL")
^SDEC(409.832,
"^DIC",409.832,409.832,"%",0)
^1.005^^0
"^DIC",409.832,409.832,"%D",0)
^^1^1^3141010^
"^DIC",409.832,409.832,"%D",1,0)
This is where Resources are 'grouped' with other Resources.
"^DIC",409.832,"B","SDEC RESOURCE GROUP",409.832)

"^DIC",409.833,409.833,0)
SDEC RESOURCE USER^409.833
"^DIC",409.833,409.833,0,"GL")
^SDEC(409.833,
"^DIC",409.833,409.833,"%",0)
^1.005^^0
"^DIC",409.833,409.833,"%D",0)
^^3^3^3141010^
"^DIC",409.833,409.833,"%D",1,0)
This is where a NEW PERSON user is linked to a Resource (SDEC RESOURCE).
"^DIC",409.833,409.833,"%D",2,0)
The user's ability to Overbook, Modify Schedules, and 
"^DIC",409.833,409.833,"%D",3,0)
modify appointments are defined here.
"^DIC",409.833,"B","SDEC RESOURCE USER",409.833)

"^DIC",409.834,409.834,0)
SDEC ADDITIONAL RESOURCE^409.834
"^DIC",409.834,409.834,0,"GL")
^SDEC(409.834,
"^DIC",409.834,409.834,"%",0)
^1.005^^0
"^DIC",409.834,409.834,"%D",0)
^^3^3^3141020^
"^DIC",409.834,409.834,"%D",1,0)
This file is as used a source file for items that are to be defined as a 
"^DIC",409.834,409.834,"%D",2,0)
resource, but do not fit into a typical Resource source file.
"^DIC",409.834,409.834,"%D",3,0)
SDEC RESOURCE points to this file.
"^DIC",409.834,"B","SDEC ADDITIONAL RESOURCE",409.834)

"^DIC",409.84,409.84,0)
SDEC APPOINTMENT^409.84
"^DIC",409.84,409.84,0,"GL")
^SDEC(409.84,
"^DIC",409.84,409.84,"%",0)
^1.005^^0
"^DIC",409.84,409.84,"%D",0)
^^1^1^3141010^
"^DIC",409.84,409.84,"%D",1,0)
This is where appointment definitions are linked to a resource.
"^DIC",409.84,"B","SDEC APPOINTMENT",409.84)

"^DIC",409.845,409.845,0)
SDEC PREFERENCES AND SPECIAL NEEDS^409.845
"^DIC",409.845,409.845,0,"GL")
^SDEC(409.845,
"^DIC",409.845,409.845,"%",0)
^1.005^^0
"^DIC",409.845,409.845,"%D",0)
^^1^1^3141010^^
"^DIC",409.845,409.845,"%D",1,0)
This is where Patient Preferences are defined for Patients.
"^DIC",409.845,"B","SDEC PREFERENCES AND SPECIAL NEEDS",409.845)

"^DIC",409.85,409.85,0)
SDEC APPT REQUEST^409.85
"^DIC",409.85,409.85,0,"GL")
^SDEC(409.85,
"^DIC",409.85,409.85,"%",0)
^1.005^^0
"^DIC",409.85,409.85,"%D",0)
^^3^3^3150423^
"^DIC",409.85,409.85,"%D",1,0)
This file contains the SDEC Appt Request entries for the Appointment 
"^DIC",409.85,409.85,"%D",2,0)
Scheduling application.
"^DIC",409.85,409.85,"%D",3,0)
Each entry represents a unique appointment request.
"^DIC",409.85,"B","SDEC APPT REQUEST",409.85)

"BLD",9291,6)
^533
**END**
**END**

