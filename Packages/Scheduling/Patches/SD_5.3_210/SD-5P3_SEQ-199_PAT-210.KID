Released SD*5.3*210 SEQ #199
Extracted from mail message
**KIDS**:SD*5.3*210^

**INSTALL NAME**
SD*5.3*210
"BLD",2009,0)
SD*5.3*210^SCHEDULING^0^3000602^y
"BLD",2009,1,0)
^^2^2^3000404^
"BLD",2009,1,1,0)
The changes included in this patch are described in the description of
"BLD",2009,1,2,0)
patch SD*5.3*210 in the National Patch Module.
"BLD",2009,4,0)
^9.64PA^404.49^4
"BLD",2009,4,404.44,0)
404.44
"BLD",2009,4,404.44,2,0)
^9.641^404.44^1
"BLD",2009,4,404.44,2,404.44,0)
PCMM PARAMETER  (File-top level)
"BLD",2009,4,404.44,2,404.44,1,0)
^9.6411^16^1
"BLD",2009,4,404.44,2,404.44,1,16,0)
HL7 AUTO RETRANSMIT PERIOD
"BLD",2009,4,404.44,222)
y^n^p^^^^n
"BLD",2009,4,404.471,0)
404.471
"BLD",2009,4,404.471,222)
y^n^f^^^^n
"BLD",2009,4,404.472,0)
404.472
"BLD",2009,4,404.472,222)
y^n^f^^n^^y^o^n
"BLD",2009,4,404.49,0)
404.49
"BLD",2009,4,404.49,222)
y^n^f^^^^n
"BLD",2009,4,"APDD",404.44,404.44)

"BLD",2009,4,"APDD",404.44,404.44,16)

"BLD",2009,4,"B",404.44,404.44)

"BLD",2009,4,"B",404.471,404.471)

"BLD",2009,4,"B",404.472,404.472)

"BLD",2009,4,"B",404.49,404.49)

"BLD",2009,"ABPKG")
n
"BLD",2009,"INI")
PRE^SD53P210
"BLD",2009,"INID")
^^
"BLD",2009,"INIT")
POST^SD53P210
"BLD",2009,"KRN",0)
^9.67PA^19^18
"BLD",2009,"KRN",.4,0)
.4
"BLD",2009,"KRN",.401,0)
.401
"BLD",2009,"KRN",.402,0)
.402
"BLD",2009,"KRN",.403,0)
.403
"BLD",2009,"KRN",.5,0)
.5
"BLD",2009,"KRN",.84,0)
.84
"BLD",2009,"KRN",3.6,0)
3.6
"BLD",2009,"KRN",3.8,0)
3.8
"BLD",2009,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",2009,"KRN",3.8,"NM",1,0)
PCMM TRANSMISSION ERRORS^^0
"BLD",2009,"KRN",3.8,"NM","B","PCMM TRANSMISSION ERRORS",1)

"BLD",2009,"KRN",9.2,0)
9.2
"BLD",2009,"KRN",9.8,0)
9.8
"BLD",2009,"KRN",9.8,"NM",0)
^9.68A^26^25
"BLD",2009,"KRN",9.8,"NM",1,0)
SCMCBK8^^0^B22296156
"BLD",2009,"KRN",9.8,"NM",2,0)
SCMCBK6^^0^B5484158
"BLD",2009,"KRN",9.8,"NM",3,0)
SD53P210^^0^B13288328
"BLD",2009,"KRN",9.8,"NM",4,0)
SCAPMC29^^0^B9093400
"BLD",2009,"KRN",9.8,"NM",5,0)
SCMCBK1^^0^B71079112
"BLD",2009,"KRN",9.8,"NM",6,0)
SCMCHLB^^0^B11566939
"BLD",2009,"KRN",9.8,"NM",7,0)
SCMCHLB2^^0^B13614527
"BLD",2009,"KRN",9.8,"NM",8,0)
SCMCHLZ^^0^B13126286
"BLD",2009,"KRN",9.8,"NM",9,0)
SCMCHLG^^0^B7272111
"BLD",2009,"KRN",9.8,"NM",11,0)
SCMCHLR2^^0^B20268889
"BLD",2009,"KRN",9.8,"NM",12,0)
SCMCHLR3^^0^B29528872
"BLD",2009,"KRN",9.8,"NM",13,0)
SCMCHLR4^^0^B62195531
"BLD",2009,"KRN",9.8,"NM",14,0)
SCMCHLR5^^0^B27254443
"BLD",2009,"KRN",9.8,"NM",15,0)
SCMCHLR7^^0^B515623
"BLD",2009,"KRN",9.8,"NM",16,0)
SCMCHLR8^^0^B18283652
"BLD",2009,"KRN",9.8,"NM",17,0)
SCMCHLR9^^0^B30493907
"BLD",2009,"KRN",9.8,"NM",18,0)
SCMCHLRI^^0^B21337367
"BLD",2009,"KRN",9.8,"NM",19,0)
SCMCHLRR^^0^B19223493
"BLD",2009,"KRN",9.8,"NM",20,0)
SCMCHLA^^0^B24513797
"BLD",2009,"KRN",9.8,"NM",21,0)
SCMCHLA1^^0^B8401211
"BLD",2009,"KRN",9.8,"NM",22,0)
SCMCHLA2^^0^B1471359
"BLD",2009,"KRN",9.8,"NM",23,0)
SCMCHLL^^0^B8259205
"BLD",2009,"KRN",9.8,"NM",24,0)
SCMCHLR1^^0^B6518401
"BLD",2009,"KRN",9.8,"NM",25,0)
SCMCHLM^^0^B19344144
"BLD",2009,"KRN",9.8,"NM",26,0)
SCMCHLS^^0^B5339874
"BLD",2009,"KRN",9.8,"NM","B","SCAPMC29",4)

"BLD",2009,"KRN",9.8,"NM","B","SCMCBK1",5)

"BLD",2009,"KRN",9.8,"NM","B","SCMCBK6",2)

"BLD",2009,"KRN",9.8,"NM","B","SCMCBK8",1)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLA",20)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLA1",21)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLA2",22)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLB",6)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLB2",7)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLG",9)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLL",23)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLM",25)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR1",24)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR2",11)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR3",12)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR4",13)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR5",14)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR7",15)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR8",16)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLR9",17)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLRI",18)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLRR",19)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLS",26)

"BLD",2009,"KRN",9.8,"NM","B","SCMCHLZ",8)

"BLD",2009,"KRN",9.8,"NM","B","SD53P210",3)

"BLD",2009,"KRN",19,0)
19
"BLD",2009,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",2009,"KRN",19,"NM",1,0)
SCMC PCMM HL7 TRANSMIT^^0
"BLD",2009,"KRN",19,"NM",2,0)
SCMC PCMM REJECT TRANS MENU^^0
"BLD",2009,"KRN",19,"NM",3,0)
SCMC PCMM ERR CODE REPORT^^0
"BLD",2009,"KRN",19,"NM",4,0)
SCMC PCMM TRANS ERROR REPORT^^0
"BLD",2009,"KRN",19,"NM",5,0)
SCMC PCMM TRANS ERROR PROC^^0
"BLD",2009,"KRN",19,"NM","B","SCMC PCMM ERR CODE REPORT",3)

"BLD",2009,"KRN",19,"NM","B","SCMC PCMM HL7 TRANSMIT",1)

"BLD",2009,"KRN",19,"NM","B","SCMC PCMM REJECT TRANS MENU",2)

"BLD",2009,"KRN",19,"NM","B","SCMC PCMM TRANS ERROR PROC",5)

"BLD",2009,"KRN",19,"NM","B","SCMC PCMM TRANS ERROR REPORT",4)

"BLD",2009,"KRN",19.1,0)
19.1
"BLD",2009,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",2009,"KRN",19.1,"NM",1,0)
SCMC PCMM RETRANSMIT^^0
"BLD",2009,"KRN",19.1,"NM","B","SCMC PCMM RETRANSMIT",1)

"BLD",2009,"KRN",101,0)
101
"BLD",2009,"KRN",101,"NM",0)
^9.68A^14^14
"BLD",2009,"KRN",101,"NM",1,0)
SCMC LE CHANGE DATE RANGE^^0
"BLD",2009,"KRN",101,"NM",2,0)
SCMC LE CHANGE STATUS^^0
"BLD",2009,"KRN",101,"NM",3,0)
SCMC LE CHECK ERROR OFF LIST^^0
"BLD",2009,"KRN",101,"NM",4,0)
SCMC LE DESELECT ALL^^0
"BLD",2009,"KRN",101,"NM",5,0)
SCMC LE DESELECT PATIENT^^0
"BLD",2009,"KRN",101,"NM",6,0)
SCMC LE PCMM TRANSMISSION ERRORS MENU^^0
"BLD",2009,"KRN",101,"NM",7,0)
SCMC LE PRINT ERROR CODES^^1^
"BLD",2009,"KRN",101,"NM",8,0)
SCMC LE RETRANSMIT ALL^^0
"BLD",2009,"KRN",101,"NM",9,0)
SCMC LE RETRANSMIT PATIENT^^0
"BLD",2009,"KRN",101,"NM",10,0)
SCMC LE SORT LIST^^0
"BLD",2009,"KRN",101,"NM",11,0)
SCMC LE UNCHECK ERROR^^0
"BLD",2009,"KRN",101,"NM",12,0)
PCMM SEND SERVER FOR ADT-A08^^0
"BLD",2009,"KRN",101,"NM",13,0)
PCMM SEND CLIENT FOR ADT-A08^^0
"BLD",2009,"KRN",101,"NM",14,0)
VALM PRINT LIST^^4^
"BLD",2009,"KRN",101,"NM","B","PCMM SEND CLIENT FOR ADT-A08",13)

"BLD",2009,"KRN",101,"NM","B","PCMM SEND SERVER FOR ADT-A08",12)

"BLD",2009,"KRN",101,"NM","B","SCMC LE CHANGE DATE RANGE",1)

"BLD",2009,"KRN",101,"NM","B","SCMC LE CHANGE STATUS",2)

"BLD",2009,"KRN",101,"NM","B","SCMC LE CHECK ERROR OFF LIST",3)

"BLD",2009,"KRN",101,"NM","B","SCMC LE DESELECT ALL",4)

"BLD",2009,"KRN",101,"NM","B","SCMC LE DESELECT PATIENT",5)

"BLD",2009,"KRN",101,"NM","B","SCMC LE PCMM TRANSMISSION ERRORS MENU",6)

"BLD",2009,"KRN",101,"NM","B","SCMC LE PRINT ERROR CODES",7)

"BLD",2009,"KRN",101,"NM","B","SCMC LE RETRANSMIT ALL",8)

"BLD",2009,"KRN",101,"NM","B","SCMC LE RETRANSMIT PATIENT",9)

"BLD",2009,"KRN",101,"NM","B","SCMC LE SORT LIST",10)

"BLD",2009,"KRN",101,"NM","B","SCMC LE UNCHECK ERROR",11)

"BLD",2009,"KRN",101,"NM","B","VALM PRINT LIST",14)

"BLD",2009,"KRN",409.61,0)
409.61
"BLD",2009,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",2009,"KRN",409.61,"NM",1,0)
SCMC PCMM TRANSMISSION ERRORS^^0
"BLD",2009,"KRN",409.61,"NM","B","SCMC PCMM TRANSMISSION ERRORS",1)

"BLD",2009,"KRN",771,0)
771
"BLD",2009,"KRN",771,"NM",0)
^9.68A^^
"BLD",2009,"KRN",869.2,0)
869.2
"BLD",2009,"KRN",870,0)
870
"BLD",2009,"KRN",8994,0)
8994
"BLD",2009,"KRN","B",.4,.4)

"BLD",2009,"KRN","B",.401,.401)

"BLD",2009,"KRN","B",.402,.402)

"BLD",2009,"KRN","B",.403,.403)

"BLD",2009,"KRN","B",.5,.5)

"BLD",2009,"KRN","B",.84,.84)

"BLD",2009,"KRN","B",3.6,3.6)

"BLD",2009,"KRN","B",3.8,3.8)

"BLD",2009,"KRN","B",9.2,9.2)

"BLD",2009,"KRN","B",9.8,9.8)

"BLD",2009,"KRN","B",19,19)

"BLD",2009,"KRN","B",19.1,19.1)

"BLD",2009,"KRN","B",101,101)

"BLD",2009,"KRN","B",409.61,409.61)

"BLD",2009,"KRN","B",771,771)

"BLD",2009,"KRN","B",869.2,869.2)

"BLD",2009,"KRN","B",870,870)

"BLD",2009,"KRN","B",8994,8994)

"BLD",2009,"PRE")
SD53P210
"BLD",2009,"QUES",0)
^9.62^^
"BLD",2009,"REQB",0)
^9.611^3^3
"BLD",2009,"REQB",1,0)
SD*5.3*177^2
"BLD",2009,"REQB",2,0)
SD*5.3*204^2
"BLD",2009,"REQB",3,0)
SD*5.3*51^2
"BLD",2009,"REQB","B","SD*5.3*177",1)

"BLD",2009,"REQB","B","SD*5.3*204",2)

"BLD",2009,"REQB","B","SD*5.3*51",3)

"DATA",404.472,1,0)
000M^^^No errors
"DATA",404.472,1,"DESC",0)
^^1^1^3000201^^
"DATA",404.472,1,"DESC",1,0)
No errors.
"DATA",404.472,2,0)
001M^^^ENV segment missing
"DATA",404.472,2,"DESC",0)
^^1^1^3000222^
"DATA",404.472,2,"DESC",1,0)
EVN segment missing (Contact IRM for assistance).
"DATA",404.472,3,0)
002M^^^PID segment missing
"DATA",404.472,3,"DESC",0)
^^1^1^3000222^
"DATA",404.472,3,"DESC",1,0)
PID segment missing (Contact IRM for assistance).
"DATA",404.472,4,0)
003M^^^ZPC segment missing
"DATA",404.472,4,"DESC",0)
^^1^1^3000222^
"DATA",404.472,4,"DESC",1,0)
ZPC segment missing (Contact IRM for assistance).
"DATA",404.472,5,0)
005M^^^Invalid segment name
"DATA",404.472,5,"DESC",0)
^^1^1^3000222^
"DATA",404.472,5,"DESC",1,0)
Invalid segment name (Contact IRM for assistance).
"DATA",404.472,6,0)
104M^EVN^Event Date/Time^Event Date missing or out of range
"DATA",404.472,6,"DESC",0)
^^1^1^3000224^^^^
"DATA",404.472,6,"DESC",1,0)
Event Date is missing or out of range.
"DATA",404.472,7,0)
106M^EVN^Event Date/Time^Event Time invalid or missing
"DATA",404.472,7,"DESC",0)
^^1^1^3000224^^^^
"DATA",404.472,7,"DESC",1,0)
Event Time is invalid or missing.
"DATA",404.472,8,0)
110M^MSH^Message Control ID^Message Control ID missing
"DATA",404.472,8,"DESC",0)
^^1^1^3000222^
"DATA",404.472,8,"DESC",1,0)
Message Control ID missing (Contact IRM for assistance).
"DATA",404.472,9,0)
113M^EVN^Event Type^Event Type is not 'A08'
"DATA",404.472,9,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,9,"DESC",1,0)
Event Type is not 'A08' (Contact IRM for assistance).
"DATA",404.472,10,0)
200M^PID^Patient Name^Patient Name invalid or missing
"DATA",404.472,10,"DESC",0)
^^1^1^3000224^^^^
"DATA",404.472,10,"DESC",1,0)
Patient Name is missing or invalid.
"DATA",404.472,11,0)
210M^PID^Patient ID^Patient ID invalid or not numeric
"DATA",404.472,11,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,11,"DESC",1,0)
Patient ID is missing or not numeric.
"DATA",404.472,12,0)
220M^PID^Date of Birth^Patient Date of Birth missing
"DATA",404.472,12,"DESC",0)
^^1^1^3000201^
"DATA",404.472,12,"DESC",1,0)
Date of Birth is missing.
"DATA",404.472,13,0)
221M^PID^Date of Birth^Patient year invalid
"DATA",404.472,13,"DESC",0)
^^1^1^3000224^^^
"DATA",404.472,13,"DESC",1,0)
Invalid year or year greater than the processing year.
"DATA",404.472,14,0)
223M^PID^Date of Birth^Patient Date of Birth invalid
"DATA",404.472,14,"DESC",0)
^^1^1^3000224^^^
"DATA",404.472,14,"DESC",1,0)
Invalid Date of Birth.
"DATA",404.472,15,0)
224M^PID^Date of Birth^Patient Date of Birth greater than processing date
"DATA",404.472,15,"DESC",0)
^^1^1^3000201^
"DATA",404.472,15,"DESC",1,0)
Date of Birth greater than processing date.
"DATA",404.472,16,0)
230M^PID^Sex^Patient Sex code invalid or missing
"DATA",404.472,16,"DESC",0)
^^1^1^3000224^
"DATA",404.472,16,"DESC",1,0)
Sex code is invalid or missing.
"DATA",404.472,17,0)
240M^PID^Race^Patient Race code invalid
"DATA",404.472,17,"DESC",0)
^^1^1^3000201^
"DATA",404.472,17,"DESC",1,0)
Invalid Race code.
"DATA",404.472,18,0)
250M^PID^Marital Status^Patient Marital Status code invalid
"DATA",404.472,18,"DESC",0)
^^1^1^3000201^
"DATA",404.472,18,"DESC",1,0)
Invalid Marital Status code.
"DATA",404.472,19,0)
260M^PID^State^Patient State Code invalid
"DATA",404.472,19,"DESC",0)
^^1^1^3000201^
"DATA",404.472,19,"DESC",1,0)
Invalid state code.
"DATA",404.472,20,0)
261M^PID^County^Patient County code invalid
"DATA",404.472,20,"DESC",0)
^^1^1^3000201^
"DATA",404.472,20,"DESC",1,0)
Invalid County code.
"DATA",404.472,21,0)
262M^PID^Address Line 1^Patient Address Line 1 is all numeric
"DATA",404.472,21,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,21,"DESC",1,0)
Address Line 1 is all numeric.
"DATA",404.472,22,0)
263M^PID^Address Line 2^Patient Address Line 2 is all numeric
"DATA",404.472,22,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,22,"DESC",1,0)
Address Line 2 is all numeric.
"DATA",404.472,23,0)
264M^PID^City^Patient City invalid
"DATA",404.472,23,"DESC",0)
^^1^1^3000201^
"DATA",404.472,23,"DESC",1,0)
City contains all numbers.
"DATA",404.472,24,0)
270M^PID^Religion^Patient Religion code invalid
"DATA",404.472,24,"DESC",0)
^^1^1^3000201^
"DATA",404.472,24,"DESC",1,0)
Invalid Religion code.
"DATA",404.472,25,0)
280M^PID^Zip Code^Patient Zip Code invalid
"DATA",404.472,25,"DESC",0)
^^1^1^3000201^
"DATA",404.472,25,"DESC",1,0)
Zip Code not numeric.
"DATA",404.472,26,0)
290M^PID^SSN^Patient SSN invalid
"DATA",404.472,26,"DESC",0)
^^1^1^3000201^
"DATA",404.472,26,"DESC",1,0)
SSN is missing, or not numeric, or is equal to zeros.
"DATA",404.472,27,0)
291M^PID^SSN^Patient Pseudo SSN invalid
"DATA",404.472,27,"DESC",0)
^^1^1^3000224^^^^
"DATA",404.472,27,"DESC",1,0)
Pseudo SSN is not 'P' or blank.
"DATA",404.472,28,0)
300M^ZPC^Provider Assignment ID^Provider Assignment ID invalid
"DATA",404.472,28,"DESC",0)
^^1^1^3000307^^^^
"DATA",404.472,28,"DESC",1,0)
Provider Assignment ID is invalid.
"DATA",404.472,29,0)
310M^ZPC^Provider ID^Provider ID invalid
"DATA",404.472,29,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,29,"DESC",1,0)
Non-numeric ID and/or invalid entry.
"DATA",404.472,30,0)
320M^ZPC^Date Provider Assigned^Provider Assigned Date invalid
"DATA",404.472,30,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,30,"DESC",1,0)
Date Provider Assigned is an invalid date.
"DATA",404.472,31,0)
330M^ZPC^Date Provider Unassigned^Provider Unassigned Date invalid
"DATA",404.472,31,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,31,"DESC",1,0)
Date Provider Unassigned is an invalid date (if date is present).
"DATA",404.472,32,0)
340M^ZPC^Provider Type Code^Provider Type Code invalid
"DATA",404.472,32,"DESC",0)
^^1^1^3000224^^
"DATA",404.472,32,"DESC",1,0)
Provider Type Code is not 'PCP' or 'AP'.
"DATA",404.472,33,0)
350M^ZPC^Provider Person Class^Provider Person Class Type Code invalid
"DATA",404.472,33,"DESC",0)
^^1^1^3000201^^
"DATA",404.472,33,"DESC",1,0)
Provider Person Class (seq 6 comp 1) is invalid.
"DATA",404.472,34,0)
360M^ZPC^Provider Person Class^Provider Person Class file invalid
"DATA",404.472,34,"DESC",0)
^^1^1^3000224^^^
"DATA",404.472,34,"DESC",1,0)
Provider Person Class (seq 6 comp 3) not 'VA8932.1'.
"FIA",404.44)
PCMM PARAMETER
"FIA",404.44,0)
^SCTM(404.44,
"FIA",404.44,0,0)
404.44
"FIA",404.44,0,1)
y^n^p^^^^n
"FIA",404.44,0,10)

"FIA",404.44,0,11)

"FIA",404.44,0,"RLRO")

"FIA",404.44,0,"VR")
5.3^SD
"FIA",404.44,404.44)
1
"FIA",404.44,404.44,16)

"FIA",404.471)
PCMM HL7 TRANSMISSION LOG
"FIA",404.471,0)
^SCPT(404.471,
"FIA",404.471,0,0)
404.471
"FIA",404.471,0,1)
y^n^f^^^^n
"FIA",404.471,0,10)

"FIA",404.471,0,11)

"FIA",404.471,0,"RLRO")

"FIA",404.471,0,"VR")
5.3^SD
"FIA",404.471,404.471)
0
"FIA",404.471,404.47141)
0
"FIA",404.471,404.47142)
0
"FIA",404.472)
PCMM HL7 ERROR CODE
"FIA",404.472,0)
^SCPT(404.472,
"FIA",404.472,0,0)
404.472
"FIA",404.472,0,1)
y^n^f^^n^^y^o^n
"FIA",404.472,0,10)

"FIA",404.472,0,11)

"FIA",404.472,0,"RLRO")

"FIA",404.472,0,"VR")
5.3^SD
"FIA",404.472,404.472)
0
"FIA",404.472,404.482)
0
"FIA",404.49)
PCMM HL7 ID
"FIA",404.49,0)
^SCPT(404.49,
"FIA",404.49,0,0)
404.49
"FIA",404.49,0,1)
y^n^f^^^^n
"FIA",404.49,0,10)

"FIA",404.49,0,11)

"FIA",404.49,0,"RLRO")

"FIA",404.49,0,"VR")
5.3^SD
"FIA",404.49,404.49)
0
"INI")
PRE^SD53P210
"INIT")
POST^SD53P210
"KRN",3.8,233,-1)
0^1
"KRN",3.8,233,0)
PCMM TRANSMISSION ERRORS^PU^y^^^0^
"KRN",3.8,233,2,0)
^^2^2^3000302^^^^
"KRN",3.8,233,2,1,0)
This mail group is used to notify the local site that PCMM HL7
"KRN",3.8,233,2,2,0)
Transmission errors were received from the Austin Automation Center (AAC).
"KRN",19,8941,-1)
0^1
"KRN",19,8941,0)
SCMC PCMM HL7 TRANSMIT^PCMM HL7 Transmission^^A^^^^^^^^SCHEDULING^^1
"KRN",19,8941,1,0)
^19.06^3^3^3000419^^^^
"KRN",19,8941,1,1,0)
This menu option should be queued to run nightly. It will go thru
"KRN",19,8941,1,2,0)
the "AACXMIT" xref on the PCMM HL7 EVENT file and send an HL7
"KRN",19,8941,1,3,0)
message to the NPCD in Austin for each entry.
"KRN",19,8941,20)
D MAIN^SCMCHL(1),^SCMCHLRR,AUTO^SCMCHLRR
"KRN",19,8941,"U")
PCMM HL7 TRANSMISSION
"KRN",19,9075,-1)
0^2
"KRN",19,9075,0)
SCMC PCMM REJECT TRANS MENU^PCMM Reject Transmission Menu^^M^^^^^^^y^SCHEDULING
"KRN",19,9075,1,0)
^^2^2^3000224^^
"KRN",19,9075,1,1,0)
This option will contain all options associated with reporting/processing
"KRN",19,9075,1,2,0)
of PCMM HL7 Reject/Error Transmissions.
"KRN",19,9075,10,0)
^19.01IP^3^3
"KRN",19,9075,10,1,0)
9076^EP
"KRN",19,9075,10,1,"^")
SCMC PCMM TRANS ERROR PROC
"KRN",19,9075,10,2,0)
9077^ECR
"KRN",19,9075,10,2,"^")
SCMC PCMM ERR CODE REPORT
"KRN",19,9075,10,3,0)
9079^ER
"KRN",19,9075,10,3,"^")
SCMC PCMM TRANS ERROR REPORT
"KRN",19,9075,99)
58129,26446
"KRN",19,9075,99.1)
58225,82886
"KRN",19,9075,"U")
PCMM REJECT TRANSMISSION MENU
"KRN",19,9076,-1)
0^5
"KRN",19,9076,0)
SCMC PCMM TRANS ERROR PROC^PCMM Transmission Error Processing^^R^^^^^^^^SCHEDULING
"KRN",19,9076,1,0)
^^2^2^3000225^^^^
"KRN",19,9076,1,1,0)
This option permits users to review transmission errors logged in the PCMM
"KRN",19,9076,1,2,0)
HL7 TRANSMISSION LOG file.
"KRN",19,9076,25)
EN^SCMCHLR1
"KRN",19,9076,99.1)
58225,82886
"KRN",19,9076,"U")
PCMM TRANSMISSION ERROR PROCES
"KRN",19,9077,-1)
0^3
"KRN",19,9077,0)
SCMC PCMM ERR CODE REPORT^PCMM Transmission Error Code Report^^R^^^^^^^^SCHEDULING
"KRN",19,9077,1,0)
^^2^2^3000210^
"KRN",19,9077,1,1,0)
This report will print a list of the error codes and descriptions for
"KRN",19,9077,1,2,0)
entries in the PCMM HL7 ERROR CODE file.
"KRN",19,9077,25)
ECRPRT^SCMCHLR7
"KRN",19,9077,99.1)
58225,82886
"KRN",19,9077,"U")
PCMM TRANSMISSION ERROR CODE R
"KRN",19,9079,-1)
0^4
"KRN",19,9079,0)
SCMC PCMM TRANS ERROR REPORT^PCMM Transmission Error Report^^R^^^^^^^^SCHEDULING
"KRN",19,9079,1,0)
^^7^7^3000225^^^
"KRN",19,9079,1,1,0)
This option will be used to produce the PCMM TRANSMISSION ERROR REPORT.
"KRN",19,9079,1,2,0)
This report will allow the user to print a list of patients for which HL7
"KRN",19,9079,1,3,0)
transmission errors were received from the Austin Automation Center (AAC).
"KRN",19,9079,1,4,0)
The user will have the ability to print all transmission errors or may
"KRN",19,9079,1,5,0)
print errors for a selected date range.  Users will also have the ability
"KRN",19,9079,1,6,0)
to sort the error list by <Patient Name>, <Date/Time Error Received>, or
"KRN",19,9079,1,7,0)
<Provider Name>.
"KRN",19,9079,25)
TERPRT^SCMCHLR8
"KRN",19,9079,99)
58128,41963
"KRN",19,9079,99.1)
58133,47593
"KRN",19,9079,"U")
PCMM TRANSMISSION ERROR REPORT
"KRN",19.1,314,-1)
0^1
"KRN",19.1,314,0)
SCMC PCMM RETRANSMIT^PCMM Retransmit Key^^
"KRN",19.1,314,1,0)
^^4^4^3000224^^
"KRN",19.1,314,1,1,0)
This security key is used to lock the SCMC PCMM TRANS ERROR PROC [PCMM
"KRN",19.1,314,1,2,0)
Transmission Error Processing] option in the PCMM module.  The purpose of
"KRN",19.1,314,1,3,0)
this security key is to assist the site in controlling which individuals
"KRN",19.1,314,1,4,0)
may retransmit PCMM data to the Austin Automation Center (AAC). 
"KRN",101,644,-1)
4^14
"KRN",101,644,0)
VALM PRINT LIST
"KRN",101,2736,-1)
0^12
"KRN",101,2736,0)
PCMM SEND SERVER FOR ADT-A08^PCMM SERVER FOR SENDING PC DATA TO NPCDB^^E^^^^^^^^SCHEDULING
"KRN",101,2736,1,0)
^^2^2^3000511^
"KRN",101,2736,1,1,0)
HL7 server protocol for sending PCMM ADT-A08 messages, which
"KRN",101,2736,1,2,0)
will contain primary care data used by the NPCD.
"KRN",101,2736,2,0)
^101.02A^^0
"KRN",101,2736,99)
57918,48699
"KRN",101,2736,770)
PCMM^^ADT^A08^^P^^NE^AL^2.2^ADT
"KRN",101,2736,772)
D ACK^SCMCHLRI
"KRN",101,2736,775,0)
^101.0775PA^1^1
"KRN",101,2736,775,1,0)
2737^^1^
"KRN",101,2736,775,1,"^")
PCMM SEND CLIENT FOR ADT-A08
"KRN",101,2737,-1)
0^13
"KRN",101,2737,0)
PCMM SEND CLIENT FOR ADT-A08^PCMM CLIENT FOR SENDING PC DATA TO NPCDB^^S^^^^^^^^SCHEDULING
"KRN",101,2737,1,0)
^^2^2^2990802^^^^
"KRN",101,2737,1,1,0)
HL7 server protocol for sending PCMM ADT-A08 messages, which
"KRN",101,2737,1,2,0)
will contain primary care data used by the NPCD.
"KRN",101,2737,99)
57918,48699
"KRN",101,2737,770)
^NPCD-AAC^ACK^A08^^^PCMM^^^2.2^ADT
"KRN",101,2737,773)
1^1^0^1
"KRN",101,3120,-1)
0^6
"KRN",101,3120,0)
SCMC LE PCMM TRANSMISSION ERRORS MENU^PCMM TRANSMISSION ERRORS MENU^^M^^^^^^^^SCHEDULING
"KRN",101,3120,1,0)
^101.06^2^2^3000518^^^^
"KRN",101,3120,1,1,0)
This protocol menu contains all the activities for PCMM HL7 Transmission
"KRN",101,3120,1,2,0)
Error Processing.
"KRN",101,3120,4)
40^4
"KRN",101,3120,10,0)
^101.01PA^12^10
"KRN",101,3120,10,1,0)
3123^SP^2^
"KRN",101,3120,10,1,"^")
SCMC LE RETRANSMIT PATIENT
"KRN",101,3120,10,2,0)
3124^CS^5^
"KRN",101,3120,10,2,"^")
SCMC LE SORT LIST
"KRN",101,3120,10,3,0)
3144^CD^9^
"KRN",101,3120,10,3,"^")
SCMC LE CHANGE DATE RANGE
"KRN",101,3120,10,4,0)
3143^CE^4^
"KRN",101,3120,10,4,"^")
SCMC LE CHANGE STATUS
"KRN",101,3120,10,7,0)
3147^SA^3^
"KRN",101,3120,10,7,"^")
SCMC LE RETRANSMIT ALL
"KRN",101,3120,10,8,0)
3148^DP^7^
"KRN",101,3120,10,8,"^")
SCMC LE DESELECT PATIENT
"KRN",101,3120,10,9,0)
3149^DA^8^
"KRN",101,3120,10,9,"^")
SCMC LE DESELECT ALL
"KRN",101,3120,10,10,0)
3150^MN^6^
"KRN",101,3120,10,10,"^")
SCMC LE UNCHECK ERROR
"KRN",101,3120,10,11,0)
3146^MC^1^
"KRN",101,3120,10,11,"^")
SCMC LE CHECK ERROR OFF LIST
"KRN",101,3120,10,12,0)
644^PL^10^
"KRN",101,3120,10,12,"^")
VALM PRINT LIST
"KRN",101,3120,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^",1),24)) ^(24)
"KRN",101,3120,26)
D SHOW^VALM
"KRN",101,3120,28)
Select Action:
"KRN",101,3120,99)
58212,30668
"KRN",101,3123,-1)
0^9
"KRN",101,3123,0)
SCMC LE RETRANSMIT PATIENT^Select Patient(s) for Retransmit^^A^^SCMC PCMM RETRANSMIT^^^^^^SCHEDULING
"KRN",101,3123,1,0)
^^2^2^3000305^^
"KRN",101,3123,1,1,0)
This protocol action permits a user to mark a patient on the list for
"KRN",101,3123,1,2,0)
retransmission.
"KRN",101,3123,20)
D RP^SCMCHLR4
"KRN",101,3123,24)
I $D(^XUSEC("SCMC PCMM RETRANSMIT",DUZ))
"KRN",101,3123,99)
58122,35608
"KRN",101,3124,-1)
0^10
"KRN",101,3124,0)
SCMC LE SORT LIST^Change Sort By Criteria^^A^^^^^^^^SCHEDULING
"KRN",101,3124,1,0)
^^2^2^3000305^
"KRN",101,3124,1,1,0)
This protocol action permits the user to sort the error list by Patient
"KRN",101,3124,1,2,0)
Name, Date Acknowledgement Received, or Provider Name.  
"KRN",101,3124,20)
D SL^SCMCHLR4
"KRN",101,3124,99)
58122,35659
"KRN",101,3143,-1)
0^2
"KRN",101,3143,0)
SCMC LE CHANGE STATUS^Change Error Processing Status^^A^^^^^^^^SCHEDULING
"KRN",101,3143,1,0)
^^3^3^3000305^
"KRN",101,3143,1,1,0)
This protocol action permits the user to change the error processing
"KRN",101,3143,1,2,0)
status of the error list being viewed.  It allows the user to select an
"KRN",101,3143,1,3,0)
error processing status of NEW, CHECKED, or BOTH.
"KRN",101,3143,20)
D CS^SCMCHLR4
"KRN",101,3143,99)
58122,35228
"KRN",101,3144,-1)
0^1
"KRN",101,3144,0)
SCMC LE CHANGE DATE RANGE^Change Date Range^^A^^^^^^^^SCHEDULING
"KRN",101,3144,1,0)
^^2^2^3000305^
"KRN",101,3144,1,1,0)
This protocol action permits the user to change the date range of the
"KRN",101,3144,1,2,0)
error list being viewed.
"KRN",101,3144,20)
D CD^SCMCHLR4
"KRN",101,3144,99)
58092,55022
"KRN",101,3146,-1)
0^3
"KRN",101,3146,0)
SCMC LE CHECK ERROR OFF LIST^Mark Error as Checked/Corrected^^A^^^^^^^^SCHEDULING
"KRN",101,3146,1,0)
^^2^2^3000305^
"KRN",101,3146,1,1,0)
This protocol action permits the user to check an error with an error
"KRN",101,3146,1,2,0)
processing status of 'NEW' off the list.
"KRN",101,3146,20)
D CE^SCMCHLR4
"KRN",101,3146,99)
58129,52576
"KRN",101,3147,-1)
0^8
"KRN",101,3147,0)
SCMC LE RETRANSMIT ALL^Select All for Retransmit^^A^^SCMC PCMM RETRANSMIT^^^^^^SCHEDULING
"KRN",101,3147,1,0)
^^2^2^3000305^^
"KRN",101,3147,1,1,0)
This protocol action permits a user to mark all patients on the list for
"KRN",101,3147,1,2,0)
retransmission.
"KRN",101,3147,15)

"KRN",101,3147,20)
D RA^SCMCHLR4
"KRN",101,3147,24)
I $D(^XUSEC("SCMC PCMM RETRANSMIT",DUZ))
"KRN",101,3147,99)
58122,35572
"KRN",101,3148,-1)
0^5
"KRN",101,3148,0)
SCMC LE DESELECT PATIENT^Deselect Patient(s) for Retransmit^^A^^^^^^^^SCHEDULING
"KRN",101,3148,1,0)
^^2^2^3000305^
"KRN",101,3148,1,1,0)
This protocol action permits a user to Deselect Patient(s) for
"KRN",101,3148,1,2,0)
retransmission.
"KRN",101,3148,20)
D DP^SCMCHLR5
"KRN",101,3148,24)
I $D(^XUSEC("SCMC PCMM RETRANSMIT",DUZ))
"KRN",101,3148,99)
58122,38214
"KRN",101,3149,-1)
0^4
"KRN",101,3149,0)
SCMC LE DESELECT ALL^Deselect All for Retransmit^^A^^^^^^^^SCHEDULING
"KRN",101,3149,1,0)
^^2^2^3000305^
"KRN",101,3149,1,1,0)
This protocol action permits the user to Deselect ALL patients from
"KRN",101,3149,1,2,0)
retransmission.
"KRN",101,3149,2,0)
^101.02A^1^1
"KRN",101,3149,2,1,0)
DA
"KRN",101,3149,2,"B","DA",1)

"KRN",101,3149,20)
D DA^SCMCHLR5
"KRN",101,3149,24)
I $D(^XUSEC("SCMC PCMM RETRANSMIT",DUZ))
"KRN",101,3149,99)
58122,39414
"KRN",101,3150,-1)
0^11
"KRN",101,3150,0)
SCMC LE UNCHECK ERROR^Mark Error as New/Uncheck^^A^^^^^^^^SCHEDULING
"KRN",101,3150,1,0)
^^3^3^3000305^
"KRN",101,3150,1,1,0)
This protocol action permits the user to mark an error with an error
"KRN",101,3150,1,2,0)
processing status of 'Checked' back to an error processing status of
"KRN",101,3150,1,3,0)
'New'.
"KRN",101,3150,20)
D UE^SCMCHLR5
"KRN",101,3150,99)
58129,52639
"KRN",101,3173,-1)
1^7
"KRN",101,3173,0)
SCMC LE PRINT ERROR CODES
"KRN",409.61,824,-1)
0^1
"KRN",409.61,824,0)
SCMC PCMM TRANSMISSION ERRORS^1^^160^6^17^1^1^Transmission Error^SCMC LE PCMM TRANSMISSION ERRORS MENU^PCMM Transmission Errors^1^999^1
"KRN",409.61,824,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,824,"ARRAY")
 ^TMP("SCERR",$J)
"KRN",409.61,824,"COL",0)
^409.621^8^8
"KRN",409.61,824,"COL",1,0)
NUMBER^1^5^^^0
"KRN",409.61,824,"COL",2,0)
PATIENT^8^19^Patient Name
"KRN",409.61,824,"COL",3,0)
PATID^29^5^PATID
"KRN",409.61,824,"COL",4,0)
DATE^36^12^Date Rec'd
"KRN",409.61,824,"COL",5,0)
PROV^48^17^Provider
"KRN",409.61,824,"COL",6,0)
TYPE^67^4^Type
"KRN",409.61,824,"COL",7,0)
STATUS^73^7^EP Stat
"KRN",409.61,824,"COL",8,0)
RETRANS^7^1
"KRN",409.61,824,"COL","AIDENT",0,1)

"KRN",409.61,824,"COL","B","DATE",4)

"KRN",409.61,824,"COL","B","NUMBER",1)

"KRN",409.61,824,"COL","B","PATID",3)

"KRN",409.61,824,"COL","B","PATIENT",2)

"KRN",409.61,824,"COL","B","PROV",5)

"KRN",409.61,824,"COL","B","RETRANS",8)

"KRN",409.61,824,"COL","B","STATUS",7)

"KRN",409.61,824,"COL","B","TYPE",6)

"KRN",409.61,824,"FNL")
D EXIT^SCMCHLR1
"KRN",409.61,824,"HDR")
D HDR^SCMCHLR1
"KRN",409.61,824,"HLP")
D HELP^SCMCHLR1
"KRN",409.61,824,"INIT")
D INIT^SCMCHLR1
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1
"ORD",11,3.8,0)
MAIL GROUP
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2941102
"PKG",16,22,1,"PAH",1,0)
210^3000602
"PKG",16,22,1,"PAH",1,1,0)
^^2^2^3000602
"PKG",16,22,1,"PAH",1,1,1,0)
The changes included in this patch are described in the description of
"PKG",16,22,1,"PAH",1,1,2,0)
patch SD*5.3*210 in the National Patch Module.
"PRE")
SD53P210
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","SCAPMC29")
0^4^B9093400
"RTN","SCAPMC29",1,0)
SCAPMC29 ;ALB/REW - TEAM APIs:CLPT  ; 2/17/00 1:33pm
"RTN","SCAPMC29",2,0)
 ;;5.3;Scheduling;**41,210**;AUG 13, 1993
"RTN","SCAPMC29",3,0)
 ;;1.0
"RTN","SCAPMC29",4,0)
CLPT(DFN,SCDATES,SCTEAMA,SCLIST,SCERR) ;clinics for patient
"RTN","SCAPMC29",5,0)
 ; input:
"RTN","SCAPMC29",6,0)
 ;  DFN = ien of PATIENT <FILE#2> [required]
"RTN","SCAPMC29",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC29",8,0)
 ;                       [default: TODAY]
"RTN","SCAPMC29",9,0)
 ;         ("END")   = end date to search (inclusive)
"RTN","SCAPMC29",10,0)
 ;                       [default: TODAY]
"RTN","SCAPMC29",11,0)
 ;         ("INCL")  = 1: only use pracitioners who were on
"RTN","SCAPMC29",12,0)
 ;                       team for entire date range
"RTN","SCAPMC29",13,0)
 ;                     0: anytime in date range
"RTN","SCAPMC29",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC29",15,0)
 ;  SCTEAMA= array of teams to include reverse with scposa('exclude')
"RTN","SCAPMC29",16,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC29",17,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC29",18,0)
 ;
"RTN","SCAPMC29",19,0)
 ; Output:
"RTN","SCAPMC29",20,0)
 ;  SCLIST() = array of clinics
"RTN","SCAPMC29",21,0)
 ;             Format:
"RTN","SCAPMC29",22,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC29",23,0)
 ;               Piece     Description
"RTN","SCAPMC29",24,0)
 ;                 1       IEN of HOSPITAL LOCATION file entry (#44)
"RTN","SCAPMC29",25,0)
 ;                 2       Name of CLINIC
"RTN","SCAPMC29",26,0)
 ;                 3       ENROLLMENT DATE
"RTN","SCAPMC29",27,0)
 ;                 4       DISCHARGE DATE
"RTN","SCAPMC29",28,0)
 ;                 5       OPT OR AC
"RTN","SCAPMC29",29,0)
 ;                 6       REVIEW DATE
"RTN","SCAPMC29",30,0)
 ;
"RTN","SCAPMC29",31,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCAPMC29",32,0)
 ;  @SCERR(0)= Number of error(s), UNDEFINED if no errors
"RTN","SCAPMC29",33,0)
 ;             Foramt:
"RTN","SCAPMC29",34,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC29",35,0)
 ;               Piece     Description
"RTN","SCAPMC29",36,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC29",37,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC29",38,0)
 ;
"RTN","SCAPMC29",39,0)
 ; -- initialize control variables
"RTN","SCAPMC29",40,0)
 ;
"RTN","SCAPMC29",41,0)
ST N SCX,SCS,SC44,SCACOPT,SCTM,SCPOSA,SCTP
"RTN","SCAPMC29",42,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS,SCOK,SCS,SCND,SCACT,SCINACT,SCREVDT,SCCLNM
"RTN","SCAPMC29",43,0)
 G:'$$OKDATA PTCLQ ; check/setup variables
"RTN","SCAPMC29",44,0)
 IF $L($G(SCTEAMA)) D
"RTN","SCAPMC29",45,0)
 .S SCTM=0
"RTN","SCAPMC29",46,0)
 .F  S SCTM=$O(@SCTEAMA@(SCTM)) Q:'SCTM  D  Q:'SCX
"RTN","SCAPMC29",47,0)
 ..S SCX=$$TPTM^SCAPMC(SCTM,SCDATES,,,"SCPOSAX",.SCERR)
"RTN","SCAPMC29",48,0)
 .F SCX=1:1 S SCTP=+$G(SCPOSAX(SCX)) Q:'SCTP  S SCPOSA(SCTP)=""
"RTN","SCAPMC29",49,0)
 .S:$D(@SCTEAMA@("EXCLUDE")) SCPOSA("EXCLUDE")=""
"RTN","SCAPMC29",50,0)
 S SCX=0 F  S SCX=$O(^DPT(DFN,"DE",SCX)) Q:'SCX  D
"RTN","SCAPMC29",51,0)
 .S SC44=+$G(^DPT(DFN,"DE",SCX,0))
"RTN","SCAPMC29",52,0)
 .Q:'SC44
"RTN","SCAPMC29",53,0)
 .Q:'$$OKCLIN(SC44,.SCPOSA)
"RTN","SCAPMC29",54,0)
 .S SCCLNM=$P($G(^SC(SC44,0)),U,1)
"RTN","SCAPMC29",55,0)
 .S SCS=0 F  S SCS=$O(^DPT(DFN,"DE",SCX,1,SCS)) Q:'SCS  D
"RTN","SCAPMC29",56,0)
 ..S SCND=$G(^DPT(DFN,"DE",SCX,1,SCS,0))
"RTN","SCAPMC29",57,0)
 ..S SCACT=$P(SCND,U,1)
"RTN","SCAPMC29",58,0)
 ..S SCINACT=$P(SCND,U,3)
"RTN","SCAPMC29",59,0)
 ..Q:'$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,SCACT,SCINACT)
"RTN","SCAPMC29",60,0)
 ..S SCACOPT=$P(SCND,U,2)
"RTN","SCAPMC29",61,0)
 ..S SCREVDT=$P(SCND,U,5)
"RTN","SCAPMC29",62,0)
 ..S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC29",63,0)
 ..;bp/ar nois brx-1298-12323 prevent undefined variable error
"RTN","SCAPMC29",64,0)
 ..;New code begins
"RTN","SCAPMC29",65,0)
 ..Q:'SCACT
"RTN","SCAPMC29",66,0)
 ..Q:'SCN
"RTN","SCAPMC29",67,0)
 ..;End of brx-1298-12323
"RTN","SCAPMC29",68,0)
 ..S @SCLIST@(0)=SCN
"RTN","SCAPMC29",69,0)
 ..S @SCLIST@(SCN)=SC44_U_SCCLNM_U_SCACT_U_SCINACT_U_SCACOPT_U_SCREVDT
"RTN","SCAPMC29",70,0)
 ..S @SCLIST@("SCCL",SC44,SCACT,SCN)=""
"RTN","SCAPMC29",71,0)
PTCLQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC29",72,0)
 ;
"RTN","SCAPMC29",73,0)
OKCLIN(SC44,SCPOSA) ;is clinic ok, given position array
"RTN","SCAPMC29",74,0)
 N SCOK,SCTP
"RTN","SCAPMC29",75,0)
 IF '$D(SCPOSA) S SCOK=1 G QTOKC
"RTN","SCAPMC29",76,0)
 S (SCOK,SCTP)=0
"RTN","SCAPMC29",77,0)
 F  S SCTP=$O(^SCTM(404.57,"D",+SC44,SCTP)) Q:'SCTP  S:$$OKARRAY^SCAPU1(.SCPOSA,SCTP) SCOK=1
"RTN","SCAPMC29",78,0)
QTOKC Q SCOK
"RTN","SCAPMC29",79,0)
 ;
"RTN","SCAPMC29",80,0)
OKDATA() ;check/setup variables - return 1 if ok; 0 if error
"RTN","SCAPMC29",81,0)
 N SCOK
"RTN","SCAPMC29",82,0)
 S SCOK=1
"RTN","SCAPMC29",83,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC29",84,0)
 IF '$D(^DPT(+$G(DFN),0)) D  S SCOK=0
"RTN","SCAPMC29",85,0)
 . S SCPARM("PATIENT")=$G(DFN,"Undefined")
"RTN","SCAPMC29",86,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC29",87,0)
 Q SCOK
"RTN","SCMCBK1")
0^5^B71079112
"RTN","SCMCBK1",1,0)
SCMCBK1 ;LB/SCK - Broker Utilities for multiple patient assignments;
"RTN","SCMCBK1",2,0)
 ;;5.3;Scheduling;**41,51,210**;AUG 13, 1993
"RTN","SCMCBK1",3,0)
 ;;1T1;;
"RTN","SCMCBK1",4,0)
 Q
"RTN","SCMCBK1",5,0)
 ;
"RTN","SCMCBK1",6,0)
PARSE(SC) ;
"RTN","SCMCBK1",7,0)
 S SCTEAM=$G(SC("TEAM"),"")
"RTN","SCMCBK1",8,0)
 S SCPOS=$G(SC("POSITION"),"")
"RTN","SCMCBK1",9,0)
 S SCDTVAR=$G(SC("DATE"),DT)
"RTN","SCMCBK1",10,0)
 S SCDTRNG("BEGIN")=$G(SC("BEGIN"),DT)
"RTN","SCMCBK1",11,0)
 S SCDTRNG("END")=$G(SC("END"),DT)
"RTN","SCMCBK1",12,0)
 S SCDTRNG("INCL")=$G(SC("INCL"),0)
"RTN","SCMCBK1",13,0)
 S SCJOB=$G(SC("JOB"),"")
"RTN","SCMCBK1",14,0)
 S SCSTART=$G(SC("BSTART"),0)
"RTN","SCMCBK1",15,0)
 S SCEND=$G(SC("BEND"),0)
"RTN","SCMCBK1",16,0)
 S SCLAST=$G(SC("BLAST"),0)
"RTN","SCMCBK1",17,0)
 S SCFILE=$G(SC("FILE"),"")
"RTN","SCMCBK1",18,0)
 S SCJOBID=$G(SC("JOBID"),"")
"RTN","SCMCBK1",19,0)
 S SCNUM=$G(SC("MAX"),300)
"RTN","SCMCBK1",20,0)
 S SCCLN=$G(SC("CLINIC"),"")
"RTN","SCMCBK1",21,0)
 S SCSCDE=$G(SC("STOPCODE"),"")
"RTN","SCMCBK1",22,0)
 S SCFRMTM=$G(SC("FROMTEAM"),"")
"RTN","SCMCBK1",23,0)
 S SCFRMPOS=$G(SC("FROMPOS"),"")
"RTN","SCMCBK1",24,0)
 S SCDFN=$G(SC("DFN"),"")
"RTN","SCMCBK1",25,0)
 S SCMORE=$G(SC("MORE"),"")
"RTN","SCMCBK1",26,0)
 Q
"RTN","SCMCBK1",27,0)
 ;
"RTN","SCMCBK1",28,0)
NEWVAR ;
"RTN","SCMCBK1",29,0)
 ;bp/cmf 210t0 begin
"RTN","SCMCBK1",30,0)
 D CLRVAR Q
"RTN","SCMCBK1",31,0)
 ;bp/cmf 210t0 end
"RTN","SCMCBK1",32,0)
 N SCCLN,SCSCDE,SCTEAM,SCDTRNG,SCLOC,SCERMSG,SCNUM,SCCOUNT,SCMORE,SCOK1,SCER2,SCOUT,BLOCK,SCBLOCK,SCFRMTM,SCFRMPOS,SCSRCE,SCSRCTYP
"RTN","SCMCBK1",33,0)
 N SCADDFLD,SCNEW,SCOLD,SCBAD,SUBRTN,SCX,SCTMP
"RTN","SCMCBK1",34,0)
 ;
"RTN","SCMCBK1",35,0)
 K ^TMP($J,"SC PCMM IN")
"RTN","SCMCBK1",36,0)
 K ^TMP($J,"PCMM TMP")
"RTN","SCMCBK1",37,0)
 K ^TMP("SC TMP LIST",$J)
"RTN","SCMCBK1",38,0)
 K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK1",39,0)
 ;
"RTN","SCMCBK1",40,0)
 Q
"RTN","SCMCBK1",41,0)
 ;
"RTN","SCMCBK1",42,0)
CLRVAR ;  Clear all parsing variables        
"RTN","SCMCBK1",43,0)
 ;
"RTN","SCMCBK1",44,0)
 K SCNUM,SCSCDE,SCCLN,SCJOBID,SCFILE,SCLAST,SCEND,SCSTART,SCJOB,SCDTRNG
"RTN","SCMCBK1",45,0)
 K SCDTVAR,SCPOS,SCTEAM,SCFRMTM,SCFRMPOS,SCDFN,BLOCK,SCBLOCK,SCX,SUBRTN
"RTN","SCMCBK1",46,0)
 K SCTMP,SCBAD,SCOLD,SCNEW,SCLOC,SCERMSG,SCCOUNT,SCMORE,SCOK1
"RTN","SCMCBK1",47,0)
 K SCER2,SCOUT,SCSRCE,SCSRCTYP,SCADDFLD
"RTN","SCMCBK1",48,0)
 ;
"RTN","SCMCBK1",49,0)
 K ^TMP($J,"SC PCMM IN")
"RTN","SCMCBK1",50,0)
 K ^TMP($J,"PCMM TMP")
"RTN","SCMCBK1",51,0)
 K ^TMP("SC TMP LIST",$J)
"RTN","SCMCBK1",52,0)
 K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK1",53,0)
 Q
"RTN","SCMCBK1",54,0)
 ;
"RTN","SCMCBK1",55,0)
PTCLEN(SCOK,SC) ;  Enroll patient in associated clinic for a position
"RTN","SCMCBK1",56,0)
 ;       ' SC PAT ENROLL CLN '
"RTN","SCMCBK1",57,0)
 ;
"RTN","SCMCBK1",58,0)
 N SCCLN,SCDFN,SCDTVAR,SCERMSG,SCADDFLD
"RTN","SCMCBK1",59,0)
 ;
"RTN","SCMCBK1",60,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",61,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",62,0)
 ;
"RTN","SCMCBK1",63,0)
 D PARSE(.SC)
"RTN","SCMCBK1",64,0)
 S SCADDFLD(1)=$G(SC("ADD1"),"O")
"RTN","SCMCBK1",65,0)
 S SCOK=0
"RTN","SCMCBK1",66,0)
 ;
"RTN","SCMCBK1",67,0)
 S SCOK=$$ACPTCL^SCAPMC18(SCDFN,SCCLN,"SCADDFLD",SCDTVAR,"SCERMSG")
"RTN","SCMCBK1",68,0)
 ;
"RTN","SCMCBK1",69,0)
 D CLRVAR
"RTN","SCMCBK1",70,0)
 Q
"RTN","SCMCBK1",71,0)
 ;
"RTN","SCMCBK1",72,0)
CHKPOS(SCOK,SC) ;  Check for primary care pratitioner and attending positions for patient
"RTN","SCMCBK1",73,0)
 ;    ' SC CHECK FOR PC POS '
"RTN","SCMCBK1",74,0)
 ;  Piece 1 of SCOK = 1 if ok for practitioner role
"RTN","SCMCBK1",75,0)
 ;                    0 if not ok
"RTN","SCMCBK1",76,0)
 ;  Piece 2 of SCOK = 1 if ok for ateending role
"RTN","SCMCBK1",77,0)
 ;                    0 if not ok
"RTN","SCMCBK1",78,0)
 ;
"RTN","SCMCBK1",79,0)
 N SCPOS,SCDTVAR,SCDFN
"RTN","SCMCBK1",80,0)
 ;
"RTN","SCMCBK1",81,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",82,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",83,0)
 ;
"RTN","SCMCBK1",84,0)
 D PARSE(.SC)
"RTN","SCMCBK1",85,0)
 ;
"RTN","SCMCBK1",86,0)
 S SCOK=$$PCRLPTTP^SCMCTPU2(SCDFN,SCPOS,SCDTVAR)
"RTN","SCMCBK1",87,0)
 ;
"RTN","SCMCBK1",88,0)
 D CLRVAR
"RTN","SCMCBK1",89,0)
 Q
"RTN","SCMCBK1",90,0)
 ;
"RTN","SCMCBK1",91,0)
NOPCTM(SCOK,SC) ;  Build list of patients with a primary care assignment, but no primary care team;
"RTN","SCMCBK1",92,0)
 ;    ' SC BLD NOPC TM LIST '
"RTN","SCMCBK1",93,0)
 ;
"RTN","SCMCBK1",94,0)
 D NEWVAR
"RTN","SCMCBK1",95,0)
 ;
"RTN","SCMCBK1",96,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",97,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",98,0)
 ;
"RTN","SCMCBK1",99,0)
 D PARSE(.SC)
"RTN","SCMCBK1",100,0)
 ;
"RTN","SCMCBK1",101,0)
 K ^TMP($J,"SCPCNO")
"RTN","SCMCBK1",102,0)
 ;  Build exclude list
"RTN","SCMCBK1",103,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS^SCMCBK",1:"BLKTM^SCMCBK")
"RTN","SCMCBK1",104,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK1",105,0)
 D @BLOCK
"RTN","SCMCBK1",106,0)
 ;
"RTN","SCMCBK1",107,0)
 S SCOK=0
"RTN","SCMCBK1",108,0)
 ;
"RTN","SCMCBK1",109,0)
 S SCLOC="^TMP($J,""SC PCMM IN"")"
"RTN","SCMCBK1",110,0)
 D PTPCNOTM^SCAPMC20(.SCLOC,SCDTVAR)
"RTN","SCMCBK1",111,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",112,0)
 ;
"RTN","SCMCBK1",113,0)
 S I=""
"RTN","SCMCBK1",114,0)
 F  S I=$O(^TMP($J,"SC PCMM IN",I)) Q:'I  D
"RTN","SCMCBK1",115,0)
 . S ^TMP($J,"PCMM TMP",I)=^TMP($J,"SC PCMM IN",I)
"RTN","SCMCBK1",116,0)
 ;
"RTN","SCMCBK1",117,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCPCNO"")")
"RTN","SCMCBK1",118,0)
 S I1="" F  S I1=$O(^TMP($J,"SCPCNO",I1)) Q:'I1  S I=I1
"RTN","SCMCBK1",119,0)
 ;
"RTN","SCMCBK1",120,0)
 S SCOK=$J_U_+I_U_1
"RTN","SCMCBK1",121,0)
 ;
"RTN","SCMCBK1",122,0)
 D CLRVAR
"RTN","SCMCBK1",123,0)
 Q
"RTN","SCMCBK1",124,0)
 ;
"RTN","SCMCBK1",125,0)
ASGNALL(SCOK,SC) ;  Assign all entries for the selection source to the appropriate team.
"RTN","SCMCBK1",126,0)
 ;    '  SC FILE ALL PAT TM ASGN  '
"RTN","SCMCBK1",127,0)
 ;
"RTN","SCMCBK1",128,0)
 D NEWVAR
"RTN","SCMCBK1",129,0)
 ;
"RTN","SCMCBK1",130,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",131,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",132,0)
 ;
"RTN","SCMCBK1",133,0)
 D PARSE(.SC)
"RTN","SCMCBK1",134,0)
 S SCSRCE=$G(SC("SOURCE"),"")
"RTN","SCMCBK1",135,0)
 S SCADDFLD(.08)=$G(SC("TYPE"),99)
"RTN","SCMCBK1",136,0)
 S SCADDFLD(.1)=$G(SC("RESTRICT"),0)
"RTN","SCMCBK1",137,0)
 S SCADDFLD(.11)=DUZ
"RTN","SCMCBK1",138,0)
 S SCADDFLD(.12)=DT
"RTN","SCMCBK1",139,0)
 ;
"RTN","SCMCBK1",140,0)
 S DTMP=$G(SCDTRNG("END"))
"RTN","SCMCBK1",141,0)
 S SCDTTRNG("END")=3990101
"RTN","SCMCBK1",142,0)
 S SCOK2=$$PTTM^SCAPMC(SCTEAM,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK1",143,0)
 S SCDTRNG("END")=DTMP
"RTN","SCMCBK1",144,0)
 ;
"RTN","SCMCBK1",145,0)
 S SCSRCTYP=$P(SCSRCE,U,1)
"RTN","SCMCBK1",146,0)
 D @SCSRCTYP
"RTN","SCMCBK1",147,0)
 ;
"RTN","SCMCBK1",148,0)
 K SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",149,0)
 S SCX=$$ACPTATM^SCAPMC6("^TMP($J,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")
"RTN","SCMCBK1",150,0)
 ;
"RTN","SCMCBK1",151,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",152,0)
 D BAD(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK1",153,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK1",154,0)
 ;
"RTN","SCMCBK1",155,0)
 D CLRVAR
"RTN","SCMCBK1",156,0)
 Q
"RTN","SCMCBK1",157,0)
 ;
"RTN","SCMCBK1",158,0)
CLN ;    File all patients in selected clinic.
"RTN","SCMCBK1",159,0)
 ;
"RTN","SCMCBK1",160,0)
 S SCOK1=$$PTCLBR^SCAPMC26($P($G(SCSRCE),U,2),.SCTEAM,"SCDTRNG")
"RTN","SCMCBK1",161,0)
 S I=0 F  S I=$O(^TMP($J,"SCCLPT",I)) Q:'I  D
"RTN","SCMCBK1",162,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"SCCLPT",I)),U))=""
"RTN","SCMCBK1",163,0)
 K ^TMP($J,"SCCLPT")
"RTN","SCMCBK1",164,0)
 Q
"RTN","SCMCBK1",165,0)
 ;
"RTN","SCMCBK1",166,0)
STOPC ;   File all patients in the selected stop code
"RTN","SCMCBK1",167,0)
 ;
"RTN","SCMCBK1",168,0)
 S SCOK1=$$PTST^SCAPMC27($P($G(SCSRCE),U,2),"SCDTRNG",SCNUM,.SCTMP,"ERRMSG",0)
"RTN","SCMCBK1",169,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",170,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",171,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",172,0)
 Q
"RTN","SCMCBK1",173,0)
 ;
"RTN","SCMCBK1",174,0)
APPT ;   File all patients for the selected clinic appointment range
"RTN","SCMCBK1",175,0)
 S SCOK1=$$PTAP^SCAPMC28($P($G(SCSRCE),U,2),"SCDTRNG",SCNUM,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",176,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",177,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",178,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",179,0)
 Q
"RTN","SCMCBK1",180,0)
 ;
"RTN","SCMCBK1",181,0)
TEAM ;  File all patients for the selected team
"RTN","SCMCBK1",182,0)
 S SCOK1=$$PTTM^SCAPMC2($P($G(SCSRCE),U,2),"SCDTRNG",.SCTMP,"SCERMSG")
"RTN","SCMCBK1",183,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",184,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",185,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",186,0)
 Q
"RTN","SCMCBK1",187,0)
 ;
"RTN","SCMCBK1",188,0)
ASGALLP(SCOK,SC) ;  Assign all entries in the selected source to the selected team and position
"RTN","SCMCBK1",189,0)
 ;
"RTN","SCMCBK1",190,0)
 N DTMP
"RTN","SCMCBK1",191,0)
 D NEWVAR
"RTN","SCMCBK1",192,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",193,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",194,0)
 ;
"RTN","SCMCBK1",195,0)
 D PARSE(.SC)
"RTN","SCMCBK1",196,0)
 S SCSRCE=$G(SC("SOURCE"),"")
"RTN","SCMCBK1",197,0)
 S SCADDFLD(.05)=$G(SC("TYPE"),0)
"RTN","SCMCBK1",198,0)
 S SCADDFLD(.06)=DUZ
"RTN","SCMCBK1",199,0)
 S SCADDFLD(.07)=DT
"RTN","SCMCBK1",200,0)
 ;
"RTN","SCMCBK1",201,0)
 S DTMP=$G(SCDTRNG("END"))
"RTN","SCMCBK1",202,0)
 S SCDTRNG("END")=3990101
"RTN","SCMCBK1",203,0)
 S SCOK2=$$PTTP^SCAPMC(SCPOS,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK1",204,0)
 S SCDTRNG("END")=DTMP
"RTN","SCMCBK1",205,0)
 ;
"RTN","SCMCBK1",206,0)
 S SCSRCTYP=$P(SCSRCE,U,1)
"RTN","SCMCBK1",207,0)
 D @SCSRCTYP
"RTN","SCMCBK1",208,0)
 ;
"RTN","SCMCBK1",209,0)
 K SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",210,0)
 S SCX=$$ACPTATP^SCAPMC21("^TMP($J,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERRMSG",1,"","SCNEW","SCNEW1","SCOLD","SCBAD")
"RTN","SCMCBK1",211,0)
 ;
"RTN","SCMCBK1",212,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",213,0)
 D BAD2(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK1",214,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK1",215,0)
 ;
"RTN","SCMCBK1",216,0)
 D CLRVAR
"RTN","SCMCBK1",217,0)
 Q
"RTN","SCMCBK1",218,0)
 ;
"RTN","SCMCBK1",219,0)
PCLN ;  File all patients in selected clinic to the new position and team
"RTN","SCMCBK1",220,0)
 ;
"RTN","SCMCBK1",221,0)
 S SCOK1=$$PTCLBR^SCAPMC26($P($G(SCSRCE),U,2),.SCTEAM,"SCDTRNG")
"RTN","SCMCBK1",222,0)
 S I=0 F  S I=$O(^TMP($J,"SCCLPT",I)) Q:'I  D
"RTN","SCMCBK1",223,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"SCCLPT",I)),U))=""
"RTN","SCMCBK1",224,0)
 ;
"RTN","SCMCBK1",225,0)
 Q
"RTN","SCMCBK1",226,0)
 ;
"RTN","SCMCBK1",227,0)
PSTOPC ;  File all patients in with the selected stop code to the new position and team
"RTN","SCMCBK1",228,0)
 ;
"RTN","SCMCBK1",229,0)
 S SCOK1=$$PTST^SCAPMC27($P($G(SCSRCE),U,2),"SCDTRNG",500,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",230,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",231,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",232,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",233,0)
 Q
"RTN","SCMCBK1",234,0)
 ;
"RTN","SCMCBK1",235,0)
PAPPT ;
"RTN","SCMCBK1",236,0)
 S SCOK1=$$PTAP^SCAPMC28($P($G(SCSRCE),U,2),"SCDTRNG",500,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",237,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",238,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",239,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",240,0)
 Q
"RTN","SCMCBK1",241,0)
 ;
"RTN","SCMCBK1",242,0)
PTEAM ;
"RTN","SCMCBK1",243,0)
 S SCOK1=$$PTTM^SCAPMC2($P($G(SCSRCE),U,2),"SCDTRNG",.SCTMP,"SCERMSG")
"RTN","SCMCBK1",244,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",245,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",246,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",247,0)
 Q
"RTN","SCMCBK1",248,0)
 ;
"RTN","SCMCBK1",249,0)
PPOS ;
"RTN","SCMCBK1",250,0)
 S SCOK1=$$PTTP^SCAPMC11($P($G(SCSRCE),U,2),"SCDTRNG",.SCTMP,"SCERMSG")
"RTN","SCMCBK1",251,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",252,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",253,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",254,0)
 Q
"RTN","SCMCBK1",255,0)
 ;
"RTN","SCMCBK1",256,0)
BAD(SCBAD,SCOLD,SCOK) ;
"RTN","SCMCBK1",257,0)
 N SCDFN,SCPARM,DIERR
"RTN","SCMCBK1",258,0)
 S SCDFN=0
"RTN","SCMCBK1",259,0)
 F  S SCDFN=$O(SCBAD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",260,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",261,0)
 . D BLD^DIALOG(40442001.001,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",262,0)
 ;
"RTN","SCMCBK1",263,0)
 F  S SCDFN=$O(SCOLD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",264,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",265,0)
 . D BLD^DIALOG(40442001.002,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",266,0)
 D HDREC^SCUTBK3(.SCOK,$G(DIERR),"Patient Assignment to Teams")
"RTN","SCMCBK1",267,0)
 Q
"RTN","SCMCBK1",268,0)
 ;
"RTN","SCMCBK1",269,0)
BAD2(SCBAD,SCOLD,SCOK) ;
"RTN","SCMCBK1",270,0)
 N SCDFN,SCPARM,DIERR
"RTN","SCMCBK1",271,0)
 S SCDFN=0
"RTN","SCMCBK1",272,0)
 F  S SCDFN=$O(SCBAD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",273,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",274,0)
 . D BLD^DIALOG(40443001.001,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",275,0)
 ;
"RTN","SCMCBK1",276,0)
 F  S SCDFN=$O(SCOLD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",277,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",278,0)
 . D BLD^DIALOG(40443001.002,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",279,0)
 D HDREC^SCUTBK3(.SCOK,$G(DIERR),"Patient Assignment to Positions")
"RTN","SCMCBK1",280,0)
 Q
"RTN","SCMCBK6")
0^2^B5484158
"RTN","SCMCBK6",1,0)
SCMCBK6 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1 ;;Aug 7, 1998
"RTN","SCMCBK6",2,0)
 ;;5.3;Scheduling;**148,177,210**;AUG 13, 1993
"RTN","SCMCBK6",3,0)
 Q
"RTN","SCMCBK6",4,0)
 ;
"RTN","SCMCBK6",5,0)
YSPTTMPC(DFN,SCACT) ;is it ok to give patient a new pc team?
"RTN","SCMCBK6",6,0)
 ;  Return [OK:1,Not OK: 0^Message]
"RTN","SCMCBK6",7,0)
 N SCOK,SCX,SCTM
"RTN","SCMCBK6",8,0)
 ;
"RTN","SCMCBK6",9,0)
 ;does pt have a current pc team?
"RTN","SCMCBK6",10,0)
 S SCTM=$$GETPCTM^SCAPMCU2(DFN,DT,1)
"RTN","SCMCBK6",11,0)
 I SCTM>0 D SCOK(2) G QTOKPC
"RTN","SCMCBK6",12,0)
 ;;;IF SCTM>0 S SCOK="0^Pt has current PC Team Assignment"_U_SCTM G QTOKPC
"RTN","SCMCBK6",13,0)
 ;
"RTN","SCMCBK6",14,0)
 ;does pt have a future pc team?
"RTN","SCMCBK6",15,0)
 S SCX=$O(^SCPT(404.42,"APCTM",DFN,1,SCACT))
"RTN","SCMCBK6",16,0)
 IF SCX D SCOK(3) G QTOKPC
"RTN","SCMCBK6",17,0)
 ;;;.S SCTM=$O(^SCPT(404.42,"APCTM",DFN,1,+SCX,0))
"RTN","SCMCBK6",18,0)
 ;;;.S SCOK="0^Patient has future PC Assignment to the "_$P($G(^SCTM(404.51,+SCTM,0)),U,1)_" team."_U_SCTM
"RTN","SCMCBK6",19,0)
 ;;;.D SCOK(3)
"RTN","SCMCBK6",20,0)
 ;
"RTN","SCMCBK6",21,0)
 S SCOK=1
"RTN","SCMCBK6",22,0)
QTOKPC Q SCOK
"RTN","SCMCBK6",23,0)
 ;
"RTN","SCMCBK6",24,0)
OKPTTMPC(DFN,SCTM,DATE) ; like OKPTTMPC^SCMCTMU2
"RTN","SCMCBK6",25,0)
 ;               ;;; supports meaningful reject messages
"RTN","SCMCBK6",26,0)
 ;               ;;; for PHASE II enhancement??
"RTN","SCMCBK6",27,0)
 ;  Return [OK:1,Not OK: 0^Message]
"RTN","SCMCBK6",28,0)
 N SCOK,SCPCTM,SCL
"RTN","SCMCBK6",29,0)
 S SCOK=1
"RTN","SCMCBK6",30,0)
 ;
"RTN","SCMCBK6",31,0)
 ;is this a possible pc team?
"RTN","SCMCBK6",32,0)
 ;;;I '$P($G(^SCTM(404.51,+$G(SCTM),0)),U,5) S SCOK=0 G QTOKTM
"RTN","SCMCBK6",33,0)
 I '$P($G(^SCTM(404.51,+$G(SCTM),0)),U,5) D SCOK(5) G QTOKTM
"RTN","SCMCBK6",34,0)
 S SCPCTM=$$GETPCTM^SCAPMCU2(DFN,DATE,1)
"RTN","SCMCBK6",35,0)
 I SCPCTM,SCPCTM'=SCTM D SCOK(7) G QTOKTM
"RTN","SCMCBK6",36,0)
 ;;;.I SCPCTM'=SCTM D
"RTN","SCMCBK6",37,0)
 ;;;..S SCOK=0
"RTN","SCMCBK6",38,0)
 ;;;;..D SCOK(7)
"RTN","SCMCBK6",39,0)
 E  D
"RTN","SCMCBK6",40,0)
 .S SCOK=$$YSPTTMPC(DFN,DATE)
"RTN","SCMCBK6",41,0)
QTOKTM Q SCOK
"RTN","SCMCBK6",42,0)
 ;
"RTN","SCMCBK6",43,0)
DP(DFN) ;output: boolean, is patient(DFN) dead?
"RTN","SCMCBK6",44,0)
 Q $P($G(^DPT(DFN,.35)),U)'=""
"RTN","SCMCBK6",45,0)
 ;
"RTN","SCMCBK6",46,0)
SCOK(SCL) ;
"RTN","SCMCBK6",47,0)
 ;input SCL = Text Line
"RTN","SCMCBK6",48,0)
 ;output = SCOK
"RTN","SCMCBK6",49,0)
 S SCOK="0^"_$$S(SCL)_U_$G(SCTM)
"RTN","SCMCBK6",50,0)
 Q
"RTN","SCMCBK6",51,0)
 ;
"RTN","SCMCBK6",52,0)
S(SCL) ;output: text string
"RTN","SCMCBK6",53,0)
 Q $P($T(T+SCL),";;",2)
"RTN","SCMCBK6",54,0)
 ;
"RTN","SCMCBK6",55,0)
T ;;
"RTN","SCMCBK6",56,0)
1 ;;Pt is deceased;;
"RTN","SCMCBK6",57,0)
2 ;;Pt has current PC assignment;;
"RTN","SCMCBK6",58,0)
3 ;;Pt has future PC assignment;;
"RTN","SCMCBK6",59,0)
4 ;;Pt has future team assignment;;
"RTN","SCMCBK6",60,0)
5 ;;Not PC team;;
"RTN","SCMCBK6",61,0)
6 ;;Team inactive;;
"RTN","SCMCBK6",62,0)
7 ;;Pt has PC assignment;;
"RTN","SCMCBK6",63,0)
 ;;
"RTN","SCMCBK6",64,0)
9 ;;Invalid setup;;
"RTN","SCMCBK6",65,0)
10 ;;Pt already assigned;;
"RTN","SCMCBK6",66,0)
11 ;;Filer error;;
"RTN","SCMCBK6",67,0)
12 ;;PC role not assignable;;
"RTN","SCMCBK6",68,0)
13 ;;Invalid position list;;
"RTN","SCMCBK6",69,0)
14 ;;Pt not added to team;;
"RTN","SCMCBK6",70,0)
15 ;;Pt being assigned by another PCMM process;;
"RTN","SCMCBK6",71,0)
 ;;
"RTN","SCMCBK8")
0^1^B22296156
"RTN","SCMCBK8",1,0)
SCMCBK8 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1;;Aug 7, 1998
"RTN","SCMCBK8",2,0)
 ;;5.3;Scheduling;**148,177,210**;AUG 13, 1993
"RTN","SCMCBK8",3,0)
 Q
"RTN","SCMCBK8",4,0)
 ;
"RTN","SCMCBK8",5,0)
ACPTTP(DFN,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA) ;add/edit a patient to a position (pt TP assgn - #404.43
"RTN","SCMCBK8",6,0)
 ; input:
"RTN","SCMCBK8",7,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCMCBK8",8,0)
 ;  SCTP    = pointer to TEAM POSTION file (#404.57)
"RTN","SCMCBK8",9,0)
 ;  SCFIELDA= array of extra field entries - scfielda('fld#')=value
"RTN","SCMCBK8",10,0)
 ;  SCACT   = date to activate [default=DT]
"RTN","SCMCBK8",11,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCMCBK8",12,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCMCBK8",13,0)
 ;  SCYESTM = Should team assignment be made, if none active now?[1=YES]
"RTN","SCMCBK8",14,0)
 ;  SCMAINA= array of extra field entries for 404.42 (only if scyestm=1)
"RTN","SCMCBK8",15,0)
 ;
"RTN","SCMCBK8",16,0)
 ; Output:
"RTN","SCMCBK8",17,0)
 ;  Returned = ien of 404.43^new?^404.42 ien (new entries only)^new?^Message
"RTN","SCMCBK8",18,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCMCBK8",19,0)
 ;             Foramt:
"RTN","SCMCBK8",20,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCMCBK8",21,0)
 ;               Piece     Description
"RTN","SCMCBK8",22,0)
 ;                 1       IEN of DIALOG file
"RTN","SCMCBK8",23,0)
 ;
"RTN","SCMCBK8",24,0)
 N SCESEQ,SCPARM,SCIEN,SC,HISTPTTP,SCFLD,SCTM,SCPTTMA,SCPTTPA,SCTMFLDA
"RTN","SCMCBK8",25,0)
 N SCNEWTP,SCNEWTM,SCAPTDT,SCAPTTPO,SCAPTTPE,SCMESS
"RTN","SCMCBK8",26,0)
 N SCLOCK,SCXLOCK,SCX
"RTN","SCMCBK8",27,0)
 ;
"RTN","SCMCBK8",28,0)
 ;check/setup variables
"RTN","SCMCBK8",29,0)
 I '$$OKDATA^SCAPMC21 S SCMESS=$$S(9) G APTTPQ
"RTN","SCMCBK8",30,0)
 ;
"RTN","SCMCBK8",31,0)
 ;bp/cmf 210 new begin
"RTN","SCMCBK8",32,0)
 ;lock process/dfn/pos
"RTN","SCMCBK8",33,0)
 I '$D(^XTMP("SCMC POS ASGN")) D
"RTN","SCMCBK8",34,0)
 . S ^XTMP("SCMC POS ASGN",0)=DT_U_DT_U_"POS ASGN PROCESS LOCK"
"RTN","SCMCBK8",35,0)
 . Q
"RTN","SCMCBK8",36,0)
 ;
"RTN","SCMCBK8",37,0)
 S SCXLOCK=0
"RTN","SCMCBK8",38,0)
 S SCLOCK="^XTMP(""SCMC POS ASGN"",DFN)"
"RTN","SCMCBK8",39,0)
 I $D(@SCLOCK) S SCMESS=$$S(15) G APTTPQ
"RTN","SCMCBK8",40,0)
 S @SCLOCK=""
"RTN","SCMCBK8",41,0)
 S SCXLOCK=1
"RTN","SCMCBK8",42,0)
 H 1
"RTN","SCMCBK8",43,0)
 ;
"RTN","SCMCBK8",44,0)
 ;stop if active assignment
"RTN","SCMCBK8",45,0)
 S SCPTTPA=$$HISTPTTP^SCAPMCU2(DFN,SCTP,SCACT)
"RTN","SCMCBK8",46,0)
 I SCPTTPA S SCMESS=$$S(10) G APTTPQ
"RTN","SCMCBK8",47,0)
 ;bp/cmf 210 new end
"RTN","SCMCBK8",48,0)
 ;
"RTN","SCMCBK8",49,0)
 S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)
"RTN","SCMCBK8",50,0)
 S SCAPTDT("BEGIN")=SCACT
"RTN","SCMCBK8",51,0)
 S SCAPTDT("END")=3990101
"RTN","SCMCBK8",52,0)
 S SCAPTDT("INCL")=0
"RTN","SCMCBK8",53,0)
 ;
"RTN","SCMCBK8",54,0)
 ;is patient alive?
"RTN","SCMCBK8",55,0)
 I $$DP^SCMCBK6(DFN) S SCMESS=$$S(1) G APTTPQ
"RTN","SCMCBK8",56,0)
 ;
"RTN","SCMCBK8",57,0)
 S SCX=$$OKPREC5^SCMCLK(SCTP,SCACT)
"RTN","SCMCBK8",58,0)
 I SCX<1 S SCMESS=$P(SCX,U,2) G APTTPQ
"RTN","SCMCBK8",59,0)
 ;
"RTN","SCMCBK8",60,0)
 ;is PC role assignable?
"RTN","SCMCBK8",61,0)
 I $$T1(),'$$CHKPC^SCAPMC21(DFN) S SCMESS=$$S(12) G APTTPQ
"RTN","SCMCBK8",62,0)
 ;
"RTN","SCMCBK8",63,0)
 I '$$TPPT^SCAPMC(DFN,"SCAPTDT",,,,,0,"SCAPTTPO","SCAPTTPE") S SCMESS=$$S(13)  G APTTPQ
"RTN","SCMCBK8",64,0)
 S SCPTTPA=$O(SCAPTTPO("SCTP",SCTM,SCTP,0))
"RTN","SCMCBK8",65,0)
 ;
"RTN","SCMCBK8",66,0)
 ;to edit existing entry
"RTN","SCMCBK8",67,0)
 I SCPTTPA D  G APTTPQ
"RTN","SCMCBK8",68,0)
 .S SC($J,404.43,(+SCPTTPA)_",",.03)=SCACT
"RTN","SCMCBK8",69,0)
 .I $D(SCFIELDA) D
"RTN","SCMCBK8",70,0)
 ..S SCFLD=0
"RTN","SCMCBK8",71,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCMCBK8",72,0)
 ...S SC($J,404.43,(+SCPTTPA)_",",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCMCBK8",73,0)
 ...Q
"RTN","SCMCBK8",74,0)
 ..Q
"RTN","SCMCBK8",75,0)
 .D FILE^DIE("","SC($J)",SCERR)
"RTN","SCMCBK8",76,0)
 .Q
"RTN","SCMCBK8",77,0)
 ;
"RTN","SCMCBK8",78,0)
 ;needed: patient team assignment for date
"RTN","SCMCBK8",79,0)
 S SCPTTMA=+$$HISTPTTM^SCAPMCU2(DFN,SCTM,SCACT)
"RTN","SCMCBK8",80,0)
 ;
"RTN","SCMCBK8",81,0)
 ; if flag is set to add patient to team & no pt tm assignment exists
"RTN","SCMCBK8",82,0)
 I ('SCPTTMA)&($G(SCYESTM))&($D(SCFIELDA)) D
"RTN","SCMCBK8",83,0)
 .S:$D(@SCFIELDA@(.05)) @SCMAINA@(.08)=$G(@SCMAINA@(.08),$S(@SCFIELDA@(.05):1,1:99))
"RTN","SCMCBK8",84,0)
 .S:$D(@SCFIELDA@(.06)) @SCMAINA@(.11)=$G(@SCMAINA@(.11),@SCFIELDA@(.06))
"RTN","SCMCBK8",85,0)
 .S:$D(@SCFIELDA@(.07)) @SCMAINA@(.12)=$G(@SCMAINA@(.12),@SCFIELDA@(.07))
"RTN","SCMCBK8",86,0)
 .S:$D(@SCFIELDA@(.08)) @SCMAINA@(.13)=$G(@SCMAINA@(.13),@SCFIELDA@(.08))
"RTN","SCMCBK8",87,0)
 .S:$D(@SCFIELDA@(.09)) @SCMAINA@(.14)=$G(@SCMAINA@(.14),@SCFIELDA@(.09))
"RTN","SCMCBK8",88,0)
 .S SCPTTMA=+$$ACPTTM^SCAPMC(DFN,SCTM,.SCMAINA,SCACT,SCERR)
"RTN","SCMCBK8",89,0)
 .Q
"RTN","SCMCBK8",90,0)
 ;
"RTN","SCMCBK8",91,0)
TM I 'SCPTTMA S SCMESS=$$S(14) G APTTPQ
"RTN","SCMCBK8",92,0)
 ;
"RTN","SCMCBK8",93,0)
 I $D(SCFIELDA) D
"RTN","SCMCBK8",94,0)
 .S SCFLD=0
"RTN","SCMCBK8",95,0)
 .F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCMCBK8",96,0)
 ..S SC($J,404.43,"+1,",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCMCBK8",97,0)
 ..Q
"RTN","SCMCBK8",98,0)
 .Q
"RTN","SCMCBK8",99,0)
 ;
"RTN","SCMCBK8",100,0)
 S SC($J,404.43,"+1,",.01)=SCPTTMA
"RTN","SCMCBK8",101,0)
 S SC($J,404.43,"+1,",.02)=SCTP
"RTN","SCMCBK8",102,0)
 S SC($J,404.43,"+1,",.03)=SCACT
"RTN","SCMCBK8",103,0)
 N SCTPERR
"RTN","SCMCBK8",104,0)
 D UPDATE^DIE("","SC($J)","SCIEN","SCTPERR")
"RTN","SCMCBK8",105,0)
 ;
"RTN","SCMCBK8",106,0)
 I $D(SCTPERR) S SCMESS=$$S(11) K SCIEN
"RTN","SCMCBK8",107,0)
 E  D
"RTN","SCMCBK8",108,0)
 .S SCPTTPA=+$G(SCIEN(1))
"RTN","SCMCBK8",109,0)
 .S SCNEWTP=1
"RTN","SCMCBK8",110,0)
 .D AFTERTP^SCMCDD1(SCPTTPA)
"RTN","SCMCBK8",111,0)
 .Q
"RTN","SCMCBK8",112,0)
 ;
"RTN","SCMCBK8",113,0)
APTTPQ ;bp/cmf 210 new code begin
"RTN","SCMCBK8",114,0)
 I SCXLOCK=1 K @SCLOCK
"RTN","SCMCBK8",115,0)
 ;bp/cmf 210 new code end
"RTN","SCMCBK8",116,0)
 Q +$G(SCPTTPA)_U_+$G(SCNEWTP)_U_+$G(SCPTTMA)_U_+$P($G(SCPTTMA),U,2)_U_$G(SCMESS)
"RTN","SCMCBK8",117,0)
 ;
"RTN","SCMCBK8",118,0)
T1() Q $S('$D(SCFIELDA):0,'$D(@SCFIELDA@(.05)):0,($G(@SCFIELDA@(.05))=1):1,($G(@SCFIELDA@(.05))=2):1,1:0)
"RTN","SCMCBK8",119,0)
 ;
"RTN","SCMCBK8",120,0)
S(SCX) Q $$S^SCMCBK6(SCX)
"RTN","SCMCBK8",121,0)
 ;
"RTN","SCMCBK8",122,0)
ACPTATP(DFNA,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA,SCNEWTP,SCNEWTM,SCOLDTP,SCBADTP) ;list of patients to a position (pt TP assgn - #404.43 and possibly #404.42
"RTN","SCMCBK8",123,0)
 ; input: as per ACPTTP (above with the following change:)
"RTN","SCMCBK8",124,0)
 ;    DFNA    = is the literal value of a patient array (e.g. "scpt"
"RTN","SCMCBK8",125,0)
 ;              there is at least one scpt(dfn)="" defined
"RTN","SCMCBK8",126,0)
 ;    SCNEWTP = Subset of DFNA that was NEWLY assigned to a Position
"RTN","SCMCBK8",127,0)
 ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to a Team
"RTN","SCMCBK8",128,0)
 ;    SCOLDTP = Subset of DFNA that was already assigned to Position
"RTN","SCMCBK8",129,0)
 ;    SCBADTP = Subset of DFNA that was NOT assigned to Position
"RTN","SCMCBK8",130,0)
 ; output: Count of Patients (New or Old) assigned to Position
"RTN","SCMCBK8",131,0)
 ;
"RTN","SCMCBK8",132,0)
 N DFN,SCCNT,SCX,SCNOMAIL,SCTOTCNT
"RTN","SCMCBK8",133,0)
 S SCNOMAIL=1
"RTN","SCMCBK8",134,0)
 S SCCNT=0
"RTN","SCMCBK8",135,0)
 S SCTOTCNT=$$PASSCNT^SCMCBK5(DFNA)
"RTN","SCMCBK8",136,0)
 I SCTOTCNT=0 G MAIL
"RTN","SCMCBK8",137,0)
 S DFN=0
"RTN","SCMCBK8",138,0)
 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D
"RTN","SCMCBK8",139,0)
 .S SCX=$$ACPTTP(.DFN,.SCTP,.SCFIELDA,.SCACT,.SCERR,.SCYESTM)
"RTN","SCMCBK8",140,0)
 .;
"RTN","SCMCBK8",141,0)
 .;newly assigned
"RTN","SCMCBK8",142,0)
 .I $P(SCX,U,2)=1 D  Q
"RTN","SCMCBK8",143,0)
 ..S SCCNT=SCCNT+1
"RTN","SCMCBK8",144,0)
 ..S @SCNEWTP@(DFN)=+SCX
"RTN","SCMCBK8",145,0)
 ..S:$P(SCX,U,4) @SCNEWTM@(DFN)=$P(SCX,U,3)
"RTN","SCMCBK8",146,0)
 ..Q
"RTN","SCMCBK8",147,0)
 .;
"RTN","SCMCBK8",148,0)
 .;already assigned
"RTN","SCMCBK8",149,0)
 .;I $P(SCX,U,1)&('$P(SCX,U,2)) D
"RTN","SCMCBK8",150,0)
 .I +SCX D  Q 
"RTN","SCMCBK8",151,0)
 ..S SCCNT=SCCNT+1
"RTN","SCMCBK8",152,0)
 ..S @SCOLDTP@(DFN)=+SCX
"RTN","SCMCBK8",153,0)
 ..Q
"RTN","SCMCBK8",154,0)
 .;
"RTN","SCMCBK8",155,0)
 .;not assigned;;I 'SCX D 
"RTN","SCMCBK8",156,0)
 .S @SCBADTP@(DFN)=$P(SCX,U,5)
"RTN","SCMCBK8",157,0)
 .Q
"RTN","SCMCBK8",158,0)
 ;
"RTN","SCMCBK8",159,0)
MAIL K SCNOMAIL
"RTN","SCMCBK8",160,0)
 D MAILLST^SCMCBK9(SCTP,.SCADDFLD,DT,.SCNEWTP,.SCOLDTP,.SCBADTP,SCTOTCNT)
"RTN","SCMCBK8",161,0)
 Q SCCNT
"RTN","SCMCBK8",162,0)
 ;
"RTN","SCMCHLA")
0^20^B24513797
"RTN","SCMCHLA",1,0)
SCMCHLA ;ALB/KCL - PCMM HL7 Transmission Log File API'S ;25-JAN-2000
"RTN","SCMCHLA",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLA",3,0)
 ;
"RTN","SCMCHLA",4,0)
LOCK(SCTLIEN) ; Description: Used to lock a record in the PCMM HL7
"RTN","SCMCHLA",5,0)
 ; TANSMISSION LOG file.
"RTN","SCMCHLA",6,0)
 ;
"RTN","SCMCHLA",7,0)
 ;  Input:
"RTN","SCMCHLA",8,0)
 ;   SCTLIEN - ien of a record in the PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",9,0)
 ;
"RTN","SCMCHLA",10,0)
 ; Output:
"RTN","SCMCHLA",11,0)
 ;  Function Value: Returns 1 on success, 0 on faliure
"RTN","SCMCHLA",12,0)
 ;
"RTN","SCMCHLA",13,0)
 I $G(SCTLIEN) L +^SCPT(404.471,SCTLIEN):3
"RTN","SCMCHLA",14,0)
 ;
"RTN","SCMCHLA",15,0)
 Q $T
"RTN","SCMCHLA",16,0)
 ;
"RTN","SCMCHLA",17,0)
 ;
"RTN","SCMCHLA",18,0)
UNLOCK(SCTLIEN) ; Description: Used to unlock a record in the PCMM HL7
"RTN","SCMCHLA",19,0)
 ; TANSMISSION LOG file.
"RTN","SCMCHLA",20,0)
 ;
"RTN","SCMCHLA",21,0)
 ;  Input:
"RTN","SCMCHLA",22,0)
 ;   SCTLIEN - ien of a record in the PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",23,0)
 ;
"RTN","SCMCHLA",24,0)
 ; Output: None
"RTN","SCMCHLA",25,0)
 ;
"RTN","SCMCHLA",26,0)
 I $G(SCTLIEN) L -^SCPT(404.471,SCTLIEN)
"RTN","SCMCHLA",27,0)
 Q
"RTN","SCMCHLA",28,0)
 ;
"RTN","SCMCHLA",29,0)
 ;
"RTN","SCMCHLA",30,0)
GETLOG(SCTLIEN,SCECIEN,TLOG) ;
"RTN","SCMCHLA",31,0)
 ; Description: Used to obtain a record in the PCMM HL7 TRANSMISSION LOG
"RTN","SCMCHLA",32,0)
 ; file and a record in the Error Code subfile.  The field values will
"RTN","SCMCHLA",33,0)
 ; be returned in the TLOG array.
"RTN","SCMCHLA",34,0)
 ;
"RTN","SCMCHLA",35,0)
 ;  Input:
"RTN","SCMCHLA",36,0)
 ;   SCTLIEN - ien of a record in the PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",37,0)
 ;   SCECIEN - ien of record in the Error Code subfile
"RTN","SCMCHLA",38,0)
 ;
"RTN","SCMCHLA",39,0)
 ; Output:
"RTN","SCMCHLA",40,0)
 ;  Function Value: Returns 1 on success, 0 on faliure
"RTN","SCMCHLA",41,0)
 ;  TLOG - this is the name of a local array, it should be passed by
"RTN","SCMCHLA",42,0)
 ;         reference.  If the function is successful the array will
"RTN","SCMCHLA",43,0)
 ;         contain the PCMM HL7 TRANSMISSION LOG record and the
"RTN","SCMCHLA",44,0)
 ;         Error Code subfile record.
"RTN","SCMCHLA",45,0)
 ;
"RTN","SCMCHLA",46,0)
 ;         subscript           field name
"RTN","SCMCHLA",47,0)
 ;         ---------           ----------
"RTN","SCMCHLA",48,0)
 ;         "MSGID"             Message Control ID
"RTN","SCMCHLA",49,0)
 ;         "DFN"               Patient
"RTN","SCMCHLA",50,0)
 ;         "TRANS"             Transmission Date/Time
"RTN","SCMCHLA",51,0)
 ;         "STATUS"            Status
"RTN","SCMCHLA",52,0)
 ;         "ACK DT/TM"         ACK Received Date/Time
"RTN","SCMCHLA",53,0)
 ;
"RTN","SCMCHLA",54,0)
 ;  Error Code subfile record:
"RTN","SCMCHLA",55,0)
 ;         "ERR","CODE"        Error Code
"RTN","SCMCHLA",56,0)
 ;         "ERR","SEG"         Segment
"RTN","SCMCHLA",57,0)
 ;         "ERR","SEQ"         Sequence
"RTN","SCMCHLA",58,0)
 ;         "ERR","ZPCID"       ZPC ID
"RTN","SCMCHLA",59,0)
 ;         "ERR","EPS"         Error Processing Status
"RTN","SCMCHLA",60,0)
 ;
"RTN","SCMCHLA",61,0)
 N NODE
"RTN","SCMCHLA",62,0)
 K TLOG S TLOG=""
"RTN","SCMCHLA",63,0)
 Q:'$G(SCTLIEN) 0
"RTN","SCMCHLA",64,0)
 ;
"RTN","SCMCHLA",65,0)
 S NODE=$G(^SCPT(404.471,SCTLIEN,0))
"RTN","SCMCHLA",66,0)
 Q:(NODE="") 0
"RTN","SCMCHLA",67,0)
 S TLOG("MSGID")=$P(NODE,"^")
"RTN","SCMCHLA",68,0)
 S TLOG("DFN")=$P(NODE,"^",2)
"RTN","SCMCHLA",69,0)
 S TLOG("TRANS")=$P(NODE,"^",3)
"RTN","SCMCHLA",70,0)
 S TLOG("STATUS")=$P(NODE,"^",4)
"RTN","SCMCHLA",71,0)
 S TLOG("ACK DT/TM")=$P(NODE,"^",5)
"RTN","SCMCHLA",72,0)
 ;
"RTN","SCMCHLA",73,0)
 S TLOG("ERR")=""
"RTN","SCMCHLA",74,0)
 I $G(SCECIEN) D
"RTN","SCMCHLA",75,0)
 .S NODE=$G(^SCPT(404.471,SCTLIEN,"ERR",SCECIEN,0))
"RTN","SCMCHLA",76,0)
 .S TLOG("ERR","CODE")=$P(NODE,"^")
"RTN","SCMCHLA",77,0)
 .S TLOG("ERR","SEG")=$P(NODE,"^",2)
"RTN","SCMCHLA",78,0)
 .S TLOG("ERR","SEQ")=$P(NODE,"^",3)
"RTN","SCMCHLA",79,0)
 .S TLOG("ERR","ZPCID")=$P(NODE,"^",5)
"RTN","SCMCHLA",80,0)
 .S TLOG("ERR","EPS")=$P(NODE,"^",6)
"RTN","SCMCHLA",81,0)
 ;
"RTN","SCMCHLA",82,0)
 Q 1
"RTN","SCMCHLA",83,0)
 ;
"RTN","SCMCHLA",84,0)
 ;
"RTN","SCMCHLA",85,0)
STATUS(SCTLIEN) ;
"RTN","SCMCHLA",86,0)
 ; Description: Used to get STATUS field for record in PCMM HL7
"RTN","SCMCHLA",87,0)
 ; TRANSMISSION LOG file.
"RTN","SCMCHLA",88,0)
 ;
"RTN","SCMCHLA",89,0)
 ;  Input:
"RTN","SCMCHLA",90,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",91,0)
 ;
"RTN","SCMCHLA",92,0)
 ; Output:
"RTN","SCMCHLA",93,0)
 ;  Funtion Value: Returns STATUS field value, null otherwise.
"RTN","SCMCHLA",94,0)
 ;
"RTN","SCMCHLA",95,0)
 Q:'$G(SCTLIEN) ""
"RTN","SCMCHLA",96,0)
 Q $P($G(^SCPT(404.471,SCTLIEN,0)),"^",4)
"RTN","SCMCHLA",97,0)
 ;
"RTN","SCMCHLA",98,0)
 ;
"RTN","SCMCHLA",99,0)
UPDSTAT(SCTLIEN,STATUS,ERROR) ;
"RTN","SCMCHLA",100,0)
 ; Description: Used to update the STATUS field of record in PCMM HL7
"RTN","SCMCHLA",101,0)
 ; TRANSMISSION LOG file.
"RTN","SCMCHLA",102,0)
 ;
"RTN","SCMCHLA",103,0)
 ;  Input:
"RTN","SCMCHLA",104,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",105,0)
 ;    STATUS - T=Transmitted, A=Accepted, RJ=Rejected,
"RTN","SCMCHLA",106,0)
 ;             M=Marked for re-transmission, RT=Re-transmitted
"RTN","SCMCHLA",107,0)
 ;
"RTN","SCMCHLA",108,0)
 ; Output:
"RTN","SCMCHLA",109,0)
 ;  Funtion Value: Returns 1 on success, 0 on failure.
"RTN","SCMCHLA",110,0)
 ;  ERROR - returns error message on failure, pass by reference 
"RTN","SCMCHLA",111,0)
 ;
"RTN","SCMCHLA",112,0)
 N SCERR,SCFDA,SCIENS
"RTN","SCMCHLA",113,0)
 ;
"RTN","SCMCHLA",114,0)
 S ERROR=""
"RTN","SCMCHLA",115,0)
 ;
"RTN","SCMCHLA",116,0)
 I '$G(SCTLIEN) S ERROR="NO RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",117,0)
 I '$$LOCK(SCTLIEN) S ERROR="UNABLE TO OBTAIN LOCK ON RECORD" Q 0
"RTN","SCMCHLA",118,0)
 I ",T,A,RJ,M,RT,"'[(","_$G(STATUS)_",") S ERROR="INVALID STATUS" Q 0
"RTN","SCMCHLA",119,0)
 ;
"RTN","SCMCHLA",120,0)
 S SCIENS=SCTLIEN_","
"RTN","SCMCHLA",121,0)
 S SCFDA(404.471,SCIENS,.04)=STATUS  ; Status
"RTN","SCMCHLA",122,0)
 D FILE^DIE("","SCFDA","SCERR")
"RTN","SCMCHLA",123,0)
 ;
"RTN","SCMCHLA",124,0)
 D UNLOCK(SCTLIEN)
"RTN","SCMCHLA",125,0)
 ;
"RTN","SCMCHLA",126,0)
 ; if error returned from DBS call, unable to file data
"RTN","SCMCHLA",127,0)
 I $G(SCERR) S ERROR="UNABLE TO UPDATE STATUS FIELD" Q 0
"RTN","SCMCHLA",128,0)
 ;
"RTN","SCMCHLA",129,0)
 Q 1
"RTN","SCMCHLA",130,0)
 ;
"RTN","SCMCHLA",131,0)
 ;
"RTN","SCMCHLA",132,0)
INCLUDE(SCTLIEN) ;
"RTN","SCMCHLA",133,0)
 ; Description: Used to get INCLUDED IN REJECT BULLETIN? field for
"RTN","SCMCHLA",134,0)
 ; record in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLA",135,0)
 ;
"RTN","SCMCHLA",136,0)
 ;  Input:
"RTN","SCMCHLA",137,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",138,0)
 ;
"RTN","SCMCHLA",139,0)
 ; Output:
"RTN","SCMCHLA",140,0)
 ;  Funtion Value: Returns INCLUDED IN REJECT BULLETIN? field value, null otherwise.
"RTN","SCMCHLA",141,0)
 ;
"RTN","SCMCHLA",142,0)
 Q:'$G(SCTLIEN) ""
"RTN","SCMCHLA",143,0)
 Q $P($G(^SCPT(404.471,SCTLIEN,0)),"^",6)
"RTN","SCMCHLA",144,0)
 ;
"RTN","SCMCHLA",145,0)
 ;
"RTN","SCMCHLA",146,0)
UPDINCL(SCTLIEN,SCINCL,ERROR) ;
"RTN","SCMCHLA",147,0)
 ; Description: Used to update the INCLUDED IN REJECT BULLETIN? field of
"RTN","SCMCHLA",148,0)
 ; record in the PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLA",149,0)
 ;
"RTN","SCMCHLA",150,0)
 ;  Input:
"RTN","SCMCHLA",151,0)
 ;    SCTLIEN - IEN of record in PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",152,0)
 ;     SCINCL - 'Y'=YES
"RTN","SCMCHLA",153,0)
 ;
"RTN","SCMCHLA",154,0)
 ; Output:
"RTN","SCMCHLA",155,0)
 ;  Funtion Value: Returns 1 on success, 0 on failure.
"RTN","SCMCHLA",156,0)
 ;  ERROR - returns error message on failure, pass by reference 
"RTN","SCMCHLA",157,0)
 ;
"RTN","SCMCHLA",158,0)
 N SCERR,SCFDA,SCIENS
"RTN","SCMCHLA",159,0)
 ;
"RTN","SCMCHLA",160,0)
 S ERROR=""
"RTN","SCMCHLA",161,0)
 ;
"RTN","SCMCHLA",162,0)
 I '$G(SCTLIEN) S ERROR="NO RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",163,0)
 I $G(SCINCL)'="Y" S ERROR="INVALID FIELD VALUE" Q 0
"RTN","SCMCHLA",164,0)
 I '$$LOCK(SCTLIEN) S ERROR="UNABLE TO OBTAIN LOCK ON RECORD" Q 0
"RTN","SCMCHLA",165,0)
 ;
"RTN","SCMCHLA",166,0)
 S SCIENS=SCTLIEN_","
"RTN","SCMCHLA",167,0)
 S SCFDA(404.471,SCIENS,.06)=SCINCL  ; Included In Reject Bulletin?
"RTN","SCMCHLA",168,0)
 D FILE^DIE("","SCFDA","SCERR")
"RTN","SCMCHLA",169,0)
 ;
"RTN","SCMCHLA",170,0)
 D UNLOCK(SCTLIEN)
"RTN","SCMCHLA",171,0)
 ;
"RTN","SCMCHLA",172,0)
 ; if error returned from DBS call, unable to file data
"RTN","SCMCHLA",173,0)
 I $G(SCERR) S ERROR="UNABLE TO UPDATE 'INCLUDED IN REJECT BULLETIN?' FIELD" Q 0
"RTN","SCMCHLA",174,0)
 ;
"RTN","SCMCHLA",175,0)
 Q 1
"RTN","SCMCHLA",176,0)
 ;
"RTN","SCMCHLA",177,0)
 ;
"RTN","SCMCHLA",178,0)
ACK(SCTLIEN) ;
"RTN","SCMCHLA",179,0)
 ; Description: Used to get ACK RECEIVED DATE/TIME field for
"RTN","SCMCHLA",180,0)
 ; record in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLA",181,0)
 ;
"RTN","SCMCHLA",182,0)
 ;  Input:
"RTN","SCMCHLA",183,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",184,0)
 ;
"RTN","SCMCHLA",185,0)
 ; Output:
"RTN","SCMCHLA",186,0)
 ;  Funtion Value: Returns ACK RECEIVED DATE/TIME field value, 0 otherwise.
"RTN","SCMCHLA",187,0)
 ;
"RTN","SCMCHLA",188,0)
 Q:'$G(SCTLIEN) 0
"RTN","SCMCHLA",189,0)
 Q $P($G(^SCPT(404.471,SCTLIEN,0)),"^",5)
"RTN","SCMCHLA",190,0)
 ;
"RTN","SCMCHLA",191,0)
 ;
"RTN","SCMCHLA",192,0)
UPDEPS(SCTLIEN,SCERIEN,EPSTAT,ERROR) ;
"RTN","SCMCHLA",193,0)
 ; Description: Used to update the ERROR PROCESSING STATUS field of
"RTN","SCMCHLA",194,0)
 ; record in the Error Code (#404.47142) subfile.
"RTN","SCMCHLA",195,0)
 ;
"RTN","SCMCHLA",196,0)
 ;  Input:
"RTN","SCMCHLA",197,0)
 ;    SCTLIEN - IEN of record in PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",198,0)
 ;    SCERIEN - IEN record in ERROR CODE (#404.47142) subfile
"RTN","SCMCHLA",199,0)
 ;     EPSTAT - 1=NEW, 2=CHECKED
"RTN","SCMCHLA",200,0)
 ;
"RTN","SCMCHLA",201,0)
 ; Output:
"RTN","SCMCHLA",202,0)
 ;  Funtion Value: Returns 1 on success, 0 on failure.
"RTN","SCMCHLA",203,0)
 ;  ERROR - returns error message on failure, pass by reference 
"RTN","SCMCHLA",204,0)
 ;
"RTN","SCMCHLA",205,0)
 N SCERR,SCFDA,SCIENS,STATUS
"RTN","SCMCHLA",206,0)
 ;
"RTN","SCMCHLA",207,0)
 S ERROR=""
"RTN","SCMCHLA",208,0)
 ;
"RTN","SCMCHLA",209,0)
 I '$G(SCTLIEN) S ERROR="NO RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",210,0)
 I '$G(SCERIEN) S ERROR="NO SUB-RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",211,0)
 I '$G(EPSTAT) S ERROR="INVALID ERROR PROCESSING STATUS" Q 0
"RTN","SCMCHLA",212,0)
 S STATUS=$$STATUS(SCTLIEN)
"RTN","SCMCHLA",213,0)
 I (STATUS'="RJ")&(STATUS'="M") S ERROR="STATUS IS NOT 'REJECTED' OR 'MARKED FOR RE-TRANSMIT'" Q 0
"RTN","SCMCHLA",214,0)
 I '$$LOCK(SCTLIEN) S ERROR="UNABLE TO OBTAIN LOCK ON RECORD" Q 0
"RTN","SCMCHLA",215,0)
 ;
"RTN","SCMCHLA",216,0)
 S SCIENS=SCERIEN_","_SCTLIEN_","
"RTN","SCMCHLA",217,0)
 S SCFDA(404.47142,SCIENS,.06)=EPSTAT  ; Error Processing Status
"RTN","SCMCHLA",218,0)
 D FILE^DIE("","SCFDA","SCERR")
"RTN","SCMCHLA",219,0)
 ;
"RTN","SCMCHLA",220,0)
 D UNLOCK(SCTLIEN)
"RTN","SCMCHLA",221,0)
 ;
"RTN","SCMCHLA",222,0)
 ; if error returned from DBS call, unable to file data
"RTN","SCMCHLA",223,0)
 I $G(SCERR) S ERROR="UNABLE TO UPDATE STATUS FIELD" Q 0
"RTN","SCMCHLA",224,0)
 ;
"RTN","SCMCHLA",225,0)
 Q 1
"RTN","SCMCHLA1")
0^21^B8401211
"RTN","SCMCHLA1",1,0)
SCMCHLA1 ;ALB/KCL - PCMM HL7 Trans Log Xref API's ; 15-JAN-2000
"RTN","SCMCHLA1",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLA1",3,0)
 ;
"RTN","SCMCHLA1",4,0)
ASTSET(SCLOGIEN,STATUS) ;
"RTN","SCMCHLA1",5,0)
 ;Description: Sets the "AST" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",6,0)
 ;
"RTN","SCMCHLA1",7,0)
 ; Input: 
"RTN","SCMCHLA1",8,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",9,0)
 ;    STATUS - internal value of STATUS field
"RTN","SCMCHLA1",10,0)
 ;
"RTN","SCMCHLA1",11,0)
 ;s ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",12,0)
 ;
"RTN","SCMCHLA1",13,0)
 N NODE
"RTN","SCMCHLA1",14,0)
 ;
"RTN","SCMCHLA1",15,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",16,0)
 Q:$G(STATUS)']""
"RTN","SCMCHLA1",17,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",18,0)
 Q:'+$P(NODE,"^",2)
"RTN","SCMCHLA1",19,0)
 Q:'+$P(NODE,"^",5)
"RTN","SCMCHLA1",20,0)
 ;
"RTN","SCMCHLA1",21,0)
 I STATUS="RJ"!(STATUS="M") D
"RTN","SCMCHLA1",22,0)
 .S ^SCPT(404.471,"AST",$P(NODE,"^",5),STATUS,$P(NODE,"^",2),SCLOGIEN)=""
"RTN","SCMCHLA1",23,0)
 ;
"RTN","SCMCHLA1",24,0)
 Q
"RTN","SCMCHLA1",25,0)
 ;
"RTN","SCMCHLA1",26,0)
ASTKILL(SCLOGIEN,STATUS) ;
"RTN","SCMCHLA1",27,0)
 ;Description: Kill logic for "AST" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",28,0)
 ;
"RTN","SCMCHLA1",29,0)
 ; Input: 
"RTN","SCMCHLA1",30,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",31,0)
 ;    STATUS - internal value of STATUS field
"RTN","SCMCHLA1",32,0)
 ;
"RTN","SCMCHLA1",33,0)
 ;k ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",34,0)
 ;
"RTN","SCMCHLA1",35,0)
 N NODE
"RTN","SCMCHLA1",36,0)
 ;
"RTN","SCMCHLA1",37,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",38,0)
 Q:$G(STATUS)']""
"RTN","SCMCHLA1",39,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",40,0)
 Q:'$P(NODE,"^",2)
"RTN","SCMCHLA1",41,0)
 Q:'$P(NODE,"^",5)
"RTN","SCMCHLA1",42,0)
 ;
"RTN","SCMCHLA1",43,0)
 I STATUS="RJ"!(STATUS="M") D
"RTN","SCMCHLA1",44,0)
 .K ^SCPT(404.471,"AST",+$P(NODE,"^",5),STATUS,+$P(NODE,"^",2),SCLOGIEN)
"RTN","SCMCHLA1",45,0)
 ;
"RTN","SCMCHLA1",46,0)
 Q
"RTN","SCMCHLA1",47,0)
 ;
"RTN","SCMCHLA1",48,0)
 ;
"RTN","SCMCHLA1",49,0)
AST1SET(SCLOGIEN,ACKREC) ;
"RTN","SCMCHLA1",50,0)
 ;Description: Sets the "AST1" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",51,0)
 ;
"RTN","SCMCHLA1",52,0)
 ; Input: 
"RTN","SCMCHLA1",53,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",54,0)
 ;    ACKREC - internal value of ACK RECEIVED DATE/TIME field
"RTN","SCMCHLA1",55,0)
 ;
"RTN","SCMCHLA1",56,0)
 ;s ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",57,0)
 ;
"RTN","SCMCHLA1",58,0)
 N NODE
"RTN","SCMCHLA1",59,0)
 ;
"RTN","SCMCHLA1",60,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",61,0)
 Q:'$G(ACKREC)
"RTN","SCMCHLA1",62,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",63,0)
 Q:'+$P(NODE,"^",2)
"RTN","SCMCHLA1",64,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",65,0)
 ;
"RTN","SCMCHLA1",66,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",67,0)
 .S ^SCPT(404.471,"AST",ACKREC,$P(NODE,"^",4),+$P(NODE,"^",2),SCLOGIEN)=""
"RTN","SCMCHLA1",68,0)
 ;
"RTN","SCMCHLA1",69,0)
 Q
"RTN","SCMCHLA1",70,0)
 ;
"RTN","SCMCHLA1",71,0)
AST1KILL(SCLOGIEN,ACKREC) ;
"RTN","SCMCHLA1",72,0)
 ;Description: Kill logic for "AST1" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",73,0)
 ;
"RTN","SCMCHLA1",74,0)
 ; Input: 
"RTN","SCMCHLA1",75,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",76,0)
 ;    ACKREC - internal value of ACK RECEIVED DATE/TIME field
"RTN","SCMCHLA1",77,0)
 ;
"RTN","SCMCHLA1",78,0)
 ;k ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",79,0)
 ;
"RTN","SCMCHLA1",80,0)
 N NODE
"RTN","SCMCHLA1",81,0)
 ;
"RTN","SCMCHLA1",82,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",83,0)
 Q:'$G(ACKREC)
"RTN","SCMCHLA1",84,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",85,0)
 Q:'+$P(NODE,"^",2)
"RTN","SCMCHLA1",86,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",87,0)
 ;
"RTN","SCMCHLA1",88,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",89,0)
 .K ^SCPT(404.471,"AST",ACKREC,$P(NODE,"^",4),+$P(NODE,"^",2),SCLOGIEN)
"RTN","SCMCHLA1",90,0)
 ;
"RTN","SCMCHLA1",91,0)
 Q
"RTN","SCMCHLA1",92,0)
 ;
"RTN","SCMCHLA1",93,0)
 ;
"RTN","SCMCHLA1",94,0)
AST2SET(SCLOGIEN,PAT) ;
"RTN","SCMCHLA1",95,0)
 ;Description: Sets the "AST2" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",96,0)
 ;
"RTN","SCMCHLA1",97,0)
 ; Input: 
"RTN","SCMCHLA1",98,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",99,0)
 ;       PAT - internal value of PATIENT field
"RTN","SCMCHLA1",100,0)
 ;
"RTN","SCMCHLA1",101,0)
 ;s ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",102,0)
 ;
"RTN","SCMCHLA1",103,0)
 N NODE
"RTN","SCMCHLA1",104,0)
 ;
"RTN","SCMCHLA1",105,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",106,0)
 Q:'$G(PAT)
"RTN","SCMCHLA1",107,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",108,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",109,0)
 Q:'+$P(NODE,"^",5)
"RTN","SCMCHLA1",110,0)
 ;
"RTN","SCMCHLA1",111,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",112,0)
 .S ^SCPT(404.471,"AST",+$P(NODE,"^",5),$P(NODE,"^",4),PAT,SCLOGIEN)=""
"RTN","SCMCHLA1",113,0)
 ;
"RTN","SCMCHLA1",114,0)
 Q
"RTN","SCMCHLA1",115,0)
 ;
"RTN","SCMCHLA1",116,0)
AST2KILL(SCLOGIEN,PAT) ;
"RTN","SCMCHLA1",117,0)
 ;Description: Kill logic for "AST2" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",118,0)
 ;
"RTN","SCMCHLA1",119,0)
 ; Input: 
"RTN","SCMCHLA1",120,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",121,0)
 ;       PAT - internal value of PATIENT field
"RTN","SCMCHLA1",122,0)
 ;
"RTN","SCMCHLA1",123,0)
 ;k ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",124,0)
 ;
"RTN","SCMCHLA1",125,0)
 N NODE
"RTN","SCMCHLA1",126,0)
 ;
"RTN","SCMCHLA1",127,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",128,0)
 Q:'$G(PAT)
"RTN","SCMCHLA1",129,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",130,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",131,0)
 Q:'+$P(NODE,"^",5)
"RTN","SCMCHLA1",132,0)
 ;
"RTN","SCMCHLA1",133,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",134,0)
 .K ^SCPT(404.471,"AST",+$P(NODE,"^",5),$P(NODE,"^",4),PAT,SCLOGIEN)
"RTN","SCMCHLA1",135,0)
 Q
"RTN","SCMCHLA2")
0^22^B1471359
"RTN","SCMCHLA2",1,0)
SCMCHLA2 ;ALB/KCL - PCMM HL7 Error Code & ID File API'S ;25-JAN-2000
"RTN","SCMCHLA2",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLA2",3,0)
 ;
"RTN","SCMCHLA2",4,0)
GETEC(SCIEN,SCEC) ;
"RTN","SCMCHLA2",5,0)
 ; Description: Used to obtain a record from the PCMM HL7 ERROR CODE
"RTN","SCMCHLA2",6,0)
 ; (#404.472) file and place it into the local SCECODE array.
"RTN","SCMCHLA2",7,0)
 ;
"RTN","SCMCHLA2",8,0)
 ;  Input :
"RTN","SCMCHLA2",9,0)
 ;   SCIEN - IEN of a PCMM HL7 ERROR CODE record
"RTN","SCMCHLA2",10,0)
 ;
"RTN","SCMCHLA2",11,0)
 ; Output:
"RTN","SCMCHLA2",12,0)
 ;  Function Value - returns 1 on success, 0 on failure.
"RTN","SCMCHLA2",13,0)
 ;  SCECODE - if succes, the name of local array containing the record,
"RTN","SCMCHLA2",14,0)
 ;            passed by reference.
"RTN","SCMCHLA2",15,0)
 ;
"RTN","SCMCHLA2",16,0)
 ;     subscript      field name
"RTN","SCMCHLA2",17,0)
 ;     ---------      ----------
"RTN","SCMCHLA2",18,0)
 ;     "CODE"         Error Code
"RTN","SCMCHLA2",19,0)
 ;     "SEG"          Segment
"RTN","SCMCHLA2",20,0)
 ;     "FLD"          Field
"RTN","SCMCHLA2",21,0)
 ;     "SHORT"        Short Description
"RTN","SCMCHLA2",22,0)
 ;
"RTN","SCMCHLA2",23,0)
 N NODE
"RTN","SCMCHLA2",24,0)
 ;
"RTN","SCMCHLA2",25,0)
 I '$G(SCIEN) Q 0
"RTN","SCMCHLA2",26,0)
 I '$D(^SCPT(404.472,SCIEN,0)) Q 0
"RTN","SCMCHLA2",27,0)
 ;
"RTN","SCMCHLA2",28,0)
 K SCECODE S SCECODE=""
"RTN","SCMCHLA2",29,0)
 S NODE=$G(^SCPT(404.472,SCIEN,0))
"RTN","SCMCHLA2",30,0)
 S SCEC("CODE")=$P(NODE,"^")
"RTN","SCMCHLA2",31,0)
 S SCEC("SEG")=$P(NODE,"^",2)
"RTN","SCMCHLA2",32,0)
 S SCEC("FLD")=$P(NODE,"^",3)
"RTN","SCMCHLA2",33,0)
 S SCEC("SHORT")=$P(NODE,"^",4)
"RTN","SCMCHLA2",34,0)
 Q 1
"RTN","SCMCHLA2",35,0)
 ;
"RTN","SCMCHLA2",36,0)
 ;
"RTN","SCMCHLA2",37,0)
GETHL7ID(SCIEN,SCHLID) ;
"RTN","SCMCHLA2",38,0)
 ; Description: Used to obtain a record from the PCMM HL7 ID
"RTN","SCMCHLA2",39,0)
 ; file and place it into the local SCHLID array.
"RTN","SCMCHLA2",40,0)
 ;
"RTN","SCMCHLA2",41,0)
 ;  Input :
"RTN","SCMCHLA2",42,0)
 ;   SCIEN - IEN of a PCMM HL7 ID record
"RTN","SCMCHLA2",43,0)
 ;
"RTN","SCMCHLA2",44,0)
 ; Output:
"RTN","SCMCHLA2",45,0)
 ;  Function Value - returns 1 on success, 0 on failure.
"RTN","SCMCHLA2",46,0)
 ;  SCHID - if succes, the name of local array containing the record,
"RTN","SCMCHLA2",47,0)
 ;          passed by reference.
"RTN","SCMCHLA2",48,0)
 ;
"RTN","SCMCHLA2",49,0)
 ;     subscript      field name
"RTN","SCMCHLA2",50,0)
 ;     ---------      ----------
"RTN","SCMCHLA2",51,0)
 ;     "HL7ID"        Name
"RTN","SCMCHLA2",52,0)
 ;     "INTID"        Integration ID
"RTN","SCMCHLA2",53,0)
 ;    
"RTN","SCMCHLA2",54,0)
 N SUB,NODE
"RTN","SCMCHLA2",55,0)
 ;
"RTN","SCMCHLA2",56,0)
 I '$G(SCIEN) Q 0
"RTN","SCMCHLA2",57,0)
 I '$D(^SCPT(404.49,SCIEN,0)) Q 0
"RTN","SCMCHLA2",58,0)
 K SCHLID S SCHLID=""
"RTN","SCMCHLA2",59,0)
 S NODE=$G(^SCPT(404.49,SCIEN,0))
"RTN","SCMCHLA2",60,0)
 S SCHLID("HL7ID")=$P(NODE,"^")
"RTN","SCMCHLA2",61,0)
 S SCHLID("INTID")=$P(NODE,"^",2)
"RTN","SCMCHLA2",62,0)
 Q 1
"RTN","SCMCHLB")
0^6^B11566939
"RTN","SCMCHLB",1,0)
SCMCHLB ;BP/DJB - PCMM HL7 Bld Segment Array ; 3/2/00 2:12pm
"RTN","SCMCHLB",2,0)
 ;;5.3;Scheduling;**177,204,210**;AUG 13, 1993
"RTN","SCMCHLB",3,0)
 ;
"RTN","SCMCHLB",4,0)
BUILD(VARPTR,HL,XMITARRY) ;Build an array of HL7 segments based on EVENT
"RTN","SCMCHLB",5,0)
 ;POINTER field in PCMM HL7 EVENT file (#404.48).
"RTN","SCMCHLB",6,0)
 ;
"RTN","SCMCHLB",7,0)
 ;Input:
"RTN","SCMCHLB",8,0)
 ;     VARPTR   - EVENT POINTER field in PCMM HL7 EVENT file.
"RTN","SCMCHLB",9,0)
 ;     HL       - Array of HL7 variables (pass by reference).
"RTN","SCMCHLB",10,0)
 ;                Output of call to INIT^HLFNC2().
"RTN","SCMCHLB",11,0)
 ;     XMITARRY - Array to store HL7 segments (full global ref).
"RTN","SCMCHLB",12,0)
 ;                Default=^TMP("HLS",$J)
"RTN","SCMCHLB",13,0)
 ;Output:
"RTN","SCMCHLB",14,0)
 ;     XMITARRY(n,segment) array of segments.
"RTN","SCMCHLB",15,0)
 ;        Examples:
"RTN","SCMCHLB",16,0)
 ;           ^TMP("PCMM","HL7",$J,2290,"PID")...= PID segment
"RTN","SCMCHLB",17,0)
 ;           ^TMP("PCMM","HL7",$J,2290,"ZPC",ID)= ZPC segments
"RTN","SCMCHLB",18,0)
 ;     -1^Error = Unable to build message / bad input
"RTN","SCMCHLB",19,0)
 ;
"RTN","SCMCHLB",20,0)
 ;Note: The calling program must initialize (i.e. KILL) XMITARRY.
"RTN","SCMCHLB",21,0)
 ;
"RTN","SCMCHLB",22,0)
 ;Declare variables
"RTN","SCMCHLB",23,0)
 NEW RESULT,SCIEN,SCGLB
"RTN","SCMCHLB",24,0)
 NEW HLECH,HLEID,HLFS,HLQ
"RTN","SCMCHLB",25,0)
 ;
"RTN","SCMCHLB",26,0)
 ;Convert VARPTR (ien;global) to SCIEN & SCGLB
"RTN","SCMCHLB",27,0)
 S RESULT=$$CHECK^SCMCHLB1($G(VARPTR))
"RTN","SCMCHLB",28,0)
 ;
"RTN","SCMCHLB",29,0)
 I 'RESULT Q "-1^Did not pass valid variable pointer"
"RTN","SCMCHLB",30,0)
 ;
"RTN","SCMCHLB",31,0)
 ;Initialize HL7 variables
"RTN","SCMCHLB",32,0)
 S HLECH=HL("ECH")
"RTN","SCMCHLB",33,0)
 S HLFS=HL("FS")
"RTN","SCMCHLB",34,0)
 S HLQ=HL("Q")
"RTN","SCMCHLB",35,0)
 ;
"RTN","SCMCHLB",36,0)
 I RESULT=2 D  G QUIT ;........................Process a deletion
"RTN","SCMCHLB",37,0)
 . I SCGLB="SCPT(404.43," D PTP^SCMCHLB2 Q  ;..Delete - File 404.43
"RTN","SCMCHLB",38,0)
 . I SCGLB="SCTM(404.52," D POS^SCMCHLB2 Q  ;..Delete - File 404.52
"RTN","SCMCHLB",39,0)
 . I SCGLB="SCTM(404.53," D PRE^SCMCHLB2 Q  ;..Delete - File 404.53
"RTN","SCMCHLB",40,0)
 I SCGLB="SCPT(404.43," D PTP(SCIEN) G QUIT ;..File 404.43
"RTN","SCMCHLB",41,0)
 I SCGLB="SCTM(404.52," D POS G QUIT ;.........File 404.52
"RTN","SCMCHLB",42,0)
 I SCGLB="SCTM(404.53," D PRE G QUIT ;.........File 404.53
"RTN","SCMCHLB",43,0)
QUIT Q 1
"RTN","SCMCHLB",44,0)
 ;
"RTN","SCMCHLB",45,0)
 ;==================================================================
"RTN","SCMCHLB",46,0)
 ;
"RTN","SCMCHLB",47,0)
PTP(PTPI) ;Patient Team Position Assignment (#404.43).
"RTN","SCMCHLB",48,0)
 ;Input: PTPI - Patient Team Position Assignment IEN
"RTN","SCMCHLB",49,0)
 ;
"RTN","SCMCHLB",50,0)
 ;To keep VISTA and NPCD in sync, for this PT TM POS ASSIGN send
"RTN","SCMCHLB",51,0)
 ;down a delete for all previous entries, and then send down data
"RTN","SCMCHLB",52,0)
 ;for current valid entries.
"RTN","SCMCHLB",53,0)
 ;
"RTN","SCMCHLB",54,0)
 ;NEW DFN,ERROR,ND,ZDATE,ZPTP
"RTN","SCMCHLB",55,0)
 ;djb/bp Added SCSEQ per Patch 210, replace above line with below line
"RTN","SCMCHLB",56,0)
 NEW DFN,ERROR,ND,SCSEQ,ZDATE,ZPTP
"RTN","SCMCHLB",57,0)
 ;
"RTN","SCMCHLB",58,0)
 ;Get data
"RTN","SCMCHLB",59,0)
 S ND=$G(^SCPT(404.43,PTPI,0))
"RTN","SCMCHLB",60,0)
 S DFN=$$DFN^SCMCHLB1(ND) Q:'DFN  ;..Patient
"RTN","SCMCHLB",61,0)
 ;
"RTN","SCMCHLB",62,0)
 ;Get only valid entries for this PT TM POS ASSIGN. This call returns
"RTN","SCMCHLB",63,0)
 ;provider array for a patient team position assignment.
"RTN","SCMCHLB",64,0)
 ;Example: ZPTP(8944,"AP","8944-909-0-AP")=data
"RTN","SCMCHLB",65,0)
 ;         ZPTP(8944,"PCP","8944-911-157-PCP")=data
"RTN","SCMCHLB",66,0)
 KILL ZPTP
"RTN","SCMCHLB",67,0)
 D SETDATE ;Set date array
"RTN","SCMCHLB",68,0)
 S RESULT=$$PRPTTPC^SCAPMC(PTPI,"ZDATE","ZPTP","ERROR","",1)
"RTN","SCMCHLB",69,0)
 ;
"RTN","SCMCHLB",70,0)
 ;If no valid history don't build any segments
"RTN","SCMCHLB",71,0)
 Q:'$D(ZPTP)
"RTN","SCMCHLB",72,0)
 ;
"RTN","SCMCHLB",73,0)
 ;Build EVN & PID segments
"RTN","SCMCHLB",74,0)
 D SEGMENTS^SCMCHLB1(DFN,PTPI)
"RTN","SCMCHLB",75,0)
 ;
"RTN","SCMCHLB",76,0)
 ;Generate deletes for all ID's starting with this PT TM POS ASSIGN.
"RTN","SCMCHLB",77,0)
 D PTPD^SCMCHLB2(PTPI)
"RTN","SCMCHLB",78,0)
 ;
"RTN","SCMCHLB",79,0)
 ;Build data type ZPC segments.
"RTN","SCMCHLB",80,0)
 D ZPC^SCMCHLB1(.ZPTP)
"RTN","SCMCHLB",81,0)
 Q
"RTN","SCMCHLB",82,0)
 ;
"RTN","SCMCHLB",83,0)
POS ;Position Assign History (#404.52)
"RTN","SCMCHLB",84,0)
 ;
"RTN","SCMCHLB",85,0)
 ;To keep VISTA and NPCD in sync, for every primary care entry in Pt
"RTN","SCMCHLB",86,0)
 ;Tm Pos Assign for this TEAM POSITION, send down all valid entries.
"RTN","SCMCHLB",87,0)
 ;
"RTN","SCMCHLB",88,0)
 NEW TMPOS,TP
"RTN","SCMCHLB",89,0)
 ;
"RTN","SCMCHLB",90,0)
 ;Team Position pointer
"RTN","SCMCHLB",91,0)
 S TMPOS=$P($G(^SCTM(404.52,SCIEN,0)),U,1)
"RTN","SCMCHLB",92,0)
 Q:'TMPOS
"RTN","SCMCHLB",93,0)
 ;
"RTN","SCMCHLB",94,0)
 ;Get History entries for each PT TM POS ASSIGN
"RTN","SCMCHLB",95,0)
 D POS1(TMPOS)
"RTN","SCMCHLB",96,0)
 ;
"RTN","SCMCHLB",97,0)
 ;What if this TEAM POSITION is also a preceptor? Find every TEAM
"RTN","SCMCHLB",98,0)
 ;POSITION being precepted by this TEAM POSITION and for each, find
"RTN","SCMCHLB",99,0)
 ;every PT TM POS ASSIGN and send down all valid History entries.
"RTN","SCMCHLB",100,0)
 ;
"RTN","SCMCHLB",101,0)
 S TP=0
"RTN","SCMCHLB",102,0)
 F  S TP=$O(^SCTM(404.53,"AD",TMPOS,TP)) Q:'TP  D POS1(TP)
"RTN","SCMCHLB",103,0)
 Q
"RTN","SCMCHLB",104,0)
 ;
"RTN","SCMCHLB",105,0)
POS1(TMPOS) ;Find every primary care PT TM POS ASSIGN for this TEAM POSITION
"RTN","SCMCHLB",106,0)
 ;and get all valid History entries.
"RTN","SCMCHLB",107,0)
 ;Input:
"RTN","SCMCHLB",108,0)
 ;   TMPOS - TEAM POSITION pointer
"RTN","SCMCHLB",109,0)
 ;
"RTN","SCMCHLB",110,0)
 Q:'$G(TMPOS)
"RTN","SCMCHLB",111,0)
 NEW IFN,ND,TM
"RTN","SCMCHLB",112,0)
 ;
"RTN","SCMCHLB",113,0)
 S TM=0
"RTN","SCMCHLB",114,0)
 F  S TM=$O(^SCPT(404.43,"APTPA",TMPOS,TM)) Q:'TM  D  ;
"RTN","SCMCHLB",115,0)
 . S IFN=0
"RTN","SCMCHLB",116,0)
 . F  S IFN=$O(^SCPT(404.43,"APTPA",TMPOS,TM,IFN)) Q:'IFN  D  ;
"RTN","SCMCHLB",117,0)
 .. S ND=$G(^SCPT(404.43,IFN,0))
"RTN","SCMCHLB",118,0)
 .. Q:($P(ND,U,5)'=1)  ;..Must be Primary Care
"RTN","SCMCHLB",119,0)
 .. D PTP(IFN) ;..........Bld segments for this PT TM POS ASSIGN
"RTN","SCMCHLB",120,0)
 Q
"RTN","SCMCHLB",121,0)
 ;
"RTN","SCMCHLB",122,0)
PRE ;Preceptor Assign History (#404.53)
"RTN","SCMCHLB",123,0)
 ;
"RTN","SCMCHLB",124,0)
 ;Get TEAM POSITION pointer of preceptee. Find every primary care
"RTN","SCMCHLB",125,0)
 ;PT TM POS ASSIGN for this TEAM POSITION and send down all valid
"RTN","SCMCHLB",126,0)
 ;History entries.
"RTN","SCMCHLB",127,0)
 ;
"RTN","SCMCHLB",128,0)
 NEW TMPOS
"RTN","SCMCHLB",129,0)
 ;
"RTN","SCMCHLB",130,0)
 ;Preceptee TEAM POSITION pointer
"RTN","SCMCHLB",131,0)
 S TMPOS=$P($G(^SCTM(404.53,SCIEN,0)),U,1)
"RTN","SCMCHLB",132,0)
 Q:'TMPOS
"RTN","SCMCHLB",133,0)
 D POS1(TMPOS) ;Get History entries for each PT TM POS ASSIGN
"RTN","SCMCHLB",134,0)
 ;
"RTN","SCMCHLB",135,0)
 ;Preceptor TEAM POSITION pointer
"RTN","SCMCHLB",136,0)
 S TMPOS=$P($G(^SCTM(404.53,SCIEN,0)),U,6)
"RTN","SCMCHLB",137,0)
 Q:'TMPOS
"RTN","SCMCHLB",138,0)
 D POS1(TMPOS) ;Get History entries for each PT TM POS ASSIGN
"RTN","SCMCHLB",139,0)
 Q
"RTN","SCMCHLB",140,0)
 ;
"RTN","SCMCHLB",141,0)
SETDATE ;Set all encompassing date array
"RTN","SCMCHLB",142,0)
 S ZDATE("BEGIN")=2800101
"RTN","SCMCHLB",143,0)
 S ZDATE("END")=9991231
"RTN","SCMCHLB",144,0)
 S ZDATE("INCL")=0
"RTN","SCMCHLB",145,0)
 Q
"RTN","SCMCHLB2")
0^7^B13614527
"RTN","SCMCHLB2",1,0)
SCMCHLB2 ;BP/DJB - PCMM HL7 Bld Segment Array Deletes ; 3/6/00 8:41am
"RTN","SCMCHLB2",2,0)
 ;;5.3;Scheduling;**177,204,210**;AUG 13, 1993
"RTN","SCMCHLB2",3,0)
 ;
"RTN","SCMCHLB2",4,0)
PTP ;Entry has been deleted from file 404.43. Send deletes to NPCD.
"RTN","SCMCHLB2",5,0)
 ;
"RTN","SCMCHLB2",6,0)
 NEW DFN,TP
"RTN","SCMCHLB2",7,0)
 D GETEVENT Q:'DFN  ;..Get DFN & TP from PCMM HL7 EVENT file
"RTN","SCMCHLB2",8,0)
 D PTPD(SCIEN) ;.......Send delete
"RTN","SCMCHLB2",9,0)
 Q
"RTN","SCMCHLB2",10,0)
 ;
"RTN","SCMCHLB2",11,0)
PTPD(PTPI) ;From PCMM HL7 ID file, get all ID's whose 1st piece equals PTPI,
"RTN","SCMCHLB2",12,0)
 ;and send a delete segment.
"RTN","SCMCHLB2",13,0)
 ;Input: PTPI - 404.43 IEN (1st piece of ID)
"RTN","SCMCHLB2",14,0)
 ;
"RTN","SCMCHLB2",15,0)
 ;djb/bp Added SCSEQ per Patch 210[rel 204].
"RTN","SCMCHLB2",16,0)
 NEW DATA,ID,LINETAG,SCSEQ,VAFZPC
"RTN","SCMCHLB2",17,0)
 ;
"RTN","SCMCHLB2",18,0)
 S ID=PTPI_"-"
"RTN","SCMCHLB2",19,0)
 F  S ID=$O(^SCPT(404.49,"B",ID)) Q:ID=""!($P(ID,"-",1)'=PTPI)  D  ;
"RTN","SCMCHLB2",20,0)
 . S DATA="^^^" ;........A Delete type ZPC segment
"RTN","SCMCHLB2",21,0)
 . ;djb/bp Patch 210. Eliminate indirection[rel 204]
"RTN","SCMCHLB2",22,0)
 . ;New code begin
"RTN","SCMCHLB2",23,0)
 . D BLDZPC^SCMCHLS ;..Build segment (needs ID & DATA)
"RTN","SCMCHLB2",24,0)
 . D CPYZPC^SCMCHLS ;..Copy segment into array (needs ID & VAFZPC)
"RTN","SCMCHLB2",25,0)
 . ;New code end
"RTN","SCMCHLB2",26,0)
 . ;Old code begin
"RTN","SCMCHLB2",27,0)
 . ;S LINETAG="BLDZPC"
"RTN","SCMCHLB2",28,0)
 . ;D @LINETAG^SCMCHLS ;..Build segment (needs ID & DATA)
"RTN","SCMCHLB2",29,0)
 . ;S LINETAG="CPYZPC"
"RTN","SCMCHLB2",30,0)
 . ;D @LINETAG^SCMCHLS ;..Copy segment into array (needs ID & VAFZPC)
"RTN","SCMCHLB2",31,0)
 . ;Old code end
"RTN","SCMCHLB2",32,0)
 Q:'$D(@XMITARRY)
"RTN","SCMCHLB2",33,0)
 D SEGMENTS^SCMCHLB1(DFN,PTPI) ;Bld array of EVN,PID segments
"RTN","SCMCHLB2",34,0)
 Q
"RTN","SCMCHLB2",35,0)
 ;
"RTN","SCMCHLB2",36,0)
POS ;Entry has been deleted from file 404.52. Send deletes to NPCD.
"RTN","SCMCHLB2",37,0)
 ;
"RTN","SCMCHLB2",38,0)
 NEW DATA,DFN,ID,LINETAG,ND,POS,PTPI,VAFZPC
"RTN","SCMCHLB2",39,0)
 ;
"RTN","SCMCHLB2",40,0)
 ;From PCMM HL7 ID file, get all ID's whose 2nd piece equals SCIEN,
"RTN","SCMCHLB2",41,0)
 ;Build array sorted by:  DFN
"RTN","SCMCHLB2",42,0)
 ;                        404.43 IEN
"RTN","SCMCHLB2",43,0)
 ;                        ID
"RTN","SCMCHLB2",44,0)
 ;djb/bp Fix <STORE> errors for NOIS BIG-1199-71271.
"RTN","SCMCHLB2",45,0)
 ;       Replace local array POS() with global array.
"RTN","SCMCHLB2",46,0)
 S POS="^TMP(""PCMM"",""POS"","_$J_")"
"RTN","SCMCHLB2",47,0)
 KILL @POS
"RTN","SCMCHLB2",48,0)
 ;
"RTN","SCMCHLB2",49,0)
 S ID=""
"RTN","SCMCHLB2",50,0)
 F  S ID=$O(^SCPT(404.49,"B",ID)) Q:ID=""  D  ;
"RTN","SCMCHLB2",51,0)
 . Q:$P(ID,"-",2)'=SCIEN
"RTN","SCMCHLB2",52,0)
 . S PTPI=$P(ID,"-",1) ;...............404.43 IEN
"RTN","SCMCHLB2",53,0)
 . S ND=$G(^SCPT(404.43,PTPI,0))
"RTN","SCMCHLB2",54,0)
 . Q:($P(ND,U,5)'=1)  ;................Must be Primary Care
"RTN","SCMCHLB2",55,0)
 . S DFN=$$DFN^SCMCHLB1(ND) Q:'DFN  ;..Get patient
"RTN","SCMCHLB2",56,0)
 . ;
"RTN","SCMCHLB2",57,0)
 . ;S POS(DFN,PTPI,ID)=""
"RTN","SCMCHLB2",58,0)
 . S @POS@(DFN,PTPI,ID)="" ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",59,0)
 . ;
"RTN","SCMCHLB2",60,0)
 Q:'$D(@POS)
"RTN","SCMCHLB2",61,0)
 ;
"RTN","SCMCHLB2",62,0)
 ;Process array
"RTN","SCMCHLB2",63,0)
 S DFN=0
"RTN","SCMCHLB2",64,0)
 ;F  S DFN=$O(POS(DFN)) Q:'DFN  D  ;
"RTN","SCMCHLB2",65,0)
 F  S DFN=$O(@POS@(DFN)) Q:'DFN  D  ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",66,0)
 . S PTPI=0
"RTN","SCMCHLB2",67,0)
 . ;F  S PTPI=$O(POS(DFN,PTPI)) Q:'PTPI  D  ;
"RTN","SCMCHLB2",68,0)
 . F  S PTPI=$O(@POS@(DFN,PTPI)) Q:'PTPI  D  ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",69,0)
 .. NEW SCSEQ ;djb/bp Added per Patch 210.
"RTN","SCMCHLB2",70,0)
 .. D SEGMENTS^SCMCHLB1(DFN,PTPI) ;Bld array of EVN,PID segments
"RTN","SCMCHLB2",71,0)
 .. S ID=""
"RTN","SCMCHLB2",72,0)
 .. ;F  S ID=$O(POS(DFN,PTPI,ID)) Q:ID=""  D  ;
"RTN","SCMCHLB2",73,0)
 .. F  S ID=$O(@POS@(DFN,PTPI,ID)) Q:ID=""  D  ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",74,0)
 ... S DATA="^^^" ;........A Delete type ZPC segment
"RTN","SCMCHLB2",75,0)
 ... ;djb/bp Patch 210. Eliminate indirection[rel 204]
"RTN","SCMCHLB2",76,0)
 ... ;New code begin
"RTN","SCMCHLB2",77,0)
 ... D BLDZPC^SCMCHLS ;..Build segment (needs ID & DATA)
"RTN","SCMCHLB2",78,0)
 ... D CPYZPC^SCMCHLS ;..Copy segment into array (needs ID & VAFZPC)
"RTN","SCMCHLB2",79,0)
 ... ;New code end
"RTN","SCMCHLB2",80,0)
 ... ;Old code begin
"RTN","SCMCHLB2",81,0)
 ... ;S LINETAG="BLDZPC"
"RTN","SCMCHLB2",82,0)
 ... ;D @LINETAG^SCMCHLS ;..Build segment (needs ID & DATA)
"RTN","SCMCHLB2",83,0)
 ... ;S LINETAG="CPYZPC"
"RTN","SCMCHLB2",84,0)
 ... ;D @LINETAG^SCMCHLS ;..Copy segment into array (need ID & VAFZPC)
"RTN","SCMCHLB2",85,0)
 ... ;Old code end
"RTN","SCMCHLB2",86,0)
 ;
"RTN","SCMCHLB2",87,0)
 KILL @POS ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",88,0)
 Q
"RTN","SCMCHLB2",89,0)
 ;
"RTN","SCMCHLB2",90,0)
PRE ;Entry has been deleted from file 404.53. Send deletes to NPCD.
"RTN","SCMCHLB2",91,0)
 ;****
"RTN","SCMCHLB2",92,0)
 ;Currently, deletes to 404.53 are not allowed if there are
"RTN","SCMCHLB2",93,0)
 ;patients assigned.
"RTN","SCMCHLB2",94,0)
 ;****
"RTN","SCMCHLB2",95,0)
 Q
"RTN","SCMCHLB2",96,0)
 ;
"RTN","SCMCHLB2",97,0)
GETEVENT ;Get data from PCMM HL7 EVENT file
"RTN","SCMCHLB2",98,0)
 ;Return: DFN - Patient IEN
"RTN","SCMCHLB2",99,0)
 ;        TP  - Team Position
"RTN","SCMCHLB2",100,0)
 ;
"RTN","SCMCHLB2",101,0)
 NEW IEN,ND,PTR
"RTN","SCMCHLB2",102,0)
 ;
"RTN","SCMCHLB2",103,0)
 ;If in manual mode, get SCEVIEN (404.48 IEN).
"RTN","SCMCHLB2",104,0)
 I $G(SCMANUAL) D  ;
"RTN","SCMCHLB2",105,0)
 . S (IEN,SCEVIEN)=0
"RTN","SCMCHLB2",106,0)
 . F  S IEN=$O(^SCPT(404.48,IEN)) Q:'IEN!SCEVIEN  D  ;
"RTN","SCMCHLB2",107,0)
 .. S PTR=$P($G(^(IEN,0)),U,7) Q:PTR=""
"RTN","SCMCHLB2",108,0)
 .. Q:PTR'=VARPTR
"RTN","SCMCHLB2",109,0)
 .. S SCEVIEN=IEN
"RTN","SCMCHLB2",110,0)
 ;
"RTN","SCMCHLB2",111,0)
 S ND=$G(^SCPT(404.48,SCEVIEN,0))
"RTN","SCMCHLB2",112,0)
 S DFN=$P(ND,U,2) ;..Patient (DFN)
"RTN","SCMCHLB2",113,0)
 S TP=$P(ND,U,4) ;...Team Position
"RTN","SCMCHLB2",114,0)
 Q
"RTN","SCMCHLG")
0^9^B7272111
"RTN","SCMCHLG",1,0)
SCMCHLG ;BP/DJB - PCMM HL7 Generate Message ; 3/2/00 12:39pm
"RTN","SCMCHLG",2,0)
 ;;5.3;Scheduling;**177,210**;AUG 13, 1993
"RTN","SCMCHLG",3,0)
 ;
"RTN","SCMCHLG",4,0)
GENERATE() ;Generate a PCMM Primary Care HL7 message
"RTN","SCMCHLG",5,0)
 ;
"RTN","SCMCHLG",6,0)
 ;Input:
"RTN","SCMCHLG",7,0)
 ;Output:
"RTN","SCMCHLG",8,0)
 ;Return: Number of HL7 array nodes built
"RTN","SCMCHLG",9,0)
 ;
"RTN","SCMCHLG",10,0)
 ;Declare variables
"RTN","SCMCHLG",11,0)
 NEW DATA,ERROR,ID,LINES,NUM,SEG
"RTN","SCMCHLG",12,0)
 NEW HLN,HLRESLT,HLSAN,HLX
"RTN","SCMCHLG",13,0)
 ;
"RTN","SCMCHLG",14,0)
 ;Convert XMITARRY array to HL7 format - ^TMP("HLS",$J,x)
"RTN","SCMCHLG",15,0)
 KILL ^TMP("HLS",$J)
"RTN","SCMCHLG",16,0)
 S NUM=0
"RTN","SCMCHLG",17,0)
 F  S NUM=$O(@XMITARRY@(NUM)) Q:'NUM  D  ;
"RTN","SCMCHLG",18,0)
 . S LINES=0 ;Initialize subscript counter
"RTN","SCMCHLG",19,0)
 . S SEG=""
"RTN","SCMCHLG",20,0)
 . F  S SEG=$O(@XMITARRY@(NUM,SEG)) Q:SEG=""  D  ;
"RTN","SCMCHLG",21,0)
 . . S ID=""
"RTN","SCMCHLG",22,0)
 . . F  S ID=$O(@XMITARRY@(NUM,SEG,ID)) Q:ID=""  D  ;
"RTN","SCMCHLG",23,0)
 . . . ;Convert array to HL7 format
"RTN","SCMCHLG",24,0)
 . . . S DATA=$G(@XMITARRY@(NUM,SEG,ID))
"RTN","SCMCHLG",25,0)
 . . . Q:DATA']""
"RTN","SCMCHLG",26,0)
 . . . S LINES=LINES+1
"RTN","SCMCHLG",27,0)
 . . . S ^TMP("HLS",$J,LINES)=DATA
"RTN","SCMCHLG",28,0)
 . . . ;Convert continuation node
"RTN","SCMCHLG",29,0)
 . . . I $D(@XMITARRY@(NUM,SEG,ID,1)) D  ;
"RTN","SCMCHLG",30,0)
 . . . . S DATA=$G(@XMITARRY@(NUM,SEG,ID,1))
"RTN","SCMCHLG",31,0)
 . . . . I DATA]"" S ^TMP("HLS",$J,LINES,1)=DATA
"RTN","SCMCHLG",32,0)
 . ;
"RTN","SCMCHLG",33,0)
 . ;Generate message.
"RTN","SCMCHLG",34,0)
 . ;  This call returns HLRESLT with 1-3 pieces as follows:
"RTN","SCMCHLG",35,0)
 . ;     MessageID^ErrorCode^ErrorDescription
"RTN","SCMCHLG",36,0)
 . ;  If no error occurs, only first piece is returned equal to unique
"RTN","SCMCHLG",37,0)
 . ;  ID for message. Otherwise, 3 pieces are returned with 1st piece
"RTN","SCMCHLG",38,0)
 . ;  equal to msg ID if one was assigned, otherwise 0.
"RTN","SCMCHLG",39,0)
 . ;
"RTN","SCMCHLG",40,0)
 . S HLP("PRIORITY")="I" ;........Immediate priority
"RTN","SCMCHLG",41,0)
 . D GENERATE^HLMA(HLEID,"GM",1,.HLRESLT,,.HLP)
"RTN","SCMCHLG",42,0)
 . ;
"RTN","SCMCHLG",43,0)
 . ;djb/bp Patch 210. Moved re-initialize code up so it occurs before
"RTN","SCMCHLG",44,0)
 . ;call to LOG^SCMCHLL.
"RTN","SCMCHLG",45,0)
 . ;Re-initialize HL7 message variables
"RTN","SCMCHLG",46,0)
 . KILL HL,HLP
"RTN","SCMCHLG",47,0)
 . S HLEID=$$HLEID^SCMCHL()
"RTN","SCMCHLG",48,0)
 . D INIT^HLFNC2(HLEID,.HL)
"RTN","SCMCHLG",49,0)
 . ;
"RTN","SCMCHLG",50,0)
 . ;If message not generated, log reason & reset LINES to zero.
"RTN","SCMCHLG",51,0)
 . I $P(HLRESLT,"^",2)'="" D  ;
"RTN","SCMCHLG",52,0)
 . . S @XMITERR@(VARPTR)=$P(HLRESLT,"^",3)
"RTN","SCMCHLG",53,0)
 . E  D  ;
"RTN","SCMCHLG",54,0)
 . . S MSGCNT=$G(MSGCNT)+1 ;..Increment message count
"RTN","SCMCHLG",55,0)
 . . ;djb/bp Patch 210 Following line added to log transmission.
"RTN","SCMCHLG",56,0)
 . . I $P(HLRESLT,"^",1) D LOG^SCMCHLL
"RTN","SCMCHLG",57,0)
 . ;
"RTN","SCMCHLG",58,0)
 . ;Re-initialize HL7 message array
"RTN","SCMCHLG",59,0)
 . KILL ^TMP("HLS",$J)
"RTN","SCMCHLG",60,0)
 ;
"RTN","SCMCHLG",61,0)
 ;Done
"RTN","SCMCHLG",62,0)
 Q +$G(MSGCNT)
"RTN","SCMCHLL")
0^23^B8259205
"RTN","SCMCHLL",1,0)
SCMCHLL ;BP/DJB - PCMM HL7 Log Transmission ; 3/2/00 12:59pm
"RTN","SCMCHLL",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLL",3,0)
 ;
"RTN","SCMCHLL",4,0)
LOG ;Record HL7 messages in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLL",5,0)
 ;Parse the HL7 array and build an array in ^TMP("PCMM","LOG",$J) and
"RTN","SCMCHLL",6,0)
 ;use to record transmissions.
"RTN","SCMCHLL",7,0)
 ;
"RTN","SCMCHLL",8,0)
 NEW FS,MSGID,TDATE
"RTN","SCMCHLL",9,0)
 ;
"RTN","SCMCHLL",10,0)
 ;Initialize variables
"RTN","SCMCHLL",11,0)
 KILL ^TMP("PCMM","LOG",$J)
"RTN","SCMCHLL",12,0)
 S FS=HL("FS") ;........................Field separator
"RTN","SCMCHLL",13,0)
 S MSGID=$P(HLRESLT,"^",1) Q:'MSGID  ;..Message ID
"RTN","SCMCHLL",14,0)
 S TDATE=$$NOW^XLFDT ;..................Transmission date
"RTN","SCMCHLL",15,0)
 S ^TMP("PCMM","LOG",$J,"MSGID")=MSGID
"RTN","SCMCHLL",16,0)
 S ^TMP("PCMM","LOG",$J,"DT")=TDATE
"RTN","SCMCHLL",17,0)
 ;
"RTN","SCMCHLL",18,0)
 D GETDATA ;..Get data from HL7 message array
"RTN","SCMCHLL",19,0)
 D ADD ;......Create entry in Transmission Log and stuff data
"RTN","SCMCHLL",20,0)
 ;
"RTN","SCMCHLL",21,0)
 KILL ^TMP("PCMM","LOG",$J)
"RTN","SCMCHLL",22,0)
 Q
"RTN","SCMCHLL",23,0)
 ;
"RTN","SCMCHLL",24,0)
GETDATA ;Go thru HL7 array and build array of data in ^TMP("PCMM","LOG",$J).
"RTN","SCMCHLL",25,0)
 NEW CNT,DATA,DFN,SEG,SEQ,ZPCID
"RTN","SCMCHLL",26,0)
 S CNT=""
"RTN","SCMCHLL",27,0)
 F  S CNT=$O(^TMP("HLS",$J,CNT)) Q:'CNT  D  ;
"RTN","SCMCHLL",28,0)
 . S DATA=$G(^(CNT)) Q:DATA=""
"RTN","SCMCHLL",29,0)
 . S SEG=$P(DATA,FS,1)
"RTN","SCMCHLL",30,0)
 . ;
"RTN","SCMCHLL",31,0)
 . ;PID segment - Get patient DFN
"RTN","SCMCHLL",32,0)
 . I SEG="PID" D  Q
"RTN","SCMCHLL",33,0)
 . . S DFN=+$P(DATA,U,4)
"RTN","SCMCHLL",34,0)
 . . S ^TMP("PCMM","LOG",$J,"DFN")=DFN
"RTN","SCMCHLL",35,0)
 . ;
"RTN","SCMCHLL",36,0)
 . ;ZPC segment - Get sequence # and ZPC ID.
"RTN","SCMCHLL",37,0)
 . I SEG="ZPC" D  Q
"RTN","SCMCHLL",38,0)
 . . S SEQ=$P(DATA,U,8)
"RTN","SCMCHLL",39,0)
 . . S ZPCID=$P(DATA,U,2)
"RTN","SCMCHLL",40,0)
 . . S ^TMP("PCMM","LOG",$J,"ZPC",SEQ)=ZPCID
"RTN","SCMCHLL",41,0)
 Q
"RTN","SCMCHLL",42,0)
 ;
"RTN","SCMCHLL",43,0)
ADD ;Process data array built in GETDATA
"RTN","SCMCHLL",44,0)
 NEW TRANI
"RTN","SCMCHLL",45,0)
 S TRANI=$$CREATE(^TMP("PCMM","LOG",$J,"MSGID")) ;..Create new entry
"RTN","SCMCHLL",46,0)
 Q:+TRANI<0
"RTN","SCMCHLL",47,0)
 D STORE(TRANI) ;..Store transmission info
"RTN","SCMCHLL",48,0)
 Q
"RTN","SCMCHLL",49,0)
 ;
"RTN","SCMCHLL",50,0)
CREATE(MSGID) ;Create new entry
"RTN","SCMCHLL",51,0)
 ; Input: Message Control ID
"RTN","SCMCHLL",52,0)
 ;Output: Pointer to entry in PCMM HL7 TRANSMISSION LOG (#404.471)
"RTN","SCMCHLL",53,0)
 ;        -1^Error - Unable to create entry
"RTN","SCMCHLL",54,0)
 ;
"RTN","SCMCHLL",55,0)
 NEW SCERR,SCFDA,SCIEN
"RTN","SCMCHLL",56,0)
 S SCFDA(404.471,"+1,",.01)=MSGID
"RTN","SCMCHLL",57,0)
 D UPDATE^DIE("E","SCFDA","SCIEN","SCERR")
"RTN","SCMCHLL",58,0)
 I $D(SCERR) Q "-1^Unable to create entry in file #404.471"
"RTN","SCMCHLL",59,0)
 Q SCIEN(1)
"RTN","SCMCHLL",60,0)
 ;
"RTN","SCMCHLL",61,0)
STORE(TRANI) ;Store data
"RTN","SCMCHLL",62,0)
 ;
"RTN","SCMCHLL",63,0)
 ; Input: TRANI - Pointer PCMM HL7 TRANSMISSION LOG file (#404.471)
"RTN","SCMCHLL",64,0)
 ;Output: None
"RTN","SCMCHLL",65,0)
 ;
"RTN","SCMCHLL",66,0)
 NEW CNT,SCERR,SCIEN,SCIENS,SCIENS1,SCFDA,SEQ,ZPCID
"RTN","SCMCHLL",67,0)
 ;
"RTN","SCMCHLL",68,0)
 ;Check input
"RTN","SCMCHLL",69,0)
 Q:'+$G(TRANI)
"RTN","SCMCHLL",70,0)
 Q:'$D(^SCPT(404.471,TRANI))
"RTN","SCMCHLL",71,0)
 ;
"RTN","SCMCHLL",72,0)
 S SCIENS=TRANI_","
"RTN","SCMCHLL",73,0)
 S SCFDA(404.471,SCIENS,.02)=$G(^TMP("PCMM","LOG",$J,"DFN")) ;Patient
"RTN","SCMCHLL",74,0)
 S SCFDA(404.471,SCIENS,.03)=$G(^TMP("PCMM","LOG",$J,"DT")) ;.Date
"RTN","SCMCHLL",75,0)
 S SCFDA(404.471,SCIENS,.04)="T" ;........................Status
"RTN","SCMCHLL",76,0)
 D FILE^DIE("I","SCFDA","SCERR")
"RTN","SCMCHLL",77,0)
 KILL SCFDA,SCERR
"RTN","SCMCHLL",78,0)
 ;
"RTN","SCMCHLL",79,0)
 ;Fill in ZPC multiple
"RTN","SCMCHLL",80,0)
 S (CNT,SEQ)=0
"RTN","SCMCHLL",81,0)
 F  S SEQ=$O(^TMP("PCMM","LOG",$J,"ZPC",SEQ))  Q:'SEQ  D  ;
"RTN","SCMCHLL",82,0)
 . S ZPCID=$$CONVERT^SCMCHLRI($G(^(SEQ)))
"RTN","SCMCHLL",83,0)
 . S CNT=CNT+1
"RTN","SCMCHLL",84,0)
 . S SCIENS1="+"_CNT_","_SCIENS
"RTN","SCMCHLL",85,0)
 . S SCFDA(404.47141,SCIENS1,.01)=SEQ
"RTN","SCMCHLL",86,0)
 . S SCFDA(404.47141,SCIENS1,.02)=ZPCID
"RTN","SCMCHLL",87,0)
 . D UPDATE^DIE("","SCFDA","SCIEN","SCERR")
"RTN","SCMCHLL",88,0)
 . ;I $D(SCERR) ZW SCERR
"RTN","SCMCHLL",89,0)
 Q
"RTN","SCMCHLM")
0^25^B19344144
"RTN","SCMCHLM",1,0)
SCMCHLM ;BP/DJB - PCMM HL7 Mail Msgs ; 6/28/99 10:16am
"RTN","SCMCHLM",2,0)
 ;;5.3;Scheduling;**177,210**;AUG 13, 1993
"RTN","SCMCHLM",3,0)
 ;
"RTN","SCMCHLM",4,0)
 ;Reference routine: SCDXMSG2
"RTN","SCMCHLM",5,0)
CMPLBULL(SENT,ERRCNT,VALER) ;Send completion bulletin
"RTN","SCMCHLM",6,0)
 ;
"RTN","SCMCHLM",7,0)
 ;Input  : SENT   - Number of messages sent to NPCD. Default=0.
"RTN","SCMCHLM",8,0)
 ;         ERRCNT - Number of errored messages.
"RTN","SCMCHLM",9,0)
 ;         VALER  - Array containing error messages.
"RTN","SCMCHLM",10,0)
 ;Output : None
"RTN","SCMCHLM",11,0)
 ;
"RTN","SCMCHLM",12,0)
 ;Check input
"RTN","SCMCHLM",13,0)
 S SENT=+$G(SENT)
"RTN","SCMCHLM",14,0)
 S ERRCNT=$G(ERRCNT)
"RTN","SCMCHLM",15,0)
 S VALER=$G(VALER)
"RTN","SCMCHLM",16,0)
 ;
"RTN","SCMCHLM",17,0)
 ;Declare variables
"RTN","SCMCHLM",18,0)
 NEW MSGTXT,XMB,XMTEXT,XMY,XMDUZ,XMDT,XMZ,XMITPTR,LINE
"RTN","SCMCHLM",19,0)
 NEW ENCPTR,DELPTR,ENCDATE,ENCLOC,NAME,TMP,ENCZERO,SSN,PATZERO
"RTN","SCMCHLM",20,0)
 ;
"RTN","SCMCHLM",21,0)
 S MSGTXT="^TMP(""SCMC-XMIT-BLD"","_$J_",""BULLETIN"")"
"RTN","SCMCHLM",22,0)
 KILL @MSGTXT
"RTN","SCMCHLM",23,0)
 ;
"RTN","SCMCHLM",24,0)
 ;Put number of messages transmitted into message text
"RTN","SCMCHLM",25,0)
 S @MSGTXT@(1)="Transmission of PCMM Primary Care data to the NPCD has completed."
"RTN","SCMCHLM",26,0)
 S @MSGTXT@(2)=""
"RTN","SCMCHLM",27,0)
 S @MSGTXT@(3)="A total of "_SENT_" messages were sent."
"RTN","SCMCHLM",28,0)
 ;Put number of nontransmitted messages into message text
"RTN","SCMCHLM",29,0)
 S @MSGTXT@(4)="A total of "_ERRCNT_" messages were not sent."
"RTN","SCMCHLM",30,0)
 S @MSGTXT@(5)=""
"RTN","SCMCHLM",31,0)
 S @MSGTXT@(6)="Please review the IEMM Error listing for further detail."
"RTN","SCMCHLM",32,0)
 ;
"RTN","SCMCHLM",33,0)
 ;Set bulletin subject
"RTN","SCMCHLM",34,0)
 S XMB(1)="Transmission of data to NPCDB completed"
"RTN","SCMCHLM",35,0)
 ;Deliver bulletin
"RTN","SCMCHLM",36,0)
 S XMB="PCMM PRIMARY CARE DATA TO NPCDB SUMMARY"
"RTN","SCMCHLM",37,0)
 S XMTEXT=$P(MSGTXT,")",1)_","
"RTN","SCMCHLM",38,0)
 D ^XMB
"RTN","SCMCHLM",39,0)
 ;Done - clean up and quit
"RTN","SCMCHLM",40,0)
 KILL @MSGTXT
"RTN","SCMCHLM",41,0)
 Q
"RTN","SCMCHLM",42,0)
 ;
"RTN","SCMCHLM",43,0)
ERRBULL(REASON) ;Send error bulletin
"RTN","SCMCHLM",44,0)
 ;
"RTN","SCMCHLM",45,0)
 ;Input  : REASON - Why transmission of data could not be completed
"RTN","SCMCHLM",46,0)
 ;Output : None
"RTN","SCMCHLM",47,0)
 ;
"RTN","SCMCHLM",48,0)
 ;Check input
"RTN","SCMCHLM",49,0)
 S REASON=$G(REASON)
"RTN","SCMCHLM",50,0)
 ;
"RTN","SCMCHLM",51,0)
 ;Declare variables
"RTN","SCMCHLM",52,0)
 NEW MSGTXT,XMB,XMTEXT,XMY,XMDUZ,XMDT,XMZ
"RTN","SCMCHLM",53,0)
 ;
"RTN","SCMCHLM",54,0)
 ;Set message text
"RTN","SCMCHLM",55,0)
 S MSGTXT(1)="Transmission of PCMM Primary Care data to the NPCD"
"RTN","SCMCHLM",56,0)
 S MSGTXT(2)=" "
"RTN","SCMCHLM",57,0)
 S MSGTXT(3)="could not be completed for the following reason:"
"RTN","SCMCHLM",58,0)
 S MSGTXT(4)=" "
"RTN","SCMCHLM",59,0)
 S MSGTXT(5)="  "_REASON
"RTN","SCMCHLM",60,0)
 ;
"RTN","SCMCHLM",61,0)
 ;Set bulletin subject
"RTN","SCMCHLM",62,0)
 S XMB(1)="** TRANSMISSION OF DATA TO NPCDB NOT COMPLETED **"
"RTN","SCMCHLM",63,0)
 ;Deliver bulletin
"RTN","SCMCHLM",64,0)
 S XMB="PCMM PRIMARY CARE DATA TO NPCDB SUMMARY"
"RTN","SCMCHLM",65,0)
 S XMTEXT="MSGTXT("
"RTN","SCMCHLM",66,0)
 D ^XMB
"RTN","SCMCHLM",67,0)
 ;
"RTN","SCMCHLM",68,0)
 ;Done
"RTN","SCMCHLM",69,0)
 Q
"RTN","SCMCHLM",70,0)
 ;
"RTN","SCMCHLM",71,0)
NOTIFY ; Description: This is used to send a message to local mail group.
"RTN","SCMCHLM",72,0)
 ; The notification message is used to alert users at the local site
"RTN","SCMCHLM",73,0)
 ; that new PCMM HL7 Transmission errors were received from the AAC.
"RTN","SCMCHLM",74,0)
 ;
"RTN","SCMCHLM",75,0)
 ;Reference routine: SCMCHLRR
"RTN","SCMCHLM",76,0)
 ;
"RTN","SCMCHLM",77,0)
 ;  Input: None
"RTN","SCMCHLM",78,0)
 ; Output: None
"RTN","SCMCHLM",79,0)
 ;
"RTN","SCMCHLM",80,0)
 ;Init variables
"RTN","SCMCHLM",81,0)
 N ACK,SCBEG,SCCNT,SCEND,SCTLIEN,SCSTAT
"RTN","SCMCHLM",82,0)
 S (SCTLIEN,SCBEG,SCEND,SCCNT)=0
"RTN","SCMCHLM",83,0)
 ;
"RTN","SCMCHLM",84,0)
 ;Get data from PCMM HL7 Trans Log file for records that have
"RTN","SCMCHLM",85,0)
 ;have a status of 'rejected' and 'marked for re-transmit'
"RTN","SCMCHLM",86,0)
 F SCSTAT="M","RJ" D
"RTN","SCMCHLM",87,0)
 .F  S SCTLIEN=$O(^SCPT(404.471,"ASTAT",SCSTAT,SCTLIEN)) Q:'SCTLIEN  D
"RTN","SCMCHLM",88,0)
 ..;
"RTN","SCMCHLM",89,0)
 ..;if Included In Reject Bulletin? field is not 'YES'
"RTN","SCMCHLM",90,0)
 ..I $$INCLUDE^SCMCHLA(SCTLIEN)'="Y" D
"RTN","SCMCHLM",91,0)
 ...;
"RTN","SCMCHLM",92,0)
 ...;count rejects received
"RTN","SCMCHLM",93,0)
 ...S SCCNT=SCCNT+1
"RTN","SCMCHLM",94,0)
 ...;
"RTN","SCMCHLM",95,0)
 ...;get date/time of 'earliest' and 'latest' reject msg
"RTN","SCMCHLM",96,0)
 ...S ACK=$$ACK^SCMCHLA(SCTLIEN)
"RTN","SCMCHLM",97,0)
 ...I 'SCBEG S SCBEG=ACK
"RTN","SCMCHLM",98,0)
 ...I ACK<SCBEG S SCBEG=ACK
"RTN","SCMCHLM",99,0)
 ...I 'SCEND S SCEND=ACK
"RTN","SCMCHLM",100,0)
 ...I ACK>SCEND S SCEND=ACK
"RTN","SCMCHLM",101,0)
 ...;
"RTN","SCMCHLM",102,0)
 ...;set Included In Reject Bulletin? field of record to 'YES'
"RTN","SCMCHLM",103,0)
 ...I $$UPDINCL^SCMCHLA(SCTLIEN,"Y")
"RTN","SCMCHLM",104,0)
 ;
"RTN","SCMCHLM",105,0)
 ;If reject msgs, then send notification message
"RTN","SCMCHLM",106,0)
 I SCCNT D SEND(SCBEG,SCEND,SCCNT)
"RTN","SCMCHLM",107,0)
 Q
"RTN","SCMCHLM",108,0)
 ;
"RTN","SCMCHLM",109,0)
SEND(SCBEG,SCEND,SCCNT) ;
"RTN","SCMCHLM",110,0)
 ; Description: Used to send PCMM Transmission Errors Received
"RTN","SCMCHLM",111,0)
 ; notification message.
"RTN","SCMCHLM",112,0)
 ;
"RTN","SCMCHLM",113,0)
 ;  Input:
"RTN","SCMCHLM",114,0)
 ;   SCBEG - internal FM date/time earliest error received
"RTN","SCMCHLM",115,0)
 ;   SCEND - internal FM date/time latest error received
"RTN","SCMCHLM",116,0)
 ;   SCCNT - count of erros received
"RTN","SCMCHLM",117,0)
 ;
"RTN","SCMCHLM",118,0)
 ; Output: None
"RTN","SCMCHLM",119,0)
 ;
"RTN","SCMCHLM",120,0)
 N SCRANGE,TEXT,XMDUN,XMDUZ,XMTEXT,XMROU,XMSTRIP,XMSUB,XMY,XMZ
"RTN","SCMCHLM",121,0)
 ;
"RTN","SCMCHLM",122,0)
 ;Init subj/sender
"RTN","SCMCHLM",123,0)
 S XMSUB="PCMM Transmission Errors Received"
"RTN","SCMCHLM",124,0)
 S (XMDUN,XMDUZ)="PCMM Module"
"RTN","SCMCHLM",125,0)
 ;
"RTN","SCMCHLM",126,0)
 ;Recipient (mail group)
"RTN","SCMCHLM",127,0)
 S XMY("G.PCMM TRANSMISSION ERRORS")=""
"RTN","SCMCHLM",128,0)
 ;
"RTN","SCMCHLM",129,0)
 ;Message body
"RTN","SCMCHLM",130,0)
 S XMTEXT="TEXT("
"RTN","SCMCHLM",131,0)
 S TEXT(1)="PCMM reject transmissions have been received from the Austin"
"RTN","SCMCHLM",132,0)
 S TEXT(2)="Automation Center (AAC)."
"RTN","SCMCHLM",133,0)
 S TEXT(3)=""
"RTN","SCMCHLM",134,0)
 S SCRANGE=" Reject Transmissions Received: "_$$FMTE^XLFDT($G(SCBEG),"2P")_" thru "_$$FMTE^XLFDT($G(SCEND),"2P")
"RTN","SCMCHLM",135,0)
 S TEXT(4)=SCRANGE
"RTN","SCMCHLM",136,0)
 S TEXT(5)="  Total Transmissions Rejected: "_$G(SCCNT)
"RTN","SCMCHLM",137,0)
 S TEXT(6)=""
"RTN","SCMCHLM",138,0)
 S TEXT(7)="Please use the PCMM Transmission Error Processing option for a"
"RTN","SCMCHLM",139,0)
 S TEXT(8)="list of the errors associated with these rejected transmissions."
"RTN","SCMCHLM",140,0)
 ;
"RTN","SCMCHLM",141,0)
 ;Mailman deliverey
"RTN","SCMCHLM",142,0)
 D ^XMD
"RTN","SCMCHLM",143,0)
 Q
"RTN","SCMCHLR1")
0^24^B6518401
"RTN","SCMCHLR1",1,0)
SCMCHLR1 ;ALB/KCL - PCMM HL7 Reject Processing - List Manager Screen ; 10-JAN-2000
"RTN","SCMCHLR1",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLR1",3,0)
 ;
"RTN","SCMCHLR1",4,0)
EN ; Description: Main entry point for SCMC PCMM TRANSMISSION ERRORS. Used
"RTN","SCMCHLR1",5,0)
 ; to invoke LM and load list template.
"RTN","SCMCHLR1",6,0)
 ;
"RTN","SCMCHLR1",7,0)
 ;  Input: None
"RTN","SCMCHLR1",8,0)
 ; Output: None
"RTN","SCMCHLR1",9,0)
 ;
"RTN","SCMCHLR1",10,0)
 ;Invoke list template
"RTN","SCMCHLR1",11,0)
 D EN^VALM("SCMC PCMM TRANSMISSION ERRORS")
"RTN","SCMCHLR1",12,0)
 Q
"RTN","SCMCHLR1",13,0)
 ;
"RTN","SCMCHLR1",14,0)
 ;
"RTN","SCMCHLR1",15,0)
HDR ; Description: Header code to display text in header area.
"RTN","SCMCHLR1",16,0)
 ;
"RTN","SCMCHLR1",17,0)
 ;Sort by
"RTN","SCMCHLR1",18,0)
 S VALMHDR(1)="Sort By: "_$S(SCSORTBY="N":"Patient Name",SCSORTBY="D":"Date Error Received",SCSORTBY="P":"Provider",1:"Unknown")
"RTN","SCMCHLR1",19,0)
 ;
"RTN","SCMCHLR1",20,0)
 ;Date range
"RTN","SCMCHLR1",21,0)
 I $G(SCBEG),($G(SCEND)) D
"RTN","SCMCHLR1",22,0)
 .S VALMHDR(1)=$$SETSTR^VALM1("Date Range: "_$$FDATE^VALM1(SCBEG)_" to "_$$FDATE^VALM1(SCEND),VALMHDR(1),46,80)
"RTN","SCMCHLR1",23,0)
 E  D
"RTN","SCMCHLR1",24,0)
 .S VALMHDR(1)=$$SETSTR^VALM1("Date Range: "_$$DRMSG,VALMHDR(1),46,80)
"RTN","SCMCHLR1",25,0)
 ;
"RTN","SCMCHLR1",26,0)
 ;Error processing status
"RTN","SCMCHLR1",27,0)
 S VALMHDR(2)="Error Processing Status: "_$S(SCEPS=1:"New",SCEPS=2:"Checked",SCEPS=3:"New/Checked",1:"Unknown")
"RTN","SCMCHLR1",28,0)
 ;
"RTN","SCMCHLR1",29,0)
 ;Indicates marked for re-transmit
"RTN","SCMCHLR1",30,0)
 S VALMHDR(2)=$$SETSTR^VALM1($$MRKMSG,VALMHDR(2),46,80)
"RTN","SCMCHLR1",31,0)
 ;
"RTN","SCMCHLR1",32,0)
 Q
"RTN","SCMCHLR1",33,0)
 ;
"RTN","SCMCHLR1",34,0)
 ;
"RTN","SCMCHLR1",35,0)
INIT ; Description: Initilize variables and list array for building list.
"RTN","SCMCHLR1",36,0)
 ;
"RTN","SCMCHLR1",37,0)
 K SCBEG,SCEND,SCEPS,SCSORTBY
"RTN","SCMCHLR1",38,0)
 K VALMBEG,VALMEND,VALMSG
"RTN","SCMCHLR1",39,0)
 ;
"RTN","SCMCHLR1",40,0)
 ;Display custom message in LM display window
"RTN","SCMCHLR1",41,0)
 ;S VALMSG=$$MRKMSG
"RTN","SCMCHLR1",42,0)
 ;
"RTN","SCMCHLR1",43,0)
 ;Set sort by = 'Patient Name'
"RTN","SCMCHLR1",44,0)
 S SCSORTBY="N"
"RTN","SCMCHLR1",45,0)
 ;
"RTN","SCMCHLR1",46,0)
 ;Set error processing status = both 'New/Checked'
"RTN","SCMCHLR1",47,0)
 S SCEPS=3
"RTN","SCMCHLR1",48,0)
 ;
"RTN","SCMCHLR1",49,0)
 ;Init date range, list all errors
"RTN","SCMCHLR1",50,0)
 S SCBEG=0
"RTN","SCMCHLR1",51,0)
 S SCEND=DT
"RTN","SCMCHLR1",52,0)
 ;
"RTN","SCMCHLR1",53,0)
 ;Build PCMM transmission errors screen
"RTN","SCMCHLR1",54,0)
 D BUILD
"RTN","SCMCHLR1",55,0)
 Q
"RTN","SCMCHLR1",56,0)
 ;
"RTN","SCMCHLR1",57,0)
 ;
"RTN","SCMCHLR1",58,0)
BUILD ; Description: Used to build PCMM error transmission screen.
"RTN","SCMCHLR1",59,0)
 ;
"RTN","SCMCHLR1",60,0)
 ;Kill the array related data before building the list
"RTN","SCMCHLR1",61,0)
 D CLEAN^VALM10
"RTN","SCMCHLR1",62,0)
 ;
"RTN","SCMCHLR1",63,0)
 K SCARY,VALMHDR
"RTN","SCMCHLR1",64,0)
 S SCARY="SCERR" ; set global array subscript
"RTN","SCMCHLR1",65,0)
 K ^TMP(SCARY_"SRT",$J),^TMP(SCARY_"IDX",$J)
"RTN","SCMCHLR1",66,0)
 S VALMBG=1 ;  init list start line
"RTN","SCMCHLR1",67,0)
 S VALMCNT=0 ; init # of lines in list
"RTN","SCMCHLR1",68,0)
 ;
"RTN","SCMCHLR1",69,0)
 ;Builder header area
"RTN","SCMCHLR1",70,0)
 D HDR
"RTN","SCMCHLR1",71,0)
 ;
"RTN","SCMCHLR1",72,0)
 ;Build list area for transmission log errors
"RTN","SCMCHLR1",73,0)
 D EN^SCMCHLR2(SCARY,SCBEG,SCEND,SCEPS,SCSORTBY,.VALMCNT)
"RTN","SCMCHLR1",74,0)
 Q
"RTN","SCMCHLR1",75,0)
 ;
"RTN","SCMCHLR1",76,0)
 ;
"RTN","SCMCHLR1",77,0)
MRKMSG() ; Description: Returns custom message for list manager header
"RTN","SCMCHLR1",78,0)
 ;
"RTN","SCMCHLR1",79,0)
 Q "* - Marked for re-transmit"
"RTN","SCMCHLR1",80,0)
 ;
"RTN","SCMCHLR1",81,0)
 ;
"RTN","SCMCHLR1",82,0)
DRMSG() ; Description: Returns custom message for date range in list manager header.
"RTN","SCMCHLR1",83,0)
 ;
"RTN","SCMCHLR1",84,0)
 Q "(None) List All Errors"
"RTN","SCMCHLR1",85,0)
 ;
"RTN","SCMCHLR1",86,0)
 ;
"RTN","SCMCHLR1",87,0)
HELP ; Description: This entry point provides custom help code when user
"RTN","SCMCHLR1",88,0)
 ;  enters a '?' at the menu prompt.
"RTN","SCMCHLR1",89,0)
 ;
"RTN","SCMCHLR1",90,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","SCMCHLR1",91,0)
 Q
"RTN","SCMCHLR1",92,0)
 ;
"RTN","SCMCHLR1",93,0)
 ;
"RTN","SCMCHLR1",94,0)
EXIT ; Description: This is used to cleanup variables and do other exit processing.
"RTN","SCMCHLR1",95,0)
 ;
"RTN","SCMCHLR1",96,0)
 D CLEAR^VALM1
"RTN","SCMCHLR1",97,0)
 D CLEAN^VALM10
"RTN","SCMCHLR1",98,0)
 K SCBEG,SCEND,SCEPS,SCSORTBY,VALMSG
"RTN","SCMCHLR1",99,0)
 K ^TMP(SCARY_"SRT",$J),^TMP(SCARY_"IDX",$J)
"RTN","SCMCHLR1",100,0)
 Q
"RTN","SCMCHLR1",101,0)
 ;
"RTN","SCMCHLR1",102,0)
 ;
"RTN","SCMCHLR1",103,0)
EXPND ;Expand code
"RTN","SCMCHLR1",104,0)
 Q
"RTN","SCMCHLR2")
0^11^B20268889
"RTN","SCMCHLR2",1,0)
SCMCHLR2 ;ALB/KCL - PCMM HL7 Reject Processing - Build List Area; 10-JAN-2000
"RTN","SCMCHLR2",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLR2",3,0)
 ;
"RTN","SCMCHLR2",4,0)
EN(SCARY,SCBEG,SCEND,SCEPS,SCSORTBY,SCCNT) ;
"RTN","SCMCHLR2",5,0)
 ; Description: This entry point is used to build list area for
"RTN","SCMCHLR2",6,0)
 ; PCMM Transmission Errors.
"RTN","SCMCHLR2",7,0)
 ;
"RTN","SCMCHLR2",8,0)
 ; The following variables are 'system wide variables' in the
"RTN","SCMCHLR2",9,0)
 ; PCMM Transmission Error Processing List Manager application:
"RTN","SCMCHLR2",10,0)
 ;  Input:
"RTN","SCMCHLR2",11,0)
 ;      SCARY - Global array subscript
"RTN","SCMCHLR2",12,0)
 ;      SCBEG - Begin date for date range
"RTN","SCMCHLR2",13,0)
 ;      SCEND - End date for date range
"RTN","SCMCHLR2",14,0)
 ;      SCEPS - Error processing statuses
"RTN","SCMCHLR2",15,0)
 ;                1 -> New
"RTN","SCMCHLR2",16,0)
 ;                2 -> Checked
"RTN","SCMCHLR2",17,0)
 ;                3 -> Both
"RTN","SCMCHLR2",18,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR2",19,0)
 ;                N -> Patient Name
"RTN","SCMCHLR2",20,0)
 ;                D -> Date/Time Ack Received
"RTN","SCMCHLR2",21,0)
 ;                P -> Provider
"RTN","SCMCHLR2",22,0)
 ;
"RTN","SCMCHLR2",23,0)
 ; Output:
"RTN","SCMCHLR2",24,0)
 ;  SCCNT - Contains number of lines in the list, pass by reference
"RTN","SCMCHLR2",25,0)
 ;
"RTN","SCMCHLR2",26,0)
 ;Display FM wait msg
"RTN","SCMCHLR2",27,0)
 D WAIT^DICD
"RTN","SCMCHLR2",28,0)
 ;
"RTN","SCMCHLR2",29,0)
 ;Get PCMM HL7 Trans Log errors
"RTN","SCMCHLR2",30,0)
 D GET(SCARY,SCBEG,SCEND,SCEPS,SCSORTBY)
"RTN","SCMCHLR2",31,0)
 ;
"RTN","SCMCHLR2",32,0)
 ;Build list area for PCMM HL7 Trans Log errors
"RTN","SCMCHLR2",33,0)
 D BLDLIST^SCMCHLR3(SCSORTBY,SCEPS,.SCCNT)
"RTN","SCMCHLR2",34,0)
 ;
"RTN","SCMCHLR2",35,0)
 ;If no PCMM HL7 Trans Log errors, display msg in list area
"RTN","SCMCHLR2",36,0)
 I 'SCCNT D
"RTN","SCMCHLR2",37,0)
 .D SET^SCMCHLR3(SCARY,1,"",1,36,0,,,,.SCCNT)
"RTN","SCMCHLR2",38,0)
 .D SET^SCMCHLR3(SCARY,2,"No 'PCMM Transmission Errors' to display.",4,41,0,,,,.SCCNT)
"RTN","SCMCHLR2",39,0)
 Q
"RTN","SCMCHLR2",40,0)
 ;
"RTN","SCMCHLR2",41,0)
 ;
"RTN","SCMCHLR2",42,0)
GET(SCARY,SCBEG,SCEND,SCEPS,SCSORTBY) ;
"RTN","SCMCHLR2",43,0)
 ; Description: Get PCMM HL7 Transmission Log errors.
"RTN","SCMCHLR2",44,0)
 ;
"RTN","SCMCHLR2",45,0)
 ;  Input:
"RTN","SCMCHLR2",46,0)
 ;      SCARY - Global array subscript
"RTN","SCMCHLR2",47,0)
 ;      SCBEG - Begin date for date range
"RTN","SCMCHLR2",48,0)
 ;      SCEND - End date for date range
"RTN","SCMCHLR2",49,0)
 ;      SCEPS - Error processing status
"RTN","SCMCHLR2",50,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR2",51,0)
 ;
"RTN","SCMCHLR2",52,0)
 ; Output:
"RTN","SCMCHLR2",53,0)
 ;  PCMM transmission log error list sorted by:
"RTN","SCMCHLR2",54,0)
 ;
"RTN","SCMCHLR2",55,0)
 ;   Patient Name: ^TMP("SCERRSRT",$J,<sort by>,<patient name>,<trans log IEN>,<err code ien>)
"RTN","SCMCHLR2",56,0)
 ; OR,
"RTN","SCMCHLR2",57,0)
 ;   Date/Time Ack Rec'd: ^TMP("SCERRSRT",$J,<sort by>,<date/time ack rec'd>,<trans log IEN>,<err code ien>)
"RTN","SCMCHLR2",58,0)
 ; OR,
"RTN","SCMCHLR2",59,0)
 ;   Provider: ^TMP("SCERRSRT",$J,<sort by>,<provider>,<trans log IEN>,<err code ien>)
"RTN","SCMCHLR2",60,0)
 ;
"RTN","SCMCHLR2",61,0)
 N SCDFN,SCDTR,SCERIEN,SCTLIEN,SCSTAT
"RTN","SCMCHLR2",62,0)
 ;
"RTN","SCMCHLR2",63,0)
 ;Loop thru PCMM HL7 Trans Log for selected date range
"RTN","SCMCHLR2",64,0)
 F SCDTR=SCBEG:0 S SCDTR=$O(^SCPT(404.471,"AST",SCDTR)) Q:'SCDTR!($P(SCDTR,".")>SCEND)  D
"RTN","SCMCHLR2",65,0)
 .;loop thru status
"RTN","SCMCHLR2",66,0)
 .S SCSTAT=0
"RTN","SCMCHLR2",67,0)
 .F  S SCSTAT=$O(^SCPT(404.471,"AST",SCDTR,SCSTAT)) Q:SCSTAT=""  D
"RTN","SCMCHLR2",68,0)
 ..;loop thru patients
"RTN","SCMCHLR2",69,0)
 ..S SCDFN=0
"RTN","SCMCHLR2",70,0)
 ..F  S SCDFN=$O(^SCPT(404.471,"AST",SCDTR,SCSTAT,SCDFN)) Q:'SCDFN  D
"RTN","SCMCHLR2",71,0)
 ...;loop through (#404.471) ien's
"RTN","SCMCHLR2",72,0)
 ...S SCTLIEN=0
"RTN","SCMCHLR2",73,0)
 ...F  S SCTLIEN=$O(^SCPT(404.471,"AST",SCDTR,SCSTAT,SCDFN,SCTLIEN)) Q:'SCTLIEN  D
"RTN","SCMCHLR2",74,0)
 ....;loop thru ien's of error code mult. and setup sort array
"RTN","SCMCHLR2",75,0)
 ....S SCERIEN=0
"RTN","SCMCHLR2",76,0)
 ....F  S SCERIEN=$O(^SCPT(404.471,SCTLIEN,"ERR",SCERIEN)) Q:'SCERIEN  D SORT(SCSORTBY,SCDTR,SCDFN,SCEPS,SCTLIEN,SCERIEN)
"RTN","SCMCHLR2",77,0)
 ;
"RTN","SCMCHLR2",78,0)
 Q
"RTN","SCMCHLR2",79,0)
 ;
"RTN","SCMCHLR2",80,0)
 ;
"RTN","SCMCHLR2",81,0)
SORT(SCSORTBY,SCDTR,SCDFN,SCEPS,SCTLIEN,SCERIEN) ;
"RTN","SCMCHLR2",82,0)
 ; Description: Used to set up sort array based on 'Sort Criteria' and
"RTN","SCMCHLR2",83,0)
 ; 'Error Processing Status' for PCMM Transmission Errors list display.
"RTN","SCMCHLR2",84,0)
 ;
"RTN","SCMCHLR2",85,0)
 ;  Input:
"RTN","SCMCHLR2",86,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR2",87,0)
 ;      SCDTR - PCMM transmission log date/time ack received
"RTN","SCMCHLR2",88,0)
 ;      SCDFN - Patient IEN
"RTN","SCMCHLR2",89,0)
 ;      SCEPS - Error processing status
"RTN","SCMCHLR2",90,0)
 ;    SCTLIEN - PCMM transmission log IEN
"RTN","SCMCHLR2",91,0)
 ;    SCERIEN - IEN of record in Error Code (#404.47142) multiple
"RTN","SCMCHLR2",92,0)
 ;
"RTN","SCMCHLR2",93,0)
 ; Output: None
"RTN","SCMCHLR2",94,0)
 ;
"RTN","SCMCHLR2",95,0)
 N SCTLOG
"RTN","SCMCHLR2",96,0)
 ;
"RTN","SCMCHLR2",97,0)
 ;If sort by criteria is 'Date/Time Ack Received'
"RTN","SCMCHLR2",98,0)
 I SCSORTBY="D" D
"RTN","SCMCHLR2",99,0)
 .;get data from PCMM HL7 Trans Log
"RTN","SCMCHLR2",100,0)
 .I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR2",101,0)
 ..;if Error Proc Status matches selected Error Proc Status
"RTN","SCMCHLR2",102,0)
 ..I (SCEPS=$G(SCTLOG("ERR","EPS"))!(SCEPS>2)) D
"RTN","SCMCHLR2",103,0)
 ...;setup ^tmp array sorted by date/time ack rec'd
"RTN","SCMCHLR2",104,0)
 ...S ^TMP("SCERRSRT",$J,SCSORTBY,SCDTR,SCTLIEN,SCERIEN)=""
"RTN","SCMCHLR2",105,0)
 ;
"RTN","SCMCHLR2",106,0)
 ;If sort by criteria is 'Provider'
"RTN","SCMCHLR2",107,0)
 I SCSORTBY="P" D
"RTN","SCMCHLR2",108,0)
 .N SCPTR,SCPROV,SCHL
"RTN","SCMCHLR2",109,0)
 .;get data from PCMM HL7 Trans Log
"RTN","SCMCHLR2",110,0)
 .I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR2",111,0)
 ..;if Error Proc Status matches selected Error Proc Status
"RTN","SCMCHLR2",112,0)
 ..I (SCEPS=$G(SCTLOG("ERR","EPS"))!(SCEPS>2)) D
"RTN","SCMCHLR2",113,0)
 ...;get data from PCMM HL7 ID file
"RTN","SCMCHLR2",114,0)
 ...I $$GETHL7ID^SCMCHLA2($G(SCTLOG("ERR","ZPCID")),.SCHL)
"RTN","SCMCHLR2",115,0)
 ...;get provider from POSITION ASSIGNMENT HISTORY file
"RTN","SCMCHLR2",116,0)
 ...S SCPTR=$P($G(SCHL("HL7ID")),"-",2)  ; pointer to PCMM HL7 ID file
"RTN","SCMCHLR2",117,0)
 ...S SCPROV=$P($G(^SCTM(404.52,+SCPTR,0)),"^",3)
"RTN","SCMCHLR2",118,0)
 ...;setup ^tmp array sorted by provider
"RTN","SCMCHLR2",119,0)
 ...S ^TMP("SCERRSRT",$J,SCSORTBY,$S($G(SCPROV)'="":$$EXTERNAL^DILFD(404.52,.03,,SCPROV),1:"ZZZUNKNOWN"),SCTLIEN,SCERIEN)=""
"RTN","SCMCHLR2",120,0)
 ;
"RTN","SCMCHLR2",121,0)
 ;If sort by criteria is 'Patient' (default)
"RTN","SCMCHLR2",122,0)
 I SCSORTBY="N" D
"RTN","SCMCHLR2",123,0)
 .;get data from PCMM HL7 Trans Log
"RTN","SCMCHLR2",124,0)
 .I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR2",125,0)
 ..;if Error Proc Status matches selected Error Proc Status
"RTN","SCMCHLR2",126,0)
 ..I (SCEPS=$G(SCTLOG("ERR","EPS"))!(SCEPS>2)) D
"RTN","SCMCHLR2",127,0)
 ...;setup ^tmp array sorted by patient
"RTN","SCMCHLR2",128,0)
 ...S ^TMP("SCERRSRT",$J,SCSORTBY,$S($P($G(^DPT(+SCDFN,0)),U)'="":$P(^(0),U),1:"UNKNOWN"),SCTLIEN,SCERIEN)=""
"RTN","SCMCHLR2",129,0)
 ;
"RTN","SCMCHLR2",130,0)
 Q
"RTN","SCMCHLR3")
0^12^B29528872
"RTN","SCMCHLR3",1,0)
SCMCHLR3 ;ALB/KCL - PCMM HL7 Reject Processing - Build List Area con't; 10-JAN-2000
"RTN","SCMCHLR3",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLR3",3,0)
 ;
"RTN","SCMCHLR3",4,0)
BLDLIST(SCSORTBY,SCEPS,SCCNT) ; Description: Build list area for for PCMM Transmission errors.
"RTN","SCMCHLR3",5,0)
 ;
"RTN","SCMCHLR3",6,0)
 ;  Input:
"RTN","SCMCHLR3",7,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR3",8,0)
 ;               N -> Patient Name
"RTN","SCMCHLR3",9,0)
 ;               D -> Date/Time Ack Received
"RTN","SCMCHLR3",10,0)
 ;               P -> Provider
"RTN","SCMCHLR3",11,0)
 ;      SCEPS -  Error processing status
"RTN","SCMCHLR3",12,0)
 ;
"RTN","SCMCHLR3",13,0)
 ; Output:
"RTN","SCMCHLR3",14,0)
 ;  SCCNT - Number of lines in the list
"RTN","SCMCHLR3",15,0)
 ;
"RTN","SCMCHLR3",16,0)
 N DFN,SCSUB,SCTEXT,SCTLIEN,SCERIEN,SCTLOG,SCHL
"RTN","SCMCHLR3",17,0)
 N SCPROV,SCTYPE,SCLINE,SCNUM,SCCOL,SCWID
"RTN","SCMCHLR3",18,0)
 ;
"RTN","SCMCHLR3",19,0)
 ;Init line counter and selection number
"RTN","SCMCHLR3",20,0)
 S (SCLINE,SCNUM)=0
"RTN","SCMCHLR3",21,0)
 ;
"RTN","SCMCHLR3",22,0)
 ;Quit if unable to determine col/width for caption flds in List Template
"RTN","SCMCHLR3",23,0)
 Q:'$$CAPFLD(.SCCOL,.SCWID)
"RTN","SCMCHLR3",24,0)
 ;
"RTN","SCMCHLR3",25,0)
 ;Loop thru sort array by pat name, OR date ack rec'd, OR provider
"RTN","SCMCHLR3",26,0)
 S SCSUB=$S(SCSORTBY="N":"",SCSORTBY="P":"",1:0)
"RTN","SCMCHLR3",27,0)
 F  S SCSUB=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB)) Q:SCSUB=""  D
"RTN","SCMCHLR3",28,0)
 .;loop through PCMM HL7 Transmission Log ien(s)
"RTN","SCMCHLR3",29,0)
 .S SCTLIEN=0
"RTN","SCMCHLR3",30,0)
 .F  S SCTLIEN=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB,SCTLIEN)) Q:'SCTLIEN  D
"RTN","SCMCHLR3",31,0)
 ..;loop through Error Code subfile ien(s)
"RTN","SCMCHLR3",32,0)
 ..S SCERIEN=0
"RTN","SCMCHLR3",33,0)
 ..F  S SCERIEN=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB,SCTLIEN,SCERIEN)) Q:'SCERIEN  D
"RTN","SCMCHLR3",34,0)
 ...;
"RTN","SCMCHLR3",35,0)
 ...;write dot to screen as list is being built (every 50 lines) 
"RTN","SCMCHLR3",36,0)
 ...W:'(SCLINE#50) "."
"RTN","SCMCHLR3",37,0)
 ...;
"RTN","SCMCHLR3",38,0)
 ...;get data for PCMM HL7 Trans Log entry
"RTN","SCMCHLR3",39,0)
 ...I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR3",40,0)
 ....;
"RTN","SCMCHLR3",41,0)
 ....;increment selection number
"RTN","SCMCHLR3",42,0)
 ....S SCNUM=SCNUM+1
"RTN","SCMCHLR3",43,0)
 ....;
"RTN","SCMCHLR3",44,0)
 ....;increment line counter
"RTN","SCMCHLR3",45,0)
 ....S SCLINE=SCLINE+1
"RTN","SCMCHLR3",46,0)
 ....;
"RTN","SCMCHLR3",47,0)
 ....;set selection number in display array
"RTN","SCMCHLR3",48,0)
 ....D SET(SCARY,SCLINE,SCNUM,SCCOL("NUM"),SCWID("NUM"),SCNUM,SCTLIEN,SCTLOG("DFN"),SCERIEN,.SCCNT)
"RTN","SCMCHLR3",49,0)
 ....;
"RTN","SCMCHLR3",50,0)
 ....;set retransmit flag in display array
"RTN","SCMCHLR3",51,0)
 ....S SCTEXT=$S($G(SCTLOG("STATUS"))="M":"*",1:" ")
"RTN","SCMCHLR3",52,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("RET"),SCWID("RET"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",53,0)
 ....;set patient name in display array
"RTN","SCMCHLR3",54,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCTLOG("DFN")):$P($G(^DPT(SCTLOG("DFN"),0)),"^",1),1:"UNKNOWN"))
"RTN","SCMCHLR3",55,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("PAT"),SCWID("PAT"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",56,0)
 ....;
"RTN","SCMCHLR3",57,0)
 ....;set patient id in display array
"RTN","SCMCHLR3",58,0)
 ....S DFN=+SCTLOG("DFN") D PID^VADPT
"RTN","SCMCHLR3",59,0)
 ....D SET(SCARY,SCLINE,VA("BID"),SCCOL("PATID"),SCWID("PATID"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",60,0)
 ....;
"RTN","SCMCHLR3",61,0)
 ....;set date ack received in display array
"RTN","SCMCHLR3",62,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCTLOG("ACK DT/TM")):$E($$FDATE^VALM1(SCTLOG("ACK DT/TM")),1,8),1:"UNKNOWN"))
"RTN","SCMCHLR3",63,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("DTR"),SCWID("DTR"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",64,0)
 ....;
"RTN","SCMCHLR3",65,0)
 ....;set provider in display array
"RTN","SCMCHLR3",66,0)
 ....S SCPROV=""
"RTN","SCMCHLR3",67,0)
 ....K SCHL
"RTN","SCMCHLR3",68,0)
 ....;only get provider if ZPC segment error
"RTN","SCMCHLR3",69,0)
 ....I $G(SCTLOG("ERR","SEG"))="ZPC" D
"RTN","SCMCHLR3",70,0)
 .....I $$GETHL7ID^SCMCHLA2($G(SCTLOG("ERR","ZPCID")),.SCHL)
"RTN","SCMCHLR3",71,0)
 .....S SCPTR=$P($G(SCHL("HL7ID")),"-",2)
"RTN","SCMCHLR3",72,0)
 .....S SCPROV=$P($G(^SCTM(404.52,+$G(SCPTR),0)),"^",3)
"RTN","SCMCHLR3",73,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCPROV)'="":$$EXTERNAL^DILFD(404.52,.03,,SCPROV),1:"N/A"))
"RTN","SCMCHLR3",74,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("PROV"),SCWID("PROV"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",75,0)
 ....;
"RTN","SCMCHLR3",76,0)
 ....;set provider type in display array
"RTN","SCMCHLR3",77,0)
 ....S SCTYPE=$P($G(SCHL("HL7ID")),"-",4)
"RTN","SCMCHLR3",78,0)
 ....S SCTEXT=$S(SCTYPE'="":SCTYPE,1:"N/A")
"RTN","SCMCHLR3",79,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("TYPE"),SCWID("TYPE"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",80,0)
 ....;
"RTN","SCMCHLR3",81,0)
 ....;set error processing status in display array
"RTN","SCMCHLR3",82,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCTLOG("ERR","EPS")):$$EXTERNAL^DILFD(404.47142,.06,,SCTLOG("ERR","EPS")),1:"UNKNOWN"))
"RTN","SCMCHLR3",83,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("STA"),SCWID("STA"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",84,0)
 ....;
"RTN","SCMCHLR3",85,0)
 ....;increment line counter
"RTN","SCMCHLR3",86,0)
 ....S SCLINE=SCLINE+1
"RTN","SCMCHLR3",87,0)
 ....;
"RTN","SCMCHLR3",88,0)
 ....;set error code/desc in display array
"RTN","SCMCHLR3",89,0)
 ....I $$GETEC^SCMCHLA2($G(SCTLOG("ERR","CODE")),.SCERR)
"RTN","SCMCHLR3",90,0)
 ....S SCTEXT="Error: "_$S($G(SCERR("CODE"))'="":SCERR("CODE")_" - "_$G(SCERR("SHORT")),1:$$LOWER^VALM1("UNKNOWN"))
"RTN","SCMCHLR3",91,0)
 ....K X S $P(X," ",160)=""
"RTN","SCMCHLR3",92,0)
 ....S SCTEXT=$E(SCTEXT_X,1,150)
"RTN","SCMCHLR3",93,0)
 ....D SET(SCARY,SCLINE,SCTEXT,10,$L(SCTEXT),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",94,0)
 ;
"RTN","SCMCHLR3",95,0)
 Q
"RTN","SCMCHLR3",96,0)
 ;
"RTN","SCMCHLR3",97,0)
 ;
"RTN","SCMCHLR3",98,0)
SET(SCARY,SCLINE,SCTEXT,SCCOL,SCWID,SCNUM,SCTLIEN,SCDFN,SCERIEN,SCCNT) ;
"RTN","SCMCHLR3",99,0)
 ; Description: Set display array.
"RTN","SCMCHLR3",100,0)
 ;
"RTN","SCMCHLR3",101,0)
 ;  Input:
"RTN","SCMCHLR3",102,0)
 ;     SCARY - Global array subscript
"RTN","SCMCHLR3",103,0)
 ;    SCLINE - Line number
"RTN","SCMCHLR3",104,0)
 ;    SCTEXT - Text
"RTN","SCMCHLR3",105,0)
 ;     SCCOL - Column to start at
"RTN","SCMCHLR3",106,0)
 ;     SCWID - Column or text width
"RTN","SCMCHLR3",107,0)
 ;     SCNUM - Selection number
"RTN","SCMCHLR3",108,0)
 ;   SCTLIEN - PCMM HL7 Transmission Log IEN
"RTN","SCMCHLR3",109,0)
 ;   SCERIEN - IEN of record in Error Code (#404.47142) multiple
"RTN","SCMCHLR3",110,0)
 ;     SCDFN   Patient IEN
"RTN","SCMCHLR3",111,0)
 ;
"RTN","SCMCHLR3",112,0)
 ; Output:
"RTN","SCMCHLR3",113,0)
 ;  SCCNT - Number of lines in the list
"RTN","SCMCHLR3",114,0)
 ;
"RTN","SCMCHLR3",115,0)
 N X
"RTN","SCMCHLR3",116,0)
 S:SCLINE>SCCNT SCCNT=SCLINE
"RTN","SCMCHLR3",117,0)
 S X=$S($D(^TMP(SCARY,$J,SCLINE,0)):^(0),1:"")
"RTN","SCMCHLR3",118,0)
 S ^TMP(SCARY,$J,SCLINE,0)=$$SETSTR^VALM1(SCTEXT,X,SCCOL,SCWID)
"RTN","SCMCHLR3",119,0)
 S ^TMP(SCARY,$J,"IDX",SCLINE,SCNUM)=""
"RTN","SCMCHLR3",120,0)
 ;
"RTN","SCMCHLR3",121,0)
 ;Set special index used in retransmitting patient
"RTN","SCMCHLR3",122,0)
 I $G(SCTLIEN),$G(SCERIEN),$G(SCDFN) D
"RTN","SCMCHLR3",123,0)
 .S ^TMP(SCARY_"IDX",$J,SCNUM)=SCLINE_"^"_SCTLIEN_"^"_SCERIEN
"RTN","SCMCHLR3",124,0)
 .S ^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)=SCTLIEN_"^"_SCERIEN
"RTN","SCMCHLR3",125,0)
 Q
"RTN","SCMCHLR3",126,0)
 ;
"RTN","SCMCHLR3",127,0)
 ;
"RTN","SCMCHLR3",128,0)
CAPFLD(SCCOL,SCWID) ; Description: Used to determine column/width of caption fields in the List Template.
"RTN","SCMCHLR3",129,0)
 ;
"RTN","SCMCHLR3",130,0)
 ;  Input:
"RTN","SCMCHLR3",131,0)
 ;   VALMDDF - Array available at run-time of list template. This array
"RTN","SCMCHLR3",132,0)
 ;             is subscripted by caption field name of List Template.
"RTN","SCMCHLR3",133,0)
 ;
"RTN","SCMCHLR3",134,0)
 ; Output:
"RTN","SCMCHLR3",135,0)
 ;  Function value: Returns 1 on success, 0 on failure
"RTN","SCMCHLR3",136,0)
 ;  SCCOL - array subscripted by abbreviation of caption field name containing the column number where the data/caption starts, pass by reference
"RTN","SCMCHLR3",137,0)
 ;  SCWID - array subscripted by abbreviation of caption field name containing the number of charaters the data/caption will use, pass by reference 
"RTN","SCMCHLR3",138,0)
 ;
"RTN","SCMCHLR3",139,0)
 ;Quit if VALMDDF array is not defined
"RTN","SCMCHLR3",140,0)
 Q:'$D(VALMDDF) 0
"RTN","SCMCHLR3",141,0)
 ;
"RTN","SCMCHLR3",142,0)
 N X
"RTN","SCMCHLR3",143,0)
 S X=VALMDDF("NUMBER"),SCCOL("NUM")=$P(X,"^",2),SCWID("NUM")=$P(X,"^",3)
"RTN","SCMCHLR3",144,0)
 S X=VALMDDF("RETRANS"),SCCOL("RET")=$P(X,"^",2),SCWID("RET")=$P(X,"^",3)
"RTN","SCMCHLR3",145,0)
 S X=VALMDDF("PATIENT"),SCCOL("PAT")=$P(X,"^",2),SCWID("PAT")=$P(X,"^",3)
"RTN","SCMCHLR3",146,0)
 S X=VALMDDF("PATID"),SCCOL("PATID")=$P(X,"^",2),SCWID("PATID")=$P(X,"^",3)
"RTN","SCMCHLR3",147,0)
 S X=VALMDDF("DATE"),SCCOL("DTR")=$P(X,"^",2),SCWID("DTR")=$P(X,"^",3)
"RTN","SCMCHLR3",148,0)
 S X=VALMDDF("PROV"),SCCOL("PROV")=$P(X,"^",2),SCWID("PROV")=$P(X,"^",3)
"RTN","SCMCHLR3",149,0)
 S X=VALMDDF("TYPE"),SCCOL("TYPE")=$P(X,"^",2),SCWID("TYPE")=$P(X,"^",3)
"RTN","SCMCHLR3",150,0)
 S X=VALMDDF("STATUS"),SCCOL("STA")=$P(X,"^",2),SCWID("STA")=$P(X,"^",3)
"RTN","SCMCHLR3",151,0)
 Q 1
"RTN","SCMCHLR4")
0^13^B62195531
"RTN","SCMCHLR4",1,0)
SCMCHLR4 ;ALB/KCL - PCMM HL7 Reject Processing - Protocols; 10-JAN-2000
"RTN","SCMCHLR4",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLR4",3,0)
 ;
"RTN","SCMCHLR4",4,0)
 ;This routine contains the PCMM Transmission Error processing protocols.
"RTN","SCMCHLR4",5,0)
 ;See EN^SCMCHLR2 for additional documentation on 'system wide' variables
"RTN","SCMCHLR4",6,0)
 ;used in this routine.
"RTN","SCMCHLR4",7,0)
 ;
"RTN","SCMCHLR4",8,0)
CS ; Description: Entry point for SCMC LE CHANGE STATUS protocol.
"RTN","SCMCHLR4",9,0)
 ;
"RTN","SCMCHLR4",10,0)
 ;  Input:
"RTN","SCMCHLR4",11,0)
 ;   SCEPS - Error Processing Status
"RTN","SCMCHLR4",12,0)
 ;               1 -> New
"RTN","SCMCHLR4",13,0)
 ;               2 -> Checked
"RTN","SCMCHLR4",14,0)
 ;               3 -> Both
"RTN","SCMCHLR4",15,0)
 ;
"RTN","SCMCHLR4",16,0)
 ; Output:
"RTN","SCMCHLR4",17,0)
 ;    SCEPS - Error Processing Status
"RTN","SCMCHLR4",18,0)
 ;                1 -> New
"RTN","SCMCHLR4",19,0)
 ;                2 -> Checked
"RTN","SCMCHLR4",20,0)
 ;                3 -> Both
"RTN","SCMCHLR4",21,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",22,0)
 ;
"RTN","SCMCHLR4",23,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR4",24,0)
 ;
"RTN","SCMCHLR4",25,0)
 ;Set screen to full scrolling region
"RTN","SCMCHLR4",26,0)
 D FULL^VALM1
"RTN","SCMCHLR4",27,0)
 ;
"RTN","SCMCHLR4",28,0)
 ;Ask user to select error processing status
"RTN","SCMCHLR4",29,0)
 S DIR(0)="SMO^1:New;2:Checked;3:Both"
"RTN","SCMCHLR4",30,0)
 S DIR("A")="Select Error Processing Status"
"RTN","SCMCHLR4",31,0)
 D ^DIR
"RTN","SCMCHLR4",32,0)
 ;
"RTN","SCMCHLR4",33,0)
 ;Process user response
"RTN","SCMCHLR4",34,0)
 I Y D
"RTN","SCMCHLR4",35,0)
 .S SCEPS=Y
"RTN","SCMCHLR4",36,0)
 .;rebuild error list for selected error processing status
"RTN","SCMCHLR4",37,0)
 .D BUILD^SCMCHLR1
"RTN","SCMCHLR4",38,0)
 ;
"RTN","SCMCHLR4",39,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",40,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",41,0)
 ;
"RTN","SCMCHLR4",42,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",43,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",44,0)
 Q
"RTN","SCMCHLR4",45,0)
 ;
"RTN","SCMCHLR4",46,0)
 ;
"RTN","SCMCHLR4",47,0)
CD ; Description: Entry point for SCMC LE CHANGE DATE RANGE protocol.
"RTN","SCMCHLR4",48,0)
 ;
"RTN","SCMCHLR4",49,0)
 ;  Input:
"RTN","SCMCHLR4",50,0)
 ;   SCBEG - Begin date for date range
"RTN","SCMCHLR4",51,0)
 ;   SCEND - End date for date range
"RTN","SCMCHLR4",52,0)
 ;
"RTN","SCMCHLR4",53,0)
 ; Output:
"RTN","SCMCHLR4",54,0)
 ;    SCBEG - Begin date for date range
"RTN","SCMCHLR4",55,0)
 ;    SCEND - End date for date range
"RTN","SCMCHLR4",56,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",57,0)
 ;
"RTN","SCMCHLR4",58,0)
 N VALMB,VALMBEG,VALMEND,X,X1,X2
"RTN","SCMCHLR4",59,0)
 ;
"RTN","SCMCHLR4",60,0)
 ;Ask user for date range (default 2 wks prior to today)
"RTN","SCMCHLR4",61,0)
 S X1=DT,X2=-14
"RTN","SCMCHLR4",62,0)
 D C^%DTC
"RTN","SCMCHLR4",63,0)
 S VALMB=X
"RTN","SCMCHLR4",64,0)
 D RANGE^VALM1
"RTN","SCMCHLR4",65,0)
 ;
"RTN","SCMCHLR4",66,0)
 ;Process user response
"RTN","SCMCHLR4",67,0)
 I 'VALMBEG!('VALMEND)!((SCBEG=VALMBEG)&(SCEND=VALMEND)) D
"RTN","SCMCHLR4",68,0)
 .W !!,"Date Range was not changed."
"RTN","SCMCHLR4",69,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR4",70,0)
 .S VALMBCK=""
"RTN","SCMCHLR4",71,0)
 E  D
"RTN","SCMCHLR4",72,0)
 .S SCBEG=VALMBEG,SCEND=VALMEND
"RTN","SCMCHLR4",73,0)
 .;rebuild error list for selected date range
"RTN","SCMCHLR4",74,0)
 .D BUILD^SCMCHLR1
"RTN","SCMCHLR4",75,0)
 .;Refresh screen when returning from action
"RTN","SCMCHLR4",76,0)
 .S VALMBCK="R"
"RTN","SCMCHLR4",77,0)
 ;
"RTN","SCMCHLR4",78,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",79,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",80,0)
 ;
"RTN","SCMCHLR4",81,0)
 Q
"RTN","SCMCHLR4",82,0)
 ;
"RTN","SCMCHLR4",83,0)
 ;
"RTN","SCMCHLR4",84,0)
SL ; Description: Entry point for SCMC LE SORT LIST protocol.
"RTN","SCMCHLR4",85,0)
 ;
"RTN","SCMCHLR4",86,0)
 ;  Input:
"RTN","SCMCHLR4",87,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR4",88,0)
 ;
"RTN","SCMCHLR4",89,0)
 ; Output:
"RTN","SCMCHLR4",90,0)
 ;  SCSORTBY - Sort by criteria
"RTN","SCMCHLR4",91,0)
 ;   VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",92,0)
 ;
"RTN","SCMCHLR4",93,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR4",94,0)
 ;
"RTN","SCMCHLR4",95,0)
 ;Sets screen to full scrolling region
"RTN","SCMCHLR4",96,0)
 D FULL^VALM1
"RTN","SCMCHLR4",97,0)
 ;
"RTN","SCMCHLR4",98,0)
 ;Ask user to select sort by criteria
"RTN","SCMCHLR4",99,0)
 S DIR(0)="SMO^N:Patient Name;D:Date Error Received;P:Provider"
"RTN","SCMCHLR4",100,0)
 S DIR("A")="Select Sort By"
"RTN","SCMCHLR4",101,0)
 D ^DIR
"RTN","SCMCHLR4",102,0)
 ;
"RTN","SCMCHLR4",103,0)
 ;Process user response
"RTN","SCMCHLR4",104,0)
 I "^N^D^P^"[("^"_Y_"^"),SCSORTBY'=Y D
"RTN","SCMCHLR4",105,0)
 .S SCSORTBY=Y
"RTN","SCMCHLR4",106,0)
 .;rebuild error list for selected sort criteria
"RTN","SCMCHLR4",107,0)
 .D BUILD^SCMCHLR1
"RTN","SCMCHLR4",108,0)
 ;
"RTN","SCMCHLR4",109,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",110,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",111,0)
 ;
"RTN","SCMCHLR4",112,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",113,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",114,0)
 Q
"RTN","SCMCHLR4",115,0)
 ;
"RTN","SCMCHLR4",116,0)
 ;
"RTN","SCMCHLR4",117,0)
CE ; Description: Entry point for SCMC LE CHECK ERROR OFF LIST protocol.
"RTN","SCMCHLR4",118,0)
 ;
"RTN","SCMCHLR4",119,0)
 ;  Input: None
"RTN","SCMCHLR4",120,0)
 ;
"RTN","SCMCHLR4",121,0)
 ; Output:
"RTN","SCMCHLR4",122,0)
 ;   VALMSG - Custom message
"RTN","SCMCHLR4",123,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",124,0)
 ;
"RTN","SCMCHLR4",125,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCERIEN,VALMY
"RTN","SCMCHLR4",126,0)
 ;
"RTN","SCMCHLR4",127,0)
 ;Ask user to select transmission errors to check off the list
"RTN","SCMCHLR4",128,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR4",129,0)
 D FULL^VALM1
"RTN","SCMCHLR4",130,0)
 ;
"RTN","SCMCHLR4",131,0)
 ;Process user selection
"RTN","SCMCHLR4",132,0)
 S SCNUM=0
"RTN","SCMCHLR4",133,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR4",134,0)
 .;invoke call to check error off list
"RTN","SCMCHLR4",135,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR4",136,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR4",137,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR4",138,0)
 ..D CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR4",139,0)
 ;
"RTN","SCMCHLR4",140,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",141,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",142,0)
 ;
"RTN","SCMCHLR4",143,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",144,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",145,0)
 Q
"RTN","SCMCHLR4",146,0)
 ;
"RTN","SCMCHLR4",147,0)
 ;
"RTN","SCMCHLR4",148,0)
RP ; Description: Entry point for SCMC LE RETRANSMIT PATIENT protocol.
"RTN","SCMCHLR4",149,0)
 ;
"RTN","SCMCHLR4",150,0)
 ;  Input: None
"RTN","SCMCHLR4",151,0)
 ;
"RTN","SCMCHLR4",152,0)
 ; Output: 
"RTN","SCMCHLR4",153,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",154,0)
 ;
"RTN","SCMCHLR4",155,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCTLOG,VALMY
"RTN","SCMCHLR4",156,0)
 ;
"RTN","SCMCHLR4",157,0)
 ;Ask user to select transmission errors to retransmit patient
"RTN","SCMCHLR4",158,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR4",159,0)
 D FULL^VALM1
"RTN","SCMCHLR4",160,0)
 ;
"RTN","SCMCHLR4",161,0)
 ;Process user selections
"RTN","SCMCHLR4",162,0)
 S SCNUM=0
"RTN","SCMCHLR4",163,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR4",164,0)
 .;
"RTN","SCMCHLR4",165,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR4",166,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR4",167,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR4",168,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR4",169,0)
 ..;to set patient to 'retransmit'.
"RTN","SCMCHLR4",170,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D SETPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR4",171,0)
 ;
"RTN","SCMCHLR4",172,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",173,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",174,0)
 ;
"RTN","SCMCHLR4",175,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",176,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",177,0)
 Q
"RTN","SCMCHLR4",178,0)
 ;
"RTN","SCMCHLR4",179,0)
 ;
"RTN","SCMCHLR4",180,0)
PE ; Description: Entry point for SCMC LE PRINT ERROR CODES protocol.
"RTN","SCMCHLR4",181,0)
 ;
"RTN","SCMCHLR4",182,0)
 ;  Input: None
"RTN","SCMCHLR4",183,0)
 ;
"RTN","SCMCHLR4",184,0)
 ; Output:
"RTN","SCMCHLR4",185,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",186,0)
 ;
"RTN","SCMCHLR4",187,0)
 ;Sets screen to full scrolling region
"RTN","SCMCHLR4",188,0)
 D FULL^VALM1
"RTN","SCMCHLR4",189,0)
 ;
"RTN","SCMCHLR4",190,0)
 ;Print PCMM Transmission Error Code Report
"RTN","SCMCHLR4",191,0)
 D ECRPRT^SCMCHLR7
"RTN","SCMCHLR4",192,0)
 D PAUSE^VALM1
"RTN","SCMCHLR4",193,0)
 ;
"RTN","SCMCHLR4",194,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",195,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",196,0)
 ;
"RTN","SCMCHLR4",197,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",198,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",199,0)
 Q
"RTN","SCMCHLR4",200,0)
 ;
"RTN","SCMCHLR4",201,0)
 ;
"RTN","SCMCHLR4",202,0)
RA ; Description: Entry point for SCMC LE RETRANSMIT ALL protocol.
"RTN","SCMCHLR4",203,0)
 ;
"RTN","SCMCHLR4",204,0)
 ;  Input: None
"RTN","SCMCHLR4",205,0)
 ;
"RTN","SCMCHLR4",206,0)
 ; Output:
"RTN","SCMCHLR4",207,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",208,0)
 ;
"RTN","SCMCHLR4",209,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR4",210,0)
 ;
"RTN","SCMCHLR4",211,0)
 ;Sets screen to full scrolling region
"RTN","SCMCHLR4",212,0)
 D FULL^VALM1
"RTN","SCMCHLR4",213,0)
 ;
"RTN","SCMCHLR4",214,0)
 ;Ask user if they want to retransmit all patients
"RTN","SCMCHLR4",215,0)
 S DIR(0)="Y"
"RTN","SCMCHLR4",216,0)
 S DIR("A")="Mark all patients for re-transmission"
"RTN","SCMCHLR4",217,0)
 S DIR("A",1)="This action will allow all patients to be marked for re-transmission."
"RTN","SCMCHLR4",218,0)
 S DIR("A",2)="The error processing status for all patients will be marked as checked."
"RTN","SCMCHLR4",219,0)
 S DIR("B")="NO"
"RTN","SCMCHLR4",220,0)
 D ^DIR
"RTN","SCMCHLR4",221,0)
 ;
"RTN","SCMCHLR4",222,0)
 ;Process user response
"RTN","SCMCHLR4",223,0)
 I '$D(DIRUT) D
"RTN","SCMCHLR4",224,0)
 .I +Y D
"RTN","SCMCHLR4",225,0)
 ..;set all patients as re-transmit
"RTN","SCMCHLR4",226,0)
 ..D UPDALL
"RTN","SCMCHLR4",227,0)
 ;
"RTN","SCMCHLR4",228,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",229,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",230,0)
 ;
"RTN","SCMCHLR4",231,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",232,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",233,0)
 Q
"RTN","SCMCHLR4",234,0)
 ;
"RTN","SCMCHLR4",235,0)
 ;
"RTN","SCMCHLR4",236,0)
CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN) ;
"RTN","SCMCHLR4",237,0)
 ; Description: Used to check an error off the list.
"RTN","SCMCHLR4",238,0)
 ;
"RTN","SCMCHLR4",239,0)
 ;  Input:
"RTN","SCMCHLR4",240,0)
 ;     SCARY - Global array subscript
"RTN","SCMCHLR4",241,0)
 ;    SCLINE - Line number
"RTN","SCMCHLR4",242,0)
 ;   SCTLIEN - PCMM HL7 Transmission Log IEN
"RTN","SCMCHLR4",243,0)
 ;   SCERIEN - IEN of recrord in Error Code (#404.47142) multiple
"RTN","SCMCHLR4",244,0)
 ;
"RTN","SCMCHLR4",245,0)
 ; Output: None
"RTN","SCMCHLR4",246,0)
 ;
"RTN","SCMCHLR4",247,0)
 N SCERMSG
"RTN","SCMCHLR4",248,0)
 ;
"RTN","SCMCHLR4",249,0)
 I $$UPDEPS^SCMCHLA(SCTLIEN,SCERIEN,2,.SCERMSG) D
"RTN","SCMCHLR4",250,0)
 .D FLDTEXT^VALM10(SCLINE,"STATUS","Checked")
"RTN","SCMCHLR4",251,0)
 .D FLDCTRL^VALM10(SCLINE,"STATUS",IOINHI,IOINORM)
"RTN","SCMCHLR4",252,0)
 E  D
"RTN","SCMCHLR4",253,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR4",254,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERMSG)
"RTN","SCMCHLR4",255,0)
 .W !,"...Unable to check error off list"
"RTN","SCMCHLR4",256,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR4",257,0)
 Q
"RTN","SCMCHLR4",258,0)
 ;
"RTN","SCMCHLR4",259,0)
 ;
"RTN","SCMCHLR4",260,0)
SETPAT(SCARY,SCLINE,SCTLOG) ; Description: Used to set patient to marked for re-transmit.
"RTN","SCMCHLR4",261,0)
 ;
"RTN","SCMCHLR4",262,0)
 ;  Input:
"RTN","SCMCHLR4",263,0)
 ;    SCARY - Global array subscript
"RTN","SCMCHLR4",264,0)
 ;   SCLINE - Line number
"RTN","SCMCHLR4",265,0)
 ;   SCTLOG - Transmission log entry array
"RTN","SCMCHLR4",266,0)
 ;
"RTN","SCMCHLR4",267,0)
 ; Output: None
"RTN","SCMCHLR4",268,0)
 ;
"RTN","SCMCHLR4",269,0)
 N SCERROR
"RTN","SCMCHLR4",270,0)
 ;
"RTN","SCMCHLR4",271,0)
 ;Set patient to marked for re-transmit
"RTN","SCMCHLR4",272,0)
 I $$UPDSTAT^SCMCHLA(SCTLIEN,"M",.SCERROR) D
"RTN","SCMCHLR4",273,0)
 .D UPDPAT(SCARY,SCTLOG("DFN"))
"RTN","SCMCHLR4",274,0)
 E  D
"RTN","SCMCHLR4",275,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR4",276,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERROR)
"RTN","SCMCHLR4",277,0)
 .W !,"...Unable to mark patient for re-transmit"
"RTN","SCMCHLR4",278,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR4",279,0)
 Q
"RTN","SCMCHLR4",280,0)
 ;
"RTN","SCMCHLR4",281,0)
 ;
"RTN","SCMCHLR4",282,0)
UPDPAT(SCARY,SCDFN) ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR4",283,0)
 ; entries in the list for the patient as 'marked for re-transmit'.
"RTN","SCMCHLR4",284,0)
 ;
"RTN","SCMCHLR4",285,0)
 ;  Input:
"RTN","SCMCHLR4",286,0)
 ;   SCARY - Global array subscript
"RTN","SCMCHLR4",287,0)
 ;   SCDFN - Patient IEN
"RTN","SCMCHLR4",288,0)
 ;
"RTN","SCMCHLR4",289,0)
 ; Output: None
"RTN","SCMCHLR4",290,0)
 ;
"RTN","SCMCHLR4",291,0)
 N SCLINE,SCTLIEN
"RTN","SCMCHLR4",292,0)
 ;
"RTN","SCMCHLR4",293,0)
 ;Loop thru entries in the list for the patient
"RTN","SCMCHLR4",294,0)
 S SCLINE=0
"RTN","SCMCHLR4",295,0)
 F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:'SCLINE  S SCTLIEN=+^(SCLINE) D
"RTN","SCMCHLR4",296,0)
 .;update entry as marked for re-transmit
"RTN","SCMCHLR4",297,0)
 .D FLDTEXT^VALM10(SCLINE,"RETRANS","*")
"RTN","SCMCHLR4",298,0)
 .D FLDCTRL^VALM10(SCLINE,"RETRANS",IOINHI,IOINORM)
"RTN","SCMCHLR4",299,0)
 .;invoke code to check error off the list
"RTN","SCMCHLR4",300,0)
 .D CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR4",301,0)
 Q
"RTN","SCMCHLR4",302,0)
 ;
"RTN","SCMCHLR4",303,0)
 ;
"RTN","SCMCHLR4",304,0)
UPDALL ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR4",305,0)
 ; entries in the list as 'marked for re-transmit'.
"RTN","SCMCHLR4",306,0)
 ;
"RTN","SCMCHLR4",307,0)
 ;  Input: None
"RTN","SCMCHLR4",308,0)
 ; Output: None
"RTN","SCMCHLR4",309,0)
 ;
"RTN","SCMCHLR4",310,0)
 N SCLINE,SCTLIEN,SCDFN
"RTN","SCMCHLR4",311,0)
 ;
"RTN","SCMCHLR4",312,0)
 ;Loop thru entries in the list for all patients
"RTN","SCMCHLR4",313,0)
 S SCDFN=""
"RTN","SCMCHLR4",314,0)
 F  S SCDFN=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN)) Q:'SCDFN  D
"RTN","SCMCHLR4",315,0)
 .;Loop thru entries in the list for the patient
"RTN","SCMCHLR4",316,0)
 .S SCLINE=0
"RTN","SCMCHLR4",317,0)
 .F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:'SCLINE  D
"RTN","SCMCHLR4",318,0)
 ..S NODE=^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)
"RTN","SCMCHLR4",319,0)
 ..S SCTLIEN=+NODE,SCERIEN=+$P(NODE,"^",2)
"RTN","SCMCHLR4",320,0)
 ..;
"RTN","SCMCHLR4",321,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR4",322,0)
 ..;to set patient to 'retransmit'.
"RTN","SCMCHLR4",323,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D SETPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR4",324,0)
 ..;
"RTN","SCMCHLR4",325,0)
 ..;update entry as marked for re-transmit
"RTN","SCMCHLR4",326,0)
 ..D FLDTEXT^VALM10(SCLINE,"RETRANS","*")
"RTN","SCMCHLR4",327,0)
 ..D FLDCTRL^VALM10(SCLINE,"RETRANS",IOINHI,IOINORM)
"RTN","SCMCHLR4",328,0)
 ..;invoke code to check error off the list
"RTN","SCMCHLR4",329,0)
 ..D CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR4",330,0)
 ;
"RTN","SCMCHLR4",331,0)
 Q
"RTN","SCMCHLR5")
0^14^B27254443
"RTN","SCMCHLR5",1,0)
SCMCHLR5 ;ALB/KCL - PCMM HL7 Reject Processing - Protocols con't ; 10-JAN-2000
"RTN","SCMCHLR5",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLR5",3,0)
 ;
"RTN","SCMCHLR5",4,0)
 ;This routine contains the PCMM Transmission Error processing protocols.
"RTN","SCMCHLR5",5,0)
 ;See EN^SCMCHLR2 for additional documentation on 'system wide' variables
"RTN","SCMCHLR5",6,0)
 ;used in this routine.
"RTN","SCMCHLR5",7,0)
 ;
"RTN","SCMCHLR5",8,0)
UE ; Description: Entry point for SCMC LE UNCHECK ERROR protocol.
"RTN","SCMCHLR5",9,0)
 ;
"RTN","SCMCHLR5",10,0)
 ;  Input: None
"RTN","SCMCHLR5",11,0)
 ;
"RTN","SCMCHLR5",12,0)
 ; Output:
"RTN","SCMCHLR5",13,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR5",14,0)
 ;
"RTN","SCMCHLR5",15,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCERIEN,VALMY
"RTN","SCMCHLR5",16,0)
 ;
"RTN","SCMCHLR5",17,0)
 ;Ask user to select transmission errors to uncheck on the list
"RTN","SCMCHLR5",18,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR5",19,0)
 D FULL^VALM1
"RTN","SCMCHLR5",20,0)
 ;
"RTN","SCMCHLR5",21,0)
 ;Process user selection
"RTN","SCMCHLR5",22,0)
 S SCNUM=0
"RTN","SCMCHLR5",23,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR5",24,0)
 .;invoke call to mark error as new on list
"RTN","SCMCHLR5",25,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR5",26,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR5",27,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR5",28,0)
 ..D UNCHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR5",29,0)
 ;
"RTN","SCMCHLR5",30,0)
 ;
"RTN","SCMCHLR5",31,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR5",32,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR5",33,0)
 ;
"RTN","SCMCHLR5",34,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR5",35,0)
 S VALMBCK="R"
"RTN","SCMCHLR5",36,0)
 Q
"RTN","SCMCHLR5",37,0)
 ;
"RTN","SCMCHLR5",38,0)
 ;
"RTN","SCMCHLR5",39,0)
DP ; Description: Entry point for SCMC LE DESELECT PATIENT RETRANSMIT protocol.
"RTN","SCMCHLR5",40,0)
 ;
"RTN","SCMCHLR5",41,0)
 ;  Input: None
"RTN","SCMCHLR5",42,0)
 ;
"RTN","SCMCHLR5",43,0)
 ; Output: 
"RTN","SCMCHLR5",44,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR5",45,0)
 ;
"RTN","SCMCHLR5",46,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCTLOG,VALMY
"RTN","SCMCHLR5",47,0)
 ;
"RTN","SCMCHLR5",48,0)
 ;Ask user to select transmission errors to deselect
"RTN","SCMCHLR5",49,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR5",50,0)
 ;
"RTN","SCMCHLR5",51,0)
 ;set screen to full scrolling region
"RTN","SCMCHLR5",52,0)
 D FULL^VALM1
"RTN","SCMCHLR5",53,0)
 ;
"RTN","SCMCHLR5",54,0)
 ;Process user selections
"RTN","SCMCHLR5",55,0)
 S SCNUM=0
"RTN","SCMCHLR5",56,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR5",57,0)
 .;
"RTN","SCMCHLR5",58,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR5",59,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR5",60,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR5",61,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR5",62,0)
 ..;to set patient to 'retransmit'.
"RTN","SCMCHLR5",63,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D DESLPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR5",64,0)
 ;
"RTN","SCMCHLR5",65,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR5",66,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR5",67,0)
 ;
"RTN","SCMCHLR5",68,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR5",69,0)
 S VALMBCK="R"
"RTN","SCMCHLR5",70,0)
 Q
"RTN","SCMCHLR5",71,0)
 ;
"RTN","SCMCHLR5",72,0)
 ;
"RTN","SCMCHLR5",73,0)
DA ; Description: Entry point for SCMC LE DESELECT ALL protocol.
"RTN","SCMCHLR5",74,0)
 ;
"RTN","SCMCHLR5",75,0)
 ;  Input: None
"RTN","SCMCHLR5",76,0)
 ;
"RTN","SCMCHLR5",77,0)
 ; Output:
"RTN","SCMCHLR5",78,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR5",79,0)
 ;
"RTN","SCMCHLR5",80,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR5",81,0)
 ;
"RTN","SCMCHLR5",82,0)
 ;Set screen to full scrolling region
"RTN","SCMCHLR5",83,0)
 D FULL^VALM1
"RTN","SCMCHLR5",84,0)
 ;
"RTN","SCMCHLR5",85,0)
 ;Ask user if they want to deselect all patients for retransmit
"RTN","SCMCHLR5",86,0)
 S DIR(0)="Y"
"RTN","SCMCHLR5",87,0)
 S DIR("A")="Deselect all patients"
"RTN","SCMCHLR5",88,0)
 S DIR("A",1)="This action will allow all patients that are currently"
"RTN","SCMCHLR5",89,0)
 S DIR("A",2)="marked for re-transmission to be deselected."
"RTN","SCMCHLR5",90,0)
 S DIR("B")="NO"
"RTN","SCMCHLR5",91,0)
 D ^DIR
"RTN","SCMCHLR5",92,0)
 ;
"RTN","SCMCHLR5",93,0)
 ;Process user response
"RTN","SCMCHLR5",94,0)
 I '$D(DIRUT) D
"RTN","SCMCHLR5",95,0)
 .I +Y D
"RTN","SCMCHLR5",96,0)
 ..;set all patients status to rejected
"RTN","SCMCHLR5",97,0)
 ..D UPDALL
"RTN","SCMCHLR5",98,0)
 ;
"RTN","SCMCHLR5",99,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR5",100,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR5",101,0)
 ;
"RTN","SCMCHLR5",102,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR5",103,0)
 S VALMBCK="R"
"RTN","SCMCHLR5",104,0)
 Q
"RTN","SCMCHLR5",105,0)
 ;
"RTN","SCMCHLR5",106,0)
 ;
"RTN","SCMCHLR5",107,0)
UNCHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN) ;
"RTN","SCMCHLR5",108,0)
 ; Description: Used to uncheck an error on the list.
"RTN","SCMCHLR5",109,0)
 ;
"RTN","SCMCHLR5",110,0)
 ;  Input:
"RTN","SCMCHLR5",111,0)
 ;     SCARY - Global array subscript
"RTN","SCMCHLR5",112,0)
 ;    SCLINE - Line number
"RTN","SCMCHLR5",113,0)
 ;   SCTLIEN - PCMM HL7 Transmission Log IEN
"RTN","SCMCHLR5",114,0)
 ;   SCERIEN - IEN of record in Error Code (#404.47142) multiple
"RTN","SCMCHLR5",115,0)
 ;
"RTN","SCMCHLR5",116,0)
 ; Output: None
"RTN","SCMCHLR5",117,0)
 ;
"RTN","SCMCHLR5",118,0)
 N SCERMSG
"RTN","SCMCHLR5",119,0)
 ;
"RTN","SCMCHLR5",120,0)
 ;if status is marked for retransmit error can not be marked as new
"RTN","SCMCHLR5",121,0)
 I $$STATUS^SCMCHLA(SCTLIEN)="M" D
"RTN","SCMCHLR5",122,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR5",123,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERMSG)
"RTN","SCMCHLR5",124,0)
 .W !,"...Unable to update error processing status"
"RTN","SCMCHLR5",125,0)
 .W !,"...Patient already marked for re-transmission"
"RTN","SCMCHLR5",126,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR5",127,0)
 E  D
"RTN","SCMCHLR5",128,0)
 .I $$UPDEPS^SCMCHLA(SCTLIEN,SCERIEN,1,.SCERMSG) D
"RTN","SCMCHLR5",129,0)
 ..D FLDTEXT^VALM10(SCLINE,"STATUS","New")
"RTN","SCMCHLR5",130,0)
 ..D FLDCTRL^VALM10(SCLINE,"STATUS",IOINHI,IOINORM)
"RTN","SCMCHLR5",131,0)
 Q
"RTN","SCMCHLR5",132,0)
 ;
"RTN","SCMCHLR5",133,0)
 ;
"RTN","SCMCHLR5",134,0)
DESLPAT(SCARY,SCLINE,SCTLOG) ; Description: Used to set patient to rejected.
"RTN","SCMCHLR5",135,0)
 ;
"RTN","SCMCHLR5",136,0)
 ;  Input:
"RTN","SCMCHLR5",137,0)
 ;    SCARY - Global array subscript
"RTN","SCMCHLR5",138,0)
 ;   SCLINE - Line number
"RTN","SCMCHLR5",139,0)
 ;   SCTLOG - Transmission log entry array
"RTN","SCMCHLR5",140,0)
 ;
"RTN","SCMCHLR5",141,0)
 ; Output: None
"RTN","SCMCHLR5",142,0)
 ;
"RTN","SCMCHLR5",143,0)
 N SCERROR
"RTN","SCMCHLR5",144,0)
 ;
"RTN","SCMCHLR5",145,0)
 ;Set patient to rejected
"RTN","SCMCHLR5",146,0)
 I $$UPDSTAT^SCMCHLA(SCTLIEN,"RJ",.SCERROR) D
"RTN","SCMCHLR5",147,0)
 .D UPDPAT(SCARY,SCTLOG("DFN"))
"RTN","SCMCHLR5",148,0)
 E  D
"RTN","SCMCHLR5",149,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR5",150,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERROR)
"RTN","SCMCHLR5",151,0)
 .W !,"...Unable to deselect patient for re-transmit"
"RTN","SCMCHLR5",152,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR5",153,0)
 Q
"RTN","SCMCHLR5",154,0)
 ;
"RTN","SCMCHLR5",155,0)
 ;
"RTN","SCMCHLR5",156,0)
UPDPAT(SCARY,SCDFN) ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR5",157,0)
 ; entries in the list for the patient as 'rejected'.
"RTN","SCMCHLR5",158,0)
 ;
"RTN","SCMCHLR5",159,0)
 ;  Input:
"RTN","SCMCHLR5",160,0)
 ;   SCARY - Global array subscript
"RTN","SCMCHLR5",161,0)
 ;   SCDFN - Patient IEN
"RTN","SCMCHLR5",162,0)
 ;
"RTN","SCMCHLR5",163,0)
 ; Output: None
"RTN","SCMCHLR5",164,0)
 ;
"RTN","SCMCHLR5",165,0)
 N SCLINE,SCTLIEN
"RTN","SCMCHLR5",166,0)
 ;
"RTN","SCMCHLR5",167,0)
 ;Loop thru entries in the list for the patient
"RTN","SCMCHLR5",168,0)
 S SCLINE=0
"RTN","SCMCHLR5",169,0)
 F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:'SCLINE  S SCTLIEN=+^(SCLINE) D
"RTN","SCMCHLR5",170,0)
 .;update entry that was marked for re-transmit to null
"RTN","SCMCHLR5",171,0)
 .D FLDTEXT^VALM10(SCLINE,"RETRANS"," ")
"RTN","SCMCHLR5",172,0)
 Q
"RTN","SCMCHLR5",173,0)
 ;
"RTN","SCMCHLR5",174,0)
 ;
"RTN","SCMCHLR5",175,0)
UPDALL ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR5",176,0)
 ; entries in the list as 'marked for re-transmit'.
"RTN","SCMCHLR5",177,0)
 ;
"RTN","SCMCHLR5",178,0)
 ;  Input: None
"RTN","SCMCHLR5",179,0)
 ; Output: None
"RTN","SCMCHLR5",180,0)
 ;
"RTN","SCMCHLR5",181,0)
 N SCLINE,SCTLIEN,SCDFN
"RTN","SCMCHLR5",182,0)
 ;
"RTN","SCMCHLR5",183,0)
 ;Loop thru entries in the list for all patients
"RTN","SCMCHLR5",184,0)
 S SCDFN=""
"RTN","SCMCHLR5",185,0)
 F  S SCDFN=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN)) Q:'SCDFN  D
"RTN","SCMCHLR5",186,0)
 .;Loop thru entries in the list for the patient
"RTN","SCMCHLR5",187,0)
 .S SCLINE=0
"RTN","SCMCHLR5",188,0)
 .F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:'SCLINE  D
"RTN","SCMCHLR5",189,0)
 ..S NODE=^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)
"RTN","SCMCHLR5",190,0)
 ..S SCTLIEN=+NODE,SCERIEN=+$P(NODE,"^",2)
"RTN","SCMCHLR5",191,0)
 ..;
"RTN","SCMCHLR5",192,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR5",193,0)
 ..;to set patient to 'rejected'.
"RTN","SCMCHLR5",194,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D DESLPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR5",195,0)
 ..;
"RTN","SCMCHLR5",196,0)
 ..;update entry that was marked for re-transmit to null
"RTN","SCMCHLR5",197,0)
 ..D FLDTEXT^VALM10(SCLINE,"RETRANS"," ")
"RTN","SCMCHLR5",198,0)
 ;
"RTN","SCMCHLR5",199,0)
 Q
"RTN","SCMCHLR7")
0^15^B515623
"RTN","SCMCHLR7",1,0)
SCMCHLR7 ;ALB/KCL - PCMM HL7 Error Code Report ;09-FEB-2000
"RTN","SCMCHLR7",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLR7",3,0)
 ;
"RTN","SCMCHLR7",4,0)
ECRPRT ; Description: This entry point is used to print the PCMM HL7 Error
"RTN","SCMCHLR7",5,0)
 ; Code Report.  This report is based on entries in the PCMM HL7
"RTN","SCMCHLR7",6,0)
 ; ERROR CODE (#404.472) file and uses the FileMan EN1^DIP API for
"RTN","SCMCHLR7",7,0)
 ; printing the report.
"RTN","SCMCHLR7",8,0)
 ;
"RTN","SCMCHLR7",9,0)
 ;  Input: None
"RTN","SCMCHLR7",10,0)
 ; Output: None
"RTN","SCMCHLR7",11,0)
 ;
"RTN","SCMCHLR7",12,0)
 N BY,DHD,DIC,FLDS,FR,L,TO,%ZIS
"RTN","SCMCHLR7",13,0)
 ;
"RTN","SCMCHLR7",14,0)
 ;Required input for EN1^DIP call
"RTN","SCMCHLR7",15,0)
 S DIC="^SCPT(404.472,"
"RTN","SCMCHLR7",16,0)
 S L=0
"RTN","SCMCHLR7",17,0)
 S BY=".01"  ; Sort criteria (BY ERROR CODE)
"RTN","SCMCHLR7",18,0)
 S FR=""
"RTN","SCMCHLR7",19,0)
 S TO=""
"RTN","SCMCHLR7",20,0)
 ;
"RTN","SCMCHLR7",21,0)
 ;Fields to be printed (in order listed)
"RTN","SCMCHLR7",22,0)
 S FLDS=".01,.03,10"
"RTN","SCMCHLR7",23,0)
 ;
"RTN","SCMCHLR7",24,0)
 ;Report header
"RTN","SCMCHLR7",25,0)
 S DHD="PCMM Transmission Error Code Report"
"RTN","SCMCHLR7",26,0)
 ;
"RTN","SCMCHLR7",27,0)
 ;Print report
"RTN","SCMCHLR7",28,0)
 S %ZIS="QM"
"RTN","SCMCHLR7",29,0)
 D EN1^DIP
"RTN","SCMCHLR7",30,0)
 ;
"RTN","SCMCHLR7",31,0)
 Q
"RTN","SCMCHLR8")
0^16^B18283652
"RTN","SCMCHLR8",1,0)
SCMCHLR8 ;ALB/KCL - PCMM HL7 Reject Transmission Report; 22-FEB-2000
"RTN","SCMCHLR8",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLR8",3,0)
 ;
"RTN","SCMCHLR8",4,0)
TERPRT ; Description: Main entry point for the PCMM HL7 Reject Transmission Report.
"RTN","SCMCHLR8",5,0)
 ;
"RTN","SCMCHLR8",6,0)
 ;Control variables used in generating report:
"RTN","SCMCHLR8",7,0)
 ; SCRP("BEGIN")=<begining of the date range for error list>
"RTN","SCMCHLR8",8,0)
 ; SCRP("END")=<ending date of range>
"RTN","SCMCHLR8",9,0)
 ; SCRP("SELCT")=<select 'A'->all errors or 'D'->Date Range>
"RTN","SCMCHLR8",10,0)
 ; SCRP("SORT")=<used to determine sort criteria> 
"RTN","SCMCHLR8",11,0)
 ; SCRP("EPS")=<used to determine the error processing status> 
"RTN","SCMCHLR8",12,0)
 ;
"RTN","SCMCHLR8",13,0)
 N SCRP
"RTN","SCMCHLR8",14,0)
 ;
"RTN","SCMCHLR8",15,0)
 ;Get report parameters
"RTN","SCMCHLR8",16,0)
 Q:'$$SELECT(.SCRP)
"RTN","SCMCHLR8",17,0)
 Q:'$$ASKRANGE(.SCRP)
"RTN","SCMCHLR8",18,0)
 Q:'$$SORTBY(.SCRP)
"RTN","SCMCHLR8",19,0)
 Q:'$$EPS(.SCRP)
"RTN","SCMCHLR8",20,0)
 ;
"RTN","SCMCHLR8",21,0)
 ;Print report
"RTN","SCMCHLR8",22,0)
 I $$DEVICE() D PRINT^SCMCHLR9
"RTN","SCMCHLR8",23,0)
 ;
"RTN","SCMCHLR8",24,0)
 Q
"RTN","SCMCHLR8",25,0)
 ;
"RTN","SCMCHLR8",26,0)
 ;
"RTN","SCMCHLR8",27,0)
DEVICE() ; Description: Allows the user to select a device.
"RTN","SCMCHLR8",28,0)
 ;
"RTN","SCMCHLR8",29,0)
 ;  Input: None
"RTN","SCMCHLR8",30,0)
 ;
"RTN","SCMCHLR8",31,0)
 ; Output:
"RTN","SCMCHLR8",32,0)
 ;  Function Value - Returns 0 if the user decides not to print or
"RTN","SCMCHLR8",33,0)
 ;                   to queue the report, 1 otherwise.
"RTN","SCMCHLR8",34,0)
 ;
"RTN","SCMCHLR8",35,0)
 N OK
"RTN","SCMCHLR8",36,0)
 S OK=1
"RTN","SCMCHLR8",37,0)
 S %ZIS="MQ"
"RTN","SCMCHLR8",38,0)
 D ^%ZIS
"RTN","SCMCHLR8",39,0)
 S:POP OK=0
"RTN","SCMCHLR8",40,0)
 D:OK&$D(IO("Q"))
"RTN","SCMCHLR8",41,0)
 .S ZTRTN="PRINT^SCMCHLR9",ZTDESC="PCMM Transmission Error REPORT",ZTSAVE("SCRP(")=""
"RTN","SCMCHLR8",42,0)
 .D ^%ZTLOAD
"RTN","SCMCHLR8",43,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","SCMCHLR8",44,0)
 .D HOME^%ZIS
"RTN","SCMCHLR8",45,0)
 .S OK=0
"RTN","SCMCHLR8",46,0)
 ;
"RTN","SCMCHLR8",47,0)
 Q OK
"RTN","SCMCHLR8",48,0)
 ;
"RTN","SCMCHLR8",49,0)
 ;
"RTN","SCMCHLR8",50,0)
SELECT(SCRP) ; Description: Ask the user to select 'all errors' or errors for a 'date range'.
"RTN","SCMCHLR8",51,0)
 ;
"RTN","SCMCHLR8",52,0)
 ;  Input: None
"RTN","SCMCHLR8",53,0)
 ;
"RTN","SCMCHLR8",54,0)
 ; Output:
"RTN","SCMCHLR8",55,0)
 ;  Function value - 1 if user selected all errors, 0 otherwise
"RTN","SCMCHLR8",56,0)
 ;  SCRP("SELCT") - (pass by reference) used to return list filter
"RTN","SCMCHLR8",57,0)
 ;
"RTN","SCMCHLR8",58,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","SCMCHLR8",59,0)
 ;
"RTN","SCMCHLR8",60,0)
 ;Ask user to select all errors or date range
"RTN","SCMCHLR8",61,0)
 S DIR(0)="SMO^A:All Errors;D:Date Range"
"RTN","SCMCHLR8",62,0)
 S DIR("A")="Select all errors or a date range"
"RTN","SCMCHLR8",63,0)
 S DIR("?",1)="You have a choice of selecting all errors to be printed,"
"RTN","SCMCHLR8",64,0)
 S DIR("?")="or errors may be printed for a specified date range."
"RTN","SCMCHLR8",65,0)
 D ^DIR
"RTN","SCMCHLR8",66,0)
 ;Process user response
"RTN","SCMCHLR8",67,0)
 Q:$D(DIRUT) 0
"RTN","SCMCHLR8",68,0)
 S SCRP("SELCT")=Y
"RTN","SCMCHLR8",69,0)
 Q 1
"RTN","SCMCHLR8",70,0)
 ;
"RTN","SCMCHLR8",71,0)
 ;
"RTN","SCMCHLR8",72,0)
ASKRANGE(SCRP) ;
"RTN","SCMCHLR8",73,0)
 ; Description: Asks the user to enter a date range for report.
"RTN","SCMCHLR8",74,0)
 ;
"RTN","SCMCHLR8",75,0)
 ;If user selected ALL errors, init begin and end dates and quit
"RTN","SCMCHLR8",76,0)
 I $G(SCRP("SELCT"))="A" D  Q 1
"RTN","SCMCHLR8",77,0)
 .S SCRP("BEGIN")=0
"RTN","SCMCHLR8",78,0)
 .S SCRP("END")=DT
"RTN","SCMCHLR8",79,0)
 ;Otherwise, ask user for date range
"RTN","SCMCHLR8",80,0)
 Q:'$$ASKBEGIN(.SCRP) 0
"RTN","SCMCHLR8",81,0)
 Q:'$$ASKEND(.SCRP) 0
"RTN","SCMCHLR8",82,0)
 Q 1
"RTN","SCMCHLR8",83,0)
 ;
"RTN","SCMCHLR8",84,0)
 ;
"RTN","SCMCHLR8",85,0)
ASKBEGIN(SCRP) ;
"RTN","SCMCHLR8",86,0)
 ;Description: Asks the user to enter a begin date.
"RTN","SCMCHLR8",87,0)
 ;
"RTN","SCMCHLR8",88,0)
 ;  Input: None
"RTN","SCMCHLR8",89,0)
 ;
"RTN","SCMCHLR8",90,0)
 ; Output:
"RTN","SCMCHLR8",91,0)
 ;   Function value - 1 if user selected a date, 0 otherwise
"RTN","SCMCHLR8",92,0)
 ;   SCRP("BEGIN")=(pass by reference) used to return date selected
"RTN","SCMCHLR8",93,0)
 ;
"RTN","SCMCHLR8",94,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","SCMCHLR8",95,0)
 S DIR(0)="D^::EX"
"RTN","SCMCHLR8",96,0)
 S DIR("A")="Enter Beginning Date"
"RTN","SCMCHLR8",97,0)
 S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,-14),"D")
"RTN","SCMCHLR8",98,0)
 S DIR("?")="Enter the first day to begin searching for PCMM Transmission Errors."
"RTN","SCMCHLR8",99,0)
REPEAT D ^DIR
"RTN","SCMCHLR8",100,0)
 Q:$D(DIRUT) 0
"RTN","SCMCHLR8",101,0)
 I Y>DT W !,"Date can not be latter than today!" G REPEAT
"RTN","SCMCHLR8",102,0)
 S SCRP("BEGIN")=Y
"RTN","SCMCHLR8",103,0)
 Q 1
"RTN","SCMCHLR8",104,0)
 ;
"RTN","SCMCHLR8",105,0)
 ;
"RTN","SCMCHLR8",106,0)
ASKEND(SCRP) ;
"RTN","SCMCHLR8",107,0)
 ; Description: Asks the user to enter an end date.
"RTN","SCMCHLR8",108,0)
 ;
"RTN","SCMCHLR8",109,0)
 ;  Input:
"RTN","SCMCHLR8",110,0)
 ;   SCRP("BEGIN") - the earliest possible date
"RTN","SCMCHLR8",111,0)
 ;
"RTN","SCMCHLR8",112,0)
 ; Output:
"RTN","SCMCHLR8",113,0)
 ;  Function value - 1 if user selected a date, 0 otherwise
"RTN","SCMCHLR8",114,0)
 ;  SCRP("END")=(pass by reference) used to return date selected
"RTN","SCMCHLR8",115,0)
 ;
"RTN","SCMCHLR8",116,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","SCMCHLR8",117,0)
 S DIR(0)="D^::EX"
"RTN","SCMCHLR8",118,0)
 S DIR("A")="Enter Ending Date"
"RTN","SCMCHLR8",119,0)
 ;S DIR("B")=$$FMTE^XLFDT(SCRP("BEGIN"),"D")
"RTN","SCMCHLR8",120,0)
 S DIR("B")=$$FMTE^XLFDT(DT,"D")
"RTN","SCMCHLR8",121,0)
 S DIR("?")="Enter the last day to list transmission errors for."
"RTN","SCMCHLR8",122,0)
AGAIN D ^DIR
"RTN","SCMCHLR8",123,0)
 Q:$D(DIRUT) 0
"RTN","SCMCHLR8",124,0)
 I (Y<$G(SCRP("BEGIN"))) W !,"Date must not be earlier than "_DIR("B") G AGAIN
"RTN","SCMCHLR8",125,0)
 S SCRP("END")=Y
"RTN","SCMCHLR8",126,0)
 Q 1
"RTN","SCMCHLR8",127,0)
 ;
"RTN","SCMCHLR8",128,0)
 ;
"RTN","SCMCHLR8",129,0)
SORTBY(SCRP) ; Description: Ask the user to enter a sort criteria for printing errors.
"RTN","SCMCHLR8",130,0)
 ;
"RTN","SCMCHLR8",131,0)
 ;  Input: None
"RTN","SCMCHLR8",132,0)
 ;
"RTN","SCMCHLR8",133,0)
 ; Output:
"RTN","SCMCHLR8",134,0)
 ;  Function value - 1 if user selected a sort, 0 otherwise
"RTN","SCMCHLR8",135,0)
 ;  SCRP("SORT") - (pass by reference) used to return sort by criteria
"RTN","SCMCHLR8",136,0)
 ;
"RTN","SCMCHLR8",137,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","SCMCHLR8",138,0)
 ;Ask user to select sort by criteria
"RTN","SCMCHLR8",139,0)
 S DIR(0)="SMO^N:Patient Name;D:Date Error Received;P:Provider"
"RTN","SCMCHLR8",140,0)
 S DIR("A")="Select sort criteria for listing PCMM Transmission Errors"
"RTN","SCMCHLR8",141,0)
 S DIR("?")="Enter how the error list should be sorted by."
"RTN","SCMCHLR8",142,0)
 D ^DIR
"RTN","SCMCHLR8",143,0)
 ;Process user response
"RTN","SCMCHLR8",144,0)
 Q:$D(DIRUT) 0
"RTN","SCMCHLR8",145,0)
 S SCRP("SORT")=Y
"RTN","SCMCHLR8",146,0)
 Q 1
"RTN","SCMCHLR8",147,0)
 ;
"RTN","SCMCHLR8",148,0)
 ;
"RTN","SCMCHLR8",149,0)
EPS(SCRP) ; Description: Ask user to enter a error processing status.
"RTN","SCMCHLR8",150,0)
 ;
"RTN","SCMCHLR8",151,0)
 ;  Input: None
"RTN","SCMCHLR8",152,0)
 ;
"RTN","SCMCHLR8",153,0)
 ; Output:
"RTN","SCMCHLR8",154,0)
 ;  Function value - 1 if user selected an error processin status, 0 otherwise
"RTN","SCMCHLR8",155,0)
 ;    SCRP("EPS") - (pass by reference) used to return Error Processing
"RTN","SCMCHLR8",156,0)
 ;                  Status: 1->New, 2->Checked, 3->Both
"RTN","SCMCHLR8",157,0)
 ;
"RTN","SCMCHLR8",158,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","SCMCHLR8",159,0)
 ;Ask user to select error processing status
"RTN","SCMCHLR8",160,0)
 S DIR(0)="SMO^1:New;2:Checked;3:Both"
"RTN","SCMCHLR8",161,0)
 S DIR("A")="Select Error Processing Status"
"RTN","SCMCHLR8",162,0)
 S DIR("?",1)="Enter an error processing status.  Only those errors matching"
"RTN","SCMCHLR8",163,0)
 S DIR("?")="the error processing status selected will be listed."
"RTN","SCMCHLR8",164,0)
 D ^DIR
"RTN","SCMCHLR8",165,0)
 ;Process user response
"RTN","SCMCHLR8",166,0)
 Q:$D(DIRUT) 0
"RTN","SCMCHLR8",167,0)
 S SCRP("EPS")=+Y
"RTN","SCMCHLR8",168,0)
 Q 1
"RTN","SCMCHLR9")
0^17^B30493907
"RTN","SCMCHLR9",1,0)
SCMCHLR9 ;ALB/KCL - PCMM HL7 Reject Transmission Report Con't; 22-FEB-2000
"RTN","SCMCHLR9",2,0)
 ;;5.3;Scheduling;**210**;AUG 13,1993
"RTN","SCMCHLR9",3,0)
 ;
"RTN","SCMCHLR9",4,0)
PRINT ; Description: Used to print report.
"RTN","SCMCHLR9",5,0)
 ;
"RTN","SCMCHLR9",6,0)
 ;Init variables
"RTN","SCMCHLR9",7,0)
 N CRT,QUIT,PAGE,SUBSCRPT,SCARRAY
"RTN","SCMCHLR9",8,0)
 K SCARRAY
"RTN","SCMCHLR9",9,0)
 S SCARRAY="SCERRSRT"
"RTN","SCMCHLR9",10,0)
 K ^TMP(SCARRAY,$J)
"RTN","SCMCHLR9",11,0)
 S (QUIT,PAGE)=0
"RTN","SCMCHLR9",12,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","SCMCHLR9",13,0)
 ;
"RTN","SCMCHLR9",14,0)
 ;Get PCMM HL7 Transmission Log errors
"RTN","SCMCHLR9",15,0)
 D GET^SCMCHLR2(SCARRAY,$G(SCRP("BEGIN")),$G(SCRP("END")),$G(SCRP("EPS")),$G(SCRP("SORT")))
"RTN","SCMCHLR9",16,0)
 ;
"RTN","SCMCHLR9",17,0)
 U IO
"RTN","SCMCHLR9",18,0)
 I CRT,PAGE=0 W @IOF
"RTN","SCMCHLR9",19,0)
 S PAGE=1
"RTN","SCMCHLR9",20,0)
 D HEADER
"RTN","SCMCHLR9",21,0)
 D PRINTERR($G(SCRP("SORT")),$G(SCRP("EPS")))
"RTN","SCMCHLR9",22,0)
 I CRT,'QUIT D PAUSE
"RTN","SCMCHLR9",23,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","SCMCHLR9",24,0)
 D ^%ZISC
"RTN","SCMCHLR9",25,0)
 ;
"RTN","SCMCHLR9",26,0)
 K ^TMP(SCARRAY,$J)
"RTN","SCMCHLR9",27,0)
 Q
"RTN","SCMCHLR9",28,0)
 ;
"RTN","SCMCHLR9",29,0)
LINE(LINE) ;
"RTN","SCMCHLR9",30,0)
 ; Description: Prints a line. First prints header if at end of page.
"RTN","SCMCHLR9",31,0)
 ;
"RTN","SCMCHLR9",32,0)
 I CRT,($Y>(IOSL-4)) D
"RTN","SCMCHLR9",33,0)
 .D PAUSE
"RTN","SCMCHLR9",34,0)
 .Q:QUIT
"RTN","SCMCHLR9",35,0)
 .W @IOF
"RTN","SCMCHLR9",36,0)
 .D HEADER
"RTN","SCMCHLR9",37,0)
 .W LINE
"RTN","SCMCHLR9",38,0)
 ;
"RTN","SCMCHLR9",39,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","SCMCHLR9",40,0)
 .W @IOF
"RTN","SCMCHLR9",41,0)
 .D HEADER
"RTN","SCMCHLR9",42,0)
 .W LINE
"RTN","SCMCHLR9",43,0)
 ;
"RTN","SCMCHLR9",44,0)
 E  W !,LINE
"RTN","SCMCHLR9",45,0)
 Q
"RTN","SCMCHLR9",46,0)
 ;
"RTN","SCMCHLR9",47,0)
 ;
"RTN","SCMCHLR9",48,0)
HEADER ; Description: Prints the report header.
"RTN","SCMCHLR9",49,0)
 ;
"RTN","SCMCHLR9",50,0)
 N LINE,X
"RTN","SCMCHLR9",51,0)
 I $Y>1 W @IOF
"RTN","SCMCHLR9",52,0)
 W !,"PCMM Transmission Error Report"
"RTN","SCMCHLR9",53,0)
 W ?33,"Run Date: "_$$FMTE^XLFDT($$NOW^XLFDT,"1P")
"RTN","SCMCHLR9",54,0)
 W ?70,"Page ",PAGE
"RTN","SCMCHLR9",55,0)
 S PAGE=PAGE+1
"RTN","SCMCHLR9",56,0)
 W !
"RTN","SCMCHLR9",57,0)
 S X=$G(SCRP("SORT"))
"RTN","SCMCHLR9",58,0)
 W !,"Sort By: "_$S(X="N":"Patient Name",X="D":"Date Error Received",X="P":"Provider",1:"Unknown")
"RTN","SCMCHLR9",59,0)
 I SCRP("BEGIN") D
"RTN","SCMCHLR9",60,0)
 .W ?40,"Date Range: "_$$FMTE^XLFDT(SCRP("BEGIN"))_" to "_$$FMTE^XLFDT($G(SCRP("END")))
"RTN","SCMCHLR9",61,0)
 E  D
"RTN","SCMCHLR9",62,0)
 .W ?40,"Date Range: "_$$DRMSG^SCMCHLR1
"RTN","SCMCHLR9",63,0)
 S X=$G(SCRP("EPS"))
"RTN","SCMCHLR9",64,0)
 W !,"Error Processing Status: "_$S(X=1:"New",X=2:"Checked",X=3:"New/Checked",1:"Unknown")
"RTN","SCMCHLR9",65,0)
 W ?40,$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR9",66,0)
 W !
"RTN","SCMCHLR9",67,0)
 ;
"RTN","SCMCHLR9",68,0)
 W !?2,"Patient Name",?23,"PATID",?31,"Date Rec",?42,"Provider",?63,"Type",?70,"EP Status"
"RTN","SCMCHLR9",69,0)
 S $P(LINE,"-",80)="-"
"RTN","SCMCHLR9",70,0)
 W !,LINE,!
"RTN","SCMCHLR9",71,0)
 Q
"RTN","SCMCHLR9",72,0)
 ;
"RTN","SCMCHLR9",73,0)
 ;
"RTN","SCMCHLR9",74,0)
PAUSE ; Description: Screen pause.  Sets QUIT=1 if user decides to quit.
"RTN","SCMCHLR9",75,0)
 ;
"RTN","SCMCHLR9",76,0)
 N DIR,X,Y
"RTN","SCMCHLR9",77,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","SCMCHLR9",78,0)
 S DIR(0)="E"
"RTN","SCMCHLR9",79,0)
 D ^DIR
"RTN","SCMCHLR9",80,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","SCMCHLR9",81,0)
 Q
"RTN","SCMCHLR9",82,0)
 ;
"RTN","SCMCHLR9",83,0)
 ;
"RTN","SCMCHLR9",84,0)
PRINTERR(SCSORTBY,SCEPS) ; Description: Print list of errors.
"RTN","SCMCHLR9",85,0)
 ;
"RTN","SCMCHLR9",86,0)
 ;  Input:
"RTN","SCMCHLR9",87,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR9",88,0)
 ;               N -> Patient Name
"RTN","SCMCHLR9",89,0)
 ;               D -> Date/Time Ack Received
"RTN","SCMCHLR9",90,0)
 ;               P -> Provider
"RTN","SCMCHLR9",91,0)
 ;      SCEPS -  Error processing status
"RTN","SCMCHLR9",92,0)
 ;
"RTN","SCMCHLR9",93,0)
 ; Output: None
"RTN","SCMCHLR9",94,0)
 ;
"RTN","SCMCHLR9",95,0)
 N DFN,SCSUB,SCLINE,SCTXT,SCTLIEN,SCERIEN,SCTLOG,SCPROV,SCTYPE
"RTN","SCMCHLR9",96,0)
 ;
"RTN","SCMCHLR9",97,0)
 ;Loop thru sort array by pat name, OR date ack rec'd, OR provider
"RTN","SCMCHLR9",98,0)
 S SCSUB=$S(SCSORTBY="N":"",SCSORTBY="P":"",1:0)
"RTN","SCMCHLR9",99,0)
 F  S SCSUB=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB)) Q:SCSUB=""  D
"RTN","SCMCHLR9",100,0)
 .;loop through PCMM HL7 Transmission Log ien(s)
"RTN","SCMCHLR9",101,0)
 .S SCTLIEN=0
"RTN","SCMCHLR9",102,0)
 .F  S SCTLIEN=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB,SCTLIEN)) Q:'SCTLIEN  D
"RTN","SCMCHLR9",103,0)
 ..;loop through Error Code subfile ien(s)
"RTN","SCMCHLR9",104,0)
 ..S SCERIEN=0
"RTN","SCMCHLR9",105,0)
 ..F  S SCERIEN=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB,SCTLIEN,SCERIEN)) Q:'SCERIEN  D  Q:QUIT
"RTN","SCMCHLR9",106,0)
 ...;
"RTN","SCMCHLR9",107,0)
 ...;get data for PCMM HL7 Trans Log entry
"RTN","SCMCHLR9",108,0)
 ...I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR9",109,0)
 ....;
"RTN","SCMCHLR9",110,0)
 ....;set retransmit flag in line
"RTN","SCMCHLR9",111,0)
 ....S SCLINE=$S($G(SCTLOG("STATUS"))="M":"*",1:" ")
"RTN","SCMCHLR9",112,0)
 ....;
"RTN","SCMCHLR9",113,0)
 ....;set patient name in line
"RTN","SCMCHLR9",114,0)
 ....S SCTXT=$$LOWER^VALM1($S($G(SCTLOG("DFN")):$P($G(^DPT(SCTLOG("DFN"),0)),"^",1),1:"UNKNOWN"))
"RTN","SCMCHLR9",115,0)
 ....S SCLINE=SCLINE_" "_$$LJ(SCTXT,18)
"RTN","SCMCHLR9",116,0)
 ....;
"RTN","SCMCHLR9",117,0)
 ....;set patient id in line
"RTN","SCMCHLR9",118,0)
 ....S DFN=+SCTLOG("DFN") D PID^VADPT
"RTN","SCMCHLR9",119,0)
 ....;D SET(SCARY,SCLINE,VA("BID"),SCCOL("PATID"),SCWID("PATID"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR9",120,0)
 ....S SCLINE=SCLINE_"   "_$$LJ(VA("BID"),5)
"RTN","SCMCHLR9",121,0)
 ....;
"RTN","SCMCHLR9",122,0)
 ....;set date ack received in line
"RTN","SCMCHLR9",123,0)
 ....S SCTXT=$$LOWER^VALM1($S($G(SCTLOG("ACK DT/TM")):$E($$FDATE^VALM1(SCTLOG("ACK DT/TM")),1,8),1:"UNKNOWN"))
"RTN","SCMCHLR9",124,0)
 ....S SCLINE=SCLINE_"   "_$$LJ(SCTXT,8)
"RTN","SCMCHLR9",125,0)
 ....;
"RTN","SCMCHLR9",126,0)
 ....;set provider in display in line
"RTN","SCMCHLR9",127,0)
 ....K SCHL
"RTN","SCMCHLR9",128,0)
 ....S SCPROV=""
"RTN","SCMCHLR9",129,0)
 ....;only get provider if ZPC segment error
"RTN","SCMCHLR9",130,0)
 ....I $G(SCTLOG("ERR","SEG"))="ZPC" D
"RTN","SCMCHLR9",131,0)
 .....I $$GETHL7ID^SCMCHLA2($G(SCTLOG("ERR","ZPCID")),.SCHL)
"RTN","SCMCHLR9",132,0)
 .....S SCPTR=$P($G(SCHL("HL7ID")),"-",2)
"RTN","SCMCHLR9",133,0)
 .....S SCPROV=$P($G(^SCTM(404.52,+$G(SCPTR),0)),"^",3)
"RTN","SCMCHLR9",134,0)
 ....S SCTXT=$$LOWER^VALM1($S($G(SCPROV)'="":$$EXTERNAL^DILFD(404.52,.03,,SCPROV),1:"N/A"))
"RTN","SCMCHLR9",135,0)
 ....S SCLINE=SCLINE_"   "_$$LJ(SCTXT,18)
"RTN","SCMCHLR9",136,0)
 ....;
"RTN","SCMCHLR9",137,0)
 ....;set provider type in line
"RTN","SCMCHLR9",138,0)
 ....S SCTYPE=$P($G(SCHL("HL7ID")),"-",4)
"RTN","SCMCHLR9",139,0)
 ....S SCTXT=$S(SCTYPE'="":SCTYPE,1:"N/A")
"RTN","SCMCHLR9",140,0)
 ....S SCLINE=SCLINE_"   "_$$LJ(SCTXT,4)
"RTN","SCMCHLR9",141,0)
 ....;
"RTN","SCMCHLR9",142,0)
 ....;set error processing status in line
"RTN","SCMCHLR9",143,0)
 ....S SCTXT=$$LOWER^VALM1($S($G(SCTLOG("ERR","EPS")):$$EXTERNAL^DILFD(404.47142,.06,,SCTLOG("ERR","EPS")),1:"UNKNOWN"))
"RTN","SCMCHLR9",144,0)
 ....S SCLINE=SCLINE_"   "_$$LJ(SCTXT,7)
"RTN","SCMCHLR9",145,0)
 ....;
"RTN","SCMCHLR9",146,0)
 ....D LINE(SCLINE) Q:QUIT
"RTN","SCMCHLR9",147,0)
 ....;
"RTN","SCMCHLR9",148,0)
 ....;set error code/desc in line
"RTN","SCMCHLR9",149,0)
 ....I $$GETEC^SCMCHLA2($G(SCTLOG("ERR","CODE")),.SCERR)
"RTN","SCMCHLR9",150,0)
 ....S SCTXT="     Error: "_$S($G(SCERR("CODE"))'="":SCERR("CODE")_"-"_$G(SCERR("SHORT")),1:$$LOWER^VALM1("UNKNOWN"))
"RTN","SCMCHLR9",151,0)
 ....S SCLINE=$$LJ(SCTXT,80)
"RTN","SCMCHLR9",152,0)
 ....D LINE(SCLINE) Q:QUIT
"RTN","SCMCHLR9",153,0)
 ;
"RTN","SCMCHLR9",154,0)
 Q
"RTN","SCMCHLR9",155,0)
 ;
"RTN","SCMCHLR9",156,0)
 ;
"RTN","SCMCHLR9",157,0)
LJ(STRING,LENGTH) ;
"RTN","SCMCHLR9",158,0)
 ;
"RTN","SCMCHLR9",159,0)
 Q $$LJ^XLFSTR($E(STRING,1,LENGTH),LENGTH)
"RTN","SCMCHLRI")
0^18^B21337367
"RTN","SCMCHLRI",1,0)
SCMCHLRI ;BP/DJB - PCMM HL7 Rejects - Identify & Store Msg ; 2/28/00 12:10pm
"RTN","SCMCHLRI",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLRI",3,0)
 ;
"RTN","SCMCHLRI",4,0)
ACK ;Identify an acknowledgment message
"RTN","SCMCHLRI",5,0)
 ;
"RTN","SCMCHLRI",6,0)
 ;HL7 Message:
"RTN","SCMCHLRI",7,0)
 ;   ACK Code..........: Segment MSA, fld 1
"RTN","SCMCHLRI",8,0)
 ;   Msg ID............: Segment MSA, fld 2
"RTN","SCMCHLRI",9,0)
 ;   Segment code......: Segment ERR, fld 2, component 1
"RTN","SCMCHLRI",10,0)
 ;   Sequence..........: Segment ERR, fld 2, component 2
"RTN","SCMCHLRI",11,0)
 ;   Field Position....: Segment ERR, fld 2, component 3
"RTN","SCMCHLRI",12,0)
 ;   Error code........: Segment ERR, fld 2, component 4
"RTN","SCMCHLRI",13,0)
 ;
"RTN","SCMCHLRI",14,0)
 NEW ARRAY,CS,FS,RS
"RTN","SCMCHLRI",15,0)
 ;
"RTN","SCMCHLRI",16,0)
 S CS=$E(HL("ECH"),1) ;..Component separator
"RTN","SCMCHLRI",17,0)
 S RS=$E(HL("ECH"),2) ;..Repetition separator
"RTN","SCMCHLRI",18,0)
 S FS=HL("FS") ;.........Field separator
"RTN","SCMCHLRI",19,0)
 ;
"RTN","SCMCHLRI",20,0)
 D PARSE ;Build array
"RTN","SCMCHLRI",21,0)
 Q:'$D(ARRAY)
"RTN","SCMCHLRI",22,0)
 D UPDATE ;Update PCMM HL7 TRANSISSION LOG file
"RTN","SCMCHLRI",23,0)
 Q
"RTN","SCMCHLRI",24,0)
 ;
"RTN","SCMCHLRI",25,0)
PARSE ;Parse ACK message.
"RTN","SCMCHLRI",26,0)
 ;Build array:
"RTN","SCMCHLRI",27,0)
 ;   ARRAY("MSA","MSGID")........= Message ID
"RTN","SCMCHLRI",28,0)
 ;   ARRAY("MSA","ACKCODE")......= ACK code
"RTN","SCMCHLRI",29,0)
 ;   ARRAY("ERR",counter,"SEG")..= Segment ID
"RTN","SCMCHLRI",30,0)
 ;   ARRAY("ERR",counter,"SEQ")..= Sequence #
"RTN","SCMCHLRI",31,0)
 ;   ARRAY("ERR",counter,"FLD")..= Field Position
"RTN","SCMCHLRI",32,0)
 ;   ARRAY("ERR",counter,"CODE").= Error code
"RTN","SCMCHLRI",33,0)
 ;
"RTN","SCMCHLRI",34,0)
 NEW CNTERR,MSGID,SEG,TXTFLD,TXTREP
"RTN","SCMCHLRI",35,0)
 ;
"RTN","SCMCHLRI",36,0)
 F  X HLNEXT Q:(HLQUIT'>0)  D  ;
"RTN","SCMCHLRI",37,0)
 . S SEG=$P(HLNODE,FS,1) ;..Segment name
"RTN","SCMCHLRI",38,0)
 . ;
"RTN","SCMCHLRI",39,0)
 . ;-> MSA segment
"RTN","SCMCHLRI",40,0)
 . I SEG="MSA" D  Q
"RTN","SCMCHLRI",41,0)
 .. S ARRAY("MSA","ACKCODE")=$P(HLNODE,FS,2)
"RTN","SCMCHLRI",42,0)
 .. S ARRAY("MSA","MSGID")=$P(HLNODE,FS,3)
"RTN","SCMCHLRI",43,0)
 . ;
"RTN","SCMCHLRI",44,0)
 . ;-> ERR segment
"RTN","SCMCHLRI",45,0)
 . I SEG="ERR" D  Q
"RTN","SCMCHLRI",46,0)
 .. S TXTFLD=$P(HLNODE,FS,2) ;..Repeating field
"RTN","SCMCHLRI",47,0)
 .. F CNTERR=1:1 S TXTREP=$P(TXTFLD,RS,CNTERR) Q:TXTREP=""  D  ;
"RTN","SCMCHLRI",48,0)
 ... S ARRAY("ERR",CNTERR,"SEG")=$P(TXTREP,CS,1)
"RTN","SCMCHLRI",49,0)
 ... ;Get Sequence # and strip off any leading zeros
"RTN","SCMCHLRI",50,0)
 ... S SEQ=$P(TXTREP,CS,2)
"RTN","SCMCHLRI",51,0)
 ... F  Q:($E(SEQ,1)'=0)  S SEQ=$E(SEQ,2,$L(SEQ))
"RTN","SCMCHLRI",52,0)
 ... S ARRAY("ERR",CNTERR,"SEQ")=SEQ
"RTN","SCMCHLRI",53,0)
 ... S ARRAY("ERR",CNTERR,"FLD")=$P(TXTREP,CS,3)
"RTN","SCMCHLRI",54,0)
 ... S ARRAY("ERR",CNTERR,"CODE")=$P(TXTREP,CS,4)
"RTN","SCMCHLRI",55,0)
 Q
"RTN","SCMCHLRI",56,0)
 ;
"RTN","SCMCHLRI",57,0)
UPDATE ;Update entry in PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLRI",58,0)
 NEW ACKCODE,ERRORI,MSGID,TRANI
"RTN","SCMCHLRI",59,0)
 S MSGID=ARRAY("MSA","MSGID")
"RTN","SCMCHLRI",60,0)
 S TRANI=$O(^SCPT(404.471,"B",MSGID,""))
"RTN","SCMCHLRI",61,0)
 Q:'$G(TRANI)
"RTN","SCMCHLRI",62,0)
 Q:'$D(^SCPT(404.471,TRANI))
"RTN","SCMCHLRI",63,0)
 S ACKCODE=ARRAY("MSA","ACKCODE")
"RTN","SCMCHLRI",64,0)
 ;
"RTN","SCMCHLRI",65,0)
 ;Message processed.
"RTN","SCMCHLRI",66,0)
 I ACKCODE="AA" D STATUS(TRANI,"A") Q  ;Msg accepted
"RTN","SCMCHLRI",67,0)
 ;
"RTN","SCMCHLRI",68,0)
 ;Rejected for reasons unrelated to content.
"RTN","SCMCHLRI",69,0)
 I ACKCODE="AR" D STATUS(TRANI,"M") Q  ;Msg marked for re-transmit
"RTN","SCMCHLRI",70,0)
 ;
"RTN","SCMCHLRI",71,0)
 ;Rejected - error information provided.
"RTN","SCMCHLRI",72,0)
 I ACKCODE="AE" D  Q
"RTN","SCMCHLRI",73,0)
 . D STATUS(TRANI,"RJ") ;Msg rejected
"RTN","SCMCHLRI",74,0)
 . D STORE(TRANI)
"RTN","SCMCHLRI",75,0)
 Q
"RTN","SCMCHLRI",76,0)
 ;
"RTN","SCMCHLRI",77,0)
STATUS(TRANI,STATUS) ;Update STATUS field in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLRI",78,0)
 ; Input: TRANI - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLRI",79,0)
 ;       STATUS - A=Accepted, M=Marked for re-transmit, RJ=Rejected
"RTN","SCMCHLRI",80,0)
 ;
"RTN","SCMCHLRI",81,0)
 NEW SCERR,SCFDA,SCIENS
"RTN","SCMCHLRI",82,0)
 Q:'$G(TRANI)
"RTN","SCMCHLRI",83,0)
 Q:",A,M,RJ,"'[(","_$G(STATUS)_",")
"RTN","SCMCHLRI",84,0)
 S SCIENS=TRANI_","
"RTN","SCMCHLRI",85,0)
 S SCFDA(404.471,SCIENS,.04)=STATUS ;.........Status
"RTN","SCMCHLRI",86,0)
 S SCFDA(404.471,SCIENS,.05)=$$NOW^XLFDT() ;..ACK received date
"RTN","SCMCHLRI",87,0)
 D FILE^DIE("I","SCFDA","SCERR")
"RTN","SCMCHLRI",88,0)
 Q
"RTN","SCMCHLRI",89,0)
 ;
"RTN","SCMCHLRI",90,0)
STORE(TRANI) ;Store data from "ERR" and "ZER" arrays
"RTN","SCMCHLRI",91,0)
 ;
"RTN","SCMCHLRI",92,0)
 ; Input: TRANI - IEN of PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLRI",93,0)
 ;Output: None
"RTN","SCMCHLRI",94,0)
 ;
"RTN","SCMCHLRI",95,0)
 NEW SCERR,SCIEN,SCIENS,SCIENS1,SCFDA
"RTN","SCMCHLRI",96,0)
 NEW CNT,ERRORI,FLD,SEG,SEQ,ZPCID
"RTN","SCMCHLRI",97,0)
 ;
"RTN","SCMCHLRI",98,0)
 S CNT=0
"RTN","SCMCHLRI",99,0)
 F  S CNT=$O(ARRAY("ERR",CNT)) Q:'CNT  D  ;
"RTN","SCMCHLRI",100,0)
 . ;
"RTN","SCMCHLRI",101,0)
 . ;Create entry in ERROR CODE multiple field
"RTN","SCMCHLRI",102,0)
 . S ERRORI=$$CREATE(ARRAY("ERR",CNT,"CODE"),CNT,TRANI)
"RTN","SCMCHLRI",103,0)
 . Q:+ERRORI<0
"RTN","SCMCHLRI",104,0)
 . ;
"RTN","SCMCHLRI",105,0)
 . S SEG=$G(ARRAY("ERR",CNT,"SEG")) ;..Segment
"RTN","SCMCHLRI",106,0)
 . S SEQ=$G(ARRAY("ERR",CNT,"SEQ")) ;..Sequence number
"RTN","SCMCHLRI",107,0)
 . S FLD=$G(ARRAY("ERR",CNT,"FLD")) ;..Field Position
"RTN","SCMCHLRI",108,0)
 . S ZPCID=""
"RTN","SCMCHLRI",109,0)
 . I SEG="ZPC" D  ;..ZPC ID
"RTN","SCMCHLRI",110,0)
 .. Q:'SEQ
"RTN","SCMCHLRI",111,0)
 .. S SEQI=$O(^SCPT(404.471,TRANI,"ZPC","B",SEQ,""))
"RTN","SCMCHLRI",112,0)
 .. Q:'SEQI
"RTN","SCMCHLRI",113,0)
 .. S ZPCID=$P($G(^SCPT(404.471,TRANI,"ZPC",SEQI,0)),"^",2)
"RTN","SCMCHLRI",114,0)
 . ;
"RTN","SCMCHLRI",115,0)
 . S SCIENS=ERRORI_","_TRANI_","
"RTN","SCMCHLRI",116,0)
 . S SCFDA(404.47142,SCIENS,.02)=SEG
"RTN","SCMCHLRI",117,0)
 . S SCFDA(404.47142,SCIENS,.03)=SEQ
"RTN","SCMCHLRI",118,0)
 . S SCFDA(404.47142,SCIENS,.04)=FLD
"RTN","SCMCHLRI",119,0)
 . S SCFDA(404.47142,SCIENS,.05)=ZPCID
"RTN","SCMCHLRI",120,0)
 . S SCFDA(404.47142,SCIENS,.06)=1
"RTN","SCMCHLRI",121,0)
 . D FILE^DIE("I","SCFDA","SCERR")
"RTN","SCMCHLRI",122,0)
 . KILL SCFDA,SCERR
"RTN","SCMCHLRI",123,0)
 Q
"RTN","SCMCHLRI",124,0)
 ;
"RTN","SCMCHLRI",125,0)
CREATE(ERRORCD,CNT,TRANI) ;Create an entry in the ERROR CODE multiiple field
"RTN","SCMCHLRI",126,0)
 ; Input: ERRORCD - Error code
"RTN","SCMCHLRI",127,0)
 ;        CNT     - Counter for multiple entries
"RTN","SCMCHLRI",128,0)
 ;Output: IEN to entry created
"RTN","SCMCHLRI",129,0)
 ;        -1^Error - Unable to create entry
"RTN","SCMCHLRI",130,0)
 ;
"RTN","SCMCHLRI",131,0)
 NEW IENS,SCERR,SCFDA,SCIEN
"RTN","SCMCHLRI",132,0)
 S:'$G(CNT) CNT=1
"RTN","SCMCHLRI",133,0)
 S IENS="+"_CNT_","_TRANI_","
"RTN","SCMCHLRI",134,0)
 S SCFDA(404.47142,IENS,.01)=ERRORCD
"RTN","SCMCHLRI",135,0)
 D UPDATE^DIE("E","SCFDA","SCIEN","SCERR")
"RTN","SCMCHLRI",136,0)
 I $D(SCERR) Q "-1^Unable to create entry in ERROR CODE field"
"RTN","SCMCHLRI",137,0)
 Q SCIEN(CNT)
"RTN","SCMCHLRI",138,0)
 ;
"RTN","SCMCHLRI",139,0)
CONVERT(ID) ;If ID is from an integrated site, convert it to local ID.
"RTN","SCMCHLRI",140,0)
 ;Input: ID="Site#-404.49 IEN"  (Example: 642-3456)
"RTN","SCMCHLRI",141,0)
 ;
"RTN","SCMCHLRI",142,0)
 I $D(^SCPT(404.49,"C",ID)) D   ;....See if ID is an Integration ID
"RTN","SCMCHLRI",143,0)
 . S ID=$O(^SCPT(404.49,"C",ID,"")) ;..If so, convert it to local ID
"RTN","SCMCHLRI",144,0)
 E  S ID=$P(ID,"-",2)
"RTN","SCMCHLRI",145,0)
 Q ID
"RTN","SCMCHLRI",146,0)
 ;
"RTN","SCMCHLRI",147,0)
 ;==================================================================
"RTN","SCMCHLRI",148,0)
 ;
"RTN","SCMCHLRI",149,0)
HL7SAMP ;Sample code to view HL7 message
"RTN","SCMCHLRI",150,0)
 NEW I,J
"RTN","SCMCHLRI",151,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  D  ;
"RTN","SCMCHLRI",152,0)
 . S ^TMP("DJB",$J,I)=HLNODE
"RTN","SCMCHLRI",153,0)
 . S J=0
"RTN","SCMCHLRI",154,0)
 . ;Get segments greater than 245 characters
"RTN","SCMCHLRI",155,0)
 . F  S J=$O(HLNODE(J)) Q:'J  S ^TMP("DJB",$J,I,J)=HLNODE(J)
"RTN","SCMCHLRI",156,0)
 Q
"RTN","SCMCHLRR")
0^19^B19223493
"RTN","SCMCHLRR",1,0)
SCMCHLRR ;BP/DJB - PCMM HL7 Rejects - Resubmit ; 3/6/00 12:14pm
"RTN","SCMCHLRR",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SCMCHLRR",3,0)
 ;
"RTN","SCMCHLRR",4,0)
EN ;
"RTN","SCMCHLRR",5,0)
 NEW DFN,SCDELETE,VARPTR
"RTN","SCMCHLRR",6,0)
 NEW MSGCNT,SCFAC,SCSEQ
"RTN","SCMCHLRR",7,0)
 ;
"RTN","SCMCHLRR",8,0)
 ;Send notification msg if new HL7 reject transmissions received
"RTN","SCMCHLRR",9,0)
 D NOTIFY^SCMCHLM
"RTN","SCMCHLRR",10,0)
 ;
"RTN","SCMCHLRR",11,0)
 ;Initialize variables needed by GENERATE^SCMCHLG
"RTN","SCMCHLRR",12,0)
 S SCFAC=+$P($$SITE^VASITE(),"^",3) ;..Facility number
"RTN","SCMCHLRR",13,0)
 S MSGCNT=0 ;..........................Message count
"RTN","SCMCHLRR",14,0)
 ;
"RTN","SCMCHLRR",15,0)
 ;Loop thru PCMM HL7 TRANSMISSION LOG and resubmit items
"RTN","SCMCHLRR",16,0)
 D LOOP
"RTN","SCMCHLRR",17,0)
 ;
"RTN","SCMCHLRR",18,0)
EXIT ;
"RTN","SCMCHLRR",19,0)
 Q
"RTN","SCMCHLRR",20,0)
 ;
"RTN","SCMCHLRR",21,0)
 ;
"RTN","SCMCHLRR",22,0)
LOOP ;Loop thru PCMM HL7 TRANSMISSION LOG file and find every entry
"RTN","SCMCHLRR",23,0)
 ;with STATUS="M", and re-transmit.
"RTN","SCMCHLRR",24,0)
 ;
"RTN","SCMCHLRR",25,0)
 NEW TRANI
"RTN","SCMCHLRR",26,0)
 S TRANI=0
"RTN","SCMCHLRR",27,0)
 F  S TRANI=$O(^SCPT(404.471,"ASTAT","M",TRANI)) Q:'TRANI  D  ;
"RTN","SCMCHLRR",28,0)
 . D GETDATA(TRANI)  ;..Get DFN,VARPTR,SCDELETE
"RTN","SCMCHLRR",29,0)
 . ;rpm/alb - Missing ZPC segment messages will not retransmit.
"RTN","SCMCHLRR",30,0)
 . ;          Clear the entry by setting status to "RT".
"RTN","SCMCHLRR",31,0)
 . I VARPTR="" D STATUS(TRANI,"RT") Q
"RTN","SCMCHLRR",32,0)
 . D RETRAN ;.......................Re-transmit message
"RTN","SCMCHLRR",33,0)
 Q
"RTN","SCMCHLRR",34,0)
GETDATA(TRANI) ;Get DFN & VARPTR from PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLRR",35,0)
 ; Input:
"RTN","SCMCHLRR",36,0)
 ;    TRANI    - IEN to file PCMM HL7 TRANSMISSION LOG file (#404.471)
"RTN","SCMCHLRR",37,0)
 ;Output:
"RTN","SCMCHLRR",38,0)
 ;    DFN      - Patient IEN
"RTN","SCMCHLRR",39,0)
 ;    VARPTR   - Variable pointer to 404.43 (ex: "2404;SCPT(404.43,")
"RTN","SCMCHLRR",40,0)
 ;    SCDELETE - Flag to process a delete
"RTN","SCMCHLRR",41,0)
 ;
"RTN","SCMCHLRR",42,0)
 NEW IDI,IDLONG,ND,PTPI
"RTN","SCMCHLRR",43,0)
 ;
"RTN","SCMCHLRR",44,0)
 ;Initialize return variables
"RTN","SCMCHLRR",45,0)
 S (DFN,VARPTR)=""
"RTN","SCMCHLRR",46,0)
 S SCDELETE=0
"RTN","SCMCHLRR",47,0)
 ;
"RTN","SCMCHLRR",48,0)
 S IDI=$O(^SCPT(404.471,TRANI,"ZPC","C",0)) Q:'IDI
"RTN","SCMCHLRR",49,0)
 S ND=$G(^SCPT(404.49,IDI,0)) ;............PCMM HL7 ID zero node
"RTN","SCMCHLRR",50,0)
 S IDLONG=$P(ND,U,1) ;.....................Get long form of ID
"RTN","SCMCHLRR",51,0)
 S DFN=$P(ND,U,2) ;........................Get patient
"RTN","SCMCHLRR",52,0)
 S PTPI=$P(IDLONG,"-",1) ;.................File 404.43 IEN
"RTN","SCMCHLRR",53,0)
 Q:'PTPI
"RTN","SCMCHLRR",54,0)
 I '$D(^SCPT(404.43,PTPI)) S SCDELETE=1 ;..Flag to process a delete
"RTN","SCMCHLRR",55,0)
 S VARPTR=PTPI_";SCPT(404.43," ;...........Create event pointer
"RTN","SCMCHLRR",56,0)
 Q
"RTN","SCMCHLRR",57,0)
 ;
"RTN","SCMCHLRR",58,0)
RETRAN ;Re-transmit messages.
"RTN","SCMCHLRR",59,0)
 ;
"RTN","SCMCHLRR",60,0)
 NEW PT,PTPI,RESULT,XMITARRY
"RTN","SCMCHLRR",61,0)
 NEW HL,HLECH,HLEID,HLFS,HLQ
"RTN","SCMCHLRR",62,0)
 ;
"RTN","SCMCHLRR",63,0)
 ;Initialize array
"RTN","SCMCHLRR",64,0)
 S XMITARRY="^TMP(""PCMM"",""HL7"","_$J_")" ;..Segments
"RTN","SCMCHLRR",65,0)
 KILL @XMITARRY
"RTN","SCMCHLRR",66,0)
 ;
"RTN","SCMCHLRR",67,0)
 ;Get pointer to sending event
"RTN","SCMCHLRR",68,0)
 S HLEID=$$HLEID^SCMCHL()
"RTN","SCMCHLRR",69,0)
 I 'HLEID D  Q
"RTN","SCMCHLRR",70,0)
 . Q:$D(ZTQUEUED)
"RTN","SCMCHLRR",71,0)
 . W "Unable to initialize HL7 variables - protocol not found"
"RTN","SCMCHLRR",72,0)
 ;
"RTN","SCMCHLRR",73,0)
 ;Initialize HL7 variables
"RTN","SCMCHLRR",74,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","SCMCHLRR",75,0)
 I $O(HL(""))="" W:'$D(ZTQUEUED) $P(HL,"^",2) Q
"RTN","SCMCHLRR",76,0)
 ;
"RTN","SCMCHLRR",77,0)
 ;Build segment array
"RTN","SCMCHLRR",78,0)
 I $G(SCDELETE) D  I 1 ;....................Process a deletion
"RTN","SCMCHLRR",79,0)
 . S PTPI=$P(VARPTR,";",1)
"RTN","SCMCHLRR",80,0)
 . D PTPD^SCMCHLB2(PTPI)
"RTN","SCMCHLRR",81,0)
 E  D  I +RESULT<0 W $P(RESULT,"^",2) Q  ;..Process a normal entry
"RTN","SCMCHLRR",82,0)
 . S RESULT=$$BUILD^SCMCHLB(VARPTR,.HL,.XMITARRY)
"RTN","SCMCHLRR",83,0)
 . I +RESULT<0,'$D(ZTQUEUED) W $P(RESULT,"^",2)
"RTN","SCMCHLRR",84,0)
 ;
"RTN","SCMCHLRR",85,0)
 ;Generate message
"RTN","SCMCHLRR",86,0)
 S RESULT=$$GENERATE^SCMCHLG()
"RTN","SCMCHLRR",87,0)
 ;
"RTN","SCMCHLRR",88,0)
 KILL @XMITARRY
"RTN","SCMCHLRR",89,0)
 Q:'$G(RESULT)  ;No messages generated
"RTN","SCMCHLRR",90,0)
 D STATUS(TRANI,"RT") ;..Change STATUS to RT
"RTN","SCMCHLRR",91,0)
 W:'$D(ZTQUEUED) !,"Message re-transmitted..."
"RTN","SCMCHLRR",92,0)
 Q
"RTN","SCMCHLRR",93,0)
 ;
"RTN","SCMCHLRR",94,0)
STATUS(TRANI,STATUS) ;Update STATUS field in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLRR",95,0)
 ; Input: TRANI - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLRR",96,0)
 ;       STATUS - A=Accepted, M=Marked for re-transmit, RJ=Rejected
"RTN","SCMCHLRR",97,0)
 ;
"RTN","SCMCHLRR",98,0)
 NEW SCERR,SCFDA,SCIENS
"RTN","SCMCHLRR",99,0)
 Q:'$G(TRANI)
"RTN","SCMCHLRR",100,0)
 Q:($G(STATUS)']"")
"RTN","SCMCHLRR",101,0)
 S SCIENS=TRANI_","
"RTN","SCMCHLRR",102,0)
 S SCFDA(404.471,SCIENS,.04)=STATUS ;..Status
"RTN","SCMCHLRR",103,0)
 D FILE^DIE("I","SCFDA","SCERR")
"RTN","SCMCHLRR",104,0)
 Q
"RTN","SCMCHLRR",105,0)
 ;
"RTN","SCMCHLRR",106,0)
AUTO ;Auto retransmit messages that have not received an ACK.
"RTN","SCMCHLRR",107,0)
 ;Check all messages with a STATUS of "Transmitted" and see if
"RTN","SCMCHLRR",108,0)
 ;they've received an ACK. Then compare their transmit date to the
"RTN","SCMCHLRR",109,0)
 ;date in PCMM PARAMETER file HL7 TRANSMIT PERIOD field.
"RTN","SCMCHLRR",110,0)
 ;
"RTN","SCMCHLRR",111,0)
 NEW DAYSMAX,DAYSDIFF,ND,TODAY,TRANDT,TRANI
"RTN","SCMCHLRR",112,0)
 NEW DFN,SCDELETE,VARPTR
"RTN","SCMCHLRR",113,0)
 NEW MSGCNT,SCFAC,SCSEQ
"RTN","SCMCHLRR",114,0)
 ;
"RTN","SCMCHLRR",115,0)
 ;Initialize variables needed by GENERATE^SCMCHLG
"RTN","SCMCHLRR",116,0)
 S SCFAC=+$P($$SITE^VASITE(),"^",3) ;..Facility number
"RTN","SCMCHLRR",117,0)
 S MSGCNT=0 ;..........................Message count
"RTN","SCMCHLRR",118,0)
 ;
"RTN","SCMCHLRR",119,0)
 S TODAY=$$DT^XLFDT()
"RTN","SCMCHLRR",120,0)
 ;Get max days from HL7 PARAMETER file
"RTN","SCMCHLRR",121,0)
 S DAYSMAX=$P($G(^SCTM(404.44,1,1)),U,6)
"RTN","SCMCHLRR",122,0)
 I DAYSMAX="" S DAYSMAX=7 ;Default of 7 days
"RTN","SCMCHLRR",123,0)
 ;
"RTN","SCMCHLRR",124,0)
 S TRANI=0
"RTN","SCMCHLRR",125,0)
 F  S TRANI=$O(^SCPT(404.471,"ASTAT","T",TRANI)) Q:'TRANI  D  ;
"RTN","SCMCHLRR",126,0)
 . S ND=$G(^SCPT(404.471,TRANI,0))
"RTN","SCMCHLRR",127,0)
 . Q:$P(ND,U,5)  ;........ACK already received
"RTN","SCMCHLRR",128,0)
 . S TRANDT=$P(ND,U,3) ;..Date Transmitted
"RTN","SCMCHLRR",129,0)
 . ;
"RTN","SCMCHLRR",130,0)
 . ;Get number of days between Today and Transmit Date.
"RTN","SCMCHLRR",131,0)
 . S DAYSDIFF=$$FMDIFF^XLFDT(TODAY,TRANDT,1)
"RTN","SCMCHLRR",132,0)
 . ;
"RTN","SCMCHLRR",133,0)
 . ;Quit if required number of days hasn't passed
"RTN","SCMCHLRR",134,0)
 . Q:(DAYSDIFF<DAYSMAX)
"RTN","SCMCHLRR",135,0)
 . ;
"RTN","SCMCHLRR",136,0)
 . D GETDATA(TRANI) Q:VARPTR=""  ;..Get DFN,VARPTR,SCDELETE
"RTN","SCMCHLRR",137,0)
 . D RETRAN ;.......................Re-transmit message
"RTN","SCMCHLRR",138,0)
 Q
"RTN","SCMCHLS")
0^26^B5339874
"RTN","SCMCHLS",1,0)
SCMCHLS ;BP/DJB - PCMM HL7 Segment Utils ; 12/13/99 12:40pm
"RTN","SCMCHLS",2,0)
 ;;5.3;Scheduling;**177,210**;AUG 13, 1993
"RTN","SCMCHLS",3,0)
 ;
"RTN","SCMCHLS",4,0)
 ;Ref rtn: SCDXMSG1
"RTN","SCMCHLS",5,0)
 ;
"RTN","SCMCHLS",6,0)
 ;--> Build HL7 segments
"RTN","SCMCHLS",7,0)
BLDEVN ;Build EVN segment
"RTN","SCMCHLS",8,0)
 S VAFEVN=$$EN^VAFHLEVN(EVNTHL7,EVNTDATE,VAFSTR,HL("Q"),HL("FS"))
"RTN","SCMCHLS",9,0)
 Q
"RTN","SCMCHLS",10,0)
BLDPID ;Build PID segment
"RTN","SCMCHLS",11,0)
 ;S VAFPID=$$EN^VAFHLPID(DFN,VAFSTR)
"RTN","SCMCHLS",12,0)
 S VAFPID=$$EN^VAFCPID(DFN,VAFSTR) ;Use CIRN version
"RTN","SCMCHLS",13,0)
 D SETMAR^SCMSVUT0("VAFPID","VAFPID",HL("Q"),HL("FS"))
"RTN","SCMCHLS",14,0)
 Q
"RTN","SCMCHLS",15,0)
BLDZPC ;Build ZPC segment
"RTN","SCMCHLS",16,0)
 ;djb/bp Patch 210. Sequentially number multiple ZPC segments.
"RTN","SCMCHLS",17,0)
 ;new code begin
"RTN","SCMCHLS",18,0)
 S SCSEQ=$G(SCSEQ)+1 ;Increment ZPC sequence number.
"RTN","SCMCHLS",19,0)
 S VAFZPC=$$ZPC^SCMCHLZ("",ID,DATA,SCSEQ)
"RTN","SCMCHLS",20,0)
 ;new code end
"RTN","SCMCHLS",21,0)
 ;old code begin
"RTN","SCMCHLS",22,0)
 ;S VAFZPC=$$ZPC^SCMCHLZ("",ID,DATA)
"RTN","SCMCHLS",23,0)
 ;old code end
"RTN","SCMCHLS",24,0)
 Q
"RTN","SCMCHLS",25,0)
 ;
"RTN","SCMCHLS",26,0)
 ;--> Copy HL7 segments into HL7 message
"RTN","SCMCHLS",27,0)
CPYEVN ;Copy EVN segment
"RTN","SCMCHLS",28,0)
 ;Add 1 as 3rd subscript so number of subscripts matches ZPC segment
"RTN","SCMCHLS",29,0)
 M @XMITARRY@(SUB,SEGNAME,1)=VAFEVN
"RTN","SCMCHLS",30,0)
 Q
"RTN","SCMCHLS",31,0)
CPYPID ;Copy PID segment
"RTN","SCMCHLS",32,0)
 ;Add 1 as 3rd subscript so number of subscripts matches ZPC segment
"RTN","SCMCHLS",33,0)
 M @XMITARRY@(SUB,SEGNAME,1)=VAFPID
"RTN","SCMCHLS",34,0)
 Q
"RTN","SCMCHLS",35,0)
CPYZPC ;Copy ZPC segment
"RTN","SCMCHLS",36,0)
 M @XMITARRY@($P(ID,"-",1),"ZPC",ID)=VAFZPC
"RTN","SCMCHLS",37,0)
 Q
"RTN","SCMCHLS",38,0)
 ;
"RTN","SCMCHLS",39,0)
 ;--> Delete HL7 segment variables
"RTN","SCMCHLS",40,0)
DELEVN ;Delete EVN variable
"RTN","SCMCHLS",41,0)
 KILL VAFEVN
"RTN","SCMCHLS",42,0)
 Q
"RTN","SCMCHLS",43,0)
DELPID ;Delete PID variable
"RTN","SCMCHLS",44,0)
 KILL VAFPID
"RTN","SCMCHLS",45,0)
 Q
"RTN","SCMCHLS",46,0)
DELZPC ;Delete ZPC variable
"RTN","SCMCHLS",47,0)
 KILL VAFZPC
"RTN","SCMCHLS",48,0)
 Q
"RTN","SCMCHLS",49,0)
 ;
"RTN","SCMCHLS",50,0)
SEGMENTS(EVNTTYPE,SEGARRY) ;Build list of HL7 segments for a given event type
"RTN","SCMCHLS",51,0)
 ;
"RTN","SCMCHLS",52,0)
 ; Input: EVNTTYPE - Event type to build list for A08 & A23 are the
"RTN","SCMCHLS",53,0)
 ;                   only types currently supported.
"RTN","SCMCHLS",54,0)
 ;                   Default=A08
"RTN","SCMCHLS",55,0)
 ;         SEGARRY - Array to place output in (full global reference)
"RTN","SCMCHLS",56,0)
 ;                   Defaul=^TMP("SCMC SEGMENTS",$J)
"RTN","SCMCHLS",57,0)
 ;Output: SEGARRY(Seq,Name)=Fields
"RTN","SCMCHLS",58,0)
 ;             Seq - Sequence number to order segments as they should
"RTN","SCMCHLS",59,0)
 ;                   be placed in the HL7 message.
"RTN","SCMCHLS",60,0)
 ;            Name - Name of HL7 segment.
"RTN","SCMCHLS",61,0)
 ;          Fields - List of fields used by PCMM. VAFSTR would be set
"RTN","SCMCHLS",62,0)
 ;                   to this value.
"RTN","SCMCHLS",63,0)
 ;  Note: MSH segment is not included
"RTN","SCMCHLS",64,0)
 ;
"RTN","SCMCHLS",65,0)
 ;Check input
"RTN","SCMCHLS",66,0)
 S EVNTTYPE=$G(EVNTTYPE)
"RTN","SCMCHLS",67,0)
 S:(EVNTTYPE'="A23") EVNTTYPE="A08"
"RTN","SCMCHLS",68,0)
 S SEGARRY=$G(SEGARRY)
"RTN","SCMCHLS",69,0)
 S:(SEGARRY="") SEGARRY="^TMP(""SCMC SEGMENTS"","_$J_")"
"RTN","SCMCHLS",70,0)
 ;
"RTN","SCMCHLS",71,0)
 ;Segments used by A08
"RTN","SCMCHLS",72,0)
 S @SEGARRY@(1,"EVN")="1,2"
"RTN","SCMCHLS",73,0)
 S @SEGARRY@(2,"PID")="1,2,3,4,5,6,7,8,10,11,12,13,14,16,17,19"
"RTN","SCMCHLS",74,0)
 S @SEGARRY@(3,"ZPC")="1,2,3,4,5,6"
"RTN","SCMCHLS",75,0)
 Q
"RTN","SCMCHLS",76,0)
 ;
"RTN","SCMCHLS",77,0)
UNWIND(XMITARRY,INSRTPNT) ;Remove all data that was put into transmit array.
"RTN","SCMCHLS",78,0)
 ;
"RTN","SCMCHLS",79,0)
 ; Input: XMITARRY - Array containing HL7 message (full global ref).
"RTN","SCMCHLS",80,0)
 ;                   Default=^TMP("HLS",$J).
"RTN","SCMCHLS",81,0)
 ;        INSRTPNT - Where to begin deletion from.
"RTN","SCMCHLS",82,0)
 ;                   Default=1
"RTN","SCMCHLS",83,0)
 ;Output: None
"RTN","SCMCHLS",84,0)
 ;
"RTN","SCMCHLS",85,0)
 ;Check input
"RTN","SCMCHLS",86,0)
 S:$G(XMITARRY)="" XMITARRY="^TMP(""HLS"","_$J_")"
"RTN","SCMCHLS",87,0)
 S:$G(INSRTPNT)="" INSRTPNT=1
"RTN","SCMCHLS",88,0)
 ;
"RTN","SCMCHLS",89,0)
 ;Remove insertion point from array
"RTN","SCMCHLS",90,0)
 KILL @XMITARRY@(INSRTPNT)
"RTN","SCMCHLS",91,0)
 ;Remove everything from insertion point to end of array
"RTN","SCMCHLS",92,0)
 F  S INSRTPNT=$O(@XMITARRY@(INSRTPNT)) Q:INSRTPNT=""  KILL @XMITARRY@(INSRTPNT)
"RTN","SCMCHLS",93,0)
 ;Done
"RTN","SCMCHLS",94,0)
 Q
"RTN","SCMCHLS",95,0)
COUNT(VALER) ;counts the number of errored encounters found.
"RTN","SCMCHLS",96,0)
 ;
"RTN","SCMCHLS",97,0)
 ; Input: VALER - Array containing error messages.
"RTN","SCMCHLS",98,0)
 ;Output: Number of errors
"RTN","SCMCHLS",99,0)
 ;
"RTN","SCMCHLS",100,0)
 NEW VAR,CNT
"RTN","SCMCHLS",101,0)
 S CNT=0
"RTN","SCMCHLS",102,0)
 S VAR=""
"RTN","SCMCHLS",103,0)
 F  S VAR=$O(@VALER@(VAR)) Q:VAR']""  S CNT=CNT+1
"RTN","SCMCHLS",104,0)
 Q CNT
"RTN","SCMCHLZ")
0^8^B13126286
"RTN","SCMCHLZ",1,0)
SCMCHLZ ;BP/DJB - PCMM HL7 Bld ZPC Segment ; 3/7/00 1:08pm
"RTN","SCMCHLZ",2,0)
 ;;5.3;Scheduling;**177,210**;AUG 13, 1993
"RTN","SCMCHLZ",3,0)
 ;
"RTN","SCMCHLZ",4,0)
ZPC(SCSTR,SCID,SCDATA,SCSEQ) ;Main entry point for building ZPC segment
"RTN","SCMCHLZ",5,0)
 ;
"RTN","SCMCHLZ",6,0)
 ;Input:
"RTN","SCMCHLZ",7,0)
 ;   SCSTR...: String of fields requested separated by commas
"RTN","SCMCHLZ",8,0)
 ;   SCID....: Provider Assignment ID. Unique ID string that
"RTN","SCMCHLZ",9,0)
 ;             Austin uses for the key field.
"RTN","SCMCHLZ",10,0)
 ;   SCDATA..: "^" Delimited string that contains all data needed
"RTN","SCMCHLZ",11,0)
 ;             to build a ZPC segment. If all pieces are "", Austin
"RTN","SCMCHLZ",12,0)
 ;             does a deletion.
"RTN","SCMCHLZ",13,0)
 ;               Format:
"RTN","SCMCHLZ",14,0)
 ;                 ProviderIEN^DateAssign^DateUnassign^Type
"RTN","SCMCHLZ",15,0)
 ;               Examples:
"RTN","SCMCHLZ",16,0)
 ;                 3^2980605^2990203^PCP
"RTN","SCMCHLZ",17,0)
 ;                 6^2980605^2990203^AP
"RTN","SCMCHLZ",18,0)
 ;                 ""^""^""^"" (deletion)
"RTN","SCMCHLZ",19,0)
 ;   SCSEQ...: Sequentially number multiple ZPC segments.
"RTN","SCMCHLZ",20,0)
 ;             djb/bp Patch 210.
"RTN","SCMCHLZ",21,0)
 ;Output:
"RTN","SCMCHLZ",22,0)
 ;   ZPC segment string.
"RTN","SCMCHLZ",23,0)
 ;
"RTN","SCMCHLZ",24,0)
 NEW CS,FS,QT,SCZPC,SS
"RTN","SCMCHLZ",25,0)
 ;
"RTN","SCMCHLZ",26,0)
 ;Initialize variables
"RTN","SCMCHLZ",27,0)
 D INIT
"RTN","SCMCHLZ",28,0)
 I $G(SCID)="" Q SCZPC
"RTN","SCMCHLZ",29,0)
 ;
"RTN","SCMCHLZ",30,0)
 I SCSTR[",1," D ID ;........Provider Assignment ID
"RTN","SCMCHLZ",31,0)
 I SCSTR[",2," D PROV ;......Provider
"RTN","SCMCHLZ",32,0)
 I SCSTR[",3," D PROVDA ;....Date provider assigned
"RTN","SCMCHLZ",33,0)
 I SCSTR[",4," D PROVDU ;....Date provider unassigned
"RTN","SCMCHLZ",34,0)
 I SCSTR[",5," D PROVT ;.....Provider Type code
"RTN","SCMCHLZ",35,0)
 I SCSTR[",6," D PROVPC ;....Provider Person Class
"RTN","SCMCHLZ",36,0)
 I $L(SCZPC)>245 D ADJUST ;..If length>245 add continuation node
"RTN","SCMCHLZ",37,0)
 Q SCZPC
"RTN","SCMCHLZ",38,0)
 ;
"RTN","SCMCHLZ",39,0)
ID ;Provider Assignment ID
"RTN","SCMCHLZ",40,0)
 ;Convert ID to IEN of file 404.49 since it's alot shorter.
"RTN","SCMCHLZ",41,0)
 ;ID format:
"RTN","SCMCHLZ",42,0)
 ;  IEN404.43 - IEN404.52 - IEN404.53 - AP/PCP
"RTN","SCMCHLZ",43,0)
 ;  Examples: "2290-405-34-PCP"
"RTN","SCMCHLZ",44,0)
 ;            "2290-406-0-AP"
"RTN","SCMCHLZ",45,0)
 ;
"RTN","SCMCHLZ",46,0)
 NEW FAC,ID,OLDID,SCERR,SCFDA,SCIEN
"RTN","SCMCHLZ",47,0)
 ;
"RTN","SCMCHLZ",48,0)
 ;
"RTN","SCMCHLZ",49,0)
 ;Find ID in PCMM HL7 ID file (404.49), and use IEN.
"RTN","SCMCHLZ",50,0)
 S ID=$O(^SCPT(404.49,"B",SCID,""))
"RTN","SCMCHLZ",51,0)
 ;
"RTN","SCMCHLZ",52,0)
 ;If ID not found, add it to 404.49 now.
"RTN","SCMCHLZ",53,0)
 I 'ID D  ;
"RTN","SCMCHLZ",54,0)
 . S SCFDA(404.49,"+1,",.01)=SCID
"RTN","SCMCHLZ",55,0)
 . D UPDATE^DIE("E","SCFDA","SCIEN","SCERR")
"RTN","SCMCHLZ",56,0)
 . S ID=$G(SCIEN(1))
"RTN","SCMCHLZ",57,0)
 ;
"RTN","SCMCHLZ",58,0)
 ;bp/djb Patch 210
"RTN","SCMCHLZ",59,0)
 ;New code begins
"RTN","SCMCHLZ",60,0)
 ;If this is a site integration entry, use old ID.
"RTN","SCMCHLZ",61,0)
 S FAC=SCFAC ;..Facility
"RTN","SCMCHLZ",62,0)
 S OLDID=$P($G(^SCPT(404.49,ID,0)),U,2)
"RTN","SCMCHLZ",63,0)
 I OLDID]"" D  ;
"RTN","SCMCHLZ",64,0)
 . S FAC=$P(OLDID,"-",1)
"RTN","SCMCHLZ",65,0)
 . S ID=$P(OLDID,"-",2)
"RTN","SCMCHLZ",66,0)
 ;New code ends
"RTN","SCMCHLZ",67,0)
 ;
"RTN","SCMCHLZ",68,0)
 ;Add ID to ZPC segment
"RTN","SCMCHLZ",69,0)
 S $P(SCZPC,FS,2)=FAC_"-"_ID
"RTN","SCMCHLZ",70,0)
 Q
"RTN","SCMCHLZ",71,0)
 ;
"RTN","SCMCHLZ",72,0)
PROV ;Provider
"RTN","SCMCHLZ",73,0)
 NEW PROV,PTR200,SCTMP,X
"RTN","SCMCHLZ",74,0)
 ;
"RTN","SCMCHLZ",75,0)
 S $P(SCZPC,FS,3)=QT
"RTN","SCMCHLZ",76,0)
 S PTR200=+SCDATA
"RTN","SCMCHLZ",77,0)
 Q:'PTR200
"RTN","SCMCHLZ",78,0)
 ;
"RTN","SCMCHLZ",79,0)
 ;Get External Provider ID
"RTN","SCMCHLZ",80,0)
 D PERSON^VAFHLRO3(PTR200,"SCTMP",QT)
"RTN","SCMCHLZ",81,0)
 Q:'$D(SCTMP)
"RTN","SCMCHLZ",82,0)
 S PROV=SCTMP(1,1)_SS_SCTMP(1,2)
"RTN","SCMCHLZ",83,0)
 F X=2:1:7 S $P(PROV,CS,X)=""
"RTN","SCMCHLZ",84,0)
 S $P(PROV,CS,8)=SCTMP(8)
"RTN","SCMCHLZ",85,0)
 F X=9:1:14 S $P(PROV,CS,X)=""
"RTN","SCMCHLZ",86,0)
 ;
"RTN","SCMCHLZ",87,0)
 ;Add provider to ZPC segment
"RTN","SCMCHLZ",88,0)
 S $P(SCZPC,FS,3)=PROV
"RTN","SCMCHLZ",89,0)
 Q
"RTN","SCMCHLZ",90,0)
 ;
"RTN","SCMCHLZ",91,0)
PROVDA ;Provider - Date Assigned
"RTN","SCMCHLZ",92,0)
 NEW DATE
"RTN","SCMCHLZ",93,0)
 S $P(SCZPC,FS,4)=QT
"RTN","SCMCHLZ",94,0)
 S DATE=$P(SCDATA,U,2)
"RTN","SCMCHLZ",95,0)
 Q:'DATE
"RTN","SCMCHLZ",96,0)
 S $P(SCZPC,FS,4)=$$HLDATE^HLFNC(DATE,"DT")
"RTN","SCMCHLZ",97,0)
 Q
"RTN","SCMCHLZ",98,0)
 ;
"RTN","SCMCHLZ",99,0)
PROVDU ;Provider - Date Unassigned
"RTN","SCMCHLZ",100,0)
 NEW DATE
"RTN","SCMCHLZ",101,0)
 S $P(SCZPC,FS,5)=QT
"RTN","SCMCHLZ",102,0)
 S DATE=$P(SCDATA,U,3)
"RTN","SCMCHLZ",103,0)
 Q:'DATE
"RTN","SCMCHLZ",104,0)
 S $P(SCZPC,FS,5)=$$HLDATE^HLFNC(DATE,"DT")
"RTN","SCMCHLZ",105,0)
 Q
"RTN","SCMCHLZ",106,0)
 ;
"RTN","SCMCHLZ",107,0)
PROVT ;Provider - Type code
"RTN","SCMCHLZ",108,0)
 NEW PT
"RTN","SCMCHLZ",109,0)
 S $P(SCZPC,FS,6)=QT
"RTN","SCMCHLZ",110,0)
 S PT=$P(SCDATA,U,4)
"RTN","SCMCHLZ",111,0)
 Q:PT']""
"RTN","SCMCHLZ",112,0)
 S $P(SCZPC,FS,6)=PT
"RTN","SCMCHLZ",113,0)
 Q
"RTN","SCMCHLZ",114,0)
 ;
"RTN","SCMCHLZ",115,0)
PROVPC ;Provider - Person Class
"RTN","SCMCHLZ",116,0)
 NEW CODE,PTR200
"RTN","SCMCHLZ",117,0)
 S $P(SCZPC,FS,7)=QT
"RTN","SCMCHLZ",118,0)
 S PTR200=+SCDATA
"RTN","SCMCHLZ",119,0)
 Q:'PTR200
"RTN","SCMCHLZ",120,0)
 S CODE=$$GET^XUA4A72(PTR200)
"RTN","SCMCHLZ",121,0)
 I CODE=-1!'CODE Q
"RTN","SCMCHLZ",122,0)
 S $P(SCZPC,FS,7)=$P(CODE,"^",7)_CS_CS_"VA8932.1"
"RTN","SCMCHLZ",123,0)
 Q
"RTN","SCMCHLZ",124,0)
 ;
"RTN","SCMCHLZ",125,0)
INIT ;Initialize variables
"RTN","SCMCHLZ",126,0)
 ;
"RTN","SCMCHLZ",127,0)
 ;Set delimeter values
"RTN","SCMCHLZ",128,0)
 S FS=HL("FS") ;.........^
"RTN","SCMCHLZ",129,0)
 S CS=$E(HL("ECH"),1) ;..~
"RTN","SCMCHLZ",130,0)
 S SS=$E(HL("ECH"),4) ;..&
"RTN","SCMCHLZ",131,0)
 S QT=HL("Q") ;..........""
"RTN","SCMCHLZ",132,0)
 ;
"RTN","SCMCHLZ",133,0)
 ;Default SCSEQ to 1. djb/bp Patch 210
"RTN","SCMCHLZ",134,0)
 S:'$G(SCSEQ) SCSEQ=1
"RTN","SCMCHLZ",135,0)
 ;
"RTN","SCMCHLZ",136,0)
 ;Initialize ZPC segment to all nulls.
"RTN","SCMCHLZ",137,0)
 S $P(SCZPC,FS,5)="^" ;Initialize as empty; not null.
"RTN","SCMCHLZ",138,0)
 S SCZPC="ZPC"_FS_SCZPC_FS_SCSEQ ;djb/bp Patch 210
"RTN","SCMCHLZ",139,0)
 ;
"RTN","SCMCHLZ",140,0)
 ;Initialize SCSTR to fields user requested.
"RTN","SCMCHLZ",141,0)
 S SCSTR=$G(SCSTR)
"RTN","SCMCHLZ",142,0)
 I SCSTR']"" S SCSTR="1,2,3,4,5,6" ;Default fields
"RTN","SCMCHLZ",143,0)
 ;Add starting and ending comma.
"RTN","SCMCHLZ",144,0)
 I $E(SCSTR)'="," S SCSTR=","_SCSTR
"RTN","SCMCHLZ",145,0)
 I $E(SCSTR,$L(SCSTR))'="," S SCSTR=SCSTR_","
"RTN","SCMCHLZ",146,0)
 Q
"RTN","SCMCHLZ",147,0)
 ;
"RTN","SCMCHLZ",148,0)
ADJUST ;Add a continuation node if length is greater than 245.
"RTN","SCMCHLZ",149,0)
 Q:$L(SCZPC)'>245
"RTN","SCMCHLZ",150,0)
 S SCZPC(1)=$E(SCZPC,246,999) ;
"RTN","SCMCHLZ",151,0)
 S SCZPC=$E(SCZPC,1,245)
"RTN","SCMCHLZ",152,0)
 Q
"RTN","SD53P210")
0^3^B13288328
"RTN","SD53P210",1,0)
SD53P210 ;BP/CMF - Patch SD*5.3*210 utility routine; 02/17/2000
"RTN","SD53P210",2,0)
 ;;5.3;Scheduling;**210**;AUG 13, 1993
"RTN","SD53P210",3,0)
 ;
"RTN","SD53P210",4,0)
 ;
"RTN","SD53P210",5,0)
ENV ;Main entry point for Environment check point.
"RTN","SD53P210",6,0)
 ;
"RTN","SD53P210",7,0)
 S XPDABORT=""
"RTN","SD53P210",8,0)
 D PROGCHK(.XPDABORT) ;checks programmer variables
"RTN","SD53P210",9,0)
 D PARMCHK(.XPDABORT) ;checks param file ien exists
"RTN","SD53P210",10,0)
 I XPDABORT="" K XPDABORT
"RTN","SD53P210",11,0)
 ;
"RTN","SD53P210",12,0)
 Q
"RTN","SD53P210",13,0)
 ;
"RTN","SD53P210",14,0)
 ;
"RTN","SD53P210",15,0)
PRE ;Main entry point for Pre-init
"RTN","SD53P210",16,0)
 ;
"RTN","SD53P210",17,0)
 D PRE1 ;Delete PCMM HL7 ID file
"RTN","SD53P210",18,0)
 D PRE2 ;Set HL7 Application name to PCMM
"RTN","SD53P210",19,0)
 ;
"RTN","SD53P210",20,0)
 Q
"RTN","SD53P210",21,0)
 ;
"RTN","SD53P210",22,0)
 ;
"RTN","SD53P210",23,0)
POST ;Main entry point for Post-init
"RTN","SD53P210",24,0)
 ;
"RTN","SD53P210",25,0)
 D POST1 ;Update c/s files
"RTN","SD53P210",26,0)
 D POST2 ;Stuff 7 days into HL7 AUTO RETRANSMIT PERIOD field of the
"RTN","SD53P210",27,0)
 ;        PCMM PARAMETER file
"RTN","SD53P210",28,0)
 D POST3 ;Change HL7 Application Name
"RTN","SD53P210",29,0)
 ;
"RTN","SD53P210",30,0)
 Q
"RTN","SD53P210",31,0)
 ;
"RTN","SD53P210",32,0)
 ;
"RTN","SD53P210",33,0)
 ;
"RTN","SD53P210",34,0)
PROGCHK(XPDABORT) ;checks for necessary programmer variables
"RTN","SD53P210",35,0)
 ;
"RTN","SD53P210",36,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","SD53P210",37,0)
 .D BMES^XPDUTL("*****")
"RTN","SD53P210",38,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","SD53P210",39,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","SD53P210",40,0)
 .D MES^XPDUTL("*****")
"RTN","SD53P210",41,0)
 .S XPDABORT=2
"RTN","SD53P210",42,0)
 .Q
"RTN","SD53P210",43,0)
 Q
"RTN","SD53P210",44,0)
 ;
"RTN","SD53P210",45,0)
PARMCHK(XPDABORT) ;checks for proper param file ien
"RTN","SD53P210",46,0)
 ;
"RTN","SD53P210",47,0)
 I '$D(^SCTM(404.44,1)) D
"RTN","SD53P210",48,0)
 .D BMES^XPDUTL("*****")
"RTN","SD53P210",49,0)
 .D MES^XPDUTL("Parameter file (#404.44) does not have proper IEN (1).")
"RTN","SD53P210",50,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","SD53P210",51,0)
 .D MES^XPDUTL("*****")
"RTN","SD53P210",52,0)
 .S XPDABORT=2
"RTN","SD53P210",53,0)
 .Q
"RTN","SD53P210",54,0)
 Q
"RTN","SD53P210",55,0)
 ;
"RTN","SD53P210",56,0)
PRE1 ;Delete PCMM HL7 ID (#404.49) file, including data.
"RTN","SD53P210",57,0)
 ;rpm/alb - Added check for application version.  If 210 has been loaded
"RTN","SD53P210",58,0)
 ;          once then we don't want to initialize 404.49 with each TEST
"RTN","SD53P210",59,0)
 ;          version install.
"RTN","SD53P210",60,0)
 NEW DIU
"RTN","SD53P210",61,0)
 I $$PATCH^XPDUTL("SD*5.3*210") D  Q
"RTN","SD53P210",62,0)
 . D BMES^XPDUTL("SD*5.3*210 previously installed.  PCMM HL7 ID file not re-initialized.")
"RTN","SD53P210",63,0)
 S DIU="^SCPT(404.49,"
"RTN","SD53P210",64,0)
 S DIU(0)="DT"
"RTN","SD53P210",65,0)
 D EN^DIU2
"RTN","SD53P210",66,0)
 Q
"RTN","SD53P210",67,0)
 ;
"RTN","SD53P210",68,0)
PRE2 ;Set HL7 application name to PCMM
"RTN","SD53P210",69,0)
 ;rpm/alb A re-install of SD*5.3*210 resulted in the HL7 application name
"RTN","SD53P210",70,0)
 ;        being blank in the PCMM SEND SERVER Protocol if the HL7
"RTN","SD53P210",71,0)
 ;        application name was previously PCMM-210.
"RTN","SD53P210",72,0)
 NEW DIC,DIE,DA,DR,X,Y
"RTN","SD53P210",73,0)
 S DIC="^HL(771,"
"RTN","SD53P210",74,0)
 S X="PCMM"
"RTN","SD53P210",75,0)
 D ^DIC
"RTN","SD53P210",76,0)
 I (Y<0) D  Q
"RTN","SD53P210",77,0)
 . D BMES^XPDUTL("   PCMM application not found")
"RTN","SD53P210",78,0)
 I $$PATCH^XPDUTL("SD*5.3*210") D  Q
"RTN","SD53P210",79,0)
 . D BMES^XPDUTL("SD*5.3*210 previously installed.  Setting HL7 application name to PCMM")
"RTN","SD53P210",80,0)
 . S DIE=DIC
"RTN","SD53P210",81,0)
 . S DA=+Y
"RTN","SD53P210",82,0)
 . S DR=".01///PCMM"
"RTN","SD53P210",83,0)
 . D ^DIE
"RTN","SD53P210",84,0)
 . D MES^XPDUTL("   HL7 application name successfully changed to PCMM.")
"RTN","SD53P210",85,0)
 Q
"RTN","SD53P210",86,0)
 ;
"RTN","SD53P210",87,0)
POST1 I $$UPCLNLST^SCMCUT("SD*5.3*210^NullClient^1^0^0") D  Q
"RTN","SD53P210",88,0)
 . D MES^XPDUTL("Client/Server files updated.")
"RTN","SD53P210",89,0)
 . Q
"RTN","SD53P210",90,0)
 D MES^XPDUTL("Client/Server files NOT updated.")
"RTN","SD53P210",91,0)
 Q
"RTN","SD53P210",92,0)
 ;
"RTN","SD53P210",93,0)
POST2 ;Stuff 7 days into HL7 AUTO RETRANSMIT PERIOD field of the
"RTN","SD53P210",94,0)
 ;PCMM PARAMETER file
"RTN","SD53P210",95,0)
 NEW SCERR,SCFDA
"RTN","SD53P210",96,0)
 S SCFDA(404.44,"1,",16)=7
"RTN","SD53P210",97,0)
 D FILE^DIE(,"SCFDA","SCERR")
"RTN","SD53P210",98,0)
 Q
"RTN","SD53P210",99,0)
 ;
"RTN","SD53P210",100,0)
POST3 ;Change HL7 application name from PCMM to PCMM-210 in HL7 APPLICATION PARAMETER file.  DBIA #3068: Approval from HL7 Package for this change.
"RTN","SD53P210",101,0)
 ;rpm/alb - removed eXact match since test sites may overlap 210 and 212.
"RTN","SD53P210",102,0)
 ;          Application name needs to match the version installed.
"RTN","SD53P210",103,0)
 N DIE,DIC,DA,DR,X,Y
"RTN","SD53P210",104,0)
 D BMES^XPDUTL("Changing HL7 Application name from PCMM to PCMM-210")
"RTN","SD53P210",105,0)
 S DIC="^HL(771,"
"RTN","SD53P210",106,0)
 S X="PCMM"
"RTN","SD53P210",107,0)
 D ^DIC
"RTN","SD53P210",108,0)
 I (Y<0) D  Q
"RTN","SD53P210",109,0)
 .D BMES^XPDUTL("   PCMM application not found.")
"RTN","SD53P210",110,0)
 I $P(Y,"^",2)="PCMM-210" D  Q
"RTN","SD53P210",111,0)
 .D MES^XPDUTL("   HL7 application name is PCMM-210.  No change needed.")
"RTN","SD53P210",112,0)
 S DIE=DIC
"RTN","SD53P210",113,0)
 S DA=+Y
"RTN","SD53P210",114,0)
 S DR=".01///PCMM-210"
"RTN","SD53P210",115,0)
 D ^DIE
"RTN","SD53P210",116,0)
 D MES^XPDUTL("   HL7 application name successfully changed to PCMM-210.")
"RTN","SD53P210",117,0)
 Q
"VER")
8.0^22.0
"^DD",404.44,404.44,16,0)
HL7 AUTO RETRANSMIT PERIOD^NJ3,0^^1;6^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",404.44,404.44,16,3)
Enter a number from 1 to 999.
"^DD",404.44,404.44,16,21,0)
^^2^2^3000207^
"^DD",404.44,404.44,16,21,1,0)
Enter the number of days that an auto retransmit of HL7 messages
"^DD",404.44,404.44,16,21,2,0)
should occur if no ACK message is received.
"^DD",404.44,404.44,16,"DT")
3000203
"^DD",404.471,404.471,0)
FIELD^^.06^8
"^DD",404.471,404.471,0,"DDA")
N
"^DD",404.471,404.471,0,"DT")
3000317
"^DD",404.471,404.471,0,"IX","AST",404.471,.04)

"^DD",404.471,404.471,0,"IX","AST1",404.471,.05)

"^DD",404.471,404.471,0,"IX","AST2",404.471,.02)

"^DD",404.471,404.471,0,"IX","ASTAT",404.471,.04)

"^DD",404.471,404.471,0,"IX","B",404.471,.01)

"^DD",404.471,404.471,0,"NM","PCMM HL7 TRANSMISSION LOG")

"^DD",404.471,404.471,.01,0)
MESSAGE CONTROL ID^RF^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",404.471,404.471,.01,1,0)
^.1
"^DD",404.471,404.471,.01,1,1,0)
404.471^B
"^DD",404.471,404.471,.01,1,1,1)
S ^SCPT(404.471,"B",$E(X,1,30),DA)=""
"^DD",404.471,404.471,.01,1,1,2)
K ^SCPT(404.471,"B",$E(X,1,30),DA)
"^DD",404.471,404.471,.01,3)
Answer must be 1-20 characters in length.
"^DD",404.471,404.471,.01,21,0)
^^1^1^3000307^
"^DD",404.471,404.471,.01,21,1,0)
Unique ID generated by the HL7 package.
"^DD",404.471,404.471,.01,"DT")
3000207
"^DD",404.471,404.471,.02,0)
PATIENT^P2'^DPT(^0;2^Q
"^DD",404.471,404.471,.02,1,0)
^.1
"^DD",404.471,404.471,.02,1,1,0)
404.471^AST2^MUMPS
"^DD",404.471,404.471,.02,1,1,1)
D AST2SET^SCMCHLA1(DA,X)
"^DD",404.471,404.471,.02,1,1,2)
D AST2KILL^SCMCHLA1(DA,X)
"^DD",404.471,404.471,.02,1,1,"%D",0)
^^5^5^3000222^^^
"^DD",404.471,404.471,.02,1,1,"%D",1,0)
This cross-reference provides a list of records that have a status of
"^DD",404.471,404.471,.02,1,1,"%D",2,0)
'rejected' or 'marked for re-transmit'.  The list is sorted by <ack
"^DD",404.471,404.471,.02,1,1,"%D",3,0)
received date/time>,<status>, <patient >,<internal entry number>.  The
"^DD",404.471,404.471,.02,1,1,"%D",4,0)
STATUS (#.04) and ACK RECEIVED DATE/TIME (#.05) fields each have a
"^DD",404.471,404.471,.02,1,1,"%D",5,0)
companion cross-reference to set this compound cross-reference.
"^DD",404.471,404.471,.02,1,1,"DT")
3000222
"^DD",404.471,404.471,.02,3)

"^DD",404.471,404.471,.02,21,0)
^^1^1^3000307^
"^DD",404.471,404.471,.02,21,1,0)
Pointer to the PATIENT file.
"^DD",404.471,404.471,.02,"DT")
3000222
"^DD",404.471,404.471,.03,0)
TRANSMISSION DATE/TIME^D^^0;3^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",404.471,404.471,.03,3)
(No range limit on date)
"^DD",404.471,404.471,.03,21,0)
^^1^1^3000307^
"^DD",404.471,404.471,.03,21,1,0)
Date/time message transmitted by HL7.
"^DD",404.471,404.471,.03,"DT")
2991222
"^DD",404.471,404.471,.04,0)
STATUS^S^T:TRANSMITTED;A:ACCEPTED;RJ:REJECTED;M:MARKED FOR RE-TRANSMIT;RT:RE-TRANSMITTED;^0;4^Q
"^DD",404.471,404.471,.04,1,0)
^.1
"^DD",404.471,404.471,.04,1,1,0)
404.471^AST^MUMPS
"^DD",404.471,404.471,.04,1,1,1)
D ASTSET^SCMCHLA1(DA,X)
"^DD",404.471,404.471,.04,1,1,2)
D ASTKILL^SCMCHLA1(DA,X)
"^DD",404.471,404.471,.04,1,1,"%D",0)
^^5^5^3000222^^^
"^DD",404.471,404.471,.04,1,1,"%D",1,0)
This cross-reference provides a list of records that have a status of
"^DD",404.471,404.471,.04,1,1,"%D",2,0)
'rejected' or 'marked for re-transmit'.  The list is sorted by <ack
"^DD",404.471,404.471,.04,1,1,"%D",3,0)
received date/time>,<status>,<patient >,<internal entry number>.  The
"^DD",404.471,404.471,.04,1,1,"%D",4,0)
PATIENT (#.02) and ACK RECEIVED DATE/TIME (#.05) fields each have a
"^DD",404.471,404.471,.04,1,1,"%D",5,0)
companion cross-reference to set this compound cross-reference.
"^DD",404.471,404.471,.04,1,1,"DT")
3000222
"^DD",404.471,404.471,.04,1,2,0)
404.471^ASTAT
"^DD",404.471,404.471,.04,1,2,1)
S ^SCPT(404.471,"ASTAT",$E(X,1,30),DA)=""
"^DD",404.471,404.471,.04,1,2,2)
K ^SCPT(404.471,"ASTAT",$E(X,1,30),DA)
"^DD",404.471,404.471,.04,1,2,"%D",0)
^^1^1^3000118^
"^DD",404.471,404.471,.04,1,2,"%D",1,0)
Use this xref to resubmit rejects.
"^DD",404.471,404.471,.04,1,2,"DT")
3000118
"^DD",404.471,404.471,.04,21,0)
^^1^1^3000307^
"^DD",404.471,404.471,.04,21,1,0)
Describes the status of this transmission.
"^DD",404.471,404.471,.04,"DT")
3000222
"^DD",404.471,404.471,.05,0)
ACK RECEIVED DATE/TIME^D^^0;5^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",404.471,404.471,.05,1,0)
^.1
"^DD",404.471,404.471,.05,1,1,0)
404.471^AST1^MUMPS
"^DD",404.471,404.471,.05,1,1,1)
D AST1SET^SCMCHLA1(DA,X)
"^DD",404.471,404.471,.05,1,1,2)
D AST1KILL^SCMCHLA1(DA,X)
"^DD",404.471,404.471,.05,1,1,"%D",0)
^^5^5^3000222^^^
"^DD",404.471,404.471,.05,1,1,"%D",1,0)
This cross-reference provides a list of records that have a status of
"^DD",404.471,404.471,.05,1,1,"%D",2,0)
'rejected' or 'marked for re-transmit'.  The list is sorted by <ack
"^DD",404.471,404.471,.05,1,1,"%D",3,0)
received date/time>,<status>, <patient >,<internal entry number>.  The
"^DD",404.471,404.471,.05,1,1,"%D",4,0)
PATIENT (#.02) and STATUS (#.04) fields each have a companion
"^DD",404.471,404.471,.05,1,1,"%D",5,0)
cross-reference to set this compound cross-reference.
"^DD",404.471,404.471,.05,1,1,"DT")
3000222
"^DD",404.471,404.471,.05,21,0)
^^1^1^3000307^
"^DD",404.471,404.471,.05,21,1,0)
The date/time an Acknowledgment message is received.
"^DD",404.471,404.471,.05,"DT")
3000222
"^DD",404.471,404.471,.06,0)
INCLUDED IN REJECT BULLETIN?^S^Y:YES;^0;6^Q
"^DD",404.471,404.471,.06,1,0)
^.1^^0
"^DD",404.471,404.471,.06,3)

"^DD",404.471,404.471,.06,21,0)
^^3^3^3000207^^^^
"^DD",404.471,404.471,.06,21,1,0)
This field will be used to determine if the record has been included in
"^DD",404.471,404.471,.06,21,2,0)
the PCMM Transmission Error notification message that is sent to a local
"^DD",404.471,404.471,.06,21,3,0)
mail group when reject messages are received.
"^DD",404.471,404.471,.06,"DT")
3000208
"^DD",404.471,404.471,41,0)
ZPC SEGMENTS^404.47141^^ZPC;0
"^DD",404.471,404.471,42,0)
ERROR CODE^404.47142P^^ERR;0
"^DD",404.471,404.47141,0)
ZPC SEGMENTS SUB-FIELD^^.02^2
"^DD",404.471,404.47141,0,"DT")
2991215
"^DD",404.471,404.47141,0,"IX","B",404.47141,.01)

"^DD",404.471,404.47141,0,"IX","C",404.47141,.02)

"^DD",404.471,404.47141,0,"NM","ZPC SEGMENTS")

"^DD",404.471,404.47141,0,"UP")
404.471
"^DD",404.471,404.47141,.01,0)
SEQUENCE^MNJ4,0^^0;1^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",404.471,404.47141,.01,1,0)
^.1
"^DD",404.471,404.47141,.01,1,1,0)
404.47141^B
"^DD",404.471,404.47141,.01,1,1,1)
S ^SCPT(404.471,DA(1),"ZPC","B",$E(X,1,30),DA)=""
"^DD",404.471,404.47141,.01,1,1,2)
K ^SCPT(404.471,DA(1),"ZPC","B",$E(X,1,30),DA)
"^DD",404.471,404.47141,.01,3)
Enter the sequence number from field 7 of the ZPC segment (a whole number from 1 to 9999).
"^DD",404.471,404.47141,.01,21,0)
^^1^1^3000307^^
"^DD",404.471,404.47141,.01,21,1,0)
The Set ID field of the ZPC segment.
"^DD",404.471,404.47141,.01,"DT")
2991216
"^DD",404.471,404.47141,.02,0)
ZPC ID^P404.49'^SCPT(404.49,^0;2^Q
"^DD",404.471,404.47141,.02,1,0)
^.1
"^DD",404.471,404.47141,.02,1,1,0)
404.47141^C
"^DD",404.471,404.47141,.02,1,1,1)
S ^SCPT(404.471,DA(1),"ZPC","C",$E(X,1,30),DA)=""
"^DD",404.471,404.47141,.02,1,1,2)
K ^SCPT(404.471,DA(1),"ZPC","C",$E(X,1,30),DA)
"^DD",404.471,404.47141,.02,1,1,"DT")
3000111
"^DD",404.471,404.47141,.02,3)

"^DD",404.471,404.47141,.02,21,0)
^^1^1^3000307^
"^DD",404.471,404.47141,.02,21,1,0)
The Provider Assignment ID field of the ZPC segment.
"^DD",404.471,404.47141,.02,"DT")
3000111
"^DD",404.471,404.47142,0)
ERROR CODE SUB-FIELD^^.04^6
"^DD",404.471,404.47142,0,"DT")
3000317
"^DD",404.471,404.47142,0,"IX","B",404.47142,.01)

"^DD",404.471,404.47142,0,"NM","ERROR CODE")

"^DD",404.471,404.47142,0,"UP")
404.471
"^DD",404.471,404.47142,.01,0)
ERROR CODE^MP404.472'^SCPT(404.472,^0;1^Q
"^DD",404.471,404.47142,.01,1,0)
^.1
"^DD",404.471,404.47142,.01,1,1,0)
404.47142^B
"^DD",404.471,404.47142,.01,1,1,1)
S ^SCPT(404.471,DA(1),"ERR","B",$E(X,1,30),DA)=""
"^DD",404.471,404.47142,.01,1,1,2)
K ^SCPT(404.471,DA(1),"ERR","B",$E(X,1,30),DA)
"^DD",404.471,404.47142,.01,3)

"^DD",404.471,404.47142,.01,21,0)
^^2^2^3000307^
"^DD",404.471,404.47142,.01,21,1,0)
Pointer to the PCMM HL7 ERROR CODE file. The ERROR CODE is part
"^DD",404.471,404.47142,.01,21,2,0)
of the ACK message received from Austin.
"^DD",404.471,404.47142,.01,"DT")
2991216
"^DD",404.471,404.47142,.02,0)
SEGMENT^F^^0;2^K:$L(X)>15!($L(X)<1) X
"^DD",404.471,404.47142,.02,3)
Enter 3 letter HL7 segment designation (1-15 characters).
"^DD",404.471,404.47142,.02,21,0)
^^2^2^3000307^
"^DD",404.471,404.47142,.02,21,1,0)
The 3 letter code that describes the segment that rejected.
"^DD",404.471,404.47142,.02,21,2,0)
Example: PID -or- ZPC.
"^DD",404.471,404.47142,.02,"DT")
2991216
"^DD",404.471,404.47142,.03,0)
SEQUENCE^NJ4,0^^0;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",404.471,404.47142,.03,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",404.471,404.47142,.03,21,0)
^.001^2^2^3000317^^^
"^DD",404.471,404.47142,.03,21,1,0)
The Set ID field of the ZPC segment. This number is used to identify
"^DD",404.471,404.47142,.03,21,2,0)
which ZPC segment rejected by looking in the ZPC SEGMENTS multiple field.
"^DD",404.471,404.47142,.03,"DT")
3000317
"^DD",404.471,404.47142,.04,0)
FIELD POSITION^NJ4,0^^0;4^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",404.471,404.47142,.04,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",404.471,404.47142,.04,21,0)
^.001^2^2^3000317^^
"^DD",404.471,404.47142,.04,21,1,0)
The Field Position field of the ERR segment.  This number is used to
"^DD",404.471,404.47142,.04,21,2,0)
identify which field of the HL7 segment that an error occurred.
"^DD",404.471,404.47142,.04,"DT")
3000317
"^DD",404.471,404.47142,.05,0)
ZPC ID^P404.49'^SCPT(404.49,^0;5^Q
"^DD",404.471,404.47142,.05,3)

"^DD",404.471,404.47142,.05,21,0)
^^2^2^3000307^
"^DD",404.471,404.47142,.05,21,1,0)
Stores the Provider Assignment ID that is derived from the Sequence
"^DD",404.471,404.47142,.05,21,2,0)
number.
"^DD",404.471,404.47142,.05,"DT")
2991215
"^DD",404.471,404.47142,.06,0)
ERROR PROCESSING STATUS^S^1:NEW;2:CHECKED;^0;6^Q
"^DD",404.471,404.47142,.06,3)

"^DD",404.471,404.47142,.06,21,0)
^^2^2^3000112^
"^DD",404.471,404.47142,.06,21,1,0)
This field will be used to track the processing of the error by the local
"^DD",404.471,404.47142,.06,21,2,0)
site.
"^DD",404.471,404.47142,.06,"DT")
3000112
"^DD",404.472,404.472,0)
FIELD^^.04^5
"^DD",404.472,404.472,0,"DDA")
N
"^DD",404.472,404.472,0,"DT")
3000217
"^DD",404.472,404.472,0,"IX","B",404.472,.01)

"^DD",404.472,404.472,0,"NM","PCMM HL7 ERROR CODE")

"^DD",404.472,404.472,0,"PT",404.47142,.01)

"^DD",404.472,404.472,.01,0)
ERROR CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",404.472,404.472,.01,1,0)
^.1
"^DD",404.472,404.472,.01,1,1,0)
404.472^B
"^DD",404.472,404.472,.01,1,1,1)
S ^SCPT(404.472,"B",$E(X,1,30),DA)=""
"^DD",404.472,404.472,.01,1,1,2)
K ^SCPT(404.472,"B",$E(X,1,30),DA)
"^DD",404.472,404.472,.01,3)
Answer must be 1-10 characters in length.
"^DD",404.472,404.472,.01,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.01,21,1,0)
This is the unique ID assigned by Austin for each error code.
"^DD",404.472,404.472,.01,"DT")
2991216
"^DD",404.472,404.472,.02,0)
SEGMENT^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",404.472,404.472,.02,3)
Enter HL7 message segment. Answer must be 1-10 characters in length.
"^DD",404.472,404.472,.02,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.02,21,1,0)
The three letter designation of the applicable HL7 segment.
"^DD",404.472,404.472,.02,"DT")
2991216
"^DD",404.472,404.472,.03,0)
FIELD^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",404.472,404.472,.03,3)
Enter the segment field name. Answer must be 1-30 characters in length.
"^DD",404.472,404.472,.03,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.03,21,1,0)
The segment field where the error occurred.
"^DD",404.472,404.472,.03,"DT")
2991216
"^DD",404.472,404.472,.04,0)
SHORT DESCRIPTION^F^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",404.472,404.472,.04,3)
Answer must be 1-60 characters in length.
"^DD",404.472,404.472,.04,21,0)
^^2^2^3000307^
"^DD",404.472,404.472,.04,21,1,0)
The short desciption is used in the Listman display where users
"^DD",404.472,404.472,.04,21,2,0)
select errors for retransmission.
"^DD",404.472,404.472,.04,"DT")
3000217
"^DD",404.472,404.472,10,0)
DESCRIPTION^404.482^^DESC;0
"^DD",404.472,404.472,10,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,10,21,1,0)
The is the full description of this error.
"^DD",404.472,404.482,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.472,404.482,0,"DT")
3000209
"^DD",404.472,404.482,0,"NM","DESCRIPTION")

"^DD",404.472,404.482,0,"UP")
404.472
"^DD",404.472,404.482,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.472,404.482,.01,3)

"^DD",404.472,404.482,.01,"DT")
3000209
"^DD",404.49,404.49,0)
FIELD^^.02^2
"^DD",404.49,404.49,0,"DT")
3000105
"^DD",404.49,404.49,0,"IX","B",404.49,.01)

"^DD",404.49,404.49,0,"IX","C",404.49,.02)

"^DD",404.49,404.49,0,"NM","PCMM HL7 ID")

"^DD",404.49,404.49,0,"PT",404.47141,.02)

"^DD",404.49,404.49,0,"PT",404.47142,.05)

"^DD",404.49,404.49,0,"VRPK")
SD
"^DD",404.49,404.49,.01,0)
NAME^RF^^0;1^K:$L(X)>75!($L(X)<3)!'(X'?1P.E) X
"^DD",404.49,404.49,.01,1,0)
^.1
"^DD",404.49,404.49,.01,1,1,0)
404.49^B
"^DD",404.49,404.49,.01,1,1,1)
S ^SCPT(404.49,"B",$E(X,1,75),DA)=""
"^DD",404.49,404.49,.01,1,1,2)
K ^SCPT(404.49,"B",$E(X,1,75),DA)
"^DD",404.49,404.49,.01,3)
Enter an HL7 ZPC segment ID (3-75 characters). Hit "??" for more Help.
"^DD",404.49,404.49,.01,21,0)
^^22^22^2990712^^^^
"^DD",404.49,404.49,.01,21,1,0)
This file stores PCMM HL7 message ID numbers for ZPC segments.
"^DD",404.49,404.49,.01,21,2,0)
The ZPC segment then uses the IEN of this file which shortens
"^DD",404.49,404.49,.01,21,3,0)
the ID sent to the NPCD.
"^DD",404.49,404.49,.01,21,4,0)
 
"^DD",404.49,404.49,.01,21,5,0)
The ID can have two formats depending on whether it is a preceptee
"^DD",404.49,404.49,.01,21,6,0)
or preceptor.
"^DD",404.49,404.49,.01,21,7,0)
 
"^DD",404.49,404.49,.01,21,8,0)
Format 1:
"^DD",404.49,404.49,.01,21,9,0)
   2290-427-34-AP/PCP
"^DD",404.49,404.49,.01,21,10,0)
Where:
"^DD",404.49,404.49,.01,21,11,0)
   2290= 404.43 IEN
"^DD",404.49,404.49,.01,21,12,0)
   427 = 404.52 IEN of preceptor
"^DD",404.49,404.49,.01,21,13,0)
   34  = 404.53 IEN
"^DD",404.49,404.49,.01,21,14,0)
   AP  = AP (Associate Provider) or PCP (Primary Care Provider)
"^DD",404.49,404.49,.01,21,15,0)
 
"^DD",404.49,404.49,.01,21,16,0)
Format 2:
"^DD",404.49,404.49,.01,21,17,0)
   2290-453-0-AP/PCP
"^DD",404.49,404.49,.01,21,18,0)
Where:
"^DD",404.49,404.49,.01,21,19,0)
   2290= 404.43 IEN
"^DD",404.49,404.49,.01,21,20,0)
   427 = 404.52 IEN of preceptee
"^DD",404.49,404.49,.01,21,21,0)
   0   = Place holder. There is no 404.53 IEN.
"^DD",404.49,404.49,.01,21,22,0)
   AP  = AP (Associate Provider) or PCP (Primary Care Provider)
"^DD",404.49,404.49,.01,"DT")
2990707
"^DD",404.49,404.49,.02,0)
INTEGRATION ID^F^^0;2^K:$L(X)>25!($L(X)<5) X
"^DD",404.49,404.49,.02,1,0)
^.1
"^DD",404.49,404.49,.02,1,1,0)
404.49^C
"^DD",404.49,404.49,.02,1,1,1)
S ^SCPT(404.49,"C",$E(X,1,30),DA)=""
"^DD",404.49,404.49,.02,1,1,2)
K ^SCPT(404.49,"C",$E(X,1,30),DA)
"^DD",404.49,404.49,.02,1,1,"%D",0)
^^2^2^3000105^
"^DD",404.49,404.49,.02,1,1,"%D",1,0)
This xref is used to look-up an entry by it's legacy site ID.
"^DD",404.49,404.49,.02,1,1,"%D",2,0)
Used when processing HL7 rejects.
"^DD",404.49,404.49,.02,1,1,"DT")
3000105
"^DD",404.49,404.49,.02,3)
Enter legacy site ID (5-25 characters). ID is site number-PCMM HL7 ID IEN (Example: 604-34).
"^DD",404.49,404.49,.02,21,0)
^^4^4^3000105^
"^DD",404.49,404.49,.02,21,1,0)
When one site is integrated into another site, all entries in 404.43,
"^DD",404.49,404.49,.02,21,2,0)
404.52, and 404.53 that have been unassigned and that are moved to the
"^DD",404.49,404.49,.02,21,3,0)
primary site, need to be able to convert to the original ID if they are
"^DD",404.49,404.49,.02,21,4,0)
edited and an HL7 message is generated. This field preserves that old ID.
"^DD",404.49,404.49,.02,"DT")
3000105
"^DIC",404.471,404.471,0)
PCMM HL7 TRANSMISSION LOG^404.471
"^DIC",404.471,404.471,0,"GL")
^SCPT(404.471,
"^DIC",404.471,404.471,"%",0)
^1.005^^
"^DIC",404.471,404.471,"%D",0)
^^7^7^3000322^
"^DIC",404.471,404.471,"%D",1,0)
This file contains a log of all PCMM HL7 Transmissions that have
"^DIC",404.471,404.471,"%D",2,0)
occurred at the medical center.  It is also used to track PCMM
"^DIC",404.471,404.471,"%D",3,0)
HL7 Transmission errors that have been transmitted back to the
"^DIC",404.471,404.471,"%D",4,0)
medical center from the Austin Automation Center (AAC).
"^DIC",404.471,404.471,"%D",5,0)
 
"^DIC",404.471,404.471,"%D",6,0)
The data in this file is maintained by the PCMM software module
"^DIC",404.471,404.471,"%D",7,0)
and should not be altered.
"^DIC",404.471,"B","PCMM HL7 TRANSMISSION LOG",404.471)

"^DIC",404.472,404.472,0)
PCMM HL7 ERROR CODE^404.472
"^DIC",404.472,404.472,0,"GL")
^SCPT(404.472,
"^DIC",404.472,404.472,"%",0)
^1.005^^
"^DIC",404.472,404.472,"%D",0)
^^7^7^3000322^
"^DIC",404.472,404.472,"%D",1,0)
This table file contains a list of all error codes that the Austin
"^DIC",404.472,404.472,"%D",2,0)
Automation Center (AAC) will report when processing PCMM HL7
"^DIC",404.472,404.472,"%D",3,0)
Transmissions.
"^DIC",404.472,404.472,"%D",4,0)
 
"^DIC",404.472,404.472,"%D",5,0)
This table should not be edited in anyway by the site. If an entry in this
"^DIC",404.472,404.472,"%D",6,0)
file needs to be to be added, modified or deleted; a patch will be issued
"^DIC",404.472,404.472,"%D",7,0)
instructing the site how to make the change.
"^DIC",404.472,"B","PCMM HL7 ERROR CODE",404.472)

"^DIC",404.49,404.49,0)
PCMM HL7 ID^404.49
"^DIC",404.49,404.49,0,"GL")
^SCPT(404.49,
"^DIC",404.49,"B","PCMM HL7 ID",404.49)

**END**
**END**
