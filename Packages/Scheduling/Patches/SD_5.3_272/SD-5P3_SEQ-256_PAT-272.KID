Released SD*5.3*272 SEQ #256
Extracted from mail message
**KIDS**:SD*5.3*272^

**INSTALL NAME**
SD*5.3*272
"BLD",3730,0)
SD*5.3*272^SCHEDULING^0^3030410^y
"BLD",3730,1,0)
^^10^10^3021211^
"BLD",3730,1,1,0)
PCMM WORKLOAD TRANSMISSION TO AAC
"BLD",3730,1,2,0)
 
"BLD",3730,1,3,0)
Added WORKLOAD (.08) field to PCMM HL7 EVENT file to differentiate HL7 
"BLD",3730,1,4,0)
message types
"BLD",3730,1,5,0)
 
"BLD",3730,1,6,0)
Added New type crossrefence to POSTION ASSIGNMENT HISTORY (#404.52) and 
"BLD",3730,1,7,0)
TEAM POSITION (#404.57)
"BLD",3730,1,8,0)
 
"BLD",3730,1,9,0)
Address NOIS TAM-1102-32213 active position assignments only on FTEE 
"BLD",3730,1,10,0)
entry and reports
"BLD",3730,4,0)
^9.64PA^404.48^6
"BLD",3730,4,404.471,0)
404.471
"BLD",3730,4,404.471,2,0)
^9.641^404.471^1
"BLD",3730,4,404.471,2,404.471,0)
PCMM HL7 TRANSMISSION LOG  (File-top level)
"BLD",3730,4,404.471,2,404.471,1,0)
^9.6411^.08^2
"BLD",3730,4,404.471,2,404.471,1,.07,0)
WORKLOAD EVENT POINTER
"BLD",3730,4,404.471,2,404.471,1,.08,0)
PRACTITIONER
"BLD",3730,4,404.471,222)
y^n^p^^^^n
"BLD",3730,4,404.472,0)
404.472
"BLD",3730,4,404.472,222)
n^n^f^^n^PCMM NEW^y^o^n
"BLD",3730,4,404.48,0)
404.48
"BLD",3730,4,404.48,222)
y^n^f^^^^n
"BLD",3730,4,404.52,0)
404.52
"BLD",3730,4,404.52,222)
y^n^f^^^^n
"BLD",3730,4,404.57,0)
404.57
"BLD",3730,4,404.57,222)
y^n^f^^^^n
"BLD",3730,4,404.59,0)
404.59
"BLD",3730,4,404.59,222)
y^n^f^^^^n
"BLD",3730,4,"APDD",404.471,404.471)

"BLD",3730,4,"APDD",404.471,404.471,.07)

"BLD",3730,4,"APDD",404.471,404.471,.08)

"BLD",3730,4,"B",404.471,404.471)

"BLD",3730,4,"B",404.472,404.472)

"BLD",3730,4,"B",404.48,404.48)

"BLD",3730,4,"B",404.52,404.52)

"BLD",3730,4,"B",404.57,404.57)

"BLD",3730,4,"B",404.59,404.59)

"BLD",3730,"ABPKG")
n
"BLD",3730,"INI")
SC53272P
"BLD",3730,"INID")
^y^
"BLD",3730,"INIT")
POST^SC53272P
"BLD",3730,"KRN",0)
^9.67PA^8989.52^19
"BLD",3730,"KRN",.4,0)
.4
"BLD",3730,"KRN",.401,0)
.401
"BLD",3730,"KRN",.402,0)
.402
"BLD",3730,"KRN",.403,0)
.403
"BLD",3730,"KRN",.5,0)
.5
"BLD",3730,"KRN",.84,0)
.84
"BLD",3730,"KRN",3.6,0)
3.6
"BLD",3730,"KRN",3.8,0)
3.8
"BLD",3730,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",3730,"KRN",3.8,"NM",1,0)
PCMM WORKLOAD FTEE MAIL GROUP^^0
"BLD",3730,"KRN",3.8,"NM","B","PCMM WORKLOAD FTEE MAIL GROUP",1)

"BLD",3730,"KRN",9.2,0)
9.2
"BLD",3730,"KRN",9.8,0)
9.8
"BLD",3730,"KRN",9.8,"NM",0)
^9.68A^15^14
"BLD",3730,"KRN",9.8,"NM",1,0)
SCMCTSK^^0^B26701850
"BLD",3730,"KRN",9.8,"NM",2,0)
SCMCHLX^^0^B3910159
"BLD",3730,"KRN",9.8,"NM",3,0)
SCMCHLX1^^0^B15728017
"BLD",3730,"KRN",9.8,"NM",4,0)
SCMCHL^^0^B22773542
"BLD",3730,"KRN",9.8,"NM",6,0)
SCMCHLE^^0^B6627294
"BLD",3730,"KRN",9.8,"NM",7,0)
SCMCHLP^^0^B22705337
"BLD",3730,"KRN",9.8,"NM",8,0)
SCMCHLA1^^0^B8820718
"BLD",3730,"KRN",9.8,"NM",9,0)
SCMCHLR2^^0^B21748718
"BLD",3730,"KRN",9.8,"NM",10,0)
SCMCHLR3^^0^B31487264
"BLD",3730,"KRN",9.8,"NM",11,0)
SCMCHLL^^0^B9383248
"BLD",3730,"KRN",9.8,"NM",12,0)
SCMCHLRR^^0^B23314016
"BLD",3730,"KRN",9.8,"NM",13,0)
SCMCHLR4^^0^B65400046
"BLD",3730,"KRN",9.8,"NM",14,0)
SCMCHLA^^0^B24795612
"BLD",3730,"KRN",9.8,"NM",15,0)
SCMCHLR5^^0^B29241474
"BLD",3730,"KRN",9.8,"NM","B","SCMCHL",4)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLA",14)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLA1",8)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLE",6)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLL",11)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLP",7)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLR2",9)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLR3",10)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLR4",13)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLR5",15)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLRR",12)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLX",2)

"BLD",3730,"KRN",9.8,"NM","B","SCMCHLX1",3)

"BLD",3730,"KRN",9.8,"NM","B","SCMCTSK",1)

"BLD",3730,"KRN",19,0)
19
"BLD",3730,"KRN",19.1,0)
19.1
"BLD",3730,"KRN",101,0)
101
"BLD",3730,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",3730,"KRN",101,"NM",1,0)
SCMC SEND CLIENT WORKLOAD^^0
"BLD",3730,"KRN",101,"NM",2,0)
SCMC SEND SERVER WORKLOAD^^0
"BLD",3730,"KRN",101,"NM",3,0)
SCMC LE DESELECT PATIENT^^0
"BLD",3730,"KRN",101,"NM",4,0)
SCMC LE RETRANSMIT PATIENT^^0
"BLD",3730,"KRN",101,"NM","B","SCMC LE DESELECT PATIENT",3)

"BLD",3730,"KRN",101,"NM","B","SCMC LE RETRANSMIT PATIENT",4)

"BLD",3730,"KRN",101,"NM","B","SCMC SEND CLIENT WORKLOAD",1)

"BLD",3730,"KRN",101,"NM","B","SCMC SEND SERVER WORKLOAD",2)

"BLD",3730,"KRN",409.61,0)
409.61
"BLD",3730,"KRN",771,0)
771
"BLD",3730,"KRN",771,"NM",0)
^9.68A^1^1
"BLD",3730,"KRN",771,"NM",1,0)
PCMM^^0
"BLD",3730,"KRN",771,"NM","B","PCMM",1)

"BLD",3730,"KRN",870,0)
870
"BLD",3730,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",3730,"KRN",870,"NM",1,0)
PCMM WORK^^0
"BLD",3730,"KRN",870,"NM","B","PCMM WORK",1)

"BLD",3730,"KRN",8989.51,0)
8989.51
"BLD",3730,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3730,"KRN",8989.52,0)
8989.52
"BLD",3730,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",3730,"KRN",8994,0)
8994
"BLD",3730,"KRN","B",.4,.4)

"BLD",3730,"KRN","B",.401,.401)

"BLD",3730,"KRN","B",.402,.402)

"BLD",3730,"KRN","B",.403,.403)

"BLD",3730,"KRN","B",.5,.5)

"BLD",3730,"KRN","B",.84,.84)

"BLD",3730,"KRN","B",3.6,3.6)

"BLD",3730,"KRN","B",3.8,3.8)

"BLD",3730,"KRN","B",9.2,9.2)

"BLD",3730,"KRN","B",9.8,9.8)

"BLD",3730,"KRN","B",19,19)

"BLD",3730,"KRN","B",19.1,19.1)

"BLD",3730,"KRN","B",101,101)

"BLD",3730,"KRN","B",409.61,409.61)

"BLD",3730,"KRN","B",771,771)

"BLD",3730,"KRN","B",870,870)

"BLD",3730,"KRN","B",8989.51,8989.51)

"BLD",3730,"KRN","B",8989.52,8989.52)

"BLD",3730,"KRN","B",8994,8994)

"BLD",3730,"QUES",0)
^9.62^^
"BLD",3730,"REQB",0)
^9.611^1^1
"BLD",3730,"REQB",1,0)
SD*5.3*278^1
"BLD",3730,"REQB","B","SD*5.3*278",1)

"DATA",404.472,35,0)
008M^ZPT^^ZPT Segment Missing
"DATA",404.472,35,"DESC",0)
^^1^1^3030102^
"DATA",404.472,35,"DESC",1,0)
ZPT Segment Missing
"DATA",404.472,36,0)
007M^STF^^STF Segment Missing
"DATA",404.472,36,"DESC",0)
^^1^1^3030102^
"DATA",404.472,36,"DESC",1,0)
STF Segment Missing
"DATA",404.472,37,0)
006M^ORG^^ORG segment missing
"DATA",404.472,37,"DESC",0)
^^1^1^3030102^
"DATA",404.472,37,"DESC",1,0)
ORG segment missing
"DATA",404.472,38,0)
114M^EVN^2^EVN must be B02
"DATA",404.472,38,"DESC",0)
^^1^1^3030102^
"DATA",404.472,38,"DESC",1,0)
EVN must be B02
"DATA",404.472,39,0)
502M^STF^2^Invalid Staff Code
"DATA",404.472,39,"DESC",0)
^^1^1^3030102^
"DATA",404.472,39,"DESC",1,0)
Invalid Staff Code
"DATA",404.472,40,0)
602M^ORG^2^Invalid Organization Unit Code
"DATA",404.472,40,"DESC",0)
^404.482^1^1^3030102^^^
"DATA",404.472,40,"DESC",1,0)
Invalid Organization Unit Code
"DATA",404.472,41,0)
608M^ORG^8^Invalid Area of Specialization
"DATA",404.472,41,"DESC",0)
^^1^1^3030102^
"DATA",404.472,41,"DESC",1,0)
Invalid Area of Specialization
"DATA",404.472,42,0)
702M^ZFT^2^DIRECT PATIENT CARE FTEE INVALID
"DATA",404.472,42,"DESC",0)
^^1^1^3030102^
"DATA",404.472,42,"DESC",1,0)
DIRECT PATIENT CARE FTEE INVALID
"DATA",404.472,43,0)
703M^ZFT^3^MAXIMUM WORKLOAD INVALID
"DATA",404.472,43,"DESC",0)
^^1^1^3030102^
"DATA",404.472,43,"DESC",1,0)
MAXIMUM WORKLOAD INVALID
"DATA",404.472,44,0)
801M^MSH^1^Missing Field Separator
"DATA",404.472,44,"DESC",0)
^^1^1^3030204^
"DATA",404.472,44,"DESC",1,0)
Missing Field Separator
"DATA",404.472,45,0)
802M^MSH^2^Missing encoding character
"DATA",404.472,45,"DESC",0)
^^1^1^3030204^
"DATA",404.472,45,"DESC",1,0)
Missing encoding character
"DATA",404.472,46,0)
809M^MSH^9^Missing Message Type
"DATA",404.472,46,"DESC",0)
^^1^1^3030204^
"DATA",404.472,46,"DESC",1,0)
Missing Message Type
"DATA",404.472,47,0)
810M^MSH^10^Missing Message control ID
"DATA",404.472,47,"DESC",0)
^^1^1^3030204^
"DATA",404.472,47,"DESC",1,0)
Missing Message control ID
"DATA",404.472,48,0)
811M^MSH^11^Missing processing ID
"DATA",404.472,48,"DESC",0)
^^1^1^3030204^
"DATA",404.472,48,"DESC",1,0)
Missing processing ID
"DATA",404.472,49,0)
812M^MSH^12^Missing version ID
"DATA",404.472,49,"DESC",0)
^^1^1^3030204^
"DATA",404.472,49,"DESC",1,0)
Missing version ID
"FIA",404.471)
PCMM HL7 TRANSMISSION LOG
"FIA",404.471,0)
^SCPT(404.471,
"FIA",404.471,0,0)
404.471
"FIA",404.471,0,1)
y^n^p^^^^n
"FIA",404.471,0,10)

"FIA",404.471,0,11)

"FIA",404.471,0,"RLRO")

"FIA",404.471,0,"VR")
5.3^SD
"FIA",404.471,404.471)
1
"FIA",404.471,404.471,.07)

"FIA",404.471,404.471,.08)

"FIA",404.472)
PCMM HL7 ERROR CODE
"FIA",404.472,0)
^SCPT(404.472,
"FIA",404.472,0,0)
404.472
"FIA",404.472,0,1)
n^n^f^^n^PCMM NEW^y^o^n
"FIA",404.472,0,10)

"FIA",404.472,0,11)

"FIA",404.472,0,"RLRO")
^DIBT(1656,1)
"FIA",404.472,0,"VR")
5.3^SD
"FIA",404.472,404.472)
0
"FIA",404.472,404.482)
0
"FIA",404.48)
PCMM HL7 EVENT
"FIA",404.48,0)
^SCPT(404.48,
"FIA",404.48,0,0)
404.48DI
"FIA",404.48,0,1)
y^n^f^^^^n
"FIA",404.48,0,10)

"FIA",404.48,0,11)

"FIA",404.48,0,"RLRO")

"FIA",404.48,0,"VR")
5.3^SD
"FIA",404.48,404.48)
0
"FIA",404.52)
POSITION ASSIGNMENT HISTORY
"FIA",404.52,0)
^SCTM(404.52,
"FIA",404.52,0,0)
404.52PIA
"FIA",404.52,0,1)
y^n^f^^^^n
"FIA",404.52,0,10)

"FIA",404.52,0,11)

"FIA",404.52,0,"RLRO")

"FIA",404.52,0,"VR")
5.3^SD
"FIA",404.52,404.52)
0
"FIA",404.57)
TEAM POSITION
"FIA",404.57,0)
^SCTM(404.57,
"FIA",404.57,0,0)
404.57IA
"FIA",404.57,0,1)
y^n^f^^^^n
"FIA",404.57,0,10)

"FIA",404.57,0,11)

"FIA",404.57,0,"RLRO")

"FIA",404.57,0,"VR")
5.3^SD
"FIA",404.57,404.57)
0
"FIA",404.57,404.571)
0
"FIA",404.59)
TEAM POSITION HISTORY
"FIA",404.59,0)
^SCTM(404.59,
"FIA",404.59,0,0)
404.59PIA
"FIA",404.59,0,1)
y^n^f^^^^n
"FIA",404.59,0,10)

"FIA",404.59,0,11)

"FIA",404.59,0,"RLRO")

"FIA",404.59,0,"VR")
5.3^SD
"FIA",404.59,404.59)
0
"INI")
SC53272P
"INIT")
POST^SC53272P
"IX",404.57,404.57,"AD",0)
404.57^AD^Workload HL7 Trigger^MU^^F^IR^I^404.57^^^^^A
"IX",404.57,404.57,"AD",.1,0)
^^1^1^3030218^
"IX",404.57,404.57,"AD",.1,1,0)
Workload HL7 trigger. Triggers entry in PCMM HL7 EVENT file.
"IX",404.57,404.57,"AD",1)
D POSBXREF^SCMCHLX(DA,404.57)
"IX",404.57,404.57,"AD",1.4)
S X=0 I $P($G(^SCTM(404.57,DA,0)),U,4) S X=1
"IX",404.57,404.57,"AD",2)
Q
"IX",404.57,404.57,"AD",2.4)

"IX",404.57,404.57,"AD",11.1,0)
^.114IA^1^1
"IX",404.57,404.57,"AD",11.1,1,0)
1^F^404.57^.08^^1^F
"IX",404.57,404.57,"AE",0)
404.57^AE^Workload event creation^MU^^F^IR^I^404.57^^^^^A
"IX",404.57,404.57,"AE",.1,0)
^^2^2^3030218^
"IX",404.57,404.57,"AE",.1,1,0)
Workload Event Creation. Triggers entry in PCMM HL7 EVENT file for 
"IX",404.57,404.57,"AE",.1,2,0)
workload HL7 messaging.
"IX",404.57,404.57,"AE",1)
D POSBXREF^SCMCHLX(DA,404.57)
"IX",404.57,404.57,"AE",1.4)
S X=$G(X2(1))
"IX",404.57,404.57,"AE",2)
D POSBXREF^SCMCHLX(DA,404.57)
"IX",404.57,404.57,"AE",2.4)
S X=$G(X1(1))
"IX",404.57,404.57,"AE",11.1,0)
^.114IA^1^1
"IX",404.57,404.57,"AE",11.1,1,0)
1^F^404.57^.04^^1^F
"IX",404.59,404.59,"AC",0)
404.59^AC^TRIGGER HL7 MESSAGE^MU^^F^IR^I^404.59^^^^^A
"IX",404.59,404.59,"AC",.1,0)
^^1^1^3030218^
"IX",404.59,404.59,"AC",.1,1,0)
Trigger entry in PCMM HL7 EVENT file for HL7 Workload message.
"IX",404.59,404.59,"AC",1)
D POSBXREF^SCMCHLX(DA,404.59)
"IX",404.59,404.59,"AC",1.4)
S X=0 S:X2(1)=0 X=1
"IX",404.59,404.59,"AC",2)
D POSBXREF^SCMCHLX(DA,404.59)
"IX",404.59,404.59,"AC",11.1,0)
^.114IA^1^1
"IX",404.59,404.59,"AC",11.1,1,0)
1^F^404.59^.03^^1^F
"KRN",3.8,267,-1)
0^1
"KRN",3.8,267,0)
PCMM WORKLOAD FTEE MAIL GROUP^PU^n^^^^
"KRN",3.8,267,2,0)
^3.801^3^3^3030313^^^^
"KRN",3.8,267,2,1,0)
Repository for PCMM Primary Care Workload HL7 messages.
"KRN",3.8,267,2,2,0)
Make Austin a member of this mail group so these HL7 messages
"KRN",3.8,267,2,3,0)
are transmitted to the NPCD.
"KRN",3.8,267,6,0)
^3.812^^0
"KRN",101,4421,-1)
0^4
"KRN",101,4421,0)
SCMC LE RETRANSMIT PATIENT^Select Record(s) for Retransmit^^A^^SCMC PCMM RETRANSMIT^^^^^^SCHEDULING
"KRN",101,4421,1,0)
^^2^2^3000305^^
"KRN",101,4421,1,1,0)
This protocol action permits a user to mark a patient on the list for
"KRN",101,4421,1,2,0)
retransmission.
"KRN",101,4421,20)
D RP^SCMCHLR4
"KRN",101,4421,24)
I $D(^XUSEC("SCMC PCMM RETRANSMIT",DUZ))
"KRN",101,4421,99)
59202,64018
"KRN",101,4427,-1)
0^3
"KRN",101,4427,0)
SCMC LE DESELECT PATIENT^Deselect Record(s) for Retransmit^^A^^^^^^^^SCHEDULING
"KRN",101,4427,1,0)
^^2^2^3000305^
"KRN",101,4427,1,1,0)
This protocol action permits a user to Deselect Patient(s) for
"KRN",101,4427,1,2,0)
retransmission.
"KRN",101,4427,20)
D DP^SCMCHLR5
"KRN",101,4427,24)
I $D(^XUSEC("SCMC PCMM RETRANSMIT",DUZ))
"KRN",101,4427,99)
59202,63976
"KRN",101,4864,-1)
0^2
"KRN",101,4864,0)
SCMC SEND SERVER WORKLOAD^PCMM SEND SERVER FOR WORKLOAD^^E^^^^^^^^SCHEDULING
"KRN",101,4864,1,0)
^101.06^2^2^3030207^^^^
"KRN",101,4864,1,1,0)
HL7 server protocol for sending PCMM Workload messages, which
"KRN",101,4864,1,2,0)
will contain primary care data used by the NPCD.
"KRN",101,4864,4)
^^^E
"KRN",101,4864,15)

"KRN",101,4864,20)

"KRN",101,4864,99)
59154,43606
"KRN",101,4864,770)
PCMM^^PMU^B02^^P^^NE^AL^2.4^ACK
"KRN",101,4864,772)
D ACK^SCMCHLRI
"KRN",101,4864,773)
1
"KRN",101,4864,775,0)
^101.0775PA^2^1
"KRN",101,4864,775,2,0)
4865
"KRN",101,4864,775,2,"^")
SCMC SEND CLIENT WORKLOAD
"KRN",101,4865,-1)
0^1
"KRN",101,4865,0)
SCMC SEND CLIENT WORKLOAD^PCMM SEND CLIENT FOR WORKLOAD^^S^^^^^^^^SCHEDULING
"KRN",101,4865,1,0)
^101.06^2^2^3030128^^^^
"KRN",101,4865,1,1,0)
HL7 server protocol for sending PCMM workload messages
"KRN",101,4865,1,2,0)
Will contain primary care data used by the NPCD.
"KRN",101,4865,4)
^^^
"KRN",101,4865,99)
59175,37564
"KRN",101,4865,770)
^NPCD-AAC^ACK^B02^^^PCMM WORK^^^2.4^ADT
"KRN",101,4865,773)
1^1^0^1
"KRN",771,86,-1)
0^1
"KRN",771,86,0)
PCMM^a^^PCMM WORKLOAD FTEE MAIL GROUP^^^USA
"KRN",870,196,-1)
0^1
"KRN",870,196,0)
PCMM WORK^^MAILMAN^^^^^^^^^^^^^^^^^^
"KRN",870,196,100)
PCMM WORKLOAD FTEE MAIL GROUP
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930824^10000000057
"PKG",16,22,1,"PAH",1,0)
272^3030410
"PKG",16,22,1,"PAH",1,1,0)
^^10^10^3030410
"PKG",16,22,1,"PAH",1,1,1,0)
PCMM WORKLOAD TRANSMISSION TO AAC
"PKG",16,22,1,"PAH",1,1,2,0)
 
"PKG",16,22,1,"PAH",1,1,3,0)
Added WORKLOAD (.08) field to PCMM HL7 EVENT file to differentiate HL7 
"PKG",16,22,1,"PAH",1,1,4,0)
message types
"PKG",16,22,1,"PAH",1,1,5,0)
 
"PKG",16,22,1,"PAH",1,1,6,0)
Added New type crossrefence to POSTION ASSIGNMENT HISTORY (#404.52) and 
"PKG",16,22,1,"PAH",1,1,7,0)
TEAM POSITION (#404.57)
"PKG",16,22,1,"PAH",1,1,8,0)
 
"PKG",16,22,1,"PAH",1,1,9,0)
Address NOIS TAM-1102-32213 active position assignments only on FTEE 
"PKG",16,22,1,"PAH",1,1,10,0)
entry and reports
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","SC53272P")
0^^B8111270
"RTN","SC53272P",1,0)
SC53272P ;JDS/ALB -PREINIT ; 16 Dec 2002  11:14 AM  ; Compiled January 6, 2003 15:50:04
"RTN","SC53272P",2,0)
 ;;5.3;Scheduling;**272**;AUG 13, 1993
"RTN","SC53272P",3,0)
HL7EVNT ;Create HL7 event B02 - HL7 EVENT TYPE CODE file (#779.001)
"RTN","SC53272P",4,0)
 ;
"RTN","SC53272P",5,0)
 ;Input  : None
"RTN","SC53272P",6,0)
 ;Output : None
"RTN","SC53272P",7,0)
 ;Note   : This is a KIDS complient check point
"RTN","SC53272P",8,0)
 ;
"RTN","SC53272P",9,0)
 ;Declare variables
"RTN","SC53272P",10,0)
 ;
"RTN","SC53272P",11,0)
 Q:$D(^HL(779.001,"B","B02"))
"RTN","SC53272P",12,0)
 N DIC,X,Y,DLAYGO,DTOUT,DUOUT,NEWENTRY,MSGTXT,PTREVNT,DIE,DA,DR
"RTN","SC53272P",13,0)
 ;Create/find entry
"RTN","SC53272P",14,0)
 D BMES^XPDUTL(">>> Creating entry for B02 in HL7 EVENT TYPE CODE file (#779.001)")
"RTN","SC53272P",15,0)
 S DIC="^HL(779.001,"
"RTN","SC53272P",16,0)
 S DIC(0)="L"
"RTN","SC53272P",17,0)
 S DIC("DR")="2///PCMM Workload Transmission"
"RTN","SC53272P",18,0)
 S DLAYGO=779.001
"RTN","SC53272P",19,0)
 S X="B02"
"RTN","SC53272P",20,0)
 D ^DIC
"RTN","SC53272P",21,0)
 S PTREVNT=+Y
"RTN","SC53272P",22,0)
 S NEWENTRY=+$P(Y,"^",3)
"RTN","SC53272P",23,0)
 S MSGTXT(1)="    Existing entry found - support of HL7 v2.4 will be added/verified"
"RTN","SC53272P",24,0)
 S:(NEWENTRY) MSGTXT(1)="    Entry created - support of HL7 v2.4 will be added"
"RTN","SC53272P",25,0)
 I (PTREVNT<0) D
"RTN","SC53272P",26,0)
 .S MSGTXT(1)="    ** Unable to create entry for B02"
"RTN","SC53272P",27,0)
 .S MSGTXT(2)="    ** Entry must be created manually"
"RTN","SC53272P",28,0)
 D MES^XPDUTL(.MSGTXT)
"RTN","SC53272P",29,0)
 K MSGTXT
"RTN","SC53272P",30,0)
 ;Don't continue if entry wasn't created
"RTN","SC53272P",31,0)
 Q:(PTREVNT<0)
"RTN","SC53272P",32,0)
 ;Add support for HL7 version 2.4
"RTN","SC53272P",33,0)
 S DIC="^HL(779.001,"_PTREVNT_",1,"
"RTN","SC53272P",34,0)
 S DIC(0)="LX"
"RTN","SC53272P",35,0)
 S DIC("P")=$P(^DD(779.001,100,0),"^",2)
"RTN","SC53272P",36,0)
 S DA(1)=PTREVNT
"RTN","SC53272P",37,0)
 S DLAYGO=779.001
"RTN","SC53272P",38,0)
 S X="2.4"
"RTN","SC53272P",39,0)
 D ^DIC
"RTN","SC53272P",40,0)
 S MSGTXT(1)="    Support for HL7 v2.4 "_$S($P(Y,"^",3):"added",1:"verified")
"RTN","SC53272P",41,0)
 I (Y<0) D
"RTN","SC53272P",42,0)
 .S MSGTXT(1)="    ** Unable to add support for HL7 v2.4"
"RTN","SC53272P",43,0)
 .S MSGTXT(2)="    ** Support for HL7 v2.4 must be added manually"
"RTN","SC53272P",44,0)
 D MES^XPDUTL(.MSGTXT)
"RTN","SC53272P",45,0)
 Q:$D(^HL(771.2,"B","PMU"))
"RTN","SC53272P",46,0)
 D BMES^XPDUTL(">>> Creating entry for PMU in HL7 MESSAGE TYPE file (#771.2)")
"RTN","SC53272P",47,0)
 S DIC="^HL(771.2,"
"RTN","SC53272P",48,0)
 S DIC(0)="L"
"RTN","SC53272P",49,0)
 S DIC("DR")="2///Workload Message;3///2.4"
"RTN","SC53272P",50,0)
 S DLAYGO=771.2
"RTN","SC53272P",51,0)
 S X="PMU"
"RTN","SC53272P",52,0)
 D ^DIC
"RTN","SC53272P",53,0)
 S MSGTXT(1)="    Support for HL7 Message Type PMU added"
"RTN","SC53272P",54,0)
 I (Y<0) D
"RTN","SC53272P",55,0)
 .S MSGTXT(1)="    ** Unable to add support forHL7 Message Type PMU"
"RTN","SC53272P",56,0)
 .S MSGTXT(2)="    ** Support for HL7 Message Type PMU must be added manually"
"RTN","SC53272P",57,0)
 D MES^XPDUTL(.MSGTXT)
"RTN","SC53272P",58,0)
 ;Done
"RTN","SC53272P",59,0)
 Q
"RTN","SC53272P",60,0)
POST ;look for active FTEE assignments and update data
"RTN","SC53272P",61,0)
 D MES^XPDUTL("Placing current FTEE workload designations in PCMM HL7 EVENT file")
"RTN","SC53272P",62,0)
 F DA=0:0 S DA=$O(^SCTM(404.52,DA)) Q:'DA  D
"RTN","SC53272P",63,0)
 .S X=$G(^SCTM(404.52,DA,0)) Q:'$P(X,U,9)
"RTN","SC53272P",64,0)
 .I $O(^SCTM(404.52,"AIDT",+X,0,-$P(X,U,2)),-1) Q
"RTN","SC53272P",65,0)
 .S X=$P(X,U,9)
"RTN","SC53272P",66,0)
 .D POSBXREF^SCMCHLX(DA,404.52)
"RTN","SCMCHL")
0^4^B22773542
"RTN","SCMCHL",1,0)
SCMCHL ;BP/DJB - PCMM HL7 Main Calling Point ; 16 Dec 2002  11:14 AM
"RTN","SCMCHL",2,0)
 ;;5.3;Scheduling;**177,204,224,272**;AUG 13, 1993
"RTN","SCMCHL",3,0)
 ;
"RTN","SCMCHL",4,0)
 ;Reference routine: SCDXMSG
"RTN","SCMCHL",5,0)
MAIN(MODE,XMITARRY,VARPTR,WORK) ;Main entry point to generate Primary Care HL7
"RTN","SCMCHL",6,0)
 ;messages to NPCD in Austin. Loop thru PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHL",7,0)
 ;and generate HL7 message for each appropriate event.
"RTN","SCMCHL",8,0)
 ;
"RTN","SCMCHL",9,0)
 ;Input:
"RTN","SCMCHL",10,0)
 ;  MODE     - Mode of operation.
"RTN","SCMCHL",11,0)
 ;              1: Generate mode - Generate HL7 messages. (Default).
"RTN","SCMCHL",12,0)
 ;              2: Review mode   - HL7 segments will be built in array
"RTN","SCMCHL",13,0)
 ;                                 XMITARRY and may be reviewed. HL7
"RTN","SCMCHL",14,0)
 ;                                 messages WILL NOT be generated, and
"RTN","SCMCHL",15,0)
 ;                                 processed events will not be
"RTN","SCMCHL",16,0)
 ;                                 removed from the transmit xref in
"RTN","SCMCHL",17,0)
 ;                                 PCMM HL7 EVENT file.
"RTN","SCMCHL",18,0)
 ;  XMITARRY - Array to store HL7 segments (full global ref).
"RTN","SCMCHL",19,0)
 ;             Default=^TMP("PCMM","HL7",$J)
"RTN","SCMCHL",20,0)
 ;   VARPTR  - For testing purposes, you may pass in an EVENT POINTER
"RTN","SCMCHL",21,0)
 ;             value. This value will be used rather than $ORDERing
"RTN","SCMCHL",22,0)
 ;             thru "AACXMIT" xref in PCMM HL7 EVENT file.
"RTN","SCMCHL",23,0)
 ;             Examples:
"RTN","SCMCHL",24,0)
 ;                "2290;SCPT(404.43," (Patient Team Position Assign)
"RTN","SCMCHL",25,0)
 ;                "725;SCTM(404.52,"  (Position Assign History)
"RTN","SCMCHL",26,0)
 ;                "1;SCTM(404.53,"    (Preceptor Assign History)
"RTN","SCMCHL",27,0)
 ;   Work Optional if present
"RTN","SCMCHL",28,0)
 ;Output: None
"RTN","SCMCHL",29,0)
 ;
"RTN","SCMCHL",30,0)
 NEW ERRCNT,IEN,MSG,MSGCNT,RESULT
"RTN","SCMCHL",31,0)
 NEW SCEVIEN,SCFAC
"RTN","SCMCHL",32,0)
 NEW HL,HLECH,HLEID,HLFS,HLQ,HLP,XMITERR
"RTN","SCMCHL",33,0)
 ;
"RTN","SCMCHL",34,0)
 ;Initialize variables - set global locations
"RTN","SCMCHL",35,0)
 S:$G(MODE)'=2 MODE=1 ;Default mode = "Generate"
"RTN","SCMCHL",36,0)
 S:$G(XMITARRY)="" XMITARRY="^TMP(""PCMM"",""HL7"","_$J_")" ;Segments
"RTN","SCMCHL",37,0)
 S XMITERR="^TMP(""PCMM"",""ERR"","_$J_")" ;Errors
"RTN","SCMCHL",38,0)
 S MSGCNT=0
"RTN","SCMCHL",39,0)
 ;
"RTN","SCMCHL",40,0)
 ;Get pointer to sending event
"RTN","SCMCHL",41,0)
 S HLEID=$$HLEID()
"RTN","SCMCHL",42,0)
 I 'HLEID D  Q
"RTN","SCMCHL",43,0)
 . S MSG="Unable to initialize HL7 variables - protocol not found"
"RTN","SCMCHL",44,0)
 . D ERRBULL^SCMCHLM(MSG)
"RTN","SCMCHL",45,0)
 ;
"RTN","SCMCHL",46,0)
 ;Initialize HL7 variables
"RTN","SCMCHL",47,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","SCMCHL",48,0)
 I $O(HL(""))="" D  Q
"RTN","SCMCHL",49,0)
 . D ERRBULL^SCMCHLM($P(HL,"^",2))
"RTN","SCMCHL",50,0)
 ;
"RTN","SCMCHL",51,0)
 ;Get faciltiy number
"RTN","SCMCHL",52,0)
 S SCFAC=+$P($$SITE^VASITE(),"^",3)
"RTN","SCMCHL",53,0)
 ;
"RTN","SCMCHL",54,0)
 ;User passed in an EVENT POINTER value
"RTN","SCMCHL",55,0)
 I $G(VARPTR)]"" D MANUAL Q
"RTN","SCMCHL",56,0)
 ;
"RTN","SCMCHL",57,0)
LOOP ;Loop thru EVENT POINTER xref and send message for each unique one.
"RTN","SCMCHL",58,0)
 ;alb/rpm Patch 224
"RTN","SCMCHL",59,0)
 ;The SCLIMIT counter allows sites to limit the number of HL7 messages
"RTN","SCMCHL",60,0)
 ;processed at any one time.  The next EVENT POINTER in the queue will
"RTN","SCMCHL",61,0)
 ;not be processed if SCLIMIT is exceeded.  SCLIMIT is not an absolute
"RTN","SCMCHL",62,0)
 ;limit, since a single EVENT POINTER can generate multiple HL7
"RTN","SCMCHL",63,0)
 ;messages.
"RTN","SCMCHL",64,0)
 ;Sites can modify SCLIMIT by editing the HL7 TRANSMIT LIMIT field of
"RTN","SCMCHL",65,0)
 ;the PCMM PARAMETER file.
"RTN","SCMCHL",66,0)
 ;
"RTN","SCMCHL",67,0)
 NEW SCLIMIT,WORK,VARPTR
"RTN","SCMCHL",68,0)
 S SCLIMIT=$P($G(^SCTM(404.44,1,1)),U,5) ;Limit # of msgs processed
"RTN","SCMCHL",69,0)
 S:'SCLIMIT SCLIMIT=2500 ;Default to 2500 msgs
"RTN","SCMCHL",70,0)
 S VARPTR=""
"RTN","SCMCHL",71,0)
 F  S VARPTR=$O(^SCPT(404.48,"AACXMIT",VARPTR)) Q:VARPTR=""!(SCLIMIT<1)  D
"RTN","SCMCHL",72,0)
 . KILL @XMITARRY ;Initialize array
"RTN","SCMCHL",73,0)
 . ;
"RTN","SCMCHL",74,0)
 . ;Preserve the Event IEN. Used to process a deletion.
"RTN","SCMCHL",75,0)
 . F SCEVIEN=0:0 S SCEVIEN=$O(^SCPT(404.48,"AACXMIT",VARPTR,SCEVIEN)) Q:'SCEVIEN  D
"RTN","SCMCHL",76,0)
 .. ;
"RTN","SCMCHL",77,0)
 .. ;Build segment array
"RTN","SCMCHL",78,0)
 .. K SCFUT
"RTN","SCMCHL",79,0)
 .. S WORK=+$P($G(^SCPT(404.48,SCEVIEN,0)),U,8)
"RTN","SCMCHL",80,0)
 .. I WORK N HLEID S HLEID=$$HLEIDW() S RESULT=$$BUILD^SCMCHLP(VARPTR,.HL,.XMITARRY,SCEVIEN)
"RTN","SCMCHL",81,0)
 .. I 'WORK S RESULT=$$BUILD^SCMCHLB(VARPTR,.HL,.XMITARRY)
"RTN","SCMCHL",82,0)
 .. I +RESULT<0 D  Q  ;Error occurred when building segment array
"RTN","SCMCHL",83,0)
 .. . S @XMITERR@(VARPTR)=$P(RESULT,"^",2)
"RTN","SCMCHL",84,0)
 .. ;
"RTN","SCMCHL",85,0)
 .. ;If in Review mode, display info and Quit.
"RTN","SCMCHL",86,0)
 .. I MODE=2 D  Q  ;
"RTN","SCMCHL",87,0)
 .. . W !,VARPTR_"  "_$S('$D(@XMITARRY):"No ",1:"")_"Data Found"
"RTN","SCMCHL",88,0)
 .. ;
"RTN","SCMCHL",89,0)
 .. ;If no segments built, turn off transmission flag and Quit.
"RTN","SCMCHL",90,0)
 .. I '$D(@XMITARRY) D:'$G(SCFUT) FLAG(VARPTR,SCEVIEN) Q
"RTN","SCMCHL",91,0)
 .. ;
"RTN","SCMCHL",92,0)
 .. ;Generate message.
"RTN","SCMCHL",93,0)
 .. ;
"RTN","SCMCHL",94,0)
 .. Q:'$$GENERATE^SCMCHLG()  ;^SCMCHLG Increments MSGCNT
"RTN","SCMCHL",95,0)
 .. D:'$G(SCFUT) FLAG(VARPTR,SCEVIEN) ;Turn off transmission flag
"RTN","SCMCHL",96,0)
 .. K @XMITARRY  ;clean up variables
"RTN","SCMCHL",97,0)
 . ;
"RTN","SCMCHL",98,0)
 . Q
"RTN","SCMCHL",99,0)
 ;
"RTN","SCMCHL",100,0)
 I '$D(ZTQUEUED) W !,MSGCNT," messages sent."
"RTN","SCMCHL",101,0)
 ;
"RTN","SCMCHL",102,0)
 ;Send completion bulletin and clean up arrays.
"RTN","SCMCHL",103,0)
 I MODE=1 D  ;Don't do this if in DISPLAY mode.
"RTN","SCMCHL",104,0)
 . S ERRCNT=$$COUNT^SCMCHLS(XMITERR)
"RTN","SCMCHL",105,0)
 . D CMPLBULL^SCMCHLM(MSGCNT,ERRCNT,XMITERR)
"RTN","SCMCHL",106,0)
 . KILL @XMITARRY,@XMITERR
"RTN","SCMCHL",107,0)
 ;
"RTN","SCMCHL",108,0)
 Q:SCLIMIT<1
"RTN","SCMCHL",109,0)
 ;
"RTN","SCMCHL",110,0)
 ;alb/rpm;Patch 224;Transmit "M"arked messages from Transmission Log
"RTN","SCMCHL",111,0)
 D EN^SCMCHLRR(.SCLIMIT)
"RTN","SCMCHL",112,0)
 Q:SCLIMIT<1
"RTN","SCMCHL",113,0)
 ;
"RTN","SCMCHL",114,0)
 ;alb/rpm;Patch224;Transmit messages with overdue ACKnowledgment
"RTN","SCMCHL",115,0)
 D AUTO^SCMCHLRR(.SCLIMIT)
"RTN","SCMCHL",116,0)
 Q
"RTN","SCMCHL",117,0)
 ;
"RTN","SCMCHL",118,0)
MANUAL ;User passed in a specific variable pointer value. This value will
"RTN","SCMCHL",119,0)
 ;be used rather than $ORDERing thru "AACXMIT" xref.
"RTN","SCMCHL",120,0)
 ;
"RTN","SCMCHL",121,0)
 NEW SCMANUAL
"RTN","SCMCHL",122,0)
 S SCMANUAL=1 ;Indicates variable pointer was manually entered.
"RTN","SCMCHL",123,0)
 ;             A delete cannot be processed.
"RTN","SCMCHL",124,0)
 ;
"RTN","SCMCHL",125,0)
 ;Initialize array
"RTN","SCMCHL",126,0)
 KILL @XMITARRY
"RTN","SCMCHL",127,0)
 ;
"RTN","SCMCHL",128,0)
 ;Build segment array
"RTN","SCMCHL",129,0)
 I $G(WORK) N HLEID S HLEID=$$HLEIDW() S RESULT=$$BUILD^SCMCHLP(VARPTR,.HL,.XMITARRY)
"RTN","SCMCHL",130,0)
 I '$G(WORK) S RESULT=$$BUILD^SCMCHLB(VARPTR,.HL,.XMITARRY)
"RTN","SCMCHL",131,0)
 I +RESULT<0 D  Q  ;Error occurred when building segment array
"RTN","SCMCHL",132,0)
 . S @XMITERR@(VARPTR)=$P(RESULT,"^",2)
"RTN","SCMCHL",133,0)
 W !,VARPTR_"  "_$S('$D(@XMITARRY):"No ",1:"")_"Data Found",!
"RTN","SCMCHL",134,0)
 ;
"RTN","SCMCHL",135,0)
 ;Generate message - FOR TESTING PURPOSES ONLY!
"RTN","SCMCHL",136,0)
 S RESULT=$$GENERATE^SCMCHLG()
"RTN","SCMCHL",137,0)
 Q
"RTN","SCMCHL",138,0)
 ;
"RTN","SCMCHL",139,0)
FLAG(VARPTR,SCEVIEN) ;Turn off transmission flag. This removes event from "AACXMIT"
"RTN","SCMCHL",140,0)
 ;xref in PCMM HL7 EVENT file.
"RTN","SCMCHL",141,0)
 ;Input:
"RTN","SCMCHL",142,0)
 ;   VARPTR - Internal value of EVENT POINTER field
"RTN","SCMCHL",143,0)
 ;
"RTN","SCMCHL",144,0)
 Q:$G(VARPTR)']""
"RTN","SCMCHL",145,0)
 I $G(SCEVIEN) D TRANSMIT^SCMCHLE(SCEVIEN,0) Q
"RTN","SCMCHL",146,0)
 NEW IEN
"RTN","SCMCHL",147,0)
 S IEN=0
"RTN","SCMCHL",148,0)
 F  S IEN=$O(^SCPT(404.48,"AACXMIT",VARPTR,IEN)) Q:'IEN  D  ;
"RTN","SCMCHL",149,0)
 . D TRANSMIT^SCMCHLE(IEN,0)
"RTN","SCMCHL",150,0)
 Q
"RTN","SCMCHL",151,0)
 ;
"RTN","SCMCHL",152,0)
HLEIDW() ;Return workload sending event
"RTN","SCMCHL",153,0)
 Q +$O(^ORD(101,"B","SCMC SEND SERVER WORKLOAD",0))
"RTN","SCMCHL",154,0)
HLEID() ;Return pointer to sending event
"RTN","SCMCHL",155,0)
 I $G(WORK) Q $$HLEIDW()
"RTN","SCMCHL",156,0)
 Q +$O(^ORD(101,"B","PCMM SEND SERVER FOR ADT-A08",0))
"RTN","SCMCHLA")
0^14^B24795612
"RTN","SCMCHLA",1,0)
SCMCHLA ;ALB/KCL - PCMM HL7 Transmission Log File API'S ;25-JAN-2000
"RTN","SCMCHLA",2,0)
 ;;5.3;Scheduling;**210,272**;AUG 13, 1993
"RTN","SCMCHLA",3,0)
 ;
"RTN","SCMCHLA",4,0)
LOCK(SCTLIEN) ; Description: Used to lock a record in the PCMM HL7
"RTN","SCMCHLA",5,0)
 ; TANSMISSION LOG file.
"RTN","SCMCHLA",6,0)
 ;
"RTN","SCMCHLA",7,0)
 ;  Input:
"RTN","SCMCHLA",8,0)
 ;   SCTLIEN - ien of a record in the PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",9,0)
 ;
"RTN","SCMCHLA",10,0)
 ; Output:
"RTN","SCMCHLA",11,0)
 ;  Function Value: Returns 1 on success, 0 on faliure
"RTN","SCMCHLA",12,0)
 ;
"RTN","SCMCHLA",13,0)
 I $G(SCTLIEN) L +^SCPT(404.471,SCTLIEN):3
"RTN","SCMCHLA",14,0)
 ;
"RTN","SCMCHLA",15,0)
 Q $T
"RTN","SCMCHLA",16,0)
 ;
"RTN","SCMCHLA",17,0)
 ;
"RTN","SCMCHLA",18,0)
UNLOCK(SCTLIEN) ; Description: Used to unlock a record in the PCMM HL7
"RTN","SCMCHLA",19,0)
 ; TANSMISSION LOG file.
"RTN","SCMCHLA",20,0)
 ;
"RTN","SCMCHLA",21,0)
 ;  Input:
"RTN","SCMCHLA",22,0)
 ;   SCTLIEN - ien of a record in the PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",23,0)
 ;
"RTN","SCMCHLA",24,0)
 ; Output: None
"RTN","SCMCHLA",25,0)
 ;
"RTN","SCMCHLA",26,0)
 I $G(SCTLIEN) L -^SCPT(404.471,SCTLIEN)
"RTN","SCMCHLA",27,0)
 Q
"RTN","SCMCHLA",28,0)
 ;
"RTN","SCMCHLA",29,0)
 ;
"RTN","SCMCHLA",30,0)
GETLOG(SCTLIEN,SCECIEN,TLOG) ;
"RTN","SCMCHLA",31,0)
 ; Description: Used to obtain a record in the PCMM HL7 TRANSMISSION LOG
"RTN","SCMCHLA",32,0)
 ; file and a record in the Error Code subfile.  The field values will
"RTN","SCMCHLA",33,0)
 ; be returned in the TLOG array.
"RTN","SCMCHLA",34,0)
 ;
"RTN","SCMCHLA",35,0)
 ;  Input:
"RTN","SCMCHLA",36,0)
 ;   SCTLIEN - ien of a record in the PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",37,0)
 ;   SCECIEN - ien of record in the Error Code subfile
"RTN","SCMCHLA",38,0)
 ;
"RTN","SCMCHLA",39,0)
 ; Output:
"RTN","SCMCHLA",40,0)
 ;  Function Value: Returns 1 on success, 0 on faliure
"RTN","SCMCHLA",41,0)
 ;  TLOG - this is the name of a local array, it should be passed by
"RTN","SCMCHLA",42,0)
 ;         reference.  If the function is successful the array will
"RTN","SCMCHLA",43,0)
 ;         contain the PCMM HL7 TRANSMISSION LOG record and the
"RTN","SCMCHLA",44,0)
 ;         Error Code subfile record.
"RTN","SCMCHLA",45,0)
 ;
"RTN","SCMCHLA",46,0)
 ;         subscript           field name
"RTN","SCMCHLA",47,0)
 ;         ---------           ----------
"RTN","SCMCHLA",48,0)
 ;         "MSGID"             Message Control ID
"RTN","SCMCHLA",49,0)
 ;         "DFN"               Patient
"RTN","SCMCHLA",50,0)
 ;         "TRANS"             Transmission Date/Time
"RTN","SCMCHLA",51,0)
 ;         "STATUS"            Status
"RTN","SCMCHLA",52,0)
 ;         "ACK DT/TM"         ACK Received Date/Time
"RTN","SCMCHLA",53,0)
 ;
"RTN","SCMCHLA",54,0)
 ;  Error Code subfile record:
"RTN","SCMCHLA",55,0)
 ;         "ERR","CODE"        Error Code
"RTN","SCMCHLA",56,0)
 ;         "ERR","SEG"         Segment
"RTN","SCMCHLA",57,0)
 ;         "ERR","SEQ"         Sequence
"RTN","SCMCHLA",58,0)
 ;         "ERR","ZPCID"       ZPC ID
"RTN","SCMCHLA",59,0)
 ;         "ERR","EPS"         Error Processing Status
"RTN","SCMCHLA",60,0)
 ;
"RTN","SCMCHLA",61,0)
 N NODE
"RTN","SCMCHLA",62,0)
 K TLOG S TLOG=""
"RTN","SCMCHLA",63,0)
 Q:'$G(SCTLIEN) 0
"RTN","SCMCHLA",64,0)
 ;
"RTN","SCMCHLA",65,0)
 S NODE=$G(^SCPT(404.471,SCTLIEN,0))
"RTN","SCMCHLA",66,0)
 Q:(NODE="") 0
"RTN","SCMCHLA",67,0)
 S TLOG("MSGID")=$P(NODE,"^")
"RTN","SCMCHLA",68,0)
 S TLOG("DFN")=$P(NODE,"^",2)
"RTN","SCMCHLA",69,0)
 S TLOG("TRANS")=$P(NODE,"^",3)
"RTN","SCMCHLA",70,0)
 S TLOG("STATUS")=$P(NODE,"^",4)
"RTN","SCMCHLA",71,0)
 S TLOG("ACK DT/TM")=$P(NODE,"^",5)
"RTN","SCMCHLA",72,0)
 S TLOG("WORK")=$P(NODE,"^",7)
"RTN","SCMCHLA",73,0)
 ;
"RTN","SCMCHLA",74,0)
 S TLOG("ERR")=""
"RTN","SCMCHLA",75,0)
 I $G(SCECIEN) D
"RTN","SCMCHLA",76,0)
 .S NODE=$G(^SCPT(404.471,SCTLIEN,"ERR",SCECIEN,0))
"RTN","SCMCHLA",77,0)
 .S TLOG("ERR","CODE")=$P(NODE,"^")
"RTN","SCMCHLA",78,0)
 .S TLOG("ERR","SEG")=$P(NODE,"^",2)
"RTN","SCMCHLA",79,0)
 .S TLOG("ERR","SEQ")=$P(NODE,"^",3)
"RTN","SCMCHLA",80,0)
 .S TLOG("ERR","ZPCID")=$P(NODE,"^",5)
"RTN","SCMCHLA",81,0)
 .S TLOG("ERR","EPS")=$P(NODE,"^",6)
"RTN","SCMCHLA",82,0)
 ;
"RTN","SCMCHLA",83,0)
 Q 1
"RTN","SCMCHLA",84,0)
 ;
"RTN","SCMCHLA",85,0)
 ;
"RTN","SCMCHLA",86,0)
STATUS(SCTLIEN) ;
"RTN","SCMCHLA",87,0)
 ; Description: Used to get STATUS field for record in PCMM HL7
"RTN","SCMCHLA",88,0)
 ; TRANSMISSION LOG file.
"RTN","SCMCHLA",89,0)
 ;
"RTN","SCMCHLA",90,0)
 ;  Input:
"RTN","SCMCHLA",91,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",92,0)
 ;
"RTN","SCMCHLA",93,0)
 ; Output:
"RTN","SCMCHLA",94,0)
 ;  Funtion Value: Returns STATUS field value, null otherwise.
"RTN","SCMCHLA",95,0)
 ;
"RTN","SCMCHLA",96,0)
 Q:'$G(SCTLIEN) ""
"RTN","SCMCHLA",97,0)
 Q $P($G(^SCPT(404.471,SCTLIEN,0)),"^",4)
"RTN","SCMCHLA",98,0)
 ;
"RTN","SCMCHLA",99,0)
 ;
"RTN","SCMCHLA",100,0)
UPDSTAT(SCTLIEN,STATUS,ERROR) ;
"RTN","SCMCHLA",101,0)
 ; Description: Used to update the STATUS field of record in PCMM HL7
"RTN","SCMCHLA",102,0)
 ; TRANSMISSION LOG file.
"RTN","SCMCHLA",103,0)
 ;
"RTN","SCMCHLA",104,0)
 ;  Input:
"RTN","SCMCHLA",105,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",106,0)
 ;    STATUS - T=Transmitted, A=Accepted, RJ=Rejected,
"RTN","SCMCHLA",107,0)
 ;             M=Marked for re-transmission, RT=Re-transmitted
"RTN","SCMCHLA",108,0)
 ;
"RTN","SCMCHLA",109,0)
 ; Output:
"RTN","SCMCHLA",110,0)
 ;  Funtion Value: Returns 1 on success, 0 on failure.
"RTN","SCMCHLA",111,0)
 ;  ERROR - returns error message on failure, pass by reference 
"RTN","SCMCHLA",112,0)
 ;
"RTN","SCMCHLA",113,0)
 N SCERR,SCFDA,SCIENS
"RTN","SCMCHLA",114,0)
 ;
"RTN","SCMCHLA",115,0)
 S ERROR=""
"RTN","SCMCHLA",116,0)
 ;
"RTN","SCMCHLA",117,0)
 I '$G(SCTLIEN) S ERROR="NO RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",118,0)
 I '$$LOCK(SCTLIEN) S ERROR="UNABLE TO OBTAIN LOCK ON RECORD" Q 0
"RTN","SCMCHLA",119,0)
 I ",T,A,RJ,M,RT,"'[(","_$G(STATUS)_",") S ERROR="INVALID STATUS" Q 0
"RTN","SCMCHLA",120,0)
 ;
"RTN","SCMCHLA",121,0)
 S SCIENS=SCTLIEN_","
"RTN","SCMCHLA",122,0)
 S SCFDA(404.471,SCIENS,.04)=STATUS  ; Status
"RTN","SCMCHLA",123,0)
 D FILE^DIE("","SCFDA","SCERR")
"RTN","SCMCHLA",124,0)
 ;
"RTN","SCMCHLA",125,0)
 D UNLOCK(SCTLIEN)
"RTN","SCMCHLA",126,0)
 ;
"RTN","SCMCHLA",127,0)
 ; if error returned from DBS call, unable to file data
"RTN","SCMCHLA",128,0)
 I $G(SCERR) S ERROR="UNABLE TO UPDATE STATUS FIELD" Q 0
"RTN","SCMCHLA",129,0)
 ;
"RTN","SCMCHLA",130,0)
 Q 1
"RTN","SCMCHLA",131,0)
 ;
"RTN","SCMCHLA",132,0)
 ;
"RTN","SCMCHLA",133,0)
INCLUDE(SCTLIEN) ;
"RTN","SCMCHLA",134,0)
 ; Description: Used to get INCLUDED IN REJECT BULLETIN? field for
"RTN","SCMCHLA",135,0)
 ; record in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLA",136,0)
 ;
"RTN","SCMCHLA",137,0)
 ;  Input:
"RTN","SCMCHLA",138,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",139,0)
 ;
"RTN","SCMCHLA",140,0)
 ; Output:
"RTN","SCMCHLA",141,0)
 ;  Funtion Value: Returns INCLUDED IN REJECT BULLETIN? field value, null otherwise.
"RTN","SCMCHLA",142,0)
 ;
"RTN","SCMCHLA",143,0)
 Q:'$G(SCTLIEN) ""
"RTN","SCMCHLA",144,0)
 Q $P($G(^SCPT(404.471,SCTLIEN,0)),"^",6)
"RTN","SCMCHLA",145,0)
 ;
"RTN","SCMCHLA",146,0)
 ;
"RTN","SCMCHLA",147,0)
UPDINCL(SCTLIEN,SCINCL,ERROR) ;
"RTN","SCMCHLA",148,0)
 ; Description: Used to update the INCLUDED IN REJECT BULLETIN? field of
"RTN","SCMCHLA",149,0)
 ; record in the PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLA",150,0)
 ;
"RTN","SCMCHLA",151,0)
 ;  Input:
"RTN","SCMCHLA",152,0)
 ;    SCTLIEN - IEN of record in PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",153,0)
 ;     SCINCL - 'Y'=YES
"RTN","SCMCHLA",154,0)
 ;
"RTN","SCMCHLA",155,0)
 ; Output:
"RTN","SCMCHLA",156,0)
 ;  Funtion Value: Returns 1 on success, 0 on failure.
"RTN","SCMCHLA",157,0)
 ;  ERROR - returns error message on failure, pass by reference 
"RTN","SCMCHLA",158,0)
 ;
"RTN","SCMCHLA",159,0)
 N SCERR,SCFDA,SCIENS
"RTN","SCMCHLA",160,0)
 ;
"RTN","SCMCHLA",161,0)
 S ERROR=""
"RTN","SCMCHLA",162,0)
 ;
"RTN","SCMCHLA",163,0)
 I '$G(SCTLIEN) S ERROR="NO RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",164,0)
 I $G(SCINCL)'="Y" S ERROR="INVALID FIELD VALUE" Q 0
"RTN","SCMCHLA",165,0)
 I '$$LOCK(SCTLIEN) S ERROR="UNABLE TO OBTAIN LOCK ON RECORD" Q 0
"RTN","SCMCHLA",166,0)
 ;
"RTN","SCMCHLA",167,0)
 S SCIENS=SCTLIEN_","
"RTN","SCMCHLA",168,0)
 S SCFDA(404.471,SCIENS,.06)=SCINCL  ; Included In Reject Bulletin?
"RTN","SCMCHLA",169,0)
 D FILE^DIE("","SCFDA","SCERR")
"RTN","SCMCHLA",170,0)
 ;
"RTN","SCMCHLA",171,0)
 D UNLOCK(SCTLIEN)
"RTN","SCMCHLA",172,0)
 ;
"RTN","SCMCHLA",173,0)
 ; if error returned from DBS call, unable to file data
"RTN","SCMCHLA",174,0)
 I $G(SCERR) S ERROR="UNABLE TO UPDATE 'INCLUDED IN REJECT BULLETIN?' FIELD" Q 0
"RTN","SCMCHLA",175,0)
 ;
"RTN","SCMCHLA",176,0)
 Q 1
"RTN","SCMCHLA",177,0)
 ;
"RTN","SCMCHLA",178,0)
 ;
"RTN","SCMCHLA",179,0)
ACK(SCTLIEN) ;
"RTN","SCMCHLA",180,0)
 ; Description: Used to get ACK RECEIVED DATE/TIME field for
"RTN","SCMCHLA",181,0)
 ; record in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLA",182,0)
 ;
"RTN","SCMCHLA",183,0)
 ;  Input:
"RTN","SCMCHLA",184,0)
 ;   SCTLIEN - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",185,0)
 ;
"RTN","SCMCHLA",186,0)
 ; Output:
"RTN","SCMCHLA",187,0)
 ;  Funtion Value: Returns ACK RECEIVED DATE/TIME field value, 0 otherwise.
"RTN","SCMCHLA",188,0)
 ;
"RTN","SCMCHLA",189,0)
 Q:'$G(SCTLIEN) 0
"RTN","SCMCHLA",190,0)
 Q $P($G(^SCPT(404.471,SCTLIEN,0)),"^",5)
"RTN","SCMCHLA",191,0)
 ;
"RTN","SCMCHLA",192,0)
 ;
"RTN","SCMCHLA",193,0)
UPDEPS(SCTLIEN,SCERIEN,EPSTAT,ERROR) ;
"RTN","SCMCHLA",194,0)
 ; Description: Used to update the ERROR PROCESSING STATUS field of
"RTN","SCMCHLA",195,0)
 ; record in the Error Code (#404.47142) subfile.
"RTN","SCMCHLA",196,0)
 ;
"RTN","SCMCHLA",197,0)
 ;  Input:
"RTN","SCMCHLA",198,0)
 ;    SCTLIEN - IEN of record in PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLA",199,0)
 ;    SCERIEN - IEN record in ERROR CODE (#404.47142) subfile
"RTN","SCMCHLA",200,0)
 ;     EPSTAT - 1=NEW, 2=CHECKED
"RTN","SCMCHLA",201,0)
 ;
"RTN","SCMCHLA",202,0)
 ; Output:
"RTN","SCMCHLA",203,0)
 ;  Funtion Value: Returns 1 on success, 0 on failure.
"RTN","SCMCHLA",204,0)
 ;  ERROR - returns error message on failure, pass by reference 
"RTN","SCMCHLA",205,0)
 ;
"RTN","SCMCHLA",206,0)
 N SCERR,SCFDA,SCIENS,STATUS
"RTN","SCMCHLA",207,0)
 ;
"RTN","SCMCHLA",208,0)
 S ERROR=""
"RTN","SCMCHLA",209,0)
 ;
"RTN","SCMCHLA",210,0)
 I '$G(SCTLIEN) S ERROR="NO RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",211,0)
 I '$G(SCERIEN) S ERROR="NO SUB-RECORD SPECIFIED" Q 0
"RTN","SCMCHLA",212,0)
 I '$G(EPSTAT) S ERROR="INVALID ERROR PROCESSING STATUS" Q 0
"RTN","SCMCHLA",213,0)
 S STATUS=$$STATUS(SCTLIEN)
"RTN","SCMCHLA",214,0)
 I (STATUS'="RJ")&(STATUS'="M") S ERROR="STATUS IS NOT 'REJECTED' OR 'MARKED FOR RE-TRANSMIT'" Q 0
"RTN","SCMCHLA",215,0)
 I '$$LOCK(SCTLIEN) S ERROR="UNABLE TO OBTAIN LOCK ON RECORD" Q 0
"RTN","SCMCHLA",216,0)
 ;
"RTN","SCMCHLA",217,0)
 S SCIENS=SCERIEN_","_SCTLIEN_","
"RTN","SCMCHLA",218,0)
 S SCFDA(404.47142,SCIENS,.06)=EPSTAT  ; Error Processing Status
"RTN","SCMCHLA",219,0)
 D FILE^DIE("","SCFDA","SCERR")
"RTN","SCMCHLA",220,0)
 ;
"RTN","SCMCHLA",221,0)
 D UNLOCK(SCTLIEN)
"RTN","SCMCHLA",222,0)
 ;
"RTN","SCMCHLA",223,0)
 ; if error returned from DBS call, unable to file data
"RTN","SCMCHLA",224,0)
 I $G(SCERR) S ERROR="UNABLE TO UPDATE STATUS FIELD" Q 0
"RTN","SCMCHLA",225,0)
 ;
"RTN","SCMCHLA",226,0)
 Q 1
"RTN","SCMCHLA1")
0^8^B8820718
"RTN","SCMCHLA1",1,0)
SCMCHLA1 ;ALB/KCL - PCMM HL7 Trans Log Xref API's ; 15-JAN-2000
"RTN","SCMCHLA1",2,0)
 ;;5.3;Scheduling;**210,272**;AUG 13, 1993
"RTN","SCMCHLA1",3,0)
 ;
"RTN","SCMCHLA1",4,0)
ASTSET(SCLOGIEN,STATUS) ;
"RTN","SCMCHLA1",5,0)
 ;Description: Sets the "AST" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",6,0)
 ;
"RTN","SCMCHLA1",7,0)
 ; Input: 
"RTN","SCMCHLA1",8,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",9,0)
 ;    STATUS - internal value of STATUS field
"RTN","SCMCHLA1",10,0)
 ;
"RTN","SCMCHLA1",11,0)
 ;s ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",12,0)
 ;
"RTN","SCMCHLA1",13,0)
 N NODE
"RTN","SCMCHLA1",14,0)
 ;
"RTN","SCMCHLA1",15,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",16,0)
 Q:$G(STATUS)']""
"RTN","SCMCHLA1",17,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",18,0)
 N DFN S DFN=$S($P(NODE,"^",2):+$P(NODE,"^",2),1:"W")
"RTN","SCMCHLA1",19,0)
 Q:'+$P(NODE,"^",5)
"RTN","SCMCHLA1",20,0)
 ;
"RTN","SCMCHLA1",21,0)
 I STATUS="RJ"!(STATUS="M") D
"RTN","SCMCHLA1",22,0)
 .S ^SCPT(404.471,"AST",$P(NODE,"^",5),STATUS,DFN,SCLOGIEN)=""
"RTN","SCMCHLA1",23,0)
 ;
"RTN","SCMCHLA1",24,0)
 Q
"RTN","SCMCHLA1",25,0)
 ;
"RTN","SCMCHLA1",26,0)
ASTKILL(SCLOGIEN,STATUS) ;
"RTN","SCMCHLA1",27,0)
 ;Description: Kill logic for "AST" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",28,0)
 ;
"RTN","SCMCHLA1",29,0)
 ; Input: 
"RTN","SCMCHLA1",30,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",31,0)
 ;    STATUS - internal value of STATUS field
"RTN","SCMCHLA1",32,0)
 ;
"RTN","SCMCHLA1",33,0)
 ;k ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",34,0)
 ;
"RTN","SCMCHLA1",35,0)
 N NODE
"RTN","SCMCHLA1",36,0)
 ;
"RTN","SCMCHLA1",37,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",38,0)
 Q:$G(STATUS)']""
"RTN","SCMCHLA1",39,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",40,0)
 N DFN S DFN=$S($P(NODE,"^",2):+$P(NODE,"^",2),1:"W")
"RTN","SCMCHLA1",41,0)
 Q:'$P(NODE,"^",5)
"RTN","SCMCHLA1",42,0)
 ;
"RTN","SCMCHLA1",43,0)
 I STATUS="RJ"!(STATUS="M") D
"RTN","SCMCHLA1",44,0)
 .K ^SCPT(404.471,"AST",+$P(NODE,"^",5),STATUS,DFN,SCLOGIEN)
"RTN","SCMCHLA1",45,0)
 ;
"RTN","SCMCHLA1",46,0)
 Q
"RTN","SCMCHLA1",47,0)
 ;
"RTN","SCMCHLA1",48,0)
 ;
"RTN","SCMCHLA1",49,0)
AST1SET(SCLOGIEN,ACKREC) ;
"RTN","SCMCHLA1",50,0)
 ;Description: Sets the "AST1" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",51,0)
 ;
"RTN","SCMCHLA1",52,0)
 ; Input: 
"RTN","SCMCHLA1",53,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",54,0)
 ;    ACKREC - internal value of ACK RECEIVED DATE/TIME field
"RTN","SCMCHLA1",55,0)
 ;
"RTN","SCMCHLA1",56,0)
 ;s ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",57,0)
 ;
"RTN","SCMCHLA1",58,0)
 N NODE
"RTN","SCMCHLA1",59,0)
 ;
"RTN","SCMCHLA1",60,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",61,0)
 Q:'$G(ACKREC)
"RTN","SCMCHLA1",62,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",63,0)
 ;Q:'+$P(NODE,"^",2)
"RTN","SCMCHLA1",64,0)
 N DFN S DFN=$S($P(NODE,"^",2):+$P(NODE,"^",2),1:"W")
"RTN","SCMCHLA1",65,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",66,0)
 ;
"RTN","SCMCHLA1",67,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",68,0)
 .S ^SCPT(404.471,"AST",ACKREC,$P(NODE,"^",4),DFN,SCLOGIEN)=""
"RTN","SCMCHLA1",69,0)
 ;
"RTN","SCMCHLA1",70,0)
 Q
"RTN","SCMCHLA1",71,0)
 ;
"RTN","SCMCHLA1",72,0)
AST1KILL(SCLOGIEN,ACKREC) ;
"RTN","SCMCHLA1",73,0)
 ;Description: Kill logic for "AST1" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",74,0)
 ;
"RTN","SCMCHLA1",75,0)
 ; Input: 
"RTN","SCMCHLA1",76,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",77,0)
 ;    ACKREC - internal value of ACK RECEIVED DATE/TIME field
"RTN","SCMCHLA1",78,0)
 ;
"RTN","SCMCHLA1",79,0)
 ;k ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",80,0)
 ;
"RTN","SCMCHLA1",81,0)
 N NODE
"RTN","SCMCHLA1",82,0)
 ;
"RTN","SCMCHLA1",83,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",84,0)
 Q:'$G(ACKREC)
"RTN","SCMCHLA1",85,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",86,0)
 N DFN S DFN=$S($P(NODE,"^",2):+$P(NODE,"^",2),1:"W")
"RTN","SCMCHLA1",87,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",88,0)
 ;
"RTN","SCMCHLA1",89,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",90,0)
 .K ^SCPT(404.471,"AST",ACKREC,$P(NODE,"^",4),DFN,SCLOGIEN)
"RTN","SCMCHLA1",91,0)
 ;
"RTN","SCMCHLA1",92,0)
 Q
"RTN","SCMCHLA1",93,0)
 ;
"RTN","SCMCHLA1",94,0)
 ;
"RTN","SCMCHLA1",95,0)
AST2SET(SCLOGIEN,PAT) ;
"RTN","SCMCHLA1",96,0)
 ;Description: Sets the "AST2" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",97,0)
 ;
"RTN","SCMCHLA1",98,0)
 ; Input: 
"RTN","SCMCHLA1",99,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",100,0)
 ;       PAT - internal value of PATIENT field
"RTN","SCMCHLA1",101,0)
 ;
"RTN","SCMCHLA1",102,0)
 ;s ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",103,0)
 ;
"RTN","SCMCHLA1",104,0)
 N NODE
"RTN","SCMCHLA1",105,0)
 ;
"RTN","SCMCHLA1",106,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",107,0)
 Q:'$G(PAT)
"RTN","SCMCHLA1",108,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",109,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",110,0)
 Q:'+$P(NODE,"^",5)
"RTN","SCMCHLA1",111,0)
 ;
"RTN","SCMCHLA1",112,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",113,0)
 .S ^SCPT(404.471,"AST",+$P(NODE,"^",5),$P(NODE,"^",4),PAT,SCLOGIEN)=""
"RTN","SCMCHLA1",114,0)
 ;
"RTN","SCMCHLA1",115,0)
 Q
"RTN","SCMCHLA1",116,0)
 ;
"RTN","SCMCHLA1",117,0)
AST2KILL(SCLOGIEN,PAT) ;
"RTN","SCMCHLA1",118,0)
 ;Description: Kill logic for "AST2" x-ref on the PCMM HL7 Trans Log file.
"RTN","SCMCHLA1",119,0)
 ;
"RTN","SCMCHLA1",120,0)
 ; Input: 
"RTN","SCMCHLA1",121,0)
 ;  SCLOGIEN - ien of PCMM HL7 Tans Log file record
"RTN","SCMCHLA1",122,0)
 ;       PAT - internal value of PATIENT field
"RTN","SCMCHLA1",123,0)
 ;
"RTN","SCMCHLA1",124,0)
 ;k ^SCPT(404.471,"AST",date/time ack rec'd,status,patient,pcmm trans log ien)
"RTN","SCMCHLA1",125,0)
 ;
"RTN","SCMCHLA1",126,0)
 N NODE
"RTN","SCMCHLA1",127,0)
 ;
"RTN","SCMCHLA1",128,0)
 Q:'$G(SCLOGIEN)
"RTN","SCMCHLA1",129,0)
 Q:'$G(PAT)
"RTN","SCMCHLA1",130,0)
 S NODE=$G(^SCPT(404.471,SCLOGIEN,0))
"RTN","SCMCHLA1",131,0)
 Q:($P(NODE,"^",4)']"")
"RTN","SCMCHLA1",132,0)
 Q:'+$P(NODE,"^",5)
"RTN","SCMCHLA1",133,0)
 ;
"RTN","SCMCHLA1",134,0)
 I $P(NODE,"^",4)="RJ"!($P(NODE,"^",4)="M") D
"RTN","SCMCHLA1",135,0)
 .K ^SCPT(404.471,"AST",+$P(NODE,"^",5),$P(NODE,"^",4),PAT,SCLOGIEN)
"RTN","SCMCHLA1",136,0)
 Q
"RTN","SCMCHLE")
0^6^B6627294
"RTN","SCMCHLE",1,0)
SCMCHLE ;BP/DJB - PCMM HL7 EVENT File Utils ; 11 Dec 2002  1:14 PM
"RTN","SCMCHLE",2,0)
 ;;5.3;Scheduling;**177,204,272**;May 01, 1999
"RTN","SCMCHLE",3,0)
 ;
"RTN","SCMCHLE",4,0)
 ;Reference routine: ^SCDXFU01
"RTN","SCMCHLE",5,0)
ADD(EVDATE,EVPTR,DFN,TP,FTEE) ;Add a new event to PCMM HL7 EVENT file (#404.48).
"RTN","SCMCHLE",6,0)
 ;
"RTN","SCMCHLE",7,0)
 ; Input: EVDATE - Date/time of PCMM event in FM format.
"RTN","SCMCHLE",8,0)
 ;                 Default="NOW"
"RTN","SCMCHLE",9,0)
 ;        EVPTR  - Variable pointer that records IEN and file where
"RTN","SCMCHLE",10,0)
 ;                 event occurred. Used to determine Table Designator
"RTN","SCMCHLE",11,0)
 ;                 and Table ID for the ZPC segment.
"RTN","SCMCHLE",12,0)
 ;        DFN    - Pointer to PATIENT file (#2).
"RTN","SCMCHLE",13,0)
 ;        TP     - Team Position (Used when processing deletes)
"RTN","SCMCHLE",14,0)
 ;                 In the case of changes to 404.53, this may be
"RTN","SCMCHLE",15,0)
 ;                 PrecepteeTP-PreceptorTP.
"RTN","SCMCHLE",16,0)
 ;Output: None
"RTN","SCMCHLE",17,0)
 ;
"RTN","SCMCHLE",18,0)
 NEW EVIEN
"RTN","SCMCHLE",19,0)
 Q:$G(SCMCOFF)  ;..djb/bp NOIS ISH-1299-40937. Turn off HL7 messaging.
"RTN","SCMCHLE",20,0)
 Q:'$G(EVPTR)  ;......................Event pointer
"RTN","SCMCHLE",21,0)
 S EVIEN=$$CREATE(.EVDATE) ;..........Create new entry
"RTN","SCMCHLE",22,0)
 Q:+EVIEN<0
"RTN","SCMCHLE",23,0)
 S DFN=$G(DFN)
"RTN","SCMCHLE",24,0)
 S TP=$G(TP)
"RTN","SCMCHLE",25,0)
 D STORE(EVIEN,EVPTR,DFN,$G(DUZ),TP,$G(FTEE)) ;Store event info
"RTN","SCMCHLE",26,0)
 D TRANSMIT(EVIEN,1) ;................Mark entry for transmission
"RTN","SCMCHLE",27,0)
 Q
"RTN","SCMCHLE",28,0)
 ;
"RTN","SCMCHLE",29,0)
CREATE(EVDATE) ;Create entry in PCMM HL7 EVENT (#404.48)
"RTN","SCMCHLE",30,0)
 ;
"RTN","SCMCHLE",31,0)
 ; Input: EVDATE - Date/time of PCMM event, in Fileman format.
"RTN","SCMCHLE",32,0)
 ;                 Default="NOW".
"RTN","SCMCHLE",33,0)
 ;Output: Pointer to entry in PCMM HL7 EVENT (#404.48)
"RTN","SCMCHLE",34,0)
 ;        -1^Error - Unable to create entry
"RTN","SCMCHLE",35,0)
 ;
"RTN","SCMCHLE",36,0)
 NEW SCERR,SCFDA,SCIEN
"RTN","SCMCHLE",37,0)
 S:'$G(EVDATE) EVDATE="NOW"
"RTN","SCMCHLE",38,0)
 ;
"RTN","SCMCHLE",39,0)
 S SCFDA(404.48,"+1,",.01)=EVDATE
"RTN","SCMCHLE",40,0)
 D UPDATE^DIE("E","SCFDA","SCIEN","SCERR")
"RTN","SCMCHLE",41,0)
 ;
"RTN","SCMCHLE",42,0)
 I $D(SCERR) Q "-1^Unable to create entry in PCMM HL7 EVENT file"
"RTN","SCMCHLE",43,0)
 Q SCIEN(1)
"RTN","SCMCHLE",44,0)
 ;
"RTN","SCMCHLE",45,0)
STORE(EVIEN,EVPTR,DFN,EVDUZ,TP,FTEE) ;Store data in PCMM HL7 EVENT file
"RTN","SCMCHLE",46,0)
 ;
"RTN","SCMCHLE",47,0)
 ; Input: EVIEN - Pointer to entry in PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHLE",48,0)
 ;        EVPTR - Variable pointer that records IEN and file where
"RTN","SCMCHLE",49,0)
 ;                event occurred. Used to determine Table Designator
"RTN","SCMCHLE",50,0)
 ;                and Table ID for the ZPC segment.
"RTN","SCMCHLE",51,0)
 ;        DFN   - Pointer to PATIENT file (#2).
"RTN","SCMCHLE",52,0)
 ;        EVDUZ - Pointer to entry in NEW PERSON file (#200) that
"RTN","SCMCHLE",53,0)
 ;                caused event to occur (defaults to current DUZ).
"RTN","SCMCHLE",54,0)
 ;        TP    - Team Position (Used when processing deletes)
"RTN","SCMCHLE",55,0)
 ;                In the case of changes to 404.53, this may be
"RTN","SCMCHLE",56,0)
 ;       FTEE    Workload indicator
"RTN","SCMCHLE",57,0)
 ;Output: None
"RTN","SCMCHLE",58,0)
 ;Notes : If EVDUZ and current DUZ not valid, use POSTMASTER (.5)
"RTN","SCMCHLE",59,0)
 ;
"RTN","SCMCHLE",60,0)
 NEW SCERR,SCFDA,SCIENS
"RTN","SCMCHLE",61,0)
 ;
"RTN","SCMCHLE",62,0)
 ;Check input
"RTN","SCMCHLE",63,0)
 Q:'+$G(EVIEN)
"RTN","SCMCHLE",64,0)
 Q:'$D(^SCPT(404.48,EVIEN))
"RTN","SCMCHLE",65,0)
 Q:'$G(EVPTR)
"RTN","SCMCHLE",66,0)
 S:'+$G(EVDUZ) EVDUZ=$S($G(DUZ):DUZ,1:.5)
"RTN","SCMCHLE",67,0)
 I EVDUZ'=.5,'$D(^VA(200,EVDUZ)) S EVDUZ=.5
"RTN","SCMCHLE",68,0)
 ;
"RTN","SCMCHLE",69,0)
 S SCIENS=EVIEN_","
"RTN","SCMCHLE",70,0)
 S SCFDA(404.48,SCIENS,.02)=DFN ;....Patient
"RTN","SCMCHLE",71,0)
 S SCFDA(404.48,SCIENS,.04)=TP ;.....Team Position
"RTN","SCMCHLE",72,0)
 S SCFDA(404.48,SCIENS,.05)=EVDUZ ;..User
"RTN","SCMCHLE",73,0)
 S SCFDA(404.48,SCIENS,.07)=EVPTR ;..Variable event pointer
"RTN","SCMCHLE",74,0)
 I $G(FTEE) S SCFDA(404.48,SCIENS,.08)=FTEE  ;Workload Indicator
"RTN","SCMCHLE",75,0)
 D FILE^DIE(,"SCFDA","SCERR")
"RTN","SCMCHLE",76,0)
 Q
"RTN","SCMCHLE",77,0)
 ;
"RTN","SCMCHLE",78,0)
TRANSMIT(EVIEN,RESET) ;Set transmit flag in PCMM HL7 EVENT (#404.48)
"RTN","SCMCHLE",79,0)
 ;
"RTN","SCMCHLE",80,0)
 ;Input: EVIEN - Pointer to entry in PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHLE",81,0)
 ;       RESET - Should TRANSMISSION REQUIRED fld be ON or OFF?
"RTN","SCMCHLE",82,0)
 ;                  0 = NO
"RTN","SCMCHLE",83,0)
 ;                  1 = YES (Default)
"RTN","SCMCHLE",84,0)
 ;Output: None
"RTN","SCMCHLE",85,0)
 ;Notes : Setting TRANSMISSION REQUIRED field to 'YES' flags entry
"RTN","SCMCHLE",86,0)
 ;        entry for transmission.
"RTN","SCMCHLE",87,0)
 ;
"RTN","SCMCHLE",88,0)
 NEW SCERR,SCFDA,SCIENS
"RTN","SCMCHLE",89,0)
 ;
"RTN","SCMCHLE",90,0)
 ;Check input
"RTN","SCMCHLE",91,0)
 Q:'+$G(EVIEN)
"RTN","SCMCHLE",92,0)
 Q:'$D(^SCPT(404.48,EVIEN))
"RTN","SCMCHLE",93,0)
 S RESET=$S($G(RESET)=0:"NO",1:"YES")
"RTN","SCMCHLE",94,0)
 ;
"RTN","SCMCHLE",95,0)
 S SCIENS=EVIEN_","
"RTN","SCMCHLE",96,0)
 S SCFDA(404.48,SCIENS,.03)=RESET
"RTN","SCMCHLE",97,0)
 D FILE^DIE("E","SCFDA","SCERR")
"RTN","SCMCHLE",98,0)
 Q
"RTN","SCMCHLL")
0^11^B9383248
"RTN","SCMCHLL",1,0)
SCMCHLL ;BP/DJB - PCMM HL7 Log Transmission ; 3/2/00 12:59pm
"RTN","SCMCHLL",2,0)
 ;;5.3;Scheduling;**210,272**;AUG 13, 1993
"RTN","SCMCHLL",3,0)
 ;
"RTN","SCMCHLL",4,0)
LOG ;Record HL7 messages in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLL",5,0)
 ;Parse the HL7 array and build an array in ^TMP("PCMM","LOG",$J) and
"RTN","SCMCHLL",6,0)
 ;use to record transmissions.
"RTN","SCMCHLL",7,0)
 ;
"RTN","SCMCHLL",8,0)
 NEW FS,MSGID,TDATE
"RTN","SCMCHLL",9,0)
 ;
"RTN","SCMCHLL",10,0)
 ;Initialize variables
"RTN","SCMCHLL",11,0)
 KILL ^TMP("PCMM","LOG",$J)
"RTN","SCMCHLL",12,0)
 S FS=HL("FS") ;........................Field separator
"RTN","SCMCHLL",13,0)
 S MSGID=$P(HLRESLT,"^",1) Q:'MSGID  ;..Message ID
"RTN","SCMCHLL",14,0)
 S TDATE=$$NOW^XLFDT ;..................Transmission date
"RTN","SCMCHLL",15,0)
 S ^TMP("PCMM","LOG",$J,"MSGID")=MSGID
"RTN","SCMCHLL",16,0)
 S ^TMP("PCMM","LOG",$J,"DT")=TDATE
"RTN","SCMCHLL",17,0)
 ;
"RTN","SCMCHLL",18,0)
 D GETDATA ;..Get data from HL7 message array
"RTN","SCMCHLL",19,0)
 D ADD ;......Create entry in Transmission Log and stuff data
"RTN","SCMCHLL",20,0)
 ;
"RTN","SCMCHLL",21,0)
 KILL ^TMP("PCMM","LOG",$J)
"RTN","SCMCHLL",22,0)
 Q
"RTN","SCMCHLL",23,0)
 ;
"RTN","SCMCHLL",24,0)
GETDATA ;Go thru HL7 array and build array of data in ^TMP("PCMM","LOG",$J).
"RTN","SCMCHLL",25,0)
 NEW CNT,DATA,DFN,SEG,SEQ,ZPCID
"RTN","SCMCHLL",26,0)
 S CNT=""
"RTN","SCMCHLL",27,0)
 F  S CNT=$O(^TMP("HLS",$J,CNT)) Q:'CNT  D  ;
"RTN","SCMCHLL",28,0)
 . S DATA=$G(^(CNT)) Q:DATA=""
"RTN","SCMCHLL",29,0)
 . S SEG=$P(DATA,FS,1)
"RTN","SCMCHLL",30,0)
 . ;
"RTN","SCMCHLL",31,0)
 . ;PID segment - Get patient DFN
"RTN","SCMCHLL",32,0)
 . I SEG="PID" D  Q
"RTN","SCMCHLL",33,0)
 . . S DFN=+$P(DATA,U,4)
"RTN","SCMCHLL",34,0)
 . . S ^TMP("PCMM","LOG",$J,"DFN")=DFN
"RTN","SCMCHLL",35,0)
 . ;
"RTN","SCMCHLL",36,0)
 . ;ZPC segment - Get sequence # and ZPC ID.
"RTN","SCMCHLL",37,0)
 . I SEG="ZPC" D  Q
"RTN","SCMCHLL",38,0)
 . . S SEQ=$P(DATA,U,8)
"RTN","SCMCHLL",39,0)
 . . S ZPCID=$P(DATA,U,2)
"RTN","SCMCHLL",40,0)
 . . S ^TMP("PCMM","LOG",$J,"ZPC",SEQ)=ZPCID
"RTN","SCMCHLL",41,0)
 Q
"RTN","SCMCHLL",42,0)
 ;
"RTN","SCMCHLL",43,0)
ADD ;Process data array built in GETDATA
"RTN","SCMCHLL",44,0)
 NEW TRANI
"RTN","SCMCHLL",45,0)
 S TRANI=$$CREATE(^TMP("PCMM","LOG",$J,"MSGID")) ;..Create new entry
"RTN","SCMCHLL",46,0)
 Q:+TRANI<0
"RTN","SCMCHLL",47,0)
 D STORE(TRANI) ;..Store transmission info
"RTN","SCMCHLL",48,0)
 Q
"RTN","SCMCHLL",49,0)
 ;
"RTN","SCMCHLL",50,0)
CREATE(MSGID) ;Create new entry
"RTN","SCMCHLL",51,0)
 ; Input: Message Control ID
"RTN","SCMCHLL",52,0)
 ;Output: Pointer to entry in PCMM HL7 TRANSMISSION LOG (#404.471)
"RTN","SCMCHLL",53,0)
 ;        -1^Error - Unable to create entry
"RTN","SCMCHLL",54,0)
 ;
"RTN","SCMCHLL",55,0)
 NEW SCERR,SCFDA,SCIEN
"RTN","SCMCHLL",56,0)
 S SCFDA(404.471,"+1,",.01)=MSGID
"RTN","SCMCHLL",57,0)
 D UPDATE^DIE("E","SCFDA","SCIEN","SCERR")
"RTN","SCMCHLL",58,0)
 I $D(SCERR) Q "-1^Unable to create entry in file #404.471"
"RTN","SCMCHLL",59,0)
 Q SCIEN(1)
"RTN","SCMCHLL",60,0)
 ;
"RTN","SCMCHLL",61,0)
STORE(TRANI) ;Store data
"RTN","SCMCHLL",62,0)
 ;
"RTN","SCMCHLL",63,0)
 ; Input: TRANI - Pointer PCMM HL7 TRANSMISSION LOG file (#404.471)
"RTN","SCMCHLL",64,0)
 ;Output: None
"RTN","SCMCHLL",65,0)
 ;
"RTN","SCMCHLL",66,0)
 NEW CNT,SCERR,SCIEN,SCIENS,SCIENS1,SCFDA,SEQ,ZPCID
"RTN","SCMCHLL",67,0)
 ;
"RTN","SCMCHLL",68,0)
 ;Check input
"RTN","SCMCHLL",69,0)
 Q:'+$G(TRANI)
"RTN","SCMCHLL",70,0)
 Q:'$D(^SCPT(404.471,TRANI))
"RTN","SCMCHLL",71,0)
 ;
"RTN","SCMCHLL",72,0)
 S SCIENS=TRANI_","
"RTN","SCMCHLL",73,0)
 S SCFDA(404.471,SCIENS,.02)=$G(^TMP("PCMM","LOG",$J,"DFN")) ;Patient
"RTN","SCMCHLL",74,0)
 S SCFDA(404.471,SCIENS,.03)=$G(^TMP("PCMM","LOG",$J,"DT")) ;.Date
"RTN","SCMCHLL",75,0)
 S SCFDA(404.471,SCIENS,.04)="T" ;........................Status
"RTN","SCMCHLL",76,0)
 I $G(WORK),'SCFDA(404.471,SCIENS,.02) D
"RTN","SCMCHLL",77,0)
 .S SCFDA(404.471,SCIENS,.07)=$G(VARPTR)
"RTN","SCMCHLL",78,0)
 .I $G(VARPTR)[404.52 S SCFDA(404.471,SCIENS,.08)=$P($G(^SCTM(404.52,+VARPTR,0)),U,3)
"RTN","SCMCHLL",79,0)
 D FILE^DIE("I","SCFDA","SCERR")
"RTN","SCMCHLL",80,0)
 KILL SCFDA,SCERR
"RTN","SCMCHLL",81,0)
 ;
"RTN","SCMCHLL",82,0)
 ;Fill in ZPC multiple
"RTN","SCMCHLL",83,0)
 S (CNT,SEQ)=0
"RTN","SCMCHLL",84,0)
 F  S SEQ=$O(^TMP("PCMM","LOG",$J,"ZPC",SEQ))  Q:'SEQ  D  ;
"RTN","SCMCHLL",85,0)
 . S ZPCID=$$CONVERT^SCMCHLRI($G(^(SEQ)))
"RTN","SCMCHLL",86,0)
 . S CNT=CNT+1
"RTN","SCMCHLL",87,0)
 . S SCIENS1="+"_CNT_","_SCIENS
"RTN","SCMCHLL",88,0)
 . S SCFDA(404.47141,SCIENS1,.01)=SEQ
"RTN","SCMCHLL",89,0)
 . S SCFDA(404.47141,SCIENS1,.02)=ZPCID
"RTN","SCMCHLL",90,0)
 . D UPDATE^DIE("","SCFDA","SCIEN","SCERR")
"RTN","SCMCHLL",91,0)
 . ;I $D(SCERR) ZW SCERR
"RTN","SCMCHLL",92,0)
 Q
"RTN","SCMCHLP")
0^7^B22705337
"RTN","SCMCHLP",1,0)
SCMCHLP ;ALB/JDS PCMM WORKLOAD MESSAGE ; 28 Feb 2003  7:54 AM
"RTN","SCMCHLP",2,0)
 ;;5.3;Scheduling;**272**;AUG 13, 1993
"RTN","SCMCHLP",3,0)
 ;Ftee message
"RTN","SCMCHLP",4,0)
EVN(DATE) ;create evn segment
"RTN","SCMCHLP",5,0)
 I '$G(DATE) D NOW^%DTC S DATE=$E(%,1,12)
"RTN","SCMCHLP",6,0)
 S MSG=$$EN^VAFHLEVN("B02",DATE,,"^","^")
"RTN","SCMCHLP",7,0)
 S @XMITARRY@(1,1,2)=MSG
"RTN","SCMCHLP",8,0)
 Q
"RTN","SCMCHLP",9,0)
STF(PH) ;staff segment
"RTN","SCMCHLP",10,0)
 N I,ZERO
"RTN","SCMCHLP",11,0)
 ;ph pointer to position assignment file
"RTN","SCMCHLP",12,0)
 ;S ZERO=$G(^SCTM(404.52,+$G(PH),0)) Q:'$P(ZERO,U,3)
"RTN","SCMCHLP",13,0)
 ;S DOC=$P(ZERO,U,3),INST=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+ZERO,0)),U,2),0)),U,7),SSN=$$GET1^DIQ(200,(+DOC)_",",9),INSTNM=$$GET1^DIQ(4,(+INST)_",",.01),INST=$$GET1^DIQ(4,(+INST)_",",99)
"RTN","SCMCHLP",14,0)
 N A S A("FILE")=200,A("FIELD")=.01,A("IENS")=DOC
"RTN","SCMCHLP",15,0)
 S @XMITARRY@(1,1,3)="STF^^"_DOC_"~~~USVHA~LR~"_INST_"|"_SSN_"~~~USSA~SS"_"^"_$$HLNAME^XLFNAME(.A,"","~")
"RTN","SCMCHLP",16,0)
 Q
"RTN","SCMCHLP",17,0)
ORG(PH) ;ORG SEGMENT
"RTN","SCMCHLP",18,0)
 ;PH pointer to position assignment filePC
"RTN","SCMCHLP",19,0)
 S @XMITARRY@(1,1,4)="ORG^1^"_INST_"~"_INSTNM_"^^^^^^"_PC
"RTN","SCMCHLP",20,0)
 Q
"RTN","SCMCHLP",21,0)
MSH(PH) ;
"RTN","SCMCHLP",22,0)
 N I,ZERO
"RTN","SCMCHLP",23,0)
 S DOC=0
"RTN","SCMCHLP",24,0)
 S SCMSGCNT=$G(SCMSGCNT)+1
"RTN","SCMCHLP",25,0)
 ;ph pointer to position assignment file
"RTN","SCMCHLP",26,0)
 S ZERO=$G(^SCTM(404.52,+$G(PH),0)) Q:'$P(ZERO,U,3)
"RTN","SCMCHLP",27,0)
 S DOC=$P(ZERO,U,3),FTEE=+$P(ZERO,U,9),INSTI=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+ZERO,0)),U,2),0)),U,7)
"RTN","SCMCHLP",28,0)
MSH1 ;Know DOC nad INSTI
"RTN","SCMCHLP",29,0)
 S INSTNM=$$GET1^DIQ(4,(+INSTI)_",",.01),INST=$$GET1^DIQ(4,(+INSTI)_",",99)
"RTN","SCMCHLP",30,0)
 ;S MAX=+$P($G(^SCTM(404.57,+ZERO,0)),U,8)
"RTN","SCMCHLP",31,0)
 S SSN=$$GET1^DIQ(200,(+DOC)_",",9)
"RTN","SCMCHLP",32,0)
 S (MAX,FTEE)=0 D SUM(DOC,INSTI)
"RTN","SCMCHLP",33,0)
 S PC=U
"RTN","SCMCHLP",34,0)
 S ZERO=$$GET^XUA4A72(+DOC)
"RTN","SCMCHLP",35,0)
 S PC=$P(ZERO,U,7)_"~"_$P(ZERO,U,2)
"RTN","SCMCHLP",36,0)
 S HL("SAF")=INST Q
"RTN","SCMCHLP",37,0)
 D CREATE^HLTF(.ID)
"RTN","SCMCHLP",38,0)
 ;D HL
"RTN","SCMCHLP",39,0)
 D MSH^HLFNC2(.HL,ID_"-"_SCMSGCNT,.MSG)
"RTN","SCMCHLP",40,0)
 D NOW^%DTC S $P(MSG,"^",7)=$$HLDATE^HLFNC(%,"TS")
"RTN","SCMCHLP",41,0)
 S @XMITARRY@(1,1,1)=MSG
"RTN","SCMCHLP",42,0)
 Q
"RTN","SCMCHLP",43,0)
ZFT S @XMITARRY@(1,1,5)="ZFT^1^"_FTEE_"^"_MAX
"RTN","SCMCHLP",44,0)
 Q
"RTN","SCMCHLP",45,0)
HL S HL("ACAT")="NE"
"RTN","SCMCHLP",46,0)
 S HL("APAT")="AL"
"RTN","SCMCHLP",47,0)
 S HL("ECH")="~|\&"
"RTN","SCMCHLP",48,0)
 S HL("ETN")="B02"
"RTN","SCMCHLP",49,0)
 S HL("FS")="^"
"RTN","SCMCHLP",50,0)
 S HL("MTN")="PMU"
"RTN","SCMCHLP",51,0)
 S HL("Q")=""""
"RTN","SCMCHLP",52,0)
 S HL("SAF")=$G(^DD("SITE",1))
"RTN","SCMCHLP",53,0)
 S HL("SAN")="PCMM"
"RTN","SCMCHLP",54,0)
 S HL("VER")=2.4
"RTN","SCMCHLP",55,0)
 S HL("PID")="P"
"RTN","SCMCHLP",56,0)
 Q
"RTN","SCMCHLP",57,0)
BUILD(VAPTR,HL,XMITARRY,HLIEN) ;Build array given pointer.
"RTN","SCMCHLP",58,0)
 ;check which file and build based on that
"RTN","SCMCHLP",59,0)
 ;If team file check if active and PC send message with new max panel
"RTN","SCMCHLP",60,0)
 ;if possition assignment history check status
"RTN","SCMCHLP",61,0)
 ;if active send FTEE
"RTN","SCMCHLP",62,0)
 ;if inactive check if PC and send zero in FTEE
"RTN","SCMCHLP",63,0)
 ;if from Team position file check if pc and send zero in FTEE.
"RTN","SCMCHLP",64,0)
 N %,DOC,EVNDATE,FTEE,ID,INSTI,INSTNM,MAX,MSG,PC,SCFUT,SSN,TP,TEAM,Z1
"RTN","SCMCHLP",65,0)
 S EVNDATE=$G(^SCPT(404.48,+$G(HLIEN),0)) I 'EVNDATE D NOW^%DTC S EVNDATE=%
"RTN","SCMCHLP",66,0)
 D HL
"RTN","SCMCHLP",67,0)
 S ZERO=$G(@(U_$P(VAPTR,";",2)_(+VAPTR)_",0)")) I '$L(ZERO) D  Q 1   ;Record has vanished
"RTN","SCMCHLP",68,0)
 .N IEN S IEN=$O(^SCPT(404.471,"AWRK",VAPTR,""),-1) Q:'IEN   ;not transmitted
"RTN","SCMCHLP",69,0)
 .S TP=$P($G(^SCPT(404.48,+$G(HLIEN),0)),U,4) Q:'TP
"RTN","SCMCHLP",70,0)
 .S ACTIVE=$$DATES^SCAPMCU1(404.52,+TP)
"RTN","SCMCHLP",71,0)
 .I ((ACTIVE)!(VAPTR'[404.52)) D MSH(+$P(ACTIVE,U,4)) Q:'DOC  D EVN(EVNDATE),STF($P(ACTIVE,U,4)),ORG($P(ACTIVE,U,4)),ZFT Q
"RTN","SCMCHLP",72,0)
 .S DOC=$P($G(^SCPT(404.471,+IEN,0)),U,8) Q:'DOC
"RTN","SCMCHLP",73,0)
 .S INSTI=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+TP,0)),U,2),0)),U,7)
"RTN","SCMCHLP",74,0)
 .D MSH1,EVN(EVNDATE),STF(),ORG(),ZFT
"RTN","SCMCHLP",75,0)
 I VAPTR[404.57 D  Q 1  ;Team Position
"RTN","SCMCHLP",76,0)
 .S ACTIVE=$$DATES^SCAPMCU1(404.52,+VAPTR)
"RTN","SCMCHLP",77,0)
 .D MSH(+$P(ACTIVE,U,4)) Q:'DOC  D EVN(EVNDATE),STF($P(ACTIVE,U,4)),ORG($P(ACTIVE,U,4)),ZFT
"RTN","SCMCHLP",78,0)
 I VAPTR[404.52 D  Q 1  ;Position Assignment History
"RTN","SCMCHLP",79,0)
 .I $P(ZERO,U,2)>DT S SCFUT=1 Q  ;future date wait till then
"RTN","SCMCHLP",80,0)
 .I $P(ZERO,U,2) S EVNDATE=$E($P(ZERO,U,2),1,7)_$E(EVNDATE,8,99)
"RTN","SCMCHLP",81,0)
 .D MSH(+VAPTR) Q:'DOC  D EVN(EVNDATE),STF(+VAPTR),ORG(+VAPTR)
"RTN","SCMCHLP",82,0)
 .D ZFT
"RTN","SCMCHLP",83,0)
 I VAPTR[404.59 D  Q 1  ;Team Position History
"RTN","SCMCHLP",84,0)
 .I $P(ZERO,U,2)>DT S SCFUT=1 Q  ;Future do it then
"RTN","SCMCHLP",85,0)
 .I $P(ZERO,U,2) S EVNDATE=$E($P(ZERO,U,2),1,7)_$E(EVNDATE,8,99)
"RTN","SCMCHLP",86,0)
 .;check if active assignment on inactive team
"RTN","SCMCHLP",87,0)
 .S ACTIVE=$$DATES^SCAPMCU1(404.52,$P(ZERO,U,1))
"RTN","SCMCHLP",88,0)
 .D MSH(+$P(ACTIVE,U,4)) Q:'DOC  D EVN(EVNDATE),STF(+$P(ACTIVE,U,4)),ORG(+$P(ACTIVE,U,4))
"RTN","SCMCHLP",89,0)
 .D ZFT
"RTN","SCMCHLP",90,0)
 Q 1
"RTN","SCMCHLP",91,0)
PROV(VAPTR) ;Get internal provider given varible pointer
"RTN","SCMCHLP",92,0)
 N ZERO,ACTIVE
"RTN","SCMCHLP",93,0)
 S ZERO=$G(@(U_$P(VAPTR,";",2)_(+VAPTR)_",0)"))
"RTN","SCMCHLP",94,0)
 I VAPTR[404.57 D  Q $$PH($P(ACTIVE,U,4))  ;Team Position
"RTN","SCMCHLP",95,0)
 .S ACTIVE=$$DATES^SCAPMCU1(404.52,+VAPTR) Q:'ACTIVE
"RTN","SCMCHLP",96,0)
 I VAPTR[404.52 Q $$PH(+VAPTR)
"RTN","SCMCHLP",97,0)
 I VAPTR[404.59 D  I ACTIVE Q $$PH(+VAPTR)  ;Team Position History
"RTN","SCMCHLP",98,0)
 .;check if active assignment on inactive team
"RTN","SCMCHLP",99,0)
 .S ACTIVE=$$DATES^SCAPMCU1(404.52,$P(ZERO,U,1))
"RTN","SCMCHLP",100,0)
 Q 0
"RTN","SCMCHLP",101,0)
PH(PH) ;Return provider from position history
"RTN","SCMCHLP",102,0)
 Q $P($G(^SCTM(404.52,+$G(PH),0)),U,3)
"RTN","SCMCHLP",103,0)
SUM(PR,INST) ; get all the  positions for this provider
"RTN","SCMCHLP",104,0)
 N I,INS,ZERO,SCA,TEAM
"RTN","SCMCHLP",105,0)
 S I=""
"RTN","SCMCHLP",106,0)
 F  S I=$O(^SCTM(404.52,"C",PR,I),-1) Q:'I  D
"RTN","SCMCHLP",107,0)
 .S ZERO=$G(^SCTM(404.52,I,0)) Q:$D(SCA(+ZERO))  S SCA(+ZERO)=""
"RTN","SCMCHLP",108,0)
 .S INS=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+ZERO,0)),U,2),0)),U,7)
"RTN","SCMCHLP",109,0)
 .Q:(INS'=INST)
"RTN","SCMCHLP",110,0)
 .S ACTIVE=$$DATES^SCAPMCU1(404.52,+ZERO,DT+.5) Q:'ACTIVE
"RTN","SCMCHLP",111,0)
 .S (Z1,ZERO)=$G(^SCTM(404.52,+$P(ACTIVE,U,4),0)) Q:$P(Z1,U,3)'=PR
"RTN","SCMCHLP",112,0)
 .S ACTIVE=$$DATES^SCAPMCU1(404.59,+Z1,DT+.5) Q:'ACTIVE
"RTN","SCMCHLP",113,0)
 .S Z1=$G(^SCTM(404.57,+Z1,0))
"RTN","SCMCHLP",114,0)
 .Q:'$P(Z1,U,4)  ;Cannot be primary
"RTN","SCMCHLP",115,0)
 .S TEAM=$G(^SCTM(404.51,+$P(Z1,U,2),0))
"RTN","SCMCHLP",116,0)
 .Q:'$P(TEAM,U,5)
"RTN","SCMCHLP",117,0)
 .S FTEE=FTEE+$P(ZERO,U,9)
"RTN","SCMCHLP",118,0)
 .S MAX=MAX+$P(Z1,U,8)
"RTN","SCMCHLR2")
0^9^B21748718
"RTN","SCMCHLR2",1,0)
SCMCHLR2 ;ALB/KCL - PCMM HL7 Reject Processing - Build List Area; 10-JAN-2000
"RTN","SCMCHLR2",2,0)
 ;;5.3;Scheduling;**210,272**;AUG 13, 1993
"RTN","SCMCHLR2",3,0)
 ;
"RTN","SCMCHLR2",4,0)
EN(SCARY,SCBEG,SCEND,SCEPS,SCSORTBY,SCCNT) ;
"RTN","SCMCHLR2",5,0)
 ; Description: This entry point is used to build list area for
"RTN","SCMCHLR2",6,0)
 ; PCMM Transmission Errors.
"RTN","SCMCHLR2",7,0)
 ;
"RTN","SCMCHLR2",8,0)
 ; The following variables are 'system wide variables' in the
"RTN","SCMCHLR2",9,0)
 ; PCMM Transmission Error Processing List Manager application:
"RTN","SCMCHLR2",10,0)
 ;  Input:
"RTN","SCMCHLR2",11,0)
 ;      SCARY - Global array subscript
"RTN","SCMCHLR2",12,0)
 ;      SCBEG - Begin date for date range
"RTN","SCMCHLR2",13,0)
 ;      SCEND - End date for date range
"RTN","SCMCHLR2",14,0)
 ;      SCEPS - Error processing statuses
"RTN","SCMCHLR2",15,0)
 ;                1 -> New
"RTN","SCMCHLR2",16,0)
 ;                2 -> Checked
"RTN","SCMCHLR2",17,0)
 ;                3 -> Both
"RTN","SCMCHLR2",18,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR2",19,0)
 ;                N -> Patient Name
"RTN","SCMCHLR2",20,0)
 ;                D -> Date/Time Ack Received
"RTN","SCMCHLR2",21,0)
 ;                P -> Provider
"RTN","SCMCHLR2",22,0)
 ;
"RTN","SCMCHLR2",23,0)
 ; Output:
"RTN","SCMCHLR2",24,0)
 ;  SCCNT - Contains number of lines in the list, pass by reference
"RTN","SCMCHLR2",25,0)
 ;
"RTN","SCMCHLR2",26,0)
 ;Display FM wait msg
"RTN","SCMCHLR2",27,0)
 D WAIT^DICD
"RTN","SCMCHLR2",28,0)
 ;
"RTN","SCMCHLR2",29,0)
 ;Get PCMM HL7 Trans Log errors
"RTN","SCMCHLR2",30,0)
 D GET(SCARY,SCBEG,SCEND,SCEPS,SCSORTBY)
"RTN","SCMCHLR2",31,0)
 ;
"RTN","SCMCHLR2",32,0)
 ;Build list area for PCMM HL7 Trans Log errors
"RTN","SCMCHLR2",33,0)
 D BLDLIST^SCMCHLR3(SCSORTBY,SCEPS,.SCCNT)
"RTN","SCMCHLR2",34,0)
 ;
"RTN","SCMCHLR2",35,0)
 ;If no PCMM HL7 Trans Log errors, display msg in list area
"RTN","SCMCHLR2",36,0)
 I 'SCCNT D
"RTN","SCMCHLR2",37,0)
 .D SET^SCMCHLR3(SCARY,1,"",1,36,0,,,,.SCCNT)
"RTN","SCMCHLR2",38,0)
 .D SET^SCMCHLR3(SCARY,2,"No 'PCMM Transmission Errors' to display.",4,41,0,,,,.SCCNT)
"RTN","SCMCHLR2",39,0)
 Q
"RTN","SCMCHLR2",40,0)
 ;
"RTN","SCMCHLR2",41,0)
 ;
"RTN","SCMCHLR2",42,0)
GET(SCARY,SCBEG,SCEND,SCEPS,SCSORTBY) ;
"RTN","SCMCHLR2",43,0)
 ; Description: Get PCMM HL7 Transmission Log errors.
"RTN","SCMCHLR2",44,0)
 ;
"RTN","SCMCHLR2",45,0)
 ;  Input:
"RTN","SCMCHLR2",46,0)
 ;      SCARY - Global array subscript
"RTN","SCMCHLR2",47,0)
 ;      SCBEG - Begin date for date range
"RTN","SCMCHLR2",48,0)
 ;      SCEND - End date for date range
"RTN","SCMCHLR2",49,0)
 ;      SCEPS - Error processing status
"RTN","SCMCHLR2",50,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR2",51,0)
 ;
"RTN","SCMCHLR2",52,0)
 ; Output:
"RTN","SCMCHLR2",53,0)
 ;  PCMM transmission log error list sorted by:
"RTN","SCMCHLR2",54,0)
 ;
"RTN","SCMCHLR2",55,0)
 ;   Patient Name: ^TMP("SCERRSRT",$J,<sort by>,<patient name>,<trans log IEN>,<err code ien>)
"RTN","SCMCHLR2",56,0)
 ; OR,
"RTN","SCMCHLR2",57,0)
 ;   Date/Time Ack Rec'd: ^TMP("SCERRSRT",$J,<sort by>,<date/time ack rec'd>,<trans log IEN>,<err code ien>)
"RTN","SCMCHLR2",58,0)
 ; OR,
"RTN","SCMCHLR2",59,0)
 ;   Provider: ^TMP("SCERRSRT",$J,<sort by>,<provider>,<trans log IEN>,<err code ien>)
"RTN","SCMCHLR2",60,0)
 ;
"RTN","SCMCHLR2",61,0)
 N SCDFN,SCDTR,SCERIEN,SCTLIEN,SCSTAT
"RTN","SCMCHLR2",62,0)
 ;
"RTN","SCMCHLR2",63,0)
 ;Loop thru PCMM HL7 Trans Log for selected date range
"RTN","SCMCHLR2",64,0)
 F SCDTR=SCBEG:0 S SCDTR=$O(^SCPT(404.471,"AST",SCDTR)) Q:'SCDTR!($P(SCDTR,".")>SCEND)  D
"RTN","SCMCHLR2",65,0)
 .;loop thru status
"RTN","SCMCHLR2",66,0)
 .S SCSTAT=0
"RTN","SCMCHLR2",67,0)
 .F  S SCSTAT=$O(^SCPT(404.471,"AST",SCDTR,SCSTAT)) Q:SCSTAT=""  D
"RTN","SCMCHLR2",68,0)
 ..;loop thru patients
"RTN","SCMCHLR2",69,0)
 ..S SCDFN=0
"RTN","SCMCHLR2",70,0)
 ..F  S SCDFN=$O(^SCPT(404.471,"AST",SCDTR,SCSTAT,SCDFN)) Q:SCDFN=""  D
"RTN","SCMCHLR2",71,0)
 ...;loop through (#404.471) ien's
"RTN","SCMCHLR2",72,0)
 ...S SCTLIEN=0
"RTN","SCMCHLR2",73,0)
 ...F  S SCTLIEN=$O(^SCPT(404.471,"AST",SCDTR,SCSTAT,SCDFN,SCTLIEN)) Q:'SCTLIEN  D
"RTN","SCMCHLR2",74,0)
 ....;loop thru ien's of error code mult. and setup sort array
"RTN","SCMCHLR2",75,0)
 ....S SCERIEN=0
"RTN","SCMCHLR2",76,0)
 ....F  S SCERIEN=$O(^SCPT(404.471,SCTLIEN,"ERR",SCERIEN)) Q:'SCERIEN  D SORT(SCSORTBY,SCDTR,SCDFN,SCEPS,SCTLIEN,SCERIEN)
"RTN","SCMCHLR2",77,0)
 ;
"RTN","SCMCHLR2",78,0)
 Q
"RTN","SCMCHLR2",79,0)
 ;
"RTN","SCMCHLR2",80,0)
 ;
"RTN","SCMCHLR2",81,0)
SORT(SCSORTBY,SCDTR,SCDFN,SCEPS,SCTLIEN,SCERIEN) ;
"RTN","SCMCHLR2",82,0)
 ; Description: Used to set up sort array based on 'Sort Criteria' and
"RTN","SCMCHLR2",83,0)
 ; 'Error Processing Status' for PCMM Transmission Errors list display.
"RTN","SCMCHLR2",84,0)
 ;
"RTN","SCMCHLR2",85,0)
 ;  Input:
"RTN","SCMCHLR2",86,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR2",87,0)
 ;      SCDTR - PCMM transmission log date/time ack received
"RTN","SCMCHLR2",88,0)
 ;      SCDFN - Patient IEN
"RTN","SCMCHLR2",89,0)
 ;      SCEPS - Error processing status
"RTN","SCMCHLR2",90,0)
 ;    SCTLIEN - PCMM transmission log IEN
"RTN","SCMCHLR2",91,0)
 ;    SCERIEN - IEN of record in Error Code (#404.47142) multiple
"RTN","SCMCHLR2",92,0)
 ;
"RTN","SCMCHLR2",93,0)
 ; Output: None
"RTN","SCMCHLR2",94,0)
 ;
"RTN","SCMCHLR2",95,0)
 N SCTLOG
"RTN","SCMCHLR2",96,0)
 ;
"RTN","SCMCHLR2",97,0)
 ;If sort by criteria is 'Date/Time Ack Received'
"RTN","SCMCHLR2",98,0)
 I SCSORTBY="D" D
"RTN","SCMCHLR2",99,0)
 .;get data from PCMM HL7 Trans Log
"RTN","SCMCHLR2",100,0)
 .I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR2",101,0)
 ..;if Error Proc Status matches selected Error Proc Status
"RTN","SCMCHLR2",102,0)
 ..I (SCEPS=$G(SCTLOG("ERR","EPS"))!(SCEPS>2)) D
"RTN","SCMCHLR2",103,0)
 ...;setup ^tmp array sorted by date/time ack rec'd
"RTN","SCMCHLR2",104,0)
 ...S ^TMP("SCERRSRT",$J,SCSORTBY,SCDTR,SCTLIEN,SCERIEN)=""
"RTN","SCMCHLR2",105,0)
 ;
"RTN","SCMCHLR2",106,0)
 ;If sort by criteria is 'Provider'
"RTN","SCMCHLR2",107,0)
 I SCSORTBY="P" D
"RTN","SCMCHLR2",108,0)
 .N SCPTR,SCPROV,SCHL
"RTN","SCMCHLR2",109,0)
 .;get data from PCMM HL7 Trans Log
"RTN","SCMCHLR2",110,0)
 .I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR2",111,0)
 ..;if Error Proc Status matches selected Error Proc Status
"RTN","SCMCHLR2",112,0)
 ..I (SCEPS=$G(SCTLOG("ERR","EPS"))!(SCEPS>2)) D
"RTN","SCMCHLR2",113,0)
 ...;get data from PCMM HL7 ID file
"RTN","SCMCHLR2",114,0)
 ...I $$GETHL7ID^SCMCHLA2($G(SCTLOG("ERR","ZPCID")),.SCHL)
"RTN","SCMCHLR2",115,0)
 ...;get provider from POSITION ASSIGNMENT HISTORY file
"RTN","SCMCHLR2",116,0)
 ...S SCPTR=$P($G(SCHL("HL7ID")),"-",2)  ; pointer to PCMM HL7 ID file
"RTN","SCMCHLR2",117,0)
 ...I $G(SCTLOG("WORK")) S SCPROV=$$PROV^SCMCHLP(SCTLOG("WORK"))
"RTN","SCMCHLR2",118,0)
 ...I '$G(SCTLOG("WORK")) S SCPROV=$P($G(^SCTM(404.52,+SCPTR,0)),"^",3)
"RTN","SCMCHLR2",119,0)
 ...;setup ^tmp array sorted by provider
"RTN","SCMCHLR2",120,0)
 ...S ^TMP("SCERRSRT",$J,SCSORTBY,$S($G(SCPROV)'="":$$EXTERNAL^DILFD(404.52,.03,,SCPROV),1:"ZZZUNKNOWN"),SCTLIEN,SCERIEN)=""
"RTN","SCMCHLR2",121,0)
 ;
"RTN","SCMCHLR2",122,0)
 ;If sort by criteria is 'Patient' (default)
"RTN","SCMCHLR2",123,0)
 I SCSORTBY="N" D
"RTN","SCMCHLR2",124,0)
 .;get data from PCMM HL7 Trans Log
"RTN","SCMCHLR2",125,0)
 .I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR2",126,0)
 ..;if Error Proc Status matches selected Error Proc Status
"RTN","SCMCHLR2",127,0)
 ..I (SCEPS=$G(SCTLOG("ERR","EPS"))!(SCEPS>2)) D
"RTN","SCMCHLR2",128,0)
 ...;setup ^tmp array sorted by patient
"RTN","SCMCHLR2",129,0)
 ...S ^TMP("SCERRSRT",$J,SCSORTBY,$S($P($G(^DPT(+SCDFN,0)),U)'="":$P(^(0),U),SCDFN="W":"Workload Message",1:"UNKNOWN"),SCTLIEN,SCERIEN)=""
"RTN","SCMCHLR2",130,0)
 ;
"RTN","SCMCHLR2",131,0)
 Q
"RTN","SCMCHLR3")
0^10^B31487264
"RTN","SCMCHLR3",1,0)
SCMCHLR3 ;ALB/KCL - PCMM HL7 Reject Processing - Build List Area con't; 10-JAN-2000
"RTN","SCMCHLR3",2,0)
 ;;5.3;Scheduling;**210,272**;AUG 13, 1993
"RTN","SCMCHLR3",3,0)
 ;
"RTN","SCMCHLR3",4,0)
BLDLIST(SCSORTBY,SCEPS,SCCNT) ; Description: Build list area for for PCMM Transmission errors.
"RTN","SCMCHLR3",5,0)
 ;
"RTN","SCMCHLR3",6,0)
 ;  Input:
"RTN","SCMCHLR3",7,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR3",8,0)
 ;               N -> Patient Name
"RTN","SCMCHLR3",9,0)
 ;               D -> Date/Time Ack Received
"RTN","SCMCHLR3",10,0)
 ;               P -> Provider
"RTN","SCMCHLR3",11,0)
 ;      SCEPS -  Error processing status
"RTN","SCMCHLR3",12,0)
 ;
"RTN","SCMCHLR3",13,0)
 ; Output:
"RTN","SCMCHLR3",14,0)
 ;  SCCNT - Number of lines in the list
"RTN","SCMCHLR3",15,0)
 ;
"RTN","SCMCHLR3",16,0)
 N DFN,SCSUB,SCTEXT,SCTLIEN,SCERIEN,SCTLOG,SCHL
"RTN","SCMCHLR3",17,0)
 N SCPROV,SCTYPE,SCLINE,SCNUM,SCCOL,SCWID
"RTN","SCMCHLR3",18,0)
 ;
"RTN","SCMCHLR3",19,0)
 ;Init line counter and selection number
"RTN","SCMCHLR3",20,0)
 S (SCLINE,SCNUM)=0
"RTN","SCMCHLR3",21,0)
 ;
"RTN","SCMCHLR3",22,0)
 ;Quit if unable to determine col/width for caption flds in List Template
"RTN","SCMCHLR3",23,0)
 Q:'$$CAPFLD(.SCCOL,.SCWID)
"RTN","SCMCHLR3",24,0)
 ;
"RTN","SCMCHLR3",25,0)
 ;Loop thru sort array by pat name, OR date ack rec'd, OR provider
"RTN","SCMCHLR3",26,0)
 S SCSUB=$S(SCSORTBY="N":"",SCSORTBY="P":"",1:0)
"RTN","SCMCHLR3",27,0)
 F  S SCSUB=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB)) Q:SCSUB=""  D
"RTN","SCMCHLR3",28,0)
 .;loop through PCMM HL7 Transmission Log ien(s)
"RTN","SCMCHLR3",29,0)
 .S SCTLIEN=0
"RTN","SCMCHLR3",30,0)
 .F  S SCTLIEN=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB,SCTLIEN)) Q:'SCTLIEN  D
"RTN","SCMCHLR3",31,0)
 ..;loop through Error Code subfile ien(s)
"RTN","SCMCHLR3",32,0)
 ..S SCERIEN=0
"RTN","SCMCHLR3",33,0)
 ..F  S SCERIEN=$O(^TMP("SCERRSRT",$J,SCSORTBY,SCSUB,SCTLIEN,SCERIEN)) Q:'SCERIEN  D
"RTN","SCMCHLR3",34,0)
 ...;
"RTN","SCMCHLR3",35,0)
 ...;write dot to screen as list is being built (every 50 lines) 
"RTN","SCMCHLR3",36,0)
 ...W:'(SCLINE#50) "."
"RTN","SCMCHLR3",37,0)
 ...;
"RTN","SCMCHLR3",38,0)
 ...;get data for PCMM HL7 Trans Log entry
"RTN","SCMCHLR3",39,0)
 ...I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D
"RTN","SCMCHLR3",40,0)
 ....;
"RTN","SCMCHLR3",41,0)
 ....;increment selection number
"RTN","SCMCHLR3",42,0)
 ....S SCNUM=SCNUM+1
"RTN","SCMCHLR3",43,0)
 ....;
"RTN","SCMCHLR3",44,0)
 ....;increment line counter
"RTN","SCMCHLR3",45,0)
 ....S SCLINE=SCLINE+1
"RTN","SCMCHLR3",46,0)
 ....;
"RTN","SCMCHLR3",47,0)
 ....;set selection number in display array
"RTN","SCMCHLR3",48,0)
 ....D SET(SCARY,SCLINE,SCNUM,SCCOL("NUM"),SCWID("NUM"),SCNUM,SCTLIEN,SCTLOG("DFN"),SCERIEN,.SCCNT)
"RTN","SCMCHLR3",49,0)
 ....;
"RTN","SCMCHLR3",50,0)
 ....;set retransmit flag in display array
"RTN","SCMCHLR3",51,0)
 ....S SCTEXT=$S($G(SCTLOG("STATUS"))="M":"*",1:" ")
"RTN","SCMCHLR3",52,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("RET"),SCWID("RET"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",53,0)
 ....;set patient name in display array
"RTN","SCMCHLR3",54,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCTLOG("WORK")):"WORKLOAD",$G(SCTLOG("DFN")):$P($G(^DPT(SCTLOG("DFN"),0)),"^",1),1:"UNKNOWN"))
"RTN","SCMCHLR3",55,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("PAT"),SCWID("PAT"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",56,0)
 ....;
"RTN","SCMCHLR3",57,0)
 ....;set patient id in display array
"RTN","SCMCHLR3",58,0)
 ....S DFN=+SCTLOG("DFN") D PID^VADPT
"RTN","SCMCHLR3",59,0)
 ....D SET(SCARY,SCLINE,VA("BID"),SCCOL("PATID"),SCWID("PATID"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",60,0)
 ....;
"RTN","SCMCHLR3",61,0)
 ....;set date ack received in display array
"RTN","SCMCHLR3",62,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCTLOG("ACK DT/TM")):$E($$FDATE^VALM1(SCTLOG("ACK DT/TM")),1,8),1:"UNKNOWN"))
"RTN","SCMCHLR3",63,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("DTR"),SCWID("DTR"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",64,0)
 ....;
"RTN","SCMCHLR3",65,0)
 ....;set provider in display array
"RTN","SCMCHLR3",66,0)
 ....S SCPROV=""
"RTN","SCMCHLR3",67,0)
 ....K SCHL
"RTN","SCMCHLR3",68,0)
 ....;I workload get provider
"RTN","SCMCHLR3",69,0)
 ....I $G(SCTLOG("WORK")) S SCPROV=$$PROV^SCMCHLP(SCTLOG("WORK"))
"RTN","SCMCHLR3",70,0)
 ....;get provider if ZPC segment error
"RTN","SCMCHLR3",71,0)
 ....I $G(SCTLOG("ERR","SEG"))="ZPC" D
"RTN","SCMCHLR3",72,0)
 .....I $$GETHL7ID^SCMCHLA2($G(SCTLOG("ERR","ZPCID")),.SCHL)
"RTN","SCMCHLR3",73,0)
 .....S SCPTR=$P($G(SCHL("HL7ID")),"-",2)
"RTN","SCMCHLR3",74,0)
 .....S SCPROV=$P($G(^SCTM(404.52,+$G(SCPTR),0)),"^",3)
"RTN","SCMCHLR3",75,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCPROV)'="":$$EXTERNAL^DILFD(404.52,.03,,SCPROV),1:"N/A"))
"RTN","SCMCHLR3",76,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("PROV"),SCWID("PROV"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",77,0)
 ....;
"RTN","SCMCHLR3",78,0)
 ....;set provider type in display array
"RTN","SCMCHLR3",79,0)
 ....S SCTYPE=$P($G(SCHL("HL7ID")),"-",4)
"RTN","SCMCHLR3",80,0)
 ....I $G(SCTLOG("WORK")) S SCTYPE="PC"
"RTN","SCMCHLR3",81,0)
 ....S SCTEXT=$S(SCTYPE'="":SCTYPE,1:"N/A")
"RTN","SCMCHLR3",82,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("TYPE"),SCWID("TYPE"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",83,0)
 ....;
"RTN","SCMCHLR3",84,0)
 ....;set error processing status in display array
"RTN","SCMCHLR3",85,0)
 ....S SCTEXT=$$LOWER^VALM1($S($G(SCTLOG("ERR","EPS")):$$EXTERNAL^DILFD(404.47142,.06,,SCTLOG("ERR","EPS")),1:"UNKNOWN"))
"RTN","SCMCHLR3",86,0)
 ....D SET(SCARY,SCLINE,SCTEXT,SCCOL("STA"),SCWID("STA"),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",87,0)
 ....;
"RTN","SCMCHLR3",88,0)
 ....;increment line counter
"RTN","SCMCHLR3",89,0)
 ....S SCLINE=SCLINE+1
"RTN","SCMCHLR3",90,0)
 ....;
"RTN","SCMCHLR3",91,0)
 ....;set error code/desc in display array
"RTN","SCMCHLR3",92,0)
 ....I $$GETEC^SCMCHLA2($G(SCTLOG("ERR","CODE")),.SCERR)
"RTN","SCMCHLR3",93,0)
 ....S SCTEXT="Error: "_$S($G(SCERR("CODE"))'="":SCERR("CODE")_" - "_$G(SCERR("SHORT")),1:$$LOWER^VALM1("UNKNOWN"))
"RTN","SCMCHLR3",94,0)
 ....K X S $P(X," ",160)=""
"RTN","SCMCHLR3",95,0)
 ....S SCTEXT=$E(SCTEXT_X,1,150)
"RTN","SCMCHLR3",96,0)
 ....D SET(SCARY,SCLINE,SCTEXT,10,$L(SCTEXT),SCNUM,,,,.SCCNT)
"RTN","SCMCHLR3",97,0)
 ;
"RTN","SCMCHLR3",98,0)
 Q
"RTN","SCMCHLR3",99,0)
 ;
"RTN","SCMCHLR3",100,0)
 ;
"RTN","SCMCHLR3",101,0)
SET(SCARY,SCLINE,SCTEXT,SCCOL,SCWID,SCNUM,SCTLIEN,SCDFN,SCERIEN,SCCNT) ;
"RTN","SCMCHLR3",102,0)
 ; Description: Set display array.
"RTN","SCMCHLR3",103,0)
 ;
"RTN","SCMCHLR3",104,0)
 ;  Input:
"RTN","SCMCHLR3",105,0)
 ;     SCARY - Global array subscript
"RTN","SCMCHLR3",106,0)
 ;    SCLINE - Line number
"RTN","SCMCHLR3",107,0)
 ;    SCTEXT - Text
"RTN","SCMCHLR3",108,0)
 ;     SCCOL - Column to start at
"RTN","SCMCHLR3",109,0)
 ;     SCWID - Column or text width
"RTN","SCMCHLR3",110,0)
 ;     SCNUM - Selection number
"RTN","SCMCHLR3",111,0)
 ;   SCTLIEN - PCMM HL7 Transmission Log IEN
"RTN","SCMCHLR3",112,0)
 ;   SCERIEN - IEN of record in Error Code (#404.47142) multiple
"RTN","SCMCHLR3",113,0)
 ;     SCDFN   Patient IEN
"RTN","SCMCHLR3",114,0)
 ;
"RTN","SCMCHLR3",115,0)
 ; Output:
"RTN","SCMCHLR3",116,0)
 ;  SCCNT - Number of lines in the list
"RTN","SCMCHLR3",117,0)
 ;
"RTN","SCMCHLR3",118,0)
 N X
"RTN","SCMCHLR3",119,0)
 S:SCLINE>SCCNT SCCNT=SCLINE
"RTN","SCMCHLR3",120,0)
 S X=$S($D(^TMP(SCARY,$J,SCLINE,0)):^(0),1:"")
"RTN","SCMCHLR3",121,0)
 S ^TMP(SCARY,$J,SCLINE,0)=$$SETSTR^VALM1(SCTEXT,X,SCCOL,SCWID)
"RTN","SCMCHLR3",122,0)
 S ^TMP(SCARY,$J,"IDX",SCLINE,SCNUM)=""
"RTN","SCMCHLR3",123,0)
 ;
"RTN","SCMCHLR3",124,0)
 ;Set special index used in retransmitting patient
"RTN","SCMCHLR3",125,0)
 I $G(SCTLIEN),$G(SCERIEN) D
"RTN","SCMCHLR3",126,0)
 .I '$G(SCTLOG("WORK")) Q:'SCDFN
"RTN","SCMCHLR3",127,0)
 .S ^TMP(SCARY_"IDX",$J,SCNUM)=SCLINE_"^"_SCTLIEN_"^"_SCERIEN
"RTN","SCMCHLR3",128,0)
 .S ^TMP(SCARY_"IDX",$J,"PT",$S(SCDFN:SCDFN,1:"W"),SCLINE)=SCTLIEN_"^"_SCERIEN
"RTN","SCMCHLR3",129,0)
 Q
"RTN","SCMCHLR3",130,0)
 ;
"RTN","SCMCHLR3",131,0)
 ;
"RTN","SCMCHLR3",132,0)
CAPFLD(SCCOL,SCWID) ; Description: Used to determine column/width of caption fields in the List Template.
"RTN","SCMCHLR3",133,0)
 ;
"RTN","SCMCHLR3",134,0)
 ;  Input:
"RTN","SCMCHLR3",135,0)
 ;   VALMDDF - Array available at run-time of list template. This array
"RTN","SCMCHLR3",136,0)
 ;             is subscripted by caption field name of List Template.
"RTN","SCMCHLR3",137,0)
 ;
"RTN","SCMCHLR3",138,0)
 ; Output:
"RTN","SCMCHLR3",139,0)
 ;  Function value: Returns 1 on success, 0 on failure
"RTN","SCMCHLR3",140,0)
 ;  SCCOL - array subscripted by abbreviation of caption field name containing the column number where the data/caption starts, pass by reference
"RTN","SCMCHLR3",141,0)
 ;  SCWID - array subscripted by abbreviation of caption field name containing the number of charaters the data/caption will use, pass by reference 
"RTN","SCMCHLR3",142,0)
 ;
"RTN","SCMCHLR3",143,0)
 ;Quit if VALMDDF array is not defined
"RTN","SCMCHLR3",144,0)
 Q:'$D(VALMDDF) 0
"RTN","SCMCHLR3",145,0)
 ;
"RTN","SCMCHLR3",146,0)
 N X
"RTN","SCMCHLR3",147,0)
 S X=VALMDDF("NUMBER"),SCCOL("NUM")=$P(X,"^",2),SCWID("NUM")=$P(X,"^",3)
"RTN","SCMCHLR3",148,0)
 S X=VALMDDF("RETRANS"),SCCOL("RET")=$P(X,"^",2),SCWID("RET")=$P(X,"^",3)
"RTN","SCMCHLR3",149,0)
 S X=VALMDDF("PATIENT"),SCCOL("PAT")=$P(X,"^",2),SCWID("PAT")=$P(X,"^",3)
"RTN","SCMCHLR3",150,0)
 S X=VALMDDF("PATID"),SCCOL("PATID")=$P(X,"^",2),SCWID("PATID")=$P(X,"^",3)
"RTN","SCMCHLR3",151,0)
 S X=VALMDDF("DATE"),SCCOL("DTR")=$P(X,"^",2),SCWID("DTR")=$P(X,"^",3)
"RTN","SCMCHLR3",152,0)
 S X=VALMDDF("PROV"),SCCOL("PROV")=$P(X,"^",2),SCWID("PROV")=$P(X,"^",3)
"RTN","SCMCHLR3",153,0)
 S X=VALMDDF("TYPE"),SCCOL("TYPE")=$P(X,"^",2),SCWID("TYPE")=$P(X,"^",3)
"RTN","SCMCHLR3",154,0)
 S X=VALMDDF("STATUS"),SCCOL("STA")=$P(X,"^",2),SCWID("STA")=$P(X,"^",3)
"RTN","SCMCHLR3",155,0)
 Q 1
"RTN","SCMCHLR4")
0^13^B65400046
"RTN","SCMCHLR4",1,0)
SCMCHLR4 ;ALB/KCL - PCMM HL7 Reject Processing - Protocols; 10-JAN-2000
"RTN","SCMCHLR4",2,0)
 ;;5.3;Scheduling;**210,272**;AUG 13, 1993
"RTN","SCMCHLR4",3,0)
 ;
"RTN","SCMCHLR4",4,0)
 ;This routine contains the PCMM Transmission Error processing protocols.
"RTN","SCMCHLR4",5,0)
 ;See EN^SCMCHLR2 for additional documentation on 'system wide' variables
"RTN","SCMCHLR4",6,0)
 ;used in this routine.
"RTN","SCMCHLR4",7,0)
 ;
"RTN","SCMCHLR4",8,0)
CS ; Description: Entry point for SCMC LE CHANGE STATUS protocol.
"RTN","SCMCHLR4",9,0)
 ;
"RTN","SCMCHLR4",10,0)
 ;  Input:
"RTN","SCMCHLR4",11,0)
 ;   SCEPS - Error Processing Status
"RTN","SCMCHLR4",12,0)
 ;               1 -> New
"RTN","SCMCHLR4",13,0)
 ;               2 -> Checked
"RTN","SCMCHLR4",14,0)
 ;               3 -> Both
"RTN","SCMCHLR4",15,0)
 ;
"RTN","SCMCHLR4",16,0)
 ; Output:
"RTN","SCMCHLR4",17,0)
 ;    SCEPS - Error Processing Status
"RTN","SCMCHLR4",18,0)
 ;                1 -> New
"RTN","SCMCHLR4",19,0)
 ;                2 -> Checked
"RTN","SCMCHLR4",20,0)
 ;                3 -> Both
"RTN","SCMCHLR4",21,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",22,0)
 ;
"RTN","SCMCHLR4",23,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR4",24,0)
 ;
"RTN","SCMCHLR4",25,0)
 ;Set screen to full scrolling region
"RTN","SCMCHLR4",26,0)
 D FULL^VALM1
"RTN","SCMCHLR4",27,0)
 ;
"RTN","SCMCHLR4",28,0)
 ;Ask user to select error processing status
"RTN","SCMCHLR4",29,0)
 S DIR(0)="SMO^1:New;2:Checked;3:Both"
"RTN","SCMCHLR4",30,0)
 S DIR("A")="Select Error Processing Status"
"RTN","SCMCHLR4",31,0)
 D ^DIR
"RTN","SCMCHLR4",32,0)
 ;
"RTN","SCMCHLR4",33,0)
 ;Process user response
"RTN","SCMCHLR4",34,0)
 I Y D
"RTN","SCMCHLR4",35,0)
 .S SCEPS=Y
"RTN","SCMCHLR4",36,0)
 .;rebuild error list for selected error processing status
"RTN","SCMCHLR4",37,0)
 .D BUILD^SCMCHLR1
"RTN","SCMCHLR4",38,0)
 ;
"RTN","SCMCHLR4",39,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",40,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",41,0)
 ;
"RTN","SCMCHLR4",42,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",43,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",44,0)
 Q
"RTN","SCMCHLR4",45,0)
 ;
"RTN","SCMCHLR4",46,0)
 ;
"RTN","SCMCHLR4",47,0)
CD ; Description: Entry point for SCMC LE CHANGE DATE RANGE protocol.
"RTN","SCMCHLR4",48,0)
 ;
"RTN","SCMCHLR4",49,0)
 ;  Input:
"RTN","SCMCHLR4",50,0)
 ;   SCBEG - Begin date for date range
"RTN","SCMCHLR4",51,0)
 ;   SCEND - End date for date range
"RTN","SCMCHLR4",52,0)
 ;
"RTN","SCMCHLR4",53,0)
 ; Output:
"RTN","SCMCHLR4",54,0)
 ;    SCBEG - Begin date for date range
"RTN","SCMCHLR4",55,0)
 ;    SCEND - End date for date range
"RTN","SCMCHLR4",56,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",57,0)
 ;
"RTN","SCMCHLR4",58,0)
 N VALMB,VALMBEG,VALMEND,X,X1,X2
"RTN","SCMCHLR4",59,0)
 ;
"RTN","SCMCHLR4",60,0)
 ;Ask user for date range (default 2 wks prior to today)
"RTN","SCMCHLR4",61,0)
 S X1=DT,X2=-14
"RTN","SCMCHLR4",62,0)
 D C^%DTC
"RTN","SCMCHLR4",63,0)
 S VALMB=X
"RTN","SCMCHLR4",64,0)
 D RANGE^VALM1
"RTN","SCMCHLR4",65,0)
 ;
"RTN","SCMCHLR4",66,0)
 ;Process user response
"RTN","SCMCHLR4",67,0)
 I 'VALMBEG!('VALMEND)!((SCBEG=VALMBEG)&(SCEND=VALMEND)) D
"RTN","SCMCHLR4",68,0)
 .W !!,"Date Range was not changed."
"RTN","SCMCHLR4",69,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR4",70,0)
 .S VALMBCK=""
"RTN","SCMCHLR4",71,0)
 E  D
"RTN","SCMCHLR4",72,0)
 .S SCBEG=VALMBEG,SCEND=VALMEND
"RTN","SCMCHLR4",73,0)
 .;rebuild error list for selected date range
"RTN","SCMCHLR4",74,0)
 .D BUILD^SCMCHLR1
"RTN","SCMCHLR4",75,0)
 .;Refresh screen when returning from action
"RTN","SCMCHLR4",76,0)
 .S VALMBCK="R"
"RTN","SCMCHLR4",77,0)
 ;
"RTN","SCMCHLR4",78,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",79,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",80,0)
 ;
"RTN","SCMCHLR4",81,0)
 Q
"RTN","SCMCHLR4",82,0)
 ;
"RTN","SCMCHLR4",83,0)
 ;
"RTN","SCMCHLR4",84,0)
SL ; Description: Entry point for SCMC LE SORT LIST protocol.
"RTN","SCMCHLR4",85,0)
 ;
"RTN","SCMCHLR4",86,0)
 ;  Input:
"RTN","SCMCHLR4",87,0)
 ;   SCSORTBY - Sort by criteria
"RTN","SCMCHLR4",88,0)
 ;
"RTN","SCMCHLR4",89,0)
 ; Output:
"RTN","SCMCHLR4",90,0)
 ;  SCSORTBY - Sort by criteria
"RTN","SCMCHLR4",91,0)
 ;   VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",92,0)
 ;
"RTN","SCMCHLR4",93,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR4",94,0)
 ;
"RTN","SCMCHLR4",95,0)
 ;Sets screen to full scrolling region
"RTN","SCMCHLR4",96,0)
 D FULL^VALM1
"RTN","SCMCHLR4",97,0)
 ;
"RTN","SCMCHLR4",98,0)
 ;Ask user to select sort by criteria
"RTN","SCMCHLR4",99,0)
 S DIR(0)="SMO^N:Patient Name;D:Date Error Received;P:Provider"
"RTN","SCMCHLR4",100,0)
 S DIR("A")="Select Sort By"
"RTN","SCMCHLR4",101,0)
 D ^DIR
"RTN","SCMCHLR4",102,0)
 ;
"RTN","SCMCHLR4",103,0)
 ;Process user response
"RTN","SCMCHLR4",104,0)
 I "^N^D^P^"[("^"_Y_"^"),SCSORTBY'=Y D
"RTN","SCMCHLR4",105,0)
 .S SCSORTBY=Y
"RTN","SCMCHLR4",106,0)
 .;rebuild error list for selected sort criteria
"RTN","SCMCHLR4",107,0)
 .D BUILD^SCMCHLR1
"RTN","SCMCHLR4",108,0)
 ;
"RTN","SCMCHLR4",109,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",110,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",111,0)
 ;
"RTN","SCMCHLR4",112,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",113,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",114,0)
 Q
"RTN","SCMCHLR4",115,0)
 ;
"RTN","SCMCHLR4",116,0)
 ;
"RTN","SCMCHLR4",117,0)
CE ; Description: Entry point for SCMC LE CHECK ERROR OFF LIST protocol.
"RTN","SCMCHLR4",118,0)
 ;
"RTN","SCMCHLR4",119,0)
 ;  Input: None
"RTN","SCMCHLR4",120,0)
 ;
"RTN","SCMCHLR4",121,0)
 ; Output:
"RTN","SCMCHLR4",122,0)
 ;   VALMSG - Custom message
"RTN","SCMCHLR4",123,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",124,0)
 ;
"RTN","SCMCHLR4",125,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCERIEN,VALMY
"RTN","SCMCHLR4",126,0)
 ;
"RTN","SCMCHLR4",127,0)
 ;Ask user to select transmission errors to check off the list
"RTN","SCMCHLR4",128,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR4",129,0)
 D FULL^VALM1
"RTN","SCMCHLR4",130,0)
 ;
"RTN","SCMCHLR4",131,0)
 ;Process user selection
"RTN","SCMCHLR4",132,0)
 S SCNUM=0
"RTN","SCMCHLR4",133,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR4",134,0)
 .;invoke call to check error off list
"RTN","SCMCHLR4",135,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR4",136,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR4",137,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR4",138,0)
 ..D CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR4",139,0)
 ;
"RTN","SCMCHLR4",140,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",141,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",142,0)
 ;
"RTN","SCMCHLR4",143,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",144,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",145,0)
 Q
"RTN","SCMCHLR4",146,0)
 ;
"RTN","SCMCHLR4",147,0)
 ;
"RTN","SCMCHLR4",148,0)
RP ; Description: Entry point for SCMC LE RETRANSMIT PATIENT protocol.
"RTN","SCMCHLR4",149,0)
 ;
"RTN","SCMCHLR4",150,0)
 ;  Input: None
"RTN","SCMCHLR4",151,0)
 ;
"RTN","SCMCHLR4",152,0)
 ; Output: 
"RTN","SCMCHLR4",153,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",154,0)
 ;
"RTN","SCMCHLR4",155,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCTLOG,VALMY
"RTN","SCMCHLR4",156,0)
 ;
"RTN","SCMCHLR4",157,0)
 ;Ask user to select transmission errors to retransmit patient
"RTN","SCMCHLR4",158,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR4",159,0)
 D FULL^VALM1
"RTN","SCMCHLR4",160,0)
 ;
"RTN","SCMCHLR4",161,0)
 ;Process user selections
"RTN","SCMCHLR4",162,0)
 S SCNUM=0
"RTN","SCMCHLR4",163,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR4",164,0)
 .;
"RTN","SCMCHLR4",165,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR4",166,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR4",167,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR4",168,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR4",169,0)
 ..;to set patient to 'retransmit'.
"RTN","SCMCHLR4",170,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D SETPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR4",171,0)
 ;
"RTN","SCMCHLR4",172,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",173,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",174,0)
 ;
"RTN","SCMCHLR4",175,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",176,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",177,0)
 Q
"RTN","SCMCHLR4",178,0)
 ;
"RTN","SCMCHLR4",179,0)
 ;
"RTN","SCMCHLR4",180,0)
PE ; Description: Entry point for SCMC LE PRINT ERROR CODES protocol.
"RTN","SCMCHLR4",181,0)
 ;
"RTN","SCMCHLR4",182,0)
 ;  Input: None
"RTN","SCMCHLR4",183,0)
 ;
"RTN","SCMCHLR4",184,0)
 ; Output:
"RTN","SCMCHLR4",185,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",186,0)
 ;
"RTN","SCMCHLR4",187,0)
 ;Sets screen to full scrolling region
"RTN","SCMCHLR4",188,0)
 D FULL^VALM1
"RTN","SCMCHLR4",189,0)
 ;
"RTN","SCMCHLR4",190,0)
 ;Print PCMM Transmission Error Code Report
"RTN","SCMCHLR4",191,0)
 D ECRPRT^SCMCHLR7
"RTN","SCMCHLR4",192,0)
 D PAUSE^VALM1
"RTN","SCMCHLR4",193,0)
 ;
"RTN","SCMCHLR4",194,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",195,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",196,0)
 ;
"RTN","SCMCHLR4",197,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",198,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",199,0)
 Q
"RTN","SCMCHLR4",200,0)
 ;
"RTN","SCMCHLR4",201,0)
 ;
"RTN","SCMCHLR4",202,0)
RA ; Description: Entry point for SCMC LE RETRANSMIT ALL protocol.
"RTN","SCMCHLR4",203,0)
 ;
"RTN","SCMCHLR4",204,0)
 ;  Input: None
"RTN","SCMCHLR4",205,0)
 ;
"RTN","SCMCHLR4",206,0)
 ; Output:
"RTN","SCMCHLR4",207,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR4",208,0)
 ;
"RTN","SCMCHLR4",209,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR4",210,0)
 ;
"RTN","SCMCHLR4",211,0)
 ;Sets screen to full scrolling region
"RTN","SCMCHLR4",212,0)
 D FULL^VALM1
"RTN","SCMCHLR4",213,0)
 ;
"RTN","SCMCHLR4",214,0)
 ;Ask user if they want to retransmit all patients
"RTN","SCMCHLR4",215,0)
 S DIR(0)="Y"
"RTN","SCMCHLR4",216,0)
 S DIR("A")="Mark all patients for re-transmission"
"RTN","SCMCHLR4",217,0)
 S DIR("A",1)="This action will allow all patients to be marked for re-transmission."
"RTN","SCMCHLR4",218,0)
 S DIR("A",2)="The error processing status for all patients will be marked as checked."
"RTN","SCMCHLR4",219,0)
 S DIR("B")="NO"
"RTN","SCMCHLR4",220,0)
 D ^DIR
"RTN","SCMCHLR4",221,0)
 ;
"RTN","SCMCHLR4",222,0)
 ;Process user response
"RTN","SCMCHLR4",223,0)
 I '$D(DIRUT) D
"RTN","SCMCHLR4",224,0)
 .I +Y D
"RTN","SCMCHLR4",225,0)
 ..;set all patients as re-transmit
"RTN","SCMCHLR4",226,0)
 ..D UPDALL
"RTN","SCMCHLR4",227,0)
 ;
"RTN","SCMCHLR4",228,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR4",229,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR4",230,0)
 ;
"RTN","SCMCHLR4",231,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR4",232,0)
 S VALMBCK="R"
"RTN","SCMCHLR4",233,0)
 Q
"RTN","SCMCHLR4",234,0)
 ;
"RTN","SCMCHLR4",235,0)
 ;
"RTN","SCMCHLR4",236,0)
CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN) ;
"RTN","SCMCHLR4",237,0)
 ; Description: Used to check an error off the list.
"RTN","SCMCHLR4",238,0)
 ;
"RTN","SCMCHLR4",239,0)
 ;  Input:
"RTN","SCMCHLR4",240,0)
 ;     SCARY - Global array subscript
"RTN","SCMCHLR4",241,0)
 ;    SCLINE - Line number
"RTN","SCMCHLR4",242,0)
 ;   SCTLIEN - PCMM HL7 Transmission Log IEN
"RTN","SCMCHLR4",243,0)
 ;   SCERIEN - IEN of recrord in Error Code (#404.47142) multiple
"RTN","SCMCHLR4",244,0)
 ;
"RTN","SCMCHLR4",245,0)
 ; Output: None
"RTN","SCMCHLR4",246,0)
 ;
"RTN","SCMCHLR4",247,0)
 N SCERMSG
"RTN","SCMCHLR4",248,0)
 ;
"RTN","SCMCHLR4",249,0)
 I $$UPDEPS^SCMCHLA(SCTLIEN,SCERIEN,2,.SCERMSG) D
"RTN","SCMCHLR4",250,0)
 .D FLDTEXT^VALM10(SCLINE,"STATUS","Checked")
"RTN","SCMCHLR4",251,0)
 .D FLDCTRL^VALM10(SCLINE,"STATUS",IOINHI,IOINORM)
"RTN","SCMCHLR4",252,0)
 E  D
"RTN","SCMCHLR4",253,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR4",254,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERMSG)
"RTN","SCMCHLR4",255,0)
 .W !,"...Unable to check error off list"
"RTN","SCMCHLR4",256,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR4",257,0)
 Q
"RTN","SCMCHLR4",258,0)
 ;
"RTN","SCMCHLR4",259,0)
 ;
"RTN","SCMCHLR4",260,0)
SETPAT(SCARY,SCLINE,SCTLOG) ; Description: Used to set patient to marked for re-transmit.
"RTN","SCMCHLR4",261,0)
 ;
"RTN","SCMCHLR4",262,0)
 ;  Input:
"RTN","SCMCHLR4",263,0)
 ;    SCARY - Global array subscript
"RTN","SCMCHLR4",264,0)
 ;   SCLINE - Line number
"RTN","SCMCHLR4",265,0)
 ;   SCTLOG - Transmission log entry array
"RTN","SCMCHLR4",266,0)
 ;
"RTN","SCMCHLR4",267,0)
 ; Output: None
"RTN","SCMCHLR4",268,0)
 ;
"RTN","SCMCHLR4",269,0)
 N SCERROR
"RTN","SCMCHLR4",270,0)
 ;
"RTN","SCMCHLR4",271,0)
 ;Set patient to marked for re-transmit
"RTN","SCMCHLR4",272,0)
 I $$UPDSTAT^SCMCHLA(SCTLIEN,"M",.SCERROR) D
"RTN","SCMCHLR4",273,0)
 .D UPDPAT(SCARY,$S($G(SCTLOG("DFN")):SCTLOG("DFN"),1:"W"),$S('$G(SCTLOG("DFN")):SCLINE,1:""))
"RTN","SCMCHLR4",274,0)
 E  D
"RTN","SCMCHLR4",275,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR4",276,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERROR)
"RTN","SCMCHLR4",277,0)
 .W !,"...Unable to mark patient for re-transmit"
"RTN","SCMCHLR4",278,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR4",279,0)
 Q
"RTN","SCMCHLR4",280,0)
 ;
"RTN","SCMCHLR4",281,0)
 ;
"RTN","SCMCHLR4",282,0)
UPDPAT(SCARY,SCDFN,LINE) ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR4",283,0)
 ; entries in the list for the patient as 'marked for re-transmit'.
"RTN","SCMCHLR4",284,0)
 ;
"RTN","SCMCHLR4",285,0)
 ;  Input:
"RTN","SCMCHLR4",286,0)
 ;   SCARY - Global array subscript
"RTN","SCMCHLR4",287,0)
 ;   SCDFN - Patient IEN
"RTN","SCMCHLR4",288,0)
 ;
"RTN","SCMCHLR4",289,0)
 ; Output: None
"RTN","SCMCHLR4",290,0)
 ;
"RTN","SCMCHLR4",291,0)
 N SCLINE,SCTLIEN
"RTN","SCMCHLR4",292,0)
 S:'$G(LINE) LINE=9999999
"RTN","SCMCHLR4",293,0)
 ;
"RTN","SCMCHLR4",294,0)
 ;Loop thru entries in the list for the patient
"RTN","SCMCHLR4",295,0)
 S SCLINE=0
"RTN","SCMCHLR4",296,0)
 I SCDFN="W",LINE'=9999999 S SCLINE=LINE-.01
"RTN","SCMCHLR4",297,0)
 F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:(('SCLINE)!(SCLINE>LINE))  S SCTLIEN=+^(SCLINE) D
"RTN","SCMCHLR4",298,0)
 .;update entry as marked for re-transmit
"RTN","SCMCHLR4",299,0)
 .D FLDTEXT^VALM10(SCLINE,"RETRANS","*")
"RTN","SCMCHLR4",300,0)
 .D FLDCTRL^VALM10(SCLINE,"RETRANS",IOINHI,IOINORM)
"RTN","SCMCHLR4",301,0)
 .;invoke code to check error off the list
"RTN","SCMCHLR4",302,0)
 .D CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR4",303,0)
 Q
"RTN","SCMCHLR4",304,0)
 ;
"RTN","SCMCHLR4",305,0)
 ;
"RTN","SCMCHLR4",306,0)
UPDALL ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR4",307,0)
 ; entries in the list as 'marked for re-transmit'.
"RTN","SCMCHLR4",308,0)
 ;
"RTN","SCMCHLR4",309,0)
 ;  Input: None
"RTN","SCMCHLR4",310,0)
 ; Output: None
"RTN","SCMCHLR4",311,0)
 ;
"RTN","SCMCHLR4",312,0)
 N SCLINE,SCTLIEN,SCDFN
"RTN","SCMCHLR4",313,0)
 ;
"RTN","SCMCHLR4",314,0)
 ;Loop thru entries in the list for all patients
"RTN","SCMCHLR4",315,0)
 S SCDFN=""
"RTN","SCMCHLR4",316,0)
 F  S SCDFN=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN)) Q:'SCDFN  D
"RTN","SCMCHLR4",317,0)
 .;Loop thru entries in the list for the patient
"RTN","SCMCHLR4",318,0)
 .S SCLINE=0
"RTN","SCMCHLR4",319,0)
 .F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:'SCLINE  D
"RTN","SCMCHLR4",320,0)
 ..S NODE=^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)
"RTN","SCMCHLR4",321,0)
 ..S SCTLIEN=+NODE,SCERIEN=+$P(NODE,"^",2)
"RTN","SCMCHLR4",322,0)
 ..;
"RTN","SCMCHLR4",323,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR4",324,0)
 ..;to set patient to 'retransmit'.
"RTN","SCMCHLR4",325,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D SETPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR4",326,0)
 ..;
"RTN","SCMCHLR4",327,0)
 ..;update entry as marked for re-transmit
"RTN","SCMCHLR4",328,0)
 ..D FLDTEXT^VALM10(SCLINE,"RETRANS","*")
"RTN","SCMCHLR4",329,0)
 ..D FLDCTRL^VALM10(SCLINE,"RETRANS",IOINHI,IOINORM)
"RTN","SCMCHLR4",330,0)
 ..;invoke code to check error off the list
"RTN","SCMCHLR4",331,0)
 ..D CHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR4",332,0)
 ;
"RTN","SCMCHLR4",333,0)
 Q
"RTN","SCMCHLR5")
0^15^B29241474
"RTN","SCMCHLR5",1,0)
SCMCHLR5 ;ALB/KCL - PCMM HL7 Reject Processing - Protocols con't ; 10-JAN-2000
"RTN","SCMCHLR5",2,0)
 ;;5.3;Scheduling;**210,272**;AUG 13, 1993
"RTN","SCMCHLR5",3,0)
 ;
"RTN","SCMCHLR5",4,0)
 ;This routine contains the PCMM Transmission Error processing protocols.
"RTN","SCMCHLR5",5,0)
 ;See EN^SCMCHLR2 for additional documentation on 'system wide' variables
"RTN","SCMCHLR5",6,0)
 ;used in this routine.
"RTN","SCMCHLR5",7,0)
 ;
"RTN","SCMCHLR5",8,0)
UE ; Description: Entry point for SCMC LE UNCHECK ERROR protocol.
"RTN","SCMCHLR5",9,0)
 ;
"RTN","SCMCHLR5",10,0)
 ;  Input: None
"RTN","SCMCHLR5",11,0)
 ;
"RTN","SCMCHLR5",12,0)
 ; Output:
"RTN","SCMCHLR5",13,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR5",14,0)
 ;
"RTN","SCMCHLR5",15,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCERIEN,VALMY
"RTN","SCMCHLR5",16,0)
 ;
"RTN","SCMCHLR5",17,0)
 ;Ask user to select transmission errors to uncheck on the list
"RTN","SCMCHLR5",18,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR5",19,0)
 D FULL^VALM1
"RTN","SCMCHLR5",20,0)
 ;
"RTN","SCMCHLR5",21,0)
 ;Process user selection
"RTN","SCMCHLR5",22,0)
 S SCNUM=0
"RTN","SCMCHLR5",23,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR5",24,0)
 .;invoke call to mark error as new on list
"RTN","SCMCHLR5",25,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR5",26,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR5",27,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR5",28,0)
 ..D UNCHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN)
"RTN","SCMCHLR5",29,0)
 ;
"RTN","SCMCHLR5",30,0)
 ;
"RTN","SCMCHLR5",31,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR5",32,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR5",33,0)
 ;
"RTN","SCMCHLR5",34,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR5",35,0)
 S VALMBCK="R"
"RTN","SCMCHLR5",36,0)
 Q
"RTN","SCMCHLR5",37,0)
 ;
"RTN","SCMCHLR5",38,0)
 ;
"RTN","SCMCHLR5",39,0)
DP ; Description: Entry point for SCMC LE DESELECT PATIENT RETRANSMIT protocol.
"RTN","SCMCHLR5",40,0)
 ;
"RTN","SCMCHLR5",41,0)
 ;  Input: None
"RTN","SCMCHLR5",42,0)
 ;
"RTN","SCMCHLR5",43,0)
 ; Output: 
"RTN","SCMCHLR5",44,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR5",45,0)
 ;
"RTN","SCMCHLR5",46,0)
 N NODE,SCLINE,SCNUM,SCTLIEN,SCTLOG,VALMY
"RTN","SCMCHLR5",47,0)
 ;
"RTN","SCMCHLR5",48,0)
 ;Ask user to select transmission errors to deselect
"RTN","SCMCHLR5",49,0)
 D EN^VALM2(XQORNOD(0))
"RTN","SCMCHLR5",50,0)
 ;
"RTN","SCMCHLR5",51,0)
 ;set screen to full scrolling region
"RTN","SCMCHLR5",52,0)
 D FULL^VALM1
"RTN","SCMCHLR5",53,0)
 ;
"RTN","SCMCHLR5",54,0)
 ;Process user selections
"RTN","SCMCHLR5",55,0)
 S SCNUM=0
"RTN","SCMCHLR5",56,0)
 F  S SCNUM=$O(VALMY(SCNUM)) Q:'SCNUM  D
"RTN","SCMCHLR5",57,0)
 .;
"RTN","SCMCHLR5",58,0)
 .I $D(^TMP(SCARY_"IDX",$J,SCNUM)) D
"RTN","SCMCHLR5",59,0)
 ..S NODE=$G(^TMP(SCARY_"IDX",$J,SCNUM))
"RTN","SCMCHLR5",60,0)
 ..S SCLINE=+NODE,SCTLIEN=+$P(NODE,"^",2),SCERIEN=+$P(NODE,"^",3)
"RTN","SCMCHLR5",61,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR5",62,0)
 ..;to set patient to 'retransmit'.
"RTN","SCMCHLR5",63,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D DESLPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR5",64,0)
 ;
"RTN","SCMCHLR5",65,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR5",66,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR5",67,0)
 ;
"RTN","SCMCHLR5",68,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR5",69,0)
 S VALMBCK="R"
"RTN","SCMCHLR5",70,0)
 Q
"RTN","SCMCHLR5",71,0)
 ;
"RTN","SCMCHLR5",72,0)
 ;
"RTN","SCMCHLR5",73,0)
DA ; Description: Entry point for SCMC LE DESELECT ALL protocol.
"RTN","SCMCHLR5",74,0)
 ;
"RTN","SCMCHLR5",75,0)
 ;  Input: None
"RTN","SCMCHLR5",76,0)
 ;
"RTN","SCMCHLR5",77,0)
 ; Output:
"RTN","SCMCHLR5",78,0)
 ;  VALMBCK - 'R'=Refresh screen
"RTN","SCMCHLR5",79,0)
 ;
"RTN","SCMCHLR5",80,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","SCMCHLR5",81,0)
 ;
"RTN","SCMCHLR5",82,0)
 ;Set screen to full scrolling region
"RTN","SCMCHLR5",83,0)
 D FULL^VALM1
"RTN","SCMCHLR5",84,0)
 ;
"RTN","SCMCHLR5",85,0)
 ;Ask user if they want to deselect all patients for retransmit
"RTN","SCMCHLR5",86,0)
 S DIR(0)="Y"
"RTN","SCMCHLR5",87,0)
 S DIR("A")="Deselect all patients"
"RTN","SCMCHLR5",88,0)
 S DIR("A",1)="This action will allow all patients that are currently"
"RTN","SCMCHLR5",89,0)
 S DIR("A",2)="marked for re-transmission to be deselected."
"RTN","SCMCHLR5",90,0)
 S DIR("B")="NO"
"RTN","SCMCHLR5",91,0)
 D ^DIR
"RTN","SCMCHLR5",92,0)
 ;
"RTN","SCMCHLR5",93,0)
 ;Process user response
"RTN","SCMCHLR5",94,0)
 I '$D(DIRUT) D
"RTN","SCMCHLR5",95,0)
 .I +Y D
"RTN","SCMCHLR5",96,0)
 ..;set all patients status to rejected
"RTN","SCMCHLR5",97,0)
 ..D UPDALL
"RTN","SCMCHLR5",98,0)
 ;
"RTN","SCMCHLR5",99,0)
 ;Place custom msg in msg window
"RTN","SCMCHLR5",100,0)
 ;S VALMSG=$$MRKMSG^SCMCHLR1
"RTN","SCMCHLR5",101,0)
 ;
"RTN","SCMCHLR5",102,0)
 ;Refresh screen when returning from action
"RTN","SCMCHLR5",103,0)
 S VALMBCK="R"
"RTN","SCMCHLR5",104,0)
 Q
"RTN","SCMCHLR5",105,0)
 ;
"RTN","SCMCHLR5",106,0)
 ;
"RTN","SCMCHLR5",107,0)
UNCHKERR(SCARY,SCLINE,SCTLIEN,SCERIEN) ;
"RTN","SCMCHLR5",108,0)
 ; Description: Used to uncheck an error on the list.
"RTN","SCMCHLR5",109,0)
 ;
"RTN","SCMCHLR5",110,0)
 ;  Input:
"RTN","SCMCHLR5",111,0)
 ;     SCARY - Global array subscript
"RTN","SCMCHLR5",112,0)
 ;    SCLINE - Line number
"RTN","SCMCHLR5",113,0)
 ;   SCTLIEN - PCMM HL7 Transmission Log IEN
"RTN","SCMCHLR5",114,0)
 ;   SCERIEN - IEN of record in Error Code (#404.47142) multiple
"RTN","SCMCHLR5",115,0)
 ;
"RTN","SCMCHLR5",116,0)
 ; Output: None
"RTN","SCMCHLR5",117,0)
 ;
"RTN","SCMCHLR5",118,0)
 N SCERMSG
"RTN","SCMCHLR5",119,0)
 ;
"RTN","SCMCHLR5",120,0)
 ;if status is marked for retransmit error can not be marked as new
"RTN","SCMCHLR5",121,0)
 I $$STATUS^SCMCHLA(SCTLIEN)="M" D
"RTN","SCMCHLR5",122,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR5",123,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERMSG)
"RTN","SCMCHLR5",124,0)
 .W !,"...Unable to update error processing status"
"RTN","SCMCHLR5",125,0)
 .W !,"...Patient already marked for re-transmission"
"RTN","SCMCHLR5",126,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR5",127,0)
 E  D
"RTN","SCMCHLR5",128,0)
 .I $$UPDEPS^SCMCHLA(SCTLIEN,SCERIEN,1,.SCERMSG) D
"RTN","SCMCHLR5",129,0)
 ..D FLDTEXT^VALM10(SCLINE,"STATUS","New")
"RTN","SCMCHLR5",130,0)
 ..D FLDCTRL^VALM10(SCLINE,"STATUS",IOINHI,IOINORM)
"RTN","SCMCHLR5",131,0)
 Q
"RTN","SCMCHLR5",132,0)
 ;
"RTN","SCMCHLR5",133,0)
 ;
"RTN","SCMCHLR5",134,0)
DESLPAT(SCARY,SCLINE,SCTLOG) ; Description: Used to set patient to rejected.
"RTN","SCMCHLR5",135,0)
 ;
"RTN","SCMCHLR5",136,0)
 ;  Input:
"RTN","SCMCHLR5",137,0)
 ;    SCARY - Global array subscript
"RTN","SCMCHLR5",138,0)
 ;   SCLINE - Line number
"RTN","SCMCHLR5",139,0)
 ;   SCTLOG - Transmission log entry array
"RTN","SCMCHLR5",140,0)
 ;
"RTN","SCMCHLR5",141,0)
 ; Output: None
"RTN","SCMCHLR5",142,0)
 ;
"RTN","SCMCHLR5",143,0)
 N SCERROR
"RTN","SCMCHLR5",144,0)
 ;
"RTN","SCMCHLR5",145,0)
 ;Set patient to rejected
"RTN","SCMCHLR5",146,0)
 I $$UPDSTAT^SCMCHLA(SCTLIEN,"RJ",.SCERROR) D
"RTN","SCMCHLR5",147,0)
 .D UPDPAT(SCARY,$S($G(SCTLOG("DFN")):SCTLOG("DFN"),1:"W"),$S('$G(SCTLOG("DFN")):SCLINE,1:""))
"RTN","SCMCHLR5",148,0)
 E  D
"RTN","SCMCHLR5",149,0)
 .W !,^TMP(SCARY,$J,SCLINE,0)
"RTN","SCMCHLR5",150,0)
 .W:$G(SCERMSG)'="" !,"...",$$LOWER^VALM1(SCERROR)
"RTN","SCMCHLR5",151,0)
 .W !,"...Unable to deselect patient for re-transmit"
"RTN","SCMCHLR5",152,0)
 .D PAUSE^VALM1
"RTN","SCMCHLR5",153,0)
 Q
"RTN","SCMCHLR5",154,0)
 ;
"RTN","SCMCHLR5",155,0)
 ;
"RTN","SCMCHLR5",156,0)
UPDPAT(SCARY,SCDFN,LINE) ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR5",157,0)
 ; entries in the list for the patient as 'rejected'.
"RTN","SCMCHLR5",158,0)
 ;
"RTN","SCMCHLR5",159,0)
 ;  Input:
"RTN","SCMCHLR5",160,0)
 ;   SCARY - Global array subscript
"RTN","SCMCHLR5",161,0)
 ;   SCDFN - Patient IEN
"RTN","SCMCHLR5",162,0)
 ;
"RTN","SCMCHLR5",163,0)
 ; Output: None
"RTN","SCMCHLR5",164,0)
 ;
"RTN","SCMCHLR5",165,0)
 S:'$G(LINE) LINE=999999
"RTN","SCMCHLR5",166,0)
 N SCLINE,SCTLIEN
"RTN","SCMCHLR5",167,0)
 ;
"RTN","SCMCHLR5",168,0)
 ;Loop thru entries in the list for the patient
"RTN","SCMCHLR5",169,0)
 S SCLINE=0
"RTN","SCMCHLR5",170,0)
 I SCDFN="W",LINE'=999999 S SCLINE=LINE-.01
"RTN","SCMCHLR5",171,0)
 F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:(('SCLINE)!(SCLINE>LINE))  S SCTLIEN=+^(SCLINE) D
"RTN","SCMCHLR5",172,0)
 .;update entry that was marked for re-transmit to null
"RTN","SCMCHLR5",173,0)
 .D FLDTEXT^VALM10(SCLINE,"RETRANS"," ")
"RTN","SCMCHLR5",174,0)
 Q
"RTN","SCMCHLR5",175,0)
 ;
"RTN","SCMCHLR5",176,0)
 ;
"RTN","SCMCHLR5",177,0)
UPDALL ; Description: Update all PCMM HL7 Transmssion Log
"RTN","SCMCHLR5",178,0)
 ; entries in the list as 'marked for re-transmit'.
"RTN","SCMCHLR5",179,0)
 ;
"RTN","SCMCHLR5",180,0)
 ;  Input: None
"RTN","SCMCHLR5",181,0)
 ; Output: None
"RTN","SCMCHLR5",182,0)
 ;
"RTN","SCMCHLR5",183,0)
 N SCLINE,SCTLIEN,SCDFN
"RTN","SCMCHLR5",184,0)
 ;
"RTN","SCMCHLR5",185,0)
 ;Loop thru entries in the list for all patients
"RTN","SCMCHLR5",186,0)
 S SCDFN=""
"RTN","SCMCHLR5",187,0)
 F  S SCDFN=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN)) Q:'SCDFN  D
"RTN","SCMCHLR5",188,0)
 .;Loop thru entries in the list for the patient
"RTN","SCMCHLR5",189,0)
 .S SCLINE=0
"RTN","SCMCHLR5",190,0)
 .F  S SCLINE=$O(^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)) Q:'SCLINE  D
"RTN","SCMCHLR5",191,0)
 ..S NODE=^TMP(SCARY_"IDX",$J,"PT",SCDFN,SCLINE)
"RTN","SCMCHLR5",192,0)
 ..S SCTLIEN=+NODE,SCERIEN=+$P(NODE,"^",2)
"RTN","SCMCHLR5",193,0)
 ..;
"RTN","SCMCHLR5",194,0)
 ..;get information for PCMM HL7 Transmission Log entry and invoke code
"RTN","SCMCHLR5",195,0)
 ..;to set patient to 'rejected'.
"RTN","SCMCHLR5",196,0)
 ..I $$GETLOG^SCMCHLA(SCTLIEN,SCERIEN,.SCTLOG) D DESLPAT(SCARY,SCLINE,.SCTLOG)
"RTN","SCMCHLR5",197,0)
 ..;
"RTN","SCMCHLR5",198,0)
 ..;update entry that was marked for re-transmit to null
"RTN","SCMCHLR5",199,0)
 ..D FLDTEXT^VALM10(SCLINE,"RETRANS"," ")
"RTN","SCMCHLR5",200,0)
 ;
"RTN","SCMCHLR5",201,0)
 Q
"RTN","SCMCHLRR")
0^12^B23314016
"RTN","SCMCHLRR",1,0)
SCMCHLRR ;BP/DJB - PCMM HL7 Rejects - Resubmit ; 3/6/00 12:14pm
"RTN","SCMCHLRR",2,0)
 ;;5.3;Scheduling;**210,224,272**;AUG 13, 1993
"RTN","SCMCHLRR",3,0)
 ;
"RTN","SCMCHLRR",4,0)
EN(SCLIM) ;Entry point for retransmitting "M"arked messages
"RTN","SCMCHLRR",5,0)
 ;
"RTN","SCMCHLRR",6,0)
 ;Input:  
"RTN","SCMCHLRR",7,0)
 ;    SCLIM  - maximum messages allowed per batch passed by reference
"RTN","SCMCHLRR",8,0)
 ;
"RTN","SCMCHLRR",9,0)
 ;Output: none
"RTN","SCMCHLRR",10,0)
 ;
"RTN","SCMCHLRR",11,0)
 Q:'$D(SCLIM)
"RTN","SCMCHLRR",12,0)
 ;
"RTN","SCMCHLRR",13,0)
 NEW DFN,SCDELETE,VARPTR
"RTN","SCMCHLRR",14,0)
 NEW MSGCNT,SCFAC,SCSEQ
"RTN","SCMCHLRR",15,0)
 ;
"RTN","SCMCHLRR",16,0)
 ;Send notification msg if new HL7 reject transmissions received
"RTN","SCMCHLRR",17,0)
 D NOTIFY^SCMCHLM
"RTN","SCMCHLRR",18,0)
 ;
"RTN","SCMCHLRR",19,0)
 ;Initialize variables needed by GENERATE^SCMCHLG
"RTN","SCMCHLRR",20,0)
 S SCFAC=+$P($$SITE^VASITE(),"^",3) ;..Facility number
"RTN","SCMCHLRR",21,0)
 S MSGCNT=0 ;..........................Message count
"RTN","SCMCHLRR",22,0)
 ;
"RTN","SCMCHLRR",23,0)
 ;Loop thru PCMM HL7 TRANSMISSION LOG and resubmit items
"RTN","SCMCHLRR",24,0)
 D LOOP
"RTN","SCMCHLRR",25,0)
 ;
"RTN","SCMCHLRR",26,0)
EXIT ;
"RTN","SCMCHLRR",27,0)
 Q
"RTN","SCMCHLRR",28,0)
 ;
"RTN","SCMCHLRR",29,0)
 ;
"RTN","SCMCHLRR",30,0)
LOOP ;Loop thru PCMM HL7 TRANSMISSION LOG file and find every entry
"RTN","SCMCHLRR",31,0)
 ;with STATUS="M", and re-transmit.
"RTN","SCMCHLRR",32,0)
 ;
"RTN","SCMCHLRR",33,0)
 NEW TRANI
"RTN","SCMCHLRR",34,0)
 S TRANI=0
"RTN","SCMCHLRR",35,0)
 F  S TRANI=$O(^SCPT(404.471,"ASTAT","M",TRANI)) Q:'TRANI!(SCLIM<1)  D 
"RTN","SCMCHLRR",36,0)
 . N WORK S (WORK,VARPTR)=$P($G(^SCPT(404.471,+TRANI,0)),U,7)
"RTN","SCMCHLRR",37,0)
 . I '$G(WORK) D GETDATA(TRANI)  ;..Get DFN,VARPTR,SCDELETE
"RTN","SCMCHLRR",38,0)
 . ;alb/rpm - Missing ZPC segment messages will not retransmit.
"RTN","SCMCHLRR",39,0)
 . ;          Clear the entry by setting status to "RT".
"RTN","SCMCHLRR",40,0)
 . I VARPTR="" D STATUS(TRANI,"RT") Q
"RTN","SCMCHLRR",41,0)
 . D RETRAN ;.......................Re-transmit message
"RTN","SCMCHLRR",42,0)
 Q
"RTN","SCMCHLRR",43,0)
GETDATA(TRANI) ;Get DFN & VARPTR from PCMM HL7 TRANSMISSION LOG file
"RTN","SCMCHLRR",44,0)
 ; Input:
"RTN","SCMCHLRR",45,0)
 ;    TRANI    - IEN to file PCMM HL7 TRANSMISSION LOG file (#404.471)
"RTN","SCMCHLRR",46,0)
 ;Output:
"RTN","SCMCHLRR",47,0)
 ;    DFN      - Patient IEN
"RTN","SCMCHLRR",48,0)
 ;    VARPTR   - Variable pointer to 404.43 (ex: "2404;SCPT(404.43,")
"RTN","SCMCHLRR",49,0)
 ;    SCDELETE - Flag to process a delete
"RTN","SCMCHLRR",50,0)
 ;
"RTN","SCMCHLRR",51,0)
 NEW IDI,IDLONG,ND,PTPI
"RTN","SCMCHLRR",52,0)
 ;
"RTN","SCMCHLRR",53,0)
 ;Initialize return variables
"RTN","SCMCHLRR",54,0)
 S (DFN,VARPTR)=""
"RTN","SCMCHLRR",55,0)
 S SCDELETE=0
"RTN","SCMCHLRR",56,0)
 ;
"RTN","SCMCHLRR",57,0)
 S IDI=$O(^SCPT(404.471,TRANI,"ZPC","C",0)) Q:'IDI
"RTN","SCMCHLRR",58,0)
 S ND=$G(^SCPT(404.49,IDI,0)) ;............PCMM HL7 ID zero node
"RTN","SCMCHLRR",59,0)
 S IDLONG=$P(ND,U,1) ;.....................Get long form of ID
"RTN","SCMCHLRR",60,0)
 ;alb/rpm;Patch 224;Fix DFN retrieval to prevent missing PID/EVN segments
"RTN","SCMCHLRR",61,0)
 S DFN=$P($G(^SCPT(404.471,TRANI,0)),U,2) Q:'DFN
"RTN","SCMCHLRR",62,0)
 S PTPI=$P(IDLONG,"-",1) ;.................File 404.43 IEN
"RTN","SCMCHLRR",63,0)
 Q:'PTPI
"RTN","SCMCHLRR",64,0)
 I '$D(^SCPT(404.43,PTPI)) S SCDELETE=1 ;..Flag to process a delete
"RTN","SCMCHLRR",65,0)
 S VARPTR=PTPI_";SCPT(404.43," ;...........Create event pointer
"RTN","SCMCHLRR",66,0)
 Q
"RTN","SCMCHLRR",67,0)
 ;
"RTN","SCMCHLRR",68,0)
RETRAN ;Re-transmit messages.
"RTN","SCMCHLRR",69,0)
 ;
"RTN","SCMCHLRR",70,0)
 NEW PT,PTPI,RESULT,XMITARRY
"RTN","SCMCHLRR",71,0)
 NEW HL,HLECH,HLEID,HLFS,HLQ
"RTN","SCMCHLRR",72,0)
 ;
"RTN","SCMCHLRR",73,0)
 ;Initialize array
"RTN","SCMCHLRR",74,0)
 S XMITARRY="^TMP(""PCMM"",""HL7"","_$J_")" ;..Segments
"RTN","SCMCHLRR",75,0)
 KILL @XMITARRY
"RTN","SCMCHLRR",76,0)
 ;
"RTN","SCMCHLRR",77,0)
 ;Get pointer to sending event
"RTN","SCMCHLRR",78,0)
 S HLEID=$$HLEID^SCMCHL()
"RTN","SCMCHLRR",79,0)
 I 'HLEID D  Q
"RTN","SCMCHLRR",80,0)
 . Q:$D(ZTQUEUED)
"RTN","SCMCHLRR",81,0)
 . W "Unable to initialize HL7 variables - protocol not found"
"RTN","SCMCHLRR",82,0)
 ;
"RTN","SCMCHLRR",83,0)
 ;Initialize HL7 variables
"RTN","SCMCHLRR",84,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","SCMCHLRR",85,0)
 I $G(WORK) S RESULT=$$BUILD^SCMCHLP(VARPTR,.HL,.XMITARRY,$G(TRANI)) D GEN Q
"RTN","SCMCHLRR",86,0)
 I $O(HL(""))="" W:'$D(ZTQUEUED) $P(HL,"^",2) Q
"RTN","SCMCHLRR",87,0)
 ;
"RTN","SCMCHLRR",88,0)
 ;Build segment array
"RTN","SCMCHLRR",89,0)
 I $G(SCDELETE) D  I 1 ;....................Process a deletion
"RTN","SCMCHLRR",90,0)
 . S PTPI=$P(VARPTR,";",1)
"RTN","SCMCHLRR",91,0)
 . D PTPD^SCMCHLB2(PTPI)
"RTN","SCMCHLRR",92,0)
 E  D  I +RESULT<0 W $P(RESULT,"^",2) Q  ;..Process a normal entry
"RTN","SCMCHLRR",93,0)
 . S RESULT=$$BUILD^SCMCHLB(VARPTR,.HL,.XMITARRY)
"RTN","SCMCHLRR",94,0)
 . I +RESULT<0,'$D(ZTQUEUED) W $P(RESULT,"^",2)
"RTN","SCMCHLRR",95,0)
 ;
"RTN","SCMCHLRR",96,0)
 ;Generate message
"RTN","SCMCHLRR",97,0)
GEN S RESULT=$$GENERATE^SCMCHLG()
"RTN","SCMCHLRR",98,0)
 ;
"RTN","SCMCHLRR",99,0)
 KILL @XMITARRY
"RTN","SCMCHLRR",100,0)
 Q:'$G(RESULT)  ;No messages generated
"RTN","SCMCHLRR",101,0)
 D STATUS(TRANI,"RT") ;..Change STATUS to RT
"RTN","SCMCHLRR",102,0)
 W:'$D(ZTQUEUED) !,"Message re-transmitted..."
"RTN","SCMCHLRR",103,0)
 Q
"RTN","SCMCHLRR",104,0)
 ;
"RTN","SCMCHLRR",105,0)
STATUS(TRANI,STATUS) ;Update STATUS field in PCMM HL7 TRANSMISSION LOG file.
"RTN","SCMCHLRR",106,0)
 ; Input: TRANI - IEN of PCM HL7 TRANSMISSION LOG file
"RTN","SCMCHLRR",107,0)
 ;       STATUS - A=Accepted, M=Marked for re-transmit, RJ=Rejected
"RTN","SCMCHLRR",108,0)
 ;
"RTN","SCMCHLRR",109,0)
 NEW SCERR,SCFDA,SCIENS
"RTN","SCMCHLRR",110,0)
 Q:'$G(TRANI)
"RTN","SCMCHLRR",111,0)
 Q:($G(STATUS)']"")
"RTN","SCMCHLRR",112,0)
 S SCIENS=TRANI_","
"RTN","SCMCHLRR",113,0)
 S SCFDA(404.471,SCIENS,.04)=STATUS ;..Status
"RTN","SCMCHLRR",114,0)
 D FILE^DIE("I","SCFDA","SCERR")
"RTN","SCMCHLRR",115,0)
 Q
"RTN","SCMCHLRR",116,0)
 ;
"RTN","SCMCHLRR",117,0)
AUTO(SCLIM) ;Auto retransmit messages that have not received an ACK.
"RTN","SCMCHLRR",118,0)
 ;Check all messages with a STATUS of "Transmitted" and see if
"RTN","SCMCHLRR",119,0)
 ;they've received an ACK. Then compare their transmit date to the
"RTN","SCMCHLRR",120,0)
 ;date in PCMM PARAMETER file HL7 TRANSMIT PERIOD field.
"RTN","SCMCHLRR",121,0)
 ;
"RTN","SCMCHLRR",122,0)
 ;Input:
"RTN","SCMCHLRR",123,0)
 ;    SCLIM - maximum messages allowed to transmit passed by reference
"RTN","SCMCHLRR",124,0)
 ;
"RTN","SCMCHLRR",125,0)
 ;Output: none
"RTN","SCMCHLRR",126,0)
 ;
"RTN","SCMCHLRR",127,0)
 Q:'$D(SCLIM)
"RTN","SCMCHLRR",128,0)
 ;
"RTN","SCMCHLRR",129,0)
 NEW DAYSMAX,DAYSDIFF,ND,TODAY,TRANDT,TRANI
"RTN","SCMCHLRR",130,0)
 NEW DFN,SCDELETE,VARPTR
"RTN","SCMCHLRR",131,0)
 NEW MSGCNT,SCFAC,SCSEQ
"RTN","SCMCHLRR",132,0)
 ;
"RTN","SCMCHLRR",133,0)
 ;Initialize variables needed by GENERATE^SCMCHLG
"RTN","SCMCHLRR",134,0)
 S SCFAC=+$P($$SITE^VASITE(),"^",3) ;..Facility number
"RTN","SCMCHLRR",135,0)
 S MSGCNT=0 ;..........................Message count
"RTN","SCMCHLRR",136,0)
 ;
"RTN","SCMCHLRR",137,0)
 S TODAY=$$DT^XLFDT()
"RTN","SCMCHLRR",138,0)
 ;Get max days from HL7 PARAMETER file
"RTN","SCMCHLRR",139,0)
 S DAYSMAX=$P($G(^SCTM(404.44,1,1)),U,6)
"RTN","SCMCHLRR",140,0)
 I DAYSMAX="" S DAYSMAX=7 ;Default of 7 days
"RTN","SCMCHLRR",141,0)
 ;
"RTN","SCMCHLRR",142,0)
 S TRANI=0
"RTN","SCMCHLRR",143,0)
 F  S TRANI=$O(^SCPT(404.471,"ASTAT","T",TRANI)) Q:'TRANI!(SCLIM<1)  D 
"RTN","SCMCHLRR",144,0)
 . S ND=$G(^SCPT(404.471,TRANI,0))
"RTN","SCMCHLRR",145,0)
 . Q:$P(ND,U,5)  ;........ACK already received
"RTN","SCMCHLRR",146,0)
 . S TRANDT=$P(ND,U,3) ;..Date Transmitted
"RTN","SCMCHLRR",147,0)
 . ;
"RTN","SCMCHLRR",148,0)
 . ;Get number of days between Today and Transmit Date.
"RTN","SCMCHLRR",149,0)
 . S DAYSDIFF=$$FMDIFF^XLFDT(TODAY,TRANDT,1)
"RTN","SCMCHLRR",150,0)
 . ;
"RTN","SCMCHLRR",151,0)
 . ;Quit if required number of days hasn't passed
"RTN","SCMCHLRR",152,0)
 . Q:(DAYSDIFF<DAYSMAX)
"RTN","SCMCHLRR",153,0)
 . ;
"RTN","SCMCHLRR",154,0)
 . D GETDATA(TRANI) Q:VARPTR=""  ;..Get DFN,VARPTR,SCDELETE
"RTN","SCMCHLRR",155,0)
 . N WORK S WORK=$P($G(^SCPT(404.471,+TRANI,0)),U,7)
"RTN","SCMCHLRR",156,0)
 . D RETRAN ;.......................Re-transmit message
"RTN","SCMCHLRR",157,0)
 Q
"RTN","SCMCHLX")
0^2^B3910159
"RTN","SCMCHLX",1,0)
SCMCHLX ;BP/DJB - PCMM HL7 EVENT File Xref APIs ; 10 Dec 2002  8:44 PM
"RTN","SCMCHLX",2,0)
 ;;5.3;Scheduling;**177,264,272**;May 01, 1999
"RTN","SCMCHLX",3,0)
 ;
"RTN","SCMCHLX",4,0)
 ;Reference routine: SCDXFX01
"RTN","SCMCHLX",5,0)
AACXMIT(IFN,SET,OLDEVPTR) ;Logic for AACXMIT* xrefs on PCMM HL7 EVENT
"RTN","SCMCHLX",6,0)
 ;                 file (#404.48).
"RTN","SCMCHLX",7,0)
 ;
"RTN","SCMCHLX",8,0)
 ; Input: IFN: Pointer to entry in file
"RTN","SCMCHLX",9,0)
 ;        SET: 1 = Set xref
"RTN","SCMCHLX",10,0)
 ;             0 = Kill xref
"RTN","SCMCHLX",11,0)
 ;            -1 = Check value of TRANSMISSION REQUIRED field (#.04).
"RTN","SCMCHLX",12,0)
 ;                   If "YES"- Set xref
"RTN","SCMCHLX",13,0)
 ;                   If "NO" - Kill xref
"RTN","SCMCHLX",14,0)
 ;   OLDEVPTR: Previous value of EVENT POINTER field (#.07).
"RTN","SCMCHLX",15,0)
 ;             Only valid when KILLing xref is due to data in this
"RTN","SCMCHLX",16,0)
 ;             field changing.
"RTN","SCMCHLX",17,0)
 ;Output: None
"RTN","SCMCHLX",18,0)
 ;
"RTN","SCMCHLX",19,0)
 ;Check input
"RTN","SCMCHLX",20,0)
 Q:'$G(IFN)
"RTN","SCMCHLX",21,0)
 Q:'$D(^SCPT(404.48,IFN))
"RTN","SCMCHLX",22,0)
 S:$G(SET)="" SET=-1
"RTN","SCMCHLX",23,0)
 S OLDEVPTR=+$G(OLDEVPTR)
"RTN","SCMCHLX",24,0)
 ;
"RTN","SCMCHLX",25,0)
 ;Declare variables
"RTN","SCMCHLX",26,0)
 NEW EVPTR,EVENT,ND,XMIT
"RTN","SCMCHLX",27,0)
 ;
"RTN","SCMCHLX",28,0)
 ;Get data
"RTN","SCMCHLX",29,0)
 S ND=$G(^SCPT(404.48,IFN,0)) ;....Get zero node
"RTN","SCMCHLX",30,0)
 S XMIT=+$P(ND,"^",3) ;............Transmission Required field
"RTN","SCMCHLX",31,0)
 S EVPTR=$P(ND,"^",7) ;............Event Pointer field
"RTN","SCMCHLX",32,0)
 I 'SET,OLDEVPTR S EVPTR=OLDEVPTR ;Use old Event Pointer if killing
"RTN","SCMCHLX",33,0)
 ;                                 due to value changing.
"RTN","SCMCHLX",34,0)
 Q:'EVPTR  ;.......................Quit if no Event Pointer
"RTN","SCMCHLX",35,0)
 ;
"RTN","SCMCHLX",36,0)
 ;Set/Kill logic based on value of TRANSMISSION REQUIRED
"RTN","SCMCHLX",37,0)
 I SET=-1 S SET=$S(XMIT=1:1,1:0)
"RTN","SCMCHLX",38,0)
 ;
"RTN","SCMCHLX",39,0)
 ;Set/Kill xref
"RTN","SCMCHLX",40,0)
 I SET S ^SCPT(404.48,"AACXMIT",EVPTR,IFN)="" ;..Set xref
"RTN","SCMCHLX",41,0)
 E  KILL ^SCPT(404.48,"AACXMIT",EVPTR,IFN) ;.....Kill xref
"RTN","SCMCHLX",42,0)
 Q
"RTN","SCMCHLX",43,0)
 ;
"RTN","SCMCHLX",44,0)
TXREF(IFN) ;Logic for AEVENT* xrefs on TEAM file. Create entry in
"RTN","SCMCHLX",45,0)
 ;  PCMM HL7 EVENT file.
"RTN","SCMCHLX",46,0)
 ;
"RTN","SCMCHLX",47,0)
 ;***THIS CALL NOT USED***
"RTN","SCMCHLX",48,0)
 ;bp/djb 6/15/99
"RTN","SCMCHLX",49,0)
 ;No longer sending Primary Care Team data to Austin.
"RTN","SCMCHLX",50,0)
 ;
"RTN","SCMCHLX",51,0)
 D TXREF^SCMCHLX1($G(IFN))
"RTN","SCMCHLX",52,0)
 Q
"RTN","SCMCHLX",53,0)
 ;
"RTN","SCMCHLX",54,0)
PTXREF(IFN,OLDTYPE) ;Logic for AEVENT* xrefs on PATIENT TEAM ASSIGN file.
"RTN","SCMCHLX",55,0)
 ;           Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX",56,0)
 ;
"RTN","SCMCHLX",57,0)
 ;***THIS CALL NOT USED***
"RTN","SCMCHLX",58,0)
 ;bp/djb 6/15/99
"RTN","SCMCHLX",59,0)
 ;No longer sending Primary Care Team data to Austin.
"RTN","SCMCHLX",60,0)
 ;
"RTN","SCMCHLX",61,0)
 D PTXREF^SCMCHLX1($G(IFN),$G(OLDTYPE))
"RTN","SCMCHLX",62,0)
 Q
"RTN","SCMCHLX",63,0)
 ;
"RTN","SCMCHLX",64,0)
PTPXREF(IFN,OLDROLE) ;Logic for AEVENT* xrefs on PATIENT TEAM POSITION
"RTN","SCMCHLX",65,0)
 ;            ASSIGN file. Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX",66,0)
 D PTPXREF^SCMCHLX1($G(IFN),$G(OLDROLE))
"RTN","SCMCHLX",67,0)
 Q
"RTN","SCMCHLX",68,0)
 ;
"RTN","SCMCHLX",69,0)
POSHXREF(IFN) ;Logic for AEVENT* xrefs on POSITION ASSIGNMENT HISTORY file.
"RTN","SCMCHLX",70,0)
 ;     Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX",71,0)
 D POSHXREF^SCMCHLX1($G(IFN))
"RTN","SCMCHLX",72,0)
 Q
"RTN","SCMCHLX",73,0)
 ;
"RTN","SCMCHLX",74,0)
PREHXREF(IFN) ;Logic for AEVENT* xrefs on PRECEPTOR ASSIGNMENT HISTORY file.
"RTN","SCMCHLX",75,0)
 ;     Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX",76,0)
 D PREHXREF^SCMCHLX1($G(IFN))
"RTN","SCMCHLX",77,0)
 Q
"RTN","SCMCHLX",78,0)
POSBXREF(IFN,FILE) ;Logic for Bookable Hour Cross reference
"RTN","SCMCHLX",79,0)
 ;Create entry in PCMM HL7 EVENT file
"RTN","SCMCHLX",80,0)
 D POSBXREF^SCMCHLX1(+$G(IFN),$G(FILE))
"RTN","SCMCHLX",81,0)
 Q
"RTN","SCMCHLX1")
0^3^B15728017
"RTN","SCMCHLX1",1,0)
SCMCHLX1 ;BP/DJB - PCMM HL7 EVENT File Xref Code ; 13 Dec 2002  1:25 PM
"RTN","SCMCHLX1",2,0)
 ;;5.3;Scheduling;**177,264,272**;May 01, 1999
"RTN","SCMCHLX1",3,0)
 ;
"RTN","SCMCHLX1",4,0)
TXREF(IFN) ;Logic for AEVENT* xrefs on TEAM file (404.51). Create entry in
"RTN","SCMCHLX1",5,0)
 ;  PCMM HL7 EVENT file.
"RTN","SCMCHLX1",6,0)
 ;
"RTN","SCMCHLX1",7,0)
 ; Input: IFN - Pointer to entry in file
"RTN","SCMCHLX1",8,0)
 ;Output: None
"RTN","SCMCHLX1",9,0)
 ;
"RTN","SCMCHLX1",10,0)
 ;Check input
"RTN","SCMCHLX1",11,0)
 Q:'$G(IFN)
"RTN","SCMCHLX1",12,0)
 ;
"RTN","SCMCHLX1",13,0)
 ;Declare variables
"RTN","SCMCHLX1",14,0)
 NEW DFN,DFNPTR,ND,VARPTR
"RTN","SCMCHLX1",15,0)
 ;
"RTN","SCMCHLX1",16,0)
 ;Store event variable pointer
"RTN","SCMCHLX1",17,0)
 S VARPTR=IFN_";SCTM(404.51,"
"RTN","SCMCHLX1",18,0)
 ;
"RTN","SCMCHLX1",19,0)
 ;Quit if an event entry already exists for this record
"RTN","SCMCHLX1",20,0)
 Q:$D(^SCPT(404.48,"AACXMIT",VARPTR))
"RTN","SCMCHLX1",21,0)
 ;
"RTN","SCMCHLX1",22,0)
 ;Create an entry in PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHLX1",23,0)
 D ADD^SCMCHLE("NOW",VARPTR)
"RTN","SCMCHLX1",24,0)
 Q
"RTN","SCMCHLX1",25,0)
 ;
"RTN","SCMCHLX1",26,0)
PTXREF(IFN,OLDTYPE) ;Logic for AEVENT* xrefs on PATIENT TEAM ASSIGN file
"RTN","SCMCHLX1",27,0)
 ;           (404.42). Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX1",28,0)
 ;
"RTN","SCMCHLX1",29,0)
 ; Input: IFN - Pointer to entry in file
"RTN","SCMCHLX1",30,0)
 ;    OLDTYPE - If OLDTYPE=1 then send a deletion since it's no
"RTN","SCMCHLX1",31,0)
 ;              longer a primary care team.
"RTN","SCMCHLX1",32,0)
 ;Output: None
"RTN","SCMCHLX1",33,0)
 ;
"RTN","SCMCHLX1",34,0)
 ;Check input
"RTN","SCMCHLX1",35,0)
 Q:'$G(IFN)
"RTN","SCMCHLX1",36,0)
 ;
"RTN","SCMCHLX1",37,0)
 ;Declare variables
"RTN","SCMCHLX1",38,0)
 NEW DFN,ND,VARPTR
"RTN","SCMCHLX1",39,0)
 ;
"RTN","SCMCHLX1",40,0)
 ;Get data
"RTN","SCMCHLX1",41,0)
 S ND=$G(^SCPT(404.42,IFN,0)) ;.........Zero node of 404.42
"RTN","SCMCHLX1",42,0)
 Q:ND']""
"RTN","SCMCHLX1",43,0)
 I $P(ND,U,8)'=1,$G(OLDTYPE)'=1 Q  ;....Not Primary Care related
"RTN","SCMCHLX1",44,0)
 S DFN=$P(ND,U,1) ;.....................Get pointer to 404.42
"RTN","SCMCHLX1",45,0)
 Q:'DFN
"RTN","SCMCHLX1",46,0)
 ;
"RTN","SCMCHLX1",47,0)
 ;Store event variable pointer.
"RTN","SCMCHLX1",48,0)
 S VARPTR=IFN_";SCPT(404.42,"
"RTN","SCMCHLX1",49,0)
 ;
"RTN","SCMCHLX1",50,0)
 ;Quit if an event entry for this record is already set to transmit.
"RTN","SCMCHLX1",51,0)
 Q:$D(^SCPT(404.48,"AACXMIT",VARPTR))
"RTN","SCMCHLX1",52,0)
 ;
"RTN","SCMCHLX1",53,0)
 ;If event entry exists, turn on transmission flag.
"RTN","SCMCHLX1",54,0)
 ;I $D(^SCPT(404.48,"AC",VARPTR)) D TRANSMIT^SCMCHLE(VARPTR,1) Q
"RTN","SCMCHLX1",55,0)
 ;
"RTN","SCMCHLX1",56,0)
 ;Create an entry in PCMM HL7 EVENT file (#404.48).
"RTN","SCMCHLX1",57,0)
 D ADD^SCMCHLE("NOW",VARPTR,DFN)
"RTN","SCMCHLX1",58,0)
 Q
"RTN","SCMCHLX1",59,0)
 ;
"RTN","SCMCHLX1",60,0)
PTPXREF(IFN,OLDROLE) ;Logic for AEVENT* xrefs on PATIENT TEAM POSITION ASSIGN
"RTN","SCMCHLX1",61,0)
 ;            file (404.43). Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX1",62,0)
 ;
"RTN","SCMCHLX1",63,0)
 ; Input: IFN - Pointer to entry in file
"RTN","SCMCHLX1",64,0)
 ;    OLDROLE - If OLDROLE=1 then send a deletion since it's no
"RTN","SCMCHLX1",65,0)
 ;              longer a primary care position.
"RTN","SCMCHLX1",66,0)
 ;Output: None
"RTN","SCMCHLX1",67,0)
 ;
"RTN","SCMCHLX1",68,0)
 ;Check input
"RTN","SCMCHLX1",69,0)
 Q:'$G(IFN)
"RTN","SCMCHLX1",70,0)
 ;
"RTN","SCMCHLX1",71,0)
 ;Declare variables
"RTN","SCMCHLX1",72,0)
 NEW DFN,DFNPTR,ND,TP,VARPTR
"RTN","SCMCHLX1",73,0)
 ;
"RTN","SCMCHLX1",74,0)
 ;Get data
"RTN","SCMCHLX1",75,0)
 S ND=$G(^SCPT(404.43,IFN,0)) ;............Zero node of 404.43
"RTN","SCMCHLX1",76,0)
 Q:ND']""
"RTN","SCMCHLX1",77,0)
 I $P(ND,U,5)'=1,$G(OLDROLE)'=1 Q  ;.......Not Primary Care related
"RTN","SCMCHLX1",78,0)
 S DFNPTR=$P(ND,U,1) ;.....................Get pointer to 404.42
"RTN","SCMCHLX1",79,0)
 Q:'DFNPTR
"RTN","SCMCHLX1",80,0)
 S DFN=$P($G(^SCPT(404.42,DFNPTR,0)),U,1) ;Pointer to PATIENT file
"RTN","SCMCHLX1",81,0)
 Q:'DFN
"RTN","SCMCHLX1",82,0)
 S TP=$P(ND,U,2) ;.........................Team Position
"RTN","SCMCHLX1",83,0)
 ;
"RTN","SCMCHLX1",84,0)
 ;Store event variable pointer
"RTN","SCMCHLX1",85,0)
 S VARPTR=IFN_";SCPT(404.43,"
"RTN","SCMCHLX1",86,0)
 ;
"RTN","SCMCHLX1",87,0)
 ;Quit if an event entry already exists for this record
"RTN","SCMCHLX1",88,0)
 Q:$D(^SCPT(404.48,"AACXMIT",VARPTR))
"RTN","SCMCHLX1",89,0)
 ;
"RTN","SCMCHLX1",90,0)
 ;Create an entry in PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHLX1",91,0)
 D ADD^SCMCHLE("NOW",VARPTR,DFN,TP)
"RTN","SCMCHLX1",92,0)
 Q
"RTN","SCMCHLX1",93,0)
 ;
"RTN","SCMCHLX1",94,0)
POSHXREF(IFN) ;Logic for AEVENT* xrefs on POSITION ASSIGNMENT HISTORY file
"RTN","SCMCHLX1",95,0)
 ;     (404.52). Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX1",96,0)
 ;
"RTN","SCMCHLX1",97,0)
 ; Input: IFN - Pointer to entry in file
"RTN","SCMCHLX1",98,0)
 ;Output: None
"RTN","SCMCHLX1",99,0)
 ;
"RTN","SCMCHLX1",100,0)
 ;Check input
"RTN","SCMCHLX1",101,0)
 Q:'$G(IFN)
"RTN","SCMCHLX1",102,0)
 ;
"RTN","SCMCHLX1",103,0)
 ;Declare variables
"RTN","SCMCHLX1",104,0)
 NEW ND,TP,VARPTR
"RTN","SCMCHLX1",105,0)
 ;
"RTN","SCMCHLX1",106,0)
 ;Get data
"RTN","SCMCHLX1",107,0)
 S ND=$G(^SCTM(404.52,IFN,0)) ;..Zero node of 404.52
"RTN","SCMCHLX1",108,0)
 S TP=$P(ND,U,1) ;...............Team Position
"RTN","SCMCHLX1",109,0)
 ;
"RTN","SCMCHLX1",110,0)
 ;Store event variable pointer
"RTN","SCMCHLX1",111,0)
 S VARPTR=IFN_";SCTM(404.52,"
"RTN","SCMCHLX1",112,0)
 ;
"RTN","SCMCHLX1",113,0)
 ;Quit if an event entry already exists for this record
"RTN","SCMCHLX1",114,0)
 Q:$D(^SCPT(404.48,"AACXMIT",VARPTR))
"RTN","SCMCHLX1",115,0)
 ;
"RTN","SCMCHLX1",116,0)
 ;Create an entry in PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHLX1",117,0)
 D ADD^SCMCHLE("NOW",VARPTR,,TP)
"RTN","SCMCHLX1",118,0)
 Q
"RTN","SCMCHLX1",119,0)
 ;
"RTN","SCMCHLX1",120,0)
PREHXREF(IFN) ;Logic for AEVENT* xrefs on PRECEPTOR ASSIGNMENT HISTORY file
"RTN","SCMCHLX1",121,0)
 ;     (404.53). Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX1",122,0)
 ;
"RTN","SCMCHLX1",123,0)
 ; Input: IFN - Pointer to entry in file
"RTN","SCMCHLX1",124,0)
 ;Output: None
"RTN","SCMCHLX1",125,0)
 ;
"RTN","SCMCHLX1",126,0)
 ;Check input
"RTN","SCMCHLX1",127,0)
 Q:'$G(IFN)
"RTN","SCMCHLX1",128,0)
 ;
"RTN","SCMCHLX1",129,0)
 ;Declare variables
"RTN","SCMCHLX1",130,0)
 NEW ND,TP,VARPTR
"RTN","SCMCHLX1",131,0)
 ;
"RTN","SCMCHLX1",132,0)
 ;Store event variable pointer
"RTN","SCMCHLX1",133,0)
 S VARPTR=IFN_";SCTM(404.53,"
"RTN","SCMCHLX1",134,0)
 ;
"RTN","SCMCHLX1",135,0)
 ;Get data
"RTN","SCMCHLX1",136,0)
 S ND=$G(^SCTM(404.53,IFN,0)) ;....Zero node of 404.53
"RTN","SCMCHLX1",137,0)
 S TP=$P(ND,U,1)_"-"_$P(ND,U,6) ;..Team Position: Preceptee-Preceptor
"RTN","SCMCHLX1",138,0)
 ;
"RTN","SCMCHLX1",139,0)
 ;Quit if an event entry already exists for this record
"RTN","SCMCHLX1",140,0)
 Q:$D(^SCPT(404.48,"AACXMIT",VARPTR))
"RTN","SCMCHLX1",141,0)
 ;
"RTN","SCMCHLX1",142,0)
 ;Create an entry in PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHLX1",143,0)
 D ADD^SCMCHLE("NOW",VARPTR,,TP)
"RTN","SCMCHLX1",144,0)
 Q
"RTN","SCMCHLX1",145,0)
POSBXREF(IFN,FILE) ;
"RTN","SCMCHLX1",146,0)
 ;     (404.52). Create entry in PCMM HL7 EVENT file.
"RTN","SCMCHLX1",147,0)
 ;
"RTN","SCMCHLX1",148,0)
 ; Input: IFN - Pointer to entry in file
"RTN","SCMCHLX1",149,0)
 ;Output: None
"RTN","SCMCHLX1",150,0)
 S:'$G(FILE) FILE=404.52
"RTN","SCMCHLX1",151,0)
 I FILE=404.52 Q:'$P($G(^SCTM(404.57,+$G(^SCTM(404.52,+$G(IFN),0)),0)),U,4)  ;quit if not pc
"RTN","SCMCHLX1",152,0)
 ;
"RTN","SCMCHLX1",153,0)
 ;  ;Check input
"RTN","SCMCHLX1",154,0)
 Q:'$G(IFN)
"RTN","SCMCHLX1",155,0)
 ;
"RTN","SCMCHLX1",156,0)
 ;Declare variables
"RTN","SCMCHLX1",157,0)
 NEW ND,TP,VARPTR
"RTN","SCMCHLX1",158,0)
 ;
"RTN","SCMCHLX1",159,0)
 ;Get data
"RTN","SCMCHLX1",160,0)
 S ND=$G(^SCTM(404.52,IFN,0)) ;..Zero node of 404.52
"RTN","SCMCHLX1",161,0)
 S TP=$P(ND,U,1) I FILE=404.57 S TP=IFN ;...............Team Position
"RTN","SCMCHLX1",162,0)
 ;
"RTN","SCMCHLX1",163,0)
 ;Store event variable pointer
"RTN","SCMCHLX1",164,0)
 S VARPTR=IFN_";SCTM("_FILE_","
"RTN","SCMCHLX1",165,0)
 ;
"RTN","SCMCHLX1",166,0)
 ;Quit if an event entry already exists for this record
"RTN","SCMCHLX1",167,0)
 N QUIT,I S QUIT=0
"RTN","SCMCHLX1",168,0)
 F I=0:0 S I=$O(^SCPT(404.48,"AACXMIT",VARPTR,I)) Q:'I  I $P($G(^SCPT(404.48,I,0)),U,8) S QUIT=1 Q
"RTN","SCMCHLX1",169,0)
 Q:QUIT
"RTN","SCMCHLX1",170,0)
 ;
"RTN","SCMCHLX1",171,0)
 ;Create an entry in PCMM HL7 EVENT file (#404.48)
"RTN","SCMCHLX1",172,0)
 D ADD^SCMCHLE("NOW",VARPTR,,TP,1)
"RTN","SCMCHLX1",173,0)
 Q
"RTN","SCMCHLX1",174,0)
 ;
"RTN","SCMCTSK")
0^1^B26701850
"RTN","SCMCTSK",1,0)
SCMCTSK ;ALB/JDS - PCMM ; 11 Dec 2002  3:10 PM
"RTN","SCMCTSK",2,0)
 ;;5.3;Scheduling;**264,278,272**;AUG 13, 1993
"RTN","SCMCTSK",3,0)
 Q
"RTN","SCMCTSK",4,0)
INACTIVE ;run every night to determine if patient can be inactivated from
"RTN","SCMCTSK",5,0)
 ;team
"RTN","SCMCTSK",6,0)
 ;Inactivation happens for patients without activity for 24 months
"RTN","SCMCTSK",7,0)
 N I
"RTN","SCMCTSK",8,0)
 D DT^DICRW S X="T-12M" D ^%DT S STDT=Y
"RTN","SCMCTSK",9,0)
 S X="T-24M" D ^%DT S TYDT=+Y
"RTN","SCMCTSK",10,0)
 S A="^SCPT(404.43,""ADFN""",L=""""""
"RTN","SCMCTSK",11,0)
 S Q=A_")"
"RTN","SCMCTSK",12,0)
 F  S Q=$Q(@Q) Q:Q'[A  D
"RTN","SCMCTSK",13,0)
 .S ENTRY=+$P(Q,",",6)
"RTN","SCMCTSK",14,0)
 .S TEAM=$P(Q,",",4)
"RTN","SCMCTSK",15,0)
 .I $P($G(^SCTM(404.51,+TEAM,0)),U,16) Q  ;no automatic for this team
"RTN","SCMCTSK",16,0)
 .;I $G(^DPT(DFN,.35)) D DIS Q  ;Patient is deceased
"RTN","SCMCTSK",17,0)
 .I $P(Q,",",5)>STDT Q  ;Later
"RTN","SCMCTSK",18,0)
 .S ZERO=$G(^SCPT(404.43,+ENTRY,0))
"RTN","SCMCTSK",19,0)
 .I $P(ZERO,U,4) Q  ;Already unassigned
"RTN","SCMCTSK",20,0)
 .;I $P(ZERO,U,16) Q  ;No Automatic unassign
"RTN","SCMCTSK",21,0)
 .;Check if any activity
"RTN","SCMCTSK",22,0)
 .S DFN=$P(Q,",",3),DFN=+$G(^SCPT(404.42,+DFN,0))
"RTN","SCMCTSK",23,0)
 .S SEEN=0
"RTN","SCMCTSK",24,0)
 .S TEAM=$P(Q,",",4),TEAMNM=$P($G(^SCTM(404.51,+TEAM,0)),U)
"RTN","SCMCTSK",25,0)
 .F I=TYDT:0 S I=$O(^SCE("ADFN",DFN,I)) Q:'I  D  Q:SEEN
"RTN","SCMCTSK",26,0)
 ..S SEEN=1 Q  ;F J=0:0 S J=$O(^SCE("ADFN",DFN,I,J)) Q:'J  D  Q:SEEN
"RTN","SCMCTSK",27,0)
 ..;S CLINIC=$P($G(^SCE(J,0)),U,4)
"RTN","SCMCTSK",28,0)
 ..;I $D(^SDD(409.44,"AO",J,$G(PRO)) S SEEN=1 ;GET THE PROVIDERJ
"RTN","SCMCTSK",29,0)
 .Q:SEEN
"RTN","SCMCTSK",30,0)
 .;discharge them
"RTN","SCMCTSK",31,0)
 .D DIS
"RTN","SCMCTSK",32,0)
 Q
"RTN","SCMCTSK",33,0)
DIS ;discharge
"RTN","SCMCTSK",34,0)
 N ZERO S ZERO=$G(^SCPT(404.43,+ENTRY,0))
"RTN","SCMCTSK",35,0)
 I $P(ZERO,U,4) Q  ;Already discharged
"RTN","SCMCTSK",36,0)
 ;I $P(ZERO,U,16) Q
"RTN","SCMCTSK",37,0)
 S DA=ENTRY,DIE="^SCPT(404.43,",DR=".04////"_DT_";.12////IU"
"RTN","SCMCTSK",38,0)
 D ^DIE
"RTN","SCMCTSK",39,0)
 ;
"RTN","SCMCTSK",40,0)
 Q
"RTN","SCMCTSK",41,0)
DEATH ;Called from date of death event
"RTN","SCMCTSK",42,0)
 ;
"RTN","SCMCTSK",43,0)
 I $G(DGFILE)'=2 Q
"RTN","SCMCTSK",44,0)
 I $G(DGFIELD)'=.351 Q
"RTN","SCMCTSK",45,0)
 S DFN=+$G(DGDA)
"RTN","SCMCTSK",46,0)
 N DEATH,I,DR
"RTN","SCMCTSK",47,0)
 D DEM^VADPT S DEATH=$G(VADM(6))
"RTN","SCMCTSK",48,0)
 ;loop through assignments
"RTN","SCMCTSK",49,0)
 F SCJ=0:0 S SCJ=$O(^SCPT(404.42,"B",DFN,SCJ)) Q:'SCJ  D
"RTN","SCMCTSK",50,0)
 .S ZERO=$G(^SCPT(404.42,SCJ,0)) Q:'$L(ZERO)
"RTN","SCMCTSK",51,0)
 .I DEATH,'$P(ZERO,U,9) D
"RTN","SCMCTSK",52,0)
 ..S DA=SCJ,DIE="^SCPT(404.42,",DR=".09////"_DT_";.15////DU" D ^DIE
"RTN","SCMCTSK",53,0)
 .I ('DEATH)&($P(ZERO,U,15)="DU")&($P(ZERO,U,9)) D
"RTN","SCMCTSK",54,0)
 ..S DA=SCJ,DIE="^SCPT(404.42,",DR=".09///@;.15////DD" D ^DIE
"RTN","SCMCTSK",55,0)
 .F SCI=0:0 S SCI=$O(^SCPT(404.43,"B",SCJ,SCI)) Q:'SCI  D
"RTN","SCMCTSK",56,0)
 ..S ZERO=$G(^SCPT(404.43,SCI,0)),SCTP=+$P(ZERO,U,2) Q:'$L(ZERO)
"RTN","SCMCTSK",57,0)
 ..I DEATH,$P(ZERO,U,4) Q
"RTN","SCMCTSK",58,0)
 ..I 'DEATH I (('$P(ZERO,U,4))!($P(ZERO,U,12)'="DU")) Q
"RTN","SCMCTSK",59,0)
 ..I DEATH D  Q
"RTN","SCMCTSK",60,0)
 ...S DA=SCI,DIE="^SCPT(404.43,",DR=".04////"_DT_";.12////DU" D ^DIE
"RTN","SCMCTSK",61,0)
 ..I '+$$ACTHIST^SCAPMCU2(404.52,SCTP,,.SCERR) Q
"RTN","SCMCTSK",62,0)
 ..S DA=SCI,DIE="^SCPT(404.43,",DR=".04///@;.12////DD" D ^DIE
"RTN","SCMCTSK",63,0)
 Q:'DEATH
"RTN","SCMCTSK",64,0)
 ;DISPOSITION WAIT LIST
"RTN","SCMCTSK",65,0)
 F I=0:0 S I=$O(^SDWL(409.3,"B",+$G(DFN),I)) Q:'I  S A=$G(^SDWL(409.3,I,0)) D
"RTN","SCMCTSK",66,0)
 .I $G(^SDWL(409.3,I,"DIS")) Q
"RTN","SCMCTSK",67,0)
 .N FDA S FDA(409.3,I_",",21)="D"
"RTN","SCMCTSK",68,0)
 .S FDA(409.3,I_",",19)=DT,FDA(409.3,I_",",23)="C"
"RTN","SCMCTSK",69,0)
 .S FDA(409.3,I_",",20)=DUZ
"RTN","SCMCTSK",70,0)
 .D UPDATE^DIE("","FDA")
"RTN","SCMCTSK",71,0)
 Q
"RTN","SCMCTSK",72,0)
POST ;
"RTN","SCMCTSK",73,0)
 D MES^XPDUTL("Deleting Traditional ASTAT CROSS REFERENCE from FILE 404.43")
"RTN","SCMCTSK",74,0)
 D DELIX^DDMOD(404.43,.12,1)
"RTN","SCMCTSK",75,0)
 N ENTRY
"RTN","SCMCTSK",76,0)
 K DGLEFDA
"RTN","SCMCTSK",77,0)
 I '$D(^SCTM(404.46,"B","1.2.3.0")) D
"RTN","SCMCTSK",78,0)
 .K DO S DIC(0)="LM",DIC("DR")=".02////1;.03////"_DT,DIC="^SCTM(404.46,",X="1.2.3.0" D FILE^DICN
"RTN","SCMCTSK",79,0)
 I '$D(^SCTM(404.45,"B","SD*5.3*264")) D
"RTN","SCMCTSK",80,0)
 .S ENTRY=$O(^SCTM(404.46,"B","1.2.3.0",0))
"RTN","SCMCTSK",81,0)
 .S DIC("DR")=".02////"_(+ENTRY)_";.03////"_DT_";.04////1",DIC(0)="LM"
"RTN","SCMCTSK",82,0)
 .K DO S X="SD*5.3*264",DIC="^SCTM(404.45," D FILE^DICN
"RTN","SCMCTSK",83,0)
 D MES^XPDUTL("Removing Patients with Date of Death from Team/Position Assignments")
"RTN","SCMCTSK",84,0)
 S YEAR=0
"RTN","SCMCTSK",85,0)
 F DATE=0:0 S DATE=$O(^DPT("AEXP1",DATE)) Q:'DATE  F DGDA=0:0 S DGDA=$O(^DPT("AEXP1",DATE,DGDA)) Q:'DGDA  D
"RTN","SCMCTSK",86,0)
 .S DFN=+DGDA D DEM^VADPT I $G(VADM(6)) S DGFILE=2,DGFIELD=.351 D DEATH
"RTN","SCMCTSK",87,0)
 .I $E(YEAR,1,3)'=$E(DATE,1,3) S YEAR=$E(DATE,1,3) I "05"[$E(YEAR,3) D MES^XPDUTL("Starting with Dates of Death in "_(1700+YEAR))
"RTN","SCMCTSK",88,0)
 Q
"RTN","SCMCTSK",89,0)
POST278 ;postinit for 278
"RTN","SCMCTSK",90,0)
 D MES^XPDUTL("Setting up GUI to VistA mapping")
"RTN","SCMCTSK",91,0)
 I '$D(^SCTM(404.46,"B","1.2.3.1")) D
"RTN","SCMCTSK",92,0)
 .K DO S DIC(0)="LM",DIC("DR")=".02////1;.03////"_DT,DIC="^SCTM(404.46,",X="1.2.3.1" D FILE^DICN
"RTN","SCMCTSK",93,0)
 I '$D(^SCTM(404.45,"B","SD*5.3*278")) D
"RTN","SCMCTSK",94,0)
 .S ENTRY=$O(^SCTM(404.46,"B","1.2.3.1",0))
"RTN","SCMCTSK",95,0)
 .S DIC("DR")=".02////"_(+ENTRY)_";.03////"_DT_";.04////1",DIC(0)="LM"
"RTN","SCMCTSK",96,0)
 .K DO S X="SD*5.3*278",DIC="^SCTM(404.45," D FILE^DICN
"RTN","SCMCTSK",97,0)
 Q
"RTN","SCMCTSK",98,0)
FTEE(DATA,SCTEAM) ;return list of posistions for the team
"RTN","SCMCTSK",99,0)
 ;IEN^POSITION^PROVIDER^FTEE
"RTN","SCMCTSK",100,0)
 N CNT,I,J,K,A S CNT=1 S SCTEAM=+$G(SCTEAM),DATA(1)="<DATA>"
"RTN","SCMCTSK",101,0)
 S A=""
"RTN","SCMCTSK",102,0)
 F  S A=$O(^SCTM(404.57,"ATMPOS",SCTEAM,A)) Q:A=""  D
"RTN","SCMCTSK",103,0)
 .F I=0:0 S I=$O(^SCTM(404.57,"ATMPOS",SCTEAM,A,I)) Q:'I  D
"RTN","SCMCTSK",104,0)
 ..I '$$DATES^SCAPMCU1(404.59,I) Q   ;Not an active position
"RTN","SCMCTSK",105,0)
 ..I '$P($G(^SCTM(404.57,I,0)),U,4) Q  ;Not PC
"RTN","SCMCTSK",106,0)
 ..S J=-(DT+1) S J=$O(^SCTM(404.52,"AIDT",I,1,J)) Q:J=""
"RTN","SCMCTSK",107,0)
 ..I $O(^SCTM(404.52,"AIDT",I,0,-(DT+1)))<J Q
"RTN","SCMCTSK",108,0)
 ..S K=0 S K=$O(^SCTM(404.52,"AIDT",I,1,J,K)) Q:'K
"RTN","SCMCTSK",109,0)
 ..S ZERO=$G(^SCTM(404.52,+K,0)) Q:'$P(ZERO,U,4)
"RTN","SCMCTSK",110,0)
 ..S CNT=CNT+1
"RTN","SCMCTSK",111,0)
 ..S DATA(CNT)=K_U_A_U_$P($G(^VA(200,+$P(ZERO,U,3),0)),U)_U_$P(ZERO,U,9)
"RTN","SCMCTSK",112,0)
 Q
"RTN","SCMCTSK",113,0)
FILE(RES,DATA) ;File data on FTEE
"RTN","SCMCTSK",114,0)
 N I
"RTN","SCMCTSK",115,0)
 F I=1:1 Q:'$D(DATA(I))   D
"RTN","SCMCTSK",116,0)
 .S ZERO=$G(^SCTM(404.52,+DATA(I),0))
"RTN","SCMCTSK",117,0)
 .I $P(ZERO,U,9)=$P(DATA(I),U,5) Q
"RTN","SCMCTSK",118,0)
 .S FLDA(404.52,(+DATA(I))_",",.09)=+$TR($P(DATA(I),U,5)," ")
"RTN","SCMCTSK",119,0)
 I $O(FLDA(0)) D FILE^DIE("E","FLDA","ERR")
"RTN","SCMCTSK",120,0)
 Q
"RTN","SCMCTSK",121,0)
SCREEN ;Screen for active assignments
"RTN","SCMCTSK",122,0)
 N A S A=$G(^SCTM(404.52,D0,0))
"RTN","SCMCTSK",123,0)
 N J S J=-(DT+1),J=$O(^SCTM(404.52,"AIDT",+A,1,J)) I J="" S X=0 Q
"RTN","SCMCTSK",124,0)
 I '$P($G(^SCTM(404.57,+A,0)),U,4) Q  ;Not PC
"RTN","SCMCTSK",125,0)
 I '$$DATES^SCAPMCU1(404.59,+A) Q   ;Not an active position
"RTN","SCMCTSK",126,0)
 I $O(^SCTM(404.52,"AIDT",+A,0,-(DT+1)))<J S X=0 Q
"RTN","SCMCTSK",127,0)
 I '$D(^SCTM(404.52,"AIDT",+A,1,J,D0)) S X=0 Q
"RTN","SCMCTSK",128,0)
 S X=1 Q
"VER")
8.0^22.0
"^DD",404.471,404.471,.07,0)
WORKLOAD EVENT POINTER^V^^0;7^Q
"^DD",404.471,404.471,.07,1,0)
^.1
"^DD",404.471,404.471,.07,1,1,0)
404.471^AWRK
"^DD",404.471,404.471,.07,1,1,1)
S ^SCPT(404.471,"AWRK",$E(X,1,30),DA)=""
"^DD",404.471,404.471,.07,1,1,2)
K ^SCPT(404.471,"AWRK",$E(X,1,30),DA)
"^DD",404.471,404.471,.07,1,1,"%D",0)
^^1^1^3030321^
"^DD",404.471,404.471,.07,1,1,"%D",1,0)
Used to see if record was transmitted.
"^DD",404.471,404.471,.07,1,1,"DT")
3030321
"^DD",404.471,404.471,.07,3)
Used only in workload PCMM transmission to AAC
"^DD",404.471,404.471,.07,21,0)
^.001^1^1^3030218^^
"^DD",404.471,404.471,.07,21,1,0)
Used only in Workload PCMM transmissions to identify error information for retransmission
"^DD",404.471,404.471,.07,"DT")
3030321
"^DD",404.471,404.471,.07,"V",0)
^.12P^4^4
"^DD",404.471,404.471,.07,"V",1,0)
404.43^Patient Team Position^2^PTP^n^n
"^DD",404.471,404.471,.07,"V",2,0)
404.52^Position History^3^POH^n^n
"^DD",404.471,404.471,.07,"V",3,0)
404.59^Team Position History^98^TPH^n^n
"^DD",404.471,404.471,.07,"V",4,0)
404.57^Team Position^5^TP^n^n
"^DD",404.471,404.471,.08,0)
PRACTITIONER^P200'^VA(200,^0;8^Q
"^DD",404.471,404.471,.08,3)
To track records that may be deleted
"^DD",404.471,404.471,.08,21,0)
^^1^1^3030323^
"^DD",404.471,404.471,.08,21,1,0)
Only when entry is derived from POSITION ASSIGNMENT HISTORY
"^DD",404.471,404.471,.08,"DT")
3030323
"^DD",404.472,404.472,0)
FIELD^^10^5
"^DD",404.472,404.472,0,"DDA")
N
"^DD",404.472,404.472,0,"DT")
3000217
"^DD",404.472,404.472,0,"IX","B",404.472,.01)

"^DD",404.472,404.472,0,"NM","PCMM HL7 ERROR CODE")

"^DD",404.472,404.472,0,"PT",404.47142,.01)

"^DD",404.472,404.472,0,"VRPK")
SD
"^DD",404.472,404.472,.01,0)
ERROR CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",404.472,404.472,.01,1,0)
^.1
"^DD",404.472,404.472,.01,1,1,0)
404.472^B
"^DD",404.472,404.472,.01,1,1,1)
S ^SCPT(404.472,"B",$E(X,1,30),DA)=""
"^DD",404.472,404.472,.01,1,1,2)
K ^SCPT(404.472,"B",$E(X,1,30),DA)
"^DD",404.472,404.472,.01,3)
Answer must be 1-10 characters in length.
"^DD",404.472,404.472,.01,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.01,21,1,0)
This is the unique ID assigned by Austin for each error code.
"^DD",404.472,404.472,.01,"DT")
2991216
"^DD",404.472,404.472,.02,0)
SEGMENT^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",404.472,404.472,.02,3)
Enter HL7 message segment. Answer must be 1-10 characters in length.
"^DD",404.472,404.472,.02,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.02,21,1,0)
The three letter designation of the applicable HL7 segment.
"^DD",404.472,404.472,.02,"DT")
2991216
"^DD",404.472,404.472,.03,0)
FIELD^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",404.472,404.472,.03,3)
Enter the segment field name. Answer must be 1-30 characters in length.
"^DD",404.472,404.472,.03,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,.03,21,1,0)
The segment field where the error occurred.
"^DD",404.472,404.472,.03,"DT")
2991216
"^DD",404.472,404.472,.04,0)
SHORT DESCRIPTION^F^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",404.472,404.472,.04,3)
Answer must be 1-60 characters in length.
"^DD",404.472,404.472,.04,21,0)
^^2^2^3000307^
"^DD",404.472,404.472,.04,21,1,0)
The short desciption is used in the Listman display where users
"^DD",404.472,404.472,.04,21,2,0)
select errors for retransmission.
"^DD",404.472,404.472,.04,"DT")
3000217
"^DD",404.472,404.472,10,0)
DESCRIPTION^404.482^^DESC;0
"^DD",404.472,404.472,10,21,0)
^^1^1^3000307^
"^DD",404.472,404.472,10,21,1,0)
The is the full description of this error.
"^DD",404.472,404.482,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.472,404.482,0,"DT")
3000209
"^DD",404.472,404.482,0,"NM","DESCRIPTION")

"^DD",404.472,404.482,0,"UP")
404.472
"^DD",404.472,404.482,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.472,404.482,.01,3)

"^DD",404.472,404.482,.01,"DT")
3000209
"^DD",404.48,404.48,0)
FIELD^^.08^7
"^DD",404.48,404.48,0,"DDA")
N
"^DD",404.48,404.48,0,"DT")
3021210
"^DD",404.48,404.48,0,"ID","A1")
S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",404.48,404.48,0,"ID","A2")
S DIY=$S($D(@(DIC_(+Y)_",""0"")")):$P(^("0"),U,7),1:"") W "   ",DIY
"^DD",404.48,404.48,0,"IX","AACXMIT1",404.48,.03)

"^DD",404.48,404.48,0,"IX","AACXMIT2",404.48,.07)

"^DD",404.48,404.48,0,"IX","B",404.48,.01)

"^DD",404.48,404.48,0,"IX","C",404.48,.02)

"^DD",404.48,404.48,0,"NM","PCMM HL7 EVENT")

"^DD",404.48,404.48,0,"VRPK")
SD
"^DD",404.48,404.48,.01,0)
DATE/TIME OF EVENT^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",404.48,404.48,.01,1,0)
^.1^^-1
"^DD",404.48,404.48,.01,1,1,0)
404.48^B
"^DD",404.48,404.48,.01,1,1,1)
S ^SCPT(404.48,"B",$E(X,1,30),DA)=""
"^DD",404.48,404.48,.01,1,1,2)
K ^SCPT(404.48,"B",$E(X,1,30),DA)
"^DD",404.48,404.48,.01,3)
Enter date/time of PCMM primary care event.
"^DD",404.48,404.48,.01,"DT")
2990331
"^DD",404.48,404.48,.02,0)
PATIENT^P2'^DPT(^0;2^Q
"^DD",404.48,404.48,.02,1,0)
^.1
"^DD",404.48,404.48,.02,1,1,0)
404.48^C
"^DD",404.48,404.48,.02,1,1,1)
S ^SCPT(404.48,"C",$E(X,1,30),DA)=""
"^DD",404.48,404.48,.02,1,1,2)
K ^SCPT(404.48,"C",$E(X,1,30),DA)
"^DD",404.48,404.48,.02,1,1,"%D",0)
^^1^1^2990507^
"^DD",404.48,404.48,.02,1,1,"%D",1,0)
Allow look-up by patient.
"^DD",404.48,404.48,.02,1,1,"DT")
2990507
"^DD",404.48,404.48,.02,"DT")
2990507
"^DD",404.48,404.48,.03,0)
TRANSMISSION REQUIRED^S^0:NO;1:YES;^0;3^Q
"^DD",404.48,404.48,.03,1,0)
^.1^^-1
"^DD",404.48,404.48,.03,1,2,0)
404.48^AACXMIT1^MUMPS
"^DD",404.48,404.48,.03,1,2,1)
D AACXMIT^SCMCHLX(DA,-1)
"^DD",404.48,404.48,.03,1,2,2)
D AACXMIT^SCMCHLX(DA,0)
"^DD",404.48,404.48,.03,1,2,"%D",0)
^^4^4^2990506^^
"^DD",404.48,404.48,.03,1,2,"%D",1,0)
This xref is used to flag entries for transmission to the NPCD.
"^DD",404.48,404.48,.03,1,2,"%D",2,0)
  
"^DD",404.48,404.48,.03,1,2,"%D",3,0)
     Resulting node:  ^SCPT(404.48,"AACXMIT",EVENTPTR,DA)
"^DD",404.48,404.48,.03,1,2,"%D",4,0)
     Where: EVENTPTR = Value in EVENT POINTER field (#.07)
"^DD",404.48,404.48,.03,1,2,"DT")
2990506
"^DD",404.48,404.48,.03,3)
Enter YES if the PCMM Primary Care event requires transmission.
"^DD",404.48,404.48,.03,"DT")
2990507
"^DD",404.48,404.48,.04,0)
TEAM POSITION^F^^0;4^K:$L(X)>35!($L(X)<1) X
"^DD",404.48,404.48,.04,3)
This field stores the TEAM POSITION pointer. If EVENT POINTER is for file 404.53, this field will store Preceptee TM POS-Preceptor TM POS. 1-35 Characters.
"^DD",404.48,404.48,.04,21,0)
^^23^23^2990701^^
"^DD",404.48,404.48,.04,21,1,0)
The TEAM POSITION value needs to be preserved so deletions can
"^DD",404.48,404.48,.04,21,2,0)
be processed.
"^DD",404.48,404.48,.04,21,3,0)
 
"^DD",404.48,404.48,.04,21,4,0)
File 404.43
"^DD",404.48,404.48,.04,21,5,0)
   Save piece 2 (TP - Team Position IEN).
"^DD",404.48,404.48,.04,21,6,0)
   Use TP to get all providers with $$PRTPC^SCAPMC.
"^DD",404.48,404.48,.04,21,7,0)
   Get IEN from VARPTR and attach it to ID.
"^DD",404.48,404.48,.04,21,8,0)
   Send down a delete.
"^DD",404.48,404.48,.04,21,9,0)
 
"^DD",404.48,404.48,.04,21,10,0)
File 404.52
"^DD",404.48,404.48,.04,21,11,0)
   Save piece 1 (TP - Team Position IEN).
"^DD",404.48,404.48,.04,21,12,0)
   Get IEN from VARPTR.
"^DD",404.48,404.48,.04,21,13,0)
   Find every Primary Care 404.43 entry for this TP.
"^DD",404.48,404.48,.04,21,14,0)
   Create ID with 404.43 IEN-IEN-0-AP/PCP.
"^DD",404.48,404.48,.04,21,15,0)
   Send down a delete.
"^DD",404.48,404.48,.04,21,16,0)
 
"^DD",404.48,404.48,.04,21,17,0)
File 404.53
"^DD",404.48,404.48,.04,21,18,0)
   Save piece 1 (TP1) & piece 6 (TP2) (Team Position IEN).
"^DD",404.48,404.48,.04,21,19,0)
   Loop to get each IEN for TP1 in 404.52.
"^DD",404.48,404.48,.04,21,20,0)
   Loop to get each IEN for TP2 in 404.52.
"^DD",404.48,404.48,.04,21,21,0)
   Find every Primary Care 404.43 entry for TP1.
"^DD",404.48,404.48,.04,21,22,0)
   Create IDs with 404.43 IEN-TP1 IENs-TP2 IENs-PCP.
"^DD",404.48,404.48,.04,21,23,0)
   Send down a delete.
"^DD",404.48,404.48,.04,"DT")
2990701
"^DD",404.48,404.48,.05,0)
USER^P200'^VA(200,^0;5^Q
"^DD",404.48,404.48,.05,"DT")
2990318
"^DD",404.48,404.48,.07,0)
EVENT POINTER^V^^0;7^Q
"^DD",404.48,404.48,.07,1,0)
^.1^^-1
"^DD",404.48,404.48,.07,1,1,0)
404.48^AACXMIT2^MUMPS
"^DD",404.48,404.48,.07,1,1,1)
D AACXMIT^SCMCHLX(DA,-1)
"^DD",404.48,404.48,.07,1,1,2)
D AACXMIT^SCMCHLX(DA,0,X)
"^DD",404.48,404.48,.07,1,1,"%D",0)
^^4^4^2990506^
"^DD",404.48,404.48,.07,1,1,"%D",1,0)
This xref is used to flag entries for transmission to the NPCD.
"^DD",404.48,404.48,.07,1,1,"%D",2,0)
 
"^DD",404.48,404.48,.07,1,1,"%D",3,0)
   Resulting node:  ^SCPT(404.48,"AACXMIT",EVENTPTR,DA)
"^DD",404.48,404.48,.07,1,1,"%D",4,0)
   Where: EVENTPTR = Value in EVENT POINTER field (#.07)
"^DD",404.48,404.48,.07,1,1,"DT")
2990506
"^DD",404.48,404.48,.07,3)
Enter Patient Team, Patient Team Position, Position History, Preceptor History, or Team entry that generated this event.
"^DD",404.48,404.48,.07,21,0)
^^4^4^2990412^
"^DD",404.48,404.48,.07,21,1,0)
This field is used to enable PCMM to delete a future event from
"^DD",404.48,404.48,.07,21,2,0)
this Event file when a future assignment is deleted from either
"^DD",404.48,404.48,.07,21,3,0)
the PATIENT TEAM ASSIGNMENT or PATIENT TEAM POSITION ASSIGNMENT
"^DD",404.48,404.48,.07,21,4,0)
files.
"^DD",404.48,404.48,.07,"DT")
2990811
"^DD",404.48,404.48,.07,"V",0)
^.12P^6^5
"^DD",404.48,404.48,.07,"V",2,0)
404.43^Patient Team Position^2^PTP^n^y
"^DD",404.48,404.48,.07,"V",3,0)
404.52^Position History^3^POH^n^y
"^DD",404.48,404.48,.07,"V",4,0)
404.53^Preceptor History^4^PRH^n^y
"^DD",404.48,404.48,.07,"V",5,0)
404.59^Team Position History^98^TPH^n^n
"^DD",404.48,404.48,.07,"V",6,0)
404.57^Team Position^5^TP^n^n
"^DD",404.48,404.48,.08,0)
WORKLOAD^S^1:WORKLOAD;^0;8^Q
"^DD",404.48,404.48,.08,3)
Indicates if this is for Workload Transmission
"^DD",404.48,404.48,.08,21,0)
^^2^2^3030218^
"^DD",404.48,404.48,.08,21,1,0)
This field is used to designate that the HL7 message is Workload and based on 
"^DD",404.48,404.48,.08,21,2,0)
Primary Care provider and position workload.
"^DD",404.48,404.48,.08,"DT")
3021210
"^DD",404.52,404.52,0)
FIELD^^.09^8
"^DD",404.52,404.52,0,"DDA")
N
"^DD",404.52,404.52,0,"DT")
3020904
"^DD",404.52,404.52,0,"ID",.02)
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",404.52,404.52,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^VA(200,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(200,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",404.52,404.52,0,"ID",.04)
W "   ",@("$P($P($C(59)_$S($D(^DD(404.52,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",404.52,404.52,0,"IX","AEVENT1",404.52,.01)

"^DD",404.52,404.52,0,"IX","AFTEE",404.52,.09)

"^DD",404.52,404.52,0,"IX","AIDT",404.52,.01)

"^DD",404.52,404.52,0,"IX","AIDT1",404.52,.02)

"^DD",404.52,404.52,0,"IX","AIDT2",404.52,.04)

"^DD",404.52,404.52,0,"IX","ASTATUS",404.52,.04)

"^DD",404.52,404.52,0,"IX","AWRK",404.52,.01)

"^DD",404.52,404.52,0,"IX","B",404.52,.01)

"^DD",404.52,404.52,0,"IX","C",404.52,.03)

"^DD",404.52,404.52,0,"NM","POSITION ASSIGNMENT HISTORY")

"^DD",404.52,404.52,0,"PT",404.471,.07)

"^DD",404.52,404.52,0,"PT",404.48,.07)

"^DD",404.52,404.52,0,"VRPK")
SD
"^DD",404.52,404.52,.01,0)
TEAM POSITION^RP404.57'X^SCTM(404.57,^0;1^Q
"^DD",404.52,404.52,.01,1,0)
^.1
"^DD",404.52,404.52,.01,1,1,0)
404.52^B
"^DD",404.52,404.52,.01,1,1,1)
S ^SCTM(404.52,"B",$E(X,1,30),DA)=""
"^DD",404.52,404.52,.01,1,1,2)
K ^SCTM(404.52,"B",$E(X,1,30),DA)
"^DD",404.52,404.52,.01,1,2,0)
404.52^AIDT^MUMPS
"^DD",404.52,404.52,.01,1,2,1)
N SC2,SC3 S SC2=$P($G(^SCTM(404.52,DA,0)),U,4) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.52,"AIDT",X,SC2,-SC3,DA)=""
"^DD",404.52,404.52,.01,1,2,2)
N SC2,SC3 S SC2=$P($G(^SCTM(404.52,DA,0)),U,4) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.52,"AIDT",X,SC2,-SC3,DA)
"^DD",404.52,404.52,.01,1,2,"%D",0)
^^1^1^2950802^
"^DD",404.52,404.52,.01,1,2,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.04), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.52,404.52,.01,1,2,"DT")
2950802
"^DD",404.52,404.52,.01,1,3,0)
404.52^AEVENT1^MUMPS
"^DD",404.52,404.52,.01,1,3,1)
D POSHXREF^SCMCHLX(DA)
"^DD",404.52,404.52,.01,1,3,2)
D POSHXREF^SCMCHLX(DA)
"^DD",404.52,404.52,.01,1,3,"%D",0)
^^1^1^2990507^
"^DD",404.52,404.52,.01,1,3,"%D",1,0)
Trigger an entry into PCMM HL7 EVENT file when this field is edited.
"^DD",404.52,404.52,.01,1,3,"DT")
2990507
"^DD",404.52,404.52,.01,1,4,0)
^^TRIGGER^404.52^.07
"^DD",404.52,404.52,.01,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SCTM(404.52,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(404.52,.01,1,4,1.4)
"^DD",404.52,404.52,.01,1,4,1.4)
S DIH=$S($D(^SCTM(404.52,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=404.52,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",404.52,404.52,.01,1,4,2)
Q
"^DD",404.52,404.52,.01,1,4,"%D",0)
^^2^2^2990630^
"^DD",404.52,404.52,.01,1,4,"%D",1,0)
This trigger updates the field USER ENTERING.  It is intended to record who
"^DD",404.52,404.52,.01,1,4,"%D",2,0)
entered the record.
"^DD",404.52,404.52,.01,1,4,"CREATE VALUE")
S X=DUZ
"^DD",404.52,404.52,.01,1,4,"DELETE VALUE")
NO EFFECT
"^DD",404.52,404.52,.01,1,4,"DT")
2990630
"^DD",404.52,404.52,.01,1,4,"FIELD")
user
"^DD",404.52,404.52,.01,1,5,0)
^^TRIGGER^404.52^.08
"^DD",404.52,404.52,.01,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SCTM(404.52,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y X ^DD(404.52,.01,1,5,1.1) X ^DD(404.52,.01,1,5,1.4)
"^DD",404.52,404.52,.01,1,5,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",404.52,404.52,.01,1,5,1.4)
S DIH=$S($D(^SCTM(404.52,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=404.52,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",404.52,404.52,.01,1,5,2)
Q
"^DD",404.52,404.52,.01,1,5,"%D",0)
^^1^1^2990630^
"^DD",404.52,404.52,.01,1,5,"%D",1,0)
This cross reference is intended to record when the entry is added.
"^DD",404.52,404.52,.01,1,5,"CREATE VALUE")
NOW
"^DD",404.52,404.52,.01,1,5,"DELETE VALUE")
NO EFFECT
"^DD",404.52,404.52,.01,1,5,"DT")
2990630
"^DD",404.52,404.52,.01,1,5,"FIELD")
date
"^DD",404.52,404.52,.01,1,6,0)
404.52^AWRK
"^DD",404.52,404.52,.01,1,6,1)
S ^SCTM(404.52,"AWRK",$E(X,1,30),DA)=""
"^DD",404.52,404.52,.01,1,6,2)
K ^SCTM(404.52,"AWRK",$E(X,1,30),DA)
"^DD",404.52,404.52,.01,1,6,"%D",0)
^^1^1^3030323^
"^DD",404.52,404.52,.01,1,6,"%D",1,0)
Keep track of workload on deletion
"^DD",404.52,404.52,.01,1,6,"DT")
3030323
"^DD",404.52,404.52,.01,1,7,0)
404.52^AWRK^MUMPS
"^DD",404.52,404.52,.01,1,7,1)
Q
"^DD",404.52,404.52,.01,1,7,2)
D POSBXREF^SCMCHLX(DA,404.52)
"^DD",404.52,404.52,.01,1,7,"%D",0)
^^1^1^3030323^
"^DD",404.52,404.52,.01,1,7,"%D",1,0)
Keep track of workload on deletion
"^DD",404.52,404.52,.01,1,7,"DT")
3030323
"^DD",404.52,404.52,.01,3)
This is the entry in the Team Position file.
"^DD",404.52,404.52,.01,21,0)
^^1^1^2990317^^^
"^DD",404.52,404.52,.01,21,1,0)
This is the entry in the Team Position file.
"^DD",404.52,404.52,.01,"DT")
3030323
"^DD",404.52,404.52,.02,0)
EFFECTIVE DATE^RD^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.52,404.52,.02,1,0)
^.1^^-1
"^DD",404.52,404.52,.02,1,1,0)
404.52^AIDT1^MUMPS
"^DD",404.52,404.52,.02,1,1,1)
N SC1,SC2 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,4) I SC2]"" S ^SCTM(404.52,"AIDT",SC1,SC2,-X,DA)=""
"^DD",404.52,404.52,.02,1,1,2)
N SC1,SC2 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,4) I SC2]"" K ^SCTM(404.52,"AIDT",SC1,SC2,-X,DA)
"^DD",404.52,404.52,.02,1,1,"%D",0)
^^1^1^2950802^
"^DD",404.52,404.52,.02,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.04), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.52,404.52,.02,1,1,"DT")
2950802
"^DD",404.52,404.52,.02,3)
This is the date/time that the practitioner took over the position.
"^DD",404.52,404.52,.02,21,0)
^^1^1^2950908^^^
"^DD",404.52,404.52,.02,21,1,0)
This is the date/time that the practitioner took over the team position.
"^DD",404.52,404.52,.02,"DT")
2950908
"^DD",404.52,404.52,.03,0)
PRACTITIONER^R*P200'X^VA(200,^0;3^S DIC("S")="I ($D(^USR(8930.3,""B"",+Y)))!('$$USEUSR^SCMCTPU)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.52,404.52,.03,1,0)
^.1
"^DD",404.52,404.52,.03,1,1,0)
404.52^C
"^DD",404.52,404.52,.03,1,1,1)
S ^SCTM(404.52,"C",$E(X,1,30),DA)=""
"^DD",404.52,404.52,.03,1,1,2)
K ^SCTM(404.52,"C",$E(X,1,30),DA)
"^DD",404.52,404.52,.03,1,1,"DT")
2950807
"^DD",404.52,404.52,.03,3)
This is the practitioner that holds the position.
"^DD",404.52,404.52,.03,12)
This assures that the practitioner is in the USR Class Membership file (8930.3)
"^DD",404.52,404.52,.03,12.1)
S DIC("S")="I ($D(^USR(8930.3,""B"",+Y)))!('$$USEUSR^SCMCTPU)"
"^DD",404.52,404.52,.03,21,0)
^^1^1^2960214^^^^
"^DD",404.52,404.52,.03,21,1,0)
This is a staff member who is entered in the USR CLASS MEMBERSHIP file (8930.3).
"^DD",404.52,404.52,.03,23,0)
^^1^1^2960214^^^^
"^DD",404.52,404.52,.03,23,1,0)
Screen insures entry in 8930.3
"^DD",404.52,404.52,.03,"DT")
2960528
"^DD",404.52,404.52,.04,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;4^Q
"^DD",404.52,404.52,.04,1,0)
^.1
"^DD",404.52,404.52,.04,1,1,0)
404.52^AIDT2^MUMPS
"^DD",404.52,404.52,.04,1,1,1)
N SC1,SC3 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.52,"AIDT",SC1,X,-SC3,DA)=""
"^DD",404.52,404.52,.04,1,1,2)
N SC1,SC3 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.52,"AIDT",SC1,X,-SC3,DA)
"^DD",404.52,404.52,.04,1,1,"%D",0)
^.101^1^1^3021216^^
"^DD",404.52,404.52,.04,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.04), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.52,404.52,.04,1,1,"DT")
2950802
"^DD",404.52,404.52,.04,1,2,0)
404.52^ASTATUS^MUMPS
"^DD",404.52,404.52,.04,1,2,1)
I 'X D POSBXREF^SCMCHLX(DA,404.52)
"^DD",404.52,404.52,.04,1,2,2)
Q
"^DD",404.52,404.52,.04,1,2,"%D",0)
^.101^1^1^3030218^^^
"^DD",404.52,404.52,.04,1,2,"%D",1,0)
For HL7 Workload Transmission. Creates an entry in PCMM HL7 EVENT file.
"^DD",404.52,404.52,.04,1,2,"DT")
3021216
"^DD",404.52,404.52,.04,3)
This indicates if the practitioner's position assignment is active or inactive.
"^DD",404.52,404.52,.04,21,0)
^^2^2^2950911^^^
"^DD",404.52,404.52,.04,21,1,0)
This indicates whether the practitioner's position assignment is
"^DD",404.52,404.52,.04,21,2,0)
active or inactive.
"^DD",404.52,404.52,.04,"DT")
3021216
"^DD",404.52,404.52,.05,0)
STATUS REASON^R*P403.44'X^SD(403.44,^0;5^S DIC("S")="IF $$RSNDICS^SCAPMCU1(""ZM5"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.52,404.52,.05,3)
This is the reason that the position assignment changed.
"^DD",404.52,404.52,.05,12)
This is the reason that the position assignment changed.
"^DD",404.52,404.52,.05,12.1)
S DIC("S")="IF $$RSNDICS^SCAPMCU1(""ZM5"")"
"^DD",404.52,404.52,.05,21,0)
^^1^1^2950714^^
"^DD",404.52,404.52,.05,21,1,0)
This is the reason that the position assignment changed.
"^DD",404.52,404.52,.05,"DT")
2960528
"^DD",404.52,404.52,.07,0)
USER ENTERING^P200'^VA(200,^0;7^Q
"^DD",404.52,404.52,.07,3)
Enter the name of the person responsible for entering this entry.
"^DD",404.52,404.52,.07,5,1,0)
404.52^.01^4
"^DD",404.52,404.52,.07,21,0)
^^2^2^2990630^
"^DD",404.52,404.52,.07,21,1,0)
This field is a pointer to the person responsible for entering this entry. It
"^DD",404.52,404.52,.07,21,2,0)
is triggered by the .01 field.
"^DD",404.52,404.52,.07,"DT")
2990630
"^DD",404.52,404.52,.08,0)
DATE/TIME ENTERED^D^^0;8^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",404.52,404.52,.08,3)
Enter the date this entry was created.
"^DD",404.52,404.52,.08,5,1,0)
404.52^.01^5
"^DD",404.52,404.52,.08,21,0)
^^2^2^2990630^
"^DD",404.52,404.52,.08,21,1,0)
This field contains the date/time this entry was added to this file.  It is
"^DD",404.52,404.52,.08,21,2,0)
triggered from the .01 field.
"^DD",404.52,404.52,.08,"DT")
2990630
"^DD",404.52,404.52,.09,0)
PRIMARY CARE FTEE EQUIVALENT^NJ4,2X^^0;9^K:+X'=X!(X>1)!(X<0)!(X?.E1"."3N.N) X
"^DD",404.52,404.52,.09,1,0)
^.1
"^DD",404.52,404.52,.09,1,1,0)
404.52^AFTEE^MUMPS
"^DD",404.52,404.52,.09,1,1,1)
D POSBXREF^SCMCHLX(DA,404.52)
"^DD",404.52,404.52,.09,1,1,2)
D POSBXREF^SCMCHLX(DA,404.52)
"^DD",404.52,404.52,.09,1,1,"%D",0)
^.101^1^1^3030218^^^^
"^DD",404.52,404.52,.09,1,1,"%D",1,0)
For HL7 Workload transmission. Creates an entry in PCMM HL7 EVENT file.
"^DD",404.52,404.52,.09,1,1,"DT")
3021216
"^DD",404.52,404.52,.09,3)
Type a Number between 0 and 1, 2 Decimal Digits Total for site cannot exceed 1
"^DD",404.52,404.52,.09,21,0)
^^2^2^3030218^
"^DD",404.52,404.52,.09,21,1,0)
Workload measurement for Primary Care Providers. This information is transmitted
"^DD",404.52,404.52,.09,21,2,0)
in the HL7 workload message.
"^DD",404.52,404.52,.09,"DT")
3030319
"^DD",404.57,404.57,0)
FIELD^^401^33
"^DD",404.57,404.57,0,"DDA")
N
"^DD",404.57,404.57,0,"DT")
2990511
"^DD",404.57,404.57,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^SCTM(404.51,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(404.51,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",404.57,404.57,0,"ID","WRITE")
D EN^DDIOL($$WRITETP^SCMCDD1(Y),"","?0")
"^DD",404.57,404.57,0,"IX","AC",404.57,.03)

"^DD",404.57,404.57,0,"IX","APRIMARY",404.57,.01)

"^DD",404.57,404.57,0,"IX","APRIMARY1",404.57,.02)

"^DD",404.57,404.57,0,"IX","ASCTEAM",404.57,.09)

"^DD",404.57,404.57,0,"IX","ATMPOS",404.57,.01)

"^DD",404.57,404.57,0,"IX","ATMPOS1",404.57,.02)

"^DD",404.57,404.57,0,"IX","AUSR",404.57,.13)

"^DD",404.57,404.57,0,"IX","B",404.57,.01)

"^DD",404.57,404.57,0,"IX","C",404.57,.02)

"^DD",404.57,404.57,0,"IX","D",404.57,.09)

"^DD",404.57,404.57,0,"NM","TEAM POSITION")

"^DD",404.57,404.57,0,"PT",44.40457,.01)

"^DD",404.57,404.57,0,"PT",404.43,.02)

"^DD",404.57,404.57,0,"PT",404.471,.07)

"^DD",404.57,404.57,0,"PT",404.48,.07)

"^DD",404.57,404.57,0,"PT",404.52,.01)

"^DD",404.57,404.57,0,"PT",404.53,.01)

"^DD",404.57,404.57,0,"PT",404.53,.06)

"^DD",404.57,404.57,0,"PT",404.57,.1)

"^DD",404.57,404.57,0,"PT",404.59,.01)

"^DD",404.57,404.57,0,"PT",409.3,6)

"^DD",404.57,404.57,0,"VRPK")
SD
"^DD",404.57,404.57,.01,0)
POSITION^RFX^^0;1^N SCZ K:$L(X)>30!($L(X)<3) X D:$D(X) IPTF^SCMCTPU(X,.SCZ,.X)
"^DD",404.57,404.57,.01,1,0)
^.1
"^DD",404.57,404.57,.01,1,1,0)
404.57^B
"^DD",404.57,404.57,.01,1,1,1)
S ^SCTM(404.57,"B",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.01,1,1,2)
K ^SCTM(404.57,"B",$E(X,1,30),DA)
"^DD",404.57,404.57,.01,1,2,0)
404.57^APRIMARY^MUMPS
"^DD",404.57,404.57,.01,1,2,1)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,2) I SC2 S ^SCTM(404.57,"APRIMARY",X,SC2,DA)=""
"^DD",404.57,404.57,.01,1,2,2)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,2) I SC2 K ^SCTM(404.57,"APRIMARY",X,SC2,DA)
"^DD",404.57,404.57,.01,1,2,"%D",0)
^^1^1^2951214^^^^
"^DD",404.57,404.57,.01,1,2,"%D",1,0)
This sorts by POSITION(#.01), then by TEAM(#.02).  There is an associated cross reference for the TEAM Field (#.02).
"^DD",404.57,404.57,.01,1,2,"DT")
2950503
"^DD",404.57,404.57,.01,1,3,0)
404.57^ATMPOS^MUMPS
"^DD",404.57,404.57,.01,1,3,1)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,2) I SC1 S ^SCTM(404.57,"ATMPOS",SC1,X,DA)=""
"^DD",404.57,404.57,.01,1,3,2)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,2) I SC1 K ^SCTM(404.57,"ATMPOS",SC1,X,DA)
"^DD",404.57,404.57,.01,1,3,"%D",0)
^^1^1^2950503^
"^DD",404.57,404.57,.01,1,3,"%D",1,0)
This sorts by TEAM(#.02), then by POSITION(#.01).  There is an associated cross reference for the TEAM Field (#.02).
"^DD",404.57,404.57,.01,1,3,"DT")
2950503
"^DD",404.57,404.57,.01,3)
Answer must be 3-30 characters in length - No duplicate position names within a team.
"^DD",404.57,404.57,.01,21,0)
^^1^1^2950811^^^^
"^DD",404.57,404.57,.01,21,1,0)
This is the Name of the Team Position.
"^DD",404.57,404.57,.01,"DT")
2960306
"^DD",404.57,404.57,.02,0)
TEAM^RP404.51'X^SCTM(404.51,^0;2^N SC D:$D(X)#2 IPTF^SCMCTPU(.SC,X,.X)
"^DD",404.57,404.57,.02,1,0)
^.1
"^DD",404.57,404.57,.02,1,1,0)
404.57^APRIMARY1^MUMPS
"^DD",404.57,404.57,.02,1,1,1)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,1) I SC1]"" S ^SCTM(404.57,"APRIMARY",SC1,X,DA)=""
"^DD",404.57,404.57,.02,1,1,2)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,1) I SC1]"" K ^SCTM(404.57,"APRIMARY",SC1,X,DA)
"^DD",404.57,404.57,.02,1,1,"%D",0)
^^1^1^2951214^^^^
"^DD",404.57,404.57,.02,1,1,"%D",1,0)
This sorts by POSITION(#.01), then by TEAM(#.02).  There is an associated cross reference for the POSITION Field (#.01).
"^DD",404.57,404.57,.02,1,1,"DT")
2950503
"^DD",404.57,404.57,.02,1,2,0)
404.57^C
"^DD",404.57,404.57,.02,1,2,1)
S ^SCTM(404.57,"C",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.02,1,2,2)
K ^SCTM(404.57,"C",$E(X,1,30),DA)
"^DD",404.57,404.57,.02,1,2,"DT")
2950308
"^DD",404.57,404.57,.02,1,3,0)
404.57^ATMPOS1^MUMPS
"^DD",404.57,404.57,.02,1,3,1)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,1) I SC2]"" S ^SCTM(404.57,"ATMPOS",X,SC2,DA)=""
"^DD",404.57,404.57,.02,1,3,2)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,1) I SC2]"" K ^SCTM(404.57,"ATMPOS",X,SC2,DA)
"^DD",404.57,404.57,.02,1,3,"%D",0)
^^1^1^2950503^
"^DD",404.57,404.57,.02,1,3,"%D",1,0)
This sorts by TEAM(#.02), then by POSITION(#.01).  There is an associated cross reference for the POSITION Field (#.01).
"^DD",404.57,404.57,.02,1,3,"DT")
2950503
"^DD",404.57,404.57,.02,3)
This is the entry in the team File
"^DD",404.57,404.57,.02,21,0)
^^1^1^2951128^^^^
"^DD",404.57,404.57,.02,21,1,0)
Entry in the team file.
"^DD",404.57,404.57,.02,23,0)
^^1^1^2951128^^
"^DD",404.57,404.57,.02,23,1,0)
Pointer  to TEAM File (#404.51)
"^DD",404.57,404.57,.02,"DT")
2950905
"^DD",404.57,404.57,.03,0)
STANDARD ROLE NAME^RP403.46'^SD(403.46,^0;3^Q
"^DD",404.57,404.57,.03,1,0)
^.1
"^DD",404.57,404.57,.03,1,1,0)
404.57^AC
"^DD",404.57,404.57,.03,1,1,1)
S ^SCTM(404.57,"AC",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.03,1,1,2)
K ^SCTM(404.57,"AC",$E(X,1,30),DA)
"^DD",404.57,404.57,.03,1,1,"DT")
2960126
"^DD",404.57,404.57,.03,3)
This is the associated standard position from the list provided by VACO.
"^DD",404.57,404.57,.03,21,0)
^^3^3^2950228^^^
"^DD",404.57,404.57,.03,21,1,0)
Standard role the provider performs as part of this team.
"^DD",404.57,404.57,.03,21,2,0)
 
"^DD",404.57,404.57,.03,21,3,0)
These standard positions are defined by Central Office.
"^DD",404.57,404.57,.03,"DT")
2960126
"^DD",404.57,404.57,.04,0)
POSSIBLE PRIMARY PRACTITIONER?^S^1:YES;0:NO;^0;4^Q
"^DD",404.57,404.57,.04,3)
'YES' indicates that this position may function as primary practitioner or attending.
"^DD",404.57,404.57,.04,21,0)
^^4^4^2990623^^^^
"^DD",404.57,404.57,.04,21,1,0)
Can this position be the primary care provider for a patient?
"^DD",404.57,404.57,.04,21,2,0)
 
"^DD",404.57,404.57,.04,21,3,0)
(Even if the position's principle purpose is not primary care, it still maybe able act as a primary care provider for some patients. This field indicates if that is possible.)
"^DD",404.57,404.57,.04,21,4,0)
Note: This also enables the position to be a PC Attending Position.
"^DD",404.57,404.57,.04,"DT")
3030213
"^DD",404.57,404.57,.08,0)
MAX NUMBER OF PATIENTS^NJ5,0^^0;8^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",404.57,404.57,.08,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",404.57,404.57,.08,21,0)
^^2^2^2960528^^^
"^DD",404.57,404.57,.08,21,1,0)
Once the current number of assigned patients reaches this
"^DD",404.57,404.57,.08,21,2,0)
level, further assignment of this position should be avoided.
"^DD",404.57,404.57,.08,"DT")
3030213
"^DD",404.57,404.57,.09,0)
ASSOCIATED CLINIC^*P44'^SC(^0;9^S DIC("S")="IF $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.57,404.57,.09,1,0)
^.1
"^DD",404.57,404.57,.09,1,1,0)
404.57^D
"^DD",404.57,404.57,.09,1,1,1)
S ^SCTM(404.57,"D",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.09,1,1,2)
K ^SCTM(404.57,"D",$E(X,1,30),DA)
"^DD",404.57,404.57,.09,1,1,"DT")
2950313
"^DD",404.57,404.57,.09,1,2,0)
404.57^ASCTEAM^MUMPS
"^DD",404.57,404.57,.09,1,2,1)
D SETSCTM^SCMCDD2(DA,X)
"^DD",404.57,404.57,.09,1,2,2)
D KILLSCTM^SCMCDD2(DA,X)
"^DD",404.57,404.57,.09,1,2,"%D",0)
^^4^4^2960401^
"^DD",404.57,404.57,.09,1,2,"%D",1,0)
This edits the whole cross reference in the Hospital Location File (#44),
"^DD",404.57,404.57,.09,1,2,"%D",2,0)
'TEAM'.  This cross-reference allows users to use the team name to find
"^DD",404.57,404.57,.09,1,2,"%D",3,0)
clinics associated with the team's team positions.  See the 'ASCTEAM'
"^DD",404.57,404.57,.09,1,2,"%D",4,0)
cross-reference of the TEAM (#404.51) File's NAME (#.01) Field.
"^DD",404.57,404.57,.09,1,2,"DT")
2960401
"^DD",404.57,404.57,.09,3)
Enter the clinic that is associated with this position.
"^DD",404.57,404.57,.09,12)
Allows only clinic locations.
"^DD",404.57,404.57,.09,12.1)
S DIC("S")="IF $P(^(0),""^"",3)=""C"""
"^DD",404.57,404.57,.09,21,0)
^^5^5^2950502^^^^
"^DD",404.57,404.57,.09,21,1,0)
This field allows the site to associate a specific clinic with a
"^DD",404.57,404.57,.09,21,2,0)
Team Position.
"^DD",404.57,404.57,.09,21,3,0)
 
"^DD",404.57,404.57,.09,21,4,0)
This association will be used to find the clinics for team members
"^DD",404.57,404.57,.09,21,5,0)
during various appointing and information processes.
"^DD",404.57,404.57,.09,"DT")
2960401
"^DD",404.57,404.57,.1,0)
*PRECEPTOR POSITION^*P404.57'^SCTM(404.57,^0;10^S DIC("S")="I $$OKPREC^SCAPMCU1($P(^SCTM(404.57,DA,0),U,2))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.57,404.57,.1,1,0)
^.1^^0
"^DD",404.57,404.57,.1,3)
Enter position that supervises this current position.
"^DD",404.57,404.57,.1,12)
requires preceptor to be of team & possible preceptor
"^DD",404.57,404.57,.1,12.1)
S DIC("S")="I $$OKPREC^SCAPMCU1($P(^SCTM(404.57,DA,0),U,2))"
"^DD",404.57,404.57,.1,21,0)
^^5^5^2950717^^^^
"^DD",404.57,404.57,.1,21,1,0)
This field contains the name of the Team Position that is responsible for
"^DD",404.57,404.57,.1,21,2,0)
supervising this current position.
"^DD",404.57,404.57,.1,21,3,0)
 
"^DD",404.57,404.57,.1,21,4,0)
It is an optional field. However, when indicated, this field usually
"^DD",404.57,404.57,.1,21,5,0)
contains an attending position.
"^DD",404.57,404.57,.1,"DT")
2990610
"^DD",404.57,404.57,.11,0)
BEEPER NUMBER^F^^0;11^K:$L(X)>20!($L(X)<3) X
"^DD",404.57,404.57,.11,3)
Answer must be 3-20 characters in length.
"^DD",404.57,404.57,.11,21,0)
^^1^1^2950801^^
"^DD",404.57,404.57,.11,21,1,0)
This is the pager or beeper number that is used by this team position.
"^DD",404.57,404.57,.11,"DT")
2950801
"^DD",404.57,404.57,.12,0)
CAN ACT AS PRECEPTOR?^S^1:YES;0:NO;^0;12^Q
"^DD",404.57,404.57,.12,3)
This indicates if position can supervise other positions.
"^DD",404.57,404.57,.12,21,0)
^^2^2^2950717^
"^DD",404.57,404.57,.12,21,1,0)
By answering 'YES', this position may be used as a preceptor position
"^DD",404.57,404.57,.12,21,2,0)
for the team.
"^DD",404.57,404.57,.12,"DT")
2950717
"^DD",404.57,404.57,.13,0)
USER CLASS^P8930'^USR(8930,^0;13^Q
"^DD",404.57,404.57,.13,1,0)
^.1
"^DD",404.57,404.57,.13,1,1,0)
404.57^AUSR
"^DD",404.57,404.57,.13,1,1,1)
S ^SCTM(404.57,"AUSR",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.13,1,1,2)
K ^SCTM(404.57,"AUSR",$E(X,1,30),DA)
"^DD",404.57,404.57,.13,1,1,"%D",0)
^^1^1^2960322^^
"^DD",404.57,404.57,.13,1,1,"%D",1,0)
This provides a x-ref on the USER CLASS Field
"^DD",404.57,404.57,.13,1,1,"DT")
2960322
"^DD",404.57,404.57,.13,3)
Class of users who will fill this position
"^DD",404.57,404.57,.13,21,0)
^^2^2^2960517^^^^
"^DD",404.57,404.57,.13,21,1,0)
This is an entry in the USR CLASS file to which anyone assigned to the
"^DD",404.57,404.57,.13,21,2,0)
position must belong.
"^DD",404.57,404.57,.13,"DT")
2960517
"^DD",404.57,404.57,1,0)
POSITION DESCRIPTION^404.571^^1;0
"^DD",404.57,404.57,2.01,0)
DEATH MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;1^Q
"^DD",404.57,404.57,2.01,3)
This determines for which patients the position receives messages related to patient death.
"^DD",404.57,404.57,2.01,21,0)
^^1^1^2960502^^^^
"^DD",404.57,404.57,2.01,21,1,0)
This determines for which patients the position receives messages related to patient death.
"^DD",404.57,404.57,2.01,"DT")
2960502
"^DD",404.57,404.57,2.02,0)
INPATIENT MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;2^Q
"^DD",404.57,404.57,2.02,3)
This determines for which patients the position receives messages related to inpatient activity.
"^DD",404.57,404.57,2.02,21,0)
^^1^1^2960502^^^^
"^DD",404.57,404.57,2.02,21,1,0)
This determines for which patients the position receives messages related to inpatient activity.
"^DD",404.57,404.57,2.02,"DT")
2960502
"^DD",404.57,404.57,2.03,0)
TEAM MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;3^Q
"^DD",404.57,404.57,2.03,3)
This determines for which patients the position receives messages related to team activity.
"^DD",404.57,404.57,2.03,21,0)
^^3^3^2960502^^^^
"^DD",404.57,404.57,2.03,21,1,0)
This determines for which patients the position receives messages related 
"^DD",404.57,404.57,2.03,21,2,0)
to team activity such as assignment or re-assignment of a position or
"^DD",404.57,404.57,2.03,21,3,0)
team to the patient.
"^DD",404.57,404.57,2.03,"DT")
2960502
"^DD",404.57,404.57,2.04,0)
CONSULT MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;4^Q
"^DD",404.57,404.57,2.04,3)
This determines for which patients the position receives messages related to activity in clinics to which the patient is not enrolled.
"^DD",404.57,404.57,2.04,21,0)
^^1^1^2960502^^^^
"^DD",404.57,404.57,2.04,21,1,0)
This determines for which patients the position receives messages related to activity in clinics to which the patient is not enrolled.
"^DD",404.57,404.57,2.04,"DT")
2960502
"^DD",404.57,404.57,2.05,0)
PRECEPTOR DEATH MESSAGE^S^1:YES;0:NO;^2;5^Q
"^DD",404.57,404.57,2.05,3)
Enter 'YES' if the preceptor should be notified on death entries.
"^DD",404.57,404.57,2.05,21,0)
^^2^2^2990511^
"^DD",404.57,404.57,2.05,21,1,0)
A yes entry triggers a mailmessage on a death entry for the preceptor of
"^DD",404.57,404.57,2.05,21,2,0)
this position.
"^DD",404.57,404.57,2.05,"DT")
2990511
"^DD",404.57,404.57,2.06,0)
PRECEPTOR INPATIENT MESSAGE^S^1:YES;0:NO;^2;6^Q
"^DD",404.57,404.57,2.06,3)
Enter 'YES' if the preceptor should be notified on inpatient activity.
"^DD",404.57,404.57,2.06,21,0)
^^2^2^2990511^
"^DD",404.57,404.57,2.06,21,1,0)
A yes entry triggers a mailmessage on inpatient activity for the preceptor
"^DD",404.57,404.57,2.06,21,2,0)
ofthis position.
"^DD",404.57,404.57,2.06,"DT")
2990511
"^DD",404.57,404.57,2.07,0)
PRECEPTOR TEAM MESSAGE^S^1:YES;0:NO;^2;7^Q
"^DD",404.57,404.57,2.07,3)
Enter 'YES' if the preceptor should be notified on team activity.
"^DD",404.57,404.57,2.07,21,0)
^^2^2^2990511^
"^DD",404.57,404.57,2.07,21,1,0)
A yes entry triggers a mailmessage on team activity for the preceptor
"^DD",404.57,404.57,2.07,21,2,0)
of this position.
"^DD",404.57,404.57,2.07,"DT")
2990511
"^DD",404.57,404.57,2.08,0)
PRECEPTOR CONSULT MESSAGE^S^1:YES;0:NO;^2;8^Q
"^DD",404.57,404.57,2.08,3)
Enter 'YES' if the preceptor should be notified on consult activity.
"^DD",404.57,404.57,2.08,21,0)
^^2^2^2990511^
"^DD",404.57,404.57,2.08,21,1,0)
A yes entry triggers a mailmessage on consult activity for the preceptor
"^DD",404.57,404.57,2.08,21,2,0)
of this position.
"^DD",404.57,404.57,2.08,"DT")
2990511
"^DD",404.57,404.57,200,0)
CURRENT # OF PC PATIENTS^CJ8^^ ; ^S X=$$PCPOSCNT^SCAPMCU1(D0,DT)
"^DD",404.57,404.57,200,.1)
CURRENT NUMBER OF PRIMARY CARE PATIENTS
"^DD",404.57,404.57,200,9)
^
"^DD",404.57,404.57,200,9.01)

"^DD",404.57,404.57,200,9.1)
S X=$$PCPOSCNT^SCAPMCU1(D0,DT)
"^DD",404.57,404.57,200,21,0)
^^2^2^2960520^^^^
"^DD",404.57,404.57,200,21,1,0)
This calculates the current number of Primary Care patients
"^DD",404.57,404.57,200,21,2,0)
for this team position.
"^DD",404.57,404.57,200,"DT")
2950728
"^DD",404.57,404.57,201,0)
CURRENT # OF PATIENTS^CJ8^^ ; ^S X=$$PCPOSCNT^SCAPMCU1(D0,DT,0)
"^DD",404.57,404.57,201,9)
^
"^DD",404.57,404.57,201,9.01)

"^DD",404.57,404.57,201,9.1)
S X=$$PCPOSCNT^SCAPMCU1(D0,DT,0)
"^DD",404.57,404.57,201,21,0)
^^2^2^2960520^
"^DD",404.57,404.57,201,21,1,0)
This is the number of all patients (primary care & otherwise) associated
"^DD",404.57,404.57,201,21,2,0)
with the team.
"^DD",404.57,404.57,201,"DT")
2960520
"^DD",404.57,404.57,202,0)
FUTURE # OF PC PATIENTS^CJ8,0^^ ; ^S X=$$PCPOSCNT^SCAPMCU1(D0,DT,1,1) S X=$J(X,0,0)
"^DD",404.57,404.57,202,9)
^
"^DD",404.57,404.57,202,9.01)

"^DD",404.57,404.57,202,9.1)
S X=$$PCPOSCNT^SCAPMCU1(D0,DT,1,1)
"^DD",404.57,404.57,202,21,0)
^^1^1^2990429^
"^DD",404.57,404.57,202,21,1,0)
The number of current AND future PC assignments to this team position.
"^DD",404.57,404.57,203,0)
FUTURE # OF PATIENTS^CJ8,0^^ ; ^S X=$$PCPOSCNT^SCAPMCU1(D0,DT,0,1) S X=$J(X,0,0)
"^DD",404.57,404.57,203,9)
^
"^DD",404.57,404.57,203,9.01)

"^DD",404.57,404.57,203,9.1)
S X=$$PCPOSCNT^SCAPMCU1(D0,DT,0,1)
"^DD",404.57,404.57,203,21,0)
^^1^1^2990429^
"^DD",404.57,404.57,203,21,1,0)
The number of current AND future assignments to this team position.
"^DD",404.57,404.57,300,0)
CURRENT STATUS^CJ8^^ ; ^S X=$S((+$$ACTTP^SCMCTPU(D0)=1):"Active",1:"Inactive")
"^DD",404.57,404.57,300,9)
^
"^DD",404.57,404.57,300,9.01)

"^DD",404.57,404.57,300,9.1)
S X=$S((+$$ACTTP^SCMCTPU(D0)=1):"Active",1:"Inactive")
"^DD",404.57,404.57,300,21,0)
^^1^1^2960213^^^^
"^DD",404.57,404.57,300,21,1,0)
This indicates if the team position is active on the current date.
"^DD",404.57,404.57,300,"DT")
2950714
"^DD",404.57,404.57,301,0)
CURRENT EFFECTIVE DATE^CJ8^^ ; ^N Y S X="" S Y=$P($$ACTTP^SCMCTPU(D0),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,301,9)
^
"^DD",404.57,404.57,301,9.01)

"^DD",404.57,404.57,301,9.1)
N Y S X="" S Y=$P($$ACTTP^SCMCTPU(D0),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,301,21,0)
^^1^1^2950807^^^^
"^DD",404.57,404.57,301,21,1,0)
This is the most recent date (not in future) that the active status changed.
"^DD",404.57,404.57,302,0)
CURRENT ACTIVATION DATE^CJ8^^ ; ^N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,302,9)
^
"^DD",404.57,404.57,302,9.01)

"^DD",404.57,404.57,302,9.1)
N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,302,21,0)
^^4^4^2950807^^^^
"^DD",404.57,404.57,302,21,1,0)
This is the activation date of the position based on today's date:
"^DD",404.57,404.57,302,21,2,0)
  For positions never active - this is the next date where the position is active
"^DD",404.57,404.57,302,21,3,0)
  For positions that are active now - this is the date it became active
"^DD",404.57,404.57,302,21,4,0)
  For positions that are currently inactive - this is the last activation date
"^DD",404.57,404.57,303,0)
CURRENT INACTIVATION DATE^CJ8^^ ; ^N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,3) D DD^%DT S X=Y
"^DD",404.57,404.57,303,9)
^
"^DD",404.57,404.57,303,9.01)

"^DD",404.57,404.57,303,9.1)
N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,3) D DD^%DT S X=Y
"^DD",404.57,404.57,303,21,0)
^^2^2^2950807^^^^
"^DD",404.57,404.57,303,21,1,0)
If it is inactive, this is the day the position became inactive.  If it is
"^DD",404.57,404.57,303,21,2,0)
active it is the day the position will become inactive.
"^DD",404.57,404.57,304,0)
CURRENT PRACTITIONER^CJ8^^ ; ^S X=$P($$GETPRTP^SCAPMCU2(D0,DT),U,2)
"^DD",404.57,404.57,304,9)
^
"^DD",404.57,404.57,304,9.01)

"^DD",404.57,404.57,304,9.1)
S X=$P($$GETPRTP^SCAPMCU2(D0,DT),U,2)
"^DD",404.57,404.57,304,"DT")
2960520
"^DD",404.57,404.57,305,0)
CURRENT PRECEPTOR POSITION^CJ40^^ ; ^S X=$P($$OKPREC3^SCMCLK(D0,DT),U,2)
"^DD",404.57,404.57,305,9)
^
"^DD",404.57,404.57,305,9.01)

"^DD",404.57,404.57,305,9.1)
S X=$P($$OKPREC3^SCMCLK(D0,DT),U,2)
"^DD",404.57,404.57,305,"DT")
2990412
"^DD",404.57,404.57,306,0)
CURRENT PRECEPTOR^CJ30^^ ; ^S X=$P($$OKPREC2^SCMCLK(D0,DT),U,2)
"^DD",404.57,404.57,306,9)
^
"^DD",404.57,404.57,306,9.01)

"^DD",404.57,404.57,306,9.1)
S X=$P($$OKPREC2^SCMCLK(D0,DT),U,2)
"^DD",404.57,404.57,307,0)
ACTIVE PRECEPTS^CJ3^^ ; ^S X=$S(+$$OKPREC1^SCMCLK(D0,DT)=0:"YES",1:"")
"^DD",404.57,404.57,307,9)
^
"^DD",404.57,404.57,307,9.01)

"^DD",404.57,404.57,307,9.1)
S X=$S(+$$OKPREC1^SCMCLK(D0,DT)=0:"YES",1:"")
"^DD",404.57,404.57,400,0)
ALLOW PRECEPTED CHANGE^CJ8^^ ; ^S X=$S($$OKPREC4^SCMCLK(D0)=1:"YES",1:"NO")
"^DD",404.57,404.57,400,9)
^
"^DD",404.57,404.57,400,9.01)

"^DD",404.57,404.57,400,9.1)
S X=$S($$OKPREC4^SCMCLK(D0)=1:"YES",1:"NO")
"^DD",404.57,404.57,400,21,0)
^^4^4^2990624^
"^DD",404.57,404.57,400,21,1,0)
Determines if a patient assignment has been made after the date a position
"^DD",404.57,404.57,400,21,2,0)
became precepted.  A 'NO' return flags the GUI to always require an active
"^DD",404.57,404.57,400,21,3,0)
preceptor assignment and disables the 'can act as preceptor' and 'can act
"^DD",404.57,404.57,400,21,4,0)
as preceptor' controls.
"^DD",404.57,404.57,401,0)
ALLOW PRECEPTOR CHANGE^CJ8^^ ; ^S X=$S($$OKPREC1^SCMCLK(D0,1)=1:"YES",1:"NO")
"^DD",404.57,404.57,401,9)
^
"^DD",404.57,404.57,401,9.01)

"^DD",404.57,404.57,401,9.1)
S X=$S($$OKPREC1^SCMCLK(D0,1)=1:"YES",1:"NO")
"^DD",404.57,404.57,401,21,0)
^^4^4^2990624^
"^DD",404.57,404.57,401,21,1,0)
Determines if a preceptor assignment has been made after the date a
"^DD",404.57,404.57,401,21,2,0)
position became preceptor.  A 'NO' return flags the GUI to always require
"^DD",404.57,404.57,401,21,3,0)
an active staff assignment and disables the 'can act as preceptor' and
"^DD",404.57,404.57,401,21,4,0)
'can act as preceptor' controls.
"^DD",404.57,404.571,0)
POSITION DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.57,404.571,0,"DT")
2950222
"^DD",404.57,404.571,0,"NM","POSITION DESCRIPTION")

"^DD",404.57,404.571,0,"UP")
404.57
"^DD",404.57,404.571,.01,0)
POSITION DESCRIPTION^W^^0;1^Q
"^DD",404.57,404.571,.01,3)
Detailed description of position where duties of the role are outlined.
"^DD",404.57,404.571,.01,21,0)
^^1^1^2950222^
"^DD",404.57,404.571,.01,21,1,0)
This is the long description of the position.
"^DD",404.57,404.571,.01,"DT")
2950222
"^DD",404.59,404.59,0)
FIELD^^.04^4
"^DD",404.59,404.59,0,"DDA")
N
"^DD",404.59,404.59,0,"DT")
2950911
"^DD",404.59,404.59,0,"ID",.02)
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",404.59,404.59,0,"ID",.03)
W "   ",@("$P($P($C(59)_$S($D(^DD(404.59,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
"^DD",404.59,404.59,0,"IX","AIDT",404.59,.01)

"^DD",404.59,404.59,0,"IX","AIDT1",404.59,.03)

"^DD",404.59,404.59,0,"IX","AIDT2",404.59,.02)

"^DD",404.59,404.59,0,"IX","B",404.59,.01)

"^DD",404.59,404.59,0,"NM","TEAM POSITION HISTORY")

"^DD",404.59,404.59,0,"PT",404.471,.07)

"^DD",404.59,404.59,0,"PT",404.48,.07)

"^DD",404.59,404.59,0,"VRPK")
SD
"^DD",404.59,404.59,.01,0)
TEAM POSITION^RP404.57'^SCTM(404.57,^0;1^Q
"^DD",404.59,404.59,.01,1,0)
^.1
"^DD",404.59,404.59,.01,1,1,0)
404.59^B
"^DD",404.59,404.59,.01,1,1,1)
S ^SCTM(404.59,"B",$E(X,1,30),DA)=""
"^DD",404.59,404.59,.01,1,1,2)
K ^SCTM(404.59,"B",$E(X,1,30),DA)
"^DD",404.59,404.59,.01,1,2,0)
404.59^AIDT^MUMPS
"^DD",404.59,404.59,.01,1,2,1)
N SC2,SC3 S SC2=$P($G(^SCTM(404.59,DA,0)),U,3) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.59,"AIDT",X,SC2,-SC3,DA)=""
"^DD",404.59,404.59,.01,1,2,2)
N SC2,SC3 S SC2=$P($G(^SCTM(404.59,DA,0)),U,3) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.59,"AIDT",X,SC2,-SC3,DA)
"^DD",404.59,404.59,.01,1,2,"%D",0)
^^1^1^2950807^
"^DD",404.59,404.59,.01,1,2,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.59,404.59,.01,1,2,"DT")
2950807
"^DD",404.59,404.59,.01,3)
This is the position on the team.
"^DD",404.59,404.59,.01,21,0)
^^2^2^2950713^^
"^DD",404.59,404.59,.01,21,1,0)
This is the position on the team that is either being activated or 
"^DD",404.59,404.59,.01,21,2,0)
inactivated.
"^DD",404.59,404.59,.01,"DT")
2950807
"^DD",404.59,404.59,.02,0)
EFFECTIVE DATE^RD^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.59,404.59,.02,1,0)
^.1^^-1
"^DD",404.59,404.59,.02,1,1,0)
404.59^AIDT2^MUMPS
"^DD",404.59,404.59,.02,1,1,1)
N SC1,SC2 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2]"" S ^SCTM(404.59,"AIDT",SC1,SC2,-X,DA)=""
"^DD",404.59,404.59,.02,1,1,2)
N SC1,SC2 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2]"" K ^SCTM(404.59,"AIDT",SC1,SC2,-X,DA)
"^DD",404.59,404.59,.02,1,1,"%D",0)
^^1^1^2950807^
"^DD",404.59,404.59,.02,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.59,404.59,.02,1,1,"DT")
2950807
"^DD",404.59,404.59,.02,3)
This is the date that the team position's status changed.
"^DD",404.59,404.59,.02,21,0)
^^1^1^2950911^^^
"^DD",404.59,404.59,.02,21,1,0)
This is the date that the team position's status changed.
"^DD",404.59,404.59,.02,"DT")
2950911
"^DD",404.59,404.59,.03,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;3^Q
"^DD",404.59,404.59,.03,1,0)
^.1
"^DD",404.59,404.59,.03,1,1,0)
404.59^AIDT1^MUMPS
"^DD",404.59,404.59,.03,1,1,1)
N SC1,SC3 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.59,"AIDT",SC1,X,-SC3,DA)=""
"^DD",404.59,404.59,.03,1,1,2)
N SC1,SC3 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.59,"AIDT",SC1,X,-SC3,DA)
"^DD",404.59,404.59,.03,1,1,"%D",0)
^.101^1^1^3030214^^
"^DD",404.59,404.59,.03,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.59,404.59,.03,1,1,"DT")
2950807
"^DD",404.59,404.59,.03,3)
This indicates if the team position is active or inactive.
"^DD",404.59,404.59,.03,21,0)
^^1^1^2950911^^^
"^DD",404.59,404.59,.03,21,1,0)
This indicates if the team position is active or inactive.
"^DD",404.59,404.59,.03,"DT")
3030323
"^DD",404.59,404.59,.04,0)
STATUS REASON^R*P403.44'^SD(403.44,^0;4^S DIC("S")="I $$RSNDICS^SCAPMCU1(""ZM3"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.59,404.59,.04,3)
This is the reason that the activation/inactivation status changed.
"^DD",404.59,404.59,.04,12)
Requires Scheduling Reason's Scheduling Event Code to be TEAM POSITION ADD/MODIFY
"^DD",404.59,404.59,.04,12.1)
S DIC("S")="I $$RSNDICS^SCAPMCU1(""ZM3"")"
"^DD",404.59,404.59,.04,21,0)
^^1^1^2950714^^^^
"^DD",404.59,404.59,.04,21,1,0)
This is the reason that the activation/inactivation status changed.
"^DD",404.59,404.59,.04,"DT")
2950714
"^DIC",404.472,404.472,0)
PCMM HL7 ERROR CODE^404.472
"^DIC",404.472,404.472,0,"GL")
^SCPT(404.472,
"^DIC",404.472,404.472,"%",0)
^1.005^^0
"^DIC",404.472,404.472,"%D",0)
^^7^7^3000322^
"^DIC",404.472,404.472,"%D",1,0)
This table file contains a list of all error codes that the Austin
"^DIC",404.472,404.472,"%D",2,0)
Automation Center (AAC) will report when processing PCMM HL7
"^DIC",404.472,404.472,"%D",3,0)
Transmissions.
"^DIC",404.472,404.472,"%D",4,0)
 
"^DIC",404.472,404.472,"%D",5,0)
This table should not be edited in anyway by the site. If an entry in this
"^DIC",404.472,404.472,"%D",6,0)
file needs to be to be added, modified or deleted; a patch will be issued
"^DIC",404.472,404.472,"%D",7,0)
instructing the site how to make the change.
"^DIC",404.472,"B","PCMM HL7 ERROR CODE",404.472)

"^DIC",404.48,404.48,0)
PCMM HL7 EVENT^404.48
"^DIC",404.48,404.48,0,"GL")
^SCPT(404.48,
"^DIC",404.48,404.48,"%D",0)
^^1^1^2990319^
"^DIC",404.48,404.48,"%D",1,0)
Track patients that need their primary care data transmitted to Austin.
"^DIC",404.48,"B","PCMM HL7 EVENT",404.48)

"^DIC",404.52,404.52,0)
POSITION ASSIGNMENT HISTORY^404.52PI
"^DIC",404.52,404.52,0,"GL")
^SCTM(404.52,
"^DIC",404.52,404.52,"%D",0)
^^12^12^2960415^^^^
"^DIC",404.52,404.52,"%D",1,0)
This table holds the history of which users were assigned to each
"^DIC",404.52,404.52,"%D",2,0)
Team Position and when.
"^DIC",404.52,404.52,"%D",3,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",404.52,404.52,"%D",4,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",404.52,404.52,"%D",5,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",404.52,404.52,"%D",6,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",404.52,404.52,"%D",7,0)
official patch to the Scheduling Module.
"^DIC",404.52,404.52,"%D",8,0)
 
"^DIC",404.52,404.52,"%D",9,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",404.52,404.52,"%D",10,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",404.52,404.52,"%D",11,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",404.52,404.52,"%D",12,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",404.52,"B","POSITION ASSIGNMENT HISTORY",404.52)

"^DIC",404.57,404.57,0)
TEAM POSITION^404.57I
"^DIC",404.57,404.57,0,"GL")
^SCTM(404.57,
"^DIC",404.57,404.57,"%D",0)
^^1^1^2990412^^^^
"^DIC",404.57,404.57,"%D",1,0)
This table contains the practitioner and administrative positions associated with a Team.
"^DIC",404.57,"B","TEAM POSITION",404.57)

"^DIC",404.59,404.59,0)
TEAM POSITION HISTORY^404.59
"^DIC",404.59,404.59,0,"GL")
^SCTM(404.59,
"^DIC",404.59,404.59,"%D",0)
^^13^13^2960510^^^^
"^DIC",404.59,404.59,"%D",1,0)
This is the log file of the statuses of the team positions.  Primarily,
"^DIC",404.59,404.59,"%D",2,0)
this is used to determine if a position is active for a certain time
"^DIC",404.59,404.59,"%D",3,0)
period.
"^DIC",404.59,404.59,"%D",4,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",404.59,404.59,"%D",5,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",404.59,404.59,"%D",6,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",404.59,404.59,"%D",7,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",404.59,404.59,"%D",8,0)
official patch to the Scheduling Module.
"^DIC",404.59,404.59,"%D",9,0)
 
"^DIC",404.59,404.59,"%D",10,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",404.59,404.59,"%D",11,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",404.59,404.59,"%D",12,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",404.59,404.59,"%D",13,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",404.59,"B","TEAM POSITION HISTORY",404.59)

**END**
**END**
