EMERGENCY Released SD*5.3*701 SEQ #571
Extracted from mail message
**KIDS**:SD*5.3*701^

**INSTALL NAME**
SD*5.3*701
"BLD",10777,0)
SD*5.3*701^^0^3180619^y
"BLD",10777,1,0)
^^20^20^3180619^^
"BLD",10777,1,1,0)
Emergency patch for GUI 2.0.0.15, aka release 1.5.
"BLD",10777,1,2,0)
 
"BLD",10777,1,3,0)
Changes were made to the following routines:
"BLD",10777,1,4,0)
 
"BLD",10777,1,5,0)
1. SDEC07 - code modified in APPADD to limit the date of future
"BLD",10777,1,6,0)
appointments based on field #2002 (MAX # DAYS FOR FUTURE BOOKING) in the
"BLD",10777,1,7,0)
Hospital Location (#44) file.  In the event that this field is empty,
"BLD",10777,1,8,0)
appointment dates are limited to no more than 390 days in the future.  
"BLD",10777,1,9,0)
Change made to prevent users from creating appointments too far in the 
"BLD",10777,1,10,0)
future that FileMan date conversion routines cannot handle them correctly.
"BLD",10777,1,11,0)
 
"BLD",10777,1,12,0)
2. SDEC57 - code modified in GETLOOPS to prevent an infinite loop 
"BLD",10777,1,13,0)
occurring when an appointment date past 10/14/2115 is encountered as the 
"BLD",10777,1,14,0)
XLFDT date conversion routine fails to convert these far future dates 
"BLD",10777,1,15,0)
correctly.
"BLD",10777,1,16,0)
 
"BLD",10777,1,17,0)
3. SDEC55A - code modified in APPSDGET to limit the earliest search date 
"BLD",10777,1,18,0)
to 10 years ago and the latest search date to 390 days in the future.  
"BLD",10777,1,19,0)
Change made to prevent searching the entire appointment file which 
"BLD",10777,1,20,0)
adversely impacts system performance.
"BLD",10777,4,0)
^9.64PA^^
"BLD",10777,6.3)
3
"BLD",10777,"KRN",0)
^9.67PA^779.2^20
"BLD",10777,"KRN",.4,0)
.4
"BLD",10777,"KRN",.401,0)
.401
"BLD",10777,"KRN",.402,0)
.402
"BLD",10777,"KRN",.403,0)
.403
"BLD",10777,"KRN",.5,0)
.5
"BLD",10777,"KRN",.84,0)
.84
"BLD",10777,"KRN",3.6,0)
3.6
"BLD",10777,"KRN",3.8,0)
3.8
"BLD",10777,"KRN",9.2,0)
9.2
"BLD",10777,"KRN",9.8,0)
9.8
"BLD",10777,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",10777,"KRN",9.8,"NM",1,0)
SDEC07^^0^B200567128
"BLD",10777,"KRN",9.8,"NM",2,0)
SDEC57^^0^B115815412
"BLD",10777,"KRN",9.8,"NM",3,0)
SDEC55A^^0^B88296381
"BLD",10777,"KRN",9.8,"NM","B","SDEC07",1)

"BLD",10777,"KRN",9.8,"NM","B","SDEC55A",3)

"BLD",10777,"KRN",9.8,"NM","B","SDEC57",2)

"BLD",10777,"KRN",19,0)
19
"BLD",10777,"KRN",19.1,0)
19.1
"BLD",10777,"KRN",101,0)
101
"BLD",10777,"KRN",409.61,0)
409.61
"BLD",10777,"KRN",771,0)
771
"BLD",10777,"KRN",779.2,0)
779.2
"BLD",10777,"KRN",870,0)
870
"BLD",10777,"KRN",8989.51,0)
8989.51
"BLD",10777,"KRN",8989.52,0)
8989.52
"BLD",10777,"KRN",8994,0)
8994
"BLD",10777,"KRN","B",.4,.4)

"BLD",10777,"KRN","B",.401,.401)

"BLD",10777,"KRN","B",.402,.402)

"BLD",10777,"KRN","B",.403,.403)

"BLD",10777,"KRN","B",.5,.5)

"BLD",10777,"KRN","B",.84,.84)

"BLD",10777,"KRN","B",3.6,3.6)

"BLD",10777,"KRN","B",3.8,3.8)

"BLD",10777,"KRN","B",9.2,9.2)

"BLD",10777,"KRN","B",9.8,9.8)

"BLD",10777,"KRN","B",19,19)

"BLD",10777,"KRN","B",19.1,19.1)

"BLD",10777,"KRN","B",101,101)

"BLD",10777,"KRN","B",409.61,409.61)

"BLD",10777,"KRN","B",771,771)

"BLD",10777,"KRN","B",779.2,779.2)

"BLD",10777,"KRN","B",870,870)

"BLD",10777,"KRN","B",8989.51,8989.51)

"BLD",10777,"KRN","B",8989.52,8989.52)

"BLD",10777,"KRN","B",8994,8994)

"BLD",10777,"QUES",0)
^9.62^^
"BLD",10777,"REQB",0)
^9.611^^
"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","SDEC07")
0^1^B200567128^B193088585
"RTN","SDEC07",1,0)
SDEC07 ;ALB/SAT - VISTA SCHEDULING RPCS ; 18 Jun 2018  5:31 PM
"RTN","SDEC07",2,0)
 ;;5.3;Scheduling;**627,642,651,658,665,669,671,672,701**;Aug 13, 1993;Build 3
"RTN","SDEC07",3,0)
 ;
"RTN","SDEC07",4,0)
 ;Reference is made to ICR #4837
"RTN","SDEC07",5,0)
 Q
"RTN","SDEC07",6,0)
 ;
"RTN","SDEC07",7,0)
APPADD(SDECY,SDECSTART,SDECEND,DFN,SDECRES,SDECLEN,SDECNOTE,SDECATID,SDECCR,SDMRTC,SDDDT,SDREQBY,SDLAB,PROVIEN,SDID,SDAPTYP,SDSVCP,SDSVCPR,SDCL,SDEKG,SDXRAY,APPTYPE,EESTAT,OVB,SDPARENT,SDEL) ;ADD NEW APPOINTMENT
"RTN","SDEC07",8,0)
 ;
"RTN","SDEC07",9,0)
 N SDAPPTYP
"RTN","SDEC07",10,0)
 N SDECERR,SDECIEN,SDECDEP,SDECI,SDECJ,SDECAPPTI,SDECDJ,SDECRESD,SDECRNOD,SDECC,SDECERR,SDECWKIN
"RTN","SDEC07",11,0)
 N SDECNOEV,SDECDEV,SDECDERR,SDECTMP,SAVESTRT,SDAREQ0
"RTN","SDEC07",12,0)
 N %DT,X,Y,DGQUIET,OBM,RET
"RTN","SDEC07",13,0)
 N SDOE  ;alb/sat 672
"RTN","SDEC07",14,0)
 S SDECNOEV=1 ;Don't execute SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",15,0)
 K ^TMP("SDEC07",$J)
"RTN","SDEC07",16,0)
 S SDECERR=0
"RTN","SDEC07",17,0)
 S SDECI=0
"RTN","SDEC07",18,0)
 S SDECY="^TMP(""SDEC07"","_$J_")"
"RTN","SDEC07",19,0)
 S ^TMP("SDEC07",$J,SDECI)="I00020APPOINTMENTID^T00020ERRORID"_$C(30)
"RTN","SDEC07",20,0)
 S SDECI=SDECI+1
"RTN","SDEC07",21,0)
 ;Check input data for errors
"RTN","SDEC07",22,0)
 S SDAREQ0=$G(^SDEC(409.85,+$P(SDAPTYP,"|",2),0))
"RTN","SDEC07",23,0)
 I $P(SDAREQ0,U,5)="RTC",$P(SDAREQ0,U,17)="C" D ERR(SDECI+1,"SDEC07 Error: This RTC request has been closed.") Q
"RTN","SDEC07",24,0)
 S SAVESTRT=SDECSTART         ;MGH save date/time for consult request
"RTN","SDEC07",25,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC07",26,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC07",27,0)
 S %DT="RXT",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC07",28,0)
 I SDECSTART=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid Start Time") Q
"RTN","SDEC07",29,0)
 S %DT="RXT",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC07",30,0)
 I SDECEND=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",31,0)
 I $L(SDECEND,".")=1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",32,0)
 I SDECSTART>SDECEND S SDECTMP=SDECEND,SDECEND=SDECSTART,SDECSTART=SDECTMP
"RTN","SDEC07",33,0)
 S DFN=$G(DFN)
"RTN","SDEC07",34,0)
 I DFN="" D ERR(SDECI+1,"SDEC07: Patient ID required.") Q
"RTN","SDEC07",35,0)
 I '$D(^DPT(DFN,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Patient ID") Q
"RTN","SDEC07",36,0)
 L +^DPT(DFN):3 I '$T D ERR(SDECI+1,"Patient is being edited. Try again later.") Q   ;alb/sat 665
"RTN","SDEC07",37,0)
 ;Validate Resource
"RTN","SDEC07",38,0)
 S SDECERR=0 K SDECRESD
"RTN","SDEC07",39,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC07",40,0)
 I +SDECRES,'$D(^SDEC(409.831,SDECRES,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",41,0)
 I '+SDECRES,'$D(^SDEC(409.831,"B",SDECRES)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",42,0)
 S SDECRESD=$S(+SDECRES:+SDECRES,1:$O(^SDEC(409.831,"B",SDECRES,0)))
"RTN","SDEC07",43,0)
 S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC07",44,0)
 I SDECRNOD="" D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment -- invalid Resource entry.") Q
"RTN","SDEC07",45,0)
 ;
"RTN","SDEC07",46,0)
 ;  Check that appointment date is not later than clinic permits or 390 days in future if no limit in clinic file (#44).
"RTN","SDEC07",47,0)
 ;
"RTN","SDEC07",48,0)
 ;  wtc 6/18/18 SD*5.3*701
"RTN","SDEC07",49,0)
 ;
"RTN","SDEC07",50,0)
 N PTR44,MAXDAYS S PTR44=$P(SDECRNOD,"^",4),MAXDAYS=390 ;
"RTN","SDEC07",51,0)
 I +PTR44,$D(^SC(PTR44,"SDP")) S MAXDAYS=$P(^("SDP"),"^",2) S:MAXDAYS="" MAXDAYS=390 ;
"RTN","SDEC07",52,0)
 I SDECSTART>$$FMADD^XLFDT($$NOW^XLFDT(),MAXDAYS) D ERR(SDECI+1,"Appointment date too far in the future") Q  ;
"RTN","SDEC07",53,0)
 ;
"RTN","SDEC07",54,0)
 S SDECWKIN=0
"RTN","SDEC07",55,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",56,0)
 I SDECATID="WALKIN" S SDECWKIN=1
"RTN","SDEC07",57,0)
 I SDECATID'?.N&(SDECATID'="WALKIN") S SDECATID=""
"RTN","SDEC07",58,0)
 ;validate appointment length - if passed in, must be 5-120
"RTN","SDEC07",59,0)
 S SDECLEN=$G(SDECLEN)
"RTN","SDEC07",60,0)
 ;I SDECLEN'="",(+SDECLEN<5)!(SDECLEN>120) D ERR(SDECI+1,"SDEC07 Error: Appointment length must be between 5 - 120.") Q
"RTN","SDEC07",61,0)
 ;validate MTRC flag (optional)
"RTN","SDEC07",62,0)
 S SDMRTC=$$UP^XLFSTR($G(SDMRTC))
"RTN","SDEC07",63,0)
 S SDMRTC=$S(SDMRTC="TRUE":1,1:0)
"RTN","SDEC07",64,0)
 ;validate desired date of appt (optional)
"RTN","SDEC07",65,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",66,0)
 I SDDDT'="" S %DT="" S X=$P(SDDDT,"@",1) D ^%DT S SDDDT=Y I Y=-1 S SDDDT=""
"RTN","SDEC07",67,0)
 I SDDDT="",SDECATID'="WALKIN" S SDDDT=$P(SDECSTART,".",1)
"RTN","SDEC07",68,0)
 ;validate requested by
"RTN","SDEC07",69,0)
 S SDREQBY=$$UP^XLFSTR($G(SDREQBY))
"RTN","SDEC07",70,0)
 I SDREQBY'="" S SDREQBY=$S(SDREQBY="PROVIDER":1,SDREQBY="PATIENT":2,1:0)
"RTN","SDEC07",71,0)
 ;validate lab date/time (optional)
"RTN","SDEC07",72,0)
 S SDLAB=$G(SDLAB)
"RTN","SDEC07",73,0)
 I SDLAB'="" S %DT="T" S X=SDLAB D ^%DT S SDLAB=Y I Y=-1 S SDLAB=""
"RTN","SDEC07",74,0)
 ;validate EKG date/time (optional)
"RTN","SDEC07",75,0)
 S SDEKG=$G(SDEKG)
"RTN","SDEC07",76,0)
 I SDEKG'="" S %DT="T" S X=SDEKG D ^%DT S SDEKG=Y I Y=-1 S SDEKG=""
"RTN","SDEC07",77,0)
 ;validate XRAY date/time (optional)
"RTN","SDEC07",78,0)
 S SDXRAY=$G(SDXRAY)
"RTN","SDEC07",79,0)
 I SDXRAY'="" S %DT="T" S X=SDXRAY D ^%DT S SDXRAY=Y I Y=-1 S SDXRAY=""
"RTN","SDEC07",80,0)
 ;validate provider
"RTN","SDEC07",81,0)
 I '$D(^VA(200,+$G(PROVIEN),0)) S PROVIEN=""
"RTN","SDEC07",82,0)
 S SDID=$G(SDID)
"RTN","SDEC07",83,0)
 ;validate clinic
"RTN","SDEC07",84,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",85,0)
 I SDCL'="" I '$D(^SC(SDCL,0)) S SDCL=""
"RTN","SDEC07",86,0)
 I SDCL="" S SDCL=$$GET1^DIQ(409.831,SDECRESD_",",.04,"I")   ;clinic ID   ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC07",87,0)
 S OVB=+$G(OVB)  ;alb/sat 665
"RTN","SDEC07",88,0)
 I 'OVB S OBM=$$OBM1^SDEC57(SDCL,SDECSTART,SDMRTC,,+SDECWKIN) I OBM'="",+OBM'=1 S SDECAPPTID=0 D ERR(SDECI+1,"OBM"_OBM) Q   ;alb/sat 658 check if overbook ;alb/sat 665 clear SDECAPPTID
"RTN","SDEC07",89,0)
 ;validate appt request type (required)
"RTN","SDEC07",90,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",91,0)
 I SDAPTYP'="" D
"RTN","SDEC07",92,0)
 .I $P(SDAPTYP,"|",1)="E" I '$D(^SDWL(409.3,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",93,0)
 .I $P(SDAPTYP,"|",1)="R" I '$D(^SD(403.5,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",94,0)
 .I $P(SDAPTYP,"|",1)="C" I '$D(^GMR(123,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""  ;ICR 4837
"RTN","SDEC07",95,0)
 .I $P(SDAPTYP,"|",1)="A" I '$D(^SDEC(409.85,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",96,0)
 .;I SDAPTYP="" D ERR(SDECI+1,"SDEC07 Error: Invalid appointment request type.") Q   ;support for multiple HOSPITAL LOCATIONs are implemented in SDEC RESOURCE
"RTN","SDEC07",97,0)
 I SDCL="" D
"RTN","SDEC07",98,0)
 .S:$P(SDAPTYP,"|",1)="E" SDCL=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",13.2,"I")
"RTN","SDEC07",99,0)
 .S:$P(SDAPTYP,"|",1)="R" SDCL=$$GET1^DIQ(403.5,$P(SDAPTYP,"|",2)_",",4.5,"I")
"RTN","SDEC07",100,0)
 .S:$P(SDAPTYP,"|",1)="C" SDCL=$P($G(^GMR(123,+$P(SDAPTYP,"|",2),0)),U,4)       ;ICR 4837 ICR states 'Zero node read into variable'
"RTN","SDEC07",101,0)
 .S:$P(SDAPTYP,"|",1)="A" SDCL=$$GET1^DIQ(409.85,$P(SDAPTYP,"|",2)_",",8,"I")
"RTN","SDEC07",102,0)
 I SDCL="" D ERR(SDECI+1,"SDEC07 Error: Invalid clinic ID.") Q
"RTN","SDEC07",103,0)
 I $$INACTIVE^SDEC32(SDCL) D ERR(SDECI+1,"SDEC07 Error: "_$$GET1^DIQ(44,SDCL_",",.01)_" is an inactive clinic.") Q
"RTN","SDEC07",104,0)
 ;validate service connected
"RTN","SDEC07",105,0)
 S SDSVCPR=$G(SDSVCPR)
"RTN","SDEC07",106,0)
 I SDSVCPR'="" S:(+SDSVCPR<0)!(+SDSVCPR>100) SDSVCPR=""
"RTN","SDEC07",107,0)
 S SDSVCP=$G(SDSVCP)
"RTN","SDEC07",108,0)
 S SDSVCP=$S(SDSVCP=0:0,SDSVCP="NO":0,SDSVCP=1:1,SDSVCP="YES":1,1:"")
"RTN","SDEC07",109,0)
 ;validate note
"RTN","SDEC07",110,0)
 S SDECNOTE=$G(SDECNOTE) S:SDECNOTE'="" SDECNOTE=$TR($E(SDECNOTE,1,150),"^"," ")   ;alb/sat 658 - only use 1st 150 characters
"RTN","SDEC07",111,0)
 ;validate APPTYPE
"RTN","SDEC07",112,0)
 S APPTYPE=$G(APPTYPE) I APPTYPE'="",'$D(^SD(409.1,+APPTYPE,0)) S APPTYPE=""
"RTN","SDEC07",113,0)
 ;validate Patient Status (EESTAT)
"RTN","SDEC07",114,0)
 S EESTAT=$G(EESTAT)
"RTN","SDEC07",115,0)
 I EESTAT="" D
"RTN","SDEC07",116,0)
 .I $P(SDAPTYP,"|",1)="E" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",27,"I")
"RTN","SDEC07",117,0)
 .I $P(SDAPTYP,"|",1)="A" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",.02,"I")
"RTN","SDEC07",118,0)
 S EESTAT=$S(EESTAT="N":"N",EESTAT="NEW":"N",EESTAT="E":"E",EESTAT="ESTABLISHED":"E",1:"")
"RTN","SDEC07",119,0)
 ;validate OVB (overbook)
"RTN","SDEC07",120,0)
 S OVB=+$G(OVB)
"RTN","SDEC07",121,0)
 I 'OVB D
"RTN","SDEC07",122,0)
 .D OVBOOK^SDEC(.RET,SDCL,SDECSTART,SDECRES)
"RTN","SDEC07",123,0)
 D
"RTN","SDEC07",124,0)
 .S SDAPPTYP=+APPTYPE
"RTN","SDEC07",125,0)
 .I 'SDAPPTYP D
"RTN","SDEC07",126,0)
 ..I $P(SDAPTYP,"|",1)="E" S SDAPPTYP=$$GET1^DIQ(409.3,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",127,0)
 ..I $P(SDAPTYP,"|",1)="A" S SDAPPTYP=$$GET1^DIQ(409.85,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",128,0)
 ..I $P(SDAPTYP,"|",1)="C",+APPTYPE S SDAPPTYP=+APPTYPE
"RTN","SDEC07",129,0)
 .S:'SDAPPTYP SDAPPTYP=$O(^SD(409.1,"B","REGULAR",0))
"RTN","SDEC07",130,0)
 ;Lock SDEC node
"RTN","SDEC07",131,0)
 L +^SDEC(409.84,DFN):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") Q
"RTN","SDEC07",132,0)
 ;
"RTN","SDEC07",133,0)
 ;TSTART
"RTN","SDEC07",134,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,1,+SDECLEN)  ;alb/sat 665 add SDECLEN
"RTN","SDEC07",135,0)
 I 'SDECAPPTID D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment to SDEC APPOINTMENT file.") Q
"RTN","SDEC07",136,0)
 ;Save the Appointment and start a new transaction that will get rolled back if there's an error
"RTN","SDEC07",137,0)
 ;TCOMMIT
"RTN","SDEC07",138,0)
 ;TSTART
"RTN","SDEC07",139,0)
 ; call chart request
"RTN","SDEC07",140,0)
 S SDECDEV=""  ;$$GET1^DIQ(9009020.2,$$DIV^SDECU,.05) I SDECDEV="" S SDECDERR="SDEC07 Error: No file room printer is defined for the chart request."
"RTN","SDEC07",141,0)
 I SDECATID="WALKIN",$G(SDECCR),$G(SDECDEV)'="" S DGQUIET=1 D WISD^SDECRT(DFN,$P(SDECSTART,"."),"",SDECDEV)
"RTN","SDEC07",142,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",143,0)
 ;
"RTN","SDEC07",144,0)
 ;Create Appointment in VistA ;TODO: have this call APPVISTA^SDEC07B
"RTN","SDEC07",145,0)
 I +SDCL,$D(^SC(SDCL,0)) D  I +SDECERR D ERR(SDECI+1,$P(SDECERR,U,2))
"RTN","SDEC07",146,0)
 . S SDECC("PAT")=DFN
"RTN","SDEC07",147,0)
 . S SDECC("CLN")=SDCL
"RTN","SDEC07",148,0)
 . S SDECC("TYP")=$S(+SDECWKIN:4,SDAPPTYP=1:1,1:3)   ;3 for scheduled appts, 4 for walkins
"RTN","SDEC07",149,0)
 . S SDECC("COL")=$S(SDAPPTYP=7:1,1:"")   ;collateral visit if appointment type is COLLATERAL OF VET.
"RTN","SDEC07",150,0)
 . S SDECC("APT")=SDAPPTYP
"RTN","SDEC07",151,0)
 . S SDECC("ADT")=SDECSTART
"RTN","SDEC07",152,0)
 . S SDECC("LEN")=SDECLEN
"RTN","SDEC07",153,0)
 . S SDECC("OI")=$E($G(SDECNOTE),1,150) ;File 44 has 150 character limit on OTHER field
"RTN","SDEC07",154,0)
 . S SDECC("OI")=$TR(SDECC("OI"),";"," ") ;No semicolons allowed
"RTN","SDEC07",155,0)
 . S SDECC("OI")=$$STRIP(SDECC("OI")) ;Strip control characters from note
"RTN","SDEC07",156,0)
 . S SDECC("RES")=SDECRESD
"RTN","SDEC07",157,0)
 . S SDECC("USR")=DUZ
"RTN","SDEC07",158,0)
 . S SDECC("MTR")=$G(SDMRTC)
"RTN","SDEC07",159,0)
 . S SDECC("DDT")=SDDDT
"RTN","SDEC07",160,0)
 . S SDECC("REQ")=SDREQBY
"RTN","SDEC07",161,0)
 . S SDECC("LAB")=SDLAB
"RTN","SDEC07",162,0)
 . S SDECC("XRA")=SDXRAY
"RTN","SDEC07",163,0)
 . S SDECC("EKG")=SDEKG
"RTN","SDEC07",164,0)
 . S SDECC("OVB")=+OVB
"RTN","SDEC07",165,0)
 . S SDECC("ELG")=SDEL
"RTN","SDEC07",166,0)
 . S:$P(SDAPTYP,"|",1)="C" SDECC("CON")=$P(SDAPTYP,"|",2)
"RTN","SDEC07",167,0)
 . S SDECERR=$$MAKE^SDEC07B(.SDECC)
"RTN","SDEC07",168,0)
 . Q:SDECERR
"RTN","SDEC07",169,0)
 . ;Update Clinic availability
"RTN","SDEC07",170,0)
 . D AVUPDT(SDCL,SDECSTART,SDECLEN)
"RTN","SDEC07",171,0)
 . ;L
"RTN","SDEC07",172,0)
 . Q
"RTN","SDEC07",173,0)
 ;update wait list
"RTN","SDEC07",174,0)
 I $P(SDAPTYP,"|",1)="E" D EWL^SDEC07A($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCPR,SDSVCP,,SDAPPTYP)  ;alb/sat 658 do not pass note
"RTN","SDEC07",175,0)
 ;update appt request
"RTN","SDEC07",176,0)
 I $P(SDAPTYP,"|",1)="A" D
"RTN","SDEC07",177,0)
 .D UPDATE^SDECAR2($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCPR,SDSVCP,,SDAPPTYP)  ;alb/sat 658 do not pass note
"RTN","SDEC07",178,0)
 .I $G(SDMRTC),$G(SDPARENT) D AR433^SDECAR2(SDPARENT,SDECAPPTID_"~"_$P(SDAPTYP,"|",2))
"RTN","SDEC07",179,0)
 .D:$G(SDPARENT) AR438^SDECAR2($P(SDAPTYP,"|",2),SDPARENT)
"RTN","SDEC07",180,0)
 N SDT S SDT=SDECSTART
"RTN","SDEC07",181,0)
 ;add entry to OUTPATIENT ENCOUNTER file (#409.68)  ;alb/sat 672
"RTN","SDEC07",182,0)
 I $$NEW^SDPCE(SDT) D
"RTN","SDEC07",183,0)
 .N SDCOED
"RTN","SDEC07",184,0)
 .S SDOE=$$GETAPT^SDVSIT2(DFN,SDT,SDCL)
"RTN","SDEC07",185,0)
 ;
"RTN","SDEC07",186,0)
 ;Return Recordset
"RTN","SDEC07",187,0)
 ;TCOMMIT
"RTN","SDEC07",188,0)
 L -^SDEC(409.84,DFN)
"RTN","SDEC07",189,0)
 L -^DPT(DFN)
"RTN","SDEC07",190,0)
 S SDECI=SDECI+1
"RTN","SDEC07",191,0)
 S ^TMP("SDEC07",$J,SDECI)=SDECAPPTID_"^"_$G(SDECDERR)_$C(30)
"RTN","SDEC07",192,0)
 S SDECI=SDECI+1
"RTN","SDEC07",193,0)
 S ^TMP("SDEC07",$J,SDECI)=$C(31)
"RTN","SDEC07",194,0)
 Q
"RTN","SDEC07",195,0)
 ;
"RTN","SDEC07",196,0)
STRIP(SDECZ) ;Replace control characters with spaces
"RTN","SDEC07",197,0)
 N SDECI
"RTN","SDEC07",198,0)
 F SDECI=1:1:$L(SDECZ) I (32>$A($E(SDECZ,SDECI))) S SDECZ=$E(SDECZ,1,SDECI-1)_" "_$E(SDECZ,SDECI+1,999)
"RTN","SDEC07",199,0)
 Q SDECZ
"RTN","SDEC07",200,0)
 ;
"RTN","SDEC07",201,0)
 ;ADD SDEC APPOINTMENT ENTRY
"RTN","SDEC07",202,0)
SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,SDF,SDECLEN) ;alb/sat 665 add SDECLEN
"RTN","SDEC07",203,0)
 ;SDF       - (optional) flags
"RTN","SDEC07",204,0)
 ;                       1. called from GUI (update consult only if called from GUI)
"RTN","SDEC07",205,0)
 ;Returns ien in SDECAPPT or 0 if failed
"RTN","SDEC07",206,0)
 ;called from SDEC APPADD rpc and from VistA via SDM1A
"RTN","SDEC07",207,0)
 ;Create entry in SDEC APPOINTMENT
"RTN","SDEC07",208,0)
 N SDIEN,SDECAPPTID,SDECFDA,SDECIEN,SDECMSG,SL,X
"RTN","SDEC07",209,0)
 S SDECSTART=$G(SDECSTART)
"RTN","SDEC07",210,0)
 S SAVESTRT=$G(SAVESTRT),SDECRES=$G(SDECRES)         ;MGH save date/time for consult request
"RTN","SDEC07",211,0)
 S DFN=$G(DFN)
"RTN","SDEC07",212,0)
 S SDECRESD=$G(SDECRESD)
"RTN","SDEC07",213,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",214,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",215,0)
 S SDID=$G(SDID)
"RTN","SDEC07",216,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",217,0)
 S SDAPPTYP=$G(SDAPPTYP)
"RTN","SDEC07",218,0)
 S PROVIEN=$G(PROVIEN)
"RTN","SDEC07",219,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",220,0)
 S SDECEND=$G(SDECEND)
"RTN","SDEC07",221,0)
 ;alb/sat 665 begin modification
"RTN","SDEC07",222,0)
 S SDECLEN=$G(SDECLEN)
"RTN","SDEC07",223,0)
 I SDECLEN="",SDECEND="" S SDECLEN=+$G(^SC(SDCL,"SL")) S:'+SDECLEN SDECLEN=30 S SDECEND=$$FMADD^XLFDT(SDECSTART,,,+SDECLEN)   ;no length or end date/time
"RTN","SDEC07",224,0)
 I SDECLEN="",SDECEND'="" S SDECLEN=$$FMDIFF^XLFDT(SDECEND,SDECSTART,2)\60  ;no length
"RTN","SDEC07",225,0)
 I SDECLEN'="",SDECEND="" S SDECEND=$$FMADD^XLFDT(SDECSTART,,,+SDECLEN)  ;no end date/time
"RTN","SDEC07",226,0)
 ;alb/sat 665 end modification
"RTN","SDEC07",227,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07",228,0)
 S SDF=$G(SDF,0)
"RTN","SDEC07",229,0)
 I PROVIEN="" D
"RTN","SDEC07",230,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC07",231,0)
 S SDIEN=$$APPTGET^SDECUTL(DFN,SDECSTART,SDCL)
"RTN","SDEC07",232,0)
 S SDIEN=$S(SDIEN'="":SDIEN_",",1:"+1,")
"RTN","SDEC07",233,0)
 S SDECFDA(409.84,SDIEN,.01)=SDECSTART
"RTN","SDEC07",234,0)
 S SDECFDA(409.84,SDIEN,.02)=SDECEND
"RTN","SDEC07",235,0)
 S SDECFDA(409.84,SDIEN,.05)=DFN
"RTN","SDEC07",236,0)
 S:+SDAPPTYP SDECFDA(409.84,SDIEN,.06)=SDAPPTYP
"RTN","SDEC07",237,0)
 ;S:SDECATID?.N SDECFDA(409.84,SDIEN,.06)=SDECATID
"RTN","SDEC07",238,0)
 S SDECFDA(409.84,SDIEN,.07)=SDECRESD
"RTN","SDEC07",239,0)
 S SDECFDA(409.84,SDIEN,.08)=$G(DUZ)
"RTN","SDEC07",240,0)
 S SDECFDA(409.84,SDIEN,.09)=$P($$NOW^XLFDT,".",1)
"RTN","SDEC07",241,0)
 S SDECFDA(409.84,SDIEN,.1)=""
"RTN","SDEC07",242,0)
 S SDECFDA(409.84,SDIEN,.101)=""
"RTN","SDEC07",243,0)
 S SDECFDA(409.84,SDIEN,.102)=""
"RTN","SDEC07",244,0)
 S SDECFDA(409.84,SDIEN,.11)=""
"RTN","SDEC07",245,0)
 S SDECFDA(409.84,SDIEN,.12)=""
"RTN","SDEC07",246,0)
 S SDECFDA(409.84,SDIEN,.121)=""
"RTN","SDEC07",247,0)
 S SDECFDA(409.84,SDIEN,.122)=""
"RTN","SDEC07",248,0)
 S:SDECATID="WALKIN" SDECFDA(409.84,SDIEN,.13)="y"
"RTN","SDEC07",249,0)
 S:PROVIEN'="" SDECFDA(409.84,SDIEN,.16)=PROVIEN
"RTN","SDEC07",250,0)
 S SDECFDA(409.84,SDIEN,.17)=""
"RTN","SDEC07",251,0)
 S:$G(SDECLEN)'="" SDECFDA(409.84,SDIEN,.18)=SDECLEN
"RTN","SDEC07",252,0)
 S SDECFDA(409.84,SDIEN,.2)=SDDDT
"RTN","SDEC07",253,0)
 S:$G(SDID)'="" SDECFDA(409.84,SDIEN,.21)=SDID
"RTN","SDEC07",254,0)
 S:SDAPTYP'="" SDECFDA(409.84,SDIEN,.22)=$P(SDAPTYP,"|",2)_";"_$S($P(SDAPTYP,"|",1)="E":"SDWL(409.3,",$P(SDAPTYP,"|",1)="C":"GMR(123,",$P(SDAPTYP,"|",1)="R":"SD(403.5,",$P(SDAPTYP,"|",1)="A":"SDEC(409.85,",1:"")
"RTN","SDEC07",255,0)
 S:$G(EESTAT)'="" SDECFDA(409.84,SDIEN,.23)=EESTAT
"RTN","SDEC07",256,0)
 K SDECIEN,SDECMSG
"RTN","SDEC07",257,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC07",258,0)
 S SDECAPPTID=$S(SDIEN'="+1,":+SDIEN,1:+$G(SDECIEN(1)))
"RTN","SDEC07",259,0)
 K SDECMSG
"RTN","SDEC07",260,0)
 I SDECNOTE="" D WP^DIE(409.84,$S(+$G(SDECAPPTID):SDECAPPTID_",",1:SDIEN_","),1,"","@","SDECMSG")
"RTN","SDEC07",261,0)
 I SDECNOTE'="" N ARR D WP^SDECUTL(.ARR,SDECNOTE) D WP^DIE(409.84,$S(+$G(SDECAPPTID):SDECAPPTID_",",1:SDIEN_","),1,"","ARR","SDECMSG")
"RTN","SDEC07",262,0)
 I SDECAPPTID'="" D
"RTN","SDEC07",263,0)
 .I $P(SDAPTYP,"|",1)="C",SDF D
"RTN","SDEC07",264,0)
 ..D REQSET^SDEC07A($P(SDAPTYP,"|",2),PROVIEN,"",1,"",SDECNOTE,SAVESTRT,SDECRES)   ;MGH added 3 parameters to this call
"RTN","SDEC07",265,0)
 Q SDECAPPTID
"RTN","SDEC07",266,0)
 ;
"RTN","SDEC07",267,0)
SDECWP(SDECAPPTID,SDECNOTE) ;
"RTN","SDEC07",268,0)
 ;Add WP field
"RTN","SDEC07",269,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC07",270,0)
 I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC07",271,0)
 I $D(SDECNOTE(.5)) D
"RTN","SDEC07",272,0)
 . D WP^DIE(409.84,SDECAPPTID_",",1,"","SDECNOTE","SDECMSG")
"RTN","SDEC07",273,0)
 Q
"RTN","SDEC07",274,0)
 ;
"RTN","SDEC07",275,0)
ADDEVT(DFN,SDECSTART,SDECSC,SDCLA) ;EP
"RTN","SDEC07",276,0)
 ;Called by SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",277,0)
 ;SDECSC=IEN of clinic in ^SC
"RTN","SDEC07",278,0)
 ;SDCLA=IEN for ^SC(SDECSC,"S",SDECSTART,1,SDCLA). Use to get Length & Note
"RTN","SDEC07",279,0)
 ;
"RTN","SDEC07",280,0)
 N SDECNOD,SDECLEN,SDECAPPTID,SDECNODP,SDECWKIN,SDECRES
"RTN","SDEC07",281,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC07",282,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0))
"RTN","SDEC07",283,0)
 Q:'+$G(SDECRES)
"RTN","SDEC07",284,0)
 S SDECNOD=$G(^SC(SDECSC,"S",SDECSTART,1,SDCLA,0))
"RTN","SDEC07",285,0)
 Q:SDECNOD=""
"RTN","SDEC07",286,0)
 S SDECNODP=$G(^DPT(DFN,"S",SDECSTART,0))
"RTN","SDEC07",287,0)
 S SDECWKIN=""
"RTN","SDEC07",288,0)
 S:$P(SDECNODP,U,7)=4 SDECWKIN="WALKIN" ;Purpose of Visit field of DPT Appointment subfile
"RTN","SDEC07",289,0)
 S SDECLEN=$P(SDECNOD,U,2)
"RTN","SDEC07",290,0)
 Q:'+SDECLEN
"RTN","SDEC07",291,0)
 S SDECEND=$$FMADD^XLFDT(SDECSTART,0,0,SDECLEN,0)
"RTN","SDEC07",292,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRES,SDECWKIN,,,,,SDECSC,,,,,,1,+SDECLEN)  ;alb/sat 665 add SDECLEN
"RTN","SDEC07",293,0)
 Q:'+SDECAPPTID
"RTN","SDEC07",294,0)
 S SDECNOTE=$P(SDECNOD,U,4)
"RTN","SDEC07",295,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",296,0)
 D ADDEVT3(SDECRES)
"RTN","SDEC07",297,0)
 Q
"RTN","SDEC07",298,0)
 ;
"RTN","SDEC07",299,0)
ADDEVT3(SDECRES) ;
"RTN","SDEC07",300,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC07",301,0)
 Q
"RTN","SDEC07",302,0)
 ;
"RTN","SDEC07",303,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC07",304,0)
 S SDECI=SDECI+1
"RTN","SDEC07",305,0)
 S SDECERR=$TR(SDECERR,"^","~")
"RTN","SDEC07",306,0)
 S ^TMP("SDEC07",$J,SDECI)=$G(SDECAPPTID,0)_"^"_SDECERR_$C(30)
"RTN","SDEC07",307,0)
 S SDECI=SDECI+1
"RTN","SDEC07",308,0)
 S ^TMP("SDEC07",$J,SDECI)=$C(31)
"RTN","SDEC07",309,0)
 L
"RTN","SDEC07",310,0)
 Q
"RTN","SDEC07",311,0)
 ;
"RTN","SDEC07",312,0)
ETRAP ;EP Error trap entry
"RTN","SDEC07",313,0)
 D ^%ZTER
"RTN","SDEC07",314,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC07",315,0)
 S SDECI=SDECI+1
"RTN","SDEC07",316,0)
 D ERR(SDECI,"SDEC07 Error")
"RTN","SDEC07",317,0)
 Q
"RTN","SDEC07",318,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC07",319,0)
 ;
"RTN","SDEC07",320,0)
DOW N SDTMP S SDTMP=$E(X,1,3),Y=$E(X,4,5),Y=Y>2&'(SDTMP#4)+$E("144025036146",Y)
"RTN","SDEC07",321,0)
 F SDTMP=SDTMP:-1:281 S Y=SDTMP#4=1+1+Y
"RTN","SDEC07",322,0)
 S Y=$E(X,6,7)+Y#7
"RTN","SDEC07",323,0)
 Q
"RTN","SDEC07",324,0)
 ;
"RTN","SDEC07",325,0)
AVUPDT(SDCL,SDECSTART,SDECLEN) ;Update Clinic availability
"RTN","SDEC07",326,0)
 ;SEE SDM1
"RTN","SDEC07",327,0)
 N %,ABORT,SDNOT,Y,DFN,SDVAL
"RTN","SDEC07",328,0)
 N SL,STARTDAY,X,SC,SB,HSI,SI,STR,SDDIF,SDMAX,SDDATE,SDDMAX,SDSDATE,CCXN,MXOK,COV,SDPROG
"RTN","SDEC07",329,0)
 N X1,SDEDT,X2,SD,SM,SS,S,SDLOCK,ST,I,SDECINC
"RTN","SDEC07",330,0)
 S Y=SDCL   ;,DFN=DFN  ;renamed SDECPATID to DFN
"RTN","SDEC07",331,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDEC07",332,0)
 ;Determine maximum days for scheduling
"RTN","SDEC07",333,0)
 S SDMAX(1)=$P($G(^SC(+SC,"SDP")),U,2) S:'SDMAX(1) SDMAX(1)=365
"RTN","SDEC07",334,0)
 S (SDMAX,SDDMAX)=$$FMADD^XLFDT(DT,SDMAX(1))
"RTN","SDEC07",335,0)
 S SDDATE=SDECSTART
"RTN","SDEC07",336,0)
 S SDSDATE=SDDATE,SDDATE=SDDATE\1
"RTN","SDEC07",337,0)
1 ;L  Q:$D(SDXXX)  S CCXN=0 K MXOK,COV,SDPROT Q:DFN<0  S SC=+SC
"RTN","SDEC07",338,0)
 ;Q:$D(SDXXX)
"RTN","SDEC07",339,0)
 S CCXN=0 K MXOK,COV,SDPROT Q:$G(DFN)<0  S SC=+SC
"RTN","SDEC07",340,0)
 S X1=DT,SDEDT=365 S:$D(^SC(SC,"SDP")) SDEDT=$P(^SC(SC,"SDP"),"^",2)
"RTN","SDEC07",341,0)
 S X2=SDEDT D C^%DTC S SDEDT=X
"RTN","SDEC07",342,0)
 S Y=SDECSTART
"RTN","SDEC07",343,0)
EN1 S (X,SD)=Y,SM=0 D DOW
"RTN","SDEC07",344,0)
S I '$D(^SC(SC,"ST",$P(SD,"."),1)) S SS=+$O(^SC(+SC,"T"_Y,SD)) Q:SS'>0  Q:^(SS,1)=""  S ^SC(+SC,"ST",$P(SD,"."),1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SD,6,7)_$J("",SI+SI-6)_^(1),^(0)=$P(SD,".")
"RTN","SDEC07",345,0)
 S S=SDECLEN
"RTN","SDEC07",346,0)
 ;Check if SDECLEN evenly divisible by appointment length
"RTN","SDEC07",347,0)
 S SDVAL=$P(SL,U)
"RTN","SDEC07",348,0)
 I SDECLEN<SDVAL S SDECLEN=SDVAL
"RTN","SDEC07",349,0)
 I SDECLEN#SDVAL'=0 D
"RTN","SDEC07",350,0)
 . S SDECINC=SDECLEN\SDVAL
"RTN","SDEC07",351,0)
 . S SDECINC=SDECINC+1
"RTN","SDEC07",352,0)
 . S SDECLEN=SDVAL*SDECINC
"RTN","SDEC07",353,0)
 S SL=S_U_$P(SL,U,2,99)
"RTN","SDEC07",354,0)
SC S SDLOCK=$S('$D(SDLOCK):1,1:SDLOCK+1) Q:SDLOCK>9
"RTN","SDEC07",355,0)
 L +^SC(SC,"ST",$P(SD,"."),1):5 G:'$T SC
"RTN","SDEC07",356,0)
 S SDLOCK=0,S=^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",357,0)
 S I=SD#1-SB*100,ST=I#1*SI\.6+($P(I,".")*SI),SS=SL*HSI/60*SDDIF+ST+ST
"RTN","SDEC07",358,0)
 I (I<1!'$F(S,"["))&(S'["CAN") L -^SC(SC,"ST",$P(SD,"."),1) Q
"RTN","SDEC07",359,0)
 I SM<7 S %=$F(S,"[",SS-1) S:'%!($P(SL,"^",6)<3) %=999 I $F(S,"]",SS)'<%!(SDDIF=2&$E(S,ST+ST+1,SS-1)["[") S SM=7
"RTN","SDEC07",360,0)
 ;
"RTN","SDEC07",361,0)
SP I ST+ST>$L(S),$L(S)<80 S S=S_" " G SP
"RTN","SDEC07",362,0)
 S SDNOT=1
"RTN","SDEC07",363,0)
 S ABORT=0
"RTN","SDEC07",364,0)
 F I=ST+ST:SDDIF:SS-SDDIF D  Q:ABORT
"RTN","SDEC07",365,0)
 . S ST=$E(S,I+1) S:ST="" ST=" "
"RTN","SDEC07",366,0)
 . S Y=$E(STR,$F(STR,ST)-2)
"RTN","SDEC07",367,0)
 . I S["CAN"!(ST="X"&($D(^SC(+SC,"ST",$P(SD,"."),"CAN")))) S ABORT=1 Q
"RTN","SDEC07",368,0)
 . I Y="" S ABORT=1 Q
"RTN","SDEC07",369,0)
 . S:Y'?1NL&(SM<6) SM=6 S ST=$E(S,I+2,999) S:ST="" ST=" " S S=$E(S,1,I)_Y_ST
"RTN","SDEC07",370,0)
 . Q
"RTN","SDEC07",371,0)
 S ^SC(SC,"ST",$P(SD,"."),1)=S
"RTN","SDEC07",372,0)
 L -^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",373,0)
 Q
"RTN","SDEC07",374,0)
 ;
"RTN","SDEC07",375,0)
ERROR ;
"RTN","SDEC07",376,0)
 D ERR1("Error")
"RTN","SDEC07",377,0)
 Q
"RTN","SDEC07",378,0)
 ;
"RTN","SDEC07",379,0)
ERR1(SDECERR) ;Error processing
"RTN","SDEC07",380,0)
 S SDECI=SDECI+1
"RTN","SDEC07",381,0)
 S ^TMP("SDEC07",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC07",382,0)
 S SDECI=SDECI+1
"RTN","SDEC07",383,0)
 S ^TMP("SDEC07",$J,SDECI)=$C(31)
"RTN","SDEC55A")
0^3^B88296381^B80956414
"RTN","SDEC55A",1,0)
SDEC55A ;ALB/SAT - VISTA SCHEDULING RPCS ; 18 Jun 2018  4:04 PM
"RTN","SDEC55A",2,0)
 ;;5.3;Scheduling;**627,671,701**;Aug 13, 1993;Build 3
"RTN","SDEC55A",3,0)
 ;
"RTN","SDEC55A",4,0)
 Q
"RTN","SDEC55A",5,0)
 ;
"RTN","SDEC55A",6,0)
APPSDGET(SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN)  ;GET appointment data from SDEC APPOINTMENT file 409.84
"RTN","SDEC55A",7,0)
 ;APPSDGET(.SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN)  external parameter tag is in SDEC
"RTN","SDEC55A",8,0)
 ;INPUT:
"RTN","SDEC55A",9,0)
 ; 1. MAXREC = (optional) Max records returned default to all
"RTN","SDEC55A",10,0)
 ; 2. LASTSUB = (optional) last subscripts from previous call
"RTN","SDEC55A",11,0)
 ; 3. SDBEG = (optional) Begin Date range in external format
"RTN","SDEC55A",12,0)
 ;                    Default to all dates
"RTN","SDEC55A",13,0)
 ; 4. SDEND = (optional) End Date range in external format
"RTN","SDEC55A",14,0)
 ;                    Default to all dates
"RTN","SDEC55A",15,0)
 ; 5. NOTEFLG = (optional) 1=do NOT return NOTE text
"RTN","SDEC55A",16,0)
 ;                      0=return NOTE text
"RTN","SDEC55A",17,0)
 ; 6. SDRES = (optional) Resource ID pointer to SDEC RESOURCE file
"RTN","SDEC55A",18,0)
 ;                    Default to all resources
"RTN","SDEC55A",19,0)
 ; 7. DFN = (optional) pointer to PATIENT file 2
"RTN","SDEC55A",20,0)
 ;                  Default to all patients
"RTN","SDEC55A",21,0)
 ; 8. SDID = (optional) external ID (free-text)
"RTN","SDEC55A",22,0)
 ;                   Default to all external IDs
"RTN","SDEC55A",23,0)
 ; 9. SDIEN = (optional) pointer to SDEC APPOINTMENT file 409.84
"RTN","SDEC55A",24,0)
 ;RETURN:
"RTN","SDEC55A",25,0)
 ; Successful Return:
"RTN","SDEC55A",26,0)
 ; Global Array in which each array entry contains data from the
"RTN","SDEC55A",27,0)
 ; SDEC APPOINTMENT file 409.84.
"RTN","SDEC55A",28,0)
 ; Data is separated by ^:
"RTN","SDEC55A",29,0)
 ; 1. IEN - pointer to SDEC APPOINTMENT file
"RTN","SDEC55A",30,0)
 ; 2. DATE1 - STARTTIME in external format   .01
"RTN","SDEC55A",31,0)
 ; 3. DATE2 - ENDTIME in external format     .02
"RTN","SDEC55A",32,0)
 ; 4. CHECKIN_TIME - CHECKIN date/time in external format   .03
"RTN","SDEC55A",33,0)
 ; 5. DATE - CHECK IN TIME ENTERED - date/time in external format   .04
"RTN","SDEC55A",34,0)
 ; 6. DFN - Patient ID      .05
"RTN","SDEC55A",35,0)
 ; 7. NAME - Patient NAME   .05
"RTN","SDEC55A",36,0)
 ; 8. SDEC_ACCESS_TYPE_IEN - <not used>
"RTN","SDEC55A",37,0)
 ; 9. SDEC_ACCESS_TYPE_NAME - <not used>
"RTN","SDEC55A",38,0)
 ; 10. RESOURCEID - Pointer to the SDEC RESOURCE file
"RTN","SDEC55A",39,0)
 ; 11. RESOURCE_NAME - NAME from SDEC RESOURCE file
"RTN","SDEC55A",40,0)
 ; 12. USERIEN - DATA ENTRY CLERK id pointer to NEW PERSON file
"RTN","SDEC55A",41,0)
 ; 13. USERNAME - DATA ENTRY CLERK name from NEW PERSON file
"RTN","SDEC55A",42,0)
 ; 14. DATE3 - DATE APPT MADE in external format
"RTN","SDEC55A",43,0)
 ; 15. NOSHOW - NOSHOW flag 1=YES; 0=NO default to no
"RTN","SDEC55A",44,0)
 ; 16. DATE4 - NOSHOW DATETIME in external format
"RTN","SDEC55A",45,0)
 ; 17. USERIEN1 - NOSHOW BY USER id pointer to NEW PERSON file
"RTN","SDEC55A",46,0)
 ; 18. USERNAME1 - NOSHOW BY USER name from NEW PERSON file
"RTN","SDEC55A",47,0)
 ; 19. DATE5 - REBOOK DATETIME in external format
"RTN","SDEC55A",48,0)
 ; 20. DATE6 - CANCEL DATETIME in external format
"RTN","SDEC55A",49,0)
 ; 21. USERIEN2 - CANCELLED BY USER id pointer to NEW PERSON file
"RTN","SDEC55A",50,0)
 ; 22. USERNAME2 - CANCELLED BY USER name from NEW PERSON file
"RTN","SDEC55A",51,0)
 ; 23. CANCELLATION_REASONS_IEN - CANCELLATION REASON id pointer
"RTN","SDEC55A",52,0)
 ;                            to CANCELLATION REASONS file 409.2
"RTN","SDEC55A",53,0)
 ; 24. CANCELLATION_REASONS_NAME - CANCELLATION REASON name from
"RTN","SDEC55A",54,0)
 ;                            CANCELLATION REASONS file
"RTN","SDEC55A",55,0)
 ; 25. WALKIN - WALKIN flag y=YES; n=NO default to NO
"RTN","SDEC55A",56,0)
 ; 26. CHECKOUT - CHECKOUT date/time in external format
"RTN","SDEC55A",57,0)
 ; 27. V_PROVIDER_IEN - V PROVIDER IEN id pointer to
"RTN","SDEC55A",58,0)
 ;                      V PROVIDER file
"RTN","SDEC55A",59,0)
 ; 28. V_PROVIDER_NAME - V PROVIDER name from V PROVIDER FILE
"RTN","SDEC55A",60,0)
 ; 29. PROVIEN - PROVIDER id pointer to NEW PERSON file
"RTN","SDEC55A",61,0)
 ; 30. PROVNAME - PROVIDER name from NEW PERSON file
"RTN","SDEC55A",62,0)
 ; 31. STATUS - STATUS set of codes
"RTN","SDEC55A",63,0)
 ;              valid values in external form are:
"RTN","SDEC55A",64,0)
 ;                NO-SHOW
"RTN","SDEC55A",65,0)
 ;                CLINIC
"RTN","SDEC55A",66,0)
 ;                NO-SHOW & AUTO RE-BOOK
"RTN","SDEC55A",67,0)
 ;                CANCELLED BY CLINIC & AUTO RE-BOOK
"RTN","SDEC55A",68,0)
 ;                INPATIENT APPOINTMENT
"RTN","SDEC55A",69,0)
 ;                CANCELLED BY PATIENT
"RTN","SDEC55A",70,0)
 ;                CANCELLED BY PATIENT & AUTO-REBOOK
"RTN","SDEC55A",71,0)
 ;                NO ACTION TAKEN
"RTN","SDEC55A",72,0)
 ; 32. APPTLEN - LENGTH OF APPT numeric 5-120
"RTN","SDEC55A",73,0)
 ; 33. APPT_STAT_IEN - PREV APPT STATUS id pointer to
"RTN","SDEC55A",74,0)
 ;                     APPOINTMENT STATUS file 409.63
"RTN","SDEC55A",75,0)
 ; 34. APPT_STAT_NAME - PREV APPT STATUS name from
"RTN","SDEC55A",76,0)
 ;                      APPOINTMENT STATUS file
"RTN","SDEC55A",77,0)
 ; 35. DAPTDT - DESIRED DATE OF APPOINTMENT in external format
"RTN","SDEC55A",78,0)
 ; 36. SDID - EXTERNAL ID free-text
"RTN","SDEC55A",79,0)
 ; 37. SDAPTYP - APPT REQUEST TYPE - variable pointer pointer
"RTN","SDEC55A",80,0)
 ;               to one of these files:
"RTN","SDEC55A",81,0)
 ;                SD WAIT LIST - E|<WL IEN> E|123
"RTN","SDEC55A",82,0)
 ;                REQUEST/CONSULTATION - C|<CONSULT IEN> C|123
"RTN","SDEC55A",83,0)
 ;                RECALL REMINDERS - R|^<RECALL IEN> R|123
"RTN","SDEC55A",84,0)
 ; 38. NOTE - NOTE free-text converted from Word Processing
"RTN","SDEC55A",85,0)
 ;            field. May contain Carriage return/line feed
"RTN","SDEC55A",86,0)
 ;            characters
"RTN","SDEC55A",87,0)
 ; 39. EESTAT - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC55A",88,0)
 ; 40. APPTTYPE_IEN - pointer to the APPOINTMENT TYPE file
"RTN","SDEC55A",89,0)
 ; 41. APPTTYPE_NAME - name from the APPOINTMENT TYPE file
"RTN","SDEC55A",90,0)
 ;
"RTN","SDEC55A",91,0)
 N SD1,SD2,SDAPP,SDECI,SDI,SDJ,SDTMP,X,Y,%DT
"RTN","SDEC55A",92,0)
 S SDECY="^TMP(""SDEC55A"","_$J_",""APPSDGET"")"
"RTN","SDEC55A",93,0)
 K @SDECY
"RTN","SDEC55A",94,0)
 S SDECI=0
"RTN","SDEC55A",95,0)
 ;              1         2           3           4                  5          6         7
"RTN","SDEC55A",96,0)
 S SDTMP="T00030IEN^T00030DATE1^T00030DATE2^T00030CHECKIN_TIME^T00030DATE^T00030DFN^T00030NAME"
"RTN","SDEC55A",97,0)
 ;                     8                          9                           10               11
"RTN","SDEC55A",98,0)
 S SDTMP=SDTMP_"^T00030SDEC_ACCESS_TYPE_IEN^T00030SDEC_ACCESS_TYPE_NAME^T00030RESOURCEID^T00030RESOURCE_NAME"
"RTN","SDEC55A",99,0)
 ;                     12            13             14          15           16          17             18
"RTN","SDEC55A",100,0)
 S SDTMP=SDTMP_"^T00030USERIEN^T00030USERNAME^T00030DATE3^T00030NOSHOW^T00030DATE4^T00030USERIEN1^T00030USERNAME1"
"RTN","SDEC55A",101,0)
 ;                     19          20          21             22              23
"RTN","SDEC55A",102,0)
 S SDTMP=SDTMP_"^T00030DATE5^T00030DATE6^T00030USERIEN2^T00030USERNAME2^T00030CANCELLATION_REASONS_IEN"
"RTN","SDEC55A",103,0)
 ;                     24                              25           26             27                   28
"RTN","SDEC55A",104,0)
 S SDTMP=SDTMP_"^T00030CANCELLATION_REASONS_NAME^T00030WALKIN^T00030CHECKOUT^T00030V_PROVIDER_IEN^T00030V_PROVIDER_NAME"
"RTN","SDEC55A",105,0)
 ;                     29            30             31           32            33                  34
"RTN","SDEC55A",106,0)
 S SDTMP=SDTMP_"^T00030PROVIEN^T00030PROVNAME^T00030STATUS^T00030APPTLEN^T00030APPT_STAT_IEN^T00030APPT_STAT_NAME"
"RTN","SDEC55A",107,0)
 ;                     35           36         37            38
"RTN","SDEC55A",108,0)
 S SDTMP=SDTMP_"^T00030DAPTDT^T00030SDID^T00030SDAPTYP^T00200NOTE^T00030EESTAT^T00030APPTTYPE_IEN^T00030APPTTYPE_NAME"
"RTN","SDEC55A",109,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC55A",110,0)
 ;validate MAXREC - optional
"RTN","SDEC55A",111,0)
 S MAXREC=$G(MAXREC)
"RTN","SDEC55A",112,0)
 I MAXREC'="" I '+MAXREC S MAXREC=""
"RTN","SDEC55A",113,0)
 ;validate LASTSUB - optional
"RTN","SDEC55A",114,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC55A",115,0)
 S SD1=$P(LASTSUB,"|",1),SD2=$P(LASTSUB,"|",2)
"RTN","SDEC55A",116,0)
 I SD2'="" I SDID="" S SD1=SD1-.0001
"RTN","SDEC55A",117,0)
 ;validate SDBEG - optional
"RTN","SDEC55A",118,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC55A",119,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 D ERR1^SDECERR(-1,"Invalid begin date/time.",SDECI,SDECY) Q
"RTN","SDEC55A",120,0)
 I SDBEG'="",SDBEG<$$FMADD^XLFDT($$NOW^XLFDT(),-10*365) D ERR1^SDECERR(-1,"Invalid begin date/time.",SDECI,SDECY) Q  ;
"RTN","SDEC55A",121,0)
 ;
"RTN","SDEC55A",122,0)
 ;  Limit search to start 10 years ago.  wtc 6/18/18 SD*5.3*701
"RTN","SDEC55A",123,0)
 ;
"RTN","SDEC55A",124,0)
 I SDBEG="" S SDBEG=$$FMADD^XLFDT($$NOW^XLFDT(),-10*365) ;
"RTN","SDEC55A",125,0)
 ;
"RTN","SDEC55A",126,0)
 ;I SDBEG="" S SDBEG=1000101
"RTN","SDEC55A",127,0)
 ;validate SDEND - optional
"RTN","SDEC55A",128,0)
 S SDEND=$G(SDEND)
"RTN","SDEC55A",129,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y_".2359" I Y=-1 D ERR1^SDECERR(-1,"Invalid end date/time.",SDECI,SDECY) Q
"RTN","SDEC55A",130,0)
 I SDEND'="",SDEND>$$FMADD^XLFDT($$NOW^XLFDT(),390) D ERR1^SDECERR(-1,"Invalid end date/time.",SDECI,SDECY) Q  ;
"RTN","SDEC55A",131,0)
 ;
"RTN","SDEC55A",132,0)
 ;  Limit search to no later than 390 days in the future.  wtc 6/18/18 SD*5.3*701
"RTN","SDEC55A",133,0)
 ;
"RTN","SDEC55A",134,0)
 I SDEND="" S SDEND=$P($$FMADD^XLFDT($$NOW^XLFDT(),390),".",1)_".2359" ;
"RTN","SDEC55A",135,0)
 ;
"RTN","SDEC55A",136,0)
 ;I SDEND="" S SDEND=9991231.2359
"RTN","SDEC55A",137,0)
 ;validate NOTEFLG - optional
"RTN","SDEC55A",138,0)
 S NOTEFLG=$S($G(NOTEFLG)=1:1,1:0)
"RTN","SDEC55A",139,0)
 ;validate SDRES -optional
"RTN","SDEC55A",140,0)
 S SDRES=$G(SDRES)
"RTN","SDEC55A",141,0)
 I SDRES'="" I '$D(^SDEC(409.831,SDRES,0)) D ERR1^SDECERR(-1,"Invalid resource ID.",SDECI,SDECY) Q
"RTN","SDEC55A",142,0)
 ;validate DFN -optional
"RTN","SDEC55A",143,0)
 S DFN=$G(DFN)
"RTN","SDEC55A",144,0)
 I DFN'="" I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid patient ID.",SDECI,SDECY) Q
"RTN","SDEC55A",145,0)
 ;validate SDID - optional
"RTN","SDEC55A",146,0)
 S SDID=$G(SDID)
"RTN","SDEC55A",147,0)
 ;validate SDIEN - optional
"RTN","SDEC55A",148,0)
 S SDIEN=$G(SDIEN)
"RTN","SDEC55A",149,0)
 I SDIEN'="",'$D(^SDEC(409.84,SDIEN,0)) D ERR1^SDECERR(-1,"Invalid ID.",SDECI,SDECY) Q
"RTN","SDEC55A",150,0)
 I SDIEN'="" D GET1(SDIEN,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",151,0)
 G:SDIEN'="" GETX
"RTN","SDEC55A",152,0)
 ;look in external id xref AEX
"RTN","SDEC55A",153,0)
 I SDID'="" D
"RTN","SDEC55A",154,0)
 .S SDAPP=$S(SD1'="":SD1,1:0) F  S SDAPP=$O(^SDEC(409.84,"AEX",SDID,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDAPP Q
"RTN","SDEC55A",155,0)
 ..D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",156,0)
 G:SDID'="" GETX
"RTN","SDEC55A",157,0)
 ;look in patient xref CPAT
"RTN","SDEC55A",158,0)
 I DFN'="" D
"RTN","SDEC55A",159,0)
 .S SDAPP=$S(SD1'="":SD1,1:0) F  S SDAPP=$O(^SDEC(409.84,"CPAT",DFN,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDAPP Q
"RTN","SDEC55A",160,0)
 ..D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",161,0)
 G:DFN'="" GETX
"RTN","SDEC55A",162,0)
 ;look in resource xref ARSRC
"RTN","SDEC55A",163,0)
 I SDRES'="" D
"RTN","SDEC55A",164,0)
 .S SDI=$S(SD1'="":SD1,1:SDBEG) F  S SDI=$O(^SDEC(409.84,"ARSRC",SDRES,SDI)) Q:SDI'>0  Q:SDI>SDEND  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",165,0)
 ..S SDAPP=$S(SD2'="":SD2,1:0) S SD2=0 F  S SDAPP=$O(^SDEC(409.84,"ARSRC",SDRES,SDI,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",166,0)
 ...D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",167,0)
 G:SDRES'="" GETX
"RTN","SDEC55A",168,0)
 ;look in start time xref B
"RTN","SDEC55A",169,0)
 S SDI=$S(SD1'="":SD1,1:SDBEG) F  S SDI=$O(^SDEC(409.84,"B",SDI)) Q:SDI'>0  Q:SDI>SDEND  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",170,0)
 .S SDAPP=$S(SD2'="":SD2,1:0) S SD2=0 F  S SDAPP=$O(^SDEC(409.84,"B",SDI,SDAPP)) Q:SDAPP'>0  D  I +MAXREC,SDECI>=MAXREC S LASTSUB=SDI_"|"_SDAPP Q
"RTN","SDEC55A",171,0)
 ..D GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,.SDECI,SDECY)
"RTN","SDEC55A",172,0)
GETX  S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC55A",173,0)
 Q
"RTN","SDEC55A",174,0)
GET1(SDAPP,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDECI,SDECY) ;get 1 appointment record
"RTN","SDEC55A",175,0)
 ;INPUT:
"RTN","SDEC55A",176,0)
 ; SDAPP - appointment ID pointer to SDEC APPOINTMENT file 409.84
"RTN","SDEC55A",177,0)
 N SDA,SDDATA,SDNOTE,SDRET,SDTYP,SDX,SDY
"RTN","SDEC55A",178,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC55A",179,0)
 S SDEND=$G(SDEND)
"RTN","SDEC55A",180,0)
 S NOTEFLG=$G(NOTEFLG)
"RTN","SDEC55A",181,0)
 S SDRES=$G(SDRES)
"RTN","SDEC55A",182,0)
 S DFN=$G(DFN)
"RTN","SDEC55A",183,0)
 S SDID=$G(SDID)
"RTN","SDEC55A",184,0)
 S SDECI=$G(SDECI)
"RTN","SDEC55A",185,0)
 S SDECY=$G(SDECY)
"RTN","SDEC55A",186,0)
 D GETS^DIQ(409.84,SDAPP_",",".01:.23","IE","SDDATA")
"RTN","SDEC55A",187,0)
 S SDA="SDDATA(409.84,"""_SDAPP_","")"
"RTN","SDEC55A",188,0)
 S $P(SDRET,U,1)=SDAPP           ;ien
"RTN","SDEC55A",189,0)
 S $P(SDRET,U,2)=@SDA@(.01,"E")  ;start time
"RTN","SDEC55A",190,0)
 Q:(SDBEG'="")&($P(@SDA@(.01,"I"),".",1)<$P(SDBEG,".",1))
"RTN","SDEC55A",191,0)
 S $P(SDRET,U,3)=@SDA@(.02,"E")  ;end time
"RTN","SDEC55A",192,0)
 Q:(SDEND'="")&($P(@SDA@(.02,"I"),".",1)>$P(SDEND,".",1))
"RTN","SDEC55A",193,0)
 S $P(SDRET,U,4)=@SDA@(.03,"E")  ;check in time
"RTN","SDEC55A",194,0)
 S $P(SDRET,U,5)=@SDA@(.04,"E")  ;check in time entered
"RTN","SDEC55A",195,0)
 S $P(SDRET,U,6)=@SDA@(.05,"I")  ;patient ID
"RTN","SDEC55A",196,0)
 Q:(DFN'="")&($P(SDRET,U,6)'=DFN)
"RTN","SDEC55A",197,0)
 S $P(SDRET,U,7)=@SDA@(.05,"E")  ;patient NAME
"RTN","SDEC55A",198,0)
 S ($P(SDRET,U,40),$P(SDRET,U,8))=@SDA@(.06,"I")  ;appointment type ID
"RTN","SDEC55A",199,0)
 S ($P(SDRET,U,41),$P(SDRET,U,9))=@SDA@(.06,"E")  ;appointment type NAME
"RTN","SDEC55A",200,0)
 S $P(SDRET,U,10)=@SDA@(.07,"I")  ;resource ID
"RTN","SDEC55A",201,0)
 Q:(SDRES'="")&($P(SDRET,U,10)'=SDRES)
"RTN","SDEC55A",202,0)
 S $P(SDRET,U,11)=@SDA@(.07,"E")  ;resource NAME
"RTN","SDEC55A",203,0)
 S $P(SDRET,U,12)=@SDA@(.08,"I")  ;data entry clerk ID
"RTN","SDEC55A",204,0)
 S $P(SDRET,U,13)=@SDA@(.08,"E")  ;data entry clerk NAME
"RTN","SDEC55A",205,0)
 S $P(SDRET,U,14)=@SDA@(.09,"E")  ;date appointment made
"RTN","SDEC55A",206,0)
 S $P(SDRET,U,15)=@SDA@(.1,"E")   ;noshow flag
"RTN","SDEC55A",207,0)
 S $P(SDRET,U,16)=@SDA@(.101,"E") ;no show date time
"RTN","SDEC55A",208,0)
 S $P(SDRET,U,17)=@SDA@(.102,"I") ;no show by user ID
"RTN","SDEC55A",209,0)
 S $P(SDRET,U,18)=@SDA@(.102,"E") ;no show by user NAME
"RTN","SDEC55A",210,0)
 S $P(SDRET,U,19)=@SDA@(.11,"E") ;rebook date time
"RTN","SDEC55A",211,0)
 S $P(SDRET,U,20)=@SDA@(.12,"E") ;cancel date time
"RTN","SDEC55A",212,0)
 S $P(SDRET,U,21)=@SDA@(.121,"I") ;cancelled by user ID
"RTN","SDEC55A",213,0)
 S $P(SDRET,U,22)=@SDA@(.121,"E") ;cancelled by user NAME
"RTN","SDEC55A",214,0)
 S $P(SDRET,U,23)=@SDA@(.122,"I") ;cancellation reason ID
"RTN","SDEC55A",215,0)
 S $P(SDRET,U,24)=@SDA@(.122,"E") ;cancellation reason NAME
"RTN","SDEC55A",216,0)
 S $P(SDRET,U,25)=@SDA@(.13,"E")  ;walk-in
"RTN","SDEC55A",217,0)
 S $P(SDRET,U,26)=@SDA@(.14,"E")  ;check-out date/time
"RTN","SDEC55A",218,0)
 S $P(SDRET,U,27)=@SDA@(.15,"I")  ;v provider ID
"RTN","SDEC55A",219,0)
 S $P(SDRET,U,28)=@SDA@(.15,"E")  ;v provider NAME
"RTN","SDEC55A",220,0)
 S $P(SDRET,U,29)=@SDA@(.16,"I")  ;provider ID
"RTN","SDEC55A",221,0)
 S $P(SDRET,U,30)=@SDA@(.16,"E")  ;provider NAME
"RTN","SDEC55A",222,0)
 S $P(SDRET,U,31)=@SDA@(.17,"E")  ;status
"RTN","SDEC55A",223,0)
 S $P(SDRET,U,32)=@SDA@(.18,"E")  ;length of appt
"RTN","SDEC55A",224,0)
 S $P(SDRET,U,33)=@SDA@(.19,"I")  ;prev appt status ID
"RTN","SDEC55A",225,0)
 S $P(SDRET,U,34)=@SDA@(.19,"E")  ;prev appt status NAME
"RTN","SDEC55A",226,0)
 S $P(SDRET,U,35)=@SDA@(.2,"E")   ;desired date of appointment
"RTN","SDEC55A",227,0)
 S $P(SDRET,U,36)=@SDA@(.21,"E")  ;external id
"RTN","SDEC55A",228,0)
 Q:(SDID'="")&($P(SDRET,U,36)'=SDID)
"RTN","SDEC55A",229,0)
 S SDX=@SDA@(.22,"I") S SDY=$P(SDX,";",2)
"RTN","SDEC55A",230,0)
 S SDTYP=$S(SDY="SDWL(409.3,":"E|",SDY="GMR(123,":"C|",SDY="SD(403.5,":"R|",SDY="SDEC(409.85,":"A|",1:"")_$P(SDX,";",1)  ;appt request type
"RTN","SDEC55A",231,0)
 S $P(SDRET,U,37)=SDTYP
"RTN","SDEC55A",232,0)
 ;
"RTN","SDEC55A",233,0)
 N SDECIEN
"RTN","SDEC55A",234,0)
 S SDNOTE=""
"RTN","SDEC55A",235,0)
 I 'NOTEFLG I $D(^SDEC(409.84,SDAPP,1)) D
"RTN","SDEC55A",236,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.84,SDAPP,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC55A",237,0)
 . . S SDNOTE=SDNOTE_$G(^SDEC(409.84,SDAPP,1,SDECIEN,0))
"RTN","SDEC55A",238,0)
 . . S SDNOTE=SDNOTE_$C(13)_$C(10)
"RTN","SDEC55A",239,0)
 S $P(SDRET,U,38)=SDNOTE
"RTN","SDEC55A",240,0)
 S $P(SDRET,U,39)=@SDA@(.23,"E")  ;patient status
"RTN","SDEC55A",241,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDRET_$C(30)
"RTN","SDEC55A",242,0)
 K SDDATA
"RTN","SDEC55A",243,0)
 Q
"RTN","SDEC57")
0^2^B115815412^B110596286
"RTN","SDEC57",1,0)
SDEC57 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ; 18 Jun 2018  4:21 PM
"RTN","SDEC57",2,0)
 ;;5.3;Scheduling;**627,642,658,665,701**;Aug 13, 1993;Build 3
"RTN","SDEC57",3,0)
 ;
"RTN","SDEC57",4,0)
 Q
"RTN","SDEC57",5,0)
 ;APPSLOTS - return appt slots and availability
"RTN","SDEC57",6,0)
 ;SDECY=Return global array
"RTN","SDEC57",7,0)
 ;  FM DATE ^ SLOT START TIME ^ SLOT STOP TIME ^ AVAILABILITY CODE
"RTN","SDEC57",8,0)
 ;  Availability codes 0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23
"RTN","SDEC57",9,0)
 ;SDECRES=Resource name
"RTN","SDEC57",10,0)
 ;SDECSTRT=Start date/time
"RTN","SDEC57",11,0)
 ;SDECEND=End date/time
"RTN","SDEC57",12,0)
APPSLOTS(SDECY,SDECRES,SDECSTART,SDECEND) ;GET Create Assigned Slot Schedule
"RTN","SDEC57",13,0)
 N CNT
"RTN","SDEC57",14,0)
 N SDECAD,SDECALO,SDECBS,SDECDEP,SDECERR,SDECI,SDECIEN,SDECK,SDECL,SDECNEND,SDECNOD
"RTN","SDEC57",15,0)
 N SDECNOT,SDECNSTART,SDECPEND,SDECQ,SDECRESD,SDECRESN,SDECS,SDECSUBCD,SDECTMP
"RTN","SDEC57",16,0)
 N SDAB,SDECTYPE,SDECTYPED,SDECZ
"RTN","SDEC57",17,0)
 N %DT,X,Y
"RTN","SDEC57",18,0)
 S SDECERR=""
"RTN","SDEC57",19,0)
 S SDECY="^TMP(""SDEC57"","_$J_",""APPSLOTS"")"
"RTN","SDEC57",20,0)
 K @SDECY
"RTN","SDEC57",21,0)
 S SDECALO=0,SDECI=0
"RTN","SDEC57",22,0)
 S @SDECY@(SDECI)="T00030DATE^T00030START_TIME^T00030END_TIME^I00010AVAILABILITY"_$C(30)
"RTN","SDEC57",23,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",24,0)
 S SDECSTART=Y
"RTN","SDEC57",25,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",26,0)
 S SDECEND=Y
"RTN","SDEC57",27,0)
 ;validate SDECRES
"RTN","SDEC57",28,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC57",29,0)
 I SDECRES']"" S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",30,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",31,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0)) I '+SDECRES S @SDECY@(1)="-1^Invalid Resource ID"_$C(30)_$C(31) Q
"RTN","SDEC57",32,0)
 S SDAB="^TMP("_$J_",""SDEC57"",""BLKS"")"
"RTN","SDEC57",33,0)
 K @SDAB
"RTN","SDEC57",34,0)
 D GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)
"RTN","SDEC57",35,0)
 ;Get Access Type IDs
"RTN","SDEC57",36,0)
 N SD1,SD2,SD3,SD4,SDI,SDNOD,SDENDDT
"RTN","SDEC57",37,0)
 N SDSTRTDT,SDSLOTS,SDSTOPTM,SDSTRTTM
"RTN","SDEC57",38,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC57",39,0)
 .S SDNOD=@SDAB@(SDI)
"RTN","SDEC57",40,0)
 .S SD1=$P(SDNOD,U,2) ;start DT
"RTN","SDEC57",41,0)
 .S SD2=$P(SDNOD,U,3) ;end DT
"RTN","SDEC57",42,0)
 .S SD3=+$P(SDNOD,U,4) ;slots
"RTN","SDEC57",43,0)
 .S SD4=$P(SDNOD,U,5) ;access type(1=avail,2=not avail,3=canc)
"RTN","SDEC57",44,0)
 .S SDSTRTDT=$P(SD1,".")
"RTN","SDEC57",45,0)
 .S SDENDDT=$P(SD2,".")
"RTN","SDEC57",46,0)
 .S SDSTRTTM=$E($P(SD1_"0000",".",2),1,4)
"RTN","SDEC57",47,0)
 .S SDSTOPTM=$E($P(SD2_"0000",".",2),1,4)
"RTN","SDEC57",48,0)
 .S SDSLOTS=$P(SDNOD,U,4)
"RTN","SDEC57",49,0)
 .S SDSLOTS=$S(SDSLOTS=" ":"",1:SDSLOTS)
"RTN","SDEC57",50,0)
 .S SDSLOTS=$S(SD4=2:"",SD4=3:"X",1:SDSLOTS)
"RTN","SDEC57",51,0)
 .S SDECI=SDECI+1,@SDECY@(SDECI)=SDSTRTDT_U_SDSTRTTM_U_SDSTOPTM_U_SDSLOTS_$C(30)
"RTN","SDEC57",52,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC57",53,0)
 K @SDAB
"RTN","SDEC57",54,0)
 Q
"RTN","SDEC57",55,0)
 ;
"RTN","SDEC57",56,0)
GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)  ;load SDEC ACCESS BLOCKS from file 44
"RTN","SDEC57",57,0)
 N SDCL,SDI,SDJ
"RTN","SDEC57",58,0)
 S SDECRES=$G(SDECRES) Q:SDECRES=""
"RTN","SDEC57",59,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) Q
"RTN","SDEC57",60,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0))
"RTN","SDEC57",61,0)
 Q:'SDECRES
"RTN","SDEC57",62,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",63,0)
 Q:Y=-1
"RTN","SDEC57",64,0)
 S SDECSTART=Y
"RTN","SDEC57",65,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",66,0)
 Q:Y=-1
"RTN","SDEC57",67,0)
 S SDECEND=Y
"RTN","SDEC57",68,0)
 S SDCL=$$GET1^DIQ(409.831,SDECRES_",",.04,"I")
"RTN","SDEC57",69,0)
 Q:SDCL=""
"RTN","SDEC57",70,0)
 S SDI=$$FMADD^XLFDT(SDECSTART,-1)
"RTN","SDEC57",71,0)
 ;
"RTN","SDEC57",72,0)
 ;  Handle where SDI is initially -1 because of bad future date.
"RTN","SDEC57",73,0)
 ;  wtc  6/18/18  SD*5.3*701
"RTN","SDEC57",74,0)
 ;
"RTN","SDEC57",75,0)
 I SDI<0 S @SDECY@(1)="-1^Bad future appointment date"_$C(30)_$C(31) Q  ;
"RTN","SDEC57",76,0)
 ;
"RTN","SDEC57",77,0)
 N BADATE S BADATE=0 ;
"RTN","SDEC57",78,0)
 F  S SDI=$$FMADD^XLFDT(SDI,1) Q:SDI>$P(SDECEND,".",1)!(BADATE>0)  D
"RTN","SDEC57",79,0)
 . I SDI<0 S BADATE=1,SDECI=SDECI+1,@SDECY@(SDECI)="-1^Bad future appointment date"_$C(30)_$C(31) Q  ;
"RTN","SDEC57",80,0)
 .I ($O(^SC(SDCL,"T",0))="")!($O(^SC(SDCL,"T",0))>SDI) Q
"RTN","SDEC57",81,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDI)) Q   ;do not schedule on holidays
"RTN","SDEC57",82,0)
 .;Q:$G(^SC(SDCL,"ST",SDI,1))["**CANCELLED**"
"RTN","SDEC57",83,0)
 .Q:$$INACTIVE^SDEC32(SDCL,$P(SDI,".",1))   ;don't get availability if clinic inactive on day SDI
"RTN","SDEC57",84,0)
 .D RESAB(SDAB,SDCL,SDI,SDI_"."_2359,SDECRES)
"RTN","SDEC57",85,0)
 Q
"RTN","SDEC57",86,0)
 ;
"RTN","SDEC57",87,0)
RESAB(SDAB,SDCL,SDBEG,SDEND,SDECRES)   ;build access blocks for 1 clinic
"RTN","SDEC57",88,0)
 ; SDECRES (optional) Resource pointer to SDEC RESOURCE file
"RTN","SDEC57",89,0)
 ;                    used to build access blocks from clinic availability
"RTN","SDEC57",90,0)
 ;                    for only this resource; all resources are build if null
"RTN","SDEC57",91,0)
 ;  .01    name
"RTN","SDEC57",92,0)
 ;    2    type (clinic)
"RTN","SDEC57",93,0)
 ;   1912  length of app't
"RTN","SDEC57",94,0)
 ;   1914  hour clinic display begins default is 8am; whole number 0-16
"RTN","SDEC57",95,0)
 ;   1917  display increments per hour
"RTN","SDEC57",96,0)
 ;   2505  inactive date
"RTN","SDEC57",97,0)
 ;   2506  reactivate date
"RTN","SDEC57",98,0)
 N SDAY,SDCLS,SDDATA,SDFIELDS,SDIN,SDLEN,SDRA,SDSI,SDT
"RTN","SDEC57",99,0)
 I $P($G(SDBEG),".",1)'?7N S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1)
"RTN","SDEC57",100,0)
 I $P($G(SDEND),".",1)'?7N S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),365)
"RTN","SDEC57",101,0)
 S SDECRES=$G(SDECRES) I SDECRES'="",'$D(^SDEC(409.831,+SDECRES,0)) S SDECRES=""
"RTN","SDEC57",102,0)
 S SDFIELDS=".01;2;1912;1914;1917;2505;2506"
"RTN","SDEC57",103,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC57",104,0)
 Q:SDDATA(44,SDCL_",",2,"I")'="C"   ;only clinic
"RTN","SDEC57",105,0)
 I $$INACTIVE(SDCL,.SDBEG,.SDEND,SDDATA(44,SDCL_",",2505,"I"),SDDATA(44,SDCL_",",2506,"I")) Q   ;only active
"RTN","SDEC57",106,0)
 S SDLEN=SDDATA(44,SDCL_",",1912,"I")  ;length of app't is required in file 44
"RTN","SDEC57",107,0)
 S SDCLS=SDDATA(44,SDCL_",",1914,"I")   ;hour clinic display begins
"RTN","SDEC57",108,0)
 S:SDCLS="" SDCLS=8 ;apply default start time of 0800
"RTN","SDEC57",109,0)
 ;SDSI=DISPLAY INCREMENTS PER HOUR (1-60min,2-30min,3-20min,4-15min,6-10min)
"RTN","SDEC57",110,0)
 S SDSI=SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",111,0)
 D TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)
"RTN","SDEC57",112,0)
 Q
"RTN","SDEC57",113,0)
 ;
"RTN","SDEC57",114,0)
TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND) ;add/update access blocks for day template SDT
"RTN","SDEC57",115,0)
 ;SDBEG  = (optional) Start date in fileman format; defaults to 'today'
"RTN","SDEC57",116,0)
 ;SDEND = (optional) Stop date in fileman format; defaults to 365 days
"RTN","SDEC57",117,0)
 N SDAY,SDAY1,SDBLKS,SDE,SDE1,SDJ,SDPAT,SDPAT1,SDSIM
"RTN","SDEC57",118,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",119,0)
 Q:SDCL=""
"RTN","SDEC57",120,0)
 S SDLEN=$G(SDLEN)
"RTN","SDEC57",121,0)
 ;LENGTH OF APP'T
"RTN","SDEC57",122,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDEC57",123,0)
 S SDCLS=$G(SDCLS)
"RTN","SDEC57",124,0)
 ;HOUR CLINIC DISPLAY BEGINS
"RTN","SDEC57",125,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDEC57",126,0)
 S SDSI=$G(SDSI)
"RTN","SDEC57",127,0)
 ;DISPLAY INCREMENTS PER HOUR
"RTN","SDEC57",128,0)
 I SDSI="" S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",129,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC57",130,0)
 D TDAY1
"RTN","SDEC57",131,0)
 Q
"RTN","SDEC57",132,0)
TDAY1 ;
"RTN","SDEC57",133,0)
 N D,SDA,SDTP,SS,ST,Y
"RTN","SDEC57",134,0)
 ;SDA=begin position of pattern on template
"RTN","SDEC57",135,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDEC57",136,0)
 S SDTP=""
"RTN","SDEC57",137,0)
 ;if no CURRENT AVAILABILITY pattern, try to build it
"RTN","SDEC57",138,0)
 I '$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S ST='$$ST(SDCL,SDBEG) Q:ST
"RTN","SDEC57",139,0)
 S SDTP=$G(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S SDTP=$E(SDTP,SDA,$L(SDTP))
"RTN","SDEC57",140,0)
 Q:SDTP=""
"RTN","SDEC57",141,0)
 K SDBLKS
"RTN","SDEC57",142,0)
 D GETBLKS^SDEC57A(.SDBLKS,SDTP,$P(SDBEG,".",1),SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDEC57",143,0)
 D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,$P(SDBEG,".",1))
"RTN","SDEC57",144,0)
 K SDBLKS
"RTN","SDEC57",145,0)
 Q
"RTN","SDEC57",146,0)
 ;
"RTN","SDEC57",147,0)
ST(SDCL,SDBEG) ;build ST
"RTN","SDEC57",148,0)
 ;RETURN - 0=not buildable or built as holiday ;1=buildable
"RTN","SDEC57",149,0)
 N D,SC,SDDT,SS,Y
"RTN","SDEC57",150,0)
 S SDDT=$P(SDBEG,".",1)
"RTN","SDEC57",151,0)
 S SC=SDCL
"RTN","SDEC57",152,0)
 S D=$$DOW^XLFDT(SDDT,1)
"RTN","SDEC57",153,0)
 S Y=D#7
"RTN","SDEC57",154,0)
 I $D(^HOLIDAY(SDDT))&($$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y") D H Q 0
"RTN","SDEC57",155,0)
 S SS=$$FDT(SDCL,Y)
"RTN","SDEC57",156,0)
 Q:+SS="" 0
"RTN","SDEC57",157,0)
 S ^SC(+SDCL,"ST",SDDT,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDDT,6,7)_$S(SDSI=3:"",SDSI=6:"      ",1:"  ")_SS,^SC(+SDCL,"ST",SDDT,0)=SDDT
"RTN","SDEC57",158,0)
 Q 1
"RTN","SDEC57",159,0)
FDT(SDCL,Y)  ;find day template pattern
"RTN","SDEC57",160,0)
 N SDE,SDTP
"RTN","SDEC57",161,0)
 S SDTP=""
"RTN","SDEC57",162,0)
 S SDE=$O(^SC(SDCL,"T"_Y,99999999),-1)
"RTN","SDEC57",163,0)
 Q:'SDE ""
"RTN","SDEC57",164,0)
 S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",165,0)
 Q:SDTP="" ""
"RTN","SDEC57",166,0)
 F  S SDE=$O(^SC(SDCL,"T"_Y,SDE),-1) Q:SDE'>0  Q:$P(SDBEG,".",1)'<SDE  S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",167,0)
 Q SDTP
"RTN","SDEC57",168,0)
H ;update ST as holiday
"RTN","SDEC57",169,0)
 S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^HOLIDAY(X,0),U,2),^SC(+SC,"ST",X,0)=X
"RTN","SDEC57",170,0)
 Q
"RTN","SDEC57",171,0)
 ;
"RTN","SDEC57",172,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC57",173,0)
 ;
"RTN","SDEC57",174,0)
INACTIVE(SDCL,SDBEG,SDEND,IDATE,RDATE)  ;
"RTN","SDEC57",175,0)
 ;INPUT:
"RTN","SDEC57",176,0)
 ;  SDCL  - clinic ID
"RTN","SDEC57",177,0)
 ; .SDBEG - begin date in FM format, no time
"RTN","SDEC57",178,0)
 ; .SDEND - end date in FM format, no time
"RTN","SDEC57",179,0)
 ;  IDATE - clinic's inactivation date
"RTN","SDEC57",180,0)
 ;  RDATE - clinic's reactivation date
"RTN","SDEC57",181,0)
 ;RETURN:
"RTN","SDEC57",182,0)
 ; 0=Clinic is active
"RTN","SDEC57",183,0)
 ; 1=Clinic is inactive
"RTN","SDEC57",184,0)
 ; active  0 0
"RTN","SDEC57",185,0)
 I IDATE="" Q 0
"RTN","SDEC57",186,0)
 ;  active but inactivated in future
"RTN","SDEC57",187,0)
 I IDATE>SDBEG S SDEND=IDATE Q 0
"RTN","SDEC57",188,0)
 ; inactive 1 0
"RTN","SDEC57",189,0)
 I IDATE'>SDBEG,RDATE="" Q 1   ;alb/sat 665
"RTN","SDEC57",190,0)
 ; inactive 1 1 inactive but reactivated
"RTN","SDEC57",191,0)
 ;  inactive now reactive now
"RTN","SDEC57",192,0)
 I IDATE'>SDBEG,RDATE'>SDBEG Q 0  ;alb/sat 665
"RTN","SDEC57",193,0)
 ;  inactive now reactive future
"RTN","SDEC57",194,0)
 I IDATE'>SDBEG,RDATE>IDATE S SDBEG=RDATE Q 0  ;alb/sat 665
"RTN","SDEC57",195,0)
 Q 1
"RTN","SDEC57",196,0)
 ;
"RTN","SDEC57",197,0)
OBM(RET,SDCL,SDT,MRTC,USR,SDW)  ;GET overbook status and message
"RTN","SDEC57",198,0)
 N %DT,OBM,SDTMP,X,Y
"RTN","SDEC57",199,0)
 S RET=$NA(^TMP("SDEC57",$J,"OBM"))
"RTN","SDEC57",200,0)
 K @RET
"RTN","SDEC57",201,0)
 S @RET@(0)="T00030CONTINUE^T00200MESSAGE^T00200PROMPT^T00030DEFAULT"_$C(30)
"RTN","SDEC57",202,0)
 ;validate SDCL
"RTN","SDEC57",203,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",204,0)
 I SDCL="" S @RET@(1)="-1^Clinic ID is required."_$C(30,31) Q
"RTN","SDEC57",205,0)
 I '$D(^SC(SDCL,0)) S @RET@(1)="-1^Invalid Clinic ID."_$C(30,31) Q
"RTN","SDEC57",206,0)
 ;validate SDT
"RTN","SDEC57",207,0)
 S SDT=$G(SDT)
"RTN","SDEC57",208,0)
 S %DT="T",X=SDT D ^%DT I Y=-1 S @RET@(1)="-1^Invalid appointment date/time."_$C(30,31) Q
"RTN","SDEC57",209,0)
 S SDT=Y
"RTN","SDEC57",210,0)
 ;validate MRTC
"RTN","SDEC57",211,0)
 S MRTC=$G(MRTC)
"RTN","SDEC57",212,0)
 I MRTC'="","01"'[MRTC S @RET@(1)="-1^Invalid MRTC flag."_$C(30,31) Q
"RTN","SDEC57",213,0)
 ;validate USR
"RTN","SDEC57",214,0)
 S USR=$G(USR)
"RTN","SDEC57",215,0)
 I USR="" S USR=DUZ
"RTN","SDEC57",216,0)
 I '$D(^VA(200,USR,0)) S @RET@(1)="-1^Invalid user ID."_$C(30,31) Q
"RTN","SDEC57",217,0)
 ;validate SDW
"RTN","SDEC57",218,0)
 S SDW=$G(SDW)
"RTN","SDEC57",219,0)
 S OBM=$$OBM1(SDCL,SDT,MRTC,USR,SDW)
"RTN","SDEC57",220,0)
 I OBM="" S @RET@(1)=1
"RTN","SDEC57",221,0)
 E  D
"RTN","SDEC57",222,0)
 .S SDTMP=""
"RTN","SDEC57",223,0)
 .F I=1:1:$L(OBM,"|") S $P(SDTMP,U,I)=$P(OBM,"|",I)
"RTN","SDEC57",224,0)
 .S @RET@(1)=SDTMP
"RTN","SDEC57",225,0)
 S @RET@(1)=@RET@(1)_$C(30,31)
"RTN","SDEC57",226,0)
 Q
"RTN","SDEC57",227,0)
OBM1(SDCL,SDT,MRTC,USR,SDW)  ;return message and possible prompt for overbook   ;alb/sat 658
"RTN","SDEC57",228,0)
 ; RETURN - <continue> | <message> | <prompt> | <default>
"RTN","SDEC57",229,0)
 ;  <continue> - 0=do not continue
"RTN","SDEC57",230,0)
 ;               1=continue
"RTN","SDEC57",231,0)
 ;               2=continue based on prompt response
"RTN","SDEC57",232,0)
 N %,CAN,D,DATE,HSI,I,OBM,MOB,MOBR,S,SB,SI,SL,SM,SM7,SDA,SDDIF,ST,STARTDAY,STR,X
"RTN","SDEC57",233,0)
 ;
"RTN","SDEC57",234,0)
 S OBM=""
"RTN","SDEC57",235,0)
 S (CAN,SM,SM7)=0
"RTN","SDEC57",236,0)
 ;validate SDCL
"RTN","SDEC57",237,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",238,0)
 Q:SDCL="" ""
"RTN","SDEC57",239,0)
 Q:'$D(^SC(SDCL,0)) ""
"RTN","SDEC57",240,0)
 ;validate MRTC
"RTN","SDEC57",241,0)
 S MRTC=$G(MRTC)
"RTN","SDEC57",242,0)
 ;validate USR
"RTN","SDEC57",243,0)
 S USR=$G(USR)
"RTN","SDEC57",244,0)
 I USR="" S USR=DUZ
"RTN","SDEC57",245,0)
 Q:'$D(^VA(200,USR,0)) ""
"RTN","SDEC57",246,0)
 ;validate SDT
"RTN","SDEC57",247,0)
 S SDT=$G(SDT)
"RTN","SDEC57",248,0)
 S %DT="T",X=SDT D ^%DT I Y=-1 Q ""
"RTN","SDEC57",249,0)
 S SDT=Y
"RTN","SDEC57",250,0)
 S DATE=$$FMTE^XLFDT($P(SDT,".",1))
"RTN","SDEC57",251,0)
 ;validate SDW  walk-in flag
"RTN","SDEC57",252,0)
 S SDW=$G(SDW)
"RTN","SDEC57",253,0)
 ;
"RTN","SDEC57",254,0)
 ;SM=6=OVERBOOK  SM=7=NOT IN SCHEDULE PERIOD
"RTN","SDEC57",255,0)
 S SL=$G(^SC(+SDCL,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4)
"RTN","SDEC57",256,0)
 S STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2)
"RTN","SDEC57",257,0)
 S S=$G(^SC(SDCL,"ST",$P(SDT,".",1),1))
"RTN","SDEC57",258,0)
 S I=SDT#1-SB*100,ST=I#1*SI\.6+($P(I,".")*SI),SS=SL*HSI/60*SDDIF+ST+ST
"RTN","SDEC57",259,0)
 ;check if not during schedule period (SM=7)
"RTN","SDEC57",260,0)
 S %=$F(S,"[",SS-1) S:'%!($P(SL,"^",6)<3) %=999 I $F(S,"]",SS)'<%!(SDDIF=2&$E(S,ST+ST+1,SS-1)["[") S SM=7
"RTN","SDEC57",261,0)
 ;check if OB  (SM=6)
"RTN","SDEC57",262,0)
 S SDA=$S($P(SL,U,6)=3:6,$P(SL,U,6)=6:12,1:8)
"RTN","SDEC57",263,0)
 F I=ST+ST:SDDIF:SS-SDDIF S ST=$E(S,I+1) S:ST="" ST=" " S Y=$E(STR,$F(STR,ST)-2),SM7=$S(I<SDA:1,Y="*":1,1:SM7) S CAN=$$CAN(S,ST,SDCL,SDT) Q:CAN  Q:Y=""  S:Y'?1NL&(SM<6) SM=6 S ST=$E(S,I+2,999) D  S:ST="" ST=" " S S=$E(S,1,I)_Y_ST
"RTN","SDEC57",264,0)
 .Q:ST'=""
"RTN","SDEC57",265,0)
 .Q:+SL'>+^SC(SDCL,"SL")
"RTN","SDEC57",266,0)
 .S ST="   "
"RTN","SDEC57",267,0)
 .Q
"RTN","SDEC57",268,0)
 I CAN S OBM="0|CAN'T BOOK WITHIN A CANCELLED TIME PERIOD!" G OBX
"RTN","SDEC57",269,0)
 I +SDW,+SM7 S OBM="1" G OBX
"RTN","SDEC57",270,0)
 S (MOBR,MOB)=$P($G(^SC(SDCL,"SL")),U,7)   ;MOB=MAX OB ALLOWED  MOBR=MAX OB REMAINING
"RTN","SDEC57",271,0)
 ; alb/jsm 658 updated to used the $P(SDT,".",1)-.01
"RTN","SDEC57",272,0)
 I MOBR F D=$P(SDT,".",1)-.01:0 S D=$O(^SC(SDCL,"S",D)) Q:$P(D,".",1)-$P(SDT,".",1)  F %=0:0 S %=$O(^SC(SDCL,"S",D,1,%)) Q:'%  I $P(^(%,0),"^",9)'["C",$D(^("OB")) S MOBR=MOBR-1
"RTN","SDEC57",273,0)
 ;
"RTN","SDEC57",274,0)
 ;not MRTC
"RTN","SDEC57",275,0)
 ; MAX OB DEFINED
"RTN","SDEC57",276,0)
 I 'MRTC,MOB'="",SM#9'=0,MOBR<1,'$D(^XUSEC("SDMOB",DUZ)) S OBM="0|ONLY "_MOB_" OVERBOOK"_$E("S",MOB>1)_" ALLOWED PER DAY!!" G OBX
"RTN","SDEC57",277,0)
 I 'MRTC,MOB'="",SM#9'=0,MOBR<1,$D(^XUSEC("SDMOB",DUZ)) S OBM="2||WILL EXCEED MAXIMUM ALLOWABLE OVERBOOKS, OK?|YES" G OBX
"RTN","SDEC57",278,0)
 I 'MRTC,MOB'="",SM#9'=0,MOBR>0,'$D(^XUSEC("SDOB",DUZ)) S OBM="0|NO OPEN SLOTS THEN" G OBX
"RTN","SDEC57",279,0)
 I 'MRTC,MOB'="",SM=7,$D(^XUSEC("SDOB",DUZ)) S OBM="2||THAT TIME IS NOT WITHIN SCHEDULED PERIOD!...OK?|NO" G OBX
"RTN","SDEC57",280,0)
 I 'MRTC,MOB'="",SM=6,$D(^XUSEC("SDOB",DUZ)) S OBM="2||OVERBOOK!...OK?|NO" G OBX
"RTN","SDEC57",281,0)
 ; MAX OB NOT DEFINED
"RTN","SDEC57",282,0)
 I 'MRTC,MOB="",SM#9'=0,'$D(^XUSEC("SDOB",DUZ)) S OBM="0|NO OPEN SLOTS THEN" G OBX
"RTN","SDEC57",283,0)
 I 'MRTC,MOB="",SM=7,$D(^XUSEC("SDOB",DUZ)) S OBM="2||THAT TIME IS NOT WITHIN SCHEDULED PERIOD!...OK?|NO" G OBX
"RTN","SDEC57",284,0)
 I 'MRTC,MOB="",SM=6,$D(^XUSEC("SDOB",DUZ)) S OBM="2||OVERBOOK!...OK?|NO" G OBX
"RTN","SDEC57",285,0)
 ;MRTC
"RTN","SDEC57",286,0)
 I MRTC,MOBR<1,'$D(^XUSEC("SDOB",DUZ)),'$D(^XUSEC("SDMOB",DUZ)) S OBM="NO OPEN SLOTS ON "_DATE_" AT THAT TIME." G OBX
"RTN","SDEC57",287,0)
 I MRTC,MOBR<1 D  G OBX
"RTN","SDEC57",288,0)
 .S:'$D(^XUSEC("SDMOB",USR)) OBM="0|ONLY "_MOB_" OVERBOOK"_$E("S",MOB>1)_" ALLOWED PER DAY!!  NO OPEN SLOTS ON "_DATE_" AT THAT TIME."
"RTN","SDEC57",289,0)
 .S:$D(^XUSEC("SDMOB",USR)) OBM="2||WILL EXCEED MAXIMUM ALLOWABLE OVERBOOKS FOR "_DATE_", OK?|YES"
"RTN","SDEC57",290,0)
 .S:$D(^XUSEC("SDOB",DUZ)) OBM="2||"_DATE_" WILL BE AN OVERBOOK, OK?|NO"
"RTN","SDEC57",291,0)
 I 0,MRTC,MOBR>0 D  G OBX
"RTN","SDEC57",292,0)
 .S:'$D(^XUSEC("SDOB",DUZ)) OBM="0|NO OPEN SLOTS ON "_DATE_" AT THAT TIME."
"RTN","SDEC57",293,0)
 .S:$D(^XUSEC("SDOB",DUZ)) OBM="2||"_DATE_" WILL BE AN OVERBOOK, OK?|NO"
"RTN","SDEC57",294,0)
OBX Q OBM
"RTN","SDEC57",295,0)
CAN(S,ST,SDCL,SDT) ;
"RTN","SDEC57",296,0)
 Q S["CAN"!(ST="X"&($D(^SC(+SDCL,"ST",$P(SDT,"."),"CAN"))))
"VER")
8.0^22.2
"BLD",10777,6)
^571
**END**
**END**

