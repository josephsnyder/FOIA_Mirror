Released SD*5.3*524 SEQ #430
Extracted from mail message
**KIDS**:SD*5.3*524^

**INSTALL NAME**
SD*5.3*524
"BLD",6683,0)
SD*5.3*524^SCHEDULING^0^3080205^y
"BLD",6683,1,0)
^^5^5^3071022^
"BLD",6683,1,1,0)
This patch address three enhancements to the EWL Wait List. First, a new 
"BLD",6683,1,2,0)
report is created to break down the wait list specialties/locations by 
"BLD",6683,1,3,0)
<30,>30, and >120 totals. Second, the Wait List Static report will 
"BLD",6683,1,4,0)
exclude 'PREVIOUS REMAINING' and '# REMAINING'. Finally, the EWL display 
"BLD",6683,1,5,0)
output will ask if only 'OPEN' entries are to be displayed.
"BLD",6683,4,0)
^9.64PA^^
"BLD",6683,6)
12^
"BLD",6683,6.3)
29
"BLD",6683,"ABPKG")
n
"BLD",6683,"KRN",0)
^9.67PA^8989.52^19
"BLD",6683,"KRN",.4,0)
.4
"BLD",6683,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",6683,"KRN",.4,"NM",1,0)
SDWLRO    FILE #409.3^409.3^0
"BLD",6683,"KRN",.4,"NM","B","SDWLRO    FILE #409.3",1)

"BLD",6683,"KRN",.401,0)
.401
"BLD",6683,"KRN",.402,0)
.402
"BLD",6683,"KRN",.403,0)
.403
"BLD",6683,"KRN",.5,0)
.5
"BLD",6683,"KRN",.84,0)
.84
"BLD",6683,"KRN",3.6,0)
3.6
"BLD",6683,"KRN",3.8,0)
3.8
"BLD",6683,"KRN",9.2,0)
9.2
"BLD",6683,"KRN",9.8,0)
9.8
"BLD",6683,"KRN",9.8,"NM",0)
^9.68A^13^11
"BLD",6683,"KRN",9.8,"NM",1,0)
SDWLI^^0^B72458780
"BLD",6683,"KRN",9.8,"NM",2,0)
SDWLQSR^^0^B10174870
"BLD",6683,"KRN",9.8,"NM",3,0)
SDWLRSR^^0^B42863280
"BLD",6683,"KRN",9.8,"NM",5,0)
SDWLR30^^0^B12105960
"BLD",6683,"KRN",9.8,"NM",6,0)
SDWLR31^^0^B17924948
"BLD",6683,"KRN",9.8,"NM",8,0)
SCMCHLB1^^0^B15267119
"BLD",6683,"KRN",9.8,"NM",9,0)
SCMCHLB2^^0^B10505693
"BLD",6683,"KRN",9.8,"NM",10,0)
SCMCHLS^^0^B5831159
"BLD",6683,"KRN",9.8,"NM",11,0)
SCMCMU2^^0^B69562260
"BLD",6683,"KRN",9.8,"NM",12,0)
SDWLE^^0^B27860181
"BLD",6683,"KRN",9.8,"NM",13,0)
SCMCQK1^^0^B90469007
"BLD",6683,"KRN",9.8,"NM","B","SCMCHLB1",8)

"BLD",6683,"KRN",9.8,"NM","B","SCMCHLB2",9)

"BLD",6683,"KRN",9.8,"NM","B","SCMCHLS",10)

"BLD",6683,"KRN",9.8,"NM","B","SCMCMU2",11)

"BLD",6683,"KRN",9.8,"NM","B","SCMCQK1",13)

"BLD",6683,"KRN",9.8,"NM","B","SDWLE",12)

"BLD",6683,"KRN",9.8,"NM","B","SDWLI",1)

"BLD",6683,"KRN",9.8,"NM","B","SDWLQSR",2)

"BLD",6683,"KRN",9.8,"NM","B","SDWLR30",5)

"BLD",6683,"KRN",9.8,"NM","B","SDWLR31",6)

"BLD",6683,"KRN",9.8,"NM","B","SDWLRSR",3)

"BLD",6683,"KRN",19,0)
19
"BLD",6683,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",6683,"KRN",19,"NM",1,0)
SD WAIT LIST REPORTS MENU^^3
"BLD",6683,"KRN",19,"NM",2,0)
SD WAIT LIST 30>30>120 REPORT^^0^
"BLD",6683,"KRN",19,"NM","B","SD WAIT LIST 30>30>120 REPORT",2)

"BLD",6683,"KRN",19,"NM","B","SD WAIT LIST REPORTS MENU",1)

"BLD",6683,"KRN",19.1,0)
19.1
"BLD",6683,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6683,"KRN",101,0)
101
"BLD",6683,"KRN",409.61,0)
409.61
"BLD",6683,"KRN",771,0)
771
"BLD",6683,"KRN",870,0)
870
"BLD",6683,"KRN",8989.51,0)
8989.51
"BLD",6683,"KRN",8989.52,0)
8989.52
"BLD",6683,"KRN",8994,0)
8994
"BLD",6683,"KRN","B",.4,.4)

"BLD",6683,"KRN","B",.401,.401)

"BLD",6683,"KRN","B",.402,.402)

"BLD",6683,"KRN","B",.403,.403)

"BLD",6683,"KRN","B",.5,.5)

"BLD",6683,"KRN","B",.84,.84)

"BLD",6683,"KRN","B",3.6,3.6)

"BLD",6683,"KRN","B",3.8,3.8)

"BLD",6683,"KRN","B",9.2,9.2)

"BLD",6683,"KRN","B",9.8,9.8)

"BLD",6683,"KRN","B",19,19)

"BLD",6683,"KRN","B",19.1,19.1)

"BLD",6683,"KRN","B",101,101)

"BLD",6683,"KRN","B",409.61,409.61)

"BLD",6683,"KRN","B",771,771)

"BLD",6683,"KRN","B",870,870)

"BLD",6683,"KRN","B",8989.51,8989.51)

"BLD",6683,"KRN","B",8989.52,8989.52)

"BLD",6683,"KRN","B",8994,8994)

"BLD",6683,"QUES",0)
^9.62^^
"BLD",6683,"REQB",0)
^9.611^12^12
"BLD",6683,"REQB",1,0)
SD*5.3*448^1
"BLD",6683,"REQB",2,0)
SD*5.3*446^1
"BLD",6683,"REQB",3,0)
SD*5.3*415^1
"BLD",6683,"REQB",4,0)
SD*5.3*515^1
"BLD",6683,"REQB",5,0)
SD*5.3*263^1
"BLD",6683,"REQB",6,0)
SD*5.3*273^1
"BLD",6683,"REQB",7,0)
SD*5.3*399^1
"BLD",6683,"REQB",8,0)
SD*5.3*412^1
"BLD",6683,"REQB",9,0)
SD*5.3*224^1
"BLD",6683,"REQB",10,0)
SD*5.3*177^1
"BLD",6683,"REQB",11,0)
SD*5.3*436^1
"BLD",6683,"REQB",12,0)
SD*5.3*297^1
"BLD",6683,"REQB","B","SD*5.3*177",10)

"BLD",6683,"REQB","B","SD*5.3*224",9)

"BLD",6683,"REQB","B","SD*5.3*263",5)

"BLD",6683,"REQB","B","SD*5.3*273",6)

"BLD",6683,"REQB","B","SD*5.3*297",12)

"BLD",6683,"REQB","B","SD*5.3*399",7)

"BLD",6683,"REQB","B","SD*5.3*412",8)

"BLD",6683,"REQB","B","SD*5.3*415",3)

"BLD",6683,"REQB","B","SD*5.3*436",11)

"BLD",6683,"REQB","B","SD*5.3*446",2)

"BLD",6683,"REQB","B","SD*5.3*448",1)

"BLD",6683,"REQB","B","SD*5.3*515",4)

"KRN",.4,5126,-1)
0^1
"KRN",.4,5126,0)
SDWLRO^3071022.1108^@^409.3^^@^3080108
"KRN",.4,5126,"F",1)
.01;L25;X~"REOPEN REASON: ";C42~29;X~"EWL TYPE: ";C1~4;X;L25~"DESIRED DATE: ";C42~22;X;~"APPT: ";C1~13.2;L25;C7;X~13;X;d;L20;C36~13.8;L20;C60;X~
"KRN",.4,5126,"F",2)
"REOPEN COMMENTS: ";C1~30;X~"";S1~
"KRN",.4,5126,"H")
EWL Reopened Entries Report
"KRN",19,2919106,-1)
3^1
"KRN",19,2919106,0)
SD WAIT LIST REPORTS MENU^Wait List (Sch/PCMM) Reports^^M^^^^^^^^^^1^1
"KRN",19,2919106,10,0)
^19.01IP^27^27
"KRN",19,2919106,10,15,0)
2920315^13^13
"KRN",19,2919106,10,15,"^")
SD WAIT LIST 30>30>120 REPORT
"KRN",19,2919106,15)
D EN^SDWLKIL
"KRN",19,2919106,20)
D EN^SDWLKIL
"KRN",19,2919106,99)
61009,39645
"KRN",19,2919106,99.1)
60953,38693
"KRN",19,2919106,"U")
WAIT LIST (SCH/PCMM) REPORTS
"KRN",19,2920315,-1)
0^2
"KRN",19,2920315,0)
SD WAIT LIST 30>30>120 REPORT^30, Over 30, Over 120 Day Report^^R^^^^^^^^
"KRN",19,2920315,25)
EN^SDWLR30
"KRN",19,2920315,"U")
30, OVER 30, OVER 120 DAY REPO
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930930
"PKG",16,22,1,"PAH",1,0)
524^3080205^520651034
"PKG",16,22,1,"PAH",1,1,0)
^^5^5^3080205
"PKG",16,22,1,"PAH",1,1,1,0)
This patch address three enhancements to the EWL Wait List. First, a new 
"PKG",16,22,1,"PAH",1,1,2,0)
report is created to break down the wait list specialties/locations by 
"PKG",16,22,1,"PAH",1,1,3,0)
<30,>30, and >120 totals. Second, the Wait List Static report will 
"PKG",16,22,1,"PAH",1,1,4,0)
exclude 'PREVIOUS REMAINING' and '# REMAINING'. Finally, the EWL display 
"PKG",16,22,1,"PAH",1,1,5,0)
output will ask if only 'OPEN' entries are to be displayed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","SCMCHLB1")
0^8^B15267119^B15467026
"RTN","SCMCHLB1",1,0)
SCMCHLB1 ;BPOI/DJB - PCMM HL7 Bld Segment Array Cont.;8/17/99
"RTN","SCMCHLB1",2,0)
 ;;5.3;Scheduling;**177,515,524**;08/17/99;Build 29
"RTN","SCMCHLB1",3,0)
 ;
"RTN","SCMCHLB1",4,0)
SEGMENTS(DFN,SUB) ;Build EVN & PID segments
"RTN","SCMCHLB1",5,0)
 ;Input:
"RTN","SCMCHLB1",6,0)
 ;   DFN      - Patient IEN
"RTN","SCMCHLB1",7,0)
 ;   SUB      - Value for 1st Subscript
"RTN","SCMCHLB1",8,0)
 ;Output:
"RTN","SCMCHLB1",9,0)
 ;   XMITARRY() - Array of EVN & PID segments
"RTN","SCMCHLB1",10,0)
 ;
"RTN","SCMCHLB1",11,0)
 NEW LINETAG,SEGMENTS,SEGNAME,SEGORD
"RTN","SCMCHLB1",12,0)
 NEW EVNTDATE,EVNTHL7,VAFARRY,VAFEVN,VAFPID,VAFSTR
"RTN","SCMCHLB1",13,0)
 ;
"RTN","SCMCHLB1",14,0)
 ;Initialize variables
"RTN","SCMCHLB1",15,0)
 Q:'$G(DFN)  ;Required for PID segment
"RTN","SCMCHLB1",16,0)
 Q:'$G(SUB)
"RTN","SCMCHLB1",17,0)
 S EVNTDATE=DT
"RTN","SCMCHLB1",18,0)
 S EVNTHL7="A08"
"RTN","SCMCHLB1",19,0)
 ;
"RTN","SCMCHLB1",20,0)
 ;Get array of segments to be built
"RTN","SCMCHLB1",21,0)
 D SEGMENTS^SCMCHLS(EVNTHL7,"SEGMENTS")
"RTN","SCMCHLB1",22,0)
 ;
"RTN","SCMCHLB1",23,0)
 ;Loop thru segments array. Ignore ZPC segment - already built.
"RTN","SCMCHLB1",24,0)
 S SEGORD=0
"RTN","SCMCHLB1",25,0)
 F  S SEGORD=+$O(SEGMENTS(SEGORD)) Q:'SEGORD  D  ;
"RTN","SCMCHLB1",26,0)
 . S SEGNAME=""
"RTN","SCMCHLB1",27,0)
 . F  S SEGNAME=$O(SEGMENTS(SEGORD,SEGNAME)) Q:SEGNAME=""  D  ;
"RTN","SCMCHLB1",28,0)
 .. Q:SEGNAME="ZPC"  ;.................ZPC already built
"RTN","SCMCHLB1",29,0)
 .. S VAFSTR=SEGMENTS(SEGORD,SEGNAME) ;String of segment fields
"RTN","SCMCHLB1",30,0)
 .. S LINETAG="BLD"_SEGNAME
"RTN","SCMCHLB1",31,0)
 .. D @LINETAG^SCMCHLS ;...............Build segment
"RTN","SCMCHLB1",32,0)
 .. S LINETAG="CPY"_SEGNAME
"RTN","SCMCHLB1",33,0)
 .. D @LINETAG^SCMCHLS ;...............Copy segment into array
"RTN","SCMCHLB1",34,0)
 Q
"RTN","SCMCHLB1",35,0)
 ;
"RTN","SCMCHLB1",36,0)
ZPC(ARRAY,DELETE) ;Loop thru array and build array of ZPC segments.
"RTN","SCMCHLB1",37,0)
 ;
"RTN","SCMCHLB1",38,0)
 ;Input:
"RTN","SCMCHLB1",39,0)
 ;   ARRAY  - Array to be processed. This array was built in ^SCMCHLB
"RTN","SCMCHLB1",40,0)
 ;            with calls to $$PRTPC^SCAPMC() and $$PRPTTPC^SCAPMC().
"RTN","SCMCHLB1",41,0)
 ;            Examples:
"RTN","SCMCHLB1",42,0)
 ;               ARRAY(2290,"PCP","2290-406-34-PCP")= Data
"RTN","SCMCHLB1",43,0)
 ;               ARRAY(345,"PROV-P","2290-405-0-AP")= Data
"RTN","SCMCHLB1",44,0)
 ;   DELETE - 1=Process a delete type ZPC segment (all fields null)
"RTN","SCMCHLB1",45,0)
 ;Output:
"RTN","SCMCHLB1",46,0)
 ;   Array of ZPC segments
"RTN","SCMCHLB1",47,0)
 ;
"RTN","SCMCHLB1",48,0)
 NEW DATA,DATE,ID,ID1,LINETAG,SUB,TYPE,VAFZPC
"RTN","SCMCHLB1",49,0)
 ;
"RTN","SCMCHLB1",50,0)
 S SUB=0
"RTN","SCMCHLB1",51,0)
 F  S SUB=$O(ARRAY(SUB)) Q:'SUB  D  ;
"RTN","SCMCHLB1",52,0)
 . S TYPE=""
"RTN","SCMCHLB1",53,0)
 . F  S TYPE=$O(ARRAY(SUB,TYPE)) Q:TYPE=""  D  ;
"RTN","SCMCHLB1",54,0)
 .. S ID=""
"RTN","SCMCHLB1",55,0)
 .. F  S ID=$O(ARRAY(SUB,TYPE,ID)) Q:ID=""  D  ;
"RTN","SCMCHLB1",56,0)
 ... S DATA=$G(ARRAY(SUB,TYPE,ID))
"RTN","SCMCHLB1",57,0)
 ... I $G(DELETE) S DATA="^^^" ;A Delete type ZPC segment
"RTN","SCMCHLB1",58,0)
 ... E  D  ;....................A ZPC segment with data
"RTN","SCMCHLB1",59,0)
 .... ;Get dates
"RTN","SCMCHLB1",60,0)
 .... S DATE(9)=$P(DATA,U,9)
"RTN","SCMCHLB1",61,0)
 .... S DATE(10)=$P(DATA,U,10)
"RTN","SCMCHLB1",62,0)
 .... S DATE(14)=$P(DATA,U,14) ;Preceptor start date
"RTN","SCMCHLB1",63,0)
 .... S DATE(15)=$P(DATA,U,15) ;Preceptor end date
"RTN","SCMCHLB1",64,0)
 .... I DATE(14),DATE(14)>DATE(9) S DATE(9)=DATE(14)
"RTN","SCMCHLB1",65,0)
 .... I DATE(15) D  ;
"RTN","SCMCHLB1",66,0)
 ..... I 'DATE(10) S DATE(10)=DATE(15) Q
"RTN","SCMCHLB1",67,0)
 ..... I DATE(15)<DATE(10) S DATE(10)=DATE(15)
"RTN","SCMCHLB1",68,0)
 .... ;
"RTN","SCMCHLB1",69,0)
 .... ;Provider^AssignDate^UnassignDate^ProviderType
"RTN","SCMCHLB1",70,0)
 .... S DATA=$P(DATA,U,1)_"^"_DATE(9)_"^"_DATE(10)
"RTN","SCMCHLB1",71,0)
 ....; PATCH 515 DLL ADD NEW ROLES (TPA,CCM,PM)
"RTN","SCMCHLB1",72,0)
 ....; OLD CODE = S DATA=DATA_"^"_$S(ID["AP":"AP",1:"PCP")
"RTN","SCMCHLB1",73,0)
 ....S ROLE=$P(ID,"-",4) I $G(ROLE)="" S ROLE="PCP"
"RTN","SCMCHLB1",74,0)
 ....S DATA=DATA_"^"_ROLE
"RTN","SCMCHLB1",75,0)
 ... ;
"RTN","SCMCHLB1",76,0)
 ... D BLDZPC^SCMCHLS ;..Build segment ; og/sd/524
"RTN","SCMCHLB1",77,0)
 ... D CPYZPC^SCMCHLS ;..Copy segment into array ; og/sd/524
"RTN","SCMCHLB1",78,0)
 Q
"RTN","SCMCHLB1",79,0)
 ;
"RTN","SCMCHLB1",80,0)
DFN(ND) ;Find DFN from zero node of Patient Team Position Assign (404.43).
"RTN","SCMCHLB1",81,0)
 ;Input:
"RTN","SCMCHLB1",82,0)
 ;   ND  - Zero node of 404.43
"RTN","SCMCHLB1",83,0)
 ;Output:
"RTN","SCMCHLB1",84,0)
 ;   DFN - Patient IEN
"RTN","SCMCHLB1",85,0)
 ;   ""  - No valid DFN found
"RTN","SCMCHLB1",86,0)
 ;
"RTN","SCMCHLB1",87,0)
 S DFN=$P(ND,U,1)
"RTN","SCMCHLB1",88,0)
 I DFN S DFN=$P($G(^SCPT(404.42,DFN,0)),U,1)
"RTN","SCMCHLB1",89,0)
 Q DFN
"RTN","SCMCHLB1",90,0)
 ;
"RTN","SCMCHLB1",91,0)
ADJID(ARRAY,SCIEN) ;Adjust ID to include Pt Tm Pos Assign pointer
"RTN","SCMCHLB1",92,0)
 ;Example:  From this:       424-34-AP
"RTN","SCMCHLB1",93,0)
 ;            To this:  2290-424-34-AP
"RTN","SCMCHLB1",94,0)
 ;Input:
"RTN","SCMCHLB1",95,0)
 ;    ARRAY - Array to be processed
"RTN","SCMCHLB1",96,0)
 ;    SCIEN - 404.43 IEN to be added to ID
"RTN","SCMCHLB1",97,0)
 ;
"RTN","SCMCHLB1",98,0)
 NEW ADJID,ID,NUM,TMP,TYPE
"RTN","SCMCHLB1",99,0)
 ;
"RTN","SCMCHLB1",100,0)
 ;Build TMP() array using adjusted ID
"RTN","SCMCHLB1",101,0)
 S NUM=0
"RTN","SCMCHLB1",102,0)
 F  S NUM=$O(ARRAY(NUM)) Q:'NUM  D  ;
"RTN","SCMCHLB1",103,0)
 . S TYPE=""
"RTN","SCMCHLB1",104,0)
 . F  S TYPE=$O(ARRAY(NUM,TYPE)) Q:TYPE=""  D  ;
"RTN","SCMCHLB1",105,0)
 .. S ID=""
"RTN","SCMCHLB1",106,0)
 .. F  S ID=$O(ARRAY(NUM,TYPE,ID)) Q:ID=""  D  ;
"RTN","SCMCHLB1",107,0)
 ... S ADJID=SCIEN_"-"_ID ;..Add 404.43 IEN
"RTN","SCMCHLB1",108,0)
 ... S TMP(NUM,TYPE,ADJID)=ARRAY(NUM,TYPE,ID)
"RTN","SCMCHLB1",109,0)
 ;
"RTN","SCMCHLB1",110,0)
 ;Replace ARRAY() with adjusted TMP() array.
"RTN","SCMCHLB1",111,0)
 Q:'$D(TMP)
"RTN","SCMCHLB1",112,0)
 KILL ARRAY
"RTN","SCMCHLB1",113,0)
 M ARRAY=TMP ;Copy TMP() into ARRAY()
"RTN","SCMCHLB1",114,0)
 Q
"RTN","SCMCHLB1",115,0)
 ;
"RTN","SCMCHLB1",116,0)
CHECK(VARPTR) ;Validate event variable pointer.
"RTN","SCMCHLB1",117,0)
 ;Input:
"RTN","SCMCHLB1",118,0)
 ;      VARPTR - EVENT POINTER field of PCMM HL7 EVENT (#404.48)
"RTN","SCMCHLB1",119,0)
 ;Output:
"RTN","SCMCHLB1",120,0)
 ;      SCIEN  - IEN portion of variable pointer
"RTN","SCMCHLB1",121,0)
 ;      SCGLB  - Global portion of variable pointer
"RTN","SCMCHLB1",122,0)
 ;Return:
"RTN","SCMCHLB1",123,0)
 ;      0: Invalid variable pointer format
"RTN","SCMCHLB1",124,0)
 ;      1: Valid pointer
"RTN","SCMCHLB1",125,0)
 ;      2: No data. Entry has been deleted. Send a delete to NPCD.
"RTN","SCMCHLB1",126,0)
 ;
"RTN","SCMCHLB1",127,0)
 NEW CHK,GLB
"RTN","SCMCHLB1",128,0)
 ;
"RTN","SCMCHLB1",129,0)
 S SCIEN=$P(VARPTR,";") ;....IEN portion of variable pointer
"RTN","SCMCHLB1",130,0)
 S SCGLB=$P(VARPTR,";",2) ;..Global portion of variable pointer
"RTN","SCMCHLB1",131,0)
 ;
"RTN","SCMCHLB1",132,0)
 ;Return zero if variable pointer is invalid.
"RTN","SCMCHLB1",133,0)
 I 'SCIEN Q 0
"RTN","SCMCHLB1",134,0)
 S CHK=0 D  I CHK Q 0
"RTN","SCMCHLB1",135,0)
 . Q:SCGLB="SCPT(404.43,"
"RTN","SCMCHLB1",136,0)
 . Q:SCGLB="SCTM(404.52,"
"RTN","SCMCHLB1",137,0)
 . Q:SCGLB="SCTM(404.53,"
"RTN","SCMCHLB1",138,0)
 . S CHK=1
"RTN","SCMCHLB1",139,0)
 ;
"RTN","SCMCHLB1",140,0)
 ;Is there data for this IEN?
"RTN","SCMCHLB1",141,0)
 S GLB="^"_SCGLB_SCIEN_",0)"
"RTN","SCMCHLB1",142,0)
 I '$D(@GLB) Q 2 ;..Entry has been deleted
"RTN","SCMCHLB1",143,0)
 Q 1
"RTN","SCMCHLB2")
0^9^B10505693^B10064632
"RTN","SCMCHLB2",1,0)
SCMCHLB2 ;BPOI/DJB - PCMM HL7 Bld Segment Array Deletes;3/6/00
"RTN","SCMCHLB2",2,0)
 ;;5.3;Scheduling;**177,204,210,224,524**;08/13/93;Build 29
"RTN","SCMCHLB2",3,0)
 ;
"RTN","SCMCHLB2",4,0)
PTP ;Entry has been deleted from file 404.43. Send deletes to NPCD.
"RTN","SCMCHLB2",5,0)
 ;
"RTN","SCMCHLB2",6,0)
 NEW DFN,TP
"RTN","SCMCHLB2",7,0)
 D GETEVENT Q:'DFN  ;..Get DFN & TP from PCMM HL7 EVENT file
"RTN","SCMCHLB2",8,0)
 D PTPD(SCIEN) ;.......Send delete
"RTN","SCMCHLB2",9,0)
 ;alb/rpm;Patch 224 Decrement max msg counter
"RTN","SCMCHLB2",10,0)
 I $D(SCLIMIT) S SCLIMIT=SCLIMIT-1
"RTN","SCMCHLB2",11,0)
 Q
"RTN","SCMCHLB2",12,0)
 ;
"RTN","SCMCHLB2",13,0)
PTPD(PTPI) ;From PCMM HL7 ID file, get all ID's whose 1st piece equals PTPI,
"RTN","SCMCHLB2",14,0)
 ;and send a delete segment.
"RTN","SCMCHLB2",15,0)
 ;Input: PTPI - 404.43 IEN (1st piece of ID)
"RTN","SCMCHLB2",16,0)
 ;
"RTN","SCMCHLB2",17,0)
 ;djb/bp Added SCSEQ per Patch 210[rel 204].
"RTN","SCMCHLB2",18,0)
 NEW DATA,ID,LINETAG,SCSEQ,VAFZPC
"RTN","SCMCHLB2",19,0)
 ;
"RTN","SCMCHLB2",20,0)
 S ID=PTPI_"-"
"RTN","SCMCHLB2",21,0)
 F  S ID=$O(^SCPT(404.49,"B",ID)) Q:ID=""!($P(ID,"-",1)'=PTPI)  D  ;
"RTN","SCMCHLB2",22,0)
 . N SUB  ; og/sd/524
"RTN","SCMCHLB2",23,0)
 . S SUB=PTPI,DATA="^^^" ;........A Delete type ZPC segment
"RTN","SCMCHLB2",24,0)
 . ;djb/bp Patch 210. Eliminate indirection[rel 204]
"RTN","SCMCHLB2",25,0)
 . D BLDZPC^SCMCHLS ;..Build segment (needs ID & DATA)
"RTN","SCMCHLB2",26,0)
 . D CPYZPC^SCMCHLS ;..Copy segment into array (needs ID & VAFZPC)
"RTN","SCMCHLB2",27,0)
 Q:'$D(@XMITARRY)
"RTN","SCMCHLB2",28,0)
 D SEGMENTS^SCMCHLB1(DFN,PTPI) ;Bld array of EVN,PID segments
"RTN","SCMCHLB2",29,0)
 Q
"RTN","SCMCHLB2",30,0)
 ;
"RTN","SCMCHLB2",31,0)
POS ;Entry has been deleted from file 404.52. Send deletes to NPCD.
"RTN","SCMCHLB2",32,0)
 ;
"RTN","SCMCHLB2",33,0)
 NEW DATA,DFN,ID,LINETAG,ND,POS,PTPI,VAFZPC
"RTN","SCMCHLB2",34,0)
 ;
"RTN","SCMCHLB2",35,0)
 ;From PCMM HL7 ID file, get all ID's whose 2nd piece equals SCIEN,
"RTN","SCMCHLB2",36,0)
 ;Build array sorted by:  DFN
"RTN","SCMCHLB2",37,0)
 ;                        404.43 IEN
"RTN","SCMCHLB2",38,0)
 ;                        ID
"RTN","SCMCHLB2",39,0)
 ;djb/bp Fix <STORE> errors for NOIS BIG-1199-71271.
"RTN","SCMCHLB2",40,0)
 ;       Replace local array POS() with global array.
"RTN","SCMCHLB2",41,0)
 S POS="^TMP(""PCMM"",""POS"","_$J_")"
"RTN","SCMCHLB2",42,0)
 KILL @POS
"RTN","SCMCHLB2",43,0)
 ;
"RTN","SCMCHLB2",44,0)
 S ID=""
"RTN","SCMCHLB2",45,0)
 F  S ID=$O(^SCPT(404.49,"B",ID)) Q:ID=""  D  ;
"RTN","SCMCHLB2",46,0)
 . Q:$P(ID,"-",2)'=SCIEN
"RTN","SCMCHLB2",47,0)
 . S PTPI=$P(ID,"-",1) ;...............404.43 IEN
"RTN","SCMCHLB2",48,0)
 . S ND=$G(^SCPT(404.43,PTPI,0))
"RTN","SCMCHLB2",49,0)
 . Q:($P(ND,U,5)'=1)  ;................Must be Primary Care
"RTN","SCMCHLB2",50,0)
 . S DFN=$$DFN^SCMCHLB1(ND) Q:'DFN  ;..Get patient
"RTN","SCMCHLB2",51,0)
 . ;
"RTN","SCMCHLB2",52,0)
 . S @POS@(DFN,PTPI,ID)="" ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",53,0)
 . ;
"RTN","SCMCHLB2",54,0)
 Q:'$D(@POS)
"RTN","SCMCHLB2",55,0)
 ;
"RTN","SCMCHLB2",56,0)
 ;Process array
"RTN","SCMCHLB2",57,0)
 S DFN=0
"RTN","SCMCHLB2",58,0)
 F  S DFN=$O(@POS@(DFN)) Q:'DFN  D  ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",59,0)
 . S PTPI=0
"RTN","SCMCHLB2",60,0)
 . F  S PTPI=$O(@POS@(DFN,PTPI)) Q:'PTPI  D  ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",61,0)
 .. NEW SCSEQ ;djb/bp Added per Patch 210.
"RTN","SCMCHLB2",62,0)
 .. ;alb/rpm;Patch 224 Decrement max msg counter
"RTN","SCMCHLB2",63,0)
 .. I $D(SCLIMIT) S SCLIMIT=SCLIMIT-1
"RTN","SCMCHLB2",64,0)
 .. D SEGMENTS^SCMCHLB1(DFN,PTPI) ;Bld array of EVN,PID segments
"RTN","SCMCHLB2",65,0)
 .. S ID=""
"RTN","SCMCHLB2",66,0)
 .. F  S ID=$O(@POS@(DFN,PTPI,ID)) Q:ID=""  D  ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",67,0)
 ... N SUB  ; og/sd/524
"RTN","SCMCHLB2",68,0)
 ... S SUB=PTPI,DATA="^^^" ;........A Delete type ZPC segment
"RTN","SCMCHLB2",69,0)
 ... ;djb/bp Patch 210. Eliminate indirection[rel 204]
"RTN","SCMCHLB2",70,0)
 ... D BLDZPC^SCMCHLS ;..Build segment (needs ID & DATA)
"RTN","SCMCHLB2",71,0)
 ... D CPYZPC^SCMCHLS ;..Copy segment into array (needs ID & VAFZPC)
"RTN","SCMCHLB2",72,0)
 ;
"RTN","SCMCHLB2",73,0)
 KILL @POS ;djb/bp BIG-1199-71271
"RTN","SCMCHLB2",74,0)
 Q
"RTN","SCMCHLB2",75,0)
 ;
"RTN","SCMCHLB2",76,0)
PRE ;Entry has been deleted from file 404.53. Send deletes to NPCD.
"RTN","SCMCHLB2",77,0)
 ;****
"RTN","SCMCHLB2",78,0)
 ;Currently, deletes to 404.53 are not allowed if there are
"RTN","SCMCHLB2",79,0)
 ;patients assigned.
"RTN","SCMCHLB2",80,0)
 ;****
"RTN","SCMCHLB2",81,0)
 ;alb/rpm;Patch 224 Decrement max msg counter
"RTN","SCMCHLB2",82,0)
 ;Uncomment the following line if this tag becomes active
"RTN","SCMCHLB2",83,0)
 ;I $D(SCLIMIT) S SCLIMIT=SCLIMIT-1
"RTN","SCMCHLB2",84,0)
 Q
"RTN","SCMCHLB2",85,0)
 ;
"RTN","SCMCHLB2",86,0)
GETEVENT ;Get data from PCMM HL7 EVENT file
"RTN","SCMCHLB2",87,0)
 ;Return: DFN - Patient IEN
"RTN","SCMCHLB2",88,0)
 ;        TP  - Team Position
"RTN","SCMCHLB2",89,0)
 ;
"RTN","SCMCHLB2",90,0)
 NEW IEN,ND,PTR
"RTN","SCMCHLB2",91,0)
 ;
"RTN","SCMCHLB2",92,0)
 ;If in manual mode, get SCEVIEN (404.48 IEN).
"RTN","SCMCHLB2",93,0)
 I $G(SCMANUAL) D  ;
"RTN","SCMCHLB2",94,0)
 . S (IEN,SCEVIEN)=0
"RTN","SCMCHLB2",95,0)
 . F  S IEN=$O(^SCPT(404.48,IEN)) Q:'IEN!SCEVIEN  D  ;
"RTN","SCMCHLB2",96,0)
 .. S PTR=$P($G(^(IEN,0)),U,7) Q:PTR=""
"RTN","SCMCHLB2",97,0)
 .. Q:PTR'=VARPTR
"RTN","SCMCHLB2",98,0)
 .. S SCEVIEN=IEN
"RTN","SCMCHLB2",99,0)
 ;
"RTN","SCMCHLB2",100,0)
 S ND=$G(^SCPT(404.48,SCEVIEN,0))
"RTN","SCMCHLB2",101,0)
 S DFN=$P(ND,U,2) ;..Patient (DFN)
"RTN","SCMCHLB2",102,0)
 S TP=$P(ND,U,4) ;...Team Position
"RTN","SCMCHLB2",103,0)
 Q
"RTN","SCMCHLS")
0^10^B5831159^B5764644
"RTN","SCMCHLS",1,0)
SCMCHLS ;BPOI/DJB - PCMM HL7 Segment Utils;12/13/99
"RTN","SCMCHLS",2,0)
 ;;5.3;Scheduling;**177,210,212,293,515,524**;08/13/93;Build 29
"RTN","SCMCHLS",3,0)
 ;
"RTN","SCMCHLS",4,0)
 ;Ref rtn: SCDXMSG1
"RTN","SCMCHLS",5,0)
 ;
"RTN","SCMCHLS",6,0)
 ;--> Build HL7 segments
"RTN","SCMCHLS",7,0)
BLDEVN ;Build EVN segment
"RTN","SCMCHLS",8,0)
 S VAFEVN=$$EN^VAFHLEVN(EVNTHL7,EVNTDATE,VAFSTR,HL("Q"),HL("FS"))
"RTN","SCMCHLS",9,0)
 Q
"RTN","SCMCHLS",10,0)
BLDPID ;Build PID segment
"RTN","SCMCHLS",11,0)
 ;S VAFPID=$$EN^VAFHLPID(DFN,VAFSTR)
"RTN","SCMCHLS",12,0)
 S VAFPID=$$EN^VAFCPID(DFN,VAFSTR) ;Use CIRN version
"RTN","SCMCHLS",13,0)
 D SETMAR^SCMSVUT0(.VAFPID,HL("Q"),HL("FS"))
"RTN","SCMCHLS",14,0)
 Q
"RTN","SCMCHLS",15,0)
BLDZPC ;Build ZPC segment
"RTN","SCMCHLS",16,0)
 ;djb/bp Patch 210. Sequentially number multiple ZPC segments.
"RTN","SCMCHLS",17,0)
 ;new code begin
"RTN","SCMCHLS",18,0)
 S SCSEQ=$G(SCSEQ)+1 ;Increment ZPC sequence number.
"RTN","SCMCHLS",19,0)
 ; S VAFZPC=$$ZPC^SCMCHLZ("",ID,DATA,SCSEQ)
"RTN","SCMCHLS",20,0)
 S VAFZPC=$$ZPC^SCMCHLZ("",.ID,.DATA,SCSEQ)
"RTN","SCMCHLS",21,0)
 ;new code end
"RTN","SCMCHLS",22,0)
 ;old code begin
"RTN","SCMCHLS",23,0)
 ;S VAFZPC=$$ZPC^SCMCHLZ("",ID,DATA)
"RTN","SCMCHLS",24,0)
 ;old code end
"RTN","SCMCHLS",25,0)
 Q
"RTN","SCMCHLS",26,0)
 ;
"RTN","SCMCHLS",27,0)
 ;--> Copy HL7 segments into HL7 message
"RTN","SCMCHLS",28,0)
CPYEVN ;Copy EVN segment
"RTN","SCMCHLS",29,0)
 ;Add 1 as 3rd subscript so number of subscripts matches ZPC segment
"RTN","SCMCHLS",30,0)
 M @XMITARRY@(SUB,SEGNAME,1)=VAFEVN
"RTN","SCMCHLS",31,0)
 Q
"RTN","SCMCHLS",32,0)
CPYPID ;Copy PID segment
"RTN","SCMCHLS",33,0)
 ;Add 1 as 3rd subscript so number of subscripts matches ZPC segment
"RTN","SCMCHLS",34,0)
 M @XMITARRY@(SUB,SEGNAME,1)=VAFPID
"RTN","SCMCHLS",35,0)
 Q
"RTN","SCMCHLS",36,0)
CPYZPC ;Copy ZPC segment
"RTN","SCMCHLS",37,0)
 ; PATCH 515 DLL USE ORIG TRIG 
"RTN","SCMCHLS",38,0)
 ; old code = M @XMITARRY@($P(ID,"-",1),"ZPC",ID)=VAFZPC
"RTN","SCMCHLS",39,0)
 M @XMITARRY@(SUB,"ZPC",ID)=VAFZPC  ; og/sd/524
"RTN","SCMCHLS",40,0)
 Q
"RTN","SCMCHLS",41,0)
 ;
"RTN","SCMCHLS",42,0)
 ;--> Delete HL7 segment variables
"RTN","SCMCHLS",43,0)
DELEVN ;Delete EVN variable
"RTN","SCMCHLS",44,0)
 KILL VAFEVN
"RTN","SCMCHLS",45,0)
 Q
"RTN","SCMCHLS",46,0)
DELPID ;Delete PID variable
"RTN","SCMCHLS",47,0)
 KILL VAFPID
"RTN","SCMCHLS",48,0)
 Q
"RTN","SCMCHLS",49,0)
DELZPC ;Delete ZPC variable
"RTN","SCMCHLS",50,0)
 KILL VAFZPC
"RTN","SCMCHLS",51,0)
 Q
"RTN","SCMCHLS",52,0)
 ;
"RTN","SCMCHLS",53,0)
SEGMENTS(EVNTTYPE,SEGARRY) ;Build list of HL7 segments for a given event type
"RTN","SCMCHLS",54,0)
 ;
"RTN","SCMCHLS",55,0)
 ; Input: EVNTTYPE - Event type to build list for A08 & A23 are the
"RTN","SCMCHLS",56,0)
 ;                   only types currently supported.
"RTN","SCMCHLS",57,0)
 ;                   Default=A08
"RTN","SCMCHLS",58,0)
 ;         SEGARRY - Array to place output in (full global reference)
"RTN","SCMCHLS",59,0)
 ;                   Defaul=^TMP("SCMC SEGMENTS",$J)
"RTN","SCMCHLS",60,0)
 ;Output: SEGARRY(Seq,Name)=Fields
"RTN","SCMCHLS",61,0)
 ;             Seq - Sequence number to order segments as they should
"RTN","SCMCHLS",62,0)
 ;                   be placed in the HL7 message.
"RTN","SCMCHLS",63,0)
 ;            Name - Name of HL7 segment.
"RTN","SCMCHLS",64,0)
 ;          Fields - List of fields used by PCMM. VAFSTR would be set
"RTN","SCMCHLS",65,0)
 ;                   to this value.
"RTN","SCMCHLS",66,0)
 ;  Note: MSH segment is not included
"RTN","SCMCHLS",67,0)
 ;
"RTN","SCMCHLS",68,0)
 ;Check input
"RTN","SCMCHLS",69,0)
 S EVNTTYPE=$G(EVNTTYPE)
"RTN","SCMCHLS",70,0)
 S:(EVNTTYPE'="A23") EVNTTYPE="A08"
"RTN","SCMCHLS",71,0)
 S SEGARRY=$G(SEGARRY)
"RTN","SCMCHLS",72,0)
 S:(SEGARRY="") SEGARRY="^TMP(""SCMC SEGMENTS"","_$J_")"
"RTN","SCMCHLS",73,0)
 ;
"RTN","SCMCHLS",74,0)
 ;Segments used by A08
"RTN","SCMCHLS",75,0)
 S @SEGARRY@(1,"EVN")="1,2"
"RTN","SCMCHLS",76,0)
 S @SEGARRY@(2,"PID")="1,2,3,4,5,6,7,8,10N,11,12,13,14,16,17,19,22"
"RTN","SCMCHLS",77,0)
 S @SEGARRY@(3,"ZPC")="1,2,3,4,5,6,8" ;bp/ar and alb/rpm Patch 212
"RTN","SCMCHLS",78,0)
 Q
"RTN","SCMCHLS",79,0)
 ;
"RTN","SCMCHLS",80,0)
UNWIND(XMITARRY,INSRTPNT) ;Remove all data that was put into transmit array.
"RTN","SCMCHLS",81,0)
 ;
"RTN","SCMCHLS",82,0)
 ; Input: XMITARRY - Array containing HL7 message (full global ref).
"RTN","SCMCHLS",83,0)
 ;                   Default=^TMP("HLS",$J).
"RTN","SCMCHLS",84,0)
 ;        INSRTPNT - Where to begin deletion from.
"RTN","SCMCHLS",85,0)
 ;                   Default=1
"RTN","SCMCHLS",86,0)
 ;Output: None
"RTN","SCMCHLS",87,0)
 ;
"RTN","SCMCHLS",88,0)
 ;Check input
"RTN","SCMCHLS",89,0)
 S:$G(XMITARRY)="" XMITARRY="^TMP(""HLS"","_$J_")"
"RTN","SCMCHLS",90,0)
 S:$G(INSRTPNT)="" INSRTPNT=1
"RTN","SCMCHLS",91,0)
 ;
"RTN","SCMCHLS",92,0)
 ;Remove insertion point from array
"RTN","SCMCHLS",93,0)
 KILL @XMITARRY@(INSRTPNT)
"RTN","SCMCHLS",94,0)
 ;Remove everything from insertion point to end of array
"RTN","SCMCHLS",95,0)
 F  S INSRTPNT=$O(@XMITARRY@(INSRTPNT)) Q:INSRTPNT=""  KILL @XMITARRY@(INSRTPNT)
"RTN","SCMCHLS",96,0)
 ;Done
"RTN","SCMCHLS",97,0)
 Q
"RTN","SCMCHLS",98,0)
COUNT(VALER) ;counts the number of errored encounters found.
"RTN","SCMCHLS",99,0)
 ;
"RTN","SCMCHLS",100,0)
 ; Input: VALER - Array containing error messages.
"RTN","SCMCHLS",101,0)
 ;Output: Number of errors
"RTN","SCMCHLS",102,0)
 ;
"RTN","SCMCHLS",103,0)
 NEW VAR,CNT
"RTN","SCMCHLS",104,0)
 S CNT=0
"RTN","SCMCHLS",105,0)
 S VAR=""
"RTN","SCMCHLS",106,0)
 F  S VAR=$O(@VALER@(VAR)) Q:VAR']""  S CNT=CNT+1
"RTN","SCMCHLS",107,0)
 Q CNT
"RTN","SCMCMU2")
0^11^B69562260^B68914285
"RTN","SCMCMU2",1,0)
SCMCMU2 ;ALBOI/MJK - PCMM Mass Team/Position Unassignment Processing;07/10/98
"RTN","SCMCMU2",2,0)
 ;;5.3;Scheduling;**148,177,524**;AUG 13, 1993;Build 29
"RTN","SCMCMU2",3,0)
 ;
"RTN","SCMCMU2",4,0)
QUE() ; -- queue mass unassignment
"RTN","SCMCMU2",5,0)
 ;D START Q 99999 ; -- for interactive testing
"RTN","SCMCMU2",6,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTSK
"RTN","SCMCMU2",7,0)
 S ZTRTN="START^SCMCMU2"
"RTN","SCMCMU2",8,0)
 S ZTDESC=VALM("TITLE")
"RTN","SCMCMU2",9,0)
 S ZTDTH=$H
"RTN","SCMCMU2",10,0)
 S ZTIO=""
"RTN","SCMCMU2",11,0)
 F X="SCTEAM","SCPOS","SCTPDIS(","SCMUTYPE","SCDATE","SCSELCNT" S ZTSAVE(X)=""
"RTN","SCMCMU2",12,0)
 F X="^TMP(""SCMU"",$J,""SELECTED"",","^TMP(""SCMU"",$J,""PATIENT INFO""," S ZTSAVE(X)=""
"RTN","SCMCMU2",13,0)
 D ^%ZTLOAD
"RTN","SCMCMU2",14,0)
 Q $G(ZTSK)
"RTN","SCMCMU2",15,0)
 ;
"RTN","SCMCMU2",16,0)
START ; -- entry point for task
"RTN","SCMCMU2",17,0)
 ; -- defined from task SCTEAM,SCPOS,SCTPDIS,SCMUTYPE,SCDATE,SCSELCNT
"RTN","SCMCMU2",18,0)
 ;
"RTN","SCMCMU2",19,0)
 N SCTOP,SCUNCNT,SCASCNT,SCOK
"RTN","SCMCMU2",20,0)
 S SCUNCNT=0
"RTN","SCMCMU2",21,0)
 S SCASCNT=SCSELCNT
"RTN","SCMCMU2",22,0)
 ;
"RTN","SCMCMU2",23,0)
 ; -- lock top node
"RTN","SCMCMU2",24,0)
 IF SCMUTYPE="T" D
"RTN","SCMCMU2",25,0)
 . S SCTOP=$NA(^SCTM(404.51,+SCTEAM,0))
"RTN","SCMCMU2",26,0)
 ELSE  IF SCMUTYPE="P" D
"RTN","SCMCMU2",27,0)
 . S SCTOP=$NA(^SCTM(404.57,+SCPOS,0))
"RTN","SCMCMU2",28,0)
 D LOCK(SCTOP)
"RTN","SCMCMU2",29,0)
 ;
"RTN","SCMCMU2",30,0)
 ; -- use tmp data brought in by TaskMan
"RTN","SCMCMU2",31,0)
 N SCPTSEL,SCPTINFO
"RTN","SCMCMU2",32,0)
 S SCPTSEL=$NA(^TMP("SCMU",$J,"SELECTED"))
"RTN","SCMCMU2",33,0)
 S SCPTINFO=$NA(^TMP("SCMU",$J,"PATIENT INFO"))
"RTN","SCMCMU2",34,0)
 ;
"RTN","SCMCMU2",35,0)
 N SCOKAR,SCBADAR,SCERRAR,SCPTTP
"RTN","SCMCMU2",36,0)
 S SCOKAR=$NA(^TMP("SCMU",$J,"OK"))
"RTN","SCMCMU2",37,0)
 S SCBADAR=$NA(^TMP("SCMU",$J,"BAD"))
"RTN","SCMCMU2",38,0)
 S SCERRAR=$NA(^TMP("SCMU",$J,"ERROR"))
"RTN","SCMCMU2",39,0)
 S SCPTTP=$NA(^TMP("SCMU",$J,"PATIENT-POSITION"))
"RTN","SCMCMU2",40,0)
 K @SCOKAR,@SCBADAR,@SCERRAR,@SCPTTP
"RTN","SCMCMU2",41,0)
 ;
"RTN","SCMCMU2",42,0)
 N SCNT,SCNODE,SCPTX
"RTN","SCMCMU2",43,0)
 ;
"RTN","SCMCMU2",44,0)
 ; -- create patient-position array for team processing
"RTN","SCMCMU2",45,0)
 IF SCMUTYPE="T" D PTTPLST^SCMCMU11(SCTEAM,SCDATE,SCPTTP)
"RTN","SCMCMU2",46,0)
 ;
"RTN","SCMCMU2",47,0)
 S SCNT=0
"RTN","SCMCMU2",48,0)
 F  S SCNT=$O(@SCPTSEL@(SCNT)) Q:'SCNT  D
"RTN","SCMCMU2",49,0)
 . ;N SCDATE S SCDATE=2700101 ; -- use to force error/testing 
"RTN","SCMCMU2",50,0)
 . S SCPTX=$G(@SCPTINFO@(SCNT))
"RTN","SCMCMU2",51,0)
 . IF SCPTX="" Q
"RTN","SCMCMU2",52,0)
 . IF SCMUTYPE="T" S SCOK=$$TMDIS(SCDATE,SCTEAM,SCNT,SCPTX)
"RTN","SCMCMU2",53,0)
 . ;
"RTN","SCMCMU2",54,0)
 . IF SCMUTYPE="P" S SCOK=$$TPDIS(SCDATE,SCPOS,SCNT,SCPTX)
"RTN","SCMCMU2",55,0)
 . ;
"RTN","SCMCMU2",56,0)
 . ; -- if successful
"RTN","SCMCMU2",57,0)
 . IF SCOK D
"RTN","SCMCMU2",58,0)
 . . S @SCOKAR@(SCNT)=""
"RTN","SCMCMU2",59,0)
 . . S SCUNCNT=SCUNCNT+1
"RTN","SCMCMU2",60,0)
 . . S SCASCNT=SCASCNT-1
"RTN","SCMCMU2",61,0)
 . ;
"RTN","SCMCMU2",62,0)
 . ; -- if not sucessful
"RTN","SCMCMU2",63,0)
 . ELSE  D
"RTN","SCMCMU2",64,0)
 . . S @SCBADAR@(SCNT)=""
"RTN","SCMCMU2",65,0)
 ;
"RTN","SCMCMU2",66,0)
 ; -- unlock top node
"RTN","SCMCMU2",67,0)
 D UNLOCK(SCTOP)
"RTN","SCMCMU2",68,0)
 ;
"RTN","SCMCMU2",69,0)
 ; -- send results
"RTN","SCMCMU2",70,0)
 D BULL^SCMCMU4
"RTN","SCMCMU2",71,0)
 ;
"RTN","SCMCMU2",72,0)
 K @SCOKAR,@SCBADAR,@SCERRAR,@SCPTTP
"RTN","SCMCMU2",73,0)
 K @SCPTSEL,@SCPTINFO
"RTN","SCMCMU2",74,0)
 Q
"RTN","SCMCMU2",75,0)
 ;
"RTN","SCMCMU2",76,0)
 ; **** May want to eventually combine TMDIS & TPDIS tags ****
"RTN","SCMCMU2",77,0)
 ;
"RTN","SCMCMU2",78,0)
TMDIS(SCDATE,SCTEAM,SCNT,SCPTX) ; -- team unassignment for patient
"RTN","SCMCMU2",79,0)
 ; input:   SCDATE := effective date
"RTN","SCMCMU2",80,0)
 ;          SCTEAM := ien of TEAM entry (404.51)
"RTN","SCMCMU2",81,0)
 ;          SCNT   := entry in @SCPTINFO@ & @SCPTALL@ arrays
"RTN","SCMCMU2",82,0)
 ;          SCPTX  := format defined by output of $$PTTM^SCAPMC2
"RTN","SCMCMU2",83,0)
 ;
"RTN","SCMCMU2",84,0)
 N SCNODE,SCPOS,SCPOSI,SCOK,SCERRS,DFN,SCIEN,SCASDT,SCUNDT
"RTN","SCMCMU2",85,0)
 ;
"RTN","SCMCMU2",86,0)
 S SCOK=1
"RTN","SCMCMU2",87,0)
 S SCERRS="SCERRLST"
"RTN","SCMCMU2",88,0)
 ;
"RTN","SCMCMU2",89,0)
 S DFN=+SCPTX
"RTN","SCMCMU2",90,0)
 S SCIEN=+$P(SCPTX,U,3)
"RTN","SCMCMU2",91,0)
 S SCNODE=$NA(^SCPT(404.42,SCIEN,0))
"RTN","SCMCMU2",92,0)
 S SCASDT=+$P(SCPTX,U,4)
"RTN","SCMCMU2",93,0)
 S SCUNDT=+$P(SCPTX,U,5)
"RTN","SCMCMU2",94,0)
 ;
"RTN","SCMCMU2",95,0)
 ; -- unassign from positions first
"RTN","SCMCMU2",96,0)
 S SCPOS=0
"RTN","SCMCMU2",97,0)
 F  S SCPOS=$O(@SCPTTP@(DFN,SCPOS)) Q:'SCPOS  D  Q:'SCOK
"RTN","SCMCMU2",98,0)
 . S SCOK=$$TPDIS(SCDATE,SCPOS,SCNT,$G(@SCPTTP@(DFN,SCPOS)))
"RTN","SCMCMU2",99,0)
 ;
"RTN","SCMCMU2",100,0)
 IF 'SCOK D
"RTN","SCMCMU2",101,0)
 . S @SCERRAR@(SCNT,"TEAM",SCTEAM,1)="Team still assigned to patient."
"RTN","SCMCMU2",102,0)
 . S @SCERRAR@(SCNT,"TEAM",SCTEAM,2)="Not able to unassign at least one position."
"RTN","SCMCMU2",103,0)
 ;
"RTN","SCMCMU2",104,0)
 IF SCOK D
"RTN","SCMCMU2",105,0)
 . ; -- if assignment date is in future then delete
"RTN","SCMCMU2",106,0)
 . IF SCASDT>DT,SCASDT>SCDATE D  Q
"RTN","SCMCMU2",107,0)
 . . N DA,DIK
"RTN","SCMCMU2",108,0)
 . . S DA=SCIEN,DIK="^SCPT(404.42,"
"RTN","SCMCMU2",109,0)
 . . D LOCK(SCNODE)
"RTN","SCMCMU2",110,0)
 . . D ^DIK
"RTN","SCMCMU2",111,0)
 . . D UNLOCK(SCNODE)
"RTN","SCMCMU2",112,0)
 . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,1)=">>> Future team assignment deleted."
"RTN","SCMCMU2",113,0)
 . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,2)="    Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN
"RTN","SCMCMU2",114,0)
 . . Q
"RTN","SCMCMU2",115,0)
 . ;
"RTN","SCMCMU2",116,0)
 . ; -- if assignment date is after effective date but before today
"RTN","SCMCMU2",117,0)
 . IF SCASDT>SCDATE,SCASDT<DT D  Q
"RTN","SCMCMU2",118,0)
 . . S SCOK=0
"RTN","SCMCMU2",119,0)
 . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,1)="Patient is still assigned to team."
"RTN","SCMCMU2",120,0)
 . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,2)="Assignment date is after effective date but before today."
"RTN","SCMCMU2",121,0)
 . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,3)="Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN
"RTN","SCMCMU2",122,0)
 . . Q
"RTN","SCMCMU2",123,0)
 . ;
"RTN","SCMCMU2",124,0)
 . ; -- if unassignment date is after effective date but before today
"RTN","SCMCMU2",125,0)
 . IF SCUNDT>SCDATE,SCUNDT<DT D  Q
"RTN","SCMCMU2",126,0)
 . . S SCOK=0
"RTN","SCMCMU2",127,0)
 . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,1)="Patient is still assigned to team."
"RTN","SCMCMU2",128,0)
 . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,2)="Unassignment date is after effective date but before today."
"RTN","SCMCMU2",129,0)
 . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,3)="Unassignment Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_"   Entry#: "_SCIEN
"RTN","SCMCMU2",130,0)
 . . Q
"RTN","SCMCMU2",131,0)
 . ;
"RTN","SCMCMU2",132,0)
 . ; -- make change
"RTN","SCMCMU2",133,0)
 . K @SCERRS
"RTN","SCMCMU2",134,0)
 . S SCOK=$$INPTTM^SCAPMC(DFN,SCIEN,SCDATE,.SCERRS)
"RTN","SCMCMU2",135,0)
 . D UNLOCK(SCNODE)
"RTN","SCMCMU2",136,0)
 . M @SCERRAR@(SCNT,"TEAM",SCTEAM)=SCERRLST
"RTN","SCMCMU2",137,0)
 . K @SCERRS
"RTN","SCMCMU2",138,0)
 . IF SCOK D
"RTN","SCMCMU2",139,0)
 . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,1)=""
"RTN","SCMCMU2",140,0)
 . ;
"RTN","SCMCMU2",141,0)
 . ; -- set message if unassigned date changed
"RTN","SCMCMU2",142,0)
 . IF SCOK,SCUNDT>SCDATE D
"RTN","SCMCMU2",143,0)
 . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,1)=">>> Future team unassignment date was changed."
"RTN","SCMCMU2",144,0)
 . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,2)="    Old Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_"   New Date: "_$$FMTE^XLFDT(SCDATE,"5Z")_"   Entry#: "_SCIEN_")"
"RTN","SCMCMU2",145,0)
 ;
"RTN","SCMCMU2",146,0)
 Q SCOK
"RTN","SCMCMU2",147,0)
 ;
"RTN","SCMCMU2",148,0)
TPDIS(SCDATE,SCPOS,SCNT,SCPTX) ; -- position unassignment for patient
"RTN","SCMCMU2",149,0)
 ; input:   SCDATE := effective date
"RTN","SCMCMU2",150,0)
 ;          SCTEAM := ien of TEAM POSITION entry (404.57)
"RTN","SCMCMU2",151,0)
 ;          SCNT   := entry in @SCPTINFO@ & @SCPTALL@ arrays
"RTN","SCMCMU2",152,0)
 ;          SCPTX  := format defined by output of $$PTTP^SCAPMC2
"RTN","SCMCMU2",153,0)
 ;
"RTN","SCMCMU2",154,0)
 N SCNODE,SCOK,SCERRS,DFN,SCIEN,SCASDT,SCUNDT
"RTN","SCMCMU2",155,0)
 S SCASDT=+$P(SCPTX,U,4)
"RTN","SCMCMU2",156,0)
 S SCUNDT=+$P(SCPTX,U,5)
"RTN","SCMCMU2",157,0)
 ;
"RTN","SCMCMU2",158,0)
 S SCOK=1
"RTN","SCMCMU2",159,0)
 S SCERRS="SCERRLST"
"RTN","SCMCMU2",160,0)
 ;
"RTN","SCMCMU2",161,0)
 S DFN=+SCPTX
"RTN","SCMCMU2",162,0)
 S SCIEN=+$P(SCPTX,U,3)
"RTN","SCMCMU2",163,0)
 S SCNODE=$NA(^SCPT(404.43,SCIEN,0))
"RTN","SCMCMU2",164,0)
 S SCASDT=+$P(SCPTX,U,4)
"RTN","SCMCMU2",165,0)
 S SCUNDT=+$P(SCPTX,U,5)
"RTN","SCMCMU2",166,0)
 ;
"RTN","SCMCMU2",167,0)
 ; if assignment date is in future then delete
"RTN","SCMCMU2",168,0)
 IF SCOK D
"RTN","SCMCMU2",169,0)
 . ; -- if assignment date is in future then delete
"RTN","SCMCMU2",170,0)
 . IF SCASDT>DT,SCASDT>SCDATE D  Q
"RTN","SCMCMU2",171,0)
 . . N DA,DIE,DIK,DR
"RTN","SCMCMU2",172,0)
 . . S DA=SCIEN,(DIE,DIK)="^SCPT(404.43,",DR=".04///"_DT D ^DIE  ; og/sd/524
"RTN","SCMCMU2",173,0)
 . . D LOCK(SCNODE)
"RTN","SCMCMU2",174,0)
 . . D ^DIK
"RTN","SCMCMU2",175,0)
 . . D UNLOCK(SCNODE)
"RTN","SCMCMU2",176,0)
 . . S @SCOKAR@(SCNT,"POS",SCPOS,1)="    >>> Future position assignment deleted."
"RTN","SCMCMU2",177,0)
 . . S @SCOKAR@(SCNT,"POS",SCPOS,2)="        Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN
"RTN","SCMCMU2",178,0)
 . . Q
"RTN","SCMCMU2",179,0)
 . ;
"RTN","SCMCMU2",180,0)
 . ; -- if assignment date is after effective date but before today
"RTN","SCMCMU2",181,0)
 . IF SCASDT>SCDATE,SCASDT<DT D  Q
"RTN","SCMCMU2",182,0)
 . . S SCOK=0
"RTN","SCMCMU2",183,0)
 . . S @SCERRAR@(SCNT,"POS",SCPOS,1)="Patient is still assigned to position."
"RTN","SCMCMU2",184,0)
 . . S @SCERRAR@(SCNT,"POS",SCPOS,2)="Assignment date is after effective date but before today."
"RTN","SCMCMU2",185,0)
 . . S @SCERRAR@(SCNT,"POS",SCPOS,3)="Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN
"RTN","SCMCMU2",186,0)
 . . Q
"RTN","SCMCMU2",187,0)
 . ;
"RTN","SCMCMU2",188,0)
 . ; -- if unassignment date is after effective date but before today
"RTN","SCMCMU2",189,0)
 . IF SCUNDT>SCDATE,SCUNDT<DT D  Q
"RTN","SCMCMU2",190,0)
 . . S SCOK=0
"RTN","SCMCMU2",191,0)
 . . S @SCERRAR@(SCNT,"POS",SCPOS,1)="Patient is still assigned to position."
"RTN","SCMCMU2",192,0)
 . . S @SCERRAR@(SCNT,"POS",SCPOS,2)="Unassignment date is after effective date but before today."
"RTN","SCMCMU2",193,0)
 . . S @SCERRAR@(SCNT,"POS",SCPOS,3)="Unassignment Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_" ("_SCIEN_")"
"RTN","SCMCMU2",194,0)
 . . Q
"RTN","SCMCMU2",195,0)
 . ;
"RTN","SCMCMU2",196,0)
 . K @SCERRS
"RTN","SCMCMU2",197,0)
 . D LOCK(SCNODE)
"RTN","SCMCMU2",198,0)
 . S SCOK=$$INPTTP^SCAPMC(DFN,SCIEN,SCDATE,.SCERRS)
"RTN","SCMCMU2",199,0)
 . D UNLOCK(SCNODE)
"RTN","SCMCMU2",200,0)
 . M @SCERRAR@(SCNT,"POS",SCPOS)=SCERRLST
"RTN","SCMCMU2",201,0)
 . K @SCERRS
"RTN","SCMCMU2",202,0)
 . IF SCOK D
"RTN","SCMCMU2",203,0)
 . . S @SCOKAR@(SCNT,"POS",SCPOS,1)=""
"RTN","SCMCMU2",204,0)
 . ;
"RTN","SCMCMU2",205,0)
 . ; -- set message if unassigned date changed
"RTN","SCMCMU2",206,0)
 . IF SCOK,SCUNDT>SCDATE D
"RTN","SCMCMU2",207,0)
 . . S @SCOKAR@(SCNT,"POS",SCPOS,1)="    >>> Future position unassignment date was changed."
"RTN","SCMCMU2",208,0)
 . . S @SCOKAR@(SCNT,"POS",SCPOS,2)="        Old Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_"   New Date: "_$$FMTE^XLFDT(SCDATE,"5Z")_"   Entry#: "_SCIEN_")"
"RTN","SCMCMU2",209,0)
 . . Q
"RTN","SCMCMU2",210,0)
 ;
"RTN","SCMCMU2",211,0)
 IF SCOK D
"RTN","SCMCMU2",212,0)
 . S @SCOKAR@(SCNT,"CLINIC",SCPOS,1)=$$CLDIS(SCPOS)
"RTN","SCMCMU2",213,0)
 . Q
"RTN","SCMCMU2",214,0)
 ;
"RTN","SCMCMU2",215,0)
TPDISQ Q SCOK
"RTN","SCMCMU2",216,0)
 ;
"RTN","SCMCMU2",217,0)
CLDIS(SCPOS) ; -- discharge from clinic
"RTN","SCMCMU2",218,0)
 N SCPOS0,SCCLN,SCREA,SCRET
"RTN","SCMCMU2",219,0)
 S SCRET=""
"RTN","SCMCMU2",220,0)
 ;
"RTN","SCMCMU2",221,0)
 ; -- if user did not request clinic discharge, quit
"RTN","SCMCMU2",222,0)
 IF '$G(SCTPDIS(+SCPOS)) G CLDISQ
"RTN","SCMCMU2",223,0)
 ;
"RTN","SCMCMU2",224,0)
 S SCPOS0=$G(^SCTM(404.57,SCPOS,0))
"RTN","SCMCMU2",225,0)
 S SCCLN=$P(SCPOS0,U,9)
"RTN","SCMCMU2",226,0)
 IF SCCLN D
"RTN","SCMCMU2",227,0)
 . S SCREA="Team position mass discharge"
"RTN","SCMCMU2",228,0)
 . S SCRET=$$EN^SCMCMU3(DFN,SCCLN,SCDATE,SCREA)
"RTN","SCMCMU2",229,0)
 . Q
"RTN","SCMCMU2",230,0)
 ELSE  D
"RTN","SCMCMU2",231,0)
 . S SCRET="0^No clinic assignment to position"
"RTN","SCMCMU2",232,0)
 . Q
"RTN","SCMCMU2",233,0)
 ;
"RTN","SCMCMU2",234,0)
CLDISQ Q SCRET
"RTN","SCMCMU2",235,0)
 ;
"RTN","SCMCMU2",236,0)
LOCK(NODE) ; -- lock node
"RTN","SCMCMU2",237,0)
 F  L +@NODE:5 IF $T Q
"RTN","SCMCMU2",238,0)
 Q
"RTN","SCMCMU2",239,0)
 ;
"RTN","SCMCMU2",240,0)
UNLOCK(NODE) ; -- unlock node
"RTN","SCMCMU2",241,0)
 L -@NODE
"RTN","SCMCMU2",242,0)
 Q
"RTN","SCMCMU2",243,0)
 ;
"RTN","SCMCQK1")
0^13^B90469007^B90423070
"RTN","SCMCQK1",1,0)
SCMCQK1 ;ALBOI/REW - Single Pt Tm/Pt Tm Pos Assign and Discharge;11/07/02
"RTN","SCMCQK1",2,0)
 ;;5.3;Scheduling;**148,177,231,264,436,297,446,524**;AUG 13, 1993;Build 29
"RTN","SCMCQK1",3,0)
 ;
"RTN","SCMCQK1",4,0)
 ;04/25/2006 SD*5.3*446 INTER-FACILITY TRANSFER
"RTN","SCMCQK1",5,0)
UNTP ;unassign patient from pc prac position
"RTN","SCMCQK1",6,0)
 I '$G(SCTP) W !,"No position defined" Q
"RTN","SCMCQK1",7,0)
 N OK,SCER,SCCL,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS
"RTN","SCMCQK1",8,0)
 S OK=0
"RTN","SCMCQK1",9,0)
 W !,"About to Unassign "_$$NAME(DFN)_" from: ",!,?8,$$POSITION(SCTP)_" position   ["_$P($$GETPRTP^SCAPMCU2(SCTP,DT),U,2)_"]"
"RTN","SCMCQK1",10,0)
 S SCDISCH=$$DATE("D")
"RTN","SCMCQK1",11,0)
 G:SCDISCH<1 QTUNTP
"RTN","SCMCQK1",12,0)
 G:'$$CONFIRM() QTUNTP
"RTN","SCMCQK1",13,0)
 S OK=$$INPTSCTP^SCAPMC22(DFN,SCTP,SCDISCH,.SCER)  ; og/sd/524
"RTN","SCMCQK1",14,0)
 G:OK'>0 QTUNTP
"RTN","SCMCQK1",15,0)
 S SCCL=$P($G(^SCTM(404.57,+$G(SCTP),0)),U,9)
"RTN","SCMCQK1",16,0)
 I SCCL D DISCL
"RTN","SCMCQK1",17,0)
QTUNTP W !,"Position Unassignment "_$S(OK:"made.",1:"NOT made.")
"RTN","SCMCQK1",18,0)
 Q
"RTN","SCMCQK1",19,0)
ENRCL ;
"RTN","SCMCQK1",20,0)
 N SCRESTA,SCREST,SCCLNM,SCTM
"RTN","SCMCQK1",21,0)
 N SCCL
"RTN","SCMCQK1",22,0)
 F SCCL=0:0 S SCCL=$O(^SCTM(404.57,+$G(SCTP),5,SCCL)) Q:'SCCL  D
"RTN","SCMCQK1",23,0)
 .Q:$$ACTCL(DFN,SCCL)
"RTN","SCMCQK1",24,0)
 .W !!!,"The "_$$POSITION(SCTP)_" is associated with the ",$$CLINIC(SCCL)_" clinic."
"RTN","SCMCQK1",25,0)
 .;SCRESTA = Array of pt's teams causing restricted consults
"RTN","SCMCQK1",26,0)
 .N SCRESTA
"RTN","SCMCQK1",27,0)
 .S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")
"RTN","SCMCQK1",28,0)
 .I SCREST D
"RTN","SCMCQK1",29,0)
 ..N SCTM
"RTN","SCMCQK1",30,0)
 ..S SCCLNM=Y
"RTN","SCMCQK1",31,0)
 ..W !,?5,"Patient has restricted consults due to team assignment(s):"
"RTN","SCMCQK1",32,0)
 ..S SCTM=0
"RTN","SCMCQK1",33,0)
 ..F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)
"RTN","SCMCQK1",34,0)
 .I SCREST&'$G(SCOKCONS) D  G QTECL
"RTN","SCMCQK1",35,0)
 ..W !,?5,"This patient may only be enrolled in clinics via"
"RTN","SCMCQK1",36,0)
 ..W !,?15,"Edit Clinic Enrollment Data option"
"RTN","SCMCQK1",37,0)
 .W !,"Do you wish to enroll the patient from this clinic on "
"RTN","SCMCQK1",38,0)
 .S Y=SCASSDT X ^DD("DD") W Y,"?"
"RTN","SCMCQK1",39,0)
 .I $$YESNO() D
"RTN","SCMCQK1",40,0)
 ..W !,"Clinic Enrollment"
"RTN","SCMCQK1",41,0)
 ..I $$ACPTCL^SCAPMC18(DFN,SCCL,,SCASSDT,"SCENER") W " made"
"RTN","SCMCQK1",42,0)
 ..E  W "NOT made"
"RTN","SCMCQK1",43,0)
QTECL Q
"RTN","SCMCQK1",44,0)
DISCL ;
"RTN","SCMCQK1",45,0)
 N SCCL F SCCL=0:0 S SCCL=$O(^SCTM(404.57,+$G(SCTP),5,SCCL)) Q:'SCCL  D
"RTN","SCMCQK1",46,0)
 .Q:'$$ACTCL(DFN,SCCL)
"RTN","SCMCQK1",47,0)
 .W !,$$NAME(DFN)," is enrolled in the associated "_$$CLINIC(SCCL)_" clinic."
"RTN","SCMCQK1",48,0)
 .W !,"Do you wish to discharge the patient from this clinic on "
"RTN","SCMCQK1",49,0)
 .S Y=SCDISCH X ^DD("DD") W Y,"?"
"RTN","SCMCQK1",50,0)
 .Q:'$$YESNO()
"RTN","SCMCQK1",51,0)
 .N SDFN,SDCLN S SDFN=DFN,SDCLN=SCCL
"RTN","SCMCQK1",52,0)
 .N DFN D ^SDCD
"RTN","SCMCQK1",53,0)
QTDCL Q
"RTN","SCMCQK1",54,0)
UNTM ;
"RTN","SCMCQK1",55,0)
 ;assign patient from pc team (and pc position if possible)
"RTN","SCMCQK1",56,0)
 N OK,SCER,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS,OK2,OK3
"RTN","SCMCQK1",57,0)
 S OK=0
"RTN","SCMCQK1",58,0)
 W !!,"About to Unassign "_$$NAME(DFN)_" from "_$$TEAMNM(SCTM)_" team"
"RTN","SCMCQK1",59,0)
 W:'SCTPSTAT !,?5,"AND from "_$$POSITION(SCTP)_" position  ["_$$WRITETP^SCMCDD1(SCTP)_"]"
"RTN","SCMCQK1",60,0)
 S SCDISCH=$$DATE("D")
"RTN","SCMCQK1",61,0)
 G:SCDISCH<1 QTUNTM
"RTN","SCMCQK1",62,0)
 G:'$$CONFIRM() QTUNTM
"RTN","SCMCQK1",63,0)
 IF 'SCTPSTAT D  G:OK2'>0 QTUNTM
"RTN","SCMCQK1",64,0)
 .W !,"PC assignment unassigned."
"RTN","SCMCQK1",65,0)
 .S OK2=$$INPTSCTP^SCAPMC22(DFN,SCTP,SCDISCH,.SCER)
"RTN","SCMCQK1",66,0)
 .IF OK2>0 D
"RTN","SCMCQK1",67,0)
 ..W "made."
"RTN","SCMCQK1",68,0)
 ..S SCCL=$P(^SCTM(404.57,SCTP,0),U,9)
"RTN","SCMCQK1",69,0)
 ..D:SCCL DISCL
"RTN","SCMCQK1",70,0)
 S OK3=$$ALLPOS()
"RTN","SCMCQK1",71,0)
 IF $$OKINPTTM^SCMCTMU2(DFN,SCTM,SCDISCH) D
"RTN","SCMCQK1",72,0)
 .S OK=$$INPTSCTM^SCAPMC7(DFN,SCTM,SCDISCH,.SCER)
"RTN","SCMCQK1",73,0)
 ELSE  D
"RTN","SCMCQK1",74,0)
 .W !,"Future/Current Patient-Position Assignment exists"
"RTN","SCMCQK1",75,0)
QTUNTM W !,"Team Unassignment "_$S(OK:"made",1:"NOT made.")
"RTN","SCMCQK1",76,0)
 Q
"RTN","SCMCQK1",77,0)
ALLPOS() ;unassign all patient-positions for team
"RTN","SCMCQK1",78,0)
 ;not stand-alone - needs dfn,sctm
"RTN","SCMCQK1",79,0)
 ;return 1=No positions left assigned|0=At least 1 position assigned
"RTN","SCMCQK1",80,0)
 N OK,SCDT1,SCPTTPX,SCERRR,SCTP,SCCNT,SCPTTPI,SCLOC,SCNODE,SCPTTP2
"RTN","SCMCQK1",81,0)
 S SCDT1("BEGIN")=SCDISCH+1
"RTN","SCMCQK1",82,0)
 S SCDT1("END")=3990101
"RTN","SCMCQK1",83,0)
 S SCDT1("INCL")=0  ;anytime from now to future
"RTN","SCMCQK1",84,0)
 S OK=$$TPPT^SCAPMC23(DFN,"SCDT1",,,,,,"SCPTTPX",.SCERRR)
"RTN","SCMCQK1",85,0)
 S (SCTP,SCCNT)=0
"RTN","SCMCQK1",86,0)
 W !,"Checking for other position assignments to team..."
"RTN","SCMCQK1",87,0)
 F  S SCTP=$O(SCPTTPX("SCTP",SCTM,SCTP)) Q:'SCTP  S SCCNT=SCCNT+1 D
"RTN","SCMCQK1",88,0)
 .S SCPTTPI=$O(SCPTTPX("SCTP",SCTM,SCTP,9999999),-1)
"RTN","SCMCQK1",89,0)
 .S SCLOC=$O(SCPTTPX("SCTP",SCTM,SCTP,SCPTTPI,0))
"RTN","SCMCQK1",90,0)
 .S SCNODE=SCPTTPX(SCLOC)
"RTN","SCMCQK1",91,0)
 .S SCPTTP2(SCTP)=""
"RTN","SCMCQK1",92,0)
 .W !,?3,$P(SCNODE,U,2),"   ",$P(SCNODE,U,8)
"RTN","SCMCQK1",93,0)
 .IF $P(SCNODE,U,6)!(SCDISCH'>$P(SCNODE,U,5)) D
"RTN","SCMCQK1",94,0)
 ..W !,?5,"Unassignment date already exists or unassignment after assignment date"
"RTN","SCMCQK1",95,0)
 ..W !,?15,"- Correct via PCMM GUI"
"RTN","SCMCQK1",96,0)
 ..S OK=0
"RTN","SCMCQK1",97,0)
 W !,?5,$S(SCCNT:SCCNT,1:"No")_" current/future position assignment(s)"
"RTN","SCMCQK1",98,0)
 G:'OK!('SCCNT) QTALL
"RTN","SCMCQK1",99,0)
 W !!,"About to unassign the above patient-position assignments"
"RTN","SCMCQK1",100,0)
 IF '$$CONFIRM S OK=0 G QTALL
"RTN","SCMCQK1",101,0)
 S SCTP=0
"RTN","SCMCQK1",102,0)
 F  S SCTP=$O(SCPTTP2(SCTP)) Q:'SCTP  D  Q:'OK
"RTN","SCMCQK1",103,0)
 .S OK=$$INPTSCTP^SCAPMC22(DFN,SCTP,SCDISCH,.SCER)
"RTN","SCMCQK1",104,0)
 .W:'OK !,?10,"Problem with unassignment, correct via PCMM GUI"
"RTN","SCMCQK1",105,0)
QTALL Q OK
"RTN","SCMCQK1",106,0)
ASTM ;assign patient to PC team
"RTN","SCMCQK1",107,0)
 N DIC,Y,OK,SCTM,SCTMFLDS,SCER,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS
"RTN","SCMCQK1",108,0)
 S OK=0
"RTN","SCMCQK1",109,0)
 W !!,"About to Assign "_$$NAME(DFN)_" to a primary care team"
"RTN","SCMCQK1",110,0)
 I $$SC(DFN) W !!,"********** This patient is 50 percent or greater service-connected ************"
"RTN","SCMCQK1",111,0)
 S DIC="^SCTM(404.51,"
"RTN","SCMCQK1",112,0)
 S DIC(0)="AEMQZ"
"RTN","SCMCQK1",113,0)
 S DIC("S")="IF $$ACTTM^SCMCTMU(Y,DT)&($P($G(^SCTM(404.51,Y,0)),U,5))"
"RTN","SCMCQK1",114,0)
 ;select from active teams that can be PC Teams
"RTN","SCMCQK1",115,0)
 D ^DIC
"RTN","SCMCQK1",116,0)
 G:Y<1 QTASTM
"RTN","SCMCQK1",117,0)
 S SCTM=+Y
"RTN","SCMCQK1",118,0)
 ;The following logic to present warning message added per SD*5.3*436
"RTN","SCMCQK1",119,0)
 I $P($G(^SCTM(404.51,SCTM,0)),U,10) D  G:'SCFLAG QTASTM
"RTN","SCMCQK1",120,0)
 .S SCFLAG=0
"RTN","SCMCQK1",121,0)
 .W !!,"This team is closed to further patient assignments.  While you are"
"RTN","SCMCQK1",122,0)
 .W !,"not currently prevented from assigning this patient, you may want to"
"RTN","SCMCQK1",123,0)
 .W !,"check before continuing."
"RTN","SCMCQK1",124,0)
 .Q:'$$YESNO1()  ; new function call per SD*5.3*436
"RTN","SCMCQK1",125,0)
 .Q:'$$CONFIRM()
"RTN","SCMCQK1",126,0)
 .S SCFLAG=1 W !
"RTN","SCMCQK1",127,0)
 S SCASSDT=$$DATE("A")
"RTN","SCMCQK1",128,0)
 G:SCASSDT<1 QTASTM
"RTN","SCMCQK1",129,0)
 S SCTMCT=$$TEAMCNT^SCAPMCU1(SCTM)
"RTN","SCMCQK1",130,0)
 S SCTMMAX=$P($$GETEAM^SCAPMCU3(SCTM),"^",8)
"RTN","SCMCQK1",131,0)
 I SCTMCT'<SCTMMAX  D  G QTASTM:$$WAITYN(),QTASTM:'$$YESNO2()
"RTN","SCMCQK1",132,0)
 .W !,"This assignment will reach or exceeded the maximum set for this team."
"RTN","SCMCQK1",133,0)
 .W !,"Currently assigned: "_SCTMCT
"RTN","SCMCQK1",134,0)
 .W !,"Maximum set for team: "_SCTMMAX
"RTN","SCMCQK1",135,0)
 I SCTMCT<SCTMMAX,'$$CONFIRM() G QTASTM
"RTN","SCMCQK1",136,0)
 S SCTM=+Y
"RTN","SCMCQK1",137,0)
 ;setup fields
"RTN","SCMCQK1",138,0)
 S SCTMFLDS(.08)=1 ;primary care assignment
"RTN","SCMCQK1",139,0)
 S SCTMFLDS(.11)=$G(DUZ,.5)
"RTN","SCMCQK1",140,0)
 D NOW^%DTC S SCTMFLDS(.12)=%
"RTN","SCMCQK1",141,0)
 IF $$ACPTTM^SCAPMC(DFN,SCTM,"SCTMFLDS",SCASSDT,"SCTPTME") D
"RTN","SCMCQK1",142,0)
 .S SCSELECT=$$SELPOS()
"RTN","SCMCQK1",143,0)
 .D:$L(SCSELECT) ASTP ;prompt for position prompt
"RTN","SCMCQK1",144,0)
 .S OK=1
"RTN","SCMCQK1",145,0)
QTASTM W !,"Team Assignment "_$S(OK:"made",1:"NOT made.")
"RTN","SCMCQK1",146,0)
 S:$D(SDWLPCMM) SDWLPCMM=OK  ; 446
"RTN","SCMCQK1",147,0)
 Q
"RTN","SCMCQK1",148,0)
ASTP ;assign patient to PC practitioner
"RTN","SCMCQK1",149,0)
 N DIC,Y,OK,SCCL,X,SCTPFLDS,SCER,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS
"RTN","SCMCQK1",150,0)
 S OK=0
"RTN","SCMCQK1",151,0)
 W !!,"About to Assign "_$$NAME(DFN)_" to PC Position Assignment"
"RTN","SCMCQK1",152,0)
 I $$SC(DFN) W !!,"********** This patient is 50 percent or greater service-connected ************"
"RTN","SCMCQK1",153,0)
 ;lookup to display only position and [practitioner]
"RTN","SCMCQK1",154,0)
 IF SCSELECT="PRACT" D
"RTN","SCMCQK1",155,0)
 .S DIC("W")="N SCP1 S SCP1=$G(^SCTM(404.52,Y,0)) W ""    ["",$P($G(^VA(200,+$P(SCP1,U,3),0)),U,1),""]"""
"RTN","SCMCQK1",156,0)
 .S DIC("A")="POSITION's Current PRACTITIONER: "
"RTN","SCMCQK1",157,0)
 .S DIC="^SCTM(404.52,"
"RTN","SCMCQK1",158,0)
 .;Must be from team, must be activation,must not have future inactivation
"RTN","SCMCQK1",159,0)
 .S DIC("S")="I $$PRACSCR^SCMCQK1(Y)"
"RTN","SCMCQK1",160,0)
 .S D="C"
"RTN","SCMCQK1",161,0)
 ELSE  D
"RTN","SCMCQK1",162,0)
 .S DIC="^SCTM(404.57,"
"RTN","SCMCQK1",163,0)
 .S D="B"
"RTN","SCMCQK1",164,0)
 .S DIC("A")="POSITION's Name: "
"RTN","SCMCQK1",165,0)
 .S DIC("S")="I $$POSSCR^SCMCQK1(Y)"
"RTN","SCMCQK1",166,0)
 S DIC(0)="AEMQZ"
"RTN","SCMCQK1",167,0)
 D MIX^DIC1
"RTN","SCMCQK1",168,0)
 G:Y<1 QTASTP
"RTN","SCMCQK1",169,0)
 IF SCSELECT="PRACT" D
"RTN","SCMCQK1",170,0)
 .S SCTP=$P(Y,U,2)
"RTN","SCMCQK1",171,0)
 ELSE  D
"RTN","SCMCQK1",172,0)
 .S SCTP=$P(Y,U,1)
"RTN","SCMCQK1",173,0)
 S SCASSDT=$$DATE("A")
"RTN","SCMCQK1",174,0)
 G:SCASSDT<1 QTASTP
"RTN","SCMCQK1",175,0)
 S SCTMCT=$$PCPOSCNT^SCAPMCU1(SCTP),SCTMMAX=+$P($G(^SCTM(404.57,SCTP,0)),U,8)
"RTN","SCMCQK1",176,0)
 I SCTMCT'<SCTMMAX D  G QTASTP:$$WAITYN,QTASTP:'$$YESNO2
"RTN","SCMCQK1",177,0)
 .W !,"This assignment will reach or exceeded the maximum set for this position."
"RTN","SCMCQK1",178,0)
 .W !,"Currently assigned: "_SCTMCT
"RTN","SCMCQK1",179,0)
 .W !,"Maximum set for position: "_SCTMMAX
"RTN","SCMCQK1",180,0)
 G:'$$CONFIRM() QTASTP
"RTN","SCMCQK1",181,0)
 ;setup fields
"RTN","SCMCQK1",182,0)
 S SCTPFLDS(.03)=SCASSDT
"RTN","SCMCQK1",183,0)
 S SCTPFLDS(.05)=1 ;pc pract role
"RTN","SCMCQK1",184,0)
 S SCTPFLDS(.06)=$G(DUZ,.5)
"RTN","SCMCQK1",185,0)
 D NOW^%DTC S SCTPFLDS(.07)=%
"RTN","SCMCQK1",186,0)
 IF $$ACPTTP^SCAPMC21(DFN,SCTP,"SCTPFLDS",SCASSDT,"SCTPTME",0) D
"RTN","SCMCQK1",187,0)
 .S OK=1
"RTN","SCMCQK1",188,0)
 .S SCCL=$O(^SCTM(404.57,+$G(SCTP),5,0))
"RTN","SCMCQK1",189,0)
 .D:SCCL ENRCL
"RTN","SCMCQK1",190,0)
QTASTP W !,"Position Assignment "_$S(OK:"made",1:"NOT made.")
"RTN","SCMCQK1",191,0)
 S:$D(SDWLPCMM) SDWLPCMM=OK ;446
"RTN","SCMCQK1",192,0)
 Q
"RTN","SCMCQK1",193,0)
NAME(DFN) ;return patient name
"RTN","SCMCQK1",194,0)
 Q $P($G(^DPT(DFN,0)),U,1)
"RTN","SCMCQK1",195,0)
POSITION(SCTP) ;return position name
"RTN","SCMCQK1",196,0)
 Q $P($G(^SCTM(404.57,SCTP,0)),U,1)
"RTN","SCMCQK1",197,0)
TEAMNM(SCTM) ;return team name
"RTN","SCMCQK1",198,0)
 Q $P($G(^SCTM(404.51,SCTM,0)),U,1)
"RTN","SCMCQK1",199,0)
CLINIC(SCCL) ;return clinic name
"RTN","SCMCQK1",200,0)
 Q $P($G(^SC(+SCCL,0)),U,1)
"RTN","SCMCQK1",201,0)
YESNO() ;
"RTN","SCMCQK1",202,0)
 N DIR,X,Y
"RTN","SCMCQK1",203,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","SCMCQK1",204,0)
 D ^DIR
"RTN","SCMCQK1",205,0)
 Q Y>0
"RTN","SCMCQK1",206,0)
YESNO1() ; added per SD*5.3*436
"RTN","SCMCQK1",207,0)
 N DIR,X,Y
"RTN","SCMCQK1",208,0)
 S DIR(0)="Y",DIR("A")="Do you wish to assign this patient now (Yes/No)?"
"RTN","SCMCQK1",209,0)
 S DIR("B")="NO"
"RTN","SCMCQK1",210,0)
 D ^DIR
"RTN","SCMCQK1",211,0)
 Q Y>0
"RTN","SCMCQK1",212,0)
YESNO2() ;
"RTN","SCMCQK1",213,0)
 N DIR,X,Y
"RTN","SCMCQK1",214,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","SCMCQK1",215,0)
 S DIR("A")="Do you wish to continue with the assignment (Yes/No)?"
"RTN","SCMCQK1",216,0)
 D ^DIR
"RTN","SCMCQK1",217,0)
 Q Y>0
"RTN","SCMCQK1",218,0)
CONFIRM() ;confirmation call
"RTN","SCMCQK1",219,0)
 N DIR,X,Y
"RTN","SCMCQK1",220,0)
 S DIR("A")="Are you sure (Yes/No)"
"RTN","SCMCQK1",221,0)
 S DIR(0)="Y"
"RTN","SCMCQK1",222,0)
 D ^DIR
"RTN","SCMCQK1",223,0)
 Q +Y=1
"RTN","SCMCQK1",224,0)
SELPOS() ;return way to select position: 1=PRACT,2=POSIT,3=NONE
"RTN","SCMCQK1",225,0)
 N DIR,X,Y
"RTN","SCMCQK1",226,0)
 W !,"Choose way to select PC POSITION Assignment: "
"RTN","SCMCQK1",227,0)
 S DIR(0)="SO^0:NONE;1:BY PRACTITIONER ASSIGNMENT;2:BY POSITION ASSIGNMENT"
"RTN","SCMCQK1",228,0)
 S DIR("B")=1
"RTN","SCMCQK1",229,0)
 D ^DIR
"RTN","SCMCQK1",230,0)
 Q $S(Y'>0:"",+Y=1:"PRACT",1:"POSIT")
"RTN","SCMCQK1",231,0)
DATE(TYPE) ;return date type=A or D
"RTN","SCMCQK1",232,0)
 N DIR,X,Y
"RTN","SCMCQK1",233,0)
 S DIR("A")=$S(TYPE="A":"Assignment",1:"Unassignment")_" date: "
"RTN","SCMCQK1",234,0)
 S DIR(0)="DA^::EXP"
"RTN","SCMCQK1",235,0)
 S Y=$S($D(SCDISCH):SCDISCH,$D(SCASSDT):SCASSDT,(TYPE="A"):"TODAY",1:"TODAY-1")
"RTN","SCMCQK1",236,0)
 X ^DD("DD")
"RTN","SCMCQK1",237,0)
 S DIR("B")=Y
"RTN","SCMCQK1",238,0)
 D ^DIR
"RTN","SCMCQK1",239,0)
 Q Y
"RTN","SCMCQK1",240,0)
ACTCL(DFN,SCCL) ;is patient enrolled in clinic?
"RTN","SCMCQK1",241,0)
 N SCXX
"RTN","SCMCQK1",242,0)
 S SCXX=$O(^DPT(DFN,"DE","B",SCCL,9999),-1)
"RTN","SCMCQK1",243,0)
 Q $S('SCXX:0,($P(^DPT(DFN,"DE",+SCXX,0),U,2)="I"):0,1:1)
"RTN","SCMCQK1",244,0)
PRACSCR(SC40452) ;screen for for file 404.52
"RTN","SCMCQK1",245,0)
 N SCP,SCNODE,OK
"RTN","SCMCQK1",246,0)
 S SCP=$G(^SCTM(404.52,SC40452,0))
"RTN","SCMCQK1",247,0)
 S OK=0
"RTN","SCMCQK1",248,0)
 G:'SCP QTPP
"RTN","SCMCQK1",249,0)
 S SCNODE=$G(^SCTM(404.57,+SCP,0))
"RTN","SCMCQK1",250,0)
 S OK=$S($P(SCNODE,U,2)'=SCTM:0,'$P(SCNODE,U,4):0,($O(^SCTM(404.52,"AIDT",+SCP,1,""))'=-$P(SCP,U,2)):0,($O(^SCTM(404.52,"AIDT",+SCP,0,-$P(SCP,U,2)),-1)):0,($$ACTTP^SCMCTPU(+SCP)>0):1,1:0)
"RTN","SCMCQK1",251,0)
QTPP Q OK
"RTN","SCMCQK1",252,0)
POSSCR(SCTP) ;screen for file 404.57
"RTN","SCMCQK1",253,0)
 N SCNODE
"RTN","SCMCQK1",254,0)
 S SCNODE=$G(^SCTM(404.57,SCTP,0))
"RTN","SCMCQK1",255,0)
 Q $S($P(SCNODE,U,2)'=SCTM:0,'$P(SCNODE,U,4):0,($$ACTTP^SCMCTPU(SCTP)>0):1,1:0)
"RTN","SCMCQK1",256,0)
 Q
"RTN","SCMCQK1",257,0)
WAITYN() ;
"RTN","SCMCQK1",258,0)
 N %,OK,Y
"RTN","SCMCQK1",259,0)
 I SCTMCT<SCTMMAX Q 0
"RTN","SCMCQK1",260,0)
 N A,SC S A=$$ONWAIT^SCMCWAIT(DFN) I A W:(+A=3) !,$P(A,";",2) I $S($G(SCTP):A>1,1:1) Q 0
"RTN","SCMCQK1",261,0)
 N DIR,X,Y
"RTN","SCMCQK1",262,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","SCMCQK1",263,0)
 S DIR("A")="Do you wish to place the patient on the wait list (Yes/No)?"
"RTN","SCMCQK1",264,0)
 D ^DIR
"RTN","SCMCQK1",265,0)
 I Y=1 S Y=$$WAITS^SCMCWAIT(DFN,SCTM,$G(SCTP),$G(SC)) I Y>0 W !,"Patient Placed on Wait List"
"RTN","SCMCQK1",266,0)
 Q Y>0
"RTN","SCMCQK1",267,0)
SC(DFN) ;Is patient 50 to 100%
"RTN","SCMCQK1",268,0)
 D ELIG^VADPT Q $P($G(VAEL(3)),U,2)>49
"RTN","SDWLE")
0^12^B27860181^B28082342
"RTN","SDWLE",1,0)
SDWLE ;BPOI/TEH - WAITING LIST-ENTER/EDIT;06/12/2002
"RTN","SDWLE",2,0)
 ;;5.3;scheduling;**263,415,446,524**;08/13/93;Build 29
"RTN","SDWLE",3,0)
 ;
"RTN","SDWLE",4,0)
 ;
"RTN","SDWLE",5,0)
 ;******************************************************************
"RTN","SDWLE",6,0)
 ;                             CHANGE LOG
"RTN","SDWLE",7,0)
 ;                                               
"RTN","SDWLE",8,0)
 ;   DATE                        PATCH                   DESCRIPTION
"RTN","SDWLE",9,0)
 ;   ----                        -----                   -----------
"RTN","SDWLE",10,0)
 ;   09JUN2005                   446                     Inter-Facility Transfer.
"RTN","SDWLE",11,0)
 ;   
"RTN","SDWLE",12,0)
 ;   
"RTN","SDWLE",13,0)
EN ;ENTRY POINT - INTIALIZE VARIABLES
"RTN","SDWLE",14,0)
 N DTOUT,%
"RTN","SDWLE",15,0)
 I $D(SDWLOPT),SDWLOPT G OPT
"RTN","SDWLE",16,0)
 I $D(SDWLLIST),SDWLLIST,$D(DFN),DFN<0 K SDWLLIST
"RTN","SDWLE",17,0)
 I $D(SDWLLIST),SDWLLIST,$D(DFN),DFN'="" S SDWLDFN=DFN D 1^VADPT S (SDWLTEM,SDWLPOS)=0 D HD,SB1 G EN1:'$D(DUOUT) W !,"PATIENT: ",VADM(1),?40,VA("PID") W !,*7,"PATIENT'S DATE OF DEATH HAS BEEN RECORDED" S DIR(0)="E" D ^DIR G END
"RTN","SDWLE",18,0)
 K ^TMP("SDWLD",$J) D HD
"RTN","SDWLE",19,0)
 D PAT G END:DFN<0
"RTN","SDWLE",20,0)
OPT S SDWLPCMM=0,SDWLERR=0 I $D(SDWLOPT),SDWLOPT D
"RTN","SDWLE",21,0)
 .S %=2 W !,"DO YOU WISH TO PLACE THIS PATIENT ON A WAITING LIST " D YN^DICN
"RTN","SDWLE",22,0)
 .I %=-1!(%=2) S SDWLERR=1 Q
"RTN","SDWLE",23,0)
 I $D(SDWLOPT),SDWLOPT,SDWLERR Q
"RTN","SDWLE",24,0)
 S SDWLDFN=DFN
"RTN","SDWLE",25,0)
 D 1^VADPT
"RTN","SDWLE",26,0)
 S (SDWLTEM,SDWLPOS)=0
"RTN","SDWLE",27,0)
EN1 N SDWLNEW,SDWLERR,SDWLCN,SDWLWTE S SDWLNEW=0,SDWLERR=0,SDWLCN=0,SDWLWTE=0
"RTN","SDWLE",28,0)
 G:$$EN^SDWLE6(SDWLDFN,.SDWLERR) EN2  ; OG ; SD*5.3*446 ; Inter-facility transfer
"RTN","SDWLE",29,0)
 D DIS
"RTN","SDWLE",30,0)
 I $D(^SDWL(409.3,"B",DFN)),'SDWLCN W !!,"PATIENT: ",VADM(1),?40,VA("PID")
"RTN","SDWLE",31,0)
 S SDWLPS=$S(SDWLCN>1:1,SDWLCN=1:2,1:3)
"RTN","SDWLE",32,0)
 I $D(SDWLOPT),SDWLOPT,SDWLPS=3 S X="Y" G ENO
"RTN","SDWLE",33,0)
 I SDWLPS=1 S DIR(0)="FOA^^" S DIR("A")="Select Wait List (1-"_SDWLCN_") or Enter 'N' for New or '^' to Quit ? ",DIR("?")="Enter a Valid Number or 'N' for New."
"RTN","SDWLE",34,0)
 I SDWLPS=2 S DIR(0)="FOA^^" S DIR("A")="Select Wait List (1) or Enter 'N' for New or '^' to Quit ? ",DIR("?")="Enter a '1' or 'N' for New."
"RTN","SDWLE",35,0)
 I SDWLPS=3 S DIR(0)="YAO^^S X=""Y""" S DIR("A")="Patient is not on Waiting List. Do you wish to Add Patient? Yes// "
"RTN","SDWLE",36,0)
 W ! D ^DIR W ! K DIR
"RTN","SDWLE",37,0)
 G END:$D(DUOUT),END:$D(DTOUT)
"RTN","SDWLE",38,0)
 I SDWLPS=1 D  G EN3:SDWLERR=1 I SDWLERR=2 W *7," ??" G EN1
"RTN","SDWLE",39,0)
 .S SDWLERR=$S(X?1"N".E:0,X?1"n".E:0,X="":2,$D(DUOUT):1,X["^":1,$D(^TMP("SDWLD",$J,DFN,+X)):0,1:2) Q
"RTN","SDWLE",40,0)
 I SDWLPS=2 D  G EN3:SDWLERR=1 I SDWLERR=2 W *7," ??" G EN1
"RTN","SDWLE",41,0)
 .S SDWLERR=$S(X?1"N".E:0,X?1"n".E:0,X="":2,$D(DUOUT):1,X["^":1,$D(^TMP("SDWLD",$J,DFN,+X)):0,1:2) Q
"RTN","SDWLE",42,0)
ENO I SDWLPS=3 D  G EN3:SDWLERR=1 I SDWLERR=2 W *7," ??" G EN1
"RTN","SDWLE",43,0)
 .S SDWLERR=$S(X?1"N".E:1,X?1"n".E:1,X="":0,X?1"Y".E:0,X?1"y".E:0,$D(DUOUT):1,X["^":1,1:2) Q
"RTN","SDWLE",44,0)
 I SDWLPS=1!(SDWLPS=2),X?1N.N D
"RTN","SDWLE",45,0)
 .N DA,SDWLDA S (DA,SDWLDA)=$P($G(^TMP("SDWLD",$J,DFN,+X)),"~",2),SDWLEDIT=""
"RTN","SDWLE",46,0)
 .;
"RTN","SDWLE",47,0)
 .;LOCK DATA FILE
"RTN","SDWLE",48,0)
 .;
"RTN","SDWLE",49,0)
 .L +^SDWL(409.3,DA):5 I '$T W !,"ANOTHER TERMINAL IS EDITING THIS ENTRY. TRY LATER." S DUOUT=1
"RTN","SDWLE",50,0)
 .I $D(DUOUT) Q
"RTN","SDWLE",51,0)
 .N SDWLINNM,SDWLSTN  ; OG ; This and the following six lines added for patch 415
"RTN","SDWLE",52,0)
 .I $$GETTRN^SDWLIFT1(SDWLDA,.SDWLINNM,.SDWLSTN) D  S DUOUT=1 Q
"RTN","SDWLE",53,0)
 ..N SDWLMSG,SDWLI
"RTN","SDWLE",54,0)
 ..S SDWLMSG(0)=1,SDWLMSG(SDWLMSG(0),0)="This entry is the subject of a transfer to "_SDWLINNM_" ("_SDWLSTN_"). Editing inhibited."
"RTN","SDWLE",55,0)
 ..I $L(SDWLMSG(SDWLMSG(0),0))>80 D COL80^SDWLIFT(.SDWLMSG)
"RTN","SDWLE",56,0)
 ..F SDWLI=1:1:SDWLMSG(0) W !,SDWLMSG(SDWLI,0)
"RTN","SDWLE",57,0)
 ..Q
"RTN","SDWLE",58,0)
 .D EN^SDWLE10
"RTN","SDWLE",59,0)
 .D EDIT W !!,"Editing is Completed" S SDWLERR=1 K SDWLEDIT
"RTN","SDWLE",60,0)
 G END:SDWLERR
"RTN","SDWLE",61,0)
 I SDWLPS=1!(SDWLPS=2),X?1"N".E!(X?1"n".E) D NEW,EDIT S SDWLNEW="" G EN2
"RTN","SDWLE",62,0)
 I SDWLPS=3 D NEW,EDIT S SDWLNEW=""
"RTN","SDWLE",63,0)
EN2 I $D(SDWLNEW),'$D(DUOUT),'SDWLERR W !!,?15,"*** Patient has been added to Wait List ***",!
"RTN","SDWLE",64,0)
 K SDWLNEW,DUOUT
"RTN","SDWLE",65,0)
 ;
"RTN","SDWLE",66,0)
 ;UNLOCK FILE AND KILL LOCAL VARIABLES
"RTN","SDWLE",67,0)
 ;
"RTN","SDWLE",68,0)
 I $D(SDWLDA) L -^SDWL(409.3,SDWLDA)
"RTN","SDWLE",69,0)
 ;-exit logic
"RTN","SDWLE",70,0)
EN3 D END^SDWLE113
"RTN","SDWLE",71,0)
 Q
"RTN","SDWLE",72,0)
END D END^SDWLE113
"RTN","SDWLE",73,0)
 D EN^SDWLKIL
"RTN","SDWLE",74,0)
 Q 
"RTN","SDWLE",75,0)
 ;
"RTN","SDWLE",76,0)
 ;
"RTN","SDWLE",77,0)
PAT ;SELECT PATIENT
"RTN","SDWLE",78,0)
 ;
"RTN","SDWLE",79,0)
 S DIC(0)="EMNZAQ",DIC=2 D ^DIC S (SDWLDFN,DFN)=$P(Y,U,1) G PAT1:DFN<0
"RTN","SDWLE",80,0)
 S X=$$GET1^DIQ(2,DFN_",",".351") I X'="" W !,*7,"PATIENT'S DATE OF DEATH HAS BEEN RECORDED" G PAT
"RTN","SDWLE",81,0)
 S SDWLSSN=$G(VA("PID")),SDWLNAM=$G(VA(1))
"RTN","SDWLE",82,0)
PAT1 K VADM,VAIN,VAERR,VA Q
"RTN","SDWLE",83,0)
 ;
"RTN","SDWLE",84,0)
DIS ;DISPLAY DATA FOR PATIENT
"RTN","SDWLE",85,0)
 ;
"RTN","SDWLE",86,0)
 S SDWLHDR="Wait List Enter/Edit"
"RTN","SDWLE",87,0)
 D EN^SDWLD(DFN,VA("PID"),VADM(1))
"RTN","SDWLE",88,0)
 D PCM^SDWLE1,PCMD^SDWLE1
"RTN","SDWLE",89,0)
 Q
"RTN","SDWLE",90,0)
 ;
"RTN","SDWLE",91,0)
NEW ;
"RTN","SDWLE",92,0)
 D NEW^SDWLE11
"RTN","SDWLE",93,0)
 Q
"RTN","SDWLE",94,0)
 ;
"RTN","SDWLE",95,0)
EDIT ;
"RTN","SDWLE",96,0)
 D EN^SDWLE111 I $D(DUOUT) D END^SDWLE113:'$D(SDWLEDIT) Q
"RTN","SDWLE",97,0)
 I SDWLTYE=4 D ED4 K DIR,DIE,DIC,DR Q
"RTN","SDWLE",98,0)
 I SDWLTYE=3 D ED3 K DIR,DIE,DIC,DR Q
"RTN","SDWLE",99,0)
 I SDWLTYE=2 D ED2 K DIR,DIE,DIC,DR Q
"RTN","SDWLE",100,0)
 I SDWLTYE=1 D ED1 K DIR,DIE,DIC,DR Q
"RTN","SDWLE",101,0)
 Q
"RTN","SDWLE",102,0)
ED1 ;-team       
"RTN","SDWLE",103,0)
 I $D(DUOUT) D END^SDWLE113:'$D(SDWLEDIT) Q
"RTN","SDWLE",104,0)
 D EN^SDWLE3 I '$D(DUOUT) D EN^SDWLE113 Q
"RTN","SDWLE",105,0)
 Q
"RTN","SDWLE",106,0)
ED2 ;-position
"RTN","SDWLE",107,0)
 I $D(DUOUT) D END^SDWLE113:'$D(SDWLEDIT) Q
"RTN","SDWLE",108,0)
 D EN^SDWLE5 I '$D(DUOUT) D EN^SDWLE113 Q
"RTN","SDWLE",109,0)
 Q
"RTN","SDWLE",110,0)
ED3 ;-specialty  
"RTN","SDWLE",111,0)
 D EN^SDWLE2 I $D(DUOUT) D END^SDWLE113:'$D(SDWLEDIT) Q
"RTN","SDWLE",112,0)
 D EN^SDWLE110 I $D(DUOUT) D END^SDWLE113:'$D(SDWLEDIT) Q
"RTN","SDWLE",113,0)
 I '$D(DUOUT) D EN^SDWLE113
"RTN","SDWLE",114,0)
 D END^SDWLE113
"RTN","SDWLE",115,0)
 Q
"RTN","SDWLE",116,0)
ED4 ;-clinic
"RTN","SDWLE",117,0)
 D EN^SDWLE4 I $D(DUOUT) D END^SDWLE113:'$D(SDWLEDIT) Q
"RTN","SDWLE",118,0)
 D EN^SDWLE110 I $D(DUOUT) D END^SDWLE113:'$D(SDWLEDIT) Q
"RTN","SDWLE",119,0)
 I '$D(DUOUT) D EN^SDWLE113
"RTN","SDWLE",120,0)
 D END^SDWLE113
"RTN","SDWLE",121,0)
 Q
"RTN","SDWLE",122,0)
 ;
"RTN","SDWLE",123,0)
ED5 D END^SDWLE113
"RTN","SDWLE",124,0)
 Q
"RTN","SDWLE",125,0)
SB1 S X=$$GET1^DIQ(2,DFN_",",".351") I X'="" S DUOUT=""
"RTN","SDWLE",126,0)
 Q
"RTN","SDWLE",127,0)
HD W:$D(IOF) @IOF W !,?80-$L("Scheduling/PCMM Enter/Edit Wait List")\2,"Scheduling/PCMM Enter/Edit Wait List",!!
"RTN","SDWLE",128,0)
 I $D(DFN),DFN'="",'$D(^SDWL(409.3,"B",DFN)),$D(SDWLLIST),SDWLLIST D
"RTN","SDWLE",129,0)
 .W !!,"PATIENT: ",VADM(1),?40,VA("PID")
"RTN","SDWLE",130,0)
 Q
"RTN","SDWLI")
0^1^B72458780^B70108876
"RTN","SDWLI",1,0)
SDWLI ;BPOI/TEH - DISPLAY PENDING APPOINTMENTS;6/1/05
"RTN","SDWLI",2,0)
 ;;5.3;scheduling;**263,327,394,446,524**;08/13/93;Build 29
"RTN","SDWLI",3,0)
 ;
"RTN","SDWLI",4,0)
 ;
"RTN","SDWLI",5,0)
 ;******************************************************************
"RTN","SDWLI",6,0)
 ;                             CHANGE LOG
"RTN","SDWLI",7,0)
 ;                                               
"RTN","SDWLI",8,0)
 ;   DATE               PATCH          DESCRIPTION
"RTN","SDWLI",9,0)
 ;   ----             -----             -----------
"RTN","SDWLI",10,0)
 ;   04/22/2005      SD*5.3*327  DISPLAY APPOINTMENT INFORMATION
"RTN","SDWLI",11,0)
 ;   04/22/2005      SD*5.3*327  UNDEFINED ERROR HD+1
"RTN","SDWLI",12,0)
 ;   08/07/2006      SD*5.3*446  proceed only when DFN defined
"RTN","SDWLI",13,0)
 ;   04/14/2006      SD*5.3*446  INTER-FACILITY TRANSFER
"RTN","SDWLI",14,0)
 ;
"RTN","SDWLI",15,0)
 ;
"RTN","SDWLI",16,0)
EN ;NEW AND INITIALIZE VARIABLES
"RTN","SDWLI",17,0)
 S SDWLERR=0
"RTN","SDWLI",18,0)
 I $D(SDWLLIST),SDWLLIST D  Q:SDWLERR
"RTN","SDWLI",19,0)
 .I '$G(DFN) S SDWLERR=1 Q
"RTN","SDWLI",20,0)
 .I $D(DFN),DFN'="",'$D(^SDWL(409.3,"B",DFN)) D HD W *7,!,"This Patient has NO entries on the Electronic Wait List." S DIR(0)="E" D ^DIR S DUOUT=1 Q
"RTN","SDWLI",21,0)
 I $D(DUOUT) G END
"RTN","SDWLI",22,0)
 I 'SDWLERR,$D(SDWLLIST),SDWLLIST D 1^VADPT,DEM^VADPT S SDWLDFN=DFN D HD K DIR,DIC,DR,DIE,VADM S (SDWLBDT,SDWLEDT)="" K ^TMP("SDWLI",$J) G EN1
"RTN","SDWLI",23,0)
 K DIR,DIC,DR,DIE,VADM
"RTN","SDWLI",24,0)
 S (SDWLBDT,SDWLEDT)="" K ^TMP("SDWLI",$J)
"RTN","SDWLI",25,0)
 ;
"RTN","SDWLI",26,0)
 ;OPTION HEADER
"RTN","SDWLI",27,0)
 ;
"RTN","SDWLI",28,0)
 D HD
"RTN","SDWLI",29,0)
 ;
"RTN","SDWLI",30,0)
 ;PATIENT LOOK-UP FROM WAIT LIST PATIENT FILE (^SDWL(409.3,IEN,0).
"RTN","SDWLI",31,0)
 ;
"RTN","SDWLI",32,0)
 D SEL G EN:$D(DUOUT)
"RTN","SDWLI",33,0)
 D PAT Q:'$D(SDWLDFN)
"RTN","SDWLI",34,0)
 G END:SDWLDFN<0,END:SDWLDFN=""
"RTN","SDWLI",35,0)
 Q:$D(DUOUT)
"RTN","SDWLI",36,0)
EN1 K DIR,DIC,DR,DIE,SDWLDRG
"RTN","SDWLI",37,0)
 D GETFILE
"RTN","SDWLI",38,0)
 D DISP G EN:'$D(DUOUT)
"RTN","SDWLI",39,0)
 D END
"RTN","SDWLI",40,0)
 Q
"RTN","SDWLI",41,0)
PAT ;PATIENT LOOK-UP
"RTN","SDWLI",42,0)
 ;PATCH SD*5.3*524 - SET DIC("S") FOR SCREEN OF OPEN/CLOSED ENTRIES
"RTN","SDWLI",43,0)
 S DIC("S")="I $D(SDWLY),SDWLY,$P(^SDWL(409.3,+Y,0),U,17)=""O"""
"RTN","SDWLI",44,0)
 S DIC(0)="EMNQA",DIC=409.3 D ^DIC S (SDWLDFN,DFN)=$P(Y,U,2)
"RTN","SDWLI",45,0)
 G PATEND:SDWLDFN=""
"RTN","SDWLI",46,0)
 Q:Y<0
"RTN","SDWLI",47,0)
 Q:$D(DUOUT)
"RTN","SDWLI",48,0)
 D 1^VADPT
"RTN","SDWLI",49,0)
PATEND Q
"RTN","SDWLI",50,0)
 ;
"RTN","SDWLI",51,0)
 ;PROMPT FOR DISPLAY 'OPEN' WAITING LIST ONLY OR PROMPT FOR BEGINNING AND ENDING DATES
"RTN","SDWLI",52,0)
 ;
"RTN","SDWLI",53,0)
SEL K SDWLDRG S DIR(0)="Y" S DIR("A")="Do You Want to View Only 'OPEN' Wait Lists",DIR("B")="YES"
"RTN","SDWLI",54,0)
 S DIR("?")="'Yes' for 'Open' and these Patient Record have not been dispositioned and 'No' for all Records."
"RTN","SDWLI",55,0)
 W ! D ^DIR S SDWLY=Y W !
"RTN","SDWLI",56,0)
 I X["^" S DUOUT=1
"RTN","SDWLI",57,0)
 I SDWLY=0 D SEL1
"RTN","SDWLI",58,0)
 Q
"RTN","SDWLI",59,0)
SEL1 K DIR,%DT(0) S SDWLDISC="",%DT="AE",%DT("A")="Start with Date Entered: " D ^%DT G SEL:Y<1 S SDWLBDT=Y
"RTN","SDWLI",60,0)
 S %DT(0)=SDWLBDT,%DT("A")="End with Date Entered: " D ^%DT G SEL1:Y<1 S SDWLEDT=Y,SDWLDRG="" K %DT(0),%DT("A")
"RTN","SDWLI",61,0)
 Q
"RTN","SDWLI",62,0)
 ;
"RTN","SDWLI",63,0)
GETFILE ;GET DATA - OPTIONAL DATE RANGE IF SDWLDBT AND SDWLEDT VALID DATE RANGE
"RTN","SDWLI",64,0)
 ;
"RTN","SDWLI",65,0)
 K ^TMP("SDWLI",$J),SDWLDISX S SDWLDA=0,SDWLCNT=0 F  S SDWLDA=$O(^SDWL(409.3,"B",SDWLDFN,SDWLDA)) Q:SDWLDA=""  D
"RTN","SDWLI",66,0)
 .S SDWLDATA=$G(^SDWL(409.3,SDWLDA,0)) I '$D(SDWLDRG),$P(SDWLDATA,U,17)["C" Q
"RTN","SDWLI",67,0)
 .I '$P(SDWLDATA,U,3) Q
"RTN","SDWLI",68,0)
 .N SDWLAPP S SDWLAPP="" I $D(^SDWL(409.3,SDWLDA,"SDAPT")) S SDWLAPP=^("SDAPT") D  ;app data
"RTN","SDWLI",69,0)
 ..S SDWLAPP=SDWLAPP_"~"_$P(SDWLDATA,U,23)
"RTN","SDWLI",70,0)
 .N SDOP,SDOP1 S SDOP="" I $D(^SDWL(409.3,SDWLDA,1)) S SDOP=^(1),SDOP1=$$GET1^DIQ(409.3,SDWLDA_",",29),$P(SDOP,U)=SDOP1
"RTN","SDWLI",71,0)
 .I $D(^SDWL(409.3,SDWLDA,"DIS")) D
"RTN","SDWLI",72,0)
 ..S SDWLDISX=$G(^SDWL(409.3,SDWLDA,"DIS")),SDWLDIS=$P(SDWLDISX,U,3),SDWLDDUZ=$P(SDWLDISX,U,2)
"RTN","SDWLI",73,0)
 ..S SDWLDDT=$P(^SDWL(409.3,SDWLDA,"DIS"),U,1)
"RTN","SDWLI",74,0)
 ..S SDWLDIDT="" I SDWLDDT'="" S SDWLDIDT=$E(SDWLDDT,4,5)_"/"_$E(SDWLDDT,6,7)_"/"_$E(SDWLDDT,2,3)
"RTN","SDWLI",75,0)
 .I $D(^SDWL(409.3,SDWLDA,"DNR")) D
"RTN","SDWLI",76,0)
 ..S SDREM=$G(^SDWL(409.3,SDWLDA,"DNR")) S SDREMD=$P(SDWLDATA,U,14),SDREMU=$P(SDWLDATA,U,15)
"RTN","SDWLI",77,0)
 ..S SDREMDD="" I SDREMD'="" S SDREMDD=$E(SDREMD,4,5)_"/"_$E(SDREMD,6,7)_"/"_$E(SDREMD,2,3)
"RTN","SDWLI",78,0)
 ..S SDREMR=$$GET1^DIQ(409.3,SDWLDA_",",18),SDREMRC=$$GET1^DIQ(409.3,SDWLDA_",",18.1,"I")
"RTN","SDWLI",79,0)
 .S SDWLST=$P(SDWLDATA,U,6),SDWLSP=$P(SDWLDATA,U,7),SDWLSS=$P(SDWLDATA,U,8),SDWLSC=$P(SDWLDATA,U,9),SDWLDT=$P(SDWLDATA,U,2)
"RTN","SDWLI",80,0)
 .S SDWLPROV=$P(SDWLDATA,U,13) I $D(SDWLDRG) D  I SDNOK Q
"RTN","SDWLI",81,0)
 ..S SDNOK=0
"RTN","SDWLI",82,0)
 ..I SDWLDT<SDWLBDT!(SDWLDT>SDWLEDT) S SDNOK=1 Q
"RTN","SDWLI",83,0)
 .;
"RTN","SDWLI",84,0)
 .;IF STATUS IS CLOSED DO NOT DISPLAY RECORD
"RTN","SDWLI",85,0)
 .;
"RTN","SDWLI",86,0)
 .S SDWLCNT=SDWLCNT+1,^TMP("SDWLI",$J,SDWLCNT)=SDWLDATA_"~"_SDWLDA
"RTN","SDWLI",87,0)
 .I $D(SDWLDISX) D 
"RTN","SDWLI",88,0)
 ..S ^TMP("SDWLI",$J,SDWLCNT,"DIS")=SDWLDIS_"^"_SDWLDDUZ_"^"_SDWLDIDT
"RTN","SDWLI",89,0)
 ..I SDWLAPP>0 S ^TMP("SDWLI",$J,SDWLCNT,"SDAPT")=SDWLAPP
"RTN","SDWLI",90,0)
 ..I SDOP'="" S ^TMP("SDWLI",$J,SDWLCNT,"SDOP")=SDOP
"RTN","SDWLI",91,0)
 .I $D(SDREM) D
"RTN","SDWLI",92,0)
 ..S ^TMP("SDWLI",$J,SDWLCNT,"REM")=SDREMR_U_SDREMRC_U_SDREMU_U_SDREMDD
"RTN","SDWLI",93,0)
 .S ^TMP("SDWLI",$J)=SDWLCNT
"RTN","SDWLI",94,0)
 .K SDWLDISX,SDREM
"RTN","SDWLI",95,0)
 Q
"RTN","SDWLI",96,0)
 ;
"RTN","SDWLI",97,0)
DISP ;Display Wait List Data
"RTN","SDWLI",98,0)
 S (SDWLDT,SDWLCNT,SDWLCN)="",SDWLCT=$G(^TMP("SDWLI",$J)) I 'SDWLCT W !!,"No 'OPEN' Wait List Records to Display.",!! K DIR S DIR(0)="E" D ^DIR S DUOUT="" Q
"RTN","SDWLI",99,0)
 F  S SDWLCNT=$O(^TMP("SDWLI",$J,SDWLCNT)) Q:SDWLCNT=""  D  I $D(DUOUT) Q
"RTN","SDWLI",100,0)
 .N SDWLDISX,SDWLR,SDWLCLPT
"RTN","SDWLI",101,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"DIS")) S SDWLDISX=$G(^TMP("SDWLI",$J,SDWLCNT,"DIS"))
"RTN","SDWLI",102,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"REM")) S SDWLR=$G(^TMP("SDWLI",$J,SDWLCNT,"REM")) D
"RTN","SDWLI",103,0)
 ..S SDREMR=$P(SDWLR,U),SDREMRC=$P(SDWLR,U,2),SDREMU=$P(SDWLR,U,3),SDREMDD=$P(SDWLR,U,4)
"RTN","SDWLI",104,0)
 .S X=$G(^TMP("SDWLI",$J,SDWLCNT)),SDWLDA=$P(X,"~",2),SDWLIN=$P(X,U,3),SDWLCL=$P(X,U,4),SDWLTY=$P(X,U,5),SDWLPRI=$P(X,U,11)
"RTN","SDWLI",105,0)
 .S SDWLTYP=$S(SDWLTY=1:$P(X,U,6),SDWLTY=2:$P(X,U,7),SDWLTY=3:$P(X,U,8),SDWLTY=4:$P(X,U,9),1:"")
"RTN","SDWLI",106,0)
 .S SDWLTYN=$S(SDWLTY=1:5,SDWLTY=2:6,SDWLTY=3:7,SDWLTY=4:8),SDWLCOM=$P($P(X,U,18),"~",1)
"RTN","SDWLI",107,0)
 .S SDWLDUZ=$P(X,U,10),SDWLPRV=$P(X,U,12),SDWLPROV=$P(X,U,13),SDWLX=$P(X,"~",3) D
"RTN","SDWLI",108,0)
 ..I $D(SDWLDISX) S SDWLDIS=$P(SDWLDISX,U,1),SDWLDDUZ=$P(SDWLDISX,U,2),SDWLDIDT=$P(SDWLDISX,U,3)
"RTN","SDWLI",109,0)
 .S SDWLDT=$P(X,U,2),YY=$E(SDWLDT,1,3)+1700,YY=$E(YY,3,4),MM=$E(SDWLDT,4,5),DD=$E(SDWLDT,6,7),SDWLDTP=MM_"/"_DD_"/"_YY
"RTN","SDWLI",110,0)
 .S SDWLDTD=$P(X,U,16),YY=$E(SDWLDTD,1,3)+1700,YY=$E(YY,3,4),MM=$E(SDWLDTD,4,5),DD=$E(SDWLDTD,6,7),SDWLDTD=MM_"/"_DD_"/"_YY
"RTN","SDWLI",111,0)
 .;PATCH SD*5.3*394 See Note.
"RTN","SDWLI",112,0)
 .N SDWLSCP
"RTN","SDWLI",113,0)
 .S SDWLSCP=+$P($G(^SDWL(409.3,SDWLDA,"SC")),U,2)
"RTN","SDWLI",114,0)
 .W !,"# ",$J(SDWLCNT,3),!
"RTN","SDWLI",115,0)
 .W !,"Wait List - ",$$EXTERNAL^DILFD(409.3,4,,SDWLTY),?55,"Date Entered - ",SDWLDTP
"RTN","SDWLI",116,0)
 .W !,?15 S X=$$EXTERNAL^DILFD(409.3,SDWLTYN,,SDWLTYP) W X
"RTN","SDWLI",117,0)
 .S SDWLP=0 I SDWLPRI W !,"Priority - ",$$EXTERNAL^DILFD(409.3,10,,SDWLPRI) S SDWLP=1
"RTN","SDWLI",118,0)
 .I $D(SDWLSCP) W !,"Service Connected Priority - ",$$EXTERNAL^DILFD(409.3,15,,SDWLSCP)
"RTN","SDWLI",119,0)
 .W:SDWLP ?15 W:'SDWLP ! W "Institution - ",$$EXTERNAL^DILFD(409.3,2,,SDWLIN)
"RTN","SDWLI",120,0)
 .W !,"Entered by - " S X=$$EXTERNAL^DILFD(409.3,9,,SDWLDUZ) W X
"RTN","SDWLI",121,0)
 .S SDWRB=0 I SDWLPRV W !,"Requested By - ",$$EXTERNAL^DILFD(409.3,11,,SDWLPRV),?55,"Date Desired - ",SDWLDTD
"RTN","SDWLI",122,0)
 .I SDWLPRV=1 W !,"Provider - ",$$EXTERNAL^DILFD(409.3,12,,SDWLPROV)
"RTN","SDWLI",123,0)
 .I $D(SDWLCOM),SDWLCOM'="" W !,"Comments - ",SDWLCOM
"RTN","SDWLI",124,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"SDOP")) N SDOP S SDOP=^("SDOP") W !,"Reopen Reason: ",$P(SDOP,U) D
"RTN","SDWLI",125,0)
 ..I $P(SDOP,U,2)'="" W !,"Reopen comment: ",$P(SDOP,U,2)
"RTN","SDWLI",126,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"REM")) W !,"Non Removal Reason - ",SDREMR,!,"Non Remove Reason entered by - ",$$GET1^DIQ(200,SDREMU_",",.01,"I") D
"RTN","SDWLI",127,0)
 ..I $L(SDREMRC)>0 W !,"Non Removal Comment - ",SDREMRC
"RTN","SDWLI",128,0)
 ..W !,"Non Removal entry date - ",SDREMDD
"RTN","SDWLI",129,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"DIS")) W !,"Disposition - ",$$EXTERNAL^DILFD(409.3,21,,SDWLDIS),?51,"Disposition Date - ",SDWLDIDT D 
"RTN","SDWLI",130,0)
 ..W !,"Dispositioned by - ",$$EXTERNAL^DILFD(409.3,20,,SDWLDDUZ)
"RTN","SDWLI",131,0)
 .I $D(^TMP("SDWLI",$J,SDWLCNT,"SDAPT")) N SDAP S SDAP=^("SDAPT") D
"RTN","SDWLI",132,0)
 ..W !,"Appointment scheduled for " S Y=$P(SDAP,"~",2) D DD^%DT W Y
"RTN","SDWLI",133,0)
 ..W !?3,"Made on: " S Y=+SDAP D DD^%DT W Y,?30,"For clinic: " N SDC S SDC=$P(SDAP,U,2) S SDC=$$GET1^DIQ(44,SDC_",",.01) W SDC
"RTN","SDWLI",134,0)
 ..N SDAIN S SDAIN=$P(SDAP,U,3),SDAIN=$$GET1^DIQ(4,SDAIN_",",.01)
"RTN","SDWLI",135,0)
 ..W !?3,"Appt Institution: ",SDAIN
"RTN","SDWLI",136,0)
 ..N SDCR S SDCR=$P(SDAP,U,4),SDCR=$$GET1^DIQ(40.7,SDCR_",",.01)
"RTN","SDWLI",137,0)
 ..W ?40,"Appt Specialty: ",SDCR
"RTN","SDWLI",138,0)
 ..N SAPS S SAPS=$P(SDAP,U,8),SAPS=$P(SAPS,"~") I SAPS="CC" W !,"Appointment Status: Canceled by Clinic"
"RTN","SDWLI",139,0)
 .S SDWLCLPT=$$GET1^DIQ(409.3,SDWLDA,37,"I")  ; SD*5.3*446
"RTN","SDWLI",140,0)
 .D:SDWLCLPT  ; SD*5.3*446
"RTN","SDWLI",141,0)
 ..W !,"Clinic changed from: ",$$GET1^DIQ(409.3,SDWLCLPT,8)
"RTN","SDWLI",142,0)
 ..W:SDWLIN'=$$GET1^DIQ(409.3,SDWLCLPT,2,"I") " (",$$GET1^DIQ(409.3,SDWLCLPT,2),")"
"RTN","SDWLI",143,0)
 ..Q
"RTN","SDWLI",144,0)
 .; Inter-facility Transfer. SD*5.3*446
"RTN","SDWLI",145,0)
 .I $$GETTRN^SDWLIFT1(SDWLDA,.SDWLINNM,.SDWLSTN) D ENS^%ZISS W !,IOINHI,"In transfer to ",SDWLINNM," (",SDWLSTN,")",IOINORM D KILL^%ZISS
"RTN","SDWLI",146,0)
 .D GETS^DIQ(409.3,SDWLDA,"32;33;34;36;38;39","TMP")
"RTN","SDWLI",147,0)
 .K SDWLIN,SDWLCL,SDWLTY,SDWLPRI,SDWLDUZ,SDWLPRV,SDWLDT,SDWLDTD,SDWLDIS,SDWLDIDT,SDWLTYN,SDWLCOM,SDWLPROV,SDWLDISX,DIR,DIE,DR,SDWLINNM,SDWLSTN
"RTN","SDWLI",148,0)
 .W !,"*****",! K DIR S DIR(0)="E" D ^DIR  D
"RTN","SDWLI",149,0)
 ..I X["^" S DUOUT=1 Q
"RTN","SDWLI",150,0)
 ..I 'Y S DUOUT=1 Q
"RTN","SDWLI",151,0)
 ..D HD
"RTN","SDWLI",152,0)
 Q
"RTN","SDWLI",153,0)
HD ;Header
"RTN","SDWLI",154,0)
 W:$D(IOF) @IOF W !!,?80-$L("Wait List - Inquiry")\2,"Wait List - Inquiry ",!
"RTN","SDWLI",155,0)
 ;SD*5.3*327 - Correct undefined.
"RTN","SDWLI",156,0)
 I '$D(SDWLDFN) W !! Q 
"RTN","SDWLI",157,0)
 N DFN S DFN=SDWLDFN D DEM^VADPT
"RTN","SDWLI",158,0)
 W:$D(VADM) !,VADM(1),?40 I $D(VA("PID")) W VA("PID")
"RTN","SDWLI",159,0)
 W !!
"RTN","SDWLI",160,0)
 K DUOUT
"RTN","SDWLI",161,0)
 Q
"RTN","SDWLI",162,0)
END ;
"RTN","SDWLI",163,0)
 K DIR,DIC,DR,DIE,SDWLDFN,DUOUT
"RTN","SDWLI",164,0)
 K SDNOK,SDWLBDT,SDWLCL,SDWLCN,SDWLCNT,SDWLCOM,SDWLCT,SDWLDA,SDWLDATA,SDWLDDT,SDWLDDUZ,SDWLDFN,SDWLDIDT,SDWLDIS,SDWLDISX
"RTN","SDWLI",165,0)
 K SDWLDRG,SDWLDT,SDWLDTD,SDWLDTP,SDWLDUZ,SDLWEDT,SDWLIN,SDLWP,SDWLPRI,SDWLPROV,SDLWPRV,SDWLSC,SDWLSP,SDWLSS,SDLWST,SDWLTY
"RTN","SDWLI",166,0)
 K SDWLTYN,SDSWLTYP,SDLWX,SDWLY,SDWRB,SDWLBDT,SDWLDISC,SDWLERR,SDWLPRON,SDXSCAT,SDWLP,SDWLTYP
"RTN","SDWLI",167,0)
 K SDREMD,SDREMDD,SDREMR,SDREMRC,SDREMU,MM,SDWLEDT,SDWLLIST,SDWLST,SDWLX,VA,X,Y,YY
"RTN","SDWLI",168,0)
 Q
"RTN","SDWLQSR")
0^2^B10174870^B7657186
"RTN","SDWLQSR",1,0)
SDWLQSR ;BPOI/TEH - WAIT LIST STAT REPORT;06/12/02
"RTN","SDWLQSR",2,0)
 ;;5.3;scheduling;**263,425,448,524**;08/13/93;Build 29
"RTN","SDWLQSR",3,0)
 ;
"RTN","SDWLQSR",4,0)
 ;
"RTN","SDWLQSR",5,0)
 ;
"RTN","SDWLQSR",6,0)
 ;
"RTN","SDWLQSR",7,0)
 ;
"RTN","SDWLQSR",8,0)
EN N ZCODE,ZTDESC,ZTDTH,ZTIO,ZTQUEDED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,POP
"RTN","SDWLQSR",9,0)
 K ^TMP("SDWLQSR",$J)
"RTN","SDWLQSR",10,0)
 D HD
"RTN","SDWLQSR",11,0)
1 D INS G END:$D(DUOUT)
"RTN","SDWLQSR",12,0)
2 D DATE G END:$D(DUOUT)
"RTN","SDWLQSR",13,0)
3 D EXCL G END:$D(DUOUT)
"RTN","SDWLQSR",14,0)
 D QUE G END:$D(DUOUT)
"RTN","SDWLQSR",15,0)
 Q
"RTN","SDWLQSR",16,0)
INS ;Get Institution
"RTN","SDWLQSR",17,0)
 S SDWLERR=0,SDWLPROM="Select Institution ALL // ",SDWLINST=""
"RTN","SDWLQSR",18,0)
IN W ! S DIC(0)="QEMA",DIC("A")=SDWLPROM,DIC=4,DIC("S")="I $D(^SDWL(409.32,""C"",+Y))!$D(^SDWL(409.31,""E"",+Y))!$D(^SCTM(404.51,""AINST"",+Y))" D ^DIC I Y<0,'SDWLERR Q:$D(DUOUT)  S Y="ALL"
"RTN","SDWLQSR",19,0)
 G IN2:Y<0 Q:$D(DUOUT)
"RTN","SDWLQSR",20,0)
 I Y<0 S SDWLINST=$S(Y="ALL":"ALL",Y="":"ALL",Y="all":"ALL",Y="All":"ALL",Y["A":"ALL",Y["a":"ALL")
"RTN","SDWLQSR",21,0)
 I Y="All"!(Y="")!(Y="all")!(Y="ALL") S SDWLINST="ALL",^TMP("SDWLQSR",$J,"INS")="ALL" G IN3
"RTN","SDWLQSR",22,0)
 S SDWLINST=SDWLINST_Y_";",SDWLPROM="Another Institution: ",SDWLERR=1 G IN
"RTN","SDWLQSR",23,0)
IN2 S ^TMP("SDWLQSR",$J,"INS")=SDWLINST
"RTN","SDWLQSR",24,0)
IN3 Q
"RTN","SDWLQSR",25,0)
DATE ;Date range selection
"RTN","SDWLQSR",26,0)
 K X,Y,%DT
"RTN","SDWLQSR",27,0)
 S SDWLERR=0 W ! S %DT="AE",%DT("A")="Start Date: " D ^%DT
"RTN","SDWLQSR",28,0)
 I X["^" S DUOUT=1 Q
"RTN","SDWLQSR",29,0)
 I Y<0 S DUOUT=1 Q 
"RTN","SDWLQSR",30,0)
 S SDWLBDT=Y
"RTN","SDWLQSR",31,0)
 Q:$D(DUOUT)
"RTN","SDWLQSR",32,0)
 S %DT("A")="End Date: " D ^%DT G DATE:Y<1 S SDWLEDT=Y K %DT(0),%DT("A")
"RTN","SDWLQSR",33,0)
 G DATE:$D(DUOUT)
"RTN","SDWLQSR",34,0)
 I SDWLEDT<SDWLBDT W !,"Beginning Date must be greater than Ending Date." G DATE
"RTN","SDWLQSR",35,0)
 S ^TMP("SDWLQSR",$J,"DATE")=SDWLBDT_"^"_SDWLEDT K DIR,DIC,DIE,%DT Q
"RTN","SDWLQSR",36,0)
 Q
"RTN","SDWLQSR",37,0)
EXCL ;EXCLUDE # REMAINING =0 - PATCH SD*5.3*524
"RTN","SDWLQSR",38,0)
 S SDWLEXCL=0,^TMP("SDWLQSR",$J,"EXCL")=0
"RTN","SDWLQSR",39,0)
 S DIR("A",1)="Do you wish to exclude any Teams, Specialities or Specific"
"RTN","SDWLQSR",40,0)
 S DIR("A")="Clinics where ALL values are zero"
"RTN","SDWLQSR",41,0)
 S DIR("B")="YES",DIR(0)="Y^A0" D ^DIR
"RTN","SDWLQSR",42,0)
 I X["^" S DUOUT=1 Q
"RTN","SDWLQSR",43,0)
 I Y<0 S DUOUT=1 Q
"RTN","SDWLQSR",44,0)
EXCL1 I Y S SDWLEXCL=1,^TMP("SDWLQSR",$J,"EXCL")=SDWLEXCL
"RTN","SDWLQSR",45,0)
 K DIR,X,Y,SDWLEXCL
"RTN","SDWLQSR",46,0)
 Q
"RTN","SDWLQSR",47,0)
QUE ;Queue Report
"RTN","SDWLQSR",48,0)
 N ZTQUEUED,POP
"RTN","SDWLQSR",49,0)
 K %ZIS,IOP,IOC,ZTIO S %ZIS="MQ" D ^%ZIS G:POP QUE1
"RTN","SDWLQSR",50,0)
 S ZTRTN="EN^SDWLRSR",ZTDTH=$H,ZTDESC="WAIT LIST STAT REPORT"
"RTN","SDWLQSR",51,0)
 S SDWLTASK="" F  S SDWLTASK=$O(^TMP("SDWLQSR",$J,SDWLTASK)) Q:SDWLTASK=""  D
"RTN","SDWLQSR",52,0)
 .S SDWLTK=$G(^TMP("SDWLQSR",$J,SDWLTASK))
"RTN","SDWLQSR",53,0)
 .S ZTSAVE(SDWLTASK)=SDWLTK
"RTN","SDWLQSR",54,0)
 I $D(IO("Q")) K IO("Q") D ^%ZTLOAD W !,"REQUEST QUEUED" G QUE2
"RTN","SDWLQSR",55,0)
QUE1 S:$E(IOST,1,2)="C-" SDWLSPT=1 I $D(ZTRTN) U IO D @ZTRTN K SDWLSPT
"RTN","SDWLQSR",56,0)
 ;
"RTN","SDWLQSR",57,0)
 ;
"RTN","SDWLQSR",58,0)
QUE2 K SDWLTASK,SDWLY,SDWLED,WDWLBD,SDWLOPEN,SDWLDATE,SDWLFORM,SDWLPRI
"RTN","SDWLQSR",59,0)
 K DIR,DIC,DR,DIE
"RTN","SDWLQSR",60,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","SDWLQSR",61,0)
 Q
"RTN","SDWLQSR",62,0)
END D EN^SDWLKIL
"RTN","SDWLQSR",63,0)
 K DUOUT,SDWLBDT,SDWLEDT,SDWLERR,SDWLIST,SDWLPROM,SDWLTK
"RTN","SDWLQSR",64,0)
 Q
"RTN","SDWLQSR",65,0)
HD ;
"RTN","SDWLQSR",66,0)
 W:$D(IOF) @IOF W !,?80-$L("Wait List Stat Report")\2,"Wait List Stat Report",!
"RTN","SDWLQSR",67,0)
 Q
"RTN","SDWLR30")
0^5^B12105960^n/a
"RTN","SDWLR30",1,0)
SDWLR30 ;BPOI/TEH - WAIT LIST REPORT 30/120 (PCMM);06/12/2002
"RTN","SDWLR30",2,0)
 ;;5.3;scheduling;**524**;AUG 13 1993;Build 29
"RTN","SDWLR30",3,0)
 ;
"RTN","SDWLR30",4,0)
 ;
"RTN","SDWLR30",5,0)
 ;
"RTN","SDWLR30",6,0)
 ;
"RTN","SDWLR30",7,0)
 ;
"RTN","SDWLR30",8,0)
 ;
"RTN","SDWLR30",9,0)
 ;
"RTN","SDWLR30",10,0)
 ;
"RTN","SDWLR30",11,0)
 ;
"RTN","SDWLR30",12,0)
 Q
"RTN","SDWLR30",13,0)
EN ;ENTRY POINT
"RTN","SDWLR30",14,0)
 N ZCODE,ZTDESC,ZTDTH,ZTIO,ZTQUEDED,ZTREQ,ZTRTN,ZTSAVE,ZTSK
"RTN","SDWLR30",15,0)
 N SDTEAM,SDHIST,SDACTIVE
"RTN","SDWLR30",16,0)
 D HD
"RTN","SDWLR30",17,0)
1 S SDWLINST="",SDWLERR=0,SDWLE=0 K ^TMP("SDWLR30",$J),DIC,DIR,DR,DIE
"RTN","SDWLR30",18,0)
 D INS G END:SDWLERR
"RTN","SDWLR30",19,0)
2 D OPEN G 1:SDWLERR
"RTN","SDWLR30",20,0)
 S ^TMP("SDWLR30",$J,"DATE")=""
"RTN","SDWLR30",21,0)
3 D DATE G 2:SDWLERR
"RTN","SDWLR30",22,0)
 D QUE
"RTN","SDWLR30",23,0)
 Q
"RTN","SDWLR30",24,0)
INS ;Get Institution
"RTN","SDWLR30",25,0)
 S (DIC("B"),DIR("B"))="ALL",SDWLERR=0
"RTN","SDWLR30",26,0)
IN1 W ! S DIR("A")="Institution",DIR(0)="F^1:30" D ^DIR
"RTN","SDWLR30",27,0)
 I Y="All"!(Y="")!(Y="all")!(Y="ALL") S ^TMP("SDWLR30",$J,"INS")=Y Q
"RTN","SDWLR30",28,0)
 I Y["^" S SDWLERR=1 Q
"RTN","SDWLR30",29,0)
 S DIC("S")="I $$GET1^DIQ(4,+Y_"","",11,""I"")=""N"",$$TF^XUAF4(+Y)"
"RTN","SDWLR30",30,0)
 S X=Y,DIC(0)="EMNZQ",DIC=4 D ^DIC G IN1:Y<0 S SDWLINS=Y
"RTN","SDWLR30",31,0)
 I X="^",'$G(SDWLINST) S SDWLERR=1 Q
"RTN","SDWLR30",32,0)
 I Y<0,'$G(SDWLINST) S SDWLERR=1
"RTN","SDWLR30",33,0)
 Q:SDWLINS=""  S SDWLINST=SDWLINST_SDWLINS_";",SDWLINST(SDWLINS)=""
"RTN","SDWLR30",34,0)
 S ^TMP("SDWLR30",$J,"INS")=SDWLINST,^TMP("SDWLR30",$J,"INS",SDWLINS)=""
"RTN","SDWLR30",35,0)
 G IN1:Y<0,END:$D(DUOUT)
"RTN","SDWLR30",36,0)
 S DIR("B")="NO",DIR("A")="Select Another Institution",DIR(0)="Y" D ^DIR
"RTN","SDWLR30",37,0)
 I Y K DIR("B") G IN1
"RTN","SDWLR30",38,0)
IN3 K DIR,DIC,SDWLINST,SDWLINS,X,Y
"RTN","SDWLR30",39,0)
 Q
"RTN","SDWLR30",40,0)
OPEN ;OPEN Wait List Entries  
"RTN","SDWLR30",41,0)
 S %=1,SDWLERR=0 W !!,"Do you want only 'OPEN' Wait List Entries " D YN^DICN
"RTN","SDWLR30",42,0)
 I '% W *7,"Must Enter 'YES' or 'NO'." G OPEN
"RTN","SDWLR30",43,0)
 I %=-1 S SDWLERR=1
"RTN","SDWLR30",44,0)
 S ^TMP("SDWLR30",$J,"OPEN")=$S(%=1:"O",1:"OC")
"RTN","SDWLR30",45,0)
 Q
"RTN","SDWLR30",46,0)
DATE ;Date range selection
"RTN","SDWLR30",47,0)
 S %=1 W !!,"Print Report for ALL dates? " D YN^DICN
"RTN","SDWLR30",48,0)
 I %=1 S ^TMP("SDWLR30",$J,"DATE")="ALL" G E1
"RTN","SDWLR30",49,0)
 Q:%=0
"RTN","SDWLR30",50,0)
 I %=-1 S SDWLERR=1 Q
"RTN","SDWLR30",51,0)
 S SDWLERR=0 W ! S %DT="AE",%DT("A")="Start with Date Entered: " D ^%DT
"RTN","SDWLR30",52,0)
 I Y<1 S SDWLERR=1 Q
"RTN","SDWLR30",53,0)
 S SDWLBDT=Y
"RTN","SDWLR30",54,0)
 S %DT(0)=SDWLBDT,%DT("A")="End with Date Entered: " D ^%DT
"RTN","SDWLR30",55,0)
 I X["^" S SDWLERR=1 Q
"RTN","SDWLR30",56,0)
 G E1:Y<1 S SDWLEDT=Y K %DT(0),%DT("A")
"RTN","SDWLR30",57,0)
 I SDWLEDT<SDWLBDT W !,"Beginning Date must be greater than Ending Date." G DATE
"RTN","SDWLR30",58,0)
 S ^TMP("SDWLR30",$J,"DATE")=SDWLBDT_"^"_SDWLEDT Q
"RTN","SDWLR30",59,0)
E1 Q
"RTN","SDWLR30",60,0)
QUE ;Queue Report
"RTN","SDWLR30",61,0)
 N ZTQUEUED,POP S ^TMP("SDWLR30","JOB")=$J
"RTN","SDWLR30",62,0)
 K %ZIS,IOP,IOC,ZTIO,SDWLSPT S %ZIS="MQ" D ^%ZIS I POP W " NOT QUEUED" G END
"RTN","SDWLR30",63,0)
 S ZTRTN="EN^SDWLR31",ZTDTH=$H,ZTDESC="WAIT LIST 30/120 REPORT"
"RTN","SDWLR30",64,0)
 S SDWLTASK="" F  S SDWLTASK=$O(^TMP("SDWLR30",$J,SDWLTASK)) Q:SDWLTASK=""  D
"RTN","SDWLR30",65,0)
 .S SDWLTK=$G(^TMP("SDWLR30",$J,SDWLTASK))
"RTN","SDWLR30",66,0)
 .S ZTSAVE(SDWLTASK)=SDWLTK
"RTN","SDWLR30",67,0)
 I $D(IO("Q")) K IO("Q") D ^%ZTLOAD W !,"REQUEST QUEUED" G END
"RTN","SDWLR30",68,0)
QUE1 S:$E(IOST,1,2)="C-" SDWLSPT=1 I $D(ZTRTN) U IO D @ZTRTN K SDWLSPT
"RTN","SDWLR30",69,0)
 ;
"RTN","SDWLR30",70,0)
END K SDWLTASK,SDWLY,SDWLED,WDWLBD,SDWLOPEN,SDWLDATE,SDWLFORM,SDWLPRI
"RTN","SDWLR30",71,0)
 K DIR,DIC,DR,DIE,SDWLSPT,I
"RTN","SDWLR30",72,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","SDWLR30",73,0)
 K DUOUT,SDWLBDT,SDWLE,SDWLEDT,SDWLERR,SDWLTK
"RTN","SDWLR30",74,0)
 Q
"RTN","SDWLR30",75,0)
HD W:$D(IOF) @IOF W !,?80-$L("EWL Under 30/Over 30/120 Day Wait List Report")\2,"EWL Under 30/Over 30/120 Day Wait List Report"
"RTN","SDWLR31")
0^6^B17924948^n/a
"RTN","SDWLR31",1,0)
SDWLR31 ;BPOI/TEH - WAIT LIST REPORT 30/120 (PCMM) PRINT;06/12/2002
"RTN","SDWLR31",2,0)
 ;;5.3;scheduling;**524**;AUG 13 1993;Build 29
"RTN","SDWLR31",3,0)
 ;
"RTN","SDWLR31",4,0)
 ;
"RTN","SDWLR31",5,0)
 ;
"RTN","SDWLR31",6,0)
 ;
"RTN","SDWLR31",7,0)
 ;
"RTN","SDWLR31",8,0)
 Q
"RTN","SDWLR31",9,0)
EN ;ENTRY POINT
"RTN","SDWLR31",10,0)
 Q:'$D(^TMP("SDWLR30"))  K ^TMP("SDWLR31",$J)
"RTN","SDWLR31",11,0)
 S SDWLJOB=$G(^TMP("SDWLR30","JOB")) Q:SDWLJOB=""
"RTN","SDWLR31",12,0)
 I '$D(^TMP("SDWLR30",SDWLJOB)) Q
"RTN","SDWLR31",13,0)
 S %H=+$H D YMD^%DTC S SDWLDT=X
"RTN","SDWLR31",14,0)
 D SORT
"RTN","SDWLR31",15,0)
 D PRINT
"RTN","SDWLR31",16,0)
 K SDWLJOB,SDWLDT,SDWLINS,SDWLDATE,SDWLOPEN,X,S1,S2,S3,S1T,S2T,S3T,SDWLDA
"RTN","SDWLR31",17,0)
 K SDWLTY,SDWLTYP,SDWLFL,SDWLFLG
"RTN","SDWLR31",18,0)
 Q
"RTN","SDWLR31",19,0)
SORT S (SDWLINS,SDWLDATE,SDWLOPEN)="" F X="INS","DATE","OPEN" I $D(^TMP("SDWLR30",SDWLJOB,X)) D
"RTN","SDWLR31",20,0)
 . S @("SDWL"_X)=$G(^TMP("SDWLR30",SDWLJOB,X))
"RTN","SDWLR31",21,0)
A0 I '$D(SDWLINS) Q
"RTN","SDWLR31",22,0)
A1 I '$D(SDWLDATE) Q
"RTN","SDWLR31",23,0)
A2 I '$D(SDWLOPEN) Q
"RTN","SDWLR31",24,0)
 I SDWLDATE'="ALL" S SDWLDATB=$P(SDWLDATE,U),SDWLDATE=$P(SDWLDATE,U,2)
"RTN","SDWLR31",25,0)
A3 S SDWLDA=0 F  S SDWLDA=$O(^SDWL(409.3,SDWLDA)) Q:SDWLDA<1  D
"RTN","SDWLR31",26,0)
 . S SDWLX=$G(^SDWL(409.3,SDWLDA,0))
"RTN","SDWLR31",27,0)
 . S SDWLIN=+$P(SDWLX,U,3) I SDWLINS'="ALL",SDWLINS'[SDWLIN Q
"RTN","SDWLR31",28,0)
 . S SDWLTY=+$P(SDWLX,U,5)
"RTN","SDWLR31",29,0)
 . S SDWLTYP=+$S(SDWLTY=1:$P(SDWLX,U,6),SDWLTY=2:$P(SDWLX,U,7),SDWLTY=3:$P(SDWLX,U,8),SDWLTY=4:$P(SDWLX,U,9),1:0)
"RTN","SDWLR31",30,0)
 . S SDWLSTAT=$P(SDWLX,U,17)
"RTN","SDWLR31",31,0)
 . S SDWLORDT=$P(SDWLX,U,2)
"RTN","SDWLR31",32,0)
 . S SDWLDTQ=0 I $D(SDWLDATB) D
"RTN","SDWLR31",33,0)
 . . I SDWLORDT<SDWLDATB S SDWLDTQ=1 Q
"RTN","SDWLR31",34,0)
 . . I SDWLORDT>SDWLDATE S SDWLDTQ=1 Q
"RTN","SDWLR31",35,0)
 . I SDWLDTQ Q
"RTN","SDWLR31",36,0)
 . S SDWLFLG="O" I SDWLOPEN[SDWLSTAT,SDWLSTAT="C" D
"RTN","SDWLR31",37,0)
 . . S SDWLFLG="C-ND" I $G(^SDWL(409.3,SDWLDA,"DIS")) S SDWLFLG="C",SDWLORDT=$P(^SDWL(409.3,SDWLDA,"DIS"),U)
"RTN","SDWLR31",38,0)
 . S SDWLFLG=$S(SDWLFLG="O":1,SDWLFLG="C":2,1:3)
"RTN","SDWLR31",39,0)
 . S X1=SDWLDT,X2=SDWLORDT D ^%DTC S SDWLAPD=X
"RTN","SDWLR31",40,0)
 . I SDWLAPD<30 S SDWLFL=1
"RTN","SDWLR31",41,0)
 . I SDWLAPD>29&(SDWLAPD<120) S SDWLFL=2
"RTN","SDWLR31",42,0)
 . I SDWLAPD>120 S SDWLFL=3
"RTN","SDWLR31",43,0)
 . S SDWLCNT=0 I $D(^TMP("SDWLR31",$J,SDWLIN,SDWLFLG,SDWLFL,SDWLTY,SDWLTYP)) S SDWLCNT=^(SDWLTYP)
"RTN","SDWLR31",44,0)
 . S SDWLCNT=SDWLCNT+1 S ^TMP("SDWLR31",$J,SDWLIN,SDWLFLG,SDWLFL,SDWLTY,SDWLTYP)=SDWLCNT
"RTN","SDWLR31",45,0)
 . ;S ^TMP("SDWLR31",$J,"B",SDWLDA,SDWLFL,SDWLTY,SDWLTYP,SDWLFLG)=""
"RTN","SDWLR31",46,0)
 Q
"RTN","SDWLR31",47,0)
PRINT ;PRINT REPORT
"RTN","SDWLR31",48,0)
 D HD
"RTN","SDWLR31",49,0)
 S (SDWLIN,SDWLTY,SDWLTYP,SDWLFL)=0,(S1,S2,S3)=0
"RTN","SDWLR31",50,0)
B0 F  S SDWLIN=$O(^TMP("SDWLR31",$J,SDWLIN)) Q:SDWLIN<1  D
"RTN","SDWLR31",51,0)
 .S (S1,S2,S3,S1T,S2T,S3T)=0
"RTN","SDWLR31",52,0)
 .S SDWLINX=$$GET1^DIQ(4,SDWLIN_",",.01) W !,$E(SDWLINX,1,20)," (",SDWLIN,")"
"RTN","SDWLR31",53,0)
 .S SDWLFLG=0
"RTN","SDWLR31",54,0)
 .F  S SDWLFLG=$O(^TMP("SDWLR31",$J,SDWLIN,SDWLFLG)) Q:SDWLFLG<1  D  D S2
"RTN","SDWLR31",55,0)
 ..W ?22,$S(SDWLFLG=1:"(OPEN RECORDS)",SDWLFLG=2:"(CLOSED RECORDS)",SDWLFLG=3:"(CLOSED - WITH NO DISPOSITION RECORDED)",1:"UNKNOWN"),!!
"RTN","SDWLR31",56,0)
 ..S SDWLFL=0
"RTN","SDWLR31",57,0)
 ..F  S SDWLFL=$O(^TMP("SDWLR31",$J,SDWLIN,SDWLFLG,SDWLFL)) Q:SDWLFL<1  D
"RTN","SDWLR31",58,0)
 ...S SDWLTY=0
"RTN","SDWLR31",59,0)
 ...F  S SDWLTY=$O(^TMP("SDWLR31",$J,SDWLIN,SDWLFLG,SDWLFL,SDWLTY)) Q:SDWLTY<1  D  D S1
"RTN","SDWLR31",60,0)
 ....S SDWLTYX=$$EXTERNAL^DILFD(409.3,4,,SDWLTY) W ?22,$E(SDWLTYX,1,15)
"RTN","SDWLR31",61,0)
 ....S SDWLTYP=0
"RTN","SDWLR31",62,0)
 ....F  S SDWLTYP=$O(^TMP("SDWLR31",$J,SDWLIN,SDWLFLG,SDWLFL,SDWLTY,SDWLTYP)) Q:SDWLTYP<1  D
"RTN","SDWLR31",63,0)
 .....S SDWLF=$S(SDWLTY=1:404.51,SDWLTY=2:404.57,SDWLTY=3:409.31,SDWLTY=4:409.32,1:0) I 'SDWLF S SDWLTYN=""
"RTN","SDWLR31",64,0)
 .....S SDWLTYN=$$GET1^DIQ(SDWLF,SDWLTYP_",",.01) W ?40,$E(SDWLTYN,1,12)
"RTN","SDWLR31",65,0)
 .....S SDWLN=$G(^TMP("SDWLR31",$J,SDWLIN,SDWLFLG,SDWLFL,SDWLTY,SDWLTYP)) S @("S"_SDWLFL)=@("S"_SDWLFL)+SDWLN
"RTN","SDWLR31",66,0)
 .....S @("S"_SDWLFL_"T")=@("S"_SDWLFL_"T")+SDWLN
"RTN","SDWLR31",67,0)
 .....S TAB=$S(SDWLFL=1:55,SDWLFL=2:60,SDWLFL=3:65,1:65) D
"RTN","SDWLR31",68,0)
 ......F SDX=1:1:3 D
"RTN","SDWLR31",69,0)
 .......S TAB=$S(SDX=1:55,SDX=2:60,SDX=3:65,1:65) D
"RTN","SDWLR31",70,0)
 ........W ?TAB I SDX=SDWLFL W $J(SDWLN,$S(SDWLFL<3:3,1:4))
"RTN","SDWLR31",71,0)
 ........E  W ?TAB,$J(0,$S(SDX<3:3,1:4))
"RTN","SDWLR31",72,0)
 ......W !
"RTN","SDWLR31",73,0)
 Q
"RTN","SDWLR31",74,0)
S1 W !,?55,"===",?60,"===",?65,"====",!,?40,"SUBTOTALS"
"RTN","SDWLR31",75,0)
 W ?55,$J(S1,3),?60,$J(S2,3),?65,$J(S3,4) S (S1,S2,S3)=0 W !!
"RTN","SDWLR31",76,0)
 Q
"RTN","SDWLR31",77,0)
S2 W !,?55,"===",?60,"===",?65,"====",!,?43,"TOTALS"
"RTN","SDWLR31",78,0)
 W ?55,$J(S1T,3),?60,$J(S2T,3),?65,$J(S3T,4),!!
"RTN","SDWLR31",79,0)
 Q
"RTN","SDWLR31",80,0)
HD ;HEADER
"RTN","SDWLR31",81,0)
 W:$D(IOF) @IOF W !!,?80-$L("EWL 30/60/120 DAY REPORT")\2,"EWL 30/60/120 DAY REPORT",!!
"RTN","SDWLR31",82,0)
 W !,?5,"INSTITUTION",?25,"TYPE",?40,"LOCATION",?55,"<30",?60,">30",?65,">120"
"RTN","SDWLR31",83,0)
 W !,?5,"===========",?25,"====",?40,"========",?55,"===",?60,"===",?65,"====",!
"RTN","SDWLR31",84,0)
 Q
"RTN","SDWLRSR")
0^3^B42863280^B37978690
"RTN","SDWLRSR",1,0)
SDWLRSR ;BPOI/TEH - WAIT LIST STAT REPORT;10/01/02
"RTN","SDWLRSR",2,0)
 ;;5.3;scheduling;**263,273,399,412,425,415,524**;08/13/93;Build 29
"RTN","SDWLRSR",3,0)
 ;
"RTN","SDWLRSR",4,0)
 ; Removed Sort logic as routine exceeded SACC maximum size of 10000
"RTN","SDWLRSR",5,0)
 ; New routine SDWLRSRS was created to perform the Sort functionality
"RTN","SDWLRSR",6,0)
 ;
"RTN","SDWLRSR",7,0)
 ;
"RTN","SDWLRSR",8,0)
EN ;
"RTN","SDWLRSR",9,0)
 D INIT G END:$D(DUOUT)  ;SD*5.3*415
"RTN","SDWLRSR",10,0)
 D SORT^SDWLRSRS(SDWLBD,SDWLED,SDWLINS,.SDWL)  ; SD*5.3*415 new routine to perform sort
"RTN","SDWLRSR",11,0)
 D:'$$S^%ZTLOAD PRT  ;SD*5.3*415
"RTN","SDWLRSR",12,0)
 G END
"RTN","SDWLRSR",13,0)
INIT ;
"RTN","SDWLRSR",14,0)
 I $D(CT) S SDWLCT2=CT
"RTN","SDWLRSR",15,0)
 I $D(DATE) S SDWLDATE=DATE
"RTN","SDWLRSR",16,0)
 I $D(INS) S SDWLINS=INS
"RTN","SDWLRSR",17,0)
 I $D(EXCL) S SDWLEXCL=EXCL
"RTN","SDWLRSR",18,0)
 I $D(ZTSAVE) D
"RTN","SDWLRSR",19,0)
 .S SDWLCT=$G(ZTSAVE("CT")),SDWLDATE=$G(ZTSAVE("DATE")),SDWLINS=$G(ZTSAVE("INS")),SDWLEXCL=$G(ZTSAVE("EXCL"))
"RTN","SDWLRSR",20,0)
 I SDWLINS'="ALL" F I=1:1 S SDWL=$P(SDWLINS,";",I) Q:SDWL=""  S SDWL("INS",+SDWL)=""
"RTN","SDWLRSR",21,0)
 S SDWLBD=$P(SDWLDATE,U,1),SDWLED=$P(SDWLDATE,U,2),SDWLPG=0
"RTN","SDWLRSR",22,0)
 D NOW^%DTC S Y=% D DD^%DT S SDWLDTP=Y
"RTN","SDWLRSR",23,0)
 N POP S POP=0  ;SD*5.3*412
"RTN","SDWLRSR",24,0)
 Q
"RTN","SDWLRSR",25,0)
PRT ;PRINT REPORT
"RTN","SDWLRSR",26,0)
 S (TT1,TT2,TT3,TT4,TT5,TT6,TT7,TT8,TT9,TT10,TT11,TT12,SDWLPG)=0 D HD,HD1 ;SD*5.3*415
"RTN","SDWLRSR",27,0)
 I '$D(^TMP("SDWLRSR1")) W !!,"No Wait List Data to Report" Q
"RTN","SDWLRSR",28,0)
 S SDWLINS="" F  S SDWLINS=$O(^TMP("SDWLRSR1",$J,SDWLINS)) Q:SDWLINS=""  D  Q:POP  D T2  Q:POP  W !,"________________" I $Y>(IOSL-5) D:$D(SDWLSPT) SCR Q:POP  D HD,HD1  ;SD*5.3*412 added Quit for early exit
"RTN","SDWLRSR",29,0)
 .I $$S^%ZTLOAD S DUOUT="" Q
"RTN","SDWLRSR",30,0)
 .W !!,"INSTITUTION: ",SDWLINS,! K ^XTMP("SDWLRSR")
"RTN","SDWLRSR",31,0)
 .S SDWLTY="" F  S SDWLTY=$O(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY)) Q:SDWLTY=""  D  Q:POP  ;SD*5.3*412 added Quit for early exit
"RTN","SDWLRSR",32,0)
 ..S SDWLTNM=$$EXTERNAL^DILFD(409.3,4,,SDWLTY)
"RTN","SDWLRSR",33,0)
 ..S SDWLSCN="" F  S SDWLSCN=$O(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN)) Q:SDWLSCN=""  D  Q:POP  ;SD*5.3*412 added Quit for early exit
"RTN","SDWLRSR",34,0)
 ...S (T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12)=0 ;SD*5.3*415
"RTN","SDWLRSR",35,0)
 ...S SDWLSCNM="" F  S SDWLSCNM=$O(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM)) Q:SDWLSCNM=""  D  Q:POP  D T1  Q:POP  ;SD*5.3*412 added Quit
"RTN","SDWLRSR",36,0)
 ....S SDWLPRI="" F  S SDWLPRI=$O(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI)) Q:SDWLPRI=""  D  Q:POP  ;SD*5.3*412 added Quit
"RTN","SDWLRSR",37,0)
 .....S SDWLFLG=0
"RTN","SDWLRSR",38,0)
 .....S SDWLPR=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"PR")) I SDWLEXCL,SDWLPR S SDWLFLG=1
"RTN","SDWLRSR",39,0)
 .....S SDWLCL=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"CL")) I 'SDWLFLG,SDWLEXCL,SDWLCL S SDWLFLG=1
"RTN","SDWLRSR",40,0)
 .....S SDWLD=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"SDWLD")) I 'SDWLFLG,SDWLEXCL,SDWLD S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",41,0)
 .....S SDWLNC=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"SDWLNC")) I 'SDWLFLG,SDWLEXCL,SDWLNC S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",42,0)
 .....S SDWLSA=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"SDWLSA")) I 'SDWLFLG,SDWLEXCL,SDWLSA S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",43,0)
 .....S SDWLCC=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"SDWLCC")) I 'SDWLFLG,SDWLEXCL,SDWLCC S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",44,0)
 .....S SDWLNN=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"SDWLNN")) I 'SDWLFLG,SDWLEXCL,SDWLNN S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",45,0)
 .....S SDWLER=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"SDWLER")) I 'SDWLFLG,SDWLEXCL,SDWLER S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",46,0)
 .....S SDWLTR=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"SDWLTR"))  I 'SDWLFLG,SDWLEXCL,SDWLTR S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",47,0)
 .....S SDWLAD=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"AD")) I 'SDWLFLG,SDWLEXCL,SDWLAD S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",48,0)
 .....S SDWLRR=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"RR")) I 'SDWLFLG,SDWLEXCL,SDWLRR S SDWLFLG=1 ;SD*5.3*415
"RTN","SDWLRSR",49,0)
 .....S SDWLNR=+$G(^TMP("SDWLRSR1",$J,SDWLINS,SDWLTY,SDWLSCN,SDWLSCNM,SDWLPRI,"NR")) I 'SDWLFLG,SDWLEXCL,SDWLNR S SDWLFLG=1 ;W ?72,$J(SDWLNR,3)
"RTN","SDWLRSR",50,0)
 .....I 'SDWLEXCL,'SDWLFLG S SDWLFG=1
"RTN","SDWLRSR",51,0)
 .....I SDWLEXCL,'SDWLFLG Q
"RTN","SDWLRSR",52,0)
 .....I '$D(^XTMP("SDWLRSR",$J,SDWLTNM)) W !,$E(SDWLTNM,1,15) S ^XTMP("SDWLRSR",$J,SDWLTNM)=""
"RTN","SDWLRSR",53,0)
 .....W !?2,$E(SDWLSCNM_" "_$S(SDWLPRI="A":"ASAP",SDWLPRI="F":"FUTURE",1:""),1,17)
"RTN","SDWLRSR",54,0)
 .....S T1=T1+SDWLPR,TT1=TT1+SDWLPR W ?21,$J(SDWLPR,3)
"RTN","SDWLRSR",55,0)
 .....S T2=T2+SDWLCL,TT2=TT2+SDWLCL W ?26,$J(SDWLCL,3)
"RTN","SDWLRSR",56,0)
 .....S T3=T3+SDWLD,TT3=TT3+SDWLD W ?31,$J(SDWLD,3)
"RTN","SDWLRSR",57,0)
 .....S T4=T4+SDWLNC,TT4=TT4+SDWLNC W ?36,$J(SDWLNC,3)
"RTN","SDWLRSR",58,0)
 .....S T5=T5+SDWLSA,TT5=TT5+SDWLSA W ?41,$J(SDWLSA,3)
"RTN","SDWLRSR",59,0)
 .....S T6=T6+SDWLCC,TT6=TT6+SDWLCC W ?46,$J(SDWLCC,3)
"RTN","SDWLRSR",60,0)
 .....S T7=T7+SDWLNN,TT7=TT7+SDWLNN W ?51,$J(SDWLNN,3)
"RTN","SDWLRSR",61,0)
 .....S T8=T8+SDWLER,TT8=TT8+SDWLER W ?56,$J(SDWLER,3)
"RTN","SDWLRSR",62,0)
 .....S T9=T9+SDWLTR,TT9=TT9+SDWLTR W ?61,$J(SDWLTR,3) ;SD*5.3*415
"RTN","SDWLRSR",63,0)
 .....S T10=T10+SDWLAD,TT10=TT10+SDWLAD W ?66,$J(SDWLAD,3) ;SD*5.3*415
"RTN","SDWLRSR",64,0)
 .....S T11=T11+SDWLRR,TT11=TT11+SDWLRR W ?71,$J(SDWLRR,3) ;SD*5.3*415
"RTN","SDWLRSR",65,0)
 .....S T12=T12+SDWLNR,TT12=TT12+SDWLNR W ?76,$J(SDWLNR,3) ;SD*5.3*415
"RTN","SDWLRSR",66,0)
 .....I $Y>(IOSL-5) D:$D(SDWLSPT) SCR Q:POP  D HD,HD1  ;SD*5.3*412
"RTN","SDWLRSR",67,0)
 Q
"RTN","SDWLRSR",68,0)
SCR S DIR(0)="E" D ^DIR S:X="^" POP=1  ;SD*5.3*412
"RTN","SDWLRSR",69,0)
 Q
"RTN","SDWLRSR",70,0)
T1 ;
"RTN","SDWLRSR",71,0)
 I 'SDWLFLG,SDWLEXCL Q
"RTN","SDWLRSR",72,0)
 W !?20,"---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----"  ;SD*5.3*415
"RTN","SDWLRSR",73,0)
 W !,"Sub-Totals:"
"RTN","SDWLRSR",74,0)
 ;write sub-totals
"RTN","SDWLRSR",75,0)
 W ?21,$J(T1,3),?26,$J(T2,3),?31,$J(T3,3),?36,$J(T4,3),?41,$J(T5,3),?46,$J(T6,3),?51,$J(T7,3),?56,$J(T8,3),?61,$J(T9,3),?66,$J(T10,3),?71,$J(T11,3),?76,$J(T12,3),!  ;SD*5.3*415
"RTN","SDWLRSR",76,0)
 S (T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12)=0  ;SD*5.3*415
"RTN","SDWLRSR",77,0)
 I $Y>(IOSL-5) D:$D(SDWLSPT) SCR Q:POP  D HD,HD1  ;SD*5.3*412
"RTN","SDWLRSR",78,0)
 Q
"RTN","SDWLRSR",79,0)
T2 W !,"Institution Totals:"
"RTN","SDWLRSR",80,0)
 W ?21,$J(TT1,3),?26,$J(TT2,3),?31,$J(TT3,3),?36,$J(TT4,3),?41,$J(TT5,3),?46,$J(TT6,3),?51,$J(TT7,3),?56,$J(TT8,3),?61,$J(TT9,3),?66,$J(TT10,3),?71,$J(TT11,3),?76,$J(TT12,3),!  ;SD*5.3*415
"RTN","SDWLRSR",81,0)
 S (TT1,TT2,TT3,TT4,TT5,TT6,TT7,TT8,TT9,TT10,TT11,TT12)=0  ;SD*5.3*415
"RTN","SDWLRSR",82,0)
 I $Y>(IOSL-5) D:$D(SDWLSPT) SCR Q:POP  D HD,HD1  ;SD*5.3*412
"RTN","SDWLRSR",83,0)
 Q
"RTN","SDWLRSR",84,0)
HD W:$D(IOF) @IOF S SDWLPG=SDWLPG+1 W !!,SDWLDTP,?80-$L("Wait List (Sch/PCMM) Stat Report")\2,"Wait List (Sch/PCMM) Stat Report",?65,"Page: ",SDWLPG
"RTN","SDWLRSR",85,0)
 W !,?80-$L("STARTED Date: ")\2,"STARTED Date: " S Y=$P(SDWLDATE,U,1) D DD^%DT W Y
"RTN","SDWLRSR",86,0)
 W !,?80-$L("FINISHED Date: ")\2,"FINISHED Date: " S Y=$P(SDWLDATE,U,2) D DD^%DT W Y
"RTN","SDWLRSR",87,0)
 Q
"RTN","SDWLRSR",88,0)
HD1 ;
"RTN","SDWLRSR",89,0)
 W !,?20,"PREV"
"RTN","SDWLRSR",90,0)
 W ?65,"#"
"RTN","SDWLRSR",91,0)
 W ?75,"# NOT"
"RTN","SDWLRSR",92,0)
 W !,"WAIT LIST TYPE"
"RTN","SDWLRSR",93,0)
 W ?20,"REMN",?25,"CLSD",?31,"DTH",?37,"NC",?42,"SA",?47,"CC",?52,"NN",?57,"ER",?61,"TR",?65,"ADD",?70,"REMN",?75,"REMVD",!  ;SD*5.3*415
"RTN","SDWLRSR",94,0)
 Q
"RTN","SDWLRSR",95,0)
END D EN^SDWLKIL
"RTN","SDWLRSR",96,0)
 K ^TMP("SDWLRSR1",$J),^TMP("SDWLRSR2",$J),SDWLY1,SDWLX1,SDWLRDT,CT,I
"RTN","SDWLRSR",97,0)
 K T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,SDWLAD,SDWLBD,SDWLCC,SDWLCT,SDWLDFDT,SDWLDP,SDWLED,SDWLER,SDWLERR,SDWLFLD,X1,X2,DATE  ;SD*5.3*415
"RTN","SDWLRSR",98,0)
 K TT1,TT2,TT3,TT4,TT5,TT6,TT7,TT8,TT9,TT10,TT11,TT12,SDWLINSN,SDWLINST,SDWLNC,SDWLNN,SDWLNR,SDWLOFDT,SDWLOK1,SDWLOK2,SDWLTYPN  ;SD*5.3*415
"RTN","SDWLRSR",99,0)
 K SDWLOK3,SDWLPR,SDWLPR,SDWLPROM,SDWLRE,SDWLRFDT,SDWLRR,SDWLSA,SDWLSCN,SDWLSCNM,SDWLTASK,SDWLTK,SDWLTNM,SDWLTYNM,SDWLTYP,X4,SDWLTR  ;SD*5.3*415
"RTN","SDWLRSR",100,0)
 Q
"VER")
8.0^22.0
"BLD",6683,6)
^430
**END**
**END**
