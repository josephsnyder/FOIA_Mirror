Released SD*5.3*346 SEQ #366
Extracted from mail message
**KIDS**:SD*5.3*346^

**INSTALL NAME**
SD*5.3*346
"BLD",5848,0)
SD*5.3*346^SCHEDULING^0^3051208^y
"BLD",5848,4,0)
^9.64PA^^
"BLD",5848,"KRN",0)
^9.67PA^8989.52^19
"BLD",5848,"KRN",.4,0)
.4
"BLD",5848,"KRN",.401,0)
.401
"BLD",5848,"KRN",.402,0)
.402
"BLD",5848,"KRN",.403,0)
.403
"BLD",5848,"KRN",.5,0)
.5
"BLD",5848,"KRN",.84,0)
.84
"BLD",5848,"KRN",3.6,0)
3.6
"BLD",5848,"KRN",3.8,0)
3.8
"BLD",5848,"KRN",9.2,0)
9.2
"BLD",5848,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",5848,"KRN",9.8,0)
9.8
"BLD",5848,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5848,"KRN",9.8,"NM",1,0)
SCAPMC28^^0^B26899437
"BLD",5848,"KRN",9.8,"NM",2,0)
SCMCMU3^^0^B5899522
"BLD",5848,"KRN",9.8,"NM",3,0)
SCRPU3^^0^B27212512
"BLD",5848,"KRN",9.8,"NM","B","SCAPMC28",1)

"BLD",5848,"KRN",9.8,"NM","B","SCMCMU3",2)

"BLD",5848,"KRN",9.8,"NM","B","SCRPU3",3)

"BLD",5848,"KRN",19,0)
19
"BLD",5848,"KRN",19.1,0)
19.1
"BLD",5848,"KRN",101,0)
101
"BLD",5848,"KRN",409.61,0)
409.61
"BLD",5848,"KRN",771,0)
771
"BLD",5848,"KRN",870,0)
870
"BLD",5848,"KRN",8989.51,0)
8989.51
"BLD",5848,"KRN",8989.52,0)
8989.52
"BLD",5848,"KRN",8994,0)
8994
"BLD",5848,"KRN","B",.4,.4)

"BLD",5848,"KRN","B",.401,.401)

"BLD",5848,"KRN","B",.402,.402)

"BLD",5848,"KRN","B",.403,.403)

"BLD",5848,"KRN","B",.5,.5)

"BLD",5848,"KRN","B",.84,.84)

"BLD",5848,"KRN","B",3.6,3.6)

"BLD",5848,"KRN","B",3.8,3.8)

"BLD",5848,"KRN","B",9.2,9.2)

"BLD",5848,"KRN","B",9.8,9.8)

"BLD",5848,"KRN","B",19,19)

"BLD",5848,"KRN","B",19.1,19.1)

"BLD",5848,"KRN","B",101,101)

"BLD",5848,"KRN","B",409.61,409.61)

"BLD",5848,"KRN","B",771,771)

"BLD",5848,"KRN","B",870,870)

"BLD",5848,"KRN","B",8989.51,8989.51)

"BLD",5848,"KRN","B",8989.52,8989.52)

"BLD",5848,"KRN","B",8994,8994)

"BLD",5848,"QUES",0)
^9.62^^
"BLD",5848,"REQB",0)
^9.611^5^3
"BLD",5848,"REQB",2,0)
SD*5.3*157^2
"BLD",5848,"REQB",4,0)
SD*5.3*347^2
"BLD",5848,"REQB",5,0)
SD*5.3*433^2
"BLD",5848,"REQB","B","SD*5.3*157",2)

"BLD",5848,"REQB","B","SD*5.3*347",4)

"BLD",5848,"REQB","B","SD*5.3*433",5)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930925
"PKG",16,22,1,"PAH",1,0)
346^3051208^22954
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","SCAPMC28")
0^1^B26899437
"RTN","SCAPMC28",1,0)
SCAPMC28 ;ALB/REW - Patients with an Appointment ; 1/10/05 2:49pm
"RTN","SCAPMC28",2,0)
 ;;5.3;Scheduling;**41,140,346**;AUG 13, 1993
"RTN","SCAPMC28",3,0)
 ;;1.0
"RTN","SCAPMC28",4,0)
PTAP(SCCL,SCDATES,SCMAXCNT,SCLIST,SCERR,MORE) ; -- list of patients with an appointment in a given clinic
"RTN","SCAPMC28",5,0)
 ; 
"RTN","SCAPMC28",6,0)
 ; input:
"RTN","SCAPMC28",7,0)
 ;  SCCL = Pointer to File #44
"RTN","SCAPMC28",8,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC28",9,0)
 ;                      [default: TODAY]
"RTN","SCAPMC28",10,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC28",11,0)
 ;                      [default: TODAY]
"RTN","SCAPMC28",12,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC28",13,0)
 ;                       team for entire date range
"RTN","SCAPMC28",14,0)
 ;                    0: anytime in date range
"RTN","SCAPMC28",15,0)
 ;                      [default: 1] 
"RTN","SCAPMC28",16,0)
 ;  SCMAXCNT        - Maximum # of patients to return, default=99
"RTN","SCAPMC28",17,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC28",18,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC28",19,0)
 ;        
"RTN","SCAPMC28",20,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC28",21,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC28",22,0)
 ;  MORE - This is a flag that says that this list exists and has been
"RTN","SCAPMC28",23,0)
 ;         aborted because it reached the maxcount.  If this =1 it means
"RTN","SCAPMC28",24,0)
 ;         'kill the old list & start where you finished'
"RTN","SCAPMC28",25,0)
 ;  Note: Don't Return DFNs where $D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+DFN)) is true
"RTN","SCAPMC28",26,0)
 ; Output:
"RTN","SCAPMC28",27,0)
 ;  SCLIST() = array of patients
"RTN","SCAPMC28",28,0)
 ;             Format:
"RTN","SCAPMC28",29,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC28",30,0)
 ;               Piece     Description
"RTN","SCAPMC28",31,0)
 ;                 1       IEN of PATIENT file entry
"RTN","SCAPMC28",32,0)
 ;                 2       Name of patient
"RTN","SCAPMC28",33,0)
 ;                 3       ien to 40.7 - Not Stop Code!! stp=$$intstp
"RTN","SCAPMC28",34,0)
 ;                 4       AMIS reporting stop code
"RTN","SCAPMC28",35,0)
 ;                 5       Patient's Long ID (SSN)
"RTN","SCAPMC28",36,0)
 ;
"RTN","SCAPMC28",37,0)
 ; SCEFFDT - negative of effective date
"RTN","SCAPMC28",38,0)
 ; SCN     - current subscript (counter) 1->n
"RTN","SCAPMC28",39,0)
 ; SCPTA0   is 0 node of Patient Team Assignment file 1st piece is DFN
"RTN","SCAPMC28",40,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC28",41,0)
 ;  @SCERR@(0)=number of errors, undefined if none
"RTN","SCAPMC28",42,0)
 ;             Foramt:
"RTN","SCAPMC28",43,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC28",44,0)
 ;               Piece     Description
"RTN","SCAPMC28",45,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC28",46,0)
 ;
"RTN","SCAPMC28",47,0)
 ;   Returned: 1 if ok, 0 if error^More?
"RTN","SCAPMC28",48,0)
 ;
"RTN","SCAPMC28",49,0)
 ;
"RTN","SCAPMC28",50,0)
ST N SCEND,SCVSDT,SCSTART
"RTN","SCAPMC28",51,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC28",52,0)
 G:'$$OKDATA APQ ;check/setup variables
"RTN","SCAPMC28",53,0)
 ; -- loop through visit file
"RTN","SCAPMC28",54,0)
LP S SCDT=SCBEGIN
"RTN","SCAPMC28",55,0)
 S:'$P(SCEND,".",2) SCEND=$$FMADD^XLFDT(SCEND,1) ;ending is end of day
"RTN","SCAPMC28",56,0)
 IF $G(MORE) D
"RTN","SCAPMC28",57,0)
 .S SCSTART=$P($G(@SCLIST@(0)),U,2)
"RTN","SCAPMC28",58,0)
 .S SCBEGIN=$P($G(@SCLIST@(0)),U,3)
"RTN","SCAPMC28",59,0)
 .K @SCLIST
"RTN","SCAPMC28",60,0)
APQ Q $$PTAPX(.SCCL,.SCBEGIN,.SCEND,.SCMAXCNT,.SCLIST,.SCERR,.SCSTART)
"RTN","SCAPMC28",61,0)
 ;
"RTN","SCAPMC28",62,0)
PTAPX(SCCL,SCBEGIN,SCEND,MAXCNT,SCLIST,SCERR,SCSTART) ;return appointments in dt range
"RTN","SCAPMC28",63,0)
 ; Input: (As above plus:)
"RTN","SCAPMC28",64,0)
 ;    SCSTART - Continue with list at this point
"RTN","SCAPMC28",65,0)
 ; output: SCN - COUNT OF PTS
"RTN","SCAPMC28",66,0)
 ; returns:      dfn^ptname^clinic^apptdt^long id
"RTN","SCAPMC28",67,0)
 ; 
"RTN","SCAPMC28",68,0)
 ;initialize variables
"RTN","SCAPMC28",69,0)
 N SCDT,SCARRAY,DFN,SDAPTCNT,SDARRAY,SDERR,SDX,SDY
"RTN","SCAPMC28",70,0)
 K ^TMP($J,"SDAMA301")
"RTN","SCAPMC28",71,0)
 ;setup call to SDAPI
"RTN","SCAPMC28",72,0)
 S SDARRAY(1)=$G(SCBEGIN)_";"_$G(SCEND),SDARRAY(2)=$G(SCCL),SDARRAY("FLDS")=4
"RTN","SCAPMC28",73,0)
 S SDARRAY("SORT")="P"
"RTN","SCAPMC28",74,0)
 ;call SDAPI to retrieve appointments
"RTN","SCAPMC28",75,0)
 S SDAPTCNT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SCAPMC28",76,0)
 ;handle errors if any returned from SDAPI and QUIT
"RTN","SCAPMC28",77,0)
 I SDAPTCNT<0 D  Q ($G(@SCERR@(0))<1)_U_(SCN'<SCMAXCNT)
"RTN","SCAPMC28",78,0)
 .;call existing error handler
"RTN","SCAPMC28",79,0)
 .D ERR^SCAPMCU1(.SCESEQ,,,"",.SCERR)
"RTN","SCAPMC28",80,0)
 .K ^TMP($J,"SDAMA301")
"RTN","SCAPMC28",81,0)
 ;if appointments returned 
"RTN","SCAPMC28",82,0)
 I SDAPTCNT>0 D
"RTN","SCAPMC28",83,0)
 .;retrieve patient ID to start at if continuing list (was appt ifn)
"RTN","SCAPMC28",84,0)
 .; * no code could be found to utilize continuation of a list
"RTN","SCAPMC28",85,0)
 .; * if this changes this code should be revisited to ensure only 1
"RTN","SCAPMC28",86,0)
 .;   call to SDAPI is made.
"RTN","SCAPMC28",87,0)
 .S DFN=+$G(SCSTART)
"RTN","SCAPMC28",88,0)
 .S SCSTART=0
"RTN","SCAPMC28",89,0)
 .S SCDT=0
"RTN","SCAPMC28",90,0)
 .;resort appts to ensure same data is returned to user
"RTN","SCAPMC28",91,0)
 .;only 1st appt date/time is needed for each patient
"RTN","SCAPMC28",92,0)
 .;as patient can only be added to the list once.
"RTN","SCAPMC28",93,0)
 .K ^TMP($J,"RE-SORT","SDAMA301")
"RTN","SCAPMC28",94,0)
 .S (SDY,SDX)=0
"RTN","SCAPMC28",95,0)
 .F  S SDX=$O(^TMP($J,"SDAMA301",SDX)) Q:'SDX  D
"RTN","SCAPMC28",96,0)
 ..S SDY=$O(^TMP($J,"SDAMA301",SDX,""))
"RTN","SCAPMC28",97,0)
 ..S ^TMP($J,"RE-SORT","SDAMA301",SDY,SDX)=""
"RTN","SCAPMC28",98,0)
 .K ^TMP($J,"SDAMA301")
"RTN","SCAPMC28",99,0)
 .;loop through re-sorted appts returned from SDAPI until
"RTN","SCAPMC28",100,0)
 .; 1. no more patients with appointments exist
"RTN","SCAPMC28",101,0)
 .; 2. number of patients found that match criteria is not less than max
"RTN","SCAPMC28",102,0)
 .F  S SCDT=$O(^TMP($J,"RE-SORT","SDAMA301",SCDT)) Q:'SCDT!(SCN'<SCMAXCNT)  D
"RTN","SCAPMC28",103,0)
 ..;get patient for the kept appointment in the re-sorted list
"RTN","SCAPMC28",104,0)
 ..F  S DFN=$O(^TMP($J,"RE-SORT","SDAMA301",SCDT,DFN)) Q:'DFN!(SCN'<SCMAXCNT)  D
"RTN","SCAPMC28",105,0)
 ...;quit if patient is found in either of the following lists
"RTN","SCAPMC28",106,0)
 ...;this list may be used elsewhere, left in for compatibility
"RTN","SCAPMC28",107,0)
 ...Q:$D(@SCLIST@("SCPTAP",+DFN))
"RTN","SCAPMC28",108,0)
 ...Q:$D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+DFN))
"RTN","SCAPMC28",109,0)
 ...;increment the patient counter and store in SCLIST
"RTN","SCAPMC28",110,0)
 ...S SCN=$G(@SCLIST@(0))+1
"RTN","SCAPMC28",111,0)
 ...S @SCLIST@(0)=SCN
"RTN","SCAPMC28",112,0)
 ...;get the patient's long ID (SSN) and Name
"RTN","SCAPMC28",113,0)
 ...D GETS^DIQ(2,+DFN,".01;.363","","SCARRAY")
"RTN","SCAPMC28",114,0)
 ...;add the following appt info to SCLIST at the current Patient Counter
"RTN","SCAPMC28",115,0)
 ...;1. Patient DFN 2. Patient Name 3. Clinic IEN 4. Appt DTM 5. Patients Long ID
"RTN","SCAPMC28",116,0)
 ...S @SCLIST@(SCN)=DFN_U_$G(SCARRAY(2,+DFN_",",.01))_U_SCCL_U_SCDT_U_$G(SCARRAY(2,+DFN_",",.363))
"RTN","SCAPMC28",117,0)
 ...;add the patient's DFN to the exclusion list
"RTN","SCAPMC28",118,0)
 ...S @SCLIST@("SCPTAP",+DFN,+SCN)=""
"RTN","SCAPMC28",119,0)
 ;kill the re-sorted appt global reference generated
"RTN","SCAPMC28",120,0)
 K ^TMP($J,"RE-SORT","SDAMA301")
"RTN","SCAPMC28",121,0)
 ;if # of patients found that match criteria is NOT LESS than the requested Max then
"RTN","SCAPMC28",122,0)
 ;set SCLIST at the 0 Node to:
"RTN","SCAPMC28",123,0)
 ;1.Current Patient Count 2. Current Patient Processing 3. Appt DTM 4. Clinic IEN
"RTN","SCAPMC28",124,0)
 S:(SCN'<SCMAXCNT) @SCLIST@(0)=SCN_U_+$G(DFN)_U_+$G(SCDT)_U_+$G(SCCL)
"RTN","SCAPMC28",125,0)
 Q ($G(@SCERR@(0))<1)_U_(SCN'<SCMAXCNT)
"RTN","SCAPMC28",126,0)
 ;
"RTN","SCAPMC28",127,0)
OKDATA() ;check/setup variables
"RTN","SCAPMC28",128,0)
 N SCOK
"RTN","SCAPMC28",129,0)
 S SCOK=1
"RTN","SCAPMC28",130,0)
 S SCMAXCNT=$G(SCMAXCNT,99)
"RTN","SCAPMC28",131,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC28",132,0)
 IF '$D(^SC(+$G(SCCL),0)) D  S SCOK=0
"RTN","SCAPMC28",133,0)
 . S SCPARM("CLINIC")=$G(SCCL,"Undefined")
"RTN","SCAPMC28",134,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC28",135,0)
 ; -- is it a valid TEAM ien passed (Error # 4045101 in DIALOG file)
"RTN","SCAPMC28",136,0)
 Q SCOK
"RTN","SCMCMU3")
0^2^B5899522
"RTN","SCMCMU3",1,0)
SCMCMU3 ;ALB/MJK - Discharge Patient from Clinic ; 1/27/05 9:55am
"RTN","SCMCMU3",2,0)
 ;;5.3;Scheduling;**148,157,346**;AUG 13, 1993
"RTN","SCMCMU3",3,0)
 ;
"RTN","SCMCMU3",4,0)
EN(DFN,SCCLN,SCDATE,SCREA) ; -- main entry point
"RTN","SCMCMU3",5,0)
 N SCENR,SCENR0,SCRET
"RTN","SCMCMU3",6,0)
 S SCENR=+$O(^DPT(DFN,"DE","B",+SCCLN,0))
"RTN","SCMCMU3",7,0)
 ;
"RTN","SCMCMU3",8,0)
 ; -- quit pateint never enrolled in clinic
"RTN","SCMCMU3",9,0)
 IF 'SCENR G ENQ
"RTN","SCMCMU3",10,0)
 ;
"RTN","SCMCMU3",11,0)
 S SCENR0=$G(^DPT(DFN,"DE",SCENR,0))
"RTN","SCMCMU3",12,0)
 ;
"RTN","SCMCMU3",13,0)
 ; -- quit if enrollment is currently inactive
"RTN","SCMCMU3",14,0)
 IF $P(SCENR0,U,2)'="" G ENQ
"RTN","SCMCMU3",15,0)
 ;
"RTN","SCMCMU3",16,0)
 D BEFORE^SCMCEV3(DFN) ;setup before values
"RTN","SCMCMU3",17,0)
 ;
"RTN","SCMCMU3",18,0)
 S SCRET=$$DISCH(DFN,SCCLN,SCDATE,SCENR,SCREA)
"RTN","SCMCMU3",19,0)
 IF SCRET=1 D
"RTN","SCMCMU3",20,0)
 . D AFTER^SCMCEV3(DFN) ;setup after values
"RTN","SCMCMU3",21,0)
 . D INVOKE^SCMCEV3(DFN) ; call event driver
"RTN","SCMCMU3",22,0)
ENQ Q $G(SCRET,$$ERR(3))
"RTN","SCMCMU3",23,0)
 ;
"RTN","SCMCMU3",24,0)
DISCH(DFN,SCCLN,SCDATE,SCENR,SCREA) ; -- discharge from clinic
"RTN","SCMCMU3",25,0)
 ;initialize variables
"RTN","SCMCMU3",26,0)
 N SCDT,SCDT0,SCDAT,SCDAT0,DIE,DA,DR,Y,SCNODE,SCRET,SCARRAY,SCCOUNT
"RTN","SCMCMU3",27,0)
 K ^TMP($J,"SDAMA301")
"RTN","SCMCMU3",28,0)
 ; -- check for future apps
"RTN","SCMCMU3",29,0)
 S SCDT=DT+1
"RTN","SCMCMU3",30,0)
 I $G(SCCLN)'="",$G(DFN)'="" D
"RTN","SCMCMU3",31,0)
 .;setup call to SDAPI to retrieve a single future appt
"RTN","SCMCMU3",32,0)
 .S SCARRAY(1)=SCDT,SCARRAY(2)=SCCLN,SCARRAY(3)="R;I"
"RTN","SCMCMU3",33,0)
 .S SCARRAY(4)=DFN,SCARRAY("FLDS")=4,SCARRAY("MAX")=1
"RTN","SCMCMU3",34,0)
 .S SCCOUNT=$$SDAPI^SDAMA301(.SCARRAY)
"RTN","SCMCMU3",35,0)
 .K ^TMP($J,"SDAMA301")
"RTN","SCMCMU3",36,0)
 ;if a future appointment returned
"RTN","SCMCMU3",37,0)
 I SCCOUNT>0 D
"RTN","SCMCMU3",38,0)
 .S SCRET=2
"RTN","SCMCMU3",39,0)
 ;if no future appointments exist
"RTN","SCMCMU3",40,0)
 I SCCOUNT'>0 D
"RTN","SCMCMU3",41,0)
 .S SCDAT=0
"RTN","SCMCMU3",42,0)
 .F  S SCDAT=$O(^DPT(DFN,"DE",SCENR,1,SCDAT)) Q:'SCDAT  D
"RTN","SCMCMU3",43,0)
 .. S SCDAT0=$G(^DPT(DFN,"DE",SCENR,1,SCDAT,0))
"RTN","SCMCMU3",44,0)
 .. I $P(SCDAT0,U,3)]"" Q
"RTN","SCMCMU3",45,0)
 .. S SCNODE=$NA(^DPT(DFN,"DE",SCENR,1,SCDAT))
"RTN","SCMCMU3",46,0)
 .. D LOCK(SCNODE)
"RTN","SCMCMU3",47,0)
 .. S DA(2)=DFN,DA(1)=SCENR
"RTN","SCMCMU3",48,0)
 .. S DIE="^DPT("_DFN_",""DE"","_SCENR_",1,",DA=SCDAT
"RTN","SCMCMU3",49,0)
 .. S DR="3////"_SCDATE_";4////"_SCREA
"RTN","SCMCMU3",50,0)
 .. D ^DIE
"RTN","SCMCMU3",51,0)
 .. D UNLOCK(SCNODE)
"RTN","SCMCMU3",52,0)
 .. S SCRET=1
"RTN","SCMCMU3",53,0)
 ;
"RTN","SCMCMU3",54,0)
DISCHQ Q $$ERR($G(SCRET,3))
"RTN","SCMCMU3",55,0)
 ;
"RTN","SCMCMU3",56,0)
LOCK(NODE) ; -- lock node
"RTN","SCMCMU3",57,0)
 F  L +@NODE:5 IF $T Q
"RTN","SCMCMU3",58,0)
 Q
"RTN","SCMCMU3",59,0)
 ;
"RTN","SCMCMU3",60,0)
UNLOCK(NODE) ; -- unlock node
"RTN","SCMCMU3",61,0)
 L -@NODE
"RTN","SCMCMU3",62,0)
 Q
"RTN","SCMCMU3",63,0)
 ;
"RTN","SCMCMU3",64,0)
ERR(CODE) ;
"RTN","SCMCMU3",65,0)
 Q $P($TEXT(RET+CODE),";;",2)
"RTN","SCMCMU3",66,0)
 ;
"RTN","SCMCMU3",67,0)
 ;
"RTN","SCMCMU3",68,0)
 ; piece [ return code ^ error text ]
"RTN","SCMCMU3",69,0)
RET ; -- return values  
"RTN","SCMCMU3",70,0)
 ;;1^Patient successfully discharged from clinic
"RTN","SCMCMU3",71,0)
 ;;2^Patient has future appointments in clinic
"RTN","SCMCMU3",72,0)
 ;;3^No active enrollment data for clinic
"RTN","SCMCMU3",73,0)
 ;
"RTN","SCMCMU3",74,0)
TEST ;
"RTN","SCMCMU3",75,0)
 W !!,$$EN(7170643,446,DT,"TEST FROM SCMCMU3")
"RTN","SCMCMU3",76,0)
 Q
"RTN","SCRPU3")
0^3^B27212512
"RTN","SCRPU3",1,0)
SCRPU3 ;ALB/CMM - GENERIC UTILITIES ; 9/26/05 8:50am
"RTN","SCRPU3",2,0)
 ;;5.3;Scheduling;**41,45,52,140,181,177,432,433,346**;AUG 13, 1993
"RTN","SCRPU3",3,0)
 ;
"RTN","SCRPU3",4,0)
ELIG(DFN) ;
"RTN","SCRPU3",5,0)
 ;Gets Primary Eligibility
"RTN","SCRPU3",6,0)
 N PRIM
"RTN","SCRPU3",7,0)
 I '$D(^DPT(DFN,.36)) Q 0
"RTN","SCRPU3",8,0)
 I '$D(^DIC(8,+$P(^DPT(DFN,.36),"^"),0)) Q 0
"RTN","SCRPU3",9,0)
 S PRIM=$P($G(^DIC(8,$P($G(^DPT(DFN,.36)),"^"),0)),"^",9)
"RTN","SCRPU3",10,0)
 ;MAS Primary Eligibility Code
"RTN","SCRPU3",11,0)
 S PRIM=$P($G(^DIC(8.1,PRIM,0)),"^")
"RTN","SCRPU3",12,0)
 ;
"RTN","SCRPU3",13,0)
 S PRIM=$TR(PRIM,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SCRPU3",14,0)
 I PRIM="NON-SERVICE CONNECTED" S PRIM="NSC"
"RTN","SCRPU3",15,0)
 I PRIM["SERVICE CONNECTED" S PRIM=$P(PRIM,"SERVICE CONNECTED")_"SC"_$P(PRIM,"SERVICE CONNECTED",2,999)
"RTN","SCRPU3",16,0)
 I PRIM["LESS THAN" S PRIM=$P(PRIM,"LESS THAN")_"<"_$P(PRIM,"LESS THAN",2,999)
"RTN","SCRPU3",17,0)
 I PRIM[" TO " S PRIM=$P(PRIM," TO ")_"-"_$P(PRIM," TO ",2,999)
"RTN","SCRPU3",18,0)
 I PRIM["%" S PRIM=$TR(PRIM,"%","")
"RTN","SCRPU3",19,0)
 S PRIM=$E(PRIM,1,9)
"RTN","SCRPU3",20,0)
 Q PRIM
"RTN","SCRPU3",21,0)
 ;
"RTN","SCRPU3",22,0)
GETNEXT(DFN,CLN) ;
"RTN","SCRPU3",23,0)
 ;Get next appointment for patient (DFN) at Clinic (CLN)
"RTN","SCRPU3",24,0)
 ;Returning the date in 00/00/0000 format
"RTN","SCRPU3",25,0)
 N NEXT,APPT,FOUND
"RTN","SCRPU3",26,0)
 ;
"RTN","SCRPU3",27,0)
 N SDARRAY,SDCOUNT,SDDATE,SDAPPT,SDSTATUS,%
"RTN","SCRPU3",28,0)
 ; Tell SDAPI that we want only the next appointment based on:
"RTN","SCRPU3",29,0)
 ; Date          SDARRAY(1)=Today's Date;
"RTN","SCRPU3",30,0)
 ; Clinic        SDARRAY(2)=CLN
"RTN","SCRPU3",31,0)
 ; Patient       SDARRAY(4)=DFN
"RTN","SCRPU3",32,0)
 ; Status        SDARRAY(3)="R;I;NS;NSR;NT" 
"RTN","SCRPU3",33,0)
 ;  KEPT/INPATIENT/NOSHOW/NOSHOWRESCHED/NOACTIONTAKEN
"RTN","SCRPU3",34,0)
 ; and that we want to have field 3 (appt status) returned       
"RTN","SCRPU3",35,0)
 ; SDARRAY("FLDS")="3"
"RTN","SCRPU3",36,0)
 ; DATA will be returned in ^TMP($J,"SDAMA301",DFN,CLN,SDDATE)
"RTN","SCRPU3",37,0)
 ;
"RTN","SCRPU3",38,0)
 S FOUND=0,NEXT=""
"RTN","SCRPU3",39,0)
 I $G(CLN)=""!($G(DFN)="") Q NEXT
"RTN","SCRPU3",40,0)
 D NOW^%DTC S SDARRAY(1)=$P(%,".",1)_";"
"RTN","SCRPU3",41,0)
 S SDARRAY(2)=CLN,SDARRAY(3)="R;I;NS;NSR;NT",SDARRAY(4)=DFN,SDARRAY("FLDS")="3",SDARRAY("MAX")=1
"RTN","SCRPU3",42,0)
 S SDCOUNT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SCRPU3",43,0)
 I SDCOUNT>0 S SDDATE="" S SDDATE=$O(^TMP($J,"SDAMA301",DFN,CLN,SDDATE)) D
"RTN","SCRPU3",44,0)
 .S NEXT=$TR($$FMTE^XLFDT(SDDATE,"5DF")," ","0")
"RTN","SCRPU3",45,0)
 I SDCOUNT<0 D  ;do processing for errors
"RTN","SCRPU3",46,0)
 .; None to do in this case -- return null
"RTN","SCRPU3",47,0)
 .Q
"RTN","SCRPU3",48,0)
 ; when finished with all processing, kill SDAPI output array
"RTN","SCRPU3",49,0)
 K ^TMP($J,"SDAMA301")
"RTN","SCRPU3",50,0)
 Q NEXT
"RTN","SCRPU3",51,0)
 ;
"RTN","SCRPU3",52,0)
GETLAST(DFN,CLN) ;
"RTN","SCRPU3",53,0)
 ;Get last appointment for patient (DFN) at Clinic (CLN)
"RTN","SCRPU3",54,0)
 ;Returning the date in 00/00/0000 format
"RTN","SCRPU3",55,0)
 N LAST,APPT,FOUND,STATUS
"RTN","SCRPU3",56,0)
 N SDARRAY,SDCOUNT,SDDATE,SDAPPT,SDSTATUS,%
"RTN","SCRPU3",57,0)
 ; Tell SDAPI that we want only the next appointment based on:
"RTN","SCRPU3",58,0)
 ; Date          SDARRAY(1)=;Today's Date
"RTN","SCRPU3",59,0)
 ; Clinic        SDARRAY(2)=CLN
"RTN","SCRPU3",60,0)
 ; Patient       SDARRAY(4)=DFN
"RTN","SCRPU3",61,0)
 ; Status        SDARRAY(3)="R;I;NT"
"RTN","SCRPU3",62,0)
 ; MAX           SDARRAY("MAX")=-1
"RTN","SCRPU3",63,0)
 ; and that we want to have field 3 (appt status) returned       
"RTN","SCRPU3",64,0)
 ; SDARRAY("FLDS")="3"
"RTN","SCRPU3",65,0)
 ; DATA will be returned in ^TMP($J,"SDAMA301",DFN,CLN,SDDATE)
"RTN","SCRPU3",66,0)
 ;
"RTN","SCRPU3",67,0)
 S FOUND=0,LAST=""
"RTN","SCRPU3",68,0)
 I $G(CLN)=""!($G(DFN)="") Q LAST
"RTN","SCRPU3",69,0)
 D NOW^%DTC S SDARRAY(1)=";"_$P(%,".",1)
"RTN","SCRPU3",70,0)
 S SDARRAY(2)=CLN,SDARRAY(3)="R;I;NT",SDARRAY(4)=DFN,SDARRAY("MAX")=-1
"RTN","SCRPU3",71,0)
 S SDARRAY("FLDS")="3"
"RTN","SCRPU3",72,0)
 S SDCOUNT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SCRPU3",73,0)
 I SDCOUNT>0 S SDDATE="" D
"RTN","SCRPU3",74,0)
 .S SDDATE=$O(^TMP($J,"SDAMA301",DFN,CLN,SDDATE))
"RTN","SCRPU3",75,0)
 .S LAST=$TR($$FMTE^XLFDT(SDDATE,"5DF")," ","0")
"RTN","SCRPU3",76,0)
 I SDCOUNT<0 D  ;do processing for errors
"RTN","SCRPU3",77,0)
 .Q  ; None to do in this case
"RTN","SCRPU3",78,0)
 ; when finished with all processing, kill SDAPI output array
"RTN","SCRPU3",79,0)
 K ^TMP($J,"SDAMA301")
"RTN","SCRPU3",80,0)
 Q LAST
"RTN","SCRPU3",81,0)
 ;
"RTN","SCRPU3",82,0)
PDEVICE() ;
"RTN","SCRPU3",83,0)
 ;Generic Printer Call
"RTN","SCRPU3",84,0)
 N TION,POP
"RTN","SCRPU3",85,0)
 S %ZIS="QN" D ^%ZIS K %ZIS Q:POP!(ION="^") -1
"RTN","SCRPU3",86,0)
 S TION=ION
"RTN","SCRPU3",87,0)
 I $D(IO("Q")) S TION="Q;"_TION
"RTN","SCRPU3",88,0)
 Q TION_"^"_IOST
"RTN","SCRPU3",89,0)
 ;
"RTN","SCRPU3",90,0)
GETTIME() ;
"RTN","SCRPU3",91,0)
 ;Prompt for Queue Time
"RTN","SCRPU3",92,0)
 N X,Y
"RTN","SCRPU3",93,0)
 S DIR(0)="D^::RFE",DIR("A")="Start Time",DIR("B")="NOW"
"RTN","SCRPU3",94,0)
 D ^DIR
"RTN","SCRPU3",95,0)
 I $D(DTOUT)!(X="") S Y=$H
"RTN","SCRPU3",96,0)
 I $D(DUOUT)!($D(DIROUT)) S Y=-1
"RTN","SCRPU3",97,0)
 K DIR,DTOUT,DUOUT,DIROUT
"RTN","SCRPU3",98,0)
 Q Y
"RTN","SCRPU3",99,0)
 ;
"RTN","SCRPU3",100,0)
HOLD(PAGE,TIT,MARG) ;
"RTN","SCRPU3",101,0)
 ;device is home, reached end of page
"RTN","SCRPU3",102,0)
 N X
"RTN","SCRPU3",103,0)
 S MARG=$G(MARG) S:MARG'>80 MARG=80
"RTN","SCRPU3",104,0)
 W !!,"Press Any Key to Continue or '^' to Quit" R X:DTIME
"RTN","SCRPU3",105,0)
 I '$T!(X="^") S STOP=1 Q
"RTN","SCRPU3",106,0)
 D NEWP1(.PAGE,TIT,MARG)
"RTN","SCRPU3",107,0)
 Q
"RTN","SCRPU3",108,0)
 ;
"RTN","SCRPU3",109,0)
NEWP1(PAGE,TITL,MARG) ;
"RTN","SCRPU3",110,0)
 ;new page
"RTN","SCRPU3",111,0)
 ;
"RTN","SCRPU3",112,0)
 S MARG=$G(MARG) S:MARG'>80 MARG=80
"RTN","SCRPU3",113,0)
 D STOPCHK^DGUTL
"RTN","SCRPU3",114,0)
 I $G(STOP) D STOPPED^DGUTL Q
"RTN","SCRPU3",115,0)
 W:PAGE>0 @IOF
"RTN","SCRPU3",116,0)
 S PAGE=PAGE+1
"RTN","SCRPU3",117,0)
 D TITLE(PAGE,TITL,MARG)
"RTN","SCRPU3",118,0)
 Q
"RTN","SCRPU3",119,0)
 ;
"RTN","SCRPU3",120,0)
TITLE(PG,TITL,MARG) ;
"RTN","SCRPU3",121,0)
 N PDATE,SCX,SCI
"RTN","SCRPU3",122,0)
 S MARG=$G(MARG) S:MARG'>80 MARG=80
"RTN","SCRPU3",123,0)
 S PDATE=$$FMTE^XLFDT(DT,"5D")
"RTN","SCRPU3",124,0)
 S SCI=(IOM-$L(TITL)\2) S:SCI<24 SCI=24
"RTN","SCRPU3",125,0)
 S SCX="Printed on: "_PDATE
"RTN","SCRPU3",126,0)
 S $E(SCX,SCI)=TITL
"RTN","SCRPU3",127,0)
 S $E(SCX,(IOM-6-$L(PG)))="Page: "_PG
"RTN","SCRPU3",128,0)
 W SCX,!
"RTN","SCRPU3",129,0)
 Q
"RTN","SCRPU3",130,0)
 ;
"RTN","SCRPU3",131,0)
CLOSE ;close device
"RTN","SCRPU3",132,0)
 D:$E(IOST)'="C" ^%ZISC
"RTN","SCRPU3",133,0)
 Q
"RTN","SCRPU3",134,0)
 ;
"RTN","SCRPU3",135,0)
OPEN ;opens device
"RTN","SCRPU3",136,0)
 IF IOST?1"C-".E D  Q  ;%zis has already been called via $$pdevice
"RTN","SCRPU3",137,0)
 .W @IOF
"RTN","SCRPU3",138,0)
 D ^%ZIS
"RTN","SCRPU3",139,0)
 Q:POP
"RTN","SCRPU3",140,0)
 U IO
"RTN","SCRPU3",141,0)
 Q
"RTN","SCRPU3",142,0)
 ;
"RTN","SCRPU3",143,0)
NODATA(TITL) ;
"RTN","SCRPU3",144,0)
 ;no data to print
"RTN","SCRPU3",145,0)
 ;returns 1
"RTN","SCRPU3",146,0)
 D OPEN
"RTN","SCRPU3",147,0)
 D TITLE(1,TITL)
"RTN","SCRPU3",148,0)
 W !,"No data to report"
"RTN","SCRPU3",149,0)
 D CLOSE
"RTN","SCRPU3",150,0)
 Q 1
"RTN","SCRPU3",151,0)
 ;
"RTN","SCRPU3",152,0)
HELP W:'$D(VAUTNA) !,"ENTER:",!?5,"- A or ALL for all ",VAUTSTR,"s, or"
"RTN","SCRPU3",153,0)
 W:($D(VAUTTN))&(VAUTSTR="TEAM") !?5,"- N or NOT for not assigned to a team or"
"RTN","SCRPU3",154,0)
 W:($D(VAUTPO))&(VAUTSTR="PRACTITIONER") !?5,"- N or NONE or NOT for not assigned to a Practitioner"
"RTN","SCRPU3",155,0)
 W !?5,"- Select individual "_VAUTSTR W:'$D(VAUTPO) " -- limit 20"
"RTN","SCRPU3",156,0)
 W !?5,"Imprecise selections will yield an additional prompt."
"RTN","SCRPU3",157,0)
 I $O(@VAUTVB@(0))]"" W !?5,"- An entry preceeded by a minus [-] sign to remove entry from list."
"RTN","SCRPU3",158,0)
 I $O(@VAUTVB@(0))]"" W !,"NOTE, you have already selected:" S VAJ=0 F VAJ1=0:0 S VAJ=$O(@VAUTVB@(VAJ)) Q:VAJ=""  W !?8,$S(VAUTNI=1:VAJ,1:@VAUTVB@(VAJ))
"RTN","SCRPU3",159,0)
 Q
"RTN","SCRPU3",160,0)
 ;
"RTN","SCRPU3",161,0)
CONV(ORIGA,NEWA) ;
"RTN","SCRPU3",162,0)
 ;ORIGA - original array - name(ien)=data
"RTN","SCRPU3",163,0)
 ;NEWA - new array - name(n)=ien^data
"RTN","SCRPU3",164,0)
 ;
"RTN","SCRPU3",165,0)
 N ENT,CNT
"RTN","SCRPU3",166,0)
 S ENT=0,CNT=0
"RTN","SCRPU3",167,0)
 S NEWA=ORIGA
"RTN","SCRPU3",168,0)
 F  S ENT=$O(ORIGA(ENT)) Q:ENT=""!(ENT'?.N)  D
"RTN","SCRPU3",169,0)
 .S CNT=CNT+1
"RTN","SCRPU3",170,0)
 .S NEWA(CNT)=ENT_"^"_ORIGA(ENT)
"RTN","SCRPU3",171,0)
 Q
"VER")
8.0^22.0
"BLD",5848,6)
^366
**END**
**END**
