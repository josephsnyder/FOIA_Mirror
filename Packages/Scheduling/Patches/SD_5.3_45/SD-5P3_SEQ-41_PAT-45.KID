Released SD*5.3*45 SEQ #41
Extracted from mail message
**KIDS**:SD*5.3*45^

**INSTALL NAME**
SD*5.3*45
"BLD",104,0)
SD*5.3*45^SCHEDULING^0^2960628^n
"BLD",104,1,0)
^^4^4^2960628^
"BLD",104,1,1,0)
This contains fixes related to the PCMM software (distributed as
"BLD",104,1,2,0)
SD*5.3*41).  This should be installed immediately after the installation
"BLD",104,1,3,0)
of SD*5.3*41.  See National Patch Module (NPM) for a description of the
"BLD",104,1,4,0)
contents of this patch.
"BLD",104,4,0)
^9.64PA^44^1
"BLD",104,4,44,0)
44
"BLD",104,4,44,2,0)
^9.641^44.1^2
"BLD",104,4,44,2,44,0)
HOSPITAL LOCATION  (File-top level)
"BLD",104,4,44,2,44,1,0)
^9.6411^16^1
"BLD",104,4,44,2,44,1,16,0)
DEFAULT PROVIDER
"BLD",104,4,44,2,44.1,0)
PROVIDER  (sub-file)
"BLD",104,4,44,2,44.1,1,0)
^9.6411^.01^1
"BLD",104,4,44,2,44.1,1,.01,0)
PROVIDER
"BLD",104,4,44,222)
y^n^p^^^^n
"BLD",104,4,"APDD",44,44)

"BLD",104,4,"APDD",44,44,16)

"BLD",104,4,"APDD",44,44.1)

"BLD",104,4,"APDD",44,44.1,.01)

"BLD",104,4,"B",44,44)

"BLD",104,"KRN",0)
^9.67PA^8994^14
"BLD",104,"KRN",.4,0)
.4
"BLD",104,"KRN",.401,0)
.401
"BLD",104,"KRN",.402,0)
.402
"BLD",104,"KRN",.402,"NM",0)
^9.68A^^
"BLD",104,"KRN",.403,0)
.403
"BLD",104,"KRN",.5,0)
.5
"BLD",104,"KRN",.84,0)
.84
"BLD",104,"KRN",3.6,0)
3.6
"BLD",104,"KRN",9.2,0)
9.2
"BLD",104,"KRN",9.8,0)
9.8
"BLD",104,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",104,"KRN",9.8,"NM",1,0)
SCAPMCU1^^0^B29864871
"BLD",104,"KRN",9.8,"NM",2,0)
SCMCPR1^^0^B4480722
"BLD",104,"KRN",9.8,"NM",3,0)
SCMCTMM^^0^B38685055
"BLD",104,"KRN",9.8,"NM",4,0)
SCMCTPM^^0^B34485262
"BLD",104,"KRN",9.8,"NM",5,0)
SCRPU1^^0^B24690764
"BLD",104,"KRN",9.8,"NM",6,0)
SDNEXT^^0^B18500514
"BLD",104,"KRN",9.8,"NM",7,0)
SCRPU3^^0^B16555872
"BLD",104,"KRN",9.8,"NM",8,0)
SCAPMCU3^^0^B12669936
"BLD",104,"KRN",9.8,"NM",9,0)
SCAPMC18^^0^B6598148
"BLD",104,"KRN",9.8,"NM",10,0)
SD5345EN^^0^B2713617
"BLD",104,"KRN",9.8,"NM","B","SCAPMC18",9)

"BLD",104,"KRN",9.8,"NM","B","SCAPMCU1",1)

"BLD",104,"KRN",9.8,"NM","B","SCAPMCU3",8)

"BLD",104,"KRN",9.8,"NM","B","SCMCPR1",2)

"BLD",104,"KRN",9.8,"NM","B","SCMCTMM",3)

"BLD",104,"KRN",9.8,"NM","B","SCMCTPM",4)

"BLD",104,"KRN",9.8,"NM","B","SCRPU1",5)

"BLD",104,"KRN",9.8,"NM","B","SCRPU3",7)

"BLD",104,"KRN",9.8,"NM","B","SD5345EN",10)

"BLD",104,"KRN",9.8,"NM","B","SDNEXT",6)

"BLD",104,"KRN",19,0)
19
"BLD",104,"KRN",19.1,0)
19.1
"BLD",104,"KRN",101,0)
101
"BLD",104,"KRN",409.61,0)
409.61
"BLD",104,"KRN",8994,0)
8994
"BLD",104,"KRN","B",.4,.4)

"BLD",104,"KRN","B",.401,.401)

"BLD",104,"KRN","B",.402,.402)

"BLD",104,"KRN","B",.403,.403)

"BLD",104,"KRN","B",.5,.5)

"BLD",104,"KRN","B",.84,.84)

"BLD",104,"KRN","B",3.6,3.6)

"BLD",104,"KRN","B",9.2,9.2)

"BLD",104,"KRN","B",9.8,9.8)

"BLD",104,"KRN","B",19,19)

"BLD",104,"KRN","B",19.1,19.1)

"BLD",104,"KRN","B",101,101)

"BLD",104,"KRN","B",409.61,409.61)

"BLD",104,"KRN","B",8994,8994)

"BLD",104,"PRE")
SD5345EN
"BLD",104,"QUES",0)
^9.62^^
"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^n^p^^^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
5.3^SD
"FIA",44,44)
1
"FIA",44,44,16)

"FIA",44,44,2600)

"FIA",44,44.1)
1
"FIA",44,44.1,.01)

"OER",16,0)
16^SD^^M.A.S.^
"OER",16,1,0)
^100.9951PA^2^2
"OER",16,1,1,0)
103
"OER",16,1,1,1,0)
^100.99511PA^1^1
"OER",16,1,1,1,1,0)
101
"OER",16,1,2,0)
645
"OER",16,1,2,1,0)
^100.99511PA^1^1
"OER",16,1,2,1,1,0)
121
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,22,0)
^9.49^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
45^2960628
"PKG",16,22,1,"PAH",1,1,0)
^^4^4^2960628
"PKG",16,22,1,"PAH",1,1,1,0)
This contains fixes related to the PCMM software (distributed as
"PKG",16,22,1,"PAH",1,1,2,0)
SD*5.3*41).  This should be installed immediately after the installation
"PKG",16,22,1,"PAH",1,1,3,0)
of SD*5.3*41.  See National Patch Module (NPM) for a description of the
"PKG",16,22,1,"PAH",1,1,4,0)
contents of this patch.
"PRE")
SD5345EN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","SCAPMC18")
0^9^B6598148
"RTN","SCAPMC18",1,0)
SCAPMC18 ;ALB/REW - Team APIs:ACPTCL ; 5 Jul 1995
"RTN","SCAPMC18",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCAPMC18",3,0)
 ;;1.0
"RTN","SCAPMC18",4,0)
ACPTCL(DFN,SCCL,SCFIELDA,SCACT,SCERR) ;add a patient to a team (pt tm assgn - #404.42
"RTN","SCAPMC18",5,0)
 ; input:
"RTN","SCAPMC18",6,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCAPMC18",7,0)
 ;  SCCL    = pointer to HOSPITAL LOCATION file (#44)
"RTN","SCAPMC18",8,0)
 ;  SCFIELDA= array of additional fields to be added
"RTN","SCAPMC18",9,0)
 ;  SCACT   = date to activate [default=DT]
"RTN","SCAPMC18",10,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC18",11,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC18",12,0)
 ;
"RTN","SCAPMC18",13,0)
 ; Output:
"RTN","SCAPMC18",14,0)
 ;  Returned = ien of enrollment multiple - 0 if none after^new?
"RTN","SCAPMC18",15,0)
 ;  SCERR() = Array of DIALOG file messages(errors).
"RTN","SCAPMC18",16,0)
 ;             Foramt:
"RTN","SCAPMC18",17,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC18",18,0)
 ;               Piece     Description
"RTN","SCAPMC18",19,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC18",20,0)
 N SCPTCL,SCESEQ,SCPARM,SCIEN,SC,SCFLD,SCNEWCL,DIC,X,SCX,DLAYGO
"RTN","SCAPMC18",21,0)
 G:'$$OKDATA APTCLQ ;check/setup variables
"RTN","SCAPMC18",22,0)
 S SCPTCL=$$PTCLACT(DFN,SCCL,SCACT,.SCERR)
"RTN","SCAPMC18",23,0)
 IF SCPTCL G APTCLQ
"RTN","SCAPMC18",24,0)
 ELSE  D
"RTN","SCAPMC18",25,0)
 .S DIC="^DPT("_DFN_",""DE"","
"RTN","SCAPMC18",26,0)
 .S SCX=DIC_"0)"
"RTN","SCAPMC18",27,0)
 .L +@(SCX):5
"RTN","SCAPMC18",28,0)
 .IF '$T D EN^DDIOL("Enrollment being edited") Q
"RTN","SCAPMC18",29,0)
 .S DIC(0)="L"
"RTN","SCAPMC18",30,0)
 .S DIC("P")="2.001P"
"RTN","SCAPMC18",31,0)
 .S DA(1)=DFN
"RTN","SCAPMC18",32,0)
 .S X=SCCL
"RTN","SCAPMC18",33,0)
 .S DLAYGO=2
"RTN","SCAPMC18",34,0)
 .D FILE^DICN
"RTN","SCAPMC18",35,0)
 .IF (Y'>0) L -@(SCX)
"RTN","SCAPMC18",36,0)
 .S DIC=DIC_+Y_",1,"
"RTN","SCAPMC18",37,0)
 .S DIC("P")="2.011D"
"RTN","SCAPMC18",38,0)
 .S DA(1)=+Y
"RTN","SCAPMC18",39,0)
 .S DA(2)=DFN
"RTN","SCAPMC18",40,0)
 .S X=SCACT
"RTN","SCAPMC18",41,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC18",42,0)
 ..K DIC("DR")
"RTN","SCAPMC18",43,0)
 ..S SCFLD=0
"RTN","SCAPMC18",44,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC18",45,0)
 ...S:'$D(DIC("DR")) DIC("DR")=SCFLD_"////"_@SCFIELDA@(SCFLD)
"RTN","SCAPMC18",46,0)
 ...S:$D(DIC("DR")) DIC("DR")=DIC("DR")_";"_SCFLD_"////"_@SCFIELDA@(SCFLD)
"RTN","SCAPMC18",47,0)
 .D FILE^DICN
"RTN","SCAPMC18",48,0)
 .S SCPTCL=$P(Y,U,2)
"RTN","SCAPMC18",49,0)
 .S SCNEWCL=$P(Y,U,3)
"RTN","SCAPMC18",50,0)
 .S SCX=DIC_"0)"
"RTN","SCAPMC18",51,0)
 .L -@(SCX)
"RTN","SCAPMC18",52,0)
APTCLQ Q +$G(SCPTCL)_U_+$G(SCNEWCL)
"RTN","SCAPMC18",53,0)
 ;
"RTN","SCAPMC18",54,0)
PTCLACT(DFN,SCCL,SCDT,SCERR) ;what is patient/clinic enrollment date on a given date-time? Return date or 0
"RTN","SCAPMC18",55,0)
 N SCDATES,SCCLLST,SCOK,SCDATES
"RTN","SCAPMC18",56,0)
 S SCOK=0
"RTN","SCAPMC18",57,0)
 S (SCDATES("BEGIN"),SCDATES("END"))=SCDT
"RTN","SCAPMC18",58,0)
 IF $$CLPT^SCAPMC(DFN,"SCDATES","","SCCLLST",.SCERR) S:$D(SCCLLST("SCCL",SCCL)) SCOK=$O(SCCLLST("SCCL",SCCL,0))
"RTN","SCAPMC18",59,0)
 Q SCOK
"RTN","SCAPMC18",60,0)
 ;
"RTN","SCAPMC18",61,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC18",62,0)
 N SCOK
"RTN","SCAPMC18",63,0)
 S SCOK=1
"RTN","SCAPMC18",64,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC18",65,0)
 IF +$G(SCCL)'=$G(SCCL) D  S SCOK=0
"RTN","SCAPMC18",66,0)
 . S SCPARM("CLINIC")=$G(SCCL,"Undefined")
"RTN","SCAPMC18",67,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC18",68,0)
 IF '$D(^SC(+$G(SCCL),0)) D  S SCOK=0
"RTN","SCAPMC18",69,0)
 . S SCPARM("CLINIC")=$G(SCCL,"Undefined")
"RTN","SCAPMC18",70,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC18",71,0)
 IF '$D(^DPT(DFN,0)) D  S SCOK=0
"RTN","SCAPMC18",72,0)
 . S SCPARM("PATIENT")=DFN
"RTN","SCAPMC18",73,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC18",74,0)
 S:'$G(SCACT) SCACT=DT
"RTN","SCAPMC18",75,0)
 Q SCOK
"RTN","SCAPMCU1")
0^1^B29864871
"RTN","SCAPMCU1",1,0)
SCAPMCU1 ;ALB/REW - TEAM API UTILITIES ; 30 Jun 95
"RTN","SCAPMCU1",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCAPMCU1",3,0)
 ;;1.0
"RTN","SCAPMCU1",4,0)
INIT(SCOK) ; setup date array &  error arrays if none passed in
"RTN","SCAPMCU1",5,0)
 ;  VARIABLES SET:
"RTN","SCAPMCU1",6,0)
 ;     SCOK - SET TO 0 IF ERROR
"RTN","SCAPMCU1",7,0)
 ;
"RTN","SCAPMCU1",8,0)
 ;  Makes sure the following are defined:
"RTN","SCAPMCU1",9,0)
 ;   scbegin,scend,scincl,@scdates('begin'),@scdates@('end'),@scdates@('incl') - defaults are today & inclusive
"RTN","SCAPMCU1",10,0)
 ;
"RTN","SCAPMCU1",11,0)
 ;    Note: you should NEW the above just before making this call
"RTN","SCAPMCU1",12,0)
 ;                     ---
"RTN","SCAPMCU1",13,0)
 S (SCN,SCESEQ,SCLSEQ)=0
"RTN","SCAPMCU1",14,0)
 IF '$L($G(SCERR)) K ^TMP("SCERR",$J) S SCERR="^TMP(""SCERR"",$J)"
"RTN","SCAPMCU1",15,0)
 IF '$L($G(SCLIST)) S SCLIST="^TMP(""SC TMP LIST"",$J)" K ^TMP("SC TMP LIST",$J)
"RTN","SCAPMCU1",16,0)
 IF (SCERR="SCERR")!(SCERR="SCLIST")!((SCERR'?1A1.7AN)&(SCERR'?1"^"1A.20E)) D  S SCOK=0
"RTN","SCAPMCU1",17,0)
 . S SCPARM("ERROR ARRAY")=$G(SCERR,"Undefined")
"RTN","SCAPMCU1",18,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",19,0)
 IF SCLIST="SCERR"!(SCLIST="SCLIST")!((SCLIST'?1A1.7AN.1"(".60E)&(SCLIST'?1"^"1A1.7AN.1"(".60E)) S SCOK=0 D  S SCOK=0
"RTN","SCAPMCU1",20,0)
 . S SCPARM("OUTPUT ARRAY")=$G(SCLIST,"Undefined")
"RTN","SCAPMCU1",21,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",22,0)
 S:'$D(SCDATES)!($G(SCDATES)="") SCDATES="SCDTS"
"RTN","SCAPMCU1",23,0)
 S SCBEGIN=$G(SCDATES("BEGIN"),DT)
"RTN","SCAPMCU1",24,0)
 S SCEND=$G(SCDATES("END"),DT)
"RTN","SCAPMCU1",25,0)
 S SCINCL=$G(SCDATES("INCL"),1)
"RTN","SCAPMCU1",26,0)
 S (SCN,SCESEQ,SCLSEQ)=0
"RTN","SCAPMCU1",27,0)
 S:'$D(@SCDATES@("BEGIN")) @SCDATES@("BEGIN")=SCBEGIN
"RTN","SCAPMCU1",28,0)
 S:'$D(@SCDATES@("END")) @SCDATES@("END")=SCEND
"RTN","SCAPMCU1",29,0)
 S:'$D(@SCDATES@("INCL")) @SCDATES@("INCL")=SCINCL
"RTN","SCAPMCU1",30,0)
 Q
"RTN","SCAPMCU1",31,0)
 ;
"RTN","SCAPMCU1",32,0)
PCPOSCNT(SCTP,DATE,PCONLY) ;this is a more efficient count of PC patients assigned to position
"RTN","SCAPMCU1",33,0)
 ; Input: SCTP - ien to 404.57
"RTN","SCAPMCU1",34,0)
 ;        DATE - date of concern, default=DT
"RTN","SCAPMCU1",35,0)
 ;        PCONLY - 1= must be pc, 0=all assignments 1=DEFAULT
"RTN","SCAPMCU1",36,0)
 ;returns count of patient assignments or -1 if error
"RTN","SCAPMCU1",37,0)
 N SCPTPA,SCCNT
"RTN","SCAPMCU1",38,0)
 Q:'$G(SCTP) -1
"RTN","SCAPMCU1",39,0)
 S DATE=$G(DATE,DT)
"RTN","SCAPMCU1",40,0)
 S:'$L($G(PCONLY)) PCONLY=1
"RTN","SCAPMCU1",41,0)
 S (SCPTPA,SCCNT)=0
"RTN","SCAPMCU1",42,0)
 F  S SCPTPA=$O(^SCPT(404.43,"APTPA",SCTP,SCPTPA)) Q:'SCPTPA  D
"RTN","SCAPMCU1",43,0)
 .S HISTIEN=0
"RTN","SCAPMCU1",44,0)
 .F  S HISTIEN=$O(^SCPT(404.43,"APTPA",SCTP,SCPTPA,HISTIEN)) Q:'HISTIEN  D
"RTN","SCAPMCU1",45,0)
 ..S SCNODE=$G(^SCPT(404.43,HISTIEN,0))
"RTN","SCAPMCU1",46,0)
 ..Q:$P(SCNODE,U,4)&($P(SCNODE,U,4)<DATE)
"RTN","SCAPMCU1",47,0)
 ..Q:$P(SCNODE,U,3)>DATE
"RTN","SCAPMCU1",48,0)
 ..Q:PCONLY&('$P(SCNODE,U,5))  ;pc role is not 1 or 2
"RTN","SCAPMCU1",49,0)
 ..S SCCNT=SCCNT+1
"RTN","SCAPMCU1",50,0)
 Q SCCNT
"RTN","SCAPMCU1",51,0)
 ;
"RTN","SCAPMCU1",52,0)
TEAMCNT(SCTM,DATE) ;this is a more efficient version of the count
"RTN","SCAPMCU1",53,0)
 N DFN,SCCNT,SCNODE,HISTIEN
"RTN","SCAPMCU1",54,0)
 Q:'$G(SCTM) 0
"RTN","SCAPMCU1",55,0)
 S DATE=$G(DATE,DT)
"RTN","SCAPMCU1",56,0)
 S (DFN,SCCNT)=0
"RTN","SCAPMCU1",57,0)
 F  S DFN=$O(^SCPT(404.42,"ATMPT",SCTM,DFN)) Q:'DFN  D
"RTN","SCAPMCU1",58,0)
 .S HISTIEN=0
"RTN","SCAPMCU1",59,0)
 .F  S HISTIEN=$O(^SCPT(404.42,"ATMPT",SCTM,DFN,HISTIEN)) Q:'HISTIEN  D
"RTN","SCAPMCU1",60,0)
 ..S SCNODE=$G(^SCPT(404.42,HISTIEN,0))
"RTN","SCAPMCU1",61,0)
 ..Q:$P(SCNODE,U,9)&($P(SCNODE,U,9)<DATE)
"RTN","SCAPMCU1",62,0)
 ..Q:$P(SCNODE,U,2)>DATE
"RTN","SCAPMCU1",63,0)
 ..S SCCNT=SCCNT+1
"RTN","SCAPMCU1",64,0)
 Q SCCNT
"RTN","SCAPMCU1",65,0)
 ;
"RTN","SCAPMCU1",66,0)
TEAMCNT2(SCTM,DATE) ;this is the count of patients assigned to the team on a date
"RTN","SCAPMCU1",67,0)
 ; Input: SCTM - ien to 404.51
"RTN","SCAPMCU1",68,0)
 ;        DATE - date of concern, default=DT
"RTN","SCAPMCU1",69,0)
 N SCX,SCDATES,SCTEAMS,SCERR,X
"RTN","SCAPMCU1",70,0)
 S SCDATES("BEGIN")=$G(DATE,DT)
"RTN","SCAPMCU1",71,0)
 S SCDATES("END")=SCDATES("BEGIN")
"RTN","SCAPMCU1",72,0)
 S SCX=$$PTTM^SCAPMC(SCTM,"SCDATES","^TMP(""SCTEAMS"",$J,""CNT"")","SCERRX")
"RTN","SCAPMCU1",73,0)
 IF 'SCX S X=-SCX
"RTN","SCAPMCU1",74,0)
 ELSE  D
"RTN","SCAPMCU1",75,0)
 .S DFN=0
"RTN","SCAPMCU1",76,0)
 .F X=0:1 S DFN=$O(^TMP("SCTEAMS",$J,"CNT","SCPTA",DFN)) Q:'DFN
"RTN","SCAPMCU1",77,0)
 K ^TMP("SCTEAMS",$J,"CNT")
"RTN","SCAPMCU1",78,0)
 Q X
"RTN","SCAPMCU1",79,0)
ACTHISTB(FILE,IEN) ;boolean active function
"RTN","SCAPMCU1",80,0)
 ;MOVED TO SCAPMCU2
"RTN","SCAPMCU1",81,0)
 Q $$ACTHISTB^SCAPMCU2(.FILE,.IEN)
"RTN","SCAPMCU1",82,0)
ACTHIST(FILE,IEN,SCDATES,SCERR) ;is entry active for a time period?
"RTN","SCAPMCU1",83,0)
 ;MOVED TO SCAPMCU2
"RTN","SCAPMCU1",84,0)
 Q $$ACTHIST^SCAPMCU2(.FILE,.IEN,.SCDATES,.SCERR)
"RTN","SCAPMCU1",85,0)
 ;
"RTN","SCAPMCU1",86,0)
LASTDATE(FILE,IEN) ;gets last date for team or position from 404.52,404.58,404.59 - uses DATES function below
"RTN","SCAPMCU1",87,0)
 ; Input Parameters:
"RTN","SCAPMCU1",88,0)
 ;    File = either 404.52 or 404.58 or 404.59
"RTN","SCAPMCU1",89,0)
 ;    IEN  = pointer to team(404.51) or team position(404.57)
"RTN","SCAPMCU1",90,0)
 ; Returned:
"RTN","SCAPMCU1",91,0)
 ;  -1 if error,o/w latest date defined 0=no historical dates
"RTN","SCAPMCU1",92,0)
 N SCX
"RTN","SCAPMCU1",93,0)
 S SCX=$$DATES(.FILE,.IEN,3990101) ; gets dates as of 1/1/2999
"RTN","SCAPMCU1",94,0)
 Q $S($P(SCX,U,1)<0:-1,$P(SCX,U,3):$P(SCX,U,3),1:+$P(SCX,U,2))
"RTN","SCAPMCU1",95,0)
 ;
"RTN","SCAPMCU1",96,0)
DATES(FILE,IEN,DATE) ;used by files 404.52, 404.58 & 404.59 to return latest activation date & inactivation date for a practitioner or team or team position for a given date 
"RTN","SCAPMCU1",97,0)
 ; Input Parameters:
"RTN","SCAPMCU1",98,0)
 ;    File = either 404.52 or 404.58 or 404.59
"RTN","SCAPMCU1",99,0)
 ;    IEN  = pointer to team(404.51) or team position(404.57)
"RTN","SCAPMCU1",100,0)
 ;    DATE = default=DT
"RTN","SCAPMCU1",101,0)
 ;  Returned:
"RTN","SCAPMCU1",102,0)
 ;  status^actdate^inactdate^scien^first actdate? [1=yes/null=no]
"RTN","SCAPMCU1",103,0)
ST N ROOT,EFFDT,STATUS,ACTDT,INACTDT,X,FUTURE,PREVDT,SCTODAY,PREVST,SCSTAT,SCIEN,SCLAST
"RTN","SCAPMCU1",104,0)
 S:'$G(DATE) DATE=DT
"RTN","SCAPMCU1",105,0)
 S STATUS=-1,SCTODAY=0
"RTN","SCAPMCU1",106,0)
 S SCSTAT=1
"RTN","SCAPMCU1",107,0)
 G:('$G(FILE))!("^404.52^404.58^404.59^"'[$G(FILE))!('$G(IEN)) QTDATES
"RTN","SCAPMCU1",108,0)
 S ROOT="^SCTM("_FILE_",""AIDT"",IEN,SCSTAT"
"RTN","SCAPMCU1",109,0)
 S EFFDT=-DATE
"RTN","SCAPMCU1",110,0)
 S X=ROOT_")"
"RTN","SCAPMCU1",111,0)
 ;if there is an active x-ref
"RTN","SCAPMCU1",112,0)
 IF $D(@X) D
"RTN","SCAPMCU1",113,0)
 .;if today is an activation date
"RTN","SCAPMCU1",114,0)
 .IF $D(@X@(EFFDT)) S ACTDT=-EFFDT
"RTN","SCAPMCU1",115,0)
 .;if today is not an activation date get previous one
"RTN","SCAPMCU1",116,0)
 .ELSE  D
"RTN","SCAPMCU1",117,0)
 ..S ACTDT=-$O(@X@(EFFDT))
"RTN","SCAPMCU1",118,0)
 .;if no activation in past get one in future
"RTN","SCAPMCU1",119,0)
 .S:'$G(ACTDT) ACTDT=-$O(@X@(EFFDT),-1),FUTURE=1
"RTN","SCAPMCU1",120,0)
 .S SCSTAT=0
"RTN","SCAPMCU1",121,0)
 .S INACTDT=$O(@X@(-(ACTDT-.000001)),-1),INACTDT=$S(INACTDT:-INACTDT,1:INACTDT)
"RTN","SCAPMCU1",122,0)
 .S STATUS=$$DTCHK^SCAPU1(DATE,DATE,0,ACTDT,INACTDT)
"RTN","SCAPMCU1",123,0)
 .S SCSTAT=STATUS
"RTN","SCAPMCU1",124,0)
 .S X=ROOT_","_$S(SCSTAT:-ACTDT,1:-INACTDT)_")"
"RTN","SCAPMCU1",125,0)
 .S SCIEN=$O(@X@(0))
"RTN","SCAPMCU1",126,0)
 ELSE  D
"RTN","SCAPMCU1",127,0)
 .S STATUS=0
"RTN","SCAPMCU1",128,0)
QTDATES Q STATUS_U_$G(ACTDT)_U_$G(INACTDT)_U_$G(SCIEN)_U_$G(FUTURE)
"RTN","SCAPMCU1",129,0)
 ;
"RTN","SCAPMCU1",130,0)
ERR(SEQ,ERNUM,PARMS,OUTPUT,SCER) ;-- process errors
"RTN","SCAPMCU1",131,0)
 ;if no dialog entry 4040000 will be processed
"RTN","SCAPMCU1",132,0)
 S ERNUM=$G(ERNUM,4040000)
"RTN","SCAPMCU1",133,0)
 S:'$$GET1^DIQ(.84,$G(ERNUM)_",",.01) ERNUM=4040000
"RTN","SCAPMCU1",134,0)
 IF SCER]"" D
"RTN","SCAPMCU1",135,0)
 . S SEQ=$G(SEQ,0)+1
"RTN","SCAPMCU1",136,0)
 . S SCER(SEQ)=ERNUM
"RTN","SCAPMCU1",137,0)
 . S @SCER@(0)=$G(@SCER@(0))+1
"RTN","SCAPMCU1",138,0)
 .D BLD^DIALOG(.ERNUM,.PARMS,.OUTPUT,.SCER)
"RTN","SCAPMCU1",139,0)
 Q
"RTN","SCAPMCU1",140,0)
 ;
"RTN","SCAPMCU1",141,0)
OKTMPOS(TEAM,POSITION,DATE) ;validate legitimate position in a team for a dt
"RTN","SCAPMCU1",142,0)
 ; used in screen for pc practitioner position of patient team assngt
"RTN","SCAPMCU1",143,0)
 ;
"RTN","SCAPMCU1",144,0)
 ; TEAM - ien of team file
"RTN","SCAPMCU1",145,0)
 ; POSITION - ien of team position file
"RTN","SCAPMCU1",146,0)
 ; DATE     - date of interest
"RTN","SCAPMCU1",147,0)
 ; return 1 if ok, 0 ow
"RTN","SCAPMCU1",148,0)
 ;
"RTN","SCAPMCU1",149,0)
CHK ;
"RTN","SCAPMCU1",150,0)
 N SCTP,SCOK,SCPOS0
"RTN","SCAPMCU1",151,0)
 S SCOK=0
"RTN","SCAPMCU1",152,0)
 S:'$L($G(SCERR)) SCERR="^TMP(""SCERR"",$J)"
"RTN","SCAPMCU1",153,0)
 IF '$D(^SCTM(404.51,+$G(TEAM),0)) D  G QTOKTP
"RTN","SCAPMCU1",154,0)
 . S SCPARM("TEAM")=$G(TEAM,"Undefined")
"RTN","SCAPMCU1",155,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",156,0)
 IF '$D(^SCTM(404.57,+$G(POSITION),0)) D  G QTOKTP
"RTN","SCAPMCU1",157,0)
 . S SCPARM("POSITION")=$G(POSITION,"Undefined")
"RTN","SCAPMCU1",158,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",159,0)
 IF '$G(DATE) D  G QTOKTP
"RTN","SCAPMCU1",160,0)
 . S SCPARM("DATE")=$G(DATE,"Undefined")
"RTN","SCAPMCU1",161,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",162,0)
 S SCPOS0=$G(^SCTM(404.57,POSITION,0))
"RTN","SCAPMCU1",163,0)
 ;if position not linked to team
"RTN","SCAPMCU1",164,0)
 G QTOKTP:$P(SCPOS0,U,2)'=TEAM
"RTN","SCAPMCU1",165,0)
 ;if not active position
"RTN","SCAPMCU1",166,0)
 G QTOKTP:'$$DATES(404.59,POSITION,DATE)
"RTN","SCAPMCU1",167,0)
 S SCOK=1
"RTN","SCAPMCU1",168,0)
QTOKTP Q SCOK
"RTN","SCAPMCU1",169,0)
RSNDICS(EVCODE) ; -- called by input transform and screen logic for type of reason
"RTN","SCAPMCU1",170,0)
 ; Input: EVCODE = event code (e.g. ZM1)
"RTN","SCAPMCU1",171,0)
 ;  Used to check for fields that point to Scheduling Reason File
"RTN","SCAPMCU1",172,0)
 ;    Piece = Piece number of zero node of 
"RTN","SCAPMCU1",173,0)
 Q $P(^SD(403.43,$P(^(0),U,2),0),U,1)=EVCODE
"RTN","SCAPMCU1",174,0)
 ;
"RTN","SCAPMCU1",175,0)
OKPREC(TEAM) ; - called by screen logic for preceptor position file (#.1) of team position (#404.57) file
"RTN","SCAPMCU1",176,0)
 ;  Input; TEAM = Pointer to team file (#404.51) for team position with preceptor
"RTN","SCAPMCU1",177,0)
 ; requires position being assigned to be a possible preceptor position
"RTN","SCAPMCU1",178,0)
 ;  AND that position is from the same team as the supervised position
"RTN","SCAPMCU1",179,0)
 Q ($P(^SCTM(404.57,Y,0),U,12))&($P(^SCTM(404.57,Y,0),U,2)=TEAM)
"RTN","SCAPMCU3")
0^8^B12669936
"RTN","SCAPMCU3",1,0)
SCAPMCU3 ;MJK/ALB - AUTOLINK API ; 27 FEB 96
"RTN","SCAPMCU3",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCAPMCU3",3,0)
 ;
"RTN","SCAPMCU3",4,0)
GETREC(SCDATA,SCTEAM) ; -- get team record with autolink data
"RTN","SCAPMCU3",5,0)
 ; input  :    SCTEAM := ien of team
"RTN","SCAPMCU3",6,0)
 ; output : SCDATA is the return array
"RTN","SCAPMCU3",7,0)
 ;          SCDATA(0) := 0th node of Team
"RTN","SCAPMCU3",8,0)
 ;             (1..n) := autolink name ^ autolink type ^ ien of entity
"RTN","SCAPMCU3",9,0)
 ;
"RTN","SCAPMCU3",10,0)
 N SC,X
"RTN","SCAPMCU3",11,0)
 ; -- get 0th node of team
"RTN","SCAPMCU3",12,0)
 S X=$$GETEAM(SCTEAM)
"RTN","SCAPMCU3",13,0)
 ; -- add to return array
"RTN","SCAPMCU3",14,0)
 D SET(X,0,.SCDATA)
"RTN","SCAPMCU3",15,0)
 ; -- find all autolinks for team
"RTN","SCAPMCU3",16,0)
 D SCAN(SCTEAM,.SC)
"RTN","SCAPMCU3",17,0)
 ; -- build autolink string and add to return array
"RTN","SCAPMCU3",18,0)
 D BUILD(.SC,.SCDATA)
"RTN","SCAPMCU3",19,0)
 Q
"RTN","SCAPMCU3",20,0)
 ;
"RTN","SCAPMCU3",21,0)
BUILD(SC,SCDATA) ; -- build string to send and add to return array
"RTN","SCAPMCU3",22,0)
 N SCLINK,SCINC,X,SCGLB,SCTYPE
"RTN","SCAPMCU3",23,0)
 S SCINC=1
"RTN","SCAPMCU3",24,0)
 S SCLINK=""
"RTN","SCAPMCU3",25,0)
 F  S SCLINK=$O(SC(SCLINK)) Q:SCLINK=""  D
"RTN","SCAPMCU3",26,0)
 . S X=SCLINK
"RTN","SCAPMCU3",27,0)
 . IF X["DIC(42," S SCGLB="^DIC(42)",SCTYPE="WARD"
"RTN","SCAPMCU3",28,0)
 . IF X["DIC(45.7," S SCGLB="^DIC(45.7)",SCTYPE="SPECIALTY"
"RTN","SCAPMCU3",29,0)
 . IF X["VA(200," S SCGLB="^VA(200)",SCTYPE="PRACTITIONER"
"RTN","SCAPMCU3",30,0)
 . IF X["DG(405.4," S SCGLB="^DG(405.4)",SCTYPE="ROOM"
"RTN","SCAPMCU3",31,0)
 . IF X["SC(" S SCGLB="^SC",SCTYPE="CLINIC"
"RTN","SCAPMCU3",32,0)
 . ; - add data to return array
"RTN","SCAPMCU3",33,0)
 . IF $D(@SCGLB@(+SCLINK,0)) D SET($P(^(0),U)_U_SCTYPE_U_+SCLINK,.SCINC,.SCDATA)
"RTN","SCAPMCU3",34,0)
 Q
"RTN","SCAPMCU3",35,0)
 ;
"RTN","SCAPMCU3",36,0)
SET(X,INC,SCDATA) ; -- set value in return array
"RTN","SCAPMCU3",37,0)
 S INC=$G(INC)+1,SCDATA(INC)=X
"RTN","SCAPMCU3",38,0)
 Q
"RTN","SCAPMCU3",39,0)
 ;
"RTN","SCAPMCU3",40,0)
SETREC(SCOK,SCTEAM,SC) ; -- add/edit autolink data to Team record
"RTN","SCAPMCU3",41,0)
 ; input  :    SCTEAM := ien of team
"RTN","SCAPMCU3",42,0)
 ; output : SC is the input array
"RTN","SCAPMCU3",43,0)
 ;           SC(1..n) := autolink name ^ autolink type ^ ien of entity
"RTN","SCAPMCU3",44,0)
 ;
"RTN","SCAPMCU3",45,0)
 N SCTYPE,SCROOT,SCGLB,SCLINK,SCLINKI,SCI,SCOLD,SCNEW
"RTN","SCAPMCU3",46,0)
 ; -- build array of current autolink assignments
"RTN","SCAPMCU3",47,0)
 D SCAN(SCTEAM,.SCOLD)
"RTN","SCAPMCU3",48,0)
 ;
"RTN","SCAPMCU3",49,0)
 ; -- compare current with input  and add autolinks if in
"RTN","SCAPMCU3",50,0)
 ;    input array but not in current array
"RTN","SCAPMCU3",51,0)
 S SCI=0 F  S SCI=$O(SC(SCI)) Q:'SCI  S SCX=SC(SCI) D
"RTN","SCAPMCU3",52,0)
 . S SCTYPE=$P(SCX,U,2)
"RTN","SCAPMCU3",53,0)
 . D ROOT(SCTYPE,.SCROOT,.SCGLB)
"RTN","SCAPMCU3",54,0)
 . S SCLINK=+$P(SCX,U,3)_";"_SCROOT
"RTN","SCAPMCU3",55,0)
 . S SCNEW(SCLINK)=""
"RTN","SCAPMCU3",56,0)
 . IF '$D(SCOLD(SCLINK)),SCGLB]"",$D(@SCGLB@(+SCLINK,0)) D ADD(SCTEAM,SCLINK)
"RTN","SCAPMCU3",57,0)
 ;
"RTN","SCAPMCU3",58,0)
 ; -- compare current with input and delete autolinks if not
"RTN","SCAPMCU3",59,0)
 ;    in input array but in current array
"RTN","SCAPMCU3",60,0)
 S SCLINK=""
"RTN","SCAPMCU3",61,0)
 F  S SCLINK=$O(SCOLD(SCLINK)) Q:'SCLINK  IF '$D(SCNEW(SCLINK)) D
"RTN","SCAPMCU3",62,0)
 . S SCLINKI=+SCOLD(SCLINK)
"RTN","SCAPMCU3",63,0)
 . IF SCLINKI D DELETE(SCLINKI)
"RTN","SCAPMCU3",64,0)
 S SCOK=1
"RTN","SCAPMCU3",65,0)
 Q
"RTN","SCAPMCU3",66,0)
 ;
"RTN","SCAPMCU3",67,0)
ADD(SCTEAM,SCLINK) ; -- add an autolink to a Team
"RTN","SCAPMCU3",68,0)
 N DIC,DD,DO,DLAYGO
"RTN","SCAPMCU3",69,0)
 S DIC="^SCTM(404.56,",DLAYGO=404.56,DIC(0)="L",X=SCTEAM,DIC("DR")=".02////^S X=SCLINK"
"RTN","SCAPMCU3",70,0)
 D FILE^DICN
"RTN","SCAPMCU3",71,0)
 Q
"RTN","SCAPMCU3",72,0)
 ;
"RTN","SCAPMCU3",73,0)
DELETE(SCLINKI) ; -- delete an autolink from a Team
"RTN","SCAPMCU3",74,0)
 N DIK,DA
"RTN","SCAPMCU3",75,0)
 IF $D(^SCTM(404.56,SCLINKI,0)) D
"RTN","SCAPMCU3",76,0)
 . S DIK="^SCTM(404.56,",DA=SCLINKI D ^DIK
"RTN","SCAPMCU3",77,0)
 Q
"RTN","SCAPMCU3",78,0)
 ;
"RTN","SCAPMCU3",79,0)
GETEAM(SCTEAM) ; -- retrieve Team demographics
"RTN","SCAPMCU3",80,0)
 Q $G(^SCTM(404.51,+$G(SCTEAM),0))
"RTN","SCAPMCU3",81,0)
 ;
"RTN","SCAPMCU3",82,0)
SCAN(SCTEAM,SC) ; -- build an array of current autolink assignments
"RTN","SCAPMCU3",83,0)
 N SCLINK
"RTN","SCAPMCU3",84,0)
 S SCLINK=""
"RTN","SCAPMCU3",85,0)
 F  S SCLINK=$O(^SCTM(404.56,"APRIMARY",+$G(SCTEAM),SCLINK)) Q:SCLINK=""  S SC(SCLINK)=+$O(^(SCLINK,0))
"RTN","SCAPMCU3",86,0)
 Q
"RTN","SCAPMCU3",87,0)
 ;
"RTN","SCAPMCU3",88,0)
ROOT(SCTYPE,SCROOT,SCGLB) ; -- determine global root of autolink type
"RTN","SCAPMCU3",89,0)
 S (SCROOT,SCGLB)=""
"RTN","SCAPMCU3",90,0)
 IF SCTYPE="WARD" S SCROOT="DIC(42,",SCGLB="^DIC(42)"
"RTN","SCAPMCU3",91,0)
 IF SCTYPE="SPECIALTY" S SCROOT="DIC(45.7,",SCGLB="^DIC(45.7)"
"RTN","SCAPMCU3",92,0)
 IF SCTYPE="PRACTITIONER" S SCROOT="VA(200,",SCGLB="^VA(200)"
"RTN","SCAPMCU3",93,0)
 IF SCTYPE="ROOM" S SCROOT="DG(405.4,",SCGLB="^DG(405.4)"
"RTN","SCAPMCU3",94,0)
 IF SCTYPE="CLINIC" S SCROOT="SC(",SCGLB="^SC"
"RTN","SCAPMCU3",95,0)
 Q
"RTN","SCAPMCU3",96,0)
 ;
"RTN","SCAPMCU3",97,0)
GETLINK(SC,SCTYPE,SCIEN) ; -- get autolink entity data
"RTN","SCAPMCU3",98,0)
 ;  input:  SCTYPE   := type of autolink (WARD, SPECIALTY, ectc.)
"RTN","SCAPMCU3",99,0)
 ;          SCIEN    := ien of entity
"RTN","SCAPMCU3",100,0)
 ; output:  SC(1..n) := list of Team names autolinked to entity
"RTN","SCAPMCU3",101,0)
 ;                    
"RTN","SCAPMCU3",102,0)
 ;
"RTN","SCAPMCU3",103,0)
 N SCTEAM,SCROOT,SCGLB,SCINC,SCLINK
"RTN","SCAPMCU3",104,0)
 ; -- deterine global root for autolink entity
"RTN","SCAPMCU3",105,0)
 D ROOT(SCTYPE,.SCROOT,.SCGLB)
"RTN","SCAPMCU3",106,0)
 ; -- set variable pointer value for autolink entity
"RTN","SCAPMCU3",107,0)
 S SCLINK=+SCIEN_";"_$G(SCROOT)
"RTN","SCAPMCU3",108,0)
 ; -- find Teams with autolinks to this entity
"RTN","SCAPMCU3",109,0)
 S (SCINC,SCTEAM)=0
"RTN","SCAPMCU3",110,0)
 IF $O(^SCTM(404.56,"AC",SCLINK,SCTEAM)) D
"RTN","SCAPMCU3",111,0)
 . F  S SCTEAM=$O(^SCTM(404.56,"AC",SCLINK,SCTEAM)) Q:'SCTEAM  D
"RTN","SCAPMCU3",112,0)
 . . S SCINC=SCINC+1
"RTN","SCAPMCU3",113,0)
 . . S SC(SCINC)=$P($G(^SCTM(404.51,SCTEAM,0)),U)
"RTN","SCAPMCU3",114,0)
 ELSE  D
"RTN","SCAPMCU3",115,0)
 . S SCINC=SCINC+1
"RTN","SCAPMCU3",116,0)
 . S SC(SCINC)="No links found."
"RTN","SCAPMCU3",117,0)
 Q
"RTN","SCAPMCU3",118,0)
 ;
"RTN","SCMCPR1")
0^2^B4480722
"RTN","SCMCPR1",1,0)
SCMCPR1 ;ALB/SCK - API FILE FOR STAFF ASSIGNMENTS ; 3/21/96
"RTN","SCMCPR1",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCMCPR1",3,0)
 ;;1.0
"RTN","SCMCPR1",4,0)
 Q
"RTN","SCMCPR1",5,0)
 ;
"RTN","SCMCPR1",6,0)
URSLKUP(SCDAT,SCUSR,SCVAL,SCREEN,SCINST) ;
"RTN","SCMCPR1",7,0)
 ;   Does a lookup in the USR #8930.3 file based on the user class match passed in
"RTN","SCMCPR1",8,0)
 ;
"RTN","SCMCPR1",9,0)
 ;  Input 
"RTN","SCMCPR1",10,0)
 ;      SCUSR  User class to use for lookup
"RTN","SCMCPR1",11,0)
 ;      SCVAL  Partial User name to lookup on
"RTN","SCMCPR1",12,0)
 ;   
"RTN","SCMCPR1",13,0)
 ;   Returns an array of matches found, or an error array.        
"RTN","SCMCPR1",14,0)
 ;   Format for array:        
"RTN","SCMCPR1",15,0)
 ;        SCDATA(1)=[Data]
"RTN","SCMCPR1",16,0)
 ;        SCDATA(x)=IEN^New Users Name^Title
"RTN","SCMCPR1",17,0)
 ;
"RTN","SCMCPR1",18,0)
 ;   Format for Error:
"RTN","SCMCPR1",19,0)
 ;       SCDATA(1)=[Errors]
"RTN","SCMCPR1",20,0)
 ;       SCDATA(x)=" message "
"RTN","SCMCPR1",21,0)
 ;
"RTN","SCMCPR1",22,0)
 N SCI,N,SCRTN,SCTMP,SCTITLE,SCIEN,SCN,SCUERR
"RTN","SCMCPR1",23,0)
 ;
"RTN","SCMCPR1",24,0)
 I SCUSR']""&(SCINST=1) D  G USRQ
"RTN","SCMCPR1",25,0)
 . S N=0
"RTN","SCMCPR1",26,0)
 . D SETF("[Errors]")
"RTN","SCMCPR1",27,0)
 . D SETF("No User Class Defined")
"RTN","SCMCPR1",28,0)
 ;
"RTN","SCMCPR1",29,0)
 IF $L(SCVAL)<3&(SCINST=0) D  G USRQ
"RTN","SCMCPR1",30,0)
 . S N=0
"RTN","SCMCPR1",31,0)
 .D SETF("[Errors]")
"RTN","SCMCPR1",32,0)
 .D SETF("Insufficient characters to match")
"RTN","SCMCPR1",33,0)
 ;
"RTN","SCMCPR1",34,0)
 S N=0
"RTN","SCMCPR1",35,0)
 IF SCINST=1 D
"RTN","SCMCPR1",36,0)
 . D LIST^DIC(200,"",".01;8;28","","","",SCVAL,"","IF $$ISA^USRLM(Y,SCUSR,.SCUERR)","")
"RTN","SCMCPR1",37,0)
 ;
"RTN","SCMCPR1",38,0)
 IF SCINST=0 D
"RTN","SCMCPR1",39,0)
 .D LIST^DIC(200,"",".01;8;28","","","",SCVAL,"",SCREEN,"")
"RTN","SCMCPR1",40,0)
 ;
"RTN","SCMCPR1",41,0)
 S N=0
"RTN","SCMCPR1",42,0)
 D SETF("[Data]")
"RTN","SCMCPR1",43,0)
 S I="" F  S I=$O(^TMP("DILIST",$J,1,I)) Q:'I  D
"RTN","SCMCPR1",44,0)
 . S SCTMP=^TMP("DILIST",$J,2,I)_U
"RTN","SCMCPR1",45,0)
 . S:SCINST SCTMP=SCTMP_$$CLNAME^USRLM(+SCUSR)
"RTN","SCMCPR1",46,0)
 . S SCTMP=SCTMP_U_U_U_U_^TMP("DILIST",$J,1,I)
"RTN","SCMCPR1",47,0)
 . S SCTMP=SCTMP_U_^TMP("DILIST",$J,"ID",I,8)
"RTN","SCMCPR1",48,0)
 . S SCTMP=SCTMP_U_^TMP("DILIST",$J,"ID",I,28)
"RTN","SCMCPR1",49,0)
 . D SETF(SCTMP)
"RTN","SCMCPR1",50,0)
 ;
"RTN","SCMCPR1",51,0)
 K ^TMP("DILIST",$J)
"RTN","SCMCPR1",52,0)
USRQ Q
"RTN","SCMCPR1",53,0)
 ;
"RTN","SCMCPR1",54,0)
SETF(X) ;
"RTN","SCMCPR1",55,0)
 S N=N+1
"RTN","SCMCPR1",56,0)
 S SCDAT(N)=X
"RTN","SCMCPR1",57,0)
 Q
"RTN","SCMCPR1",58,0)
 ;
"RTN","SCMCPR1",59,0)
 ;
"RTN","SCMCPR1",60,0)
TEST(CHK) ;
"RTN","SCMCPR1",61,0)
 N SC,SCCHECK
"RTN","SCMCPR1",62,0)
 K SCK
"RTN","SCMCPR1",63,0)
 IF CHK=1 D
"RTN","SCMCPR1",64,0)
 . S DIC="^USR(8930,",DIC("A")="Enter User Class: ",DIC(0)="AEMZ"
"RTN","SCMCPR1",65,0)
 . D ^DIC
"RTN","SCMCPR1",66,0)
 . W !,Y,!
"RTN","SCMCPR1",67,0)
 . R "Lookup: ",X:60
"RTN","SCMCPR1",68,0)
 . Q:'$G(Y)>0
"RTN","SCMCPR1",69,0)
 . D URSLKUP(.SCK,$P(Y,U),X,"",CHK)
"RTN","SCMCPR1",70,0)
 ;
"RTN","SCMCPR1",71,0)
 IF CHK=0 D
"RTN","SCMCPR1",72,0)
 . R "Name: ",X:60
"RTN","SCMCPR1",73,0)
 . D URSLKUP(.SCK,"",X,"",CHK)
"RTN","SCMCPR1",74,0)
 ;
"RTN","SCMCPR1",75,0)
 ;;;W ! ZW SCK
"RTN","SCMCPR1",76,0)
TESTQ Q
"RTN","SCMCTMM")
0^3^B38685055
"RTN","SCMCTMM",1,0)
SCMCTMM ;ALB/REW - Patient Team Changes MailMessages ; 26 Mar 1996
"RTN","SCMCTMM",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCMCTMM",3,0)
 ;1
"RTN","SCMCTMM",4,0)
MAIL ;Do Patient Team Changes MailMan Message
"RTN","SCMCTMM",5,0)
 ; - called by SCMC PT TEAM CHANGES MAIL MESSAGE protocol
"RTN","SCMCTMM",6,0)
 G:$G(SCNOMAIL) END  ;- flag can be set to stop message generation
"RTN","SCMCTMM",7,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,SCX,ZTQUEUED
"RTN","SCMCTMM",8,0)
 N SCTMAR,SCSTAT,DFN,SCNODE,SCY,SCSPACE,SCPAD,SCPHONE,SCB,SCE,SCB2,SCE2,SCTMDT,SCTMXM,SCPTNM,SCLNCNT
"RTN","SCMCTMM",9,0)
 S ZTQUEUED=1
"RTN","SCMCTMM",10,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTMM",11,0)
 ;   SCTMAR - ARRAY OF TEAMS (before & after)
"RTN","SCMCTMM",12,0)
 S:SCTMB4 SCTMAR(SCTMB4)=""
"RTN","SCMCTMM",13,0)
 S:SCTMAF SCTMAR(SCTMAF)=""
"RTN","SCMCTMM",14,0)
 IF 'SCTMAF D
"RTN","SCMCTMM",15,0)
 .S SCSTAT="DELETED",SCB=$P(SCTMB4,U,2),SCE=$S($P(SCPTTMB4,U,9):$P(SCPTTMB4,U,9),1:DT)
"RTN","SCMCTMM",16,0)
 IF 'SCTMB4 D
"RTN","SCMCTMM",17,0)
 .S SCSTAT="NEW",SCB=$P(SCTMAF,U,2),SCE=$S($P(SCPTTMAF,U,9):$P(SCPTTMAF,U,9),1:DT)
"RTN","SCMCTMM",18,0)
 IF SCTMB4&SCTMAF D
"RTN","SCMCTMM",19,0)
 .S SCSTAT="CHANGED"
"RTN","SCMCTMM",20,0)
 .S SCB=$P(SCTMB4,U,2),SCE=$S($P(SCPTTMB4,U,9):$P(SCPTTMB4,U,9),1:DT)
"RTN","SCMCTMM",21,0)
 .S SCB2=$P(SCTMAF,U,2),SCE2=$S($P(SCPTTMAF,U,9):$P(SCPTTMAF,U,9),1:DT)
"RTN","SCMCTMM",22,0)
 .S SCTMDT("BEGIN")=$S(SCB<SCB2:SCB,1:SCB2)
"RTN","SCMCTMM",23,0)
 .S SCTMDT("END")=$S(SCE>SCE2:SCE,1:SCE2)
"RTN","SCMCTMM",24,0)
 .S SCTMDT("INCL")=0
"RTN","SCMCTMM",25,0)
 IF SCSTAT="NEW"!(SCSTAT="DELETED") D
"RTN","SCMCTMM",26,0)
 .S SCTMDT("BEGIN")=SCB
"RTN","SCMCTMM",27,0)
 .S SCTMDT("END")=SCE
"RTN","SCMCTMM",28,0)
 .S SCTMDT("INCL")=0
"RTN","SCMCTMM",29,0)
 S DFN=$S(SCSTAT="DELETED":+SCPTTMB4,1:+SCPTTMAF)
"RTN","SCMCTMM",30,0)
 ;set xmy array for practitioners in positions receiving tmchg notices
"RTN","SCMCTMM",31,0)
 G:'$$PCMMXMY^SCAPMC25(3,DFN,"SCTMAR","SCTMDT",0) END
"RTN","SCMCTMM",32,0)
 D EN^DDIOL("Sending "_SCSTAT_" Patient-Team Assignment Message")
"RTN","SCMCTMM",33,0)
 D PID^VADPT6
"RTN","SCMCTMM",34,0)
 S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTMM",35,0)
 S XMSUB=SCSTAT_" PATIENT-TEAM ASSIGNMENT for "_SCPTNM_" ("_VA("PID")_")",XMTEXT="^TMP($J,""SCTMXM"",",SCLNCNT=0
"RTN","SCMCTMM",36,0)
 IF SCSTAT="NEW" D
"RTN","SCMCTMM",37,0)
 .D SETLN("Current Patient Team Data:")
"RTN","SCMCTMM",38,0)
 .D SETLN("==========================")
"RTN","SCMCTMM",39,0)
 .F SCX=1:1:14 D
"RTN","SCMCTMM",40,0)
 ..D SETLN($$TEXT(404.42,SCPTTMAF,SCX,SCSPACE,1))
"RTN","SCMCTMM",41,0)
 IF SCSTAT="DELETED" D
"RTN","SCMCTMM",42,0)
 .D SETLN("Previous Patient Team Data:")
"RTN","SCMCTMM",43,0)
 .D SETLN("===========================")
"RTN","SCMCTMM",44,0)
 .F SCX=1:1:14 S SCFLD=SCX*.01 D
"RTN","SCMCTMM",45,0)
 ..D SETLN($$TEXT(404.42,SCPTTMB4,SCX,SCSPACE,1))
"RTN","SCMCTMM",46,0)
 IF SCSTAT="CHANGED" D
"RTN","SCMCTMM",47,0)
 .D SETLN("Fields: "_$E(SCSPACE,1,15)_"Previous Data:             Current Patient Data:")
"RTN","SCMCTMM",48,0)
 .D SETLN("=======================================================================")
"RTN","SCMCTMM",49,0)
 .F SCX=1:1:14 S SCFLD=SCX*.01 D
"RTN","SCMCTMM",50,0)
 ..N SCLAB2,SCY,SCZ
"RTN","SCMCTMM",51,0)
 ..S SCY=$$TEXT(404.42,SCPTTMB4,SCX,SCSPACE,1)
"RTN","SCMCTMM",52,0)
 ..S:'$L(SCY) SCLAB2=2
"RTN","SCMCTMM",53,0)
 ..S SCZ=$$TEXT(404.42,SCPTTMAF,SCX,SCSPACE,+$G(SCLAB2))
"RTN","SCMCTMM",54,0)
 ..D:$L(SCY)!($L(SCZ)) SETLN(SCY_$E(SCSPACE,1,(50-$L(SCY)))_SCZ)
"RTN","SCMCTMM",55,0)
 S SCLNCNT=$$PCMAIL^SCMCMM(DFN,"^TMP($J,""SCTMXM"")",DT)
"RTN","SCMCTMM",56,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTMM",57,0)
 S XMY(XMDUZ)=""
"RTN","SCMCTMM",58,0)
 D ^XMD
"RTN","SCMCTMM",59,0)
END K ^TMP($J,"SCTMXM")
"RTN","SCMCTMM",60,0)
 Q
"RTN","SCMCTMM",61,0)
 ;
"RTN","SCMCTMM",62,0)
SETLN(TEXT) ;
"RTN","SCMCTMM",63,0)
 Q:$G(TEXT)=""
"RTN","SCMCTMM",64,0)
 ; increments SCLNCNT, adds text to sctmxm(sclncnt)
"RTN","SCMCTMM",65,0)
 S SCLNCNT=SCLNCNT+1
"RTN","SCMCTMM",66,0)
 S ^TMP($J,"SCTMXM",SCLNCNT)=TEXT
"RTN","SCMCTMM",67,0)
 Q
"RTN","SCMCTMM",68,0)
 ;
"RTN","SCMCTMM",69,0)
TEXT(SCFILE,SCNODE,SCPC,SCSPACE,SCLAB) ;returns fldname & external value
"RTN","SCMCTMM",70,0)
 ;returns fldname & external value
"RTN","SCMCTMM",71,0)
 ;   Note- Only works for non wp fields of standard numbering conventions
"RTN","SCMCTMM",72,0)
 ;   SCFLILE =FILENUM
"RTN","SCMCTMM",73,0)
 ;   SCNODE  = 0 NODE
"RTN","SCMCTMM",74,0)
 ;   SCPC    = piece of node
"RTN","SCMCTMM",75,0)
 ;   SCSPACE = 80 SPACES
"RTN","SCMCTMM",76,0)
 ;   SCLAB = 1 if print field name
"RTN","SCMCTMM",77,0)
 N SCX,SCINT,SCFLD
"RTN","SCMCTMM",78,0)
 S SCX=""
"RTN","SCMCTMM",79,0)
 S SCINT=$P(SCNODE,U,SCPC)
"RTN","SCMCTMM",80,0)
 G:SCINT="" QTTXT
"RTN","SCMCTMM",81,0)
 S SCFLD=SCPC*.01
"RTN","SCMCTMM",82,0)
 ;;;
"RTN","SCMCTMM",83,0)
 IF $G(SCLAB) D
"RTN","SCMCTMM",84,0)
 .S SCX=$$DDNAME(SCFILE,SCFLD)_":"
"RTN","SCMCTMM",85,0)
 .S:$G(SCLAB)=1 SCX=SCX_$E(SCSPACE,1,(23-$L(SCX)))
"RTN","SCMCTMM",86,0)
 .S:$G(SCLAB)=2 SCX=SCX_$E(SCSPACE,1,(50-$L(SCX)))
"RTN","SCMCTMM",87,0)
 S:SCINT]"" SCX=SCX_$$EXTERNAL^DILFD(SCFILE,SCFLD,"",SCINT)
"RTN","SCMCTMM",88,0)
QTTXT Q SCX
"RTN","SCMCTMM",89,0)
 ;
"RTN","SCMCTMM",90,0)
DDNAME(FILE,FIELD) ;return the fieldname
"RTN","SCMCTMM",91,0)
 N SCX
"RTN","SCMCTMM",92,0)
 D FIELD^DID(FILE,FIELD,"","LABEL","SCX")
"RTN","SCMCTMM",93,0)
 Q $G(SCX("LABEL"))
"RTN","SCMCTMM",94,0)
 ;
"RTN","SCMCTMM",95,0)
MAILLST(SCTM,SCFIELDA,SCDATE,SCNEWTM,SCOLDTM,SCBADTM) ;
"RTN","SCMCTMM",96,0)
 ; Input:
"RTN","SCMCTMM",97,0)
 ;    SCTM     - Pointer to Team File (#404.51)
"RTN","SCMCTMM",98,0)
 ;    SCFIELDA - Field array with internal values
"RTN","SCMCTMM",99,0)
 ;    SCDATE   - Effective Date
"RTN","SCMCTMM",100,0)
 ;    SCNEWTM  - DFN array of newly assigned to team
"RTN","SCMCTMM",101,0)
 ;    SCOLDTM  - DFN array of previously assigned to team
"RTN","SCMCTMM",102,0)
 ;    SCBADTM  - DFN array of patients unassignable to team
"RTN","SCMCTMM",103,0)
 ;
"RTN","SCMCTMM",104,0)
 G:$G(SCNOMAIL) QTMULT  ;- flag can be set to stop message generation
"RTN","SCMCTMM",105,0)
 G:'$D(SCNEWTM) QTMULT
"RTN","SCMCTMM",106,0)
 G:'$O(@SCNEWTM@(0)) QTMULT  ;if no new assignments
"RTN","SCMCTMM",107,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,ZTQUEUED
"RTN","SCMCTMM",108,0)
 N SCTMNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE,SCE,SCB,SCTMDT,SCDELTEM
"RTN","SCMCTMM",109,0)
 S ZTQUEUED=1
"RTN","SCMCTMM",110,0)
 S SCDELTEM=1 ;ok to delete tmp global
"RTN","SCMCTMM",111,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTMM",112,0)
 .IF $D(SCFIELDA(.02)) S SCB=SCFIELDA(.02)
"RTN","SCMCTMM",113,0)
 .IF $D(SCFIELDA(.09)) S SCE=SCFIELDA(.09)
"RTN","SCMCTMM",114,0)
 S SCB=$G(SCB,DT)
"RTN","SCMCTMM",115,0)
 S SCE=$G(SCE,DT)
"RTN","SCMCTMM",116,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTMM",117,0)
 S SCTMDT("BEGIN")=$S(SCB<SCDATE:SCB,1:SCDATE)
"RTN","SCMCTMM",118,0)
 S SCTMDT("END")=$S(SCE>SCDATE:SCE,1:SCDATE)
"RTN","SCMCTMM",119,0)
 S SCTMDT("INCL")=0
"RTN","SCMCTMM",120,0)
 S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)
"RTN","SCMCTMM",121,0)
 S XMSUB="Multiple PATIENT-TEAM ASSIGNMENT for "_SCTMNM,XMTEXT="^TMP($J,""SCTMXM"",",SCLNCNT=0
"RTN","SCMCTMM",122,0)
 D EN^DDIOL("Sending Multiple Patient-Team Assignment Message")
"RTN","SCMCTMM",123,0)
 S SCOK=1
"RTN","SCMCTMM",124,0)
 S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)
"RTN","SCMCTMM",125,0)
 D SETLN("Team:                  "_SCTMNM)
"RTN","SCMCTMM",126,0)
 S Y=SCDATE X ^DD("DD")
"RTN","SCMCTMM",127,0)
 D SETLN("Effective Date:        "_Y)
"RTN","SCMCTMM",128,0)
 D SETLN(" ")
"RTN","SCMCTMM",129,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTMM",130,0)
 .F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D
"RTN","SCMCTMM",131,0)
 ..S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)
"RTN","SCMCTMM",132,0)
 ..D SETLN($$TEXT(404.42,SCNODE,SCNDX,SCSPACE,1))
"RTN","SCMCTMM",133,0)
 D SETLN(" ")
"RTN","SCMCTMM",134,0)
 D SETLN("There has been a new team assignment for the following patients:")
"RTN","SCMCTMM",135,0)
 S DFN=0
"RTN","SCMCTMM",136,0)
 F  S DFN=$O(@SCNEWTM@(DFN)) Q:'DFN  D
"RTN","SCMCTMM",137,0)
 .S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTMDT",0) SCOK=0
"RTN","SCMCTMM",138,0)
 .D PID^VADPT6
"RTN","SCMCTMM",139,0)
 .S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTMM",140,0)
 .S ^TMP("SCTM MAIL LST",$J,SCTM,1,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTMM",141,0)
 .S ^TMP("SCTM MAIL LST",$J,SCTM,1,"B",SCPTNM,DFN)=""
"RTN","SCMCTMM",142,0)
 S SCPTNM=""
"RTN","SCMCTMM",143,0)
 F  S SCPTNM=$O(^TMP("SCTM MAIL LST",$J,SCTM,1,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTMM",144,0)
 .S DFN=0
"RTN","SCMCTMM",145,0)
 .F  S DFN=$O(^TMP("SCTM MAIL LST",$J,SCTM,1,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTMM",146,0)
 ..S SCDETAIL=$G(^TMP("SCTM MAIL LST",$J,SCTM,1,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTMM",147,0)
BAD IF $S('$D(SCBADTM):0,1:$O(@SCBADTM@(0))) D
"RTN","SCMCTMM",148,0)
 .D SETLN(" ")
"RTN","SCMCTMM",149,0)
 .D SETLN("There has been NO new team assignment for the following patients:")
"RTN","SCMCTMM",150,0)
 .S DFN=0
"RTN","SCMCTMM",151,0)
 .F  S DFN=$O(@SCBADTM@(DFN)) Q:'DFN  D
"RTN","SCMCTMM",152,0)
 ..S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTMDT",0) SCOK=0
"RTN","SCMCTMM",153,0)
 ..S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTMM",154,0)
 ..D PID^VADPT6
"RTN","SCMCTMM",155,0)
 ..S ^TMP("SCTM MAIL LST",$J,SCTM,2,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTMM",156,0)
 ..S ^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM,DFN)=""
"RTN","SCMCTMM",157,0)
 .S SCPTNM=""
"RTN","SCMCTMM",158,0)
 .F  S SCPTNM=$O(^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTMM",159,0)
 ..S DFN=0
"RTN","SCMCTMM",160,0)
 ..F  S DFN=$O(^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTMM",161,0)
 ...S SCDETAIL=$G(^TMP("SCTM MAIL LST",$J,SCTM,2,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTMM",162,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTMM",163,0)
 D ^XMD
"RTN","SCMCTMM",164,0)
QTMULT K:$G(SCDELTEM) ^TMP("SCTM MAIL LST",$J,SCTM)
"RTN","SCMCTMM",165,0)
 K ^TMP($J,"SCTMXM")
"RTN","SCMCTMM",166,0)
 Q
"RTN","SCMCTPM")
0^4^B34485262
"RTN","SCMCTPM",1,0)
SCMCTPM ;ALB/REW - Patient Position Changes MailMessages ; 26 Mar 1996
"RTN","SCMCTPM",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCMCTPM",3,0)
 ;1
"RTN","SCMCTPM",4,0)
MAIL ;Do Patient Team Changes MailMan Message
"RTN","SCMCTPM",5,0)
 ; - called by SCMC PT TEAM CHANGES MAIL MESSAGE protocol
"RTN","SCMCTPM",6,0)
 G:$G(SCNOMAIL) END  ;- flag can be set to stop message generation
"RTN","SCMCTPM",7,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,ZTQUEUED
"RTN","SCMCTPM",8,0)
 N SCTMAR,SCSTAT,DFN,SCNODE,SCY,SCSPACE,SCPAD,SCTPXM,SCLNCNT,SCTPDT,SCPTNM
"RTN","SCMCTPM",9,0)
 S ZTQUEUED=1
"RTN","SCMCTPM",10,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTPM",11,0)
 ;   SCTMAR - ARRAY OF TEAMS (before & after)
"RTN","SCMCTPM",12,0)
 S:SCTMAF SCTMAR(SCTMAF)=""
"RTN","SCMCTPM",13,0)
 S:SCTMB4 SCTMAR(SCTMB4)=""
"RTN","SCMCTPM",14,0)
 S:'SCTPAF SCSTAT="DELETED"
"RTN","SCMCTPM",15,0)
 S:'SCTPB4 SCSTAT="NEW"
"RTN","SCMCTPM",16,0)
 S:SCTPB4&SCTPAF SCSTAT="CHANGED"
"RTN","SCMCTPM",17,0)
 S DFN=$S(SCSTAT="DELETED":+$G(^SCPT(404.42,+SCPTTPB4,0)),1:+$G(^SCPT(404.42,+SCPTTPAF,0)))
"RTN","SCMCTPM",18,0)
 ;set xmy array for practitioners in positions receiving TMchg notices
"RTN","SCMCTPM",19,0)
 G:'$$PCMMXMY^SCAPMC25(3,DFN,"SCTMAR","SCTPDT",0) END
"RTN","SCMCTPM",20,0)
 ;D EN^DDIOL("Sending "_SCSTAT_" Patient-Position Assignment Message")
"RTN","SCMCTPM",21,0)
 D PID^VADPT6
"RTN","SCMCTPM",22,0)
 S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTPM",23,0)
 S XMSUB=SCSTAT_" PATIENT-POSITION ASSIGNMENT for "_SCPTNM_" ("_VA("PID")_")",XMTEXT="^TMP($J,""SCTPXM"",",SCLNCNT=0
"RTN","SCMCTPM",24,0)
 IF SCSTAT="NEW" D
"RTN","SCMCTPM",25,0)
 .D SETLN("Current Patient Team Data:")
"RTN","SCMCTPM",26,0)
 .D SETLN("==========================")
"RTN","SCMCTPM",27,0)
 .F SCX=1:1:9 D
"RTN","SCMCTPM",28,0)
 ..D SETLN($$TEXT(404.43,SCPTTPAF,SCX,SCSPACE,1))
"RTN","SCMCTPM",29,0)
 IF SCSTAT="DELETED" D
"RTN","SCMCTPM",30,0)
 .D SETLN("Previous Patient Team Data:")
"RTN","SCMCTPM",31,0)
 .D SETLN("===========================")
"RTN","SCMCTPM",32,0)
 .F SCX=1:1:9 S SCFLD=SCX*.01 D
"RTN","SCMCTPM",33,0)
 ..D SETLN($$TEXT(404.43,SCPTTPB4,SCX,SCSPACE,1))
"RTN","SCMCTPM",34,0)
 IF SCSTAT="CHANGED" D
"RTN","SCMCTPM",35,0)
 .D SETLN("Fields: "_$E(SCSPACE,1,19)_"Previous Data:           Current Patient Data:")
"RTN","SCMCTPM",36,0)
 .D SETLN("=======================================================================")
"RTN","SCMCTPM",37,0)
 .F SCX=1:1:9 S SCFLD=SCX*.01 D
"RTN","SCMCTPM",38,0)
 ..N SCLAB2,SCY,SCZ
"RTN","SCMCTPM",39,0)
 ..S SCY=$$TEXT(404.43,SCPTTPB4,SCX,SCSPACE,1)
"RTN","SCMCTPM",40,0)
 ..S:'$L(SCY) SCLAB2=2
"RTN","SCMCTPM",41,0)
 ..S SCZ=$$TEXT(404.43,SCPTTPAF,SCX,SCSPACE,+$G(SCLAB2))
"RTN","SCMCTPM",42,0)
 ..D:$L(SCY)!($L(SCZ)) SETLN(SCY_$E(SCSPACE,1,(52-$L(SCY)))_SCZ)
"RTN","SCMCTPM",43,0)
 S SCLNCNT=$$PCMAIL^SCMCMM(DFN,"^TMP($J,""SCTPXM"")",DT)
"RTN","SCMCTPM",44,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTPM",45,0)
 D ^XMD
"RTN","SCMCTPM",46,0)
END ;
"RTN","SCMCTPM",47,0)
 Q
"RTN","SCMCTPM",48,0)
 ;
"RTN","SCMCTPM",49,0)
SETLN(TEXT) ;
"RTN","SCMCTPM",50,0)
 Q:$G(TEXT)=""
"RTN","SCMCTPM",51,0)
 ; increments SCLNCNT, adds text to scTPxm(sclncnt)
"RTN","SCMCTPM",52,0)
 S SCLNCNT=SCLNCNT+1
"RTN","SCMCTPM",53,0)
 S ^TMP($J,"SCTPXM",SCLNCNT)=TEXT
"RTN","SCMCTPM",54,0)
 Q
"RTN","SCMCTPM",55,0)
 ;
"RTN","SCMCTPM",56,0)
TEXT(SCFILE,SCNODE,SCPC,SCSPACE,SCLAB) ;returns fldname & external value
"RTN","SCMCTPM",57,0)
 ;returns fldname & external value
"RTN","SCMCTPM",58,0)
 ;   Note- Only works for non wp fields of standard numbering conventions
"RTN","SCMCTPM",59,0)
 ;   SCFLILE =FILENUM
"RTN","SCMCTPM",60,0)
 ;   SCNODE  = 0 NODE
"RTN","SCMCTPM",61,0)
 ;   SCPC    = piece of node
"RTN","SCMCTPM",62,0)
 ;   SCSPACE = 80 SPACES
"RTN","SCMCTPM",63,0)
 ;   SCLAB = 1 if print field name
"RTN","SCMCTPM",64,0)
 N SCX,SCINT,SCFLD
"RTN","SCMCTPM",65,0)
 S SCX=""
"RTN","SCMCTPM",66,0)
 S SCINT=$P(SCNODE,U,SCPC)
"RTN","SCMCTPM",67,0)
 G:SCINT="" QTTXT
"RTN","SCMCTPM",68,0)
 S SCFLD=SCPC*.01
"RTN","SCMCTPM",69,0)
 ;;;
"RTN","SCMCTPM",70,0)
 IF $G(SCLAB) D
"RTN","SCMCTPM",71,0)
 .S SCX=$$DDNAME^SCMCRU(SCFILE,SCFLD)_":"
"RTN","SCMCTPM",72,0)
 .S:$G(SCLAB)=1 SCX=SCX_$E(SCSPACE,1,(27-$L(SCX)))
"RTN","SCMCTPM",73,0)
 .S:$G(SCLAB)=2 SCX=SCX_$E(SCSPACE,1,(52-$L(SCX)))
"RTN","SCMCTPM",74,0)
 S:SCINT]"" SCX=SCX_$$EXTERNAL^DILFD(SCFILE,SCFLD,"",SCINT)
"RTN","SCMCTPM",75,0)
QTTXT Q SCX
"RTN","SCMCTPM",76,0)
DDNAME(FILE,FIELD) ;return the fieldname
"RTN","SCMCTPM",77,0)
 N SCX
"RTN","SCMCTPM",78,0)
 D FIELD^DID(FILE,FIELD,"","LABEL","SCX")
"RTN","SCMCTPM",79,0)
 Q $G(SCX("LABEL"))
"RTN","SCMCTPM",80,0)
 ;
"RTN","SCMCTPM",81,0)
MAILLST(SCTP,SCFIELDA,SCDATE,SCNEWTP,SCOLDTP,SCBADTP) ;
"RTN","SCMCTPM",82,0)
 ; Input:
"RTN","SCMCTPM",83,0)
 ;    SCTP     - Pointer to Team Position File (#404.57)
"RTN","SCMCTPM",84,0)
 ;    SCFIELDA - Field array with internal values
"RTN","SCMCTPM",85,0)
 ;    SCDATE   - Effective Date
"RTN","SCMCTPM",86,0)
 ;    SCNEWTP  - DFN array of newly assigned to position
"RTN","SCMCTPM",87,0)
 ;    SCOLDTP  - DFN array of previously assigned to position
"RTN","SCMCTPM",88,0)
 ;    SCBADTP  - DFN array of patients unassignable to position
"RTN","SCMCTPM",89,0)
 ;
"RTN","SCMCTPM",90,0)
 G:$G(SCNOMAIL) QTMULT  ;- flag can be set to stop message generation
"RTN","SCMCTPM",91,0)
 G:'$D(SCNEWTP) QTMULT
"RTN","SCMCTPM",92,0)
 G:'$O(@SCNEWTP@(0)) QTMULT  ;if no new assignments
"RTN","SCMCTPM",93,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,SCTPDT,ZTQUEUED
"RTN","SCMCTPM",94,0)
 N SCTPNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE,SCE,SCB,SCTMNM,SCDELTEM
"RTN","SCMCTPM",95,0)
 S ZTQUEUED=1
"RTN","SCMCTPM",96,0)
 S SCDELTEM=1 ;ok to delete tmp global
"RTN","SCMCTPM",97,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTPM",98,0)
 .IF $D(SCFIELDA(.03)) S SCB=SCFIELDA(.03)
"RTN","SCMCTPM",99,0)
 .IF $D(SCFIELDA(.04)) S SCE=SCFIELDA(.04)
"RTN","SCMCTPM",100,0)
 S SCB=$G(SCB,DT)
"RTN","SCMCTPM",101,0)
 S SCE=$G(SCE,DT)
"RTN","SCMCTPM",102,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTPM",103,0)
 S SCTPDT("BEGIN")=$S(SCB<SCDATE:SCB,1:SCDATE)
"RTN","SCMCTPM",104,0)
 S SCTPDT("END")=$S(SCE>SCDATE:SCE,1:SCDATE)
"RTN","SCMCTPM",105,0)
 S SCTPDT("INCL")=0
"RTN","SCMCTPM",106,0)
 S SCTPNM=$P($G(^SCTM(404.57,+SCTP,0)),U,1)
"RTN","SCMCTPM",107,0)
 S XMSUB="Multiple PATIENT-POSITION ASSIGNMENT for "_SCTPNM,XMTEXT="^TMP($J,""SCTPXM"",",SCLNCNT=0
"RTN","SCMCTPM",108,0)
 D EN^DDIOL("Sending Multiple Patient-Position Assignment Message")
"RTN","SCMCTPM",109,0)
 S SCOK=1
"RTN","SCMCTPM",110,0)
 S SCTPNM=$P($G(^SCTM(404.57,+SCTP,0)),U,1)
"RTN","SCMCTPM",111,0)
 S SCTMNM=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+SCTP,0)),U,2),0)),U,1)
"RTN","SCMCTPM",112,0)
 D SETLN("Team:                  "_SCTMNM)
"RTN","SCMCTPM",113,0)
 D SETLN("Position:              "_SCTPNM)
"RTN","SCMCTPM",114,0)
 S Y=SCDATE X ^DD("DD")
"RTN","SCMCTPM",115,0)
 D SETLN("Effective Date:        "_Y)
"RTN","SCMCTPM",116,0)
 D SETLN(" ")
"RTN","SCMCTPM",117,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTPM",118,0)
 .F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D
"RTN","SCMCTPM",119,0)
 ..S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)
"RTN","SCMCTPM",120,0)
 ..D SETLN($$TEXT(404.43,SCNODE,SCNDX,SCSPACE,1))
"RTN","SCMCTPM",121,0)
 D SETLN(" ")
"RTN","SCMCTPM",122,0)
 D SETLN("There has been a new position assignment for the following patients:")
"RTN","SCMCTPM",123,0)
 S DFN=0
"RTN","SCMCTPM",124,0)
NEW F  S DFN=$O(@SCNEWTP@(DFN)) Q:'DFN  D
"RTN","SCMCTPM",125,0)
 .S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTPDT",0) SCOK=0
"RTN","SCMCTPM",126,0)
 .D PID^VADPT6
"RTN","SCMCTPM",127,0)
 .S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTPM",128,0)
 .S ^TMP("SCTP MAIL LST",$J,SCTP,1,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTPM",129,0)
 .S ^TMP("SCTP MAIL LST",$J,SCTP,1,"B",SCPTNM,DFN)=""
"RTN","SCMCTPM",130,0)
 S SCPTNM=""
"RTN","SCMCTPM",131,0)
 F  S SCPTNM=$O(^TMP("SCTP MAIL LST",$J,SCTP,1,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTPM",132,0)
 .S DFN=0
"RTN","SCMCTPM",133,0)
 .F  S DFN=$O(^TMP("SCTP MAIL LST",$J,SCTP,1,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTPM",134,0)
 ..S SCDETAIL=$G(^TMP("SCTP MAIL LST",$J,SCTP,1,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTPM",135,0)
BAD IF $O(@SCBADTP@(0)) D
"RTN","SCMCTPM",136,0)
 .D SETLN(" ")
"RTN","SCMCTPM",137,0)
 .D SETLN("There has been NO new position assignment for the following patients:")
"RTN","SCMCTPM",138,0)
 .S DFN=0
"RTN","SCMCTPM",139,0)
 .F  S DFN=$O(@SCBADTP@(DFN)) Q:'DFN  D
"RTN","SCMCTPM",140,0)
 ..S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTPDT",0) SCOK=0
"RTN","SCMCTPM",141,0)
 ..S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTPM",142,0)
 ..D PID^VADPT6
"RTN","SCMCTPM",143,0)
 ..S ^TMP("SCTP MAIL LST",$J,SCTP,2,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTPM",144,0)
 ..S ^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM,DFN)=""
"RTN","SCMCTPM",145,0)
 .S SCPTNM=""
"RTN","SCMCTPM",146,0)
 .F  S SCPTNM=$O(^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTPM",147,0)
 ..S DFN=0
"RTN","SCMCTPM",148,0)
 ..F  S DFN=$O(^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTPM",149,0)
 ...S SCDETAIL=$G(^TMP("SCTP MAIL LST",$J,SCTP,2,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTPM",150,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTPM",151,0)
 D ^XMD
"RTN","SCMCTPM",152,0)
QTMULT K:$G(SCDELTEM) ^TMP("SCTP MAIL LST",$J,SCTP)
"RTN","SCMCTPM",153,0)
 K ^TMP($J,"SCTPXM")
"RTN","SCMCTPM",154,0)
 Q
"RTN","SCRPU1")
0^5^B24690764
"RTN","SCRPU1",1,0)
SCRPU1 ;ALB/CMM - GENERIC PROMPTS FOR PCMM REPORTS ;1/12/96
"RTN","SCRPU1",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCRPU1",3,0)
 ;
"RTN","SCRPU1",4,0)
INST ;Prompt for institution
"RTN","SCRPU1",5,0)
 S VAUTVB="VAUTD",DIC="^DIC(4,",DIC("S")="I $D(^SCTM(404.51,""AINST"",+Y))"
"RTN","SCRPU1",6,0)
 S VAUTNI=2,VAUTSTR="Division"
"RTN","SCRPU1",7,0)
 G FIRST^VAUTOMA
"RTN","SCRPU1",8,0)
 ;
"RTN","SCRPU1",9,0)
PRMTT ;Prompt for team.  Set VAUTTN to allow not assigned to a team as a selection
"RTN","SCRPU1",10,0)
 I '$D(VAUTD) G ERR
"RTN","SCRPU1",11,0)
 S VAUTVB="VAUTT",DIC="^SCTM(404.51,",VAUTNI=2,VAUTSTR="Team",DIC("B")=""
"RTN","SCRPU1",12,0)
 S DIC("S")="I VAUTD=1!($D(VAUTD(+$P(^(0),U,7))))"
"RTN","SCRPU1",13,0)
 G FIRST
"RTN","SCRPU1",14,0)
 ;
"RTN","SCRPU1",15,0)
CLINIC ;Prompt for Clinic
"RTN","SCRPU1",16,0)
 I '$D(VAUTT)&'$D(VAUTCA) G ERR
"RTN","SCRPU1",17,0)
 S VAUTVB="VAUTC",VAUTSTR="Clinic",VAUTNI=2,DIC="^SC("
"RTN","SCRPU1",18,0)
 ;Set screen to only allow clinics and clinics that are associated to the teams selected
"RTN","SCRPU1",19,0)
 I '$D(VAUTCA) S DIC("S")="I $$CLSC^SCRPU1()"
"RTN","SCRPU1",20,0)
 ;VAUTCA allows for selection of any clinic in the selected
"RTN","SCRPU1",21,0)
 I $D(VAUTCA) S DIC("S")="I $$CLSC2^SCRPU1()"
"RTN","SCRPU1",22,0)
 G FIRST
"RTN","SCRPU1",23,0)
 ;
"RTN","SCRPU1",24,0)
USER ;Prompt for User Class
"RTN","SCRPU1",25,0)
 I '$D(VAUTT) G ERR
"RTN","SCRPU1",26,0)
 I $P($G(^SD(404.91,1,"PCMM")),"^")'=1 Q  ;user class turned off
"RTN","SCRPU1",27,0)
 S VAUTVB="VAUTUC",DIC="^USR(8930,",VAUTSTR="User Class",VAUTNI=2
"RTN","SCRPU1",28,0)
 S DIC("S")="I $$USRCL^SCRPU1"
"RTN","SCRPU1",29,0)
 G FIRST
"RTN","SCRPU1",30,0)
 ;
"RTN","SCRPU1",31,0)
USRCL() ;Screen for user class - must be related to teams selected
"RTN","SCRPU1",32,0)
 N STOP,ENT,NODE,TIEN
"RTN","SCRPU1",33,0)
 I '+$P(^(0),U,3) Q 0
"RTN","SCRPU1",34,0)
 ;check for active/exiting user class
"RTN","SCRPU1",35,0)
 S ENT=0,STOP=0
"RTN","SCRPU1",36,0)
 F  S ENT=$O(^SCTM(404.57,"AUSR",+Y,ENT)) Q:ENT=""!(STOP)  D
"RTN","SCRPU1",37,0)
 .S NODE=$G(^SCTM(404.57,ENT,0))
"RTN","SCRPU1",38,0)
 .I NODE="" S STOP=0 Q
"RTN","SCRPU1",39,0)
 .S TIEN=+$P(NODE,"^",2) ;team ien
"RTN","SCRPU1",40,0)
 .I $D(VAUTT(TIEN))!(VAUTT=1) S STOP=1 Q
"RTN","SCRPU1",41,0)
 .I VAUTT=""&(TIEN="") S STOP=1 Q  ;no team selected, no team assigned
"RTN","SCRPU1",42,0)
 .I VAUTT'=1&('$D(VAUTT(TIEN))) S STOP=0
"RTN","SCRPU1",43,0)
 Q STOP
"RTN","SCRPU1",44,0)
 ;
"RTN","SCRPU1",45,0)
ROLE ;Prompt for Role
"RTN","SCRPU1",46,0)
 I '$D(VAUTT) G ERR
"RTN","SCRPU1",47,0)
 S VAUTVB="VAUTR",DIC="^SD(403.46,",VAUTSTR="Role",VAUTNI=2
"RTN","SCRPU1",48,0)
 S DIC("S")="I $$RL^SCRPU1()"
"RTN","SCRPU1",49,0)
 G FIRST
"RTN","SCRPU1",50,0)
 ;
"RTN","SCRPU1",51,0)
RL() ;Screen for Role - screen on team
"RTN","SCRPU1",52,0)
 N EN,STOP,ACT,TEAM
"RTN","SCRPU1",53,0)
 S EN="",STOP=0
"RTN","SCRPU1",54,0)
 I $D(^SCTM(404.57,"AC",+Y)) D
"RTN","SCRPU1",55,0)
 .F  S EN=$O(^SCTM(404.57,"AC",+Y,EN)) Q:EN=""!(STOP)  D
"RTN","SCRPU1",56,0)
 ..S ACT=+$$ACTTP^SCMCTPU(EN) ;currently active?
"RTN","SCRPU1",57,0)
 ..I 'ACT!('$D(^SCTM(404.57,EN,0))) Q
"RTN","SCRPU1",58,0)
 ..S TEAM=$P(^SCTM(404.57,EN,0),"^",2)
"RTN","SCRPU1",59,0)
 ..I $D(VAUTT(TEAM))!(VAUTT=1) S STOP=1
"RTN","SCRPU1",60,0)
 ..I VAUTT=""&(TEAM="") S STOP=1
"RTN","SCRPU1",61,0)
 Q STOP
"RTN","SCRPU1",62,0)
 ;
"RTN","SCRPU1",63,0)
PRACT ; Prompt for One (set VAUTPO) or One,Many,All,None Practitioner(s)
"RTN","SCRPU1",64,0)
 I '$D(VAUTT) G ERR
"RTN","SCRPU1",65,0)
 S VAUTVB="VAUTP",VAUTSTR="Practitioner",VAUTNI=2,DIC="^VA(200,"
"RTN","SCRPU1",66,0)
 S DIC("S")="I $$PRACS^SCRPU1()"
"RTN","SCRPU1",67,0)
 G FIRST
"RTN","SCRPU1",68,0)
 ;
"RTN","SCRPU1",69,0)
PRACS() ;Practitioner screen - off of team selection
"RTN","SCRPU1",70,0)
 N EN,STOP,NODE,TEAM
"RTN","SCRPU1",71,0)
 S EN="",STOP=0
"RTN","SCRPU1",72,0)
 I '$D(^SCTM(404.52,"C",+Y)) Q 0
"RTN","SCRPU1",73,0)
 ;Position Assignment History file
"RTN","SCRPU1",74,0)
 F  S EN=$O(^SCTM(404.52,"C",+Y,EN)) Q:EN=""!(STOP)  D
"RTN","SCRPU1",75,0)
 .I '$D(^SCTM(404.52,EN)) Q
"RTN","SCRPU1",76,0)
 .S NODE=$G(^SCTM(404.52,EN,0))
"RTN","SCRPU1",77,0)
 .S TEAM=+$P($G(^SCTM(404.57,$P(NODE,"^"),0)),"^",2)
"RTN","SCRPU1",78,0)
 .I $P(NODE,"^",4),$D(VAUTT(TEAM)) S STOP=1
"RTN","SCRPU1",79,0)
 .I VAUTT=1 S STOP=1
"RTN","SCRPU1",80,0)
 Q STOP
"RTN","SCRPU1",81,0)
 ;
"RTN","SCRPU1",82,0)
FIRST ;
"RTN","SCRPU1",83,0)
 S DIC(0)="EQMNZ",DIC("A")="Select "_VAUTSTR_": " K @VAUTVB
"RTN","SCRPU1",84,0)
 S (@VAUTVB,Y)=0
"RTN","SCRPU1",85,0)
REDO W !,DIC("A") R X:DTIME G ERR:(X="^")!'$T D:X["?"!(X=""&('$G(SCOKNULL))) HELP^SCRPU3
"RTN","SCRPU1",86,0)
 G:$G(SCOKNULL)&(X="") QUIT
"RTN","SCRPU1",87,0)
 I X="A"!(X="ALL")&'$D(VAUTNA) S @VAUTVB=1 G QUIT
"RTN","SCRPU1",88,0)
 ;VAUTNA doesn't allow all to be selected
"RTN","SCRPU1",89,0)
 ;VAUTTN allows 'Not assigned to a team' as a selection
"RTN","SCRPU1",90,0)
 I X="N"!(X="NOT")!(X="NONE") I $D(VAUTTN)!($D(VAUTPP)) S @VAUTVB="" G QUIT
"RTN","SCRPU1",91,0)
 ;VAUTPP allows 'Not assigned to a practitioner' as a selection
"RTN","SCRPU1",92,0)
 S DIC("A")="Select another "_VAUTSTR_": " D ^DIC G:Y'>0 FIRST D SET
"RTN","SCRPU1",93,0)
 I '$D(VAUTPO) F VAI=1:0:19 W !,DIC("A") R X:DTIME G ERR:(X="")!(X="^")!'$T K Y D HELP^SCRPU3:X["?" S:$E(X)="-" VAUTX=X,X=$E(VAUTX,2,999) D ^DIC I Y>0 D SET G:VAX REDO S:'VAERR VAI=VAI+1
"RTN","SCRPU1",94,0)
 ;VAUTPO - only one practitioner allowed to be selected
"RTN","SCRPU1",95,0)
 G QUIT
"RTN","SCRPU1",96,0)
SET S VAX=0 I $D(VAUTX) S J=$S(VAUTNI=2:+Y,1:$P(Y(0),"^")) K VAUTX S VAERR=$S($D(@VAUTVB@(J)):0,1:1) W $S('VAERR:"...removed from list...",1:"...not on list...can't remove") Q:VAERR  S VAI=VAI-1 K @VAUTVB@(J) S:$O(@VAUTVB@(0))']"" VAX=1 Q
"RTN","SCRPU1",97,0)
 S VAERR=0 I $S($D(@VAUTVB@($P(Y(0),U))):1,$D(@VAUTVB@(+Y)):1,1:0) W !?3,*7,"You have already selected that ",VAUTSTR,".  Try again." S VAERR=1
"RTN","SCRPU1",98,0)
 S @VAUTVB@(+Y)=$P(Y(0),U)
"RTN","SCRPU1",99,0)
 Q
"RTN","SCRPU1",100,0)
 ;
"RTN","SCRPU1",101,0)
ERR S Y=-1 I $O(@VAUTVB@(0))="" K @VAUTVB I X="^" S SCUP=""
"RTN","SCRPU1",102,0)
QUIT S:'$D(Y) Y=1
"RTN","SCRPU1",103,0)
 I $D(@VAUTVB),VAUTSTR="Team",@VAUTVB=1 D EN^DDIOL("All Teams selected, this report may take some time...","","!,?10")
"RTN","SCRPU1",104,0)
 K DIC,J,VAERR,VAI,VAJ,VAJ1,VAX,VAUTNI,VAUTSTR,VAUTVB,X
"RTN","SCRPU1",105,0)
 Q
"RTN","SCRPU1",106,0)
 ;
"RTN","SCRPU1",107,0)
CLSC() ;screen on clinic selection, must be related to team prompt
"RTN","SCRPU1",108,0)
 I $P(^(0),U,3)'="C" Q 0
"RTN","SCRPU1",109,0)
 N TRUE,EN,TEAM
"RTN","SCRPU1",110,0)
 S TRUE=0,EN=""
"RTN","SCRPU1",111,0)
 F  S EN=$O(^SCTM(404.57,"D",+Y,EN)) Q:EN=""!(TRUE)  D
"RTN","SCRPU1",112,0)
 .S TEAM=+$P($G(^SCTM(404.57,EN,0)),"^",2)
"RTN","SCRPU1",113,0)
 .I $D(VAUTT(TEAM))!(VAUTT=1) S TRUE=1
"RTN","SCRPU1",114,0)
 I VAUTT="" S TRUE=1
"RTN","SCRPU1",115,0)
 Q TRUE
"RTN","SCRPU1",116,0)
 ;
"RTN","SCRPU1",117,0)
CLSC2() ;screen on clinic selection, must be a clinic
"RTN","SCRPU1",118,0)
 I $P(^(0),U,3)'="C" Q 0
"RTN","SCRPU1",119,0)
 Q 1
"RTN","SCRPU1",120,0)
 ;
"RTN","SCRPU1",121,0)
CLSC2OLD() ;screen on clinic selection, must be related to division prompt
"RTN","SCRPU1",122,0)
 I $P(^(0),U,3)'="C" Q 0
"RTN","SCRPU1",123,0)
 N TRUE,EN,INST,TDIV
"RTN","SCRPU1",124,0)
 S TRUE=0,EN=""
"RTN","SCRPU1",125,0)
 S TDIV=+$P(^(0),U,15) ;clinic's division
"RTN","SCRPU1",126,0)
 Q:TDIV=0 0
"RTN","SCRPU1",127,0)
 S INST=+$P(^DG(40.8,TDIV,0),U,7)
"RTN","SCRPU1",128,0)
 I '$D(VAUTD(INST))&(VAUTD'="") S TRUE=0
"RTN","SCRPU1",129,0)
 I $D(VAUTD(INST)) S TRUE=1
"RTN","SCRPU1",130,0)
 I VAUTD=1 S TRUE=1
"RTN","SCRPU1",131,0)
 Q TRUE
"RTN","SCRPU3")
0^7^B16555872
"RTN","SCRPU3",1,0)
SCRPU3 ;ALB/CMM - GENERIC UTILITIES ;1/16/96
"RTN","SCRPU3",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SCRPU3",3,0)
 ;
"RTN","SCRPU3",4,0)
ELIG(DFN) ;
"RTN","SCRPU3",5,0)
 ;Gets Primary Eligibility
"RTN","SCRPU3",6,0)
 N PRIM
"RTN","SCRPU3",7,0)
 I '$D(^DPT(DFN,.36)) Q 0
"RTN","SCRPU3",8,0)
 I '$D(^DIC(8,+$P(^DPT(DFN,.36),"^"),0)) Q 0
"RTN","SCRPU3",9,0)
 S PRIM=$P($G(^DIC(8,$P($G(^DPT(DFN,.36)),"^"),0)),"^",9)
"RTN","SCRPU3",10,0)
 ;MAS Primary Eligibility Code
"RTN","SCRPU3",11,0)
 S PRIM=$P($G(^DIC(8.1,PRIM,0)),"^")
"RTN","SCRPU3",12,0)
 ;
"RTN","SCRPU3",13,0)
 S PRIM=$TR(PRIM,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SCRPU3",14,0)
 I PRIM="NON-SERVICE CONNECTED" S PRIM="NSC"
"RTN","SCRPU3",15,0)
 I PRIM["SERVICE CONNECTED" S PRIM=$P(PRIM,"SERVICE CONNECTED")_"SC"_$P(PRIM,"SERVICE CONNECTED",2,999)
"RTN","SCRPU3",16,0)
 I PRIM["LESS THAN" S PRIM=$P(PRIM,"LESS THAN")_"<"_$P(PRIM,"LESS THAN",2,999)
"RTN","SCRPU3",17,0)
 I PRIM[" TO " S PRIM=$P(PRIM," TO ")_"-"_$P(PRIM," TO ",2,999)
"RTN","SCRPU3",18,0)
 I PRIM["%" S PRIM=$TR(PRIM,"%","")
"RTN","SCRPU3",19,0)
 S PRIM=$E(PRIM,1,9)
"RTN","SCRPU3",20,0)
 Q PRIM
"RTN","SCRPU3",21,0)
 ;
"RTN","SCRPU3",22,0)
GETNEXT(DFN,CLN) ;
"RTN","SCRPU3",23,0)
 ;Get next appointment for patient (DFN) at Clinic (CLN)
"RTN","SCRPU3",24,0)
 ;Returning the date in 00/00/00 format
"RTN","SCRPU3",25,0)
 N NEXT,APPT,FOUND
"RTN","SCRPU3",26,0)
 S APPT=DT,FOUND=0,NEXT=""
"RTN","SCRPU3",27,0)
 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:APPT=""!(FOUND)  D
"RTN","SCRPU3",28,0)
 .I CLN=+$G(^DPT(DFN,"S",APPT,0))&($P(^DPT(DFN,"S",APPT,0),"^",2)'["C") S FOUND=1,NEXT=$E(APPT,4,5)_"/"_$E(APPT,6,7)_"/"_$E(APPT,2,3)
"RTN","SCRPU3",29,0)
 Q NEXT
"RTN","SCRPU3",30,0)
 ;
"RTN","SCRPU3",31,0)
GETLAST(DFN,CLN) ;
"RTN","SCRPU3",32,0)
 ;Get last appointment for patient (DFN) at Clinic (CLN)
"RTN","SCRPU3",33,0)
 ;Returning the date in 00/00/00 format
"RTN","SCRPU3",34,0)
 N LAST,APPT,FOUND
"RTN","SCRPU3",35,0)
 S APPT=DT,FOUND=0,LAST=""
"RTN","SCRPU3",36,0)
 F  S APPT=$O(^DPT(DFN,"S",APPT),-1) Q:APPT=""!(APPT=0)!(FOUND)  D
"RTN","SCRPU3",37,0)
 .I CLN=+$G(^DPT(DFN,"S",APPT,0))&($P(^DPT(DFN,"S",APPT,0),"^",2)'["C") S FOUND=1,LAST=$E(APPT,4,5)_"/"_$E(APPT,6,7)_"/"_$E(APPT,2,3)
"RTN","SCRPU3",38,0)
 Q LAST
"RTN","SCRPU3",39,0)
 ;
"RTN","SCRPU3",40,0)
PDEVICE() ;
"RTN","SCRPU3",41,0)
 ;Generic Printer Call
"RTN","SCRPU3",42,0)
 N TION,POP
"RTN","SCRPU3",43,0)
 S %ZIS="QN" D ^%ZIS K %ZIS Q:POP!(ION="^") -1
"RTN","SCRPU3",44,0)
 S TION=ION
"RTN","SCRPU3",45,0)
 I $D(IO("Q")) S TION="Q;"_TION
"RTN","SCRPU3",46,0)
 Q TION_"^"_IOST
"RTN","SCRPU3",47,0)
 ;
"RTN","SCRPU3",48,0)
GETTIME() ;
"RTN","SCRPU3",49,0)
 ;Prompt for Queue Time
"RTN","SCRPU3",50,0)
 N X,Y
"RTN","SCRPU3",51,0)
 S DIR(0)="D^NOW::RE",DIR("A")="Start Time ",DIR("B")="NOW"
"RTN","SCRPU3",52,0)
 D ^DIR
"RTN","SCRPU3",53,0)
 I $D(DTOUT)!(X="") S Y=$H
"RTN","SCRPU3",54,0)
 I $D(DUOUT)!($D(DIROUT)) S Y=-1
"RTN","SCRPU3",55,0)
 K DIR,DTOUT,DUOUT,DIROUT
"RTN","SCRPU3",56,0)
 Q Y
"RTN","SCRPU3",57,0)
 ;
"RTN","SCRPU3",58,0)
HOLD(PAGE,TIT) ;
"RTN","SCRPU3",59,0)
 ;device is home, reached end of page
"RTN","SCRPU3",60,0)
 N X
"RTN","SCRPU3",61,0)
 W !!,"Press Any Key to Continue or '^' to Quit" R X:DTIME
"RTN","SCRPU3",62,0)
 I '$T!(X="^") S STOP=1 Q
"RTN","SCRPU3",63,0)
 D NEWP1(.PAGE,TIT)
"RTN","SCRPU3",64,0)
 Q
"RTN","SCRPU3",65,0)
 ;
"RTN","SCRPU3",66,0)
NEWP1(PAGE,TITL) ;
"RTN","SCRPU3",67,0)
 ;new page
"RTN","SCRPU3",68,0)
 ;
"RTN","SCRPU3",69,0)
 D STOPCHK^DGUTL
"RTN","SCRPU3",70,0)
 I $G(STOP) D STOPPED^DGUTL Q
"RTN","SCRPU3",71,0)
 W @IOF
"RTN","SCRPU3",72,0)
 S PAGE=PAGE+1
"RTN","SCRPU3",73,0)
 D TITLE(PAGE,TITL)
"RTN","SCRPU3",74,0)
 Q
"RTN","SCRPU3",75,0)
 ;
"RTN","SCRPU3",76,0)
TITLE(PG,TITL) ;
"RTN","SCRPU3",77,0)
 N PDATE,CEN
"RTN","SCRPU3",78,0)
 S PDATE=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","SCRPU3",79,0)
 W !,"Printed on: ",PDATE,?25,TITL,?70,"PAGE: ",PG,!
"RTN","SCRPU3",80,0)
 Q
"RTN","SCRPU3",81,0)
 ;
"RTN","SCRPU3",82,0)
CLOSE ;close device
"RTN","SCRPU3",83,0)
 D ^%ZISC
"RTN","SCRPU3",84,0)
 Q
"RTN","SCRPU3",85,0)
 ;
"RTN","SCRPU3",86,0)
OPEN ;opens device
"RTN","SCRPU3",87,0)
 ;I $D(SCMJK) S IOP="HOME" ; -- added for testing broker code (mjk)
"RTN","SCRPU3",88,0)
 D ^%ZIS
"RTN","SCRPU3",89,0)
 U IO
"RTN","SCRPU3",90,0)
 I IOST?1"C-".E W @IOF
"RTN","SCRPU3",91,0)
 Q
"RTN","SCRPU3",92,0)
 ;
"RTN","SCRPU3",93,0)
NODATA(TITL) ;
"RTN","SCRPU3",94,0)
 ;no data to print
"RTN","SCRPU3",95,0)
 ;returns 1
"RTN","SCRPU3",96,0)
 D OPEN
"RTN","SCRPU3",97,0)
 D TITLE(1,TITL)
"RTN","SCRPU3",98,0)
 W !,"No data to report"
"RTN","SCRPU3",99,0)
 D CLOSE
"RTN","SCRPU3",100,0)
 Q 1
"RTN","SCRPU3",101,0)
 ;
"RTN","SCRPU3",102,0)
HELP W:'$D(VAUTNA) !,"ENTER:",!?5,"- A or ALL for all ",VAUTSTR,"s, or"
"RTN","SCRPU3",103,0)
 W:($D(VAUTTN))&(VAUTSTR="TEAM") !?5,"- N or NOT for not assigned to a team or"
"RTN","SCRPU3",104,0)
 W:($D(VAUTPO))&(VAUTSTR="PRACTITIONER") !?5,"- N or NONE or NOT for not assigned to a Practitioner"
"RTN","SCRPU3",105,0)
 W !?5,"- Select individual "_VAUTSTR W:'$D(VAUTPO) " -- limit 20"
"RTN","SCRPU3",106,0)
 W !?5,"Imprecise selections will yield an additional prompt."
"RTN","SCRPU3",107,0)
 I $O(@VAUTVB@(0))]"" W !?5,"- An entry preceeded by a minus [-] sign to remove entry from list."
"RTN","SCRPU3",108,0)
 I $O(@VAUTVB@(0))]"" W !,"NOTE, you have already selected:" S VAJ=0 F VAJ1=0:0 S VAJ=$O(@VAUTVB@(VAJ)) Q:VAJ=""  W !?8,$S(VAUTNI=1:VAJ,1:@VAUTVB@(VAJ))
"RTN","SCRPU3",109,0)
 Q
"RTN","SCRPU3",110,0)
 ;
"RTN","SCRPU3",111,0)
CONV(ORIGA,NEWA) ;
"RTN","SCRPU3",112,0)
 ;ORIGA - original array - name(ien)=data
"RTN","SCRPU3",113,0)
 ;NEWA - new array - name(n)=ien^data
"RTN","SCRPU3",114,0)
 ;
"RTN","SCRPU3",115,0)
 N ENT,CNT
"RTN","SCRPU3",116,0)
 S ENT=0,CNT=0
"RTN","SCRPU3",117,0)
 S NEWA=ORIGA
"RTN","SCRPU3",118,0)
 F  S ENT=$O(ORIGA(ENT)) Q:ENT=""!(ENT'?.N)  D
"RTN","SCRPU3",119,0)
 .S CNT=CNT+1
"RTN","SCRPU3",120,0)
 .S NEWA(CNT)=ENT_"^"_ORIGA(ENT)
"RTN","SCRPU3",121,0)
 Q
"RTN","SD5345EN")
0^10^B2713617
"RTN","SD5345EN",1,0)
SD5345EN ;ALB/REW - SD*5.3*45 Environment Checker ; 7 JUN 1996
"RTN","SD5345EN",2,0)
 ;;5.3;Scheduling;**45**;AUG 13, 1993
"RTN","SD5345EN",3,0)
EN ;entry point
"RTN","SD5345EN",4,0)
 W !,"SD*5.3*45 Installation Requirements:",!
"RTN","SD5345EN",5,0)
 IF $D(XPDABORT)#2 W !!?4,"*** Warning: Because variable XPDABORT exists, SD*5.3*45 will not install."
"RTN","SD5345EN",6,0)
 N SCX,SCPATCH,SCROUT,SCCOMM,SC2LINE,SC2DATA,SCGLOB,SC2CHECK,SCARR,SCSUB
"RTN","SD5345EN",7,0)
 W !,">>> Checking Programmer Variables:"
"RTN","SD5345EN",8,0)
 IF +$G(DUZ)'>0!($G(DUZ(0))'="@")!($G(U)'="^")!('$D(DT)) D  Q
"RTN","SD5345EN",9,0)
 . S XPDABORT=2
"RTN","SD5345EN",10,0)
 . W !,"You must first initialize Programmer Environment by running ^XUP",!
"RTN","SD5345EN",11,0)
 ELSE  D
"RTN","SD5345EN",12,0)
 . W " ...Ok"
"RTN","SD5345EN",13,0)
PKGCHK ;check package file entries
"RTN","SD5345EN",14,0)
 W !,">>> Checking PACKAGE File Entries:"
"RTN","SD5345EN",15,0)
 F SCX=1:1 S SCPATCH=$P($T(PACKAGE+SCX),";;",2) Q:'$L(SCPATCH)  D
"RTN","SD5345EN",16,0)
 .N SCPKG,SCVER,SCPTC,SCPKGI,SCVERI
"RTN","SD5345EN",17,0)
 .W !,?5,SCPATCH
"RTN","SD5345EN",18,0)
 .IF '$$PATCH^XPDUTL(SCPATCH) D
"RTN","SD5345EN",19,0)
 ..S XPDABORT=2
"RTN","SD5345EN",20,0)
 ..W:$G(XPDABORT) !,"Missing Required (Package/Patch) Entry: ",SCPATCH
"RTN","SD5345EN",21,0)
 .ELSE  D
"RTN","SD5345EN",22,0)
 ..W " ...Ok"
"RTN","SD5345EN",23,0)
 ;check patched routines
"RTN","SD5345EN",24,0)
 W:$D(XPDABORT) !,">>> SD*5.3*45 Aborted in Environment Checker"
"RTN","SD5345EN",25,0)
 W:'$D(XPDABORT) !!,">>> Environment is Ok"
"RTN","SD5345EN",26,0)
 Q
"RTN","SD5345EN",27,0)
 ;
"RTN","SD5345EN",28,0)
PACKAGE ;
"RTN","SD5345EN",29,0)
 ;;SD*5.3*41
"RTN","SD5345EN",30,0)
 ;;XU*8.0*32
"RTN","SDNEXT")
0^6^B18500514
"RTN","SDNEXT",1,0)
SDNEXT ;ALB/TMP - FIND NEXT AVAILABLE APPOINTMENT FOR A CLINIC ; 18 APR 86
"RTN","SDNEXT",2,0)
 ;;5.3;Scheduling;**41,45**;AUG 13, 1993
"RTN","SDNEXT",3,0)
 ;
"RTN","SDNEXT",4,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","SDNEXT",5,0)
1 S SDNEXT="",SDCT=0 G RD^SDMULT
"RTN","SDNEXT",6,0)
DT S FND=0,%DT(0)=-SDMAX,%DT="AEF",%DT("A")="  START SEARCH FOR NEXT AVAILABLE FROM WHAT DATE: " D ^%DT K %DT G:"^"[X 1:$S('$D(SDNEXT):1,'SDNEXT:1,1:0),END^SDMULT0 G:Y<0 DT S SDSTRTDT=+Y
"RTN","SDNEXT",7,0)
LIM W !,"  ENTER LATEST DATE TO CHECK FOR 1ST AVAILABLE SLOT: " S Y=SDMAX D DT^DIQ R "// ",X:DTIME G:X["^"!'($T) END^SDMULT0 I X']"" G OVR^SDMULT0
"RTN","SDNEXT",8,0)
 I X?.E1"?" W !,"  The latest date for future bookings for ",$P(SDC(1),"^",2)," is: " S Y=SDMAX D DTS^SDUTL W Y,!,"  If you enter a date here, it must be less than this date to further limit the",!,"  search" G LIM
"RTN","SDNEXT",9,0)
 S %DT="EF",%DT(0)=-SDMAX D ^%DT K %DT G:Y<0!(Y<SDSTRTDT) LIM S:Y>0 SDMAX=+Y
"RTN","SDNEXT",10,0)
 G OVR^SDMULT0
"RTN","SDNEXT",11,0)
 ;
"RTN","SDNEXT",12,0)
NEW ;entry point to be use for next available appt. 3/29/96
"RTN","SDNEXT",13,0)
 K VAUTT,VAUTC,SCUP
"RTN","SDNEXT",14,0)
 N SCOKNULL
"RTN","SDNEXT",15,0)
 S SCOKNULL=1
"RTN","SDNEXT",16,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","SDNEXT",17,0)
 S SDNEXT="",SDCT=0
"RTN","SDNEXT",18,0)
 S VAUTNA="" ;don't allow all to be selected
"RTN","SDNEXT",19,0)
 S VAUTCA="" ;allow any clinic to be selected
"RTN","SDNEXT",20,0)
 S VAUTD=1 ;all divisions
"RTN","SDNEXT",21,0)
 D CLINIC^SCRPU1 ;prompt for clinics (none,one,many)
"RTN","SDNEXT",22,0)
 Q:$D(SCUP)  ; "^" SELECTED
"RTN","SDNEXT",23,0)
 D PRMTT^SCRPU1 ;prompt for team (none,one,many)
"RTN","SDNEXT",24,0)
 Q:('$D(VAUTT))&('$D(VAUTC))
"RTN","SDNEXT",25,0)
 Q:$D(SCUP)  ; "^" SELECTED
"RTN","SDNEXT",26,0)
 S APPTL=$$LENGTH()
"RTN","SDNEXT",27,0)
 Q:APPTL<0
"RTN","SDNEXT",28,0)
 S FIRST="First date to check for 1st available appointments: "
"RTN","SDNEXT",29,0)
 S SECOND="Latest date to check for available appointments: "
"RTN","SDNEXT",30,0)
 S RANG=$$DTRANG^SCRPU2(FIRST,SECOND)
"RTN","SDNEXT",31,0)
 I RANG=-1 D CLEAN,EXIT Q
"RTN","SDNEXT",32,0)
 I $D(VAUTT) D GETCLN(.VAUTT,.VAUTC)
"RTN","SDNEXT",33,0)
 ;all clinics selected & position assoc clinics in VAUTC(ien)=clinic name
"RTN","SDNEXT",34,0)
 D DRIVE(.VAUTC,APPTL,RANG)
"RTN","SDNEXT",35,0)
 D CLEAN,EXIT
"RTN","SDNEXT",36,0)
 Q
"RTN","SDNEXT",37,0)
EXIT ;
"RTN","SDNEXT",38,0)
 K VAUTD,VAUTNA,VAUTT,VAUTC,FIRST,SECOND,RANG,APPTL,SCPCMM,SDNEXT,SDCT
"RTN","SDNEXT",39,0)
 K VAUTCA,SCUP
"RTN","SDNEXT",40,0)
 Q
"RTN","SDNEXT",41,0)
 ;
"RTN","SDNEXT",42,0)
LENGTH() ;
"RTN","SDNEXT",43,0)
 ;prompt for appointment length
"RTN","SDNEXT",44,0)
 N LEN
"RTN","SDNEXT",45,0)
ST S DIR(0)="N"
"RTN","SDNEXT",46,0)
 S DIR("A")="Appointment Length Needed "
"RTN","SDNEXT",47,0)
 D ^DIR
"RTN","SDNEXT",48,0)
 I Y=""!(X="^")!(X="") S LEN=-1 G EX
"RTN","SDNEXT",49,0)
 S LEN=X
"RTN","SDNEXT",50,0)
EX K DIR,Y,X
"RTN","SDNEXT",51,0)
 Q LEN
"RTN","SDNEXT",52,0)
 ;
"RTN","SDNEXT",53,0)
GETCLN(TEAM,CLINIC) ;add assoc. clinics for teams to clinic array
"RTN","SDNEXT",54,0)
 ;TEAM - team array
"RTN","SDNEXT",55,0)
 ;CLINIC - clinic array
"RTN","SDNEXT",56,0)
 ;
"RTN","SDNEXT",57,0)
 N TM,LIST,ERR,OKAY
"RTN","SDNEXT",58,0)
 S TM=0,LIST="TPLIST",ERR="ERR1"
"RTN","SDNEXT",59,0)
 F  S TM=$O(TEAM(TM)) Q:TM=""!(TM'?.N)  D
"RTN","SDNEXT",60,0)
 .K @LIST,@ERR
"RTN","SDNEXT",61,0)
 .S OKAY=$$TPTM^SCAPMC24(TM,"","","",LIST,ERR)
"RTN","SDNEXT",62,0)
 .;@LIST contains all positions for team TM
"RTN","SDNEXT",63,0)
 .I $G(@LIST@(0))>0 D ADDCL(.CLINIC,LIST)
"RTN","SDNEXT",64,0)
 Q
"RTN","SDNEXT",65,0)
 ;
"RTN","SDNEXT",66,0)
ADDCL(CLINIC,PTLIST) ;add team's associated clinics to clinic list
"RTN","SDNEXT",67,0)
 ;CLINIC - array of selected clinics
"RTN","SDNEXT",68,0)
 ;PTLIST - array of all positions for a selected team
"RTN","SDNEXT",69,0)
 N CNAME,CIEN,TPNODE,TPIEN,NODE,EN
"RTN","SDNEXT",70,0)
 S EN=0
"RTN","SDNEXT",71,0)
 F  S EN=$O(@PTLIST@(EN)) Q:EN=""!(EN'?.N)  D
"RTN","SDNEXT",72,0)
 .S NODE=$G(@PTLIST@(EN))
"RTN","SDNEXT",73,0)
 .S TPIEN=+$P(NODE,"^") ;team position ien
"RTN","SDNEXT",74,0)
 .S TPNODE=$G(^SCTM(404.57,TPIEN,0))
"RTN","SDNEXT",75,0)
 .Q:TPNODE=""
"RTN","SDNEXT",76,0)
 .S CIEN=+$P(TPNODE,"^",9) ;clinic ien
"RTN","SDNEXT",77,0)
 .Q:CIEN=0  ;no associated clinic
"RTN","SDNEXT",78,0)
 .S CNAME=$P($G(^SC(CIEN,0)),"^") ;clinic name
"RTN","SDNEXT",79,0)
 .S CLINIC(CIEN)=CNAME
"RTN","SDNEXT",80,0)
 Q
"RTN","SDNEXT",81,0)
 ;
"RTN","SDNEXT",82,0)
DRIVE(CLINICA,LEN,BEGEND) ;driver
"RTN","SDNEXT",83,0)
 ;CLINICA - clinic array
"RTN","SDNEXT",84,0)
 ;LEN - appt. length wanted
"RTN","SDNEXT",85,0)
 ;BEGEND - begin date ^ end date
"RTN","SDNEXT",86,0)
 ;
"RTN","SDNEXT",87,0)
 N CIEN,COUNT,CONT
"RTN","SDNEXT",88,0)
 S SDNEXT="",SDCT=1
"RTN","SDNEXT",89,0)
 S CIEN=0,STOP=0,COUNT=1
"RTN","SDNEXT",90,0)
 F  S CIEN=$O(CLINICA(CIEN)) Q:CIEN=""!(CIEN'?.N)!(STOP)  D
"RTN","SDNEXT",91,0)
 .S SDNEXT=""
"RTN","SDNEXT",92,0)
 .S SDSTRTDT=$P(BEGEND,"^")
"RTN","SDNEXT",93,0)
 .S SDMAX=$P(BEGEND,"^",2)
"RTN","SDNEXT",94,0)
 .S SDC(COUNT)=CIEN,SDC1(CIEN)=$G(CLINICA(CIEN))_"^"_LEN
"RTN","SDNEXT",95,0)
 .S SDCT=COUNT,SC=CIEN
"RTN","SDNEXT",96,0)
 .D OVR^SDMULT0
"RTN","SDNEXT",97,0)
 .K SDC(COUNT),SDC1(CIEN)
"RTN","SDNEXT",98,0)
 .S CONT=$$CONMA(CIEN)
"RTN","SDNEXT",99,0)
 .Q:STOP
"RTN","SDNEXT",100,0)
 I $G(CONT)="M" D CLEAN S:$$ONE(.CLINICA) SDCLN=$O(CLINICA(0)) G ^SDM
"RTN","SDNEXT",101,0)
 Q
"RTN","SDNEXT",102,0)
CLEAN ;
"RTN","SDNEXT",103,0)
 D END^SDMULT0
"RTN","SDNEXT",104,0)
 K SDSTRTDT,SDNEXT,SDMAX,SDC,SDCT,SDC1,SDL,STOP,SDAPP,SDPCMM,SDCLN,FND
"RTN","SDNEXT",105,0)
 K SCPCC,SDPCM1,SC
"RTN","SDNEXT",106,0)
 Q
"RTN","SDNEXT",107,0)
 ;
"RTN","SDNEXT",108,0)
ONE(CLNA) ;one clinic selected? 1 or 0
"RTN","SDNEXT",109,0)
 N CNT,FIRST,RET,STP
"RTN","SDNEXT",110,0)
 S (CNT,STP)=0,RET=1
"RTN","SDNEXT",111,0)
 F  S CNT=$O(CLNA(CNT)) Q:CNT=""!(STP)  D
"RTN","SDNEXT",112,0)
 .I $D(FIRST) S STOP=1,RET=0
"RTN","SDNEXT",113,0)
 .I '$D(FIRST) S FIRST=1
"RTN","SDNEXT",114,0)
 Q RET
"RTN","SDNEXT",115,0)
 ;
"RTN","SDNEXT",116,0)
CONMA(CIEN) ;continue to view, exit or make appointment
"RTN","SDNEXT",117,0)
 ;
"RTN","SDNEXT",118,0)
PRT I $G(SDPCMM(CIEN))'>0 Q -1
"RTN","SDNEXT",119,0)
 W !,"'^' TO EXIT, 'C' TO CONTINUE OR 'M' TO GOTO MAKE APPOINTMENT: CONTINUE//" R X:DTIME
"RTN","SDNEXT",120,0)
 I '$T!(X="^") S STOP=1,X=-1 G EX2
"RTN","SDNEXT",121,0)
 I (X'="^")&(X'="C")&(X'="M")&(X'="") G PRT
"RTN","SDNEXT",122,0)
 I X="M" S STOP=1
"RTN","SDNEXT",123,0)
 I X="" S X="C"
"RTN","SDNEXT",124,0)
EX2 Q X
"UP",44,44.1,-1)
44^PR
"UP",44,44.1,0)
44.1
"VER")
8.0^21.0
"^DD",44,44,16,0)
DEFAULT PROVIDER^*P200'^VA(200,^0;13^S DIC("S")="I $$SCREEN^DGPMDD(Y,DA,DT)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,16,4)
D HELP^DGPMDD(DA,DT)
"^DD",44,44,16,12)
Provider must be active.
"^DD",44,44,16,12.1)
S DIC("S")="I $$SCREEN^DGPMDD(Y,DA,DT)"
"^DD",44,44,16,21,0)
^^1^1^2960626^^^^
"^DD",44,44,16,21,1,0)
Default provider or physician that is assigned to specific clinic.
"^DD",44,44,16,"DT")
2960626
"^DD",44,44,2600,0)
PROVIDER^44.1P^^PR;0
"^DD",44,44,2600,21,0)
^^4^4^2960626^^^
"^DD",44,44,2600,21,1,0)
Enter in this field the providers associated with this clinic.  These
"^DD",44,44,2600,21,2,0)
providers will then be displayed when updating the provider through
"^DD",44,44,2600,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44,2600,21,4,0)
the correct provider.
"^DD",44,44.1,0)
PROVIDER SUB-FIELD^^.02^2
"^DD",44,44.1,0,"NM","PROVIDER")

"^DD",44,44.1,.01,0)
PROVIDER^M*P200'^VA(200,^0;1^S DIC("S")="I $$SCREEN^DGPMDD(Y,DA,DT)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.1,.01,1,0)
^.1
"^DD",44,44.1,.01,1,1,0)
44.1^B
"^DD",44,44.1,.01,1,1,1)
S ^SC(DA(1),"PR","B",$E(X,1,30),DA)=""
"^DD",44,44.1,.01,1,1,2)
K ^SC(DA(1),"PR","B",$E(X,1,30),DA)
"^DD",44,44.1,.01,4)
D HELP^DGPMDD(DA,DT)
"^DD",44,44.1,.01,12)
Provider must be active.
"^DD",44,44.1,.01,12.1)
S DIC("S")="I $$SCREEN^DGPMDD(Y,DA,DT)"
"^DD",44,44.1,.01,21,0)
^^4^4^2960626^^^
"^DD",44,44.1,.01,21,1,0)
Enter in this field the providers associated with this clinic.  These
"^DD",44,44.1,.01,21,2,0)
providers will then be displayed when updating the provider through
"^DD",44,44.1,.01,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44.1,.01,21,4,0)
the correct provider.
"^DD",44,44.1,.01,"DT")
2960626
**END**
**END**
