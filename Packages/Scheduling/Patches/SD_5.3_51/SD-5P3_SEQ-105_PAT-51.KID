Released SD*5.3*51 SEQ #105
Extracted from mail message
**KIDS**:SD*5.3*51^

**INSTALL NAME**
SD*5.3*51
"BLD",234,0)
SD*5.3*51^SCHEDULING^0^2970219^n
"BLD",234,1,0)
^^2^2^2970219^^^
"BLD",234,1,1,0)
PCMM GUI fixes - This is a combined client server patch.  Client software
"BLD",234,1,2,0)
is contained in SD_53_51.exe.
"BLD",234,4,0)
^9.64PA^^
"BLD",234,"KRN",0)
^9.67PA^19^18
"BLD",234,"KRN",.4,0)
.4
"BLD",234,"KRN",.401,0)
.401
"BLD",234,"KRN",.402,0)
.402
"BLD",234,"KRN",.403,0)
.403
"BLD",234,"KRN",.5,0)
.5
"BLD",234,"KRN",.84,0)
.84
"BLD",234,"KRN",3.6,0)
3.6
"BLD",234,"KRN",3.8,0)
3.8
"BLD",234,"KRN",9.2,0)
9.2
"BLD",234,"KRN",9.8,0)
9.8
"BLD",234,"KRN",9.8,"NM",0)
^9.68A^5^4
"BLD",234,"KRN",9.8,"NM",1,0)
SCMCBK^^0^B49095038
"BLD",234,"KRN",9.8,"NM",2,0)
SCMCBK1^^0^B69305105
"BLD",234,"KRN",9.8,"NM",3,0)
SCMCDD^^0^B41801876
"BLD",234,"KRN",9.8,"NM",5,0)
SCUTBK3^^0^B6455104
"BLD",234,"KRN",9.8,"NM","B","SCMCBK",1)

"BLD",234,"KRN",9.8,"NM","B","SCMCBK1",2)

"BLD",234,"KRN",9.8,"NM","B","SCMCDD",3)

"BLD",234,"KRN",9.8,"NM","B","SCUTBK3",5)

"BLD",234,"KRN",19,0)
19
"BLD",234,"KRN",19.1,0)
19.1
"BLD",234,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",234,"KRN",19.1,"NM",1,0)
SC PCMM SETUP^^0
"BLD",234,"KRN",19.1,"NM","B","SC PCMM SETUP",1)

"BLD",234,"KRN",101,0)
101
"BLD",234,"KRN",409.61,0)
409.61
"BLD",234,"KRN",771,0)
771
"BLD",234,"KRN",869.2,0)
869.2
"BLD",234,"KRN",870,0)
870
"BLD",234,"KRN",8994,0)
8994
"BLD",234,"KRN","B",.4,.4)

"BLD",234,"KRN","B",.401,.401)

"BLD",234,"KRN","B",.402,.402)

"BLD",234,"KRN","B",.403,.403)

"BLD",234,"KRN","B",.5,.5)

"BLD",234,"KRN","B",.84,.84)

"BLD",234,"KRN","B",3.6,3.6)

"BLD",234,"KRN","B",3.8,3.8)

"BLD",234,"KRN","B",9.2,9.2)

"BLD",234,"KRN","B",9.8,9.8)

"BLD",234,"KRN","B",19,19)

"BLD",234,"KRN","B",19.1,19.1)

"BLD",234,"KRN","B",101,101)

"BLD",234,"KRN","B",409.61,409.61)

"BLD",234,"KRN","B",771,771)

"BLD",234,"KRN","B",869.2,869.2)

"BLD",234,"KRN","B",870,870)

"BLD",234,"KRN","B",8994,8994)

"BLD",234,"QUES",0)
^9.62^^
"BLD",234,"REQB",0)
^9.611^1^1
"BLD",234,"REQB",1,0)
SD*5.3*41^1
"BLD",234,"REQB","B","SD*5.3*41",1)

"KRN",19.1,296,-1)
0^1
"KRN",19.1,296,0)
SC PCMM SETUP^PCMM Setup
"KRN",19.1,296,1,0)
^^12^12^2970212^
"KRN",19.1,296,1,1,0)
This key will permit the user who has access to PCMM GUI [SC PCMM GUI
"KRN",19.1,296,1,2,0)
WORKSTATION option] to use various functions usually restricted to a
"KRN",19.1,296,1,3,0)
supervisor or ADPAC
"KRN",19.1,296,1,4,0)
WORKSTATION option] to use various functions that are disabled for other
"KRN",19.1,296,1,5,0)
users, including:
"KRN",19.1,296,1,6,0)
 o  Team, Position, & Staff Setup
"KRN",19.1,296,1,7,0)
 o  Multiple Patient Assignments
"KRN",19.1,296,1,8,0)
 o  Reports from GUI - Note: All reports are available from roll & scroll
"KRN",19.1,296,1,9,0)
    option: SC PCMM REPORTS MENU
"KRN",19.1,296,1,10,0)
 
"KRN",19.1,296,1,11,0)
Users without this key mainly will use PCMM GUI for single patient
"KRN",19.1,296,1,12,0)
assignments (to team and postion).
"OER",16,0)
16^SD^^M.A.S.^
"OER",16,1,0)
^100.9951PA^2^2
"OER",16,1,1,0)
103
"OER",16,1,1,1,0)
^100.99511PA^1^1
"OER",16,1,1,1,1,0)
101
"OER",16,1,2,0)
645
"OER",16,1,2,1,0)
^100.99511PA^1^1
"OER",16,1,2,1,1,0)
121
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930813
"PKG",16,22,1,"PAH",1,0)
51^2970219
"PKG",16,22,1,"PAH",1,1,0)
^^2^2^2970219
"PKG",16,22,1,"PAH",1,1,1,0)
PCMM GUI fixes - This is a combined client server patch.  Client software
"PKG",16,22,1,"PAH",1,1,2,0)
is contained in SD_53_51.exe.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","SCMCBK")
0^1^B49095038
"RTN","SCMCBK",1,0)
SCMCBK ;ALB/SCK - Broker Utilities for multiple patient assignments; 4/8/96
"RTN","SCMCBK",2,0)
 ;;5.3;Scheduling;**41,51**;AUG 13, 1993
"RTN","SCMCBK",3,0)
 ;;1T1;
"RTN","SCMCBK",4,0)
 ;
"RTN","SCMCBK",5,0)
 Q
"RTN","SCMCBK",6,0)
 ;
"RTN","SCMCBK",7,0)
PTCLBLD(SCOK,SC) ; Build patient list for a selected clinic
"RTN","SCMCBK",8,0)
 ;  'SC BLD PAT CLN LIST'
"RTN","SCMCBK",9,0)
 ;
"RTN","SCMCBK",10,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",11,0)
 D CHK^SCUTBK
"RTN","SCMCBK",12,0)
 D TMP^SCUTBK
"RTN","SCMCBK",13,0)
 ;
"RTN","SCMCBK",14,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",15,0)
 ;
"RTN","SCMCBK",16,0)
 ;  Build exclude list
"RTN","SCMCBK",17,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",18,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",19,0)
 D @BLOCK
"RTN","SCMCBK",20,0)
 ;
"RTN","SCMCBK",21,0)
 S SCOK=$$PTCLBR^SCAPMC26(.SCCLN,.SCTEAM,"SCDTRNG")
"RTN","SCMCBK",22,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",23,0)
 G:SCOK=0 PTCLNQ
"RTN","SCMCBK",24,0)
 ;
"RTN","SCMCBK",25,0)
 M ^TMP($J,"SC PCMM IN")=^TMP(SCOK,"SCCLPT")
"RTN","SCMCBK",26,0)
 K ^TMP(SCOK,"SCCLPT")
"RTN","SCMCBK",27,0)
 ;
"RTN","SCMCBK",28,0)
 D ALPHA^SCAPMCU2("^TMP($J,""SC PCMM IN"")","^TMP($J,""SCCLPT"")")
"RTN","SCMCBK",29,0)
 ;
"RTN","SCMCBK",30,0)
 S SCOK=$J_U_^TMP($J,"SC PCMM IN",0)
"RTN","SCMCBK",31,0)
 ;
"RTN","SCMCBK",32,0)
PTCLNQ D CLRVAR^SCMCBK1
"RTN","SCMCBK",33,0)
 Q
"RTN","SCMCBK",34,0)
 ;
"RTN","SCMCBK",35,0)
PTSCBLD(SCOK,SC) ; Build patient list for selected stop code
"RTN","SCMCBK",36,0)
 ;  'SC BLD PAT SCDE LIST'
"RTN","SCMCBK",37,0)
 ;
"RTN","SCMCBK",38,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",39,0)
 ;
"RTN","SCMCBK",40,0)
 D CHK^SCUTBK
"RTN","SCMCBK",41,0)
 D TMP^SCUTBK
"RTN","SCMCBK",42,0)
 ;
"RTN","SCMCBK",43,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",44,0)
 ;
"RTN","SCMCBK",45,0)
 K ^TMP($J,"SCSCDE")
"RTN","SCMCBK",46,0)
 ;
"RTN","SCMCBK",47,0)
 ;  Build exclude list
"RTN","SCMCBK",48,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",49,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",50,0)
 D @BLOCK
"RTN","SCMCBK",51,0)
 ;
"RTN","SCMCBK",52,0)
 IF 'SCOK1 S SCOK="0^0^0^0" G PTSCQ
"RTN","SCMCBK",53,0)
 ;
"RTN","SCMCBK",54,0)
 S SCOK=0
"RTN","SCMCBK",55,0)
 S SCOK=$$PTST^SCAPMC27(SCSCDE,"SCDTRNG",SCNUM,.SCLOC,"SCERMSG",SCMORE)
"RTN","SCMCBK",56,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",57,0)
 ;
"RTN","SCMCBK",58,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",59,0)
 S I1=$G(^TMP($J,"SC PCMM IN",0))
"RTN","SCMCBK",60,0)
 F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))
"RTN","SCMCBK",61,0)
 ;
"RTN","SCMCBK",62,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCSCDE"")")
"RTN","SCMCBK",63,0)
 S SCOK=$J_U_+I1_U_SCOK
"RTN","SCMCBK",64,0)
 ;
"RTN","SCMCBK",65,0)
PTSCQ D CLRVAR^SCMCBK1
"RTN","SCMCBK",66,0)
 Q
"RTN","SCMCBK",67,0)
 ;
"RTN","SCMCBK",68,0)
PTTMBLD(SCOK,SC) ; Build a list of patients for a selected team and return the $J of the TMP globall
"RTN","SCMCBK",69,0)
 ;  where the list is stored.
"RTN","SCMCBK",70,0)
 ;  ' SC BLD PAT TM LIST ' 
"RTN","SCMCBK",71,0)
 ;
"RTN","SCMCBK",72,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",73,0)
 D CHK^SCUTBK
"RTN","SCMCBK",74,0)
 D TMP^SCUTBK
"RTN","SCMCBK",75,0)
 ;
"RTN","SCMCBK",76,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",77,0)
 K ^TMP($J,"SCTEAM")
"RTN","SCMCBK",78,0)
 ;
"RTN","SCMCBK",79,0)
 ;   Build exclude list
"RTN","SCMCBK",80,0)
 S SCOK=0
"RTN","SCMCBK",81,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",82,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",83,0)
 D @BLOCK
"RTN","SCMCBK",84,0)
 ;
"RTN","SCMCBK",85,0)
 S SCOK=$$PTTM^SCAPMC2(SCFRMTM,"SCDTRNG",.SCLOC,"SCERMSG")
"RTN","SCMCBK",86,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",87,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",88,0)
 ;
"RTN","SCMCBK",89,0)
 S I="" F  S I=$O(^TMP($J,"SC PCMM IN",I)) Q:'I  D
"RTN","SCMCBK",90,0)
 . S ^TMP($J,"PCMM TMP",I)=^TMP($J,"SC PCMM IN",I)
"RTN","SCMCBK",91,0)
 ;
"RTN","SCMCBK",92,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCTEAM"")")
"RTN","SCMCBK",93,0)
 S I1="" F  S I1=$O(^TMP($J,"SCTEAM",I1)) Q:'I1  S I=I1
"RTN","SCMCBK",94,0)
 ;
"RTN","SCMCBK",95,0)
 S SCOK=$J_U_+I_U_SCOK
"RTN","SCMCBK",96,0)
 ;
"RTN","SCMCBK",97,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",98,0)
 Q
"RTN","SCMCBK",99,0)
 ;
"RTN","SCMCBK",100,0)
PTPSBLD(SCOK,SC) ;
"RTN","SCMCBK",101,0)
 ;  ' SC BLD PAT POS LIST '
"RTN","SCMCBK",102,0)
 ;
"RTN","SCMCBK",103,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",104,0)
 D CHK^SCUTBK
"RTN","SCMCBK",105,0)
 D TMP^SCUTBK
"RTN","SCMCBK",106,0)
 ;
"RTN","SCMCBK",107,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",108,0)
 ;
"RTN","SCMCBK",109,0)
 K ^TMP($J,"SCPOS")
"RTN","SCMCBK",110,0)
 ;
"RTN","SCMCBK",111,0)
 ;   Build exclude list
"RTN","SCMCBK",112,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",113,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",114,0)
 D @BLOCK
"RTN","SCMCBK",115,0)
 ;
"RTN","SCMCBK",116,0)
 S SCOK=0
"RTN","SCMCBK",117,0)
 ;
"RTN","SCMCBK",118,0)
 S SCOK=$$PTTP^SCAPMC11(SCFRMPOS,"SCDTRNG",.SCLOC,.SCERMSG)
"RTN","SCMCBK",119,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",120,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",121,0)
 ;
"RTN","SCMCBK",122,0)
 S I1=$G(^TMP($J,"SC PCMM IN",0))
"RTN","SCMCBK",123,0)
 F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))
"RTN","SCMCBK",124,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCPOS"")")
"RTN","SCMCBK",125,0)
 S SCOK=$J_U_+I1_U_SCOK
"RTN","SCMCBK",126,0)
 ;
"RTN","SCMCBK",127,0)
 ;IF '+$G(^TMP($J,"SCPOS",0)) D  S SCOK=$J_U_SCOK
"RTN","SCMCBK",128,0)
 ;. S I="" F  S I=$O(^TMP($J,"SCPOS",I)) Q:'I  S SCOK=I
"RTN","SCMCBK",129,0)
 ;
"RTN","SCMCBK",130,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",131,0)
 Q
"RTN","SCMCBK",132,0)
 ;
"RTN","SCMCBK",133,0)
PTAPBLD(SCOK,SC) ;  Build patient list for selected appointment range.
"RTN","SCMCBK",134,0)
 ;     '  SC BLD PAT APT LIST '
"RTN","SCMCBK",135,0)
 ;
"RTN","SCMCBK",136,0)
 ;N SCCLN,SCTEAM,SCDTRNG,SCLOC,SCERMSG,SCNUM,SCCOUNT,SCMORE,SCOK1,SCER2,SCOUT,SCBLOCK
"RTN","SCMCBK",137,0)
 ;
"RTN","SCMCBK",138,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",139,0)
 D CHK^SCUTBK
"RTN","SCMCBK",140,0)
 D TMP^SCUTBK
"RTN","SCMCBK",141,0)
 ;
"RTN","SCMCBK",142,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",143,0)
 ;
"RTN","SCMCBK",144,0)
 K ^TMP($J,"SCCLN")
"RTN","SCMCBK",145,0)
 ;
"RTN","SCMCBK",146,0)
 ;   Build exclude list
"RTN","SCMCBK",147,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",148,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",149,0)
 D @BLOCK
"RTN","SCMCBK",150,0)
 ;
"RTN","SCMCBK",151,0)
 IF 'SCOK1 S SCOK="0^0^0^0" G PTAPQ
"RTN","SCMCBK",152,0)
 S SCOK=0
"RTN","SCMCBK",153,0)
 S SCOK=$$PTAP^SCAPMC28(SCCLN,"SCDTRNG",SCNUM,.SCLOC,"SCERMSG",SCMORE)
"RTN","SCMCBK",154,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",155,0)
 ;
"RTN","SCMCBK",156,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",157,0)
 ;
"RTN","SCMCBK",158,0)
 S I1=$G(^TMP($J,"SC PCMM IN",0))
"RTN","SCMCBK",159,0)
 F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))
"RTN","SCMCBK",160,0)
 ;
"RTN","SCMCBK",161,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCAPP"")")
"RTN","SCMCBK",162,0)
 S SCOK=$J_U_I1_U_SCOK
"RTN","SCMCBK",163,0)
 ;
"RTN","SCMCBK",164,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",165,0)
PTAPQ Q
"RTN","SCMCBK",166,0)
 ;
"RTN","SCMCBK",167,0)
PTGET(SCDATA,SC) ;  Return a block of patients to the client
"RTN","SCMCBK",168,0)
 ;     'SC GET PAT BLOCK'
"RTN","SCMCBK",169,0)
 ;
"RTN","SCMCBK",170,0)
 ;     SCJOB   = $J for the ^TMP global
"RTN","SCMCBK",171,0)
 ;     SCJOBID = The second subscript id for the ^TMP global
"RTN","SCMCBK",172,0)
 ;     SCSTART = Beginning entry number for the block retrieval in the ^TMP global
"RTN","SCMCBK",173,0)
 ;     SCEND   = The ending entry number for the block retrieval
"RTN","SCMCBK",174,0)
 ;     SCLAST  = The last entry number in the ^TMP global
"RTN","SCMCBK",175,0)
 ;
"RTN","SCMCBK",176,0)
 N SCJOB,SCSTART,SCEND,I,SCLAST,SCJOBID
"RTN","SCMCBK",177,0)
 ;
"RTN","SCMCBK",178,0)
 D CHK^SCUTBK
"RTN","SCMCBK",179,0)
 D TMP^SCUTBK
"RTN","SCMCBK",180,0)
 ;
"RTN","SCMCBK",181,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",182,0)
 ;
"RTN","SCMCBK",183,0)
 F I=SCSTART:1:SCEND Q:'$G(^TMP(SCJOB,SCJOBID,I),0)  D
"RTN","SCMCBK",184,0)
 . S SCDATA(I)=^TMP(SCJOB,SCJOBID,I)
"RTN","SCMCBK",185,0)
 I SCEND>SCLAST K ^TMP(SCJOB,SCJOBID)
"RTN","SCMCBK",186,0)
 ;
"RTN","SCMCBK",187,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",188,0)
 Q
"RTN","SCMCBK",189,0)
 ;
"RTN","SCMCBK",190,0)
PTLSTBLD(SCOK,SCVAL) ;  Build the list of patients to be assigned in the ^TMP($J,"SC PATIENT LIST",DFN) global
"RTN","SCMCBK",191,0)
 ;  'SC BLD PAT LIST'
"RTN","SCMCBK",192,0)
 ;
"RTN","SCMCBK",193,0)
 N SCJOB,SCDFN
"RTN","SCMCBK",194,0)
 ;
"RTN","SCMCBK",195,0)
 D CHK^SCUTBK
"RTN","SCMCBK",196,0)
 D TMP^SCUTBK
"RTN","SCMCBK",197,0)
 ;
"RTN","SCMCBK",198,0)
 S SCOK=0
"RTN","SCMCBK",199,0)
 I SCVAL["Start" D  G PTBLDQ
"RTN","SCMCBK",200,0)
 . K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK",201,0)
 . S SCOK=$J
"RTN","SCMCBK",202,0)
 ;
"RTN","SCMCBK",203,0)
 S SCJOB=$P(SCVAL,U,1)
"RTN","SCMCBK",204,0)
 S SCDFN=$P(SCVAL,U,2)
"RTN","SCMCBK",205,0)
 S ^TMP(SCJOB,"SC PATIENT LIST",SCDFN)=""
"RTN","SCMCBK",206,0)
 S SCOK=1
"RTN","SCMCBK",207,0)
PTBLDQ Q
"RTN","SCMCBK",208,0)
 ;
"RTN","SCMCBK",209,0)
PTFILE(SCOK,SC) ;  File the patient assignments in the ^TMP($J,"SC TEAM ASSIGN",SCDFN) global
"RTN","SCMCBK",210,0)
 ;    'SC FILE PAT TM ASGN'
"RTN","SCMCBK",211,0)
 ;
"RTN","SCMCBK",212,0)
 N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCDTVAR
"RTN","SCMCBK",213,0)
 ;
"RTN","SCMCBK",214,0)
 D CHK^SCUTBK
"RTN","SCMCBK",215,0)
 D TMP^SCUTBK
"RTN","SCMCBK",216,0)
 ;
"RTN","SCMCBK",217,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",218,0)
 G:+$G(SCJOB)=0 FILEQ
"RTN","SCMCBK",219,0)
 ;
"RTN","SCMCBK",220,0)
 ;
"RTN","SCMCBK",221,0)
 S SCADDFLD(.08)=$G(SC("TYPE"),99)
"RTN","SCMCBK",222,0)
 S SCADDFLD(.1)=$G(SC("RESTRICT"),0)
"RTN","SCMCBK",223,0)
 S SCADDFLD(.11)=DUZ
"RTN","SCMCBK",224,0)
 S SCADDFLD(.12)=DT
"RTN","SCMCBK",225,0)
 ;
"RTN","SCMCBK",226,0)
 S SCX=$$ACPTATM^SCAPMC6("^TMP(SCJOB,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")
"RTN","SCMCBK",227,0)
 D BAD^SCMCBK1(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK",228,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK",229,0)
 ;
"RTN","SCMCBK",230,0)
 K ^TMP(SCJOB,"SC PATIENT LIST")
"RTN","SCMCBK",231,0)
 ;
"RTN","SCMCBK",232,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",233,0)
FILEQ Q
"RTN","SCMCBK",234,0)
 ;
"RTN","SCMCBK",235,0)
POSFILE(SCOK,SC) ;  File the patient assignments in the ^TMP($J,"SC PATIENT LIST") global 
"RTN","SCMCBK",236,0)
 ;   ' SC FILE PAT POS ASGN '
"RTN","SCMCBK",237,0)
 ;
"RTN","SCMCBK",238,0)
 N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCPOS,SCDTVAR,SCMAFLD,SCADTM,SCNEW1
"RTN","SCMCBK",239,0)
 ;
"RTN","SCMCBK",240,0)
 D CHK^SCUTBK
"RTN","SCMCBK",241,0)
 D TMP^SCUTBK
"RTN","SCMCBK",242,0)
 ;
"RTN","SCMCBK",243,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",244,0)
 G:+$G(SCJOB)=0 FILEQ
"RTN","SCMCBK",245,0)
 S SCADTM=1
"RTN","SCMCBK",246,0)
 ;
"RTN","SCMCBK",247,0)
 S SCADDFLD(.05)=$G(SC("TYPE"),0)
"RTN","SCMCBK",248,0)
 S SCADDFLD(.06)=DUZ
"RTN","SCMCBK",249,0)
 S SCADDFLD(.07)=DT
"RTN","SCMCBK",250,0)
 ;
"RTN","SCMCBK",251,0)
 S SCX=$$ACPTATP^SCAPMC21("^TMP(SCJOB,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERMSG",SCADTM,"","SCNEW","SCNEW1","SCOLD","SCBAD")
"RTN","SCMCBK",252,0)
 ;
"RTN","SCMCBK",253,0)
 D BAD2^SCMCBK1(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK",254,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK",255,0)
 K ^TMP(SCJOB,"SC PATIENT LIST")
"RTN","SCMCBK",256,0)
 ;
"RTN","SCMCBK",257,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",258,0)
 Q
"RTN","SCMCBK",259,0)
 ;
"RTN","SCMCBK",260,0)
BLKPOS ;
"RTN","SCMCBK",261,0)
 N SCX
"RTN","SCMCBK",262,0)
 S SCX=$G(SCDTRNG("END"))
"RTN","SCMCBK",263,0)
 S SCDTRNG("END")=3990101 ;check forever
"RTN","SCMCBK",264,0)
 S SCOK1=$$PTTP^SCAPMC(SCBLOCK,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK",265,0)
 S SCDTRNG("END")=SCX
"RTN","SCMCBK",266,0)
 Q
"RTN","SCMCBK",267,0)
 ;
"RTN","SCMCBK",268,0)
BLKTM ;
"RTN","SCMCBK",269,0)
 N SCX
"RTN","SCMCBK",270,0)
 S SCX=$G(SCDTRNG("END"))
"RTN","SCMCBK",271,0)
 S SCDTRNG("END")=3990101 ;check forever
"RTN","SCMCBK",272,0)
 S SCOK1=$$PTTM^SCAPMC(SCBLOCK,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK",273,0)
 S SCDTRNG("END")=SCX
"RTN","SCMCBK",274,0)
 Q
"RTN","SCMCBK1")
0^2^B69305105
"RTN","SCMCBK1",1,0)
SCMCBK1 ;LB/SCK - Broker Utilities for multiple patient assignments;
"RTN","SCMCBK1",2,0)
 ;;5.3;Scheduling;**41,51**;AUG 13, 1993
"RTN","SCMCBK1",3,0)
 ;;1T1;;
"RTN","SCMCBK1",4,0)
 Q
"RTN","SCMCBK1",5,0)
 ;
"RTN","SCMCBK1",6,0)
PARSE(SC) ;
"RTN","SCMCBK1",7,0)
 S SCTEAM=$G(SC("TEAM"),"")
"RTN","SCMCBK1",8,0)
 S SCPOS=$G(SC("POSITION"),"")
"RTN","SCMCBK1",9,0)
 S SCDTVAR=$G(SC("DATE"),DT)
"RTN","SCMCBK1",10,0)
 S SCDTRNG("BEGIN")=$G(SC("BEGIN"),DT)
"RTN","SCMCBK1",11,0)
 S SCDTRNG("END")=$G(SC("END"),DT)
"RTN","SCMCBK1",12,0)
 S SCDTRNG("INCL")=$G(SC("INCL"),0)
"RTN","SCMCBK1",13,0)
 S SCJOB=$G(SC("JOB"),"")
"RTN","SCMCBK1",14,0)
 S SCSTART=$G(SC("BSTART"),0)
"RTN","SCMCBK1",15,0)
 S SCEND=$G(SC("BEND"),0)
"RTN","SCMCBK1",16,0)
 S SCLAST=$G(SC("BLAST"),0)
"RTN","SCMCBK1",17,0)
 S SCFILE=$G(SC("FILE"),"")
"RTN","SCMCBK1",18,0)
 S SCJOBID=$G(SC("JOBID"),"")
"RTN","SCMCBK1",19,0)
 S SCNUM=$G(SC("MAX"),300)
"RTN","SCMCBK1",20,0)
 S SCCLN=$G(SC("CLINIC"),"")
"RTN","SCMCBK1",21,0)
 S SCSCDE=$G(SC("STOPCODE"),"")
"RTN","SCMCBK1",22,0)
 S SCFRMTM=$G(SC("FROMTEAM"),"")
"RTN","SCMCBK1",23,0)
 S SCFRMPOS=$G(SC("FROMPOS"),"")
"RTN","SCMCBK1",24,0)
 S SCDFN=$G(SC("DFN"),"")
"RTN","SCMCBK1",25,0)
 S SCMORE=$G(SC("MORE"),"")
"RTN","SCMCBK1",26,0)
 Q
"RTN","SCMCBK1",27,0)
 ;
"RTN","SCMCBK1",28,0)
NEWVAR ;
"RTN","SCMCBK1",29,0)
 N SCCLN,SCSCDE,SCTEAM,SCDTRNG,SCLOC,SCERMSG,SCNUM,SCCOUNT,SCMORE,SCOK1,SCER2,SCOUT,BLOCK,SCBLOCK,SCFRMTM,SCFRMPOS,SCSRCE,SCSRCTYP
"RTN","SCMCBK1",30,0)
 N SCADDFLD,SCNEW,SCOLD,SCBAD,SUBRTN,SCX,SCTMP
"RTN","SCMCBK1",31,0)
 ;
"RTN","SCMCBK1",32,0)
 K ^TMP($J,"SC PCMM IN")
"RTN","SCMCBK1",33,0)
 K ^TMP($J,"PCMM TMP")
"RTN","SCMCBK1",34,0)
 K ^TMP("SC TMP LIST",$J)
"RTN","SCMCBK1",35,0)
 K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK1",36,0)
 ;
"RTN","SCMCBK1",37,0)
 Q
"RTN","SCMCBK1",38,0)
 ;
"RTN","SCMCBK1",39,0)
CLRVAR ;  Clear all parsing variables        
"RTN","SCMCBK1",40,0)
 ;
"RTN","SCMCBK1",41,0)
 K SCNUM,SCSCDE,SCCLN,SCJOBID,SCFILE,SCLAST,SCEND,SCSTART,SCJOB,SCDTRNG,SCDTVAR,SCPOS,SCTEAM,SCFRMTM,SCFRMPOS,SCDFN,BLOCK,SCBLOCK,SCX,SUBRTN
"RTN","SCMCBK1",42,0)
 K SCTMP,SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",43,0)
 ;
"RTN","SCMCBK1",44,0)
 K ^TMP($J,"SC PCMM IN")
"RTN","SCMCBK1",45,0)
 K ^TMP($J,"PCMM TMP")
"RTN","SCMCBK1",46,0)
 K ^TMP("SC TMP LIST",$J)
"RTN","SCMCBK1",47,0)
 K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK1",48,0)
 Q
"RTN","SCMCBK1",49,0)
 ;
"RTN","SCMCBK1",50,0)
PTCLEN(SCOK,SC) ;  Enroll patient in associated clinic for a position
"RTN","SCMCBK1",51,0)
 ;       ' SC PAT ENROLL CLN '
"RTN","SCMCBK1",52,0)
 ;
"RTN","SCMCBK1",53,0)
 N SCCLN,SCDFN,SCDTVAR,SCERMSG,SCADDFLD
"RTN","SCMCBK1",54,0)
 ;
"RTN","SCMCBK1",55,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",56,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",57,0)
 ;
"RTN","SCMCBK1",58,0)
 D PARSE(.SC)
"RTN","SCMCBK1",59,0)
 S SCADDFLD(1)=$G(SC("ADD1"),"O")
"RTN","SCMCBK1",60,0)
 S SCOK=0
"RTN","SCMCBK1",61,0)
 ;
"RTN","SCMCBK1",62,0)
 S SCOK=$$ACPTCL^SCAPMC18(SCDFN,SCCLN,"SCADDFLD",SCDTVAR,"SCERMSG")
"RTN","SCMCBK1",63,0)
 ;
"RTN","SCMCBK1",64,0)
 D CLRVAR
"RTN","SCMCBK1",65,0)
 Q
"RTN","SCMCBK1",66,0)
 ;
"RTN","SCMCBK1",67,0)
CHKPOS(SCOK,SC) ;  Check for primary care pratitioner and attending positions for patient
"RTN","SCMCBK1",68,0)
 ;    ' SC CHECK FOR PC POS '
"RTN","SCMCBK1",69,0)
 ;  Piece 1 of SCOK = 1 if ok for practitioner role
"RTN","SCMCBK1",70,0)
 ;                    0 if not ok
"RTN","SCMCBK1",71,0)
 ;  Piece 2 of SCOK = 1 if ok for ateending role
"RTN","SCMCBK1",72,0)
 ;                    0 if not ok
"RTN","SCMCBK1",73,0)
 ;
"RTN","SCMCBK1",74,0)
 N SCPOS,SCDTVAR,SCDFN
"RTN","SCMCBK1",75,0)
 ;
"RTN","SCMCBK1",76,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",77,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",78,0)
 ;
"RTN","SCMCBK1",79,0)
 D PARSE(.SC)
"RTN","SCMCBK1",80,0)
 ;
"RTN","SCMCBK1",81,0)
 S SCOK=$$PCRLPTTP^SCMCTPU2(SCDFN,SCPOS,SCDTVAR)
"RTN","SCMCBK1",82,0)
 ;
"RTN","SCMCBK1",83,0)
 D CLRVAR
"RTN","SCMCBK1",84,0)
 Q
"RTN","SCMCBK1",85,0)
 ;
"RTN","SCMCBK1",86,0)
NOPCTM(SCOK,SC) ;  Build list of patients with a primary care assignment, but no primary care team;
"RTN","SCMCBK1",87,0)
 ;    ' SC BLD NOPC TM LIST '
"RTN","SCMCBK1",88,0)
 ;
"RTN","SCMCBK1",89,0)
 D NEWVAR
"RTN","SCMCBK1",90,0)
 ;
"RTN","SCMCBK1",91,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",92,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",93,0)
 ;
"RTN","SCMCBK1",94,0)
 D PARSE(.SC)
"RTN","SCMCBK1",95,0)
 ;
"RTN","SCMCBK1",96,0)
 K ^TMP($J,"SCPCNO")
"RTN","SCMCBK1",97,0)
 ;  Build exclude list
"RTN","SCMCBK1",98,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS^SCMCBK",1:"BLKTM^SCMCBK")
"RTN","SCMCBK1",99,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK1",100,0)
 D @BLOCK
"RTN","SCMCBK1",101,0)
 ;
"RTN","SCMCBK1",102,0)
 S SCOK=0
"RTN","SCMCBK1",103,0)
 ;
"RTN","SCMCBK1",104,0)
 S SCLOC="^TMP($J,""SC PCMM IN"")"
"RTN","SCMCBK1",105,0)
 D PTPCNOTM^SCAPMC20(.SCLOC,SCDTVAR)
"RTN","SCMCBK1",106,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",107,0)
 ;
"RTN","SCMCBK1",108,0)
 S I=""
"RTN","SCMCBK1",109,0)
 F  S I=$O(^TMP($J,"SC PCMM IN",I)) Q:'I  D
"RTN","SCMCBK1",110,0)
 . S ^TMP($J,"PCMM TMP",I)=^TMP($J,"SC PCMM IN",I)
"RTN","SCMCBK1",111,0)
 ;
"RTN","SCMCBK1",112,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCPCNO"")")
"RTN","SCMCBK1",113,0)
 S I1="" F  S I1=$O(^TMP($J,"SCPCNO",I1)) Q:'I1  S I=I1
"RTN","SCMCBK1",114,0)
 ;
"RTN","SCMCBK1",115,0)
 S SCOK=$J_U_+I_U_1
"RTN","SCMCBK1",116,0)
 ;
"RTN","SCMCBK1",117,0)
 D CLRVAR
"RTN","SCMCBK1",118,0)
 Q
"RTN","SCMCBK1",119,0)
 ;
"RTN","SCMCBK1",120,0)
ASGNALL(SCOK,SC) ;  Assign all entries for the selection source to the appropriate team.
"RTN","SCMCBK1",121,0)
 ;    '  SC FILE ALL PAT TM ASGN  '
"RTN","SCMCBK1",122,0)
 ;
"RTN","SCMCBK1",123,0)
 D NEWVAR
"RTN","SCMCBK1",124,0)
 ;
"RTN","SCMCBK1",125,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",126,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",127,0)
 ;
"RTN","SCMCBK1",128,0)
 D PARSE(.SC)
"RTN","SCMCBK1",129,0)
 S SCSRCE=$G(SC("SOURCE"),"")
"RTN","SCMCBK1",130,0)
 S SCADDFLD(.08)=$G(SC("TYPE"),99)
"RTN","SCMCBK1",131,0)
 S SCADDFLD(.1)=$G(SC("RESTRICT"),0)
"RTN","SCMCBK1",132,0)
 S SCADDFLD(.11)=DUZ
"RTN","SCMCBK1",133,0)
 S SCADDFLD(.12)=DT
"RTN","SCMCBK1",134,0)
 ;
"RTN","SCMCBK1",135,0)
 S DTMP=$G(SCDTRNG("END"))
"RTN","SCMCBK1",136,0)
 S SCDTTRNG("END")=3990101
"RTN","SCMCBK1",137,0)
 S SCOK2=$$PTTM^SCAPMC(SCTEAM,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK1",138,0)
 S SCDTRNG("END")=DTMP
"RTN","SCMCBK1",139,0)
 ;
"RTN","SCMCBK1",140,0)
 S SCSRCTYP=$P(SCSRCE,U,1)
"RTN","SCMCBK1",141,0)
 D @SCSRCTYP
"RTN","SCMCBK1",142,0)
 ;
"RTN","SCMCBK1",143,0)
 K SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",144,0)
 S SCX=$$ACPTATM^SCAPMC6("^TMP($J,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")
"RTN","SCMCBK1",145,0)
 ;
"RTN","SCMCBK1",146,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",147,0)
 D BAD(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK1",148,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK1",149,0)
 ;
"RTN","SCMCBK1",150,0)
 D CLRVAR
"RTN","SCMCBK1",151,0)
 Q
"RTN","SCMCBK1",152,0)
 ;
"RTN","SCMCBK1",153,0)
CLN ;    File all patients in selected clinic.
"RTN","SCMCBK1",154,0)
 ;
"RTN","SCMCBK1",155,0)
 S SCOK1=$$PTCLBR^SCAPMC26($P($G(SCSRCE),U,2),.SCTEAM,"SCDTRNG")
"RTN","SCMCBK1",156,0)
 S I=0 F  S I=$O(^TMP($J,"SCCLPT",I)) Q:'I  D
"RTN","SCMCBK1",157,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"SCCLPT",I)),U))=""
"RTN","SCMCBK1",158,0)
 K ^TMP($J,"SCCLPT")
"RTN","SCMCBK1",159,0)
 Q
"RTN","SCMCBK1",160,0)
 ;
"RTN","SCMCBK1",161,0)
STOPC ;   File all patients in the selected stop code
"RTN","SCMCBK1",162,0)
 ;
"RTN","SCMCBK1",163,0)
 S SCOK1=$$PTST^SCAPMC27($P($G(SCSRCE),U,2),"SCDTRNG",SCNUM,.SCTMP,"ERRMSG",0)
"RTN","SCMCBK1",164,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",165,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",166,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",167,0)
 Q
"RTN","SCMCBK1",168,0)
 ;
"RTN","SCMCBK1",169,0)
APPT ;   File all patients for the selected clinic appointment range
"RTN","SCMCBK1",170,0)
 S SCOK1=$$PTAP^SCAPMC28($P($G(SCSRCE),U,2),"SCDTRNG",SCNUM,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",171,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",172,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",173,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",174,0)
 Q
"RTN","SCMCBK1",175,0)
 ;
"RTN","SCMCBK1",176,0)
TEAM ;  File all patients for the selected team
"RTN","SCMCBK1",177,0)
 S SCOK1=$$PTTM^SCAPMC2($P($G(SCSRCE),U,2),"SCDTRNG",.SCTMP,"SCERMSG")
"RTN","SCMCBK1",178,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",179,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",180,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",181,0)
 Q
"RTN","SCMCBK1",182,0)
 ;
"RTN","SCMCBK1",183,0)
ASGALLP(SCOK,SC) ;  Assign all entries in the selected source to the selected team and position
"RTN","SCMCBK1",184,0)
 ;
"RTN","SCMCBK1",185,0)
 N DTMP
"RTN","SCMCBK1",186,0)
 D NEWVAR
"RTN","SCMCBK1",187,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",188,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",189,0)
 ;
"RTN","SCMCBK1",190,0)
 D PARSE(.SC)
"RTN","SCMCBK1",191,0)
 S SCSRCE=$G(SC("SOURCE"),"")
"RTN","SCMCBK1",192,0)
 S SCADDFLD(.05)=$G(SC("TYPE"),0)
"RTN","SCMCBK1",193,0)
 S SCADDFLD(.06)=DUZ
"RTN","SCMCBK1",194,0)
 S SCADDFLD(.07)=DT
"RTN","SCMCBK1",195,0)
 ;
"RTN","SCMCBK1",196,0)
 S DTMP=$G(SCDTRNG("END"))
"RTN","SCMCBK1",197,0)
 S SCDTRNG("END")=3990101
"RTN","SCMCBK1",198,0)
 S SCOK2=$$PTTP^SCAPMC(SCPOS,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK1",199,0)
 S SCDTRNG("END")=DTMP
"RTN","SCMCBK1",200,0)
 ;
"RTN","SCMCBK1",201,0)
 S SCSRCTYP=$P(SCSRCE,U,1)
"RTN","SCMCBK1",202,0)
 D @SCSRCTYP
"RTN","SCMCBK1",203,0)
 ;
"RTN","SCMCBK1",204,0)
 K SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",205,0)
 S SCX=$$ACPTATP^SCAPMC21("^TMP($J,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERRMSG",1,"","SCNEW","SCNEW1","SCOLD","SCBAD")
"RTN","SCMCBK1",206,0)
 ;
"RTN","SCMCBK1",207,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",208,0)
 D BAD2(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK1",209,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK1",210,0)
 ;
"RTN","SCMCBK1",211,0)
 D CLRVAR
"RTN","SCMCBK1",212,0)
 Q
"RTN","SCMCBK1",213,0)
 ;
"RTN","SCMCBK1",214,0)
PCLN ;  File all patients in selected clinic to the new position and team
"RTN","SCMCBK1",215,0)
 ;
"RTN","SCMCBK1",216,0)
 S SCOK1=$$PTCLBR^SCAPMC26($P($G(SCSRCE),U,2),.SCTEAM,"SCDTRNG")
"RTN","SCMCBK1",217,0)
 S I=0 F  S I=$O(^TMP($J,"SCCLPT",I)) Q:'I  D
"RTN","SCMCBK1",218,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"SCCLPT",I)),U))=""
"RTN","SCMCBK1",219,0)
 ;
"RTN","SCMCBK1",220,0)
 Q
"RTN","SCMCBK1",221,0)
 ;
"RTN","SCMCBK1",222,0)
PSTOPC ;  File all patients in with the selected stop code to the new position and team
"RTN","SCMCBK1",223,0)
 ;
"RTN","SCMCBK1",224,0)
 S SCOK1=$$PTST^SCAPMC27($P($G(SCSRCE),U,2),"SCDTRNG",500,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",225,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",226,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",227,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",228,0)
 Q
"RTN","SCMCBK1",229,0)
 ;
"RTN","SCMCBK1",230,0)
PAPPT ;
"RTN","SCMCBK1",231,0)
 S SCOK1=$$PTAP^SCAPMC28($P($G(SCSRCE),U,2),"SCDTRNG",500,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",232,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",233,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",234,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",235,0)
 Q
"RTN","SCMCBK1",236,0)
 ;
"RTN","SCMCBK1",237,0)
PTEAM ;
"RTN","SCMCBK1",238,0)
 S SCOK1=$$PTTM^SCAPMC2($P($G(SCSRCE),U,2),"SCDTRNG",.SCTMP,"SCERMSG")
"RTN","SCMCBK1",239,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",240,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",241,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",242,0)
 Q
"RTN","SCMCBK1",243,0)
 ;
"RTN","SCMCBK1",244,0)
PPOS ;
"RTN","SCMCBK1",245,0)
 S SCOK1=$$PTTP^SCAPMC11($P($G(SCSRCE),U,2),"SCDTRNG",.SCTMP,"SCERMSG")
"RTN","SCMCBK1",246,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",247,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",248,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",249,0)
 Q
"RTN","SCMCBK1",250,0)
 ;
"RTN","SCMCBK1",251,0)
BAD(SCBAD,SCOLD,SCOK) ;
"RTN","SCMCBK1",252,0)
 N SCDFN,SCPARM,DIERR
"RTN","SCMCBK1",253,0)
 S SCDFN=0
"RTN","SCMCBK1",254,0)
 F  S SCDFN=$O(SCBAD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",255,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",256,0)
 . D BLD^DIALOG(40442001.001,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",257,0)
 ;
"RTN","SCMCBK1",258,0)
 F  S SCDFN=$O(SCOLD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",259,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",260,0)
 . D BLD^DIALOG(40442001.002,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",261,0)
 D HDREC^SCUTBK3(.SCOK,$G(DIERR),"Patient Assignment to Teams")
"RTN","SCMCBK1",262,0)
 Q
"RTN","SCMCBK1",263,0)
 ;
"RTN","SCMCBK1",264,0)
BAD2(SCBAD,SCOLD,SCOK) ;
"RTN","SCMCBK1",265,0)
 N SCDFN,SCPARM,DIERR
"RTN","SCMCBK1",266,0)
 S SCDFN=0
"RTN","SCMCBK1",267,0)
 F  S SCDFN=$O(SCBAD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",268,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",269,0)
 . D BLD^DIALOG(40443001.001,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",270,0)
 ;
"RTN","SCMCBK1",271,0)
 F  S SCDFN=$O(SCOLD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",272,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",273,0)
 . D BLD^DIALOG(40443001.002,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",274,0)
 D HDREC^SCUTBK3(.SCOK,$G(DIERR),"Patient Assignment to Positions")
"RTN","SCMCBK1",275,0)
 Q
"RTN","SCMCDD")
0^3^B41801876
"RTN","SCMCDD",1,0)
SCMCDD ;ALB/REW - DD Calls used by PCMM ; 6 November 1995
"RTN","SCMCDD",2,0)
 ;;5.3;Scheduling;**41,51**;AUG 13, 1993
"RTN","SCMCDD",3,0)
 ;1
"RTN","SCMCDD",4,0)
NEWHIST(FILE,IEN,DATE,SCERR,STATUS) ; PCMM history files - new record's dt & status
"RTN","SCMCDD",5,0)
 ; Complete
"RTN","SCMCDD",6,0)
 ; input:
"RTN","SCMCDD",7,0)
 ;   FILE   = 404.52,404.58, or 404.59
"RTN","SCMCDD",8,0)
 ;   IEN    = if file=404.58 - pointer to 404.51
"RTN","SCMCDD",9,0)
 ;            otherwise      - pointer to 404.57
"RTN","SCMCDD",10,0)
 ;   DATE   = effective date
"RTN","SCMCDD",11,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",12,0)
 ;   STATUS = [optional] 1=active/0=inactive - IF undefined don't check
"RTN","SCMCDD",13,0)
 ; output:
"RTN","SCMCDD",14,0)
 ;   Returned: 1 if ok to add, 0 if not^message^external
"RTN","SCMCDD",15,0)
 ;  Note: For 404.52: special case
"RTN","SCMCDD",16,0)
 ;   @scerr = error message array
"RTN","SCMCDD",17,0)
 N SCDATES,SCX,SCOK,DIERR,SCLASTDT,Y,X
"RTN","SCMCDD",18,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCMCDD",19,0)
 S SCOK=1
"RTN","SCMCDD",20,0)
 ;verify date is after last date
"RTN","SCMCDD",21,0)
 S SCLASTDT=$$LASTDATE^SCAPMCU1(FILE,IEN)
"RTN","SCMCDD",22,0)
 IF SCLASTDT&(SCLASTDT'<DATE) D  G QTNWHIST
"RTN","SCMCDD",23,0)
 .S Y=SCLASTDT D DD^%DT
"RTN","SCMCDD",24,0)
 .S SCOK="0^New Date is not after last historical date("_Y_")"_U_SCLASTDT
"RTN","SCMCDD",25,0)
 S SCX=$$DATES^SCAPMCU1(FILE,IEN,DATE)
"RTN","SCMCDD",26,0)
 IF SCX<0 D  G QTNWHIST
"RTN","SCMCDD",27,0)
 .S SCOK=0_U_"Error in ACTHIST call"
"RTN","SCMCDD",28,0)
 .S SCPARM("NEW ENTRY")="Error in ACTHIST call"
"RTN","SCMCDD",29,0)
 .D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCMCDD",30,0)
 IF DATE'>$P(SCX,U,2)!(DATE'>$P(SCX,U,3)) D  G QTNWHIST
"RTN","SCMCDD",31,0)
 .S SCOK=0_U_"Date On or Before Last Entry"
"RTN","SCMCDD",32,0)
 .S SCPARM("EFFECTIVE DATE")=DATE
"RTN","SCMCDD",33,0)
 .D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCMCDD",34,0)
 ;skip to end if status is not defined
"RTN","SCMCDD",35,0)
 IF '$D(STATUS)!($G(STATUS)="") G QTNWHIST
"RTN","SCMCDD",36,0)
 IF STATUS=+SCX D  G QTNWHIST
"RTN","SCMCDD",37,0)
 .S SCOK=0_U_"Status Must Change from Prior Entry -  Current Status is "_$S(STATUS:"Active",1:"Inactive")
"RTN","SCMCDD",38,0)
QTNWHIST Q SCOK
"RTN","SCMCDD",39,0)
 ;
"RTN","SCMCDD",40,0)
OKDEL(FILE,HISTIEN,SCERR) ;PCMM history files - delete record
"RTN","SCMCDD",41,0)
 ; input:
"RTN","SCMCDD",42,0)
 ;   FILE   = History File: 404.52,404.58, or 404.59
"RTN","SCMCDD",43,0)
 ;   HISTIEN    = Entry in History File (404.52,404.58 or 404.59)
"RTN","SCMCDD",44,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",45,0)
 ; output:
"RTN","SCMCDD",46,0)
 ;   Returned: 1 if ok to delete, 0 if not^message
"RTN","SCMCDD",47,0)
 ;   @scerr = error message array
"RTN","SCMCDD",48,0)
 N SCLASTDT,SCX,ROOT,SCNODE,SCOK,SCSTATUS
"RTN","SCMCDD",49,0)
 S SCOK=1
"RTN","SCMCDD",50,0)
 S ROOT="^SCTM("_FILE_","_HISTIEN_",0)"
"RTN","SCMCDD",51,0)
 S SCNODE=$G(@ROOT)
"RTN","SCMCDD",52,0)
 S SCLASTDT=$$LASTDATE^SCAPMCU1(FILE,$P(SCNODE,U,1)) ;1st pc=tm or pos
"RTN","SCMCDD",53,0)
 IF SCLASTDT'=$P(SCNODE,U,2) D  G QTOKDEL
"RTN","SCMCDD",54,0)
 .S Y=SCLASTDT D DD^%DT
"RTN","SCMCDD",55,0)
 .S SCOK=0_U_"Date is not last historical date ("_Y_")"_U_SCLASTDT
"RTN","SCMCDD",56,0)
 ;if active check if ok to inactivate
"RTN","SCMCDD",57,0)
 S SCSTATUS=+$P(SCNODE,U,+($S(FILE=404.52:4,1:3)))
"RTN","SCMCDD",58,0)
 S:SCSTATUS SCOK=$$OKINACT(FILE,$P(SCNODE,U,1),SCLASTDT,.SCERR)
"RTN","SCMCDD",59,0)
QTOKDEL Q SCOK
"RTN","SCMCDD",60,0)
 ;
"RTN","SCMCDD",61,0)
OKINACT(FILE,IEN,DATE,SCERR) ;PCMM history files - inactivate record?
"RTN","SCMCDD",62,0)
 ; input:
"RTN","SCMCDD",63,0)
 ; ** Complete **
"RTN","SCMCDD",64,0)
 ; input:
"RTN","SCMCDD",65,0)
 ;   FILE   = History File: 404.52,404.58, or 404.59
"RTN","SCMCDD",66,0)
 ;   IEN    = IEN of non-History File:
"RTN","SCMCDD",67,0)
 ;                Team Position (#404.57) for 404.52 & 404.59
"RTN","SCMCDD",68,0)
 ;                Team (#404.51) for 404.58
"RTN","SCMCDD",69,0)
 ;   DATE   = Date to inactivate
"RTN","SCMCDD",70,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",71,0)
 ; output:
"RTN","SCMCDD",72,0)
 ;   Returned: 1=ok on date/0 ow^1=ok in future/0 ow^message^techmessage
"RTN","SCMCDD",73,0)
 ;   @scerr = error message array
"RTN","SCMCDD",74,0)
 N SCLASTDT,SCX,ROOT,SCNODE,SCSTAT,SCOK,SCI,SCTP,SCOK,SCTPLST,SCPTLST,SCCLIN
"RTN","SCMCDD",75,0)
 S SCOK=1
"RTN","SCMCDD",76,0)
 S SCLASTDT=$$LASTDATE^SCAPMCU1(FILE,IEN)
"RTN","SCMCDD",77,0)
 IF DATE<SCLASTDT D  G QTOKIN
"RTN","SCMCDD",78,0)
 .S Y=SCLASTDT D DD^%DT
"RTN","SCMCDD",79,0)
 .S SCOK="0^^Date is before last historical date("_Y_")"_U_SCLASTDT
"RTN","SCMCDD",80,0)
 S SCDT("BEGIN")=DATE
"RTN","SCMCDD",81,0)
 S SCDT("END")=3990101 ;infinite future
"RTN","SCMCDD",82,0)
 S SCDT("INCL")=0 ;does not have to be continuous
"RTN","SCMCDD",83,0)
 S SCX=$$ACTHIST^SCAPMCU2(FILE,IEN,"SCDT",.SCERR)
"RTN","SCMCDD",84,0)
 IF SCX'>0 D  G QTOKIN
"RTN","SCMCDD",85,0)
 .S:SCX<0 SCOK="0^^Error in active history call"
"RTN","SCMCDD",86,0)
 .IF 'SCX D
"RTN","SCMCDD",87,0)
 ..S Y=DATE D DD^%DT
"RTN","SCMCDD",88,0)
 ..S SCOK="0^^Entry not active for date("_Y_")"_U_DATE
"RTN","SCMCDD",89,0)
TEAMHIS IF FILE=404.58 D
"RTN","SCMCDD",90,0)
 .; -- check positions for team
"RTN","SCMCDD",91,0)
 .IF '$$TPTM^SCAPMC(IEN,"SCDT",,,"SCTPLST",.SCERR) S SCOK=0_U_U_"Error in Position List Call" Q
"RTN","SCMCDD",92,0)
 .F SCI=1:1 S SCTP=$P($G(SCTPLST(SCI)),U,1) Q:'SCTP  D  Q:'SCOK
"RTN","SCMCDD",93,0)
 ..; -- check if position is active
"RTN","SCMCDD",94,0)
 ..IF '$P(SCTPLST(SCI),U,6)!($P(SCTPLST(SCI),U,6)>DATE) D  Q
"RTN","SCMCDD",95,0)
 ...S Y=$P(SCTPLST(SCI),U,2) D DD^%DT
"RTN","SCMCDD",96,0)
 ...S SCOK="0^^Active Team Position^"_$P($G(^SCTM(404.57,SCTP,0)),U,1)_" as of "_Y_U_SCTP_U_$P(SCTPLST(SCI),U,1)
"RTN","SCMCDD",97,0)
 ..S SCX=$$OKINACT(404.59,SCTP,DATE,.SCERR)
"RTN","SCMCDD",98,0)
 ..S:$P(SCX,U,1,2)["1" SCOK=SCX
"RTN","SCMCDD",99,0)
 .; -- check for patients assigned to team - 999 - maybe able to remove
"RTN","SCMCDD",100,0)
 .IF '$$PTTM^SCAPMC(IEN,"SCDT","^TMP($J,""SCPTLST"")",.SCERR) S SCOK=0_U_U_"Error in Patient List Call" Q
"RTN","SCMCDD",101,0)
 .F SCI=1:1 S SCPT=$P($G(^TMP($J,"SCPTLST",SCI)),U,1) Q:'SCPT  D  Q:'SCOK
"RTN","SCMCDD",102,0)
 ..IF $P(^TMP($J,"SCPTLST",SCI),U,4)>DATE S SCOK="1^0^Patient "_$P(^TMP($J,"SCPTLST",SCI),U,2)_" is active in the future" Q
"RTN","SCMCDD",103,0)
 ..IF $P(^TMP($J,"SCPTLST",SCI),U,5)<DATE S SCOK=0_U_U_"Patient ("_$P(^TMP($J,"SCPTLST",SCI),U,2)_") is active"_U_$P(^TMP($J,"SCPTLST",SCI),U,1)_U_$P(^TMP($J,"SCPTLST",SCI),U,2) Q
"RTN","SCMCDD",104,0)
POSHIS IF FILE=404.59 D
"RTN","SCMCDD",105,0)
 .; -- check for practitioners assigned to position
"RTN","SCMCDD",106,0)
 .IF '$$PRTP^SCAPMC(IEN,"SCDT","SCPRLST",.SCERR) S SCOK=0_U_U_"Error in Practitioner List Call" Q
"RTN","SCMCDD",107,0)
 .F SCI=1:1 S SCPR=$P($G(SCPRLST(SCI)),U,1) Q:'SCPR  D  Q:'SCOK
"RTN","SCMCDD",108,0)
 ..IF $P(SCPRLST(SCI),U,7)>DATE S SCOK="1^0^Team Member "_$P(SCPRLST(SCI),U,2)_" is active in the future in position "_U_$P(SCPRLST(SCI),U,1)_U_IEN Q
"RTN","SCMCDD",109,0)
 ..IF $P(SCPRLST(SCI),U,8)<DATE S SCOK="0^^Team Member "_$P(SCPRLST(SCI),U,2)_" is active in position "_U_$P(SCPRLST(SCI),U,1)_U_IEN Q
"RTN","SCMCDD",110,0)
 .;check if a clinic is assigned to position
"RTN","SCMCDD",111,0)
 .S SCCLIN=$P($G(^SCTM(404.57,IEN,0)),U,9) Q:'SCCLIN  D
"RTN","SCMCDD",112,0)
 ..S SCOK="0^^Clinic ("_$P($G(^SC(SCCLIN,0)),U,1)_") is associated with position"_U_SCCLIN
"RTN","SCMCDD",113,0)
 .;check for patients assigned to position
"RTN","SCMCDD",114,0)
 .IF '$$PTTP^SCAPMC(IEN,"SCDT","^TMP($J,""SCPTLST"")",.SCERR) S SCOK="0^^Error in patient list call" Q
"RTN","SCMCDD",115,0)
 .F SCI=1:1 S SCPT=$P($G(^TMP($J,"SCPTLST",SCI)),U,1) Q:'SCPT  D  Q:'SCOK
"RTN","SCMCDD",116,0)
 ..IF $P(SCPTLST(SCI),U,4)>DATE S SCOK="1^0^Patient "_$P(SCPTLST(SCI),U,1)_" is active in the future" Q
"RTN","SCMCDD",117,0)
 ..IF $P(^TMP($J,"SCPTLST",SCI),U,5)<DATE S SCOK=0_U_U_"Patient "_$P(^TMP($J,"SCPTLST",SCI),U,2)_" is active"_U_$P(^TMP($J,"SCPTLST",SCI),U,1) Q
"RTN","SCMCDD",118,0)
 ;IF FILE=404.52 - NO FURTHER CHECKS NEEDED
"RTN","SCMCDD",119,0)
QTOKIN Q SCOK
"RTN","SCMCDD",120,0)
 ;
"RTN","SCMCDD",121,0)
OKCHGDT(FILE,HISTIEN,DATE,SCERR) ;PCMM history files - ok to change date?
"RTN","SCMCDD",122,0)
 ; input:
"RTN","SCMCDD",123,0)
 ; ** Complete - Not Tested
"RTN","SCMCDD",124,0)
 ; input:
"RTN","SCMCDD",125,0)
 ;   FILE   = History File: 404.52,404.58, or 404.59
"RTN","SCMCDD",126,0)
 ;   HISTIEN - IEN of History File (404.52,404.58 or 404.59)
"RTN","SCMCDD",127,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",128,0)
 ; output:
"RTN","SCMCDD",129,0)
 ;   Returned: 1 if ok to change date, 0 if not^message
"RTN","SCMCDD",130,0)
 ;   @scerr = error message array
"RTN","SCMCDD",131,0)
 N SCX,ROOT,SCNODE,SCSTAT,SCOK
"RTN","SCMCDD",132,0)
 S SCOK=1
"RTN","SCMCDD",133,0)
 S ROOT="^SCTM("_FILE_","_HISTIEN_",0)"
"RTN","SCMCDD",134,0)
 S SCNODE=$G(@ROOT)
"RTN","SCMCDD",135,0)
 IF 'SCNODE S SCOK="0^Bad or Corrupt File Entry"_U_HISTIEN G QTOKCHK
"RTN","SCMCDD",136,0)
 S SCSTAT=$S(FILE=404.52:$P(SCNODE,U,4),1:$P(SCNODE,U,3))
"RTN","SCMCDD",137,0)
 ;check next & previous effective dates (must be of other status)
"RTN","SCMCDD",138,0)
 ; i.e. if active check next & previous for inactive
"RTN","SCMCDD",139,0)
 S SCX=$$DTAFTER^SCAPMCU2(FILE,$P(SCNODE,U,1),('SCSTAT),$P(SCNODE,U,2))
"RTN","SCMCDD",140,0)
 IF SCX&(DATE'<SCX) D  G QTOKCHK
"RTN","SCMCDD",141,0)
 .S Y=+SCX D DD^%DT
"RTN","SCMCDD",142,0)
 .S SCOK=0_U_"Date Must be before "_Y_U_SCX
"RTN","SCMCDD",143,0)
 S SCX=$$DTBEFORE^SCAPMCU2(FILE,$P(SCNODE,U,1),('SCSTAT),$P(SCNODE,U,2))
"RTN","SCMCDD",144,0)
 IF DATE'>SCX D  G QTOKCHK
"RTN","SCMCDD",145,0)
 .S Y=+SCX D DD^%DT
"RTN","SCMCDD",146,0)
 .S SCOK=0_U_"Date Must be after "_Y_U_SCX
"RTN","SCMCDD",147,0)
QTOKCHK Q SCOK
"RTN","SCUTBK3")
0^5^B6455104
"RTN","SCUTBK3",1,0)
SCUTBK3 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCUTBK3",2,0)
 ;;5.3;Scheduling;**41,51**;AUG 13, 1993
"RTN","SCUTBK3",3,0)
 ;
"RTN","SCUTBK3",4,0)
GETUSER(SCDATA,SCDUZ) ; -- get user data
"RTN","SCUTBK3",5,0)
 ;
"RTN","SCUTBK3",6,0)
 ; input:                 SCDUZ -> user's id (DUZ)
"RTN","SCUTBK3",7,0)
 ;output: for success SCDATA(0) -> duz ^ name ^ default query id ^ default institution name
"RTN","SCUTBK3",8,0)
 ;        for failure SCDATA(0) -> 0 ^ <number of errors>
"RTN","SCUTBK3",9,0)
 ;                      (1...n) -> error text
"RTN","SCUTBK3",10,0)
 ;
"RTN","SCUTBK3",11,0)
 ; Related RPC: SCUT GET USER RECORD
"RTN","SCUTBK3",12,0)
 ;
"RTN","SCUTBK3",13,0)
 N X,DIERR,SCPARM
"RTN","SCUTBK3",14,0)
 IF SCDUZ="CURRENT USER" S SCDUZ=+$G(DUZ)
"RTN","SCUTBK3",15,0)
 S X=$G(^VA(200,+SCDUZ,0))
"RTN","SCUTBK3",16,0)
 IF X]"" D
"RTN","SCUTBK3",17,0)
 . N Y
"RTN","SCUTBK3",18,0)
 . S SCDATA(0)=+SCDUZ_U_$P(X,U)_U_$$DEFAULT(SCDUZ)
"RTN","SCUTBK3",19,0)
 . D GETENV^%ZOSV
"RTN","SCUTBK3",20,0)
 . S SCDATA(0)=SCDATA(0)_U_Y_U_$P($G(^DIC(4,DUZ(2),0)),U,1)
"RTN","SCUTBK3",21,0)
 ELSE  D
"RTN","SCUTBK3",22,0)
 . S SCPARM("USER ID")=SCDUZ
"RTN","SCUTBK3",23,0)
 . D BLD^DIALOG(4030005.001,.SCPARM,"","SCDATA","S")
"RTN","SCUTBK3",24,0)
 . D HDREC(.SCDATA,$G(DIERR),"Scheduling User Data Retrieval")
"RTN","SCUTBK3",25,0)
 Q
"RTN","SCUTBK3",26,0)
 ;
"RTN","SCUTBK3",27,0)
DEFAULT(SCDUZ) ; -- get default query for user
"RTN","SCUTBK3",28,0)
 N X
"RTN","SCUTBK3",29,0)
 S X=+$P($G(^SCRS(403.35,+SCDUZ,"PCMM")),U,15)
"RTN","SCUTBK3",30,0)
 IF 'X S X=+$O(^SD(404.95,"B","System Default",0))
"RTN","SCUTBK3",31,0)
 S X=X_U_$P($G(^SD(404.95,+X,0),"Unknown"),U)
"RTN","SCUTBK3",32,0)
 Q X
"RTN","SCUTBK3",33,0)
 ;
"RTN","SCUTBK3",34,0)
SETDEF(SCDATA,SCDUZ,SCQRY) ; -- set user's default query
"RTN","SCUTBK3",35,0)
 ; input:                 SCDUZ -> user's id (DUZ)
"RTN","SCUTBK3",36,0)
 ;                        SCQRY ->query ien
"RTN","SCUTBK3",37,0)
 ;output: for success SCDATA(0) -> 1
"RTN","SCUTBK3",38,0)
 ;        for failure SCDATA(0) -> 0 ^ <number of errors>
"RTN","SCUTBK3",39,0)
 ;                      (1...n) -> error text
"RTN","SCUTBK3",40,0)
 ;
"RTN","SCUTBK3",41,0)
 ;
"RTN","SCUTBK3",42,0)
 ; Related RPC: SCUT SET USER QUERY DEFAULT
"RTN","SCUTBK3",43,0)
 ;
"RTN","SCUTBK3",44,0)
 N SCVAL,SCFDA,SCIENS,SCERR,DIERR,SCPROC
"RTN","SCUTBK3",45,0)
 S SCPROC="Setting User Query Default"
"RTN","SCUTBK3",46,0)
 S SCFDA="SCFDA",SCIENS="SCIENS",SCERR="SCERR"
"RTN","SCUTBK3",47,0)
 ; -- make sure user has param rec
"RTN","SCUTBK3",48,0)
 IF '$D(^SCRS(403.35,+SCDUZ,0)) D  G:$O(SCDATA(0)) SETDEFQ
"RTN","SCUTBK3",49,0)
 . D FDA^DILF(403.35,"+1,",.01,"",+SCDUZ,SCFDA,SCERR)
"RTN","SCUTBK3",50,0)
 . S SCIENS(1)=+SCDUZ
"RTN","SCUTBK3",51,0)
 . D UPDATE^DIE("",SCFDA,SCIENS,SCERR)
"RTN","SCUTBK3",52,0)
 . D ERRCHK(.SCDATA,.SCERR,SCPROC)
"RTN","SCUTBK3",53,0)
 ;
"RTN","SCUTBK3",54,0)
 ; -- set default
"RTN","SCUTBK3",55,0)
 K SCFDA,SCIENS,SCERR,SCVAL
"RTN","SCUTBK3",56,0)
 S SCFDA="SCFDA",SCIENS="SCIENS",SCERR="SCERR"
"RTN","SCUTBK3",57,0)
 S SCVAL=$S(SCQRY:SCQRY,1:"@")
"RTN","SCUTBK3",58,0)
 D FDA^DILF(403.35,+SCDUZ_",",1.15,"",SCVAL,SCFDA,SCERR)
"RTN","SCUTBK3",59,0)
 D FILE^DIE("K",SCFDA,SCERR)
"RTN","SCUTBK3",60,0)
 D ERRCHK(.SCDATA,.SCERR,"Setting User Query Default")
"RTN","SCUTBK3",61,0)
SETDEFQ Q
"RTN","SCUTBK3",62,0)
 ;
"RTN","SCUTBK3",63,0)
 ;
"RTN","SCUTBK3",64,0)
 ; >>>> Error Processing Utilities <<<<
"RTN","SCUTBK3",65,0)
 ;
"RTN","SCUTBK3",66,0)
HDREC(SCDATA,SCER,SCPROC) ; -- build zeroth of SCDATA array
"RTN","SCUTBK3",67,0)
 IF SCER D
"RTN","SCUTBK3",68,0)
 . S SCDATA(0)=0_U_+SCER_U
"RTN","SCUTBK3",69,0)
 . D SETPROC(.SCDATA,.SCPROC)
"RTN","SCUTBK3",70,0)
 ELSE  D
"RTN","SCUTBK3",71,0)
 . S SCDATA(0)=1_U_U ; no errors
"RTN","SCUTBK3",72,0)
 Q
"RTN","SCUTBK3",73,0)
 ;
"RTN","SCUTBK3",74,0)
SETPROC(SCDATA,SCPROC) ; -- set process name for error list
"RTN","SCUTBK3",75,0)
 S $P(SCDATA(0),U,3)=SCPROC
"RTN","SCUTBK3",76,0)
 Q
"RTN","SCUTBK3",77,0)
 ;
"RTN","SCUTBK3",78,0)
ERRCHK(SCDATA,SCERR,SCPROC) ; -- process fileman dbs errors
"RTN","SCUTBK3",79,0)
 N SCERS
"RTN","SCUTBK3",80,0)
 S SCERS=$G(SCERR("DIERR"))
"RTN","SCUTBK3",81,0)
 IF SCERS D MSG^DIALOG("EA",.SCDATA,"","",SCERR)
"RTN","SCUTBK3",82,0)
 D HDREC(.SCDATA,SCERS,SCPROC)
"RTN","SCUTBK3",83,0)
 Q
"RTN","SCUTBK3",84,0)
 ;
"VER")
8.0^21.0
**END**
**END**
