Released SD*5.3*543 SEQ #459
Extracted from mail message
**KIDS**:SD*5.3*543^

**INSTALL NAME**
SD*5.3*543
"BLD",8051,0)
SD*5.3*543^SCHEDULING^0^3090409^y
"BLD",8051,1,0)
^^3^3^3090406^
"BLD",8051,1,1,0)
Fix to validation logic for Ambcare transmissions to allow 3 new values
"BLD",8051,1,2,0)
which were added to the Radiation Exposure Method field (#.3212) in the
"BLD",8051,1,3,0)
Patient file (#2) with patch DG*5.3*659.
"BLD",8051,4,0)
^9.64PA^^
"BLD",8051,6.3)
1
"BLD",8051,"ABPKG")
n
"BLD",8051,"KRN",0)
^9.67PA^779.2^20
"BLD",8051,"KRN",.4,0)
.4
"BLD",8051,"KRN",.401,0)
.401
"BLD",8051,"KRN",.402,0)
.402
"BLD",8051,"KRN",.403,0)
.403
"BLD",8051,"KRN",.5,0)
.5
"BLD",8051,"KRN",.84,0)
.84
"BLD",8051,"KRN",3.6,0)
3.6
"BLD",8051,"KRN",3.8,0)
3.8
"BLD",8051,"KRN",9.2,0)
9.2
"BLD",8051,"KRN",9.8,0)
9.8
"BLD",8051,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8051,"KRN",9.8,"NM",1,0)
SCMSVUT3^^0^B21034197
"BLD",8051,"KRN",9.8,"NM","B","SCMSVUT3",1)

"BLD",8051,"KRN",19,0)
19
"BLD",8051,"KRN",19.1,0)
19.1
"BLD",8051,"KRN",101,0)
101
"BLD",8051,"KRN",409.61,0)
409.61
"BLD",8051,"KRN",771,0)
771
"BLD",8051,"KRN",779.2,0)
779.2
"BLD",8051,"KRN",870,0)
870
"BLD",8051,"KRN",8989.51,0)
8989.51
"BLD",8051,"KRN",8989.52,0)
8989.52
"BLD",8051,"KRN",8994,0)
8994
"BLD",8051,"KRN","B",.4,.4)

"BLD",8051,"KRN","B",.401,.401)

"BLD",8051,"KRN","B",.402,.402)

"BLD",8051,"KRN","B",.403,.403)

"BLD",8051,"KRN","B",.5,.5)

"BLD",8051,"KRN","B",.84,.84)

"BLD",8051,"KRN","B",3.6,3.6)

"BLD",8051,"KRN","B",3.8,3.8)

"BLD",8051,"KRN","B",9.2,9.2)

"BLD",8051,"KRN","B",9.8,9.8)

"BLD",8051,"KRN","B",19,19)

"BLD",8051,"KRN","B",19.1,19.1)

"BLD",8051,"KRN","B",101,101)

"BLD",8051,"KRN","B",409.61,409.61)

"BLD",8051,"KRN","B",771,771)

"BLD",8051,"KRN","B",779.2,779.2)

"BLD",8051,"KRN","B",870,870)

"BLD",8051,"KRN","B",8989.51,8989.51)

"BLD",8051,"KRN","B",8989.52,8989.52)

"BLD",8051,"KRN","B",8994,8994)

"BLD",8051,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8051,"QUES",0)
^9.62^^
"BLD",8051,"REQB",0)
^9.611^1^1
"BLD",8051,"REQB",1,0)
SD*5.3*441^2
"BLD",8051,"REQB","B","SD*5.3*441",1)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
543^3090409
"PKG",16,22,1,"PAH",1,1,0)
^^3^3^3090409
"PKG",16,22,1,"PAH",1,1,1,0)
Fix to validation logic for Ambcare transmissions to allow 3 new values
"PKG",16,22,1,"PAH",1,1,2,0)
which were added to the Radiation Exposure Method field (#.3212) in the
"PKG",16,22,1,"PAH",1,1,3,0)
Patient file (#2) with patch DG*5.3*659.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","SCMSVUT3")
0^1^B21034197^B20828078
"RTN","SCMSVUT3",1,0)
SCMSVUT3   ;BP/JRP - HL7 segment & field validation utilities ;8/11/99 9:54am
"RTN","SCMSVUT3",2,0)
 ;;5.3;Scheduling;**142,180,208,239,395,441,543**;AUG 13, 1993;Build 1
"RTN","SCMSVUT3",3,0)
 ;
"RTN","SCMSVUT3",4,0)
 ;Standard input parameters
"RTN","SCMSVUT3",5,0)
 ;   DATA  - Value to validate
"RTN","SCMSVUT3",6,0)
 ;   DFN   - Point to PATIENT file (#2)
"RTN","SCMSVUT3",7,0)
 ;   ENCDT - Date/time of encounter (FileMan format)
"RTN","SCMSVUT3",8,0)
 ;   HLFS  - HL7 field seperator
"RTN","SCMSVUT3",9,0)
 ;   HLECH - HL7 encoding characters
"RTN","SCMSVUT3",10,0)
 ;   HLQ   - HL7 null designation
"RTN","SCMSVUT3",11,0)
 ;
"RTN","SCMSVUT3",12,0)
 ;Standard output
"RTN","SCMSVUT3",13,0)
 ;   1 - Valid
"RTN","SCMSVUT3",14,0)
 ;   0 - Invalid
"RTN","SCMSVUT3",15,0)
 ;
"RTN","SCMSVUT3",16,0)
 ;
"RTN","SCMSVUT3",17,0)
POWLOC(DATA,DFN) ;Prisoner of war location
"RTN","SCMSVUT3",18,0)
 ;Note: Use of DFN is optional.  Use of the DFN will validate the POW
"RTN","SCMSVUT3",19,0)
 ;      location and also verify that it is consistant with patient's
"RTN","SCMSVUT3",20,0)
 ;      POW status (i.e. must also have been a POW).  Non-use of DFN
"RTN","SCMSVUT3",21,0)
 ;      will only validate the POW location.
"RTN","SCMSVUT3",22,0)
 ;
"RTN","SCMSVUT3",23,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",24,0)
 N POW,NODE
"RTN","SCMSVUT3",25,0)
 S DFN=+$G(DFN)
"RTN","SCMSVUT3",26,0)
 ;Patient a POW ?
"RTN","SCMSVUT3",27,0)
 S POW=1
"RTN","SCMSVUT3",28,0)
 I (DFN) D
"RTN","SCMSVUT3",29,0)
 .S NODE=$G(^DPT(DFN,.52))
"RTN","SCMSVUT3",30,0)
 .S POW=$TR($P(NODE,"^",5),"YNU","100")
"RTN","SCMSVUT3",31,0)
 ;Invalid location code
"RTN","SCMSVUT3",32,0)
 I (DATA'="")&("456789AB"'[DATA) Q 0
"RTN","SCMSVUT3",33,0)
 ;Location code not consistant with POW status
"RTN","SCMSVUT3",34,0)
 I (DATA) Q:('POW) 0
"RTN","SCMSVUT3",35,0)
 I (DATA="") Q:((DFN)&(POW)) 0
"RTN","SCMSVUT3",36,0)
 ;Valid location code
"RTN","SCMSVUT3",37,0)
 Q 1
"RTN","SCMSVUT3",38,0)
RADMTHD(DATA,DFN) ;Radiation exposure method
"RTN","SCMSVUT3",39,0)
 ;Note: Use of DFN is optional.  Use of the DFN will validate the
"RTN","SCMSVUT3",40,0)
 ;      radiation method and also verify that it is consistant with
"RTN","SCMSVUT3",41,0)
 ;      patient's radiation exposure (i.e. must also have claimed
"RTN","SCMSVUT3",42,0)
 ;      exposure).  Non-use of DFN will only validate the radiation
"RTN","SCMSVUT3",43,0)
 ;      method.
"RTN","SCMSVUT3",44,0)
 ;
"RTN","SCMSVUT3",45,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",46,0)
 N RAD,NODE
"RTN","SCMSVUT3",47,0)
 S DFN=+$G(DFN)
"RTN","SCMSVUT3",48,0)
 ;Patient claim exposure ?
"RTN","SCMSVUT3",49,0)
 S RAD=1
"RTN","SCMSVUT3",50,0)
 I (DFN) D
"RTN","SCMSVUT3",51,0)
 .S NODE=$G(^DPT(DFN,.321))
"RTN","SCMSVUT3",52,0)
 .S RAD=$TR($P(NODE,"^",3),"YNU","100")
"RTN","SCMSVUT3",53,0)
 ;Invalid method code
"RTN","SCMSVUT3",54,0)
 I (DATA'="") Q:((DATA'?1N)!(DATA<2)!(DATA>7)) 0  ;SD*543 changed >4 to >7
"RTN","SCMSVUT3",55,0)
 ;Method code not consistant with exposure status
"RTN","SCMSVUT3",56,0)
 I (DATA) Q:('RAD) 0
"RTN","SCMSVUT3",57,0)
 I (DATA="") Q:((DFN)&(RAD)) 0
"RTN","SCMSVUT3",58,0)
 ;Valid method code
"RTN","SCMSVUT3",59,0)
 Q 1
"RTN","SCMSVUT3",60,0)
NUMRANK(DATA,MINVAL,MAXVAL,DECCNT) ;Numeric ranking validation
"RTN","SCMSVUT3",61,0)
 ;Input  : MINVAL - Minimum value (defaults to no lower limit)
"RTN","SCMSVUT3",62,0)
 ;         MAXVAL - Maximum value (defaults to no upper limit)
"RTN","SCMSVUT3",63,0)
 ;         DECCNT - Decimal places allowed (defaults to no limit)
"RTN","SCMSVUT3",64,0)
 ;Note   : DATA considered invalid if NULL
"RTN","SCMSVUT3",65,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",66,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",67,0)
 Q:(DATA=".") 0
"RTN","SCMSVUT3",68,0)
 N INVALID
"RTN","SCMSVUT3",69,0)
 S INVALID=0
"RTN","SCMSVUT3",70,0)
 ;General numeric check
"RTN","SCMSVUT3",71,0)
 Q:(DATA'?.1"-".N.1".".N) 0
"RTN","SCMSVUT3",72,0)
 ;Min value check
"RTN","SCMSVUT3",73,0)
 I ($G(MINVAL)'="") D
"RTN","SCMSVUT3",74,0)
 .S INVALID=(DATA<MINVAL)
"RTN","SCMSVUT3",75,0)
 Q:(INVALID) 0
"RTN","SCMSVUT3",76,0)
 ;Max value check
"RTN","SCMSVUT3",77,0)
 I ($G(MAXVAL)'="") D
"RTN","SCMSVUT3",78,0)
 .S INVALID=(DATA>MAXVAL)
"RTN","SCMSVUT3",79,0)
 Q:(INVALID) 0
"RTN","SCMSVUT3",80,0)
 ;Decimal check
"RTN","SCMSVUT3",81,0)
 I ($G(DECCNT)'="") D
"RTN","SCMSVUT3",82,0)
 .X "S INVALID=DATA'?.1""-"".N.1"".""."_DECCNT_"N"
"RTN","SCMSVUT3",83,0)
 Q:(INVALID) 0
"RTN","SCMSVUT3",84,0)
 ;Valid
"RTN","SCMSVUT3",85,0)
 Q 1
"RTN","SCMSVUT3",86,0)
VALFAC(DATA) ;Determine if given facility number is valid
"RTN","SCMSVUT3",87,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",88,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",89,0)
 ;Invalid
"RTN","SCMSVUT3",90,0)
 Q:('$D(^DIC(4,"D",DATA))) 0
"RTN","SCMSVUT3",91,0)
 ;Valid
"RTN","SCMSVUT3",92,0)
 Q 1
"RTN","SCMSVUT3",93,0)
ACTFAC(DATA) ;Determine if given facility number is active
"RTN","SCMSVUT3",94,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",95,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",96,0)
 N PTR4,ACTIVE,NODE
"RTN","SCMSVUT3",97,0)
 ;Check all entries in INSTITUTION file (#4) with given facility number
"RTN","SCMSVUT3",98,0)
 ; (quits when first active entry is found)
"RTN","SCMSVUT3",99,0)
 S ACTIVE=0
"RTN","SCMSVUT3",100,0)
 S PTR4=0
"RTN","SCMSVUT3",101,0)
 F  S PTR4=+$O(^DIC(4,"D",DATA,PTR4)) Q:('PTR4)  D  Q:(ACTIVE)
"RTN","SCMSVUT3",102,0)
 .;Get node with inactive flag
"RTN","SCMSVUT3",103,0)
 .S NODE=$G(^DIC(4,PTR4,99))
"RTN","SCMSVUT3",104,0)
 .;Inactive
"RTN","SCMSVUT3",105,0)
 .Q:($P(NODE,"^",4)="y")
"RTN","SCMSVUT3",106,0)
 .;Active
"RTN","SCMSVUT3",107,0)
 .S ACTIVE=1
"RTN","SCMSVUT3",108,0)
 ;Done
"RTN","SCMSVUT3",109,0)
 Q ACTIVE
"RTN","SCMSVUT3",110,0)
PROVID(DATA,HLECH) ;External Provider ID
"RTN","SCMSVUT3",111,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",112,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",113,0)
 N PRVDUZ,PRVFAC,SUBSEP,VALID
"RTN","SCMSVUT3",114,0)
 S SUBSEP=$E(HLECH,4)
"RTN","SCMSVUT3",115,0)
 S PRVDUZ=$P(DATA,SUBSEP,1)
"RTN","SCMSVUT3",116,0)
 S PRVFAC=$P(DATA,SUBSEP,2)
"RTN","SCMSVUT3",117,0)
 S VALID=0
"RTN","SCMSVUT3",118,0)
 I $$NUMRANK(PRVDUZ,1,,0),$$VALFAC(PRVFAC),$$ACTFAC(PRVFAC) S VALID=1
"RTN","SCMSVUT3",119,0)
 Q VALID
"RTN","SCMSVUT3",120,0)
ROLEID(DATA) ;Role Instance ID
"RTN","SCMSVUT3",121,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",122,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",123,0)
 N ROLEID,SEQID,VALID
"RTN","SCMSVUT3",124,0)
 S ROLEID=$P(DATA,"*",1)
"RTN","SCMSVUT3",125,0)
 S SEQID=$P(DATA,"*",2)
"RTN","SCMSVUT3",126,0)
 S VALID=0
"RTN","SCMSVUT3",127,0)
 I ROLEID'="" I $$NUMRANK(SEQID,1,,0) S VALID=1
"RTN","SCMSVUT3",128,0)
 Q VALID
"RTN","SCMSVUT3",129,0)
VA01(DATA) ;VA Table 1 (Yes/No/Unknown)
"RTN","SCMSVUT3",130,0)
 ;Notes: Table VA01 allows values of Y,N,U,1,0
"RTN","SCMSVUT3",131,0)
 ;     : NULL is an accepted value
"RTN","SCMSVUT3",132,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",133,0)
 Q:(DATA="") 1
"RTN","SCMSVUT3",134,0)
 Q:($L(DATA)'=1) 0
"RTN","SCMSVUT3",135,0)
 N TMP
"RTN","SCMSVUT3",136,0)
 S TMP=$TR(DATA,"YNU0","1111")
"RTN","SCMSVUT3",137,0)
 Q:(TMP'=1) 0
"RTN","SCMSVUT3",138,0)
 Q 1
"RTN","SCMSVUT3",139,0)
CLAMST(VALUE,DFN) ;
"RTN","SCMSVUT3",140,0)
 ;Error code 9030
"RTN","SCMSVUT3",141,0)
 ;Validating whether or not the visit is related to MST
"RTN","SCMSVUT3",142,0)
 ;
"RTN","SCMSVUT3",143,0)
 ;INPUT
"RTN","SCMSVUT3",144,0)
 ;   ENCDT -  Date of encounter
"RTN","SCMSVUT3",145,0)
 ;   DFN   -  IEN pointer from the Outpatient Encounter (#409.68) file
"RTN","SCMSVUT3",146,0)
 ;   VALUE -  Is encounter related (1=Yes,0=No)
"RTN","SCMSVUT3",147,0)
 ;
"RTN","SCMSVUT3",148,0)
 ;OUTPUT
"RTN","SCMSVUT3",149,0)
 ;   1 = Visit is related to MST
"RTN","SCMSVUT3",150,0)
 ;   0 = Visit Not related to MST
"RTN","SCMSVUT3",151,0)
 ;
"RTN","SCMSVUT3",152,0)
 ;
"RTN","SCMSVUT3",153,0)
 N MSTSTAT
"RTN","SCMSVUT3",154,0)
 I '$D(VALUE) Q 0
"RTN","SCMSVUT3",155,0)
 S MSTSTAT=$$GETSTAT^DGMSTAPI(DFN)
"RTN","SCMSVUT3",156,0)
 S MSTSTAT=$P(MSTSTAT,"^",2)
"RTN","SCMSVUT3",157,0)
 S MSTSTAT=$S(MSTSTAT="Y":1,1:0)
"RTN","SCMSVUT3",158,0)
 Q $S(MSTSTAT=0&(VALUE=1):0,1:1)
"RTN","SCMSVUT3",159,0)
MSTSTAT(DATA) ;
"RTN","SCMSVUT3",160,0)
 ;Error code 7040
"RTN","SCMSVUT3",161,0)
 ;Check for valid MST status codes Y,N,D,U
"RTN","SCMSVUT3",162,0)
 ;
"RTN","SCMSVUT3",163,0)
 ;INPUT
"RTN","SCMSVUT3",164,0)
 ;   DATA - the MST Status passed in by routine SCMSVZEL 
"RTN","SCMSVUT3",165,0)
 ;
"RTN","SCMSVUT3",166,0)
 ;OUTPUT
"RTN","SCMSVUT3",167,0)
 ;   1 - Valid MST Status
"RTN","SCMSVUT3",168,0)
 ;   0 - Invalid MST Status
"RTN","SCMSVUT3",169,0)
 ;
"RTN","SCMSVUT3",170,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT3",171,0)
 I ("Y,N,U,D"[DATA)!(DATA="") Q 1
"RTN","SCMSVUT3",172,0)
 Q 0
"RTN","SCMSVUT3",173,0)
MSTDATE(DATA) ;
"RTN","SCMSVUT3",174,0)
 ;Error code 7060
"RTN","SCMSVUT3",175,0)
 ;Check for valid date and that MST status is either Y,N,D or U
"RTN","SCMSVUT3",176,0)
 ; Variable X must be passed to ^%DT for date verification
"RTN","SCMSVUT3",177,0)
 ; Variable Y is returned from ^%DT
"RTN","SCMSVUT3",178,0)
 ;
"RTN","SCMSVUT3",179,0)
 ;INPUT
"RTN","SCMSVUT3",180,0)
 ;  DATA - MST Date Status Changed^MST Status from SCMSVZEL
"RTN","SCMSVUT3",181,0)
 ;
"RTN","SCMSVUT3",182,0)
 ;OUTPUT
"RTN","SCMSVUT3",183,0)
 ;   1 - Valid MST Status and date in a valid format
"RTN","SCMSVUT3",184,0)
 ;   0 - Invalid MST Status or date in an invalid format
"RTN","SCMSVUT3",185,0)
 ;
"RTN","SCMSVUT3",186,0)
 N X,MSTSTAT
"RTN","SCMSVUT3",187,0)
 S X=$P(DATA,"^",2)
"RTN","SCMSVUT3",188,0)
 S MSTSTAT=$P(DATA,"^",1)
"RTN","SCMSVUT3",189,0)
 I X=""&("Y,N,D"'[MSTSTAT!(MSTSTAT="")) Q 1
"RTN","SCMSVUT3",190,0)
 S X=$$FMDATE^HLFNC(X),%DT="T"
"RTN","SCMSVUT3",191,0)
 D ^%DT
"RTN","SCMSVUT3",192,0)
 Q $S(Y>0&("U,Y,N,D"[MSTSTAT):1,1:0)
"RTN","SCMSVUT3",193,0)
 ;
"RTN","SCMSVUT3",194,0)
AO(DATA,DFN) ;Validate Agent Orange expos. (error 7120)
"RTN","SCMSVUT3",195,0)
 ;INPUT  : DATA - Value to validate
"RTN","SCMSVUT3",196,0)
 ;         DFN - Pointer to PATIENT file (#2)
"RTN","SCMSVUT3",197,0)
 ;OUTPUT : 1 - Valid claim of exposure to Agent Orange
"RTN","SCMSVUT3",198,0)
 ;         0 - Invalid claim of exposure to Agent Orange
"RTN","SCMSVUT3",199,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT3",200,0)
 I '$D(DFN) Q 0
"RTN","SCMSVUT3",201,0)
 I DATA=1 Q 1 ;$$CANBEAO(DFN)  SD*5.3*395 rem check for period of service
"RTN","SCMSVUT3",202,0)
 I (DATA=0)!(DATA="") Q 1
"RTN","SCMSVUT3",203,0)
 Q 0
"RTN","SCMSVUT3",204,0)
CANBEAO(DFN) ;Check to determine if patient can claim Agent Orange expos.
"RTN","SCMSVUT3",205,0)
 ;INPUT  : DFN - Pointer to PATIENT file (#2)
"RTN","SCMSVUT3",206,0)
 ;OUTPUT : 1 - Valid claim of exposure to Agent Orange
"RTN","SCMSVUT3",207,0)
 ;         0 - Invalid claim of exposure to Agent Orange
"RTN","SCMSVUT3",208,0)
 ;
"RTN","SCMSVUT3",209,0)
 N VAEL
"RTN","SCMSVUT3",210,0)
 I '$G(DFN) Q 0
"RTN","SCMSVUT3",211,0)
 I '$D(^DPT(DFN,0)) Q 0
"RTN","SCMSVUT3",212,0)
 ;Get data needed to perform check
"RTN","SCMSVUT3",213,0)
 D ELIG^VADPT
"RTN","SCMSVUT3",214,0)
 ;Must be a veteran
"RTN","SCMSVUT3",215,0)
 I 'VAEL(4) Q 0
"RTN","SCMSVUT3",216,0)
 ;Must have POS 7
"RTN","SCMSVUT3",217,0)
 I $P($G(^DIC(21,+VAEL(2),0)),"^",3)=7 Q 1
"RTN","SCMSVUT3",218,0)
 ;Can't claim AO
"RTN","SCMSVUT3",219,0)
 Q 0
"RTN","SCMSVUT3",220,0)
AOLOC(DATA,DFN) ;Validate Agent Orange exposure location (error 7130)
"RTN","SCMSVUT3",221,0)
 ;INPUT  : DATA - Value to validate
"RTN","SCMSVUT3",222,0)
 ;         DFN - Pointer to PATIENT file (#2)
"RTN","SCMSVUT3",223,0)
 ;OUTPUT : 1 - Valid Agent Orange exposure location
"RTN","SCMSVUT3",224,0)
 ;         0 - Invalid/missing Agent Orange exposure location
"RTN","SCMSVUT3",225,0)
 ;NOTES  : Patient's claiming exposure must have an exposure location
"RTN","SCMSVUT3",226,0)
 N VASV
"RTN","SCMSVUT3",227,0)
 I '$G(DFN) Q 0
"RTN","SCMSVUT3",228,0)
 I '$D(^DPT(DFN,0)) Q 0
"RTN","SCMSVUT3",229,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT3",230,0)
 ;Get data needed to perform check
"RTN","SCMSVUT3",231,0)
 D SVC^VADPT
"RTN","SCMSVUT3",232,0)
 ;No claim - shouldn't have a location
"RTN","SCMSVUT3",233,0)
 I 'VASV(2) Q $S(DATA="":1,1:0)
"RTN","SCMSVUT3",234,0)
 ;Claims exposure - must have a valid location
"RTN","SCMSVUT3",235,0)
 Q $S(DATA="":0,"VKO"[DATA:1,1:0)
"VER")
8.0^22.0
"BLD",8051,6)
^459
**END**
**END**
