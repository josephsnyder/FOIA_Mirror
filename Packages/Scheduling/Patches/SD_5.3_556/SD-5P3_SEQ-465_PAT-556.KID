Released SD*5.3*556 SEQ #465
Extracted from mail message
**KIDS**:SD*5.3*556^

**INSTALL NAME**
SD*5.3*556
"BLD",7426,0)
SD*5.3*556^SCHEDULING^0^3100224^y
"BLD",7426,1,0)
^^2^2^3090413^
"BLD",7426,1,1,0)
Update Scheduling routines to use replacement API's for unsupported/deleted
"BLD",7426,1,2,0)
data dictionary fields in the ICD files.
"BLD",7426,4,0)
^9.64PA^^
"BLD",7426,6.3)
3
"BLD",7426,"ABPKG")
n
"BLD",7426,"KRN",0)
^9.67PA^779.2^20
"BLD",7426,"KRN",.4,0)
.4
"BLD",7426,"KRN",.401,0)
.401
"BLD",7426,"KRN",.402,0)
.402
"BLD",7426,"KRN",.403,0)
.403
"BLD",7426,"KRN",.5,0)
.5
"BLD",7426,"KRN",.84,0)
.84
"BLD",7426,"KRN",3.6,0)
3.6
"BLD",7426,"KRN",3.8,0)
3.8
"BLD",7426,"KRN",9.2,0)
9.2
"BLD",7426,"KRN",9.8,0)
9.8
"BLD",7426,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",7426,"KRN",9.8,"NM",1,0)
SCRPW40^^0^B69722600
"BLD",7426,"KRN",9.8,"NM",2,0)
SDAMBAE3^^0^B2667789
"BLD",7426,"KRN",9.8,"NM",3,0)
SDAMBMR^^0^B29279736
"BLD",7426,"KRN",9.8,"NM",4,0)
SDAMODO2^^0^B22975014
"BLD",7426,"KRN",9.8,"NM",5,0)
SDOEDX^^0^B9649480
"BLD",7426,"KRN",9.8,"NM","B","SCRPW40",1)

"BLD",7426,"KRN",9.8,"NM","B","SDAMBAE3",2)

"BLD",7426,"KRN",9.8,"NM","B","SDAMBMR",3)

"BLD",7426,"KRN",9.8,"NM","B","SDAMODO2",4)

"BLD",7426,"KRN",9.8,"NM","B","SDOEDX",5)

"BLD",7426,"KRN",19,0)
19
"BLD",7426,"KRN",19.1,0)
19.1
"BLD",7426,"KRN",101,0)
101
"BLD",7426,"KRN",409.61,0)
409.61
"BLD",7426,"KRN",771,0)
771
"BLD",7426,"KRN",779.2,0)
779.2
"BLD",7426,"KRN",870,0)
870
"BLD",7426,"KRN",8989.51,0)
8989.51
"BLD",7426,"KRN",8989.52,0)
8989.52
"BLD",7426,"KRN",8994,0)
8994
"BLD",7426,"KRN","B",.4,.4)

"BLD",7426,"KRN","B",.401,.401)

"BLD",7426,"KRN","B",.402,.402)

"BLD",7426,"KRN","B",.403,.403)

"BLD",7426,"KRN","B",.5,.5)

"BLD",7426,"KRN","B",.84,.84)

"BLD",7426,"KRN","B",3.6,3.6)

"BLD",7426,"KRN","B",3.8,3.8)

"BLD",7426,"KRN","B",9.2,9.2)

"BLD",7426,"KRN","B",9.8,9.8)

"BLD",7426,"KRN","B",19,19)

"BLD",7426,"KRN","B",19.1,19.1)

"BLD",7426,"KRN","B",101,101)

"BLD",7426,"KRN","B",409.61,409.61)

"BLD",7426,"KRN","B",771,771)

"BLD",7426,"KRN","B",779.2,779.2)

"BLD",7426,"KRN","B",870,870)

"BLD",7426,"KRN","B",8989.51,8989.51)

"BLD",7426,"KRN","B",8989.52,8989.52)

"BLD",7426,"KRN","B",8994,8994)

"BLD",7426,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7426,"QUES",0)
^9.62^^
"BLD",7426,"REQB",0)
^9.611^5^5
"BLD",7426,"REQB",1,0)
SD*5.3*180^2
"BLD",7426,"REQB",2,0)
SD*5.3*132^2
"BLD",7426,"REQB",3,0)
SD*5.3*159^2
"BLD",7426,"REQB",4,0)
SD*5.3*131^2
"BLD",7426,"REQB",5,0)
SD*5.3*317^2
"BLD",7426,"REQB","B","SD*5.3*131",4)

"BLD",7426,"REQB","B","SD*5.3*132",2)

"BLD",7426,"REQB","B","SD*5.3*159",3)

"BLD",7426,"REQB","B","SD*5.3*180",1)

"BLD",7426,"REQB","B","SD*5.3*317",5)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
556^3100224
"PKG",16,22,1,"PAH",1,1,0)
^^2^2^3100224
"PKG",16,22,1,"PAH",1,1,1,0)
Update Scheduling routines to use replacement API's for unsupported/deleted
"PKG",16,22,1,"PAH",1,1,2,0)
data dictionary fields in the ICD files.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","SCRPW40")
0^1^B69722600^B69084359
"RTN","SCRPW40",1,0)
SCRPW40 ;RENO/KEITH - Diagnosis/Procedure Frequency Report ;06/22/99
"RTN","SCRPW40",2,0)
 ;;5.3;Scheduling;**144,180,556**;AUG 13, 1993;Build 3
"RTN","SCRPW40",3,0)
 ;06/22/99 ACS - Added CPT modifiers to the report
"RTN","SCRPW40",4,0)
 ;06/22/99 ACS - Added CPT modifier API calls
"RTN","SCRPW40",5,0)
 ;04/13/08 - Updating to replace calls to unsupported/deleted ICD9 fields with API calls
"RTN","SCRPW40",6,0)
 ;
"RTN","SCRPW40",7,0)
 N SDDIV,SD,%DT,X,Y,DIR,SDX,LINEFLAG
"RTN","SCRPW40",8,0)
 D TITL^SCRPW50("Outpatient Diagnosis/Procedure Frequncy Report")
"RTN","SCRPW40",9,0)
 I '$$DIVA^SCRPW17(.SDDIV) S SDOUT=1 G EXIT
"RTN","SCRPW40",10,0)
 D SUBT^SCRPW50("**** Date Range Selection ****")
"RTN","SCRPW40",11,0)
 W ! S %DT="AEPX",%DT(0)=2961001,%DT("A")="Beginning date: " D ^%DT I Y<1 S SDOUT=1 G EXIT
"RTN","SCRPW40",12,0)
 S SD("BDT")=Y
"RTN","SCRPW40",13,0)
EDT S %DT("A")="   Ending date: " W ! D ^%DT I Y<1 S SDOUT=1 G EXIT
"RTN","SCRPW40",14,0)
 I Y<SD("BDT") W !!,$C(7),"End date cannot be before begin date!",! G EDT
"RTN","SCRPW40",15,0)
 S SD("EDT")=Y_.999999
"RTN","SCRPW40",16,0)
 D SUBT^SCRPW50("**** Report Format Selection ****")
"RTN","SCRPW40",17,0)
 K DIR S DIR(0)="S^D:DIAGNOSIS FREQUENCY;P:PROCEDURE FREQUENCY;B:BOTH DIAGNOSIS AND PROCEDURE",DIR("A")="Specify the type of report to print",DIR("?")="This determines the type of lists returned by the report."
"RTN","SCRPW40",18,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 G EXIT
"RTN","SCRPW40",19,0)
 S SD("TYPE")=Y
"RTN","SCRPW40",20,0)
 K DIR S DIR(0)="N^1:99999:0",DIR("A")="Limit list to most frequent",DIR("B")=50,DIR("?")="Enter the quantity of the most frequent items to list."
"RTN","SCRPW40",21,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 G EXIT
"RTN","SCRPW40",22,0)
 S SD("FREQ")=Y
"RTN","SCRPW40",23,0)
 W ! N ZTSAVE S ZTSAVE("SDDIV")="",ZTSAVE("SDDIV(")="",ZTSAVE("SD(")="" D EN^XUTMDEVQ("START^SCRPW40","Outpatient Diagnosis/Procedure Frequency Report",.ZTSAVE) S SDOUT=1 G EXIT
"RTN","SCRPW40",24,0)
 ;
"RTN","SCRPW40",25,0)
START ;Print report
"RTN","SCRPW40",26,0)
 S (SDOUT,SDSTOP)=0 K ^TMP("SCRPW",$J) S SDI=$O(SDDIV("")),SDI=$O(SDDIV(SDI)) S:$P(SDDIV,U,2)="ALL DIVISIONS" SDI=1 S SDDIV("MULT")=SDI
"RTN","SCRPW40",27,0)
 S SDT=SD("BDT") F  S SDT=$O(^SCE("B",SDT)) Q:'SDT!(SDT>SD("EDT"))!SDOUT  S SDOE=0 F  S SDOE=$O(^SCE("B",SDT,SDOE)) Q:'SDOE!SDOUT  S SDOE0=$$GETOE^SDOE(SDOE) I '$P(SDOE0,U,6),$P(SDOE0,U,2),$P(SDOE0,U,4),$$DIV() D EVAL
"RTN","SCRPW40",28,0)
 G:SDOUT EXIT S SDIV="" F  S SDIV=$O(^TMP("SCRPW",$J,SDIV)) Q:SDIV=""  D ORD
"RTN","SCRPW40",29,0)
 D STOP G:SDOUT EXIT D NOW^%DTC S Y=% X ^DD("DD") S SDPNOW=$P(Y,":",1,2),SDPAGE=1,SDLINE="",$P(SDLINE,"-",(IOM+1))="",SDFF=0
"RTN","SCRPW40",30,0)
 S Y=SD("BDT") X ^DD("DD") S SDPBDT=Y,Y=$P(SD("EDT"),".") X ^DD("DD") S SDPEDT=Y,SDT(1)="<*>  OUTPATIENT "_$S(SD("TYPE")="D":"DIAGNOSIS",SD("TYPE")="P":"PROCEDURE",1:"DIAGNOSIS/PROCEDURE")_" FREQUENCY REPORT  <*>"
"RTN","SCRPW40",31,0)
 S SDT(2)="For the "_SD("FREQ")_" most frequent "_$S(SD("TYPE")="D":"diagnoses",SD("TYPE")="P":"procedures",1:"diagnoses and procedures")
"RTN","SCRPW40",32,0)
 S SDIV="" F  S SDIV=$O(SDDIV(SDIV)) Q:'SDIV  S SDIV(SDDIV(SDIV))=SDIV
"RTN","SCRPW40",33,0)
 I 'SDDIV,$P(SDDIV,U,2)'="ALL DIVISIONS" S SDIV($P(SDDIV,U,2))=$$PRIM^VASITE()
"RTN","SCRPW40",34,0)
 I $P(SDDIV,U,2)="ALL DIVISIONS" S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,SDI)) Q:'SDI  S SDX=$P($G(^DG(40.8,SDI,0)),U) S:$L(SDX) SDIV(SDX)=SDI
"RTN","SCRPW40",35,0)
 D:$E(IOST)="C" DISP0^SCRPW23 I '$O(^TMP("SCRPW",$J,0)) S SDIV=0 D DHDR(2,.SDT) D HDR Q:SDOUT  S SDX="No activity found within selected report parameters!" W !!?(IOM-$L(SDX)\2),SDX G EXIT
"RTN","SCRPW40",36,0)
 S SDIVN="" F  S SDIVN=$O(SDIV(SDIVN)) Q:SDIVN=""!SDOUT  S SDIV=SDIV(SDIVN) D DPRT(.SDIV)
"RTN","SCRPW40",37,0)
 S SDI=0,SDI=$O(^TMP("SCRPW",$J,SDI)),SDDIV("MULT")=$O(^TMP("SCRPW",$J,SDI))
"RTN","SCRPW40",38,0)
 G:SDOUT EXIT I SDDIV("MULT") S SDIV=0 D DPRT(.SDIV)
"RTN","SCRPW40",39,0)
 ;
"RTN","SCRPW40",40,0)
EXIT I $E(IOST)="C",'$G(SDOUT) N DIR S DIR(0)="E" D ^DIR
"RTN","SCRPW40",41,0)
 K %,%DT,C,DIR,DIVN,DTOUT,DUOUT,SD,SDCT,SDDIV,SDDX,SDDX0,SDDXC,SDDXN,SDFF,SDI,SDII,SDIV,SDIVN,SDLINE,SDLIST,SDOE,SDOE0
"RTN","SCRPW40",42,0)
 K SDX,SDORD,SDOUT,SDPAGE,SDPBDT,SDPEDT,SDPNOW,SDPR,SDPR0,SDPRC,SDPRN,SDPROC,SDPS,SDQT,SDSTOP,SDT,SDTOT,X,Y D END^SCRPW50 Q
"RTN","SCRPW40",43,0)
 ;
"RTN","SCRPW40",44,0)
DIV() ;Check division
"RTN","SCRPW40",45,0)
 Q:'SDDIV 1  Q $D(SDDIV(+$P(SDOE0,U,11)))
"RTN","SCRPW40",46,0)
 ;
"RTN","SCRPW40",47,0)
STOP ;Check for stop task request
"RTN","SCRPW40",48,0)
 S:$D(ZTQUEUED) (SDOUT,ZTSTOP)=$S($$S^%ZTLOAD:1,1:0) Q
"RTN","SCRPW40",49,0)
 ;
"RTN","SCRPW40",50,0)
EVAL ;Evaluate encounter
"RTN","SCRPW40",51,0)
 S SDSTOP=SDSTOP+1 D:SDSTOP#3000=0 STOP Q:SDOUT
"RTN","SCRPW40",52,0)
 S SDIV=+$P(SDOE0,U,11) D:"DB"[SD("TYPE") DX D:"PB"[SD("TYPE") PROC Q
"RTN","SCRPW40",53,0)
 ;
"RTN","SCRPW40",54,0)
DX ;Get diagnoses
"RTN","SCRPW40",55,0)
 N SDLIST,SDI D GETDX^SDOE(SDOE,"SDLIST")
"RTN","SCRPW40",56,0)
 S SDI=0 F  S SDI=$O(SDLIST(SDI)) Q:'SDI  D DX1(SDIV) D:SDDIV("MULT") DX1(0)
"RTN","SCRPW40",57,0)
 Q
"RTN","SCRPW40",58,0)
 ;
"RTN","SCRPW40",59,0)
DX1(SDIV) S SDDX=+SDLIST(SDI),SDPS=$S($P(SDLIST(SDI),U,12)="P":"PRI",1:"SEC")
"RTN","SCRPW40",60,0)
 F SDPS=SDPS,"QTY" S ^TMP("SCRPW",$J,SDIV,"DX",1,SDDX,SDPS)=$G(^TMP("SCRPW",$J,SDIV,"DX",1,SDDX,SDPS))+1
"RTN","SCRPW40",61,0)
 Q
"RTN","SCRPW40",62,0)
 ;
"RTN","SCRPW40",63,0)
PROC ;Get procedures
"RTN","SCRPW40",64,0)
 N SDLIST,SDI D GETCPT^SDOE(SDOE,"SDLIST")
"RTN","SCRPW40",65,0)
 S SDI=0 F  S SDI=$O(SDLIST(SDI)) Q:'SDI  D PROC1(SDIV) D:SDDIV("MULT") PROC1(0)
"RTN","SCRPW40",66,0)
 Q
"RTN","SCRPW40",67,0)
 ;
"RTN","SCRPW40",68,0)
PROC1(SDIV) S SDPROC=+SDLIST(SDI),SDQT=$P(SDLIST(SDI),U,16) S:'SDQT SDQT=1
"RTN","SCRPW40",69,0)
 S ^TMP("SCRPW",$J,SDIV,"PROC",1,SDPROC,"ENC")=$G(^TMP("SCRPW",$J,SDIV,"PROC",1,SDPROC,"ENC"))+1
"RTN","SCRPW40",70,0)
 S ^TMP("SCRPW",$J,SDIV,"PROC",1,SDPROC,"QTY")=$G(^TMP("SCRPW",$J,SDIV,"PROC",1,SDPROC,"QTY"))+SDQT
"RTN","SCRPW40",71,0)
 ;
"RTN","SCRPW40",72,0)
 ;set encounter and modifier quantity
"RTN","SCRPW40",73,0)
 N SDMOD,SDMODN
"RTN","SCRPW40",74,0)
 S SDMODN=0
"RTN","SCRPW40",75,0)
 F  S SDMODN=$O(SDLIST(SDI,1,SDMODN)) Q:SDMODN=""  D
"RTN","SCRPW40",76,0)
 . S SDMOD=$G(SDLIST(SDI,1,SDMODN,0))
"RTN","SCRPW40",77,0)
 . Q:SDMOD=""
"RTN","SCRPW40",78,0)
 . S ^TMP("SCRPW",$J,SDIV,"PROC",1,SDPROC,SDMOD,"ENC")=+1
"RTN","SCRPW40",79,0)
 . S ^TMP("SCRPW",$J,SDIV,"PROC",1,SDPROC,SDMOD,"QTY")=+SDQT
"RTN","SCRPW40",80,0)
 . Q
"RTN","SCRPW40",81,0)
 Q
"RTN","SCRPW40",82,0)
 ;
"RTN","SCRPW40",83,0)
ORD ;Determine list order
"RTN","SCRPW40",84,0)
 S SDI="" F  S SDI=$O(^TMP("SCRPW",$J,SDIV,SDI)) Q:SDI=""  S SDII=0 F  S SDII=$O(^TMP("SCRPW",$J,SDIV,SDI,1,SDII)) Q:'SDII  S ^TMP("SCRPW",$J,SDIV,SDI,2,$$ORDV(),SDII)=""
"RTN","SCRPW40",85,0)
 Q
"RTN","SCRPW40",86,0)
 ;
"RTN","SCRPW40",87,0)
ORDV() Q ^TMP("SCRPW",$J,SDIV,SDI,1,SDII,"QTY")
"RTN","SCRPW40",88,0)
 ;
"RTN","SCRPW40",89,0)
DPRT(SDIV) ;Print report for a division
"RTN","SCRPW40",90,0)
 ;Required input: SDIV=division ifn (or '0' for summary)
"RTN","SCRPW40",91,0)
 S C=(IOM-80\2) D DHDR(3,.SDT) I '$D(^TMP("SCRPW",$J,SDIV)) S SDPAGE=1 D HDR Q:SDOUT  S SDX="No activity found for this date range!" W !!?(IOM-$L(SDX)\2),SDX Q
"RTN","SCRPW40",92,0)
 I $D(^TMP("SCRPW",$J,SDIV,"DX")) D DXPRT Q:SDOUT
"RTN","SCRPW40",93,0)
 I $D(^TMP("SCRPW",$J,SDIV,"PROC")) D PRPRT
"RTN","SCRPW40",94,0)
 Q
"RTN","SCRPW40",95,0)
 ;
"RTN","SCRPW40",96,0)
DXPRT ;Print diagnosis list
"RTN","SCRPW40",97,0)
 N SDTOT S SDPAGE=1 D HDR Q:SDOUT  D DXHD S (SDCT,SDORD)="" F  S SDORD=$O(^TMP("SCRPW",$J,SDIV,"DX",2,SDORD),-1) Q:SDORD=""!SDOUT!(SDCT>(SD("FREQ")-1))  D DXP1
"RTN","SCRPW40",98,0)
 Q:SDOUT  D:$Y>(IOSL-4) HDR,DXHD Q:SDOUT
"RTN","SCRPW40",99,0)
 W !?(C),$E(SDLINE,1,7),?(C+9),$E(SDLINE,1,35),?(C+46),$E(SDLINE,1,10),?(C+58),$E(SDLINE,1,10),?(C+70),$E(SDLINE,1,10)
"RTN","SCRPW40",100,0)
 W !?(C),"TOTAL:",?(C+46),$J(SDTOT("PRI"),9,0),?(C+58),$J(SDTOT("SEC"),9,0),?(C+70),$J(SDTOT("QTY"),9,0)
"RTN","SCRPW40",101,0)
 Q
"RTN","SCRPW40",102,0)
 ;
"RTN","SCRPW40",103,0)
DXP1 S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,SDIV,"DX",2,SDORD,SDI)) Q:'SDI!SDOUT!(SDCT>(SD("FREQ")-1))  S SDDX0=$$ICDDX^ICDCODE(SDI) I $L(SDDX0) S SDDXC=$P(SDDX0,U,2),SDDXN=$P(SDDX0,U,4) D DXP2
"RTN","SCRPW40",104,0)
 Q
"RTN","SCRPW40",105,0)
 ;
"RTN","SCRPW40",106,0)
DXP2 F SDII="PRI","SEC","QTY" S SDDX(SDII)=+$G(^TMP("SCRPW",$J,SDIV,"DX",1,SDI,SDII))
"RTN","SCRPW40",107,0)
 D:$Y>(IOSL-4) HDR,DXHD Q:SDOUT  S SDCT=SDCT+1 W !?(C),SDDXC,?(C+9),$E(SDDXN,1,35),?(C+46),$J(SDDX("PRI"),9,0),?(C+58),$J(SDDX("SEC"),9,0),?(C+70),$J(SDDX("QTY"),9,0)
"RTN","SCRPW40",108,0)
 F SDII="PRI","SEC","QTY" S SDTOT(SDII)=$G(SDTOT(SDII))+SDDX(SDII)
"RTN","SCRPW40",109,0)
 Q
"RTN","SCRPW40",110,0)
 ;
"RTN","SCRPW40",111,0)
PRPRT N SDTOT S C=(IOM-62\2),SDPAGE=1 D HDR Q:SDOUT  D PRHD S (SDCT,SDORD)="" F  S SDORD=$O(^TMP("SCRPW",$J,SDIV,"PROC",2,SDORD),-1) Q:SDORD=""!SDOUT!(SDCT>(SD("FREQ")-1))  D PRP1
"RTN","SCRPW40",112,0)
 Q:SDOUT  D:$Y>(IOSL-4) HDR,PRHD Q:SDOUT
"RTN","SCRPW40",113,0)
 W !?(C),$E(SDLINE,1,6),?(C+8),$E(SDLINE,1,28),?(C+38),$E(SDLINE,1,10),?(C+50),$E(SDLINE,1,10),!?(C),"PROCEDURE TOTAL:",?(C+38),$J(SDTOT("ENC"),9,0),?(C+50),$J(SDTOT("QTY"),9,0)
"RTN","SCRPW40",114,0)
 Q
"RTN","SCRPW40",115,0)
 ;
"RTN","SCRPW40",116,0)
PRP1 ;S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,SDIV,"PROC",2,SDORD,SDI)) Q:'SDI!SDOUT!(SDCT>(SD("FREQ")-1))  S SDPR0=$G(^ICPT(SDI,0)) I $L(SDPR0) S SDPRC=$P(SDPR0,U),SDPRN=$P(SDPR0,U,2) D PRP2
"RTN","SCRPW40",117,0)
 N CPTINFO
"RTN","SCRPW40",118,0)
 S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,SDIV,"PROC",2,SDORD,SDI)) Q:'SDI!SDOUT!(SDCT>(SD("FREQ")-1))  D 
"RTN","SCRPW40",119,0)
 . S CPTINFO=$$CPT^ICPTCOD(SDI,,1)
"RTN","SCRPW40",120,0)
 . Q:CPTINFO'>0
"RTN","SCRPW40",121,0)
 . S SDPRC=$P(CPTINFO,U,2)
"RTN","SCRPW40",122,0)
 . S SDPRN=$P(CPTINFO,U,3)
"RTN","SCRPW40",123,0)
 . D PRP2
"RTN","SCRPW40",124,0)
 . Q
"RTN","SCRPW40",125,0)
 Q
"RTN","SCRPW40",126,0)
 ;
"RTN","SCRPW40",127,0)
PRP2 F SDII="ENC","QTY" S SDPR(SDII)=+$G(^TMP("SCRPW",$J,SDIV,"PROC",1,SDI,SDII))
"RTN","SCRPW40",128,0)
 D:$Y>(IOSL-4) HDR,PRHD Q:SDOUT  S SDCT=SDCT+1
"RTN","SCRPW40",129,0)
 ; skip a line in the report if printing next cpt code on same page
"RTN","SCRPW40",130,0)
 I LINEFLAG W !
"RTN","SCRPW40",131,0)
 W !?(C),SDPRC,?(C+8),SDPRN,?(C+38),$J(SDPR("ENC"),9,0),?(C+50),$J(SDPR("QTY"),9,0)
"RTN","SCRPW40",132,0)
 S LINEFLAG=1
"RTN","SCRPW40",133,0)
 F SDII="ENC","QTY" S SDTOT(SDII)=$G(SDTOT(SDII))+SDPR(SDII)
"RTN","SCRPW40",134,0)
 ;
"RTN","SCRPW40",135,0)
 ;rank and print the modifiers
"RTN","SCRPW40",136,0)
 D START^SCRPW401($NA(^TMP("SCRPW",$J,SDIV,"PROC",1,SDI)))
"RTN","SCRPW40",137,0)
 Q
"RTN","SCRPW40",138,0)
 ;
"RTN","SCRPW40",139,0)
PRHD ;Print procedure subheader
"RTN","SCRPW40",140,0)
 S LINEFLAG=0 Q:SDOUT  W !!?(C),"CODE",!?(C),"NUMBER",?(C+8),"PROCEDURE/MODIFIER",?(C+38),"ENCOUNTERS",?(C+52),"QUANTITY",!?(C),$E(SDLINE,1,6),?(C+8),$E(SDLINE,1,28),?(C+38),$E(SDLINE,1,10),?(C+50),$E(SDLINE,1,10)
"RTN","SCRPW40",141,0)
 Q
"RTN","SCRPW40",142,0)
 ;
"RTN","SCRPW40",143,0)
DXHD ;Print diagnosis subheader
"RTN","SCRPW40",144,0)
 Q:SDOUT  W !!?(C),"CODE",?(C+49),"PRIMARY",?(C+59),"SECONDARY",?(C+75),"TOTAL",!?(C),"NUMBER",?(C+9),"DIAGNOSIS",?(C+47),"DIAGNOSIS",?(C+59),"DIAGNOSIS",?(C+71),"FREQUENCY"
"RTN","SCRPW40",145,0)
 W !?(C),$E(SDLINE,1,7),?(C+9),$E(SDLINE,1,35),?(C+46),$E(SDLINE,1,10),?(C+58),$E(SDLINE,1,10),?(C+70),$E(SDLINE,1,10) Q
"RTN","SCRPW40",146,0)
 ;
"RTN","SCRPW40",147,0)
HDR ;Print report header
"RTN","SCRPW40",148,0)
 I $E(IOST)="C",SDFF N DIR S DIR(0)="E" W ! D ^DIR S SDOUT=Y'=1 Q:SDOUT
"RTN","SCRPW40",149,0)
 D STOP Q:SDOUT
"RTN","SCRPW40",150,0)
 I SDFF!($E(IOST)="C") W $$XY^SCRPW50(IOF,1,0)
"RTN","SCRPW40",151,0)
 I $X W $$XY^SCRPW50("",0,0)
"RTN","SCRPW40",152,0)
 N SDI W SDLINE S SDI=0 F  S SDI=$O(SDT(SDI)) Q:'SDI  W !?(IOM-$L(SDT(SDI))\2),SDT(SDI)
"RTN","SCRPW40",153,0)
 W !,SDLINE,!,"For date range: ",SDPBDT," to ",SDPEDT,!,"Date printed: ",SDPNOW,?(IOM-6-$L(SDPAGE)),"Page: ",SDPAGE,!,SDLINE S SDPAGE=SDPAGE+1,SDFF=1 Q
"RTN","SCRPW40",154,0)
 ;
"RTN","SCRPW40",155,0)
DHDR(SDI,SDT) ;Set up division subheaders
"RTN","SCRPW40",156,0)
 ;Required input: SDI=array number to start with
"RTN","SCRPW40",157,0)
 ;Required input: SDT=array to store subheaders in (pass by reference)
"RTN","SCRPW40",158,0)
 S SDT(SDI)=$S('SDIV:"Summary for "_$P(SDDIV,U,2),SDDIV!($P(SDDIV,U,2)="ALL DIVISIONS"):"For division: "_SDIVN,1:"For facility: "_SDIVN)
"RTN","SCRPW40",159,0)
 I 'SDIV,$P(SDDIV,U,2)="SELECTED DIVISIONS" N SDIVN S SDIVN="" D  Q
"RTN","SCRPW40",160,0)
 .F  S SDIVN=$O(SDIV(SDIVN)) Q:SDIVN=""  S SDI=SDI+1,SDT(SDI)="Division: "_SDIVN
"RTN","SCRPW40",161,0)
 .Q
"RTN","SCRPW40",162,0)
 I 'SDIV,$P(SDDIV,U,2)="ALL DIVISIONS" D
"RTN","SCRPW40",163,0)
 .N SDIV S SDIV=0 F  S SDIV=$O(^TMP("SCRPW",$J,SDIV)) Q:'SDIV  S SDI=SDI+1,SDT(SDI)="Division: "_$P($G(^DG(40.8,SDIV,0)),U)
"RTN","SCRPW40",164,0)
 .Q
"RTN","SCRPW40",165,0)
 Q
"RTN","SDAMBAE3")
0^2^B2667789^B2632564
"RTN","SDAMBAE3",1,0)
SDAMBAE3 ;ALB/BOK/MJK - ADD/EDIT CON'T ;7/8/91  12:18 ;
"RTN","SDAMBAE3",2,0)
 ;;5.3;Scheduling;**18,29,40,111,132,556**;Aug 13, 1993;Build 3
"RTN","SDAMBAE3",3,0)
 ;
"RTN","SDAMBAE3",4,0)
DUP ; -- inp transform to check for duplicate CPTs in ^DD(409.51,21:25,0)
"RTN","SDAMBAE3",5,0)
 ;    variable '%' is passed and defined as the piece beinging edited
"RTN","SDAMBAE3",6,0)
 ;
"RTN","SDAMBAE3",7,0)
 F C=0:0 S C=$O(^SDV("AP",DA(1),C)) Q:'C  I $D(^SDV(DA(1),"CS",C,"PR")) S Y=^("PR") F I=1:1:5 I $S(C'=DA:1,1:I'=%),$P(Y,U,I)=X D DUPMES G DUPQ
"RTN","SDAMBAE3",8,0)
DUPQ K C Q
"RTN","SDAMBAE3",9,0)
 ;
"RTN","SDAMBAE3",10,0)
DUPMES ;
"RTN","SDAMBAE3",11,0)
 N SDX S SDX=$$CPT^ICPTCOD(X)
"RTN","SDAMBAE3",12,0)
 W !?2,*7,"WARNING: '",$P(SDX,U,3),"' has already been entered for this",!?11,"patient on this VISIT DATE(Entry #",C,").",!!?11,"Procedure will be added again."
"RTN","SDAMBAE3",13,0)
 K SDX
"RTN","SDAMBAE3",14,0)
 Q
"RTN","SDAMBAE3",15,0)
 ;
"RTN","SDAMBAE3",16,0)
SCREEN ; -- screen logic for 409.51 proc fields
"RTN","SDAMBAE3",17,0)
 ;  finds status for effective date DA(1)
"RTN","SDAMBAE3",18,0)
 I $P($$CPT^ICPTCOD(Y,$P(DA(1),".")),U,7)
"RTN","SDAMBAE3",19,0)
 Q
"RTN","SDAMBAE3",20,0)
 ;
"RTN","SDAMBAE3",21,0)
ID ; -- DIC("W") logic for amb proc look-ups
"RTN","SDAMBAE3",22,0)
 N SDICPT,SDICPT1,SDIX
"RTN","SDAMBAE3",23,0)
 S SDICPT1=$$CPT^ICPTCOD(Y,D)
"RTN","SDAMBAE3",24,0)
 Q:SDICPT1<0
"RTN","SDAMBAE3",25,0)
 W ?4,$P(SDICPT1,U,3)
"RTN","SDAMBAE3",26,0)
 I '$P(SDICPT1,U,7) W !?10,"** INACTIVE **"
"RTN","SDAMBAE3",27,0)
 ;
"RTN","SDAMBAE3",28,0)
 ;  print code description
"RTN","SDAMBAE3",29,0)
 S SDICPT=$$CPTD^ICPTCOD(Y,"SDICPT") F SDIX=1:1:SDICPT W !?10,SDICPT(SDIX)
"RTN","SDAMBAE3",30,0)
 ;  set $TEST
"RTN","SDAMBAE3",31,0)
 W !?9 I +$$CPT^ICPTCOD(Y)>0
"RTN","SDAMBAE3",32,0)
 Q
"RTN","SDAMBMR")
0^3^B29279736^B29170892
"RTN","SDAMBMR",1,0)
SDAMBMR ;ALB/MLI - AMBULATORY PROCEDURE MANAGEMENT REPORTS ; 4/24/00 9:20am
"RTN","SDAMBMR",2,0)
 ;;5.3;Scheduling;**140,132,159,180,556**;Aug 13, 1993;Build 3
"RTN","SDAMBMR",3,0)
EN D Q,ASK2^SDDIV G:Y<0 Q S U="^",SDAS=0
"RTN","SDAMBMR",4,0)
1 S SDFL=0 K DIC W !!,"****Date Range Selection****",!!,"Enter fiscal year or date range within fiscal year",!
"RTN","SDAMBMR",5,0)
 S %DT="AE",%DT("A")="   Beginning DATE : " D ^%DT G Q:Y<0,FY:'$E(Y,4,7) S SDB=Y-.1,%DT(0)=Y W ! S %DT("A")="   Ending DATE : " D ^%DT K %DT G:Y<0 Q W ! D CK G:SDFL 1 S SDE=Y+.9
"RTN","SDAMBMR",6,0)
2 R !,"Sort by 'C'linic or 'S'ervice: C// ",X:DTIME G Q:(X="^")!'$T S Z="^CLINIC^SERVICE" W:X["?" !,"Enter: ",!,?5,"'C' to sort data by clinic",!,?5,"'S' to sort by service" I X="" S X="C" W X
"RTN","SDAMBMR",7,0)
 D IN^DGHELP S SDSC=X G 2:%=-1,4:X="C"
"RTN","SDAMBMR",8,0)
3 F SDI=0:0 W !,"Enter Service: " W:'$D(SDS) "ALL//" R X:DTIME Q:X=""!(X="^")!'$T  D:X["?" QS^SDAMBMR1 S Z="^MEDICINE^SURGERY^PSYCHIATRY^REHAB MEDICINE^NEUROLOGY" D IN^DGHELP I %'=-1 S SDS(X)=""
"RTN","SDAMBMR",9,0)
 G Q:X="^"!'$T I X="",'$D(SDS) S SDS="",SDAS=1
"RTN","SDAMBMR",10,0)
 S VAUTC="" G 5
"RTN","SDAMBMR",11,0)
4 S VAUTNI=1 D CLINIC^VAUTOMA G Q:Y<0
"RTN","SDAMBMR",12,0)
5 R !,"Brief or Expanded Report? B//",X:DTIME G Q:X="^"!'$T S Z="^BRIEF^EXPANDED" W:X["?" !,"Enter 'B'rief to see a simple breakdown by clinic or service",!,"or 'E'xpanded to be able to sort by procedure or by patient" I X="" S X="B" W X
"RTN","SDAMBMR",13,0)
 ;D IN^DGHELP S SDRT=X G 5:%=-1,9:X="B"
"RTN","SDAMBMR",14,0)
 D IN^DGHELP S SDRT=X G 5:%=-1 I SDRT="B" S SDMOD=0 G 9
"RTN","SDAMBMR",15,0)
6 R !,"Sort by 'P'rocedure or patient 'N'ame: P//",X:DTIME G Q:X="^"!'$T S Z="^PROCEDURE^NAME" W:X["?" !,"Enter:",!,"'P'to sort by procedure",!,"'N' to sort by patient name" I X="" S X="P" W X
"RTN","SDAMBMR",16,0)
 D IN^DGHELP S SDPN=X G 6:%=-1,8:X="P"
"RTN","SDAMBMR",17,0)
7 S VAUTNI=1 D PATIENT^VAUTOMA G Q:Y<0 D MOD G 9
"RTN","SDAMBMR",18,0)
8 S DIC="^ICPT(",DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)",VAUTNI=1,VAUTSTR="CPT code",VAUTVB="SD" D FIRST^VAUTOMA G Q:Y<0 S SDP=SD
"RTN","SDAMBMR",19,0)
 I $D(SD) F I=0:0 S I=$O(SD(I)) Q:I'?5AN  S SDP(SD(I))=I K SD(I)
"RTN","SDAMBMR",20,0)
 K SD
"RTN","SDAMBMR",21,0)
 D MOD
"RTN","SDAMBMR",22,0)
PN W !,"Do you want to see patient names" S %=2 D YN^DICN I %Y["?" W !,"Enter 'Y'es to see patients alphabetized within procedure",!,"'N'o to see just subtotals of number of patients receiving each procedure."
"RTN","SDAMBMR",23,0)
 G Q:%Y["^",PN:%'>0 S SDPT=%
"RTN","SDAMBMR",24,0)
9 W !,"*** Note: this report not designed to display on a CRT.  ***" S DGVAR="SDAS^VAUTD#^SDB^SDE^SDSC^SDS#^VAUTC#^SDRT^SDPN^VAUTN#^SDP#^SDPT^SDMOD",DGPGM="10^SDAMBMR" D ZIS^DGUTQ G:POP Q U IO D 10 Q
"RTN","SDAMBMR",25,0)
10 N SDDT,SDOE,SDOE0,SDVIEN,SDOEP,SDCODT,SDVCPT
"RTN","SDAMBMR",26,0)
 K ^TMP("SDVSTS",$J)
"RTN","SDAMBMR",27,0)
 K ^TMP("SDV",$J)
"RTN","SDAMBMR",28,0)
 S SDFG=0
"RTN","SDAMBMR",29,0)
 S VADAT("F")=1,VADAT("D")="/" D ^VADATE
"RTN","SDAMBMR",30,0)
 D INIT^SDAMBMR3
"RTN","SDAMBMR",31,0)
 S SDNOW=$TR($$FMTE^XLFDT(VADATE("I"),"5F")," ","0")
"RTN","SDAMBMR",32,0)
 D KVAR^VADATE
"RTN","SDAMBMR",33,0)
 ;
"RTN","SDAMBMR",34,0)
 S SDDT=SDB F  S SDDT=$O(^SCE("B",SDDT)) Q:'SDDT!(SDDT>SDE)  D
"RTN","SDAMBMR",35,0)
 . S SDI=SDDT
"RTN","SDAMBMR",36,0)
 . S SDOE=0
"RTN","SDAMBMR",37,0)
 . F  S SDOE=$O(^SCE("B",SDDT,SDOE)) Q:'SDOE  D
"RTN","SDAMBMR",38,0)
 . . I $$OKAE^SDVSIT2(SDOE),$D(^SCE(SDOE,0)) D
"RTN","SDAMBMR",39,0)
 . . . S SDOE0=$G(^SCE(SDOE,0))
"RTN","SDAMBMR",40,0)
 . . . S DFN=+$P(SDOE0,U,2)
"RTN","SDAMBMR",41,0)
 . . . S SDVIEN=+$P(SDOE0,U,5)
"RTN","SDAMBMR",42,0)
 . . . S SDOEP=+$P(SDOE0,U,6)
"RTN","SDAMBMR",43,0)
 . . . S SDCODT=+$P(SDOE0,U,7)
"RTN","SDAMBMR",44,0)
 . . . ;
"RTN","SDAMBMR",45,0)
 . . . ; -- checks
"RTN","SDAMBMR",46,0)
 . . . Q:SDOEP                                   ; -- can't have a parent
"RTN","SDAMBMR",47,0)
 . . . Q:'SDCODT                                 ; -- co must be completed
"RTN","SDAMBMR",48,0)
 . . . Q:'$D(^DPT(DFN,0))                        ; -- pat record must exist
"RTN","SDAMBMR",49,0)
 . . . IF SDVIEN,$D(^TMP("SDVSTS",$J,SDVIEN)) Q  ; -- only process visit once
"RTN","SDAMBMR",50,0)
 . . . IF 'SDVIEN,$D(^TMP("SDV",$J,DFN,+$P(+SDOE0,"."),+$P(SDOE,U,4))) Q  ; -- only process dfn/date/clinic once for old encounters
"RTN","SDAMBMR",51,0)
 . . . Q:'$$CPT^SDOE(SDOE)                       ; -- at least one cpt exists
"RTN","SDAMBMR",52,0)
 . . . Q:$P($G(^SC(+$P(SDOE0,U,4),0)),U,3)'="C"  ; -- location must be a clinic
"RTN","SDAMBMR",53,0)
 . . . ;
"RTN","SDAMBMR",54,0)
 . . . D ^SDAMBMR1
"RTN","SDAMBMR",55,0)
 . . . IF SDVIEN S ^TMP("SDVSTS",$J,SDVIEN)=SDOE
"RTN","SDAMBMR",56,0)
 . . . IF 'SDVIEN S ^TMP("SDV",$J,DFN,+$P(+SDOE0,"."),+$P(SDOE,U,4))=SDOE
"RTN","SDAMBMR",57,0)
 K ^TMP("SDVSTS",$J)
"RTN","SDAMBMR",58,0)
 K ^TMP("SDV",$J)
"RTN","SDAMBMR",59,0)
 ;
"RTN","SDAMBMR",60,0)
 D 1^SDAMBMR2:SDTOT,NONE^SDAMBMR1:'SDTOT
"RTN","SDAMBMR",61,0)
Q W ! K SDAGE,SDAGEH,SDAGET,SDAGETT,SDAS,SDB,SDCL,SDCT,SDDIV,SDE,SDF,SDFG,SDFL,SDFY,SDHI,SDI,SDINFO,SDJ,SDN,SDNOW,SDP,SDPG,SDPN,SDPR,SDPRC,SDPRO,SDPT,SDRT,SDS,SDSC,SDSTP,SDSTR,SDSXF,SDSXM,SDT,SDTOT,SDTT,SDTXT,SDVB,SDX,SDY,SDVST
"RTN","SDAMBMR",62,0)
 K %,^TMP($J),%DT,%Y,DFN,DGPGM,DGVAR,DIC,I,I1,J,J1,K,K1,L,L1,M,N,POP,PR,SDMOD,VAUTC,VAUTD,VAUTN,X,Y,Z,QUES,%I,%QMK,%YN,ANS,C,DEF D KVAR^VADPT,KVAR^VADATE,CLOSE^DGUTQ Q
"RTN","SDAMBMR",63,0)
FY S SDFY=$E(Y,1,3),SDB=((SDFY-1_"1001")-.1),SDE=(SDFY_"0930")+.9 G 2
"RTN","SDAMBMR",64,0)
QQ S SDTXT=$P($P(DIC("A")," ",2),":") W !,"Enter a ",SDTXT," or 'return' when all ",SDTXT,"s have been selected",!,"You may select a maximum of 20 ",SDTXT,"s" Q
"RTN","SDAMBMR",65,0)
CK S SDY=$S($E(SDB,4,5)>9:$E(SDB,1,3)+1,1:$E(SDB,1,3)) I Y>(SDY_"1000") W !,"Dates must be within fiscal year" S SDFL=1 Q
"RTN","SDAMBMR",66,0)
 Q
"RTN","SDAMBMR",67,0)
MOD N DIR,Y,DTOUT,DIRUT,DUOUT
"RTN","SDAMBMR",68,0)
 S DIR(0)="Y"
"RTN","SDAMBMR",69,0)
 S DIR("A")="Do you want to include CPT modifiers on the report"
"RTN","SDAMBMR",70,0)
 S DIR("B")="Yes"
"RTN","SDAMBMR",71,0)
 D ^DIR
"RTN","SDAMBMR",72,0)
 I $D(DTOUT)!($D(DIRUT)) G Q
"RTN","SDAMBMR",73,0)
 S SDMOD=+Y
"RTN","SDAMBMR",74,0)
 Q
"RTN","SDAMODO2")
0^4^B22975014^B22614966
"RTN","SDAMODO2",1,0)
SDAMODO2 ;ALB/SCK - PROVIDER DIAGNOSTICS REPORT, SET-UP DATA ; 05 Oct 98  8:43 PM
"RTN","SDAMODO2",2,0)
 ;;5.3;Scheduling;**11,25,49,132,159,556**;Aug 13, 1993;Build 3
"RTN","SDAMODO2",3,0)
START ;
"RTN","SDAMODO2",4,0)
 U IO
"RTN","SDAMODO2",5,0)
 K ^TMP("SDRPT",$J),SDT,SDOE,DOE
"RTN","SDAMODO2",6,0)
 S SDT=SDBEG F  S SDT=$O(^SCE("B",SDT)) Q:'SDT!(SDT>SDEND)  D
"RTN","SDAMODO2",7,0)
 . S SDOE=0 F  S SDOE=$O(^SCE("B",SDT,SDOE)) Q:'SDOE  D
"RTN","SDAMODO2",8,0)
 .. K SDPRX,SDOE0
"RTN","SDAMODO2",9,0)
 .. Q:'$D(^SCE(SDOE,0))  S SDOE0=$G(^SCE(SDOE,0))
"RTN","SDAMODO2",10,0)
 .. Q:'$P(SDOE0,U,7)
"RTN","SDAMODO2",11,0)
 .. Q:$P(SDOE0,U,6)  ;ignore "child" encounters
"RTN","SDAMODO2",12,0)
 .. I '$$OKDIV(+$P(SDOE0,U,11)) Q
"RTN","SDAMODO2",13,0)
 .. I '$$CHECK(SORT1,SDOE0,SDOE) Q
"RTN","SDAMODO2",14,0)
 .. I '$$CHECK(SORT2,SDOE0,SDOE) Q
"RTN","SDAMODO2",15,0)
 .. S SDPRX("DFN")=+$P(SDOE0,U,2)
"RTN","SDAMODO2",16,0)
 .. S SDPRX("OED")=$P(SDOE0,U)
"RTN","SDAMODO2",17,0)
 .. S SDPRX("CL NAME")=$S(+$P($G(SDOE0),U,4)>0:$P(^SC(+$P(SDOE0,U,4),0),U),1:"UNSPECIFIED")
"RTN","SDAMODO2",18,0)
 .. S SDPRX("DIV NAME")=+$P(SDOE0,U,11)
"RTN","SDAMODO2",19,0)
 .. S SDPRX("PRV")=$$PRV1($S($P($G(SDOE0),U,6)']"":SDOE,1:$P($G(SDOE0),U,6)))
"RTN","SDAMODO2",20,0)
 .. S SDPRX("DX")=$$DX1($S($P($G(SDOE0),U,6)']"":SDOE,1:$P($G(SDOE0),U,6)))
"RTN","SDAMODO2",21,0)
 .. S SDPRX("SCODE")=+$P(SDOE0,U,3)
"RTN","SDAMODO2",22,0)
 .. D BLD(.SDPRX,SORT1,SORT2)
"RTN","SDAMODO2",23,0)
 D REPORT^SDAMODO3
"RTN","SDAMODO2",24,0)
EXIT ;
"RTN","SDAMODO2",25,0)
 K DOE,SDOE,SDT,OEDIV,DXD,PD,SD,OEN,SRT,VAR1,DFN,P1,XPR,XPX,XDN,XPT,XDX,DXCDE,SDPRX,VA,VAERR,SDOE0,ZTDESC,%ZIS,ZTSAVE,ZTRTN,ZTSK,ZTQUEUED
"RTN","SDAMODO2",26,0)
 Q
"RTN","SDAMODO2",27,0)
 ;
"RTN","SDAMODO2",28,0)
BLD(SDPRX,SORT1,SORT2) ;
"RTN","SDAMODO2",29,0)
 N Y,SUB1,SUB2,PRV
"RTN","SDAMODO2",30,0)
 S Y=0
"RTN","SDAMODO2",31,0)
 S SUB1=$S(SORT1=1:$$PRSUB($P(SDPRX("PRV"),U)),SORT1=2:$P(SDPRX("DX"),U),SORT1=3:$$PTSUB(SDPRX("DFN")),SORT1=4:SDPRX("CL NAME"),SORT1=5:SDPRX("SCODE"))
"RTN","SDAMODO2",32,0)
 S SUB2=$S(SORT2=1:$$PRSUB($P(SDPRX("PRV"),U)),SORT2=2:$P(SDPRX("DX"),U),SORT2=3:$$PTSUB(SDPRX("DFN")),SORT2=4:SDPRX("CL NAME"),SORT2=5:SDPRX("SCODE"))
"RTN","SDAMODO2",33,0)
 F I=1:1 I '$D(^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I)) D  Q
"RTN","SDAMODO2",34,0)
 . S PRV=$P(SDPRX("PRV"),U),DXCDE=$P(SDPRX("DX"),U)
"RTN","SDAMODO2",35,0)
 . D BLDTMP ; build first line
"RTN","SDAMODO2",36,0)
 . I SORT1=1 D  Q
"RTN","SDAMODO2",37,0)
 .. F XX=2:1 S PRV=$P(SDPRX("PRV"),U,XX)  Q:PRV']""  D
"RTN","SDAMODO2",38,0)
 ... S SUB1=$$PRSUB($P(SDPRX("PRV"),U,XX)) D BLDTMP
"RTN","SDAMODO2",39,0)
 . I SORT1=2 D  Q
"RTN","SDAMODO2",40,0)
 .. F XX=2:1 S DXCDE=$P(SDPRX("DX"),U,XX) Q:DXCDE']""  D
"RTN","SDAMODO2",41,0)
 ... S SUB1=DXCDE D BLDTMP
"RTN","SDAMODO2",42,0)
 Q
"RTN","SDAMODO2",43,0)
 ;
"RTN","SDAMODO2",44,0)
BLDTMP ;
"RTN","SDAMODO2",45,0)
 N X1
"RTN","SDAMODO2",46,0)
 S ^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I,0)=SDPRX("DFN")_"^"_$$PDATA(SDPRX("DFN"))_"^"_SDPRX("CL NAME")_"^"_SDPRX("SCODE")_"^"_PRV_"^"_DXCDE
"RTN","SDAMODO2",47,0)
 F X1=1:1 Q:'$P($G(SDPRX("PRV")),U,X1)  D
"RTN","SDAMODO2",48,0)
 . Q:$P($G(SDPRX("PRV")),U,X1)=PRV
"RTN","SDAMODO2",49,0)
 . S ^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I,"PRV",$P($G(SDPRX("PRV")),U,X1))=""
"RTN","SDAMODO2",50,0)
 I SORT1'=2 F X1=1:1 Q:$P($G(SDPRX("DX")),U,X1)=""  D
"RTN","SDAMODO2",51,0)
 . Q:$P($G(SDPRX("DX")),U,X1)=DXCDE
"RTN","SDAMODO2",52,0)
 . S ^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I,"DX",$P($G(SDPRX("DX")),U,X1))=""
"RTN","SDAMODO2",53,0)
 Q
"RTN","SDAMODO2",54,0)
 ;
"RTN","SDAMODO2",55,0)
PRSUB(PRX) ;
"RTN","SDAMODO2",56,0)
 S XPR="UNKNOWN^0"
"RTN","SDAMODO2",57,0)
 I +PRX>0 S XPR=$E($P(^VA(200,+PRX,0),U),1,29-$L(+PRX))_"^"_PRX
"RTN","SDAMODO2",58,0)
 Q (XPR)
"RTN","SDAMODO2",59,0)
 ;
"RTN","SDAMODO2",60,0)
PTSUB(PDFN) ;
"RTN","SDAMODO2",61,0)
 S XPT=$E($P(^DPT(+PDFN,0),U),1,29-$L(PDFN))_"^"_PDFN
"RTN","SDAMODO2",62,0)
 Q (XPT)
"RTN","SDAMODO2",63,0)
 ;
"RTN","SDAMODO2",64,0)
PDATA(DFN) ;
"RTN","SDAMODO2",65,0)
 D PID^VADPT6
"RTN","SDAMODO2",66,0)
 Q (VA("PID"))
"RTN","SDAMODO2",67,0)
 ;
"RTN","SDAMODO2",68,0)
OKDIV(OEDIV)    ;   check for divisions
"RTN","SDAMODO2",69,0)
 N Y
"RTN","SDAMODO2",70,0)
 S Y=0
"RTN","SDAMODO2",71,0)
 I OEDIV>0,VAUTD!($D(VAUTD(OEDIV))) S Y=1
"RTN","SDAMODO2",72,0)
OKDIVQ Q (Y)
"RTN","SDAMODO2",73,0)
 ;
"RTN","SDAMODO2",74,0)
CHECK(SRT,SDOE0,OEN) ;
"RTN","SDAMODO2",75,0)
 N Y
"RTN","SDAMODO2",76,0)
 S Y=0
"RTN","SDAMODO2",77,0)
 I SRT=1 S Y=$$PRV(OEN) G CHECKQ
"RTN","SDAMODO2",78,0)
 I SRT=2 S Y=$$DX(OEN) G CHECKQ
"RTN","SDAMODO2",79,0)
 I SRT=3,$P($G(SDOE0),U,2),PATN!($D(PATN(+$P($G(SDOE0),U,2)))) S Y=1 G CHECKQ
"RTN","SDAMODO2",80,0)
 I SRT=4,$P($G(SDOE0),U,4),CLINIC!($D(CLINIC(+$P($G(SDOE0),U,4)))) S Y=1 G CHECKQ
"RTN","SDAMODO2",81,0)
 I SRT=5,$P($G(SDOE0),U,3),STOPC!($D(STOPC(+$P($G(SDOE0),U,3)))) S Y=1 G CHECKQ
"RTN","SDAMODO2",82,0)
CHECKQ Q (Y)
"RTN","SDAMODO2",83,0)
 ;
"RTN","SDAMODO2",84,0)
PRV(OEN) ; -- is there at least one provider from selected list
"RTN","SDAMODO2",85,0)
 N Y,SD,PD,SDVPRV,SDVPRVS
"RTN","SDAMODO2",86,0)
 S Y=0
"RTN","SDAMODO2",87,0)
 D GETPRV^SDOE(OEN,"SDVPRVS")
"RTN","SDAMODO2",88,0)
 S SDVPRV=0
"RTN","SDAMODO2",89,0)
 F  S SDVPRV=$O(SDVPRVS(SDVPRV)) Q:'SDVPRV  D  Q:Y
"RTN","SDAMODO2",90,0)
 . S PD=+SDVPRVS(SDVPRV)
"RTN","SDAMODO2",91,0)
 . I PROVDR!($D(PROVDR(PD))) S Y=1  Q
"RTN","SDAMODO2",92,0)
 Q Y
"RTN","SDAMODO2",93,0)
 ;
"RTN","SDAMODO2",94,0)
DX(OEN) ; -- is there at least one dx from selected list
"RTN","SDAMODO2",95,0)
 N Y,SD,DXD,SDVPOV,SDVPOVS
"RTN","SDAMODO2",96,0)
 S Y=0
"RTN","SDAMODO2",97,0)
 D GETDX^SDOE(OEN,"SDVPOVS")
"RTN","SDAMODO2",98,0)
 S SDVPOV=0
"RTN","SDAMODO2",99,0)
 F  S SDVPOV=$O(SDVPOVS(SDVPOV)) Q:'SDVPOV  D  Q:Y
"RTN","SDAMODO2",100,0)
 . S DXD=+SDVPOVS(SDVPOV)
"RTN","SDAMODO2",101,0)
 . I PDIAG!($D(PDIAG(DXD))) S Y=1 Q
"RTN","SDAMODO2",102,0)
 Q Y
"RTN","SDAMODO2",103,0)
 ;
"RTN","SDAMODO2",104,0)
PRV1(OEN) ; -- get list of providers for encounter
"RTN","SDAMODO2",105,0)
 N PROV,SD,Y,XX,PIFN,PRX,QFLAG,SDVPRV,SDVPRVS
"RTN","SDAMODO2",106,0)
 S Y=0,PRX="",QFLAG=0
"RTN","SDAMODO2",107,0)
 D GETPRV^SDOE(OEN,"SDVPRVS")
"RTN","SDAMODO2",108,0)
 S SDVPRV=0
"RTN","SDAMODO2",109,0)
 F  S SDVPRV=$O(SDVPRVS(SDVPRV)) Q:'SDVPRV  D  Q:QFLAG
"RTN","SDAMODO2",110,0)
 . S PIFN=+SDVPRVS(SDVPRV)
"RTN","SDAMODO2",111,0)
 . IF $D(PROVDR),'PROVDR,'$D(PROVDR(PIFN)) Q
"RTN","SDAMODO2",112,0)
 . S PRX=PRX_$S($G(^VA(200,PIFN,0))]"":PIFN,1:"UNKNOWN")_"^"
"RTN","SDAMODO2",113,0)
 . S:$L(PRX)>250 QFLAG=1
"RTN","SDAMODO2",114,0)
 I PRX']"" S PRX="UNKNOWN"
"RTN","SDAMODO2",115,0)
 Q PRX
"RTN","SDAMODO2",116,0)
 ;
"RTN","SDAMODO2",117,0)
DX1(OEN) ; -- get list of dxs for encounter
"RTN","SDAMODO2",118,0)
 N SD,Y,XX,XDX,XDN,QFLAG,SDVPOV,SDVPOVS,SDICD9
"RTN","SDAMODO2",119,0)
 S XX=0,XDN="",QFLAG=0
"RTN","SDAMODO2",120,0)
 D GETDX^SDOE(OEN,"SDVPOVS")
"RTN","SDAMODO2",121,0)
 S SDVPOV=0
"RTN","SDAMODO2",122,0)
 F  S SDVPOV=$O(SDVPOVS(SDVPOV)) Q:'SDVPOV  D  Q:QFLAG
"RTN","SDAMODO2",123,0)
 . S XX=+SDVPOVS(SDVPOV)
"RTN","SDAMODO2",124,0)
 . I $D(PDIAG),'PDIAG,'$D(PDIAG(XX)) Q
"RTN","SDAMODO2",125,0)
 . S SDICD9=$$ICDDX^ICDCODE(XX)
"RTN","SDAMODO2",126,0)
 . S XDN=XDN_$S($D(SDICD9):$P(SDICD9,U,2)_U,1:"NOT SPECIFIED^")
"RTN","SDAMODO2",127,0)
 . S:$L(XDN)>250 QFLAG=1
"RTN","SDAMODO2",128,0)
 S:XDN']"" XDN="NOT SPECIFIED"
"RTN","SDAMODO2",129,0)
 Q XDN
"RTN","SDOEDX")
0^5^B9649480^B9561426
"RTN","SDOEDX",1,0)
SDOEDX ;ALB/MJK - ACRP DX APIs For An Encounter ;8/12/96
"RTN","SDOEDX",2,0)
 ;;5.3;Scheduling;**131,556**;Aug 13, 1993;Build 3
"RTN","SDOEDX",3,0)
 ;
"RTN","SDOEDX",4,0)
DX(SDOE,SDERR) ; -- SDOE ASSIGNED A DIAGNOSIS
"RTN","SDOEDX",5,0)
 ;   API ID: 64
"RTN","SDOEDX",6,0)
 ;
"RTN","SDOEDX",7,0)
 ;
"RTN","SDOEDX",8,0)
 N SDOK
"RTN","SDOEDX",9,0)
 S SDOK=0
"RTN","SDOEDX",10,0)
 ;
"RTN","SDOEDX",11,0)
 ; -- do validation checks
"RTN","SDOEDX",12,0)
 IF '$$VALOE^SDOEOE(.SDOE,$G(SDERR)) G DXQ
"RTN","SDOEDX",13,0)
 IF $$OLD^SDOEUT(SDOE) S SDOK=$$OLDDX(SDOE) G DXQ
"RTN","SDOEDX",14,0)
 ;
"RTN","SDOEDX",15,0)
 S SDOK=$$DX^PXAPIOE($$VIEN^SDOEUT(.SDOE),$G(SDERR))
"RTN","SDOEDX",16,0)
DXQ Q SDOK
"RTN","SDOEDX",17,0)
 ;
"RTN","SDOEDX",18,0)
 ;
"RTN","SDOEDX",19,0)
GETDX(SDOE,SDDX,SDERR) ; -- SDOE GET DIAGNOSES
"RTN","SDOEDX",20,0)
 ;   API ID: 56
"RTN","SDOEDX",21,0)
 ;
"RTN","SDOEDX",22,0)
 ;
"RTN","SDOEDX",23,0)
GETDXG ; -- goto entry point
"RTN","SDOEDX",24,0)
 ;
"RTN","SDOEDX",25,0)
 ; -- do validation checks
"RTN","SDOEDX",26,0)
 IF '$$VALOE^SDOEOE(.SDOE,$G(SDERR)) G GETDXQ
"RTN","SDOEDX",27,0)
 IF $$OLD^SDOEUT(SDOE) D OLDDXS(SDOE,.SDDX) G GETDXQ
"RTN","SDOEDX",28,0)
 ;
"RTN","SDOEDX",29,0)
 D GETDX^PXAPIOE($$VIEN^SDOEUT(.SDOE),.SDDX,$G(SDERR))
"RTN","SDOEDX",30,0)
GETDXQ Q
"RTN","SDOEDX",31,0)
 ;
"RTN","SDOEDX",32,0)
 ;
"RTN","SDOEDX",33,0)
FINDDX(SDOE,SDDXID,SDERR) ; -- SDOE FIND DIAGNOSIS
"RTN","SDOEDX",34,0)
 ;   API ID: 70
"RTN","SDOEDX",35,0)
 ;
"RTN","SDOEDX",36,0)
 ;
"RTN","SDOEDX",37,0)
 N SDDXS,SDOK,I
"RTN","SDOEDX",38,0)
 S SDDXS="SDDXS"
"RTN","SDOEDX",39,0)
 ;
"RTN","SDOEDX",40,0)
 ; -- do validation checks
"RTN","SDOEDX",41,0)
 IF '$$VALDX(.SDDXID,$G(SDERR)) S SDOK=0 G FINDDXQ
"RTN","SDOEDX",42,0)
 ;
"RTN","SDOEDX",43,0)
 D GETDX(.SDOE,.SDDXS,$G(SDERR))
"RTN","SDOEDX",44,0)
 S (I,SDOK)=0
"RTN","SDOEDX",45,0)
 F  S I=$O(SDDXS(I)) Q:'I  S SDOK=(+SDDXS(I)=SDDXID) Q:SDOK
"RTN","SDOEDX",46,0)
FINDDXQ Q SDOK
"RTN","SDOEDX",47,0)
 ;
"RTN","SDOEDX",48,0)
 ;
"RTN","SDOEDX",49,0)
GETPDX(SDOE,SDERR) ; -- SDOE GET PRIMARY DIAGNOSIS
"RTN","SDOEDX",50,0)
 ;   API ID: 73
"RTN","SDOEDX",51,0)
 ;
"RTN","SDOEDX",52,0)
 ;
"RTN","SDOEDX",53,0)
 N SDDXS,I,SDPDX,CNT
"RTN","SDOEDX",54,0)
 S SDDXS="SDDXS"
"RTN","SDOEDX",55,0)
 D GETDX(.SDOE,.SDDXS,$G(SDERR))
"RTN","SDOEDX",56,0)
 ;
"RTN","SDOEDX",57,0)
 ; -- how many are primaries / kill secondaries from array
"RTN","SDOEDX",58,0)
 S (CNT,I)=0
"RTN","SDOEDX",59,0)
 F  S I=$O(SDDXS(I)) Q:'I  S X=$P(SDDXS(I),"^",12) S:X="P" CNT=CNT+1 K:X'="P" SDDXS(I)
"RTN","SDOEDX",60,0)
 S SDPDX=+$G(SDDXS(+$O(SDDXS(0))))
"RTN","SDOEDX",61,0)
 ;
"RTN","SDOEDX",62,0)
 ; -- check for too many primaries & build error msg
"RTN","SDOEDX",63,0)
 IF CNT>1 D
"RTN","SDOEDX",64,0)
 . N DFN,DFN0,SDIN,SDOUT,Y,I,VA
"RTN","SDOEDX",65,0)
 . ;
"RTN","SDOEDX",66,0)
 . S SDPDX=0
"RTN","SDOEDX",67,0)
 . S DFN=+$P($G(^SCE(+SDOE,0)),"^",2)
"RTN","SDOEDX",68,0)
 . S DFN0=$G(^DPT(DFN,0))
"RTN","SDOEDX",69,0)
 . D PID^VADPT6
"RTN","SDOEDX",70,0)
 . ;
"RTN","SDOEDX",71,0)
 . S SDIN("ID")=SDOE,SDOUT("ID")=SDOE
"RTN","SDOEDX",72,0)
 . S SDIN("DFN")=DFN,SDOUT("DFN")=DFN
"RTN","SDOEDX",73,0)
 . S SDIN("PATNAME")=$P(DFN0,"^"),SDOUT("PATNAME")=$P(DFN0,"^")
"RTN","SDOEDX",74,0)
 . S SDIN("PID")=VA("PID"),SDOUT("PID")=VA("PID")
"RTN","SDOEDX",75,0)
 . ;
"RTN","SDOEDX",76,0)
 . S I=0,Y=""
"RTN","SDOEDX",77,0)
 . F  S I=$O(SDDX(I)) Q:'I  S Y=$P($G(^ICD9(+SDDXS,0)),"^")_"  "
"RTN","SDOEDX",78,0)
 . S SDIN("CODES")=Y,SDOUT("CODES")=Y
"RTN","SDOEDX",79,0)
 . ;
"RTN","SDOEDX",80,0)
 . D BLD^SDQVAL(4096800.025,.SDIN,.SDOUT,$G(SDERR))
"RTN","SDOEDX",81,0)
 ;
"RTN","SDOEDX",82,0)
GETPDXQ Q SDPDX
"RTN","SDOEDX",83,0)
 ;
"RTN","SDOEDX",84,0)
 ;
"RTN","SDOEDX",85,0)
VALDX(SDDXID,SDERR) ; -- validate dx input
"RTN","SDOEDX",86,0)
 ;
"RTN","SDOEDX",87,0)
 ; -- do checks
"RTN","SDOEDX",88,0)
 ;IF SDDXID,$D(^ICD9(SDDXID,0)) Q 1
"RTN","SDOEDX",89,0)
 I SDDXID,+$$ICDDX^ICDCODE(SDDXID)>0 Q 1
"RTN","SDOEDX",90,0)
 ;
"RTN","SDOEDX",91,0)
 ; -- build error msg
"RTN","SDOEDX",92,0)
 N SDIN,SDOUT
"RTN","SDOEDX",93,0)
 S SDIN("ID")=SDDXID
"RTN","SDOEDX",94,0)
 S SDOUT("ID")=SDDXID
"RTN","SDOEDX",95,0)
 D BLD^SDQVAL(4096800.004,.SDIN,.SDOUT,$G(SDERR))
"RTN","SDOEDX",96,0)
 Q 0
"RTN","SDOEDX",97,0)
 ;
"RTN","SDOEDX",98,0)
 ;
"RTN","SDOEDX",99,0)
OLDDX(SDOE) ; -- at least one dx for OLD encounter?
"RTN","SDOEDX",100,0)
 Q ($O(^SDD(409.43,"OE",+SDOE,0))>0)
"RTN","SDOEDX",101,0)
 ;
"RTN","SDOEDX",102,0)
OLDDXS(SDOE,SDARY) ; -- get DX's for OLD encounter
"RTN","SDOEDX",103,0)
 N SDIEN,SDCNT,Y,X
"RTN","SDOEDX",104,0)
 S (SDIEN,SDCNT)=0
"RTN","SDOEDX",105,0)
 F  S SDIEN=$O(^SDD(409.43,"OE",SDOE,SDIEN)) Q:'SDIEN  D
"RTN","SDOEDX",106,0)
 . S SDCNT=SDCNT+1,X=$G(^SDD(409.43,SDIEN,0))
"RTN","SDOEDX",107,0)
 . S $P(Y,U,1)=+X                           ; -- dx ien
"RTN","SDOEDX",108,0)
 . S $P(Y,U,12)=$S($P(X,"^",3)=1:"P",1:"S") ; -- primary dx?
"RTN","SDOEDX",109,0)
 . S @SDARY@(SDIEN)=Y
"RTN","SDOEDX",110,0)
 S @SDARY=SDCNT
"RTN","SDOEDX",111,0)
 Q
"RTN","SDOEDX",112,0)
 ;
"VER")
8.0^22.0
"BLD",7426,6)
^465
**END**
**END**
