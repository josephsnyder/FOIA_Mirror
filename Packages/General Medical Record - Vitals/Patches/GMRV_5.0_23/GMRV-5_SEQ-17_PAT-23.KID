Released GMRV*5*23 SEQ #17
Extracted from mail message
**KIDS**:GMRV*5.0*23^

**INSTALL NAME**
GMRV*5.0*23
"BLD",6914,0)
GMRV*5.0*23^GEN. MED. REC. - VITALS^0^3090818^y
"BLD",6914,1,0)
^^2^2^3090325^^^^
"BLD",6914,1,1,0)
Please read the GMRV*5*23 patch description on FORUM for an explanation
"BLD",6914,1,2,0)
of what this patch does.
"BLD",6914,4,0)
^9.64PA^^
"BLD",6914,6.3)
25
"BLD",6914,"ABPKG")
n
"BLD",6914,"INID")
^y
"BLD",6914,"INIT")
GMV23PST
"BLD",6914,"KRN",0)
^9.67PA^8989.52^19
"BLD",6914,"KRN",.4,0)
.4
"BLD",6914,"KRN",.401,0)
.401
"BLD",6914,"KRN",.402,0)
.402
"BLD",6914,"KRN",.403,0)
.403
"BLD",6914,"KRN",.5,0)
.5
"BLD",6914,"KRN",.84,0)
.84
"BLD",6914,"KRN",3.6,0)
3.6
"BLD",6914,"KRN",3.8,0)
3.8
"BLD",6914,"KRN",9.2,0)
9.2
"BLD",6914,"KRN",9.8,0)
9.8
"BLD",6914,"KRN",9.8,"NM",0)
^9.68A^54^32
"BLD",6914,"KRN",9.8,"NM",1,0)
GMRVBMI^^0^B312331
"BLD",6914,"KRN",9.8,"NM",3,0)
GMRVSC1^^0^B14206536
"BLD",6914,"KRN",9.8,"NM",4,0)
GMRVUT0^^0^B14673210
"BLD",6914,"KRN",9.8,"NM",5,0)
GMRVUT2^^0^B17965647
"BLD",6914,"KRN",9.8,"NM",6,0)
GMRVUTL^^0^B4909510
"BLD",6914,"KRN",9.8,"NM",7,0)
GMVBMI^^0^B6498219
"BLD",6914,"KRN",9.8,"NM",12,0)
GMVDCEXT^^0^B58279686
"BLD",6914,"KRN",9.8,"NM",13,0)
GMVDS0^^0^B23299046
"BLD",6914,"KRN",9.8,"NM",14,0)
GMVDS1^^0^B17287007
"BLD",6914,"KRN",9.8,"NM",15,0)
GMVDS2^^0^B1905
"BLD",6914,"KRN",9.8,"NM",16,0)
GMVER0^^0^B9089403
"BLD",6914,"KRN",9.8,"NM",17,0)
GMVGETD^^0^B46740490
"BLD",6914,"KRN",9.8,"NM",18,0)
GMVGETD1^^0^B4725749
"BLD",6914,"KRN",9.8,"NM",19,0)
GMVGETD2^^0^B21667822
"BLD",6914,"KRN",9.8,"NM",20,0)
GMVGETQL^^0^B4569446
"BLD",6914,"KRN",9.8,"NM",21,0)
GMVGETVT^^0^B7880375
"BLD",6914,"KRN",9.8,"NM",22,0)
GMVGGR1^^0^B21349900
"BLD",6914,"KRN",9.8,"NM",23,0)
GMVGGR2^^0^B17252274
"BLD",6914,"KRN",9.8,"NM",28,0)
GMVHS^^0^B32961922
"BLD",6914,"KRN",9.8,"NM",29,0)
GMVHS1^^0^B22061645
"BLD",6914,"KRN",9.8,"NM",33,0)
GMVLAT0^^0^B31803306
"BLD",6914,"KRN",9.8,"NM",40,0)
GMVSC0^^0^B17931365
"BLD",6914,"KRN",9.8,"NM",41,0)
GMVSC1^^0^B14142553
"BLD",6914,"KRN",9.8,"NM",42,0)
GMVSR0^^0^B32180686
"BLD",6914,"KRN",9.8,"NM",47,0)
GMVGETC^^0^B3544134
"BLD",6914,"KRN",9.8,"NM",48,0)
GMVPXRM^^0^B46095157
"BLD",6914,"KRN",9.8,"NM",49,0)
GMRVSC0^^0^B14042810
"BLD",6914,"KRN",9.8,"NM",50,0)
GMVDCSAV^^0^B10117160
"BLD",6914,"KRN",9.8,"NM",51,0)
GMRVSC2^^0^B17609755
"BLD",6914,"KRN",9.8,"NM",52,0)
GMVSC2^^0^B16556193
"BLD",6914,"KRN",9.8,"NM",53,0)
GMVUTL^^0^B41699178
"BLD",6914,"KRN",9.8,"NM",54,0)
GMV23PST^^0^B9487682
"BLD",6914,"KRN",9.8,"NM","B","GMRVBMI",1)

"BLD",6914,"KRN",9.8,"NM","B","GMRVSC0",49)

"BLD",6914,"KRN",9.8,"NM","B","GMRVSC1",3)

"BLD",6914,"KRN",9.8,"NM","B","GMRVSC2",51)

"BLD",6914,"KRN",9.8,"NM","B","GMRVUT0",4)

"BLD",6914,"KRN",9.8,"NM","B","GMRVUT2",5)

"BLD",6914,"KRN",9.8,"NM","B","GMRVUTL",6)

"BLD",6914,"KRN",9.8,"NM","B","GMV23PST",54)

"BLD",6914,"KRN",9.8,"NM","B","GMVBMI",7)

"BLD",6914,"KRN",9.8,"NM","B","GMVDCEXT",12)

"BLD",6914,"KRN",9.8,"NM","B","GMVDCSAV",50)

"BLD",6914,"KRN",9.8,"NM","B","GMVDS0",13)

"BLD",6914,"KRN",9.8,"NM","B","GMVDS1",14)

"BLD",6914,"KRN",9.8,"NM","B","GMVDS2",15)

"BLD",6914,"KRN",9.8,"NM","B","GMVER0",16)

"BLD",6914,"KRN",9.8,"NM","B","GMVGETC",47)

"BLD",6914,"KRN",9.8,"NM","B","GMVGETD",17)

"BLD",6914,"KRN",9.8,"NM","B","GMVGETD1",18)

"BLD",6914,"KRN",9.8,"NM","B","GMVGETD2",19)

"BLD",6914,"KRN",9.8,"NM","B","GMVGETQL",20)

"BLD",6914,"KRN",9.8,"NM","B","GMVGETVT",21)

"BLD",6914,"KRN",9.8,"NM","B","GMVGGR1",22)

"BLD",6914,"KRN",9.8,"NM","B","GMVGGR2",23)

"BLD",6914,"KRN",9.8,"NM","B","GMVHS",28)

"BLD",6914,"KRN",9.8,"NM","B","GMVHS1",29)

"BLD",6914,"KRN",9.8,"NM","B","GMVLAT0",33)

"BLD",6914,"KRN",9.8,"NM","B","GMVPXRM",48)

"BLD",6914,"KRN",9.8,"NM","B","GMVSC0",40)

"BLD",6914,"KRN",9.8,"NM","B","GMVSC1",41)

"BLD",6914,"KRN",9.8,"NM","B","GMVSC2",52)

"BLD",6914,"KRN",9.8,"NM","B","GMVSR0",42)

"BLD",6914,"KRN",9.8,"NM","B","GMVUTL",53)

"BLD",6914,"KRN",19,0)
19
"BLD",6914,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6914,"KRN",19,"NM",1,0)
GMV V/M GUI^^0
"BLD",6914,"KRN",19,"NM","B","GMV V/M GUI",1)

"BLD",6914,"KRN",19.1,0)
19.1
"BLD",6914,"KRN",101,0)
101
"BLD",6914,"KRN",409.61,0)
409.61
"BLD",6914,"KRN",771,0)
771
"BLD",6914,"KRN",870,0)
870
"BLD",6914,"KRN",8989.51,0)
8989.51
"BLD",6914,"KRN",8989.52,0)
8989.52
"BLD",6914,"KRN",8994,0)
8994
"BLD",6914,"KRN",8994,"NM",0)
^9.68A^3^3
"BLD",6914,"KRN",8994,"NM",1,0)
GMV LATEST VM^^0
"BLD",6914,"KRN",8994,"NM",2,0)
GMV V/M ALLDATA^^0
"BLD",6914,"KRN",8994,"NM",3,0)
GMV CLOSEST READING^^0
"BLD",6914,"KRN",8994,"NM","B","GMV CLOSEST READING",3)

"BLD",6914,"KRN",8994,"NM","B","GMV LATEST VM",1)

"BLD",6914,"KRN",8994,"NM","B","GMV V/M ALLDATA",2)

"BLD",6914,"KRN","B",.4,.4)

"BLD",6914,"KRN","B",.401,.401)

"BLD",6914,"KRN","B",.402,.402)

"BLD",6914,"KRN","B",.403,.403)

"BLD",6914,"KRN","B",.5,.5)

"BLD",6914,"KRN","B",.84,.84)

"BLD",6914,"KRN","B",3.6,3.6)

"BLD",6914,"KRN","B",3.8,3.8)

"BLD",6914,"KRN","B",9.2,9.2)

"BLD",6914,"KRN","B",9.8,9.8)

"BLD",6914,"KRN","B",19,19)

"BLD",6914,"KRN","B",19.1,19.1)

"BLD",6914,"KRN","B",101,101)

"BLD",6914,"KRN","B",409.61,409.61)

"BLD",6914,"KRN","B",771,771)

"BLD",6914,"KRN","B",870,870)

"BLD",6914,"KRN","B",8989.51,8989.51)

"BLD",6914,"KRN","B",8989.52,8989.52)

"BLD",6914,"KRN","B",8994,8994)

"BLD",6914,"QUES",0)
^9.62^^
"BLD",6914,"REQB",0)
^9.611^5^5
"BLD",6914,"REQB",1,0)
GMRV*5.0*1^2
"BLD",6914,"REQB",2,0)
GMRV*5.0*3^2
"BLD",6914,"REQB",3,0)
GMRV*5.0*6^2
"BLD",6914,"REQB",4,0)
GMRV*5.0*22^2
"BLD",6914,"REQB",5,0)
GMRV*5.0*25^2
"BLD",6914,"REQB","B","GMRV*5.0*1",1)

"BLD",6914,"REQB","B","GMRV*5.0*22",4)

"BLD",6914,"REQB","B","GMRV*5.0*25",5)

"BLD",6914,"REQB","B","GMRV*5.0*3",2)

"BLD",6914,"REQB","B","GMRV*5.0*6",3)

"INIT")
GMV23PST
"KRN",19,10377,-1)
0^1
"KRN",19,10377,0)
GMV V/M GUI^Vitals/Measurements GUI Application^^B^^^^^^^^GEN. MED. REC. - VITALS
"KRN",19,10377,1,0)
^19.06^1^1^3090424^^^^
"KRN",19,10377,1,1,0)
This option controls access to the GUI Vitals/Measurements application.
"KRN",19,10377,99.1)
61586,47918
"KRN",19,10377,"RPC",0)
^19.05P^134^134
"KRN",19,10377,"RPC",78,0)
GMV MANAGER
"KRN",19,10377,"RPC",81,0)
GMV ADD VM
"KRN",19,10377,"RPC",83,0)
GMV ALLERGY
"KRN",19,10377,"RPC",86,0)
GMV CLINIC PT
"KRN",19,10377,"RPC",87,0)
GMV CONVERT DATE
"KRN",19,10377,"RPC",89,0)
GMV CUMULATIVE REPORT
"KRN",19,10377,"RPC",91,0)
GMV ENTERED IN ERROR-PATIENT
"KRN",19,10377,"RPC",92,0)
GMV EXTRACT REC
"KRN",19,10377,"RPC",93,0)
GMV GET CURRENT TIME
"KRN",19,10377,"RPC",101,0)
GMV LATEST VITALS BY LOCATION
"KRN",19,10377,"RPC",102,0)
GMV LATEST VITALS FOR PATIENT
"KRN",19,10377,"RPC",103,0)
GMV LATEST VM
"KRN",19,10377,"RPC",105,0)
GMV MARK ERROR
"KRN",19,10377,"RPC",108,0)
GMV PT GRAPH
"KRN",19,10377,"RPC",110,0)
GMV PTSELECT
"KRN",19,10377,"RPC",111,0)
GMV QUALIFIER TABLE
"KRN",19,10377,"RPC",112,0)
GMV ROOM/BED
"KRN",19,10377,"RPC",116,0)
GMV TEAM PATIENTS
"KRN",19,10377,"RPC",118,0)
GMV V/M ALLDATA
"KRN",19,10377,"RPC",119,0)
GMV VITALS/CAT/QUAL
"KRN",19,10377,"RPC",120,0)
GMV WARD LOCATION
"KRN",19,10377,"RPC",121,0)
GMV WARD PT
"KRN",19,10377,"RPC",122,0)
GMV WARD/ROOM PATIENTS
"KRN",19,10377,"RPC",123,0)
GMV USER
"KRN",19,10377,"RPC",124,0)
GMV NUR UNIT PT
"KRN",19,10377,"RPC",125,0)
GMV CHECK DEVICE
"KRN",19,10377,"RPC",126,0)
GMV PARAMETER
"KRN",19,10377,"RPC",127,0)
ORWPT PTINQ
"KRN",19,10377,"RPC",128,0)
GMV GET CATEGORY IEN
"KRN",19,10377,"RPC",129,0)
GMV GET VITAL TYPE IEN
"KRN",19,10377,"RPC",130,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,10377,"RPC",131,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10377,"RPC",132,0)
GMV DLL VERSION
"KRN",19,10377,"RPC",133,0)
GMV LOCATION SELECT
"KRN",19,10377,"RPC",134,0)
GMV CLOSEST READING
"KRN",19,10377,"U")
VITALS/MEASUREMENTS GUI APPLIC
"KRN",8994,475,-1)
0^2
"KRN",8994,475,0)
GMV V/M ALLDATA^VMDATA^GMVGGR1^4^S^0^^1
"KRN",8994,475,1,0)
^8994.01^4^4^3080207^^^^
"KRN",8994,475,1,1,0)
This remote procedure call lists all vitals/measurements data for a given
"KRN",8994,475,1,2,0)
date/time span.
"KRN",8994,475,1,3,0)
 
"KRN",8994,475,1,4,0)
This remote procedure call is documented in Integration Agreement 4654.
"KRN",8994,475,2,0)
^8994.02A^1^1
"KRN",8994,475,2,1,0)
GMVDATA^1^60^1^1
"KRN",8994,475,2,1,1,0)
^8994.021^8^8^3080207^^
"KRN",8994,475,2,1,1,1,0)
GMVDATA consists of 4 pieces of data:
"KRN",8994,475,2,1,1,2,0)
 
"KRN",8994,475,2,1,1,3,0)
 piece1^piece2^piece3^piece4
"KRN",8994,475,2,1,1,4,0)
 
"KRN",8994,475,2,1,1,5,0)
 where piece1 = File 2 IEN (i.e., DFN)
"KRN",8994,475,2,1,1,6,0)
       piece2 = Start date/time for search (FileMan internal format)
"KRN",8994,475,2,1,1,7,0)
       piece3 = End date/time for search (FileMan internal format)
"KRN",8994,475,2,1,1,8,0)
       piece4 = 0 (zero)
"KRN",8994,475,2,"B","GMVDATA",1)

"KRN",8994,475,2,"PARAMSEQ",1,1)

"KRN",8994,475,3,0)
^^78^78^3080207^
"KRN",8994,475,3,1,0)
RESULT array returns the data or a "NO DATA" message.
"KRN",8994,475,3,2,0)
 
"KRN",8994,475,3,3,0)
Case A: The NO DATA message is returned.
"KRN",8994,475,3,4,0)
 
"KRN",8994,475,3,5,0)
The TMP global returns:
"KRN",8994,475,3,6,0)
 ^TMP($J,1)=lastname,first  social security number  date of birth  age 
"KRN",8994,475,3,7,0)
            "(Yrs)" gender
"KRN",8994,475,3,8,0)
 ^TMP($J,2)="Unit:" unit  "Room:" room
"KRN",8994,475,3,9,0)
 ^TMP($J,3)="Division:" division
"KRN",8994,475,3,10,0)
 ^TMP($J,4)= search date range
"KRN",8994,475,3,11,0)
 ^TMP($J,5)="NO DATA"
"KRN",8994,475,3,12,0)
 
"KRN",8994,475,3,13,0)
Example: 
"KRN",8994,475,3,14,0)
 > S GMVDATA="90^3051012^3051012^0"
"KRN",8994,475,3,15,0)
 > D VMDATA^GMVGGR1(.RESULT,GMVDATA) ZW RESULT
"KRN",8994,475,3,16,0)
 > RESULT="^TMP(539349605)"
"KRN",8994,475,3,17,0)
 > D ^%G
"KRN",8994,475,3,18,0)
 > Global ^TMP($J
"KRN",8994,475,3,19,0)
 > ^TMP(539349605,1)=VITPATIENT,ONE 000-11-1234  JAN 2,1934  71 (Yrs)  
"KRN",8994,475,3,20,0)
                     MALE
"KRN",8994,475,3,21,0)
                  2)=Unit:    Room: 
"KRN",8994,475,3,22,0)
                  3)=Division: 
"KRN",8994,475,3,23,0)
                  4)=OCT 11,2005 - OCT 11,2005
"KRN",8994,475,3,24,0)
                  5)=NO DATA
"KRN",8994,475,3,25,0)
 
"KRN",8994,475,3,26,0)
 
"KRN",8994,475,3,27,0)
Case B: Fourth piece of GMVDATA (Flag) is 0
"KRN",8994,475,3,28,0)
 
"KRN",8994,475,3,29,0)
The TMP global returns:
"KRN",8994,475,3,30,0)
 ^TMP($J,1)=lastname,first social security number  date of birth  age 
"KRN",8994,475,3,31,0)
            "(Yrs)" sex
"KRN",8994,475,3,32,0)
 ^TMP($J,2)="Unit:" unit  "Room:" room
"KRN",8994,475,3,33,0)
 ^TMP($J,3)="Division:" division
"KRN",8994,475,3,34,0)
 ^TMP($J,4)= search date range
"KRN",8994,475,3,35,0)
 ^TMP($J,n)=piece1 through piece23
"KRN",8994,475,3,36,0)
 
"KRN",8994,475,3,37,0)
 where piece1 = date of reading in mm-dd-yy format
"KRN",8994,475,3,38,0)
       piece2 = time of reading in hh:mm:ss format
"KRN",8994,475,3,39,0)
       piece3 = Temperature value and qualifier abbreviations
"KRN",8994,475,3,40,0)
       piece4 = Pulse value and qualifier abbreviations
"KRN",8994,475,3,41,0)
       piece5 = Respiration and qualifier abbreviations
"KRN",8994,475,3,42,0)
       piece6 = Pulse Oximetry value, qualifier abbreviations, flow rate 
"KRN",8994,475,3,43,0)
                and percentage value
"KRN",8994,475,3,44,0)
       piece7 = Blood Pressure value and qualifier abbreviations
"KRN",8994,475,3,45,0)
       piece8 = Weight value (pounds) and qualifier abbreviations
"KRN",8994,475,3,46,0)
       piece9 = Weight value (kilos)
"KRN",8994,475,3,47,0)
       piece10 = Body Mass Index calculation
"KRN",8994,475,3,48,0)
       piece11 = Height value (inches) and qualifier abbreviations 
"KRN",8994,475,3,49,0)
       piece12 = Height value (centimeters)
"KRN",8994,475,3,50,0)
       piece13 = Circumference Girth value (inches) and qualifier 
"KRN",8994,475,3,51,0)
                 abbreviations
"KRN",8994,475,3,52,0)
       piece14 = Circumference Girth value (centimeters)
"KRN",8994,475,3,53,0)
       piece15 = Central Venous Pressure value (cmH2O)
"KRN",8994,475,3,54,0)
       piece16 = Central Venous Pressure value (mmHg)
"KRN",8994,475,3,55,0)
       piece17 = Input value (from Intake & Output package)
"KRN",8994,475,3,56,0)
       piece18 = Output value (from Intake & Output package)
"KRN",8994,475,3,57,0)
       piece19 = Pain value
"KRN",8994,475,3,58,0)
       piece20 = always null
"KRN",8994,475,3,59,0)
       piece21 = always null
"KRN",8994,475,3,60,0)
       piece22 = hospital location (FILE 44, Field .01)
"KRN",8994,475,3,61,0)
       piece23 = name of person who entered the data (FILE 200, Field .01)
"KRN",8994,475,3,62,0)
       piece24 = database where the record is stored
"KRN",8994,475,3,63,0)
 
"KRN",8994,475,3,64,0)
Example: 
"KRN",8994,475,3,65,0)
 > S GMVDATA="134^3050901^3050930^0"          
"KRN",8994,475,3,66,0)
 > D VMDATA^GMVGGR1(.RESULT,GMVDATA) ZW RESULT
"KRN",8994,475,3,67,0)
 > RESULT="^TMP(539349605)"
"KRN",8994,475,3,68,0)
 > D ^%G
"KRN",8994,475,3,69,0)
 > Global ^TMP($J
"KRN",8994,475,3,70,0)
 > ^TMP(539349605,1)=VITPATIENT,TWO 000-11-1234  JUN 1,1957  48 (Yrs)  
"KRN",8994,475,3,71,0)
                     FEMALE
"KRN",8994,475,3,72,0)
                  2)=Unit: 2-ASM   Room: 
"KRN",8994,475,3,73,0)
                  3)=Division: TEST HINES
"KRN",8994,475,3,74,0)
                  4)=SEP 1,2005 - SEP 30,2005
"KRN",8994,475,3,75,0)
                  5)=09-14-05^17:18:00^^^^^^135- A St^61.36^22^66- 
"KRN",8994,475,3,76,0)
                     A^167.64^^^^^^^^ ^^2-ASM^VITPROVIDER,ONE^Vitals
"KRN",8994,475,3,77,0)
                  6)=09-26-05^11:30:57^^^^^120/80*- La Si Car 
"KRN",8994,475,3,78,0)
                     Clf^^^^^^^^^^^^^^^2-A SM^VITPROVIDER,TWO^Vitals
"KRN",8994,1459,-1)
0^1
"KRN",8994,1459,0)
GMV LATEST VM^GETLAT^GMVGETD^4^S^0^^1
"KRN",8994,1459,1,0)
^8994.01^4^4^3080207^^^^
"KRN",8994,1459,1,1,0)
This remote procedure call retrieves the latest vital records for a given
"KRN",8994,1459,1,2,0)
patient.
"KRN",8994,1459,1,3,0)
 
"KRN",8994,1459,1,4,0)
This remote procedure call is documented in Integration Agreement 4358.
"KRN",8994,1459,2,0)
^8994.02A^1^1
"KRN",8994,1459,2,1,0)
GMRDFN^1^10^1^1
"KRN",8994,1459,2,1,1,0)
^8994.021^1^1^3080207^^^^
"KRN",8994,1459,2,1,1,1,0)
GMRDFN variable is a pointer to the Patient (#2) file (i.e., DFN).
"KRN",8994,1459,2,"B","GMRDFN",1)

"KRN",8994,1459,2,"PARAMSEQ",1,1)

"KRN",8994,1459,3,0)
^^44^44^3080207^
"KRN",8994,1459,3,1,0)
Returns the name of the global array (i.e., ^TMP($J,"GRPC")) containing 
"KRN",8994,1459,3,2,0)
the latest vitals for the selected patient.
"KRN",8994,1459,3,3,0)
 
"KRN",8994,1459,3,4,0)
 The TMP global contains: 
"KRN",8994,1459,3,5,0)
  ^TMP($J,"GRPC",n)=piece1
"KRN",8994,1459,3,6,0)
 
"KRN",8994,1459,3,7,0)
  where piece1 = is a formatted line of text.
"KRN",8994,1459,3,8,0)
             n = sequential number starting at 1.
"KRN",8994,1459,3,9,0)
 
"KRN",8994,1459,3,10,0)
The formatted line of text includes the vital type, value and unit
"KRN",8994,1459,3,11,0)
(U.S.), value and unit (metric), qualifiers, supplemental oxygen, body
"KRN",8994,1459,3,12,0)
mass index value, person who entered the record and the database where 
"KRN",8994,1459,3,13,0)
the record is stored.
"KRN",8994,1459,3,14,0)
 
"KRN",8994,1459,3,15,0)
If there is no data for the patient, the following is returned:
"KRN",8994,1459,3,16,0)
 ^TMP($J,"GRPC",1)=There are no results to report
"KRN",8994,1459,3,17,0)
 
"KRN",8994,1459,3,18,0)
Example:
"KRN",8994,1459,3,19,0)
 > S GMRDFN=134
"KRN",8994,1459,3,20,0)
 > D GETLAT^GMVGETD(.RESULT,GMRDFN) ZW RESULT
"KRN",8994,1459,3,21,0)
 > RESULT="^TMP(539349605,"GRPC")"
"KRN",8994,1459,3,22,0)
 > D ^%G
"KRN",8994,1459,3,23,0)
 > Global ^TMP($J,"GRPC"
"KRN",8994,1459,3,24,0)
 > ^TMP(539349605,"GRPC",1)=Temp.: (08/09/05@08:00)  102 F  (38.9 C)*
"KRN",8994,1459,3,25,0)
   (ORAL) _VITPROVIDER,ONE_Vitals
"KRN",8994,1459,3,26,0)
 >                       2)=Pulse:       (07/14/05@16:33)  55 
"KRN",8994,1459,3,27,0)
   (LEFT,CAROTID,PALPATED,LYING)  _VITPROVIDER,ONE_Vitals
"KRN",8994,1459,3,28,0)
 >                       3)=Resp.:       (07/14/05@16:33)  31 
"KRN",8994,1459,3,29,0)
   (SPONTANEOUS,SITTING) _VITPROVIDER,ONE_Vitals
"KRN",8994,1459,3,30,0)
 >                       4)=Pulse Ox:    (08/22/05@13:48)  99% with 
"KRN",8994,1459,3,31,0)
   supplemental O2 1 L/min 90% NASAL CANNULA  _VITPROVIDER,ONE_Vitals
"KRN",8994,1459,3,32,0)
 >                       5)=B/P:         (09/26/05@11:30)  120/80* (L 
"KRN",8994,1459,3,33,0)
   ARM,SITTING,CAROTID,CALF)  _VITPROVIDER,TWO_Vitals
"KRN",8994,1459,3,34,0)
 >                       6)=Ht.: (09/14/05@17:18)  5 ft 6 in (167.64
"KRN",8994,1459,3,35,0)
   cm) (ACTUAL)  _VITPROVIDER,ONE_Vitals
"KRN",8994,1459,3,36,0)
 >                       7)=Wt.: (09/14/05@17:18)  135 lb  (61.36 kg)
"KRN",8994,1459,3,37,0)
   (ACTUAL,STANDING)  _VITPROVIDER,ONE_Vitals
"KRN",8994,1459,3,38,0)
 >                       8)=Body Mass Index:             22  
"KRN",8994,1459,3,39,0)
                         9)=CVP:         (08/22/05@17:09)  15 cmH2O (11.0 
"KRN",8994,1459,3,40,0)
   mmHg)  _VITPROVIDER,ONE_Vitals
"KRN",8994,1459,3,41,0)
                        10)=Circ/Girth:  (07/22/05@10:22)  1 in (2.54 cm)
"KRN",8994,1459,3,42,0)
  (DRY,ABDO MINAL)  _VITPROVIDER,TWO_Vitals
"KRN",8994,1459,3,43,0)
                        11)=Pain: (09/15/05@16:43)  5  
"KRN",8994,1459,3,44,0)
  _VITPROVIDER,ONE_Vitals
"KRN",8994,2802,-1)
0^3
"KRN",8994,2802,0)
GMV CLOSEST READING^CLOSEST^GMVGETD^1^R^0
"KRN",8994,2802,1,0)
^^3^3^3090225^
"KRN",8994,2802,1,1,0)
This remote procedure call returns the observation date/time and reading 
"KRN",8994,2802,1,2,0)
of the record closest to the date/time specified for the patient and vital
"KRN",8994,2802,1,3,0)
type.
"KRN",8994,2802,2,0)
^8994.02A^4^4
"KRN",8994,2802,2,1,0)
GMVDFN^1^12^1^1
"KRN",8994,2802,2,1,1,0)
^^1^1^3090225^
"KRN",8994,2802,2,1,1,1,0)
A pointer to the Patient (#2) file (i.e., DFN).
"KRN",8994,2802,2,2,0)
GMVDT^1^14^0^2
"KRN",8994,2802,2,2,1,0)
^8994.021^1^1^3090225^^^
"KRN",8994,2802,2,2,1,1,0)
The date/time to search from. The default is NOW.
"KRN",8994,2802,2,3,0)
GMVT^1^5^1^3
"KRN",8994,2802,2,3,1,0)
^8994.021^2^2^3090225^^^
"KRN",8994,2802,2,3,1,1,0)
The vital type abbreviation as it appears in FILE 120.51, Field 1 (e.g., 
"KRN",8994,2802,2,3,1,2,0)
WT).
"KRN",8994,2802,2,4,0)
GMVFLAG^1^1^0^4
"KRN",8994,2802,2,4,1,0)
^8994.021^3^3^3090225^^
"KRN",8994,2802,2,4,1,1,0)
A flag to indicate if the search should look before or after the date/time
"KRN",8994,2802,2,4,1,2,0)
specified in the GMVDT value where 1 indicates before, 2 indicates after
"KRN",8994,2802,2,4,1,3,0)
and 0 indicates either direction.
"KRN",8994,2802,2,"B","GMVDFN",1)

"KRN",8994,2802,2,"B","GMVDT",2)

"KRN",8994,2802,2,"B","GMVFLAG",4)

"KRN",8994,2802,2,"B","GMVT",3)

"KRN",8994,2802,2,"PARAMSEQ",1,1)

"KRN",8994,2802,2,"PARAMSEQ",2,2)

"KRN",8994,2802,2,"PARAMSEQ",3,3)

"KRN",8994,2802,2,"PARAMSEQ",4,4)

"KRN",8994,2802,3,0)
^8994.03^11^11^3090225^^^
"KRN",8994,2802,3,1,0)
Returns a string composed of two pieces. The first piece contains the 
"KRN",8994,2802,3,2,0)
observation date/time (FILE 120.5, Field .01) of the record that was 
"KRN",8994,2802,3,3,0)
found. The second piece contains the rate (FILE 120.5, Field 1.2) of the 
"KRN",8994,2802,3,4,0)
record. If there is an error, the first piece will be -1 and the second 
"KRN",8994,2802,3,5,0)
piece will be the error text.
"KRN",8994,2802,3,6,0)
 
"KRN",8994,2802,3,7,0)
 Example:
"KRN",8994,2802,3,8,0)
 
"KRN",8994,2802,3,9,0)
 > S GMVDFN=134,GMVDT=3090225.08,GMVT="WT",GMVFLAG=0
"KRN",8994,2802,3,10,0)
 > D CLOSEST(.TEST,GMVDFN,GMVDT,GMVT,GMVFLAG) ZW TEST
"KRN",8994,2802,3,11,0)
 > TEST="3081106.142926^135"
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",44,-1)
1^1
"PKG",44,0)
GEN. MED. REC. - VITALS^GMRV^Vitals/Measurements Module of General Medical Record.
"PKG",44,20,0)
^9.402P^^
"PKG",44,22,0)
^9.49I^1^1
"PKG",44,22,1,0)
5.0^3021029
"PKG",44,22,1,"PAH",1,0)
23^3090818
"PKG",44,22,1,"PAH",1,1,0)
^^2^2^3090818
"PKG",44,22,1,"PAH",1,1,1,0)
Please read the GMRV*5*23 patch description on FORUM for an explanation
"PKG",44,22,1,"PAH",1,1,2,0)
of what this patch does.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
32
"RTN","GMRVBMI")
0^1^B312331^B5009163
"RTN","GMRVBMI",1,0)
GMRVBMI ;HIOFO/YH,FT-EXTRACT HEIGHT TO CALCULATE BMI FOR WEIGHT; 5/8/07
"RTN","GMRVBMI",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMRVBMI",3,0)
 ;
"RTN","GMRVBMI",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVBMI",5,0)
 ; <None>
"RTN","GMRVBMI",6,0)
 ;
"RTN","GMRVBMI",7,0)
HT ;OBTAIN ALL HEIGHTS FOR THE PATIENT
"RTN","GMRVBMI",8,0)
 D HT^GMVBMI
"RTN","GMRVBMI",9,0)
 Q
"RTN","GMRVBMI",10,0)
CALBMI(GBMI,GMRVDEC) ;OBTAIN HEIGHT TO CALCULATE BMI
"RTN","GMRVBMI",11,0)
 ; GBMI(1)=DATE/TIME WEIGHT WAS TAKEN (Required)
"RTN","GMRVBMI",12,0)
 ; GBMI(2)=WEIGHT (Required)
"RTN","GMRVBMI",13,0)
 ; GMRVDEC = # of decimal places to return (optional)
"RTN","GMRVBMI",14,0)
 ;          Value can be 0, 1, 2, or 3
"RTN","GMRVBMI",15,0)
 ;          Default is 0
"RTN","GMRVBMI",16,0)
 S GMRVDEC=$G(GMRVDEC,0)
"RTN","GMRVBMI",17,0)
 S GMRVDEC=$S(GMRVDEC=3:3,GMRVDEC=2:2,GMRVDEC=1:1,1:0)
"RTN","GMRVBMI",18,0)
 D CALBMI^GMVBMI(.GBMI,GMRVDEC)
"RTN","GMRVBMI",19,0)
 Q
"RTN","GMRVSC0")
0^49^B14042810^B24203413
"RTN","GMRVSC0",1,0)
GMRVSC0 ;HIOFO/MD,YH,FT-CUMULATIVE VITALS/MEASUREMENTS FOR PATIENT OVER GIVEN DATE RANGE ;9/27/07
"RTN","GMRVSC0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMRVSC0",3,0)
 ;
"RTN","GMRVSC0",4,0)
 ; This routine uses the following IAs
"RTN","GMRVSC0",5,0)
 ; #10039 - ^DIC(42 references     (supported)
"RTN","GMRVSC0",6,0)
 ; #10040 - FILE 44 references     (supported)
"RTN","GMRVSC0",7,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMRVSC0",8,0)
 ; #10090 - FILE 4 references      (supported)
"RTN","GMRVSC0",9,0)
 ;
"RTN","GMRVSC0",10,0)
 ;EN1 ; ENTRY FROM OPTION GMRV CUMULATIVE V/M
"RTN","GMRVSC0",11,0)
 ;K ^TMP($J) S DIC="^DPT(",DIC(0)="AEQM" D ^DIC K DIC Q:+Y'>0  S DFN=+Y
"RTN","GMRVSC0",12,0)
 ;EN2 ; ENTRY IF DFN IS KNOWN TO PRINT CUMULATIVE VITALS
"RTN","GMRVSC0",13,0)
 ;S GMROUT=0 D DEM^VADPT,INP^VADPT S GMRRMBD=$S(VAIN(5)'="":VAIN(5),1:"  BLANK"),GMRNAM=$S(VADM(1)'="":VADM(1),1:"  BLANK"),^TMP($J,GMRRMBD,GMRNAM,DFN)=""
"RTN","GMRVSC0",14,0)
 ;S GMRX=$S(VAIN(7)'="":$P(VAIN(7),"^",2),1:"")
"RTN","GMRVSC0",15,0)
 ;EN2A ; ENTRY FROM PRINT CUMULATIVE REPORT BY WARD
"RTN","GMRVSC0",16,0)
 ;D DATE G:GMROUT Q
"RTN","GMRVSC0",17,0)
 ;DEV S %ZIS="Q",%ZIS("B")="" D ^%ZIS K %ZIS G:POP Q I $E(IOST)="P",'$D(IO("Q")),'$D(IO("S")) D ^%ZISC W !,?3,"PRINTED REPORTS MUST BE QUEUED!!",$C(7) G DEV
"RTN","GMRVSC0",18,0)
 ;I $D(IO("Q")) S (ZTSAVE("^TMP($J,"),ZTSAVE("GMRVSDT"),ZTSAVE("GMRVFDT"))="",ZTIO=ION,ZTDESC="Cumulative vital/measurement report",ZTRTN="START^GMRVSC0" D ^%ZTLOAD K ZTSK,ZTIO G Q
"RTN","GMRVSC0",19,0)
 ;START ;
"RTN","GMRVSC0",20,0)
 ;S (GMROUT,GMRPG)=0 D NOW^%DTC S Y=% D D^DIQ S GMRPDT=$P(Y,"@")_" ("_$P($P(Y,"@",2),":",1,2)_")",$P(GMRDSH,"-",80)="" U IO S GMRRMBD=""
"RTN","GMRVSC0",21,0)
 ;N GPEDIS S GPEDIS=$O(^GMRD(120.52,"B","DORSALIS PEDIS",0)) Q:GPEDIS'>0
"RTN","GMRVSC0",22,0)
 ;F  S GMRRMBD=$O(^TMP($J,GMRRMBD)) Q:GMRRMBD=""!GMROUT  S GMRNAM="" F  S GMRNAM=$O(^TMP($J,GMRRMBD,GMRNAM)) Q:GMRNAM=""!GMROUT  S DFN=0 F  S DFN=$O(^TMP($J,GMRRMBD,GMRNAM,DFN)) Q:DFN'>0!GMROUT  S GMRPG=0 D WRT Q:GMROUT  D EN1^GMRVSC1
"RTN","GMRVSC0",23,0)
 ;Q W:$E(IOST)'="C" @IOF D Q^GMRVSC1 K GMRBMI,GMRVHT,^TMP($J),GMRINF,GMRPG,GMREDB,GMRNAM,GMRRMBD,GMRVWLOC,GMRWARD,GMRMSL,GMRROOM,GMRRMST,GMRVHLOC,GMRLEN,GMRI,GMROUT,GMRVSDT,GMRVFDT,GPRT Q
"RTN","GMRVSC0",24,0)
DATE ;W !,"CALLED BY IA 1444 - NURSING, BCMA"
"RTN","GMRVSC0",25,0)
 S %DT="AET",%DT("B")=$S(GMRX'="":$P(GMRX,"@"),1:"T-7"),%DT("A")="Start with DATE (TIME optional): " D ^%DT K %DT I +Y'>0 S GMROUT=1 Q
"RTN","GMRVSC0",26,0)
 S GMRVSDT=+Y
"RTN","GMRVSC0",27,0)
 S %DT="AET",%DT("A")="go to DATE (TIME optional): ",%DT("B")="NOW" D ^%DT K %DT I X="^" S GMROUT=1 Q
"RTN","GMRVSC0",28,0)
 I +Y'>0!($P(Y,".",2)'>0&(DT=Y)) D NOW^%DTC S Y=%
"RTN","GMRVSC0",29,0)
 I $P(Y,".",2)'>0 S Y=Y_$S(Y[".":"2400",1:".2400")
"RTN","GMRVSC0",30,0)
 I GMRVSDT>+Y W !,?3,$C(7),"THE START DATE MUST BE BEFORE THE END DATE OF THIS REPORT" G DATE
"RTN","GMRVSC0",31,0)
 S GMRVFDT=+Y
"RTN","GMRVSC0",32,0)
 Q
"RTN","GMRVSC0",33,0)
FOOTER ;REPORT FOOTER SUBROUTINE
"RTN","GMRVSC0",34,0)
 W !!,"*** (E) - Error entry",!! W:VADM(1)'="" ?$X-3,$E(VADM(1),1,15) W:VADM(2)'="" ?17,$P($P(VADM(2),"^",2),"-",3) W:VADM(3)'="" ?30,$P(VADM(3),"^",2) W:VADM(4)'="" ?43,$P(VADM(4),"^")_" YRS"
"RTN","GMRVSC0",35,0)
 W:VADM(5)'="" ?51,$P(VADM(5),"^",2)
"RTN","GMRVSC0",36,0)
 W ?65,"VAF 10-7987j" W !,"Unit: "_$S($P(VAIN(4),"^",2)'="":$P(VAIN(4),"^",2),1:"     "),?32,"Room: "_$S($P(VAIN(5),"^")'="":$P(VAIN(5),"^"),1:"   "),!
"RTN","GMRVSC0",37,0)
 I '$D(GMRVHLOC) S GMRVHLOC=$P($G(^DIC(42,+$G(VAIN(4)),44)),"^")
"RTN","GMRVSC0",38,0)
 W "Division: "_$S(GMRVHLOC>0:$$GET1^DIQ(4,+$$GET1^DIQ(44,+GMRVHLOC,3,"I"),.01,"I"),1:""),!
"RTN","GMRVSC0",39,0)
 Q
"RTN","GMRVSC0",40,0)
 ;WRT ;
"RTN","GMRVSC0",41,0)
 ;S GMR1ST=1 K GMRSITE D DEM^VADPT,INP^VADPT S GWARD=$S($P(VAIN(4),"^",2)'="":$P(VAIN(4),"^",2),1:"   "),GBED=$S(VAIN(5)'="":$P(VAIN(5),"^"),1:"   ") D HDR^GMRVSC2
"RTN","GMRVSC0",42,0)
 ;Q
"RTN","GMRVSC0",43,0)
EN3(DFN,GMRVSDT,GMRVFDT) ; APPLICATION PROGRAM INTERFACE FOR PATIENT CUMULATIVE VITALS REPORT
"RTN","GMRVSC0",44,0)
 ; INPUT VARIABLES:    DFN=PATIENT NUMBER
"RTN","GMRVSC0",45,0)
 ;                     GMRVSDT=START DATE
"RTN","GMRVSC0",46,0)
 ;                     GMRVFDT=FINISH DATE OF REPORT
"RTN","GMRVSC0",47,0)
 ;CALLED BY IA 1444: NURSING, BCMA
"RTN","GMRVSC0",48,0)
 S GMRVOR=1
"RTN","GMRVSC0",49,0)
EN5 ;CALLED BY [NURCPP-VIT-CUM] - IA 1444, NURSING, BCMA
"RTN","GMRVSC0",50,0)
 S (GMROUT,GMRPG)=0 D DEM^VADPT,INP^VADPT S GBED=$S(VAIN(5)'="":VAIN(5),1:"   "),GWARD=$S($P(VAIN(4),"^",2)="":"   ",1:$P(VAIN(4),"^",2))
"RTN","GMRVSC0",51,0)
 S GMR1ST=1,GMRDATE(0)=0 D NOW^%DTC S Y=% D D^DIQ S GMRPDT=$P(Y,"@")_" ("_$P($P(Y,"@",2),":",1,2)_")",$P(GMRDSH,"-",81)=""
"RTN","GMRVSC0",52,0)
 N GPEDIS S GPEDIS=$O(^GMRD(120.52,"B","DORSALIS PEDIS",0)) Q:GPEDIS'>0
"RTN","GMRVSC0",53,0)
 K ^TMP($J,"GMRV") F GMRVTY="T","P","R","BP","HT","WT","CVP","CG","PO2","PN" D
"RTN","GMRVSC0",54,0)
 . S GMRVITY=$O(^GMRD(120.51,"C",GMRVTY,0)) I GMRVITY>0 D SETAR^GMRVSC1,SETAR1^GMRVSC1
"RTN","GMRVSC0",55,0)
 U IO D HDR^GMRVSC2
"RTN","GMRVSC0",56,0)
 I $O(^TMP($J,"GMRV",0))'>0 W !!,"No cumulative vitals data for "_$S($D(OPSPNM):ORSPNM,1:"this patient"),! S:$D(ORSPNM) GMROUT=1 G Q3
"RTN","GMRVSC0",57,0)
 S GMRDATE=9999999
"RTN","GMRVSC0",58,0)
 F  S GMRDATE=$O(GMRVDT(GMRDATE),-1) Q:GMRDATE'>0!GMROUT  I $D(^TMP($J,"GMRV",GMRDATE)) D PRT^GMRVSC1
"RTN","GMRVSC0",59,0)
Q3 I IOSL'<($Y+10) F X=1:1 W ! Q:IOSL<($Y+10)
"RTN","GMRVSC0",60,0)
 I 'GMROUT W ! D FOOTER^GMRVSC0 I '$D(GMRVOR),$E(IOST)'="P",'GMROUT W !,"Press return to continue or ""^"" to exit " R X:DTIME S:'$T!(X["^") GMROUT=1
"RTN","GMRVSC0",61,0)
 D KVAR^VADPT K GMRVOR,VA,GBED,GWARD,^TMP($J,"GMRV"),GMR1ST,GMRVTY,GMRVITY,GMRVDATE,GMRSITE,GMRDSH,GMRQUAL,GMRVX,GMRX,GX,GMRDAT,GMRLN,GMRPDT,GMRSP,GMRVDA,GMRY
"RTN","GMRVSC0",62,0)
 I $D(ORSPNM) K GMRPG,GMRVSDT,GMRVFDT S:$D(ZTQUEUED) ZTREQ="@" D ^%ZISC
"RTN","GMRVSC0",63,0)
 Q
"RTN","GMRVSC0",64,0)
 ;EN4 ;V/M CUMULATIVE REPORTS BY WARD/ROOM/PT
"RTN","GMRVSC0",65,0)
 ;S (GMRVWLOC,GMROUT)=0 D WARDPAT^GMRVED0 G:GMROUT Q2
"RTN","GMRVSC0",66,0)
 ;I "Pp"[GMREDB D DEM^VADPT,INP^VADPT S GMRRMBD=$S(VAIN(5)'="":VAIN(5),1:"  BLANK"),GMRNAM=$S(VADM(1)'="":VADM(1),1:"  BLANK"),^TMP($J,GMRRMBD,GMRNAM,DFN)="" S GMRX=$S(VAIN(7)'="":$P(VAIN(7),"^",2),1:"")
"RTN","GMRVSC0",67,0)
 ;I "Aa"[GMREDB D EN1^GMRVED2 S GMRX=""
"RTN","GMRVSC0",68,0)
 ;I "Ss"[GMREDB D EN3^GMRVED6 D:'GMROUT EN1^GMRVED2 S GMRX=""
"RTN","GMRVSC0",69,0)
 ;G:GMROUT Q2 D EN2A
"RTN","GMRVSC0",70,0)
 ;Q2 K GMROUT,GMRVWLOC,GMRMSL,GMREDB,I,DFN Q
"RTN","GMRVSC1")
0^3^B14206536^B9241892
"RTN","GMRVSC1",1,0)
GMRVSC1 ;HIOFO/YH,FT-CUMULATIVE V/M - CONTINUED ;9/27/07
"RTN","GMRVSC1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMRVSC1",3,0)
 ;
"RTN","GMRVSC1",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVSC1",5,0)
 ;  #4290 - ^PXRMINDX global     (controlled)
"RTN","GMRVSC1",6,0)
 ; #10061 - ^VADPT calls         (supported)
"RTN","GMRVSC1",7,0)
 ;
"RTN","GMRVSC1",8,0)
EN1 ; ENTRY TO PRINT REPORT FROM TASKMAN
"RTN","GMRVSC1",9,0)
 N GMVCLIO
"RTN","GMRVSC1",10,0)
 K ^TMP($J,"GMRV"),GMRVDT S GMRVHT=0 S (GMROUT,GMRDATE(0))=0
"RTN","GMRVSC1",11,0)
 F GMRVTY="T","P","R","BP","HT","WT","CVP","CG","PO2","PN"  S GMRVITY=$O(^GMRD(120.51,"C",GMRVTY,0)) I GMRVITY>0 D SETAR,SETAR1
"RTN","GMRVSC1",12,0)
 I $O(^TMP($J,"GMRV",0))'>0 W !,"THERE IS NO DATA FOR THIS REPORT" G QT
"RTN","GMRVSC1",13,0)
 F GMRDATE=0:0 S GMRDATE=$O(GMRVDT(GMRDATE)) Q:GMRDATE'>0!GMROUT  I $D(^TMP($J,"GMRV",GMRDATE)) D PRT Q:GMROUT
"RTN","GMRVSC1",14,0)
QT I IOSL'<($Y+10) F X=1:1 W ! Q:IOSL<($Y+10)
"RTN","GMRVSC1",15,0)
 I 'GMROUT W ! D FOOTER^GMRVSC0
"RTN","GMRVSC1",16,0)
 I $E(IOST)'="P",'GMROUT W "Press return to continue or ""^"" to escape " R X:DTIME S:'$T!(X["^") GMROUT=1
"RTN","GMRVSC1",17,0)
 K ^TMP($J,"GMRV"),^TMP($J,"OTHR"),GOTHR,GMRV,GMRVDT Q
"RTN","GMRVSC1",18,0)
Q ; KILL VARIBLES
"RTN","GMRVSC1",19,0)
 S:$D(ZTQUEUED) ZTREQ="@" K GMRZZ,GMRVARY
"RTN","GMRVSC1",20,0)
 K GMRVER,GDATA,GMRST,GERROR,GERST,^TMP($J),GBED,GWARD,DFN,GX,GMR1ST,GMRDAT,GMRDATE,GMRDSH,GMRDT,GMRLN,GMRPDT,GMRSP,GMRVDA,GMRVITY,GMRX,GMRY,GMRVTY,GMRSITE,GMRVX,POP,DIPGM,%T,GMRQUAL,GMROUT,GMRPG,GFLAG D KVAR^VADPT K VA D ^%ZISC
"RTN","GMRVSC1",21,0)
 Q
"RTN","GMRVSC1",22,0)
SETAR ;get clio records
"RTN","GMRVSC1",23,0)
 S GMRDT=GMRVSDT-.000001
"RTN","GMRVSC1",24,0)
 F  S GMRDT=$O(^PXRMINDX(120.5,"PI",DFN,GMRVITY,GMRDT)) Q:GMRDT'>0!(GMRDT>GMRVFDT)  S GMRDATE=GMRDT D SETND
"RTN","GMRVSC1",25,0)
 Q
"RTN","GMRVSC1",26,0)
SETAR1 ; PXRMINDX index doesn't have entered-in-error records, so use AA x-ref
"RTN","GMRVSC1",27,0)
 N GMRVSDT1,GMRVFDT1
"RTN","GMRVSC1",28,0)
 S GMRDT=9999999-GMRVFDT,GMRVSDT1=9999999-GMRVSDT
"RTN","GMRVSC1",29,0)
 S GMRDT=GMRDT-.000001,GMRVSDT1=GMRVSDT1+.000001
"RTN","GMRVSC1",30,0)
 F  S GMRDT=$O(^GMR(120.5,"AA",DFN,GMRVITY,GMRDT)) Q:GMRDT'>0!(GMRDT>GMRVSDT1)  D SETND1
"RTN","GMRVSC1",31,0)
 Q
"RTN","GMRVSC1",32,0)
SETND ;
"RTN","GMRVSC1",33,0)
 S GMRVDA=0
"RTN","GMRVSC1",34,0)
 F  S GMRVDA=$O(^PXRMINDX(120.5,"PI",DFN,GMRVITY,GMRDT,GMRVDA)) Q:GMRVDA=""  D
"RTN","GMRVSC1",35,0)
 .Q:GMRVDA=+GMRVDA  ;already got it SETND1
"RTN","GMRVSC1",36,0)
 .I GMRVDA'=+GMRVDA D
"RTN","GMRVSC1",37,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GMRVDA)
"RTN","GMRVSC1",38,0)
 ..S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(2)=$G(GMVCLIO(2)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMRVSC1",39,0)
 ..I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMRVSC1",40,0)
 ..D SETUT
"RTN","GMRVSC1",41,0)
 ..Q
"RTN","GMRVSC1",42,0)
 .Q
"RTN","GMRVSC1",43,0)
 Q
"RTN","GMRVSC1",44,0)
SETND1 ;
"RTN","GMRVSC1",45,0)
 S GMRVDA=0
"RTN","GMRVSC1",46,0)
 F  S GMRVDA=$O(^GMR(120.5,"AA",DFN,GMRVITY,GMRDT,GMRVDA)) Q:GMRVDA=""  D
"RTN","GMRVSC1",47,0)
 .D F1205^GMVUTL(.GMVCLIO,GMRVDA,1)
"RTN","GMRVSC1",48,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(2)=$G(GMVCLIO(2)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMRVSC1",49,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMRVSC1",50,0)
 .S GMRDATE=$P(GMVCLIO(0),U,1)
"RTN","GMRVSC1",51,0)
 .D SETUT
"RTN","GMRVSC1",52,0)
 .Q
"RTN","GMRVSC1",53,0)
 Q
"RTN","GMRVSC1",54,0)
SETUT ;
"RTN","GMRVSC1",55,0)
 S ^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA)=$S($P(GMVCLIO(2),U,1)'=1:0,1:+$P(GMVCLIO(2),U,1))_"|"_GMVCLIO(0)_"|"_GMVCLIO(5)
"RTN","GMRVSC1",56,0)
 S GMRVDT(GMRDATE)=""
"RTN","GMRVSC1",57,0)
 Q
"RTN","GMRVSC1",58,0)
PRT ;PRINT V/M BY DATE/TIME
"RTN","GMRVSC1",59,0)
 D:IOSL<($Y+9) HDR^GMRVSC2 Q:GMROUT
"RTN","GMRVSC1",60,0)
 S Y=GMRDATE X ^DD("DD") I $P(GMRDATE,".")'=GMRDATE(0) W !,$E(GMRDATE,4,5)_"/"_$E(GMRDATE,6,7)_"/"_$E(GMRDATE,2,3) S GMRDATE(0)=$P(GMRDATE,".")
"RTN","GMRVSC1",61,0)
 D:IOSL<($Y+9) HDR^GMRVSC2 Q:GMROUT  W !,$P($P(Y,"@",2),":",1,2)
"RTN","GMRVSC1",62,0)
 I $D(^TMP($J,"GMRV",GMRDATE)) D
"RTN","GMRVSC1",63,0)
 .K GMRLN,GERROR F GMRVTY="T","P","R","BP","HT","WT","CVP","CG","PO2","PN" S GPRT(GMRVTY)=0 I $D(^TMP($J,"GMRV",GMRDATE,GMRVTY)) S GMRVDA="" F GMRVDA=$O(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA)) Q:$L(GMRVDA)'>0!GMROUT  D SETLN^GMRVSC2
"RTN","GMRVSC1",64,0)
 Q
"RTN","GMRVSC2")
0^51^B17609755^B15866640
"RTN","GMRVSC2",1,0)
GMRVSC2 ;HIOFO/YH,FT-CUMULATIVE V/M - CONTINUED ;9/27/07
"RTN","GMRVSC2",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMRVSC2",3,0)
 ;
"RTN","GMRVSC2",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVSC2",5,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMRVSC2",6,0)
 ;
"RTN","GMRVSC2",7,0)
SETLN ;
"RTN","GMRVSC2",8,0)
 N GMVLOOP,GMVQNAME,GMRVPO
"RTN","GMRVSC2",9,0)
 S GMRVER=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",1)
"RTN","GMRVSC2",10,0)
 S GMRVARY=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",3)
"RTN","GMRVSC2",11,0)
 D:IOSL<($Y+9) HDR Q:GMROUT  W ! W:GMRVER "(E)"
"RTN","GMRVSC2",12,0)
 I GPRT(GMRVTY)=0 D
"RTN","GMRVSC2",13,0)
 . W ?4,$S(GMRVTY="T":"T: ",GMRVTY="P":"P: ",GMRVTY="R":"R: ",GMRVTY="BP":"B/P: ",GMRVTY="WT":"Wt: ",GMRVTY="HT":"Ht: ",GMRVTY="CG":"Circumference/Girth: ",GMRVTY="CVP":"Central Venous Pressure: ",GMRVTY="PO2":"Pulse Oximetry: ",1:"")
"RTN","GMRVSC2",14,0)
 . I GMRVTY="PN" W ?4,"Pain: "
"RTN","GMRVSC2",15,0)
 S GPRT(GMRVTY)=1
"RTN","GMRVSC2",16,0)
 S GMRDAT=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",2)
"RTN","GMRVSC2",17,0)
 I "PRBPCVPCGPO2PN"[GMRVTY S GMRVX=GMRVTY,GMRVX(0)=$P(GMRDAT,"^",8) D
"RTN","GMRVSC2",18,0)
 .  I "UNAVAILABLEPASSREFUSED"[$$UP^XLFSTR(GMRVX(0)) W ?9,GMRVX(0) Q
"RTN","GMRVSC2",19,0)
 . I GMRVTY="PN" D
"RTN","GMRVSC2",20,0)
 . . I GMRVX(0)=0 W ?9,GMRVX(0)_" - No pain" Q
"RTN","GMRVSC2",21,0)
 . . I GMRVX(0)=99 W ?9,GMRVX(0)_" - Unable to respond" Q
"RTN","GMRVSC2",22,0)
 . . I GMRVX(0)=10 W ?9,GMRVX(0)_" - Worst imaginable pain" Q
"RTN","GMRVSC2",23,0)
 . . W ?9,GMRVX(0) Q
"RTN","GMRVSC2",24,0)
 . ;I GMRVTY'="PN" W ?9,GMRVX(0)
"RTN","GMRVSC2",25,0)
 . D EN1^GMRVSAS0
"RTN","GMRVSC2",26,0)
 . I GMRVTY="P","^"_GPEDIS_"^"[GMRVARY,$P(GMRDAT,"^",8)=1 S GMRVX(1)=""
"RTN","GMRVSC2",27,0)
 . S Z=$S(GMRVTY="CG":$J($P(GMRDAT,"^",8),0,2),GMRVTY="CVP":$J($P(GMRDAT,"^",8),0,1),GMRVTY'="BP":$J($P(GMRDAT,"^",8),3,0),1:$P(GMRDAT,"^",8)) D:GMRVTY'="BP" BLNK W:GMRVTY'="PN" ?9,Z_$S('$D(GMRVX(1)):" ",'GMRVX(1):"",1:"*")
"RTN","GMRVSC2",28,0)
 . I GMRVTY="CG" W " in ("_$J(Z/.3937,0,2)_" cm)"
"RTN","GMRVSC2",29,0)
 . I GMRVTY="CVP" W " cmH2O ("_$J(Z/1.36,0,1)_" mmHg)"
"RTN","GMRVSC2",30,0)
 . I GMRVTY="PO2" S GMRVPO=$P(GMRDAT,"^",10) W "%"_$S(GMRVPO'="":" with supplemental O2 "_$S(GMRVPO["l/min":$P(GMRVPO," l/min")_"L/min",1:"")_$S(GMRVPO["l/min":$P(GMRVPO," l/min",2),1:GMRVPO),1:"")
"RTN","GMRVSC2",31,0)
 I GMRVTY="T" S X=$P(GMRDAT,"^",8) D
"RTN","GMRVSC2",32,0)
 . I X'>0 W ?9,X Q
"RTN","GMRVSC2",33,0)
 . S GMRVX=GMRVTY,GMRVX(0)=X D EN1^GMRVSAS0
"RTN","GMRVSC2",34,0)
 . D EN1^GMRVUTL S:'Y Y="" S Z=$J(X,5,1) D BLNK W ?9,Z_" F " S Z=$J(Y,4,1) D BLNK W "("_Z_" C)"_$S('$D(GMRVX(1)):" ",'GMRVX(1):"",1:"*")
"RTN","GMRVSC2",35,0)
 I GMRVTY="HT" S X=$P(GMRDAT,"^",8) D
"RTN","GMRVSC2",36,0)
 . I X'>0 W ?9,X Q
"RTN","GMRVSC2",37,0)
 . D EN2^GMRVUTL S:'Y Y="" S Z=$J(X,5,2) D BLNK W ?9,Z_" in " S Z=$J(Y,5,2) D BLNK W "("_Z_" cm)" I 'GMRVER S GMRVHT=Z/100
"RTN","GMRVSC2",38,0)
 I GMRVTY="WT" S X=$P(GMRDAT,"^",8) D
"RTN","GMRVSC2",39,0)
 . I X'>0 W ?9,X Q
"RTN","GMRVSC2",40,0)
 . D EN3^GMRVUTL S:'Y Y="" S Z=$J(X,7,2) D BLNK W ?9,Z_" lb " S Z=$J(Y,6,2) D BLNK W "("_Z_" kg)"
"RTN","GMRVSC2",41,0)
 Q:+$P(GMRDAT,"^",8)'>0&(+$P($G(^GMR(120.5,GMRVDA,5,0)),"^",4)'>0)  S GMRVITY=+$P(GMRDAT,"^",3)
"RTN","GMRVSC2",42,0)
 S GMRZZ=""
"RTN","GMRVSC2",43,0)
 F GMVLOOP=1:1 Q:$P(GMRVARY,U,GMVLOOP)=""  D
"RTN","GMRVSC2",44,0)
 .S GMVQNAME=$$FIELD^GMVGETQL($P(GMRVARY,U,GMVLOOP),1,"E")
"RTN","GMRVSC2",45,0)
 .Q:GMVQNAME=""!(GMVQNAME=-1)
"RTN","GMRVSC2",46,0)
 .S GMRZZ=GMRZZ_$S(GMRZZ'="":", ",1:"")_GMVQNAME
"RTN","GMRVSC2",47,0)
 I "UNAVAILABLEPASSREFUSED"[$$UP^XLFSTR($P(GMRDAT,U,8)) Q
"RTN","GMRVSC2",48,0)
 S GMRVITY=+$P(GMRDAT,"^",3)
"RTN","GMRVSC2",49,0)
 S:GMRZZ'=""&(GMRVTY'="PO2") GMRZZ=" ("_GMRZZ_")"
"RTN","GMRVSC2",50,0)
 I GMRZZ'="" W:GMRVTY="PO2" !,?8," via " W GMRZZ
"RTN","GMRVSC2",51,0)
 I GMRVTY="WT",'GMRVER S GMRBMI="",GMRBMI(1)=$P(GMRDAT,"^"),GMRBMI(2)=+$P(GMRDAT,"^",8) D CALBMI^GMRVBMI(.GMRBMI) W:GMRBMI>0 !,?4,"Body Mass Index: "_GMRBMI
"RTN","GMRVSC2",52,0)
 K Z Q
"RTN","GMRVSC2",53,0)
HDR ;
"RTN","GMRVSC2",54,0)
 I 'GMR1ST D FOOTER^GMRVSC0
"RTN","GMRVSC2",55,0)
 I $E(IOST)'="P",'GMR1ST W "Press return to continue ""^"" to escape " R X:DTIME I X="^"!'$T S GMROUT=1 Q
"RTN","GMRVSC2",56,0)
 W:'($E(IOST)'="C"&'$D(GFLAG)) @IOF S GMRPG=GMRPG+1,GFLAG=1
"RTN","GMRVSC2",57,0)
 W !,GMRPDT,?25,"Cumulative Vitals/Measurements Report",?70,"Page ",GMRPG,!!,$E(GMRDSH,1,78)
"RTN","GMRVSC2",58,0)
 I 'GMR1ST,$P(GMRDATE,".")=GMRDATE(0) W !,$E(GMRDATE(0),4,5)_"/"_$E(GMRDATE(0),6,7)_"/"_$E(GMRDATE,2,3)_" (continued)",!
"RTN","GMRVSC2",59,0)
 S GMR1ST=0
"RTN","GMRVSC2",60,0)
 Q
"RTN","GMRVSC2",61,0)
BLNK ;
"RTN","GMRVSC2",62,0)
 F I=1:1:$L(Z) Q:$E(Z,I)'=" "
"RTN","GMRVSC2",63,0)
 S Z=$E(Z,I,$L(Z))
"RTN","GMRVSC2",64,0)
 Q
"RTN","GMRVUT0")
0^4^B14673210^B12655515
"RTN","GMRVUT0",1,0)
GMRVUT0 ;HIOFO/RM,YH,FT-INPUT TRANSFORMS FOR VITAL TYPES ;10/3/07
"RTN","GMRVUT0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMRVUT0",3,0)
 ;
"RTN","GMRVUT0",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVUT0",5,0)
 ;  #4290 - ^PXRMINDX global     (controlled)
"RTN","GMRVUT0",6,0)
 ;
"RTN","GMRVUT0",7,0)
 ; This routine supports the following IAs:
"RTN","GMRVUT0",8,0)
 ; EN1 - 1446                    (controlled)
"RTN","GMRVUT0",9,0)
 ;
"RTN","GMRVUT0",10,0)
EN2 ; CALLED FROM INPUT TRANSFORM OF RATE AND QUALITY SUBFIELDS OF SITE
"RTN","GMRVUT0",11,0)
 ; FIELD OF THE VITAL MEASUREMENT (#120.5) FILE - GMRFLD IS SET BEFORE
"RTN","GMRVUT0",12,0)
 ; ENTRY, BUT KILLED WITHIN THE ROUTINE
"RTN","GMRVUT0",13,0)
 S GMRTYP=$S($D(^GMR(120.5,DA,0)):$P(^(0),U,3),1:"") G K:GMRTYP'>0
"RTN","GMRVUT0",14,0)
 G K:GMRTYP'>0,Q2:$P(^GMRD(120.51,GMRTYP,0),U,$S(GMRFLD=1:4,GMRFLD=2:5,1:3))
"RTN","GMRVUT0",15,0)
K D EN^DDIOL($C(7)_"CANNOT EDIT THIS FIELD FOR THIS TYPE OF MEASUREMENT","","!?5") K X
"RTN","GMRVUT0",16,0)
Q2 K GMRTYP,GMRFLD Q
"RTN","GMRVUT0",17,0)
EN3 ; INPUT TRANSFORM FOR HEIGHT RATES
"RTN","GMRVUT0",18,0)
 N GMR
"RTN","GMRVUT0",19,0)
 S GMR=$P(X,+X,2,10) I GMR="" S X=0 Q
"RTN","GMRVUT0",20,0)
 I $E(GMR)="C"!($E(GMR)="c")&("CMCmcMcm"[GMR) S X=$J(.3937*(+X),0,2) Q
"RTN","GMRVUT0",21,0)
 I $E(GMR)="I"!($E(GMR)="i")!($E(GMR)="""") S X=+X Q
"RTN","GMRVUT0",22,0)
 I $E(GMR)="F"!($E(GMR)="f")!($E(GMR)="'") D FTIN Q
"RTN","GMRVUT0",23,0)
 S X=0
"RTN","GMRVUT0",24,0)
 Q
"RTN","GMRVUT0",25,0)
FTIN ;
"RTN","GMRVUT0",26,0)
 N GMRF,GMRIN,GMRXX,GMRYY
"RTN","GMRVUT0",27,0)
 S GMRF=$E(GMR),GMR=$E(GMR,2,$L(GMR)) F GMRXX=1:0 S GMRYY=$E(GMR) Q:GMRYY?1N!(GMRYY="")  S GMRF=GMRF_GMRYY,GMR=$E(GMR,2,$L(GMR))
"RTN","GMRVUT0",28,0)
 I "FTFtfTft'"'[GMRF Q
"RTN","GMRVUT0",29,0)
 S GMRIN=$P(GMR,+GMR,2) I "INIniNin""''"'[GMRIN!(GMRIN="'") Q
"RTN","GMRVUT0",30,0)
 S X=+X*12+(+GMR)
"RTN","GMRVUT0",31,0)
 Q
"RTN","GMRVUT0",32,0)
EN1 ; ENTRY TO GATHER PATIENT'S VITAL/MEASUREMENT DATA
"RTN","GMRVUT0",33,0)
 ; INPUT VARIABLES:
"RTN","GMRVUT0",34,0)
 ;
"RTN","GMRVUT0",35,0)
 ; DFN = Entry number of patient in Patient file.
"RTN","GMRVUT0",36,0)
 ; GMRVSTR = types of vital/measurements desired.  Use the abbreviations
"RTN","GMRVUT0",37,0)
 ;           found in the Vital Type (120.51) file.  For multiple
"RTN","GMRVUT0",38,0)
 ;           vitals, use the ; as a delimiter.
"RTN","GMRVUT0",39,0)
 ; GMRVSTR(0) = GMRVSTDT^GMRVENDT^GMRVOCC^GMRVSORD
"RTN","GMRVUT0",40,0)
 ;         where GMRVSTDT = The start date/time that the utility will
"RTN","GMRVUT0",41,0)
 ;                          use in obtaining patient data.  (OPTIONAL)
"RTN","GMRVUT0",42,0)
 ;               GMRVENDT = The end date/time that the utility will use
"RTN","GMRVUT0",43,0)
 ;                          to stop the search.  (OPTIONAL)
"RTN","GMRVUT0",44,0)
 ;               GMRVOCC  = The number of occurrences of the data that
"RTN","GMRVUT0",45,0)
 ;                          is desired by the search.  (OPTIONAL)
"RTN","GMRVUT0",46,0)
 ;               GMRVSORD = The sort order desired in output, see OUTPUT
"RTN","GMRVUT0",47,0)
 ;                          VARIABLES section.  (REQUIRED)
"RTN","GMRVUT0",48,0)
 ; GMRVSTR("LT") = ^TYP1^[TYP2^...]  (OPTIONAL)
"RTN","GMRVUT0",49,0)
 ;         THIS VARIABLE IS AN ^ DELIMITED LIST OF HOSPITAL LOCATION
"RTN","GMRVUT0",50,0)
 ;         TYPES TO EXTRACT MEASUREMENT DATA FOR.  E.G., ^C^M^, WILL
"RTN","GMRVUT0",51,0)
 ;         EXTRACT DATA FOR ONLY THOSE MEASUREMENTS TAKEN ON CLINICS
"RTN","GMRVUT0",52,0)
 ;         OR MODULES.
"RTN","GMRVUT0",53,0)
 ;
"RTN","GMRVUT0",54,0)
 ; OUTPUT VARIABLES:
"RTN","GMRVUT0",55,0)
 ;
"RTN","GMRVUT0",56,0)
 ; The utility will create an array with the desired information.  The
"RTN","GMRVUT0",57,0)
 ; array structure will be as follows if '$P(GMRVSTR(0),"^",4):
"RTN","GMRVUT0",58,0)
 ;      ^UTILITY($J,"GMRVD",GMRVTYP,GMRVRDT,GMRVIEN)=GMRVDATA
"RTN","GMRVUT0",59,0)
 ; or if $P(GMRVSTR(0),"^",4) then the following will be returned:
"RTN","GMRVUT0",60,0)
 ;      ^UTILITY($J,"GMRVD",GMRVRDT,GMRVTYP,GMRVIEN)=GMRVDATA
"RTN","GMRVUT0",61,0)
 ; where GMRVRDT  = Reverse FileMan date/time.
"RTN","GMRVUT0",62,0)
 ;                  9999999-Date/time vital/measurement was taken.
"RTN","GMRVUT0",63,0)
 ;       GMRVTYP  = The abbreviation used in the GMRVSTR string for the
"RTN","GMRVUT0",64,0)
 ;                  type of vital/measurement taken.
"RTN","GMRVUT0",65,0)
 ;       GMRVIEN  = Entry number in FILE 120.5 or
"RTN","GMRVUT0",66,0)
 ;                  pseudo entry number for File 704.117
"RTN","GMRVUT0",67,0)
 ;       GMRVDATA = $P(^GMR(120.5,GMRVIEN,0),"^",1,9) will be the patient data as
"RTN","GMRVUT0",68,0)
 ;                  currently defined in the DD for file 120.5.
"RTN","GMRVUT0",69,0)
 ;       $P(GMRVDATA,"^",10) = the first qualifier
"RTN","GMRVUT0",70,0)
 ;       $P(GMRVDATA,"^",11) = the second qualifier
"RTN","GMRVUT0",71,0)
 ;       $P(GMRVDATA,"^",12)= "*" for abnormal measurement, otherwise = ""
"RTN","GMRVUT0",72,0)
 ;       $P(GMRVDATA,"^",13)= values in centigrade for T; KG for WT; 
"RTN","GMRVUT0",73,0)
 ;                            in centimeter for HT and Circumference/Girth;
"RTN","GMRVUT0",74,0)
 ;                            in mmHg for CVP.
"RTN","GMRVUT0",75,0)
 ;       $P(GMRVDATA,"^",14)= Body Mass Index.
"RTN","GMRVUT0",76,0)
 ;       $P(GMRVDATA,"^",15)= L/Min of supplemental O2.
"RTN","GMRVUT0",77,0)
 ;       $P(GMRVDATA,"^",16)= % of supplemental O2.
"RTN","GMRVUT0",78,0)
 ;       $P(GMRVDATA,"^",17)= all qualifiers.
"RTN","GMRVUT0",79,0)
 ; The variable GMRVSTR will be killed.
"RTN","GMRVUT0",80,0)
 Q:'$D(GMRVSTR(0))!'($D(GMRVSTR)#2)!'($D(DFN)#2)  Q:DFN'>0
"RTN","GMRVUT0",81,0)
 N GMVIENGUID
"RTN","GMRVUT0",82,0)
 S GMRSAVE=GMRVSTR,GMRSAVE(0)=GMRVSTR(0),GMVIENGUID=0
"RTN","GMRVUT0",83,0)
 S GMRVSTR="HT" D EN6^GMRVUTL S GMRVSTR=GMRSAVE,GMRVSTR(0)=GMRSAVE(0) S GMRHT=(+$P(X,U,8)*2.54)/100
"RTN","GMRVUT0",84,0)
 I $G(GMRVSTR("LT"))="" S GMRVSTR("LT")=""
"RTN","GMRVUT0",85,0)
 F GMRVSTR(1)=1:1:$L(GMRVSTR,";") D
"RTN","GMRVUT0",86,0)
 .S GMRVSTR("T")=$P(GMRVSTR,";",GMRVSTR(1))
"RTN","GMRVUT0",87,0)
 .I $L(GMRVSTR("T")) D
"RTN","GMRVUT0",88,0)
 ..S GMRVSTR("B")=$S($P(GMRVSTR(0),U,1):$P(GMRVSTR(0),U,1),1:0)
"RTN","GMRVUT0",89,0)
 ..S GMRVSTR("E")=$S($P(GMRVSTR(0),U,2):$P(GMRVSTR(0),U,2),1:9999999)
"RTN","GMRVUT0",90,0)
 ..S GMRVSTR("O")=0,GMRVSTR("E")=GMRVSTR("E")+.000001
"RTN","GMRVUT0",91,0)
 ..D GETD
"RTN","GMRVUT0",92,0)
 K GMRINF,GG,GMRSAVE,GMRHT,GMRVARY,GMRVSTR,GMRSITE,GMRQUAL,GMRVX,GMRZTY,GDATA
"RTN","GMRVUT0",93,0)
 Q
"RTN","GMRVUT0",94,0)
GETD ; LOOP THRU PXRMINDX XREF AND GET PATIENT DATA
"RTN","GMRVUT0",95,0)
 S GMRVSTR("TDA")=$O(^GMRD(120.51,"C",GMRVSTR("T"),0)) Q:'GMRVSTR("TDA")
"RTN","GMRVUT0",96,0)
 I GMRVSTR("T")="BP"!(GMRVSTR("T")="P") D BP^GMRVUT2 Q
"RTN","GMRVUT0",97,0)
 F GMRVSTR("R")=GMRVSTR("E"):0 S GMRVSTR("R")=$O(^PXRMINDX(120.5,"PI",DFN,GMRVSTR("TDA"),GMRVSTR("R")),-1) Q:GMRVSTR("R")<GMRVSTR("B")!(GMRVSTR("R")'>0)  D GETD1 Q:GMRVSTR("TMO")
"RTN","GMRVUT0",98,0)
 Q
"RTN","GMRVUT0",99,0)
GETD1 ;
"RTN","GMRVUT0",100,0)
 N GMVCLIO
"RTN","GMRVUT0",101,0)
 S GMRVSTR("TMO")=0 ;max # of occurrences flag
"RTN","GMRVUT0",102,0)
 S GMRVSTR("IEN")=0
"RTN","GMRVUT0",103,0)
 F  S GMRVSTR("IEN")=$O(^PXRMINDX(120.5,"PI",DFN,GMRVSTR("TDA"),GMRVSTR("R"),GMRVSTR("IEN"))) Q:$L(GMRVSTR("IEN"))'>0  D  Q:GMRVSTR("TMO")
"RTN","GMRVUT0",104,0)
 .I GMRVSTR("IEN")=+GMRVSTR("IEN") D
"RTN","GMRVUT0",105,0)
 ..D F1205^GMVUTL(.GMVCLIO,GMRVSTR("IEN"))
"RTN","GMRVUT0",106,0)
 .I GMRVSTR("IEN")'=+GMRVSTR("IEN") D
"RTN","GMRVUT0",107,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GMRVSTR("IEN"))
"RTN","GMRVUT0",108,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMRVUT0",109,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMRVUT0",110,0)
 .D SETU2^GMRVUT2
"RTN","GMRVUT0",111,0)
 .Q
"RTN","GMRVUT0",112,0)
 Q
"RTN","GMRVUT2")
0^5^B17965647^B18552169
"RTN","GMRVUT2",1,0)
GMRVUT2 ;HIOFO/YH,RM,FT-ENTRY TO GATHER PATIENT VITAL/MEASURMENT DATA ;10/3/07
"RTN","GMRVUT2",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMRVUT2",3,0)
 ;
"RTN","GMRVUT2",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVUT2",5,0)
 ;  #1246 - WIN^DGPMDDCF         (supported)
"RTN","GMRVUT2",6,0)
 ;  #4290 - ^PXRMINDX global     (controlled)
"RTN","GMRVUT2",7,0)
 ; #10040 - FILE 44 references   (supported)
"RTN","GMRVUT2",8,0)
 ;
"RTN","GMRVUT2",9,0)
BP ;ENTRY TO GATHER PATIENT BLOOD PRESSURE/PULSE DATA
"RTN","GMRVUT2",10,0)
 N GMVCLIO
"RTN","GMRVUT2",11,0)
 K ^UTILITY($J,GMRVSTR("T"))
"RTN","GMRVUT2",12,0)
 S (GDT,GMRVSTR("TMO"))=0,GMRVSTR("R")=GMRVSTR("E")
"RTN","GMRVUT2",13,0)
 F  S GMRVSTR("R")=$O(^PXRMINDX(120.5,"PI",DFN,GMRVSTR("TDA"),GMRVSTR("R")),-1) Q:GMRVSTR("R")<GMRVSTR("B")!(GMRVSTR("R")'>0)  D  Q:GMRVSTR("TMO")
"RTN","GMRVUT2",14,0)
 .S GMRVSTR("IEN")=0
"RTN","GMRVUT2",15,0)
 .F  S GMRVSTR("IEN")=$O(^PXRMINDX(120.5,"PI",DFN,GMRVSTR("TDA"),GMRVSTR("R"),GMRVSTR("IEN"))) Q:$L(GMRVSTR("IEN"))'>0  D
"RTN","GMRVUT2",16,0)
 ..S GDT(1)=9999999-$$STRIP100(9999999-GMRVSTR("R")) I GDT'=GDT(1) S GDT=GDT(1),GMRVSTR("O")=$G(GMRVSTR("O"))+1
"RTN","GMRVUT2",17,0)
 ..I GMRVSTR("O")>$P(GMRVSTR(0),"^",3) S GMRVSTR("TMO")=1 Q
"RTN","GMRVUT2",18,0)
 ..S ^UTILITY($J,GMRVSTR("T"),GDT,GMRVSTR("IEN"))=""
"RTN","GMRVUT2",19,0)
 ..Q
"RTN","GMRVUT2",20,0)
 .Q
"RTN","GMRVUT2",21,0)
 S GMRVSTR("R")=0
"RTN","GMRVUT2",22,0)
 F  S GMRVSTR("R")=$O(^UTILITY($J,GMRVSTR("T"),GMRVSTR("R"))) Q:GMRVSTR("R")'>0  S GMRVSTR("IEN")=0 F  S GMRVSTR("IEN")=$O(^UTILITY($J,GMRVSTR("T"),GMRVSTR("R"),GMRVSTR("IEN"))) Q:$L(GMRVSTR("IEN"))'>0  D
"RTN","GMRVUT2",23,0)
 .I GMRVSTR("IEN")=+GMRVSTR("IEN") D
"RTN","GMRVUT2",24,0)
 ..D F1205^GMVUTL(.GMVCLIO,GMRVSTR("IEN"))
"RTN","GMRVUT2",25,0)
 ..Q
"RTN","GMRVUT2",26,0)
 .I GMRVSTR("IEN")'=+GMRVSTR("IEN") D
"RTN","GMRVUT2",27,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GMRVSTR("IEN"))
"RTN","GMRVUT2",28,0)
 ..Q
"RTN","GMRVUT2",29,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMRVUT2",30,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMRVUT2",31,0)
 .D SETU2
"RTN","GMRVUT2",32,0)
 .Q
"RTN","GMRVUT2",33,0)
 K ^UTILITY($J,GMRVSTR("T")),GDT
"RTN","GMRVUT2",34,0)
 Q
"RTN","GMRVUT2",35,0)
STRIP100(DATE) ; This procedure takes DATE and returns that date with
"RTN","GMRVUT2",36,0)
 ; any fractional seconds stripped off.
"RTN","GMRVUT2",37,0)
 Q +($P(DATE,".")_+$E("."_$P(DATE,".",2),1,7))
"RTN","GMRVUT2",38,0)
 ;
"RTN","GMRVUT2",39,0)
SETU2 ; Given the IEN of entry GMRVSTR("IEN") this procedure will set the
"RTN","GMRVUT2",40,0)
 ; extract global.  <<< IA 1447 - NURSING >>>
"RTN","GMRVUT2",41,0)
 N GG,GMVLOOP,GMVQNAME,GMVRECORDID
"RTN","GMRVUT2",42,0)
 S GDATA=$P($G(GMVCLIO(0))_"^^^^^^^^^^^^^","^",1,17)
"RTN","GMRVUT2",43,0)
 S GMRVX(1)=0 ; fix for Remedy 116911
"RTN","GMRVUT2",44,0)
 I GMRVSTR("T")'="CVP",$P(GDATA,"^",8)="" Q
"RTN","GMRVUT2",45,0)
 I GMRVSTR("T")="CVP",+$P(GDATA,"^",8)=0,$E($P(GDATA,"^",8))'="0" Q
"RTN","GMRVUT2",46,0)
 S (GMRINF(1),GMRINF(2))="",GMRINF=$P(GDATA,"^",10)
"RTN","GMRVUT2",47,0)
 I GMRINF'="" D PO2^GMRVLGQU(.GMRINF) S $P(GDATA,"^",15)=GMRINF(1),$P(GDATA,"^",16)=GMRINF(2)
"RTN","GMRVUT2",48,0)
 I $L($G(GMRVSTR("LT"))) Q:$P(GDATA,"^",5)'>0  Q:GMRVSTR("LT")'[("^"_$$GET1^DIQ(44,$P(GDATA,"^",5)_",",2,"I")_"^")
"RTN","GMRVUT2",49,0)
 I GMRVSTR("T")'="BP",GMRVSTR("T")'="P" S GMRVSTR("O")=$G(GMRVSTR("O"))+1,GMRVSTR("TMO")=$S('$P(GMRVSTR(0),"^",3):0,GMRVSTR("O")<$P(GMRVSTR(0),"^",3):0,1:1)
"RTN","GMRVUT2",50,0)
 S GMRVX=GMRVSTR("T"),GMRVX(0)=$P(GDATA,"^",8) D:GMRVX(0)>0 EN1^GMRVSAS0 S $P(GDATA,"^",12)=$S($G(GMRVX(1))>0:"*",1:"")
"RTN","GMRVUT2",51,0)
 S X=GMRVX(0) I X>0 D EN1^GMRVUTL:GMRVSTR("T")="T",EN2^GMRVUTL:GMRVSTR("T")="HT",EN3^GMRVUTL:GMRVSTR("T")="WT" S:GMRVSTR("T")="T"!(GMRVSTR("T")="HT")!(GMRVSTR("T")="WT") $P(GDATA,"^",13)=$S($D(Y):Y,1:"")
"RTN","GMRVUT2",52,0)
 I GMRVSTR("T")="CG" S $P(GDATA,"^",13)=$J(GMRVX(0)/.3937,0,2)
"RTN","GMRVUT2",53,0)
 I GMRVSTR("T")="CVP" S $P(GDATA,"^",13)=$J(GMRVX(0)/1.36,0,1)
"RTN","GMRVUT2",54,0)
 I GMRVSTR("T")="WT",$G(Y)>0 S GMRBMI="",GMRBMI(1)=$P(GDATA,"^"),GMRBMI(2)=+$P(GDATA,"^",8) D CALBMI^GMRVBMI(.GMRBMI) S $P(GDATA,"^",14)=GMRBMI K GMRBMI
"RTN","GMRVUT2",55,0)
 S (GG,GMRSITE,GMRQUAL)=""
"RTN","GMRVUT2",56,0)
 F GMVLOOP=1:1 Q:$P(GMVCLIO(5),U,GMVLOOP)=""  D
"RTN","GMRVUT2",57,0)
 .S GMVQNAME=$$FIELD^GMVGETQL($P(GMVCLIO(5),U,GMVLOOP),1,"E")
"RTN","GMRVUT2",58,0)
 .I GMVQNAME=""!(GMVQNAME=-1) Q
"RTN","GMRVUT2",59,0)
 .S GG=GG_$S(GG="":"",1:";")_GMVQNAME
"RTN","GMRVUT2",60,0)
 .Q
"RTN","GMRVUT2",61,0)
 S GMRSITE=$P(GG,";",1),GMRQUAL=$P(GG,";",2)
"RTN","GMRVUT2",62,0)
 S $P(GDATA,"^",10)=GMRSITE,$P(GDATA,"^",11)=GMRQUAL,$P(GDATA,"^",17)=$G(GG)
"RTN","GMRVUT2",63,0)
 S GMVRECORDID=GMRVSTR("IEN")
"RTN","GMRVUT2",64,0)
 I GMRVSTR("IEN")'=+GMRVSTR("IEN") D
"RTN","GMRVUT2",65,0)
 .S GMVIENGUID=GMVIENGUID+1
"RTN","GMRVUT2",66,0)
 .S GMVRECORDID=GMVIENGUID
"RTN","GMRVUT2",67,0)
 S ^UTILITY($J,"GMRVD",$S('$P(GMRVSTR(0),"^",4):GMRVSTR("T"),1:9999999-GMRVSTR("R")),$S('$P(GMRVSTR(0),"^",4):9999999-GMRVSTR("R"),1:GMRVSTR("T")),GMVRECORDID)=$$STRIP100($P(GDATA,"^"))_"^"_$P(GDATA,"^",2,99)
"RTN","GMRVUT2",68,0)
 Q
"RTN","GMRVUT2",69,0)
INACT42(GMWLOC) ; THIS PROCEDURE WILL CALL SUPPORTED ENTRY POINT WIN^DGPMDDCF
"RTN","GMRVUT2",70,0)
 ; TO DETERMINE IF WARD LOCATION (GMWLOC) IS INACTIVE.
"RTN","GMRVUT2",71,0)
 N X,D0,DGPMOS
"RTN","GMRVUT2",72,0)
 S D0=GMWLOC D WIN^DGPMDDCF
"RTN","GMRVUT2",73,0)
 Q X
"RTN","GMRVUT2",74,0)
 ;QUALIFY ;OBTAIN QUALIFIERS FOR VITAL MEASUREMENT  <<< CALLED FROM SETU2 ABOVE>>
"RTN","GMRVUT2",75,0)
 ;K GMRVARY S GMRVARY=""
"RTN","GMRVUT2",76,0)
 ;I $P($G(^GMR(120.5,+GMRVSTR("IEN"),5,0)),"^",4)>0 D CHAR^GMRVCHAR(+GMRVSTR("IEN"),.GMRVARY,GMRVSTR("TDA")) S GMRSITE=$O(GMRVARY(+GMRVSTR("IEN"),1,"")),GMRQUAL=$O(GMRVARY(+GMRVSTR("IEN"),2,""))
"RTN","GMRVUT2",77,0)
 ;K GG S GG="" I $O(GMRVARY(0)) D
"RTN","GMRVUT2",78,0)
 ;. S GG(1)=0 F  S GG(1)=$O(GMRVARY(GG(1))) Q:GG(1)'>0  S GG(2)=0 F  S GG(2)=$O(GMRVARY(GG(1),GG(2))) Q:GG(2)'>0  S GG(3)="" F  S GG(3)=$O(GMRVARY(GG(1),GG(2),GG(3))) Q:GG(3)=""  S GG=GG_$S(GG="":"",1:";")_GG(3)
"RTN","GMRVUT2",79,0)
 ;I GMRVSTR("T")'="P" Q
"RTN","GMRVUT2",80,0)
 ;I GMRSITE="" S GMRSITE=GMRQUAL,GMRQUAL="" Q
"RTN","GMRVUT2",81,0)
 ;I GMRQUAL="" Q
"RTN","GMRVUT2",82,0)
 ;S GMRSITE=GMRSITE_" "_GMRQUAL,GMRQUAL=""
"RTN","GMRVUT2",83,0)
 ;Q
"RTN","GMRVUTL")
0^6^B4909510^B6225466
"RTN","GMRVUTL",1,0)
GMRVUTL ;HIOFO/RM,MD,FT-CALLABLE ENTRY POINTS FOR PROGRAMMER UTILITIES ;5/8/07
"RTN","GMRVUTL",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMRVUTL",3,0)
 ;
"RTN","GMRVUTL",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVUTL",5,0)
 ;  #4290 - ^PXRMINDX global     (controlled)
"RTN","GMRVUTL",6,0)
 ;
"RTN","GMRVUTL",7,0)
EN1 ; CALL TO CONVERT TEMPERATURE (F) IN VARIABLE X TO TEMPERATURE (C)
"RTN","GMRVUTL",8,0)
 ; IN VARIABLE Y
"RTN","GMRVUTL",9,0)
 S Y=$J(X-32*5/9,0,1)
"RTN","GMRVUTL",10,0)
 Q
"RTN","GMRVUTL",11,0)
EN2 ; CALL TO CONVERT AN INCHES MEASUREMENT IN X TO A CENTIMETER 
"RTN","GMRVUTL",12,0)
 ; MEASUREMENT IN Y
"RTN","GMRVUTL",13,0)
 S Y=$J(2.54*X,0,2)
"RTN","GMRVUTL",14,0)
 Q
"RTN","GMRVUTL",15,0)
EN3 ; CALL TO CONVERT A WEIGHT (LBS) IN VARIABLE X TO A WEIGHT (KG)
"RTN","GMRVUTL",16,0)
 ; IN VARIABLE Y
"RTN","GMRVUTL",17,0)
 S Y=$J(X/2.2,0,2)
"RTN","GMRVUTL",18,0)
 Q
"RTN","GMRVUTL",19,0)
 ;EN4 ; CALL TO RETURN PATIENT'S LATEST WEIGHT READING
"RTN","GMRVUTL",20,0)
 ; PATIENT DEFINED BY DFN, WEIGHT RETURNED IN X
"RTN","GMRVUTL",21,0)
 ;Q:'$D(DFN)  S X="",GMRVIT=$O(^GMRD(120.51,"B","WEIGHT",0)) I GMRVIT'>0 K GMRVIT Q
"RTN","GMRVUTL",22,0)
 ;F GMRX=0:0 S GMRX=$O(^GMR(120.5,"AA",DFN,GMRVIT,GMRX)) Q:GMRX'>0!(X'="")  F GMRY=0:0 S GMRY=$O(^GMR(120.5,"AA",DFN,GMRVIT,GMRX,GMRY)) Q:GMRY'>0  D
"RTN","GMRVUTL",23,0)
 ;. I $S('$D(^GMR(120.5,GMRY,2)):1,$P(^(2),"^")="":1,1:0) S X=$S($D(^(0))&($P(^(0),"^",8)>0):$P(^(0),"^",8),1:"")
"RTN","GMRVUTL",24,0)
 ;K GMRVIT,GMRX,GMRY,GMRZ
"RTN","GMRVUTL",25,0)
 ;Q
"RTN","GMRVUTL",26,0)
 ;Q
"RTN","GMRVUTL",27,0)
EN6 ; ENTRY TO GET LATEST PATIENT VITAL/MEASUREMENT DATA <IA 1120 - SUPPORTED>
"RTN","GMRVUTL",28,0)
 ; INPUT VARIABLES:
"RTN","GMRVUTL",29,0)
 ;    DFN = Patient IEN  (REQUIRED)
"RTN","GMRVUTL",30,0)
 ;    GMRVSTR = Abbreviation of vital type in Vital Type (120.51) file.
"RTN","GMRVUTL",31,0)
 ;              (REQUIRED)
"RTN","GMRVUTL",32,0)
 ; OUTPUT VARIABLES:
"RTN","GMRVUTL",33,0)
 ;    X = ^GMR(120.5,IEN,0) where IEN is entry number of latest V/M.
"RTN","GMRVUTL",34,0)
 ;    X Global contains qualifiers, for example
"RTN","GMRVUTL",35,0)
 ;      X(1)=R ARM, X(2)=LYING for BP
"RTN","GMRVUTL",36,0)
 ; GMRVSTR will be killed.
"RTN","GMRVUTL",37,0)
 S X="" I '$D(DFN)!'$D(GMRVSTR) Q
"RTN","GMRVUTL",38,0)
 S GMRVSTR("TDA")=$O(^GMRD(120.51,"C",GMRVSTR,0))
"RTN","GMRVUTL",39,0)
 G Q6:GMRVSTR("TDA")'>0
"RTN","GMRVUTL",40,0)
 S GMRVSTR("R")=9999999
"RTN","GMRVUTL",41,0)
 F  S GMRVSTR("R")=$O(^PXRMINDX(120.5,"PI",DFN,GMRVSTR("TDA"),GMRVSTR("R")),-1) Q:GMRVSTR("R")'>0!(X'="")  D C6
"RTN","GMRVUTL",42,0)
Q6 K GMRVSTR
"RTN","GMRVUTL",43,0)
 Q
"RTN","GMRVUTL",44,0)
C6 ;
"RTN","GMRVUTL",45,0)
 N GMVCNT,GMVLOOP,GMVQIEN,GMVTEMP
"RTN","GMRVUTL",46,0)
 F GMRVSTR("IEN")=0:0 S GMRVSTR("IEN")=$O(^PXRMINDX(120.5,"PI",DFN,GMRVSTR("TDA"),GMRVSTR("R"),GMRVSTR("IEN"))) Q:$L(GMRVSTR("IEN"))'>0!(X'="")  D
"RTN","GMRVUTL",47,0)
 .I GMRVSTR("IEN")=+GMRVSTR("IEN") D
"RTN","GMRVUTL",48,0)
 ..D F1205^GMVUTL(.GMVTEMP,+GMRVSTR("IEN"),0)
"RTN","GMRVUTL",49,0)
 ..S X=$G(GMVTEMP(0)),GMVTEMP(5)=$G(GMVTEMP(5))
"RTN","GMRVUTL",50,0)
 ..Q
"RTN","GMRVUTL",51,0)
 .I GMRVSTR("IEN")'=+GMRVSTR("IEN") D 
"RTN","GMRVUTL",52,0)
 ..D CLIO^GMVUTL(.GMVTEMP,GMRVSTR("IEN"))
"RTN","GMRVUTL",53,0)
 ..I '$D(GMVTEMP(0)) Q
"RTN","GMRVUTL",54,0)
 ..S X=GMVTEMP(0),GMVTEMP(5)=$G(GMVTEMP(5))
"RTN","GMRVUTL",55,0)
 ..Q
"RTN","GMRVUTL",56,0)
 .Q
"RTN","GMRVUTL",57,0)
 I X="" Q
"RTN","GMRVUTL",58,0)
 I "REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR($P(X,U,8)) S X="" Q
"RTN","GMRVUTL",59,0)
 S GMVCNT=0
"RTN","GMRVUTL",60,0)
 F GMVLOOP=1:1 Q:$P(GMVTEMP(5),U,GMVLOOP)=""  D
"RTN","GMRVUTL",61,0)
 .S GMVQIEN=$P(GMVTEMP(5),U,GMVLOOP)
"RTN","GMRVUTL",62,0)
 .I GMVQIEN>0 D
"RTN","GMRVUTL",63,0)
 ..S GMVCNT=GMVCNT+1
"RTN","GMRVUTL",64,0)
 ..S X(GMVCNT)=$G(^GMRD(120.52,+GMVQIEN,0))
"RTN","GMRVUTL",65,0)
 ..Q
"RTN","GMRVUTL",66,0)
 .Q
"RTN","GMRVUTL",67,0)
 Q
"RTN","GMV23PST")
0^54^B9487682^n/a
"RTN","GMV23PST",1,0)
GMV23PST ;HOIFO/FT-POST INSTALLATION FOR GMRV*5*23 ; 03/24/09 16:01
"RTN","GMV23PST",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMV23PST",3,0)
 ;
"RTN","GMV23PST",4,0)
 ; This routine uses the following IAs:
"RTN","GMV23PST",5,0)
 ; #2263  - XPAR calls                           (supported)
"RTN","GMV23PST",6,0)
 ; #4835  - Add RPCS to OR CPRS GUI CHART option (private)
"RTN","GMV23PST",7,0)
 ; #10141 - XPDUTL calls                         (supported)
"RTN","GMV23PST",8,0)
 ;
"RTN","GMV23PST",9,0)
EN ; Main entry point
"RTN","GMV23PST",10,0)
 D XPAR,DLL,ADDRPC
"RTN","GMV23PST",11,0)
 Q
"RTN","GMV23PST",12,0)
XPAR ; Setup preliminary parameters. This subroutine is called during the
"RTN","GMV23PST",13,0)
 ; KIDS installation process.
"RTN","GMV23PST",14,0)
 ;
"RTN","GMV23PST",15,0)
 ; Variables:
"RTN","GMV23PST",16,0)
 ;  GMV:    [Private] Scratch
"RTN","GMV23PST",17,0)
 ;  GMVGUI: [Private] Current version of GUI being installed
"RTN","GMV23PST",18,0)
 ;  GMVLST: [Private] Scratch List
"RTN","GMV23PST",19,0)
 ;
"RTN","GMV23PST",20,0)
 ; NEW private variables
"RTN","GMV23PST",21,0)
 N GMV,GMVGUI,GMVLST
"RTN","GMV23PST",22,0)
 ; Announce my intentions
"RTN","GMV23PST",23,0)
 D BMES^XPDUTL("Updating system parameters.")
"RTN","GMV23PST",24,0)
 ; Set current client version
"RTN","GMV23PST",25,0)
 S GMVGUI="5.0.23.8"
"RTN","GMV23PST",26,0)
 ; Deactivate all previous versions from XPAR
"RTN","GMV23PST",27,0)
 D GETLST^XPAR(.GMVLST,"SYS","GMV GUI VERSION")
"RTN","GMV23PST",28,0)
 F GMV=0:0 S GMV=$O(GMVLST(GMV)) Q:'GMV  D
"RTN","GMV23PST",29,0)
 .D EN^XPAR("SYS","GMV GUI VERSION",$P(GMVLST(GMV),"^",1),0)
"RTN","GMV23PST",30,0)
 .Q
"RTN","GMV23PST",31,0)
 ; Add and/or activate current client versions
"RTN","GMV23PST",32,0)
 D EN^XPAR("SYS","GMV GUI VERSION","VITALS.EXE:"_GMVGUI,1)
"RTN","GMV23PST",33,0)
 D EN^XPAR("SYS","GMV GUI VERSION","VITALSMANAGER.EXE:"_GMVGUI,1)
"RTN","GMV23PST",34,0)
 Q
"RTN","GMV23PST",35,0)
DLL ;
"RTN","GMV23PST",36,0)
 ; Variables:
"RTN","GMV23PST",37,0)
 ;  GMV:    [Private] Scratch
"RTN","GMV23PST",38,0)
 ;  GMVDLL: [Private] Current version of DLL being installed
"RTN","GMV23PST",39,0)
 ;  GMVLST: [Private] Scratch List
"RTN","GMV23PST",40,0)
 ;
"RTN","GMV23PST",41,0)
 ; New private variables
"RTN","GMV23PST",42,0)
 N GMV,GMVDLL,GMVLST
"RTN","GMV23PST",43,0)
 ; Announce my intentions
"RTN","GMV23PST",44,0)
 D BMES^XPDUTL("Updating DLL parameter.")
"RTN","GMV23PST",45,0)
 ; Deactivate all previous versions from XPAR
"RTN","GMV23PST",46,0)
 D GETLST^XPAR(.GMVLST,"SYS","GMV DLL VERSION")
"RTN","GMV23PST",47,0)
 F GMV=0:0 S GMV=$O(GMVLST(GMV)) Q:'GMV  D
"RTN","GMV23PST",48,0)
 .D EN^XPAR("SYS","GMV DLL VERSION",$P(GMVLST(GMV),"^",1),0)
"RTN","GMV23PST",49,0)
 ; Add and/or activate current client versions
"RTN","GMV23PST",50,0)
 S GMVDLL="GMV_VITALSVIEWENTER.DLL:v. 04/07/09 16:30" ;patch 23
"RTN","GMV23PST",51,0)
 D EN^XPAR("SYS","GMV DLL VERSION",GMVDLL,1)
"RTN","GMV23PST",52,0)
 S GMVDLL="GMV_VITALSVIEWENTER.DLL:v. 08/11/09 15:00" ;patch 23
"RTN","GMV23PST",53,0)
 D EN^XPAR("SYS","GMV DLL VERSION",GMVDLL,1)
"RTN","GMV23PST",54,0)
 Q
"RTN","GMV23PST",55,0)
ADDRPC ; Add GMV RPC(s) to CPRS option
"RTN","GMV23PST",56,0)
 N GMVDA,GMVDA1,GMVERR,GMVFDA,GMVIEN,GMVMSG,GMVNAME,GMVNODE,GMVTEST,GMVX
"RTN","GMV23PST",57,0)
 K ^TMP($J),^TMP("GMV 23PST",$J)
"RTN","GMV23PST",58,0)
 S GMVDA=$$FIND1^DIC(19,"","O","OR CPRS GUI CHART","B","","GMVERR")
"RTN","GMV23PST",59,0)
 I 'GMVDA D  Q
"RTN","GMV23PST",60,0)
 .S GMVMSG(1)="Cannot find the 'OR CPRS GUI CHART' option."
"RTN","GMV23PST",61,0)
 .S GMVMSG(2)="Cannot add the RPC(s) needed. Please log a Remedy Ticket."
"RTN","GMV23PST",62,0)
 .D EN^DDIOL(.GMVMSG,"","!?5")
"RTN","GMV23PST",63,0)
 .Q
"RTN","GMV23PST",64,0)
 ; Get list of existing RPC(s) for OR CPRS GUI CHART option
"RTN","GMV23PST",65,0)
 D GETS^DIQ(19,GMVDA,"320*","I","^TMP($J)","GMVERR")
"RTN","GMV23PST",66,0)
 S GMVX=""
"RTN","GMV23PST",67,0)
 F  S GMVX=$O(^TMP($J,19.05,GMVX)) Q:GMVX=""  D
"RTN","GMV23PST",68,0)
 .S GMVIEN=+$G(^TMP($J,19.05,GMVX,.01,"I"))
"RTN","GMV23PST",69,0)
 .Q:'GMVIEN
"RTN","GMV23PST",70,0)
 .S ^TMP("GMV 23PST",$J,GMVIEN)=""
"RTN","GMV23PST",71,0)
 .Q
"RTN","GMV23PST",72,0)
 K GMVERR,GMVX
"RTN","GMV23PST",73,0)
 ; get GMV rpc(s) from table
"RTN","GMV23PST",74,0)
 F GMVX=1:1 S GMVNODE=$T(RPCLIST+GMVX) Q:$P(GMVNODE,";",3)=""  D
"RTN","GMV23PST",75,0)
 .S GMVNAME=$P(GMVNODE,";",3)
"RTN","GMV23PST",76,0)
 .Q:GMVNAME=""
"RTN","GMV23PST",77,0)
 .K GMVERR
"RTN","GMV23PST",78,0)
 .S GMVDA1=$$FIND1^DIC(8994,"","O",GMVNAME,"B","","GMVERR")
"RTN","GMV23PST",79,0)
 .Q:'GMVDA1
"RTN","GMV23PST",80,0)
 .Q:$D(^TMP("GMV 23PST",$J,GMVDA1))  ;rpc is already there
"RTN","GMV23PST",81,0)
 .K GMVERR,GMVFDA,GMVIEN
"RTN","GMV23PST",82,0)
 .S GMVFDA(19.05,"+1,"_GMVDA_",",.01)=GMVDA1
"RTN","GMV23PST",83,0)
 .D UPDATE^DIE("","GMVFDA","GMVIEN","GMVERR")
"RTN","GMV23PST",84,0)
 .Q
"RTN","GMV23PST",85,0)
 K ^TMP($J),^TMP("GMV 23PST",$J)
"RTN","GMV23PST",86,0)
 Q
"RTN","GMV23PST",87,0)
RPCLIST ; List of GMV RPC(s) to add to OR CPRS GUI CHART option 
"RTN","GMV23PST",88,0)
 ;;GMV CLOSEST READING
"RTN","GMV23PST",89,0)
 Q
"RTN","GMVBMI")
0^7^B6498219^B5347673
"RTN","GMVBMI",1,0)
GMVBMI ;HIOFO/YH,FT-EXTRACT HEIGHT TO CALCULATE BMI FOR WEIGHT; 5/9/07
"RTN","GMVBMI",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3,23**;Oct 31, 2002;Build 25
"RTN","GMVBMI",3,0)
 ;
"RTN","GMVBMI",4,0)
 ; This routine uses the following IAs:
"RTN","GMVBMI",5,0)
 ; <None>
"RTN","GMVBMI",6,0)
 ;
"RTN","GMVBMI",7,0)
HT ;OBTAIN ALL HEIGHTS FOR THE PATIENT
"RTN","GMVBMI",8,0)
 ; DFN MUST BE DEFINED
"RTN","GMVBMI",9,0)
 K GHEIGHT
"RTN","GMVBMI",10,0)
 S GH=0,GI=$O(^GMRD(120.51,"B","HEIGHT",0))
"RTN","GMVBMI",11,0)
 Q:GI'>0
"RTN","GMVBMI",12,0)
 F  S GH=$O(^PXRMINDX(120.5,"PI",DFN,GI,GH)) Q:GH'>0  S GH(1)=0 F  S GH(1)=$O(^PXRMINDX(120.5,"PI",DFN,GI,GH,GH(1))) Q:$L(GH(1))'>0  D
"RTN","GMVBMI",13,0)
 .I GH(1)=+GH(1) D  ;VITALS RECORD
"RTN","GMVBMI",14,0)
 ..I $D(^GMR(120.5,GH(1),0)),'$D(^GMR(120.5,GH(1),2)),$P(^GMR(120.5,GH(1),0),U,8)'="" D
"RTN","GMVBMI",15,0)
 ...I $P(^GMR(120.5,GH(1),0),U,8)>0 S GHEIGHT($P(^GMR(120.5,GH(1),0),U,1))=$P(^GMR(120.5,GH(1),0),U,8)
"RTN","GMVBMI",16,0)
 ...Q
"RTN","GMVBMI",17,0)
 ..Q
"RTN","GMVBMI",18,0)
 .I GH(1)'=+GH(1) D
"RTN","GMVBMI",19,0)
 ..N GMVCLIO
"RTN","GMVBMI",20,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GH(1))
"RTN","GMVBMI",21,0)
 ..Q:$P(GMVCLIO(0),U,1)=""
"RTN","GMVBMI",22,0)
 ..Q:$P(GMVCLIO(0),U,8)'>0
"RTN","GMVBMI",23,0)
 ..I $P(GMVCLIO(0),U,8)>0 S GHEIGHT($P(GMVCLIO(0),U,1))=$P(GMVCLIO(0),U,8)
"RTN","GMVBMI",24,0)
 ..Q
"RTN","GMVBMI",25,0)
 .Q
"RTN","GMVBMI",26,0)
 Q
"RTN","GMVBMI",27,0)
CALBMI(GBMI,GMVDEC) ;OBTAIN HEIGHT TO CALCULATE BMI
"RTN","GMVBMI",28,0)
 ; GBMI(1)=DATE/TIME WEIGHT WAS TAKEN
"RTN","GMVBMI",29,0)
 ; GBMI(2)=WEIGHT
"RTN","GMVBMI",30,0)
 ; GMVDEC = # of decimal places to return (optional)
"RTN","GMVBMI",31,0)
 ;          Can have 0, 1, 2, or 3.
"RTN","GMVBMI",32,0)
 ;          Default is 2.
"RTN","GMVBMI",33,0)
 N GDATE,GMRVHT
"RTN","GMVBMI",34,0)
 S GMRVHT="",GMVDEC=$G(GMVDEC,2)
"RTN","GMVBMI",35,0)
 S GMVDEC=$S(GMVDEC=3:3,GMVDEC=1:1,GMVDEC=0:0,1:2)
"RTN","GMVBMI",36,0)
 D HT
"RTN","GMVBMI",37,0)
 I '$D(GHEIGHT) K GHEIGHT,GI,GH Q
"RTN","GMVBMI",38,0)
 ;HEIGHT AND WEIGHT WERE OBTAINED AT THE SAME TIME
"RTN","GMVBMI",39,0)
 I $D(GHEIGHT(GBMI(1))) D  K GHEIGHT,GH,GI Q
"RTN","GMVBMI",40,0)
 .S GBMI(2)=GBMI(2)/2.2,GMRVHT=+GHEIGHT(GBMI(1))*2.54/100
"RTN","GMVBMI",41,0)
 .I +GMRVHT'>0 S GBMI=$J(0,0,0) Q
"RTN","GMVBMI",42,0)
 .S GBMI=$J(GBMI(2)/(GMRVHT*GMRVHT),0,GMVDEC) S GBMI=GBMI_$S(GBMI>27:"*",1:"")
"RTN","GMVBMI",43,0)
 ;EXTRACT THE HEIGHT TAKEN BEFORE THE WEIGHT WAS TAKEN
"RTN","GMVBMI",44,0)
 S GDATE=GBMI(1),GDATE(1)=0
"RTN","GMVBMI",45,0)
 F  S GDATE=$O(GHEIGHT(GDATE),-1) Q:GDATE'>0!(GDATE(1)>0)  D
"RTN","GMVBMI",46,0)
 .S GDATE(1)=GDATE
"RTN","GMVBMI",47,0)
 I GDATE(1)>0,$D(GHEIGHT(GDATE(1))) D  K GHEIGHT,GH,GI Q
"RTN","GMVBMI",48,0)
 .S GMRVHT=+GHEIGHT(GDATE(1))
"RTN","GMVBMI",49,0)
 .S GBMI(2)=GBMI(2)/2.2,GMRVHT=GMRVHT*2.54/100
"RTN","GMVBMI",50,0)
 .I +GMRVHT'>0 S GBMI=$J(0,0,0) Q
"RTN","GMVBMI",51,0)
 .S GBMI=$J(GBMI(2)/(GMRVHT*GMRVHT),0,GMVDEC),GBMI=GBMI_$S(GBMI>27:"*",1:"")
"RTN","GMVBMI",52,0)
 ;EXTRACT THE HEIGHT TAKEN AFTER THE WEIGHT WAS TAKEN
"RTN","GMVBMI",53,0)
 S GDATE=GBMI(1),GDATE(1)=0
"RTN","GMVBMI",54,0)
 F  S GDATE=$O(GHEIGHT(GDATE)) Q:GDATE'>0!(GDATE(1)>0)  S GDATE(1)=GDATE
"RTN","GMVBMI",55,0)
 I GDATE(1)>0 D  K GHEIGHT,GH,GI,G Q
"RTN","GMVBMI",56,0)
 .S GMRVHT=+GHEIGHT(GDATE(1))
"RTN","GMVBMI",57,0)
 .S GBMI(2)=GBMI(2)/2.2,GMRVHT=GMRVHT*2.54/100
"RTN","GMVBMI",58,0)
 .I +GMRVHT'>0 S GBMI=$J(0,0,0) Q
"RTN","GMVBMI",59,0)
 .S GBMI=$J(GBMI(2)/(GMRVHT*GMRVHT),0,GMVDEC),GBMI=GBMI_$S(GBMI>27:"*",1:"")
"RTN","GMVBMI",60,0)
 K GHEIGHT,GI,GH,G
"RTN","GMVBMI",61,0)
 Q
"RTN","GMVDCEXT")
0^12^B58279686^B43745459
"RTN","GMVDCEXT",1,0)
GMVDCEXT ;HOIFO/DAD,FT-VITALS COMPONENT: EXTRACT PATIENT DATA ;6/13/07
"RTN","GMVDCEXT",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVDCEXT",3,0)
 ;
"RTN","GMVDCEXT",4,0)
 ; This routine uses the following IAs:
"RTN","GMVDCEXT",5,0)
 ;  #4290 - ^PXRMINDX global         (controlled)
"RTN","GMVDCEXT",6,0)
 ; #10035 - FILE 2 references        (supported)
"RTN","GMVDCEXT",7,0)
 ; #10104 - ^XLFSTR calls            (supported)
"RTN","GMVDCEXT",8,0)
 ;
"RTN","GMVDCEXT",9,0)
 ; This routine supports the following IAs:
"RTN","GMVDCEXT",10,0)
 ; #4251 - EN1 entry point           (private)
"RTN","GMVDCEXT",11,0)
 ;
"RTN","GMVDCEXT",12,0)
EN1(RESULT,GMVDFN,GMVFMT,GMVABR,GMVALL,GMVBEG,GMVEND,GMVMSYS,GMVEER) ;
"RTN","GMVDCEXT",13,0)
 ; Return patient vitals
"RTN","GMVDCEXT",14,0)
 ;
"RTN","GMVDCEXT",15,0)
 ; Input:
"RTN","GMVDCEXT",16,0)
 ;  RESULT  = Where data is returned (closed array reference) (Required)
"RTN","GMVDCEXT",17,0)
 ;  GMVDFN  = A pointer to the Patient file (#2) (Required)
"RTN","GMVDCEXT",18,0)
 ;  GMVFMT  = Format of returned data (Optional)
"RTN","GMVDCEXT",19,0)
 ;            1 - IENs (default), 2 - Abbreviations, 3 - Full Names
"RTN","GMVDCEXT",20,0)
 ;  GMVABR  = Abbreviations of vital types to return (Optional)
"RTN","GMVDCEXT",21,0)
 ;            "^T^P^R^PO2^BP^HT^WT^CVP^CG^PN^"  (Default GMVALL = 0)
"RTN","GMVDCEXT",22,0)
 ;            "~ALL~" to return all vital types (Default GMVALL = 1)
"RTN","GMVDCEXT",23,0)
 ;  GMVALL  = Controls what data is returned (Optional)
"RTN","GMVDCEXT",24,0)
 ;            0 - Most recent (default), 1 - All in date range
"RTN","GMVDCEXT",25,0)
 ;  GMVBEG  = Beginning date for all vitals (Not used for GMVALL = 0)
"RTN","GMVDCEXT",26,0)
 ;  GMVEND  = Ending    date for all vitals (Not used for GMVALL = 0)
"RTN","GMVDCEXT",27,0)
 ;  GMVMSYS = Measurement system (Optional)
"RTN","GMVDCEXT",28,0)
 ;            M = Metric, C - US Customary (Default)
"RTN","GMVDCEXT",29,0)
 ;  GMVEER  = Include entered in error records (Optional)
"RTN","GMVDCEXT",30,0)
 ;            (0 - No (Default), 1 - Yes)
"RTN","GMVDCEXT",31,0)
 ;
"RTN","GMVDCEXT",32,0)
 ; Output:
"RTN","GMVDCEXT",33,0)
 ;  RESULT() = VitalMeasurementIEN ^ DateTimeTaken ^ PatientDFN ^
"RTN","GMVDCEXT",34,0)
 ;             VitalType ^ DateTimeEntered ^ HospitalLocation ^
"RTN","GMVDCEXT",35,0)
 ;             EnteredBy ^ Measurement ^ EnteredInError ^
"RTN","GMVDCEXT",36,0)
 ;             EnteredInErrorBy ^
"RTN","GMVDCEXT",37,0)
 ;             Qualifier1 ; Qualifier2 ; ... ^
"RTN","GMVDCEXT",38,0)
 ;             EnteredInErrorReason1 ; EnteredInErrorReason2 ; ... ^
"RTN","GMVDCEXT",39,0)
 ;
"RTN","GMVDCEXT",40,0)
 N GMV,GMVABBR,GMVALUE,GMVCAT,GMVCD0,GMVCD1,GMVD0,GMVD1,GMVDATA
"RTN","GMVDCEXT",41,0)
 N GMVDATA2,GMVER,GMVFOUND,GMVIDATE,GMVOK,GMVPOR,GMVPULSE,GMVQD0
"RTN","GMVDCEXT",42,0)
 N GMVQD1,GMVQUA,GMVQL
"RTN","GMVDCEXT",43,0)
 N GMVRATE,GMVRET
"RTN","GMVDCEXT",44,0)
 K @RESULT
"RTN","GMVDCEXT",45,0)
 S @RESULT@(0)="OK"
"RTN","GMVDCEXT",46,0)
 S GMVALL=$S("^0^1^"[(U_$G(GMVALL)_U):GMVALL,1:0)
"RTN","GMVDCEXT",47,0)
 S GMVFMT=$S("^1^2^3^"[(U_$G(GMVFMT)_U):GMVFMT,1:1)
"RTN","GMVDCEXT",48,0)
 S GMVEER=$S(GMVALL=0:0,"^0^1^"[(U_$G(GMVEER)_U):GMVEER,1:0)
"RTN","GMVDCEXT",49,0)
 I $$FIND1^DIC(2,"","","`"_GMVDFN)'=GMVDFN D
"RTN","GMVDCEXT",50,0)
 . S @RESULT@(0)="ERROR"
"RTN","GMVDCEXT",51,0)
 . S @RESULT@(1)="ERROR: Missing or invalid Patient parameter"
"RTN","GMVDCEXT",52,0)
 . Q
"RTN","GMVDCEXT",53,0)
 S GMVMSYS=$$MEASYS^GMVDCUTL($G(GMVMSYS))
"RTN","GMVDCEXT",54,0)
 K GMVRET
"RTN","GMVDCEXT",55,0)
 D DT^DILF("ST",$G(GMVEND),.GMVRET,"-NOW")
"RTN","GMVDCEXT",56,0)
 S GMVEND=$G(GMVRET)
"RTN","GMVDCEXT",57,0)
 K GMVRET
"RTN","GMVDCEXT",58,0)
 D DT^DILF("ST",$G(GMVBEG),.GMVRET,-GMVEND)
"RTN","GMVDCEXT",59,0)
 S GMVBEG=$G(GMVRET) S:GMVBEG>0 GMVBEG=GMVBEG-.000001
"RTN","GMVDCEXT",60,0)
 I GMVALL&((GMVBEG'>0)!(GMVEND'>0)) D
"RTN","GMVDCEXT",61,0)
 . S @RESULT@(0)="ERROR"
"RTN","GMVDCEXT",62,0)
 . S @RESULT@(2)="ERROR: Missing or invalid Date Range parameters"
"RTN","GMVDCEXT",63,0)
 . Q
"RTN","GMVDCEXT",64,0)
 I $G(@RESULT@(0))="ERROR" Q
"RTN","GMVDCEXT",65,0)
 S GMVABBR=$S($G(GMVABR)]"":GMVABR,GMVALL=1:"~ALL~",1:"^T^P^R^PO2^BP^HT^WT^CVP^CG^PN^")
"RTN","GMVDCEXT",66,0)
 I GMVABBR="~ALL~" D
"RTN","GMVDCEXT",67,0)
 . S GMVD0=0,GMVABBR=U
"RTN","GMVDCEXT",68,0)
 . F  S GMVD0=$O(^GMRD(120.51,GMVD0)) Q:GMVD0'>0  D
"RTN","GMVDCEXT",69,0)
 .. S GMVABBR(0)=$P($G(^GMRD(120.51,GMVD0,0)),U,2)
"RTN","GMVDCEXT",70,0)
 .. I GMVABBR(0)]"" S GMVABBR=GMVABBR_GMVABBR(0)_U
"RTN","GMVDCEXT",71,0)
 .. Q
"RTN","GMVDCEXT",72,0)
 . Q
"RTN","GMVDCEXT",73,0)
 S GMVABBR=$S($E(GMVABBR)'=U:U,1:"")_GMVABBR_$S($E(GMVABBR,$L(GMVABBR))'=U:U,1:"")
"RTN","GMVDCEXT",74,0)
 F GMV=2:1:$L(GMVABBR,U)-1 S GMVABBR(0)=$P(GMVABBR,U,GMV) D
"RTN","GMVDCEXT",75,0)
 . I $S(GMVABBR(0)="":1,$O(^GMRD(120.51,"C",GMVABBR(0),0))>0:1,1:0) Q
"RTN","GMVDCEXT",76,0)
 . I GMVABBR(0)'=+GMVABBR(0) S GMVABBR(0)=+$O(^GMRD(120.51,"B",GMVABBR(0),0))
"RTN","GMVDCEXT",77,0)
 . S GMVABBR(0)=$P($G(^GMRD(120.51,GMVABBR(0),0)),U,2)
"RTN","GMVDCEXT",78,0)
 . S $P(GMVABBR,U,GMV)=GMVABBR(0)
"RTN","GMVDCEXT",79,0)
 . Q
"RTN","GMVDCEXT",80,0)
 F GMV=1:1 S GMVPULSE=$P($T(PULSE+GMV),";;",2) Q:GMVPULSE=""  D
"RTN","GMVDCEXT",81,0)
 . S GMVD0=0
"RTN","GMVDCEXT",82,0)
 . F  S GMVD0=$O(^GMRD(120.52,"B",GMVPULSE,GMVD0)) Q:GMVD0'>0  D
"RTN","GMVDCEXT",83,0)
 .. I $P($G(^GMRD(120.52,GMVD0,0)),U)=GMVPULSE S GMVPULSE(GMVD0)=GMVPULSE,GMVPULSE(GMVPULSE)=GMVD0
"RTN","GMVDCEXT",84,0)
 .. Q
"RTN","GMVDCEXT",85,0)
 . Q
"RTN","GMVDCEXT",86,0)
 S GMVD0=0
"RTN","GMVDCEXT",87,0)
 F  S GMVD0=$O(^GMRD(120.51,GMVD0)) Q:GMVD0'>0  D
"RTN","GMVDCEXT",88,0)
 . S GMVABBR(0)=$G(^GMRD(120.51,GMVD0,0))
"RTN","GMVDCEXT",89,0)
 . I GMVABBR[(U_$P(GMVABBR(0),U,2)_U) S GMVABBR($P(GMVABBR(0),U,2))=GMVD0_U_$P(GMVABBR(0),U,2)_U_$P(GMVABBR(0),U)
"RTN","GMVDCEXT",90,0)
 . Q
"RTN","GMVDCEXT",91,0)
 S GMVABBR=""
"RTN","GMVDCEXT",92,0)
 F  S GMVABBR=$O(GMVABBR(GMVABBR)) Q:GMVABBR=""  I GMVABBR(GMVABBR)>0 D
"RTN","GMVDCEXT",93,0)
 . S GMVFOUND=0
"RTN","GMVDCEXT",94,0)
 . S GMVIDATE=$S(GMVALL:GMVBEG,1:0)
"RTN","GMVDCEXT",95,0)
 . I GMVALL=1 F  S GMVIDATE=$O(^PXRMINDX(120.5,"PI",GMVDFN,+GMVABBR(GMVABBR),GMVIDATE)) Q:GMVIDATE'>0!$S(GMVALL:GMVIDATE>GMVEND,1:0)!GMVFOUND  D SETDATAR
"RTN","GMVDCEXT",96,0)
 . I GMVALL=0 S GMVIDATE=GMVEND+.000001 F  S GMVIDATE=$O(^PXRMINDX(120.5,"PI",GMVDFN,+GMVABBR(GMVABBR),GMVIDATE),-1) Q:GMVIDATE'>0!(GMVFOUND)!(GMVIDATE<GMVBEG)  D SETDATAR
"RTN","GMVDCEXT",97,0)
 . Q:GMVEER=0
"RTN","GMVDCEXT",98,0)
 . S GMVIDATE=$S(GMVALL:9999999-GMVEND,1:0)
"RTN","GMVDCEXT",99,0)
 . F  S GMVIDATE=$O(^GMR(120.5,"AA",GMVDFN,+GMVABBR(GMVABBR),GMVIDATE)) Q:GMVIDATE'>0!$S(GMVALL:(9999999-GMVIDATE)<GMVBEG,1:0)!GMVFOUND  D SETDATA1
"RTN","GMVDCEXT",100,0)
 . Q
"RTN","GMVDCEXT",101,0)
 Q
"RTN","GMVDCEXT",102,0)
 ;
"RTN","GMVDCEXT",103,0)
SETDATAR ;
"RTN","GMVDCEXT",104,0)
 N GMVCLIO
"RTN","GMVDCEXT",105,0)
 S GMVD0=0
"RTN","GMVDCEXT",106,0)
 F  S GMVD0=$O(^PXRMINDX(120.5,"PI",GMVDFN,+GMVABBR(GMVABBR),GMVIDATE,GMVD0)) Q:$L(GMVD0)'>0!GMVFOUND  D
"RTN","GMVDCEXT",107,0)
 .I GMVD0=+GMVD0 D
"RTN","GMVDCEXT",108,0)
 ..D F1205^GMVUTL(.GMVCLIO,GMVD0)
"RTN","GMVDCEXT",109,0)
 .I GMVD0'=+GMVD0 D
"RTN","GMVDCEXT",110,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GMVD0)
"RTN","GMVDCEXT",111,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(2)=$G(GMVCLIO(2)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVDCEXT",112,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVDCEXT",113,0)
 .D SETNODE
"RTN","GMVDCEXT",114,0)
 .Q
"RTN","GMVDCEXT",115,0)
 Q
"RTN","GMVDCEXT",116,0)
 ;
"RTN","GMVDCEXT",117,0)
SETDATA1 ;
"RTN","GMVDCEXT",118,0)
 N GMVCLIO
"RTN","GMVDCEXT",119,0)
 S GMVD0=0
"RTN","GMVDCEXT",120,0)
 F  S GMVD0=$O(^GMR(120.5,"AA",GMVDFN,+GMVABBR(GMVABBR),GMVIDATE,GMVD0)) Q:$L(GMVD0)'>0!GMVFOUND  D
"RTN","GMVDCEXT",121,0)
 .I GMVD0=+GMVD0 D
"RTN","GMVDCEXT",122,0)
 .I $P($G(^GMR(120.5,GMVD0,2)),U,1)'=1 Q  ;not an error
"RTN","GMVDCEXT",123,0)
 .D F1205^GMVUTL(.GMVCLIO,GMVD0,1)
"RTN","GMVDCEXT",124,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(2)=$G(GMVCLIO(2)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVDCEXT",125,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVDCEXT",126,0)
 .D SETNODE
"RTN","GMVDCEXT",127,0)
 .Q
"RTN","GMVDCEXT",128,0)
 Q
"RTN","GMVDCEXT",129,0)
SETNODE ;
"RTN","GMVDCEXT",130,0)
 S GMVDATA=GMVCLIO(0)
"RTN","GMVDCEXT",131,0)
 S GMVDATA2=GMVCLIO(2)
"RTN","GMVDCEXT",132,0)
 S GMVRATE=$P(GMVDATA,U,8)
"RTN","GMVDCEXT",133,0)
 I GMVALL=0,"^REFUSED^PASS^UNAVAILABLE^"[(U_$$UP^XLFSTR(GMVRATE)_U) Q
"RTN","GMVDCEXT",134,0)
 I GMVEER=0,(($P(GMVDATA2,U)>0)!($P(GMVDATA2,U,2)>0)) Q
"RTN","GMVDCEXT",135,0)
 I GMVABBR="PO2",$P(GMVDATA,U,10)]"" D
"RTN","GMVDCEXT",136,0)
 . ; *** Decode Supplemental O2 field (#1.4) ***
"RTN","GMVDCEXT",137,0)
 . N GMVFRATE,GMVPCENT,GMVSUPO2
"RTN","GMVDCEXT",138,0)
 . S GMVSUPO2=$$LOW^XLFSTR($TR($P(GMVDATA,U,10)," "))
"RTN","GMVDCEXT",139,0)
 . S GMVFRATE=$S(GMVSUPO2["l/min":$P(GMVSUPO2,"l/min"),1:"")
"RTN","GMVDCEXT",140,0)
 . S GMVFRATE=$TR(GMVFRATE,$TR(GMVFRATE,".0123456789"))
"RTN","GMVDCEXT",141,0)
 . S GMVPCENT=$S(GMVSUPO2["%":$P(GMVSUPO2,"%"),1:"")
"RTN","GMVDCEXT",142,0)
 . S GMVPCENT=$S(GMVPCENT["l/min":$P(GMVPCENT,"l/min",2),GMVPCENT=+GMVPCENT:GMVPCENT,1:"")
"RTN","GMVDCEXT",143,0)
 . S GMVPCENT=$TR(GMVPCENT,$TR(GMVPCENT,".0123456789"))
"RTN","GMVDCEXT",144,0)
 . S GMVRATE=GMVRATE_";"_GMVFRATE_";"_GMVPCENT
"RTN","GMVDCEXT",145,0)
 . Q
"RTN","GMVDCEXT",146,0)
 I 'GMVALL,GMVABBR="P" D  I 'GMVOK Q
"RTN","GMVDCEXT",147,0)
 . ; *** Include selected pulse types (latest vitals only) ***
"RTN","GMVDCEXT",148,0)
 . S GMVOK=0
"RTN","GMVDCEXT",149,0)
 . F GMVPULSE=1:1 Q:$P(GMVCLIO(5),U,GMVPULSE)=""  D  Q:GMVOK
"RTN","GMVDCEXT",150,0)
 .. I $D(GMVPULSE(+$P(GMVCLIO(5),U,GMVPULSE))) S GMVOK=1
"RTN","GMVDCEXT",151,0)
 .. Q
"RTN","GMVDCEXT",152,0)
 . Q
"RTN","GMVDCEXT",153,0)
 I 'GMVALL S GMVFOUND=1
"RTN","GMVDCEXT",154,0)
 S GMVALUE=$$CNV^GMVDCCNV(GMVRATE,GMVMSYS,"G",$P(GMVABBR(GMVABBR),U,2))
"RTN","GMVDCEXT",155,0)
 S @RESULT@(GMVD0)=GMVD0_U_$P(GMVDATA,U)_U_$P(GMVDATA,U,2)_U_$P(GMVABBR(GMVABBR),U,GMVFMT)_U_$P(GMVDATA,U,4)_U_$P(GMVDATA,U,5)_U_$P(GMVDATA,U,6)_U_GMVALUE_U_$P(GMVDATA2,U)_U_$P(GMVDATA2,U,2)_U
"RTN","GMVDCEXT",156,0)
 K GMVQL
"RTN","GMVDCEXT",157,0)
 F GMVD1=1:1 Q:$P(GMVCLIO(5),U,GMVD1)=""  D
"RTN","GMVDCEXT",158,0)
 . S GMVQD0=$P(GMVCLIO(5),U,GMVD1)
"RTN","GMVDCEXT",159,0)
 . S GMVQD1=+$O(^GMRD(120.52,GMVQD0,1,"B",GMVABBR(GMVABBR),0))
"RTN","GMVDCEXT",160,0)
 . S GMVCD0=+$P($G(^GMRD(120.52,GMVQD0,1,GMVQD1,0)),U,2)
"RTN","GMVDCEXT",161,0)
 . S GMVCAT=$P($G(^GMRD(120.53,GMVCD0,0)),U)
"RTN","GMVDCEXT",162,0)
 . S GMVCAT=$S(GMVCAT]"":GMVCAT,1:" ")
"RTN","GMVDCEXT",163,0)
 . S GMVQUA=$G(^GMRD(120.52,GMVQD0,0))
"RTN","GMVDCEXT",164,0)
 . S GMVQUA(1)=GMVQD0,GMVQUA(2)=$P(GMVQUA,U,2),GMVQUA(3)=$P(GMVQUA,U)
"RTN","GMVDCEXT",165,0)
 . S GMVCD1=+$O(^GMRD(120.53,"AA",+GMVABBR(GMVABBR),GMVCAT,GMVCD0,0))
"RTN","GMVDCEXT",166,0)
 . S GMVPOR=1+$P($G(^GMRD(120.53,GMVCD0,1,GMVCD1,0)),U,5)
"RTN","GMVDCEXT",167,0)
 . I $G(GMVQUA(GMVFMT))]"" D
"RTN","GMVDCEXT",168,0)
 .. S GMVQL(GMVPOR,GMVCAT)=$G(GMVQL(GMVPOR,GMVCAT))_GMVQUA(GMVFMT)_";"
"RTN","GMVDCEXT",169,0)
 .. Q
"RTN","GMVDCEXT",170,0)
 . Q
"RTN","GMVDCEXT",171,0)
 S GMVPOR=0
"RTN","GMVDCEXT",172,0)
 F  S GMVPOR=$O(GMVQL(GMVPOR)) Q:GMVPOR'>0  D
"RTN","GMVDCEXT",173,0)
 . S GMVCAT=""
"RTN","GMVDCEXT",174,0)
 . F  S GMVCAT=$O(GMVQL(GMVPOR,GMVCAT)) Q:GMVCAT=""  D
"RTN","GMVDCEXT",175,0)
 .. S @RESULT@(GMVD0)=@RESULT@(GMVD0)_GMVQL(GMVPOR,GMVCAT)
"RTN","GMVDCEXT",176,0)
 .. Q
"RTN","GMVDCEXT",177,0)
 . Q
"RTN","GMVDCEXT",178,0)
 S @RESULT@(GMVD0)=$$FIXUP(@RESULT@(GMVD0))
"RTN","GMVDCEXT",179,0)
 S GMVER(0)=";"_$$GET1^DID(120.506,.01,"","POINTER")
"RTN","GMVDCEXT",180,0)
 F GMVD1=1:1 Q:$P($P(GMVCLIO(2),U,3),"~",GMVD1)=""  D
"RTN","GMVDCEXT",181,0)
 . S GMVER=$P($P(GMVCLIO(2),U,3),"~",GMVD1)
"RTN","GMVDCEXT",182,0)
 . I GMVER(0)[(";"_GMVER_":") D
"RTN","GMVDCEXT",183,0)
 .. I GMVFMT<3 S @RESULT@(GMVD0)=@RESULT@(GMVD0)_GMVER_";"
"RTN","GMVDCEXT",184,0)
 .. E  S @RESULT@(GMVD0)=@RESULT@(GMVD0)_$P($P(GMVER(0),";"_GMVER_":",2),";")_";"
"RTN","GMVDCEXT",185,0)
 .. Q
"RTN","GMVDCEXT",186,0)
 . Q
"RTN","GMVDCEXT",187,0)
 S @RESULT@(GMVD0)=$$FIXUP(@RESULT@(GMVD0))
"RTN","GMVDCEXT",188,0)
 Q
"RTN","GMVDCEXT",189,0)
 ;
"RTN","GMVDCEXT",190,0)
FIXUP(X) ;
"RTN","GMVDCEXT",191,0)
 Q $S($E(X,$L(X))=";":$E(X,1,$L(X)-1),1:X)_U
"RTN","GMVDCEXT",192,0)
 ;
"RTN","GMVDCEXT",193,0)
PULSE ;;Pulse types to include in the latest vitals extract
"RTN","GMVDCEXT",194,0)
 ;;APICAL
"RTN","GMVDCEXT",195,0)
 ;;BRACHIAL
"RTN","GMVDCEXT",196,0)
 ;;RADIAL
"RTN","GMVDCEXT",197,0)
 ;;
"RTN","GMVDCSAV")
0^50^B10117160^B19948030
"RTN","GMVDCSAV",1,0)
GMVDCSAV ;HOIFO/DAD,FT-VITALS COMPONENT: SAVE DATA ; 5/8/08
"RTN","GMVDCSAV",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**9,3,25,23**;Oct 31, 2002;Build 25
"RTN","GMVDCSAV",3,0)
 ;
"RTN","GMVDCSAV",4,0)
 ; This routine uses the following IAs:
"RTN","GMVDCSAV",5,0)
 ;  #4114 - ^PXRMINDX global     (controlled)
"RTN","GMVDCSAV",6,0)
 ; #10103 - ^XLFDT calls         (supported)
"RTN","GMVDCSAV",7,0)
 ;
"RTN","GMVDCSAV",8,0)
 ; This routine supports the following IAs:
"RTN","GMVDCSAV",9,0)
 ; #3996 - GMV ADD VM RPC called at EN1  (private)
"RTN","GMVDCSAV",10,0)
 ; 
"RTN","GMVDCSAV",11,0)
 ; 01/28/2005 KAM GMRV*5*9 Record midnight with 1 second added
"RTN","GMVDCSAV",12,0)
 ;                         Stop adding second on multiple patent entry
"RTN","GMVDCSAV",13,0)
 ;
"RTN","GMVDCSAV",14,0)
EN1(RESULT,GMVDATA) ; GMV ADD VM [RPC entry point]
"RTN","GMVDCSAV",15,0)
 ; Saves vitals data
"RTN","GMVDCSAV",16,0)
 ; GMVDATA has the following data:
"RTN","GMVDCSAV",17,0)
 ; piece1^piece2^piece3^piece4^piece5
"RTN","GMVDCSAV",18,0)
 ; where:
"RTN","GMVDCSAV",19,0)
 ;   piece1 = date/time in FileMan internal format
"RTN","GMVDCSAV",20,0)
 ;   piece2 = patient number from FILE 2 (i.e., DFN)
"RTN","GMVDCSAV",21,0)
 ;   piece3 = vital type, a semi-colon, the reading, a semi-colon, and
"RTN","GMVDCSAV",22,0)
 ;            oxygen flow rate and percentage values [optional] (e.g.,
"RTN","GMVDCSAV",23,0)
 ;            21;99;1 l/min 90%)
"RTN","GMVDCSAV",24,0)
 ;   piece4 = hospital location (FILE 44) pointer value
"RTN","GMVDCSAV",25,0)
 ;   piece5 = FILE 200 user number (i.e., DUZ), an asterisk, and the 
"RTN","GMVDCSAV",26,0)
 ;            qualifier (File 120.52) internal entry numbers separated by
"RTN","GMVDCSAV",27,0)
 ;            colons (e.g., 547*50:65)
"RTN","GMVDCSAV",28,0)
 ; Example:
"RTN","GMVDCSAV",29,0)
 ;  > S GMVDATA="3051011.1635^134^1;120/80;^67^87*2:38:50:75"
"RTN","GMVDCSAV",30,0)
 ;  > D EN1^GMVDCSAV(.RESULT,GMVDATA)
"RTN","GMVDCSAV",31,0)
 ;
"RTN","GMVDCSAV",32,0)
 N GMVCNT,GMVDFN,GMVDTDUN,GMVDTENT,GMVENTBY,GMVFDA,GMVHOSPL
"RTN","GMVDCSAV",33,0)
 N GMVLOOP,GMVMSG,GMVQUALS,GMVRES,GMVIEN,GMVVMEAS,GMVVQUAL,GMVVTYP
"RTN","GMVDCSAV",34,0)
 D QUALTWO
"RTN","GMVDCSAV",35,0)
 Q
"RTN","GMVDCSAV",36,0)
QUALTWO ; Add a new entry to FILE 120.5
"RTN","GMVDCSAV",37,0)
 K GMVFDA
"RTN","GMVDCSAV",38,0)
 S GMVVMEAS=$P(GMVDATA,"*",1)
"RTN","GMVDCSAV",39,0)
 S GMVDTDUN=+$P(GMVVMEAS,"^",1) ; Date time
"RTN","GMVDCSAV",40,0)
 ;01/28/2005 KAM GMRV*5*9 Added next Line PAL-0105-60940 
"RTN","GMVDCSAV",41,0)
 I +$P(GMVDTDUN,".",2)'>0 S GMVDTDUN=$$FMADD^XLFDT(GMVDTDUN,"","","",1)
"RTN","GMVDCSAV",42,0)
 I +$P(GMVDTDUN,".",2)=24 S GMVDTDUN=$$FMADD^XLFDT(GMVDTDUN,"","","",1)
"RTN","GMVDCSAV",43,0)
 S GMVDFN=+$P(GMVVMEAS,"^",2) ; Patient DFN
"RTN","GMVDCSAV",44,0)
 S GMVVTYP=$P(GMVVMEAS,"^",3) ; Vital type
"RTN","GMVDCSAV",45,0)
 S GMVDTDUN=$$CHKDT(GMVDTDUN,$P(GMVVTYP,";",1))
"RTN","GMVDCSAV",46,0)
 S GMVDTENT=$$NOW^XLFDT ; Current date time
"RTN","GMVDCSAV",47,0)
 S GMVHOSPL=+$P(GMVVMEAS,"^",4) ; Hospital
"RTN","GMVDCSAV",48,0)
 S GMVENTBY=+$P(GMVVMEAS,"^",5) ; DUZ
"RTN","GMVDCSAV",49,0)
 S GMVFDA(120.5,"+1,",.01)=GMVDTDUN ; Date time taken
"RTN","GMVDCSAV",50,0)
 S GMVFDA(120.5,"+1,",.02)=GMVDFN   ; Patient
"RTN","GMVDCSAV",51,0)
 S GMVFDA(120.5,"+1,",.03)=+$P(GMVVTYP,";",1)   ; Vital Type
"RTN","GMVDCSAV",52,0)
 S GMVFDA(120.5,"+1,",.04)=GMVDTENT  ; Date Time entered
"RTN","GMVDCSAV",53,0)
 S GMVFDA(120.5,"+1,",.05)=GMVHOSPL  ; Hospital
"RTN","GMVDCSAV",54,0)
 S GMVFDA(120.5,"+1,",.06)=GMVENTBY  ; Entered by (DUZ)
"RTN","GMVDCSAV",55,0)
 S GMVFDA(120.5,"+1,",1.2)=$P(GMVVTYP,";",2) ; Rate
"RTN","GMVDCSAV",56,0)
 S GMVFDA(120.5,"+1,",1.4)=$P(GMVVTYP,";",3) ; Sup 02
"RTN","GMVDCSAV",57,0)
 S GMVIEN=""
"RTN","GMVDCSAV",58,0)
 D UPDATE^DIE("","GMVFDA","GMVIEN"),FMERROR
"RTN","GMVDCSAV",59,0)
 S GMVCNT=1
"RTN","GMVDCSAV",60,0)
 S GMVQUALS=$P(GMVDATA,"*",2)
"RTN","GMVDCSAV",61,0)
 F GMVLOOP=1:1:$L(GMVQUALS,":")+1 D
"RTN","GMVDCSAV",62,0)
 . S GMVVQUAL=$P(GMVQUALS,":",GMVLOOP)
"RTN","GMVDCSAV",63,0)
 . Q:GMVVQUAL=""
"RTN","GMVDCSAV",64,0)
 . S GMVCNT=GMVCNT+1
"RTN","GMVDCSAV",65,0)
 . D ADDQUAL^GMVGETQ(.GMVRES,GMVIEN(1)_"^"_GMVVQUAL)
"RTN","GMVDCSAV",66,0)
 . Q
"RTN","GMVDCSAV",67,0)
 Q 
"RTN","GMVDCSAV",68,0)
 ;
"RTN","GMVDCSAV",69,0)
CHKDT(GMVDT,GMVSAV) ;Check if there is a vital entered for that date and time.
"RTN","GMVDCSAV",70,0)
 ; If there is then add one second to the date/time until you find a
"RTN","GMVDCSAV",71,0)
 ; date/time not used.
"RTN","GMVDCSAV",72,0)
 N GMVFLAG
"RTN","GMVDCSAV",73,0)
 S GMVFLAG=0
"RTN","GMVDCSAV",74,0)
 F  Q:GMVFLAG  D
"RTN","GMVDCSAV",75,0)
 .I '$D(^PXRMINDX(120.5,"PI",GMVDFN,GMVSAV,GMVDT)) S GMVFLAG=1 Q
"RTN","GMVDCSAV",76,0)
 .S GMVDT=$$FMADD^XLFDT(GMVDT,"","","",1)
"RTN","GMVDCSAV",77,0)
 .Q
"RTN","GMVDCSAV",78,0)
 Q GMVDT
"RTN","GMVDCSAV",79,0)
 ;
"RTN","GMVDCSAV",80,0)
MSG(X) ; *** Add a line to the message array ***
"RTN","GMVDCSAV",81,0)
 S (GMVMSG,RESULT(-1))=1+$G(RESULT(-1),0)
"RTN","GMVDCSAV",82,0)
 S RESULT(GMVMSG)=X
"RTN","GMVDCSAV",83,0)
 I $P(X,":")="ERROR" S RESULT(0)="ERROR"
"RTN","GMVDCSAV",84,0)
 Q
"RTN","GMVDCSAV",85,0)
 ;
"RTN","GMVDCSAV",86,0)
FMERROR ;
"RTN","GMVDCSAV",87,0)
 I $O(^TMP("DIERR",$J,0))>0 D
"RTN","GMVDCSAV",88,0)
 . N GMVER1,GMVER2
"RTN","GMVDCSAV",89,0)
 . S GMVER1=0
"RTN","GMVDCSAV",90,0)
 . F  S GMVER1=$O(^TMP("DIERR",$J,GMVER1)) Q:GMVER1'>0  D
"RTN","GMVDCSAV",91,0)
 .. S GMVER2=0
"RTN","GMVDCSAV",92,0)
 .. F  S GMVER2=$O(^TMP("DIERR",$J,GMVER1,"TEXT",GMVER2)) Q:GMVER2'>0  D
"RTN","GMVDCSAV",93,0)
 ... D MSG("ERROR: "_$G(^TMP("DIERR",$J,GMVER1,"TEXT",GMVER2)))
"RTN","GMVDCSAV",94,0)
 ... Q
"RTN","GMVDCSAV",95,0)
 .. Q
"RTN","GMVDCSAV",96,0)
 . Q
"RTN","GMVDCSAV",97,0)
 D CLEAN^DILF
"RTN","GMVDCSAV",98,0)
 Q
"RTN","GMVDS0")
0^13^B23299046^B20439902
"RTN","GMVDS0",1,0)
GMVDS0 ;HIOFO/YH,FT-DISPLAY LATEST VITALS/MEASUREMENTS ;6/7/07
"RTN","GMVDS0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVDS0",3,0)
 ;
"RTN","GMVDS0",4,0)
 ; This routine uses the following IAs:
"RTN","GMVDS0",5,0)
 ;  #4290 - ^PXRMINDX global       (controlled)
"RTN","GMVDS0",6,0)
 ; #10061 - ^VADPT calls     (supported)
"RTN","GMVDS0",7,0)
 ; #10104 - ^XLFSTR calls    (supported)
"RTN","GMVDS0",8,0)
 ;
"RTN","GMVDS0",9,0)
EN1 ; ENTRY TO DISPLAY VITALS {called from GMVDS1}
"RTN","GMVDS0",10,0)
 N GAPICAL,GRADIAL,GBRACHI,OK
"RTN","GMVDS0",11,0)
 N GMVCLIO,GMVLOOP,GMVQLIST,GMVQNAME,GMVSUPOX
"RTN","GMVDS0",12,0)
 S GAPICAL=$O(^GMRD(120.52,"B","APICAL",0)),GRADIAL=$O(^GMRD(120.52,"B","RADIAL",0)),GBRACHI=$O(^GMRD(120.52,"B","BRACHIAL",0))
"RTN","GMVDS0",13,0)
 F GMRX=1:1:$L(GMRSTR,";") S X=$P(GMRSTR,";",GMRX) Q:'$D(^GMRD(120.51,"C",X))  S GMR(X)=$O(^GMRD(120.51,"C",X,"")),Y=$P($G(^GMRD(120.51,GMR(X),0)),"^") Q:Y=""
"RTN","GMVDS0",14,0)
 K GMRDT,GMRVWT,GMRVHT
"RTN","GMVDS0",15,0)
 S X=""
"RTN","GMVDS0",16,0)
 F  S X=$O(GMR(X)) Q:X=""  S GMRDAT=9999999,GMRDATS="" I GMR(X)'="" F  S GMRDAT=$O(^PXRMINDX(120.5,"PI",DFN,+GMR(X),GMRDAT),-1) Q:$S(GMRDAT'>0:1,GMRDATS>0:1,1:0)  D SETDATAR
"RTN","GMVDS0",17,0)
 I '($D(GMRDATA)\10) W !,"There are no results to report " G Q
"RTN","GMVDS0",18,0)
 F X="T","P","R","PO2","BP","HT","WT","CVP","CG","PN" I $D(GMRDATA(X)) S GMRVDT="",(GMRVDT(1),GMVD)=0 F  S GMVD=$O(GMRDATA(X,GMVD)) Q:GMVD'>0  D WRTDT S GMVD(1)=0 F  S GMVD(1)=$O(GMRDATA(X,GMVD,GMVD(1))) Q:$L(GMVD(1))'>0  D
"RTN","GMVDS0",19,0)
 . S GMRVX(0)=GMRDATA(X,GMVD,GMVD(1)) S GMRVX=X D EN1^GMVSAS0
"RTN","GMVDS0",20,0)
 . W ! W:GMRVDT(1)=0 $S(X="BP":"B/P",X="P":"Pulse",X="R":"Resp.",X="T":"Temp.",X="HT":"Ht.",X="CG":"Circ/Girth",X="WT":"Wt.",X="PO2":"Pulse Ox",X="PN":"Pain",1:X)_": "
"RTN","GMVDS0",21,0)
 . I GMRVDT(1)=0 W ?12,"("_GMRVDT_") " S GMRVDT(1)=1
"RTN","GMVDS0",22,0)
 . I X="T" W ?29,GMRVX(0)_" F  ("_$J(+GMRVX(0)-32*5/9,0,1)_" C)"
"RTN","GMVDS0",23,0)
 . I X="WT" W ?29,GMRVX(0)_" lb  ("_$J(GMRVX(0)/2.2,0,2)_" kg)" S GMRVWT=GMRVX(0)/2.2
"RTN","GMVDS0",24,0)
 . I X="HT" W ?29,$S(GMRVX(0)\12:GMRVX(0)\12_" ft ",1:"")_$S(GMRVX(0)#12:GMRVX(0)#12_" in",1:"")_" ("_$J(GMRVX(0)*2.54,0,2)_" cm)" S GMRVHT=(GMRVX(0)*2.54)/100
"RTN","GMVDS0",25,0)
 . I X="CG" W ?29,GMRVX(0)_" in ("_$J(+GMRVX(0)/.3937,0,2)_" cm)"
"RTN","GMVDS0",26,0)
 . I X="CVP" W ?29,GMRVX(0)_" cmH2O ("_$J(GMRVX(0)/1.36,0,1)_" mmHg)"
"RTN","GMVDS0",27,0)
 . I X="PO2" W ?29,GMRVX(0)_"% "
"RTN","GMVDS0",28,0)
 . I X="P"!(X="R")!(X="BP") W ?29,GMRVX(0)
"RTN","GMVDS0",29,0)
 . I X="PN" D
"RTN","GMVDS0",30,0)
 . . I "UNAVAILABLEPASSREFUSED"[$$UP^XLFSTR(GMRVX(0)) W ?9,GMRVX(0) Q
"RTN","GMVDS0",31,0)
 . . I GMRVX(0)=0 W ?29,GMRVX(0)_" - No pain " Q
"RTN","GMVDS0",32,0)
 . . I GMRVX(0)=99 W ?29,GMRVX(0)_" - Unable to respond " Q
"RTN","GMVDS0",33,0)
 . . I GMRVX(0)=10 W ?29,GMRVX(0)_" - Worst imaginable pain " Q
"RTN","GMVDS0",34,0)
 . . W ?29,GMRVX(0) Q
"RTN","GMVDS0",35,0)
 . W $S('$D(GMRVX(1)):"",'GMRVX(1):"",1:"*") K GMRVX
"RTN","GMVDS0",36,0)
 . D CHAR
"RTN","GMVDS0",37,0)
 . I X="WT",$G(GMRVWT)>0,$G(GMRVHT)>0 W !,"BMI: " S GMRVHT(1)=$J(GMRVWT/(GMRVHT*GMRVHT),0,0) W ?29,GMRVHT(1)_$S(GMRVHT(1)>27:"*",1:"")
"RTN","GMVDS0",38,0)
 . Q
"RTN","GMVDS0",39,0)
Q W !
"RTN","GMVDS0",40,0)
 K GMRVWT,GMRVHT,GMR,GMVD,GBP,GMRVARY,GMRVDA,GMRDATA,GMVDM,GLIN,GMRZZ Q:$D(GLOC)
"RTN","GMVDS0",41,0)
 K GMRVDT,GMROUT,DFN,%Y,GMRL,GMRDT,DIC,GMRDAT,GMRDATS,GMRSTR,GMRX,GMRVX,POP D KVAR^VADPT K VA
"RTN","GMVDS0",42,0)
 Q
"RTN","GMVDS0",43,0)
SETDATAR ;
"RTN","GMVDS0",44,0)
 S Y=0
"RTN","GMVDS0",45,0)
 F  S Y=$O(^PXRMINDX(120.5,"PI",DFN,GMR(X),GMRDAT,Y)) Q:$L(Y)'>0!GMRDATS  D
"RTN","GMVDS0",46,0)
 .I Y=+Y D
"RTN","GMVDS0",47,0)
 ..D F1205^GMVUTL(.GMVCLIO,Y)
"RTN","GMVDS0",48,0)
 .I Y'=+Y D
"RTN","GMVDS0",49,0)
 ..D CLIO^GMVUTL(.GMVCLIO,Y)
"RTN","GMVDS0",50,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVDS0",51,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVDS0",52,0)
 .S GMRL=GMVCLIO(0)
"RTN","GMVDS0",53,0)
 .S GMVLOOP=0,GMVQLIST=""
"RTN","GMVDS0",54,0)
 .F GMVLOOP=1:1 Q:$P(GMVCLIO(5),U,GMVLOOP)=""  D
"RTN","GMVDS0",55,0)
 ..S GMVQNAME=$$FIELD^GMVGETQL($P(GMVCLIO(5),U,GMVLOOP),1,"E")
"RTN","GMVDS0",56,0)
 ..I GMVQNAME=""!(GMVQNAME=-1) Q
"RTN","GMVDS0",57,0)
 ..S GMVQLIST=GMVQLIST_$S(GMVQLIST'="":",",1:"")_GMVQNAME
"RTN","GMVDS0",58,0)
 .S GMVSUPOX=$P(GMVCLIO(0),U,10) ;supplemental oxygen
"RTN","GMVDS0",59,0)
 .D SETNODE
"RTN","GMVDS0",60,0)
 .;D:X="BP"!(X="P") SETBP^GMVDS2
"RTN","GMVDS0",61,0)
 .Q
"RTN","GMVDS0",62,0)
 Q
"RTN","GMVDS0",63,0)
SETNODE ; {called from GMVDS2}
"RTN","GMVDS0",64,0)
 N G
"RTN","GMVDS0",65,0)
 S GMRL=$G(GMRL,"")
"RTN","GMVDS0",66,0)
 I X'="P" S G=$P(GMRL,"^",8) Q:"REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR(G)
"RTN","GMVDS0",67,0)
 I X="P" S OK=0,G=$P(GMRL,"^",8) D  Q:'OK
"RTN","GMVDS0",68,0)
 .I "REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR(G) Q
"RTN","GMVDS0",69,0)
 .I GMVCLIO(5)="" S OK=1 Q
"RTN","GMVDS0",70,0)
 .F GMVLOOP=1:1 Q:$P(GMVCLIO(5),U,GMVLOOP)=""!(OK=1)  D
"RTN","GMVDS0",71,0)
 ..I $P(GMVCLIO(5),U,GMVLOOP)=GAPICAL S OK=1 Q
"RTN","GMVDS0",72,0)
 ..I $P(GMVCLIO(5),U,GMVLOOP)=GBRACHI S OK=1 Q
"RTN","GMVDS0",73,0)
 ..I $P(GMVCLIO(5),U,GMVLOOP)=GRADIAL S OK=1
"RTN","GMVDS0",74,0)
 S GMRL1=$P(GMRL,"^") ;adding trailing zeros to time if necessary
"RTN","GMVDS0",75,0)
 S $P(GMRL1,".",2)=$P(GMRL1,".",2)_"0000"
"RTN","GMVDS0",76,0)
 S $P(GMRL1,".",2)=$E($P(GMRL1,".",2),1,4)
"RTN","GMVDS0",77,0)
 S $P(GMRL,"^")=GMRL1
"RTN","GMVDS0",78,0)
 K GMRL1
"RTN","GMVDS0",79,0)
 S GMRDATA(X,$P(GMRL,"^"),Y)=$P(GMRL,"^",8),GMRDATS=1
"RTN","GMVDS0",80,0)
 S GMRVARY(X,$P(GMRL,U,1),Y)=GMVQLIST
"RTN","GMVDS0",81,0)
 Q
"RTN","GMVDS0",82,0)
WRTDT ;
"RTN","GMVDS0",83,0)
 S GMRVDT=$E(GMVD,4,5)_"/"_$E(GMVD,6,7)_"/"_$E(GMVD,2,3)_"@"_$E($P(GMVD,".",2),1,2)_$S($E($P(GMVD,".",2),3,4)'="":":"_$E($P(GMVD,".",2),3,4),1:"")
"RTN","GMVDS0",84,0)
 Q
"RTN","GMVDS0",85,0)
CHAR ;
"RTN","GMVDS0",86,0)
 ;S GMRZZ=$$WRITECH^GMVCHAR(GMVD(1),.GMRVARY,5)
"RTN","GMVDS0",87,0)
 S GMRZZ=GMRVARY(X,GMVD,GMVD(1))
"RTN","GMVDS0",88,0)
 S:GMRZZ'=""&(X'="PO2") GMRZZ="("_GMRZZ_")"
"RTN","GMVDS0",89,0)
 I X="PO2",GMVSUPOX'="" S GMRVPO=GMVSUPOX W "with supplemental O2 "_$S(GMRVPO["l/min":$P(GMRVPO," l/min")_"L/min",1:"")_$S(GMRVPO["l/min":$P(GMRVPO," l/min",2),1:GMRVPO)_" " W:GMRZZ'="" !,?29,"- ",GMRZZ K GMRZZ Q
"RTN","GMVDS0",90,0)
 W:GMRZZ'="" GMRZZ K GMRZZ
"RTN","GMVDS0",91,0)
 Q
"RTN","GMVDS1")
0^14^B17287007^B17212354
"RTN","GMVDS1",1,0)
GMVDS1 ;HOIFO/YH,FT-CURRENT VITALS BY PATIENT OR LOCATION ;6/6/07
"RTN","GMVDS1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVDS1",3,0)
 ;
"RTN","GMVDS1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVDS1",5,0)
 ; #10039 - FILE 42 references     (supported)
"RTN","GMVDS1",6,0)
 ; #10040 - FILE 44 references     (supported)
"RTN","GMVDS1",7,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVDS1",8,0)
 ; #10090 - FILE 4 references      (supported)
"RTN","GMVDS1",9,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVDS1",10,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVDS1",11,0)
 ;
"RTN","GMVDS1",12,0)
EN1(RESULT,GMVDATA) ; [RPC entry point]
"RTN","GMVDS1",13,0)
 ; GMV LATEST VITALS FOR PATIENT & GMV LATEST VITALS BY LOCATION
"RTN","GMVDS1",14,0)
 ; DFN      - patient internal entry number
"RTN","GMVDS1",15,0)
 ; GMVDEV   - device name
"RTN","GMVDS1",16,0)
 ; GMVIEN   - device internal entry number
"RTN","GMVDS1",17,0)
 ; GMVPDT   - date/time to print the report
"RTN","GMVDS1",18,0)
 ; GMVWARD  - ward internal entry number
"RTN","GMVDS1",19,0)
 ; GMVHLOC  - hospital location internal entry number
"RTN","GMVDS1",20,0)
 ;
"RTN","GMVDS1",21,0)
 N DFN,GMVDEV,GMVIEN,GMVPDT,GMVWARD,GMVHLOC
"RTN","GMVDS1",22,0)
 S DFN=+$P(GMVDATA,U,1),GMVDEV=$P(GMVDATA,U,5),GMVIEN=+$P(GMVDATA,U,6),GMVPDT=$P(GMVDATA,U,7),GMVWARD=$P(GMVDATA,U,8),GMVHLOC=$P(GMVDATA,U,9)
"RTN","GMVDS1",23,0)
 S ZTIO=GMVDEV ;device
"RTN","GMVDS1",24,0)
 S ZTDTH=$S($G(GMVPDT)>0:GMVPDT,1:$$NOW^XLFDT()) ;date/time to print
"RTN","GMVDS1",25,0)
 S ZTRTN="EN2^GMVDS1"
"RTN","GMVDS1",26,0)
 S (ZTSAVE("DFN"),ZTSAVE("GMVWARD"),ZTSAVE("GMVHLOC"))=""
"RTN","GMVDS1",27,0)
 I DFN>0 S ZTDESC="Latest Vitals Display for a Patient"
"RTN","GMVDS1",28,0)
 I GMVWARD>0 S ZTDESC="Latest Vitals by Location"
"RTN","GMVDS1",29,0)
 D ^%ZTLOAD
"RTN","GMVDS1",30,0)
 S RESULT=$S($G(ZTSK)>0:"Report sent to device. Task #: "_ZTSK,1:"Unable to task the report.")
"RTN","GMVDS1",31,0)
 K ZTSK,ZTIO,ZTDTH,ZTSAVE,ZTDESC,ZTRTN
"RTN","GMVDS1",32,0)
 Q
"RTN","GMVDS1",33,0)
EN2 ; Start the report output
"RTN","GMVDS1",34,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","GMVDS1",35,0)
 S GMVEDB=$S(DFN>0:"P",1:"A") ;P is one patient, A is whole ward
"RTN","GMVDS1",36,0)
 S GMVWARD(1)=$S(GMVWARD>0:$P($G(^DIC(42,GMVWARD,0)),U,1),1:"") ;ward name
"RTN","GMVDS1",37,0)
 K ^TMP($J)
"RTN","GMVDS1",38,0)
 I $G(GMVEDB)="P" D
"RTN","GMVDS1",39,0)
 .D DEM^VADPT,INP^VADPT
"RTN","GMVDS1",40,0)
 .S GMRRMBD=$S(VAIN(5)'="":VAIN(5),1:"  BLANK") ;roombed
"RTN","GMVDS1",41,0)
 .S GMVNAME=$S(VADM(1)'="":VADM(1),1:"  BLANK") ;patient name
"RTN","GMVDS1",42,0)
 .S GMVWARD=$P(VAIN(4),"^") ;ward ien
"RTN","GMVDS1",43,0)
 .S GMVWARD(1)=$P(VAIN(4),"^",2) ;ward name
"RTN","GMVDS1",44,0)
 .D KVAR^VADPT K VA ;kill VADPT variables
"RTN","GMVDS1",45,0)
 .S ^TMP($J,GMRRMBD,GMVNAME,DFN)=""
"RTN","GMVDS1",46,0)
 E  D WARD
"RTN","GMVDS1",47,0)
AE ;
"RTN","GMVDS1",48,0)
 S (GMROUT,GMVPAGE)=0
"RTN","GMVDS1",49,0)
 S GMVDASH=$$REPEAT^XLFSTR("-",80) ;line of dashes
"RTN","GMVDS1",50,0)
 D NOW^%DTC
"RTN","GMVDS1",51,0)
 S Y=% X ^DD("DD") S GMRPDT=$P(Y,"@")_" ("_$P($P(Y,"@",2),":",1,2)_")"
"RTN","GMVDS1",52,0)
 S GMRSTR="T;P;R;BP;WT;HT;CVP;CG;PO2;PN"
"RTN","GMVDS1",53,0)
 S GLOC=1 ;<-might be dead code
"RTN","GMVDS1",54,0)
 U IO
"RTN","GMVDS1",55,0)
 D HDR
"RTN","GMVDS1",56,0)
 I $O(^TMP($J,""))="" W !,"THERE IS NO DATA FOR THIS REPORT" D Q1 Q
"RTN","GMVDS1",57,0)
 S GMRRMBD=""
"RTN","GMVDS1",58,0)
 F  S GMRRMBD=$O(^TMP($J,GMRRMBD)) Q:GMRRMBD=""!GMROUT  S GMVNAME="" F  S GMVNAME=$O(^TMP($J,GMRRMBD,GMVNAME)) Q:GMVNAME=""!GMROUT  F DFN=0:0 S DFN=$O(^TMP($J,GMRRMBD,GMVNAME,DFN)) Q:DFN'>0  D PRT Q:GMROUT
"RTN","GMVDS1",59,0)
Q1 ; Kill variables and quit
"RTN","GMVDS1",60,0)
 K ^TMP($J),DFN,GMRADM,GMRDA,GMVDASH,GMVEDB,GMVNAME,GMRNM,GMROUT,GMRPDT,GMVPAGE,GMRRMBD,GMRPR,GMRVDT,GMRVTDA,GMVWARD,GMRX,GMRSITE,GMRSP,GMRVX,GMVHLOC,POP,GMRDT,%,%T,GDT
"RTN","GMVDS1",61,0)
 K GSTRIN,GMRSTR,GMROUT,GMRVOERR,GMRVSTOP,GMRVSTRT,GLOC,GDATA
"RTN","GMVDS1",62,0)
 D KVAR^VADPT
"RTN","GMVDS1",63,0)
 D Q^GMVDS0
"RTN","GMVDS1",64,0)
 D ^%ZISC
"RTN","GMVDS1",65,0)
 Q
"RTN","GMVDS1",66,0)
HDR ; Report Header
"RTN","GMVDS1",67,0)
 W:$Y>0 @IOF
"RTN","GMVDS1",68,0)
 S GMVPAGE=GMVPAGE+1
"RTN","GMVDS1",69,0)
 I GMVEDB="A" W !,GMRPDT,?20,"VITALS REPORT FOR UNIT: "_GMVWARD(1) W:GMVHLOC>0 " - "_$$GET1^DIQ(4,+$$GET1^DIQ(44,+GMVHLOC,3,"I"),.01,"I")
"RTN","GMVDS1",70,0)
 I GMVEDB="P" W !,GMRPDT,?28,"LATEST VITALS REPORT"
"RTN","GMVDS1",71,0)
 W ?72,"PAGE ",GMVPAGE
"RTN","GMVDS1",72,0)
 W !,GMVDASH,!
"RTN","GMVDS1",73,0)
 Q
"RTN","GMVDS1",74,0)
PRT ; Body of report
"RTN","GMVDS1",75,0)
 D:IOSL<($Y+6)!($E(IOST)'="P") HDR Q:GMROUT
"RTN","GMVDS1",76,0)
 D DEM^VADPT K GMRDT
"RTN","GMVDS1",77,0)
 W !,$S(GMRRMBD'="  BLANK":$E(GMRRMBD,1,10),1:""),?12,$E(GMVNAME,1,20),?34,$E($P(VADM(2),U,2),8,11),!
"RTN","GMVDS1",78,0)
 D EN1^GMVDS0,Q2
"RTN","GMVDS1",79,0)
 Q
"RTN","GMVDS1",80,0)
Q2 ; Kill variables
"RTN","GMVDS1",81,0)
 K GMRLIN,GMRJ,GBP,GMR,GMRL,GMRDT,GMRDAT,GMRDATS,GMRI,GMRX,GMRY,GMRVX,GSITE,GQUAL
"RTN","GMVDS1",82,0)
 Q
"RTN","GMVDS1",83,0)
WARD ; Build TMP global for patients on ward
"RTN","GMVDS1",84,0)
 ; set ^TMP($J,roombed,patient name,DFN)=""
"RTN","GMVDS1",85,0)
 ; GMVWARD(1) is the NAME of FILE 42 entry
"RTN","GMVDS1",86,0)
 ; GMVRMBD(n) is an array of room numbers on the ward (e.g, GMVRMBD(200))
"RTN","GMVDS1",87,0)
 ; GMVEDB is a code for the type of sort
"RTN","GMVDS1",88,0)
 ;        A = all patients on a ward
"RTN","GMVDS1",89,0)
 ;        S = selected roombeds on a ward
"RTN","GMVDS1",90,0)
 ;        P = an individual patient
"RTN","GMVDS1",91,0)
 K ^TMP($J)
"RTN","GMVDS1",92,0)
 S DFN=0
"RTN","GMVDS1",93,0)
 F  S DFN=$O(^DPT("CN",GMVWARD(1),DFN)) Q:DFN=""  D
"RTN","GMVDS1",94,0)
 .D DEM^VADPT,INP^VADPT
"RTN","GMVDS1",95,0)
 .S GMVRMBD=$S(VAIN(5)'="":VAIN(5),1:"  BLANK") ;roombed
"RTN","GMVDS1",96,0)
 .S GMVNAME=$S(VADM(1)'="":VADM(1),1:"  BLANK")  ;patient name
"RTN","GMVDS1",97,0)
 .D KVAR^VADPT K VA
"RTN","GMVDS1",98,0)
 .S:$S("Aa"[GMVEDB:1,$D(GMVROOM($P(GMVRMBD,"-"))):1,1:0) ^TMP($J,GMVRMBD,GMVNAME,DFN)=""
"RTN","GMVDS1",99,0)
 .Q
"RTN","GMVDS1",100,0)
 Q
"RTN","GMVDS2")
0^15^B1905^B3421820
"RTN","GMVDS2",1,0)
GMVDS2 ;HOIFO/RM,YH,FT-VITAL SIGNS DISPLAY ;6/7/07
"RTN","GMVDS2",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVDS2",3,0)
 ;
"RTN","GMVDS2",4,0)
 ; This routine uses the following IAs:
"RTN","GMVDS2",5,0)
 ;  #4290 - ^PXRMINDX global     (controlled)
"RTN","GMVDS2",6,0)
 ; #10104 - ^XLFSTR calls        (supported)
"RTN","GMVDS2",7,0)
 ;
"RTN","GMVDS2",8,0)
 ;SETBP ; {called from GMVDS0}
"RTN","GMVDS2",9,0)
 ;S GDT=GMRDAT,GDATE=GMRDAT+.00000014
"RTN","GMVDS2",10,0)
 ;F  S GMRDAT=$O(^PXRMINDX(120.5,"PI",DFN,GMR(X),GMRDAT)) Q:GMRDAT'>0!(GMRDAT>GDATE)  S Y=0 F  S Y=$O(^PXRMINDX(120.5,"PI",DFN,GMR(X),GMRDAT,Y),-1) Q:$L(Y)'>0  D
"RTN","GMVDS2",11,0)
 ;.I Y=+Y D
"RTN","GMVDS2",12,0)
 ;..D F1205^GMVUTL(.GMVCLIO,Y)
"RTN","GMVDS2",13,0)
 ;.I Y'=+Y D
"RTN","GMVDS2",14,0)
 ;..D CLIO^GMVUTL(.GMVCLIO,Y)
"RTN","GMVDS2",15,0)
 ;.S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVDS2",16,0)
 ;.I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVDS2",17,0)
 ;.S GMRL=GMVCLIO(0)
"RTN","GMVDS2",18,0)
 ;.S GMVLOOP=0,GMVQLIST=""
"RTN","GMVDS2",19,0)
 ;.F GMVLOOP=1:1 Q:$P(GMVCLIO(5),U,GMVLOOP)=""  D
"RTN","GMVDS2",20,0)
 ;..S GMVQNAME=$$FIELD^GMVGETQL(GMVLOOP,1,"E")
"RTN","GMVDS2",21,0)
 ;..I GMVQNAME=""!(GMVQNAME=-1) Q
"RTN","GMVDS2",22,0)
 ;..S GMVQLIST=GMVQLIST_$S(GMVQLIST'="":",",1:"")_GMVQNAME
"RTN","GMVDS2",23,0)
 ;.D:X="BP" SETNODE^GMVDS0
"RTN","GMVDS2",24,0)
 ;.D:X="P" SETP
"RTN","GMVDS2",25,0)
 ;.Q
"RTN","GMVDS2",26,0)
 ;S GMRDAT=GDT K GDT,GDATE
"RTN","GMVDS2",27,0)
 ;Q
"RTN","GMVDS2",28,0)
 ;SETP ;DISPLAY MULTIPLE PULSE
"RTN","GMVDS2",29,0)
 ;S GMRL=GMVCLIO(0)
"RTN","GMVDS2",30,0)
 ;N GG S GG=$P(GMRL,"^",8),OK=0 D  Q:'OK
"RTN","GMVDS2",31,0)
 ;.I "REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR(GG) Q
"RTN","GMVDS2",32,0)
 ;.I GMVCLIO(5)="" S OK=1 Q
"RTN","GMVDS2",33,0)
 ;.I $P(GMVCLIO(5),U,GMVLOOP)=GAPICAL S OK=1 Q
"RTN","GMVDS2",34,0)
 ;.I $P(GMVCLIO(5),U,GMVLOOP)=GBRACHI S OK=1 Q
"RTN","GMVDS2",35,0)
 ;.I $P(GMVCLIO(5),U,GMVLOOP)=GRADIAL S OK=1
"RTN","GMVDS2",36,0)
 ;S GMRL1=$P(GMRL,"^") ;adding trailing zeros to time if necessary
"RTN","GMVDS2",37,0)
 ;S $P(GMRL1,".",2)=$P(GMRL1,".",2)_"0000"
"RTN","GMVDS2",38,0)
 ;S $P(GMRL1,".",2)=$E($P(GMRL1,".",2),1,4)
"RTN","GMVDS2",39,0)
 ;S $P(GMRL,"^")=GMRL1
"RTN","GMVDS2",40,0)
 ;K GMRL1
"RTN","GMVDS2",41,0)
 ;I GMRL'="" D
"RTN","GMVDS2",42,0)
 ;.S GMRDATA(X,$P(GMRL,"^"),Y)=$P(GMRL,"^",8),GMRDATS=1
"RTN","GMVDS2",43,0)
 ;.S GMRVARY(X,$P(GMRL,U,1),Y)=GMVQLIST
"RTN","GMVDS2",44,0)
 ;.Q
"RTN","GMVDS2",45,0)
 ;Q
"RTN","GMVER0")
0^16^B9089403^B9040069
"RTN","GMVER0",1,0)
GMVER0 ;HOIFO/FT-VITALS ENTERED IN ERROR FOR A PATIENT ;10/25/02  10:26
"RTN","GMVER0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVER0",3,0)
 ;
"RTN","GMVER0",4,0)
 ; This routine uses the following IAs:
"RTN","GMVER0",5,0)
 ; #10061 - ^VADPT calls        (supported)
"RTN","GMVER0",6,0)
 ; #10103 - ^XLFDT calls        (supported)
"RTN","GMVER0",7,0)
 ; #10104 - ^XLFSTR calls       (supported)
"RTN","GMVER0",8,0)
 ;
"RTN","GMVER0",9,0)
EN1(RESULT,GMVDATA) ; GMV ENTERED IN ERROR-PATIENT [RPC entry point]
"RTN","GMVER0",10,0)
 ; Queues a report to a printer
"RTN","GMVER0",11,0)
 ; GMVDATA=DFN^START DT^END DT^TYPE OF GRAPH^DEVICE^DEVICE IEN(#3.5)^
"RTN","GMVER0",12,0)
 ;         DATE/TIME TO PRINT REPORT
"RTN","GMVER0",13,0)
 ;
"RTN","GMVER0",14,0)
 N DFN,GMVBEG,GMVEND,GMVDEV,GMVIEN,GMVPDT
"RTN","GMVER0",15,0)
 S DFN=+$P(GMVDATA,"^",1),GMVBEG=$P(GMVDATA,"^",2),GMVEND=$P(GMVDATA,"^",3),GMVDEV=$P(GMVDATA,"^",5),GMVIEN=+$P(GMVDATA,"^",6),GMVPDT=$P(GMVDATA,"^",7)
"RTN","GMVER0",16,0)
 S ZTIO=GMVDEV ;device
"RTN","GMVER0",17,0)
 S ZTDTH=$S($G(GMVPDT)>0:GMVPDT,1:$$NOW^XLFDT()) ;date/time to print
"RTN","GMVER0",18,0)
 S (ZTSAVE("DFN"),ZTSAVE("GMVBEG"),ZTSAVE("GMVEND"))=""
"RTN","GMVER0",19,0)
 S ZTDESC="Entered in error vital/measurement report"
"RTN","GMVER0",20,0)
 S ZTRTN="START^GMVER0"
"RTN","GMVER0",21,0)
 D ^%ZTLOAD
"RTN","GMVER0",22,0)
 S RESULT=$S($G(ZTSK)>0:"Report sent to device. Task #: "_ZTSK,1:"Unable to task the report.")
"RTN","GMVER0",23,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","GMVER0",24,0)
 D ^%ZISC
"RTN","GMVER0",25,0)
 Q
"RTN","GMVER0",26,0)
START ; Start the report output
"RTN","GMVER0",27,0)
 U IO
"RTN","GMVER0",28,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","GMVER0",29,0)
 S GMVPAGE=0
"RTN","GMVER0",30,0)
 S GMVDASH=$$REPEAT^XLFSTR("-",80) ;line of dashes
"RTN","GMVER0",31,0)
 S GMVNOW=$$NOW^XLFDT() ;current date/time
"RTN","GMVER0",32,0)
 S GMVNOW=$$FMTE^XLFDT(GMVNOW)
"RTN","GMVER0",33,0)
 S GMVRANGE=$$FMTE^XLFDT(GMVBEG)_"-"_$$FMTE^XLFDT(GMVEND) ;date range in
"RTN","GMVER0",34,0)
 ; external format (for header)
"RTN","GMVER0",35,0)
 D DEM^VADPT ;get patient demographic data
"RTN","GMVER0",36,0)
 S GMVNAME=VADM(1) ;patient name
"RTN","GMVER0",37,0)
 S GMVSSN=$P(VADM(2),"^",2) ;patient ssn
"RTN","GMVER0",38,0)
 D EN1^GMVER1(.GMVARRAY,DFN,GMVBEG,GMVEND) ;get entered-in-error data
"RTN","GMVER0",39,0)
 D HEADER
"RTN","GMVER0",40,0)
 S GMVNONE=$G(^TMP($J,"ERRORS",0))
"RTN","GMVER0",41,0)
 I $L(GMVNONE)>0 W !,GMVNONE D KILL Q
"RTN","GMVER0",42,0)
 S GMVDATE=0
"RTN","GMVER0",43,0)
 F  S GMVDATE=$O(^TMP($J,"ERRORS",GMVDATE)) Q:'GMVDATE  D
"RTN","GMVER0",44,0)
 .S GMVITY=0
"RTN","GMVER0",45,0)
 .F  S GMVITY=$O(^TMP($J,"ERRORS",GMVDATE,GMVITY)) Q:'GMVITY  D
"RTN","GMVER0",46,0)
 ..S GMVDA=0
"RTN","GMVER0",47,0)
 ..F  S GMVDA=$O(^TMP($J,"ERRORS",GMVDATE,GMVITY,GMVDA)) Q:'GMVDA  D
"RTN","GMVER0",48,0)
 ...S GMVLOOP=0
"RTN","GMVER0",49,0)
 ...F  S GMVLOOP=$O(^TMP($J,"ERRORS",GMVDATE,GMVITY,GMVDA,GMVLOOP)) Q:'GMVLOOP  D
"RTN","GMVER0",50,0)
 ....S GMVNODE=^TMP($J,"ERRORS",GMVDATE,GMVITY,GMVDA,GMVLOOP)
"RTN","GMVER0",51,0)
 ....I $Y+6>IOSL D HEADER
"RTN","GMVER0",52,0)
 ....W !,GMVNODE
"RTN","GMVER0",53,0)
 ....I GMVLOOP=4 W !
"RTN","GMVER0",54,0)
 ....Q
"RTN","GMVER0",55,0)
 ...Q
"RTN","GMVER0",56,0)
 ..Q
"RTN","GMVER0",57,0)
 .Q
"RTN","GMVER0",58,0)
KILL ; Kill variables
"RTN","GMVER0",59,0)
 D KVAR^VADPT ;clean up VADPT variables
"RTN","GMVER0",60,0)
 K ^TMP($J,"ERRORS")
"RTN","GMVER0",61,0)
 K GMVDASH,GMVNAME,GMVNOW,GMVPAGE,GMVSSN,X,Y
"RTN","GMVER0",62,0)
 D ^%ZISC
"RTN","GMVER0",63,0)
 Q
"RTN","GMVER0",64,0)
HEADER ; Report header
"RTN","GMVER0",65,0)
 W:$Y>0 @IOF
"RTN","GMVER0",66,0)
 S GMVPAGE=GMVPAGE+1
"RTN","GMVER0",67,0)
 W !,GMVNOW,?22,"ENTERED IN ERROR VITAL/MEASUREMENT REPORT",?70,"PAGE: ",GMVPAGE
"RTN","GMVER0",68,0)
 W !?22,GMVRANGE
"RTN","GMVER0",69,0)
 W !?22,"Patient: ",GMVNAME,?$X+5,$E(GMVSSN,8,11)
"RTN","GMVER0",70,0)
 W !!,"Date Vit./Meas. taken",?58,"User who made error"
"RTN","GMVER0",71,0)
 W !,GMVDASH,!
"RTN","GMVER0",72,0)
 Q
"RTN","GMVGETC")
0^47^B3544134^n/a
"RTN","GMVGETC",1,0)
GMVGETC ;HOIFO/FT-GET CATEGORY INFORMATION ;2/26/07  15:32
"RTN","GMVGETC",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVGETC",3,0)
 ;
"RTN","GMVGETC",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETC",5,0)
 ; <None>
"RTN","GMVGETC",6,0)
 ;
"RTN","GMVGETC",7,0)
 ; This routine supports the following IAs:
"RTN","GMVGETC",8,0)
 ; #5050 - FIELD, GETIEN, VT entry points    (supported)
"RTN","GMVGETC",9,0)
 ;
"RTN","GMVGETC",10,0)
FIELD(GMVIEN,GMVFIELD,GMVFMT) ; Returns the FILE 120.53 value
"RTN","GMVGETC",11,0)
 ;  Input:   GMVIEN = File 120.53 internal entry number (required)
"RTN","GMVGETC",12,0)
 ;         GMVFIELD = field you want (required)
"RTN","GMVGETC",13,0)
 ;                    1 = Name (.01)
"RTN","GMVGETC",14,0)
 ;                    2 = VUID (99.99)
"RTN","GMVGETC",15,0)
 ;                    3 = Master Entry For VUID (99.98)
"RTN","GMVGETC",16,0)
 ;           GMVFMT = return internal or external value (optional)
"RTN","GMVGETC",17,0)
 ;                    I for Internal, E for External
"RTN","GMVGETC",18,0)
 ;                    default is E
"RTN","GMVGETC",19,0)
 ; Output: field value or -1 if there is an error
"RTN","GMVGETC",20,0)
 ;
"RTN","GMVGETC",21,0)
 I $G(GMVIEN)="" Q -1
"RTN","GMVGETC",22,0)
 I $G(GMVFIELD)="" Q -1
"RTN","GMVGETC",23,0)
 S GMVFMT=$G(GMVFMT)
"RTN","GMVGETC",24,0)
 S GMVFMT=$$UPPER^GMVGETVT(GMVFMT)
"RTN","GMVGETC",25,0)
 S GMVFMT=$S(GMVFMT="I":"I",1:"E")
"RTN","GMVGETC",26,0)
 I GMVFIELD=1 Q $$GET1^DIQ(120.53,+GMVIEN,.01,GMVFMT)
"RTN","GMVGETC",27,0)
 I GMVFIELD=2 Q $$GET1^DIQ(120.53,+GMVIEN,99.99,GMVFMT)
"RTN","GMVGETC",28,0)
 I GMVFIELD=3 Q $$GET1^DIQ(120.53,+GMVIEN,99.98,GMVFMT)
"RTN","GMVGETC",29,0)
 Q -1
"RTN","GMVGETC",30,0)
 ;
"RTN","GMVGETC",31,0)
GETIEN(GMVX,GMVY) ; Returns the qualifier IEN
"RTN","GMVGETC",32,0)
 ;  Input: GMVX - File 120.53 look up value (required)
"RTN","GMVGETC",33,0)
 ;         GMVY - index type (required)
"RTN","GMVGETC",34,0)
 ;                1 - Name (.01)
"RTN","GMVGETC",35,0)
 ;                2 - VUID (99.99)
"RTN","GMVGETC",36,0)
 ; Output: File 120.53 internal entry number,
"RTN","GMVGETC",37,0)
 ;         or null if not found,
"RTN","GMVGETC",38,0)
 ;         or -1 if there is an error
"RTN","GMVGETC",39,0)
 N GMVIEN
"RTN","GMVGETC",40,0)
 I $G(GMVX)="" Q -1
"RTN","GMVGETC",41,0)
 I $G(GMVY)="" Q -1
"RTN","GMVGETC",42,0)
 I GMVY=1 Q $O(^GMRD(120.53,"B",GMVX,0))
"RTN","GMVGETC",43,0)
 I GMVY=2 Q $O(^GMRD(120.53,"AVUID",GMVX,0))
"RTN","GMVGETC",44,0)
 Q -1
"RTN","GMVGETC",45,0)
 ;
"RTN","GMVGETC",46,0)
VT(RESULT,GMVIEN) ; Returns the vital types (field #1) values
"RTN","GMVGETC",47,0)
 ;  Input: RESULT = Array name to return data in (required)
"RTN","GMVGETC",48,0)
 ;         GMVIEN = File 120.53 internal entry number (required)
"RTN","GMVGETC",49,0)
 ; Output: RESULT(0)=piece1
"RTN","GMVGETC",50,0)
 ;         RESULT(n)=piece2^piece3
"RTN","GMVGETC",51,0)
 ;
"RTN","GMVGETC",52,0)
 ;         where piece1 = number of entries found or -1 if an error
"RTN","GMVGETC",53,0)
 ;               piece2 = FILE 120.51 entry number
"RTN","GMVGETC",54,0)
 ;               piece3 = FILE 120.51, Field .01 external value
"RTN","GMVGETC",55,0)
 ;                    n = a sequential number starting with 1
"RTN","GMVGETC",56,0)
 ;
"RTN","GMVGETC",57,0)
 N GMVCNT,GMVLOOP,GMVNODE,GMVVTE,GMVVTI
"RTN","GMVGETC",58,0)
 ; What if RESULT is not defined?
"RTN","GMVGETC",59,0)
 S (GMVCNT,GMVLOOP,RESULT(0))=0
"RTN","GMVGETC",60,0)
 I $G(GMVIEN)="" Q
"RTN","GMVGETC",61,0)
 F  S GMVLOOP=$O(^GMRD(120.53,GMVIEN,1,GMVLOOP)) Q:'GMVLOOP  D
"RTN","GMVGETC",62,0)
 .S GMVNODE=$G(^GMRD(120.53,GMVIEN,1,GMVLOOP,0))
"RTN","GMVGETC",63,0)
 .Q:GMVNODE=""
"RTN","GMVGETC",64,0)
 .S GMVVTI=$P(GMVNODE,U,1)
"RTN","GMVGETC",65,0)
 .Q:'GMVVTI
"RTN","GMVGETC",66,0)
 .S GMVVTE=$$FIELD^GMVGETVT(GMVVTI,1,"E")
"RTN","GMVGETC",67,0)
 .Q:GMVVTE=-1
"RTN","GMVGETC",68,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVGETC",69,0)
 .S RESULT(GMVCNT)=GMVVTI_U_GMVVTE
"RTN","GMVGETC",70,0)
 .Q
"RTN","GMVGETC",71,0)
 S RESULT(0)=GMVCNT
"RTN","GMVGETC",72,0)
 Q
"RTN","GMVGETC",73,0)
 ;
"RTN","GMVGETD")
0^17^B46740490^B12427237
"RTN","GMVGETD",1,0)
GMVGETD ;HOIFO/YH,FT-EXTRACTS WARD/ROOM-BED/PT AND PT VITALS ;5/10/07
"RTN","GMVGETD",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3,22,23**;Oct 31, 2002;Build 25
"RTN","GMVGETD",3,0)
 ;
"RTN","GMVGETD",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETD",5,0)
 ; #1380  - ^DG(405.4 references   (controlled)
"RTN","GMVGETD",6,0)
 ; #1377  - ^DIC(42 references     (controlled)
"RTN","GMVGETD",7,0)
 ; #4290  - ^PXRMINDX global       (controlled)
"RTN","GMVGETD",8,0)
 ; #10035 - FILE 2 references      (supported)
"RTN","GMVGETD",9,0)
 ; #10039 - FILE 42 references     (supported)
"RTN","GMVGETD",10,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVGETD",11,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVGETD",12,0)
 ;
"RTN","GMVGETD",13,0)
 ; This routine supports the following IAs:
"RTN","GMVGETD",14,0)
 ; #4416 - GMV EXTRACT REC RPC is called at GETVM  (private)
"RTN","GMVGETD",15,0)
 ; #4358 - GMV LATEST VM RPC is called at GETLAT (private)
"RTN","GMVGETD",16,0)
 ;
"RTN","GMVGETD",17,0)
GETVM(RESULT,GMRVDATA) ;GMV EXTRACT REC [RPC entry point]
"RTN","GMVGETD",18,0)
 ; Returns data particular patient and date/time range in RESULT
"RTN","GMVGETD",19,0)
 ; GMRVDATA = DFN^END DATE VITAL TAKEN^VITAL TYPE (OPTIONAL)^START DATE VITAL TAKEN
"RTN","GMVGETD",20,0)
 N DFN,GMVEND,GMVSTART,GMVTYPE
"RTN","GMVGETD",21,0)
 S DFN=+$P(GMRVDATA,U,1),GMVEND=+$P(GMRVDATA,U,2),GMVSTART=$P(GMRVDATA,U,4),GMVTYPE=$P(GMRVDATA,U,3)
"RTN","GMVGETD",22,0)
 K ^TMP($J,"GRPC")
"RTN","GMVGETD",23,0)
 S:GMVEND="" GMVEND=$$NOW^XLFDT()
"RTN","GMVGETD",24,0)
 I $P(GMVEND,".",2)'>0 S GMVEND=$P(GMVEND,".",1)_".235959"
"RTN","GMVGETD",25,0)
 I GMVSTART="" S GMVSTART=0
"RTN","GMVGETD",26,0)
 S:GMVTYPE'="" GMVTYPE(1)=$P(^GMRD(120.51,$O(^GMRD(120.51,"C",GMVTYPE,0)),0),"^")
"RTN","GMVGETD",27,0)
 D EN1^GMVGETD1
"RTN","GMVGETD",28,0)
 I '$D(^TMP($J,"GRPC")) S ^TMP($J,"GRPC",1)="0^NO "_$S(GMVTYPE'="":GMVTYPE(1),1:"VITALS/MEASUREMENTS ")_" ENTERED WITHIN THIS PERIOD"
"RTN","GMVGETD",29,0)
 S RESULT=$NA(^TMP($J,"GRPC"))
"RTN","GMVGETD",30,0)
 K GMRDT,GMRVARY,GMRVITY,GMRVX,GMRZZ
"RTN","GMVGETD",31,0)
 Q
"RTN","GMVGETD",32,0)
GETLAT(RESULT,GMRDFN) ;GMV LATEST VM [RPC entry point]
"RTN","GMVGETD",33,0)
 ; RETURNS THE LATEST VITALS/MEASUREMENTS FOR A GIVEN PATIENT(GMRDFN)
"RTN","GMVGETD",34,0)
 ; IN RESULT ARRAY.
"RTN","GMVGETD",35,0)
 K ^TMP($J,"GRPC") D EN1^GMVLAT0(GMRDFN)
"RTN","GMVGETD",36,0)
 S RESULT=$NA(^TMP($J,"GRPC"))
"RTN","GMVGETD",37,0)
 Q
"RTN","GMVGETD",38,0)
WARDLOC(RESULT,DUMMY) ;GMV WARD LOCATION [RPC entry point]
"RTN","GMVGETD",39,0)
 ;RETURNS MAS WARD LOCATIONS IN RESULT ARRAY
"RTN","GMVGETD",40,0)
 K ^TMP($J,"GWARD"),^TMP($J,"GMRV") N GMRWARD,GINDEX,GN,GMR
"RTN","GMVGETD",41,0)
 S DUMMY=$G(DUMMY)
"RTN","GMVGETD",42,0)
 S DUMMY=$$UP^XLFSTR(DUMMY)
"RTN","GMVGETD",43,0)
 S DUMMY=$S(DUMMY="P":"P",1:"A")
"RTN","GMVGETD",44,0)
 D LIST^DIC(42,"","","","*","","","","I '$$INACT42^GMVUT2(+Y)",,"^TMP($J,""GMRV"")")
"RTN","GMVGETD",45,0)
 S GINDEX=+$P($G(^TMP($J,"GMRV","DILIST",0)),"^")
"RTN","GMVGETD",46,0)
 I GINDEX>0 D
"RTN","GMVGETD",47,0)
 . S (GMR,GN)=0 F  S GN=$O(^TMP($J,"GMRV","DILIST",1,GN)) Q:GN'>0  D
"RTN","GMVGETD",48,0)
 . . S GMRWARD(1)=^TMP($J,"GMRV","DILIST",1,GN),GMRWARD=+^TMP($J,"GMRV","DILIST",2,GN)
"RTN","GMVGETD",49,0)
 . . I DUMMY="P" D  Q
"RTN","GMVGETD",50,0)
 . . . I $O(^DPT("CN",GMRWARD(1),0))>0 S GMR=GMR+1,^TMP($J,"GWARD",GMR)=GMRWARD_"^"_GMRWARD(1)_U_^DIC(42,GMRWARD,44)
"RTN","GMVGETD",51,0)
 . . I DUMMY="A" D
"RTN","GMVGETD",52,0)
 . . . S GMR=GMR+1,^TMP($J,"GWARD",GMR)=GMRWARD_"^"_GMRWARD(1)_U_^DIC(42,GMRWARD,44)
"RTN","GMVGETD",53,0)
 K ^TMP($J,"GMRV") S RESULT=$NA(^TMP($J,"GWARD"))
"RTN","GMVGETD",54,0)
 Q
"RTN","GMVGETD",55,0)
WARDPT(RESULT,GMRWARD) ;GMV WARD PT [RPC entry point]
"RTN","GMVGETD",56,0)
 ;RETURNS A LIST OF PATIENTS ADMITTED TO A GIVEN MAS WARD(GMRWARD) IN RESULT ARRAY.
"RTN","GMVGETD",57,0)
 Q:'$D(^DPT("CN",GMRWARD))
"RTN","GMVGETD",58,0)
 N OUT,GN,DFN,DFN1,GMVPAT
"RTN","GMVGETD",59,0)
 K ^TMP($J,"GMRPT")
"RTN","GMVGETD",60,0)
 S (GN,DFN)=0 F  S DFN=$O(^DPT("CN",GMRWARD,DFN)) Q:DFN'>0  D
"RTN","GMVGETD",61,0)
 . I $D(^DPT(DFN,0)) D
"RTN","GMVGETD",62,0)
 . . S GMVPAT=""
"RTN","GMVGETD",63,0)
 . . D PTINFO^GMVUTL3(.GMVPAT,DFN)
"RTN","GMVGETD",64,0)
 . . S OUT($P(^DPT(DFN,0),"^"),DFN)=DFN_"^"_$P(^DPT(DFN,0),"^")_"^"_GMVPAT
"RTN","GMVGETD",65,0)
 I '$D(OUT) Q
"RTN","GMVGETD",66,0)
 S DFN=""
"RTN","GMVGETD",67,0)
 F  S DFN=$O(OUT(DFN)) Q:DFN=""  D
"RTN","GMVGETD",68,0)
 .S DFN1=0
"RTN","GMVGETD",69,0)
 .F  S DFN1=$O(OUT(DFN,DFN1)) Q:'DFN1  D
"RTN","GMVGETD",70,0)
 ..S GN=GN+1,^TMP($J,"GMRPT",GN)=OUT(DFN,DFN1)
"RTN","GMVGETD",71,0)
 ..Q
"RTN","GMVGETD",72,0)
 .Q
"RTN","GMVGETD",73,0)
 S RESULT=$NA(^TMP($J,"GMRPT"))
"RTN","GMVGETD",74,0)
 Q
"RTN","GMVGETD",75,0)
ROOMBED(RESULT,GMRWARD) ;GMV ROOM/BED [RPC entry point]
"RTN","GMVGETD",76,0)
 ;RETURNS A LIST OF ROOMS/BEDS FOR A GIVEN MAS WARD(GMRWARD) IN RESULT ARRAY.
"RTN","GMVGETD",77,0)
 Q:'$D(^DIC(42,"B",GMRWARD))
"RTN","GMVGETD",78,0)
 N GN,GROOM,GWARD,GMVTMP K ^TMP($J,"GROOM")
"RTN","GMVGETD",79,0)
 S (GN,GROOM)=0,GWARD=$O(^DIC(42,"B",GMRWARD,0)) I GWARD'>0 S ^TMP($J,"GROOM",1)="NO ROOM" G QUIT
"RTN","GMVGETD",80,0)
 F  S GROOM=$O(^DG(405.4,"W",GWARD,GROOM)) Q:GROOM'>0  I $D(^DG(405.4,GROOM)) D 
"RTN","GMVGETD",81,0)
 . S GMVTMP($P($P(^DG(405.4,GROOM,0),"^"),"-",1))=GROOM
"RTN","GMVGETD",82,0)
 . ;S GN=GN+1,^TMP($J,"GROOM",GN)=GROOM_"^"_$P(^DG(405.4,GROOM,0),"^")
"RTN","GMVGETD",83,0)
 . Q
"RTN","GMVGETD",84,0)
 S GROOM="",GN=0
"RTN","GMVGETD",85,0)
 F  S GROOM=$O(GMVTMP(GROOM)) Q:GROOM=""  D
"RTN","GMVGETD",86,0)
 . S GN=GN+1,^TMP($J,"GROOM",GN)=GMVTMP(GROOM)_"^"_GROOM
"RTN","GMVGETD",87,0)
 . Q
"RTN","GMVGETD",88,0)
QUIT S RESULT=$NA(^TMP($J,"GROOM"))
"RTN","GMVGETD",89,0)
 Q
"RTN","GMVGETD",90,0)
CLOSEST(RESULT,GMVDFN,GMVDT,GMVT,GMVFLAG) ; GMV CLOSEST READING [RPC entry point]
"RTN","GMVGETD",91,0)
 ; Get nearest reading to date(/time) provided
"RTN","GMVGETD",92,0)
 ;  Input:  GMVDFN - DFN (required)
"RTN","GMVGETD",93,0)
 ;           GMVDT - FileMan date/time (optional)
"RTN","GMVGETD",94,0)
 ;                   Default is NOW
"RTN","GMVGETD",95,0)
 ;            GMVT - Vital Type abbreviation, FILE 120.51, Field 1 (required)
"RTN","GMVGETD",96,0)
 ;         GMVFLAG - Where to look (optional)
"RTN","GMVGETD",97,0)
 ;                   0 = either before or after GMVDT  (default)
"RTN","GMVGETD",98,0)
 ;                   1 = before GMVDT
"RTN","GMVGETD",99,0)
 ;                   2 = after GMVDT
"RTN","GMVGETD",100,0)
 ; Output: RESULT - piece1^piece2
"RTN","GMVGETD",101,0)
 ;          where piece1 = date/time of reading (FileMan internal format)
"RTN","GMVGETD",102,0)
 ;                piece2 = reading
"RTN","GMVGETD",103,0)
 ; If no records found piece 1 = -2
"RTN","GMVGETD",104,0)
 ;                 and piece 2 = message text                     
"RTN","GMVGETD",105,0)
 ; If an error was encountered piece1 = -1
"RTN","GMVGETD",106,0)
 ;                         and piece2 = error message
"RTN","GMVGETD",107,0)
 ;
"RTN","GMVGETD",108,0)
 N GMVADIFF,GMVADT,GMVAVAL,GMVBDIFF,GMVBDT,GMVBVAL,GMVDATA,GMVTI
"RTN","GMVGETD",109,0)
 S GMVDFN=+$G(GMVDFN),GMVDT=+$G(GMVDT),GMVT=$G(GMVT),GMVFLAG=+$G(GMVFLAG)
"RTN","GMVGETD",110,0)
 S GMVFLAG=$S(GMVFLAG=2:2,GMVFLAG=1:1,1:0)
"RTN","GMVGETD",111,0)
 I 'GMVDFN S RESULT="-1^DFN not defined" Q
"RTN","GMVGETD",112,0)
 I '$D(^PXRMINDX(120.5,"PI",GMVDFN)) S RESULT="-2^Patient has no Vitals data on file" Q
"RTN","GMVGETD",113,0)
 I 'GMVDT S GMVDT=$$NOW^XLFDT()
"RTN","GMVGETD",114,0)
 I GMVT="" S RESULT="-1^Vital Type not defined" Q
"RTN","GMVGETD",115,0)
 S GMVTI=$$GETIEN^GMVGETVT(GMVT,2)
"RTN","GMVGETD",116,0)
 I 'GMVTI S RESULT="-1^Vital Type not found" Q
"RTN","GMVGETD",117,0)
 I '$D(^PXRMINDX(120.5,"PI",GMVDFN,GMVTI)) S RESULT="-2^Patient has no data on file for this type" Q
"RTN","GMVGETD",118,0)
 S (GMVADT,GMVAVAL,GMVBDT,GMVBVAL,GMVDATA)=""
"RTN","GMVGETD",119,0)
 I GMVFLAG=0!(GMVFLAG=1) D
"RTN","GMVGETD",120,0)
 .S GMVDATA=$$FIND(GMVDFN,GMVTI,GMVDT,0,-1)
"RTN","GMVGETD",121,0)
 .S GMVBDT=$P(GMVDATA,U,1),GMVBVAL=$P(GMVDATA,U,2)
"RTN","GMVGETD",122,0)
 S GMVDATA=""
"RTN","GMVGETD",123,0)
 I GMVFLAG=0!(GMVFLAG=2) D
"RTN","GMVGETD",124,0)
 .S GMVDATA=$$FIND(GMVDFN,GMVTI,GMVDT,0,1)
"RTN","GMVGETD",125,0)
 .S GMVADT=$P(GMVDATA,U,1),GMVAVAL=$P(GMVDATA,U,2)
"RTN","GMVGETD",126,0)
 I GMVFLAG=1 D
"RTN","GMVGETD",127,0)
 .I GMVBDT'>0 S RESULT="-2^Before date not found" Q
"RTN","GMVGETD",128,0)
 .I GMVBVAL="" S RESULT="-2^Before value not found" Q
"RTN","GMVGETD",129,0)
 .S RESULT=GMVBDT_U_GMVBVAL
"RTN","GMVGETD",130,0)
 I GMVFLAG=2 D
"RTN","GMVGETD",131,0)
 .I GMVADT'>0 S RESULT="-2^After date not found" Q
"RTN","GMVGETD",132,0)
 .I GMVAVAL="" S RESULT="-2^After value not found" Q
"RTN","GMVGETD",133,0)
 .S RESULT=GMVADT_U_GMVAVAL
"RTN","GMVGETD",134,0)
 I GMVFLAG=0 D
"RTN","GMVGETD",135,0)
 .I GMVADT'>0,GMVBDT'>0 D  Q
"RTN","GMVGETD",136,0)
 ..S RESULT="-2^No records found"
"RTN","GMVGETD",137,0)
 .I GMVADT'>0,GMVBDT>0 D  Q
"RTN","GMVGETD",138,0)
 ..S:GMVBVAL]"" RESULT=GMVBDT_U_GMVBVAL
"RTN","GMVGETD",139,0)
 ..S:GMVBVAL="" RESULT="-2^No records found"
"RTN","GMVGETD",140,0)
 .I GMVADT>0,GMVBDT'>0 D  Q
"RTN","GMVGETD",141,0)
 ..S:GMVAVAL]"" RESULT=GMVADT_U_GMVAVAL
"RTN","GMVGETD",142,0)
 ..S:GMVAVAL="" RESULT="-2^No records found"
"RTN","GMVGETD",143,0)
 .I GMVADT>0,GMVBDT>0 D
"RTN","GMVGETD",144,0)
 ..S GMVBDIFF=+$$FMDIFF^XLFDT(GMVDT,GMVBDT,2)
"RTN","GMVGETD",145,0)
 ..S GMVADIFF=+$$FMDIFF^XLFDT(GMVADT,GMVDT,2)
"RTN","GMVGETD",146,0)
 ..I GMVBDIFF<GMVADIFF S RESULT=GMVBDT_U_GMVBVAL
"RTN","GMVGETD",147,0)
 ..I GMVADIFF<GMVBDIFF S RESULT=GMVADT_U_GMVAVAL
"RTN","GMVGETD",148,0)
 ..I GMVADIFF=GMVBDIFF S RESULT=GMVADT_U_GMVAVAL
"RTN","GMVGETD",149,0)
 Q
"RTN","GMVGETD",150,0)
FIND(GMVDFN,GMVTI,GMVSDT,GMVX,GMVDIR) ; Get nearest record from GMVSDT date/time
"RTN","GMVGETD",151,0)
 ;  Input:  GMVDFN - DFN (required)
"RTN","GMVGETD",152,0)
 ;           GMVTI - Vital Type (120.51) IEN (required)
"RTN","GMVGETD",153,0)
 ;          GMVSDT - FileMan date/time (optional)
"RTN","GMVGETD",154,0)
 ;                   Default is NOW
"RTN","GMVGETD",155,0)
 ;            GMVX - Return numeric values only or all values including
"RTN","GMVGETD",156,0)
 ;                   text (optional)
"RTN","GMVGETD",157,0)
 ;                   0 = numeric values only (default)
"RTN","GMVGETD",158,0)
 ;                   1 = all values including text
"RTN","GMVGETD",159,0)
 ;          GMVDIR - direction of search (required)
"RTN","GMVGETD",160,0)
 ;                   -1 = look before GMVSDT
"RTN","GMVGETD",161,0)
 ;                    1 = look after GMVSDT
"RTN","GMVGETD",162,0)
 ; Output:    GMVY - piece1^piece2
"RTN","GMVGETD",163,0)
 ;                   where piece1 = date/time of reading (FileMan internal format)
"RTN","GMVGETD",164,0)
 ;                piece2 = reading
"RTN","GMVGETD",165,0)
 ; If an error was encountered piece1 = -1
"RTN","GMVGETD",166,0)
 ;                         and piece2 = error message
"RTN","GMVGETD",167,0)
 ;
"RTN","GMVGETD",168,0)
 N GMVARR,GMVFLAG,GMVIEN,GMVY
"RTN","GMVGETD",169,0)
 S GMVDFN=+$G(GMVDFN),GMVTI=+$G(GMVTI),GMVSDT=+$G(GMVSDT),GMVX=+$G(GMVX),GMVDIR=$G(GMVDIR)
"RTN","GMVGETD",170,0)
 S GMVDIR=$S(GMVDIR=-1:-1,GMVDIR=1:1,1:"")
"RTN","GMVGETD",171,0)
 I GMVDIR="" Q "-1^Direction of search not defined"
"RTN","GMVGETD",172,0)
 I 'GMVTI Q "-1^Vital Type not defined"
"RTN","GMVGETD",173,0)
 S GMVX=$S(GMVX=1:1,1:0)
"RTN","GMVGETD",174,0)
 I 'GMVDFN Q "-1^Patient not defined"
"RTN","GMVGETD",175,0)
 I '$D(^PXRMINDX(120.5,"PI",GMVDFN)) Q "-1^Patient has no Vitals data on file"
"RTN","GMVGETD",176,0)
 I 'GMVSDT S GMVSDT=$$NOW^XLFDT()
"RTN","GMVGETD",177,0)
 S (GMVFLAG,GMVIEN)=0,GMVY=""
"RTN","GMVGETD",178,0)
 F  S GMVSDT=$O(^PXRMINDX(120.5,"PI",GMVDFN,GMVTI,GMVSDT),GMVDIR) Q:'GMVSDT!(GMVFLAG)  D
"RTN","GMVGETD",179,0)
 .S GMVIEN=0
"RTN","GMVGETD",180,0)
 .F  S GMVIEN=$O(^PXRMINDX(120.5,"PI",GMVDFN,GMVTI,GMVSDT,GMVIEN)) Q:$L(GMVIEN)'>0!(GMVFLAG)  D
"RTN","GMVGETD",181,0)
 ..I GMVIEN=+GMVIEN D
"RTN","GMVGETD",182,0)
 ...D F1205^GMVUTL(.GMVARR,GMVIEN,0)
"RTN","GMVGETD",183,0)
 ..I GMVIEN'=+GMVIEN D
"RTN","GMVGETD",184,0)
 ...D CLIO^GMVUTL(.GMVARR,GMVIEN)
"RTN","GMVGETD",185,0)
 ..S GMVARR(0)=$G(GMVARR(0))
"RTN","GMVGETD",186,0)
 ..Q:$P(GMVARR(0),U,8)=""
"RTN","GMVGETD",187,0)
 ..Q:$P(GMVARR(0),U,1)'>0
"RTN","GMVGETD",188,0)
 ..I GMVX=1 D
"RTN","GMVGETD",189,0)
 ...S GMVY=$P(GMVARR(0),U,1)_U_$P(GMVARR(0),U,8),GMVFLAG=1
"RTN","GMVGETD",190,0)
 ..I 'GMVX D
"RTN","GMVGETD",191,0)
 ...I "UNAVAILABLEPASSREFUSED"[$$UP^XLFSTR($P(GMVARR(0),U,8)) Q
"RTN","GMVGETD",192,0)
 ...S GMVY=$P(GMVARR(0),U,1)_U_$P(GMVARR(0),U,8),GMVFLAG=1
"RTN","GMVGETD",193,0)
 I GMVY="" S GMVY="-1^No record found"
"RTN","GMVGETD",194,0)
 Q GMVY
"RTN","GMVGETD",195,0)
 ;
"RTN","GMVGETD1")
0^18^B4725749^B3929660
"RTN","GMVGETD1",1,0)
GMVGETD1 ;HOIFO/YH-EXTRACT VITALS/MEASUREMENT RECORDS FOR A GIVEN DATE ;5/10/07
"RTN","GMVGETD1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVGETD1",3,0)
 ;
"RTN","GMVGETD1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETD1",5,0)
 ;  #4290 - ^PXRMINDX global     (controlled)
"RTN","GMVGETD1",6,0)
 ;
"RTN","GMVGETD1",7,0)
EN1 ;CALLED FROM GMVGETD ENTRY POINT GETVM 
"RTN","GMVGETD1",8,0)
 K ^TMP($J,"GMRV")
"RTN","GMVGETD1",9,0)
 N GJ,GMRDATE,GMRVDA,GMRVTY,GMVCLIO,GMVENTRY
"RTN","GMVGETD1",10,0)
 F GMRVTY="T","P","R","BP","HT","WT","CVP","CG","PO2","PN"  S GMRVITY=$O(^GMRD(120.51,"C",GMRVTY,0)) I GMRVITY>0 D SETAR
"RTN","GMVGETD1",11,0)
 I $O(^TMP($J,"GMRV",0))'>0 K ^TMP($J,"GMRV") Q
"RTN","GMVGETD1",12,0)
 K ^TMP($J,"GRPC")
"RTN","GMVGETD1",13,0)
 S GJ=0,GMRDATE=0
"RTN","GMVGETD1",14,0)
 F  S GMRDATE=$O(^TMP($J,"GMRV",GMRDATE)) Q:GMRDATE'>0  D PRT
"RTN","GMVGETD1",15,0)
QT ; 
"RTN","GMVGETD1",16,0)
 K ^TMP($J,"GMRV")
"RTN","GMVGETD1",17,0)
 Q
"RTN","GMVGETD1",18,0)
SETAR ;
"RTN","GMVGETD1",19,0)
 I GMVTYPE'="",GMVTYPE'=GMRVTY Q
"RTN","GMVGETD1",20,0)
 S GMRDT=GMVSTART-.000001
"RTN","GMVGETD1",21,0)
 F  S GMRDT=$O(^PXRMINDX(120.5,"PI",DFN,GMRVITY,GMRDT)) Q:(GMRDT'>0)!(GMRDT>GMVEND)  D SETND
"RTN","GMVGETD1",22,0)
 Q
"RTN","GMVGETD1",23,0)
SETND ;
"RTN","GMVGETD1",24,0)
 S GMRVDA=0
"RTN","GMVGETD1",25,0)
 F  S GMRVDA=$O(^PXRMINDX(120.5,"PI",DFN,GMRVITY,GMRDT,GMRVDA)) Q:$L(GMRVDA)'>0  D
"RTN","GMVGETD1",26,0)
 .K GMVCLIO
"RTN","GMVGETD1",27,0)
 .I GMRVDA=+GMRVDA D
"RTN","GMVGETD1",28,0)
 ..D F1205^GMVUTL(.GMVCLIO,GMRVDA)
"RTN","GMVGETD1",29,0)
 .I GMRVDA'=+GMRVDA D
"RTN","GMVGETD1",30,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GMRVDA)
"RTN","GMVGETD1",31,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVGETD1",32,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVGETD1",33,0)
 .S GMVENTRY=GMVCLIO(0)_"|"_GMVCLIO(5)
"RTN","GMVGETD1",34,0)
 .D SETUT
"RTN","GMVGETD1",35,0)
 .Q
"RTN","GMVGETD1",36,0)
 Q
"RTN","GMVGETD1",37,0)
SETUT ;
"RTN","GMVGETD1",38,0)
 S ^TMP($J,"GMRV",+$E(GMRDT,1,12),GMRVTY,GMRVDA)=GMVENTRY
"RTN","GMVGETD1",39,0)
 Q
"RTN","GMVGETD1",40,0)
PRT ;SAVE V/M BY DATE/TIME
"RTN","GMVGETD1",41,0)
 F GMRVTY="T","P","R","BP","HT","WT","CVP","CG","PO2","PN" I $D(^TMP($J,"GMRV",GMRDATE,GMRVTY)) S GMRVDA=0 F  S GMRVDA=$O(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA)) Q:$L(GMRVDA)'>0  D SETLN^GMVGETD2
"RTN","GMVGETD1",42,0)
 Q
"RTN","GMVGETD2")
0^19^B21667822^B21008972
"RTN","GMVGETD2",1,0)
GMVGETD2 ;HOIFO/YH-EXTRACT VITALS/MEASUREMENT RECORDS FOR A GIVEN DATE (CONT.) ;12/9/02  14:03
"RTN","GMVGETD2",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,23**;Oct 31, 2002;Build 25
"RTN","GMVGETD2",3,0)
 ;
"RTN","GMVGETD2",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETD2",5,0)
 ; <None>
"RTN","GMVGETD2",6,0)
 ;
"RTN","GMVGETD2",7,0)
SETLN ;CALLED BY GMVGETD1
"RTN","GMVGETD2",8,0)
 N GMRDAT,GMVLOOP,GMVQNAME,GMVUSER,X,Y
"RTN","GMVGETD2",9,0)
 S GJ=GJ+1,GMRDAT=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",1),^TMP($J,"GRPC",GJ)=GMRVDA_"^"_$E(GMRDATE,4,5)_"/"_$E(GMRDATE,6,7)_"/"_$E(GMRDATE,2,3)
"RTN","GMVGETD2",10,0)
 S GMVUSER=$$PERSON^GMVUTL1(+$P(GMRDAT,U,6)) ;user name
"RTN","GMVGETD2",11,0)
 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"@"_$E($P(GMRDATE,".",2)_"000000",1,2)_":"_$E($P(GMRDATE,".",2)_"000000",3,4)_"   "
"RTN","GMVGETD2",12,0)
 S GMRVTY(1)=$S(GMRVTY="T":"T: ",GMRVTY="P":"P: ",GMRVTY="R":"R: ",GMRVTY="BP":"B/P: ",GMRVTY="WT":"Wt: ",GMRVTY="HT":"Ht: ",GMRVTY="CG":"Circumference/Girth: ",GMRVTY="CVP":"Central Venous Pressure: ",GMRVTY="PO2":"Pulse Oximetry: ",1:"")
"RTN","GMVGETD2",13,0)
 I GMRVTY(1)="" S GMRVTY(1)=$S(GMRVTY="PN":"Pain: ",1:"")
"RTN","GMVGETD2",14,0)
 S GMRVTY(1)=GMRVTY(1)_"  "
"RTN","GMVGETD2",15,0)
 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVTY(1)
"RTN","GMVGETD2",16,0)
 I GMRVTY="PN" D  Q
"RTN","GMVGETD2",17,0)
 . S ^TMP($J,"GRPC",GJ)=^(GJ)_$P(GMRDAT,"^",8)_"  "_$S(+$P(GMRDAT,"^",8)=99:"Unable to respond",+$P(GMRDAT,"^",8)=10:"Worst imaginable pain",$P(GMRDAT,"^",8)="0":"No pain",1:"")_"  _"_GMVUSER
"RTN","GMVGETD2",18,0)
 I "PRBPCVPCGPO2"[GMRVTY S GMRVX=GMRVTY,GMRVX(0)=$P(GMRDAT,"^",8) D
"RTN","GMVGETD2",19,0)
 . I '(GMRVX(0)<0!(GMRVX(0)>0)!($E(GMRVX(0))="0")) S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_" " Q
"RTN","GMVGETD2",20,0)
 . D EN1^GMVSAS0
"RTN","GMVGETD2",21,0)
 . S Z=$S(GMRVTY="CG":$J($P(GMRDAT,"^",8),0,2),GMRVTY="CVP":$J($P(GMRDAT,"^",8),0,1),GMRVTY'="BP":$J($P(GMRDAT,"^",8),3,0),1:$P(GMRDAT,"^",8)) D:GMRVTY'="BP" BLNK
"RTN","GMVGETD2",22,0)
 . S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_Z_$S('$D(GMRVX(1)):" ",'GMRVX(1):"",1:"*")
"RTN","GMVGETD2",23,0)
 . I GMRVTY="CG" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" in ("_$J(Z/.3937,0,2)_" cm)"
"RTN","GMVGETD2",24,0)
 . I GMRVTY="CVP" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" cmH2O ("_$J(Z/1.36,0,1)_" mmHg)"
"RTN","GMVGETD2",25,0)
 . I GMRVTY="PO2" D
"RTN","GMVGETD2",26,0)
 . . S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"%"
"RTN","GMVGETD2",27,0)
 . . I $P(GMRDAT,"^",10)["%"!($P(GMRDAT,"^",10)[" l/min") D
"RTN","GMVGETD2",28,0)
 . . . S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" with supplemental O2"
"RTN","GMVGETD2",29,0)
 . . . N GMV S GMV=$P(GMRDAT,"^",10) I GMV[" l/min" S GMV=$P(GMV," l/min")_"L/min"_$P(GMV," l/min",2)
"RTN","GMVGETD2",30,0)
 . . . S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" "_GMV
"RTN","GMVGETD2",31,0)
 I GMRVTY="T" S X=$P(GMRDAT,"^",8) D
"RTN","GMVGETD2",32,0)
 . I X'>0 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_X Q
"RTN","GMVGETD2",33,0)
 . S GMRVX=GMRVTY,GMRVX(0)=X D EN1^GMVSAS0
"RTN","GMVGETD2",34,0)
 . D EN1^GMVUTL S:'Y Y="" S Z=$J(X,5,1) D BLNK S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_Z_" F " S Z=$J(Y,4,1) D BLNK S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"("_Z_" C)"_$S('$D(GMRVX(1)):" ",'GMRVX(1):"",1:"*")
"RTN","GMVGETD2",35,0)
 I GMRVTY="HT" S X=$P(GMRDAT,"^",8) D
"RTN","GMVGETD2",36,0)
 . I X'>0 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_X Q
"RTN","GMVGETD2",37,0)
 . D EN2^GMVUTL S:'Y Y="" S Z=$J(X,5,2) D BLNK S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_Z_" in " S Z=$J(Y,5,2) D BLNK S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"("_Z_" cm)"
"RTN","GMVGETD2",38,0)
 I GMRVTY="WT" S X=$P(GMRDAT,"^",8) D
"RTN","GMVGETD2",39,0)
 . I X'>0 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_X Q
"RTN","GMVGETD2",40,0)
 . D EN3^GMVUTL S:'Y Y="" S Z=$J(X,7,2) D BLNK S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_Z_" lb " S Z=$J(Y,6,2) D BLNK S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"("_Z_" kg)"
"RTN","GMVGETD2",41,0)
 I (+$P(GMRDAT,"^",8)'>0)&($P(GMRDAT,"^",8)'="0") D  Q
"RTN","GMVGETD2",42,0)
 .S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"  _"_GMVUSER
"RTN","GMVGETD2",43,0)
 .Q
"RTN","GMVGETD2",44,0)
 S GMRVITY=+$P(GMRDAT,"^",3)
"RTN","GMVGETD2",45,0)
 K GMRVARY
"RTN","GMVGETD2",46,0)
 S GMRZZ=""
"RTN","GMVGETD2",47,0)
 S GMRVARY=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",2)
"RTN","GMVGETD2",48,0)
 F GMVLOOP=1:1 Q:$P(GMRVARY,U,GMVLOOP)=""  D
"RTN","GMVGETD2",49,0)
 .S GMVQNAME=$$FIELD^GMVGETQL($P(GMRVARY,U,GMVLOOP),1,"E")
"RTN","GMVGETD2",50,0)
 .I GMVQNAME=""!(GMVQNAME=-1) Q
"RTN","GMVGETD2",51,0)
 .S GMRZZ=GMRZZ_$S(GMRZZ'="":", ",1:"")_GMVQNAME
"RTN","GMVGETD2",52,0)
 .Q
"RTN","GMVGETD2",53,0)
 S:GMRZZ'=""&(GMRVTY'="PO2") GMRZZ=" ("_GMRZZ_")"
"RTN","GMVGETD2",54,0)
 S:GMRVTY="PO2" ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" "_GMRZZ
"RTN","GMVGETD2",55,0)
 I GMRVTY="P",GMRZZ["DORSALIS PEDIS",$P(GMRDAT,"^",8)=1 S ^TMP($J,"GRPC",GJ)=$P(^(GJ),"*",1)_$P(^(GJ),"*",2)
"RTN","GMVGETD2",56,0)
 S:GMRVTY'="PO2" ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" "_GMRZZ
"RTN","GMVGETD2",57,0)
 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" _"_GMVUSER
"RTN","GMVGETD2",58,0)
 I GMRVTY="WT" S GMRBMI="",GMRBMI(1)=$P(GMRDAT,"^"),GMRBMI(2)=+$P(GMRDAT,"^",8) D CALBMI^GMVBMI(.GMRBMI) D:GMRBMI'=""
"RTN","GMVGETD2",59,0)
 . S GJ=GJ+1,^TMP($J,"GRPC",GJ)=$E(GMRDATE,4,5)_"/"_$E(GMRDATE,6,7)_"/"_$E(GMRDATE,2,3)
"RTN","GMVGETD2",60,0)
 . S ^TMP($J,"GRPC",GJ)="       @"_$E($P(GMRDATE,".",2)_"000000",1,2)_":"_$E($P(GMRDATE,".",2)_"000000",3,4)_"   Body Mass Index:   "_GMRBMI
"RTN","GMVGETD2",61,0)
 K Z,GMRBMI
"RTN","GMVGETD2",62,0)
 Q
"RTN","GMVGETD2",63,0)
BLNK ;
"RTN","GMVGETD2",64,0)
 N I
"RTN","GMVGETD2",65,0)
 F I=1:1:$L(Z) Q:$E(Z,I)'=" "
"RTN","GMVGETD2",66,0)
 S Z=$E(Z,I,$L(Z))
"RTN","GMVGETD2",67,0)
 Q
"RTN","GMVGETQL")
0^20^B4569446^n/a
"RTN","GMVGETQL",1,0)
GMVGETQL ;HOIFO/FT-GET QUALIFIER INFORMATION ;2/26/07  16:27
"RTN","GMVGETQL",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVGETQL",3,0)
 ;
"RTN","GMVGETQL",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETQL",5,0)
 ; <None> 
"RTN","GMVGETQL",6,0)
 ;
"RTN","GMVGETQL",7,0)
 ; This routine supports the following IAs:
"RTN","GMVGETQL",8,0)
 ; #5048 - FIELD, GETIEN, VT entry points     (supported)
"RTN","GMVGETQL",9,0)
 ;
"RTN","GMVGETQL",10,0)
FIELD(GMVIEN,GMVFIELD,GMVFMT) ; Returns the qualifier values
"RTN","GMVGETQL",11,0)
 ;  Input:   GMVIEN - File 120.52 internal entry number (required)
"RTN","GMVGETQL",12,0)
 ;         GMVFIELD - field you want (required)
"RTN","GMVGETQL",13,0)
 ;                    1 = name(.01)
"RTN","GMVGETQL",14,0)
 ;                    2 = Synonym (.02)
"RTN","GMVGETQL",15,0)
 ;                    3 = VUID (99.99)
"RTN","GMVGETQL",16,0)
 ;                    4 = Master Entry For VUID
"RTN","GMVGETQL",17,0)
 ;           GMVFMT - return internal or external value (optional)
"RTN","GMVGETQL",18,0)
 ;                    I fo Internal, E for External
"RTN","GMVGETQL",19,0)
 ;                    default is E
"RTN","GMVGETQL",20,0)
 ; Output: field value or -1 if there is an error
"RTN","GMVGETQL",21,0)
 ;
"RTN","GMVGETQL",22,0)
 I $G(GMVIEN)="" Q -1
"RTN","GMVGETQL",23,0)
 I $G(GMVFIELD)="" Q -1
"RTN","GMVGETQL",24,0)
 S GMVFMT=$E($G(GMVFMT,"E"))
"RTN","GMVGETQL",25,0)
 S GMVFMT=$$UPPER^GMVGETVT(GMVFMT)
"RTN","GMVGETQL",26,0)
 S GMVFMT=$S(GMVFMT="I":"I",1:"E")
"RTN","GMVGETQL",27,0)
 I GMVFIELD=1 Q $$GET1^DIQ(120.52,+GMVIEN,.01,GMVFMT)
"RTN","GMVGETQL",28,0)
 I GMVFIELD=2 Q $$GET1^DIQ(120.52,+GMVIEN,.02,GMVFMT)
"RTN","GMVGETQL",29,0)
 I GMVFIELD=3 Q $$GET1^DIQ(120.52,+GMVIEN,99.99,GMVFMT)
"RTN","GMVGETQL",30,0)
 I GMVFIELD=4 Q $$GET1^DIQ(120.52,+GMVIEN,99.96,GMVFMT)
"RTN","GMVGETQL",31,0)
 Q -1
"RTN","GMVGETQL",32,0)
 ;
"RTN","GMVGETQL",33,0)
GETIEN(GMVX,GMVY) ; Returns the qualifier IEN
"RTN","GMVGETQL",34,0)
 ;  Input: GMVX - File 120.52 look up value (required)
"RTN","GMVGETQL",35,0)
 ;         GMVY - index type (required)
"RTN","GMVGETQL",36,0)
 ;                1 = name (.01)
"RTN","GMVGETQL",37,0)
 ;                2 = VUID (99.99)
"RTN","GMVGETQL",38,0)
 ; Output: File 120.52 internal entry number
"RTN","GMVGETQL",39,0)
 ;         or null if not found
"RTN","GMVGETQL",40,0)
 ;         or -1 if there is an error
"RTN","GMVGETQL",41,0)
 ;
"RTN","GMVGETQL",42,0)
 I $G(GMVX)="" Q -1
"RTN","GMVGETQL",43,0)
 I $G(GMVY)="" Q -1
"RTN","GMVGETQL",44,0)
 I GMVY=1 Q $O(^GMRD(120.52,"B",GMVX,0))
"RTN","GMVGETQL",45,0)
 I GMVY=2 Q $O(^GMRD(120.52,"AVUID",GMVX,0))
"RTN","GMVGETQL",46,0)
 Q -1
"RTN","GMVGETQL",47,0)
 ;
"RTN","GMVGETQL",48,0)
VT(RESULT,GMVIEN) ; Returns the vital types and category values for a qualifier
"RTN","GMVGETQL",49,0)
 ;  Input: RESULT = Array name to return data in (required)
"RTN","GMVGETQL",50,0)
 ;         GMVIEN = File 120.52 internal entry number (required)
"RTN","GMVGETQL",51,0)
 ; Output: RESULT(0)=piece1
"RTN","GMVGETQL",52,0)
 ;         RESULT(n)=piece2^piece3^piece4^piece5
"RTN","GMVGETQL",53,0)
 ;         where piece1 = number of entries found or -1 if an error
"RTN","GMVGETQL",54,0)
 ;               piece2 = File 120.51 entry number
"RTN","GMVGETQL",55,0)
 ;               piece3 = File 120.51 .01  field value
"RTN","GMVGETQL",56,0)
 ;               piece4 = File 120.53 entry number
"RTN","GMVGETQL",57,0)
 ;               piece5 = File 120.53 .01 field value
"RTN","GMVGETQL",58,0)
 ;                    n = sequential number starting with 1
"RTN","GMVGETQL",59,0)
 ;
"RTN","GMVGETQL",60,0)
 N GMVCATE,GMVCATI,GMVCNT,GMVLOOP,GMVNODE,GMVTE,GMVTI
"RTN","GMVGETQL",61,0)
 S (GMVCNT,GMVLOOP)=0
"RTN","GMVGETQL",62,0)
 I $G(GMVIEN)="" Q
"RTN","GMVGETQL",63,0)
 ; check if RESULT is defined?
"RTN","GMVGETQL",64,0)
 F  S GMVLOOP=$O(^GMRD(120.52,GMVIEN,1,GMVLOOP)) Q:'GMVLOOP  D
"RTN","GMVGETQL",65,0)
 .S GMVNODE=$G(^GMRD(120.52,GMVIEN,1,GMVLOOP,0))
"RTN","GMVGETQL",66,0)
 .Q:GMVNODE=""
"RTN","GMVGETQL",67,0)
 .S GMVTI=$P(GMVNODE,U,1)
"RTN","GMVGETQL",68,0)
 .Q:'GMVTI
"RTN","GMVGETQL",69,0)
 .S GMVTE=$$FIELD^GMVGETVT(GMVTI,1,"E")
"RTN","GMVGETQL",70,0)
 .Q:GMVTE=""
"RTN","GMVGETQL",71,0)
 .S GMVCATI=$P(GMVNODE,U,2)
"RTN","GMVGETQL",72,0)
 .S GMVCATE=""
"RTN","GMVGETQL",73,0)
 .I GMVCATI S GMVCATE=$$FIELD^GMVGETC(GMVCATI,1,"E")
"RTN","GMVGETQL",74,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVGETQL",75,0)
 .S RESULT(GMVCNT)=GMVTI_U_GMVTE_U_GMVCATI_U_GMVCATE
"RTN","GMVGETQL",76,0)
 .Q
"RTN","GMVGETQL",77,0)
 S RESULT(0)=GMVCNT
"RTN","GMVGETQL",78,0)
 Q
"RTN","GMVGETQL",79,0)
 ;
"RTN","GMVGETVT")
0^21^B7880375^n/a
"RTN","GMVGETVT",1,0)
GMVGETVT ;HOIFO/FT-GET VITAL TYPE INFORMATION ;2/26/07  15:35
"RTN","GMVGETVT",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVGETVT",3,0)
 ;
"RTN","GMVGETVT",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGETVT",5,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVGETVT",6,0)
 ;
"RTN","GMVGETVT",7,0)
 ; This routine supports the following IAs:
"RTN","GMVGETVT",8,0)
 ; #5047 - FIELD, GETIEN, LIST, TYPES entry points   (supported)
"RTN","GMVGETVT",9,0)
 ;
"RTN","GMVGETVT",10,0)
FIELD(GMVIEN,GMVFIELD,GMVFMT) ; Returns the vital type (FILE 120.51) values
"RTN","GMVGETVT",11,0)
 ;  Input:   GMVIEN = File 120.51 internal entry number (required)
"RTN","GMVGETVT",12,0)
 ;         GMVFIELD = field you want (required)
"RTN","GMVGETVT",13,0)
 ;                    1 = Name (.01)
"RTN","GMVGETVT",14,0)
 ;                    2 = Abbreviation (1)
"RTN","GMVGETVT",15,0)
 ;                    3 = PCE Abbreviation (7)
"RTN","GMVGETVT",16,0)
 ;                    4 = VUID (99.99) 
"RTN","GMVGETVT",17,0)
 ;                    5 = Master Entry For VUID (99.98)
"RTN","GMVGETVT",18,0)
 ;           GMVFMT = return internal or external value (optional)
"RTN","GMVGETVT",19,0)
 ;                    I for Internal, E for External
"RTN","GMVGETVT",20,0)
 ;                    default is E
"RTN","GMVGETVT",21,0)
 ; Output: field value or -1 if there is an error
"RTN","GMVGETVT",22,0)
 ;
"RTN","GMVGETVT",23,0)
 I $G(GMVIEN)="" Q -1
"RTN","GMVGETVT",24,0)
 I $G(GMVFIELD)="" Q -1
"RTN","GMVGETVT",25,0)
 S GMVFMT=$G(GMVFMT)
"RTN","GMVGETVT",26,0)
 S GMVFMT=$$UPPER(GMVFMT)
"RTN","GMVGETVT",27,0)
 S GMVFMT=$S(GMVFMT="I":"I",1:"E")
"RTN","GMVGETVT",28,0)
 I GMVFIELD=1 Q $$GET1^DIQ(120.51,+GMVIEN,.01,GMVFMT)
"RTN","GMVGETVT",29,0)
 I GMVFIELD=2 Q $$GET1^DIQ(120.51,+GMVIEN,1,GMVFMT)
"RTN","GMVGETVT",30,0)
 I GMVFIELD=3 Q $$GET1^DIQ(120.51,+GMVIEN,7,GMVFMT)
"RTN","GMVGETVT",31,0)
 I GMVFIELD=4 Q $$GET1^DIQ(120.51,+GMVIEN,99.99,GMVFMT)
"RTN","GMVGETVT",32,0)
 I GMVFIELD=5 Q $$GET1^DIQ(120.51,+GMVIEN,99.98,GMVFMT)
"RTN","GMVGETVT",33,0)
 Q -1
"RTN","GMVGETVT",34,0)
 ;
"RTN","GMVGETVT",35,0)
GETIEN(GMVX,GMVY) ; Returns the vital type IEN
"RTN","GMVGETVT",36,0)
 ;  Input:   GMVX - File 120.51 look up value (required)
"RTN","GMVGETVT",37,0)
 ;           GMVY - index type (required)
"RTN","GMVGETVT",38,0)
 ;                  1 - Name (.01)
"RTN","GMVGETVT",39,0)
 ;                  2 - Abbreviation (1)
"RTN","GMVGETVT",40,0)
 ;                  3 - PCE Abbreviation (7)
"RTN","GMVGETVT",41,0)
 ;                  4 - VUID (99.99)
"RTN","GMVGETVT",42,0)
 ; Output: File 120.51 internal entry number,
"RTN","GMVGETVT",43,0)
 ;         or null if not found, 
"RTN","GMVGETVT",44,0)
 ;         or -1 if there is an error
"RTN","GMVGETVT",45,0)
 I $G(GMVX)="" Q -1
"RTN","GMVGETVT",46,0)
 I $G(GMVY)="" Q -1
"RTN","GMVGETVT",47,0)
 ;S GMVX=$$UP^XLFSTR(GMVX) ;make this an input parameter?
"RTN","GMVGETVT",48,0)
 I GMVY=1 Q $O(^GMRD(120.51,"B",GMVX,0))
"RTN","GMVGETVT",49,0)
 I GMVY=2 Q $O(^GMRD(120.51,"C",GMVX,0))
"RTN","GMVGETVT",50,0)
 I GMVY=3 Q $O(^GMRD(120.51,"APCE",GMVX,0))
"RTN","GMVGETVT",51,0)
 I GMVY=4 Q $O(^GMRD(120.51,"AVUID",GMVX,0))
"RTN","GMVGETVT",52,0)
 Q -1
"RTN","GMVGETVT",53,0)
 ;
"RTN","GMVGETVT",54,0)
LIST(GMVARRAY,GMVFMT) ; Return list of supported vital types
"RTN","GMVGETVT",55,0)
 ;  Input:   GMVARRAY - Array name to return data in (required)
"RTN","GMVGETVT",56,0)
 ;             GMVFMT - return internal or external value (optional)
"RTN","GMVGETVT",57,0)
 ;                      I for Internal or E for External
"RTN","GMVGETVT",58,0)
 ;                      default is I
"RTN","GMVGETVT",59,0)
 ; Output: GMVARRAY(0)=piece1
"RTN","GMVGETVT",60,0)
 ;         GMVARRAY(n)=piece2^piece3^piece4^piece5^piece6^piece7
"RTN","GMVGETVT",61,0)
 ;
"RTN","GMVGETVT",62,0)
 ; where: piece1 = number of entries found
"RTN","GMVGETVT",63,0)
 ;        piece2 = FILE 120.51 internal entry number (.001)
"RTN","GMVGETVT",64,0)
 ;        piece3 = Name (.01)
"RTN","GMVGETVT",65,0)
 ;        piece4 = Abbreviation (1)
"RTN","GMVGETVT",66,0)
 ;        piece5 = PCE Abbreviation (7)
"RTN","GMVGETVT",67,0)
 ;        piece6 = VUID (99.99)
"RTN","GMVGETVT",68,0)
 ;        piece7 = Master Entry for VUID (99.98)
"RTN","GMVGETVT",69,0)
 ;             n = a sequential number starting with 1
"RTN","GMVGETVT",70,0)
 ;
"RTN","GMVGETVT",71,0)
 N GMVCNT,GMVFLD,GMVIEN,GMVLOOP,GMVNAME,GMVNODE,GMVTYPES
"RTN","GMVGETVT",72,0)
 ; check if GMVARRAY is defined?
"RTN","GMVGETVT",73,0)
 S GMVFMT=$G(GMVFMT)
"RTN","GMVGETVT",74,0)
 S GMVFMT=$$UPPER(GMVFMT)
"RTN","GMVGETVT",75,0)
 S GMVFMT=$S(GMVFMT="I":"I",1:"E")
"RTN","GMVGETVT",76,0)
 S GMVCNT=0,GMVNAME=""
"RTN","GMVGETVT",77,0)
 S GMVTYPES=$$TYPES()
"RTN","GMVGETVT",78,0)
 F  S GMVNAME=$O(^GMRD(120.51,"B",GMVNAME)) Q:GMVNAME=""  D
"RTN","GMVGETVT",79,0)
 .S GMVIEN=0
"RTN","GMVGETVT",80,0)
 .F  S GMVIEN=$O(^GMRD(120.51,"B",GMVNAME,GMVIEN)) Q:'GMVIEN  D
"RTN","GMVGETVT",81,0)
 ..S GMVNODE=$G(^GMRD(120.51,GMVIEN,0))
"RTN","GMVGETVT",82,0)
 ..Q:GMVNODE=""
"RTN","GMVGETVT",83,0)
 ..Q:GMVTYPES'[$P(GMVNODE,U,2)
"RTN","GMVGETVT",84,0)
 ..F GMVLOOP=1:1:5 D
"RTN","GMVGETVT",85,0)
 ...S GMVFLD(GMVLOOP)=$$FIELD(GMVIEN,GMVLOOP,GMVFMT)
"RTN","GMVGETVT",86,0)
 ..S GMVCNT=GMVCNT+1
"RTN","GMVGETVT",87,0)
 ..;GMVARRAY(n)=ien^name^abbrev^pce abbrev^vuid^master entry for vuid
"RTN","GMVGETVT",88,0)
 ..S GMVARRAY(GMVCNT)=GMVIEN_U_GMVFLD(1)_U_GMVFLD(2)_U_GMVFLD(3)_U_GMVFLD(4)_U_GMVFLD(5)
"RTN","GMVGETVT",89,0)
 ..Q
"RTN","GMVGETVT",90,0)
 .Q
"RTN","GMVGETVT",91,0)
 S GMVARRAY(0)=GMVCNT
"RTN","GMVGETVT",92,0)
 Q
"RTN","GMVGETVT",93,0)
TYPES() ; Returns list of abbreviations for the vitals types currently
"RTN","GMVGETVT",94,0)
 ; tracked
"RTN","GMVGETVT",95,0)
 ;  Input: none
"RTN","GMVGETVT",96,0)
 ; Output: string of vital type abbreviations (File 120.51, Field 1
"RTN","GMVGETVT",97,0)
 ;         values) separated by up-arrows
"RTN","GMVGETVT",98,0)
 ;
"RTN","GMVGETVT",99,0)
 Q "BP^CG^CVP^HT^P^PN^PO2^R^T^WT"
"RTN","GMVGETVT",100,0)
 ;
"RTN","GMVGETVT",101,0)
UPPER(GMVX) ; Change text to uppercase
"RTN","GMVGETVT",102,0)
 ;  Input: GMVX - string
"RTN","GMVGETVT",103,0)
 ; Output: string converted to uppercase
"RTN","GMVGETVT",104,0)
 S GMVX=$G(GMVX)
"RTN","GMVGETVT",105,0)
 Q $$UP^XLFSTR(GMVX)
"RTN","GMVGETVT",106,0)
 ;
"RTN","GMVGGR1")
0^22^B21349900^B19172168
"RTN","GMVGGR1",1,0)
GMVGGR1 ;HOIFO/YH,FT-VITAL SIGNS RECORD SF 511 ;10/24/07
"RTN","GMVGGR1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3,23**;Oct 31, 2002;Build 25
"RTN","GMVGGR1",3,0)
 ;
"RTN","GMVGGR1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVGGR1",5,0)
 ;  #3214 - ^GMRYAPI calls         (private)
"RTN","GMVGGR1",6,0)
 ;  #4290 - ^PXRMINDX global       (controlled)
"RTN","GMVGGR1",7,0)
 ; #10040 - FILE 44 references     (supported)
"RTN","GMVGGR1",8,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVGGR1",9,0)
 ; #10096 - ^%ZOSF calls           (supported)
"RTN","GMVGGR1",10,0)
 ;
"RTN","GMVGGR1",11,0)
 ; This routine supports the following IAs:
"RTN","GMVGGR1",12,0)
 ; #4654 - GMV V/M ALLDATA RPC is called at VMDATA (private)
"RTN","GMVGGR1",13,0)
 ;
"RTN","GMVGGR1",14,0)
VMDATA(RESULT,GMVDATA) ;GMV V/M ALLDATA [RPC entry point]
"RTN","GMVGGR1",15,0)
 ;ENTRY POINT FROM GMRV SF511 GUI TO EXTRACT ALL DATA
"RTN","GMVGGR1",16,0)
 ; GMVDATA: piece 1 = DFN
"RTN","GMVGGR1",17,0)
 ;                2 = start date
"RTN","GMVGGR1",18,0)
 ;                3 = end date
"RTN","GMVGGR1",19,0)
 ;                4 = 0
"RTN","GMVGGR1",20,0)
 ;                5 = database screen
"RTN","GMVGGR1",21,0)
 ;                    0 = return records from Vitals & FlowSheets (default)
"RTN","GMVGGR1",22,0)
 ;                    1 = return records from Vitals only
"RTN","GMVGGR1",23,0)
 ;                    2 = return records from FlowSheets only
"RTN","GMVGGR1",24,0)
 ;
"RTN","GMVGGR1",25,0)
 N DFN,GQT,X,Y
"RTN","GMVGGR1",26,0)
 N GCHA,GMVCLIO,GMVLOOP,GSEL,%,%H,%I,%T,GMVQNAME,GMVDB
"RTN","GMVGGR1",27,0)
 K ^TMP($J)
"RTN","GMVGGR1",28,0)
 S (GMROUT,GN,GQT)=0,DFN=+$P(GMVDATA,"^"),GMRSTRT=$P(GMVDATA,"^",2),GMRFIN=$P(GMVDATA,"^",3),GMR=+$P(GMVDATA,"^",4),GMVDB=+$P(GMVDATA,U,5)
"RTN","GMVGGR1",29,0)
 S GMVDB=$S(GMVDB=2:2,GMVDB=1:1,1:0)
"RTN","GMVGGR1",30,0)
 S GSEL=0,GMR=0
"RTN","GMVGGR1",31,0)
 S Y=GMRSTRT X ^DD("DD") S GSTRFIN=Y S Y=GMRFIN X ^DD("DD") S GSTRFIN=GSTRFIN_" - "_Y
"RTN","GMVGGR1",32,0)
 S GMRHT=0
"RTN","GMVGGR1",33,0)
 K ^TMP($J,"GMR"),^TMP($J,"GMRK"),^TMP($J,"GDT"),^TMP($J,"GMRVG"),^TMP($J,"GTNM")
"RTN","GMVGGR1",34,0)
 S GSTART1=GMRSTRT-.0001,GEND1=GMRFIN
"RTN","GMVGGR1",35,0)
 F GTYPE="B","H","P","R","T","W","PO2","CVP","CG","PN" D SETT
"RTN","GMVGGR1",36,0)
 S GRPT=5 D:GMR'=1 SETIO D ^GMVGGR2
"RTN","GMVGGR1",37,0)
Q1 K GMR,GSOL,GIVDT,GMRHLOC,GMRVJ,GDATA,GDT,GEN,GEND1,GI,GJ,GK,GMRVX,GSTART1,GTNM,GTYP,GTYPE,GX,I D KVAR^VADPT K VA,VAROOT
"RTN","GMVGGR1",38,0)
 D QIO^GMVGR5
"RTN","GMVGGR1",39,0)
 K GRPT,GMROUT,GMRRMBD,GAGE,GCNT,GDOB,GCNTB,GCNTD,GCNTP,GCNTR,GCNTT,GCNTT1,GCNTI,GCNTO,GDT1,GCNTPD,GCNTTD,GCNTW,GPG,GPGS,GHT,GTYPE1,GCNTB3,GDTA,XDT,XIO,XX,^TMP($J,"GMRK"),^TMP($J,"GMR"),^TMP($J,"GDT"),^TMP($J,"GMRVG")
"RTN","GMVGGR1",40,0)
 K GLINE,GMRQUAL,^TMP($J,"GTNM"),G,GDA,GDIP,GDOP,GINF,GMIN,GMRFIN,GMRHT,GMRSITE,GMRSTRT,GMRVARY,GMRVHLOC,GMRWARD,GN,GNDATE,GNSHFT,GRNDIP,GRNDOP,GRNGIP,GSIP,GSOP,GSTAR,GSTRFIN,GSUB
"RTN","GMVGGR1",41,0)
 Q
"RTN","GMVGGR1",42,0)
SETT ;SET GMRT
"RTN","GMVGGR1",43,0)
 S GTYP(1)=$S(GTYPE="B":"BLOOD PRESSURE",GTYPE="P":"PULSE",GTYPE="R":"RESPIRATION",GTYPE="T":"TEMPERATURE",GTYPE="H":"HEIGHT",GTYPE="W":"WEIGHT",GTYPE="CG":"CIRCUMFERENCE/GIRTH",GTYPE="PO2":"PULSE OXIMETRY",1:"")
"RTN","GMVGGR1",44,0)
 I GTYP(1)="" S GTYP(1)=$S(GTYPE="CVP":"CENTRAL VENOUS PRESSURE",GTYPE="PN":"PAIN",1:"")
"RTN","GMVGGR1",45,0)
 Q:GTYP(1)=""
"RTN","GMVGGR1",46,0)
 S GTYP=$O(^GMRD(120.51,"B",GTYP(1),"")),GX=GSTART1
"RTN","GMVGGR1",47,0)
 I GTYP>0 F  S GX=$O(^PXRMINDX(120.5,"PI",DFN,GTYP,GX)) Q:GX'>0!(GX>GEND1)  S GEN=0 F  S GEN=$O(^PXRMINDX(120.5,"PI",DFN,GTYP,GX,GEN)) Q:$L(GEN)'>0  D
"RTN","GMVGGR1",48,0)
 .K GMVCLIO
"RTN","GMVGGR1",49,0)
 .I GEN=+GEN,GMVDB=2 Q  ;want clio records only
"RTN","GMVGGR1",50,0)
 .I GEN'=+GEN,GMVDB=1 Q  ;want vitals records only
"RTN","GMVGGR1",51,0)
 .I GEN=+GEN D
"RTN","GMVGGR1",52,0)
 ..D F1205^GMVUTL(.GMVCLIO,GEN)
"RTN","GMVGGR1",53,0)
 .I GEN'=+GEN D
"RTN","GMVGGR1",54,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GEN)
"RTN","GMVGGR1",55,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVGGR1",56,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVGGR1",57,0)
 .S GMVLOOP=0,GG=""
"RTN","GMVGGR1",58,0)
 .F GMVLOOP=1:1 Q:$P(GMVCLIO(5),U,GMVLOOP)=""  D
"RTN","GMVGGR1",59,0)
 ..S GMVQNAME=$$FIELD^GMVGETQL($P(GMVCLIO(5),U,GMVLOOP),1,"E")
"RTN","GMVGGR1",60,0)
 ..I GMVQNAME=""!(GMVQNAME=-1) Q
"RTN","GMVGGR1",61,0)
 ..S GG=GG_$S(GG'="":";",1:"")_GMVQNAME
"RTN","GMVGGR1",62,0)
 .D BLDARR
"RTN","GMVGGR1",63,0)
 .Q
"RTN","GMVGGR1",64,0)
 Q
"RTN","GMVGGR1",65,0)
BLDARR ;
"RTN","GMVGGR1",66,0)
 N GMVLOC,GMVUSER
"RTN","GMVGGR1",67,0)
 S GDATA=GMVCLIO(0)
"RTN","GMVGGR1",68,0)
 Q:GDATA=""
"RTN","GMVGGR1",69,0)
 S GMVLOC=+$P(GDATA,U,5) ;hospital location ien
"RTN","GMVGGR1",70,0)
 S GMVLOC=$P($G(^SC(GMVLOC,0)),U,1)
"RTN","GMVGGR1",71,0)
 S GMVUSER=+$P(GDATA,U,6) ;user duz
"RTN","GMVGGR1",72,0)
 S GMVUSER=$$PERSON^GMVUTL1(GMVUSER)
"RTN","GMVGGR1",73,0)
 S GMRVX=GTYPE,GMRVX(0)=$P(GDATA,"^",8),GMRVX(1)=0  D:GMRVX(0)>0!(GMRVX(0)<0)!($E(GMRVX(0))="0") EN1^GMVSAS0
"RTN","GMVGGR1",74,0)
 S ^TMP($J,"GMRVG",GX,GTYPE,$P(GDATA,"^",8))=GG_"^"_$S($G(GMRVX(1))>0:1,1:"")_"^^"_$P(GDATA,"^",10)_U_GMVLOC_U_GMVUSER_U_$S(GEN=+GEN:"Vitals",1:"CLIO")
"RTN","GMVGGR1",75,0)
 S:$D(^TMP($J,"GMRVG",GX,"H",$P(GDATA,"^",8))) GHT=$P(GDATA,"^",8)
"RTN","GMVGGR1",76,0)
 ;I GTYPE="B",$P(GDATA,"^",8)'>0 S ^TMP($J,"GMRVG",9999999-GX,"B",$P(GDATA,"^",8))="^^"
"RTN","GMVGGR1",77,0)
 K GG
"RTN","GMVGGR1",78,0)
 Q
"RTN","GMVGGR1",79,0)
SETIO ;
"RTN","GMVGGR1",80,0)
 S X="GMRYRP0" X ^%ZOSF("TEST") Q:'$T
"RTN","GMVGGR1",81,0)
 D IO^GMVGR5
"RTN","GMVGGR1",82,0)
 D SETIOAR
"RTN","GMVGGR1",83,0)
 Q
"RTN","GMVGGR1",84,0)
SETIOAR F GTYPE1="XI"_($$INPUT^GMRYAPI()+4),"XO"_($$OUTPUT^GMRYAPI()+1) F GDT=0:0 S GDT=$O(^TMP($J,"GMR",GTYPE1,GDT)) Q:GDT'>0  F GDTA=0:0 S GDTA=$O(^TMP($J,"GMR",GTYPE1,GDT,GDTA)) Q:GDTA=""  D SETIOAR1
"RTN","GMVGGR1",85,0)
 Q
"RTN","GMVGGR1",86,0)
SETIOAR1 S:GTYPE1["XI" ^TMP($J,"GMRVG",GDT,"I",GDTA)="^" S:GTYPE1["XO" ^TMP($J,"GMRVG",GDT,"O",GDTA)="^"
"RTN","GMVGGR1",87,0)
 Q
"RTN","GMVGGR2")
0^23^B17252274^B16803927
"RTN","GMVGGR2",1,0)
GMVGGR2 ;HOIFO/YH,FT-SET ^TMP($J) GLOBAL ;6/6/07
"RTN","GMVGGR2",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3,23**;Oct 31, 2002;Build 25
"RTN","GMVGGR2",3,0)
 ;CONTINUTATION OF GMVGGR1
"RTN","GMVGGR2",4,0)
 ;
"RTN","GMVGGR2",5,0)
 ; This routine uses the following IAs:
"RTN","GMVGGR2",6,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVGGR2",7,0)
 ;
"RTN","GMVGGR2",8,0)
GRAPH ;
"RTN","GMVGGR2",9,0)
 D:GMR=0 SETV
"RTN","GMVGGR2",10,0)
 I '$D(^TMP($J,"GMRVG")) S GN=GN+1,^TMP($J,GN)="NO DATA",RESULT=$NA(^TMP($J)) Q
"RTN","GMVGGR2",11,0)
 K GMRQUAL S GDT=0 F  S GDT=$O(^TMP($J,"GMRVG",GDT)) Q:GDT'>0  D
"RTN","GMVGGR2",12,0)
 .  S:GMR=0 GN=GN+1,^TMP($J,GN)="^^^^^^^^^^^^^^^^^^^^^" D DATE
"RTN","GMVGGR2",13,0)
 .  S GI="" F  S GI=$O(^TMP($J,"GMRVG",GDT,GI)) Q:GI=""  D
"RTN","GMVGGR2",14,0)
 . . S GK="" F  S GK=$O(^TMP($J,"GMRVG",GDT,GI,GK)) Q:GK=""  D SETA
"RTN","GMVGGR2",15,0)
 D KVAR^VADPT K VA
"RTN","GMVGGR2",16,0)
 ;RETURN CALL ROUTINE WITH QUALIFIERS
"RTN","GMVGGR2",17,0)
 I GMR=1,$D(GMRQUAL) D
"RTN","GMVGGR2",18,0)
 . S (GQ,GQ(1))=""
"RTN","GMVGGR2",19,0)
 . F  S GQ=$O(GMRQUAL(GQ)) Q:GQ=""  D
"RTN","GMVGGR2",20,0)
 . . S I=0,GQ(1)=$S(GQ="T":"TEMPERATURE",GQ="P":"PULSE",GQ="R":"RESPIRATION",GQ="B":"BLOOD PRESSURE",GQ="H":"HEIGHT",GQ="W":"WEIGHT",GQ="CVP":"CVP",GQ="PO2":"PULSE OXIMETRY",GQ="CG":"CIRCUMFERENCE/GIRTH",1:"")
"RTN","GMVGGR2",21,0)
 . . Q:GQ(1)=""  S GN=GN+1,^TMP($J,GN)=GQ(1)_"--- "
"RTN","GMVGGR2",22,0)
 . . S GQ(2)="" F  S GQ(2)=$O(GMRQUAL(GQ,GQ(2))) Q:GQ(2)=""  S I=I+1 S:I>1 ^TMP($J,GN)=^(GN)_"," S ^TMP($J,GN)=^TMP($J,GN)_" "_GQ(2)
"RTN","GMVGGR2",23,0)
 K GQ,GG,GI,GMRVJ,GSYNO,GHOLD,GLINE,GMRQUAL
"RTN","GMVGGR2",24,0)
 K ^TMP($J,"GMR"),^TMP($J,"GMRVG")
"RTN","GMVGGR2",25,0)
 S RESULT=$NA(^TMP($J))
"RTN","GMVGGR2",26,0)
 Q
"RTN","GMVGGR2",27,0)
SETV ;Set patient data in ^TMP($J,"GMRK" global
"RTN","GMVGGR2",28,0)
 D DEM^VADPT,INP^VADPT
"RTN","GMVGGR2",29,0)
 S GN=1,^TMP($J,GN)=$S(VADM(1)'="":VADM(1),1:"         ")_"  "_$S(VADM(2)'="":$E($P(VADM(2),"^",2),8,11),1:" ")_"  "_$S($D(VADM(3)):$P(VADM(3),"^",2),1:" ")_"  "_$S($D(VADM(4)):VADM(4),1:" ")_" (Yrs)"
"RTN","GMVGGR2",30,0)
 S ^TMP($J,GN)=^(GN)_"  "_$S($D(VADM(5)):$P(VADM(5),"^",2),1:" ")
"RTN","GMVGGR2",31,0)
 S GN=2,^TMP($J,GN)="Unit: "_$P($G(VAIN(4)),"^",2)_"   Room: "_$P($G(VAIN(5)),"-",1,2)
"RTN","GMVGGR2",32,0)
 I '$D(GMRVHLOC) S GMRVHLOC=$$HOSPLOC^GMVUTL1(+$G(VAIN(4)))
"RTN","GMVGGR2",33,0)
 S GN=3,^TMP($J,GN)="Division: "_$$DIVISION^GMVUTL1(+GMRVHLOC)
"RTN","GMVGGR2",34,0)
 S GN=4,^TMP($J,GN)=GSTRFIN
"RTN","GMVGGR2",35,0)
 Q
"RTN","GMVGGR2",36,0)
DATE ;
"RTN","GMVGGR2",37,0)
 S:GMR=0 $P(^TMP($J,GN),"^")=$E(GDT,4,5)_"-"_$E(GDT,6,7)_"-"_$E(GDT,2,3)
"RTN","GMVGGR2",38,0)
 S:GMR=0 Y=$E($P(GDT,".",2)_"000000",1,6),$P(^TMP($J,GN),"^",2)=$E(Y,1,2)_":"_$E(Y,3,4)_":"_$E(Y,5,6)
"RTN","GMVGGR2",39,0)
 Q
"RTN","GMVGGR2",40,0)
SETA ;Store measurements in ^TMP($J, global
"RTN","GMVGGR2",41,0)
 N GMVNODE
"RTN","GMVGGR2",42,0)
 S GMVNODE=$G(^TMP($J,"GMRVG",GDT,GI,GK))
"RTN","GMVGGR2",43,0)
 S $P(^TMP($J,GN),"^",22)=$P(GMVNODE,U,5)
"RTN","GMVGGR2",44,0)
 S $P(^TMP($J,GN),"^",23)=$P(GMVNODE,U,6)
"RTN","GMVGGR2",45,0)
 S $P(^TMP($J,GN),"^",24)=$P(GMVNODE,U,7)
"RTN","GMVGGR2",46,0)
 S GK(1)=GK
"RTN","GMVGGR2",47,0)
 I GK(1)="Unavailable" S GK(1)="Unavail"
"RTN","GMVGGR2",48,0)
 I GI="I" S:GMR=0 $P(^TMP($J,GN),"^",17)=GK(1) Q
"RTN","GMVGGR2",49,0)
 I GI="O" S:GMR=0 $P(^TMP($J,GN),"^",18)=GK(1) Q
"RTN","GMVGGR2",50,0)
 I GI="PN" S:GMR=0 $P(^TMP($J,GN),"^",19)=GK(1) Q
"RTN","GMVGGR2",51,0)
 S (GMRSITE,GMRSITE(1),GINF,GMRVJ)=""
"RTN","GMVGGR2",52,0)
 I GK(1)'="" D  Q:GMR=1
"RTN","GMVGGR2",53,0)
 . S GMRSITE(1)=$P(GMVNODE,U,1),GMRVJ=$P(GMVNODE,U,2),GINF=$P(GMVNODE,U,4)
"RTN","GMVGGR2",54,0)
 . I GMRSITE(1)'="" D SYNOARY^GMVLGQU
"RTN","GMVGGR2",55,0)
 I GI="R" S $P(^TMP($J,GN),"^",5)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE Q
"RTN","GMVGGR2",56,0)
 I GI="H" D  Q
"RTN","GMVGGR2",57,0)
 . S $P(^TMP($J,GN),"^",11)=GK(1)_"- "_GMRSITE,$P(^TMP($J,GN),"^",12)=$S(GK(1)>0:$J(GK(1)*2.54,0,2),1:"") S:GK(1)>0 GMRHT=(GK(1)*2.54)/100
"RTN","GMVGGR2",58,0)
 I GI="PO2" D  Q
"RTN","GMVGGR2",59,0)
 . S (GINF(1),GINF(2))="" I GINF'="" D PO2^GMVLGQU(.GINF)
"RTN","GMVGGR2",60,0)
 . S $P(^TMP($J,GN),"^",6)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE_"-"_GINF(1)_"-"_GINF(2)
"RTN","GMVGGR2",61,0)
 I GI="CVP" D  Q
"RTN","GMVGGR2",62,0)
 . S $P(^TMP($J,GN),"^",15)=$S(GK(1)>0!(GK(1)<0):$J(GK(1),0,1),1:GK(1))_$S(GMRVJ=1:"*",1:"")
"RTN","GMVGGR2",63,0)
 . S $P(^TMP($J,GN),"^",16)=$S(GK(1)>0!(GK(1)<0)!($E(GK(1))="0"):$J(GK(1)/1.36,0,1),1:"")_$S(GMRVJ=1:"*",1:"")
"RTN","GMVGGR2",64,0)
 I GI="CG" D  Q
"RTN","GMVGGR2",65,0)
 . S $P(^TMP($J,GN),"^",13)=GK(1)_"- "_GMRSITE,$P(^TMP($J,GN),"^",14)=$S(GK(1)>0:$J(GK(1)/.3937,0,2),1:"")
"RTN","GMVGGR2",66,0)
 I GI="B",GK(1)'="" S $P(^TMP($J,GN),"^",7)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE
"RTN","GMVGGR2",67,0)
 I GI="W" S $P(^TMP($J,GN),"^",8)=GK(1)_"- "_GMRSITE,$P(^(GN),"^",9)=$S(GK(1)>0:$J(GK(1)*.45359237,0,2),1:"")
"RTN","GMVGGR2",68,0)
 I GK(1)>0,GI="W" D  Q
"RTN","GMVGGR2",69,0)
  . S GHOLD=GI,GMRBMI="",GMRBMI(1)=GDT,GMRBMI(2)=GK(1) D CALBMI^GMVBMI(.GMRBMI) S GI=GHOLD
"RTN","GMVGGR2",70,0)
  . S $P(^TMP($J,GN),"^",10)=GMRBMI K GMRBMI
"RTN","GMVGGR2",71,0)
 I GI="T" S $P(^TMP($J,GN),"^",3)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE Q
"RTN","GMVGGR2",72,0)
 I GI="P" S $P(^TMP($J,GN),"^",4)=GK(1)_$S(GMRVJ=1:"*",1:"")_"- "_GMRSITE
"RTN","GMVGGR2",73,0)
 Q
"RTN","GMVHS")
0^28^B32961922^B58476565
"RTN","GMVHS",1,0)
GMVHS ;HIOFO/FT-RETURN PATIENT DATA UTILITY ;10/3/07
"RTN","GMVHS",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3,23**;Oct 31, 2002;Build 25
"RTN","GMVHS",3,0)
 ;
"RTN","GMVHS",4,0)
 ; This routine uses the following IAs:
"RTN","GMVHS",5,0)
 ;  #4290 - ^PXRMINDX global       (controlled)
"RTN","GMVHS",6,0)
 ; #10040 - FILE 44 references     (supported)
"RTN","GMVHS",7,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVHS",8,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVHS",9,0)
 ;
"RTN","GMVHS",10,0)
 ; This routine supports the following IAs:
"RTN","GMVHS",11,0)
 ; EN1 - 4791                       (private)
"RTN","GMVHS",12,0)
 ;
"RTN","GMVHS",13,0)
EN1 ; Entry to gather patient's vital/measurement data
"RTN","GMVHS",14,0)
 ; Input variables
"RTN","GMVHS",15,0)
 ;
"RTN","GMVHS",16,0)
 ;     DFN = Entry number of patient in Patient file. (Required)
"RTN","GMVHS",17,0)
 ; GMRVSTR = types of vital/measurements desired.  Use the abbreviations
"RTN","GMVHS",18,0)
 ;           found in the Vital Type (120.51) file.  For multiple
"RTN","GMVHS",19,0)
 ;           vitals, use the ; as a delimiter. (Required)
"RTN","GMVHS",20,0)
 ; GMRVSTR(0) = GMRVSTDT^GMRVENDT^GMRVOCC^GMRVSORD
"RTN","GMVHS",21,0)
 ;         where GMRVSTDT = The start date/time that the utility will
"RTN","GMVHS",22,0)
 ;                          use in obtaining patient data.  (Required)
"RTN","GMVHS",23,0)
 ;               GMRVENDT = The end date/time that the utility will use
"RTN","GMVHS",24,0)
 ;                          to stop the search.  (Required)
"RTN","GMVHS",25,0)
 ;               GMRVOCC  = The number of occurrences of the data that
"RTN","GMVHS",26,0)
 ;                          is desired by the search.  (Required)
"RTN","GMVHS",27,0)
 ;               GMRVSORD = The sort order desired in output. 0 will sort 
"RTN","GMVHS",28,0)
 ;                          the data by vital type, then by date/time entered.
"RTN","GMVHS",29,0)
 ;                          1 will sort the data by date/time entered, then by 
"RTN","GMVHS",30,0)
 ;                          vital type. (REQUIRED)
"RTN","GMVHS",31,0)
 ; GMRVSTR("LT") = ^TYP1^[TYP2^...]  (OPTIONAL)
"RTN","GMVHS",32,0)
 ;         THIS VARIABLE IS AN ^ DELIMITED LIST OF HOSPITAL LOCATION
"RTN","GMVHS",33,0)
 ;         TYPES TO EXTRACT MEASUREMENT DATA FOR.  E.G., ^C^M^, WILL
"RTN","GMVHS",34,0)
 ;         EXTRACT DATA FOR ONLY THOSE MEASUREMENTS TAKEN ON CLINICS
"RTN","GMVHS",35,0)
 ;         OR MODULES.
"RTN","GMVHS",36,0)
 ;
"RTN","GMVHS",37,0)
 ; Output variables:
"RTN","GMVHS",38,0)
 ;
"RTN","GMVHS",39,0)
 ; The utility will create an array with the desired information.  The
"RTN","GMVHS",40,0)
 ; array structure will be as follows if '$P(GMRVSTR(0),U,4):
"RTN","GMVHS",41,0)
 ;      ^UTILITY($J,"GMRVD",GMRVTYP,GMRVRDT,GMRVIEN)=GMRVDATA
"RTN","GMVHS",42,0)
 ; or if $P(GMRVSTR(0),U,4) then the following will be returned:
"RTN","GMVHS",43,0)
 ;      ^UTILITY($J,"GMRVD",GMRVRDT,GMRVTYP,GMRVIEN)=GMRVDATA
"RTN","GMVHS",44,0)
 ; where GMRVRDT  = Reverse FileMan date/time.
"RTN","GMVHS",45,0)
 ;                  9999999-Date/time vital/measurement was taken.
"RTN","GMVHS",46,0)
 ;       GMRVTYP  = The abbreviation used in the GMRVSTR string for the
"RTN","GMVHS",47,0)
 ;                  type of vital/measurement taken.
"RTN","GMVHS",48,0)
 ;       GMRVIEN  = Entry number in FILE 120.5 or
"RTN","GMVHS",49,0)
 ;                  pseudo entry number for File 704.117
"RTN","GMVHS",50,0)
 ;       
"RTN","GMVHS",51,0)
 ;       $P(GMRVDATA,"^",1) = date/time of the reading (FileMan internal) 
"RTN","GMVHS",52,0)
 ;       $P(GMRVDATA,"^",2) = Patient (#2) number (i.e., DFN) 
"RTN","GMVHS",53,0)
 ;       $P(GMRVDATA,"^",3) = vital type ien (File 120.51) 
"RTN","GMVHS",54,0)
 ;       $P(GMRVDATA,"^",4) = date/time of data entry (FileMan internal) 
"RTN","GMVHS",55,0)
 ;       $P(GMRVDATA,"^",5) = hospital location ien (File 44) 
"RTN","GMVHS",56,0)
 ;       $P(GMRVDATA,"^",6) = user ien (File 200) 
"RTN","GMVHS",57,0)
 ;       $P(GMRVDATA,"^",7) = always null 
"RTN","GMVHS",58,0)
 ;       $P(GMRVDATA,"^",8) = reading (e.g., 98.6, Unavailable) 
"RTN","GMVHS",59,0)
 ;       $P(GMRVDATA,"^",9) = always null
"RTN","GMVHS",60,0)
 ;       $P(GMRVDATA,"^",10) = the first qualifier
"RTN","GMVHS",61,0)
 ;       $P(GMRVDATA,"^",11) = the second qualifier
"RTN","GMVHS",62,0)
 ;       $P(GMRVDATA,"^",12)= "*" for abnormal measurement, otherwise = ""
"RTN","GMVHS",63,0)
 ;       $P(GMRVDATA,"^",13)= values in centigrade for T; kilos for WT; 
"RTN","GMVHS",64,0)
 ;                            centimeters for HT and Circumference/Girth;
"RTN","GMVHS",65,0)
 ;                            and mmHg for CVP
"RTN","GMVHS",66,0)
 ;       $P(GMRVDATA,"^",14)= Body Mass Index
"RTN","GMVHS",67,0)
 ;       $P(GMRVDATA,"^",15)= L/Min of supplemental O2
"RTN","GMVHS",68,0)
 ;       $P(GMRVDATA,"^",16)= % of supplemental O2
"RTN","GMVHS",69,0)
 ;       $P(GMRVDATA,"^",17)= all qualifiers delimited by semi-colons
"RTN","GMVHS",70,0)
 ; The variable GMRVSTR will be killed upon exit.
"RTN","GMVHS",71,0)
 ;
"RTN","GMVHS",72,0)
 Q:'$D(GMRVSTR(0))!'($D(GMRVSTR)#2)!'($D(DFN)#2)
"RTN","GMVHS",73,0)
 Q:DFN'>0
"RTN","GMVHS",74,0)
 I $G(GMRVSTR("LT"))="" S GMRVSTR("LT")="" ;hospital location list
"RTN","GMVHS",75,0)
HSKPING ; Housekeeping
"RTN","GMVHS",76,0)
 K ^UTILITY($J,"GMRVD")
"RTN","GMVHS",77,0)
 N GMVABNML,GMVDATA,GMVEND,GMVHTIEN,GMVID,GMVIEN,GMVLOOP,GMVMAX,GMVOCC,GMVRATE,GMVSORD,GMVSTART,GMVTIEN,GMVTYPE,GMVWTIEN
"RTN","GMVHS",78,0)
 D RANGE^GMVHS1
"RTN","GMVHS",79,0)
 F GMVLOOP=1:1:$L(GMRVSTR,";") D
"RTN","GMVHS",80,0)
 .S GMVTYPE=$P(GMRVSTR,";",GMVLOOP)
"RTN","GMVHS",81,0)
 .Q:GMVTYPE=""
"RTN","GMVHS",82,0)
 .S GMVMAX(GMVTYPE)=0
"RTN","GMVHS",83,0)
 .Q
"RTN","GMVHS",84,0)
 S GMVOCC=$P(GMRVSTR(0),U,3) ;max # of occurrences
"RTN","GMVHS",85,0)
 S GMVSORD=$P(GMRVSTR(0),U,4) ;sort order
"RTN","GMVHS",86,0)
 S GMVID=0 ;substitute IEN for GUID
"RTN","GMVHS",87,0)
 S GMVWTIEN=$$GETTYPEI("WT"),GMVHTIEN=$$GETTYPEI("HT")
"RTN","GMVHS",88,0)
 F GMRVSTR(1)=1:1:$L(GMRVSTR,";") S GMVTYPE=$P(GMRVSTR,";",GMRVSTR(1)) I $L(GMVTYPE) S GMVSTART=$S($P(GMRVSTR(0),U,1)>0:$P(GMRVSTR(0),U,1),1:0),GMVEND=$S($P(GMRVSTR(0),U,2):$P(GMRVSTR(0),U,2)+.000001,1:$$NOW^XLFDT()) D GETDATE
"RTN","GMVHS",89,0)
 K GMRVSTR
"RTN","GMVHS",90,0)
 Q
"RTN","GMVHS",91,0)
GETDATE ; Loop thru PXRMINDX xref
"RTN","GMVHS",92,0)
 S GMVTIEN=$O(^GMRD(120.51,"C",GMVTYPE,0)) ;vital type ien
"RTN","GMVHS",93,0)
 Q:'GMVTIEN
"RTN","GMVHS",94,0)
 S GMVLOOP=GMVEND
"RTN","GMVHS",95,0)
 F  S GMVLOOP=$O(^PXRMINDX(120.5,"PI",DFN,GMVTIEN,GMVLOOP),-1) Q:GMVLOOP<GMVSTART!(GMVLOOP'>0)!(GMVMAX(GMVTYPE)'<GMVOCC)  D GETNODE
"RTN","GMVHS",96,0)
 Q
"RTN","GMVHS",97,0)
GETNODE ; Get patient record
"RTN","GMVHS",98,0)
 N GMVCLIO,GMVQLIST,GMVQLOOP,GMVQNAME
"RTN","GMVHS",99,0)
 S GMVIEN=0
"RTN","GMVHS",100,0)
 F  S GMVIEN=$O(^PXRMINDX(120.5,"PI",DFN,GMVTIEN,GMVLOOP,GMVIEN)) Q:$L(GMVIEN)'>0!(GMVMAX(GMVTYPE)'<GMVOCC)  D
"RTN","GMVHS",101,0)
 .I GMVIEN=+GMVIEN D
"RTN","GMVHS",102,0)
 ..D F1205^GMVUTL(.GMVCLIO,GMVIEN)
"RTN","GMVHS",103,0)
 .I GMVIEN'=+GMVIEN D
"RTN","GMVHS",104,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GMVIEN)
"RTN","GMVHS",105,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVHS",106,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVHS",107,0)
 .I $L(GMRVSTR("LT")) Q:$P(GMVCLIO(0),U,5)'>0  Q:GMRVSTR("LT")'[("^"_$$GET1^DIQ(44,$P(GMVCLIO(0),U,5)_",",2,"I")_"^")  ;hospital location check
"RTN","GMVHS",108,0)
 .S GMVMAX(GMVTYPE)=GMVMAX(GMVTYPE)+1
"RTN","GMVHS",109,0)
 .S GMVRATE=$P(GMVCLIO(0),U,8)
"RTN","GMVHS",110,0)
 .D ZERONODE
"RTN","GMVHS",111,0)
 .S GMVQLIST=""
"RTN","GMVHS",112,0)
 .F GMVQLOOP=1:1 Q:$P($G(GMVCLIO(5)),U,GMVQLOOP)=""  D
"RTN","GMVHS",113,0)
 ..S GMVQNAME=$$FIELD^GMVGETQL($P(GMVCLIO(5),U,GMVQLOOP),1,"E")
"RTN","GMVHS",114,0)
 ..I GMVQNAME=""!(GMVQNAME=-1) Q
"RTN","GMVHS",115,0)
 ..S GMVQLIST=GMVQLIST_$S(GMVQLIST'="":";",1:"")_GMVQNAME
"RTN","GMVHS",116,0)
 .S $P(GMVDATA,U,17)=GMVQLIST
"RTN","GMVHS",117,0)
 .S $P(GMVDATA,U,10)=$P(GMVQLIST,";",1)
"RTN","GMVHS",118,0)
 .S $P(GMVDATA,U,11)=$P(GMVQLIST,";",2)
"RTN","GMVHS",119,0)
 .I GMVTYPE="PO2" D PO2($P(GMVCLIO(0),U,10))
"RTN","GMVHS",120,0)
 .D METRIC
"RTN","GMVHS",121,0)
 .D:$P(GMVCLIO(0),U,3)=GMVWTIEN BMI ;calculate BMI for weight
"RTN","GMVHS",122,0)
 .D:$$TEXT^GMVHS1(GMVRATE) ABNORMAL^GMVHS1
"RTN","GMVHS",123,0)
 .I GMVIEN=+GMVIEN S GMVID=GMVIEN
"RTN","GMVHS",124,0)
 .I GMVIEN'=+GMVIEN S GMVID=GMVID+1
"RTN","GMVHS",125,0)
 .D SET
"RTN","GMVHS",126,0)
 .Q
"RTN","GMVHS",127,0)
 Q
"RTN","GMVHS",128,0)
GETTYPEI(GMVTIEN) ; Return vital type (120.51) ien
"RTN","GMVHS",129,0)
 ; GMVTIEN = vital type abbreviation
"RTN","GMVHS",130,0)
 S GMVTIEN=$G(GMVTIEN)
"RTN","GMVHS",131,0)
 I GMVTIEN="" Q 0
"RTN","GMVHS",132,0)
 Q $O(^GMRD(120.51,"C",GMVTIEN,0))
"RTN","GMVHS",133,0)
 ;
"RTN","GMVHS",134,0)
ZERONODE ; Get zero node data
"RTN","GMVHS",135,0)
 S GMVDATA=$P($G(GMVCLIO(0)),U,1,8)_"^^^^^^^^^"
"RTN","GMVHS",136,0)
 Q
"RTN","GMVHS",137,0)
PO2(X) ; Get flow rate and liters/minute for Pulse Oximetry reading
"RTN","GMVHS",138,0)
 N GMVCONC,GMVFLOW
"RTN","GMVHS",139,0)
 S (GMVFLOW,GMVCONC)=""
"RTN","GMVHS",140,0)
 I X["%" D
"RTN","GMVHS",141,0)
 .S GMVCONC=$P(X,"%")
"RTN","GMVHS",142,0)
 .I GMVCONC["l/min" S GMVCONC=$P(GMVCONC,"l/min",2)
"RTN","GMVHS",143,0)
 I X["l/min" D
"RTN","GMVHS",144,0)
 .S GMVFLOW=$P(X,"l/min")
"RTN","GMVHS",145,0)
 .I GMVFLOW["%" S GMVFLOW=$P(GMVFLOW,"%",2)
"RTN","GMVHS",146,0)
 S GMVFLOW=$$STRIP^XLFSTR(GMVFLOW," ")
"RTN","GMVHS",147,0)
 S GMVCONC=$$STRIP^XLFSTR(GMVCONC," ")
"RTN","GMVHS",148,0)
 S $P(GMVDATA,U,15)=GMVFLOW
"RTN","GMVHS",149,0)
 S $P(GMVDATA,U,16)=GMVCONC
"RTN","GMVHS",150,0)
 Q
"RTN","GMVHS",151,0)
METRIC ; Calculate metric value for temperature, height, weight and
"RTN","GMVHS",152,0)
 ; circumference/girth
"RTN","GMVHS",153,0)
 N GMVMETRC
"RTN","GMVHS",154,0)
 S GMVMETRC=""
"RTN","GMVHS",155,0)
 Q:'$$TEXT^GMVHS1(GMVRATE)  ;quit if not a numeric reading
"RTN","GMVHS",156,0)
 I GMVTYPE="T" D
"RTN","GMVHS",157,0)
 .S GMVMETRC=$J(GMVRATE-32*5/9,0,1)
"RTN","GMVHS",158,0)
 .Q
"RTN","GMVHS",159,0)
 I GMVTYPE="HT" D
"RTN","GMVHS",160,0)
 .S GMVMETRC=$J(2.54*GMVRATE,0,2)
"RTN","GMVHS",161,0)
 .Q
"RTN","GMVHS",162,0)
 I GMVTYPE="WT" D
"RTN","GMVHS",163,0)
 .S GMVMETRC=$J(GMVRATE*.45359237,0,2)
"RTN","GMVHS",164,0)
 .Q
"RTN","GMVHS",165,0)
 I GMVTYPE="CG" D
"RTN","GMVHS",166,0)
 .S GMVMETRC=$J(2.54*GMVRATE,0,2)
"RTN","GMVHS",167,0)
 .Q
"RTN","GMVHS",168,0)
 I GMVTYPE="CVP" D
"RTN","GMVHS",169,0)
 .S GMVMETRC=$J(GMVRATE/1.36,0,2)
"RTN","GMVHS",170,0)
 .Q
"RTN","GMVHS",171,0)
 I GMVMETRC]"" S $P(GMVDATA,U,13)=GMVMETRC
"RTN","GMVHS",172,0)
 Q
"RTN","GMVHS",173,0)
BMI ; Calculate Body Mass Index
"RTN","GMVHS",174,0)
 N GMVBMI
"RTN","GMVHS",175,0)
 S GMVBMI=""
"RTN","GMVHS",176,0)
 S GMVBMI=$$CALCBMI^GMVHS1(GMVCLIO(0))
"RTN","GMVHS",177,0)
 S $P(GMVDATA,U,14)=GMVBMI
"RTN","GMVHS",178,0)
 Q
"RTN","GMVHS",179,0)
SET ; Set UTILITY($J,"GMRVD") node
"RTN","GMVHS",180,0)
 S:'GMVSORD ^UTILITY($J,"GMRVD",GMVTYPE,9999999-GMVLOOP,GMVID)=GMVDATA
"RTN","GMVHS",181,0)
 S:GMVSORD ^UTILITY($J,"GMRVD",9999999-GMVLOOP,GMVTYPE,GMVID)=GMVDATA
"RTN","GMVHS",182,0)
 Q
"RTN","GMVHS1")
0^29^B22061645^B8049761
"RTN","GMVHS1",1,0)
GMVHS1 ;HIOFO/FT-RETURN PATIENT DATA UTILITY (cont.) ;10/3/07
"RTN","GMVHS1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**3,23**;Oct 31, 2002;Build 25
"RTN","GMVHS1",3,0)
 ;
"RTN","GMVHS1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVHS1",5,0)
 ;  #4290 - ^PXRMINDX global     (controlled)
"RTN","GMVHS1",6,0)
 ;
"RTN","GMVHS1",7,0)
CALCBMI(GMVNODE) ; Calculate BMI for a record
"RTN","GMVHS1",8,0)
 ; GMVNODE = FILE 120.5 zero node of patient's weight
"RTN","GMVHS1",9,0)
 N GMVADATE,GMVAHGT,GMVBDATE,GMVBHGT,GMVBMI,GMVDFN,GMVH,GMVHTI,GMVIEN,GMVHGT,GMVWDATE,GMVWTI
"RTN","GMVHS1",10,0)
 S GMVHTI=$$GETTYPEI^GMVHS("HT") ;height ien
"RTN","GMVHS1",11,0)
 S GMVWTI=$$GETTYPEI^GMVHS("WT") ;weight ien
"RTN","GMVHS1",12,0)
 S GMVBMI="^",GMVNODE=$G(GMVNODE)
"RTN","GMVHS1",13,0)
 I $P(GMVNODE,U,3)'=GMVWTI Q GMVBMI  ;not a weight reading
"RTN","GMVHS1",14,0)
 I $P(GMVNODE,U,8)'>0 Q GMVBMI  ;weight'>0
"RTN","GMVHS1",15,0)
 S GMVDFN=$P(GMVNODE,U,2)
"RTN","GMVHS1",16,0)
 I 'GMVDFN Q GMVBMI
"RTN","GMVHS1",17,0)
 S GMVWDATE=$P(GMVNODE,U,1) ;date/time of weight
"RTN","GMVHS1",18,0)
 S GMVHGT=0
"RTN","GMVHS1",19,0)
 ; Look for exact date/time match for height entry
"RTN","GMVHS1",20,0)
 S GMVIEN=$O(^PXRMINDX(120.5,"PI",GMVDFN,GMVHTI,GMVWDATE,0))
"RTN","GMVHS1",21,0)
 I GMVIEN'="" S GMVHGT=$$HEIGHT(GMVIEN)
"RTN","GMVHS1",22,0)
 I $P(GMVHGT,U,1) S GMVBMI=$$CALC($P(GMVNODE,U,8),$P(GMVHGT,U,1)) Q GMVBMI
"RTN","GMVHS1",23,0)
 ; get height and date/time taken before weight
"RTN","GMVHS1",24,0)
 S GMVBDATE=GMVWDATE,GMVBHGT=0
"RTN","GMVHS1",25,0)
 F  S GMVBDATE=$O(^PXRMINDX(120.5,"PI",GMVDFN,GMVHTI,GMVBDATE),-1) Q:GMVBDATE'>0!(+GMVBHGT)  D
"RTN","GMVHS1",26,0)
 .S GMVIEN=0
"RTN","GMVHS1",27,0)
 .F  S GMVIEN=$O(^PXRMINDX(120.5,"PI",GMVDFN,GMVHTI,GMVBDATE,GMVIEN)) Q:$L(GMVIEN)'>0!(+GMVBHGT)  D
"RTN","GMVHS1",28,0)
 ..S GMVBHGT=$$HEIGHT(GMVIEN)
"RTN","GMVHS1",29,0)
 ..Q
"RTN","GMVHS1",30,0)
 .Q
"RTN","GMVHS1",31,0)
 ; get height and date/time taken after weight
"RTN","GMVHS1",32,0)
 S GMVADATE=GMVWDATE,GMVAHGT=0
"RTN","GMVHS1",33,0)
 F  S GMVADATE=$O(^PXRMINDX(120.5,"PI",GMVDFN,GMVHTI,GMVADATE)) Q:GMVADATE'>0!(+GMVAHGT)  D
"RTN","GMVHS1",34,0)
 .S GMVIEN=0
"RTN","GMVHS1",35,0)
 .F  S GMVIEN=$O(^PXRMINDX(120.5,"PI",GMVDFN,GMVHTI,GMVADATE,GMVIEN)) Q:$L(GMVIEN)'>0!(+GMVAHGT)  D
"RTN","GMVHS1",36,0)
 ..S GMVAHGT=$$HEIGHT(GMVIEN)
"RTN","GMVHS1",37,0)
 ..Q
"RTN","GMVHS1",38,0)
 .Q
"RTN","GMVHS1",39,0)
 S GMVBDATE=$P(GMVBHGT,U,2),GMVBHGT=$P(GMVBHGT,U,1)
"RTN","GMVHS1",40,0)
 S GMVADATE=$P(GMVAHGT,U,2),GMVAHGT=$P(GMVAHGT,U,1)
"RTN","GMVHS1",41,0)
 I $P(GMVBDATE,".",1)=$P(GMVWDATE,".",1) S GMVBMI=$$CALC($P(GMVNODE,U,8),GMVBHGT) Q GMVBMI
"RTN","GMVHS1",42,0)
 I $P(GMVADATE,".",1)=$P(GMVWDATE,".",1) S GMVBMI=$$CALC($P(GMVNODE,U,8),GMVAHGT) Q GMVBMI
"RTN","GMVHS1",43,0)
 S GMVH=$S(GMVBHGT>0:GMVBHGT,GMVAHGT>0:GMVAHGT,1:"")
"RTN","GMVHS1",44,0)
 I GMVH="" Q GMVBMI
"RTN","GMVHS1",45,0)
 S GMVBMI=$$CALC($P(GMVNODE,U,8),GMVH) Q GMVBMI
"RTN","GMVHS1",46,0)
 Q GMVBMI
"RTN","GMVHS1",47,0)
 ;
"RTN","GMVHS1",48,0)
HEIGHT(GMVIEN) ; Does record have a useable height value? Is yes, return that value.
"RTN","GMVHS1",49,0)
 ; GMVIEN = File 120.5 entry number
"RTN","GMVHS1",50,0)
 N GMVCLIO,GMVX
"RTN","GMVHS1",51,0)
 S GMVIEN=$G(GMVIEN),GMVX=0
"RTN","GMVHS1",52,0)
 I GMVIEN=+GMVIEN D
"RTN","GMVHS1",53,0)
 .D F1205^GMVUTL(.GMVCLIO,GMVIEN)
"RTN","GMVHS1",54,0)
 I GMVIEN'=+GMVIEN D
"RTN","GMVHS1",55,0)
 .D CLIO^GMVUTL(.GMVCLIO,GMVIEN)
"RTN","GMVHS1",56,0)
 S GMVCLIO(0)=$G(GMVCLIO(0))
"RTN","GMVHS1",57,0)
 S GMVX=$P(GMVCLIO(0),U,8)
"RTN","GMVHS1",58,0)
 I GMVX'>0 Q GMVX
"RTN","GMVHS1",59,0)
 S GMVX=GMVX_U_$P(GMVCLIO(0),U,1)
"RTN","GMVHS1",60,0)
 Q GMVX
"RTN","GMVHS1",61,0)
 ;
"RTN","GMVHS1",62,0)
CALC(GMVWT,GMVHT) ; Crunch the numbers, return bmi score
"RTN","GMVHS1",63,0)
 ; GMVWT (lb)
"RTN","GMVHS1",64,0)
 ; GMVHT (in)
"RTN","GMVHS1",65,0)
 N GMVX
"RTN","GMVHS1",66,0)
 S GMVWT=$G(GMVWT),GMVHT=$G(GMVHT)
"RTN","GMVHS1",67,0)
 I 'GMVWT!(GMVHT'>0) Q ""
"RTN","GMVHS1",68,0)
 S GMVWT=GMVWT/2.2,GMVHT=GMVHT*2.54/100
"RTN","GMVHS1",69,0)
 S GMVX=$J(GMVWT/(GMVHT*GMVHT),0,0) S GMVX=GMVX_$S(GMVX>27:"*",1:"")
"RTN","GMVHS1",70,0)
 Q GMVX
"RTN","GMVHS1",71,0)
 ;
"RTN","GMVHS1",72,0)
ABNORMAL ; Is reading outside of normal range?
"RTN","GMVHS1",73,0)
 N GMVASTRK,GMVDIA,GMVSYS
"RTN","GMVHS1",74,0)
 S GMVASTRK=""
"RTN","GMVHS1",75,0)
 I GMVTYPE="T" D
"RTN","GMVHS1",76,0)
 .S:GMVRATE>$P(GMVABNML("T"),U,1) GMVASTRK="*"
"RTN","GMVHS1",77,0)
 .S:GMVRATE<$P(GMVABNML("T"),U,2) GMVASTRK="*"
"RTN","GMVHS1",78,0)
 .Q
"RTN","GMVHS1",79,0)
 I GMVTYPE="P" D
"RTN","GMVHS1",80,0)
 .S:GMVRATE>$P(GMVABNML("P"),U,1) GMVASTRK="*"
"RTN","GMVHS1",81,0)
 .S:GMVRATE<$P(GMVABNML("P"),U,2) GMVASTRK="*"
"RTN","GMVHS1",82,0)
 .Q
"RTN","GMVHS1",83,0)
 I GMVTYPE="R" D
"RTN","GMVHS1",84,0)
 .S:GMVRATE>$P(GMVABNML("R"),U,1) GMVASTRK="*"
"RTN","GMVHS1",85,0)
 .S:GMVRATE<$P(GMVABNML("R"),U,2) GMVASTRK="*"
"RTN","GMVHS1",86,0)
 .Q
"RTN","GMVHS1",87,0)
 I GMVTYPE="BP" D
"RTN","GMVHS1",88,0)
 .S GMVSYS=$P(GMVRATE,"/",1)
"RTN","GMVHS1",89,0)
 .S GMVDIA=$S($P(GMVRATE,"/",3)="":$P(GMVRATE,"/",2),1:$P(GMVRATE,"/",3))
"RTN","GMVHS1",90,0)
 .S:GMVSYS>$P(GMVABNML("BP"),U,1) GMVASTRK="*"
"RTN","GMVHS1",91,0)
 .S:GMVSYS<$P(GMVABNML("BP"),U,2) GMVASTRK="*"
"RTN","GMVHS1",92,0)
 .S:GMVDIA>$P(GMVABNML("BP"),U,3) GMVASTRK="*"
"RTN","GMVHS1",93,0)
 .S:GMVDIA<$P(GMVABNML("BP"),U,4) GMVASTRK="*"
"RTN","GMVHS1",94,0)
 .Q
"RTN","GMVHS1",95,0)
 I GMVTYPE="CVP" D
"RTN","GMVHS1",96,0)
 .S:GMVRATE>$P(GMVABNML("CVP"),U,1) GMVASTRK="*"
"RTN","GMVHS1",97,0)
 .S:GMVRATE<$P(GMVABNML("CVP"),U,2) GMVASTRK="*"
"RTN","GMVHS1",98,0)
 .Q
"RTN","GMVHS1",99,0)
 I GMVTYPE="PO2" D
"RTN","GMVHS1",100,0)
 .S:GMVRATE<$P(GMVABNML("PO2"),U,2) GMVASTRK="*"
"RTN","GMVHS1",101,0)
 .Q
"RTN","GMVHS1",102,0)
 S $P(GMVDATA,U,12)=GMVASTRK
"RTN","GMVHS1",103,0)
 Q
"RTN","GMVHS1",104,0)
TEXT(RATE) ; Is rate a text code?
"RTN","GMVHS1",105,0)
 ; Returns 0 if RATE has a text code and 1 if a numeric reading
"RTN","GMVHS1",106,0)
 N GMVYES
"RTN","GMVHS1",107,0)
 S RATE=$G(RATE),GMVYES=1
"RTN","GMVHS1",108,0)
 I "REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR(RATE) S GMVYES=0
"RTN","GMVHS1",109,0)
 Q GMVYES
"RTN","GMVHS1",110,0)
 ;
"RTN","GMVHS1",111,0)
RANGE ; Find normal ranges and store in array
"RTN","GMVHS1",112,0)
 N GMVPIEN,GMVPNODE
"RTN","GMVHS1",113,0)
 S GMVABNML("T")="0^0" ;high^low
"RTN","GMVHS1",114,0)
 S GMVABNML("P")="0^0" ;high^low
"RTN","GMVHS1",115,0)
 S GMVABNML("R")="0^0" ;high^low
"RTN","GMVHS1",116,0)
 S GMVABNML("CVP")="0^0" ;high^low
"RTN","GMVHS1",117,0)
 S GMVABNML("PO2")="0^0" ;low
"RTN","GMVHS1",118,0)
 S GMVABNML("BP")="0^0^0^0" ;sys high^sys low^dia high^dia low
"RTN","GMVHS1",119,0)
 S GMVPIEN=$O(^GMRD(120.57,0))
"RTN","GMVHS1",120,0)
 Q:'GMVPIEN
"RTN","GMVHS1",121,0)
 S GMVPNODE=$G(^GMRD(120.57,GMVPIEN,1))
"RTN","GMVHS1",122,0)
 S GMVABNML("T")=$P(GMVPNODE,U,1)_U_$P(GMVPNODE,U,2)
"RTN","GMVHS1",123,0)
 S GMVABNML("P")=$P(GMVPNODE,U,3)_U_$P(GMVPNODE,U,4)
"RTN","GMVHS1",124,0)
 S GMVABNML("R")=$P(GMVPNODE,U,5)_U_$P(GMVPNODE,U,6)
"RTN","GMVHS1",125,0)
 S GMVABNML("BP")=$P(GMVPNODE,U,7)_U_$P(GMVPNODE,U,9)_U_$P(GMVPNODE,U,8)_U_$P(GMVPNODE,U,10)
"RTN","GMVHS1",126,0)
 S GMVABNML("CVP")=$P(GMVPNODE,U,11)_U_$P(GMVPNODE,U,12)
"RTN","GMVHS1",127,0)
 S GMVABNML("PO2")=""_U_$P(GMVPNODE,U,13)
"RTN","GMVHS1",128,0)
 Q
"RTN","GMVLAT0")
0^33^B31803306^B31312749
"RTN","GMVLAT0",1,0)
GMVLAT0 ;HOIFO/YH,FT-DISPLAY LATEST VITALS/MEASUREMENTS FOR A PATIENT ;9/27/07
"RTN","GMVLAT0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,3,23**;Oct 31, 2002;Build 25
"RTN","GMVLAT0",3,0)
 ;
"RTN","GMVLAT0",4,0)
 ; This routine uses the following IAs:
"RTN","GMVLAT0",5,0)
 ;  #4290 - ^PXRMINDX global       (controlled)
"RTN","GMVLAT0",6,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVLAT0",7,0)
 ;
"RTN","GMVLAT0",8,0)
EN1(DFN) ; Entry to extract the latest vitals/measurements for a patient
"RTN","GMVLAT0",9,0)
 ;called by GETLAT^GMVGETD
"RTN","GMVLAT0",10,0)
 N G,GJ,GBLANK,GMVCLIO,GMVLOOP,GMVQARRY,GMVQLIST,GMVQNAME,GMVUSER,GMVNUMBR,X,Y
"RTN","GMVLAT0",11,0)
 S GJ=0,GBLANK=""
"RTN","GMVLAT0",12,0)
 F X="T","P","R","PO2","BP","HT","WT","CVP","CG","PN" I $D(^GMRD(120.51,"C",X))  S GMR(X)=$O(^GMRD(120.51,"C",X,"")),Y=$P($G(^GMRD(120.51,GMR(X),0)),"^") Q:Y=""
"RTN","GMVLAT0",13,0)
 K GMRDT,GMRVWT,GMRVHT
"RTN","GMVLAT0",14,0)
 S X=""
"RTN","GMVLAT0",15,0)
 F  S X=$O(GMR(X)) Q:X=""  S GMRDATS="",GMRDAT=9999999 I GMR(X)>0 F  S GMRDAT=$O(^PXRMINDX(120.5,"PI",DFN,+GMR(X),GMRDAT),-1) Q:$S(GMRDAT'>0:1,GMRDATS>0:1,1:0)  D SETDATAR
"RTN","GMVLAT0",16,0)
 I '($D(GMRDATA)\10) S GJ=GJ+1,^TMP($J,"GRPC",GJ)="There are no results to report " G Q
"RTN","GMVLAT0",17,0)
 F X="T","P","R","PO2","BP","HT","WT","CVP","CG","PN" I $D(GMRDATA(X)) S GMRVDT="",(GMRVDT(1),GMVD)=0 F  S GMVD=$O(GMRDATA(X,GMVD)) Q:GMVD'>0  D WRTDT S GMVD(1)=0 F  S GMVD(1)=$O(GMRDATA(X,GMVD,GMVD(1))) Q:$L(GMVD(1))'>0  D
"RTN","GMVLAT0",18,0)
 . S GMVNUMBR=$P(GMRDATA(X,GMVD,GMVD(1)),U,8)
"RTN","GMVLAT0",19,0)
 . Q:GMVNUMBR=""  ;RATE cannot be null
"RTN","GMVLAT0",20,0)
 .; set flag to indicate RATE is a numeric reading
"RTN","GMVLAT0",21,0)
 . S GMVNUMBR=$$NUMBER(GMVNUMBR)
"RTN","GMVLAT0",22,0)
 . S GMVUSER=$P(GMRDATA(X,GMVD,GMVD(1)),U,6) ;user ien
"RTN","GMVLAT0",23,0)
 . S GMVUSER=$$PERSON^GMVUTL1(GMVUSER) ;user name
"RTN","GMVLAT0",24,0)
 . S GJ=GJ+1,^TMP($J,"GRPC",GJ)="",GMRVX(0)=$P(GMRDATA(X,GMVD,GMVD(1)),U,8) S GMRVX=X D:GMVNUMBR EN1^GMVSAS0
"RTN","GMVLAT0",25,0)
  .S:GMRVDT(1)=0 ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_$S(X="BP":"B/P",X="P":"Pulse",X="R":"Resp.",X="T":"Temp.",X="HT":"Ht.",X="CG":"Circ/Girth",X="WT":"Wt.",X="PO2":"Pulse Ox",X="PN":"Pain",1:X)_":"
"RTN","GMVLAT0",26,0)
 .I GMRVDT(1)=0 S GBLANK=$$REPEAT^XLFSTR(" ",13-$L(^TMP($J,"GRPC",GJ))),^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GBLANK_"("_GMRVDT_") " S GMRVDT(1)=1
"RTN","GMVLAT0",27,0)
 .S GBLANK=$$REPEAT^XLFSTR(" ",31-$L(^TMP($J,"GRPC",GJ))),^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GBLANK
"RTN","GMVLAT0",28,0)
 . I X="T" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" F  ("_$J(+GMRVX(0)-32*5/9,0,1)_" C)",1:"")
"RTN","GMVLAT0",29,0)
 .I X="WT" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" lb  ("_$J(GMRVX(0)*.45359237,0,2)_" kg)",1:"") S GMRVWT=GMRVX(0)/2.2
"RTN","GMVLAT0",30,0)
 .I X="HT" D
"RTN","GMVLAT0",31,0)
 ..S GMRVHT=(GMRVX(0)*2.54)/100
"RTN","GMVLAT0",32,0)
 ..I GMVNUMBR=0 S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0) Q
"RTN","GMVLAT0",33,0)
 ..S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_$S(GMRVX(0)\12:GMRVX(0)\12_" ft ",1:"")_$S(GMRVX(0)#12:GMRVX(0)#12_" in",1:"")_$S(GMVNUMBR=1:" ("_$J(GMRVX(0)*2.54,0,2)_" cm)",1:"")
"RTN","GMVLAT0",34,0)
 ..Q
"RTN","GMVLAT0",35,0)
 .I X="CG" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" in ("_$J(+GMRVX(0)/.3937,0,2)_" cm)",1:"")
"RTN","GMVLAT0",36,0)
 .I X="CVP" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:" cmH2O ("_$J(GMRVX(0)/1.36,0,1)_" mmHg)",1:"")
"RTN","GMVLAT0",37,0)
 .I X="PO2" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)_$S(GMVNUMBR=1:"% ",1:"")
"RTN","GMVLAT0",38,0)
 .I X="P"!(X="R")!(X="BP") S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GMRVX(0)
"RTN","GMVLAT0",39,0)
 .I X="PN" D  S ^TMP($J,"GRPC",GJ)=^(GJ)_GMRVX(0)
"RTN","GMVLAT0",40,0)
 ..Q:'GMVNUMBR  ;not a number
"RTN","GMVLAT0",41,0)
 ..I GMRVX(0)=0 S GMRVX(0)="0 - No pain" Q
"RTN","GMVLAT0",42,0)
 ..I GMRVX(0)=99 S GMRVX(0)="99 - Unable to respond" Q
"RTN","GMVLAT0",43,0)
 ..I GMRVX(0)=10 S GMRVX(0)="Pain class - 10 Worst imaginable pain" Q
"RTN","GMVLAT0",44,0)
 ..Q
"RTN","GMVLAT0",45,0)
 .S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_$S('$D(GMRVX(1)):"",'GMRVX(1):"",1:"*") K GMRVX
"RTN","GMVLAT0",46,0)
 .D CHAR
"RTN","GMVLAT0",47,0)
 .I X="WT",$G(GMRVWT)>0,$G(GMRVHT)>0 D
"RTN","GMVLAT0",48,0)
 ..S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"  _"_GMVUSER
"RTN","GMVLAT0",49,0)
 ..S GJ=GJ+1,GMRVHT(1)=$J(GMRVWT/(GMRVHT*GMRVHT),0,2),^TMP($J,"GRPC",GJ)="Body Mass Index:",GMVUSER="" D
"RTN","GMVLAT0",50,0)
 ...S GBLANK=$$REPEAT^XLFSTR(" ",29-$L(^TMP($J,"GRPC",GJ))),^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_GBLANK_GMRVHT(1)_$S(GMRVHT(1)>27:"*",1:"")
"RTN","GMVLAT0",51,0)
 ...Q
"RTN","GMVLAT0",52,0)
 ..Q
"RTN","GMVLAT0",53,0)
 .S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"  "_$S(GMVUSER]"":"_",1:"")_GMVUSER_"_"_$S(GMVD(1)=+GMVD(1):"Vitals",1:"CLIO")
"RTN","GMVLAT0",54,0)
 .Q
"RTN","GMVLAT0",55,0)
Q ; kill variables and quit
"RTN","GMVLAT0",56,0)
 K GMRVWT,GMRVHT,GMR,GMVD,GBP,GMRVARY,GMRVDA,GMRDATA,GMVDM,GLIN,GMRZZ
"RTN","GMVLAT0",57,0)
 K GMRVDT,GMROUT,%Y,GMRL,GMRDT,DIC,GMRDAT,GMRDATS,GMRSTR,GMRX,GMRVX,POP
"RTN","GMVLAT0",58,0)
 Q
"RTN","GMVLAT0",59,0)
SETDATAR ; get record IEN if not marked as entered-in-error
"RTN","GMVLAT0",60,0)
 S Y=""
"RTN","GMVLAT0",61,0)
 F  S Y=$O(^PXRMINDX(120.5,"PI",DFN,GMR(X),GMRDAT,Y)) Q:$L(Y)'>0!GMRDATS  D
"RTN","GMVLAT0",62,0)
 .I Y=+Y D
"RTN","GMVLAT0",63,0)
 ..D F1205^GMVUTL(.GMVCLIO,Y)
"RTN","GMVLAT0",64,0)
 .I Y'=+Y D
"RTN","GMVLAT0",65,0)
 ..D CLIO^GMVUTL(.GMVCLIO,Y)
"RTN","GMVLAT0",66,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVLAT0",67,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVLAT0",68,0)
 .S GMRL=GMVCLIO(0)
"RTN","GMVLAT0",69,0)
 .S GMVQLIST=""
"RTN","GMVLAT0",70,0)
 .F GMVLOOP=1:1 Q:$P(GMVCLIO(5),U,GMVLOOP)=""  D
"RTN","GMVLAT0",71,0)
 ..S GMVQNAME=$$FIELD^GMVGETQL($P(GMVCLIO(5),U,GMVLOOP),1,"E")
"RTN","GMVLAT0",72,0)
 ..I GMVQNAME=""!(GMVQNAME=-1) Q
"RTN","GMVLAT0",73,0)
 ..S GMVQLIST=GMVQLIST_$S(GMVQLIST'="":",",1:"")_GMVQNAME
"RTN","GMVLAT0",74,0)
 ..Q
"RTN","GMVLAT0",75,0)
 .D SETNODE
"RTN","GMVLAT0",76,0)
 .Q
"RTN","GMVLAT0",77,0)
 Q
"RTN","GMVLAT0",78,0)
SETNODE ; Set record node
"RTN","GMVLAT0",79,0)
 S GMRL1=$P(GMRL,"^") ;adding trailing zeros to time if necessary
"RTN","GMVLAT0",80,0)
 S $P(GMRL1,".",2)=$P(GMRL1,".",2)_"0000"
"RTN","GMVLAT0",81,0)
 S $P(GMRL1,".",2)=$E($P(GMRL1,".",2),1,4)
"RTN","GMVLAT0",82,0)
 S $P(GMRL,"^")=GMRL1
"RTN","GMVLAT0",83,0)
 K GMRL1
"RTN","GMVLAT0",84,0)
 S GMRDATA(X,$P(GMRL,U,1),Y)=GMRL,GMRDATS=1
"RTN","GMVLAT0",85,0)
 S GMVQARRY(X,$P(GMRL,U,1),Y)=GMVQLIST
"RTN","GMVLAT0",86,0)
 Q
"RTN","GMVLAT0",87,0)
WRTDT ;
"RTN","GMVLAT0",88,0)
 S GMRVDT=$E(GMVD,4,5)_"/"_$E(GMVD,6,7)_"/"_$E(GMVD,2,3)_"@"_$E($P(GMVD,".",2),1,2)_$S($E($P(GMVD,".",2),3,4)'="":":"_$E($P(GMVD,".",2),3,4),1:"")
"RTN","GMVLAT0",89,0)
 Q
"RTN","GMVLAT0",90,0)
CHAR ;
"RTN","GMVLAT0",91,0)
 ;S GMRZZ=$$WRITECH(GMVD(1),.GMRVARY,5)
"RTN","GMVLAT0",92,0)
 S GMRZZ=GMVQARRY(X,GMVD,GMVD(1))
"RTN","GMVLAT0",93,0)
 S:GMRZZ'=""&(X'="PO2") GMRZZ="("_GMRZZ_")"
"RTN","GMVLAT0",94,0)
 I X="PO2",$P(GMRDATA(X,GMVD,GMVD(1)),U,10)'="" S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"with supplemental O2" D
"RTN","GMVLAT0",95,0)
 . S GPO2=$P(GMRDATA(X,GMVD,GMVD(1)),U,10)
"RTN","GMVLAT0",96,0)
 . S ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" "_$S(GPO2["l/min":$P(GPO2," l/min")_" L/min",1:"")_$S(GPO2["l/min":$P(GPO2," l/min",2),1:GPO2)
"RTN","GMVLAT0",97,0)
 . K GPO2
"RTN","GMVLAT0",98,0)
 S:GMRZZ'="" ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_" "_GMRZZ K GMRZZ Q
"RTN","GMVLAT0",99,0)
 S:$G(GMRZZ)'="" ^TMP($J,"GRPC",GJ)=^TMP($J,"GRPC",GJ)_"  "_GMRZZ K GMRZZ
"RTN","GMVLAT0",100,0)
 Q
"RTN","GMVLAT0",101,0)
 ;SETBP ;
"RTN","GMVLAT0",102,0)
 ;D SETBP^GMVLATS
"RTN","GMVLAT0",103,0)
 ;Q
"RTN","GMVLAT0",104,0)
 ;WRITECH(GDA,GARRY,GN);
"RTN","GMVLAT0",105,0)
 ; Input data:
"RTN","GMVLAT0",106,0)
 ; GDA - Pointer to the patient vitals/measurements data file #120.5
"RTN","GMVLAT0",107,0)
 ; GARRY - qualifier data array for a measurement
"RTN","GMVLAT0",108,0)
 ;         GARRY(GDA,Print order,qualifier data)
"RTN","GMVLAT0",109,0)
 ; GN - Number of print order to print
"RTN","GMVLAT0",110,0)
 ;N GMRVDA,GDATA
"RTN","GMVLAT0",111,0)
 ;S GDATA="",GMRVDA(1)=0
"RTN","GMVLAT0",112,0)
 ;F  S GMRVDA(1)=$O(GARRY(GDA,GMRVDA(1))) Q:GMRVDA(1)'>0!(GMRVDA(1)>GN)  S GMRVDA(2)="" F  S GMRVDA(2)=$O(GARRY(GDA,GMRVDA(1),GMRVDA(2))) Q:GMRVDA(2)=""  D
"RTN","GMVLAT0",113,0)
 ;. S GDATA=GDATA_","_GMRVDA(2)
"RTN","GMVLAT0",114,0)
 ;. Q
"RTN","GMVLAT0",115,0)
 ;I $E(GDATA,1)="," S GDATA=$E(GDATA,2,$L(GDATA)) ;strip off leading comma
"RTN","GMVLAT0",116,0)
 ;Q GDATA
"RTN","GMVLAT0",117,0)
 ;
"RTN","GMVLAT0",118,0)
NUMBER(GMVRATE) ; Function determines if the RATE has a numeric reading or one
"RTN","GMVLAT0",119,0)
 ; of the text codes (e.g. REFUSED).
"RTN","GMVLAT0",120,0)
 ; Returns 0 if GMVRATE has a text code
"RTN","GMVLAT0",121,0)
 ;         1 if a numeric reading
"RTN","GMVLAT0",122,0)
 N GMVYES
"RTN","GMVLAT0",123,0)
 S GMVRATE=$G(GMVRATE)
"RTN","GMVLAT0",124,0)
 S GMVYES=1
"RTN","GMVLAT0",125,0)
 I "REFUSEDPASSUNAVAILABLE"[$$UP^XLFSTR(GMVRATE) S GMVYES=0
"RTN","GMVLAT0",126,0)
 Q GMVYES
"RTN","GMVLAT0",127,0)
 ;
"RTN","GMVPXRM")
0^48^B46095157^B36506457
"RTN","GMVPXRM",1,0)
GMVPXRM ;HIOFO/FT-API to return FILE 120.5 data ;01/20/09  13:11
"RTN","GMVPXRM",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**6,23**;Oct 31, 2002;Build 25
"RTN","GMVPXRM",3,0)
 ;
"RTN","GMVPXRM",4,0)
 ; This routine uses the following IAs:
"RTN","GMVPXRM",5,0)
 ;  #4113 - ^PXRMSXRM routine    (controlled) 
"RTN","GMVPXRM",6,0)
 ;  #4114 - ^PXRMINDX global     (controlled)
"RTN","GMVPXRM",7,0)
 ;  #5076 - ^MDCLIO1 calls       (private)
"RTN","GMVPXRM",8,0)
 ; #10103 - ^XLFDT calls         (supported)
"RTN","GMVPXRM",9,0)
 ; #10040 - FILE 44 references   (supported)
"RTN","GMVPXRM",10,0)
 ; #10141 - ^XPDUTL calls        (supported)
"RTN","GMVPXRM",11,0)
 ;
"RTN","GMVPXRM",12,0)
 ; Entry point(s) available for use by other packages:
"RTN","GMVPXRM",13,0)
 ;      EN is documented in IA #3647
"RTN","GMVPXRM",14,0)
 ;  VITALS is documented in IA #3647
"RTN","GMVPXRM",15,0)
 ;
"RTN","GMVPXRM",16,0)
EN(GMVDATA,GMVIEN,GMVIB) ; Returns data for a single FILE 120.5 entry.
"RTN","GMVPXRM",17,0)
 ; Input:
"RTN","GMVPXRM",18,0)
 ;   GMVDATA = Array name passed by reference       (required)
"RTN","GMVPXRM",19,0)
 ;    GMVIEN = IEN for FILE 120.5 or GUID for FILE 704.117    (required)
"RTN","GMVPXRM",20,0)
 ;     GMVIB = "I" for Internal value only
"RTN","GMVPXRM",21,0)
 ;             "B" for Internal and External values (default = B)
"RTN","GMVPXRM",22,0)
 ; 
"RTN","GMVPXRM",23,0)
 ; If GMVIB = "I", then
"RTN","GMVPXRM",24,0)
 ;   Output = GMVDATA(n)=internal value
"RTN","GMVPXRM",25,0)
 ; 
"RTN","GMVPXRM",26,0)
 ; If GMVIB = "B", then 
"RTN","GMVPXRM",27,0)
 ; Output: GMVDATA(n)=internal value^external value 
"RTN","GMVPXRM",28,0)
 ;
"RTN","GMVPXRM",29,0)
 ; where:
"RTN","GMVPXRM",30,0)
 ; GMVDATA(1)=.01 (DATE/TIME VITALS TAKEN)
"RTN","GMVPXRM",31,0)
 ; GMVDATA(2)=.02 (PATIENT)
"RTN","GMVPXRM",32,0)
 ; GMVDATA(3)=.03 (VITAL TYPE)
"RTN","GMVPXRM",33,0)
 ; GMVDATA(4)=.04 (DATE/TIME VITALS ENTERED)
"RTN","GMVPXRM",34,0)
 ; GMVDATA(5)=.05 (HOSPITAL LOCATION)
"RTN","GMVPXRM",35,0)
 ; GMVDATA(6)=.06 (ENTERED BY)
"RTN","GMVPXRM",36,0)
 ; GMVDATA(7)=1.2 (RATE)
"RTN","GMVPXRM",37,0)
 ; GMVDATA(8)=1.4 (SUPPLEMENTAL O2)
"RTN","GMVPXRM",38,0)
 ; GMVDATA(9)=2   (ENTERED IN ERROR)
"RTN","GMVPXRM",39,0)
 ; GMVDATA(10)=3  (ERROR ENTERED BY)
"RTN","GMVPXRM",40,0)
 ; GMVDATA(11,n)=4 (REASON ENTERED IN ERROR)  <--multiple
"RTN","GMVPXRM",41,0)
 ; GMVDATA(12,n)=5 (QUALIFIER)                <--multiple
"RTN","GMVPXRM",42,0)
 ;
"RTN","GMVPXRM",43,0)
 ; If the lookup failed then: GMVDATA(1)=-1^error text
"RTN","GMVPXRM",44,0)
 ;
"RTN","GMVPXRM",45,0)
 N GMVCNT,GMVIEN1,GMVLIST,GMVLEN,GMVLOOP,GMVTEMP,TEMP,TEMP2,TEMP5,TP,EM
"RTN","GMVPXRM",46,0)
 I $G(GMVIB)'="I",$G(GMVIB)'="B" S GMVIB="B"
"RTN","GMVPXRM",47,0)
 I $G(GMVIEN)="" S GMVDATA(1)="-1^Record Number is Null" Q
"RTN","GMVPXRM",48,0)
 I GMVIEN=+GMVIEN D
"RTN","GMVPXRM",49,0)
 .D F1205^GMVUTL(.GMVTEMP,GMVIEN,1)
"RTN","GMVPXRM",50,0)
 .S TEMP=$G(GMVTEMP(0))
"RTN","GMVPXRM",51,0)
 .S TEMP2=$G(GMVTEMP(2))
"RTN","GMVPXRM",52,0)
 .S TEMP5=$G(GMVTEMP(5))
"RTN","GMVPXRM",53,0)
 .Q
"RTN","GMVPXRM",54,0)
 I GMVIEN'=+GMVIEN D
"RTN","GMVPXRM",55,0)
 .D CLIO^GMVUTL(.GMVTEMP,GMVIEN)
"RTN","GMVPXRM",56,0)
 .S TEMP=$G(GMVTEMP(0))
"RTN","GMVPXRM",57,0)
 .S TEMP2=$G(GMVTEMP(2))
"RTN","GMVPXRM",58,0)
 .S TEMP5=$G(GMVTEMP(5))
"RTN","GMVPXRM",59,0)
 .Q
"RTN","GMVPXRM",60,0)
 I TEMP="" D  Q
"RTN","GMVPXRM",61,0)
 .S GMVDATA(1)="-1^The entry does not exist"
"RTN","GMVPXRM",62,0)
 .Q
"RTN","GMVPXRM",63,0)
 ;
"RTN","GMVPXRM",64,0)
 S GMVDATA(1)=$P(TEMP,U,1)
"RTN","GMVPXRM",65,0)
 S GMVDATA(2)=$P(TEMP,U,2)
"RTN","GMVPXRM",66,0)
 S GMVDATA(3)=$P(TEMP,U,3)
"RTN","GMVPXRM",67,0)
 S GMVDATA(4)=$P(TEMP,U,4)
"RTN","GMVPXRM",68,0)
 S GMVDATA(5)=$P(TEMP,U,5)
"RTN","GMVPXRM",69,0)
 I '$D(^SC(+GMVDATA(5),0)) S GMVDATA(5)=0
"RTN","GMVPXRM",70,0)
 S GMVDATA(6)=$P(TEMP,U,6)
"RTN","GMVPXRM",71,0)
 S GMVDATA(7)=$P(TEMP,U,8)
"RTN","GMVPXRM",72,0)
 S GMVDATA(8)=$P(TEMP,U,10)
"RTN","GMVPXRM",73,0)
 S GMVDATA(9)=$P(TEMP2,U,1)
"RTN","GMVPXRM",74,0)
 S GMVDATA(10)=$P(TEMP2,U,2)
"RTN","GMVPXRM",75,0)
 S GMVCNT=0
"RTN","GMVPXRM",76,0)
 S GMVLIST=$P(TEMP2,U,3)
"RTN","GMVPXRM",77,0)
 S GMVLEN=$L(GMVLIST,"~")
"RTN","GMVPXRM",78,0)
 F GMVCNT=1:1:GMVLEN D
"RTN","GMVPXRM",79,0)
 .S GMVDATA(11,GMVCNT)=$P(GMVLIST,"~",GMVCNT)
"RTN","GMVPXRM",80,0)
 .Q
"RTN","GMVPXRM",81,0)
 I GMVCNT=0 S GMVDATA(11,1)=""
"RTN","GMVPXRM",82,0)
 S GMVLIST=$G(TEMP5),GMVCNT=0
"RTN","GMVPXRM",83,0)
 F GMVLOOP=1:1 Q:$P(GMVLIST,U,GMVLOOP)=""  D
"RTN","GMVPXRM",84,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVPXRM",85,0)
 .S GMVDATA(12,GMVCNT)=$P(GMVLIST,U,GMVLOOP)
"RTN","GMVPXRM",86,0)
 .Q
"RTN","GMVPXRM",87,0)
 I GMVCNT=0 S GMVDATA(12,1)=""
"RTN","GMVPXRM",88,0)
 ;
"RTN","GMVPXRM",89,0)
 Q:GMVIB="I"
"RTN","GMVPXRM",90,0)
 ;
"RTN","GMVPXRM",91,0)
 S GMVDATA(1)=$P(GMVDATA(1),U,1)_U_$$EXTERNAL^DILFD(120.5,.01,"",$P(GMVDATA(1),U,1),.EM)
"RTN","GMVPXRM",92,0)
 S GMVDATA(2)=$P(GMVDATA(2),U,1)_U_$$EXTERNAL^DILFD(120.5,.02,"",$P(GMVDATA(2),U,1),.EM)
"RTN","GMVPXRM",93,0)
 S GMVDATA(3)=$P(GMVDATA(3),U,1)_U_$$EXTERNAL^DILFD(120.5,.03,"",$P(GMVDATA(3),U,1),.EM)
"RTN","GMVPXRM",94,0)
 S GMVDATA(4)=$P(GMVDATA(4),U,1)_U_$$EXTERNAL^DILFD(120.5,.04,"",$P(GMVDATA(4),U,1),.EM)
"RTN","GMVPXRM",95,0)
 S GMVDATA(5)=$P(GMVDATA(5),U,1)_U_$$EXTERNAL^DILFD(120.5,.05,"",$P(GMVDATA(5),U,1),.EM)
"RTN","GMVPXRM",96,0)
 S GMVDATA(6)=$P(GMVDATA(6),U,1)_U_$$EXTERNAL^DILFD(120.5,.06,"",$P(GMVDATA(6),U,1),.EM)
"RTN","GMVPXRM",97,0)
 S GMVDATA(7)=$P(GMVDATA(7),U,1)_U_$P(GMVDATA(7),U,1) ;same
"RTN","GMVPXRM",98,0)
 S GMVDATA(8)=$P(GMVDATA(8),U,1)_U_$P(GMVDATA(8),U,1) ;same
"RTN","GMVPXRM",99,0)
 S GMVDATA(9)=$P(GMVDATA(9),U,1)_U_$$EXTERNAL^DILFD(120.5,2,"",$P(GMVDATA(9),U,1),.EM)
"RTN","GMVPXRM",100,0)
 S GMVDATA(10)=$P(GMVDATA(10),U,1)_U_$$EXTERNAL^DILFD(120.5,3,"",$P(GMVDATA(10),U,1),.EM)
"RTN","GMVPXRM",101,0)
 ;
"RTN","GMVPXRM",102,0)
 ;loop through entered-in-error reason multiple
"RTN","GMVPXRM",103,0)
 S (GMVCNT,GMVIEN1)=0
"RTN","GMVPXRM",104,0)
 F  S GMVIEN1=$O(GMVDATA(11,GMVIEN1)) Q:'GMVIEN1  D
"RTN","GMVPXRM",105,0)
 .S TP=+$P(GMVDATA(11,GMVIEN1),U,1)
"RTN","GMVPXRM",106,0)
 .Q:'TP
"RTN","GMVPXRM",107,0)
 .S GMVDATA(11,GMVIEN1)=TP_U_$$EXTERNAL^DILFD(120.506,.01,"",TP,.EM)
"RTN","GMVPXRM",108,0)
 .S GMVCNT=1
"RTN","GMVPXRM",109,0)
 .Q
"RTN","GMVPXRM",110,0)
 I GMVCNT=0 S GMVDATA(11,1)="^"
"RTN","GMVPXRM",111,0)
 ;loop through qualifier multiple
"RTN","GMVPXRM",112,0)
 S (GMVCNT,GMVIEN1)=0
"RTN","GMVPXRM",113,0)
 F  S GMVIEN1=$O(GMVDATA(12,GMVIEN1)) Q:'GMVIEN1  D
"RTN","GMVPXRM",114,0)
 .S TP=+$P(GMVDATA(12,GMVIEN1),U,1)
"RTN","GMVPXRM",115,0)
 .Q:'TP
"RTN","GMVPXRM",116,0)
 .S GMVDATA(12,GMVIEN1)=TP_U_$P($G(^GMRD(120.52,+TP,0)),U,1)
"RTN","GMVPXRM",117,0)
 .S GMVCNT=1
"RTN","GMVPXRM",118,0)
 .Q
"RTN","GMVPXRM",119,0)
 I GMVCNT=0 S GMVDATA(12,1)="^"
"RTN","GMVPXRM",120,0)
 Q
"RTN","GMVPXRM",121,0)
 ;
"RTN","GMVPXRM",122,0)
VITALS ; This entry point is for use by the Clinical Reminders package
"RTN","GMVPXRM",123,0)
 ; to re-index the ACR cross-reference nodes for FILE 120.5.
"RTN","GMVPXRM",124,0)
 ;
"RTN","GMVPXRM",125,0)
 ; a) This entry point kills the ACR cross-reference nodes for ^PXRMINDX(120.5).
"RTN","GMVPXRM",126,0)
 ; b) Re-builds the ACR cross-reference nodes.
"RTN","GMVPXRM",127,0)
 ; c) Calls the Clinical Reminders package to generate a mail message
"RTN","GMVPXRM",128,0)
 ;    summarizing the rebuilding of the ACR cross-reference.
"RTN","GMVPXRM",129,0)
 ;
"RTN","GMVPXRM",130,0)
 N DAS,DATE,DFN,END,ENTRIES,ETEXT,GLOBAL,IND,NE,NE1,NE2,NERROR
"RTN","GMVPXRM",131,0)
 N START,TEMP,TENP,TEXT,VT,GMVCLIO,GMVTYPE,GMVLOOP,GMVIEN
"RTN","GMVPXRM",132,0)
 S GLOBAL=$$GET1^DID(120.5,"","","GLOBAL NAME")
"RTN","GMVPXRM",133,0)
 ; Don't leave any old cross-reference nodes around.
"RTN","GMVPXRM",134,0)
 K ^PXRMINDX(120.5)
"RTN","GMVPXRM",135,0)
 S ENTRIES=$P(^GMR(120.5,0),U,4)
"RTN","GMVPXRM",136,0)
 S TENP=ENTRIES/10
"RTN","GMVPXRM",137,0)
 S TENP=+$P(TENP,".",1)
"RTN","GMVPXRM",138,0)
 D BMES^XPDUTL("Building index for VITALS DATA.")
"RTN","GMVPXRM",139,0)
 ;S TEXT="There are "_ENTRIES_" entries to process."
"RTN","GMVPXRM",140,0)
 ;D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",141,0)
 S START=$H
"RTN","GMVPXRM",142,0)
 S (DAS,IND,NE,NE1,NE2,NERROR)=0
"RTN","GMVPXRM",143,0)
 F  S DAS=+$O(^GMR(120.5,DAS)) Q:DAS=0  D
"RTN","GMVPXRM",144,0)
 . S IND=IND+1
"RTN","GMVPXRM",145,0)
 . I IND#TENP=0 D
"RTN","GMVPXRM",146,0)
 .. S TEXT="Processing entry "_IND
"RTN","GMVPXRM",147,0)
 .. D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",148,0)
 . I IND#10000=0 W "."
"RTN","GMVPXRM",149,0)
 . S TEMP=^GMR(120.5,DAS,0)
"RTN","GMVPXRM",150,0)
 . I $P(TEMP,U,1)'?7N1"."1.6N S NE1=NE1+1 Q
"RTN","GMVPXRM",151,0)
 . I $P(TEMP,U,2)'>0 S NE1=NE1+1 Q
"RTN","GMVPXRM",152,0)
 . I $P(TEMP,U,3)'>0 S NE1=NE1+1 Q
"RTN","GMVPXRM",153,0)
 . S DATE=$P(TEMP,U,1),DFN=$P(TEMP,U,2),VT=$P(TEMP,U,3)
"RTN","GMVPXRM",154,0)
 .;If this entry is marked as entered-in-error do not index it.
"RTN","GMVPXRM",155,0)
 . I $P($G(^GMR(120.5,DAS,2)),U,1) S NE2=NE2+1 Q
"RTN","GMVPXRM",156,0)
 . S ^PXRMINDX(120.5,"IP",VT,DFN,DATE,DAS)=""
"RTN","GMVPXRM",157,0)
 . S ^PXRMINDX(120.5,"PI",DFN,VT,DATE,DAS)=""
"RTN","GMVPXRM",158,0)
 . S NE=NE+1
"RTN","GMVPXRM",159,0)
 . Q
"RTN","GMVPXRM",160,0)
 ; Get vital type iens
"RTN","GMVPXRM",161,0)
 F GMVLOOP="BP","CG","CVP","HT","P","PN","PO2","R","T","WT" D
"RTN","GMVPXRM",162,0)
 .S GMVIEN=$O(^GMRD(120.51,"C",GMVLOOP,0))
"RTN","GMVPXRM",163,0)
 .Q:'GMVIEN
"RTN","GMVPXRM",164,0)
 .S GMVTYPE(GMVIEN)=""
"RTN","GMVPXRM",165,0)
 .Q
"RTN","GMVPXRM",166,0)
 K ^TMP($J)
"RTN","GMVPXRM",167,0)
 ; get records from Clinical Observations
"RTN","GMVPXRM",168,0)
 I $T(QRYDATE^MDCLIO1)]"" D
"RTN","GMVPXRM",169,0)
 .D QRYDATE^MDCLIO1("^TMP($J)",3070101,$$FMADD^XLFDT($$NOW^XLFDT(),,24))
"RTN","GMVPXRM",170,0)
 .S GMVLOOP=0
"RTN","GMVPXRM",171,0)
 .F  S GMVLOOP=$O(^TMP($J,GMVLOOP)) Q:'GMVLOOP  D
"RTN","GMVPXRM",172,0)
 ..S DAS=^TMP($J,GMVLOOP)
"RTN","GMVPXRM",173,0)
 ..Q:DAS=""
"RTN","GMVPXRM",174,0)
 ..D CLIO^GMVUTL(.GMVCLIO,DAS)
"RTN","GMVPXRM",175,0)
 ..S GMVCLIO(0)=$G(GMVCLIO(0))
"RTN","GMVPXRM",176,0)
 ..I GMVCLIO(0)="" S NE1=NE1+1 Q
"RTN","GMVPXRM",177,0)
 ..I $P(GMVCLIO(0),U,1)'?7N1"."1.6N S NE1=NE1+1 Q
"RTN","GMVPXRM",178,0)
 ..I $P(GMVCLIO(0),U,2)'>0 S NE1=NE1+1 Q
"RTN","GMVPXRM",179,0)
 ..I $P(GMVCLIO(0),U,3)'>0 S NE1=NE1+1 Q
"RTN","GMVPXRM",180,0)
 ..I '$D(GMVTYPE($P(GMVCLIO(0),U,3))) Q  ;not a vitals entry
"RTN","GMVPXRM",181,0)
 ..S DATE=$P(GMVCLIO(0),U,1),DFN=$P(GMVCLIO(0),U,2),VT=$P(GMVCLIO(0),U,3)
"RTN","GMVPXRM",182,0)
 ..S ^PXRMINDX(120.5,"IP",VT,DFN,DATE,DAS)=""
"RTN","GMVPXRM",183,0)
 ..S ^PXRMINDX(120.5,"PI",DFN,VT,DATE,DAS)=""
"RTN","GMVPXRM",184,0)
 ..S NE=NE+1
"RTN","GMVPXRM",185,0)
 ..Q
"RTN","GMVPXRM",186,0)
 .Q
"RTN","GMVPXRM",187,0)
 S END=$H
"RTN","GMVPXRM",188,0)
 S TEXT="  VITAL MEASUREMENTS entries indexed: "_NE
"RTN","GMVPXRM",189,0)
 D BMES^XPDUTL(TEXT)
"RTN","GMVPXRM",190,0)
 S TEXT="             Bad entries not indexed: "_NE1
"RTN","GMVPXRM",191,0)
 D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",192,0)
 S TEXT="Entered-in-Error entries not indexed: "_NE2
"RTN","GMVPXRM",193,0)
 D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",194,0)
 S TEXT=" "
"RTN","GMVPXRM",195,0)
 D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",196,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","GMVPXRM",197,0)
 ;Send a MailMan message with the results.
"RTN","GMVPXRM",198,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","GMVPXRM",199,0)
 S ^PXRMINDX(120.5,"GLOBAL NAME")=$$GET1^DID(120.5,"","","GLOBAL NAME")
"RTN","GMVPXRM",200,0)
 S ^PXRMINDX(120.5,"BUILT BY")=DUZ
"RTN","GMVPXRM",201,0)
 S ^PXRMINDX(120.5,"DATE BUILT")=$$NOW^XLFDT
"RTN","GMVPXRM",202,0)
 Q
"RTN","GMVPXRM",203,0)
 ;
"RTN","GMVPXRM",204,0)
SVITAL(X,DA) ; Set ACR index entry
"RTN","GMVPXRM",205,0)
 ; X(1)=DATE/TIME, X(2)=DFN, X(3)=VITAL TYPE, X(4)=ENTERED IN ERROR
"RTN","GMVPXRM",206,0)
 ; Do not index entries that are marked as entered-in-error.
"RTN","GMVPXRM",207,0)
 I $G(X(4)) Q
"RTN","GMVPXRM",208,0)
 S ^PXRMINDX(120.5,"IP",X(3),X(2),X(1),DA)=""
"RTN","GMVPXRM",209,0)
 S ^PXRMINDX(120.5,"PI",X(2),X(3),X(1),DA)=""
"RTN","GMVPXRM",210,0)
 Q
"RTN","GMVPXRM",211,0)
 ;
"RTN","GMVPXRM",212,0)
KVITAL(X,DA) ; Delete ACR index entry
"RTN","GMVPXRM",213,0)
 K ^PXRMINDX(120.5,"IP",X(3),X(2),X(1),DA)
"RTN","GMVPXRM",214,0)
 K ^PXRMINDX(120.5,"PI",X(2),X(3),X(1),DA)
"RTN","GMVPXRM",215,0)
 Q
"RTN","GMVSC0")
0^40^B17931365^B17816371
"RTN","GMVSC0",1,0)
GMVSC0 ;HOIFO/MD,YH,FT-CUMULATIVE VITALS/MEASUREMENTS FOR PATIENT OVER GIVEN DATE RANGE ;6/6/07
"RTN","GMVSC0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVSC0",3,0)
 ;
"RTN","GMVSC0",4,0)
 ; This routine uses the following IAs:
"RTN","GMVSC0",5,0)
 ; #10039 - FILE 42 references     (supported)
"RTN","GMVSC0",6,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVSC0",7,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVSC0",8,0)
 ;
"RTN","GMVSC0",9,0)
EN1(RESULT,GMVDATA) ; GMV CUMULATIVE REPORT [RPC entry point]
"RTN","GMVSC0",10,0)
 ; Cumulative Vitals Report
"RTN","GMVSC0",11,0)
 ; DFN      - patient internal entry number (FILE 2)
"RTN","GMVSC0",12,0)
 ; GMRVSDT  - start date/time of report range
"RTN","GMVSC0",13,0)
 ; GMRVFDT  - end date/time of report range
"RTN","GMVSC0",14,0)
 ; GMVDEV   - device name
"RTN","GMVSC0",15,0)
 ; GMVIEN   - device internal entry name (FILE 3.5)
"RTN","GMVSC0",16,0)
 ; GMVPDT   - date/time to print the report
"RTN","GMVSC0",17,0)
 ; GMVWARD  - ward internal entry number (FILE 42)
"RTN","GMVSC0",18,0)
 ; GMVHLOC  - hospital location internal entry number (FILE 44)
"RTN","GMVSC0",19,0)
 ; GMVRMLST - list of room numbers separated by commas (e.g., 200,210)
"RTN","GMVSC0",20,0)
 ;
"RTN","GMVSC0",21,0)
 N DFN,GMRVSDT,GMRVFDT,GMVDEV,GMVIEN,GMVPDT,GMVWARD,GMVHLOC,GMVRMLST
"RTN","GMVSC0",22,0)
 S DFN=$P(GMVDATA,U,1),GMRVSDT=$P(GMVDATA,U,2),GMRVFDT=$P(GMVDATA,U,3),GMVDEV=$P(GMVDATA,U,5),GMVIEN=+$P(GMVDATA,U,6),GMVPDT=$P(GMVDATA,U,7),GMVWARD=$P(GMVDATA,U,8),GMVHLOC=$P(GMVDATA,U,9),GMVRMLST=$P(GMVDATA,U,10)
"RTN","GMVSC0",23,0)
 S ZTIO=GMVDEV ;device
"RTN","GMVSC0",24,0)
 S ZTDTH=$S($G(GMVPDT)>0:GMVPDT,1:$$NOW^XLFDT()) ;date/time to print
"RTN","GMVSC0",25,0)
 S (ZTSAVE("DFN"),ZTSAVE("GMRVSDT"),ZTSAVE("GMRVFDT"))=""
"RTN","GMVSC0",26,0)
 S (ZTSAVE("GMVWARD"),ZTSAVE("GMVHLOC"),ZTSAVE("GMVRMLST"))=""
"RTN","GMVSC0",27,0)
 S ZTDESC="Cumulative vital/measurement report"
"RTN","GMVSC0",28,0)
 S ZTRTN="START^GMVSC0"
"RTN","GMVSC0",29,0)
 D ^%ZTLOAD
"RTN","GMVSC0",30,0)
 S RESULT=$S($G(ZTSK)>0:"Report sent to device. Task #: "_ZTSK,1:"Unable to task the report.")
"RTN","GMVSC0",31,0)
 K ZTSK,ZTIO,ZTDTH,ZTSAVE,ZTDESC,ZTRTN
"RTN","GMVSC0",32,0)
 Q
"RTN","GMVSC0",33,0)
START ; Start the report output
"RTN","GMVSC0",34,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","GMVSC0",35,0)
 ; if selected roombeds, then set up GMVROOM array
"RTN","GMVSC0",36,0)
 I $L(GMVRMLST)>0 D
"RTN","GMVSC0",37,0)
 .F GMVLOOP=1:1 Q:$P(GMVRMLST,",",GMVLOOP)=""  D
"RTN","GMVSC0",38,0)
 ..S GMVROOM($P(GMVRMLST,",",GMVLOOP))=""
"RTN","GMVSC0",39,0)
 ..Q
"RTN","GMVSC0",40,0)
 .Q
"RTN","GMVSC0",41,0)
 S GMVEDB=$S(DFN>0:"P",GMVRMLST]"":"S",1:"A") ;P is one patient, A is whole ward, S is selected rooms
"RTN","GMVSC0",42,0)
 S GMVWARD(1)=$S(GMVWARD>0:$P($G(^DIC(42,GMVWARD,0)),U,1),1:"") ;ward name
"RTN","GMVSC0",43,0)
 I $G(GMVEDB)="P" D
"RTN","GMVSC0",44,0)
 .D DEM^VADPT,INP^VADPT
"RTN","GMVSC0",45,0)
 .S GMRRMBD=$S(VAIN(5)'="":VAIN(5),1:"  BLANK") ;roombed
"RTN","GMVSC0",46,0)
 .S GMVNAME=$S(VADM(1)'="":VADM(1),1:"  BLANK") ;patient name
"RTN","GMVSC0",47,0)
 .S GMVWARD=$P(VAIN(4),"^") ;ward ien
"RTN","GMVSC0",48,0)
 .S GMVWARD(1)=$P(VAIN(4),"^",2) ;ward name
"RTN","GMVSC0",49,0)
 .D KVAR^VADPT K VA ;kill VADPT variables
"RTN","GMVSC0",50,0)
 .S ^TMP($J,GMRRMBD,GMVNAME,DFN)=""
"RTN","GMVSC0",51,0)
 E  D WARD^GMVDS1 ;returns TMP global with list of patients
"RTN","GMVSC0",52,0)
 S (GMROUT,GMRPG)=0
"RTN","GMVSC0",53,0)
 S GMVRANGE=$$FMTE^XLFDT(GMRVSDT)_"-"_$$FMTE^XLFDT(GMRVFDT)
"RTN","GMVSC0",54,0)
 D NOW^%DTC S Y=% D D^DIQ
"RTN","GMVSC0",55,0)
 S GMRPDT=$P(Y,"@")_" ("_$P($P(Y,"@",2),":",1,2)_")"
"RTN","GMVSC0",56,0)
 S $P(GMRDSH,"-",80)=""
"RTN","GMVSC0",57,0)
 U IO
"RTN","GMVSC0",58,0)
 S GMRRMBD=""
"RTN","GMVSC0",59,0)
 N GPEDIS S GPEDIS=$O(^GMRD(120.52,"B","DORSALIS PEDIS",0)) Q:GPEDIS'>0
"RTN","GMVSC0",60,0)
 F  S GMRRMBD=$O(^TMP($J,GMRRMBD)) Q:GMRRMBD=""!GMROUT  S GMRNAM="" F  S GMRNAM=$O(^TMP($J,GMRRMBD,GMRNAM)) Q:GMRNAM=""!GMROUT  S DFN=0 F  S DFN=$O(^TMP($J,GMRRMBD,GMRNAM,DFN)) Q:DFN'>0!GMROUT  S GMRPG=0 D WRT Q:GMROUT  D EN1^GMVSC1
"RTN","GMVSC0",61,0)
Q ; kill variables and quit
"RTN","GMVSC0",62,0)
 D Q^GMVSC1
"RTN","GMVSC0",63,0)
 K ^TMP($J)
"RTN","GMVSC0",64,0)
 K GMRBMI,GMRVHT,GMRINF,GMRPG,GMREDB,GMRNAM,GMRRMBD,GMRVWLOC,GMRWARD,GMRMSL,GMRROOM,GMRRMST,GMRVHLOC,GMRLEN,GMRI,GMROUT,GMRVSDT,GMRVFDT,GPRT,GMVLOOP
"RTN","GMVSC0",65,0)
 K GMVRMLST,GMVRANGE
"RTN","GMVSC0",66,0)
 D ^%ZISC
"RTN","GMVSC0",67,0)
 Q
"RTN","GMVSC0",68,0)
FOOTER ;REPORT FOOTER {called from GMVSC1, GMVSC2} 
"RTN","GMVSC0",69,0)
 W !!,"*** (E) - Error entry",!! W:VADM(1)'="" ?$X-3,$E(VADM(1),1,15) W:VADM(2)'="" ?17,$E($P(VADM(2),"^",2),8,11) W:VADM(3)'="" ?30,$P(VADM(3),"^",2) W:VADM(4)'="" ?43,$P(VADM(4),"^")_" YRS"
"RTN","GMVSC0",70,0)
 W:VADM(5)'="" ?51,$P(VADM(5),"^",2)
"RTN","GMVSC0",71,0)
 W ?65,"VAF 10-7987j" W !,"Unit: "_$S($P(VAIN(4),"^",2)'="":$P(VAIN(4),"^",2),1:"     "),?32,"Room: "_$S($P(VAIN(5),"^")'="":$P(VAIN(5),"^"),1:"   "),!
"RTN","GMVSC0",72,0)
 I '$D(GMRVHLOC) S GMRVHLOC=$$HOSPLOC^GMVUTL1(+$G(VAIN(4)))
"RTN","GMVSC0",73,0)
 W "Division: "_$$DIVISION^GMVUTL1(+GMRVHLOC),!
"RTN","GMVSC0",74,0)
 Q
"RTN","GMVSC0",75,0)
WRT ;
"RTN","GMVSC0",76,0)
 S GMR1ST=1
"RTN","GMVSC0",77,0)
 K GMRSITE
"RTN","GMVSC0",78,0)
 D DEM^VADPT,INP^VADPT
"RTN","GMVSC0",79,0)
 S GWARD=$S($P(VAIN(4),"^",2)'="":$P(VAIN(4),"^",2),1:"   ")
"RTN","GMVSC0",80,0)
 S GBED=$S(VAIN(5)'="":$P(VAIN(5),"^"),1:"   ")
"RTN","GMVSC0",81,0)
 D HDR^GMVSC2
"RTN","GMVSC0",82,0)
 Q
"RTN","GMVSC1")
0^41^B14142553^B8913074
"RTN","GMVSC1",1,0)
GMVSC1 ;HOIFO/YH,FT-CUMULATIVE V/M - CONTINUED ;5/21/07
"RTN","GMVSC1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVSC1",3,0)
 ;
"RTN","GMVSC1",4,0)
 ; This routine uses the following IAs:
"RTN","GMVSC1",5,0)
 ;  #4290 - ^PXRMINDX global       (controlled)
"RTN","GMVSC1",6,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVSC1",7,0)
 ;
"RTN","GMVSC1",8,0)
EN1 ; ENTRY TO PRINT REPORT FROM TASKMAN {called from GMVSC0}
"RTN","GMVSC1",9,0)
 N GMVCLIO
"RTN","GMVSC1",10,0)
 K ^TMP($J,"GMRV"),GMRVDT
"RTN","GMVSC1",11,0)
 S (GMRVHT,GMROUT,GMRDATE(0))=0
"RTN","GMVSC1",12,0)
 F GMRVTY="T","P","R","BP","HT","WT","CVP","CG","PO2","PN"  S GMRVITY=$O(^GMRD(120.51,"C",GMRVTY,0)) I GMRVITY>0 D SETAR1,SETAR
"RTN","GMVSC1",13,0)
 I $O(^TMP($J,"GMRV",0))'>0 W !,"THERE IS NO DATA FOR THIS REPORT" G QT
"RTN","GMVSC1",14,0)
 S GMRDATE=9999999
"RTN","GMVSC1",15,0)
 F  S GMRDATE=$O(GMRVDT(GMRDATE),-1) Q:GMRDATE'>0!GMROUT  I $D(^TMP($J,"GMRV",GMRDATE)) D PRT Q:GMROUT
"RTN","GMVSC1",16,0)
QT ;
"RTN","GMVSC1",17,0)
 I IOSL'<($Y+10) F X=1:1 W ! Q:IOSL<($Y+10)
"RTN","GMVSC1",18,0)
 I 'GMROUT W ! D FOOTER^GMVSC0
"RTN","GMVSC1",19,0)
 K ^TMP($J,"GMRV"),^TMP($J,"OTHR"),GOTHR,GMRV,GMRVDT
"RTN","GMVSC1",20,0)
 Q
"RTN","GMVSC1",21,0)
Q ; KILL VARIABLES
"RTN","GMVSC1",22,0)
 K ^TMP($J)
"RTN","GMVSC1",23,0)
 K GMRZZ,GMRVARY
"RTN","GMVSC1",24,0)
 K GMRVER,GDATA,GMRST,GERROR,GERST,GBED,GWARD,DFN,GX,GMR1ST,GMRDAT,GMRDATE,GMRDSH,GMRDT,GMRLN,GMRPDT,GMRSP,GMRVDA,GMRVITY,GMRX,GMRY,GMRVTY,GMRSITE,GMRVX,POP,DIPGM,%T,GMRQUAL,GMROUT,GMRPG,GFLAG
"RTN","GMVSC1",25,0)
 D KVAR^VADPT K VA
"RTN","GMVSC1",26,0)
 D ^%ZISC ;???
"RTN","GMVSC1",27,0)
 Q
"RTN","GMVSC1",28,0)
SETAR ; get clio records
"RTN","GMVSC1",29,0)
 K GMVCLIO
"RTN","GMVSC1",30,0)
 S GMRDT=GMRVSDT-.000001
"RTN","GMVSC1",31,0)
 F  S GMRDT=$O(^PXRMINDX(120.5,"PI",DFN,GMRVITY,GMRDT)) Q:GMRDT'>0!(GMRDT>GMRVFDT)  S GMRDATE=GMRDT D SETND
"RTN","GMVSC1",32,0)
 Q
"RTN","GMVSC1",33,0)
SETAR1 ; PXRMINDX index doesn't have entered-in-error records, so use AA x-ref
"RTN","GMVSC1",34,0)
 N GMRVSDT1,GMRVFDT1
"RTN","GMVSC1",35,0)
 K GMVCLIO
"RTN","GMVSC1",36,0)
 S GMRDT=9999999-GMRVFDT,GMRVSDT1=9999999-GMRVSDT
"RTN","GMVSC1",37,0)
 S GMRDT=GMRDT-.000001,GMRVSDT1=GMRVSDT1+.000001
"RTN","GMVSC1",38,0)
 F  S GMRDT=$O(^GMR(120.5,"AA",DFN,GMRVITY,GMRDT)) Q:GMRDT'>0!(GMRDT>GMRVSDT1)  D SETND1
"RTN","GMVSC1",39,0)
 Q
"RTN","GMVSC1",40,0)
SETND ;
"RTN","GMVSC1",41,0)
 S GMRVDA=0
"RTN","GMVSC1",42,0)
 F  S GMRVDA=$O(^PXRMINDX(120.5,"PI",DFN,GMRVITY,GMRDT,GMRVDA)) Q:GMRVDA=""  D
"RTN","GMVSC1",43,0)
 .Q:GMRVDA=+GMRVDA  ;already got it SETND1
"RTN","GMVSC1",44,0)
 .I GMRVDA'=+GMRVDA D
"RTN","GMVSC1",45,0)
 ..D CLIO^GMVUTL(.GMVCLIO,GMRVDA)
"RTN","GMVSC1",46,0)
 ..S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(2)=$G(GMVCLIO(2)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVSC1",47,0)
 ..I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVSC1",48,0)
 ..D SETUT
"RTN","GMVSC1",49,0)
 ..Q
"RTN","GMVSC1",50,0)
 .Q
"RTN","GMVSC1",51,0)
 Q
"RTN","GMVSC1",52,0)
SETND1 ;
"RTN","GMVSC1",53,0)
 S GMRVDA=0
"RTN","GMVSC1",54,0)
 F  S GMRVDA=$O(^GMR(120.5,"AA",DFN,GMRVITY,GMRDT,GMRVDA)) Q:GMRVDA=""  D
"RTN","GMVSC1",55,0)
 .D F1205^GMVUTL(.GMVCLIO,GMRVDA,1)
"RTN","GMVSC1",56,0)
 .S GMVCLIO(0)=$G(GMVCLIO(0)),GMVCLIO(2)=$G(GMVCLIO(2)),GMVCLIO(5)=$G(GMVCLIO(5))
"RTN","GMVSC1",57,0)
 .I GMVCLIO(0)=""!($P(GMVCLIO(0),U,8)="") Q
"RTN","GMVSC1",58,0)
 .S GMRDATE=$P(GMVCLIO(0),U,1)
"RTN","GMVSC1",59,0)
 .D SETUT
"RTN","GMVSC1",60,0)
 .Q
"RTN","GMVSC1",61,0)
 Q
"RTN","GMVSC1",62,0)
SETUT ;
"RTN","GMVSC1",63,0)
 S ^TMP($J,"GMRV",+$E(GMRDATE,1,12),GMRVTY,GMRVDA)=$S($P(GMVCLIO(2),U,1)'=1:0,1:+$P(GMVCLIO(2),U,1))_"|"_GMVCLIO(0)_"|"_GMVCLIO(5)
"RTN","GMVSC1",64,0)
 S GMRVDT(+$E(GMRDATE,1,12))=""
"RTN","GMVSC1",65,0)
 Q
"RTN","GMVSC1",66,0)
PRT ;PRINT V/M BY DATE/TIME
"RTN","GMVSC1",67,0)
 D:IOSL<($Y+9) HDR^GMVSC2 Q:GMROUT
"RTN","GMVSC1",68,0)
 S Y=GMRDATE X ^DD("DD") I $P(GMRDATE,".")'=GMRDATE(0) W !,$E(GMRDATE,4,5)_"/"_$E(GMRDATE,6,7)_"/"_$E(GMRDATE,2,3) S GMRDATE(0)=$P(GMRDATE,".")
"RTN","GMVSC1",69,0)
 D:IOSL<($Y+9) HDR^GMVSC2 Q:GMROUT  W !,$P($P(Y,"@",2),":",1,2)
"RTN","GMVSC1",70,0)
 I $D(^TMP($J,"GMRV",GMRDATE)) D
"RTN","GMVSC1",71,0)
 .K GMRLN,GERROR F GMRVTY="T","P","R","BP","HT","WT","CVP","CG","PO2","PN" S GPRT(GMRVTY)=0 I $D(^TMP($J,"GMRV",GMRDATE,GMRVTY)) S GMRVDA="" F  S GMRVDA=$O(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA)) Q:$L(GMRVDA)'>0!GMROUT  D SETLN^GMVSC2
"RTN","GMVSC1",72,0)
 Q
"RTN","GMVSC2")
0^52^B16556193^B15927181
"RTN","GMVSC2",1,0)
GMVSC2 ;HIRMFO/YH,FT-CUMULATIVE V/M - CONTINUED ;10/30/07  10:16
"RTN","GMVSC2",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVSC2",3,0)
 ;
"RTN","GMVSC2",4,0)
 ; This routine uses the following IAs:
"RTN","GMVSC2",5,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVSC2",6,0)
 ;
"RTN","GMVSC2",7,0)
SETLN ; {called from GMVSC1}
"RTN","GMVSC2",8,0)
 N GMRVPO,GMVLOOP,GMVQNAME
"RTN","GMVSC2",9,0)
 K GMRVARY
"RTN","GMVSC2",10,0)
 S GMRVER=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",1)
"RTN","GMVSC2",11,0)
 S GMRVARY=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",3)
"RTN","GMVSC2",12,0)
 D:IOSL<($Y+9) HDR Q:GMROUT  W ! W:GMRVER "(E)"
"RTN","GMVSC2",13,0)
 I GPRT(GMRVTY)=0 D
"RTN","GMVSC2",14,0)
 . W ?4,$S(GMRVTY="T":"T: ",GMRVTY="P":"P: ",GMRVTY="R":"R: ",GMRVTY="BP":"B/P: ",GMRVTY="WT":"Wt: ",GMRVTY="HT":"Ht: ",GMRVTY="CG":"Circumference/Girth: ",GMRVTY="CVP":"Central Venous Pressure: ",GMRVTY="PO2":"Pulse Oximetry: ",1:"")
"RTN","GMVSC2",15,0)
 . I GMRVTY="PN" W ?4,"Pain: "
"RTN","GMVSC2",16,0)
 S GPRT(GMRVTY)=1
"RTN","GMVSC2",17,0)
 S GMRDAT=$P(^TMP($J,"GMRV",GMRDATE,GMRVTY,GMRVDA),"|",2)
"RTN","GMVSC2",18,0)
 I "PRBPCVPCGPO2PN"[GMRVTY S GMRVX=GMRVTY,GMRVX(0)=$P(GMRDAT,"^",8) D
"RTN","GMVSC2",19,0)
 .  I "UNAVAILABLEPASSREFUSED"[$$UP^XLFSTR(GMRVX(0)) W ?9,GMRVX(0) Q
"RTN","GMVSC2",20,0)
 . I GMRVTY="PN" D
"RTN","GMVSC2",21,0)
 . . I GMRVX(0)=0 W ?9,GMRVX(0)_" - No pain" Q
"RTN","GMVSC2",22,0)
 . . I GMRVX(0)=99 W ?9,GMRVX(0)_" - Unable to respond" Q
"RTN","GMVSC2",23,0)
 . . I GMRVX(0)=10 W ?9,GMRVX(0)_" - Worst imaginable pain" Q
"RTN","GMVSC2",24,0)
 . . W ?9,GMRVX(0) Q
"RTN","GMVSC2",25,0)
 . ;I GMRVTY'="PN" W ?9,GMRVX(0)
"RTN","GMVSC2",26,0)
 . D EN1^GMVSAS0
"RTN","GMVSC2",27,0)
 . I GMRVTY="P","^"_GPEDIS_"^"[GMRVARY,$P(GMRDAT,"^",8)=1 S GMRVX(1)=""
"RTN","GMVSC2",28,0)
 . S Z=$S(GMRVTY="CG":$J($P(GMRDAT,"^",8),0,2),GMRVTY="CVP":$J($P(GMRDAT,"^",8),0,1),GMRVTY'="BP":$J($P(GMRDAT,"^",8),3,0),1:$P(GMRDAT,"^",8)) D:GMRVTY'="BP" BLNK W:GMRVTY'="PN" ?9,Z_$S('$D(GMRVX(1)):" ",'GMRVX(1):"",1:"*")
"RTN","GMVSC2",29,0)
 . I GMRVTY="CG" W " in ("_$J(Z/.3937,0,2)_" cm)"
"RTN","GMVSC2",30,0)
 . I GMRVTY="CVP" W " cmH2O ("_$J(Z/1.36,0,1)_" mmHg)"
"RTN","GMVSC2",31,0)
 . I GMRVTY="PO2" S GMRVPO=$P(GMRDAT,"^",10) W "%"_$S(GMRVPO'="":" with supplemental O2 "_$S(GMRVPO["l/min":$P(GMRVPO," l/min")_"L/min",1:"")_$S(GMRVPO["l/min":$P(GMRVPO," l/min",2),1:GMRVPO),1:"")
"RTN","GMVSC2",32,0)
 I GMRVTY="T" S X=$P(GMRDAT,"^",8) D
"RTN","GMVSC2",33,0)
 . I X'>0 W ?9,X Q
"RTN","GMVSC2",34,0)
 . S GMRVX=GMRVTY,GMRVX(0)=X D EN1^GMVSAS0
"RTN","GMVSC2",35,0)
 . D EN1^GMVUTL S:'Y Y="" S Z=$J(X,5,1) D BLNK W ?9,Z_" F " S Z=$J(Y,4,1) D BLNK W "("_Z_" C)"_$S('$D(GMRVX(1)):" ",'GMRVX(1):"",1:"*")
"RTN","GMVSC2",36,0)
 I GMRVTY="HT" S X=$P(GMRDAT,"^",8) D
"RTN","GMVSC2",37,0)
 . I X'>0 W ?9,X Q
"RTN","GMVSC2",38,0)
 . D EN2^GMVUTL S:'Y Y="" S Z=$J(X,5,2) D BLNK W ?9,Z_" in " S Z=$J(Y,5,2) D BLNK W "("_Z_" cm)" I 'GMRVER S GMRVHT=Z/100
"RTN","GMVSC2",39,0)
 I GMRVTY="WT" S X=$P(GMRDAT,"^",8) D
"RTN","GMVSC2",40,0)
 . I X'>0 W ?9,X Q
"RTN","GMVSC2",41,0)
 . D EN3^GMVUTL S:'Y Y="" S Z=$J(X,7,2) D BLNK W ?9,Z_" lb " S Z=$J(Y,6,2) D BLNK W "("_Z_" kg)"
"RTN","GMVSC2",42,0)
 S GMRZZ=""
"RTN","GMVSC2",43,0)
 F GMVLOOP=1:1 Q:$P(GMRVARY,U,GMVLOOP)=""  D
"RTN","GMVSC2",44,0)
 .S GMVQNAME=$$FIELD^GMVGETQL($P(GMRVARY,U,GMVLOOP),1,"E")
"RTN","GMVSC2",45,0)
 .Q:GMVQNAME=""!(GMVQNAME=-1)
"RTN","GMVSC2",46,0)
 .S GMRZZ=GMRZZ_$S(GMRZZ'="":", ",1:"")_GMVQNAME
"RTN","GMVSC2",47,0)
 I "UNAVAILABLEPASSREFUSED"[$$UP^XLFSTR($P(GMRDAT,U,8)) Q
"RTN","GMVSC2",48,0)
 S GMRVITY=+$P(GMRDAT,"^",3)
"RTN","GMVSC2",49,0)
 S:GMRZZ'=""&(GMRVTY'="PO2") GMRZZ=" ("_GMRZZ_")"
"RTN","GMVSC2",50,0)
 I GMRZZ'="" W:GMRVTY="PO2" !,?8," via " W GMRZZ
"RTN","GMVSC2",51,0)
 I GMRVTY="WT",'GMRVER S GMRBMI="",GMRBMI(1)=$P(GMRDAT,"^"),GMRBMI(2)=+$P(GMRDAT,"^",8) D CALBMI^GMVBMI(.GMRBMI) W:GMRBMI>0 !,?4,"Body Mass Index: "_GMRBMI
"RTN","GMVSC2",52,0)
 K Z
"RTN","GMVSC2",53,0)
 Q
"RTN","GMVSC2",54,0)
HDR ; Report header
"RTN","GMVSC2",55,0)
 I 'GMR1ST D FOOTER^GMVSC0
"RTN","GMVSC2",56,0)
 W:$Y>0 @IOF
"RTN","GMVSC2",57,0)
 S GMRPG=GMRPG+1,GFLAG=1 ;what is GFLAG?
"RTN","GMVSC2",58,0)
 W !,GMRPDT,?25,"Cumulative Vitals/Measurements Report",?70,"Page ",GMRPG
"RTN","GMVSC2",59,0)
 W !?25,GMVRANGE ;report date range
"RTN","GMVSC2",60,0)
 W !,$E(GMRDSH,1,78)
"RTN","GMVSC2",61,0)
 I 'GMR1ST,$P(GMRDATE,".")=GMRDATE(0) W !,$E(GMRDATE(0),4,5)_"/"_$E(GMRDATE(0),6,7)_"/"_$E(GMRDATE,2,3)_" (continued)",!
"RTN","GMVSC2",62,0)
 ; include date range in header
"RTN","GMVSC2",63,0)
 S GMR1ST=0
"RTN","GMVSC2",64,0)
 Q
"RTN","GMVSC2",65,0)
BLNK ;
"RTN","GMVSC2",66,0)
 F I=1:1:$L(Z) Q:$E(Z,I)'=" "
"RTN","GMVSC2",67,0)
 S Z=$E(Z,I,$L(Z))
"RTN","GMVSC2",68,0)
 Q
"RTN","GMVSR0")
0^42^B32180686^B30880367
"RTN","GMVSR0",1,0)
GMVSR0 ;HOIFO/RM,YH,FT-VITAL SIGNS RECORD SF 511 ;6/6/07
"RTN","GMVSR0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVSR0",3,0)
 ;
"RTN","GMVSR0",4,0)
 ; This routine uses the following IAs:
"RTN","GMVSR0",5,0)
 ; #10039 - FILE 42 references     (supported)
"RTN","GMVSR0",6,0)
 ; #10061 - ^VADPT calls           (supported)
"RTN","GMVSR0",7,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","GMVSR0",8,0)
 ; #10104 - ^XLFSTR calls          (supported)
"RTN","GMVSR0",9,0)
 ;
"RTN","GMVSR0",10,0)
EN1(RESULT,GMVDATA) ; GMV PT GRAPH [RPC entry point]
"RTN","GMVSR0",11,0)
 ; Queues a graphic report to a printer
"RTN","GMVSR0",12,0)
 ; GMVDATA=DFN^START DT^END DT^TYPE OF GRAPH^DEVICE^DEVICE IEN(#3.5)^
"RTN","GMVSR0",13,0)
 ;         DATE/TIME TO PRINT REPORT^WARD IEN^LOCATION IEN^ROOM LIST
"RTN","GMVSR0",14,0)
 ;
"RTN","GMVSR0",15,0)
 ; DFN      - patient internal entry number
"RTN","GMVSR0",16,0)
 ; GMRSTRT  - start date/time of report range (FileMan format)
"RTN","GMVSR0",17,0)
 ; GMRFIN   - end date/time of report range (FileMan format)
"RTN","GMVSR0",18,0)
 ; GRAPH    - number of the graph (1-5)
"RTN","GMVSR0",19,0)
 ; GMVDEV   - device name
"RTN","GMVSR0",20,0)
 ; GMVIEN   - device internal entry number
"RTN","GMVSR0",21,0)
 ; GMVPDT   - date/time to print the report
"RTN","GMVSR0",22,0)
 ; GMVWARD  - ward internal entry number
"RTN","GMVSR0",23,0)
 ; GMVHLOC  - hospital location internal entry number
"RTN","GMVSR0",24,0)
 ; GMVRMLST - list of rooms separated by a comma (e.g., 210,220,230) 
"RTN","GMVSR0",25,0)
 ;
"RTN","GMVSR0",26,0)
 S RESULT="This report is no longer available. Please right click on the data grid and use 'Print Graph' instead."
"RTN","GMVSR0",27,0)
 Q
"RTN","GMVSR0",28,0)
 N DFN,G,GMROUT,GFLAG,GRAPH,GMRSTRT,GMRFIN,GMVPDT,GMVDEV,GMVIEN,GMREDB
"RTN","GMVSR0",29,0)
 N GMRLEN,GMVHLOC,GMRWARD,GMVRMLST,GSTRFIN,GMVDEVUC
"RTN","GMVSR0",30,0)
 S DFN=+$P(GMVDATA,"^"),GMRSTRT=$P(GMVDATA,"^",2),GMRFIN=$P(GMVDATA,"^",3),GRAPH=$P(GMVDATA,"^",4),GMVDEV=$P(GMVDATA,"^",5),GMVIEN=+$P(GMVDATA,"^",6),GMVPDT=$P(GMVDATA,"^",7)
"RTN","GMVSR0",31,0)
 S GMRWARD=$P(GMVDATA,"^",8),GMVHLOC=$P(GMVDATA,"^",9),GMVRMLST=$P(GMVDATA,"^",10)
"RTN","GMVSR0",32,0)
 S (GMROUT,GFLAG)=0
"RTN","GMVSR0",33,0)
 S ZTIO=GMVDEV ;device
"RTN","GMVSR0",34,0)
 S ZTDTH=$S($G(GMVPDT)>0:GMVPDT,1:$$NOW^XLFDT()) ;date/time to print
"RTN","GMVSR0",35,0)
 D:GRAPH<6 DATELN^GMVSR0
"RTN","GMVSR0",36,0)
 S GMREDB=$S(DFN>0:"P",GMVRMLST'="":"S",1:"A")
"RTN","GMVSR0",37,0)
 S GMRWARD(1)=$S(GMRWARD>0:$P($G(^DIC(42,GMRWARD,0)),U,1),1:"") ;ward name
"RTN","GMVSR0",38,0)
 I $G(GMREDB)="P" D
"RTN","GMVSR0",39,0)
 .D DEM^VADPT S GMRNAM=$P(VADM(1),"^"),SSN=$E($P(VADM(2),"^",2),8,11)
"RTN","GMVSR0",40,0)
 .D INP^VADPT ;get inpatient data
"RTN","GMVSR0",41,0)
 .S GMRWARD(1)=$P(VAIN(4),U,2),GMRWARD=$P(VAIN(4),U) ;inpatient location
"RTN","GMVSR0",42,0)
 .S GMRRMBD=$S(VAIN(5)'="":VAIN(5),1:"  BLANK") ;roombed
"RTN","GMVSR0",43,0)
 .D KVAR^VADPT K VA
"RTN","GMVSR0",44,0)
 .Q
"RTN","GMVSR0",45,0)
DEV ;
"RTN","GMVSR0",46,0)
 S GMVDEVUC=$$UP^XLFSTR(GMVDEV) ;device name in uppercase
"RTN","GMVSR0",47,0)
 I GRAPH=5,GMVDEVUC'["KYOCERA",GMVDEVUC'["HPLASER",GMVDEVUC'["HP LASER" D  Q
"RTN","GMVSR0",48,0)
 .S RESULT="Sorry, you must select a Kyocera or HP Laser printer for the Pain Chart."
"RTN","GMVSR0",49,0)
 .Q
"RTN","GMVSR0",50,0)
 S ZTRTN=$S(GMREDB="P":"EN2^GMVSR0",1:"EN3^GMVSR0")
"RTN","GMVSR0",51,0)
 S ZTDESC="V/M GRAPHIC REPORTS"
"RTN","GMVSR0",52,0)
 F G="GRAPH","GMROUT","DFN","GMREDB","GMRNAM","SSN","GMRWARD","GMRSTRT","GMRFIN","GMRWARD(","GFLAG","GSTRFIN","GMREDB","GMVRMLST" S ZTSAVE(G)=""
"RTN","GMVSR0",53,0)
 D ^%ZTLOAD
"RTN","GMVSR0",54,0)
 S RESULT=$S($G(ZTSK)>0:"Report sent to device. Task #: "_ZTSK,1:"Unable to task the report.")
"RTN","GMVSR0",55,0)
 K ZTSK,ZTIO,ZTRTN,ZTDESC,ZTSAVE,ZTDTH
"RTN","GMVSR0",56,0)
 Q
"RTN","GMVSR0",57,0)
EN2 ; Start the graphic report
"RTN","GMVSR0",58,0)
 ; Note: Graphic reports must go to a printer
"RTN","GMVSR0",59,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","GMVSR0",60,0)
 N GAPICAL,GRADIAL,GBRACHI
"RTN","GMVSR0",61,0)
 S GAPICAL=$O(^GMRD(120.52,"B","APICAL",0)),GRADIAL=$O(^GMRD(120.52,"B","RADIAL",0)),GBRACHI=$O(^GMRD(120.52,"B","BRACHIAL",0))
"RTN","GMVSR0",62,0)
 I IOST["KYOCERA"!(IOST["Kyocera") S GROUTN=$S(GRAPH=1:"EN1^GMVGR0",GRAPH=2:"EN1^GMVBP0",GRAPH=3:"EN1^GMVWT0",GRAPH=4:"EN1^GMVKPO0",GRAPH=5:"^GMVKPN0",1:"") D:GROUTN'="" @GROUTN G:"Pp"[GMREDB Q1 Q
"RTN","GMVSR0",63,0)
 I $$UP^XLFSTR(IOST)["HPLASER" S GROUTN=$S(GRAPH=1:"EN1^GMVHG0",GRAPH=2:"EN1^GMVHB0",GRAPH=3:"EN1^GMVHW0",GRAPH=4:"EN1^GMVHPO0",GRAPH=5:"EN1^GMVHPN0",1:"") D:GROUTN'="" @GROUTN G:"Pp"[GMREDB Q1 Q
"RTN","GMVSR0",64,0)
 I GRAPH=2 D ^GMVLBP0 G:"Pp"[GMREDB Q1 Q
"RTN","GMVSR0",65,0)
 I GRAPH=3 D ^GMVLWT0 G:"Pp"[GMREDB Q1 Q
"RTN","GMVSR0",66,0)
 I GRAPH=4 D ^GMVLPO0 G:"Pp"[GMREDB Q1 Q
"RTN","GMVSR0",67,0)
 I GRAPH=5 S:'$G(GMRPERR) GMRPERR=1 G:"Pp"[GMREDB Q1 Q
"RTN","GMVSR0",68,0)
 S GMRS=GMRSTRT-.0001,GMRQ=GMRFIN
"RTN","GMVSR0",69,0)
 F GMRTY="B","P","R","T","H","W","PO2","CVP","CG","PN" D SETT^GMVSR1
"RTN","GMVSR0",70,0)
 U IO D SF511^GMVSR1
"RTN","GMVSR0",71,0)
Q1 ;
"RTN","GMVSR0",72,0)
 K J,G,GMR,GMR3,GMRDAT,GMRDT,GMREN,GMRHDR1,GMRHDR10,GMRHDR11,GMRHDR2,GMRHT,GMRI,GMRJ,GMRK,GMRLINE,GMRMSL,GMRNM,GMROLD,GMRP,GMRPDIF,GMRT,GMRX,GMRTY,GMRPG,GMRPGC,GMRPGS,GMRPHI,GMRPLO,GMRTDIF,GMRTHI,GMRTLO,GMRTNM,GMRX1,GMRX2
"RTN","GMVSR0",73,0)
 D KVAR^VADPT K VA,%T
"RTN","GMVSR0",74,0)
 K GVAR,GMRDIV,GMRHT,GMRQUAL,GMRS,GMRQ,GMRPOFF,GMRTOFF,GMRVWLOC,GMRVX,DIK,%ZIS,%DT,DIPGM,GMRLEN,GMRRMST,GMRVHLOC,GDA,GMRINF,GLINE,GMRVARY,GMRPERR,GMRVPS,GMVROOM,GMVWARD,GMVLOOP
"RTN","GMVSR0",75,0)
 W:$E(IOST)="P"!$D(IO("S"))&($$UP^XLFSTR(IOST)'["HPLASER") !
"RTN","GMVSR0",76,0)
 Q:'("Pp"[GMREDB)
"RTN","GMVSR0",77,0)
Q2 ;
"RTN","GMVSR0",78,0)
 K ^TMP($J),GMRII,GMRQUAL,GMREDB,GMROUT,GMRROOM,GMRSTRT,GMRFIN,GMRNAM,GMRRMBD,GMRSITE,GMRVHLOC,GMRWARD,POP,SSN,DFN,ZTIO,ZTSK,GDT,GDTA,GFOUND,GMRAGE,GMRBED,GMRBTH,GMRCOL,GMRHLOC,GMROP,GMRSEX,GMRVADM,GRPT,GSUB,GTYPE1
"RTN","GMVSR0",79,0)
 K GSTRFIN,GMRVFLAG,SNN,GMVRMBD,GMVWRD,GRAPH,GROUTN,GIVDT,GSTAR,GSOL,GN,GNDATE,GNSHFT,GFLAG,X,Y
"RTN","GMVSR0",80,0)
 D ^%ZISC
"RTN","GMVSR0",81,0)
 Q
"RTN","GMVSR0",82,0)
EN3 ; Entry to print report for all or selected group of patients,
"RTN","GMVSR0",83,0)
 ; for ward stored in GMRWARD
"RTN","GMVSR0",84,0)
 S GMRPERR=0
"RTN","GMVSR0",85,0)
 S GMVWARD=GMRWARD ;ward ien
"RTN","GMVSR0",86,0)
 S GMVWARD(1)=GMRWARD(1) ;ward name
"RTN","GMVSR0",87,0)
 S GMVEDB=GMREDB ;A - all patients, S - selected rooms, P - 1 patient
"RTN","GMVSR0",88,0)
 ; if selected roombeds, then set up GMVROOM array
"RTN","GMVSR0",89,0)
 I $L(GMVRMLST)>0 D
"RTN","GMVSR0",90,0)
 .F GMVLOOP=1:1 Q:$P(GMVRMLST,",",GMVLOOP)=""  D
"RTN","GMVSR0",91,0)
 ..S GMVROOM($P(GMVRMLST,",",GMVLOOP))=""
"RTN","GMVSR0",92,0)
 ..Q
"RTN","GMVSR0",93,0)
 .Q
"RTN","GMVSR0",94,0)
 D WARD^GMVDS1 ;creates TMP global w/patients in ward or rooms 
"RTN","GMVSR0",95,0)
 S GMRROOM=""
"RTN","GMVSR0",96,0)
 F GMRII=0:0 S GMRROOM=$O(^TMP($J,GMRROOM)) Q:GMRROOM=""  S GMRNAM="" F GMRII=0:0 S GMRNAM=$O(^TMP($J,GMRROOM,GMRNAM)) Q:GMRNAM=""  F DFN=0:0 S DFN=$O(^TMP($J,GMRROOM,GMRNAM,DFN)) Q:DFN'>0  D:DFN>0 PRT
"RTN","GMVSR0",97,0)
 D Q1
"RTN","GMVSR0",98,0)
 G Q2
"RTN","GMVSR0",99,0)
 ;
"RTN","GMVSR0",100,0)
PRT ;
"RTN","GMVSR0",101,0)
 D DEM^VADPT
"RTN","GMVSR0",102,0)
 S SSN=$P(VADM(2),"^",2) Q:$G(GMRPERR)&('$D(IO("Q")))
"RTN","GMVSR0",103,0)
 D EN2
"RTN","GMVSR0",104,0)
 Q
"RTN","GMVSR0",105,0)
 ;
"RTN","GMVSR0",106,0)
DATELN ;
"RTN","GMVSR0",107,0)
 S Y=GMRSTRT
"RTN","GMVSR0",108,0)
 X ^DD("DD")
"RTN","GMVSR0",109,0)
 S GSTRFIN=Y
"RTN","GMVSR0",110,0)
 S Y=GMRFIN
"RTN","GMVSR0",111,0)
 X ^DD("DD")
"RTN","GMVSR0",112,0)
 S GSTRFIN=GSTRFIN_" - "_Y
"RTN","GMVSR0",113,0)
 Q
"RTN","GMVUTL")
0^53^B41699178^B84410
"RTN","GMVUTL",1,0)
GMVUTL ;HOIFO/RM,MD,FT-CALLABLE ENTRY POINTS FOR PROGRAMMER UTILITIES ;08/12/09  17:15
"RTN","GMVUTL",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**23**;Oct 31, 2002;Build 25
"RTN","GMVUTL",3,0)
 ;
"RTN","GMVUTL",4,0)
 ; This routine uses the following IAs:
"RTN","GMVUTL",5,0)
 ;  #5076 - MDCLIO1 calls          (private)
"RTN","GMVUTL",6,0)
 ;  #5269 - MDTERM calls           (private)
"RTN","GMVUTL",7,0)
 ; #10103 - XLFDT calls            (supported)
"RTN","GMVUTL",8,0)
 ;
"RTN","GMVUTL",9,0)
 ; This routine supports the following IAs:
"RTN","GMVUTL",10,0)
 ; #5046 - CLIO, F1250 entry points       (supported)
"RTN","GMVUTL",11,0)
 ;
"RTN","GMVUTL",12,0)
EN1 ; CALL TO CONVERT TEMPERATURE (F) IN VARIABLE X TO TEMPERATURE (C)
"RTN","GMVUTL",13,0)
 ; IN VARIABLE Y
"RTN","GMVUTL",14,0)
 S Y=$J(X-32*5/9,0,1)
"RTN","GMVUTL",15,0)
 Q
"RTN","GMVUTL",16,0)
EN2 ; CALL TO CONVERT AN INCHES MEASUREMENT IN X TO A CENTIMETER 
"RTN","GMVUTL",17,0)
 ; MEASUREMENT IN Y
"RTN","GMVUTL",18,0)
 S Y=$J(2.54*X,0,2)
"RTN","GMVUTL",19,0)
 Q
"RTN","GMVUTL",20,0)
EN3 ; CALL TO CONVERT A WEIGHT (LBS) IN VARIABLE X TO A WEIGHT (KG)
"RTN","GMVUTL",21,0)
 ; IN VARIABLE Y
"RTN","GMVUTL",22,0)
 S Y=$J(X/2.2,0,2)
"RTN","GMVUTL",23,0)
 Q
"RTN","GMVUTL",24,0)
CLIO(GMVCLIO,GMVGUID) ; Calls Clinical Observations to get a single record
"RTN","GMVUTL",25,0)
 ; Input:
"RTN","GMVUTL",26,0)
 ;   GMVCLIO = array name (required)
"RTN","GMVUTL",27,0)
 ;   GMVGUID = Global Unique ID (required)
"RTN","GMVUTL",28,0)
 ; Output:
"RTN","GMVUTL",29,0)
 ;   GMVCLIO(0) =
"RTN","GMVUTL",30,0)
 ;
"RTN","GMVUTL",31,0)
 I $G(GMVGUID)="" S GMVCLIO(0)="" Q
"RTN","GMVUTL",32,0)
 N GMVARRAY,GMVCNT,GMVCS,GMVDATE,GMVDY,GMVFLAG,GMVFLD,GMVFR,GMVHR,GMVL,GMVLOOP,GMVM,GMVMI,GMVMO
"RTN","GMVUTL",33,0)
 N GMVO2,GMVP,GMVPAIN,GMVPO2,GMVQ,GMVQFLAG,GMVQLOOP,GMVS,GMVSC,GMVSUP,GMVTIME,GMVU,GMVX,GMVY,GMVYR,X,Y
"RTN","GMVUTL",34,0)
 I $T(QRYOBS^MDCLIO1)="" S GMVCLIO(0)="",GMVCLIO(5)="" Q
"RTN","GMVUTL",35,0)
 D QRYOBS^MDCLIO1("GMVARRAY",GMVGUID)
"RTN","GMVUTL",36,0)
 I '$D(GMVARRAY("OBSERVED_DATE_TIME")) S GMVCLIO(0)="",GMVCLIO(5)="" Q
"RTN","GMVUTL",37,0)
 S GMVPAIN=$$GETIEN^GMVGETVT("PN",2),GMVCNT=0
"RTN","GMVUTL",38,0)
 S GMVPO2=$$GETIEN^GMVGETVT("PO2",2),(GMVFR,GMVO2,GMVSUP)=""
"RTN","GMVUTL",39,0)
 S $P(GMVCLIO(0),U,1)=$G(GMVARRAY("OBSERVED_DATE_TIME","I"))
"RTN","GMVUTL",40,0)
 S $P(GMVCLIO(0),U,2)=$G(GMVARRAY("PATIENT_ID","I"))
"RTN","GMVUTL",41,0)
 S $P(GMVCLIO(0),U,4)=$G(GMVARRAY("ENTERED_DATE_TIME","I"))
"RTN","GMVUTL",42,0)
 S $P(GMVCLIO(0),U,5)=$G(GMVARRAY("HOSPITAL_LOCATION_ID","I"))
"RTN","GMVUTL",43,0)
 S $P(GMVCLIO(0),U,6)=$G(GMVARRAY("ENTERED_BY_ID","I"))
"RTN","GMVUTL",44,0)
 S $P(GMVCLIO(0),U,8)=$G(GMVARRAY("SVALUE","I"))
"RTN","GMVUTL",45,0)
 S GMVX=$G(GMVARRAY("TERM_ID","I"))
"RTN","GMVUTL",46,0)
 I GMVX]"" D
"RTN","GMVUTL",47,0)
 .S GMVX=$$GETIEN^GMVGETVT(GMVX,4)
"RTN","GMVUTL",48,0)
 .S $P(GMVCLIO(0),U,3)=GMVX
"RTN","GMVUTL",49,0)
 .Q
"RTN","GMVUTL",50,0)
 ; NOTE: PAIN needs external value from CLIO
"RTN","GMVUTL",51,0)
 I $P(GMVCLIO(0),U,3)=GMVPAIN D
"RTN","GMVUTL",52,0)
 .S $P(GMVCLIO(0),U,8)=$G(GMVARRAY("SVALUE","E"))
"RTN","GMVUTL",53,0)
 .Q
"RTN","GMVUTL",54,0)
 S GMVFLAG=0
"RTN","GMVUTL",55,0)
 F GMVLOOP=1,2,3,8 D  Q:GMVFLAG
"RTN","GMVUTL",56,0)
 .S:$P(GMVCLIO(0),U,GMVLOOP)="" GMVFLAG=1
"RTN","GMVUTL",57,0)
 .Q
"RTN","GMVUTL",58,0)
 I GMVFLAG S GMVCLIO(0)="",GMVCLIO(5)="" Q
"RTN","GMVUTL",59,0)
 ;check unit of measurement and convert value if needed
"RTN","GMVUTL",60,0)
 I $G(GMVARRAY("UNIT_ID","E"))="DEGREES C" D
"RTN","GMVUTL",61,0)
 .S $P(GMVCLIO(0),U,8)=+$$CVTVAL^MDTERM($P(GMVCLIO(0),U,8),"DEGREES C","DEGREES F",1)
"RTN","GMVUTL",62,0)
 I $G(GMVARRAY("UNIT_ID","E"))="CENTIMETER" D
"RTN","GMVUTL",63,0)
 .S $P(GMVCLIO(0),U,8)=+$$CVTVAL^MDTERM($P(GMVCLIO(0),U,8),"CENTIMETER","INCH",2)
"RTN","GMVUTL",64,0)
 I $G(GMVARRAY("UNIT_ID","E"))="KILOGRAM" D
"RTN","GMVUTL",65,0)
 .S $P(GMVCLIO(0),U,8)=+$$CVTVAL^MDTERM($P(GMVCLIO(0),U,8),"KILOGRAM","POUND",2)
"RTN","GMVUTL",66,0)
 I $G(GMVARRAY("UNIT_ID","E"))="MILLIMETERS OF MERCURY" D
"RTN","GMVUTL",67,0)
 .S $P(GMVCLIO(0),U,8)=+$$CVTVAL^MDTERM($P(GMVCLIO(0),U,8),"MILLIMETERS OF MERCURY","CENTIMETERS H2O",1)
"RTN","GMVUTL",68,0)
 ; entered-in-error - won't get errors from clio
"RTN","GMVUTL",69,0)
 S $P(GMVCLIO(2),U,1)="" ;error flag
"RTN","GMVUTL",70,0)
 S $P(GMVCLIO(2),U,2)="" ;error entered by
"RTN","GMVUTL",71,0)
 S $P(GMVCLIO(2),U,3)="" ;reason entered in error
"RTN","GMVUTL",72,0)
 ;
"RTN","GMVUTL",73,0)
 S GMVCLIO(5)="",GMVCNT=0
"RTN","GMVUTL",74,0)
 S GMVCS=$G(GMVARRAY("CUFF_SIZE_ID","I"))
"RTN","GMVUTL",75,0)
 I GMVCS]"" D
"RTN","GMVUTL",76,0)
 .S GMVCS=$$GETIEN^GMVGETQL(GMVCS,2)
"RTN","GMVUTL",77,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",78,0)
 .S $P(GMVCLIO(5),U,GMVCNT)=GMVCS
"RTN","GMVUTL",79,0)
 .Q
"RTN","GMVUTL",80,0)
 S GMVL=$G(GMVARRAY("LOCATION_ID","I"))
"RTN","GMVUTL",81,0)
 I GMVL]"" D
"RTN","GMVUTL",82,0)
 .S GMVL=$$GETIEN^GMVGETQL(GMVL,2)
"RTN","GMVUTL",83,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",84,0)
 .S $P(GMVCLIO(5),U,GMVCNT)=GMVL
"RTN","GMVUTL",85,0)
 .Q
"RTN","GMVUTL",86,0)
 S GMVM=$G(GMVARRAY("METHOD_ID","I"))
"RTN","GMVUTL",87,0)
 I GMVM]"" D
"RTN","GMVUTL",88,0)
 .S GMVM=$$GETIEN^GMVGETQL(GMVM,2)
"RTN","GMVUTL",89,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",90,0)
 .S $P(GMVCLIO(5),U,GMVCNT)=GMVM
"RTN","GMVUTL",91,0)
 .Q
"RTN","GMVUTL",92,0)
 S GMVP=$G(GMVARRAY("POSITION_ID","I"))
"RTN","GMVUTL",93,0)
 I GMVP]"" D
"RTN","GMVUTL",94,0)
 .S GMVP=$$GETIEN^GMVGETQL(GMVP,2)
"RTN","GMVUTL",95,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",96,0)
 .S $P(GMVCLIO(5),U,GMVCNT)=GMVP
"RTN","GMVUTL",97,0)
 .Q
"RTN","GMVUTL",98,0)
 S GMVS=$G(GMVARRAY("SITE_ID","I"))
"RTN","GMVUTL",99,0)
 I GMVS]"" D
"RTN","GMVUTL",100,0)
 .S GMVS=$$GETIEN^GMVGETQL(GMVS,2)
"RTN","GMVUTL",101,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",102,0)
 .S $P(GMVCLIO(5),U,GMVCNT)=GMVS
"RTN","GMVUTL",103,0)
 .Q
"RTN","GMVUTL",104,0)
 S GMVQ=$G(GMVARRAY("QUALITY_ID","I"))
"RTN","GMVUTL",105,0)
 I GMVQ]"" D
"RTN","GMVUTL",106,0)
 .S GMVQ=$$GETIEN^GMVGETQL(GMVQ,2)
"RTN","GMVUTL",107,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",108,0)
 .S $P(GMVCLIO(5),U,GMVCNT)=GMVQ
"RTN","GMVUTL",109,0)
 .Q
"RTN","GMVUTL",110,0)
 I $P(GMVCLIO(0),U,3)=GMVPO2 D
"RTN","GMVUTL",111,0)
 .S GMVLOOP=0
"RTN","GMVUTL",112,0)
 .F  S GMVLOOP=$O(GMVARRAY("CONTEXT",GMVLOOP)) Q:'GMVLOOP  D
"RTN","GMVUTL",113,0)
 ..I $G(GMVARRAY("CONTEXT",GMVLOOP,"TERM_ID","E"))="SUPPLEMENTAL OXYGEN CONCENTRATION" D
"RTN","GMVUTL",114,0)
 ...S GMVO2=$G(GMVARRAY("CONTEXT",GMVLOOP,"SVALUE","E"))
"RTN","GMVUTL",115,0)
 ..I $G(GMVARRAY("CONTEXT",GMVLOOP,"TERM_ID","E"))="SUPPLEMENTAL OXYGEN FLOW RATE" D
"RTN","GMVUTL",116,0)
 ...S GMVFR=$G(GMVARRAY("CONTEXT",GMVLOOP,"SVALUE","E"))
"RTN","GMVUTL",117,0)
 ..S GMVM=$G(GMVARRAY("CONTEXT",GMVLOOP,"METHOD_ID","I"))
"RTN","GMVUTL",118,0)
 ..I GMVM]"" D
"RTN","GMVUTL",119,0)
 ...S GMVM=$$GETIEN^GMVGETQL(GMVM,2)
"RTN","GMVUTL",120,0)
 ...Q:'GMVM
"RTN","GMVUTL",121,0)
 ...S GMVQFLAG=0
"RTN","GMVUTL",122,0)
 ...F GMVQLOOP=1:1 Q:$P($G(GMVCLIO(5)),U,GMVQLOOP)=""  I $P($G(GMVCLIO(5)),U,GMVQLOOP)=GMVM S GMVQFLAG=1 Q
"RTN","GMVUTL",123,0)
 ...I GMVQFLAG=0 S GMVCNT=GMVCNT+1,$P(GMVCLIO(5),U,GMVCNT)=GMVM
"RTN","GMVUTL",124,0)
 S:GMVO2]"" GMVO2=GMVO2_"%"
"RTN","GMVUTL",125,0)
 S:GMVFR]"" GMVFR=GMVFR_" l/min"
"RTN","GMVUTL",126,0)
 I GMVFR="",GMVO2="" S GMVSUP=""
"RTN","GMVUTL",127,0)
 I GMVFR'="",GMVO2="" S GMVSUP=GMVFR
"RTN","GMVUTL",128,0)
 I GMVFR="",GMVO2'="" S GMVSUP=GMVO2
"RTN","GMVUTL",129,0)
 I GMVFR'="",GMVO2'="" S GMVSUP=GMVFR_" "_GMVO2
"RTN","GMVUTL",130,0)
 S $P(GMVCLIO(0),U,10)=GMVSUP
"RTN","GMVUTL",131,0)
 Q
"RTN","GMVUTL",132,0)
 ;
"RTN","GMVUTL",133,0)
F1205(GMV1205,GMVX,GMVY) ; Return file 120.5 record as nodes
"RTN","GMVUTL",134,0)
 ;  Input: GMV1205 = array name to hold nodes (required)
"RTN","GMVUTL",135,0)
 ;            GMVX = File 120.5 IEN or CliO GUID (required)
"RTN","GMVUTL",136,0)
 ;            GMVY = Return records marked as errors? (optional)
"RTN","GMVUTL",137,0)
 ;               0 = don't return, 1 = return error records
"RTN","GMVUTL",138,0)
 ;                   (default = 0)
"RTN","GMVUTL",139,0)
 ; Output:GMV1205(0) = file 120.5 zero node
"RTN","GMVUTL",140,0)
 ;               (2) = 120.5,#2 ^ 120.5, #3 ^ 120.5, #4 delimited by
"RTN","GMVUTL",141,0)
 ;                     tilde (~)
"RTN","GMVUTL",142,0)
 ;               (3) = qualifier IENS delimited by caret (^)
"RTN","GMVUTL",143,0)
 ;         
"RTN","GMVUTL",144,0)
 N GMVCNT,GMVFLAG,GMVLIST,GMVLOOP,GMVNODE,GMVNODE2,GMVIEN1
"RTN","GMVUTL",145,0)
 S GMVX=$G(GMVX),GMVY=$G(GMVY,0)
"RTN","GMVUTL",146,0)
 S (GMV1205(0),GMV1205(2),GMV1205(5))=""
"RTN","GMVUTL",147,0)
 I GMVX'=+GMVX Q
"RTN","GMVUTL",148,0)
 S GMVY=$S(GMVY=1:1,1:0)
"RTN","GMVUTL",149,0)
 S GMVNODE2=$G(^GMR(120.5,+GMVX,2))
"RTN","GMVUTL",150,0)
 I GMVY=0,$P(GMVNODE2,U,1)=1 Q 
"RTN","GMVUTL",151,0)
 S GMV1205(0)=$G(^GMR(120.5,GMVX,0))
"RTN","GMVUTL",152,0)
 S GMVFLAG=0
"RTN","GMVUTL",153,0)
 F GMVLOOP=1,2,3,8 D  Q:GMVFLAG
"RTN","GMVUTL",154,0)
 .S:$P(GMV1205(0),U,GMVLOOP)="" GMVFLAG=1
"RTN","GMVUTL",155,0)
 .Q
"RTN","GMVUTL",156,0)
 I GMVFLAG S (GMV1205(0),GMV1205(2),GMV1205(5))="" Q
"RTN","GMVUTL",157,0)
 S GMV1205(2)=GMVNODE2
"RTN","GMVUTL",158,0)
 S (GMVCNT,GMVIEN1)=0,GMVLIST=""
"RTN","GMVUTL",159,0)
 F  S GMVIEN1=$O(^GMR(120.5,GMVX,2.1,GMVIEN1)) Q:'GMVIEN1  D
"RTN","GMVUTL",160,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",161,0)
 .S $P(GMVLIST,"~",GMVCNT)=+$P($G(^GMR(120.5,GMVX,2.1,GMVIEN1,0)),U,1)
"RTN","GMVUTL",162,0)
 .Q
"RTN","GMVUTL",163,0)
 S $P(GMV1205(2),U,3)=GMVLIST
"RTN","GMVUTL",164,0)
 S (GMVCNT,GMVIEN1)=0
"RTN","GMVUTL",165,0)
 F  S GMVIEN1=$O(^GMR(120.5,GMVX,5,"B",GMVIEN1))  Q:'GMVIEN1  D
"RTN","GMVUTL",166,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVUTL",167,0)
 .S $P(GMV1205(5),U,GMVCNT)=GMVIEN1
"RTN","GMVUTL",168,0)
 .Q
"RTN","GMVUTL",169,0)
 Q
"RTN","GMVUTL",170,0)
 ;
"RTN","GMVUTL",171,0)
GETREC(GMVARRAY,GMVID,GMVERR) ; Checks CLIO and Vitals databases. Returns
"RTN","GMVUTL",172,0)
 ; record as nodes with internal values.
"RTN","GMVUTL",173,0)
 ;  Input: GMVARRAY = array name passed by reference (required)
"RTN","GMVUTL",174,0)
 ;            GMVID = File 120.5 IEN or CliO GUID (required)
"RTN","GMVUTL",175,0)
 ;           GMVERR = Return records marked as errors? (optional)
"RTN","GMVUTL",176,0)
 ;                0 = don't return, 1 = return error records
"RTN","GMVUTL",177,0)
 ;                   (default = 0)
"RTN","GMVUTL",178,0)
 ; Output:GMVARRAY(0) = same as File 120.5 zero node
"RTN","GMVUTL",179,0)
 ;                (2) = 120.5, #2 ^ 120.5, #3 ^ 120.5, #4 delimited by
"RTN","GMVUTL",180,0)
 ;                      tilde (~)
"RTN","GMVUTL",181,0)
 ;                (3) = qualifier IENS (File 120.52) delimited by caret (^)
"RTN","GMVUTL",182,0)
 ;
"RTN","GMVUTL",183,0)
 ; example:
"RTN","GMVUTL",184,0)
 ; >D GETREC^GMVUTL(.RESULT,12196,0) ZW RESULT     
"RTN","GMVUTL",185,0)
 ; RESULT(0)="3080108.093626^217^21^3080108.0937^67^4658^^4^^1.0 l/min 22%"
"RTN","GMVUTL",186,0)
 ; RESULT(2)="^^"
"RTN","GMVUTL",187,0)
 ; RESULT(5)=134
"RTN","GMVUTL",188,0)
 ;
"RTN","GMVUTL",189,0)
 S GMVID=$G(GMVID),GMVERR=$G(GMVERR)
"RTN","GMVUTL",190,0)
 I GMVID="" Q
"RTN","GMVUTL",191,0)
 S GMVERR=$S(GMVERR=1:1,1:0)
"RTN","GMVUTL",192,0)
 I GMVID=+GMVID D  Q
"RTN","GMVUTL",193,0)
 .D F1205(.GMVARRAY,GMVID,GMVERR)
"RTN","GMVUTL",194,0)
 .Q
"RTN","GMVUTL",195,0)
 I GMVID'=+GMVID D  Q
"RTN","GMVUTL",196,0)
 .D CLIO(.GMVARRAY,GMVID)
"RTN","GMVUTL",197,0)
 .Q
"RTN","GMVUTL",198,0)
 Q
"RTN","GMVUTL",199,0)
QRYDATE(RESULT,SDATE,EDATE) ; Returns a list of GUIDs found in the
"RTN","GMVUTL",200,0)
 ; Clinical Observations package for the date range specified
"RTN","GMVUTL",201,0)
 ;  Input: RESULT = array name surrounded by quotes (required)
"RTN","GMVUTL",202,0)
 ;                  ex: "ARRAY", "^TMP($J)"
"RTN","GMVUTL",203,0)
 ;          SDATE = start date of search range in FileMan internal
"RTN","GMVUTL",204,0)
 ;                  format (optional)
"RTN","GMVUTL",205,0)
 ;                  default is T-24 hours
"RTN","GMVUTL",206,0)
 ;          EDATE = end date in FileMan internal format (optional)
"RTN","GMVUTL",207,0)
 ;                  default is current date/time
"RTN","GMVUTL",208,0)
 ; Output: RESULT(0)=number of entries returned 
"RTN","GMVUTL",209,0)
 ;                   or "-1^error message"
"RTN","GMVUTL",210,0)
 ;         RESULT(n)=Global Unique ID (aka GUID)
"RTN","GMVUTL",211,0)
 ; where n is a sequential number starting with 1
"RTN","GMVUTL",212,0)
 ;
"RTN","GMVUTL",213,0)
 ; example:
"RTN","GMVUTL",214,0)
 ; >D QRYDATE^GMVUTL("ARRAY",3070301,3070401)
"RTN","GMVUTL",215,0)
 ; >ZW ARRAY
"RTN","GMVUTL",216,0)
 ; ARRAY(0)=3
"RTN","GMVUTL",217,0)
 ; ARRAY(1)="{FD0FEBBC-8EC1-42E4-9483-4BDBE6370728}"
"RTN","GMVUTL",218,0)
 ; ARRAY(2)="{A7C7FFEB-0CD5-4D55-BB34-35B9620F4ECC}"
"RTN","GMVUTL",219,0)
 ; ARRAY(3)="{D0CEA9D2-A519-41C2-A4AE-9C24C7498E56}"
"RTN","GMVUTL",220,0)
 ;
"RTN","GMVUTL",221,0)
 I $T(QRYDATE^MDCLIO1)="" D  Q
"RTN","GMVUTL",222,0)
 .S @RESULT@(0)="-1^QRYDATE entry point not found in MDCLIO1"
"RTN","GMVUTL",223,0)
 .Q
"RTN","GMVUTL",224,0)
 K ^TMP($J),@RESULT
"RTN","GMVUTL",225,0)
 S SDATE=$G(SDATE,$$FMADD^XLFDT($$NOW^XLFDT(),,-24))
"RTN","GMVUTL",226,0)
 S EDATE=$G(EDATE,$$NOW^XLFDT())
"RTN","GMVUTL",227,0)
 I SDATE>EDATE D  Q
"RTN","GMVUTL",228,0)
 .S @RESULT@(0)="-1^Start Date is after end date"
"RTN","GMVUTL",229,0)
 .Q
"RTN","GMVUTL",230,0)
 D QRYDATE^MDCLIO1(RESULT,SDATE,EDATE)
"RTN","GMVUTL",231,0)
 Q
"VER")
8.0^22.0
"BLD",6914,6)
^17
**END**
**END**
