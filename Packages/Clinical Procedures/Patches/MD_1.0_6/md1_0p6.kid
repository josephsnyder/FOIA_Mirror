KIDS Distribution saved on Apr 03, 2008@09:36:26
Clinical Procedures Version 1.0 Patch 6.
**KIDS**:MD*1.0*6^

**INSTALL NAME**
MD*1.0*6
"BLD",5398,0)
MD*1.0*6^CLINICAL PROCEDURES^0^3080403^y
"BLD",5398,1,0)
^^2^2^3071219^^^^
"BLD",5398,1,1,0)
Please refer to the National Patch Module for the detail of this 
"BLD",5398,1,2,0)
patch build.
"BLD",5398,4,0)
^9.64PA^702.001^8
"BLD",5398,4,702,0)
702
"BLD",5398,4,702,2,0)
^9.641^702^1
"BLD",5398,4,702,2,702,0)
CP TRANSACTION  (File-top level)
"BLD",5398,4,702,2,702,1,0)
^9.6411^.09^2
"BLD",5398,4,702,2,702,1,.09,0)
TRANSACTION STATUS
"BLD",5398,4,702,2,702,1,.13,0)
VISIT
"BLD",5398,4,702,222)
y^y^p^^^^n^^n
"BLD",5398,4,702,224)

"BLD",5398,4,702.001,0)
702.001
"BLD",5398,4,702.001,222)
y^y^f^^^^n
"BLD",5398,4,702.01,0)
702.01
"BLD",5398,4,702.01,2,0)
^9.641^702.01^1
"BLD",5398,4,702.01,2,702.01,0)
CP DEFINITION  (File-top level)
"BLD",5398,4,702.01,2,702.01,1,0)
^9.6411^.06^1
"BLD",5398,4,702.01,2,702.01,1,.06,0)
PROCESSING APPLICATION
"BLD",5398,4,702.01,222)
y^y^p^^^^n^^n
"BLD",5398,4,702.01,224)

"BLD",5398,4,702.09,0)
702.09
"BLD",5398,4,702.09,222)
n^n^f^^n^^y^m^n
"BLD",5398,4,702.09,224)
I $S($P($G(^MDS(702.09,Y,0)),U,1)["GAMBRO":1,$P($G(^MDS(702.09,Y,0)),Y,1)["BRAUN":1,$P($G(^MDS(702.09,Y,0)),Y,1)["Fresenius":1,1:0)
"BLD",5398,4,703.1,0)
703.1
"BLD",5398,4,703.1,2,0)
^9.641^703.1^1
"BLD",5398,4,703.1,2,703.1,0)
CP RESULT REPORT  (File-top level)
"BLD",5398,4,703.1,2,703.1,1,0)
^9.6411^.05^1
"BLD",5398,4,703.1,2,703.1,1,.05,0)
STUDY REFERENCE NUMBER
"BLD",5398,4,703.1,222)
y^y^p^^^^n^^n
"BLD",5398,4,703.1,224)

"BLD",5398,4,704.201,0)
704.201
"BLD",5398,4,704.201,222)
y^y^f^^^^n
"BLD",5398,4,704.202,0)
704.202
"BLD",5398,4,704.202,222)
y^y^f^^^^n
"BLD",5398,4,704.209,0)
704.209
"BLD",5398,4,704.209,222)
y^y^f^^^^n^^
"BLD",5398,4,704.209,224)

"BLD",5398,4,"APDD",702,702)

"BLD",5398,4,"APDD",702,702,.09)

"BLD",5398,4,"APDD",702,702,.13)

"BLD",5398,4,"APDD",702.01,702.01)

"BLD",5398,4,"APDD",702.01,702.01,.06)

"BLD",5398,4,"APDD",703.1,703.1)

"BLD",5398,4,"APDD",703.1,703.1,.05)

"BLD",5398,4,"B",702,702)

"BLD",5398,4,"B",702.001,702.001)

"BLD",5398,4,"B",702.01,702.01)

"BLD",5398,4,"B",702.09,702.09)

"BLD",5398,4,"B",703.1,703.1)

"BLD",5398,4,"B",704.201,704.201)

"BLD",5398,4,"B",704.202,704.202)

"BLD",5398,4,"B",704.209,704.209)

"BLD",5398,6.3)
102
"BLD",5398,"ABNS",0)
^9.66A^^
"BLD",5398,"ABPKG")
n^n
"BLD",5398,"INI")

"BLD",5398,"INID")
^^
"BLD",5398,"INIT")
MDPOST06
"BLD",5398,"KRN",0)
^9.67PA^8989.52^19
"BLD",5398,"KRN",.4,0)
.4
"BLD",5398,"KRN",.401,0)
.401
"BLD",5398,"KRN",.402,0)
.402
"BLD",5398,"KRN",.403,0)
.403
"BLD",5398,"KRN",.5,0)
.5
"BLD",5398,"KRN",.84,0)
.84
"BLD",5398,"KRN",3.6,0)
3.6
"BLD",5398,"KRN",3.8,0)
3.8
"BLD",5398,"KRN",9.2,0)
9.2
"BLD",5398,"KRN",9.8,0)
9.8
"BLD",5398,"KRN",9.8,"NM",0)
^9.68A^49^30
"BLD",5398,"KRN",9.8,"NM",7,0)
MDKRPC1^^0^B71764954
"BLD",5398,"KRN",9.8,"NM",14,0)
MDHL7A^^0^B47556007
"BLD",5398,"KRN",9.8,"NM",16,0)
MDHL7D^^0^B590368
"BLD",5398,"KRN",9.8,"NM",17,0)
MDHL7MCA^^0^B13657775
"BLD",5398,"KRN",9.8,"NM",18,0)
MDHL7U3^^0^B59275593
"BLD",5398,"KRN",9.8,"NM",19,0)
MDHL7X^^0^B3369221
"BLD",5398,"KRN",9.8,"NM",20,0)
MDUXML^^0^B2156762
"BLD",5398,"KRN",9.8,"NM",22,0)
MDUXMLM^^0^B10255428
"BLD",5398,"KRN",9.8,"NM",23,0)
MDUXMLOX^^0^B2576985
"BLD",5398,"KRN",9.8,"NM",24,0)
MDUXMLU1^^0^B11032081
"BLD",5398,"KRN",9.8,"NM",25,0)
MDAPI^^0^B63383064
"BLD",5398,"KRN",9.8,"NM",26,0)
MDRPCOP^^0^B73541480
"BLD",5398,"KRN",9.8,"NM",27,0)
MDRPCOT^^0^B75811389
"BLD",5398,"KRN",9.8,"NM",28,0)
MDXMLFM^^0^B58557768
"BLD",5398,"KRN",9.8,"NM",30,0)
MDPOST06^^0^B2550231
"BLD",5398,"KRN",9.8,"NM",31,0)
MDKRPC2^^0^B73066686
"BLD",5398,"KRN",9.8,"NM",32,0)
MDRPCOP1^^0^B7884851
"BLD",5398,"KRN",9.8,"NM",34,0)
MDRPCOT2^^0^B41546824
"BLD",5398,"KRN",9.8,"NM",35,0)
MDRPCNT^^0^B6941804
"BLD",5398,"KRN",9.8,"NM",36,0)
MDRPCNT1^^0^B40746099
"BLD",5398,"KRN",9.8,"NM",37,0)
MDRPCW^^0^B62805042
"BLD",5398,"KRN",9.8,"NM",38,0)
MDRPCW1^^0^B47358389
"BLD",5398,"KRN",9.8,"NM",40,0)
MDRPCOW^^0^B27925312
"BLD",5398,"KRN",9.8,"NM",42,0)
MDPCE1^^0^B5009420
"BLD",5398,"KRN",9.8,"NM",43,0)
MDPCE2^^0^B23364191
"BLD",5398,"KRN",9.8,"NM",44,0)
MDXMLFM1^^0^B54613432
"BLD",5398,"KRN",9.8,"NM",46,0)
MDSTUDL^^0^B24274878
"BLD",5398,"KRN",9.8,"NM",47,0)
MDRPCOG^^0^B23343248
"BLD",5398,"KRN",9.8,"NM",48,0)
MDPOST6A^^0^B4565720
"BLD",5398,"KRN",9.8,"NM",49,0)
MDKUTLR^^0^B5318285
"BLD",5398,"KRN",9.8,"NM","B","MDAPI",25)

"BLD",5398,"KRN",9.8,"NM","B","MDHL7A",14)

"BLD",5398,"KRN",9.8,"NM","B","MDHL7D",16)

"BLD",5398,"KRN",9.8,"NM","B","MDHL7MCA",17)

"BLD",5398,"KRN",9.8,"NM","B","MDHL7U3",18)

"BLD",5398,"KRN",9.8,"NM","B","MDHL7X",19)

"BLD",5398,"KRN",9.8,"NM","B","MDKRPC1",7)

"BLD",5398,"KRN",9.8,"NM","B","MDKRPC2",31)

"BLD",5398,"KRN",9.8,"NM","B","MDKUTLR",49)

"BLD",5398,"KRN",9.8,"NM","B","MDPCE1",42)

"BLD",5398,"KRN",9.8,"NM","B","MDPCE2",43)

"BLD",5398,"KRN",9.8,"NM","B","MDPOST06",30)

"BLD",5398,"KRN",9.8,"NM","B","MDPOST6A",48)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCNT",35)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCNT1",36)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCOG",47)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCOP",26)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCOP1",32)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCOT",27)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCOT2",34)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCOW",40)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCW",37)

"BLD",5398,"KRN",9.8,"NM","B","MDRPCW1",38)

"BLD",5398,"KRN",9.8,"NM","B","MDSTUDL",46)

"BLD",5398,"KRN",9.8,"NM","B","MDUXML",20)

"BLD",5398,"KRN",9.8,"NM","B","MDUXMLM",22)

"BLD",5398,"KRN",9.8,"NM","B","MDUXMLOX",23)

"BLD",5398,"KRN",9.8,"NM","B","MDUXMLU1",24)

"BLD",5398,"KRN",9.8,"NM","B","MDXMLFM",28)

"BLD",5398,"KRN",9.8,"NM","B","MDXMLFM1",44)

"BLD",5398,"KRN",19,0)
19
"BLD",5398,"KRN",19,"NM",0)
^9.68A^3^2
"BLD",5398,"KRN",19,"NM",1,0)
MD HEMODIALYSIS USER^^0
"BLD",5398,"KRN",19,"NM",3,0)
MD STUDIES LIST^^0
"BLD",5398,"KRN",19,"NM","B","MD HEMODIALYSIS USER",1)

"BLD",5398,"KRN",19,"NM","B","MD STUDIES LIST",3)

"BLD",5398,"KRN",19.1,0)
19.1
"BLD",5398,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",5398,"KRN",101,0)
101
"BLD",5398,"KRN",409.61,0)
409.61
"BLD",5398,"KRN",771,0)
771
"BLD",5398,"KRN",870,0)
870
"BLD",5398,"KRN",8989.51,0)
8989.51
"BLD",5398,"KRN",8989.51,"NM",0)
^9.68A^6^6
"BLD",5398,"KRN",8989.51,"NM",1,0)
MD DAYS TO RETAIN COM STUDY^^0
"BLD",5398,"KRN",8989.51,"NM",2,0)
MD COMPL PROC DISPLAY DAYS^^0
"BLD",5398,"KRN",8989.51,"NM",3,0)
MD APPOINT START DATE^^0
"BLD",5398,"KRN",8989.51,"NM",4,0)
MD APPOINT END DATE^^0
"BLD",5398,"KRN",8989.51,"NM",5,0)
MDK GUI VERSION^^0
"BLD",5398,"KRN",8989.51,"NM",6,0)
MDK APPLICATION INSTALL^^0
"BLD",5398,"KRN",8989.51,"NM","B","MD APPOINT END DATE",4)

"BLD",5398,"KRN",8989.51,"NM","B","MD APPOINT START DATE",3)

"BLD",5398,"KRN",8989.51,"NM","B","MD COMPL PROC DISPLAY DAYS",2)

"BLD",5398,"KRN",8989.51,"NM","B","MD DAYS TO RETAIN COM STUDY",1)

"BLD",5398,"KRN",8989.51,"NM","B","MDK APPLICATION INSTALL",6)

"BLD",5398,"KRN",8989.51,"NM","B","MDK GUI VERSION",5)

"BLD",5398,"KRN",8989.52,0)
8989.52
"BLD",5398,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",5398,"KRN",8994,0)
8994
"BLD",5398,"KRN",8994,"NM",0)
^9.68A^14^9
"BLD",5398,"KRN",8994,"NM",5,0)
MDK GET VISTA DATA^^0
"BLD",5398,"KRN",8994,"NM",6,0)
MDK UTILITY^^0
"BLD",5398,"KRN",8994,"NM",7,0)
MD TMDWIDGET^^0
"BLD",5398,"KRN",8994,"NM",8,0)
MDK GET/SET RENAL DATA^^0
"BLD",5398,"KRN",8994,"NM",9,0)
MD TMDNOTE^^0
"BLD",5398,"KRN",8994,"NM",10,0)
MD TMDCIDC^^0
"BLD",5398,"KRN",8994,"NM",12,0)
MD TMDLEX^^0
"BLD",5398,"KRN",8994,"NM",13,0)
MD TMDENCOUNTER^^0
"BLD",5398,"KRN",8994,"NM",14,0)
MD TMDSUBMITU^^0
"BLD",5398,"KRN",8994,"NM","B","MD TMDCIDC",10)

"BLD",5398,"KRN",8994,"NM","B","MD TMDENCOUNTER",13)

"BLD",5398,"KRN",8994,"NM","B","MD TMDLEX",12)

"BLD",5398,"KRN",8994,"NM","B","MD TMDNOTE",9)

"BLD",5398,"KRN",8994,"NM","B","MD TMDSUBMITU",14)

"BLD",5398,"KRN",8994,"NM","B","MD TMDWIDGET",7)

"BLD",5398,"KRN",8994,"NM","B","MDK GET VISTA DATA",5)

"BLD",5398,"KRN",8994,"NM","B","MDK GET/SET RENAL DATA",8)

"BLD",5398,"KRN",8994,"NM","B","MDK UTILITY",6)

"BLD",5398,"KRN","B",.4,.4)

"BLD",5398,"KRN","B",.401,.401)

"BLD",5398,"KRN","B",.402,.402)

"BLD",5398,"KRN","B",.403,.403)

"BLD",5398,"KRN","B",.5,.5)

"BLD",5398,"KRN","B",.84,.84)

"BLD",5398,"KRN","B",3.6,3.6)

"BLD",5398,"KRN","B",3.8,3.8)

"BLD",5398,"KRN","B",9.2,9.2)

"BLD",5398,"KRN","B",9.8,9.8)

"BLD",5398,"KRN","B",19,19)

"BLD",5398,"KRN","B",19.1,19.1)

"BLD",5398,"KRN","B",101,101)

"BLD",5398,"KRN","B",409.61,409.61)

"BLD",5398,"KRN","B",771,771)

"BLD",5398,"KRN","B",870,870)

"BLD",5398,"KRN","B",8989.51,8989.51)

"BLD",5398,"KRN","B",8989.52,8989.52)

"BLD",5398,"KRN","B",8994,8994)

"BLD",5398,"PRET")

"BLD",5398,"QUES",0)
^9.62^^
"BLD",5398,"REQB",0)
^9.611^1^1
"BLD",5398,"REQB",1,0)
MD*1.0*4^1
"BLD",5398,"REQB","B","MD*1.0*4",1)

"DATA",702.09,20,0)
BRAUN^^BBraun Dialysis Device Interface^^1^BBRAUN^^^0
"DATA",702.09,20,.1)
MDHL7D^C^0^^^^^
"DATA",702.09,20,.3)
1^0^0^0^0^0^0
"DATA",702.09,20,"ID")
{97B5B2D0-7C4C-D3E9-ED16-C68134114B3C}
"DATA",702.09,137,0)
GAMBRO_EXALIS^^Cobe Dialysis Device Interface^^1^Gambro Exalis^^^0
"DATA",702.09,137,.1)
MDHL7D^C^0^^^^^
"DATA",702.09,137,.3)
1^0^0^0^0^0^0
"DATA",702.09,137,"ID")
{AD92A770-F583-D921-8733-F6B19EC96678}
"DATA",702.09,192,0)
BRAUN (Bi-Directional)^^BBraun Dialysis Device Interface^^1^BBRAUN^^^0
"DATA",702.09,192,.1)
MDHL7D^C^1^^^BRAUN^^51
"DATA",702.09,192,.3)
1^0^0^0^0^0^0
"DATA",702.09,192,"ID")
{EB5F463C-B601-8EA2-4C1B-4547DDF065BA}
"DATA",702.09,194,0)
GAMBRO_EXALIS (Bi-Directional)^^Cobe Dialysis Device Interface^^1^Gambro Exalis^^^0
"DATA",702.09,194,.1)
MDHL7D^C^1^^^GAMBRO_EXALIS^^
"DATA",702.09,194,.3)
1^0^0^0^0^0^0
"DATA",702.09,194,"ID")
{477B5FB2-FCCE-D10C-2B73-53CA2E51E5B6}
"DATA",702.09,299,0)
Fresenius^^Fresenius Dialysis Device Interface^^1^Fresenius^^^0
"DATA",702.09,299,.1)
MDHL7D^C^0^^^Fresenius
"DATA",702.09,299,.3)
1^0^0^0^0^0^0
"DATA",702.09,299,"ID")
{9C51137B-7259-C4D0-155E-80AA4E434C4C}
"DATA",702.09,300,0)
Fresenius (Bi-directional)^^Fresenius Dialysis Device Interface^^1^Fresenius^^^0
"DATA",702.09,300,.1)
MDHL7D^C^1^^^Fresenius^^
"DATA",702.09,300,.3)
1^0^0^0^0^0^0
"DATA",702.09,300,"ID")
{EC75BC52-8963-50D3-6B4D-6A4185133A66}
"FIA",702)
CP TRANSACTION
"FIA",702,0)
^MDD(702,
"FIA",702,0,0)
702IOP
"FIA",702,0,1)
y^y^p^^^^n^^n
"FIA",702,0,10)

"FIA",702,0,11)

"FIA",702,0,"RLRO")

"FIA",702,0,"VR")
1.0^MD
"FIA",702,702)
1
"FIA",702,702,.09)

"FIA",702,702,.13)

"FIA",702.001)
CP_TRANSACTION_TIU_HISTORY
"FIA",702.001,0)
^MDD(702.001,
"FIA",702.001,0,0)
702.001P
"FIA",702.001,0,1)
y^y^f^^^^n
"FIA",702.001,0,10)

"FIA",702.001,0,11)

"FIA",702.001,0,"RLRO")

"FIA",702.001,0,"VR")
1.0^MD
"FIA",702.001,702.001)
0
"FIA",702.01)
CP DEFINITION
"FIA",702.01,0)
^MDS(702.01,
"FIA",702.01,0,0)
702.01I
"FIA",702.01,0,1)
y^y^p^^^^n^^n
"FIA",702.01,0,10)

"FIA",702.01,0,11)

"FIA",702.01,0,"RLRO")

"FIA",702.01,0,"VR")
1.0^MD
"FIA",702.01,702.01)
1
"FIA",702.01,702.01,.06)

"FIA",702.09)
CP INSTRUMENT
"FIA",702.09,0)
^MDS(702.09,
"FIA",702.09,0,0)
702.09I
"FIA",702.09,0,1)
n^n^f^^n^^y^m^n
"FIA",702.09,0,10)

"FIA",702.09,0,11)
I $S($P($G(^MDS(702.09,Y,0)),U,1)["GAMBRO":1,$P($G(^MDS(702.09,Y,0)),Y,1)["BRAUN":1,$P($G(^MDS(702.09,Y,0)),Y,1)["Fresenius":1,1:0)
"FIA",702.09,0,"RLRO")

"FIA",702.09,0,"VR")
1.0^MD
"FIA",702.09,702.09)
0
"FIA",703.1)
CP RESULT REPORT
"FIA",703.1,0)
^MDD(703.1,
"FIA",703.1,0,0)
703.1
"FIA",703.1,0,1)
y^y^p^^^^n^^n
"FIA",703.1,0,10)

"FIA",703.1,0,11)

"FIA",703.1,0,"RLRO")

"FIA",703.1,0,"VR")
1.0^MD
"FIA",703.1,703.1)
1
"FIA",703.1,703.1,.05)

"FIA",704.201)
HEMODIALYSIS ACCESS POINTS
"FIA",704.201,0)
^MDK(704.201,
"FIA",704.201,0,0)
704.201P
"FIA",704.201,0,1)
y^y^f^^^^n
"FIA",704.201,0,10)

"FIA",704.201,0,11)

"FIA",704.201,0,"RLRO")

"FIA",704.201,0,"VR")
1.0^MD
"FIA",704.201,704.201)
0
"FIA",704.201,704.2011)
0
"FIA",704.201,704.2012)
0
"FIA",704.201,704.2013)
0
"FIA",704.202)
HEMODIALYSIS STUDY
"FIA",704.202,0)
^MDK(704.202,
"FIA",704.202,0,0)
704.202IP
"FIA",704.202,0,1)
y^y^f^^^^n
"FIA",704.202,0,10)

"FIA",704.202,0,11)

"FIA",704.202,0,"RLRO")

"FIA",704.202,0,"VR")
1.0^MD
"FIA",704.202,704.202)
0
"FIA",704.202,704.2021)
0
"FIA",704.202,704.2022)
0
"FIA",704.202,704.2023)
0
"FIA",704.202,704.2024)
0
"FIA",704.202,704.2025)
0
"FIA",704.202,704.2026)
0
"FIA",704.209)
HEMODIALYSIS SETTINGS
"FIA",704.209,0)
^MDK(704.209,
"FIA",704.209,0,0)
704.209
"FIA",704.209,0,1)
y^y^f^^^^n^^
"FIA",704.209,0,10)

"FIA",704.209,0,11)

"FIA",704.209,0,"RLRO")

"FIA",704.209,0,"VR")
1.0^MD
"FIA",704.209,704.209)
0
"FIA",704.209,704.2091)
0
"INIT")
MDPOST06
"IX",702.001,702.001,"ADATE",0)
702.001^ADATE^CHRONOLOGICAL INDEX OF NOTES BY STUDY^R^^R^IR^I^702.001^^^^^S
"IX",702.001,702.001,"ADATE",.1,0)
^^2^2^3071210^^
"IX",702.001,702.001,"ADATE",.1,1,0)
This is a chronological index of TIU notes by study used
"IX",702.001,702.001,"ADATE",.1,2,0)
for sorting.
"IX",702.001,702.001,"ADATE",1)
S ^MDD(702.001,"ADATE",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",702.001,702.001,"ADATE",2)
K ^MDD(702.001,"ADATE",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",702.001,702.001,"ADATE",2.5)
K ^MDD(702.001,"ADATE")
"IX",702.001,702.001,"ADATE",11.1,0)
^.114IA^3^3
"IX",702.001,702.001,"ADATE",11.1,1,0)
1^F^702.001^.01^30^1^F
"IX",702.001,702.001,"ADATE",11.1,2,0)
2^F^702.001^.03^30^2^F
"IX",702.001,702.001,"ADATE",11.1,3,0)
3^F^702.001^.02^30^3^F
"IX",702.001,702.001,"ASTUDY",0)
702.001^ASTUDY^INDEX BY STUDY, TIU^R^^R^IR^I^702.001^^^^^S
"IX",702.001,702.001,"ASTUDY",.1,0)
^^2^2^3071210^
"IX",702.001,702.001,"ASTUDY",.1,1,0)
This is an index that is by study internal entry number and TIU Note
"IX",702.001,702.001,"ASTUDY",.1,2,0)
internal entry number that is used for sorting.
"IX",702.001,702.001,"ASTUDY",1)
S ^MDD(702.001,"ASTUDY",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",702.001,702.001,"ASTUDY",2)
K ^MDD(702.001,"ASTUDY",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",702.001,702.001,"ASTUDY",2.5)
K ^MDD(702.001,"ASTUDY")
"IX",702.001,702.001,"ASTUDY",11.1,0)
^.114IA^2^2
"IX",702.001,702.001,"ASTUDY",11.1,1,0)
1^F^702.001^.01^30^1^F
"IX",702.001,702.001,"ASTUDY",11.1,2,0)
2^F^702.001^.02^30^2^F
"IX",702.001,702.001,"PK",0)
702.001^PK^INDEX BY NOTE, STUDY, DATE ASSIGNED^R^^R^IR^I^702.001^^^^^LS
"IX",702.001,702.001,"PK",.1,0)
^^2^2^3071210^^
"IX",702.001,702.001,"PK",.1,1,0)
This is an index by TIU notes, study, and date/time assigned
"IX",702.001,702.001,"PK",.1,2,0)
that is used for lookup and sorting.
"IX",702.001,702.001,"PK",1)
S ^MDD(702.001,"PK",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",702.001,702.001,"PK",2)
K ^MDD(702.001,"PK",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",702.001,702.001,"PK",2.5)
K ^MDD(702.001,"PK")
"IX",702.001,702.001,"PK",11.1,0)
^.114IA^3^3
"IX",702.001,702.001,"PK",11.1,1,0)
1^F^702.001^.02^30^1^F
"IX",702.001,702.001,"PK",11.1,2,0)
2^F^702.001^.01^30^2^F
"IX",702.001,702.001,"PK",11.1,3,0)
3^F^702.001^.03^30^3^F
"IX",702.09,702.09,"PK",0)
702.09^PK^Uniqueness Index for Key 'A' of File #702.09^R^^F^IR^I^702.09^^^^^LS
"IX",702.09,702.09,"PK",1)
S ^MDS(702.09,"PK",$E(X,1,38),DA)=""
"IX",702.09,702.09,"PK",2)
K ^MDS(702.09,"PK",$E(X,1,38),DA)
"IX",702.09,702.09,"PK",2.5)
K ^MDS(702.09,"PK")
"IX",702.09,702.09,"PK",11.1,0)
^.114IA^1^1
"IX",702.09,702.09,"PK",11.1,1,0)
1^F^702.09^.1^38^1
"KEY",702.09,702.09,"A",0)
702.09^A^P^818
"KEY",702.09,702.09,"A",2,0)
^.312IA^1^1
"KEY",702.09,702.09,"A",2,1,0)
.1^702.09^1
"KEYPTR",702.09,702.09,"A")
702.09^PK
"KRN",19,12407,-1)
0^1
"KRN",19,12407,0)
MD HEMODIALYSIS USER^HEMODIALYSIS USER^^B^^^^^^^^CLINICAL PROCEDURES
"KRN",19,12407,1,0)
^19.06^1^1^3070514^^^^
"KRN",19,12407,1,1,0)
Option name to create context for the Hemodialysis functionality.
"KRN",19,12407,99.1)
60948,36488
"KRN",19,12407,"RPC",0)
^19.05P^19^19
"KRN",19,12407,"RPC",1,0)
MDK GET VISTA DATA
"KRN",19,12407,"RPC",2,0)
MDK GET/SET RENAL DATA
"KRN",19,12407,"RPC",3,0)
MDK UTILITY
"KRN",19,12407,"RPC",4,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,12407,"RPC",5,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,12407,"RPC",6,0)
MD TMDWIDGET
"KRN",19,12407,"RPC",7,0)
MD TMDNOTE
"KRN",19,12407,"RPC",8,0)
MD TMDCIDC
"KRN",19,12407,"RPC",10,0)
MD TMDLEX
"KRN",19,12407,"RPC",11,0)
MD TMDENCOUNTER
"KRN",19,12407,"RPC",12,0)
GMV MANAGER
"KRN",19,12407,"RPC",13,0)
MD GATEWAY
"KRN",19,12407,"RPC",14,0)
MD TMDSUBMITU
"KRN",19,12407,"RPC",15,0)
ORWPT PTINQ
"KRN",19,12407,"RPC",16,0)
GMV PTSELECT
"KRN",19,12407,"RPC",17,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,12407,"RPC",18,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,12407,"RPC",19,0)
MD TMDRECORDID
"KRN",19,12407,"U")
HEMODIALYSIS USER
"KRN",19,12445,-1)
0^3
"KRN",19,12445,0)
MD STUDIES LIST^Clinical Procedures Studies List^^R^^^^^^^^CLINICAL PROCEDURES
"KRN",19,12445,1,0)
^^1^1^3051027^
"KRN",19,12445,1,1,0)
This option will generate a list of Clinical Procedures studies.
"KRN",19,12445,25)
EN2^MDSTUDL
"KRN",19,12445,"U")
CLINICAL PROCEDURES STUDIES LI
"KRN",8989.51,415,-1)
0^1
"KRN",8989.51,415,0)
MD DAYS TO RETAIN COM STUDY^Days to Retain Completed Study^0^^Days^0
"KRN",8989.51,415,1)
N^1:365^Enter the number of days from 1 to 365
"KRN",8989.51,415,20,0)
^8989.512^5^5^3060911^^^^
"KRN",8989.51,415,20,1,0)
The number of days after check-in date/time to display the study
"KRN",8989.51,415,20,2,0)
that has been completed in the CPUser application.  Studies that have
"KRN",8989.51,415,20,3,0)
procedures with multiple or cumulative results are NOT included.
"KRN",8989.51,415,20,4,0)
Cumulative and multiple results studies will have a default value of
"KRN",8989.51,415,20,5,0)
365.
"KRN",8989.51,415,30,0)
^8989.513I^1^1
"KRN",8989.51,415,30,1,0)
1^4.2
"KRN",8989.51,429,-1)
0^2
"KRN",8989.51,429,0)
MD COMPL PROC DISPLAY DAYS^Completed Proc Display Days^0^^Days
"KRN",8989.51,429,1)
N^1:365^Enter the number of days from 1 to 365
"KRN",8989.51,429,20,0)
^8989.512^2^2^3060911^^^
"KRN",8989.51,429,20,1,0)
The number of days the completed procedure requests will be
"KRN",8989.51,429,20,2,0)
displayed in the CP Check-in screen.
"KRN",8989.51,429,30,0)
^8989.513I^1^1
"KRN",8989.51,429,30,1,0)
1^4.2
"KRN",8989.51,444,-1)
0^3
"KRN",8989.51,444,0)
MD APPOINT START DATE^Start Date for Encounter Appointments^0^^Days
"KRN",8989.51,444,1)
N^0:365^Enter a number from 0 to 365.
"KRN",8989.51,444,20,0)
^8989.512^4^4^3060629^^^
"KRN",8989.51,444,20,1,0)
Enter a number from 0 to 365 for the number of days that will be
"KRN",8989.51,444,20,2,0)
used to subtract from today as the start date range of the Encounter
"KRN",8989.51,444,20,3,0)
Appointments.  If no value is entered, the default value used
"KRN",8989.51,444,20,4,0)
will be 200.
"KRN",8989.51,444,30,0)
^8989.513I^1^1
"KRN",8989.51,444,30,1,0)
1^4.2
"KRN",8989.51,445,-1)
0^4
"KRN",8989.51,445,0)
MD APPOINT END DATE^End Date for Encounter Appointments^0^^Days
"KRN",8989.51,445,1)
N^0:365^Enter a number from 0 to 365.
"KRN",8989.51,445,20,0)
^8989.512^4^4^3070517^^^^
"KRN",8989.51,445,20,1,0)
Enter a number from 0 to 365 for the number of days that will be
"KRN",8989.51,445,20,2,0)
used to add to today as the end date range of the Encounter
"KRN",8989.51,445,20,3,0)
Appointments.  If no value is entered, the default value used
"KRN",8989.51,445,20,4,0)
will be 0.
"KRN",8989.51,445,30,0)
^8989.513I^1^1
"KRN",8989.51,445,30,1,0)
1^4.2
"KRN",8989.51,457,-1)
0^5
"KRN",8989.51,457,0)
MDK GUI VERSION^Hemodialysis Version Compatibility^1^Application:Version^Compatible with current server version^0
"KRN",8989.51,457,1)
Y
"KRN",8989.51,457,6)
F^1:40
"KRN",8989.51,457,20,0)
^8989.512^3^3^3070208^^^
"KRN",8989.51,457,20,1,0)
This parameter is used to store the application:versions that are compatible
"KRN",8989.51,457,20,2,0)
with the current server version of Hemodialysis.  Instance format
"KRN",8989.51,457,20,3,0)
of APPLICATION:VERSION  (example: HEMODIALYSIS.EXE:0.0.0.0).
"KRN",8989.51,457,30,0)
^8989.513I^1^1
"KRN",8989.51,457,30,1,0)
1^4.2
"KRN",8989.51,481,-1)
0^6
"KRN",8989.51,481,0)
MDK APPLICATION INSTALL^MDK Application Install^1^Installation Distribution Info^Distribution Info Value^0
"KRN",8989.51,481,1)
F^1:250
"KRN",8989.51,481,6)
F^1:250
"KRN",8989.51,481,20,0)
^^6^6^3080219^
"KRN",8989.51,481,20,1,0)
This parameter is used to store the Hemodialysis application
"KRN",8989.51,481,20,2,0)
distribution information.  The information includes the following:
"KRN",8989.51,481,20,3,0)
1) Date/Time when application first launched.
"KRN",8989.51,481,20,4,0)
2) User Name
"KRN",8989.51,481,20,5,0)
3) System Option Loaded (Y/N)
"KRN",8989.51,481,20,6,0)
4) Workstation of where the application was launched.
"KRN",8989.51,481,30,0)
^8989.513I^1^1
"KRN",8989.51,481,30,1,0)
1^4.2
"KRN",8994,2199,-1)
0^5
"KRN",8994,2199,0)
MDK GET VISTA DATA^RPC^MDKRPC1^2^R^0
"KRN",8994,2199,2,0)
^8994.02A^2^2
"KRN",8994,2199,2,1,0)
OPTION^1^8^1^1
"KRN",8994,2199,2,1,1,0)
^^1^1^3040819^
"KRN",8994,2199,2,1,1,1,0)
This is the routine tag that will be called to retrieve the data.
"KRN",8994,2199,2,2,0)
DATA^1^50^1^2
"KRN",8994,2199,2,2,1,0)
^8994.021^3^3^3041108^^
"KRN",8994,2199,2,2,1,1,0)
This is whatever data is needed by the subroutine to process the request 
"KRN",8994,2199,2,2,1,2,0)
for data. In many cases it will be a single value (e.g., patient id - 
"KRN",8994,2199,2,2,1,3,0)
DFN).
"KRN",8994,2199,2,"B","DATA",2)

"KRN",8994,2199,2,"B","OPTION",1)

"KRN",8994,2199,2,"PARAMSEQ",1,1)

"KRN",8994,2199,2,"PARAMSEQ",2,2)

"KRN",8994,2199,3,0)
^8994.03^14^14^3041108^^
"KRN",8994,2199,3,1,0)
Returns an array.
"KRN",8994,2199,3,2,0)
 
"KRN",8994,2199,3,3,0)
 RESULT(0)=number or
"KRN",8994,2199,3,4,0)
 RESULT(0)=-1^error message
"KRN",8994,2199,3,5,0)
 RESULT(1)=data
"KRN",8994,2199,3,6,0)
 RESULT(n)=data
"KRN",8994,2199,3,7,0)
 
"KRN",8994,2199,3,8,0)
If data is not found, RESULT(0) will be contain a "-1" in the first piece 
"KRN",8994,2199,3,9,0)
and an error message in the second piece.
"KRN",8994,2199,3,10,0)
 
"KRN",8994,2199,3,11,0)
If data is found, RESULT(0) will contain a number that indicates how many 
"KRN",8994,2199,3,12,0)
entries are returned.
"KRN",8994,2199,3,13,0)
 
"KRN",8994,2199,3,14,0)
RESULT(1) through RESULT(n) will contain the data that is found.
"KRN",8994,2208,-1)
0^7
"KRN",8994,2208,0)
MD TMDWIDGET^RPC^MDRPCOW^4^R^^^1^1
"KRN",8994,2232,-1)
0^6
"KRN",8994,2232,0)
MDK UTILITY^RPC^MDKUTLR^4^R^^^1
"KRN",8994,2255,-1)
0^8
"KRN",8994,2255,0)
MDK GET/SET RENAL DATA^RPC^MDKRPC2^4^R^^^1
"KRN",8994,2327,-1)
0^9
"KRN",8994,2327,0)
MD TMDNOTE^RPC^MDRPCNT^4^R^0^^1^1
"KRN",8994,2327,1,0)
^^101^101^3060627^
"KRN",8994,2327,1,1,0)
This remote procedure call does the following:
"KRN",8994,2327,1,2,0)
Accepts the following Inputs:
"KRN",8994,2327,1,3,0)
   RESULTS - Both (Input and Output) - Passed in as the array to return
"KRN",8994,2327,1,4,0)
             results in.
"KRN",8994,2327,1,5,0)
 
"KRN",8994,2327,1,6,0)
   OPTION - NEWDOC = Add additional new document to the Hemodialysis
"KRN",8994,2327,1,7,0)
                     study.
"KRN",8994,2327,1,8,0)
 
"KRN",8994,2327,1,9,0)
            NOTELIST = Returns a list of documents associated with the
"KRN",8994,2327,1,10,0)
                      study.  The pieces returned are: Note IEN, Note
"KRN",8994,2327,1,11,0)
                      title, Date/Time Creation, Author, and Hospital
"KRN",8994,2327,1,12,0)
                      Location.
"KRN",8994,2327,1,13,0)
 
"KRN",8994,2327,1,14,0)
            VIEWTIU = Return the text lines of a document from NOTELST.
"KRN",8994,2327,1,15,0)
 
"KRN",8994,2327,1,16,0)
   MDSID - Study internal Entry Number.
"KRN",8994,2327,1,17,0)
 
"KRN",8994,2327,1,18,0)
   MDTIU - TIU Document Internal Entry Number.
"KRN",8994,2327,1,19,0)
 
"KRN",8994,2327,1,20,0)
   MDDTE - Date/Time of Document Creation.
"KRN",8994,2327,1,21,0)
 
"KRN",8994,2327,1,22,0)
   MDAUTH - Author of document.
"KRN",8994,2327,1,23,0)
 
"KRN",8994,2327,1,24,0)
   MDESIG - Encrypted Electronic Signature.
"KRN",8994,2327,1,25,0)
 
"KRN",8994,2327,1,26,0)
   MDTXT - Text of the new document in an array.
"KRN",8994,2327,1,27,0)
 
"KRN",8994,2327,1,28,0)
 
"KRN",8994,2327,1,29,0)
Return Results are the following:
"KRN",8994,2327,1,30,0)
 
"KRN",8994,2327,1,31,0)
OPTION = NEWDOC
"KRN",8994,2327,1,32,0)
 
"KRN",8994,2327,1,33,0)
> D RPC^MDRPCNT(.RESULTS,"NEWDOC",904,"",3050524.0915,679,74RHLld;flk,MDTXT)
"KRN",8994,2327,1,34,0)
 
"KRN",8994,2327,1,35,0)
> D ^%G
"KRN",8994,2327,1,36,0)
 
"KRN",8994,2327,1,37,0)
Global ^TMP("MDKUTL",$J
"KRN",8994,2327,1,38,0)
        TMP("MDKUTL",$J
"KRN",8994,2327,1,39,0)
^TMP("MDKUTL",538992716,0) = Note internal entry number   or -1^Error Message
"KRN",8994,2327,1,40,0)
  
"KRN",8994,2327,1,41,0)
OPTION  = NOTELIST
"KRN",8994,2327,1,42,0)
         
"KRN",8994,2327,1,43,0)
> D RPC^MDRPCNT(.RESULTS,"NOTELST",476)
"KRN",8994,2327,1,44,0)
 
"KRN",8994,2327,1,45,0)
> D ^%G
"KRN",8994,2327,1,46,0)
 
"KRN",8994,2327,1,47,0)
Global ^TMP("MDKUTL",$J
"KRN",8994,2327,1,48,0)
        TMP("MDKUTL",$J
"KRN",8994,2327,1,49,0)
^TMP("MDKUTL",538992716,1) = 968^PROCEDURE NOTE^OCT 10, 2001@17:08:36
"KRN",8994,2327,1,50,0)
^MDPROVIDER,ONE ^PROSTHETICS
"KRN",8994,2327,1,51,0)
^TMP("MDKUTL",538992716,2) = 969^PROCEDURE NOTE^OCT 10, 2001@17:10:44^^PROSTHETI
"KRN",8994,2327,1,52,0)
CS
"KRN",8994,2327,1,53,0)
^TMP("MDKUTL",538992716,3) = 970^PROCEDURE NOTE^OCT 10, 2001@17:11:50^^PROSTHETI
"KRN",8994,2327,1,54,0)
CS
"KRN",8994,2327,1,55,0)
^TMP("MDKUTL",538992716,4) = 971^PROCEDURE NOTE^OCT 10, 2001@17:15:45^^PROSTHETI
"KRN",8994,2327,1,56,0)
CS
"KRN",8994,2327,1,57,0)
^TMP("MDKUTL",538992716,5) = 972^PROCEDURE NOTE^OCT 10, 2001@17:16:34^^PROSTHETI
"KRN",8994,2327,1,58,0)
CS
"KRN",8994,2327,1,59,0)
^TMP("MDKUTL",538992716,6) = 974^PROCEDURE NOTE^OCT 11, 2001@10:56:03^^PROSTHETI
"KRN",8994,2327,1,60,0)
CS
"KRN",8994,2327,1,61,0)
^TMP("MDKUTL",538992716,7) = 975^PROCEDURE NOTE^OCT 11, 2001@12:50:29^^PROSTHETI
"KRN",8994,2327,1,62,0)
CS
"KRN",8994,2327,1,63,0)
Global ^
"KRN",8994,2327,1,64,0)
 
"KRN",8994,2327,1,65,0)
OPTION = VIEWTIU
"KRN",8994,2327,1,66,0)
                  
"KRN",8994,2327,1,67,0)
> D RPC^MDRPCNT(.RESULTS,"VIEWTIU",476,968)
"KRN",8994,2327,1,68,0)
 
"KRN",8994,2327,1,69,0)
> D ^%G
"KRN",8994,2327,1,70,0)
 
"KRN",8994,2327,1,71,0)
Global ^TMP("TIUVIEW",$J
"KRN",8994,2327,1,72,0)
        TMP("TIUVIEW",$J
"KRN",8994,2327,1,73,0)
^TMP("TIUVIEW",538992716,1) =        TITLE: PROCEDURE NOTE                      
"KRN",8994,2327,1,74,0)
                     
"KRN",8994,2327,1,75,0)
^TMP("TIUVIEW",538992716,2) = DATE OF NOTE: OCT 10, 2001@17:08:36  ENTRY DATE: O
"KRN",8994,2327,1,76,0)
CT 10, 2001@17:08:36      
"KRN",8994,2327,1,77,0)
^TMP("TIUVIEW",538992716,3) =       AUTHOR: MDPROVIDER,ONE   EXP COSIGNER:
"KRN",8994,2327,1,78,0)
                         
"KRN",8994,2327,1,79,0)
^TMP("TIUVIEW",538992716,4) =      URGENCY:                            STATUS: C
"KRN",8994,2327,1,80,0)
OMPLETED                     
"KRN",8994,2327,1,81,0)
^TMP("TIUVIEW",538992716,5) = 
"KRN",8994,2327,1,82,0)
^TMP("TIUVIEW",538992716,6) = PROCEDURE SUMMARY CODE: Abnormal                  
"KRN",8994,2327,1,83,0)
    
"KRN",8994,2327,1,84,0)
^TMP("TIUVIEW",538992716,7) = DATE/TIME PERFORMED: OCT 15, 2001        
"KRN",8994,2327,1,85,0)
^TMP("TIUVIEW",538992716,8) = 
"KRN",8994,2327,1,86,0)
^TMP("TIUVIEW",538992716,9) =    *** PROCEDURE NOTE Has ADDENDA ***
"KRN",8994,2327,1,87,0)
^TMP("TIUVIEW",538992716,10) = 
"KRN",8994,2327,1,88,0)
^TMP("TIUVIEW",538992716,11) = Complete consult 1104. 6 attached images. 
"KRN",8994,2327,1,89,0)
^TMP("TIUVIEW",538992716,12) =  
"KRN",8994,2327,1,90,0)
^TMP("TIUVIEW",538992716,13) = /es/ MDPROVIDER,ONE
"KRN",8994,2327,1,91,0)
^TMP("TIUVIEW",538992716,14) = 
"KRN",8994,2327,1,92,0)
^TMP("TIUVIEW",538992716,15) = Signed: 10/15/2001 13:02
"KRN",8994,2327,1,93,0)
^TMP("TIUVIEW",538992716,16) = 
"KRN",8994,2327,1,94,0)
^TMP("TIUVIEW",538992716,17) = 10/15/2001 ADDENDUM                      STATUS: 
"KRN",8994,2327,1,95,0)
COMPLETED
"KRN",8994,2327,1,96,0)
^TMP("TIUVIEW",538992716,18) = aDDENDUM LA LA LA 
"KRN",8994,2327,1,97,0)
^TMP("TIUVIEW",538992716,19) = LA LA LA
"KRN",8994,2327,1,98,0)
^TMP("TIUVIEW",538992716,20) =  
"KRN",8994,2327,1,99,0)
^TMP("TIUVIEW",538992716,21) = /es/ MDPROVIDER,ONE
"KRN",8994,2327,1,100,0)
^TMP("TIUVIEW",538992716,22) = 
"KRN",8994,2327,1,101,0)
^TMP("TIUVIEW",538992716,23) = Signed: 10/15/2001 13:04
"KRN",8994,2327,2,0)
^8994.02A^^0
"KRN",8994,2328,-1)
0^10
"KRN",8994,2328,0)
MD TMDCIDC^RPC^MDRPCW^4^R^0^^1^1
"KRN",8994,2328,1,0)
^8994.01^11^11^3060627^^^^
"KRN",8994,2328,1,1,0)
This RPC will do the following:
"KRN",8994,2328,1,2,0)
  Input Parameter: RESULTS - (Both Input/Output) Passed in as the array to
"KRN",8994,2328,1,3,0)
                              return the results.
"KRN",8994,2328,1,4,0)
                   OPTION  - (Input) PROC - obtain a list of Procedures
"KRN",8994,2328,1,5,0)
                                            defined for a clinic.
"KRN",8994,2328,1,6,0)
                                     DIAG - obtain a list of diagnosis
"KRN",8994,2328,1,7,0)
                                            defined for a clinic.
"KRN",8994,2328,1,8,0)
                                     SCDISP - Obtain the patient's service
"KRN",8994,2328,1,9,0)
                                              connection and rated disability.
"KRN",8994,2328,1,10,0)
                   DFN     - (Input) Patient internal entry number
"KRN",8994,2328,1,11,0)
                   MDSTUD   - (Input) CP Study internal entry number
"KRN",8994,2328,3,0)
^8994.03^83^83^3060627^^
"KRN",8994,2328,3,1,0)
> D RPC^MDRPCW(.RESULTS,"PROC",162,212)
"KRN",8994,2328,3,2,0)
 
"KRN",8994,2328,3,3,0)
> ZW RESULTS
"KRN",8994,2328,3,4,0)
RESULTS=^TMP("MDRPCW",539023945)
"KRN",8994,2328,3,5,0)
 
"KRN",8994,2328,3,6,0)
 
"KRN",8994,2328,3,7,0)
   @RESULTS@(0)=count of array element (0 if nothing found) 
"KRN",8994,2328,3,8,0)
   @RESULTS@(1)=^group header 
"KRN",8994,2328,3,9,0)
   @RESULTS@(2) = P1 := cpt or icd code / ien of other items 
"KRN",8994,2328,3,10,0)
                  P2 := user defined text 
"KRN",8994,2328,3,11,0)
                  P6 := user defined expanded text to send to PCE 
"KRN",8994,2328,3,12,0)
                  P7 := second code or item defined for line item 
"KRN",8994,2328,3,13,0)
                  P8 := third code or item defined for line item 
"KRN",8994,2328,3,14,0)
                  P9 := associated clinical lexicon term 
"KRN",8994,2328,3,15,0)
                                     
"KRN",8994,2328,3,16,0)
> D ^%G
"KRN",8994,2328,3,17,0)
 
"KRN",8994,2328,3,18,0)
Global ^TMP("MDRPCW",$J
"KRN",8994,2328,3,19,0)
        TMP("MDRPCW",$J
"KRN",8994,2328,3,20,0)
 
"KRN",8994,2328,3,21,0)
^TMP("MDRPCW",539023945,0) = 7
"KRN",8994,2328,3,22,0)
^TMP("MDRPCW",539023945,1) = ^PFT PROCEDURES
"KRN",8994,2328,3,23,0)
^TMP("MDRPCW",539023945,2) = G0125^Lung image (PET)            ^^^^^^^
"KRN",8994,2328,3,24,0)
^TMP("MDRPCW",539023945,3) = S9473^Pulmonary rehabilitation pro^^^^^^^
"KRN",8994,2328,3,25,0)
^TMP("MDRPCW",539023945,4) = S2060^Lobar lung transplantation  ^^^^^^^
"KRN",8994,2328,3,26,0)
^TMP("MDRPCW",539023945,5) = S2060^Lobar lung transplantation  ^^^^^^^
"KRN",8994,2328,3,27,0)
^TMP("MDRPCW",539023945,6) = A4480^Vabra aspirator             ^^^^^^^
"KRN",8994,2328,3,28,0)
^TMP("MDRPCW",539023945,7) = 43450^DILAT ESOPH-SOUND/BOUGIE-1/M^^^^^^^
"KRN",8994,2328,3,29,0)
Global ^
"KRN",8994,2328,3,30,0)
 
"KRN",8994,2328,3,31,0)
> D RPC^MDRPCW(.RESULTS,"DIAG",162,212)
"KRN",8994,2328,3,32,0)
 
"KRN",8994,2328,3,33,0)
> D ^%G
"KRN",8994,2328,3,34,0)
 
"KRN",8994,2328,3,35,0)
Global ^TMP("MDRPCW",$J
"KRN",8994,2328,3,36,0)
        TMP("MDRPCW",$J
"KRN",8994,2328,3,37,0)
^TMP("MDRPCW",539023945,0) = 31
"KRN",8994,2328,3,38,0)
^TMP("MDRPCW",539023945,1) = ^PFT
"KRN",8994,2328,3,39,0)
^TMP("MDRPCW",539023945,2) = 397.1^RHEUM PULMON VALVE DIS^^^^^^^269587
"KRN",8994,2328,3,40,0)
^TMP("MDRPCW",539023945,3) = 417.1^PULMON ARTERY ANEURYSM^^^^^^^269688
"KRN",8994,2328,3,41,0)
^TMP("MDRPCW",539023945,4) = 417.8^PULMON CIRCULAT DIS NEC^^^^^^^269690
"KRN",8994,2328,3,42,0)
^TMP("MDRPCW",539023945,5) = 417.9^PULMON CIRCULAT DIS NOS^^^^^^^269691
"KRN",8994,2328,3,43,0)
^TMP("MDRPCW",539023945,6) = 424.3^PULMONARY VALVE DISORDER^^^^^^^101164
"KRN",8994,2328,3,44,0)
^TMP("MDRPCW",539023945,7) = 516.1^IDIO PULM HEMOSIDEROSIS^^^^^^^61083
"KRN",8994,2328,3,45,0)
^TMP("MDRPCW",539023945,8) = 746.01^CONG PULMON VALV ATRESIA^^^^^^^265805
"KRN",8994,2328,3,46,0)
^TMP("MDRPCW",539023945,9) = 673.82^PULM EMBOL NEC-DEL W P/P^^^^^^^271756
"KRN",8994,2328,3,47,0)
^TMP("MDRPCW",539023945,10) = 747.3^PULMONARY ARTERY ANOM^^^^^^^27406
"KRN",8994,2328,3,48,0)
^TMP("MDRPCW",539023945,11) = 770.3^NB PULMONARY HEMORRHAGE^^^^^^^273240
"KRN",8994,2328,3,49,0)
^TMP("MDRPCW",539023945,12) = 794.2^ABN PULMONARY FUNC STUDY^^^^^^^273442
"KRN",8994,2328,3,50,0)
^TMP("MDRPCW",539023945,13) = 901.41^INJURY PULMONARY ARTERY^^^^^901.42^^275136
"KRN",8994,2328,3,51,0)
^TMP("MDRPCW",539023945,14) = 162.3^MAL NEO UPPER LOBE LUNG^^^^^162.4^162.5^7353
"KRN",8994,2328,3,52,0)
4
"KRN",8994,2328,3,53,0)
^TMP("MDRPCW",539023945,15) = 235.7^UNC BEHAV NEO LUNG^^^^^^^267754
"KRN",8994,2328,3,54,0)
^TMP("MDRPCW",539023945,16) = 875.0^OPEN WOUND OF CHEST^^^^^^^274991
"KRN",8994,2328,3,55,0)
^TMP("MDRPCW",539023945,17) = 162.9^MAL NEO BRONCH/LUNG NOS^^^^^^^73521
"KRN",8994,2328,3,56,0)
^TMP("MDRPCW",539023945,18) = 786.6^CHEST SWELLING/MASS/LUMP^^^^^^^273380
"KRN",8994,2328,3,57,0)
^TMP("MDRPCW",539023945,19) = 518.89^OTHER DISEASE OF LUNG, NEC^^^^^^^87486
"KRN",8994,2328,3,58,0)
^TMP("MDRPCW",539023945,20) = ^BRONCHOSCOPY
"KRN",8994,2328,3,59,0)
^TMP("MDRPCW",539023945,21) = 012.20^ISOL TRACHEAL TB-UNSPEC^^^^^012.21^^266107
"KRN",8994,2328,3,60,0)
^TMP("MDRPCW",539023945,22) = 012.22^ISOL TRACH TB-EXAM UNKN^^^^^^^266109
"KRN",8994,2328,3,61,0)
^TMP("MDRPCW",539023945,23) = 012.23^ISOLAT TRACH TB-MICRO DX^^^^^^^266110
"KRN",8994,2328,3,62,0)
^TMP("MDRPCW",539023945,24) = 012.24^ISOL TRACHEAL TB-CULT DX^^^^^^^266111
"KRN",8994,2328,3,63,0)
^TMP("MDRPCW",539023945,25) = 748.61^CONGEN BRONCHIECTASIS^^^^^^^265478
"KRN",8994,2328,3,64,0)
^TMP("MDRPCW",539023945,26) = 011.50^TB BRONCHIECTASIS-UNSPEC^^^^^011.51^^266056
"KRN",8994,2328,3,65,0)
^TMP("MDRPCW",539023945,27) = 784.1^THROAT PAIN^^^^^^^276881
"KRN",8994,2328,3,66,0)
^TMP("MDRPCW",539023945,28) = 784.8^HEMORRHAGE FROM THROAT^^^^^^^273371
"KRN",8994,2328,3,67,0)
^TMP("MDRPCW",539023945,29) = 034.0^STREP SORE THROAT^^^^^^^114610
"KRN",8994,2328,3,68,0)
^TMP("MDRPCW",539023945,30) = 466.11^AC. BRONCH/RESP SYNCYT V (RSV)^^^^^466.19^^
"KRN",8994,2328,3,69,0)
304309
"KRN",8994,2328,3,70,0)
^TMP("MDRPCW",539023945,31) = 530.10^ESOPHAGITIS, UNSP.^^^^^^^295809
"KRN",8994,2328,3,71,0)
Global ^
"KRN",8994,2328,3,72,0)
 
"KRN",8994,2328,3,73,0)
> D RPC^MDRPCW(.RESULTS,"SCDISP",17,212)
"KRN",8994,2328,3,74,0)
 
"KRN",8994,2328,3,75,0)
   @RESULTS@(n)="Lines of text"
"KRN",8994,2328,3,76,0)
  
"KRN",8994,2328,3,77,0)
> D ^%G
"KRN",8994,2328,3,78,0)
 
"KRN",8994,2328,3,79,0)
Global ^TMP("MDRPCW",$J
"KRN",8994,2328,3,80,0)
        TMP("MDRPCW",$J
"KRN",8994,2328,3,81,0)
^TMP("MDRPCW",539023945,1) = Service Connected: 50%
"KRN",8994,2328,3,82,0)
^TMP("MDRPCW",539023945,2) = Rated Disabilities: NONE STATED
"KRN",8994,2328,3,83,0)
Global ^
"KRN",8994,2330,-1)
0^12
"KRN",8994,2330,0)
MD TMDLEX^LEX^MDRPCW1^4^R^^^1^1
"KRN",8994,2330,1,0)
^8994.01^1^1^3050714^^^^
"KRN",8994,2330,1,1,0)
This RPC will return a list of CPT or ICD for a search typed in.
"KRN",8994,2330,2,0)
^8994.02A^2^2
"KRN",8994,2330,2,1,0)
MDSRCH^4^^1^1
"KRN",8994,2330,2,1,1,0)
^8994.021^1^1^3050622^^
"KRN",8994,2330,2,1,1,1,0)
This is the text typed in for the look-up.
"KRN",8994,2330,2,2,0)
MDAPP^4^^1^2
"KRN",8994,2330,2,2,1,0)
^8994.021^1^1^3050714^^^
"KRN",8994,2330,2,2,1,1,0)
This is the application indicator.  It is either "CPT" or "ICD".
"KRN",8994,2330,2,"B","MDAPP",2)

"KRN",8994,2330,2,"B","MDSRCH",1)

"KRN",8994,2330,2,"PARAMSEQ",1,1)

"KRN",8994,2330,2,"PARAMSEQ",2,2)

"KRN",8994,2330,3,0)
^8994.03^14^14^3050714^^^
"KRN",8994,2330,3,1,0)
^TMP("MDLEX",$J,#)=P1 - CPT/ICD Code
"KRN",8994,2330,3,2,0)
                   P2 - Internal Entry Number
"KRN",8994,2330,3,3,0)
                   P3 - Lexicon text
"KRN",8994,2330,3,4,0)
 
"KRN",8994,2330,3,5,0)
>D LEX^MDRPCW1(.RESULTS,"BORE","CPT")
"KRN",8994,2330,3,6,0)
 
"KRN",8994,2330,3,7,0)
>ZW RESULTS
"KRN",8994,2330,3,8,0)
RESULTS="^TMP("MDLEX",539152953)"
"KRN",8994,2330,3,9,0)
 
"KRN",8994,2330,3,10,0)
>D ^%G
"KRN",8994,2330,3,11,0)
 
"KRN",8994,2330,3,12,0)
Global ^TMP("MDLEX",$J -- NOTE: translation in effect
"KRN",8994,2330,3,13,0)
^TMP("MDLEX",539152953,1)=86618^302213^Borella Burgdorferi (Lyme Disease) 
"KRN",8994,2330,3,14,0)
Antibody (CP T-4 86618)
"KRN",8994,2333,-1)
0^13
"KRN",8994,2333,0)
MD TMDENCOUNTER^GETENC^MDRPCW1^4^R^^^1^1
"KRN",8994,2333,1,0)
^8994.01^1^1^3050715^^^
"KRN",8994,2333,1,1,0)
This remote procedure will return the existing data in an encounter.
"KRN",8994,2333,2,0)
^8994.02A^1^1
"KRN",8994,2333,2,1,0)
STUDY^4^^1^1
"KRN",8994,2333,2,1,1,0)
^8994.021^1^1^3050715^^^
"KRN",8994,2333,2,1,1,1,0)
This is the CP Study internal entry number.
"KRN",8994,2333,2,"B","STUDY",1)

"KRN",8994,2333,2,"PARAMSEQ",1,1)

"KRN",8994,2333,3,0)
^8994.03^59^59^3050715^^^
"KRN",8994,2333,3,1,0)
The result is returned in ^TMP("MDENC",$J) global.
"KRN",8994,2333,3,2,0)
 
"KRN",8994,2333,3,3,0)
^TMP("MDENC",$J,1)="SC";0/1^0/1;"AO";0/1^0/1;"IR";0/1^0/1;"EC";0/1^0/
"KRN",8994,2333,3,4,0)
1;"MST";0/1^0/1;"HNC";0/1^0/1;"CV";0/1^0/1
"KRN",8994,2333,3,5,0)
     P1 = "SC" - Service Connected
"KRN",8994,2333,3,6,0)
     P2 = first "^" piece 1 if the condition can be answered
"KRN",8994,2333,3,7,0)
                      0 if the condition should be null not asked
"KRN",8994,2333,3,8,0)
          second "^" piece - If Scheduling has the answer, 1 = yes 0 = no
"KRN",8994,2333,3,9,0)
     P3 = "AO" - Agent Orange Exposure
"KRN",8994,2333,3,10,0)
     P4 = first "^" piece 1 if the condition can be answered
"KRN",8994,2333,3,11,0)
                      0 if the condition should be null not asked
"KRN",8994,2333,3,12,0)
          second "^" piece - If Scheduling has the answer, 1 = yes 0 = no
"KRN",8994,2333,3,13,0)
     P5 = "IR" - Ionizing Radiation Exposure
"KRN",8994,2333,3,14,0)
     P6 = first "^" piece 1 if the condition can be answered
"KRN",8994,2333,3,15,0)
                      0 if the condition should be null not asked
"KRN",8994,2333,3,16,0)
          second "^" piece - If Scheduling has the answer, 1 = yes 0 = no
"KRN",8994,2333,3,17,0)
     P7 = "EC" - Environmental Contaminants
"KRN",8994,2333,3,18,0)
     P8 = first "^" piece 1 if the condition can be answered
"KRN",8994,2333,3,19,0)
                      0 if the condition should be null not asked
"KRN",8994,2333,3,20,0)
          second "^" piece - If Scheduling has the answer, 1 = yes 0 = no
"KRN",8994,2333,3,21,0)
     P9 = "HNC" - Head and/or Neck Cancer
"KRN",8994,2333,3,22,0)
    P10 = first "^" piece 1 if the condition can be answered
"KRN",8994,2333,3,23,0)
                      0 if the condition should be null not asked
"KRN",8994,2333,3,24,0)
          second "^" piece - If Scheduling has the answer, 1 = yes 0 = no
"KRN",8994,2333,3,25,0)
    P11 = "MST" - Military Sexual Trauma
"KRN",8994,2333,3,26,0)
    P12 = first "^" piece 1 if the condition can be answered
"KRN",8994,2333,3,27,0)
                      0 if the condition should be null not asked
"KRN",8994,2333,3,28,0)
          second "^" piece - If Scheduling has the answer, 1 = yes 0 = no
"KRN",8994,2333,3,29,0)
    P13 = "CV" - Combat Veteran
"KRN",8994,2333,3,30,0)
    P14 = first "^" piece 1 if the condition can be answered
"KRN",8994,2333,3,31,0)
                          0 if the condition should be null not asked
"KRN",8994,2333,3,32,0)
          second "^" piece - If Scheduling has the answer, 1 = yes 0 = no
"KRN",8994,2333,3,33,0)
  
"KRN",8994,2333,3,34,0)
^TMP("MDENC",$J,n)="PRV"^CODE^^NARR^^Primary (1=Yes,0=No)
"KRN",8994,2333,3,35,0)
     P1 = "PRV"- Provider segment
"KRN",8994,2333,3,36,0)
     P2 = CODE - New Person internal Entry Number
"KRN",8994,2333,3,37,0)
     P3 = Null
"KRN",8994,2333,3,38,0)
     P4 = NARR - Provider name
"KRN",8994,2333,3,39,0)
     P5 = Null
"KRN",8994,2333,3,40,0)
     P6 = Primary - 1/0/null (1=Yes,0/Null=No)
"KRN",8994,2333,3,41,0)
 
"KRN",8994,2333,3,42,0)
                  ="POV"^ICD9 IEN^ICD9 CODE^provider narrative category^
"KRN",8994,2333,3,43,0)
provider narrative (Short Description)^Primary (1=Yes,0/Null=No)
"KRN",8994,2333,3,44,0)
     P1 = "POV" - ICD segment
"KRN",8994,2333,3,45,0)
     P2 = ICD internal entry number
"KRN",8994,2333,3,46,0)
     P3 = ICD9 Code
"KRN",8994,2333,3,47,0)
     P4 = Provider Narrative Category
"KRN",8994,2333,3,48,0)
     P5 = Short Description
"KRN",8994,2333,3,49,0)
     P6 = Primary - 1/0/null (1=Yes,0/Null=No)
"KRN",8994,2333,3,50,0)
 
"KRN",8994,2333,3,51,0)
                  ="CPT"^CPT IEN^CPT CODE^provider narrative category^
"KRN",8994,2333,3,52,0)
provider narrative (Short Description)^^Quantity
"KRN",8994,2333,3,53,0)
     P1 = "CPT" - CPT segment
"KRN",8994,2333,3,54,0)
     P2 = CPT internal entry number
"KRN",8994,2333,3,55,0)
     P3 = CPT Code
"KRN",8994,2333,3,56,0)
     P4 = Provider Narrative Category (CPT Category Grouping)
"KRN",8994,2333,3,57,0)
     P5 = Short Description
"KRN",8994,2333,3,58,0)
     P6 = null
"KRN",8994,2333,3,59,0)
     P7 = Quantity
"KRN",8994,2345,-1)
0^14
"KRN",8994,2345,0)
MD TMDSUBMITU^RPC^MDRPCOWU^4^R^^^1^1
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",365,-1)
1^1
"PKG",365,0)
CLINICAL PROCEDURES^MD^Clinical Procedures
"PKG",365,20,0)
^9.402P^^
"PKG",365,22,0)
^9.49I^1^1
"PKG",365,22,1,0)
1.0^3040429^2980529^363
"PKG",365,22,1,"PAH",1,0)
6^3080403^4558
"PKG",365,22,1,"PAH",1,1,0)
^^2^2^3080403
"PKG",365,22,1,"PAH",1,1,1,0)
Please refer to the National Patch Module for the detail of this 
"PKG",365,22,1,"PAH",1,1,2,0)
patch build.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
30
"RTN","MDAPI")
0^25^B63383064
"RTN","MDAPI",1,0)
MDAPI ; HOIFO/DP/NCA - CP API Calls ; [05-05-2003 10:28]
"RTN","MDAPI",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDAPI",3,0)
 ; Description:
"RTN","MDAPI",4,0)
 ; These API's are for use by external packages communicating with CP.
"RTN","MDAPI",5,0)
 ;
"RTN","MDAPI",6,0)
 ; Integration Agreements:
"RTN","MDAPI",7,0)
 ; IA# 3378 [Subscription] Documents the APIs that external packages use to communicate with CP.
"RTN","MDAPI",8,0)
 ; IA# 3468 [Subscription] Use GMRCCP APIs.
"RTN","MDAPI",9,0)
 ;
"RTN","MDAPI",10,0)
EXTDATA(MDPROC) ; [Procedure] 
"RTN","MDAPI",11,0)
 ; Returns 0/1 for external data needed
"RTN","MDAPI",12,0)
 ; Called by Consults to determine status of consult ordered
"RTN","MDAPI",13,0)
 ;
"RTN","MDAPI",14,0)
 ; Input parameters
"RTN","MDAPI",15,0)
 ;  1. MDPROC [Literal/Required] CP Definition IEN
"RTN","MDAPI",16,0)
 ;
"RTN","MDAPI",17,0)
 Q:'$D(^MDS(702.01,+$G(MDPROC),0)) 0
"RTN","MDAPI",18,0)
 I +$P(^MDS(702.01,+$G(MDPROC),0),U,3)!($O(^(.1,0))) Q 1
"RTN","MDAPI",19,0)
 E  Q 0
"RTN","MDAPI",20,0)
 ;
"RTN","MDAPI",21,0)
ISTAT(MDARR) ; [Procedure] Called by Imaging to update status
"RTN","MDAPI",22,0)
 ; Input parameters
"RTN","MDAPI",23,0)
 ;  1. MDARR [Literal/Required] Array from Imaging
"RTN","MDAPI",24,0)
 ;
"RTN","MDAPI",25,0)
 ; Input: MDARR(0)="0^error message" or "1^success message"
"RTN","MDAPI",26,0)
 ;        MDARR(1)=TrackID  (CP;Transaction IEN)
"RTN","MDAPI",27,0)
 ;        MDARR(2)=Queue Number
"RTN","MDAPI",28,0)
 ;        MDARR(3..N)=Warnings
"RTN","MDAPI",29,0)
 N MDCON,MDCR,MDIEN,MDIENS,MDLP,MDSTAT,MDSTR,MDTIU,RESULTS
"RTN","MDAPI",30,0)
 Q:$G(MDARR(0))=""
"RTN","MDAPI",31,0)
 Q:$G(MDARR(1))=""
"RTN","MDAPI",32,0)
 Q:$P(MDARR(1),";")'="CP"
"RTN","MDAPI",33,0)
 Q:'(+$P(MDARR(1),";",2))
"RTN","MDAPI",34,0)
 S MDIEN=+$P(MDARR(1),";",2),MDIENS=MDIEN_","
"RTN","MDAPI",35,0)
 S MDSTAT=+$P(MDARR(0),"^")
"RTN","MDAPI",36,0)
 S DATA("TRANSACTION")=MDIEN
"RTN","MDAPI",37,0)
 ; Is it in error?
"RTN","MDAPI",38,0)
 I 'MDSTAT D  Q
"RTN","MDAPI",39,0)
 .D STATUS^MDRPCOT(MDIENS,2,$P(MDARR(0),"^",2))
"RTN","MDAPI",40,0)
 .S DATA("PKG")="IMAGING"
"RTN","MDAPI",41,0)
 .S DATA("MESSAGE")=$P(MDARR(0),"^",2) D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",42,0)
 .F MDLP=2:0 S MDLP=$O(MDARR(MDLP)) Q:'MDLP  I $G(MDARR(MDLP))'="" D
"RTN","MDAPI",43,0)
 ..S DATA("MESSAGE")=$$TRANS(MDARR(MDLP)) D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",44,0)
 .D IMGSTAT^MDRPCOT1(+MDIENS,2) Q
"RTN","MDAPI",45,0)
 ; Call Consults that Partial Result ready
"RTN","MDAPI",46,0)
 S MDCON=+$P(^MDD(702,MDIEN,0),"^",5),MDTIU=+$P(^(0),"^",6)
"RTN","MDAPI",47,0)
 S MDCR=$$UPDCONS^MDRPCOT1(MDCON,MDTIU)
"RTN","MDAPI",48,0)
 I +MDCR<0 D  Q
"RTN","MDAPI",49,0)
 .D STATUS^MDRPCOT(MDIENS,2,$P(MDCR,"^",2))
"RTN","MDAPI",50,0)
 .S DATA("PKG")="CONSULTS",DATA("MESSAGE")=$P(MDCR,"^",2)
"RTN","MDAPI",51,0)
 .D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",52,0)
 .Q
"RTN","MDAPI",53,0)
 ; Closeout the record
"RTN","MDAPI",54,0)
 D STATUS^MDRPCOT(MDIENS,3,"")
"RTN","MDAPI",55,0)
 ; Update Images Status
"RTN","MDAPI",56,0)
 D IMGSTAT^MDRPCOT1(+MDIENS,3)
"RTN","MDAPI",57,0)
 Q
"RTN","MDAPI",58,0)
 ;
"RTN","MDAPI",59,0)
ITIU(RESULTS,DFN,CONSULT,VSTRING) ; [Procedure] API for Vista Imaging
"RTN","MDAPI",60,0)
 ; This API enables VistA Imaging to retrieve/create a TIU note for
"RTN","MDAPI",61,0)
 ; a consult for attaching images to.
"RTN","MDAPI",62,0)
 ; 
"RTN","MDAPI",63,0)
 ; RESULTS(0) will equal one of the following
"RTN","MDAPI",64,0)
 ;   IEN of the TIU note if successful
"RTN","MDAPI",65,0)
 ;   or on failure one of the following status messages
"RTN","MDAPI",66,0)
 ;   -1^No patient DFN
"RTN","MDAPI",67,0)
 ;   -1^No Consult IEN
"RTN","MDAPI",68,0)
 ;   -1^No VString
"RTN","MDAPI",69,0)
 ;   -1^Error in CP transaction
"RTN","MDAPI",70,0)
 ;   -1^Unable to create CP transaction
"RTN","MDAPI",71,0)
 ;   -1^Unable to create the TIU document
"RTN","MDAPI",72,0)
 ;   -1^No such consult for this patient.
"RTN","MDAPI",73,0)
 ;
"RTN","MDAPI",74,0)
 ; Input parameters
"RTN","MDAPI",75,0)
 ;  1. RESULTS [Reference/Required] Return array
"RTN","MDAPI",76,0)
 ;  2. DFN [Literal/Required] Patient IEN
"RTN","MDAPI",77,0)
 ;  3. CONSULT [Literal/Required] Consult IEN
"RTN","MDAPI",78,0)
 ;  4. VSTRING [Literal/Optional] VString data for TIU Note (Required to create new TIU note)
"RTN","MDAPI",79,0)
 ;
"RTN","MDAPI",80,0)
 ; Variables:
"RTN","MDAPI",81,0)
 ;  MDIEN: [Private] Returns IEN from UPDATE~DIE call
"RTN","MDAPI",82,0)
 ;  MDIENS: [Private] Scratch
"RTN","MDAPI",83,0)
 ;  MDNOTE: [Private] Scratch
"RTN","MDAPI",84,0)
 ;  MDTRANS: [Private] Contains IEN of CP transaction
"RTN","MDAPI",85,0)
 ;
"RTN","MDAPI",86,0)
 ; New private variables
"RTN","MDAPI",87,0)
 NEW MDIEN,MDIENS,MDNOTE,MDTRANS
"RTN","MDAPI",88,0)
 K ^TMP($J),^TMP("MDTIUST",$J)
"RTN","MDAPI",89,0)
 N MDD,MDN,MDTIUER,MDTST,MDNEWV,MDTIUD S (MDTIUD,MDTIUER,MDTST)=""
"RTN","MDAPI",90,0)
 I '$G(DFN) S RESULTS(0)="-1^No patient DFN" Q
"RTN","MDAPI",91,0)
 I '$G(CONSULT) S RESULTS(0)="-1^No Consult IEN" Q
"RTN","MDAPI",92,0)
 ; Look for existing transaction
"RTN","MDAPI",93,0)
 S MDTIUD=$$PREV^MDRPCOT(+CONSULT,"")
"RTN","MDAPI",94,0)
 I +MDTIUD S RESULTS(0)=+MDTIUD Q
"RTN","MDAPI",95,0)
 ; No transaction, must create one for this consult
"RTN","MDAPI",96,0)
 I $G(VSTRING)="" S RESULTS(0)="-1^No VString" Q
"RTN","MDAPI",97,0)
 D CPLIST^GMRCCP(DFN,,$NA(^TMP($J)))
"RTN","MDAPI",98,0)
 S MDX="" F  S MDX=$O(^TMP($J,MDX)) Q:'MDX  I $P(^(MDX),U,5)=CONSULT D  Q
"RTN","MDAPI",99,0)
 .D NOW^%DTC S MDD=%
"RTN","MDAPI",100,0)
 .S:$L(VSTRING,";")=1 VSTRING=";"_VSTRING
"RTN","MDAPI",101,0)
 .S MDNEWV=$$GETVSTR^MDRPCOT1(DFN,VSTRING,$P(^TMP($J,MDX),U,6),MDD)
"RTN","MDAPI",102,0)
 .S MDFDA(702,"+1,",.01)=DFN
"RTN","MDAPI",103,0)
 .S MDFDA(702,"+1,",.02)=MDD
"RTN","MDAPI",104,0)
 .S MDFDA(702,"+1,",.03)=DUZ
"RTN","MDAPI",105,0)
 .S MDFDA(702,"+1,",.04)=$P(^TMP($J,MDX),U,6)
"RTN","MDAPI",106,0)
 .S MDFDA(702,"+1,",.05)=CONSULT
"RTN","MDAPI",107,0)
 .S MDFDA(702,"+1,",.07)=$P(MDNEWV,";",3)_";"_$P(MDNEWV,";",2)_";"_$P(MDNEWV,";")
"RTN","MDAPI",108,0)
 .S MDFDA(702,"+1,",.09)=0
"RTN","MDAPI",109,0)
 .;Create the new transaction
"RTN","MDAPI",110,0)
 .D UPDATE^DIE("","MDFDA","MDIEN") I '$G(MDIEN(1)) D  Q
"RTN","MDAPI",111,0)
 ..S RESULTS(0)="-1^Unable to create CP transaction"
"RTN","MDAPI",112,0)
 .
"RTN","MDAPI",113,0)
 .;Create the new TIU Note
"RTN","MDAPI",114,0)
 .S MDIENS=MDIEN(1)_","
"RTN","MDAPI",115,0)
 .S MDN=$$NEWTIUN^MDRPCOT(+MDIENS)
"RTN","MDAPI",116,0)
 .S MDNOTE=$S(MDN:$$GET1^DIQ(702,+MDIENS,.06,"I"),1:0)
"RTN","MDAPI",117,0)
 .I 'MDNOTE D  Q
"RTN","MDAPI",118,0)
 ..N DA,DIK
"RTN","MDAPI",119,0)
 ..S RESULTS(0)="-1^Unable to create the TIU document"
"RTN","MDAPI",120,0)
 ..S DA=+MDIENS,DIK="^MDD(702," D ^DIK
"RTN","MDAPI",121,0)
 .S RESULTS(0)=MDNOTE
"RTN","MDAPI",122,0)
 Q
"RTN","MDAPI",123,0)
 ;
"RTN","MDAPI",124,0)
TIUCOMP(MDNOTE) ; [Procedure] Post Signature action to complete transaction
"RTN","MDAPI",125,0)
 ; Input parameters
"RTN","MDAPI",126,0)
 ;  1. MDNOTE [Literal/Required] TIU IEN
"RTN","MDAPI",127,0)
 ;
"RTN","MDAPI",128,0)
 N MDFDA,MDRES
"RTN","MDAPI",129,0)
 S MDRES=$O(^MDD(702,"ATIU",MDNOTE,0))
"RTN","MDAPI",130,0)
 I $G(^MDD(702,+MDRES,0))="" Q 0
"RTN","MDAPI",131,0)
 I $P($G(^MDD(702,+MDRES,0)),"^",9)=3 Q 1
"RTN","MDAPI",132,0)
 S MDFDA(702,MDRES_",",.09)=3
"RTN","MDAPI",133,0)
 D FILE^DIE("","MDFDA")
"RTN","MDAPI",134,0)
 Q 1
"RTN","MDAPI",135,0)
 ;
"RTN","MDAPI",136,0)
TIUDEL(MDNOTE) ; [Procedure] TIU Note deletion Update
"RTN","MDAPI",137,0)
 ; Input parameters
"RTN","MDAPI",138,0)
 ;  1. MDNOTE [Literal/Required] TIU IEN
"RTN","MDAPI",139,0)
 ;
"RTN","MDAPI",140,0)
 N MDGBL,MDRES,MDFDA,MDTRAN,RESULTS
"RTN","MDAPI",141,0)
 S MDRES="" F  S MDRES=$O(^MDD(702,"ATIU",MDNOTE,MDRES)) Q:'MDRES  D
"RTN","MDAPI",142,0)
 .Q:$G(^MDD(702,+MDRES,0))=""
"RTN","MDAPI",143,0)
 .;S MDFDA(702,MDRES_",",.05)=""
"RTN","MDAPI",144,0)
 .S MDFDA(702,MDRES_",",.06)=""
"RTN","MDAPI",145,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDAPI",146,0)
 .S MDTRAN=$O(^MDD(702.001,"ASTUDY",MDRES,MDNOTE,0)) I +MDTRAN N DA,DIK S DA=+MDTRAN,DIK="^MDD(702.001," D ^DIK
"RTN","MDAPI",147,0)
 .D STATUS^MDRPCOT(MDRES_",",2,"TIU note deleted.")
"RTN","MDAPI",148,0)
 .S DATA("TRANSACTION")=MDRES,DATA("PKG")="TIU"
"RTN","MDAPI",149,0)
 .S DATA("MESSAGE")="TIU note deleted." D RPC^MDRPCOT(.RESULTS,"ADDMSG",.DATA)
"RTN","MDAPI",150,0)
 S MDGBL=$NA(^MDD(702.001,"PK",MDNOTE)) F  S MDGBL=$Q(@MDGBL) Q:MDGBL=""  Q:$QS(MDGBL,2)'="PK"!($QS(MDGBL,3)'=MDNOTE)  S MDTRAN=$QS(MDGBL,6) N DA,DIK S DA=+MDTRAN,DIK="^MDD(702.001," D ^DIK
"RTN","MDAPI",151,0)
 Q 1
"RTN","MDAPI",152,0)
 ;
"RTN","MDAPI",153,0)
TIUREAS(MDFN,MDOLDC,MDANOTE,MDNDFN,MDNEWC,MDNEWV,MDNTIU) ; [Function] This is an API to clean up and update TIU note re-assignment.
"RTN","MDAPI",154,0)
 ; Input parameters
"RTN","MDAPI",155,0)
 ;  1. MDFN [Literal/Required] The Patient DFN whose TIU document is being re-assigned.
"RTN","MDAPI",156,0)
 ;  2. MDOLDC [Literal/Required] The Consult that the note is being re-assigned from.
"RTN","MDAPI",157,0)
 ;  3. MDANOTE [Literal/Required] The TIU Document IEN that is being re-assigned.
"RTN","MDAPI",158,0)
 ;  4. MDNDFN [Literal/Required] The Patient DFN who will be re-assigned the TIU document.
"RTN","MDAPI",159,0)
 ;  5. MDNEWC [Literal/Required] The consult number that will be assignment the TIU document.
"RTN","MDAPI",160,0)
 ;  6. MDNEWV [Literal/Required] The new visit for the TIU document assignment.
"RTN","MDAPI",161,0)
 ;  7. MDNTIU [Literal/Required] The new reassigned TIU document IEN.
"RTN","MDAPI",162,0)
 ;
"RTN","MDAPI",163,0)
 N MDD,MDGBL,MDTRAN,MDCHK,MDLP,MDMULN,MDN,MDPPR,MDREAS,MDTRANI,MDX
"RTN","MDAPI",164,0)
 I '$G(MDFN) Q "0^No DFN for the TIU note re-assignment."
"RTN","MDAPI",165,0)
 I '$G(MDOLDC) Q "0^No Old Consult # for the note re-assignment."
"RTN","MDAPI",166,0)
 I '$G(MDANOTE) Q "0^No TIU Note IEN."
"RTN","MDAPI",167,0)
 I '$G(MDNDFN) Q "0^No New DFN for the note assignment."
"RTN","MDAPI",168,0)
 I '$G(MDNEWC) Q "0^No New Consult # for the note assignment."
"RTN","MDAPI",169,0)
 I '$G(MDNTIU) Q "0^No New Reassigned TIU IEN."
"RTN","MDAPI",170,0)
 S (MDD,MDCHK,MDREAS,MDTRAN)="",MDPPR=0 K ^TMP("MDTMP",$J)
"RTN","MDAPI",171,0)
 S MDTRAN=$O(^MDD(702,"ATIU",MDANOTE,0)) I +MDTRAN S MDCHK=$G(^MDD(702,MDTRAN,0)),MDTRANI=MDTRAN_"," D
"RTN","MDAPI",172,0)
 .I $P(MDCHK,U,5)=MDOLDC&($P(MDCHK,U,6)=MDANOTE) D
"RTN","MDAPI",173,0)
 ..S MDFDA(702,+MDTRAN_",",.06)=""
"RTN","MDAPI",174,0)
 ..D FILE^DIE("","MDFDA") K MDFDA
"RTN","MDAPI",175,0)
 S MDGBL=$NA(^MDD(702.001,"PK",MDANOTE))
"RTN","MDAPI",176,0)
 F  S MDGBL=$Q(@MDGBL) Q:MDGBL=""  Q:$QS(MDGBL,2)'="PK"!($QS(MDGBL,3)'=MDANOTE)  S MDN=$QS(MDGBL,6) N DA,DIK S DA=+MDN,DIK="^MDD(702.001," D ^DIK
"RTN","MDAPI",177,0)
 S MDMULN=+$O(^MDD(702.001,"ASTUDY",+MDTRAN,0))
"RTN","MDAPI",178,0)
 I '+MDMULN I +MDTRAN N DA,DIK S DA=+MDTRAN,DIK="^MDD(702," D ^DIK
"RTN","MDAPI",179,0)
 D NOW^%DTC S MDD=% S MDTRANI=$O(^MDD(702,"ACON",MDNEWC,0))
"RTN","MDAPI",180,0)
 S MDREAS=$P(MDNEWV,";",3)_";"_$P(MDNEWV,";",2)_";"_$P(MDNEWV,";")
"RTN","MDAPI",181,0)
 I +MDTRANI&(MDNDFN=+$G(^MDD(702,+MDTRANI,0))) D
"RTN","MDAPI",182,0)
 .S MDPPR=$P($G(^MDD(702,+MDTRANI,0)),"^",4) Q:'MDPPR
"RTN","MDAPI",183,0)
 .S MDNEWV=$$GETVSTR^MDRPCOT1(MDNDFN,MDREAS,MDPPR,MDD)
"RTN","MDAPI",184,0)
 .S MDFDA(702,+MDTRANI_",",.06)=MDNTIU
"RTN","MDAPI",185,0)
 .S MDFDA(702,"+1,",.07)=$P(MDNEWV,";",3)_";"_$P(MDNEWV,";",2)_";"_$P(MDNEWV,";")
"RTN","MDAPI",186,0)
 .D FILE^DIE("","MDFDA") K MDFDA
"RTN","MDAPI",187,0)
 I 'MDPPR D
"RTN","MDAPI",188,0)
 .D CPLIST^GMRCCP(MDNDFN,,$NA(^TMP("MDTMP",$J)))
"RTN","MDAPI",189,0)
 .S MDX=""
"RTN","MDAPI",190,0)
 .F  S MDX=$O(^TMP("MDTMP",$J,MDX)) Q:'MDX  S:$P(^(MDX),U,5)=MDNEWC MDPPR=$P(^(MDX),U,6)
"RTN","MDAPI",191,0)
 K ^TMP("MDTMP",$J)
"RTN","MDAPI",192,0)
 I +MDPPR Q 1
"RTN","MDAPI",193,0)
 S MDNEWV=$$GETVSTR^MDRPCOT1(MDNDFN,MDREAS,MDPPR,MDD)
"RTN","MDAPI",194,0)
 S MDFDA(702,"+1,",.01)=MDNDFN
"RTN","MDAPI",195,0)
 S MDFDA(702,"+1,",.02)=MDD
"RTN","MDAPI",196,0)
 S MDFDA(702,"+1,",.03)=DUZ
"RTN","MDAPI",197,0)
 S MDFDA(702,"+1,",.04)=MDPPR
"RTN","MDAPI",198,0)
 S MDFDA(702,"+1,",.05)=MDNEWC
"RTN","MDAPI",199,0)
 S MDFDA(702,"+1,",.06)=MDNTIU
"RTN","MDAPI",200,0)
 S MDFDA(702,"+1,",.07)=$P(MDNEWV,";",3)_";"_$P(MDNEWV,";",2)_";"_$P(MDNEWV,";")
"RTN","MDAPI",201,0)
 S MDFDA(702,"+1,",.09)=0
"RTN","MDAPI",202,0)
 D UPDATE^DIE("","MDFDA")
"RTN","MDAPI",203,0)
 Q 1
"RTN","MDAPI",204,0)
 ;
"RTN","MDAPI",205,0)
TRANS(STR) ; [Function] Translate the upper arrows to blanks
"RTN","MDAPI",206,0)
 ; Input parameters
"RTN","MDAPI",207,0)
 ;  1. STR [Literal/Required] Input: Text with upper arrows that needs to be removed
"RTN","MDAPI",208,0)
 ;
"RTN","MDAPI",209,0)
 I STR["^" Q $TR(STR,"^"," ")
"RTN","MDAPI",210,0)
 Q STR
"RTN","MDAPI",211,0)
 ;
"RTN","MDAPI",212,0)
GETCP(RESULTS,MDCSLT) ; API to return CP Study data
"RTN","MDAPI",213,0)
 ; Input Parameters:
"RTN","MDAPI",214,0)
 ;   1. RESULTS [Literal/Required] Return Array
"RTN","MDAPI",215,0)
 ;   2. MDCSLT [Literal/Required] Consult number
"RTN","MDAPI",216,0)
 ;
"RTN","MDAPI",217,0)
 ; Output:
"RTN","MDAPI",218,0)
 ;   RESULTS(0)=-1^Error Message or 1 for success
"RTN","MDAPI",219,0)
 ;          (N,1)=CP Study Number
"RTN","MDAPI",220,0)
 ;          (N,2)=Patient DFN
"RTN","MDAPI",221,0)
 ;          (N,3)=Created Date/Time
"RTN","MDAPI",222,0)
 ;          (N,4)=Created By
"RTN","MDAPI",223,0)
 ;          (N,5)=CP Definition (External Name)
"RTN","MDAPI",224,0)
 ;          (N,6)=Consult Number
"RTN","MDAPI",225,0)
 ;          (N,7)=TIU Note IEN
"RTN","MDAPI",226,0)
 ;          (N,8)=VSTR
"RTN","MDAPI",227,0)
 ;          (N,9)=Transaction Status
"RTN","MDAPI",228,0)
 ;
"RTN","MDAPI",229,0)
 ; Where N = 1..n entries
"RTN","MDAPI",230,0)
 ;
"RTN","MDAPI",231,0)
 N MDCT,MDX,MDY
"RTN","MDAPI",232,0)
 I '$G(MDCSLT) S @RESULTS@(0)="-1^No Consult Number passed" Q
"RTN","MDAPI",233,0)
 S MDX=$O(^MDD(702,"ACON",MDCSLT,0)) I 'MDX S @RESULTS@(0)="-1^No CP Study Entry." Q
"RTN","MDAPI",234,0)
 S @RESULTS@(0)=1
"RTN","MDAPI",235,0)
 S MDCT=0,MDX="" F  S MDX=$O(^MDD(702,"ACON",MDCSLT,MDX)) Q:MDX<1  D
"RTN","MDAPI",236,0)
 .S MDCT=MDCT+1,@RESULTS@(MDCT,1)=MDX
"RTN","MDAPI",237,0)
 .S MDY=$G(^MDD(702,+MDX,0)),@RESULTS@(MDCT,2)=$P(MDY,U),@RESULTS@(MDCT,3)=$P(MDY,U,2),@RESULTS@(MDCT,4)=$P(MDY,U,3),@RESULTS@(MDCT,5)=$$GET1^DIQ(702,+MDX,.04,"E")
"RTN","MDAPI",238,0)
 .S @RESULTS@(MDCT,6)=$P(MDY,U,5),@RESULTS@(MDCT,7)=$P(MDY,U,6),@RESULTS@(MDCT,8)=$P(MDY,U,7),@RESULTS@(MDCT,9)=$$GET1^DIQ(702,+MDX,.09,"E")
"RTN","MDAPI",239,0)
 Q
"RTN","MDHL7A")
0^14^B47556007
"RTN","MDHL7A",1,0)
MDHL7A ; HOIFO/WAA - Routine to Decode HL7 for CP ;9/17/07  08:17
"RTN","MDHL7A",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDHL7A",3,0)
 ; Reference DBIA #10035 [Supported] for DPT calls.
"RTN","MDHL7A",4,0)
 ; Reference DBIA #10106 [Supported] for HLFNC calls.
"RTN","MDHL7A",5,0)
 ; Reference DBIA #10062 [Supported] for VADPT6 calls.
"RTN","MDHL7A",6,0)
 ; Reference DBIA #2701 [Supported] for MPIF001 calls
"RTN","MDHL7A",7,0)
 ; Reference DBIA #10096 [Supported] for ^%ZOSF calls
"RTN","MDHL7A",8,0)
EN ; [Procedure] Entry Point for Message Array in MSG
"RTN","MDHL7A",9,0)
 N %,BID,CODE,CPT,DA,DATE,DFN,DIK,DLCO,DTO,DZ,ERRTX,EXAM,EXE,MDFLAG,FIL
"RTN","MDHL7A",10,0)
 N I,ICNT,ID,IMP,J,K,LBL,LINO,LINE,LN,MDAPP,MDRTN,MG,MSG,N,NAM,NEXT,NUM
"RTN","MDHL7A",11,0)
 N ORIFN,P,PID,PIEN,S,SEG,SET,SEP,MDSSN,STR,STYP,SUB,TCNT,TXT,UNIQ,SEC
"RTN","MDHL7A",12,0)
 N UNITS,VA,VAL,X,XMBODY,XMDUZ,XMSUBJ,XMTO,Z,ZZ,Z1,Z2,MDERROR
"RTN","MDHL7A",13,0)
 N ECODE,MDIEN,MDOBX,NUMZ,PNAM,ZCODE,MDDEV,MDD702,DEVNAME,DEVIEN,MDQFLG
"RTN","MDHL7A",14,0)
 N MDIORD
"RTN","MDHL7A",15,0)
 K ^TMP($J,"MDHL7A"),^TMP($J,"MDHL7"),^TMP($J,"MDHL7A1")
"RTN","MDHL7A",16,0)
 S MDFLAG=0,MDERROR=0,MDQFLG=0
"RTN","MDHL7A",17,0)
 Q:$G(HLMTIENS)=""
"RTN","MDHL7A",18,0)
 S ^TMP($J,"MDHL7A1")=""
"RTN","MDHL7A",19,0)
 S HLREST="^TMP($J,""MDHL7A1"")"
"RTN","MDHL7A",20,0)
 S X=$$MSGIEN^MDHL7U3(HLMTIENS,HLREST) ; This code is to convert the HL7 Message **6**
"RTN","MDHL7A",21,0)
 I $P(X,U)=0 D  Q
"RTN","MDHL7A",22,0)
 . S DEVIEN=0,ECODE=0
"RTN","MDHL7A",23,0)
 . S ERRTX=$P(X,U,2)
"RTN","MDHL7A",24,0)
 . D ^MDHL7X
"RTN","MDHL7A",25,0)
 . Q
"RTN","MDHL7A",26,0)
 I $P(X,U)=1 D XVERT^MDHL7U3("MDHL7A1","MDHL7A")
"RTN","MDHL7A",27,0)
 K HLNODE,^TMP($J,"MDHL7A1")
"RTN","MDHL7A",28,0)
 ;
"RTN","MDHL7A",29,0)
EN2 ; [Procedure] No Description
"RTN","MDHL7A",30,0)
 S (DEVIEN,DEVNAME)="",I=0
"RTN","MDHL7A",31,0)
 F I=1:1 S X=$G(^TMP($J,"MDHL7A",I)) Q:X=""  Q:$E(X,1,3)="OBX"  D
"RTN","MDHL7A",32,0)
 . S:$E(X,1,3)="MSH" DEVNAME=$P(X,"|",4)
"RTN","MDHL7A",33,0)
 . I DEVNAME="",HLREC("SFN")'="" S DEVNAME=HLREC("SFN")
"RTN","MDHL7A",34,0)
 . I $E(X,1,3)="MSH",DEVNAME'="Instrument Manager" S DEVIEN=$O(^MDS(702.09,"B",DEVNAME,0))
"RTN","MDHL7A",35,0)
 . I $E(X,1,3)="OBR" D
"RTN","MDHL7A",36,0)
 .. I DEVNAME="Instrument Manager" D
"RTN","MDHL7A",37,0)
 ... S DEVNAME=$P(X,"|",25)
"RTN","MDHL7A",38,0)
 ... Q
"RTN","MDHL7A",39,0)
 .. S MDIORD=$P(X,"|",4)
"RTN","MDHL7A",40,0)
 .. S MDD702=$S(+MDIORD<1:"",1:$$GETSTDY^MDRPCOT1(MDIORD))
"RTN","MDHL7A",41,0)
 .. I MDD702<1 S MDD702="" Q
"RTN","MDHL7A",42,0)
 .. I MDD702>0 D  ;Validate the entry from 702 is good.
"RTN","MDHL7A",43,0)
 ... I $G(^MDD(702,MDD702,0))="" S MDD702="" Q
"RTN","MDHL7A",44,0)
 ... S DEVIEN=$$GET1^DIQ(702,MDD702,.11,"I")
"RTN","MDHL7A",45,0)
 ... I DEVIEN<1 S DEVIEN="" ; No device defined
"RTN","MDHL7A",46,0)
 ... Q
"RTN","MDHL7A",47,0)
 .. Q
"RTN","MDHL7A",48,0)
 . Q
"RTN","MDHL7A",49,0)
 I DEVIEN="",DEVNAME'="" S DEVIEN=$O(^MDS(702.09,"B",DEVNAME,0))
"RTN","MDHL7A",50,0)
 I DEVNAME="" S ERRTX="Invalid device Code" D ^MDHL7X Q
"RTN","MDHL7A",51,0)
 I DEVIEN="" S ERRTX="Invalid device entry" D ^MDHL7X Q
"RTN","MDHL7A",52,0)
 S ZCODE=$P($G(^MDS(702.09,DEVIEN,.1)),"^",2)
"RTN","MDHL7A",53,0)
 S ECODE=0,INST=DEVIEN,MDAPP=DEVNAME
"RTN","MDHL7A",54,0)
 I 'INST S ERRTX="Invalid Application Code" D ^MDHL7X Q
"RTN","MDHL7A",55,0)
 D INST^MDHL7U2(DEVIEN,.ECODE) I 'ECODE D  Q
"RTN","MDHL7A",56,0)
 . S ERRTX="Device Error" D ^MDHL7X
"RTN","MDHL7A",57,0)
 . Q
"RTN","MDHL7A",58,0)
 I (ZCODE="M")!(ZCODE="B") D  Q:MDERROR  Q:ZCODE="M"  ;
"RTN","MDHL7A",59,0)
 . S MDFLAG=1,MDERROR=0 ; Tell Medicine that CP is talking to HL7
"RTN","MDHL7A",60,0)
 . D ^MDHL7MCA ; Run the Medicine routines
"RTN","MDHL7A",61,0)
 . Q:MDERROR  ; Medicine found an error and sent an error back
"RTN","MDHL7A",62,0)
 . Q
"RTN","MDHL7A",63,0)
 S NUMZ=$O(^TMP($J,"MDHL7A",""),-1)
"RTN","MDHL7A",64,0)
 S NUM=0,MDOBX=0
"RTN","MDHL7A",65,0)
 F NUM=1:1:NUMZ  D  Q:$G(ERRTX)'=""
"RTN","MDHL7A",66,0)
 . S LINO=^TMP($J,"MDHL7A",NUM)
"RTN","MDHL7A",67,0)
 . S SEC=$P(LINO,"|")
"RTN","MDHL7A",68,0)
 . I SEC="MSH" D MSH Q
"RTN","MDHL7A",69,0)
 . I SEC="PID" D PID Q
"RTN","MDHL7A",70,0)
 . I SEC="OBR" D OBR Q
"RTN","MDHL7A",71,0)
 . I SEC="PV1" Q
"RTN","MDHL7A",72,0)
 . I SEC="ORC" Q
"RTN","MDHL7A",73,0)
 . I SEC="OBX" S MDOBX=1 Q
"RTN","MDHL7A",74,0)
 . Q
"RTN","MDHL7A",75,0)
 Q:$G(ERRTX)'=""
"RTN","MDHL7A",76,0)
 I 'MDOBX S ERRTX="OBX not found when expected" D ^MDHL7X Q
"RTN","MDHL7A",77,0)
 D OBX
"RTN","MDHL7A",78,0)
 D STATUS(MDIEN,"P")
"RTN","MDHL7A",79,0)
 K ^TMP($J,"MDHL7A"),^TMP($J,"MDHL7")
"RTN","MDHL7A",80,0)
 Q
"RTN","MDHL7A",81,0)
STATUS(DA,STAT) ; Update the status of the report in 703.1
"RTN","MDHL7A",82,0)
 Q:$G(ERRTX)'=""
"RTN","MDHL7A",83,0)
 S $P(^MDD(703.1,DA,0),U,9)=STAT
"RTN","MDHL7A",84,0)
 S DIK="^MDD(703.1," D IX1^DIK
"RTN","MDHL7A",85,0)
 Q
"RTN","MDHL7A",86,0)
IM ;Instrument Manager Interface
"RTN","MDHL7A",87,0)
 Q:DEVNAME'="Instrument Manager"
"RTN","MDHL7A",88,0)
 I $E(X,1,3)'="OBR" Q
"RTN","MDHL7A",89,0)
 S DEVNAME=$P(X,"|",25)
"RTN","MDHL7A",90,0)
 S DEVIEN=$O(^MDS(702.09,"B",DEVNAME,0))
"RTN","MDHL7A",91,0)
 Q
"RTN","MDHL7A",92,0)
 ;
"RTN","MDHL7A",93,0)
MSH ; [Procedure] Decode MSH
"RTN","MDHL7A",94,0)
 N SEG
"RTN","MDHL7A",95,0)
 I '$D(^TMP($J,"MDHL7A",NUM)) Q
"RTN","MDHL7A",96,0)
 S X=$G(^TMP($J,"MDHL7A",NUM)),SEG("MSH")=X
"RTN","MDHL7A",97,0)
 I $E(X,1,3)'="MSH" S ERRTX="MSH not first record" D ^MDHL7X Q
"RTN","MDHL7A",98,0)
 Q
"RTN","MDHL7A",99,0)
 ;
"RTN","MDHL7A",100,0)
OBR ; [Procedure] Check OBR
"RTN","MDHL7A",101,0)
 N MDGMRC
"RTN","MDHL7A",102,0)
 S X=$G(^TMP($J,"MDHL7A",NUM)) I $E(X,1,3)'="OBR" S ERRTX="OBR not found when expected" D ^MDHL7X Q
"RTN","MDHL7A",103,0)
 S SEG("OBR")=X
"RTN","MDHL7A",104,0)
 S MDIORD=$P(X,"|",4)
"RTN","MDHL7A",105,0)
 S MDD702=$S(+MDIORD<1:"",1:$$GETSTDY^MDRPCOT1(MDIORD))
"RTN","MDHL7A",106,0)
 ;I MDD702'="" S MDD702=$$CHK^MDNCHK(MDD702) ; PATCH 11
"RTN","MDHL7A",107,0)
 S ORIFN=$P(X,"|",3),(EXAM,%)=$P(X,"|",5) I EXAM'="" S EXAM=$P(%,"^",2) I EXAM="" S EXAM=$P(%,"^",1)
"RTN","MDHL7A",108,0)
 S CPT=$P(X,"|",5) I $P(CPT,"^",3)["CPT" S CPT=$P(CPT,"^",1)
"RTN","MDHL7A",109,0)
 S DTO="",DATE=$P(X,"|",8) I DATE'="" S:$L(DATE)>14 DATE=$E(DATE,1,14) S DTO=$$FMDATE^HLFNC(DATE)
"RTN","MDHL7A",110,0)
 ;  vvv== Added to address the issues of mismatch
"RTN","MDHL7A",111,0)
 I $G(MDD702)>0 I DFN'=$$GET1^DIQ(702,MDD702,.01,"I") S ERRTX="Patient name Mismatch. Name in PID doesn't match the name in the CP Order #"_MDD702_"." D ^MDHL7X Q
"RTN","MDHL7A",112,0)
 I $G(MDD702)>0 I MDDOB'=$$GET1^DIQ(2,DFN,.03,"I") S ERRTX="Patient DOB Mismatch. DOB in PID doesn't match the DOB in the CP Order #"_MDD702_"." D ^MDHL7X Q
"RTN","MDHL7A",113,0)
 I DTO="" S ERRTX="Missing required Date/Time of Procedure in OBR" D ^MDHL7X Q
"RTN","MDHL7A",114,0)
 ;;S UNIQ=$TR($H,",","-")
"RTN","MDHL7A",115,0)
 S UNIQ=$$NEWID(DFN,DATE,INST,$G(MDD702),HLMTIEN)
"RTN","MDHL7A",116,0)
 I +UNIQ="-1" S ERRTX="Unable to Create or Lock 703.1" D ^MDHL7X Q
"RTN","MDHL7A",117,0)
 S MDIEN=$P(UNIQ,"^",1) ; Got the IEN for 703.1
"RTN","MDHL7A",118,0)
 N SET S SET=DTO_"^"_$P(UNIQ,U,2),ICNT=0 N IMP
"RTN","MDHL7A",119,0)
 S MDRTN=$P($G(^MDS(702.09,INST,.1)),"^",1) S:MDRTN'["^" MDRTN="^"_MDRTN
"RTN","MDHL7A",120,0)
 S X=MDRTN S:X["^" X=$P(X,"^",2) X ^%ZOSF("TEST") I '$T S ERRTX="Processing routine not found" D ^MDHL7X Q  ; IA %10096
"RTN","MDHL7A",121,0)
 D CPTICD^MDHL7U3(X,MDIEN) ; Update CPT and ICD9
"RTN","MDHL7A",122,0)
 D PHY^MDHL7U3(X,MDIEN) ; Get Doc who did the procedure.
"RTN","MDHL7A",123,0)
 Q
"RTN","MDHL7A",124,0)
 ;
"RTN","MDHL7A",125,0)
PID ; [Procedure] Check PID
"RTN","MDHL7A",126,0)
 S X=$G(^TMP($J,"MDHL7A",NUM)) I $E(X,1,3)'="PID" S ERRTX="PID not second record" D ^MDHL7X Q
"RTN","MDHL7A",127,0)
 S SEG("PID")=X
"RTN","MDHL7A",128,0)
 S MDDOB=$P(X,"|",8) I MDDOB'="" S MDDOB=($E(MDDOB,1,4)-1700)_$E(MDDOB,5,8)
"RTN","MDHL7A",129,0)
 I $L($P(X,"|",4))'<16 D  I +DFN=-1 Q
"RTN","MDHL7A",130,0)
 . N ICN
"RTN","MDHL7A",131,0)
 . S ICN=$P(X,"|",4)
"RTN","MDHL7A",132,0)
 . S DFN=$$GETDFN^MPIF001(ICN)
"RTN","MDHL7A",133,0)
 . I +DFN=-1 S ERRTX=$P(DFN,U,2)
"RTN","MDHL7A",134,0)
 . D MDSSN I DFN<1 S ERRTX="SSN not found" D ^MDHL7X Q
"RTN","MDHL7A",135,0)
 . I DFN>0 K ERRTX
"RTN","MDHL7A",136,0)
 . S MDSSN=$$GET1^DIQ(2,DFN,.09,"I") I MDSSN="" S MDSSN=" ",DFN=0
"RTN","MDHL7A",137,0)
 . Q
"RTN","MDHL7A",138,0)
 E  D MDSSN
"RTN","MDHL7A",139,0)
 I 'DFN S ERRTX="SSN not found" D ^MDHL7X Q
"RTN","MDHL7A",140,0)
 S Z1=$P($G(^DPT(DFN,0)),",",1),Z2=$P(NAM,"^",1)
"RTN","MDHL7A",141,0)
 S Z1=$TR(Z1,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7A",142,0)
 S Z2=$TR(Z2,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7A",143,0)
 I $E(Z1,1,3)'=$E(Z2,1,3) S ERRTX="Last Name MisMatch" D ^MDHL7X Q
"RTN","MDHL7A",144,0)
 S PNAM=$TR(NAM,"^",",")
"RTN","MDHL7A",145,0)
 D PID^VADPT6 S PID=$G(VA("PID")),BID=$G(VA("BID")) N VA
"RTN","MDHL7A",146,0)
 Q
"RTN","MDHL7A",147,0)
MDSSN ; This subroutine is to match up the SSN for a patient.
"RTN","MDHL7A",148,0)
 S NAM=$P(X,"|",6),MDSSN=$P(X,"|",20) I $L(MDSSN)<9 S MDSSN=$P(X,"|",4)
"RTN","MDHL7A",149,0)
 S MDSSN=$P(MDSSN,"^",1) I MDSSN'?9N S MDSSN=$TR(MDSSN,"- ","")
"RTN","MDHL7A",150,0)
 I $E(MDSSN,$L(MDSSN))="P" S MDSSN=$E(MDSSN,1,9)
"RTN","MDHL7A",151,0)
 S:MDSSN'?9N MDSSN=" " S DFN=$O(^DPT("SSN",MDSSN,0))
"RTN","MDHL7A",152,0)
 I 'DFN S DFN=$O(^DPT("SSN",MDSSN_"P",0))
"RTN","MDHL7A",153,0)
 Q
"RTN","MDHL7A",154,0)
 ;
"RTN","MDHL7A",155,0)
OBX ; [Observation]
"RTN","MDHL7A",156,0)
 D @MDRTN
"RTN","MDHL7A",157,0)
 Q
"RTN","MDHL7A",158,0)
NEWID(DFN,DATE,INST,MDD702,HLMTIEN) ; Generate a new entry and ID of 703.1
"RTN","MDHL7A",159,0)
 N NEWID,MDFDA,MDIEN,MDNO
"RTN","MDHL7A",160,0)
 S NEWID=$TR($H,",","-")  ; Create inital ID
"RTN","MDHL7A",161,0)
 L +(^MDD(703.1,"B")):60 E  Q "-1"
"RTN","MDHL7A",162,0)
 ;^^--- Unable to get a lock in the file
"RTN","MDHL7A",163,0)
 F  Q:'$D(^MDD(703.1,"B",NEWID))  H 1 S NEWID=$TR($H,",","-")
"RTN","MDHL7A",164,0)
 ;^^--- Search to create a new ID if current ID is in use
"RTN","MDHL7A",165,0)
 S MDFDA(703.1,"+1,",.01)=NEWID
"RTN","MDHL7A",166,0)
 S MDFDA(703.1,"+1,",.02)=DFN
"RTN","MDHL7A",167,0)
 S MDFDA(703.1,"+1,",.03)=$$HL7TFM^MDHL7U(DATE)
"RTN","MDHL7A",168,0)
 S MDFDA(703.1,"+1,",.04)=INST
"RTN","MDHL7A",169,0)
 S MDFDA(703.1,"+1,",.05)=MDD702
"RTN","MDHL7A",170,0)
 S MDFDA(703.1,"+1,",.06)=HLMTIEN
"RTN","MDHL7A",171,0)
 D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDHL7A",172,0)
 L -(^MDD(703.1,"B"))
"RTN","MDHL7A",173,0)
 I $G(MDIEN(1))>0 D  Q MDIEN(1)_U_NEWID
"RTN","MDHL7A",174,0)
 . S ^MDD(703.1,MDIEN(1),.1,0)="^703.11S^0^0"
"RTN","MDHL7A",175,0)
 . S MDNO=$$NTIU^MDRPCW1(+MDD702)
"RTN","MDHL7A",176,0)
 . Q
"RTN","MDHL7A",177,0)
 ; ^^--- Create Subfile and quit
"RTN","MDHL7A",178,0)
 Q "-1"  ; Unable to create file
"RTN","MDHL7A",179,0)
 ;
"RTN","MDHL7A",180,0)
PROC ; [Procedure] Create report entry in file (703.1)
"RTN","MDHL7A",181,0)
 D PROC^MDHL7U
"RTN","MDHL7A",182,0)
 Q
"RTN","MDHL7D")
0^16^B590368
"RTN","MDHL7D",1,0)
MDHL7D ; HOIFO/WAA -B-Braun, Fresenius Dialysis ; 06/08/00
"RTN","MDHL7D",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDHL7D",3,0)
 ;S (TCNT,ICNT,LN)=0
"RTN","MDHL7D",4,0)
OBX ; Process OBX
"RTN","MDHL7D",5,0)
 ; M ^ZZBILL("MDHL7",$J,"POST-HL7")=^TMP($J,"MDHL7A")  ; POST PROCESSING
"RTN","MDHL7D",6,0)
 N MDATT,PROC
"RTN","MDHL7D",7,0)
 D ATT^MDHL7U(DEVIEN,.MDATT) Q:MDATT<1
"RTN","MDHL7D",8,0)
 S PROC=0
"RTN","MDHL7D",9,0)
 F  S PROC=$O(MDATT(PROC)) Q:PROC<1  D
"RTN","MDHL7D",10,0)
 . N PROCESS
"RTN","MDHL7D",11,0)
 . S PROCESS=$P(MDATT(PROC),";",5)
"RTN","MDHL7D",12,0)
 . D @PROCESS
"RTN","MDHL7D",13,0)
 . Q
"RTN","MDHL7D",14,0)
 Q:'MDIEN
"RTN","MDHL7D",15,0)
 D EN1^MDUXML  ; XML conversion utility
"RTN","MDHL7D",16,0)
 ; M ^ZZBILL("MSHL7",$J,"XML")=^TMP($J,"MDHL7XML")  ; "XML RESULTS"
"RTN","MDHL7D",17,0)
 D FILE^MDUXMLU1(MDIEN)  ;  File the results
"RTN","MDHL7D",18,0)
 D REX^MDHL7U1(MDIEN)
"RTN","MDHL7D",19,0)
 D GENACK^MDHL7X
"RTN","MDHL7D",20,0)
 Q
"RTN","MDHL7MCA")
0^17^B13657775
"RTN","MDHL7MCA",1,0)
MDHL7MCA ; HOIFO/REL-Routine to Decode HL7 for MEDICINE ; [05-07-2001 10:38]
"RTN","MDHL7MCA",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDHL7MCA",3,0)
 ; Reference DBIA #10035 for DPT calls.
"RTN","MDHL7MCA",4,0)
 ; Reference DBIA #10062 for VADPT calls.
"RTN","MDHL7MCA",5,0)
 ; Reference DBIA #10106 for HL7 calls.
"RTN","MDHL7MCA",6,0)
 ; Reference DBIA #10096 for ^%ZOSF calls.
"RTN","MDHL7MCA",7,0)
EN ; Entry Point for Message Array in MSG
"RTN","MDHL7MCA",8,0)
 N MSG
"RTN","MDHL7MCA",9,0)
 K ERRTX
"RTN","MDHL7MCA",10,0)
 S MDERROR=0
"RTN","MDHL7MCA",11,0)
 ;F I=3:1 X HLNEXT Q:HLQUIT'>0  S MSG(I)=HLNODE,J=0 F  S J=$O(HLNODE(J)) Q:'J  S MSG(I,J)=HLNODE(J)
"RTN","MDHL7MCA",12,0)
 M MSG=^TMP($J,"MDHL7A")
"RTN","MDHL7MCA",13,0)
 S NUM=1
"RTN","MDHL7MCA",14,0)
MSH ; Decode MSH
"RTN","MDHL7MCA",15,0)
 K SEG
"RTN","MDHL7MCA",16,0)
 I '$D(MSG(NUM)) G KIL
"RTN","MDHL7MCA",17,0)
 S X=$G(MSG(NUM)),SEG("MSH")=X,MCAPP=""
"RTN","MDHL7MCA",18,0)
 I $E(X,1,3)'="MSH" S ERRTX="MSH not first record" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",19,0)
 S MCAPP=$P(MSG(NUM),"|",4) I MCAPP="" G KIL
"RTN","MDHL7MCA",20,0)
 S NUM=NUM+1
"RTN","MDHL7MCA",21,0)
PID ; Check PID
"RTN","MDHL7MCA",22,0)
 S X=$G(MSG(NUM)) I $E(X,1,3)'="PID" S ERRTX="PID not second record" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",23,0)
 S SEG("PID")=X
"RTN","MDHL7MCA",24,0)
 S NAM=$P(X,"|",6),MDSSN=$P(X,"|",20) I $L(MDSSN)<9 S MDSSN=$P(X,"|",4)
"RTN","MDHL7MCA",25,0)
 S MDSSN=$P(MDSSN,"^",1) I MDSSN'?9N S MDSSN=$TR(MDSSN,"- ","")
"RTN","MDHL7MCA",26,0)
 S:MDSSN'?9N MDSSN=" " S DFN=$O(^DPT("SSN",MDSSN,0))
"RTN","MDHL7MCA",27,0)
 I 'DFN S ERRTX="SSN not found" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",28,0)
 S Z1=$P($G(^DPT(DFN,0)),",",1),Z2=$P(NAM,"^",1)
"RTN","MDHL7MCA",29,0)
 S Z1=$TR(Z1,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7MCA",30,0)
 S Z2=$TR(Z2,"abcdefghijklmnopqrstuvwxyz- '","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MDHL7MCA",31,0)
 I $E(Z1,1,3)'=$E(Z2,1,3) S ERRTX="Last Name MisMatch" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",32,0)
 D PID^VADPT6 S PID=$G(VA("PID")),BID=$G(VA("BID")) K VA
"RTN","MDHL7MCA",33,0)
 ; If DFN not a medical patient, add DFN to medical patient file
"RTN","MDHL7MCA",34,0)
 I '$D(^MCAR(690,DFN)) S ^MCAR(690,DFN,0)=DFN,^MCAR(690,"B",DFN,DFN)="",$P(^MCAR(690,0),U,4)=$P(^MCAR(690,0),U,4)+1 S:$P(^MCAR(690,0),U,3)<DFN $P(^MCAR(690,0),U,3)=DFN
"RTN","MDHL7MCA",35,0)
 S NUM=NUM+1
"RTN","MDHL7MCA",36,0)
 ; Skip PV1, ORC if necessary
"RTN","MDHL7MCA",37,0)
LPOBR I $E(MSG(NUM),1,3)'="OBR" S NUM=NUM+1 G LPOBR
"RTN","MDHL7MCA",38,0)
 ;I $E(MSG(NUM),1,3)="ORC" S NUM=NUM+1
"RTN","MDHL7MCA",39,0)
OBR ; Check OBR
"RTN","MDHL7MCA",40,0)
 S X=$G(MSG(NUM)) I $E(X,1,3)'="OBR" S ERRTX="OBR not found when expected" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",41,0)
 S SEG("OBR")=X
"RTN","MDHL7MCA",42,0)
 S ORIFN=$P(X,"|",3),INST=$P(X,"|",25) I MCAPP="Instrument Manager",INST'="" S MCAPP=INST
"RTN","MDHL7MCA",43,0)
 S ORIFN=$P(X,"|",3),(EXAM,%)=$P(X,"|",5) I EXAM'="" S EXAM=$P(%,"^",2),EXAM2=$P(%,"^",1) I EXAM="" S EXAM=EXAM2
"RTN","MDHL7MCA",44,0)
 S CPT=$P(X,"|",5) I $P(CPT,"^",3)["CPT" S CPT=$P(CPT,"^",1)
"RTN","MDHL7MCA",45,0)
 S DTO="",DATE=$P(X,"|",8) I DATE'="" S:$L(DATE)>14 DATE=$E(DATE,1,14) S DTO=$$FMDATE^HLFNC(DATE)
"RTN","MDHL7MCA",46,0)
 I DTO="" S ERRTX="Missing required Date/Time of Procedure in OBR" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",47,0)
 K SET S SET=DTO_"^"_DFN,NUM=NUM+1,ICNT=0 K IMP
"RTN","MDHL7MCA",48,0)
 ; Go to Application
"RTN","MDHL7MCA",49,0)
 S INST=$O(^MCAR(690.7,"B",MCAPP,0)) I 'INST S X=MCAPP,ERRTX="Invalid Application Code" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",50,0)
 S MCRTN=$G(^MCAR(690.7,INST,1)) S:MCRTN'["^" MCRTN="^"_MCRTN
"RTN","MDHL7MCA",51,0)
 ; test for existence
"RTN","MDHL7MCA",52,0)
 S X=MCRTN S:X["^" X=$P(X,"^",2) X ^%ZOSF("TEST") I '$T S ERRTX="Processing routine not found" D ^MDHL7MCX G KIL
"RTN","MDHL7MCA",53,0)
 D @MCRTN G KIL
"RTN","MDHL7MCA",54,0)
PROC ; Create Procedure entry in appropriate file (FIL)
"RTN","MDHL7MCA",55,0)
 I $P(SET,"^",1)=""!($P(SET,"^",2)="") Q
"RTN","MDHL7MCA",56,0)
 S DA=0 F  S DA=$O(^MCAR(FIL,"B",$P(SET,"^",1),DA)) Q:'DA  I $P($G(^MCAR(FIL,DA,0)),"^",1,2)=SET Q
"RTN","MDHL7MCA",57,0)
 Q:DA
"RTN","MDHL7MCA",58,0)
P1 L +^MCAR(FIL,0):3 G:'$T P1 S DA=$P(^MCAR(FIL,0),"^",3)+1,$P(^MCAR(FIL,0),"^",3,4)=DA_"^"_DA L -^MCAR(FIL,0)
"RTN","MDHL7MCA",59,0)
 I $D(^MCAR(FIL,DA)) G P1
"RTN","MDHL7MCA",60,0)
 S ^MCAR(FIL,DA,0)=SET S DIK="^MCAR("_FIL_"," D IX1^DIK Q
"RTN","MDHL7MCA",61,0)
KIL ; Kill Variables
"RTN","MDHL7MCA",62,0)
 K %,BID,CODE,CPT,DA,DATE,DFN,DIK,DLCO,DTO,ERRTX,EXAM,EXAM2,EXE,FIL
"RTN","MDHL7MCA",63,0)
 K I,ICNT,ID,IMP,J,K,LBL,LINE,LN,MCAPP,MCRTN,MG,MSG,N,NAM,NEXT,NUM
"RTN","MDHL7MCA",64,0)
 K ORIFN,P,PID,PIEN,S,SEG,SEP,SET,MDSSN,STR,STYP,SUB,TCNT,TXT
"RTN","MDHL7MCA",65,0)
 K UNITS,VA,VAL,X,XMBODY,XMDUZ,XMSUBJ,XMTO,Z1,Z2
"RTN","MDHL7MCA",66,0)
 Q
"RTN","MDHL7U3")
0^18^B59275593
"RTN","MDHL7U3",1,0)
MDHL7U3 ; HOIFO/WAA -Utilities for CP to process HL7 messages  ; 7/26/00
"RTN","MDHL7U3",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDHL7U3",3,0)
 ; Reference DBIA #2729 [Supported]  for XMXPAI
"RTN","MDHL7U3",4,0)
 ; Reference DBIA #4262 [Supported] for HL7 call.
"RTN","MDHL7U3",5,0)
 ; Reference DBIA #3273 [Subscription] for HL7 call.
"RTN","MDHL7U3",6,0)
 ; Reference DBIA #10138 [Supported] for HL7 call.
"RTN","MDHL7U3",7,0)
 ; Reference DBIA #3990 [Supported] for ICDCODE call
"RTN","MDHL7U3",8,0)
 ; Reference DBIA #1131 [Supported] for XMB("NETNAME") reference
"RTN","MDHL7U3",9,0)
 ; Reference DBIA #1995 [Supported] for ICPTCOD to handle CPT Codes call
"RTN","MDHL7U3",10,0)
 ; Reference DBIA #10082 [Supported] for ^ICD9 reference
"RTN","MDHL7U3",11,0)
 ; Reference DBIA #10111 [Supported] for FILE 3.8 call
"RTN","MDHL7U3",12,0)
 ; Reference DBIA #10103 [Supported] for XLFDT call
"RTN","MDHL7U3",13,0)
 ;
"RTN","MDHL7U3",14,0)
HL7CHK(MDD702) ; Check to see of there is an entry in 703.1 for a patient.
"RTN","MDHL7U3",15,0)
 N X
"RTN","MDHL7U3",16,0)
 S X="1^"
"RTN","MDHL7U3",17,0)
 D
"RTN","MDHL7U3",18,0)
 . N Y
"RTN","MDHL7U3",19,0)
 . I $G(^MDD(702,MDD702,0))="" S X="-1^No Entry in 702." Q
"RTN","MDHL7U3",20,0)
 . I $D(^MDD(703.1,"ASTUDYID",MDD702))=0 Q
"RTN","MDHL7U3",21,0)
 . S Y=0
"RTN","MDHL7U3",22,0)
 . S Y=$O(^MDD(703.1,"ASTUDYID",MDD702,Y)) I Y>0 S X="-1^This Study has Data on file."
"RTN","MDHL7U3",23,0)
 . Q
"RTN","MDHL7U3",24,0)
 Q X
"RTN","MDHL7U3",25,0)
XVERT(MDA,MDB) ; Strip out blank Lines
"RTN","MDHL7U3",26,0)
 Q:MDA=""
"RTN","MDHL7U3",27,0)
 Q:MDB=""
"RTN","MDHL7U3",28,0)
 Q:$G(^TMP($J,MDA,1))
"RTN","MDHL7U3",29,0)
 N I,CNT,CNT2,NODE,FLG
"RTN","MDHL7U3",30,0)
 S (CNT,I,FLG)=0
"RTN","MDHL7U3",31,0)
 F  S I=$O(^TMP($J,MDA,I)) Q:I<1  D
"RTN","MDHL7U3",32,0)
 . S NODE=$TR(^TMP($J,MDA,I),$C(10),"")
"RTN","MDHL7U3",33,0)
 . I NODE="" S FLG=0 Q
"RTN","MDHL7U3",34,0)
 . I FLG  D  Q
"RTN","MDHL7U3",35,0)
 . . S CNT2=CNT2+1
"RTN","MDHL7U3",36,0)
 . . S ^TMP($J,MDB,CNT,CNT2)=NODE
"RTN","MDHL7U3",37,0)
 . . Q
"RTN","MDHL7U3",38,0)
 . I 'FLG D  Q
"RTN","MDHL7U3",39,0)
 . . S CNT=CNT+1
"RTN","MDHL7U3",40,0)
 . . S ^TMP($J,MDB,CNT)=NODE
"RTN","MDHL7U3",41,0)
 . . S FLG=1,CNT2=0
"RTN","MDHL7U3",42,0)
 . . Q
"RTN","MDHL7U3",43,0)
 . Q
"RTN","MDHL7U3",44,0)
 Q
"RTN","MDHL7U3",45,0)
 ;
"RTN","MDHL7U3",46,0)
PURGE(MDD7031) ;
"RTN","MDHL7U3",47,0)
 ; This sub-routine will delete HL7 772 Message text after a message
"RTN","MDHL7U3",48,0)
 ; been processed by Imaging.
"RTN","MDHL7U3",49,0)
 Q:'$D(^MDD(703.1,MDD7031,0))  ; No entry found
"RTN","MDHL7U3",50,0)
 S MDD772=$P(^MDD(703.1,MDD7031,0),U,6) Q:MDD772=""
"RTN","MDHL7U3",51,0)
 D DELBODY^HLUOPT2(MDD772,"CLINICAL PROCEDURES message purge","^TMP($J,""IN"")")
"RTN","MDHL7U3",52,0)
 S $P(^MDD(703.1,MDD7031,0),U,6)=""
"RTN","MDHL7U3",53,0)
 Q
"RTN","MDHL7U3",54,0)
 ;
"RTN","MDHL7U3",55,0)
PHY(X,MDIEN) ; Add the doc who did the exam to the report
"RTN","MDHL7U3",56,0)
 Q
"RTN","MDHL7U3",57,0)
 ; This will be implemented with the Doctor Lookup when it comes out.
"RTN","MDHL7U3",58,0)
 N LINE1,LINE
"RTN","MDHL7U3",59,0)
 S LINE1=$P(X,"|",17)
"RTN","MDHL7U3",60,0)
 S LINE=$P(LINE1,"^",2) ; Last
"RTN","MDHL7U3",61,0)
 S LINE=LINE_$S($P(LINE1,"^",3)'="":", "_$P(LINE1,"^",3),1:"") ; First
"RTN","MDHL7U3",62,0)
 S LINE=LINE_$S($P(LINE1,"^",4)'="":" "_$P(LINE1,"^",4),1:"") ; MI
"RTN","MDHL7U3",63,0)
 D ADD(MDIEN,"9",LINE)
"RTN","MDHL7U3",64,0)
 Q
"RTN","MDHL7U3",65,0)
 ;
"RTN","MDHL7U3",66,0)
CPTICD(X,MDIEN) ; Break out CPT and ICD9 codes
"RTN","MDHL7U3",67,0)
 N ICD,CPT
"RTN","MDHL7U3",68,0)
 Q:MDIEN<1
"RTN","MDHL7U3",69,0)
 S CPT=$P(X,"|",45) I CPT'="" D FILECD(MDIEN,CPT,"7")
"RTN","MDHL7U3",70,0)
 S ICD=$P(X,"|",14) I ICD'="" D FILECD(MDIEN,ICD,"8")
"RTN","MDHL7U3",71,0)
 Q
"RTN","MDHL7U3",72,0)
FILECD(MDIEN,CODE,TYPE) ; fILE THE DATA
"RTN","MDHL7U3",73,0)
 N LINE,Y,I,CNT,RESULT
"RTN","MDHL7U3",74,0)
 S CNT=$L(CODE,"~")
"RTN","MDHL7U3",75,0)
 S LINE=""
"RTN","MDHL7U3",76,0)
 F I=1:1:CNT S Y=$P(CODE,"~",I),RESULT=$P(Y,"^",1),LINE(.2,I,0)=RESULT
"RTN","MDHL7U3",77,0)
 S LINE(.2,0)="^^"_CNT_"^"_CNT_"^"_$P(%,".")
"RTN","MDHL7U3",78,0)
 Q:CNT<1  ; file the results if there is any
"RTN","MDHL7U3",79,0)
 D ADD(MDIEN,TYPE,.LINE,CNT)
"RTN","MDHL7U3",80,0)
 Q
"RTN","MDHL7U3",81,0)
 ;
"RTN","MDHL7U3",82,0)
ADD(MDIEN,TYPE,LINE,CNT) ;
"RTN","MDHL7U3",83,0)
 ; Create an entry in the .1 node
"RTN","MDHL7U3",84,0)
 N NODE,X
"RTN","MDHL7U3",85,0)
 S NODE=$G(^MDD(703.1,MDIEN,.1,0)) Q:NODE=""
"RTN","MDHL7U3",86,0)
 S NODE=$P(NODE,"^",3)
"RTN","MDHL7U3",87,0)
 S NODE=NODE+1
"RTN","MDHL7U3",88,0)
 S $P(^MDD(703.1,MDIEN,.1,0),"^",3,4)=NODE_"^"_NODE
"RTN","MDHL7U3",89,0)
 S $P(^MDD(703.1,MDIEN,.1,NODE,0),"^")=TYPE
"RTN","MDHL7U3",90,0)
 D NOW^%DTC
"RTN","MDHL7U3",91,0)
 M ^MDD(703.1,MDIEN,.1,NODE)=LINE
"RTN","MDHL7U3",92,0)
 Q
"RTN","MDHL7U3",93,0)
 ;
"RTN","MDHL7U3",94,0)
MSGIEN(MDHLIENS,MDHLREST) ; Return the message as definded in MDHLIENS  to the array in MDHLREST
"RTN","MDHL7U3",95,0)
 ; Only TCP type messages
"RTN","MDHL7U3",96,0)
 ; input: MDHLIENS= the intern entry number of the message in ^HLMA
"RTN","MDHL7U3",97,0)
 ; MDHLREST = the return array that will contain the whole HL7 message
"RTN","MDHL7U3",98,0)
 ; output: return "1^Message complete" if message was successful, "0^reason" if failed.
"RTN","MDHL7U3",99,0)
 ;
"RTN","MDHL7U3",100,0)
 N MDHLIEN,MDHLI,MDHLCNT,MDHLZ,RET
"RTN","MDHL7U3",101,0)
 S (MDHLCNT,MDHLI,RET)=0
"RTN","MDHL7U3",102,0)
 I $G(MDHLIENS)="" S RET=RET_"^No IEN defined" Q RET  ; Exit because no IEN for ^HLMA was provided
"RTN","MDHL7U3",103,0)
 I $G(MDHLREST)="" S RET=RET_"^No Return ARRAY provided" Q RET  ; Exit because no return array was provided
"RTN","MDHL7U3",104,0)
 I $G(^HLMA(MDHLIENS,0))="" S RET=RET_"^HLMA entry does not exist" Q RET  ; Exit because invalid OR non-EXISTING HLMA ENTRY
"RTN","MDHL7U3",105,0)
 S MDHLIEN=$P(^HLMA(MDHLIENS,0),U)
"RTN","MDHL7U3",106,0)
 I MDHLIEN="" S RET=RET_"^No pointer value to file 772" Q RET  ; No Pointer to 772
"RTN","MDHL7U3",107,0)
 I $G(^HL(772,MDHLIEN,0))="" S RET=RET_"^772 Entry does not exist" Q RET  ; No 772 entry exist
"RTN","MDHL7U3",108,0)
 ;get header
"RTN","MDHL7U3",109,0)
 S MDHLZ=$G(^HLMA(MDHLIENS,"MSH",1,0))
"RTN","MDHL7U3",110,0)
 I MDHLZ="" S RET=RET_"^No MSH segment found" Q RET  ; No MSH was found
"RTN","MDHL7U3",111,0)
 S MDHLCNT=MDHLCNT+1,@MDHLREST@(MDHLCNT)=MDHLZ
"RTN","MDHL7U3",112,0)
 S MDHLCNT=MDHLCNT+1,@MDHLREST@(MDHLCNT)=""
"RTN","MDHL7U3",113,0)
 ;get body
"RTN","MDHL7U3",114,0)
 S MDHLI=0
"RTN","MDHL7U3",115,0)
 F  S MDHLI=$O(^HL(772,MDHLIEN,"IN",MDHLI)) Q:'MDHLI  D
"RTN","MDHL7U3",116,0)
 . S MDHLCNT=MDHLCNT+1
"RTN","MDHL7U3",117,0)
 . S @MDHLREST@(MDHLCNT)=$G(^HL(772,MDHLIEN,"IN",MDHLI,0))
"RTN","MDHL7U3",118,0)
 . Q
"RTN","MDHL7U3",119,0)
 I MDHLCNT'>2 S RET=RET_"^No message body found" Q RET  ; There was no body
"RTN","MDHL7U3",120,0)
 S RET="1^Message complete"
"RTN","MDHL7U3",121,0)
 Q RET
"RTN","MDHL7U3",122,0)
 ;
"RTN","MDHL7U3",123,0)
CICNV(MDIEN,RETURN) ; This subroutine will read the data in 703.1 and return the results 
"RTN","MDHL7U3",124,0)
 ;in the indicated global
"RTN","MDHL7U3",125,0)
 N NODE,FLG
"RTN","MDHL7U3",126,0)
 S FLG=1
"RTN","MDHL7U3",127,0)
 Q:MDIEN=""  ; The ien was null
"RTN","MDHL7U3",128,0)
 Q:RETURN=""  ; the array was null
"RTN","MDHL7U3",129,0)
 S ARRAY(0)="0^0"
"RTN","MDHL7U3",130,0)
 I $G(^MDD(703.1,MDIEN,.1,0))="" S FLG=0 Q  ; There is not data.
"RTN","MDHL7U3",131,0)
 ; Start the processing of ICD/POV codes Value is 8
"RTN","MDHL7U3",132,0)
 S NODE=0
"RTN","MDHL7U3",133,0)
 I FLG I $G(^MDD(703.1,MDIEN,.1,0))'="" D
"RTN","MDHL7U3",134,0)
 . F  S NODE=$O(^MDD(703.1,MDIEN,.1,NODE)) Q:NODE<1  D
"RTN","MDHL7U3",135,0)
 . . S TYPE=$P($G(^MDD(703.1,MDIEN,.1,NODE,0),0),"^",1)
"RTN","MDHL7U3",136,0)
 . . I TYPE=8 D PROCESS(MDIEN,NODE,TYPE,.ARRAY)
"RTN","MDHL7U3",137,0)
 . . I TYPE=7 D PROCESS(MDIEN,NODE,TYPE,.ARRAY)
"RTN","MDHL7U3",138,0)
 . . Q
"RTN","MDHL7U3",139,0)
 . Q
"RTN","MDHL7U3",140,0)
 M @RETURN=ARRAY
"RTN","MDHL7U3",141,0)
 Q
"RTN","MDHL7U3",142,0)
PROCESS(MDIEN,NODE,TYPE,ARRAY) ; This will process the data for each
"RTN","MDHL7U3",143,0)
 N CNT,X,CONT,CODE,AR,TP,LOC
"RTN","MDHL7U3",144,0)
 S CNT=0,CONT=0
"RTN","MDHL7U3",145,0)
 F  S CNT=$O(^MDD(703.1,MDIEN,.1,NODE,.2,CNT)) Q:CNT<1  D
"RTN","MDHL7U3",146,0)
 . S CODE=$G(^MDD(703.1,MDIEN,.1,NODE,.2,CNT,0),"") ; Grabbing the ICD9 AND CPT codes
"RTN","MDHL7U3",147,0)
 . I CODE="" Q
"RTN","MDHL7U3",148,0)
 . I TYPE=8 S AR=1,TP="POV",X=$$ICDDX^ICDCODE(CODE) Q:X=""  ; Reference DBIA #3990 [Supported] for ICDCODE call
"RTN","MDHL7U3",149,0)
 . I TYPE=7 S AR=2,TP="CPT",X=$$CPT^ICPTCOD(CODE) Q:X=""  ; Reference DBIA #1995 [Supported] for ICPTCOD to handle CPT Codes call
"RTN","MDHL7U3",150,0)
 . S CONT=CONT+1
"RTN","MDHL7U3",151,0)
 . S ARRAY(AR)=CONT_"^"_CONT
"RTN","MDHL7U3",152,0)
 . I AR=1 D
"RTN","MDHL7U3",153,0)
 . . N DESC,IN,LN
"RTN","MDHL7U3",154,0)
 . . S IN=$P(X,"^",1) Q:IN<1
"RTN","MDHL7U3",155,0)
 . . S LN=$G(^ICD9(IN,0),0) Q:LN=""
"RTN","MDHL7U3",156,0)
 . . S DESC=$P(LN,"^",3) Q:DESC=""
"RTN","MDHL7U3",157,0)
 . . S I=CONT
"RTN","MDHL7U3",158,0)
 . . S $P(ARRAY(AR,I),"^",1)=TP
"RTN","MDHL7U3",159,0)
 . . S $P(ARRAY(AR,I),"^",2)=$P(X,"^",1)
"RTN","MDHL7U3",160,0)
 . . S $P(ARRAY(AR,I),"^",3)=$P(X,"^",2)
"RTN","MDHL7U3",161,0)
 . . S $P(ARRAY(AR,I),"^",5)=DESC
"RTN","MDHL7U3",162,0)
 . . S $P(ARRAY(AR,I),"^",6)=$S(I=1:1,1:0)
"RTN","MDHL7U3",163,0)
 . . Q
"RTN","MDHL7U3",164,0)
 . I AR=2 D
"RTN","MDHL7U3",165,0)
 . . N DESC,IN,LN
"RTN","MDHL7U3",166,0)
 . . S IN=$P(X,"^",1) Q:IN<1
"RTN","MDHL7U3",167,0)
 . . ; S LN=$G(^ICPT(IN,0),0) Q:LN=""
"RTN","MDHL7U3",168,0)
 . . S DESC=$P(X,"^",3) Q:DESC=""  ; DBIA1995 $$CPT^ICPTCOD(CODE) returns X and the second piece of X is the DESC
"RTN","MDHL7U3",169,0)
 . . S I=CNT
"RTN","MDHL7U3",170,0)
 . . S $P(ARRAY(AR,I),"^",1)=TP
"RTN","MDHL7U3",171,0)
 . . S $P(ARRAY(AR,I),"^",2)=$P(X,"^",1)
"RTN","MDHL7U3",172,0)
 . . S $P(ARRAY(AR,I),"^",3)=$P(X,"^",2)
"RTN","MDHL7U3",173,0)
 . . S $P(ARRAY(AR,I),"^",5)=DESC
"RTN","MDHL7U3",174,0)
 . . S $P(ARRAY(AR,I),"^",7)=$S(I=1:1,1:0)
"RTN","MDHL7U3",175,0)
 . . Q
"RTN","MDHL7U3",176,0)
 . Q
"RTN","MDHL7U3",177,0)
 I $D(ARRAY(1))!$D(ARRAY(2)) S ARRAY(0)="1^1"
"RTN","MDHL7U3",178,0)
 Q
"RTN","MDHL7U3",179,0)
 ;
"RTN","MDHL7U3",180,0)
NOTICE(SUBJECT,TXT,DEVIEN,DUZ) ; This will fire off a mail message to the Indicated mail group saying that a study was deleted
"RTN","MDHL7U3",181,0)
 ;
"RTN","MDHL7U3",182,0)
 N INST,MG,XMTO,XMDUZ,XMSUBJ,XMBODY,N,X
"RTN","MDHL7U3",183,0)
 S MG=0
"RTN","MDHL7U3",184,0)
 S INST=DEVIEN
"RTN","MDHL7U3",185,0)
 I INST>1 S MG=$P($G(^MDS(702.09,INST,0)),"^",2)
"RTN","MDHL7U3",186,0)
 I 'MG!('$$MG^MDHL7U2(MG)) S MG=$$FIND1^DIC(3.8,"","BX","MD DEVICE ERRORS") Q:'MG
"RTN","MDHL7U3",187,0)
 S MG=$$GET1^DIQ(3.8,+MG_",",.01)
"RTN","MDHL7U3",188,0)
 S XMTO="G."_MG_"@"_^XMB("NETNAME"),XMINSTR("FROM")=.5
"RTN","MDHL7U3",189,0)
 S XMBODY="TXT"
"RTN","MDHL7U3",190,0)
 S XMSUBJ=SUBJECT
"RTN","MDHL7U3",191,0)
 D SENDMSG^XMXAPI(DUZ,XMSUBJ,XMBODY,XMTO,.XMINSTR)
"RTN","MDHL7U3",192,0)
 Q
"RTN","MDHL7U3",193,0)
 ;
"RTN","MDHL7U3",194,0)
ALERT(MDSIEN) ; This is to send an e-mail to the main device mail group that a study has been deleted
"RTN","MDHL7U3",195,0)
 D NOW^%DTC
"RTN","MDHL7U3",196,0)
 S SUBJECT="Study "_MDSIEN_" for Patient "_$$GET1^DIQ(702,MDSIEN,.01,"E")_" has been DELETED!"
"RTN","MDHL7U3",197,0)
 S BODY(1)="The following study has been deleted."
"RTN","MDHL7U3",198,0)
 S BODY(2)="         By the USER:       "_$$GET1^DIQ(200,DUZ,.01,"E")
"RTN","MDHL7U3",199,0)
 S BODY(3)="             On Date:       "_$$FMTE^XLFDT(%,1)
"RTN","MDHL7U3",200,0)
 S BODY(4)="           "
"RTN","MDHL7U3",201,0)
 S BODY(5)="                   CP Study Information"
"RTN","MDHL7U3",202,0)
 S BODY(6)="------------------------------------------------------------------------------ "
"RTN","MDHL7U3",203,0)
 S BODY(7)="CP Study ID:       "_MDSIEN
"RTN","MDHL7U3",204,0)
 S BODY(8)="CP Study Def:      "_$$GET1^DIQ(702,MDSIEN,.04,"E")
"RTN","MDHL7U3",205,0)
 S BODY(9)="Created on:        "_$$FMTE^XLFDT($$GET1^DIQ(702,MDSIEN,.02,"I"),1)
"RTN","MDHL7U3",206,0)
 S BODY(10)="Created by:        "_$$GET1^DIQ(702,MDSIEN,.03,"E")
"RTN","MDHL7U3",207,0)
 S BODY(11)="On Instrument:     "_$$GET1^DIQ(702,MDSIEN,.11,"E")
"RTN","MDHL7U3",208,0)
 S BODY(12)="For Patient:       "_$$GET1^DIQ(702,MDSIEN,.01,"E")
"RTN","MDHL7U3",209,0)
 S BODY(13)="        SSN:       "_$E($$GET1^DIQ(702,MDSIEN,.011,"E"),6,9)
"RTN","MDHL7U3",210,0)
 S BODY(14)="        DOB:       "_$$FMTE^XLFDT($$GET1^DIQ(702,MDSIEN,.012,"I"),1)
"RTN","MDHL7U3",211,0)
 S DEVIEN=$$GET1^DIQ(702,MDSIEN,.11,"I")
"RTN","MDHL7U3",212,0)
 Q
"RTN","MDHL7X")
0^19^B3369221
"RTN","MDHL7X",1,0)
MDHL7X ; HOIFO/WAA -Generate HL7 Error Message ; 06/08/00
"RTN","MDHL7X",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDHL7X",3,0)
 ; Reference IA #1131 for ^XMB("NETNAME") access.
"RTN","MDHL7X",4,0)
 ; Reference IA #2165 for HLMA1 calls.
"RTN","MDHL7X",5,0)
 ; Reference IA #2729 for XMXAPI calls.
"RTN","MDHL7X",6,0)
 D GENERR,GENACK Q
"RTN","MDHL7X",7,0)
GENERR ; Generate error message
"RTN","MDHL7X",8,0)
 N TXT,INST,MG,XMTO,XMDUZ,XMSUBJ,XMBODY,N,X S MG=0
"RTN","MDHL7X",9,0)
 S INST=DEVIEN
"RTN","MDHL7X",10,0)
 I INST>1 S MG=$P($G(^MDS(702.09,INST,0)),"^",2)
"RTN","MDHL7X",11,0)
 I 'MG!('$$MG^MDHL7U2(MG)) S MG=$$FIND1^DIC(3.8,"","BX","MD DEVICE ERRORS") Q:'MG
"RTN","MDHL7X",12,0)
 S MG=$$GET1^DIQ(3.8,+MG_",",.01)
"RTN","MDHL7X",13,0)
 S XMTO="G."_MG_"@"_^XMB("NETNAME"),XMINSTR("FROM")=.5
"RTN","MDHL7X",14,0)
 I '$D(X) S X=$G(ECODE(0))
"RTN","MDHL7X",15,0)
 S TXT(1)=ERRTX,TXT(2)=X,TXT(3)=" "
"RTN","MDHL7X",16,0)
 S N=3
"RTN","MDHL7X",17,0)
 I '$G(ECODE,1) D  ; This is to process Device errors
"RTN","MDHL7X",18,0)
 . N X
"RTN","MDHL7X",19,0)
 . S X=0
"RTN","MDHL7X",20,0)
 . F  S X=$O(ECODE(X)) Q:X<1  S N=N+1,TXT(N)=ECODE(X)
"RTN","MDHL7X",21,0)
 . S N=N+1,TXT(N)=" "
"RTN","MDHL7X",22,0)
 . Q
"RTN","MDHL7X",23,0)
 F X="MSH","PID","OBR","OBX" I $D(SEG(X)) S N=N+1,TXT(N)=SEG(X)
"RTN","MDHL7X",24,0)
 S XMSUBJ="A Clinical Instrument HL7 Error has occurred."
"RTN","MDHL7X",25,0)
 S XMBODY="TXT"
"RTN","MDHL7X",26,0)
 D SENDMSG^XMXAPI(DUZ,XMSUBJ,XMBODY,XMTO,.XMINSTR)
"RTN","MDHL7X",27,0)
 Q
"RTN","MDHL7X",28,0)
GENACK ; Generate an HL7 ACK message
"RTN","MDHL7X",29,0)
 ; Reference IA #2165 for GENACK^HLMA1 call
"RTN","MDHL7X",30,0)
 N HLA,HLEID,HLEIDS,HLARYTYP,HLFORMAT,HLRESLTA
"RTN","MDHL7X",31,0)
 S HLA("HLA",1)="MSA"_HL("FS")_$S($D(ERRTX):"AR",1:"AA")_HL("FS")_HL("MID")_$S($D(ERRTX):HL("FS")_ERRTX,1:"")
"RTN","MDHL7X",32,0)
 S HLEID=HL("EID"),HLEIDS=HL("EIDS"),HLARYTYP="LM",HLFORMAT=1,HLRESLTA=HL("MID")
"RTN","MDHL7X",33,0)
 D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.HLRESTLA)
"RTN","MDHL7X",34,0)
 N ERRTX Q
"RTN","MDKRPC1")
0^7^B71764954
"RTN","MDKRPC1",1,0)
MDKRPC1 ;HIOFO/FT-RPC to return patient data ;2/19/08  13:13
"RTN","MDKRPC1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDKRPC1",3,0)
 ;
"RTN","MDKRPC1",4,0)
 ; This routine uses the following IAs:
"RTN","MDKRPC1",5,0)
 ; #1239  - ^PXRHS03               (controlled)
"RTN","MDKRPC1",6,0)
 ; #1240  - ^PXRHS04               (private)
"RTN","MDKRPC1",7,0)
 ; #1625  - ^XUA4A72               (supported)
"RTN","MDKRPC1",8,0)
 ; #2263  - ^XPAR                  (supported)
"RTN","MDKRPC1",9,0)
 ; #2864  - ^TIUPP3 calls          (controlled)
"RTN","MDKRPC1",10,0)
 ; #3065  - ^XLFNAME               (supported)
"RTN","MDKRPC1",11,0)
 ; #3556  - ^LA7QRY                (controlled)
"RTN","MDKRPC1",12,0)
 ; #10035 - ^DPT global refs       (supported)
"RTN","MDKRPC1",13,0)
 ; #10060 - ^FILE 200 refs         (supported)
"RTN","MDKRPC1",14,0)
 ; #10099 - ^GMRADPT calls         (supported)
"RTN","MDKRPC1",15,0)
 ; #10103 - ^XLFDT calls           (supported)
"RTN","MDKRPC1",16,0)
 ; #4868  - VA(200,"AUSER"         (Private)
"RTN","MDKRPC1",17,0)
 ;
"RTN","MDKRPC1",18,0)
RPC(RESULT,OPTION,DATA) ; RPC to return existing VistA patient data for
"RTN","MDKRPC1",19,0)
 ; renal dialysis data entry.
"RTN","MDKRPC1",20,0)
 ; RPC: [MDK GET VISTA DATA]
"RTN","MDKRPC1",21,0)
 ;
"RTN","MDKRPC1",22,0)
 ; Input parameters
"RTN","MDKRPC1",23,0)
 ;  1. RESULT [Reference/Required] RPC Return array
"RTN","MDKRPC1",24,0)
 ;  2. OPTION [Literal/Required] RPC Option to execute
"RTN","MDKRPC1",25,0)
 ;  3. DATA [Literal/Required] Other data as required for call
"RTN","MDKRPC1",26,0)
 ;
"RTN","MDKRPC1",27,0)
 K RESULT
"RTN","MDKRPC1",28,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDKRPC1",29,0)
 S:'$D(RESULT) RESULT(0)="-1^No results returned"
"RTN","MDKRPC1",30,0)
 Q
"RTN","MDKRPC1",31,0)
DEMO ; demographic
"RTN","MDKRPC1",32,0)
 N DFN,MDKNODE0,MDKSSN
"RTN","MDKRPC1",33,0)
 S DFN=$G(DATA)
"RTN","MDKRPC1",34,0)
 I '$G(DFN) D  Q
"RTN","MDKRPC1",35,0)
 .S RESULT(0)="-1^DFN is not defined"
"RTN","MDKRPC1",36,0)
 .Q
"RTN","MDKRPC1",37,0)
 I '$D(^DPT(DFN,0)) D  Q
"RTN","MDKRPC1",38,0)
 .S RESULT(0)="-1^Patient not found"
"RTN","MDKRPC1",39,0)
 .Q
"RTN","MDKRPC1",40,0)
 S MDKNODE0=$G(^DPT(DFN,0))
"RTN","MDKRPC1",41,0)
 S RESULT(1)=$P(MDKNODE0,U,1) ;name
"RTN","MDKRPC1",42,0)
 S RESULT(2)=$P(MDKNODE0,U,9) ;ssn
"RTN","MDKRPC1",43,0)
 S RESULT(3)=$P(MDKNODE0,U,3) ;date of birth
"RTN","MDKRPC1",44,0)
 S RESULT(0)=3
"RTN","MDKRPC1",45,0)
 Q
"RTN","MDKRPC1",46,0)
ALLERGY ; get allergy data
"RTN","MDKRPC1",47,0)
 ; DATA = DFN
"RTN","MDKRPC1",48,0)
 S DFN=$G(DATA)
"RTN","MDKRPC1",49,0)
 N GMRAL
"RTN","MDKRPC1",50,0)
 N MDKCNT,MDLOOP
"RTN","MDKRPC1",51,0)
 S (MDKCNT,MDKLOOP)=0
"RTN","MDKRPC1",52,0)
 D EN1^GMRADPT
"RTN","MDKRPC1",53,0)
 I $O(GMRAL(0))'>0 D  Q
"RTN","MDKRPC1",54,0)
 .S:$G(GMRAL)="" RESULT(1)="No Allergy Assessment"
"RTN","MDKRPC1",55,0)
 .S:$G(GMRAL)=0 RESULT(1)="No Known Allergies"
"RTN","MDKRPC1",56,0)
 .S RESULT(0)=1
"RTN","MDKRPC1",57,0)
 .Q
"RTN","MDKRPC1",58,0)
 I $O(GMRAL(0))>0 D
"RTN","MDKRPC1",59,0)
 .F  S MDKLOOP=$O(GMRAL(MDKLOOP)) Q:MDKLOOP'>0  D
"RTN","MDKRPC1",60,0)
 ..S MDKCNT=MDKCNT+1
"RTN","MDKRPC1",61,0)
 ..S RESULT(MDKCNT)=$P($G(GMRAL(MDKLOOP)),U,2)
"RTN","MDKRPC1",62,0)
 ..Q
"RTN","MDKRPC1",63,0)
 .S RESULT(0)=MDKCNT
"RTN","MDKRPC1",64,0)
 .Q
"RTN","MDKRPC1",65,0)
 Q
"RTN","MDKRPC1",66,0)
SHOTS ; get latest vaccination data
"RTN","MDKRPC1",67,0)
 N MDKCNT,MDKDATE,MDKIEN,MDKIMMUM,MDKNAME,MDKNODE
"RTN","MDKRPC1",68,0)
 S DFN=$G(DATA)
"RTN","MDKRPC1",69,0)
 S (MDKCNT,RESULT(0))=0
"RTN","MDKRPC1",70,0)
 S MDKIMMUM("HEP A")="HEPATITIS A"
"RTN","MDKRPC1",71,0)
 S MDKIMMUM("HEP B")="HEPATITIS B"
"RTN","MDKRPC1",72,0)
 S MDKIMMUM("INFLUENZA")="FLU"
"RTN","MDKRPC1",73,0)
 S MDKIMMUM("PNEUMO-VAC")="PNEUMOCOCCAL"
"RTN","MDKRPC1",74,0)
 ;S MDKIMMUM("PNEUMOCOCCAL")="PNEUMONIA"
"RTN","MDKRPC1",75,0)
 S MDKIMMUM("PPD")="PPD"
"RTN","MDKRPC1",76,0)
 D IMMUN^PXRHS03(DFN)
"RTN","MDKRPC1",77,0)
 F MDKNAME="HEP A","HEP B","INFLUENZA","PNEUMO-VAC" D
"RTN","MDKRPC1",78,0)
 .Q:'$D(^TMP("PXI",$J,MDKNAME))
"RTN","MDKRPC1",79,0)
 .S MDKDATE=0
"RTN","MDKRPC1",80,0)
 .F  S MDKDATE=$O(^TMP("PXI",$J,MDKNAME,MDKDATE)) Q:'MDKDATE  D
"RTN","MDKRPC1",81,0)
 ..S MDKIEN=0
"RTN","MDKRPC1",82,0)
 ..F  S MDKIEN=$O(^TMP("PXI",$J,MDKNAME,MDKDATE,MDKIEN)) Q:'MDKIEN  D
"RTN","MDKRPC1",83,0)
 ...S MDKNODE=$G(^TMP("PXI",$J,MDKNAME,MDKDATE,MDKIEN,0))
"RTN","MDKRPC1",84,0)
 ...Q:MDKNODE=""
"RTN","MDKRPC1",85,0)
 ...S MDKCNT=MDKCNT+1
"RTN","MDKRPC1",86,0)
 ...;RESULT(N)=shot name^date^reaction^contraindicated
"RTN","MDKRPC1",87,0)
 ...S RESULT(MDKCNT)=MDKIMMUM(MDKNAME)_U_$P(MDKNODE,U,3)_U_$P(MDKNODE,U,6)_U_$P(MDKNODE,U,7)
"RTN","MDKRPC1",88,0)
 ...Q
"RTN","MDKRPC1",89,0)
 ..Q
"RTN","MDKRPC1",90,0)
 .Q
"RTN","MDKRPC1",91,0)
 S RESULT(0)=MDKCNT
"RTN","MDKRPC1",92,0)
 K ^TMP("PXI",$J)
"RTN","MDKRPC1",93,0)
 ; get PPD (skin) result
"RTN","MDKRPC1",94,0)
 D SKIN^PXRHS04(DFN)
"RTN","MDKRPC1",95,0)
 I $D(^TMP("PXS",$J)) D
"RTN","MDKRPC1",96,0)
 .S MDKDATE=0
"RTN","MDKRPC1",97,0)
 .F  S MDKDATE=$O(^TMP("PXS",$J,"PPD",MDKDATE)) Q:'MDKDATE  D
"RTN","MDKRPC1",98,0)
 ..S MDKIEN=0
"RTN","MDKRPC1",99,0)
 ..F  S MDKIEN=$O(^TMP("PXS",$J,"PPD",MDKDATE,MDKIEN)) Q:'MDKIEN  D
"RTN","MDKRPC1",100,0)
 ...S MDKNODE=$G(^TMP("PXS",$J,"PPD",MDKDATE,MDKIEN,0))
"RTN","MDKRPC1",101,0)
 ...Q:MDKNODE=""
"RTN","MDKRPC1",102,0)
 ...S MDKCNT=MDKCNT+1
"RTN","MDKRPC1",103,0)
 ...;RESULT(N)=skin test^date
"RTN","MDKRPC1",104,0)
 ...S RESULT(MDKCNT)=$P(MDKNODE,U,1)_U_$P(MDKNODE,U,2)
"RTN","MDKRPC1",105,0)
 ...S RESULT(0)=MDKCNT
"RTN","MDKRPC1",106,0)
 ...Q
"RTN","MDKRPC1",107,0)
 ..Q
"RTN","MDKRPC1",108,0)
 .Q
"RTN","MDKRPC1",109,0)
 K ^TMP("PXS",$J)
"RTN","MDKRPC1",110,0)
 Q
"RTN","MDKRPC1",111,0)
LAB ; get lab results
"RTN","MDKRPC1",112,0)
 ; data = dfn^start date^end date^max # of entires to return
"RTN","MDKRPC1",113,0)
 N LA7PTID,LA7SDT,LA7EDT,LA7SC,LA7SPEC
"RTN","MDKRPC1",114,0)
 N MDK64PTR,MDKARRAY,MDKCNT,MDKCODE,MDKDATE,MDKEDT,MDKFLAG,MDKLOOP,MDKMAX,MDKNLT,MDKNODE,MDKODT,MDKRSULT
"RTN","MDKRPC1",115,0)
 N MDKSC,MDKSDT,MDKSSN,MDKTEST,MDKTOT,MDKUNIT
"RTN","MDKRPC1",116,0)
 S DATA=$G(DATA)
"RTN","MDKRPC1",117,0)
 S DFN=$P(DATA,U,1)
"RTN","MDKRPC1",118,0)
 Q:'DFN
"RTN","MDKRPC1",119,0)
 S MDKSDT=$P(DATA,U,2) ;start date
"RTN","MDKRPC1",120,0)
 S MDKEDT=$P(DATA,U,3) ;end date
"RTN","MDKRPC1",121,0)
 S MDKMAX=+$P(DATA,U,4) ;# of entries per test
"RTN","MDKRPC1",122,0)
 S MDKSSN=$P($G(^DPT(DFN,0)),U,9) ;patient ssn
"RTN","MDKRPC1",123,0)
 I MDKEDT="" S MDKEDT=$$NOW^XLFDT()
"RTN","MDKRPC1",124,0)
 ;I MDKSDT="" S MDKSDT=$$FMADD^XLFDT(DT,-90) ;go back 90 days
"RTN","MDKRPC1",125,0)
 I MDKSDT="" S MDKSDT=$$FMADD^XLFDT(DT,-365) ;<-- TESTING ONLY
"RTN","MDKRPC1",126,0)
 I 'MDKMAX S MDKMAX=3
"RTN","MDKRPC1",127,0)
 ; array(nlt code)=test name
"RTN","MDKRPC1",128,0)
 S MDKSC("84520.")="BUN"
"RTN","MDKRPC1",129,0)
 S MDKSC("82565.")="CREATININE"
"RTN","MDKRPC1",130,0)
 S MDKSC("84295.")="SODIUM"
"RTN","MDKRPC1",131,0)
 S MDKSC("84140.")="POTASSIUM"
"RTN","MDKRPC1",132,0)
 S MDKSC("82435.")="CHLORIDE"
"RTN","MDKRPC1",133,0)
 S MDKSC("82830.")="CARBON DIOXIDE"
"RTN","MDKRPC1",134,0)
 S MDKSC("82310.")="CALCIUM"
"RTN","MDKRPC1",135,0)
 S MDKSC("84100.")="PHOSPHORUS"
"RTN","MDKRPC1",136,0)
 S MDKSC("82040.")="ALBUMIN"
"RTN","MDKRPC1",137,0)
 S MDKSC("84455.")="AST"
"RTN","MDKRPC1",138,0)
 S MDKSC("84465.")="ALT"
"RTN","MDKRPC1",139,0)
 S MDKSC("84075.")="ALKALINE PHOSPHATASE"
"RTN","MDKRPC1",140,0)
 S MDKSC("82250.")="BILIRUBIN"
"RTN","MDKRPC1",141,0)
 S MDKSC("83020.")="HEMOGLOBIN"
"RTN","MDKRPC1",142,0)
 S MDKSC("85055.")="HEMATOCRIT"
"RTN","MDKRPC1",143,0)
 S MDKSC("85569.")="WBC"
"RTN","MDKRPC1",144,0)
 S MDKSC("86806.")="PLATELETS"
"RTN","MDKRPC1",145,0)
 S MDKSC("83057.")="HEMOGLOBIN A1C"
"RTN","MDKRPC1",146,0)
 S MDKSC("82466.")="CHOLESTEROL"
"RTN","MDKRPC1",147,0)
 S MDKSC("84480.")="TRIGLYCERIDES"
"RTN","MDKRPC1",148,0)
 S MDKSC("82370.")="FERRITIN"
"RTN","MDKRPC1",149,0)
 S MDKSC("83540.")="IRON"
"RTN","MDKRPC1",150,0)
 S MDKSC("82060.")="TRANSFERRIN"
"RTN","MDKRPC1",151,0)
 S MDKSC("84012.")="PARATHRYROID HORMONE"
"RTN","MDKRPC1",152,0)
 S MDKSC("81512.")="ALUMINUM"
"RTN","MDKRPC1",153,0)
 S MDKSC("89068.")="HEPATITIS B SURFACE ANTIGEN"
"RTN","MDKRPC1",154,0)
 S MDKSC("89065.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",155,0)
 S MDKSC("89067.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",156,0)
 S MDKSC("82013.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",157,0)
 S MDKSC("89095.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",158,0)
 S MDKSC("89127.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",159,0)
 S MDKSC("89128.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",160,0)
 S MDKSC("87398.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",161,0)
 S MDKSC("89699.")="HEPATITIS B SURFACE ANTIBODY"
"RTN","MDKRPC1",162,0)
 S MDKSC("89070.")="HEPATITIS C ANTIBODY"
"RTN","MDKRPC1",163,0)
 S MDKSC("87261.")="FLU"
"RTN","MDKRPC1",164,0)
 K ^TMP("HLS",$J)
"RTN","MDKRPC1",165,0)
 S LA7SDT=MDKSDT_"^RAD" ;start date
"RTN","MDKRPC1",166,0)
 S LA7EDT=MDKEDT_"^RAD" ;end date
"RTN","MDKRPC1",167,0)
 S LA7SC="CH" ;all chemistry tests
"RTN","MDKRPC1",168,0)
 S LA7SPEC="*" ;all specimens
"RTN","MDKRPC1",169,0)
 S LA7PTID=MDKSSN ;patient's ssn
"RTN","MDKRPC1",170,0)
 S MDKARRAY=$$GCPR^LA7QRY(LA7PTID,LA7SDT,LA7EDT,.LA7SC,LA7SPEC,"","","")
"RTN","MDKRPC1",171,0)
 S (MDKCNT,MDKTOT)=0
"RTN","MDKRPC1",172,0)
 F  S MDKCNT=$O(^TMP("HLS",$J,MDKCNT)) Q:'MDKCNT  D
"RTN","MDKRPC1",173,0)
 .S MDKNODE=$G(^TMP("HLS",$J,MDKCNT))
"RTN","MDKRPC1",174,0)
 .Q:$E(MDKNODE,1,3)'="OBX"
"RTN","MDKRPC1",175,0)
 .S MDKFLAG=0
"RTN","MDKRPC1",176,0)
 .S MDKTEST=$P(MDKNODE,"|",4) ;test ids
"RTN","MDKRPC1",177,0)
 .S MDKCODE=""
"RTN","MDKRPC1",178,0)
 .F  S MDKCODE=$O(MDKSC(MDKCODE)) Q:MDKCODE=""!(MDKFLAG=1)  D
"RTN","MDKRPC1",179,0)
 ..I MDKTEST[MDKCODE S MDKFLAG=1,MDKNLT=MDKCODE
"RTN","MDKRPC1",180,0)
 ..Q
"RTN","MDKRPC1",181,0)
 .Q:'MDKFLAG  ;nlt code doesn't match
"RTN","MDKRPC1",182,0)
 .S MDKDATE=$P(MDKNODE,"|",15) ;date
"RTN","MDKRPC1",183,0)
 .S MDKDATE=$P(MDKDATE,"-",1) ;strip off time zone offset
"RTN","MDKRPC1",184,0)
 .S MDKRSULT=$P(MDKNODE,"|",6) ;result
"RTN","MDKRPC1",185,0)
 .S MDKUNIT=$P(MDKNODE,"|",7) ;unit
"RTN","MDKRPC1",186,0)
 .S MDKTOT=MDKTOT+1
"RTN","MDKRPC1",187,0)
 .S RESULT(MDKTOT)=$G(MDKSC(MDKNLT))_U_MDKDATE_U_MDKRSULT_U_MDKUNIT
"RTN","MDKRPC1",188,0)
 .S RESULT(0)=$G(RESULT(0))+1
"RTN","MDKRPC1",189,0)
 .Q
"RTN","MDKRPC1",190,0)
 K ^TMP("HLS",$J)
"RTN","MDKRPC1",191,0)
 Q
"RTN","MDKRPC1",192,0)
AD ; get advance directives
"RTN","MDKRPC1",193,0)
 ; DATA = DFN
"RTN","MDKRPC1",194,0)
 S DFN=$G(DATA)
"RTN","MDKRPC1",195,0)
 N MDKLOOP
"RTN","MDKRPC1",196,0)
 K ^TMP("TIUPPCV",$J)
"RTN","MDKRPC1",197,0)
 D ENCOVER^TIUPP3(DFN)
"RTN","MDKRPC1",198,0)
 I '$D(^TMP("TIUPPCV",$J)) Q
"RTN","MDKRPC1",199,0)
 S RESULT(1)="No",RESULT(0)=1
"RTN","MDKRPC1",200,0)
 S MDKLOOP=0
"RTN","MDKRPC1",201,0)
 F  S MDKLOOP=$O(^TMP("TIUPPCV",$J,MDKLOOP)) Q:'MDKLOOP  D
"RTN","MDKRPC1",202,0)
 .I $P(^TMP("TIUPPCV",$J,MDKLOOP),U,2)'="D" Q
"RTN","MDKRPC1",203,0)
 .S RESULT(1)="Yes"
"RTN","MDKRPC1",204,0)
 .S RESULT(0)=1
"RTN","MDKRPC1",205,0)
 .Q
"RTN","MDKRPC1",206,0)
 K ^TMP("TIUPPCV",$J)
"RTN","MDKRPC1",207,0)
 Q
"RTN","MDKRPC1",208,0)
 ;
"RTN","MDKRPC1",209,0)
CW ; get clinical warnings
"RTN","MDKRPC1",210,0)
 ; DATA = DFN
"RTN","MDKRPC1",211,0)
 S DFN=$G(DATA)
"RTN","MDKRPC1",212,0)
 N MDKCNT,MDKLOOP
"RTN","MDKRPC1",213,0)
 K ^TMP("TIUPPCV",$J)
"RTN","MDKRPC1",214,0)
 D ENCOVER^TIUPP3(DFN)
"RTN","MDKRPC1",215,0)
 S RESULT(1)="None",RESULT(0)=1
"RTN","MDKRPC1",216,0)
 I '$D(^TMP("TIUPPCV",$J)) Q
"RTN","MDKRPC1",217,0)
 S (MDKCNT,MDKLOOP)=0
"RTN","MDKRPC1",218,0)
 F  S MDKLOOP=$O(^TMP("TIUPPCV",$J,MDKLOOP)) Q:'MDKLOOP  D
"RTN","MDKRPC1",219,0)
 .I $P(^TMP("TIUPPCV",$J,MDKLOOP),U,2)'="W" Q
"RTN","MDKRPC1",220,0)
 .S MDKCNT=MDKCNT+1
"RTN","MDKRPC1",221,0)
 .S RESULT(MDKCNT)=^TMP("TIUPPCV",$J,MDKLOOP)
"RTN","MDKRPC1",222,0)
 .Q
"RTN","MDKRPC1",223,0)
 S RESULT(0)=MDKCNT
"RTN","MDKRPC1",224,0)
 K ^TMP("TIUPPCV",$J)
"RTN","MDKRPC1",225,0)
 Q
"RTN","MDKRPC1",226,0)
 ;
"RTN","MDKRPC1",227,0)
GETPROV ; Get list of available providers with name starting with P1
"RTN","MDKRPC1",228,0)
 N MDDATE,MDDUP,MDRI,MDI1,MDI2,MDLAST,MDMAX,MDPREV,MDTTL
"RTN","MDKRPC1",229,0)
 S MDRI=0,MDMAX=44,(MDLAST,MDPREV)="",X1=DT,MDFROM=DATA,MDDATE=DT
"RTN","MDKRPC1",230,0)
 F  Q:MDRI'<MDMAX  S MDFROM=$O(^VA(200,"AUSER",MDFROM),1) Q:MDFROM=""  D
"RTN","MDKRPC1",231,0)
 .S MDI1=""
"RTN","MDKRPC1",232,0)
 .F  S MDI1=$O(^VA(200,"AUSER",MDFROM,MDI1),1) Q:'MDI1  D
"RTN","MDKRPC1",233,0)
 ..I MDDATE>0,$$GET^XUA4A72(MDI1,MDDATE)<1 Q    ; Check date?
"RTN","MDKRPC1",234,0)
 ..S MDRI=MDRI+1,RESULT(MDRI)=MDI1_U_$$NAMEFMT^XLFNAME(MDFROM,"F","DcMPC")
"RTN","MDKRPC1",235,0)
 I MDRI<1 S RESULT(0)="-1^No matches found." Q
"RTN","MDKRPC1",236,0)
 S RESULT(0)=MDRI
"RTN","MDKRPC1",237,0)
 Q
"RTN","MDKRPC1",238,0)
 ;
"RTN","MDKRPC1",239,0)
TIME ; Get time
"RTN","MDKRPC1",240,0)
 S RESULT(0)=$$NOW^XLFDT()
"RTN","MDKRPC1",241,0)
 Q
"RTN","MDKRPC1",242,0)
GETLD ; Get MDK Application Install Info
"RTN","MDKRPC1",243,0)
 N MDS
"RTN","MDKRPC1",244,0)
 S MDS=$$GET^XPAR("SYS","MDK APPLICATION INSTALL","DATE_TIME_OF_LAUNCH")
"RTN","MDKRPC1",245,0)
 S MDS=MDS_"^"_$$GET^XPAR("SYS","MDK APPLICATION INSTALL","USER")
"RTN","MDKRPC1",246,0)
 S MDS=MDS_"^"_$$GET^XPAR("SYS","MDK APPLICATION INSTALL","OPTION_LOADED")
"RTN","MDKRPC1",247,0)
 S MDS=MDS_"^"_$$GET^XPAR("SYS","MDK APPLICATION INSTALL","WORKSTATION")
"RTN","MDKRPC1",248,0)
 S RESULT(0)=MDS
"RTN","MDKRPC1",249,0)
 Q
"RTN","MDKRPC1",250,0)
SETLD ; Set MDK Application Install Info
"RTN","MDKRPC1",251,0)
 D EN^XPAR("SYS","MDK APPLICATION INSTALL","DATE_TIME_OF_LAUNCH",$P(DATA,"^"))
"RTN","MDKRPC1",252,0)
 D EN^XPAR("SYS","MDK APPLICATION INSTALL","USER",$P(DATA,"^",2))
"RTN","MDKRPC1",253,0)
 D EN^XPAR("SYS","MDK APPLICATION INSTALL","OPTION_LOADED",$P(DATA,"^",3))
"RTN","MDKRPC1",254,0)
 D EN^XPAR("SYS","MDK APPLICATION INSTALL","WORKSTATION",$P(DATA,"^",4))
"RTN","MDKRPC1",255,0)
 Q
"RTN","MDKRPC2")
0^31^B73066686
"RTN","MDKRPC2",1,0)
MDKRPC2 ; HOIFO/DP - RPC Calls (Cont.) ;11/27/07  09:42
"RTN","MDKRPC2",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDKRPC2",3,0)
 ;
"RTN","MDKRPC2",4,0)
 ; Reference IA #1625 [Supported] Use routine XUA4A72
"RTN","MDKRPC2",5,0)
 ;              #10060 [Supported] FILE 200 references
"RTN","MDKRPC2",6,0)
 ;              #10112 [Supported] VASITE calls
"RTN","MDKRPC2",7,0)
 ;              #10090 [Supported] Institution File (#4) Read w/FM
"RTN","MDKRPC2",8,0)
 ;              #2263 [Supported] XPAR calls
"RTN","MDKRPC2",9,0)
 ;              #4440 [Supported] XUPROD calls
"RTN","MDKRPC2",10,0)
 ;              #3065 [Supported] XLFNAME calls
"RTN","MDKRPC2",11,0)
 ;              #4815 [Controlled] GMVDCSAV call
"RTN","MDKRPC2",12,0)
 ;              #4866 [Private] File 120.51
"RTN","MDKRPC2",13,0)
 ;              #4867 [Private] File 120.5
"RTN","MDKRPC2",14,0)
 ;              #4868 [Private] - VA(200,"AUSER"
"RTN","MDKRPC2",15,0)
RPC(RESULTS,OPTION,P1,P2,P3,P4,P5,P6,P7,P8,P9) ; Generic RPC tag
"RTN","MDKRPC2",16,0)
 S RESULTS=$NA(^TMP($J,"MDKRPC2")) K @RESULTS
"RTN","MDKRPC2",17,0)
 D @OPTION
"RTN","MDKRPC2",18,0)
 S:'$D(@RESULTS) @RESULTS@(0)="-1^No Results"
"RTN","MDKRPC2",19,0)
 Q
"RTN","MDKRPC2",20,0)
 ;
"RTN","MDKRPC2",21,0)
ACTIVE ; Return all active dialysis treatments
"RTN","MDKRPC2",22,0)
 N MDAS,MDFLD,MDLP,MDLIST,MDMORE K ^TMP("MDAS",$J)
"RTN","MDKRPC2",23,0)
 F MDLP=1,2 S MDLIST=0 F  S MDLIST=$O(^MDK(704.202,"AS",MDLP,MDLIST)) Q:MDLIST<1  S ^TMP("MDAS",$J,MDLIST)=""
"RTN","MDKRPC2",24,0)
 S MDMORE=".03;;STUDY_CHECKIN^.05;;USER_ID^.06;;DATETIME_ACCESSED^.07;;WORKSTATION_ID"
"RTN","MDKRPC2",25,0)
 D BLDFLD^MDXMLFM(.MDFLD,704.202,".01;I;STUDY_ID^.02;I;PATIENT_ID^.02:.01;;PATIENT_NAME^.02:.09;;PATIENT_SSN^.09;E;STATUS^.02:.02;I;PATIENT_SEX^.02:.03;I;PATIENT_DOB;DATE^.02:.033;;PATIENT_AGE^.04;;STUDY_LOCATION^"_MDMORE)
"RTN","MDKRPC2",26,0)
 D LOADALL^MDXMLFM($NA(^TMP("MDAS",$J)),704.202,.MDFLD)
"RTN","MDKRPC2",27,0)
 K ^TMP("MDAS",$J)
"RTN","MDKRPC2",28,0)
 Q
"RTN","MDKRPC2",29,0)
 ;
"RTN","MDKRPC2",30,0)
ALLBYPT ; Return all treatments for a patient
"RTN","MDKRPC2",31,0)
 N MDFLD
"RTN","MDKRPC2",32,0)
 D BLDFLD^MDXMLFM(.MDFLD,704.202,".01;I;STUDY_ID^.02;I;PATIENT_ID^.03;I;STUDY_DATETIME^.09;I;STATUS")
"RTN","MDKRPC2",33,0)
 D LOADALL^MDXMLFM($NA(^MDK(704.202,"C",+P1)),704.202,.MDFLD)
"RTN","MDKRPC2",34,0)
 Q
"RTN","MDKRPC2",35,0)
 ;
"RTN","MDKRPC2",36,0)
ALLRSLT ; Get all available results for a study
"RTN","MDKRPC2",37,0)
 ;
"RTN","MDKRPC2",38,0)
 ; If P2=1 then whole list is forced, otherwise, only Unmatched
"RTN","MDKRPC2",39,0)
 ;
"RTN","MDKRPC2",40,0)
 N MDFLD,MDFDA,MDLIST
"RTN","MDKRPC2",41,0)
 D BLDFLD^MDXMLFM(.MDFLD,703.1,".001;;ID^.05;;STUDY_ID")
"RTN","MDKRPC2",42,0)
 ;D:'$G(P3) LOADALL^MDXMLFM($NA(^MDD(703.1,"ASTUDYID",+P1)),703.1,.MDFLD)
"RTN","MDKRPC2",43,0)
 ;
"RTN","MDKRPC2",44,0)
 ; Remove the P3 reference once it's working!
"RTN","MDKRPC2",45,0)
 ;
"RTN","MDKRPC2",46,0)
 ; Prepare the lists
"RTN","MDKRPC2",47,0)
 S MDLIST=$NA(^TMP("MDTEMP",$J)) K @MDLIST
"RTN","MDKRPC2",48,0)
 S MDFDA=$NA(^TMP("MDFDA",$J)) K @MDFDA
"RTN","MDKRPC2",49,0)
 ; Scan results by study id
"RTN","MDKRPC2",50,0)
 F X=0:0 S X=$O(^MDD(703.1,"ASTUDYID",+P1,X)) Q:'X  D
"RTN","MDKRPC2",51,0)
 .Q:$P(^MDD(703.1,X,0),U,9)="P"  ; Skip pendings being filed now
"RTN","MDKRPC2",52,0)
 .Q:'$G(P2)&($P(^MDD(703.1,X,0),U,9)="M")  ; Only new results requested
"RTN","MDKRPC2",53,0)
 .S ^TMP("MDTEMP",$J,X)=""  ; Add this study to the list
"RTN","MDKRPC2",54,0)
 D LOADALL^MDXMLFM(.MDLIST,703.1,.MDFLD)
"RTN","MDKRPC2",55,0)
 Q
"RTN","MDKRPC2",56,0)
 ;
"RTN","MDKRPC2",57,0)
CCOW ; Return CCOW site and production indicator
"RTN","MDKRPC2",58,0)
 S @RESULTS@(0)=$P($$SITE^VASITE(),"^",3)_"^"_$$PROD^XUPROD()
"RTN","MDKRPC2",59,0)
 Q
"RTN","MDKRPC2",60,0)
 ;
"RTN","MDKRPC2",61,0)
GETRSLT ; Get instrument XML Result
"RTN","MDKRPC2",62,0)
 I '$D(^MDD(703.1,P1,.4)) S @RESULTS@(0)="0" Q
"RTN","MDKRPC2",63,0)
 M @RESULTS=^MDD(703.1,P1,.4)
"RTN","MDKRPC2",64,0)
 S @RESULTS@(0)=+$O(^MDD(703.1,P1,.4,""),-1)
"RTN","MDKRPC2",65,0)
 ; Set to matched
"RTN","MDKRPC2",66,0)
 N MDFDA S MDFDA(703.1,P1_",",.09)="M" D FILE^DIE("","MDFDA")
"RTN","MDKRPC2",67,0)
 Q
"RTN","MDKRPC2",68,0)
 ;
"RTN","MDKRPC2",69,0)
GETXML ; Get a single XML field
"RTN","MDKRPC2",70,0)
 S X=$$GET1^DIQ(P1,P2,P3,,RESULTS)
"RTN","MDKRPC2",71,0)
 Q
"RTN","MDKRPC2",72,0)
 ;
"RTN","MDKRPC2",73,0)
SETXML ; Set a single XML field
"RTN","MDKRPC2",74,0)
 S @RESULTS@(0)=$$XMLFILER(P1,P2,P3,"P4")
"RTN","MDKRPC2",75,0)
 Q
"RTN","MDKRPC2",76,0)
 ;
"RTN","MDKRPC2",77,0)
UPDUSER ; Update User Access Information
"RTN","MDKRPC2",78,0)
 Q:$G(P1)=""
"RTN","MDKRPC2",79,0)
 Q:$G(P2)=""
"RTN","MDKRPC2",80,0)
 Q:$G(P3)=""
"RTN","MDKRPC2",81,0)
 N MDFDA S P1=P1_","
"RTN","MDKRPC2",82,0)
 S:+P2 MDFDA(704.202,P1,.05)=P2
"RTN","MDKRPC2",83,0)
 S:P3'="" MDFDA(704.202,P1,.06)=P3
"RTN","MDKRPC2",84,0)
 S:P4'="" MDFDA(704.202,P1,.07)=P4
"RTN","MDKRPC2",85,0)
 S:+P5 MDFDA(704.202,P1,.09)=P5
"RTN","MDKRPC2",86,0)
 D FILE^DIE("","MDFDA")
"RTN","MDKRPC2",87,0)
 K MDFDA
"RTN","MDKRPC2",88,0)
 S @RESULTS@(0)="1^Information Filed"
"RTN","MDKRPC2",89,0)
 ;
"RTN","MDKRPC2",90,0)
GETOPT ; Get option from the Parameters File
"RTN","MDKRPC2",91,0)
 ;
"RTN","MDKRPC2",92,0)
 ; P1=Setting Name
"RTN","MDKRPC2",93,0)
 ; P2=Owner
"RTN","MDKRPC2",94,0)
 ;
"RTN","MDKRPC2",95,0)
 N MDOPT
"RTN","MDKRPC2",96,0)
 S MDOPT=$$FIND1^DIC(704.209,,"X",P1,"B","I $P(^(0),U,2)=P2")
"RTN","MDKRPC2",97,0)
 I MDOPT<0 S @RESULTS@(0)="-1^No such setting" Q
"RTN","MDKRPC2",98,0)
 S X=$$GET1^DIQ(704.209,MDOPT_",",.1,,RESULTS)
"RTN","MDKRPC2",99,0)
 Q
"RTN","MDKRPC2",100,0)
 ;
"RTN","MDKRPC2",101,0)
LOCKOPT ; Lock/Unlock an option for update
"RTN","MDKRPC2",102,0)
 ;
"RTN","MDKRPC2",103,0)
 ; P1=Setting Name
"RTN","MDKRPC2",104,0)
 ; P2=0:Unlock;1:Lock
"RTN","MDKRPC2",105,0)
 ;
"RTN","MDKRPC2",106,0)
 N MDOPT
"RTN","MDKRPC2",107,0)
 S MDOPT=$$FIND1^DIC(704.209,,"X",P1,"B","I $P(^(0),U,2)=.5")
"RTN","MDKRPC2",108,0)
 I 'MDOPT S @RESULTS@(0)="-1^No such setting." Q
"RTN","MDKRPC2",109,0)
 I 'P2 D  Q
"RTN","MDKRPC2",110,0)
 .L -(^MDK(704.209,+MDOPT,0)) S @RESULTS@(0)="1^Option Unlocked"
"RTN","MDKRPC2",111,0)
 .N MDFDA
"RTN","MDKRPC2",112,0)
 .S MDFDA(704.209,+MDOPT_",",.03)=""
"RTN","MDKRPC2",113,0)
 .S MDFDA(704.209,+MDOPT_",",.04)=""
"RTN","MDKRPC2",114,0)
 .S MDFDA(704.209,+MDOPT_",",.05)=""
"RTN","MDKRPC2",115,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDKRPC2",116,0)
 .Q
"RTN","MDKRPC2",117,0)
 I +P2 L +(^MDK(704.209,+MDOPT,0)):0 I '$T S @RESULTS@(0)="-1^Unable to lock"_"^"_$P($G(^MDK(704.209,+MDOPT,0)),"^",3,5) Q
"RTN","MDKRPC2",118,0)
 N MDFDA D NOW^%DTC
"RTN","MDKRPC2",119,0)
 S MDFDA(704.209,+MDOPT_",",.03)=DUZ
"RTN","MDKRPC2",120,0)
 S MDFDA(704.209,+MDOPT_",",.04)=%
"RTN","MDKRPC2",121,0)
 S MDFDA(704.209,+MDOPT_",",.05)=$J
"RTN","MDKRPC2",122,0)
 D FILE^DIE("","MDFDA")
"RTN","MDKRPC2",123,0)
 S @RESULTS@(0)="1^Option locked"
"RTN","MDKRPC2",124,0)
 Q
"RTN","MDKRPC2",125,0)
 ;
"RTN","MDKRPC2",126,0)
DELOPT ; Delete option from the RENAL SETTING file(#704.209)
"RTN","MDKRPC2",127,0)
 ;
"RTN","MDKRPC2",128,0)
 ; P1=Setting Name
"RTN","MDKRPC2",129,0)
 ; P2=Owner
"RTN","MDKRPC2",130,0)
 ;
"RTN","MDKRPC2",131,0)
 N DA,DIK,MDOPT
"RTN","MDKRPC2",132,0)
 S MDOPT=$$FIND1^DIC(704.209,,"X",P1,"B","I $P(^(0),U,2)=P2")
"RTN","MDKRPC2",133,0)
 I 'MDOPT S @RESULTS@(0)="1^No such setting." Q
"RTN","MDKRPC2",134,0)
 S DA=MDOPT,DIK="^MDK(704.209," D ^DIK
"RTN","MDKRPC2",135,0)
 S @RESULTS@(0)="1^Setting deleted."
"RTN","MDKRPC2",136,0)
 Q
"RTN","MDKRPC2",137,0)
 ;
"RTN","MDKRPC2",138,0)
SETOPT ; Set option into RENAL SETTING file (#704.209)
"RTN","MDKRPC2",139,0)
 ;
"RTN","MDKRPC2",140,0)
 ; P1=Setting Name
"RTN","MDKRPC2",141,0)
 ; P2=Owner
"RTN","MDKRPC2",142,0)
 ; P3=Array of text
"RTN","MDKRPC2",143,0)
 ;
"RTN","MDKRPC2",144,0)
 N MDOPT
"RTN","MDKRPC2",145,0)
 S MDOPT=$$FIND1^DIC(704.209,,"X",P1,"B","I $P(^(0),U,2)=P2")
"RTN","MDKRPC2",146,0)
 D:'MDOPT  ; Try to create a new entry
"RTN","MDKRPC2",147,0)
 .N MDFDA,MDIEN
"RTN","MDKRPC2",148,0)
 .S MDFDA(704.209,"+1,",.01)=P1
"RTN","MDKRPC2",149,0)
 .S MDFDA(704.209,"+1,",.02)=P2
"RTN","MDKRPC2",150,0)
 .D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDKRPC2",151,0)
 .S MDOPT=+$G(MDIEN(1),-1)
"RTN","MDKRPC2",152,0)
 I 'MDOPT S @RESULTS@(0)="-1^Unable to create entry" Q
"RTN","MDKRPC2",153,0)
 S @RESULTS@(0)=$$XMLFILER(704.209,MDOPT_",",.1,"P3")
"RTN","MDKRPC2",154,0)
 Q
"RTN","MDKRPC2",155,0)
 ;
"RTN","MDKRPC2",156,0)
ALLOPT ; Get all options by user
"RTN","MDKRPC2",157,0)
 N MDFLD
"RTN","MDKRPC2",158,0)
 D BLDFLD^MDXMLFM(.MDFLD,704.209,".001;;NUMBER^.01;;SETTING NAME")
"RTN","MDKRPC2",159,0)
 K ^TMP("DILIST",$J)
"RTN","MDKRPC2",160,0)
 D LIST^DIC(704.209,,"@;.01","P","*",,,"B","I $P(^(0),U,2)=P2")
"RTN","MDKRPC2",161,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  S ^TMP("DILIST",$J,"B",+^(X,0),X)=""
"RTN","MDKRPC2",162,0)
 D LOADALL^MDXMLFM($NA(^TMP("DILIST",$J,"B")),704.209,.MDFLD)
"RTN","MDKRPC2",163,0)
 Q
"RTN","MDKRPC2",164,0)
 ;
"RTN","MDKRPC2",165,0)
XMLFILER(DD,IENS,FLD,ROOT) ; This files UUEncoded XML into Fileman WP
"RTN","MDKRPC2",166,0)
 N MDFLAG,MDERR,MDL,MDXL ; Set to control appending
"RTN","MDKRPC2",167,0)
 K ^TMP("MDKXML",$J)
"RTN","MDKRPC2",168,0)
 S MDXL="",MDL=0
"RTN","MDKRPC2",169,0)
 F  S MDXL=$O(@ROOT@(MDXL)) Q:MDXL=""  S MDL=MDL+1,^TMP("MDKXML",$J,MDL)=@ROOT@(MDXL)
"RTN","MDKRPC2",170,0)
 S MDFLAG=$S(@ROOT@(0)["-- Begin UUEncoded Data --":"",1:"A")
"RTN","MDKRPC2",171,0)
 D WP^DIE(DD,IENS,FLD,MDFLAG,$NA(^TMP("MDKXML",$J)),"MDERR")
"RTN","MDKRPC2",172,0)
 I $D(MDERR) Q "-1^"_$G(MDERR("DIERR",1,"TEXT",1),"Unknown Error")
"RTN","MDKRPC2",173,0)
 Q "1^Filed"_"^"_MDL
"RTN","MDKRPC2",174,0)
 ;
"RTN","MDKRPC2",175,0)
GETPROV ; Get list of available providers with name starting with P1
"RTN","MDKRPC2",176,0)
 N MDFLD,MDDATE,MDDUP,MDRI,MDI1,MDI2,MDLAST,MDMAX,MDPREV,MDTTL,X,X1,X2
"RTN","MDKRPC2",177,0)
 D BLDFLD^MDXMLFM(.MDFLD,200,".001;;ID^.01;;PROV_NAME^8;;TITLE")
"RTN","MDKRPC2",178,0)
 S MDRI=0,MDMAX=44,(MDLAST,MDPREV)="",X1=DT,MDFROM=P1,X2=-30 D C^%DTC S MDDATE=DT K X
"RTN","MDKRPC2",179,0)
 S RESULTS=$NA(^TMP("MDPLIST",$J)) K @RESULTS K ^TMP("DILIST",$J)
"RTN","MDKRPC2",180,0)
 F  Q:MDRI'<MDMAX  S MDFROM=$O(^VA(200,"AUSER",MDFROM),1) Q:MDFROM=""  D
"RTN","MDKRPC2",181,0)
 .S MDI1=""
"RTN","MDKRPC2",182,0)
 .F  S MDI1=$O(^VA(200,"AUSER",MDFROM,MDI1),1) Q:'MDI1  D
"RTN","MDKRPC2",183,0)
 ..I MDDATE>0,$$GET^XUA4A72(MDI1,MDDATE)<1 Q    ; Check date?
"RTN","MDKRPC2",184,0)
 ..S MDDUP=0                            ; Init flag, check dupe.
"RTN","MDKRPC2",185,0)
 ..I ($P(MDPREV_" "," ")=$P(MDFROM_" "," ")) S MDDUP=1
"RTN","MDKRPC2",186,0)
 ..;
"RTN","MDKRPC2",187,0)
 ..; Append Title if not duplicated:
"RTN","MDKRPC2",188,0)
 ..I 'MDDUP D
"RTN","MDKRPC2",189,0)
 ...S MDI2=MDI1
"RTN","MDKRPC2",190,0)
 ...D TITLE                            ; Get Title. 
"RTN","MDKRPC2",191,0)
 ...S MDRI=MDRI+1,^TMP("DILIST",$J,MDRI)=MDI1_U_$$NAMEFMT^XLFNAME(MDFROM,"F","DcMPC")_$S(MDTTL'="":U_"- "_MDTTL,1:"")
"RTN","MDKRPC2",192,0)
 ;F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  S ^TMP("DILIST",$J,"B",+^(X),X)=""
"RTN","MDKRPC2",193,0)
 D LOADALL^MDXMLFM1($NA(^TMP("DILIST",$J)),200,.MDFLD)
"RTN","MDKRPC2",194,0)
 Q
"RTN","MDKRPC2",195,0)
 ;
"RTN","MDKRPC2",196,0)
TITLE ; Retrieve Title or Title and Service/Section.
"RTN","MDKRPC2",197,0)
 ; (Assumes certain vars already set/new'd in calling code.)
"RTN","MDKRPC2",198,0)
 ;
"RTN","MDKRPC2",199,0)
 S MDTTL=""                            ; Init each time.
"RTN","MDKRPC2",200,0)
 ; DBIA# 4329:
"RTN","MDKRPC2",201,0)
 S MDTTL=$P($G(^VA(200,MDI2,0)),U,9)         ; Get Title pointer.
"RTN","MDKRPC2",202,0)
 I MDTTL<1 S MDTTL=""                          ; Reset var if none.
"RTN","MDKRPC2",203,0)
 ; DBIA# 1234:
"RTN","MDKRPC2",204,0)
 I MDTTL>0 S MDTTL=$G(^DIC(3.1,MDTTL,0))       ; Actual Title value.
"RTN","MDKRPC2",205,0)
 Q
"RTN","MDKRPC2",206,0)
 ;
"RTN","MDKRPC2",207,0)
VITALS ; File a vitals sign
"RTN","MDKRPC2",208,0)
 S P3=$$FIND1^DIC(120.51,,"MX",P3)
"RTN","MDKRPC2",209,0)
 I P3<1 S @RESULTS@(0)="-1^Unknown Vital Type" Q
"RTN","MDKRPC2",210,0)
 S X=P1_U_P2_U_P3_";"_P4_U_P5_U_P6
"RTN","MDKRPC2",211,0)
 L +^GMR(120.5,0)
"RTN","MDKRPC2",212,0)
 D EN1^GMVDCSAV(.ZZZ,X)
"RTN","MDKRPC2",213,0)
 S @RESULTS@(0)=+$O(^GMR(120.5,"A"),-1)
"RTN","MDKRPC2",214,0)
 S @RESULTS@(1)=X
"RTN","MDKRPC2",215,0)
 L -^GMR(120.5,0)
"RTN","MDKRPC2",216,0)
 Q
"RTN","MDKRPC2",217,0)
 ;
"RTN","MDKRPC2",218,0)
GETINST ; Get list of Institutions with name starting with P1
"RTN","MDKRPC2",219,0)
 N MDFLD
"RTN","MDKRPC2",220,0)
 D BLDFLD^MDXMLFM(.MDFLD,4,".001;;STATION NUMBER^.01;;STATION NAME")
"RTN","MDKRPC2",221,0)
 K ^TMP("DILIST",$J)
"RTN","MDKRPC2",222,0)
 D FIND^DIC(4,,"@;.01","P",P1,"*")
"RTN","MDKRPC2",223,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  S ^TMP("DILIST",$J,"B",+^(X,0),X)=""
"RTN","MDKRPC2",224,0)
 D LOADALL^MDXMLFM($NA(^TMP("DILIST",$J,"B")),4,.MDFLD)
"RTN","MDKRPC2",225,0)
 Q
"RTN","MDKRPC2",226,0)
GETADM ; Get Administrators
"RTN","MDKRPC2",227,0)
 N MDFLD
"RTN","MDKRPC2",228,0)
 D BLDFLD^MDXMLFM(.MDFLD,200,".001;;NUMBER^.01;;NAME")
"RTN","MDKRPC2",229,0)
 K ^TMP("DILIST",$J)
"RTN","MDKRPC2",230,0)
 D FIND^DIC(200,,"@;.01","P",P1,"*")
"RTN","MDKRPC2",231,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  S ^TMP("DILIST",$J,"B",+^(X,0),X)=""
"RTN","MDKRPC2",232,0)
 D LOADALL^MDXMLFM($NA(^TMP("DILIST",$J,"B")),200,.MDFLD)
"RTN","MDKRPC2",233,0)
 Q
"RTN","MDKRPC2",234,0)
GUI ; Returns Hemodialysis version check
"RTN","MDKRPC2",235,0)
 ; Returns yes or no  
"RTN","MDKRPC2",236,0)
 S @RESULTS@(0)=$$GET^XPAR("SYS","MDK GUI VERSION",P1,"E")
"RTN","MDKRPC2",237,0)
 S:@RESULTS@(0)="" @RESULTS@(0)="NO"
"RTN","MDKRPC2",238,0)
 Q
"RTN","MDKRPC2",239,0)
CURRENT ; Current Version
"RTN","MDKRPC2",240,0)
 N MDKLST,MDK,MDKY,MDKY1 S @RESULTS@(0)=""
"RTN","MDKRPC2",241,0)
 D GETLST^XPAR(.MDKLST,"SYS","MDK GUI VERSION")
"RTN","MDKRPC2",242,0)
 F MDK=0:0 S MDK=$O(MDKLST(MDK)) Q:MDK<1  S MDKY=$G(MDKLST(MDK)) D
"RTN","MDKRPC2",243,0)
 . S MDKY1=$P(MDKY,"^")
"RTN","MDKRPC2",244,0)
 . I $$GET^XPAR("SYS","MDK GUI VERSION",MDKY1,"I") S:@RESULTS@(0)="" @RESULTS@(0)=MDKY1
"RTN","MDKRPC2",245,0)
 . Q
"RTN","MDKRPC2",246,0)
 S:@RESULTS@(0)="" @RESULTS@(0)="No Current Version Recorded."
"RTN","MDKRPC2",247,0)
 Q
"RTN","MDKRPC2",248,0)
USERINF ; Current User Information
"RTN","MDKRPC2",249,0)
 N MDUSER
"RTN","MDKRPC2",250,0)
 S MDUSER(0)=DUZ
"RTN","MDKRPC2",251,0)
 S MDUSER(1)=$$GET1^DIQ(200,+MDUSER(0)_",",.01)
"RTN","MDKRPC2",252,0)
 S MDUSER(2)=MDUSER(1)
"RTN","MDKRPC2",253,0)
 S MDUSER(3)=""
"RTN","MDKRPC2",254,0)
 S MDUSER(4)=$$GET1^DIQ(200,+MDUSER(0)_",",8)
"RTN","MDKRPC2",255,0)
 S MDUSER(5)=$$GET1^DIQ(200,+MDUSER(0)_",",29)
"RTN","MDKRPC2",256,0)
 S MDUSER(6)=$$GET1^DIQ(200,+MDUSER(0)_",",200.07)
"RTN","MDKRPC2",257,0)
 S MDUSER(7)=$$GET1^DIQ(200,+MDUSER(0)_",",200.1)
"RTN","MDKRPC2",258,0)
 M @RESULTS=MDUSER K MDUSER
"RTN","MDKRPC2",259,0)
 Q
"RTN","MDKUTLR")
0^49^B5318285
"RTN","MDKUTLR",1,0)
MDKUTLR ; HOIFO/DP - Renal Utilities RPC;11/29/07  14:45
"RTN","MDKUTLR",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDKUTLR",3,0)
 ; Reference IA #10045 [Supported] XUSHSHP call
"RTN","MDKUTLR",4,0)
 ;              #2241 [Supported] DECRYP^XUSRB1 call
"RTN","MDKUTLR",5,0)
 ;              #10060 [Supported] FILE 200 references   
"RTN","MDKUTLR",6,0)
 ;
"RTN","MDKUTLR",7,0)
CP(STUDY) ; Check to see if the CP Study is logged
"RTN","MDKUTLR",8,0)
 N DFN,MDFDA,MDIEN
"RTN","MDKUTLR",9,0)
 S DFN=$P(^MDD(702,STUDY,0),U)
"RTN","MDKUTLR",10,0)
 D:'$D(^MDK(704.202,STUDY,0))  ; Build study record (1..1) with file 702
"RTN","MDKUTLR",11,0)
 .S MDFDA(704.202,"+1,",.01)=STUDY
"RTN","MDKUTLR",12,0)
 .;S MDFDA(704.202,"+1,",.02)=DFN
"RTN","MDKUTLR",13,0)
 .S MDFDA(704.202,"+1,",.09)=1
"RTN","MDKUTLR",14,0)
 .S MDIEN(1)=STUDY
"RTN","MDKUTLR",15,0)
 .D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDKUTLR",16,0)
 .K MDFDA,MDIEN
"RTN","MDKUTLR",17,0)
 D:'$D(^MDK(704.201,DFN,0))  ; Build access point record (1..1) with file 2
"RTN","MDKUTLR",18,0)
 .S MDFDA(704.201,"+1,",.01)=DFN
"RTN","MDKUTLR",19,0)
 .S MDIEN(1)=DFN
"RTN","MDKUTLR",20,0)
 .D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDKUTLR",21,0)
 .K MDFDA,MDIEN
"RTN","MDKUTLR",22,0)
 Q
"RTN","MDKUTLR",23,0)
UPD(STUDY,NOTEID) ; Add entries to update CP_TRANSACTION_TIU_HISTORY
"RTN","MDKUTLR",24,0)
 N MDCHK,MDFDA,MDIEN
"RTN","MDKUTLR",25,0)
 Q:$G(STUDY)=""
"RTN","MDKUTLR",26,0)
 Q:$G(NOTEID)=""
"RTN","MDKUTLR",27,0)
 S MDCHK=$O(^MDD(702.001,"ASTUDY",+STUDY,NOTEID,0)) Q:+MDCHK
"RTN","MDKUTLR",28,0)
 D NOW^%DTC
"RTN","MDKUTLR",29,0)
 S MDFDA(702.001,"+1,",.01)=STUDY
"RTN","MDKUTLR",30,0)
 S MDFDA(702.001,"+1,",.02)=NOTEID
"RTN","MDKUTLR",31,0)
 S MDFDA(702.001,"+1,",.03)=%
"RTN","MDKUTLR",32,0)
 D UPDATE^DIE("","MDFDA")
"RTN","MDKUTLR",33,0)
 K %,X,MDFDA,MDIEN
"RTN","MDKUTLR",34,0)
 Q
"RTN","MDKUTLR",35,0)
 ;
"RTN","MDKUTLR",36,0)
RPC(RESULTS,OPTION,P1,P2,P3,P4,P5,P6) ; [Procedure] Main RPC call
"RTN","MDKUTLR",37,0)
 ; RPC: [MDK UTILITIES]
"RTN","MDKUTLR",38,0)
 ;
"RTN","MDKUTLR",39,0)
 D CLEAN^DILF
"RTN","MDKUTLR",40,0)
 S RESULTS=$NA(^TMP("MDKUTL",$J)) K @RESULTS
"RTN","MDKUTLR",41,0)
 I $T(@OPTION)="" D  Q
"RTN","MDKUTLR",42,0)
 .S @RESULTS@(0)="-1^Error in RPC: MDK UTILITIES at "_OPTION_U_$T(+0)
"RTN","MDKUTLR",43,0)
 D @OPTION S:'$D(@RESULTS) @RESULTS@(0)="-1^No return"
"RTN","MDKUTLR",44,0)
 D CLEAN^DILF
"RTN","MDKUTLR",45,0)
 Q
"RTN","MDKUTLR",46,0)
 ;
"RTN","MDKUTLR",47,0)
ESIG ; [Procedure] Verify users electronic signature
"RTN","MDKUTLR",48,0)
 I $G(P1)="" D  Q
"RTN","MDKUTLR",49,0)
 .S @RESULTS@(0)="-1^Must supply electronic signature code"
"RTN","MDKUTLR",50,0)
 S X=$$DECRYP^XUSRB1(P1)
"RTN","MDKUTLR",51,0)
 D HASH^XUSHSHP
"RTN","MDKUTLR",52,0)
 I X'=$$GET1^DIQ(200,DUZ_",",20.4,"I") S @RESULTS@(0)="-1^E-Sig Invalid^"
"RTN","MDKUTLR",53,0)
 E  S @RESULTS@(0)="1^E-Sig Verifed^"_X
"RTN","MDKUTLR",54,0)
 Q
"RTN","MDKUTLR",55,0)
 ;
"RTN","MDKUTLR",56,0)
LOCK ; [Procedure] Lock a record
"RTN","MDKUTLR",57,0)
 L @("+"_$$ROOT^DILFD(P1)_(+P2)_"):2")
"RTN","MDKUTLR",58,0)
 I '$T S @RESULTS@(0)="-1^Lock *NOT* acquired" Q
"RTN","MDKUTLR",59,0)
 E  S @RESULTS@(0)="1^Lock acquired"
"RTN","MDKUTLR",60,0)
 Q
"RTN","MDKUTLR",61,0)
 ;
"RTN","MDKUTLR",62,0)
UNLOCK ; [Procedure] Unlock a record
"RTN","MDKUTLR",63,0)
 L @("-"_$$ROOT^DILFD(P1)_(+P2)_")")
"RTN","MDKUTLR",64,0)
 S @RESULTS@(0)="1^Lock released"
"RTN","MDKUTLR",65,0)
 Q
"RTN","MDKUTLR",66,0)
 ;
"RTN","MDPCE1")
0^42^B5009420
"RTN","MDPCE1",1,0)
MDPCE1 ; HOIFO/NCA - Updated Routine For Data Extract ; [05-28-2002 12:55]
"RTN","MDPCE1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDPCE1",3,0)
 ; Integration Agreements:
"RTN","MDPCE1",4,0)
 ; IA# 1889 [Subscription] Create New Visit
"RTN","MDPCE1",5,0)
 ; IA# 10048 [Supported] FILE 9.4 references
"RTN","MDPCE1",6,0)
 ;
"RTN","MDPCE1",7,0)
EN1(MDINST,MDPDTE,MDPR,MDTYP,MDETYP,MDCLOC) ; [Function] PCE Visit Creation
"RTN","MDPCE1",8,0)
 ; Input parameters
"RTN","MDPCE1",9,0)
 ;  1. MDINST [Literal/Required] Transaction IEN
"RTN","MDPCE1",10,0)
 ;  2. MDPDT [Literal/Optional] Procedure Date/Time
"RTN","MDPCE1",11,0)
 ;  3. MDPR [Literal/Required] CP Definition
"RTN","MDPCE1",12,0)
 ;  4. MDTYP [Literal/Required] Type of Visit (Ambulatory or Hospitalization or Event (Historical))
"RTN","MDPCE1",13,0)
 ;  5. MDETYP [Literal/Required] Encounter Type (Primary or Ancillary)
"RTN","MDPCE1",14,0)
 ;  6. MDCLOC [Literal/Required] Workload Reporting hospital location
"RTN","MDPCE1",15,0)
 ;
"RTN","MDPCE1",16,0)
 N DATA,MDPERR,MDJ,MDPKG,MDRES,MDSTR,MDVISIT,MDDRES K ^TMP("MDPXAPI",$J)
"RTN","MDPCE1",17,0)
 S MDOUT=""
"RTN","MDPCE1",18,0)
 S MDPKG=$$FIND1^DIC(9.4,"","MX","CLINICAL PROCEDURES")
"RTN","MDPCE1",19,0)
 I 'MDPKG Q "-1^CLINICAL PROCEDURES does not exist in Package File."
"RTN","MDPCE1",20,0)
 I '$D(^MDD(702,MDINST,0)) Q "-1^No Study Record."
"RTN","MDPCE1",21,0)
 S MDSTR=$G(^MDD(702,MDINST,0))
"RTN","MDPCE1",22,0)
 S MDJ=0,MDJ=MDJ+1
"RTN","MDPCE1",23,0)
 I '$G(MDCLOC) S:MDPR["^" MDCLOC=$P(MDPR,"^",2)
"RTN","MDPCE1",24,0)
 I '$G(MDCLOC) S MDCLOC=$$GET1^DIQ(702.01,+MDPR_",",.05,"I") I 'MDCLOC Q "-1^No Hospital Location for CP Definition."
"RTN","MDPCE1",25,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENC D/T")=MDPDTE
"RTN","MDPCE1",26,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"PATIENT")=$P(MDSTR,"^",1)
"RTN","MDPCE1",27,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"HOS LOC")=MDCLOC
"RTN","MDPCE1",28,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"SERVICE CATEGORY")=MDTYP
"RTN","MDPCE1",29,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENCOUNTER TYPE")=MDETYP
"RTN","MDPCE1",30,0)
 S MDRES=$$DATA2PCE^PXAPI("^TMP(""MDPXAPI"",$J)",MDPKG,"CLINICAL PROCEDURES",.MDVISIT,"","",1,"",.MDPERR)
"RTN","MDPCE1",31,0)
 I MDRES S MDOUT=MDVISIT_"^"_MDCLOC_";"_MDPDTE_";"_MDTYP S MDFDA(702,MDINST_",",.07)=MDTYP_";"_MDPDTE_";"_MDCLOC D FILE^DIE("K","MDFDA") K ^TMP("MDPXAPI",$J) Q MDOUT
"RTN","MDPCE1",32,0)
 K ^TMP("MDPXAPI",$J)
"RTN","MDPCE1",33,0)
 S MDOUT="-1^PCE Visit Creation Error."
"RTN","MDPCE1",34,0)
 Q MDOUT
"RTN","MDPCE1",35,0)
 ;
"RTN","MDPCE2")
0^43^B23364191
"RTN","MDPCE2",1,0)
MDPCE2 ; HOIFO/NCA - Routine For Data Extract For Hemo Dialysis;9/10/04  11:23
"RTN","MDPCE2",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDPCE2",3,0)
 ; Integration Agreements:
"RTN","MDPCE2",4,0)
 ; IA# 1889 [Subscription] Create New Visit - DATA2PCE^PXAPI call
"RTN","MDPCE2",5,0)
 ;     1890 [Subscription] Delete existing visit - DELVFILE^PXAPI call
"RTN","MDPCE2",6,0)
 ;     1995 [Supported] ICPTCOD API Call
"RTN","MDPCE2",7,0)
 ;     3990 [Supported] ICDCODE API Call
"RTN","MDPCE2",8,0)
 ;    10040 [Supported] Hospital Location File Access
"RTN","MDPCE2",9,0)
 ;    10082 [Supported] Global Access to ICD Diagnosis file (#80)
"RTN","MDPCE2",10,0)
 ;    10048 [Supported] FILE 9.4 references
"RTN","MDPCE2",11,0)
 ;    10103 [Supported] XLFDT calls
"RTN","MDPCE2",12,0)
 ;
"RTN","MDPCE2",13,0)
EN1(MDENC,MDINST,MDPDTE,MDPR,MDTYP,MDETYP,MDCLOC) ; [Function] PCE Visit Creation
"RTN","MDPCE2",14,0)
 ; Input parameters
"RTN","MDPCE2",15,0)
 ;  1. MDENC [Literal/Required] Billing data array
"RTN","MDPCE2",16,0)
 ;  2. MDINST [Literal/Required] Transaction IEN
"RTN","MDPCE2",17,0)
 ;  3. MDPDTE [Literal/Optional] Procedure Date/Time
"RTN","MDPCE2",18,0)
 ;  4. MDPR [Literal/Required] CP Definition
"RTN","MDPCE2",19,0)
 ;  5. MDTYP [Literal/Required] Type of Visit (Ambulatory or Hospitalization)
"RTN","MDPCE2",20,0)
 ;  6. MDETYP [Literal/Required] Encounter Type (Primary or Ancillary)
"RTN","MDPCE2",21,0)
 ;  7. MDCLOC [Literal/Required] Workload Reporting hospital location
"RTN","MDPCE2",22,0)
 ;
"RTN","MDPCE2",23,0)
 N DATA,MDCCOD,MDCLIN,MDPERR,MDJ,MDK,MDL,MDLST,MDM,MDNOD,MDOK,MDPKG,MDPROV,MDRES,MDSC,MDSTR,MDV1,MDVISIT,MDDRES K ^TMP("MDPXAPI",$J)
"RTN","MDPCE2",24,0)
 S MDOUT="",(MDOK,MDSC)=0
"RTN","MDPCE2",25,0)
 S MDPKG=$$FIND1^DIC(9.4,"","MX","CLINICAL PROCEDURES")
"RTN","MDPCE2",26,0)
 I 'MDPKG Q "-1^CLINICAL PROCEDURES does not exist in Package File."
"RTN","MDPCE2",27,0)
 I '$D(^MDD(702,MDINST,0)) Q "-1^No Study Record."
"RTN","MDPCE2",28,0)
 S MDSTR=$G(^MDD(702,MDINST,0))
"RTN","MDPCE2",29,0)
 S MDCLIN=$G(^MDD(702,MDINST,1))
"RTN","MDPCE2",30,0)
 S MDRES=""
"RTN","MDPCE2",31,0)
 I +$P(MDCLIN,U) S MDRES=$$DELVFILE^PXAPI("PRV^POV^CPT",+$P(MDCLIN,U),"","CLINICAL PROCEDURES") S MDVISIT=+MDCLIN
"RTN","MDPCE2",32,0)
 ;I +MDRES<0 Q $P(MDRES,"^")_"^Cannot purge existing visit during PCE data set."
"RTN","MDPCE2",33,0)
 S (MDJ,MDK,MDL,MDM)=0,MDJ=MDJ+1,MDPROV=""
"RTN","MDPCE2",34,0)
 I '$G(MDCLOC) S MDCLOC=$$GET1^DIQ(702.01,+MDPR_",",.05,"I") I 'MDCLOC Q "-1^No Hospital Location for CP Definition."
"RTN","MDPCE2",35,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENC D/T")=MDPDTE
"RTN","MDPCE2",36,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"PATIENT")=$P(MDSTR,"^",1)
"RTN","MDPCE2",37,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"HOS LOC")=MDCLOC
"RTN","MDPCE2",38,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"SERVICE CATEGORY")=$S(MDTYP="V":"A",1:MDTYP)
"RTN","MDPCE2",39,0)
 S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"ENCOUNTER TYPE")=MDETYP
"RTN","MDPCE2",40,0)
 I $$GET1^DIQ(44,MDCLOC_",",3,"I") S ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"INSTITUTION")=$$GET1^DIQ(44,MDCLOC_",",3,"I")
"RTN","MDPCE2",41,0)
 S MDLST="" F  S MDLST=$O(MDENC(MDLST)) Q:MDLST=""  S MDNOD=$G(MDENC(MDLST)) D
"RTN","MDPCE2",42,0)
 .I $P(MDNOD,"^")["SC" D  Q
"RTN","MDPCE2",43,0)
 ..S:+$P(MDNOD,";",2) ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"SC")=+$P($P(MDNOD,";",2),U,2) S:+$P($P(MDNOD,";",2),U,2)>0 MDSC=1
"RTN","MDPCE2",44,0)
 ..I $P(MDNOD,";",3)="AO" Q:+MDSC>0  S:+$P(MDNOD,";",4) ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"AO")=+$P($P(MDNOD,";",4),"^",2)
"RTN","MDPCE2",45,0)
 ..I $P(MDNOD,";",5)="IR" Q:+MDSC>0  S:+$P(MDNOD,";",6) ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"IR")=+$P($P(MDNOD,";",6),"^",2)
"RTN","MDPCE2",46,0)
 ..I $P(MDNOD,";",7)="EC" Q:+MDSC>0  S:+$P(MDNOD,";",8) ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"EC")=+$P($P(MDNOD,";",8),"^",2)
"RTN","MDPCE2",47,0)
 ..I $P(MDNOD,";",9)="MST" Q:+MDSC>0  S:+$P(MDNOD,";",10) ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"MST")=+$P($P(MDNOD,";",10),"^",2)
"RTN","MDPCE2",48,0)
 ..I $P(MDNOD,";",11)="HNC" Q:+MDSC>0  S:+$P(MDNOD,";",12) ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"HNC")=+$P($P(MDNOD,";",12),"^",2)
"RTN","MDPCE2",49,0)
 ..I $P(MDNOD,";",13)="CV" Q:+MDSC>0  S:+$P(MDNOD,";",14) ^TMP("MDPXAPI",$J,"ENCOUNTER",MDJ,"CV")=+$P($P(MDNOD,";",14),"^",2)
"RTN","MDPCE2",50,0)
 .I $P(MDNOD,"^")="PRV" I $P(MDNOD,"^",2)'="" D  Q
"RTN","MDPCE2",51,0)
 ..S MDK=MDK+1,^TMP("MDPXAPI",$J,"PROVIDER",MDK,"NAME")=$P(MDNOD,"^",2) S:'MDOK MDOK=1
"RTN","MDPCE2",52,0)
 ..S ^TMP("MDPXAPI",$J,"PROVIDER",MDK,"PRIMARY")=$P(MDNOD,"^",6)
"RTN","MDPCE2",53,0)
 ..S:MDPROV="" MDPROV=$P(MDNOD,"^",2)
"RTN","MDPCE2",54,0)
 ..Q
"RTN","MDPCE2",55,0)
 .I $P(MDNOD,"^")="POV" D  Q
"RTN","MDPCE2",56,0)
 ..Q:$P(MDNOD,"^",3)=""
"RTN","MDPCE2",57,0)
 ..S MDCCOD=$$CODEN^ICDCODE($P(MDNOD,"^",3),"") S MDCCOD=+$P(MDCCOD,"^") Q:+MDCCOD<1
"RTN","MDPCE2",58,0)
 ..S MDL=MDL+1,^TMP("MDPXAPI",$J,"DX/PL",MDL,"DIAGNOSIS")=MDCCOD
"RTN","MDPCE2",59,0)
 ..S ^TMP("MDPXAPI",$J,"DX/PL",MDL,"PRIMARY")=$P(MDNOD,"^",6)
"RTN","MDPCE2",60,0)
 ..S ^TMP("MDPXAPI",$J,"DX/PL",MDL,"ORD/RES")="R"
"RTN","MDPCE2",61,0)
 ..S ^TMP("MDPXAPI",$J,"DX/PL",MDL,"CATEGORY")=$P(MDNOD,"^",4)
"RTN","MDPCE2",62,0)
 ..S ^TMP("MDPXAPI",$J,"DX/PL",MDL,"NARRATIVE")=$P($G(^ICD9(+MDCCOD,0)),"^",3)
"RTN","MDPCE2",63,0)
 ..S:MDPROV ^TMP("MDPXAPI",$J,"DX/PL",MDL,"ENC PROVIDER")=MDPROV
"RTN","MDPCE2",64,0)
 ..S:'MDOK MDOK=1
"RTN","MDPCE2",65,0)
 .I $P(MDNOD,"^")="CPT" D  Q
"RTN","MDPCE2",66,0)
 ..Q:$P(MDNOD,U,3)=""
"RTN","MDPCE2",67,0)
 ..S MDCCOD=$$CPT^ICPTCOD($P(MDNOD,U,3)) Q:+MDCCOD<1
"RTN","MDPCE2",68,0)
 ..S MDM=MDM+1 S:'MDOK MDOK=1
"RTN","MDPCE2",69,0)
 ..S ^TMP("MDPXAPI",$J,"PROCEDURE",MDM,"PROCEDURE")=$P(MDCCOD,"^")
"RTN","MDPCE2",70,0)
 ..S ^TMP("MDPXAPI",$J,"PROCEDURE",MDM,"NARRATIVE")=$P(MDCCOD,"^",3)
"RTN","MDPCE2",71,0)
 ..S ^TMP("MDPXAPI",$J,"PROCEDURE",MDM,"CATEGORY")=$P(MDNOD,"^",4)
"RTN","MDPCE2",72,0)
 ..S ^TMP("MDPXAPI",$J,"PROCEDURE",MDM,"QTY")=$P(MDNOD,"^",7)
"RTN","MDPCE2",73,0)
 ..S:MDPROV ^TMP("MDPXAPI",$J,"PROCEDURE",MDM,"ENC PROVIDER")=MDPROV
"RTN","MDPCE2",74,0)
 I MDOK S ^TMP("MDPXAPI",$J,"ENCOUNTER",1,"CHECKOUT D/T")=$$NOW^XLFDT
"RTN","MDPCE2",75,0)
 S MDRES=$$DATA2PCE^PXAPI("^TMP(""MDPXAPI"",$J)",MDPKG,"CLINICAL PROCEDURES",.MDVISIT,"","",1,"",.MDPERR)
"RTN","MDPCE2",76,0)
 I MDRES<1 D  Q MDOUT
"RTN","MDPCE2",77,0)
 .S MDOUT=1
"RTN","MDPCE2",78,0)
 .I MDVISIT>0 S MDFDA(702,MDINST_",",.13)=MDVISIT,MDOUT=MDVISIT_"^"_MDCLOC_";"_MDPDTE_";"_MDTYP,MDFDA(702,MDINST_",",.07)=MDTYP_";"_MDPDTE_";"_MDCLOC D FILE^DIE("K","MDFDA")
"RTN","MDPCE2",79,0)
 .K ^TMP("MDPXAPI",$J) Q
"RTN","MDPCE2",80,0)
 S:MDVISIT>0 MDFDA(702,MDINST_",",.13)=MDVISIT
"RTN","MDPCE2",81,0)
 S MDOUT=MDVISIT_"^"_MDCLOC_";"_MDPDTE_";"_MDTYP
"RTN","MDPCE2",82,0)
 S MDFDA(702,MDINST_",",.07)=MDTYP_";"_MDPDTE_";"_MDCLOC
"RTN","MDPCE2",83,0)
 D FILE^DIE("K","MDFDA") K ^TMP("MDPXAPI",$J)
"RTN","MDPCE2",84,0)
 Q MDOUT
"RTN","MDPOST06")
0^30^B2550231
"RTN","MDPOST06",1,0)
MDPOST06 ; HOIFO/DP - Post Init ;2/7/07  16:15
"RTN","MDPOST06",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDPOST06",3,0)
 ; Integration Agreements:
"RTN","MDPOST06",4,0)
 ; IA# 2263 [Supported] XPAR Utilities
"RTN","MDPOST06",5,0)
 ; IA# 10141 [Supported] Calls to XPDUTL
"RTN","MDPOST06",6,0)
 ;
"RTN","MDPOST06",7,0)
EN ; [Procedure] Setup preliminary parameters
"RTN","MDPOST06",8,0)
 ; This submodule is called during the KIDS installation
"RTN","MDPOST06",9,0)
 ; process.
"RTN","MDPOST06",10,0)
 ;
"RTN","MDPOST06",11,0)
 ; Variables:
"RTN","MDPOST06",12,0)
 ;  DIK: [Private] Fileman delete variable
"RTN","MDPOST06",13,0)
 ;  MDCLIENT: [Private] Current client version (#.#.#.#)
"RTN","MDPOST06",14,0)
 ;  MDFILE: [Private] Scratch
"RTN","MDPOST06",15,0)
 ;  MDRET: [Private] Scratch
"RTN","MDPOST06",16,0)
 ;  MDX: [Private] Scratch
"RTN","MDPOST06",17,0)
 ;
"RTN","MDPOST06",18,0)
 ; New private variables
"RTN","MDPOST06",19,0)
 NEW DIK,MDCLIENT,MDFILE,MDRET,MDX
"RTN","MDPOST06",20,0)
 W $$MSG("Setting compatible client versions")
"RTN","MDPOST06",21,0)
 S MDCLIENT="1.0.6.4" D
"RTN","MDPOST06",22,0)
 .D SETPAR("MD VERSION CHK","CPGATEWAY.EXE:"_MDCLIENT,1)
"RTN","MDPOST06",23,0)
 .D SETPAR("MD VERSION CHK","CPMANAGER.EXE:"_MDCLIENT,1)
"RTN","MDPOST06",24,0)
 .D SETPAR("MD CRC VALUES","CPGATEWAY.EXE:"_MDCLIENT,"E0E1BB26")
"RTN","MDPOST06",25,0)
 .D SETPAR("MD CRC VALUES","CPMANAGER.EXE:"_MDCLIENT,"9ABFE692")
"RTN","MDPOST06",26,0)
 D ^MDPOST6A
"RTN","MDPOST06",27,0)
 N MDK,MDKGUI,MDKLST
"RTN","MDPOST06",28,0)
 ; Set current client version
"RTN","MDPOST06",29,0)
 S MDKGUI="1.0.6.319"
"RTN","MDPOST06",30,0)
 ; Deactivate all previous versions from XPAR
"RTN","MDPOST06",31,0)
 D GETLST^XPAR(.MDKLST,"SYS","MDK GUI VERSION")
"RTN","MDPOST06",32,0)
 F MDK=0:0 S MDK=$O(MDKLST(MDK)) Q:'MDK  D
"RTN","MDPOST06",33,0)
 .D EN^XPAR("SYS","MDK GUI VERSION",$P(MDKLST(MDK),"^",1),0)
"RTN","MDPOST06",34,0)
 ; Add and/or activate current client versions
"RTN","MDPOST06",35,0)
 D EN^XPAR("SYS","MDK GUI VERSION","HEMODIALYSIS.EXE:"_MDKGUI,1)
"RTN","MDPOST06",36,0)
 Q
"RTN","MDPOST06",37,0)
 ;
"RTN","MDPOST06",38,0)
MSG(TEXT) ; [Procedure] Display message to user
"RTN","MDPOST06",39,0)
 ; Input parameters
"RTN","MDPOST06",40,0)
 ;  1. TEXT [Literal/Required] Text to display to the user
"RTN","MDPOST06",41,0)
 ;
"RTN","MDPOST06",42,0)
 D MES^XPDUTL(" MDPOST-"_TEXT_"...")
"RTN","MDPOST06",43,0)
 D MES^XPDUTL("")
"RTN","MDPOST06",44,0)
 Q ""
"RTN","MDPOST06",45,0)
 ;
"RTN","MDPOST06",46,0)
SETPAR(PAR,INS,VAL) ; [Procedure] Set value into XPAR parameter
"RTN","MDPOST06",47,0)
 ; Input parameters
"RTN","MDPOST06",48,0)
 ;  1. PAR [Literal/Required] Parameter
"RTN","MDPOST06",49,0)
 ;  2. INS [Literal/Required] Instance
"RTN","MDPOST06",50,0)
 ;  3. VAL [Literal/Required] New value
"RTN","MDPOST06",51,0)
 ;
"RTN","MDPOST06",52,0)
 D EN^XPAR("SYS",PAR,INS,VAL)
"RTN","MDPOST06",53,0)
 Q
"RTN","MDPOST6A")
0^48^B4565720
"RTN","MDPOST6A",1,0)
MDPOST6A ;HOIFO/NCA-Convert Existing Notes to New File ;11/28/07  14:31
"RTN","MDPOST6A",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDPOST6A",3,0)
 ; Reference IA #2693 [Subscription] TIULQ call
"RTN","MDPOST6A",4,0)
 ;               2916 [Supported] DDMOD calls
"RTN","MDPOST6A",5,0)
EN1 ; Start Converting Notes
"RTN","MDPOST6A",6,0)
 D P1
"RTN","MDPOST6A",7,0)
 D P2
"RTN","MDPOST6A",8,0)
 Q
"RTN","MDPOST6A",9,0)
P1 ; Process multiple notes from Hemo.
"RTN","MDPOST6A",10,0)
 Q:'$D(^MDD(702,"C"))
"RTN","MDPOST6A",11,0)
 N MDCHK,MDCST,MDCTR,MDDL,MDFDA,MDK,MDSID,MDX1 S MDDL="",MDCTR=0
"RTN","MDPOST6A",12,0)
 S MDSID=0 F  S MDSID=$O(^MDD(702,"C",MDSID)) Q:MDSID<1  D
"RTN","MDPOST6A",13,0)
 .S MDK=0 F  S MDK=$O(^MDD(702,"C",MDSID,MDK)) Q:MDK<1  S MDX1=+MDK D
"RTN","MDPOST6A",14,0)
 ..N MDTIUER
"RTN","MDPOST6A",15,0)
 ..S MDTIUER="" K ^TMP("MDTIUST",$J)
"RTN","MDPOST6A",16,0)
 ..D EXTRACT^TIULQ(+MDX1,"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1201;1202;1205") Q:+MDTIUER
"RTN","MDPOST6A",17,0)
 ..I $G(^TMP("MDTIUST",$J,MDX1,.05,"E"))'="COMPLETED" Q
"RTN","MDPOST6A",18,0)
 ..S MDCHK=$O(^MDD(702.001,"ASTUDY",+MDSID,+MDX1,0)) Q:+MDCHK
"RTN","MDPOST6A",19,0)
 ..S MDFDA(702.001,"+1,",.01)=MDSID
"RTN","MDPOST6A",20,0)
 ..S MDFDA(702.001,"+1,",.02)=+MDX1
"RTN","MDPOST6A",21,0)
 ..S MDFDA(702.001,"+1,",.03)=$G(^TMP("MDTIUST",$J,MDX1,1201,"I"))
"RTN","MDPOST6A",22,0)
 ..D UPDATE^DIE("","MDFDA")
"RTN","MDPOST6A",23,0)
 ..S MDCTR=MDCTR+1
"RTN","MDPOST6A",24,0)
 ..K ^TMP("MDTIUST",$J),MDFDA
"RTN","MDPOST6A",25,0)
 ..Q
"RTN","MDPOST6A",26,0)
 I MDCTR=+$P($G(^MDD(702.001,0)),"^",4) D DELIXN^DDMOD(702,"C") K ^MDD(702,"C")
"RTN","MDPOST6A",27,0)
 Q
"RTN","MDPOST6A",28,0)
P2 ; Move existing TIU Notes in CP Transaction File
"RTN","MDPOST6A",29,0)
 N MDCHK,MDCST,MDCTR,MDDL,MDFDA,MDK,MDSID,MDX1 S MDDL="",MDCTR=0
"RTN","MDPOST6A",30,0)
 Q:+$P($G(^MDD(702.001,0)),"^",4)>0
"RTN","MDPOST6A",31,0)
 S MDK=0 F  S MDK=$O(^MDD(702,"ATIU",MDK)) Q:MDK<1  D
"RTN","MDPOST6A",32,0)
 .S MDSID=0 F  S MDSID=$O(^MDD(702,"ATIU",MDK,MDSID)) Q:MDSID<1  S MDX1=+MDK D
"RTN","MDPOST6A",33,0)
 ..N MDTIUER
"RTN","MDPOST6A",34,0)
 ..S MDTIUER="" K ^TMP("MDTIUST",$J)
"RTN","MDPOST6A",35,0)
 ..D EXTRACT^TIULQ(+MDX1,"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1201;1202;1205") Q:+MDTIUER
"RTN","MDPOST6A",36,0)
 ..S MDCHK=$O(^MDD(702.001,"ASTUDY",+MDSID,+MDX1,0)) Q:+MDCHK
"RTN","MDPOST6A",37,0)
 ..S MDFDA(702.001,"+1,",.01)=MDSID
"RTN","MDPOST6A",38,0)
 ..S MDFDA(702.001,"+1,",.02)=+MDX1
"RTN","MDPOST6A",39,0)
 ..S MDFDA(702.001,"+1,",.03)=$G(^TMP("MDTIUST",$J,MDX1,1201,"I"))
"RTN","MDPOST6A",40,0)
 ..S MDCTR=MDCTR+1
"RTN","MDPOST6A",41,0)
 ..D UPDATE^DIE("","MDFDA")
"RTN","MDPOST6A",42,0)
 ..K ^TMP("MDTIUST",$J),MDFDA
"RTN","MDPOST6A",43,0)
 ..Q
"RTN","MDPOST6A",44,0)
 Q
"RTN","MDRPCNT")
0^35^B6941804
"RTN","MDRPCNT",1,0)
MDRPCNT ; HOIFO/NCA - Document Handler Object (TMDNOTE) ;5/23/05  15:50
"RTN","MDRPCNT",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCNT",3,0)
 ; Reference IA #2944 [Subscription] Calls to TIUSRVR1.
"RTN","MDRPCNT",4,0)
 ;               2240 [Supported] ENCRYP^XUSRB1 call
"RTN","MDRPCNT",5,0)
 ;               2241 [Supported] DECRYP^XUSRB1 call
"RTN","MDRPCNT",6,0)
 ;               2693 [Subscription] TIULQ call
"RTN","MDRPCNT",7,0)
 ;
"RTN","MDRPCNT",8,0)
RPC(RESULTS,OPTION,MDSID,MDTIU,MDDTE,MDAUTH,MDESIG,MDNTL,MDTXT) ; [Procedure] Main RPC call
"RTN","MDRPCNT",9,0)
 ; RPC: [MD TMDNOTE]
"RTN","MDRPCNT",10,0)
 ;
"RTN","MDRPCNT",11,0)
 ; MDSID=702 IEN
"RTN","MDRPCNT",12,0)
 ; MDTIU=Note Internal Entry Number
"RTN","MDRPCNT",13,0)
 ; MDDTE=Date/Time of Note
"RTN","MDRPCNT",14,0)
 ; MDAUTH=Author of Note
"RTN","MDRPCNT",15,0)
 ; MDESIG=Encoded E-Sig
"RTN","MDRPCNT",16,0)
 ; MDNTL=Note Title
"RTN","MDRPCNT",17,0)
 ; MDTXT=Array containing the text for the note
"RTN","MDRPCNT",18,0)
 ;
"RTN","MDRPCNT",19,0)
 D CLEAN^DILF
"RTN","MDRPCNT",20,0)
 S RESULTS=$NA(^TMP("MDKUTL",$J)) K @RESULTS
"RTN","MDRPCNT",21,0)
 I $T(@OPTION)="" D  Q
"RTN","MDRPCNT",22,0)
 .S @RESULTS@(0)="-1^Error in RPC: MD TMDNOTE at "_OPTION_U_$T(+0)
"RTN","MDRPCNT",23,0)
 D @OPTION S:'$D(@RESULTS) @RESULTS@(0)="-1^No return"
"RTN","MDRPCNT",24,0)
 D CLEAN^DILF
"RTN","MDRPCNT",25,0)
 Q
"RTN","MDRPCNT",26,0)
 ;
"RTN","MDRPCNT",27,0)
NEWDOC ; Add additional new note
"RTN","MDRPCNT",28,0)
 ;
"RTN","MDRPCNT",29,0)
 I '$D(^MDD(702,+MDSID,0)) S @RESULTS@(0)="-1^No such study" Q
"RTN","MDRPCNT",30,0)
 I $D(MDTXT)<1 S @RESULTS@(0)="-1^No note text" Q
"RTN","MDRPCNT",31,0)
 K ^TMP("MDTXT",$J)
"RTN","MDRPCNT",32,0)
 N X,Y S X="",Y=0
"RTN","MDRPCNT",33,0)
 F  S X=$O(MDTXT(X)) Q:X=""  S Y=Y+1,^TMP("MDTXT",$J,Y)=MDTXT(X)
"RTN","MDRPCNT",34,0)
 I Y<1 S @RESULTS@(0)="-1^No note text" Q
"RTN","MDRPCNT",35,0)
 S MDESIG=$$DECRYP^XUSRB1(MDESIG),MDESIG=$$ENCRYP^XUSRB1(MDESIG)
"RTN","MDRPCNT",36,0)
 I $G(MDDTE)="" D NOW^%DTC S MDDTE=% K %
"RTN","MDRPCNT",37,0)
 S @RESULTS@(0)=$$SUBMIT^MDRPCNT1(+MDSID,MDDTE,MDAUTH,MDESIG,MDNTL,$NA(^TMP("MDTXT",$J)))
"RTN","MDRPCNT",38,0)
 ;
"RTN","MDRPCNT",39,0)
 K ^TMP("MDTXT",$J)
"RTN","MDRPCNT",40,0)
 Q
"RTN","MDRPCNT",41,0)
 ;
"RTN","MDRPCNT",42,0)
NOTELIST ; Get list of documents
"RTN","MDRPCNT",43,0)
 ; Return:
"RTN","MDRPCNT",44,0)
 ;    Note Ien
"RTN","MDRPCNT",45,0)
 ;    Note Title
"RTN","MDRPCNT",46,0)
 ;    Date/Time Creation
"RTN","MDRPCNT",47,0)
 ;    Author
"RTN","MDRPCNT",48,0)
 ;
"RTN","MDRPCNT",49,0)
 N MDCST,MDDL,MDK,MDX1 S MDDL="" K ^TMP("MDDLST",$J)
"RTN","MDRPCNT",50,0)
 S MDK=0 F  S MDK=$O(^MDD(702.001,"ASTUDY",MDSID,MDK)) Q:MDK<1  S MDX1=+MDK D
"RTN","MDRPCNT",51,0)
 .N MDDOC,MDTIUER
"RTN","MDRPCNT",52,0)
 .S (MDDOC,MDTIUER)="" K ^TMP("MDTIUST",$J)
"RTN","MDRPCNT",53,0)
 .D EXTRACT^TIULQ(+MDX1,"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1201;1202;1205") Q:+MDTIUER
"RTN","MDRPCNT",54,0)
 .I $G(^TMP("MDTIUST",$J,MDX1,.05,"E"))'="COMPLETED" Q
"RTN","MDRPCNT",55,0)
 .S @RESULTS@(MDK)=+MDX1_"^"_$G(^TMP("MDTIUST",$J,MDX1,.01,"E"))_"^"_$G(^TMP("MDTIUST",$J,MDX1,1201,"E"))_"^"_$G(^TMP("MDTIUST",$J,MDX1,1202,"E"))_"^"_$G(^TMP("MDTIUST",$J,MDX1,1205,"E"))
"RTN","MDRPCNT",56,0)
 .K ^TMP("MDTIUST",$J)
"RTN","MDRPCNT",57,0)
 .Q
"RTN","MDRPCNT",58,0)
 Q
"RTN","MDRPCNT",59,0)
 ;
"RTN","MDRPCNT",60,0)
VIEWTIU ; [Procedure] View the associated TIU document
"RTN","MDRPCNT",61,0)
 I '$G(MDTIU) S @RESULTS@(0)="-1^NO TIU NOTE FOR THIS STUDY" Q
"RTN","MDRPCNT",62,0)
 D TGET^TIUSRVR1(.RESULTS,+MDTIU)
"RTN","MDRPCNT",63,0)
 Q
"RTN","MDRPCNT1")
0^36^B40746099
"RTN","MDRPCNT1",1,0)
MDRPCNT1 ; HOIFO/NCA - Object RPCs (TMDNOTE) Continued 2;10/29/04  12:20 ;3/12/08  09:15
"RTN","MDRPCNT1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCNT1",3,0)
 ; Integration Agreements:
"RTN","MDRPCNT1",4,0)
 ; IA# 2693 [Subscription] TIU Extractions.
"RTN","MDRPCNT1",5,0)
 ; IA# 3535 [Subscription] Calls to TIUSRVP.
"RTN","MDRPCNT1",6,0)
ADDMSG ; [Procedure] Add message to transaction
"RTN","MDRPCNT1",7,0)
 N MDIEN,MDIENS,MDRET
"RTN","MDRPCNT1",8,0)
 Q:'$G(DATA("TRANSACTION"))
"RTN","MDRPCNT1",9,0)
 Q:$G(DATA("MESSAGE"))=""
"RTN","MDRPCNT1",10,0)
 S MDIEN=+DATA("TRANSACTION"),MDIENS="+1,"_MDIEN_","
"RTN","MDRPCNT1",11,0)
 D NOW^%DTC S DATA("DATE")=%
"RTN","MDRPCNT1",12,0)
 S MDFDA(702.091,MDIENS,.01)=+$O(^MDD(702,+MDIEN,.091,"A"),-1)+1
"RTN","MDRPCNT1",13,0)
 S MDFDA(702.091,MDIENS,.02)=DATA("DATE")
"RTN","MDRPCNT1",14,0)
 S MDFDA(702.091,MDIENS,.03)=$G(DATA("PKG"),"UNKNOWN")
"RTN","MDRPCNT1",15,0)
 S MDFDA(702.091,MDIENS,.09)=DATA("MESSAGE")
"RTN","MDRPCNT1",16,0)
 D UPDATE^DIE("","MDFDA","MDRET")
"RTN","MDRPCNT1",17,0)
 Q
"RTN","MDRPCNT1",18,0)
 ;
"RTN","MDRPCNT1",19,0)
FILEMSG(STUDY,MDPKG,MDSTAT,MDMSG) ; [Procedure] File Study Status and Message.
"RTN","MDRPCNT1",20,0)
 S DATA("TRANSACTION")=STUDY,DATA("PKG")=MDPKG
"RTN","MDRPCNT1",21,0)
 S DATA("MESSAGE")=$P(MDMSG,"^",2)
"RTN","MDRPCNT1",22,0)
 D STATUS(STUDY_",",MDSTAT,$P(MDMSG,"^",2)),ADDMSG
"RTN","MDRPCNT1",23,0)
 Q
"RTN","MDRPCNT1",24,0)
 ;
"RTN","MDRPCNT1",25,0)
STATUS(MDIENS,MDSTAT,MDMSG) ; [Procedure] Update transaction status
"RTN","MDRPCNT1",26,0)
 S MDFDA(702,MDIENS,.08)=$G(MDMSG)
"RTN","MDRPCNT1",27,0)
 S MDFDA(702,MDIENS,.09)=MDSTAT
"RTN","MDRPCNT1",28,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCNT1",29,0)
 Q
"RTN","MDRPCNT1",30,0)
 ;
"RTN","MDRPCNT1",31,0)
SUBMIT(MDDATA,MDDT,MDAU,MDESIG,MDNTL,MDG1) ; [Procedure] Process the Image(s) Submission.
"RTN","MDRPCNT1",32,0)
 ; Input: MDDATA - Study ID
"RTN","MDRPCNT1",33,0)
 ;        MDDT-Date/Time of Document
"RTN","MDRPCNT1",34,0)
 ;        MDA - Author
"RTN","MDRPCNT1",35,0)
 ;        MDESIG - Electronic Signature
"RTN","MDRPCNT1",36,0)
 ;        MDNTL - Note title
"RTN","MDRPCNT1",37,0)
 ;        MDG1 - ^TMP global with the text of the report
"RTN","MDRPCNT1",38,0)
 ; Output: -1^Error Message or
"RTN","MDRPCNT1",39,0)
 ;          1^Successful Message
"RTN","MDRPCNT1",40,0)
 N MDANS,MDRESUL,MDSTUDY,MDG2,RES
"RTN","MDRPCNT1",41,0)
 S MDSTUDY=+MDDATA,(RES,MDRESUL)=""
"RTN","MDRPCNT1",42,0)
 ; Create New TIU Document
"RTN","MDRPCNT1",43,0)
 S MDRESUL=$$NEWTIUN(MDSTUDY,MDDT,MDAU,MDNTL)
"RTN","MDRPCNT1",44,0)
 ; File TIU Error messages
"RTN","MDRPCNT1",45,0)
 I +MDRESUL<0 D  Q RES
"RTN","MDRPCNT1",46,0)
 .D FILEMSG(MDSTUDY,"TIU",2,MDRESUL)
"RTN","MDRPCNT1",47,0)
 .S RES=MDRESUL
"RTN","MDRPCNT1",48,0)
 S MDANS=+MDRESUL
"RTN","MDRPCNT1",49,0)
 ; Update the text of the TIU document
"RTN","MDRPCNT1",50,0)
 S MDG2=@($NA(MDG1))
"RTN","MDRPCNT1",51,0)
 I +$O(@MDG2@(""),-1) D  Q:RES'="" RES
"RTN","MDRPCNT1",52,0)
 .S MDRESUL=$$UPDATE(MDSTUDY,MDANS,MDESIG,MDG2)
"RTN","MDRPCNT1",53,0)
 .I +MDRESUL<0 D  Q
"RTN","MDRPCNT1",54,0)
 ..D FILEMSG(MDSTUDY,"TIU",2,MDRESUL)
"RTN","MDRPCNT1",55,0)
 ..S RES=MDRESUL
"RTN","MDRPCNT1",56,0)
 S RES=MDANS
"RTN","MDRPCNT1",57,0)
 N XX S XX="",XX=$$UPDCONS^MDRPCOT1(+$P($G(^MDD(702,+MDSTUDY,0)),U,5),+$P($G(^MDD(702,+MDSTUDY,0)),U,6))
"RTN","MDRPCNT1",58,0)
 Q RES
"RTN","MDRPCNT1",59,0)
 ;
"RTN","MDRPCNT1",60,0)
GETDATA(STUDY) ; [Function] Return the Necessary data for creating a TIU note.
"RTN","MDRPCNT1",61,0)
 ; Return: Patient DFN_"^"_TIU title_"^"_Hospital Location_"^"_TIU Note
"RTN","MDRPCNT1",62,0)
 ;         IEN_"^"_Consult #_"^"_CP Definition IEN_"^"_Visit String_"^"
"RTN","MDRPCNT1",63,0)
 ;         New Visit Flag
"RTN","MDRPCNT1",64,0)
 ;         or
"RTN","MDRPCNT1",65,0)
 ;         -1^Error Message
"RTN","MDRPCNT1",66,0)
 N DFN,MDCON,MDFN,MDIEN,MDIENS,MDLOC,MDNEWV,MDNOTE,MDNVST,MDPROC,MDVSTR,MDTITL,MDX,MDTST
"RTN","MDRPCNT1",67,0)
 S MDIEN=+STUDY,MDIENS=MDIEN_",",MDNVST=0
"RTN","MDRPCNT1",68,0)
 I $$GET1^DIQ(702,MDIENS,.01)="" Q "-1^No such study entry."
"RTN","MDRPCNT1",69,0)
 ; Get DFN
"RTN","MDRPCNT1",70,0)
 S DFN=$$GET1^DIQ(702,MDIEN,.01,"I")
"RTN","MDRPCNT1",71,0)
 I 'DFN Q "-1^No DFN."
"RTN","MDRPCNT1",72,0)
 ; Get CP Def
"RTN","MDRPCNT1",73,0)
 S MDPROC=$$GET1^DIQ(702,MDIEN,.04,"I")
"RTN","MDRPCNT1",74,0)
 I 'MDPROC Q "-1^No CP Def."
"RTN","MDRPCNT1",75,0)
 ; Get Consult
"RTN","MDRPCNT1",76,0)
 S MDCON=$$GET1^DIQ(702,MDIEN,.05,"I")
"RTN","MDRPCNT1",77,0)
 I 'MDCON Q "-1^No Consult #."
"RTN","MDRPCNT1",78,0)
 ; Get TIU Note Title
"RTN","MDRPCNT1",79,0)
 S MDTITL=$$GET1^DIQ(702.01,+MDPROC_",",.04,"I")
"RTN","MDRPCNT1",80,0)
 I 'MDTITL Q "-1^No TIU Note Title."
"RTN","MDRPCNT1",81,0)
 S MDVSTR=$$GET1^DIQ(702,MDIEN,.07)
"RTN","MDRPCNT1",82,0)
 I MDVSTR=""  Q "-1^No Visit String."
"RTN","MDRPCNT1",83,0)
 I $L(MDVSTR,";")=1 S MDNVST=1,MDVSTR=";"_MDVSTR ; If new visit is selected
"RTN","MDRPCNT1",84,0)
 ; MDLOC is Hospital Location
"RTN","MDRPCNT1",85,0)
 I MDVSTR'="" D
"RTN","MDRPCNT1",86,0)
 .S MDVSTR=$$GETVSTR^MDRPCOT1(DFN,MDVSTR,MDPROC,$$GET1^DIQ(702,MDIEN,.02,"I"))
"RTN","MDRPCNT1",87,0)
 .S MDLOC=$P(MDVSTR,";",1)
"RTN","MDRPCNT1",88,0)
 ; Does TIU doc already exist?
"RTN","MDRPCNT1",89,0)
 ;I $$GET1^DIQ(702,MDIEN,.06,"I") Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+$$GET1^DIQ(702,MDIEN,.06,"I")_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCNT1",90,0)
 ; Does TIU doc exist for previous transaction of this consult?
"RTN","MDRPCNT1",91,0)
 ;I MDCON S MDNOTE=$$PREV(MDCON,MDIEN)
"RTN","MDRPCNT1",92,0)
 S MDNOTE=""
"RTN","MDRPCNT1",93,0)
 Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+MDNOTE_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCNT1",94,0)
 ;
"RTN","MDRPCNT1",95,0)
NEWTIUN(STUDY,MDDT,MDA,MDNT) ; [Function] Create a new TIU for transaction
"RTN","MDRPCNT1",96,0)
 ; Input: STUDY - IENS of CP study entry
"RTN","MDRPCNT1",97,0)
 ;        MDDT - Date of Note
"RTN","MDRPCNT1",98,0)
 ;        MDA - Author
"RTN","MDRPCNT1",99,0)
 ;        MDNT - Note Title
"RTN","MDRPCNT1",100,0)
 ; Return: TIU Document IEN
"RTN","MDRPCNT1",101,0)
 N CTR,DFN,MDCON,MDFDA,MDGST,MDL,MDLOC,MDNOTE,MDPDT,MDPROC,MDPT,MDRESU,MDDTTL,MDTITL,MDTSTR,MDVST,MDVSTR,MDWP S CTR=0,MDGST=+STUDY,MDRESU="" N MDFIL S MDFIL=8925.1
"RTN","MDRPCNT1",102,0)
 ; Get data for TIU Note Creation
"RTN","MDRPCNT1",103,0)
 S (MDTSTR,MDRESU)=$$GETDATA(MDGST),MDDTTL=0
"RTN","MDRPCNT1",104,0)
 ; File Error message
"RTN","MDRPCNT1",105,0)
 I +MDRESU<0 D FILEMSG(MDGST,"CP",2,MDRESU) Q MDRESU
"RTN","MDRPCNT1",106,0)
 I $G(MDTSTR)="" Q "-1^No Data to Create TIU Document"
"RTN","MDRPCNT1",107,0)
 F MDL="DFN","MDTITL","MDLOC","MDNOTE","MDCON","MDPROC","MDVSTR","MDNVST" D
"RTN","MDRPCNT1",108,0)
 .S CTR=CTR+1,@MDL=$P(MDTSTR,"^",CTR)
"RTN","MDRPCNT1",109,0)
 S (MDVST,MDRESU)=""
"RTN","MDRPCNT1",110,0)
 ; If previous TIU document exists, quit
"RTN","MDRPCNT1",111,0)
 ;I MDNOTE Q MDNOTE
"RTN","MDRPCNT1",112,0)
 I 'MDLOC Q "-1^No Hospital Location."
"RTN","MDRPCNT1",113,0)
 ; Create new visit, if no vstring
"RTN","MDRPCNT1",114,0)
 S MDDTTL=+$$FIND1^DIC(MDFIL,"","BOX",MDNT,"B","","MDERR")
"RTN","MDRPCNT1",115,0)
 S MDTITL=$S(+MDDTTL>0:+MDDTTL,1:MDTITL)
"RTN","MDRPCNT1",116,0)
 S MDPDT=$$PDT^MDRPCOT1(MDGST)
"RTN","MDRPCNT1",117,0)
 I 'MDPDT S MDPT=$O(^MDD(703.1,"ASTUDYID",+MDGST,0)),MDPDT=$P($G(^MDD(703.1,+MDPT,0)),U,3)
"RTN","MDRPCNT1",118,0)
 S:'MDPDT MDPDT=$P(MDVSTR,";",2) ; If No D/T Performed grab visit D/T
"RTN","MDRPCNT1",119,0)
 ; Build variables for TIU Call
"RTN","MDRPCNT1",120,0)
 S MDWP(.05)=1 ; Undicated Status
"RTN","MDRPCNT1",121,0)
 S MDWP(1201)=MDDT ; Date/Time Note Created
"RTN","MDRPCNT1",122,0)
 S MDWP(1202)=MDA ; Author of Note
"RTN","MDRPCNT1",123,0)
 S MDWP(1302)=MDA ; Entered By
"RTN","MDRPCNT1",124,0)
 S MDWP(1405)=+MDCON_";GMR(123," ; Package Reference
"RTN","MDRPCNT1",125,0)
 S MDWP(70201)=5 ; Default Procedure Summary Code "Machine Resulted"
"RTN","MDRPCNT1",126,0)
 I MDPDT S MDWP(70202)=MDPDT ; Date/Time Performed
"RTN","MDRPCNT1",127,0)
 ; File PCE Error message
"RTN","MDRPCNT1",128,0)
 I MDNVST S MDRESU=$$EN1^MDPCE(MDGST,MDPDT,MDPROC,$P(MDVSTR,";",3),"P") I +MDRESU S MDVST=+MDRESU,MDVSTR=$P(MDRESU,"^",2)
"RTN","MDRPCNT1",129,0)
 I +MDRESU<0 D FILEMSG(MDGST,"PCE",2,$P(MDRESU,"^",2)) Q MDRESU
"RTN","MDRPCNT1",130,0)
 ; Create the TIU note stub
"RTN","MDRPCNT1",131,0)
 S MDNOTE="" D MAKE^TIUSRVP(.MDNOTE,DFN,MDTITL,$P(MDVSTR,";",2),MDLOC,$S(MDVST:MDVST,1:""),.MDWP,MDVSTR,1,1)
"RTN","MDRPCNT1",132,0)
 I '(+MDNOTE) S $P(MDNOTE,"^")=-1 Q MDNOTE
"RTN","MDRPCNT1",133,0)
 ;S MDFDA(702,STUDY_",",.06)=+MDNOTE
"RTN","MDRPCNT1",134,0)
 S MDFDA(702,STUDY_",",.08)=""
"RTN","MDRPCNT1",135,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCNT1",136,0)
 D UPD^MDKUTLR(STUDY,+MDNOTE)
"RTN","MDRPCNT1",137,0)
 Q MDNOTE
"RTN","MDRPCNT1",138,0)
 ;
"RTN","MDRPCNT1",139,0)
UPDATE(STUDY,MDA,SIGN,MDGLB) ; Update the TIU document with the text
"RTN","MDRPCNT1",140,0)
 N MDK,MDNOTE,MDPPR,MDRESU,MDS,MDTI,MDTIUER,MDWP,MDV,MDV1 S (MDNOTE,MDTIUER)="" K MDWP,^TMP("MDTIUST",$J)
"RTN","MDRPCNT1",141,0)
 F MDK=0:0 S MDK=$O(@MDGLB@(MDK)) Q:'MDK  S MDWP("TEXT",MDK,0)=$G(@MDGLB@(MDK))
"RTN","MDRPCNT1",142,0)
 S MDTI=MDA
"RTN","MDRPCNT1",143,0)
 S MDWP(.05)=5
"RTN","MDRPCNT1",144,0)
 D UPDATE^TIUSRVP(.MDNOTE,+MDTI,.MDWP,1)
"RTN","MDRPCNT1",145,0)
 I '+MDNOTE S MDNOTE="-1^"_$P(MDNOTE,"^",2) Q MDNOTE
"RTN","MDRPCNT1",146,0)
 ; Sign TIU Document
"RTN","MDRPCNT1",147,0)
 S MDS=$$SIGN(MDTI,SIGN) I MDS<0 Q MDS
"RTN","MDRPCNT1",148,0)
 Q 1
"RTN","MDRPCNT1",149,0)
SIGN(MDTIUIN,MDSIGN) ; Sign the TIU Document
"RTN","MDRPCNT1",150,0)
 ; [Function] TIU SIGN RECORD
"RTN","MDRPCNT1",151,0)
 ;Input Parameters:
"RTN","MDRPCNT1",152,0)
 ;   1.  TIUIEN [Literal/Required] TIU internal Entry Number
"RTN","MDRPCNT1",153,0)
 ;   2.  MDSIGN [Literal/Required] User Signature
"RTN","MDRPCNT1",154,0)
 N MDSRES,X
"RTN","MDRPCNT1",155,0)
 S MDSRES=""
"RTN","MDRPCNT1",156,0)
 D SIGN^TIUSRVP(.MDSRES,MDTIUIN,MDSIGN)
"RTN","MDRPCNT1",157,0)
 I +MDSRES>0 Q "-1^"_$P(MDSRES,"^",2)
"RTN","MDRPCNT1",158,0)
 Q 1
"RTN","MDRPCNT1",159,0)
 ;
"RTN","MDRPCNT1",160,0)
PREV(MDC,MDS) ; [Function] Return the Previous TIU document.
"RTN","MDRPCNT1",161,0)
 N MDNEWV,MDDOC,MDTRAN,MDTIUER,MDTST
"RTN","MDRPCNT1",162,0)
 S (MDDOC,MDNEWV,MDTRAN,MDTIUER,MDTST)="" K ^TMP("MDTIUST",$J)
"RTN","MDRPCNT1",163,0)
 F  S MDTRAN=$O(^MDD(702,"ACON",MDC,MDTRAN)) Q:'MDTRAN  D  Q:'MDTRAN
"RTN","MDRPCNT1",164,0)
 .I $P(^MDD(702,MDTRAN,0),U,6) D
"RTN","MDRPCNT1",165,0)
 ..D EXTRACT^TIULQ($P(^MDD(702,MDTRAN,0),U,6),"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1406") Q:+MDTIUER
"RTN","MDRPCNT1",166,0)
 ..S MDTST=$G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),.05,"E"))
"RTN","MDRPCNT1",167,0)
 ..I MDTST'="UNDICTATED"&(MDTST'="UNSIGNED") K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCNT1",168,0)
 ..I MDTST="UNSIGNED"&'($G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),1406,"I"))) K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCNT1",169,0)
 ..S MDDOC=$P(^MDD(702,MDTRAN,0),U,6),MDNEWV=$P(^MDD(702,MDTRAN,0),U,7)
"RTN","MDRPCNT1",170,0)
 ..Q:'MDS
"RTN","MDRPCNT1",171,0)
 ..S MDFDA(702,MDS_",",.06)=MDDOC
"RTN","MDRPCNT1",172,0)
 ..S MDFDA(702,MDS_",",.07)=MDNEWV
"RTN","MDRPCNT1",173,0)
 ..D FILE^DIE("","MDFDA")
"RTN","MDRPCNT1",174,0)
 ..S MDTRAN=""
"RTN","MDRPCNT1",175,0)
 Q MDDOC
"RTN","MDRPCOG")
0^47^B23343248
"RTN","MDRPCOG",1,0)
MDRPCOG ; HOIFO/DP - CP Gateway ; [01-09-2003 15:20]
"RTN","MDRPCOG",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCOG",3,0)
 ; Description:
"RTN","MDRPCOG",4,0)
 ; This is the main routine that manages the CLINICAL PROCEDURES Gateway functions.  
"RTN","MDRPCOG",5,0)
 ; Access to these functions is controlled via the MD GATEWAY RPC.
"RTN","MDRPCOG",6,0)
 ;
"RTN","MDRPCOG",7,0)
 ; Integration Agreements:
"RTN","MDRPCOG",8,0)
 ; IA# 10097 [Supported] %ZOSV calls
"RTN","MDRPCOG",9,0)
 ; IA# 10103 [Supported] Calls to XLFDT
"RTN","MDRPCOG",10,0)
 ; IA# 2263 [Supported] Calls to XPAR
"RTN","MDRPCOG",11,0)
 ;
"RTN","MDRPCOG",12,0)
CLEANUP ; [Procedure] Cleanup a past results report
"RTN","MDRPCOG",13,0)
 F X=0:0 S X=$O(^MDD(703.1,DATA,.1,X)) Q:'X  D
"RTN","MDRPCOG",14,0)
 .S:$G(^MDD(703.1,DATA,.1,X,.1))]"" MDFDA(703.11,X_","_DATA_",",.1)="@"
"RTN","MDRPCOG",15,0)
 .S:$O(^MDD(703.1,DATA,.1,X,.2,0)) MDFDA(703.11,X_","_DATA_",",.2)="@"
"RTN","MDRPCOG",16,0)
 D:$D(MDFDA) FILE^DIE("K","MDFDA","MDERR")
"RTN","MDRPCOG",17,0)
 I $D(MDERR) D ERROR^MDRPCU(RESULTS,.MDERR) Q
"RTN","MDRPCOG",18,0)
 ; Manual cleanup of the empty UNC nodes and WP root
"RTN","MDRPCOG",19,0)
 F X=0:0 S X=$O(^MDD(703.1,DATA,.1,X)) Q:'X  D
"RTN","MDRPCOG",20,0)
 .K ^MDD(703.1,DATA,.1,X,.1)
"RTN","MDRPCOG",21,0)
 .K ^MDD(703.1,DATA,.1,X,.2)
"RTN","MDRPCOG",22,0)
 S @RESULTS@(0)="1^Item purged"
"RTN","MDRPCOG",23,0)
 Q
"RTN","MDRPCOG",24,0)
 ;
"RTN","MDRPCOG",25,0)
DONE ; [Procedure] Done processing, Mark study status
"RTN","MDRPCOG",26,0)
 S MDFDA(703.1,+DATA_",",.09)=$G(P1,"U")
"RTN","MDRPCOG",27,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOG",28,0)
 Q
"RTN","MDRPCOG",29,0)
 ;
"RTN","MDRPCOG",30,0)
GETATT ; [Procedure] Get attachments for study
"RTN","MDRPCOG",31,0)
 F X=0:0 S X=$O(^MDD(703.1,+DATA,.1,X)) Q:'X  D
"RTN","MDRPCOG",32,0)
 .S Y=+$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOG",33,0)
 .S @RESULTS@(Y)="703.11;"_X_U_^MDD(703.1,+DATA,.1,X,0)
"RTN","MDRPCOG",34,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOG",35,0)
 Q
"RTN","MDRPCOG",36,0)
 ;
"RTN","MDRPCOG",37,0)
GETOLD ; [Procedure] Returns old results by date
"RTN","MDRPCOG",38,0)
 ; Variables:
"RTN","MDRPCOG",39,0)
 ;  LOGDATE: [Private] Loop variable
"RTN","MDRPCOG",40,0)
 ;  STOPDATE: [Private] Date to stop retrieving entries
"RTN","MDRPCOG",41,0)
 ;
"RTN","MDRPCOG",42,0)
 ; New private variables
"RTN","MDRPCOG",43,0)
 NEW LOGDATE,STOPDATE,MDX
"RTN","MDRPCOG",44,0)
 S LOGDATE=+DATA,STOPDATE=+$P(DATA,U,2)+.2359
"RTN","MDRPCOG",45,0)
 F  S LOGDATE=$O(^MDD(703.1,"ADTP",LOGDATE)) W !,"-->",LOGDATE Q:'LOGDATE!(LOGDATE>STOPDATE)  D  Q:Y>50
"RTN","MDRPCOG",46,0)
 .F MDX=0:0 S MDX=$O(^MDD(703.1,"ADTP",LOGDATE,MDX)) Q:'MDX  D
"RTN","MDRPCOG",47,0)
 ..I '$$CHECK(MDX) Q
"RTN","MDRPCOG",48,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOG",49,0)
 ..S @RESULTS@(Y)="703.1;"_MDX_U_$G(^MDD(703.1,MDX,0))
"RTN","MDRPCOG",50,0)
 S:'LOGDATE!(LOGDATE>STOPDATE) LOGDATE=STOPDATE
"RTN","MDRPCOG",51,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_LOGDATE_U_$$FMTE^XLFDT(LOGDATE)
"RTN","MDRPCOG",52,0)
 Q
"RTN","MDRPCOG",53,0)
 ;
"RTN","MDRPCOG",54,0)
GETPAR ; [Procedure] Get a parameter value for an RPC Call
"RTN","MDRPCOG",55,0)
 S @RESULTS@(0)=$$PARVAL(DATA)
"RTN","MDRPCOG",56,0)
 Q
"RTN","MDRPCOG",57,0)
 ;
"RTN","MDRPCOG",58,0)
GETTXT ; [Procedure] Get attachment text for processing
"RTN","MDRPCOG",59,0)
 N X,STUDY,ATT
"RTN","MDRPCOG",60,0)
 S X=0,STUDY=$P(DATA,",",2),ATT=+DATA
"RTN","MDRPCOG",61,0)
 I '$O(^MDD(703.1,STUDY,.1,ATT,.2,0)) S @RESULTS@(0)="-1^No Data" Q
"RTN","MDRPCOG",62,0)
 F  S X=$O(^MDD(703.1,STUDY,.1,ATT,.2,X)) Q:'X  S @RESULTS@(X)=^(X,0)
"RTN","MDRPCOG",63,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOG",64,0)
 Q
"RTN","MDRPCOG",65,0)
 ;
"RTN","MDRPCOG",66,0)
NEXT ; [Procedure] Get the next study to process
"RTN","MDRPCOG",67,0)
 S Y=+$O(^MDD(703.1,"ASTATUS","P",$G(DATA)))
"RTN","MDRPCOG",68,0)
 S @RESULTS@(0)=$S($D(^MDD(703.1,Y,0)):"703.1;"_Y_U_^MDD(703.1,Y,0),1:0)
"RTN","MDRPCOG",69,0)
 Q
"RTN","MDRPCOG",70,0)
 ;
"RTN","MDRPCOG",71,0)
PARVAL(INSTANCE) ; [Procedure] Extrinsic get of parameter values
"RTN","MDRPCOG",72,0)
 ; Input parameters
"RTN","MDRPCOG",73,0)
 ;  1. INSTANCE [Literal/Required] XPAR instance
"RTN","MDRPCOG",74,0)
 ;
"RTN","MDRPCOG",75,0)
 Q $$GET^XPAR("SYS","MD GATEWAY",INSTANCE)
"RTN","MDRPCOG",76,0)
 ;
"RTN","MDRPCOG",77,0)
POLL ; [Procedure] Returns server time and flag for studies to process
"RTN","MDRPCOG",78,0)
 I $$PARVAL("Shutdown Flag")]"" D  Q
"RTN","MDRPCOG",79,0)
 .S @RESULTS@(0)="-1^SHUTDOWN"
"RTN","MDRPCOG",80,0)
 .D SETPAR("Shutdown Flag","")
"RTN","MDRPCOG",81,0)
 S @RESULTS@(0)=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MDRPCOG",82,0)
 S @RESULTS@(1)=$D(^MDD(703.1,"ASTATUS","P"))
"RTN","MDRPCOG",83,0)
 Q
"RTN","MDRPCOG",84,0)
 ;
"RTN","MDRPCOG",85,0)
POLLER(RESULTS) ; [Procedure] Non-Disk activity poller
"RTN","MDRPCOG",86,0)
 ; With the exception of a shutdown request pending, this stand alone RPC will operate 
"RTN","MDRPCOG",87,0)
 ; without creating any disk activity and not crash during backup operations on the main 
"RTN","MDRPCOG",88,0)
 ; VistA server.
"RTN","MDRPCOG",89,0)
 ;
"RTN","MDRPCOG",90,0)
 ; Input parameters
"RTN","MDRPCOG",91,0)
 ;  1. RESULTS [Reference/Required] 
"RTN","MDRPCOG",92,0)
 ;
"RTN","MDRPCOG",93,0)
 I $$PARVAL("Shutdown Flag")]"" D  Q
"RTN","MDRPCOG",94,0)
 .S RESULTS(0)="-1^SHUTDOWN"
"RTN","MDRPCOG",95,0)
 .D SETPAR("Shutdown Flag","")
"RTN","MDRPCOG",96,0)
 S RESULTS(0)=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MDRPCOG",97,0)
 S RESULTS(1)=$D(^MDD(703.1,"ASTATUS","P"))
"RTN","MDRPCOG",98,0)
 Q
"RTN","MDRPCOG",99,0)
 ;
"RTN","MDRPCOG",100,0)
RPC(RESULTS,OPTION,DATA,P1) ; [Procedure] 
"RTN","MDRPCOG",101,0)
 ; Input parameters
"RTN","MDRPCOG",102,0)
 ;  1. RESULTS [Literal/Required] RPC Return Array
"RTN","MDRPCOG",103,0)
 ;  2. OPTION [Literal/Required] Gateway Option to execute
"RTN","MDRPCOG",104,0)
 ;  3. DATA [Literal/Required] Other information
"RTN","MDRPCOG",105,0)
 ;  4. P1 [Literal/Required] Overflow variable
"RTN","MDRPCOG",106,0)
 ;
"RTN","MDRPCOG",107,0)
 ; Variables:
"RTN","MDRPCOG",108,0)
 ;  MDENV: [Private] Server environment variable
"RTN","MDRPCOG",109,0)
 ;  MDERR: [Private] Fileman return array
"RTN","MDRPCOG",110,0)
 ;  MDFDA: [Private] Fileman FDA
"RTN","MDRPCOG",111,0)
 ;
"RTN","MDRPCOG",112,0)
 ; New private variables
"RTN","MDRPCOG",113,0)
 NEW MDENV,MDERR,MDFDA
"RTN","MDRPCOG",114,0)
 S RESULTS=$NA(^TMP("MDRPCOB",$J)) K @RESULTS
"RTN","MDRPCOG",115,0)
 D @OPTION
"RTN","MDRPCOG",116,0)
 Q
"RTN","MDRPCOG",117,0)
 ;
"RTN","MDRPCOG",118,0)
RUNNING ; [Procedure] Returns 0/1 and message on running status
"RTN","MDRPCOG",119,0)
 ; Note: If lock CAN be obtained, then gateway is NOT running
"RTN","MDRPCOG",120,0)
 L +^MDD("CPGATEWAY"):1 E  S @RESULTS@(0)="1^RUNNING" Q
"RTN","MDRPCOG",121,0)
 L -(^MDD("CPGATEWAY")) S @RESULTS@(0)="0^NOT RUNNING"
"RTN","MDRPCOG",122,0)
 Q
"RTN","MDRPCOG",123,0)
 ;
"RTN","MDRPCOG",124,0)
SETFILE ; [Procedure] Set filename of new attachment
"RTN","MDRPCOG",125,0)
 S MDFDA(703.11,$P(DATA,U,1),.02)=$P(DATA,U,2)
"RTN","MDRPCOG",126,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOG",127,0)
 Q
"RTN","MDRPCOG",128,0)
 ;
"RTN","MDRPCOG",129,0)
SETPAR(INSTANCE,VALUE) ; [Procedure] Set value into XPAR parameter
"RTN","MDRPCOG",130,0)
 ; Input parameters
"RTN","MDRPCOG",131,0)
 ;  1. INSTANCE [Literal/Required] Parameter Instance
"RTN","MDRPCOG",132,0)
 ;  2. VALUE [Literal/Required] Parameter Value
"RTN","MDRPCOG",133,0)
 ;
"RTN","MDRPCOG",134,0)
 D EN^XPAR("SYS","MD GATEWAY",INSTANCE,VALUE)
"RTN","MDRPCOG",135,0)
 Q
"RTN","MDRPCOG",136,0)
 ;
"RTN","MDRPCOG",137,0)
START ; [Procedure] Can we begin?
"RTN","MDRPCOG",138,0)
 ; Ensure only one Gateway per system by locking the phantom global node
"RTN","MDRPCOG",139,0)
 L +^MDD("CPGATEWAY"):1
"RTN","MDRPCOG",140,0)
 I '$T D STATUS S @RESULTS@(0)="-1^FAIL" Q
"RTN","MDRPCOG",141,0)
 ; Clear all process settings
"RTN","MDRPCOG",142,0)
 D NDEL^XPAR("SYS","MD GATEWAY")
"RTN","MDRPCOG",143,0)
 S DATA=$G(DATA,"30^1000") ; Default poll interval and log entries
"RTN","MDRPCOG",144,0)
 D SETPAR("Polling Interval",+$P(DATA,U,1))
"RTN","MDRPCOG",145,0)
 D SETPAR("Maximum Log Entries",+$P(DATA,U,2))
"RTN","MDRPCOG",146,0)
 D SETPAR("Job ID",$J)
"RTN","MDRPCOG",147,0)
 D SETPAR("Started At",$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MDRPCOG",148,0)
 D SETPAR("Started By",$$GET1^DIQ(200,DUZ_",",.01))
"RTN","MDRPCOG",149,0)
 D GETENV^%ZOSV S MDENV=Y
"RTN","MDRPCOG",150,0)
 D SETPAR("UCI",$P(MDENV,U,1))
"RTN","MDRPCOG",151,0)
 D SETPAR("Volume",$P(MDENV,U,2))
"RTN","MDRPCOG",152,0)
 D SETPAR("Node",$P(MDENV,U,3))
"RTN","MDRPCOG",153,0)
 D SETNM^%ZOSV("CP Gateway")
"RTN","MDRPCOG",154,0)
 S @RESULTS@(0)="1^OK"
"RTN","MDRPCOG",155,0)
 Q
"RTN","MDRPCOG",156,0)
 ;
"RTN","MDRPCOG",157,0)
STATUS ; [Procedure] Return status of BP
"RTN","MDRPCOG",158,0)
 D GETLST^XPAR(.MDRET,"SYS","MD GATEWAY","Q")
"RTN","MDRPCOG",159,0)
 F X=0:0 S X=$O(MDRET(X)) Q:'X  S @RESULTS@(X)=MDRET(X)
"RTN","MDRPCOG",160,0)
 Q
"RTN","MDRPCOG",161,0)
 ;
"RTN","MDRPCOG",162,0)
STOP ; [Procedure] Flag client to stop via cal to POLL
"RTN","MDRPCOG",163,0)
 D SETPAR("Shutdown Flag","Yes")
"RTN","MDRPCOG",164,0)
 Q
"RTN","MDRPCOG",165,0)
 ;
"RTN","MDRPCOG",166,0)
XFERDIR ; [Procedure] Return Imaging xfer directory
"RTN","MDRPCOG",167,0)
 S @RESULTS@(0)=$$GET^XPAR("SYS","MD IMAGING XFER")
"RTN","MDRPCOG",168,0)
 Q
"RTN","MDRPCOG",169,0)
 ;
"RTN","MDRPCOG",170,0)
CHECK(MDRI) ; Check if Upload Value and Upload Text has already been purged.
"RTN","MDRPCOG",171,0)
 N MDFLG S MDFLG=0
"RTN","MDRPCOG",172,0)
 F X=0:0 S X=$O(^MDD(703.1,MDRI,.1,X)) Q:'X  D  Q:MDFLG
"RTN","MDRPCOG",173,0)
 .S:$G(^MDD(703.1,MDRI,.1,X,.1))]"" MDFLG=1
"RTN","MDRPCOG",174,0)
 .S:$O(^MDD(703.1,MDRI,.1,X,.2,0)) MDFLG=1
"RTN","MDRPCOG",175,0)
 Q MDFLG
"RTN","MDRPCOP")
0^26^B73541480
"RTN","MDRPCOP",1,0)
MDRPCOP ; HOIFO/DP - Object RPCs (TMDPatient) ;3/12/08  09:16
"RTN","MDRPCOP",2,0)
 ;;1.0;CLINICAL PROCEDURES;**4,6**;Apr 01, 2004;Build 102
"RTN","MDRPCOP",3,0)
 ; Integration Agreements:
"RTN","MDRPCOP",4,0)
 ; IA# 2263 [Supported] XPAR calls
"RTN","MDRPCOP",5,0)
 ; IA# 3027 [Supported] Calls to DGSEC4
"RTN","MDRPCOP",6,0)
 ; IA# 2981 [Subscription] Calls to GUI~GMRCP5
"RTN","MDRPCOP",7,0)
 ; IA# 2548 [Supported] ACRP Interface Toolkit APIs.
"RTN","MDRPCOP",8,0)
 ; IA# 2552 [Supported] AIT API to provide outpatient encounter data.
"RTN","MDRPCOP",9,0)
 ; IA# 10061 [Supported] VADPT calls.
"RTN","MDRPCOP",10,0)
 ; IA# 3468 [Subscription] Use GMRCCP APIs.
"RTN","MDRPCOP",11,0)
 ; IA# 10103 [Supported] Call to XLFDT
"RTN","MDRPCOP",12,0)
 ; IA# 10039 [Supported] Ward Location File (#42) Access.
"RTN","MDRPCOP",13,0)
 ; IA# 10035 [Supported] DPT references
"RTN","MDRPCOP",14,0)
 ; IA# 3613 [Private] GETVST^MDRPCOP API call
"RTN","MDRPCOP",15,0)
 ; IA# 10099 [Supported] GMRADPT call
"RTN","MDRPCOP",16,0)
 ; IA# 1096 [Controlled Subscription] ^DGPM("ATID1" x-ref loop
"RTN","MDRPCOP",17,0)
 ; IA# 358 [Controlled Subscription] FILE 405 references
"RTN","MDRPCOP",18,0)
 ;
"RTN","MDRPCOP",19,0)
ADD(X) ; [Procedure] Add line to @RESULTS@(...
"RTN","MDRPCOP",20,0)
 S @RESULTS@(+$O(@RESULTS@(""),-1)+1)=X
"RTN","MDRPCOP",21,0)
 Q
"RTN","MDRPCOP",22,0)
 ;
"RTN","MDRPCOP",23,0)
ALLERGY ; [Procedure] Return Allergies
"RTN","MDRPCOP",24,0)
 D EN1^GMRADPT I '$O(GMRAL(0)) D  Q
"RTN","MDRPCOP",25,0)
 .I $G(GMRAL)="" S @RESULTS@(0)="No Allergy Assessment"
"RTN","MDRPCOP",26,0)
 .I $G(GMRAL)=0 S @RESULTS@(0)="No Known Allergies"
"RTN","MDRPCOP",27,0)
 S @RESULTS@(0)="This patient has the following allergy(ies): "
"RTN","MDRPCOP",28,0)
 F X=0:0 S X=$O(GMRAL(X)) Q:'X  D
"RTN","MDRPCOP",29,0)
 .S @RESULTS@(X)=$P($G(GMRAL(X)),U,2)
"RTN","MDRPCOP",30,0)
 Q
"RTN","MDRPCOP",31,0)
 ;
"RTN","MDRPCOP",32,0)
CHKIN ; [Procedure] Check In Study
"RTN","MDRPCOP",33,0)
 F X=2:1:5 D
"RTN","MDRPCOP",34,0)
 .I $P(DATA,U,X)]"" S MDFDA(702,$P(DATA,U,1),$P("^.04^.05^.11^.07",U,X))=$P(DATA,U,X)
"RTN","MDRPCOP",35,0)
 S MDFDA(702,$P(DATA,U,1),.09)=4  ; Status = Checked-In
"RTN","MDRPCOP",36,0)
 I $P(DATA,U,1)="+1," D
"RTN","MDRPCOP",37,0)
 .S MDFDA(702,"+1,",.01)=DFN
"RTN","MDRPCOP",38,0)
 .S MDFDA(702,"+1,",.02)=$$NOW^XLFDT()
"RTN","MDRPCOP",39,0)
 .S MDFDA(702,"+1,",.03)=DUZ
"RTN","MDRPCOP",40,0)
 .D UPDATE^DIE("","MDFDA","MDIEN","MDERR") Q:$D(MDERR)
"RTN","MDRPCOP",41,0)
 .S MDIENS=MDIEN(1)_",",MDHL7=$$SUB^MDHL7B(MDIEN(1))
"RTN","MDRPCOP",42,0)
 .I +MDHL7=-1 S MDFDA(702,MDIENS,.09)=2,MDFDA(702,MDIENS,.08)=$P(MDHL7,U,2)
"RTN","MDRPCOP",43,0)
 .I +MDHL7=1 S MDFDA(702,MDIENS,.09)=5,MDFDA(702,MDIENS,.08)=""
"RTN","MDRPCOP",44,0)
 .D:$D(MDFDA) FILE^DIE("","MDFDA","MDERR")
"RTN","MDRPCOP",45,0)
 I $P(DATA,U,1)'="+1," D
"RTN","MDRPCOP",46,0)
 .D FILE^DIE("","MDFDA","MDERR") Q:$D(MDERR)
"RTN","MDRPCOP",47,0)
 .S MDIENS=+DATA_","
"RTN","MDRPCOP",48,0)
 .S MDHL7=$$SUB^MDHL7B(+MDIENS)
"RTN","MDRPCOP",49,0)
 .I +MDHL7=-1 S MDFDA(702,MDIENS,.09)=2,MDFDA(702,MDIENS,.08)=$P(MDHL7,U,2)
"RTN","MDRPCOP",50,0)
 .I +MDHL7=1 S MDFDA(702,MDIENS,.09)=5,MDFDA(702,MDIENS,.08)=""
"RTN","MDRPCOP",51,0)
 .D:$D(MDFDA) FILE^DIE("","MDFDA","MDERR")
"RTN","MDRPCOP",52,0)
 ; Patch 6 - Renal Check-In
"RTN","MDRPCOP",53,0)
 D:+$G(MDIENS)
"RTN","MDRPCOP",54,0)
 .S X=+$P(^MDD(702,+MDIENS,0),U,4) Q:'X
"RTN","MDRPCOP",55,0)
 .I $P(^MDS(702.01,X,0),U,6)=2 D  Q  ; Renal Check-In
"RTN","MDRPCOP",56,0)
 ..D CP^MDKUTLR(+MDIENS)
"RTN","MDRPCOP",57,0)
 ..S MDFDA(702,+MDIENS_",",.09)=5
"RTN","MDRPCOP",58,0)
 ..D FILE^DIE("","MDFDA","MDERR")
"RTN","MDRPCOP",59,0)
 ; Patch 6 - Renal Check-In
"RTN","MDRPCOP",60,0)
 I '$D(MDERR) S @RESULTS@(0)="1^OK" Q
"RTN","MDRPCOP",61,0)
 D ERROR^MDRPCU(RESULTS,.MDERR)
"RTN","MDRPCOP",62,0)
 Q
"RTN","MDRPCOP",63,0)
 ;
"RTN","MDRPCOP",64,0)
DISPCON ; [Procedure] Display a consult
"RTN","MDRPCOP",65,0)
 K ^TMP("GMRC",$J)
"RTN","MDRPCOP",66,0)
 D GUI^GMRCP5(.RESULTS,DATA)
"RTN","MDRPCOP",67,0)
 Q
"RTN","MDRPCOP",68,0)
 ;
"RTN","MDRPCOP",69,0)
GETCONS ; [Procedure] Get available consults for patient
"RTN","MDRPCOP",70,0)
 K ^TMP("MDTMP",$J) N MDCDT,MDDY,X1,X2,X
"RTN","MDRPCOP",71,0)
 S MDDY=$$GET^XPAR("SYS","MD COMPL PROC DISPLAY DAYS",1)
"RTN","MDRPCOP",72,0)
 S X1=DT,X2=-$S(MDDY>0:+MDDY,1:365) D C^%DTC S MDCDT=X
"RTN","MDRPCOP",73,0)
 D CPLIST^GMRCCP(DFN,,$NA(^TMP("MDTMP",$J)))
"RTN","MDRPCOP",74,0)
 S MDX=0
"RTN","MDRPCOP",75,0)
 F  S MDX=$O(^TMP("MDTMP",$J,MDX)) Q:'MDX  D:"saprc"[$P(^(MDX),U,4)
"RTN","MDRPCOP",76,0)
 .S Y="123;"_$P(^TMP("MDTMP",$J,MDX),U,5)
"RTN","MDRPCOP",77,0)
 .I $P($G(^TMP("MDTMP",$J,MDX)),U,4)="c" Q:$P($G(^TMP("MDTMP",$J,MDX)),U,1)<MDCDT
"RTN","MDRPCOP",78,0)
 .F X=2,3,4,1,6,5 S Y=Y_U_$P(^TMP("MDTMP",$J,MDX),U,X)
"RTN","MDRPCOP",79,0)
 .S Y=Y_U_+$O(^MDD(702,"ACON",+$P(^TMP("MDTMP",$J,MDX),U,5)))
"RTN","MDRPCOP",80,0)
 .;
"RTN","MDRPCOP",81,0)
 .; Patch MD*1.0*4 - Return number of times checked in at piece 9
"RTN","MDRPCOP",82,0)
 .;
"RTN","MDRPCOP",83,0)
 .S (X,Z)=0,MDY=+$P(^TMP("MDTMP",$J,MDX),U,5)
"RTN","MDRPCOP",84,0)
 .F  S X=$O(^MDD(702,"ACON",MDY,X)) Q:'X  S Z=Z+1
"RTN","MDRPCOP",85,0)
 .S $P(Y,U,9)=Z
"RTN","MDRPCOP",86,0)
 .;
"RTN","MDRPCOP",87,0)
 .; End Patch MD*1.0*4
"RTN","MDRPCOP",88,0)
 .;
"RTN","MDRPCOP",89,0)
 .D ADD(Y)
"RTN","MDRPCOP",90,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOP",91,0)
 K ^TMP("MDTMP",$J)
"RTN","MDRPCOP",92,0)
 Q
"RTN","MDRPCOP",93,0)
 ;
"RTN","MDRPCOP",94,0)
GETHDR ; [Procedure] Get Pt Header
"RTN","MDRPCOP",95,0)
 S DFNIENS=DFN_","
"RTN","MDRPCOP",96,0)
 S @RESULTS@(0)=$$GET1^DIQ(2,DFNIENS,.01)_"  "_$$GET1^DIQ(2,DFNIENS,.1)_" "_$$GET1^DIQ(2,DFNIENS,.101)
"RTN","MDRPCOP",97,0)
 S @RESULTS@(1)=$$GET1^DIQ(2,DFNIENS,.09)_"  "_$$GET1^DIQ(2,DFNIENS,.02)_"  "_$$GET1^DIQ(2,DFNIENS,.03)_" ("_$$GET1^DIQ(2,DFNIENS,.033)_")"
"RTN","MDRPCOP",98,0)
 Q
"RTN","MDRPCOP",99,0)
 ;
"RTN","MDRPCOP",100,0)
GETOBJ ; [Procedure] Get information for TMDPATIENT object
"RTN","MDRPCOP",101,0)
 D DEM^VADPT,INP^VADPT
"RTN","MDRPCOP",102,0)
 S @RESULTS@(0)=DFN
"RTN","MDRPCOP",103,0)
 S @RESULTS@(1)=VADM(1)
"RTN","MDRPCOP",104,0)
 S @RESULTS@(2)=$P(VADM(2),U,2)
"RTN","MDRPCOP",105,0)
 S @RESULTS@(3)=$P(VADM(3),U,2)
"RTN","MDRPCOP",106,0)
 S @RESULTS@(4)=VADM(4)
"RTN","MDRPCOP",107,0)
 S @RESULTS@(5)=$P(VADM(5),U,2)
"RTN","MDRPCOP",108,0)
 I VAIN(4)]"" S @RESULTS@(6)="Ward: "_$P(VAIN(4),U,2)_" Rm: "_VAIN(5)
"RTN","MDRPCOP",109,0)
 E  S @RESULTS@(6)=""
"RTN","MDRPCOP",110,0)
 Q
"RTN","MDRPCOP",111,0)
 ;
"RTN","MDRPCOP",112,0)
GETRES ; [Procedure] Get results report
"RTN","MDRPCOP",113,0)
 F MDX=0:0 S MDX=$O(^MDD(703.1,"ADFN",DFN,MDX)) Q:'MDX  D
"RTN","MDRPCOP",114,0)
 .S MDINST=+$P($G(^MDD(703.1,MDX,0)),U,4)
"RTN","MDRPCOP",115,0)
 .I $G(DATA) Q:'$D(^MDS(702.01,DATA,.1,"B",MDINST))
"RTN","MDRPCOP",116,0)
 .S MDY=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOP",117,0)
 .S @RESULTS@(MDY)="703.1;"_MDX_U_^MDD(703.1,MDX,0)
"RTN","MDRPCOP",118,0)
 .S Y=$P(^MDD(703.1,MDX,0),U,3) D D^DIQ
"RTN","MDRPCOP",119,0)
 .S $P(@RESULTS@(MDY),U,11)=Y
"RTN","MDRPCOP",120,0)
 .S Y=$P($G(^MDS(702.09,+$P(^MDD(703.1,MDX,0),U,4),0)),U)
"RTN","MDRPCOP",121,0)
 .S $P(@RESULTS@(MDY),U,12)=Y
"RTN","MDRPCOP",122,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOP",123,0)
 Q
"RTN","MDRPCOP",124,0)
 ;
"RTN","MDRPCOP",125,0)
GETTRAN ; [Procedure] Get a patients transactions
"RTN","MDRPCOP",126,0)
 K ^TMP("MDTMP",$J),^TMP("MDCONL",$J) N MDCDT,MDCOM,MDMULT,MDNUM,MDREQ,MDREQDT,MDYR,X1,X2,X
"RTN","MDRPCOP",127,0)
 S MDNUM=$$GET^XPAR("SYS","MD DAYS TO RETAIN COM STUDY",1) S MDCOM=0
"RTN","MDRPCOP",128,0)
 I +MDNUM>0 S X1=DT,X2=-MDNUM D C^%DTC S MDCOM=X
"RTN","MDRPCOP",129,0)
 D CPLIST^GMRCCP(DFN,,$NA(^TMP("MDTMP",$J)))
"RTN","MDRPCOP",130,0)
 S X1=DT,X2=-365 D C^%DTC S MDCDT=X
"RTN","MDRPCOP",131,0)
 S MDX=0 F  S MDX=$O(^TMP("MDTMP",$J,MDX)) Q:'MDX  D:"saprc"[$P(^(MDX),U,4)
"RTN","MDRPCOP",132,0)
 .I $P($G(^TMP("MDTMP",$J,MDX)),U,4)="c" Q:$P($G(^TMP("MDTMP",$J,MDX)),U,1)<MDCDT
"RTN","MDRPCOP",133,0)
 .S ^TMP("MDCONL",$J,$P($G(^TMP("MDTMP",$J,MDX)),U,5))=$P($G(^TMP("MDTMP",$J,MDX)),U,1)
"RTN","MDRPCOP",134,0)
 K ^TMP("MDTMP",$J)
"RTN","MDRPCOP",135,0)
 F MDX=0:0 S MDX=$O(^MDD(702,"B",DFN,+MDX))_"," Q:'MDX  D
"RTN","MDRPCOP",136,0)
 .Q:'$$GET1^DIQ(702,MDX,.05,"I")
"RTN","MDRPCOP",137,0)
 .Q:$G(^TMP("MDCONL",$J,+$$GET1^DIQ(702,MDX,.05,"I")))=""
"RTN","MDRPCOP",138,0)
 .S MDMULT=+$$GET1^DIQ(702,MDX,".04:.12","I")
"RTN","MDRPCOP",139,0)
 .S MDYR=$S(MDMULT<1:MDCOM,1:MDCDT)
"RTN","MDRPCOP",140,0)
 .I MDNUM Q:$$GET1^DIQ(702,MDX,.09,"I")=3&($$GET1^DIQ(702,MDX,.02,"I")<MDYR)
"RTN","MDRPCOP",141,0)
 .S MDREQDT="" I +$$GET1^DIQ(702,MDX,.05,"I") S MDREQDT=$G(^TMP("MDCONL",$J,+$$GET1^DIQ(702,MDX,.05,"I")))
"RTN","MDRPCOP",142,0)
 .I MDREQDT'="" S MDREQDT=$$FMTE^XLFDT(MDREQDT,"1P")
"RTN","MDRPCOP",143,0)
 .S MDREQ=$$GET1^DIQ(702,MDX,.04)_"  "_+MDX_"  (Consult #:"_$$GET1^DIQ(702,MDX,.05,"I")_$S(MDREQDT'="":" Requested: "_MDREQDT,1:"")_")"
"RTN","MDRPCOP",144,0)
 .S Z=$$GET1^DIQ(702,MDX,".04:.02","I")_U_MDREQ_U_$$GET1^DIQ(702,MDX,.02,"I")_U_$$GET1^DIQ(702,MDX,.09)_U_$$GET1^DIQ(702,MDX,.11)_U_$$GET1^DIQ(702,MDX,.991)
"RTN","MDRPCOP",145,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOP",146,0)
 .S @RESULTS@(Y)="702;"_+MDX_U_Z
"RTN","MDRPCOP",147,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOP",148,0)
 K ^TMP("MDCONL",$J)
"RTN","MDRPCOP",149,0)
 Q
"RTN","MDRPCOP",150,0)
 ;
"RTN","MDRPCOP",151,0)
GETVST ; [Procedure] Return list of visits
"RTN","MDRPCOP",152,0)
 N BEG,END,VAERR,VASD,BDT,DTM,EDT,LOC,NOW,MDQUERY,MDLST,MDTDF,STI,STS,TODAY,I,J,K,XI,XE,X
"RTN","MDRPCOP",153,0)
 S NOW=$$NOW^XLFDT(),TODAY=$P(NOW,".",1),MDTDF=DFN
"RTN","MDRPCOP",154,0)
 S BEG=$$X2FM($$GETBEG),END=$$X2FM($$GETEND)+0.2359
"RTN","MDRPCOP",155,0)
 S MDLST="",MDSTOP=""
"RTN","MDRPCOP",156,0)
 I END>NOW D   ; get future encounters, past cancels/no-shows from VADPT
"RTN","MDRPCOP",157,0)
 .S VASD("F")=BEG
"RTN","MDRPCOP",158,0)
 .S VASD("T")=END
"RTN","MDRPCOP",159,0)
 .S VASD("W")="123456789"
"RTN","MDRPCOP",160,0)
 .D SDA^VADPT
"RTN","MDRPCOP",161,0)
 .S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","MDRPCOP",162,0)
 ..S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","MDRPCOP",163,0)
 ..S DTM=$P(XI,U),IEN=$P(XI,U,2),STI=$P(XI,U,3)
"RTN","MDRPCOP",164,0)
 ..S LOC=$P(XE,U,2),STS=$P(XE,U,3)
"RTN","MDRPCOP",165,0)
 ..I DTM<TODAY,(STI=""!(STI["I")!(STI="NT")) Q  ; no prior kept appts
"RTN","MDRPCOP",166,0)
 ..S MDLST(DTM,"A",1)="A;"_DTM_";"_IEN_U_DTM_U_LOC_U_STS
"RTN","MDRPCOP",167,0)
 .K ^UTILITY("VASD",$J)
"RTN","MDRPCOP",168,0)
 I BEG'>NOW D  ;past encounters from ACRP Toolkit - set in CALLBACK
"RTN","MDRPCOP",169,0)
 .S BDT=BEG
"RTN","MDRPCOP",170,0)
 .S EDT=$S(END<NOW:END,1:NOW)
"RTN","MDRPCOP",171,0)
 .D OPEN^SDQ(.MDQUERY)
"RTN","MDRPCOP",172,0)
 .I '$$ERRCHK^SDQUT() D INDEX^SDQ(.MDQUERY,"PATIENT/DATE","SET")
"RTN","MDRPCOP",173,0)
 .I '$$ERRCHK^SDQUT() D PAT^SDQ(.MDQUERY,DFN,"SET")
"RTN","MDRPCOP",174,0)
 .I '$$ERRCHK^SDQUT() D DATE^SDQ(.MDQUERY,BDT,EDT,"SET")
"RTN","MDRPCOP",175,0)
 .I '$$ERRCHK^SDQUT() D
"RTN","MDRPCOP",176,0)
 ..D SCANCB^SDQ(.MDQUERY,"D CALLBACK^ORWCV(Y,Y0,$NA(MDLST),.MDSTOP)","SET")
"RTN","MDRPCOP",177,0)
 .I '$$ERRCHK^SDQUT() D ACTIVE^SDQ(.MDQUERY,"TRUE","SET")
"RTN","MDRPCOP",178,0)
 .I '$$ERRCHK^SDQUT() D SCAN^SDQ(.MDQUERY,"FORWARD")
"RTN","MDRPCOP",179,0)
 .D CLOSE^SDQ(.MDQUERY)
"RTN","MDRPCOP",180,0)
 N TIM,MOV,MDX0,Y,MTIM,XTYP,XLOC,XLOCI,HLOC,EARLY,DONE ; admits
"RTN","MDRPCOP",181,0)
 S EARLY=BEG,DONE=0 S:$G(DFN)="" DFN=MDTDF
"RTN","MDRPCOP",182,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","MDRPCOP",183,0)
 .S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","MDRPCOP",184,0)
 ..D GETS^DIQ(405,+MOV_",","*","IE","MDX0") S MTIM=$G(MDX0(405,MOV_",",".01","I"))
"RTN","MDRPCOP",185,0)
 ..S XTYP=$G(MDX0(405,+MOV_",",".04","E"))
"RTN","MDRPCOP",186,0)
 ..S XLOC=$G(MDX0(405,+MOV_",",".06","E"))
"RTN","MDRPCOP",187,0)
 ..S XLOCI=+$G(MDX0(405,+MOV_",",".06","I")),HLOC=+$G(^DIC(42,+XLOCI,44))
"RTN","MDRPCOP",188,0)
 ..S MDLST(MTIM,"I",1)="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","MDRPCOP",189,0)
 ..S DONE=1  ; Not sure if I should include all stays <DRP@Hines>
"RTN","MDRPCOP",190,0)
 S I=0 F  S I=$O(MDLST(I)) Q:'I  D
"RTN","MDRPCOP",191,0)
 .S J="" F  S J=$O(MDLST(I,J)) Q:J=""  D
"RTN","MDRPCOP",192,0)
 ..S K=0 F  S K=$O(MDLST(I,J,K)) Q:'K  D
"RTN","MDRPCOP",193,0)
 ...S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDLST(I,J,K)
"RTN","MDRPCOP",194,0)
 S:$G(DFN)="" DFN=MDTDF S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_($$GET1^DIQ(2,DFN_",",.1)]"")
"RTN","MDRPCOP",195,0)
 Q
"RTN","MDRPCOP",196,0)
 ;
"RTN","MDRPCOP",197,0)
GETBEG() ; Get Beginning Date Range
"RTN","MDRPCOP",198,0)
 I $$GET^XPAR("SYS","MD APPOINT START DATE",1)>1 Q "T-"_$$GET^XPAR("SYS","MD APPOINT START DATE",1)
"RTN","MDRPCOP",199,0)
 Q "T-200"
"RTN","MDRPCOP",200,0)
GETEND() ; Get Ending Date Range
"RTN","MDRPCOP",201,0)
 I $$GET^XPAR("SYS","MD APPOINT END DATE",1)>1 Q "T+"_$$GET^XPAR("SYS","MD APPOINT END DATE",1)
"RTN","MDRPCOP",202,0)
 Q "T"
"RTN","MDRPCOP",203,0)
LOGSEC ; [Procedure] Log Security
"RTN","MDRPCOP",204,0)
 N RES
"RTN","MDRPCOP",205,0)
 D NOTICE^DGSEC4(.RES,DFN,DATA,1)
"RTN","MDRPCOP",206,0)
 S @RESULTS@(0)=$S(+RES:"1^Logged",1:"-1^Unable to log")
"RTN","MDRPCOP",207,0)
 Q
"RTN","MDRPCOP",208,0)
 ;
"RTN","MDRPCOP",209,0)
RPC(RESULTS,OPTION,DFN,DATA) ; [Procedure] Main RPC call tag
"RTN","MDRPCOP",210,0)
 NEW DFNIENS,GMRAL,GMVALG,GN,IENS,MDDFN,MDERR,MDFDA,MDFLD,MDHL7,MDID,MDIDS,MDIEN,MDIENS,MDRET,MDX,MDY,VA,VADM,VAERR,VAIN,Z
"RTN","MDRPCOP",211,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOP",212,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOP",213,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDPATIENT","MDRPCOP",OPTION)
"RTN","MDRPCOP",214,0)
 D CLEAN^DILF
"RTN","MDRPCOP",215,0)
 Q
"RTN","MDRPCOP",216,0)
 ;
"RTN","MDRPCOP",217,0)
SELECT ; [Procedure] Select patient
"RTN","MDRPCOP",218,0)
 ; Moved to continuation routine at MD*1.0*6 due to routine size
"RTN","MDRPCOP",219,0)
 D SELECT^MDRPCOP1
"RTN","MDRPCOP",220,0)
 Q
"RTN","MDRPCOP",221,0)
 ;
"RTN","MDRPCOP",222,0)
X2FM(X) ; [Function] return FM date given relative date
"RTN","MDRPCOP",223,0)
 N %DT S %DT="TS" D ^%DT
"RTN","MDRPCOP",224,0)
 Q Y
"RTN","MDRPCOP",225,0)
 ;
"RTN","MDRPCOP1")
0^32^B7884851
"RTN","MDRPCOP1",1,0)
MDRPCOP1 ; HOIFO/DP - Object RPCs (TMDPatient) - Cont. ; 01-09-2003 15:21
"RTN","MDRPCOP1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCOP1",3,0)
 ; Integration Agreements:
"RTN","MDRPCOP1",4,0)
 ; IA# 3027 [Supported] Calls to DGSEC4
"RTN","MDRPCOP1",5,0)
 ; IA# 3266 [Subscription] Call to DPTLK1
"RTN","MDRPCOP1",6,0)
 ; IA# 10035 [Supported] DPT references
"RTN","MDRPCOP1",7,0)
 ; IA# 3267 [Subscription] Call to DPTLK1
"RTN","MDRPCOP1",8,0)
 ; IA# 3593 [Supported] Access to routine DPTLK6 utilities for lookup
"RTN","MDRPCOP1",9,0)
 ;
"RTN","MDRPCOP1",10,0)
ADD(X) ; [Procedure] Add line to @RESULTS@(...
"RTN","MDRPCOP1",11,0)
 S @RESULTS@(+$O(@RESULTS@(""),-1)+1)=X
"RTN","MDRPCOP1",12,0)
 Q
"RTN","MDRPCOP1",13,0)
 ;
"RTN","MDRPCOP1",14,0)
SELECT ; [Procedure] Select patient
"RTN","MDRPCOP1",15,0)
 I '$D(^DPT(+$G(DFN),0))#2 S @RESULTS@(0)="-1^No such patient" Q
"RTN","MDRPCOP1",16,0)
 S @RESULTS@(0)="1^Required Identifiers & messages"
"RTN","MDRPCOP1",17,0)
 S IENS=DFN_","
"RTN","MDRPCOP1",18,0)
 D FILE^DID(2,,"REQUIRED IDENTIFIERS","MDIDS")
"RTN","MDRPCOP1",19,0)
 F MDX=0:0 S MDX=$O(MDIDS("REQUIRED IDENTIFIERS",MDX)) Q:'MDX  D
"RTN","MDRPCOP1",20,0)
 .S MDFLD=MDIDS("REQUIRED IDENTIFIERS",MDX,"FIELD")
"RTN","MDRPCOP1",21,0)
 .S MDID="$$PTID^"_$$GET1^DID(2,MDFLD,"","LABEL")
"RTN","MDRPCOP1",22,0)
 .S MDID=MDID_U_$$GET1^DIQ(2,IENS,MDFLD)
"RTN","MDRPCOP1",23,0)
 .D:MDFLD=.03
"RTN","MDRPCOP1",24,0)
 ..S MDID=MDID_" ("_$$GET1^DIQ(2,IENS,.033)_")"
"RTN","MDRPCOP1",25,0)
 ..S MDID=MDID_U_$$DOB^DPTLK1(+IENS)
"RTN","MDRPCOP1",26,0)
 .D:MDFLD=.09
"RTN","MDRPCOP1",27,0)
 ..S X=$P(MDID,U,3),X=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10)
"RTN","MDRPCOP1",28,0)
 ..S $P(MDID,U,3)=X,$P(MDID,U,4)=$$SSN^DPTLK1(+IENS)
"RTN","MDRPCOP1",29,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDID
"RTN","MDRPCOP1",30,0)
 S MDID="$$PTID^"_$$GET1^DID(2,.1,"","LABEL")
"RTN","MDRPCOP1",31,0)
 S MDID=MDID_U_$$GET1^DIQ(2,IENS,.1)
"RTN","MDRPCOP1",32,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDID
"RTN","MDRPCOP1",33,0)
 S MDID="$$PTID^"_$$GET1^DID(2,.101,"","LABEL")
"RTN","MDRPCOP1",34,0)
 S MDID=MDID_U_$$GET1^DIQ(2,IENS,.101)
"RTN","MDRPCOP1",35,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=MDID
"RTN","MDRPCOP1",36,0)
 K MDRET
"RTN","MDRPCOP1",37,0)
 D GUIBS5A^DPTLK6(.MDRET,DFN) D:MDRET(1)=1
"RTN","MDRPCOP1",38,0)
 .D ADD("$$MSGHDR^2^SAME LAST NAME AND LAST 4")
"RTN","MDRPCOP1",39,0)
 .S MDX=1
"RTN","MDRPCOP1",40,0)
 .F  S MDX=$O(MDRET(MDX)) Q:'MDX!(+$G(MDRET(MDX)))  D
"RTN","MDRPCOP1",41,0)
 ..D ADD($P(MDRET(MDX),U,2))
"RTN","MDRPCOP1",42,0)
 .D ADD(" ")
"RTN","MDRPCOP1",43,0)
 .S MDX=1
"RTN","MDRPCOP1",44,0)
 .F  S MDX=$O(MDRET(MDX)) Q:'MDX  D:+MDRET(MDX)
"RTN","MDRPCOP1",45,0)
 ..S MDDFN=+$P(MDRET(MDX),U,2)
"RTN","MDRPCOP1",46,0)
 ..D ADD($$GET1^DIQ(2,MDDFN_",",.01)_"    "_$$DOB^DPTLK1(MDDFN)_"    "_$$SSN^DPTLK1(MDDFN))
"RTN","MDRPCOP1",47,0)
 .D ADD(" ")
"RTN","MDRPCOP1",48,0)
 .D ADD("Please review carefully before continuing")
"RTN","MDRPCOP1",49,0)
 .D ADD("$$MSGEND")
"RTN","MDRPCOP1",50,0)
 K MDRET
"RTN","MDRPCOP1",51,0)
 D PTSEC^DGSEC4(.MDRET,DFN) D:MDRET(1)'=0
"RTN","MDRPCOP1",52,0)
 .D:MDRET(1)=3
"RTN","MDRPCOP1",53,0)
 ..D ADD("$$MSGHDR^0^CAN'T ACCESS YOUR OWN RECORD!!")
"RTN","MDRPCOP1",54,0)
 .D:MDRET(1)=-1
"RTN","MDRPCOP1",55,0)
 ..D ADD("$$MSGHDR^0^INCOMPLETE INFORMATION - CAN'T PROCEED")
"RTN","MDRPCOP1",56,0)
 .D:MDRET(1)=1
"RTN","MDRPCOP1",57,0)
 ..D ADD("$$MSGHDR^1^SENSITIVE RECORD ACCESS")
"RTN","MDRPCOP1",58,0)
 .D:MDRET(1)'=-1&(MDRET(1)'=3)&(MDRET(1)'=1)
"RTN","MDRPCOP1",59,0)
 ..D ADD("$$MSGHDR^3^SENSITIVE RECORD ACCESS")
"RTN","MDRPCOP1",60,0)
 .S MDX=1
"RTN","MDRPCOP1",61,0)
 .F  S MDX=$O(MDRET(MDX)) Q:'MDX  D ADD($TR(MDRET(MDX),"*"," "))
"RTN","MDRPCOP1",62,0)
 .D ADD("$$MSGEND")
"RTN","MDRPCOP1",63,0)
 D GUIMTD^DPTLK6(.MDRET,DFN) D:MDRET(1)=1
"RTN","MDRPCOP1",64,0)
 .D ADD("$$MSGHDR^1^NOTICE")
"RTN","MDRPCOP1",65,0)
 .F MDX=1:0 S MDX=$O(MDRET(MDX)) Q:'MDX  D ADD(MDRET(MDX))
"RTN","MDRPCOP1",66,0)
 .D ADD("$$MSGEND")
"RTN","MDRPCOP1",67,0)
 Q
"RTN","MDRPCOP1",68,0)
 ;
"RTN","MDRPCOP1",69,0)
X2FM(X) ; [Function] return FM date given relative date
"RTN","MDRPCOP1",70,0)
 N %DT S %DT="TS" D ^%DT
"RTN","MDRPCOP1",71,0)
 Q Y
"RTN","MDRPCOP1",72,0)
 ;
"RTN","MDRPCOT")
0^27^B75811389
"RTN","MDRPCOT",1,0)
MDRPCOT ; HOIFO/DP/NCA - Object RPCs (TMDTransaction) ;3/12/08  09:18
"RTN","MDRPCOT",2,0)
 ;;1.0;CLINICAL PROCEDURES;**5,6**;Apr 01, 2004;Build 102
"RTN","MDRPCOT",3,0)
 ; Integration Agreements:
"RTN","MDRPCOT",4,0)
 ; IA# 2693 [Subscription] TIU Extractions.
"RTN","MDRPCOT",5,0)
 ; IA# 2944 [Subscription] Calls to TIUSRVR1.
"RTN","MDRPCOT",6,0)
 ; IA# 3535 [Subscription] Calls to TIUSRVP.
"RTN","MDRPCOT",7,0)
 ; IA# 10104 [Supported] Routine XLFSTR calls
"RTN","MDRPCOT",8,0)
ADDMSG ; [Procedure] Add message to transaction
"RTN","MDRPCOT",9,0)
 N MDIEN,MDIENS,MDRET
"RTN","MDRPCOT",10,0)
 Q:'$G(DATA("TRANSACTION"))
"RTN","MDRPCOT",11,0)
 Q:$G(DATA("MESSAGE"))=""
"RTN","MDRPCOT",12,0)
 S MDIEN=+DATA("TRANSACTION"),MDIENS="+1,"_MDIEN_","
"RTN","MDRPCOT",13,0)
 D NOW^%DTC S DATA("DATE")=% K %
"RTN","MDRPCOT",14,0)
 S MDFDA(702.091,MDIENS,.01)=+$O(^MDD(702,+MDIEN,.091,"A"),-1)+1
"RTN","MDRPCOT",15,0)
 S MDFDA(702.091,MDIENS,.02)=DATA("DATE")
"RTN","MDRPCOT",16,0)
 S MDFDA(702.091,MDIENS,.03)=$G(DATA("PKG"),"UNKNOWN")
"RTN","MDRPCOT",17,0)
 S MDFDA(702.091,MDIENS,.09)=DATA("MESSAGE")
"RTN","MDRPCOT",18,0)
 D UPDATE^DIE("","MDFDA","MDRET")
"RTN","MDRPCOT",19,0)
 Q
"RTN","MDRPCOT",20,0)
 ;
"RTN","MDRPCOT",21,0)
DELETE ; [Procedure] Delete Study
"RTN","MDRPCOT",22,0)
 ; Sets @RESULTS@(0)="-1^Reason for not deleting" or "1^Study Deleted"
"RTN","MDRPCOT",23,0)
 ;
"RTN","MDRPCOT",24,0)
 N MDAST,MDHOLD,MDNOTE,MDRES,MDSIEN,BODY,SUBJECT,DEVIEN
"RTN","MDRPCOT",25,0)
 S (MDHOLD,MDSIEN)=+DATA,MDRES=0,MDNOTE=""
"RTN","MDRPCOT",26,0)
 D ALERT^MDHL7U3(MDSIEN) ; Builds the body of the mail message
"RTN","MDRPCOT",27,0)
 I $G(^MDD(702,+MDSIEN,0))="" S @RESULTS@(0)="1^Study Deleted." D NOTICE^MDHL7U3(SUBJECT,.BODY,DEVIEN,DUZ) Q  ;deleting message
"RTN","MDRPCOT",28,0)
 S:+$P(^MDD(702,MDSIEN,0),U,6) MDNOTE=$P(^MDD(702,MDSIEN,0),U,6)
"RTN","MDRPCOT",29,0)
 I "13"[$P(^MDD(702,MDSIEN,0),U,9) S @RESULTS@(0)="-1^Can't Delete TIU Note from a "_$$GET1^DIQ(702,MDSIEN,.09,"E")_" Study." Q
"RTN","MDRPCOT",30,0)
 I "5"[$P(^MDD(702,MDSIEN,0),U,9) S MDCANR=$$CANCEL^MDHL7B(MDHOLD) I MDCANR<1 S @RESULTS@(0)="-1^"_$P(MDCANR,"^",2) Q
"RTN","MDRPCOT",31,0)
 I +MDNOTE S MDRES="" D DELETE^TIUSRVP(.MDRES,MDNOTE)
"RTN","MDRPCOT",32,0)
 I MDRES D  Q
"RTN","MDRPCOT",33,0)
 .D STATUS(MDSIEN_",",2,$P(MDRES,"^",2))
"RTN","MDRPCOT",34,0)
 .S DATA("TRANSACTION")=MDSIEN,DATA("PKG")="TIU"
"RTN","MDRPCOT",35,0)
 .S DATA("MESSAGE")=$P(MDRES,"^",2) D ADDMSG
"RTN","MDRPCOT",36,0)
 .S @RESULTS@(0)="-1^"_$P(MDRES,"^",2)
"RTN","MDRPCOT",37,0)
 .Q
"RTN","MDRPCOT",38,0)
 E  D
"RTN","MDRPCOT",39,0)
 .I $D(^MDD(702.001,"ASTUDY",MDSIEN)) S @RESULTS@(0)="-1^Note associated with study, can not delete." Q
"RTN","MDRPCOT",40,0)
 .S MDAST=$$HL7CHK^MDHL7U3(+MDSIEN) I +MDAST<1 S @RESULTS@(0)=MDAST Q
"RTN","MDRPCOT",41,0)
 .D NOTICE^MDHL7U3(SUBJECT,.BODY,DEVIEN,DUZ) ; delete message
"RTN","MDRPCOT",42,0)
 .S MDFDA(702,DATA_",",.01)=""
"RTN","MDRPCOT",43,0)
 .; Check for renal study to delete as well
"RTN","MDRPCOT",44,0)
 .S:$D(^MDK(704.202,DATA)) MDFDA(704.202,DATA_",",.01)=""
"RTN","MDRPCOT",45,0)
 .D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",46,0)
 .N DA,DIK S DA=+MDSIEN,DIK="^MDD(702," D ^DIK
"RTN","MDRPCOT",47,0)
 .S @RESULTS@(0)="1^Study Deleted."
"RTN","MDRPCOT",48,0)
 .Q
"RTN","MDRPCOT",49,0)
 Q
"RTN","MDRPCOT",50,0)
 ;
"RTN","MDRPCOT",51,0)
FILEMSG(STUDY,MDPKG,MDSTAT,MDMSG) ; [Procedure] File Study Status and Message.
"RTN","MDRPCOT",52,0)
 S DATA("TRANSACTION")=STUDY,DATA("PKG")=MDPKG
"RTN","MDRPCOT",53,0)
 S DATA("MESSAGE")=$P(MDMSG,"^",2)
"RTN","MDRPCOT",54,0)
 D STATUS(STUDY_",",MDSTAT,$P(MDMSG,"^",2)),ADDMSG
"RTN","MDRPCOT",55,0)
 Q
"RTN","MDRPCOT",56,0)
 ;
"RTN","MDRPCOT",57,0)
FILES ; [Procedure] Add/remove an attachment to this transaction
"RTN","MDRPCOT",58,0)
 NEW MDFDA,MDIEN,MDIENS,MDRET,P1,P2,P3,P4
"RTN","MDRPCOT",59,0)
 S P1=$P(DATA,U,1),P2=$P(DATA,U,2),P3=$P(DATA,U,3),P4=$P(DATA,U,4)
"RTN","MDRPCOT",60,0)
 S MDIEN=0 I $G(^MDD(702,+P1,0))="" Q
"RTN","MDRPCOT",61,0)
 ; Look for file (All comparisons done on lower case values)
"RTN","MDRPCOT",62,0)
 F  S MDIEN=$O(^MDD(702,P1,.1,MDIEN)) Q:'MDIEN  D  Q:X=P3
"RTN","MDRPCOT",63,0)
 .S X=$$LOW^XLFSTR($G(^MDD(702,P1,.1,MDIEN,.1)))
"RTN","MDRPCOT",64,0)
 I MDIEN&P4 S @RESULTS@(0)="1^File already assigned" Q
"RTN","MDRPCOT",65,0)
 I 'MDIEN&'P4 S @RESULTS@(0)="1^File not assigned" Q
"RTN","MDRPCOT",66,0)
 I P4 D  Q  ; Add a file
"RTN","MDRPCOT",67,0)
 .S MDIENS="+1,"_P1_","
"RTN","MDRPCOT",68,0)
 .S MDFDA(702.1,MDIENS,.01)=$O(^MDD(702,P1,.1,"B",""),-1)+1
"RTN","MDRPCOT",69,0)
 .S MDFDA(702.1,MDIENS,.02)=$S(P2:"I",1:"U")
"RTN","MDRPCOT",70,0)
 .I P2 S MDFDA(702.1,MDIENS,.03)=P2
"RTN","MDRPCOT",71,0)
 .S MDFDA(702.1,MDIENS,.1)=P3
"RTN","MDRPCOT",72,0)
 .D UPDATE^DIE("","MDFDA","MDIEN")
"RTN","MDRPCOT",73,0)
 .S @RESULTS@(0)=+$G(MDIEN(1),-1)
"RTN","MDRPCOT",74,0)
 I 'P4 D  Q  ; Remove the file
"RTN","MDRPCOT",75,0)
 .S MDFDA(702.1,MDIEN_","_P1_",",.01)="@"
"RTN","MDRPCOT",76,0)
 .D FILE^DIE("","MDFDA","MDRET")
"RTN","MDRPCOT",77,0)
 .S @RESULTS@(0)=$S($D(MDRET):-1,1:1)
"RTN","MDRPCOT",78,0)
 Q
"RTN","MDRPCOT",79,0)
 ;
"RTN","MDRPCOT",80,0)
GETATT ; [Procedure] Get Attachments
"RTN","MDRPCOT",81,0)
 F X=0:0 S X=$O(^MDD(702,DATA,.1,X)) Q:'X  D
"RTN","MDRPCOT",82,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDRPCOT",83,0)
 .S @RESULTS@(Y)=$P(^MDD(702,DATA,.1,X,0),U,1,3)
"RTN","MDRPCOT",84,0)
 .S $P(@RESULTS@(Y),U,4)=$G(^MDD(702,DATA,.1,X,.1))
"RTN","MDRPCOT",85,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","MDRPCOT",86,0)
 Q
"RTN","MDRPCOT",87,0)
 ;
"RTN","MDRPCOT",88,0)
GETERR ; [Procedure] Return list of Imaging Errors
"RTN","MDRPCOT",89,0)
 ; DATA = Transaction IEN
"RTN","MDRPCOT",90,0)
 F MDX=0:0 S MDX=$O(^MDD(702,DATA,.091,MDX)) Q:'MDX  D
"RTN","MDRPCOT",91,0)
 .S MDY=+^MDD(702,DATA,.091,MDX,0)_U,Y=$P(^(0),U,2)
"RTN","MDRPCOT",92,0)
 .D D^DIQ S MDY=MDY_Y_U
"RTN","MDRPCOT",93,0)
 .S MDY=MDY_$P(^MDD(702,DATA,.091,MDX,0),U,3)_U_$P(^(0),U,9)
"RTN","MDRPCOT",94,0)
 .S ^TMP($J,$O(^TMP($J,""),-1)+1)=MDY
"RTN","MDRPCOT",95,0)
 S ^TMP($J,0)=+$O(^TMP($J,""),-1)
"RTN","MDRPCOT",96,0)
 Q
"RTN","MDRPCOT",97,0)
 ;
"RTN","MDRPCOT",98,0)
NEWSTAT ; [Procedure] RPC Call to set status
"RTN","MDRPCOT",99,0)
 S MDFDA(702,DATA,.09)=TYPE
"RTN","MDRPCOT",100,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",101,0)
 I TYPE=3&($G(^MDK(704.202,+DATA,0))'="") K MDFDA S MDFDA(704.202,DATA,.09)=0 D FILE^DIE("","MDFDA") K MDFDA
"RTN","MDRPCOT",102,0)
 Q
"RTN","MDRPCOT",103,0)
 ;
"RTN","MDRPCOT",104,0)
RPC(RESULTS,OPTION,DATA,TYPE,FILE,RESREP) ; [Procedure] Main RPC call
"RTN","MDRPCOT",105,0)
 N MDCANR,MDCON,MDDOC,MDFDA,MDFN,MDGST,MDHOLD,MDIEN,MDIENS,MDL,MDLOC,MDMSG,MDNEWV,MDNOTE,MDNVST,MDPDT,MDPKG,MDPROC,MDRES,MDRESU,MDRESUL,MDRET,MDS,MDSIEN,MDSTAT,MDSTUDY,MDTITL,MDTIUER,MDTRAN,MDTST,MDTSTR,MDVST,MDVSTR,MDWP,MDX,MDY
"RTN","MDRPCOT",106,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","MDRPCOT",107,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","MDRPCOT",108,0)
 D:'$D(@RESULTS) BADRPC^MDRPCU("MD TMDTRANSACTION","MDRPCOT",OPTION)
"RTN","MDRPCOT",109,0)
 D CLEAN^DILF
"RTN","MDRPCOT",110,0)
 Q
"RTN","MDRPCOT",111,0)
 ;
"RTN","MDRPCOT",112,0)
STATUS(MDIENS,MDSTAT,MDMSG) ; [Procedure] Update transaction status
"RTN","MDRPCOT",113,0)
 S MDFDA(702,MDIENS,.08)=$G(MDMSG)
"RTN","MDRPCOT",114,0)
 S MDFDA(702,MDIENS,.09)=MDSTAT
"RTN","MDRPCOT",115,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",116,0)
 Q
"RTN","MDRPCOT",117,0)
 ;
"RTN","MDRPCOT",118,0)
SUBMIT ; [Procedure] Process the Image(s) Submission.
"RTN","MDRPCOT",119,0)
 ; Output: -1^Error Message or
"RTN","MDRPCOT",120,0)
 ;          1^Successful Message
"RTN","MDRPCOT",121,0)
 N MDRESUL,MDSTUDY
"RTN","MDRPCOT",122,0)
 S MDSTUDY=+DATA,MDRESUL=""
"RTN","MDRPCOT",123,0)
 ; Create New TIU Document
"RTN","MDRPCOT",124,0)
 S MDRESUL=$$NEWTIUN(MDSTUDY)
"RTN","MDRPCOT",125,0)
 ; File TIU Error messages
"RTN","MDRPCOT",126,0)
 I +MDRESUL<0 D  Q
"RTN","MDRPCOT",127,0)
 .D FILEMSG(MDSTUDY,"TIU",2,MDRESUL)
"RTN","MDRPCOT",128,0)
 .S @RESULTS@(0)=MDRESUL
"RTN","MDRPCOT",129,0)
 ; Submit and export the images
"RTN","MDRPCOT",130,0)
 S MDRESUL=$$SUBMIT^MDRPCOT1(MDSTUDY)
"RTN","MDRPCOT",131,0)
 ; File message
"RTN","MDRPCOT",132,0)
 D FILEMSG(MDSTUDY,"IMAGING",$S(+MDRESUL>0:+MDRESUL,1:2),MDRESUL)
"RTN","MDRPCOT",133,0)
 S @RESULTS@(0)=MDRESUL
"RTN","MDRPCOT",134,0)
 Q
"RTN","MDRPCOT",135,0)
 ;
"RTN","MDRPCOT",136,0)
VIEWTIU ; [Procedure] VIew the associated tiu document
"RTN","MDRPCOT",137,0)
 I '$P(^MDD(702,+DATA,0),U,6) D  Q
"RTN","MDRPCOT",138,0)
 .S @RESULTS@(0)="NO TIU NOTE FOR THIS STUDY"
"RTN","MDRPCOT",139,0)
 D TGET^TIUSRVR1(.RESULTS,+$P(^MDD(702,+DATA,0),U,6))
"RTN","MDRPCOT",140,0)
 Q
"RTN","MDRPCOT",141,0)
 ;
"RTN","MDRPCOT",142,0)
GETDATA(STUDY) ; [Function] Return the Necessary data for creating a TIU note.
"RTN","MDRPCOT",143,0)
 ; Return: Patient DFN_"^"_TIU title_"^"_Hospital Location_"^"_TIU Note
"RTN","MDRPCOT",144,0)
 ;         IEN_"^"_Consult #_"^"_CP Definition IEN_"^"_Visit String_"^"
"RTN","MDRPCOT",145,0)
 ;         New Visit Flag
"RTN","MDRPCOT",146,0)
 ;         or
"RTN","MDRPCOT",147,0)
 ;         -1^Error Message
"RTN","MDRPCOT",148,0)
 N DFN,MDCON,MDFN,MDIEN,MDIENS,MDLOC,MDNEWV,MDNOTE,MDNVST,MDPROC,MDVSTR,MDTITL,MDX,MDTST
"RTN","MDRPCOT",149,0)
 S MDIEN=+STUDY,MDIENS=MDIEN_",",MDNVST=0
"RTN","MDRPCOT",150,0)
 I $$GET1^DIQ(702,MDIENS,.01)="" Q "-1^No such study entry."
"RTN","MDRPCOT",151,0)
 ; Get DFN
"RTN","MDRPCOT",152,0)
 S DFN=$$GET1^DIQ(702,MDIEN,.01,"I")
"RTN","MDRPCOT",153,0)
 I 'DFN Q "-1^No DFN."
"RTN","MDRPCOT",154,0)
 ; Get CP Def
"RTN","MDRPCOT",155,0)
 S MDPROC=$$GET1^DIQ(702,MDIEN,.04,"I")
"RTN","MDRPCOT",156,0)
 I 'MDPROC Q "-1^No CP Def."
"RTN","MDRPCOT",157,0)
 ; Get Consult
"RTN","MDRPCOT",158,0)
 S MDCON=$$GET1^DIQ(702,MDIEN,.05,"I")
"RTN","MDRPCOT",159,0)
 I 'MDCON Q "-1^No Consult #."
"RTN","MDRPCOT",160,0)
 ; Get TIU Note Title
"RTN","MDRPCOT",161,0)
 S MDTITL=$$GET1^DIQ(702.01,+MDPROC_",",.04,"I")
"RTN","MDRPCOT",162,0)
 I 'MDTITL Q "-1^No TIU Note Title."
"RTN","MDRPCOT",163,0)
 S MDVSTR=$$GET1^DIQ(702,MDIEN,.07)
"RTN","MDRPCOT",164,0)
 I MDVSTR=""  Q "-1^No Visit String."
"RTN","MDRPCOT",165,0)
 I $L(MDVSTR,";")=1 S MDNVST=1,MDVSTR=";"_MDVSTR ; If new visit is selected
"RTN","MDRPCOT",166,0)
 ; MDLOC is Hospital Location
"RTN","MDRPCOT",167,0)
 I MDVSTR'="" D
"RTN","MDRPCOT",168,0)
 .S MDVSTR=$$GETVSTR^MDRPCOT1(DFN,MDVSTR,MDPROC,$$GET1^DIQ(702,MDIEN,.02,"I"))
"RTN","MDRPCOT",169,0)
 .S MDLOC=$P(MDVSTR,";",1)
"RTN","MDRPCOT",170,0)
 I $$GET1^DIQ(702.01,+MDPROC_",",.12,"I")=1 Q DFN_"^"_MDTITL_"^"_MDLOC_"^^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT",171,0)
 ; Does TIU doc already exist?
"RTN","MDRPCOT",172,0)
 I $$GET1^DIQ(702,MDIEN,.06,"I") Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+$$GET1^DIQ(702,MDIEN,.06,"I")_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT",173,0)
 ; Does TIU doc exist for previous transaction of this consult?
"RTN","MDRPCOT",174,0)
 I MDCON S MDNOTE=$$PREV(MDCON,MDIEN)
"RTN","MDRPCOT",175,0)
 Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+MDNOTE_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT",176,0)
 ;
"RTN","MDRPCOT",177,0)
NEWTIUN(STUDY) ; [Function] Create a new TIU for transaction
"RTN","MDRPCOT",178,0)
 ; Input: STUDY - IENS of CP study entry
"RTN","MDRPCOT",179,0)
 ; Return: TIU Document IEN
"RTN","MDRPCOT",180,0)
 N CTR,DFN,MDCON,MDFDA,MDGST,MDL,MDLOC,MDNOTE,MDPDT,MDPROC,MDRESU,MDTITL,MDTSTR,MDVST,MDVSTR,MDWP,MDPT S CTR=0,MDGST=+STUDY,MDRESU=""
"RTN","MDRPCOT",181,0)
 ; Get data for TIU Note Creation
"RTN","MDRPCOT",182,0)
 S (MDTSTR,MDRESU)=$$GETDATA(MDGST)
"RTN","MDRPCOT",183,0)
 ; File Error message
"RTN","MDRPCOT",184,0)
 I +MDRESU<0 D FILEMSG(MDGST,"CP",2,MDRESU) Q MDRESU
"RTN","MDRPCOT",185,0)
 I $G(MDTSTR)="" Q "-1^No Data to Create TIU Document"
"RTN","MDRPCOT",186,0)
 F MDL="DFN","MDTITL","MDLOC","MDNOTE","MDCON","MDPROC","MDVSTR","MDNVST" D
"RTN","MDRPCOT",187,0)
 .S CTR=CTR+1,@MDL=$P(MDTSTR,"^",CTR)
"RTN","MDRPCOT",188,0)
 S MDVST=""
"RTN","MDRPCOT",189,0)
 ; If previous TIU document exists, quit
"RTN","MDRPCOT",190,0)
 I MDNOTE Q MDNOTE
"RTN","MDRPCOT",191,0)
 I 'MDLOC Q "-1^No Hospital Location."
"RTN","MDRPCOT",192,0)
 ; Create new visit, if no vstring
"RTN","MDRPCOT",193,0)
 S MDPDT=$$PDT^MDRPCOT1(MDGST)
"RTN","MDRPCOT",194,0)
 I 'MDPDT S MDPT=$O(^MDD(703.1,"ASTUDYID",+MDGST,0)),MDPDT=$P($G(^MDD(703.1,+MDPT,0)),U,3)
"RTN","MDRPCOT",195,0)
 S:'MDPDT MDPDT=$P(MDVSTR,";",2) ; If No D/T Performed grab visit D/T
"RTN","MDRPCOT",196,0)
 I $P(MDVSTR,";",3)="V" S $P(MDVSTR,";",3)="A"
"RTN","MDRPCOT",197,0)
 ; Build variables for TIU Call
"RTN","MDRPCOT",198,0)
 S MDWP(.05)=1 ; Undicated Status
"RTN","MDRPCOT",199,0)
 S MDWP(1405)=+MDCON_";GMR(123," ; Package Reference
"RTN","MDRPCOT",200,0)
 S MDWP(70201)=5 ; Default Procedure Summary Code "Machine Resulted"
"RTN","MDRPCOT",201,0)
 I MDPDT S MDWP(70202)=MDPDT ; Date/Time Performed
"RTN","MDRPCOT",202,0)
 ; File PCE Error message
"RTN","MDRPCOT",203,0)
 I MDNVST S MDRESU=$$EN1^MDPCE(MDGST,$P(MDVSTR,";",2),MDPROC,$P(MDVSTR,";",3),"P") I +MDRESU S MDVST=+MDRESU,MDVSTR=$P(MDRESU,"^",2)
"RTN","MDRPCOT",204,0)
 I MDNVST&(+MDRESU<0) D FILEMSG(MDGST,"PCE",2,$P(MDRESU,"^",2)) Q MDRESU
"RTN","MDRPCOT",205,0)
 ; Create the TIU note stub
"RTN","MDRPCOT",206,0)
 S MDNOTE="" D MAKE^TIUSRVP(.MDNOTE,DFN,MDTITL,$P(MDVSTR,";",2),MDLOC,$S(MDVST:MDVST,1:""),.MDWP,MDVSTR,1,1)
"RTN","MDRPCOT",207,0)
 I '(+MDNOTE) S $P(MDNOTE,"^")=-1 Q MDNOTE
"RTN","MDRPCOT",208,0)
 ; Finalize the transaction
"RTN","MDRPCOT",209,0)
 S MDFDA(702,STUDY_",",.06)=+MDNOTE
"RTN","MDRPCOT",210,0)
 S MDFDA(702,STUDY_",",.08)=""
"RTN","MDRPCOT",211,0)
 S:MDVST>0 MDFDA(702,STUDY_",",.13)=MDVST
"RTN","MDRPCOT",212,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",213,0)
 D UPD^MDKUTLR(STUDY,+MDNOTE)
"RTN","MDRPCOT",214,0)
 Q 1
"RTN","MDRPCOT",215,0)
 ;
"RTN","MDRPCOT",216,0)
PREV(MDC,MDS) ; [Function] Return the Previous TIU document.
"RTN","MDRPCOT",217,0)
 N MDNEWV,MDDOC,MDTRAN,MDTIUER,MDTST
"RTN","MDRPCOT",218,0)
 S (MDDOC,MDNEWV,MDTRAN,MDTIUER,MDTST)="" K ^TMP("MDTIUST",$J)
"RTN","MDRPCOT",219,0)
 F  S MDTRAN=$O(^MDD(702,"ACON",MDC,MDTRAN)) Q:'MDTRAN  D  Q:'MDTRAN
"RTN","MDRPCOT",220,0)
 .I $P(^MDD(702,MDTRAN,0),U,6) D
"RTN","MDRPCOT",221,0)
 ..D EXTRACT^TIULQ($P(^MDD(702,MDTRAN,0),U,6),"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1406") Q:+MDTIUER
"RTN","MDRPCOT",222,0)
 ..S MDTST=$G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),.05,"E"))
"RTN","MDRPCOT",223,0)
 ..I MDTST'="UNDICTATED"&(MDTST'="UNSIGNED") K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT",224,0)
 ..I MDTST="UNSIGNED"&'($G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),1406,"I"))) K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT",225,0)
 ..S MDDOC=$P(^MDD(702,MDTRAN,0),U,6),MDNEWV=$P(^MDD(702,MDTRAN,0),U,7)
"RTN","MDRPCOT",226,0)
 ..Q:'MDS
"RTN","MDRPCOT",227,0)
 ..S MDFDA(702,MDS_",",.06)=MDDOC
"RTN","MDRPCOT",228,0)
 ..S MDFDA(702,MDS_",",.07)=MDNEWV
"RTN","MDRPCOT",229,0)
 ..D FILE^DIE("","MDFDA")
"RTN","MDRPCOT",230,0)
 ..S MDTRAN=""
"RTN","MDRPCOT",231,0)
 Q MDDOC
"RTN","MDRPCOT",232,0)
 ;
"RTN","MDRPCOT2")
0^34^B41546824
"RTN","MDRPCOT2",1,0)
MDRPCOT2 ; HOIFO/NCA - Object RPCs (TMDTransaction) Continued 2;10/29/04  12:20 ;3/12/08  09:18
"RTN","MDRPCOT2",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCOT2",3,0)
 ; Integration Agreements:
"RTN","MDRPCOT2",4,0)
 ; IA# 2693 [Subscription] TIU Extractions.
"RTN","MDRPCOT2",5,0)
 ; IA# 3535 [Subscription] Calls to TIUSRVP.
"RTN","MDRPCOT2",6,0)
ADDMSG ; [Procedure] Add message to transaction
"RTN","MDRPCOT2",7,0)
 N MDIEN,MDIENS,MDRET
"RTN","MDRPCOT2",8,0)
 Q:'$G(DATA("TRANSACTION"))
"RTN","MDRPCOT2",9,0)
 Q:$G(DATA("MESSAGE"))=""
"RTN","MDRPCOT2",10,0)
 S MDIEN=+DATA("TRANSACTION"),MDIENS="+1,"_MDIEN_","
"RTN","MDRPCOT2",11,0)
 D NOW^%DTC S DATA("DATE")=%
"RTN","MDRPCOT2",12,0)
 S MDFDA(702.091,MDIENS,.01)=+$O(^MDD(702,+MDIEN,.091,"A"),-1)+1
"RTN","MDRPCOT2",13,0)
 S MDFDA(702.091,MDIENS,.02)=DATA("DATE")
"RTN","MDRPCOT2",14,0)
 S MDFDA(702.091,MDIENS,.03)=$G(DATA("PKG"),"UNKNOWN")
"RTN","MDRPCOT2",15,0)
 S MDFDA(702.091,MDIENS,.09)=DATA("MESSAGE")
"RTN","MDRPCOT2",16,0)
 D UPDATE^DIE("","MDFDA","MDRET")
"RTN","MDRPCOT2",17,0)
 Q
"RTN","MDRPCOT2",18,0)
 ;
"RTN","MDRPCOT2",19,0)
FILEMSG(STUDY,MDPKG,MDSTAT,MDMSG) ; [Procedure] File Study Status and Message.
"RTN","MDRPCOT2",20,0)
 S DATA("TRANSACTION")=STUDY,DATA("PKG")=MDPKG
"RTN","MDRPCOT2",21,0)
 S DATA("MESSAGE")=$P(MDMSG,"^",2)
"RTN","MDRPCOT2",22,0)
 D STATUS(STUDY_",",MDSTAT,$P(MDMSG,"^",2)),ADDMSG
"RTN","MDRPCOT2",23,0)
 Q
"RTN","MDRPCOT2",24,0)
 ;
"RTN","MDRPCOT2",25,0)
STATUS(MDIENS,MDSTAT,MDMSG) ; [Procedure] Update transaction status
"RTN","MDRPCOT2",26,0)
 S MDFDA(702,MDIENS,.08)=$G(MDMSG)
"RTN","MDRPCOT2",27,0)
 S MDFDA(702,MDIENS,.09)=MDSTAT
"RTN","MDRPCOT2",28,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT2",29,0)
 Q
"RTN","MDRPCOT2",30,0)
 ;
"RTN","MDRPCOT2",31,0)
SUBMIT(MDDATA,MDESIG,MDG1) ; [Procedure] Process the Image(s) Submission.
"RTN","MDRPCOT2",32,0)
 ; Input: MDDATA - Study ID
"RTN","MDRPCOT2",33,0)
 ;        MDESIG - Electronic Signature
"RTN","MDRPCOT2",34,0)
 ;        MDG1 - ^TMP global with the text of the report
"RTN","MDRPCOT2",35,0)
 ; Output: -1^Error Message or
"RTN","MDRPCOT2",36,0)
 ;          1^Successful Message
"RTN","MDRPCOT2",37,0)
 N MDRESUL,MDSTUDY,MDG2,RES
"RTN","MDRPCOT2",38,0)
 S MDSTUDY=+MDDATA,(RES,MDRESUL)=""
"RTN","MDRPCOT2",39,0)
 ; Create New TIU Document
"RTN","MDRPCOT2",40,0)
 S MDRESUL=$$NEWTIUN(MDSTUDY)
"RTN","MDRPCOT2",41,0)
 ;S MDRESUL=$$NEWTIUN(MDSTUDY)
"RTN","MDRPCOT2",42,0)
 ; File TIU Error messages
"RTN","MDRPCOT2",43,0)
 ;I +MDRESUL<0 D FILEMSG(MDSTUDY,"TIU",2,MDRESUL) Q MDRESUL
"RTN","MDRPCOT2",44,0)
 I +MDRESUL<0 D  Q RES
"RTN","MDRPCOT2",45,0)
 .D FILEMSG(MDSTUDY,"TIU",2,MDRESUL)
"RTN","MDRPCOT2",46,0)
 .S RES=MDRESUL
"RTN","MDRPCOT2",47,0)
 ; Update the text of the TIU document
"RTN","MDRPCOT2",48,0)
 S MDG2=@($NA(MDG1))
"RTN","MDRPCOT2",49,0)
 I +$O(@MDG2@(""),-1) D  Q:RES'="" RES
"RTN","MDRPCOT2",50,0)
 .S MDRESUL=$$UPDATE(MDSTUDY,MDESIG,MDG2)
"RTN","MDRPCOT2",51,0)
 .I +MDRESUL<0 D  Q
"RTN","MDRPCOT2",52,0)
 ..D FILEMSG(MDSTUDY,"TIU",2,MDRESUL)
"RTN","MDRPCOT2",53,0)
 ..S RES=MDRESUL
"RTN","MDRPCOT2",54,0)
 ; Submit and export the images
"RTN","MDRPCOT2",55,0)
 ;S MDRESUL=$$SUBMIT^MDRPCOT1(MDSTUDY)
"RTN","MDRPCOT2",56,0)
 ; File message
"RTN","MDRPCOT2",57,0)
 ;D FILEMSG(MDSTUDY,"IMAGING",$S(+MDRESUL>0:+MDRESUL,1:2),MDRESUL)
"RTN","MDRPCOT2",58,0)
 S RES=MDRESUL
"RTN","MDRPCOT2",59,0)
 Q RES
"RTN","MDRPCOT2",60,0)
 ;
"RTN","MDRPCOT2",61,0)
GETDATA(STUDY) ; [Function] Return the Necessary data for creating a TIU note.
"RTN","MDRPCOT2",62,0)
 ; Return: Patient DFN_"^"_TIU title_"^"_Hospital Location_"^"_TIU Note
"RTN","MDRPCOT2",63,0)
 ;         IEN_"^"_Consult #_"^"_CP Definition IEN_"^"_Visit String_"^"
"RTN","MDRPCOT2",64,0)
 ;         New Visit Flag
"RTN","MDRPCOT2",65,0)
 ;         or
"RTN","MDRPCOT2",66,0)
 ;         -1^Error Message
"RTN","MDRPCOT2",67,0)
 N DFN,MDCON,MDFN,MDIEN,MDIENS,MDLOC,MDNEWV,MDNOTE,MDNVST,MDPROC,MDVSTR,MDTITL,MDX,MDTST
"RTN","MDRPCOT2",68,0)
 S MDIEN=+STUDY,MDIENS=MDIEN_",",MDNVST=0
"RTN","MDRPCOT2",69,0)
 I $$GET1^DIQ(702,MDIENS,.01)="" Q "-1^No such study entry."
"RTN","MDRPCOT2",70,0)
 ; Get DFN
"RTN","MDRPCOT2",71,0)
 S DFN=$$GET1^DIQ(702,MDIEN,.01,"I")
"RTN","MDRPCOT2",72,0)
 I 'DFN Q "-1^No DFN."
"RTN","MDRPCOT2",73,0)
 ; Get CP Def
"RTN","MDRPCOT2",74,0)
 S MDPROC=$$GET1^DIQ(702,MDIEN,.04,"I")
"RTN","MDRPCOT2",75,0)
 I 'MDPROC Q "-1^No CP Def."
"RTN","MDRPCOT2",76,0)
 ; Get Consult
"RTN","MDRPCOT2",77,0)
 S MDCON=$$GET1^DIQ(702,MDIEN,.05,"I")
"RTN","MDRPCOT2",78,0)
 I 'MDCON Q "-1^No Consult #."
"RTN","MDRPCOT2",79,0)
 ; Get TIU Note Title
"RTN","MDRPCOT2",80,0)
 S MDTITL=$$GET1^DIQ(702.01,+MDPROC_",",.04,"I")
"RTN","MDRPCOT2",81,0)
 I 'MDTITL Q "-1^No TIU Note Title."
"RTN","MDRPCOT2",82,0)
 S MDVSTR=$$GET1^DIQ(702,MDIEN,.07)
"RTN","MDRPCOT2",83,0)
 I MDVSTR=""  Q "-1^No Visit String."
"RTN","MDRPCOT2",84,0)
 I $L(MDVSTR,";")=1 S MDNVST=1,MDVSTR=";"_MDVSTR ; If new visit is selected
"RTN","MDRPCOT2",85,0)
 ; MDLOC is Hospital Location
"RTN","MDRPCOT2",86,0)
 I MDVSTR'="" D
"RTN","MDRPCOT2",87,0)
 .S MDVSTR=$$GETVSTR^MDRPCOT1(DFN,MDVSTR,MDPROC,$$GET1^DIQ(702,MDIEN,.02,"I"))
"RTN","MDRPCOT2",88,0)
 .S MDLOC=$P(MDVSTR,";",1)
"RTN","MDRPCOT2",89,0)
 ; Does TIU doc already exist?
"RTN","MDRPCOT2",90,0)
 S MDNOTE=""
"RTN","MDRPCOT2",91,0)
 I $$GET1^DIQ(702,MDIEN,.06,"I") Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+$$GET1^DIQ(702,MDIEN,.06,"I")_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT2",92,0)
 ; Does TIU doc exist for previous transaction of this consult?
"RTN","MDRPCOT2",93,0)
 ;I MDCON S MDNOTE=$$PREV(MDCON,MDIEN)
"RTN","MDRPCOT2",94,0)
 Q DFN_"^"_MDTITL_"^"_MDLOC_"^"_+MDNOTE_"^"_MDCON_"^"_MDPROC_"^"_MDVSTR_"^"_MDNVST
"RTN","MDRPCOT2",95,0)
 ;
"RTN","MDRPCOT2",96,0)
NEWTIUN(STUDY) ; [Function] Create a new TIU for transaction
"RTN","MDRPCOT2",97,0)
 ; Input: STUDY - IENS of CP study entry
"RTN","MDRPCOT2",98,0)
 ; Return: TIU Document IEN
"RTN","MDRPCOT2",99,0)
 N CTR,DFN,MDCON,MDFDA,MDGST,MDL,MDLOC,MDNOTE,MDPDT,MDPROC,MDPT,MDRESU,MDTITL,MDTSTR,MDVST,MDVSTR,MDWP S CTR=0,MDGST=+STUDY,MDRESU=""
"RTN","MDRPCOT2",100,0)
 ; Get data for TIU Note Creation
"RTN","MDRPCOT2",101,0)
 S (MDTSTR,MDRESU)=$$GETDATA(MDGST)
"RTN","MDRPCOT2",102,0)
 ; File Error message
"RTN","MDRPCOT2",103,0)
 I +MDRESU<0 D FILEMSG(MDGST,"CP",2,MDRESU) Q MDRESU
"RTN","MDRPCOT2",104,0)
 I $G(MDTSTR)="" Q "-1^No Data to Create TIU Document"
"RTN","MDRPCOT2",105,0)
 F MDL="DFN","MDTITL","MDLOC","MDNOTE","MDCON","MDPROC","MDVSTR","MDNVST" D
"RTN","MDRPCOT2",106,0)
 .S CTR=CTR+1,@MDL=$P(MDTSTR,"^",CTR)
"RTN","MDRPCOT2",107,0)
 S (MDVST,MDRESU)=""
"RTN","MDRPCOT2",108,0)
 ; If previous TIU document exists, quit
"RTN","MDRPCOT2",109,0)
 I 'MDLOC Q "-1^No Hospital Location."
"RTN","MDRPCOT2",110,0)
 I MDNOTE Q MDNOTE
"RTN","MDRPCOT2",111,0)
 ; Create new visit, if no vstring
"RTN","MDRPCOT2",112,0)
 S MDPDT=$$PDT^MDRPCOT1(MDGST)
"RTN","MDRPCOT2",113,0)
 I 'MDPDT S MDPT=$O(^MDD(703.1,"ASTUDYID",+MDGST,0)),MDPDT=$P($G(^MDD(703.1,+MDPT,0)),U,3)
"RTN","MDRPCOT2",114,0)
 S:'MDPDT MDPDT=$P(MDVSTR,";",2) ; If No D/T Performed grab visit D/T
"RTN","MDRPCOT2",115,0)
 ; Build variables for TIU Call
"RTN","MDRPCOT2",116,0)
 S MDWP(.05)=1 ; Undictated Status
"RTN","MDRPCOT2",117,0)
 S MDWP(1405)=+MDCON_";GMR(123," ; Package Reference
"RTN","MDRPCOT2",118,0)
 S MDWP(70201)=5 ; Default Procedure Summary Code "Machine Resulted"
"RTN","MDRPCOT2",119,0)
 I MDPDT S MDWP(70202)=MDPDT ; Date/Time Performed
"RTN","MDRPCOT2",120,0)
 ; File PCE Error message
"RTN","MDRPCOT2",121,0)
 I MDNVST S MDRESU=$$EN1^MDPCE(MDGST,$P(MDVSTR,";",2),(MDPROC_"^"_MDLOC),$P(MDVSTR,";",3),"P") I +MDRESU S MDVST=+MDRESU,MDVSTR=$P(MDRESU,"^",2)
"RTN","MDRPCOT2",122,0)
 ;I MDNVST S MDRESU=$$EN1^MDPCE1(MDGST,MDPDT,MDPROC,$P(MDVSTR,";",3),"P") I +MDRESU S MDVST=+MDRESU,MDVSTR=$P(MDRESU,"^",2)
"RTN","MDRPCOT2",123,0)
 ;I 'MDNVST S MDVST=$P($G(^MDD(702,+MDGST,1)),U) I 'MDVST S MDRESU=$$EN1^MDPCE(MDGST,MDPDT,(MDPROC_"^"_MDLOC),$P(MDVSTR,";",3),"P") I +MDRESU S MDVST=+MDRESU
"RTN","MDRPCOT2",124,0)
 ;I 'MDNVST&$$CHK^MDPCE1(MDGST) S MDRESU=$$EN1^MDPCE1(MDGST,MDPDT,MDPROC,$P(MDVSTR,";",3),"P") I +MDRESU S MDVST=+MDRESU
"RTN","MDRPCOT2",125,0)
 I +MDRESU<0 D FILEMSG(MDGST,"PCE",2,$P(MDRESU,"^",2)) Q MDRESU
"RTN","MDRPCOT2",126,0)
 ; Create the TIU note stub
"RTN","MDRPCOT2",127,0)
 S MDNOTE="" D MAKE^TIUSRVP(.MDNOTE,DFN,MDTITL,$P(MDVSTR,";",2),MDLOC,$S(MDVST:MDVST,1:""),.MDWP,MDVSTR,1,1)
"RTN","MDRPCOT2",128,0)
 I '(+MDNOTE) S $P(MDNOTE,"^")=-1 Q MDNOTE
"RTN","MDRPCOT2",129,0)
 ; Finalize the transaction
"RTN","MDRPCOT2",130,0)
 S MDFDA(702,STUDY_",",.06)=+MDNOTE
"RTN","MDRPCOT2",131,0)
 S MDFDA(702,STUDY_",",.08)=""
"RTN","MDRPCOT2",132,0)
 D FILE^DIE("","MDFDA") K MDFDA
"RTN","MDRPCOT2",133,0)
 D UPD^MDKUTLR(STUDY,+MDNOTE)
"RTN","MDRPCOT2",134,0)
 Q 1
"RTN","MDRPCOT2",135,0)
 ;
"RTN","MDRPCOT2",136,0)
UPDATE(STUDY,SIGN,MDGLB) ; Update the TIU document with the text
"RTN","MDRPCOT2",137,0)
 N MDK,MDNOTE,MDPPR,MDRESU,MDS,MDTI,MDTIUER,MDWP,MDV,MDV1 S (MDNOTE,MDTIUER)="" K MDWP,^TMP("MDTIUST",$J)
"RTN","MDRPCOT2",138,0)
 F MDK=0:0 S MDK=$O(@MDGLB@(MDK)) Q:'MDK  S MDWP("TEXT",MDK,0)=$G(@MDGLB@(MDK))
"RTN","MDRPCOT2",139,0)
 S MDTI=$$GET1^DIQ(702,STUDY_",",.06,"I") Q:'MDTI "-1^No Note."
"RTN","MDRPCOT2",140,0)
 S MDWP(.05)=5
"RTN","MDRPCOT2",141,0)
 S MDWP(1202)=DUZ
"RTN","MDRPCOT2",142,0)
 D UPDATE^TIUSRVP(.MDNOTE,+MDTI,.MDWP,1)
"RTN","MDRPCOT2",143,0)
 I '+MDNOTE S MDNOTE="-1^"_$P(MDNOTE,"^",2) Q MDNOTE
"RTN","MDRPCOT2",144,0)
 ; Sign TIU Document
"RTN","MDRPCOT2",145,0)
 S MDS=$$SIGN(MDTI,SIGN) I MDS<0 Q MDS
"RTN","MDRPCOT2",146,0)
 ;N MDFDA S MDFDA(704.202,STUDY_",",.09)=0
"RTN","MDRPCOT2",147,0)
 S $P(^MDK(704.202,STUDY,0),"^",9)=0
"RTN","MDRPCOT2",148,0)
 ;D FILE^DIE("","MDFDA")
"RTN","MDRPCOT2",149,0)
 N MDFDA S MDFDA(702,STUDY_",",.09)=3
"RTN","MDRPCOT2",150,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOT2",151,0)
 K ^MDK(704.202,"AS",1,STUDY)
"RTN","MDRPCOT2",152,0)
 S ^MDK(704.202,"AS",0,STUDY)=""
"RTN","MDRPCOT2",153,0)
 Q 1
"RTN","MDRPCOT2",154,0)
SIGN(MDTIUIN,MDSIGN) ; Sign the TIU Document
"RTN","MDRPCOT2",155,0)
 ; [Function] TIU SIGN RECORD
"RTN","MDRPCOT2",156,0)
 ;Input Parameters:
"RTN","MDRPCOT2",157,0)
 ;   1.  TIUIEN [Literal/Required] TIU internal Entry Number
"RTN","MDRPCOT2",158,0)
 ;   2.  MDSIGN [Literal/Required] User Signature
"RTN","MDRPCOT2",159,0)
 N MDSRES,X
"RTN","MDRPCOT2",160,0)
 S MDSRES=""
"RTN","MDRPCOT2",161,0)
 D SIGN^TIUSRVP(.MDSRES,MDTIUIN,MDSIGN)
"RTN","MDRPCOT2",162,0)
 I +MDSRES>0 Q "-1^"_$P(MDSRES,"^",2)
"RTN","MDRPCOT2",163,0)
 Q 1
"RTN","MDRPCOT2",164,0)
 ;
"RTN","MDRPCOT2",165,0)
PREV(MDC,MDS) ; [Function] Return the Previous TIU document.
"RTN","MDRPCOT2",166,0)
 N MDNEWV,MDDOC,MDTRAN,MDTIUER,MDTST
"RTN","MDRPCOT2",167,0)
 S (MDDOC,MDNEWV,MDTRAN,MDTIUER,MDTST)="" K ^TMP("MDTIUST",$J)
"RTN","MDRPCOT2",168,0)
 F  S MDTRAN=$O(^MDD(702,"ACON",MDC,MDTRAN)) Q:'MDTRAN  D  Q:'MDTRAN
"RTN","MDRPCOT2",169,0)
 .I $P(^MDD(702,MDTRAN,0),U,6) D
"RTN","MDRPCOT2",170,0)
 ..D EXTRACT^TIULQ($P(^MDD(702,MDTRAN,0),U,6),"^TMP(""MDTIUST"",$J)",MDTIUER,".01;.05;1406") Q:+MDTIUER
"RTN","MDRPCOT2",171,0)
 ..S MDTST=$G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),.05,"E"))
"RTN","MDRPCOT2",172,0)
 ..I MDTST'="UNDICTATED"&(MDTST'="UNSIGNED") K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT2",173,0)
 ..I MDTST="UNSIGNED"&'($G(^TMP("MDTIUST",$J,$P(^MDD(702,MDTRAN,0),U,6),1406,"I"))) K ^TMP("MDTIUST",$J) Q
"RTN","MDRPCOT2",174,0)
 ..S MDDOC=$P(^MDD(702,MDTRAN,0),U,6),MDNEWV=$P(^MDD(702,MDTRAN,0),U,7)
"RTN","MDRPCOT2",175,0)
 ..Q:'MDS
"RTN","MDRPCOT2",176,0)
 ..S MDFDA(702,MDS_",",.06)=MDDOC
"RTN","MDRPCOT2",177,0)
 ..S MDFDA(702,MDS_",",.07)=MDNEWV
"RTN","MDRPCOT2",178,0)
 ..D FILE^DIE("","MDFDA")
"RTN","MDRPCOT2",179,0)
 ..S MDTRAN=""
"RTN","MDRPCOT2",180,0)
 Q MDDOC
"RTN","MDRPCOW")
0^40^B27925312
"RTN","MDRPCOW",1,0)
MDRPCOW ; HOIFO/DP/NCA - Billing Widget ;10/3/05  12:17
"RTN","MDRPCOW",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCOW",3,0)
 ; Reference IA# 2240 [Supported] ENCRYP^XUSRB1 call
"RTN","MDRPCOW",4,0)
 ;               2241 [Supported] DECRYP^XUSRB1 call
"RTN","MDRPCOW",5,0)
 ;               10017 [Supported] ^DD("DD") reference
"RTN","MDRPCOW",6,0)
 ;               10040 [Supported] Hospital Location File Access
"RTN","MDRPCOW",7,0)
 ;               10045 [Supported] XUSHSHP call
"RTN","MDRPCOW",8,0)
 ;               10060 [Supported] FILE 200 references
"RTN","MDRPCOW",9,0)
 ;
"RTN","MDRPCOW",10,0)
RPC(RESULTS,OPTION,P1,P2,P3,P4,P5,P6,P7) ; [Procedure] Main RPC call
"RTN","MDRPCOW",11,0)
 ; RPC: [MD TMDWIDGET]
"RTN","MDRPCOW",12,0)
 ;
"RTN","MDRPCOW",13,0)
 D CLEAN^DILF
"RTN","MDRPCOW",14,0)
 S RESULTS=$NA(^TMP("MDKUTL",$J)) K @RESULTS
"RTN","MDRPCOW",15,0)
 I $T(@OPTION)="" D  Q
"RTN","MDRPCOW",16,0)
 .S @RESULTS@(0)="-1^Error in RPC: MD TMDWIDGET at "_OPTION_U_$T(+0)
"RTN","MDRPCOW",17,0)
 D @OPTION S:'$D(@RESULTS) @RESULTS@(0)="-1^No return"
"RTN","MDRPCOW",18,0)
 D CLEAN^DILF
"RTN","MDRPCOW",19,0)
 Q
"RTN","MDRPCOW",20,0)
 ;
"RTN","MDRPCOW",21,0)
SUBMIT ; Submit a final report to close out an entry in 702
"RTN","MDRPCOW",22,0)
 ;
"RTN","MDRPCOW",23,0)
 ; P1=702 IEN
"RTN","MDRPCOW",24,0)
 ; P2=Encoded E-Sig
"RTN","MDRPCOW",25,0)
 ; P3=Array containing the text for the note
"RTN","MDRPCOW",26,0)
 ;
"RTN","MDRPCOW",27,0)
 I '$D(^MDD(702,+P1,0)) S @RESULTS@(0)="-1^No such study" Q
"RTN","MDRPCOW",28,0)
 I $P(^MDD(702,+P1,0),U,9)=2 S @RESULTS@(0)="-1^Study is in Error status, cannot use study until the error is fixed." Q
"RTN","MDRPCOW",29,0)
 I "016"[$P(^MDD(702,+P1,0),U,9) S @RESULTS@(0)="-1^Cannot submit - not a Dialysis study." Q
"RTN","MDRPCOW",30,0)
 I $D(P3)<1 S @RESULTS@(0)="-1^No note text" Q
"RTN","MDRPCOW",31,0)
 I P2="" D PCE Q
"RTN","MDRPCOW",32,0)
 K ^TMP("MDTXT",$J)
"RTN","MDRPCOW",33,0)
 S X="",Y=1
"RTN","MDRPCOW",34,0)
 F  S X=$O(P3(X)) Q:X=""  S ^TMP("MDTXT",$J,Y)=P3(X),Y=Y+1
"RTN","MDRPCOW",35,0)
 ; a "1^Note Filed" if everything is ok otherwise an error msg
"RTN","MDRPCOW",36,0)
 I P2'="" S P2=$$DECRYP^XUSRB1(P2),P2=$$ENCRYP^XUSRB1(P2)
"RTN","MDRPCOW",37,0)
 ;S @RESULTS@(0)=$$SUBMIT^MDRPCOT2(+P1,P2,$NA(^TMP("MDTXT",$J)),.P7)
"RTN","MDRPCOW",38,0)
 S @RESULTS@(0)=$$SUBMIT^MDRPCOT2(+P1,P2,$NA(^TMP("MDTXT",$J)))
"RTN","MDRPCOW",39,0)
 I +@RESULTS@(0)>0 S @RESULTS@(0)="1^Approval Message"
"RTN","MDRPCOW",40,0)
 N XX S XX="",XX=$$UPDCONS^MDRPCOT1(+$P($G(^MDD(702,+P1,0)),U,5),+$P($G(^MDD(702,+P1,0)),U,6))
"RTN","MDRPCOW",41,0)
 ;
"RTN","MDRPCOW",42,0)
 K ^TMP("MDTXT",$J) Q
"RTN","MDRPCOW",43,0)
 Q
"RTN","MDRPCOW",44,0)
 ;
"RTN","MDRPCOW",45,0)
ESIG ; [Procedure] Verify users electronic signature
"RTN","MDRPCOW",46,0)
 I $G(P1)="" D  Q
"RTN","MDRPCOW",47,0)
 .S @RESULTS@(0)="-1^Must supply electronic signature code"
"RTN","MDRPCOW",48,0)
 S X=$$DECRYP^XUSRB1(P1)
"RTN","MDRPCOW",49,0)
 D HASH^XUSHSHP
"RTN","MDRPCOW",50,0)
 I X'=$$GET1^DIQ(200,DUZ_",",20.4,"I") S @RESULTS@(0)="-1^E-Sig Invalid^"
"RTN","MDRPCOW",51,0)
 E  S @RESULTS@(0)="1^E-Sig Verifed^"_X
"RTN","MDRPCOW",52,0)
 Q
"RTN","MDRPCOW",53,0)
 ;
"RTN","MDRPCOW",54,0)
GETBILL ; Get Billing Data
"RTN","MDRPCOW",55,0)
 Q
"RTN","MDRPCOW",56,0)
 N MDFLD
"RTN","MDRPCOW",57,0)
 ;D BLDFLD^MDXMLFM(.MDFLD,702,".001;;STUDY_ID^.01;;PATIENT_ID")
"RTN","MDRPCOW",58,0)
 ;D BLDFLD^MDXMLFM(.MDFLD,702,".14;;ICD_01^.15;;ICD_02^.16;;ICD_03^.17;;ICD_04^.18;;CPT_01")
"RTN","MDRPCOW",59,0)
 ;D BLDFLD^MDXMLFM(.MDFLD,702,".19;;SC_CONDITION^.2;;MST^.21;;AO_EXPOSURE^.22;;IR_EXPOSURE^.23;;EV_CONTAMINENTS^.24;;HEAD_NECK_CANCER^.25;;COMBAT_VETERAN")
"RTN","MDRPCOW",60,0)
 ;D BLDFLD^MDXMLFM(.MDFLD,702,".26;;PRIMARY_PROVIDER_ID")
"RTN","MDRPCOW",61,0)
 ;D BLDFLD^MDXMLFM(.MDFLD,702,".26:.01;;PRIMARY_PROVIDER_NAME")
"RTN","MDRPCOW",62,0)
 ;D BLDFLD^MDXMLFM(.MDFLD,702,".27;;ATTENDING_PROVIDER_ID")
"RTN","MDRPCOW",63,0)
 ;D BLDFLD^MDXMLFM(.MDFLD,702,".27:.01;;ATTENDING_PROVIDER_NAME")
"RTN","MDRPCOW",64,0)
 ;D LOADONE^MDXMLFM(P1,702,.MDFLD)
"RTN","MDRPCOW",65,0)
 Q
"RTN","MDRPCOW",66,0)
 ;
"RTN","MDRPCOW",67,0)
SETBILL ; Set Billing Data
"RTN","MDRPCOW",68,0)
 N MDFDA,MDERR
"RTN","MDRPCOW",69,0)
 ;F X=0:1:13 S P2(X)=$G(P2(X)) D
"RTN","MDRPCOW",70,0)
 ;.D VAL^DIE(702,+P1_",",.14+(X*.01),"F",P2(X),.MDERR,"MDFDA")
"RTN","MDRPCOW",71,0)
 ;.Q:MDERR'="^"  ; Validated
"RTN","MDRPCOW",72,0)
 ;.S Y="Bad value: "_$$GET1^DID(702,.14+(X*.01),,"LABEL")_" '"_P2(X)_"'"
"RTN","MDRPCOW",73,0)
 ;.S @RESULTS@($O(@RESULTS@(""),-1)+1)=Y
"RTN","MDRPCOW",74,0)
 ;I $D(@RESULTS) S @RESULTS@(0)="-1^Errors filing data" Q
"RTN","MDRPCOW",75,0)
 ;D FILE^DIE("","MDFDA")
"RTN","MDRPCOW",76,0)
 S @RESULTS@(0)="1^Ok"
"RTN","MDRPCOW",77,0)
 Q
"RTN","MDRPCOW",78,0)
 ;
"RTN","MDRPCOW",79,0)
PCE ; Set PCE Data
"RTN","MDRPCOW",80,0)
 ;
"RTN","MDRPCOW",81,0)
 ; P1=702 IEN
"RTN","MDRPCOW",82,0)
 ; P2=Encoded E-Sig
"RTN","MDRPCOW",83,0)
 ; P3=Array containing the text for the note
"RTN","MDRPCOW",84,0)
 ; P7=Array of Billing information
"RTN","MDRPCOW",85,0)
 ;
"RTN","MDRPCOW",86,0)
 N CTR,DFN,MDCON,MDFDA,MDGST,MDL,MDLOC,MDNOTE,MDPDT,MDPROC,MDRESU,MDTITL,MDTSTR,MDVST,MDVSTR,MDWP S CTR=0,MDGST=+P1,MDRESU=""
"RTN","MDRPCOW",87,0)
 I '$D(^MDD(702,+P1,0)) S @RESULTS@(0)="-1^No such study" Q
"RTN","MDRPCOW",88,0)
 ;
"RTN","MDRPCOW",89,0)
 ; Get data to set PCE data
"RTN","MDRPCOW",90,0)
 S (MDTSTR,MDRESU)=$$GETDATA^MDRPCOT2(MDGST)
"RTN","MDRPCOW",91,0)
 ; File Error message
"RTN","MDRPCOW",92,0)
 I +MDRESU<0 S @RESULTS@(0)=MDRESU Q
"RTN","MDRPCOW",93,0)
 I $G(MDTSTR)="" S @RESULTS@(0)="-1^No Data in study to set PCE data." Q
"RTN","MDRPCOW",94,0)
 F MDL="DFN","MDTITL","MDLOC","MDNOTE","MDCON","MDPROC","MDVSTR","MDNVST" D
"RTN","MDRPCOW",95,0)
 .S CTR=CTR+1,@MDL=$P(MDTSTR,"^",CTR)
"RTN","MDRPCOW",96,0)
 S (MDVST,MDRESU)=""
"RTN","MDRPCOW",97,0)
 I 'MDLOC S @RESULTS@(0)="-1^No Hospital Location." Q
"RTN","MDRPCOW",98,0)
 ; Create new visit, if no vstring
"RTN","MDRPCOW",99,0)
 S MDPDT=$$PDT^MDRPCOT1(MDGST)
"RTN","MDRPCOW",100,0)
 S:'MDPDT MDPDT=$P(MDVSTR,";",2) ; If No D/T Performed grab visit D/T
"RTN","MDRPCOW",101,0)
 ; File PCE Error message
"RTN","MDRPCOW",102,0)
 I MDNVST S MDRESU=$$EN1^MDPCE2(.P7,MDGST,$P(MDVSTR,";",2),MDPROC,$P(MDVSTR,";",3),"P",MDLOC) I +MDRESU S MDVST=+MDRESU
"RTN","MDRPCOW",103,0)
 I 'MDNVST S MDVST=$P($G(^MDD(702,+MDGST,1)),U) S MDRESU=$$EN1^MDPCE2(.P7,MDGST,$P(MDVSTR,";",2),MDPROC,$P(MDVSTR,";",3),"P",MDLOC) I +MDRESU S MDVST=+MDRESU
"RTN","MDRPCOW",104,0)
 I +MDRESU<0 S @RESULTS@(0)=MDRESU Q
"RTN","MDRPCOW",105,0)
 ;
"RTN","MDRPCOW",106,0)
 S @RESULTS@(0)="Approval Message"
"RTN","MDRPCOW",107,0)
 Q
"RTN","MDRPCOW",108,0)
GETLOC ; Get the existing hospital location
"RTN","MDRPCOW",109,0)
 N MDCL,MDPR,MDVV
"RTN","MDRPCOW",110,0)
 S MDPR=$P($G(^MDD(702,+P1,0)),U,4)
"RTN","MDRPCOW",111,0)
 S MDVV=$P($G(^MDD(702,+P1,0)),U,7)
"RTN","MDRPCOW",112,0)
 ;S MDCL=$$GET1^DIQ(702.01,+MDPR_",",.05,"I")
"RTN","MDRPCOW",113,0)
 S MDCL=$P(MDVV,";",3)
"RTN","MDRPCOW",114,0)
 I 'MDCL S MDCL=$$GET1^DIQ(702.01,+MDPR_",",.05,"I")
"RTN","MDRPCOW",115,0)
 I 'MDCL S @RESULTS@(0)="-1^No Hospital Location." Q
"RTN","MDRPCOW",116,0)
 S Y=$P(MDVV,";",2) I Y'="" X ^DD("DD")
"RTN","MDRPCOW",117,0)
 S @RESULTS@(0)=MDCL_U_$$GET1^DIQ(44,MDCL_",",.01,"I")_U_Y
"RTN","MDRPCOW",118,0)
 Q
"RTN","MDRPCOW",119,0)
SETLOC ; Set a new clinic location from GUI if non is found.
"RTN","MDRPCOW",120,0)
 N MDVV
"RTN","MDRPCOW",121,0)
 S MDVV=$P($G(^MDD(702,+P1,0)),U,7)
"RTN","MDRPCOW",122,0)
 I P2="" S @RESULTS@(0)="-1^No Location Selected."
"RTN","MDRPCOW",123,0)
 I $L(MDVV,";")=1 S MDVV=";"_MDVV
"RTN","MDRPCOW",124,0)
 S $P(MDVV,";",3)=P2
"RTN","MDRPCOW",125,0)
 S $P(^MDD(702,P1,0),U,7)=MDVV
"RTN","MDRPCOW",126,0)
 S @RESULTS@(0)="1^Okay Location Updated."
"RTN","MDRPCOW",127,0)
 Q
"RTN","MDRPCOW",128,0)
CHECK ; return TRUE if PCE data filled
"RTN","MDRPCOW",129,0)
 N MDIL,MDOKAY,MDCK,MDECTR
"RTN","MDRPCOW",130,0)
 S (MDECTR,MDIL)=0,MDCK="",MDOKAY("POV")="",MDOKAY("CPT")="",MDOKAY("PRV")=""
"RTN","MDRPCOW",131,0)
 F  S MDIL=$O(@P2@(MDIL)) Q:MDIL=""  S MDCK=$G(@P2@(MDIL)) D
"RTN","MDRPCOW",132,0)
 . I $P(MDCK,U,1)="POV" S:$G(MDOKAY("POV"))="" MDOKAY("POV")=1
"RTN","MDRPCOW",133,0)
 . I $P(MDCK,U,1)="CPT" S:$G(MDOKAY("CPT"))="" MDOKAY("CPT")=1
"RTN","MDRPCOW",134,0)
 . I $P(MDCK,U,1)="PRV" S:$G(MDOKAY("PRV"))="" MDOKAY("PRV")=1
"RTN","MDRPCOW",135,0)
 F MDIL="POV","PRV","CPT" S MDECTR=MDECTR+$G(MDOKAY(MDIL))
"RTN","MDRPCOW",136,0)
 I MDECTR<3 S @RESULTS@(0)="-1^Missing PCE data--Review Data Again." Q
"RTN","MDRPCOW",137,0)
 S @RESULTS@(0)=1
"RTN","MDRPCOW",138,0)
 Q
"RTN","MDRPCOW",139,0)
NAME ; Get the person name
"RTN","MDRPCOW",140,0)
 S @RESULTS@(0)="1^"_$$GET1^DIQ(200,+P2_",",.01,"E")
"RTN","MDRPCOW",141,0)
 Q
"RTN","MDRPCOW",142,0)
STAT ; Get the okay status of the CP study
"RTN","MDRPCOW",143,0)
 N MDST,MDGN S MDGN=""
"RTN","MDRPCOW",144,0)
 S MDST=$$GET1^DIQ(702,+P1,.09,"E") S MDGN=MDST
"RTN","MDRPCOW",145,0)
 I $$GET1^DIQ(702,+P1,.09,"I")=2 S MDGN=MDGN_"^"_$$GET1^DIQ(702,+P1,.08,"E")
"RTN","MDRPCOW",146,0)
 S @RESULTS@(0)=MDGN
"RTN","MDRPCOW",147,0)
 Q
"RTN","MDRPCOW",148,0)
STATUS ; [Procedure] Update transaction status
"RTN","MDRPCOW",149,0)
 N MDFDA
"RTN","MDRPCOW",150,0)
 S MDFDA(702,+P1_",",.09)=P2
"RTN","MDRPCOW",151,0)
 D FILE^DIE("","MDFDA")
"RTN","MDRPCOW",152,0)
 S @RESULTS@(0)="1^Done"
"RTN","MDRPCOW",153,0)
 Q
"RTN","MDRPCW")
0^37^B62805042
"RTN","MDRPCW",1,0)
MDRPCW ; HOIFO/NCA - Calls to AICS;04/01/2003 ;11/22/06  08:30
"RTN","MDRPCW",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCW",3,0)
 ; Reference Integration Agreement:
"RTN","MDRPCW",4,0)
 ; IA #142 [Subscription] Access ^DIC(31 NAME field (#.01) with FM
"RTN","MDRPCW",5,0)
 ; IA #174 [Subscription] Access DPT(DFN,.372) node.
"RTN","MDRPCW",6,0)
 ; IA #649 [Subscription] Access DG(391 with FM for
"RTN","MDRPCW",7,0)
 ;                        IGNORE VETERAN CHECK field (#.02).
"RTN","MDRPCW",8,0)
 ; IA #1296 [Subscription] IBDF18A call
"RTN","MDRPCW",9,0)
 ; IA #1593 [Subscription] Access to Provider Narrative file
"RTN","MDRPCW",10,0)
 ;                         (#9999999.27)
"RTN","MDRPCW",11,0)
 ; IA #1894 [Subscription] PXAPI call
"RTN","MDRPCW",12,0)
 ; IA #1995 [Supported] ICPTCOD calls
"RTN","MDRPCW",13,0)
 ; IA #10082 [Supported] Global Access to ICD Diagnosis file (#80)
"RTN","MDRPCW",14,0)
 ; IA #10060 [Supported] Access File 200
"RTN","MDRPCW",15,0)
 ; IA #10061 [Supported] VADPT calls
"RTN","MDRPCW",16,0)
 ;
"RTN","MDRPCW",17,0)
 Q
"RTN","MDRPCW",18,0)
RPC(RESULTS,OPTION,DFN,MDSTUD) ; [Procedure] Main RPC call
"RTN","MDRPCW",19,0)
 ; RPC: [MD TMDCIDC]
"RTN","MDRPCW",20,0)
 ;
"RTN","MDRPCW",21,0)
 ; DFN=Patient internal entry number in Patient file (#2)
"RTN","MDRPCW",22,0)
 ; MDSTUD=CP study internal entry number
"RTN","MDRPCW",23,0)
 ;
"RTN","MDRPCW",24,0)
 D CLEAN^DILF
"RTN","MDRPCW",25,0)
 S RESULTS=$NA(^TMP("MDRPCW",$J)) K @RESULTS
"RTN","MDRPCW",26,0)
 I $G(MDSTUD)="" S @RESULTS@(0)="-1^No Study." Q
"RTN","MDRPCW",27,0)
 I $T(@OPTION)="" D  Q
"RTN","MDRPCW",28,0)
 .S @RESULTS@(0)="-1^Error in RPC: MD TMDCIDC at "_OPTION_U_$T(+0)
"RTN","MDRPCW",29,0)
 D @OPTION S:'$D(@RESULTS) @RESULTS@(0)="-1^No return"
"RTN","MDRPCW",30,0)
 D CLEAN^DILF
"RTN","MDRPCW",31,0)
 Q
"RTN","MDRPCW",32,0)
PROC ; get list of procedures for clinic
"RTN","MDRPCW",33,0)
 N CLIN,MDARR,MDPR,MDV
"RTN","MDRPCW",34,0)
 S MDV=$$GET1^DIQ(702,+MDSTUD_",",.07,"I")
"RTN","MDRPCW",35,0)
 I $G(MDV)="" S @RESULTS@(0)="-1^No Visit." Q
"RTN","MDRPCW",36,0)
 S MDPR=$$GET1^DIQ(702,+MDSTUD_",",.04,"I")
"RTN","MDRPCW",37,0)
 I '$G(MDPR) S @RESULTS@(0)="-1^No CP Definition." Q
"RTN","MDRPCW",38,0)
 S CLIN=$$GET1^DIQ(702.01,+MDPR_",",.05,"I")
"RTN","MDRPCW",39,0)
 I 'CLIN S CLIN=+$P(MDV,";",3) I 'CLIN S @RESULTS@(0)="-1^No Hospital Location." Q
"RTN","MDRPCW",40,0)
 D GETLST^IBDF18A(CLIN,"DG SELECT CPT PROCEDURE CODES","MDARR",,,1,DT)
"RTN","MDRPCW",41,0)
 N MDIDX,MDMOD,CODES,MDFST S MDIDX=0 M @RESULTS=MDARR
"RTN","MDRPCW",42,0)
 F  S MDIDX=$O(@RESULTS@(MDIDX)) Q:'+MDIDX  D
"RTN","MDRPCW",43,0)
 . I @RESULTS@(MDIDX)="" K @RESULTS@(MDIDX) Q
"RTN","MDRPCW",44,0)
 . S MDMOD=0,CODES="",MDFST=1
"RTN","MDRPCW",45,0)
 . F  S MDMOD=$O(@RESULTS@(MDIDX,"MODIFIER",MDMOD)) Q:(MDMOD="")  D
"RTN","MDRPCW",46,0)
 . . I MDFST S MDFST=0
"RTN","MDRPCW",47,0)
 . . E  S CODES=CODES_";"
"RTN","MDRPCW",48,0)
 . . S CODES=CODES_@RESULTS@(MDIDX,"MODIFIER",MDMOD)
"RTN","MDRPCW",49,0)
 . K @RESULTS@(MDIDX,"MODIFIER")
"RTN","MDRPCW",50,0)
 . I 'MDFST S $P(@RESULTS@(MDIDX),U,12)=CODES
"RTN","MDRPCW",51,0)
 Q
"RTN","MDRPCW",52,0)
DIAG ; get list of diagnoses for clinic
"RTN","MDRPCW",53,0)
 N CLIN,MDARR,MDPR,MDV
"RTN","MDRPCW",54,0)
 S MDV=$$GET1^DIQ(702,+MDSTUD_",",.07,"I")
"RTN","MDRPCW",55,0)
 I $G(MDV)="" S @RESULTS@(0)="-1^No Visit." Q
"RTN","MDRPCW",56,0)
 S MDPR=$$GET1^DIQ(702,+MDSTUD_",",.04,"I")
"RTN","MDRPCW",57,0)
 I '$G(MDPR) S @RESULTS@(0)="-1^No CP Definition." Q
"RTN","MDRPCW",58,0)
 S CLIN=$$GET1^DIQ(702.01,+MDPR_",",.05,"I")
"RTN","MDRPCW",59,0)
 I 'CLIN S CLIN=+$P(MDV,";",3) I 'CLIN S @RESULTS@(0)="-1^No Hospital Location." Q
"RTN","MDRPCW",60,0)
 D GETLST^IBDF18A(CLIN,"DG SELECT ICD-9 DIAGNOSIS CODES","MDARR",,,,DT)
"RTN","MDRPCW",61,0)
 M @RESULTS=MDARR
"RTN","MDRPCW",62,0)
 Q
"RTN","MDRPCW",63,0)
SCDISP ; Return Service Connected % and Rated Disabilities
"RTN","MDRPCW",64,0)
 N VAEL,VAERR,I,MDLST,DIS,MDSC,X2
"RTN","MDRPCW",65,0)
 D ELIG^VADPT
"RTN","MDRPCW",66,0)
 S:'+VAEL(3) @RESULTS@(1)="Service Connected: NO"
"RTN","MDRPCW",67,0)
 S:+VAEL(3) @RESULTS@(1)="SC Percent: "_$P(VAEL(3),U,2)_"%"
"RTN","MDRPCW",68,0)
 I 'VAEL(4),'$$GET1^DIQ(391,+VAEL(6)_",",.02,"I") S @RESULTS@(2)="Rated Disabilities: NOT A VETERAN." D KVAR^VADPT Q
"RTN","MDRPCW",69,0)
 S @RESULTS@(2)="Rated Disabilities: "
"RTN","MDRPCW",70,0)
 S I=0,MDLST=0 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X2=^(I,0) D
"RTN","MDRPCW",71,0)
 . S DIS=$$GET1^DIQ(31,+X2_",",.01,"E") Q:DIS=""
"RTN","MDRPCW",72,0)
 . S MDSC=$S($P(X2,U,3):"SC",$P(X2,U,3)']"":"not specified",1:"NSC")
"RTN","MDRPCW",73,0)
 . S MDLST=MDLST+1,@RESULTS@(MDLST+2)="                    "_DIS_" ("_$P(X2,U,2)_"%-"_MDSC_")"
"RTN","MDRPCW",74,0)
 I 'MDLST S @RESULTS@(2)=@RESULTS@(2)_"NONE STATED"
"RTN","MDRPCW",75,0)
 D KVAR^VADPT
"RTN","MDRPCW",76,0)
 Q
"RTN","MDRPCW",77,0)
PCEDISP ; Return print text to display PCE data
"RTN","MDRPCW",78,0)
 ;S RESULTS=$NA(^TMP("MDENC",$J)) K @RESULTS
"RTN","MDRPCW",79,0)
 S STUDY=+MDSTUD
"RTN","MDRPCW",80,0)
 N MDDAR,MDDAR2,CAT,CODE,DIAG,GLOARR,MDCCON,MDX802,MDARR,MDCPT,MDCTR,MDDFN,MDENCDT,MDFLST,MDICD,MDLC,MDLL,MDLOCN,MDPROV,MDRP,MDRST,MDVST,MDVSTR,QTY,MDX,MDX0,MDX1,S S S=";"
"RTN","MDRPCW",81,0)
 N LLB,MDDDN,MDDDV,MDCK,MDNCTR,MDPFLG S (MDCK,MDPFLG)=0
"RTN","MDRPCW",82,0)
 Q:'$G(STUDY)
"RTN","MDRPCW",83,0)
 Q:'$G(^MDD(702,+STUDY,0))
"RTN","MDRPCW",84,0)
 D NOW^%DTC S MDDEF=% K % S MDCTR=0
"RTN","MDRPCW",85,0)
 K ^TMP("MDDAR",$J),GLOARR,MDFLST
"RTN","MDRPCW",86,0)
 S MDX=$G(^MDD(702,+STUDY,0)),MDX1=$G(^(1)),MDCCON=$P(MDX,U,5)
"RTN","MDRPCW",87,0)
 S MDVST=$P(MDX1,U),MDDFN=$P(MDX,U) Q:'MDDFN
"RTN","MDRPCW",88,0)
 S:+MDVST MDPFLG=1
"RTN","MDRPCW",89,0)
 S MDVSTR=$P(MDX,U,7),MDDAR=$NA(^TMP("MDDAR",$J)),MDDAR2=$NA(GLOARR),@MDDAR2@("POV",0)=0,@MDDAR2@("CPT",0)=0,MDLC=0
"RTN","MDRPCW",90,0)
 I 'MDVST S MDRP=0 F  S MDRP=$O(^MDD(702,STUDY,.1,MDRP)) Q:'MDRP  D
"RTN","MDRPCW",91,0)
 .S MDRST=$P($G(^MDD(702,STUDY,.1,+MDRP,0)),"^",3)
"RTN","MDRPCW",92,0)
 .I +MDRST D CICNV^MDHL7U3(+MDRST,.MDDAR) D SETGLO^MDRPCW1(.MDDAR,.MDDAR2)
"RTN","MDRPCW",93,0)
 .K ^TMP("MDDAR",$J) Q
"RTN","MDRPCW",94,0)
 I 'MDVST&(+$G(@MDDAR2@("POV",0))>0) F MDLL=1:1:+$G(@MDDAR2@("POV",0)) S MDLC=MDLC+1,MDFLST(MDLC)=$G(@MDDAR2@("POV",MDLL))
"RTN","MDRPCW",95,0)
 I 'MDVST&(+$G(@MDDAR2@("CPT",0))>0) F MDLL=1:1:+$G(@MDDAR2@("CPT",0)) S MDLC=MDLC+1,MDFLST(MDLC)=$G(@MDDAR2@("CPT",MDLL))
"RTN","MDRPCW",96,0)
 I MDVST>0 S MDENCDT=$P(MDVSTR,";",2),MDLOCN=$P(MDVSTR,";",3)
"RTN","MDRPCW",97,0)
 ;E  S MDENCDT=$$PDT^MDRPCOT1(STUDY)
"RTN","MDRPCW",98,0)
 E  S MDENCDT=$P(MDVSTR,";",2)
"RTN","MDRPCW",99,0)
 S:$L(MDVSTR,";")=1 MDVSTR=";"_MDVSTR
"RTN","MDRPCW",100,0)
 S MDVSTR=$$GETVSTR^MDRPCOT1(MDDFN,MDVSTR,+$P(MDX,U,4),$P(MDX,U,2)),MDLOCN=$P(MDVSTR,";",1)
"RTN","MDRPCW",101,0)
 S:'MDENCDT MDENCDT=$P(MDVSTR,";",2)
"RTN","MDRPCW",102,0)
 S:'MDENCDT MDENCDT=MDDEF
"RTN","MDRPCW",103,0)
 S:'MDLOCN MDLOCN=$P(MDVSTR,";")
"RTN","MDRPCW",104,0)
 S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Visit #: "_$S(MDVST>0:MDVST,1:"")
"RTN","MDRPCW",105,0)
 I '+MDVST S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Encounter Date/Time: "_$E(MDENCDT,4,5)_"/"_$E(MDENCDT,6,7)_"/"_$E(MDENCDT,2,3)
"RTN","MDRPCW",106,0)
 I '+MDVST S MDVST=$$GETENC^PXAPI(MDDFN,MDENCDT,MDLOCN),MDVST=$S(+MDVST<1:0,1:+MDVST),MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Visit # For Encounter Date: "_$S(MDVST>0:MDVST,1:"")
"RTN","MDRPCW",107,0)
 I +MDVST>0 D ENCEVENT^PXAPI(MDVST)
"RTN","MDRPCW",108,0)
 I +MDVST>0 S MDPROV=0 F  S MDPROV=$O(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV)) Q:'MDPROV  D
"RTN","MDRPCW",109,0)
 .Q:'MDPFLG
"RTN","MDRPCW",110,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV,0))
"RTN","MDRPCW",111,0)
 .S CODE=+$P(MDX0,U)
"RTN","MDRPCW",112,0)
 .I +CODE S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Provider: "_$$GET1^DIQ(200,+CODE_",",.01,"E")_" "_$S($P(MDX0,U,4)="P":"Primary",1:"")
"RTN","MDRPCW",113,0)
 I +MDVST>0 S MDICD=0 F  S MDICD=$O(^TMP("PXKENC",$J,MDVST,"POV",MDICD)) Q:'MDICD  D
"RTN","MDRPCW",114,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"POV",MDICD,0)),MDX802=$G(^(802))
"RTN","MDRPCW",115,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW",116,0)
 .S:CODE DIAG=$P($G(^ICD9(+CODE,0)),U)_U_$P($G(^ICD9(+CODE,0)),U,3)
"RTN","MDRPCW",117,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW",118,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW",119,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Diagnosis: "_$P(DIAG,U,2)_" "_$S($P(MDX0,U,12)="P":"Primary",1:""),MDCK=MDCK+1
"RTN","MDRPCW",120,0)
 I +MDVST>0 S MDCPT=0 F  S MDCPT=$O(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT)) Q:'MDCPT  D
"RTN","MDRPCW",121,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT,0)),MDX802=$G(^(802))
"RTN","MDRPCW",122,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW",123,0)
 .S:CODE CODE=$$CPT^ICPTCOD(CODE,MDVST)
"RTN","MDRPCW",124,0)
 .S:CODE DIAG=$P(CODE,U,2,3)
"RTN","MDRPCW",125,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW",126,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW",127,0)
 .S QTY=$P(MDX0,U,16)
"RTN","MDRPCW",128,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="CPT: "_$P(DIAG,U,2)_"-"_QTY,MDCK=MDCK+1
"RTN","MDRPCW",129,0)
 K ^TMP("PXKENC",$J)
"RTN","MDRPCW",130,0)
 I 'MDVST!(+MDCK<1) D
"RTN","MDRPCW",131,0)
 .S MDDDN=$O(^MDD(702,"ACON",MDCCON,+STUDY),-1),MDVST=0
"RTN","MDRPCW",132,0)
 .I MDDDN D
"RTN","MDRPCW",133,0)
 ..S MDDDV=$P($G(^MDD(702,+MDDDN,0)),U,7)
"RTN","MDRPCW",134,0)
 ..S:$L(MDDDV,";")>1 MDENCDT=$P(MDDDV,";",2),MDVST=+$G(^MDD(702,+MDDDN,1)),MDVST=$S(+MDVST<1:0,1:+MDVST)
"RTN","MDRPCW",135,0)
 ..I +MDVST>0 S MDNCTR=0
"RTN","MDRPCW",136,0)
 ..S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Previous Study # Used: "_+MDDDN
"RTN","MDRPCW",137,0)
 ..S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Previous Visit #: "_MDVST_" "_$E(MDENCDT,4,5)_"/"_$E(MDENCDT,6,7)_"/"_$E(MDENCDT,2,3)
"RTN","MDRPCW",138,0)
 I $G(MDFLST(1))'="" S MDLL=0 F  S MDLL=$O(MDFLST(MDLL)) Q:MDLL<1  S:$G(MDFLST(MDLL))'="" MDCTR=MDCTR+1,@RESULTS@(MDCTR)=$G(MDFLST(MDLL))
"RTN","MDRPCW",139,0)
 Q:MDCK>0
"RTN","MDRPCW",140,0)
 Q:'MDVST
"RTN","MDRPCW",141,0)
 D ENCEVENT^PXAPI(MDVST) S:$G(MDNCTR)>0 MDCTR=MDNCTR
"RTN","MDRPCW",142,0)
 S MDPROV=0 F  S MDPROV=$O(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV)) Q:'MDPROV  D
"RTN","MDRPCW",143,0)
 .Q
"RTN","MDRPCW",144,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV,0))
"RTN","MDRPCW",145,0)
 .S CODE=+$P(MDX0,U)
"RTN","MDRPCW",146,0)
 .I +CODE S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="PRV"_U_CODE_U_U_$$GET1^DIQ(200,+CODE_",",.01,"E")_U_U_($P(MDX0,U,4)="P")
"RTN","MDRPCW",147,0)
 ;^TMP("MDENC",$J,n)="POV"^ICD9 IEN^ICD9 CODE^provider narrative category^provider narrative (Short Description)^Primary (1=Yes,0=No)
"RTN","MDRPCW",148,0)
 S MDICD=0 F  S MDICD=$O(^TMP("PXKENC",$J,MDVST,"POV",MDICD)) Q:'MDICD  D
"RTN","MDRPCW",149,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"POV",MDICD,0)),MDX802=$G(^(802))
"RTN","MDRPCW",150,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW",151,0)
 .S:CODE DIAG=$P($G(^ICD9(+CODE,0)),U)_U_$P($G(^ICD9(+CODE,0)),U,3)
"RTN","MDRPCW",152,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW",153,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW",154,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="Diagnosis: "_$P(DIAG,U,2)_" "_$S($P(MDX0,U,12)="P":"Primary",1:"")
"RTN","MDRPCW",155,0)
 S MDCPT=0 F  S MDCPT=$O(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT)) Q:'MDCPT  D
"RTN","MDRPCW",156,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT,0)),MDX802=$G(^(802))
"RTN","MDRPCW",157,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW",158,0)
 .S:CODE CODE=$$CPT^ICPTCOD(CODE,MDVST)
"RTN","MDRPCW",159,0)
 .S:CODE DIAG=$P(CODE,U,2,3)
"RTN","MDRPCW",160,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW",161,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW",162,0)
 .S QTY=$P(MDX0,U,16)
"RTN","MDRPCW",163,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="CPT: "_$P(DIAG,U,2)_"-"_QTY
"RTN","MDRPCW",164,0)
 K ^TMP("PXKENC",$J)
"RTN","MDRPCW",165,0)
 Q
"RTN","MDRPCW",166,0)
TIMEMET ; Check if appointment time is met
"RTN","MDRPCW",167,0)
 N MDNOW,MDTIM,MDV
"RTN","MDRPCW",168,0)
 S MDV=$$GET1^DIQ(702,+MDSTUD_",",.07,"I")
"RTN","MDRPCW",169,0)
 I $G(MDV)="" S @RESULTS@(0)="-1^No Visit." Q
"RTN","MDRPCW",170,0)
 I $L(MDV,";")=1 S MDTIM=MDV
"RTN","MDRPCW",171,0)
 E  S MDTIM=$P(MDV,";",2)
"RTN","MDRPCW",172,0)
 I 'MDTIM S @RESULTS@(0)="-1^No Visit Date/Time." Q
"RTN","MDRPCW",173,0)
 D NOW^%DTC S MDNOW=% K %
"RTN","MDRPCW",174,0)
 I MDNOW<MDTIM S @RESULTS@(0)="0^Appointment/Visit Date/Time not met." Q
"RTN","MDRPCW",175,0)
 S @RESULTS@(0)="1^Appointment/Visit Date/Time have met."
"RTN","MDRPCW",176,0)
 Q
"RTN","MDRPCW1")
0^38^B47358389
"RTN","MDRPCW1",1,0)
MDRPCW1 ; HOIFO/NCA - MD TMDENCOUNTER Object; [05-28-2002 12:55] ;4/4/06  08:45
"RTN","MDRPCW1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDRPCW1",3,0)
 ; Reference Integration Agreement:
"RTN","MDRPCW1",4,0)
 ; IA #1573 [Supported] ICDONE^LEXU call
"RTN","MDRPCW1",5,0)
 ; IA #1593 [Subscription] Access to Provider Narrative file
"RTN","MDRPCW1",6,0)
 ;                         (#9999999.27)
"RTN","MDRPCW1",7,0)
 ; IA #1609 [Supported] CONFIG^LEXSET call
"RTN","MDRPCW1",8,0)
 ; IA #1894 [Subscription] PXAPI call
"RTN","MDRPCW1",9,0)
 ; IA #1995 [Supported] ICPTCOD calls
"RTN","MDRPCW1",10,0)
 ; IA #2288 [Supported] CPCONE^LEXU call
"RTN","MDRPCW1",11,0)
 ; IA #2348 [Subscription] SCCOND^PXUTLSCC call
"RTN","MDRPCW1",12,0)
 ; IA #2950 [Supported] LOOK^LEXA call
"RTN","MDRPCW1",13,0)
 ; IA #10082 [Supported] Global Access to ICD Diagnosis file (#80)
"RTN","MDRPCW1",14,0)
 ; IA #10060 [Supported] FILE 200 references
"RTN","MDRPCW1",15,0)
 ;
"RTN","MDRPCW1",16,0)
CPTMODS(RESULTS,MDCPT) ;Return CPT Modifiers for a CPT Code
"RTN","MDRPCW1",17,0)
 N MDARR,MDIDX,MDI,MDNAME
"RTN","MDRPCW1",18,0)
 S RESULTS=$NA(^TMP("MDMODS",$J)) K @RESULTS
"RTN","MDRPCW1",19,0)
 S MDDATE=DT
"RTN","MDRPCW1",20,0)
 I +($$CODM^ICPTCOD(MDCPT,$NA(MDARR),0,MDDATE)),+$D(MDARR) D
"RTN","MDRPCW1",21,0)
 . S MDIDX="",MDI=0
"RTN","MDRPCW1",22,0)
 . F  S MDIDX=$O(MDARR(MDIDX)) Q:(MDIDX="")  D
"RTN","MDRPCW1",23,0)
 . . S MDI=MDI+1,MDNAME=$P(MDARR(MDIDX),U,1)
"RTN","MDRPCW1",24,0)
 . . S @RESULTS@(MDNAME_MDI)=$P(MDARR(MDIDX),U,2)_U_MDNAME_U_MDIDX
"RTN","MDRPCW1",25,0)
 Q
"RTN","MDRPCW1",26,0)
LEX(RESULTS,MDSRCH,MDAPP)   ; return list after lexicon lookup
"RTN","MDRPCW1",27,0)
 N CODE,LEX,MDLST,MDI,LEXIEN,MDVAL
"RTN","MDRPCW1",28,0)
 S RESULTS=$NA(^TMP("MDLEX",$J)) K @RESULTS
"RTN","MDRPCW1",29,0)
 S MDDATE=DT
"RTN","MDRPCW1",30,0)
 S:MDAPP="CPT" MDAPP="CHP" ; LEX PATCH 10
"RTN","MDRPCW1",31,0)
 D CONFIG^LEXSET(MDAPP,MDAPP,MDDATE)
"RTN","MDRPCW1",32,0)
 D LOOK^LEXA(MDSRCH,MDAPP,1,"",MDDATE)
"RTN","MDRPCW1",33,0)
 I '$D(LEX("LIST",1)) S @RESULTS@(1)="-1^No matches found." Q
"RTN","MDRPCW1",34,0)
 S @RESULTS@(1)=LEX("LIST",1),MDLST=1
"RTN","MDRPCW1",35,0)
 S MDI="" F  S MDI=$O(^TMP("LEXFND",$J,MDI)) Q:MDI'<0  D
"RTN","MDRPCW1",36,0)
 . S LEXIEN=$O(^TMP("LEXFND",$J,MDI,0))
"RTN","MDRPCW1",37,0)
 . S MDLST=MDLST+1,@RESULTS@(MDLST)=LEXIEN_U_^TMP("LEXFND",$J,MDI,LEXIEN)
"RTN","MDRPCW1",38,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","MDRPCW1",39,0)
 S MDI="" F  S MDI=$O(@RESULTS@(MDI)) Q:'MDI  S MDVAL=$G(@RESULTS@(MDI)) D
"RTN","MDRPCW1",40,0)
 . I MDAPP="ICD" S CODE=$$ICDONE^LEXU(+MDVAL,MDDATE),@RESULTS@(MDI)=CODE_U_MDVAL
"RTN","MDRPCW1",41,0)
 . I MDAPP="CPT"!(MDAPP="CHP") S CODE=$$CPTONE^LEXU(+MDVAL,MDDATE),@RESULTS@(MDI)=CODE_U_MDVAL
"RTN","MDRPCW1",42,0)
 . I CODE="",(MDAPP="CHP") S CODE=$$CPCONE^LEXU(+MDVAL,MDDATE),@RESULTS@(MDI)=CODE_U_MDVAL
"RTN","MDRPCW1",43,0)
 Q
"RTN","MDRPCW1",44,0)
GETENC(RESULTS,STUDY) ; Return the current encounter data entered
"RTN","MDRPCW1",45,0)
 S RESULTS=$NA(^TMP("MDENC",$J)) K @RESULTS
"RTN","MDRPCW1",46,0)
 N MDDAR,MDDAR2,CAT,CODE,DIAG,GLOARR,MDCCON,MDX802,MDARR,MDCPT,MDCTR,MDDFN,MDENCDT,MDFLST,MDICD,MDLC,MDLL,MDLOCN,MDPROV,MDRP,MDRST,MDVST,MDVSTR,QTY,MDX,MDX0,MDX1,S S S=";"
"RTN","MDRPCW1",47,0)
 N LLB,MDDDN,MDDDV,MDCK,MDNCTR,MDPFLG S (MDCK,MDPFLG)=0
"RTN","MDRPCW1",48,0)
 Q:'$G(STUDY)
"RTN","MDRPCW1",49,0)
 Q:'$G(^MDD(702,+STUDY,0))
"RTN","MDRPCW1",50,0)
 D NOW^%DTC S MDDEF=% K % S MDCTR=0
"RTN","MDRPCW1",51,0)
 K ^TMP("MDDAR",$J),GLOARR,MDFLST
"RTN","MDRPCW1",52,0)
 S MDX=$G(^MDD(702,+STUDY,0)),MDX1=$G(^(1)),MDCCON=$P(MDX,U,5)
"RTN","MDRPCW1",53,0)
 S MDVST=$P(MDX1,U),MDDFN=$P(MDX,U) Q:'MDDFN
"RTN","MDRPCW1",54,0)
 S:+MDVST MDPFLG=1
"RTN","MDRPCW1",55,0)
 S MDVSTR=$P(MDX,U,7),MDDAR=$NA(^TMP("MDDAR",$J)),MDDAR2=$NA(GLOARR),@MDDAR2@("POV",0)=0,@MDDAR2@("CPT",0)=0,MDLC=0
"RTN","MDRPCW1",56,0)
 I 'MDVST S MDRP=0 F  S MDRP=$O(^MDD(702,STUDY,.1,MDRP)) Q:'MDRP  D
"RTN","MDRPCW1",57,0)
 .S MDRST=$P($G(^MDD(702,STUDY,.1,+MDRP,0)),"^",3)
"RTN","MDRPCW1",58,0)
 .I +MDRST D CICNV^MDHL7U3(+MDRST,.MDDAR) D SETGLO(.MDDAR,.MDDAR2)
"RTN","MDRPCW1",59,0)
 .K ^TMP("MDDAR",$J) Q
"RTN","MDRPCW1",60,0)
 I 'MDVST&(+$G(@MDDAR2@("POV",0))>0) F MDLL=1:1:+$G(@MDDAR2@("POV",0)) S MDLC=MDLC+1,MDFLST(MDLC)=$G(@MDDAR2@("POV",MDLL))
"RTN","MDRPCW1",61,0)
 I 'MDVST&(+$G(@MDDAR2@("CPT",0))>0) F MDLL=1:1:+$G(@MDDAR2@("CPT",0)) S MDLC=MDLC+1,MDFLST(MDLC)=$G(@MDDAR2@("CPT",MDLL))
"RTN","MDRPCW1",62,0)
 I MDVST>0 S MDENCDT=$P(MDVSTR,";",2),MDLOCN=$P(MDVSTR,";",3)
"RTN","MDRPCW1",63,0)
 ;E  S MDENCDT=$$PDT^MDRPCOT1(STUDY)
"RTN","MDRPCW1",64,0)
 E  S MDENCDT=$P(MDVSTR,";",2)
"RTN","MDRPCW1",65,0)
 S:$L(MDVSTR,";")=1 MDVSTR=";"_MDVSTR
"RTN","MDRPCW1",66,0)
 S MDVSTR=$$GETVSTR^MDRPCOT1(MDDFN,MDVSTR,+$P(MDX,U,4),$P(MDX,U,2)),MDLOCN=$P(MDVSTR,";",1)
"RTN","MDRPCW1",67,0)
 S:'MDENCDT MDENCDT=$P(MDVSTR,";",2)
"RTN","MDRPCW1",68,0)
 S:'MDENCDT MDENCDT=MDDEF
"RTN","MDRPCW1",69,0)
 S:'MDLOCN MDLOCN=$P(MDVSTR,";")
"RTN","MDRPCW1",70,0)
 D SCCOND^PXUTLSCC(MDDFN,MDENCDT,MDLOCN,MDVST,.MDARR)
"RTN","MDRPCW1",71,0)
 S MDCTR=MDCTR+1
"RTN","MDRPCW1",72,0)
 ; ^TMP("MDENC",$J,n)="SC";0/1^0/1;"AO";0/1^0/1;"IR";0/1^0/1;"EC";0/1^0/1;"MST";0/1^0/1;"HNC";0/1^0/1;"CV";0/1^0/1
"RTN","MDRPCW1",73,0)
 ;first piece 1 if the condition can be answered
"RTN","MDRPCW1",74,0)
 ;            0 if the condition should be null not asked
"RTN","MDRPCW1",75,0)
 ;second piece - If Scheduling has the answer, 1 = yes 0 = no
"RTN","MDRPCW1",76,0)
 S @RESULTS@(MDCTR)="SC"_S_$G(MDARR("SC"))_S_"AO"_S_$G(MDARR("AO"))_S_"IR"_S_$G(MDARR("IR"))_S_"EC"_S_$G(MDARR("EC"))_S_"MST"_S_$G(MDARR("MST"))_S_"HNC"_S_$G(MDARR("HNC"))_S_"CV"_S_$G(MDARR("CV"))
"RTN","MDRPCW1",77,0)
 I 'MDVST S MDVST=$$GETENC^PXAPI(MDDFN,MDENCDT,MDLOCN),MDVST=$S(+MDVST<1:0,1:+MDVST)
"RTN","MDRPCW1",78,0)
 I +MDVST>0 D ENCEVENT^PXAPI(MDVST)
"RTN","MDRPCW1",79,0)
 ;^TMP("MDENC",$J,n)="PRV"^CODE^^NARR^^Primary (1=Yes,0=No)
"RTN","MDRPCW1",80,0)
 I +MDVST>0 S MDPROV=0 F  S MDPROV=$O(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV)) Q:'MDPROV  D
"RTN","MDRPCW1",81,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV,0))
"RTN","MDRPCW1",82,0)
 .S CODE=+$P(MDX0,U)
"RTN","MDRPCW1",83,0)
 .I +CODE S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="PRV"_U_CODE_U_U_$$GET1^DIQ(200,+CODE_",",.01,"E")_U_U_($P(MDX0,U,4)="P")
"RTN","MDRPCW1",84,0)
 ;^TMP("MDENC",$J,n)="POV"^ICD9 IEN^ICD9 CODE^provider narrative category^provider narrative (Short Description)^Primary (1=Yes,0=No)
"RTN","MDRPCW1",85,0)
 I +MDVST>0 S MDICD=0 F  S MDICD=$O(^TMP("PXKENC",$J,MDVST,"POV",MDICD)) Q:'MDICD  D
"RTN","MDRPCW1",86,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"POV",MDICD,0)),MDX802=$G(^(802))
"RTN","MDRPCW1",87,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW1",88,0)
 .S:CODE DIAG=$P($G(^ICD9(+CODE,0)),U)_U_$P($G(^ICD9(+CODE,0)),U,3)
"RTN","MDRPCW1",89,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW1",90,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW1",91,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="POV"_U_+$G(MDX0,U)_U_$P(DIAG,U)_U_CAT_U_$P(DIAG,U,2)_U_($P(MDX0,U,12)="P"),MDCK=MDCK+1
"RTN","MDRPCW1",92,0)
 ;^TMP("MDENC",$J,n)="CPT"^CPT IEN^CPT CODE^provider narrative category^provider narrative (Short Description)^^Quantity
"RTN","MDRPCW1",93,0)
 I +MDVST>0 S MDCPT=0 F  S MDCPT=$O(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT)) Q:'MDCPT  D
"RTN","MDRPCW1",94,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT,0)),MDX802=$G(^(802))
"RTN","MDRPCW1",95,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW1",96,0)
 .S:CODE CODE=$$CPT^ICPTCOD(CODE,MDVST)
"RTN","MDRPCW1",97,0)
 .S:CODE DIAG=$P(CODE,U,2,3)
"RTN","MDRPCW1",98,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW1",99,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW1",100,0)
 .S QTY=$P(MDX0,U,16)
"RTN","MDRPCW1",101,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="CPT"_U_+$G(MDX0,U)_U_$P(DIAG,U)_U_CAT_U_$P(DIAG,U,2)_U_U_QTY,MDCK=MDCK+1
"RTN","MDRPCW1",102,0)
 K ^TMP("PXKENC",$J)
"RTN","MDRPCW1",103,0)
 I 'MDVST!(+MDCK<1) D
"RTN","MDRPCW1",104,0)
 .S MDDDN=$O(^MDD(702,"ACON",MDCCON,+STUDY),-1),MDVST=0
"RTN","MDRPCW1",105,0)
 .I MDDDN D
"RTN","MDRPCW1",106,0)
 ..S MDDDV=$P($G(^MDD(702,+MDDDN,0)),U,7)
"RTN","MDRPCW1",107,0)
 ..S:$L(MDDDV,";")>1 MDENCDT=$P(MDDDV,";",2),MDVST=+$G(^MDD(702,+MDDDN,1)),MDVST=$S(+MDVST<1:0,1:+MDVST)
"RTN","MDRPCW1",108,0)
 ..I +MDVST>0 S MDNCTR=MDCTR F LLB=2:1:MDCTR K @RESULTS@(MDCTR) S MDNCTR=MDNCTR-1
"RTN","MDRPCW1",109,0)
 I $G(MDFLST(1))'="" S MDLL=0 F  S MDLL=$O(MDFLST(MDLL)) Q:MDLL<1  S:$G(MDFLST(MDLL))'="" MDCTR=MDCTR+1,@RESULTS@(MDCTR)=$G(MDFLST(MDLL))
"RTN","MDRPCW1",110,0)
 Q:MDCK>0
"RTN","MDRPCW1",111,0)
 Q:'MDVST
"RTN","MDRPCW1",112,0)
 D ENCEVENT^PXAPI(MDVST) S:$G(MDNCTR)>0 MDCTR=MDNCTR
"RTN","MDRPCW1",113,0)
 ;^TMP("MDENC",$J,n)="PRV"^CODE^^NARR^^Primary (1=Yes,0=No)
"RTN","MDRPCW1",114,0)
 S MDPROV=0 F  S MDPROV=$O(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV)) Q:'MDPROV  D
"RTN","MDRPCW1",115,0)
 .Q
"RTN","MDRPCW1",116,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"PRV",MDPROV,0))
"RTN","MDRPCW1",117,0)
 .S CODE=+$P(MDX0,U)
"RTN","MDRPCW1",118,0)
 .I +CODE S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="PRV"_U_CODE_U_U_$$GET1^DIQ(200,+CODE_",",.01,"E")_U_U_($P(MDX0,U,4)="P")
"RTN","MDRPCW1",119,0)
 ;^TMP("MDENC",$J,n)="POV"^ICD9 IEN^ICD9 CODE^provider narrative category^provider narrative (Short Description)^Primary (1=Yes,0=No)
"RTN","MDRPCW1",120,0)
 S MDICD=0 F  S MDICD=$O(^TMP("PXKENC",$J,MDVST,"POV",MDICD)) Q:'MDICD  D
"RTN","MDRPCW1",121,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"POV",MDICD,0)),MDX802=$G(^(802))
"RTN","MDRPCW1",122,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW1",123,0)
 .S:CODE DIAG=$P($G(^ICD9(+CODE,0)),U)_U_$P($G(^ICD9(+CODE,0)),U,3)
"RTN","MDRPCW1",124,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW1",125,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW1",126,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="POV"_U_+$G(MDX0,U)_U_$P(DIAG,U)_U_CAT_U_$P(DIAG,U,2)_U_($P(MDX0,U,12)="P")
"RTN","MDRPCW1",127,0)
 ;^TMP("MDENC",$J,n)="CPT"^CPT IEN^CPT CODE^provider narrative category^provider narrative (Short Description)^^Quantity
"RTN","MDRPCW1",128,0)
 S MDCPT=0 F  S MDCPT=$O(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT)) Q:'MDCPT  D
"RTN","MDRPCW1",129,0)
 .S MDX0=$G(^TMP("PXKENC",$J,MDVST,"CPT",MDCPT,0)),MDX802=$G(^(802))
"RTN","MDRPCW1",130,0)
 .S CODE=+$G(MDX0,U)
"RTN","MDRPCW1",131,0)
 .S:CODE CODE=$$CPT^ICPTCOD(CODE,MDVST)
"RTN","MDRPCW1",132,0)
 .S:CODE DIAG=$P(CODE,U,2,3)
"RTN","MDRPCW1",133,0)
 .S CAT=$P(MDX802,U)
"RTN","MDRPCW1",134,0)
 .S:CAT CAT=$P($G(^AUTNPOV(CAT,0)),U)
"RTN","MDRPCW1",135,0)
 .S QTY=$P(MDX0,U,16)
"RTN","MDRPCW1",136,0)
 .S MDCTR=MDCTR+1,@RESULTS@(MDCTR)="CPT"_U_+$G(MDX0,U)_U_$P(DIAG,U)_U_CAT_U_$P(DIAG,U,2)_U_U_QTY
"RTN","MDRPCW1",137,0)
 K ^TMP("PXKENC",$J)
"RTN","MDRPCW1",138,0)
 Q
"RTN","MDRPCW1",139,0)
SETGLO(MDGLO1,MDGLO2) ; Set the ICD and CPT from device into a global array
"RTN","MDRPCW1",140,0)
 N MDA,MDB,MDC
"RTN","MDRPCW1",141,0)
 I +$G(@MDGLO1@(1))<1&(+$G(@MDGLO1@(2))<1) Q
"RTN","MDRPCW1",142,0)
 S MDA=$O(@MDGLO2@("POV",""),-1)
"RTN","MDRPCW1",143,0)
 S MDB=$O(@MDGLO2@("CPT",""),-1)
"RTN","MDRPCW1",144,0)
 F MDC=1:1:+$G(@MDGLO1@(1)) S MDA=MDA+1,@MDGLO2@("POV",MDA)=$G(@MDGLO1@(1,MDC))
"RTN","MDRPCW1",145,0)
 F MDC=1:1:+$G(@MDGLO1@(2)) S MDB=MDB+1,@MDGLO2@("CPT",MDB)=$G(@MDGLO1@(2,MDC))
"RTN","MDRPCW1",146,0)
 S @MDGLO2@("POV",0)=MDA,@MDGLO2@("CPT",0)=MDB
"RTN","MDRPCW1",147,0)
 Q
"RTN","MDRPCW1",148,0)
NTIU(P1) ; Create New TIU note for Result
"RTN","MDRPCW1",149,0)
 I $G(^MDD(702,+P1,0))="" Q 0
"RTN","MDRPCW1",150,0)
 N MDNEWN
"RTN","MDRPCW1",151,0)
 S:$P($G(^MDS(702.01,+$P(^MDD(702,+P1,0),U,4),0)),U,6)=2 MDNEWN=$$NEWTIUN^MDRPCOT2(+P1)
"RTN","MDRPCW1",152,0)
 Q 1
"RTN","MDSTUDL")
0^46^B24274878
"RTN","MDSTUDL",1,0)
MDSTUDL ; HOIFO/NCA - Clinical Procedures Studies List ;10/26/05  11:46
"RTN","MDSTUDL",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDSTUDL",3,0)
 ; Integration Agreements:
"RTN","MDSTUDL",4,0)
 ; IA# 3468 [Subscription] Use GMRCCP APIs.
"RTN","MDSTUDL",5,0)
 ; IA# 2263 [Supported] XPAR calls
"RTN","MDSTUDL",6,0)
 ; IA# 10103 [Supported] XLFDT calls
"RTN","MDSTUDL",7,0)
 ; IA# 10061 [Supported] VADPT calls
"RTN","MDSTUDL",8,0)
 ; IA# 10062 [Supported] VADPT6 calls
"RTN","MDSTUDL",9,0)
 ; IA# 4869 [Private] ^DIC(45.7,
"RTN","MDSTUDL",10,0)
 ;
"RTN","MDSTUDL",11,0)
EN2 ; Print the Clinical Procedures Studies List
"RTN","MDSTUDL",12,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","MDSTUDL",13,0)
S1 R !!,"Select Facility Treating Specialty (or ALL): ",X:DTIME Q:'$T!("^"[X)  S:X="all" X=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ") I X="ALL" S MDSPEC=0
"RTN","MDSTUDL",14,0)
 E  K DIC S DIC="^DIC(45.7,",DIC(0)="EMQ" D ^DIC G:Y<1!($D(DTOUT))!($D(DUOUT)) S1 S MDSPEC=+Y K DIC W !
"RTN","MDSTUDL",15,0)
 W !!,"The report requires a 132 column printer."
"RTN","MDSTUDL",16,0)
 W ! K IOP S %ZIS="MQ",%ZIS("A")="Select LIST Printer: " W ! D ^%ZIS K %ZIS,IOP Q:POP
"RTN","MDSTUDL",17,0)
 I $D(IO("Q")) D QUE Q
"RTN","MDSTUDL",18,0)
 U IO D GETTRAN D ^%ZISC K %ZIS,IOP Q
"RTN","MDSTUDL",19,0)
QUE ; Queue List
"RTN","MDSTUDL",20,0)
 K IO("Q"),ZTUCI,ZTDTH,ZTIO,ZTSAVE,ZTDESC,ZTSK S ZTRTN="GETTRAN^MDSTUDL",ZTREQ="@",ZTSAVE("ZTREQ")="",ZTSAVE("MDSPEC")=""
"RTN","MDSTUDL",21,0)
 S:$D(XQY0) ZTDESC=$P(XQY0,"^",1)
"RTN","MDSTUDL",22,0)
 D ^%ZTLOAD D ^%ZISC U IO W !,"Request Queued",! K ZTSK Q
"RTN","MDSTUDL",23,0)
GETTRAN ; [Procedure] Get a patients transactions
"RTN","MDSTUDL",24,0)
 K ^TMP("MDSTUDL",$J),^TMP("MDINST",$J)
"RTN","MDSTUDL",25,0)
 N BID,DFN,DTP,LN,MDCHKD,MDCHKDT,MDCOM,MDCOMP,MDDEFN,MDMULT,MDNUM,MDPNAM,MDREQ,MDREQDT,MDANOD,MDBNOD,MDCNOD,MDSP,MDTXT,MDURG,MDYR,PG,RESLT,X1,X2,X,Y0
"RTN","MDSTUDL",26,0)
 S RESLT=$NA(^TMP("MDCONL",$J)),LN="",$P(LN,"-",131)="",MDCOM=0
"RTN","MDSTUDL",27,0)
 S PG=0 N % D NOW^%DTC S DTP=%,DTP=$$FMTE^XLFDT(DTP,"1P")
"RTN","MDSTUDL",28,0)
 S MDNUM=$$GET^XPAR("SYS","MD DAYS TO RETAIN COM STUDY",1)
"RTN","MDSTUDL",29,0)
 I +MDNUM>0 S X1=DT,X2=-MDNUM D C^%DTC S MDCOM=X
"RTN","MDSTUDL",30,0)
 S X1=DT,X2=-365 D C^%DTC S MDYR=X
"RTN","MDSTUDL",31,0)
 F DFN=0:0 S DFN=$O(^MDD(702,"B",DFN)) Q:'DFN  D
"RTN","MDSTUDL",32,0)
 .D DEM^VADPT S MDPNAM=$G(VADM(1)) K VADM D PID^VADPT6 S BID=$G(VA("BID")) K VA
"RTN","MDSTUDL",33,0)
 .S MDBNOD=$S($L(MDPNAM)>24:$E(MDPNAM,1,24),1:MDPNAM)_"~"_BID
"RTN","MDSTUDL",34,0)
 .K @RESLT D GETCON(.RESLT,DFN)
"RTN","MDSTUDL",35,0)
 .F MDX=0:0 S MDX=$O(^MDD(702,"B",DFN,+MDX))_"," Q:'MDX  D
"RTN","MDSTUDL",36,0)
 ..S (MDANOD,MDCNOD)=""
"RTN","MDSTUDL",37,0)
 ..Q:'$$GET1^DIQ(702,MDX,.05,"I")
"RTN","MDSTUDL",38,0)
 ..Q:$G(^TMP("MDCONL",$J,+$$GET1^DIQ(702,MDX,.05,"I")))=""
"RTN","MDSTUDL",39,0)
 ..S MDMULT=$$GET1^DIQ(702,MDX,".04:.12","I")
"RTN","MDSTUDL",40,0)
 ..S MDCOMP=$S(+MDMULT<1:MDCOM,1:MDYR)
"RTN","MDSTUDL",41,0)
 ..I MDNUM Q:$$GET1^DIQ(702,MDX,.09,"I")=3&($$GET1^DIQ(702,MDX,.02,"I")<MDCOMP)
"RTN","MDSTUDL",42,0)
 ..S MDREQDT="" I +$$GET1^DIQ(702,MDX,.05,"I") S MDREQDT=$P($G(^TMP("MDCONL",$J,+$$GET1^DIQ(702,MDX,.05,"I"))),U)
"RTN","MDSTUDL",43,0)
 ..I MDREQDT'="" S MDREQDT=$$FMTE^XLFDT(MDREQDT,"2P")
"RTN","MDSTUDL",44,0)
 ..S MDURG="" I +$$GET1^DIQ(702,MDX,.05,"I") S MDURG=$P($G(^TMP("MDCONL",$J,+$$GET1^DIQ(702,MDX,.05,"I"))),U,2)
"RTN","MDSTUDL",45,0)
 ..S MDREQ=$$GET1^DIQ(702,MDX,.04) S:$L(MDREQ)>25 MDREQ=$E(MDREQ,1,25)
"RTN","MDSTUDL",46,0)
 ..S (MDCHKD,MDCHKDT)=$$GET1^DIQ(702,MDX,.02,"I"),MDCHKDT=$$FMTE^XLFDT(MDCHKDT,"2P")
"RTN","MDSTUDL",47,0)
 ..S Z=MDREQ_U_MDCHKDT_U_$$GET1^DIQ(702,MDX,.05,"I")_U_MDREQDT_U_$$GET1^DIQ(702,MDX,.09)_U_MDURG
"RTN","MDSTUDL",48,0)
 ..S MDANOD="UNASSIGNED",MDSP=+$$GET1^DIQ(702,MDX,".04:.02","I")
"RTN","MDSTUDL",49,0)
 ..I +MDSP Q:+MDSPEC>0&(+MDSPEC'=+MDSP)  S MDANOD=$$GET1^DIQ(702,MDX,".04:.02")
"RTN","MDSTUDL",50,0)
 ..S MDANOD=MDANOD_"~"_$$GET1^DIQ(702,MDX,.11)
"RTN","MDSTUDL",51,0)
 ..S:'$D(^TMP("MDINST",$J,MDANOD)) ^TMP("MDINST",$J,MDANOD)=+MDSP_"^"_$$GET1^DIQ(702,MDX,.11,"I")
"RTN","MDSTUDL",52,0)
 ..I +$$GET1^DIQ(702,MDX,.04,"I") S MDDEFN=$$GET1^DIQ(702,MDX,.04),MDCNOD=MDDEFN_"~"_MDBNOD
"RTN","MDSTUDL",53,0)
 ..S ^TMP("MDSTUDL",$J,+MDSP,+$$GET1^DIQ(702,MDX,.11,"I"),MDCNOD,MDCHKD)=Z
"RTN","MDSTUDL",54,0)
 N MDCT S MDCT=0
"RTN","MDSTUDL",55,0)
 N MDLOP S MDLOP="" F  S MDLOP=$O(^TMP("MDINST",$J,MDLOP)) Q:MDLOP=""   S MDSUBS=$G(^(MDLOP)) D
"RTN","MDSTUDL",56,0)
 .D HDR
"RTN","MDSTUDL",57,0)
 .S MDANOD="" F  S MDANOD=$O(^TMP("MDSTUDL",$J,+MDSUBS,+$P(MDSUBS,U,2),MDANOD)) Q:MDANOD=""  S MDBNOD="" F  S MDBNOD=$O(^TMP("MDSTUDL",$J,+MDSUBS,+$P(MDSUBS,U,2),MDANOD,MDBNOD)) Q:MDBNOD=""  D
"RTN","MDSTUDL",58,0)
 ..S Y0=$G(^TMP("MDSTUDL",$J,+MDSUBS,+$P(MDSUBS,U,2),MDANOD,MDBNOD))
"RTN","MDSTUDL",59,0)
 ..D:$Y>(IOSL-8) HDR
"RTN","MDSTUDL",60,0)
 ..W !,$P(MDANOD,"~",2),?25,$P(MDANOD,"~",3),?31,$P(Y0,U,3),?45,$P(Y0,U,4),?67,$S($L($P(Y0,U,6))>10:$E($P(Y0,U,6),1,10),1:$P(Y0,U,6)),?78,$P(Y0,U),?104,$E($P(Y0,U,5),1,5),?111,$P(Y0,U,2),!
"RTN","MDSTUDL",61,0)
 K ^TMP("MDSTUDL",$J),^TMP("MDCONL",$J),^TMP("MDINST",$J)
"RTN","MDSTUDL",62,0)
 Q
"RTN","MDSTUDL",63,0)
GETCON(RESLT,DFN) ; Get Consult
"RTN","MDSTUDL",64,0)
 K ^TMP("MDTMPL",$J) N MDCDT,X1,X2,X
"RTN","MDSTUDL",65,0)
 S X1=DT,X2=-365 D C^%DTC S MDCDT=X
"RTN","MDSTUDL",66,0)
 D CPLIST^GMRCCP(DFN,,$NA(^TMP("MDTMPL",$J)))
"RTN","MDSTUDL",67,0)
 S MDX=0 F  S MDX=$O(^TMP("MDTMPL",$J,MDX)) Q:'MDX  D:"saprc"[$P(^(MDX),U,4)
"RTN","MDSTUDL",68,0)
 .I $P($G(^TMP("MDTMP",$J,MDX)),U,4)="c" Q:$P($G(^TMP("MDTMP",$J,MDX)),U,1)<MDCDT
"RTN","MDSTUDL",69,0)
 .S @RESLT@($P($G(^TMP("MDTMPL",$J,MDX)),U,5))=$P($G(^TMP("MDTMPL",$J,MDX)),U,1)_"^"_$P($G(^TMP("MDTMPL",$J,MDX)),U,3) Q
"RTN","MDSTUDL",70,0)
 K ^TMP("MDTMPL",$J)
"RTN","MDSTUDL",71,0)
 Q
"RTN","MDSTUDL",72,0)
HDR ; List Header
"RTN","MDSTUDL",73,0)
 W:'($E(IOST,1,2)'="C-"&'PG) @IOF S PG=PG+1
"RTN","MDSTUDL",74,0)
 W !,DTP,?43,"C L I N I C A L   P R O C E D U R E S   S T U D I E S   L I S T",?125,"Page ",PG,!
"RTN","MDSTUDL",75,0)
 S Y=$S($P(MDLOP,"~")="UNASSIGNED":"",1:$P(MDLOP,"~")) W:Y'="" !!?(131-$L(Y)\2),Y
"RTN","MDSTUDL",76,0)
 W !!,$P(MDLOP,"~",2) S Y="",$P(Y,"=",$L($P(MDLOP,"~",2))+1)="" W !,Y,!
"RTN","MDSTUDL",77,0)
 W !?47,"Reqd.",?106,"CP",?113,"Check-In",!,"Patient",?25,"ID#",?31,"Consult #",?45,"Date/Time",?67,"Urgency",?78,"Procedure",?104,"Status",?113,"Date/Time",!,LN,!
"RTN","MDSTUDL",78,0)
 Q
"RTN","MDUXML")
0^20^B2156762
"RTN","MDUXML",1,0)
MDUXML ; HOIFO/WAA -Utilities for XML text  ; 7/26/00
"RTN","MDUXML",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDUXML",3,0)
 ; This routine will loop throught the HL7 Message as sent
"RTN","MDUXML",4,0)
 ; by the vendor and convert that message into XML for
"RTN","MDUXML",5,0)
 ; Processing by the gateway.
"RTN","MDUXML",6,0)
 ;
"RTN","MDUXML",7,0)
EN1 ;
"RTN","MDUXML",8,0)
 N NUM,LBL,XMLCNT,XMLLINE,DL,DEVICE,Q,ORDER
"RTN","MDUXML",9,0)
 K ^TMP($J,"MDHL7XML")
"RTN","MDUXML",10,0)
 S DL="|",QUOT=""""
"RTN","MDUXML",11,0)
 S (XMLCNT,ORDER,NUM)=0
"RTN","MDUXML",12,0)
 D HEAD^MDUXMLU1
"RTN","MDUXML",13,0)
 F  S NUM=$O(^TMP($J,"MDHL7A",NUM)) Q:NUM<1  D
"RTN","MDUXML",14,0)
 . N LINE,LBL
"RTN","MDUXML",15,0)
 . S LINE=$G(^TMP($J,"MDHL7A",NUM)) Q:LINE=""
"RTN","MDUXML",16,0)
 . I $P(LINE,DL,1)="OBX" D
"RTN","MDUXML",17,0)
 . . I LINE["//" S LINE=$TR(LINE,"/","\")
"RTN","MDUXML",18,0)
 . . I LINE["\E\" D
"RTN","MDUXML",19,0)
 . . . N Y,Z,I S Z="" F I=1:1:$L(LINE) S Y=$E(LINE,I) D:Y="\"  S Z=Z_Y
"RTN","MDUXML",20,0)
 . . . . I $E(LINE,I+1)="E",$E(LINE,I+2)="\" S I=I+2
"RTN","MDUXML",21,0)
 . . . . Q
"RTN","MDUXML",22,0)
 . . . S LINE=Z
"RTN","MDUXML",23,0)
 . . . Q
"RTN","MDUXML",24,0)
 . . I $P(LINE,DL,6)["\\" D
"RTN","MDUXML",25,0)
 . . . N I
"RTN","MDUXML",26,0)
 . . . S I=$O(^TMP($J,"MDHL7A",NUM),-1)
"RTN","MDUXML",27,0)
 . . . S ^TMP($J,"MDHL7A",(NUM+1))="OBX||ST|PROCEDURE STATUS||DONE"
"RTN","MDUXML",28,0)
 . . . Q
"RTN","MDUXML",29,0)
 . . Q
"RTN","MDUXML",30,0)
 . S LINE=$$VAL^MDUXMLU1(LINE)
"RTN","MDUXML",31,0)
 . S LBL=$P(LINE,DL,1)
"RTN","MDUXML",32,0)
 . Q:'($S(LBL="MSH":1,LBL="PID":1,LBL="PV1":1,LBL="ORC":1,LBL="OBR":1,LBL="OBX":1,1:0))
"RTN","MDUXML",33,0)
 . S LBL=LBL_"^MDUXMLM"
"RTN","MDUXML",34,0)
 . D @LBL
"RTN","MDUXML",35,0)
 . Q
"RTN","MDUXML",36,0)
 D TAIL^MDUXMLU1
"RTN","MDUXML",37,0)
 Q
"RTN","MDUXMLM")
0^22^B10255428
"RTN","MDUXMLM",1,0)
MDUXMLM ; HOIFO/WAA -Utilities for XML text  ; 7/26/00
"RTN","MDUXMLM",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDUXMLM",3,0)
 ; This routine will loop throught the HL7 Message as sent
"RTN","MDUXMLM",4,0)
 ; by the vendor and convert that message into XML for
"RTN","MDUXMLM",5,0)
 ; Processing by the gateway.
"RTN","MDUXMLM",6,0)
 ;
"RTN","MDUXMLM",7,0)
MSH ; Parse the MSH
"RTN","MDUXMLM",8,0)
 N MSGDATE
"RTN","MDUXMLM",9,0)
 D XML^MDUXMLU1("<MESSAGE_HEADER>")
"RTN","MDUXMLM",10,0)
 D BLDXML^MDUXMLU1("INTERNAL_APPLICATION","CLOB")
"RTN","MDUXMLM",11,0)
 S DEVICE=$P(LINE,DL,4)
"RTN","MDUXMLM",12,0)
 D BLDXML^MDUXMLU1("INSTRUMENT_INSTANCE_ID",DEVICE)
"RTN","MDUXMLM",13,0)
 S MSGDATE=$P(LINE,DL,7) I MSGDATE="" D
"RTN","MDUXMLM",14,0)
 . D NOW^%DTC
"RTN","MDUXMLM",15,0)
 . S MSGDATE=%
"RTN","MDUXMLM",16,0)
 . S MSGDATE=$$FTOHL7^MDHL7U2(MSGDATE)
"RTN","MDUXMLM",17,0)
 . Q
"RTN","MDUXMLM",18,0)
 D DATE^MDUXMLU1("TRANSMISSION_DATE_TIME",MSGDATE)
"RTN","MDUXMLM",19,0)
 D BLDXML^MDUXMLU1("MESSAGE_CONTROL_ID",$P(LINE,DL,10))
"RTN","MDUXMLM",20,0)
 D BLDXML^MDUXMLU1("MESSAGE_TYPE",$P(LINE,DL,9))
"RTN","MDUXMLM",21,0)
 D BLDXML^MDUXMLU1("PRODUCTION_MODE",$S($P(LINE,DL,11)="P":"Y",1:"N"))
"RTN","MDUXMLM",22,0)
 D BLDXML^MDUXMLU1("HL7_VERSION",$P(LINE,DL,12))
"RTN","MDUXMLM",23,0)
 D XML^MDUXMLU1("</MESSAGE_HEADER>")
"RTN","MDUXMLM",24,0)
 Q
"RTN","MDUXMLM",25,0)
PID ; Parse the PID
"RTN","MDUXMLM",26,0)
 N SSN
"RTN","MDUXMLM",27,0)
 D XML^MDUXMLU1("<PATIENT_INFORMATION>")
"RTN","MDUXMLM",28,0)
 D BLDXML^MDUXMLU1("PATIENT_ID",$P(LINE,DL,4))
"RTN","MDUXMLM",29,0)
 D XML^MDUXMLU1("<PATIENT_NAME>")
"RTN","MDUXMLM",30,0)
 D NAME^MDUXMLU1($P(LINE,DL,6))
"RTN","MDUXMLM",31,0)
 D XML^MDUXMLU1("</PATIENT_NAME>")
"RTN","MDUXMLM",32,0)
 D DATE^MDUXMLU1("DATE_OF_BIRTH",$P(LINE,DL,8))
"RTN","MDUXMLM",33,0)
 D BLDXML^MDUXMLU1("SEX",$P(LINE,DL,9))
"RTN","MDUXMLM",34,0)
 S SSN=$P(LINE,DL,20) I SSN="" S SSN=$P(LINE,DL,4)
"RTN","MDUXMLM",35,0)
 D BLDXML^MDUXMLU1("SSN",$P(LINE,DL,20))
"RTN","MDUXMLM",36,0)
 D XML^MDUXMLU1("</PATIENT_INFORMATION>")
"RTN","MDUXMLM",37,0)
 Q
"RTN","MDUXMLM",38,0)
PV1 ; Parse the PV1
"RTN","MDUXMLM",39,0)
 D BLDXML^MDUXMLU1("PATIENT_CLASS",$P(LINE,DL,3))
"RTN","MDUXMLM",40,0)
 D BLDXML^MDUXMLU1("PATIENT_LOCATION",$P(LINE,DL,4))
"RTN","MDUXMLM",41,0)
 Q
"RTN","MDUXMLM",42,0)
ORC ; Parse the ORC
"RTN","MDUXMLM",43,0)
 S ORDER=1
"RTN","MDUXMLM",44,0)
 D XML^MDUXMLU1("<ORDER_INFORMATION>")
"RTN","MDUXMLM",45,0)
 D BLDXML^MDUXMLU1("ORDER_CONTROL",$P(LINE,DL,2))
"RTN","MDUXMLM",46,0)
 D BLDXML^MDUXMLU1("PLACER_ORDER_NUMBER",$P(LINE,DL,3))
"RTN","MDUXMLM",47,0)
 D DATE^MDUXMLU1("TRANSACTION_DATE_TIME",$P(LINE,DL,10))
"RTN","MDUXMLM",48,0)
 Q
"RTN","MDUXMLM",49,0)
OBR ; Parse the OBR
"RTN","MDUXMLM",50,0)
 D XML^MDUXMLU1("<RESULTS>")
"RTN","MDUXMLM",51,0)
 D BLDXML^MDUXMLU1("FILLER_ORDER_NUMBER",$P(LINE,DL,4))
"RTN","MDUXMLM",52,0)
 D BLDXML^MDUXMLU1("PROCEDURE_INSTANCE_ID",$P(LINE,DL,4))
"RTN","MDUXMLM",53,0)
 I $P(LINE,DL,5)'="" D  ; Get the procedure type if there is one.
"RTN","MDUXMLM",54,0)
 . N LINX
"RTN","MDUXMLM",55,0)
 . S LINX=$P($P(LINE,DL,5),"^")
"RTN","MDUXMLM",56,0)
 . I LINX="" S LINX=$P($P(LINE,DL,5),"^",2)
"RTN","MDUXMLM",57,0)
 . D BLDXML^MDUXMLU1("PROCEDURE_TYPE",LINX)
"RTN","MDUXMLM",58,0)
 . Q
"RTN","MDUXMLM",59,0)
 D DATE^MDUXMLU1("DATE_OBSERVED",$P(LINE,DL,8))
"RTN","MDUXMLM",60,0)
 I $P(LINE,DL,14)'="" D  ; Pick up ICD9 code
"RTN","MDUXMLM",61,0)
 . D XML^MDUXMLU1("<RELEVENT_CLINICAL>")
"RTN","MDUXMLM",62,0)
 . D CODING^MDUXMLU1("ICD",$P(LINE,DL,14))
"RTN","MDUXMLM",63,0)
 . D XML^MDUXMLU1("</RELEVENT_CLINICAL>")
"RTN","MDUXMLM",64,0)
 . Q
"RTN","MDUXMLM",65,0)
 I $P(LINE,DL,17)'="" D
"RTN","MDUXMLM",66,0)
 . D XML^MDUXMLU1("<ORDERING_PROVIDER>")
"RTN","MDUXMLM",67,0)
 . D NAME^MDUXMLU1($P(LINE,DL,17))
"RTN","MDUXMLM",68,0)
 . D XML^MDUXMLU1("</ORDERING_PROVIDER>")
"RTN","MDUXMLM",69,0)
 . Q
"RTN","MDUXMLM",70,0)
 D BLDXML^MDUXMLU1("STATUS",$P(LINE,DL,26))
"RTN","MDUXMLM",71,0)
 D BLDXML^MDUXMLU1("QUALITY_TIMING",$P(LINE,DL,28))
"RTN","MDUXMLM",72,0)
 I $P(LINE,DL,37)'="" D DATE^MDUXMLU1("DATE_SCHEDULED",$P(LINE,DL,37))
"RTN","MDUXMLM",73,0)
 I $P(LINE,DL,45)'="" D  ; Pick up CPT code
"RTN","MDUXMLM",74,0)
 . D XML^MDUXMLU1("<PROCEDURE_CODE>")
"RTN","MDUXMLM",75,0)
 . D CODING^MDUXMLU1("CPT",$P(LINE,DL,45))
"RTN","MDUXMLM",76,0)
 . D XML^MDUXMLU1("</PROCEDURE_CODE>")
"RTN","MDUXMLM",77,0)
 . Q
"RTN","MDUXMLM",78,0)
 Q
"RTN","MDUXMLM",79,0)
OBX ; Parse the OBX
"RTN","MDUXMLM",80,0)
 D OBX^MDUXMLOX
"RTN","MDUXMLM",81,0)
 Q
"RTN","MDUXMLOX")
0^23^B2576985
"RTN","MDUXMLOX",1,0)
MDUXMLOX ; HOIFO/WAA -OBX converter XML text  ; 7/26/00
"RTN","MDUXMLOX",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDUXMLOX",3,0)
 ; OBX for the XML Parser
"RTN","MDUXMLOX",4,0)
 ;
"RTN","MDUXMLOX",5,0)
OBX D XML^MDUXMLU1("<OBSERVATION>")
"RTN","MDUXMLOX",6,0)
 D BLDXML^MDUXMLU1("SEQUENCE",$P(LINE,DL,2))
"RTN","MDUXMLOX",7,0)
 D XML^MDUXMLU1("<CODE>")
"RTN","MDUXMLOX",8,0)
 D BLDXML^MDUXMLU1("SCHEME",DEVICE)
"RTN","MDUXMLOX",9,0)
 I $P($P(LINE,DL,4),"^")="",$P($P(LINE,DL,4),"^",2)'="" S $P(LINE,DL,4)=$P($P(LINE,DL,4),"^",2)
"RTN","MDUXMLOX",10,0)
 D BLDXML^MDUXMLU1("VALUE",$P(LINE,DL,4))
"RTN","MDUXMLOX",11,0)
 D BLDXML^MDUXMLU1("ORIGINAL","Y")
"RTN","MDUXMLOX",12,0)
 D XML^MDUXMLU1("</CODE>")
"RTN","MDUXMLOX",13,0)
 D BLDXML^MDUXMLU1("DATATYPE",$P(LINE,DL,3))
"RTN","MDUXMLOX",14,0)
 I $P(LINE,DL,3)="FT" D FREE
"RTN","MDUXMLOX",15,0)
 E  D BLDXML^MDUXMLU1("VALUE",$P(LINE,DL,6))
"RTN","MDUXMLOX",16,0)
 D BLDXML^MDUXMLU1("UNITS",$P(LINE,DL,7))
"RTN","MDUXMLOX",17,0)
 I $P(LINE,DL,8)'="" D
"RTN","MDUXMLOX",18,0)
 . N RANGE
"RTN","MDUXMLOX",19,0)
 . S RANGE=$P(LINE,DL,8)
"RTN","MDUXMLOX",20,0)
 . D XML^MDUXMLU1("<REFERENCE_RANGE>")
"RTN","MDUXMLOX",21,0)
 . D BLDXML^MDUXMLU1("LOW",$P(RANGE,"-",1))
"RTN","MDUXMLOX",22,0)
 . D BLDXML^MDUXMLU1("HIGH",$P(RANGE,"-",2))
"RTN","MDUXMLOX",23,0)
 . D XML^MDUXMLU1("</REFERENCE_RANGE>")
"RTN","MDUXMLOX",24,0)
 D XML^MDUXMLU1("</OBSERVATION>")
"RTN","MDUXMLOX",25,0)
 Q
"RTN","MDUXMLOX",26,0)
FREE ; This will process free test
"RTN","MDUXMLOX",27,0)
 D XML^MDUXMLU1("<VALUE>")
"RTN","MDUXMLOX",28,0)
 N I,X,FREE,DATA
"RTN","MDUXMLOX",29,0)
 S I=1
"RTN","MDUXMLOX",30,0)
 D XML^MDUXMLU1($P(LINE,DL,6)) ; First line
"RTN","MDUXMLOX",31,0)
 S X=0
"RTN","MDUXMLOX",32,0)
 F  S X=$O(^TMP($J,"MDHL7A",NUM,X)) Q:X<1  D
"RTN","MDUXMLOX",33,0)
 . S DATA=$G(^TMP($J,"MDHL7A",NUM,X)) Q:DATA=""
"RTN","MDUXMLOX",34,0)
 . S DATA=$$VAL^MDUXMLU1($P(DATA,DL))
"RTN","MDUXMLOX",35,0)
 . D XML^MDUXMLU1(DATA)
"RTN","MDUXMLOX",36,0)
 . Q
"RTN","MDUXMLOX",37,0)
 ; ^---  THIS STUFF THE DATA INTO THE DATA ARRAY
"RTN","MDUXMLOX",38,0)
 D XML^MDUXMLU1("</VALUE>")
"RTN","MDUXMLOX",39,0)
 Q
"RTN","MDUXMLU1")
0^24^B11032081
"RTN","MDUXMLU1",1,0)
MDUXMLU1 ; HOIFO/WAA -Utilities for XML text  ; 7/26/00
"RTN","MDUXMLU1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDUXMLU1",3,0)
 ; Utilities for the XML Parser
"RTN","MDUXMLU1",4,0)
 ;
"RTN","MDUXMLU1",5,0)
FILTER(DATA) ;Filter out the bad chars.
"RTN","MDUXMLU1",6,0)
 Q:$G(DATA)'?.E1C.E DATA
"RTN","MDUXMLU1",7,0)
 N RESULTS
"RTN","MDUXMLU1",8,0)
 S RESULTS=""
"RTN","MDUXMLU1",9,0)
 F  Q:'$L(DATA)  S:$E(DATA)'?1C RESULTS=RESULTS_$E(DATA) S DATA=$E(DATA,2,$L(DATA))
"RTN","MDUXMLU1",10,0)
 Q RESULTS
"RTN","MDUXMLU1",11,0)
VAL(DATA) ;Convert any special charcters to standard XML format
"RTN","MDUXMLU1",12,0)
 N DATA2,RESULT,CHAR,CHAR1,CHAR2,CNT,I
"RTN","MDUXMLU1",13,0)
 S RESULT="",CNT=0,I=0,DATA2=""
"RTN","MDUXMLU1",14,0)
 S DATA=$$FILTER(DATA)
"RTN","MDUXMLU1",15,0)
 F CHAR="&,amp","<,lt",">,gt","',apos",""",quot" D
"RTN","MDUXMLU1",16,0)
 . S CNT=$L(DATA,$P(CHAR,","))
"RTN","MDUXMLU1",17,0)
 . S CHAR1=$P(CHAR,","),CHAR2=$P(CHAR,",",2)
"RTN","MDUXMLU1",18,0)
 . S RESULT=""
"RTN","MDUXMLU1",19,0)
 . I CNT>1 F I=1:1:CNT D
"RTN","MDUXMLU1",20,0)
 . . S RESULT=RESULT_$P(DATA,CHAR1,I)
"RTN","MDUXMLU1",21,0)
 . . I CNT'=I S RESULT=RESULT_"&"_CHAR2_";"
"RTN","MDUXMLU1",22,0)
 . . Q
"RTN","MDUXMLU1",23,0)
 . I RESULT'="" S DATA=RESULT
"RTN","MDUXMLU1",24,0)
 . Q
"RTN","MDUXMLU1",25,0)
 I RESULT="" S RESULT=DATA
"RTN","MDUXMLU1",26,0)
 Q RESULT
"RTN","MDUXMLU1",27,0)
 ;
"RTN","MDUXMLU1",28,0)
CODING(TYPE,DATA) ; Coding of both CPT and ICD9
"RTN","MDUXMLU1",29,0)
 Q:TYPE=""
"RTN","MDUXMLU1",30,0)
 Q:DATA=""
"RTN","MDUXMLU1",31,0)
 N DATAC,I,DEFF
"RTN","MDUXMLU1",32,0)
 S DATAC=$L(DATA,"~")
"RTN","MDUXMLU1",33,0)
 S DEFF=$S(TYPE="CPT":"PROCEDURE",TYPE="ICD":"DIAGNOSIS",1:0)
"RTN","MDUXMLU1",34,0)
 Q:'DEFF
"RTN","MDUXMLU1",35,0)
 F I=1:1:DATAC D
"RTN","MDUXMLU1",36,0)
 . D BLDXML^MDUXMLU1(TYPE_"_CODE",$P($P(DATA,"~",I),"^",1))
"RTN","MDUXMLU1",37,0)
 . D BLDXML^MDUXMLU1(TYPE_"_"_DEFF,$P($P(DATA,"~",I),"^",2))
"RTN","MDUXMLU1",38,0)
 . D BLDXML^MDUXMLU1(TYPE_"_CODE_TYPE",$P($P(DATA,"~",I),"^",3))
"RTN","MDUXMLU1",39,0)
 . Q
"RTN","MDUXMLU1",40,0)
 Q
"RTN","MDUXMLU1",41,0)
HEAD ;Creat the header of the XML message
"RTN","MDUXMLU1",42,0)
 D XML^MDUXMLU1("<?xml version="_QUOT_"1.0"_QUOT_" encoding="_QUOT_"UTF-8"_QUOT_" ?>")
"RTN","MDUXMLU1",43,0)
 D XML^MDUXMLU1("<HL7_MESSAGE xmlns:xsi="_QUOT_"http://www.w3.org/2001/XMLSchema-instance"_QUOT_" xsi:noNamespaceSchemaLocation="_QUOT_"CLOB.xsd"_QUOT_">")
"RTN","MDUXMLU1",44,0)
 Q
"RTN","MDUXMLU1",45,0)
TAIL ; Complete the message
"RTN","MDUXMLU1",46,0)
 D XML^MDUXMLU1("</RESULTS>")
"RTN","MDUXMLU1",47,0)
 I ORDER=1 D XML^MDUXMLU1("</ORDER_INFORMATION>")
"RTN","MDUXMLU1",48,0)
 D XML^MDUXMLU1("</HL7_MESSAGE>")
"RTN","MDUXMLU1",49,0)
 Q
"RTN","MDUXMLU1",50,0)
NAME(NAME) ; Convert name
"RTN","MDUXMLU1",51,0)
 I NAME="" Q
"RTN","MDUXMLU1",52,0)
 D BLDXML^MDUXMLU1("LAST_NAME",$P(NAME,"^",1))
"RTN","MDUXMLU1",53,0)
 D BLDXML^MDUXMLU1("FIRST_NAME",$P(NAME,"^",2))
"RTN","MDUXMLU1",54,0)
 D BLDXML^MDUXMLU1("MIDDLE_NAME",$P(NAME,"^",3))
"RTN","MDUXMLU1",55,0)
 Q
"RTN","MDUXMLU1",56,0)
DATE(FIELD,DATE) ; Convert date and post as xml
"RTN","MDUXMLU1",57,0)
 I FIELD="" Q
"RTN","MDUXMLU1",58,0)
 I DATE="" Q
"RTN","MDUXMLU1",59,0)
 D XML^MDUXMLU1("<"_FIELD_">")
"RTN","MDUXMLU1",60,0)
 D BLDXML^MDUXMLU1("YEAR",$E(DATE,1,4))
"RTN","MDUXMLU1",61,0)
 D BLDXML^MDUXMLU1("MONTH",$E(DATE,5,6))
"RTN","MDUXMLU1",62,0)
 D BLDXML^MDUXMLU1("DAY",$E(DATE,7,8))
"RTN","MDUXMLU1",63,0)
 I $E(DATE,9,10)?2N D BLDXML^MDUXMLU1("HOUR",$E(DATE,9,10))
"RTN","MDUXMLU1",64,0)
 I $E(DATE,11,12)?2N D BLDXML^MDUXMLU1("MINUTE",$E(DATE,11,12))
"RTN","MDUXMLU1",65,0)
 I $E(DATE,13,14)?2N D BLDXML^MDUXMLU1("SECOND",$E(DATE,13,14))
"RTN","MDUXMLU1",66,0)
 D XML^MDUXMLU1("</"_FIELD_">")
"RTN","MDUXMLU1",67,0)
 Q
"RTN","MDUXMLU1",68,0)
BLDXML(HEAD,DATA) ;
"RTN","MDUXMLU1",69,0)
 Q:HEAD=""
"RTN","MDUXMLU1",70,0)
 Q:DATA=""
"RTN","MDUXMLU1",71,0)
 D XML^MDUXMLU1("<"_HEAD_">"_DATA_"</"_HEAD_">")
"RTN","MDUXMLU1",72,0)
 Q
"RTN","MDUXMLU1",73,0)
XML(XMLLINE) ; create the XML Line in the temp file to be passed
"RTN","MDUXMLU1",74,0)
 Q:XMLLINE=""
"RTN","MDUXMLU1",75,0)
 S XMLCNT=XMLCNT+1
"RTN","MDUXMLU1",76,0)
 S ^TMP($J,"MDHL7XML",XMLCNT)=XMLLINE
"RTN","MDUXMLU1",77,0)
 Q
"RTN","MDUXMLU1",78,0)
FILE(MDIEN) ; File off the XML data into 703.1
"RTN","MDUXMLU1",79,0)
 N CNT,MDDZ,LINE,LN
"RTN","MDUXMLU1",80,0)
 S CNT=0,CCNT=0
"RTN","MDUXMLU1",81,0)
 S MDDZ=$$UPDATE^MDHL7U(MDIEN)
"RTN","MDUXMLU1",82,0)
 Q:'MDDZ
"RTN","MDUXMLU1",83,0)
 F  S CNT=$O(^TMP($J,"MDHL7XML",CNT)) Q:CNT<1  D
"RTN","MDUXMLU1",84,0)
 . S LINE=$G(^TMP($J,"MDHL7XML",CNT)) Q:LINE=""
"RTN","MDUXMLU1",85,0)
 . S ^MDD(703.1,MDIEN,.4,CNT,0)=LINE,CCNT=CCNT+1
"RTN","MDUXMLU1",86,0)
 . Q
"RTN","MDUXMLU1",87,0)
 S ^MDD(703.1,MDIEN,.4,0)="^^"_CCNT_"^"_CCNT_"^"_DT_"^"
"RTN","MDUXMLU1",88,0)
 K ^TMP($J,"MDHL7XML")
"RTN","MDUXMLU1",89,0)
 Q
"RTN","MDXMLFM")
0^28^B58557768
"RTN","MDXMLFM",1,0)
MDXMLFM ; HOIFO/DP - Fileman -> XML Utilities ; [01-10-2003 09:14]
"RTN","MDXMLFM",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDXMLFM",3,0)
 ; Integration Agreements:
"RTN","MDXMLFM",4,0)
 ; IA# 10035 [Supported] ^DPT references
"RTN","MDXMLFM",5,0)
 ;
"RTN","MDXMLFM",6,0)
 ; Special note: This routine assumes RESULTS contains the closed
"RTN","MDXMLFM",7,0)
 ;               root specification, ^TMP($J) where the output of
"RTN","MDXMLFM",8,0)
 ;               these calls will go.
"RTN","MDXMLFM",9,0)
 ;               i.e. S RESULTS=$NA(^TMP($J))
"RTN","MDXMLFM",10,0)
 ;
"RTN","MDXMLFM",11,0)
 ;               Calling app needs to call NEWDOC^MDXMLFM *ONCE*
"RTN","MDXMLFM",12,0)
 ;               to clear the global before building an XML document.
"RTN","MDXMLFM",13,0)
 ;
"RTN","MDXMLFM",14,0)
LOADALL(IENLIST,DD,FLDS) ; Load complete dataset
"RTN","MDXMLFM",15,0)
 ;
"RTN","MDXMLFM",16,0)
 ; Loads entire dataset from @IENLIST@(...)
"RTN","MDXMLFM",17,0)
 ;
"RTN","MDXMLFM",18,0)
 N MDIEN S MDIEN=0
"RTN","MDXMLFM",19,0)
 D NEWDOC("RESULTS")
"RTN","MDXMLFM",20,0)
 D XMLDATA("STATUS","OK")
"RTN","MDXMLFM",21,0)
 F  S MDIEN=$O(@IENLIST@(MDIEN)) Q:'MDIEN  D
"RTN","MDXMLFM",22,0)
 .D BLDXML(DD,MDIEN,.FLDS)
"RTN","MDXMLFM",23,0)
 D ENDDOC("RESULTS")
"RTN","MDXMLFM",24,0)
 Q
"RTN","MDXMLFM",25,0)
 ;
"RTN","MDXMLFM",26,0)
LOADONE(IEN,DD,FLDS) ; Load single record as dataset
"RTN","MDXMLFM",27,0)
 ;
"RTN","MDXMLFM",28,0)
 ; Not to be used recursively
"RTN","MDXMLFM",29,0)
 ; Assumes complete data set is one record
"RTN","MDXMLFM",30,0)
 ;
"RTN","MDXMLFM",31,0)
 D NEWDOC("RESULTS")
"RTN","MDXMLFM",32,0)
 D XMLDATA("STATUS","OK")
"RTN","MDXMLFM",33,0)
 D BLDXML(DD,IEN,.FLDS)
"RTN","MDXMLFM",34,0)
 D ENDDOC("RESULTS")
"RTN","MDXMLFM",35,0)
 Q
"RTN","MDXMLFM",36,0)
 ;
"RTN","MDXMLFM",37,0)
LOADFILE(MDNUM,MDROOT,MDFLDS) ; Bulk load file MDNUM into XML
"RTN","MDXMLFM",38,0)
 ;
"RTN","MDXMLFM",39,0)
 ; Loads all records and all fields in the DD# MDNUM
"RTN","MDXMLFM",40,0)
 ; Optionally include a closed root of the index to use MDROOT
"RTN","MDXMLFM",41,0)
 ; Optionally include a list of fields #;#;#;# will default to "*"
"RTN","MDXMLFM",42,0)
 ;
"RTN","MDXMLFM",43,0)
 N MDIEN,MDNODE,MDIDS,MDTEMP,MDHDR,MDNAME
"RTN","MDXMLFM",44,0)
 S MDTEMP=$NA(^TMP("MD_TEMP",$J)) K @MDTEMP
"RTN","MDXMLFM",45,0)
 S MDNAME=$$GET1^DID(MDNUM,,,"NAME")
"RTN","MDXMLFM",46,0)
 I $G(MDROOT)]"" S:'$D(@MDROOT)#2 MDROOT=""
"RTN","MDXMLFM",47,0)
 S:$G(MDROOT)="" MDROOT=$$ROOT^DILFD(MDNUM,,1)
"RTN","MDXMLFM",48,0)
 S:$G(MDFLDS)="" MDFLDS="*"
"RTN","MDXMLFM",49,0)
 ;
"RTN","MDXMLFM",50,0)
 ; Load the records via Fileman GETS^DIQ
"RTN","MDXMLFM",51,0)
 ;
"RTN","MDXMLFM",52,0)
 S MDIEN=0
"RTN","MDXMLFM",53,0)
 F  S MDIEN=$O(@MDROOT@(MDIEN)) Q:'MDIEN  D
"RTN","MDXMLFM",54,0)
 .D GETS^DIQ(MDNUM,MDIEN_",",MDFLDS,"I",MDTEMP)
"RTN","MDXMLFM",55,0)
 ;
"RTN","MDXMLFM",56,0)
 ; Grab the tags and types if any records were processed
"RTN","MDXMLFM",57,0)
 ;
"RTN","MDXMLFM",58,0)
 S MDIEN=$O(@MDTEMP@(MDNUM,"")) D:MDIEN]""
"RTN","MDXMLFM",59,0)
 .F X=0:0 S X=$O(@MDTEMP@(MDNUM,MDIEN,X)) Q:'X  D
"RTN","MDXMLFM",60,0)
 ..S MDTAG=$$GET1^DID(MDNUM,X,,"LABEL")
"RTN","MDXMLFM",61,0)
 ..S MDTYPE=$$GET1^DID(MDNUM,X,,"TYPE")
"RTN","MDXMLFM",62,0)
 ..S MDPTR=$$GET1^DID(MDNUM,X,,"POINTER")
"RTN","MDXMLFM",63,0)
 ..S @MDTEMP@(MDNUM,0,X,"TAG")=$$TAGSAFE(MDTAG)
"RTN","MDXMLFM",64,0)
 ..S @MDTEMP@(MDNUM,0,X,"TYPE")=MDTYPE
"RTN","MDXMLFM",65,0)
 ..S @MDTEMP@(MDNUM,0,X,"PTR")=MDPTR
"RTN","MDXMLFM",66,0)
 ;
"RTN","MDXMLFM",67,0)
 ; Ok, lets add the file
"RTN","MDXMLFM",68,0)
 ;
"RTN","MDXMLFM",69,0)
 D XMLDATA("TABLENAME",MDNAME)
"RTN","MDXMLFM",70,0)
 S MDIENS=$O(@MDTEMP@(MDNUM,0))
"RTN","MDXMLFM",71,0)
 F  Q:MDIENS=""  D
"RTN","MDXMLFM",72,0)
 .D XMLHDR("RECORD")
"RTN","MDXMLFM",73,0)
 .S MDFLD=$O(@MDTEMP@(MDNUM,MDIENS,0))
"RTN","MDXMLFM",74,0)
 .F  Q:MDFLD=""  D
"RTN","MDXMLFM",75,0)
 ..S MDTAG=@MDTEMP@(MDNUM,0,MDFLD,"TAG")
"RTN","MDXMLFM",76,0)
 ..S MDATA=@MDTEMP@(MDNUM,MDIENS,MDFLD,"I")
"RTN","MDXMLFM",77,0)
 ..S MDTYPE=@MDTEMP@(MDNUM,0,MDFLD,"TYPE") D
"RTN","MDXMLFM",78,0)
 ...I MDTYPE["WORD" D XMLWP(MDTAG,MDATA) Q
"RTN","MDXMLFM",79,0)
 ...I MDTYPE["DATE" D XMLDT(MDTAG,MDATA) Q
"RTN","MDXMLFM",80,0)
 ...D XMLDATA(MDTAG,MDATA)
"RTN","MDXMLFM",81,0)
 ..S MDFLD=$O(@MDTEMP@(MDNUM,MDIENS,MDFLD))
"RTN","MDXMLFM",82,0)
 .D XMLFTR("RECORD")
"RTN","MDXMLFM",83,0)
 .S MDIENS=$O(@MDTEMP@(MDNUM,MDIENS))
"RTN","MDXMLFM",84,0)
 Q
"RTN","MDXMLFM",85,0)
 ;
"RTN","MDXMLFM",86,0)
BLDFLD(RESULTS,DD,FLDS) ; Add a field or field^field to the FLDS array
"RTN","MDXMLFM",87,0)
 F  D  Q:FLDS']""
"RTN","MDXMLFM",88,0)
 .S Y=$P(FLDS,"^",1),FLDS=$P(FLDS,"^",2,250)
"RTN","MDXMLFM",89,0)
 .S MDFLD=$P(Y,";",1) K RESULTS(MDFLD)
"RTN","MDXMLFM",90,0)
 .I $P(Y,";",2)]"" S RESULTS(MDFLD,"FORMAT")=$P(Y,";",2)
"RTN","MDXMLFM",91,0)
 .E  S RESULTS(MDFLD,"FORMAT")="I"
"RTN","MDXMLFM",92,0)
 .I $P(Y,";",3)]"" S RESULTS(MDFLD,"TAG")=$P(Y,";",3)
"RTN","MDXMLFM",93,0)
 .E  S RESULTS(MDFLD,"TAG")=$TR($$GET1^DID(DD,MDFLD,"","LABEL")," ","_")
"RTN","MDXMLFM",94,0)
 .I $P(Y,";",4)]"" S RESULTS(MDFLD,"TYPE")=$P(Y,";",4)
"RTN","MDXMLFM",95,0)
 .E  S RESULTS(MDFLD,"TYPE")=$$GET1^DID(DD,+MDFLD,"","TYPE")
"RTN","MDXMLFM",96,0)
 Q
"RTN","MDXMLFM",97,0)
 ;
"RTN","MDXMLFM",98,0)
BLDXML(DD,IEN,FLDS) ; Builds an XML Record based on DD, IEN, and FLDS
"RTN","MDXMLFM",99,0)
 ; Note: this is a standalone module requiring DD and IEN
"RTN","MDXMLFM",100,0)
 ; so that it can be easily used by the custom query routines
"RTN","MDXMLFM",101,0)
 N MDFLD,MDIENS,X,Y
"RTN","MDXMLFM",102,0)
 D XMLHDR("RECORD")
"RTN","MDXMLFM",103,0)
 S MDIENS=IEN_",",MDFLD=""
"RTN","MDXMLFM",104,0)
 F  S MDFLD=$O(FLDS(MDFLD)) Q:MDFLD=""  D
"RTN","MDXMLFM",105,0)
 .; .001 is always the IEN *IF* it is included in the view
"RTN","MDXMLFM",106,0)
 .I +MDFLD=.001 D XMLDATA(FLDS(MDFLD,"TAG"),+MDIENS) Q
"RTN","MDXMLFM",107,0)
 .S MDFMT=$G(FLDS(MDFLD,"FORMAT"),"I")
"RTN","MDXMLFM",108,0)
 .; Process as a date
"RTN","MDXMLFM",109,0)
 .I $G(FLDS(MDFLD,"TYPE"))["DATE" D  Q
"RTN","MDXMLFM",110,0)
 ..S X=$$GET1^DIQ(DD,MDIENS,MDFLD,"I")
"RTN","MDXMLFM",111,0)
 ..I X]""&(MDFMT'="I") D  S X=Y
"RTN","MDXMLFM",112,0)
 ...S Y=($E(X,1,3)+1700)_"-"_$E(X,4,5)_"-"_$E(X,6,7) Q:X'["."
"RTN","MDXMLFM",113,0)
 ...S X=X+.0000001  ; Add it in ensure all the time parts
"RTN","MDXMLFM",114,0)
 ...S Y=Y_" "_$E(X,9,10)_":"_$E(X,11,12)_":"_$E(X,13,14)
"RTN","MDXMLFM",115,0)
 ..D XMLDATA(FLDS(MDFLD,"TAG"),X)
"RTN","MDXMLFM",116,0)
 .; Process as WP
"RTN","MDXMLFM",117,0)
 .I $G(FLDS(MDFLD,"TYPE"))["WORD" D  Q
"RTN","MDXMLFM",118,0)
 ..D XMLHDR(FLDS(MDFLD,"TAG"))
"RTN","MDXMLFM",119,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDXMLFM",120,0)
 ..S X=$$GET1^DIQ(DD,MDIENS,MDFLD,"",$NA(@RESULTS@(Y)))
"RTN","MDXMLFM",121,0)
 ..D XMLFTR(FLDS(MDFLD,"TAG"))
"RTN","MDXMLFM",122,0)
 .; Just return with specified data format
"RTN","MDXMLFM",123,0)
 .I ($G(FLDS(MDFLD,"TYPE"))["SET")&(DD=704.202)&(MDFLD=.09) D  Q
"RTN","MDXMLFM",124,0)
 ..I $$GET1^DIQ(DD,MDIENS,MDFLD,MDFMT)["DISABLED" D XMLDATA(FLDS(MDFLD,"TAG"),$$GET1^DIQ(DD,MDIENS,MDFLD,MDFMT)) Q
"RTN","MDXMLFM",125,0)
 ..L +^MDK(704.202,+MDIENS):1
"RTN","MDXMLFM",126,0)
 ..I '$T D XMLDATA(FLDS(MDFLD,"TAG"),"IN_USE") Q
"RTN","MDXMLFM",127,0)
 ..E  L -^MDK(704.202,+MDIENS) D XMLDATA(FLDS(MDFLD,"TAG"),$$GET1^DIQ(DD,MDIENS,MDFLD,MDFMT))
"RTN","MDXMLFM",128,0)
 ..Q
"RTN","MDXMLFM",129,0)
 .D XMLDATA(FLDS(MDFLD,"TAG"),$$GET1^DIQ(DD,MDIENS,MDFLD,MDFMT))
"RTN","MDXMLFM",130,0)
 D XMLFTR("RECORD")
"RTN","MDXMLFM",131,0)
 Q
"RTN","MDXMLFM",132,0)
 ;
"RTN","MDXMLFM",133,0)
XMLCMT(COMMENT) ; Add a comment to a document
"RTN","MDXMLFM",134,0)
 D XMLADD("<!-- "_COMMENT_" -->")
"RTN","MDXMLFM",135,0)
 Q
"RTN","MDXMLFM",136,0)
 ;
"RTN","MDXMLFM",137,0)
XMLHDR(TAG) ; Add a header tag to the global
"RTN","MDXMLFM",138,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM",139,0)
 D XMLADD("<"_TAG_">")
"RTN","MDXMLFM",140,0)
 Q
"RTN","MDXMLFM",141,0)
 ;
"RTN","MDXMLFM",142,0)
XMLFTR(TAG) ; Add a footer tag to the global
"RTN","MDXMLFM",143,0)
 D XMLHDR("/"_TAG)
"RTN","MDXMLFM",144,0)
 Q
"RTN","MDXMLFM",145,0)
 ;
"RTN","MDXMLFM",146,0)
XMLDATA(TAG,X) ; Add a data element to the global
"RTN","MDXMLFM",147,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM",148,0)
 I $G(X)="" D XMLADD("<"_TAG_" />")
"RTN","MDXMLFM",149,0)
 E  D XMLADD("<"_TAG_">"_$$XMLSAFE(X)_"</"_TAG_">")
"RTN","MDXMLFM",150,0)
 Q
"RTN","MDXMLFM",151,0)
 ;
"RTN","MDXMLFM",152,0)
XMLPT(X) ; Add a standard pt identifier node
"RTN","MDXMLFM",153,0)
 S X(1,"NAME")=$P(^DPT(X,0),U)
"RTN","MDXMLFM",154,0)
 S X(2,"SSN")=$P(^DPT(X,0),U,9)
"RTN","MDXMLFM",155,0)
 S X(3,"SEX")=$P(^DPT(X,0),U,2)
"RTN","MDXMLFM",156,0)
 S Y=$P(^DPT(X,0),U,3)
"RTN","MDXMLFM",157,0)
 S Y(1)=1700+$E(Y,1,3),Y(2)=+$E(Y,4,5),Y(3)=+$E(Y,6,7)
"RTN","MDXMLFM",158,0)
 S X(4,"DOB_Y")=Y(1)
"RTN","MDXMLFM",159,0)
 S X(5,"DOB_M")=Y(2)
"RTN","MDXMLFM",160,0)
 S X(6,"DOB_D")=Y(3)
"RTN","MDXMLFM",161,0)
 D XMLIDS("PATIENT",.X,1)
"RTN","MDXMLFM",162,0)
 Q
"RTN","MDXMLFM",163,0)
 ;
"RTN","MDXMLFM",164,0)
XMLWP(TAG,X) ; Add text in array @X to the global
"RTN","MDXMLFM",165,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM",166,0)
 I $G(X)="" D XMLADD("<"_TAG_" />") Q  ; Empty global ref
"RTN","MDXMLFM",167,0)
 D XMLHDR(TAG)
"RTN","MDXMLFM",168,0)
 F Y=0:0 S Y=$O(@X@(Y)) Q:'Y  D XMLADD(@X@(Y))
"RTN","MDXMLFM",169,0)
 D XMLFTR(TAG)
"RTN","MDXMLFM",170,0)
 Q
"RTN","MDXMLFM",171,0)
 ;
"RTN","MDXMLFM",172,0)
XMLDT(TAG,X) ; Add date or date/time to the global
"RTN","MDXMLFM",173,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM",174,0)
 I $G(X)="" D XMLADD("<"_TAG_" />") Q  ; No data
"RTN","MDXMLFM",175,0)
 ; Build the ID array
"RTN","MDXMLFM",176,0)
 S X(1,"Y")=(1700+$E(X,1,3))
"RTN","MDXMLFM",177,0)
 S X(2,"M")=+$E(X,4,5)
"RTN","MDXMLFM",178,0)
 S X(3,"D")=+$E(X,6,7)
"RTN","MDXMLFM",179,0)
 D:X]"."
"RTN","MDXMLFM",180,0)
 .S X=X+.0000001
"RTN","MDXMLFM",181,0)
 .S X(4,"hh")=+$E(X,9,10)
"RTN","MDXMLFM",182,0)
 .S X(5,"mm")=+$E(X,11,12)
"RTN","MDXMLFM",183,0)
 .S X(6,"ss")=+$E(X,13,14)
"RTN","MDXMLFM",184,0)
 D XMLIDS(TAG,.X,1)
"RTN","MDXMLFM",185,0)
 Q
"RTN","MDXMLFM",186,0)
 ;
"RTN","MDXMLFM",187,0)
XMLIDS(TAG,IDS,CLOSE) ; Add a data element to the global with ids
"RTN","MDXMLFM",188,0)
 S TAG="<"_$$TAGSAFE(TAG)
"RTN","MDXMLFM",189,0)
 F X=0:0 S X=$O(IDS(X)) Q:'X  D
"RTN","MDXMLFM",190,0)
 .S Y="" F  S Y=$O(IDS(X,Y)) Q:Y=""  D
"RTN","MDXMLFM",191,0)
 ..S TAG=TAG_" "_Y_"="""_$$XMLSAFE(IDS(X,Y))_""""
"RTN","MDXMLFM",192,0)
 S:$G(CLOSE) TAG=TAG_" /" ; Close out the tag element
"RTN","MDXMLFM",193,0)
 S TAG=TAG_">"
"RTN","MDXMLFM",194,0)
 D XMLADD(TAG)
"RTN","MDXMLFM",195,0)
 Q
"RTN","MDXMLFM",196,0)
 ;
"RTN","MDXMLFM",197,0)
XMLADD(X) ; Add to the global
"RTN","MDXMLFM",198,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=$G(X)
"RTN","MDXMLFM",199,0)
 Q
"RTN","MDXMLFM",200,0)
 ;
"RTN","MDXMLFM",201,0)
ADDERR(X) ;
"RTN","MDXMLFM",202,0)
 S MDERROR($O(MDERR(""),-1)+1)=X
"RTN","MDXMLFM",203,0)
 Q
"RTN","MDXMLFM",204,0)
 ;
"RTN","MDXMLFM",205,0)
XMLOK(RESULTS) ; Build an XML OK message
"RTN","MDXMLFM",206,0)
 K @RESULTS
"RTN","MDXMLFM",207,0)
 S @RESULTS@(0)="<RESULTS>"
"RTN","MDXMLFM",208,0)
 S @RESULTS@(1)="<STATUS>OK</STATUS>"
"RTN","MDXMLFM",209,0)
 S @RESULTS@(2)="</RESULTS>"
"RTN","MDXMLFM",210,0)
 Q
"RTN","MDXMLFM",211,0)
 ;
"RTN","MDXMLFM",212,0)
XMLERR(ERRMSG) ; Build an XML error Message to return
"RTN","MDXMLFM",213,0)
 K @RESULTS
"RTN","MDXMLFM",214,0)
 S @RESULTS@(0)="<RESULTS>"
"RTN","MDXMLFM",215,0)
 S @RESULTS@(1)="<STATUS>ERROR</STATUS>"
"RTN","MDXMLFM",216,0)
 I $D(ERRMSG)=1 D  ; Simple one liner
"RTN","MDXMLFM",217,0)
 .S @RESULTS@(2)="<MESSAGE>"_$$XMLSAFE(ERRMSG)_"</MESSAGE>"
"RTN","MDXMLFM",218,0)
 I $D(ERRMSG)>2 D  ; Load the array into the XML message
"RTN","MDXMLFM",219,0)
 .S @RESULTS@(2)="<MESSAGE>"_$G(ERRMSG,"NO DESCRIPTION")
"RTN","MDXMLFM",220,0)
 .S X="ERRMSG" F  S X=$Q(@X) Q:X=""!(X'?1"ERRMSG(".E)  D
"RTN","MDXMLFM",221,0)
 ..S @RESULTS@($O(@RESULTS@(""),-1)+1)=$$XMLSAFE(@X)
"RTN","MDXMLFM",222,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)="</MESSAGE>"
"RTN","MDXMLFM",223,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)="</RESULTS>"
"RTN","MDXMLFM",224,0)
 Q
"RTN","MDXMLFM",225,0)
 ;
"RTN","MDXMLFM",226,0)
XMLDATE(X) ; Transform Y into XML safe date
"RTN","MDXMLFM",227,0)
 N Y
"RTN","MDXMLFM",228,0)
 S Y=($E(X,1,3)+1700)_"-"_$E(X,4,5)_"-"_$E(X,6,7)
"RTN","MDXMLFM",229,0)
 D:X["."
"RTN","MDXMLFM",230,0)
 .S X=X+.0000001
"RTN","MDXMLFM",231,0)
 .S Y=Y_" "_$E(X,9,10)_":"_$E(X,11,12)_":"_$E(X,13,14)
"RTN","MDXMLFM",232,0)
 Q Y
"RTN","MDXMLFM",233,0)
 ;
"RTN","MDXMLFM",234,0)
XMLSAFE(X) ; Transform X into XML safe data
"RTN","MDXMLFM",235,0)
 S X=$$TRNSLT(X,"&","&amp;")
"RTN","MDXMLFM",236,0)
 S X=$$TRNSLT(X,"<","&lt;")
"RTN","MDXMLFM",237,0)
 S X=$$TRNSLT(X,">","&gt;")
"RTN","MDXMLFM",238,0)
 S X=$$TRNSLT(X,"'","&apos;")
"RTN","MDXMLFM",239,0)
 S X=$$TRNSLT(X,"""","&quot;")
"RTN","MDXMLFM",240,0)
 Q X
"RTN","MDXMLFM",241,0)
 ;
"RTN","MDXMLFM",242,0)
TAGSAFE(X) ; Transform X into XML tag
"RTN","MDXMLFM",243,0)
 S:X?1N.E X="_"_X  ; Remove starting numeric
"RTN","MDXMLFM",244,0)
 Q $TR(X," '`()<>*[]","__________")
"RTN","MDXMLFM",245,0)
 ;
"RTN","MDXMLFM",246,0)
NEWDOC(ROOT,COMMENT) ; Start a new document
"RTN","MDXMLFM",247,0)
 K @RESULTS
"RTN","MDXMLFM",248,0)
 D XMLADD("<?xml version=""1.0"" standalone=""yes""?>")
"RTN","MDXMLFM",249,0)
 I $G(COMMENT)]"" D XMLCMT(COMMENT)
"RTN","MDXMLFM",250,0)
 D XMLHDR($G(ROOT,"RESULTS"))
"RTN","MDXMLFM",251,0)
 Q
"RTN","MDXMLFM",252,0)
 ;
"RTN","MDXMLFM",253,0)
ENDDOC(ROOT) ; End this document
"RTN","MDXMLFM",254,0)
 D XMLFTR($G(ROOT,"RESULTS"))
"RTN","MDXMLFM",255,0)
 Q
"RTN","MDXMLFM",256,0)
 ;
"RTN","MDXMLFM",257,0)
TRNSLT(X,X1,X2) ; Translate every Y to Z in X
"RTN","MDXMLFM",258,0)
 N Y
"RTN","MDXMLFM",259,0)
 Q:X'[X1 X  ; Nothing to translate
"RTN","MDXMLFM",260,0)
 S Y="" F  Q:X=""  D
"RTN","MDXMLFM",261,0)
 .I X[X1 S Y=Y_$P(X,X1)_X2,X=$P(X,X1,2,250) Q
"RTN","MDXMLFM",262,0)
 .S Y=Y_X,X=""
"RTN","MDXMLFM",263,0)
 Q Y
"RTN","MDXMLFM",264,0)
 ;
"RTN","MDXMLFM1")
0^44^B54613432
"RTN","MDXMLFM1",1,0)
MDXMLFM1 ; HOIFO/DP/NCA - Data -> XML Utilities ; [01-10-2003 09:14]
"RTN","MDXMLFM1",2,0)
 ;;1.0;CLINICAL PROCEDURES;**6**;Apr 01, 2004;Build 102
"RTN","MDXMLFM1",3,0)
 ; Integration Agreements:
"RTN","MDXMLFM1",4,0)
 ; IA# 10035 [Supported] ^DPT references
"RTN","MDXMLFM1",5,0)
 ;
"RTN","MDXMLFM1",6,0)
 ; Special note: This routine assumes RESULTS contains the closed
"RTN","MDXMLFM1",7,0)
 ;               root specification, ^TMP($J) where the output of
"RTN","MDXMLFM1",8,0)
 ;               these calls will go.
"RTN","MDXMLFM1",9,0)
 ;               i.e. S RESULTS=$NA(^TMP($J))
"RTN","MDXMLFM1",10,0)
 ;
"RTN","MDXMLFM1",11,0)
 ;               Calling app needs to call NEWDOC^MDXMLFM *ONCE*
"RTN","MDXMLFM1",12,0)
 ;               to clear the global before building an XML document.
"RTN","MDXMLFM1",13,0)
 ;
"RTN","MDXMLFM1",14,0)
LOADALL(IENLIST,DD,FLDS) ; Load complete dataset
"RTN","MDXMLFM1",15,0)
 ;
"RTN","MDXMLFM1",16,0)
 ; Loads entire dataset from @IENLIST@(...)
"RTN","MDXMLFM1",17,0)
 ;
"RTN","MDXMLFM1",18,0)
 N MDIEN S MDIEN=0
"RTN","MDXMLFM1",19,0)
 D NEWDOC("RESULTS")
"RTN","MDXMLFM1",20,0)
 D XMLDATA("STATUS","OK")
"RTN","MDXMLFM1",21,0)
 F  S MDIEN=$O(@IENLIST@(MDIEN)) Q:'MDIEN  S MDFDAT=$G(@IENLIST@(MDIEN)) D
"RTN","MDXMLFM1",22,0)
 .D BLDXML(DD,MDIEN,.FLDS,MDFDAT)
"RTN","MDXMLFM1",23,0)
 D ENDDOC("RESULTS")
"RTN","MDXMLFM1",24,0)
 Q
"RTN","MDXMLFM1",25,0)
 ;
"RTN","MDXMLFM1",26,0)
LOADONE(IEN,DD,FLDS) ; Load single record as dataset
"RTN","MDXMLFM1",27,0)
 ;
"RTN","MDXMLFM1",28,0)
 ; Not to be used recursively
"RTN","MDXMLFM1",29,0)
 ; Assumes complete data set is one record
"RTN","MDXMLFM1",30,0)
 ;
"RTN","MDXMLFM1",31,0)
 D NEWDOC("RESULTS")
"RTN","MDXMLFM1",32,0)
 D XMLDATA("STATUS","OK")
"RTN","MDXMLFM1",33,0)
 D BLDXML(DD,IEN,.FLDS)
"RTN","MDXMLFM1",34,0)
 D ENDDOC("RESULTS")
"RTN","MDXMLFM1",35,0)
 Q
"RTN","MDXMLFM1",36,0)
 ;
"RTN","MDXMLFM1",37,0)
LOADFILE(MDNUM,MDROOT,MDFLDS) ; Bulk load file MDNUM into XML
"RTN","MDXMLFM1",38,0)
 ;
"RTN","MDXMLFM1",39,0)
 ; Loads all records and all fields in the DD# MDNUM
"RTN","MDXMLFM1",40,0)
 ; Optionally include a closed root of the index to use MDROOT
"RTN","MDXMLFM1",41,0)
 ; Optionally include a list of fields #;#;#;# will default to "*"
"RTN","MDXMLFM1",42,0)
 ;
"RTN","MDXMLFM1",43,0)
 N MDIEN,MDNODE,MDIDS,MDTEMP,MDHDR,MDNAME
"RTN","MDXMLFM1",44,0)
 S MDTEMP=$NA(^TMP("MD_TEMP",$J)) K @MDTEMP
"RTN","MDXMLFM1",45,0)
 S MDNAME=$$GET1^DID(MDNUM,,,"NAME")
"RTN","MDXMLFM1",46,0)
 I $G(MDROOT)]"" S:'$D(@MDROOT)#2 MDROOT=""
"RTN","MDXMLFM1",47,0)
 S:$G(MDROOT)="" MDROOT=$$ROOT^DILFD(MDNUM,,1)
"RTN","MDXMLFM1",48,0)
 S:$G(MDFLDS)="" MDFLDS="*"
"RTN","MDXMLFM1",49,0)
 ;
"RTN","MDXMLFM1",50,0)
 ; Load the records via Fileman GETS^DIQ
"RTN","MDXMLFM1",51,0)
 ;
"RTN","MDXMLFM1",52,0)
 S MDIEN=0
"RTN","MDXMLFM1",53,0)
 F  S MDIEN=$O(@MDROOT@(MDIEN)) Q:'MDIEN  D
"RTN","MDXMLFM1",54,0)
 .D GETS^DIQ(MDNUM,MDIEN_",",MDFLDS,"I",MDTEMP)
"RTN","MDXMLFM1",55,0)
 ;
"RTN","MDXMLFM1",56,0)
 ; Grab the tags and types if any records were processed
"RTN","MDXMLFM1",57,0)
 ;
"RTN","MDXMLFM1",58,0)
 S MDIEN=$O(@MDTEMP@(MDNUM,"")) D:MDIEN]""
"RTN","MDXMLFM1",59,0)
 .F X=0:0 S X=$O(@MDTEMP@(MDNUM,MDIEN,X)) Q:'X  D
"RTN","MDXMLFM1",60,0)
 ..S MDTAG=$$GET1^DID(MDNUM,X,,"LABEL")
"RTN","MDXMLFM1",61,0)
 ..S MDTYPE=$$GET1^DID(MDNUM,X,,"TYPE")
"RTN","MDXMLFM1",62,0)
 ..S MDPTR=$$GET1^DID(MDNUM,X,,"POINTER")
"RTN","MDXMLFM1",63,0)
 ..S @MDTEMP@(MDNUM,0,X,"TAG")=$$TAGSAFE(MDTAG)
"RTN","MDXMLFM1",64,0)
 ..S @MDTEMP@(MDNUM,0,X,"TYPE")=MDTYPE
"RTN","MDXMLFM1",65,0)
 ..S @MDTEMP@(MDNUM,0,X,"PTR")=MDPTR
"RTN","MDXMLFM1",66,0)
 ;
"RTN","MDXMLFM1",67,0)
 ; Ok, lets add the file
"RTN","MDXMLFM1",68,0)
 ;
"RTN","MDXMLFM1",69,0)
 D XMLDATA("TABLENAME",MDNAME)
"RTN","MDXMLFM1",70,0)
 S MDIENS=$O(@MDTEMP@(MDNUM,0))
"RTN","MDXMLFM1",71,0)
 F  Q:MDIENS=""  D
"RTN","MDXMLFM1",72,0)
 .D XMLHDR("RECORD")
"RTN","MDXMLFM1",73,0)
 .S MDFLD=$O(@MDTEMP@(MDNUM,MDIENS,0))
"RTN","MDXMLFM1",74,0)
 .F  Q:MDFLD=""  D
"RTN","MDXMLFM1",75,0)
 ..S MDTAG=@MDTEMP@(MDNUM,0,MDFLD,"TAG")
"RTN","MDXMLFM1",76,0)
 ..S MDATA=@MDTEMP@(MDNUM,MDIENS,MDFLD,"I")
"RTN","MDXMLFM1",77,0)
 ..S MDTYPE=@MDTEMP@(MDNUM,0,MDFLD,"TYPE") D
"RTN","MDXMLFM1",78,0)
 ...I MDTYPE["WORD" D XMLWP(MDTAG,MDATA) Q
"RTN","MDXMLFM1",79,0)
 ...I MDTYPE["DATE" D XMLDT(MDTAG,MDATA) Q
"RTN","MDXMLFM1",80,0)
 ...D XMLDATA(MDTAG,MDATA)
"RTN","MDXMLFM1",81,0)
 ..S MDFLD=$O(@MDTEMP@(MDNUM,MDIENS,MDFLD))
"RTN","MDXMLFM1",82,0)
 .D XMLFTR("RECORD")
"RTN","MDXMLFM1",83,0)
 .S MDIENS=$O(@MDTEMP@(MDNUM,MDIENS))
"RTN","MDXMLFM1",84,0)
 Q
"RTN","MDXMLFM1",85,0)
 ;
"RTN","MDXMLFM1",86,0)
BLDFLD(RESULTS,DD,FLDS) ; Add a field or field^field to the FLDS array
"RTN","MDXMLFM1",87,0)
 F  D  Q:FLDS']""
"RTN","MDXMLFM1",88,0)
 .S Y=$P(FLDS,"^",1),FLDS=$P(FLDS,"^",2,250)
"RTN","MDXMLFM1",89,0)
 .S MDFLD=$P(Y,";",1) K RESULTS(MDFLD)
"RTN","MDXMLFM1",90,0)
 .I $P(Y,";",2)]"" S RESULTS(MDFLD,"FORMAT")=$P(Y,";",2)
"RTN","MDXMLFM1",91,0)
 .E  S RESULTS(MDFLD,"FORMAT")="I"
"RTN","MDXMLFM1",92,0)
 .I $P(Y,";",3)]"" S RESULTS(MDFLD,"TAG")=$P(Y,";",3)
"RTN","MDXMLFM1",93,0)
 .E  S RESULTS(MDFLD,"TAG")=$TR($$GET1^DID(DD,MDFLD,"","LABEL")," ","_")
"RTN","MDXMLFM1",94,0)
 .I $P(Y,";",4)]"" S RESULTS(MDFLD,"TYPE")=$P(Y,";",4)
"RTN","MDXMLFM1",95,0)
 .E  S RESULTS(MDFLD,"TYPE")=$$GET1^DID(DD,+MDFLD,"","TYPE")
"RTN","MDXMLFM1",96,0)
 Q
"RTN","MDXMLFM1",97,0)
 ;
"RTN","MDXMLFM1",98,0)
BLDXML(DD,IEN,FLDS,MDFDAT) ; Builds an XML Record based on DD, IEN, and FLDS
"RTN","MDXMLFM1",99,0)
 ; Note: this is a standalone module requiring DD and IEN
"RTN","MDXMLFM1",100,0)
 ; so that it can be easily used by the custom query routines
"RTN","MDXMLFM1",101,0)
 N MDFLD,MDIENS,MDKTR,X,Y
"RTN","MDXMLFM1",102,0)
 D XMLHDR("RECORD")
"RTN","MDXMLFM1",103,0)
 S MDIENS=IEN_",",MDFLD="",MDKTR=0
"RTN","MDXMLFM1",104,0)
 F  S MDFLD=$O(FLDS(MDFLD)) Q:MDFLD=""  D
"RTN","MDXMLFM1",105,0)
 .; .001 is always the IEN *IF* it is included in the view
"RTN","MDXMLFM1",106,0)
 .I +MDFLD=.001 D XMLDATA(FLDS(MDFLD,"TAG"),+MDIENS) S MDKTR=MDKTR+1 Q
"RTN","MDXMLFM1",107,0)
 .S MDFMT=$G(FLDS(MDFLD,"FORMAT"),"I")
"RTN","MDXMLFM1",108,0)
 .; Process as a date
"RTN","MDXMLFM1",109,0)
 .I $G(FLDS(MDFLD,"TYPE"))["DATE" D  Q
"RTN","MDXMLFM1",110,0)
 ..S X=$$GET1^DIQ(DD,MDIENS,MDFLD,"I")
"RTN","MDXMLFM1",111,0)
 ..I X]""&(MDFMT'="I") D  S X=Y
"RTN","MDXMLFM1",112,0)
 ...S Y=($E(X,1,3)+1700)_"-"_$E(X,4,5)_"-"_$E(X,6,7) Q:X'["."
"RTN","MDXMLFM1",113,0)
 ...S X=X+.0000001  ; Add it in ensure all the time parts
"RTN","MDXMLFM1",114,0)
 ...S Y=Y_" "_$E(X,9,10)_":"_$E(X,11,12)_":"_$E(X,13,14)
"RTN","MDXMLFM1",115,0)
 ..D XMLDATA(FLDS(MDFLD,"TAG"),X)
"RTN","MDXMLFM1",116,0)
 .; Process as WP
"RTN","MDXMLFM1",117,0)
 .I $G(FLDS(MDFLD,"TYPE"))["WORD" D  Q
"RTN","MDXMLFM1",118,0)
 ..D XMLHDR(FLDS(MDFLD,"TAG"))
"RTN","MDXMLFM1",119,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","MDXMLFM1",120,0)
 ..S X=$$GET1^DIQ(DD,MDIENS,MDFLD,"",$NA(@RESULTS@(Y)))
"RTN","MDXMLFM1",121,0)
 ..D XMLFTR(FLDS(MDFLD,"TAG"))
"RTN","MDXMLFM1",122,0)
 .; Just return with specified data format
"RTN","MDXMLFM1",123,0)
 .S MDKTR=MDKTR+1
"RTN","MDXMLFM1",124,0)
 .D XMLDATA(FLDS(MDFLD,"TAG"),$P(MDFDAT,U,MDKTR))
"RTN","MDXMLFM1",125,0)
 D XMLFTR("RECORD")
"RTN","MDXMLFM1",126,0)
 Q
"RTN","MDXMLFM1",127,0)
 ;
"RTN","MDXMLFM1",128,0)
XMLCMT(COMMENT) ; Add a comment to a document
"RTN","MDXMLFM1",129,0)
 D XMLADD("<!-- "_COMMENT_" -->")
"RTN","MDXMLFM1",130,0)
 Q
"RTN","MDXMLFM1",131,0)
 ;
"RTN","MDXMLFM1",132,0)
XMLHDR(TAG) ; Add a header tag to the global
"RTN","MDXMLFM1",133,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM1",134,0)
 D XMLADD("<"_TAG_">")
"RTN","MDXMLFM1",135,0)
 Q
"RTN","MDXMLFM1",136,0)
 ;
"RTN","MDXMLFM1",137,0)
XMLFTR(TAG) ; Add a footer tag to the global
"RTN","MDXMLFM1",138,0)
 D XMLHDR("/"_TAG)
"RTN","MDXMLFM1",139,0)
 Q
"RTN","MDXMLFM1",140,0)
 ;
"RTN","MDXMLFM1",141,0)
XMLDATA(TAG,X) ; Add a data element to the global
"RTN","MDXMLFM1",142,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM1",143,0)
 I $G(X)="" D XMLADD("<"_TAG_" />")
"RTN","MDXMLFM1",144,0)
 E  D XMLADD("<"_TAG_">"_$$XMLSAFE(X)_"</"_TAG_">")
"RTN","MDXMLFM1",145,0)
 Q
"RTN","MDXMLFM1",146,0)
 ;
"RTN","MDXMLFM1",147,0)
XMLPT(X) ; Add a standard pt identifier node
"RTN","MDXMLFM1",148,0)
 S X(1,"NAME")=$P(^DPT(X,0),U)
"RTN","MDXMLFM1",149,0)
 S X(2,"SSN")=$P(^DPT(X,0),U,9)
"RTN","MDXMLFM1",150,0)
 S X(3,"SEX")=$P(^DPT(X,0),U,2)
"RTN","MDXMLFM1",151,0)
 S Y=$P(^DPT(X,0),U,3)
"RTN","MDXMLFM1",152,0)
 S Y(1)=1700+$E(Y,1,3),Y(2)=+$E(Y,4,5),Y(3)=+$E(Y,6,7)
"RTN","MDXMLFM1",153,0)
 S X(4,"DOB_Y")=Y(1)
"RTN","MDXMLFM1",154,0)
 S X(5,"DOB_M")=Y(2)
"RTN","MDXMLFM1",155,0)
 S X(6,"DOB_D")=Y(3)
"RTN","MDXMLFM1",156,0)
 D XMLIDS("PATIENT",.X,1)
"RTN","MDXMLFM1",157,0)
 Q
"RTN","MDXMLFM1",158,0)
 ;
"RTN","MDXMLFM1",159,0)
XMLWP(TAG,X) ; Add text in array @X to the global
"RTN","MDXMLFM1",160,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM1",161,0)
 I $G(X)="" D XMLADD("<"_TAG_" />") Q  ; Empty global ref
"RTN","MDXMLFM1",162,0)
 D XMLHDR(TAG)
"RTN","MDXMLFM1",163,0)
 F Y=0:0 S Y=$O(@X@(Y)) Q:'Y  D XMLADD(@X@(Y))
"RTN","MDXMLFM1",164,0)
 D XMLFTR(TAG)
"RTN","MDXMLFM1",165,0)
 Q
"RTN","MDXMLFM1",166,0)
 ;
"RTN","MDXMLFM1",167,0)
XMLDT(TAG,X) ; Add date or date/time to the global
"RTN","MDXMLFM1",168,0)
 S TAG=$$TAGSAFE(TAG)
"RTN","MDXMLFM1",169,0)
 I $G(X)="" D XMLADD("<"_TAG_" />") Q  ; No data
"RTN","MDXMLFM1",170,0)
 ; Build the ID array
"RTN","MDXMLFM1",171,0)
 S X(1,"Y")=(1700+$E(X,1,3))
"RTN","MDXMLFM1",172,0)
 S X(2,"M")=+$E(X,4,5)
"RTN","MDXMLFM1",173,0)
 S X(3,"D")=+$E(X,6,7)
"RTN","MDXMLFM1",174,0)
 D:X]"."
"RTN","MDXMLFM1",175,0)
 .S X=X+.0000001
"RTN","MDXMLFM1",176,0)
 .S X(4,"hh")=+$E(X,9,10)
"RTN","MDXMLFM1",177,0)
 .S X(5,"mm")=+$E(X,11,12)
"RTN","MDXMLFM1",178,0)
 .S X(6,"ss")=+$E(X,13,14)
"RTN","MDXMLFM1",179,0)
 D XMLIDS(TAG,.X,1)
"RTN","MDXMLFM1",180,0)
 Q
"RTN","MDXMLFM1",181,0)
 ;
"RTN","MDXMLFM1",182,0)
XMLIDS(TAG,IDS,CLOSE) ; Add a data element to the global with ids
"RTN","MDXMLFM1",183,0)
 S TAG="<"_$$TAGSAFE(TAG)
"RTN","MDXMLFM1",184,0)
 F X=0:0 S X=$O(IDS(X)) Q:'X  D
"RTN","MDXMLFM1",185,0)
 .S Y="" F  S Y=$O(IDS(X,Y)) Q:Y=""  D
"RTN","MDXMLFM1",186,0)
 ..S TAG=TAG_" "_Y_"="""_$$XMLSAFE(IDS(X,Y))_""""
"RTN","MDXMLFM1",187,0)
 S:$G(CLOSE) TAG=TAG_" /" ; Close out the tag element
"RTN","MDXMLFM1",188,0)
 S TAG=TAG_">"
"RTN","MDXMLFM1",189,0)
 D XMLADD(TAG)
"RTN","MDXMLFM1",190,0)
 Q
"RTN","MDXMLFM1",191,0)
 ;
"RTN","MDXMLFM1",192,0)
XMLADD(X) ; Add to the global
"RTN","MDXMLFM1",193,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)=$G(X)
"RTN","MDXMLFM1",194,0)
 Q
"RTN","MDXMLFM1",195,0)
 ;
"RTN","MDXMLFM1",196,0)
ADDERR(X) ;
"RTN","MDXMLFM1",197,0)
 S MDERROR($O(MDERR(""),-1)+1)=X
"RTN","MDXMLFM1",198,0)
 Q
"RTN","MDXMLFM1",199,0)
 ;
"RTN","MDXMLFM1",200,0)
XMLOK(RESULTS) ; Build an XML OK message
"RTN","MDXMLFM1",201,0)
 K @RESULTS
"RTN","MDXMLFM1",202,0)
 S @RESULTS@(0)="<RESULTS>"
"RTN","MDXMLFM1",203,0)
 S @RESULTS@(1)="<STATUS>OK</STATUS>"
"RTN","MDXMLFM1",204,0)
 S @RESULTS@(2)="</RESULTS>"
"RTN","MDXMLFM1",205,0)
 Q
"RTN","MDXMLFM1",206,0)
 ;
"RTN","MDXMLFM1",207,0)
XMLERR(ERRMSG) ; Build an XML error Message to return
"RTN","MDXMLFM1",208,0)
 K @RESULTS
"RTN","MDXMLFM1",209,0)
 S @RESULTS@(0)="<RESULTS>"
"RTN","MDXMLFM1",210,0)
 S @RESULTS@(1)="<STATUS>ERROR</STATUS>"
"RTN","MDXMLFM1",211,0)
 I $D(ERRMSG)=1 D  ; Simple one liner
"RTN","MDXMLFM1",212,0)
 .S @RESULTS@(2)="<MESSAGE>"_$$XMLSAFE(ERRMSG)_"</MESSAGE>"
"RTN","MDXMLFM1",213,0)
 I $D(ERRMSG)>2 D  ; Load the array into the XML message
"RTN","MDXMLFM1",214,0)
 .S @RESULTS@(2)="<MESSAGE>"_$G(ERRMSG,"NO DESCRIPTION")
"RTN","MDXMLFM1",215,0)
 .S X="ERRMSG" F  S X=$Q(@X) Q:X=""!(X'?1"ERRMSG(".E)  D
"RTN","MDXMLFM1",216,0)
 ..S @RESULTS@($O(@RESULTS@(""),-1)+1)=$$XMLSAFE(@X)
"RTN","MDXMLFM1",217,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)="</MESSAGE>"
"RTN","MDXMLFM1",218,0)
 S @RESULTS@($O(@RESULTS@(""),-1)+1)="</RESULTS>"
"RTN","MDXMLFM1",219,0)
 Q
"RTN","MDXMLFM1",220,0)
 ;
"RTN","MDXMLFM1",221,0)
XMLDATE(X) ; Transform Y into XML safe date
"RTN","MDXMLFM1",222,0)
 N Y
"RTN","MDXMLFM1",223,0)
 S Y=($E(X,1,3)+1700)_"-"_$E(X,4,5)_"-"_$E(X,6,7)
"RTN","MDXMLFM1",224,0)
 D:X["."
"RTN","MDXMLFM1",225,0)
 .S X=X+.0000001
"RTN","MDXMLFM1",226,0)
 .S Y=Y_" "_$E(X,9,10)_":"_$E(X,11,12)_":"_$E(X,13,14)
"RTN","MDXMLFM1",227,0)
 Q Y
"RTN","MDXMLFM1",228,0)
 ;
"RTN","MDXMLFM1",229,0)
XMLSAFE(X) ; Transform X into XML safe data
"RTN","MDXMLFM1",230,0)
 S X=$$TRNSLT(X,"&","&amp;")
"RTN","MDXMLFM1",231,0)
 S X=$$TRNSLT(X,"<","&lt;")
"RTN","MDXMLFM1",232,0)
 S X=$$TRNSLT(X,">","&gt;")
"RTN","MDXMLFM1",233,0)
 S X=$$TRNSLT(X,"'","&apos;")
"RTN","MDXMLFM1",234,0)
 S X=$$TRNSLT(X,"""","&quot;")
"RTN","MDXMLFM1",235,0)
 Q X
"RTN","MDXMLFM1",236,0)
 ;
"RTN","MDXMLFM1",237,0)
TAGSAFE(X) ; Transform X into XML tag
"RTN","MDXMLFM1",238,0)
 S:X?1N.E X="_"_X  ; Remove starting numeric
"RTN","MDXMLFM1",239,0)
 Q $TR(X," '`()<>*[]","__________")
"RTN","MDXMLFM1",240,0)
 ;
"RTN","MDXMLFM1",241,0)
NEWDOC(ROOT,COMMENT) ; Start a new document
"RTN","MDXMLFM1",242,0)
 K @RESULTS
"RTN","MDXMLFM1",243,0)
 D XMLADD("<?xml version=""1.0"" standalone=""yes""?>")
"RTN","MDXMLFM1",244,0)
 I $G(COMMENT)]"" D XMLCMT(COMMENT)
"RTN","MDXMLFM1",245,0)
 D XMLHDR($G(ROOT,"RESULTS"))
"RTN","MDXMLFM1",246,0)
 Q
"RTN","MDXMLFM1",247,0)
 ;
"RTN","MDXMLFM1",248,0)
ENDDOC(ROOT) ; End this document
"RTN","MDXMLFM1",249,0)
 D XMLFTR($G(ROOT,"RESULTS"))
"RTN","MDXMLFM1",250,0)
 Q
"RTN","MDXMLFM1",251,0)
 ;
"RTN","MDXMLFM1",252,0)
TRNSLT(X,X1,X2) ; Translate every Y to Z in X
"RTN","MDXMLFM1",253,0)
 N Y
"RTN","MDXMLFM1",254,0)
 Q:X'[X1 X  ; Nothing to translate
"RTN","MDXMLFM1",255,0)
 S Y="" F  Q:X=""  D
"RTN","MDXMLFM1",256,0)
 .I X[X1 S Y=Y_$P(X,X1)_X2,X=$P(X,X1,2,250) Q
"RTN","MDXMLFM1",257,0)
 .S Y=Y_X,X=""
"RTN","MDXMLFM1",258,0)
 Q Y
"RTN","MDXMLFM1",259,0)
 ;
"SEC","^DIC",702.001,702.001,0,"AUDIT")
@
"SEC","^DIC",702.001,702.001,0,"DD")
@
"SEC","^DIC",702.001,702.001,0,"DEL")
@
"SEC","^DIC",702.001,702.001,0,"LAYGO")
@
"SEC","^DIC",702.001,702.001,0,"RD")
@
"SEC","^DIC",702.001,702.001,0,"WR")
@
"SEC","^DIC",704.201,704.201,0,"AUDIT")
@
"SEC","^DIC",704.201,704.201,0,"DD")
@
"SEC","^DIC",704.201,704.201,0,"DEL")
@
"SEC","^DIC",704.201,704.201,0,"LAYGO")

"SEC","^DIC",704.201,704.201,0,"RD")

"SEC","^DIC",704.201,704.201,0,"WR")

"SEC","^DIC",704.202,704.202,0,"AUDIT")
@
"SEC","^DIC",704.202,704.202,0,"DD")
@
"SEC","^DIC",704.202,704.202,0,"DEL")
@
"SEC","^DIC",704.202,704.202,0,"LAYGO")

"SEC","^DIC",704.202,704.202,0,"RD")

"SEC","^DIC",704.202,704.202,0,"WR")

"SEC","^DIC",704.209,704.209,0,"AUDIT")
@
"SEC","^DIC",704.209,704.209,0,"DD")
@
"SEC","^DIC",704.209,704.209,0,"DEL")
@
"SEC","^DIC",704.209,704.209,0,"LAYGO")

"SEC","^DIC",704.209,704.209,0,"RD")

"SEC","^DIC",704.209,704.209,0,"WR")

"VER")
8.0^22.0
"^DD",702,702,.09,0)
TRANSACTION STATUS^S^0:New;1:Submitted;2:Error;3:Complete;4:Ready to Complete;5:Pending Instrument Data;6:Cancelled;^0;9^Q
"^DD",702,702,.09,.1)
Status
"^DD",702,702,.09,1,0)
^.1
"^DD",702,702,.09,1,1,0)
702^AS
"^DD",702,702,.09,1,1,1)
S ^MDD(702,"AS",$E(X,1,30),DA)=""
"^DD",702,702,.09,1,1,2)
K ^MDD(702,"AS",$E(X,1,30),DA)
"^DD",702,702,.09,1,1,"%D",0)
^.101^2^2^3061205^^
"^DD",702,702,.09,1,1,"%D",1,0)
It is a cross reference on the status of the CP study and it
"^DD",702,702,.09,1,1,"%D",2,0)
is used for quick look up.
"^DD",702,702,.09,1,1,"DT")
3040826
"^DD",702,702,.09,3)
Status of this transaction.
"^DD",702,702,.09,21,0)
^.001^49^49^3061205^^^^
"^DD",702,702,.09,21,1,0)
This field contains the status of this transaction. Available statuses 
"^DD",702,702,.09,21,2,0)
are listed below with a description of each.
"^DD",702,702,.09,21,3,0)
 
"^DD",702,702,.09,21,4,0)
0: New                                                                        
"^DD",702,702,.09,21,5,0)
This transaction has been created by an external application and needs to 
"^DD",702,702,.09,21,6,0)
be checked-in with the CPUser application and submitted to an instrument.
"^DD",702,702,.09,21,7,0)
An example of this status would be a consent form scanned in via the
"^DD",702,702,.09,21,8,0)
VistA Imaging Capture Workstation that creates a CP Study record 
"^DD",702,702,.09,21,9,0)
stub with a TIU document but allows further input with the CPUser 
"^DD",702,702,.09,21,10,0)
application.
"^DD",702,702,.09,21,11,0)
 
"^DD",702,702,.09,21,12,0)
1: Submitted                                                      
"^DD",702,702,.09,21,13,0)
This transaction has been submitted to the VistA Imaging Background 
"^DD",702,702,.09,21,14,0)
Processor and is awaiting the copy process to place the attachments for 
"^DD",702,702,.09,21,15,0)
the study on the VistA Imaging server.  A study in this status is not 
"^DD",702,702,.09,21,16,0)
accessible until VistA Imaging returns a status of Complete or Error and 
"^DD",702,702,.09,21,17,0)
logs any errors encountered in the submission process.
"^DD",702,702,.09,21,18,0)
 
"^DD",702,702,.09,21,19,0)
2: Error                                                               
"^DD",702,702,.09,21,20,0)
This transaction has encountered an error while being submitted to VistA 
"^DD",702,702,.09,21,21,0)
Imaging.  The error may be due to the TIU note creation or a problem with 
"^DD",702,702,.09,21,22,0)
the attachments sent to the VistA Imaging server. Error messages are 
"^DD",702,702,.09,21,23,0)
logged with the transaction and can be reviewed by users when opening the 
"^DD",702,702,.09,21,24,0)
transaction in an error status.
"^DD",702,702,.09,21,25,0)
 
"^DD",702,702,.09,21,26,0)
3: Complete                                                             
"^DD",702,702,.09,21,27,0)
This transaction has completed the process and has successfully created a 
"^DD",702,702,.09,21,28,0)
TIU note for interpretation on the selected Consult and if any 
"^DD",702,702,.09,21,29,0)
attachments were included they have been successfully copied to the VistA 
"^DD",702,702,.09,21,30,0)
Imaging server.
"^DD",702,702,.09,21,31,0)
 
"^DD",702,702,.09,21,32,0)
4: Ready to Complete                                                    
"^DD",702,702,.09,21,33,0)
This transaction has been checked in and alternatively, if submitted to a 
"^DD",702,702,.09,21,34,0)
bi-directional instrument, has received the data back from the 
"^DD",702,702,.09,21,35,0)
instrument.  Users may open these transactions and view the 
"^DD",702,702,.09,21,36,0)
Consult/Procedure order as well as assign instrument results to the 
"^DD",702,702,.09,21,37,0)
study.  Once these steps have been done this study can be submitted to 
"^DD",702,702,.09,21,38,0)
VistA Imaging.
"^DD",702,702,.09,21,39,0)
 
"^DD",702,702,.09,21,40,0)
5: Pending Instrument Data                                             
"^DD",702,702,.09,21,41,0)
This transaction has been submitted to a bi-directional instrument and is 
"^DD",702,702,.09,21,42,0)
awaiting that instrument to return the results of the procedure.  
"^DD",702,702,.09,21,43,0)
Transactions in this status should not be opened until the instrument has 
"^DD",702,702,.09,21,44,0)
returned the results, assigned them to the study, and marked it as Ready 
"^DD",702,702,.09,21,45,0)
to Complete.
"^DD",702,702,.09,21,46,0)
                                                                      
"^DD",702,702,.09,21,47,0)
6: Cancelled
"^DD",702,702,.09,21,48,0)
This transaction has been cancelled when the procedure request in
"^DD",702,702,.09,21,49,0)
Consult Report Tracking and CPRS has been cancelled or discontinued.
"^DD",702,702,.09,"DT")
3050404
"^DD",702,702,.13,0)
VISIT^P9000010'I^AUPNVSIT(^1;1^Q
"^DD",702,702,.13,.1)
Visit
"^DD",702,702,.13,1,0)
^.1
"^DD",702,702,.13,1,1,0)
702^AVISIT
"^DD",702,702,.13,1,1,1)
S ^MDD(702,"AVISIT",$E(X,1,30),DA)=""
"^DD",702,702,.13,1,1,2)
K ^MDD(702,"AVISIT",$E(X,1,30),DA)
"^DD",702,702,.13,1,1,3)
Do Not Delete.
"^DD",702,702,.13,1,1,"%D",0)
^.101^3^3^3050425^^
"^DD",702,702,.13,1,1,"%D",1,0)
This cross reference is used to make sure that
"^DD",702,702,.13,1,1,"%D",2,0)
a Visit file entry is not deleted as long
"^DD",702,702,.13,1,1,"%D",3,0)
as there is an entry.
"^DD",702,702,.13,1,1,"DT")
3040629
"^DD",702,702,.13,1,2,0)
702^AUPNV^MUMPS
"^DD",702,702,.13,1,2,1)
D ADD^AUPNVSIT
"^DD",702,702,.13,1,2,2)
D SUB^AUPNVSIT
"^DD",702,702,.13,1,2,3)
Do Not Delete.
"^DD",702,702,.13,1,2,"%D",0)
^^3^3^3040629^
"^DD",702,702,.13,1,2,"%D",1,0)
This cross reference tells Visit Tracking how
"^DD",702,702,.13,1,2,"%D",2,0)
many file entries are using (point to) a Visit
"^DD",702,702,.13,1,2,"%D",3,0)
file entry.
"^DD",702,702,.13,1,2,"DT")
3040629
"^DD",702,702,.13,3)
Enter a Visit number.
"^DD",702,702,.13,21,0)
^.001^2^2^3060811^^^^
"^DD",702,702,.13,21,1,0)
This is the Visit entry returned from PCE.
"^DD",702,702,.13,21,2,0)
(Reference IA# 1902)
"^DD",702,702,.13,"DT")
3040630
"^DD",702.001,702.001,0)
FIELD^^.03^3
"^DD",702.001,702.001,0,"DDA")
N
"^DD",702.001,702.001,0,"DT")
3071126
"^DD",702.001,702.001,0,"NM","CP_TRANSACTION_TIU_HISTORY")

"^DD",702.001,702.001,.01,0)
STUDY_ID^RP702'^MDD(702,^0;1^Q
"^DD",702.001,702.001,.01,1,0)
^.1^^0
"^DD",702.001,702.001,.01,3)

"^DD",702.001,702.001,.01,21,0)
^^1^1^3071126^
"^DD",702.001,702.001,.01,21,1,0)
This field contains a pointer to the CP Transaction file (#702).
"^DD",702.001,702.001,.01,"DT")
3071126
"^DD",702.001,702.001,.02,0)
TIU_NOTE_ID^RP8925'^TIU(8925,^0;2^Q
"^DD",702.001,702.001,.02,1,0)
^.1^^0
"^DD",702.001,702.001,.02,21,0)
^^3^3^3071126^
"^DD",702.001,702.001,.02,21,1,0)
This field contains a pointer to the TIU Document file (#8925)
"^DD",702.001,702.001,.02,21,2,0)
representing the note that contains the interpretation of this
"^DD",702.001,702.001,.02,21,3,0)
CP Transaction.  (Reference IA #3376)
"^DD",702.001,702.001,.02,"DT")
3071128
"^DD",702.001,702.001,.03,0)
DATE_ASSIGNED^RD^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",702.001,702.001,.03,21,0)
^^2^2^3071126^
"^DD",702.001,702.001,.03,21,1,0)
This field contains the date/time when the TIU note was assigned
"^DD",702.001,702.001,.03,21,2,0)
to this transaction.
"^DD",702.001,702.001,.03,"DT")
3071126
"^DD",702.01,702.01,.06,0)
PROCESSING APPLICATION^S^1:DEFAULT;2:HEMODIALYSIS;^0;6^Q
"^DD",702.01,702.01,.06,.1)
Processing Application
"^DD",702.01,702.01,.06,21,0)
^.001^4^4^3050719^^^^
"^DD",702.01,702.01,.06,21,1,0)
This field is used to indicate if this is a Hemodialysis
"^DD",702.01,702.01,.06,21,2,0)
procedure or not.  The field is a set of codes, 1=DEFAULT so
"^DD",702.01,702.01,.06,21,3,0)
it will be processed by Clinical Procedures or 2=HEMODIALYSIS
"^DD",702.01,702.01,.06,21,4,0)
and the procedure will be processed by the Hemodialysis application.
"^DD",702.01,702.01,.06,"DT")
3050719
"^DD",702.09,702.09,0)
FIELD^^.1^28
"^DD",702.09,702.09,0,"DDA")
N
"^DD",702.09,702.09,0,"DT")
3071011
"^DD",702.09,702.09,0,"IX","B",702.09,.01)

"^DD",702.09,702.09,0,"IX","UC",702.09,.01)

"^DD",702.09,702.09,0,"NM","CP INSTRUMENT")

"^DD",702.09,702.09,0,"PT",702,.11)

"^DD",702.09,702.09,0,"PT",702.011,.01)

"^DD",702.09,702.09,0,"PT",703.1,.04)

"^DD",702.09,702.09,0,"VRPK")
MD
"^DD",702.09,702.09,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",702.09,702.09,.01,.1)
Instrument Name
"^DD",702.09,702.09,.01,1,0)
^.1
"^DD",702.09,702.09,.01,1,1,0)
702.09^B
"^DD",702.09,702.09,.01,1,1,1)
S ^MDS(702.09,"B",$E(X,1,30),DA)=""
"^DD",702.09,702.09,.01,1,1,2)
K ^MDS(702.09,"B",$E(X,1,30),DA)
"^DD",702.09,702.09,.01,1,1,"%D",0)
^^1^1^3011019^
"^DD",702.09,702.09,.01,1,1,"%D",1,0)
Standard Fileman "B" index for the file.
"^DD",702.09,702.09,.01,1,2,0)
702.09^UC^MUMPS
"^DD",702.09,702.09,.01,1,2,1)
S ^MDS(702.09,"UC",$$UP^XLFSTR(X),DA)=""
"^DD",702.09,702.09,.01,1,2,2)
K ^MDS(702.09,"UC",$$UP^XLFSTR(X),DA)
"^DD",702.09,702.09,.01,1,2,"%D",0)
^^1^1^3020805^
"^DD",702.09,702.09,.01,1,2,"%D",1,0)
Used to validate a new entry as unique without case sensitivity.
"^DD",702.09,702.09,.01,1,2,"DT")
3020805
"^DD",702.09,702.09,.01,3)
Answer must be 3-30 characters in length.
"^DD",702.09,702.09,.01,21,0)
^.001^1^1^3020716^^^^
"^DD",702.09,702.09,.01,21,1,0)
Name or mnemonic of instrument - used by vendor in HL7 message header.
"^DD",702.09,702.09,.01,"DT")
3020805
"^DD",702.09,702.09,.02,0)
NOTIFICATION MAILGROUP^P3.8'^XMB(3.8,^0;2^Q
"^DD",702.09,702.09,.02,.1)
Notification Mailgroup
"^DD",702.09,702.09,.02,21,0)
^.001^3^3^3011105^^^^
"^DD",702.09,702.09,.02,21,1,0)
This field contains a pointer to a VA Mailman Mail Group that will 
"^DD",702.09,702.09,.02,21,2,0)
receive error messages and other notifications dealing with this device 
"^DD",702.09,702.09,.02,21,3,0)
from the interface routines.
"^DD",702.09,702.09,.02,"DT")
3011105
"^DD",702.09,702.09,.03,0)
DESCRIPTION^F^^0;3^K:$L(X)>50!($L(X)<1) X
"^DD",702.09,702.09,.03,.1)
Description
"^DD",702.09,702.09,.03,3)
Answer must be 1-50 characters in length.
"^DD",702.09,702.09,.03,21,0)
^^2^2^3021112^
"^DD",702.09,702.09,.03,21,1,0)
This field contains a short informational description text for the
"^DD",702.09,702.09,.03,21,2,0)
instrument.
"^DD",702.09,702.09,.03,"DT")
3020702
"^DD",702.09,702.09,.05,0)
DELETE WHEN SUBMITTED^S^0:No;1:Yes;^0;5^Q
"^DD",702.09,702.09,.05,.1)
Delete when submitted
"^DD",702.09,702.09,.05,3)
Enter Yes or No.
"^DD",702.09,702.09,.05,21,0)
^.001^3^3^3011019^^^
"^DD",702.09,702.09,.05,21,1,0)
Select 'Yes' if you want files created by this instrument deleted once
"^DD",702.09,702.09,.05,21,2,0)
they are successfully copied to the VistA Imaging Server.  Deletion will
"^DD",702.09,702.09,.05,21,3,0)
be performed by the VistA Imaging application.
"^DD",702.09,702.09,.05,"DT")
3010227
"^DD",702.09,702.09,.06,0)
PRINTABLE NAME^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",702.09,702.09,.06,.1)
Printable Name
"^DD",702.09,702.09,.06,3)
Answer must be 3-30 characters in length.
"^DD",702.09,702.09,.06,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.06,21,1,0)
Name of instrument that is printed on reports/etc.
"^DD",702.09,702.09,.06,"DT")
3000724
"^DD",702.09,702.09,.07,0)
DEFAULT FILE EXT^F^^0;7^K:$L(X)>10!($L(X)<1)!'(X?1"."1.9UL) X
"^DD",702.09,702.09,.07,.1)
Default Ext.
"^DD",702.09,702.09,.07,3)
Enter in a file extension for data uploaded from this instrument (Default .txt)
"^DD",702.09,702.09,.07,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.07,21,1,0)
Default file extension for vendor instrument reports (e.g. .doc .pdf).
"^DD",702.09,702.09,.07,"DT")
3020725
"^DD",702.09,702.09,.08,0)
SERIAL NUMBER^F^^0;8^K:$L(X)>50!($L(X)<1) X
"^DD",702.09,702.09,.08,.1)
Serial Number
"^DD",702.09,702.09,.08,3)
Answer must be 1-50 characters in length.
"^DD",702.09,702.09,.08,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.08,21,1,0)
Vendor serial number of the instrument (for reference only).
"^DD",702.09,702.09,.08,"DT")
3000724
"^DD",702.09,702.09,.09,0)
ACTIVE^RS^0:No;1:Yes;^0;9^Q
"^DD",702.09,702.09,.09,.1)
Active
"^DD",702.09,702.09,.09,3)
Enter Yes or No.
"^DD",702.09,702.09,.09,21,0)
^.001^1^1^3011019^^
"^DD",702.09,702.09,.09,21,1,0)
Whether or not the instrument is active on the network.
"^DD",702.09,702.09,.09,"DT")
3000724
"^DD",702.09,702.09,.1,0)
ID^RF^^ID;1^K:$L(X)>38!($L(X)<38)!'(X?1"{"8UN1"-"4UN1"-"4UN1"-"4UN1"-"12UN1"}") X
"^DD",702.09,702.09,.1,3)
Answer must be 38 characters in length.
"^DD",702.09,702.09,.1,"DT")
3071011
"^DD",702.09,702.09,.11,0)
PROCESSING ROUTINE^F^^.1;1^K:$L(X)>8!($L(X)<1) X
"^DD",702.09,702.09,.11,.1)
M Routine
"^DD",702.09,702.09,.11,3)
Answer must be 1-8 characters in length.
"^DD",702.09,702.09,.11,21,0)
^.001^1^1^3021112^^^^
"^DD",702.09,702.09,.11,21,1,0)
Name of the MUMPS routine used to process interface information.
"^DD",702.09,702.09,.11,"DT")
3020725
"^DD",702.09,702.09,.12,0)
PROCESSING CODE^S^M:Medicine;C:CP V1.0;O:CliO;^.1;2^Q
"^DD",702.09,702.09,.12,.1)
Pkg Code
"^DD",702.09,702.09,.12,3)
Select package this instrument uploads to.
"^DD",702.09,702.09,.12,21,0)
^^2^2^3070419^
"^DD",702.09,702.09,.12,21,1,0)
Where data is to be processed - "M"edicine, "C"linical Procedures, or 
"^DD",702.09,702.09,.12,21,2,0)
Cli"O".
"^DD",702.09,702.09,.12,"DT")
3070419
"^DD",702.09,702.09,.13,0)
BI-DIRECTIONAL^S^0:No;1:Yes;^.1;3^Q
"^DD",702.09,702.09,.13,.1)
Bi-Directional Instrument
"^DD",702.09,702.09,.13,21,0)
^.001^2^2^3021112^^
"^DD",702.09,702.09,.13,21,1,0)
'Yes' or 'No" to indicate if this device can accept HL7 messages from
"^DD",702.09,702.09,.13,21,2,0)
VistA.
"^DD",702.09,702.09,.13,"DT")
3020730
"^DD",702.09,702.09,.14,0)
IP ADDRESS^F^^.1;4^K:$L(X)>15!($L(X)<7)!'(X?1.3N1"."1.3N1"."1.3N1"."1.3N) X
"^DD",702.09,702.09,.14,.1)
IP Address
"^DD",702.09,702.09,.14,3)
Answer must be 7-15 characters in length.
"^DD",702.09,702.09,.14,21,0)
^^1^1^3021112^
"^DD",702.09,702.09,.14,21,1,0)
This field contains the IP address of this instrument.
"^DD",702.09,702.09,.14,"DT")
3020702
"^DD",702.09,702.09,.15,0)
PORT^NJ5,0^^.1;5^K:+X'=X!(X>99999)!(X<1000)!(X?.E1"."1N.N) X
"^DD",702.09,702.09,.15,.1)
Port
"^DD",702.09,702.09,.15,3)
Type a Number between 1000 and 99999, 0 Decimal Digits
"^DD",702.09,702.09,.15,21,0)
^.001^1^1^3021220^^
"^DD",702.09,702.09,.15,21,1,0)
This field contains the port number for this instrument.
"^DD",702.09,702.09,.15,"DT")
3021220
"^DD",702.09,702.09,.16,0)
HL7 INSTRUMENT ID^F^^.1;6^K:$L(X)>30!($L(X)<3) X
"^DD",702.09,702.09,.16,.1)
HL7 Inst ID
"^DD",702.09,702.09,.16,3)
Answer must be 3-30 characters in length.
"^DD",702.09,702.09,.16,21,0)
^.001^2^2^3021112^^
"^DD",702.09,702.09,.16,21,1,0)
This is the name of the actual device where the device name can
"^DD",702.09,702.09,.16,21,2,0)
be 'SMC St. Louis'.  This field is used to ID the device.
"^DD",702.09,702.09,.16,"DT")
3020725
"^DD",702.09,702.09,.17,0)
HL7 UNIVERSAL SERVICE ID^F^^.1;7^K:$L(X)>48!($L(X)<1) X
"^DD",702.09,702.09,.17,.1)
HL7 Unv Svc ID
"^DD",702.09,702.09,.17,3)
Answer must be 1-48 characters in length.
"^DD",702.09,702.09,.17,21,0)
^^2^2^3021112^
"^DD",702.09,702.09,.17,21,1,0)
This field defines what type of procedure the device can perform if the
"^DD",702.09,702.09,.17,21,2,0)
device can perform more than one procedure.
"^DD",702.09,702.09,.17,"DT")
3020725
"^DD",702.09,702.09,.18,0)
HL7 LOGICAL LINK^P870'^HLCS(870,^.1;8^Q
"^DD",702.09,702.09,.18,.1)
HL7 Link
"^DD",702.09,702.09,.18,21,0)
^.001^3^3^3040205^^^^
"^DD",702.09,702.09,.18,21,1,0)
This field contains the HL7 Logical Link.  There is one unique link for
"^DD",702.09,702.09,.18,21,2,0)
each instrument.  Used to determine where the bi-directional messages are sent.
"^DD",702.09,702.09,.18,21,3,0)
(Reference IA #1496)
"^DD",702.09,702.09,.18,"DT")
3020725
"^DD",702.09,702.09,.21,0)
SERVER NAME^F^^.2;1^K:$L(X)>30!($L(X)<1) X
"^DD",702.09,702.09,.21,.1)
Server Name
"^DD",702.09,702.09,.21,3)
Answer must be 1-30 characters in length.
"^DD",702.09,702.09,.21,21,0)
^^2^2^3020425^
"^DD",702.09,702.09,.21,21,1,0)
Network name of instrument server application
"^DD",702.09,702.09,.21,21,2,0)
that generates the attachments.
"^DD",702.09,702.09,.21,"DT")
3000724
"^DD",702.09,702.09,.22,0)
SERVER SHARE^F^^.2;2^K:$L(X)>30!($L(X)<1) X
"^DD",702.09,702.09,.22,.1)
Share Name
"^DD",702.09,702.09,.22,3)
Answer must be 1-30 characters in length.
"^DD",702.09,702.09,.22,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.22,21,1,0)
Share folder/drive on the instrument server where the report is stored.
"^DD",702.09,702.09,.22,"DT")
3020801
"^DD",702.09,702.09,.23,0)
SERVER PATH^F^^.2;3^K:$L(X)>150!($L(X)<1) X
"^DD",702.09,702.09,.23,.1)
Path Name
"^DD",702.09,702.09,.23,3)
Answer must be 1-150 characters in length.
"^DD",702.09,702.09,.23,21,0)
^.001^1^1^3011019^^^^
"^DD",702.09,702.09,.23,21,1,0)
Path on the network where the report is stored.
"^DD",702.09,702.09,.23,"DT")
3020801
"^DD",702.09,702.09,.24,0)
SERVER EXECUTABLE^F^^.2;4^K:$L(X)>30!($L(X)<1) X
"^DD",702.09,702.09,.24,.1)
Executable Name
"^DD",702.09,702.09,.24,3)
Answer must be 1-30 characters in length.
"^DD",702.09,702.09,.24,21,0)
^.001^1^1^3011019^^
"^DD",702.09,702.09,.24,21,1,0)
Name of server program that is ran to create the report for the interface.
"^DD",702.09,702.09,.24,"DT")
3020801
"^DD",702.09,702.09,.301,0)
PROCESS UNC^S^0:No;1:Yes;^.3;1^Q
"^DD",702.09,702.09,.301,.1)
UNC
"^DD",702.09,702.09,.301,3)
Enter Yes or No.
"^DD",702.09,702.09,.301,21,0)
^.001^1^1^3021112^^^
"^DD",702.09,702.09,.301,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces UNC type data.
"^DD",702.09,702.09,.301,"DT")
3010619
"^DD",702.09,702.09,.302,0)
PROCESS TEXT^S^0:No;1:Yes;^.3;2^Q
"^DD",702.09,702.09,.302,.1)
Text
"^DD",702.09,702.09,.302,3)
Enter Yes or No.
"^DD",702.09,702.09,.302,21,0)
^.001^1^1^3021112^^^
"^DD",702.09,702.09,.302,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces text type data.
"^DD",702.09,702.09,.302,"DT")
3010619
"^DD",702.09,702.09,.303,0)
PROCESS URL^S^0:No;1:Yes;^.3;3^Q
"^DD",702.09,702.09,.303,.1)
URL
"^DD",702.09,702.09,.303,3)
Enter Yes or No.
"^DD",702.09,702.09,.303,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.303,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces URL type data.
"^DD",702.09,702.09,.303,"DT")
3010619
"^DD",702.09,702.09,.304,0)
PROCESS DLL^S^0:No;1:Yes;^.3;4^Q
"^DD",702.09,702.09,.304,.1)
DLL
"^DD",702.09,702.09,.304,3)
Enter Yes or No.
"^DD",702.09,702.09,.304,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.304,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces DLL type data.
"^DD",702.09,702.09,.304,"DT")
3010619
"^DD",702.09,702.09,.305,0)
PROCESS UUENCODE^S^0:No;1:Yes;^.3;5^Q
"^DD",702.09,702.09,.305,.1)
UUEncode
"^DD",702.09,702.09,.305,3)
Enter Yes or No.
"^DD",702.09,702.09,.305,21,0)
^.001^1^1^3021112^^^
"^DD",702.09,702.09,.305,21,1,0)
Enter 'Yes'  or 'No" to indicate if this instrument produces UUENCODE type data.
"^DD",702.09,702.09,.305,"DT")
3020725
"^DD",702.09,702.09,.306,0)
PROCESS XML^S^0:No;1:Yes;^.3;6^Q
"^DD",702.09,702.09,.306,.1)
XML
"^DD",702.09,702.09,.306,3)
Enter Yes or No.
"^DD",702.09,702.09,.306,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.306,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces XML type data.
"^DD",702.09,702.09,.306,"DT")
3010619
"^DD",702.09,702.09,.307,0)
PROCESS XMS^S^0:No;1:Yes;^.3;7^Q
"^DD",702.09,702.09,.307,.1)
XMS
"^DD",702.09,702.09,.307,3)
Enter Yes or No.
"^DD",702.09,702.09,.307,21,0)
^.001^1^1^3021112^^
"^DD",702.09,702.09,.307,21,1,0)
Enter 'Yes' or 'No' to indicate if this instrument produces XMS type data.
"^DD",702.09,702.09,.307,"DT")
3021204
"^DD",703.1,703.1,.05,0)
STUDY REFERENCE NUMBER^P702^MDD(702,^0;5^Q
"^DD",703.1,703.1,.05,1,0)
^.1
"^DD",703.1,703.1,.05,1,1,0)
703.1^ASTUDYID
"^DD",703.1,703.1,.05,1,1,1)
S ^MDD(703.1,"ASTUDYID",$E(X,1,30),DA)=""
"^DD",703.1,703.1,.05,1,1,2)
K ^MDD(703.1,"ASTUDYID",$E(X,1,30),DA)
"^DD",703.1,703.1,.05,1,1,"%D",0)
^^1^1^3060823^
"^DD",703.1,703.1,.05,1,1,"%D",1,0)
This cross reference provide a quick look up by the study reference ID.
"^DD",703.1,703.1,.05,1,1,"DT")
3041108
"^DD",703.1,703.1,.05,3)

"^DD",703.1,703.1,.05,21,0)
^.001^1^1^3060905^^^^
"^DD",703.1,703.1,.05,21,1,0)
This field serves as a reference to the transaction.
"^DD",703.1,703.1,.05,"DT")
3060905
"^DD",704.201,704.201,0)
FIELD^^.3^4
"^DD",704.201,704.201,0,"DDA")
N
"^DD",704.201,704.201,0,"DT")
3060706
"^DD",704.201,704.201,0,"IX","B",704.201,.01)

"^DD",704.201,704.201,0,"NM","HEMODIALYSIS ACCESS POINTS")

"^DD",704.201,704.201,0,"VRPK")
MD
"^DD",704.201,704.201,.01,0)
PATIENT_ID^RP2^DPT(^0;1^Q
"^DD",704.201,704.201,.01,1,0)
^.1
"^DD",704.201,704.201,.01,1,1,0)
704.201^B
"^DD",704.201,704.201,.01,1,1,1)
S ^MDK(704.201,"B",$E(X,1,30),DA)=""
"^DD",704.201,704.201,.01,1,1,2)
K ^MDK(704.201,"B",$E(X,1,30),DA)
"^DD",704.201,704.201,.01,3)

"^DD",704.201,704.201,.01,21,0)
^.001^2^2^3060725^^^^
"^DD",704.201,704.201,.01,21,1,0)
This field displays the name of the patient for whom the access
"^DD",704.201,704.201,.01,21,2,0)
point of the dialysis treatment history is recorded.
"^DD",704.201,704.201,.01,"DT")
3060706
"^DD",704.201,704.201,.1,0)
ACCESS POINTS^704.2011^^.1;0
"^DD",704.201,704.201,.1,21,0)
^^2^2^3060627^
"^DD",704.201,704.201,.1,21,1,0)
This field holds the XML in UUEncoded format for this patient's access 
"^DD",704.201,704.201,.1,21,2,0)
points for dialysis treatments.
"^DD",704.201,704.201,.2,0)
ACCESS HISTORY^704.2012^^.2;0
"^DD",704.201,704.201,.2,21,0)
^^2^2^3060627^
"^DD",704.201,704.201,.2,21,1,0)
This field holds the XML in UUEncoded format for this patient's access
"^DD",704.201,704.201,.2,21,2,0)
history for dialysis treatments.
"^DD",704.201,704.201,.3,0)
INFECTION HISTORY^704.2013^^.3;0
"^DD",704.201,704.201,.3,21,0)
^^2^2^3060627^
"^DD",704.201,704.201,.3,21,1,0)
This field holds the XML in UUEncoded format for this patient's infection
"^DD",704.201,704.201,.3,21,2,0)
history for dialysis treatments.
"^DD",704.201,704.2011,0)
ACCESS POINTS SUB-FIELD^^.01^1
"^DD",704.201,704.2011,0,"DT")
3041018
"^DD",704.201,704.2011,0,"NM","ACCESS POINTS")

"^DD",704.201,704.2011,0,"UP")
704.201
"^DD",704.201,704.2011,.01,0)
ACCESS POINTS^WL^^0;1^Q
"^DD",704.201,704.2011,.01,"DT")
3041018
"^DD",704.201,704.2012,0)
ACCESS HISTORY SUB-FIELD^^.01^1
"^DD",704.201,704.2012,0,"DT")
3041018
"^DD",704.201,704.2012,0,"NM","ACCESS HISTORY")

"^DD",704.201,704.2012,0,"UP")
704.201
"^DD",704.201,704.2012,.01,0)
ACCESS HISTORY^WL^^0;1^Q
"^DD",704.201,704.2012,.01,"DT")
3041018
"^DD",704.201,704.2013,0)
INFECTION HISTORY SUB-FIELD^^.01^1
"^DD",704.201,704.2013,0,"DT")
3041018
"^DD",704.201,704.2013,0,"NM","INFECTION HISTORY")

"^DD",704.201,704.2013,0,"UP")
704.201
"^DD",704.201,704.2013,.01,0)
INFECTION HISTORY^WL^^0;1^Q
"^DD",704.201,704.2013,.01,"DT")
3041018
"^DD",704.202,704.202,0)
FIELD^^.07^14
"^DD",704.202,704.202,0,"DDA")
N
"^DD",704.202,704.202,0,"DT")
3071127
"^DD",704.202,704.202,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",704.202,704.202,0,"IX","AS",704.202,.09)

"^DD",704.202,704.202,0,"IX","B",704.202,.01)

"^DD",704.202,704.202,0,"IX","C",704.202,.02)

"^DD",704.202,704.202,0,"NM","HEMODIALYSIS STUDY")

"^DD",704.202,704.202,0,"VRPK")
MD
"^DD",704.202,704.202,.01,0)
ID^RP702^MDD(702,^0;1^Q
"^DD",704.202,704.202,.01,1,0)
^.1
"^DD",704.202,704.202,.01,1,1,0)
704.202^B
"^DD",704.202,704.202,.01,1,1,1)
S ^MDK(704.202,"B",$E(X,1,30),DA)=""
"^DD",704.202,704.202,.01,1,1,2)
K ^MDK(704.202,"B",$E(X,1,30),DA)
"^DD",704.202,704.202,.01,1,2,0)
^^TRIGGER^704.202^.02
"^DD",704.202,704.202,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^MDK(704.202,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=+$P($G(^MDD(702,DA,0)),U) X ^DD(704.202,.01,1,2,1.4)
"^DD",704.202,704.202,.01,1,2,1.4)
S DIH=$G(^MDK(704.202,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=704.202,DIG=.02 D ^DICR
"^DD",704.202,704.202,.01,1,2,2)
Q
"^DD",704.202,704.202,.01,1,2,"%D",0)
^.101^3^3^3060809^^
"^DD",704.202,704.202,.01,1,2,"%D",1,0)
The Patient field will be triggered whenever the ID field
"^DD",704.202,704.202,.01,1,2,"%D",2,0)
is entered or updated.  The trigger value will be the 
"^DD",704.202,704.202,.01,1,2,"%D",3,0)
patient number.  The Patient field cannot be edited.
"^DD",704.202,704.202,.01,1,2,"CREATE VALUE")
S X=+$P($G(^MDD(702,DA,0)),U)
"^DD",704.202,704.202,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",704.202,704.202,.01,1,2,"DT")
3060808
"^DD",704.202,704.202,.01,1,2,"FIELD")
#.02
"^DD",704.202,704.202,.01,3)

"^DD",704.202,704.202,.01,21,0)
^.001^2^2^3060725^^^^
"^DD",704.202,704.202,.01,21,1,0)
This field displays the name of the patient whose CP study corresponds
"^DD",704.202,704.202,.01,21,2,0)
to this dialysis treatment.
"^DD",704.202,704.202,.01,"DT")
3060808
"^DD",704.202,704.202,.02,0)
PATIENT^P2'I^DPT(^0;2^Q
"^DD",704.202,704.202,.02,1,0)
^.1
"^DD",704.202,704.202,.02,1,1,0)
704.202^C
"^DD",704.202,704.202,.02,1,1,1)
S ^MDK(704.202,"C",$E(X,1,30),DA)=""
"^DD",704.202,704.202,.02,1,1,2)
K ^MDK(704.202,"C",$E(X,1,30),DA)
"^DD",704.202,704.202,.02,1,1,"DT")
3041025
"^DD",704.202,704.202,.02,5,1,0)
704.202^.01^2
"^DD",704.202,704.202,.02,9)
^
"^DD",704.202,704.202,.02,21,0)
^.001^2^2^3060725^^^^
"^DD",704.202,704.202,.02,21,1,0)
This field displays the name of the patient whose dialysis treatment
"^DD",704.202,704.202,.02,21,2,0)
is stored.
"^DD",704.202,704.202,.02,"DT")
3060809
"^DD",704.202,704.202,.03,0)
STUDY_DATETIME^CD^^ ; ^S X=$P($G(^MDD(702,D0,0)),U,2)
"^DD",704.202,704.202,.03,9)
^
"^DD",704.202,704.202,.03,9.01)

"^DD",704.202,704.202,.03,9.1)
S X=$P($G(^MDD(702,D0,0)),U,2)
"^DD",704.202,704.202,.03,21,0)
^^2^2^3050726^
"^DD",704.202,704.202,.03,21,1,0)
Computed field used to allow automated XML creation with appropriate 
"^DD",704.202,704.202,.03,21,2,0)
tag/value pairs.
"^DD",704.202,704.202,.03,"DT")
3050726
"^DD",704.202,704.202,.04,0)
STUDY_LOCATION^CJ8^^ ; ^S X=$P($G(^MDS(702.01,+$P($G(^MDD(702,D0,0)),U,4),0)),U,5)
"^DD",704.202,704.202,.04,9)
^
"^DD",704.202,704.202,.04,9.01)

"^DD",704.202,704.202,.04,9.1)
S X=$P($G(^MDS(702.01,+$P($G(^MDD(702,D0,0)),U,4),0)),U,5)
"^DD",704.202,704.202,.04,21,0)
^.001^2^2^3060808^^
"^DD",704.202,704.202,.04,21,1,0)
Computed field used to allow automated XML creation with appropriate
"^DD",704.202,704.202,.04,21,2,0)
tag/value pairs.
"^DD",704.202,704.202,.04,"DT")
3060808
"^DD",704.202,704.202,.05,0)
USER^P200'^VA(200,^0;3^Q
"^DD",704.202,704.202,.05,21,0)
^^1^1^3071127^
"^DD",704.202,704.202,.05,21,1,0)
This field contains the user who accessed the Hemodialysis study.
"^DD",704.202,704.202,.05,"DT")
3071127
"^DD",704.202,704.202,.06,0)
DATE/TIME ACCESSED^D^^0;4^S %DT="ETR" D ^%DT S X=Y K:Y<1 X
"^DD",704.202,704.202,.06,21,0)
^^2^2^3071127^
"^DD",704.202,704.202,.06,21,1,0)
This field displays the date/time when the hemodialysis study was
"^DD",704.202,704.202,.06,21,2,0)
accessed by the user.
"^DD",704.202,704.202,.06,"DT")
3071127
"^DD",704.202,704.202,.07,0)
WORKSTATION^F^^0;5^K:$L(X)>45!($L(X)<3) X
"^DD",704.202,704.202,.07,3)
Answer must be 3-45 characters in length.
"^DD",704.202,704.202,.07,21,0)
^^2^2^3071127^
"^DD",704.202,704.202,.07,21,1,0)
This field contains the workstation that was used by the user
"^DD",704.202,704.202,.07,21,2,0)
to access the hemodialysis study.
"^DD",704.202,704.202,.07,"DT")
3071127
"^DD",704.202,704.202,.09,0)
STATUS^S^0:CLOSED;1:ACTIVE;2:DISABLED;^0;9^Q
"^DD",704.202,704.202,.09,1,0)
^.1
"^DD",704.202,704.202,.09,1,1,0)
704.202^AS
"^DD",704.202,704.202,.09,1,1,1)
S ^MDK(704.202,"AS",$E(X,1,30),DA)=""
"^DD",704.202,704.202,.09,1,1,2)
K ^MDK(704.202,"AS",$E(X,1,30),DA)
"^DD",704.202,704.202,.09,1,1,"DT")
3041025
"^DD",704.202,704.202,.09,21,0)
^^1^1^3060809^
"^DD",704.202,704.202,.09,21,1,0)
This field contains the status of this procedure.
"^DD",704.202,704.202,.09,"DT")
3071126
"^DD",704.202,704.202,.1,0)
STUDY DATA^704.2021^^.1;0
"^DD",704.202,704.202,.1,21,0)
^^1^1^3060809^
"^DD",704.202,704.202,.1,21,1,0)
This field contains the study data XML document in UUEncoded format.
"^DD",704.202,704.202,.2,0)
SUMMARY^704.2022^^.2;0
"^DD",704.202,704.202,.2,21,0)
^^1^1^3060809^
"^DD",704.202,704.202,.2,21,1,0)
This field contains the summary data XML document in UUEncoded format.
"^DD",704.202,704.202,.3,0)
FLOWSHEET^704.2023^^.3;0
"^DD",704.202,704.202,.3,21,0)
^^1^1^3060809^
"^DD",704.202,704.202,.3,21,1,0)
This field contains the flowsheet data XML document in UUEncoded format.
"^DD",704.202,704.202,.4,0)
MED LOG^704.2024^^.4;0
"^DD",704.202,704.202,.4,21,0)
^^1^1^3060809^
"^DD",704.202,704.202,.4,21,1,0)
This field contains the med log data XML document in UUEncoded format.
"^DD",704.202,704.202,.5,0)
NOTE LIST^704.2025^^.5;0
"^DD",704.202,704.202,.5,21,0)
^.001^2^2^3060628^^
"^DD",704.202,704.202,.5,21,1,0)
This field contains the Note List data XML document in
"^DD",704.202,704.202,.5,21,2,0)
UUEncoded format.
"^DD",704.202,704.202,.6,0)
EVENT LOG^704.2026^^.6;0
"^DD",704.202,704.202,.6,21,0)
^^2^2^3060628^
"^DD",704.202,704.202,.6,21,1,0)
This field contains the Event Log data XML document in
"^DD",704.202,704.202,.6,21,2,0)
UUEncoded format.
"^DD",704.202,704.2021,0)
STUDY DATA SUB-FIELD^^.01^1
"^DD",704.202,704.2021,0,"DT")
3041025
"^DD",704.202,704.2021,0,"NM","STUDY DATA")

"^DD",704.202,704.2021,0,"UP")
704.202
"^DD",704.202,704.2021,.01,0)
STUDY DATA^WL^^0;1^Q
"^DD",704.202,704.2021,.01,"DT")
3041025
"^DD",704.202,704.2022,0)
SUMMARY SUB-FIELD^^.01^1
"^DD",704.202,704.2022,0,"DT")
3041025
"^DD",704.202,704.2022,0,"NM","SUMMARY")

"^DD",704.202,704.2022,0,"UP")
704.202
"^DD",704.202,704.2022,.01,0)
SUMMARY^WL^^0;1^Q
"^DD",704.202,704.2022,.01,"DT")
3041025
"^DD",704.202,704.2023,0)
FLOWSHEET SUB-FIELD^^.01^1
"^DD",704.202,704.2023,0,"DT")
3041025
"^DD",704.202,704.2023,0,"NM","FLOWSHEET")

"^DD",704.202,704.2023,0,"UP")
704.202
"^DD",704.202,704.2023,.01,0)
FLOWSHEET^WL^^0;1^Q
"^DD",704.202,704.2023,.01,"DT")
3041025
"^DD",704.202,704.2024,0)
MED LOG SUB-FIELD^^.01^1
"^DD",704.202,704.2024,0,"DT")
3041108
"^DD",704.202,704.2024,0,"NM","MED LOG")

"^DD",704.202,704.2024,0,"UP")
704.202
"^DD",704.202,704.2024,.01,0)
MED LOG^WL^^0;1^Q
"^DD",704.202,704.2024,.01,"DT")
3041108
"^DD",704.202,704.2025,0)
NOTE LIST SUB-FIELD^^.01^1
"^DD",704.202,704.2025,0,"DT")
3051012
"^DD",704.202,704.2025,0,"NM","NOTE LIST")

"^DD",704.202,704.2025,0,"UP")
704.202
"^DD",704.202,704.2025,.01,0)
NOTE LIST^WL^^0;1^Q
"^DD",704.202,704.2025,.01,"DT")
3051012
"^DD",704.202,704.2026,0)
EVENT LOG SUB-FIELD^^.01^1
"^DD",704.202,704.2026,0,"DT")
3051012
"^DD",704.202,704.2026,0,"NM","EVENT LOG")

"^DD",704.202,704.2026,0,"UP")
704.202
"^DD",704.202,704.2026,.01,0)
EVENT LOG^WL^^0;1^Q
"^DD",704.202,704.2026,.01,"DT")
3051012
"^DD",704.209,704.209,0)
FIELD^^.05^6
"^DD",704.209,704.209,0,"DDA")
N
"^DD",704.209,704.209,0,"DT")
3060811
"^DD",704.209,704.209,0,"IX","B",704.209,.01)

"^DD",704.209,704.209,0,"NM","HEMODIALYSIS SETTINGS")

"^DD",704.209,704.209,0,"VRPK")
MD
"^DD",704.209,704.209,.01,0)
SETTING NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",704.209,704.209,.01,1,0)
^.1
"^DD",704.209,704.209,.01,1,1,0)
704.209^B
"^DD",704.209,704.209,.01,1,1,1)
S ^MDK(704.209,"B",$E(X,1,30),DA)=""
"^DD",704.209,704.209,.01,1,1,2)
K ^MDK(704.209,"B",$E(X,1,30),DA)
"^DD",704.209,704.209,.01,3)
Answer must be 3-30 characters in length.
"^DD",704.209,704.209,.01,21,0)
^.001^2^2^3060809^^
"^DD",704.209,704.209,.01,21,1,0)
This field contains the descriptive name of the data contained in
"^DD",704.209,704.209,.01,21,2,0)
this setting.
"^DD",704.209,704.209,.01,"DT")
3060809
"^DD",704.209,704.209,.02,0)
OWNER^P200^VA(200,^0;2^Q
"^DD",704.209,704.209,.02,3)

"^DD",704.209,704.209,.02,21,0)
^.001^2^2^3060807^^^^
"^DD",704.209,704.209,.02,21,1,0)
This field displays the owner name of the option setting in the
"^DD",704.209,704.209,.02,21,2,0)
Hemodialysis client application.
"^DD",704.209,704.209,.02,"DT")
3060807
"^DD",704.209,704.209,.03,0)
USER^P200'^VA(200,^0;3^Q
"^DD",704.209,704.209,.03,21,0)
^^2^2^3060808^
"^DD",704.209,704.209,.03,21,1,0)
This field displays the user name that is locking the Hemodialysis
"^DD",704.209,704.209,.03,21,2,0)
setting option.
"^DD",704.209,704.209,.03,"DT")
3060808
"^DD",704.209,704.209,.04,0)
DATE/TIME OF LOCK^D^^0;4^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",704.209,704.209,.04,21,0)
^^2^2^3060808^
"^DD",704.209,704.209,.04,21,1,0)
This field will store the date and time of when the Hemodialysis setting 
"^DD",704.209,704.209,.04,21,2,0)
option was locked for use.
"^DD",704.209,704.209,.04,"DT")
3060808
"^DD",704.209,704.209,.05,0)
PROCESS ID^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",704.209,704.209,.05,3)
Answer must be 1-40 characters in length.
"^DD",704.209,704.209,.05,21,0)
^.001^2^2^3060811^^^
"^DD",704.209,704.209,.05,21,1,0)
This field will store the JOB ID of the process that is locking the 
"^DD",704.209,704.209,.05,21,2,0)
Hemodialysis setting option.
"^DD",704.209,704.209,.05,"DT")
3060811
"^DD",704.209,704.209,.1,0)
XML DOCUMENT^704.2091^^.1;0
"^DD",704.209,704.209,.1,21,0)
^^1^1^3060809^
"^DD",704.209,704.209,.1,21,1,0)
This field contains the XML document for this setting in UUEncoded format.
"^DD",704.209,704.2091,0)
XML DOCUMENT SUB-FIELD^^.01^1
"^DD",704.209,704.2091,0,"DT")
3050128
"^DD",704.209,704.2091,0,"NM","XML DOCUMENT")

"^DD",704.209,704.2091,0,"UP")
704.209
"^DD",704.209,704.2091,.01,0)
XML DOCUMENT^WL^^0;1^Q
"^DD",704.209,704.2091,.01,"DT")
3050128
"^DIC",702.001,702.001,0)
CP_TRANSACTION_TIU_HISTORY^702.001
"^DIC",702.001,702.001,0,"GL")
^MDD(702.001,
"^DIC",702.001,702.001,"%",0)
^1.005^^
"^DIC",702.001,702.001,"%D",0)
^1.001^3^3^3080310^^
"^DIC",702.001,702.001,"%D",1,0)
This CP Transaction TIU History file stores all TIU notes
"^DIC",702.001,702.001,"%D",2,0)
that is associated with the CP Transaction study.  This will
"^DIC",702.001,702.001,"%D",3,0)
keep track of multiple notes associated with one CP study.
"^DIC",702.001,"B","CP_TRANSACTION_TIU_HISTORY",702.001)

"^DIC",702.09,702.09,0)
CP INSTRUMENT^702.09
"^DIC",702.09,702.09,0,"GL")
^MDS(702.09,
"^DIC",702.09,702.09,"%",0)
^1.005^^0
"^DIC",702.09,702.09,"%D",0)
^^2^2^3000725^^^
"^DIC",702.09,702.09,"%D",1,0)
This file contains the list of instruments used by the Clinical Procedures
"^DIC",702.09,702.09,"%D",2,0)
package.  This file is exported with data.
"^DIC",702.09,"B","CP INSTRUMENT",702.09)

"^DIC",704.201,704.201,0)
HEMODIALYSIS ACCESS POINTS^704.201
"^DIC",704.201,704.201,0,"GL")
^MDK(704.201,
"^DIC",704.201,704.201,"%",0)
^1.005^^0
"^DIC",704.201,704.201,"%D",0)
^^3^3^3050726^
"^DIC",704.201,704.201,"%D",1,0)
This file contains data describing a patients access point history for 
"^DIC",704.201,704.201,"%D",2,0)
dialysis treatments. All data is stored as XML documents in UUEncoded 
"^DIC",704.201,704.201,"%D",3,0)
format for VA Fileman compatibility.
"^DIC",704.201,"B","HEMODIALYSIS ACCESS POINTS",704.201)

"^DIC",704.202,704.202,0)
HEMODIALYSIS STUDY^704.202
"^DIC",704.202,704.202,0,"GL")
^MDK(704.202,
"^DIC",704.202,704.202,"%",0)
^1.005^^0
"^DIC",704.202,704.202,"%D",0)
^^3^3^3050726^
"^DIC",704.202,704.202,"%D",1,0)
This file contains data describing each patient procedure for
"^DIC",704.202,704.202,"%D",2,0)
dialysis treatments. All data is stored as XML documents in UUEncoded
"^DIC",704.202,704.202,"%D",3,0)
format for VA Fileman compatibility.
"^DIC",704.202,"B","HEMODIALYSIS STUDY",704.202)

"^DIC",704.209,704.209,0)
HEMODIALYSIS SETTINGS^704.209
"^DIC",704.209,704.209,0,"GL")
^MDK(704.209,
"^DIC",704.209,704.209,"%",0)
^1.005^^0
"^DIC",704.209,704.209,"%D",0)
^1.001^3^3^3060620^^^
"^DIC",704.209,704.209,"%D",1,0)
This file contains system and user level settings for the client 
"^DIC",704.209,704.209,"%D",2,0)
application. All data is stored as XML documents in UUEncoded
"^DIC",704.209,704.209,"%D",3,0)
format for VA Fileman compatibility.
"^DIC",704.209,"B","HEMODIALYSIS SETTINGS",704.209)

**END**
**END**
