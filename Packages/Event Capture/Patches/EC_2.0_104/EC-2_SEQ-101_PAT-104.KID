Released EC*2*104 SEQ #101
Extracted from mail message
**KIDS**:EC*2.0*104^

**INSTALL NAME**
EC*2.0*104
"BLD",7485,0)
EC*2.0*104^EVENT CAPTURE^0^3100427^y
"BLD",7485,4,0)
^9.64PA^^
"BLD",7485,6)
1^
"BLD",7485,6.3)
7
"BLD",7485,"ABPKG")
n
"BLD",7485,"KRN",0)
^9.67PA^779.2^20
"BLD",7485,"KRN",.4,0)
.4
"BLD",7485,"KRN",.4,"NM",0)
^9.68A^^
"BLD",7485,"KRN",.401,0)
.401
"BLD",7485,"KRN",.402,0)
.402
"BLD",7485,"KRN",.403,0)
.403
"BLD",7485,"KRN",.5,0)
.5
"BLD",7485,"KRN",.84,0)
.84
"BLD",7485,"KRN",3.6,0)
3.6
"BLD",7485,"KRN",3.8,0)
3.8
"BLD",7485,"KRN",9.2,0)
9.2
"BLD",7485,"KRN",9.8,0)
9.8
"BLD",7485,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7485,"KRN",9.8,"NM",1,0)
ECRDSSA^^0^B102481577
"BLD",7485,"KRN",9.8,"NM",2,0)
ECSUM2^^0^B8262843
"BLD",7485,"KRN",9.8,"NM",3,0)
ECUURPC^^0^B5650806
"BLD",7485,"KRN",9.8,"NM","B","ECRDSSA",1)

"BLD",7485,"KRN",9.8,"NM","B","ECSUM2",2)

"BLD",7485,"KRN",9.8,"NM","B","ECUURPC",3)

"BLD",7485,"KRN",19,0)
19
"BLD",7485,"KRN",19.1,0)
19.1
"BLD",7485,"KRN",101,0)
101
"BLD",7485,"KRN",409.61,0)
409.61
"BLD",7485,"KRN",771,0)
771
"BLD",7485,"KRN",779.2,0)
779.2
"BLD",7485,"KRN",870,0)
870
"BLD",7485,"KRN",8989.51,0)
8989.51
"BLD",7485,"KRN",8989.52,0)
8989.52
"BLD",7485,"KRN",8994,0)
8994
"BLD",7485,"KRN","B",.4,.4)

"BLD",7485,"KRN","B",.401,.401)

"BLD",7485,"KRN","B",.402,.402)

"BLD",7485,"KRN","B",.403,.403)

"BLD",7485,"KRN","B",.5,.5)

"BLD",7485,"KRN","B",.84,.84)

"BLD",7485,"KRN","B",3.6,3.6)

"BLD",7485,"KRN","B",3.8,3.8)

"BLD",7485,"KRN","B",9.2,9.2)

"BLD",7485,"KRN","B",9.8,9.8)

"BLD",7485,"KRN","B",19,19)

"BLD",7485,"KRN","B",19.1,19.1)

"BLD",7485,"KRN","B",101,101)

"BLD",7485,"KRN","B",409.61,409.61)

"BLD",7485,"KRN","B",771,771)

"BLD",7485,"KRN","B",779.2,779.2)

"BLD",7485,"KRN","B",870,870)

"BLD",7485,"KRN","B",8989.51,8989.51)

"BLD",7485,"KRN","B",8989.52,8989.52)

"BLD",7485,"KRN","B",8994,8994)

"BLD",7485,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7485,"QUES",0)
^9.62^^
"BLD",7485,"REQB",0)
^9.611^3^3
"BLD",7485,"REQB",1,0)
EC*2.0*23^2
"BLD",7485,"REQB",2,0)
EC*2.0*95^2
"BLD",7485,"REQB",3,0)
EC*2.0*76^2
"BLD",7485,"REQB","B","EC*2.0*23",1)

"BLD",7485,"REQB","B","EC*2.0*76",3)

"BLD",7485,"REQB","B","EC*2.0*95",2)

"MBREQ")
0
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
104^3100427^123456860
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECRDSSA")
0^1^B102481577^B100885193
"RTN","ECRDSSA",1,0)
ECRDSSA ;ALB/RPM - DSS Unit Activity Report ; 2 Sep 2008
"RTN","ECRDSSA",2,0)
 ;;2.0; EVENT CAPTURE ;**95,104**;8 May 96;Build 7
"RTN","ECRDSSA",3,0)
 ;
"RTN","ECRDSSA",4,0)
EN ;Get location(s), DSS Unit(s), sort type, start & end dates, device
"RTN","ECRDSSA",5,0)
 ;
"RTN","ECRDSSA",6,0)
 N ECLOC,ECDSSU,ECSRT,ECSTDT,ECENDDT
"RTN","ECRDSSA",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSA",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSA",9,0)
 I '$$ASKSRT(.ECSORT) G ENQ
"RTN","ECRDSSA",10,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSA",11,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSA",12,0)
 I $$ASKDEV D STRPT^ECRDSSA
"RTN","ECRDSSA",13,0)
ENQ Q
"RTN","ECRDSSA",14,0)
 ;
"RTN","ECRDSSA",15,0)
STRPT ;Main entry point
"RTN","ECRDSSA",16,0)
 N ECCRT  ;is CRT?
"RTN","ECRDSSA",17,0)
 N ECPAGE  ;page cnt
"RTN","ECRDSSA",18,0)
 S ECPAGE=0
"RTN","ECRDSSA",19,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSA",20,0)
 U IO
"RTN","ECRDSSA",21,0)
 K ^TMP("ECRPT",$J)
"RTN","ECRDSSA",22,0)
 D FNDREC(ECSORT)
"RTN","ECRDSSA",23,0)
 D PRINT(ECSORT)
"RTN","ECRDSSA",24,0)
 K ^TMP("ECRPT",$J)
"RTN","ECRDSSA",25,0)
 Q
"RTN","ECRDSSA",26,0)
 ;
"RTN","ECRDSSA",27,0)
FNDREC(ECSRT) ;Loop through "ADT" xref of EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",28,0)
 ;  Input:
"RTN","ECRDSSA",29,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",30,0)
 ;
"RTN","ECRDSSA",31,0)
 ;  Output: none
"RTN","ECRDSSA",32,0)
 ;
"RTN","ECRDSSA",33,0)
 N ECNT   ;record cnt
"RTN","ECRDSSA",34,0)
 N ECL     ;location cnt
"RTN","ECRDSSA",35,0)
 N ECD     ;DSS unit cnt
"RTN","ECRDSSA",36,0)
 N ECDFN   ;DFN
"RTN","ECRDSSA",37,0)
 N ECLOCF  ;Location IEN
"RTN","ECRDSSA",38,0)
 N ECDSSF  ;DSS unit IEN
"RTN","ECRDSSA",39,0)
 N ECDT    ;date index
"RTN","ECRDSSA",40,0)
 N ECREC   ;"0" node
"RTN","ECRDSSA",41,0)
 S ECNT=0
"RTN","ECRDSSA",42,0)
 ;
"RTN","ECRDSSA",43,0)
 S ECL=0
"RTN","ECRDSSA",44,0)
 F  S ECL=$O(ECLOC(ECL)) Q:'ECL  S ECLOCF=+$P(ECLOC(ECL),U) D
"RTN","ECRDSSA",45,0)
 . S ^TMP("ECRPT",$J,ECLOCF)=0  ;initialize location counter
"RTN","ECRDSSA",46,0)
 . S ECD=0
"RTN","ECRDSSA",47,0)
 . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",48,0)
 . . S ^TMP("ECRPT",$J,ECLOCF,ECDSSF)=0  ;initialize DSS Unit counter
"RTN","ECRDSSA",49,0)
 . S ECDFN=0
"RTN","ECRDSSA",50,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECLOCF,ECDFN)) Q:'ECDFN  D
"RTN","ECRDSSA",51,0)
 . . S ECD=0
"RTN","ECRDSSA",52,0)
 . . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",53,0)
 . . . S ECDT=ECSTDT
"RTN","ECRDSSA",54,0)
 . . . F  S ECDT=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT)) Q:'ECDT!(ECDT>ECENDDT)  D
"RTN","ECRDSSA",55,0)
 . . . . S ECIEN=0
"RTN","ECRDSSA",56,0)
 . . . . F  S ECIEN=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSA",57,0)
 . . . . . I $P($G(^ECH(ECIEN,0)),U,7)=ECDSSF D BLDTMP(ECIEN,ECSRT,.ECNT)
"RTN","ECRDSSA",58,0)
 Q
"RTN","ECRDSSA",59,0)
 ;
"RTN","ECRDSSA",60,0)
BLDTMP(ECIEN,ECSRT,ECCNT) ;add record to list
"RTN","ECRDSSA",61,0)
 ;  Input:
"RTN","ECRDSSA",62,0)
 ;    ECIEN - pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",63,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",64,0)
 ;    ECCNT - record counter
"RTN","ECRDSSA",65,0)
 ;
"RTN","ECRDSSA",66,0)
 ;  Output:
"RTN","ECRDSSA",67,0)
 ;    ^TMP("ECRPT",$J,location,DSS unit,sort key1,sort key2,count)
"RTN","ECRDSSA",68,0)
 ;
"RTN","ECRDSSA",69,0)
 N ECLOCA  ;location
"RTN","ECRDSSA",70,0)
 N ECDSS  ;DSS unit
"RTN","ECRDSSA",71,0)
 N ECIENS  ;IENS
"RTN","ECRDSSA",72,0)
 N ECKEY  ;sort key array
"RTN","ECRDSSA",73,0)
 N ECREC  ;record string
"RTN","ECRDSSA",74,0)
 N ECERR  ;FM error
"RTN","ECRDSSA",75,0)
 N ECDT  ;date
"RTN","ECRDSSA",76,0)
 I +$G(ECIEN)>0,$$GETKEYS(ECSRT,ECIEN,.ECKEY) D
"RTN","ECRDSSA",77,0)
 . S ECCNT=+$G(ECCNT)+1
"RTN","ECRDSSA",78,0)
 . S ECIENS=ECIEN_","
"RTN","ECRDSSA",79,0)
 . S ECREC=""
"RTN","ECRDSSA",80,0)
 . D GETS^DIQ(721,ECIENS,"1;2;3;6;8;9;10;20;29","IE","ECREC","ECERR")
"RTN","ECRDSSA",81,0)
 . S ECLOCA=+$G(ECREC(721,ECIENS,3,"I"))
"RTN","ECRDSSA",82,0)
 . S ECDSS=+$G(ECREC(721,ECIENS,6,"I"))
"RTN","ECRDSSA",83,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,1,"E")),1,30)_"^"  ;pt name
"RTN","ECRDSSA",84,0)
 . S ECREC=ECREC_$E($$GETSSN(ECIEN),1,10)_"^"              ;ssn
"RTN","ECRDSSA",85,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,29,"I")),1)_"^"    ;in/out
"RTN","ECRDSSA",86,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,2,"I")),1,13)_"^"  ;dt/tm
"RTN","ECRDSSA",87,0)
 . S ECDT=$P($G(ECREC(721,ECIENS,2,"I")),".",1)
"RTN","ECRDSSA",88,0)
 . S ECREC=ECREC_$E($$GETPROC($G(ECREC(721,ECIENS,8,"I"))),1,5)_"^"   ;proc code
"RTN","ECRDSSA",89,0)
 . S ECREC=ECREC_$E($$GETPRNM($G(ECREC(721,ECIENS,8,"I")),ECDT),1,10)_"^"  ;proc name
"RTN","ECRDSSA",90,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,9,"I")),1,2)_"^"   ;vol
"RTN","ECRDSSA",91,0)
 . S ECREC=ECREC_$E($$GETPROV(ECIEN),1,30)_"^"  ;provider
"RTN","ECRDSSA",92,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,20,"E")),1,7)      ;dx
"RTN","ECRDSSA",93,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS,ECKEY(1),ECKEY(2),ECNT)=ECREC
"RTN","ECRDSSA",94,0)
 . S ^TMP("ECRPT",$J,ECLOCA)=$G(^TMP("ECRPT",$J,ECLOCA))+1
"RTN","ECRDSSA",95,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS)=$G(^TMP("ECRPT",$J,ECLOCA,ECDSS))+1
"RTN","ECRDSSA",96,0)
 Q
"RTN","ECRDSSA",97,0)
 ;
"RTN","ECRDSSA",98,0)
PRINT(ECSRT) ;loop results array and format output
"RTN","ECRDSSA",99,0)
 ;  Input:
"RTN","ECRDSSA",100,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",101,0)
 ;
"RTN","ECRDSSA",102,0)
 ;  Output: none
"RTN","ECRDSSA",103,0)
 ;
"RTN","ECRDSSA",104,0)
 N ECCLOC  ;current location
"RTN","ECRDSSA",105,0)
 N ECPLOC  ;previous location
"RTN","ECRDSSA",106,0)
 N ECLOCNM  ;location name
"RTN","ECRDSSA",107,0)
 N ECCDSS  ;current DSS unit
"RTN","ECRDSSA",108,0)
 N ECPDSS  ;previous DSS unit
"RTN","ECRDSSA",109,0)
 N ECDSSNM  ;DSS unit name
"RTN","ECRDSSA",110,0)
 N ECCNT   ;record count
"RTN","ECRDSSA",111,0)
 N ECDAT   ;procedure date/time
"RTN","ECRDSSA",112,0)
 N ECRDT   ;run date
"RTN","ECRDSSA",113,0)
 N ECFDT   ;from date
"RTN","ECRDSSA",114,0)
 N ECTDT   ;to date
"RTN","ECRDSSA",115,0)
 N ECKEY1  ;sort key 1
"RTN","ECRDSSA",116,0)
 N ECKEY2  ;sort key 2
"RTN","ECRDSSA",117,0)
 N ECSRTBY  ;sort type text
"RTN","ECRDSSA",118,0)
 N ECQUIT  ;user quit indicator
"RTN","ECRDSSA",119,0)
 N ECREC   ;tmp record data
"RTN","ECRDSSA",120,0)
 I '$D(^TMP("ECRPT",$J)) G PRINTQ
"RTN","ECRDSSA",121,0)
 S ECRDT=$$FMTE^XLFDT($$NOW^XLFDT,"5DZ")
"RTN","ECRDSSA",122,0)
 S ECFDT=$$FMTE^XLFDT($P(ECSTDT+.0001,"."),"5DZ")
"RTN","ECRDSSA",123,0)
 S ECTDT=$$FMTE^XLFDT($P(ECENDDT,"."),"5DZ")
"RTN","ECRDSSA",124,0)
 S ECSRTBY=$S(ECSRT="P":"Patient Name",ECSRT="R":"Provider Name",ECSRT="S":"Patient SSN",1:"")
"RTN","ECRDSSA",125,0)
 S (ECCLOC,ECPLOC,ECQUIT)=0
"RTN","ECRDSSA",126,0)
 F  S ECCLOC=$O(^TMP("ECRPT",$J,ECCLOC)) Q:'ECCLOC!(ECQUIT)  D
"RTN","ECRDSSA",127,0)
 . I ECCLOC'=ECPLOC D  ;location changed
"RTN","ECRDSSA",128,0)
 . . S ECPLOC=ECCLOC
"RTN","ECRDSSA",129,0)
 . . S ECLOCNM=$$GETLOCN(ECCLOC,.ECLOC)
"RTN","ECRDSSA",130,0)
 . . I $O(^TMP("ECRPT",$J,ECCLOC,0))>0 D:ECPAGE>0 PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY)
"RTN","ECRDSSA",131,0)
 . I $G(^TMP("ECRPT",$J,ECCLOC))=0 D  Q
"RTN","ECRDSSA",132,0)
 . . W !!,"    ** No records found on Location that match selection criteria"
"RTN","ECRDSSA",133,0)
 . S (ECCDSS,ECPDSS)=0
"RTN","ECRDSSA",134,0)
 . F  S ECCDSS=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS)) Q:'ECCDSS!(ECQUIT)  D
"RTN","ECRDSSA",135,0)
 . . I ECCDSS'=ECPDSS D  Q:ECQUIT  ;dss unit changed
"RTN","ECRDSSA",136,0)
 . . . S ECPDSS=ECCDSS
"RTN","ECRDSSA",137,0)
 . . . S ECDSSNM=$$GETDSSN(ECCDSS,.ECDSSU)
"RTN","ECRDSSA",138,0)
 . . . I $Y>(IOSL-10) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY)
"RTN","ECRDSSA",139,0)
 . . . D DSSHDR(ECCDSS,ECDSSNM)
"RTN","ECRDSSA",140,0)
 . . I $G(^TMP("ECRPT",$J,ECCLOC,ECCDSS))=0 D  Q
"RTN","ECRDSSA",141,0)
 . . . W !,"** No records found on DSS Unit that match selection criteria"
"RTN","ECRDSSA",142,0)
 . . S ECKEY1=""
"RTN","ECRDSSA",143,0)
 . . F  S ECKEY1=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1)) Q:ECKEY1=""!(ECQUIT)  D
"RTN","ECRDSSA",144,0)
 . . . S ECKEY2=""
"RTN","ECRDSSA",145,0)
 . . . F  S ECKEY2=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2)) Q:ECKEY2=""!(ECQUIT)  D
"RTN","ECRDSSA",146,0)
 . . . . S ECCNT=0
"RTN","ECRDSSA",147,0)
 . . . . F  S ECCNT=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)) Q:'ECCNT!(ECQUIT)  D
"RTN","ECRDSSA",148,0)
 . . . . . I $Y>(IOSL-7) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY),DSSHDR(ECCDSS,ECDSSNM) W " (cont'd)"
"RTN","ECRDSSA",149,0)
 . . . . . S ECREC=^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)
"RTN","ECRDSSA",150,0)
 . . . . . W !,$P(ECREC,U,1)  ;name
"RTN","ECRDSSA",151,0)
 . . . . . W ?31,$P(ECREC,U,2)  ;ssn
"RTN","ECRDSSA",152,0)
 . . . . . W ?42,$P(ECREC,U,3)  ;inpt/outpt
"RTN","ECRDSSA",153,0)
 . . . . . S ECDAT=$$FMTE^XLFDT($P(ECREC,U,4),"2MZ")
"RTN","ECRDSSA",154,0)
 . . . . . W ?44,$P(ECDAT,":")_$P(ECDAT,":",2)  ;dt/tm
"RTN","ECRDSSA",155,0)
 . . . . . W ?58,$P(ECREC,U,5)  ;proc code
"RTN","ECRDSSA",156,0)
 . . . . . W ?64,$P(ECREC,U,6)  ;proc name
"RTN","ECRDSSA",157,0)
 . . .  .. W ?75,$P(ECREC,U,7)  ;vol
"RTN","ECRDSSA",158,0)
 . . . . . W ?78,$P(ECREC,U,8)  ;provider
"RTN","ECRDSSA",159,0)
 . . . . . W ?109,$P(ECREC,U,9)  ;dx
"RTN","ECRDSSA",160,0)
 I 'ECQUIT D PAUSE
"RTN","ECRDSSA",161,0)
PRINTQ Q
"RTN","ECRDSSA",162,0)
 ;
"RTN","ECRDSSA",163,0)
HDR(ECLOCN,ECRDT,ECFDT,ECTDT,ECSRT) ;Report header
"RTN","ECRDSSA",164,0)
 ;  Input:
"RTN","ECRDSSA",165,0)
 ;    ECLOCN - location name
"RTN","ECRDSSA",166,0)
 ;    ECRDT - run date
"RTN","ECRDSSA",167,0)
 ;    EDFDT - from date
"RTN","ECRDSSA",168,0)
 ;    EDTDT - to date
"RTN","ECRDSSA",169,0)
 ;    ECSRT - sort text
"RTN","ECRDSSA",170,0)
 ;
"RTN","ECRDSSA",171,0)
 ;  Output:  none
"RTN","ECRDSSA",172,0)
 ;
"RTN","ECRDSSA",173,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSA",174,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSA",175,0)
 W !,?11,"EVENT CAPTURE DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",176,0)
 W ?58,"Run Date: ",ECRDT
"RTN","ECRDSSA",177,0)
 W ?109,"Page: ",ECPAGE
"RTN","ECRDSSA",178,0)
 W !!,?13,"For Location ",ECLOCN
"RTN","ECRDSSA",179,0)
 W !,?13,"From "_ECFDT_" through "_ECTDT
"RTN","ECRDSSA",180,0)
 W !,?13,"Sorted by ",ECSRT
"RTN","ECRDSSA",181,0)
 W !!?4,"Patient",?31,"SSN",?40,"I/O",?45,"Date/Time",?58,"Proc",?64,"Procedure",?75,"Vol",?80,"Primary",?109,"Primary"
"RTN","ECRDSSA",182,0)
 W !?58,"Code",?64,"Name",?80,"Provider",?109,"Diagnosis"
"RTN","ECRDSSA",183,0)
 Q
"RTN","ECRDSSA",184,0)
 ;
"RTN","ECRDSSA",185,0)
DSSHDR(ECDSS,ECDSSNM) ;DSS header
"RTN","ECRDSSA",186,0)
 ;  Input:
"RTN","ECRDSSA",187,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",188,0)
 ;    ECDSSNM - DSS unit name
"RTN","ECRDSSA",189,0)
 ;
"RTN","ECRDSSA",190,0)
 ;  Output:  none
"RTN","ECRDSSA",191,0)
 ;
"RTN","ECRDSSA",192,0)
 W !!,"DSS Unit: ",ECDSSNM," (IEN #",ECDSS,")"
"RTN","ECRDSSA",193,0)
 Q
"RTN","ECRDSSA",194,0)
 ;
"RTN","ECRDSSA",195,0)
PAUSE ;page break
"RTN","ECRDSSA",196,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSA",197,0)
 D FOOTER
"RTN","ECRDSSA",198,0)
 Q:'ECCRT
"RTN","ECRDSSA",199,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-7)
"RTN","ECRDSSA",200,0)
 W !
"RTN","ECRDSSA",201,0)
 S DIR(0)="E"
"RTN","ECRDSSA",202,0)
 D ^DIR
"RTN","ECRDSSA",203,0)
 I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSA",204,0)
 Q
"RTN","ECRDSSA",205,0)
 ;
"RTN","ECRDSSA",206,0)
FOOTER ;page footer
"RTN","ECRDSSA",207,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECRDSSA",208,0)
 W !?4,"and/or a combination of these."
"RTN","ECRDSSA",209,0)
 Q
"RTN","ECRDSSA",210,0)
 ;
"RTN","ECRDSSA",211,0)
GETLOCN(ECLOCA,ECLOC) ;get location name
"RTN","ECRDSSA",212,0)
 ;  Input:
"RTN","ECRDSSA",213,0)
 ;    ECLOCA - location
"RTN","ECRDSSA",214,0)
 ;    ECLOC - array of selected locations
"RTN","ECRDSSA",215,0)
 ;
"RTN","ECRDSSA",216,0)
 ;  Output:
"RTN","ECRDSSA",217,0)
 ;   Function value - returns location name on success; "" on failure
"RTN","ECRDSSA",218,0)
 ;
"RTN","ECRDSSA",219,0)
 N ECI
"RTN","ECRDSSA",220,0)
 N ECLOCNM
"RTN","ECRDSSA",221,0)
 S ECLOCNM=""
"RTN","ECRDSSA",222,0)
 I +$G(ECLOCA)>0 D
"RTN","ECRDSSA",223,0)
 . S ECI=0
"RTN","ECRDSSA",224,0)
 . F  S ECI=$O(ECLOC(ECI)) Q:'ECI!(ECLOCNM'="")  D
"RTN","ECRDSSA",225,0)
 . . I $P(ECLOC(ECI),U)=ECLOCA S ECLOCNM=$P(ECLOC(ECI),U,2)
"RTN","ECRDSSA",226,0)
 Q ECLOCNM
"RTN","ECRDSSA",227,0)
 ;
"RTN","ECRDSSA",228,0)
GETDSSN(ECDSS,ECDSSU) ;-get DSS unit name
"RTN","ECRDSSA",229,0)
 ;  Input:
"RTN","ECRDSSA",230,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",231,0)
 ;    ECDSSU - array of selected DSS units
"RTN","ECRDSSA",232,0)
 ;
"RTN","ECRDSSA",233,0)
 ;  Output:
"RTN","ECRDSSA",234,0)
 ;   Function value - returns DSS unit name on success; "" on failure
"RTN","ECRDSSA",235,0)
 ;
"RTN","ECRDSSA",236,0)
 N ECI
"RTN","ECRDSSA",237,0)
 N ECDSSNM
"RTN","ECRDSSA",238,0)
 S ECDSSNM=""
"RTN","ECRDSSA",239,0)
 I +$G(ECDSS)>0 D
"RTN","ECRDSSA",240,0)
 . S ECI=0
"RTN","ECRDSSA",241,0)
 . F  S ECI=$O(ECDSSU(ECI)) Q:'ECI!(ECDSSNM'="")  D
"RTN","ECRDSSA",242,0)
 . . I $P(ECDSSU(ECI),U)=ECDSS S ECDSSNM=$P(ECDSSU(ECI),U,2)
"RTN","ECRDSSA",243,0)
 Q ECDSSNM
"RTN","ECRDSSA",244,0)
 ;
"RTN","ECRDSSA",245,0)
GETKEYS(ECSRT,ECIEN,ECKEYS) ;get sort keys based on sort type
"RTN","ECRDSSA",246,0)
 ;  Input:
"RTN","ECRDSSA",247,0)
 ;    ECSRT - (required) sort type indicator (P, S, R)
"RTN","ECRDSSA",248,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",249,0)
 ;    
"RTN","ECRDSSA",250,0)
 ;  Output:
"RTN","ECRDSSA",251,0)
 ;    ECKEYS - (pass by reference) array of sort keys
"RTN","ECRDSSA",252,0)
 ;    Function value - returns 1 on success;0 on failure
"RTN","ECRDSSA",253,0)
 ;
"RTN","ECRDSSA",254,0)
 N ECRSLT  ;function value
"RTN","ECRDSSA",255,0)
 S ECRSLT=0
"RTN","ECRDSSA",256,0)
 S (ECKEYS(1),ECKEYS(2))=""
"RTN","ECRDSSA",257,0)
 I $G(ECSRT)'="",+$G(ECIEN)>0 D
"RTN","ECRDSSA",258,0)
 . I ECSRT="P" D
"RTN","ECRDSSA",259,0)
 . . S ECKEYS(1)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",260,0)
 . . S ECKEYS(2)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",261,0)
 . I ECSRT="R" D
"RTN","ECRDSSA",262,0)
 . . S ECKEYS(1)=$$GETPROV(ECIEN)  ;provider
"RTN","ECRDSSA",263,0)
 . . I ECKEYS(1)="" S ECKEYS(1)=" "  ;missing provider sorts to top
"RTN","ECRDSSA",264,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",265,0)
 . I ECSRT="S" D
"RTN","ECRDSSA",266,0)
 . . S ECKEYS(1)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",267,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",268,0)
 . I ECKEYS(1)'="",ECKEYS(2)'="" S ECRSLT=1
"RTN","ECRDSSA",269,0)
 Q ECRSLT
"RTN","ECRDSSA",270,0)
 ;
"RTN","ECRDSSA",271,0)
GETSSN(ECIEN) ;get patient SSN
"RTN","ECRDSSA",272,0)
 ;  Input:
"RTN","ECRDSSA",273,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",274,0)
 ;    
"RTN","ECRDSSA",275,0)
 ;  Output:
"RTN","ECRDSSA",276,0)
 ;    Function value - returns patient's SSN on success; "" on failure
"RTN","ECRDSSA",277,0)
 ;
"RTN","ECRDSSA",278,0)
 N DFN,VADM,VAERR  ;VADPT variables
"RTN","ECRDSSA",279,0)
 I +$G(ECIEN)>0 D
"RTN","ECRDSSA",280,0)
 . S DFN=$$GET1^DIQ(721,ECIEN_",",1,"I")
"RTN","ECRDSSA",281,0)
 . D DEM^VADPT
"RTN","ECRDSSA",282,0)
 Q $P($G(VADM(2)),U)
"RTN","ECRDSSA",283,0)
 ;
"RTN","ECRDSSA",284,0)
GETPROV(ECIEN) ;get primary provider
"RTN","ECRDSSA",285,0)
 ;This function retrieves the primary provider for a given Event
"RTN","ECRDSSA",286,0)
 ;Capture record.  Searches the PROVIDER MULTIPLE (#42) field first
"RTN","ECRDSSA",287,0)
 ;and falls back to the PROVIDER (#10) field.
"RTN","ECRDSSA",288,0)
 ;  Input:
"RTN","ECRDSSA",289,0)
 ;    ECIEN -(required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",290,0)
 ;
"RTN","ECRDSSA",291,0)
 ;  Output:
"RTN","ECRDSSA",292,0)
 ;   Function value - returns provider's name on success; "" on failure
"RTN","ECRDSSA",293,0)
 ;
"RTN","ECRDSSA",294,0)
 N ECPROV  ;provider name
"RTN","ECRDSSA",295,0)
 S ECPROV=""
"RTN","ECRDSSA",296,0)
 I $G(ECIEN)'="",$D(^ECH(ECIEN)) D
"RTN","ECRDSSA",297,0)
 . ;try PROVIDER MULTIPLE
"RTN","ECRDSSA",298,0)
 . I '$$GETPPRV^ECPRVMUT(ECIEN,.ECPROV) D  ;api returns "0" on success
"RTN","ECRDSSA",299,0)
 . . S ECPROV=$P(ECPROV,U,2)
"RTN","ECRDSSA",300,0)
 . E  D  ;try PROVIDER
"RTN","ECRDSSA",301,0)
 . . S ECPROV=$$GET1^DIQ(721,ECIEN_",",10)
"RTN","ECRDSSA",302,0)
 Q ECPROV
"RTN","ECRDSSA",303,0)
 ;
"RTN","ECRDSSA",304,0)
GETPRNM(ECVIEN,ECDT) ;get procedure name
"RTN","ECRDSSA",305,0)
 ;  Input:
"RTN","ECRDSSA",306,0)
 ;    ECVIEN - variable pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",307,0)
 ;    
"RTN","ECRDSSA",308,0)
 ;  Output:
"RTN","ECRDSSA",309,0)
 ;    Function value - returns procedure name on success; "" on failure
"RTN","ECRDSSA",310,0)
 ;
"RTN","ECRDSSA",311,0)
 N ECIEN   ;IEN part of variable pointer
"RTN","ECRDSSA",312,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",313,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",314,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",315,0)
 Q $S(ECFILE["ICPT(":$P($$CPT^ICPTCOD(ECIEN,ECDT),U,3),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",.01),1:"")
"RTN","ECRDSSA",316,0)
 ;
"RTN","ECRDSSA",317,0)
GETPROC(ECVIEN) ;get procedure code
"RTN","ECRDSSA",318,0)
 ;  Input:
"RTN","ECRDSSA",319,0)
 ;    ECVIEN - varialbe pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",320,0)
 ;
"RTN","ECRDSSA",321,0)
 ;  Output:
"RTN","ECRDSSA",322,0)
 ;   Function value - returns procedure code on success; "" on failure
"RTN","ECRDSSA",323,0)
 ;
"RTN","ECRDSSA",324,0)
 N ECIEN  ;IEN part of variable pointer
"RTN","ECRDSSA",325,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",326,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",327,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",328,0)
 Q $S(ECFILE["ICPT(":$$GET1^DIQ(81,ECIEN_",",.01),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",1),1:"")
"RTN","ECRDSSA",329,0)
 ;
"RTN","ECRDSSA",330,0)
ASKSRT(ECTYP) ;Ask report sort type
"RTN","ECRDSSA",331,0)
 ;  Input:  none
"RTN","ECRDSSA",332,0)
 ;  
"RTN","ECRDSSA",333,0)
 ;  Output:
"RTN","ECRDSSA",334,0)
 ;    ECTYP - (pass by reference) Sort type
"RTN","ECRDSSA",335,0)
 ;            (P: Patient Name,S: SSN,R: Provider Name)
"RTN","ECRDSSA",336,0)
 ;    Function value - returns 1 on success; 0 on failure
"RTN","ECRDSSA",337,0)
 ;
"RTN","ECRDSSA",338,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y  ;^DIR variables
"RTN","ECRDSSA",339,0)
 S DIR(0)="SA^P:PATIENT NAME;S:SSN;R:PROVIDER NAME"
"RTN","ECRDSSA",340,0)
 S DIR("A")="Sort within each DSS Unit by: "
"RTN","ECRDSSA",341,0)
 S DIR("B")="SSN"
"RTN","ECRDSSA",342,0)
 D ^DIR
"RTN","ECRDSSA",343,0)
 S ECTYP=$P(Y,U)
"RTN","ECRDSSA",344,0)
 Q $S($D(DUOUT):0,$D(DTOUT):0,$D(DIROUT):0,1:1)
"RTN","ECRDSSA",345,0)
 ;
"RTN","ECRDSSA",346,0)
ASKDEV() ;Ask output device
"RTN","ECRDSSA",347,0)
 ;  Input:  none
"RTN","ECRDSSA",348,0)
 ;
"RTN","ECRDSSA",349,0)
 ; Output:  1 if report is printed
"RTN","ECRDSSA",350,0)
 ;          0 if report is queued (or exited)
"RTN","ECRDSSA",351,0)
 ;
"RTN","ECRDSSA",352,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSA",353,0)
 S ECX=1
"RTN","ECRDSSA",354,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSA",355,0)
 D ^%ZIS
"RTN","ECRDSSA",356,0)
 S:POP ECX=0
"RTN","ECRDSSA",357,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSA",358,0)
 . S ZTRTN="STRPT^ECRDSSA",ZTDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",359,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSRT"))=""
"RTN","ECRDSSA",360,0)
 . S (ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSA",361,0)
 . D ^%ZTLOAD
"RTN","ECRDSSA",362,0)
 . D HOME^%ZIS
"RTN","ECRDSSA",363,0)
 . S ECX=0
"RTN","ECRDSSA",364,0)
 Q ECX
"RTN","ECSUM2")
0^2^B8262843^B7805386
"RTN","ECSUM2",1,0)
ECSUM2 ;BIR/JLP,RHK-Category and Procedure Summary  (cont'd) ;20 Mar 96
"RTN","ECSUM2",2,0)
 ;;2.0; EVENT CAPTURE ;**4,19,23,104**;8 May 96;Build 7
"RTN","ECSUM2",3,0)
 ;Prints Categories and Procedures for a DSS Unit
"RTN","ECSUM2",4,0)
START S ECPG=1,ECMORE=0 D HEADER I ECC="ALL" D CATS G END
"RTN","ECSUM2",5,0)
 I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECSUM2",6,0)
CAT ;
"RTN","ECSUM2",7,0)
 W !!,?3,"Category:  "_ECCN D:$Y+4>IOSL PAGE,HEADER:ECPG Q:ECOUT  D PROC
"RTN","ECSUM2",8,0)
END S ECPG=1
"RTN","ECSUM2",9,0)
 Q
"RTN","ECSUM2",10,0)
SETC ;set cats
"RTN","ECSUM2",11,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSUM2",12,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSUM2",13,0)
 S ECMORE=1
"RTN","ECSUM2",14,0)
 Q
"RTN","ECSUM2",15,0)
HEADER ;
"RTN","ECSUM2",16,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF S ECPG=ECPG+1
"RTN","ECSUM2",17,0)
 W !!,?25,"CATEGORY AND PROCEDURE SUMMARY",!,?25,"Run Date : ",ECRDT W !,?25,"LOCATION:  "_ECLN,!,?25,"SERVICE:   "_ECSN,!,?25,"DSS UNIT:  "_ECDN,! F I=1:1:80 W "-"
"RTN","ECSUM2",18,0)
 I $D(ECCN) D MORE
"RTN","ECSUM2",19,0)
 Q
"RTN","ECSUM2",20,0)
CATS ;
"RTN","ECSUM2",21,0)
 S ECC="" F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D SETC W !!,?3,"Category:  "_ECCN D:$Y+4>IOSL PAGE,HEADER:ECPG Q:ECOUT  D PROC
"RTN","ECSUM2",22,0)
 S ECMORE=0
"RTN","ECSUM2",23,0)
 Q
"RTN","ECSUM2",24,0)
PROC ;
"RTN","ECSUM2",25,0)
 S ECP="" F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSUM2",26,0)
 S ECMORE=0
"RTN","ECSUM2",27,0)
 Q
"RTN","ECSUM2",28,0)
SETP ;set procs
"RTN","ECSUM2",29,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECSUM2",30,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),EC4=+$P($G(^("PRO")),"^",4)
"RTN","ECSUM2",31,0)
 S EC2="" I EC4 S EC2=$S($P($G(^SC(EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC")
"RTN","ECSUM2",32,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECSUM2",33,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN",NATN="UNKNOWN"
"RTN","ECSUM2",34,0)
 I ECFILE=81 S ECPN=$P($$CPT^ICPTCOD(+ECP),"^",3),ECPN=$S(ECPN]"":ECPN,1:"UNKNOWN"),X=$P($$CPT^ICPTCOD(+ECP),"^",2),NATN=$S(X["NO SUCH ENTRY":"NOT LISTED",X="":"NOT LISTED",1:X)
"RTN","ECSUM2",35,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),NATN=$S($P($G(^EC(725,+ECP,0)),"^",2)]"":$P(^(0),"^",2),1:"NOT LISTED")
"RTN","ECSUM2",36,0)
 S ECPN=$S(ECPSYN]"":ECPSYN,1:ECPN)
"RTN","ECSUM2",37,0)
 W !,?3,"Procedure: ",$E(ECPN,1,30),"   (",$S(ECFILE=81:"CPT",1:"EC"),")",?52,"Nat'l No.: ",NATN
"RTN","ECSUM2",38,0)
 W:EC2]"" !,?14,"(Clinic: "_EC2_")"
"RTN","ECSUM2",39,0)
 I $P($G(^ECJ(+ECPSY,0)),"^",2) W ?70,"*INACTIVE*"
"RTN","ECSUM2",40,0)
 D:$Y+3>IOSL PAGE,HEADER:ECPG Q:ECOUT
"RTN","ECSUM2",41,0)
 Q
"RTN","ECSUM2",42,0)
PAGE ;
"RTN","ECSUM2",43,0)
 N SS,JJ
"RTN","ECSUM2",44,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSUM2",45,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSUM2",46,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSUM2",47,0)
 Q
"RTN","ECSUM2",48,0)
MORE I ECMORE W !!,?3,"Category:  "_ECCN
"RTN","ECSUM2",49,0)
 Q
"RTN","ECUURPC")
0^3^B5650806^B5658914
"RTN","ECUURPC",1,0)
ECUURPC ;ALB/JAM - Event Capture Data Entry Broker Utilities ; 5 May 2008
"RTN","ECUURPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,42,49,94,95,76,104**;8 May 96;Build 7
"RTN","ECUURPC",3,0)
 ;
"RTN","ECUURPC",4,0)
ECHELP(RESULTS,ECARY) ;
"RTN","ECUURPC",5,0)
 ;
"RTN","ECUURPC",6,0)
 ;Broker call returns the entries from HELP FILE #9.2
"RTN","ECUURPC",7,0)
 ;        RPC: EC GETSCNHELP
"RTN","ECUURPC",8,0)
 ;INPUTS   ECARY - Contains the following elements
"RTN","ECUURPC",9,0)
 ;          HLPDA  - Help Frame Name
"RTN","ECUURPC",10,0)
 ;
"RTN","ECUURPC",11,0)
 ;OUTPUTS  RESULTS - Array of help text in the HELP FRAM File (#9.2)
"RTN","ECUURPC",12,0)
 ;
"RTN","ECUURPC",13,0)
 N HLPDA,DIC,X,Y
"RTN","ECUURPC",14,0)
 S HLPDA=$G(ECARY) I HLPDA="" Q
"RTN","ECUURPC",15,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECHELP")
"RTN","ECUURPC",16,0)
 S DIC="^DIC(9.2,",DIC(0)="MN",X=HLPDA
"RTN","ECUURPC",17,0)
 D ^DIC M ^TMP($J,"ECHELP")=^DIC(9.2,+Y,1)
"RTN","ECUURPC",18,0)
 I $D(^TMP($J,"ECHELP")) D
"RTN","ECUURPC",19,0)
 . S $P(^TMP($J,"ECHELP",0),U)=$P(^DIC(9.2,+Y,0),U,2)
"RTN","ECUURPC",20,0)
 S RESULTS=$NA(^TMP($J,"ECHELP"))
"RTN","ECUURPC",21,0)
 Q
"RTN","ECUURPC",22,0)
FNDIEN(RESULTS,ECARY) ;find IEN
"RTN","ECUURPC",23,0)
 ;Broker call returns the IEN from a file
"RTN","ECUURPC",24,0)
 ;        RPC: EC GETIEN
"RTN","ECUURPC",25,0)
 ;INPUTS   ECARY - Contains the following data elements
"RTN","ECUURPC",26,0)
 ;          FIL  - File number
"RTN","ECUURPC",27,0)
 ;          TXT  - .01 description
"RTN","ECUURPC",28,0)
 ;
"RTN","ECUURPC",29,0)
 ;OUTPUTS  RESULTS - File IEN
"RTN","ECUURPC",30,0)
 ;
"RTN","ECUURPC",31,0)
 N TXT,FIL,DIC,X,Y
"RTN","ECUURPC",32,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",33,0)
 S FIL=$P(ECARY,U),TXT=$P(ECARY,U,2) I TXT=""!(FIL="") Q
"RTN","ECUURPC",34,0)
 S DIC=FIL,DIC(0)="MN",X=TXT
"RTN","ECUURPC",35,0)
 I FIL=81.3 S DIC("S")="I +$P($$MOD^ICPTMOD(Y,""I""),U,7)=1"
"RTN","ECUURPC",36,0)
 D ^DIC I Y=-1 Q
"RTN","ECUURPC",37,0)
 S RESULTS=+Y
"RTN","ECUURPC",38,0)
 Q
"RTN","ECUURPC",39,0)
ECDATE(RESULTS,ECARY) ;
"RTN","ECUURPC",40,0)
 ;
"RTN","ECUURPC",41,0)
 ;Broker call returns an Fileman internal date
"RTN","ECUURPC",42,0)
 ;        RPC: EC GETDATE
"RTN","ECUURPC",43,0)
 ;INPUTS   ECARY - Contains the following elements
"RTN","ECUURPC",44,0)
 ;          DTSTR  - Date String
"RTN","ECUURPC",45,0)
 ;          FLG    - Date Flag (optional)
"RTN","ECUURPC",46,0)
 ;
"RTN","ECUURPC",47,0)
 ;OUTPUTS  RESULTS - A valid Fileman date format^External format
"RTN","ECUURPC",48,0)
 ;
"RTN","ECUURPC",49,0)
 N ECDTSTR,DIC,X,Y,DTSTR,FLG
"RTN","ECUURPC",50,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",51,0)
 S DTSTR=$P(ECARY,U),FLG=$P(ECARY,U,2) I DTSTR="" Q
"RTN","ECUURPC",52,0)
 S X=DTSTR,%DT="XT"_$S(FLG="R":"R",1:""),%DT(0)="-NOW" D ^%DT
"RTN","ECUURPC",53,0)
 I +Y<1 S RESULTS="0^Invalid Date/Time" Q
"RTN","ECUURPC",54,0)
 S RESULTS=Y D D^DIQ
"RTN","ECUURPC",55,0)
 S RESULTS=RESULTS_U_Y
"RTN","ECUURPC",56,0)
 Q
"RTN","ECUURPC",57,0)
PATCH(RESULTS,ECARY)    ;
"RTN","ECUURPC",58,0)
 ;
"RTN","ECUURPC",59,0)
 ;Broker call returns 1 if patch X is installed
"RTN","ECUURPC",60,0)
 ;        RPC: EC GETPATCH
"RTN","ECUURPC",61,0)
 ;INPUTS   ECARY - contains the patch number
"RTN","ECUURPC",62,0)
 ;
"RTN","ECUURPC",63,0)
 ;OUTPUTS  RESULTS 1 OR 0
"RTN","ECUURPC",64,0)
 ;
"RTN","ECUURPC",65,0)
 I ECARY="" Q
"RTN","ECUURPC",66,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",67,0)
 S RESULTS=$$PATCH^XPDUTL(ECARY)
"RTN","ECUURPC",68,0)
 Q
"RTN","ECUURPC",69,0)
VERSRV(RESULTS,ECARY,VERSION)   ; Return server version of option name and 
"RTN","ECUURPC",70,0)
 ; minimum GUI client version.
"RTN","ECUURPC",71,0)
 ;
"RTN","ECUURPC",72,0)
 ;Server/client version consist of 4 pieces, namely
"RTN","ECUURPC",73,0)
 ;    major version.minor version.release.build  (ex. 2.0.10.1)
"RTN","ECUURPC",74,0)
 ;
"RTN","ECUURPC",75,0)
 ;Broker call returns server version of option name
"RTN","ECUURPC",76,0)
 ;        RPC: EC GETVERSION
"RTN","ECUURPC",77,0)
 ;INPUTS   ECARY - contains the option name
"RTN","ECUURPC",78,0)
 ;         VERSION - EC GUI client version ;stay in partition for session
"RTN","ECUURPC",79,0)
 ;
"RTN","ECUURPC",80,0)
 ;OUTPUTS  RESULTS version number OR null ("")
"RTN","ECUURPC",81,0)
 ;           current server version^minimum client version
"RTN","ECUURPC",82,0)
 ;
"RTN","ECUURPC",83,0)
 S ECCLVER=$G(VERSION)
"RTN","ECUURPC",84,0)
 I $G(ECARY)="" Q
"RTN","ECUURPC",85,0)
 N ECLST,ECMINV
"RTN","ECUURPC",86,0)
 S ECMINV="2.1.2.1"  ;Minimum version of EC GUI client
"RTN","ECUURPC",87,0)
 D FIND^DIC(19,"",1,"X",ECARY,1,,,,"ECLST")
"RTN","ECUURPC",88,0)
 I 'ECLST("DILIST",0) S RESULTS="" Q
"RTN","ECUURPC",89,0)
 S RESULTS=ECLST("DILIST","ID",1,1)
"RTN","ECUURPC",90,0)
 S RESULTS=$P(RESULTS,"version ",2)_U_ECMINV
"RTN","ECUURPC",91,0)
 Q
"VER")
8.0^22.0
"BLD",7485,6)
^101
**END**
**END**
