Released EC*2*76 SEQ #94
Extracted from mail message
**KIDS**:EC*2.0*76^

**INSTALL NAME**
EC*2.0*76
"BLD",7790,0)
EC*2.0*76^EVENT CAPTURE^0^3090603^y
"BLD",7790,4,0)
^9.64PA^721^1
"BLD",7790,4,721,0)
721
"BLD",7790,4,721,2,0)
^9.641^721^1
"BLD",7790,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",7790,4,721,2,721,1,0)
^9.6411^23^3
"BLD",7790,4,721,2,721,1,23,0)
SOUTHWEST ASIA CONDITIONS
"BLD",7790,4,721,2,721,1,30,0)
PCE DATA FEED
"BLD",7790,4,721,2,721,1,41,0)
PROJECT 112/SHAD
"BLD",7790,4,721,222)
y^y^p^^^^n
"BLD",7790,4,"APDD",721,721)

"BLD",7790,4,"APDD",721,721,23)

"BLD",7790,4,"APDD",721,721,30)

"BLD",7790,4,"APDD",721,721,41)

"BLD",7790,4,"B",721,721)

"BLD",7790,6)
4^
"BLD",7790,6.3)
6
"BLD",7790,"ABPKG")
n
"BLD",7790,"KRN",0)
^9.67PA^8989.52^20
"BLD",7790,"KRN",.4,0)
.4
"BLD",7790,"KRN",.4,"NM",0)
^9.68A^^
"BLD",7790,"KRN",.401,0)
.401
"BLD",7790,"KRN",.401,"NM",0)
^9.68A^^
"BLD",7790,"KRN",.402,0)
.402
"BLD",7790,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",7790,"KRN",.402,"NM",1,0)
EC CREATE PATIENT ENTRY    FILE #721^721^0
"BLD",7790,"KRN",.402,"NM",2,0)
EC FILE PCE NODE    FILE #721^721^0
"BLD",7790,"KRN",.402,"NM","B","EC CREATE PATIENT ENTRY    FILE #721",1)

"BLD",7790,"KRN",.402,"NM","B","EC FILE PCE NODE    FILE #721",2)

"BLD",7790,"KRN",.403,0)
.403
"BLD",7790,"KRN",.403,"NM",0)
^9.68A^^
"BLD",7790,"KRN",.5,0)
.5
"BLD",7790,"KRN",.5,"NM",0)
^9.68A^^
"BLD",7790,"KRN",.84,0)
.84
"BLD",7790,"KRN",.84,"NM",0)
^9.68A^^
"BLD",7790,"KRN",3.6,0)
3.6
"BLD",7790,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",7790,"KRN",3.8,0)
3.8
"BLD",7790,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",7790,"KRN",9.2,0)
9.2
"BLD",7790,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",7790,"KRN",9.8,0)
9.8
"BLD",7790,"KRN",9.8,"NM",0)
^9.68A^17^17
"BLD",7790,"KRN",9.8,"NM",1,0)
ECUTL1^^0^B28929596
"BLD",7790,"KRN",9.8,"NM",2,0)
ECBEN1B^^0^B23478465
"BLD",7790,"KRN",9.8,"NM",3,0)
ECPCEU^^0^B30381231
"BLD",7790,"KRN",9.8,"NM",4,0)
ECBEPF^^0^B9044874
"BLD",7790,"KRN",9.8,"NM",5,0)
ECBENF^^0^B10312825
"BLD",7790,"KRN",9.8,"NM",6,0)
ECBEP1B^^0^B43605970
"BLD",7790,"KRN",9.8,"NM",7,0)
ECBEP2A^^0^B31376195
"BLD",7790,"KRN",9.8,"NM",8,0)
ECMLMF^^0^B32626051
"BLD",7790,"KRN",9.8,"NM",9,0)
ECMLMN^^0^B56476624
"BLD",7790,"KRN",9.8,"NM",10,0)
ECKILL^^0^B12278874
"BLD",7790,"KRN",9.8,"NM",11,0)
ECBEN2U^^0^B35228325
"BLD",7790,"KRN",9.8,"NM",12,0)
ECMUTL1^^0^B56415782
"BLD",7790,"KRN",9.8,"NM",13,0)
ECBEN^^0^B13752313
"BLD",7790,"KRN",9.8,"NM",14,0)
ECBEP^^0^B14053056
"BLD",7790,"KRN",9.8,"NM",15,0)
ECUERPC1^^0^B53314567
"BLD",7790,"KRN",9.8,"NM",16,0)
ECEFPAT^^0^B57831365
"BLD",7790,"KRN",9.8,"NM",17,0)
ECUURPC^^0^B5658914
"BLD",7790,"KRN",9.8,"NM","B","ECBEN",13)

"BLD",7790,"KRN",9.8,"NM","B","ECBEN1B",2)

"BLD",7790,"KRN",9.8,"NM","B","ECBEN2U",11)

"BLD",7790,"KRN",9.8,"NM","B","ECBENF",5)

"BLD",7790,"KRN",9.8,"NM","B","ECBEP",14)

"BLD",7790,"KRN",9.8,"NM","B","ECBEP1B",6)

"BLD",7790,"KRN",9.8,"NM","B","ECBEP2A",7)

"BLD",7790,"KRN",9.8,"NM","B","ECBEPF",4)

"BLD",7790,"KRN",9.8,"NM","B","ECEFPAT",16)

"BLD",7790,"KRN",9.8,"NM","B","ECKILL",10)

"BLD",7790,"KRN",9.8,"NM","B","ECMLMF",8)

"BLD",7790,"KRN",9.8,"NM","B","ECMLMN",9)

"BLD",7790,"KRN",9.8,"NM","B","ECMUTL1",12)

"BLD",7790,"KRN",9.8,"NM","B","ECPCEU",3)

"BLD",7790,"KRN",9.8,"NM","B","ECUERPC1",15)

"BLD",7790,"KRN",9.8,"NM","B","ECUTL1",1)

"BLD",7790,"KRN",9.8,"NM","B","ECUURPC",17)

"BLD",7790,"KRN",19,0)
19
"BLD",7790,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",7790,"KRN",19,"NM",1,0)
EC GUI CONTEXT^^0
"BLD",7790,"KRN",19,"NM","B","EC GUI CONTEXT",1)

"BLD",7790,"KRN",19.1,0)
19.1
"BLD",7790,"KRN",101,0)
101
"BLD",7790,"KRN",409.61,0)
409.61
"BLD",7790,"KRN",771,0)
771
"BLD",7790,"KRN",869.2,0)
869.2
"BLD",7790,"KRN",870,0)
870
"BLD",7790,"KRN",8989.51,0)
8989.51
"BLD",7790,"KRN",8989.52,0)
8989.52
"BLD",7790,"KRN",8994,0)
8994
"BLD",7790,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",7790,"KRN","B",.4,.4)

"BLD",7790,"KRN","B",.401,.401)

"BLD",7790,"KRN","B",.402,.402)

"BLD",7790,"KRN","B",.403,.403)

"BLD",7790,"KRN","B",.5,.5)

"BLD",7790,"KRN","B",.84,.84)

"BLD",7790,"KRN","B",3.6,3.6)

"BLD",7790,"KRN","B",3.8,3.8)

"BLD",7790,"KRN","B",9.2,9.2)

"BLD",7790,"KRN","B",9.8,9.8)

"BLD",7790,"KRN","B",19,19)

"BLD",7790,"KRN","B",19.1,19.1)

"BLD",7790,"KRN","B",101,101)

"BLD",7790,"KRN","B",409.61,409.61)

"BLD",7790,"KRN","B",771,771)

"BLD",7790,"KRN","B",869.2,869.2)

"BLD",7790,"KRN","B",870,870)

"BLD",7790,"KRN","B",8989.51,8989.51)

"BLD",7790,"KRN","B",8989.52,8989.52)

"BLD",7790,"KRN","B",8994,8994)

"BLD",7790,"QUES",0)
^9.62^^
"BLD",7790,"REQB",0)
^9.611^3^3
"BLD",7790,"REQB",1,0)
EC*2.0*72^2
"BLD",7790,"REQB",2,0)
EC*2.0*95^2
"BLD",7790,"REQB",3,0)
SD*5.3*441^2
"BLD",7790,"REQB","B","EC*2.0*72",1)

"BLD",7790,"REQB","B","EC*2.0*95",2)

"BLD",7790,"REQB","B","SD*5.3*441",3)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721A
"FIA",721,0,1)
y^y^p^^^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,23)

"FIA",721,721,30)

"FIA",721,721,41)

"KRN",.402,2186,-1)
0^1
"KRN",.402,2186,0)
EC CREATE PATIENT ENTRY^3050713.0822^^721^^^3031120
"KRN",.402,2186,"DR",1,721)
1////^S X=$G(ECPTR("DFN"));2////^S X=$G(ECPRR("PROCDT"));3////^S X=$G(ECL);4////^S X=$P($G(^ECD(+$P($G(ECDSSU),"^"),0)),"^",2);5////^S X=$P($G(^ECD(+$P($G(ECDSSU),"^"),0)),"^",3);6////^S X=$P($G(ECDSSU),"^");
"KRN",.402,2186,"DR",1,721,1)
7////^S X=+$P($G(ECCAT),"^");8////^S X=$G(ECPRR("PROC"));9////^S X=$G(ECPRR("VOL"));10////^S X=$P($G(ECU(1)),"^");11////^S X=$G(ECPTR("ORDSEC"));13////^S X=$G(DUZ);15////^S X=$P($G(ECU(2)),"^");17////^S X=$P($G(ECU(3)),"^");
"KRN",.402,2186,"DR",1,721,2)
19////^S X=$G(ECPRR("PCEPR"));20////^S X=$G(ECPTR("DX"));21////^S X=$G(ECPTR("AO"));22////^S X=$G(ECPTR("IR"));23////^S X=$G(ECPTR("ENV"));24////^S X=$G(ECPTR("SC"));35////^S X=$G(ECPTR("MST"));39////^S X=$G(ECPTR("HNC"));
"KRN",.402,2186,"DR",1,721,3)
40////^S X=$G(ECPTR("CV"));41////^S X=$G(ECPTR("SHAD"));26////^S X=$G(ECPTR("CLIN"));27////^S X=$P($G(^SC(+$G(ECPTR("CLIN")),0)),"^",7);29////^S X=$G(ECPTR("IO"));34////^S X=$G(ECPRR("REAS"));
"KRN",.402,2186,"ROU")
^ECMXP
"KRN",.402,2186,"ROUOLD")
ECMXP
"KRN",.402,2187,-1)
0^2
"KRN",.402,2187,0)
EC FILE PCE NODE^3050713.0818^^721^^^3031120
"KRN",.402,2187,"DR",1,721)
30////^S X=ECPRR("PROCDT")_"~"_ECPTR("DFN")_"~"_ECPTR("CLIN")_"~"_ECL_"~"_ECDSS_"~"_+ECU(1)_"~"_$P($G(ECU(2)),"^")_"~"_$P($G(ECU(3)),"^")_"~"_ECPRR("VOL")_"~"_ECPRR("PCEPR")_"~"_ECPTR("DX");
"KRN",.402,2187,"DR",1,721,1)
30////^S X=X_"~"_ECAO_"~"_ECIR_"~"_ECEV_"~"_ECSC_"~"_$S(ECNPP]"":ECNPP,1:"")_"~"_ECELIG_"~"_ECMST_"~"_ECHNC_"~"_ECCV_"~"_ECSHAD;37////^S X=ECMODS;
"KRN",.402,2187,"ROU")
^ECMXPC
"KRN",.402,2187,"ROUOLD")
ECMXPC
"KRN",19,11187,-1)
0^1
"KRN",19,11187,0)
EC GUI CONTEXT^EC GUI Context version 2.1.2.1^^B^^^^^^^^EVENT CAPTURE
"KRN",19,11187,1,0)
^19.06^1^1^3060501^^^^
"KRN",19,11187,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,11187,99)
58583,58456
"KRN",19,11187,99.1)
58981,55862
"KRN",19,11187,"RPC",0)
^19.05P^53^53
"KRN",19,11187,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,11187,"RPC",2,0)
EC FILER
"KRN",19,11187,"RPC",3,0)
EC GETBATPROCS
"KRN",19,11187,"RPC",4,0)
EC GETCAT
"KRN",19,11187,"RPC",5,0)
EC GETCPTLST
"KRN",19,11187,"RPC",6,0)
EC GETDSSECS
"KRN",19,11187,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,11187,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,11187,"RPC",9,0)
EC GETECLOC
"KRN",19,11187,"RPC",10,0)
EC GETECSCATS
"KRN",19,11187,"RPC",11,0)
EC GETECSCREEN
"KRN",19,11187,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,11187,"RPC",13,0)
EC GETECSPROCS
"KRN",19,11187,"RPC",14,0)
EC GETENCDXS
"KRN",19,11187,"RPC",15,0)
EC GETIEN
"KRN",19,11187,"RPC",16,0)
EC GETLIST
"KRN",19,11187,"RPC",17,0)
EC GETLOC
"KRN",19,11187,"RPC",18,0)
EC GETNATPX
"KRN",19,11187,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,11187,"RPC",20,0)
EC GETPATELIG
"KRN",19,11187,"RPC",21,0)
EC GETPATINFO
"KRN",19,11187,"RPC",22,0)
EC GETPATPROCS
"KRN",19,11187,"RPC",23,0)
EC GETPRODEFS
"KRN",19,11187,"RPC",24,0)
EC GETPROVIDER
"KRN",19,11187,"RPC",25,0)
EC GETPXLST
"KRN",19,11187,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,11187,"RPC",27,0)
EC GETPXREASON
"KRN",19,11187,"RPC",28,0)
EC GETSCNHELP
"KRN",19,11187,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,11187,"RPC",30,0)
EC REPORTS
"KRN",19,11187,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,11187,"RPC",32,0)
ORWU USERINFO
"KRN",19,11187,"RPC",33,0)
ORWU HASKEY
"KRN",19,11187,"RPC",34,0)
ORWU DEVICE
"KRN",19,11187,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,11187,"RPC",36,0)
ORWU NEWPERS
"KRN",19,11187,"RPC",37,0)
DDR GET DD HELP
"KRN",19,11187,"RPC",38,0)
DDR FINDER
"KRN",19,11187,"RPC",39,0)
DDR FIND1
"KRN",19,11187,"RPC",40,0)
DDR LISTER
"KRN",19,11187,"RPC",41,0)
EC GETDATE
"KRN",19,11187,"RPC",42,0)
EC CLASHELP
"KRN",19,11187,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,11187,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,11187,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11187,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11187,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,11187,"RPC",48,0)
EC SPACEBAR
"KRN",19,11187,"RPC",49,0)
EC DIEDON
"KRN",19,11187,"RPC",50,0)
EC GETPATCH
"KRN",19,11187,"RPC",51,0)
EC GETVISITINFO
"KRN",19,11187,"RPC",52,0)
EC GETVERSION
"KRN",19,11187,"RPC",53,0)
ORWU DT
"KRN",19,11187,"U")
EC GUI CONTEXT VERSION 2.1.2.1
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
76^3090603^100884
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
17
"RTN","ECBEN")
0^13^B13752313^B13713868
"RTN","ECBEN",1,0)
ECBEN ;BIR/MAM,JPW-New Batch Entry ;12 Feb 96
"RTN","ECBEN",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,17,42,54,76**;8 May 96;Build 6
"RTN","ECBEN",3,0)
 S ECOUT=0
"RTN","ECBEN",4,0)
LOCA ; get location
"RTN","ECBEN",5,0)
 D ^ECL K LOC I '$D(ECL) G END
"RTN","ECBEN",6,0)
UNIT ; get DSS unit
"RTN","ECBEN",7,0)
 I $D(^XUSEC("ECALLU",DUZ)) K DIC S DIC=724,DIC("A")="Select DSS Unit:  ",DIC(0)="QEAMZ",DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))" D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2),NODE=Y(0) D SETU G:'$D(ECD) UNIT D ^ECBEN1A G CHK
"RTN","ECBEN",8,0)
 S (X,CNT)=0 F  S X=$O(^VA(200,DUZ,"EC",X)) Q:'X  S CNT=CNT+1,UNIT=$P(^VA(200,DUZ,"EC",X,0),"^"),UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECBEN",9,0)
 I '$D(UNIT(1)) W !!,"You do not have access to any DSS Units.  Contact your Event Capture",!,"Package Coordinator if you are responsible for entering procedures for ",!,"a DSS Unit. ",!!,"Press <RET> to continue  " R X:DTIME G END
"RTN","ECBEN",10,0)
 I '$D(UNIT(2)) S ECD=+$P(UNIT(1),"^"),ECDN=$P(^ECD(ECD,0),"^"),NODE=$G(^ECD(ECD,0)) D SETU G:'$D(ECD) UNIT D ^ECBEN1A G CHK
"RTN","ECBEN",11,0)
SELU S X=0 W @IOF,!,"DSS Units: ",! F  S X=$O(UNIT(X)) Q:'X  W !,X_".",?5,$P(UNIT(X),"^",2)
"RTN","ECBEN",12,0)
 W !!,"Select Number: " R X:DTIME S:"^"[X ECOUT=1 I '$T!("^"[X) G END
"RTN","ECBEN",13,0)
 I '$D(UNIT(X)) W !!,"Select the number that corresponds with the DSS unit for which you would like",!,"to enter procedures.",!!,"Press <RET> to continue  " R X:DTIME G SELU
"RTN","ECBEN",14,0)
 S ECD=+$P(UNIT(X),"^"),ECDN=$P(UNIT(X),"^",2),NODE=$G(^ECD(ECD,0)) D SETU G:'$D(ECD) UNIT D ^ECBEN1A
"RTN","ECBEN",15,0)
CHK ;check to ask unit again
"RTN","ECBEN",16,0)
 I ECOUT=2 D  S ECOUT=0 G UNIT
"RTN","ECBEN",17,0)
 .K EC4,ECC,ECCN,ECD,ECDDT,ECDT,ECDN,ECM,ECMN,ECO,ECON,ECP,ECPN,ECPROS
"RTN","ECBEN",18,0)
 .K ECS,ECSN,ECTWO,ECU,ECU2,ECU3,ECUN,ECUN2,ECUN3,ECUC,ECUC2,ECUC3,ECV
"RTN","ECBEN",19,0)
 .K ECYN,ECYNZ,NATN,NODE,SYN,^TMP("ECPRO",$J),ECAO,ECIR,ECSC,ECCPT,ECDX
"RTN","ECBEN",20,0)
 .K ECDXN,ECINP,ECVST,ECZEC,ECID,ECPTSTAT,ECMST,ECHNC,ECCV,ECSHAD
"RTN","ECBEN",21,0)
END D ^ECKILL K ^TMP("ECLKUP",$J),^TMP("ECPRO",$J) W @IOF
"RTN","ECBEN",22,0)
 Q
"RTN","ECBEN",23,0)
SETU ;set DSS Unit info
"RTN","ECBEN",24,0)
 S MSG1=0
"RTN","ECBEN",25,0)
 I '$D(NODE) D MSG K ECD,ECDN,NODE S ECOUT=0 Q
"RTN","ECBEN",26,0)
 I $P(NODE,"^",8)'=1 S MSG1=3 D MSG K ECD,ECDN,NODE S (ECOUT,MSG1)=0 Q
"RTN","ECBEN",27,0)
 I $P(NODE,"^",6) S MSG1=2 D MSG K ECD,ECDN,NODE S (ECOUT,MSG1)=0 Q
"RTN","ECBEN",28,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECBEN",29,0)
 I $O(^ECJ("AP",ECL,ECD,""))']"" S MSG1=1 D MSG K ECC,ECCN,ECD,ECDDT,ECDN,ECM,ECMN,ECPCL,ECS,ECSN,ECYN,NODE,^TMP("ECPRO",$J) S (ECOUT,MSG1)=0 Q
"RTN","ECBEN",30,0)
 S ECS=+$P(NODE,"^",2),ECM=+$P(NODE,"^",3),ECDDT=$P(NODE,"^",12),ECDDT=$S(ECDDT="T":"NOW",ECDDT="N":"NOW",1:"")
"RTN","ECBEN",31,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECBEN",32,0)
 S ECYNZ=+$P(NODE,"^",11)
"RTN","ECBEN",33,0)
 Q
"RTN","ECBEN",34,0)
MSG ;unit msg
"RTN","ECBEN",35,0)
 W !!,"The DSS Unit ",ECDN," that you selected within ",ECLN
"RTN","ECBEN",36,0)
 W !,$S(MSG1=3:"is not defined for Event Capture use",MSG1=2:"is inactive",MSG1=1:"has no procedures defined",1:"is missing information"),"."
"RTN","ECBEN",37,0)
 W "  Please select another DSS Unit."
"RTN","ECBEN",38,0)
 W !!,"Press <RET> to continue " R X:DTIME
"RTN","ECBEN",39,0)
 Q
"RTN","ECBEN1B")
0^2^B23478465^B23165731
"RTN","ECBEN1B",1,0)
ECBEN1B ;BIR/MAM,JPW-Batch Enter Procedures (cont'd) ;1 May 96
"RTN","ECBEN1B",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,13,17,23,41,42,50,54,72,76**;8 May 96;Build 6
"RTN","ECBEN1B",3,0)
EN ;entry pt
"RTN","ECBEN1B",4,0)
 D HDR
"RTN","ECBEN1B",5,0)
 S CNT=0
"RTN","ECBEN1B",6,0)
PATS ; get patients
"RTN","ECBEN1B",7,0)
 W ! Q:ECOUT=1  K ECADD
"RTN","ECBEN1B",8,0)
 K DIC,DUOUT S DIC=2,DIC(0)="QEAMZ",DIC("A")=$S($D(ECPT):"Select Next Patient: ",1:"Select Patient: ")
"RTN","ECBEN1B",9,0)
 D ^DIC K DIC S OK=0
"RTN","ECBEN1B",10,0)
 I $D(DUOUT)!($D(DTOUT)) S ECOUT=1 Q
"RTN","ECBEN1B",11,0)
 I Y<0,CNT=0 S ECOUT=2 Q
"RTN","ECBEN1B",12,0)
 I Y<0 D  G PATS
"RTN","ECBEN1B",13,0)
 .D LIST Q:ECOUT=1  Q:'$O(ECPT(0))  Q:$G(ECADD)="A"
"RTN","ECBEN1B",14,0)
 .S ECTWO=0 K ECHOICE D ^ECBEN2A
"RTN","ECBEN1B",15,0)
 .I ECOUT=2 D KILL,HDR
"RTN","ECBEN1B",16,0)
 I $O(ECPT(0)) S JJ="" F  S JJ=$O(ECPT(JJ)) Q:'JJ!(OK=1)  I +$G(ECPT(JJ))=+Y S OK=1 W !!,"Patient already selected.  Please select another patient.",!
"RTN","ECBEN1B",17,0)
 I OK=1 G PATS
"RTN","ECBEN1B",18,0)
 N YY,ECUP D  I $G(ECUP)="^" G PATS
"RTN","ECBEN1B",19,0)
 . S YY=Y,DFN=+Y D 2^VADPT S Y=YY I +VADM(6) D
"RTN","ECBEN1B",20,0)
 . . ; NOIS MWV-0603-21781:line below changed by VMP.
"RTN","ECBEN1B",21,0)
 . . W !!,"WARNING "_"[PATIENT DIED ON "_$P(VADM(6),U,2)_"] ",!!
"RTN","ECBEN1B",22,0)
 . . R "Press Return to Continue or ^ to Deselect: ",ECUP:DTIME
"RTN","ECBEN1B",23,0)
 S CNT=CNT+1,CNT1=CNT,ECPT(CNT)=+Y_"^"_$P(Y,"^",2) D DIAG
"RTN","ECBEN1B",24,0)
 G PATS
"RTN","ECBEN1B",25,0)
 ;
"RTN","ECBEN1B",26,0)
LIST ; list patients
"RTN","ECBEN1B",27,0)
 K ECADD
"RTN","ECBEN1B",28,0)
 W @IOF,!,"Patients Selected for Batch Entry: ",! F I=0:0 S I=$O(ECPT(I)) Q:'I  W:I#2 ! W:I#2=0 ?40 W I_".  "_$P(ECPT(I),"^",2)
"RTN","ECBEN1B",29,0)
 W !!,"Is this list correct ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1 Q
"RTN","ECBEN1B",30,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y" I "YyNn"'[ECYN W !!,"Enter <RET> if this list is complete, or NO to add or delete",!,"patients on the list.",!!,"Press <RET> to continue  " R X:DTIME G LIST
"RTN","ECBEN1B",31,0)
 I "Yy"[ECYN Q:$O(ECPT(0))  D NOBODY Q:ECOUT
"RTN","ECBEN1B",32,0)
ADD W !!,"Add or Delete Patients ?  ADD//  " R ECADD:DTIME I '$T!(ECADD="^") S ECOUT=1 Q
"RTN","ECBEN1B",33,0)
 S ECADD=$E(ECADD) S:ECADD="" ECADD="A" I "AaDd"'[ECADD W !!,"Enter <RET> to make additions to the list, or ""D"" to delete a ",!,"patient from the list." G ADD
"RTN","ECBEN1B",34,0)
 I "Aa"[ECADD Q
"RTN","ECBEN1B",35,0)
DEL ; delete patients from list
"RTN","ECBEN1B",36,0)
 I '$D(ECPT(1)) D NOBODY Q:ECOUT  G LIST
"RTN","ECBEN1B",37,0)
 W !!,"Select Number:  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEN1B",38,0)
 I X="" Q
"RTN","ECBEN1B",39,0)
 I '$D(ECPT(X)) W !!,"Select the number corresponding to the patient that you would like",!,"to remove from the list.",!!,"Press <RET> to continue  " R X:DTIME S ECMORE=1 D LIST Q:ECOUT  G DEL
"RTN","ECBEN1B",40,0)
 F I=X+1:1:CNT S ECPT(I-1)=ECPT(I)
"RTN","ECBEN1B",41,0)
 K ECPT(CNT),I S CNT=CNT-1
"RTN","ECBEN1B",42,0)
 W !!,"Patient deleted.",!!,"Press <RET> to continue " R X:DTIME
"RTN","ECBEN1B",43,0)
 G LIST
"RTN","ECBEN1B",44,0)
 Q
"RTN","ECBEN1B",45,0)
HDR ;
"RTN","ECBEN1B",46,0)
 W @IOF,!,"Location: "_ECLN
"RTN","ECBEN1B",47,0)
 W !,"DSS Unit: "_ECDN
"RTN","ECBEN1B",48,0)
 W !,"Ordering Section: ",ECON
"RTN","ECBEN1B",49,0)
 W !,"Procedure Date: ",ECDATE,!
"RTN","ECBEN1B",50,0)
 D DSP1416^ECPRVMUT(.ECPRVARY)
"RTN","ECBEN1B",51,0)
 W !
"RTN","ECBEN1B",52,0)
 Q
"RTN","ECBEN1B",53,0)
 ;
"RTN","ECBEN1B",54,0)
NOBODY ;No patients selected
"RTN","ECBEN1B",55,0)
 I $D(ECADD),ECADD="D" W !!,"You cannot delete patients when your patient list is empty."
"RTN","ECBEN1B",56,0)
 I $G(ECADD)'="D" W !!,"You have selected no patients."
"RTN","ECBEN1B",57,0)
 R !!,"Do you wish to quit?  Y//",X:DTIME S X=$E(X) I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEN1B",58,0)
 S:X="" X="Y" I "yY"[X S ECOUT=1 Q
"RTN","ECBEN1B",59,0)
 I "nN"'[X W !,"Answer N to continue selection, or enter return to quit",! G NOBODY
"RTN","ECBEN1B",60,0)
 Q
"RTN","ECBEN1B",61,0)
 ;
"RTN","ECBEN1B",62,0)
ADCAT ;add category/procedures for patients
"RTN","ECBEN1B",63,0)
 D ^ECBEN2A I ECOUT=1 Q
"RTN","ECBEN1B",64,0)
 Q
"RTN","ECBEN1B",65,0)
KILL ;kill arrays
"RTN","ECBEN1B",66,0)
 K ECA,ECHOICE,ECJLP,ECPT,ECC,ECCN,ECP,ECPN,ECV,NATN,NODE,SYN,SYS,VOL
"RTN","ECBEN1B",67,0)
 K ^TMP("ECPRO",$J),ECDX,ECDXN,ECINP,ECVST,ECSC,ECAO,ECIR,ECZEC,EC4,EC4N
"RTN","ECBEN1B",68,0)
 K ECID,ECMST,ECDXS,ECDXIEN,ECHNC,ECCV,ECSHAD
"RTN","ECBEN1B",69,0)
 S ECOUT=0
"RTN","ECBEN1B",70,0)
 Q
"RTN","ECBEN1B",71,0)
DIAG ;ask dx, etc. questions
"RTN","ECBEN1B",72,0)
 S (ECDX,ECDXN,ECINP,ECVST,ECSC,ECAO,ECIR,ECZEC,ECMST,ECHNC,ECCV)=""
"RTN","ECBEN1B",73,0)
 S ECDFN=$P(ECPT(CNT),U),ECSHAD=""
"RTN","ECBEN1B",74,0)
 ;- Determine inpatient/outpatient status
"RTN","ECBEN1B",75,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECPT(CNT)),+$G(ECDT))
"RTN","ECBEN1B",76,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECBEN1B",77,0)
 ;- Determine patient eligibility
"RTN","ECBEN1B",78,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D
"RTN","ECBEN1B",79,0)
 . I $$MULTELG^ECUTL0(+$G(ECPT(CNT))) S ECELIG=+$$ELGLST^ECUTL0
"RTN","ECBEN1B",80,0)
 . E  S ECELIG=+$G(VAEL(1))
"RTN","ECBEN1B",81,0)
 K VAEL
"RTN","ECBEN1B",82,0)
 D DSPSTAT^ECUTL0(ECPTSTAT)
"RTN","ECBEN1B",83,0)
 I '$D(EC4) S EC4="",EC4N="NO ASSOCIATED CLINIC"
"RTN","ECBEN1B",84,0)
 I '$D(ECID) S ECID=""
"RTN","ECBEN1B",85,0)
 I $P(ECPCE,"~",2)="N" G SETDX
"RTN","ECBEN1B",86,0)
 D PCEQST^ECBEN2U
"RTN","ECBEN1B",87,0)
 I ECOUT D DELPT(.CNT) Q
"RTN","ECBEN1B",88,0)
SETDX ;set dx, etc. in pat array
"RTN","ECBEN1B",89,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC"),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEN1B",90,0)
 S ECPT(CNT)=ECPT(CNT)_"^"_ECDX_"^"_$S(ECINP="":$G(ECPTSTAT),1:ECINP)_"^"_ECVST_"^"_ECSC_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_EC4_"^"_ECID_"^"_ECMST_"^"_ECHNC_"^"_ECCV_"^"_ECSHAD
"RTN","ECBEN1B",91,0)
 I $D(ECDXS) M ECPT(CNT,"DXS")=ECDXS K ECDXS
"RTN","ECBEN1B",92,0)
 Q
"RTN","ECBEN1B",93,0)
 ;
"RTN","ECBEN1B",94,0)
DELPT(CNT) ;deselect patient due to missing required data
"RTN","ECBEN1B",95,0)
 N DIR,Y
"RTN","ECBEN1B",96,0)
 K ECPT(CNT) S CNT=CNT-1
"RTN","ECBEN1B",97,0)
 W !,"Required data missing.",!,"Patient deselected...",!
"RTN","ECBEN1B",98,0)
 S ECOUT=0
"RTN","ECBEN1B",99,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue"
"RTN","ECBEN1B",100,0)
 D ^DIR
"RTN","ECBEN1B",101,0)
 W !
"RTN","ECBEN1B",102,0)
 Q
"RTN","ECBEN2U")
0^11^B35228325^B34259052
"RTN","ECBEN2U",1,0)
ECBEN2U ;BIR/MAM,JPW-Categories and Procedures Selection ;12 Feb 96
"RTN","ECBEN2U",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,7,10,17,18,23,42,47,54,72,95,76**;8 May 96;Build 6
"RTN","ECBEN2U",3,0)
END Q
"RTN","ECBEN2U",4,0)
HDR ;screen header
"RTN","ECBEN2U",5,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEN2U",6,0)
 W !,"DSS Unit: ",$E(ECDN,1,30) I $G(ECCN)]"" W ?48,"Category: ",$E(ECCN,1,20)
"RTN","ECBEN2U",7,0)
 W !,"Ordering Section: ",ECON
"RTN","ECBEN2U",8,0)
 W !,"Procedure Date: ",ECDATE,!
"RTN","ECBEN2U",9,0)
 D DSP1416^ECPRVMUT(.ECPRVARY)
"RTN","ECBEN2U",10,0)
 W !
"RTN","ECBEN2U",11,0)
 Q
"RTN","ECBEN2U",12,0)
MSG W !!,"No procedures entered.  No Action Taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECBEN2U",13,0)
 Q
"RTN","ECBEN2U",14,0)
MSG1 ;
"RTN","ECBEN2U",15,0)
 W !!,"Please enter the number that corresponds to the "_$S(OK:"procedure",1:"category")_" from which",!,"you would like to select a procedure.  If you would like to continue",!,"with the list, press <RET>.  Enter ^ to quit."
"RTN","ECBEN2U",16,0)
 S CNT=CNT-5
"RTN","ECBEN2U",17,0)
 Q
"RTN","ECBEN2U",18,0)
HDRP ;hdr batch by proc
"RTN","ECBEN2U",19,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEN2U",20,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEN2U",21,0)
 W !,"Procedure Date: ",ECDATE
"RTN","ECBEN2U",22,0)
 D DSP1442^ECPRVMUT(.ECPRVARY)
"RTN","ECBEN2U",23,0)
 W !
"RTN","ECBEN2U",24,0)
 Q
"RTN","ECBEN2U",25,0)
PCEQST ;entry pt for PCE questions
"RTN","ECBEN2U",26,0)
 S (ECDX,ECDXN,ECVST,ECSC,ECAO,ECIR,ECZEC,ECMST,ECHNC,ECCV,ECSHAD)=""
"RTN","ECBEN2U",27,0)
INP ;- Set inpatient/outpatient status
"RTN","ECBEN2U",28,0)
 S ECINP=$G(ECPTSTAT)
"RTN","ECBEN2U",29,0)
 D CLINIC I ECOUT Q
"RTN","ECBEN2U",30,0)
 ;ask dx
"RTN","ECBEN2U",31,0)
 D DIAG^ECUTL2 I ECOUT Q
"RTN","ECBEN2U",32,0)
 I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",33,0)
 D VISIT
"RTN","ECBEN2U",34,0)
 Q
"RTN","ECBEN2U",35,0)
CLINIC ;display default clinic
"RTN","ECBEN2U",36,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",37,0)
 K DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT S DIR(0)="721,26",DIR("A")="Associated Clinic",DIR("?")="An active clinic is required. Enter an active clinic or an ^ to exit"
"RTN","ECBEN2U",38,0)
 I EC4,EC4N'["NO ASSOCIATED CLINIC" S DIR("B")=EC4N
"RTN","ECBEN2U",39,0)
 D ^DIR K DIR
"RTN","ECBEN2U",40,0)
 I Y S EC4=+Y,ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEN2U",41,0)
 I $D(DTOUT)!$D(DUOUT) S ECOUT=1 Q
"RTN","ECBEN2U",42,0)
 I +EC4,'$G(ECOUT) D CLIN I 'ECPCL W !!,"You must enter an active clinic now.",! G CLINIC
"RTN","ECBEN2U",43,0)
 I $D(DTOUT)!$D(DUOUT)!('Y)!(Y<0) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without an active clinic.",!!
"RTN","ECBEN2U",44,0)
 Q
"RTN","ECBEN2U",45,0)
VISIT ;ask visit info
"RTN","ECBEN2U",46,0)
 Q:ECINP="I"
"RTN","ECBEN2U",47,0)
 ;
"RTN","ECBEN2U",48,0)
 ;- Ask classification questions applicable to patient and file in #721
"RTN","ECBEN2U",49,0)
 I $$ASKCLASS^ECUTL1(+$G(ECPT(CNT)),.ECCLFLDS,.ECOUT,ECPCE,ECINP),($O(ECCLFLDS(""))]"") D SETCLASS^ECUTL1(.ECCLFLDS)
"RTN","ECBEN2U",50,0)
 I +$G(ECOUT) Q
"RTN","ECBEN2U",51,0)
 K ECCLFLDS
"RTN","ECBEN2U",52,0)
 Q
"RTN","ECBEN2U",53,0)
PCEE ;checks edited data and sets PCE node for filing
"RTN","ECBEN2U",54,0)
 S ECVST=+$P(EC(0),"^",21) I 'ECVST G PCE
"RTN","ECBEN2U",55,0)
DEL ;delete visit and refresh data to PCE
"RTN","ECBEN2U",56,0)
 K DA,DIE,DR S DA=ECFN,DIE=721,DR="25///@;28///@" D ^DIE K DA,DIE,DR
"RTN","ECBEN2U",57,0)
 ;
"RTN","ECBEN2U",58,0)
 ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECBEN2U",59,0)
 N ECVAR1,EC2PCE S ECVAR1=$$FNDVST^ECUTL(ECVST,ECFN,.EC2PCE) K ECVAR1
"RTN","ECBEN2U",60,0)
 ;
"RTN","ECBEN2U",61,0)
 ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECBEN2U",62,0)
 N ECPKG,ECSOU
"RTN","ECBEN2U",63,0)
 S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECSOU="EVENT CAPTURE DATA"
"RTN","ECBEN2U",64,0)
 S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST,ECPKG,ECSOU) K ECVST,VALQUIET
"RTN","ECBEN2U",65,0)
 ;- Resend to PCE task
"RTN","ECBEN2U",66,0)
 D PCETASK^ECPCEU(.EC2PCE) K EC2PCE
"RTN","ECBEN2U",67,0)
PCE ;set data for PCE filing
"RTN","ECBEN2U",68,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",69,0)
 S ECREAS=""
"RTN","ECBEN2U",70,0)
 ;
"RTN","ECBEN2U",71,0)
 ;- Kill Reason node
"RTN","ECBEN2U",72,0)
 D KILLR
"RTN","ECBEN2U",73,0)
 I EC4 D CLIN^ECPCEU
"RTN","ECBEN2U",74,0)
 I 'EC4 S ECREAS="Clinic missing;"
"RTN","ECBEN2U",75,0)
 I 'ECDX S ECREAS="Diagnosis not entered;"
"RTN","ECBEN2U",76,0)
 I EC4,'ECPCL S ECREAS=ECREAS_"Clinic inactive;"
"RTN","ECBEN2U",77,0)
 I 'ECCPT S ECREAS=ECREAS_"CPT code missing;"
"RTN","ECBEN2U",78,0)
 I ECREAS]"" S ^ECH(ECFN,"R")=ECREAS K ECPCL,ECREAS Q
"RTN","ECBEN2U",79,0)
 I '$D(^ECH(ECFN,0)) Q
"RTN","ECBEN2U",80,0)
 I '$D(^ECH(ECFN,"P")) Q
"RTN","ECBEN2U",81,0)
 S PN=^ECH(ECFN,0),PNP=^ECH(ECFN,"P")
"RTN","ECBEN2U",82,0)
 S PNMOD="" I $D(^ECH(ECFN,"MOD")) D
"RTN","ECBEN2U",83,0)
 . N MOD,MODS S MODS=0 F  S MODS=$O(^ECH(ECFN,"MOD",MODS)) Q:'MODS  D
"RTN","ECBEN2U",84,0)
 . . S MOD=$P($G(^ECH(ECFN,"MOD",MODS,0)),U)
"RTN","ECBEN2U",85,0)
 . . S MOD=$$MOD^ICPTMOD(MOD,"I",$P(PN,U,3)) I +MOD<0 Q
"RTN","ECBEN2U",86,0)
 . . S PNMOD=$S(PNMOD'="":PNMOD_";",1:"")_$P(MOD,U,2)
"RTN","ECBEN2U",87,0)
SET ;set data pieces
"RTN","ECBEN2U",88,0)
 S ECP3=+$P(PN,"^",3) I ECP3'["." K ECP3 D DELNOD Q
"RTN","ECBEN2U",89,0)
 S ECP2=+$P(PN,"^",2) I 'ECP2 K ECP2 D DELNOD Q
"RTN","ECBEN2U",90,0)
 S ECP19=+$P(PN,"^",19) I 'ECP19 K ECP19 D DELNOD Q
"RTN","ECBEN2U",91,0)
 S ECP4=+$P(PN,"^",4) I 'ECP4 K ECP4 D DELNOD Q
"RTN","ECBEN2U",92,0)
 S ECP20=+$P(PN,"^",20) I 'ECP20 K ECP20 D DELNOD Q
"RTN","ECBEN2U",93,0)
 S ECP10=+$P(PN,"^",10) I 'ECP10 K ECP10 D DELNOD Q
"RTN","ECBEN2U",94,0)
 S ECPP1=+$P(PNP,"^") I 'ECPP1 K ECPP1 D DELNOD Q
"RTN","ECBEN2U",95,0)
 S ECPP2=+$P(PNP,"^",2) I 'ECPP2 K ECPP2 D DELNOD Q
"RTN","ECBEN2U",96,0)
 S ECPP3=$P(PNP,"^",3),ECPP3=$S(ECPP3="Y":1,ECPP3="N":0,1:"")
"RTN","ECBEN2U",97,0)
 S ECPP4=$P(PNP,"^",4),ECPP4=$S(ECPP4="Y":1,ECPP4="N":0,1:"")
"RTN","ECBEN2U",98,0)
 S ECPP5=$P(PNP,"^",5),ECPP5=$S(ECPP5="Y":1,ECPP5="N":0,1:"")
"RTN","ECBEN2U",99,0)
 S ECPP6=$P(PNP,"^",6),ECPP6=$S(ECPP6="Y":1,ECPP6="N":0,1:"")
"RTN","ECBEN2U",100,0)
 S ECPP9=$P(PNP,"^",9),ECPP9=$S(ECPP9="Y":1,ECPP9="N":0,1:"")
"RTN","ECBEN2U",101,0)
 S ECPP10=$P(PNP,"^",10),ECPP10=$S(ECPP10="Y":1,ECPP10="N":0,1:"")
"RTN","ECBEN2U",102,0)
 S ECPP11=$P(PNP,"^",11),ECPP11=$S(ECPP11="Y":1,ECPP11="N":0,1:"")
"RTN","ECBEN2U",103,0)
 S ECPP12=$P(PNP,"^",12),ECPP12=$S(ECPP12="Y":1,ECPP12="N":0,1:"")
"RTN","ECBEN2U",104,0)
 S ECPP1A="" I $P(PN,"^",9)["EC" S ECPP1A=$G(^EC(725,+$P(PN,"^",9),0)),ECPP1A=$P(ECPP1A,"^",2)_"  "_$P(ECPP1A,"^")
"RTN","ECBEN2U",105,0)
 S ECELIG=$S($G(ECELIG):ECELIG,1:"")
"RTN","ECBEN2U",106,0)
NODE ;sets "PCE" node
"RTN","ECBEN2U",107,0)
 ;d/t~dfn~hosp loc~inst~dss id~*prov(not filled)~*prov2*~prov3~vol~cpt~dx~ao~rad~env~sc~ecs nat # & name~eligibility~mst~hnc~cv~proj112/shad
"RTN","ECBEN2U",108,0)
 S PNODE=ECP3_"~"_ECP2_"~"_ECP19_"~"_ECP4_"~"_ECP20_"~~~~"_ECP10_"~"_ECPP1_"~"_ECPP2_"~"_ECPP3_"~"_ECPP4_"~"_ECPP5_"~"_ECPP6_"~"_ECPP1A_"~"_ECELIG_"~"_ECPP9_"~"_ECPP10_"~"_ECPP11_"~"_ECPP12
"RTN","ECBEN2U",109,0)
 S ^ECH(ECFN,"PCE")=PNODE
"RTN","ECBEN2U",110,0)
 ;set "PCE1" node
"RTN","ECBEN2U",111,0)
 ;CPT modifier1;CPT modifier 2;CPT modifier 3;...CPT modifier n
"RTN","ECBEN2U",112,0)
 I PNMOD'="" S ^ECH(ECFN,"PCE1")=PNMOD
"RTN","ECBEN2U",113,0)
 ;Replace set of SEND TO PCE w/direct task call - patch 95
"RTN","ECBEN2U",114,0)
 ;S DA=ECFN,DIE=721,DR="31////"_ECDT D ^DIE K DA,DIE,DR
"RTN","ECBEN2U",115,0)
 S EC2PCE(ECDT,ECFN)=""
"RTN","ECBEN2U",116,0)
 D PCETASK^ECPCEU(.EC2PCE) K EC2PCE  ;send to PCE task
"RTN","ECBEN2U",117,0)
 K ECP2,ECP3,ECP4,ECP10,ECP19,ECP20,ECPP1,ECPP1A,ECPP2,ECPP3,ECPP4,ECPP5,ECPP6,ECPP9,ECPP10,ECPP11,ECPP12,ECREAS,ECPCL,PN,PNP,PNODE,ECELIG,PNMOD
"RTN","ECBEN2U",118,0)
 Q
"RTN","ECBEN2U",119,0)
CLIN ;check for active associated clinic
"RTN","ECBEN2U",120,0)
 S MSG1=1,MSG2=0
"RTN","ECBEN2U",121,0)
 D CLIN^ECPCEU
"RTN","ECBEN2U",122,0)
 I 'ECPCL D
"RTN","ECBEN2U",123,0)
 .W !!,"The clinic ",$S(MSG1:"associated with",1:"you selected for")," this procedure ",$S(MSG2:"has not been entered",1:"is inactive"),"."
"RTN","ECBEN2U",124,0)
 .W !,"Workload data cannot be sent to PCE for this procedure with ",!,$S(MSG2:"a missing",1:"an inactive")," clinic."
"RTN","ECBEN2U",125,0)
 S (MSG1,MSG2)=0
"RTN","ECBEN2U",126,0)
 Q
"RTN","ECBEN2U",127,0)
 ;
"RTN","ECBEN2U",128,0)
 ;
"RTN","ECBEN2U",129,0)
KILLR ;- Kill 'R' (Reason) node
"RTN","ECBEN2U",130,0)
 ;
"RTN","ECBEN2U",131,0)
 K ^ECH(ECFN,"R")
"RTN","ECBEN2U",132,0)
 Q
"RTN","ECBEN2U",133,0)
 ;
"RTN","ECBEN2U",134,0)
 ;
"RTN","ECBEN2U",135,0)
DELNOD ;- Delete 'PCE' and 'Send' nodes
"RTN","ECBEN2U",136,0)
 ;
"RTN","ECBEN2U",137,0)
 N DA,DIE,DR
"RTN","ECBEN2U",138,0)
 ;
"RTN","ECBEN2U",139,0)
 ;- Lock node
"RTN","ECBEN2U",140,0)
 L +^ECH(ECFN):5 Q:'$T
"RTN","ECBEN2U",141,0)
 S DA=ECFN
"RTN","ECBEN2U",142,0)
 S DIE="^ECH("
"RTN","ECBEN2U",143,0)
 S DR="30////@;31////@;37////@"
"RTN","ECBEN2U",144,0)
 ;
"RTN","ECBEN2U",145,0)
 ;- Delete contents
"RTN","ECBEN2U",146,0)
 D ^DIE
"RTN","ECBEN2U",147,0)
 ;
"RTN","ECBEN2U",148,0)
 ;- Unlock node
"RTN","ECBEN2U",149,0)
 L -^ECH(ECFN)
"RTN","ECBEN2U",150,0)
 Q
"RTN","ECBENF")
0^5^B10312825^B10029012
"RTN","ECBENF",1,0)
ECBENF ;BIR/MAM,JPW-Stuff New Batched Procedures ;12 Feb 96
"RTN","ECBENF",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,13,17,18,23,42,54,72,76**;8 May 96;Build 6
"RTN","ECBENF",3,0)
CRAM ; entry
"RTN","ECBENF",4,0)
 S ECDT=$P(ECA,"^"),ECL=$P(ECA,"^",2),ECS=$P(ECA,"^",3),ECM=$P(ECA,"^",4),ECD=$P(ECA,"^",5)
"RTN","ECBENF",5,0)
 S ECPCE=$P(ECA,"^",6)
"RTN","ECBENF",6,0)
 S (CNT,CNT1)=0
"RTN","ECBENF",7,0)
 F  S CNT1=$O(ECPT(CNT1)) Q:'CNT1  D
"RTN","ECBENF",8,0)
 .S ECNODE2=$G(ECPT(CNT1))
"RTN","ECBENF",9,0)
 .S ECELIG=$G(ECELPT(CNT1))
"RTN","ECBENF",10,0)
 .S ECPS=$P(ECNODE2,"^"),ECDX=$P(ECNODE2,"^",3),ECINP=$P(ECNODE2,"^",4),ECVST=$P(ECNODE2,"^",5),ECSC=$P(ECNODE2,"^",6),ECAO=$P(ECNODE2,"^",7),ECIR=$P(ECNODE2,"^",8),ECZEC=$P(ECNODE2,"^",9),ECMST=$P(ECNODE2,"^",12)
"RTN","ECBENF",11,0)
 .S ECHNC=$P(ECNODE2,"^",13),ECCV=$P(ECNODE2,"^",14),ECSHAD=$P(ECNODE2,"^",15)
"RTN","ECBENF",12,0)
 .F  S CNT=$O(ECEC(CNT)) Q:'CNT  D
"RTN","ECBENF",13,0)
 ..S EC4=$P(ECNODE2,"^",10),ECID=$P(ECNODE2,"^",11)
"RTN","ECBENF",14,0)
 ..D NODE D DIE
"RTN","ECBENF",15,0)
END D ^ECKILL K DLAYGO S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECBENF",16,0)
 Q
"RTN","ECBENF",17,0)
NODE ;set patient array data
"RTN","ECBENF",18,0)
 S ECNODE=ECEC(CNT)
"RTN","ECBENF",19,0)
 S ECC=+$P(ECNODE,"^"),ECP=$P(ECNODE,"^",2),ECO=$P(ECNODE,"^",4),ECV=$P(ECNODE,"^",5)
"RTN","ECBENF",20,0)
 S ECCPT=$P(ECNODE,"^",11),ECPRPTR=$P(ECNODE,"^",12)
"RTN","ECBENF",21,0)
 ;
"RTN","ECBENF",22,0)
 ;- Get associated clinic from event code screen if null
"RTN","ECBENF",23,0)
 S:$G(EC4)="" EC4=$P($G(^ECJ(+$O(^ECJ("AP",+ECL,+ECD,+ECC,$G(ECP),0)),"PRO")),"^",4)
"RTN","ECBENF",24,0)
 S:$G(ECID)="" ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBENF",25,0)
 Q
"RTN","ECBENF",26,0)
DIE ;
"RTN","ECBENF",27,0)
 L +^ECH(0):60 S ECRN=$P(^ECH(0),"^",3)+1 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^ECH(0),"^",3)+1 L -^ECH(0) G DIE
"RTN","ECBENF",28,0)
 L -^ECH(0) K DD,DO,DIC S X=ECRN,DIC(0)="L",DLAYGO=721,DIC="^ECH(" D FILE^DICN K DIC S ECFN=+Y
"RTN","ECBENF",29,0)
 ; set the zero node
"RTN","ECBENF",30,0)
 S ^ECH(ECFN,0)=ECFN_"^"_ECPS_"^"_ECDT_"^"_ECL_"^"_ECS_"^"_ECM_"^"_ECD_"^"_ECC_"^"_ECP_"^"_ECV_"^^"_ECO_"^"_ECDUZ_"^^^^^^"_EC4_"^"_ECID_"^"_ECVST_"^"_ECINP
"RTN","ECBENF",31,0)
 ;ALB/JAM file multiple providers (EC*2*72)
"RTN","ECBENF",32,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRVARY,.ECOUT) K ECFIL
"RTN","ECBENF",33,0)
 ;
"RTN","ECBENF",34,0)
 ; ALB/JAM add CPT procedure modifiers
"RTN","ECBENF",35,0)
 I $O(ECEC(CNT,"MOD",""))'="" D  K MODIEN,MOD
"RTN","ECBENF",36,0)
 . S MOD="" F  S MOD=$O(ECEC(CNT,"MOD",MOD)) Q:MOD=""  D
"RTN","ECBENF",37,0)
 . . S MODIEN=$P(ECEC(CNT,"MOD",MOD),U,2) I MODIEN<0 Q
"RTN","ECBENF",38,0)
 . . K DIC,DD,DO
"RTN","ECBENF",39,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECBENF",40,0)
 . . S DIC("P")=$P(^DD(721,36,0),U,2),X=MODIEN
"RTN","ECBENF",41,0)
 . . D FILE^DICN
"RTN","ECBENF",42,0)
 ; ALB/ESD - Set procedure reason into zero node
"RTN","ECBENF",43,0)
 I +ECPRPTR S $P(^ECH(ECFN,0),"^",23)=+ECPRPTR
"RTN","ECBENF",44,0)
 ;set the "P" node
"RTN","ECBENF",45,0)
 S ^ECH(ECFN,"P")=ECCPT_"^"_ECDX_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_ECSC
"RTN","ECBENF",46,0)
 S $P(^ECH(ECFN,"P"),"^",9,12)=ECMST_"^"_ECHNC_"^"_ECCV_"^"_ECSHAD
"RTN","ECBENF",47,0)
 ; ALB/JAM - add secondary diagnosis codes
"RTN","ECBENF",48,0)
 I $O(ECPT(CNT1,"DXS",""))'="" D  K DXSIEN,DXS
"RTN","ECBENF",49,0)
 . S DXS="" F  S DXS=$O(ECPT(CNT1,"DXS",DXS)) Q:DXS=""  D
"RTN","ECBENF",50,0)
 . . S DXSIEN=$P(ECPT(CNT1,"DXS",DXS),U) I DXSIEN<0 Q
"RTN","ECBENF",51,0)
 . . K DIC,DD,DO
"RTN","ECBENF",52,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""DX"""_","
"RTN","ECBENF",53,0)
 . . S DIC("P")=$P(^DD(721,38,0),U,2),X=DXSIEN
"RTN","ECBENF",54,0)
 . . D FILE^DICN
"RTN","ECBENF",55,0)
 K ECDXX M ECDXX=ECPT(CNT1,"DXS")
"RTN","ECBENF",56,0)
 S PXUPD=$$PXUPD^ECUTL2(ECPS,ECDT,ECL,EC4,ECDX,.ECDXX,ECFN) K PXUPD,ECDXX
"RTN","ECBENF",57,0)
XREF ; sets crossreferences
"RTN","ECBENF",58,0)
 S DIK="^ECH(",DA=ECFN D IX1^DIK K DA,DIK
"RTN","ECBENF",59,0)
 ;
"RTN","ECBENF",60,0)
PCE ;format PCE data to send
"RTN","ECBENF",61,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBENF",62,0)
 D PCE^ECBEN2U
"RTN","ECBENF",63,0)
 Q
"RTN","ECBEP")
0^14^B14053056^B13997295
"RTN","ECBEP",1,0)
ECBEP ;BIR/MAM,JPW-Batch Entry by Procedure ;2 Mar 96
"RTN","ECBEP",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,17,42,54,76**;8 May 96;Build 6
"RTN","ECBEP",3,0)
 S ECOUT=0
"RTN","ECBEP",4,0)
LOCA ; get location
"RTN","ECBEP",5,0)
 D ^ECL K LOC I '$D(ECL) G END
"RTN","ECBEP",6,0)
UNIT ; get DSS unit
"RTN","ECBEP",7,0)
 I $D(^XUSEC("ECALLU",DUZ)) K DIC S DIC=724,DIC("A")="Select DSS Unit:  ",DIC(0)="QEAMZ",DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))" D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2),NODE=Y(0) D SETU G:'$D(ECD) UNIT D ^ECBEP1A G CHK
"RTN","ECBEP",8,0)
 S (X,CNT)=0 F  S X=$O(^VA(200,DUZ,"EC",X)) Q:'X  S CNT=CNT+1,UNIT=$P(^VA(200,DUZ,"EC",X,0),"^"),UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECBEP",9,0)
 I '$D(UNIT(1)) W !!,"You do not have access to any DSS Units.  Contact your Event Capture",!,"Package Coordinator if you are responsible for entering procedures for ",!,"a DSS Unit. ",!!,"Press <RET> to continue  " R X:DTIME G END
"RTN","ECBEP",10,0)
 I '$D(UNIT(2)) S ECD=+$P(UNIT(1),"^"),ECDN=$P(^ECD(ECD,0),"^"),NODE=$G(^ECD(ECD,0)) D SETU G:'$D(ECD) UNIT D ^ECBEP1A G CHK
"RTN","ECBEP",11,0)
SELU S X=0 W @IOF,!,"DSS Units: ",! F  S X=$O(UNIT(X)) Q:'X  W !,X_".",?5,$P(UNIT(X),"^",2)
"RTN","ECBEP",12,0)
 W !!,"Select Number: " R X:DTIME S:"^"[X ECOUT=1 I '$T!("^"[X) G END
"RTN","ECBEP",13,0)
 I '$D(UNIT(X)) W !!,"Select the number that corresponds with the DSS unit for which you would like",!,"to enter procedures.",!!,"Press <RET> to continue  " R X:DTIME G SELU
"RTN","ECBEP",14,0)
 S ECD=+$P(UNIT(X),"^"),ECDN=$P(UNIT(X),"^",2),NODE=$G(^ECD(ECD,0)) D SETU G:'$D(ECD) UNIT D ^ECBEP1A
"RTN","ECBEP",15,0)
CHK ;check to ask unit again
"RTN","ECBEP",16,0)
 I ECOUT=2 D  S ECOUT=0 W @IOF,!,"Location: ",ECLN,!! G UNIT
"RTN","ECBEP",17,0)
 .K EC4,EC4N,ECC,ECCN,ECD,ECDDT,ECDT,ECDN,ECM,ECMN,ECO,ECON,ECP,ECPN,ECPROS,ECS,ECSN,ECTWO
"RTN","ECBEP",18,0)
 .K ECU,ECU2,ECU3,ECUN,ECUN2,ECUN3,ECUC,ECUC2,ECUC3,ECV,ECYN,ECYNZ,NATN,NODE,SYN,^TMP("ECPRO",$J)
"RTN","ECBEP",19,0)
 .K ECAO,ECIR,ECSC,ECCPT,ECDX,ECDXN,ECINP,ECVST,ECZEC,ECID,ECONE,ECPCE,ECPTSTAT,ECMST,ECHNC,ECCV,ECSHAD
"RTN","ECBEP",20,0)
END D ^ECKILL K ^TMP("ECPRO",$J) W @IOF
"RTN","ECBEP",21,0)
 Q
"RTN","ECBEP",22,0)
SETU ;set DSS Unit info
"RTN","ECBEP",23,0)
 S MSG1=0
"RTN","ECBEP",24,0)
 I '$D(NODE) D MSG K ECD,ECDN,NODE S ECOUT=0 Q
"RTN","ECBEP",25,0)
 I $P(NODE,"^",8)'=1 S MSG1=3 D MSG K ECD,ECDN,NODE S (ECOUT,MSG1)=0 Q
"RTN","ECBEP",26,0)
 I $P(NODE,"^",6) S MSG1=2 D MSG K ECD,ECDN,NODE S (ECOUT,MSG1)=0 Q
"RTN","ECBEP",27,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECBEP",28,0)
 I $O(^ECJ("AP",ECL,ECD,""))']"" S MSG1=1 D MSG K ECC,ECCN,ECD,ECDDT,ECDN,ECM,ECMN,ECPCL,ECS,ECSN,ECYN,NODE,^TMP("ECPRO",$J) S (ECOUT,MSG1)=0 Q
"RTN","ECBEP",29,0)
 S ECS=+$P(NODE,"^",2),ECM=+$P(NODE,"^",3),ECDDT=$P(NODE,"^",12),ECDDT=$S(ECDDT="T":"NOW",ECDDT="N":"NOW",1:"")
"RTN","ECBEP",30,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECBEP",31,0)
 S ECYNZ=+$P(NODE,"^",11)
"RTN","ECBEP",32,0)
 Q
"RTN","ECBEP",33,0)
MSG ;unit msg
"RTN","ECBEP",34,0)
 W !!,"The DSS Unit ",ECDN," that you selected within ",ECLN
"RTN","ECBEP",35,0)
 W !,$S(MSG1=3:"is not defined for Event Capture use",MSG1=2:"is inactive",MSG1=1:"has no procedures defined",1:"is missing information"),"."
"RTN","ECBEP",36,0)
 W "  Please select another DSS Unit."
"RTN","ECBEP",37,0)
 W !!,"Press <RET> to continue " R X:DTIME
"RTN","ECBEP",38,0)
 Q
"RTN","ECBEP1B")
0^6^B43605970^B43458281
"RTN","ECBEP1B",1,0)
ECBEP1B ;BIR/MAM,JPW-Batch Entry by Procedure (cont'd) ;30 Apr 96
"RTN","ECBEP1B",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,10,13,17,18,42,47,54,72,76**;8 May 96;Build 6
"RTN","ECBEP1B",3,0)
CHK ; check unit for valid categories
"RTN","ECBEP1B",4,0)
 K ECC,ECCN,ECHOICE,ECEC,ECSTOP
"RTN","ECBEP1B",5,0)
 S (COUNT,EC1)=0
"RTN","ECBEP1B",6,0)
 D CATS^ECHECK1 S ECONE=""
"RTN","ECBEP1B",7,0)
 I '$D(ECC(1)) S ECC=0,ECCN="None",ECONE=0 G P
"RTN","ECBEP1B",8,0)
 I '$D(ECC(2)) S ECC=+ECC(1),ECCN=$P(ECC(1),"^",2),ECONE=1 G P
"RTN","ECBEP1B",9,0)
CATS ; select category
"RTN","ECBEP1B",10,0)
 S X="",CNT=0
"RTN","ECBEP1B",11,0)
LIST D HDRP^ECBEN2U S JJ=0 W !,"Categories within "_ECDN_": ",!
"RTN","ECBEP1B",12,0)
 S EC1=0
"RTN","ECBEP1B",13,0)
 F  S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$P(ECC(CNT),"^",2)
"RTN","ECBEP1B",14,0)
 I '$D(ECSTOP),$D(ECHOICE) S ECONE=2 G P
"RTN","ECBEP1B",15,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECBEP1B",16,0)
 I X="" S ECOUT=2 Q
"RTN","ECBEP1B",17,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the category, or ^ to quit.",!!,"Press <RET> to continue  " R X:DTIME S CNT=CNT-5,X="" G LIST
"RTN","ECBEP1B",18,0)
 S ECHOICE=1,ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2),ECONE=2
"RTN","ECBEP1B",19,0)
P ;check for valid procedures
"RTN","ECBEP1B",20,0)
 D PROS^ECHECK1
"RTN","ECBEP1B",21,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECBEP1B",22,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECBEP1B",23,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECBEP1B",24,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECBEP1B",25,0)
 D HDRP^ECBEN2U
"RTN","ECBEP1B",26,0)
P1 ;
"RTN","ECBEP1B",27,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1,ECONE=ECONE_"^1" D SETP W !,"Procedure: " D  G CHKP
"RTN","ECBEP1B",28,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",29,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP1B",30,0)
P2 ;ask mul proc
"RTN","ECBEP1B",31,0)
 S ECX="",(ECPCNT,CNT,OK)=0,EC1=1 K ECHOICE,ECSTOP
"RTN","ECBEP1B",32,0)
 S DIR("?")="^D PROS^ECBEP1B"
"RTN","ECBEP1B",33,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECBEP1B",34,0)
 I +$G(ECX)=-1,(COUNT=0) S ECOUT=2 D KILLV^ECDSUTIL Q
"RTN","ECBEP1B",35,0)
 I +$G(ECX)=-1,COUNT G FILE
"RTN","ECBEP1B",36,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECBEP1B",37,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECBEP1B",38,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G P2
"RTN","ECBEP1B",39,0)
 .; Don't display spacebar/return error msg since only 1 procedure
"RTN","ECBEP1B",40,0)
 . D ERRMSG^ECDSUTIL
"RTN","ECBEP1B",41,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",42,0)
 I ECPCNT>0 D  G CHKP
"RTN","ECBEP1B",43,0)
 . S CNT=ECPCNT
"RTN","ECBEP1B",44,0)
 . D SETP
"RTN","ECBEP1B",45,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEP1B",46,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",47,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECBEP1B",48,0)
 I CNT=-1 D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECBEP1B",49,0)
 I CNT>0 D  G CHKP
"RTN","ECBEP1B",50,0)
 . D SETP
"RTN","ECBEP1B",51,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEP1B",52,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",53,0)
 Q
"RTN","ECBEP1B",54,0)
 ;
"RTN","ECBEP1B",55,0)
PROS ;
"RTN","ECBEP1B",56,0)
 S X="",CNT=0 K ECHOICE
"RTN","ECBEP1B",57,0)
LISTP D HDRP^ECBEN2U S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECBEP1B",58,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECBEP1B",59,0)
 S EC1=1
"RTN","ECBEP1B",60,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECBEP1B",61,0)
 I X="" D
"RTN","ECBEP1B",62,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym.",!?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECBEP1B",63,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECBEP1B",64,0)
 Q
"RTN","ECBEP1B",65,0)
 ;
"RTN","ECBEP1B",66,0)
CHKP ;
"RTN","ECBEP1B",67,0)
 ;Ask CPT procedure modifiers
"RTN","ECBEP1B",68,0)
 I ECCPT'="" D  K ECMODF,ECMODS
"RTN","ECBEP1B",69,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECBEP1B",70,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,ECDT,.ECMOD,.ECERR)
"RTN","ECBEP1B",71,0)
 I $G(ECERR) S ECOUT=2 K ECERR,ECMOD D KILLV^ECDSUTIL Q
"RTN","ECBEP1B",72,0)
 ;
"RTN","ECBEP1B",73,0)
 ;- Ask procedure reason
"RTN","ECBEP1B",74,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECBEP1B",75,0)
 K ECPRPTR
"RTN","ECBEP1B",76,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D
"RTN","ECBEP1B",77,0)
 . S ECPRPTR=0
"RTN","ECBEP1B",78,0)
 . S DIC="^ECL(",DIC(0)="QEAM"
"RTN","ECBEP1B",79,0)
 . S DIC("A")="Procedure Reason: ",DIC("S")="I $P(^(0),U,2)=ECSCR"
"RTN","ECBEP1B",80,0)
 . D ^DIC K DIC
"RTN","ECBEP1B",81,0)
 . I +Y>0 S ECPRPTR=+Y
"RTN","ECBEP1B",82,0)
 K ECSCR W !
"RTN","ECBEP1B",83,0)
 ;
"RTN","ECBEP1B",84,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEP1B",85,0)
 W !,"Procedure: ",$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",86,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEP1B",87,0)
 ;
"RTN","ECBEP1B",88,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP1B",89,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP1B",90,0)
 . W !?1,"Modifier: ","    - ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEP1B",91,0)
 ;- Display procedure reason
"RTN","ECBEP1B",92,0)
 I +$G(ECPRPTR) S ECPRSL=$P($G(^ECL(+ECPRPTR,0)),"^") W !,"Procedure Reason: ",$P($G(^ECR(+ECPRSL,0)),"^")
"RTN","ECBEP1B",93,0)
 D DSP1442^ECPRVMUT(.ECPRVARY)
"RTN","ECBEP1B",94,0)
 W !
"RTN","ECBEP1B",95,0)
 W !!,"Is this information correct ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") Q
"RTN","ECBEP1B",96,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y"
"RTN","ECBEP1B",97,0)
 I "YyNn"'[ECYN W !!,"Enter <RET> if the information listed above is correct and should be",!,"entered for the patients selected.  Enter NO to re-enter the information",!,"for this procedure.",!
"RTN","ECBEP1B",98,0)
 I "YyNn"'[ECYN W !!,"Press <RET> to continue  " R X:DTIME G CHKP
"RTN","ECBEP1B",99,0)
 I "Nn"[ECYN,$P(ECONE,"^")<2,$P(ECONE,"^",2)<2 S ECOUT=2 Q
"RTN","ECBEP1B",100,0)
 I "Nn"[ECYN K ECHOICE,ECCN,ECP,ECPN,ECMOD,ECONE,^TMP("ECPRO",$J) G CHK
"RTN","ECBEP1B",101,0)
 ;
"RTN","ECBEP1B",102,0)
 ;- File procedure reason in local array ECEC (used in ECBEPF)
"RTN","ECBEP1B",103,0)
 S COUNT=COUNT+1,ECEC(COUNT)=ECC_"^"_ECP_"^^^^^^^"_ECCPT_"^"_EC4_"^"_ECID_$S(+$G(ECPRPTR):"^"_ECPRPTR,1:"")
"RTN","ECBEP1B",104,0)
 ;- File CPT modifiers in local array ECEC
"RTN","ECBEP1B",105,0)
 I ECCPT'="",$O(ECMOD(ECCPT,""))'="" D
"RTN","ECBEP1B",106,0)
 . M ECEC(COUNT,"MOD")=ECMOD(ECCPT)
"RTN","ECBEP1B",107,0)
FILE ;file proc
"RTN","ECBEP1B",108,0)
 I '$D(ECEC(1)) W !!,"No procedures have been selected for filing.  Please re-enter the ",!,"information for the procedures, or ^ to exit.",!!,"Press <RET> to continue" R X:DTIME S:X="^" ECOUT=1 K ECTEMP,^TMP("ECPRO",$J) G P
"RTN","ECBEP1B",109,0)
 D ^ECBEP2A Q:ECOUT  K ECA,ECCN,ECEC,ECHOICE,ECJLP,ECP,ECPN,ECPT,ECO,ECON,ECV,NATN,NODE,SYN,^TMP("ECPRO",$J),ECDX,ECDXN,ECINP,ECCPT,ECSC,ECIR,ECZEC,ECAO,ECVST,ECPTSTAT,ECMST,ECHNC,ECCV,ECSHAD,ECMOD,ECPTCD G CHK
"RTN","ECBEP1B",110,0)
END Q
"RTN","ECBEP1B",111,0)
SETP ;set proc
"RTN","ECBEP1B",112,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),SYN=$P(^(CNT),"^",3),NATN=$P(^(CNT),"^",5),VOL=$P(^(CNT),"^",6)
"RTN","ECBEP1B",113,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECBEP1B",114,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECBEP1B",115,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT) I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECBEP1B",116,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",117,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP1B",118,0)
 S EC4=$P(^TMP("ECPRO",$J,CNT),"^",2),EC4=$P($G(^ECJ(+EC4,"PRO")),"^",4)
"RTN","ECBEP1B",119,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC"),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEP1B",120,0)
 Q
"RTN","ECBEP1B",121,0)
SELC ; select category
"RTN","ECBEP1B",122,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop:  " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECBEP1B",123,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECBEP1B",124,0)
 I 'EC1,'$D(ECC(X)) D MSG1^ECBEN2U S ECOUT=2 Q
"RTN","ECBEP1B",125,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSG1^ECBEN2U S ECOUT=2 Q
"RTN","ECBEP1B",126,0)
 S ECHOICE=1
"RTN","ECBEP1B",127,0)
 I 'EC1 S ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECBEP1B",128,0)
 Q
"RTN","ECBEP2A")
0^7^B31376195^B30996875
"RTN","ECBEP2A",1,0)
ECBEP2A ;BIR/MAM,JPW-Batch Enter by Procedure (cont'd) ;1 May 96
"RTN","ECBEP2A",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,13,17,18,23,33,41,42,54,72,76**;8 May 96;Build 6
"RTN","ECBEP2A",3,0)
EN ;entry pt
"RTN","ECBEP2A",4,0)
 D HDR
"RTN","ECBEP2A",5,0)
 S CNT=0
"RTN","ECBEP2A",6,0)
PATS ; get patients
"RTN","ECBEP2A",7,0)
 W ! Q:ECOUT=1  K ECADD
"RTN","ECBEP2A",8,0)
 K DIC,DUOUT S DIC=2,DIC(0)="QEAMZ",DIC("A")=$S($D(ECPT):"Select Next Patient: ",1:"Select Patient: ")
"RTN","ECBEP2A",9,0)
 D ^DIC K DIC S OK=0
"RTN","ECBEP2A",10,0)
 I $D(DUOUT)!($D(DTOUT)) S ECOUT=1 Q
"RTN","ECBEP2A",11,0)
 I Y<0,CNT=0 S ECOUT=2 Q
"RTN","ECBEP2A",12,0)
 I Y<0 D  G:ECOUT'=2 PATS I ECOUT=2 D KILL Q
"RTN","ECBEP2A",13,0)
 .D LIST Q:ECOUT  Q:'$O(ECPT(0))  Q:$G(ECADD)="A"
"RTN","ECBEP2A",14,0)
 .S ECTWO=0 K ECHOICE D ^ECBEP2B S ECOUT=2
"RTN","ECBEP2A",15,0)
 I $O(ECPT(0)) S JJ="" F  S JJ=$O(ECPT(JJ)) Q:'JJ!(OK=1)  I +$G(ECPT(JJ))=+Y S OK=1 W !!,"Patient already selected.  Please select another patient.",!
"RTN","ECBEP2A",16,0)
 I OK=1 G PATS
"RTN","ECBEP2A",17,0)
 N YY,ECUP D  I $G(ECUP)="^" G PATS
"RTN","ECBEP2A",18,0)
 . S YY=Y,DFN=+Y D 2^VADPT S Y=YY I +VADM(6) D
"RTN","ECBEP2A",19,0)
 . . W !!,"WARNING ",VADM(7),!!
"RTN","ECBEP2A",20,0)
 . . R "Press Return to Continue or ^ to Deselect: ",ECUP:DTIME
"RTN","ECBEP2A",21,0)
 S CNT=CNT+1,CNT1=CNT,ECPT(CNT)=+Y_"^"_$P(Y,"^",2) D ASK
"RTN","ECBEP2A",22,0)
 G PATS
"RTN","ECBEP2A",23,0)
 ;
"RTN","ECBEP2A",24,0)
LIST ; list patients
"RTN","ECBEP2A",25,0)
 K ECADD
"RTN","ECBEP2A",26,0)
 W @IOF,!,"Patients Selected for Batch Entry: ",! F I=0:0 S I=$O(ECPT(I)) Q:'I  W:I#2 ! W:I#2=0 ?40 W I_".  "_$P(ECPT(I),"^",2)
"RTN","ECBEP2A",27,0)
 W !!,"Is this list correct ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1 Q
"RTN","ECBEP2A",28,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y" I "YyNn"'[ECYN W !!,"Enter <RET> if this list is complete, or NO to add or delete",!,"patients on the list.",!!,"Press <RET> to continue  " R X:DTIME G LIST
"RTN","ECBEP2A",29,0)
 I "Yy"[ECYN Q:$O(ECPT(0))  D NOBODY Q:ECOUT
"RTN","ECBEP2A",30,0)
ADD W !!,"Add or Delete Patients ?  ADD//  " R ECADD:DTIME I '$T!(ECADD="^") S ECOUT=1 Q
"RTN","ECBEP2A",31,0)
 S ECADD=$E(ECADD) S:ECADD="" ECADD="A" I "AaDd"'[ECADD W !!,"Enter <RET> to make additions to the list, or D to delete a ",!,"patient from the list." K ECADD G ADD
"RTN","ECBEP2A",32,0)
 Q:ECADD="A"
"RTN","ECBEP2A",33,0)
DEL ; delete patients from list
"RTN","ECBEP2A",34,0)
 I '$D(ECPT(1)) D NOBODY Q:ECOUT  G LIST
"RTN","ECBEP2A",35,0)
 W !!,"Select Number:  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEP2A",36,0)
 I X="" Q
"RTN","ECBEP2A",37,0)
 I '$D(ECPT(X)) W !!,"Select the number corresponding to the patient that you would like",!,"to remove from the list.",!!,"Press <RET> to continue  " R X:DTIME S ECMORE=1 D LIST Q:ECOUT  G DEL
"RTN","ECBEP2A",38,0)
 F I=X+1:1:CNT S ECPT(I-1)=ECPT(I)
"RTN","ECBEP2A",39,0)
 K ECPT(CNT),I S CNT=CNT-1
"RTN","ECBEP2A",40,0)
 W !!,"Patient deleted.",!!,"Press <RET> to continue " R X:DTIME
"RTN","ECBEP2A",41,0)
 G LIST
"RTN","ECBEP2A",42,0)
 Q
"RTN","ECBEP2A",43,0)
HDR ;
"RTN","ECBEP2A",44,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEP2A",45,0)
 W !,"DSS Unit: ",ECDN
"RTN","ECBEP2A",46,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEP2A",47,0)
 W !,"Procedure: "_$S(ECCPT'="":ECPTCD_" ",1:"")_$E(ECPN,1,50)
"RTN","ECBEP2A",48,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEP2A",49,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP2A",50,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP2A",51,0)
 . W !?1,"Modifier: ","    - ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEP2A",52,0)
 W !,"Procedure Date: ",ECDATE
"RTN","ECBEP2A",53,0)
 W ! D DSP1416^ECPRVMUT(.ECPRVARY)
"RTN","ECBEP2A",54,0)
 W !
"RTN","ECBEP2A",55,0)
 Q
"RTN","ECBEP2A",56,0)
 ;
"RTN","ECBEP2A",57,0)
NOBODY ;No patients selected
"RTN","ECBEP2A",58,0)
 I $D(ECADD),ECADD="D" W !!,"You cannot delete patients when your patient list is empty."
"RTN","ECBEP2A",59,0)
 I $G(ECADD)'="D" W !!,"You have selected no patients."
"RTN","ECBEP2A",60,0)
 R !!,"Do you wish to quit?  Y//",X:DTIME S X=$E(X) I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEP2A",61,0)
 S:X="" X="Y" I "yY"[X S ECOUT=1 Q
"RTN","ECBEP2A",62,0)
 I "nN"'[X W !,"Answer ""N"" to continue selection, or enter return to quit",! G NOBODY
"RTN","ECBEP2A",63,0)
 Q
"RTN","ECBEP2A",64,0)
ADCAT ;add category/procedures for patients
"RTN","ECBEP2A",65,0)
 ;D ^ECBEN2A I ECOUT=1 Q
"RTN","ECBEP2A",66,0)
 ;W !!! K DIR,DIRUT,DA S DIR(0)="Y",DIR("A")="Do you want to enter another category and procedure for these patients" D ^DIR Q:$D(DIRUT)!'Y
"RTN","ECBEP2A",67,0)
 Q
"RTN","ECBEP2A",68,0)
KILL ;kill arrays and variables
"RTN","ECBEP2A",69,0)
 K ECSC,ECZEC,ECIR,ECDX,ECDXN,ECVST,ECINP,ECAO,ECPTSTAT,ECMST,ECHNC,ECCV
"RTN","ECBEP2A",70,0)
 K ECA,ECHOICE,ECJLP,ECPT,ECO,ECON,ECV,ECDXS,ECDXIEN,ECSHAD
"RTN","ECBEP2A",71,0)
 S ECOUT=0
"RTN","ECBEP2A",72,0)
 Q
"RTN","ECBEP2A",73,0)
ASK ; ask ord sect & vol
"RTN","ECBEP2A",74,0)
 W !!,"DSS Unit: "_ECDN,?50,"Category: "_ECCN,!
"RTN","ECBEP2A",75,0)
 W "Procedure: "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP2A",76,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP2A",77,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP2A",78,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP2A",79,0)
 . W ?1,"Modifier: ","    - ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55),!
"RTN","ECBEP2A",80,0)
 W "Patient: ",$P(ECPT(CNT),"^",2),!
"RTN","ECBEP2A",81,0)
 ;
"RTN","ECBEP2A",82,0)
 ;- Determine inpatient/outpatient status
"RTN","ECBEP2A",83,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECPT(CNT)),+$G(ECDT))
"RTN","ECBEP2A",84,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECBEP2A",85,0)
 ;
"RTN","ECBEP2A",86,0)
 ;- Determine patient eligibility
"RTN","ECBEP2A",87,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D
"RTN","ECBEP2A",88,0)
 . I $$MULTELG^ECUTL0(+$G(ECPT(CNT))) S ECELIG=+$$ELGLST^ECUTL0
"RTN","ECBEP2A",89,0)
 . E  S ECELIG=+$G(VAEL(1))
"RTN","ECBEP2A",90,0)
 K VAEL
"RTN","ECBEP2A",91,0)
 ;
"RTN","ECBEP2A",92,0)
 ;- Display inpatient/outpatient status message
"RTN","ECBEP2A",93,0)
 D DSPSTAT^ECUTL0(ECPTSTAT)
"RTN","ECBEP2A",94,0)
 ;
"RTN","ECBEP2A",95,0)
O ; ord sect
"RTN","ECBEP2A",96,0)
 K DIC,DUOUT S DIC=723,DIC(0)="QEAMZ",DIC("A")="Ordering Section: "
"RTN","ECBEP2A",97,0)
 D ^DIC K DIC I Y<0 D DELPT(.CNT) Q
"RTN","ECBEP2A",98,0)
 S ECO=+Y,ECON=$P(Y,"^",2)
"RTN","ECBEP2A",99,0)
V ; vol
"RTN","ECBEP2A",100,0)
 S:'VOL VOL=1
"RTN","ECBEP2A",101,0)
 W !,"Volume: "_VOL_"//" R X:DTIME I '$T S ECOUT=1 Q
"RTN","ECBEP2A",102,0)
 I X="^" D DELPT(.CNT) Q
"RTN","ECBEP2A",103,0)
 S:X="" X=VOL I X'?1.2N!'X W !!,"Enter a whole number between 1 and 99." G V
"RTN","ECBEP2A",104,0)
 S ECV=X
"RTN","ECBEP2A",105,0)
DIAG ;diagnosis, in/outpatient, visit
"RTN","ECBEP2A",106,0)
 S (ECDX,ECDXN,ECINP,ECVST,ECSC,ECAO,ECIR,ECZEC,ECMST,ECHNC,ECCV)=""
"RTN","ECBEP2A",107,0)
 S ECDFN=$P(ECPT(CNT),U),ECSHAD=""
"RTN","ECBEP2A",108,0)
 I $P(ECPCE,"~",2)="N" G NODE
"RTN","ECBEP2A",109,0)
 D PCEQST^ECBEN2U
"RTN","ECBEP2A",110,0)
 I ECOUT D DELPT(.CNT) Q
"RTN","ECBEP2A",111,0)
NODE ;set node
"RTN","ECBEP2A",112,0)
 ;- Get associated clinic from event code screen and DSS ID if null
"RTN","ECBEP2A",113,0)
 S:$G(EC4)="" EC4=$P($G(^ECJ(+$O(^ECJ("AP",+ECL,+ECD,+ECC,$G(ECP),0)),"PRO")),"^",4)
"RTN","ECBEP2A",114,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC"),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEP2A",115,0)
 S ECPT(CNT)=ECPT(CNT)_"^"_ECO_"^"_ECON_"^"_ECV_"^"_ECDX_"^"_$S(ECINP="":$G(ECPTSTAT),1:ECINP)_"^"_ECVST_"^"_ECSC_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_EC4_"^"_ECID_"^"_ECMST_"^"_ECHNC_"^"_ECCV_"^"_ECSHAD
"RTN","ECBEP2A",116,0)
 I $D(ECDXS) M ECPT(CNT,"DXS")=ECDXS K ECDXS
"RTN","ECBEP2A",117,0)
 S ECELPT(CNT)=$S($G(ECELIG):ECELIG,1:"") K ECPTSTAT
"RTN","ECBEP2A",118,0)
 Q
"RTN","ECBEP2A",119,0)
 ;
"RTN","ECBEP2A",120,0)
DELPT(CNT) ;deselect patient due to missing required data
"RTN","ECBEP2A",121,0)
 N DIR,Y
"RTN","ECBEP2A",122,0)
 K ECPT(CNT) S CNT=CNT-1
"RTN","ECBEP2A",123,0)
 W !,"Required data missing.",!,"Patient deselected...",!
"RTN","ECBEP2A",124,0)
 S ECOUT=0
"RTN","ECBEP2A",125,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue"
"RTN","ECBEP2A",126,0)
 D ^DIR
"RTN","ECBEP2A",127,0)
 W !
"RTN","ECBEP2A",128,0)
 Q
"RTN","ECBEPF")
0^4^B9044874^B8758024
"RTN","ECBEPF",1,0)
ECBEPF ;BIR/MAM,JPW-Stuff Batch Entry by Procedure (cont'd) ;2 Mar 96
"RTN","ECBEPF",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,13,17,18,23,42,54,72,76**;8 May 96;Build 6
"RTN","ECBEPF",3,0)
CRAM ; entry
"RTN","ECBEPF",4,0)
 S ECDT=$P(ECA,"^"),ECL=$P(ECA,"^",2),ECS=$P(ECA,"^",3),ECM=$P(ECA,"^",4),ECD=$P(ECA,"^",5)
"RTN","ECBEPF",5,0)
 S ECPCE=$P(ECA,"^",6)
"RTN","ECBEPF",6,0)
 S (CNT,CNT1)=0 F  S CNT1=$O(ECPT(CNT1)) Q:'CNT1  D SET F  S CNT=$O(ECEC(CNT)) Q:'CNT  D DIE
"RTN","ECBEPF",7,0)
END D ^ECKILL K DLAYGO S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECBEPF",8,0)
 Q
"RTN","ECBEPF",9,0)
SET ;
"RTN","ECBEPF",10,0)
 S ECPS=$P(ECPT(CNT1),"^"),ECO=$P(ECPT(CNT1),"^",3),ECV=+$P(ECPT(CNT1),"^",5)
"RTN","ECBEPF",11,0)
 S ECDX=$P(ECPT(CNT1),"^",6),ECINP=$P(ECPT(CNT1),"^",7),ECVST=$P(ECPT(CNT1),"^",8),ECSC=$P(ECPT(CNT1),"^",9),ECAO=$P(ECPT(CNT1),"^",10),ECIR=$P(ECPT(CNT1),"^",11)
"RTN","ECBEPF",12,0)
 S ECZEC=$P(ECPT(CNT1),"^",12),EC4=$P(ECPT(CNT1),"^",13),ECID=$P(ECPT(CNT1),"^",14)
"RTN","ECBEPF",13,0)
 S ECMST=$P(ECPT(CNT1),"^",15),ECHNC=$P(ECPT(CNT1),"^",16),ECCV=$P(ECPT(CNT1),"^",17),ECSHAD=$P(ECPT(CNT1),"^",18)
"RTN","ECBEPF",14,0)
 S ECELIG=$G(ECELPT(CNT1))
"RTN","ECBEPF",15,0)
 Q
"RTN","ECBEPF",16,0)
DIE ;
"RTN","ECBEPF",17,0)
 L +^ECH(0):60 S ECRN=$P(^ECH(0),"^",3)+1 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^ECH(0),"^",3)+1 L -^ECH(0) G DIE
"RTN","ECBEPF",18,0)
 L -^ECH(0) K DD,DO,DIC S X=ECRN,DIC(0)="L",DLAYGO=721,DIC="^ECH(" D FILE^DICN K DIC S ECFN=+Y
"RTN","ECBEPF",19,0)
 S ECNODE=ECEC(CNT),ECC=+$P(ECNODE,"^"),ECP=$P(ECNODE,"^",2),ECPRPTR=$P(ECNODE,"^",12)
"RTN","ECBEPF",20,0)
 S ECCPT=$P(ECNODE,"^",9)
"RTN","ECBEPF",21,0)
 ; set the zero node
"RTN","ECBEPF",22,0)
 S ^ECH(ECFN,0)=ECFN_"^"_ECPS_"^"_ECDT_"^"_ECL_"^"_ECS_"^"_ECM_"^"_ECD_"^"_ECC_"^"_ECP_"^"_ECV_"^^"_ECO_"^"_ECDUZ_"^^^^^^"_EC4_"^"_ECID_"^"_ECVST_"^"_ECINP
"RTN","ECBEPF",23,0)
 ;ALB/JAM file multiple providers (EC*2*72)
"RTN","ECBEPF",24,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRVARY,.ECOUT) K ECFIL
"RTN","ECBEPF",25,0)
 ;ALB/ESD - Set procedure reason into zero node
"RTN","ECBEPF",26,0)
 I +ECPRPTR S $P(^ECH(ECFN,0),"^",23)=+ECPRPTR
"RTN","ECBEPF",27,0)
 ;set the "P" node
"RTN","ECBEPF",28,0)
 S ^ECH(ECFN,"P")=ECCPT_"^"_ECDX_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_ECSC
"RTN","ECBEPF",29,0)
 S $P(^ECH(ECFN,"P"),"^",9,12)=ECMST_"^"_ECHNC_"^"_ECCV_"^"_ECSHAD
"RTN","ECBEPF",30,0)
 ;add secondary diagnosis codes
"RTN","ECBEPF",31,0)
 I $O(ECPT(CNT1,"DXS",""))'="" D  K DXSIEN,DXS
"RTN","ECBEPF",32,0)
 . S DXS="" F  S DXS=$O(ECPT(CNT1,"DXS",DXS)) Q:DXS=""  D
"RTN","ECBEPF",33,0)
 . . S DXSIEN=$P(ECPT(CNT1,"DXS",DXS),U) I DXSIEN<0 Q
"RTN","ECBEPF",34,0)
 . . K DIC,DD,DO
"RTN","ECBEPF",35,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""DX"""_","
"RTN","ECBEPF",36,0)
 . . S DIC("P")=$P(^DD(721,38,0),U,2),X=DXSIEN
"RTN","ECBEPF",37,0)
 . . D FILE^DICN
"RTN","ECBEPF",38,0)
 K ECDXX M ECDXX=ECPT(CNT1,"DXS")
"RTN","ECBEPF",39,0)
 S PXUPD=$$PXUPD^ECUTL2(ECPS,ECDT,ECL,EC4,ECDX,.ECDXX,ECFN) K PXUPD,ECDXX
"RTN","ECBEPF",40,0)
 ;add CPT procedure modifiers
"RTN","ECBEPF",41,0)
 I $O(ECEC(CNT,"MOD",""))'="" D  K MODIEN,MOD
"RTN","ECBEPF",42,0)
 . S MOD="" F  S MOD=$O(ECEC(CNT,"MOD",MOD)) Q:MOD=""  D
"RTN","ECBEPF",43,0)
 . . S MODIEN=$P(ECEC(CNT,"MOD",MOD),U,2) I MODIEN<0 Q
"RTN","ECBEPF",44,0)
 . . K DIC,DD,DO
"RTN","ECBEPF",45,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECBEPF",46,0)
 . . S DIC("P")=$P(^DD(721,36,0),U,2),X=MODIEN
"RTN","ECBEPF",47,0)
 . . D FILE^DICN
"RTN","ECBEPF",48,0)
XREF ; sets crossreferences
"RTN","ECBEPF",49,0)
 S DIK="^ECH(",DA=ECFN D IX1^DIK K DA,DIK
"RTN","ECBEPF",50,0)
PCE ;format data to send PCE
"RTN","ECBEPF",51,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEPF",52,0)
 D PCE^ECBEN2U
"RTN","ECBEPF",53,0)
 Q
"RTN","ECEFPAT")
0^16^B57831365^B57770429
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;12 Oct 00
"RTN","ECEFPAT",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,39,42,47,49,54,65,72,95,76**;8 May 96;Build 6
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",5,0)
 ;  Uses Supported IA 1995 - allow access to $$CPT^ICPTCOD
"RTN","ECEFPAT",6,0)
 ;
"RTN","ECEFPAT",7,0)
 ;     Variables passed in
"RTN","ECEFPAT",8,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",9,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",10,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",11,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",12,0)
 ;       ECL     - Location
"RTN","ECEFPAT",13,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",14,0)
 ;       ECC     - Category
"RTN","ECEFPAT",15,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",16,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",17,0)
 ;       ECU1..n - Provider (1 thru n), Prov 1 is required,other optional
"RTN","ECEFPAT",18,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",19,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",20,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",21,0)
 ;       ECDXS   - Secondary Diagnosis; multiple, optional
"RTN","ECEFPAT",22,0)
 ;       EC4     - Associated Clinic, required if sending data to PCE
"RTN","ECEFPAT",23,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",24,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",25,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",26,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",27,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",28,0)
 ;
"RTN","ECEFPAT",29,0)
 ;     Variable return
"RTN","ECEFPAT",30,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",31,0)
 ;
"RTN","ECEFPAT",32,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG,ECRES
"RTN","ECEFPAT",33,0)
 N ECFIL,ECPRV
"RTN","ECEFPAT",34,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",35,0)
 F ECX=1:1 Q:'$D(@("ECU"_ECX))  D  I ECERR Q
"RTN","ECEFPAT",36,0)
 .I @("ECU"_ECX)="" Q
"RTN","ECEFPAT",37,0)
 .S NODE=$$GET^XUA4A72(@("ECU"_ECX),ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",38,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",39,0)
 .S ECPRV(ECX)=@("ECU"_ECX)_"^^"_$S(ECX=1:"P",1:"S")
"RTN","ECEFPAT",40,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",41,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",42,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",43,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",44,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",45,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",46,0)
 ..K EC2PCE S ECVAR1=$$FNDVST^ECUTL(ECVST,,.EC2PCE) K ECVAR1
"RTN","ECEFPAT",47,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",48,0)
 ..N ECPKG,ECSOU
"RTN","ECEFPAT",49,0)
 ..S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECSOU="EVENT CAPTURE DATA"
"RTN","ECEFPAT",50,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST,ECPKG,ECSOU) K ECVST,VALQUIET
"RTN","ECEFPAT",51,0)
 ..;- Send to PCE task
"RTN","ECEFPAT",52,0)
 ..D PCETASK^ECPCEU(.EC2PCE) K EC2PCE
"RTN","ECEFPAT",53,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",54,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",55,0)
 I '$D(ECPRV) S ^TMP($J,"ECMSG",1)="0^No provider present" Q
"RTN","ECEFPAT",56,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",57,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",58,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",59,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",60,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",61,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",62,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",63,0)
 .D CHKDT(2)
"RTN","ECEFPAT",64,0)
 I +EC4 S ECRES=$$CLNCK^SDUTL2(+EC4,0) I 'ECRES D  S ECERR=1
"RTN","ECEFPAT",65,0)
 .S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECEFPAT",66,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",67,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",68,0)
 ;validate CPT value and handle HCPCS name to IEN conversion (HD223010)
"RTN","ECEFPAT",69,0)
 S ECCPT=+$$CPT^ICPTCOD(ECCPT)
"RTN","ECEFPAT",70,0)
 S ECCPT=$S(+ECCPT>0:ECCPT,1:0)
"RTN","ECEFPAT",71,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",72,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",73,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",74,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",75,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",76,0)
 S DA=ECFN,DR="11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",77,0)
 S ECPXREAS=$G(ECPXREAS)
"RTN","ECEFPAT",78,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",79,0)
 S DR=DR_";26////"_$G(EC4)_";27////"_$G(ECID)_";29////"_ECPTSTAT
"RTN","ECEFPAT",80,0)
 S DR=DR_";34////"_$S(ECPXREAS="":"@",1:ECPXREAS)
"RTN","ECEFPAT",81,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",82,0)
 I ECDX S ^DISV(DUZ,"^ICD9(")=ECDX  ;last ICD9 code
"RTN","ECEFPAT",83,0)
 S ECX=$O(ECPRV("A"),-1) I ECX'="" S ^DISV(DUZ,"^VA(200,")=+ECPRV(ECX)
"RTN","ECEFPAT",84,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",85,0)
 I 'ECFLG D
"RTN","ECEFPAT",86,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",87,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",88,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",89,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",90,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",91,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",92,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",93,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",94,0)
 ;File multiple providers
"RTN","ECEFPAT",95,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRV,.ECOUT) K ECOUT
"RTN","ECEFPAT",96,0)
 I 'ECFIL D RECDEL,MSG Q
"RTN","ECEFPAT",97,0)
 ;File CPT modifiers
"RTN","ECEFPAT",98,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",99,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",100,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",101,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",102,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",103,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",104,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",105,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",106,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",107,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",108,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",109,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",110,0)
 . . S DXCDE=$$ICDDX^ICDCODE(DXSIEN,ECDT) Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",111,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",112,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",113,0)
 . . S ^DISV(DUZ,"^ICD9(")=DXSIEN  ;last ICD9 code
"RTN","ECEFPAT",114,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",115,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",116,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",117,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",118,0)
 S DA=ECFN
"RTN","ECEFPAT",119,0)
 ;File classification AO^IR^SC^EC^MST^HNC^CV^SHAD
"RTN","ECEFPAT",120,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",121,0)
 . S CLSTR="21^22^24^23^35^39^40^41",DR=""
"RTN","ECEFPAT",122,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",123,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",124,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",125,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",126,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",127,0)
 ;
"RTN","ECEFPAT",128,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",129,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",130,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",131,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",132,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",133,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",134,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",135,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",136,0)
 Q
"RTN","ECEFPAT",137,0)
 ;
"RTN","ECEFPAT",138,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",139,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",140,0)
RLCK L +^ECH(0):60 S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",141,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",142,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",143,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",144,0)
 Q
"RTN","ECEFPAT",145,0)
RECDEL ; Delete record
"RTN","ECEFPAT",146,0)
 ;restore old data
"RTN","ECEFPAT",147,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",148,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",149,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",150,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",151,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",152,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",153,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",154,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",155,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",156,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",157,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",158,0)
 Q
"RTN","ECEFPAT",159,0)
MSG ;Record not filed
"RTN","ECEFPAT",160,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",161,0)
 Q
"RTN","ECEFPAT",162,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",163,0)
 N I,C
"RTN","ECEFPAT",164,0)
 S C=1
"RTN","ECEFPAT",165,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",166,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",167,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",168,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",169,0)
 ;check PCE data
"RTN","ECEFPAT",170,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",171,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",172,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",173,0)
 Q
"RTN","ECEFPAT",174,0)
VALDATA ;validate data
"RTN","ECEFPAT",175,0)
 N ECRRX
"RTN","ECEFPAT",176,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",177,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",178,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",179,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",180,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",181,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",182,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",183,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",184,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",185,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",186,0)
 D  I ECERR Q
"RTN","ECEFPAT",187,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",188,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",189,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",190,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",191,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Ordering Section"
"RTN","ECEFPAT",192,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",193,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",194,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",195,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",196,0)
 Q
"RTN","ECKILL")
0^10^B12278874^B12208137
"RTN","ECKILL",1,0)
ECKILL ;BIR/MAM,RHK,JPW-Kill Local Variables ;13 Apr 95
"RTN","ECKILL",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,17,18,23,42,54,65,76**;8 May 96;Build 6
"RTN","ECKILL",3,0)
 K %,%DT,%ZIS,A,AA,B,CNT,CNT1,COUNT,D,D0,D1,DA,DATA,DATA0,DATE,DFN,DHD,DIC,DIE,DINUM,DIOEND,DIR,DIROUT,DIRUT,DISYS,DTOUT,DUOUT,DLAYGO
"RTN","ECKILL",4,0)
 K EC,EC1,EC2,EC23,EC7,ECA,ECAC,ECACA,ECACC,ECAD,ECADD,ECALL,ECANE,ECAT,ECB,ECBDH,ECBSZ,ECC,ECC1,ECCAC,ECCAT,ECCC
"RTN","ECKILL",5,0)
 K ECCD,ECCH,ECCLC,ECCN,ECCS,ECCSC,ECCSN,ECD,ECD0,ECDA,ECDAT,ECDATA,ECDATA1,ECDATE,ECDFN,ECDI,ECDIA,ECDICA,ECDIV,ECDN,ECDOC,ECDR,ECDRG,ECDS1,ECDT,ECDT1,ECDU,ECDUZ
"RTN","ECKILL",6,0)
 K ECEC,ECED,ECED1,ECEDH,ECEDN,ECEXT,ECF,ECFCP,ECFD,ECFILE,ECFN,ECGRP,ECH
"RTN","ECKILL",7,0)
 K ECHD,ECHEAD,ECHOICE,ECI,ECID,ECINC,ECINST,ECINZ,ECIOP,ECITEM,ECJLP,ECL,ECL1,ECL2,ECL3,ECL4,ECL5,ECL6,ECLALL,ECLDT,ECLDT1,ECLL,ECLN,ECLOC,ECLR,ECLRO
"RTN","ECKILL",8,0)
 K ECM,ECMAX,ECMESG,ECMESS,ECMG,ECMIN,ECMN,ECMNTH,ECMOD,ECMODS,ECMODF,ECMORE,ECMS,ECMSG,ECMSN,ECMW,ECN,ECNEW,ECNO,ECNODE,ECNR,ECNT
"RTN","ECKILL",9,0)
 K PA,PR,V,ECPCNT,ECELPT,ECPNAME,ECPRSL,VOL,ECPROCED,ECDTM,ECDSSU,ECDXO,ECYCLN
"RTN","ECKILL",10,0)
 ;
"RTN","ECKILL",11,0)
 ;- Kill ordering section default variables (ECODFN,ECOM)
"RTN","ECKILL",12,0)
 K ECO,ECO0,ECO1,ECO2,ECOB,ECOD0,ECODE,ECODE0,ECODFN,ECOLD,ECOM,ECON,ECOST,ECOUT
"RTN","ECKILL",13,0)
 ;
"RTN","ECKILL",14,0)
 ;- Kill procedure reason variables (ECPRPTR,ECPRSN,ECREAS)
"RTN","ECKILL",15,0)
 K ECP,ECP1,ECP2,ECPACK,ECPAD,ECPAT,ECPG,ECPIECE,ECPN,ECPO,ECPR,ECPRC,ECPRO,ECPROC,ECPROF,ECPROS,ECPRPTR,ECPRSN,ECPS,ECPT,ECPTF
"RTN","ECKILL",16,0)
 K ECQ,ECQTY,ECRAD0,ECRD,ECREAS,ECREDO,ECREPL,ECRFL,ECRL,ECRN,ECRPL1,ECRTN,ECRX,ECS,ECSA,ECSD,ECSD1,ECSDN,ECSEC,ECSECS,ECSN,ECSSN,ECST,ECSTAT,ECSU
"RTN","ECKILL",17,0)
 K ECT,ECTEMP,ECTEST,ECTR,ECTREAT,ECTRN,ECTWO,ECU,ECU2,ECU2A,ECU3,ECU3A,ECUCNT,ECUN,ECUN1,ECUN2,ECUN3,ECUNIT
"RTN","ECKILL",18,0)
 K ECUNM,ECURG,ECUSER,ECUSR,ECUT,ECUT2,ECUT3,ECUTN,ECUTN2,ECUTN3,ECV,ECWORD,ECX,ECXID,ECXMDA,ECXMDT,ECY,ECYN,ECYNZ,ECRY
"RTN","ECKILL",19,0)
 K FAC,FLDS,FR,I,IOP,J,JJ,K,LINE,LIST,LOC,LOS,MM,MSG,MSG1,MSG2,NODE,NODE1,OK,P1,P11,P2,P3,POP,Q,SC,SDATE,SSN,STC,SU,TEST,TIME,TO,TOTD,UNIT,USER,USRCNT,W,X,XMDUZ
"RTN","ECKILL",20,0)
 K X,XMDUZ,XMSUB,XMTEST,XMTEXT,XMY,Y,ECCNTCHK,ECP1N,ECPI,RK,ECPSYN,C,DI,DQ,DR,ECLINE,ECPIEN,ECSYN,MINCNT,MAXCNT,ECFLG,ECZ,ECPATN,ECFILN,ECPC,ECPF,ECPP,ECR,ECSUB,ECV1,ECVOL,ECDIR,EZCNT,ECERR
"RTN","ECKILL",21,0)
 K ECCODE,ECDDT,ECNATN,ECDONE,NATN,ECPSY,ECRDT,ECPG1,ECNOPE,SYN,ECOLD,ECOLDN,RK,ECOS,ECOSN,PRO,SS,ECPA,ANS
"RTN","ECKILL",22,0)
PCE K ECAO,ECSC,ECZEC,ECIR,ECINP,ECID,EC4,EC4N,ECDX,ECDXN,ECVST,ECVV,ECZZ,LOCP,LOCPX,LOCX,PN,PNP,PNODE,ECMST,ECDXS,ECHNC,ECCV,ECSHAD
"RTN","ECKILL",23,0)
 K ECPCL,ECPCID,ECPCRD,ECPKG,ECCPT,EC725,ECONE,ECNODE2,ECCLFLDS,ECELANS,ECELCOD,ECELDSP,ECELIG,ECIOFLG,ECNEWDT,ECPTSTAT,VAEL,ECPTCD
"RTN","ECKILL",24,0)
 K ECP10,ECP11,ECP15,ECP17,ECP19,ECP2,ECP20,ECP3,ECP4,ECPCE,ECPP1,ECPP1A,ECPP2,ECPP3,ECPP4,ECPP5,ECPP6,ECPP9
"RTN","ECKILL",25,0)
 K ^TMP($J)
"RTN","ECKILL",26,0)
 Q
"RTN","ECMLMF")
0^8^B32626051^B31356519
"RTN","ECMLMF",1,0)
ECMLMF ;ALB/ESD - File Multiple Dates/Multiple Procedures  -  29 AUG 97 08:51
"RTN","ECMLMF",2,0)
 ;;2.0; EVENT CAPTURE ;**5,10,15,13,17,18,23,42,54,72,76**;8 May 96;Build 6
"RTN","ECMLMF",3,0)
 ;
"RTN","ECMLMF",4,0)
EN ;- Entry point to file selected patients and procedures
"RTN","ECMLMF",5,0)
 ;
"RTN","ECMLMF",6,0)
 N DIR,DIRUT,I,J,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","ECMLMF",7,0)
 I '$D(^TMP("ECMPIDX",$J))!('$D(^TMP("ECMPTIDX",$J))) W !!,*7,"No patient data found.  No patient record(s) have been filed." D MSG G ENQ
"RTN","ECMLMF",8,0)
 ;
"RTN","ECMLMF",9,0)
 W !!,"You have selected the following patients for filing:",!
"RTN","ECMLMF",10,0)
 ;
"RTN","ECMLMF",11,0)
 ;- List patients
"RTN","ECMLMF",12,0)
 S I=0
"RTN","ECMLMF",13,0)
 F  S I=$O(^TMP("ECMPTIDX",$J,I)) Q:'I  D
"RTN","ECMLMF",14,0)
 . W !?5,I_".  ",$P($G(^TMP("ECMPTIDX",$J,I)),"^",3)
"RTN","ECMLMF",15,0)
 W !! S DIR(0)="YA",DIR("A")="Is this correct? ",DIR("B")="YES"
"RTN","ECMLMF",16,0)
 S DIR("?")="Answer YES to continue, NO to exit."
"RTN","ECMLMF",17,0)
 D ^DIR K DIR
"RTN","ECMLMF",18,0)
 I '$G(Y)!($D(DIRUT)) W !,"Exiting option...no patients filed.",! D MSG G ENQ
"RTN","ECMLMF",19,0)
 ;
"RTN","ECMLMF",20,0)
 ;- Task job
"RTN","ECMLMF",21,0)
 F J="DUZ","ECL","ECDSSU","ECCAT","ECU*" S ZTSAVE(J)=""
"RTN","ECMLMF",22,0)
 S ZTSAVE("^TMP(""ECMPIDX"",$J,")="",ZTSAVE("^TMP(""ECMPTIDX"",$J,")=""
"RTN","ECMLMF",23,0)
 S ZTIO="",ZTDESC="EC MULT DATES/MULT PROCS DATA ENTRY",ZTRTN="GETNODS^ECMLMF",ZTDTH=$H
"RTN","ECMLMF",24,0)
 ;
"RTN","ECMLMF",25,0)
 W !!,"These patients will be sent to the background for filing.",!
"RTN","ECMLMF",26,0)
 D ^%ZTLOAD
"RTN","ECMLMF",27,0)
 I $D(ZTSK) W !,"Queued as Task #",ZTSK,!
"RTN","ECMLMF",28,0)
 D MSG
"RTN","ECMLMF",29,0)
 ;
"RTN","ECMLMF",30,0)
ENQ K ^TMP("ECPLST",$J)
"RTN","ECMLMF",31,0)
 Q
"RTN","ECMLMF",32,0)
 ;
"RTN","ECMLMF",33,0)
 ;
"RTN","ECMLMF",34,0)
GETNODS ;- Get procedure node and patient node for processing
"RTN","ECMLMF",35,0)
 ;
"RTN","ECMLMF",36,0)
 N ECI,ECJ,ECPRNOD,ECPTNOD,ECDXX
"RTN","ECMLMF",37,0)
 S (ECI,ECJ)=0
"RTN","ECMLMF",38,0)
 F  S ECI=$O(^TMP("ECMPTIDX",$J,ECI)) Q:'ECI  D
"RTN","ECMLMF",39,0)
 . S ECPTNOD="",ECPTNOD=$G(^TMP("ECMPTIDX",$J,ECI))
"RTN","ECMLMF",40,0)
 . K ECDXX M ECDXX=^TMP("ECMPTIDX",$J,ECI,"DXS")
"RTN","ECMLMF",41,0)
 . F  S ECJ=$O(^TMP("ECMPIDX",$J,ECJ)) Q:'ECJ  D
"RTN","ECMLMF",42,0)
 .. S ECPRNOD="",ECPRNOD=$G(^TMP("ECMPIDX",$J,ECJ))
"RTN","ECMLMF",43,0)
 .. D FILREC
"RTN","ECMLMF",44,0)
 D ENQ^ECMLMD
"RTN","ECMLMF",45,0)
 S ZTREQ="@"
"RTN","ECMLMF",46,0)
 Q
"RTN","ECMLMF",47,0)
 ;
"RTN","ECMLMF",48,0)
 ;
"RTN","ECMLMF",49,0)
FILREC ;- Create record in #721 and file fields
"RTN","ECMLMF",50,0)
 ;
"RTN","ECMLMF",51,0)
 N DA,ECIEN,ECNOGO,ECPRR,ECPTR,ECREAS,ECSND,DIC,DLAYGO,DIE,DR,I,Y
"RTN","ECMLMF",52,0)
 S ECNOGO=0
"RTN","ECMLMF",53,0)
 S I=$P(^ECH(0),"^",3)
"RTN","ECMLMF",54,0)
LOCKHD S I=I+1 L +^ECH(I):2 I '$T!$D(^ECH(I)) L -^ECH(I) G LOCKHD
"RTN","ECMLMF",55,0)
 L -^ECH(0)
"RTN","ECMLMF",56,0)
 K DD,DO S X=I,DIC(0)="L",DLAYGO=721,DIC="^ECH(" D FILE^DICN
"RTN","ECMLMF",57,0)
 K DIC,DLAYGO,X
"RTN","ECMLMF",58,0)
 I Y=-1 G FILRECQ
"RTN","ECMLMF",59,0)
 S (ECIEN,DA)=+Y
"RTN","ECMLMF",60,0)
 L +^ECH(ECIEN):2  I '$T G FILRECQ
"RTN","ECMLMF",61,0)
 ;
"RTN","ECMLMF",62,0)
 D SETARRY
"RTN","ECMLMF",63,0)
 ;
"RTN","ECMLMF",64,0)
 ;- File zero node and "P" node
"RTN","ECMLMF",65,0)
 S DIE="^ECH(",DR="[EC CREATE PATIENT ENTRY]" D ^DIE K DR
"RTN","ECMLMF",66,0)
 ;
"RTN","ECMLMF",67,0)
 ;- File multiple providers, ALB/JAM
"RTN","ECMLMF",68,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECIEN,.ECU,.ECOUT) K ECFIL
"RTN","ECMLMF",69,0)
 ;- File secondary diagnoses codes, ALB/JAM
"RTN","ECMLMF",70,0)
 S (DXS,DXSIEN)=""
"RTN","ECMLMF",71,0)
 F  S DXS=$O(ECDXX(DXS)) Q:DXS=""  D
"RTN","ECMLMF",72,0)
 . S DXSIEN=+ECDXX(DXS) I DXSIEN<0 Q
"RTN","ECMLMF",73,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECMLMF",74,0)
 . S X=DXSIEN,DIC="^ECH("_DA(1)_","_"""DX"""_"," D FILE^DICN
"RTN","ECMLMF",75,0)
 K DXS,DXSIEN,DIC
"RTN","ECMLMF",76,0)
 ;update encounter's procedures to have same primary & secondary dx
"RTN","ECMLMF",77,0)
 S PXUPD=$$PXUPD^ECUTL2(ECPTR("DFN"),ECPRR("PROCDT"),ECL,ECPTR("CLIN"),ECPTR("DX"),.ECDXX,ECIEN) K PXUPD
"RTN","ECMLMF",78,0)
 ;
"RTN","ECMLMF",79,0)
 ;File CPT modifiers, ALB/JAM
"RTN","ECMLMF",80,0)
 N MOD,MODIEN
"RTN","ECMLMF",81,0)
 S (ECMODS,MOD)=""
"RTN","ECMLMF",82,0)
 F  S MOD=$O(^TMP("ECMPIDX",$J,ECJ,"MOD",MOD)) Q:MOD=""  D
"RTN","ECMLMF",83,0)
 . S MODIEN=$P(^TMP("ECMPIDX",$J,ECJ,"MOD",MOD),U,2) I MODIEN<0 Q
"RTN","ECMLMF",84,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECMLMF",85,0)
 . S X=MODIEN,DIC="^ECH("_DA(1)_","_"""MOD"""_"," D FILE^DICN
"RTN","ECMLMF",86,0)
 . S ECMODS=ECMODS_$S(ECMODS="":"",1:";")_MOD
"RTN","ECMLMF",87,0)
 ;
"RTN","ECMLMF",88,0)
 S ECSND=$P($G(^ECD(+$P($G(ECDSSU),"^"),0)),"^",14),DA=ECIEN
"RTN","ECMLMF",89,0)
 I ECSND="" S ECSND="N"
"RTN","ECMLMF",90,0)
 I ECSND="A"!((ECSND="O")&(ECPTR("IO")="O")) D
"RTN","ECMLMF",91,0)
 . S ECNOGO=$$BADFLDS(.ECREAS)
"RTN","ECMLMF",92,0)
 . I ECNOGO S DR="33////^S X=$G(ECREAS)" D ^DIE Q
"RTN","ECMLMF",93,0)
 . I 'ECNOGO D PCE
"RTN","ECMLMF",94,0)
 ;
"RTN","ECMLMF",95,0)
FILRECQ L -^ECH(ECIEN)
"RTN","ECMLMF",96,0)
 Q
"RTN","ECMLMF",97,0)
 ;
"RTN","ECMLMF",98,0)
 ;
"RTN","ECMLMF",99,0)
SETARRY ;- Set local arrays with procedure and patient data for filing
"RTN","ECMLMF",100,0)
 ;
"RTN","ECMLMF",101,0)
 N I
"RTN","ECMLMF",102,0)
 F I="PROCDT","PROC","REAS","VOL" S ECPRR(I)=$P(ECPRNOD,"^",+$P($T(@I),";;",2))
"RTN","ECMLMF",103,0)
 I ECPRR("REAS")=0 S ECPRR("REAS")=""
"RTN","ECMLMF",104,0)
 S I="PCEPR" S ECPRR(I)=$S($P($G(ECPRR("PROC")),";",2)="ICPT(":$P($G(ECPRR("PROC")),";"),1:$P($G(^EC(725,+$P($G(ECPRR("PROC")),";"),0)),"^",5))
"RTN","ECMLMF",105,0)
 F I="DFN","ORDSEC","IO","CLIN","DX","AO","ENV","IR","SC","ELIG","MST","HNC","CV","SHAD" S ECPTR(I)=$P(ECPTNOD,"^",+$P($T(@I),";;",2))
"RTN","ECMLMF",106,0)
 Q
"RTN","ECMLMF",107,0)
 ;
"RTN","ECMLMF",108,0)
 ;
"RTN","ECMLMF",109,0)
BADFLDS(ECRS) ; - Validation checks on fields to be set in "PCE" node
"RTN","ECMLMF",110,0)
 ;
"RTN","ECMLMF",111,0)
 S ECRS=""
"RTN","ECMLMF",112,0)
 I ECPTR("CLIN")="" S ECRS="Clinic missing;"
"RTN","ECMLMF",113,0)
 I ECPTR("CLIN")=0 S ECRS="Clinic inactive;"
"RTN","ECMLMF",114,0)
 I ECPTR("DX")="" S ECRS=$G(ECRS)_"Diagnosis missing;"
"RTN","ECMLMF",115,0)
 I ECPRR("PCEPR")="" S ECRS=$G(ECRS)_"CPT code missing;"
"RTN","ECMLMF",116,0)
 Q $S($G(ECRS)="":0,1:1)
"RTN","ECMLMF",117,0)
 ;
"RTN","ECMLMF",118,0)
 ;
"RTN","ECMLMF",119,0)
PCE ;- More validation checks on fields to be set in "PCE" node
"RTN","ECMLMF",120,0)
 ;
"RTN","ECMLMF",121,0)
 N ECDSS,I,ECAO,ECELIG,ECEV,ECIR,ECSC,ECNP,ECNPP,ECPCENOD,ECMST,ECHNC,ECCV,ECSHAD
"RTN","ECMLMF",122,0)
 G PCEQ:$G(ECPRR("PROCDT"))'["."!('$G(ECPRR("PCEPR")))
"RTN","ECMLMF",123,0)
 F I="DFN","CLIN","DX" G PCEQ:'$G(ECPTR(I))
"RTN","ECMLMF",124,0)
 G PCEQ:'$G(ECPRR("VOL"))
"RTN","ECMLMF",125,0)
 S ECDSS=$P($G(^ECH(ECIEN,0)),"^",20)
"RTN","ECMLMF",126,0)
 G PCEQ:'$G(ECL)!('ECDSS)!('$G(ECU(1)))
"RTN","ECMLMF",127,0)
 ;
"RTN","ECMLMF",128,0)
 S ECPTR("AO")=$G(ECPTR("AO"))
"RTN","ECMLMF",129,0)
 S ECAO=$S(ECPTR("AO")="Y":1,ECPTR("AO")="N":0,1:"")
"RTN","ECMLMF",130,0)
 ;
"RTN","ECMLMF",131,0)
 S ECPTR("ENV")=$G(ECPTR("ENV"))
"RTN","ECMLMF",132,0)
 S ECEV=$S(ECPTR("ENV")="Y":1,ECPTR("ENV")="N":0,1:"")
"RTN","ECMLMF",133,0)
 ;
"RTN","ECMLMF",134,0)
 S ECPTR("IR")=$G(ECPTR("IR"))
"RTN","ECMLMF",135,0)
 S ECIR=$S(ECPTR("IR")="Y":1,ECPTR("IR")="N":0,1:"")
"RTN","ECMLMF",136,0)
 ;
"RTN","ECMLMF",137,0)
 S ECPTR("SC")=$G(ECPTR("SC"))
"RTN","ECMLMF",138,0)
 S ECSC=$S(ECPTR("SC")="Y":1,ECPTR("SC")="N":0,1:"")
"RTN","ECMLMF",139,0)
 ;
"RTN","ECMLMF",140,0)
 S ECNPP="" I $G(ECPRR("PROC"))["EC" S ECNP=$G(^EC(725,+ECPRR("PROC"),0)),ECNPP=$P(ECNP,"^",2)_"  "_$P(ECNP,"^",1)
"RTN","ECMLMF",141,0)
 ;
"RTN","ECMLMF",142,0)
 S ECELIG=$S($G(ECPTR("ELIG")):ECPTR("ELIG"),1:"")
"RTN","ECMLMF",143,0)
 ;
"RTN","ECMLMF",144,0)
 S ECPTR("MST")=$G(ECPTR("MST"))
"RTN","ECMLMF",145,0)
 S ECMST=$S(ECPTR("MST")="Y":1,ECPTR("MST")="N":0,1:"")
"RTN","ECMLMF",146,0)
 ;
"RTN","ECMLMF",147,0)
 ;JAM;09/30/02,Head/Neck Cancer
"RTN","ECMLMF",148,0)
 S ECPTR("HNC")=$G(ECPTR("HNC"))
"RTN","ECMLMF",149,0)
 S ECHNC=$S(ECPTR("HNC")="Y":1,ECPTR("HNC")="N":0,1:"")
"RTN","ECMLMF",150,0)
 ;
"RTN","ECMLMF",151,0)
 ;JAM;10/29/03,Combat Veteran
"RTN","ECMLMF",152,0)
 S ECPTR("CV")=$G(ECPTR("CV"))
"RTN","ECMLMF",153,0)
 S ECCV=$S(ECPTR("CV")="Y":1,ECPTR("CV")="N":0,1:"")
"RTN","ECMLMF",154,0)
 ;
"RTN","ECMLMF",155,0)
 ;JAM;06/01/05,Project 112/SHAD
"RTN","ECMLMF",156,0)
 S ECPTR("SHAD")=$G(ECPTR("SHAD"))
"RTN","ECMLMF",157,0)
 S ECSHAD=$S(ECPTR("SHAD")="Y":1,ECPTR("SHAD")="N":0,1:"")
"RTN","ECMLMF",158,0)
 ;- File "PCE" and "PCE1" nodes
"RTN","ECMLMF",159,0)
 ;
"RTN","ECMLMF",160,0)
 S DR="[EC FILE PCE NODE]" D ^DIE K DR
"RTN","ECMLMF",161,0)
 S DR="31////"_$$NOW^XLFDT D ^DIE
"RTN","ECMLMF",162,0)
PCEQ Q
"RTN","ECMLMF",163,0)
 ;
"RTN","ECMLMF",164,0)
 ;
"RTN","ECMLMF",165,0)
MSG ;- Message displayed so error message can be read on screen
"RTN","ECMLMF",166,0)
 ;
"RTN","ECMLMF",167,0)
 S DIR(0)="E" D ^DIR
"RTN","ECMLMF",168,0)
 Q
"RTN","ECMLMF",169,0)
 ;
"RTN","ECMLMF",170,0)
 ;- Subscripts used in creating ECPRR and ECPTR arrays
"RTN","ECMLMF",171,0)
 ;
"RTN","ECMLMF",172,0)
PROCDT ;;2
"RTN","ECMLMF",173,0)
PROC ;;3
"RTN","ECMLMF",174,0)
REAS ;;5
"RTN","ECMLMF",175,0)
VOL ;;7
"RTN","ECMLMF",176,0)
 ;
"RTN","ECMLMF",177,0)
DFN ;;2
"RTN","ECMLMF",178,0)
ORDSEC ;;4
"RTN","ECMLMF",179,0)
IO ;;5
"RTN","ECMLMF",180,0)
CLIN ;;6
"RTN","ECMLMF",181,0)
DX ;;8
"RTN","ECMLMF",182,0)
AO ;;10
"RTN","ECMLMF",183,0)
ENV ;;11
"RTN","ECMLMF",184,0)
IR ;;12
"RTN","ECMLMF",185,0)
SC ;;13
"RTN","ECMLMF",186,0)
ELIG ;;14
"RTN","ECMLMF",187,0)
MST ;;15
"RTN","ECMLMF",188,0)
HNC ;;16
"RTN","ECMLMF",189,0)
CV ;;17
"RTN","ECMLMF",190,0)
SHAD ;;18
"RTN","ECMLMN")
0^9^B56476624^B56414304
"RTN","ECMLMN",1,0)
ECMLMN ;ALB/ESD - Multiple patients processing ;26 AUG 1997 14:42
"RTN","ECMLMN",2,0)
 ;;2.0; EVENT CAPTURE ;**5,10,15,13,17,18,23,42,47,54,76**;8 May 96;Build 6
"RTN","ECMLMN",3,0)
 ;
"RTN","ECMLMN",4,0)
 ;
"RTN","ECMLMN",5,0)
EN ;- Entry point for multiple patients (part of Multiple Dates/Procs option)
"RTN","ECMLMN",6,0)
 ;
"RTN","ECMLMN",7,0)
 N ECGO,ECNXT,ECPAT,ECORD,ECPCE,ECPCEQ,ECS
"RTN","ECMLMN",8,0)
 ;
"RTN","ECMLMN",9,0)
 ;- Ask patient related questions
"RTN","ECMLMN",10,0)
 D ENPAT(.ECGO)
"RTN","ECMLMN",11,0)
 ;
"RTN","ECMLMN",12,0)
 ;- ListMan entry point
"RTN","ECMLMN",13,0)
 I +$G(ECGO)=1 D EN^VALM("EC MUL PATIENTS")
"RTN","ECMLMN",14,0)
 ;
"RTN","ECMLMN",15,0)
 Q
"RTN","ECMLMN",16,0)
 ;
"RTN","ECMLMN",17,0)
ENPAT(ECFL,ECONE) ;- Ask patient name, ordering section, inpat/outpat,
"RTN","ECMLMN",18,0)
 ;                  dx, assoc clinic, and classification questions
"RTN","ECMLMN",19,0)
 ;                  (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECMLMN",20,0)
 ;
"RTN","ECMLMN",21,0)
SEL K ECNXT,ECPAT,ECORD,ECPCE,ECPCEQ,ECS
"RTN","ECMLMN",22,0)
 S ECFL=1,ECS=""
"RTN","ECMLMN",23,0)
 ;
"RTN","ECMLMN",24,0)
 ;- Patient name
"RTN","ECMLMN",25,0)
 S ECNXT=$$ASKPAT^ECMUTL1(.ECPAT)
"RTN","ECMLMN",26,0)
 I ECNXT=-1!((ECNXT=-2)&('$D(^TMP("ECPAT",$J)))) S ECFL=-1 G ENPATQ
"RTN","ECMLMN",27,0)
 I ECNXT=-2,$D(^TMP("ECPAT",$J)) G ENPATQ
"RTN","ECMLMN",28,0)
 ;
"RTN","ECMLMN",29,0)
 ;- Inpatient/outpatient status (in ECPCE("I/O"))
"RTN","ECMLMN",30,0)
 I '$$INOUT^ECMUTL1(ECPAT) G ENPATQ
"RTN","ECMLMN",31,0)
 ;
"RTN","ECMLMN",32,0)
 ;- Patient eligibility (in ECPCE("ELIG"))
"RTN","ECMLMN",33,0)
 D ASKELIG^ECMUTL1(ECDSSU,ECPCE("I/O"),ECPAT)
"RTN","ECMLMN",34,0)
 ;
"RTN","ECMLMN",35,0)
 ;- Display inpatient/outpatient status on screen
"RTN","ECMLMN",36,0)
 D DSPSTAT^ECUTL0(ECPCE("I/O"))
"RTN","ECMLMN",37,0)
 ;
"RTN","ECMLMN",38,0)
 ;- Ordering section
"RTN","ECMLMN",39,0)
 S ECORD=$$ASKORD^ECMUTL1
"RTN","ECMLMN",40,0)
 I 'ECORD D REMOVE^ECMUTL1(ECPAT) G ENPATQ
"RTN","ECMLMN",41,0)
 ;
"RTN","ECMLMN",42,0)
 ;- Send Event Code Screen IEN of first procedure (used only if 'Send to
"RTN","ECMLMN",43,0)
 ;  PCE' fld in DSS Unit file is 'N' and patient is an inpatient)
"RTN","ECMLMN",44,0)
 ;
"RTN","ECMLMN",45,0)
 I $P($G(^TMP("ECMPIDX",$J,1)),"^",3)]"" S ECS=$O(^ECJ("AP",ECL,+$P(ECDSSU,"^"),+ECCAT,$P($G(^TMP("ECMPIDX",$J,1)),"^",3),0))
"RTN","ECMLMN",46,0)
 ;
"RTN","ECMLMN",47,0)
 ;- Dx, associated clinic, and classification questions
"RTN","ECMLMN",48,0)
 S ECPCEQ=$$PCEDAT^ECMUTL1(+$P(ECDSSU,"^"),ECS,.ECPCE)
"RTN","ECMLMN",49,0)
 I ECPCEQ>0 D REMOVE^ECMUTL1(ECPAT) G ENPATQ
"RTN","ECMLMN",50,0)
 I ECPCEQ=0 D BLDPAT
"RTN","ECMLMN",51,0)
ENPATQ I '$G(ECONE),ECNXT>0 W ! G SEL
"RTN","ECMLMN",52,0)
 Q
"RTN","ECMLMN",53,0)
 ;
"RTN","ECMLMN",54,0)
 ;
"RTN","ECMLMN",55,0)
BLDPAT ;- Build ^TMP("ECPAT",$J) array with patient data
"RTN","ECMLMN",56,0)
 ;
"RTN","ECMLMN",57,0)
 N ECNODE,ECNUM
"RTN","ECMLMN",58,0)
 S ECNUM=2
"RTN","ECMLMN",59,0)
 S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",12)=""
"RTN","ECMLMN",60,0)
 S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",1)=$P(ECPAT,"^",2)
"RTN","ECMLMN",61,0)
 S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",2)=+$P(ECORD,"^")
"RTN","ECMLMN",62,0)
 F ECNODE="I/O","CLIN","CLINNM","DX","DXNM","AO","ENV","IR","SC","ELIG","MST","HNC","CV","SHAD" D
"RTN","ECMLMN",63,0)
 . S ECNUM=ECNUM+1
"RTN","ECMLMN",64,0)
 . S $P(^TMP("ECPAT",$J,$P(ECPAT,"^")),"^",ECNUM)=$S(ECNODE="CLINNM":$P($G(ECPCE("CLIN")),"^",2),ECNODE="DXNM":$P($G(ECPCE("DX")),"^",2),1:$P($G(ECPCE(ECNODE)),"^"))
"RTN","ECMLMN",65,0)
 I $D(ECPCE("DXS")) M ^TMP("ECPAT",$J,$P(ECPAT,"^"),"DXS")=ECPCE("DXS")
"RTN","ECMLMN",66,0)
 Q
"RTN","ECMLMN",67,0)
 ;
"RTN","ECMLMN",68,0)
 ;
"RTN","ECMLMN",69,0)
HDR ;- Header
"RTN","ECMLMN",70,0)
 ;
"RTN","ECMLMN",71,0)
 S VALMHDR(1)=" Location: "_$G(ECLN)_"  ("_$G(ECL)_")"
"RTN","ECMLMN",72,0)
 S VALMHDR(1)=$$SETSTR^VALM1("Provider #1: "_$P(ECU(1),"^",2),VALMHDR(1),40,30)
"RTN","ECMLMN",73,0)
 S VALMHDR(2)=" DSS Unit: "_$P(ECDSSU,"^",2)
"RTN","ECMLMN",74,0)
 S VALMHDR(2)=$$SETSTR^VALM1("   Category: "_$P(ECCAT,"^",2),VALMHDR(2),40,30)
"RTN","ECMLMN",75,0)
 Q
"RTN","ECMLMN",76,0)
 ;
"RTN","ECMLMN",77,0)
 ;
"RTN","ECMLMN",78,0)
INIT ;-- Init vars and display selected procedures for patient(s)
"RTN","ECMLMN",79,0)
 ;
"RTN","ECMLMN",80,0)
 N ECPTCNT,BL,X,IC,IW,DC,DW,NC,NW,PC,PW,RC,RW,SC,SW
"RTN","ECMLMN",81,0)
 K ^TMP("ECMPT",$J),^TMP("ECMPTIDX",$J)
"RTN","ECMLMN",82,0)
 D CLEAN^VALM10
"RTN","ECMLMN",83,0)
 ;
"RTN","ECMLMN",84,0)
 S (VALMCNT,ECPTCNT)=0
"RTN","ECMLMN",85,0)
 S BL="",$P(BL," ",30)=""
"RTN","ECMLMN",86,0)
 S X=VALMDDF("INDEX"),IC=$P(X,"^",2),IW=$P(X,"^",3)
"RTN","ECMLMN",87,0)
 S X=VALMDDF("PATIENT"),PC=$P(X,"^",2),PW=$P(X,"^",3)
"RTN","ECMLMN",88,0)
 S X=VALMDDF("SSN"),SC=$P(X,"^",2),SW=$P(X,"^",3)
"RTN","ECMLMN",89,0)
 ;
"RTN","ECMLMN",90,0)
 D BLD
"RTN","ECMLMN",91,0)
 S $P(^TMP("ECMPT",$J,0),"^",4)=VALMCNT
"RTN","ECMLMN",92,0)
 Q
"RTN","ECMLMN",93,0)
 ;
"RTN","ECMLMN",94,0)
 ;
"RTN","ECMLMN",95,0)
BLD ;- Get data from array for screen display
"RTN","ECMLMN",96,0)
 ;
"RTN","ECMLMN",97,0)
 N DFN,ECDFN,ECX,VA,VAERR
"RTN","ECMLMN",98,0)
 S ECDFN=0 F  S ECDFN=$O(^TMP("ECPAT",$J,ECDFN)) Q:'ECDFN  D
"RTN","ECMLMN",99,0)
 . K DFN S DFN=ECDFN D PID^VADPT6
"RTN","ECMLMN",100,0)
 . D BLDLM
"RTN","ECMLMN",101,0)
 . D PRDSP
"RTN","ECMLMN",102,0)
 Q
"RTN","ECMLMN",103,0)
 ;
"RTN","ECMLMN",104,0)
 ;
"RTN","ECMLMN",105,0)
BLDLM ;- Display patient data
"RTN","ECMLMN",106,0)
 ;
"RTN","ECMLMN",107,0)
 K ECX
"RTN","ECMLMN",108,0)
 S ECPTCNT=ECPTCNT+1,ECX="",$P(ECX," ",VALMWD+1)=""
"RTN","ECMLMN",109,0)
 S ECX=$E(ECX,1,IC-1)_$E(ECPTCNT_BL,1,IW)_$E(ECX,IC+IW+1,VALMWD)
"RTN","ECMLMN",110,0)
 S ECX=$E(ECX,1,PC-1)_$E($P(^TMP("ECPAT",$J,ECDFN),"^")_BL,1,PW)_$E(ECX,PC+PW+1,VALMWD)
"RTN","ECMLMN",111,0)
 S ECX=$E(ECX,1,SC-1)_$E($G(VA("PID"))_BL,1,SW)_$E(ECX,SC+SW+1,VALMWD)
"RTN","ECMLMN",112,0)
 ;
"RTN","ECMLMN",113,0)
 D SET(ECX)
"RTN","ECMLMN",114,0)
 ;
"RTN","ECMLMN",115,0)
 ;- Tmp array ECMPTIDX contains:
"RTN","ECMLMN",116,0)
 ;  Cnt^DFN^Name^Ord Sect^In/Out^Clin^Clin Nam^DX^DX Nam^AO^EC^IR^SC^Elig^MST^HNC^CV^SHAD
"RTN","ECMLMN",117,0)
 ;
"RTN","ECMLMN",118,0)
 S ^TMP("ECMPTIDX",$J,ECPTCNT)=VALMCNT_"^"_ECDFN_"^"_$G(^TMP("ECPAT",$J,ECDFN))
"RTN","ECMLMN",119,0)
 ;- Set secondary diagnosis codes in array ECMPTIDX
"RTN","ECMLMN",120,0)
 I $D(^TMP("ECPAT",$J,ECDFN,"DXS")) D
"RTN","ECMLMN",121,0)
 . M ^TMP("ECMPTIDX",$J,ECPTCNT,"DXS")=^TMP("ECPAT",$J,ECDFN,"DXS")
"RTN","ECMLMN",122,0)
 Q
"RTN","ECMLMN",123,0)
 ;
"RTN","ECMLMN",124,0)
 ;
"RTN","ECMLMN",125,0)
SET(X) ;- Create ^TMP("ECMPT",$J) array for screen display
"RTN","ECMLMN",126,0)
 ;
"RTN","ECMLMN",127,0)
 S VALMCNT=VALMCNT+1,^TMP("ECMPT",$J,VALMCNT,0)=X
"RTN","ECMLMN",128,0)
 S ^TMP("ECMPT",$J,"IDX",VALMCNT,ECPTCNT)=""
"RTN","ECMLMN",129,0)
 Q
"RTN","ECMLMN",130,0)
 ;
"RTN","ECMLMN",131,0)
 ;
"RTN","ECMLMN",132,0)
PRDSP ;- Display selected procedure dates/times and procedures
"RTN","ECMLMN",133,0)
 ;
"RTN","ECMLMN",134,0)
 N I,X,J,ECCPT,ECPR
"RTN","ECMLMN",135,0)
 S I=0
"RTN","ECMLMN",136,0)
 D SET("")
"RTN","ECMLMN",137,0)
 D SET($$SETSTR^VALM1("Procedure(s):","",8,13))
"RTN","ECMLMN",138,0)
 D CNTRL^VALM10(VALMCNT,8,13,IORVON,IORVOFF)
"RTN","ECMLMN",139,0)
 ;
"RTN","ECMLMN",140,0)
 F  S I=$O(^TMP("ECMPIDX",$J,I)) Q:'I  D
"RTN","ECMLMN",141,0)
 . S X=""
"RTN","ECMLMN",142,0)
 . S X=$$SETSTR^VALM1($$FTIME^VALM1($P($G(^TMP("ECMPIDX",$J,I)),"^",2)),X,10,18)
"RTN","ECMLMN",143,0)
 . S X=$$SETSTR^VALM1($P($P($G(^TMP("ECMPIDX",$J,I)),"^",3),";"),X,34,5)
"RTN","ECMLMN",144,0)
 . S ECCPT=$P(^TMP("ECMPIDX",$J,I),"^",3)
"RTN","ECMLMN",145,0)
 . S ECCPT=$S(ECCPT["ICPT":+ECCPT,1:$P($G(^EC(725,+ECCPT,0)),"^",5))
"RTN","ECMLMN",146,0)
 . I ECCPT'="" S ECCPT=$P($$CPT^ICPTCOD(ECCPT,$P(^TMP("ECMPIDX",$J,I),"^",2)),"^",2)
"RTN","ECMLMN",147,0)
 . S ECPR=$S(ECCPT'="":ECCPT_" ",1:ECCPT)_$P(^TMP("ECMPIDX",$J,I),"^",4)
"RTN","ECMLMN",148,0)
 . S X=$$SETSTR^VALM1(ECPR,X,42,VALMWD)
"RTN","ECMLMN",149,0)
 . D SET(X)
"RTN","ECMLMN",150,0)
 . ;set modifier in ^TMP global for display 
"RTN","ECMLMN",151,0)
 . S J="" F  S J=$O(^TMP("ECMPIDX",$J,I,"MOD",J)) Q:J=""  S X="" D
"RTN","ECMLMN",152,0)
 . . S X=$$SETSTR^VALM1("  - "_J_" "_$P(^TMP("ECMPIDX",$J,I,"MOD",J),"^"),X,41,VALMWD)
"RTN","ECMLMN",153,0)
 . . D SET(X)
"RTN","ECMLMN",154,0)
 ;
"RTN","ECMLMN",155,0)
 D SET("")
"RTN","ECMLMN",156,0)
 ;
"RTN","ECMLMN",157,0)
PRDSPQ Q
"RTN","ECMLMN",158,0)
 ;
"RTN","ECMLMN",159,0)
HLPS ;- Brief help
"RTN","ECMLMN",160,0)
 ;
"RTN","ECMLMN",161,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","ECMLMN",162,0)
 Q
"RTN","ECMLMN",163,0)
 ;
"RTN","ECMLMN",164,0)
HELP ;- Help for list
"RTN","ECMLMN",165,0)
 S ECZ=""
"RTN","ECMLMN",166,0)
 I $D(X),X'["??" D HLPS,PAUSE^VALM1 G HLPQ
"RTN","ECMLMN",167,0)
 D CLEAR^VALM1
"RTN","ECMLMN",168,0)
 F I=1:1 S ECZ=$P($T(HELPTXT+I),";",3,99) Q:ECZ="$END"  D PAUSE^VALM1:ECZ="$PAUSE" Q:'Y  W !,$S(ECZ["$PAUSE":"",1:ECZ)
"RTN","ECMLMN",169,0)
 W !,"Possible actions are the following:"
"RTN","ECMLMN",170,0)
 D HLPS,PAUSE^VALM1 S VALMBCK="R"
"RTN","ECMLMN",171,0)
HLPQ K ECZ,Y,I Q
"RTN","ECMLMN",172,0)
 ;
"RTN","ECMLMN",173,0)
EXIT ;- Clean up and exit
"RTN","ECMLMN",174,0)
 ;
"RTN","ECMLMN",175,0)
 K ECPLST
"RTN","ECMLMN",176,0)
  K ^TMP("ECPAT",$J),^TMP("ECMPT",$J)
"RTN","ECMLMN",177,0)
 K VALMDDF
"RTN","ECMLMN",178,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","ECMLMN",179,0)
 Q
"RTN","ECMLMN",180,0)
 ;
"RTN","ECMLMN",181,0)
 ;
"RTN","ECMLMN",182,0)
PATDEL ;- Entry point for EC MUL PAT DEL protocol
"RTN","ECMLMN",183,0)
 ;
"RTN","ECMLMN",184,0)
 N ECFND,ECI,ECSEL,VALMY
"RTN","ECMLMN",185,0)
 S VALMBCK=""
"RTN","ECMLMN",186,0)
 D FULL^VALM1
"RTN","ECMLMN",187,0)
 D EN^VALM2(XQORNOD(0))
"RTN","ECMLMN",188,0)
 S (ECFND,ECSEL)=0
"RTN","ECMLMN",189,0)
 F  S ECSEL=$O(VALMY(ECSEL)) Q:'ECSEL  D
"RTN","ECMLMN",190,0)
 . I $D(^TMP("ECMPTIDX",$J,ECSEL)) K ECDAT S ECDAT=^(ECSEL) D
"RTN","ECMLMN",191,0)
 .. S ECI=0 F  S ECI=$O(^TMP("ECPAT",$J,ECI)) Q:'ECI!(ECFND)  D
"RTN","ECMLMN",192,0)
 ... I $P(ECDAT,"^",2)=ECI S ECFND=1 K ^TMP("ECPAT",$J,ECI) D REMOVNM(ECI)
"RTN","ECMLMN",193,0)
 .. I ECFND=0 W !!,*7,">>> This patient could not be found. <<<" D PAUSE^VALM1 Q
"RTN","ECMLMN",194,0)
 I ECFND=1 D INIT^ECMLMN
"RTN","ECMLMN",195,0)
 S VALMBCK="R"
"RTN","ECMLMN",196,0)
 K ECDAT
"RTN","ECMLMN",197,0)
PATDELQ Q
"RTN","ECMLMN",198,0)
 ;
"RTN","ECMLMN",199,0)
 ;
"RTN","ECMLMN",200,0)
REMOVNM(ECI) ;- Remove patient name from array which tracks dup patients
"RTN","ECMLMN",201,0)
 ;
"RTN","ECMLMN",202,0)
 Q:'$G(ECI)
"RTN","ECMLMN",203,0)
 N ECX
"RTN","ECMLMN",204,0)
 S ECX=0
"RTN","ECMLMN",205,0)
 F  S ECX=$O(^TMP("ECPLST",$J,ECX)) Q:'ECX  D
"RTN","ECMLMN",206,0)
 . I +$P($G(^TMP("ECPLST",$J,ECX)),"^")=ECI K ^TMP("ECPLST",$J,ECX)
"RTN","ECMLMN",207,0)
 Q
"RTN","ECMLMN",208,0)
 ;
"RTN","ECMLMN",209,0)
 ;
"RTN","ECMLMN",210,0)
ADDPAT ;- Entry point for EC MUL PAT ADD protocol
"RTN","ECMLMN",211,0)
 ;
"RTN","ECMLMN",212,0)
 N ECADD,ECOK
"RTN","ECMLMN",213,0)
 S VALMBCK=""
"RTN","ECMLMN",214,0)
 D FULL^VALM1
"RTN","ECMLMN",215,0)
 D ENPAT(.ECOK,1)
"RTN","ECMLMN",216,0)
 I +$G(ECOK)=1 D INIT^ECMLMN
"RTN","ECMLMN",217,0)
 I +$G(ECOK)<0 W !!,*7,">>> No patient entered. <<<" D PAUSE^VALM1
"RTN","ECMLMN",218,0)
 S VALMBCK="R"
"RTN","ECMLMN",219,0)
ADDPATQ Q
"RTN","ECMLMN",220,0)
 ;
"RTN","ECMLMN",221,0)
 ;
"RTN","ECMLMN",222,0)
HELPTXT ; - Help text
"RTN","ECMLMN",223,0)
 ;;Enter actions(s) by typing the name(s), or abbreviation(s).
"RTN","ECMLMN",224,0)
 ;;
"RTN","ECMLMN",225,0)
 ;;ACTION DEFINITIONS:
"RTN","ECMLMN",226,0)
 ;;  AP - Add a Patient allows the user to add a Patient to those
"RTN","ECMLMN",227,0)
 ;;        patients previously entered
"RTN","ECMLMN",228,0)
 ;;  DP - Delete a Patient allows the user to delete a patient from
"RTN","ECMLMN",229,0)
 ;;        those patients previously entered
"RTN","ECMLMN",230,0)
 ;;  FP - File Patients will enter the patients into the Event Capture
"RTN","ECMLMN",231,0)
 ;;        procedure database
"RTN","ECMLMN",232,0)
 ;;  
"RTN","ECMLMN",233,0)
 ;; NOTE: The procedures you have entered with this option MUST be filed
"RTN","ECMLMN",234,0)
 ;;       with the 'FP' action for the data to be filed into the Event
"RTN","ECMLMN",235,0)
 ;;       Capture system.
"RTN","ECMLMN",236,0)
 ;;------------------------------------------------------------------------------
"RTN","ECMLMN",237,0)
 ;;$PAUSE
"RTN","ECMLMN",238,0)
 ;;$END
"RTN","ECMUTL1")
0^12^B56415782^B55736638
"RTN","ECMUTL1",1,0)
ECMUTL1 ;ALB/ESD - Utilities for Multiple Dates/Mult Procs ;20 AUG 1997 13:56
"RTN","ECMUTL1",2,0)
 ;;2.0; EVENT CAPTURE ;**5,10,15,13,17,23,41,42,50,54,76**;8 May 96;Build 6
"RTN","ECMUTL1",3,0)
 ;
"RTN","ECMUTL1",4,0)
 ;
"RTN","ECMUTL1",5,0)
ASKPAT(ECPAT) ; Ask patient
"RTN","ECMUTL1",6,0)
 ;
"RTN","ECMUTL1",7,0)
 ;      Input:  ECPAT = patient DFN and name (passed by reference)
"RTN","ECMUTL1",8,0)
 ;
"RTN","ECMUTL1",9,0)
 ;     Output:      1 = successful
"RTN","ECMUTL1",10,0)
 ;                 -1 = unsuccessful (timed out or uparrowed)
"RTN","ECMUTL1",11,0)
 ;                 -2 = unsuccessful (returned out)
"RTN","ECMUTL1",12,0)
 ;
"RTN","ECMUTL1",13,0)
 N DIC,DUOUT,DTOUT,Y,YY,ECDUP,ECI,ECUP
"RTN","ECMUTL1",14,0)
SEL ;
"RTN","ECMUTL1",15,0)
 S (ECDUP,ECI)=0
"RTN","ECMUTL1",16,0)
 S DIC="^DPT(",DIC(0)="QEAMZ"
"RTN","ECMUTL1",17,0)
 S DIC("A")="Select Patient: "
"RTN","ECMUTL1",18,0)
 D ^DIC
"RTN","ECMUTL1",19,0)
 I Y=-1!($D(DUOUT))!($D(DTOUT)) G ASKPATQ
"RTN","ECMUTL1",20,0)
 ;
"RTN","ECMUTL1",21,0)
 ;- Create ECPLST local array to track duplicate names
"RTN","ECMUTL1",22,0)
 I $O(^TMP("ECPLST",$J,0)) D
"RTN","ECMUTL1",23,0)
 . F  S ECI=$O(^TMP("ECPLST",$J,ECI)) Q:'ECI  D
"RTN","ECMUTL1",24,0)
 .. I +$G(^TMP("ECPLST",$J,ECI))=+Y D
"RTN","ECMUTL1",25,0)
 ... S ECDUP=1
"RTN","ECMUTL1",26,0)
 ... W !!,"Patient already selected.  Please select another patient.",!
"RTN","ECMUTL1",27,0)
 I ECDUP G SEL
"RTN","ECMUTL1",28,0)
 I 'ECDUP D  I $G(ECUP)="^" G SEL
"RTN","ECMUTL1",29,0)
 . S ECPAT=+Y_"^"_$P(Y,"^",2)
"RTN","ECMUTL1",30,0)
 . S YY=Y,DFN=+Y,ECUP="" D 2^VADPT S Y=YY I +VADM(6) D  I ECUP="^" Q
"RTN","ECMUTL1",31,0)
 .. ;NOIS MWV-0603-21781: line below changed by VMP.
"RTN","ECMUTL1",32,0)
 .. W !!,"WARNING "_"[PATIENT DIED ON "_$P(VADM(6),U,2)_"] ",!!
"RTN","ECMUTL1",33,0)
 .. R "Press Return to Continue or ^ to Deselect: ",ECUP:DTIME
"RTN","ECMUTL1",34,0)
 . S ^TMP("ECPLST",$J,($S('$O(^TMP("ECPLST",$J,0)):1,1:$O(^TMP("ECPLST",$J,""),-1)+1)))=+Y_"^"_$P(Y,"^",2)
"RTN","ECMUTL1",35,0)
ASKPATQ Q $S((Y=-1)&($D(DUOUT)!$D(DTOUT)):-1,(Y=-1)&('$D(DUOUT))&('$D(DTOUT)):-2,1:1)
"RTN","ECMUTL1",36,0)
 ;
"RTN","ECMUTL1",37,0)
 ;
"RTN","ECMUTL1",38,0)
ASKORD() ; Ask ordering section
"RTN","ECMUTL1",39,0)
 ;
"RTN","ECMUTL1",40,0)
 ;      Input:   None
"RTN","ECMUTL1",41,0)
 ;
"RTN","ECMUTL1",42,0)
 ;     Output:   Ordering Section ien if successful
"RTN","ECMUTL1",43,0)
 ;               0 if not successful
"RTN","ECMUTL1",44,0)
 ;
"RTN","ECMUTL1",45,0)
 N DIR,DIRUT,Y,ECORD
"RTN","ECMUTL1",46,0)
 S ECORD=0
"RTN","ECMUTL1",47,0)
 S DIR(0)="721,11",DIR("A")="Ordering Section"
"RTN","ECMUTL1",48,0)
 D ^DIR
"RTN","ECMUTL1",49,0)
 I Y=""!($D(DIRUT)) G ASKORDQ
"RTN","ECMUTL1",50,0)
 S ECORD=+Y
"RTN","ECMUTL1",51,0)
ASKORDQ Q +ECORD
"RTN","ECMUTL1",52,0)
 ;
"RTN","ECMUTL1",53,0)
 ;
"RTN","ECMUTL1",54,0)
PCEDAT(ECUNIT,ECSCR,ECPCE) ;get needed PCE data
"RTN","ECMUTL1",55,0)
 ;
"RTN","ECMUTL1",56,0)
 ;   input
"RTN","ECMUTL1",57,0)
 ;   ECUNIT = ien of DSS unit in file #724 (required)
"RTN","ECMUTL1",58,0)
 ;   ECSCR = ien of event code screen in file #720.3 (required);
"RTN","ECMUTL1",59,0)
 ;           but may be null value
"RTN","ECMUTL1",60,0)
 ;   ECPCE  = array, passed by reference (required)
"RTN","ECMUTL1",61,0)
 ;
"RTN","ECMUTL1",62,0)
 ;   output
"RTN","ECMUTL1",63,0)
 ;   ECPCE("CLIN") = associated clinic ien in file #44^clinic name
"RTN","ECMUTL1",64,0)
 ;   ECPCE("DX")   = ien in file #80^icd code
"RTN","ECMUTL1",65,0)
 ;   ECPCE("DXS",) = array of multiple secondary diagnosis, where
"RTN","ECMUTL1",66,0)
 ;                 = ecpce("dxs",n)=v n=dx code and v=dx ien
"RTN","ECMUTL1",67,0)
 ;   ECPCE("AO")   = agent orange indicator
"RTN","ECMUTL1",68,0)
 ;   ECPCE("IR")   = ionizing radiation indicator
"RTN","ECMUTL1",69,0)
 ;   ECPCE("ENV")  = environmental contaminants indicator/south west asia
"RTN","ECMUTL1",70,0)
 ;   ECPCE("SC")   = service connected indicator (Y/N)
"RTN","ECMUTL1",71,0)
 ;   ECPCE("MST")  = military sexual trauma indicator (Y/N)
"RTN","ECMUTL1",72,0)
 ;   ECPCE("HNC")  = head/neck cancer indicator (Y/N)
"RTN","ECMUTL1",73,0)
 ;   ECPCE("CV")   = combat veteran indicator (Y/N)
"RTN","ECMUTL1",74,0)
 ;   ECPCE("SHAD") = P112/SHAD Shipboard Hazard and Defense) (Y/N)
"RTN","ECMUTL1",75,0)
 ;
"RTN","ECMUTL1",76,0)
 ;   returns
"RTN","ECMUTL1",77,0)
 ;   ECOUT  = if normal user input, then "0"
"RTN","ECMUTL1",78,0)
 ;            if user times-out, then "1"
"RTN","ECMUTL1",79,0)
 ;            if user up-arrows out, then "2"
"RTN","ECMUTL1",80,0)
 ;
"RTN","ECMUTL1",81,0)
 N SEND,ECOUT,EC4,EC4N,ECPCL,ECPCID,ECPCRD
"RTN","ECMUTL1",82,0)
 S ECOUT=0
"RTN","ECMUTL1",83,0)
 S ECSCR=+$G(ECSCR)
"RTN","ECMUTL1",84,0)
 S SEND=$P(^ECD(+ECUNIT,0),"^",14)
"RTN","ECMUTL1",85,0)
 I SEND="" S SEND="N"
"RTN","ECMUTL1",86,0)
 S ECPCE("CLIN")="",ECPCE("DX")="",ECPCE("AO")="",ECPCE("IR")=""
"RTN","ECMUTL1",87,0)
 S ECPCE("ENV")="",ECPCE("SC")="",ECPCE("MST")="",ECPCE("HNC")=""
"RTN","ECMUTL1",88,0)
 S ECPCE("CV")="",ECPCE("SHAD")=""
"RTN","ECMUTL1",89,0)
 K ECPCE("DXS")
"RTN","ECMUTL1",90,0)
 I "AO"[SEND D
"RTN","ECMUTL1",91,0)
 .;- Don't write message if Send to PCE = "O" and patient is an inpatient
"RTN","ECMUTL1",92,0)
 .I SEND="A"!(SEND="O"&(ECPCE("I/O")="O")) D
"RTN","ECMUTL1",93,0)
 ..W !!,?5,"Please Note: The following prompt(s) cannot be by-passed with"
"RTN","ECMUTL1",94,0)
 ..W !,?5,"<cr>, since the data is sent to PCE for workload reporting."
"RTN","ECMUTL1",95,0)
 ..W !,?5,"If data cannot be provided, respond with ""^"".  This will"
"RTN","ECMUTL1",96,0)
 ..W !,?5,"remove the current patient from the selected patient list.",!
"RTN","ECMUTL1",97,0)
 .D CLINIC I $G(ECOUT) D MSGCLN Q
"RTN","ECMUTL1",98,0)
 .D ASKDX I $G(ECOUT) D MSGDX Q
"RTN","ECMUTL1",99,0)
 .D VISIT I $G(ECOUT) D CLMSG Q
"RTN","ECMUTL1",100,0)
 I ECSCR,(ECPCE("CLIN")=""),('$G(ECOUT)) D
"RTN","ECMUTL1",101,0)
 .Q:'$D(^ECJ(ECSCR))
"RTN","ECMUTL1",102,0)
 .I ECUNIT'=$P($P(^ECJ(ECSCR,0),"^",1),"-",2) Q
"RTN","ECMUTL1",103,0)
 .S EC4=$P($G(^ECJ(ECSCR,"PRO")),"^",4) I +EC4 D
"RTN","ECMUTL1",104,0)
 ..S EC4N=$P($G(^SC(+EC4,0)),"^",1)
"RTN","ECMUTL1",105,0)
 ..D CLIN(EC4,.ECPCL)
"RTN","ECMUTL1",106,0)
 ..S:ECPCL ECPCE("CLIN")=EC4_"^"_EC4N
"RTN","ECMUTL1",107,0)
 ..S:'ECPCL ECPCE("CLIN")=""
"RTN","ECMUTL1",108,0)
 Q ECOUT
"RTN","ECMUTL1",109,0)
 ;
"RTN","ECMUTL1",110,0)
ASKDX ;ask dx
"RTN","ECMUTL1",111,0)
 N ECDX,ECDXN,DTOUT,DUOUT,DIRUT,DIR,Y,EC4,ECDXS
"RTN","ECMUTL1",112,0)
 S (ECDX,ECDXN)="",EC4=$P(ECPCE("CLIN"),U)
"RTN","ECMUTL1",113,0)
 D PDX^ECUTL2 I ECOUT Q
"RTN","ECMUTL1",114,0)
 S ECPCE("DX")=ECDX_"^"_ECDXN
"RTN","ECMUTL1",115,0)
 D SDX^ECUTL2 I ECOUT Q
"RTN","ECMUTL1",116,0)
 M ECPCE("DXS")=ECDXS
"RTN","ECMUTL1",117,0)
 Q
"RTN","ECMUTL1",118,0)
 ;
"RTN","ECMUTL1",119,0)
CLINIC ;get associated clinic
"RTN","ECMUTL1",120,0)
 N ECDATA,EC4,EC4N,ECID,ECPCL,DTOUT,DUOUT,DIRUT,DIR,Y
"RTN","ECMUTL1",121,0)
 Q:SEND="O"&(ECPCE("I/O")'="O")
"RTN","ECMUTL1",122,0)
 F  D  Q:$G(ECOUT)  Q:$G(ECPCL) 
"RTN","ECMUTL1",123,0)
 .K DA,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECMUTL1",124,0)
 .S (EC4,ECPCL)=0,EC4N=""
"RTN","ECMUTL1",125,0)
 .S DIR(0)="721,26",DIR("A")="Associated Clinic",DIR("?")="An active clinic is required. Enter an active clinic or an ^ to exit"
"RTN","ECMUTL1",126,0)
 .D ^DIR
"RTN","ECMUTL1",127,0)
 .S:$D(DTOUT) ECOUT=1 S:$D(DUOUT) ECOUT=2
"RTN","ECMUTL1",128,0)
 .Q:$G(ECOUT)
"RTN","ECMUTL1",129,0)
 .I 'Y W !!?5,"You must enter an active clinic now.",! Q
"RTN","ECMUTL1",130,0)
 .I Y S EC4=+Y,ECDATA=$G(^SC(+EC4,0)),ECID=$P(ECDATA,"^",7),EC4N=$P(ECDATA,"^",1)
"RTN","ECMUTL1",131,0)
 .I $G(EC4) D CLIN(EC4,.ECPCL) I 'ECPCL D
"RTN","ECMUTL1",132,0)
 ..W !!,?5,"The clinic you selected is inactive."
"RTN","ECMUTL1",133,0)
 ..W !,?5,"Workload data cannot be sent to PCE for Event"
"RTN","ECMUTL1",134,0)
 ..W !,?5,"Capture procedures without an active clinic."
"RTN","ECMUTL1",135,0)
 .I 'ECPCL W !!?5,"You must enter an active clinic now.",!
"RTN","ECMUTL1",136,0)
 Q:'$G(ECPCL)
"RTN","ECMUTL1",137,0)
 S ECPCE("CLIN")=EC4_"^"_EC4N
"RTN","ECMUTL1",138,0)
 Q
"RTN","ECMUTL1",139,0)
 ;
"RTN","ECMUTL1",140,0)
 ;
"RTN","ECMUTL1",141,0)
VISIT ;ask visit info
"RTN","ECMUTL1",142,0)
 N ECFLG,ECCLFLDS,ECCLVAR,ECX,ECAO,ECIR,ECMST,ECSC,ECZEC,ECHNC,ECCV,ECMDT
"RTN","ECMUTL1",143,0)
 N ECY,ECMD,ECDT,ECSHAD
"RTN","ECMUTL1",144,0)
 Q:ECPCE("I/O")="I"
"RTN","ECMUTL1",145,0)
 S (ECAO,ECIR,ECSC,ECZEC,ECX,ECMST,ECHNC,ECCV,ECSHAD)="",ECY=0
"RTN","ECMUTL1",146,0)
 F  S ECY=$O(^TMP("ECMPIDX",$J,ECY)) Q:'ECY  S ECMD=^(ECY) I $P(ECMD,U,2) D
"RTN","ECMUTL1",147,0)
 .S ECMDT($P(ECMD,U,2))=""
"RTN","ECMUTL1",148,0)
 S ECDT=$O(ECMDT(0)) ;use earliest date to evaluate classifications
"RTN","ECMUTL1",149,0)
 ;
"RTN","ECMUTL1",150,0)
 ;- Ask classification questions applicable to patient and file in #721
"RTN","ECMUTL1",151,0)
 I $$ASKCLASS^ECUTL1(+$G(ECPAT),.ECCLFLDS,.ECOUT,SEND,ECPCE("I/O")),($O(ECCLFLDS(""))]"") D SETCLASS^ECUTL1(.ECCLFLDS)
"RTN","ECMUTL1",152,0)
 Q:+$G(ECOUT)
"RTN","ECMUTL1",153,0)
 ;
"RTN","ECMUTL1",154,0)
 ;- Store classification variables into ECPCE array
"RTN","ECMUTL1",155,0)
 F ECCLVAR="ECAO","ECIR","ECZEC","ECSC","ECMST","ECHNC","ECCV","ECSHAD" I @($G(ECCLVAR))]"" S ECPCE($S($E(ECCLVAR,3,$L(ECCLVAR))'="ZEC":$E(ECCLVAR,3,$L(ECCLVAR)),1:"ENV"))=@ECCLVAR
"RTN","ECMUTL1",156,0)
 Q
"RTN","ECMUTL1",157,0)
 ;
"RTN","ECMUTL1",158,0)
 ;
"RTN","ECMUTL1",159,0)
CLIN(EC4,ECPCL) ;check for active associated clinic
"RTN","ECMUTL1",160,0)
 N ECPCID,ECPCRD
"RTN","ECMUTL1",161,0)
 D CLIN^ECPCEU
"RTN","ECMUTL1",162,0)
 Q
"RTN","ECMUTL1",163,0)
 ;
"RTN","ECMUTL1",164,0)
 ;
"RTN","ECMUTL1",165,0)
MSGDX ;if ecout & essential data missing, display msg
"RTN","ECMUTL1",166,0)
 Q:SEND="N"  Q:SEND="O"&(ECPCE("I/O")'="O")
"RTN","ECMUTL1",167,0)
 I ECPCE("DX")="" D  Q
"RTN","ECMUTL1",168,0)
 .W !!,?5,"Please note that data cannot be sent to PCE"
"RTN","ECMUTL1",169,0)
 .W !,?5,"for workload reporting without an ICD-9 code.",!
"RTN","ECMUTL1",170,0)
 .D MSG1
"RTN","ECMUTL1",171,0)
 Q
"RTN","ECMUTL1",172,0)
 ;
"RTN","ECMUTL1",173,0)
MSGCLN ;if ecout & essential data missing, display msg
"RTN","ECMUTL1",174,0)
 Q:SEND="N"  Q:SEND="O"&(ECPCE("I/O")'="O")
"RTN","ECMUTL1",175,0)
 I ECPCE("CLIN")="" D  Q
"RTN","ECMUTL1",176,0)
 .W !!,?5,"Please note that data cannot be sent to PCE for workload"
"RTN","ECMUTL1",177,0)
 .W !,?5,"reporting without an active associated clinic.",!
"RTN","ECMUTL1",178,0)
 .D MSG1
"RTN","ECMUTL1",179,0)
 Q
"RTN","ECMUTL1",180,0)
 ;
"RTN","ECMUTL1",181,0)
CLMSG ; Display classification questions error message
"RTN","ECMUTL1",182,0)
 Q:SEND="N"  Q:ECPCE("I/O")'="O"
"RTN","ECMUTL1",183,0)
 W !!,?5,"Please note that data cannot be sent to PCE for workload reporting"
"RTN","ECMUTL1",184,0)
 W !,?5,"unless the classification questions are answered.",!
"RTN","ECMUTL1",185,0)
 D MSG1
"RTN","ECMUTL1",186,0)
 Q
"RTN","ECMUTL1",187,0)
 ;
"RTN","ECMUTL1",188,0)
 ;
"RTN","ECMUTL1",189,0)
MSG1 ;Error message display
"RTN","ECMUTL1",190,0)
 N DIR,Y
"RTN","ECMUTL1",191,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue"
"RTN","ECMUTL1",192,0)
 D ^DIR
"RTN","ECMUTL1",193,0)
 W !
"RTN","ECMUTL1",194,0)
 Q
"RTN","ECMUTL1",195,0)
 ;
"RTN","ECMUTL1",196,0)
 ;
"RTN","ECMUTL1",197,0)
INOUT(ECPTIEN,ECARRY) ; Determine inpatient/outpatient status
"RTN","ECMUTL1",198,0)
 ;
"RTN","ECMUTL1",199,0)
 N ECOUT
"RTN","ECMUTL1",200,0)
 S ECOUT=0
"RTN","ECMUTL1",201,0)
 S ECARRY=$G(ECARRY)
"RTN","ECMUTL1",202,0)
 S ECPTIEN=+$G(ECPTIEN)
"RTN","ECMUTL1",203,0)
 ;
"RTN","ECMUTL1",204,0)
 ; - If ECARRY not defined, use ^TMP("ECMPIDX",$J)
"RTN","ECMUTL1",205,0)
 S:(ECARRY="") ECARRY="^TMP(""ECMPIDX"",$J)"
"RTN","ECMUTL1",206,0)
 ;
"RTN","ECMUTL1",207,0)
 S ECPCE("I/O")=$$INOUTPT^ECUTL0(ECPTIEN,+$P(@ECARRY@(+$O(@ECARRY@(""),-1)),"^",2))
"RTN","ECMUTL1",208,0)
 I ECPCE("I/O")="" D INOUTERR^ECUTL0
"RTN","ECMUTL1",209,0)
 Q $S(+$G(ECOUT)=0:1,1:0)
"RTN","ECMUTL1",210,0)
 ;
"RTN","ECMUTL1",211,0)
 ;
"RTN","ECMUTL1",212,0)
ASKELIG(ECDSS,ECIO,ECPTIEN) ; Determine patient eligibility
"RTN","ECMUTL1",213,0)
 ;
"RTN","ECMUTL1",214,0)
 ;   Input:
"RTN","ECMUTL1",215,0)
 ;      ECDSS - DSS Unit IEN
"RTN","ECMUTL1",216,0)
 ;      ECIO - Inpatient or Outpatient
"RTN","ECMUTL1",217,0)
 ;      ECPTIEN - DFN of Patient file (#2)
"RTN","ECMUTL1",218,0)
 ;
"RTN","ECMUTL1",219,0)
 ;  Output:
"RTN","ECMUTL1",220,0)
 ;      ECPCE("ELIG") - containing patient eligibility
"RTN","ECMUTL1",221,0)
 ;
"RTN","ECMUTL1",222,0)
 N VAEL
"RTN","ECMUTL1",223,0)
 S ECDSS=+$G(ECDSS)
"RTN","ECMUTL1",224,0)
 S ECIO=$G(ECIO)
"RTN","ECMUTL1",225,0)
 S ECPTIEN=+$G(ECPTIEN)
"RTN","ECMUTL1",226,0)
 ;
"RTN","ECMUTL1",227,0)
 ;- Get elig if Send to PCE="A" or Send to PCE="O" and outpatient
"RTN","ECMUTL1",228,0)
 I $$CHKDSS^ECUTL0(+$G(ECDSS),ECIO) D
"RTN","ECMUTL1",229,0)
 . ;
"RTN","ECMUTL1",230,0)
 . ;- If dual elig, ask user to select otherwise use primary elig
"RTN","ECMUTL1",231,0)
 . I $$MULTELG^ECUTL0(+$G(ECPTIEN)) S ECPCE("ELIG")=+$$ELGLST^ECUTL0
"RTN","ECMUTL1",232,0)
 . E  S ECPCE("ELIG")=+$G(VAEL(1))
"RTN","ECMUTL1",233,0)
 Q
"RTN","ECMUTL1",234,0)
 ;
"RTN","ECMUTL1",235,0)
REMOVE(ECPAT) ; Remove patient from selected patient list because required data missing
"RTN","ECMUTL1",236,0)
 N DFN,ECI
"RTN","ECMUTL1",237,0)
 S DFN=+ECPAT,ECI=0
"RTN","ECMUTL1",238,0)
 F  S ECI=$O(^TMP("ECPLST",$J,ECI)) Q:'ECI  D
"RTN","ECMUTL1",239,0)
 .I +$G(^TMP("ECPLST",$J,ECI))=DFN D
"RTN","ECMUTL1",240,0)
 ..K ^TMP("ECPLST",$J,ECI),^TMP("ECMPTIDX",$J,ECI),^TMP("ECPAT",$J,DFN)
"RTN","ECMUTL1",241,0)
 ..W !?5,"Patient deselected because required data missing.",!
"RTN","ECMUTL1",242,0)
 ..D MSG1
"RTN","ECMUTL1",243,0)
 Q
"RTN","ECPCEU")
0^3^B30381231^B29653566
"RTN","ECPCEU",1,0)
ECPCEU ;BIR/JPW-ECS to PCE Utilities ;7 Jan 97
"RTN","ECPCEU",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,7,10,17,18,23,42,54,73,72,95,76**;8 May 96;Build 6
"RTN","ECPCEU",3,0)
CLIN ;check for active inactive clinic
"RTN","ECPCEU",4,0)
 N ECCLDT
"RTN","ECPCEU",5,0)
 I $L($G(ECDT))>6,+ECDT=ECDT S ECCLDT=ECDT
"RTN","ECPCEU",6,0)
 I '$G(ECCLDT) S ECCLDT=DT
"RTN","ECPCEU",7,0)
 K ECPCL
"RTN","ECPCEU",8,0)
 I '$D(EC4) S ECPCL=0 Q
"RTN","ECPCEU",9,0)
 I 'EC4 S ECPCL=0 Q
"RTN","ECPCEU",10,0)
 I '$D(^SC(+EC4,"I")) S ECPCL=1 Q
"RTN","ECPCEU",11,0)
 S ECPCID=+$P(^SC(+EC4,"I"),"^"),ECPCRD=+$P(^("I"),"^",2)
"RTN","ECPCEU",12,0)
 I ECPCID,ECPCID'>ECCLDT I 'ECPCRD!(ECPCRD>ECCLDT) S ECPCL=0 Q
"RTN","ECPCEU",13,0)
 I ECPCID,ECPCRD,ECPCRD'>ECCLDT S ECPCL=1 Q
"RTN","ECPCEU",14,0)
 I ECPCID,ECPCID>ECCLDT S ECPCL=1 Q
"RTN","ECPCEU",15,0)
 S ECPCL=1
"RTN","ECPCEU",16,0)
 K ECPCID,ECPCRD
"RTN","ECPCEU",17,0)
 Q
"RTN","ECPCEU",18,0)
NITE ;start nightly job
"RTN","ECPCEU",19,0)
 K ^TMP("ECPXAPI",$J)
"RTN","ECPCEU",20,0)
 D NOW^%DTC S ECCKDT=+$E(%,1,12)
"RTN","ECPCEU",21,0)
 S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECS="EVENT CAPTURE DATA"
"RTN","ECPCEU",22,0)
 S ECJJ=0 F  S ECJJ=$O(^ECH("AD",ECJJ)) Q:'ECJJ  S ECJJ1=0 F  S ECJJ1=$O(^ECH("AD",ECJJ,ECJJ1)) Q:'ECJJ1  I $D(^ECH(ECJJ1,"PCE")) D SET
"RTN","ECPCEU",23,0)
 K DA,DIE,DR,EC4,EC725,ECAO,ECCPT,ECDT,ECDX,ECHL,ECID,ECIR,ECJJ,ECJJ1,ECL,ECNODE,ECPKG,ECPS,ECS,ECSC,ECV,ECVST,ECVV,ECZEC,ECMST,ECHNC,ECCV,ECSHAD,ECDFAPT,CNT,ECPRVARY,ECPRV,ECUSR
"RTN","ECPCEU",24,0)
 K %,%H,%I,ECCKDT
"RTN","ECPCEU",25,0)
 K ^TMP("ECPXAPI",$J)
"RTN","ECPCEU",26,0)
 Q
"RTN","ECPCEU",27,0)
SET ;set variables
"RTN","ECPCEU",28,0)
 S ECNODE=^ECH(ECJJ1,"PCE"),ECDT=$P(ECNODE,"~"),ECPS=$P(ECNODE,"~",2),ECHL=$P(ECNODE,"~",3),ECL=$P(ECNODE,"~",4),ECID=$P(ECNODE,"~",5),ECV=$P(ECNODE,"~",9),ECUSR=$P($G(^ECH(ECJJ1,0)),U,13)
"RTN","ECPCEU",29,0)
 S ECCPT=$P(ECNODE,"~",10),ECDX=$P(ECNODE,"~",11),ECAO=$P(ECNODE,"~",12),ECIR=$P(ECNODE,"~",13),ECZEC=$P(ECNODE,"~",14),ECSC=$P(ECNODE,"~",15),EC725=$P(ECNODE,"~",16),ECELIG=$P(ECNODE,"~",17),ECMST=$P(ECNODE,"~",18)
"RTN","ECPCEU",30,0)
 S ECHNC=$P(ECNODE,"~",19),ECCV=$P(ECNODE,"~",20),ECSHAD=$P(ECNODE,"~",21)
"RTN","ECPCEU",31,0)
 ; EC*2.0*73 next line added to get default appt type if defined
"RTN","ECPCEU",32,0)
 S ECDFAPT="" S:$D(^SC(ECHL,"AT")) ECDFAPT=+$G(^SC(ECHL,"AT"))
"RTN","ECPCEU",33,0)
TMP ;set ^TMP for PCE call
"RTN","ECPCEU",34,0)
ENC S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"ENC D/T")=ECDT
"RTN","ECPCEU",35,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"PATIENT")=ECPS
"RTN","ECPCEU",36,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"HOS LOC")=ECHL
"RTN","ECPCEU",37,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"INSTITUTION")=ECL
"RTN","ECPCEU",38,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"APPT")=ECDFAPT  ; added EC*2.0*73
"RTN","ECPCEU",39,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"SC")=ECSC
"RTN","ECPCEU",40,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"AO")=ECAO
"RTN","ECPCEU",41,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"IR")=ECIR
"RTN","ECPCEU",42,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"EC")=ECZEC
"RTN","ECPCEU",43,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"MST")=ECMST
"RTN","ECPCEU",44,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"HNC")=ECHNC
"RTN","ECPCEU",45,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"CV")=ECCV
"RTN","ECPCEU",46,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"SHAD")=ECSHAD
"RTN","ECPCEU",47,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"SERVICE CATEGORY")="X"
"RTN","ECPCEU",48,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"ENCOUNTER TYPE")="A"
"RTN","ECPCEU",49,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"DSS ID")=ECID
"RTN","ECPCEU",50,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"CHECKOUT D/T")=ECCKDT
"RTN","ECPCEU",51,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"ELIGIBILITY")=ECELIG
"RTN","ECPCEU",52,0)
PROV ;Set providers in ^TMP("ECPXAPI",$J,"PROVIDER",n,"NAME")=provider
"RTN","ECPCEU",53,0)
 K ECPRVARY S ECPRV=$$GETPRV^ECPRVMUT(ECJJ1,.ECPRVARY),ECI=0
"RTN","ECPCEU",54,0)
 ;set primary provider in ^TMP global
"RTN","ECPCEU",55,0)
 F  S ECI=$O(ECPRVARY(ECI)) Q:'ECI  I $P(ECPRVARY(ECI),U,3)="P" D  Q
"RTN","ECPCEU",56,0)
 .S ^TMP("ECPXAPI",$J,"PROVIDER",1,"NAME")=$P(ECPRVARY(ECI),U)
"RTN","ECPCEU",57,0)
 .S ^TMP("ECPXAPI",$J,"PROVIDER",1,"PRIMARY")=1
"RTN","ECPCEU",58,0)
 .S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"ENC PROVIDER")=$P(ECPRVARY(ECI),U)
"RTN","ECPCEU",59,0)
 .K ECPRVARY(ECI)
"RTN","ECPCEU",60,0)
 ;set secondary providers in ^TMP global
"RTN","ECPCEU",61,0)
 S ECI=0,CNT=2 F  S ECI=$O(ECPRVARY(ECI)) Q:'ECI  D
"RTN","ECPCEU",62,0)
 .S ^TMP("ECPXAPI",$J,"PROVIDER",CNT,"NAME")=$P(ECPRVARY(ECI),U),CNT=CNT+1
"RTN","ECPCEU",63,0)
 I $O(^ECH(ECJJ1,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECJJ1,"E",.ECMOD) D
"RTN","ECPCEU",64,0)
 . I ECMODF S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPCEU",65,0)
 . . S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"MODIFIERS",MOD)=""
"RTN","ECPCEU",66,0)
DX S ^TMP("ECPXAPI",$J,"DX/PL",1,"DIAGNOSIS")=ECDX
"RTN","ECPCEU",67,0)
 S ^TMP("ECPXAPI",$J,"DX/PL",1,"PRIMARY")=1
"RTN","ECPCEU",68,0)
 ;Set secondary diagnosis codes in ^TMP("ECPXAPI",$J,"DX/PL",1,"DIAGNOSIS",diagnosis
"RTN","ECPCEU",69,0)
 S DXS=0 F ECI=2:1 S DXS=$O(^ECH(ECJJ1,"DX",DXS)) Q:DXS=""  D
"RTN","ECPCEU",70,0)
 . S DXSIEN=$G(^ECH(ECJJ1,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECPCEU",71,0)
 . S ^TMP("ECPXAPI",$J,"DX/PL",ECI,"DIAGNOSIS")=DXSIEN
"RTN","ECPCEU",72,0)
PROC S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"EVENT D/T")=ECDT
"RTN","ECPCEU",73,0)
 S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"PROCEDURE")=ECCPT
"RTN","ECPCEU",74,0)
 S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"QTY")=ECV
"RTN","ECPCEU",75,0)
 S:EC725]"" ^TMP("ECPXAPI",$J,"PROCEDURE",1,"NARRATIVE")=EC725
"RTN","ECPCEU",76,0)
MOD ;Set modifiers in ^TMP("ECPXAPI",$J,"PROCEDURE",1,"MODIFIERS",modifier
"RTN","ECPCEU",77,0)
 I $O(^ECH(ECJJ1,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECJJ1,"E",.ECMOD) D
"RTN","ECPCEU",78,0)
 . I ECMODF S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPCEU",79,0)
 . . S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"MODIFIERS",MOD)=""
"RTN","ECPCEU",80,0)
D2PCE S VALQUIET=1,ECVV=$$DATA2PCE^PXAPI("^TMP(""ECPXAPI"",$J)",ECPKG,ECS,.ECVST,ECUSR)
"RTN","ECPCEU",81,0)
 I ECVST K DA,DIE,DR S DA=ECJJ1,DIE=721,DR="25////1;31///@;28////"_ECVST_";32////"_ECCKDT D ^DIE K DA,DIE,DR
"RTN","ECPCEU",82,0)
 K ^TMP("ECPXAPI",$J),ECVST,VALQUIET,MOD,ECMODF,ECMOD,ECI,DXSIEN,DXS
"RTN","ECPCEU",83,0)
 K DA,D0,DIE,DR,EC725,ECAO,ECCPT,ECDT,ECDX,ECHL,ECID,ECIR,ECNODE,ECPS,ECSC,ECV,ECVV,ECZEC,ECELIG,ECMST,ECHNC,ECCV,ECSHAD,CNT,ECPRVARY,ECPRV
"RTN","ECPCEU",84,0)
 Q
"RTN","ECPCEU",85,0)
 ;
"RTN","ECPCEU",86,0)
PCETASK(ECPCE) ;Set up task for transfer to PCE
"RTN","ECPCEU",87,0)
 ;
"RTN","ECPCEU",88,0)
 ;  Input:
"RTN","ECPCEU",89,0)
 ;    ECPCE - [pass by reference] array subscripted by FM date/time
"RTN","ECPCEU",90,0)
 ;            and pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECPCEU",91,0)
 ;            [ex: ECPCE(3080101.140425,611)]
"RTN","ECPCEU",92,0)
 ;
"RTN","ECPCEU",93,0)
 ;  Output:
"RTN","ECPCEU",94,0)
 ;   Function value - Task ID on success; 0 on failure
"RTN","ECPCEU",95,0)
 ;
"RTN","ECPCEU",96,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","ECPCEU",97,0)
 S ZTIO=""
"RTN","ECPCEU",98,0)
 S ZTRTN="XFER2PCE^ECPCEU"
"RTN","ECPCEU",99,0)
 S ZTDESC="ECS2PCE TRANSFER"
"RTN","ECPCEU",100,0)
 S ZTDTH=$$NOW^XLFDT()
"RTN","ECPCEU",101,0)
 S ZTSAVE("ECPCE(")=""
"RTN","ECPCEU",102,0)
 D ^%ZTLOAD
"RTN","ECPCEU",103,0)
 Q $S($D(ZTSK):ZTSK,1:0)
"RTN","ECPCEU",104,0)
 ;
"RTN","ECPCEU",105,0)
XFER2PCE ;Task entry point for single ECS record xfer to PCE
"RTN","ECPCEU",106,0)
 ;Input from Task: ECPCE -array subscripted by date and pointer
"RTN","ECPCEU",107,0)
 ;                 to EVENT CAPTURE PATIENT (#721) file
"RTN","ECPCEU",108,0)
 ;                 [Ex: ECPCE(3080101,611)]
"RTN","ECPCEU",109,0)
 ;
"RTN","ECPCEU",110,0)
 N ECPKG  ;package name
"RTN","ECPCEU",111,0)
 N ECS    ;source
"RTN","ECPCEU",112,0)
 N ECCKDT  ;check-out date/time
"RTN","ECPCEU",113,0)
 N ECJJ   ;date iterator
"RTN","ECPCEU",114,0)
 N ECJJ1  ;file #721 IEN iterator
"RTN","ECPCEU",115,0)
 K ^TMP("ECPXAPI",$J)
"RTN","ECPCEU",116,0)
 D NOW^%DTC S ECCKDT=+$E(%,1,12)
"RTN","ECPCEU",117,0)
 S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECS="EVENT CAPTURE DATA"
"RTN","ECPCEU",118,0)
 S ECJJ=0 F  S ECJJ=$O(ECPCE(ECJJ)) Q:'ECJJ  D
"RTN","ECPCEU",119,0)
 . S ECJJ1=0
"RTN","ECPCEU",120,0)
 . F  S ECJJ1=$O(ECPCE(ECJJ,ECJJ1)) Q:'ECJJ1  D
"RTN","ECPCEU",121,0)
 . . I $D(^ECH(ECJJ1,"PCE")) D SET
"RTN","ECPCEU",122,0)
 K DA,DIE,DR,EC4,EC725,ECAO,ECCPT,ECDT,ECDX,ECHL,ECID,ECIR,ECJJ,ECJJ1,ECL,ECNODE,ECPKG,ECPS,ECS,ECSC,ECV,ECVST,ECVV,ECZEC,ECMST,ECHNC,ECCV,ECDFAPT,CNT,ECPRVARY,ECPRV,ECUSR
"RTN","ECPCEU",123,0)
 K %,%H,%I,ECCKDT
"RTN","ECPCEU",124,0)
 K ^TMP("ECPXAPI",$J)
"RTN","ECPCEU",125,0)
 S ZTREQ="@"
"RTN","ECPCEU",126,0)
 Q
"RTN","ECUERPC1")
0^15^B53314567^B52615700
"RTN","ECUERPC1",1,0)
ECUERPC1 ;ALB/JAM;Event Capture Data Entry Broker Util ; 5/21/01 7:30pm
"RTN","ECUERPC1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,33,42,46,47,54,72,76**;8 May 96;Build 6
"RTN","ECUERPC1",3,0)
PATINF(RESULTS,ECARY) ;
"RTN","ECUERPC1",4,0)
 ;Broker entry point to get various types of data from EVENT CAPTURE 
"RTN","ECUERPC1",5,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",6,0)
 ;        RPC: EC GETPATINFO
"RTN","ECUERPC1",7,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC1",8,0)
 ;          ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",9,0)
 ;          ECTYP - Data type to return
"RTN","ECUERPC1",10,0)
 ;
"RTN","ECUERPC1",11,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data
"RTN","ECUERPC1",12,0)
 ;
"RTN","ECUERPC1",13,0)
 N ECTYP,ECIEN
"RTN","ECUERPC1",14,0)
 S ECARY=$G(ECARY),ECIEN=$P(ECARY,U),ECTYP=$P(ECARY,U,2) I ECIEN="" Q
"RTN","ECUERPC1",15,0)
 I '$D(^ECH(ECIEN)) Q
"RTN","ECUERPC1",16,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",17,0)
 I ECTYP="DXS" D PATDXS(ECIEN) Q
"RTN","ECUERPC1",18,0)
 I ECTYP="MOD" D PATMOD(ECIEN) Q
"RTN","ECUERPC1",19,0)
 I ECTYP="CLASS" D PATCLASS(ECIEN) Q
"RTN","ECUERPC1",20,0)
 I ECTYP="OTH" D PATOTH(ECIEN) Q
"RTN","ECUERPC1",21,0)
 I ECTYP="PRV" D PATPRV^ECUERPC2(ECIEN) Q
"RTN","ECUERPC1",22,0)
 Q
"RTN","ECUERPC1",23,0)
PATDXS(ECIEN) ;
"RTN","ECUERPC1",24,0)
 ;Returns to broker a patient secondary DXs entries from EVENT 
"RTN","ECUERPC1",25,0)
 ;CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",26,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",27,0)
 ;
"RTN","ECUERPC1",28,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient file contains
"RTN","ECUERPC1",29,0)
 ;          721 IEN^secondary dx ien #80^secondary dx code^dx description
"RTN","ECUERPC1",30,0)
 ;
"RTN","ECUERPC1",31,0)
 N DXS,DXSIEN,DXSD,CNT
"RTN","ECUERPC1",32,0)
 I '$D(^ECH(ECIEN,"DX")) Q
"RTN","ECUERPC1",33,0)
 K ^TMP($J,"ECDXS")
"RTN","ECUERPC1",34,0)
 S (CNT,DXS)=0 F  S DXS=$O(^ECH(ECIEN,"DX",DXS)) Q:'DXS  D
"RTN","ECUERPC1",35,0)
 . S DXSIEN=$G(^ECH(ECIEN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECUERPC1",36,0)
 . S DXSD=$$ICDDX^ICDCODE(DXSIEN,$P($G(^ECH(ECIEN,0)),U,3))
"RTN","ECUERPC1",37,0)
 . S DXSD=$P(DXSD,U,2)_"   "_$P(DXSD,U,4)
"RTN","ECUERPC1",38,0)
 . S CNT=CNT+1,^TMP($J,"ECDXS",CNT)=ECIEN_U_DXSIEN_U_DXSD
"RTN","ECUERPC1",39,0)
 S RESULTS=$NA(^TMP($J,"ECDXS"))
"RTN","ECUERPC1",40,0)
 Q
"RTN","ECUERPC1",41,0)
PATMOD(ECIEN) ;
"RTN","ECUERPC1",42,0)
 ;Returns to broker a patient procedure modifier from EVENT CAPTURE
"RTN","ECUERPC1",43,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",44,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",45,0)
 ;
"RTN","ECUERPC1",46,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",47,0)
 ;          721 IEN^modifier ien #81.3^modifier^modifier name
"RTN","ECUERPC1",48,0)
 ;
"RTN","ECUERPC1",49,0)
 N MOD,MODIEN,CNT,MODS
"RTN","ECUERPC1",50,0)
 I '$D(^ECH(ECIEN,"MOD")) Q
"RTN","ECUERPC1",51,0)
 K ^TMP($J,"ECMOD")
"RTN","ECUERPC1",52,0)
 S (CNT,MOD)=0 F  S MOD=$O(^ECH(ECIEN,"MOD",MOD)) Q:'MOD  D
"RTN","ECUERPC1",53,0)
 . S MODIEN=$G(^ECH(ECIEN,"MOD",MOD,0)) I MODIEN="" Q
"RTN","ECUERPC1",54,0)
 . S MODS=$$MOD^ICPTMOD(MODIEN,"I",$P($G(^ECH(ECIEN,0)),U,3)) I +MODS<0 Q
"RTN","ECUERPC1",55,0)
 . S CNT=CNT+1
"RTN","ECUERPC1",56,0)
 . S ^TMP($J,"ECMOD",CNT)=ECIEN_U_$P(MODS,U,1,2)_"  "_$P(MODS,U,3)
"RTN","ECUERPC1",57,0)
 S RESULTS=$NA(^TMP($J,"ECMOD"))
"RTN","ECUERPC1",58,0)
 Q
"RTN","ECUERPC1",59,0)
PATCLASS(ECIEN) ;
"RTN","ECUERPC1",60,0)
 ;Returns to broker a patient classification & eligibility data from
"RTN","ECUERPC1",61,0)
 ;EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",62,0)
 ; INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",63,0)
 ; OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",64,0)
 ;  721 IEN^agent orange^radiation exposure^service connect^environmental
"RTN","ECUERPC1",65,0)
 ;  contaminants/SWAC^military sexual trauma^eligibility code #8^
"RTN","ECUERPC1",66,0)
 ;  eligibility description^head/neck cancer^combat veteran^P112/SHAD
"RTN","ECUERPC1",67,0)
 ;
"RTN","ECUERPC1",68,0)
 N CLA,ELIG,ELCOD,ECAO,ECIR,ECEC,ECSC,ECMST,STR,ECHNC,ECCV,ECSHAD
"RTN","ECUERPC1",69,0)
 I '$D(^ECH(ECIEN,"P")),'$D(^ECH(ECIEN,"PCE")) Q
"RTN","ECUERPC1",70,0)
 K ^TMP($J,"ECLASS")
"RTN","ECUERPC1",71,0)
 S ELIG=$P($G(^ECH(ECIEN,"PCE")),"~",17),ELCOD="",CLA=$G(^ECH(ECIEN,"P"))
"RTN","ECUERPC1",72,0)
 S:ELIG'="" ELCOD=$P($G(^DIC(8,ELIG,0)),U)
"RTN","ECUERPC1",73,0)
 S ECAO=$P(CLA,U,3),ECIR=$P(CLA,U,4),ECEC=$P(CLA,U,5),ECSC=$P(CLA,U,6)
"RTN","ECUERPC1",74,0)
 S ECMST=$P(CLA,U,9),ECHNC=$P(CLA,U,10),ECCV=$P(CLA,U,11),ECSHAD=$P(CLA,U,12)
"RTN","ECUERPC1",75,0)
 S STR=ECIEN_U_ECAO_U_ECIR_U_ECSC_U_ECEC_U_ECMST
"RTN","ECUERPC1",76,0)
 S STR=STR_U_ELIG_U_ELCOD_U_ECHNC_U_ECCV_U_ECSHAD,^TMP($J,"ECLASS",1)=STR
"RTN","ECUERPC1",77,0)
 S RESULTS=$NA(^TMP($J,"ECLASS"))
"RTN","ECUERPC1",78,0)
 Q
"RTN","ECUERPC1",79,0)
PATOTH(ECIEN) ;
"RTN","ECUERPC1",80,0)
 ;Returns to broker a patient remaining data from EVENT CAPTURE
"RTN","ECUERPC1",81,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",82,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",83,0)
 ;
"RTN","ECUERPC1",84,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",85,0)
 ;          721 IEN^procedure reason
"RTN","ECUERPC1",86,0)
 ;
"RTN","ECUERPC1",87,0)
 N REAS,ECX
"RTN","ECUERPC1",88,0)
 K ^TMP($J,"ECOTH")
"RTN","ECUERPC1",89,0)
 S ECX=^ECH(ECIEN,0)
"RTN","ECUERPC1",90,0)
 S REAS=$$GET1^DIQ(721,ECIEN,34,"E")
"RTN","ECUERPC1",91,0)
 S ^TMP($J,"ECOTH",1)=REAS
"RTN","ECUERPC1",92,0)
 S RESULTS=$NA(^TMP($J,"ECOTH"))
"RTN","ECUERPC1",93,0)
 Q
"RTN","ECUERPC1",94,0)
PATCLAST(RESULTS,ECARY) ;
"RTN","ECUERPC1",95,0)
 ;Returns to broker a patient status (in/out) and classification
"RTN","ECUERPC1",96,0)
 ;     RPC: EC GETPATCLASTAT
"RTN","ECUERPC1",97,0)
 ;INPUTS  ECARY  - Contains the following subscripted elements  
"RTN","ECUERPC1",98,0)
 ;         ECDFN - Patient ien (#2)
"RTN","ECUERPC1",99,0)
 ;         ECD   - DSS Unit ien (#724)
"RTN","ECUERPC1",100,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",101,0)
 ;OUTPUTS  RESULTS - Patient status and classifications delimited by (^)
"RTN","ECUERPC1",102,0)
 ;         Patient Status: I for inpatient or O for outpatient
"RTN","ECUERPC1",103,0)
 ;         Classification: 2- Agent Orange, 3- Ionizing Radiation
"RTN","ECUERPC1",104,0)
 ;          4- SC Condition, 5- Environment Contaminants/SWAC 6- Military
"RTN","ECUERPC1",105,0)
 ;          Sexual Trauma    7- Head/Neck Cancer 8- Combat Veteran
"RTN","ECUERPC1",106,0)
 ;          9- Project 112/SHAD
"RTN","ECUERPC1",107,0)
 ;         Data after the '~' refers to those class. that must be asked 
"RTN","ECUERPC1",108,0)
 ;         by Delphi appl. when the answer to SC=No.
"RTN","ECUERPC1",109,0)
 ;         Data after "~"  1- Agent Orange  2- Ionizing Radi. 3- Env Cont/SWAC
"RTN","ECUERPC1",110,0)
 N ECDFN,ECDT,ECX,I,ECCLARY,SCDAT,PATSTAT
"RTN","ECUERPC1",111,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",112,0)
 S ECDFN=$P(ECARY,U),ECD=$P(ECARY,U,2),ECDT=$P(ECARY,U,3) Q:ECDFN=""
"RTN","ECUERPC1",113,0)
 I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",114,0)
 S PATSTAT=$$INOUTPT^ECUTL0(ECDFN,ECDT),RESULTS="^^^^^^",SCDAT=";;;"
"RTN","ECUERPC1",115,0)
 I PATSTAT="I" D  Q  ;added to be consistent w roll-n-scroll 11/25/03 JAM
"RTN","ECUERPC1",116,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",117,0)
 I '$$CHKDSS^ECUTL0(+$G(ECD),PATSTAT) D  Q
"RTN","ECUERPC1",118,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",119,0)
 D CL^SDCO21(ECDFN,ECDT,"",.ECCLARY) F ECX=3,1,2,4,5,6,7,8 D
"RTN","ECUERPC1",120,0)
 .I ECX=1,$P($G(^DPT(ECDFN,.321)),"^",2)'="Y" Q
"RTN","ECUERPC1",121,0)
 .I ECX=2,$P($G(^DPT(ECDFN,.321)),"^",3)'="Y" Q
"RTN","ECUERPC1",122,0)
 .I ECX=4,$P($G(^DPT(ECDFN,.322)),"^",13)'="Y",'$$EC^SDCO22(ECDFN,"") Q
"RTN","ECUERPC1",123,0)
 .I ECX=3,$D(ECCLARY(ECX)) F I=1,2,4 S ECCLARY(I)="SC"
"RTN","ECUERPC1",124,0)
 .I '$D(ECCLARY(ECX)) Q
"RTN","ECUERPC1",125,0)
 .;Check SC, if answer to SC is NO then these questions will be asked
"RTN","ECUERPC1",126,0)
 .I ECCLARY(ECX)="SC" S $P(SCDAT,";",ECX)="E"
"RTN","ECUERPC1",127,0)
 .E  S $P(RESULTS,"^",ECX)="E"
"RTN","ECUERPC1",128,0)
 S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",129,0)
 Q
"RTN","ECUERPC1",130,0)
ENCDXS(RESULTS,ECARY) ;
"RTN","ECUERPC1",131,0)
 ;Broker call returns a patient encounter primary & secondary dx (#721)
"RTN","ECUERPC1",132,0)
 ;     RPC: EC GETENCDXS
"RTN","ECUERPC1",133,0)
 ;INPUTS   ECDFN - Patient ien (#2)
"RTN","ECUERPC1",134,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",135,0)
 ;         ECL   - Location ien
"RTN","ECUERPC1",136,0)
 ;         EC4   - Clinic ien
"RTN","ECUERPC1",137,0)
 ;
"RTN","ECUERPC1",138,0)
 ;OUTPUTS  RESULTS - array of patient encounter diagnosis
"RTN","ECUERPC1",139,0)
 ;         primary/secondary flag^DX ien^DX code  DX description.
"RTN","ECUERPC1",140,0)
 ;
"RTN","ECUERPC1",141,0)
 N ECDFN,ECDT,ECL,EC4,ECPDX,ECDX,ECDXN,ECDXS,CNT,STR,ECPDX,SDXCNT
"RTN","ECUERPC1",142,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",143,0)
 K ^TMP($J,"ECENCDXS")
"RTN","ECUERPC1",144,0)
 S ECDFN=$P(ECARY,U),ECDT=+$P(ECARY,U,2),ECL=$P(ECARY,U,3)
"RTN","ECUERPC1",145,0)
 S EC4=$P(ECARY,U,4) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",146,0)
 I ECDFN=""!(ECL="")!(EC4="") Q
"RTN","ECUERPC1",147,0)
 S (ECDX,ECDXN)="",ECPDX=$$PDXCK^ECUTL2(ECDFN,ECDT,ECL,EC4) I ECDX="" Q
"RTN","ECUERPC1",148,0)
 S IEN="",STR=1_U_ECDX_U_ECDXN_"   "_$P($$ICDDX^ICDCODE(ECDX,ECDT),U,4)
"RTN","ECUERPC1",149,0)
 S CNT=1,^TMP($J,"ECENCDXS",CNT)=STR
"RTN","ECUERPC1",150,0)
 ;*ACS concat description to 2nd diag code, in the order entered by the user
"RTN","ECUERPC1",151,0)
 F  S IEN=$O(ECDXS(IEN)) Q:IEN=""  D
"RTN","ECUERPC1",152,0)
 . S CNT=CNT+1,^TMP($J,"ECENCDXS",CNT)=0_U_ECDXS(IEN)_U_IEN_"   "_$P($$ICDDX^ICDCODE(ECDXS(IEN),ECDT),U,4)
"RTN","ECUERPC1",153,0)
 S RESULTS=$NA(^TMP($J,"ECENCDXS"))
"RTN","ECUERPC1",154,0)
 Q
"RTN","ECUERPC1",155,0)
 ;
"RTN","ECUERPC1",156,0)
PROCBAT(RESULTS,ECARY) ;
"RTN","ECUERPC1",157,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",158,0)
 ;for patients for a specific procedure
"RTN","ECUERPC1",159,0)
 ;        RPC: EC GETBATPROCS
"RTN","ECUERPC1",160,0)
 ;INPUTS   ECARY - Contains the following subscripted elements
"RTN","ECUERPC1",161,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC1",162,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC1",163,0)
 ;          ECC   - Category ien
"RTN","ECUERPC1",164,0)
 ;          ECP   - Procedure ien
"RTN","ECUERPC1",165,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC1",166,0)
 ;          ECED  - End Date
"RTN","ECUERPC1",167,0)
 ;
"RTN","ECUERPC1",168,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data containing:-
"RTN","ECUERPC1",169,0)
 ;          721 IEN^Patient name^Procedure Date/Time^Primary Dx
"RTN","ECUERPC1",170,0)
 ;          ^Ordering Section^Associated Clinic
"RTN","ECUERPC1",171,0)
 ;^SSN^DOB^Procedure Date and Time
"RTN","ECUERPC1",172,0)
 ;
"RTN","ECUERPC1",173,0)
 N IEN,CNT,ECLOC,ECUNT,NODE,DATA,PXDT,ECV,ECC,ECP,ECSD,ECED,DATE,DFN
"RTN","ECUERPC1",174,0)
 N CAT,ECI,VADM,ORC,ASC,ECDX
"RTN","ECUERPC1",175,0)
 S ECV="ECLOC^ECUNT^ECC^ECP^ECSD^ECED"
"RTN","ECUERPC1",176,0)
 D PARSE^ECUERPC(ECV,ECARY)
"RTN","ECUERPC1",177,0)
 I (ECLOC="")!(ECUNT="")!(ECC="")!(ECP="") Q
"RTN","ECUERPC1",178,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECBATPX") S CNT=0
"RTN","ECUERPC1",179,0)
 S %DT="STX" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC1",180,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC1",181,0)
 Q:ECED'>ECSD  S DATE=ECSD
"RTN","ECUERPC1",182,0)
 F  S DATE=$O(^ECH("AC1",ECLOC,DATE)) Q:'DATE!(DATE>ECED)  S IEN=0 D
"RTN","ECUERPC1",183,0)
 . F  S IEN=$O(^ECH("AC1",ECLOC,DATE,IEN)) Q:'IEN  D
"RTN","ECUERPC1",184,0)
 . . S NODE=$G(^ECH(IEN,0))  Q:NODE=""  Q:$P(NODE,U,7)'=ECUNT
"RTN","ECUERPC1",185,0)
 . . Q:$P(NODE,U,8)'=ECC  Q:$P(NODE,U,9)'=ECP
"RTN","ECUERPC1",186,0)
 . . S ECDX=$P($G(^ECH(IEN,"P")),U,2) I ECDX'="" D
"RTN","ECUERPC1",187,0)
 . . . S ECDX=$$ICDDX^ICDCODE(ECDX,DATE)
"RTN","ECUERPC1",188,0)
 . . . S ECDX=$P(ECDX,U,2)_"  "_$P(ECDX,U,4)
"RTN","ECUERPC1",189,0)
 . . S ASC=$P(NODE,U,19) S:ASC'="" ASC=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC1",190,0)
 . . S ORC=$P(NODE,U,12) S:ORC'="" ORC=$$GET1^DIQ(723,ORC,.01,"I")
"RTN","ECUERPC1",191,0)
 . . S Y=DATE X ^DD("DD") S PXDT=Y,DFN=$P(NODE,U,2) D DEM^VADPT
"RTN","ECUERPC1",192,0)
 . . S DATA=$E(VADM(1),1,30)_U_PXDT_U_ECDX_U_ORC_U_ASC
"RTN","ECUERPC1",193,0)
 . . S CNT=CNT+1,^TMP($J,"ECBATPX",CNT)=IEN_U_DATA
"RTN","ECUERPC1",194,0)
 S RESULTS=$NA(^TMP($J,"ECBATPX"))
"RTN","ECUERPC1",195,0)
 Q
"RTN","ECUERPC1",196,0)
 ;
"RTN","ECUERPC1",197,0)
CLHLP(RESULTS,ECARY) ;RPC Broker entry point for classification help
"RTN","ECUERPC1",198,0)
 ;        RPC: EC CLASHELP
"RTN","ECUERPC1",199,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",200,0)
 ;          ECDFN  - Patient DFN from file (#2)
"RTN","ECUERPC1",201,0)
 ;          ECKY   - Key to provide help on
"RTN","ECUERPC1",202,0)
 ;
"RTN","ECUERPC1",203,0)
 ;OUTPUTS  RESULTS - Array of help text for classification
"RTN","ECUERPC1",204,0)
 ;
"RTN","ECUERPC1",205,0)
 N ECFILER,ECERR,ECDIRY,ECUFILE,ECDFN,ECKY,ECHNDL
"RTN","ECUERPC1",206,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",207,0)
 K ^TMP("ECMSG",$J)
"RTN","ECUERPC1",208,0)
 S ECERR=0,ECDFN=$P(ECARY,U),ECKY=$P(ECARY,U,2) D  I ECERR D CLEND Q
"RTN","ECUERPC1",209,0)
 .I ECDFN="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not defined" Q
"RTN","ECUERPC1",210,0)
 .I ECKY="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Help Key not defined" Q
"RTN","ECUERPC1",211,0)
 .S DIC=2,DIC(0)="NMZX",X=ECDFN D ^DIC I Y<0 D
"RTN","ECUERPC1",212,0)
 ..S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not found"
"RTN","ECUERPC1",213,0)
 S ECHNDL="ECLASHLP" D HFSOPEN^ECRRPC(ECHNDL) I ECERR D CLEND Q
"RTN","ECUERPC1",214,0)
 U IO
"RTN","ECUERPC1",215,0)
 I ECKY="SC" D SC^SDCO23(ECDFN)
"RTN","ECUERPC1",216,0)
 D HFSCLOSE^ECRRPC(ECFILER)
"RTN","ECUERPC1",217,0)
CLEND ;
"RTN","ECUERPC1",218,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECUERPC1",219,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECUERPC1",220,0)
 Q
"RTN","ECUERPC1",221,0)
ECDEF(RESULTS,ECARY) ;RPC Broker entry point to get a default for space bar
"RTN","ECUERPC1",222,0)
 ;        RPC: EC SPACEBAR
"RTN","ECUERPC1",223,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",224,0)
 ;          ECFILE - File to obtain value from
"RTN","ECUERPC1",225,0)
 ;
"RTN","ECUERPC1",226,0)
 ;OUTPUTS  RESULTS - IEN^Description of Text
"RTN","ECUERPC1",227,0)
 ;
"RTN","ECUERPC1",228,0)
 N DIC,ECFILE,X,Y
"RTN","ECUERPC1",229,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",230,0)
 S ECFILE=$P(ECARY,U)
"RTN","ECUERPC1",231,0)
 I ECFILE="" S ECERR=1,RESULTS="0^File not defined" Q
"RTN","ECUERPC1",232,0)
 S X=" ",DIC(0)="MZX",DIC=ECFILE D ^DIC I Y<0 D  I ECERR Q
"RTN","ECUERPC1",233,0)
 . S ECERR=1,RESULTS="0^Nothing found"
"RTN","ECUERPC1",234,0)
 S RESULTS=Y
"RTN","ECUERPC1",235,0)
 Q
"RTN","ECUTL1")
0^1^B28929596^B26308660
"RTN","ECUTL1",1,0)
ECUTL1 ;ALB/ESD - Event Capture Classification Utilities ;19 May 98
"RTN","ECUTL1",2,0)
 ;;2.0; EVENT CAPTURE ;**10,13,17,42,54,76**;8 May 96;Build 6
"RTN","ECUTL1",3,0)
 ;
"RTN","ECUTL1",4,0)
ASKCLASS(DFN,ECANS,ERR,ECTOPCE,ECPATST,ECHDA) ;  Ask classification questions
"RTN","ECUTL1",5,0)
 ; (Agent Orange, Ionizing Radiation, Environmental Contaminants/South 
"RTN","ECUTL1",6,0)
 ; West Asia Conditions, Service Connected, Military Sexual Trauma, 
"RTN","ECUTL1",7,0)
 ; Head/Neck Cancer, Combat Veteran, Project 112/SHAD)
"RTN","ECUTL1",8,0)
 ;
"RTN","ECUTL1",9,0)
 ;   Input:
"RTN","ECUTL1",10,0)
 ;      DFN     - IEN of Patient file (#2)
"RTN","ECUTL1",11,0)
 ;      ECTOPCE - Variable which indicates if DSS Unit is sending to PCE
"RTN","ECUTL1",12,0)
 ;      ECPATST - Inpatient/outpatient status
"RTN","ECUTL1",13,0)
 ;      ECHDA   - IEN in file #721 if editing existing record [optional]
"RTN","ECUTL1",14,0)
 ;
"RTN","ECUTL1",15,0)
 ;  Output:
"RTN","ECUTL1",16,0)
 ;      ECANS - array subscripted by classification abbreviation
"RTN","ECUTL1",17,0)
 ;              (i.e. ECANS("AO")) and passed by reference containing:
"RTN","ECUTL1",18,0)
 ;                 field # of class from EC Patient file (#721)^answer
"RTN","ECUTL1",19,0)
 ;      ERR   - Error indicator if user uparrows or times out (set to 1)
"RTN","ECUTL1",20,0)
 ;
"RTN","ECUTL1",21,0)
 ;      Function value - 1 if successful, 0 otherwise
"RTN","ECUTL1",22,0)
 ;
"RTN","ECUTL1",23,0)
 N ANS,DIR,ECCL,ECCLFLD,SUCCESS,ECVST,ECVSTDT,ECPXB,PXBDATA,ECNT,ECOLD,ECPIECE,ECXX
"RTN","ECUTL1",24,0)
 S (ECANS,ECCL)=""
"RTN","ECUTL1",25,0)
 S ERR=0
"RTN","ECUTL1",26,0)
 S SUCCESS=1
"RTN","ECUTL1",27,0)
 S DFN=+$G(DFN)
"RTN","ECUTL1",28,0)
 S ECTOPCE=$G(ECTOPCE)
"RTN","ECUTL1",29,0)
 I ECTOPCE["~" S ECTOPCE=$P(ECTOPCE,"~",2)
"RTN","ECUTL1",30,0)
 S ECPATST=$G(ECPATST)
"RTN","ECUTL1",31,0)
 ;- Drop out if invalid condition found OR if DSS Unit not sending to
"RTN","ECUTL1",32,0)
 ;  PCE or patient is an inpatient
"RTN","ECUTL1",33,0)
 I ('DFN)!(ECTOPCE="")!(ECPATST="")!(ECTOPCE="N")!(ECPATST="I") S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",34,0)
 D NOW^%DTC S ECVSTDT=$S(+$G(ECDT):ECDT,1:%),ECVST="" ;modified to use event date;JAM/11/24/03
"RTN","ECUTL1",35,0)
 ;- If editing an existing record, get visit data & display classification
"RTN","ECUTL1",36,0)
 I $G(ECHDA) D
"RTN","ECUTL1",37,0)
 .S ECVSTDT=$P($G(^ECH(ECHDA,0)),U,3)
"RTN","ECUTL1",38,0)
 .S ECVST=$P($G(^ECH(ECHDA,0)),U,21)
"RTN","ECUTL1",39,0)
 .F ECCL="AO","IR","EC","SC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",40,0)
 ..S ECPIECE=$S(ECCL="AO":3,ECCL="IR":4,ECCL="EC":5,ECCL="SC":6,ECCL="MST":9,ECCL="HNC":10,ECCL="CV":11,1:12)
"RTN","ECUTL1",41,0)
 ..S ECCLFLD=$P("^^Agent Orange^Ionizing Radiation^South West Asia Conditions^Service Connected^^^Military Sexual Trauma^Head/Neck Cancer^Combat Veteran^Project 112/SHAD","^",ECPIECE)
"RTN","ECUTL1",42,0)
 ..S ECXX=$P($G(^ECH(ECHDA,"P")),U,ECPIECE),ECXX=$S(ECXX="Y":"YES",ECXX="N":"NO",1:"")
"RTN","ECUTL1",43,0)
 ..I ECXX]"" S ECOLD(ECCL)=ECCLFLD_": "_ECXX
"RTN","ECUTL1",44,0)
 .I $D(ECOLD) D
"RTN","ECUTL1",45,0)
 ..W !,"*** Current encounter classification ***",!
"RTN","ECUTL1",46,0)
 ..F ECCL="SC","CV","AO","IR","EC","MST","HNC","SHAD" D
"RTN","ECUTL1",47,0)
 ...I $D(ECOLD(ECCL)) W !?4,ECOLD(ECCL)
"RTN","ECUTL1",48,0)
 ;- Ask user classification question
"RTN","ECUTL1",49,0)
 D CLASS^PXBAPI21("",DFN,ECVSTDT,1,ECVST) W !
"RTN","ECUTL1",50,0)
 ;- Check error; exit if error condition
"RTN","ECUTL1",51,0)
 I $D(PXBDATA("ERR")) D  I ERR S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",52,0)
 .F ECPXB=1:1:4 I $D(PXBDATA("ERR",ECPXB)) D
"RTN","ECUTL1",53,0)
 ..I (PXBDATA("ERR",ECPXB)=1)!(PXBDATA("ERR",ECPXB)=4) S ERR=1
"RTN","ECUTL1",54,0)
 ;- Otherwise, continue to setup ecans array, i.e., new classification data
"RTN","ECUTL1",55,0)
 F ECCL="AO","IR","SC","EC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",56,0)
 .S ECCLFLD=$S(ECCL="AO":21,ECCL="IR":22,ECCL="EC":23,ECCL="SC":24,ECCL="MST":35,ECCL="HNC":39,ECCL="CV":40,1:41)
"RTN","ECUTL1",57,0)
 .S ECPXB=$S(ECCL="AO":1,ECCL="IR":2,ECCL="EC":4,ECCL="SC":3,ECCL="MST":5,ECCL="CV":7,ECCL="SHAD":8,1:6)
"RTN","ECUTL1",58,0)
 .S ANS=$P($G(PXBDATA(ECPXB)),U,2),ANS=$S(ANS=1:"Y",ANS=0:"N",1:"")
"RTN","ECUTL1",59,0)
 .S ECANS(ECCL)=ECCLFLD_"^"_ANS
"RTN","ECUTL1",60,0)
 ;- Delete old data if it exists
"RTN","ECUTL1",61,0)
 I $G(ECHDA) D DELCLASS(ECHDA)
"RTN","ECUTL1",62,0)
 Q SUCCESS
"RTN","ECUTL1",63,0)
 ;
"RTN","ECUTL1",64,0)
 ;
"RTN","ECUTL1",65,0)
EDCLASS(ECIEN,ECANS) ;  Edit classifications fields in EC Patient
"RTN","ECUTL1",66,0)
 ;                  file (#721)
"RTN","ECUTL1",67,0)
 ;
"RTN","ECUTL1",68,0)
 ;   Input:
"RTN","ECUTL1",69,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",70,0)
 ;      ECANS - Array of answers to classification questions asked
"RTN","ECUTL1",71,0)
 ;
"RTN","ECUTL1",72,0)
 ;  Output:
"RTN","ECUTL1",73,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 edited in file #721
"RTN","ECUTL1",74,0)
 ;
"RTN","ECUTL1",75,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",76,0)
 S (DR,ECCL)=""
"RTN","ECUTL1",77,0)
 ;
"RTN","ECUTL1",78,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",79,0)
 D
"RTN","ECUTL1",80,0)
 . I '$G(ECIEN)!('$D(ECANS)) Q
"RTN","ECUTL1",81,0)
 . ;
"RTN","ECUTL1",82,0)
 . ;- Lock main node
"RTN","ECUTL1",83,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",84,0)
 . S DA=ECIEN
"RTN","ECUTL1",85,0)
 . S DIE="^ECH("
"RTN","ECUTL1",86,0)
 . ;
"RTN","ECUTL1",87,0)
 . ;- Edit classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",88,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  S DR=DR_+$P($G(ECANS(ECCL)),"^")_"////"_$P($G(ECANS(ECCL)),"^",2)_";"
"RTN","ECUTL1",89,0)
 . ;
"RTN","ECUTL1",90,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",91,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",92,0)
 . D ^DIE
"RTN","ECUTL1",93,0)
 ;
"RTN","ECUTL1",94,0)
 ;- Unlock main node
"RTN","ECUTL1",95,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",96,0)
 ;
"RTN","ECUTL1",97,0)
 Q
"RTN","ECUTL1",98,0)
 ;
"RTN","ECUTL1",99,0)
 ;
"RTN","ECUTL1",100,0)
SETCLASS(ECANS) ;  Set answers to classification questions in EC variables
"RTN","ECUTL1",101,0)
 ;          (used in EC data entry options when filing EC Patient record)
"RTN","ECUTL1",102,0)
 ;
"RTN","ECUTL1",103,0)
 ;   Input:
"RTN","ECUTL1",104,0)
 ;      ECANS - array of answers to class questions asked containing:
"RTN","ECUTL1",105,0)
 ;                 field number of class ques from file #721^answer
"RTN","ECUTL1",106,0)
 ;
"RTN","ECUTL1",107,0)
 ;  Output:
"RTN","ECUTL1",108,0)
 ;      EC classification var - ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,
"RTN","ECUTL1",109,0)
 ;                              ECSHAD
"RTN","ECUTL1",110,0)
 ;
"RTN","ECUTL1",111,0)
 N ECCL,ECCLFLD
"RTN","ECUTL1",112,0)
 S (ECCL,ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,ECSHAD)=""
"RTN","ECUTL1",113,0)
 ;
"RTN","ECUTL1",114,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",115,0)
 D
"RTN","ECUTL1",116,0)
 . ;
"RTN","ECUTL1",117,0)
 . ;- If array containing class flds^answers is not created, exit
"RTN","ECUTL1",118,0)
 . I '$D(ECANS) Q
"RTN","ECUTL1",119,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  D
"RTN","ECUTL1",120,0)
 .. ;
"RTN","ECUTL1",121,0)
 .. ;- Get field number of classification
"RTN","ECUTL1",122,0)
 .. S ECCLFLD=+$P($G(ECANS(ECCL)),"^")
"RTN","ECUTL1",123,0)
 .. ;
"RTN","ECUTL1",124,0)
 .. ;- Agent Orange variable
"RTN","ECUTL1",125,0)
 .. S:ECCLFLD=21 ECAO=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",126,0)
 .. ;
"RTN","ECUTL1",127,0)
 .. ;- Ionizing Radiation variable
"RTN","ECUTL1",128,0)
 .. S:ECCLFLD=22 ECIR=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",129,0)
 .. ;
"RTN","ECUTL1",130,0)
 .. ;- Environmental Contaminants/South West Asia Conditions variable
"RTN","ECUTL1",131,0)
 .. S:ECCLFLD=23 ECZEC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",132,0)
 .. ;
"RTN","ECUTL1",133,0)
 .. ;- Service Connected variable
"RTN","ECUTL1",134,0)
 .. S:ECCLFLD=24 ECSC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",135,0)
 .. ;
"RTN","ECUTL1",136,0)
 .. ;- Military Sexual Trauma variable
"RTN","ECUTL1",137,0)
 .. S:ECCLFLD=35 ECMST=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",138,0)
 .. ;
"RTN","ECUTL1",139,0)
 .. ;- Head/Neck Cancer
"RTN","ECUTL1",140,0)
 .. S:ECCLFLD=39 ECHNC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",141,0)
 .. ;
"RTN","ECUTL1",142,0)
 .. ;- Combat Veteran
"RTN","ECUTL1",143,0)
 .. S:ECCLFLD=40 ECCV=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",144,0)
 .. ;
"RTN","ECUTL1",145,0)
 .. ;- Project 112/SHAD (Shipboard Hazard and Defense)
"RTN","ECUTL1",146,0)
 .. S:ECCLFLD=41 ECSHAD=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",147,0)
 Q
"RTN","ECUTL1",148,0)
 ;
"RTN","ECUTL1",149,0)
 ;
"RTN","ECUTL1",150,0)
DELCLASS(ECIEN) ;  Delete classification fields in EC Patient file (#721)
"RTN","ECUTL1",151,0)
 ;
"RTN","ECUTL1",152,0)
 ;   Input:
"RTN","ECUTL1",153,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",154,0)
 ;
"RTN","ECUTL1",155,0)
 ;  Output:
"RTN","ECUTL1",156,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 deleted in file#721
"RTN","ECUTL1",157,0)
 ;
"RTN","ECUTL1",158,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",159,0)
 S DR=""
"RTN","ECUTL1",160,0)
 ;
"RTN","ECUTL1",161,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",162,0)
 D
"RTN","ECUTL1",163,0)
 . I '$G(ECIEN) Q
"RTN","ECUTL1",164,0)
 . ;
"RTN","ECUTL1",165,0)
 . ;- Lock main node
"RTN","ECUTL1",166,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",167,0)
 . S DA=ECIEN
"RTN","ECUTL1",168,0)
 . S DIE="^ECH("
"RTN","ECUTL1",169,0)
 . ;
"RTN","ECUTL1",170,0)
 . ;- Delete classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",171,0)
 . F ECCL=21:1:24,35,39,40,41 S DR=DR_ECCL_"////@;"
"RTN","ECUTL1",172,0)
 . ;
"RTN","ECUTL1",173,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",174,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",175,0)
 . D ^DIE
"RTN","ECUTL1",176,0)
 ;
"RTN","ECUTL1",177,0)
 ;- Unlock main node
"RTN","ECUTL1",178,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",179,0)
 ;
"RTN","ECUTL1",180,0)
 Q
"RTN","ECUTL1",181,0)
 ;
"RTN","ECUTL1",182,0)
 ;
"RTN","ECUTL1",183,0)
LOCK(ECIEN) ;  Lock EC Patient record
"RTN","ECUTL1",184,0)
 ;
"RTN","ECUTL1",185,0)
 ;   Input:
"RTN","ECUTL1",186,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",187,0)
 ;
"RTN","ECUTL1",188,0)
 ;  Output:
"RTN","ECUTL1",189,0)
 ;      Function Value - 1 if record can be locked, 0 otherwise
"RTN","ECUTL1",190,0)
 ;
"RTN","ECUTL1",191,0)
 I $G(ECIEN) L +^ECH(ECIEN):5
"RTN","ECUTL1",192,0)
 Q $T
"RTN","ECUTL1",193,0)
 ;
"RTN","ECUTL1",194,0)
 ;
"RTN","ECUTL1",195,0)
UNLOCK(ECIEN) ;  Unlock EC Patient record
"RTN","ECUTL1",196,0)
 ;
"RTN","ECUTL1",197,0)
 ;   Input:
"RTN","ECUTL1",198,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",199,0)
 ;
"RTN","ECUTL1",200,0)
 ;  Output:
"RTN","ECUTL1",201,0)
 ;      EC Patient record unlocked
"RTN","ECUTL1",202,0)
 ;
"RTN","ECUTL1",203,0)
 I $G(ECIEN) L -^ECH(ECIEN)
"RTN","ECUTL1",204,0)
 Q
"RTN","ECUURPC")
0^17^B5658914^B5658708
"RTN","ECUURPC",1,0)
ECUURPC ;ALB/JAM - Event Capture Data Entry Broker Utilities ; 5 May 2008
"RTN","ECUURPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,42,49,94,95,76**;8 May 96;Build 6
"RTN","ECUURPC",3,0)
 ;
"RTN","ECUURPC",4,0)
ECHELP(RESULTS,ECARY) ;
"RTN","ECUURPC",5,0)
 ;
"RTN","ECUURPC",6,0)
 ;Broker call returns the entries from HELP FILE #9.2
"RTN","ECUURPC",7,0)
 ;        RPC: EC GETSCNHELP
"RTN","ECUURPC",8,0)
 ;INPUTS   ECARY - Contains the following elements
"RTN","ECUURPC",9,0)
 ;          HLPDA  - Help Frame Name
"RTN","ECUURPC",10,0)
 ;
"RTN","ECUURPC",11,0)
 ;OUTPUTS  RESULTS - Array of help text in the HELP FRAM File (#9.2)
"RTN","ECUURPC",12,0)
 ;
"RTN","ECUURPC",13,0)
 N HLPDA,DIC,X,Y
"RTN","ECUURPC",14,0)
 S HLPDA=$G(ECARY) I HLPDA="" Q
"RTN","ECUURPC",15,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECHELP")
"RTN","ECUURPC",16,0)
 S DIC="^DIC(9.2,",DIC(0)="MN",X=HLPDA
"RTN","ECUURPC",17,0)
 D ^DIC M ^TMP($J,"ECHELP")=^DIC(9.2,+Y,1)
"RTN","ECUURPC",18,0)
 I $D(^TMP($J,"ECHELP")) D
"RTN","ECUURPC",19,0)
 . S $P(^TMP($J,"ECHELP",0),U)=$P(^DIC(9.2,+Y,0),U,2)
"RTN","ECUURPC",20,0)
 S RESULTS=$NA(^TMP($J,"ECHELP"))
"RTN","ECUURPC",21,0)
 Q
"RTN","ECUURPC",22,0)
FNDIEN(RESULTS,ECARY) ;find IEN
"RTN","ECUURPC",23,0)
 ;Broker call returns the IEN from a file
"RTN","ECUURPC",24,0)
 ;        RPC: EC GETIEN
"RTN","ECUURPC",25,0)
 ;INPUTS   ECARY - Contains the following data elements
"RTN","ECUURPC",26,0)
 ;          FIL  - File number
"RTN","ECUURPC",27,0)
 ;          TXT  - .01 description
"RTN","ECUURPC",28,0)
 ;
"RTN","ECUURPC",29,0)
 ;OUTPUTS  RESULTS - File IEN
"RTN","ECUURPC",30,0)
 ;
"RTN","ECUURPC",31,0)
 N TXT,FIL,DIC,X,Y
"RTN","ECUURPC",32,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",33,0)
 S FIL=$P(ECARY,U),TXT=$P(ECARY,U,2) I TXT=""!(FIL="") Q
"RTN","ECUURPC",34,0)
 S DIC=FIL,DIC(0)="MN",X=TXT
"RTN","ECUURPC",35,0)
 I FIL=81.3 S DIC("S")="I $P(^DIC(81.3,Y,0),U,5)'=1" ;PATCH 94
"RTN","ECUURPC",36,0)
 D ^DIC I Y=-1 Q
"RTN","ECUURPC",37,0)
 S RESULTS=+Y
"RTN","ECUURPC",38,0)
 Q
"RTN","ECUURPC",39,0)
ECDATE(RESULTS,ECARY) ;
"RTN","ECUURPC",40,0)
 ;
"RTN","ECUURPC",41,0)
 ;Broker call returns an Fileman internal date
"RTN","ECUURPC",42,0)
 ;        RPC: EC GETDATE
"RTN","ECUURPC",43,0)
 ;INPUTS   ECARY - Contains the following elements
"RTN","ECUURPC",44,0)
 ;          DTSTR  - Date String
"RTN","ECUURPC",45,0)
 ;          FLG    - Date Flag (optional)
"RTN","ECUURPC",46,0)
 ;
"RTN","ECUURPC",47,0)
 ;OUTPUTS  RESULTS - A valid Fileman date format^External format
"RTN","ECUURPC",48,0)
 ;
"RTN","ECUURPC",49,0)
 N ECDTSTR,DIC,X,Y,DTSTR,FLG
"RTN","ECUURPC",50,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",51,0)
 S DTSTR=$P(ECARY,U),FLG=$P(ECARY,U,2) I DTSTR="" Q
"RTN","ECUURPC",52,0)
 S X=DTSTR,%DT="XT"_$S(FLG="R":"R",1:""),%DT(0)="-NOW" D ^%DT
"RTN","ECUURPC",53,0)
 I +Y<1 S RESULTS="0^Invalid Date/Time" Q
"RTN","ECUURPC",54,0)
 S RESULTS=Y D D^DIQ
"RTN","ECUURPC",55,0)
 S RESULTS=RESULTS_U_Y
"RTN","ECUURPC",56,0)
 Q
"RTN","ECUURPC",57,0)
PATCH(RESULTS,ECARY)    ;
"RTN","ECUURPC",58,0)
 ;
"RTN","ECUURPC",59,0)
 ;Broker call returns 1 if patch X is installed
"RTN","ECUURPC",60,0)
 ;        RPC: EC GETPATCH
"RTN","ECUURPC",61,0)
 ;INPUTS   ECARY - contains the patch number
"RTN","ECUURPC",62,0)
 ;
"RTN","ECUURPC",63,0)
 ;OUTPUTS  RESULTS 1 OR 0
"RTN","ECUURPC",64,0)
 ;
"RTN","ECUURPC",65,0)
 I ECARY="" Q
"RTN","ECUURPC",66,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",67,0)
 S RESULTS=$$PATCH^XPDUTL(ECARY)
"RTN","ECUURPC",68,0)
 Q
"RTN","ECUURPC",69,0)
VERSRV(RESULTS,ECARY,VERSION)   ; Return server version of option name and 
"RTN","ECUURPC",70,0)
 ; minimum GUI client version.
"RTN","ECUURPC",71,0)
 ;
"RTN","ECUURPC",72,0)
 ;Server/client version consist of 4 pieces, namely
"RTN","ECUURPC",73,0)
 ;    major version.minor version.release.build  (ex. 2.0.10.1)
"RTN","ECUURPC",74,0)
 ;
"RTN","ECUURPC",75,0)
 ;Broker call returns server version of option name
"RTN","ECUURPC",76,0)
 ;        RPC: EC GETVERSION
"RTN","ECUURPC",77,0)
 ;INPUTS   ECARY - contains the option name
"RTN","ECUURPC",78,0)
 ;         VERSION - EC GUI client version ;stay in partition for session
"RTN","ECUURPC",79,0)
 ;
"RTN","ECUURPC",80,0)
 ;OUTPUTS  RESULTS version number OR null ("")
"RTN","ECUURPC",81,0)
 ;           current server version^minimum client version
"RTN","ECUURPC",82,0)
 ;
"RTN","ECUURPC",83,0)
 S ECCLVER=$G(VERSION)
"RTN","ECUURPC",84,0)
 I $G(ECARY)="" Q
"RTN","ECUURPC",85,0)
 N ECLST,ECMINV
"RTN","ECUURPC",86,0)
 S ECMINV="2.1.2.1"  ;Minimum version of EC GUI client
"RTN","ECUURPC",87,0)
 D FIND^DIC(19,"",1,"X",ECARY,1,,,,"ECLST")
"RTN","ECUURPC",88,0)
 I 'ECLST("DILIST",0) S RESULTS="" Q
"RTN","ECUURPC",89,0)
 S RESULTS=ECLST("DILIST","ID",1,1)
"RTN","ECUURPC",90,0)
 S RESULTS=$P(RESULTS,"version ",2)_U_ECMINV
"RTN","ECUURPC",91,0)
 Q
"VER")
8.0^22.0
"^DD",721,721,23,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^P;5^Q
"^DD",721,721,23,3)
Select the appropriate south west asia conditions status for this patient.
"^DD",721,721,23,21,0)
^.001^2^2^3090527^^
"^DD",721,721,23,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",721,721,23,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",721,721,23,23,0)
^.001^2^2^3090527^^
"^DD",721,721,23,23,1,0)
Southwest Asia Conditions is a component of sending certain data
"^DD",721,721,23,23,2,0)
to PCE.
"^DD",721,721,23,"DT")
3090520
"^DD",721,721,30,0)
PCE DATA FEED^F^^PCE;1^K:$L(X)>240!($L(X)<1) X
"^DD",721,721,30,3)
Answer must be 1-240 characters in length.
"^DD",721,721,30,21,0)
^.001^2^2^3090520^^^^
"^DD",721,721,30,21,1,0)
The field contains the ECS data formatted to feed the Patient Care
"^DD",721,721,30,21,2,0)
Encounter (PCE) software.
"^DD",721,721,30,23,0)
^^7^7^3090520^
"^DD",721,721,30,23,1,0)
Data stored at this node is transmitted to PCE and contains the following:-
"^DD",721,721,30,23,2,0)
date/time~patient dfn~hospital location~institution~dss id~provider #1 
"^DD",721,721,30,23,3,0)
(no longer populated with EC*2.0*72)~provider 2 (not populated)~provider 3
"^DD",721,721,30,23,4,0)
(not populated)~volume~cpt code~diagnosis~agent orange~radiation~
"^DD",721,721,30,23,5,0)
enviromental contaminants/SWAC~service connected~ecs national # &
"^DD",721,721,30,23,6,0)
name~eligibility ~military sexual trauma~head/neck cancer~combat
"^DD",721,721,30,23,7,0)
veteran~project 112/shad
"^DD",721,721,30,"DT")
2970116
"^DD",721,721,41,0)
PROJECT 112/SHAD^S^Y:YES;N:NO;U:UNKNOWN;^P;12^Q
"^DD",721,721,41,3)
Select the appropriate status if this procedure is treating a problem related to Project 112/SHAD
"^DD",721,721,41,21,0)
^^2^2^3050624^
"^DD",721,721,41,21,1,0)
This field indicates that the EC procedure represents treatment of a
"^DD",721,721,41,21,2,0)
VA patient for a problem that is related to Project 112/SHAD.
"^DD",721,721,41,"DT")
3050624
"BLD",7790,6)
^94
**END**
**END**
