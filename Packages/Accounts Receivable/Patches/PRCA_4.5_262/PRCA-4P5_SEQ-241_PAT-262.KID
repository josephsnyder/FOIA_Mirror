Released PRCA*4.5*262 SEQ #241
Extracted from mail message
**KIDS**:PRCA*4.5*262^

**INSTALL NAME**
PRCA*4.5*262
"BLD",8191,0)
PRCA*4.5*262^ACCOUNTS RECEIVABLE^0^3101109^y
"BLD",8191,1,0)
^^4^4^3101109^
"BLD",8191,1,1,0)
This patch addresses 2 issues. The first issue is regarding missing
"BLD",8191,1,2,0)
batches when running the CBO Data Extract process. The second issue is
"BLD",8191,1,3,0)
about a local array not being killed properly in the RCDPE Exception
"BLD",8191,1,4,0)
Process option.
"BLD",8191,4,0)
^9.64PA^^0
"BLD",8191,6.3)
4
"BLD",8191,"KRN",0)
^9.67PA^779.2^20
"BLD",8191,"KRN",.4,0)
.4
"BLD",8191,"KRN",.401,0)
.401
"BLD",8191,"KRN",.402,0)
.402
"BLD",8191,"KRN",.403,0)
.403
"BLD",8191,"KRN",.5,0)
.5
"BLD",8191,"KRN",.84,0)
.84
"BLD",8191,"KRN",3.6,0)
3.6
"BLD",8191,"KRN",3.8,0)
3.8
"BLD",8191,"KRN",9.2,0)
9.2
"BLD",8191,"KRN",9.8,0)
9.8
"BLD",8191,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8191,"KRN",9.8,"NM",1,0)
RCDPEX1^^0^B15098572
"BLD",8191,"KRN",9.8,"NM",2,0)
RCXVDC4^^0^B17742675
"BLD",8191,"KRN",9.8,"NM","B","RCDPEX1",1)

"BLD",8191,"KRN",9.8,"NM","B","RCXVDC4",2)

"BLD",8191,"KRN",19,0)
19
"BLD",8191,"KRN",19.1,0)
19.1
"BLD",8191,"KRN",101,0)
101
"BLD",8191,"KRN",409.61,0)
409.61
"BLD",8191,"KRN",771,0)
771
"BLD",8191,"KRN",779.2,0)
779.2
"BLD",8191,"KRN",870,0)
870
"BLD",8191,"KRN",8989.51,0)
8989.51
"BLD",8191,"KRN",8989.52,0)
8989.52
"BLD",8191,"KRN",8994,0)
8994
"BLD",8191,"KRN","B",.4,.4)

"BLD",8191,"KRN","B",.401,.401)

"BLD",8191,"KRN","B",.402,.402)

"BLD",8191,"KRN","B",.403,.403)

"BLD",8191,"KRN","B",.5,.5)

"BLD",8191,"KRN","B",.84,.84)

"BLD",8191,"KRN","B",3.6,3.6)

"BLD",8191,"KRN","B",3.8,3.8)

"BLD",8191,"KRN","B",9.2,9.2)

"BLD",8191,"KRN","B",9.8,9.8)

"BLD",8191,"KRN","B",19,19)

"BLD",8191,"KRN","B",19.1,19.1)

"BLD",8191,"KRN","B",101,101)

"BLD",8191,"KRN","B",409.61,409.61)

"BLD",8191,"KRN","B",771,771)

"BLD",8191,"KRN","B",779.2,779.2)

"BLD",8191,"KRN","B",870,870)

"BLD",8191,"KRN","B",8989.51,8989.51)

"BLD",8191,"KRN","B",8989.52,8989.52)

"BLD",8191,"KRN","B",8994,8994)

"BLD",8191,"QUES",0)
^9.62^^
"BLD",8191,"REQB",0)
^9.611^2^2
"BLD",8191,"REQB",1,0)
PRCA*4.5*173^2
"BLD",8191,"REQB",2,0)
PRCA*4.5*256^2
"BLD",8191,"REQB","B","PRCA*4.5*173",1)

"BLD",8191,"REQB","B","PRCA*4.5*256",2)

"MBREQ")
0
"PKG",142,-1)
1^1
"PKG",142,0)
ACCOUNTS RECEIVABLE^PRCA^BILL COLLECTIONS
"PKG",142,20,0)
^9.402P^1^1
"PKG",142,20,1,0)
2^^PRCAMRG
"PKG",142,20,1,1)

"PKG",142,20,"B",2,1)

"PKG",142,22,0)
^9.49I^1^1
"PKG",142,22,1,0)
4.5^^2950320
"PKG",142,22,1,"PAH",1,0)
262^3101109
"PKG",142,22,1,"PAH",1,1,0)
^^4^4^3101109
"PKG",142,22,1,"PAH",1,1,1,0)
This patch addresses 2 issues. The first issue is regarding missing
"PKG",142,22,1,"PAH",1,1,2,0)
batches when running the CBO Data Extract process. The second issue is
"PKG",142,22,1,"PAH",1,1,3,0)
about a local array not being killed properly in the RCDPE Exception
"PKG",142,22,1,"PAH",1,1,4,0)
Process option.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RCDPEX1")
0^1^B15098572^B15134260
"RTN","RCDPEX1",1,0)
RCDPEX1 ;ALB/TMK - ELECTRONIC EOB MESSAGE EXCEPTIONS PROCESS ;02-MAY-96
"RTN","RCDPEX1",2,0)
 ;;4.5;Accounts Receivable;**173,262**;Mar 20, 1995;Build 4
"RTN","RCDPEX1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPEX1",4,0)
 ;
"RTN","RCDPEX1",5,0)
EN ; Main entry point
"RTN","RCDPEX1",6,0)
 D DT^DICRW
"RTN","RCDPEX1",7,0)
 N XQORS,VALMEVL,RCFASTXT,RCDA,RCEXCTYP,DIR,Y,X
"RTN","RCDPEX1",8,0)
 ; Ask for TRANSMISSION exceptions or DATA exceptions
"RTN","RCDPEX1",9,0)
 S DIR("A")="DO YOU WANT TO SEE (T)RANSMISSION OR (D)ATA EXCEPTIONS?: ",DIR("B")="T",DIR(0)="SAO^T:TRANSMISSION;D:DATA"
"RTN","RCDPEX1",10,0)
 S DIR("?",1)="TRANSMISSION EXCEPTIONS INCLUDE ANY PROBLEM ENCOUNTERED WHEN AN ERA/EEOB",DIR("?",2)="  IS RECEIVED AT THE SITE AND BEFORE IT IS STORED PERMANENTLY IN VISTA."
"RTN","RCDPEX1",11,0)
 S DIR("?",3)="  THIS INCLUDES PARTIAL MESSAGE RECEIPTS, EXTRACT PROBLEMS AND EEOBs THAT ",DIR("?",4)="  WERE TRANSFERRED IN FROM ANOTHER SITE."
"RTN","RCDPEX1",12,0)
 S DIR("?",5)="DATA EXCEPTIONS INCLUDE EEOB DETAIL RECORDS FOR SPECIFIC BILLS THAT CAN'T BE"
"RTN","RCDPEX1",13,0)
 S DIR("?",6)="  FULLY PROCESSED INTO THE VISTA SYSTEM.  THIS INCLUDES EEOB DETAIL FOR",DIR("?",7)="  CLAIMS THAT NEED TO BE TRANSFERRED TO ANOTHER SITE OR WHOSE DETAIL COULD",DIR("?")="  NOT BE STORED IN IB"
"RTN","RCDPEX1",14,0)
 D ^DIR K DIR
"RTN","RCDPEX1",15,0)
 S RCEXCTYP=Y
"RTN","RCDPEX1",16,0)
 ; Transmission exceptions
"RTN","RCDPEX1",17,0)
 I RCEXCTYP="T" D EN^VALM("RCDPEX EOB EXCEPTION LIST")
"RTN","RCDPEX1",18,0)
 I RCEXCTYP="D" D EN^VALM("RCDPEX EOB_SUM EXCEPTION LIST")
"RTN","RCDPEX1",19,0)
 K RCFASTXT,RCDA
"RTN","RCDPEX1",20,0)
 Q
"RTN","RCDPEX1",21,0)
 ;
"RTN","RCDPEX1",22,0)
INIT ; -- set up inital variables
"RTN","RCDPEX1",23,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX1",24,0)
 D BLD
"RTN","RCDPEX1",25,0)
 Q
"RTN","RCDPEX1",26,0)
 ;
"RTN","RCDPEX1",27,0)
REBLD ; Set up formatted global
"RTN","RCDPEX1",28,0)
 ;
"RTN","RCDPEX1",29,0)
BLD ; -- build list of messages
"RTN","RCDPEX1",30,0)
 N DA,DR,RCSEQ,RCMSG,RCS,RCER,RCDPDATA,RC0,TOOSOON,X,Z
"RTN","RCDPEX1",31,0)
 K ^TMP("RCDPEX-EOB",$J),^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",32,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX1",33,0)
 ;
"RTN","RCDPEX1",34,0)
 ; Extract from 344.5
"RTN","RCDPEX1",35,0)
 F  S RCMSG=$O(^RCY(344.5,"AEXC",1,RCMSG)) Q:'RCMSG  S RC0=$G(^(RCMSG,0)) D
"RTN","RCDPEX1",36,0)
 . I ($P(RC0,U,3)\1)=DT S TOOSOON=0 D  Q:TOOSOON
"RTN","RCDPEX1",37,0)
 .. ; If partial msg, allow a day before it's an exception
"RTN","RCDPEX1",38,0)
 .. I $P(RC0,U,10)=2 Q
"RTN","RCDPEX1",39,0)
 . ;
"RTN","RCDPEX1",40,0)
 . ; -- add to list
"RTN","RCDPEX1",41,0)
 . ;Display message id, type, date recorded, exception, mail msg #
"RTN","RCDPEX1",42,0)
 . S RCSEQ=RCSEQ+1
"RTN","RCDPEX1",43,0)
 . S DR=".01:.03;.1;.11",DA=RCMSG D DIQ3445(DA,DR)
"RTN","RCDPEX1",44,0)
 . S X=""
"RTN","RCDPEX1",45,0)
 . S X=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCDPDATA(344.5,RCMSG,.01,"E")),"",1,26)
"RTN","RCDPEX1",46,0)
 . S X=$$SETSTR^VALM1("  "_$E($G(RCDPDATA(344.5,RCMSG,.02,"I")),4,6),X,27,9)
"RTN","RCDPEX1",47,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.03,"E")),X,36,22)
"RTN","RCDPEX1",48,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.11,"E")),X,58,17)
"RTN","RCDPEX1",49,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",50,0)
 . S X=$J("",4)_"EXCEPTION: "_$G(RCDPDATA(344.5,RCMSG,.1,"E"))
"RTN","RCDPEX1",51,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",52,0)
 . S DR=1,DA=RCMSG D DIQ3445(DA,DR) ; Get display data
"RTN","RCDPEX1",53,0)
 . S Z=0 F  S Z=$O(RCDPDATA(344.5,RCMSG,1,Z)) Q:'Z  S X=$J("",6)_RCDPDATA(344.5,RCMSG,1,Z) D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",54,0)
 ;
"RTN","RCDPEX1",55,0)
 I '$D(^TMP("RCDPEX-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX-EOB",$J,1,0)=" ",^TMP("RCDPEX-EOB",$J,2,0)="   There Are No EEOB Exception Records On File"
"RTN","RCDPEX1",56,0)
 Q
"RTN","RCDPEX1",57,0)
 ;
"RTN","RCDPEX1",58,0)
FNL ; -- Clean up list
"RTN","RCDPEX1",59,0)
 K ^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",60,0)
 D CLEAN^VALM10
"RTN","RCDPEX1",61,0)
 K RCFASTXT
"RTN","RCDPEX1",62,0)
 Q
"RTN","RCDPEX1",63,0)
 ;
"RTN","RCDPEX1",64,0)
SET(X,FILE,RCMSG,RCSEQ) ; -- set arrays for EOB exception records
"RTN","RCDPEX1",65,0)
 ; X = the data to set into the global
"RTN","RCDPEX1",66,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX1",67,0)
 S ^TMP("RCDPEX-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX1",68,0)
 S ^TMP("RCDPEX-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_FILE
"RTN","RCDPEX1",69,0)
 Q
"RTN","RCDPEX1",70,0)
 ;
"RTN","RCDPEX1",71,0)
HDR ;
"RTN","RCDPEX1",72,0)
 S VALMHDR(1)=$J("",21)_"ERA/EEOB MESSAGES WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX1",73,0)
 S VALMHDR(2)=" "
"RTN","RCDPEX1",74,0)
 Q
"RTN","RCDPEX1",75,0)
 ;
"RTN","RCDPEX1",76,0)
DIQ3445(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.5
"RTN","RCDPEX1",77,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",78,0)
 K RCDPDATA(344.5)
"RTN","RCDPEX1",79,0)
 S DIQ(0)="EI",DIC="^RCY(344.5,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",80,0)
 Q
"RTN","RCDPEX1",81,0)
 ;
"RTN","RCDPEX1",82,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.5
"RTN","RCDPEX1",83,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",84,0)
 K RCDPDATA(344.4)
"RTN","RCDPEX1",85,0)
 S DIQ(0)="EI",DIC="^RCY(344.4,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",86,0)
 Q
"RTN","RCDPEX1",87,0)
 ;
"RTN","RCXVDC4")
0^2^B17742675^B17274468
"RTN","RCXVDC4",1,0)
RCXVDC4 ;DAOU/ALA-AR Data Extraction Data Creation ;02-JUL-03
"RTN","RCXVDC4",2,0)
 ;;4.5;Accounts Receivable;**201,227,228,248,251,256,262**;Mar 20, 1995;Build 4
"RTN","RCXVDC4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCXVDC4",4,0)
 ;
"RTN","RCXVDC4",5,0)
 ; Procedures 
"RTN","RCXVDC4",6,0)
 Q
"RTN","RCXVDC4",7,0)
D399PC ;
"RTN","RCXVDC4",8,0)
 I RCXVD0="" Q
"RTN","RCXVDC4",9,0)
 N RCXVD,RCXVDA,RCXVB,RCXVPC,RCXVP1,RCXVP2,RCXVP3,RCXVMULT
"RTN","RCXVDC4",10,0)
 N RCXVDT3,RCXVCP,RCXVPCDT,RCXVPS1,RCXVPS2,RCXVPS,RCXVPSER,RCXVNPI,RCXVCNT,RCXVMH
"RTN","RCXVDC4",11,0)
 ;RCXVPC=PROC. CODE IEN, RCXVCP=CPT CODE IEN
"RTN","RCXVDC4",12,0)
 ; LOOP THRU PROC.
"RTN","RCXVDC4",13,0)
 S (RCXVPC,RCXVCNT)=0
"RTN","RCXVDC4",14,0)
 K ^TMP($J,"MTCH")
"RTN","RCXVDC4",15,0)
 F  S RCXVPC=$O(^DGCR(399,RCXVD0,"CP",RCXVPC)) Q:'RCXVPC  D D399PCA
"RTN","RCXVDC4",16,0)
 S RCXVPC=0
"RTN","RCXVDC4",17,0)
 F  S RCXVPC=$O(^DGCR(399,RCXVD0,"RC",RCXVPC)) Q:'RCXVPC  D D39942
"RTN","RCXVDC4",18,0)
 K ^TMP($J,"MTCH")
"RTN","RCXVDC4",19,0)
 Q
"RTN","RCXVDC4",20,0)
D399PCA ;
"RTN","RCXVDC4",21,0)
 S RCXVD=$G(^DGCR(399,RCXVD0,"CP",RCXVPC,0)) Q:RCXVD=""
"RTN","RCXVDC4",22,0)
 S RCXVP1=$P(RCXVD,U,1),RCXVVP="",RCXVVP1=""
"RTN","RCXVDC4",23,0)
 I RCXVP1'="" S RCXVVP="^"_$P(RCXVP1,";",2)_$P(RCXVP1,";",1)_",0)"
"RTN","RCXVDC4",24,0)
 I RCXVVP'="" S RCXVVP1=$P($G(@RCXVVP),U,1) I RCXVVP1="" D
"RTN","RCXVDC4",25,0)
 . NEW CT
"RTN","RCXVDC4",26,0)
 . S CT=$G(^TMP("RCXVBREC",$J,0))+1,^TMP("RCXVBREC",$J,0)=CT
"RTN","RCXVDC4",27,0)
 . S ^TMP("RCXVBREC",$J,CT,0)="Bill # "_$P($G(^DGCR(399,RCXVD0,0)),"^",1)_" has a bad CPT code at IEN # "_RCXVPC_" check ^DGCR(399,"_RCXVD0_",""CP"","_RCXVPC_",0)"
"RTN","RCXVDC4",28,0)
 S RCXVDA=RCXVBLNA_RCXVU_RCXVVP1 ; PROC.
"RTN","RCXVDC4",29,0)
 S RCXVDT=$P(RCXVD,U,2)
"RTN","RCXVDC4",30,0)
 S RCXVPCDT=$E($$HLDATE^HLFNC(RCXVDT),1,8)
"RTN","RCXVDC4",31,0)
 S RCXVDA=RCXVDA_RCXVU_RCXVPCDT ; DT 
"RTN","RCXVDC4",32,0)
 S RCXVP1=$P(RCXVD,U,11),RCXVP2=""
"RTN","RCXVDC4",33,0)
 I RCXVP1'="" S RCXVP1=$P($G(^IBA(362.3,RCXVP1,0)),U,1)
"RTN","RCXVDC4",34,0)
 I RCXVP1'="" S RCXVP2=$P($G(^ICD9(RCXVP1,0)),U,1)
"RTN","RCXVDC4",35,0)
 S RCXVDA=RCXVDA_RCXVU_RCXVP2 ; ASSOC DXN (1)
"RTN","RCXVDC4",36,0)
 S RCXVP1=$P(RCXVD,U,7),RCXVP2=""
"RTN","RCXVDC4",37,0)
 I RCXVP1'="" S RCXVP2=$P($G(^SC(RCXVP1,0)),U,1)
"RTN","RCXVDC4",38,0)
 S RCXVDA=RCXVDA_RCXVU_RCXVP2 ; ASSC. CLNC (P) 
"RTN","RCXVDC4",39,0)
 S RCXVP1=$P(RCXVD,U,18),(RCXVP2,RCXVPS,RCXVPSER,RCXVNPI)=""
"RTN","RCXVDC4",40,0)
 I RCXVP1'="" S RCXVP2=$$GET1^DIQ(200,RCXVP1_",",.01,"E"),RCXVNPI=$P($$NPI^XUSNPI("Individual_ID",RCXVP1),RCXVU,1) S:+RCXVNPI<1 RCXVNPI="" D
"RTN","RCXVDC4",41,0)
 . S RCXVPS=$$GET^XUA4A72(RCXVP1,RCXVDT)
"RTN","RCXVDC4",42,0)
 . S RCXVPS=$P(RCXVPS,U,3)
"RTN","RCXVDC4",43,0)
 . S RCXVPSER=$$GET1^DIQ(200,RCXVP1_",",29,"E")
"RTN","RCXVDC4",44,0)
 . Q
"RTN","RCXVDC4",45,0)
 ;provider^provider npi^specialty^service/section
"RTN","RCXVDC4",46,0)
 S RCXVDA=RCXVDA_RCXVU_RCXVP2_RCXVU_RCXVNPI_RCXVU_RCXVPS_RCXVU_RCXVPSER
"RTN","RCXVDC4",47,0)
 S RCXVCNT=RCXVCNT+1,^TMP($J,RCXVBLN,"4-399A",RCXVCNT)=RCXVDA
"RTN","RCXVDC4",48,0)
 ; LOOP THRU CPT
"RTN","RCXVDC4",49,0)
 S RCXVCP=0,RCXVMULT=0
"RTN","RCXVDC4",50,0)
 F  S RCXVCP=$O(^DGCR(399,RCXVD0,"CP",RCXVPC,"MOD",RCXVCP)) Q:'RCXVCP  D
"RTN","RCXVDC4",51,0)
 .  Q:'($D(^DGCR(399,RCXVD0,"CP",RCXVPC,"MOD",RCXVCP,0)))
"RTN","RCXVDC4",52,0)
 . ; ^DGCR(399,D0,CP,D1,MOD,D2,0)= (#.01) CPT MODIFIER SEQUENCE [1N]
"RTN","RCXVDC4",53,0)
 . ; (#.02) CPT ==>MODIFIER [2P:81.3]
"RTN","RCXVDC4",54,0)
 . S RCXVP1=$P($G(^DGCR(399,RCXVD0,"CP",RCXVPC,"MOD",RCXVCP,0)),U,2)
"RTN","RCXVDC4",55,0)
 . Q:RCXVP1=""
"RTN","RCXVDC4",56,0)
 . S RCXVMULT=RCXVMULT+1
"RTN","RCXVDC4",57,0)
 . S RCXVP2=$P($G(^DIC(81.3,RCXVP1,0)),U,1)
"RTN","RCXVDC4",58,0)
 . S ^TMP($J,RCXVBLN,"4-399A",RCXVCNT,RCXVMULT)=RCXVP2
"RTN","RCXVDC4",59,0)
 . Q
"RTN","RCXVDC4",60,0)
 ;
"RTN","RCXVDC4",61,0)
 ; *256 - loop through 399.042 to find CPT procedure
"RTN","RCXVDC4",62,0)
MATCH N RCXVCPT1,RCXVFND,X
"RTN","RCXVDC4",63,0)
 S RCXVCPT1=$P(RCXVD,";",1)  ;proc
"RTN","RCXVDC4",64,0)
 S (RCXVFND,RCXVCP)=0
"RTN","RCXVDC4",65,0)
 F  S RCXVCP=$O(^DGCR(399,RCXVD0,"RC",RCXVCP)) Q:'RCXVCP!RCXVFND  D
"RTN","RCXVDC4",66,0)
 . Q:$D(^TMP($J,"MTCH",RCXVCP))  ;quit if CPT proc match
"RTN","RCXVDC4",67,0)
 . S RCXVD1=$G(^DGCR(399,RCXVD0,"RC",RCXVCP,0))
"RTN","RCXVDC4",68,0)
 . Q:RCXVD1=""
"RTN","RCXVDC4",69,0)
 . S X=$P(RCXVD1,U,6)  ;CPT proc
"RTN","RCXVDC4",70,0)
 . I RCXVCPT1'="",X'="",RCXVCPT1=X D
"RTN","RCXVDC4",71,0)
 .. S RCXVFND=1
"RTN","RCXVDC4",72,0)
 .. S X=$P(RCXVD1,U)
"RTN","RCXVDC4",73,0)
 .. S RCXVDB=RCXVBLNA_RCXVU_$$GET1^DIQ(399.2,X_",",.01,"E") ; Revenue Code
"RTN","RCXVDC4",74,0)
 .. S X=$P(RCXVD1,U,6)
"RTN","RCXVDC4",75,0)
 .. S RCXVDB=RCXVDB_RCXVU_$$GET1^DIQ(81,X_",",.01,"E") ; Procedures [P]
"RTN","RCXVDC4",76,0)
 .. S RCXVDB=RCXVDB_RCXVU_RCXVPCDT ; PROC. DT
"RTN","RCXVDC4",77,0)
 .. S RCXVDB=RCXVDB_RCXVU_$P(RCXVD1,U,2) ; Charges
"RTN","RCXVDC4",78,0)
 .. S ^TMP($J,RCXVBLN,"4-399B",RCXVCNT)=RCXVDB
"RTN","RCXVDC4",79,0)
 .. S ^TMP($J,"MTCH",RCXVCP)=""
"RTN","RCXVDC4",80,0)
 I 'RCXVFND S ^TMP($J,RCXVBLN,"4-399B",RCXVCNT)=""
"RTN","RCXVDC4",81,0)
 Q
"RTN","RCXVDC4",82,0)
 ;  
"RTN","RCXVDC4",83,0)
D39942 ; charge
"RTN","RCXVDC4",84,0)
 N X
"RTN","RCXVDC4",85,0)
 Q:$D(^TMP($J,"MTCH",RCXVPC))
"RTN","RCXVDC4",86,0)
 S RCXVD1=$G(^DGCR(399,RCXVD0,"RC",RCXVPC,0))
"RTN","RCXVDC4",87,0)
 Q:RCXVD1=""
"RTN","RCXVDC4",88,0)
 S X=$P(RCXVD1,U)
"RTN","RCXVDC4",89,0)
 S RCXVDB=RCXVBLNA_RCXVU_$$GET1^DIQ(399.2,X_",",.01,"E") ; Revenue Code
"RTN","RCXVDC4",90,0)
 S RCXVDB=RCXVDB_RCXVU_""  ;No CPT proc
"RTN","RCXVDC4",91,0)
 S RCXVDB=RCXVDB_RCXVU_"" ; No proc dt
"RTN","RCXVDC4",92,0)
 S RCXVDB=RCXVDB_RCXVU_$P(RCXVD1,U,2) ; Charges
"RTN","RCXVDC4",93,0)
 S RCXVCNT=RCXVCNT+1
"RTN","RCXVDC4",94,0)
 S ^TMP($J,RCXVBLN,"4-399A",RCXVCNT)=""
"RTN","RCXVDC4",95,0)
 S ^TMP($J,RCXVBLN,"4-399B",RCXVCNT)=RCXVDB
"RTN","RCXVDC4",96,0)
 Q
"RTN","RCXVDC4",97,0)
 ;
"VER")
8.0^22.0
"BLD",8191,6)
^241
**END**
**END**
