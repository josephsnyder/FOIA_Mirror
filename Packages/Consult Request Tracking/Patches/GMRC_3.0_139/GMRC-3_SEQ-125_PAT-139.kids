Released GMRC*3*139 SEQ #125
Extracted from mail message
**KIDS**:GMRC*3.0*139^

**INSTALL NAME**
GMRC*3.0*139
"BLD",11029,0)
GMRC*3.0*139^CONSULT/REQUEST TRACKING^0^3190823^y
"BLD",11029,4,0)
^9.64PA^^
"BLD",11029,6.3)
10
"BLD",11029,"ABPKG")
n
"BLD",11029,"INIT")
EN^GMRC139P
"BLD",11029,"KRN",0)
^9.67PA^1.61^23
"BLD",11029,"KRN",.4,0)
.4
"BLD",11029,"KRN",.401,0)
.401
"BLD",11029,"KRN",.402,0)
.402
"BLD",11029,"KRN",.403,0)
.403
"BLD",11029,"KRN",.5,0)
.5
"BLD",11029,"KRN",.84,0)
.84
"BLD",11029,"KRN",1.6,0)
1.6
"BLD",11029,"KRN",1.61,0)
1.61
"BLD",11029,"KRN",1.62,0)
1.62
"BLD",11029,"KRN",3.6,0)
3.6
"BLD",11029,"KRN",3.8,0)
3.8
"BLD",11029,"KRN",9.2,0)
9.2
"BLD",11029,"KRN",9.8,0)
9.8
"BLD",11029,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",11029,"KRN",9.8,"NM",1,0)
GMRCDST^^0^B137089664
"BLD",11029,"KRN",9.8,"NM","B","GMRCDST",1)

"BLD",11029,"KRN",19,0)
19
"BLD",11029,"KRN",19.1,0)
19.1
"BLD",11029,"KRN",101,0)
101
"BLD",11029,"KRN",409.61,0)
409.61
"BLD",11029,"KRN",771,0)
771
"BLD",11029,"KRN",779.2,0)
779.2
"BLD",11029,"KRN",870,0)
870
"BLD",11029,"KRN",8989.51,0)
8989.51
"BLD",11029,"KRN",8989.52,0)
8989.52
"BLD",11029,"KRN",8994,0)
8994
"BLD",11029,"KRN","B",.4,.4)

"BLD",11029,"KRN","B",.401,.401)

"BLD",11029,"KRN","B",.402,.402)

"BLD",11029,"KRN","B",.403,.403)

"BLD",11029,"KRN","B",.5,.5)

"BLD",11029,"KRN","B",.84,.84)

"BLD",11029,"KRN","B",1.6,1.6)

"BLD",11029,"KRN","B",1.61,1.61)

"BLD",11029,"KRN","B",1.62,1.62)

"BLD",11029,"KRN","B",3.6,3.6)

"BLD",11029,"KRN","B",3.8,3.8)

"BLD",11029,"KRN","B",9.2,9.2)

"BLD",11029,"KRN","B",9.8,9.8)

"BLD",11029,"KRN","B",19,19)

"BLD",11029,"KRN","B",19.1,19.1)

"BLD",11029,"KRN","B",101,101)

"BLD",11029,"KRN","B",409.61,409.61)

"BLD",11029,"KRN","B",771,771)

"BLD",11029,"KRN","B",779.2,779.2)

"BLD",11029,"KRN","B",870,870)

"BLD",11029,"KRN","B",8989.51,8989.51)

"BLD",11029,"KRN","B",8989.52,8989.52)

"BLD",11029,"KRN","B",8994,8994)

"BLD",11029,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11029,"QUES",0)
^9.62^^
"BLD",11029,"REQB",0)
^9.611^1^1
"BLD",11029,"REQB",1,0)
GMRC*3.0*124^2
"BLD",11029,"REQB","B","GMRC*3.0*124",1)

"INIT")
EN^GMRC139P
"MBREQ")
0
"PKG",406,-1)
1^1
"PKG",406,0)
CONSULT/REQUEST TRACKING^GMRC^CONSULTS/REQUESTS
"PKG",406,22,0)
^9.49I^1^1
"PKG",406,22,1,0)
3.0^2980101^2981113^1
"PKG",406,22,1,"PAH",1,0)
139^3190823
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","GMRC139P")
0^^B332622^n/a
"RTN","GMRC139P",1,0)
GMRC139P ;ABV/BL - Patch 139 Post-install;08/20/2019
"RTN","GMRC139P",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**139**;DEC 27, 1997;Build 10
"RTN","GMRC139P",3,0)
 ;
"RTN","GMRC139P",4,0)
EN ; Entry point for post install
"RTN","GMRC139P",5,0)
 ;
"RTN","GMRC139P",6,0)
 ;    IA:5421
"RTN","GMRC139P",7,0)
 ;   
"RTN","GMRC139P",8,0)
 ;    XOBWSN    -   REST web service name
"RTN","GMRC139P",9,0)
 ;    XOBCXT    -   web service context root  
"RTN","GMRC139P",10,0)
 ;    XOBCAURL  -   'check availability' url portion to follow context root [optional]
"RTN","GMRC139P",11,0)
 ; Using existing API for changing of WEB SERVICE value
"RTN","GMRC139P",12,0)
 N XOBWSN,XOBCXT,XOBCAURL
"RTN","GMRC139P",13,0)
 ;
"RTN","GMRC139P",14,0)
 S XOBWSN="DST GET ID SERVICE"
"RTN","GMRC139P",15,0)
 S XOBCXT="vs/v2/consultFactor"
"RTN","GMRC139P",16,0)
 S XOBCAURL=""
"RTN","GMRC139P",17,0)
 D REGREST^XOBWLIB(XOBWSN,XOBCXT,XOBCAURL)
"RTN","GMRC139P",18,0)
 Q
"RTN","GMRC139P",19,0)
 ;
"RTN","GMRCDST")
0^1^B137089664^B106297381
"RTN","GMRCDST",1,0)
GMRCDST ;ABV/BL - Retrieve Decision from DST server;03/28/2019
"RTN","GMRCDST",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**124,139**;DEC 27, 1997;Build 10
"RTN","GMRCDST",3,0)
 ;
"RTN","GMRCDST",4,0)
 ;IA6173  (In process of submission)
"RTN","GMRCDST",5,0)
 ;IA6171  (In process of submission)
"RTN","GMRCDST",6,0)
 ;
"RTN","GMRCDST",7,0)
PROT(MSG)  ;GMRC SIGNED CONSULT DST-PROTOCOL ENTRY POINT
"RTN","GMRCDST",8,0)
 ;
"RTN","GMRCDST",9,0)
 ;Extract Order Number FROM THE ORC SEGMENT
"RTN","GMRCDST",10,0)
 N GMRCMSG,GMRCPKG,MSH,ORC,IEN123,SIGN,ORA,X,SIGNED,DUP
"RTN","GMRCDST",11,0)
 S GMRCMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@GMRCMSG@(0))
"RTN","GMRCDST",12,0)
 S MSH=0 F  S MSH=$O(@GMRCMSG@(MSH)) Q:MSH'>0  Q:$E(@GMRCMSG@(MSH),1,3)="MSH"
"RTN","GMRCDST",13,0)
 Q:'MSH  Q:'$L($G(@GMRCMSG@(MSH)))
"RTN","GMRCDST",14,0)
 ;
"RTN","GMRCDST",15,0)
 S ORC=MSH F  S ORC=$O(@GMRCMSG@(+ORC)) Q:ORC'>0  I $E(@GMRCMSG@(ORC),1,3)="ORC" D
"RTN","GMRCDST",16,0)
 . S ORC=ORC_U_@GMRCMSG@(ORC)
"RTN","GMRCDST",17,0)
 . S ORIFN=+$P($P(ORC,"|",3),";")
"RTN","GMRCDST",18,0)
 ;GET THE CONSULT IEN FROM THE ORDER
"RTN","GMRCDST",19,0)
 S IEN123=0,X=$G(^OR(100,ORIFN,4)) I $P(X,";",2)="GMRC" S IEN123=+X
"RTN","GMRCDST",20,0)
 I IEN123="" Q "-1^No Consult found"
"RTN","GMRCDST",21,0)
 ;QUIT IF ORDER IS NOT SIGNED
"RTN","GMRCDST",22,0)
 S ORA=0,SIGN=0,SIGNED=0
"RTN","GMRCDST",23,0)
 F  S ORA=$O(^OR(100,ORIFN,8,ORA)) Q:+ORA'=ORA!(SIGNED)  D
"RTN","GMRCDST",24,0)
 . S SIGN=$P(^OR(100,ORIFN,8,ORA,0),"^",6)
"RTN","GMRCDST",25,0)
 . I SIGN>0 S SIGNED=1
"RTN","GMRCDST",26,0)
 Q:SIGNED=0 "-1^ORDER NOT SIGNED"
"RTN","GMRCDST",27,0)
 ;
"RTN","GMRCDST",28,0)
 ;Need the DUZ of user from Order file for Autoforward
"RTN","GMRCDST",29,0)
 K GMRCORNP
"RTN","GMRCDST",30,0)
 S GMRCORNP=$$GET1^DIQ(100,ORIFN,3,"I")
"RTN","GMRCDST",31,0)
 S ID=$$FINDIDO(ORIFN)
"RTN","GMRCDST",32,0)
 I ID="" Q "-1^NO DST ID FOUND"
"RTN","GMRCDST",33,0)
 I $P(ID,"^")="-1" Q "-1^NO DST DATA FOUND"
"RTN","GMRCDST",34,0)
 ;Check if this DST Note has been added to the consult already
"RTN","GMRCDST",35,0)
 ;is there an existing comment on the consult, check for duplicate ID
"RTN","GMRCDST",36,0)
 S DUP=0
"RTN","GMRCDST",37,0)
 I $D(^GMR(123,IEN123,40,0)) S DUP=$$DUPID(IEN123,ID)
"RTN","GMRCDST",38,0)
 I DUP Q "-1^DST NOTE ALREADY ADDED TO CONSULT"
"RTN","GMRCDST",39,0)
 ;
"RTN","GMRCDST",40,0)
 Q $$GETDST(IEN123,ID)
"RTN","GMRCDST",41,0)
 ;
"RTN","GMRCDST",42,0)
DUPID(IEN123,ID)  ;Check to see if this ID has already been entered into the consult
"RTN","GMRCDST",43,0)
 ;
"RTN","GMRCDST",44,0)
 N CNODE,CINC,DUP,NOTEID
"RTN","GMRCDST",45,0)
 S DUP=0,CNODE=0
"RTN","GMRCDST",46,0)
 I IEN123="" Q DUP
"RTN","GMRCDST",47,0)
 F  S CNODE=$O(^GMR(123,IEN123,40,CNODE)) Q:+CNODE'=CNODE!(DUP)  D
"RTN","GMRCDST",48,0)
 . S CINC=0
"RTN","GMRCDST",49,0)
 . F  S CINC=$O(^GMR(123,IEN123,40,CNODE,1,CINC)) Q:CINC=""!(DUP)  D
"RTN","GMRCDST",50,0)
 . . I ^GMR(123,IEN123,40,CNODE,1,CINC,0)["DST ID:" D
"RTN","GMRCDST",51,0)
 . . . S NOTEID=""
"RTN","GMRCDST",52,0)
 . . . S NOTEID=$P(^GMR(123,IEN123,40,CNODE,1,CINC,0),"DST ID:",2)
"RTN","GMRCDST",53,0)
 . . . I NOTEID[ID S DUP=1
"RTN","GMRCDST",54,0)
 Q DUP
"RTN","GMRCDST",55,0)
 ;
"RTN","GMRCDST",56,0)
GETDST(IEN123,ID) ;
"RTN","GMRCDST",57,0)
 ;This API retrieves the decision data from the DST database using ID
"RTN","GMRCDST",58,0)
 ;Input:
"RTN","GMRCDST",59,0)
 ; IEN123 The IEN of file #123
"RTN","GMRCDST",60,0)
 ; ID The DST ID
"RTN","GMRCDST",61,0)
 ;Output:
"RTN","GMRCDST",62,0)
 ; If decision data not found: -1^No decision data found
"RTN","GMRCDST",63,0)
 ; If decision data found: 1
"RTN","GMRCDST",64,0)
 ;
"RTN","GMRCDST",65,0)
 ;Autoforwarding variables added
"RTN","GMRCDST",66,0)
 ; AFOR: Indicator of Autoforward value = DAF-DST Forwarding:
"RTN","GMRCDST",67,0)
 ; APAY: Name of consult service from file 123.5 to forward to
"RTN","GMRCDST",68,0)
 ;
"RTN","GMRCDST",69,0)
 N A,B,CAPTIONS,COM,COMCT,DATA,I,SERVER,SERVICE,RESOURCE,REQUEST,RESPONSE,RESULT,RET,X,ERRFLG
"RTN","GMRCDST",70,0)
 K NUMERR
"RTN","GMRCDST",71,0)
 S ERRFLG=0,NUMERR=0
"RTN","GMRCDST",72,0)
 S SERVER="DST GET ID SERVER"
"RTN","GMRCDST",73,0)
 S SERVICE="DST GET ID SERVICE"
"RTN","GMRCDST",74,0)
 I ID=0 Q "-1^NO VALID ID SUBMITTED"
"RTN","GMRCDST",75,0)
 S RESOURCE="/"_ID
"RTN","GMRCDST",76,0)
 ; Get an instance of the REST request object.
"RTN","GMRCDST",77,0)
 S REQUEST=$$GETREST^XOBWLIB(SERVICE,SERVER)
"RTN","GMRCDST",78,0)
 S REQUEST.Timeout=1
"RTN","GMRCDST",79,0)
 ;
"RTN","GMRCDST",80,0)
TRYAG ; Execute the HTTP Get method.
"RTN","GMRCDST",81,0)
 K XUERR,RESPJSON,AFOR,APAY,GMRCSS
"RTN","GMRCDST",82,0)
 S AFOR=0,APAY=""  ;Set variable to check for AutoForward
"RTN","GMRCDST",83,0)
 S RESULT=$$GET^XOBWLIB(REQUEST,RESOURCE,.XUERR,0)
"RTN","GMRCDST",84,0)
 I 'RESULT D
"RTN","GMRCDST",85,0)
 . S COM(1)="DVE-DST Error from VistA:"  ;NEED TO WRITE ERROR TO 123 FILE
"RTN","GMRCDST",86,0)
 . S COM(2)=XUERR.code
"RTN","GMRCDST",87,0)
 . I XUERR["Http" S COM(3)=XUERR.statusLine
"RTN","GMRCDST",88,0)
 . I XUERR["ObjectError" S COM(3)=XUERR.domain,COM(4)=XUERR.errorType
"RTN","GMRCDST",89,0)
 . S ERRFLG=1,NUMERR=NUMERR+1
"RTN","GMRCDST",90,0)
 ;If the ERRFLG then store the error in the consult
"RTN","GMRCDST",91,0)
 I ERRFLG&(NUMERR<5) H 1 G TRYAG
"RTN","GMRCDST",92,0)
 I ERRFLG D CMT^GMRCGUIB(IEN123,.COM,"",DT,DUZ) Q 0
"RTN","GMRCDST",93,0)
 ; Process the response.
"RTN","GMRCDST",94,0)
 S RESPONSE=REQUEST.HttpResponse
"RTN","GMRCDST",95,0)
 S DATA=RESPONSE.Data
"RTN","GMRCDST",96,0)
 ;code is not really in JSON format, not changing variable names
"RTN","GMRCDST",97,0)
 S RESPJSON=""
"RTN","GMRCDST",98,0)
 F  Q:DATA.AtEnd  Set RESPJSON=RESPJSON_DATA.ReadLine()
"RTN","GMRCDST",99,0)
 S RESPJSON=$TR(RESPJSON,$C(10),"")
"RTN","GMRCDST",100,0)
 ;current data is blob of text with ^ delimited fields. Put each field on its own line
"RTN","GMRCDST",101,0)
 F I=1:1:$L(RESPJSON,"^") D
"RTN","GMRCDST",102,0)
 . S COM(I)=$P(RESPJSON,"^",I)
"RTN","GMRCDST",103,0)
 . I COM(I)="" K COM(I)
"RTN","GMRCDST",104,0)
 . ;check for autoforwarding GMRC*3.0*139
"RTN","GMRCDST",105,0)
 . I COM(I)["DAF-DST Forwarding:" D
"RTN","GMRCDST",106,0)
 . . I $P(COM(I),":",2)["YES" S AFOR=1
"RTN","GMRCDST",107,0)
 . I COM(I)["AFD-DST Forward to" D
"RTN","GMRCDST",108,0)
 . . S APAY=$P(COM(I),":",2)
"RTN","GMRCDST",109,0)
 . . I $E(APAY,1)=" " S APAY=$E(APAY,2,$L(APAY))  ;REMOVE LEADING SPACE FOR FORWARDED CONSULT
"RTN","GMRCDST",110,0)
 ;If we have data in the COM array store in the Note, other wise quit with an error
"RTN","GMRCDST",111,0)
 I $D(COM) D
"RTN","GMRCDST",112,0)
 . ;COM ARRAY IS EXPECTED TO BE SERIALLY NUMBERED
"RTN","GMRCDST",113,0)
 . N TCOM,COMNUM,I
"RTN","GMRCDST",114,0)
 . S COMNUM="",I=0
"RTN","GMRCDST",115,0)
 . F  S COMNUM=$O(COM(COMNUM)) Q:COMNUM=""  D
"RTN","GMRCDST",116,0)
 . . S I=I+1
"RTN","GMRCDST",117,0)
 . . S TCOM(I)=COM(COMNUM)
"RTN","GMRCDST",118,0)
 . ;Add autoforward message to data stream
"RTN","GMRCDST",119,0)
 . I AFOR S TCOM(I+1)="Consult forwarded by DST"
"RTN","GMRCDST",120,0)
 . ;
"RTN","GMRCDST",121,0)
 . K COM
"RTN","GMRCDST",122,0)
 . M COM=TCOM
"RTN","GMRCDST",123,0)
 . K TCOM
"RTN","GMRCDST",124,0)
 ;Need to make sure the Autoforward Service exists
"RTN","GMRCDST",125,0)
 I AFOR D
"RTN","GMRCDST",126,0)
 . ;Check for APAY being populated if not change AFOR and log an error
"RTN","GMRCDST",127,0)
 . I APAY="" D  Q
"RTN","GMRCDST",128,0)
 . . S AFOR=0
"RTN","GMRCDST",129,0)
 . . S COM(I+1)="DVE-DST Error from VistA: No Autoforward Target"
"RTN","GMRCDST",130,0)
 . ;Get Forwarding Service
"RTN","GMRCDST",131,0)
 . S GMRCSS="" S GMRCSS=$O(^GMR(123.5,"B",APAY,GMRCSS))
"RTN","GMRCDST",132,0)
 . Q:GMRCSS'=""
"RTN","GMRCDST",133,0)
 . ;The forwarding service did not exist. Log error in msg, stop autoforward
"RTN","GMRCDST",134,0)
 . S AFOR=0
"RTN","GMRCDST",135,0)
 . S I="A" S I=$O(COM(I),-1)
"RTN","GMRCDST",136,0)
 . S COM(I+1)="DVE-DST Error from VistA: Autoforward target not found"
"RTN","GMRCDST",137,0)
 I $D(COM) D  Q 1
"RTN","GMRCDST",138,0)
 . I 'AFOR D CMT^GMRCGUIB(IEN123,.COM,"",DT,DUZ) Q
"RTN","GMRCDST",139,0)
 . I AFOR D AFORT(IEN123,APAY,.COM,GMRCSS,GMRCORNP) Q
"RTN","GMRCDST",140,0)
 I '$D(COM) S COM(1)="DVE-DST ID ISSUE: No Content sent from DST"
"RTN","GMRCDST",141,0)
 D CMT^GMRCGUIB(IEN123,.COM,"",DT,DUZ) Q 1
"RTN","GMRCDST",142,0)
 Q
"RTN","GMRCDST",143,0)
 ;
"RTN","GMRCDST",144,0)
FINDIDO(ORIFN) ;
"RTN","GMRCDST",145,0)
 ;1. Find IEN of consult record
"RTN","GMRCDST",146,0)
 ;2. Call $$FINDID45 to retrieve DST ID from the #100,#4.5 (RESPONSES multiple)
"RTN","GMRCDST",147,0)
 ;3. If DST ID not found in 2. call $$FINDIDC to retrieve DST ID from #123,#20 (REASON FOR REQUEST)
"RTN","GMRCDST",148,0)
 ;4. Call $$GETDST to retrieve Decision data from DST database and save it as a comment
"RTN","GMRCDST",149,0)
 ;
"RTN","GMRCDST",150,0)
 ;Input: ORIFN=IEN of file #100
"RTN","GMRCDST",151,0)
 ;Output:
"RTN","GMRCDST",152,0)
 ; 1=DST ID found, decision data retrieved, and comment created in the consult record
"RTN","GMRCDST",153,0)
 ; -1^No Decision data found
"RTN","GMRCDST",154,0)
 ;
"RTN","GMRCDST",155,0)
 N ID,IEN123,X
"RTN","GMRCDST",156,0)
 S IEN123=0,X=$G(^OR(100,ORIFN,4)) I $P(X,";",2)="GMRC" S IEN123=+X
"RTN","GMRCDST",157,0)
 Q:'IEN123 "-1^No Decision data found"
"RTN","GMRCDST",158,0)
 S ID=$$FINDID45(ORIFN) ;First search for the DST ID in field #100,#4.5 (RESPONSES)
"RTN","GMRCDST",159,0)
 ;Having not found the ID in the #100,#4.5 field, now look for it in the consult
"RTN","GMRCDST",160,0)
 I ID="" S ID=$$FINDIDC(IEN123)
"RTN","GMRCDST",161,0)
 ;remove space
"RTN","GMRCDST",162,0)
 S ID=$TR(ID," ","")
"RTN","GMRCDST",163,0)
 I ID="" Q "-1^No Decision data found"
"RTN","GMRCDST",164,0)
 Q ID
"RTN","GMRCDST",165,0)
 ;Q $$GETDST(IEN123,ID)
"RTN","GMRCDST",166,0)
 ;
"RTN","GMRCDST",167,0)
FINDID45(ORIFN) ;
"RTN","GMRCDST",168,0)
 ;This API searches through the #4.5 (RESPONSES) multiple in file #100 for the DST ID
"RTN","GMRCDST",169,0)
 ;Input: ORIFN=IEN in file #100
"RTN","GMRCDST",170,0)
 ;Output: DST ID or ""
"RTN","GMRCDST",171,0)
 ;
"RTN","GMRCDST",172,0)
 N I,ID,IENS,N,N1,N2,OUT,STR,X,Y
"RTN","GMRCDST",173,0)
 S ID="",IENS=ORIFN_","
"RTN","GMRCDST",174,0)
 K OUT D GETS^DIQ(100,IENS,"4.5*","","OUT")
"RTN","GMRCDST",175,0)
 S N="" F  S N=$O(OUT(100.045,N)) Q:N=""  S (N1,STR)="" D
"RTN","GMRCDST",176,0)
 . F  S N1=$O(OUT(100.045,N,N1)) Q:N1=""  S STR=STR_OUT(100.045,N,N1) D
"RTN","GMRCDST",177,0)
 .. S N2="" F  S N2=$O(OUT(100.045,N,N1,N2)) Q:N2=""  S STR=STR_OUT(100.045,N,N1,N2)
"RTN","GMRCDST",178,0)
 . I STR["DST ID:" D
"RTN","GMRCDST",179,0)
 . . S STR=$P(STR,"DST ID:",2)
"RTN","GMRCDST",180,0)
 . . S STR=$P(STR,"--",1)  ;After refactoring str includes dashes at the end
"RTN","GMRCDST",181,0)
 . . F I=1:1:$L(STR) S Y=$E(STR,I) Q:Y="#"  S ID=ID_Y
"RTN","GMRCDST",182,0)
 Q ID
"RTN","GMRCDST",183,0)
 ;
"RTN","GMRCDST",184,0)
FINDIDC(IEN123) ;
"RTN","GMRCDST",185,0)
 ;This API searches FILE #123, FIELD #20 (REASON FOR REQUEST)looking for a 
"RTN","GMRCDST",186,0)
 ;"DST ID:" tag and, if found, will extract the DST ID and call API 
"RTN","GMRCDST",187,0)
 ;$$GETDST to retrieve the decision data from the DST database and create
"RTN","GMRCDST",188,0)
 ;a comment in the consult containing the decision data
"RTN","GMRCDST",189,0)
 ;
"RTN","GMRCDST",190,0)
 ;Input: IEN123 IEN of file #123
"RTN","GMRCDST",191,0)
 ;Output: DST ID or ""
"RTN","GMRCDST",192,0)
 ;
"RTN","GMRCDST",193,0)
 N I,ID,IENS,N,OUT,X,Y
"RTN","GMRCDST",194,0)
 S ID="",IENS=IEN123_","
"RTN","GMRCDST",195,0)
 K OUT D GETS^DIQ(123,IENS,"20","","OUT")
"RTN","GMRCDST",196,0)
 S N="" F  S N=$O(OUT(123,IENS,20,N)) Q:N=""  S X=OUT(123,IENS,20,N) D:X["DST ID:"
"RTN","GMRCDST",197,0)
 .S X=$P(X,"DST ID:",2) F I=1:1:$L(X) S Y=$E(X,I) Q:Y="#"  S ID=ID_Y
"RTN","GMRCDST",198,0)
 Q ID
"RTN","GMRCDST",199,0)
 ;
"RTN","GMRCDST",200,0)
 ;
"RTN","GMRCDST",201,0)
 ;Post Install to add DST web server/service
"RTN","GMRCDST",202,0)
EN ;
"RTN","GMRCDST",203,0)
 N FDA     ; -- FileMan Data Array
"RTN","GMRCDST",204,0)
 N WEBVICE ; -- Web Service Internal Entry Number
"RTN","GMRCDST",205,0)
 N WEBVER  ; -- Web Server Internal Entry Number
"RTN","GMRCDST",206,0)
 N MULTIEN ; -- Web Service Multiple Internal Entry Number
"RTN","GMRCDST",207,0)
 N WSTAT   ; -- Web Service Status
"RTN","GMRCDST",208,0)
 N IENROOT,MSGROOT,IENROOT1,VICEIEN
"RTN","GMRCDST",209,0)
 ;
"RTN","GMRCDST",210,0)
 K FDA
"RTN","GMRCDST",211,0)
 S WEBVICE=$O(^XOB(18.02,"B","DST GET ID SERVICE",0))
"RTN","GMRCDST",212,0)
 S WEBVICE=$S(WEBVICE:WEBVICE,1:"+1")
"RTN","GMRCDST",213,0)
 S FDA(18.02,WEBVICE_",",.01)="DST GET ID SERVICE"                  ; NAME
"RTN","GMRCDST",214,0)
 S FDA(18.02,WEBVICE_",",.02)="REST"                                ; TYPE
"RTN","GMRCDST",215,0)
 S FDA(18.02,WEBVICE_",",200)="vs/v1/consultFactor"                           ; CONTEXT ROOT
"RTN","GMRCDST",216,0)
 D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRCDST",217,0)
 K IENROOT,MSGROOT,FDA
"RTN","GMRCDST",218,0)
 ;
"RTN","GMRCDST",219,0)
 S WEBVER=$O(^XOB(18.12,"B","DST GET ID SERVER",0))
"RTN","GMRCDST",220,0)
 S WEBVER=$S(WEBVER:WEBVER,1:"+1")
"RTN","GMRCDST",221,0)
 S FDA(18.12,WEBVER_",",.01)="DST GET ID SERVER"                    ; NAME
"RTN","GMRCDST",222,0)
 S FDA(18.12,WEBVER_",",.03)="443"                                          ; PORT
"RTN","GMRCDST",223,0)
 S FDA(18.12,WEBVER_",",.04)="dst-dev.domain.ext"    ; SERVER
"RTN","GMRCDST",224,0)
 S FDA(18.12,WEBVER_",",.06)="ENABLED"                                   ; STATUS 1-ENABLED / 0-DISABLED
"RTN","GMRCDST",225,0)
 S FDA(18.12,WEBVER_",",.07)=60                                          ; DEFAULT HTTP TIMEOUT
"RTN","GMRCDST",226,0)
 S FDA(18.12,WEBVER_",",1.01)="NO"                                       ; LOGIN REQUIRED
"RTN","GMRCDST",227,0)
 S FDA(18.12,WEBVER_",",3.01)="FALSE"                                    ; SSL ENABLED
"RTN","GMRCDST",228,0)
 ;Need to determine if we are creating a new file, or updating an existing one
"RTN","GMRCDST",229,0)
 N NEW
"RTN","GMRCDST",230,0)
 S NEW=1
"RTN","GMRCDST",231,0)
 I $D(^XOB(18.12,WEBVER,0)) S NEW=0
"RTN","GMRCDST",232,0)
 I NEW=1 D
"RTN","GMRCDST",233,0)
 . D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRCDST",234,0)
 I NEW=0 D
"RTN","GMRCDST",235,0)
 . D FILE^DIE("E","FDA","MSGROOT")
"RTN","GMRCDST",236,0)
 ;
"RTN","GMRCDST",237,0)
 ;
"RTN","GMRCDST",238,0)
 S IENROOT1=$G(IENROOT(1)),MULTIEN=0
"RTN","GMRCDST",239,0)
 ;
"RTN","GMRCDST",240,0)
 S WEBVER=$S(IENROOT1:IENROOT1,1:WEBVER)
"RTN","GMRCDST",241,0)
 K IENROOT,MSGROOT,FDA
"RTN","GMRCDST",242,0)
 S VICEIEN=0 F  S VICEIEN=$O(^XOB(18.12,WEBVER,100,"B",VICEIEN)) Q:'VICEIEN  I $$GET1^DIQ(18.02,VICEIEN,.01)="DST GET ID SERVICE" S MULTIEN=VICEIEN Q
"RTN","GMRCDST",243,0)
 S MULTIEN=$S(MULTIEN:MULTIEN,1:"+1")
"RTN","GMRCDST",244,0)
 S FDA(18.121,MULTIEN_","_WEBVER_",",.01)="DST GET ID SERVICE"       ; WEB SERVICE
"RTN","GMRCDST",245,0)
 S FDA(18.121,MULTIEN_","_WEBVER_",",.06)="ENABLED"                  ; STATUS 1-ENABLED / 0-DISABLED
"RTN","GMRCDST",246,0)
 D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRCDST",247,0)
 ;
"RTN","GMRCDST",248,0)
SPROT  ;Set protocol GMRC SIGNED CONSULT DST as an item on GMRC EVSEND OR
"RTN","GMRCDST",249,0)
 ;
"RTN","GMRCDST",250,0)
 N GMRDGIEN,GMRERR,GMREXIT,GMRFDA,GMRIEN,GMRRTCL,J,PRTCLITM,V,X,Y
"RTN","GMRCDST",251,0)
 ;
"RTN","GMRCDST",252,0)
 D MES^XPDUTL($T(+0)_" post-init routine started "_$$HTE^XLFDT($H))
"RTN","GMRCDST",253,0)
 S V=$$SVDATA D MES^XPDUTL("Old data saved in "_V)
"RTN","GMRCDST",254,0)
 S GMRRTCL="GMRC SIGNED CONSULT DST",GMRIEN=$O(^ORD(101,"B",GMRRTCL,0))
"RTN","GMRCDST",255,0)
  ; protocol missing, write message and exit
"RTN","GMRCDST",256,0)
 I '(GMRIEN>0) D MES^XPDUTL(GMRRTCL_" protocol not found. It must be installed to proceed.") Q
"RTN","GMRCDST",257,0)
 ;
"RTN","GMRCDST",258,0)
 S Y="GMRC EVSEND OR",GMRDGIEN=$O(^ORD(101,"B",Y,0))
"RTN","GMRCDST",259,0)
 ; protocol missing, write message and exit
"RTN","GMRCDST",260,0)
 I '(GMRDGIEN>0) D MES^XPDUTL(Y_" protocol not found.  No ITEM update performed.") Q
"RTN","GMRCDST",261,0)
 ; make GMRC EVSEND OR an extended action
"RTN","GMRCDST",262,0)
 S GMRFDA(101,GMRDGIEN_",",4)="X"
"RTN","GMRCDST",263,0)
 D UPDATE^DIE("","GMRFDA","","GMRERR")
"RTN","GMRCDST",264,0)
 I $D(GMRERR) D  Q  ; something went wrong
"RTN","GMRCDST",265,0)
 .D MES^XPDUTL("FileMan error when editing GMRC EVSEND OR protocol")
"RTN","GMRCDST",266,0)
 .N V S V="GMRERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","GMRCDST",267,0)
 ;
"RTN","GMRCDST",268,0)
 ; is protocol already an item?
"RTN","GMRCDST",269,0)
 S GMREXIT=$O(^ORD(101,GMRDGIEN,10,"B",GMRIEN,0))
"RTN","GMRCDST",270,0)
 I GMREXIT D MES^XPDUTL(GMRRTCL_" already an ITEM in "_Y_".  No update needed.") Q
"RTN","GMRCDST",271,0)
 ;
"RTN","GMRCDST",272,0)
 ; add protocol as ITEM
"RTN","GMRCDST",273,0)
 K GMRFDA,GMRERR
"RTN","GMRCDST",274,0)
 S GMRFDA(101.01,"+1,"_GMRDGIEN_",",.01)=GMRIEN
"RTN","GMRCDST",275,0)
 D UPDATE^DIE("","GMRFDA","PRTCLITM","GMRERR")
"RTN","GMRCDST",276,0)
 I $D(GMRERR) D  Q  ; something went wrong
"RTN","GMRCDST",277,0)
 .D MES^XPDUTL("FileMan error when adding ITEM to GMRC EVSEND OR protocol")
"RTN","GMRCDST",278,0)
 .N V S V="GMRERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","GMRCDST",279,0)
 ; new ITEM sub-file IEN will be in PRTCLITM(1)
"RTN","GMRCDST",280,0)
 D MES^XPDUTL(GMRRTCL_" protocol update finished "_$$HTE^XLFDT($H))
"RTN","GMRCDST",281,0)
 ;
"RTN","GMRCDST",282,0)
 Q
"RTN","GMRCDST",283,0)
 ;
"RTN","GMRCDST",284,0)
SVDATA() ; extrinsic variable, save original FileMan data, returns storage node
"RTN","GMRCDST",285,0)
 ;
"RTN","GMRCDST",286,0)
 D DT^DICRW
"RTN","GMRCDST",287,0)
 N FMERRCNT,GMRXTMP,GMRIEN,LN,NTRY,TXT,V,X,Y
"RTN","GMRCDST",288,0)
 S Y=$$NOW^XLFDT,GMRXTMP=$NA(^XTMP("GMR INSTALL LOG",Y))  ; XTMP storage location
"RTN","GMRCDST",289,0)
 ; ^XTMP log data expires in 90 days
"RTN","GMRCDST",290,0)
 S X=$G(@GMRXTMP@(0)) S:X="" @GMRXTMP@(0)=$$FMADD^XLFDT(DT,90)_U_Y_"^GMR installation "_$$FMTE^XLFDT(Y)
"RTN","GMRCDST",291,0)
 ;
"RTN","GMRCDST",292,0)
 S FMERRCNT=0  ; FileMan error counter
"RTN","GMRCDST",293,0)
 ; save entries in FileMan items list
"RTN","GMRCDST",294,0)
 F LN=1:1 S TXT=$P($T(FMITMS+LN),";;",2,99) Q:TXT=""  D
"RTN","GMRCDST",295,0)
 .N FLNO,FMARRY,FMERR  ; file #, FileMan returned value and error message arrays
"RTN","GMRCDST",296,0)
 .S FLNO=+$P(TXT,U),X=$P(TXT,U,2,99)  ; file number and target entry
"RTN","GMRCDST",297,0)
 .Q:'(FLNO>1)!(X="")  ; file and entry required
"RTN","GMRCDST",298,0)
 .S GMRIEN=$$FIND1^DIC(FLNO,"","",X,"","","FMERR")  ; lookup value in X is external format
"RTN","GMRCDST",299,0)
 .I $D(FMERR) D  Q  ; log error message and quit
"RTN","GMRCDST",300,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @GMRXTMP@("FM LOOKUP ERROR",FMERRCNT,V)=@V
"RTN","GMRCDST",301,0)
 .;
"RTN","GMRCDST",302,0)
 .S:'(GMRIEN>0) FMERRCNT=FMERRCNT+1,@GMRXTMP@("FM ENTRY NOT FOUND",FMERRCNT)=TXT  ; entry
"RTN","GMRCDST",303,0)
 .S:GMRIEN>0 @GMRXTMP@("ENTRY",FLNO,GMRIEN)="entry found"
"RTN","GMRCDST",304,0)
 .K FMERR  ; just in case
"RTN","GMRCDST",305,0)
 .D GETS^DIQ(FLNO,GMRIEN_",","**","EN","FMARRY","FMERR")  ; data including sub-files, ignore null values
"RTN","GMRCDST",306,0)
 .I $D(FMERR) D  ; log error message
"RTN","GMRCDST",307,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @GMRXTMP@("FM DATA ERROR",FMERRCNT,V)=@V
"RTN","GMRCDST",308,0)
 .; save the data
"RTN","GMRCDST",309,0)
 .M @GMRXTMP@("ENTRY")=FMARRY
"RTN","GMRCDST",310,0)
 ;
"RTN","GMRCDST",311,0)
 Q GMRXTMP  ; return ^XTMP storage location
"RTN","GMRCDST",312,0)
 ;
"RTN","GMRCDST",313,0)
FMITMS ; list of FileMan entries: "file # ^ .01 field value"
"RTN","GMRCDST",314,0)
 ;;101^GMRC EVSEND OR
"RTN","GMRCDST",315,0)
 ;
"RTN","GMRCDST",316,0)
 Q
"RTN","GMRCDST",317,0)
AFORT(IEN123,APAY,COM,GMRCSS,GMRCORNP)  ; Entry point for AutoForwarding of a consult
"RTN","GMRCDST",318,0)
 ;requires the Name of the consult we are forwarding too
"RTN","GMRCDST",319,0)
 ;IEN123 - IEN of consult from File 123
"RTN","GMRCDST",320,0)
 ;GMRCSS - Service to which consult is being forwarded
"RTN","GMRCDST",321,0)
 ;GMRCATTN - Provider whose attention consult is sent to. Can be "" or pointer to File 200
"RTN","GMRCDST",322,0)
 ;GMRCURGI - Urgency of the request from the 123 file pointing to the 101 file
"RTN","GMRCDST",323,0)
 ;GMRCORNP - Person who is responsible for forwarding the consult
"RTN","GMRCDST",324,0)
 ;COM is the comments array explaining the forwarding action from DST
"RTN","GMRCDST",325,0)
 ;     passed in as COM(1)="Xxxx Xxxxx...",COM(2)="Xxxx Xx Xxx...", COM(3)="Xxxxx Xxx Xx...", etc.
"RTN","GMRCDST",326,0)
 K GMRCATTN,ORDATE,GMRCURGI
"RTN","GMRCDST",327,0)
 S GMRCATTN="",ORDATE=""
"RTN","GMRCDST",328,0)
 S GMRCURGI=$P(^GMR(123,IEN123,0),"^",9)
"RTN","GMRCDST",329,0)
 S Y=$$FR^GMRCGUIA(IEN123,GMRCSS,GMRCORNP,GMRCATTN,GMRCURGI,.COM,ORDATE)
"RTN","GMRCDST",330,0)
 Q
"VER")
8.0^22.2
**END**
**END**

