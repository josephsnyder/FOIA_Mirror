Released DI*22*162 SEQ #143
Extracted from mail message
**KIDS**:DI*22.0*162^

**INSTALL NAME**
DI*22.0*162
"BLD",770,0)
DI*22.0*162^VA FILEMAN^0^3090929^y
"BLD",770,1,0)
^^2^2^3090929^^^^
"BLD",770,1,1,0)
See patch DI*22*162 in the National Patch Module on FORUM for complete
"BLD",770,1,2,0)
information on this patch.
"BLD",770,4,0)
^9.64PA^^
"BLD",770,6)
1^
"BLD",770,6.3)
19
"BLD",770,"ABPKG")
n
"BLD",770,"INID")
^n
"BLD",770,"INIT")
POSTINIT^DIPR162
"BLD",770,"KRN",0)
^9.67PA^779.2^20
"BLD",770,"KRN",.4,0)
.4
"BLD",770,"KRN",.401,0)
.401
"BLD",770,"KRN",.402,0)
.402
"BLD",770,"KRN",.403,0)
.403
"BLD",770,"KRN",.5,0)
.5
"BLD",770,"KRN",.84,0)
.84
"BLD",770,"KRN",3.6,0)
3.6
"BLD",770,"KRN",3.8,0)
3.8
"BLD",770,"KRN",9.2,0)
9.2
"BLD",770,"KRN",9.8,0)
9.8
"BLD",770,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",770,"KRN",9.8,"NM",1,0)
DINIT4^^0^B11956513
"BLD",770,"KRN",9.8,"NM",2,0)
DDBR2^^0^B18132393
"BLD",770,"KRN",9.8,"NM",3,0)
DIPR162^^0^B18238811
"BLD",770,"KRN",9.8,"NM",4,0)
DIDU^^0^B38421854
"BLD",770,"KRN",9.8,"NM",5,0)
DIQG^^0^B36451220
"BLD",770,"KRN",9.8,"NM",6,0)
DIDT^^0^B19912051
"BLD",770,"KRN",9.8,"NM",7,0)
DICA3^^0^B4698553
"BLD",770,"KRN",9.8,"NM","B","DDBR2",2)

"BLD",770,"KRN",9.8,"NM","B","DICA3",7)

"BLD",770,"KRN",9.8,"NM","B","DIDT",6)

"BLD",770,"KRN",9.8,"NM","B","DIDU",4)

"BLD",770,"KRN",9.8,"NM","B","DINIT4",1)

"BLD",770,"KRN",9.8,"NM","B","DIPR162",3)

"BLD",770,"KRN",9.8,"NM","B","DIQG",5)

"BLD",770,"KRN",19,0)
19
"BLD",770,"KRN",19,"NM",0)
^9.68A^^
"BLD",770,"KRN",19.1,0)
19.1
"BLD",770,"KRN",101,0)
101
"BLD",770,"KRN",409.61,0)
409.61
"BLD",770,"KRN",771,0)
771
"BLD",770,"KRN",779.2,0)
779.2
"BLD",770,"KRN",870,0)
870
"BLD",770,"KRN",8989.51,0)
8989.51
"BLD",770,"KRN",8989.52,0)
8989.52
"BLD",770,"KRN",8994,0)
8994
"BLD",770,"KRN","B",.4,.4)

"BLD",770,"KRN","B",.401,.401)

"BLD",770,"KRN","B",.402,.402)

"BLD",770,"KRN","B",.403,.403)

"BLD",770,"KRN","B",.5,.5)

"BLD",770,"KRN","B",.84,.84)

"BLD",770,"KRN","B",3.6,3.6)

"BLD",770,"KRN","B",3.8,3.8)

"BLD",770,"KRN","B",9.2,9.2)

"BLD",770,"KRN","B",9.8,9.8)

"BLD",770,"KRN","B",19,19)

"BLD",770,"KRN","B",19.1,19.1)

"BLD",770,"KRN","B",101,101)

"BLD",770,"KRN","B",409.61,409.61)

"BLD",770,"KRN","B",771,771)

"BLD",770,"KRN","B",779.2,779.2)

"BLD",770,"KRN","B",870,870)

"BLD",770,"KRN","B",8989.51,8989.51)

"BLD",770,"KRN","B",8989.52,8989.52)

"BLD",770,"KRN","B",8994,8994)

"BLD",770,"PRE")
DIPR162
"BLD",770,"QUES",0)
^9.62^^
"BLD",770,"REQB",0)
^9.611^4^4
"BLD",770,"REQB",1,0)
DI*22.0*48^1
"BLD",770,"REQB",2,0)
DI*22.0*149^1
"BLD",770,"REQB",3,0)
DI*22.0*35^1
"BLD",770,"REQB",4,0)
DI*22.0*147^1
"BLD",770,"REQB","B","DI*22.0*147",4)

"BLD",770,"REQB","B","DI*22.0*149",2)

"BLD",770,"REQB","B","DI*22.0*35",3)

"BLD",770,"REQB","B","DI*22.0*48",1)

"INIT")
POSTINIT^DIPR162
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
VA FILEMAN^DI^FM INIT
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
22.0^2990330^3080318^1163
"PKG",5,22,1,"PAH",1,0)
162^3090929^1163
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3090929
"PKG",5,22,1,"PAH",1,1,1,0)
See patch DI*22*162 in the National Patch Module on FORUM for complete
"PKG",5,22,1,"PAH",1,1,2,0)
information on this patch.
"PRE")
DIPR162
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","DDBR2")
0^2^B18132393^B17246880
"RTN","DDBR2",1,0)
DDBR2 ;SFISC/DCL-VA FILEMAN BROWSER ;26AUG2009
"RTN","DDBR2",2,0)
 ;;22.0;VA FileMan;**162**;Mar 30, 1999;Build 19
"RTN","DDBR2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DDBR2",4,0)
 Q
"RTN","DDBR2",5,0)
SWITCH(DDBLST,DDBRET) ;Switch to another document in list or FileMan Database
"RTN","DDBR2",6,0)
 I $E(DDBSA,1,11)="^DI(.84,920" D EXIT^DDBR0 Q  ;!(DDBSA="^XTMP(""DDBDOC"")") Q
"RTN","DDBR2",7,0)
 I DDBSA=$NA(^TMP("DDWB",$J)) G EXIT^DDBR0:$G(DDBRET)["R",SWITCH^DDBRWB Q
"RTN","DDBR2",8,0)
 N DDBLN,DDBZ,DIC,DIR,X,Y,DIRUT,DIROUT,DUOUT,DILN
"RTN","DDBR2",9,0)
 S DILN=DDBRSA(DDBRSA,"DDBSRL")-2
"RTN","DDBR2",10,0)
 S:$G(DDBLST)="" DDBLST="^TMP(""DDBLST"",$J)" S DDBLN=$S($D(@DDBLST@("A",DDBSA)):^(DDBSA),1:$O(@DDBLST@(" "),-1)+1)
"RTN","DDBR2",11,0)
 I DDBFLG["R",'$D(@DDBLST) D SFR() G PS
"RTN","DDBR2",12,0)
 I DDBFLG["A" D SFR() G PS
"RTN","DDBR2",13,0)
 I $G(DDBRET)["R" D  G:$G(Y) PS Q
"RTN","DDBR2",14,0)
 .Q:DDBPSA'>0
"RTN","DDBR2",15,0)
 .Q:'$D(@DDBLST@("APSA",DDBPSA))  S X=^(DDBPSA) S:$D(@DDBLST@("A",X)) Y=^(X)
"RTN","DDBR2",16,0)
 .I $G(Y) S DDBPSA=DDBPSA-1 N DDBPSA D SAVEDDB(DDBLST,DDBLN),USAVEDDB(DDBLST,+Y)
"RTN","DDBR2",17,0)
 .Q
"RTN","DDBR2",18,0)
BRMC D BRM
"RTN","DDBR2",19,0)
 I $D(@DDBLST) D
"RTN","DDBR2",20,0)
 .I $O(@DDBLST@(" "),-1)=1,$G(@DDBLST@(1,"DDBSA"))=DDBSA Q
"RTN","DDBR2",21,0)
 .;W "Current list: ",!
"RTN","DDBR2",22,0)
 .S DDBZ=$G(@DDBLST@("A",DDBSA),0)
"RTN","DDBR2",23,0)
 .;S X=0 F  S X=$O(@DDBLST@(X)) Q:X'>0  W:X'=DDBZ !,$J(X,3),"  ",$E(@DDBLST@(X,0),1,75)
"RTN","DDBR2",24,0)
 .W !
"RTN","DDBR2",25,0)
 .K DIR0
"RTN","DDBR2",26,0)
 .;S DIR(0)="Y",DIR("A")="Do you wish to select from current list? ",DIR("B")="YES" D ^DIR,SFR("to Current List"):Y=0&(DDBFLG["R") Q:$D(DIRUT)!(Y'>0)
"RTN","DDBR2",27,0)
 .I DDBFLG'["R" S DIR(0)="Y",DIR("A")="Do you wish to select from current list",DIR("B")="YES" D ^DIR Q:$D(DIRUT)!(Y'>0)
"RTN","DDBR2",28,0)
 .S DIC=$$OREF^DIQGU(DDBLST),DIC(0)="EMQ",DIC("S")="I +Y'=DDBZ",DIC("W")="W:$E(^(0))=U ^(0)",X="??" D ^DIC  ;K DIC("S") Q:Y'>0
"RTN","DDBR2",29,0)
 .S DIC(0)="AEMQ"
"RTN","DDBR2",30,0)
 .D ^DIC K DIC("S") Q:Y'>0
"RTN","DDBR2",31,0)
 .D SAVEDDB(DDBLST,DDBLN),USAVEDDB(DDBLST,+Y)
"RTN","DDBR2",32,0)
 .S DIROUT=1
"RTN","DDBR2",33,0)
 N DDBLNA
"RTN","DDBR2",34,0)
 S:DDBFLG["R" DIROUT=1
"RTN","DDBR2",35,0)
 I '$D(DIROUT) D LIST^DDBR3(.DDBLNA)
"RTN","DDBR2",36,0)
 I $G(DDBLNA,-1)=-1 G PS
"RTN","DDBR2",37,0)
 I $G(DDBLNA(6))=DDBSA G PS  ;if current document selected again
"RTN","DDBR2",38,0)
 I $G(DDBLNA(6))]"",$D(@DDBLST@("APSA",DDBSA)) G PS  ;if already in list
"RTN","DDBR2",39,0)
 I DDBLNA'>0 W $C(7),!!,"** NO TEXT** ",DDBLNA(5) H 3
"RTN","DDBR2",40,0)
 D:DDBLNA>0 SAVEDDB(DDBLST,DDBLN),WP(.DDBLNA)
"RTN","DDBR2",41,0)
PS D PSR^DDBR0(1)
"RTN","DDBR2",42,0)
 Q
"RTN","DDBR2",43,0)
 ;
"RTN","DDBR2",44,0)
WP(DDBX) ;
"RTN","DDBR2",45,0)
 S DDBSA=DDBX(6)
"RTN","DDBR2",46,0)
 S DDBPMSG=DDBX(5)
"RTN","DDBR2",47,0)
 S DDBHDR=$$CTXT^DDBR(DDBPMSG,$J("",IOM+1),IOM)
"RTN","DDBR2",48,0)
 S DDBTL=$P(@DDBSA@(0),"^",3)
"RTN","DDBR2",49,0)
 S DDBTPG=DDBTL\DDBSRL+(DDBTL#DDBSRL'<1)
"RTN","DDBR2",50,0)
 S DDBZN=1
"RTN","DDBR2",51,0)
 S DDBDM=0
"RTN","DDBR2",52,0)
 S DDBSF=1
"RTN","DDBR2",53,0)
 S DDBST=IOM
"RTN","DDBR2",54,0)
 S DDBC="^TMP(""DDBC"",""DDBC"",$J)"
"RTN","DDBR2",55,0)
 I '$D(@DDBC) F I=1,22:22:176 S @DDBC@(I)=""
"RTN","DDBR2",56,0)
 S DDBL=0
"RTN","DDBR2",57,0)
 Q
"RTN","DDBR2",58,0)
 ;
"RTN","DDBR2",59,0)
SAVEDDB(DDBLIST,IEN,NSAPSA) ;Save local varialbes into ^TMP("DDBLIST",$J,IEN)
"RTN","DDBR2",60,0)
 ;DDBS  array to save list
"RTN","DDBR2",61,0)
 ;IEN   internal entry
"RTN","DDBR2",62,0)
 ;NSAPSA Not Set "APSA" x-ref if undefined, pass 1 to not set NSAPSA (optional - default is to set "APSA")
"RTN","DDBR2",63,0)
 S NSAPSA=+$G(NSAPSA)
"RTN","DDBR2",64,0)
 N I,X
"RTN","DDBR2",65,0)
 F I="HDR","HDRC","SA","ZN","DM","PMSG","L","C","TL","SF","ST","RE","RPE" S X="DDB"_I,@DDBLIST@(IEN,X)=@X
"RTN","DDBR2",66,0)
 ;I $D(DDBFNO) S @DDBLIST@(IEN,DDBFNO)=DDBFNO  ;decided to keep it the same throughout the browse session (Next Find String)
"RTN","DDBR2",67,0)
 S @DDBLIST@(IEN,0)=DDBPMSG
"RTN","DDBR2",68,0)
 S:'$D(@DDBLIST@(0)) ^(0)="CURRENT LIST^1"
"RTN","DDBR2",69,0)
 S:'$D(@DDBLIST@("A",DDBSA)) @DDBLIST@("A",DDBSA)=IEN
"RTN","DDBR2",70,0)
 S:'$D(@DDBLIST@("B",DDBPMSG,IEN)) @DDBLIST@("B",DDBPMSG,IEN)=""
"RTN","DDBR2",71,0)
 I $G(DDBRET)["R",DDBRPE=DDBRE Q
"RTN","DDBR2",72,0)
 Q:NSAPSA
"RTN","DDBR2",73,0)
 S X=$O(@DDBLST@("APSA"," "),-1)+1
"RTN","DDBR2",74,0)
 I $G(@DDBLIST@("APSA",X-1))=DDBSA S DDBPSA=X-1 Q
"RTN","DDBR2",75,0)
 S @DDBLIST@("APSA",X)=DDBSA,DDBPSA=X
"RTN","DDBR2",76,0)
 Q
"RTN","DDBR2",77,0)
 ;
"RTN","DDBR2",78,0)
USAVEDDB(DDBLIST,IEN) ;Unsave varialbes in ^TMP("DDBLIST",$J,IEN) to locals
"RTN","DDBR2",79,0)
 ;DDBS  array to save list
"RTN","DDBR2",80,0)
 ;IEN   internal entry
"RTN","DDBR2",81,0)
 N I,X
"RTN","DDBR2",82,0)
 F I="HDR","HDRC","SA","ZN","DM","PMSG","L","C","TL","SF","ST","RE","RPE" S X="DDB"_I,@X=@DDBLIST@(IEN,X)
"RTN","DDBR2",83,0)
 S DDBTPG=DDBTL\DDBSRL+(DDBTL#DDBSRL'<1)
"RTN","DDBR2",84,0)
 ;I $D(@DDBLIST@(IEN,"DDBFNO")) S DDBFNO=@DDBLIST@(IEN,"DDBFNO")
"RTN","DDBR2",85,0)
 Q
"RTN","DDBR2",86,0)
 ;
"RTN","DDBR2",87,0)
 ;
"RTN","DDBR2",88,0)
CTXT(X,T,W) ;Center X in T which is W characters wide (usually spaces) and W for screen width
"RTN","DDBR2",89,0)
 Q:X="" $G(T)
"RTN","DDBR2",90,0)
 N HW
"RTN","DDBR2",91,0)
 S W=$G(W,79),HW=W\2
"RTN","DDBR2",92,0)
 S $E(T,HW-($L(X)\2),HW-($L(X)\2)+$L(X))=X Q T
"RTN","DDBR2",93,0)
OREF(X) N X1,X2 S X1=$P(X,"(")_"(",X2=$$OR2($P(X,"(",2)) Q:X2="" X1 Q X1_X2_","
"RTN","DDBR2",94,0)
OR2(%) Q:%=")"!(%=",") "" Q:$L(%)=1 %  S:"),"[$E(%,$L(%)) %=$E(%,1,$L(%)-1) Q %
"RTN","DDBR2",95,0)
 ;
"RTN","DDBR2",96,0)
BRM ;BROWSE MANAGER SCREEN
"RTN","DDBR2",97,0)
 N DX,DY,X
"RTN","DDBR2",98,0)
 S DX=0,DY=$P(DDBSY,";"),X=$$CTXT^DDBR("BROWSE SWITCH MANAGER",$J("",IOM+1),IOM)
"RTN","DDBR2",99,0)
 X IOXY
"RTN","DDBR2",100,0)
 W $P(DDGLVID,DDGLDEL,6)  ;rvon
"RTN","DDBR2",101,0)
 W $P(DDGLVID,DDGLDEL,4)  ;uon
"RTN","DDBR2",102,0)
 W X
"RTN","DDBR2",103,0)
 W $P(DDGLVID,DDGLDEL,10)  ;rvoff
"RTN","DDBR2",104,0)
 F DY=$P(DDBSY,";",2):1:$P(DDBSY,";",4) X IOXY W $P(DDGLCLR,DDGLDEL)
"RTN","DDBR2",105,0)
 W $P(DDGLVID,DDGLDEL,6)  ;rvon
"RTN","DDBR2",106,0)
 W $P(DDGLVID,DDGLDEL,4)  ;uon
"RTN","DDBR2",107,0)
 W X
"RTN","DDBR2",108,0)
 W $P(DDGLVID,DDGLDEL,10)  ;rvoff
"RTN","DDBR2",109,0)
 W @IOSTBM
"RTN","DDBR2",110,0)
 S DY=$P(DDBSY,";",2)
"RTN","DDBR2",111,0)
 X IOXY
"RTN","DDBR2",112,0)
 Q
"RTN","DDBR2",113,0)
 ;
"RTN","DDBR2",114,0)
SFR(Y) N X
"RTN","DDBR2",115,0)
 S X(1)="",X(2)=$$CTXT^DDBR("<< SWITCH Function Restricted "_$G(Y)_" >>","",IOM)
"RTN","DDBR2",116,0)
 W $$WS^DDBR1(.X),$C(7)
"RTN","DDBR2",117,0)
 R X:3
"RTN","DDBR2",118,0)
 Q
"RTN","DICA3")
0^7^B4698553^B3603882
"RTN","DICA3",1,0)
DICA3 ;SEA/TOAD-VA FileMan: Updater, Adder ;17SEP2009
"RTN","DICA3",2,0)
 ;;22.0;VA FileMan;**147,162**;Mar 30, 1999;Build 19
"RTN","DICA3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DICA3",4,0)
 ;
"RTN","DICA3",5,0)
CREATE(DIFILE,DIEN,DIROOT,DIVALUE) ;If DIEN comes in with a leading number, use it as IEN
"RTN","DICA3",6,0)
 N DIENP S DIENP=","_$P(DIEN,",",2,999)
"RTN","DICA3",7,0)
 S DIEN=$P(DIEN,",")
"RTN","DICA3",8,0)
 N DINEXT S DINEXT=$P($G(@(DIROOT_"0)")),U,3)
"RTN","DICA3",9,0)
 I DINEXT="" D  I $G(DIERR) S DIEN="" Q
"RTN","DICA3",10,0)
 . N DIHEADER S DIHEADER=$$HEADER^DIDU2(.DIFILE,DIENP)
"RTN","DICA3",11,0)
 . I '$G(DIERR) S @(DIROOT_"0)")=DIHEADER
"RTN","DICA3",12,0)
GETNUM ;
"RTN","DICA3",13,0)
 N DINUM,DIFAUD S DINUM=DIEN'="",DIFAUD=0 I 'DINUM S DIEN=DINEXT\1 I $D(^DIA(DIFILE,"B")) S DIFAUD=DIFILE
"RTN","DICA3",14,0)
 N DIFAIL,DIOUT S DIFAIL=0,DIOUT=0 F  D  I DIOUT!DIFAIL Q
"RTN","DICA3",15,0)
 . I 'DINUM S DIEN=DIEN+1 I $D(@(DIROOT_"DIEN)")) Q  ;**GFT LOOK BEFORE LOCKING
"RTN","DICA3",16,0)
 . I DIFAUD,+$O(^DIA(DIFAUD,"B",DIEN_","))=DIEN!$D(^(DIEN)) Q  ;**GFT   DON'T PICK AN ALREADY-AUDITED NUMBER
"RTN","DICA3",17,0)
 . D LOCK^DILF(DIROOT_"DIEN)") ;**147
"RTN","DICA3",18,0)
 . I '$T S DIFAIL=DINUM Q:'DIFAIL  D ERR(110,DIFILE,DIEN_DIENP) Q
"RTN","DICA3",19,0)
ZERO . I $D(@(DIROOT_"DIEN,0)")) L -@(DIROOT_"DIEN)") D  Q
"RTN","DICA3",20,0)
 . . S DIFAIL=DINUM I 'DIFAIL Q
"RTN","DICA3",21,0)
 . . D ERR(302,DIFILE,DIEN_DIENP)
"RTN","DICA3",22,0)
 . S DIOUT=1
"RTN","DICA3",23,0)
 I DIFAIL S DIEN="" Q
"RTN","DICA3",24,0)
SETREC ;
"RTN","DICA3",25,0)
 N DICAFILE M DICAFILE=DIFILE N DIFILE
"RTN","DICA3",26,0)
 S @(DIROOT_"DIEN,0)")=DIVALUE
"RTN","DICA3",27,0)
 D LOCK^DILF(DIROOT_"0)") ;**147
"RTN","DICA3",28,0)
 S $P(^(0),U,3,4)=DIEN_U_($P(@(DIROOT_"0)"),U,4)+1)
"RTN","DICA3",29,0)
 I  L -@(DIROOT_"0)")
"RTN","DICA3",30,0)
 S DIEN=DIEN_DIENP
"RTN","DICA3",31,0)
 D XA^DIEFU(DICAFILE,DIEN,.01,DIVALUE,"")
"RTN","DICA3",32,0)
 D INDEX^DIKC(DICAFILE,DIEN,.01,"","SC")
"RTN","DICA3",33,0)
 Q
"RTN","DICA3",34,0)
 ;
"RTN","DICA3",35,0)
PROOT(DIFILE,DIEN) ;
"RTN","DICA3",36,0)
 ; ENTRY POINT--return the global root of a subfile's parent
"RTN","DICA3",37,0)
 ; extrinsic function, all passed by value
"RTN","DICA3",38,0)
 N DIENP S DIENP=$P(DIEN,",",2,999)
"RTN","DICA3",39,0)
 Q $NA(@$$ROOT^DILFD($$PARENT(DIFILE),DIENP,1)@(+DIENP))
"RTN","DICA3",40,0)
 ;
"RTN","DICA3",41,0)
PARENT(DIFILE) ;
"RTN","DICA3",42,0)
 ; ENTRY POINT--return the file number of a subfile's parent
"RTN","DICA3",43,0)
 ; extrinsic function, all passed by value
"RTN","DICA3",44,0)
 Q $G(^DD(DIFILE,0,"UP"))
"RTN","DICA3",45,0)
 ;
"RTN","DICA3",46,0)
SUBFILE(DIFILE) ;
"RTN","DICA3",47,0)
 ; ENTRY POINT--return whether the file is a subfile
"RTN","DICA3",48,0)
 ; extrinsic function, passed by value
"RTN","DICA3",49,0)
 Q $D(^DD(DIFILE,0,"UP"))#2
"RTN","DICA3",50,0)
 ;
"RTN","DICA3",51,0)
ERR(DIERN,DIFILE,DIIENS,DIFIELD,DI1,DI2,DI3) ;
"RTN","DICA3",52,0)
 ; error logging procedure
"RTN","DICA3",53,0)
 N DIPE
"RTN","DICA3",54,0)
 N DI F DI="FILE","IENS","FIELD",1:1:3 S DIPE(DI)=$G(@("DI"_DI))
"RTN","DICA3",55,0)
 D BLD^DIALOG(DIERN,.DIPE,.DIPE)
"RTN","DICA3",56,0)
 Q
"RTN","DIDT")
0^6^B19912051^B18472449
"RTN","DIDT",1,0)
DIDT ;SFISC/XAK-DATE/TIME UTILITY ;31AUG2009
"RTN","DIDT",2,0)
 ;;22.0;VA FileMan;**14,35,162**;Mar 30, 1999;Build 19
"RTN","DIDT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","DIDT",4,0)
%DT ;
"RTN","DIDT",5,0)
 I $G(DUZ("LANG"))>1,($G(^DI(.85,DUZ("LANG"),20.2))]"") X ^(20.2) Q
"RTN","DIDT",6,0)
CONT ;
"RTN","DIDT",7,0)
 K % S:$D(%DT)[0 %DT="" S:$G(DIQUIET)!($D(DDS)#2)!($D(ZTQUEUED)) %DT=$P(%DT,"E")_$P(%DT,"E",2) G NA:%DT'["A"
"RTN","DIDT",8,0)
 W !,$S($D(%DT("A")):%DT("A"),1:"DATE: "),$S($D(%DT("B")):%DT("B")_"//",1:"")
"RTN","DIDT",9,0)
 R X:$S($D(DTIME):DTIME,1:300) S:'$T X="^",DTOUT=1 G:$L(X)>39 1
"RTN","DIDT",10,0)
 I $D(%DT("B")),X="" S X=%DT("B")
"RTN","DIDT",11,0)
 I "^"[X S Y=-1 K %I,% Q
"RTN","DIDT",12,0)
NA S %(0)=X G 1:X'?.ANP,1:$P(X,"@")?15.N,1:$P(X,"@",2)?15.N,1:$L(X)>39
"RTN","DIDT",13,0)
 F %=1:1:$L(X) Q:X?.UNP  S Y=$E(X,%) I Y?1L S X=$E(X,1,%-1)_$C($A(Y)-32)_$E(X,%+1,99) ;UPPER CASE
"RTN","DIDT",14,0)
 I %DT["E",X?."?" D HELP^%DTC G B
"RTN","DIDT",15,0)
 I %DT["N",X?.N G NO
"RTN","DIDT",16,0)
 I X?1.A,(X["MID"!(X["NOON")) S X="@"_X
"RTN","DIDT",17,0)
 I X'?1"NOV".E,X?1"N".1"OW".1P.E G N^%DTC:%DT["T"!(%DT["R")&(%DT'["M") S X=$E(X,2,99),X="T"_$P(X,"OW")_$P(X,"OW",2)
"RTN","DIDT",18,0)
 I X?1.N." "1.2A!(X?1.N1":"2N." ".2A)!(X?1.N1":"2N1":"2N." ".2A) S X="T@"_X
"RTN","DIDT",19,0)
 I X?7N1"."1.N G R
"RTN","DIDT",20,0)
 I X'["@",%DT'["R" G R
"RTN","DIDT",21,0)
 I %DT'["T",%DT'["R" G NO
"RTN","DIDT",22,0)
 I %DT["M" G NO
"RTN","DIDT",23,0)
 S Y=$P(X,"@",2,9),X=$P(X,"@")
"RTN","DIDT",24,0)
 F %=2,3 S %I=$P(Y,":",%) I %I?1N.E,%I'?2N.PA G 1
"RTN","DIDT",25,0)
 S:X="" X="T" S Y=$P(Y,":")_$P(Y,":",2)_$P(Y,":",3,9),%I=Y
"RTN","DIDT",26,0)
 I Y?1.A S Y=$S(Y["MID":2400,Y["NOON":1200,1:"")
"RTN","DIDT",27,0)
T G G:Y?4N,G1:Y?6N&(%DT["S"),1:Y'?1.6N." ".1(1"AM",1"A",1"A.M",1"PM",1"P",1"P.M").P I %DT["R",Y="" G NO
"RTN","DIDT",28,0)
 S %I=$P(1_%I,+(1_Y),2) S:%I]"" Y=$P(Y,%I)
"RTN","DIDT",29,0)
 I Y?5.6N G:%DT'["S" 1 S %(3)=$E(Y,$L(Y)-1,$L(Y)),Y=$E(Y,1,$L(Y)-2) G 1:%(3)>59
"RTN","DIDT",30,0)
 I Y?1.2N G:Y'<13 1 S Y=Y_"00"
"RTN","DIDT",31,0)
 I %I["A" S Y=$S(Y=1200&'$G(%(3)):2400,Y>1159:Y-1200,1:Y)
"RTN","DIDT",32,0)
 E  I Y?1.2"0"2N G:%I["P" 1
"RTN","DIDT",33,0)
 E  I Y<1200,%I["P"!(Y<600) S Y=Y+1200
"RTN","DIDT",34,0)
G G 1:Y>2400,1:Y#100>59,1:('Y&('$G(%(3)))) S %(1)=$S('Y:".0000",1:Y/10000) G R
"RTN","DIDT",35,0)
G1 G 1:Y>240000!'Y,1:$E(Y,3,4)#100>59,1:$E(Y,5,6)#100>59 S %(1)=Y/1000000
"RTN","DIDT",36,0)
R I %DT["F"!(%DT["P") D TY S %(9)=%
"RTN","DIDT",37,0)
7 G 8:X'?7N1".".E&(X'?7N) S Y=$E(X,8,16),%=$E(Y_"000000",2,7)
"RTN","DIDT",38,0)
 I Y,%DT'["T"!(%DT["M") G NO
"RTN","DIDT",39,0)
 I %DT["E",(%'?.N)!(%>240000)!($E(%,3,4)>59)!($E(%,5,6)>59) G NO
"RTN","DIDT",40,0)
 S:Y %(1)=+Y S X=$E(X,4,7)_($E(X,1,3)+1700),%(7)=1
"RTN","DIDT",41,0)
 I %DT["I" S X=$E(X,3,4)_$E(X,1,2)_$E(X,5,9)
"RTN","DIDT",42,0)
8 S %I=0,%="" I X'?.N G T^%DTC:"T+-"[$E(X),U:X["^",1:$E(X)?1P,MTH:X?3.A&(%DT["M"),X
"RTN","DIDT",43,0)
 I %DT'["X",X\300=6!(X?2N) S (%I(1),%I(2))=0,%I(3)=X G 3
"RTN","DIDT",44,0)
 F %I=0:1 S Y=$E(X,1,2),X=$E(X,3,9) G OT:Y="" D  G:%I="" 1
"RTN","DIDT",45,0)
 . I %DT["X",%DT'["M",%I<2,'Y S %I="" Q
"RTN","DIDT",46,0)
 . S:%I=2 Y=Y_X,X=""
"RTN","DIDT",47,0)
 . I %DT["X",%I=2,$L(Y)>2,Y'>1799 S %I="" Q
"RTN","DIDT",48,0)
 . S %I(%I+1)=Y Q
"RTN","DIDT",49,0)
 ;
"RTN","DIDT",50,0)
X S Y=$E(X),X=$E(X,2,99) I Y?1N G A:%?.N,Y
"RTN","DIDT",51,0)
 I Y?1A G A:%?.A,Y
"RTN","DIDT",52,0)
OT D:%]"" % G 1:%I>3,X:Y?1P,1:Y]"",@%I
"RTN","DIDT",53,0)
Y D % S %=Y G 1:%I>3,X
"RTN","DIDT",54,0)
A S %=%_Y G X
"RTN","DIDT",55,0)
TY S %=$H#1461,%=$H\1461*4+(%\365)+141-(%=1460) Q
"RTN","DIDT",56,0)
0 ;
"RTN","DIDT",57,0)
1 W:%DT["E"&'$D(DIER) $C(7),$S('$D(DDS):" ??",1:"")
"RTN","DIDT",58,0)
B G %DT:%DT["A",NO
"RTN","DIDT",59,0)
U S X="^",%(0)=X
"RTN","DIDT",60,0)
NO S Y=-1 G Q:%DT'["A",Q:X["^" W $C(7)," ??" G %DT
"RTN","DIDT",61,0)
2 I %DT["M" S %I(3)=%I(2),%I(2)=0 G 3
"RTN","DIDT",62,0)
 I %I(2)>31!'%I(2),%DT'["X" S %I(3)=%I(2),%I(2)=0 G 1:'%I(2)&$G(%(1)) G 3
"RTN","DIDT",63,0)
 D TY S %I(3)=% D PF^%DTC:$D(%(9)) G C
"RTN","DIDT",64,0)
3 I %I(3)?2N D  G C
"RTN","DIDT",65,0)
 . I '$D(%(9)) D TY S %(9)=%
"RTN","DIDT",66,0)
 . N A S A=$E(%(9))*100
"RTN","DIDT",67,0)
 . I $E(%(9),2,3)=%I(3) S %I(3)=A+%I(3) Q
"RTN","DIDT",68,0)
 . I %DT["P" S %I(3)=$S(%I(3)<$E(%(9),2,3):A,1:A-100)+%I(3) Q
"RTN","DIDT",69,0)
 . I %DT["F" S %I(3)=$S(%I(3)>$E(%(9),2,3):A,1:A+100)+%I(3) Q
"RTN","DIDT",70,0)
 . S %I(3)=A+%I(3)
"RTN","DIDT",71,0)
 . I %(9)-%I(3)>80 S %I(3)=%I(3)+100 Q
"RTN","DIDT",72,0)
 . I %I(3)-%(9)>20 S %I(3)=%I(3)-100
"RTN","DIDT",73,0)
 . Q
"RTN","DIDT",74,0)
 S %I(3)=%I(3)-1700 G 1:%I(3)'?3N
"RTN","DIDT",75,0)
C I %DT["I",%I(2)>0 S %=%I(2),%I(2)=%I(1),%I(1)=%
"RTN","DIDT",76,0)
 I %I(2)="00",'$G(%(7)) G 1
"RTN","DIDT",77,0)
 I %DT["M",$G(%I(2)) G 1
"RTN","DIDT",78,0)
 I %I(1)>12!(%I(1)="00") G 1
"RTN","DIDT",79,0)
 I %I(2)>28,$E("303232332323",%I(1))+28<%I(2),%I(1)-2!(%I(2)-29)!(%I(3)#4)!('(%I(3)#100)&(%I(3)+1700#400)) G 1
"RTN","DIDT",80,0)
D I %DT["M",$G(%I(2)) S %I(2)=0
"RTN","DIDT",81,0)
 D P
"RTN","DIDT",82,0)
E I $D(%(1)) S:$D(%(3)) %(1)=$E(%(1)_"000",1,5)_%(3) S Y=+(Y_%(1))
"RTN","DIDT",83,0)
 I '$E(Y,6,7),Y["." G 1
"RTN","DIDT",84,0)
 I %DT["E" S %=Y D DD W "  ("_Y_")" S Y=%
"RTN","DIDT",85,0)
 I $D(%DT(0)) S %=%DT(0),%I=$S(%["-":Y,1:-Y) D:'% Z I $S(%DT["S":%,1:%\.0001/10000)+%I>0 G 1
"RTN","DIDT",86,0)
Q S X=%(0) K %,%I,%H Q
"RTN","DIDT",87,0)
Z I $P("NOW",%(0))="" S %=Y
"RTN","DIDT",88,0)
 E  D NOW^%DTC
"RTN","DIDT",89,0)
 S:%DT(0)["-" %=-% Q
"RTN","DIDT",90,0)
DD I $G(DUZ("LANG"))>1 S Y=$$OUT^DIALOGU(Y,"DD") Q
"RTN","DIDT",91,0)
 Q:'Y  S Y=$S($E(Y,4,5):$E($P($T(M)," ",$E(Y,4,5)+2),1,3)_" ",1:"")_$S($E(Y,6,7):$E(Y,6,7)_", ",1:"")_($E(Y,1,3)+1700)_$S(Y[".":"."_$P(Y,".",2),1:"")
"RTN","DIDT",92,0)
 I Y["." S Y=$P(Y,".")_"@"_$E(Y_0,14,15)_":"_$E(Y_"000",16,17)_$S($E(Y,18,19):":"_$E(Y_0,18,19),1:"")
"RTN","DIDT",93,0)
 I $D(%DT)#2,%DT["S",Y["@",$P(Y,":",3)="" S Y=Y_":00"
"RTN","DIDT",94,0)
 Q
"RTN","DIDT",95,0)
P S Y=%I(3)_$E(%I(1)+100,2,3)_$E(%I(2)+100,2,3) Q
"RTN","DIDT",96,0)
MTH S %=X D % G:%I>3 1
"RTN","DIDT",97,0)
 S %I(2)=0
"RTN","DIDT",98,0)
 D TY S %I(3)=% D:$D(%(9)) PF^%DTC
"RTN","DIDT",99,0)
 G D
"RTN","DIDT",100,0)
% I %DT["I",%?3.A S %I=9 Q
"RTN","DIDT",101,0)
 I %?3.A S %=$F($T(M)," "_%) I %>0 S %=$L($E($T(M),6,%-1)," ") D:%I=1  S %("ALPHA")=1 ;ONLY MONTH IS ALPHA
"RTN","DIDT",102,0)
 . N T S T=%I(1),%I(1)=%,%=T I $D(%("ALPHA")) S %I=9
"RTN","DIDT",103,0)
 S:%<1&(%'="00")&(%I'=2) %I=9 S %I=%I+1,%I(%I)=%,%=""
"RTN","DIDT",104,0)
M ;; JANUARY FEBRUARY MARCH APRIL MAY JUNE JULY AUGUST SEPTEMBER OCTOBER NOVEMBER DECEMBER
"RTN","DIDU")
0^4^B38421854^B37131988
"RTN","DIDU",1,0)
DIDU ;SEA/TOAD-VA FileMan: DD Tools, External Format ;24AUG2009
"RTN","DIDU",2,0)
 ;;22.0;VA FileMan;**31,48,162**;Mar 30, 1999;Build 19
"RTN","DIDU",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DIDU",4,0)
 ;
"RTN","DIDU",5,0)
EXTERNAL(DIFILE,DIFIELD,DIFLAGS,DINTERNL,DIMSGA) ;
"RTN","DIDU",6,0)
 ;
"RTN","DIDU",7,0)
 ; convert a value from internal to external format
"RTN","DIDU",8,0)
 ; used all over lookup routines
"RTN","DIDU",9,0)
 ;
"RTN","DIDU",10,0)
XTRNLX ;
"RTN","DIDU",11,0)
 ;
"RTN","DIDU",12,0)
 ; support for documented entry point $$EXTERNAL^DILFD
"RTN","DIDU",13,0)
 ; branch from DILFD or DIQGU
"RTN","DIDU",14,0)
 ;
"RTN","DIDU",15,0)
E1 ; set up DBS environment variables
"RTN","DIDU",16,0)
 ;
"RTN","DIDU",17,0)
 I '$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIDU",18,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIDU",19,0)
 N DICLERR S DICLERR=$G(DIERR) K DIERR
"RTN","DIDU",20,0)
 ;
"RTN","DIDU",21,0)
E2 ; handle bad input variables
"RTN","DIDU",22,0)
 ;
"RTN","DIDU",23,0)
 I $G(DINTERNL)="" Q ""
"RTN","DIDU",24,0)
 S DIMSGA=$G(DIMSGA)
"RTN","DIDU",25,0)
 S DIFLAGS=$G(DIFLAGS)
"RTN","DIDU",26,0)
 I DIFLAGS'?.1(1"F",1"L",1"U",1"i",1"h",1"A") D ERR(DIMSGA,301,"","","",DIFLAGS) Q ""
"RTN","DIDU",27,0)
 I $G(DIFIELD)'>0 D ERR(DIMSGA,202,"","","","FIELD") Q ""
"RTN","DIDU",28,0)
 ;
"RTN","DIDU",29,0)
E3 ; get field definition and type, handle bad file or field
"RTN","DIDU",30,0)
 ;
"RTN","DIDU",31,0)
 I $G(DIFILE)<0 D ERR(DIMSGA,202,"","","","FILE") Q ""
"RTN","DIDU",32,0)
 N DINODE S DINODE=$G(^DD(DIFILE,DIFIELD,0))
"RTN","DIDU",33,0)
 I DINODE="" D  Q ""
"RTN","DIDU",34,0)
 . I '$D(^DD(DIFILE)) D ERR(DIMSGA,401,DIFILE)
"RTN","DIDU",35,0)
 . E  D ERR(DIMSGA,501,DIFILE,"",DIFIELD,DIFIELD)
"RTN","DIDU",36,0)
 N DITYPE S DITYPE=$P(DINODE,U,2)
"RTN","DIDU",37,0)
 ;
"RTN","DIDU",38,0)
E4 ; initialize loop control, transform code, pointer chain window,
"RTN","DIDU",39,0)
 ; pointer file info, and resolved value variables
"RTN","DIDU",40,0)
 ;
"RTN","DIDU",41,0)
 N DICHAIN,DIDONE,DIOUT S (DICHAIN,DIDONE,DIOUT)=0
"RTN","DIDU",42,0)
 N DIXFORM S DIXFORM=""
"RTN","DIDU",43,0)
 N DINEXT,DIPREV,DIPREVF S (DINEXT,DIPREV,DIPREVF)=""
"RTN","DIDU",44,0)
 N DIEN,DIHEAD,DIROOT S DIEN=""
"RTN","DIDU",45,0)
 N DIEXTRNL S DIEXTRNL=""
"RTN","DIDU",46,0)
 ;
"RTN","DIDU",47,0)
E5 ; handle output transforms (see docs for effects of flags)
"RTN","DIDU",48,0)
 ; under right conditions, execute output transform on value & quit
"RTN","DIDU",49,0)
 ;
"RTN","DIDU",50,0)
 F  D  I DIDONE!$G(DIERR)!DIOUT Q
"RTN","DIDU",51,0)
 . I DIFLAGS["U",DIXFORM'="",DITYPE'["P",DITYPE'["V" S DITYPE=DITYPE_"O"
"RTN","DIDU",52,0)
 . I DITYPE["O",DIFLAGS'["i",DIFLAGS'["h" D  I DIDONE!$G(DIERR) Q
"RTN","DIDU",53,0)
 . . I DIFLAGS["F",DICHAIN Q
"RTN","DIDU",54,0)
 . . I DIFLAGS["L",DITYPE["P"!(DITYPE["V") Q
"RTN","DIDU",55,0)
 . . I DIXFORM=""!(DIFLAGS'["U") S DIXFORM=$G(^DD(DIFILE,DIFIELD,2))
"RTN","DIDU",56,0)
 . . I DIXFORM="" Q
"RTN","DIDU",57,0)
 . . I DIFLAGS["U",DITYPE["P"!(DITYPE["V") Q
"RTN","DIDU",58,0)
 . . N Y S Y=DINTERNL X DIXFORM
"RTN","DIDU",59,0)
 . . I $G(DIERR) D ERR^DICF4(120,DIFILE,DIEN,"","Output Transform") Q
"RTN","DIDU",60,0)
 . . S DIEXTRNL=Y,DIDONE=1
"RTN","DIDU",61,0)
 .
"RTN","DIDU",62,0)
E6 . ; continue with loop only for pointers or variable pointers
"RTN","DIDU",63,0)
 .
"RTN","DIDU",64,0)
 . I DITYPE S DIOUT=1 Q
"RTN","DIDU",65,0)
 . I DITYPE'["P",DITYPE'["V" S DIOUT=1 Q
"RTN","DIDU",66,0)
 .
"RTN","DIDU",67,0)
E7 . ; if the value's not numeric, it's not valid; note that throughout
"RTN","DIDU",68,0)
 . ; module we return two different errors depending on whether the
"RTN","DIDU",69,0)
 . ; value passed in is bad, or one found in the pointer chain is
"RTN","DIDU",70,0)
 .
"RTN","DIDU",71,0)
 . I 'DINTERNL D  Q
"RTN","DIDU",72,0)
 . . I 'DICHAIN D ERR(DIMSGA,330,"","","",DINTERNL,"pointer") Q
"RTN","DIDU",73,0)
 . . D ERR(DIMSGA,630,DIFILE,"",DIFIELD,DIEN,DINTERNL,"pointer")
"RTN","DIDU",74,0)
 .
"RTN","DIDU",75,0)
E8 . ; get pointed to file's root and #
"RTN","DIDU",76,0)
 .
"RTN","DIDU",77,0)
 . I DITYPE["P" S DIROOT=$P(DINODE,U,3),DINEXT=+$P($P(DINODE,U,2),"P",2) D  Q:$G(DIERR)
"RTN","DIDU",78,0)
 . . I DIROOT="DIC(.2," S DINEXT=.2
"RTN","DIDU",79,0)
 . . I 'DINEXT!(DIROOT="") D ERR(DIMSGA,537,DIFILE,,DIFIELD)
"RTN","DIDU",80,0)
 . . Q
"RTN","DIDU",81,0)
 . I DITYPE["V" S DIROOT=$P(DINTERNL,";",2),DINEXT="" D  Q:$G(DIERR)
"RTN","DIDU",82,0)
 . . I DIROOT="" D ERR(DIMSGA,348,,,,DINTERNL) Q
"RTN","DIDU",83,0)
 . . S DIHEAD=$G(@(U_DIROOT_"0)"))
"RTN","DIDU",84,0)
 . . I DIHEAD="" D  Q
"RTN","DIDU",85,0)
 . . . D HEADER(DIFILE,DIEN,DIFIELD,DITYPE,DICHAIN,DINTERNL,DINEXT)
"RTN","DIDU",86,0)
 . . S DINEXT=+$P(DIHEAD,U,2) I 'DINEXT D  Q
"RTN","DIDU",87,0)
 . . . D ERR(DIMSGA,404,"","","",$$CREF^DILF(U_DIROOT))
"RTN","DIDU",88,0)
 .
"RTN","DIDU",89,0)
E9 . ; ensure pointed to data file exists, and advance file #s
"RTN","DIDU",90,0)
 .
"RTN","DIDU",91,0)
 . I '$D(@(U_DIROOT_"+DINTERNL)")) D  Q
"RTN","DIDU",92,0)
 . . N DI S DI="pointer to File #"
"RTN","DIDU",93,0)
 . . I 'DICHAIN D ERR(DIMSGA,330,"","","",DINTERNL,DI_DINEXT) Q
"RTN","DIDU",94,0)
 . . D ERR(DIMSGA,630,DIFILE,DIFIELD,"",DIEN,DINTERNL,DI_DINEXT)
"RTN","DIDU",95,0)
 . S DIPREV=DIFILE,DIFILE=DINEXT
"RTN","DIDU",96,0)
 .
"RTN","DIDU",97,0)
E10 . ; advance pointer value, file characteristics, & pointer window
"RTN","DIDU",98,0)
 . ; ensure pointed to record exists, & its .01 has a DD
"RTN","DIDU",99,0)
 . ; set flag that we are now in the pointer chain
"RTN","DIDU",100,0)
 .
"RTN","DIDU",101,0)
 . S DIEN=+DINTERNL
"RTN","DIDU",102,0)
 . S DINTERNL=$P($G(^(DIEN,0)),U) ;***** Naked *****
"RTN","DIDU",103,0)
 . I DINTERNL="" D ERR(DIMSGA,603,DIFILE,"",.01,DIEN) Q
"RTN","DIDU",104,0)
 . S DINODE=$G(^DD(DIFILE,.01,0))
"RTN","DIDU",105,0)
 . S DITYPE=$P(DINODE,U,2)
"RTN","DIDU",106,0)
 . I DITYPE="" D ERR(DIMSGA,510,DIFILE,"",.01) Q
"RTN","DIDU",107,0)
 . S DIPREVF=DIFIELD,DIFIELD=.01
"RTN","DIDU",108,0)
 . S DICHAIN=1
"RTN","DIDU",109,0)
 . S:DIFILE=.2 DIDONE=1 Q
"RTN","DIDU",110,0)
 ;
"RTN","DIDU",111,0)
E11 ; exit if we executed an output transform or ran into an error
"RTN","DIDU",112,0)
 ;
"RTN","DIDU",113,0)
 ; Special "i" flag returns internal value at end of pointer chain
"RTN","DIDU",114,0)
 I DIFLAGS["i" Q DINTERNL
"RTN","DIDU",115,0)
 I DIFILE=.2 Q DINTERNL
"RTN","DIDU",116,0)
 I DIDONE Q DIEXTRNL
"RTN","DIDU",117,0)
 I $G(DIERR) Q ""
"RTN","DIDU",118,0)
 ;
"RTN","DIDU",119,0)
E12 ; handle illegal data types (pointers, word processings, and multiples)
"RTN","DIDU",120,0)
 ;
"RTN","DIDU",121,0)
 I DITYPE["C" D ERRPTR("Computed") Q ""
"RTN","DIDU",122,0)
 I DITYPE["W" D ERRPTR("Word Processing") Q ""
"RTN","DIDU",123,0)
 I DITYPE S DITYPE=$P($G(^DD(+DITYPE,.01,0)),U,2) D  Q ""
"RTN","DIDU",124,0)
 . I DITYPE["W" D ERRPTR("Word Processing") Q
"RTN","DIDU",125,0)
 . D ERRPTR("Multiple") Q
"RTN","DIDU",126,0)
 ;
"RTN","DIDU",127,0)
E13 ; handle sets of codes
"RTN","DIDU",128,0)
 ;
"RTN","DIDU",129,0)
 I DITYPE["S" D  Q DIEXTRNL
"RTN","DIDU",130,0)
 . N DICODES S DICODES=";"_$P(DINODE,U,3)
"RTN","DIDU",131,0)
 . N DISTART S DISTART=$F(DICODES,";"_DINTERNL_":")
"RTN","DIDU",132,0)
 . I 'DISTART S DIEXTRNL="" D  Q
"RTN","DIDU",133,0)
 . . I 'DICHAIN D ERR(DIMSGA,730,DIFILE,"",DIFIELD,DINTERNL,"code") Q
"RTN","DIDU",134,0)
 . . D ERR(DIMSGA,630,DIFILE,DIFIELD,"",DIEN,DINTERNL,"code")
"RTN","DIDU",135,0)
 . S DIEXTRNL=$P($E(DICODES,DISTART,$L(DICODES)),";")
"RTN","DIDU",136,0)
 ;
"RTN","DIDU",137,0)
E14 ; handle dates, and return all others as they are
"RTN","DIDU",138,0)
 ;
"RTN","DIDU",139,0)
 I DITYPE["D",DINTERNL D  Q DIEXTRNL
"RTN","DIDU",140,0)
 . S DIEXTRNL=$$FMTE^DILIBF(DINTERNL,"1U")
"RTN","DIDU",141,0)
 . I DIEXTRNL'="" Q
"RTN","DIDU",142,0)
 . I 'DICHAIN D ERR(DIMSGA,330,"","","",DINTERNL,"date") Q
"RTN","DIDU",143,0)
 . D ERR(DIMSGA,630,DIFILE,"",DIFIELD,DIEN,DINTERNL,"date")
"RTN","DIDU",144,0)
 I DICLERR'=""!$G(DIERR) D
"RTN","DIDU",145,0)
 . S DIERR=$G(DIERR)+DICLERR_U_($P($G(DIERR),U,2)+$P(DICLERR,U,2))
"RTN","DIDU",146,0)
 Q DINTERNL
"RTN","DIDU",147,0)
 ;
"RTN","DIDU",148,0)
HEADER(DIFILE,DIEN,DIFIELD,DITYPE,DICHAIN,DINTERNL,DINEXT) ;
"RTN","DIDU",149,0)
 ;
"RTN","DIDU",150,0)
 ; pick a header error and log it
"RTN","DIDU",151,0)
 ; EXTERNAL
"RTN","DIDU",152,0)
 ;
"RTN","DIDU",153,0)
 I DITYPE["P" D  ; pointer
"RTN","DIDU",154,0)
 . I 'DINEXT!'$D(^DD(DINEXT)) D ERR(DIMSGA,537,DIFILE,"",DIFIELD) Q
"RTN","DIDU",155,0)
 . D ERR(DIMSGA,403,DINEXT)
"RTN","DIDU",156,0)
 ;
"RTN","DIDU",157,0)
 E  D            ; variable pointer
"RTN","DIDU",158,0)
 . I DICHAIN D ERR(DIMSGA,648,DIFILE,"",DIFIELD,DIEN,DINTERNL) Q
"RTN","DIDU",159,0)
 . D ERR(DIMSGA,348,"","","",DINTERNL)
"RTN","DIDU",160,0)
 Q
"RTN","DIDU",161,0)
 ;
"RTN","DIDU",162,0)
ERR(DIMSGA,DIERN,DIFILE,DIIENS,DIFIELD,DI1,DI2,DI3) ;
"RTN","DIDU",163,0)
 ;
"RTN","DIDU",164,0)
 ; error logging procedure
"RTN","DIDU",165,0)
 ; EXTERNAL
"RTN","DIDU",166,0)
 ;
"RTN","DIDU",167,0)
 I $G(DIFLAGS)["A",$$ALLOW(DIERN) S DIDONE=1 Q
"RTN","DIDU",168,0)
 N DIPE,DI F DI="FILE","IENS","FIELD",1:1:3 S DIPE(DI)=$G(@("DI"_DI))
"RTN","DIDU",169,0)
 D BLD^DIALOG(DIERN,.DIPE,.DIPE,DIMSGA,"F")
"RTN","DIDU",170,0)
 S DIERR=$G(DIERR)+DICLERR_U_($P($G(DIERR),U,2)+$P(DICLERR,U,2))
"RTN","DIDU",171,0)
 Q
"RTN","DIDU",172,0)
 ;
"RTN","DIDU",173,0)
ERRPTR(DITYPE) ;
"RTN","DIDU",174,0)
 ;
"RTN","DIDU",175,0)
 ; error logging shell for errors 520 & 537
"RTN","DIDU",176,0)
 ; EXTERNAL
"RTN","DIDU",177,0)
 ;
"RTN","DIDU",178,0)
 I DICHAIN D ERR(DIMSGA,537,DIPREV,"",DIPREVF) Q
"RTN","DIDU",179,0)
 D ERR(DIMSGA,520,DIFILE,"",DIFIELD,DITYPE)
"RTN","DIDU",180,0)
 Q
"RTN","DIDU",181,0)
 ;
"RTN","DIDU",182,0)
ALLOW(X) ;If ALLOW appears, do not call erroneous data an error
"RTN","DIDU",183,0)
 N I,T F I=3:1 S T=$T(ALLOW+I) Q:T?.P  I T[X Q:T'["ALLOW"  K T Q
"RTN","DIDU",184,0)
 Q '$D(T)
"RTN","DIDU",185,0)
 ; 202    The input parameter that identifies the |1
"RTN","DIDU",186,0)
 ; 301    The passed flag(s) '|1|' are unknown or in
"RTN","DIDU",187,0)
 ; 330    The value '|1|' is not a valid |2|.           ALLOW
"RTN","DIDU",188,0)
 ; 348    The passed value '|1|' points to a file th
"RTN","DIDU",189,0)
 ; 401    File #|FILE| does not exist.
"RTN","DIDU",190,0)
 ; 403    File #|FILE| lacks a Header Node.
"RTN","DIDU",191,0)
 ; 404    The File Header node of the file stored at
"RTN","DIDU",192,0)
 ; 501    File #|FILE| does not contain a field |1|.
"RTN","DIDU",193,0)
 ; 510    The data type for Field #|FIELD| in File #
"RTN","DIDU",194,0)
 ; 520    A |1| field cannot be processed by this ut
"RTN","DIDU",195,0)
 ; 537    Field #|FIELD| in File #|FILE| has a corru
"RTN","DIDU",196,0)
 ; 603    Entry #|1| in File #|FILE| lacks the requi
"RTN","DIDU",197,0)
 ; 630    In Entry #|1| of File #|FILE|, the value '    ALLOW
"RTN","DIDU",198,0)
 ; 648    In Entry #|1| of File #|FILE|, the value '
"RTN","DIDU",199,0)
 ; 730    The value '|1|' is not a valid |2| accordi    ALLOW
"RTN","DIDU",200,0)
 ;
"RTN","DINIT4")
0^1^B11956513^B12078667
"RTN","DINIT4",1,0)
DINIT4 ;SFISC/GFT-INITIALIZE VA FILEMAN ;8/31/2009
"RTN","DINIT4",2,0)
 ;;22.0;VA FileMan;**162**;Mar 30, 1999;Build 19
"RTN","DINIT4",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DINIT4",4,0)
DD F I=1:1 S X=$E($T(DD+I),4,999) G ^DINIT41:X?.P S ^DD("FUNC",I,0)=$P(X,";",1),Y=1 F DU=1,2,3,9,10 S Y=Y+1 I $P(X,";",Y)]"" S ^(DU)=$P(X,";",Y)
"RTN","DINIT4",5,0)
 ;;SQUAREROOT;D SQR^DIXC S X=$S(X'>0:"",1:Y);;;
"RTN","DINIT4",6,0)
 ;;TIME;S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M";;;
"RTN","DINIT4",7,0)
 ;;MONTH;S X=$E(X,1,5)_0_0 S:'X X="";D^D;;
"RTN","DINIT4",8,0)
 ;;YEAR;S X=$E(X,1,3)_"0000" S:'X X="";D^D;;
"RTN","DINIT4",9,0)
 ;;DATE;S X=$P(X,".",1);D^D;;
"RTN","DINIT4",10,0)
 ;;DAYOFWEEK;D DW^%DTC;^D;;
"RTN","DINIT4",11,0)
 ;;CLOSE
"RTN","DINIT4",12,0)
 ;;ABS;S:X<0 X=-X;;;
"RTN","DINIT4",13,0)
 ;;INTERNAL;S X=X;;;
"RTN","DINIT4",14,0)
 ;;MAX;S:X1>X X=X1;O;2;MAXIMUM OF 2 VALUES
"RTN","DINIT4",15,0)
 ;;MIN;S:X1<X X=X1;O;2;MINIMUM OF TWO VALUES
"RTN","DINIT4",16,0)
 ;;REVERSE;S Y=X,X="" X "F %=$L(Y):-1:1 S X=X_$E(Y,%)";;;DATA CHARACTERS IN RIGHT-TO-LEFT ORDER
"RTN","DINIT4",17,0)
 ;;UPPERCASE;X "F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)";;;
"RTN","DINIT4",18,0)
 ;;LOWERCASE;X "F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)";;;
"RTN","DINIT4",19,0)
 ;;CENTER;S X=$J("",$S($D(DIWR)+$D(DIWL)=2:DIWR-DIWL+1,$D(IOM):IOM,1:80)-$L(X)\2-$X)_X;;;;W
"RTN","DINIT4",20,0)
 ;;UNDERLINE;S %="",Y=$S($D(IOST)[0:-1,$A(IOST)-80:-1,1:$L(X)<83) X:Y+1 "F Y=1:1:$L(X) "_$S(Y:"S %=$C(8)_%",1:"W $E(X,Y),$C(8)")_"_""_""" S:Y+1 X=$S(%]"":X_%,1:%);;;UNDERLINE (ARG) IF OUTPUTTING TO A PRINTER DEVICE;W
"RTN","DINIT4",21,0)
 ;;PAGEFEED;S %Y=1,%=$S($D(DIWF):$F(DIWF,"B"),1:0) X:% "F %Y=%:1 Q:$E(DIWF,%Y)'?1N" S:$D(DIWF) DIWF=$E(DIWF,1,%-2)_$E(DIWF,%Y,999)_"B"_(X\1) X:X>(IOSL-$Y)&$D(^UTILITY($J,1))&'$D(^("W"))&'$D(DIWF) ^(1) S X="";;;START NEW PAGE IF <ARG LINES LEFT;W
"RTN","DINIT4",22,0)
 ;;BREAKABLE;D:'$D(DISYS) OS^DII X ^DD("OS",DISYS,1);;;OUTPUT DEVICE CAN BE INTERRUPTED IF ARGUMENT IS NON-ZERO
"RTN","DINIT4",23,0)
 ;;NUMMONTH;S X=+$E(X,4,5);^D;;MONTH NUMBER (0-12) FOR A DATE
"RTN","DINIT4",24,0)
 ;;NUMDAY;S X=+$E(X,6,7);^D;;DAY NUMBER (0-31) FOR A DATE
"RTN","DINIT4",25,0)
 ;;NUMYEAR;S:X X=$E(X,2,3);^D;;YEAR NUMBER (00-99) FOR A DATE
"RTN","DINIT4",26,0)
 ;;NUMDATE;S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3);^D;;DATE IN 'NN/NN/NN' FORMAT
"RTN","DINIT4",27,0)
 ;;REPLACE;X "F %=0:0 S %=$F(X2,X1,%) Q:%<2  S X2=$E(X2,1,%-$L(X1)-1)_X_$E(X2,%,999),%=%-$L(X1)+$L(X)" S X=X2;;3;THE 1ST ARGUMENT, WITH ALL OCCURRENCES OF THE 2ND ARGUMENT REPLACED BY THE 3RD
"RTN","DINIT4",28,0)
 ;;NOW;N %I,%H,% D NOW^%DTC S X=%;D;0;CURRENT DATE/TIME
"RTN","DINIT4",29,0)
 ;;TODAY;N %I,%H,% D NOW^%DTC;D;0;CURRENT DATE
"RTN","DINIT4",30,0)
 ;;PAGE;S X=$S($D(DC)#2:DC,1:"");;0;PAGE NUMBER (OF OUTPUT)
"RTN","DINIT4",31,0)
 ;;SETTAB;S DIWT=X,X="" F %=1:1 S Y="X"_% Q:'$D(@Y)  S DIWT=@Y_","_DIWT;;VARIABLE;SET TAB STOPS;W
"RTN","DINIT4",32,0)
 ;;RIGHT-JUSTIFY;S X="" S:'$D(DIWF) DIWF="" S:DIWF'["R" DIWF=DIWF_"R";;0;;W
"RTN","DINIT4",33,0)
 ;;DOUBLE-SPACE;S X="" S:'$D(DIWF) DIWF="" S:DIWF'["D" DIWF=DIWF_"D";;0;;W
"RTN","DINIT4",34,0)
 ;;SINGLE-SPACE;S:'$D(DIWF) DIWF="" S X="",DIWF=$P(DIWF,"D",1)_$P(DIWF,"D",2);;0;;W
"RTN","DIPR162")
0^3^B18238811^n/a
"RTN","DIPR162",1,0)
DIPR162 ;O-OIFO/GMB-Correct NOW function ;8/31/2009
"RTN","DIPR162",2,0)
 ;;22.0;VA FileMan;**162**;Mar 30, 1999;Build 19
"RTN","DIPR162",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DIPR162",4,0)
ENV ; Environmental Check
"RTN","DIPR162",5,0)
 D BMES^XPDUTL("Perform Environment Check...")
"RTN","DIPR162",6,0)
 D CHKSTOP
"RTN","DIPR162",7,0)
 D BMES^XPDUTL("Finished Environment Check.")
"RTN","DIPR162",8,0)
 Q
"RTN","DIPR162",9,0)
CHKSTOP ;
"RTN","DIPR162",10,0)
 ; Check XPDENV 0 = Loading; 1 = Installing
"RTN","DIPR162",11,0)
 Q:'XPDENV  ; Loading Distribution - No Check
"RTN","DIPR162",12,0)
 ;
"RTN","DIPR162",13,0)
 ;
"RTN","DIPR162",14,0)
INSCHK ; Do Checks During Install Only
"RTN","DIPR162",15,0)
 W $C(7)
"RTN","DIPR162",16,0)
 D MES^XPDUTL("** Although Queuing is allowed - it is HIGHLY recommended that ALL Users and")
"RTN","DIPR162",17,0)
 D MES^XPDUTL("VISTA Background jobs be STOPPED before installation of this patch.  Failure")
"RTN","DIPR162",18,0)
 D MES^XPDUTL("to do so may result in 'source routine edited' error(s). Edits will be")
"RTN","DIPR162",19,0)
 D MES^XPDUTL("lost and record(s) may be left in an inconsistent state, for example,")
"RTN","DIPR162",20,0)
 D MES^XPDUTL("not all Cross-Referencing completed; which in turn may cause FUTURE")
"RTN","DIPR162",21,0)
 D MES^XPDUTL("VistA/FileMan Hard Errors or corrupted Data. **")
"RTN","DIPR162",22,0)
 ;
"RTN","DIPR162",23,0)
TMCHK ; Check to see if TaskMan is still running
"RTN","DIPR162",24,0)
 S X=$$TM^%ZTLOAD
"RTN","DIPR162",25,0)
 I X,'$D(^%ZTSCH("WAIT")) D
"RTN","DIPR162",26,0)
 . W $C(7)
"RTN","DIPR162",27,0)
 . D BMES^XPDUTL("* Warning TaskMan Has NOT Been Stopped or Placed in a WAIT State!")
"RTN","DIPR162",28,0)
 ;
"RTN","DIPR162",29,0)
LINH ; Check to see if Logons are Inhibited
"RTN","DIPR162",30,0)
 D GETENV^%ZOSV  ; $P(Y,"^",2) = Installing Volume
"RTN","DIPR162",31,0)
 Q:$G(^%ZIS(14.5,"LOGON",$P(Y,"^",2)))
"RTN","DIPR162",32,0)
 W $C(7)
"RTN","DIPR162",33,0)
 D BMES^XPDUTL("* Warning Logons are NOT Inhibited!")
"RTN","DIPR162",34,0)
 Q
"RTN","DIPR162",35,0)
POSTINIT ; Post-Init
"RTN","DIPR162",36,0)
 D BMES^XPDUTL("Beginning Post-Installation...")
"RTN","DIPR162",37,0)
 D BMES^XPDUTL("  I am saving routine DIDT as %DT.")
"RTN","DIPR162",38,0)
 N SCR,%S,%D,ZTOS
"RTN","DIPR162",39,0)
 S SCR="I 1",ZTOS=$$OSNUM^ZTMGRSET,%S="DIDT",%D="%DT" D MOVE^ZTMGRSET
"RTN","DIPR162",40,0)
 N NOWX,TODAYX
"RTN","DIPR162",41,0)
 S NOWX("BEFORE")="S %=$P($H,"","",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)"
"RTN","DIPR162",42,0)
 S NOWX("AFTER")="N %I,%H,% D NOW^%DTC S X=%"
"RTN","DIPR162",43,0)
 S TODAYX("BEFORE")="S X=DT"
"RTN","DIPR162",44,0)
 S TODAYX("AFTER")="N %I,%H,% D NOW^%DTC"
"RTN","DIPR162",45,0)
 I $G(^DD("FUNC",24,1))=NOWX("AFTER") D
"RTN","DIPR162",46,0)
 . D BMES^XPDUTL("  The NOW function has already been corrected. No action taken.")
"RTN","DIPR162",47,0)
 E  D
"RTN","DIPR162",48,0)
 . D BMES^XPDUTL("  I am changing ^DD(""FUNC"",24,1) to correct the NOW function.")
"RTN","DIPR162",49,0)
 . S ^DD("FUNC",24,1)=NOWX("AFTER")
"RTN","DIPR162",50,0)
 I $G(^DD("FUNC",25,1))=TODAYX("AFTER") D
"RTN","DIPR162",51,0)
 . D BMES^XPDUTL("  The TODAY function has already been corrected. No action taken.")
"RTN","DIPR162",52,0)
 E  D
"RTN","DIPR162",53,0)
 . D BMES^XPDUTL("  I am changing ^DD(""FUNC"",25,1) to correct the TODAY function.")
"RTN","DIPR162",54,0)
 . S ^DD("FUNC",25,1)=TODAYX("AFTER")
"RTN","DIPR162",55,0)
 D FIND
"RTN","DIPR162",56,0)
 D BMES^XPDUTL("Finished Post-Installation.")
"RTN","DIPR162",57,0)
 Q
"RTN","DIPR162",58,0)
FIND ; Find and replace NOW and TODAY code in triggers
"RTN","DIPR162",59,0)
 D BMES^XPDUTL("  I am finding and replacing all NOW and TODAY code in triggers.")
"RTN","DIPR162",60,0)
 N FILE,FLD,IEN,LINE,FLAG,CNT
"RTN","DIPR162",61,0)
 S (FILE,CNT)=0
"RTN","DIPR162",62,0)
 F  S FILE=$O(^DD(FILE)) Q:'FILE  D
"RTN","DIPR162",63,0)
 . S FLD=0
"RTN","DIPR162",64,0)
 . F  S FLD=$O(^DD(FILE,FLD)) Q:'FLD  D
"RTN","DIPR162",65,0)
 . . S IEN=0
"RTN","DIPR162",66,0)
 . . F  S IEN=$O(^DD(FILE,FLD,1,IEN)) Q:'IEN  D
"RTN","DIPR162",67,0)
 . . . S FLAG=0
"RTN","DIPR162",68,0)
 . . . I $G(^DD(FILE,FLD,1,IEN,"CREATE VALUE"))="NOW" D REPLACE("NOW","CREATE",1,.NOWX)
"RTN","DIPR162",69,0)
 . . . I $G(^DD(FILE,FLD,1,IEN,"CREATE VALUE"))="TODAY" D REPLACE("TODAY","CREATE",1,.TODAYX)
"RTN","DIPR162",70,0)
 . . . I $G(^DD(FILE,FLD,1,IEN,"DELETE VALUE"))="NOW" D REPLACE("NOW","DELETE",2,.NOWX)
"RTN","DIPR162",71,0)
 . . . I $G(^DD(FILE,FLD,1,IEN,"DELETE VALUE"))="TODAY" D REPLACE("TODAY","DELETE",2,.TODAYX)
"RTN","DIPR162",72,0)
 D BMES^XPDUTL("  I have replaced the NOW and TODAY code in "_CNT_" triggers.")
"RTN","DIPR162",73,0)
 Q
"RTN","DIPR162",74,0)
REPLACE(FUNC,VAL,NODE,CODE) ;
"RTN","DIPR162",75,0)
 N LINE,P1,P2,START,STOP
"RTN","DIPR162",76,0)
 S START=NODE-.00001,STOP=NODE+.39999,NODE=START
"RTN","DIPR162",77,0)
 F  S NODE=$O(^DD(FILE,FLD,1,IEN,NODE)) Q:'NODE!(NODE>STOP)  D
"RTN","DIPR162",78,0)
 . S LINE=$G(^DD(FILE,FLD,1,IEN,NODE))
"RTN","DIPR162",79,0)
 . Q:LINE'[CODE("BEFORE")
"RTN","DIPR162",80,0)
 . I 'FLAG D
"RTN","DIPR162",81,0)
 . . S FLAG=1
"RTN","DIPR162",82,0)
 . . S CNT=CNT+1
"RTN","DIPR162",83,0)
 . . D BMES^XPDUTL("  For TRIGGER at ^DD("_FILE_","_FLD_",1,"_IEN_", change:")
"RTN","DIPR162",84,0)
 . D MES^XPDUTL("  "_FUNC_" code in node "_NODE_")")
"RTN","DIPR162",85,0)
 . D MES^XPDUTL("    from: "_LINE)
"RTN","DIPR162",86,0)
 . S P1=$P(LINE,CODE("BEFORE"),1)
"RTN","DIPR162",87,0)
 . S P2=$P(LINE,CODE("BEFORE"),2)
"RTN","DIPR162",88,0)
 . S LINE=P1_CODE("AFTER")_P2
"RTN","DIPR162",89,0)
 . S ^DD(FILE,FLD,1,IEN,NODE)=LINE
"RTN","DIPR162",90,0)
 . D MES^XPDUTL("      to: "_LINE)
"RTN","DIPR162",91,0)
 Q
"RTN","DIQG")
0^5^B36451220^B36192228
"RTN","DIQG",1,0)
DIQG ;SFISC/DCL-DATA RETRIEVAL PRIMITIVE ;24AUG2009
"RTN","DIQG",2,0)
 ;;22.0;VA FileMan;**76,118,133,149,162**;Mar 30, 1999;Build 19
"RTN","DIQG",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","DIQG",4,0)
GET(DIQGR,DA,DR,DIQGPARM,DIQGETA,DIQGERRA,DIQGIPAR) ; file,rec,fld,parm,targetarray,errarray,int
"RTN","DIQG",5,0)
DDENTRY I $G(U)'="^" N U S U="^"
"RTN","DIQG",6,0)
 I '$G(DA) N X S X(1)="RECORD" Q $$F(.X,2)
"RTN","DIQG",7,0)
 S DIQGIPAR=$G(DIQGIPAR),DIQGPARM=$G(DIQGPARM)
"RTN","DIQG",8,0)
 I 'DIQGIPAR N DIQGAUDR,DIQGAUDD S DIQGAUDD=+$P(DIQGPARM,"A",2) I DIQGAUDD D GET^DIAUTL(DIQGR,DA,DIQGAUDD,"DIQGAUDR")
"RTN","DIQG",9,0)
 N DFF,DIQGSI,DIQGDD,DIQGWPB,DIQGWPO S DIQGDD=DIQGPARM["D",DIQGWPB=DIQGPARM["B"
"RTN","DIQG",10,0)
 S DIQGWPO=1
"RTN","DIQG",11,0)
 N DIQGEY S DIQGEY("FILE")=$G(DIQGR),DIQGEY("RECORD")=$G(DA),DIQGEY("FIELD")=$G(DR)
"RTN","DIQG",12,0)
 I '$D(DIQGR) N X S X(1)="FILE" Q $$F(.X,1)
"RTN","DIQG",13,0)
 I 'DIQGR,'DIQGIPAR N X S X(1)="FILE" Q $$F(.X,12)
"RTN","DIQG",14,0)
DA D:$G(DA)["," IEN(DA,.DA)
"RTN","DIQG",15,0)
 I $G(DR)="" N X S X(1)="FIELD" Q $$F(.X,10)
"RTN","DIQG",16,0)
 I 'DIQGIPAR,'DIQGDD Q:$$N9^DIQGU(DIQGR,.DA) $$F(.DIQGEY,16) I '$D(^DD(DIQGR)) N X S X(1)="FILE" Q $$F(.X,18)
"RTN","DIQG",17,0)
 S DIQGETA=$G(DIQGETA) I DIQGETA["("&(DIQGETA'[")") N X S X(1)="TARGET ARRAY" Q $$F(.X,14)
"RTN","DIQG",18,0)
 I DIQGR S DFF=DIQGR,DIQGR=$S(DIQGDD:$$DDROOT(DIQGR),1:$$ROOT^DIQGU(DIQGR,.DA)) I DIQGR="" N X S X(1)="FILE and/or IEN" Q $$F(.X,4)
"RTN","DIQG",19,0)
DFF S DIQGSI=$$CREF(DIQGR) I '$D(DFF) S DFF=+$P($G(@DIQGSI@(0)),U,2) I 'DFF,DIQGPARM'["D" N X S X("FILE")=DIQGSI Q $$F(.X,6)  ;does the file exist?
"RTN","DIQG",20,0)
 I '$D(@DIQGSI@(DA)),'DIQGIPAR,DIQGPARM'["A" Q $$F(.DIQGEY,19)  ;Entry may have existed audited in the past
"RTN","DIQG",21,0)
 I '$G(DT) N DT S DT=$$DT^DIQGU($H)
"RTN","DIQG",22,0)
 N DIQGPI,DIQGZN S DIQGPI=DIQGPARM["I",DIQGZN=DIQGPARM["Z"
"RTN","DIQG",23,0)
 N %,%H,%T,I,J,N,X
"RTN","DIQG",24,0)
D0 S X=0,N="D0" F  S X=$O(DA(X)) Q:X'>0  S I=X,N=N_",D"_X
"RTN","DIQG",25,0)
 N @N
"RTN","DIQG",26,0)
 S @("D"_+$G(I)_"=DA") I $G(I) F J=I-1:-1:0 S @("D"_J_"=DA(I-J)")
"RTN","DIQG",27,0)
 N C,P,Y,DIQGDN,DIQGD4,DIQGDRN
"RTN","DIQG",28,0)
 S (X,Y)="",DIQGDRN=DR
"RTN","DIQG",29,0)
DD S DIQGDN="^DD("_$S(DIQGPARM["D":0,1:DFF)_")" ;name of ^DD
"RTN","DIQG",30,0)
FIELD I DR'?.N,$D(@DIQGDN@("B",DR)) S DIQGDRN=$O(^(DR,"")) I $O(^(DIQGDRN)) N X S X("FILE")=DIQGDN,X(1)=DR Q $$F(.X,15)
"RTN","DIQG",31,0)
 I DIQGDD,DIQGDRN'>0 D  I $E(DIQGDRN,1,6)="$$$ NO" N X S X(1)="ATTRIBUTE" Q $$F(.X,17)
"RTN","DIQG",32,0)
 .S DIQGDRN=$$DDN^DIQGU0(DR) Q:$E(DIQGDRN,1,6)="$$$ NO"
"RTN","DIQG",33,0)
 .S DIQGDN="^DD("_$P(DIQGDRN,"^")_")",DIQGDRN=$P(DIQGDRN,"^",2)
"RTN","DIQG",34,0)
 I DIQGDRN>0,$D(@DIQGDN@(DIQGDRN,0)) S DIQGD4=$P(^(0),"^",4),C=$P(^(0),"^",2),P=$P(DIQGD4,";") G:$P(DIQGD4,";",2)'>0 DIQ S Y=$P($G(@DIQGSI@(DA,P)),"^",$P(DIQGD4,";",2)) G DIQ
"RTN","DIQG",35,0)
TRYCOMP N X,DIQGS I 'DIQGIPAR D EXPR(DFF,DR) ;DON'T ALLOW COMPUTED EXPRESSIONS EXCEPT FROM $$GET1^DIQ
"RTN","DIQG",36,0)
 I $D(X) S C=Y G C:C["m" D CMPAUD(DR,$G(X("USED"))) I $D(X) X X Q X
"RTN","DIQG",37,0)
GIVEUP Q $$F(.DIQGEY,7)
"RTN","DIQG",38,0)
 ;
"RTN","DIQG",39,0)
DIQ I DIQGDRN=.001 S Y=DA
"RTN","DIQG",40,0)
 G BMW:C,REAL:C'["C"
"RTN","DIQG",41,0)
C I C["m" N X S X(1)="MULTILINE COMPUTED" Q $$F(.X,3)
"RTN","DIQG",42,0)
 ;I DIQGPI Q "" MAR2001 GFT
"RTN","DIQG",43,0)
 I DIQGDN="^DD(1.005)",DIQGDRN=1 S X=@DIQGSI@(DA,0)
"RTN","DIQG",44,0)
 N DCC,DIQGH,X,DFF S DIQGH=$G(DIERR),DCC=DIQGR,DFF=+$P(DCC,"(",2)
"RTN","DIQG",45,0)
 I $D(@DIQGDN@(DIQGDRN,9.01)),$D(^(9.1)) D CMPAUD(^(9.1),^(9.01)) I $D(X) X X I 1
"RTN","DIQG",46,0)
 E  S X="" X $P(@DIQGDN@(DIQGDRN,0),"^",5,999) ;HELLEVI
"RTN","DIQG",47,0)
 D:DIQGH'=$G(DIERR)
"RTN","DIQG",48,0)
 .N X
"RTN","DIQG",49,0)
 .D BLD^DIALOG(120,"FIELD")
"RTN","DIQG",50,0)
 I $G(X)=""!DIQGPI Q $G(X)
"RTN","DIQG",51,0)
CP I C["p",X S C=+$P(C,"p",2) I C,$D(^DIC(C,0,"GL")),$D(@(^("GL")_"0)")),$D(^(X,0)) Q $$EXTERNAL^DIDU(C,.01,"",$P(^(0),U))
"RTN","DIQG",52,0)
 Q $S(C["D":$$FMTE^DILIBF(X,"1U"),1:X)
"RTN","DIQG",53,0)
 ;
"RTN","DIQG",54,0)
REAL I $E($P(DIQGD4,";",2))="E" S Y=$E($G(@DIQGSI@(DA,P)),$E($P($P(DIQGD4,";",2),","),2,99),$P($P(DIQGD4,";",2),",",2)) S:Y?." " Y="" ;SPACES ARE NULL
"RTN","DIQG",55,0)
AUDIT I $G(DIQGAUDD) D  ;Is there an AUDIT TRAIL for the field?
"RTN","DIQG",56,0)
 .I $G(DIQGAUDR(DFF,$$DA^DIQGQ(.DA))) S Y="" Q  ;If entry was created after DIQGAUDD, we know there were no FIELD values!
"RTN","DIQG",57,0)
 .S P=$G(DIQGAUDR(DFF,$$DA^DIQGQ(.DA),DIQGDRN))
"RTN","DIQG",58,0)
 .I P S Y=$$DIA^DIAUTL(DIQGAUDD,DIQGAUDR,P)
"RTN","DIQG",59,0)
 .Q:C'["P"!'Y  N F S F=+$P(C,"P",2) Q:F=DIQGEY("FILE")&(Y=DA)
"RTN","DIQG",60,0)
 .S Y=$$GET1^DIQ(F,Y_",",.01,"A"_DIQGAUDD),C=$TR(C,"PO") ;Recurse to get old POINTER value (as long as recursion isn't infinite!)
"RTN","DIQG",61,0)
 I 'DIQGPI&(C["O"!(C["S")!(C["P")!(C["V")!(C["D"))&($D(@DIQGDN@(DIQGDRN,0))) S C=$P(^(0),"^",2) Q $$EXTERNAL^DIDU(+$P(DIQGDN,"(",2),DIQGDRN,"A",Y)  ;"ALLOW" bad data
"RTN","DIQG",62,0)
 Q $G(Y)
"RTN","DIQG",63,0)
 ;
"RTN","DIQG",64,0)
BMW I C,$P(^DD(+C,.01,0),"^",2)["W" Q:DIQGWPB "$CREF$"_DIQGR_DA_","_$$Q^DIQGU(P)_")" D  G:X="" FE Q:DIQGWPO $NA(@DIQGETA) Q:DIQGIPAR "$WP$" Q ""
"RTN","DIQG",65,0)
 .I DIQGETA']"" K X S X(1)="TARGET ARRAY" D BLD^DIALOG(202,.X) S X="" Q
"RTN","DIQG",66,0)
 .S X=DIQGR_DA_","_$$Q^DIQGU(P)_")"
"RTN","DIQG",67,0)
 .I '$O(@X@(0)) S X="" Q
"RTN","DIQG",68,0)
 .I DIQGZN M @DIQGETA=@X K @DIQGETA@(0) Q
"RTN","DIQG",69,0)
 .S Y=0 F  S Y=$O(@X@(Y)) Q:Y'>0  I $D(^(Y,0)) S @DIQGETA@(Y)=^(0)
"RTN","DIQG",70,0)
 .Q
"RTN","DIQG",71,0)
 I C,$P(^DD(+C,.01,0),"^",2)["M" Q $$F(.DIQGEY,11)
"RTN","DIQG",72,0)
 I DIQGPI!(DIQGDD) Q $G(Y)
"RTN","DIQG",73,0)
 Q $$F(.DIQGEY,8)
"RTN","DIQG",74,0)
CREF(X) N L,X1,X2,X3 S X1=$P(X,"("),X2=$P(X,"(",2,99),L=$L(X2),X3=$TR($E(X2,L),",)"),X2=$E(X2,1,(L-1))_X3 Q X1_$S(X2]"":"("_X2_")",1:"")
"RTN","DIQG",75,0)
WP(DIQGSA,DIQGTA,DIQGZN,DIQGP) N DIQG S DIQG=0 F  S DIQG=$O(@DIQGSA@(DIQG)) Q:DIQG'>0  I $D(^(DIQG,0)) S @$S(DIQGZN:"@DIQGTA@(DIQG,0)",1:"@DIQGTA@(DIQG)")=^(0)
"RTN","DIQG",76,0)
 Q:DIQGP "$WP$" Q ""
"RTN","DIQG",77,0)
DY(Y) Q $$FMTE^DILIBF(Y,"1U")
"RTN","DIQG",78,0)
IEN(IEN,DA) S DA=$P(IEN,",") N I F I=2:1 Q:$P(IEN,",",I)=""  S DA(I-1)=$P(IEN,",",I)
"RTN","DIQG",79,0)
 Q
"RTN","DIQG",80,0)
DDROOT(X) Q:'$D(^DD(X)) "" Q "^DD("_X_","
"RTN","DIQG",81,0)
 ;
"RTN","DIQG",82,0)
CMPAUD(DEXPR,DIQGS) ;DEXPR is Expression, DIQGS is string of Fields used
"RTN","DIQG",83,0)
 Q:'$G(DIQGAUDD)
"RTN","DIQG",84,0)
 N I,F,FD,A
"RTN","DIQG",85,0)
 F I=1:1 S F=$P(DIQGS,";",I) Q:F=""  D
"RTN","DIQG",86,0)
 .S A=$G(DIQGAUDR(+F,$$DA^DIQGQ(.DA),$P(F,U,2)))
"RTN","DIQG",87,0)
 .I A S DIQGS(1,+F,$P(F,U,2))=""""_$$CONVQQ^DILIBF($$DIA^DIAUTL(DIQGAUDD,+F,A))_""""
"RTN","DIQG",88,0)
 S DIQGS("TODAY")=DIQGAUDD\1,DIQGS("TODAY","DATE")=1,DIQGS("NOW")=DIQGAUDD,DIQGS("NOW","DATE")=1 ;'TODAY' is the old date!
"RTN","DIQG",89,0)
 ;now we call DICOMP with old (audit) values plugged in to the field's Computed Expression --
"RTN","DIQG",90,0)
 D EXPR(DIQGAUDR,DEXPR)
"RTN","DIQG",91,0)
 Q
"RTN","DIQG",92,0)
EXPR(DIFILE,DIEXPR) I DIQGPI K X Q:$TR(DIEXPR," 1234567890.?")=""  S DIEXPR="INTERNAL("_DIEXPR_")"
"RTN","DIQG",93,0)
 D EXPR^DICOMP(DIFILE,"",DIEXPR,.DIQGS)
"RTN","DIQG",94,0)
 I 'DIQGPI,$G(Y)["D",Y'["m",$D(X)#2 S X=X_" S X=$$FMTE^DILIBF(X,""5U"")"
"RTN","DIQG",95,0)
 Q
"RTN","DIQG",96,0)
 ;
"RTN","DIQG",97,0)
F(DIQGEY,X) D BLD^DIALOG($P($T(TXT+X),";",4),.DIQGEY)
"RTN","DIQG",98,0)
FE I $G(DIQGERRA)]"" D CALLOUT^DIEFU(DIQGERRA)
"RTN","DIQG",99,0)
 Q ""
"RTN","DIQG",100,0)
TXT ;;
"RTN","DIQG",101,0)
 ;;file root/ref invalid;202;1
"RTN","DIQG",102,0)
 ;;record invalid;202;2
"RTN","DIQG",103,0)
 ;;multiline computed;520;3
"RTN","DIQG",104,0)
 ;;file ref invalid;202;4
"RTN","DIQG",105,0)
 ;;field name/number invalid;202;5
"RTN","DIQG",106,0)
 ;;DD ref for file/field invalid;401;6
"RTN","DIQG",107,0)
 ;;unable to find field name;200;7
"RTN","DIQG",108,0)
 ;;unable to identify type of data in DD;510;8
"RTN","DIQG",109,0)
 ;;unable to resolve extended ref;501;9
"RTN","DIQG",110,0)
 ;;field ref missing;202;10
"RTN","DIQG",111,0)
 ;;multiple field - invalid parameters;309;11
"RTN","DIQG",112,0)
 ;;file number not passed or invalid;202;12
"RTN","DIQG",113,0)
 ;;;;13
"RTN","DIQG",114,0)
 ;;invalid target array;202;14
"RTN","DIQG",115,0)
 ;;ambiguous field name;505;15
"RTN","DIQG",116,0)
 ;;record unavailable;602;16
"RTN","DIQG",117,0)
 ;;invalid attribute;202;17
"RTN","DIQG",118,0)
 ;;file not found;202;18
"RTN","DIQG",119,0)
 ;;record entry does not exist;601;19
"RTN","DIQG",120,0)
 ;;;;20
"VER")
8^22.0
"BLD",770,6)
^143
**END**
**END**
