Released FB*3.5*110 SEQ #98
Extracted from mail message
**KIDS**:FB*3.5*110^

**INSTALL NAME**
FB*3.5*110
"BLD",7973,0)
FB*3.5*110^FEE BASIS^0^3090309^y
"BLD",7973,1,0)
^^4^4^3090305^
"BLD",7973,1,1,0)
FB*3.5*110 does the following: 
"BLD",7973,1,2,0)
- modifies the payments for Psychiatry CPT codes.
"BLD",7973,1,3,0)
- modifies Relative Value Units for CPT 67113.  
"BLD",7973,1,4,0)
- adds additional information to the POV codes 56, 67, 68, and 69.
"BLD",7973,4,0)
^9.64PA^^
"BLD",7973,6.3)
8
"BLD",7973,"INID")
^n
"BLD",7973,"INIT")
EN^FBXIP110
"BLD",7973,"KRN",0)
^9.67PA^779.2^20
"BLD",7973,"KRN",.4,0)
.4
"BLD",7973,"KRN",.401,0)
.401
"BLD",7973,"KRN",.402,0)
.402
"BLD",7973,"KRN",.403,0)
.403
"BLD",7973,"KRN",.5,0)
.5
"BLD",7973,"KRN",.84,0)
.84
"BLD",7973,"KRN",3.6,0)
3.6
"BLD",7973,"KRN",3.8,0)
3.8
"BLD",7973,"KRN",9.2,0)
9.2
"BLD",7973,"KRN",9.8,0)
9.8
"BLD",7973,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",7973,"KRN",9.8,"NM",1,0)
FBAAFSR^^0^B45374746
"BLD",7973,"KRN",9.8,"NM",2,0)
FBXIP110^^0^B4750320
"BLD",7973,"KRN",9.8,"NM","B","FBAAFSR",1)

"BLD",7973,"KRN",9.8,"NM","B","FBXIP110",2)

"BLD",7973,"KRN",19,0)
19
"BLD",7973,"KRN",19.1,0)
19.1
"BLD",7973,"KRN",101,0)
101
"BLD",7973,"KRN",409.61,0)
409.61
"BLD",7973,"KRN",771,0)
771
"BLD",7973,"KRN",779.2,0)
779.2
"BLD",7973,"KRN",870,0)
870
"BLD",7973,"KRN",8989.51,0)
8989.51
"BLD",7973,"KRN",8989.52,0)
8989.52
"BLD",7973,"KRN",8994,0)
8994
"BLD",7973,"KRN","B",.4,.4)

"BLD",7973,"KRN","B",.401,.401)

"BLD",7973,"KRN","B",.402,.402)

"BLD",7973,"KRN","B",.403,.403)

"BLD",7973,"KRN","B",.5,.5)

"BLD",7973,"KRN","B",.84,.84)

"BLD",7973,"KRN","B",3.6,3.6)

"BLD",7973,"KRN","B",3.8,3.8)

"BLD",7973,"KRN","B",9.2,9.2)

"BLD",7973,"KRN","B",9.8,9.8)

"BLD",7973,"KRN","B",19,19)

"BLD",7973,"KRN","B",19.1,19.1)

"BLD",7973,"KRN","B",101,101)

"BLD",7973,"KRN","B",409.61,409.61)

"BLD",7973,"KRN","B",771,771)

"BLD",7973,"KRN","B",779.2,779.2)

"BLD",7973,"KRN","B",870,870)

"BLD",7973,"KRN","B",8989.51,8989.51)

"BLD",7973,"KRN","B",8989.52,8989.52)

"BLD",7973,"KRN","B",8994,8994)

"BLD",7973,"QDEF")
^^^^NO^^^^^^YES
"BLD",7973,"QUES",0)
^9.62^^
"BLD",7973,"REQB",0)
^9.611^1^1
"BLD",7973,"REQB",1,0)
FB*3.5*109^2
"BLD",7973,"REQB","B","FB*3.5*109",1)

"INIT")
EN^FBXIP110
"MBREQ")
0
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^1^1
"PKG",60,20,1,0)
2^^FBPMRG
"PKG",60,20,1,1)

"PKG",60,20,"B",2,1)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
110^3090309
"PKG",60,22,1,"PAH",1,1,0)
^^4^4^3090309
"PKG",60,22,1,"PAH",1,1,1,0)
FB*3.5*110 does the following: 
"PKG",60,22,1,"PAH",1,1,2,0)
- modifies the payments for Psychiatry CPT codes.
"PKG",60,22,1,"PAH",1,1,3,0)
- modifies Relative Value Units for CPT 67113.  
"PKG",60,22,1,"PAH",1,1,4,0)
- adds additional information to the POV codes 56, 67, 68, and 69.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","FBAAFSR")
0^1^B45374746^B42432006
"RTN","FBAAFSR",1,0)
FBAAFSR ;WCIOFO/TCK,SS,DMK,SAB-RBRVS FEE SCHEDULE ; 2/10/09 2:08pm
"RTN","FBAAFSR",2,0)
 ;;3.5;FEE BASIS;**4,53,71,84,92,93,99,102,105,109,110**;JAN 30, 1995;Build 8
"RTN","FBAAFSR",3,0)
 ;
"RTN","FBAAFSR",4,0)
 Q
"RTN","FBAAFSR",5,0)
 ;
"RTN","FBAAFSR",6,0)
RBRVS(CPT,MODL,DOS,ZIP,FAC,TIME) ; calculate RBRVS Fee Schedule amount
"RTN","FBAAFSR",7,0)
 ; Input
"RTN","FBAAFSR",8,0)
 ;   CPT    = CPT/HCPCS code (external value)
"RTN","FBAAFSR",9,0)
 ;   MODL   = list of CPT/HCPCS modifiers (external values)
"RTN","FBAAFSR",10,0)
 ;            delimited by commas (e.g. "26,51")
"RTN","FBAAFSR",11,0)
 ;   DOS    = date of service (fileman format e.g. 2980101)
"RTN","FBAAFSR",12,0)
 ;   ZIP    = ZIP code of service (external 5 digit value)
"RTN","FBAAFSR",13,0)
 ;   FAC    = facility flag =1 if site of service is facility setting
"RTN","FBAAFSR",14,0)
 ;   TIME   = time in minutes, only passed on anesthesia CPT codes
"RTN","FBAAFSR",15,0)
 ; Returns string
"RTN","FBAAFSR",16,0)
 ;     dollar amount^sched year OR null value if not on RBRVS schedule
"RTN","FBAAFSR",17,0)
 ; Output
"RTN","FBAAFSR",18,0)
 ;     FBERR( array of error messages OR undefined if none
"RTN","FBAAFSR",19,0)
 ;
"RTN","FBAAFSR",20,0)
 N FBAMT,FBCF,FBCPT0,FBCPTY0,FBCY,FBERR,FBGPCIY0
"RTN","FBAAFSR",21,0)
 ;
"RTN","FBAAFSR",22,0)
 ; initialization
"RTN","FBAAFSR",23,0)
 S FBAMT=""
"RTN","FBAAFSR",24,0)
 K FBERR
"RTN","FBAAFSR",25,0)
 ;
"RTN","FBAAFSR",26,0)
 ; check for required input parameters
"RTN","FBAAFSR",27,0)
 I $G(CPT)="" D ERR^FBAAFS("CPT missing")
"RTN","FBAAFSR",28,0)
 I $G(DOS)'?7N D ERR^FBAAFS("Date of Service missing")
"RTN","FBAAFSR",29,0)
 I $D(FBERR) Q FBAMT
"RTN","FBAAFSR",30,0)
 ;
"RTN","FBAAFSR",31,0)
 ;if date of service prior to VA implementation, don't use RBRVS
"RTN","FBAAFSR",32,0)
 I DOS<2990901 Q FBAMT
"RTN","FBAAFSR",33,0)
 ;
"RTN","FBAAFSR",34,0)
 ;if modifier SG present, don't use RBRVS, patch FB*3.5*84
"RTN","FBAAFSR",35,0)
 I MODL["SG" Q FBAMT
"RTN","FBAAFSR",36,0)
 ;
"RTN","FBAAFSR",37,0)
 ; determine schedule calendar year based on date of service
"RTN","FBAAFSR",38,0)
 S FBCY=$E(DOS,1,3)+1700
"RTN","FBAAFSR",39,0)
 ;
"RTN","FBAAFSR",40,0)
 ;If date of service in 2003 but prior to Mar 1, 2003 treat as 2002
"RTN","FBAAFSR",41,0)
 I $E(DOS,1,3)=303,DOS<3030301 S FBCY=FBCY-1
"RTN","FBAAFSR",42,0)
 ;
"RTN","FBAAFSR",43,0)
 ; if year after most recent RBRVS schedule then use prior year schedule
"RTN","FBAAFSR",44,0)
 I FBCY>$$LASTCY() S FBCY=FBCY-1
"RTN","FBAAFSR",45,0)
 ;
"RTN","FBAAFSR",46,0)
 ; get procedure data from schedule for year
"RTN","FBAAFSR",47,0)
 D PROC(CPT,MODL,FBCY)
"RTN","FBAAFSR",48,0)
 ;
"RTN","FBAAFSR",49,0)
 ; if procedure:
"RTN","FBAAFSR",50,0)
 ; - covered
"RTN","FBAAFSR",51,0)
 ; - payable
"RTN","FBAAFSR",52,0)
 ; - not for anesthesia
"RTN","FBAAFSR",53,0)
 ; then calculate amount
"RTN","FBAAFSR",54,0)
 I FBCPTY0]"",'$$ANES^FBAAFS(CPT) D
"RTN","FBAAFSR",55,0)
 . ;
"RTN","FBAAFSR",56,0)
 . ;validate parameters
"RTN","FBAAFSR",57,0)
 . I $G(ZIP)="" D ERR^FBAAFS("Missing ZIP Code")
"RTN","FBAAFSR",58,0)
 . I $G(FAC)="" D ERR^FBAAFS("Missing Facility Flag")
"RTN","FBAAFSR",59,0)
 . I $D(FBERR) Q
"RTN","FBAAFSR",60,0)
 . ;
"RTN","FBAAFSR",61,0)
 . ; get GPCIs for calendar year
"RTN","FBAAFSR",62,0)
 . D ZIP(FBCY,ZIP)
"RTN","FBAAFSR",63,0)
 . I FBGPCIY0="" D ERR^FBAAFS("Could not determine GPCIs") Q
"RTN","FBAAFSR",64,0)
 . ;
"RTN","FBAAFSR",65,0)
 . ; get conversion factor
"RTN","FBAAFSR",66,0)
 . S FBCF=$$CF(FBCY,$P(FBCPT0,U,2))
"RTN","FBAAFSR",67,0)
 . I FBCF="" D ERR^FBAAFS("Could not determine the conversion factor") Q
"RTN","FBAAFSR",68,0)
 . ;
"RTN","FBAAFSR",69,0)
 . ; calculate full schedule amount
"RTN","FBAAFSR",70,0)
 . D CALC(FBCY,FAC,FBCPTY0,FBGPCIY0,FBCF)
"RTN","FBAAFSR",71,0)
 . ;
"RTN","FBAAFSR",72,0)
 . ; apply adjustments to calculation
"RTN","FBAAFSR",73,0)
 .  S FBAMT=$J(FBAMT,0,2)*$$ADJ(CPT,DOS)
"RTN","FBAAFSR",74,0)
 . ; apply multiplier based on modifier
"RTN","FBAAFSR",75,0)
 . I MODL]"" S FBAMT=FBAMT*$$MULT(FBCY,MODL,FBCPT0,FBCPTY0)
"RTN","FBAAFSR",76,0)
 ;
"RTN","FBAAFSR",77,0)
 ; return result
"RTN","FBAAFSR",78,0)
 Q $S(FBAMT>0:$J(FBAMT,0,2)_U_FBCY,1:"")
"RTN","FBAAFSR",79,0)
 ;
"RTN","FBAAFSR",80,0)
PROC(CPT,MODL,FBCY,FBNONPBL) ; get procedure data for RBRVS schedule
"RTN","FBAAFSR",81,0)
 ; Input
"RTN","FBAAFSR",82,0)
 ;   CPT    = CPT/HCPCS code (external value)
"RTN","FBAAFSR",83,0)
 ;   MODL   = list of CPT/HCPCS modifiers (external value)
"RTN","FBAAFSR",84,0)
 ;            delimited by commas
"RTN","FBAAFSR",85,0)
 ;   FBCY   = calendar year (4 digit)
"RTN","FBAAFSR",86,0)
 ;   FBNONPBL ( optional):  
"RTN","FBAAFSR",87,0)
 ;     if $G(FBNONPBL)=0 then will make search among payable records only in #162.97
"RTN","FBAAFSR",88,0)
 ;     ignoring those non-payable ones with field #.08 NONPAYABLE = 1
"RTN","FBAAFSR",89,0)
 ;     if $G(FBNONPBL)=1 then will make search among all items in #162.97
"RTN","FBAAFSR",90,0)
 ;   
"RTN","FBAAFSR",91,0)
 ; Output
"RTN","FBAAFSR",92,0)
 ;   FBCPT0  = zero node from file 162.97 OR "" if not covered
"RTN","FBAAFSR",93,0)
 ;   FBCPTY0 = zero node from subfile 162.971 or "" if not covered
"RTN","FBAAFSR",94,0)
 N CPTM,MOD,FBI
"RTN","FBAAFSR",95,0)
 S (FBCPT0,FBCPTY0)=""
"RTN","FBAAFSR",96,0)
 Q:$G(FBCY)']""!($G(CPT)']"")
"RTN","FBAAFSR",97,0)
 ;
"RTN","FBAAFSR",98,0)
 ; if modifier exists try to find entry with modifier
"RTN","FBAAFSR",99,0)
 I MODL]"" D
"RTN","FBAAFSR",100,0)
 . F FBI=1:1 S MOD=$P(MODL,",",FBI) Q:MOD=""  D  Q:FBCPTY0]""
"RTN","FBAAFSR",101,0)
 . . S CPTM=CPT_"-"_MOD
"RTN","FBAAFSR",102,0)
 . . D PROC1(CPTM,FBCY,$G(FBNONPBL))
"RTN","FBAAFSR",103,0)
 ;
"RTN","FBAAFSR",104,0)
 ; if not found with modifier, try just CPT code
"RTN","FBAAFSR",105,0)
 I FBCPTY0="" D PROC1(CPT,FBCY,$G(FBNONPBL))
"RTN","FBAAFSR",106,0)
 ;
"RTN","FBAAFSR",107,0)
 Q
"RTN","FBAAFSR",108,0)
 ;
"RTN","FBAAFSR",109,0)
PROC1(CPTM,FBCY,FBNONPBL) ; get procedure data for CPT-Modifier
"RTN","FBAAFSR",110,0)
 ; input
"RTN","FBAAFSR",111,0)
 ;   CPTM - CPT Code - Modifier (e.g. 57335-TC or 57335)
"RTN","FBAAFSR",112,0)
 ;   FBCY - 4 digit calendar year
"RTN","FBAAFSR",113,0)
 ;   FBNONPBL ( optional):  
"RTN","FBAAFSR",114,0)
 ;     if $G(FBNONPBL)=0 then will make search among payable records only in #162.97
"RTN","FBAAFSR",115,0)
 ;     ignoring those non-payable ones with field #.08 NONPAYABLE = 1
"RTN","FBAAFSR",116,0)
 ;     if $G(FBNONPBL)=1 then will make search among all items in #162.97
"RTN","FBAAFSR",117,0)
 ; output
"RTN","FBAAFSR",118,0)
 ;   FBCPT0  = zero node from file 162.97 OR "" if not covered
"RTN","FBAAFSR",119,0)
 ;   FBCPTY0 = zero node from subfile 162.971 or "" if not covered
"RTN","FBAAFSR",120,0)
 N FBDA,FBDA1
"RTN","FBAAFSR",121,0)
 S (FBCPT0,FBCPTY0)=""
"RTN","FBAAFSR",122,0)
 S FBDA=$O(^FB(162.97,"B",CPTM,0))
"RTN","FBAAFSR",123,0)
 S FBDA1=$S(FBDA:$O(^FB(162.97,FBDA,"CY","B",FBCY,0)),1:"")
"RTN","FBAAFSR",124,0)
 I $G(FBDA),$G(FBDA1) D
"RTN","FBAAFSR",125,0)
 . N FBI,FBSUM,FBY
"RTN","FBAAFSR",126,0)
 . S FBY=$G(^FB(162.97,FBDA,"CY",FBDA1,0))
"RTN","FBAAFSR",127,0)
 . ;if non-payable records should not be considered
"RTN","FBAAFSR",128,0)
 . ;then quit if this is NONPAYBLE 
"RTN","FBAAFSR",129,0)
 . I +$G(FBNONPBL)=0 Q:$P(FBY,U,8)=1
"RTN","FBAAFSR",130,0)
 . ; check if procedure covered by schedule
"RTN","FBAAFSR",131,0)
 . I +$G(FBNONPBL)=0,$$ANES^FBAAFS($P(CPTM,"-")),$P(FBY,U,6)']"" Q  ; missing anes base
"RTN","FBAAFSR",132,0)
 . I +$G(FBNONPBL)=0,'$$ANES^FBAAFS($P(CPTM,"-")) D  I FBSUM'>0 Q  ; sum of RVUs = 0
"RTN","FBAAFSR",133,0)
 . . S FBSUM=0 F FBI=3,4,5,6 S FBSUM=FBSUM+$P(FBY,U,FBI)
"RTN","FBAAFSR",134,0)
 . ; passed checks
"RTN","FBAAFSR",135,0)
 . S FBCPTY0=FBY
"RTN","FBAAFSR",136,0)
 . S FBCPT0=$G(^FB(162.97,FBDA,0))
"RTN","FBAAFSR",137,0)
 Q
"RTN","FBAAFSR",138,0)
 ;
"RTN","FBAAFSR",139,0)
ZIP(FBCY,ZIP) ; get GPCIs
"RTN","FBAAFSR",140,0)
 ; Input
"RTN","FBAAFSR",141,0)
 ;   FBCY  = calendar year (4 digit)
"RTN","FBAAFSR",142,0)
 ;   ZIP   = zip code (5 digit external value)
"RTN","FBAAFSR",143,0)
 ; Output
"RTN","FBAAFSR",144,0)
 ;   FBGPCIY0 = zero node from file 162.96 or "" if not found
"RTN","FBAAFSR",145,0)
 S FBGPCIY0=""
"RTN","FBAAFSR",146,0)
 Q:$G(FBCY)']""!($G(ZIP)']"")
"RTN","FBAAFSR",147,0)
 N FBDA,FBDA1
"RTN","FBAAFSR",148,0)
 S FBDA=$O(^FB(162.96,"B",ZIP,0))
"RTN","FBAAFSR",149,0)
 S FBDA1=$S(FBDA:$O(^FB(162.96,FBDA,"CY","B",FBCY,0)),1:"")
"RTN","FBAAFSR",150,0)
 I FBDA,FBDA1 S FBGPCIY0=$G(^FB(162.96,FBDA,"CY",FBDA1,0))
"RTN","FBAAFSR",151,0)
 Q
"RTN","FBAAFSR",152,0)
 ;
"RTN","FBAAFSR",153,0)
CF(FBCY,FBDA) ; get conversion factor
"RTN","FBAAFSR",154,0)
 ; Input
"RTN","FBAAFSR",155,0)
 ;   FBCY = calendar year
"RTN","FBAAFSR",156,0)
 ;   FBDA = optional conversion category (internal)
"RTN","FBAAFSR",157,0)
 ; Returns
"RTN","FBAAFSR",158,0)
 ;   conversion factor from file 162.99
"RTN","FBAAFSR",159,0)
 N FBCF,FBDA1
"RTN","FBAAFSR",160,0)
 I '$G(FBDA) S FBDA=4 ; use Medicine category if not specified
"RTN","FBAAFSR",161,0)
 S FBDA1=$O(^FB(162.99,FBDA,"CY","B",FBCY,0))
"RTN","FBAAFSR",162,0)
 S FBCF=$S(FBDA1:$P($G(^FB(162.99,FBDA,"CY",FBDA1,0)),U,2),1:"")
"RTN","FBAAFSR",163,0)
 Q +FBCF
"RTN","FBAAFSR",164,0)
 ;
"RTN","FBAAFSR",165,0)
CALC(FBCY,FAC,FBCPTY0,FBGPCIY0,FBCF) ;
"RTN","FBAAFSR",166,0)
 ; Input
"RTN","FBAAFSR",167,0)
 ;   FBCY    = calendar year (4 digit)
"RTN","FBAAFSR",168,0)
 ;   FAC     = facility flag (0 or 1)
"RTN","FBAAFSR",169,0)
 ;   FBCPTY0 = zero node from file 162.71
"RTN","FBAAFSR",170,0)
 ;   FBGPCI0 = zero node from file 162.61
"RTN","FBAAFSR",171,0)
 ;   FBCF    = conversion factor (number)
"RTN","FBAAFSR",172,0)
 ; Returns $ amount
"RTN","FBAAFSR",173,0)
 ;
"RTN","FBAAFSR",174,0)
 N GPCI,RVU,FBI,TMP,TMPRVU
"RTN","FBAAFSR",175,0)
 S FBAMT=0
"RTN","FBAAFSR",176,0)
 ;Old formula for RBRVS pre-2007 payment amounts 
"RTN","FBAAFSR",177,0)
 I DOS<3070101 D
"RTN","FBAAFSR",178,0)
 .S RVU(1)=$P(FBCPTY0,U,3)
"RTN","FBAAFSR",179,0)
 I (DOS=3070101!(DOS>3070101)&(DOS<3080101)) D
"RTN","FBAAFSR",180,0)
 .;New formula for RBRVS 2007 payment amounts
"RTN","FBAAFSR",181,0)
 .;Multiply Work RVU by the Budget Neutrality Adjustor (0.8994)
"RTN","FBAAFSR",182,0)
 .S TMP=$P(FBCPTY0,U,3),TMPRVU=$J((TMP*(.8994)),".",2)
"RTN","FBAAFSR",183,0)
 .S RVU(1)=TMPRVU
"RTN","FBAAFSR",184,0)
 I (DOS=3080101!(DOS>3080101)&(DOS<3090101)) D
"RTN","FBAAFSR",185,0)
 .;New formula for the RBRVS 2008 payment amounts
"RTN","FBAAFSR",186,0)
 .;Multiply Work RVU by the Budget Neutrality Adjustor (0.8994)
"RTN","FBAAFSR",187,0)
 .S TMP=$P(FBCPTY0,U,3),TMPRVU=$J((TMP*(.8806)),".",2)
"RTN","FBAAFSR",188,0)
 .S RVU(1)=TMPRVU
"RTN","FBAAFSR",189,0)
 ;RBRVS 2009 does not have a budget neutrality adjustor.
"RTN","FBAAFSR",190,0)
 I (DOS=3090101!(DOS>3090101)) D
"RTN","FBAAFSR",191,0)
 .S RVU(1)=$P(FBCPTY0,U,3)
"RTN","FBAAFSR",192,0)
 S RVU(2)=$P(FBCPTY0,U,4+FAC)
"RTN","FBAAFSR",193,0)
 S RVU(3)=$P(FBCPTY0,U,6)
"RTN","FBAAFSR",194,0)
 F FBI=2,3,4 S GPCI(FBI-1)=$P(FBGPCIY0,U,FBI)
"RTN","FBAAFSR",195,0)
 S FBAMT=((RVU(1)*GPCI(1))+(RVU(2)*GPCI(2))+(RVU(3)*GPCI(3)))*FBCF
"RTN","FBAAFSR",196,0)
 ; some procedures can't be performed in a facility setting by
"RTN","FBAAFSR",197,0)
 ; definition. the facility PE RVU for such a procedure is a null
"RTN","FBAAFSR",198,0)
 ; value.
"RTN","FBAAFSR",199,0)
 ; when facility setting - check for a null PE value and don't return amt
"RTN","FBAAFSR",200,0)
 I RVU(2)="",FAC S FBAMT=0 Q
"RTN","FBAAFSR",201,0)
 Q
"RTN","FBAAFSR",202,0)
 ;
"RTN","FBAAFSR",203,0)
MULT(FBCY,MODL,FBCPT0,FBCPTY0) ;returns multiplier based on table type
"RTN","FBAAFSR",204,0)
 ; Input
"RTN","FBAAFSR",205,0)
 ;   FBCY    = calendar year (4 digit)
"RTN","FBAAFSR",206,0)
 ;   MODL    = list of CPT/HCPCS modifiers (external values)
"RTN","FBAAFSR",207,0)
 ;              delimited by commas
"RTN","FBAAFSR",208,0)
 ;   FBCPT0  = zero node of file 162.7 for procedure
"RTN","FBAAFSR",209,0)
 ;   FBCPTY0 = zero node of subfile 162.71 for year
"RTN","FBAAFSR",210,0)
 ; Returns
"RTN","FBAAFSR",211,0)
 ;   multiplier value OR 1 if none
"RTN","FBAAFSR",212,0)
 N FBDA,FBDA1,FBI,FBML,FBPD,FBRET,FBTBL,MOD
"RTN","FBAAFSR",213,0)
 S FBRET=1
"RTN","FBAAFSR",214,0)
 S FBML=$P(FBCPTY0,U,2) ; mod level table for procedure
"RTN","FBAAFSR",215,0)
 I MODL]"",FBML]"",FBCY]"" D
"RTN","FBAAFSR",216,0)
 . S FBTBL=FBCY_"-"_FBML ; mod level table for year
"RTN","FBAAFSR",217,0)
 . S FBDA=$O(^FB(162.98,"B",FBTBL,0))
"RTN","FBAAFSR",218,0)
 . Q:'FBDA  ; table not found
"RTN","FBAAFSR",219,0)
 . ; loop thru the modifiers
"RTN","FBAAFSR",220,0)
 . F FBI=1:1 S MOD=$P(MODL,",",FBI) Q:MOD=""  D
"RTN","FBAAFSR",221,0)
 . . I $P($P(FBCPT0,U),"-",2)=MOD Q  ; modifier already built in schedule
"RTN","FBAAFSR",222,0)
 . . ; look up modifier in mod level table
"RTN","FBAAFSR",223,0)
 . . S FBDA1=$O(^FB(162.98,FBDA,"M","B",MOD,0))
"RTN","FBAAFSR",224,0)
 . . Q:'FBDA1  ; modifier not found in table
"RTN","FBAAFSR",225,0)
 . . S FBPD=$P($G(^FB(162.98,FBDA,"M",FBDA1,0)),U,2) ; percentage
"RTN","FBAAFSR",226,0)
 . . I FBPD>0 S FBRET=FBRET*(FBPD/100) ; multiplier
"RTN","FBAAFSR",227,0)
 Q FBRET
"RTN","FBAAFSR",228,0)
 ;
"RTN","FBAAFSR",229,0)
LASTCY() ; Determine last calendar year of RBRVS FEE schedule data
"RTN","FBAAFSR",230,0)
 ; based on last year for Medicine conversion factor
"RTN","FBAAFSR",231,0)
 N YEAR
"RTN","FBAAFSR",232,0)
 S YEAR=$O(^FB(162.99,4,"CY","B"," "),-1)
"RTN","FBAAFSR",233,0)
 Q YEAR
"RTN","FBAAFSR",234,0)
ADJ(CPT,DOS) ;Apply Adjustments to Fee Amount
"RTN","FBAAFSR",235,0)
 ;Apply 5% increase based on CR 6208 Adjustment for Medicare Mental Health Services
"RTN","FBAAFSR",236,0)
 N ADJ
"RTN","FBAAFSR",237,0)
 S ADJ=1.0
"RTN","FBAAFSR",238,0)
 I ((DOS>3080630)&(DOS<3100101))&((CPT>90803)&(CPT<90830))&((CPT'=90820)&(CPT'=90825)) S ADJ=1.05
"RTN","FBAAFSR",239,0)
 Q ADJ
"RTN","FBAAFSR",240,0)
 ;FBAAFSR
"RTN","FBXIP110")
0^2^B4750320^n/a
"RTN","FBXIP110",1,0)
FBXIP110 ;ALB/RC -FB*3.5*110 POST INSTALL ROUTINE ; 3/4/09 7:21pm
"RTN","FBXIP110",2,0)
 ;;3.5;FEE BASIS;**110**;;Build 8
"RTN","FBXIP110",3,0)
 Q
"RTN","FBXIP110",4,0)
EN ;post-install entry point
"RTN","FBXIP110",5,0)
 ;create KIDS checkpoints with call backs
"RTN","FBXIP110",6,0)
 N FBX,Y
"RTN","FBXIP110",7,0)
 S FBX="POST" D
"RTN","FBXIP110",8,0)
 .S Y=$$NEWCP^XPDUTL(FBX,FBX_"^FBXIP110")
"RTN","FBXIP110",9,0)
 .I 'Y D BMES^XPDUTL("ERROR creating "_FBX_" checkpoint.")
"RTN","FBXIP110",10,0)
 Q
"RTN","FBXIP110",11,0)
POST ;begin post-install
"RTN","FBXIP110",12,0)
 D RVU
"RTN","FBXIP110",13,0)
 D UPD
"RTN","FBXIP110",14,0)
 Q
"RTN","FBXIP110",15,0)
RVU ;update RVUs for 67113
"RTN","FBXIP110",16,0)
 N CPT,DA,DIE,DR
"RTN","FBXIP110",17,0)
 S CPT="67113",DA="",DA(1)=""
"RTN","FBXIP110",18,0)
 S DA(1)=$$FIND1^DIC(162.97,,"MX","67113")
"RTN","FBXIP110",19,0)
 S DIE="^FB(162.97,"_DA(1)_",""CY"","
"RTN","FBXIP110",20,0)
 S DA=$$FIND1^DIC(162.971,$$IENS^DILF(.DA),"MX","2008")
"RTN","FBXIP110",21,0)
 S DR=".03///25.00;.04///13.75;.05///13.75"
"RTN","FBXIP110",22,0)
 D ^DIE
"RTN","FBXIP110",23,0)
 K CPT,DA,DIE,DR
"RTN","FBXIP110",24,0)
 Q
"RTN","FBXIP110",25,0)
UPD ;update entries for POV 56,67,78,69
"RTN","FBXIP110",26,0)
 D BMES^XPDUTL("Updating Place of Visit entries in the FEE BASIS PURPOSE OF VISIT file (#161.82)")
"RTN","FBXIP110",27,0)
 N FBCNT,X,UPDENTRY,UPDNAME,UPDCODE,UPDPROG,POVCHECK
"RTN","FBXIP110",28,0)
 F FBCNT=1:1  S UPDENTRY=$P($T(UPDTABLE+FBCNT),";;",2) Q:UPDENTRY="EXIT"  D
"RTN","FBXIP110",29,0)
 .S UPDCODE=$P(UPDENTRY,"^",1),UPDNAME=$P(UPDENTRY,"^",2),UPDPROG=$P(UPDENTRY,"^",3)
"RTN","FBXIP110",30,0)
 .S POVCHECK=$O(^FBAA(161.82,"C",UPDCODE,"")) D
"RTN","FBXIP110",31,0)
 ..I 'POVCHECK D BMES^XPDUTL("POV "_UPDCODE_" not found, please verify this entry in the FEE BASIS PURPOSE of VISIT file (#161.82).") Q
"RTN","FBXIP110",32,0)
 ..N DIE,DA,DR
"RTN","FBXIP110",33,0)
 ..S DA=$$FIND1^DIC(161.82,,"MX",UPDCODE)
"RTN","FBXIP110",34,0)
 ..S DIE="^FBAA(161.82,"
"RTN","FBXIP110",35,0)
 ..S DR=".01///^S X=UPDNAME;2///^S X=UPDPROG"
"RTN","FBXIP110",36,0)
 ..D ^DIE K DIE,DA,DR
"RTN","FBXIP110",37,0)
 Q
"RTN","FBXIP110",38,0)
UPDTABLE ;updates to the POVS
"RTN","FBXIP110",39,0)
 ;;56^DIALYSIS^OUTPATIENT
"RTN","FBXIP110",40,0)
 ;;67^OUTPATIENT MATERNITY CARE SERVICES^OUTPATIENT
"RTN","FBXIP110",41,0)
 ;;68^BOWEL AND BLADDER CARE: AGENCY^OUTPATIENT
"RTN","FBXIP110",42,0)
 ;;69^BOWEL AND BLADDER CARE: FAMILY CAREGIVER^OUTPATIENT
"RTN","FBXIP110",43,0)
 ;;EXIT
"RTN","FBXIP110",44,0)
 ;FBXIP110
"VER")
8.0^22.0
"BLD",7973,6)
^98
**END**
**END**
