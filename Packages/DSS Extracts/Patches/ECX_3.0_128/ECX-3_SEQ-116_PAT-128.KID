Released ECX*3*128 SEQ #116
Extracted from mail message
**KIDS**:ECX*3.0*128^

**INSTALL NAME**
ECX*3.0*128
"BLD",8263,0)
ECX*3.0*128^DSS EXTRACTS^0^3100730^y
"BLD",8263,1,0)
^^4^4^3100730^
"BLD",8263,1,1,0)
The patch is for an error occurring on the Transfer and Discharge Extract
"BLD",8263,1,2,0)
[ECXMOV], to fix a problem that is occurring on the SUR Volume Report
"BLD",8263,1,3,0)
[ECX SUR VOL REPORT], and to fix a problem on the Surgery Extract 
"BLD",8263,1,4,0)
[ECXSURG].
"BLD",8263,4,0)
^9.64PA^^
"BLD",8263,6.3)
19
"BLD",8263,"ABPKG")
n
"BLD",8263,"KRN",0)
^9.67PA^779.2^20
"BLD",8263,"KRN",.4,0)
.4
"BLD",8263,"KRN",.401,0)
.401
"BLD",8263,"KRN",.402,0)
.402
"BLD",8263,"KRN",.403,0)
.403
"BLD",8263,"KRN",.5,0)
.5
"BLD",8263,"KRN",.84,0)
.84
"BLD",8263,"KRN",3.6,0)
3.6
"BLD",8263,"KRN",3.8,0)
3.8
"BLD",8263,"KRN",9.2,0)
9.2
"BLD",8263,"KRN",9.8,0)
9.8
"BLD",8263,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8263,"KRN",9.8,"NM",1,0)
ECXMOV^^0^B28935067
"BLD",8263,"KRN",9.8,"NM",2,0)
ECXUSUR1^^0^B13707274
"BLD",8263,"KRN",9.8,"NM",3,0)
ECXSURG^^0^B57957343
"BLD",8263,"KRN",9.8,"NM","B","ECXMOV",1)

"BLD",8263,"KRN",9.8,"NM","B","ECXSURG",3)

"BLD",8263,"KRN",9.8,"NM","B","ECXUSUR1",2)

"BLD",8263,"KRN",19,0)
19
"BLD",8263,"KRN",19.1,0)
19.1
"BLD",8263,"KRN",101,0)
101
"BLD",8263,"KRN",409.61,0)
409.61
"BLD",8263,"KRN",771,0)
771
"BLD",8263,"KRN",779.2,0)
779.2
"BLD",8263,"KRN",870,0)
870
"BLD",8263,"KRN",8989.51,0)
8989.51
"BLD",8263,"KRN",8989.52,0)
8989.52
"BLD",8263,"KRN",8994,0)
8994
"BLD",8263,"KRN","B",.4,.4)

"BLD",8263,"KRN","B",.401,.401)

"BLD",8263,"KRN","B",.402,.402)

"BLD",8263,"KRN","B",.403,.403)

"BLD",8263,"KRN","B",.5,.5)

"BLD",8263,"KRN","B",.84,.84)

"BLD",8263,"KRN","B",3.6,3.6)

"BLD",8263,"KRN","B",3.8,3.8)

"BLD",8263,"KRN","B",9.2,9.2)

"BLD",8263,"KRN","B",9.8,9.8)

"BLD",8263,"KRN","B",19,19)

"BLD",8263,"KRN","B",19.1,19.1)

"BLD",8263,"KRN","B",101,101)

"BLD",8263,"KRN","B",409.61,409.61)

"BLD",8263,"KRN","B",771,771)

"BLD",8263,"KRN","B",779.2,779.2)

"BLD",8263,"KRN","B",870,870)

"BLD",8263,"KRN","B",8989.51,8989.51)

"BLD",8263,"KRN","B",8989.52,8989.52)

"BLD",8263,"KRN","B",8994,8994)

"BLD",8263,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",8263,"QUES",0)
^9.62^^
"BLD",8263,"REQB",0)
^9.611^3^2
"BLD",8263,"REQB",2,0)
ECX*3.0*111^1
"BLD",8263,"REQB",3,0)
ECX*3.0*112^1
"BLD",8263,"REQB","B","ECX*3.0*111",2)

"BLD",8263,"REQB","B","ECX*3.0*112",3)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
128^3100730
"PKG",535,22,1,"PAH",1,1,0)
^^4^4^3100730
"PKG",535,22,1,"PAH",1,1,1,0)
The patch is for an error occurring on the Transfer and Discharge Extract
"PKG",535,22,1,"PAH",1,1,2,0)
[ECXMOV], to fix a problem that is occurring on the SUR Volume Report
"PKG",535,22,1,"PAH",1,1,3,0)
[ECX SUR VOL REPORT], and to fix a problem on the Surgery Extract 
"PKG",535,22,1,"PAH",1,1,4,0)
[ECXSURG].
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECXMOV")
0^1^B28935067^B19849006
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ; 4/7/10 10:54am
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105,128**;Dec 22, 1997;Build 19
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC,ECDIS
"RTN","ECXMOV",10,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",11,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",12,0)
 S ECED=ECED+.3,QFLG=0
"RTN","ECXMOV",13,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",14,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",15,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXMOV",16,0)
 ...Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",17,0)
 ...S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",18,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",19,0)
 ...I 'OK K ECXPAT Q
"RTN","ECXMOV",20,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",21,0)
 ...S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",22,0)
 ...S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",23,0)
 ...;
"RTN","ECXMOV",24,0)
 ...;reset EC to admission movement and hold discharge movement ECX*128
"RTN","ECXMOV",25,0)
 ...S ECCA=$P(EC,U,14),EC=$G(^DGPM(ECCA,0)),ECA=$P(EC,U) I EC="" D MAIL(ECDA) S QFLG=1 Q
"RTN","ECXMOV",26,0)
 ...;
"RTN","ECXMOV",27,0)
 ...;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",28,0)
 ...;then reset EC to that previous xfer movement
"RTN","ECXMOV",29,0)
 ...S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",30,0)
 ...S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",31,0)
 ...I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",32,0)
 ...;
"RTN","ECXMOV",33,0)
 ...I ECM=2 D
"RTN","ECXMOV",34,0)
 ....;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",35,0)
 ....;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",36,0)
 ....I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",37,0)
 ....S W=$P(EC,U,6)
"RTN","ECXMOV",38,0)
 ...;
"RTN","ECXMOV",39,0)
 ...I ECM=3 D
"RTN","ECXMOV",40,0)
 ....;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",41,0)
 ....;API) will pick up discharge movmement record
"RTN","ECXMOV",42,0)
 ....S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",43,0)
 ....;set losing ward to ward at discharge
"RTN","ECXMOV",44,0)
 ....N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",45,0)
 ....I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",46,0)
 ...;
"RTN","ECXMOV",47,0)
 ...;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",48,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",49,0)
 ...;
"RTN","ECXMOV",50,0)
 ...S (ECXWRD,ECXFAC,ECXDSSD)=""
"RTN","ECXMOV",51,0)
 ...I W'="" D
"RTN","ECXMOV",52,0)
 ....S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",53,0)
 ....S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",54,0)
 ...S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",55,0)
 ...S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",56,0)
 ...;
"RTN","ECXMOV",57,0)
 ...;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",58,0)
 ...S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",59,0)
 ...I ECM=3 D
"RTN","ECXMOV",60,0)
 ....S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",61,0)
 ....S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",62,0)
 ....S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",63,0)
 ...;
"RTN","ECXMOV",64,0)
 ...;Get production division ;p-46
"RTN","ECXMOV",65,0)
 ...N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",66,0)
 ...;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",67,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",68,0)
 ...;
"RTN","ECXMOV",69,0)
 ...;- If no encounter number, don't file record
"RTN","ECXMOV",70,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",71,0)
 ...D:ECXENC'="" FILE
"RTN","ECXMOV",72,0)
 Q
"RTN","ECXMOV",73,0)
 ;
"RTN","ECXMOV",74,0)
FILE ;file the extract record
"RTN","ECXMOV",75,0)
 ;node0
"RTN","ECXMOV",76,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",77,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",78,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",79,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",80,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",81,0)
 ;node1
"RTN","ECXMOV",82,0)
 ;mpi ECXMPI^dss dept ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",83,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",84,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",85,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",86,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",87,0)
 N DA,DIK
"RTN","ECXMOV",88,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",89,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",90,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",91,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",92,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",93,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",94,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",95,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",96,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",97,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",98,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",99,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",100,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",101,0)
 Q
"RTN","ECXMOV",102,0)
 ;
"RTN","ECXMOV",103,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",104,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",105,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",106,0)
 Q
"RTN","ECXMOV",107,0)
 ;
"RTN","ECXMOV",108,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",109,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV",110,0)
MAIL(ECXDA) ; 
"RTN","ECXMOV",111,0)
 ; Created to send a message pointing to a bad record ECX*128
"RTN","ECXMOV",112,0)
 ; Input - ECXDA is the PATIENT MOVEMENT (#405) record number for the discharge that has no admission 
"RTN","ECXMOV",113,0)
 ; associated with it.  ECX*128
"RTN","ECXMOV",114,0)
 N XMSUB,XMTEXT,XMY,MSGTEXT,LINENUM
"RTN","ECXMOV",115,0)
 ;;Setup necessary variables to send the message
"RTN","ECXMOV",116,0)
 S XMSUB="Movement Record Error - Please Fix"
"RTN","ECXMOV",117,0)
 S XMTEXT="MSGTEXT("
"RTN","ECXMOV",118,0)
 S XMY("G.DSS-MOVS@"_^XMB("NETNAME"))=""
"RTN","ECXMOV",119,0)
 ;;Create the message to be sent
"RTN","ECXMOV",120,0)
 S LINENUM=1
"RTN","ECXMOV",121,0)
 S MSGTEXT(LINENUM)="The DSS-Movement extract did not complete due to the error below"
"RTN","ECXMOV",122,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",123,0)
 S MSGTEXT(LINENUM)="Discharge movement record "_ECXDA_" does not have an admission movement associated with it."
"RTN","ECXMOV",124,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",125,0)
 S MSGTEXT(LINENUM)="This record needs to be fixed and the extract needs to be run again."
"RTN","ECXMOV",126,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)=""
"RTN","ECXMOV",127,0)
 D ^XMD
"RTN","ECXMOV",128,0)
 Q
"RTN","ECXSURG")
0^3^B57957343^B53305760
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 4/15/10 3:33pm
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128**;Dec 22, 1997;Build 19
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN
"RTN","ECXSURG",21,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",22,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",23,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",24,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",25,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",26,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",27,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",28,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",29,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",30,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",31,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",32,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",33,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",34,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",35,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",36,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",37,0)
 ; ECX*112
"RTN","ECXSURG",38,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",39,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",40,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",41,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",42,0)
 ;get data
"RTN","ECXSURG",43,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",44,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",45,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",46,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",47,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",48,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",49,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",50,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",51,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",52,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",53,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",54,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",55,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",56,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",57,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",58,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",59,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",60,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",61,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",62,0)
 ;get classification information
"RTN","ECXSURG",63,0)
 S (ECXAO,ECXHNC)="" I ECXVISIT'="" D
"RTN","ECXSURG",64,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",65,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",66,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",67,0)
 .S ECENEC=$G(ECXVIST("PGE"))
"RTN","ECXSURG",68,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",69,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",70,0)
 ;look for non-OR
"RTN","ECXSURG",71,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",72,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",73,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",74,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",75,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",76,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",77,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",78,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",79,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",80,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",81,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",82,0)
 .;
"RTN","ECXSURG",83,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",84,0)
 .N P1 ;primary stop
"RTN","ECXSURG",85,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",86,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",87,0)
 ;
"RTN","ECXSURG",88,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",89,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",90,0)
 ;
"RTN","ECXSURG",91,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",92,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",93,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",94,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",95,0)
 ;get service of attending surgeon
"RTN","ECXSURG",96,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",97,0)
 ;
"RTN","ECXSURG",98,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",99,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",100,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",101,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",102,0)
 ;
"RTN","ECXSURG",103,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",104,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",105,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",106,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",107,0)
 ;anesthesia technique
"RTN","ECXSURG",108,0)
 S ECANE="",PP=""
"RTN","ECXSURG",109,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",110,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",111,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",112,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",113,0)
 ;get primary procedure
"RTN","ECXSURG",114,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",115,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",116,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",117,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",118,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",119,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",120,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",121,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",122,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",123,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",124,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",125,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",126,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",127,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",128,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",129,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",130,0)
 ..;
"RTN","ECXSURG",131,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",132,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",133,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",134,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",135,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",136,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",137,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",138,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",139,0)
 ; -Recovery Room Time
"RTN","ECXSURG",140,0)
 S ECRR=""
"RTN","ECXSURG",141,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",142,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",143,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",144,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",145,0)
 ;
"RTN","ECXSURG",146,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",147,0)
 ;
"RTN","ECXSURG",148,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",149,0)
 S ECXORCT=0
"RTN","ECXSURG",150,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",151,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",152,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",153,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",154,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",155,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",156,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",157,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",158,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",159,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",160,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",161,0)
 ;
"RTN","ECXSURG",162,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",163,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",164,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",165,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",166,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",167,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",168,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",169,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",170,0)
 ;
"RTN","ECXSURG",171,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",172,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",173,0)
 ;
"RTN","ECXSURG",174,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",175,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",176,0)
 ;
"RTN","ECXSURG",177,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",178,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",179,0)
 ;
"RTN","ECXSURG",180,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",181,0)
 I $$SURPODX^ECXUTL6(.ECXPODX,.ECXPODX1,.ECXPODX2,.ECXPODX3,.ECXPODX4,.ECXPODX5)
"RTN","ECXSURG",182,0)
 ;
"RTN","ECXSURG",183,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",184,0)
 ;get secondary procedures
"RTN","ECXSURG",185,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",186,0)
 S ECXJ=0
"RTN","ECXSURG",187,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",188,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",189,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",190,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",191,0)
 .K ARR,ERR
"RTN","ECXSURG",192,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",193,0)
 ..K ARR,ERR
"RTN","ECXSURG",194,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",195,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",196,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",197,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",198,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",199,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",200,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",201,0)
 ;get prostheses
"RTN","ECXSURG",202,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",203,0)
 S ECXJ=0
"RTN","ECXSURG",204,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",205,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",206,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",207,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",208,0)
 Q
"RTN","ECXSURG",209,0)
 ;
"RTN","ECXSURG",210,0)
 ;
"RTN","ECXSURG",211,0)
TIME ; given date/time get increment
"RTN","ECXSURG",212,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",213,0)
 N CON,TIMEDIF
"RTN","ECXSURG",214,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",215,0)
 ;
"RTN","ECXSURG",216,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",217,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",218,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",219,0)
 I 'CON D
"RTN","ECXSURG",220,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",221,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",222,0)
 I CON D
"RTN","ECXSURG",223,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",224,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",225,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",226,0)
 Q
"RTN","ECXSURG",227,0)
 ;
"RTN","ECXSURG",228,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",229,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",230,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",231,0)
 Q
"RTN","ECXSURG",232,0)
 ;
"RTN","ECXSURG",233,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",234,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXUSUR1")
0^2^B13707274^B13707004
"RTN","ECXUSUR1",1,0)
ECXUSUR1 ;ALB/TJL-Surgery Extract Unusual Volume Report ; 1/8/08 9:58am
"RTN","ECXUSUR1",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,105,111,128**;Dec 22, 1997;Build 19
"RTN","ECXUSUR1",3,0)
EN ;
"RTN","ECXUSUR1",4,0)
 N ECHEAD,COUNT,TIMEDIF,ECXPROC
"RTN","ECXUSUR1",5,0)
 S ECHEAD="SUR"
"RTN","ECXUSUR1",6,0)
 S (COUNT,QFLG)=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXUSUR1",7,0)
 F  S ECD=$O(^SRF("AC",ECD)) Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXUSUR1",8,0)
 .S ECD0=0
"RTN","ECXUSUR1",9,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXUSUR1",10,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXUSUR1",11,0)
 Q
"RTN","ECXUSUR1",12,0)
 ;
"RTN","ECXUSUR1",13,0)
STUFF ;gather data
"RTN","ECXUSUR1",14,0)
 N J,DATA1,DATA2,DATAOP,ECXNONL,ECXSTOP
"RTN","ECXUSUR1",15,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXUSUR1",16,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXUSUR1",17,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXUSUR1",18,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXUSUR1",19,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXUSUR1",20,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXUSUR1",21,0)
 S DATAPA=$S($D(^SRF(ECD0,1.1)):^(1.1),1:"")
"RTN","ECXUSUR1",22,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXUSUR1",23,0)
 ;get data
"RTN","ECXUSUR1",24,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXUSUR1",25,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXUSUR1",26,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXUSUR1",27,0)
 ;look for non-OR
"RTN","ECXUSUR1",28,0)
 S (ECNT,ECNL,ECXNONL,ECXSTOP)=""
"RTN","ECXUSUR1",29,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXUSUR1",30,0)
 .S A1=$P(ECNO,U,5)
"RTN","ECXUSUR1",31,0)
 .S A2=$P(ECNO,U,4)
"RTN","ECXUSUR1",32,0)
 .S TIME="##"
"RTN","ECXUSUR1",33,0)
 .D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXUSUR1",34,0)
 .S ECXNONL=+$P(ECNO,U,2)
"RTN","ECXUSUR1",35,0)
 .S ECNL=$P($G(^ECX(728.44,ECXNONL,0)),U,9)
"RTN","ECXUSUR1",36,0)
 .I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXUSUR1",37,0)
 .;
"RTN","ECXUSUR1",38,0)
 .; Get DSS Stop Code to use in encounter number
"RTN","ECXUSUR1",39,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXUSUR1",40,0)
 ;
"RTN","ECXUSUR1",41,0)
 ;retrieving anesthesia times first, then operation and patient
"RTN","ECXUSUR1",42,0)
 ;times, then storing in following order:
"RTN","ECXUSUR1",43,0)
 ;ecode0="recovery room time^pt hold area time^or clean time^patient
"RTN","ECXUSUR1",44,0)
 ;time^operation time^anesthesia time
"RTN","ECXUSUR1",45,0)
 S ECODE0=""
"RTN","ECXUSUR1",46,0)
 F J="1,4","2,3","10,12","13,14","15,10" D
"RTN","ECXUSUR1",47,0)
 .S A2=$P(DATA2,U,$P(J,","))
"RTN","ECXUSUR1",48,0)
 .S A1=$P(DATA2,U,$P(J,",",2))
"RTN","ECXUSUR1",49,0)
 .S TIME="##"
"RTN","ECXUSUR1",50,0)
 .I (A1&A2) D TIMEDIF(A1,A2) D
"RTN","ECXUSUR1",51,0)
 ..I +J'=2 D TIME
"RTN","ECXUSUR1",52,0)
 ..I +J=2 D  ;-Operation Time
"RTN","ECXUSUR1",53,0)
 ...S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXUSUR1",54,0)
 ...;I TIME<0 S TIME="###"
"RTN","ECXUSUR1",55,0)
 .S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",56,0)
 ;
"RTN","ECXUSUR1",57,0)
 ;retrieve recovery room (PACU) time
"RTN","ECXUSUR1",58,0)
 S A2=$P($G(DATAPA),U,7)
"RTN","ECXUSUR1",59,0)
 S A1=$P($G(DATAPA),U,8)
"RTN","ECXUSUR1",60,0)
 S TIME="##"
"RTN","ECXUSUR1",61,0)
 I (A1&A2) D TIME
"RTN","ECXUSUR1",62,0)
 S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",63,0)
 ;Place the NON-OR PROCEDURE into the operation time for the report ECX*128
"RTN","ECXUSUR1",64,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXUSUR1",65,0)
 ;
"RTN","ECXUSUR1",66,0)
 ;- Was surgery cancelled/aborted
"RTN","ECXUSUR1",67,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXUSUR1",68,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXUSUR1",69,0)
 ;
"RTN","ECXUSUR1",70,0)
 I ECXFLAG D FILE  Q
"RTN","ECXUSUR1",71,0)
 N PIECE,FILE
"RTN","ECXUSUR1",72,0)
 S FILE="NO"
"RTN","ECXUSUR1",73,0)
 F PIECE=1,2,3,4,5,6 D
"RTN","ECXUSUR1",74,0)
 . I $P(ECODE0,U,PIECE)>ECTHLD S FILE="YES"
"RTN","ECXUSUR1",75,0)
 . I $P(ECODE0,U,PIECE)<0 S FILE="YES"
"RTN","ECXUSUR1",76,0)
 ;
"RTN","ECXUSUR1",77,0)
 I FILE="YES" D FILE Q:ECXERR
"RTN","ECXUSUR1",78,0)
 Q
"RTN","ECXUSUR1",79,0)
 ;
"RTN","ECXUSUR1",80,0)
FILE ; Store unusual records for display later
"RTN","ECXUSUR1",81,0)
 N OK,SURPAT,SURNAME,SURSSN,SURDT,VOL
"RTN","ECXUSUR1",82,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.SURPAT)
"RTN","ECXUSUR1",83,0)
 I 'OK Q
"RTN","ECXUSUR1",84,0)
 S SURNAME=SURPAT("NAME")
"RTN","ECXUSUR1",85,0)
 S SURSSN=SURPAT("SSN")
"RTN","ECXUSUR1",86,0)
 S SURDT=$E(ECXDATE,4,5)_"/"_$E(ECXDATE,6,7)_"/"_$E(ECXDATE,2,3)
"RTN","ECXUSUR1",87,0)
 ;
"RTN","ECXUSUR1",88,0)
 ; Observation Patient Indicator (yes/no)
"RTN","ECXUSUR1",89,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXUSUR1",90,0)
 ;
"RTN","ECXUSUR1",91,0)
 ; Principal Procedure
"RTN","ECXUSUR1",92,0)
 S ECXPROC=$E($P(DATAOP,U),1,15)
"RTN","ECXUSUR1",93,0)
 ;
"RTN","ECXUSUR1",94,0)
 ; If no encounter number don't file record
"RTN","ECXUSUR1",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXUSUR1",96,0)
 ;
"RTN","ECXUSUR1",97,0)
 S VOL=$P(ECODE0,U)
"RTN","ECXUSUR1",98,0)
 I $P(ECODE0,U,2)>VOL S VOL=$P(ECODE0,U,2)
"RTN","ECXUSUR1",99,0)
 I $P(ECODE0,U,3)>VOL S VOL=$P(ECODE0,U,3)
"RTN","ECXUSUR1",100,0)
 S ^TMP($J,-VOL,-ECD0)=SURNAME_U_SURSSN_U_SURDT_U_ECD0_U_ECXENC_U_ECODE0_U_ECXPROC_U_ECCAN
"RTN","ECXUSUR1",101,0)
 S COUNT=COUNT+1
"RTN","ECXUSUR1",102,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUSUR1",103,0)
 Q
"RTN","ECXUSUR1",104,0)
 ;
"RTN","ECXUSUR1",105,0)
TIME ; given date/time get increment
"RTN","ECXUSUR1",106,0)
 N CON
"RTN","ECXUSUR1",107,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXUSUR1",108,0)
 D TIMEDIF(A1,A2)
"RTN","ECXUSUR1",109,0)
 I 'CON D
"RTN","ECXUSUR1",110,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXUSUR1",111,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXUSUR1",112,0)
 I CON D
"RTN","ECXUSUR1",113,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXUSUR1",114,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXUSUR1",115,0)
 ;S:TIME<0 TIME="###"
"RTN","ECXUSUR1",116,0)
 Q
"RTN","ECXUSUR1",117,0)
 ;
"RTN","ECXUSUR1",118,0)
TIMEDIF(START,FINISH) ; Set values to be compared, in seconds
"RTN","ECXUSUR1",119,0)
 ;
"RTN","ECXUSUR1",120,0)
 S TIMEDIF=$$FMDIFF^XLFDT(START,FINISH,2)/900
"RTN","ECXUSUR1",121,0)
 I (TIMEDIF>0)&(TIMEDIF<.5) S TIMEDIF=.5
"RTN","ECXUSUR1",122,0)
 Q
"RTN","ECXUSUR1",123,0)
 ;
"RTN","ECXUSUR1",124,0)
EXIT S ECXERR=1 Q
"VER")
8.0^22.0
"BLD",8263,6)
^116
**END**
**END**
