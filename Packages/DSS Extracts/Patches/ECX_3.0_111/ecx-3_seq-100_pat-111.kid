Released ECX*3*111 SEQ #100
Extracted from mail message
**KIDS**:ECX*3.0*111^

**INSTALL NAME**
ECX*3.0*111
"BLD",7494,0)
ECX*3.0*111^DSS EXTRACTS^0^3080220^y
"BLD",7494,1,0)
^^3^3^3080220^
"BLD",7494,1,1,0)
This patch provides a fix to the ECX PROS COST Report, Pharmacy Extracts
"BLD",7494,1,2,0)
Incomplete Feeder Key Report [ECX PHA FKEY],Surgery Unusual Volume Report
"BLD",7494,1,3,0)
and Nutrition (NUT) Extract Audit Report.
"BLD",7494,4,0)
^9.64PA^^
"BLD",7494,6)
1^
"BLD",7494,6.3)
4
"BLD",7494,"KRN",0)
^9.67PA^8989.52^19
"BLD",7494,"KRN",.4,0)
.4
"BLD",7494,"KRN",.401,0)
.401
"BLD",7494,"KRN",.402,0)
.402
"BLD",7494,"KRN",.403,0)
.403
"BLD",7494,"KRN",.5,0)
.5
"BLD",7494,"KRN",.84,0)
.84
"BLD",7494,"KRN",3.6,0)
3.6
"BLD",7494,"KRN",3.8,0)
3.8
"BLD",7494,"KRN",9.2,0)
9.2
"BLD",7494,"KRN",9.8,0)
9.8
"BLD",7494,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",7494,"KRN",9.8,"NM",1,0)
ECXUPRO^^0^B23782854
"BLD",7494,"KRN",9.8,"NM",2,0)
ECXUPRO1^^0^B6892004
"BLD",7494,"KRN",9.8,"NM",3,0)
ECXDRUG2^^0^B17371737
"BLD",7494,"KRN",9.8,"NM",4,0)
ECXUSUR1^^0^B13707004
"BLD",7494,"KRN",9.8,"NM",5,0)
ECXANUT^^0^B56020770
"BLD",7494,"KRN",9.8,"NM","B","ECXANUT",5)

"BLD",7494,"KRN",9.8,"NM","B","ECXDRUG2",3)

"BLD",7494,"KRN",9.8,"NM","B","ECXUPRO",1)

"BLD",7494,"KRN",9.8,"NM","B","ECXUPRO1",2)

"BLD",7494,"KRN",9.8,"NM","B","ECXUSUR1",4)

"BLD",7494,"KRN",19,0)
19
"BLD",7494,"KRN",19.1,0)
19.1
"BLD",7494,"KRN",101,0)
101
"BLD",7494,"KRN",409.61,0)
409.61
"BLD",7494,"KRN",771,0)
771
"BLD",7494,"KRN",870,0)
870
"BLD",7494,"KRN",8989.51,0)
8989.51
"BLD",7494,"KRN",8989.52,0)
8989.52
"BLD",7494,"KRN",8994,0)
8994
"BLD",7494,"KRN","B",.4,.4)

"BLD",7494,"KRN","B",.401,.401)

"BLD",7494,"KRN","B",.402,.402)

"BLD",7494,"KRN","B",.403,.403)

"BLD",7494,"KRN","B",.5,.5)

"BLD",7494,"KRN","B",.84,.84)

"BLD",7494,"KRN","B",3.6,3.6)

"BLD",7494,"KRN","B",3.8,3.8)

"BLD",7494,"KRN","B",9.2,9.2)

"BLD",7494,"KRN","B",9.8,9.8)

"BLD",7494,"KRN","B",19,19)

"BLD",7494,"KRN","B",19.1,19.1)

"BLD",7494,"KRN","B",101,101)

"BLD",7494,"KRN","B",409.61,409.61)

"BLD",7494,"KRN","B",771,771)

"BLD",7494,"KRN","B",870,870)

"BLD",7494,"KRN","B",8989.51,8989.51)

"BLD",7494,"KRN","B",8989.52,8989.52)

"BLD",7494,"KRN","B",8994,8994)

"BLD",7494,"QUES",0)
^9.62^^
"BLD",7494,"REQB",0)
^9.611^2^2
"BLD",7494,"REQB",1,0)
ECX*3.0*49^2
"BLD",7494,"REQB",2,0)
ECX*3.0*105^2
"BLD",7494,"REQB","B","ECX*3.0*105",2)

"BLD",7494,"REQB","B","ECX*3.0*49",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
111^3080220^123456804
"PKG",535,22,1,"PAH",1,1,0)
^^3^3^3080220
"PKG",535,22,1,"PAH",1,1,1,0)
This patch provides a fix to the ECX PROS COST Report, Pharmacy Extracts
"PKG",535,22,1,"PAH",1,1,2,0)
Incomplete Feeder Key Report [ECX PHA FKEY],Surgery Unusual Volume Report
"PKG",535,22,1,"PAH",1,1,3,0)
and Nutrition (NUT) Extract Audit Report.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","ECXANUT")
0^5^B56020770^B53849197
"RTN","ECXANUT",1,0)
ECXANUT ;ALB/JRC - NUT Extract Audit Report ; 1/24/08 8:28am
"RTN","ECXANUT",2,0)
 ;;3.0;DSS EXTRACTS;**105,111**;Dec 22, 1997;Build 4
"RTN","ECXANUT",3,0)
 Q
"RTN","ECXANUT",4,0)
EN ;entry point for NUT extract audit report
"RTN","ECXANUT",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXANUT",6,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXANUT",7,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXANUT",8,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXANUT",9,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXANUT",10,0)
 S (ECXERR,FLAG)=0
"RTN","ECXANUT",11,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXANUT",12,0)
 S ECXHEAD="NUT",ECXAUD=0
"RTN","ECXANUT",13,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXANUT",14,0)
 ;select extract
"RTN","ECXANUT",15,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXANUT",16,0)
 Q:ECXERR
"RTN","ECXANUT",17,0)
 W !!
"RTN","ECXANUT",18,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXANUT",19,0)
 S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXANUT",20,0)
 I ECXERR=1 D  Q
"RTN","ECXANUT",21,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUT",22,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXANUT",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUT",24,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUT",25,0)
 W !
"RTN","ECXANUT",26,0)
 ;prompt for report type, (s)ummary or (d)etail
"RTN","ECXANUT",27,0)
 S REPORT=$$REPORT() Q:FLAG
"RTN","ECXANUT",28,0)
 ;if detail selected, prompt for (i)npatient, (o)utpatient or (b)oth
"RTN","ECXANUT",29,0)
 I REPORT="D" S STATUS=$$STATUS() Q:FLAG
"RTN","ECXANUT",30,0)
 ;determine output device and queue if requested
"RTN","ECXANUT",31,0)
 S ECXPGM="PROCESS^ECXANUT",ECXDESC="NUT Extract Audit Report"
"RTN","ECXANUT",32,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("STATUS")="",ECXSAVE("REPORT")="",ECXSAVE("FLAG")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXANUT",33,0)
 W !
"RTN","ECXANUT",34,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXANUT",35,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXANUT",36,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUT",37,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXANUT",38,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUT",39,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXANUT",40,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXANUT",41,0)
 .D PROCESS^ECXANUT
"RTN","ECXANUT",42,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXANUT",43,0)
 D HOME^%ZIS
"RTN","ECXANUT",44,0)
 D AUDIT^ECXKILL
"RTN","ECXANUT",45,0)
 Q
"RTN","ECXANUT",46,0)
 ;
"RTN","ECXANUT",47,0)
PROCESS ;process data in file #727.832 and store in ^tmp global
"RTN","ECXANUT",48,0)
 N %,ARRAY,ECXEXT,ECXDEF,X,ECXSTART,ECXEND,ECXRUN,IEN,NODE0,NODE1,DATE,FKEY,DIV,OBS,DLTYPE,DFL,ENC,FPD,FPF,I,PFK,DLDIV
"RTN","ECXANUT",49,0)
 S ARRAY="^TMP($J,""ECXORDER"")"
"RTN","ECXANUT",50,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXANUT",51,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUT",52,0)
 ;get run date in external format
"RTN","ECXANUT",53,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXANUT",54,0)
 ;get records in date range and set values
"RTN","ECXANUT",55,0)
 S IEN=0 F  S IEN=$O(^ECX(727.832,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:FLAG
"RTN","ECXANUT",56,0)
 .S NODE0=$G(^ECX(727.832,IEN,0)),NODE1=$G(^(1))
"RTN","ECXANUT",57,0)
 .S DATE=$P(NODE0,U,9),STAT=$P(NODE0,U,8),PFK=$P(NODE1,U,8),DIV=$P(NODE1,U,5),OBS=$P(NODE1,U,2),DLT=$P(NODE1,U,10),FPD=$P(NODE1,U,6),FPF=$P(NODE1,U,9),ENC=$P(NODE1,U,4),DFL=$P(NODE1,U,11),DLDIV=$P(NODE1,U,7)
"RTN","ECXANUT",58,0)
 .;filter out divisions if not all selected
"RTN","ECXANUT",59,0)
 .Q:$G(@SCRNARR@("DIVISION"))'=1&'$D(@SCRNARR@("DIVISION",+$G(DIV)))
"RTN","ECXANUT",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXANUT",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXANUT",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXANUT",63,0)
 .;Update totals and store in ^tmp global, add count for each unique 
"RTN","ECXANUT",64,0)
 .;feeder key/delivery location. Under each unique key create a record
"RTN","ECXANUT",65,0)
 .;for each unique combination of in/out code, observation status
"RTN","ECXANUT",66,0)
 .;save it in ^tmp global for later use.
"RTN","ECXANUT",67,0)
 .I REPORT="S" D
"RTN","ECXANUT",68,0)
 ..F I="DIV","DLT","STAT","OBS","PFK" I @I="" S @I="UNKNOWN"
"RTN","ECXANUT",69,0)
 ..;Increment delivery location type (dlt) counter
"RTN","ECXANUT",70,0)
 ..;S ^TMP($J,"ECXDLT",DIV,DLT,STAT,OBS)=$G(^TMP($J,"ECXDLT",DIV,DLT,STAT,OBS))+1
"RTN","ECXANUT",71,0)
 ..S ^TMP($J,DIV,"ECXDLT",DLT,STAT,OBS)=$G(^TMP($J,DIV,"ECXDLT",DLT,STAT,OBS))+1
"RTN","ECXANUT",72,0)
 ..;Increment feeder key (fk) counter 
"RTN","ECXANUT",73,0)
 ..;S ^TMP($J,"ECXFKEY",DIV,PFK,STAT,OBS)=$G(^TMP($J,"ECXFKEY",DIV,PFK,STAT,OBS))+1
"RTN","ECXANUT",74,0)
 ..S ^TMP($J,DIV,"ECXFKEY",PFK,STAT,OBS)=$G(^TMP($J,DIV,"ECXFKEY",PFK,STAT,OBS))+1
"RTN","ECXANUT",75,0)
 .I REPORT="D" D
"RTN","ECXANUT",76,0)
 ..F I="FPD","FPF","PFK","OBS","ENC" I $G(@I)="" S @I="UNKNOWN"
"RTN","ECXANUT",77,0)
 ..F I="DIV","DLDIV","DFL","DLT" I $G(@I)="" S @I="UNK"
"RTN","ECXANUT",78,0)
 ..;Check patient status and screen if necessary
"RTN","ECXANUT",79,0)
 ..Q:STATUS'="B"&(STATUS'=STAT)
"RTN","ECXANUT",80,0)
 ..;Increment fpd, fpf, pfk, obs counter
"RTN","ECXANUT",81,0)
 ..S ^TMP($J,DIV,FPD,FPF,PFK,OBS)=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS))+1
"RTN","ECXANUT",82,0)
 ..;Increment div, dfl, dlt counter
"RTN","ECXANUT",83,0)
 ..S ^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT)=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT))+1
"RTN","ECXANUT",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUT",85,0)
 D PRINT
"RTN","ECXANUT",86,0)
 D AUDIT^ECXKILL
"RTN","ECXANUT",87,0)
 Q
"RTN","ECXANUT",88,0)
 ;
"RTN","ECXANUT",89,0)
PRINT ;print report
"RTN","ECXANUT",90,0)
 N FLAG,PG,LN,KEY,DLT,STAT,OBS,TOTAL,TCNT,CNT
"RTN","ECXANUT",91,0)
 U IO
"RTN","ECXANUT",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUT",93,0)
 S (FLAG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXANUT",94,0)
 I '$D(^TMP($J)) D  Q
"RTN","ECXANUT",95,0)
 .S DIV=0 F  S DIV=$O(@SCRNARR@("DIVISION",DIV)) Q:'DIV  D
"RTN","ECXANUT",96,0)
 ..D HEADER
"RTN","ECXANUT",97,0)
 ..W !
"RTN","ECXANUT",98,0)
 ..W !,"**************************************************"
"RTN","ECXANUT",99,0)
 ..W !,"*  No data available for this patient division.  *"
"RTN","ECXANUT",100,0)
 ..W !,"**************************************************"
"RTN","ECXANUT",101,0)
 I REPORT="S" D
"RTN","ECXANUT",102,0)
 .S DIV="" F  S DIV=$O(^TMP($J,DIV)) Q:DIV']""  D  Q:FLAG
"RTN","ECXANUT",103,0)
 ..D HEADER Q:FLAG
"RTN","ECXANUT",104,0)
 ..S KEY="" F  S KEY=$O(^TMP($J,DIV,KEY)) Q:KEY']""  D  Q:FLAG
"RTN","ECXANUT",105,0)
 ...S PFK="" F  S PFK=$O(^TMP($J,DIV,KEY,PFK)) Q:PFK']""  D  Q:FLAG
"RTN","ECXANUT",106,0)
 ....D SUB Q:FLAG
"RTN","ECXANUT",107,0)
 ....S STAT="" F  S STAT=$O(^TMP($J,DIV,KEY,PFK,STAT)) Q:STAT']""  D  Q:FLAG
"RTN","ECXANUT",108,0)
 .....S OBS="" F  S OBS=$O(^TMP($J,DIV,KEY,PFK,STAT,OBS)) Q:OBS']""  D  Q:FLAG
"RTN","ECXANUT",109,0)
 ......S TOTAL=$P(^TMP($J,DIV,KEY,PFK,STAT,OBS),U)
"RTN","ECXANUT",110,0)
 ......;Print by delivery location type (feeder key)
"RTN","ECXANUT",111,0)
 ......D:($Y+3>IOSL) HEADER,SUB Q:FLAG
"RTN","ECXANUT",112,0)
 ......W !,?1,STAT,?12,$S(OBS="NO":" NO",1:"YES"),?30,TOTAL
"RTN","ECXANUT",113,0)
 ;detail report print
"RTN","ECXANUT",114,0)
 I REPORT="D" D
"RTN","ECXANUT",115,0)
 .S DIV="" F  S DIV=$O(^TMP($J,DIV)) Q:DIV']""  D  Q:FLAG
"RTN","ECXANUT",116,0)
 ..S FPD="" F  S FPD=$O(^TMP($J,DIV,FPD)) Q:FPD']""  D  Q:FLAG
"RTN","ECXANUT",117,0)
 ...S FPF="" F  S FPF=$O(^TMP($J,DIV,FPD,FPF)) Q:FPF']""  D  Q:FLAG
"RTN","ECXANUT",118,0)
 ....S PFK="" F  S PFK=$O(^TMP($J,DIV,FPD,FPF,PFK)) Q:PFK']""  D  Q:FLAG
"RTN","ECXANUT",119,0)
 .....S OBS="" F  S OBS=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS)) Q:OBS']""  D  Q:FLAG
"RTN","ECXANUT",120,0)
 ......S TCNT=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS))
"RTN","ECXANUT",121,0)
 ......D HEADER
"RTN","ECXANUT",122,0)
 ......S ENC="" F  S ENC=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC)) Q:ENC']""  D  Q:FLAG
"RTN","ECXANUT",123,0)
 .......S DLDIV="" F  S DLDIV=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV)) Q:DLDIV']""  D  Q:FLAG
"RTN","ECXANUT",124,0)
 ........S DFL="" F  S DFL=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL)) Q:DFL']""  D  Q:FLAG
"RTN","ECXANUT",125,0)
 .........S DLT="" F  S DLT=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT)) Q:DLT']""  D  Q:FLAG
"RTN","ECXANUT",126,0)
 ..........S CNT=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT))
"RTN","ECXANUT",127,0)
 ..........W !,?1,$E(ENC,1,25),?28,DLDIV,?42,DFL,?60,DLT,?71,CNT
"RTN","ECXANUT",128,0)
 ..........D:($Y+3>IOSL) HEADER Q:FLAG
"RTN","ECXANUT",129,0)
 Q
"RTN","ECXANUT",130,0)
 ;
"RTN","ECXANUT",131,0)
HEADER ;header and page control
"RTN","ECXANUT",132,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXANUT",133,0)
 I $E(IOST)="C" D
"RTN","ECXANUT",134,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXANUT",135,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y FLAG=1
"RTN","ECXANUT",136,0)
 Q:FLAG
"RTN","ECXANUT",137,0)
 S DSSID=$S($G(DIV):$$NNT^XUAF4(DIV),1:"UNKNOWN^^")
"RTN","ECXANUT",138,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXANUT",139,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"_$S(REPORT="S":"  (Summary)",1:"  (Detail)")
"RTN","ECXANUT",140,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXANUT",141,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXANUT",142,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXANUT",143,0)
 W !,"Patient Division: "_$P(DSSID,U)_$S($P(DSSID,U,2)'="":" ("_$P(DSSID,U,2)_")",1:""),?68,$S(REPORT="S":"Page: "_PG,1:"")
"RTN","ECXANUT",144,0)
 ;Detailed report sub-header
"RTN","ECXANUT",145,0)
 Q:'$D(^TMP($J))
"RTN","ECXANUT",146,0)
 I REPORT="D" D
"RTN","ECXANUT",147,0)
 .W !,"Patient Status: "_$S(STATUS="I":"Inpatient",STATUS="O":"Outpatient",1:"Inpatient and Outpatient"),?68,"Page: "_PG
"RTN","ECXANUT",148,0)
 .W !!,"Prod Div: "_FPD_" Prod Fac: "_FPF_" Prod FK: "_PFK_" OBS: "_OBS,?60," TOTAL: ",TCNT
"RTN","ECXANUT",149,0)
 .W !,?1,"Encounter Number",?28,"Del Div",?42,"Del Feed Loc",?60,"Loc Type",?71,"Count"
"RTN","ECXANUT",150,0)
 Q
"RTN","ECXANUT",151,0)
SUB ;Summary report sub-header
"RTN","ECXANUT",152,0)
 I REPORT="S" D
"RTN","ECXANUT",153,0)
 .W !!,"FEEDER KEY: "_PFK
"RTN","ECXANUT",154,0)
 .W !!,"I/O",?12,"OBS",?30,"TOTAL"
"RTN","ECXANUT",155,0)
 Q
"RTN","ECXANUT",156,0)
 ;
"RTN","ECXANUT",157,0)
REPORT() ;Select report type
"RTN","ECXANUT",158,0)
 ;
"RTN","ECXANUT",159,0)
 ;      Output - S = summary
"RTN","ECXANUT",160,0)
 ;               D = detail
"RTN","ECXANUT",161,0)
 ;Init variables
"RTN","ECXANUT",162,0)
 N DIR,DIRUT,DUOUT,X,Y
"RTN","ECXANUT",163,0)
 S DIR(0)="S^S:SUMMARY;D:DETAIL"
"RTN","ECXANUT",164,0)
 S DIR("A")="Select type of report"
"RTN","ECXANUT",165,0)
 S DIR("?",1)="S = Summary"
"RTN","ECXANUT",166,0)
 S DIR("?",2)="D = Detail"
"RTN","ECXANUT",167,0)
 D ^DIR
"RTN","ECXANUT",168,0)
 I $D(DIRUT)!$D(DUOUT) S FLAG=1 Q ""
"RTN","ECXANUT",169,0)
 Q Y
"RTN","ECXANUT",170,0)
 ;
"RTN","ECXANUT",171,0)
STATUS() ;Select patient status for report
"RTN","ECXANUT",172,0)
 ;
"RTN","ECXANUT",173,0)
 ;      Output - I = inpatient
"RTN","ECXANUT",174,0)
 ;               O = outpatient
"RTN","ECXANUT",175,0)
 ;               B = both
"RTN","ECXANUT",176,0)
 ;Init variables
"RTN","ECXANUT",177,0)
 N DIR,DIRUT,DUOUT,X,Y
"RTN","ECXANUT",178,0)
 S DIR(0)="S^I:INPATIENT;O:OUTPATIENT;B:BOTH"
"RTN","ECXANUT",179,0)
 S DIR("A")=" report?"
"RTN","ECXANUT",180,0)
 S DIR("A")="Select patient status for report"
"RTN","ECXANUT",181,0)
 S DIR("?",1)="I = Inpatient"
"RTN","ECXANUT",182,0)
 S DIR("?",2)="O = Outpatient"
"RTN","ECXANUT",183,0)
 S DIR("?",3)="B = Both"
"RTN","ECXANUT",184,0)
 D ^DIR
"RTN","ECXANUT",185,0)
 I $D(DIRUT)!$D(DUOUT) S FLAG=1 Q ""
"RTN","ECXANUT",186,0)
 Q Y
"RTN","ECXDRUG2")
0^3^B17371737^B16714262
"RTN","ECXDRUG2",1,0)
ECXDRUG2 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ; 2/19/08 3:44pm
"RTN","ECXDRUG2",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,84,105,111**;Dec 22, 1997;Build 4
"RTN","ECXDRUG2",3,0)
 ;
"RTN","ECXDRUG2",4,0)
EN ; entry point
"RTN","ECXDRUG2",5,0)
 N ECD,LINE,ECDRG,ECQTY,ECPRC
"RTN","ECXDRUG2",6,0)
 K ^TMP($J)
"RTN","ECXDRUG2",7,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXDRUG2",8,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXDRUG2",9,0)
 D @LINE
"RTN","ECXDRUG2",10,0)
 Q
"RTN","ECXDRUG2",11,0)
 ;
"RTN","ECXDRUG2",12,0)
PRE ; entry point for PRE data
"RTN","ECXDRUG2",13,0)
 ; order through fills, refills and partial refills
"RTN","ECXDRUG2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1
"RTN","ECXDRUG2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXDRUG2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXDRUG2",18,0)
 S ECREF="RF"
"RTN","ECXDRUG2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXDRUG2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXDRUG2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:ECRFL']""  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",22,0)
 ;
"RTN","ECXDRUG2",23,0)
 ;order thru partial fills
"RTN","ECXDRUG2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXDRUG2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",27,0)
 Q
"RTN","ECXDRUG2",28,0)
 ;
"RTN","ECXDRUG2",29,0)
PRE2 ; get Prescription data
"RTN","ECXDRUG2",30,0)
 S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U)
"RTN","ECXDRUG2",31,0)
 I ECRFL>0&(ECREF="RF") D
"RTN","ECXDRUG2",32,0)
 .S ECQTY=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1),ECPRC=^(1.2)
"RTN","ECXDRUG2",33,0)
 I ECRFL>0&(ECREF="P") D
"RTN","ECXDRUG2",34,0)
 .S ECQTY=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04),ECPRC=^(.042)
"RTN","ECXDRUG2",35,0)
 I 'ECRFL S ECQTY=^TMP($J,"ECXDSS",IEN,7),ECPRC=^(17)
"RTN","ECXDRUG2",36,0)
 D TEST
"RTN","ECXDRUG2",37,0)
 Q
"RTN","ECXDRUG2",38,0)
 ;
"RTN","ECXDRUG2",39,0)
IVP ; entry point for IVP data
"RTN","ECXDRUG2",40,0)
 N ON,DFN,DA,SA
"RTN","ECXDRUG2",41,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECXERR  Q:ECD>ECED  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  Q:ECXERR  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D
"RTN","ECXDRUG2",42,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D
"RTN","ECXDRUG2",43,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXDRUG2",44,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXDRUG2",45,0)
 ..I SA'="" D
"RTN","ECXDRUG2",46,0)
 ...I '$D(^TMP($J,SA,ECDRG)) S ^(ECDRG)=0,$P(^(ECDRG),U,2)=$P(EC,U,12)
"RTN","ECXDRUG2",47,0)
 ...S $P(^TMP($J,SA,ECDRG),U)=$P(^TMP($J,SA,ECDRG),U)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXDRUG2",48,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXDRUG2",49,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  D
"RTN","ECXDRUG2",50,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U),ECPRC=$P(^(ECDRG),U,2)
"RTN","ECXDRUG2",51,0)
 ..D TEST
"RTN","ECXDRUG2",52,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXDRUG2",53,0)
 Q
"RTN","ECXDRUG2",54,0)
 ;
"RTN","ECXDRUG2",55,0)
UDP ; entry point for UDP data
"RTN","ECXDRUG2",56,0)
 N ECXJ,ECDATA
"RTN","ECXDRUG2",57,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXDRUG2",58,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXDRUG2",59,0)
 ..S DATA=^ECX(728.904,ECXJ,0)
"RTN","ECXDRUG2",60,0)
 ..S ECDRG=$P(DATA,U,4),ECQTY=$P(DATA,U,5),ECCOST=$P(DATA,U,8)
"RTN","ECXDRUG2",61,0)
 ..S ECPRC=ECCOST/ECQTY
"RTN","ECXDRUG2",62,0)
 ..D TEST
"RTN","ECXDRUG2",63,0)
 Q
"RTN","ECXDRUG2",64,0)
 ;
"RTN","ECXDRUG2",65,0)
TEST ; retrieve NDC and PSNDF VA Product Code Entry and test for missing NDC or VA Prod Code
"RTN","ECXDRUG2",66,0)
 N ECTYPE,ECNDC,ECZERO,K,ECPROD,ECFCHAR,ECSTOCK,ECXPHA
"RTN","ECXDRUG2",67,0)
 S ECTYPE=0,ECXPHA=""
"RTN","ECXDRUG2",68,0)
 ; call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXDRUG2",69,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXDRUG2",70,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXDRUG2",71,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXDRUG2",72,0)
 S ECZERO=1,ECSTOCK=0 F K=1:1:$L(ECNDC) D  Q:'ECZERO!ECSTOCK
"RTN","ECXDRUG2",73,0)
 .S ECFCHAR=$E(ECNDC,K)
"RTN","ECXDRUG2",74,0)
 .I ECFCHAR="S" S ECSTOCK=1 Q
"RTN","ECXDRUG2",75,0)
 .I ECFCHAR'=0 S ECZERO=0 Q
"RTN","ECXDRUG2",76,0)
 I ECZERO!ECSTOCK!(ECNDC["N/A") S ECTYPE=2
"RTN","ECXDRUG2",77,0)
 S ECPROD=$P(ECXPHA,U,6),ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXDRUG2",78,0)
 I ECTYPE,'ECPROD S ECTYPE=3
"RTN","ECXDRUG2",79,0)
 I 'ECTYPE,'ECPROD S ECTYPE=1
"RTN","ECXDRUG2",80,0)
 I ECTYPE D FILE
"RTN","ECXDRUG2",81,0)
 Q
"RTN","ECXDRUG2",82,0)
 ;
"RTN","ECXDRUG2",83,0)
FILE ; file record
"RTN","ECXDRUG2",84,0)
 N ECFKEY,ECGNAME,STATS,ECCOUNT,QTY,COST,ECCOST
"RTN","ECXDRUG2",85,0)
 ; create new record if none exists for this drug
"RTN","ECXDRUG2",86,0)
 I '$D(^TMP($J,ECDRG)) D
"RTN","ECXDRUG2",87,0)
 .S ECFKEY=ECPROD_ECNDC
"RTN","ECXDRUG2",88,0)
 .S ECGNAME=$P($G(^PSDRUG(ECDRG,0)),U)
"RTN","ECXDRUG2",89,0)
 .S ^TMP($J,ECDRG)=ECGNAME_U_ECFKEY_U_ECPRC_U_ECTYPE
"RTN","ECXDRUG2",90,0)
 .S ^TMP($J,ECDRG,0)="0^0^0"
"RTN","ECXDRUG2",91,0)
 ; add stats to record
"RTN","ECXDRUG2",92,0)
 S STATS=^TMP($J,ECDRG,0)
"RTN","ECXDRUG2",93,0)
 S ECCOUNT=$P(STATS,U),QTY=$P(STATS,U,2),COST=$P(STATS,U,3)
"RTN","ECXDRUG2",94,0)
 S ECCOUNT=ECCOUNT+1
"RTN","ECXDRUG2",95,0)
 S ECCOST=ECQTY*ECPRC
"RTN","ECXDRUG2",96,0)
 S ECQTY=ECQTY+QTY,ECCOST=ECCOST+COST
"RTN","ECXDRUG2",97,0)
 S ^TMP($J,ECDRG,0)=ECCOUNT_U_ECQTY_U_ECCOST
"RTN","ECXDRUG2",98,0)
 Q
"RTN","ECXDRUG2",99,0)
 ;
"RTN","ECXDRUG2",100,0)
EXIT S ECXERR=1 Q
"RTN","ECXUPRO")
0^1^B23782854^B23072481
"RTN","ECXUPRO",1,0)
ECXUPRO ;ALB/TJL-Prosthetic Extract Unusual Cost Report ; 1/08/08 1:00pm
"RTN","ECXUPRO",2,0)
 ;;3.0;DSS EXTRACTS;**49,111**;July 1, 2003;Build 4
"RTN","ECXUPRO",3,0)
 ;
"RTN","ECXUPRO",4,0)
EN ; entry point
"RTN","ECXUPRO",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUPRO",6,0)
 N ECINST,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUPRO",7,0)
 S QFLG=0
"RTN","ECXUPRO",8,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXUPRO",9,0)
 ; get today's date
"RTN","ECXUPRO",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUPRO",11,0)
 D BEGIN Q:QFLG
"RTN","ECXUPRO",12,0)
 D SELECT Q:QFLG
"RTN","ECXUPRO",13,0)
 S ECXDESC="Prosthetic Extract Unusual Cost Report"
"RTN","ECXUPRO",14,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUPRO",15,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUPRO",16,0)
 D EN^XUTMDEVQ("PROCESS^ECXUPRO",ECXDESC,.ECXSAVE)
"RTN","ECXUPRO",17,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUPRO",18,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUPRO",19,0)
 D HOME^%ZIS
"RTN","ECXUPRO",20,0)
 D AUDIT^ECXKILL
"RTN","ECXUPRO",21,0)
 Q
"RTN","ECXUPRO",22,0)
 ;
"RTN","ECXUPRO",23,0)
BEGIN ; display report description
"RTN","ECXUPRO",24,0)
 W @IOF
"RTN","ECXUPRO",25,0)
 W !,"This report prints a listing of unusual costs that would be"
"RTN","ECXUPRO",26,0)
 W !,"generated by the Prosthetic extract (PRO) as determined by a"
"RTN","ECXUPRO",27,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUPRO",28,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUPRO",29,0)
 W !,"necessary, any costs determined to be erroneous."
"RTN","ECXUPRO",30,0)
 W !!,"Unusual costs are those where the Cost of Transaction is"
"RTN","ECXUPRO",31,0)
 W !,"greater than the threshold value."
"RTN","ECXUPRO",32,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUPRO",33,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUPRO",34,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUPRO",35,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUPRO",36,0)
 W !,"can be run as needed."
"RTN","ECXUPRO",37,0)
 W !!,"The report is sorted by Feeder Key, then by descending Cost of"
"RTN","ECXUPRO",38,0)
 W !,"Transaction and SSN."
"RTN","ECXUPRO",39,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUPRO",40,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUPRO",41,0)
 Q
"RTN","ECXUPRO",42,0)
 ;
"RTN","ECXUPRO",43,0)
SELECT ; user inputs for threshold cost and date range
"RTN","ECXUPRO",44,0)
 N DONE,OUT
"RTN","ECXUPRO",45,0)
 ; allow user to set threshold cost
"RTN","ECXUPRO",46,0)
 S ECTHLD=500
"RTN","ECXUPRO",47,0)
 W !!,"The default threshold cost for the Prosthetic extract is $"_ECTHLD_".00."
"RTN","ECXUPRO",48,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUPRO",49,0)
 I Y D
"RTN","ECXUPRO",50,0)
 .W !!,"Cost > threshold"
"RTN","ECXUPRO",51,0)
 .S DIR(0)="N^0:999999",DIR("A")="Enter the new threshold cost" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUPRO",52,0)
 ; get date range from user
"RTN","ECXUPRO",53,0)
 W !!,"Enter the date range for which you would like to scan the Prosthetic",!,"Extract records.",!
"RTN","ECXUPRO",54,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUPRO",55,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",56,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",57,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUPRO",58,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUPRO",59,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",60,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",61,0)
 .I Y<ECSD D  Q
"RTN","ECXUPRO",62,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUPRO",63,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",64,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUPRO",65,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUPRO",66,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",67,0)
 .S ECED=Y
"RTN","ECXUPRO",68,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUPRO",69,0)
 .S DONE=1
"RTN","ECXUPRO",70,0)
 Q
"RTN","ECXUPRO",71,0)
 ;
"RTN","ECXUPRO",72,0)
PROCESS ; entry point for queued report
"RTN","ECXUPRO",73,0)
 S ZTREQ="@"
"RTN","ECXUPRO",74,0)
 S ECXERR=0 D EN^ECXUPRO1 Q:ECXERR
"RTN","ECXUPRO",75,0)
 S QFLG=0 D PRINT
"RTN","ECXUPRO",76,0)
 Q
"RTN","ECXUPRO",77,0)
 ;
"RTN","ECXUPRO",78,0)
PRINT ; process temp file and print report
"RTN","ECXUPRO",79,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,COST,SSN,REC,SDAY
"RTN","ECXUPRO",80,0)
 U IO
"RTN","ECXUPRO",81,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUPRO",82,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXUPRO",83,0)
 D HEADER Q:QFLG
"RTN","ECXUPRO",84,0)
 S COUNT=0,FKEY=""
"RTN","ECXUPRO",85,0)
 F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXUPRO",86,0)
 .S COST="" F  S COST=$O(^TMP($J,FKEY,COST)) Q:COST=""!QFLG  D
"RTN","ECXUPRO",87,0)
 .. S SDAY="" F  S SDAY=$O(^TMP($J,FKEY,COST,SDAY)) Q:SDAY=""!QFLG  D
"RTN","ECXUPRO",88,0)
 ...S SSN="" F  S SSN=$O(^TMP($J,FKEY,COST,SDAY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXUPRO",89,0)
 ....S COUNT=COUNT+1
"RTN","ECXUPRO",90,0)
 ....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUPRO",91,0)
 ....W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?39,$P(REC,U,4),?70,$P(REC,U,5),?93,$$RJ^XLFSTR($P(REC,U,6),8),?110,$$RJ^XLFSTR($P(REC,U,7),11)
"RTN","ECXUPRO",92,0)
 Q:QFLG
"RTN","ECXUPRO",93,0)
 I COUNT=0 W !!,?8,"No unusual costs to report for this extract"
"RTN","ECXUPRO",94,0)
CLOSE ;
"RTN","ECXUPRO",95,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUPRO",96,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",97,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUPRO",98,0)
 Q
"RTN","ECXUPRO",99,0)
 ;
"RTN","ECXUPRO",100,0)
HEADER ;header and page control
"RTN","ECXUPRO",101,0)
 N SS,JJ
"RTN","ECXUPRO",102,0)
 I $E(IOST)="C" D
"RTN","ECXUPRO",103,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",104,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUPRO",105,0)
 Q:QFLG
"RTN","ECXUPRO",106,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUPRO",107,0)
 W !,"Prosthetic Extract Unusual Cost Report",?124,"Page: "_PG
"RTN","ECXUPRO",108,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUPRO",109,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUPRO",110,0)
 W !!,?21,"Date of",?43,"PCE CPT/",?112,"Cost of"
"RTN","ECXUPRO",111,0)
 W !,"Name",?11,"SSN",?21,"Service",?36,"HCPCS CODE & Modifiers"
"RTN","ECXUPRO",112,0)
 W ?72,"Feeder Key",?93,"Quantity",?110,"Transaction"
"RTN","ECXUPRO",113,0)
 W !,LN,!
"RTN","ECXUPRO",114,0)
 Q
"RTN","ECXUPRO",115,0)
 ;
"RTN","ECXUPRO1")
0^2^B6892004^B6816358
"RTN","ECXUPRO1",1,0)
ECXUPRO1 ;ALB/TJL-Prosthetics Extract Unusual Cost Report; 01/08/08 2:49pm
"RTN","ECXUPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**49,111**;Jul 2, 2003;Build 4
"RTN","ECXUPRO1",3,0)
 ;
"RTN","ECXUPRO1",4,0)
EN ; entry point
"RTN","ECXUPRO1",5,0)
 N COUNT,ECDFN,ECD,PROCOST
"RTN","ECXUPRO1",6,0)
 K ^TMP($J)
"RTN","ECXUPRO1",7,0)
 S COUNT=0
"RTN","ECXUPRO1",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXUPRO1",9,0)
 D GETRECS
"RTN","ECXUPRO1",10,0)
 Q
"RTN","ECXUPRO1",11,0)
 ;
"RTN","ECXUPRO1",12,0)
GETRECS ; get records that are over the threshold
"RTN","ECXUPRO1",13,0)
 N PDA,SUBDA,PROLB,PRO0,PROFORM
"RTN","ECXUPRO1",14,0)
 N DIC,DR,DA,DIQ
"RTN","ECXUPRO1",15,0)
 S QFLG=0,ECXLNE=1,ECXED1=ECED+.9999
"RTN","ECXUPRO1",16,0)
 S PDA=ECSD1
"RTN","ECXUPRO1",17,0)
 F  S PDA=$O(^RMPR(660,"CT",PDA)) Q:(PDA>ECXED1)!('PDA)!(QFLG=1)  D
"RTN","ECXUPRO1",18,0)
 .S SUBDA=0
"RTN","ECXUPRO1",19,0)
 .F  S SUBDA=$O(^RMPR(660,"CT",PDA,SUBDA))  Q:('SUBDA)!(QFLG=1)  D
"RTN","ECXUPRO1",20,0)
 ..Q:'$D(^RMPR(660,SUBDA,0))
"RTN","ECXUPRO1",21,0)
 ..S PRO0=^RMPR(660,SUBDA,0)
"RTN","ECXUPRO1",22,0)
 ..S PROLB=$G(^RMPR(660,SUBDA,"LB"))
"RTN","ECXUPRO1",23,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=SUBDA,DIQ(0)="EI"
"RTN","ECXUPRO1",24,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXUPRO1",25,0)
 ..S ECXDFN=$G(ECXP(660,SUBDA,.02,"I"))
"RTN","ECXUPRO1",26,0)
 ..S PROFORM=$G(ECXP(660,SUBDA,11,"E"))_U_$G(ECXP(660,SUBDA,11,"I"))
"RTN","ECXUPRO1",27,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,PDA)
"RTN","ECXUPRO1",28,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,SUBDA,PRO0,PROLB,ECINST,PROFORM)
"RTN","ECXUPRO1",29,0)
 ..S PROCOST=$P(PRO0,U,16)
"RTN","ECXUPRO1",30,0)
 ..S:PROFORM["-3" PROCOST=$P(PROLB,U,9)
"RTN","ECXUPRO1",31,0)
 ..S:($P(PROFORM,U,2)=11)!($P(PROFORM,U,2)=12) PROCOST=0
"RTN","ECXUPRO1",32,0)
 ..S:PROCOST="" PROCOST=0
"RTN","ECXUPRO1",33,0)
 ..S PROCOST=(PROCOST+.5)\1
"RTN","ECXUPRO1",34,0)
 ..S:PROCOST>999999 PROCOST=999999
"RTN","ECXUPRO1",35,0)
 ..I PROCOST>ECTHLD D FILE
"RTN","ECXUPRO1",36,0)
 Q
"RTN","ECXUPRO1",37,0)
FILE ; put records in temp file to print later
"RTN","ECXUPRO1",38,0)
 N OK,PROPAT,PRONAME,PROSSN,CPTCODE,ECXFEKEY,PROQTY
"RTN","ECXUPRO1",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.PROPAT)
"RTN","ECXUPRO1",40,0)
 I 'OK Q
"RTN","ECXUPRO1",41,0)
 S PRONAME=PROPAT("NAME")
"RTN","ECXUPRO1",42,0)
 S PROSSN=PROPAT("SSN")
"RTN","ECXUPRO1",43,0)
 S PRODAY=$E(PDA,4,5)_"/"_$E(PDA,6,7)_"/"_$E(PDA,2,3)
"RTN","ECXUPRO1",44,0)
 S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXUPRO1",45,0)
 I PROFORM["-3" F ECXLAB="LAB","ORD" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXUPRO1",46,0)
 I PROFORM'["-3" S ECXLAB="NONL" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXUPRO1",47,0)
 S PROQTY=$P(PRO0,U,7)
"RTN","ECXUPRO1",48,0)
 S:(+PROQTY=0) PROQTY=1
"RTN","ECXUPRO1",49,0)
 S PROQTY=$$RJ^XLFSTR(PROQTY,8,0)
"RTN","ECXUPRO1",50,0)
 S ^TMP($J,ECXFEKEY,-PROQTY,SUBDA,PROSSN)=PRONAME_U_PROSSN_U_PRODAY_U_ECXHCPCS_U_ECXFEKEY_U_PROQTY_U_"$"_$FNUMBER(PROCOST,",",2)
"RTN","ECXUPRO1",51,0)
 S COUNT=COUNT+1
"RTN","ECXUPRO1",52,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUPRO1",53,0)
 Q
"RTN","ECXUPRO1",54,0)
EXIT S ECXERR=1 Q
"RTN","ECXUSUR1")
0^4^B13707004^B13707019
"RTN","ECXUSUR1",1,0)
ECXUSUR1 ;ALB/TJL-Surgery Extract Unusual Volume Report ; 1/8/08 9:58am
"RTN","ECXUSUR1",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,105,111**;July 1, 2003;Build 4
"RTN","ECXUSUR1",3,0)
EN ;
"RTN","ECXUSUR1",4,0)
 N ECHEAD,COUNT,TIMEDIF,ECXPROC
"RTN","ECXUSUR1",5,0)
 S ECHEAD="SUR"
"RTN","ECXUSUR1",6,0)
 S (COUNT,QFLG)=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXUSUR1",7,0)
 F  S ECD=$O(^SRF("AC",ECD)) Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXUSUR1",8,0)
 .S ECD0=0
"RTN","ECXUSUR1",9,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXUSUR1",10,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXUSUR1",11,0)
 Q
"RTN","ECXUSUR1",12,0)
 ;
"RTN","ECXUSUR1",13,0)
STUFF ;gather data
"RTN","ECXUSUR1",14,0)
 N J,DATA1,DATA2,DATAOP,ECXNONL,ECXSTOP
"RTN","ECXUSUR1",15,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXUSUR1",16,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXUSUR1",17,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXUSUR1",18,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXUSUR1",19,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXUSUR1",20,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXUSUR1",21,0)
 S DATAPA=$S($D(^SRF(ECD0,1.1)):^(1.1),1:"")
"RTN","ECXUSUR1",22,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXUSUR1",23,0)
 ;get data
"RTN","ECXUSUR1",24,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXUSUR1",25,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXUSUR1",26,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXUSUR1",27,0)
 ;look for non-OR
"RTN","ECXUSUR1",28,0)
 S (ECNT,ECNL,ECXNONL,ECXSTOP)=""
"RTN","ECXUSUR1",29,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXUSUR1",30,0)
 .S A1=$P(ECNO,U,5)
"RTN","ECXUSUR1",31,0)
 .S A2=$P(ECNO,U,4)
"RTN","ECXUSUR1",32,0)
 .S TIME="##"
"RTN","ECXUSUR1",33,0)
 .D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXUSUR1",34,0)
 .S ECXNONL=+$P(ECNO,U,2)
"RTN","ECXUSUR1",35,0)
 .S ECNL=$P($G(^ECX(728.44,ECXNONL,0)),U,9)
"RTN","ECXUSUR1",36,0)
 .I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXUSUR1",37,0)
 .;
"RTN","ECXUSUR1",38,0)
 .; Get DSS Stop Code to use in encounter number
"RTN","ECXUSUR1",39,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXUSUR1",40,0)
 ;
"RTN","ECXUSUR1",41,0)
 ;retrieving anesthesia times first, then operation and patient
"RTN","ECXUSUR1",42,0)
 ;times, then storing in following order:
"RTN","ECXUSUR1",43,0)
 ;ecode0="recovery room time^pt hold area time^or clean time^patient
"RTN","ECXUSUR1",44,0)
 ;time^operation time^anesthesia time
"RTN","ECXUSUR1",45,0)
 S ECODE0=""
"RTN","ECXUSUR1",46,0)
 F J="1,4","2,3","10,12","13,14","15,10" D
"RTN","ECXUSUR1",47,0)
 .S A2=$P(DATA2,U,$P(J,","))
"RTN","ECXUSUR1",48,0)
 .S A1=$P(DATA2,U,$P(J,",",2))
"RTN","ECXUSUR1",49,0)
 .S TIME="##"
"RTN","ECXUSUR1",50,0)
 .I (A1&A2) D TIMEDIF(A1,A2) D
"RTN","ECXUSUR1",51,0)
 ..I +J'=2 D TIME
"RTN","ECXUSUR1",52,0)
 ..I +J=2 D  ;-Operation Time
"RTN","ECXUSUR1",53,0)
 ...S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXUSUR1",54,0)
 ...;I TIME<0 S TIME="###"
"RTN","ECXUSUR1",55,0)
 .S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",56,0)
 ;
"RTN","ECXUSUR1",57,0)
 ;retrieve recovery room (PACU) time
"RTN","ECXUSUR1",58,0)
 S A2=$P($G(DATAPA),U,7)
"RTN","ECXUSUR1",59,0)
 S A1=$P($G(DATAPA),U,8)
"RTN","ECXUSUR1",60,0)
 S TIME="##"
"RTN","ECXUSUR1",61,0)
 I (A1&A2) D TIME
"RTN","ECXUSUR1",62,0)
 S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",63,0)
 ;
"RTN","ECXUSUR1",64,0)
 I ECNL]"" S $P(ECODE0,U,2)=ECNT
"RTN","ECXUSUR1",65,0)
 ;
"RTN","ECXUSUR1",66,0)
 ;- Was surgery cancelled/aborted
"RTN","ECXUSUR1",67,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXUSUR1",68,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXUSUR1",69,0)
 ;
"RTN","ECXUSUR1",70,0)
 I ECXFLAG D FILE  Q
"RTN","ECXUSUR1",71,0)
 N PIECE,FILE
"RTN","ECXUSUR1",72,0)
 S FILE="NO"
"RTN","ECXUSUR1",73,0)
 F PIECE=1,2,3,4,5,6 D
"RTN","ECXUSUR1",74,0)
 . I $P(ECODE0,U,PIECE)>ECTHLD S FILE="YES"
"RTN","ECXUSUR1",75,0)
 . I $P(ECODE0,U,PIECE)<0 S FILE="YES"
"RTN","ECXUSUR1",76,0)
 ;
"RTN","ECXUSUR1",77,0)
 I FILE="YES" D FILE Q:ECXERR
"RTN","ECXUSUR1",78,0)
 Q
"RTN","ECXUSUR1",79,0)
 ;
"RTN","ECXUSUR1",80,0)
FILE ; Store unusual records for display later
"RTN","ECXUSUR1",81,0)
 N OK,SURPAT,SURNAME,SURSSN,SURDT,VOL
"RTN","ECXUSUR1",82,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.SURPAT)
"RTN","ECXUSUR1",83,0)
 I 'OK Q
"RTN","ECXUSUR1",84,0)
 S SURNAME=SURPAT("NAME")
"RTN","ECXUSUR1",85,0)
 S SURSSN=SURPAT("SSN")
"RTN","ECXUSUR1",86,0)
 S SURDT=$E(ECXDATE,4,5)_"/"_$E(ECXDATE,6,7)_"/"_$E(ECXDATE,2,3)
"RTN","ECXUSUR1",87,0)
 ;
"RTN","ECXUSUR1",88,0)
 ; Observation Patient Indicator (yes/no)
"RTN","ECXUSUR1",89,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXUSUR1",90,0)
 ;
"RTN","ECXUSUR1",91,0)
 ; Principal Procedure
"RTN","ECXUSUR1",92,0)
 S ECXPROC=$E($P(DATAOP,U),1,15)
"RTN","ECXUSUR1",93,0)
 ;
"RTN","ECXUSUR1",94,0)
 ; If no encounter number don't file record
"RTN","ECXUSUR1",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXUSUR1",96,0)
 ;
"RTN","ECXUSUR1",97,0)
 S VOL=$P(ECODE0,U)
"RTN","ECXUSUR1",98,0)
 I $P(ECODE0,U,2)>VOL S VOL=$P(ECODE0,U,2)
"RTN","ECXUSUR1",99,0)
 I $P(ECODE0,U,3)>VOL S VOL=$P(ECODE0,U,3)
"RTN","ECXUSUR1",100,0)
 S ^TMP($J,-VOL,-ECD0)=SURNAME_U_SURSSN_U_SURDT_U_ECD0_U_ECXENC_U_ECODE0_U_ECXPROC_U_ECCAN
"RTN","ECXUSUR1",101,0)
 S COUNT=COUNT+1
"RTN","ECXUSUR1",102,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUSUR1",103,0)
 Q
"RTN","ECXUSUR1",104,0)
 ;
"RTN","ECXUSUR1",105,0)
TIME ; given date/time get increment
"RTN","ECXUSUR1",106,0)
 N CON
"RTN","ECXUSUR1",107,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXUSUR1",108,0)
 D TIMEDIF(A1,A2)
"RTN","ECXUSUR1",109,0)
 I 'CON D
"RTN","ECXUSUR1",110,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXUSUR1",111,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXUSUR1",112,0)
 I CON D
"RTN","ECXUSUR1",113,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXUSUR1",114,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXUSUR1",115,0)
 ;S:TIME<0 TIME="###"
"RTN","ECXUSUR1",116,0)
 Q
"RTN","ECXUSUR1",117,0)
 ;
"RTN","ECXUSUR1",118,0)
TIMEDIF(START,FINISH) ; Set values to be compared, in seconds
"RTN","ECXUSUR1",119,0)
 ;
"RTN","ECXUSUR1",120,0)
 S TIMEDIF=$$FMDIFF^XLFDT(START,FINISH,2)/900
"RTN","ECXUSUR1",121,0)
 I (TIMEDIF>0)&(TIMEDIF<.5) S TIMEDIF=.5
"RTN","ECXUSUR1",122,0)
 Q
"RTN","ECXUSUR1",123,0)
 ;
"RTN","ECXUSUR1",124,0)
EXIT S ECXERR=1 Q
"VER")
8.0^22.0
"BLD",7494,6)
^100
**END**
**END**
