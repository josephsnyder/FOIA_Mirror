Released ECX*3*148 SEQ #133
Extracted from mail message
**KIDS**:ECX*3.0*148^

**INSTALL NAME**
ECX*3.0*148
"BLD",8285,0)
ECX*3.0*148^DSS EXTRACTS^0^3131114^y
"BLD",8285,4,0)
^9.64PA^^
"BLD",8285,6.3)
3
"BLD",8285,"ABPKG")
n
"BLD",8285,"KRN",0)
^9.67PA^779.2^20
"BLD",8285,"KRN",.4,0)
.4
"BLD",8285,"KRN",.401,0)
.401
"BLD",8285,"KRN",.402,0)
.402
"BLD",8285,"KRN",.403,0)
.403
"BLD",8285,"KRN",.5,0)
.5
"BLD",8285,"KRN",.84,0)
.84
"BLD",8285,"KRN",3.6,0)
3.6
"BLD",8285,"KRN",3.8,0)
3.8
"BLD",8285,"KRN",9.2,0)
9.2
"BLD",8285,"KRN",9.8,0)
9.8
"BLD",8285,"KRN",9.8,"NM",0)
^9.68A^10^9
"BLD",8285,"KRN",9.8,"NM",1,0)
ECXAMTL^^0^B32177564
"BLD",8285,"KRN",9.8,"NM",2,0)
ECXLARPT^^0^B29347556
"BLD",8285,"KRN",9.8,"NM",3,0)
ECXUCBOC^^0^B66849120
"BLD",8285,"KRN",9.8,"NM",4,0)
ECXUCPT^^0^B3005384
"BLD",8285,"KRN",9.8,"NM",5,0)
ECXUDRF^^0^B82697
"BLD",8285,"KRN",9.8,"NM",6,0)
ECXUEC^^0^B48196617
"BLD",8285,"KRN",9.8,"NM",7,0)
ECXUPRO^^0^B27534272
"BLD",8285,"KRN",9.8,"NM",8,0)
ECXUSUR^^0^B28806381
"BLD",8285,"KRN",9.8,"NM",10,0)
ECXBCM^^0^B89945674
"BLD",8285,"KRN",9.8,"NM","B","ECXAMTL",1)

"BLD",8285,"KRN",9.8,"NM","B","ECXBCM",10)

"BLD",8285,"KRN",9.8,"NM","B","ECXLARPT",2)

"BLD",8285,"KRN",9.8,"NM","B","ECXUCBOC",3)

"BLD",8285,"KRN",9.8,"NM","B","ECXUCPT",4)

"BLD",8285,"KRN",9.8,"NM","B","ECXUDRF",5)

"BLD",8285,"KRN",9.8,"NM","B","ECXUEC",6)

"BLD",8285,"KRN",9.8,"NM","B","ECXUPRO",7)

"BLD",8285,"KRN",9.8,"NM","B","ECXUSUR",8)

"BLD",8285,"KRN",19,0)
19
"BLD",8285,"KRN",19.1,0)
19.1
"BLD",8285,"KRN",101,0)
101
"BLD",8285,"KRN",409.61,0)
409.61
"BLD",8285,"KRN",771,0)
771
"BLD",8285,"KRN",779.2,0)
779.2
"BLD",8285,"KRN",870,0)
870
"BLD",8285,"KRN",8989.51,0)
8989.51
"BLD",8285,"KRN",8989.52,0)
8989.52
"BLD",8285,"KRN",8994,0)
8994
"BLD",8285,"KRN","B",.4,.4)

"BLD",8285,"KRN","B",.401,.401)

"BLD",8285,"KRN","B",.402,.402)

"BLD",8285,"KRN","B",.403,.403)

"BLD",8285,"KRN","B",.5,.5)

"BLD",8285,"KRN","B",.84,.84)

"BLD",8285,"KRN","B",3.6,3.6)

"BLD",8285,"KRN","B",3.8,3.8)

"BLD",8285,"KRN","B",9.2,9.2)

"BLD",8285,"KRN","B",9.8,9.8)

"BLD",8285,"KRN","B",19,19)

"BLD",8285,"KRN","B",19.1,19.1)

"BLD",8285,"KRN","B",101,101)

"BLD",8285,"KRN","B",409.61,409.61)

"BLD",8285,"KRN","B",771,771)

"BLD",8285,"KRN","B",779.2,779.2)

"BLD",8285,"KRN","B",870,870)

"BLD",8285,"KRN","B",8989.51,8989.51)

"BLD",8285,"KRN","B",8989.52,8989.52)

"BLD",8285,"KRN","B",8994,8994)

"BLD",8285,"QUES",0)
^9.62^^
"BLD",8285,"REQB",0)
^9.611^6^4
"BLD",8285,"REQB",1,0)
ECX*3.0*44^1
"BLD",8285,"REQB",2,0)
ECX*3.0*123^1
"BLD",8285,"REQB",5,0)
ECX*3.0*144^1
"BLD",8285,"REQB",6,0)
ECX*3.0*105^1
"BLD",8285,"REQB","B","ECX*3.0*105",6)

"BLD",8285,"REQB","B","ECX*3.0*123",2)

"BLD",8285,"REQB","B","ECX*3.0*144",5)

"BLD",8285,"REQB","B","ECX*3.0*44",1)

"MBREQ")
0
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
148^3131114
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","ECXAMTL")
0^1^B32177564^B32177564
"RTN","ECXAMTL",1,0)
ECXAMTL ;ALB/JAM - MTL Extract Audit Report; May 24, 1999 ;10/22/13  17:31
"RTN","ECXAMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,44,148**;Dec 22, 1997;Build 3
"RTN","ECXAMTL",3,0)
EN ;entry point for MTL extract audit report
"RTN","ECXAMTL",4,0)
 N %X,%Y
"RTN","ECXAMTL",5,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAMTL",6,0)
 S ECXERR=0
"RTN","ECXAMTL",7,0)
 S ECXHEAD="MTL",ECXAUD=0
"RTN","ECXAMTL",8,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAMTL",9,0)
 ;select extract
"RTN","ECXAMTL",10,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD) I ECXERR D  Q
"RTN","ECXAMTL",11,0)
 . K ECXHEAD,ECXAUD,ECXERR
"RTN","ECXAMTL",12,0)
 ;get facility/division
"RTN","ECXAMTL",13,0)
 S ECXALL=1
"RTN","ECXAMTL",14,0)
 D MTL^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR) I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXAMTL",15,0)
 ;select output device and queue report if requested
"RTN","ECXAMTL",16,0)
 S ECXPGM="PROCESS^ECXAMTL",ECXDESC="MTL Extract Audit Report"
"RTN","ECXAMTL",17,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")=""
"RTN","ECXAMTL",18,0)
 S ECXSAVE("ECXARRAY(")="" W !
"RTN","ECXAMTL",19,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAMTL",20,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAMTL",21,0)
 . W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMTL",22,0)
 . D AUDIT^ECXKILL
"RTN","ECXAMTL",23,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAMTL",24,0)
 . K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAMTL",25,0)
 . D PROCESS^ECXAMTL
"RTN","ECXAMTL",26,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAMTL",27,0)
 D HOME^%ZIS
"RTN","ECXAMTL",28,0)
 D AUDIT^ECXKILL
"RTN","ECXAMTL",29,0)
 Q
"RTN","ECXAMTL",30,0)
PROCESS ;process data in file #727.812
"RTN","ECXAMTL",31,0)
 N DAY,MTLDAT,MTLDAT1,SSN,NAME,EXN,IEN,ASI,SPC,TSTNAM,PROV,DATND,TSTSC
"RTN","ECXAMTL",32,0)
 N NODE
"RTN","ECXAMTL",33,0)
 K ^TMP($J,"ECXMTL") S EXN=ECXARRAY("EXTRACT")
"RTN","ECXAMTL",34,0)
 ;set start and end date in interal format
"RTN","ECXAMTL",35,0)
 S X=ECXARRAY("START") S %DT="" D ^%DT S ECXSTART=Y
"RTN","ECXAMTL",36,0)
 S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMTL",37,0)
 ;get run date in external format
"RTN","ECXAMTL",38,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAMTL",39,0)
 ;get records for specified date range within extract
"RTN","ECXAMTL",40,0)
 S IEN=0 F  S IEN=$O(^ECX(727.812,"AC",EXN,IEN)) Q:'IEN  D
"RTN","ECXAMTL",41,0)
 . S MTLDAT=^ECX(727.812,IEN,0),MTLDAT1=$G(^ECX(727.812,IEN,1))
"RTN","ECXAMTL",42,0)
 . ;convert date to fileman internal format
"RTN","ECXAMTL",43,0)
 . S DAY=$P(MTLDAT,U,9),$E(DAY,1,2)=$E(DAY,1,2)-17 Q:$L(DAY)<7
"RTN","ECXAMTL",44,0)
 . I DAY<ECXSTART!(DAY>ECXEND) Q
"RTN","ECXAMTL",45,0)
 . S SSN=$P(MTLDAT,U,6),NAME=$P(MTLDAT,U,7),TSTNAM=$P(MTLDAT,U,21)
"RTN","ECXAMTL",46,0)
 . S PROV=$P(MTLDAT,U,18)
"RTN","ECXAMTL",47,0)
 . S:PROV'="" PROV=$$GET1^DIQ(200,$E(PROV,2,999),.01,"I")
"RTN","ECXAMTL",48,0)
 . S TSTSC=$P(MTLDAT,U,25),ASI=$P(MTLDAT1,U,5),SPC=$P(MTLDAT1,U,6)
"RTN","ECXAMTL",49,0)
 . ;determine next level for ^TMP($J,"ECXMTL",
"RTN","ECXAMTL",50,0)
 . Q:TSTNAM=""  S NODE=TSTNAM I TSTNAM'="ASI",TSTNAM'="GAF" S NODE="PI"
"RTN","ECXAMTL",51,0)
 . ;data to be stored at node in ^TMP($J,"ECXMTL,NODE
"RTN","ECXAMTL",52,0)
 . S DATND=$S(NODE="ASI":ASI_U_SPC,NODE="GAF":TSTSC_U_PROV,1:"")
"RTN","ECXAMTL",53,0)
 . ;store data in ^TMP($J,"ECXMTL",NODE
"RTN","ECXAMTL",54,0)
 . I NODE="PI" D  Q
"RTN","ECXAMTL",55,0)
 . . I '$D(^TMP($J,"ECXMTL",NODE,TSTNAM,NAME,SSN,DAY)) D
"RTN","ECXAMTL",56,0)
 . . . S ^TMP($J,"ECXMTL",NODE,TSTNAM,NAME,SSN,DAY)=DATND
"RTN","ECXAMTL",57,0)
 . . . S ^TMP($J,"ECXMTL",NODE,TSTNAM)=$G(^TMP($J,"ECXMTL",NODE,TSTNAM))+1
"RTN","ECXAMTL",58,0)
 . I '$D(^TMP($J,"ECXMTL",NODE,NAME,SSN,DAY)) D
"RTN","ECXAMTL",59,0)
 . . S ^TMP($J,"ECXMTL",NODE,NAME,SSN,DAY)=DATND
"RTN","ECXAMTL",60,0)
 D PRINT,AUDIT^ECXKILL
"RTN","ECXAMTL",61,0)
 Q
"RTN","ECXAMTL",62,0)
PRINT ;print the MTL audit report
"RTN","ECXAMTL",63,0)
 N ND,NAM,SSN,DAY,PITOT,GAFTOT,ASI,INSTOT,CNT,DIV,QFL,LN,I,CLS,SPC,ASISP
"RTN","ECXAMTL",64,0)
 N PG,ASITOT,ASISPTOT
"RTN","ECXAMTL",65,0)
 U IO
"RTN","ECXAMTL",66,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMTL",67,0)
 S (ASITOT,ASISPTOT,QFL,PG,CNT)=0,$P(LN,"-",74)="",DIV=$O(ECXDIV(""))
"RTN","ECXAMTL",68,0)
 ;
"RTN","ECXAMTL",69,0)
 ;- Added new class, ASI-MV, per MH patch YS*5.01*67
"RTN","ECXAMTL",70,0)
 F I=1:1:4,999 S (ASI(I),ASISP(I))=0 D
"RTN","ECXAMTL",71,0)
 . S ASI(I,0)=$S(I=1:"Full",I=2:"Lite",I=3:"Follow-up",I=4:"For ASI-MV",1:"Unspecified")
"RTN","ECXAMTL",72,0)
 . S ASISP(I,0)=$S(I=1:"Terminated",I=2:"Refused",I=3:"Unable",1:"Unspecified")
"RTN","ECXAMTL",73,0)
 S ASISP(0)=0,ASISP(0,0)="Completed" D HEADER
"RTN","ECXAMTL",74,0)
 S ND="" F  S ND=$O(^TMP($J,"ECXMTL",ND)) Q:ND=""  D  I QFL Q
"RTN","ECXAMTL",75,0)
 . S CNT=CNT+1 D H1 S NAM="" I ($Y+3)>IOSL D HEADER I QFL Q
"RTN","ECXAMTL",76,0)
 . I ND="PI" D  Q
"RTN","ECXAMTL",77,0)
 . . F  S NAM=$O(^TMP($J,"ECXMTL",ND,NAM)) Q:NAM=""  D  I QFL Q
"RTN","ECXAMTL",78,0)
 . . . S INSTOT=^TMP($J,"ECXMTL",ND,NAM)
"RTN","ECXAMTL",79,0)
 . . . D:($Y+3)>IOSL HEADER Q:QFL  W ?5,NAM,?32,$J(INSTOT,8),!
"RTN","ECXAMTL",80,0)
 . . . S PITOT=$G(PITOT)+INSTOT
"RTN","ECXAMTL",81,0)
 . . I ($Y+3)>IOSL D HEADER I QFL Q
"RTN","ECXAMTL",82,0)
 . . W ?5,LN,!,?5,"Total",?30,$J(PITOT,10),!
"RTN","ECXAMTL",83,0)
 . F  S NAM=$O(^TMP($J,"ECXMTL",ND,NAM)) Q:NAM=""  S SSN="" D  I QFL Q
"RTN","ECXAMTL",84,0)
 . .F  S SSN=$O(^TMP($J,"ECXMTL",ND,NAM,SSN)) Q:SSN=""  S DAY="" D  Q:QFL
"RTN","ECXAMTL",85,0)
 . . . F  S DAY=$O(^TMP($J,"ECXMTL",ND,NAM,SSN,DAY)) Q:DAY=""  D P1 Q:QFL
"RTN","ECXAMTL",86,0)
 . I QFL Q
"RTN","ECXAMTL",87,0)
 . ;print GAF total
"RTN","ECXAMTL",88,0)
 . I ND="GAF" D  Q
"RTN","ECXAMTL",89,0)
 . . D:($Y+3)>IOSL HEADER Q:QFL  W ?5,LN,!,?5,"Total: ",GAFTOT,!
"RTN","ECXAMTL",90,0)
 . ;print ASI totals
"RTN","ECXAMTL",91,0)
 . I ND="ASI" D  Q
"RTN","ECXAMTL",92,0)
 . . D:($Y+3)>IOSL HEADER Q:QFL  W ?5,LN,! S (CLS,SPC)=-1
"RTN","ECXAMTL",93,0)
 . . F I=1:1:5 D  Q:(CLS="")&(SPC="")  I QFL Q
"RTN","ECXAMTL",94,0)
 . . . I ($Y+3)>IOSL D HEADER I QFL Q
"RTN","ECXAMTL",95,0)
 . . . I CLS'="" S CLS=$O(ASI(CLS)) D:CLS'=""
"RTN","ECXAMTL",96,0)
 . . . . W ?29,$J(ASI(CLS),8)," ",ASI(CLS,0)
"RTN","ECXAMTL",97,0)
 . . . . S ASITOT=ASITOT+ASI(CLS)
"RTN","ECXAMTL",98,0)
 . . . I SPC'="" S SPC=$O(ASISP(SPC)) D:SPC'=""
"RTN","ECXAMTL",99,0)
 . . . . W ?50,$J(ASISP(SPC),8)," ",ASISP(SPC,0) D
"RTN","ECXAMTL",100,0)
 . . . . S ASISPTOT=ASISPTOT+ASISP(SPC)
"RTN","ECXAMTL",101,0)
 . . . W !
"RTN","ECXAMTL",102,0)
 . . Q:QFL  W ?5,LN,!,?27,$J(ASITOT,10),?48,$J(ASISPTOT,10)," ","Total"
"RTN","ECXAMTL",103,0)
 Q
"RTN","ECXAMTL",104,0)
P1 ;print ASI and GAF records
"RTN","ECXAMTL",105,0)
 N DATND,DATE
"RTN","ECXAMTL",106,0)
 S DATND=^TMP($J,"ECXMTL",ND,NAM,SSN,DAY)
"RTN","ECXAMTL",107,0)
 S DATE=$E(DAY,4,5)_"/"_$E(DAY,6,7)_"/"_($E(DAY)+17)_$E(DAY,2,3)
"RTN","ECXAMTL",108,0)
 D:($Y+3)>IOSL HEADER Q:QFL  W ?5,NAM,?14,$E(SSN,$L(SSN)-3,$L(SSN))
"RTN","ECXAMTL",109,0)
 I ND="ASI" D  Q
"RTN","ECXAMTL",110,0)
 . S CLS=$P(DATND,U),SPC=$P(DATND,U,2)
"RTN","ECXAMTL",111,0)
 . W ?21,DATE,?36,$S(CLS=1:"Full",CLS=2:"Lite",CLS=3:"F-up",CLS=4:"ASI-MV",1:""),?57,SPC,!
"RTN","ECXAMTL",112,0)
 . S:CLS="" CLS=999 S:SPC="" SPC=999 S:SPC="N" SPC=0
"RTN","ECXAMTL",113,0)
 . S ASI(CLS)=$G(ASI(CLS))+1,ASISP(SPC)=$G(ASISP(SPC))+1
"RTN","ECXAMTL",114,0)
 I ND="GAF" D  Q
"RTN","ECXAMTL",115,0)
 . W ?21,DATE,?36,$P(DATND,U,2),!
"RTN","ECXAMTL",116,0)
 . S GAFTOT=$G(GAFTOT)+1
"RTN","ECXAMTL",117,0)
 Q
"RTN","ECXAMTL",118,0)
HEADER ;header and page control
"RTN","ECXAMTL",119,0)
 N JJ,SS
"RTN","ECXAMTL",120,0)
 I $E(IOST)="C" D  I QFL Q
"RTN","ECXAMTL",121,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMTL",122,0)
 . I PG S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFL=1
"RTN","ECXAMTL",123,0)
 W:PG!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAMTL",124,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMTL",125,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXAMTL",126,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMTL",127,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXAMTL",128,0)
 I $P(ECXDIV(DIV),U)="" D
"RTN","ECXAMTL",129,0)
 . S $P(ECXDIV(DIV),U)=$P(ECXDIV(DIV),U,3)
"RTN","ECXAMTL",130,0)
 . I $P(ECXDIV(DIV),U)="" S $P(ECXDIV(DIV),U)="Unknown"
"RTN","ECXAMTL",131,0)
 W !,"Facility:             "_$P(ECXDIV(DIV),U)
"RTN","ECXAMTL",132,0)
 W " ("_$P(ECXDIV(DIV),U,4)_")",?68,"Page: "_PG
"RTN","ECXAMTL",133,0)
H1 I $G(ND)'="" D
"RTN","ECXAMTL",134,0)
 . W !!,CNT,".",?5
"RTN","ECXAMTL",135,0)
 . I ND="PI" W "Psych Instruments segment",!! Q
"RTN","ECXAMTL",136,0)
 . W ND," segment",!!
"RTN","ECXAMTL",137,0)
 . W ?5,"Name",?14,"SSN",?21
"RTN","ECXAMTL",138,0)
 . I ND="ASI" W "Interview",?36,"Class",?54,"Special"
"RTN","ECXAMTL",139,0)
 . I ND="GAF" W "Date",?36,"Clinician"
"RTN","ECXAMTL",140,0)
 . W !,?5,LN,!
"RTN","ECXAMTL",141,0)
 Q
"RTN","ECXBCM")
0^10^B89945674^B87281360
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;11/6/13  16:31
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144,148**;Dec 22, 1997 ;Build 3
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP ;143
"RTN","ECXBCM",13,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",14,0)
 S PIEN=0
"RTN","ECXBCM",15,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",16,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",17,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",18,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",19,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",20,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",21,0)
 Q
"RTN","ECXBCM",22,0)
 ;
"RTN","ECXBCM",23,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",24,0)
 N ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXBCM",25,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",26,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",27,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",28,0)
 ;Get Facility
"RTN","ECXBCM",29,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",30,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",31,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",32,0)
 ;
"RTN","ECXBCM",33,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",34,0)
 ;get inpatient data
"RTN","ECXBCM",35,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",36,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",37,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",38,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",39,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",40,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",41,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",42,0)
 ;get patient demographics
"RTN","ECXBCM",43,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",44,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",45,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",46,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",47,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",48,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",49,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",50,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",51,0)
 N ECXUSRTN
"RTN","ECXBCM",52,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",53,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",54,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",55,0)
 I "^G^S^C^"'[("^"_ECXASTA_"^") Q  ;process 'G'iven,'S'topped,'C'ompleted
"RTN","ECXBCM",56,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",57,0)
 ;Component code data
"RTN","ECXBCM",58,0)
 D CCODE(RIEN)
"RTN","ECXBCM",59,0)
 Q
"RTN","ECXBCM",60,0)
 ;
"RTN","ECXBCM",61,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",62,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",63,0)
 I $G(DRG) D
"RTN","ECXBCM",64,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",65,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",66,0)
 .S ECINV=$P(DRUG,U,4)
"RTN","ECXBCM",67,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",68,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",69,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",70,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",71,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",72,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",73,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",74,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",75,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",76,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",77,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",78,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",79,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",80,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",81,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",82,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",83,0)
 D:ECXENC'="" FILE
"RTN","ECXBCM",84,0)
 Q
"RTN","ECXBCM",85,0)
 ;
"RTN","ECXBCM",86,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",87,0)
 N X
"RTN","ECXBCM",88,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",89,0)
 ;get patient data
"RTN","ECXBCM",90,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",91,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",92,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",93,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",94,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",95,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",96,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",97,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",98,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",99,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",100,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",101,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",102,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",103,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",104,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",105,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",106,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",107,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",108,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",109,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",110,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",111,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",112,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",113,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",114,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",115,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",116,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",117,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",118,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",119,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",120,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",121,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",122,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",123,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",124,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",125,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",126,0)
 ;
"RTN","ECXBCM",127,0)
 ;get primary care data
"RTN","ECXBCM",128,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",129,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",130,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",131,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",132,0)
 Q
"RTN","ECXBCM",133,0)
 ;
"RTN","ECXBCM",134,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",135,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",136,0)
 ; 
"RTN","ECXBCM",137,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",138,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",139,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",140,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",141,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",142,0)
 ;
"RTN","ECXBCM",143,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",144,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",145,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",146,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",147,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",148,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",149,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXBCM",150,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",151,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",152,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",153,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",154,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",155,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",156,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",157,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",158,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",159,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",160,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",161,0)
 ..S CCDGVN=$P(DATA,U,3) ;148 Reset component dose given to original value
"RTN","ECXBCM",162,0)
 ..S CCUNIT=$P(DATA,U,4) ;148 Reset component unit to original value
"RTN","ECXBCM",163,0)
 ..D CMPT
"RTN","ECXBCM",164,0)
 Q
"RTN","ECXBCM",165,0)
 ;
"RTN","ECXBCM",166,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",167,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",168,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",169,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",170,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",171,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",172,0)
 ;
"RTN","ECXBCM",173,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",174,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",175,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",176,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",177,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",178,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",179,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",180,0)
 .D START^PSJDSS
"RTN","ECXBCM",181,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",182,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",183,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",184,0)
 .S ORD=0
"RTN","ECXBCM",185,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",186,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",187,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",188,0)
 ;
"RTN","ECXBCM",189,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",190,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",191,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",192,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",193,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",194,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",195,0)
 ;
"RTN","ECXBCM",196,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",197,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",198,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",199,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",200,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",201,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",202,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",203,0)
 .D START^PSJDSS
"RTN","ECXBCM",204,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",205,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",206,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",207,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",208,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",209,0)
 ;
"RTN","ECXBCM",210,0)
FILE ;file the extract record
"RTN","ECXBCM",211,0)
 ;node0
"RTN","ECXBCM",212,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM",213,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM",214,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM",215,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM",216,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTSC)^
"RTN","ECXBCM",217,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM",218,0)
 ;primary care provider(ECPTPR)^pc provider person class (ECCLAS)^
"RTN","ECXBCM",219,0)
 ;primary care provider NPI (ECPTNPI)^primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM",220,0)
 ;NODE(1)
"RTN","ECXBCM",221,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM",222,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM",223,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM",224,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM",225,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM",226,0)
 ;NODE(2)
"RTN","ECXBCM",227,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM",228,0)
  ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM",229,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (ECXVAP)^NDC (ECVNDC)^ ;;143, changed Drug IEN var from DRG to ECXVAP
"RTN","ECXBCM",230,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM",231,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM",232,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM",233,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM",234,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM",235,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM",236,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM",237,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM",238,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM",239,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)
"RTN","ECXBCM",240,0)
 ;NODE(3)
"RTN","ECXBCM",241,0)
 ;Patient Type(ECXPTYPE)^
"RTN","ECXBCM",242,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM",243,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM",244,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM",245,0)
 ;Encounter SC (ECXESC)^IV Additives Cost ECXIVAC^IV Solutions Cost ECXIVSC^Drug cost ECXDRGC^Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)
"RTN","ECXBCM",246,0)
 ;
"RTN","ECXBCM",247,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXBCM",248,0)
 N ECXDATA,ECXTSC
"RTN","ECXBCM",249,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXBCM",250,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXBCM",251,0)
 N DA,DIK
"RTN","ECXBCM",252,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM",253,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM",254,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM",255,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTSC_U_2_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM",256,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM",257,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM",258,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U
"RTN","ECXBCM",259,0)
 S ECODE(2)=ECXSCATM_U_ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_ECXVAP_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM ;143 Changed DRUG IEN field from DRG to ECXVAP
"RTN","ECXBCM",260,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP
"RTN","ECXBCM",261,0)
 S ECODE(2)=ECODE(2)_U_ECXUESTA_U_ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC
"RTN","ECXBCM",262,0)
 S ECODE(2)=ECODE(2)_U_ECXRST_U_ECXAST_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U
"RTN","ECXBCM",263,0)
 S ECODE(3)=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXBCM",264,0)
 S ECODE(3)=ECODE(3)_U_ECXPATCAT
"RTN","ECXBCM",265,0)
 I ECXLOGIC>2013 S ECODE(3)=ECODE(3)_U_ECXESC_U_ECXIVAC_U_ECXIVSC_U_ECXDRGC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXBCM",266,0)
 ;
"RTN","ECXBCM",267,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM",268,0)
 F X=0:1:3 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM",269,0)
 S ECRN=ECRN+1
"RTN","ECXBCM",270,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM",271,0)
 Q
"RTN","ECXBCM",272,0)
 ;
"RTN","ECXBCM",273,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",274,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",275,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",276,0)
 Q
"RTN","ECXLARPT")
0^2^B29347556^B29347556
"RTN","ECXLARPT",1,0)
ECXLARPT ;ALB/DHH-LAR Results LOINC CODE Report ;10/22/13  17:36
"RTN","ECXLARPT",2,0)
 ;;3.0;DSS EXTRACTS;**112,120,144,148**;Dec 22, 1997;Build 3
"RTN","ECXLARPT",3,0)
 ;
"RTN","ECXLARPT",4,0)
EN ; entry point
"RTN","ECXLARPT",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,CNT,ECXPORT ;144
"RTN","ECXLARPT",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXLARPT",7,0)
 ; get today's date
"RTN","ECXLARPT",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXLARPT",9,0)
 S ECXDESC="LAB Results LOINC CODE Report"
"RTN","ECXLARPT",10,0)
 S ECXSAVE("EC*")=""
"RTN","ECXLARPT",11,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXLARPT",12,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXLARPT",13,0)
 .S ^TMP($J,"ECXPORT",0)="LAR TEST# (#727.29)^LAR TEST NAME (#727.29)^LAR UNITS (#727.29)^LAR LOINC (#727.29)^FLAG^LOCAL TEST NAME (#64)^LOC SPEC TYPE (#64)^LOC WKLD IEN (#64)^LOC WKLD CODE (#64)" ;144
"RTN","ECXLARPT",14,0)
 .S CNT=1 ;144
"RTN","ECXLARPT",15,0)
 .D PROCESS ;144
"RTN","ECXLARPT",16,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXLARPT",17,0)
 .D ^ECXKILL ;144
"RTN","ECXLARPT",18,0)
 W !!,"This report requires 132-column format."
"RTN","ECXLARPT",19,0)
 D EN^XUTMDEVQ("PROCESS^ECXLARPT",ECXDESC,.ECXSAVE)
"RTN","ECXLARPT",20,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXLARPT",21,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLARPT",22,0)
 D HOME^%ZIS
"RTN","ECXLARPT",23,0)
 D AUDIT^ECXKILL
"RTN","ECXLARPT",24,0)
 Q
"RTN","ECXLARPT",25,0)
 ;
"RTN","ECXLARPT",26,0)
 ;
"RTN","ECXLARPT",27,0)
PROCESS ; entry point for queued report
"RTN","ECXLARPT",28,0)
 S ZTREQ="@" N ECXDIV
"RTN","ECXLARPT",29,0)
 D DEFAULT^ECXDVSN(.ECXDIV,1,.ECXERR)
"RTN","ECXLARPT",30,0)
 Q:ECXERR=1
"RTN","ECXLARPT",31,0)
 N TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC,LLNC,I,J,K,L,M,N,WKLD,WKLDCD,SPEC,TA,LTEST,A
"RTN","ECXLARPT",32,0)
 S A("ALL")=""
"RTN","ECXLARPT",33,0)
 D LOINC^ECXUTL6(.A)
"RTN","ECXLARPT",34,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",35,0)
 S ECXLNC="" F I=0:0 S ECXLNC=$O(^TMP($J,"ECXUTL6",ECXLNC)) Q:ECXLNC']""  D
"RTN","ECXLARPT",36,0)
 . S RU=$P(^TMP($J,"ECXUTL6",ECXLNC),U,4) S:$G(RU)="" RU="UNKNOWN"
"RTN","ECXLARPT",37,0)
 . S TNUM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,2)
"RTN","ECXLARPT",38,0)
 . S DSSNM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,3)
"RTN","ECXLARPT",39,0)
 . I '$O(^TMP($J,"ECXUTL6",ECXLNC,0)) D
"RTN","ECXLARPT",40,0)
 .. S ^TMP($J,"ECXLARPT",TNUM,DSSNM,"ZZZZ","ZZZZ",RU,ECXLNC)=""
"RTN","ECXLARPT",41,0)
 . S WKLD="" F J=0:0 S WKLD=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD)) Q:WKLD']""  D
"RTN","ECXLARPT",42,0)
 .. S SPEC="" F K=0:0 S SPEC=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC)) Q:SPEC']""  D
"RTN","ECXLARPT",43,0)
 ... S LTEST="" F M=0:0 S LTEST=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST)) Q:LTEST']""  D
"RTN","ECXLARPT",44,0)
 .... S SPECNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,2)
"RTN","ECXLARPT",45,0)
 .... I SPECNM="DEFAULT LOINC" Q  ;ECXUTL6 default loinc not functionally correct
"RTN","ECXLARPT",46,0)
 .... ;I SPECNM="DEFAULT LOINC" S SPECNM="ZZDEFAULT LOINC"
"RTN","ECXLARPT",47,0)
 .... S TSTNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,3) S:$G(TSTNM)="" TSTNM="UNKNOWN"
"RTN","ECXLARPT",48,0)
 .... S WKLDCD=$S($D(^LAM(WKLD,0)):$P(^(0),"^",2),1:"")
"RTN","ECXLARPT",49,0)
 .... S LLNC=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,4)
"RTN","ECXLARPT",50,0)
 .... S ^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)=WKLD_"^"_WKLDCD_"^"_LLNC
"RTN","ECXLARPT",51,0)
 D PRINT
"RTN","ECXLARPT",52,0)
 Q
"RTN","ECXLARPT",53,0)
 ;
"RTN","ECXLARPT",54,0)
PRINT ; process temp file and print report
"RTN","ECXLARPT",55,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC,WKLD1
"RTN","ECXLARPT",56,0)
 U IO
"RTN","ECXLARPT",57,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARPT",58,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXLARPT",59,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXLARPT",60,0)
 S COUNT=COUNT+1
"RTN","ECXLARPT",61,0)
 S TNUM=0 F I=0:0 S TNUM=$O(^TMP($J,"ECXLARPT",TNUM)) Q:'TNUM  D  Q:QFLG
"RTN","ECXLARPT",62,0)
 . S DSSNM="" F J=0:0 S DSSNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM)) Q:DSSNM']""  D  Q:QFLG
"RTN","ECXLARPT",63,0)
 .. S TSTNM="" F K=0:0 S TSTNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM)) Q:TSTNM']""  D  Q:QFLG
"RTN","ECXLARPT",64,0)
 ... S SPECNM="" F L=0:0 S SPECNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM)) Q:SPECNM']""  D  Q:QFLG
"RTN","ECXLARPT",65,0)
 .... S RU="" F M=0:0 S RU=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU)) Q:RU']""  D  Q:QFLG
"RTN","ECXLARPT",66,0)
 ..... S ECXLNC="" F N=0:0 S ECXLNC=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)) Q:ECXLNC']""  D  Q:QFLG
"RTN","ECXLARPT",67,0)
 ...... S WKLD1=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^")
"RTN","ECXLARPT",68,0)
 ...... S WKLDCD=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",2)
"RTN","ECXLARPT",69,0)
 ...... S LLNC=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",3)
"RTN","ECXLARPT",70,0)
 ...... I $G(ECXPORT) D  Q  ;144
"RTN","ECXLARPT",71,0)
 ....... S ^TMP($J,"ECXPORT",CNT)=TNUM_U_DSSNM_U_RU_U_ECXLNC_U_$S(WKLD1="":"*",1:"")_U_$S(TSTNM'="ZZZZ":TSTNM,1:"")_U_$S(SPECNM'="ZZZZ":$S(SPECNM="ZZDEFAULT LOINC":"DEFAULT LOINC",1:SPECNM),1:"")_U_WKLD1_U_WKLDCD ;144
"RTN","ECXLARPT",72,0)
 ....... S CNT=CNT+1 ;144
"RTN","ECXLARPT",73,0)
 ...... W !,$$RJ^XLFSTR(TNUM,4,"0"),?11,$E(DSSNM,1,24),?37,$E(RU,1,13),?53,$$RJ^XLFSTR(ECXLNC,10," ") ;,?56,$$RJ^XLFSTR(LLNC,10," ")
"RTN","ECXLARPT",74,0)
 ...... I WKLD1="" W ?67,"*"
"RTN","ECXLARPT",75,0)
 ...... ;I SPECNM'="ZZDEFAULT LOINC",$P(LLNC,"(")'=ECXLNC W ?67,"*"
"RTN","ECXLARPT",76,0)
 ...... W ?71,$S(TSTNM'="ZZZZ":$E(TSTNM,1,24),1:" ")
"RTN","ECXLARPT",77,0)
 ...... W ?97,$S(SPECNM'="ZZZZ":$S(SPECNM="ZZDEFAULT LOINC":"DEFAULT LOINC",1:$E(SPECNM,1,13)),1:" "),?112,$$RJ^XLFSTR(WKLD1,8," "),?122,$$RJ^XLFSTR(WKLDCD,10," ")
"RTN","ECXLARPT",78,0)
 ...... S COUNT=COUNT+1
"RTN","ECXLARPT",79,0)
 ...... I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXLARPT",80,0)
 I $G(ECXPORT) Q  ;144 stop processing if exporting
"RTN","ECXLARPT",81,0)
 W !!,"FLG ('*'=site not using LOINC code that DSS collects)"
"RTN","ECXLARPT",82,0)
 Q:QFLG
"RTN","ECXLARPT",83,0)
CLOSE ;
"RTN","ECXLARPT",84,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXLARPT",85,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",86,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXLARPT",87,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",88,0)
 Q
"RTN","ECXLARPT",89,0)
 ;
"RTN","ECXLARPT",90,0)
HEADER ;header and page control
"RTN","ECXLARPT",91,0)
 N SS,JJ
"RTN","ECXLARPT",92,0)
 I $E(IOST)="C" D
"RTN","ECXLARPT",93,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",94,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLARPT",95,0)
 Q:QFLG
"RTN","ECXLARPT",96,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLARPT",97,0)
 W !,"LAB RESULTS DSS LOINC CODE REPORT",?124,"Page: "_PG
"RTN","ECXLARPT",98,0)
 W !,"Report Run Date/Time: "_ECRUN
"RTN","ECXLARPT",99,0)
 W !,"DSS Site:             "_$P(ECXDIV(1),U,2)_" ("_$P(ECXDIV(1),U,3)_")"
"RTN","ECXLARPT",100,0)
 ;W !,?97,"LOC",?117,"LOC",?122,"LOC"
"RTN","ECXLARPT",101,0)
 ;W !!,?68,"F",!,"LAR",?49,"LAR",?61,"LOCAL",?68,"L",?97,"LOC SPEC",?113,"LOC WKLD",?122,"LOC WKLD"
"RTN","ECXLARPT",102,0)
 ;W !,"TEST#",?7,"LAR TEST NAME",?33,"LAR UNITS",?49,"LOINC",?61,"LOINC",?68,"G",?71,"LOCAL TEST NAME",?99,"TYPE",?115,"IEN",?125,"CD"
"RTN","ECXLARPT",103,0)
 W !!,?67,"F",?97,"LOC SPEC",?113,"LOC WKLD",?122,"LOC WKLD"
"RTN","ECXLARPT",104,0)
 W !,"LAR TEST#",?11,"LAR TEST NAME",?37,"LAR UNITS",?53,"LAR LOINC",?67,"L",?71,"LOCAL TEST NAME",?99,"TYPE",?115,"IEN",?124,"CODE"
"RTN","ECXLARPT",105,0)
 W !,"(#727.29)",?13,"(#727.29)",?37,"(#727.29)",?53,"(#727.29)",?67,"G",?76,"(#64)",?99,"(#64)",?115,"(#64)",?124,"(#64)"
"RTN","ECXLARPT",106,0)
 W !,LN,!
"RTN","ECXLARPT",107,0)
 Q
"RTN","ECXLARPT",108,0)
 ;
"RTN","ECXUCBOC")
0^3^B66849120^B66849120
"RTN","ECXUCBOC",1,0)
ECXUCBOC ;ALB/TJL-CBOC Activity Report ;10/22/13  17:32
"RTN","ECXUCBOC",2,0)
 ;;3.0;DSS EXTRACTS;**49,148**;Dec 22, 1997;Build 3
"RTN","ECXUCBOC",3,0)
 ;
"RTN","ECXUCBOC",4,0)
EN ; entry point
"RTN","ECXUCBOC",5,0)
 N X,Y,DATE,PG,COUNT,ECRUN,ECXDESC,ECXSAVE,ECXTL,YYYYMM,ECXJOB
"RTN","ECXUCBOC",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUCBOC",7,0)
 S (QFLG,COUNT,PG)=0
"RTN","ECXUCBOC",8,0)
 ; get today's date
"RTN","ECXUCBOC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUCBOC",10,0)
 ;D BEGIN Q:QFLG
"RTN","ECXUCBOC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUCBOC",12,0)
 S ECXDESC="CBOC Activity Report"
"RTN","ECXUCBOC",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUCBOC",14,0)
 W !!,"This report requires 80-column format."
"RTN","ECXUCBOC",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXUCBOC",ECXDESC,.ECXSAVE)
"RTN","ECXUCBOC",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUCBOC",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUCBOC",18,0)
 D HOME^%ZIS
"RTN","ECXUCBOC",19,0)
 D AUDIT^ECXKILL
"RTN","ECXUCBOC",20,0)
 Q
"RTN","ECXUCBOC",21,0)
 ;
"RTN","ECXUCBOC",22,0)
BEGIN ; display report description
"RTN","ECXUCBOC",23,0)
 W @IOF
"RTN","ECXUCBOC",24,0)
 W !,"This report prints a listing of all Clinical (CLI) records"
"RTN","ECXUCBOC",25,0)
 W !,"that have a Community Based Outpatient Clinic (CBOC) status of"
"RTN","ECXUCBOC",26,0)
 W !,"Y (=Yes).  Reports are grouped by Feeder Key, Division, and"
"RTN","ECXUCBOC",27,0)
 W !,"Clinic; detail lines include Patient Name, SSN, and Date of Visit."
"RTN","ECXUCBOC",28,0)
 W !,"Totals for unique SSNs and unique Dates of Visit will be displayed"
"RTN","ECXUCBOC",29,0)
 W !,"at the Clinic, Division, Feeder Key, and Report levels."
"RTN","ECXUCBOC",30,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",31,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUCBOC",32,0)
 Q
"RTN","ECXUCBOC",33,0)
 ;
"RTN","ECXUCBOC",34,0)
SELECT ; user inputs for start date
"RTN","ECXUCBOC",35,0)
 N OUT,DONE,LIST,IEN,ECXFROM,ECXEND,ECXRUN,ECXCNT,ECXDIV,LN
"RTN","ECXUCBOC",36,0)
 W @IOF
"RTN","ECXUCBOC",37,0)
 S (PG,QFLG)=0,$P(LN,"-",80)=""
"RTN","ECXUCBOC",38,0)
 D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D LISTHDR
"RTN","ECXUCBOC",39,0)
 S IEN=0 F  S IEN=$O(^ECX(727,IEN)) Q:IEN=""  Q:QFLG  D:$Y+4>IOSL LISTHDR Q:QFLG  I $G(^ECX(727,IEN,"HEAD"))="CLI" D
"RTN","ECXUCBOC",40,0)
 .I $G(^ECX(727,IEN,"PURG")) Q
"RTN","ECXUCBOC",41,0)
 .I '$D(^ECX(727,IEN,0)) Q
"RTN","ECXUCBOC",42,0)
 .I $P(^ECX(727,IEN,0),U,4)<3030101 Q
"RTN","ECXUCBOC",43,0)
 .S ECXJOB=$P(^ECX(727,IEN,0),U)
"RTN","ECXUCBOC",44,0)
 .S ECXFROM=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,4),"5DF")," ","0")
"RTN","ECXUCBOC",45,0)
 .S ECXEND=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,5),"5DF")," ","0")
"RTN","ECXUCBOC",46,0)
 .S ECXRUN=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,2),"5DF")," ","0")
"RTN","ECXUCBOC",47,0)
 .S ECXCNT=$P(^ECX(727,IEN,0),U,6)
"RTN","ECXUCBOC",48,0)
 .S ECXDIV=$P($G(^ECX(727,IEN,"DIV")),U) I ECXDIV D
"RTN","ECXUCBOC",49,0)
 ..S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXUCBOC",50,0)
 ..D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXUCBOC",51,0)
 .D:$Y+3>IOSL LISTHDR Q:QFLG
"RTN","ECXUCBOC",52,0)
 .W !?4,ECXJOB,?14,ECXRUN,?28,$J(ECXCNT,9),?41,ECXFROM," - ",ECXEND,?71,ECXDIV
"RTN","ECXUCBOC",53,0)
 .S LIST(ECXJOB)=1
"RTN","ECXUCBOC",54,0)
 S LO=$O(LIST(0)),HI=$O(LIST(" "),-1)
"RTN","ECXUCBOC",55,0)
 S DIR(0)="L^"_LO_":"_HI_"",DIR("A")="Create the CBOC Activity Report for the following extract"
"RTN","ECXUCBOC",56,0)
 W ! D ^DIR K DIR I $D(DIRUT) K LIST S QFLG=1 Q
"RTN","ECXUCBOC",57,0)
 S JJ=0,Y=","_Y
"RTN","ECXUCBOC",58,0)
 F  S JJ=$O(LIST(JJ)) Q:'JJ  S JZ=","_JJ_"," I Y'[JZ K LIST(JJ)
"RTN","ECXUCBOC",59,0)
 I '$D(LIST) W !!,"Invalid choice.  Please try again." S DIR(0)="E" W ! D ^DIR K DIR D  Q:QFLG  G SELECT
"RTN","ECXUCBOC",60,0)
 .I 'Y S QFLG=1
"RTN","ECXUCBOC",61,0)
 S ECXJOB=X
"RTN","ECXUCBOC",62,0)
 S Y=$P(^ECX(727,ECXJOB,0),U,4) D DD^%DT
"RTN","ECXUCBOC",63,0)
 S ECSTART=$P(Y," ")_$P(Y,",",2)
"RTN","ECXUCBOC",64,0)
 Q
"RTN","ECXUCBOC",65,0)
 ;
"RTN","ECXUCBOC",66,0)
LISTHDR ;
"RTN","ECXUCBOC",67,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",68,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",69,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Selectable Clinic Extracts for CBOC Activity Report",?72,"Page: ",PG
"RTN","ECXUCBOC",70,0)
 W !!,"Extract #",?15,"Run Date",?28,"Rec Count",?42,"Date Range of Extract",?68,"Division",!,LN
"RTN","ECXUCBOC",71,0)
 Q
"RTN","ECXUCBOC",72,0)
 ;
"RTN","ECXUCBOC",73,0)
PROCESS ; entry point for queued report
"RTN","ECXUCBOC",74,0)
 N ECXD,QFLG,PG,RECDA,LN,COUNT
"RTN","ECXUCBOC",75,0)
 N FKEY,DIV,CLIN,SSN,DFN,VDATE,KEY
"RTN","ECXUCBOC",76,0)
 N TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT
"RTN","ECXUCBOC",77,0)
 N OLDFKEY,OLDDIV,OLDCLIN,OLDSSN,OLDDFN,OLDVDATE,OLDKEY,HEADKEY
"RTN","ECXUCBOC",78,0)
 S (QFLG,COUNT,PG)=0,ZTREQ="@",ECXD="-",$P(LN,"-",80)=""
"RTN","ECXUCBOC",79,0)
 K ^TMP($J)
"RTN","ECXUCBOC",80,0)
 W @IOF
"RTN","ECXUCBOC",81,0)
 ;
"RTN","ECXUCBOC",82,0)
 ; set report created indicator
"RTN","ECXUCBOC",83,0)
 K DA,DIC,DD,DO
"RTN","ECXUCBOC",84,0)
 S DA(1)=1
"RTN","ECXUCBOC",85,0)
 I '$D(^ECX(728,DA(1),"CBOC","B",ECXJOB)) D
"RTN","ECXUCBOC",86,0)
 .S DLAYGO=728,DIC(0)="L",DIC("P")=$P(^DD(728,68,0),U,2)
"RTN","ECXUCBOC",87,0)
 .S DIC="^ECX(728,"_DA(1)_",""CBOC"",",X=ECXJOB
"RTN","ECXUCBOC",88,0)
 .D FILE^DICN
"RTN","ECXUCBOC",89,0)
 ;
"RTN","ECXUCBOC",90,0)
 I $O(^ECX(727.827,"AC",ECXJOB,0))="" D  Q
"RTN","ECXUCBOC",91,0)
 .W !,"No extract records exist for the selected extract."
"RTN","ECXUCBOC",92,0)
 S RECDA=0
"RTN","ECXUCBOC",93,0)
 F  S RECDA=$O(^ECX(727.827,"AC",ECXJOB,RECDA)) Q:'RECDA  D ISCBOC
"RTN","ECXUCBOC",94,0)
 ;
"RTN","ECXUCBOC",95,0)
 I '$D(^TMP($J)) W !,"No records were found with a CBOC Indicator value of ""Y""." S QFLG=1 Q
"RTN","ECXUCBOC",96,0)
 ;
"RTN","ECXUCBOC",97,0)
 S (TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT)=0
"RTN","ECXUCBOC",98,0)
 S RECDA=$O(^TMP($J,"AKEY",""))
"RTN","ECXUCBOC",99,0)
 S HEADKEY=RECDA
"RTN","ECXUCBOC",100,0)
 D HEADER Q:QFLG  D DETAIL Q:QFLG  D INCVIS D INCSSN D SETOLD
"RTN","ECXUCBOC",101,0)
 ;
"RTN","ECXUCBOC",102,0)
 ; process all CBOC records
"RTN","ECXUCBOC",103,0)
 F  S RECDA=$O(^TMP($J,"AKEY",RECDA)) Q:RECDA=""  D  Q:QFLG
"RTN","ECXUCBOC",104,0)
 .S HEADKEY=OLDKEY
"RTN","ECXUCBOC",105,0)
 .; key fields match, so print detail record and increment total(s)
"RTN","ECXUCBOC",106,0)
 .I $P(RECDA,ECXD,1,3)=OLDKEY D  Q
"RTN","ECXUCBOC",107,0)
 ..D DETAIL Q:QFLG
"RTN","ECXUCBOC",108,0)
 ..D INCVIS
"RTN","ECXUCBOC",109,0)
 ..S SSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",110,0)
 ..I '$D(^TMP($J,"C",OLDCLIN,SSN)) D INCSSN S OLDSSN=SSN
"RTN","ECXUCBOC",111,0)
 .;
"RTN","ECXUCBOC",112,0)
 .; if fkey changed, print "C","D", and "F" totals
"RTN","ECXUCBOC",113,0)
 .I $P(RECDA,ECXD)'=OLDFKEY D  Q:QFLG
"RTN","ECXUCBOC",114,0)
 ..D CLINTOT Q:QFLG  D DIVTOT Q:QFLG  D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",115,0)
 .E  D  Q:QFLG
"RTN","ECXUCBOC",116,0)
 ..I $P(RECDA,ECXD,2)'=OLDDIV D
"RTN","ECXUCBOC",117,0)
 ...D CLINTOT Q:QFLG  D DIVTOT Q:QFLG
"RTN","ECXUCBOC",118,0)
 ..E  D CLINTOT Q:QFLG
"RTN","ECXUCBOC",119,0)
 .;
"RTN","ECXUCBOC",120,0)
 .; something changed, so print subheader and detail line
"RTN","ECXUCBOC",121,0)
 .Q:QFLG  S HEADKEY=RECDA
"RTN","ECXUCBOC",122,0)
 .D HEADER2 Q:QFLG
"RTN","ECXUCBOC",123,0)
 .D DETAIL Q:QFLG
"RTN","ECXUCBOC",124,0)
 .D INCVIS
"RTN","ECXUCBOC",125,0)
 .D INCSSN
"RTN","ECXUCBOC",126,0)
 .D SETOLD
"RTN","ECXUCBOC",127,0)
 .Q
"RTN","ECXUCBOC",128,0)
 Q:QFLG
"RTN","ECXUCBOC",129,0)
 ; print totals for clinic, division, feeder key, and grand totals
"RTN","ECXUCBOC",130,0)
 S HEADKEY=OLDKEY
"RTN","ECXUCBOC",131,0)
 D CLINTOT Q:QFLG
"RTN","ECXUCBOC",132,0)
 D DIVTOT Q:QFLG
"RTN","ECXUCBOC",133,0)
 D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",134,0)
 D GTOTAL Q:QFLG
"RTN","ECXUCBOC",135,0)
 Q
"RTN","ECXUCBOC",136,0)
 ;
"RTN","ECXUCBOC",137,0)
ISCBOC ;
"RTN","ECXUCBOC",138,0)
 I $P(^ECX(727.827,RECDA,2),U,15)="Y" D SETKEY
"RTN","ECXUCBOC",139,0)
 Q
"RTN","ECXUCBOC",140,0)
 ;
"RTN","ECXUCBOC",141,0)
INCVIS ;
"RTN","ECXUCBOC",142,0)
 S TVISIT=TVISIT+1
"RTN","ECXUCBOC",143,0)
 S FVISIT=FVISIT+1
"RTN","ECXUCBOC",144,0)
 S DVISIT=DVISIT+1
"RTN","ECXUCBOC",145,0)
 S CVISIT=CVISIT+1
"RTN","ECXUCBOC",146,0)
 Q
"RTN","ECXUCBOC",147,0)
 ;
"RTN","ECXUCBOC",148,0)
INCSSN ;
"RTN","ECXUCBOC",149,0)
 N ZSSN,ZF,ZD,ZC
"RTN","ECXUCBOC",150,0)
 S ZSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",151,0)
 S ZF=$P(RECDA,ECXD,1)
"RTN","ECXUCBOC",152,0)
 S ZD=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",153,0)
 S ZC=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",154,0)
 I '$D(^TMP($J,"SSN",ZSSN)) S ^TMP($J,"SSN",ZSSN)="" S TSSN=TSSN+1
"RTN","ECXUCBOC",155,0)
 I '$D(^TMP($J,"F",ZF,ZSSN)) S ^TMP($J,"F",ZF,ZSSN)="" S FSSN=FSSN+1
"RTN","ECXUCBOC",156,0)
 I '$D(^TMP($J,"D",ZD,ZSSN)) S ^TMP($J,"D",ZD,ZSSN)="" S DSSN=DSSN+1
"RTN","ECXUCBOC",157,0)
 I '$D(^TMP($J,"C",ZC,ZSSN)) S ^TMP($J,"C",ZC,ZSSN)="" S CSSN=CSSN+1
"RTN","ECXUCBOC",158,0)
 Q
"RTN","ECXUCBOC",159,0)
 ;
"RTN","ECXUCBOC",160,0)
SETOLD ;
"RTN","ECXUCBOC",161,0)
 S OLDKEY=$P(RECDA,ECXD,1,3)
"RTN","ECXUCBOC",162,0)
 S OLDFKEY=$P(RECDA,ECXD)
"RTN","ECXUCBOC",163,0)
 S OLDDIV=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",164,0)
 S OLDCLIN=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",165,0)
 S OLDSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",166,0)
 Q
"RTN","ECXUCBOC",167,0)
 ;
"RTN","ECXUCBOC",168,0)
SETKEY ;
"RTN","ECXUCBOC",169,0)
 N CLIN,DIV,FKEY,DFN,SSN,VDATE
"RTN","ECXUCBOC",170,0)
 S CLIN=$P(^ECX(727.827,RECDA,0),U,12)
"RTN","ECXUCBOC",171,0)
 S DIV=$P(^ECX(727.827,RECDA,2),U,8)
"RTN","ECXUCBOC",172,0)
 S FKEY=$P(^ECX(727.827,RECDA,0),U,10)
"RTN","ECXUCBOC",173,0)
 S DFN=$P(^ECX(727.827,RECDA,0),U,5)
"RTN","ECXUCBOC",174,0)
 S SSN=$P(^ECX(727.827,RECDA,0),U,6)
"RTN","ECXUCBOC",175,0)
 S VDATE=$P(^ECX(727.827,RECDA,0),U,9)_"."_$P(^ECX(727.827,RECDA,0),U,14)
"RTN","ECXUCBOC",176,0)
 S KEY=FKEY_ECXD_DIV_ECXD_CLIN_ECXD_SSN_ECXD_DFN_ECXD_VDATE
"RTN","ECXUCBOC",177,0)
 S ^TMP($J,"AKEY",KEY)=""
"RTN","ECXUCBOC",178,0)
 Q
"RTN","ECXUCBOC",179,0)
 ;
"RTN","ECXUCBOC",180,0)
DETAIL ; print detail line
"RTN","ECXUCBOC",181,0)
 N DFN,PTNAME,DISPDT,DISPTM
"RTN","ECXUCBOC",182,0)
 U IO
"RTN","ECXUCBOC",183,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUCBOC",184,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",185,0)
 ;S QFLG=0
"RTN","ECXUCBOC",186,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",187,0)
 ; get patient name using DFN
"RTN","ECXUCBOC",188,0)
 S DFN=$P(RECDA,ECXD,5)
"RTN","ECXUCBOC",189,0)
 S PTNAME=$S(DFN'="":$P(^DPT(DFN,0),U),1:"")
"RTN","ECXUCBOC",190,0)
 S DISPDT=$P(RECDA,ECXD,6)
"RTN","ECXUCBOC",191,0)
 S DISPTM=$E(DISPDT,9,14)
"RTN","ECXUCBOC",192,0)
 S DISPDT=$E(DISPDT,1,4)-1700_$E(DISPDT,5,8)
"RTN","ECXUCBOC",193,0)
 S DISPDT=DISPDT_DISPTM
"RTN","ECXUCBOC",194,0)
 W !,PTNAME,?36,$P(RECDA,ECXD,4),?51,$$FMTE^XLFDT(DISPDT,1)
"RTN","ECXUCBOC",195,0)
 Q
"RTN","ECXUCBOC",196,0)
 ;
"RTN","ECXUCBOC",197,0)
CLINTOT ;
"RTN","ECXUCBOC",198,0)
 S COUNT=COUNT+2
"RTN","ECXUCBOC",199,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",200,0)
 W !!,?5,"Total Unique SSNs for Clinic:"
"RTN","ECXUCBOC",201,0)
 W ?35,$J(CSSN,10),?50,$J(CVISIT,10),?61,"Clinic Visits"
"RTN","ECXUCBOC",202,0)
 S (CSSN,CVISIT)=0 S OLDCLIN=$P(RECDA,ECXD,3) K ^TMP($J,"C")
"RTN","ECXUCBOC",203,0)
 Q
"RTN","ECXUCBOC",204,0)
 ;
"RTN","ECXUCBOC",205,0)
DIVTOT ;
"RTN","ECXUCBOC",206,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",207,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",208,0)
 W !,?3,"Total Unique SSNs for Division:"
"RTN","ECXUCBOC",209,0)
 W ?35,$J(DSSN,10),?50,$J(DVISIT,10),?61,"Division Visits"
"RTN","ECXUCBOC",210,0)
 S (DSSN,DVISIT)=0 S OLDDIV=$P(RECDA,ECXD,2) K ^TMP($J,"D")
"RTN","ECXUCBOC",211,0)
 Q
"RTN","ECXUCBOC",212,0)
 ;
"RTN","ECXUCBOC",213,0)
FKEYTOT ;
"RTN","ECXUCBOC",214,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",215,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",216,0)
 W !,?1,"Total Unique SSNs for Feeder Key:"
"RTN","ECXUCBOC",217,0)
 W ?35,$J(FSSN,10),?50,$J(FVISIT,10),?61,"Feeder Key Visits"
"RTN","ECXUCBOC",218,0)
 S (FSSN,FVISIT)=0 S OLDFKEY=$P(RECDA,ECXD) K ^TMP($J,"F")
"RTN","ECXUCBOC",219,0)
 Q
"RTN","ECXUCBOC",220,0)
 ;
"RTN","ECXUCBOC",221,0)
GTOTAL ;
"RTN","ECXUCBOC",222,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",223,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",224,0)
 W !,"Total Unique SSNs (entire report):"
"RTN","ECXUCBOC",225,0)
 W ?35,$J(TSSN,10),?50,$J(TVISIT,10),?61,"Total Visits"
"RTN","ECXUCBOC",226,0)
 Q
"RTN","ECXUCBOC",227,0)
 ;
"RTN","ECXUCBOC",228,0)
CLOSE ;
"RTN","ECXUCBOC",229,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUCBOC",230,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",231,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUCBOC",232,0)
 Q
"RTN","ECXUCBOC",233,0)
 ;
"RTN","ECXUCBOC",234,0)
HEADER ;header and page control
"RTN","ECXUCBOC",235,0)
 D HEADER1 Q:QFLG
"RTN","ECXUCBOC",236,0)
 D HEADER2 Q:QFLG
"RTN","ECXUCBOC",237,0)
 Q
"RTN","ECXUCBOC",238,0)
HEADER1 ;header1 and page control
"RTN","ECXUCBOC",239,0)
 N SS,JJ
"RTN","ECXUCBOC",240,0)
 I $E(IOST)="C" D
"RTN","ECXUCBOC",241,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",242,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUCBOC",243,0)
 Q:QFLG
"RTN","ECXUCBOC",244,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUCBOC",245,0)
 W !,"CBOC Activity Report"
"RTN","ECXUCBOC",246,0)
 W ?(73-$L(PG)),"Page: "_PG
"RTN","ECXUCBOC",247,0)
 W !,ECSTART,?50,"Report Run Date: "_ECRUN
"RTN","ECXUCBOC",248,0)
 Q
"RTN","ECXUCBOC",249,0)
 ;
"RTN","ECXUCBOC",250,0)
HEADER2 ;display whenever feeder key, division, or clinic changes
"RTN","ECXUCBOC",251,0)
 I $Y+8>IOSL D HEADER1 Q:QFLG
"RTN","ECXUCBOC",252,0)
 N CLINIC
"RTN","ECXUCBOC",253,0)
 S CLINIC=$$GET1^DIQ(44,$P($P(HEADKEY,ECXD,3),U),.01,)
"RTN","ECXUCBOC",254,0)
 W !!,"Feeder Key: ",$P(HEADKEY,ECXD)
"RTN","ECXUCBOC",255,0)
 W ?31,"Division: ",$P(HEADKEY,ECXD,2)
"RTN","ECXUCBOC",256,0)
 W ?51,"Clinic: ",$E(CLINIC,1,20)
"RTN","ECXUCBOC",257,0)
 W !!,"Patient",?39,"SSN",?51,"Visit Date/Time"
"RTN","ECXUCBOC",258,0)
 W !,LN
"RTN","ECXUCBOC",259,0)
 Q
"RTN","ECXUCPT")
0^4^B3005384^B3005384
"RTN","ECXUCPT",1,0)
ECXUCPT ;ALB/TJL-CPT INQUIRY FOR MYSTERY FEEDER KEYS ;10/22/13  17:32
"RTN","ECXUCPT",2,0)
 ;;3.0;DSS EXTRACTS;**49,123,148**;Dec 22, 1997;Build 3
"RTN","ECXUCPT",3,0)
 ;
"RTN","ECXUCPT",4,0)
EN ; entry point
"RTN","ECXUCPT",5,0)
 N X,Y,DATE,ECRUN,QFLG
"RTN","ECXUCPT",6,0)
 S QFLG=0
"RTN","ECXUCPT",7,0)
 ; get today's date
"RTN","ECXUCPT",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUCPT",9,0)
 D BEGIN
"RTN","ECXUCPT",10,0)
 F  D SELECT W @IOF Q:QFLG
"RTN","ECXUCPT",11,0)
 Q
"RTN","ECXUCPT",12,0)
 ;
"RTN","ECXUCPT",13,0)
BEGIN ; display report description
"RTN","ECXUCPT",14,0)
 W @IOF
"RTN","ECXUCPT",15,0)
 W !,"This inquiry allows the user to select a CPT code, then displays"
"RTN","ECXUCPT",16,0)
 W !,"the Short Name, Category, and Description for the selected code."
"RTN","ECXUCPT",17,0)
 W !!
"RTN","ECXUCPT",18,0)
 Q
"RTN","ECXUCPT",19,0)
 ;
"RTN","ECXUCPT",20,0)
SELECT ; user inputs for CPT Code
"RTN","ECXUCPT",21,0)
 N OUT,DIC,X,Y,DIR,CIEN,ECXARR,ECXIEN
"RTN","ECXUCPT",22,0)
 S DIC="^ICPT(",DIC(0)="AZEMQ" D ^DIC
"RTN","ECXUCPT",23,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXUCPT",24,0)
 S ECXIEN=+Y
"RTN","ECXUCPT",25,0)
 S ECXARR=$$CPT^ICPTCOD(ECXIEN) I +ECXARR=-1 W !,"CPT Code Error." S QFLG=1 Q
"RTN","ECXUCPT",26,0)
 S CIEN=$P(ECXARR,U,4) I CIEN S ECXARR(81.1)=$$GET1^DIQ(81.1,CIEN_",",.01)
"RTN","ECXUCPT",27,0)
 S X=$$CPTD^ICPTCOD(ECXIEN,"ECXARR(81.01,")
"RTN","ECXUCPT",28,0)
 D PRINT
"RTN","ECXUCPT",29,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1
"RTN","ECXUCPT",30,0)
 Q
"RTN","ECXUCPT",31,0)
 ;
"RTN","ECXUCPT",32,0)
PRINT ; display results of inquiry
"RTN","ECXUCPT",33,0)
 N LN,DESCDA
"RTN","ECXUCPT",34,0)
 S $P(LN,"-",80)=""
"RTN","ECXUCPT",35,0)
 W !!,"CPT Inquiry",?54,"Date: ",ECRUN,!,LN,!
"RTN","ECXUCPT",36,0)
 W !,"CPT Code: ",$P(ECXARR,U,2)
"RTN","ECXUCPT",37,0)
 W ?30,"Short Name: ",$P(ECXARR,U,3)
"RTN","ECXUCPT",38,0)
 W !!,"Category: ",$G(ECXARR(81.1))
"RTN","ECXUCPT",39,0)
 W !!,"Description: "
"RTN","ECXUCPT",40,0)
 F DESCDA=1:1 Q:'$D(ECXARR(81.01,DESCDA))  D
"RTN","ECXUCPT",41,0)
 .W ECXARR(81.01,DESCDA),!
"RTN","ECXUCPT",42,0)
 W !!!
"RTN","ECXUCPT",43,0)
 Q
"RTN","ECXUCPT",44,0)
 ;
"RTN","ECXUDRF")
0^5^B82697^B82697
"RTN","ECXUDRF",1,0)
ECXUDRF ;ALB/DHH-PHARMACY RECREATE CALLS ;10/22/13  17:33
"RTN","ECXUDRF",2,0)
 ;;3.0;DSS EXTRACTS;**112,148**;Dec 22, 1997;Build 3
"RTN","ECXUDRF",3,0)
 ;
"RTN","ECXUDRF",4,0)
 ;This routine will recreate the IV or UD extract for DSS Inpatient
"RTN","ECXUDRF",5,0)
 ;Pharmacy IA (#5201)
"RTN","ECXUDRF",6,0)
 ;
"RTN","ECXUDRF",7,0)
ENIVP ; entry point to recreate IVP extract holding file (#728.113)
"RTN","ECXUDRF",8,0)
 S EXTRACT="IV"
"RTN","ECXUDRF",9,0)
 D EN^PSJDSS
"RTN","ECXUDRF",10,0)
 Q
"RTN","ECXUDRF",11,0)
 ;
"RTN","ECXUDRF",12,0)
ENUDP ; entry point to recreate UDP extract holding file (#728.904)
"RTN","ECXUDRF",13,0)
 S EXTRACT="UD"
"RTN","ECXUDRF",14,0)
 D EN^PSJDSS
"RTN","ECXUDRF",15,0)
 Q
"RTN","ECXUDRF",16,0)
 ;
"RTN","ECXUEC")
0^6^B48196617^B48196617
"RTN","ECXUEC",1,0)
ECXUEC ;ALB/TJL,JAP - Event Capture Extract Unusual Volume Report ;10/22/13  17:38
"RTN","ECXUEC",2,0)
 ;;3.0;DSS EXTRACTS;**120,127,148**;Dec 22, 1997;Build 3
"RTN","ECXUEC",3,0)
 ;
"RTN","ECXUEC",4,0)
EN ; entry point
"RTN","ECXUEC",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUEC",6,0)
 N ECSD,ECSD1,ECSTART,ECXDSS,ECED,ECEND,ECXERR,QFLG,DIR,DTOUT,DUOUT,DIRUT,POP,ZTSK,ZTQUEUED,DIC
"RTN","ECXUEC",7,0)
 S QFLG=0,ECTHLD=""
"RTN","ECXUEC",8,0)
 ; get today's date
"RTN","ECXUEC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUEC",10,0)
 D BEGIN Q:QFLG
"RTN","ECXUEC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUEC",12,0)
 S ECXDESC="ECS Extract Unusual Volume Report"
"RTN","ECXUEC",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUEC",14,0)
 W !!,"This report is formatted for 132-column line width."
"RTN","ECXUEC",15,0)
 W !!,"Enter 'Q' to queue report to TaskManager, then select printer."
"RTN","ECXUEC",16,0)
 D EN^XUTMDEVQ("PROCESS^ECXUEC",ECXDESC,.ECXSAVE,"",1)
"RTN","ECXUEC",17,0)
 I $G(POP) W !!,"No device selected...exiting.",! Q
"RTN","ECXUEC",18,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUEC",19,0)
 D HOME^%ZIS
"RTN","ECXUEC",20,0)
 I $D(ZTSK) W !!,"Queued as Task #"_ZTSK_"."
"RTN","ECXUEC",21,0)
 Q
"RTN","ECXUEC",22,0)
 ;
"RTN","ECXUEC",23,0)
BEGIN ; display report description
"RTN","ECXUEC",24,0)
 W @IOF
"RTN","ECXUEC",25,0)
 W !,"ECS Extract Unusual Volume Report"
"RTN","ECXUEC",26,0)
 W !!,"   This report prints a listing of unusual volumes that would be"
"RTN","ECXUEC",27,0)
 W !,"   generated by the Event Capture extract (ECS) as determined by"
"RTN","ECXUEC",28,0)
 W !,"   a user-defined threshold value. It should be run prior to"
"RTN","ECXUEC",29,0)
 W !,"   the generation of an actual extract to identify and fix, as"
"RTN","ECXUEC",30,0)
 W !,"   necessary, any volumes determined to be erroneous."
"RTN","ECXUEC",31,0)
 W !!,"   Unusual volumes are those in excess of the threshold value"
"RTN","ECXUEC",32,0)
 W !,"   defined by the user. The threshold value is 20 by default."
"RTN","ECXUEC",33,0)
 W !!,"   Note: You may set a different threshold if you opt to continue."
"RTN","ECXUEC",34,0)
 W !!,"   Run times will vary depending upon the size of the EVENT CAPTURE"
"RTN","ECXUEC",35,0)
 W !,"   PATIENT file (#721) and the date range selected, but may be at"
"RTN","ECXUEC",36,0)
 W !,"   least several minutes. Queuing to a printer is recommended."
"RTN","ECXUEC",37,0)
 W !!,"   The running of this report has no effect on the actual extracts"
"RTN","ECXUEC",38,0)
 W !,"   and can be run as needed."
"RTN","ECXUEC",39,0)
 W !!,"   You may select one or all DSS Units.  If you select one unit,"
"RTN","ECXUEC",40,0)
 W !,"   the report is sorted by descending volume. If you select all DSS Units, "
"RTN","ECXUEC",41,0)
 W !,"   the report is sorted by DSS Unit, then by descending volume."
"RTN","ECXUEC",42,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",43,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUEC",44,0)
 Q
"RTN","ECXUEC",45,0)
 ;
"RTN","ECXUEC",46,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUEC",47,0)
 N DONE,OUT
"RTN","ECXUEC",48,0)
 ; allow user to set threshold volume
"RTN","ECXUEC",49,0)
 S ECTHLD=20
"RTN","ECXUEC",50,0)
 W !!,"The default threshold volume for unusual volumes in Event Capture is "_ECTHLD_"."
"RTN","ECXUEC",51,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO"
"RTN","ECXUEC",52,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",53,0)
 I Y D
"RTN","ECXUEC",54,0)
 .W !!,"Volume > threshold"
"RTN","ECXUEC",55,0)
 .S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume"
"RTN","ECXUEC",56,0)
 .D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1
"RTN","ECXUEC",57,0)
 ; get DSS Unit selection from user
"RTN","ECXUEC",58,0)
 Q:QFLG
"RTN","ECXUEC",59,0)
 W !
"RTN","ECXUEC",60,0)
 S DIR(0)="Y",DIR("A")="Do you want All DSS Units",DIR("B")="YES"
"RTN","ECXUEC",61,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",62,0)
 I Y S ECXDSS="ALL"
"RTN","ECXUEC",63,0)
 E  D  I QFLG=1 Q
"RTN","ECXUEC",64,0)
 .S DIC(0)="AEQM",DIC="^ECD(" D ^DIC K DIC I X["^" S QFLG=1 Q
"RTN","ECXUEC",65,0)
 .I Y=-1 S QFLG=1 Q
"RTN","ECXUEC",66,0)
 .S ECXDSS=+$G(Y) I ECXDSS=0 S QFLG=1 Q
"RTN","ECXUEC",67,0)
 ; get date range from user
"RTN","ECXUEC",68,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUEC",69,0)
 W !,"Event Capture records.",!
"RTN","ECXUEC",70,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUEC",71,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",72,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",73,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUEC",74,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUEC",75,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",76,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",77,0)
 .I Y<ECSD D  Q
"RTN","ECXUEC",78,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUEC",79,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",80,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUEC",81,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUEC",82,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",83,0)
 .S ECED=Y
"RTN","ECXUEC",84,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUEC",85,0)
 .S DONE=1
"RTN","ECXUEC",86,0)
 Q
"RTN","ECXUEC",87,0)
 ;
"RTN","ECXUEC",88,0)
PROCESS ; entry point for queued report
"RTN","ECXUEC",89,0)
 N QFLG
"RTN","ECXUEC",90,0)
 S ZTREQ="@"
"RTN","ECXUEC",91,0)
 S ECXERR=0 D START Q:ECXERR
"RTN","ECXUEC",92,0)
 S QFLG=0 D PRINT
"RTN","ECXUEC",93,0)
 K ^TMP("ECUV",$J) D ^ECXKILL
"RTN","ECXUEC",94,0)
 Q
"RTN","ECXUEC",95,0)
 ;
"RTN","ECXUEC",96,0)
START ;find EC records in date range
"RTN","ECXUEC",97,0)
 I ECXDSS="ALL" D
"RTN","ECXUEC",98,0)
 .N X,Y,ECLL,ECDA,ECD,COUNT
"RTN","ECXUEC",99,0)
 .S ECED=ECED+.3,ECLL=0,COUNT=0
"RTN","ECXUEC",100,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",101,0)
 .F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXUEC",102,0)
 ..F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",103,0)
 ...F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",104,0)
 E  D
"RTN","ECXUEC",105,0)
 .N X,Y,ECLL,ECPAT,ECDA,ECD,COUNT
"RTN","ECXUEC",106,0)
 .S ECED=ECED+.3,ECLL=0,ECPAT=0,COUNT=0
"RTN","ECXUEC",107,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",108,0)
 .F  S ECLL=$O(^ECH("ADT",ECLL)) Q:'ECLL  D
"RTN","ECXUEC",109,0)
 .. S ECPAT=0
"RTN","ECXUEC",110,0)
 .. F  S ECPAT=$O(^ECH("ADT",ECLL,ECPAT)),ECD=ECSD-.1 Q:'ECPAT  D
"RTN","ECXUEC",111,0)
 ...F  S ECD=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",112,0)
 ....F  S ECDA=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",113,0)
 Q
"RTN","ECXUEC",114,0)
 ;
"RTN","ECXUEC",115,0)
GETREC ;get data for report
"RTN","ECXUEC",116,0)
 N ECCH,ECL,ECXDFN,ECXSSN,ECXPDIV,ECDT,ECDU,ECV,ECP,ECXPROV,ECXPRV,ECXDATE,ECXUNIT
"RTN","ECXUEC",117,0)
 N ECXDOB,ECXETH,ECXMAR,ECXMPI,ECXPNM,ECXPRIME,ECXRACE,ECXRC1,ECXREL,ECXSEX,N1,N2,VA
"RTN","ECXUEC",118,0)
 S ECCH=^ECH(ECDA,0),ECV=$P(ECCH,U,10)
"RTN","ECXUEC",119,0)
 Q:(ECV<ECTHLD)
"RTN","ECXUEC",120,0)
 S ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXUEC",121,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXUEC",122,0)
 S ECDT=$P(ECCH,U,3),ECDU=$P(ECCH,U,7),ECP=$P(ECCH,U,9)
"RTN","ECXUEC",123,0)
 Q:(ECP']"")
"RTN","ECXUEC",124,0)
 Q:('$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;","12"))
"RTN","ECXUEC",125,0)
 S ECXDATE=$$FMTE^XLFDT(ECDT,5)
"RTN","ECXUEC",126,0)
 K ECXPRV S X=$$GETPPRV^ECPRVMUT(ECDA,.ECXPRV),ECXPROV=$E($P(ECXPRV,U,2),1,30)
"RTN","ECXUEC",127,0)
 I ECXPROV]"" D
"RTN","ECXUEC",128,0)
 .S N1=$$TITLE^XLFSTR($P(ECXPROV,",")),N2=$$TITLE^XLFSTR($P(ECXPROV,",",2))
"RTN","ECXUEC",129,0)
 .S ECXPROV=(N1_","_N2)
"RTN","ECXUEC",130,0)
 I ECP[";" D
"RTN","ECXUEC",131,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L")
"RTN","ECXUEC",132,0)
 S ECXUNIT=$P($G(^ECD(ECDU,0)),U)
"RTN","ECXUEC",133,0)
 S COUNT=COUNT+1
"RTN","ECXUEC",134,0)
 S ^TMP("ECUV",$J,ECXUNIT,(100-ECV),COUNT)=ECXSSN_U_ECXPDIV_U_ECXDATE_U_ECP_U_ECXPROV_U_ECV
"RTN","ECXUEC",135,0)
 Q
"RTN","ECXUEC",136,0)
 ;
"RTN","ECXUEC",137,0)
PRINT ; process temp file and print report
"RTN","ECXUEC",138,0)
 N PG,QFLG,LN,COUNT,REC,CC,SS,JJ,ZTSTOP
"RTN","ECXUEC",139,0)
 N ECXUNIT,ECV,ECVV,ECXSSN,ECXPDIV,ECXDATE,ECXUNIT,ECP,ECXPROV
"RTN","ECXUEC",140,0)
 U IO
"RTN","ECXUEC",141,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUEC",142,0)
 S (PG,QFLG,COUNT)=0,$P(LN,"-",130)=""
"RTN","ECXUEC",143,0)
 D HEADER Q:QFLG
"RTN","ECXUEC",144,0)
 S ECXUNIT="" F  S ECXUNIT=$O(^TMP("ECUV",$J,ECXUNIT)) Q:ECXUNIT=""  D  Q:QFLG
"RTN","ECXUEC",145,0)
 .I COUNT>0 W !,?1,LN
"RTN","ECXUEC",146,0)
 .S ECVV=0 F  S ECVV=$O(^TMP("ECUV",$J,ECXUNIT,ECVV)) Q:'ECVV  D  Q:QFLG
"RTN","ECXUEC",147,0)
 ..S CC=0 F  S CC=$O(^TMP("ECUV",$J,ECXUNIT,ECVV,CC)) Q:'CC  D  Q:QFLG
"RTN","ECXUEC",148,0)
 ...S REC=^TMP("ECUV",$J,ECXUNIT,ECVV,CC),COUNT=COUNT+1
"RTN","ECXUEC",149,0)
 ...S ECXSSN=$P(REC,U),ECXPDIV=$P(REC,U,2),ECXDATE=$P(REC,U,3),ECP=$P(REC,U,4),ECXPROV=$P(REC,U,5),ECV=$P(REC,U,6)
"RTN","ECXUEC",150,0)
 ...W !,?1,ECXSSN,?13,ECXPDIV,?24,ECXUNIT,?55,ECXDATE,?75,ECP,?86,ECV,?94,ECXPROV
"RTN","ECXUEC",151,0)
 ...I $Y+4>IOSL D HEADER Q:QFLG
"RTN","ECXUEC",152,0)
 Q:QFLG
"RTN","ECXUEC",153,0)
 I COUNT=0 W !!,?8,"No unusual Event Capture volumes to report for the date range.",!!
"RTN","ECXUEC",154,0)
 D SS
"RTN","ECXUEC",155,0)
 Q
"RTN","ECXUEC",156,0)
 ;
"RTN","ECXUEC",157,0)
HEADER ;header and page control
"RTN","ECXUEC",158,0)
 D:PG SS Q:QFLG
"RTN","ECXUEC",159,0)
 Q:QFLG
"RTN","ECXUEC",160,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUEC",161,0)
 W !,ECXDESC,?103,"Page: "_PG
"RTN","ECXUEC",162,0)
 W !,"Start Date: ",ECSTART,?92,"Report Run Date: "_ECRUN
"RTN","ECXUEC",163,0)
 W !,"  End Date: ",ECEND,?92,"Threshold Value: ",ECTHLD
"RTN","ECXUEC",164,0)
 W !!,?1,"SSN",?13,"FACILITY",?24,"DSS UNIT",?55,"DATE/TIME",?75,"PROCEDURE",?86,"VOLUME",?94,"PROVIDER"
"RTN","ECXUEC",165,0)
 W !,LN,!
"RTN","ECXUEC",166,0)
 Q
"RTN","ECXUEC",167,0)
 ;
"RTN","ECXUEC",168,0)
SS ;SCROLL STOPS
"RTN","ECXUEC",169,0)
 N JJ,SS
"RTN","ECXUEC",170,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXUEC",171,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",172,0)
 Q
"RTN","ECXUPRO")
0^7^B27534272^B27534272
"RTN","ECXUPRO",1,0)
ECXUPRO ;ALB/TJL-Prosthetic Extract Unusual Cost Report ;10/22/13  17:42
"RTN","ECXUPRO",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,144,148**;Dec 22, 1997;Build 3
"RTN","ECXUPRO",3,0)
 ;
"RTN","ECXUPRO",4,0)
EN ; entry point
"RTN","ECXUPRO",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECXPORT,CNT ;144
"RTN","ECXUPRO",6,0)
 N ECINST,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUPRO",7,0)
 S QFLG=0
"RTN","ECXUPRO",8,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXUPRO",9,0)
 ; get today's date
"RTN","ECXUPRO",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUPRO",11,0)
 D BEGIN Q:QFLG
"RTN","ECXUPRO",12,0)
 D SELECT Q:QFLG
"RTN","ECXUPRO",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXUPRO",14,0)
 .K ^TMP($J) ;144
"RTN","ECXUPRO",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DATE OF SERVICE^PCE CPT/HCPCS CODES & MODIFIERS^FEEDER KEY^QUANTITY^COST OF TRANSACTION" ;144
"RTN","ECXUPRO",16,0)
 .S CNT=1 ;144
"RTN","ECXUPRO",17,0)
 .D PROCESS ;144
"RTN","ECXUPRO",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXUPRO",19,0)
 ;device selection
"RTN","ECXUPRO",20,0)
 S ECXDESC="Prosthetic Extract Unusual Cost Report"
"RTN","ECXUPRO",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUPRO",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUPRO",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXUPRO",ECXDESC,.ECXSAVE)
"RTN","ECXUPRO",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUPRO",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUPRO",26,0)
 D HOME^%ZIS
"RTN","ECXUPRO",27,0)
 D AUDIT^ECXKILL
"RTN","ECXUPRO",28,0)
 Q
"RTN","ECXUPRO",29,0)
 ;
"RTN","ECXUPRO",30,0)
BEGIN ; display report description
"RTN","ECXUPRO",31,0)
 W @IOF
"RTN","ECXUPRO",32,0)
 W !,"This report prints a listing of unusual costs that would be"
"RTN","ECXUPRO",33,0)
 W !,"generated by the Prosthetic extract (PRO) as determined by a"
"RTN","ECXUPRO",34,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUPRO",35,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUPRO",36,0)
 W !,"necessary, any costs determined to be erroneous."
"RTN","ECXUPRO",37,0)
 W !!,"Unusual costs are those where the Cost of Transaction is"
"RTN","ECXUPRO",38,0)
 W !,"greater than the threshold value."
"RTN","ECXUPRO",39,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUPRO",40,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUPRO",41,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUPRO",42,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUPRO",43,0)
 W !,"can be run as needed."
"RTN","ECXUPRO",44,0)
 W !!,"The report is sorted by Feeder Key, then by descending Cost of"
"RTN","ECXUPRO",45,0)
 W !,"Transaction and SSN."
"RTN","ECXUPRO",46,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUPRO",47,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUPRO",48,0)
 Q
"RTN","ECXUPRO",49,0)
 ;
"RTN","ECXUPRO",50,0)
SELECT ; user inputs for threshold cost and date range
"RTN","ECXUPRO",51,0)
 N DONE,OUT
"RTN","ECXUPRO",52,0)
 ; allow user to set threshold cost
"RTN","ECXUPRO",53,0)
 S ECTHLD=500
"RTN","ECXUPRO",54,0)
 W !!,"The default threshold cost for the Prosthetic extract is $"_ECTHLD_".00."
"RTN","ECXUPRO",55,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUPRO",56,0)
 I Y D
"RTN","ECXUPRO",57,0)
 .W !!,"Cost > threshold"
"RTN","ECXUPRO",58,0)
 .S DIR(0)="N^0:999999",DIR("A")="Enter the new threshold cost" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUPRO",59,0)
 ; get date range from user
"RTN","ECXUPRO",60,0)
 W !!,"Enter the date range for which you would like to scan the Prosthetic",!,"Extract records.",!
"RTN","ECXUPRO",61,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUPRO",62,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",63,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",64,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUPRO",65,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUPRO",66,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",67,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",68,0)
 .I Y<ECSD D  Q
"RTN","ECXUPRO",69,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUPRO",70,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",71,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUPRO",72,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUPRO",73,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",74,0)
 .S ECED=Y
"RTN","ECXUPRO",75,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUPRO",76,0)
 .S DONE=1
"RTN","ECXUPRO",77,0)
 Q
"RTN","ECXUPRO",78,0)
 ;
"RTN","ECXUPRO",79,0)
PROCESS ; entry point for queued report
"RTN","ECXUPRO",80,0)
 S ZTREQ="@"
"RTN","ECXUPRO",81,0)
 S ECXERR=0 D EN^ECXUPRO1 Q:ECXERR
"RTN","ECXUPRO",82,0)
 S QFLG=0 D PRINT
"RTN","ECXUPRO",83,0)
 Q
"RTN","ECXUPRO",84,0)
 ;
"RTN","ECXUPRO",85,0)
PRINT ; process temp file and print report
"RTN","ECXUPRO",86,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,COST,SSN,REC,SDAY,I ;144
"RTN","ECXUPRO",87,0)
 U IO
"RTN","ECXUPRO",88,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUPRO",89,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXUPRO",90,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXUPRO",91,0)
 S COUNT=0,FKEY=""
"RTN","ECXUPRO",92,0)
 F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXUPRO",93,0)
 .S COST="" F  S COST=$O(^TMP($J,FKEY,COST)) Q:COST=""!QFLG  D
"RTN","ECXUPRO",94,0)
 .. S SDAY="" F  S SDAY=$O(^TMP($J,FKEY,COST,SDAY)) Q:SDAY=""!QFLG  D
"RTN","ECXUPRO",95,0)
 ...S SSN="" F  S SSN=$O(^TMP($J,FKEY,COST,SDAY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXUPRO",96,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=REC,CNT=CNT+1 Q  ;144
"RTN","ECXUPRO",97,0)
 ....S COUNT=COUNT+1
"RTN","ECXUPRO",98,0)
 ....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUPRO",99,0)
 ....W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?39,$P(REC,U,4),?70,$P(REC,U,5),?93,$$RJ^XLFSTR($P(REC,U,6),8),?110,$$RJ^XLFSTR($P(REC,U,7),11)
"RTN","ECXUPRO",100,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXUPRO",101,0)
 I COUNT=0 W !!,?8,"No unusual costs to report for this extract"
"RTN","ECXUPRO",102,0)
CLOSE ;
"RTN","ECXUPRO",103,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUPRO",104,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",105,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUPRO",106,0)
 Q
"RTN","ECXUPRO",107,0)
 ;
"RTN","ECXUPRO",108,0)
HEADER ;header and page control
"RTN","ECXUPRO",109,0)
 N SS,JJ
"RTN","ECXUPRO",110,0)
 I $E(IOST)="C" D
"RTN","ECXUPRO",111,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",112,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUPRO",113,0)
 Q:QFLG
"RTN","ECXUPRO",114,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUPRO",115,0)
 W !,"Prosthetic Extract Unusual Cost Report",?124,"Page: "_PG
"RTN","ECXUPRO",116,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUPRO",117,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUPRO",118,0)
 W !!,?21,"Date of",?43,"PCE CPT/",?112,"Cost of"
"RTN","ECXUPRO",119,0)
 W !,"Name",?11,"SSN",?21,"Service",?36,"HCPCS CODE & Modifiers"
"RTN","ECXUPRO",120,0)
 W ?72,"Feeder Key",?93,"Quantity",?110,"Transaction"
"RTN","ECXUPRO",121,0)
 W !,LN,!
"RTN","ECXUPRO",122,0)
 Q
"RTN","ECXUPRO",123,0)
 ;
"RTN","ECXUSUR")
0^8^B28806381^B28806381
"RTN","ECXUSUR",1,0)
ECXUSUR ;ALB/TJL-Surgery Extract Unusual Volume Report ;10/22/13  17:39
"RTN","ECXUSUR",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,93,105,148**;Dec 22, 1997;Build 3
"RTN","ECXUSUR",3,0)
 ;
"RTN","ECXUSUR",4,0)
EN ; entry point
"RTN","ECXUSUR",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUSUR",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXUSUR",7,0)
 S QFLG=0,ECTHLD="",ECXFLAG=$G(FLAG)
"RTN","ECXUSUR",8,0)
 ; get today's date
"RTN","ECXUSUR",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUSUR",10,0)
 I 'ECXFLAG D BEGIN Q:QFLG
"RTN","ECXUSUR",11,0)
 D SELECT Q:QFLG
"RTN","ECXUSUR",12,0)
 S ECXDESC=$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report")
"RTN","ECXUSUR",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUSUR",14,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUSUR",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXUSUR",ECXDESC,.ECXSAVE)
"RTN","ECXUSUR",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUSUR",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUSUR",18,0)
 D HOME^%ZIS
"RTN","ECXUSUR",19,0)
 D AUDIT^ECXKILL
"RTN","ECXUSUR",20,0)
 Q
"RTN","ECXUSUR",21,0)
 ;
"RTN","ECXUSUR",22,0)
BEGIN ; display report description
"RTN","ECXUSUR",23,0)
 W @IOF
"RTN","ECXUSUR",24,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXUSUR",25,0)
 W !,"generated by the Surgery extract (SUR) as determined by a"
"RTN","ECXUSUR",26,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUSUR",27,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUSUR",28,0)
 W !,"necessary, any volumes determined to be erroneous."
"RTN","ECXUSUR",29,0)
 W !!,"Unusual volumes are those where either the Operation Time,"
"RTN","ECXUSUR",30,0)
 W !,"Patient Time, Anesthesia Time, Recovery Room Time, OR Clean Time"
"RTN","ECXUSUR",31,0)
 W !,"or Pt Holding Time field is greater than the threshold value."
"RTN","ECXUSUR",32,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUSUR",33,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUSUR",34,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUSUR",35,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUSUR",36,0)
 W !,"can be run as needed."
"RTN","ECXUSUR",37,0)
 W !!,"The report is sorted by descending Volume and Case Number."
"RTN","ECXUSUR",38,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUSUR",39,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUSUR",40,0)
 Q
"RTN","ECXUSUR",41,0)
 ;
"RTN","ECXUSUR",42,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUSUR",43,0)
 N DONE,OUT
"RTN","ECXUSUR",44,0)
 ; allow user to set threshold volume
"RTN","ECXUSUR",45,0)
 I 'ECXFLAG D
"RTN","ECXUSUR",46,0)
 .S ECTHLD=25
"RTN","ECXUSUR",47,0)
 .W !!,"The default threshold volume for the Surgery extract is "_ECTHLD_"."
"RTN","ECXUSUR",48,0)
 .W !,"The default threshold volume ("_ECTHLD_") equates to 6 hours."
"RTN","ECXUSUR",49,0)
 .S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUSUR",50,0)
 .I Y D
"RTN","ECXUSUR",51,0)
 ..W !!,"Volume > threshold"
"RTN","ECXUSUR",52,0)
 ..S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUSUR",53,0)
 ; get date range from user
"RTN","ECXUSUR",54,0)
 Q:QFLG
"RTN","ECXUSUR",55,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUSUR",56,0)
 W !,"Surgery Extract records.",!
"RTN","ECXUSUR",57,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUSUR",58,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",59,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",60,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUSUR",61,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUSUR",62,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",63,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",64,0)
 .I Y<ECSD D  Q
"RTN","ECXUSUR",65,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUSUR",66,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",67,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUSUR",68,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUSUR",69,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",70,0)
 .S ECED=Y
"RTN","ECXUSUR",71,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUSUR",72,0)
 .S DONE=1
"RTN","ECXUSUR",73,0)
 Q
"RTN","ECXUSUR",74,0)
 ;
"RTN","ECXUSUR",75,0)
PROCESS ; entry point for queued report
"RTN","ECXUSUR",76,0)
 S ZTREQ="@"
"RTN","ECXUSUR",77,0)
 S ECXERR=0 D EN^ECXUSUR1 Q:ECXERR
"RTN","ECXUSUR",78,0)
 S QFLG=0 D PRINT
"RTN","ECXUSUR",79,0)
 Q
"RTN","ECXUSUR",80,0)
 ;
"RTN","ECXUSUR",81,0)
PRINT ; process temp file and print report
"RTN","ECXUSUR",82,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC
"RTN","ECXUSUR",83,0)
 U IO
"RTN","ECXUSUR",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUSUR",85,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXUSUR",86,0)
 D HEADER Q:QFLG
"RTN","ECXUSUR",87,0)
 S VOL=-999999 F  S VOL=$O(^TMP($J,VOL)) Q:VOL=""!QFLG  D
"RTN","ECXUSUR",88,0)
 .S SUB="" F  S SUB=$O(^TMP($J,VOL,SUB)) Q:SUB=""!QFLG  S REC=^(SUB)  D
"RTN","ECXUSUR",89,0)
 ..S COUNT=COUNT+1
"RTN","ECXUSUR",90,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUSUR",91,0)
 ..W !,?1,$P(REC,U),?7,$P(REC,U,2),?18,$P(REC,U,3),?27,$P(REC,U,4)
"RTN","ECXUSUR",92,0)
 ..W ?34,$P(REC,U,5),?55,$$RJ^XLFSTR($P(REC,U,7),4)
"RTN","ECXUSUR",93,0)
 ..W ?66,$$RJ^XLFSTR($P(REC,U,11),4),?77,$$RJ^XLFSTR($P(REC,U,9),4)
"RTN","ECXUSUR",94,0)
 ..W ?86,$$RJ^XLFSTR($P(REC,U,10),4),?93,$$RJ^XLFSTR($P(REC,U,6),4)
"RTN","ECXUSUR",95,0)
 ..W ?103,$$RJ^XLFSTR($P(REC,U,8),4),?113,$P(REC,U,14)
"RTN","ECXUSUR",96,0)
 ..W ?117,$P(REC,U,13)
"RTN","ECXUSUR",97,0)
 Q:QFLG
"RTN","ECXUSUR",98,0)
 I COUNT=0 W !!,?8,$S(ECXFLAG=1:"No surgery volumes to report for this extract",1:"No unusual volumes to report for this extract")
"RTN","ECXUSUR",99,0)
CLOSE ;
"RTN","ECXUSUR",100,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUSUR",101,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",102,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUSUR",103,0)
 Q
"RTN","ECXUSUR",104,0)
 ;
"RTN","ECXUSUR",105,0)
HEADER ;header and page control
"RTN","ECXUSUR",106,0)
 N SS,JJ
"RTN","ECXUSUR",107,0)
 I $E(IOST)="C" D
"RTN","ECXUSUR",108,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",109,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUSUR",110,0)
 Q:QFLG
"RTN","ECXUSUR",111,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUSUR",112,0)
 W !,$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report"),?124,"Page: "_PG
"RTN","ECXUSUR",113,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUSUR",114,0)
 W !,"  End Date: ",ECEND I 'ECXFLAG W ?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUSUR",115,0)
 W !!,?28,"Case",?38,"Encounter",?52,"Pt Holding",?63,"Anesthesia",?75,"Patient",?83,"Operation",?93,"PACU",?101,"OR Clean",?111,"Canc/",?121,"Principal"
"RTN","ECXUSUR",116,0)
 W !,?1,"Name",?10,"SSN",?20,"Day",?27,"Number",?40,"Number"
"RTN","ECXUSUR",117,0)
 W ?54,"Time",?66,"Time",?77,"Time",?86,"Time",?93,"Time",?103,"Time"
"RTN","ECXUSUR",118,0)
 W ?111,"Abort",?121,"Procedure"
"RTN","ECXUSUR",119,0)
 W !,LN,!
"RTN","ECXUSUR",120,0)
 Q
"RTN","ECXUSUR",121,0)
 ;
"VER")
8.0^22.0
"BLD",8285,6)
^133
**END**
**END**

