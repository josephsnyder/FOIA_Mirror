Released ECX*3*126 SEQ #112
Extracted from mail message
**KIDS**:ECX*3.0*126^

**INSTALL NAME**
ECX*3.0*126
"BLD",8262,0)
ECX*3.0*126^DSS EXTRACTS^0^3100406^y
"BLD",8262,1,0)
^^4^4^3100201^
"BLD",8262,1,1,0)
This patch will correct entry of stop codes in file 728.44 if there are
"BLD",8262,1,2,0)
duplicate codes in the CLINIC STOP file(#40.7), correct DSS Identifier 
"BLD",8262,1,3,0)
Non-Conforming Clinics Report, and verify entry of DSS Stop code and 
"BLD",8262,1,4,0)
DSS Credit Stop code before saving
"BLD",8262,4,0)
^9.64PA^^
"BLD",8262,6)
2^
"BLD",8262,6.3)
7
"BLD",8262,"ABPKG")
n
"BLD",8262,"KRN",0)
^9.67PA^779.2^20
"BLD",8262,"KRN",.4,0)
.4
"BLD",8262,"KRN",.401,0)
.401
"BLD",8262,"KRN",.402,0)
.402
"BLD",8262,"KRN",.403,0)
.403
"BLD",8262,"KRN",.5,0)
.5
"BLD",8262,"KRN",.84,0)
.84
"BLD",8262,"KRN",3.6,0)
3.6
"BLD",8262,"KRN",3.8,0)
3.8
"BLD",8262,"KRN",9.2,0)
9.2
"BLD",8262,"KRN",9.8,0)
9.8
"BLD",8262,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8262,"KRN",9.8,"NM",1,0)
ECXSCLD^^0^B193735960
"BLD",8262,"KRN",9.8,"NM",2,0)
ECXSCRP^^0^B21952351
"BLD",8262,"KRN",9.8,"NM",3,0)
ECXSTOP^^0^B11137426
"BLD",8262,"KRN",9.8,"NM","B","ECXSCLD",1)

"BLD",8262,"KRN",9.8,"NM","B","ECXSCRP",2)

"BLD",8262,"KRN",9.8,"NM","B","ECXSTOP",3)

"BLD",8262,"KRN",19,0)
19
"BLD",8262,"KRN",19.1,0)
19.1
"BLD",8262,"KRN",101,0)
101
"BLD",8262,"KRN",409.61,0)
409.61
"BLD",8262,"KRN",771,0)
771
"BLD",8262,"KRN",779.2,0)
779.2
"BLD",8262,"KRN",870,0)
870
"BLD",8262,"KRN",8989.51,0)
8989.51
"BLD",8262,"KRN",8989.52,0)
8989.52
"BLD",8262,"KRN",8994,0)
8994
"BLD",8262,"KRN","B",.4,.4)

"BLD",8262,"KRN","B",.401,.401)

"BLD",8262,"KRN","B",.402,.402)

"BLD",8262,"KRN","B",.403,.403)

"BLD",8262,"KRN","B",.5,.5)

"BLD",8262,"KRN","B",.84,.84)

"BLD",8262,"KRN","B",3.6,3.6)

"BLD",8262,"KRN","B",3.8,3.8)

"BLD",8262,"KRN","B",9.2,9.2)

"BLD",8262,"KRN","B",9.8,9.8)

"BLD",8262,"KRN","B",19,19)

"BLD",8262,"KRN","B",19.1,19.1)

"BLD",8262,"KRN","B",101,101)

"BLD",8262,"KRN","B",409.61,409.61)

"BLD",8262,"KRN","B",771,771)

"BLD",8262,"KRN","B",779.2,779.2)

"BLD",8262,"KRN","B",870,870)

"BLD",8262,"KRN","B",8989.51,8989.51)

"BLD",8262,"KRN","B",8989.52,8989.52)

"BLD",8262,"KRN","B",8994,8994)

"BLD",8262,"QDEF")
^^^^^^^^^^YES
"BLD",8262,"QUES",0)
^9.62^^
"BLD",8262,"REQB",0)
^9.611^1^1
"BLD",8262,"REQB",1,0)
ECX*3.0*120^1
"BLD",8262,"REQB","B","ECX*3.0*120",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
126^3100406^123457152
"PKG",535,22,1,"PAH",1,1,0)
^^4^4^3100406
"PKG",535,22,1,"PAH",1,1,1,0)
This patch will correct entry of stop codes in file 728.44 if there are
"PKG",535,22,1,"PAH",1,1,2,0)
duplicate codes in the CLINIC STOP file(#40.7), correct DSS Identifier 
"PKG",535,22,1,"PAH",1,1,3,0)
Non-Conforming Clinics Report, and verify entry of DSS Stop code and 
"PKG",535,22,1,"PAH",1,1,4,0)
DSS Credit Stop code before saving
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECXSCLD")
0^1^B193735960^B162480116
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; 6/16/09 3:50pm
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112,120,126**;Dec 22, 1997;Build 7
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES"
"RTN","ECXSCLD",6,0)
 W !,"file (#728.44)."
"RTN","ECXSCLD",7,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",8,0)
 W !!,"It also compares file #728.44 to the HOSPITAL LOCATION file (#44) to see"
"RTN","ECXSCLD",9,0)
 W !,"if there are any differences since the last time the file was reviewed."
"RTN","ECXSCLD",10,0)
 W !!,"Any differences or new entries will cause an UNREVIEWED CLINICS report"
"RTN","ECXSCLD",11,0)
 W !,"to automatically print.",!
"RTN","ECXSCLD",12,0)
 D SELECT^ECXSCLD
"RTN","ECXSCLD",13,0)
 Q
"RTN","ECXSCLD",14,0)
START ; entry point
"RTN","ECXSCLD",15,0)
 N ZTREQ
"RTN","ECXSCLD",16,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D FIX(EC)
"RTN","ECXSCLD",17,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",18,0)
 ;print 'unreviewed clinics' report
"RTN","ECXSCLD",19,0)
 S ECALL="U" D SPRINT^ECXSCLD
"RTN","ECXSCLD",20,0)
 S ZTREQ="@"
"RTN","ECXSCLD",21,0)
 Q
"RTN","ECXSCLD",22,0)
 ;
"RTN","ECXSCLD",23,0)
FIX(EC) ;
"RTN","ECXSCLD",24,0)
 ; synchronize files #44 and #728.44.
"RTN","ECXSCLD",25,0)
 ; differences are placed in ^XTMP("ECX UNREVIEWED CLINICS")
"RTN","ECXSCLD",26,0)
 S EC=$G(EC)
"RTN","ECXSCLD",27,0)
 I '$D(^SC(EC,0)) Q
"RTN","ECXSCLD",28,0)
 N ECD,DAT
"RTN","ECXSCLD",29,0)
 S ECD=^SC(EC,0),DAT=$G(^SC(EC,"I"))
"RTN","ECXSCLD",30,0)
 I $P(ECD,U,3)'="C" Q
"RTN","ECXSCLD",31,0)
 ; get stop codes and default style for feeder key
"RTN","ECXSCLD",32,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",33,0)
 K ECD2,ECS2,ECDNEW,ECDDIF,ECSCSIGN I $D(^ECX(728.44,EC,0)) S (ECD2,ECDDIF)=^(0),ECSCSIGN=""
"RTN","ECXSCLD",34,0)
 I $D(ECD2) F ECS=2,3,4,5 D
"RTN","ECXSCLD",35,0)
 .S (ECS2(ECS),X)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",36,0)
 .K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",37,0)
 .I +$G(Y)>0 S $P(ECS2(ECS),U,2)=$P(^DIC(40.7,+Y,0),U,3)
"RTN","ECXSCLD",38,0)
 S ID=+DAT,RD=$P(DAT,U,2),ECXINAC=0
"RTN","ECXSCLD",39,0)
 ;change in clinic inactivation for existing entry 
"RTN","ECXSCLD",40,0)
 I $D(ECD2) D
"RTN","ECXSCLD",41,0)
 .;don't include already old inactivated clinics in report
"RTN","ECXSCLD",42,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)=ID S ECXINAC=1
"RTN","ECXSCLD",43,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)'=ID D
"RTN","ECXSCLD",44,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)=ID,ECSCSIGN="*"
"RTN","ECXSCLD",45,0)
 .I ID,RD,(RD'>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",46,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="r"
"RTN","ECXSCLD",47,0)
 .I ID,(ID>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",48,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",49,0)
 .I 'ID,$P(ECD2,U,10) D
"RTN","ECXSCLD",50,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",51,0)
 .S ECDDIF=ECD2
"RTN","ECXSCLD",52,0)
 ;setup for stops
"RTN","ECXSCLD",53,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)_U_$P($G(^DIC(40.7,ECP,0)),U,3)
"RTN","ECXSCLD",54,0)
 S ECDF=$S($P(ECS(18),U)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",55,0)
 S ECDB=EC_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",56,0)
 ;new entry
"RTN","ECXSCLD",57,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",58,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECDB_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",59,0)
 .S $P(^(0),U,6)=ECDF,$P(^(0),U,12)=$P(ECD,U,17)
"RTN","ECXSCLD",60,0)
 .S ECDNEW=^ECX(728.44,EC,0)
"RTN","ECXSCLD",61,0)
 ;changes to existing entry
"RTN","ECXSCLD",62,0)
 I $D(ECD2) D
"RTN","ECXSCLD",63,0)
 .S $P(ECD2,U,1,3)=ECDB,$P(ECDDIF,U,1,3)=ECDB
"RTN","ECXSCLD",64,0)
 .;differs in stop code
"RTN","ECXSCLD",65,0)
 .I +ECS(7)'=+ECS2(2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"!",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",66,0)
 .;differs in credit stop code
"RTN","ECXSCLD",67,0)
 .I +ECS(18)'=+ECS2(3) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"!",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",68,0)
 .;stop code inactive
"RTN","ECXSCLD",69,0)
 .;I $P(ECS(7),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"*",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",70,0)
 .;credit stop code inactive
"RTN","ECXSCLD",71,0)
 .;I $P(ECS(18),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"*",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",72,0)
 .;dss stop code inactive
"RTN","ECXSCLD",73,0)
 .;I $P(ECS2(4),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,4)_"*",$P(ECDDIF,U,4)=X
"RTN","ECXSCLD",74,0)
 .;dss credit stop code inactive
"RTN","ECXSCLD",75,0)
 .;I $P(ECS2(5),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,5)_"*",$P(ECDDIF,U,5)=X
"RTN","ECXSCLD",76,0)
 .;change in non-count
"RTN","ECXSCLD",77,0)
 .I $P(ECD2,U,12)'=$P(ECD,U,17) S X=$P(ECD,U,17)_"!",$P(ECDDIF,U,12)=X,$P(ECD2,U,12)=$P(ECD,U,17),$P(ECD2,U,7)=""
"RTN","ECXSCLD",78,0)
 .;reset entry
"RTN","ECXSCLD",79,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",80,0)
 ;set tmp node
"RTN","ECXSCLD",81,0)
 S ECSC=$P(ECD,U) S:$L(ECSC)>27 ECSC=$E(ECSC,1,27)
"RTN","ECXSCLD",82,0)
 I $D(ECD2),$P(ECD2,U,7)="" D
"RTN","ECXSCLD",83,0)
 .I ECXINAC,(ECDDIF'["!") Q
"RTN","ECXSCLD",84,0)
 .I $D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) D UPDATE(ECSC,ECDDIF,ECSCSIGN)
"RTN","ECXSCLD",85,0)
 .I '$D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=ECSCSIGN_U_$P(ECDDIF,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",86,0)
 I $D(ECDNEW) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=""_U_$P(ECDNEW,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",87,0)
 Q
"RTN","ECXSCLD",88,0)
 ;
"RTN","ECXSCLD",89,0)
UPDATE(ECSC,ECDDIF,ECSCSIGN) ;update ^xtmp node with today's changes
"RTN","ECXSCLD",90,0)
 N ECXOLD,J,L1,L2,X,X1,X2
"RTN","ECXSCLD",91,0)
 S ECXOLD=^XTMP("ECX UNREVIEWED CLINICS",ECSC)
"RTN","ECXSCLD",92,0)
 F J=2,3 S X1=+$P(ECXOLD,U,J),X2=+$P(ECDDIF,U,J) I X2=X1,$P(ECDDIF,U,J)'=$P(ECXOLD,U,J) D
"RTN","ECXSCLD",93,0)
 .S L1=$L($P(ECXOLD,U,J)),L2=$L($P(ECDDIF,U,J))
"RTN","ECXSCLD",94,0)
 .I L1>L2 S $P(ECDDIF,U,J)=$P(ECXOLD,U,J)
"RTN","ECXSCLD",95,0)
 S X1=$E($P(ECXOLD,U,12),1),X2=$E($P(ECDDIF,U,12),1) I X2=X1 S $P(ECDDIF,U,12)=$P(ECXOLD,U,12)
"RTN","ECXSCLD",96,0)
 S X1=$P(ECXOLD,U),X=X1_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",97,0)
 I ECSCSIGN'="",ECSCSIGN'=X1 S X=ECSCSIGN_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",98,0)
 S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=X
"RTN","ECXSCLD",99,0)
 Q
"RTN","ECXSCLD",100,0)
 ;
"RTN","ECXSCLD",101,0)
SELECT ;select IO device to 'gather clinic stop codes' and print 'unreviewd clinics' report;
"RTN","ECXSCLD",102,0)
 ;for menu option 'Create DSS Clinic Stop Code File' or 'Clinics and DSS Stop Codes Print'
"RTN","ECXSCLD",103,0)
 N DIR,ECALL,IOP,POP,XX,ZTIO,ZTRTN,ZTDESC,ZTSK,ZTSAVE
"RTN","ECXSCLD",104,0)
 ;does user hold key?
"RTN","ECXSCLD",105,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX
"RTN","ECXSCLD",106,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXSCLD",107,0)
 .D PAUSE
"RTN","ECXSCLD",108,0)
 W !,"Please select a print device for the 'Unreviewed Clinics' report."
"RTN","ECXSCLD",109,0)
 W !,"**Please note: If printing in foreground, synching files may cause screen delay."
"RTN","ECXSCLD",110,0)
 W ! S %ZIS="Q" D ^%ZIS
"RTN","ECXSCLD",111,0)
 I POP Q
"RTN","ECXSCLD",112,0)
 ;I IO=IO(0) W !,"You must queue to a print device.",! D HOME^%ZIS G SELECT
"RTN","ECXSCLD",113,0)
 ;queue the report
"RTN","ECXSCLD",114,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCLD",115,0)
 . K ZTSAVE S ZTDESC="Gather Clinic Stop Codes for DSS",ZTRTN="START^ECXSCLD"
"RTN","ECXSCLD",116,0)
 . D ^%ZTLOAD
"RTN","ECXSCLD",117,0)
 . I $G(ZTSK) W !,"Queued as Task #: "_ZTSK D ENDX D PAUSE
"RTN","ECXSCLD",118,0)
 W !!,">> Synchronizing Stop Codes file (#728.44) with the Hospital"
"RTN","ECXSCLD",119,0)
 W !,"   Location file (#44)...",!
"RTN","ECXSCLD",120,0)
 D START
"RTN","ECXSCLD",121,0)
 D ^%ZISC,HOME^%ZIS K IO("Q")
"RTN","ECXSCLD",122,0)
 Q
"RTN","ECXSCLD",123,0)
 ;
"RTN","ECXSCLD",124,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",125,0)
 N OUT,DIR,ECALL
"RTN","ECXSCLD",126,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",127,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (I) Inactive, "
"RTN","ECXSCLD",128,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting approval."
"RTN","ECXSCLD",129,0)
 W !!,"Clinics that were defined as ""inactive"" by MAS the last time the option"
"RTN","ECXSCLD",130,0)
 W !,"""Create DSS Clinic Stop Code File"" was run will be indicated with an ""*"".",!
"RTN","ECXSCLD",131,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("A")="Enter ""A"", ""C"", ""I"", or ""U"""
"RTN","ECXSCLD",132,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",133,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",134,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",135,0)
 S DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",136,0)
 D ^DIR K DIR G ENDX:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",137,0)
 ;sync #728.44 with #44 before printing 'unreviewed'
"RTN","ECXSCLD",138,0)
 I ECALL="U" D  Q
"RTN","ECXSCLD",139,0)
 .W !!,?5,"Before the UNREVIEWED CLINICS report prints, the Clinics and"
"RTN","ECXSCLD",140,0)
 .W !,?5,"Stop Codes file (#728.44) will be synchronized with the Hospital"
"RTN","ECXSCLD",141,0)
 .W !,?5,"Location file (#44).",!!
"RTN","ECXSCLD",142,0)
 .K DIR S DIR(0)="YA",DIR("A")="Do you wish to continue? (Y/N)// " D ^DIR
"RTN","ECXSCLD",143,0)
 .I ('$G(Y)!$G(DIRUT)!$G(DUOUT)!$G(DTOUT)) Q
"RTN","ECXSCLD",144,0)
 .D SELECT^ECXSCLD
"RTN","ECXSCLD",145,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",146,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",147,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",148,0)
 U IO
"RTN","ECXSCLD",149,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCLD",150,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",151,0)
 I ECALL'="U" K ^TMP("EC",$J)
"RTN","ECXSCLD",152,0)
 F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^ECX(728.44,J,0) D
"RTN","ECXSCLD",153,0)
 .I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",154,0)
 .I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",155,0)
 .I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",156,0)
 I ECALL'="U" D
"RTN","ECXSCLD",157,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q
"RTN","ECXSCLD",158,0)
 .F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^TMP("EC",$J,ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",159,0)
 .K ^TMP("EC",$J)
"RTN","ECXSCLD",160,0)
 I ECALL="U" D
"RTN","ECXSCLD",161,0)
 .N ECSCSIGN
"RTN","ECXSCLD",162,0)
 .D HEAD S ECSC=0 I $O(^XTMP("ECX UNREVIEWED CLINICS",ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q
"RTN","ECXSCLD",163,0)
 .F  S ECSC=$O(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) Q:ECSC=""  Q:QFLG  D
"RTN","ECXSCLD",164,0)
 ..S ECSCSIGN=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U),ECD=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U,2,99)
"RTN","ECXSCLD",165,0)
 ..D SHOWEM
"RTN","ECXSCLD",166,0)
 I $E(IOST)="C",'QFLG D SS D ENDX
"RTN","ECXSCLD",167,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",168,0)
 Q
"RTN","ECXSCLD",169,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",170,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD",171,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?71,"Page: ",PG
"RTN","ECXSCLD",172,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",173,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",174,0)
 W !
"RTN","ECXSCLD",175,0)
 W !,?1,"CLINIC",?28,"STOP",?35,"CREDIT",?44,"DSS",?50,"DSS",?59,"ACTION",?68,"NAT'L",?74,"C/N"
"RTN","ECXSCLD",176,0)
 W !,?28,"CODE",?35,"STOP",?44,"STOP",?50,"CREDIT",?68,"CODE"
"RTN","ECXSCLD",177,0)
 W ! W:ECALL'="U" "( * - currently inactive)" W ?35,"CODE",?44,"CODE",?50,"CODE"
"RTN","ECXSCLD",178,0)
 I ECALL="U" W !,?8,"* - inactive     r - reactivated    ! - updated since last review"
"RTN","ECXSCLD",179,0)
 W !,LN
"RTN","ECXSCLD",180,0)
 Q
"RTN","ECXSCLD",181,0)
 ;
"RTN","ECXSCLD",182,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",183,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",184,0)
 N ECNON1P
"RTN","ECXSCLD",185,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD",186,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD",187,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD",188,0)
 W !!,$E(ECSC,1,25)
"RTN","ECXSCLD",189,0)
 I ECALL="U" S:ECD["!" ECSCSIGN=ECSCSIGN_"!" W ECSCSIGN
"RTN","ECXSCLD",190,0)
 E  I ECALL'="U" W:$P(ECD,U,9)]"" "*"
"RTN","ECXSCLD",191,0)
 F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",192,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?68,$S(ECN]"":ECN,1:"____"),?75,ECNON
"RTN","ECXSCLD",193,0)
 Q
"RTN","ECXSCLD",194,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",195,0)
 N JJ,SS
"RTN","ECXSCLD",196,0)
 W !,LN
"RTN","ECXSCLD",197,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactive"
"RTN","ECXSCLD",198,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",199,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",200,0)
 Q
"RTN","ECXSCLD",201,0)
 ;
"RTN","ECXSCLD",202,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",203,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",204,0)
 W ! K DIC S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G ENDX:Y<0
"RTN","ECXSCLD",205,0)
 S CLIEN1=+Y
"RTN","ECXSCLD",206,0)
 W !!,"EXISTING CLINIC FILE DATA:",?35,"EXISTING DSS CLINIC FILE DATA:"
"RTN","ECXSCLD",207,0)
 W !!,"STOP CODE :       ",$P(Y(0),U,2),?35,"DSS STOP CODE :   ",$P(Y(0),U,4)
"RTN","ECXSCLD",208,0)
 W !,"CREDIT STOP CODE :",$P(Y(0),U,3),?35,"DSS CREDIT STOP CODE :",$P(Y(0),U,5)
"RTN","ECXSCLD",209,0)
 W !
"RTN","ECXSCLD",210,0)
EDIT1 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",211,0)
 S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD",212,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",213,0)
 .S STOP=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",214,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD",215,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",216,0)
 .D ^DIR
"RTN","ECXSCLD",217,0)
 .I X="@" D  Q
"RTN","ECXSCLD",218,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",219,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",220,0)
 .I X="" S X=STOP K DIRUT S OUT=2 Q
"RTN","ECXSCLD",221,0)
 .S DIC("A")="DSS STOP CODE (3-digit code only): "
"RTN","ECXSCLD",222,0)
 .S DIC="^DIC(40.7,",DIC(0)="EMQZ"
"RTN","ECXSCLD",223,0)
 .S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD",224,0)
 .I X="@" D  Q
"RTN","ECXSCLD",225,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",226,0)
 ..S OUT=2 W "   deleted..."
"RTN","ECXSCLD",227,0)
 .I X="" K DIRUT S OUT=2 Q
"RTN","ECXSCLD",228,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=3 Q
"RTN","ECXSCLD",229,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",230,0)
 .I +Y'>0  Q
"RTN","ECXSCLD",231,0)
 .S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD",232,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN1)
"RTN","ECXSCLD",233,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",234,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",235,0)
 .S IENS=CLIEN1_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD",236,0)
 .S OUT=1
"RTN","ECXSCLD",237,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",238,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",239,0)
 S OUT=0 F  D  G:OUT=1 ENDCHK
"RTN","ECXSCLD",240,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",241,0)
 .S CSTOP=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",242,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD",243,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",244,0)
 .D ^DIR
"RTN","ECXSCLD",245,0)
 .I X="@" D  Q
"RTN","ECXSCLD",246,0)
 ..S IENS=CLIEN1_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",247,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",248,0)
 .I X="" S X=CSTOP K DIRUT S OUT=1 Q
"RTN","ECXSCLD",249,0)
 .S DIC("A")="DSS CREDIT STOP CODE (3-digit code only): "
"RTN","ECXSCLD",250,0)
 .S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD",251,0)
 .S DIC=40.7,DIC(0)="EMQZ" D ^DIC
"RTN","ECXSCLD",252,0)
 .I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD",253,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD",254,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",255,0)
 .I +Y'>0  Q
"RTN","ECXSCLD",256,0)
 .S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD",257,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN1)
"RTN","ECXSCLD",258,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",259,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",260,0)
 .S IENS=CLIEN1_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD",261,0)
 .S OUT=1
"RTN","ECXSCLD",262,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",263,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",264,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",265,0)
 Q
"RTN","ECXSCLD",266,0)
ENDCHK ;check validity of clinic
"RTN","ECXSCLD",267,0)
 S CODE=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",268,0)
 K ERR,WRN,ECXERR,WARNING,ERRCHK
"RTN","ECXSCLD",269,0)
 S ERRCHK=0
"RTN","ECXSCLD",270,0)
 D STOP^ECXSTOP(CODE,"DSS Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",271,0)
 I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",272,0)
 K ERR,WRN,ECXERR,WARNING
"RTN","ECXSCLD",273,0)
 S CODE=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",274,0)
 D STOP^ECXSTOP(CODE,"Credit Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",275,0)
 I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",276,0)
 W !!,"...Validity Checker Complete."
"RTN","ECXSCLD",277,0)
 I ERRCHK=1 W !!,"...Errors found please fix." G EDIT1
"RTN","ECXSCLD",278,0)
 ;remaining fields
"RTN","ECXSCLD",279,0)
 S DIE=728.44,DA=+CLIEN1
"RTN","ECXSCLD",280,0)
 S DR="5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE
"RTN","ECXSCLD",281,0)
 S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)=""
"RTN","ECXSCLD",282,0)
 Q
"RTN","ECXSCLD",283,0)
ERRPRNT ;print errors
"RTN","ECXSCLD",284,0)
 I $G(ERR)>0,$D(ECXERR) D
"RTN","ECXSCLD",285,0)
 . W ! S I=0 F  S I=$O(ECXERR(I)) Q:'I  D
"RTN","ECXSCLD",286,0)
 . . W !,"..",ECXERR(I)
"RTN","ECXSCLD",287,0)
 I $G(WRN)>0,$D(WARNING) D
"RTN","ECXSCLD",288,0)
 . W ! S I=0 F  S I=$O(WARNING(I)) Q:'I  D
"RTN","ECXSCLD",289,0)
 . . W !,"..",WARNING(I)
"RTN","ECXSCLD",290,0)
 Q
"RTN","ECXSCLD",291,0)
KILL ;
"RTN","ECXSCLD",292,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",293,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",294,0)
 G EDIT
"RTN","ECXSCLD",295,0)
 ;
"RTN","ECXSCLD",296,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems
"RTN","ECXSCLD",297,0)
 ;input
"RTN","ECXSCLD",298,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD",299,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD",300,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD",301,0)
 ;output
"RTN","ECXSCLD",302,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD",303,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD",304,0)
 K ECXERR,WARNING
"RTN","ECXSCLD",305,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD",306,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN1) -1
"RTN","ECXSCLD",307,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD",308,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD",309,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD",310,0)
 I TYPE="DSS Stop Code" D STOP^ECXSTOP(XCODE,TYPE,,,CODE)
"RTN","ECXSCLD",311,0)
 I TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(XCODE,TYPE,CLIEN1,,CODE)
"RTN","ECXSCLD",312,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD",313,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD",314,0)
 Q ECXERR
"RTN","ECXSCLD",315,0)
 ;
"RTN","ECXSCLD",316,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",317,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",318,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",319,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",320,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",321,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",322,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",323,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",324,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G ENDX
"RTN","ECXSCLD",325,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G ENDX
"RTN","ECXSCLD",326,0)
 ;
"RTN","ECXSCLD",327,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",328,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^ECX(728.44,EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",329,0)
 S ZTREQ="@"
"RTN","ECXSCLD",330,0)
 K ^XTMP("ECX UNREVIEWED CLINICS") S ^XTMP("ECX UNREVIEWED CLINICS",0)=$$FMADD^XLFDT(DT,180)_U_DT_U_"ECX UNREVIEWED CLINICS"
"RTN","ECXSCLD",331,0)
ENDX K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN,ZTRTN,ZTIO,ZTDESC
"RTN","ECXSCLD",332,0)
 K DIR,DIRUT,DTOUT,DUOUT,CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",333,0)
 K J,ECSC,ECSD,ECDATE,ECD,ECN,ECNON,ECXINAC,QFLG,PG,LN,SS,POP,%ZIS
"RTN","ECXSCLD",334,0)
 K EC,ECD,ECD2,ECL,ECS,ECS2,ECP,ECSC,ECSC2,ECDB,ECDNEW,ECDDIF,ECSCSIGN,ECDF,ECALL,ID,RD
"RTN","ECXSCLD",335,0)
 Q
"RTN","ECXSCLD",336,0)
 ;
"RTN","ECXSCLD",337,0)
PAUSE ;pause screen
"RTN","ECXSCLD",338,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXSCLD",339,0)
 S DIR(0)="E" W !! D ^DIR W !!
"RTN","ECXSCLD",340,0)
 Q
"RTN","ECXSCLD",341,0)
 ;
"RTN","ECXSCLD",342,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",343,0)
 N DAT,ECD0,ECXMISS,ID,ECGRP
"RTN","ECXSCLD",344,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",345,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^SC(EC,0)),$P(^SC(EC,0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",346,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",347,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",348,0)
 D ^ECXSCX1
"RTN","ECXSCLD",349,0)
 Q
"RTN","ECXSCRP")
0^2^B21952351^B19429166
"RTN","ECXSCRP",1,0)
ECXSCRP ;ALB/JAM - Restricted Stop Code Nonconforming Clinic Report; 07/24/03 ; 9/24/09 10:57am
"RTN","ECXSCRP",2,0)
 ;;3.0;DSS EXTRACTS;**57,58,120,126**;Dec 22, 1997;Build 7
"RTN","ECXSCRP",3,0)
 ;
"RTN","ECXSCRP",4,0)
EN ;foreground entry point
"RTN","ECXSCRP",5,0)
 N ZTRTN,ZTDESC,ZTIO,ZTQUEUED,DIR,DIRUT,X,Y,ECX,ECXSD,PSC,SSC,ECXPCF
"RTN","ECXSCRP",6,0)
 W @IOF
"RTN","ECXSCRP",7,0)
 W !,"This option synchronizes the Primary and Secondary Stop Codes in the Clinics"
"RTN","ECXSCRP",8,0)
 W !,"and Stop Codes File #728.44 with those in the Hospital Location File #44."
"RTN","ECXSCRP",9,0)
 W !,"It produces a report highlighting any non conformance reasons that pertain"
"RTN","ECXSCRP",10,0)
 W !,"to the Primary and Secondary Codes. Please contact the responsible party"
"RTN","ECXSCRP",11,0)
 W !,"for corrective action."
"RTN","ECXSCRP",12,0)
 S DIR(0)="SO^A:Active Clinics;I:Inactive Clinics;B:Both"
"RTN","ECXSCRP",13,0)
 S DIR("A")="Select Report"
"RTN","ECXSCRP",14,0)
 S DIR("?",1)="Enter an A for Active Clinics, I for Inactive Clinics,"
"RTN","ECXSCRP",15,0)
 S DIR("?")="B for Both Active and Inactive Clinics"
"RTN","ECXSCRP",16,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECXSCRP",17,0)
 S ECXPCF=Y
"RTN","ECXSCRP",18,0)
 W ".  Please be patient, this may take a few moments..."
"RTN","ECXSCRP",19,0)
 ;Synch primary & secondary stop codes from file #44 with #728.44
"RTN","ECXSCRP",20,0)
 S ECX=0 F  S ECX=$O(^ECX(728.44,ECX)) Q:'ECX  D FIX^ECXSCLD(ECX)
"RTN","ECXSCRP",21,0)
 ;device selection
"RTN","ECXSCRP",22,0)
 K IOP,%ZIS,POP,IO("Q")
"RTN","ECXSCRP",23,0)
 S %ZIS("A")="Select Device: ",%ZIS="QM" D ^%ZIS I POP G END
"RTN","ECXSCRP",24,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECXSCRP",25,0)
 .S ZTDESC="Restricted Stop Code/DSS Identifier Report",ZTSAVE("ECXPCF")=""
"RTN","ECXSCRP",26,0)
 .S ZTRTN="PROCESS^ECXSCRP",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECXSCRP",27,0)
 U IO
"RTN","ECXSCRP",28,0)
 D PROCESS
"RTN","ECXSCRP",29,0)
END D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXSCRP",30,0)
 Q
"RTN","ECXSCRP",31,0)
 ;
"RTN","ECXSCRP",32,0)
PROCESS ;background entry point
"RTN","ECXSCRP",33,0)
 ;locate invalid Stop Code in HOSPITAL LOCATION file #44 & CLINICS
"RTN","ECXSCRP",34,0)
 ;AND STOP CODES file #728.44
"RTN","ECXSCRP",35,0)
 N ECX,NAM,STR,IEN,PSC,SSC,CNTX,ECXPG,ECXOUT,LNS,DPC,DSC,SCIEN,ECXF
"RTN","ECXSCRP",36,0)
 N INDT,TYP,ACF,HTYP,CLNF,ECXRDT
"RTN","ECXSCRP",37,0)
 S %H=$H D YX^%DTC S ECXRDT=Y
"RTN","ECXSCRP",38,0)
 S $P(LNS,"-",80)="",(CNTX,IEN,ECXOUT,ECXF)=0,ECXPG=1,CLNF=0
"RTN","ECXSCRP",39,0)
 ;search file #728.44 for invalid stop code entries
"RTN","ECXSCRP",40,0)
 D HDR S IEN=0
"RTN","ECXSCRP",41,0)
 F  S IEN=$O(^ECX(728.44,IEN)) Q:'IEN  D  Q:ECXOUT  S:ECXF CNTX=CNTX+1
"RTN","ECXSCRP",42,0)
 .S ECX=$G(^ECX(728.44,IEN,0)),PSC=$P(ECX,U,2),SSC=$P(ECX,U,3),CLNF=0
"RTN","ECXSCRP",43,0)
 .S DPC=$P(ECX,U,4),DSC=$P(ECX,U,5),NAM=$$GET1^DIQ(44,$P(ECX,U),.01)
"RTN","ECXSCRP",44,0)
 .S INDT=$P(ECX,U,10),ECXF=0 I INDT'="" S NAM="*"_NAM
"RTN","ECXSCRP",45,0)
 .S ACF=$S($E(NAM)="*":0,1:1),HTYP=$$GET1^DIQ(44,$P(ECX,U),2,"I")
"RTN","ECXSCRP",46,0)
 .I $S((ECXPCF="A")&('ACF):1,(ECXPCF="I")&(ACF):1,1:0) Q
"RTN","ECXSCRP",47,0)
 .D  I ECXOUT Q
"RTN","ECXSCRP",48,0)
 ..I PSC="" S STR="Missing primary code" D PRN Q
"RTN","ECXSCRP",49,0)
 ..D SCCHK(PSC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",50,0)
 .I SSC'="" D SCCHK(SSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",51,0)
 .D  I ECXOUT Q 
"RTN","ECXSCRP",52,0)
 ..I DPC="" S STR="No DSS primary code" D PRN Q
"RTN","ECXSCRP",53,0)
 ..I DPC'=PSC D SCCHK(DPC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",54,0)
 .I DSC'="",DSC'=SSC D SCCHK(DSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",55,0)
 W !!,?25,$S(CNTX:CNTX,1:"NO")_" PROBLEM CLINICS FOUND."
"RTN","ECXSCRP",56,0)
 Q
"RTN","ECXSCRP",57,0)
PRN ;print line
"RTN","ECXSCRP",58,0)
 Q:CLNF  I HTYP'="C" S STR="Not a Clinic" S CLNF=1
"RTN","ECXSCRP",59,0)
 I ($Y+3)>IOSL D PAGE,HDR I ECXOUT Q
"RTN","ECXSCRP",60,0)
 W !,IEN,?8,$E(NAM,1,24),?33,PSC,?38,SSC,?45,DPC,?50,DSC,?57,STR
"RTN","ECXSCRP",61,0)
 S ECXF=1
"RTN","ECXSCRP",62,0)
 Q
"RTN","ECXSCRP",63,0)
 ;
"RTN","ECXSCRP",64,0)
SCCHK(SCIEN,TYP) ;check stop code against file 40.7
"RTN","ECXSCRP",65,0)
 N SCN,RTY,CTY,SCI,INACT,ARRY,I,FLG
"RTN","ECXSCRP",66,0)
 K STR
"RTN","ECXSCRP",67,0)
 S CTY=$S(TYP="P":"^P^E^",1:"^S^E^")
"RTN","ECXSCRP",68,0)
 D SCIEN(SCIEN) I SCI="" D  Q
"RTN","ECXSCRP",69,0)
 .;S SCI=$$SCIEN(SCIEN) I SCI="" D  Q
"RTN","ECXSCRP",70,0)
 .I TYP="S" Q:SSC=PSC  Q:DSC=DPC
"RTN","ECXSCRP",71,0)
 .S STR=SCIEN_" Invalid Stop Code"
"RTN","ECXSCRP",72,0)
 S SCN=$G(^DIC(40.7,SCI,0)),RTY=$P(SCN,U,6),INACT=$P(SCN,U,3)
"RTN","ECXSCRP",73,0)
 I INACT D  Q
"RTN","ECXSCRP",74,0)
 .I INACT>DT S STR=SCIEN_" inactive in future"
"RTN","ECXSCRP",75,0)
 .E  S STR=SCIEN_" code is inactive"
"RTN","ECXSCRP",76,0)
 I $P(SCN,U,2)="" S STR="No pointer in file #40.7" Q
"RTN","ECXSCRP",77,0)
 I RTY="" S STR=SCIEN_" No restriction type" Q
"RTN","ECXSCRP",78,0)
 I CTY'[("^"_RTY_"^") D
"RTN","ECXSCRP",79,0)
 .S STR=SCIEN_" cannot be "_$S(TYP="P":"prim",1:"second")_"ary"
"RTN","ECXSCRP",80,0)
 Q
"RTN","ECXSCRP",81,0)
PAGE ;
"RTN","ECXSCRP",82,0)
 N SS,JJ,DIR,X,Y
"RTN","ECXSCRP",83,0)
 I $E(IOST,1,2)="C-" D
"RTN","ECXSCRP",84,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCRP",85,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECXOUT=1
"RTN","ECXSCRP",86,0)
 Q
"RTN","ECXSCRP",87,0)
 ;
"RTN","ECXSCRP",88,0)
SCIEN(SCIEN) ;Get stop code IEN
"RTN","ECXSCRP",89,0)
 I SCIEN="" Q ""
"RTN","ECXSCRP",90,0)
 ;S SCIEN=$O(^DIC(40.7,"C",SCIEN,0))
"RTN","ECXSCRP",91,0)
 ;Q SCIEN
"RTN","ECXSCRP",92,0)
 ;find active code if one
"RTN","ECXSCRP",93,0)
 S SCI=$O(^DIC(40.7,"C",SCIEN,0))
"RTN","ECXSCRP",94,0)
 I $O(^DIC(40.7,"C",SCIEN,SCI))'>0 Q
"RTN","ECXSCRP",95,0)
 ;must be some duplicates so find the best one
"RTN","ECXSCRP",96,0)
 S I=""
"RTN","ECXSCRP",97,0)
 F  S I=$O(^DIC(40.7,"C",SCIEN,I)) Q:'I  D
"RTN","ECXSCRP",98,0)
 . Q:'$D(^DIC(40.7,I,0))
"RTN","ECXSCRP",99,0)
 . S INACT=$P(^DIC(40.7,I,0),"^",3),FLG="A" D
"RTN","ECXSCRP",100,0)
 . . I INACT,((DT>INACT)!(DT=INACT)) S FLG="I"
"RTN","ECXSCRP",101,0)
 . S ARRY(FLG,I)=""
"RTN","ECXSCRP",102,0)
 I $D(ARRY("A")) S SCI=$O(ARRY("A",0))
"RTN","ECXSCRP",103,0)
 Q SCIEN
"RTN","ECXSCRP",104,0)
 ;
"RTN","ECXSCRP",105,0)
HDR ;header for data from file #728.44
"RTN","ECXSCRP",106,0)
 W @IOF
"RTN","ECXSCRP",107,0)
 W ECXRDT,?73,"Page: ",ECXPG,!
"RTN","ECXSCRP",108,0)
 W !,?18,"DSS IDENTIFIER NON-CONFORMING CLINICS REPORT",!,?32
"RTN","ECXSCRP",109,0)
 W $S(ECXPCF="A":"Active",ECXPCF="I":"Inactive",1:"All")_" Clinics",!
"RTN","ECXSCRP",110,0)
 W !,"CLINICS AND STOP CODES File (#728.44) - (Use 'Enter/Edit DSS "
"RTN","ECXSCRP",111,0)
 W "Stop Codes for",!,?25,"Clinics' [ECXSCEDIT] menu option to "
"RTN","ECXSCRP",112,0)
 W "make corrections)",!!,?45,"DSS",?50,"DSS"
"RTN","ECXSCRP",113,0)
 W !,?33,"PRIM",?38,"2NDARY",?45,"PRIM",?50,"2NDARY"
"RTN","ECXSCRP",114,0)
 W !,?8,$S(ECXPCF="B":"CLINIC NAME",1:""),?33,"STOP",?38,"CREDIT"
"RTN","ECXSCRP",115,0)
 W ?45,"STOP",?50,"CREDIT",?57,"REASON FOR NON-",!
"RTN","ECXSCRP",116,0)
 W "IEN #",?8,$S(ECXPCF="B":"(*currently inactive)",1:"CLINIC NAME")
"RTN","ECXSCRP",117,0)
 W ?33,"CODE",?38,"CODE",?45,"CODE",?50,"CODE",?57,"CONFORMANCE"
"RTN","ECXSCRP",118,0)
 W !,$E(LNS,1,80)
"RTN","ECXSCRP",119,0)
 S ECXPG=ECXPG+1
"RTN","ECXSCRP",120,0)
 Q
"RTN","ECXSTOP")
0^3^B11137426^B10000186
"RTN","ECXSTOP",1,0)
ECXSTOP ;ALB/DHE Stop Codes/Clinic Stops ; 6/16/09 11:41am
"RTN","ECXSTOP",2,0)
 ;;3.0;DSS EXTRACTS;**120,126**;Dec 22, 1997;Build 7
"RTN","ECXSTOP",3,0)
 ;
"RTN","ECXSTOP",4,0)
STOP(CODE,TYPE,CLIEN,DATE,IEN) ;api to return stop code information
"RTN","ECXSTOP",5,0)
 ;
"RTN","ECXSTOP",6,0)
 ;input:
"RTN","ECXSTOP",7,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSTOP",8,0)
 ;   type: type REQUIRED (Stop Code, DSS Stop Code, Credit Stop Code, DSS Credit Stop Code)
"RTN","ECXSTOP",9,0)
 ;  clien: clinic IEN in #728.44 (optional)
"RTN","ECXSTOP",10,0)
 ;   date: date of action (default today) (optional)
"RTN","ECXSTOP",11,0)
 ;    ien: ien from edit so lookup won't happen
"RTN","ECXSTOP",12,0)
 ;
"RTN","ECXSTOP",13,0)
 ;ecxerr(err) and warning(wrn) are existing arrays 
"RTN","ECXSTOP",14,0)
 ;make sure they exist!
"RTN","ECXSTOP",15,0)
 ;
"RTN","ECXSTOP",16,0)
 N XCODE,INACT,RTYPE
"RTN","ECXSTOP",17,0)
 Q:'CODE
"RTN","ECXSTOP",18,0)
 Q:(TYPE="")
"RTN","ECXSTOP",19,0)
 S CLIEN=$G(CLIEN)
"RTN","ECXSTOP",20,0)
 I $G(DATE)="" S DATE=DT
"RTN","ECXSTOP",21,0)
 S ERR=$G(ERR)+1,WRN=$G(WRN)+1
"RTN","ECXSTOP",22,0)
 K:ERR=1 ECXERR K:WRN=1 WARNING
"RTN","ECXSTOP",23,0)
 D:$G(IEN)="" FINDCOD I +IEN'>0 S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",24,0)
 I '$D(^DIC(40.7,IEN,0)) S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",25,0)
 I (+CODE'=CODE),($L(CODE)>3) S ECXERR(ERR)=CODE_" is an Invalid "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",26,0)
 S INACT=$P(^DIC(40.7,IEN,0),"^",3) I INACT,((DT>INACT)!(DT=INACT)) S ECXERR(ERR)=CODE_" is an Inactive "_TYPE S ERR=ERR+1
"RTN","ECXSTOP",27,0)
 S RTYPE=$P(^DIC(40.7,IEN,0),"^",6)
"RTN","ECXSTOP",28,0)
 I (TYPE="Stop Code"),(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",29,0)
 I TYPE="DSS Stop Code",(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",30,0)
 I TYPE="Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",31,0)
 I TYPE="DSS Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",32,0)
 ;I ($P(^DIC(40.7,IEN,0),"^",7)>DT) S WARNING(WRN)=CODE_" This "_TYPE_" has a Restriction Date in the future." S WRN=WRN+1
"RTN","ECXSTOP",33,0)
 I (TYPE="Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",3)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",34,0)
 I (TYPE="DSS Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",5)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match DSS Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",35,0)
 ;WARNING  ; check for inactivations in future
"RTN","ECXSTOP",36,0)
 I INACT>DT S WARNING(WRN)=CODE_" This "_TYPE_" has a pending Inactive Date." S WRN=WRN+1
"RTN","ECXSTOP",37,0)
 Q
"RTN","ECXSTOP",38,0)
FINDCOD ;find active code if one
"RTN","ECXSTOP",39,0)
 N ARRY,I,FLG,INACT
"RTN","ECXSTOP",40,0)
 S IEN=$O(^DIC(40.7,"C",CODE,0))
"RTN","ECXSTOP",41,0)
 I $O(^DIC(40.7,"C",CODE,IEN))'>0 Q
"RTN","ECXSTOP",42,0)
 ;must be some duplicates so find the best one
"RTN","ECXSTOP",43,0)
 S I=""
"RTN","ECXSTOP",44,0)
 F  S I=$O(^DIC(40.7,"C",CODE,I)) Q:'I  D
"RTN","ECXSTOP",45,0)
 . Q:'$D(^DIC(40.7,I,0))
"RTN","ECXSTOP",46,0)
 . S INACT=$P(^DIC(40.7,I,0),"^",3),FLG="A" D
"RTN","ECXSTOP",47,0)
 . . I INACT,((DT>INACT)!(DT=INACT)) S FLG="I"
"RTN","ECXSTOP",48,0)
 . S ARRY(FLG,I)=""
"RTN","ECXSTOP",49,0)
 I $D(ARRY("A")) S IEN=$O(ARRY("A",0))
"RTN","ECXSTOP",50,0)
 Q
"VER")
8.0^22.0
"BLD",8262,6)
^112
**END**
**END**
