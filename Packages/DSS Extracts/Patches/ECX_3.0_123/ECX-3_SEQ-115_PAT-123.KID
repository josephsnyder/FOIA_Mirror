Released ECX*3*123 SEQ #115
Extracted from mail message
**KIDS**:ECX*3.0*123^

**INSTALL NAME**
ECX*3.0*123
"BLD",7484,0)
ECX*3.0*123^DSS EXTRACTS^0^3100722^y
"BLD",7484,4,0)
^9.64PA^^
"BLD",7484,6.3)
8
"BLD",7484,"ABPKG")
n
"BLD",7484,"KRN",0)
^9.67PA^779.2^20
"BLD",7484,"KRN",.4,0)
.4
"BLD",7484,"KRN",.401,0)
.401
"BLD",7484,"KRN",.402,0)
.402
"BLD",7484,"KRN",.403,0)
.403
"BLD",7484,"KRN",.5,0)
.5
"BLD",7484,"KRN",.84,0)
.84
"BLD",7484,"KRN",3.6,0)
3.6
"BLD",7484,"KRN",3.8,0)
3.8
"BLD",7484,"KRN",9.2,0)
9.2
"BLD",7484,"KRN",9.8,0)
9.8
"BLD",7484,"KRN",9.8,"NM",0)
^9.68A^6^5
"BLD",7484,"KRN",9.8,"NM",2,0)
ECXFEKEY^^0^B48603574
"BLD",7484,"KRN",9.8,"NM",3,0)
ECXASUR^^0^B36103500
"BLD",7484,"KRN",9.8,"NM",4,0)
ECXAECS^^0^B40379474
"BLD",7484,"KRN",9.8,"NM",5,0)
ECXAECQ^^0^B46632186
"BLD",7484,"KRN",9.8,"NM",6,0)
ECXUCPT^^0^B3005384
"BLD",7484,"KRN",9.8,"NM","B","ECXAECQ",5)

"BLD",7484,"KRN",9.8,"NM","B","ECXAECS",4)

"BLD",7484,"KRN",9.8,"NM","B","ECXASUR",3)

"BLD",7484,"KRN",9.8,"NM","B","ECXFEKEY",2)

"BLD",7484,"KRN",9.8,"NM","B","ECXUCPT",6)

"BLD",7484,"KRN",19,0)
19
"BLD",7484,"KRN",19.1,0)
19.1
"BLD",7484,"KRN",101,0)
101
"BLD",7484,"KRN",409.61,0)
409.61
"BLD",7484,"KRN",771,0)
771
"BLD",7484,"KRN",779.2,0)
779.2
"BLD",7484,"KRN",870,0)
870
"BLD",7484,"KRN",8989.51,0)
8989.51
"BLD",7484,"KRN",8989.52,0)
8989.52
"BLD",7484,"KRN",8994,0)
8994
"BLD",7484,"KRN","B",.4,.4)

"BLD",7484,"KRN","B",.401,.401)

"BLD",7484,"KRN","B",.402,.402)

"BLD",7484,"KRN","B",.403,.403)

"BLD",7484,"KRN","B",.5,.5)

"BLD",7484,"KRN","B",.84,.84)

"BLD",7484,"KRN","B",3.6,3.6)

"BLD",7484,"KRN","B",3.8,3.8)

"BLD",7484,"KRN","B",9.2,9.2)

"BLD",7484,"KRN","B",9.8,9.8)

"BLD",7484,"KRN","B",19,19)

"BLD",7484,"KRN","B",19.1,19.1)

"BLD",7484,"KRN","B",101,101)

"BLD",7484,"KRN","B",409.61,409.61)

"BLD",7484,"KRN","B",771,771)

"BLD",7484,"KRN","B",779.2,779.2)

"BLD",7484,"KRN","B",870,870)

"BLD",7484,"KRN","B",8989.51,8989.51)

"BLD",7484,"KRN","B",8989.52,8989.52)

"BLD",7484,"KRN","B",8994,8994)

"BLD",7484,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7484,"QUES",0)
^9.62^^
"BLD",7484,"REQB",0)
^9.611^4^4
"BLD",7484,"REQB",1,0)
ECX*3.0*44^2
"BLD",7484,"REQB",2,0)
ECX*3.0*49^2
"BLD",7484,"REQB",3,0)
ECX*3.0*92^2
"BLD",7484,"REQB",4,0)
ECX*3.0*33^2
"BLD",7484,"REQB","B","ECX*3.0*33",4)

"BLD",7484,"REQB","B","ECX*3.0*44",1)

"BLD",7484,"REQB","B","ECX*3.0*49",2)

"BLD",7484,"REQB","B","ECX*3.0*92",3)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
123^3100722
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","ECXAECQ")
0^5^B46632186^B46660004
"RTN","ECXAECQ",1,0)
ECXAECQ ;ALB/JAP - ECQ Extract Audit Report ; 5/22/02 3:47pm
"RTN","ECXAECQ",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,35,43,44,123**;Dec 22, 1997;Build 8
"RTN","ECXAECQ",3,0)
 ;
"RTN","ECXAECQ",4,0)
EN ;entry point for ECQ extract audit report
"RTN","ECXAECQ",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,ECXQV,ECXPOS,ECXYR,ECXMTH,ECXPFLG,ECXOPT,QFLG,Q2FLG
"RTN","ECXAECQ",6,0)
 S (ECXERR,QFLG)=0
"RTN","ECXAECQ",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECQ",8,0)
 S ECXHEAD="ECQ",ECXAUD=0
"RTN","ECXAECQ",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECQ",10,0)
 ;select extract
"RTN","ECXAECQ",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECQ",12,0)
 Q:ECXERR
"RTN","ECXAECQ",13,0)
 ;determine if version 3 and using EC National Procedure Codes for current fiscal year
"RTN","ECXAECQ",14,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXAECQ",15,0)
 S ECXQV=$G(ARR("VERSION"))
"RTN","ECXAECQ",16,0)
 S ECXPOS=29
"RTN","ECXAECQ",17,0)
 I +ECXQV=3 D 
"RTN","ECXAECQ",18,0)
 .S ECXYR=$E($P(ECXARRAY("START"),",",2),4,5)
"RTN","ECXAECQ",19,0)
 .S ECXMTH=$E(ECXARRAY("START"),1,3)
"RTN","ECXAECQ",20,0)
 .I (ECXMTH="OCT")!(ECXMTH="NOV")!(ECXMTH="DEC") S ECXYR=ECXYR+1
"RTN","ECXAECQ",21,0)
 .S ECDA=0 F  S ECDA=$O(^ACK(509850.8,ECDA)) Q:'ECDA!QFLG  S ECDIV=0 F  S ECDIV=$O(^ACK(509850.8,ECDA,2,ECDIV)) Q:'ECDIV!QFLG  D
"RTN","ECXAECQ",22,0)
 ..S ECCL=0 F  S ECCL=$O(^ACK(509850.8,ECDA,2,ECDIV,2,"B",ECXYR,ECCL)) Q:'ECCL!QFLG  D
"RTN","ECXAECQ",23,0)
 ...S ECXPFLG=$P($G(^ACK(509850.8,ECDA,2,ECDIV,2,ECCL,0)),U,2)
"RTN","ECXAECQ",24,0)
 ...I ECXPFLG D  S QFLG=1
"RTN","ECXAECQ",25,0)
 ....W !!,"Your site has division(s) which are using EC National Procedure Codes for the",!,"fiscal year covering the time period of this extract."
"RTN","ECXAECQ",26,0)
 ....W !!,"You have the option to display either EC National Procedure Codes or CPT Codes",!,"for these division(s)."
"RTN","ECXAECQ",27,0)
 ....F  D  Q:Q2FLG
"RTN","ECXAECQ",28,0)
 .....S Q2FLG=1
"RTN","ECXAECQ",29,0)
 .....S DIR(0)="S^1:EC National Procedure Codes;2:CPT Codes",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y
"RTN","ECXAECQ",30,0)
 .....I X["^" W !!,"This is a required response" S Q2FLG=0
"RTN","ECXAECQ",31,0)
 ....I ECXOPT=1 S ECXPOS=12
"RTN","ECXAECQ",32,0)
 ;currently, quasar does not accommodate multi-divisional sites
"RTN","ECXAECQ",33,0)
 S ECXALL=0
"RTN","ECXAECQ",34,0)
 D ECQ^ECXDVSN1(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECQ",35,0)
 I ECXERR=1 D  Q
"RTN","ECXAECQ",36,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECQ",37,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECQ",38,0)
 ;determine output device and queue if requested
"RTN","ECXAECQ",39,0)
 W !
"RTN","ECXAECQ",40,0)
 S ECXPGM="PROCESS^ECXAECQ",ECXDESC="ECQ Extract Audit Report"
"RTN","ECXAECQ",41,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXPOS")=""
"RTN","ECXAECQ",42,0)
 W !
"RTN","ECXAECQ",43,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECQ",44,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECQ",45,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECQ",46,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECQ",47,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECQ",48,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECQ",49,0)
 .D PROCESS^ECXAECQ
"RTN","ECXAECQ",50,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECQ",51,0)
 D HOME^%ZIS
"RTN","ECXAECQ",52,0)
 D AUDIT^ECXKILL
"RTN","ECXAECQ",53,0)
 Q
"RTN","ECXAECQ",54,0)
 ;
"RTN","ECXAECQ",55,0)
PROCESS ;process data in file #727.825
"RTN","ECXAECQ",56,0)
 N X,Y,W,ADIV,DATA,DATE,DIV,DIVACK,IEN,LOC,ECNIEN
"RTN","ECXAECQ",57,0)
 N UNIT,UNITN,VOL,PROC,PROCN,SDIV,QQFLG,CNT
"RTN","ECXAECQ",58,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXPROC")
"RTN","ECXAECQ",59,0)
 S (CNT,QQFLG)=0,ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECQ",60,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y,X=ECXARRAY("END")
"RTN","ECXAECQ",61,0)
 D ^%DT S ECXEND=Y
"RTN","ECXAECQ",62,0)
 ;get run date in external format
"RTN","ECXAECQ",63,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECQ",64,0)
 ;get the dss unit links for this division/site
"RTN","ECXAECQ",65,0)
 S DIV=0
"RTN","ECXAECQ",66,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D
"RTN","ECXAECQ",67,0)
 .S DIVACK=$P(ECXDIV(DIV),U,1),ECXLINK(DIV)=^ACK(509850.8,DIVACK,"DSS")
"RTN","ECXAECQ",68,0)
 ;get extract records in date range
"RTN","ECXAECQ",69,0)
 S IEN=""
"RTN","ECXAECQ",70,0)
 F  S IEN=$O(^ECX(727.825,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECQ",71,0)
 .S DATA=^ECX(727.825,IEN,0),DIV=$P(DATA,U,4),DATE=$P(DATA,U,9)
"RTN","ECXAECQ",72,0)
 .S ADIV=$P(^ECX(727.825,IEN,1),U,11) S:ADIV="" ADIV="UNK"
"RTN","ECXAECQ",73,0)
 .I +ADIV S X=^DG(40.8,ADIV,0),ADIV=$P(X,U)_" ("_$P(X,U,2)_")"
"RTN","ECXAECQ",74,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECQ",75,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECQ",76,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAECQ",77,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECQ",78,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECQ",79,0)
 ..;any quasar site that doesn't have links to dss is identified by "xx"
"RTN","ECXAECQ",80,0)
 ..S UNIT=$P(DATA,U,10)
"RTN","ECXAECQ",81,0)
 ..S LOC=$S(UNIT=$P(ECXLINK(DIV),U,1):"A",UNIT=$P(ECXLINK(DIV),U,2):"S",1:"XX")
"RTN","ECXAECQ",82,0)
 ..;any invalid cpt code is identified as "xxxxx"
"RTN","ECXAECQ",83,0)
 ..S PROC=$E($P(DATA,U,ECXPOS),1,5),VOL=$P(DATA,U,13),PROCN=""
"RTN","ECXAECQ",84,0)
 ..I ECXPOS=12 D
"RTN","ECXAECQ",85,0)
 ...S ECNIEN=0,ECNIEN=$O(^EC(725,"D",PROC,ECNIEN)) Q:'ECNIEN
"RTN","ECXAECQ",86,0)
 ...S PROCN=$P($G(^EC(725,+ECNIEN,0)),U)
"RTN","ECXAECQ",87,0)
 ..I PROCN="" D
"RTN","ECXAECQ",88,0)
 ...S ECNIEN=0,ECNIEN=$$CODEN^ICPTCOD(PROC) I +ECNIEN>0 S PROCN=$P($$CPT^ICPTCOD(PROC,DATE),U,3)
"RTN","ECXAECQ",89,0)
 ..S PROC="A"_PROC S:VOL="" VOL=1
"RTN","ECXAECQ",90,0)
 ..S:PROCN="" PROCN="Unknown"
"RTN","ECXAECQ",91,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,ADIV,LOC,PROC)) S ^TMP($J,"ECXAUD",DIV,ADIV,LOC,PROC)=0_U_PROCN
"RTN","ECXAECQ",92,0)
 ..S $P(^(PROC),U,1)=$P(^TMP($J,"ECXAUD",DIV,ADIV,LOC,PROC),U,1)+VOL,CNT=CNT+1
"RTN","ECXAECQ",93,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAECQ",94,0)
 ;print the report
"RTN","ECXAECQ",95,0)
 D PRINT
"RTN","ECXAECQ",96,0)
 D AUDIT^ECXKILL
"RTN","ECXAECQ",97,0)
 Q
"RTN","ECXAECQ",98,0)
 ;
"RTN","ECXAECQ",99,0)
PRINT ;print quasar data by site and dss unit order
"RTN","ECXAECQ",100,0)
 N JJ,SS,LN,P,LOC,UNITN,PG,QFLG,GTOT,STOT,TOT,PROC,PROCN
"RTN","ECXAECQ",101,0)
 N DIR,DIRUT,DIV,DIVNM,DTOUT,DUOUT
"RTN","ECXAECQ",102,0)
 U IO
"RTN","ECXAECQ",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECQ",104,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECQ",105,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECQ",106,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"
"RTN","ECXAECQ",107,0)
 .D HEADER Q:QFLG
"RTN","ECXAECQ",108,0)
 .S GTOT=0,STOT("A")=0,STOT("S")=0,STOT("XX")=0
"RTN","ECXAECQ",109,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECQ",110,0)
 ..W !!,?5,"No data available for this QUASAR site.",!!
"RTN","ECXAECQ",111,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S ADIV="" D
"RTN","ECXAECQ",112,0)
 ..F  S ADIV=$O(^TMP($J,"ECXAUD",DIV,ADIV)) Q:ADIV=""  S LOC="" D  Q:QFLG
"RTN","ECXAECQ",113,0)
 ...F  S LOC=$O(^TMP($J,"ECXAUD",DIV,ADIV,LOC)) Q:LOC=""  D  Q:QFLG
"RTN","ECXAECQ",114,0)
 ....;write the unit name
"RTN","ECXAECQ",115,0)
 ....S UNITN=$S(LOC="A":"Audiology",LOC="S":"Speech Pathology",1:"Unknown"),PROC=""
"RTN","ECXAECQ",116,0)
 ....D:($Y+2>IOSL) HEADER Q:QFLG  W !,"Division: ("_ADIV_")",!?20,UNITN
"RTN","ECXAECQ",117,0)
 ....F  S PROC=$O(^TMP($J,"ECXAUD",DIV,ADIV,LOC,PROC)) Q:PROC=""  D  Q:QFLG
"RTN","ECXAECQ",118,0)
 .....S TOT=+^TMP($J,"ECXAUD",DIV,ADIV,LOC,PROC),PROCN=$P(^(PROC),U,2),P=$E(PROC,2,99)
"RTN","ECXAECQ",119,0)
 .....S SDIV(ADIV,LOC)=$G(SDIV(ADIV,LOC))+TOT
"RTN","ECXAECQ",120,0)
 .....S STOT(LOC)=STOT(LOC)+TOT,GTOT=GTOT+TOT
"RTN","ECXAECQ",121,0)
 .....D:($Y+3>IOSL) HEADER Q:QFLG  W !,?25,P,?35,$E(PROCN,1,30),?68,$$RJ^XLFSTR(TOT,5," ")
"RTN","ECXAECQ",122,0)
 ....;write the unit subtotal
"RTN","ECXAECQ",123,0)
 ....D:($Y+4>IOSL) HEADER Q:QFLG
"RTN","ECXAECQ",124,0)
 ....W !,?25,$E(LN,1,54)
"RTN","ECXAECQ",125,0)
 ....W !,"Volume for "_UNITN_":",?68,$$RJ^XLFSTR(+$G(SDIV(ADIV,LOC)),5," "),!!
"RTN","ECXAECQ",126,0)
 .;write the division grandtotal
"RTN","ECXAECQ",127,0)
 .D:($Y+5>IOSL) HEADER Q:QFLG
"RTN","ECXAECQ",128,0)
 .W !!,"Total Volume for Audiology:",?68,$$RJ^XLFSTR(STOT("A"),5," ")
"RTN","ECXAECQ",129,0)
 .W !,"Total Volume for Speech Pathology:",?68,$$RJ^XLFSTR(STOT("S"),5," ")
"RTN","ECXAECQ",130,0)
 .W !!,"Grand Total for Site "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECQ",131,0)
 ;print the audit descriptive narrative
"RTN","ECXAECQ",132,0)
 I $E(IOST)'="C" D
"RTN","ECXAECQ",133,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECQ",134,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECQ",135,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAECQ",136,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECQ",137,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECQ",138,0)
 .W !!,LN,!!
"RTN","ECXAECQ",139,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECQ",140,0)
 I ($E(IOST)="C"),('QFLG) D
"RTN","ECXAECQ",141,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECQ",142,0)
 .S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECQ",143,0)
 Q
"RTN","ECXAECQ",144,0)
 ;
"RTN","ECXAECQ",145,0)
HEADER ;header and page control
"RTN","ECXAECQ",146,0)
 N JJ,SS
"RTN","ECXAECQ",147,0)
 I ($E(IOST)="C"),('QFLG) D
"RTN","ECXAECQ",148,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECQ",149,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECQ",150,0)
 Q:QFLG
"RTN","ECXAECQ",151,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECQ",152,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECQ",153,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXAECQ",154,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECQ",155,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXAECQ",156,0)
 W !,"QUASAR Site:         "_$P(ECXDIV(DIV),U,2)_"("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAECQ",157,0)
 W !!,"DSS Unit",?25,"Procedure",?68,"Volume"
"RTN","ECXAECQ",158,0)
 W !,LN
"RTN","ECXAECQ",159,0)
 Q
"RTN","ECXAECS")
0^4^B40379474^B40273391
"RTN","ECXAECS",1,0)
ECXAECS ;ALB/JAP - ECS Extract Audit Report ;Oct 15, 1997
"RTN","ECXAECS",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,123**;Dec 22, 1997;Build 8
"RTN","ECXAECS",3,0)
 ;
"RTN","ECXAECS",4,0)
EN ;entry point for ECS extract audit report
"RTN","ECXAECS",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,CNT
"RTN","ECXAECS",6,0)
 S ECXERR=0
"RTN","ECXAECS",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECS",8,0)
 S ECXHEAD="ECS",ECXAUD=0
"RTN","ECXAECS",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECS",10,0)
 ;select extract
"RTN","ECXAECS",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECS",12,0)
 Q:ECXERR
"RTN","ECXAECS",13,0)
 ;determine if facility is multidivisional for event capture
"RTN","ECXAECS",14,0)
 S CNT=0,ECXD="" F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S CNT=CNT+1
"RTN","ECXAECS",15,0)
 S ECXALL=1
"RTN","ECXAECS",16,0)
 I CNT>1 D
"RTN","ECXAECS",17,0)
 .W !!
"RTN","ECXAECS",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all Locations"
"RTN","ECXAECS",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAECS",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAECS",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAECS",22,0)
 .S ECXALL=Y
"RTN","ECXAECS",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",26,0)
 ;select divisions/sites; all ec locations if ecxall=1
"RTN","ECXAECS",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",28,0)
 D ECS^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECS",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",32,0)
 ;determine output device and queue if requested
"RTN","ECXAECS",33,0)
 W !
"RTN","ECXAECS",34,0)
 S ECXPGM="PROCESS^ECXAECS",ECXDESC="ECS Extract Audit Report"
"RTN","ECXAECS",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAECS",36,0)
 W !
"RTN","ECXAECS",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECS",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECS",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECS",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECS",43,0)
 .D PROCESS^ECXAECS
"RTN","ECXAECS",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECS",45,0)
 D HOME^%ZIS
"RTN","ECXAECS",46,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",47,0)
 Q
"RTN","ECXAECS",48,0)
 ;
"RTN","ECXAECS",49,0)
PROCESS ;process data in file #727.815
"RTN","ECXAECS",50,0)
 N X,Y,W,DATA,DATE,DIV,IEN,UNIT,UNITN,CAT,CATN,VOL,PROC,PROCN,PIEN,PRI,PRXF,PRSYN,QQFLG,CNT
"RTN","ECXAECS",51,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXAECS",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXAECS",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECS",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",55,0)
 ;get run date in external format
"RTN","ECXAECS",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECS",57,0)
 ;get records in date range
"RTN","ECXAECS",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.815,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECS",59,0)
 .S DATA=^ECX(727.815,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAECS",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECS",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECS",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAECS",63,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECS",64,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECS",65,0)
 ..S UNIT=$P(DATA,U,10),UNITN=$P($G(^ECD(UNIT,0)),U,1),UNIT(UNITN)=UNIT
"RTN","ECXAECS",66,0)
 ..;if no category, then cat=0
"RTN","ECXAECS",67,0)
 ..S CAT=+$P(DATA,U,11),CATN="" S:+CAT CATN=$P($G(^EC(726,CAT,0)),U,1) S:CATN="" CATN="Unknown"
"RTN","ECXAECS",68,0)
 ..S VOL=$P(DATA,U,13) S:VOL="" VOL=1 S PROC=$E($P(DATA,U,12),1,5)
"RTN","ECXAECS",69,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) S ^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)=0
"RTN","ECXAECS",70,0)
 ..S ^(PROC)=^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)+VOL,CNT=CNT+1
"RTN","ECXAECS",71,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",72,0)
 ..;get the procedure name and setup in global array
"RTN","ECXAECS",73,0)
 ..S PIEN=0,PROCN="" S:PROC'?5N PIEN=$O(^EC(725,"E",PROC,""))
"RTN","ECXAECS",74,0)
 ..;procedures from file #725
"RTN","ECXAECS",75,0)
 ..I +PIEN>0 D
"RTN","ECXAECS",76,0)
 ...S PROCN=$P($G(^EC(725,PIEN,0)),U,1)
"RTN","ECXAECS",77,0)
 ...S PRXF=PIEN_";EC(725,"
"RTN","ECXAECS",78,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",79,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",80,0)
 ..;procedures from file #81
"RTN","ECXAECS",81,0)
 ..I PIEN=0,PROCN="" D
"RTN","ECXAECS",82,0)
 ...S PIEN=$$CODEN^ICPTCOD(PROC) I +PIEN>0 S PROCN=$P($$CPT^ICPTCOD(PROC,DATE),U,3)
"RTN","ECXAECS",83,0)
 ...S PRXF=PIEN_";ICPT("
"RTN","ECXAECS",84,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",85,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",86,0)
 ..S:PROCN="" PROCN="Unknown"
"RTN","ECXAECS",87,0)
 ..S ^TMP($J,"ECXPROC",PROC)=PROCN
"RTN","ECXAECS",88,0)
 ;print the report
"RTN","ECXAECS",89,0)
 D PRINT
"RTN","ECXAECS",90,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",91,0)
 Q
"RTN","ECXAECS",92,0)
 ;
"RTN","ECXAECS",93,0)
PRINT ;print event capture data by location/division and dss unit order
"RTN","ECXAECS",94,0)
 N JJ,SS,P,PN,LN,NM,DIV,DIVNM,PG,QFLG,GTOT,PROC,STOT,TOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAECS",95,0)
 U IO
"RTN","ECXAECS",96,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",97,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECS",98,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECS",99,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT=0 D HEADER
"RTN","ECXAECS",100,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECS",101,0)
 ..W !!,?5,"No data available for this Event Capture Location.",!!
"RTN","ECXAECS",102,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S UNITN="" F  S UNITN=$O(^TMP($J,"ECXAUD",DIV,UNITN)) Q:UNITN=""  D  Q:QFLG
"RTN","ECXAECS",103,0)
 ..S STOT=0,UNIT=UNIT(UNITN),CATN=""
"RTN","ECXAECS",104,0)
 ..;write the unit name
"RTN","ECXAECS",105,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,UNITN_" ("_UNIT_")",!
"RTN","ECXAECS",106,0)
 ..;initialize the proc array and set totals in array
"RTN","ECXAECS",107,0)
 ..F  S CATN=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN)) Q:CATN=""  K PROC S PROC="" D  Q:QFLG
"RTN","ECXAECS",108,0)
 ...;write the category name
"RTN","ECXAECS",109,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(CATN,1,25)
"RTN","ECXAECS",110,0)
 ...F  S PROC=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) Q:PROC=""  S TOT=^(PROC) D
"RTN","ECXAECS",111,0)
 ....S STOT=STOT+TOT,GTOT=GTOT+TOT,PROCN=""
"RTN","ECXAECS",112,0)
 ....I $D(^TMP($J,"ECXPROC",PROC)) S PROCN=^(PROC)
"RTN","ECXAECS",113,0)
 ....S PROC($$LJ^XLFSTR(PROC,6," ")_" "_PROCN)=TOT
"RTN","ECXAECS",114,0)
 ...S PN="" F  S PN=$O(PROC(PN)) Q:PN=""  S TOT=PROC(PN) D  Q:QFLG
"RTN","ECXAECS",115,0)
 ....;write procedure and total
"RTN","ECXAECS",116,0)
 ....W ?35,$E(PN,1,30),?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXAECS",117,0)
 ..;write the unit subtotal
"RTN","ECXAECS",118,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(LN,1,74)
"RTN","ECXAECS",119,0)
 ..W !,"Total Volume for Unit "_UNITN_" ("_UNIT_"):",?68,$$RJ^XLFSTR(STOT,5," "),!
"RTN","ECXAECS",120,0)
 .;write the division grandtotal
"RTN","ECXAECS",121,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Location "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECS",122,0)
 ;print the audit descriptive narrative
"RTN","ECXAECS",123,0)
 I $E(IOST)'="C" D
"RTN","ECXAECS",124,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECS",125,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",126,0)
 .W !,"DSS Extract Log #:      "_ECXEXT
"RTN","ECXAECS",127,0)
 .W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",128,0)
 .W !,"Report Run Date/Time:   "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECS",129,0)
 .W !!,LN,!!
"RTN","ECXAECS",130,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECS",131,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAECS",132,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",133,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAECS",134,0)
 Q
"RTN","ECXAECS",135,0)
 ;
"RTN","ECXAECS",136,0)
HEADER ;header and page control
"RTN","ECXAECS",137,0)
 N JJ,SS
"RTN","ECXAECS",138,0)
 I $E(IOST)="C" D
"RTN","ECXAECS",139,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",140,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECS",141,0)
 Q:QFLG
"RTN","ECXAECS",142,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECS",143,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",144,0)
 W !,"DSS Extract Log #:      "_ECXARRAY("EXTRACT")
"RTN","ECXAECS",145,0)
 W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",146,0)
 W !,"Report Run Date/Time:   "_ECXRUN
"RTN","ECXAECS",147,0)
 W !,"Event Capture Location: "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?68,"Page: "_PG
"RTN","ECXAECS",148,0)
 W !!,"DSS Unit",!,?5,"Category",?35,"Procedure",?68,"Volume"
"RTN","ECXAECS",149,0)
 W !,LN,!
"RTN","ECXAECS",150,0)
 Q
"RTN","ECXASUR")
0^3^B36103500^B36233284
"RTN","ECXASUR",1,0)
ECXASUR ;ALB/JAP - SUR Extract Audit Report ; 4/26/02 11:16am
"RTN","ECXASUR",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,44,123**;Dec 22, 1997;Build 8
"RTN","ECXASUR",3,0)
 ;
"RTN","ECXASUR",4,0)
EN ;entry point for SUR extract audit report
"RTN","ECXASUR",5,0)
 ;select extract
"RTN","ECXASUR",6,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,SITES,ECX
"RTN","ECXASUR",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXASUR",8,0)
 S ECXERR=0
"RTN","ECXASUR",9,0)
 S ECXHEAD="SUR",ECXAUD=0
"RTN","ECXASUR",10,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXASUR",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXASUR",12,0)
 Q:ECXERR
"RTN","ECXASUR",13,0)
 ;determine if facility is multidivisional
"RTN","ECXASUR",14,0)
 K ECX D FILE^DID(133,,"ENTRIES","ECX") S SITES=ECX("ENTRIES") K ECX
"RTN","ECXASUR",15,0)
 I SITES=1 S ECXALL=1
"RTN","ECXASUR",16,0)
 I SITES>1 D
"RTN","ECXASUR",17,0)
 .W !!
"RTN","ECXASUR",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXASUR",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXASUR",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXASUR",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXASUR",22,0)
 .S ECXALL=Y
"RTN","ECXASUR",23,0)
 I ECXERR=1 D  Q
"RTN","ECXASUR",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXASUR",27,0)
 W !
"RTN","ECXASUR",28,0)
 S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END")
"RTN","ECXASUR",29,0)
 D SUR^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXASUR",30,0)
 I ECXERR=1 D  Q
"RTN","ECXASUR",31,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",32,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",33,0)
 ;determine output device and queue if requested
"RTN","ECXASUR",34,0)
 S ECXPGM="PROCESS^ECXASUR",ECXDESC="SUR Extract Audit Report"
"RTN","ECXASUR",35,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXASUR",36,0)
 W !
"RTN","ECXASUR",37,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXASUR",38,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXASUR",39,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXASUR",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXASUR",41,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXASUR",42,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXASUR",43,0)
 .D PROCESS^ECXASUR
"RTN","ECXASUR",44,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXASUR",45,0)
 D HOME^%ZIS
"RTN","ECXASUR",46,0)
 D AUDIT^ECXKILL
"RTN","ECXASUR",47,0)
 Q
"RTN","ECXASUR",48,0)
 ;
"RTN","ECXASUR",49,0)
PROCESS ;process data in file #727.811
"RTN","ECXASUR",50,0)
 N X,Y,JJ,DIV,IEN,DATA,DATE,CASE,CASES,OR,LOC,PROC,PROCN,PSI,CAN,CPT,DIC,QQFLG,CNT
"RTN","ECXASUR",51,0)
 K ^TMP($J,"ECXAUD"),^TMP($J,"ECXS")
"RTN","ECXASUR",52,0)
 S (CNT,QQFLG)=0
"RTN","ECXASUR",53,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXASUR",54,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXASUR",55,0)
 ;get run date in external format
"RTN","ECXASUR",56,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXASUR",57,0)
 ;get records within date range and surgery site(s)
"RTN","ECXASUR",58,0)
 S IEN="" F  S IEN=$O(^ECX(727.811,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXASUR",59,0)
 .S DATA=^ECX(727.811,IEN,0),DATA1=^(1),DATE=$P(DATA,U,9)
"RTN","ECXASUR",60,0)
 .S DIV=$P(DATA,U,4)
"RTN","ECXASUR",61,0)
 .;convert free text date to fm internal format date
"RTN","ECXASUR",62,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXASUR",63,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXASUR",64,0)
 .Q:'$D(ECXDIV(DIV))
"RTN","ECXASUR",65,0)
 .Q:$P(DATA,U,17)="I"
"RTN","ECXASUR",66,0)
 .S CASE=$P(DATA,U,10),OR=$P(DATA,U,12),PSI=$P(DATA,U,17)
"RTN","ECXASUR",67,0)
 .S CAN=$P(DATA,U,28)
"RTN","ECXASUR",68,0)
 .S PROC=$E($P(DATA1,U,11),1,5)
"RTN","ECXASUR",69,0)
 .Q:(PROC="")&(PSI="I")
"RTN","ECXASUR",70,0)
 .S (CPT,PROCN)="" I PROC]"" D
"RTN","ECXASUR",71,0)
 ..;from cpt code get procedure name; variable cpt should be same as variable proc
"RTN","ECXASUR",72,0)
 ..S Y=$$CPT^ICPTCOD(PROC,DATE)
"RTN","ECXASUR",73,0)
 ..S CPT=$P($G(Y),U,2),PROCN=$P($G(Y),U,3)
"RTN","ECXASUR",74,0)
 .S:CPT="" CPT="Unknown" S:PROCN="" PROCN="Unknown" S CPT="A"_CPT
"RTN","ECXASUR",75,0)
 .S LOC=$S(OR="":2,1:1)
"RTN","ECXASUR",76,0)
 .I CAN'="" S LOC=3
"RTN","ECXASUR",77,0)
 .;tally procedures by location and division
"RTN","ECXASUR",78,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,LOC,CPT)) S ^TMP($J,"ECXAUD",DIV,LOC,CPT)=0_U_PROCN
"RTN","ECXASUR",79,0)
 .S $P(^(CPT),U,1)=$P(^TMP($J,"ECXAUD",DIV,LOC,CPT),U,1)+1,CNT=CNT+1
"RTN","ECXASUR",80,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",81,0)
 .I '$D(^TMP($J,"ECXS",DIV,LOC,CASE)) S ^TMP($J,"ECXS",DIV,LOC,CASE)=""
"RTN","ECXASUR",82,0)
 ;total cases for each division and location
"RTN","ECXASUR",83,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",84,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXS",DIV)) Q:DIV=""  F LOC=1:1:3 S CASES(DIV,LOC)=0,CASE="" D
"RTN","ECXASUR",85,0)
 .F  S CASE=$O(^TMP($J,"ECXS",DIV,LOC,CASE)) Q:CASE=""  S CASES(DIV,LOC)=CASES(DIV,LOC)+1
"RTN","ECXASUR",86,0)
 K ^TMP($J,"ECXS")
"RTN","ECXASUR",87,0)
 ;print the report
"RTN","ECXASUR",88,0)
 D PRINT
"RTN","ECXASUR",89,0)
 D AUDIT^ECXKILL
"RTN","ECXASUR",90,0)
 Q
"RTN","ECXASUR",91,0)
 ;
"RTN","ECXASUR",92,0)
PRINT ;print the SUR audit report by location and division
"RTN","ECXASUR",93,0)
 N LN,PG,QFLG,TOT,GTOT,DIVNM,CPT,CPTN,PROCN,LOCNM,LOCNMC,SS,DIR,DR,DIRUT,DTOUT,DUOUT
"RTN","ECXASUR",94,0)
 U IO
"RTN","ECXASUR",95,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXASUR",96,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXASUR",97,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  F LOC=1:1:3 D  Q:QFLG
"RTN","ECXASUR",98,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT(LOC)=0
"RTN","ECXASUR",99,0)
 .S LOCNM=$S(LOC=1:"O.R. Surgical Procedures",LOC=2:"Non-O.R. Surgical Procedures",1:"Cancelled/Aborted Procedures")
"RTN","ECXASUR",100,0)
 .D HEADER
"RTN","ECXASUR",101,0)
 .I '$D(^TMP($J,"ECXAUD",DIV,LOC)) D
"RTN","ECXASUR",102,0)
 ..W !!,?3,"No data available for "_LOCNM_".",!!
"RTN","ECXASUR",103,0)
 .I $D(^TMP($J,"ECXAUD",DIV,LOC)) S CPT="" F  S CPT=$O(^TMP($J,"ECXAUD",DIV,LOC,CPT)) Q:CPT=""  S TOT(LOC)=$P(^(CPT),U,1),PROCN=$P(^(CPT),U,2),CPTN=$E(CPT,2,99) D  Q:QFLG
"RTN","ECXASUR",104,0)
 ..S GTOT(LOC)=GTOT(LOC)+TOT(LOC)
"RTN","ECXASUR",105,0)
 ..;write procedure and total
"RTN","ECXASUR",106,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,CPTN,?14,$E(PROCN,1,40),?63,$$RJ^XLFSTR(TOT(LOC),5," ")
"RTN","ECXASUR",107,0)
 .;write the division totals
"RTN","ECXASUR",108,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,$E(LN,1,65)
"RTN","ECXASUR",109,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"For Division "_DIVNM_"--"
"RTN","ECXASUR",110,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,"Total "_LOCNM_":",?63,$$RJ^XLFSTR(GTOT(LOC),5," ")
"RTN","ECXASUR",111,0)
 .S LOCNMC=$P(LOCNM,"Pro",1) S:'$D(CASES(DIV,LOC)) CASES(DIV,LOC)=0
"RTN","ECXASUR",112,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !,?3,"Total "_LOCNMC_"Cases:",?63,$$RJ^XLFSTR(CASES(DIV,LOC),5," ")
"RTN","ECXASUR",113,0)
 ;print the audit descriptive narrative
"RTN","ECXASUR",114,0)
 I $E(IOST)'="C" D
"RTN","ECXASUR",115,0)
 .W @IOF S PG=PG+1
"RTN","ECXASUR",116,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXASUR",117,0)
 .W !,"DSS Extract Log #:    "_ECXEXT
"RTN","ECXASUR",118,0)
 .W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXASUR",119,0)
 .W !,"Report Run Date/Time: "_ECXRUN,?68,"Page: ",PG
"RTN","ECXASUR",120,0)
 .W !!,LN,!!
"RTN","ECXASUR",121,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXASUR",122,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXASUR",123,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXASUR",124,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXASUR",125,0)
 Q
"RTN","ECXASUR",126,0)
 ;
"RTN","ECXASUR",127,0)
HEADER ;header and page control
"RTN","ECXASUR",128,0)
 N JJ,SS
"RTN","ECXASUR",129,0)
 I $E(IOST)="C" D
"RTN","ECXASUR",130,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXASUR",131,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXASUR",132,0)
 Q:QFLG
"RTN","ECXASUR",133,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXASUR",134,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXASUR",135,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXASUR",136,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXASUR",137,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXASUR",138,0)
 W !,"Surgery Division:     "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?63,"Page: "_PG
"RTN","ECXASUR",139,0)
 W !!,LOCNM
"RTN","ECXASUR",140,0)
 W !,?3,"CPT Code",?14,"Procedure",?63,"# of Procedures"
"RTN","ECXASUR",141,0)
 W !,LN,!
"RTN","ECXASUR",142,0)
 Q
"RTN","ECXFEKEY")
0^2^B48603574^B48332216
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ] ; 8/15/06 9:10am
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,40,84,92,123**;Dec 22, 1997;Build 8
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 W !!,"Print list of Feeder Keys:",!
"RTN","ECXFEKEY",5,0)
 W !,"Select : 1. CLI",!,?9,"2. ECS",!,?9,"3. LAB",!,?9,"4. NUR",!,?9,"5. NUT",!,?9,"6. PHA",!,?9,"7. RAD",!,?9,"8. SUR",! S DIR(0)="L^1:8" D ^DIR Q:$D(DIRUT)
"RTN","ECXFEKEY",6,0)
 S ECY=Y
"RTN","ECXFEKEY",7,0)
 I ECY["2" D
"RTN","ECXFEKEY",8,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",9,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",10,0)
 S:ECY["3" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",11,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",12,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",13,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS
"RTN","ECXFEKEY",14,0)
 I POP W !,"NO DEVICE SELECTED!!" G QUIT
"RTN","ECXFEKEY",15,0)
 I $D(IO("Q")) K IO("Q") D  G QUIT
"RTN","ECXFEKEY",16,0)
 .S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)"
"RTN","ECXFEKEY",17,0)
 .S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECPHA2")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")=""
"RTN","ECXFEKEY",18,0)
 .D ^%ZTLOAD I $D(ZTSK) W !,"Queued Task #: "_ZTSK
"RTN","ECXFEKEY",19,0)
 .D HOME^%ZIS K ZTSK
"RTN","ECXFEKEY",20,0)
 ;
"RTN","ECXFEKEY",21,0)
START ;queued entry point
"RTN","ECXFEKEY",22,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",23,0)
 K ^TMP($J)
"RTN","ECXFEKEY",24,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 ECS D:EC=3 LAB D:EC=4 NUR D:EC=5 NUT D:EC=6 PHA D:EC=7 RAD D:EC=8 SUR^ECXFEKE1
"RTN","ECXFEKEY",25,0)
 U IO D PRINT^ECXFEKE1
"RTN","ECXFEKEY",26,0)
 Q
"RTN","ECXFEKEY",27,0)
LAB S EC=0
"RTN","ECXFEKEY",28,0)
 ;
"RTN","ECXFEKEY",29,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",30,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",31,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",32,0)
 ;
"RTN","ECXFEKEY",33,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",34,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",35,0)
 .N EC2
"RTN","ECXFEKEY",36,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",37,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",38,0)
 ...S EC1=$P(^LAM(EC,0),U,1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",39,0)
 ...S EC2=$P(^LAM(EC,0),U,2)
"RTN","ECXFEKEY",40,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",41,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",42,0)
 Q
"RTN","ECXFEKEY",43,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",44,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",45,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",46,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",47,0)
 ..S EC1=$P($P(^(0),U),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),U)]"":$P(^(0),U),1:"***")
"RTN","ECXFEKEY",48,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",49,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",50,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",51,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),U),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),U),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),U),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",52,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",53,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",54,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",55,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",56,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",57,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",58,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",59,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",60,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",61,0)
 ..S EC1=$P($P(^ECJ(EC,0),U),"-",3,4)
"RTN","ECXFEKEY",62,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",63,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",64,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",65,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",66,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",67,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",68,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),U,5),1:"") S EC7=$S(+EC6>0:$P($$CPT^ICPTCOD(+EC6),U,2),1:"")
"RTN","ECXFEKEY",69,0)
 ...S EC8=$S(+EC6>0:$E($P($$CPT^ICPTCOD(+EC6),U,3),1,25),1:"")
"RTN","ECXFEKEY",70,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",71,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",72,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",73,0)
 G ECQ
"RTN","ECXFEKEY",74,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",75,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",76,0)
 Q X
"RTN","ECXFEKEY",77,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",78,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",79,0)
 Q X
"RTN","ECXFEKEY",80,0)
 ;
"RTN","ECXFEKEY",81,0)
PHA ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",82,0)
 N ECPPDU,ECXPHA,ARRAY
"RTN","ECXFEKEY",83,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXFEKEY",84,0)
 K @ARRAY
"RTN","ECXFEKEY",85,0)
 ;Call pharmacy drug file (#50) api dbia 4483 and create ^TMP global
"RTN","ECXFEKEY",86,0)
 D DATA^PSS50(,"??",DT,,,"ECXLIST")
"RTN","ECXFEKEY",87,0)
 S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXFEKEY",88,0)
 ;$order thru "B" cross reference
"RTN","ECXFEKEY",89,0)
 S ECD="" F  S ECD=$O(@ARRAY@("B",ECD)) Q:ECD=""  D
"RTN","ECXFEKEY",90,0)
 .S EC=0 F  S EC=$O(@ARRAY@("B",ECD,EC)) Q:EC'>0  D
"RTN","ECXFEKEY",91,0)
 ..S ECD=$P(@ARRAY@(EC,.01),U),ECNDC=@ARRAY@(EC,31),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",92,0)
 ..S P1=$P(@ARRAY@(EC,20),U),P3=$P(@ARRAY@(EC,22),U)
"RTN","ECXFEKEY",93,0)
 ..;get the 17 character key
"RTN","ECXFEKEY",94,0)
 ..S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXFEKEY",95,0)
 ..Q:+ECNFC=0
"RTN","ECXFEKEY",96,0)
 ..S ECNFC="A"_ECNFC
"RTN","ECXFEKEY",97,0)
 ..S ECPPDU=@ARRAY@(EC,16),ECPPDU=$FNUMBER(ECPPDU,"P",4)
"RTN","ECXFEKEY",98,0)
 ..S ^TMP($J,"PHA",ECNFC,0)=ECD_U_ECPPDU
"RTN","ECXFEKEY",99,0)
 K @ARRAY
"RTN","ECXFEKEY",100,0)
 Q
"RTN","ECXFEKEY",101,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,U) I $P(EC,U,3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0",SC)=ECD
"RTN","ECXFEKEY",102,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,U,7),0)),U,2),ECCSC=$P($G(^DIC(40.7,+$P(EC,U,18),0)),U,2)
"RTN","ECXFEKEY",103,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),U,2)'="V" S ECLEN=$S($P(^("SL"),U):$P(^("SL"),U),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",104,0)
 .S (P1,P2)="000",P3="0000" I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",105,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",106,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,U,6)
"RTN","ECXFEKEY",107,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",108,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",109,0)
 .I $P(EC,U,4)]"" S ECSC=$P(EC,U,4)
"RTN","ECXFEKEY",110,0)
 .I $P(EC,U,5)]"" S ECCSC=$P(EC,U,5)
"RTN","ECXFEKEY",111,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4) S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",112,0)
 .I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",113,0)
 .I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",114,0)
 .I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q
"RTN","ECXFEKEY",115,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),U,8),0)),U) I P3="" S P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4)
"RTN","ECXFEKEY",116,0)
 K ECLEN Q
"RTN","ECXFEKEY",117,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,U),EC2=$P($G(^ICPT(+$P(EC1,U,9),0)),U) S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",118,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",119,0)
 Q
"RTN","ECXFEKEY",120,0)
NUR F EC=1:1:11 S EC1=$P($T(@EC),";",3) F EC2=0:1:5 S ^TMP($J,"NUR",$P(EC1,U)_"-"_EC2,EC2)=$P(EC1,U,2)_" LEVEL "_EC2
"RTN","ECXFEKEY",121,0)
1 ;;PSI^PSYCHIATRIC
"RTN","ECXFEKEY",122,0)
2 ;;SUR^SURGICAL
"RTN","ECXFEKEY",123,0)
3 ;;MED^MEDICAL (EXCLUDE SCI)
"RTN","ECXFEKEY",124,0)
4 ;;SCI^MEDICAL (SCI)
"RTN","ECXFEKEY",125,0)
5 ;;NUR^NURSING HOME CARE UNIT
"RTN","ECXFEKEY",126,0)
6 ;;REC^RECOVERY ROOM
"RTN","ECXFEKEY",127,0)
7 ;;ITN^INTENSIVE CARE
"RTN","ECXFEKEY",128,0)
8 ;;HEM^HEMODIALYSIS
"RTN","ECXFEKEY",129,0)
9 ;;INT^INTERMEDIATE CARE
"RTN","ECXFEKEY",130,0)
10 ;;DOM^DOMICILIARY
"RTN","ECXFEKEY",131,0)
11 ;;ALC^ALCOHOL AND DRUG TREATMENT
"RTN","ECXFEKEY",132,0)
 Q
"RTN","ECXFEKEY",133,0)
NUT ;Feeder keys for Nutrition and Food Service extract
"RTN","ECXFEKEY",134,0)
 N TYP,TIEN,DIET,IN,PRODUCT,KEY,NUMBER,IENS
"RTN","ECXFEKEY",135,0)
 S TYP="" F  S TYP=$O(^ECX(728.45,"B",TYP)) Q:TYP=""  S TIEN=0 F  S TIEN=$O(^ECX(728.45,"B",TYP,TIEN)) Q:'TIEN  S DIET="" F  S DIET=$O(^ECX(728.45,TIEN,1,"B",DIET)) Q:DIET=""  S IN=0 F  S IN=$O(^ECX(728.45,TIEN,1,"B",DIET,IN)) Q:IN'>0  D
"RTN","ECXFEKEY",136,0)
 . S IENS=""_IN_","_TIEN_","_""
"RTN","ECXFEKEY",137,0)
 . S KEY=$$GET1^DIQ(728.451,IENS,1,"E")
"RTN","ECXFEKEY",138,0)
 . S ^TMP($J,"ECX",KEY,DIET)=TYP_"  "_$$GET1^DIQ(728.451,IENS,.01,"E")
"RTN","ECXFEKEY",139,0)
 Q
"RTN","ECXFEKEY",140,0)
QUIT ;
"RTN","ECXFEKEY",141,0)
 K ECY,ECPHA,ECECS,ECLAB,ECPPDU,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",142,0)
 Q
"RTN","ECXUCPT")
0^6^B3005384^B2891121
"RTN","ECXUCPT",1,0)
ECXUCPT ;ALB/TJL-CPT INQUIRY FOR MYSTERY FEEDER KEYS ; 10/15/03 2:12pm
"RTN","ECXUCPT",2,0)
 ;;3.0;DSS EXTRACTS;**49,123**;July 1, 2003;Build 8
"RTN","ECXUCPT",3,0)
 ;
"RTN","ECXUCPT",4,0)
EN ; entry point
"RTN","ECXUCPT",5,0)
 N X,Y,DATE,ECRUN,QFLG
"RTN","ECXUCPT",6,0)
 S QFLG=0
"RTN","ECXUCPT",7,0)
 ; get today's date
"RTN","ECXUCPT",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUCPT",9,0)
 D BEGIN
"RTN","ECXUCPT",10,0)
 F  D SELECT W @IOF Q:QFLG
"RTN","ECXUCPT",11,0)
 Q
"RTN","ECXUCPT",12,0)
 ;
"RTN","ECXUCPT",13,0)
BEGIN ; display report description
"RTN","ECXUCPT",14,0)
 W @IOF
"RTN","ECXUCPT",15,0)
 W !,"This inquiry allows the user to select a CPT code, then displays"
"RTN","ECXUCPT",16,0)
 W !,"the Short Name, Category, and Description for the selected code."
"RTN","ECXUCPT",17,0)
 W !!
"RTN","ECXUCPT",18,0)
 Q
"RTN","ECXUCPT",19,0)
 ;
"RTN","ECXUCPT",20,0)
SELECT ; user inputs for CPT Code
"RTN","ECXUCPT",21,0)
 N OUT,DIC,X,Y,DIR,CIEN,ECXARR,ECXIEN
"RTN","ECXUCPT",22,0)
 S DIC="^ICPT(",DIC(0)="AZEMQ" D ^DIC
"RTN","ECXUCPT",23,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXUCPT",24,0)
 S ECXIEN=+Y
"RTN","ECXUCPT",25,0)
 S ECXARR=$$CPT^ICPTCOD(ECXIEN) I +ECXARR=-1 W !,"CPT Code Error." S QFLG=1 Q
"RTN","ECXUCPT",26,0)
 S CIEN=$P(ECXARR,U,4) I CIEN S ECXARR(81.1)=$$GET1^DIQ(81.1,CIEN_",",.01)
"RTN","ECXUCPT",27,0)
 S X=$$CPTD^ICPTCOD(ECXIEN,"ECXARR(81.01,")
"RTN","ECXUCPT",28,0)
 D PRINT
"RTN","ECXUCPT",29,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1
"RTN","ECXUCPT",30,0)
 Q
"RTN","ECXUCPT",31,0)
 ;
"RTN","ECXUCPT",32,0)
PRINT ; display results of inquiry
"RTN","ECXUCPT",33,0)
 N LN,DESCDA
"RTN","ECXUCPT",34,0)
 S $P(LN,"-",80)=""
"RTN","ECXUCPT",35,0)
 W !!,"CPT Inquiry",?54,"Date: ",ECRUN,!,LN,!
"RTN","ECXUCPT",36,0)
 W !,"CPT Code: ",$P(ECXARR,U,2)
"RTN","ECXUCPT",37,0)
 W ?30,"Short Name: ",$P(ECXARR,U,3)
"RTN","ECXUCPT",38,0)
 W !!,"Category: ",$G(ECXARR(81.1))
"RTN","ECXUCPT",39,0)
 W !!,"Description: "
"RTN","ECXUCPT",40,0)
 F DESCDA=1:1 Q:'$D(ECXARR(81.01,DESCDA))  D
"RTN","ECXUCPT",41,0)
 .W ECXARR(81.01,DESCDA),!
"RTN","ECXUCPT",42,0)
 W !!!
"RTN","ECXUCPT",43,0)
 Q
"RTN","ECXUCPT",44,0)
 ;
"VER")
8.0^22.0
"BLD",7484,6)
^115
**END**
**END**
