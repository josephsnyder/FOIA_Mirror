Released ECX*3*119 SEQ #109
Extracted from mail message
**KIDS**:ECX*3.0*119^

**INSTALL NAME**
ECX*3.0*119
"BLD",7877,0)
ECX*3.0*119^DSS EXTRACTS^0^3090904^y
"BLD",7877,4,0)
^9.64PA^^
"BLD",7877,6.3)
19
"BLD",7877,"KRN",0)
^9.67PA^779.2^20
"BLD",7877,"KRN",.4,0)
.4
"BLD",7877,"KRN",.401,0)
.401
"BLD",7877,"KRN",.402,0)
.402
"BLD",7877,"KRN",.403,0)
.403
"BLD",7877,"KRN",.5,0)
.5
"BLD",7877,"KRN",.84,0)
.84
"BLD",7877,"KRN",3.6,0)
3.6
"BLD",7877,"KRN",3.8,0)
3.8
"BLD",7877,"KRN",9.2,0)
9.2
"BLD",7877,"KRN",9.8,0)
9.8
"BLD",7877,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",7877,"KRN",9.8,"NM",1,0)
ECXNUT1^^0^B121369542
"BLD",7877,"KRN",9.8,"NM",2,0)
ECXUTL6^^0^B71591342
"BLD",7877,"KRN",9.8,"NM",3,0)
ECXNUTPP^^0^B20040767
"BLD",7877,"KRN",9.8,"NM",4,0)
ECXNUTDP^^0^B16737506
"BLD",7877,"KRN",9.8,"NM",5,0)
ECXNUTPE^^0^B6521477
"BLD",7877,"KRN",9.8,"NM",6,0)
ECXANUT^^0^B57614602
"BLD",7877,"KRN",9.8,"NM","B","ECXANUT",6)

"BLD",7877,"KRN",9.8,"NM","B","ECXNUT1",1)

"BLD",7877,"KRN",9.8,"NM","B","ECXNUTDP",4)

"BLD",7877,"KRN",9.8,"NM","B","ECXNUTPE",5)

"BLD",7877,"KRN",9.8,"NM","B","ECXNUTPP",3)

"BLD",7877,"KRN",9.8,"NM","B","ECXUTL6",2)

"BLD",7877,"KRN",19,0)
19
"BLD",7877,"KRN",19,"NM",0)
^9.68A^^
"BLD",7877,"KRN",19.1,0)
19.1
"BLD",7877,"KRN",101,0)
101
"BLD",7877,"KRN",409.61,0)
409.61
"BLD",7877,"KRN",771,0)
771
"BLD",7877,"KRN",779.2,0)
779.2
"BLD",7877,"KRN",870,0)
870
"BLD",7877,"KRN",8989.51,0)
8989.51
"BLD",7877,"KRN",8989.52,0)
8989.52
"BLD",7877,"KRN",8994,0)
8994
"BLD",7877,"KRN","B",.4,.4)

"BLD",7877,"KRN","B",.401,.401)

"BLD",7877,"KRN","B",.402,.402)

"BLD",7877,"KRN","B",.403,.403)

"BLD",7877,"KRN","B",.5,.5)

"BLD",7877,"KRN","B",.84,.84)

"BLD",7877,"KRN","B",3.6,3.6)

"BLD",7877,"KRN","B",3.8,3.8)

"BLD",7877,"KRN","B",9.2,9.2)

"BLD",7877,"KRN","B",9.8,9.8)

"BLD",7877,"KRN","B",19,19)

"BLD",7877,"KRN","B",19.1,19.1)

"BLD",7877,"KRN","B",101,101)

"BLD",7877,"KRN","B",409.61,409.61)

"BLD",7877,"KRN","B",771,771)

"BLD",7877,"KRN","B",779.2,779.2)

"BLD",7877,"KRN","B",870,870)

"BLD",7877,"KRN","B",8989.51,8989.51)

"BLD",7877,"KRN","B",8989.52,8989.52)

"BLD",7877,"KRN","B",8994,8994)

"BLD",7877,"QUES",0)
^9.62^^
"BLD",7877,"REQB",0)
^9.611^3^3
"BLD",7877,"REQB",1,0)
ECX*3.0*112^1
"BLD",7877,"REQB",2,0)
ECX*3.0*111^1
"BLD",7877,"REQB",3,0)
ECX*3.0*104^1
"BLD",7877,"REQB","B","ECX*3.0*104",3)

"BLD",7877,"REQB","B","ECX*3.0*111",2)

"BLD",7877,"REQB","B","ECX*3.0*112",1)

"MBREQ")
0
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
119^3090904^101037
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","ECXANUT")
0^6^B57614602^B56020770
"RTN","ECXANUT",1,0)
ECXANUT ;ALB/JRC - NUT Extract Audit Report ; 7/24/09 11:28am
"RTN","ECXANUT",2,0)
 ;;3.0;DSS EXTRACTS;**105,111,119**;Dec 22, 1997;Build 19
"RTN","ECXANUT",3,0)
 Q
"RTN","ECXANUT",4,0)
EN ;entry point for NUT extract audit report
"RTN","ECXANUT",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXANUT",6,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXANUT",7,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXANUT",8,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXANUT",9,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXANUT",10,0)
 S (ECXERR,FLAG)=0
"RTN","ECXANUT",11,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXANUT",12,0)
 S ECXHEAD="NUT",ECXAUD=0
"RTN","ECXANUT",13,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXANUT",14,0)
 ;select extract
"RTN","ECXANUT",15,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXANUT",16,0)
 Q:ECXERR
"RTN","ECXANUT",17,0)
 W !!
"RTN","ECXANUT",18,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXANUT",19,0)
 S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXANUT",20,0)
 I ECXERR=1 D  Q
"RTN","ECXANUT",21,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUT",22,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXANUT",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUT",24,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUT",25,0)
 W !
"RTN","ECXANUT",26,0)
 ;prompt for report type, (s)ummary or (d)etail
"RTN","ECXANUT",27,0)
 S REPORT=$$REPORT() Q:FLAG
"RTN","ECXANUT",28,0)
 ;if detail selected, prompt for (i)npatient, (o)utpatient or (b)oth
"RTN","ECXANUT",29,0)
 I REPORT="D" S STATUS=$$STATUS() Q:FLAG
"RTN","ECXANUT",30,0)
 ;determine output device and queue if requested
"RTN","ECXANUT",31,0)
 S ECXPGM="PROCESS^ECXANUT",ECXDESC="NUT Extract Audit Report"
"RTN","ECXANUT",32,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("STATUS")="",ECXSAVE("REPORT")="",ECXSAVE("FLAG")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXANUT",33,0)
 W !
"RTN","ECXANUT",34,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXANUT",35,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXANUT",36,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXANUT",37,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXANUT",38,0)
 .D AUDIT^ECXKILL
"RTN","ECXANUT",39,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXANUT",40,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXANUT",41,0)
 .D PROCESS^ECXANUT
"RTN","ECXANUT",42,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXANUT",43,0)
 D HOME^%ZIS
"RTN","ECXANUT",44,0)
 D AUDIT^ECXKILL
"RTN","ECXANUT",45,0)
 Q
"RTN","ECXANUT",46,0)
 ;
"RTN","ECXANUT",47,0)
PROCESS ;process data in file #727.832 and store in ^tmp global
"RTN","ECXANUT",48,0)
 N %,ARRAY,ECXEXT,ECXDEF,X,ECXSTART,ECXEND,ECXRUN,IEN,NODE0,NODE1,DATE,FKEY,DIV,OBS,DLTYPE,DFL,ENC,FPD,FPF,I,PFK,DLDIV
"RTN","ECXANUT",49,0)
 S ARRAY="^TMP($J,""ECXORDER"")"
"RTN","ECXANUT",50,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXANUT",51,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXANUT",52,0)
 ;get run date in external format
"RTN","ECXANUT",53,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXANUT",54,0)
 ;get records in date range and set values
"RTN","ECXANUT",55,0)
 S IEN=0 F  S IEN=$O(^ECX(727.832,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:FLAG
"RTN","ECXANUT",56,0)
 .S NODE0=$G(^ECX(727.832,IEN,0)),NODE1=$G(^(1))
"RTN","ECXANUT",57,0)
 .S DATE=$P(NODE0,U,9),STAT=$P(NODE0,U,8),PFK=$P(NODE1,U,8),DIV=$P(NODE1,U,5),OBS=$P(NODE1,U,2),DLT=$P(NODE1,U,10),FPD=$P(NODE1,U,6),FPF=$P(NODE1,U,9),ENC=$P(NODE1,U,4),DFL=$P(NODE1,U,11),DLDIV=$P(NODE1,U,7)
"RTN","ECXANUT",58,0)
 .;filter out divisions if not all selected
"RTN","ECXANUT",59,0)
 .Q:$G(@SCRNARR@("DIVISION"))'=1&'$D(@SCRNARR@("DIVISION",+$G(DIV)))
"RTN","ECXANUT",60,0)
 .;convert free text date to fm internal format date
"RTN","ECXANUT",61,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXANUT",62,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXANUT",63,0)
 .;Update totals and store in ^tmp global, add count for each unique 
"RTN","ECXANUT",64,0)
 .;feeder key/delivery location. Under each unique key create a record
"RTN","ECXANUT",65,0)
 .;for each unique combination of in/out code, observation status
"RTN","ECXANUT",66,0)
 .;save it in ^tmp global for later use.
"RTN","ECXANUT",67,0)
 .I REPORT="S" D
"RTN","ECXANUT",68,0)
 ..F I="DIV","DLT","STAT","OBS","PFK" I @I="" S @I="UNKNOWN"
"RTN","ECXANUT",69,0)
 ..;Increment delivery location type (dlt) counter
"RTN","ECXANUT",70,0)
 ..;S ^TMP($J,"ECXDLT",DIV,DLT,STAT,OBS)=$G(^TMP($J,"ECXDLT",DIV,DLT,STAT,OBS))+1
"RTN","ECXANUT",71,0)
 ..S ^TMP($J,DIV,"ECXDLT",DLT,STAT,OBS)=$G(^TMP($J,DIV,"ECXDLT",DLT,STAT,OBS))+1
"RTN","ECXANUT",72,0)
 ..;Increment feeder key (fk) counter 
"RTN","ECXANUT",73,0)
 ..;S ^TMP($J,"ECXFKEY",DIV,PFK,STAT,OBS)=$G(^TMP($J,"ECXFKEY",DIV,PFK,STAT,OBS))+1
"RTN","ECXANUT",74,0)
 ..S ^TMP($J,DIV,"ECXFKEY",PFK,STAT,OBS)=$G(^TMP($J,DIV,"ECXFKEY",PFK,STAT,OBS))+1
"RTN","ECXANUT",75,0)
 .I REPORT="D" D
"RTN","ECXANUT",76,0)
 ..F I="FPD","FPF","PFK","OBS","ENC" I $G(@I)="" S @I="UNKNOWN"
"RTN","ECXANUT",77,0)
 ..F I="DIV","DLDIV","DFL","DLT" I $G(@I)="" S @I="UNK"
"RTN","ECXANUT",78,0)
 ..;Check patient status and screen if necessary
"RTN","ECXANUT",79,0)
 ..Q:STATUS'="B"&(STATUS'=STAT)
"RTN","ECXANUT",80,0)
 ..;Increment fpd, fpf, pfk, obs counter
"RTN","ECXANUT",81,0)
 ..S ^TMP($J,DIV,FPD,FPF,PFK,OBS)=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS))+1
"RTN","ECXANUT",82,0)
 ..;Increment div, dfl, dlt counter
"RTN","ECXANUT",83,0)
 ..S ^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT)=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT))+1
"RTN","ECXANUT",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUT",85,0)
 D PRINT
"RTN","ECXANUT",86,0)
 D AUDIT^ECXKILL
"RTN","ECXANUT",87,0)
 Q
"RTN","ECXANUT",88,0)
 ;
"RTN","ECXANUT",89,0)
PRINT ;print report
"RTN","ECXANUT",90,0)
 N FLAG,PG,LN,KEY,DLT,STAT,OBS,TOTAL,TCNT,CNT,PDLT
"RTN","ECXANUT",91,0)
 U IO
"RTN","ECXANUT",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXANUT",93,0)
 S (FLAG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXANUT",94,0)
 I '$D(^TMP($J)) D  Q
"RTN","ECXANUT",95,0)
 .S DIV=0 F  S DIV=$O(@SCRNARR@("DIVISION",DIV)) Q:'DIV  D
"RTN","ECXANUT",96,0)
 ..D HEADER
"RTN","ECXANUT",97,0)
 ..W !
"RTN","ECXANUT",98,0)
 ..W !,"**************************************************"
"RTN","ECXANUT",99,0)
 ..W !,"*  No data available for this patient division.  *"
"RTN","ECXANUT",100,0)
 ..W !,"**************************************************"
"RTN","ECXANUT",101,0)
 I REPORT="S" D
"RTN","ECXANUT",102,0)
 .S DIV="" F  S DIV=$O(^TMP($J,DIV)) Q:DIV']""  D  Q:FLAG
"RTN","ECXANUT",103,0)
 ..D HEADER Q:FLAG
"RTN","ECXANUT",104,0)
 ..S KEY="" F  S KEY=$O(^TMP($J,DIV,KEY)) Q:KEY']""  D  Q:FLAG
"RTN","ECXANUT",105,0)
 ...S PFK="" F  S PFK=$O(^TMP($J,DIV,KEY,PFK)) Q:PFK']""  D  Q:FLAG
"RTN","ECXANUT",106,0)
 ....D SUB Q:FLAG
"RTN","ECXANUT",107,0)
 ....S STAT="" F  S STAT=$O(^TMP($J,DIV,KEY,PFK,STAT)) Q:STAT']""  D  Q:FLAG
"RTN","ECXANUT",108,0)
 .....S OBS="" F  S OBS=$O(^TMP($J,DIV,KEY,PFK,STAT,OBS)) Q:OBS']""  D  Q:FLAG
"RTN","ECXANUT",109,0)
 ......S TOTAL=$P(^TMP($J,DIV,KEY,PFK,STAT,OBS),U)
"RTN","ECXANUT",110,0)
 ......;Print by delivery location type (feeder key)
"RTN","ECXANUT",111,0)
 ......D:($Y+3>IOSL) HEADER,SUB Q:FLAG
"RTN","ECXANUT",112,0)
 ......W !,?1,STAT,?12,$S(OBS="NO":" NO",1:"YES"),?30,TOTAL
"RTN","ECXANUT",113,0)
 ;detail report print
"RTN","ECXANUT",114,0)
 I REPORT="D" D
"RTN","ECXANUT",115,0)
 .S DIV="" F  S DIV=$O(^TMP($J,DIV)) Q:DIV']""  D  Q:FLAG
"RTN","ECXANUT",116,0)
 ..S FPD="" F  S FPD=$O(^TMP($J,DIV,FPD)) Q:FPD']""  D  Q:FLAG
"RTN","ECXANUT",117,0)
 ...S FPF="" F  S FPF=$O(^TMP($J,DIV,FPD,FPF)) Q:FPF']""  D  Q:FLAG
"RTN","ECXANUT",118,0)
 ....S PFK="" F  S PFK=$O(^TMP($J,DIV,FPD,FPF,PFK)) Q:PFK']""  D  Q:FLAG
"RTN","ECXANUT",119,0)
 .....S OBS="" F  S OBS=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS)) Q:OBS']""  D  Q:FLAG
"RTN","ECXANUT",120,0)
 ......S TCNT=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS))
"RTN","ECXANUT",121,0)
 ......D HEADER
"RTN","ECXANUT",122,0)
 ......S ENC="" F  S ENC=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC)) Q:ENC']""  D  Q:FLAG
"RTN","ECXANUT",123,0)
 .......S DLDIV="" F  S DLDIV=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV)) Q:DLDIV']""  D  Q:FLAG
"RTN","ECXANUT",124,0)
 ........S DFL="" F  S DFL=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL)) Q:DFL']""  D  Q:FLAG
"RTN","ECXANUT",125,0)
 .........S DLT="" F  S DLT=$O(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT)) Q:DLT']""  D  Q:FLAG
"RTN","ECXANUT",126,0)
 ..........S CNT=$G(^TMP($J,DIV,FPD,FPF,PFK,OBS,ENC,DLDIV,DFL,DLT))
"RTN","ECXANUT",127,0)
 ..........S PDLT=DLT
"RTN","ECXANUT",128,0)
 ..........I ENC["I",DLT="UNK" S PDLT=$S(PFK["ST ORDER":"N/A",PFK["SUPP FEED":"N/A",PFK["TF":"N/A",1:DLT)
"RTN","ECXANUT",129,0)
 ..........W !,?1,$E(ENC,1,25),?28,DLDIV,?42,DFL,?60,PDLT,?71,CNT
"RTN","ECXANUT",130,0)
 ..........D:($Y+3>IOSL) HEADER Q:FLAG
"RTN","ECXANUT",131,0)
 Q
"RTN","ECXANUT",132,0)
 ;
"RTN","ECXANUT",133,0)
HEADER ;header and page control
"RTN","ECXANUT",134,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXANUT",135,0)
 I $E(IOST)="C" D
"RTN","ECXANUT",136,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXANUT",137,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y FLAG=1
"RTN","ECXANUT",138,0)
 Q:FLAG
"RTN","ECXANUT",139,0)
 S DSSID=$S($G(DIV):$$NNT^XUAF4(DIV),1:"UNKNOWN^^")
"RTN","ECXANUT",140,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXANUT",141,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"_$S(REPORT="S":"  (Summary)",1:"  (Detail)")
"RTN","ECXANUT",142,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXANUT",143,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXANUT",144,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXANUT",145,0)
 W !,"Patient Division: "_$P(DSSID,U)_$S($P(DSSID,U,2)'="":" ("_$P(DSSID,U,2)_")",1:""),?68,$S(REPORT="S":"Page: "_PG,1:"")
"RTN","ECXANUT",146,0)
 ;Detailed report sub-header
"RTN","ECXANUT",147,0)
 Q:'$D(^TMP($J))
"RTN","ECXANUT",148,0)
 I REPORT="D" D
"RTN","ECXANUT",149,0)
 .W !,"Patient Status: "_$S(STATUS="I":"Inpatient",STATUS="O":"Outpatient",1:"Inpatient and Outpatient"),?68,"Page: "_PG
"RTN","ECXANUT",150,0)
 .W !!,"Prod Div: "_FPD_" Prod Fac: "_FPF_" Prod FK: "_PFK_" OBS: "_OBS,?60," TOTAL: ",TCNT
"RTN","ECXANUT",151,0)
 .W !,?1,"Encounter Number",?28,"Del Div",?42,"Del Feed Loc",?60,"Loc Type",?71,"Count"
"RTN","ECXANUT",152,0)
 Q
"RTN","ECXANUT",153,0)
SUB ;Summary report sub-header
"RTN","ECXANUT",154,0)
 I REPORT="S" D
"RTN","ECXANUT",155,0)
 .W !!,"FEEDER KEY: "_PFK
"RTN","ECXANUT",156,0)
 .W !!,"I/O",?12,"OBS",?30,"TOTAL"
"RTN","ECXANUT",157,0)
 Q
"RTN","ECXANUT",158,0)
 ;
"RTN","ECXANUT",159,0)
REPORT() ;Select report type
"RTN","ECXANUT",160,0)
 ;
"RTN","ECXANUT",161,0)
 ;      Output - S = summary
"RTN","ECXANUT",162,0)
 ;               D = detail
"RTN","ECXANUT",163,0)
 ;Init variables
"RTN","ECXANUT",164,0)
 N DIR,DIRUT,DUOUT,X,Y
"RTN","ECXANUT",165,0)
 S DIR(0)="S^S:SUMMARY;D:DETAIL"
"RTN","ECXANUT",166,0)
 S DIR("A")="Select type of report"
"RTN","ECXANUT",167,0)
 S DIR("?",1)="S = Summary"
"RTN","ECXANUT",168,0)
 S DIR("?",2)="D = Detail"
"RTN","ECXANUT",169,0)
 D ^DIR
"RTN","ECXANUT",170,0)
 I $D(DIRUT)!$D(DUOUT) S FLAG=1 Q ""
"RTN","ECXANUT",171,0)
 Q Y
"RTN","ECXANUT",172,0)
 ;
"RTN","ECXANUT",173,0)
STATUS() ;Select patient status for report
"RTN","ECXANUT",174,0)
 ;
"RTN","ECXANUT",175,0)
 ;      Output - I = inpatient
"RTN","ECXANUT",176,0)
 ;               O = outpatient
"RTN","ECXANUT",177,0)
 ;               B = both
"RTN","ECXANUT",178,0)
 ;Init variables
"RTN","ECXANUT",179,0)
 N DIR,DIRUT,DUOUT,X,Y
"RTN","ECXANUT",180,0)
 S DIR(0)="S^I:INPATIENT;O:OUTPATIENT;B:BOTH"
"RTN","ECXANUT",181,0)
 S DIR("A")=" report?"
"RTN","ECXANUT",182,0)
 S DIR("A")="Select patient status for report"
"RTN","ECXANUT",183,0)
 S DIR("?",1)="I = Inpatient"
"RTN","ECXANUT",184,0)
 S DIR("?",2)="O = Outpatient"
"RTN","ECXANUT",185,0)
 S DIR("?",3)="B = Both"
"RTN","ECXANUT",186,0)
 D ^DIR
"RTN","ECXANUT",187,0)
 I $D(DIRUT)!$D(DUOUT) S FLAG=1 Q ""
"RTN","ECXANUT",188,0)
 Q Y
"RTN","ECXNUT1")
0^1^B121369542^B106014045
"RTN","ECXNUT1",1,0)
ECXNUT1 ;ALB/JRC Nutrition DSS Extract ; 9/4/09 8:59am
"RTN","ECXNUT1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,112,119**;Dec 22, 1997;Build 19
"RTN","ECXNUT1",3,0)
 Q
"RTN","ECXNUT1",4,0)
GETMEALS ;get patient meals 
"RTN","ECXNUT1",5,0)
 ; variable names:   ordate - regular diet order date
"RTN","ECXNUT1",6,0)
 ;                   sdate  - diet order npo/withhold date
"RTN","ECXNUT1",7,0)
 ;                   norder - "sf" or "so" order date
"RTN","ECXNUT1",8,0)
 ;                             note: there is a relationship
"RTN","ECXNUT1",9,0)
 ;                             between "sf", "so" and regular diets
"RTN","ECXNUT1",10,0)
 ;                   adate - admission date
"RTN","ECXNUT1",11,0)
 ;                   ddate - discharge date
"RTN","ECXNUT1",12,0)
 N I,J,P,D,ECXADM,FHDFN,ORDATE,DATES,NODE,SF,PRODUCT,ECXQTY,ORDER,ECXORDPH,ECXKEY,ECXFPD,ECXFDD,ECXFPF,ECXDLT,ECXDFL,MEAL,MEALS,SORDATE,NUMBER,TF,TFNODE,ECXTFU,SDATE,START,ECSDX
"RTN","ECXNUT1",13,0)
 ;set ecsd to first day of the month before setting meals array
"RTN","ECXNUT1",14,0)
 S ECSDX=ECSD,ECSD=ECSD+.1,ECXTFU=""
"RTN","ECXNUT1",15,0)
 ;setup individual meals array for inpatients
"RTN","ECXNUT1",16,0)
 F I=ECSD:1:ECED F J=I+.0800,I+.1300,I+.1800 S MEALS(J)=J
"RTN","ECXNUT1",17,0)
 ;get "inp", "sf", and "so" inpatient meals
"RTN","ECXNUT1",18,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",19,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",20,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",21,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  Q:ORDATE>ECED  D
"RTN","ECXNUT1",22,0)
 ...Q:$P($G(^TMP($J,"FH",ECXADM,FHDFN,+ORDATE,"INP")),U,7)'=""
"RTN","ECXNUT1",23,0)
 ...S DATES=$$GETDATES(),SDATE=$S(ORDATE>ECSD:ORDATE,1:ECSD)
"RTN","ECXNUT1",24,0)
INPPD ...;create regular diet individual meals
"RTN","ECXNUT1",25,0)
 ...S P="INP",D="PD"
"RTN","ECXNUT1",26,0)
 ...;get new order date and time if exist
"RTN","ECXNUT1",27,0)
 ...S NORDER=$$NEWORDER(P,ORDATE)
"RTN","ECXNUT1",28,0)
 ...S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,ORDATE,"INP")) Q:'NODE
"RTN","ECXNUT1",29,0)
 ...S PRODUCT=$P(NODE,U,13),ECXQTY=1,ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",30,0)
 ...;Resolve feeder key for nutrition product
"RTN","ECXNUT1",31,0)
 ...S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",32,0)
 ...I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",33,0)
 ...S MEAL=SDATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",34,0)
 ....I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",35,0)
 ....I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",36,0)
 ....S ECXORDPH=$$GET1^DIQ(100,+ORDER,1,"I")
"RTN","ECXNUT1",37,0)
 ....;Get additional data and file record.
"RTN","ECXNUT1",38,0)
 ....S DATE=MEAL
"RTN","ECXNUT1",39,0)
 ....I $P(DATES,U) D MEALCHK Q:MEALCHK=1
"RTN","ECXNUT1",40,0)
 ....D:DATE'>ECED GET^ECXNUT
"RTN","ECXNUT1",41,0)
INPSF ;create supplemental feeding meals if they exist
"RTN","ECXNUT1",42,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",43,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",44,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",45,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",46,0)
 ...S DATES=$$GETDATES(),SDATE=$S(ORDATE>ECSD:ORDATE,1:ECSD)
"RTN","ECXNUT1",47,0)
 ...;get "sf" orders if they exist
"RTN","ECXNUT1",48,0)
 ...N SFNODE S (SFNODE,ECXORDPH,CDATE)=""
"RTN","ECXNUT1",49,0)
 ...S SFNODE=$G(@ARRAY@(ECXADM,FHDFN,ORDATE,"SF"))
"RTN","ECXNUT1",50,0)
 ...I +SFNODE D
"RTN","ECXNUT1",51,0)
 ....S P="INP",D="SF"
"RTN","ECXNUT1",52,0)
 ....;get new order date and time if exist
"RTN","ECXNUT1",53,0)
 ....S NORDER=$$NEWORDER(D,ORDATE),CDATE=$P(SFNODE,U,32)
"RTN","ECXNUT1",54,0)
 ....S START=$P(SFNODE,U,2) I START<ECSD S START=ECSD
"RTN","ECXNUT1",55,0)
 ....;order thru all "sf" product fields and generate records
"RTN","ECXNUT1",56,0)
 ....F SF=5:2:27 S PRODUCT=$P(SFNODE,U,SF) S ECXQTY=$P(SFNODE,U,(SF+1)) D
"RTN","ECXNUT1",57,0)
 .....Q:PRODUCT']""
"RTN","ECXNUT1",58,0)
 .....;Resolve external value for product key
"RTN","ECXNUT1",59,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6("SF",PRODUCT)
"RTN","ECXNUT1",60,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",61,0)
 .....;create individual meals
"RTN","ECXNUT1",62,0)
 .....F MEAL=START:1:ECED D
"RTN","ECXNUT1",63,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",64,0)
 ......S DATE=$P(MEAL,".")_"."_$S("57911"[SF:10,"13151719"[SF:14,1:18)
"RTN","ECXNUT1",65,0)
 ......I DATE<ORDATE Q
"RTN","ECXNUT1",66,0)
 ......I CDATE]"" Q:DATE>CDATE
"RTN","ECXNUT1",67,0)
 ......I NORDER]"" Q:DATE>NORDER
"RTN","ECXNUT1",68,0)
 ......I $P(DATES,U,3)]"" Q:DATE>$P(DATES,U,3)
"RTN","ECXNUT1",69,0)
 ......I $P(DATES,U) D MEALCHK Q:MEALCHK=1
"RTN","ECXNUT1",70,0)
 ......D:DATE'>ECED GET^ECXNUT
"RTN","ECXNUT1",71,0)
INPSO ;create standing order meals if they exist
"RTN","ECXNUT1",72,0)
 S ECSDX=$P(ECSD,".")
"RTN","ECXNUT1",73,0)
 K MEALS F I=ECSDX:1:ECED F J=I+.0800,I+.1300,I+.1800 S MEALS(J)=J
"RTN","ECXNUT1",74,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",75,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",76,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",77,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",78,0)
 ...S DATES=$$GETDATES(),SDATE=$S(ORDATE>ECSD:ORDATE,1:ECSD)
"RTN","ECXNUT1",79,0)
 ...N SONODE,NUM S (SONODE,ECXORDPH)="",NUM=0
"RTN","ECXNUT1",80,0)
 ...F  S NUM=$O(@ARRAY@(ECXADM,FHDFN,ORDATE,"SO",NUM)) Q:'NUM  D
"RTN","ECXNUT1",81,0)
 ....S SONODE=$G(@ARRAY@(ECXADM,FHDFN,ORDATE,"SO",NUM))
"RTN","ECXNUT1",82,0)
 ....I +SONODE D
"RTN","ECXNUT1",83,0)
 .....;create standing order meals
"RTN","ECXNUT1",84,0)
 .....N SMEAL S P="INP",D="SO"
"RTN","ECXNUT1",85,0)
 .....;get new order date and time if exist
"RTN","ECXNUT1",86,0)
 .....S PRODUCT=$P(SONODE,U,2),ECXQTY=$P(SONODE,U,8),SMEAL=$P(SONODE,U,3),CDATE=$P(SONODE,U,6)
"RTN","ECXNUT1",87,0)
 .....;Resolve feeder key for nutrition product
"RTN","ECXNUT1",88,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",89,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",90,0)
 .....;create individual meals
"RTN","ECXNUT1",91,0)
 .....S MEAL=SDATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",92,0)
 ......N TIME S TIME=$P(MEALS(MEAL),".",2)
"RTN","ECXNUT1",93,0)
 ......Q:SMEAL'["B"&(TIME="08")
"RTN","ECXNUT1",94,0)
 ......Q:SMEAL'["N"&(TIME=13)
"RTN","ECXNUT1",95,0)
 ......Q:SMEAL'["E"&(TIME=18)
"RTN","ECXNUT1",96,0)
 ......I CDATE]"" Q:MEAL>CDATE
"RTN","ECXNUT1",97,0)
 ......I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",98,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",99,0)
 ......N ZDATE S ZDATE=DATE
"RTN","ECXNUT1",100,0)
 ......S DATE=MEAL
"RTN","ECXNUT1",101,0)
 ......I $P(DATES,U) D MEALCHK Q:MEALCHK=1
"RTN","ECXNUT1",102,0)
 ......D GET^ECXNUT
"RTN","ECXNUT1",103,0)
 ......S DATE=ZDATE
"RTN","ECXNUT1",104,0)
 ;remove individual meals array
"RTN","ECXNUT1",105,0)
 K MEALS
"RTN","ECXNUT1",106,0)
INPTF ;Get inpatient tube feedings
"RTN","ECXNUT1",107,0)
 N P1,PNODE,CDATE,ECXTFU,MEALS
"RTN","ECXNUT1",108,0)
 ;set daily meals array for inpatient tube feedings
"RTN","ECXNUT1",109,0)
 S ECSD=ECSD1
"RTN","ECXNUT1",110,0)
 F I=ECSD:1:ECED+1 S MEALS(I)=""
"RTN","ECXNUT1",111,0)
 S (FHDFN,DATE,P1,CDATE,SDATE)=0,(ECXADM,NODE,ECXORDPH,PNODE)=""
"RTN","ECXNUT1",112,0)
 S P="INP",D="TF" F  S ECXADM=$O(^TMP($J,"FH",ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",113,0)
 .F  S FHDFN=$O(^TMP($J,"FH",ECXADM,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",114,0)
 ..F  S DATE=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE)) Q:'DATE  D
"RTN","ECXNUT1",115,0)
 ...S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF")) Q:'NODE  D
"RTN","ECXNUT1",116,0)
 ....F  S P1=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF",P1)) Q:'P1  D
"RTN","ECXNUT1",117,0)
 .....S PNODE=^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF",P1,"P")
"RTN","ECXNUT1",118,0)
 .....S ORDATE=DATE,DATES=$$GETDATES(),CDATE=$P(NODE,U,11)
"RTN","ECXNUT1",119,0)
 .....S SDATE=$S(ORDATE>ECSD:ORDATE,1:ECSD)
"RTN","ECXNUT1",120,0)
 .....S PRODUCT=$P(PNODE,U,1),ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",121,0)
 .....S ECXQTY=$S($P(PNODE,U,3)["GM":$P(PNODE,U,3),1:$P(PNODE,U,4))
"RTN","ECXNUT1",122,0)
 .....S ECXTFU=$S($P(PNODE,U,3)["GM":"GM",1:"ML")
"RTN","ECXNUT1",123,0)
 .....;Resolve external value for product key
"RTN","ECXNUT1",124,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",125,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",126,0)
 .....;create daily meals
"RTN","ECXNUT1",127,0)
 .....S MEAL=SDATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",128,0)
 ......I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",129,0)
 ......I CDATE]"" Q:$P(MEAL,".")>$P(CDATE,".")
"RTN","ECXNUT1",130,0)
 ......I $P(DATES,U,3) Q:$P(MEAL,".")>$P($P(DATES,U,3),".")
"RTN","ECXNUT1",131,0)
 ......S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",132,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",133,0)
 ......S DATE=MEAL
"RTN","ECXNUT1",134,0)
 ......I $P(DATES,U) D MEALCHK Q:MEALCHK=1
"RTN","ECXNUT1",135,0)
 ......D GET^ECXNUT S DATE=ORDATE
"RTN","ECXNUT1",136,0)
OPRM ;Get outpatient recurring meals
"RTN","ECXNUT1",137,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH,ECXTFU)=""
"RTN","ECXNUT1",138,0)
 S P="OP",D="RM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",139,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",140,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",141,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM")) Q:'NODE
"RTN","ECXNUT1",142,0)
 ... S PRODUCT=$P(NODE,U,2),ECXQTY=1,ORDER=""_$P(NODE,U,12)_","_""
"RTN","ECXNUT1",143,0)
 ... S PRODUCT=$$GET1^DIQ(111,PRODUCT,4,"I")
"RTN","ECXNUT1",144,0)
 ... S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",145,0)
 ... ;Resolve external value for product key
"RTN","ECXNUT1",146,0)
 ... S ECXKEY=$$NUTKEY^ECXUTL6("PD",PRODUCT)
"RTN","ECXNUT1",147,0)
 ... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",148,0)
 ... ;Get additional data and file record.
"RTN","ECXNUT1",149,0)
 ... D GET^ECXNUT
"RTN","ECXNUT1",150,0)
OPSO ;Get outpatient standing orders
"RTN","ECXNUT1",151,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",152,0)
 S P="OP",D="SO" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",153,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",154,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",155,0)
 ... S FHNUM=0 F  S FHNUM=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSO",FHNUM)) Q:FHNUM'>0  D
"RTN","ECXNUT1",156,0)
 ....N SMEAL S P="OP",D="SO"
"RTN","ECXNUT1",157,0)
 ....;get new order date and time if exist
"RTN","ECXNUT1",158,0)
 ....S SONODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSO",FHNUM)
"RTN","ECXNUT1",159,0)
 ....S NORDER=DATE,SMEAL=$P(SONODE,U,3)
"RTN","ECXNUT1",160,0)
 ....S PRODUCT=$P(SONODE,U,2),ECXQTY=$P(SONODE,U,8)
"RTN","ECXNUT1",161,0)
 ....;Resolve feeder key for nutrition product
"RTN","ECXNUT1",162,0)
 ....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",163,0)
 ....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",164,0)
 ....;create individual meals
"RTN","ECXNUT1",165,0)
 ....S MEAL=NUMBER F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",166,0)
 .....N TIME S TIME=$P(MEALS(MEAL),".",2)
"RTN","ECXNUT1",167,0)
 .....Q:SMEAL'["B"&(TIME="08")
"RTN","ECXNUT1",168,0)
 .....Q:SMEAL'["N"&(TIME=13)
"RTN","ECXNUT1",169,0)
 .....Q:SMEAL'["E"&(TIME=18)
"RTN","ECXNUT1",170,0)
 .....I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",171,0)
 .....I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",172,0)
 .....I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",173,0)
 .....;Get additional data and file record.
"RTN","ECXNUT1",174,0)
 .....N ZDATE S ZDATE=DATE
"RTN","ECXNUT1",175,0)
 .....S DATE=MEAL D GET^ECXNUT
"RTN","ECXNUT1",176,0)
 .....S DATE=ZDATE
"RTN","ECXNUT1",177,0)
OPSF ;Get outpatient supplemental feedings
"RTN","ECXNUT1",178,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",179,0)
 S P="OP",D="SO" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",180,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",181,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",182,0)
 ... Q:'$D(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSF"))  D
"RTN","ECXNUT1",183,0)
 ....N SMEAL S P="OP",D="SF"
"RTN","ECXNUT1",184,0)
 ....;get "sf" orders if they exist
"RTN","ECXNUT1",185,0)
 ....N SFNODE S (SFNODE,ECXORDPH,CDATE)=""
"RTN","ECXNUT1",186,0)
 ....S SFNODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSF")
"RTN","ECXNUT1",187,0)
 ....I +SFNODE D
"RTN","ECXNUT1",188,0)
 .....;get new order date and time if exist
"RTN","ECXNUT1",189,0)
 .....S NORDER=DATE,CDATE=$P(SFNODE,U,32)
"RTN","ECXNUT1",190,0)
 .....;order thru all "sf" product fields and generate records
"RTN","ECXNUT1",191,0)
 .....F SF=5:2:27 S PRODUCT=$P(SFNODE,U,SF) S ECXQTY=$P(SFNODE,U,(SF+1)) D
"RTN","ECXNUT1",192,0)
 ......Q:PRODUCT']""
"RTN","ECXNUT1",193,0)
 ......;Resolve external value for product key
"RTN","ECXNUT1",194,0)
 ......S ECXKEY=$$NUTKEY^ECXUTL6("SF",PRODUCT)
"RTN","ECXNUT1",195,0)
 ......I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",196,0)
 ......;create individual meals
"RTN","ECXNUT1",197,0)
 ......F MEAL=DATE
"RTN","ECXNUT1",198,0)
 ......I $P(DATES,U,3)]"" Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",199,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",200,0)
 ......N ZDATE S ZDATE=DATE
"RTN","ECXNUT1",201,0)
 ......S DATE=$P(MEAL,".")_"."_$S("57911"[SF:10,"13151719"[SF:14,1:18)
"RTN","ECXNUT1",202,0)
 ......D GET^ECXNUT
"RTN","ECXNUT1",203,0)
 ......S DATE=ZDATE
"RTN","ECXNUT1",204,0)
OPTF ;Get outpatient tube feedings
"RTN","ECXNUT1",205,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",206,0)
 S P="OP",D="TF" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",207,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",208,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",209,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF")) Q:NODE=""
"RTN","ECXNUT1",210,0)
 ... S TF=0 F  S TF=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)) Q:'TF  D
"RTN","ECXNUT1",211,0)
 .... S TFNODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)
"RTN","ECXNUT1",212,0)
 .... S PRODUCT=$P(TFNODE,U,1),ECXQTY=$P(TFNODE,U,4)
"RTN","ECXNUT1",213,0)
 .... ;Resolve external value for product key
"RTN","ECXNUT1",214,0)
 .... S ECXKEY=$$NUTKEY^ECXUTL6("TF",PRODUCT)
"RTN","ECXNUT1",215,0)
 .... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",216,0)
 .... ;Get additional data and file record.
"RTN","ECXNUT1",217,0)
 .... D GET^ECXNUT
"RTN","ECXNUT1",218,0)
OPSM ;Get outpatient special meals
"RTN","ECXNUT1",219,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",220,0)
 S P="OP",D="SM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",221,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",222,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"SM")) Q:'NODE
"RTN","ECXNUT1",223,0)
 .. S PRODUCT=$P(NODE,U,4),ECXQTY=1,ECXORDPH=$P(NODE,U,5)
"RTN","ECXNUT1",224,0)
 .. S PRODUCT=$$GET1^DIQ(111,PRODUCT,4,"I")
"RTN","ECXNUT1",225,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",226,0)
 .. S ECXKEY="SPECGUEST"
"RTN","ECXNUT1",227,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",228,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",229,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",230,0)
OPGM ;Get outpatient guest meals
"RTN","ECXNUT1",231,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",232,0)
 S P="OP",D="GM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",233,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",234,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"GM")) Q:'NODE
"RTN","ECXNUT1",235,0)
 .. S PRODUCT=$P(NODE,U,13),ECXQTY=1
"RTN","ECXNUT1",236,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",237,0)
 .. S ECXKEY="SPECGUEST"
"RTN","ECXNUT1",238,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",239,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",240,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",241,0)
 Q
"RTN","ECXNUT1",242,0)
GETDATES() ;Get admit, discharge, npo/withhold dates,for "inp", "sf" and "so"
"RTN","ECXNUT1",243,0)
 ;  return in string i.e.  stop date^admission date^discharge date
"RTN","ECXNUT1",244,0)
 ;     input:    ecxadm  -  movement file ien
"RTN","ECXNUT1",245,0)
 ;               fhdfn   - nutrition patient file (#115)
"RTN","ECXNUT1",246,0)
 ;
"RTN","ECXNUT1",247,0)
 ;     output:   stop date  - npo/withhold date
"RTN","ECXNUT1",248,0)
 ;               admit date - admission date and time
"RTN","ECXNUT1",249,0)
 ;               discharge date - discharge date and time
"RTN","ECXNUT1",250,0)
 ;               expiration date of withhold date
"RTN","ECXNUT1",251,0)
 ;init variables
"RTN","ECXNUT1",252,0)
 N ADATE,DDATE,DATE,STDATE,NORDATE,IENS,RDATE
"RTN","ECXNUT1",253,0)
 ;check input
"RTN","ECXNUT1",254,0)
 Q:'$G(ECXADM)!'$G(FHDFN) "0^0^0^0"
"RTN","ECXNUT1",255,0)
 ;get admission and discharge dates
"RTN","ECXNUT1",256,0)
 S (ADATE,DDATE,DATE,SDATE,NORDATE,STDATE,RDATE)="",IENS=""_ECXADM_","_FHDFN_","_"",ADATE=$$GET1^DIQ(115.01,IENS,.01,"I"),DDATE=$$GET1^DIQ(115.01,IENS,18,"I")
"RTN","ECXNUT1",257,0)
 ;get "inp" order's npo/withhold date return it as 'stdate' if exist
"RTN","ECXNUT1",258,0)
 S DATE=ORDATE F  S DATE=$O(@ARRAY@(ECXADM,FHDFN,DATE)) Q:'DATE  D
"RTN","ECXNUT1",259,0)
 .I $P($G(@ARRAY@(ECXADM,FHDFN,+DATE,"INP")),U,7)'="" S STDATE=DATE,RDATE=$P($G(@ARRAY@(ECXADM,FHDFN,+DATE,"INP")),U,10)
"RTN","ECXNUT1",260,0)
 Q STDATE_U_ADATE_U_DDATE_U_RDATE
"RTN","ECXNUT1",261,0)
NEWORDER(TYPE,DATE) ;Look for new order for inpatient meal type if exist
"RTN","ECXNUT1",262,0)
 ;    Input     ecxadm -  movement #
"RTN","ECXNUT1",263,0)
 ;              fhdfn  -  nutrition file (#115) fhdfn
"RTN","ECXNUT1",264,0)
 ;              date   -  starting order date to begin lookup
"RTN","ECXNUT1",265,0)
 ;              type   -  meal type "sf", "so", or "pd"
"RTN","ECXNUT1",266,0)
 ;    Output:   new order date and time for specific meal type
"RTN","ECXNUT1",267,0)
 ;init variables
"RTN","ECXNUT1",268,0)
 N NUMT
"RTN","ECXNUT1",269,0)
 S NORDER="",NUMT=0
"RTN","ECXNUT1",270,0)
 Q:$G(TYPE)']""!'$G(DATE) NORDER
"RTN","ECXNUT1",271,0)
 I TYPE'="SO" F  S DATE=$O(@ARRAY@(ECXADM,FHDFN,DATE)) Q:'DATE  Q:NORDER  D
"RTN","ECXNUT1",272,0)
 .S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,TYPE)) Q:'+NODE
"RTN","ECXNUT1",273,0)
 .S NORDER=DATE
"RTN","ECXNUT1",274,0)
 I TYPE="SO" D
"RTN","ECXNUT1",275,0)
 .F  S DATE=$O(@ARRAY@(ECXADM,FHDFN,DATE)) Q:'DATE  Q:NORDER  D
"RTN","ECXNUT1",276,0)
 ..S NUMT=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE,TYPE,NUMT)) Q:'NUMT
"RTN","ECXNUT1",277,0)
 ..S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,TYPE,NUMT)) Q:'+NODE
"RTN","ECXNUT1",278,0)
 ..S NORDER=DATE
"RTN","ECXNUT1",279,0)
 Q NORDER
"RTN","ECXNUT1",280,0)
MEALCHK ;CHECK IF MEAL IS ON HOLD
"RTN","ECXNUT1",281,0)
 S (H,OFF)="",MEALCHK=0
"RTN","ECXNUT1",282,0)
 I $P(DATES,U) S H=$P(DATES,U)
"RTN","ECXNUT1",283,0)
 I $P(DATES,U,4)]"" S OFF=$P(DATES,U,4)
"RTN","ECXNUT1",284,0)
 E  D
"RTN","ECXNUT1",285,0)
 .S OFF=$O(@ARRAY@(ECXADM,FHDFN,H))
"RTN","ECXNUT1",286,0)
 .I OFF']"" S OFF=ECED+1
"RTN","ECXNUT1",287,0)
 I ((DATE-.0000001)>H),(DATE-.0000001<OFF) S MEALCHK=1
"RTN","ECXNUT1",288,0)
 K H,OFF
"RTN","ECXNUT1",289,0)
 Q
"RTN","ECXNUTDP")
0^4^B16737506^B13072727
"RTN","ECXNUTDP",1,0)
ECXNUTDP ;ALB/JRC - Nut Division Worksheet Print ; 2/18/09 1:47pm
"RTN","ECXNUTDP",2,0)
 ;;3.0;DSS EXTRACTS;**92,104,119**;Dec 22, 1997;Build 19
"RTN","ECXNUTDP",3,0)
 ;
"RTN","ECXNUTDP",4,0)
EN ;entry point from option
"RTN","ECXNUTDP",5,0)
 ;Queue Report
"RTN","ECXNUTDP",6,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXNUTDP",7,0)
 S ZTIO=""
"RTN","ECXNUTDP",8,0)
 S ZTDESC="Nutrition Division Worksheet for DSS"
"RTN","ECXNUTDP",9,0)
 D EN^XUTMDEVQ("EN1^ECXNUTDP",ZTDESC,.ZTSAVE)
"RTN","ECXNUTDP",10,0)
 Q
"RTN","ECXNUTDP",11,0)
EN1 ;Tasked entry point
"RTN","ECXNUTDP",12,0)
 ;Declare variables
"RTN","ECXNUTDP",13,0)
 N STOP,PAGENUM,LN,LTYPE
"RTN","ECXNUTDP",14,0)
 S (STOP,PAGENUM,LTYPE)=0,LN=""
"RTN","ECXNUTDP",15,0)
 K ^TMP($J)
"RTN","ECXNUTDP",16,0)
 F LTYPE="119.71","119.72" D  I STOP D EXIT Q
"RTN","ECXNUTDP",17,0)
 .D HEADER I STOP D EXIT Q
"RTN","ECXNUTDP",18,0)
 .D GETDATA
"RTN","ECXNUTDP",19,0)
 .I '$D(^TMP($J,"ECX",LTYPE)) D  Q
"RTN","ECXNUTDP",20,0)
 ..W !
"RTN","ECXNUTDP",21,0)
 ..W !,"***********************************************"
"RTN","ECXNUTDP",22,0)
 ..W !,"*  NOTHING TO REPORT FOR "_$S(LTYPE=119.71:"PRODUCTION LOCATIONS",LTYPE=119.72:"DELIVERY LOCATIONS  ",1:"")_" *"
"RTN","ECXNUTDP",23,0)
 ..W !,"***********************************************"
"RTN","ECXNUTDP",24,0)
 ..D WAIT
"RTN","ECXNUTDP",25,0)
 .D DETAIL I STOP D EXIT Q
"RTN","ECXNUTDP",26,0)
 .D FOOTER I STOP D EXIT Q
"RTN","ECXNUTDP",27,0)
 .D WAIT Q:STOP
"RTN","ECXNUTDP",28,0)
 .K ^TMP($J)
"RTN","ECXNUTDP",29,0)
EXIT K ^TMP("ECXDSS",$J)
"RTN","ECXNUTDP",30,0)
 Q
"RTN","ECXNUTDP",31,0)
GETDATA ;Get data
"RTN","ECXNUTDP",32,0)
 ;Init variables
"RTN","ECXNUTDP",33,0)
 N DIV,IEN,PLIEN,IENS,LOCATION,CNT,PDIV,FILE
"RTN","ECXNUTDP",34,0)
 S (DIV,LOCATION,PDIV)="",(IEN,PLIEN,IENS,CNT)=0
"RTN","ECXNUTDP",35,0)
 S DIV="" F  S DIV=$O(^ECX(728.46,"B",DIV)) Q:DIV=""  D
"RTN","ECXNUTDP",36,0)
 . ;Q:LTYPE'=$E(DIV,6,11)
"RTN","ECXNUTDP",37,0)
 . Q:LTYPE'=$E($P(DIV,"(",2),1,6)
"RTN","ECXNUTDP",38,0)
 . S IEN=$O(^ECX(728.46,"B",DIV,0)) Q:'IEN  D
"RTN","ECXNUTDP",39,0)
 .. ;S PLIEN=$P(DIV,";",1),FILE=$E(DIV,6,11),CNT=$G(CNT)+1
"RTN","ECXNUTDP",40,0)
 .. S PLIEN=$P(DIV,";",1),FILE=$E($P(DIV,"(",2),1,6),CNT=$G(CNT)+1
"RTN","ECXNUTDP",41,0)
 .. I FILE'=LTYPE Q
"RTN","ECXNUTDP",42,0)
 .. S IENS=""_PLIEN_","_""
"RTN","ECXNUTDP",43,0)
 .. S LOCATION=$$GET1^DIQ(FILE,""_IENS_","_"",.01,"E")
"RTN","ECXNUTDP",44,0)
 .. S PDIV=$$GET1^DIQ(728.46,IEN,1,"I")
"RTN","ECXNUTDP",45,0)
 .. S PDIV=$$RADDIV^ECXDEPT(PDIV)
"RTN","ECXNUTDP",46,0)
 .. S ^TMP($J,"ECX",FILE)="1"
"RTN","ECXNUTDP",47,0)
 .. S ^TMP($J,"ECX",FILE,PLIEN)=PLIEN_U_LOCATION_U_PDIV
"RTN","ECXNUTDP",48,0)
 Q
"RTN","ECXNUTDP",49,0)
HEADER ;print header
"RTN","ECXNUTDP",50,0)
 N TYPE
"RTN","ECXNUTDP",51,0)
 S PAGENUM=$G(PAGENUM)+1
"RTN","ECXNUTDP",52,0)
 S $P(LN,"=",9)="",TYPE=$S(LTYPE=119.71:"PRODUCTION",LTYPE=119.72:"DELIVERY",1:"")
"RTN","ECXNUTDP",53,0)
 W @IOF
"RTN","ECXNUTDP",54,0)
 W ?1,"RUN DATE: ",$$FMTE^XLFDT(DT,"5H"),?70,"PAGE ",PAGENUM
"RTN","ECXNUTDP",55,0)
 W !,?23,"NUTRITION DIVISION WORKSHEET"
"RTN","ECXNUTDP",56,0)
 W !!,?27,TYPE_" LOCATIONS"
"RTN","ECXNUTDP",57,0)
 W:TYPE="DELIVERY" !!,?2,TYPE
"RTN","ECXNUTDP",58,0)
 W:TYPE="PRODUCTION" !!,?1,TYPE
"RTN","ECXNUTDP",59,0)
 W ?26,TYPE,?50,"ASSIGNED"
"RTN","ECXNUTDP",60,0)
 W !,?1,"LOCATION #",?26,"LOCATIONS",?50,"DIVISION"
"RTN","ECXNUTDP",61,0)
 W !,?1,LN_"===",?26,LN,LN,?47,LN,LN
"RTN","ECXNUTDP",62,0)
 Q
"RTN","ECXNUTDP",63,0)
 ;
"RTN","ECXNUTDP",64,0)
DETAIL ;Print detailed line
"RTN","ECXNUTDP",65,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXNUTDP",66,0)
 ;                    PLIEN    - File 119.71 or 119.72 IEN
"RTN","ECXNUTDP",67,0)
 ;                    LOCATION - File 119.71 or 119.72 NAME
"RTN","ECXNUTDP",68,0)
 ;                    DIVISION - Assigned production division
"RTN","ECXNUTDP",69,0)
 ;Output  : None
"RTN","ECXNUTDP",70,0)
 N TYPE,FILE,NODE,PIEN,CNT,X1,X2
"RTN","ECXNUTDP",71,0)
 S TYPE=$S(LTYPE=119.71:"PRODUCTION",1:"DELIVERY LOCATIONS")
"RTN","ECXNUTDP",72,0)
 S FILE=0 F  S FILE=$O(^TMP($J,"ECX",FILE)) Q:'FILE!STOP  D
"RTN","ECXNUTDP",73,0)
 .S PIEN=0 F  S PIEN=$O(^TMP($J,"ECX",FILE,PIEN)) Q:'PIEN!STOP  D
"RTN","ECXNUTDP",74,0)
 ..S NODE=^TMP($J,"ECX",FILE,PIEN)
"RTN","ECXNUTDP",75,0)
 ..W !?3,$$RJ^XLFSTR($P(NODE,U),U,6),?26,$P(NODE,U,2),?50,$$RJ^XLFSTR($P(NODE,U,3),U,6)
"RTN","ECXNUTDP",76,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXNUTDP",77,0)
 ..Q
"RTN","ECXNUTDP",78,0)
 S CNT=0
"RTN","ECXNUTDP",79,0)
 W !!,"The following "_TYPE_" are missing in the DSS Worksheets"
"RTN","ECXNUTDP",80,0)
 W !!?3,TYPE,?26,"INACTIVE FLAG",!?3,"----",?26,"-------------",!
"RTN","ECXNUTDP",81,0)
 F IEN=0:0 S IEN=$O(^FH(LTYPE,IEN)) Q:'IEN  D
"RTN","ECXNUTDP",82,0)
 . I '$D(^ECX(728.46,"B",IEN_";FH("_LTYPE_",")) D
"RTN","ECXNUTDP",83,0)
 .. S X1=$$GET1^DIQ(LTYPE,""_IEN_","_"",.01,"E")
"RTN","ECXNUTDP",84,0)
 .. S X2=$$GET1^DIQ(LTYPE,IEN,99,"E")
"RTN","ECXNUTDP",85,0)
 .. W !?3,X1,?26,X2 S CNT=CNT+1
"RTN","ECXNUTDP",86,0)
 I CNT=0 W !!?3,"NOTHING TO REPORT... YOUR FILES ARE CLEAN!"
"RTN","ECXNUTDP",87,0)
 Q
"RTN","ECXNUTDP",88,0)
 ;
"RTN","ECXNUTDP",89,0)
WAIT ;End of page logic
"RTN","ECXNUTDP",90,0)
 ;Input   ; None
"RTN","ECXNUTDP",91,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXNUTDP",92,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXNUTDP",93,0)
 ;
"RTN","ECXNUTDP",94,0)
 S STOP=0
"RTN","ECXNUTDP",95,0)
 ;CRT - Prompt for continue
"RTN","ECXNUTDP",96,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXNUTDP",97,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXNUTDP",98,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXNUTDP",99,0)
 .S DIR(0)="E"
"RTN","ECXNUTDP",100,0)
 .D ^DIR
"RTN","ECXNUTDP",101,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXNUTDP",102,0)
 ;Background task - check taskman
"RTN","ECXNUTDP",103,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXNUTDP",104,0)
 I STOP D
"RTN","ECXNUTDP",105,0)
 .W !,"*********************************************"
"RTN","ECXNUTDP",106,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXNUTDP",107,0)
 .W !,"*********************************************"
"RTN","ECXNUTDP",108,0)
 Q
"RTN","ECXNUTDP",109,0)
FOOTER ;Print footer
"RTN","ECXNUTDP",110,0)
 N DIV,IEN
"RTN","ECXNUTDP",111,0)
 S DIV="",IEN=0
"RTN","ECXNUTDP",112,0)
 W !!!,?1,"INSTITUTION",!,"FILE/DIVISIONS",!,LN,LN
"RTN","ECXNUTDP",113,0)
 F  S DIV=$O(^DG(40.8,"B",DIV)) Q:DIV=""!STOP  D
"RTN","ECXNUTDP",114,0)
 .F  S IEN=$O(^DG(40.8,"B",DIV,IEN)) Q:'IEN!STOP  D  Q:STOP
"RTN","ECXNUTDP",115,0)
 ..W !,?3,$$RJ^XLFSTR($$GETDIV^ECXDEPT(IEN),U,8)
"RTN","ECXNUTDP",116,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER,FHEADER
"RTN","ECXNUTDP",117,0)
 Q
"RTN","ECXNUTDP",118,0)
FHEADER ;Footer header
"RTN","ECXNUTDP",119,0)
 W !!!,?1,"INSTITUTION",!,"FILE/DIVISIONS",!,LN,LN
"RTN","ECXNUTDP",120,0)
 Q
"RTN","ECXNUTPE")
0^5^B6521477^B5181727
"RTN","ECXNUTPE",1,0)
ECXNUTPE ;ALB/JRC - Nut Product Worksheet Edit ; 9/4/09 9:01am
"RTN","ECXNUTPE",2,0)
 ;;3.0;DSS EXTRACTS;**92,112,119**;Dec 22, 1997;Build 19
"RTN","ECXNUTPE",3,0)
 ;
"RTN","ECXNUTPE",4,0)
EN ;entry point from menu option
"RTN","ECXNUTPE",5,0)
 ;Declare variables
"RTN","ECXNUTPE",6,0)
 N STOP,DIC,DIE,DTOUT,DUOUT,Y,DA,DR,SCREEN,SCREEN1,CATEGORY,DIET,PRODUCT,CAT,FL,FL1,DLAYGO
"RTN","ECXNUTPE",7,0)
 S STOP=0
"RTN","ECXNUTPE",8,0)
 F  D  Q:STOP
"RTN","ECXNUTPE",9,0)
 .;Select diet category
"RTN","ECXNUTPE",10,0)
 .S DIC="^ECX(728.45,",DIC(0)="AEQMZL",DLAYGO=728.45
"RTN","ECXNUTPE",11,0)
 .D ^DIC
"RTN","ECXNUTPE",12,0)
 .I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTPE",13,0)
 .W "  ",Y(0,0)
"RTN","ECXNUTPE",14,0)
 .S SCREEN=$E($P(Y(0,0)," "),1)_$E($P(Y(0,0)," ",2),1)
"RTN","ECXNUTPE",15,0)
 .S CATEGORY=$P(Y,U,2)
"RTN","ECXNUTPE",16,0)
 .S CAT=+Y
"RTN","ECXNUTPE",17,0)
 .S FL1=Y(0)
"RTN","ECXNUTPE",18,0)
 .S FL=$S(FL1="PD":116.2,FL1="SF":118,FL1="SO":118.3,FL1="TF":118.2,1:"")
"RTN","ECXNUTPE",19,0)
 .F  D  Q:STOP
"RTN","ECXNUTPE",20,0)
SUB ..;Select category subentry
"RTN","ECXNUTPE",21,0)
 ..W !!,"IEN from file #"_FL_" can be used with ` in front ",!,"instead of entering Name of Diet. Diet Name can also be entered.",!
"RTN","ECXNUTPE",22,0)
 ..S SCREEN1=SCREEN K SCREEN
"RTN","ECXNUTPE",23,0)
 ..S DIC=FL,DIC(0)="AEQMZ"
"RTN","ECXNUTPE",24,0)
 ..D ^DIC
"RTN","ECXNUTPE",25,0)
 ..I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTPE",26,0)
 ..S DIET=+Y_";FH("_FL_","
"RTN","ECXNUTPE",27,0)
 ..I ($D(DTOUT))!($D(DUOUT)) S STOP=1 Q
"RTN","ECXNUTPE",28,0)
 ..D CHOICES
"RTN","ECXNUTPE",29,0)
 ..I $G(PRODUCT)']"" W !,"No Product selected.  So, no updating done at this time.",!
"RTN","ECXNUTPE",30,0)
 ..Q:STOP
"RTN","ECXNUTPE",31,0)
 ..D:$G(PRODUCT)]"" UPDATE
"RTN","ECXNUTPE",32,0)
 Q
"RTN","ECXNUTPE",33,0)
 ;
"RTN","ECXNUTPE",34,0)
CHOICES ;Prepare CHOICES variable for DIR call
"RTN","ECXNUTPE",35,0)
 ;      Input - screen  (Required)
"RTN","ECXNUTPE",36,0)
 ;
"RTN","ECXNUTPE",37,0)
 ;      Output - Array of choices
"RTN","ECXNUTPE",38,0)
 ;               1  Regular
"RTN","ECXNUTPE",39,0)
 ;               2  Clear Liqs
"RTN","ECXNUTPE",40,0)
 ;Init variables
"RTN","ECXNUTPE",41,0)
 N CHOICES,OFF,TEXT,DSSCAT,DSSPRO,CNT,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXNUTPE",42,0)
 S CHOICES="",SCREEN=SCREEN1
"RTN","ECXNUTPE",43,0)
 F OFF=1:1 S TEXT=$P($T(PRODUCTS+OFF^ECXNUTPP),";;",2) Q:TEXT="END"  D
"RTN","ECXNUTPE",44,0)
 .S DSSCAT=$P(TEXT,U),DSSPRO=$P(TEXT,U,2)
"RTN","ECXNUTPE",45,0)
 .Q:DSSCAT'=SCREEN
"RTN","ECXNUTPE",46,0)
 .S CNT=$G(CNT)+1
"RTN","ECXNUTPE",47,0)
 .S CHOICES=$G(CHOICES)_CNT_":"_DSSPRO_";"
"RTN","ECXNUTPE",48,0)
 S DIR(0)="S^"_CHOICES
"RTN","ECXNUTPE",49,0)
 S DIR("A")="Select DSS Assigned Product"
"RTN","ECXNUTPE",50,0)
 D ^DIR
"RTN","ECXNUTPE",51,0)
 I $D(DIRUT)!$D(DUOUT) S STOP=1 Q
"RTN","ECXNUTPE",52,0)
 S PRODUCT=Y(0)
"RTN","ECXNUTPE",53,0)
 Q
"RTN","ECXNUTPE",54,0)
 ;
"RTN","ECXNUTPE",55,0)
UPDATE ;Update file (#728.45) assigned product field
"RTN","ECXNUTPE",56,0)
 N ECXFDA,ECXERR
"RTN","ECXNUTPE",57,0)
 S ECXFDA(728.45,"?1,",.01)=CATEGORY
"RTN","ECXNUTPE",58,0)
 S ECXFDA(728.451,"?+2,?1,",.01)=DIET
"RTN","ECXNUTPE",59,0)
 S ECXFDA(728.451,"?+2,?1,",1)=PRODUCT
"RTN","ECXNUTPE",60,0)
 D UPDATE^DIE("","ECXFDA","","ECXERR")
"RTN","ECXNUTPE",61,0)
 I $D(ECXERR) D
"RTN","ECXNUTPE",62,0)
 .W !!!,"Problem encountered during record update "
"RTN","ECXNUTPE",63,0)
 .W !!,"Contact IRM"_"  Error: "_$G(ECXERR("DIERR",1,"TEXT",1))
"RTN","ECXNUTPE",64,0)
 Q
"RTN","ECXNUTPP")
0^3^B20040767^B13036661
"RTN","ECXNUTPP",1,0)
ECXNUTPP ;ALB/JRC - Nut Production Worksheet Print ; 4/12/09 11:31pm
"RTN","ECXNUTPP",2,0)
 ;;3.0;DSS EXTRACTS;**92,119**;Dec 22, 1997;Build 19
"RTN","ECXNUTPP",3,0)
 ;
"RTN","ECXNUTPP",4,0)
EN ;entry point from option
"RTN","ECXNUTPP",5,0)
 ;Queue Report
"RTN","ECXNUTPP",6,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXNUTPP",7,0)
 S ZTIO=""
"RTN","ECXNUTPP",8,0)
 S ZTDESC="Nutrition Division Worksheet for DSS"
"RTN","ECXNUTPP",9,0)
 D EN^XUTMDEVQ("EN1^ECXNUTPP",ZTDESC,.ZTSAVE)
"RTN","ECXNUTPP",10,0)
 Q
"RTN","ECXNUTPP",11,0)
EN1 ;Tasked entry point
"RTN","ECXNUTPP",12,0)
 ;Declare variables
"RTN","ECXNUTPP",13,0)
 N STOP,PAGE,TDIET,TTDIET,LTYPE,LN
"RTN","ECXNUTPP",14,0)
 S (STOP,PAGE,LTYPE)=0,(TDIET)=""
"RTN","ECXNUTPP",15,0)
 K ^TMP($J)
"RTN","ECXNUTPP",16,0)
 F  S TDIET=$O(^ECX(728.45,"B",TDIET)) Q:TDIET=""!STOP  D
"RTN","ECXNUTPP",17,0)
 .S IEN=0,IEN=$O(^ECX(728.45,"B",TDIET,IEN))
"RTN","ECXNUTPP",18,0)
 .S TTDIET=$$GET1^DIQ(728.45,IEN,.01)
"RTN","ECXNUTPP",19,0)
 .D HEADER I STOP D EXIT Q
"RTN","ECXNUTPP",20,0)
 .D GETDATA I STOP D EXIT Q
"RTN","ECXNUTPP",21,0)
 .I '$O(^TMP($J,"ECX",0)) D  Q
"RTN","ECXNUTPP",22,0)
 ..W !
"RTN","ECXNUTPP",23,0)
 ..W !,"***********************************************************"
"RTN","ECXNUTPP",24,0)
 ..W !,"*  NOTHING TO REPORT FOR "_TTDIET_" CATEGORY",?58,"*"
"RTN","ECXNUTPP",25,0)
 ..W !,"***********************************************************"
"RTN","ECXNUTPP",26,0)
 ..D WAIT
"RTN","ECXNUTPP",27,0)
 .D DETAIL I STOP D EXIT Q
"RTN","ECXNUTPP",28,0)
 .D FOOTER I STOP D EXIT Q
"RTN","ECXNUTPP",29,0)
 .D WAIT I STOP D EXIT Q
"RTN","ECXNUTPP",30,0)
 .K ^TMP($J,"ECX")
"RTN","ECXNUTPP",31,0)
 D FILECHK
"RTN","ECXNUTPP",32,0)
EXIT K ^TMP($J,"ECX")
"RTN","ECXNUTPP",33,0)
 Q
"RTN","ECXNUTPP",34,0)
GETDATA ;Get data
"RTN","ECXNUTPP",35,0)
 ;Init variables
"RTN","ECXNUTPP",36,0)
 N IEN,DIET,EDIET,DIEN,IENS,PRODUCT
"RTN","ECXNUTPP",37,0)
 S (IEN,DIET,EDIET,DIEN,IENS,PRODUCT)=""
"RTN","ECXNUTPP",38,0)
 F  S IEN=$O(^ECX(728.45,"B",TDIET,IEN)) Q:'IEN  F  S DIET=$O(^ECX(728.45,IEN,1,"B",DIET)) Q:DIET=""  F  S DIEN=$O(^ECX(728.45,IEN,1,"B",DIET,DIEN)) Q:'DIEN   D
"RTN","ECXNUTPP",39,0)
 .S IENS=""_DIEN_","_IEN_","_""
"RTN","ECXNUTPP",40,0)
 .S PRODUCT=$$GET1^DIQ(728.451,IENS,1,"E")
"RTN","ECXNUTPP",41,0)
 .S EDIET=$$GET1^DIQ(728.451,IENS,.01,"E")
"RTN","ECXNUTPP",42,0)
 .S ^TMP($J,"ECX",IEN)=""
"RTN","ECXNUTPP",43,0)
 .S ^TMP($J,"ECX",IEN,DIEN)=EDIET_U_PRODUCT
"RTN","ECXNUTPP",44,0)
 Q
"RTN","ECXNUTPP",45,0)
HEADER ;print header
"RTN","ECXNUTPP",46,0)
 S PAGE=$G(PAGE)+1
"RTN","ECXNUTPP",47,0)
 S $P(LN,"=",15)=""
"RTN","ECXNUTPP",48,0)
 W @IOF
"RTN","ECXNUTPP",49,0)
 W ?1,"RUN DATE: ",$$FMTE^XLFDT(DT,"5H"),?70,"PAGE ",PAGE
"RTN","ECXNUTPP",50,0)
 W !,?23,"NUTRITION PRODUCT WORKSHEET"
"RTN","ECXNUTPP",51,0)
 W !!,?27,TTDIET
"RTN","ECXNUTPP",52,0)
 W !!,?1,$P(TTDIET," ",1),?36,"ASSIGNED"
"RTN","ECXNUTPP",53,0)
 W !,?1,$P(TTDIET," ",2),?36,"PRODUCT"
"RTN","ECXNUTPP",54,0)
 W !,?1,LN,?36,LN
"RTN","ECXNUTPP",55,0)
 Q
"RTN","ECXNUTPP",56,0)
 ;
"RTN","ECXNUTPP",57,0)
DETAIL ;Print detailed line
"RTN","ECXNUTPP",58,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXNUTPP",59,0)
 ;                    DIET - File 116.2, 118, 118.2, 118.3, NAME
"RTN","ECXNUTPP",60,0)
 ;                    PRODUCT - Assigned DSS product
"RTN","ECXNUTPP",61,0)
 ;Output  : None
"RTN","ECXNUTPP",62,0)
 ;
"RTN","ECXNUTPP",63,0)
 N NUMBER,RECORD,NODE
"RTN","ECXNUTPP",64,0)
 S (NUMBER,RECORD)=0,NODE=""
"RTN","ECXNUTPP",65,0)
 F  S NUMBER=$O(^TMP($J,"ECX",NUMBER)) Q:'NUMBER!STOP  D
"RTN","ECXNUTPP",66,0)
 .F  S RECORD=$O(^TMP($J,"ECX",NUMBER,RECORD)) Q:'RECORD!STOP  D
"RTN","ECXNUTPP",67,0)
 ..S NODE=$G(^TMP($J,"ECX",NUMBER,RECORD))
"RTN","ECXNUTPP",68,0)
 ..W !,?1,$P(NODE,U),?36,$P(NODE,U,2)
"RTN","ECXNUTPP",69,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXNUTPP",70,0)
 .Q
"RTN","ECXNUTPP",71,0)
 Q
"RTN","ECXNUTPP",72,0)
 ;
"RTN","ECXNUTPP",73,0)
WAIT ;End of page logic
"RTN","ECXNUTPP",74,0)
 ;Input   ; None
"RTN","ECXNUTPP",75,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXNUTPP",76,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXNUTPP",77,0)
 ;
"RTN","ECXNUTPP",78,0)
 S STOP=0
"RTN","ECXNUTPP",79,0)
 ;CRT - Prompt for continue
"RTN","ECXNUTPP",80,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXNUTPP",81,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXNUTPP",82,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXNUTPP",83,0)
 .S DIR(0)="E"
"RTN","ECXNUTPP",84,0)
 .D ^DIR
"RTN","ECXNUTPP",85,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXNUTPP",86,0)
 ;Background task - check taskman
"RTN","ECXNUTPP",87,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXNUTPP",88,0)
 I STOP D
"RTN","ECXNUTPP",89,0)
 .W !,"*********************************************"
"RTN","ECXNUTPP",90,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXNUTPP",91,0)
 .W !,"*********************************************"
"RTN","ECXNUTPP",92,0)
 Q
"RTN","ECXNUTPP",93,0)
 ;
"RTN","ECXNUTPP",94,0)
FOOTER ;Print footer
"RTN","ECXNUTPP",95,0)
 N SCREEN
"RTN","ECXNUTPP",96,0)
 S SCREEN=$E($P(TTDIET," ",1),1,1)_$E($P(TTDIET," ",2),1,1)
"RTN","ECXNUTPP",97,0)
 D FHEADER
"RTN","ECXNUTPP",98,0)
 D DSSPRO
"RTN","ECXNUTPP",99,0)
 Q
"RTN","ECXNUTPP",100,0)
 ;
"RTN","ECXNUTPP",101,0)
FHEADER ;Footer header
"RTN","ECXNUTPP",102,0)
 W !,?1,"DSS PRODUCTS",!,?1,LN
"RTN","ECXNUTPP",103,0)
 Q
"RTN","ECXNUTPP",104,0)
 ;
"RTN","ECXNUTPP",105,0)
DSSPRO ;DSS standardized products
"RTN","ECXNUTPP",106,0)
 N OFF,TEXT,DSSCAT,DSSPRO
"RTN","ECXNUTPP",107,0)
 F OFF=1:1 S TEXT=$P($T(PRODUCTS+OFF),";;",2) Q:TEXT="END"!STOP  D
"RTN","ECXNUTPP",108,0)
 .S DSSCAT=$P(TEXT,U),DSSPRO=$P(TEXT,U,2)
"RTN","ECXNUTPP",109,0)
 .Q:DSSCAT'=SCREEN
"RTN","ECXNUTPP",110,0)
 .W !,?1,DSSPRO
"RTN","ECXNUTPP",111,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER,FHEADER
"RTN","ECXNUTPP",112,0)
 Q
"RTN","ECXNUTPP",113,0)
 ;
"RTN","ECXNUTPP",114,0)
FILECHK ;check files for missing diets
"RTN","ECXNUTPP",115,0)
 N CNT,IEN,X1,X2,FILE,TYPE,NAME,TYP
"RTN","ECXNUTPP",116,0)
 D HEADER2
"RTN","ECXNUTPP",117,0)
 F TYPE="PD","SF","SO","TF" D
"RTN","ECXNUTPP",118,0)
 . S TYP=$O(^ECX(728.45,"B",TYPE,0))
"RTN","ECXNUTPP",119,0)
 . S CNT=0
"RTN","ECXNUTPP",120,0)
 . W !!!
"RTN","ECXNUTPP",121,0)
 . S FILE=$S(TYPE="PD":116.2,TYPE="SF":118,TYPE="TF":118.2,TYPE="SO":118.3)
"RTN","ECXNUTPP",122,0)
 . F IEN=0:0 S IEN=$O(^FH(FILE,IEN)) Q:'IEN  D
"RTN","ECXNUTPP",123,0)
 .. I '$D(^ECX(728.45,+$G(TYP),1,"B",IEN_";FH("_FILE_",")) D
"RTN","ECXNUTPP",124,0)
 ... S X1=$$GET1^DIQ(FILE,IEN,.01,"E")
"RTN","ECXNUTPP",125,0)
 ... S X2=$$GET1^DIQ(FILE,IEN,99,"E")
"RTN","ECXNUTPP",126,0)
 ...W !?3,X1,"   (",IEN,")",?50,TYPE,?56,X2 S CNT=CNT+1
"RTN","ECXNUTPP",127,0)
 ...I $Y>(IOSL-5) D HEADER2
"RTN","ECXNUTPP",128,0)
 . I CNT=0 W !?3,"NOTHING TO REPORT FOR "_TYPE_" DIET."
"RTN","ECXNUTPP",129,0)
 Q
"RTN","ECXNUTPP",130,0)
HEADER2 ;header for file check
"RTN","ECXNUTPP",131,0)
 S PAGE=$G(PAGE)+1
"RTN","ECXNUTPP",132,0)
 W @IOF
"RTN","ECXNUTPP",133,0)
 W !!,"THE FOLLOWING DIETS ARE MISSING FROM DSS WORKSHEETS",?70,"PAGE ",PAGE,!
"RTN","ECXNUTPP",134,0)
 W !?3,"DIET",?50,"DIET",?56,"INACTIVE"
"RTN","ECXNUTPP",135,0)
 W !,?50,"TYPE",?58,"FLAG"
"RTN","ECXNUTPP",136,0)
 W !?3,"----",?50,"----",?56,"--------",!
"RTN","ECXNUTPP",137,0)
 Q
"RTN","ECXNUTPP",138,0)
PRODUCTS ;Standardized assigned products for nutrition diets
"RTN","ECXNUTPP",139,0)
 ;;PD^REGULAR
"RTN","ECXNUTPP",140,0)
 ;;PD^FULL LIQS
"RTN","ECXNUTPP",141,0)
 ;;PD^CLEAR LIQS
"RTN","ECXNUTPP",142,0)
 ;;PD^PUREE DYSPH
"RTN","ECXNUTPP",143,0)
 ;;SF^SUPP FEED
"RTN","ECXNUTPP",144,0)
 ;;SF^SUPP FEED NC
"RTN","ECXNUTPP",145,0)
 ;;TF^TF LESS 1
"RTN","ECXNUTPP",146,0)
 ;;TF^TF MORE 1
"RTN","ECXNUTPP",147,0)
 ;;TF^TF MIX LESS 1
"RTN","ECXNUTPP",148,0)
 ;;TF^TF MIX MORE 1
"RTN","ECXNUTPP",149,0)
 ;;SO^ST ORDER
"RTN","ECXNUTPP",150,0)
 ;;SO^ST ORDER NC
"RTN","ECXNUTPP",151,0)
 ;;END
"RTN","ECXUTL6")
0^2^B71591342^B68731197
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ; 7/24/09 2:06pm
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105,112,119**;Dec 22, 1997;Build 19
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .N VAHOW
"RTN","ECXUTL6",41,0)
 .K ^UTILITY("VAIP",$J)
"RTN","ECXUTL6",42,0)
 .S DFN=$P($G(^FHPT(FHDFN,0)),U,3)
"RTN","ECXUTL6",43,0)
 .S VAIP("D")=$G(SDATE),VAHOW=2
"RTN","ECXUTL6",44,0)
 .D IN5^VADPT
"RTN","ECXUTL6",45,0)
 .S MASWARD=+^UTILITY("VAIP",$J,5)
"RTN","ECXUTL6",46,0)
 .S WARD=$O(^FH(119.6,"AW",+MASWARD,0))
"RTN","ECXUTL6",47,0)
 .S:+WARD'>0 WARD=""
"RTN","ECXUTL6",48,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",49,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",50,0)
 .;Get divisions
"RTN","ECXUTL6",51,0)
 .D GETDIV
"RTN","ECXUTL6",52,0)
 .Q
"RTN","ECXUTL6",53,0)
 ;
"RTN","ECXUTL6",54,0)
 ;Get food production facility for OP Supplemental feedings,
"RTN","ECXUTL6",55,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",56,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",57,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",58,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",59,0)
 I P["OP",D["SF" D
"RTN","ECXUTL6",60,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",61,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",62,0)
 .;Get delivery division
"RTN","ECXUTL6",63,0)
 .D GETDIV
"RTN","ECXUTL6",64,0)
 .Q
"RTN","ECXUTL6",65,0)
 ;Get food production facility for OP Standing Orders,
"RTN","ECXUTL6",66,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",67,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",68,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",69,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",70,0)
 I P["OP",D["SO" D
"RTN","ECXUTL6",71,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",72,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",73,0)
 .;Get delivery division
"RTN","ECXUTL6",74,0)
 .D GETDIV
"RTN","ECXUTL6",75,0)
 .Q
"RTN","ECXUTL6",76,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",77,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",78,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",79,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",80,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",81,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",82,0)
 .D GETDIV
"RTN","ECXUTL6",83,0)
 .Q
"RTN","ECXUTL6",84,0)
 ;
"RTN","ECXUTL6",85,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",86,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",87,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",88,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",89,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",90,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",91,0)
 .;Get delivery division
"RTN","ECXUTL6",92,0)
 .D GETDIV
"RTN","ECXUTL6",93,0)
 .Q
"RTN","ECXUTL6",94,0)
 ;
"RTN","ECXUTL6",95,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",96,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",97,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",98,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",99,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",100,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",101,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",102,0)
 .;Get delivery division
"RTN","ECXUTL6",103,0)
 .D GETDIV
"RTN","ECXUTL6",104,0)
 .Q
"RTN","ECXUTL6",105,0)
 ;
"RTN","ECXUTL6",106,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",107,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",108,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",109,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",110,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",111,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",112,0)
 .;Get delivery division
"RTN","ECXUTL6",113,0)
 .D GETDIV
"RTN","ECXUTL6",114,0)
 .Q
"RTN","ECXUTL6",115,0)
 ;
"RTN","ECXUTL6",116,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",117,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",118,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",119,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",120,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",121,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",122,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",123,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",124,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",125,0)
 ;   all other meals are null
"RTN","ECXUTL6",126,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",127,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",128,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",129,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",130,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",131,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",132,0)
 ;
"RTN","ECXUTL6",133,0)
 ;Delivery feeder location
"RTN","ECXUTL6",134,0)
 I DLT="C" D
"RTN","ECXUTL6",135,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",136,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",137,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",138,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",139,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",140,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",141,0)
 .I P="INP" D
"RTN","ECXUTL6",142,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",143,0)
 .I P="OP" D
"RTN","ECXUTL6",144,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",145,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",146,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,+WARD,3,"E"),1:$$GET1^DIQ(119.6,+WARD,4,"E"))
"RTN","ECXUTL6",147,0)
 Q 1
"RTN","ECXUTL6",148,0)
 ;
"RTN","ECXUTL6",149,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",150,0)
 ;Init variables
"RTN","ECXUTL6",151,0)
 N IEN,SIEN,SVP
"RTN","ECXUTL6",152,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",153,0)
 S SVP=$S(TRSVP:TRSVP,CRSVP:CRSVP,1:"")
"RTN","ECXUTL6",154,0)
 S IEN=$$GET1^DIQ(119.72,+SVP,2,"I")
"RTN","ECXUTL6",155,0)
 Q:'IEN
"RTN","ECXUTL6",156,0)
 ;Get delivery division
"RTN","ECXUTL6",157,0)
 S SIEN=""_+SVP_";FH(119.72,"
"RTN","ECXUTL6",158,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",159,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",160,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",161,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",162,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",163,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",164,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",165,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",166,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",167,0)
 Q
"RTN","ECXUTL6",168,0)
 ;
"RTN","ECXUTL6",169,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",170,0)
 ;Init variables
"RTN","ECXUTL6",171,0)
 S (CRST,STCD,CLINIC)=""
"RTN","ECXUTL6",172,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",173,0)
 Q:$P(EC0,U,12)'="O" ""
"RTN","ECXUTL6",174,0)
 ;Get stop codes (outpatient only)
"RTN","ECXUTL6",175,0)
 I $P(EC0,U,12)="O" D
"RTN","ECXUTL6",176,0)
 .;Get credit stop code (outpatient only)
"RTN","ECXUTL6",177,0)
 .S CRST=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",2503,"I")_","_"",1,"E")
"RTN","ECXUTL6",178,0)
 .;Get stop code (outpatient only)
"RTN","ECXUTL6",179,0)
 .S STCD=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",8,"I")_","_"",1,"E")
"RTN","ECXUTL6",180,0)
 ;Clinic for non-or case use associated clinic else non-or location
"RTN","ECXUTL6",181,0)
 ;If non-or case
"RTN","ECXUTL6",182,0)
 I $P($G(ECNO),U)="Y" S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),1:$P(ECNO,U,2))
"RTN","ECXUTL6",183,0)
 ;Get stop codes non-or cases
"RTN","ECXUTL6",184,0)
 I $P($G(ECNO),U)="Y" D
"RTN","ECXUTL6",185,0)
 .;Get credit stop code for non-or case
"RTN","ECXUTL6",186,0)
 .S CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,2503,"I"),1,"E")
"RTN","ECXUTL6",187,0)
 .;Get stop code for non-or case
"RTN","ECXUTL6",188,0)
 .S STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,8,"I"),1,"E")
"RTN","ECXUTL6",189,0)
 ;Clinic, not a non-or case use surgical specialty associated clinic
"RTN","ECXUTL6",190,0)
 I $P($G(ECNO),U)'="Y" S CLINIC=$$GET1^DIQ(137.45,+$P(EC0,U,4),2,"I")
"RTN","ECXUTL6",191,0)
 Q 1
"RTN","ECXUTL6",192,0)
 ;
"RTN","ECXUTL6",193,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",194,0)
 ;Init variables
"RTN","ECXUTL6",195,0)
 N CODE,I,PODX
"RTN","ECXUTL6",196,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",197,0)
 ;Check input
"RTN","ECXUTL6",198,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",199,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",200,0)
 S PRODX=$$GET1^DIQ(80,$P(DATAOP,U,3),.01)
"RTN","ECXUTL6",201,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",202,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",203,0)
 .S I=I+1,PODX="PODX"_I,@PODX=$$GET1^DIQ(80,$P(^SRO(136,ECD0,4,CODE,0),U),.01)
"RTN","ECXUTL6",204,0)
 Q 1
"RTN","ECXUTL6",205,0)
 ;
"RTN","ECXUTL6",206,0)
LOINC(ARRAY) ;Get DSS lab test information out of DSS LOINC CODE (#727.29) file
"RTN","ECXUTL6",207,0)
 ;Input
"RTN","ECXUTL6",208,0)
 ;   ARRAY(LOINC-CK) := array of valid LOINC (#727.29 DSS LOINC CODE)
"RTN","ECXUTL6",209,0)
 ;                      entries with their check digit
"RTN","ECXUTL6",210,0)
 ;   or,
"RTN","ECXUTL6",211,0)
 ;   ARRAY("ALL")    := request for all LOINC entries
"RTN","ECXUTL6",212,0)
 ;Output
"RTN","ECXUTL6",213,0)
 ;   ^TMP($J,"EXCUTL6",LOINC-CK)  =
"RTN","ECXUTL6",214,0)
 ;              zero node of file 727.29 pieces 1 thru 4
"RTN","ECXUTL6",215,0)
 ;              piece 1 := LOINC-CK (LOINC-check digit)
"RTN","ECXUTL6",216,0)
 ;              piece 2 := DSS lar test number
"RTN","ECXUTL6",217,0)
 ;              piece 3 := DSS test name
"RTN","ECXUTL6",218,0)
 ;              piece 4 := DSS Reporting units
"RTN","ECXUTL6",219,0)
 ;              piece 5 := LOINC name
"RTN","ECXUTL6",220,0)
 ;              piece 6 := pointer to LAB LOINC (#95.3) code entry
"RTN","ECXUTL6",221,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",222,0)
 ;          -1 := not a valid loinc entry from file 727.29
"RTN","ECXUTL6",223,0)
 ;          -2 := no dss lar test number associated with loinc
"RTN","ECXUTL6",224,0)
 ;
"RTN","ECXUTL6",225,0)
 ;   ^TMP($J,"ECXUTL6",LOINC-CK,WKLD,SPEC/-or-"DEFAULT",LTEST)= 
"RTN","ECXUTL6",226,0)
 ;              piece 1 := WKLD Code (external)
"RTN","ECXUTL6",227,0)
 ;              piece 2 := specimen (external) or "DEFAULT LOINC"
"RTN","ECXUTL6",228,0)
 ;              piece 3 := laboratory test (external)
"RTN","ECXUTL6",229,0)
 ;              piece 4:= local LOINC code external
"RTN","ECXUTL6",230,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",231,0)
 ;
"RTN","ECXUTL6",232,0)
 ;
"RTN","ECXUTL6",233,0)
 I '$D(ARRAY) Q
"RTN","ECXUTL6",234,0)
 K ^TMP($J,"ECXUTL6")
"RTN","ECXUTL6",235,0)
 N LOINCCK,LIEN,SPEC,EC0,WKLD,WKLD0,TA,LRASSV
"RTN","ECXUTL6",236,0)
 S LOINCCK=""
"RTN","ECXUTL6",237,0)
 I $D(ARRAY("ALL")) D
"RTN","ECXUTL6",238,0)
 . F  S LOINCCK=$O(^ECX(727.29,"B",LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",239,0)
 E  D
"RTN","ECXUTL6",240,0)
 . F  S LOINCCK=$O(ARRAY(LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",241,0)
 Q
"RTN","ECXUTL6",242,0)
 ;
"RTN","ECXUTL6",243,0)
EXT I '$D(^ECX(727.29,"B",LOINCCK)) S ^TMP($J,"ECXUTL6",LOINCCK)=-1_"^no entry in DSS LOINC CODE (#727.29)." Q
"RTN","ECXUTL6",244,0)
 S LIEN=$O(^ECX(727.29,"B",LOINCCK,0))
"RTN","ECXUTL6",245,0)
 I '$P(^ECX(727.29,LIEN,0),U,2) S ^TMP($J,"ECXUTL6",LOINCCK)=-2_"^no dss test number found." Q
"RTN","ECXUTL6",246,0)
 S EC0=^ECX(727.29,LIEN,0)
"RTN","ECXUTL6",247,0)
 S ^TMP($J,"ECXUTL6",LOINCCK)=EC0_"^"
"RTN","ECXUTL6",248,0)
 S LOINCPTR=""
"RTN","ECXUTL6",249,0)
 I LOINCCK=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01) D
"RTN","ECXUTL6",250,0)
 . S LOINCPTR=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01,"I")
"RTN","ECXUTL6",251,0)
 . S ^TMP($J,"ECXUTL6",LOINCCK)=^TMP($J,"ECXUTL6",LOINCCK)_LOINCPTR
"RTN","ECXUTL6",252,0)
 I LOINCPTR D
"RTN","ECXUTL6",253,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AH",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",254,0)
 . . S LRASSV=""
"RTN","ECXUTL6",255,0)
 . . F  S LRASSV=$O(^LAM(WKLD,7,"B",LRASSV)) Q:LRASSV=""  D
"RTN","ECXUTL6",256,0)
 . . . I $E($P(LRASSV,";",2),1,7)'="LAB(60," Q
"RTN","ECXUTL6",257,0)
 . . . S LTEST=$P(LRASSV,";")
"RTN","ECXUTL6",258,0)
 . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",259,0)
 . . . . I $D(^LAM(WKLD,9)) D
"RTN","ECXUTL6",260,0)
 . . . . . S LLNCP=$P(^LAM(WKLD,9),"^") S:LLNCP>0 LLNC=$$GET1^DIQ(95.3,$P(LLNCP,"-"),.01)
"RTN","ECXUTL6",261,0)
 . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,"ZZDEFAULT",LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_"DEFAULT LOINC"_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LLNC
"RTN","ECXUTL6",262,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AI",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",263,0)
 . . S SPEC=0 F  S SPEC=$O(^LAM("AI",LOINCPTR,WKLD,SPEC)) Q:'SPEC  D
"RTN","ECXUTL6",264,0)
 . . . S TA=0
"RTN","ECXUTL6",265,0)
 . . . F  S TA=$O(^LAM(WKLD,5,SPEC,1,TA)) Q:'TA  D
"RTN","ECXUTL6",266,0)
 . . . . S SPECD=^LAM(WKLD,5,SPEC,1,TA,0)
"RTN","ECXUTL6",267,0)
 . . . . S LTEST=$P(SPECD,"^",4)
"RTN","ECXUTL6",268,0)
 . . . . N LLNCP
"RTN","ECXUTL6",269,0)
 . . . . S LLNC="" S:$D(^LAM(WKLD,5,SPEC,1,TA,1)) LLNCP=$P(^LAM(WKLD,5,SPEC,1,TA,1),"^"),LLNC=$$GET1^DIQ(95.3,$P(LLNCP,"-"),.01)
"RTN","ECXUTL6",270,0)
 . . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",271,0)
 . . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,SPEC,LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_$$GET1^DIQ(61,SPEC,.01)_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LLNC
"RTN","ECXUTL6",272,0)
 Q
"RTN","ECXUTL6",273,0)
 ;
"RTN","ECXUTL6",274,0)
INPUTT ;
"RTN","ECXUTL6",275,0)
 N DIC S DIC="^DIC(40.7,",DIC(0)="EMZ",DIC("S")="I '$P(^(0),U,3)&($L($P(^(0),U,2)'=3)) Q"
"RTN","ECXUTL6",276,0)
 D ^DIC K:Y<0 X Q:Y<0
"RTN","ECXUTL6",277,0)
 S X=$S($D(Y(0)):$P(Y(0),U,2),1:"") K:X=""!($L(X)'=3) X K DIC
"RTN","ECXUTL6",278,0)
 Q
"VER")
8.0^22.0
"BLD",7877,6)
^109
**END**
**END**
