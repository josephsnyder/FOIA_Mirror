EMERGENCY Released ECX*3*127 SEQ #117
Extracted from mail message
**KIDS**:ECX*3.0*127^

**INSTALL NAME**
ECX*3.0*127
"BLD",8205,0)
ECX*3.0*127^DSS EXTRACTS^0^3101123^y
"BLD",8205,1,0)
^^1^1^3101118^^^^
"BLD",8205,1,1,0)
FY 2011 ENHANCEMENTS
"BLD",8205,4,0)
^9.64PA^728^19
"BLD",8205,4,727.802,0)
727.802
"BLD",8205,4,727.802,2,0)
^9.641^727.802^1
"BLD",8205,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",8205,4,727.802,2,727.802,1,0)
^9.6411^90^3
"BLD",8205,4,727.802,2,727.802,1,44,0)
SHAD STATUS
"BLD",8205,4,727.802,2,727.802,1,55,0)
ENCOUNTER SHAD
"BLD",8205,4,727.802,2,727.802,1,90,0)
PATCAT
"BLD",8205,4,727.802,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.802,224)

"BLD",8205,4,727.805,0)
727.805
"BLD",8205,4,727.805,2,0)
^9.641^727.805^1
"BLD",8205,4,727.805,2,727.805,0)
NURSING EXTRACT  (File-top level)
"BLD",8205,4,727.805,2,727.805,1,0)
^9.6411^25^1
"BLD",8205,4,727.805,2,727.805,1,25,0)
PATCAT
"BLD",8205,4,727.805,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.805,224)

"BLD",8205,4,727.808,0)
727.808
"BLD",8205,4,727.808,2,0)
^9.641^727.808^1
"BLD",8205,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",8205,4,727.808,2,727.808,1,0)
^9.6411^37^1
"BLD",8205,4,727.808,2,727.808,1,37,0)
PATCAT
"BLD",8205,4,727.808,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.808,224)

"BLD",8205,4,727.809,0)
727.809
"BLD",8205,4,727.809,2,0)
^9.641^727.809^1
"BLD",8205,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",8205,4,727.809,2,727.809,1,0)
^9.6411^83^2
"BLD",8205,4,727.809,2,727.809,1,49,0)
SHAD STATUS
"BLD",8205,4,727.809,2,727.809,1,83,0)
PATCAT
"BLD",8205,4,727.809,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.809,224)

"BLD",8205,4,727.81,0)
727.81
"BLD",8205,4,727.81,2,0)
^9.641^727.81^1
"BLD",8205,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",8205,4,727.81,2,727.81,1,0)
^9.6411^98^3
"BLD",8205,4,727.81,2,727.81,1,15,0)
SHAD STATUS
"BLD",8205,4,727.81,2,727.81,1,18,0)
ENCOUNTER SHAD
"BLD",8205,4,727.81,2,727.81,1,98,0)
PATCAT
"BLD",8205,4,727.81,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.81,224)

"BLD",8205,4,727.811,0)
727.811
"BLD",8205,4,727.811,2,0)
^9.641^727.811^1
"BLD",8205,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",8205,4,727.811,2,727.811,1,0)
^9.6411^120^16
"BLD",8205,4,727.811,2,727.811,1,105,0)
SHAD STATUS
"BLD",8205,4,727.811,2,727.811,1,106,0)
ENCOUNTER SHAD
"BLD",8205,4,727.811,2,727.811,1,107,0)
FIRST ASST
"BLD",8205,4,727.811,2,727.811,1,108,0)
FIRST ASST PC
"BLD",8205,4,727.811,2,727.811,1,109,0)
FIRST ASST NPI
"BLD",8205,4,727.811,2,727.811,1,110,0)
SECOND ASST
"BLD",8205,4,727.811,2,727.811,1,111,0)
SECOND ASST PC
"BLD",8205,4,727.811,2,727.811,1,112,0)
SECOND ASST NPI
"BLD",8205,4,727.811,2,727.811,1,113,0)
PERFUSIONIST
"BLD",8205,4,727.811,2,727.811,1,114,0)
PERFUSIONIST PC
"BLD",8205,4,727.811,2,727.811,1,115,0)
PERFUSIONIST NPI
"BLD",8205,4,727.811,2,727.811,1,116,0)
ASST PERFUSIONIST
"BLD",8205,4,727.811,2,727.811,1,117,0)
ASST PERFUSIONIST PC
"BLD",8205,4,727.811,2,727.811,1,118,0)
ASST PERFUSIONIST NPI
"BLD",8205,4,727.811,2,727.811,1,119,0)
ANESTHESIA SEVERITY ASSESSMENT
"BLD",8205,4,727.811,2,727.811,1,120,0)
PATCAT
"BLD",8205,4,727.811,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.811,224)

"BLD",8205,4,727.813,0)
727.813
"BLD",8205,4,727.813,2,0)
^9.641^727.813^1
"BLD",8205,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",8205,4,727.813,2,727.813,1,0)
^9.6411^47^5
"BLD",8205,4,727.813,2,727.813,1,43,0)
LAB BILLABLE PROCEDURE
"BLD",8205,4,727.813,2,727.813,1,44,0)
DSS FEEDERKEY
"BLD",8205,4,727.813,2,727.813,1,45,0)
DATA NAME (TESTNAME)
"BLD",8205,4,727.813,2,727.813,1,46,0)
DATA LOCATION
"BLD",8205,4,727.813,2,727.813,1,47,0)
PATCAT
"BLD",8205,4,727.813,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.813,224)

"BLD",8205,4,727.814,0)
727.814
"BLD",8205,4,727.814,2,0)
^9.641^727.814^1
"BLD",8205,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",8205,4,727.814,2,727.814,1,0)
^9.6411^48^1
"BLD",8205,4,727.814,2,727.814,1,48,0)
PATCAT
"BLD",8205,4,727.814,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.814,224)

"BLD",8205,4,727.815,0)
727.815
"BLD",8205,4,727.815,2,0)
^9.641^727.815^1
"BLD",8205,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",8205,4,727.815,2,727.815,1,0)
^9.6411^99^3
"BLD",8205,4,727.815,2,727.815,1,97,0)
SHAD STATUS
"BLD",8205,4,727.815,2,727.815,1,98,0)
ENCOUNTER SHAD
"BLD",8205,4,727.815,2,727.815,1,99,0)
PATCAT
"BLD",8205,4,727.815,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.815,224)

"BLD",8205,4,727.817,0)
727.817
"BLD",8205,4,727.817,2,0)
^9.641^727.817^1
"BLD",8205,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",8205,4,727.817,2,727.817,1,0)
^9.6411^44^1
"BLD",8205,4,727.817,2,727.817,1,44,0)
PATCAT
"BLD",8205,4,727.817,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.817,224)

"BLD",8205,4,727.819,0)
727.819
"BLD",8205,4,727.819,2,0)
^9.641^727.819^1
"BLD",8205,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",8205,4,727.819,2,727.819,1,0)
^9.6411^88^2
"BLD",8205,4,727.819,2,727.819,1,61,0)
SHAD STATUS
"BLD",8205,4,727.819,2,727.819,1,88,0)
PATCAT
"BLD",8205,4,727.819,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.819,224)

"BLD",8205,4,727.824,0)
727.824
"BLD",8205,4,727.824,2,0)
^9.641^727.824^1
"BLD",8205,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",8205,4,727.824,2,727.824,1,0)
^9.6411^32^1
"BLD",8205,4,727.824,2,727.824,1,32,0)
PATCAT
"BLD",8205,4,727.824,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.824,224)

"BLD",8205,4,727.825,0)
727.825
"BLD",8205,4,727.825,2,0)
^9.641^727.825^1
"BLD",8205,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",8205,4,727.825,2,727.825,1,0)
^9.6411^99^3
"BLD",8205,4,727.825,2,727.825,1,97,0)
SHAD STATUS
"BLD",8205,4,727.825,2,727.825,1,98,0)
ENCOUNTER SHAD
"BLD",8205,4,727.825,2,727.825,1,99,0)
PATCAT
"BLD",8205,4,727.825,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.825,224)

"BLD",8205,4,727.826,0)
727.826
"BLD",8205,4,727.826,2,0)
^9.641^727.826^1
"BLD",8205,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",8205,4,727.826,2,727.826,1,0)
^9.6411^91^4
"BLD",8205,4,727.826,2,727.826,1,88,0)
SHAD STATUS
"BLD",8205,4,727.826,2,727.826,1,89,0)
ENCOUNTER SHAD
"BLD",8205,4,727.826,2,727.826,1,90,0)
LABOR HOURS
"BLD",8205,4,727.826,2,727.826,1,91,0)
PATCAT
"BLD",8205,4,727.826,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.826,224)

"BLD",8205,4,727.827,0)
727.827
"BLD",8205,4,727.827,2,0)
^9.641^727.827^1
"BLD",8205,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",8205,4,727.827,2,727.827,1,0)
^9.6411^95^3
"BLD",8205,4,727.827,2,727.827,1,62,0)
SHAD STATUS
"BLD",8205,4,727.827,2,727.827,1,94,0)
ENCOUNTER SHAD
"BLD",8205,4,727.827,2,727.827,1,95,0)
PATCAT
"BLD",8205,4,727.827,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.827,224)

"BLD",8205,4,727.829,0)
727.829
"BLD",8205,4,727.829,2,0)
^9.641^727.829^1
"BLD",8205,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",8205,4,727.829,2,727.829,1,0)
^9.6411^30^1
"BLD",8205,4,727.829,2,727.829,1,30,0)
PATCAT
"BLD",8205,4,727.829,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.829,224)

"BLD",8205,4,727.832,0)
727.832
"BLD",8205,4,727.832,2,0)
^9.641^727.832^1
"BLD",8205,4,727.832,2,727.832,0)
NUTRITION EXTRACT  (File-top level)
"BLD",8205,4,727.832,2,727.832,1,0)
^9.6411^66^2
"BLD",8205,4,727.832,2,727.832,1,65,0)
SHAD STATUS
"BLD",8205,4,727.832,2,727.832,1,66,0)
PATCAT
"BLD",8205,4,727.832,222)
y^n^p^^^^n^^n
"BLD",8205,4,727.832,224)

"BLD",8205,4,727.833,0)
727.833
"BLD",8205,4,727.833,222)
y^n^f^^^^n
"BLD",8205,4,728,0)
728
"BLD",8205,4,728,222)
y^n^f^^^^n
"BLD",8205,4,"APDD",727.802,727.802)

"BLD",8205,4,"APDD",727.802,727.802,44)

"BLD",8205,4,"APDD",727.802,727.802,55)

"BLD",8205,4,"APDD",727.802,727.802,90)

"BLD",8205,4,"APDD",727.805,727.805)

"BLD",8205,4,"APDD",727.805,727.805,25)

"BLD",8205,4,"APDD",727.808,727.808)

"BLD",8205,4,"APDD",727.808,727.808,37)

"BLD",8205,4,"APDD",727.809,727.809)

"BLD",8205,4,"APDD",727.809,727.809,49)

"BLD",8205,4,"APDD",727.809,727.809,83)

"BLD",8205,4,"APDD",727.81,727.81)

"BLD",8205,4,"APDD",727.81,727.81,15)

"BLD",8205,4,"APDD",727.81,727.81,18)

"BLD",8205,4,"APDD",727.81,727.81,98)

"BLD",8205,4,"APDD",727.811,727.811)

"BLD",8205,4,"APDD",727.811,727.811,105)

"BLD",8205,4,"APDD",727.811,727.811,106)

"BLD",8205,4,"APDD",727.811,727.811,107)

"BLD",8205,4,"APDD",727.811,727.811,108)

"BLD",8205,4,"APDD",727.811,727.811,109)

"BLD",8205,4,"APDD",727.811,727.811,110)

"BLD",8205,4,"APDD",727.811,727.811,111)

"BLD",8205,4,"APDD",727.811,727.811,112)

"BLD",8205,4,"APDD",727.811,727.811,113)

"BLD",8205,4,"APDD",727.811,727.811,114)

"BLD",8205,4,"APDD",727.811,727.811,115)

"BLD",8205,4,"APDD",727.811,727.811,116)

"BLD",8205,4,"APDD",727.811,727.811,117)

"BLD",8205,4,"APDD",727.811,727.811,118)

"BLD",8205,4,"APDD",727.811,727.811,119)

"BLD",8205,4,"APDD",727.811,727.811,120)

"BLD",8205,4,"APDD",727.813,727.813)

"BLD",8205,4,"APDD",727.813,727.813,43)

"BLD",8205,4,"APDD",727.813,727.813,44)

"BLD",8205,4,"APDD",727.813,727.813,45)

"BLD",8205,4,"APDD",727.813,727.813,46)

"BLD",8205,4,"APDD",727.813,727.813,47)

"BLD",8205,4,"APDD",727.814,727.814)

"BLD",8205,4,"APDD",727.814,727.814,48)

"BLD",8205,4,"APDD",727.815,727.815)

"BLD",8205,4,"APDD",727.815,727.815,97)

"BLD",8205,4,"APDD",727.815,727.815,98)

"BLD",8205,4,"APDD",727.815,727.815,99)

"BLD",8205,4,"APDD",727.817,727.817)

"BLD",8205,4,"APDD",727.817,727.817,44)

"BLD",8205,4,"APDD",727.819,727.819)

"BLD",8205,4,"APDD",727.819,727.819,61)

"BLD",8205,4,"APDD",727.819,727.819,88)

"BLD",8205,4,"APDD",727.824,727.824)

"BLD",8205,4,"APDD",727.824,727.824,32)

"BLD",8205,4,"APDD",727.825,727.825)

"BLD",8205,4,"APDD",727.825,727.825,97)

"BLD",8205,4,"APDD",727.825,727.825,98)

"BLD",8205,4,"APDD",727.825,727.825,99)

"BLD",8205,4,"APDD",727.826,727.826)

"BLD",8205,4,"APDD",727.826,727.826,88)

"BLD",8205,4,"APDD",727.826,727.826,89)

"BLD",8205,4,"APDD",727.826,727.826,90)

"BLD",8205,4,"APDD",727.826,727.826,91)

"BLD",8205,4,"APDD",727.827,727.827)

"BLD",8205,4,"APDD",727.827,727.827,62)

"BLD",8205,4,"APDD",727.827,727.827,94)

"BLD",8205,4,"APDD",727.827,727.827,95)

"BLD",8205,4,"APDD",727.829,727.829)

"BLD",8205,4,"APDD",727.829,727.829,30)

"BLD",8205,4,"APDD",727.832,727.832)

"BLD",8205,4,"APDD",727.832,727.832,65)

"BLD",8205,4,"APDD",727.832,727.832,66)

"BLD",8205,4,"B",727.802,727.802)

"BLD",8205,4,"B",727.805,727.805)

"BLD",8205,4,"B",727.808,727.808)

"BLD",8205,4,"B",727.809,727.809)

"BLD",8205,4,"B",727.81,727.81)

"BLD",8205,4,"B",727.811,727.811)

"BLD",8205,4,"B",727.813,727.813)

"BLD",8205,4,"B",727.814,727.814)

"BLD",8205,4,"B",727.815,727.815)

"BLD",8205,4,"B",727.817,727.817)

"BLD",8205,4,"B",727.819,727.819)

"BLD",8205,4,"B",727.824,727.824)

"BLD",8205,4,"B",727.825,727.825)

"BLD",8205,4,"B",727.826,727.826)

"BLD",8205,4,"B",727.827,727.827)

"BLD",8205,4,"B",727.829,727.829)

"BLD",8205,4,"B",727.832,727.832)

"BLD",8205,4,"B",727.833,727.833)

"BLD",8205,4,"B",728,728)

"BLD",8205,6)
12^
"BLD",8205,6.3)
36
"BLD",8205,"ABPKG")
n
"BLD",8205,"INI")
PRE^ECX3P127
"BLD",8205,"INIT")
POST^ECX3P127
"BLD",8205,"KRN",0)
^9.67PA^779.2^20
"BLD",8205,"KRN",.4,0)
.4
"BLD",8205,"KRN",.401,0)
.401
"BLD",8205,"KRN",.402,0)
.402
"BLD",8205,"KRN",.403,0)
.403
"BLD",8205,"KRN",.5,0)
.5
"BLD",8205,"KRN",.84,0)
.84
"BLD",8205,"KRN",3.6,0)
3.6
"BLD",8205,"KRN",3.8,0)
3.8
"BLD",8205,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",8205,"KRN",3.8,"NM",1,0)
DSS-BCM^^0
"BLD",8205,"KRN",3.8,"NM","B","DSS-BCM",1)

"BLD",8205,"KRN",9.2,0)
9.2
"BLD",8205,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",8205,"KRN",9.8,0)
9.8
"BLD",8205,"KRN",9.8,"NM",0)
^9.68A^39^37
"BLD",8205,"KRN",9.8,"NM",1,0)
ECXSCX1^^0^B69908401
"BLD",8205,"KRN",9.8,"NM",2,0)
ECXADM^^0^B47059189
"BLD",8205,"KRN",9.8,"NM",3,0)
ECXKILL1^^0^B7329433
"BLD",8205,"KRN",9.8,"NM",5,0)
ECXSCXN^^0^B60394645
"BLD",8205,"KRN",9.8,"NM",6,0)
ECXSCX2^^0^B9043953
"BLD",8205,"KRN",9.8,"NM",7,0)
ECXQSR^^0^B41725091
"BLD",8205,"KRN",9.8,"NM",8,0)
ECXQSR1^^0^B11045628
"BLD",8205,"KRN",9.8,"NM",10,0)
ECXEC^^0^B52665130
"BLD",8205,"KRN",9.8,"NM",11,0)
ECXPIVDN^^0^B52360501
"BLD",8205,"KRN",9.8,"NM",12,0)
ECXPIVD2^^0^B9098930
"BLD",8205,"KRN",9.8,"NM",13,0)
ECXNUT^^0^B34364680
"BLD",8205,"KRN",9.8,"NM",14,0)
ECXPRO^^0^B39196226
"BLD",8205,"KRN",9.8,"NM",15,0)
ECXSURG^^0^B71637747
"BLD",8205,"KRN",9.8,"NM",16,0)
ECXSURG1^^0^B18403653
"BLD",8205,"KRN",9.8,"NM",17,0)
ECXUD^^0^B58470506
"BLD",8205,"KRN",9.8,"NM",18,0)
ECXOPRX^^0^B56378076
"BLD",8205,"KRN",9.8,"NM",19,0)
ECXOPRX1^^0^B9265203
"BLD",8205,"KRN",9.8,"NM",20,0)
ECXUEC^^0^B48196617
"BLD",8205,"KRN",9.8,"NM",21,0)
ECXPRO2^^0^B11847237
"BLD",8205,"KRN",9.8,"NM",22,0)
ECXWRD^^0^B14824338
"BLD",8205,"KRN",9.8,"NM",23,0)
ECXWRDX^^0^B4015763
"BLD",8205,"KRN",9.8,"NM",24,0)
ECXKILL^^0^B8836800
"BLD",8205,"KRN",9.8,"NM",25,0)
ECXLABN^^0^B44410370
"BLD",8205,"KRN",9.8,"NM",26,0)
ECXLABR^^0^B21203653
"BLD",8205,"KRN",9.8,"NM",27,0)
ECXMTL^^0^B38006698
"BLD",8205,"KRN",9.8,"NM",28,0)
ECXLBB^^0^B51392005
"BLD",8205,"KRN",9.8,"NM",29,0)
ECXMOV^^0^B30514137
"BLD",8205,"KRN",9.8,"NM",30,0)
ECXNURS^^0^B45224625
"BLD",8205,"KRN",9.8,"NM",31,0)
ECXRAD^^0^B36528555
"BLD",8205,"KRN",9.8,"NM",32,0)
ECXTRT2^^0^B4576670
"BLD",8205,"KRN",9.8,"NM",33,0)
ECXBCM^^0^B49739627
"BLD",8205,"KRN",9.8,"NM",34,0)
ECXUTL^^0^B53983584
"BLD",8205,"KRN",9.8,"NM",35,0)
ECXUTL4^^0^B55297923
"BLD",8205,"KRN",9.8,"NM",36,0)
ECXSCXN1^^0^B11953560
"BLD",8205,"KRN",9.8,"NM",37,0)
ECXTRT^^0^B58392796
"BLD",8205,"KRN",9.8,"NM",38,0)
ECXUTL2^^0^B71508218
"BLD",8205,"KRN",9.8,"NM",39,0)
ECXLBB1^^0^B27049597
"BLD",8205,"KRN",9.8,"NM","B","ECXADM",2)

"BLD",8205,"KRN",9.8,"NM","B","ECXBCM",33)

"BLD",8205,"KRN",9.8,"NM","B","ECXEC",10)

"BLD",8205,"KRN",9.8,"NM","B","ECXKILL",24)

"BLD",8205,"KRN",9.8,"NM","B","ECXKILL1",3)

"BLD",8205,"KRN",9.8,"NM","B","ECXLABN",25)

"BLD",8205,"KRN",9.8,"NM","B","ECXLABR",26)

"BLD",8205,"KRN",9.8,"NM","B","ECXLBB",28)

"BLD",8205,"KRN",9.8,"NM","B","ECXLBB1",39)

"BLD",8205,"KRN",9.8,"NM","B","ECXMOV",29)

"BLD",8205,"KRN",9.8,"NM","B","ECXMTL",27)

"BLD",8205,"KRN",9.8,"NM","B","ECXNURS",30)

"BLD",8205,"KRN",9.8,"NM","B","ECXNUT",13)

"BLD",8205,"KRN",9.8,"NM","B","ECXOPRX",18)

"BLD",8205,"KRN",9.8,"NM","B","ECXOPRX1",19)

"BLD",8205,"KRN",9.8,"NM","B","ECXPIVD2",12)

"BLD",8205,"KRN",9.8,"NM","B","ECXPIVDN",11)

"BLD",8205,"KRN",9.8,"NM","B","ECXPRO",14)

"BLD",8205,"KRN",9.8,"NM","B","ECXPRO2",21)

"BLD",8205,"KRN",9.8,"NM","B","ECXQSR",7)

"BLD",8205,"KRN",9.8,"NM","B","ECXQSR1",8)

"BLD",8205,"KRN",9.8,"NM","B","ECXRAD",31)

"BLD",8205,"KRN",9.8,"NM","B","ECXSCX1",1)

"BLD",8205,"KRN",9.8,"NM","B","ECXSCX2",6)

"BLD",8205,"KRN",9.8,"NM","B","ECXSCXN",5)

"BLD",8205,"KRN",9.8,"NM","B","ECXSCXN1",36)

"BLD",8205,"KRN",9.8,"NM","B","ECXSURG",15)

"BLD",8205,"KRN",9.8,"NM","B","ECXSURG1",16)

"BLD",8205,"KRN",9.8,"NM","B","ECXTRT",37)

"BLD",8205,"KRN",9.8,"NM","B","ECXTRT2",32)

"BLD",8205,"KRN",9.8,"NM","B","ECXUD",17)

"BLD",8205,"KRN",9.8,"NM","B","ECXUEC",20)

"BLD",8205,"KRN",9.8,"NM","B","ECXUTL",34)

"BLD",8205,"KRN",9.8,"NM","B","ECXUTL2",38)

"BLD",8205,"KRN",9.8,"NM","B","ECXUTL4",35)

"BLD",8205,"KRN",9.8,"NM","B","ECXWRD",22)

"BLD",8205,"KRN",9.8,"NM","B","ECXWRDX",23)

"BLD",8205,"KRN",19,0)
19
"BLD",8205,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",8205,"KRN",19,"NM",1,0)
ECX DSSDEPT MGMT^^0
"BLD",8205,"KRN",19,"NM",2,0)
ECX WARD DSSDEPT^^0
"BLD",8205,"KRN",19,"NM",3,0)
ECXBCM^^0
"BLD",8205,"KRN",19,"NM","B","ECX DSSDEPT MGMT",1)

"BLD",8205,"KRN",19,"NM","B","ECX WARD DSSDEPT",2)

"BLD",8205,"KRN",19,"NM","B","ECXBCM",3)

"BLD",8205,"KRN",19.1,0)
19.1
"BLD",8205,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8205,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",8205,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",8205,"KRN",101,0)
101
"BLD",8205,"KRN",409.61,0)
409.61
"BLD",8205,"KRN",771,0)
771
"BLD",8205,"KRN",779.2,0)
779.2
"BLD",8205,"KRN",870,0)
870
"BLD",8205,"KRN",8989.51,0)
8989.51
"BLD",8205,"KRN",8989.52,0)
8989.52
"BLD",8205,"KRN",8994,0)
8994
"BLD",8205,"KRN","B",.4,.4)

"BLD",8205,"KRN","B",.401,.401)

"BLD",8205,"KRN","B",.402,.402)

"BLD",8205,"KRN","B",.403,.403)

"BLD",8205,"KRN","B",.5,.5)

"BLD",8205,"KRN","B",.84,.84)

"BLD",8205,"KRN","B",3.6,3.6)

"BLD",8205,"KRN","B",3.8,3.8)

"BLD",8205,"KRN","B",9.2,9.2)

"BLD",8205,"KRN","B",9.8,9.8)

"BLD",8205,"KRN","B",19,19)

"BLD",8205,"KRN","B",19.1,19.1)

"BLD",8205,"KRN","B",101,101)

"BLD",8205,"KRN","B",409.61,409.61)

"BLD",8205,"KRN","B",771,771)

"BLD",8205,"KRN","B",779.2,779.2)

"BLD",8205,"KRN","B",870,870)

"BLD",8205,"KRN","B",8989.51,8989.51)

"BLD",8205,"KRN","B",8989.52,8989.52)

"BLD",8205,"KRN","B",8994,8994)

"BLD",8205,"QUES",0)
^9.62^^
"BLD",8205,"REQB",0)
^9.611^6^6
"BLD",8205,"REQB",1,0)
ECX*3.0*120^1
"BLD",8205,"REQB",2,0)
ECX*3.0*105^1
"BLD",8205,"REQB",3,0)
ECX*3.0*112^1
"BLD",8205,"REQB",4,0)
ECX*3.0*128^1
"BLD",8205,"REQB",5,0)
ECX*3.0*124^1
"BLD",8205,"REQB",6,0)
LR*5.2*403^1
"BLD",8205,"REQB","B","ECX*3.0*105",2)

"BLD",8205,"REQB","B","ECX*3.0*112",3)

"BLD",8205,"REQB","B","ECX*3.0*120",1)

"BLD",8205,"REQB","B","ECX*3.0*124",5)

"BLD",8205,"REQB","B","ECX*3.0*128",4)

"BLD",8205,"REQB","B","LR*5.2*403",6)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^n^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,44)

"FIA",727.802,727.802,55)

"FIA",727.802,727.802,90)

"FIA",727.805)
NURSING EXTRACT
"FIA",727.805,0)
^ECX(727.805,
"FIA",727.805,0,0)
727.805
"FIA",727.805,0,1)
y^n^p^^^^n^^n
"FIA",727.805,0,10)

"FIA",727.805,0,11)

"FIA",727.805,0,"RLRO")

"FIA",727.805,0,"VR")
3.0^ECX
"FIA",727.805,727.805)
1
"FIA",727.805,727.805,25)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^n^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,37)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^n^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,49)

"FIA",727.809,727.809,83)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^n^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,15)

"FIA",727.81,727.81,18)

"FIA",727.81,727.81,98)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^n^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,105)

"FIA",727.811,727.811,106)

"FIA",727.811,727.811,107)

"FIA",727.811,727.811,108)

"FIA",727.811,727.811,109)

"FIA",727.811,727.811,110)

"FIA",727.811,727.811,111)

"FIA",727.811,727.811,112)

"FIA",727.811,727.811,113)

"FIA",727.811,727.811,114)

"FIA",727.811,727.811,115)

"FIA",727.811,727.811,116)

"FIA",727.811,727.811,117)

"FIA",727.811,727.811,118)

"FIA",727.811,727.811,119)

"FIA",727.811,727.811,120)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^n^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,43)

"FIA",727.813,727.813,44)

"FIA",727.813,727.813,45)

"FIA",727.813,727.813,46)

"FIA",727.813,727.813,47)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^n^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,48)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,97)

"FIA",727.815,727.815,98)

"FIA",727.815,727.815,99)

"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^n^p^^^^n^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,44)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^n^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,61)

"FIA",727.819,727.819,88)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^n^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,32)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,97)

"FIA",727.825,727.825,98)

"FIA",727.825,727.825,99)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^n^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,88)

"FIA",727.826,727.826,89)

"FIA",727.826,727.826,90)

"FIA",727.826,727.826,91)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^n^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,62)

"FIA",727.827,727.827,94)

"FIA",727.827,727.827,95)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^n^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,30)

"FIA",727.832)
NUTRITION EXTRACT
"FIA",727.832,0)
^ECX(727.832,
"FIA",727.832,0,0)
727.832
"FIA",727.832,0,1)
y^n^p^^^^n^^n
"FIA",727.832,0,10)

"FIA",727.832,0,11)

"FIA",727.832,0,"RLRO")

"FIA",727.832,0,"VR")
3.0^ECX
"FIA",727.832,727.832)
1
"FIA",727.832,727.832,65)

"FIA",727.832,727.832,66)

"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^n^f^^^^n
"FIA",727.833,0,10)

"FIA",727.833,0,11)

"FIA",727.833,0,"RLRO")

"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
0
"FIA",728)
DSS EXTRACTS
"FIA",728,0)
^ECX(728,
"FIA",728,0,0)
728P
"FIA",728,0,1)
y^n^f^^^^n
"FIA",728,0,10)

"FIA",728,0,11)

"FIA",728,0,"RLRO")

"FIA",728,0,"VR")
3.0^ECX
"FIA",728,728)
0
"FIA",728,728.059)
0
"FIA",728,728.068)
0
"INI")
PRE^ECX3P127
"INIT")
POST^ECX3P127
"KRN",3.8,395,-1)
0^1
"KRN",3.8,395,0)
DSS-BCM^PU^n^^^^
"KRN",3.8,395,2,0)
^3.801^2^2^3101020^^
"KRN",3.8,395,2,1,0)
This mail group contains users responsible for DSS extracts.
"KRN",3.8,395,2,2,0)
A message is sent to this group upon completion of package extracts.
"KRN",3.8,395,3)

"KRN",19,10851,-1)
0^2
"KRN",19,10851,0)
ECX WARD DSSDEPT^Enter/Edit DSS Ward^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10851,1,0)
^19.06^3^3^3020731^^
"KRN",19,10851,1,1,0)
This option should only be used by the DSS Site Manager to enter or
"KRN",19,10851,1,2,0)
edit the DSS Department code associated with each medical center
"KRN",19,10851,1,3,0)
ward.
"KRN",19,10851,25)
EN^ECXWRDX
"KRN",19,10851,"U")
ENTER/EDIT DSS WARD
"KRN",19,10853,-1)
0^1
"KRN",19,10853,0)
ECX DSSDEPT MGMT^DSS Department Management^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10853,1,0)
^19.06^2^2^3030714^^^^
"KRN",19,10853,1,1,0)
This menu holds the set of options needed for DSS Department management
"KRN",19,10853,1,2,0)
functions.
"KRN",19,10853,10,0)
^19.01IP^2^1
"KRN",19,10853,10,2,0)
10851^2^2
"KRN",19,10853,10,2,"^")
ECX WARD DSSDEPT
"KRN",19,10853,99)
61998,66787
"KRN",19,10853,"U")
DSS DEPARTMENT MANAGEMENT
"KRN",19,13909,-1)
0^3
"KRN",19,13909,0)
ECXBCM^BCMA Extract^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13909,1,0)
^^3^3^3101014^
"KRN",19,13909,1,1,0)
This option provides the extract manager the ability to extract the BCMA 
"KRN",19,13909,1,2,0)
data for a selected date range.This data is stored in the BCM EXTRACT 
"KRN",19,13909,1,3,0)
(#727.833) file until the data is transmitted to the commercial vendor.
"KRN",19,13909,25)
BEG^ECXBCM
"KRN",19,13909,"U")
BCMA EXTRACT
"KRN",19.1,626,-1)
0^1
"KRN",19.1,626,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,626,1,0)
^19.11^8^8^3090506^^
"KRN",19.1,626,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,626,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,626,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,626,1,4,0)
conversion.
"KRN",19.1,626,1,5,0)
  
"KRN",19.1,626,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,626,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,626,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
127^3101123^101049
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^3101123
"PKG",513,22,1,"PAH",1,1,1,0)
FY 2011 ENHANCEMENTS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
38
"RTN","ECX3P127")
0^^B50626466^n/a
"RTN","ECX3P127",1,0)
ECX3P127 ;ALB/MRY - DSS FY2011 Conversion, Post-init ;11/23/10  13:37
"RTN","ECX3P127",2,0)
 ;;3.0;DSS EXTRACTS;**127**;Dec 22, 1997;Build 36
"RTN","ECX3P127",3,0)
 ;
"RTN","ECX3P127",4,0)
 ;****************************************
"RTN","ECX3P127",5,0)
 ;Every year: Populate FY Year's version
"RTN","ECX3P127",6,0)
 ; TESTON^ECXTREX(XPDNM,"FY2011")
"RTN","ECX3P127",7,0)
 ;****************************************
"RTN","ECX3P127",8,0)
 ;
"RTN","ECX3P127",9,0)
PRE ;Pre-install tasks
"RTN","ECX3P127",10,0)
 ;Delete file 727.833 so that we start with a fresh data dictionary install
"RTN","ECX3P127",11,0)
 N DIU
"RTN","ECX3P127",12,0)
 S DIU=727.833,DIU(0)="D" ;D denotes that we're deleting data as well
"RTN","ECX3P127",13,0)
 D EN^DIU2
"RTN","ECX3P127",14,0)
 Q
"RTN","ECX3P127",15,0)
POST ;post-init
"RTN","ECX3P127",16,0)
 D TEST,MENU,EXTR,INACT
"RTN","ECX3P127",17,0)
 N ECXI,ECXDTS,ECXOTS
"RTN","ECX3P127",18,0)
 ;remove treating specialties from file 737.831
"RTN","ECX3P127",19,0)
 F ECXI=1:1 S ECXDTS=$P($T(DTSP+ECXI),";;",2) Q:ECXDTS="QUIT"  D
"RTN","ECX3P127",20,0)
 .D DTS
"RTN","ECX3P127",21,0)
 ;add treating specialties into file 737.831
"RTN","ECX3P127",22,0)
 F ECXI=1:1 S ECXOTS=$P($T(OTSP+ECXI),";;",2) Q:ECXOTS="QUIT"  D
"RTN","ECX3P127",23,0)
 .D OTS
"RTN","ECX3P127",24,0)
 Q
"RTN","ECX3P127",25,0)
 ;
"RTN","ECX3P127",26,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P127",27,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P127",28,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P127",29,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P127",30,0)
 D TESTON^ECXTREX(XPDNM,"FY2011")
"RTN","ECX3P127",31,0)
 ;D MES^XPDUTL(" ")
"RTN","ECX3P127",32,0)
 ;D MES^XPDUTL("Remember to assign the ECX DSS TEST key to qualified users.")
"RTN","ECX3P127",33,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P127",34,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P127",35,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P127",36,0)
 ;
"RTN","ECX3P127",37,0)
 ;initialize new field #  in file #728.44;
"RTN","ECX3P127",38,0)
 N EC,ECD,X
"RTN","ECX3P127",39,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D
"RTN","ECX3P127",40,0)
 .I $D(^SC(EC,0)) S ECD=^(0) I $P(ECD,U,3)="C" D
"RTN","ECX3P127",41,0)
 ..S X=$P(ECD,U,17) I X'="" I $D(^ECX(728.44,EC,0)) S $P(^ECX(728.44,EC,0),U,12)=X
"RTN","ECX3P127",42,0)
 Q
"RTN","ECX3P127",43,0)
 ;
"RTN","ECX3P127",44,0)
MENU ;Remove options from menu and place out of order, add new menu option for BCM
"RTN","ECX3P127",45,0)
 N MENU,OPTION,CHECK,IEN
"RTN","ECX3P127",46,0)
 F OPTION="ECXMTL","ECXPAI" D
"RTN","ECX3P127",47,0)
 .S MENU="ECXMENU"
"RTN","ECX3P127",48,0)
 .S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P127",49,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P127",50,0)
 .D OUT^XPDMENU(OPTION,"OUT OF ORDER, DO NOT USE THIS OPTION!!!")
"RTN","ECX3P127",51,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION PLACED OUT ORDER <<<")
"RTN","ECX3P127",52,0)
 F OPTION="ECX MTL SOURCE AUDIT","ECX PAI SOURCE AUDIT" D
"RTN","ECX3P127",53,0)
 .S MENU="ECX SOURCE AUDITS"
"RTN","ECX3P127",54,0)
 .S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P127",55,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P127",56,0)
 .D OUT^XPDMENU(OPTION,"OUT OF ORDER, DO NOT USE THIS OPTION!!!")
"RTN","ECX3P127",57,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION PLACED OUT ORDER <<<")
"RTN","ECX3P127",58,0)
 S OPTION="ECX DIVISION ID",MENU="ECX DSSDEPT MGMT"
"RTN","ECX3P127",59,0)
 S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P127",60,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES  NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P127",61,0)
 D OUT^XPDMENU(OPTION,"OUT OF ORDER, DO NOT USE THIS OPTION!!!")
"RTN","ECX3P127",62,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION PLACED OUT ORDER <<<")
"RTN","ECX3P127",63,0)
 S CHECK=$$ADD^XPDMENU("ECXMENU","ECXBCM","BCM")
"RTN","ECX3P127",64,0)
 D BMES^XPDUTL("ECXBCM option "_$S('+$G(CHECK):"NOT ",1:"")_"added to menu ECXMENU")
"RTN","ECX3P127",65,0)
 Q
"RTN","ECX3P127",66,0)
 ;
"RTN","ECX3P127",67,0)
EXTR ;; ADD NEW EXTRACT TO EXTRACT DEFINITIONS FILE 727.1
"RTN","ECX3P127",68,0)
 N DIC,DINUM,X,Y,J,IEN,ECXX,DATA,NAME,FILE,FREQ,TYPE,HEAD,MAX,GRP,PIECE,ROU,STATUS
"RTN","ECX3P127",69,0)
 ;update file #727.1 with new record data
"RTN","ECX3P127",70,0)
 D MES^XPDUTL("Updating EXTRACT DEFINITIONS file (#727.1) with new extract")
"RTN","ECX3P127",71,0)
 D MES^XPDUTL("definitions...")
"RTN","ECX3P127",72,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P127",73,0)
 F J=1:1 S ECXX=$P($T(TEXT+J),";;",2) Q:ECXX="QUIT"  D
"RTN","ECX3P127",74,0)
 .K DD,DO
"RTN","ECX3P127",75,0)
 .S IEN=$P(ECXX,";",1),DATA=$P(ECXX,";",2),NAME=$P(DATA,U,1)
"RTN","ECX3P127",76,0)
 .S FILE=$P(DATA,U,2),FREQ=$P(DATA,U,3),TYPE=$P(DATA,U,7),HEAD=$P(DATA,U,8)
"RTN","ECX3P127",77,0)
 .S GRP=$P(DATA,U,9),PIECE=$P(DATA,U,10),MAX=$P(DATA,U,11),ROU=$P(DATA,U,12),STATUS=$P(DATA,U,13)
"RTN","ECX3P127",78,0)
 .I $D(^ECX(727.1,IEN)),$O(^ECX(727.1,"AF",FILE,0))'=IEN S DIK="^ECX(727.1,",DA=IEN D ^DIK
"RTN","ECX3P127",79,0)
 .K X,Y S DIC="^ECX(727.1,",DIC(0)="L",X=NAME,DINUM=IEN
"RTN","ECX3P127",80,0)
 .S DIC("DR")="1///"_FILE_";2///"_FREQ_";7///"_TYPE_";8///"_HEAD_";9///"_GRP_";11///"_PIECE_";12///"_MAX_";13///"_STATUS_";4///"_ROU
"RTN","ECX3P127",81,0)
 .D FILE^DICN
"RTN","ECX3P127",82,0)
 .I Y=-1 D  Q
"RTN","ECX3P127",83,0)
 ..I $D(^ECX(727.1,IEN)),$O(^ECX(727.1,"AF",FILE,0))=IEN D  Q
"RTN","ECX3P127",84,0)
 ...D MES^XPDUTL("   Entry #"_IEN_" for "_NAME_" extract already exists.")
"RTN","ECX3P127",85,0)
 ...D MES^XPDUTL(" ")
"RTN","ECX3P127",86,0)
 ..D MES^XPDUTL("   WARNING: Could not update entry #"_IEN_" for "_NAME_" extract.")
"RTN","ECX3P127",87,0)
 ..D MES^XPDUTL("            Please consult with NVS for DSS EXTRACTS support.")
"RTN","ECX3P127",88,0)
 ..D MES^XPDUTL(" ")
"RTN","ECX3P127",89,0)
 .D MES^XPDUTL("   Setting record #"_IEN_" for the "_NAME_" extract... ok.")
"RTN","ECX3P127",90,0)
 .D MES^XPDUTL(" ")
"RTN","ECX3P127",91,0)
 K DD,DO
"RTN","ECX3P127",92,0)
 Q
"RTN","ECX3P127",93,0)
DTS ;Delete Treating Specialties from file 727.831
"RTN","ECX3P127",94,0)
 N DIK,DINUM,DA
"RTN","ECX3P127",95,0)
 S DINUM=$P(ECXDTS,U),DA=0
"RTN","ECX3P127",96,0)
 S DIK="^ECX(727.831,"
"RTN","ECX3P127",97,0)
 S DA=$O(^ECX(727.831,"B",DINUM,DA)) Q:'DA  D ^DIK
"RTN","ECX3P127",98,0)
 D BMES^XPDUTL(">>>"_$P(ECXDTS,U,2)_">>>")
"RTN","ECX3P127",99,0)
 D MES^XPDUTL("...removed from DSS TREATING SPECIALTY TRANSLATION File (#727.831)")
"RTN","ECX3P127",100,0)
 Q
"RTN","ECX3P127",101,0)
 ;
"RTN","ECX3P127",102,0)
OTS ;Add Observation Treating Specialty to DSS TREATING SPECIALTY TRANSLATION File (#727.831)
"RTN","ECX3P127",103,0)
 D BMES^XPDUTL(">>>"_$P(ECXOTS,U,2)_">>>")
"RTN","ECX3P127",104,0)
 N DA,ECXFILE,DIC,DIE,DINUM,DLAYGO,DR,X,Y,ECXIFN
"RTN","ECX3P127",105,0)
 S ECXERR=0
"RTN","ECX3P127",106,0)
 S DIC="^ECX(727.831,"
"RTN","ECX3P127",107,0)
 S DIC(0)="LX"
"RTN","ECX3P127",108,0)
 S DINUM=$P(ECXOTS,U)
"RTN","ECX3P127",109,0)
 S X=$P(ECXOTS,U,2)
"RTN","ECX3P127",110,0)
 S DLAYGO=727.831
"RTN","ECX3P127",111,0)
 D ^DIC
"RTN","ECX3P127",112,0)
 S ECXIFN=Y
"RTN","ECX3P127",113,0)
 I +ECXIFN=-1 D  Q
"RTN","ECX3P127",114,0)
 .D MES^XPDUTL("     Entry not added to DSS TREATING SPECIALTY TRANSLATION File (#727.831).  No further updating will occur.")
"RTN","ECX3P127",115,0)
 .D MES^XPDUTL("     Please contact Customer Service for assistance.")
"RTN","ECX3P127",116,0)
 .Q
"RTN","ECX3P127",117,0)
 I $P(ECXIFN,U,3)'=1&(+ECXIFN'=$P(ECXOTS,U)) D  Q
"RTN","ECX3P127",118,0)
 .D MES^XPDUTL("     Entry exists in DSS TREATING SPECIALTY TRANSLATION File (#727.831), but with a different Treating Specialty.")
"RTN","ECX3P127",119,0)
 .D MES^XPDUTL("     No further updating will occur.  Please review entry.")
"RTN","ECX3P127",120,0)
 .S ECXERR=1
"RTN","ECX3P127",121,0)
 .Q 
"RTN","ECX3P127",122,0)
 D MES^XPDUTL("     Entry "_$S($P(ECXIFN,U,3)=1:"added to",1:"exists in")_" DSS TREATING SPECIALTY TRANSLATION File (#727.831).")
"RTN","ECX3P127",123,0)
 D MES^XPDUTL("     Updating DSS TREATING SPECIALTY TRANSLATION File fields.")
"RTN","ECX3P127",124,0)
 S DIE=DIC
"RTN","ECX3P127",125,0)
 S DR="2///"_$P(ECXOTS,U,3)_";3///"_$P(ECXOTS,U,4)_";4///"_$P(ECXOTS,U,5)_";5///"_$P(ECXOTS,U,6)
"RTN","ECX3P127",126,0)
 S DA=+ECXIFN
"RTN","ECX3P127",127,0)
 D ^DIE
"RTN","ECX3P127",128,0)
 Q
"RTN","ECX3P127",129,0)
INACT ;inactivate MTL and PAI in EXTRACT DEFINITION file (#727.1)
"RTN","ECX3P127",130,0)
 N ECXFDA,ECXERR,ECXMSG,ECXDA,ECXHDR,ECXOFF
"RTN","ECX3P127",131,0)
 D MES^XPDUTL("   Inactivating MTL,PAS,DEN AND BCM entries ...")
"RTN","ECX3P127",132,0)
 F ECXOFF=1:1 S ECXHDR=$P($T(HDRS+ECXOFF),";;",2) Q:ECXHDR=""  D
"RTN","ECX3P127",133,0)
 .S ECXDA=+$O(^ECX(727.1,"C",ECXHDR,0))
"RTN","ECX3P127",134,0)
 .I 'ECXDA D  Q
"RTN","ECX3P127",135,0)
 ..K ECXMSG
"RTN","ECX3P127",136,0)
 ..S ECXMSG(1)=" "
"RTN","ECX3P127",137,0)
 ..S ECXMSG(2)="   ** ERROR INACTIVATING "_ECXHDR_" **"
"RTN","ECX3P127",138,0)
 ..S ECXMSG(3)="      Entry not found in file"
"RTN","ECX3P127",139,0)
 ..D MES^XPDUTL(.ECXMSG)
"RTN","ECX3P127",140,0)
 .K ECXFDA,ECXERR
"RTN","ECX3P127",141,0)
 .S ECXFDA(727.1,ECXDA_",",13)=1
"RTN","ECX3P127",142,0)
 .D FILE^DIE("","ECXFDA","ECXERR")
"RTN","ECX3P127",143,0)
 .Q:'$D(ECXERR)
"RTN","ECX3P127",144,0)
 .D BMES^XPDUTL("   ** ERROR INACTIVING "_ECXHDR_" **")
"RTN","ECX3P127",145,0)
 .K ECXMSG D MSG^DIALOG("AE",.ECXMSG,65,6,"ECXERR")
"RTN","ECX3P127",146,0)
 .D MES^XPDUTL(.ECXERR)
"RTN","ECX3P127",147,0)
 D BMES^XPDUTL("- Done -")
"RTN","ECX3P127",148,0)
 Q
"RTN","ECX3P127",149,0)
 ;
"RTN","ECX3P127",150,0)
OTSP ;;Treating Specialty #^Treating Specialty Name^DOM/PRRTP/SARRTP Code^IN/OUT Code^Observation Pat Indicator^Inpat Outpat Code^
"RTN","ECX3P127",151,0)
 ;;109^PSYCH RESID REHAB PROG^P^3^N^I
"RTN","ECX3P127",152,0)
 ;;110^PTSD RESID REHAB PROG^T^3^N^I
"RTN","ECX3P127",153,0)
 ;;111^SUBSTANCE ABUSE RESID PROG^S^3^N^I
"RTN","ECX3P127",154,0)
 ;;QUIT
"RTN","ECX3P127",155,0)
 Q
"RTN","ECX3P127",156,0)
DTSP ;;Treating Specialty #^Treating Specialty Name
"RTN","ECX3P127",157,0)
 ;;25^PSYCH RESID REHAB TRMT PROG
"RTN","ECX3P127",158,0)
 ;;26^PTSD RESIDENTIAL REHAB PROG
"RTN","ECX3P127",159,0)
 ;;27^SUBSTANCE ABUSE RES TRMT PROG
"RTN","ECX3P127",160,0)
 ;;28^HOMELESS CWT/TRANS RESID
"RTN","ECX3P127",161,0)
 ;;29^SUBST ABUSE CWT/TRANS RESID
"RTN","ECX3P127",162,0)
 ;;36^BLIND REHAB OBSERVATION
"RTN","ECX3P127",163,0)
 ;;38^PTSD CWT/TR
"RTN","ECX3P127",164,0)
 ;;QUIT
"RTN","ECX3P127",165,0)
 Q
"RTN","ECX3P127",166,0)
TEXT ;;EXTRACT DEFINITIONS ^IEN;DESCRIPTION^FILE #^FREQUENCY^^^^AUDIT DESCRIPTION^GROUP^HEADER^PIECE^MAX LINES^ROUTINE
"RTN","ECX3P127",167,0)
 ;;24;BAR CODE MEDICATION ADMINISTRATION^727.833^M^^^^BAR CODE MEDICATION ADM^BCM^BCM^27^200^ECXBCM^1
"RTN","ECX3P127",168,0)
 ;;QUIT
"RTN","ECX3P127",169,0)
 Q
"RTN","ECX3P127",170,0)
HDRS ;List of headers to be inactivated
"RTN","ECX3P127",171,0)
 ;;MTL
"RTN","ECX3P127",172,0)
 ;;PAS
"RTN","ECX3P127",173,0)
 ;;DEN
"RTN","ECX3P127",174,0)
 ;;BCM
"RTN","ECX3P127",175,0)
 ;;
"RTN","ECX3P127",176,0)
 Q
"RTN","ECXADM")
0^2^B47059189^B44017084
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; 10/15/07 12:14pm
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 S QFLG=0
"RTN","ECXADM",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",11,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",12,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",13,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",14,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",15,0)
 Q
"RTN","ECXADM",16,0)
 ;
"RTN","ECXADM",17,0)
GET ;gather extract data
"RTN","ECXADM",18,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT
"RTN","ECXADM",19,0)
 ;patient demographics
"RTN","ECXADM",20,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",21,0)
 Q:ECXERR
"RTN","ECXADM",22,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",23,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",24,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",25,0)
 ;admission data
"RTN","ECXADM",26,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",27,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",28,0)
 S (ECDRG,ECDIA,ECXSADM,ECXAOT)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",29,0)
 ;get encounter classification
"RTN","ECXADM",30,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD)="",ECXVISIT=$P(EC,U,27)
"RTN","ECXADM",31,0)
 I ECXVISIT'="" D
"RTN","ECXADM",32,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",33,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",34,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",35,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",36,0)
 ;use movement record date & time
"RTN","ECXADM",37,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",38,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",39,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",40,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",41,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",42,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",43,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",44,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",45,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",46,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",47,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",48,0)
 N ECXUSRTN
"RTN","ECXADM",49,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",50,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",51,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",52,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",53,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",54,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",55,0)
 ;
"RTN","ECXADM",56,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",57,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",58,0)
 ;
"RTN","ECXADM",59,0)
 ;- Patient Type
"RTN","ECXADM",60,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",61,0)
 ;
"RTN","ECXADM",62,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",63,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",64,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",65,0)
 Q
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",68,0)
 N OK,X
"RTN","ECXADM",69,0)
 K ECXPAT
"RTN","ECXADM",70,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",71,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",72,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",73,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",74,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",75,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",76,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",77,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",78,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",79,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",80,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",81,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",82,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",83,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",84,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",85,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",86,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",87,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",88,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",89,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",90,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",91,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",92,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",93,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",94,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",95,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",96,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",97,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",98,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",99,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",100,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",101,0)
 ;
"RTN","ECXADM",102,0)
 ;-OEF/OIF Data
"RTN","ECXADM",103,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",104,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",105,0)
 ;
"RTN","ECXADM",106,0)
 ;- Agent Orange location
"RTN","ECXADM",107,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",108,0)
 ;
"RTN","ECXADM",109,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",110,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",111,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",112,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",113,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",114,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",115,0)
 ; - Race and Ethnicity
"RTN","ECXADM",116,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",117,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",118,0)
 ;
"RTN","ECXADM",119,0)
 ;get primary care data
"RTN","ECXADM",120,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",121,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",122,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",123,0)
 ;get combat veteran data
"RTN","ECXADM",124,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",125,0)
 ;get national patient record flag if exist
"RTN","ECXADM",126,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",127,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",128,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",129,0)
 Q
"RTN","ECXADM",130,0)
 ;
"RTN","ECXADM",131,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",132,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",133,0)
 N EC,EC1,ECX
"RTN","ECXADM",134,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",135,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",136,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",137,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",138,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",139,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",140,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",141,0)
 Q
"RTN","ECXADM",142,0)
 ;
"RTN","ECXADM",143,0)
FILE ;file the extract record
"RTN","ECXADM",144,0)
 ;node0
"RTN","ECXADM",145,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",146,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",147,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",148,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",149,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^
"RTN","ECXADM",150,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",151,0)
 ;node1
"RTN","ECXADM",152,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",153,0)
 ;admission elig^mst status^shad status^sharing payor^
"RTN","ECXADM",154,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",155,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",156,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",157,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",158,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",159,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",160,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",161,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",162,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",163,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",164,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",165,0)
 ;encoun ECXIR^ OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",166,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",167,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",168,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY 
"RTN","ECXADM",169,0)
 ;
"RTN","ECXADM",170,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",171,0)
 ;
"RTN","ECXADM",172,0)
 N ECXDATA
"RTN","ECXADM",173,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",174,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",175,0)
 ;
"RTN","ECXADM",176,0)
 N DA,DIK
"RTN","ECXADM",177,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",178,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",179,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",180,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",181,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",182,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",183,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",184,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",185,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",186,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",187,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",188,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",189,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",190,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",191,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",192,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",193,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",194,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",195,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",196,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",197,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",198,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",199,0)
 S ECRN=ECRN+1
"RTN","ECXADM",200,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",201,0)
 Q
"RTN","ECXADM",202,0)
 ;
"RTN","ECXADM",203,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",204,0)
 S ECHEAD="ADM"
"RTN","ECXADM",205,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",206,0)
 Q
"RTN","ECXADM",207,0)
 ;
"RTN","ECXADM",208,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",209,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",210,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",211,0)
 ;
"RTN","ECXADM",212,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",213,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",214,0)
 ;
"RTN","ECXBCM")
0^33^B49739627^n/a
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;11/19/10  17:00
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127**;Dec 22, 1997 ;Build 36
"RTN","ECXBCM",3,0)
 ;;3.0;DSS EXTRACTS;**Unreleased**
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",13,0)
 S PIEN=0
"RTN","ECXBCM",14,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",15,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",16,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",17,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",18,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",19,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET
"RTN","ECXBCM",20,0)
 Q
"RTN","ECXBCM",21,0)
 ;
"RTN","ECXBCM",22,0)
GET ;get extract data
"RTN","ECXBCM",23,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG)=""
"RTN","ECXBCM",24,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",25,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",26,0)
 ;Get Facility
"RTN","ECXBCM",27,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",28,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",29,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",30,0)
 ;get patient demographics
"RTN","ECXBCM",31,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",32,0)
 ;
"RTN","ECXBCM",33,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",34,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",35,0)
 I ECXA="O" D
"RTN","ECXBCM",36,0)
 .I ECXORN["U" S ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",37,0)
 .I ECXORN["V" S ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",38,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",39,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",40,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",41,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",42,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",43,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",44,0)
 N ECXUSRTN
"RTN","ECXBCM",45,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",46,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",47,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",48,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",49,0)
 ;Component code data
"RTN","ECXBCM",50,0)
 D CCODE(RIEN)
"RTN","ECXBCM",51,0)
 Q
"RTN","ECXBCM",52,0)
 ;
"RTN","ECXBCM",53,0)
CMPT ; during component/sequence processing, retrieve rest of data record the file it. 
"RTN","ECXBCM",54,0)
 S (ECXSCADT,ECPROPC,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL)=""
"RTN","ECXBCM",55,0)
 I $G(DRG) D
"RTN","ECXBCM",56,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",57,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",58,0)
 .S ECINV=$P(DRUG,U,4) S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",59,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",60,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",61,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",62,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",63,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",64,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",65,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",66,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",67,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",68,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ACTDT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",69,0)
 D FILE
"RTN","ECXBCM",70,0)
 Q
"RTN","ECXBCM",71,0)
 ;
"RTN","ECXBCM",72,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",73,0)
 N X
"RTN","ECXBCM",74,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",75,0)
 ;get patient data
"RTN","ECXBCM",76,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",77,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",78,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",79,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",80,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",81,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",82,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",83,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",84,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",85,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",86,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",87,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",88,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",89,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",90,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",91,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",92,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",93,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",94,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",95,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",96,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",97,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",98,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",99,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",100,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",101,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",102,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",103,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",104,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",105,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",106,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",107,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",108,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",109,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",110,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",111,0)
 ;
"RTN","ECXBCM",112,0)
 ;get primary care data
"RTN","ECXBCM",113,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",114,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",115,0)
 ;get inpatient data
"RTN","ECXBCM",116,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",117,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXBCM",118,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",119,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",120,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",121,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",122,0)
 Q
"RTN","ECXBCM",123,0)
 ;
"RTN","ECXBCM",124,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",125,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",126,0)
 ; 
"RTN","ECXBCM",127,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",128,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",129,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",130,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",131,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",132,0)
 ;
"RTN","ECXBCM",133,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",134,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",135,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",136,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",137,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",138,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$P(DATA,U,3),CCUNIT=$P(DATA,U,4)
"RTN","ECXBCM",139,0)
 ..I I=.5 S DRG=CCIEN
"RTN","ECXBCM",140,0)
 ..I I=.6 S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I")
"RTN","ECXBCM",141,0)
 ..I I=.7 S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I")
"RTN","ECXBCM",142,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",143,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",144,0)
 ..D CMPT
"RTN","ECXBCM",145,0)
 Q
"RTN","ECXBCM",146,0)
 ;
"RTN","ECXBCM",147,0)
FILE ;file the extract record
"RTN","ECXBCM",148,0)
 ;node0
"RTN","ECXBCM",149,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM",150,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM",151,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM",152,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM",153,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTS)^
"RTN","ECXBCM",154,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM",155,0)
 ;primary care provider(ECPTPR)^pc provider person class (ECCLAS)^
"RTN","ECXBCM",156,0)
 ;primary care provider NPI (ECPTNPI)^primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM",157,0)
 ;NODE(1)
"RTN","ECXBCM",158,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM",159,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM",160,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM",161,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM",162,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM",163,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM",164,0)
 ;NODE(2)
"RTN","ECXBCM",165,0)
 ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM",166,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (DRG)^NDC (ECVNDC)^
"RTN","ECXBCM",167,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM",168,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM",169,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM",170,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM",171,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM",172,0)
 ;NODE(3)
"RTN","ECXBCM",173,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM",174,0)
 ;NODE(4)
"RTN","ECXBCM",175,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM",176,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM",177,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM",178,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)^Patient Type(ECXPTYPE)^
"RTN","ECXBCM",179,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM",180,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM",181,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM",182,0)
 ;
"RTN","ECXBCM",183,0)
 N DA,DIK
"RTN","ECXBCM",184,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM",185,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM",186,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM",187,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTS_U_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM",188,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM",189,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM",190,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U_ECXSCATM_U
"RTN","ECXBCM",191,0)
 S ECODE(2)=ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_DRG_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM
"RTN","ECXBCM",192,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP_U
"RTN","ECXBCM",193,0)
 S ECODE(3)=ECXUESTA_U
"RTN","ECXBCM",194,0)
 S ECODE(4)=ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXAOL
"RTN","ECXBCM",195,0)
 S ECODE(4)=ECODE(4)_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U_ECXPTYPE_U_ECXCVE
"RTN","ECXBCM",196,0)
 S ECODE(4)=ECODE(4)_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXPATCAT
"RTN","ECXBCM",197,0)
 ;
"RTN","ECXBCM",198,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM",199,0)
 F X=0:1:4 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM",200,0)
 S ECRN=ECRN+1
"RTN","ECXBCM",201,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM",202,0)
 Q
"RTN","ECXBCM",203,0)
 ;
"RTN","ECXBCM",204,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",205,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",206,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",207,0)
 Q
"RTN","ECXEC")
0^10^B52665130^B49835024
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ; 10/2/07 2:33pm
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI
"RTN","ECXEC",10,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",13,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",14,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",15,0)
 Q
"RTN","ECXEC",16,0)
 ;
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",19,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",20,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",21,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",22,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",26,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",27,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",28,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",29,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",30,0)
 S (CNT,I)=0
"RTN","ECXEC",31,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",32,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",33,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",34,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",35,0)
 ;set to send data to pce
"RTN","ECXEC",36,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",37,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",38,0)
 ;from the clinic stop codes
"RTN","ECXEC",39,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",40,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",41,0)
 .D:+ECAC
"RTN","ECXEC",42,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",43,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",44,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",45,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",46,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",47,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",48,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",49,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",50,0)
 ;from the dss unit
"RTN","ECXEC",51,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",52,0)
 .I +ECUSTOP D
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",55,0)
 .I 'ECUSTOP D
"RTN","ECXEC",56,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",58,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",59,0)
 S ECXDIV=""
"RTN","ECXEC",60,0)
 ;
"RTN","ECXEC",61,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",62,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",63,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",64,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXEC",65,0)
 S (ECU1,ECU2,ECU3)=""
"RTN","ECXEC",66,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",67,0)
 F I=1:1:3 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",68,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",69,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",70,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",71,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",72,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",73,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",74,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",75,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",76,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",77,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",78,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",79,0)
 D:ECP[";"
"RTN","ECXEC",80,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",81,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",82,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",83,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",84,0)
 S ECXCMOD=""
"RTN","ECXEC",85,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",86,0)
 .S MOD=0,M=""
"RTN","ECXEC",87,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",88,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",89,0)
 .K MOD,M
"RTN","ECXEC",90,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",91,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",92,0)
 ;
"RTN","ECXEC",93,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",94,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",95,0)
 ;
"RTN","ECXEC",96,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",97,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",98,0)
 ;
"RTN","ECXEC",99,0)
 ;- encounter classification
"RTN","ECXEC",100,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",101,0)
 I ECXVISIT'="" D
"RTN","ECXEC",102,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",103,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",104,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",105,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",106,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",107,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",108,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",109,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",110,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",111,0)
 ;
"RTN","ECXEC",112,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",113,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",114,0)
 ;
"RTN","ECXEC",115,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",116,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",117,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",118,0)
 Q
"RTN","ECXEC",119,0)
 ;
"RTN","ECXEC",120,0)
FILE ;file record in #727.815
"RTN","ECXEC",121,0)
 ;node0
"RTN","ECXEC",122,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",123,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",124,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",125,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",126,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",127,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",128,0)
 ;^pce cpt code (ECXCPT)^primary icd-9 code ECXICD9^secondary icd-9
"RTN","ECXEC",129,0)
 ;ECXICD91^secondary icd-9 ECXICD92^secondary icd-9 ECXICD93^secondary 
"RTN","ECXEC",130,0)
 ;icd-9 ECXICD94^agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",131,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",132,0)
 ;ECPCE7^^dss identifier ECDSS^dss dept
"RTN","ECXEC",133,0)
 ;node1
"RTN","ECXEC",134,0)
 ;mpi ECXMPI^dss dept ECXDSSD^PLACEHOLDER
"RTN","ECXEC",135,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",136,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",137,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",138,0)
 ;placeholder^
"RTN","ECXEC",139,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",140,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",141,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",142,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",143,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",144,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",145,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",146,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",147,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",148,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",149,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date
"RTN","ECXEC",150,0)
 ;ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",151,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",152,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",153,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",154,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",155,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",156,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD
"RTN","ECXEC",157,0)
 ;
"RTN","ECXEC",158,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",159,0)
 N ECXDATA
"RTN","ECXEC",160,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",161,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",162,0)
 ;done
"RTN","ECXEC",163,0)
 N DA,DIK
"RTN","ECXEC",164,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",165,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",166,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",167,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",168,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",169,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",170,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",171,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",172,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",173,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",174,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",175,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",176,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",177,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",178,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",179,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",180,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",181,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",182,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",183,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",184,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",185,0)
 ; PATCAT added
"RTN","ECXEC",186,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",187,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXEC",188,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",189,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",190,0)
 Q
"RTN","ECXEC",191,0)
 ;
"RTN","ECXEC",192,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",193,0)
 N OUT
"RTN","ECXEC",194,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",195,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",196,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",197,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",198,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",199,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",200,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",201,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",202,0)
 I OUT S ECFILE=""
"RTN","ECXEC",203,0)
 Q
"RTN","ECXEC",204,0)
 ;
"RTN","ECXEC",205,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",206,0)
 N ECXQQ
"RTN","ECXEC",207,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXKILL")
0^24^B8836800^B6822218
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ;11/23/10  13:49
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49,84,89,105,112,127**;Dec 22, 1997;Build 36
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K ECDAPRNP,ECDPRNPI,ECISNPI,ECDOCNPI
"RTN","ECXKILL",7,0)
 K ECU1NPI,ECU2NPI,ECU3NPI
"RTN","ECXKILL",8,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",9,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",10,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",11,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",12,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",13,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",14,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",15,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN,CCDORD
"RTN","ECXKILL",16,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",17,0)
 K ECLL,ECLN,ECLNC,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN,CCDGVN,CCUNIT
"RTN","ECXKILL",18,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",19,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO,ECXADT,ECXATM,CCIEN
"RTN","ECXKILL",20,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECODE2,ECOLD,ECONE,ECOPAY
"RTN","ECXKILL",21,0)
 K ECATTNPI,ECPWNPI,ECXUSNPI,ECPWNPI,ECXOEF,ECXOEFDT,ECPLACE,CCTYPE
"RTN","ECXKILL",22,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4
"RTN","ECXKILL",23,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO,ECODE2,ECXASTA,ECXAMED
"RTN","ECXKILL",24,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",25,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC,ECXSCADT
"RTN","ECXKILL",26,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",27,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES,ECXEST,ECXECE
"RTN","ECXKILL",28,0)
 K ECLRBILL,ECDSSFK,ECLRTNM,ECLRDTNM,ECXPROPC,ECPRONPI,ECCLAS,ECPTNPI,ECXORN,ECXORT
"RTN","ECXKILL",29,0)
 K ACTDT,DRG,DRUG,ECPROPC,ECVACL,ECVNDC,ECXENC,ECXENRL,ECXERI,ECXERR,ECXIVID,ECXNOD,ECXNPRFI,ECXOX,ECXOSC,ECXSCATM,ECXUSRTN,IDAT,OK,PIEN,PLACEHLD,SCADT
"RTN","ECXKILL",30,0)
 D ^ECXKILL1
"RTN","ECXKILL",31,0)
 ;
"RTN","ECXKILL",32,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",33,0)
 K %DT,ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",34,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",35,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",36,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",37,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",38,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",39,0)
 K ^TMP($J)
"RTN","ECXKILL",40,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",41,0)
 Q
"RTN","ECXKILL1")
0^3^B7329433^B7082343
"RTN","ECXKILL1",1,0)
ECXKILL1 ;ALB/ESD Kill Local DSS Variables (continued) ; 8/28/02 2:07pm
"RTN","ECXKILL1",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,89,120,127**;Dec 22, 1997;Build 36
"RTN","ECXKILL1",3,0)
 ;
"RTN","ECXKILL1",4,0)
 K ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD
"RTN","ECXKILL1",5,0)
 K ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL1",6,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDF
"RTN","ECXKILL1",7,0)
 K OPC,P,P1,P11,P2,P3,POP,Q,RD,RESP,QFLG
"RTN","ECXKILL1",8,0)
 K SC,SRDA,SRNM,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,W,X,X1,X2,XMDUZ
"RTN","ECXKILL1",9,0)
 K XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB,ECXLH,ECXLC,ECXMC
"RTN","ECXKILL1",10,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","ECXKILL1",11,0)
 K ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER
"RTN","ECXKILL1",12,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM
"RTN","ECXKILL1",13,0)
 K ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC,ECX2TME
"RTN","ECXKILL1",14,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA,ECXINST
"RTN","ECXKILL1",15,0)
 K ECXATT,ECXATTL,ECXATTN,ECXLOS,ECXLOSA,ECXLOSP,ECXPRV,ECXPRVL,ECXPRVN
"RTN","ECXKILL1",16,0)
 K ECXTRT,ECXTRTL,ECXTRTN,ECXSPC,ECXSPCL,ECXSPCN,ECCSC,ECXSC,ECXP1
"RTN","ECXKILL1",17,0)
 K ECXP2,ECXP3,ECXDSSI,ECXDSSD,ECXYM,ECXDIV,ECXDAY,ECXSSN,ECXDATE,ECXPNM
"RTN","ECXKILL1",18,0)
 K ECXDFN,ECXA,ECPTNPI,ECCLAS,ECCLAS2,ECASPR,ECASNPI,ECSRNPI,ECATNPI
"RTN","ECXKILL1",19,0)
 K ECSANPI,ECXCPT,ECXCMOD,ECXFAC,ECXMN,ECXTS,ECXENEL,ECXSAI,ECXPAYOR
"RTN","ECXKILL1",20,0)
 K ECXAST,ECXEST,ECXRST,ECXMST,ECXMIL,ECXPST,ECXPLOC,ECXPOS,ECXSEX,ECXDOB
"RTN","ECXKILL1",21,0)
 K ECXRELG,ECXEMP,ECXHI,ECXSTATE,ECXCNTY,ECXZIP,ECXMAR,ECXRACE,ECXVET
"RTN","ECXKILL1",22,0)
 K ECXVNS,ECXELIG,ECXENRL,ECXPRNPI,ECXPRCLS,ECXWPRV,ECXW,ECXCNT,ECXCOST
"RTN","ECXKILL1",23,0)
 K ECXADM,ECXPROV,ECXPROVP,ECXPROVN,ECXBILST,ECU1A,ECU2A,ECU3A,ECU1NPI
"RTN","ECXKILL1",24,0)
 K ECU2NPI,ECU3NPI,ECDENNPI,ECXWRD,ECXWTO,ECXAO,ECXIR,ECXCLIN,ECXICD9
"RTN","ECXKILL1",25,0)
 K ECXIEN,ECXKEY,ECXMPI,ECXSTOP,ECXSVC,ECXOBS,ECXADMDT,ECXAOL,ECXCEDT
"RTN","ECXKILL1",26,0)
 K ECXCIEN,ECXCNH,ECXCSDT,ECXCTYP,ECXENC,ECXOBS,ECXODIV,ECXSHAD
"RTN","ECXKILL1",27,0)
 K ECXORDDT,ECXORDPH,ECXORDPR,ECXORDST,ECXDAPR,ECXDPCT,ECXDPR,ECXRPHY
"RTN","ECXKILL1",28,0)
 K ECXPDIV,ECXATYP,ECXPVST,ECXSADM,ECXMTST,ECXQ,ECXHNCI,ECXETH,ECXRC1
"RTN","ECXKILL1",29,0)
 K ECXPHI,ECXCNHU,ECXCAT,ECXPRIOR,ECXOPNPI,ECXAOT,ECXCNTRY,ECXSHADI,ECXPATCAT
"RTN","ECXKILL1",30,0)
 K ECU,ECU1,ECU2,ECU3,ECAC1,ECAC1S,ECAC2,ECAC2S,ECDSS,ECUPCE,ECUSTOP
"RTN","ECXKILL1",31,0)
 K ECXCVE,ECXCVEDT,ECXCVENC,ECXDOM,ECXDSSP,ECXEUSTA,ECXINP,ECXIO,ICD9
"RTN","ECXKILL1",32,0)
 K ECXMEAN,ECXPPC1,ECXPPC2,ECXPPC3,ECXPTYPE,ECXREL,ECXSBGRP,ECXUESTA
"RTN","ECXKILL1",33,0)
 F I=1:1:4 K @("ECXICD9"_I)
"RTN","ECXKILL1",34,0)
 K ECXUNIT,ECXVIET,CNT,I,ECXCFLG
"RTN","ECXKILL1",35,0)
 Q
"RTN","ECXLABN")
0^25^B44410370^B38906559
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ;10/4/10  16:56
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112,127**;Dec 22, 1997;Build 36
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG,ECXDFN
"RTN","ECXLABN",35,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",36,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",37,0)
 ;resolve ecloc
"RTN","ECXLABN",38,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",39,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",40,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",41,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",42,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",43,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",44,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",45,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",46,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",47,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",48,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",49,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",50,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR) S ECXDFN=ECIFN
"RTN","ECXLABN",51,0)
 Q:ECXERR
"RTN","ECXLABN",52,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",53,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL",ECXDFN=0 I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",54,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",55,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",56,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",57,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",59,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",60,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",62,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",63,0)
 ;
"RTN","ECXLABN",64,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",65,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",66,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",67,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",68,0)
 ;
"RTN","ECXLABN",69,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",70,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",71,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",72,0)
 ;
"RTN","ECXLABN",73,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",74,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",75,0)
 K ECXDIEN
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",78,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",79,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLABN",80,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABN",81,0)
 ;
"RTN","ECXLABN",82,0)
 ;- get  lab billable procedure, dss feeder key, data name, and data location
"RTN","ECXLABN",83,0)
 S ECXLEX="" I $D(^LRO(64.03,ECLRN,2)) S ECXLEX=^(2)
"RTN","ECXLABN",84,0)
 S ECLRBILL=$P(ECXLEX,U),ECDSSFK=$P(ECXLEX,U,2)
"RTN","ECXLABN",85,0)
 S ECLRTNM=$P(ECXLEX,U,3),ECLRDTNM=$P(ECXLEX,U,4)
"RTN","ECXLABN",86,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",87,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",88,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",89,0)
 S ECXLNC=""
"RTN","ECXLABN",90,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",91,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",92,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",93,0)
 .;--getting LOINC Code
"RTN","ECXLABN",94,0)
 .S ECXLNC=""
"RTN","ECXLABN",95,0)
 .S ECWKLD=$P($G(EC1),U,11)
"RTN","ECXLABN",96,0)
 .S ECSP=$P($G(EC1),U,17),ECLRID=0
"RTN","ECXLABN",97,0)
 .;--getting lab patient id
"RTN","ECXLABN",98,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",99,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",100,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",101,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",102,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",103,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",104,0)
 .D
"RTN","ECXLABN",105,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",106,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",107,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",108,0)
 ..S ECRSLT=^LR(ECLRID,"CH",LRIDT,ECPT),ECXLNC=$P($G(ECRSLT),"!",3)
"RTN","ECXLABN",109,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",110,0)
 ..S ECXLNC=$$GET1^DIQ(95.3,ECXLNC,.01)
"RTN","ECXLABN",111,0)
 .D FILE
"RTN","ECXLABN",112,0)
 Q
"RTN","ECXLABN",113,0)
 ;
"RTN","ECXLABN",114,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",115,0)
 N X,OK,PT
"RTN","ECXLABN",116,0)
 ;get data
"RTN","ECXLABN",117,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",118,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",119,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4)
"RTN","ECXLABN",120,0)
 ;set data and save for later
"RTN","ECXLABN",121,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",122,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3",.ECXPAT)
"RTN","ECXLABN",123,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",124,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",125,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",126,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI
"RTN","ECXLABN",127,0)
 ;get date specific data
"RTN","ECXLABN",128,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",129,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",130,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",131,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",132,0)
 Q
"RTN","ECXLABN",133,0)
 ;
"RTN","ECXLABN",134,0)
FILE ;file record
"RTN","ECXLABN",135,0)
 ;node0
"RTN","ECXLABN",136,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",137,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",138,0)
 ;location^provider and file^
"RTN","ECXLABN",139,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",140,0)
 ;primary care provider
"RTN","ECXLABN",141,0)
 ;node1
"RTN","ECXLABN",142,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",143,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",144,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",145,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",146,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",147,0)
 ;(FEMA) ECXERI^associate pc provider npi ECASNPI^primary care provider
"RTN","ECXLABN",148,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC^lab billable procedure^dss feeder key
"RTN","ECXLABN",149,0)
 ;node2
"RTN","ECXLABN",150,0)
 ;data name^data location^PATCAT
"RTN","ECXLABN",151,0)
 ;ECDOCPC
"RTN","ECXLABN",152,0)
 N DA,DIK
"RTN","ECXLABN",153,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",154,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",155,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",156,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",157,0)
 N ECXDATA
"RTN","ECXLABN",158,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",159,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",160,0)
 ;convert eclrbill  to y/n
"RTN","ECXLABN",161,0)
 S ECLRBILL=$S(ECLRBILL=1:"Y",1:"N")
"RTN","ECXLABN",162,0)
 ;convert ecdssfk to y/n
"RTN","ECXLABN",163,0)
 S ECDSSFK=$S(ECDSSFK=1:"Y",1:"")
"RTN","ECXLABN",164,0)
 ;done
"RTN","ECXLABN",165,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",166,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",167,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",168,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",169,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",170,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",171,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",172,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",173,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",174,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECLRBILL_U_ECDSSFK_U,ECODE2=ECLRTNM_U_ECLRDTNM_U_ECXPATCAT
"RTN","ECXLABN",175,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXLABN",176,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",177,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",178,0)
 Q
"RTN","ECXLABN",179,0)
 ;
"RTN","ECXLABN",180,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",181,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",182,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",183,0)
 Q
"RTN","ECXLABN",184,0)
 ;
"RTN","ECXLABN",185,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",186,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^26^B21203653^B20056057
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ;10/14/10  14:46
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105,112,127**;Dec 22, 1997;Build 36
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",15,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",16,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",17,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",18,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",19,0)
 ..Q:ECF=""
"RTN","ECXLABR",20,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",21,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",22,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",23,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",24,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",25,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",26,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",27,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",28,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",29,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",30,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",31,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",32,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",33,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",34,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;",.ECXPAT)
"RTN","ECXLABR",35,0)
 ...Q:'OK
"RTN","ECXLABR",36,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",37,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",38,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",39,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",40,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",41,0)
 ..;loop on results multiple
"RTN","ECXLABR",42,0)
 ..;
"RTN","ECXLABR",43,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",44,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",45,0)
 ..K ECXDIEN
"RTN","ECXLABR",46,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",47,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",48,0)
 ..;
"RTN","ECXLABR",49,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",50,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",51,0)
 ..S ECRES=0
"RTN","ECXLABR",52,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",53,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",54,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",55,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",56,0)
 ....I ECWC S ECWC=$P(^LAM(ECWC,0),U,2)
"RTN","ECXLABR",57,0)
 ....S ECLNC=$P(EC2,U,5)
"RTN","ECXLABR",58,0)
 .... ; ******* - PATCH 127, ADD PATCAT CODE
"RTN","ECXLABR",59,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABR",60,0)
 ....;
"RTN","ECXLABR",61,0)
 ....; - Free text results translation
"RTN","ECXLABR",62,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",63,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",64,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",65,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",66,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",67,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",68,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",69,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",70,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",71,0)
 ....;
"RTN","ECXLABR",72,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",73,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",74,0)
 Q
"RTN","ECXLABR",75,0)
 ;
"RTN","ECXLABR",76,0)
FILE ;file record
"RTN","ECXLABR",77,0)
 ;node0
"RTN","ECXLABR",78,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",79,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",80,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",81,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",82,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",83,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",84,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",85,0)
 ;node1
"RTN","ECXLABR",86,0)
 ;mpi (ECXMPI)^dss dept (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",87,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",88,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",89,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI^LOINC code ECLNC
"RTN","ECXLABR",90,0)
 ;Patient Category PATCAT
"RTN","ECXLABR",91,0)
 N DA,DIK
"RTN","ECXLABR",92,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",93,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",94,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",95,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",96,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",97,0)
 N ECXDATA,ECXTSC
"RTN","ECXLABR",98,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",99,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXLABR",100,0)
 ;done
"RTN","ECXLABR",101,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTSC_U_ECWC_U
"RTN","ECXLABR",102,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",103,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",104,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",105,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_ECLNC
"RTN","ECXLABR",106,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLABR",107,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",108,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",109,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",110,0)
 Q
"RTN","ECXLABR",111,0)
 ;
"RTN","ECXLABR",112,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",113,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",114,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",115,0)
 Q
"RTN","ECXLABR",116,0)
 ;
"RTN","ECXLABR",117,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",118,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLBB")
0^28^B51392005^B50013852
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ;9/13/10  13:32
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84,90,92,104,105,102,120,127**;Dec 22, 1997;Build 36
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
 ; access to the BLOOD PRODUCT (#66) is supported by IA 4510
"RTN","ECXLBB",7,0)
BEG ;entry point from option
"RTN","ECXLBB",8,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",9,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",10,0)
 Q
"RTN","ECXLBB",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB",12,0)
 ; begin package specific extract
"RTN","ECXLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC,ECPHYNPI
"RTN","ECXLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST,ECXPATCAT
"RTN","ECXLBB",15,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",16,0)
 ; by taskmanager 
"RTN","ECXLBB",17,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",18,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",19,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",20,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",21,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",22,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",23,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",24,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",25,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",26,0)
 ;filing the record entry 
"RTN","ECXLBB",27,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",28,0)
 ; reset for each DFN.
"RTN","ECXLBB",29,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",30,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",31,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",32,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",33,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",34,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",35,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",36,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",37,0)
 .; ECARRY(9)=REQUESTING PROVIDER, ECARRY(10)=REQUEST. PROV. PERSON CLASS
"RTN","ECXLBB",38,0)
 .; ECARRY(11)=UNIT MODIFIED,ECARRY(12)=UNIT MODIFICATION
"RTN","ECXLBB",39,0)
 .; ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB",40,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$G(^LAB(66,$P(EC0,"^",2),0))
"RTN","ECXLBB",41,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",42,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",43,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",44,0)
 . S ECARRY(8)=$E($P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^"),1,10)
"RTN","ECXLBB",45,0)
 . S (ECARRY(9),ECARRY(10),ECARRY(13))="" D GETRPRV
"RTN","ECXLBB",46,0)
 . S ECARRY(11)=$$MODIFIED(),(ECXPHY,ECXPHYPC,ECPHYNPI)=""
"RTN","ECXLBB",47,0)
 . S ECARRY(12)=$S(ECARRY(11)="Y":$$UNITMODS(),1:"")
"RTN","ECXLBB",48,0)
 . D GETDATA
"RTN","ECXLBB",49,0)
 . K ECARRY
"RTN","ECXLBB",50,0)
 D AUDRPT^ECXLBB1
"RTN","ECXLBB",51,0)
 Q
"RTN","ECXLBB",52,0)
UNITMODS() ; Get modification criteria from fields #.06 and #3 from file #66
"RTN","ECXLBB",53,0)
 N MODARY,MO,EC66A,MODSTR,STR3
"RTN","ECXLBB",54,0)
 S MODARY("DIVIDED")="D",MODARY("POOLED")="P",MODARY("WASHED")="W"
"RTN","ECXLBB",55,0)
 S MODARY("FROZEN")="F",MODARY("LEUKOCYTE POOR")="L"
"RTN","ECXLBB",56,0)
 S MODARY("REJUVENATED")="R",MODARY("DEGLYCEROLIZED")="G"
"RTN","ECXLBB",57,0)
 S MODARY("IRRADIATED")="I",MODARY("SEPARATED")="S"
"RTN","ECXLBB",58,0)
 ;if modification criteria is null determine value from description
"RTN","ECXLBB",59,0)
 S MODSTR=$S($P(EC66,U,6)'="":$P(EC66,U,6),1:$$CHKMOD^ECXLBB1($P(EC66,"^")))
"RTN","ECXLBB",60,0)
 ;get modification criteria for entries at field #3 in file #66
"RTN","ECXLBB",61,0)
 S MOD=0 F  S MOD=$O(^LAB(66,$P(EC0,"^",2),3,MOD)) Q:'MOD  D
"RTN","ECXLBB",62,0)
 .S EC66A=$G(^LAB(66,MOD,0)) I EC66A="" Q
"RTN","ECXLBB",63,0)
 .S STR3=$S($P(EC66A,U,6)'="":$P(EC66A,U,6),1:$$CHKMOD^ECXLBB1($P(EC66A,"^")))
"RTN","ECXLBB",64,0)
 .I STR3'="",MODSTR'[STR3 S MODSTR=MODSTR_STR3
"RTN","ECXLBB",65,0)
 Q MODSTR
"RTN","ECXLBB",66,0)
MODIFIED() ; Was unit modified
"RTN","ECXLBB",67,0)
 ; Init variables
"RTN","ECXLBB",68,0)
 N XMATCH,UNIT,MOD,COMPID,MODNODE,MODTO
"RTN","ECXLBB",69,0)
 S (XMATCH,UNIT)=0,MOD=""
"RTN","ECXLBB",70,0)
 ; Check input
"RTN","ECXLBB",71,0)
 Q:'$G(ECLRDFN)!'$P(EC0,U,2) "N"
"RTN","ECXLBB",72,0)
 ;Find xmatch for blood component request
"RTN","ECXLBB",73,0)
 S XMATCH=$O(^LR(ECLRDFN,1.8,$P(EC0,U,2),1,XMATCH)) Q:'XMATCH "N"
"RTN","ECXLBB",74,0)
 ;Get blood inventory file (#65) pointer
"RTN","ECXLBB",75,0)
 S UNIT=$P($G(^LR(ECLRDFN,1.8,$P(EC0,"^",2),1,XMATCH,0)),U)
"RTN","ECXLBB",76,0)
 ;Look at disposition field (#4.1) in blood inventory file (#65)
"RTN","ECXLBB",77,0)
 S MOD=$P($G(^LRD(65,+XMATCH,4)),U),COMPID=$P(EC66,U,3)
"RTN","ECXLBB",78,0)
 ; Get 'the modified to' entry pointer to blood inventory file (#66)
"RTN","ECXLBB",79,0)
 I MOD="MO" S MODTO=0 F  S MODTO=$O(^LRD(65,+XMATCH,9,MODTO)) Q:'MODTO  D
"RTN","ECXLBB",80,0)
 .S MODNODE=$G(^LRD(65,+XMATCH,9,MODTO,0)) Q:$P(^(0),U,3)'>1
"RTN","ECXLBB",81,0)
 .Q:$P(MODNODE,U,2)'=COMPID
"RTN","ECXLBB",82,0)
 .; Set the modify to unit ien for file (#66)
"RTN","ECXLBB",83,0)
 Q $S(MOD="MO":"Y",1:"N")
"RTN","ECXLBB",84,0)
GETRPRV ; get requesting provider, requesting provider person class and 
"RTN","ECXLBB",85,0)
 ; production division code
"RTN","ECXLBB",86,0)
 ; input: ECD      =INVERTED DATE SUBSCRIPT
"RTN","ECXLBB",87,0)
 ;        ECARRY(1)=TRANSFUSION DATE AND TIME
"RTN","ECXLBB",88,0)
 ; note: Accessioned data in file #68 is stored up to 90 days.
"RTN","ECXLBB",89,0)
 N ECXBNOD,ACC,ACCDT,ACCNODE,PERCLS,DIV,NUM
"RTN","ECXLBB",90,0)
 I ECARRY(1)="" Q  ;there is no transfusion date
"RTN","ECXLBB",91,0)
 ;get BLOOD BANK record, field #1, in file #63 located on "BB" node
"RTN","ECXLBB",92,0)
 ;since there is a slight time lapse, $O will find the BB record
"RTN","ECXLBB",93,0)
 S ECXBNOD=$O(^LR(ECLRDFN,"BB",ECD)) I ECXBNOD="" Q
"RTN","ECXLBB",94,0)
 S ECXBNOD=^LR(ECLRDFN,"BB",ECXBNOD,0) I ECXBNOD="" Q
"RTN","ECXLBB",95,0)
 ;Compose accession number,originating from field #.06 subfile #63.01
"RTN","ECXLBB",96,0)
 ; ex. ACC=BB 0528 27
"RTN","ECXLBB",97,0)
 S ACC=$P(ECXBNOD,U,6),ACC=$TR($P(ACC," ",2,99)," ")
"RTN","ECXLBB",98,0)
 S ACCDT=$E(ECARRY(1),1,3)_$E(ACC,1,4),NUM=$E(ACC,5,99)
"RTN","ECXLBB",99,0)
 ;Get field #2 from file #68, field #1 from subfile #68.01 which is
"RTN","ECXLBB",100,0)
 ;subfile #68.02. Look at 29=blood bank ien, from 0th node, get fields
"RTN","ECXLBB",101,0)
 ;#6.5 PROVIDER and #26 DIV
"RTN","ECXLBB",102,0)
 I (ACCDT)=""!(NUM="") Q
"RTN","ECXLBB",103,0)
 ; identify bb accession area the patient was in to get the right DIV
"RTN","ECXLBB",104,0)
 S AREA=$$AREA
"RTN","ECXLBB",105,0)
 S ACCNODE=$G(^LRO(68,+AREA,1,ACCDT,1,NUM,0))
"RTN","ECXLBB",106,0)
 S ECARRY(9)=$P(ACCNODE,U,8) I ECARRY(9)'="" D
"RTN","ECXLBB",107,0)
 . S PERCLS=$$GET^XUA4A72(ECARRY(9),ACCDT)
"RTN","ECXLBB",108,0)
 . I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB",109,0)
 . S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ACCDT)
"RTN","ECXLBB",110,0)
 . S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB",111,0)
 . S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB",112,0)
 S DIV=$P($G(^LRO(68,+AREA,1,ACCDT,1,NUM,.4)),U)
"RTN","ECXLBB",113,0)
 I DIV'="" S ECARRY(13)=$$RADDIV^ECXDEPT(DIV)
"RTN","ECXLBB",114,0)
 Q
"RTN","ECXLBB",115,0)
AREA() ; resolve accession area's ien to use and validate
"RTN","ECXLBB",116,0)
 ;          Accession number
"RTN","ECXLBB",117,0)
 ;          Patient LRDFN
"RTN","ECXLBB",118,0)
 ; note: if there is only one accession area use '29'
"RTN","ECXLBB",119,0)
 N A,CNT,BBLIST,DFN,ACC,AREA,DATE,TDATE,ACCNODE
"RTN","ECXLBB",120,0)
 S (CNT,FLAG,A)=0,DFN=""
"RTN","ECXLBB",121,0)
 ; set the date from the "bb" node in file (#63)
"RTN","ECXLBB",122,0)
 S DATE=$P(ECXBNOD,U)
"RTN","ECXLBB",123,0)
 ; setup array for bb accession areas if more than one
"RTN","ECXLBB",124,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)="BB" D
"RTN","ECXLBB",125,0)
 . S BBLIST(A)=""
"RTN","ECXLBB",126,0)
 . S CNT=CNT+1
"RTN","ECXLBB",127,0)
 I CNT'>1 Q 29
"RTN","ECXLBB",128,0)
 S AREA=0 F  S AREA=$O(BBLIST(AREA)) Q:'AREA  D  Q:FLAG
"RTN","ECXLBB",129,0)
 . ; get additional accession information for validation
"RTN","ECXLBB",130,0)
 . S ACCNODE=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,0))
"RTN","ECXLBB",131,0)
 . S ACC=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,.2))
"RTN","ECXLBB",132,0)
 . S DFN=$P($G(ACCNODE),U)
"RTN","ECXLBB",133,0)
 . S TDATE=$P($G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,3)),U)
"RTN","ECXLBB",134,0)
 . I (DFN=ECLRDFN)&(ACC=$P(ECXBNOD,U,6))&(DATE=TDATE) S FLAG=1
"RTN","ECXLBB",135,0)
 Q AREA
"RTN","ECXLBB",136,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",137,0)
 ; entry in file 727.829
"RTN","ECXLBB",138,0)
 N ECXSTR
"RTN","ECXLBB",139,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",140,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",141,0)
 ;
"RTN","ECXLBB",142,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",143,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",144,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",145,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",146,0)
 Q:ECENCTR=""
"RTN","ECXLBB",147,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB",148,0)
 S ECXERI=ECPAT("ERI")
"RTN","ECXLBB",149,0)
 ;
"RTN","ECXLBB",150,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLBB",151,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLBB",152,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB",153,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",154,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB",155,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB",156,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",157,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",158,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB",159,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB",160,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB",161,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB",162,0)
 ;  used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB",163,0)
 Q
"RTN","ECXLBB",164,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",165,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",166,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",167,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",168,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",169,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",170,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",171,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",172,0)
 ; 
"RTN","ECXLBB",173,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",174,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",175,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",176,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",177,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",178,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",179,0)
 ;                            1=error condition
"RTN","ECXLBB",180,0)
 N X,OK,ECXERR
"RTN","ECXLBB",181,0)
 ;get data
"RTN","ECXLBB",182,0)
 S ECXERR=0
"RTN","ECXLBB",183,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB",184,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",185,0)
 Q ECXERR
"RTN","ECXLBB",186,0)
 ;
"RTN","ECXLBB",187,0)
FILE(ECODE) ;
"RTN","ECXLBB",188,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",189,0)
 ;
"RTN","ECXLBB",190,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",191,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",192,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",193,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",194,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",195,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB",196,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB",197,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB",198,0)
 ;ECODE1- requesting provider npi ECREQNPI^PATCAT
"RTN","ECXLBB",199,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",200,0)
 ; ECX*3*61
"RTN","ECXLBB",201,0)
 N DA,DIK,EC7
"RTN","ECXLBB",202,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",203,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",204,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB",205,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB",206,0)
 .S ECODE1=$G(ECREQNPI)_U
"RTN","ECXLBB",207,0)
 .I ECXLOGIC>2010 S ECODE1=ECODE1_ECXPATCAT
"RTN","ECXLBB",208,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB",209,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",210,0)
 Q
"RTN","ECXLBB",211,0)
 ;
"RTN","ECXLBB",212,0)
 ;
"RTN","ECXLBB",213,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",214,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",215,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",216,0)
 Q
"RTN","ECXLBB",217,0)
 ;
"RTN","ECXLBB",218,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",219,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",220,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",221,0)
 ;
"RTN","ECXLBB",222,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",223,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",224,0)
 Q
"RTN","ECXLBB",225,0)
 ;
"RTN","ECXLBB",226,0)
 ;ECXLBB
"RTN","ECXLBB1")
0^39^B27049597^B26138435
"RTN","ECXLBB1",1,0)
ECXLBB1 ;ALB/JRC - DSS VBECS EXTRACT ; 7/24/08 12:01pm
"RTN","ECXLBB1",2,0)
 ;;3.0;DSS EXTRACTS;**105,102,120,127**;Dec 22, 1997;Build 36
"RTN","ECXLBB1",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB1",4,0)
 ; access to the VBECS EXTRACT file (#6002.03) is supported by
"RTN","ECXLBB1",5,0)
 ; controlled subscription to IA #4953  (global root ^VBECS(6002.03)
"RTN","ECXLBB1",6,0)
BEG ;entry point from option
"RTN","ECXLBB1",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB1",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB1",9,0)
 Q
"RTN","ECXLBB1",10,0)
 ;
"RTN","ECXLBB1",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB1",12,0)
 ; begin package specific extract
"RTN","ECXLBB1",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB1",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB1",15,0)
 N ECPHYNPI,ECREQNPI,ECXPATCAT
"RTN","ECXLBB1",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB1",17,0)
 ; by taskmanager 
"RTN","ECXLBB1",18,0)
 ; ECED defined in ^ECXTRAC - end date of the extract
"RTN","ECXLBB1",19,0)
 ; TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB1",20,0)
 ; ECED and ECSD input provided by the user interface
"RTN","ECXLBB1",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB1",22,0)
 ; Read through the VBECS DSS EXTRACT file (6002.03)
"RTN","ECXLBB1",23,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB1",24,0)
 ;
"RTN","ECXLBB1",25,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB1",26,0)
 N RECORD
"RTN","ECXLBB1",27,0)
 S RECORD=0,ECD=ECSD-.1,ECTODT=ECED+.9
"RTN","ECXLBB1",28,0)
 F  S ECD=$O(^VBEC(6002.03,"C",ECD)) Q:'ECD!(ECD>ECTODT)  S RECORD=0 F  S RECORD=$O(^VBEC(6002.03,"C",ECD,RECORD)) Q:RECORD'>0  S EC0=^VBEC(6002.03,RECORD,0) D
"RTN","ECXLBB1",29,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, ECARRY(3)=COMPONENT 
"RTN","ECXLBB1",30,0)
 .; ECARRY(4)=COMPONENT ABBREVIATION, ECARRY(5)=UNITS POOLED
"RTN","ECXLBB1",31,0)
 .; ECARRY(6)=TRANSFUSION REACTION,ECARRY(7)=VOLUME TRANSFUSED
"RTN","ECXLBB1",32,0)
 .; ECARRY(8)=TRANSFUSION REACTION TYPE, ECARRY(9)=REQUESTING PROVIDER
"RTN","ECXLBB1",33,0)
 .; ECARRY(10)=REQUEST. PROV. PERSON CLASS, ECARRY(11)=UNIT MODIFIED
"RTN","ECXLBB1",34,0)
 .; ECARRY(12)=UNIT MODIFICATION, ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB1",35,0)
 .;
"RTN","ECXLBB1",36,0)
 . S ECXDFN=$P(EC0,U,2),ECERR=$$PAT(ECXDFN) Q:ECERR
"RTN","ECXLBB1",37,0)
 . S ECARRY(1)=$P(EC0,U,10),ECARRY(3)=$P(EC0,U,7),ECARRY(4)=$P(EC0,U,8),ECARRY(5)=$S(+$P(EC0,U,9)=0:1,1:+$P(EC0,U,9)),ECARRY(6)=$S($P(EC0,U,15):"Y",1:"N"),ECARRY(7)=$P(EC0,"^",12),ECARRY(8)=$P(EC0,U,13)
"RTN","ECXLBB1",38,0)
 . S ECARRY(9)=$P(EC0,U,6),ECINST=$P(EC0,U,3),ECARRY(12)=$P(EC0,U,14),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N"),ECARRY(13)=$P(EC0,U,4)
"RTN","ECXLBB1",39,0)
 . ;get requesting and ordering providers and their person class
"RTN","ECXLBB1",40,0)
 . S ECXPHY=$P(EC0,U,5),(ECXPHYPC,ECARRY(10),ECPHYNPI,ECREQNPI)=""
"RTN","ECXLBB1",41,0)
 . I ECXPHY]"" S ECXPHY=$O(^VA(200,"B",ECXPHY,0))
"RTN","ECXLBB1",42,0)
 . I ECXPHY>0 D
"RTN","ECXLBB1",43,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECXPHY,ECD)
"RTN","ECXLBB1",44,0)
 .. I +PERCLS>0 S ECXPHYPC=$P(PERCLS,U,7)
"RTN","ECXLBB1",45,0)
 .. S ECPHYNPI=$$NPI^XUSNPI("Individual_ID",ECXPHY,ECD)
"RTN","ECXLBB1",46,0)
 .. S:+ECPHYNPI'>0 ECPHYNPI="" S ECPHYNPI=$P(ECPHYNPI,U)
"RTN","ECXLBB1",47,0)
 .. S ECXPHY=2_ECXPHY
"RTN","ECXLBB1",48,0)
 . I ECARRY(9)>0 D
"RTN","ECXLBB1",49,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECARRY(9),ECD)
"RTN","ECXLBB1",50,0)
 .. I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB1",51,0)
 .. S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ECD)
"RTN","ECXLBB1",52,0)
 .. S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB1",53,0)
 .. S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB1",54,0)
 . D GETDATA
"RTN","ECXLBB1",55,0)
 . K ECARRY
"RTN","ECXLBB1",56,0)
 Q
"RTN","ECXLBB1",57,0)
 ;
"RTN","ECXLBB1",58,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB1",59,0)
 ; entry in file 727.829
"RTN","ECXLBB1",60,0)
 N ECXSTR
"RTN","ECXLBB1",61,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB1",62,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4)
"RTN","ECXLBB1",63,0)
 ;
"RTN","ECXLBB1",64,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB1",65,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB1",66,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB1",67,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB1",68,0)
 Q:ECENCTR=""
"RTN","ECXLBB1",69,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB1",70,0)
 S ECXERI=$G(ECPAT("ERI"))
"RTN","ECXLBB1",71,0)
 ;
"RTN","ECXLBB1",72,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLBB1",73,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLBB1",74,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB1",75,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB1",76,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB1",77,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB1",78,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB1",79,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB1",80,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB1",81,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB1",82,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB1",83,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB1",84,0)
 ;   used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB1",85,0)
 Q
"RTN","ECXLBB1",86,0)
 ;
"RTN","ECXLBB1",87,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB1",88,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB1",89,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB1",90,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB1",91,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB1",92,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB1",93,0)
 ;                            1=error condition
"RTN","ECXLBB1",94,0)
 N X,OK,ECXERR
"RTN","ECXLBB1",95,0)
 ;get data
"RTN","ECXLBB1",96,0)
 S ECXERR=0
"RTN","ECXLBB1",97,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB1",98,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB1",99,0)
 Q ECXERR
"RTN","ECXLBB1",100,0)
 ;
"RTN","ECXLBB1",101,0)
FILE(ECODE) ;
"RTN","ECXLBB1",102,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB1",103,0)
 ;
"RTN","ECXLBB1",104,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB1",105,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB1",106,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB1",107,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB1",108,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB1",109,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB1",110,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB1",111,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB1",112,0)
 ;ECODE1- requesting provider npi ECREQNPI
"RTN","ECXLBB1",113,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB1",114,0)
 ; ECX*3*61
"RTN","ECXLBB1",115,0)
 N DA,DIK,EC7
"RTN","ECXLBB1",116,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB1",117,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB1",118,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB1",119,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB1",120,0)
 .S ECODE1=$G(ECREQNPI)
"RTN","ECXLBB1",121,0)
 .I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLBB1",122,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB1",123,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB1",124,0)
 Q
"RTN","ECXLBB1",125,0)
 ;
"RTN","ECXLBB1",126,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB1",127,0)
 S ECHEAD="LBB"
"RTN","ECXLBB1",128,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB1",129,0)
 Q
"RTN","ECXLBB1",130,0)
 ;
"RTN","ECXLBB1",131,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB1",132,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB1",133,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB1",134,0)
 ;
"RTN","ECXLBB1",135,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB1",136,0)
 N RES,MODX
"RTN","ECXLBB1",137,0)
 I MD="" Q ""
"RTN","ECXLBB1",138,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB1",139,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB1",140,0)
 Q RES
"RTN","ECXLBB1",141,0)
 ;
"RTN","ECXLBB1",142,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB1",143,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB1",144,0)
 Q
"RTN","ECXLBB1",145,0)
 ;
"RTN","ECXLBB1",146,0)
 ;ECXLBB
"RTN","ECXMOV")
0^29^B30514137^B28935067
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ; 4/7/10 10:54am
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105,128,127**;Dec 22, 1997;Build 36
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC,ECDIS
"RTN","ECXMOV",10,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",11,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",12,0)
 S ECED=ECED+.3,QFLG=0
"RTN","ECXMOV",13,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",14,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",15,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXMOV",16,0)
 ...Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",17,0)
 ...S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",18,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",19,0)
 ...I 'OK K ECXPAT Q
"RTN","ECXMOV",20,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",21,0)
 ...S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",22,0)
 ...S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",23,0)
 ...;
"RTN","ECXMOV",24,0)
 ...;reset EC to admission movement and hold discharge movement ECX*128
"RTN","ECXMOV",25,0)
 ...S ECCA=$P(EC,U,14),EC=$G(^DGPM(ECCA,0)),ECA=$P(EC,U) I EC="" D MAIL(ECDA) S QFLG=1 Q
"RTN","ECXMOV",26,0)
 ...;
"RTN","ECXMOV",27,0)
 ...;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",28,0)
 ...;then reset EC to that previous xfer movement
"RTN","ECXMOV",29,0)
 ...S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",30,0)
 ...S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",31,0)
 ...I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",32,0)
 ...;
"RTN","ECXMOV",33,0)
 ...I ECM=2 D
"RTN","ECXMOV",34,0)
 ....;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",35,0)
 ....;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",36,0)
 ....I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",37,0)
 ....S W=$P(EC,U,6)
"RTN","ECXMOV",38,0)
 ...;
"RTN","ECXMOV",39,0)
 ...I ECM=3 D
"RTN","ECXMOV",40,0)
 ....;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",41,0)
 ....;API) will pick up discharge movmement record
"RTN","ECXMOV",42,0)
 ....S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",43,0)
 ....;set losing ward to ward at discharge
"RTN","ECXMOV",44,0)
 ....N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",45,0)
 ....I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",46,0)
 ...;
"RTN","ECXMOV",47,0)
 ...;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",48,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",49,0)
 ...;
"RTN","ECXMOV",50,0)
 ...S (ECXWRD,ECXFAC,ECXDSSD)=""
"RTN","ECXMOV",51,0)
 ...I W'="" D
"RTN","ECXMOV",52,0)
 ....S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",53,0)
 ....S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",54,0)
 ...S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",55,0)
 ...S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",56,0)
 ...;
"RTN","ECXMOV",57,0)
 ...;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",58,0)
 ...S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",59,0)
 ...I ECM=3 D
"RTN","ECXMOV",60,0)
 ....S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",61,0)
 ....S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",62,0)
 ....S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",63,0)
 ...;
"RTN","ECXMOV",64,0)
 ...;Get production division ;p-46
"RTN","ECXMOV",65,0)
 ...N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",66,0)
 ...;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",67,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",68,0)
 ...; 
"RTN","ECXMOV",69,0)
 ... ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXMOV",70,0)
 ...S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",71,0)
 ...;- If no encounter number, don't file record
"RTN","ECXMOV",72,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",73,0)
 ...D:ECXENC'="" FILE
"RTN","ECXMOV",74,0)
 Q
"RTN","ECXMOV",75,0)
 ;
"RTN","ECXMOV",76,0)
FILE ;file the extract record
"RTN","ECXMOV",77,0)
 ;node0
"RTN","ECXMOV",78,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",79,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",80,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",81,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",82,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",83,0)
 ;node1
"RTN","ECXMOV",84,0)
 ;mpi ECXMPI^dss dept ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",85,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",86,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",87,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",88,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",89,0)
 N DA,DIK
"RTN","ECXMOV",90,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",91,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",92,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",93,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",94,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",95,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",96,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",97,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",98,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",99,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",100,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;P-127 ADDED PATCAT
"RTN","ECXMOV",101,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",102,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",104,0)
 Q
"RTN","ECXMOV",105,0)
 ;
"RTN","ECXMOV",106,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",107,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",108,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",109,0)
 Q
"RTN","ECXMOV",110,0)
 ;
"RTN","ECXMOV",111,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",112,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV",113,0)
MAIL(ECXDA) ; 
"RTN","ECXMOV",114,0)
 ; Created to send a message pointing to a bad record ECX*128
"RTN","ECXMOV",115,0)
 ; Input - ECXDA is the PATIENT MOVEMENT (#405) record number for the discharge that has no admission 
"RTN","ECXMOV",116,0)
 ; associated with it.  ECX*128
"RTN","ECXMOV",117,0)
 N XMSUB,XMTEXT,XMY,MSGTEXT,LINENUM
"RTN","ECXMOV",118,0)
 ;;Setup necessary variables to send the message
"RTN","ECXMOV",119,0)
 S XMSUB="Movement Record Error - Please Fix"
"RTN","ECXMOV",120,0)
 S XMTEXT="MSGTEXT("
"RTN","ECXMOV",121,0)
 S XMY("G.DSS-MOVS@"_^XMB("NETNAME"))=""
"RTN","ECXMOV",122,0)
 ;;Create the message to be sent
"RTN","ECXMOV",123,0)
 S LINENUM=1
"RTN","ECXMOV",124,0)
 S MSGTEXT(LINENUM)="The Transfer and Discharge Extract did not complete due to the error below"
"RTN","ECXMOV",125,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",126,0)
 S MSGTEXT(LINENUM)="Discharge movement record "_ECXDA_" does not have an admission movement associated with it."
"RTN","ECXMOV",127,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",128,0)
 S MSGTEXT(LINENUM)="This record needs to be fixed and the extract needs to be run again."
"RTN","ECXMOV",129,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)=""
"RTN","ECXMOV",130,0)
 D ^XMD
"RTN","ECXMOV",131,0)
 Q
"RTN","ECXMTL")
0^27^B38006698^B38030219
"RTN","ECXMTL",1,0)
ECXMTL ;ALB/JAP - DSS Mental Health Extract ; 8/17/07 9:52am
"RTN","ECXMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,30,33,39,46,49,71,82,84,92,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXMTL",3,0)
 ;
"RTN","ECXMTL",4,0)
BEG ;entry point from option
"RTN","ECXMTL",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMTL",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMTL",7,0)
 Q
"RTN","ECXMTL",8,0)
 ;
"RTN","ECXMTL",9,0)
START ;entry point from tasked job
"RTN","ECXMTL",10,0)
 S QFLG=0
"RTN","ECXMTL",11,0)
 ;get first record #
"RTN","ECXMTL",12,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXMTL",13,0)
 ;call mh/dss api for extract record creation
"RTN","ECXMTL",14,0)
 ;variables ecfile,ecxym,ecinst,ecsd,eced passed in by taskmanager
"RTN","ECXMTL",15,0)
 S ECXSEQ=EC7,ECXECX=$P(EC23,U,2),ECXERR=0
"RTN","ECXMTL",16,0)
 ;call mh api to create extract records
"RTN","ECXMTL",17,0)
 S X="YSDSS" X ^%ZOSF("TEST") I '$T S QFLG=1 Q
"RTN","ECXMTL",18,0)
 D UPD^YSDSS(ECFILE,.ECXSEQ,ECXYM,ECXECX,ECINST,ECSD,ECED,.ECXERR)
"RTN","ECXMTL",19,0)
 Q:ECXERR
"RTN","ECXMTL",20,0)
 Q:QFLG
"RTN","ECXMTL",21,0)
 ;if no error, continue
"RTN","ECXMTL",22,0)
 D UPDATE
"RTN","ECXMTL",23,0)
 Q
"RTN","ECXMTL",24,0)
 ;
"RTN","ECXMTL",25,0)
UPDATE ;add non-mh data to each record created by mh api
"RTN","ECXMTL",26,0)
 N ECXADT,JJ,ECXNPRFI
"RTN","ECXMTL",27,0)
 S EC7=EC7+1
"RTN","ECXMTL",28,0)
 F JJ=EC7:1:ECXSEQ Q:QFLG  D
"RTN","ECXMTL",29,0)
 .Q:'$D(^ECX(ECFILE,JJ,0))
"RTN","ECXMTL",30,0)
 .S ECXDFN=$P(^ECX(ECFILE,JJ,0),U,5),ECXDATE=$P(^ECX(ECFILE,JJ,0),U,9),ECXPRV=$P(^ECX(ECFILE,JJ,0),U,18)
"RTN","ECXMTL",31,0)
 .S ECXSCNUM=$P(^ECX(ECFILE,JJ,0),U,23),ECXSCNAM=$P(^ECX(ECFILE,JJ,0),U,24)
"RTN","ECXMTL",32,0)
 .D PAT(ECXDFN,ECXDATE)
"RTN","ECXMTL",33,0)
 .S (ECXPRCLS,ECPRNPI,ECXDIV,ECXPDIV)="" I ECXPRV D PROV(.ECXPRV,ECXDATE)
"RTN","ECXMTL",34,0)
 .S ECXDSSI=""
"RTN","ECXMTL",35,0)
 .I ECXLOGIC>2003 D
"RTN","ECXMTL",36,0)
 ..I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXMTL",37,0)
 .;
"RTN","ECXMTL",38,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXMTL",39,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXMTL",40,0)
 .;
"RTN","ECXMTL",41,0)
 .;- set national patient record flag if exist
"RTN","ECXMTL",42,0)
 .D NPRF^ECXUTL5
"RTN","ECXMTL",43,0)
 .;
"RTN","ECXMTL",44,0)
 .;- If no encounter number don't file record
"RTN","ECXMTL",45,0)
 .S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXMTL",46,0)
 .S ECD=ECXDATE,ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXMTL",47,0)
 .;adjust scale name & scale number
"RTN","ECXMTL",48,0)
 .S ECXSCNAM=$E(ECXSCNAM,1,10)
"RTN","ECXMTL",49,0)
 .I ECXSCNUM]"",ECXSCNUM'=+ECXSCNUM S ECXSCNUM=+$E(ECXSCNUM,2,99)
"RTN","ECXMTL",50,0)
 .N ECXDEPT S ECXDEPT="" ;dss department use postponed S ECXDEPT=$$MTL^ECXDEPT(ECXDIV,ECXSCNAM,ECINST) ;p-46 line added
"RTN","ECXMTL",51,0)
 .;Set division to external value if extract is for FY05 or higher
"RTN","ECXMTL",52,0)
 .D FILE
"RTN","ECXMTL",53,0)
 Q
"RTN","ECXMTL",54,0)
 ;
"RTN","ECXMTL",55,0)
PAT(ECXDFN,ECXDATE) ;determine in/outpatient status, demographics, primary care
"RTN","ECXMTL",56,0)
 N OK
"RTN","ECXMTL",57,0)
 S (ECXADT,ECXPNM,ECXSSN,ECXMPI)=""
"RTN","ECXMTL",58,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;3;5;",.ECXPAT)
"RTN","ECXMTL",59,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMTL",60,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXMTL",61,0)
 ;agent orange status
"RTN","ECXMTL",62,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXMTL",63,0)
 ;- Purple Heart Indicator, Period of Service, Agent Orange Location
"RTN","ECXMTL",64,0)
 S ECXPHI=$G(ECXPAT("PHI")),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL")
"RTN","ECXMTL",65,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXMTL",66,0)
 ;Combat Veteran Status
"RTN","ECXMTL",67,0)
 S X3=$$CVEDT^ECXUTL5(ECXDFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXMTL",68,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXMTL",69,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXMTL",70,0)
 ; - Race and Ethnicity
"RTN","ECXMTL",71,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXMTL",72,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXMTL",73,0)
 ;get primary care data
"RTN","ECXMTL",74,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE),ECPTTM=$P(X,U)
"RTN","ECXMTL",75,0)
 S ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXMTL",76,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXMTL",77,0)
 ;get inpatient data
"RTN","ECXMTL",78,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMTL",79,0)
 S ECXA=$P(X,U),(ECXADT,ECXADMDT)=$P($P(X,U,4),"."),ECXDCDT=$P($P(X,U,6),".")
"RTN","ECXMTL",80,0)
 S ECXWPRV=$P(X,U,7),ECXATT=$P(X,U,8)
"RTN","ECXMTL",81,0)
 S ECWPRNPI=$$NPI^XUSNPI("Individual_ID",ECXWPRV,ECXDATE)
"RTN","ECXMTL",82,0)
 S:+ECWPRNPI'>0 ECWPRNPI="" S ECWPRNPI=$P(ECWPRNPI,U)
"RTN","ECXMTL",83,0)
 S ECATTNPI=$$NPI^XUSNPI("Individual_ID",ECXATT,ECXDATE)
"RTN","ECXMTL",84,0)
 S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXMTL",85,0)
 ;Get ward provider and attending phy person classes
"RTN","ECXMTL",86,0)
 S ECXWPRPC=$P(X,U,11),ECXATTPC=$P(X,U,12)
"RTN","ECXMTL",87,0)
 I ECXADMDT S ECXADMDT=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXMTL",88,0)
 I ECXDCDT S ECXDCDT=$$ECXDATE^ECXUTL(ECXDCDT,ECXYM)
"RTN","ECXMTL",89,0)
 Q
"RTN","ECXMTL",90,0)
 ;
"RTN","ECXMTL",91,0)
PROV(ECXPRV,ECXDATE) ;get provider data
"RTN","ECXMTL",92,0)
 N INST,DGIEN,ARR,DIC,DR,DA,DIQ
"RTN","ECXMTL",93,0)
 S ECXPRCLS=$$PRVCLASS^ECXUTL(ECXPRV,ECXDATE)
"RTN","ECXMTL",94,0)
 S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPRV,ECXDATE)
"RTN","ECXMTL",95,0)
 S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXMTL",96,0)
 ;get division identifier using provider
"RTN","ECXMTL",97,0)
 S (ECXDIV,ECXPDIV)=""
"RTN","ECXMTL",98,0)
 S IEN=0 F  D  Q:'IEN  Q:'INST  Q:ECXDIV
"RTN","ECXMTL",99,0)
 .;get pointer to file #4 from provider record
"RTN","ECXMTL",100,0)
 .I '$D(^VA(200,ECXPRV,0)) Q
"RTN","ECXMTL",101,0)
 .S IEN=$O(^VA(200,ECXPRV,2,IEN))
"RTN","ECXMTL",102,0)
 .Q:'IEN
"RTN","ECXMTL",103,0)
 .S DIC="^VA(200,",DR="16",DA=ECXPRV
"RTN","ECXMTL",104,0)
 .S DR(200.02)=".01",DA(200.02)=IEN,DIQ="ARR",DIQ(0)="I"
"RTN","ECXMTL",105,0)
 .D EN^DIQ1
"RTN","ECXMTL",106,0)
 .S INST=$G(ARR(200.02,IEN,.01,"I"))
"RTN","ECXMTL",107,0)
 .Q:'INST
"RTN","ECXMTL",108,0)
 .;get production division
"RTN","ECXMTL",109,0)
 .S ECXPDIV=$$RADDIV^ECXDEPT(INST) ;p-46 line added
"RTN","ECXMTL",110,0)
 .;get medical center division
"RTN","ECXMTL",111,0)
 .S DGIEN=$O(^DG(40.8,"AD",INST,0)) I DGIEN D
"RTN","ECXMTL",112,0)
 ..S ECXDIV=$P($G(^ECX(727.3,DGIEN,0)),U,2)
"RTN","ECXMTL",113,0)
 S ECXPRV="2"_ECXPRV
"RTN","ECXMTL",114,0)
 Q
"RTN","ECXMTL",115,0)
 ;
"RTN","ECXMTL",116,0)
FILE ;file record in #727.812
"RTN","ECXMTL",117,0)
 ;node0
"RTN","ECXMTL",118,0)
 ;facility^dfn^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXMTL",119,0)
 ;day ECXDATE^division ECXDIV^admit date ECXADMDT^
"RTN","ECXMTL",120,0)
 ;d/c date ECXDCDT^dss id ECXDSSI^pc team ECPTTM^pc provider ECPTPR^
"RTN","ECXMTL",121,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXMTL",122,0)
 ;provider ECXPRV^placeholder^prov person class ECXPRCLS^
"RTN","ECXMTL",123,0)
 ;test name ECXSCNAM(?)^test ien ECXSCNUM(?)^scale number^scale name^
"RTN","ECXMTL",124,0)
 ;test score^scale score^attend phys^ward provider
"RTN","ECXMTL",125,0)
 ;node1
"RTN","ECXMTL",126,0)
 ;mpi^assoc pc provider^placeholder^
"RTN","ECXMTL",127,0)
 ;assoc pc prov person class^asi class^asi special^asi encounter date^
"RTN","ECXMTL",128,0)
 ;purple heart ind.^dom prrtp & saartp ind.^enrollment cat^
"RTN","ECXMTL",129,0)
 ;enrollment stat^enrollment prior^period of serv.^obs. pat ind.^
"RTN","ECXMTL",130,0)
 ;encounter num^agent orange loc^dob^production division^dss
"RTN","ECXMTL",131,0)
 ;department ECXDEPT^head & neck canc. indi.^ethnicity^race1^^
"RTN","ECXMTL",132,0)
 ;enrollment prior ECXPRIOR_enrollment subgroup
"RTN","ECXMTL",133,0)
 ;ECXSBGRP^enrollee user ECXUESTA^division ECXDIV^patient type
"RTN","ECXMTL",134,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXMTL",135,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXMTL",136,0)
 ;attending phy person class ECXATTPC^ward provider person class 
"RTN","ECXMTL",137,0)
 ;ECXWPRPC^^agent orange status ECXAST^asso prov npi ECASNPI^att phy
"RTN","ECXMTL",138,0)
 ;npi ECATTNPI^primary care prov npi ECPTNPI^provider npi ECPRNPI^ward
"RTN","ECXMTL",139,0)
 ;provider npi ECWPRNPI
"RTN","ECXMTL",140,0)
 N DA,DIK,STR
"RTN","ECXMTL",141,0)
 I $P(^ECX(ECFILE,JJ,0),U,21)="ASI" S $P(^ECX(ECFILE,JJ,1),U,7)=ECXDATE
"RTN","ECXMTL",142,0)
 S $P(^ECX(ECFILE,JJ,0),U,6,9)=ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE
"RTN","ECXMTL",143,0)
 S STR=$S(ECXLOGIC<2005:ECXDIV,1:"")_U_ECXADMDT_U_ECXDCDT_U_ECXDSSI_U_ECPTTM_U_ECPTPR_U
"RTN","ECXMTL",144,0)
 S STR=STR_U_ECCLAS,$P(^ECX(ECFILE,JJ,0),U,10,17)=STR,STR=""
"RTN","ECXMTL",145,0)
 S $P(^ECX(ECFILE,JJ,0),U,18,20)=ECXPRV_U_U_ECXPRCLS
"RTN","ECXMTL",146,0)
 S $P(^ECX(ECFILE,JJ,0),U,23,24)=ECXSCNUM_U_ECXSCNAM
"RTN","ECXMTL",147,0)
 S $P(^ECX(ECFILE,JJ,0),U,27,29)=ECXATT_U_ECXWPRV_U
"RTN","ECXMTL",148,0)
 I '$D(^ECX(ECFILE,JJ,1)) S ^ECX(727.812,JJ,1)="^^^^^"
"RTN","ECXMTL",149,0)
 S $P(^ECX(ECFILE,JJ,1),U,1,4)=ECXMPI_U_ECASPR_U_U_ECCLAS2
"RTN","ECXMTL",150,0)
 S STR=ECXPHI_U_ECXDOM_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U
"RTN","ECXMTL",151,0)
 S STR=STR_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXDOB_U_ECXPDIV_U_ECXDEPT_U
"RTN","ECXMTL",152,0)
 S STR=STR_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXMTL",153,0)
 I ECXLOGIC>2004 S STR=STR_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXDIV_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXMTL",154,0)
 I ECXLOGIC>2005 S STR=STR_U_ECXATTPC_U_ECXWPRPC
"RTN","ECXMTL",155,0)
 S $P(^ECX(ECFILE,JJ,1),U,8,22)=STR
"RTN","ECXMTL",156,0)
 I ECXLOGIC>2006 S $P(^ECX(ECFILE,JJ,1),U,34)=ECXAST_U
"RTN","ECXMTL",157,0)
 I ECXLOGIC>2007 S $P(^ECX(ECFILE,JJ,1),U,35)=ECASNPI_U_ECATTNPI_U_ECPTNPI_U D
"RTN","ECXMTL",158,0)
 . S ^ECX(ECFILE,JJ,2)=ECPRNPI_U_ECWPRNPI
"RTN","ECXMTL",159,0)
 S DA=JJ,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMTL",160,0)
 S ECRN=ECRN+1
"RTN","ECXMTL",161,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMTL",162,0)
 Q
"RTN","ECXMTL",163,0)
 ;
"RTN","ECXMTL",164,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMTL",165,0)
 S ECHEAD="MTL"
"RTN","ECXMTL",166,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMTL",167,0)
 Q
"RTN","ECXMTL",168,0)
 ;
"RTN","ECXMTL",169,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXMTL",170,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXMTL",171,0)
 Q
"RTN","ECXNURS")
0^30^B45224625^B43358486
"RTN","ECXNURS",1,0)
ECXNURS ;ALB/JAP,BIR/DMA,PTD-Nursing Extract for DSS ;9/13/10  13:59
"RTN","ECXNURS",2,0)
 ;;3.0;DSS EXTRACTS;**8,14,22,24,33,39,46,71,107,127**;Dec 22, 1997;Build 36
"RTN","ECXNURS",3,0)
BEG ;entry point from option
"RTN","ECXNURS",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNURS",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNURS",6,0)
 Q
"RTN","ECXNURS",7,0)
 ;
"RTN","ECXNURS",8,0)
START ;entry when queued
"RTN","ECXNURS",9,0)
 ;store in ^tmp by patient and date/time
"RTN","ECXNURS",10,0)
 N CNT,INP,FIRSTDAY,LASTDAY
"RTN","ECXNURS",11,0)
 S QFLG=0,CNT=0
"RTN","ECXNURS",12,0)
 K ^TMP("ECX",$J)
"RTN","ECXNURS",13,0)
 S FIRSTDAY=$P(ECSD1,".")+1,LASTDAY=$P(ECED,".")
"RTN","ECXNURS",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXNURS",15,0)
 F  S ECD=$O(^NURSA(214.6,"B",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  D  Q:QFLG
"RTN","ECXNURS",16,0)
 .F  S ECDA=$O(^NURSA(214.6,"B",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXNURS",17,0)
 ..K LOC S DIC=214.6,DIQ(0)="I",DA=ECDA,DIQ="LOC",DR=".01;.02;1;3;4;6;7;8"
"RTN","ECXNURS",18,0)
 ..D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",19,0)
 ..F J=.01,.02,1,3,4,6,7,8 S EC(J)=LOC(214.6,ECDA,J,"I")
"RTN","ECXNURS",20,0)
 ..Q:EC(8)'=""
"RTN","ECXNURS",21,0)
 ..S INP=$$INP^ECXUTL2(EC(.02),EC(.01))
"RTN","ECXNURS",22,0)
 ..;
"RTN","ECXNURS",23,0)
 ..;- Don't create ^TMP record if outpatient and no treat spec
"RTN","ECXNURS",24,0)
 ..Q:$P(INP,U)="O"&($P(INP,U,3)="")
"RTN","ECXNURS",25,0)
 ..; retain latest classification per day per patient
"RTN","ECXNURS",26,0)
 ..S ^TMP("ECX",$J,EC(.02),$P(EC(.01),"."))=EC(1)_U_EC(3)_U_EC(4)_U_EC(6)_U_EC(7)_U_$P(INP,U,1,6)_U_EC(.01)_U_$P(INP,U,10)
"RTN","ECXNURS",27,0)
 ..K LOC(214.6,ECDA),EC,INP
"RTN","ECXNURS",28,0)
 ..S CNT=CNT+1
"RTN","ECXNURS",29,0)
 ..I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",30,0)
 I QFLG K ^TMP("ECX",$J) Q
"RTN","ECXNURS",31,0)
 D RESOLVE
"RTN","ECXNURS",32,0)
 D FILE
"RTN","ECXNURS",33,0)
 K ^TMP("ECX",$J)
"RTN","ECXNURS",34,0)
 ;
"RTN","ECXNURS",35,0)
RESOLVE ;process ^tmp by patient
"RTN","ECXNURS",36,0)
 N DFN,TM,ECD,ECDPREV,ECDNEW,OLDWARD,NEWWARD,NEWDT
"RTN","ECXNURS",37,0)
 S DFN=0
"RTN","ECXNURS",38,0)
 F  S DFN=$O(^TMP("ECX",$J,DFN)) S ECD=0 Q:'DFN  D
"RTN","ECXNURS",39,0)
 .;remove any classifications for day of discharge
"RTN","ECXNURS",40,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD  D
"RTN","ECXNURS",41,0)
 ..I ECD=$P($P(^TMP("ECX",$J,DFN,ECD),U,11),".") K ^TMP("ECX",$J,DFN,ECD)
"RTN","ECXNURS",42,0)
 .;proceed only if ^tmp remains
"RTN","ECXNURS",43,0)
 .Q:'$D(^TMP("ECX",$J,DFN))
"RTN","ECXNURS",44,0)
 .;proceed with fill-in only if processing more than 3 days' data
"RTN","ECXNURS",45,0)
 .Q:LASTDAY<(FIRSTDAY+2)
"RTN","ECXNURS",46,0)
 .;fill-in records for any missing days per inpatient episode
"RTN","ECXNURS",47,0)
 .K TM S ECD=0
"RTN","ECXNURS",48,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD   D
"RTN","ECXNURS",49,0)
 ..S TM(ECD)=$P(^TMP("ECX",$J,DFN,ECD),U,9)
"RTN","ECXNURS",50,0)
 .S (ECD,ECDPREV)=0
"RTN","ECXNURS",51,0)
 .F  S ECD=$O(TM(ECD)) Q:'ECD  D
"RTN","ECXNURS",52,0)
 ..I ECDPREV=0 S ECDPREV=ECD Q
"RTN","ECXNURS",53,0)
 ..I (ECD-ECDPREV)>1,+TM(ECD)=+TM(ECDPREV) D
"RTN","ECXNURS",54,0)
 ...F ECDNEW=ECDPREV+1:1:ECD-1 S ^TMP("ECX",$J,DFN,ECDNEW)=^TMP("ECX",$J,DFN,ECDPREV) D
"RTN","ECXNURS",55,0)
 ....S NEWWARD="",OLDWARD=$P(^TMP("ECX",$J,DFN,ECDPREV),U,10)
"RTN","ECXNURS",56,0)
 ....D NEWWARD(ECDNEW,OLDWARD,.NEWWARD)
"RTN","ECXNURS",57,0)
 ....Q:'NEWWARD
"RTN","ECXNURS",58,0)
 ....S $P(^TMP("ECX",$J,DFN,ECDNEW),U,4)=$P(NEWWARD,U,1)
"RTN","ECXNURS",59,0)
 ....S $P(^TMP("ECX",$J,DFN,ECDNEW),U,5)=$P(NEWWARD,U,2)
"RTN","ECXNURS",60,0)
 ..S ECDPREV=ECD
"RTN","ECXNURS",61,0)
 .;fill-in to end of extract date range
"RTN","ECXNURS",62,0)
 .K TM S ECD=0
"RTN","ECXNURS",63,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD   D
"RTN","ECXNURS",64,0)
 ..S TM(ECD)=$P(^TMP("ECX",$J,DFN,ECD),U,11)
"RTN","ECXNURS",65,0)
 .S ECD=$O(TM(""),-1),DCDT=+TM(ECD)
"RTN","ECXNURS",66,0)
 .;if last day in date range is after last classification date
"RTN","ECXNURS",67,0)
 .I LASTDAY>ECD D
"RTN","ECXNURS",68,0)
 ..;if there is no d/c date
"RTN","ECXNURS",69,0)
 ..I DCDT=0 F ECDNEW=ECD+1:1:LASTDAY D  Q
"RTN","ECXNURS",70,0)
 ...I '$D(^TMP("ECX",$J,DFN,ECDNEW)) S ^TMP("ECX",$J,DFN,ECDNEW)=^TMP("ECX",$J,DFN,ECD)
"RTN","ECXNURS",71,0)
 ...S NEWWARD="",OLDWARD=$P(^TMP("ECX",$J,DFN,ECD),U,10)
"RTN","ECXNURS",72,0)
 ...D NEWWARD(ECDNEW,OLDWARD,.NEWWARD)
"RTN","ECXNURS",73,0)
 ...Q:'NEWWARD
"RTN","ECXNURS",74,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,4)=$P(NEWWARD,U,1)
"RTN","ECXNURS",75,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,5)=$P(NEWWARD,U,2)
"RTN","ECXNURS",76,0)
 ..;if d/c date is after last classification date
"RTN","ECXNURS",77,0)
 ..I $P(DCDT,".")>ECD S NEWDT=$S($P(DCDT,".")>LASTDAY:LASTDAY,1:($P(DCDT,".")-1)) F ECDNEW=ECD+1:1:NEWDT D  Q
"RTN","ECXNURS",78,0)
 ...I '$D(^TMP("ECX",$J,DFN,ECDNEW)) S ^TMP("ECX",$J,DFN,ECDNEW)=^TMP("ECX",$J,DFN,ECD)
"RTN","ECXNURS",79,0)
 ...S NEWWARD="",OLDWARD=$P(^TMP("ECX",$J,DFN,ECD),U,10)
"RTN","ECXNURS",80,0)
 ...D NEWWARD(ECDNEW,OLDWARD,.NEWWARD)
"RTN","ECXNURS",81,0)
 ...Q:'NEWWARD
"RTN","ECXNURS",82,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,4)=$P(NEWWARD,U,1)
"RTN","ECXNURS",83,0)
 ...S $P(^TMP("ECX",$J,DFN,ECDNEW),U,5)=$P(NEWWARD,U,2)
"RTN","ECXNURS",84,0)
 Q
"RTN","ECXNURS",85,0)
 ;
"RTN","ECXNURS",86,0)
NEWWARD(ECDNEW,OLDWARD,NEWWARD) ;get new nursing location
"RTN","ECXNURS",87,0)
 ; input  ECDNEW  = date of care
"RTN","ECXNURS",88,0)
 ;        OLDWARD = pointer to file #42, previous mas ward
"RTN","ECXNURS",89,0)
 ;        NEWWARD = null
"RTN","ECXNURS",90,0)
 ; output NEWWARD = new nursing location^new nursing bedsection
"RTN","ECXNURS",91,0)
 ;                  OR "^", if new ward same as previous ward or
"RTN","ECXNURS",92,0)
 ;could not be resolved
"RTN","ECXNURS",93,0)
 ;if the new ward is mapped to multiple nursing locations, get the
"RTN","ECXNURS",94,0)
 ;first active location
"RTN","ECXNURS",95,0)
 N NEWW,NEWLOC,NEWSEC,OUT,DA,DR,DIC,DIQ,LOC,INP
"RTN","ECXNURS",96,0)
 S INP=$$INP^ECXUTL2(DFN,ECDNEW)
"RTN","ECXNURS",97,0)
 S NEWWARD=$P(INP,U,5)
"RTN","ECXNURS",98,0)
 I NEWWARD=OLDWARD S NEWWARD=""
"RTN","ECXNURS",99,0)
 Q:'NEWWARD
"RTN","ECXNURS",100,0)
 S (NEWW,NEWW2,NEWLOC,NEWSEC)="",OUT=0
"RTN","ECXNURS",101,0)
 F  S NEWW=$O(^NURSF(211.4,"C",NEWWARD,NEWW)) Q:OUT  Q:+NEWW<1  D
"RTN","ECXNURS",102,0)
 .S DIC=211.4,DIQ(0)="I",DIQ="LOC",DA=NEWW,DR="1;1.5"
"RTN","ECXNURS",103,0)
 .D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",104,0)
 .Q:LOC(211.4,NEWW,1,"I")="I"
"RTN","ECXNURS",105,0)
 .Q:LOC(211.4,NEWW,1.5,"I")="I"
"RTN","ECXNURS",106,0)
 .S JJ=$O(^NURSF(211.4,"C",NEWWARD,NEWW,""))
"RTN","ECXNURS",107,0)
 .S DIC=211.4,DIQ(0)="I",DIQ="LOC",DA=NEWW,DA(211.41)=JJ,DR="2",DR(211.41)=".01;1"
"RTN","ECXNURS",108,0)
 .D EN^DIQ1 K DIQ,DIC,DA,DR
"RTN","ECXNURS",109,0)
 .Q:NEWWARD'=LOC(211.41,JJ,.01,"I")
"RTN","ECXNURS",110,0)
 .S NEWLOC=NEWW,NEWSEC=LOC(211.41,JJ,1,"I"),OUT=1
"RTN","ECXNURS",111,0)
 I (NEWLOC="")!(NEWSEC="") S NEWWARD="" Q
"RTN","ECXNURS",112,0)
 S NEWWARD=NEWLOC_U_NEWSEC
"RTN","ECXNURS",113,0)
 Q
"RTN","ECXNURS",114,0)
 ;
"RTN","ECXNURS",115,0)
FILE ;file extract records
"RTN","ECXNURS",116,0)
 ;node0
"RTN","ECXNURS",117,0)
 ;inst^dfn^ssn^name^in/out (ECXA)^date^acuity level(category)^entered by^
"RTN","ECXNURS",118,0)
 ;classifier^nurs location^nursing bed section^mov #^treat spec^adm date^
"RTN","ECXNURS",119,0)
 ;adm time
"RTN","ECXNURS",120,0)
 ;node1
"RTN","ECXNURS",121,0)
 ;mpi^dss dept ECXDSSD^dom (ECXDOM)^observ pat ind (ECXOBS)^dss
"RTN","ECXNURS",122,0)
 ;product ECXDSSP
"RTN","ECXNURS",123,0)
 N DA,DIK
"RTN","ECXNURS",124,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXNURS",125,0)
 S DFN=0,QFLG=0
"RTN","ECXNURS",126,0)
 F  S DFN=$O(^TMP("ECX",$J,DFN)) Q:'DFN  D  Q:QFLG
"RTN","ECXNURS",127,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(DFN,DT,"1;",.ECXPAT)
"RTN","ECXNURS",128,0)
 .Q:'OK
"RTN","ECXNURS",129,0)
 .S ECXDFN=DFN,ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN")
"RTN","ECXNURS",130,0)
 .S ECXMPI=ECXPAT("MPI"),ECD=0
"RTN","ECXNURS",131,0)
 .;file patient's classification data
"RTN","ECXNURS",132,0)
 .F  S ECD=$O(^TMP("ECX",$J,DFN,ECD)) Q:'ECD   D
"RTN","ECXNURS",133,0)
 ..S ECC=$P(^TMP("ECX",$J,DFN,ECD),U,1,5),ECMN=$P(^(ECD),U,7),ECXA=$P(^(ECD),U,6)
"RTN","ECXNURS",134,0)
 ..S ECTS=$P(^(ECD),U,8),ECA=$P(^(ECD),U,9),ECXDOM=$P(^(ECD),U,13)
"RTN","ECXNURS",135,0)
 ..S ECXACU=$P(ECC,U,1),ECXEB=$P(ECC,U,2),ECXCLS=$P(ECC,U,3)
"RTN","ECXNURS",136,0)
 ..S ECXNLOC=$P(ECC,U,4),ECXNBED=$P(ECC,U,5)
"RTN","ECXNURS",137,0)
 ..;
"RTN","ECXNURS",138,0)
 ..;Get DSS Department and Product
"RTN","ECXNURS",139,0)
 ..S (ECXDSSD,ECXDSSP)=""
"RTN","ECXNURS",140,0)
 ..;I ECXLOGIC>2004 S X=$$NUR^ECXDEPT(ECD)
"RTN","ECXNURS",141,0)
 ..;
"RTN","ECXNURS",142,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXNURS",143,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECTS)
"RTN","ECXNURS",144,0)
 ..;
"RTN","ECXNURS",145,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXNURS",146,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXNURS",147,0)
 ..;- Don't file record if outpatient and NOT an observation patient
"RTN","ECXNURS",148,0)
 ..Q:ECXA="O"&(ECXOBS="NO")
"RTN","ECXNURS",149,0)
 ..;
"RTN","ECXNURS",150,0)
 ..;- If no encounter number don't file record
"RTN","ECXNURS",151,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,ECD,ECTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXNURS",152,0)
 ..S EC7=EC7+1
"RTN","ECXNURS",153,0)
 ..S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXNURS",154,0)
 ..S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U
"RTN","ECXNURS",155,0)
 ..S ECODE=ECODE_ECXACU_U_ECXEB_U_ECXCLS_U_ECXNLOC_U_ECXNBED_U
"RTN","ECXNURS",156,0)
 ..;convert specialties to PTF Codes for transmission
"RTN","ECXNURS",157,0)
 .. N ECXDATA
"RTN","ECXNURS",158,0)
 .. S ECXDATA=$$TSDATA^DGACT(42.4,+ECTS,.ECXDATA)
"RTN","ECXNURS",159,0)
 .. S ECTS=$G(ECXDATA(7))
"RTN","ECXNURS",160,0)
 ..;done
"RTN","ECXNURS",161,0)
 ..S ECODE=ECODE_ECMN_U_ECTS_U_$$ECXDATE^ECXUTL(ECA,ECXYM)_U
"RTN","ECXNURS",162,0)
 ..S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U
"RTN","ECXNURS",163,0)
 ..S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXNURS",164,0)
 ..S ECODE1=ECODE1_ECINST_U
"RTN","ECXNURS",165,0)
 ..I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP
"RTN","ECXNURS",166,0)
 ..I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 ADDED PATCAT
"RTN","ECXNURS",167,0)
 ..S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXNURS",168,0)
 ..S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXNURS",169,0)
 ..I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXNURS",170,0)
 Q
"RTN","ECXNURS",171,0)
 ;
"RTN","ECXNURS",172,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXNURS",173,0)
 S ECHEAD="NUR"
"RTN","ECXNURS",174,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNURS",175,0)
 Q
"RTN","ECXNURS",176,0)
 ;
"RTN","ECXNURS",177,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXNURS",178,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXNUT")
0^13^B34364680^B32372950
"RTN","ECXNUT",1,0)
ECXNUT ;ALB/JRC Nutrition DSS Extract ; 10/31/08 1:57pm
"RTN","ECXNUT",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,112,120,127**;Dec 22, 1997;Build 36
"RTN","ECXNUT",3,0)
BEG ;entry point from option
"RTN","ECXNUT",4,0)
 N EC23,EC7,ECED,ECFILE,ECGRP,ECHEAD,ECINST,ECPACK,ECPIECE,ECRN,ECRTN,ECSD1,ECVER,ECXYM
"RTN","ECXNUT",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNUT",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNUT",7,0)
 Q
"RTN","ECXNUT",8,0)
 ;
"RTN","ECXNUT",9,0)
START ; start package specific extract
"RTN","ECXNUT",10,0)
 ;Init variables
"RTN","ECXNUT",11,0)
 N ECSD,ARRAY
"RTN","ECXNUT",12,0)
 S ECED=ECED+.3,ECSD=ECSD1,ARRAY="^TMP($J,""FH"")"
"RTN","ECXNUT",13,0)
 K @ARRAY
"RTN","ECXNUT",14,0)
 ;
"RTN","ECXNUT",15,0)
 ;Call n&fs api and store in ^TMP($J,"FH" global
"RTN","ECXNUT",16,0)
 D DATA^FHDSSAPI(ECSD,ECED)
"RTN","ECXNUT",17,0)
 ;
"RTN","ECXNUT",18,0)
 ;Get n&fs records from ^TMP($J,"FH" global and file
"RTN","ECXNUT",19,0)
 D GETMEALS^ECXNUT1
"RTN","ECXNUT",20,0)
 ;
"RTN","ECXNUT",21,0)
 ;kill ^tmp global
"RTN","ECXNUT",22,0)
 K @ARRAY
"RTN","ECXNUT",23,0)
 ;
"RTN","ECXNUT",24,0)
 Q
"RTN","ECXNUT",25,0)
 ;
"RTN","ECXNUT",26,0)
GET ;gather extract data
"RTN","ECXNUT",27,0)
 ;Init variables
"RTN","ECXNUT",28,0)
 N ECXORDPC,ECXSSN,ECXPNM,ECXSEX,ECXDOB,ECXMPI,ECXRC1,ECXETH,ECXVET,ECXENRL,ECXELIG,ECXMST,ECXPST,ECXPLOC,ECXPHI,ECXMNS,ECXSTATE,ECXCNTY,ECXZIP,ECXPOS,ECXAST,ECXAOL,ECXRST,ECXEST,ECXTM,ECXDATE,ECXMN,ECXSPC
"RTN","ECXNUT",29,0)
 N ECXADMDT,ECXWRD,ECXFAC,ECXPRV,ECXPRNPI,ECXATT,ECXATNPI,ECXDOM,ECXATTPC,ECXPRVPC,ECXPDIV,ECXCBOC,ECPTPR,ECCLASS,ECPTTM,ECXOBS,ECXHNCI,ECXNPRFI,ECXERI,ECXENC,ECPAT,ECXERR,ADM,W,X,ECXCAT,ECXCVE,ECXPRIOR,ECXPTYPE,ECXSTAT,ECXUESTA,ECXA,ECORNPI
"RTN","ECXNUT",30,0)
 N ECXOEF,ECXOEFDT,ECXCNTRY
"RTN","ECXNUT",31,0)
 ;
"RTN","ECXNUT",32,0)
 ;- Prefix ordering pro with a 2 and get person class
"RTN","ECXNUT",33,0)
 S ECXORDPC=$$PRVCLASS^ECXUTL(+ECXORDPH,DATE)
"RTN","ECXNUT",34,0)
 S ECORNPI=$$NPI^XUSNPI("Individual_ID",+ECXORDPH,DATE)
"RTN","ECXNUT",35,0)
 S:+ECORNPI'>0 ECORNPI="" S ECORNPI=$P(ECORNPI,U)
"RTN","ECXNUT",36,0)
 S ECXORDPH=$S(ECXORDPH:2_ECXORDPH,1:"")
"RTN","ECXNUT",37,0)
 ;
"RTN","ECXNUT",38,0)
 ;set patient file (#2) dfn and get patient demographics
"RTN","ECXNUT",39,0)
 S ECXDFN=$P($G(^TMP($J,"FH","ZN",FHDFN)),U,3)
"RTN","ECXNUT",40,0)
 S ECXERR=0 D PAT(ECXDFN)
"RTN","ECXNUT",41,0)
 Q:ECXERR
"RTN","ECXNUT",42,0)
 ;Set demographic variables
"RTN","ECXNUT",43,0)
 S ECXSSN=ECPAT("SSN"),ECXPNM=ECPAT("NAME"),ECXSEX=ECPAT("SEX"),ECXDOB=ECPAT("DOB"),ECXMPI=ECPAT("MPI"),ECXRC1=ECPAT("RACE1"),ECXETH=ECPAT("ETHNIC"),ECXVET=ECPAT("VET"),ECXENRL=ECPAT("ENROLL LOC"),ECXELIG=ECPAT("ELIG")
"RTN","ECXNUT",44,0)
 S ECXMST=ECPAT("MST STAT"),ECXPST=ECPAT("POW STAT"),ECXPLOC=ECPAT("POW LOC"),ECXPHI=ECPAT("PHI"),ECXMNS=ECPAT("MEANS"),ECXSTATE=ECPAT("STATE"),ECXCNTY=ECPAT("COUNTY"),ECXZIP=ECPAT("ZIP")
"RTN","ECXNUT",45,0)
 S ECXCNTRY=ECPAT("COUNTRY")
"RTN","ECXNUT",46,0)
 S ECXPOS=ECPAT("POS"),ECXAST=ECPAT("AO STAT"),ECXAOL=ECPAT("AOL"),ECXRST=ECPAT("IR STAT"),ECXEST=ECPAT("EC STAT")
"RTN","ECXNUT",47,0)
 ;
"RTN","ECXNUT",48,0)
 ;Get oef/oif data
"RTN","ECXNUT",49,0)
 S ECXOEF=ECPAT("ECXOEF")
"RTN","ECXNUT",50,0)
 S ECXOEFDT=ECPAT("ECXOEFDT")
"RTN","ECXNUT",51,0)
 ;
"RTN","ECXNUT",52,0)
 ;Get enrollment status
"RTN","ECXNUT",53,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXNUT",54,0)
 ;
"RTN","ECXNUT",55,0)
 S ECXTM=$$ECXTIME^ECXUTL(DATE)
"RTN","ECXNUT",56,0)
 S ECXDATE=$$ECXDATE^ECXUTL(+DATE,ECXYM)
"RTN","ECXNUT",57,0)
 ;
"RTN","ECXNUT",58,0)
 ;- Use movement record date & time
"RTN","ECXNUT",59,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,DATE),ECXA=$P(ADM,U)
"RTN","ECXNUT",60,0)
 I $G(P)="INP",$G(ECXA)'="I" Q
"RTN","ECXNUT",61,0)
 S ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3),ECXADMDT=$P(ADM,U,4)
"RTN","ECXNUT",62,0)
 S W=$P(ADM,U,9),ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2)
"RTN","ECXNUT",63,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXNUT",64,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXNUT",65,0)
 ;
"RTN","ECXNUT",66,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXNUT",67,0)
 S ECXCBOC=$$CBOC^ECXSCX2(+ECXFAC) ;Get cboc facility
"RTN","ECXNUT",68,0)
 ;
"RTN","ECXNUT",69,0)
 ;- Get primary care data
"RTN","ECXNUT",70,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,DATE)
"RTN","ECXNUT",71,0)
 S ECPTPR=$P(X,U,2),ECCLASS=$P(X,U,3),ECPTTM=$P(X,U),ECPTNPI=$P(X,U,4)
"RTN","ECXNUT",72,0)
 ;
"RTN","ECXNUT",73,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXNUT",74,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXNUT",75,0)
 ;
"RTN","ECXNUT",76,0)
 ;- Get head and neck cancer indicator
"RTN","ECXNUT",77,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXNUT",78,0)
 ;
"RTN","ECXNUT",79,0)
 ;- Get shad indicator
"RTN","ECXNUT",80,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXNUT",81,0)
 ;
"RTN","ECXNUT",82,0)
 ;- Get national patient record flag indicator
"RTN","ECXNUT",83,0)
 N ECXNPRFI D NPRF^ECXUTL5
"RTN","ECXNUT",84,0)
 ;
"RTN","ECXNUT",85,0)
 ;- National response indicator
"RTN","ECXNUT",86,0)
 S ECXERI=$$EMGRES^DGUTL(ECXDFN)
"RTN","ECXNUT",87,0)
 ;  
"RTN","ECXNUT",88,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXNUT",89,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXNUT",90,0)
 ;
"RTN","ECXNUT",91,0)
 ;- If null encounter number, don't file record
"RTN","ECXNUT",92,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,DATE,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXNUT",93,0)
 D:ECXENC'="" FILE
"RTN","ECXNUT",94,0)
 Q
"RTN","ECXNUT",95,0)
 ;
"RTN","ECXNUT",96,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXNUT",97,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXNUT",98,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXNUT",99,0)
 ;          ECPAT("SSN")
"RTN","ECXNUT",100,0)
 ;          ECPAT("NAME")
"RTN","ECXNUT",101,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXNUT",102,0)
 ;                            1=error condition
"RTN","ECXNUT",103,0)
 N X,OK
"RTN","ECXNUT",104,0)
 ;get data
"RTN","ECXNUT",105,0)
 S ECXERR=0
"RTN","ECXNUT",106,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;2;3;5",.ECPAT)
"RTN","ECXNUT",107,0)
 I 'OK S ECXERR=1
"RTN","ECXNUT",108,0)
 Q ECXERR
"RTN","ECXNUT",109,0)
 ;
"RTN","ECXNUT",110,0)
FILE ;file the n&fs extract record
"RTN","ECXNUT",111,0)
 ;node
"RTN","ECXNUT",112,0)
 ;facility^dfn^ssn^name^in/out^day^time^treating specialty^
"RTN","ECXNUT",113,0)
 ;ordering provider^ordering provider person class^primary 
"RTN","ECXNUT",114,0)
 ;care provider^primary person class^primary care team^mpi^dob^sex^
"RTN","ECXNUT",115,0)
 ;race 1^ethnicity^veteran^enrollment status^enrollment location^
"RTN","ECXNUT",116,0)
 ;enrollment category^enrollment priority^eligibility^period of
"RTN","ECXNUT",117,0)
 ;service^agent orange status^agent orange location^radiation status
"RTN","ECXNUT",118,0)
 ;^environmental contaminants^mst status^head & neck cancer indicator
"RTN","ECXNUT",119,0)
 ;pow status^pow location^purple heart indicator^means test^state code
"RTN","ECXNUT",120,0)
 ;^county code^zip+4^observation patient indicator^rrtp,prrtp and
"RTN","ECXNUT",121,0)
 ;saartp indicator^encounter number^patient division^food production
"RTN","ECXNUT",122,0)
 ;division^delivery division^product feeder key^food production
"RTN","ECXNUT",123,0)
 ;facility^delivery location type^delivery feeder location^quantity^
"RTN","ECXNUT",124,0)
 ;cboc^status^user enrollee^patient type^cv status eligibility^
"RTN","ECXNUT",125,0)
 ;national patient record flag^emergency response indicator^admission
"RTN","ECXNUT",126,0)
 ;date^oef/oif ECXOEF^oef/oif return date ECXOEFDT^ordering provider
"RTN","ECXNUT",127,0)
 ;npi ECORNPI^primary care provider npi ECPTNPI^country ECXCNTRY^
"RTN","ECXNUT",128,0)
 ;shad indicator ECXSHADI
"RTN","ECXNUT",129,0)
 ;patient category ECXPATCAT
"RTN","ECXNUT",130,0)
 ;
"RTN","ECXNUT",131,0)
 N DA,DIK,ECODE,ECODE1
"RTN","ECXNUT",132,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXNUT",133,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXNUT",134,0)
 ;
"RTN","ECXNUT",135,0)
 ;convert specialty to PTF Code
"RTN","ECXNUT",136,0)
 ;
"RTN","ECXNUT",137,0)
 N ECXDATA
"RTN","ECXNUT",138,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXNUT",139,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXNUT",140,0)
 ;
"RTN","ECXNUT",141,0)
 S ECODE=ECODE_ECXDATE_U_ECXTM_U_ECXSPC_U_ECXORDPH_U_ECXORDPC_U
"RTN","ECXNUT",142,0)
 S ECODE=ECODE_ECPTPR_U_ECCLASS_U_ECPTTM_U_ECXMPI_U_ECXDOB_U_ECXSEX_U
"RTN","ECXNUT",143,0)
 S ECODE=ECODE_ECXRC1_U_ECXETH_U_ECXVET_U_ECXSTAT_U_ECXENRL_U_ECXCAT_U
"RTN","ECXNUT",144,0)
 S ECODE=ECODE_ECXPRIOR_U_ECXELIG_U_ECXPOS_U_ECXAST_U_ECXAOL_U_ECXRST
"RTN","ECXNUT",145,0)
 S ECODE=ECODE_U_ECXEST_U_ECXMST_U_ECXHNCI_U_ECXPST_U_ECXPLOC_U_ECXPHI
"RTN","ECXNUT",146,0)
 S ECODE=ECODE_U_ECXMNS_U_ECXSTATE_U_ECXCNTY_U
"RTN","ECXNUT",147,0)
 S ECODE1=ECXZIP_U_ECXOBS_U_ECXDOM_U_ECXENC_U_ECXPDIV_U_ECXFPD_U
"RTN","ECXNUT",148,0)
 S ECODE1=ECODE1_ECXFDD_U_ECXKEY_U_ECXFPF_U_ECXDLT_U_ECXDFL_U_ECXQTY_U
"RTN","ECXNUT",149,0)
 S ECODE1=ECODE1_ECXCBOC_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXNPRFI_U
"RTN","ECXNUT",150,0)
 S ECODE1=ECODE1_ECXERI_U_$S(ECXADMDT:$$ECXDATE^ECXUTL(ECXADMDT,ECXYM),1:"")
"RTN","ECXNUT",151,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECXOEF_U_ECXOEFDT_U_$G(ECXTFU)_U_ECORNPI_U_ECPTNPI
"RTN","ECXNUT",152,0)
 I ECXLOGIC>2009 S ECODE1=ECODE1_U_ECXCNTRY
"RTN","ECXNUT",153,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXSHADI_U_ECXPATCAT
"RTN","ECXNUT",154,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXNUT",155,0)
 S ECRN=ECRN+1
"RTN","ECXNUT",156,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXNUT",157,0)
 Q
"RTN","ECXNUT",158,0)
 ;
"RTN","ECXNUT",159,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXNUT",160,0)
 S ECHEAD="NUT"
"RTN","ECXNUT",161,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNUT",162,0)
 Q
"RTN","ECXOPRX")
0^18^B56378076^B53251147
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;9/13/10  15:38
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112,120,127**;Dec 22, 1997;Build 36
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX
"RTN","ECXOPRX",11,0)
 S QFLG=0
"RTN","ECXOPRX",12,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",15,0)
 ;before V6
"RTN","ECXOPRX",16,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 Q:QFLG
"RTN","ECXOPRX",26,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",27,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",28,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",29,0)
 Q
"RTN","ECXOPRX",30,0)
 ;
"RTN","ECXOPRX",31,0)
STUFF ;get data
"RTN","ECXOPRX",32,0)
 N ECXPHA
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA="" Q:'ECDATA
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",39,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",40,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",41,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",42,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",43,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",45,0)
 ;get classification data
"RTN","ECXOPRX",46,0)
 S ECXCLS=$G(^PSRX(ECRX,"IBQ")),ECXMIL=$P(ECXCLS,U,2),ECXAO=$P(ECXCLS,U,3),ECXIR=$P(ECXCLS,U,4),ECXECE=$P(ECXCLS,U,5),ECXHNC=$P(ECXCLS,U,6),ECXSHAD=$P(ECXCLS,U,8)
"RTN","ECXOPRX",47,0)
 F X="ECXMIL","ECXAO","ECXIR","ECXECE","ECXHNC","ECXSHAD" S @X=$S(@X:"Y",@X=0:"N",1:"")
"RTN","ECXOPRX",48,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",49,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",50,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXOPRX",51,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXOPRX",52,0)
 ;get patient specific data
"RTN","ECXOPRX",53,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",54,0)
 I 'ECRFL D
"RTN","ECXOPRX",55,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",56,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",57,0)
 I ECRFL D
"RTN","ECXOPRX",58,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",59,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",60,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",61,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",62,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)["I",ECINV=$S(ECINV:"I",1:""),ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",63,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",64,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",65,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",66,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",67,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",68,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",69,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",70,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",71,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",72,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2),ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",73,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",74,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",75,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",76,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",77,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",78,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",79,0)
 S ECXSCRX=$$SCRX^ECXUTL5(ECRX) ;Service connected rx
"RTN","ECXOPRX",80,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",81,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",82,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",83,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",84,0)
 .. N TMP
"RTN","ECXOPRX",85,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",86,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",87,0)
 .. I (ECXLOGIC>2009),(ECXOBS="YES") S ECXOBS=""
"RTN","ECXOPRX",88,0)
 .. S ECXA="O"
"RTN","ECXOPRX",89,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",90,0)
 Q
"RTN","ECXOPRX",91,0)
 ;
"RTN","ECXOPRX",92,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",93,0)
 N OK,X,PT
"RTN","ECXOPRX",94,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",95,0)
 ;get patient data if saved
"RTN","ECXOPRX",96,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",97,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",98,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",99,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",100,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",101,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",102,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXOPRX",103,0)
 .S ECXPATCAT=$P(PT1,U,6),ECXSHAD=$P(PT1,U,7),ECXSHADI=$P(PT1,U,8)
"RTN","ECXOPRX",104,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",105,0)
 ;set patient data
"RTN","ECXOPRX",106,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",107,0)
 .K ECXPAT
"RTN","ECXOPRX",108,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",109,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",110,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",111,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",112,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",113,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXOPRX",114,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",115,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",116,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",117,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",118,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;Proj 112/SHAD Indicator
"RTN","ECXOPRX",119,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",120,0)
 .; OEF/OIF data
"RTN","ECXOPRX",121,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",122,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",123,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",124,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",125,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXPATCAT_U_ECXSHAD_U_ECXSHADI
"RTN","ECXOPRX",126,0)
 ;get inpatient data
"RTN","ECXOPRX",127,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",128,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",129,0)
 ;get primary care data
"RTN","ECXOPRX",130,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",131,0)
 Q
"RTN","ECXOPRX",132,0)
 ;
"RTN","ECXOPRX",133,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",134,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",135,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",136,0)
 Q
"RTN","ECXOPRX",137,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",138,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^19^B9265203^B8589426
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 6/6/07 7:23am
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^shad indicator^qty^cost^encounter shad^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",17,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",18,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",19,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",20,0)
 ;^country ECXCNTRY
"RTN","ECXOPRX1",21,0)
 N DA,DIK
"RTN","ECXOPRX1",22,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",23,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",24,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",25,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_$S(ECXLOGIC>2010:ECXSHADI,1:"")_U_ECQTY_U
"RTN","ECXOPRX1",26,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",27,0)
 N ECXDATA
"RTN","ECXOPRX1",28,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",29,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",30,0)
 ;done
"RTN","ECXOPRX1",31,0)
 S ECODE=ECODE_ECXCOST_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",32,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",33,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",34,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",35,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",36,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",37,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",42,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",43,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",44,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",45,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",46,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",48,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXOPRX1",49,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",50,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",51,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",52,0)
 Q
"RTN","ECXPIVD2")
0^12^B9098930^B8697954
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;9/8/10  15:48
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 ;^country ECXCNTRY
"RTN","ECXPIVD2",19,0)
 N DA,DIK
"RTN","ECXPIVD2",20,0)
 S ECPLACE=""
"RTN","ECXPIVD2",21,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",22,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",23,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",24,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",25,0)
 N ECXDATA
"RTN","ECXPIVD2",26,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",27,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",28,0)
 ;done
"RTN","ECXPIVD2",29,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",30,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",31,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",32,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",33,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",34,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",35,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",37,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",38,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",39,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",40,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",41,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",42,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",43,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",44,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPIVD2",45,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXPIVD2",46,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",47,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",48,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",49,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",50,0)
 Q
"RTN","ECXPIVDN")
0^11^B52360501^B49936544
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 10/31/07 1:38pm
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112,120,127**;Dec 22, 1997;Build 36
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA
"RTN","ECXPIVDN",10,0)
 S QFLG=0
"RTN","ECXPIVDN",11,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",14,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",15,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",16,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",17,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",18,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",19,0)
 .Q:ECXERR
"RTN","ECXPIVDN",20,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",21,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",22,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",23,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",24,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",25,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",26,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",27,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",28,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",29,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",30,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",31,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",32,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",33,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",34,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",35,0)
 Q
"RTN","ECXPIVDN",36,0)
STUFF ;get data
"RTN","ECXPIVDN",37,0)
 N ECORDST
"RTN","ECXPIVDN",38,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",39,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",40,0)
 I ECXA="O" D
"RTN","ECXPIVDN",41,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",42,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",43,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",44,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",45,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",46,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",47,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",48,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",49,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",50,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",51,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",52,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",53,0)
 ..I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",54,0)
 S ECINV=$P(ECXPHA,U,4),ECINV=$S(ECINV["I":"I",1:""),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",55,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",56,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",57,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",58,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",59,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",60,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",61,0)
 N ECXUSRTN
"RTN","ECXPIVDN",62,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",63,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",64,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",65,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",66,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",67,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",68,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",69,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",70,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",71,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",72,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",73,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",74,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",75,0)
 .I ECXOBS="NO" S ECORDST="PHA"
"RTN","ECXPIVDN",76,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",77,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",78,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",79,0)
 ;get BCMA data
"RTN","ECXPIVDN",80,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",81,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",82,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",83,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",84,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",85,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",86,0)
 Q
"RTN","ECXPIVDN",87,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",88,0)
 N X
"RTN","ECXPIVDN",89,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",90,0)
 ;get patient data if saved
"RTN","ECXPIVDN",91,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",92,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",93,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",94,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",95,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",96,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",97,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXPIVDN",98,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7)
"RTN","ECXPIVDN",99,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",100,0)
 ;set patient data
"RTN","ECXPIVDN",101,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",102,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",103,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",104,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",105,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXPIVDN",106,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",107,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",108,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",109,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",110,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",111,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",112,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",113,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;PROJ 112/SHAD Indicator
"RTN","ECXPIVDN",114,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)  ; PATCH 127, ADD PATCAT CODE 
"RTN","ECXPIVDN",115,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",116,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",117,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",118,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",119,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",120,0)
 .;save for later
"RTN","ECXPIVDN",121,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",122,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",123,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT
"RTN","ECXPIVDN",124,0)
 ;get primary care data
"RTN","ECXPIVDN",125,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",126,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",127,0)
 ;get inpatient data
"RTN","ECXPIVDN",128,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",129,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",130,0)
 Q
"RTN","ECXPIVDN",131,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",132,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",133,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",134,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",135,0)
 S ECVER=7
"RTN","ECXPIVDN",136,0)
 Q
"RTN","ECXPIVDN",137,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",138,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^14^B39196226^B35257665
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;10/5/10  11:09
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",22,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",23,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",24,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",25,0)
 .S ECXDACT=0
"RTN","ECXPRO",26,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 ..;* initialize variables
"RTN","ECXPRO",28,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",29,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",30,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",31,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP)=""
"RTN","ECXPRO",32,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",33,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",34,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",35,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",36,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",37,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",38,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",39,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",40,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",41,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",42,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",43,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",44,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",45,0)
 ..;OEF/OIF data
"RTN","ECXPRO",46,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",47,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",48,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",49,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",50,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",51,0)
 ..;nppd entry date
"RTN","ECXPRO",52,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",53,0)
 ..;
"RTN","ECXPRO",54,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",55,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",56,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",57,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",58,0)
 ..;
"RTN","ECXPRO",59,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",60,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",61,0)
 ..;
"RTN","ECXPRO",62,0)
 ..;get encounter classifications
"RTN","ECXPRO",63,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)=""
"RTN","ECXPRO",64,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",65,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",66,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",67,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",68,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",69,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",70,0)
 ..;
"RTN","ECXPRO",71,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",72,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",73,0)
 ..;
"RTN","ECXPRO",74,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",75,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",76,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",77,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",78,0)
 ..;
"RTN","ECXPRO",79,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",80,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",81,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",82,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",83,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",84,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",85,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",86,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",87,0)
 ;* Send the Exception message
"RTN","ECXPRO",88,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",89,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",90,0)
 .S XMDUZ=.5
"RTN","ECXPRO",91,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",92,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",93,0)
 .D ^XMD
"RTN","ECXPRO",94,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",95,0)
 Q
"RTN","ECXPRO",96,0)
 ;
"RTN","ECXPRO",97,0)
FILE ;file extract record
"RTN","ECXPRO",98,0)
 ;node0
"RTN","ECXPRO",99,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",100,0)
 ;day^feeder location^
"RTN","ECXPRO",101,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",102,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",103,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",104,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",105,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",106,0)
 ;node1
"RTN","ECXPRO",107,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",108,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",109,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",110,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",111,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",112,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",113,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",114,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",115,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",116,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",117,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",118,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",119,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",120,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",121,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",122,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",123,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",124,0)
 ;radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",125,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",126,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXPRO",127,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^shad encounter ECXSHAD^
"RTN","ECXPRO",128,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",129,0)
 ;PATCAT^EXCPATCAT
"RTN","ECXPRO",130,0)
 N DA,DIK
"RTN","ECXPRO",131,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",132,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",133,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",134,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",135,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",136,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",137,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",138,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",139,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",140,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",141,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",142,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",143,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",144,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",145,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",146,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",147,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",148,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",149,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",150,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",151,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",152,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",153,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",154,0)
 Q
"RTN","ECXPRO",155,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",156,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",157,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",158,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",159,0)
 Q
"RTN","ECXPRO",160,0)
 ;
"RTN","ECXPRO",161,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",162,0)
 ;        routines.
"RTN","ECXPRO",163,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",164,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",165,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",166,0)
 ;
"RTN","ECXPRO",167,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",168,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO2")
0^21^B11847237^B11716093
"RTN","ECXPRO2",1,0)
ECXPRO2 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ;10/4/10  16:58
"RTN","ECXPRO2",2,0)
 ;;3.0;DSS EXTRACTS;**9,15,21,24,33,127**;Dec 22, 1997;Build 36
"RTN","ECXPRO2",3,0)
 ;
"RTN","ECXPRO2",4,0)
ECXBUL(ECXLNE,ECXEBDT,ECXEEDT,ECNUM) ;* Set up the header for the exception msg
"RTN","ECXPRO2",5,0)
 ;
"RTN","ECXPRO2",6,0)
 ;   Input
"RTN","ECXPRO2",7,0)
 ;    ECXLNE  - The line number variable (passed by reference)
"RTN","ECXPRO2",8,0)
 ;    ECXEBDT - The Externally formatted beginning date
"RTN","ECXPRO2",9,0)
 ;    ECXEEDT - The Externally formatted ending date
"RTN","ECXPRO2",10,0)
 ;    ECNUM   - The Extract reference number
"RTN","ECXPRO2",11,0)
 ;
"RTN","ECXPRO2",12,0)
 ;   Output
"RTN","ECXPRO2",13,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message
"RTN","ECXPRO2",14,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO2",15,0)
 ;
"RTN","ECXPRO2",16,0)
 S ^TMP("ECX-PRO EXC",$J,1)=" "
"RTN","ECXPRO2",17,0)
 S ^TMP("ECX-PRO EXC",$J,2)="The DSS-Prosthetic Extract #"_ECNUM_" for "_ECXEBDT_" through "_ECXEEDT
"RTN","ECXPRO2",18,0)
 S ^TMP("ECX-PRO EXC",$J,3)="has completed.  The following is a list of Prosthetics records that were NOT"
"RTN","ECXPRO2",19,0)
 S ^TMP("ECX-PRO EXC",$J,4)="extracted due to missing information in the Record of Pros Appliance/Repair"
"RTN","ECXPRO2",20,0)
 S ^TMP("ECX-PRO EXC",$J,5)="file (#660).  The Prosthetics record may be reviewed and the missing"
"RTN","ECXPRO2",21,0)
 S ^TMP("ECX-PRO EXC",$J,6)="information completed.  Once the missing information has been entered, it"
"RTN","ECXPRO2",22,0)
 S ^TMP("ECX-PRO EXC",$J,7)="will be necessary to re-generate the Prosthetics Extract for the above noted"
"RTN","ECXPRO2",23,0)
 S ^TMP("ECX-PRO EXC",$J,8)="date range."
"RTN","ECXPRO2",24,0)
 S ^TMP("ECX-PRO EXC",$J,9)=" "
"RTN","ECXPRO2",25,0)
 S ^TMP("ECX-PRO EXC",$J,10)="If you do not intend to transmit Prosthetics Extract #"_ECNUM_", then please"
"RTN","ECXPRO2",26,0)
 S ^TMP("ECX-PRO EXC",$J,11)="purge it before generating a new extract for the same date range."
"RTN","ECXPRO2",27,0)
 S ^TMP("ECX-PRO EXC",$J,12)=" "
"RTN","ECXPRO2",28,0)
 S ^TMP("ECX-PRO EXC",$J,13)=" "
"RTN","ECXPRO2",29,0)
 S ^TMP("ECX-PRO EXC",$J,14)=" PROSTHETICS FILE (#660)         MISSING DATA"
"RTN","ECXPRO2",30,0)
 S ^TMP("ECX-PRO EXC",$J,15)="       IEN                         ELEMENTS"
"RTN","ECXPRO2",31,0)
 S ^TMP("ECX-PRO EXC",$J,16)=" "
"RTN","ECXPRO2",32,0)
 S ECXLNE=15
"RTN","ECXPRO2",33,0)
 Q
"RTN","ECXPRO2",34,0)
 ;
"RTN","ECXPRO2",35,0)
ECXMISLN(ECXMISS,ECXLNE,ECXPIEN) ;** Report Missing Lines
"RTN","ECXPRO2",36,0)
 N ECXPCE,ECXFIRST,ECXFIELD
"RTN","ECXPRO2",37,0)
 S ECXFIRST=1
"RTN","ECXPRO2",38,0)
 F ECXPCE=1:1:11 DO
"RTN","ECXPRO2",39,0)
 .I +$P(ECXMISS,"^",ECXPCE) DO
"RTN","ECXPRO2",40,0)
 ..S ECXFIELD=$P($T(ECXFLD+ECXPCE),";;",2)
"RTN","ECXPRO2",41,0)
 ..I 'ECXFIRST S ^TMP("ECX-PRO EXC",$J,ECXLNE)="                                   "_ECXFIELD
"RTN","ECXPRO2",42,0)
 ..I ECXFIRST DO
"RTN","ECXPRO2",43,0)
 ...S ^TMP("ECX-PRO EXC",$J,ECXLNE)="       "_ECXPIEN_"                          "_ECXFIELD
"RTN","ECXPRO2",44,0)
 ...S ECXFIRST=0
"RTN","ECXPRO2",45,0)
 ..S ECXLNE=ECXLNE+1
"RTN","ECXPRO2",46,0)
 S ^TMP("ECX-PRO EXC",$J,ECXLNE)=" "
"RTN","ECXPRO2",47,0)
 S ECXLNE=ECXLNE+1
"RTN","ECXPRO2",48,0)
 Q
"RTN","ECXPRO2",49,0)
 ;
"RTN","ECXPRO2",50,0)
ECXFLD ;* Missing Required fields
"RTN","ECXPRO2",51,0)
 ;;STATION
"RTN","ECXPRO2",52,0)
 ;;PATIENT NAME (Invalid)
"RTN","ECXPRO2",53,0)
 ;;SSN
"RTN","ECXPRO2",54,0)
 ;;NAME (In Patient file - #2)
"RTN","ECXPRO2",55,0)
 ;;DELIVERY DATE
"RTN","ECXPRO2",56,0)
 ;;TYPE OF TRANSACTION
"RTN","ECXPRO2",57,0)
 ;;SOURCE
"RTN","ECXPRO2",58,0)
 ;;HCPCS
"RTN","ECXPRO2",59,0)
 ;;REQUESTING STATION
"RTN","ECXPRO2",60,0)
 ;;FORM REQUESTED ON
"RTN","ECXPRO2",61,0)
 ;;RECEIVING STATION
"RTN","ECXPRO2",62,0)
 Q
"RTN","ECXPRO2",63,0)
 ;
"RTN","ECXPRO2",64,0)
FEEDINFO(ECXSRCE,ECXHCPCS,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB) ;Get Feeder Key and Feeder Location
"RTN","ECXPRO2",65,0)
 ;   Input
"RTN","ECXPRO2",66,0)
 ;    ECXSTAT2   - Station Number for extract
"RTN","ECXPRO2",67,0)
 ;    ECXTYPE   - Type of Transaction work performed
"RTN","ECXPRO2",68,0)
 ;    ECXSRCE   - Source of prosthesis
"RTN","ECXPRO2",69,0)
 ;    ECXHCPCS  - HCPCS code for prosthesis
"RTN","ECXPRO2",70,0)
 ;    ECXRQST   - Requesting Station
"RTN","ECXPRO2",71,0)
 ;    ECXRCST   - Receiving Station
"RTN","ECXPRO2",72,0)
 ;    ECXLAB    - Lab or non-Lab 
"RTN","ECXPRO2",73,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO2",74,0)
 ;    ECXFELOC  - Feeder Location
"RTN","ECXPRO2",75,0)
 ;    ECXFEKEY  - Feeder Key
"RTN","ECXPRO2",76,0)
 ;
"RTN","ECXPRO2",77,0)
 ;* NOTE: If a Station # <> Requesting Station
"RTN","ECXPRO2",78,0)
 ;*         AND
"RTN","ECXPRO2",79,0)
 ;*       Station # <> Receiving Station,
"RTN","ECXPRO2",80,0)
 ;*       then Feeder Location will be NULL.  
"RTN","ECXPRO2",81,0)
 ;
"RTN","ECXPRO2",82,0)
 S ECXFELOC=""
"RTN","ECXPRO2",83,0)
 S ECXFEKEY=ECXHCPCS_$S(ECXTYPE="X":"X",ECXTYPE=5:"R",1:"N")_ECXSRCE
"RTN","ECXPRO2",84,0)
 ;
"RTN","ECXPRO2",85,0)
 ;* If processing a Non-Lab Transaction
"RTN","ECXPRO2",86,0)
 I ECXLAB="NONL" D  Q
"RTN","ECXPRO2",87,0)
 .S ECXFELOC=ECXSTAT2_"NONL"
"RTN","ECXPRO2",88,0)
 ;
"RTN","ECXPRO2",89,0)
 ;* If processing a Lab Transaction
"RTN","ECXPRO2",90,0)
 I ECXLAB="LAB" D  Q
"RTN","ECXPRO2",91,0)
 .I ECXSTAT2=ECXRCST D
"RTN","ECXPRO2",92,0)
 ..S ECXFELOC=ECXRCST_"LAB"
"RTN","ECXPRO2",93,0)
 ..S ECXFEKEY=ECXFEKEY_ECXRQST_"REQ"
"RTN","ECXPRO2",94,0)
 I ECXLAB="ORD" D  Q
"RTN","ECXPRO2",95,0)
 .I ECXSTAT2=ECXRQST D
"RTN","ECXPRO2",96,0)
 ..S ECXFELOC=ECXRQST_"ORD"
"RTN","ECXPRO2",97,0)
 ..S ECXFEKEY=ECXFEKEY_ECXRCST_"REC"
"RTN","ECXPRO2",98,0)
 ;
"RTN","ECXPRO2",99,0)
 Q
"RTN","ECXQSR")
0^7^B41725091^B40421374
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 2/5/10 6:50am
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127**;Dec 22, 1997;Build 36
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",31,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",32,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",33,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",34,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",35,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",37,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",38,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",39,0)
 ;OEF/OIF data
"RTN","ECXQSR",40,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",41,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",42,0)
 ;
"RTN","ECXQSR",43,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",44,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",45,0)
 Q:ECSTOP=""
"RTN","ECXQSR",46,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",47,0)
 I ECAC D
"RTN","ECXQSR",48,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",49,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",50,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",51,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",52,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",53,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",54,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",55,0)
 Q:'ECDU
"RTN","ECXQSR",56,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",57,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",58,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",59,0)
 ; was performed.
"RTN","ECXQSR",60,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",61,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",62,0)
 ;if QUASAR v2
"RTN","ECXQSR",63,0)
 I +ECXQV=2 D
"RTN","ECXQSR",64,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",66,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",67,0)
 .S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",68,0)
 .S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",69,0)
 .S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",70,0)
 .S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",71,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",72,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",73,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",74,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",75,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",76,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",77,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",78,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",79,0)
 ;if QUASAR v3
"RTN","ECXQSR",80,0)
 I +ECXQV=3 D
"RTN","ECXQSR",81,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",82,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",83,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",84,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",85,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",86,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",87,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",88,0)
 ..I ECTP D
"RTN","ECXQSR",89,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",90,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",91,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",92,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",93,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",94,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",95,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",96,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",97,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",98,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",99,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",100,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",101,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",102,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",103,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",104,0)
 ..S CNT=$G(STR(P))+1,STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",105,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",106,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",107,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",108,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",109,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",110,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",111,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",112,0)
 ;set up Provider Person class
"RTN","ECXQSR",113,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",114,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",115,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",116,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",117,0)
 F II=2,3 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",118,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",119,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",120,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",121,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",122,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",123,0)
 ;get encounter classification
"RTN","ECXQSR",124,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3)
"RTN","ECXQSR",125,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",126,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",127,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",128,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",129,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",130,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",131,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",132,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",133,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",134,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",135,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",136,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",137,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",138,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",139,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",140,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",141,0)
 Q:ECXENC=""
"RTN","ECXQSR",142,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",143,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",144,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",145,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",146,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",147,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",148,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",149,0)
 K CPT,LOC
"RTN","ECXQSR",150,0)
 Q
"RTN","ECXQSR",151,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",152,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",153,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",154,0)
 Q
"RTN","ECXQSR",155,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",156,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^8^B11045628^B10373755
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;10/14/10  18:04
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^secondary icd-9 
"RTN","ECXQSR1",11,0)
 ;#2 ECXICD92^secondary icd-9 #3 ECXICD93^secondary icd-9 #4 ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^dss dept ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",27,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",28,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",29,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",30,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",31,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",32,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",33,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI^shad status ECXSHADI^
"RTN","ECXQSR1",34,0)
 ;shad encouter ECXSHAD
"RTN","ECXQSR1",35,0)
 ;
"RTN","ECXQSR1",36,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",37,0)
 N ECXDATA,ECXTSC
"RTN","ECXQSR1",38,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",39,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXQSR1",40,0)
 ;done
"RTN","ECXQSR1",41,0)
 N DA,DIK
"RTN","ECXQSR1",42,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",43,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",44,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",45,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",46,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",47,0)
 S ECODE=ECODE_ECXMN_U_ECXTSC_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",48,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",49,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",50,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",51,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",52,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",53,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",54,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",55,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",56,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",57,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",58,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",59,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",60,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",61,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",62,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U_ECXPATCAT
"RTN","ECXQSR1",63,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXQSR1",64,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",65,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",66,0)
 Q
"RTN","ECXQSR1",67,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",68,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",69,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",70,0)
 Q
"RTN","ECXQSR1",71,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",72,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^31^B36528555^B34986358
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;10/14/10  16:04
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",11,0)
 S ECXDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",13,0)
 .S ECXDFN=""
"RTN","ECXRAD",14,0)
 .F  S ECXDFN=$O(^RADPT("AR",ECDT,ECXDFN)) Q:ECXDFN=""  I '$D(^TMP("ECL",$J,ECXDFN)) D GET Q:QFLG
"RTN","ECXRAD",15,0)
 K ^TMP("ECL",$J)
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN
"RTN","ECXRAD",20,0)
 S ^TMP("ECL",$J,ECXDFN)=""
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECXDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,"")) Q:ECXMDA=""
"RTN","ECXRAD",25,0)
 .S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",26,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",27,0)
 .S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",28,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3",.ECXPAT)
"RTN","ECXRAD",29,0)
 .Q:'OK
"RTN","ECXRAD",30,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",31,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXRAD",32,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",33,0)
 .S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",34,0)
 .S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",35,0)
 .S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",36,0)
 .S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",37,0)
 .S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",38,0)
 .;
"RTN","ECXRAD",39,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",40,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",41,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",42,0)
 .S ECXMDA=""
"RTN","ECXRAD",43,0)
 .F  S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",44,0)
 ..S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",45,0)
 ..;
"RTN","ECXRAD",46,0)
 ..;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",47,0)
 ..S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",48,0)
 ..;
"RTN","ECXRAD",49,0)
 ..;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",50,0)
 ..S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",51,0)
 ..S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",52,0)
 ..;
"RTN","ECXRAD",53,0)
 ..;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",54,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",55,0)
 ..;- If no encounter number don't file record
"RTN","ECXRAD",56,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",57,0)
 ..;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",58,0)
 ..;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",59,0)
 ..S ECCN=0
"RTN","ECXRAD",60,0)
 ..F  S ECCN=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",61,0)
 ...S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",62,0)
 ...S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",63,0)
 ...S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",64,0)
 ...S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",65,0)
 ...S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",66,0)
 ...S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",67,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",68,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",69,0)
 ...;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",70,0)
 ...S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",71,0)
 ...S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",72,0)
 ...S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",73,0)
 ...;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",74,0)
 ...S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",75,0)
 ...;get the principal clinic ien DBIA #65
"RTN","ECXRAD",76,0)
 ...S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",77,0)
 ...;get the clinic stop code from file #44
"RTN","ECXRAD",78,0)
 ...S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",79,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",80,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",81,0)
 ...;get CPT code & modifiers
"RTN","ECXRAD",82,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",83,0)
 ...;quit if this is a 'parent' procedure
"RTN","ECXRAD",84,0)
 ...S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",85,0)
 ...Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",86,0)
 ...;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",87,0)
 ...K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",88,0)
 ...I $D(ARR("LABEL")) D
"RTN","ECXRAD",89,0)
 ....K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",90,0)
 ....Q:$D(ERR("DIERR"))
"RTN","ECXRAD",91,0)
 ....S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",92,0)
 ....Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",93,0)
 ....F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",94,0)
 ...S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",95,0)
 ...;get procedure radiology modifiers
"RTN","ECXRAD",96,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",97,0)
 ...F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",98,0)
 ...S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",99,0)
 ...D FILE
"RTN","ECXRAD",100,0)
 Q
"RTN","ECXRAD",101,0)
 ;
"RTN","ECXRAD",102,0)
FILE ;file record
"RTN","ECXRAD",103,0)
 ;node0
"RTN","ECXRAD",104,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",105,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",106,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",107,0)
 ;node1
"RTN","ECXRAD",108,0)
 ;mpi^dss dept^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",109,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",110,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",111,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",112,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",113,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",114,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi
"RTN","ECXRAD",115,0)
 ;
"RTN","ECXRAD",116,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",117,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",118,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",119,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",120,0)
 ;done
"RTN","ECXRAD",121,0)
 N DA,DIK
"RTN","ECXRAD",122,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",123,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",124,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",125,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",126,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",127,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",128,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",129,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",130,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",131,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",132,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",133,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",134,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",135,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",136,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",137,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",138,0)
 Q
"RTN","ECXRAD",139,0)
 ;
"RTN","ECXRAD",140,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",141,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",142,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",143,0)
 Q
"RTN","ECXSCX1")
0^1^B69908401^B66163252
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ;9/29/10  17:26
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105,127**;Dec 22, 1997;Build 36
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",85,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",86,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",87,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",88,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",89,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",90,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",91,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",92,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",93,0)
 ..Q:EC=""
"RTN","ECXSCX1",94,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",95,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",96,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",97,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",98,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",99,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",100,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",101,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",102,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",104,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",105,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",107,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",108,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",109,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",110,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",111,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",112,0)
 .;set data in ^tmp
"RTN","ECXSCX1",113,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",114,0)
 Q
"RTN","ECXSCX1",115,0)
 ;
"RTN","ECXSCX1",116,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",117,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",118,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",119,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",120,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",121,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM,NOD1,NODE
"RTN","ECXSCX1",122,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,HNC,PGE,CV,SHAD
"RTN","ECXSCX1",123,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",124,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",125,0)
 S (ECXVIST("MST"),ECXVIST("CV"),ECXVIST("SHAD"))=""
"RTN","ECXSCX1",126,0)
 ;MRY-2/4/2010, extracts don't seem to use encounter (visit) "CV".
"RTN","ECXSCX1",127,0)
 ;extracts use eligibility API for some reason.  Added "CV" anyway.
"RTN","ECXSCX1",128,0)
 S (ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",129,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",130,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",131,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",132,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",133,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",134,0)
 Q:ECXERR
"RTN","ECXSCX1",135,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",136,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",137,0)
 ;get icd9 codes upto 5; else use 799.9
"RTN","ECXSCX1",138,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",139,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",140,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",141,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",142,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",143,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",144,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",145,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",146,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",147,0)
 S CNT=0,ECXVIST("ICD9P")=$P($G(^ICD9(+$G(ICD("P",1),0),0)),U)
"RTN","ECXSCX1",148,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",149,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("P",I),0)),U)
"RTN","ECXSCX1",150,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",151,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",152,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("S",I),0)),U)
"RTN","ECXSCX1",153,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",154,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",155,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",156,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",157,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",158,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",159,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",160,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",161,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",162,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",163,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",164,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",165,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",166,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",167,0)
 .I 'VAL D
"RTN","ECXSCX1",168,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",169,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",170,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",171,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",172,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",173,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",174,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",175,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",176,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",177,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",178,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",179,0)
 ...Q:NODE=""
"RTN","ECXSCX1",180,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",181,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",182,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",183,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",184,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",185,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",186,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",187,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",188,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",189,0)
 ..Q:CNT>8
"RTN","ECXSCX1",190,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",191,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",192,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",193,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",194,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",195,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",196,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",197,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",198,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",199,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",200,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",201,0)
 ..Q:CNT>8
"RTN","ECXSCX1",202,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",203,0)
 ;ao, ir, mst, pge, hnc, cv, shad
"RTN","ECXSCX1",204,0)
 S (AO,IR,MST,PGE,HNC,CV,SHAD)=""
"RTN","ECXSCX1",205,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",206,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",207,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",208,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",209,0)
 .S CV=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,7),SHAD=$P(^(800),U,8)
"RTN","ECXSCX1",210,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",211,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",212,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",213,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",214,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",215,0)
 .S ECXVIST("CV")=$S(CV=0:"N",CV=1:"Y",1:"")
"RTN","ECXSCX1",216,0)
 .S ECXVIST("SHAD")=$S(SHAD=0:"N",SHAD=1:"Y",1:"")
"RTN","ECXSCX1",217,0)
 Q
"RTN","ECXSCX2")
0^6^B9043953^B8788223
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ; 6/5/2007
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84,92,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXCNTRY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE,ECXHNC)=""
"RTN","ECXSCX2",10,0)
 Q
"RTN","ECXSCX2",11,0)
 ;
"RTN","ECXSCX2",12,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",13,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",14,0)
 S ECXERR=0
"RTN","ECXSCX2",15,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",16,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",17,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",18,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",19,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",20,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",21,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",22,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",23,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",24,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXSCX2",25,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",26,0)
 ; changes for 2001
"RTN","ECXSCX2",27,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",28,0)
 ;- Agent Orange location
"RTN","ECXSCX2",29,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",30,0)
 ;OEF/OIF data
"RTN","ECXSCX2",31,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSCX2",32,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSCX2",33,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",34,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",35,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",36,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXSCX2",37,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",38,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",39,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",40,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",41,0)
 ; - Environmental Contaminants
"RTN","ECXSCX2",42,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",43,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXSCX2",44,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXSCX2",45,0)
 Q
"RTN","ECXSCX2",46,0)
 ;
"RTN","ECXSCX2",47,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",48,0)
 N K,X
"RTN","ECXSCX2",49,0)
 ;get primary care data
"RTN","ECXSCX2",50,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",51,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",52,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",53,0)
 ;get inpatient data
"RTN","ECXSCX2",54,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",55,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",56,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",57,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",58,0)
 Q
"RTN","ECXSCX2",59,0)
 ;
"RTN","ECXSCX2",60,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",61,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",62,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",63,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",64,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",65,0)
 Q
"RTN","ECXSCX2",66,0)
 ;
"RTN","ECXSCX2",67,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",68,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",69,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",70,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",71,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",72,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",73,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",74,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^5^B60394645^B58038700
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;10/14/10  18:07
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127**;Dec 22, 1997;Build 36
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",69,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",70,0)
 ..;get date specific patient data
"RTN","ECXSCXN",71,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",72,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",73,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",74,0)
 ..;get visit specific data
"RTN","ECXSCXN",75,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",76,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",77,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",78,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",79,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",80,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",81,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",82,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",83,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",84,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",85,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",86,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",87,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",88,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",89,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",90,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",91,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",92,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",93,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",94,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",95,0)
 ..;appointments
"RTN","ECXSCXN",96,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",97,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",98,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",99,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",100,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",101,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",102,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",103,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",104,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",105,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",106,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",107,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",108,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",109,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",110,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",111,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",112,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",113,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",114,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",115,0)
 ...S ALEN=0
"RTN","ECXSCXN",116,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",117,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",118,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",119,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",120,0)
 ..;dispositions
"RTN","ECXSCXN",121,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",122,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",123,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",124,0)
 Q
"RTN","ECXSCXN",125,0)
 ;
"RTN","ECXSCXN",126,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",127,0)
 N STR
"RTN","ECXSCXN",128,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",129,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",130,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",131,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",132,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",133,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",134,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",135,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",136,0)
 ;done
"RTN","ECXSCXN",137,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",138,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",139,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",140,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",141,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",142,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",143,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",144,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",145,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",146,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",147,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",148,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",149,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",150,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",151,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",152,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",153,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",154,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",155,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",156,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",157,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",158,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",159,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",160,0)
 Q
"RTN","ECXSCXN",161,0)
 ;
"RTN","ECXSCXN",162,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",163,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",164,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",165,0)
 Q
"RTN","ECXSCXN1")
0^36^B11953560^B9414223
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ;9/10/10  10:13
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71,105,127**;Dec 22, 1997;Build 36
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV
"RTN","ECXSCXN1",6,0)
 S CLIN=0
"RTN","ECXSCXN1",7,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN  D
"RTN","ECXSCXN1",8,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",9,0)
 .S (P1,P2,P3)=""
"RTN","ECXSCXN1",10,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN1",11,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",12,0)
 .;find appts in date range
"RTN","ECXSCXN1",13,0)
 .S JDATE=ECXSD,(ALEN,NOSHOW)=""
"RTN","ECXSCXN1",14,0)
 .F  S JDATE=$O(^SC(CLIN,"S",JDATE)) Q:'JDATE  Q:JDATE>ECXED  D
"RTN","ECXSCXN1",15,0)
 ..S ECXDATE=JDATE,JJ=0,ECXTI=$P($$FMTE^XLFDT(JDATE,1),"@",2)
"RTN","ECXSCXN1",16,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN1",17,0)
 ..S:ECXTI="000000" ECXTI="000300"
"RTN","ECXSCXN1",18,0)
 ..;get noshows only - no data in check-in/check-out node
"RTN","ECXSCXN1",19,0)
 ..F  S JJ=$O(^SC(CLIN,"S",JDATE,JJ)) Q:'JJ  D
"RTN","ECXSCXN1",20,0)
 ...S K=0
"RTN","ECXSCXN1",21,0)
 ...F  S K=$O(^SC(CLIN,"S",JDATE,JJ,K)) Q:'K  D
"RTN","ECXSCXN1",22,0)
 ....S PP=$G(^SC(CLIN,"S",JDATE,JJ,K,0)),ECXDFN=$P(PP,U) Q:ECXDFN=""
"RTN","ECXSCXN1",23,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN) ;added in patch 127
"RTN","ECXSCXN1",24,0)
 ....S NODE=$G(^DPT(ECXDFN,"S",JDATE,0)),MDIV=$P($G(^SC(CLIN,0)),U,15)
"RTN","ECXSCXN1",25,0)
 ....Q:(NODE="")!($P(NODE,U)'=CLIN)
"RTN","ECXSCXN1",26,0)
 ....S ECXSHAD=$$GETSHAD ;added in patch 127, finds shad status for appt
"RTN","ECXSCXN1",27,0)
 ....S ECXOBI=$G(^SC(CLIN,"S",JDATE,JJ,K,"OB")),STAT=$P(NODE,U,2)
"RTN","ECXSCXN1",28,0)
 ....S NOSHOW=$S(STAT="N":"N",STAT="NA":"N",1:"")
"RTN","ECXSCXN1",29,0)
 ....Q:NOSHOW=""  D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",30,0)
 ....D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",31,0)
 ....S ALEN=$P(PP,U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN1",32,0)
 ....D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",33,0)
 ....S ECXPVST=$P(NODE,U,7),ECXATYP=$P(NODE,U,16)  ;Get POV & appt type
"RTN","ECXSCXN1",34,0)
 ....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",35,0)
 ....S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN1",36,0)
 ....S:ECXCPT1="" ECXCPT1="9919901"
"RTN","ECXSCXN1",37,0)
 ....S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",38,0)
 ....S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",39,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN1",40,0)
 .....S ECXKEY=P1_P2_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",41,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",42,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",43,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",44,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",45,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN1",46,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN1",47,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",48,0)
 ....;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",49,0)
 Q
"RTN","ECXSCXN1",50,0)
 ;GETSHAD section added with patch 127
"RTN","ECXSCXN1",51,0)
GETSHAD() ;Function returns shad value
"RTN","ECXSCXN1",52,0)
 N DIC,LOCARR,DA,DR,SHAD,ECXERR,ECXVIST
"RTN","ECXSCXN1",53,0)
 S SHAD=""
"RTN","ECXSCXN1",54,0)
 I '+$P($G(NODE),U,20) Q SHAD  ;Quit if no visit pointer
"RTN","ECXSCXN1",55,0)
 S DIC=409.68,DA=$P(NODE,U,20),DR=.05,DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN1",56,0)
 D EN^DIQ1
"RTN","ECXSCXN1",57,0)
 I $G(LOCARR(409.68,DA,.05,"I")) D
"RTN","ECXSCXN1",58,0)
 .S ECXERR=0
"RTN","ECXSCXN1",59,0)
 .D VISIT^ECXSCX1(ECXDFN,LOCARR(409.68,DA,.05,"I"),.ECXVIST,.ECXERR)
"RTN","ECXSCXN1",60,0)
 .I 'ECXERR S SHAD=ECXVIST("SHAD")
"RTN","ECXSCXN1",61,0)
 Q SHAD
"RTN","ECXSURG")
0^15^B71637747^B57957343
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;9/8/10  16:45
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127**;Dec 22, 1997;Build 36
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",24,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",25,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",26,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",27,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",28,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",29,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",30,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",31,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",32,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",33,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",34,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",35,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",36,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",37,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",38,0)
 ; ECX*112
"RTN","ECXSURG",39,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",40,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",41,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",42,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",43,0)
 ;get data
"RTN","ECXSURG",44,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",45,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",46,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",47,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",48,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",49,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",50,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",51,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",52,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",53,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",54,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",55,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",56,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",57,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",58,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",59,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",60,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",61,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",62,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",63,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",64,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",65,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",66,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",67,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",68,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",69,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",70,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",71,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",72,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",73,0)
 ;get classification information
"RTN","ECXSURG",74,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI)="" I ECXVISIT'="" D
"RTN","ECXSURG",75,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",76,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",77,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",78,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",79,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",80,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",81,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",82,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",83,0)
 ;look for non-OR
"RTN","ECXSURG",84,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",85,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",86,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",87,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",88,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",89,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",90,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",91,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",92,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",93,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",94,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",95,0)
 .;
"RTN","ECXSURG",96,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",97,0)
 .N P1 ;primary stop
"RTN","ECXSURG",98,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",99,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",100,0)
 ;
"RTN","ECXSURG",101,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",102,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",103,0)
 ;
"RTN","ECXSURG",104,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",105,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",106,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",107,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",108,0)
 ;get service of attending surgeon
"RTN","ECXSURG",109,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",110,0)
 ;
"RTN","ECXSURG",111,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",112,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",113,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",114,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",115,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",116,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",117,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",118,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",119,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",120,0)
 ;
"RTN","ECXSURG",121,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",122,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",123,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",124,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",125,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",126,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",127,0)
 ;anesthesia technique
"RTN","ECXSURG",128,0)
 S ECANE="",PP=""
"RTN","ECXSURG",129,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",130,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",131,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",132,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",133,0)
 ;get primary procedure
"RTN","ECXSURG",134,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",135,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",136,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",137,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",138,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",139,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",140,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",141,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",142,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",143,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",144,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",145,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",146,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",147,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",148,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",149,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",150,0)
 ..;
"RTN","ECXSURG",151,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",152,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",153,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",154,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",155,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",156,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",157,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",158,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",159,0)
 ; -Recovery Room Time
"RTN","ECXSURG",160,0)
 S ECRR=""
"RTN","ECXSURG",161,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",162,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",163,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",164,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",165,0)
 ;
"RTN","ECXSURG",166,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",167,0)
 ;
"RTN","ECXSURG",168,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",169,0)
 S ECXORCT=0
"RTN","ECXSURG",170,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",171,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",172,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",173,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",174,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",175,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",176,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",177,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",178,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",179,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",180,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",181,0)
 ;
"RTN","ECXSURG",182,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",183,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",184,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",185,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",186,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",187,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",188,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",189,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",190,0)
 ;
"RTN","ECXSURG",191,0)
 ;- get ASA CLASS
"RTN","ECXSURG",192,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",193,0)
 ;
"RTN","ECXSURG",194,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",195,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",196,0)
 ;
"RTN","ECXSURG",197,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",198,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",199,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",200,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",201,0)
 ;
"RTN","ECXSURG",202,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",203,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",204,0)
 ;
"RTN","ECXSURG",205,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",206,0)
 I $$SURPODX^ECXUTL6(.ECXPODX,.ECXPODX1,.ECXPODX2,.ECXPODX3,.ECXPODX4,.ECXPODX5)
"RTN","ECXSURG",207,0)
 ;
"RTN","ECXSURG",208,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",209,0)
 ;get secondary procedures
"RTN","ECXSURG",210,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",211,0)
 S ECXJ=0
"RTN","ECXSURG",212,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",213,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",214,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",215,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",216,0)
 .K ARR,ERR
"RTN","ECXSURG",217,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",218,0)
 ..K ARR,ERR
"RTN","ECXSURG",219,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",220,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",221,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",222,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",223,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",224,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",225,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",226,0)
 ;get prostheses
"RTN","ECXSURG",227,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",228,0)
 S ECXJ=0
"RTN","ECXSURG",229,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",230,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",231,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",232,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",233,0)
 Q
"RTN","ECXSURG",234,0)
 ;
"RTN","ECXSURG",235,0)
 ;
"RTN","ECXSURG",236,0)
TIME ; given date/time get increment
"RTN","ECXSURG",237,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",238,0)
 N CON,TIMEDIF
"RTN","ECXSURG",239,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",240,0)
 ;
"RTN","ECXSURG",241,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",242,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",243,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",244,0)
 I 'CON D
"RTN","ECXSURG",245,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",246,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",247,0)
 I CON D
"RTN","ECXSURG",248,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",249,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",250,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",251,0)
 Q
"RTN","ECXSURG",252,0)
 ;
"RTN","ECXSURG",253,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",254,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",255,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",256,0)
 Q
"RTN","ECXSURG",257,0)
 ;
"RTN","ECXSURG",258,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",259,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSURG1")
0^16^B18403653^B15348265
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;10/14/10  18:10
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120,127**;Dec 22, 1997;Build 36
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^princ postop diagnosis code
"RTN","ECXSURG1",34,0)
 ;ECXPODX^other postop diagnosis code #1 ECXPODX1^other postop
"RTN","ECXSURG1",35,0)
 ;diagnosis code #2 ECXPODX2^ other postop diag code #3 ECXPODX3^
"RTN","ECXSURG1",36,0)
 ;other postop diag code #4 ECXPODX4^other postop diag code #5
"RTN","ECXSURG1",37,0)
 ;ECXPODX5^anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",38,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",39,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",40,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",41,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",42,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",43,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",44,0)
 ;mst status ECXMST^shad indicator ECXSHADI^encounter shad ECXSHAD
"RTN","ECXSURG1",45,0)
 ;
"RTN","ECXSURG1",46,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSURG1",47,0)
 N ECXDATA,ECXTSC
"RTN","ECXSURG1",48,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSURG1",49,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSURG1",50,0)
 ;done
"RTN","ECXSURG1",51,0)
 N DA,DIK,STR
"RTN","ECXSURG1",52,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",53,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",54,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",55,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",56,0)
 S STR=ECXMN_U_ECXTSC_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",57,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",58,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",59,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",60,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",61,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",62,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",63,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",64,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",65,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",66,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",67,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",68,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",69,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U,ECODE3=$G(EC1A)_U_$G(EC1APC)_U_$G(EC1ANPI)
"RTN","ECXSURG1",70,0)
 I ECXLOGIC>2010 S ECODE3=ECODE3_U_$G(EC2A)_U_$G(EC2APC)_U_(EC2ANPI)_U_$G(ECPQ)_U_$G(ECPQPC)_U_$G(ECPQNPI)_U_$G(ECQA)_U_$G(ECQAPC)_U_$G(ECQANPI)_U_$G(ECASA)_U_ECXPATCAT
"RTN","ECXSURG1",71,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,^ECX(ECFILE,EC7,3)=ECODE3,ECRN=ECRN+1
"RTN","ECXSURG1",72,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",73,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",74,0)
 ;
"RTN","ECXSURG1",75,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",76,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",77,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",78,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",79,0)
 ;
"RTN","ECXSURG1",80,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",81,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",82,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",83,0)
 I 'CON D
"RTN","ECXSURG1",84,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",85,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",86,0)
 I CON D
"RTN","ECXSURG1",87,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",88,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",89,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",90,0)
 Q
"RTN","ECXSURG1",91,0)
 ;
"RTN","ECXSURG1",92,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",93,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",94,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",95,0)
 Q
"RTN","ECXSURG1",96,0)
 ;
"RTN","ECXSURG1",97,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",98,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRT")
0^37^B58392796^B56335762
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ;9/8/10  16:25
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,17,24,33,35,39,46,49,84,107,105,127**;Dec 22, 1997;Build 36
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N LOC,SPC,TRT,WRD
"RTN","ECXTRT",10,0)
 S QFLG=0
"RTN","ECXTRT",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXTRT",12,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",13,0)
 K ^TMP($J,"ECXTMP") S TRT=0
"RTN","ECXTRT",14,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),^TMP($J,"ECXTMP",TRT)=SPC
"RTN","ECXTRT",15,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",16,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",17,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)!(QFLG)  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",18,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",19,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",20,0)
 ..;
"RTN","ECXTRT",21,0)
 ..;- Call sets ECXA (In/Out indicator)
"RTN","ECXTRT",22,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD1,"1;",13)
"RTN","ECXTRT",23,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U)
"RTN","ECXTRT",24,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",25,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",26,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",27,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",28,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",29,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",30,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",31,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",32,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",33,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",34,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",35,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",36,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",37,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",38,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",39,0)
 ..;don't bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",40,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",41,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",42,0)
 ..;don't bother if there's no data on current attending physician or no change in attending
"RTN","ECXTRT",43,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",44,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",45,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",46,0)
 ..;- Production Division
"RTN","ECXTRT",47,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",48,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",49,0)
 ..;
"RTN","ECXTRT",50,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",51,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",52,0)
 ..;
"RTN","ECXTRT",53,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",54,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",55,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",56,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",57,0)
 ..;
"RTN","ECXTRT",58,0)
 ..;- Get providers person classes
"RTN","ECXTRT",59,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",60,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",61,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",62,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",63,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",64,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",65,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",66,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",67,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",68,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",69,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",70,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",71,0)
 ..;
"RTN","ECXTRT",72,0)
 ..;- If no encounter number, don't file record
"RTN","ECXTRT",73,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",74,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",75,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",76,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",77,0)
 ;at discharge the los calculated for nhcu episodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",78,0)
 ;
"RTN","ECXTRT",79,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",80,0)
 S ECD=ECSD1
"RTN","ECXTRT",81,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",82,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",83,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",84,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",85,0)
 ..I ECXDCDT'>0 S ECXDCDT=""
"RTN","ECXTRT",86,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",87,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",88,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",89,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",90,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",91,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",92,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",93,0)
 ..;
"RTN","ECXTRT",94,0)
 ..;- Call sets ECXA (In/Out indicator) using date before discharge
"RTN","ECXTRT",95,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD2,"1;",13)
"RTN","ECXTRT",96,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",97,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",98,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",99,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",100,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",101,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",102,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",103,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",104,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",105,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",106,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",107,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",108,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT",109,0)
 ..S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",110,0)
 ..;- Production Division
"RTN","ECXTRT",111,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",112,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",113,0)
 ..;
"RTN","ECXTRT",114,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",115,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",116,0)
 ..;
"RTN","ECXTRT",117,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",118,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",119,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",120,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",121,0)
 ..;
"RTN","ECXTRT",122,0)
 ..;- Get providers person classes
"RTN","ECXTRT",123,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",124,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",125,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",126,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",127,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",128,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",129,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",130,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",131,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",132,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",133,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",134,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",135,0)
 ..;
"RTN","ECXTRT",136,0)
 ..;- If no encounter number don't file record
"RTN","ECXTRT",137,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",138,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",139,0)
 D KPATDEM^ECXUTL2
"RTN","ECXTRT",140,0)
 Q
"RTN","ECXTRT",141,0)
 ;
"RTN","ECXTRT",142,0)
NPDIV(WRD) ;National Production Division
"RTN","ECXTRT",143,0)
 N DIV
"RTN","ECXTRT",144,0)
 S DIV=$$GET1^DIQ(42,WRD,.015,"I")
"RTN","ECXTRT",145,0)
 Q $S(DIV="":"",1:$$GETDIV^ECXDEPT(DIV))
"RTN","ECXTRT",146,0)
 ;
"RTN","ECXTRT",147,0)
SETLOC(ECXDFN,ECXADM,ECXPRO,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",148,0)
 ; output
"RTN","ECXTRT",149,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",150,0)
 ;
"RTN","ECXTRT",151,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",152,0)
 S SUB3=0
"RTN","ECXTRT",153,0)
 F  S SUB3=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",154,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",155,0)
 .S SUB4=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4))
"RTN","ECXTRT",156,0)
 .S SUB5=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",157,0)
 .S ECXLOC(SUB3,SUB4,SUB5)="",SPC=$G(^TMP($J,"ECXTMP",SUB4))
"RTN","ECXTRT",158,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19)
"RTN","ECXTRT",159,0)
 .S MOV=$P(DATA,U,14)
"RTN","ECXTRT",160,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",161,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",162,0)
 Q
"RTN","ECXTRT",163,0)
 ;
"RTN","ECXTRT",164,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",165,0)
 ;   input
"RTN","ECXTRT",166,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",167,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",168,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",169,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",170,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",171,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",172,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",173,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",174,0)
 ;
"RTN","ECXTRT",175,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",176,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",177,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",178,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",179,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",180,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5),ECXTRT=SUB4,ECXSPC=$P(LOC,U)
"RTN","ECXTRT",181,0)
 .S ECXPRV=$P(LOC,U,2),ECXATT=$P(LOC,U,3),ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",182,0)
 Q
"RTN","ECXTRT",183,0)
 ;
"RTN","ECXTRT",184,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",185,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",186,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",187,0)
 Q
"RTN","ECXTRT",188,0)
 ;
"RTN","ECXTRT",189,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",190,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",191,0)
 Q
"RTN","ECXTRT2")
0^32^B4576670^B4380192
"RTN","ECXTRT2",1,0)
ECXTRT2 ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ;9/8/10  16:34
"RTN","ECXTRT2",2,0)
 ;;3.0;DSS EXTRACTS;**105,127**;Dec 22, 1997;Build 36
"RTN","ECXTRT2",3,0)
 ;
"RTN","ECXTRT2",4,0)
FILE ;file the extract record
"RTN","ECXTRT2",5,0)
 ;node0
"RTN","ECXTRT2",6,0)
 ;^dfn^ssn^name^i/o (ECXA)^date^product^adm date^d/c date^
"RTN","ECXTRT2",7,0)
 ;mov#^type^new ts^losing ts^losing ts los^
"RTN","ECXTRT2",8,0)
 ;losing attending^movement type^time^adm time^new provider^
"RTN","ECXTRT2",9,0)
 ;new attending^losing provider
"RTN","ECXTRT2",10,0)
 ;node1
"RTN","ECXTRT2",11,0)
 ;mpi^dss dept^placeholder^placeholder^placeholder^
"RTN","ECXTRT2",12,0)
 ;placeholder^losing attending los^losing provider los^dom^
"RTN","ECXTRT2",13,0)
 ;observ pat ind^encounter num
"RTN","ECXTRT2",14,0)
 ;^losing attending physician npi^losing prim ward provider npi^
"RTN","ECXTRT2",15,0)
 ;new attending physician npi^new primary ward provider npi
"RTN","ECXTRT2",16,0)
 ;^product division code^losing attending physician PC^new primary ward
"RTN","ECXTRT2",17,0)
 ;provider pc^new attending physician pc^losing primary ward prov pc^
"RTN","ECXTRT2",18,0)
 ;new attending physician npi^new primary ward provider npi^PATCAT
"RTN","ECXTRT2",19,0)
 ;
"RTN","ECXTRT2",20,0)
 ;convert specialties to PTF Codes for transmission
"RTN","ECXTRT2",21,0)
 ;
"RTN","ECXTRT2",22,0)
 N ECXDATA
"RTN","ECXTRT2",23,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCN,.ECXDATA)
"RTN","ECXTRT2",24,0)
 S ECXSPCN=$G(ECXDATA(7))
"RTN","ECXTRT2",25,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCL,.ECXDATA)
"RTN","ECXTRT2",26,0)
 S ECXSPCL=$G(ECXDATA(7))
"RTN","ECXTRT2",27,0)
 ;done
"RTN","ECXTRT2",28,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXTRT2",29,0)
 S ECODE=EC7_U_EC23_U_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U_U
"RTN","ECXTRT2",30,0)
 S ECODE=ECODE_ECXADMDT_U_ECXDCDT_U_ECDA_U_6_U_ECXSPCN_U_ECXSPCL_U
"RTN","ECXTRT2",31,0)
 S ECODE=ECODE_ECXLOS_U_ECXATTL_U_ECMT_U_ECXTIME_U_ECXADMTM_U_ECXPRVN_U
"RTN","ECXTRT2",32,0)
 S ECODE=ECODE_ECXATTN_U_ECXPRVL_U
"RTN","ECXTRT2",33,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXTRT2",34,0)
 S ECODE1=ECODE1_ECXLOSA_U_ECXLOSP_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXPDIV
"RTN","ECXTRT2",35,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATLPC_U_ECXPRNPC_U_ECXATNPC_U_ECXPRLPC
"RTN","ECXTRT2",36,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECATLNPI_U_ECPRLNPI_U_ECATTNPI_U_ECPRVNPI
"RTN","ECXTRT2",37,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXTRT2",38,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXTRT2",39,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXTRT2",40,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT2",41,0)
 Q
"RTN","ECXTRT2",42,0)
 ;
"RTN","ECXTRT2",43,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT2",44,0)
 S ECHEAD="TRT"
"RTN","ECXTRT2",45,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT2",46,0)
 Q
"RTN","ECXTRT2",47,0)
 ;
"RTN","ECXTRT2",48,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT2",49,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT2",50,0)
 Q
"RTN","ECXUD")
0^17^B58470506^B54326285
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 10/31/07 1:58pm
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120,127**;Dec 22, 1997;Build 36
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG
"RTN","ECXUD",20,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",21,0)
 ;
"RTN","ECXUD",22,0)
 ;get patient specific data
"RTN","ECXUD",23,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",24,0)
 Q:ECXERR
"RTN","ECXUD",25,0)
 ;
"RTN","ECXUD",26,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",27,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",28,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",29,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",30,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",31,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",32,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",33,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",34,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",35,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",36,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",37,0)
 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",38,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",39,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",40,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",41,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",42,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",43,0)
 ; - Department and National Production Division
"RTN","ECXUD",44,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",45,0)
 S ECXDSSD=""
"RTN","ECXUD",46,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",47,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",48,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",49,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",50,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",51,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",52,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",53,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",54,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",55,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",56,0)
 ;BCMA data (place holder)
"RTN","ECXUD",57,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXUD",58,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",59,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",60,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",61,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",62,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",63,0)
 Q
"RTN","ECXUD",64,0)
 ;
"RTN","ECXUD",65,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",66,0)
 ;init variables
"RTN","ECXUD",67,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",68,0)
 ;get patient data if saved
"RTN","ECXUD",69,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",70,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",71,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",72,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",73,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",74,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",75,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",76,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",77,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",78,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",79,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",80,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",81,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7)
"RTN","ECXUD",82,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",83,0)
 ;set patient data
"RTN","ECXUD",84,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",85,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",86,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",87,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",88,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",89,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",90,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",91,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",92,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",93,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",94,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",95,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",96,0)
 .;OEF/OIF data
"RTN","ECXUD",97,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",98,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",99,0)
 .;get CNHU status
"RTN","ECXUD",100,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",101,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",102,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",103,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",104,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",105,0)
 .; - Proj. 112/SHAD Indicator
"RTN","ECXUD",106,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXUD",107,0)
 . ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXUD",108,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXUD",109,0)
 .; - Race and Ethnicity
"RTN","ECXUD",110,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",111,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",112,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",113,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",114,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",115,0)
 .;save for later
"RTN","ECXUD",116,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",117,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",118,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT
"RTN","ECXUD",119,0)
 ;
"RTN","ECXUD",120,0)
 ;get inpatient data
"RTN","ECXUD",121,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",122,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",123,0)
 ;
"RTN","ECXUD",124,0)
 ;get primary care data
"RTN","ECXUD",125,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",126,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",127,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",128,0)
 Q
"RTN","ECXUD",129,0)
 ;
"RTN","ECXUD",130,0)
FILE ;file record
"RTN","ECXUD",131,0)
 ;node0
"RTN","ECXUD",132,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",133,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",134,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",135,0)
 ;node1
"RTN","ECXUD",136,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",137,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",138,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",139,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",140,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",141,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",142,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",143,0)
 ;node2
"RTN","ECXUD",144,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",145,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",146,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",147,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",148,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",149,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",150,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",151,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",152,0)
 ;^country ECXCNTRY
"RTN","ECXUD",153,0)
 ;
"RTN","ECXUD",154,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",155,0)
 N ECXDATA
"RTN","ECXUD",156,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",157,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",158,0)
 ;done
"RTN","ECXUD",159,0)
 N DA,DIK
"RTN","ECXUD",160,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",161,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",162,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",163,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",164,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",165,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",166,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",167,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",168,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",169,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",170,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",171,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",172,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",173,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",174,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",175,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",176,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",177,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",178,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",179,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT ; 127 PATCAT ADDED
"RTN","ECXUD",180,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",181,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",182,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",183,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",184,0)
 Q
"RTN","ECXUD",185,0)
 ;
"RTN","ECXUD",186,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",187,0)
 S ECHEAD="UDP"
"RTN","ECXUD",188,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",189,0)
 Q
"RTN","ECXUD",190,0)
 ;
"RTN","ECXUD",191,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",192,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",193,0)
 Q
"RTN","ECXUEC")
0^20^B48196617^B38987244
"RTN","ECXUEC",1,0)
ECXUEC ;ALB/TJL,JAP - Event Capture Extract Unusual Volume Report ;9/24/10  14:18
"RTN","ECXUEC",2,0)
 ;;3.0;DSS EXTRACTS;**120,127**;July 1, 2003;Build 36
"RTN","ECXUEC",3,0)
 ;
"RTN","ECXUEC",4,0)
EN ; entry point
"RTN","ECXUEC",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUEC",6,0)
 N ECSD,ECSD1,ECSTART,ECXDSS,ECED,ECEND,ECXERR,QFLG,DIR,DTOUT,DUOUT,DIRUT,POP,ZTSK,ZTQUEUED,DIC
"RTN","ECXUEC",7,0)
 S QFLG=0,ECTHLD=""
"RTN","ECXUEC",8,0)
 ; get today's date
"RTN","ECXUEC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUEC",10,0)
 D BEGIN Q:QFLG
"RTN","ECXUEC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUEC",12,0)
 S ECXDESC="ECS Extract Unusual Volume Report"
"RTN","ECXUEC",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUEC",14,0)
 W !!,"This report is formatted for 132-column line width."
"RTN","ECXUEC",15,0)
 W !!,"Enter 'Q' to queue report to TaskManager, then select printer."
"RTN","ECXUEC",16,0)
 D EN^XUTMDEVQ("PROCESS^ECXUEC",ECXDESC,.ECXSAVE,"",1)
"RTN","ECXUEC",17,0)
 I $G(POP) W !!,"No device selected...exiting.",! Q
"RTN","ECXUEC",18,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUEC",19,0)
 D HOME^%ZIS
"RTN","ECXUEC",20,0)
 I $D(ZTSK) W !!,"Queued as Task #"_ZTSK_"."
"RTN","ECXUEC",21,0)
 Q
"RTN","ECXUEC",22,0)
 ;
"RTN","ECXUEC",23,0)
BEGIN ; display report description
"RTN","ECXUEC",24,0)
 W @IOF
"RTN","ECXUEC",25,0)
 W !,"ECS Extract Unusual Volume Report"
"RTN","ECXUEC",26,0)
 W !!,"   This report prints a listing of unusual volumes that would be"
"RTN","ECXUEC",27,0)
 W !,"   generated by the Event Capture extract (ECS) as determined by"
"RTN","ECXUEC",28,0)
 W !,"   a user-defined threshold value. It should be run prior to"
"RTN","ECXUEC",29,0)
 W !,"   the generation of an actual extract to identify and fix, as"
"RTN","ECXUEC",30,0)
 W !,"   necessary, any volumes determined to be erroneous."
"RTN","ECXUEC",31,0)
 W !!,"   Unusual volumes are those in excess of the threshold value"
"RTN","ECXUEC",32,0)
 W !,"   defined by the user. The threshold value is 20 by default."
"RTN","ECXUEC",33,0)
 W !!,"   Note: You may set a different threshold if you opt to continue."
"RTN","ECXUEC",34,0)
 W !!,"   Run times will vary depending upon the size of the EVENT CAPTURE"
"RTN","ECXUEC",35,0)
 W !,"   PATIENT file (#721) and the date range selected, but may be at"
"RTN","ECXUEC",36,0)
 W !,"   least several minutes. Queuing to a printer is recommended."
"RTN","ECXUEC",37,0)
 W !!,"   The running of this report has no effect on the actual extracts"
"RTN","ECXUEC",38,0)
 W !,"   and can be run as needed."
"RTN","ECXUEC",39,0)
 W !!,"   You may select one or all DSS Units.  If you select one unit,"
"RTN","ECXUEC",40,0)
 W !,"   the report is sorted by descending volume. If you select all DSS Units, "
"RTN","ECXUEC",41,0)
 W !,"   the report is sorted by DSS Unit, then by descending volume."
"RTN","ECXUEC",42,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",43,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUEC",44,0)
 Q
"RTN","ECXUEC",45,0)
 ;
"RTN","ECXUEC",46,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUEC",47,0)
 N DONE,OUT
"RTN","ECXUEC",48,0)
 ; allow user to set threshold volume
"RTN","ECXUEC",49,0)
 S ECTHLD=20
"RTN","ECXUEC",50,0)
 W !!,"The default threshold volume for unusual volumes in Event Capture is "_ECTHLD_"."
"RTN","ECXUEC",51,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO"
"RTN","ECXUEC",52,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",53,0)
 I Y D
"RTN","ECXUEC",54,0)
 .W !!,"Volume > threshold"
"RTN","ECXUEC",55,0)
 .S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume"
"RTN","ECXUEC",56,0)
 .D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1
"RTN","ECXUEC",57,0)
 ; get DSS Unit selection from user
"RTN","ECXUEC",58,0)
 Q:QFLG
"RTN","ECXUEC",59,0)
 W !
"RTN","ECXUEC",60,0)
 S DIR(0)="Y",DIR("A")="Do you want All DSS Units",DIR("B")="YES"
"RTN","ECXUEC",61,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",62,0)
 I Y S ECXDSS="ALL"
"RTN","ECXUEC",63,0)
 E  D  I QFLG=1 Q
"RTN","ECXUEC",64,0)
 .S DIC(0)="AEQM",DIC="^ECD(" D ^DIC K DIC I X["^" S QFLG=1 Q
"RTN","ECXUEC",65,0)
 .I Y=-1 S QFLG=1 Q
"RTN","ECXUEC",66,0)
 .S ECXDSS=+$G(Y) I ECXDSS=0 S QFLG=1 Q
"RTN","ECXUEC",67,0)
 ; get date range from user
"RTN","ECXUEC",68,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUEC",69,0)
 W !,"Event Capture records.",!
"RTN","ECXUEC",70,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUEC",71,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",72,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",73,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUEC",74,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUEC",75,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",76,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",77,0)
 .I Y<ECSD D  Q
"RTN","ECXUEC",78,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUEC",79,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",80,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUEC",81,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUEC",82,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",83,0)
 .S ECED=Y
"RTN","ECXUEC",84,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUEC",85,0)
 .S DONE=1
"RTN","ECXUEC",86,0)
 Q
"RTN","ECXUEC",87,0)
 ;
"RTN","ECXUEC",88,0)
PROCESS ; entry point for queued report
"RTN","ECXUEC",89,0)
 N QFLG
"RTN","ECXUEC",90,0)
 S ZTREQ="@"
"RTN","ECXUEC",91,0)
 S ECXERR=0 D START Q:ECXERR
"RTN","ECXUEC",92,0)
 S QFLG=0 D PRINT
"RTN","ECXUEC",93,0)
 K ^TMP("ECUV",$J) D ^ECXKILL
"RTN","ECXUEC",94,0)
 Q
"RTN","ECXUEC",95,0)
 ;
"RTN","ECXUEC",96,0)
START ;find EC records in date range
"RTN","ECXUEC",97,0)
 I ECXDSS="ALL" D
"RTN","ECXUEC",98,0)
 .N X,Y,ECLL,ECDA,ECD,COUNT
"RTN","ECXUEC",99,0)
 .S ECED=ECED+.3,ECLL=0,COUNT=0
"RTN","ECXUEC",100,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",101,0)
 .F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXUEC",102,0)
 ..F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",103,0)
 ...F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",104,0)
 E  D
"RTN","ECXUEC",105,0)
 .N X,Y,ECLL,ECPAT,ECDA,ECD,COUNT
"RTN","ECXUEC",106,0)
 .S ECED=ECED+.3,ECLL=0,ECPAT=0,COUNT=0
"RTN","ECXUEC",107,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",108,0)
 .F  S ECLL=$O(^ECH("ADT",ECLL)) Q:'ECLL  D
"RTN","ECXUEC",109,0)
 .. S ECPAT=0
"RTN","ECXUEC",110,0)
 .. F  S ECPAT=$O(^ECH("ADT",ECLL,ECPAT)),ECD=ECSD-.1 Q:'ECPAT  D
"RTN","ECXUEC",111,0)
 ...F  S ECD=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",112,0)
 ....F  S ECDA=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",113,0)
 Q
"RTN","ECXUEC",114,0)
 ;
"RTN","ECXUEC",115,0)
GETREC ;get data for report
"RTN","ECXUEC",116,0)
 N ECCH,ECL,ECXDFN,ECXSSN,ECXPDIV,ECDT,ECDU,ECV,ECP,ECXPROV,ECXPRV,ECXDATE,ECXUNIT
"RTN","ECXUEC",117,0)
 N ECXDOB,ECXETH,ECXMAR,ECXMPI,ECXPNM,ECXPRIME,ECXRACE,ECXRC1,ECXREL,ECXSEX,N1,N2,VA
"RTN","ECXUEC",118,0)
 S ECCH=^ECH(ECDA,0),ECV=$P(ECCH,U,10)
"RTN","ECXUEC",119,0)
 Q:(ECV<ECTHLD)
"RTN","ECXUEC",120,0)
 S ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXUEC",121,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXUEC",122,0)
 S ECDT=$P(ECCH,U,3),ECDU=$P(ECCH,U,7),ECP=$P(ECCH,U,9)
"RTN","ECXUEC",123,0)
 Q:(ECP']"")
"RTN","ECXUEC",124,0)
 Q:('$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;","12"))
"RTN","ECXUEC",125,0)
 S ECXDATE=$$FMTE^XLFDT(ECDT,5)
"RTN","ECXUEC",126,0)
 K ECXPRV S X=$$GETPPRV^ECPRVMUT(ECDA,.ECXPRV),ECXPROV=$E($P(ECXPRV,U,2),1,30)
"RTN","ECXUEC",127,0)
 I ECXPROV]"" D
"RTN","ECXUEC",128,0)
 .S N1=$$TITLE^XLFSTR($P(ECXPROV,",")),N2=$$TITLE^XLFSTR($P(ECXPROV,",",2))
"RTN","ECXUEC",129,0)
 .S ECXPROV=(N1_","_N2)
"RTN","ECXUEC",130,0)
 I ECP[";" D
"RTN","ECXUEC",131,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L")
"RTN","ECXUEC",132,0)
 S ECXUNIT=$P($G(^ECD(ECDU,0)),U)
"RTN","ECXUEC",133,0)
 S COUNT=COUNT+1
"RTN","ECXUEC",134,0)
 S ^TMP("ECUV",$J,ECXUNIT,(100-ECV),COUNT)=ECXSSN_U_ECXPDIV_U_ECXDATE_U_ECP_U_ECXPROV_U_ECV
"RTN","ECXUEC",135,0)
 Q
"RTN","ECXUEC",136,0)
 ;
"RTN","ECXUEC",137,0)
PRINT ; process temp file and print report
"RTN","ECXUEC",138,0)
 N PG,QFLG,LN,COUNT,REC,CC,SS,JJ,ZTSTOP
"RTN","ECXUEC",139,0)
 N ECXUNIT,ECV,ECVV,ECXSSN,ECXPDIV,ECXDATE,ECXUNIT,ECP,ECXPROV
"RTN","ECXUEC",140,0)
 U IO
"RTN","ECXUEC",141,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUEC",142,0)
 S (PG,QFLG,COUNT)=0,$P(LN,"-",130)=""
"RTN","ECXUEC",143,0)
 D HEADER Q:QFLG
"RTN","ECXUEC",144,0)
 S ECXUNIT="" F  S ECXUNIT=$O(^TMP("ECUV",$J,ECXUNIT)) Q:ECXUNIT=""  D  Q:QFLG
"RTN","ECXUEC",145,0)
 .I COUNT>0 W !,?1,LN
"RTN","ECXUEC",146,0)
 .S ECVV=0 F  S ECVV=$O(^TMP("ECUV",$J,ECXUNIT,ECVV)) Q:'ECVV  D  Q:QFLG
"RTN","ECXUEC",147,0)
 ..S CC=0 F  S CC=$O(^TMP("ECUV",$J,ECXUNIT,ECVV,CC)) Q:'CC  D  Q:QFLG
"RTN","ECXUEC",148,0)
 ...S REC=^TMP("ECUV",$J,ECXUNIT,ECVV,CC),COUNT=COUNT+1
"RTN","ECXUEC",149,0)
 ...S ECXSSN=$P(REC,U),ECXPDIV=$P(REC,U,2),ECXDATE=$P(REC,U,3),ECP=$P(REC,U,4),ECXPROV=$P(REC,U,5),ECV=$P(REC,U,6)
"RTN","ECXUEC",150,0)
 ...W !,?1,ECXSSN,?13,ECXPDIV,?24,ECXUNIT,?55,ECXDATE,?75,ECP,?86,ECV,?94,ECXPROV
"RTN","ECXUEC",151,0)
 ...I $Y+4>IOSL D HEADER Q:QFLG
"RTN","ECXUEC",152,0)
 Q:QFLG
"RTN","ECXUEC",153,0)
 I COUNT=0 W !!,?8,"No unusual Event Capture volumes to report for the date range.",!!
"RTN","ECXUEC",154,0)
 D SS
"RTN","ECXUEC",155,0)
 Q
"RTN","ECXUEC",156,0)
 ;
"RTN","ECXUEC",157,0)
HEADER ;header and page control
"RTN","ECXUEC",158,0)
 D:PG SS Q:QFLG
"RTN","ECXUEC",159,0)
 Q:QFLG
"RTN","ECXUEC",160,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUEC",161,0)
 W !,ECXDESC,?103,"Page: "_PG
"RTN","ECXUEC",162,0)
 W !,"Start Date: ",ECSTART,?92,"Report Run Date: "_ECRUN
"RTN","ECXUEC",163,0)
 W !,"  End Date: ",ECEND,?92,"Threshold Value: ",ECTHLD
"RTN","ECXUEC",164,0)
 W !!,?1,"SSN",?13,"FACILITY",?24,"DSS UNIT",?55,"DATE/TIME",?75,"PROCEDURE",?86,"VOLUME",?94,"PROVIDER"
"RTN","ECXUEC",165,0)
 W !,LN,!
"RTN","ECXUEC",166,0)
 Q
"RTN","ECXUEC",167,0)
 ;
"RTN","ECXUEC",168,0)
SS ;SCROLL STOPS
"RTN","ECXUEC",169,0)
 N JJ,SS
"RTN","ECXUEC",170,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXUEC",171,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",172,0)
 Q
"RTN","ECXUTL")
0^34^B53983584^B37094272
"RTN","ECXUTL",1,0)
ECXUTL ;ALB/JAP - Utilities for DSS Extracts ; 11/23/10 1:58pm
"RTN","ECXUTL",2,0)
 ;;3.0;DSS EXTRACTS;**1,5,8,84,90,127**;Dec 22, 1997;Build 36
"RTN","ECXUTL",3,0)
 ;
"RTN","ECXUTL",4,0)
ECXYM(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",5,0)
 ;converts any FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",6,0)
 ;
"RTN","ECXUTL",7,0)
 ;   input
"RTN","ECXUTL",8,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",9,0)
 ;   output
"RTN","ECXUTL",10,0)
 ;   ECXYM = YYYYMM string
"RTN","ECXUTL",11,0)
 ;
"RTN","ECXUTL",12,0)
 N MONTH,YEAR,CENTURY,ECXYM
"RTN","ECXUTL",13,0)
 ;
"RTN","ECXUTL",14,0)
 ;error checks
"RTN","ECXUTL",15,0)
 I +ECXFMDT'=ECXFMDT S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",16,0)
 I $L($P(ECXFMDT,"."))'=7 S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",17,0)
 I +$E(ECXFMDT,4,5)<1!(+$E(ECXFMDT,4,5)>12) S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",18,0)
 ;
"RTN","ECXUTL",19,0)
 S MONTH=$E(ECXFMDT,4,5),YEAR=$E(ECXFMDT,2,3),CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",20,0)
 S ECXYM=CENTURY_YEAR_MONTH
"RTN","ECXUTL",21,0)
 Q ECXYM
"RTN","ECXUTL",22,0)
 ;
"RTN","ECXUTL",23,0)
ECXYMX(ECXYM) ;extrinsic function
"RTN","ECXUTL",24,0)
 ;converts a 6-character numeric string of format YYYYMM
"RTN","ECXUTL",25,0)
 ;to a FM external format date
"RTN","ECXUTL",26,0)
 ;
"RTN","ECXUTL",27,0)
 ;   input
"RTN","ECXUTL",28,0)
 ;   ECXYM = YYYYMM string (required)
"RTN","ECXUTL",29,0)
 ;   output
"RTN","ECXUTL",30,0)
 ;   ECXYMX = FM external format date;
"RTN","ECXUTL",31,0)
 ;            SEP 1997
"RTN","ECXUTL",32,0)
 ;   error code
"RTN","ECXUTL",33,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",34,0)
 ;
"RTN","ECXUTL",35,0)
 N Y,%DT,CENTURY,FMCENT,ECXYMX
"RTN","ECXUTL",36,0)
 ;
"RTN","ECXUTL",37,0)
 ;error checks
"RTN","ECXUTL",38,0)
 I ECXYM="" S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",39,0)
 I +ECXYM'=ECXYM S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",40,0)
 I $L(ECXYM)'=6 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",41,0)
 I +$E(ECXYM,1,4)<1800 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",42,0)
 I +$E(ECXYM,5,6)<1!(+$E(ECXYM,5,6)>12) S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",43,0)
 ;
"RTN","ECXUTL",44,0)
 S CENTURY=$E(ECXYM,1,2)
"RTN","ECXUTL",45,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",46,0)
 S Y=FMCENT_$E(ECXYM,3,6) D DD^%DT S ECXYMX=Y
"RTN","ECXUTL",47,0)
 ;
"RTN","ECXUTL",48,0)
 ;error checks
"RTN","ECXUTL",49,0)
 I $L(ECXYMX)'=8 S ECXYMX="000000"
"RTN","ECXUTL",50,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXYMX,1,3) S ECXYMX="000000"
"RTN","ECXUTL",51,0)
 Q ECXYMX
"RTN","ECXUTL",52,0)
 ;
"RTN","ECXUTL",53,0)
ECXDATE(ECXFMDT,ECXYM) ;extrinsic function
"RTN","ECXUTL",54,0)
 ;converts any FM internal format date or date/time to a 8-character string
"RTN","ECXUTL",55,0)
 ;
"RTN","ECXUTL",56,0)
 ;   input
"RTN","ECXUTL",57,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",58,0)
 ;   ECXYM = YYYYMM; year/month 6-character string (required)
"RTN","ECXUTL",59,0)
 ;   output
"RTN","ECXUTL",60,0)
 ;   ECXDATE = YYYYMMDD string
"RTN","ECXUTL",61,0)
 ;   error code
"RTN","ECXUTL",62,0)
 ;   "000000" returned, if problem with input
"RTN","ECXUTL",63,0)
 ;
"RTN","ECXUTL",64,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDATE
"RTN","ECXUTL",65,0)
 ;
"RTN","ECXUTL",66,0)
 ;error checks
"RTN","ECXUTL",67,0)
 I +ECXYM'=ECXYM S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",68,0)
 I $L(ECXYM)'=6 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",69,0)
 I +$E(ECXYM,1,4)<1800 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",70,0)
 I +$E(ECXYM,5,6)<1!($E(ECXYM,5,6)>12) S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",71,0)
 ;special case where ecxfmdt is null; default to year/month of ecxym
"RTN","ECXUTL",72,0)
 I ECXFMDT="" S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",73,0)
 ;error checks
"RTN","ECXUTL",74,0)
 I +ECXFMDT'=ECXFMDT S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",75,0)
 I $L(ECXFMDT)<7 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",76,0)
 I +$E(ECXFMDT,4,5)>12 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",77,0)
 I +$E(ECXFMDT,6,7)>31 S ECXFMDT=$E(ECXFMDT,1,5)_"01"
"RTN","ECXUTL",78,0)
 ;default to 1st day of month
"RTN","ECXUTL",79,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00" DAY="01"
"RTN","ECXUTL",80,0)
 ;default to month of ecxym
"RTN","ECXUTL",81,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00" MONTH=$E(ECXYM,5,6)
"RTN","ECXUTL",82,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",83,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",84,0)
 S ECXDATE=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",85,0)
 Q ECXDATE
"RTN","ECXUTL",86,0)
 ;
"RTN","ECXUTL",87,0)
ECXDATEX(ECXDATE) ;extrinsic function
"RTN","ECXUTL",88,0)
 ;converts an 8-character numeric string of format YYYYMMDD
"RTN","ECXUTL",89,0)
 ;to a FM external format date
"RTN","ECXUTL",90,0)
 ;
"RTN","ECXUTL",91,0)
 ;   input
"RTN","ECXUTL",92,0)
 ;   ECXDATE = YYYYMMDD string (required)
"RTN","ECXUTL",93,0)
 ;   output
"RTN","ECXUTL",94,0)
 ;   ECXDATEX = FM external format date;
"RTN","ECXUTL",95,0)
 ;              SEP 12, 1997
"RTN","ECXUTL",96,0)
 ;   error code
"RTN","ECXUTL",97,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",98,0)
 ;
"RTN","ECXUTL",99,0)
 N Y,%DT,CENTURY,FMCENT,ECXDATEX
"RTN","ECXUTL",100,0)
 ;
"RTN","ECXUTL",101,0)
 ;error checks
"RTN","ECXUTL",102,0)
 I +ECXDATE'=ECXDATE S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",103,0)
 I $L(ECXDATE)'=8 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",104,0)
 I +$E(ECXDATE,7,8)>31 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",105,0)
 ;
"RTN","ECXUTL",106,0)
 S CENTURY=$E(ECXDATE,1,2)
"RTN","ECXUTL",107,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",108,0)
 S Y=FMCENT_$E(ECXDATE,3,8) D DD^%DT S ECXDATEX=Y
"RTN","ECXUTL",109,0)
 ;
"RTN","ECXUTL",110,0)
 ;error checks
"RTN","ECXUTL",111,0)
 I $L(ECXDATEX)'=12 S ECXDATEX="000000"
"RTN","ECXUTL",112,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXDATEX,1,3) S ECXDATEX="000000"
"RTN","ECXUTL",113,0)
 Q ECXDATEX
"RTN","ECXUTL",114,0)
 ;
"RTN","ECXUTL",115,0)
ECXDOB(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",116,0)
 ;converts a FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",117,0)
 ;if ecxfmdt is null, the function returns 19420101
"RTN","ECXUTL",118,0)
 ;   input
"RTN","ECXUTL",119,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",120,0)
 ;             must be valid FM internal format 
"RTN","ECXUTL",121,0)
 ;   output
"RTN","ECXUTL",122,0)
 ;   ECXDOB = YYYYMMDD string (required);
"RTN","ECXUTL",123,0)
 ;            defaults to 19420101
"RTN","ECXUTL",124,0)
 ;
"RTN","ECXUTL",125,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDOB
"RTN","ECXUTL",126,0)
 ;only consider date portion
"RTN","ECXUTL",127,0)
 S ECXFMDT=$P(ECXFMDT,".",1)
"RTN","ECXUTL",128,0)
 ;special case where ecxfmdt is null
"RTN","ECXUTL",129,0)
 I ECXFMDT="" S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",130,0)
 ;error checks - return default
"RTN","ECXUTL",131,0)
 I +ECXFMDT'=ECXFMDT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",132,0)
 I $L(ECXFMDT)<7 S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",133,0)
 I +ECXFMDT>DT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",134,0)
 ;default to 1st day of month
"RTN","ECXUTL",135,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00"!(+DAY>31) DAY="01"
"RTN","ECXUTL",136,0)
 ;default to 1st month of year
"RTN","ECXUTL",137,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00"!(+MONTH>12) MONTH="01",DAY="01"
"RTN","ECXUTL",138,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",139,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",140,0)
 S ECXDOB=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",141,0)
 Q ECXDOB
"RTN","ECXUTL",142,0)
 ;
"RTN","ECXUTL",143,0)
ECXTIME(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",144,0)
 ;converts Fileman internal date/time to 6-character time string
"RTN","ECXUTL",145,0)
 ;format HHMMSS
"RTN","ECXUTL",146,0)
 ;
"RTN","ECXUTL",147,0)
 ;   input
"RTN","ECXUTL",148,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",149,0)
 ;             must be valid FM internal format
"RTN","ECXUTL",150,0)
 ;   output
"RTN","ECXUTL",151,0)
 ;   ECXTIME = 6-character numeric string;
"RTN","ECXUTL",152,0)
 ;             format HHMMSS; string length always 6
"RTN","ECXUTL",153,0)
 ;
"RTN","ECXUTL",154,0)
 N J,JJ,TIME,HH,MM,SS,ECXTIME
"RTN","ECXUTL",155,0)
 ;if any non-numerics, set default
"RTN","ECXUTL",156,0)
 I +ECXFMDT=0 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",157,0)
 ;use only time portion of fileman internal format
"RTN","ECXUTL",158,0)
 S TIME=$P(ECXFMDT,".",2),TIME=$E(TIME,1,6)
"RTN","ECXUTL",159,0)
 ;if time unknown, set default
"RTN","ECXUTL",160,0)
 I TIME="" S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",161,0)
 ;be sure time is 6 characters
"RTN","ECXUTL",162,0)
 S TIME=$$LJ^XLFSTR(TIME,6,0)
"RTN","ECXUTL",163,0)
 ;error checks -- set default
"RTN","ECXUTL",164,0)
 S HH=$E(TIME,1,2),MM=$E(TIME,3,4),SS=$E(TIME,5,6)
"RTN","ECXUTL",165,0)
 I +HH>23 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",166,0)
 I +MM>59 S MM="59"
"RTN","ECXUTL",167,0)
 I +SS>59 S SS="59"
"RTN","ECXUTL",168,0)
 S ECXTIME=HH_MM_SS
"RTN","ECXUTL",169,0)
 Q ECXTIME
"RTN","ECXUTL",170,0)
 ;
"RTN","ECXUTL",171,0)
ECXTIMEX(ECXTIME,ECXMIL) ;extrinsic function
"RTN","ECXUTL",172,0)
 ;converts a 6-character time string to external, user readable format
"RTN","ECXUTL",173,0)
 ;used as output transform for time fields in many dss extract files
"RTN","ECXUTL",174,0)
 ;   input
"RTN","ECXUTL",175,0)
 ;   ECXTIME = 6-character numeric string (required); 
"RTN","ECXUTL",176,0)
 ;   ECXMIL = if "1", then return military time (optional)          
"RTN","ECXUTL",177,0)
 ;   output
"RTN","ECXUTL",178,0)
 ;   ECXTIMEX = character string;
"RTN","ECXUTL",179,0)
 ;              if ECXMIL=1, format HH:MM:SS
"RTN","ECXUTL",180,0)
 ;              otherwise, hours:mins AM/PM
"RTN","ECXUTL",181,0)
 ;   error code
"RTN","ECXUTL",182,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",183,0)
 ;              
"RTN","ECXUTL",184,0)
 N TIME,HH,MM,SS,ECXTIMEX,J,JJ
"RTN","ECXUTL",185,0)
 ;error checks
"RTN","ECXUTL",186,0)
 I $L(ECXTIME)'=6 S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",187,0)
 F J=1:1:6 S JJ=$E(ECXTIME,J) I $A(JJ)<48!($A(JJ)>57) S ECXTIMEX="000000" Q
"RTN","ECXUTL",188,0)
 I $D(ECXTIMEX) Q ECXTIMEX
"RTN","ECXUTL",189,0)
 S HH=$E(ECXTIME,1,2),MM=$E(ECXTIME,3,4),SS=$E(ECXTIME,5,6)
"RTN","ECXUTL",190,0)
 I +HH>23!(+MM>59)!(+SS>59) S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",191,0)
 ;if ecxmil=1, return military time
"RTN","ECXUTL",192,0)
 I $G(ECXMIL) S ECXTIMEX=HH_":"_MM_":"_SS Q ECXTIMEX
"RTN","ECXUTL",193,0)
 ;otherwise, use am/pm format
"RTN","ECXUTL",194,0)
 S X="0."_ECXTIME
"RTN","ECXUTL",195,0)
 S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200
"RTN","ECXUTL",196,0)
 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M"
"RTN","ECXUTL",197,0)
 S ECXTIMEX=X
"RTN","ECXUTL",198,0)
 Q ECXTIMEX
"RTN","ECXUTL",199,0)
 ;
"RTN","ECXUTL",200,0)
AOIRPOW(ECXDFN,ECXAIP) ;get data on ao, ir, pow status
"RTN","ECXUTL",201,0)
 ;
"RTN","ECXUTL",202,0)
 ;   input
"RTN","ECXUTL",203,0)
 ;   ECXDFN = ien in file #2 (required)
"RTN","ECXUTL",204,0)
 ;   ECXAIP = array for returned data (required)
"RTN","ECXUTL",205,0)
 ;            (passed by reference)
"RTN","ECXUTL",206,0)
 ;
"RTN","ECXUTL",207,0)
 ;   output
"RTN","ECXUTL",208,0)
 ;   ECXAIP("AO") = agent orange status
"RTN","ECXUTL",209,0)
 ;   ECXAIP("IR") = ion. radiation status
"RTN","ECXUTL",210,0)
 ;   ECXAIP("POW") = pow status
"RTN","ECXUTL",211,0)
 ;   ECXAIP("POWL") = pow location/period
"RTN","ECXUTL",212,0)
 ;
"RTN","ECXUTL",213,0)
 N J
"RTN","ECXUTL",214,0)
 S ECXAIP("AO")="",ECXAIP("IR")="",ECXAIP("POW")="",ECXAIP("POWL")=""
"RTN","ECXUTL",215,0)
 S ECXAIP("AO")=$P($G(^DPT(ECXDFN,.321)),U,2),ECXAIP("IR")=$P($G(^(.321)),U,3)
"RTN","ECXUTL",216,0)
 S ECXAIP("POW")=$P($G(^DPT(ECXDFN,.52)),U,5),ECXAIP("POWL")=$P($G(^(.52)),U,6)
"RTN","ECXUTL",217,0)
 F J="AO","IR","POW" I ECXAIP(J)="" S ECXAIP(J)="U"
"RTN","ECXUTL",218,0)
 I ECXAIP("POWL"),ECXAIP("POW")'="Y" S ECXAIP("POWL")=""
"RTN","ECXUTL",219,0)
 Q
"RTN","ECXUTL",220,0)
 ;
"RTN","ECXUTL",221,0)
PRVCLASS(PERS,DATE) ;determine the person class and return va code
"RTN","ECXUTL",222,0)
 ;   input
"RTN","ECXUTL",223,0)
 ;   PERS  = pointer to file #200 (required)
"RTN","ECXUTL",224,0)
 ;   DATE  = date on which person class must be active (required)
"RTN","ECXUTL",225,0)
 ;           (internal Fileman format)
"RTN","ECXUTL",226,0)
 ;   output
"RTN","ECXUTL",227,0)
 ;   VACODE = VA code field from file #8932.1
"RTN","ECXUTL",228,0)
 ;            (exactly 7 characters in length)
"RTN","ECXUTL",229,0)
 N ECX,VACODE
"RTN","ECXUTL",230,0)
 S VACODE=""
"RTN","ECXUTL",231,0)
 S ECHEAD=$G(ECHEAD)
"RTN","ECXUTL",232,0)
 S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",233,0)
 ;if no person class use alternate date to resolve person class
"RTN","ECXUTL",234,0)
 I +ECX'>0 D
"RTN","ECXUTL",235,0)
 .N DATE
"RTN","ECXUTL",236,0)
 .S DATE=$S(ECHEAD="LAB":$P(EC1,U,14),ECHEAD="LAR":$P(EC1,U,4),ECHEAD="PRE":$P(ECDATA,U,13),ECHEAD="RAD":$P($G(^RAO(75.1,+$G(ECXIEN),0)),U,16),1:"")
"RTN","ECXUTL",237,0)
 .S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",238,0)
 .Q
"RTN","ECXUTL",239,0)
 S VACODE=$P(ECX,U,7) I $L(VACODE)'=7 S VACODE=""
"RTN","ECXUTL",240,0)
 Q VACODE
"RTN","ECXUTL",241,0)
 ;
"RTN","ECXUTL",242,0)
PATCAT(DFN) ; Extrinsic function to return OTHER ELIGIBILITY CODE 
"RTN","ECXUTL",243,0)
 ;            in patcat field in the extract file if the PATIENT TYPE 
"RTN","ECXUTL",244,0)
 ;            = active duty, retire, tricare
"RTN","ECXUTL",245,0)
 ;  INPUT DFN - ien in file #2 (required)
"RTN","ECXUTL",246,0)
 ; OUTPUT PATCAT - Patient Category mapping to be filed in extracts
"RTN","ECXUTL",247,0)
 ;
"RTN","ECXUTL",248,0)
 N ELIG,I,PATCAT,PCAT,TYPE
"RTN","ECXUTL",249,0)
 S PATCAT=""
"RTN","ECXUTL",250,0)
 I '$G(DFN) Q PATCAT
"RTN","ECXUTL",251,0)
 S TYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL",252,0)
 I (TYPE="MI")!(TYPE="AC")!(TYPE="TR") D
"RTN","ECXUTL",253,0)
 .;get first other eligibilty code that matches in list, if it exists
"RTN","ECXUTL",254,0)
 .S ELIG=0 F  S ELIG=$O(^DPT(DFN,"E",ELIG)) Q:(ELIG'>0)!((ELIG>0)&(PATCAT'=""))  D
"RTN","ECXUTL",255,0)
 ..; if get last code, use line below
"RTN","ECXUTL",256,0)
 ..;S ELIG=0 F  S ELIG=$O(^DPT(DFN,"E",ELIG)) Q:(ELIG'>0)  D
"RTN","ECXUTL",257,0)
 ..S PCAT=$$GET1^DIQ(8,ELIG,.01)
"RTN","ECXUTL",258,0)
 ..F I=1:1 Q:$T(ELIGCDS+I)=" Q"  I PCAT=$P($T(ELIGCDS+I),";;",2) S PATCAT=$P($T(ELIGCDS+I),";;",3)
"RTN","ECXUTL",259,0)
 Q PATCAT
"RTN","ECXUTL",260,0)
 ;
"RTN","ECXUTL",261,0)
ORDPROV(DFN,ON,PSJTMP) ; get provider using order reference number
"RTN","ECXUTL",262,0)
 ;  input:  
"RTN","ECXUTL",263,0)
 ;    dfn
"RTN","ECXUTL",264,0)
 ;    on     - order reference number
"RTN","ECXUTL",265,0)
 ;    psjtmp - 1 if temp global node = PSJ1, else global node = PSJ
"RTN","ECXUTL",266,0)
 ;
"RTN","ECXUTL",267,0)
 ;  output:
"RTN","ECXUTL",268,0)
 ;    Provider IEN from PARMACY PATIENT File (#55) (1st piece ^TMP( )
"RTN","ECXUTL",269,0)
 ;
"RTN","ECXUTL",270,0)
 ;  NOTE:  Don't kill ^TMP here, used in ECXBCM, killed there
"RTN","ECXUTL",271,0)
 ;
"RTN","ECXUTL",272,0)
 I $G(DFN)']"" Q 0
"RTN","ECXUTL",273,0)
 I $G(ON)']"" Q 0
"RTN","ECXUTL",274,0)
 D EN^PSJBCMA1(DFN,ON,PSJTMP) ;IA#2829
"RTN","ECXUTL",275,0)
 Q +($G(^TMP("PSJ",$J,1)))
"RTN","ECXUTL",276,0)
 ;
"RTN","ECXUTL",277,0)
ELIGCDS ;
"RTN","ECXUTL",278,0)
 ;;AD-ACTIVE DUTY;;AD
"RTN","ECXUTL",279,0)
 ;;REC-RECRUIT;;REC
"RTN","ECXUTL",280,0)
 ;;ADD-ACTIVE DUTY DEPENDENT;;ADD
"RTN","ECXUTL",281,0)
 ;;FNRS-NON REMARRIED SPOUSE;;FNRS
"RTN","ECXUTL",282,0)
 ;;RET-RETIREE;;RET
"RTN","ECXUTL",283,0)
 ;;RETD-RETIREE DEPENDENT;;RETD
"RTN","ECXUTL",284,0)
 ;;RES-RESERVIST;;RES
"RTN","ECXUTL",285,0)
 ;;TFL-TRICARE FOR LIFE;;TFL
"RTN","ECXUTL",286,0)
 ;;TDRL-TEMPORARY DISABILITY;;TDRL
"RTN","ECXUTL",287,0)
 Q
"RTN","ECXUTL2")
0^38^B71508218^B71058121
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ;9/27/10  14:14
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105,112,120,127**;Dec 22, 1997;Build 36
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11;13",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",34,0)
 ;I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",35,0)
 I ECXARR(727.1,ECXIEN,13)="YES" D  Q
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",40,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",41,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",42,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",43,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",44,0)
 .W !!
"RTN","ECXUTL2",45,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",46,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",47,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",48,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",49,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",50,0)
 S ECXVER=7
"RTN","ECXUTL2",51,0)
 Q
"RTN","ECXUTL2",52,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",53,0)
 ;  DFN   =
"RTN","ECXUTL2",54,0)
 ;  DT    =
"RTN","ECXUTL2",55,0)
 ;  PAR   =
"RTN","ECXUTL2",56,0)
 ;  FLG   =
"RTN","ECXUTL2",57,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",58,0)
 D KPATDEM
"RTN","ECXUTL2",59,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",60,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",61,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",62,0)
 I PAR["1" D
"RTN","ECXUTL2",63,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",64,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",65,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",66,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",67,0)
 I PAR["2" D
"RTN","ECXUTL2",68,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",69,0)
 .S ECXCNTRY=PAT("COUNTRY")
"RTN","ECXUTL2",70,0)
 I PAR["3" D
"RTN","ECXUTL2",71,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",72,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",73,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",74,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",75,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",76,0)
 I PAR["5" D
"RTN","ECXUTL2",77,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",78,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",79,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",80,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",81,0)
 I PAR["6" D
"RTN","ECXUTL2",82,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",83,0)
 I FLG'[3 D
"RTN","ECXUTL2",84,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",85,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",86,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",87,0)
 I FLG'[2 D
"RTN","ECXUTL2",88,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",89,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",90,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",91,0)
 Q 1
"RTN","ECXUTL2",92,0)
 ;
"RTN","ECXUTL2",93,0)
KPATDEM ;
"RTN","ECXUTL2",94,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",95,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",96,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",97,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",98,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",99,0)
 K ECXSBGRP
"RTN","ECXUTL2",100,0)
 Q
"RTN","ECXUTL2",101,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",102,0)
 ;and user enrollee status
"RTN","ECXUTL2",103,0)
 ; input
"RTN","ECXUTL2",104,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",105,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",106,0)
 ; output
"RTN","ECXUTL2",107,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",108,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",109,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",110,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",111,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",112,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",113,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",114,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",115,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",116,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",117,0)
 ;DBIA #3989
"RTN","ECXUTL2",118,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",119,0)
 ;Patient type
"RTN","ECXUTL2",120,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",121,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",122,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",123,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",124,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",125,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",126,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",127,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",128,0)
 ;find previous enrollment
"RTN","ECXUTL2",129,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",130,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",131,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",132,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",133,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",134,0)
 . I "^2^19^"[("^"_$G(ENR("STATUS"))_"^"),$G(ENR("EFFDATE"))>RNDT D
"RTN","ECXUTL2",135,0)
 . . S ECXSTAT=$G(ENR("STATUS")),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",136,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",137,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",138,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",139,0)
 I FL Q 1
"RTN","ECXUTL2",140,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",141,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",142,0)
 Q 1
"RTN","ECXUTL2",143,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",144,0)
 ; input
"RTN","ECXUTL2",145,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",146,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",147,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",148,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",149,0)
 ; output
"RTN","ECXUTL2",150,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",151,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",152,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",153,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",154,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",155,0)
 ;get pc team data
"RTN","ECXUTL2",156,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",157,0)
 ;get primary pc provider data
"RTN","ECXUTL2",158,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",159,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",160,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",161,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",162,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",163,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",164,0)
 S ECASPR=""
"RTN","ECXUTL2",165,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",166,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",167,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",168,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",169,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",170,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",171,0)
 ;assemble
"RTN","ECXUTL2",172,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",173,0)
 Q ECXPRIME
"RTN","ECXUTL2",174,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",175,0)
 ; input
"RTN","ECXUTL2",176,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",177,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",178,0)
 ; output
"RTN","ECXUTL2",179,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",180,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",181,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",182,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",183,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",184,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",185,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",186,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",187,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",188,0)
 N ECXATPPC
"RTN","ECXUTL2",189,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",190,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",191,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",192,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",193,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",194,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",195,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",196,0)
 I ECMN D
"RTN","ECXUTL2",197,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",198,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",199,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",200,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",201,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",202,0)
 .I ECWARD D
"RTN","ECXUTL2",203,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",204,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",205,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",206,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",207,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",208,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",209,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",210,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",211,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",212,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",213,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",214,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",215,0)
 Q ECXINP
"RTN","ECXUTL2",216,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",217,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",218,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",219,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",220,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",221,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",222,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",223,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",224,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",225,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",226,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",227,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",228,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",229,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",230,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",231,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",232,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",233,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",234,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",235,0)
 Q
"RTN","ECXUTL4")
0^35^B55297923^B51958350
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ; 11/26/07 10:58am
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92,105,112,120,127**;Dec 22,1997;Build 36
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-297, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<298) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S ECXSTP=+$G(ECXSTP),ECXSTP2=+$G(ECXSTP2)
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS and ECQ (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... ;- Use observation stop code for IVP
"RTN","ECXUTL4",101,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS")!(ECXEXT="ECQ") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",102,0)
 ... ;
"RTN","ECXUTL4",103,0)
 ... ;- Use cost center to obtain stop code for ECS
"RTN","ECXUTL4",104,0)
 ... I ECXEXT="ECS" D  Q:'ECXSTCD
"RTN","ECXUTL4",105,0)
 .... S ECXSTCD=$$ECSCOST(ECXSTP2)
"RTN","ECXUTL4",106,0)
 ....;
"RTN","ECXUTL4",107,0)
 ....;- If no cost center, use 1st 3 chars of DSS ID
"RTN","ECXUTL4",108,0)
 .... I ECXSTCD="" S ECXSTCD=+$E(ECXSTP,1,3)
"RTN","ECXUTL4",109,0)
 ... ;
"RTN","ECXUTL4",110,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP")!(ECXEXT="IVP") S ECXSTCD="PHA"
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",115,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",116,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",117,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",118,0)
 ... I ECXEXT="BCM" S ECXSTCD="BCM"
"RTN","ECXUTL4",119,0)
 ... ;
"RTN","ECXUTL4",120,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",121,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",122,0)
 ... ;
"RTN","ECXUTL4",123,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",124,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",125,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",126,0)
 ... ;
"RTN","ECXUTL4",127,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",128,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",129,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",130,0)
 Q ENCNUM
"RTN","ECXUTL4",131,0)
 ;
"RTN","ECXUTL4",132,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",133,0)
 ;
"RTN","ECXUTL4",134,0)
 ; Input:
"RTN","ECXUTL4",135,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",136,0)
 ;
"RTN","ECXUTL4",137,0)
 ;Output:
"RTN","ECXUTL4",138,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",139,0)
 ;
"RTN","ECXUTL4",140,0)
 N ECXDT
"RTN","ECXUTL4",141,0)
 S ECXDT=""
"RTN","ECXUTL4",142,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",143,0)
 ;
"RTN","ECXUTL4",144,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",145,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",146,0)
 ;
"RTN","ECXUTL4",147,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",148,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",149,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",150,0)
 ;
"RTN","ECXUTL4",151,0)
 ;
"RTN","ECXUTL4",152,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",153,0)
 ;
"RTN","ECXUTL4",154,0)
 ; Input:
"RTN","ECXUTL4",155,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",156,0)
 ;
"RTN","ECXUTL4",157,0)
 ;Output:
"RTN","ECXUTL4",158,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",159,0)
 ;
"RTN","ECXUTL4",160,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",161,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",162,0)
 ;
"RTN","ECXUTL4",163,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",164,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",165,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",166,0)
 ;
"RTN","ECXUTL4",167,0)
 ;- Extract date portion
"RTN","ECXUTL4",168,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",169,0)
 ;
"RTN","ECXUTL4",170,0)
 ;- Get month (MM)
"RTN","ECXUTL4",171,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",172,0)
 ;
"RTN","ECXUTL4",173,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",174,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",175,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",176,0)
 ;
"RTN","ECXUTL4",177,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",178,0)
 ;
"RTN","ECXUTL4",179,0)
 ; Input:
"RTN","ECXUTL4",180,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",181,0)
 ;
"RTN","ECXUTL4",182,0)
 ;Output:
"RTN","ECXUTL4",183,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",184,0)
 ;
"RTN","ECXUTL4",185,0)
 N ECXCNH
"RTN","ECXUTL4",186,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",187,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",188,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",189,0)
 ;
"RTN","ECXUTL4",190,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",191,0)
 ;
"RTN","ECXUTL4",192,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",193,0)
 ;
"RTN","ECXUTL4",194,0)
 ; Input:
"RTN","ECXUTL4",195,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",196,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",197,0)
 ;
"RTN","ECXUTL4",198,0)
 ;Output:
"RTN","ECXUTL4",199,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",200,0)
 ;
"RTN","ECXUTL4",201,0)
 N ECXCANC
"RTN","ECXUTL4",202,0)
 S ECXCANC=""
"RTN","ECXUTL4",203,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",204,0)
 ;
"RTN","ECXUTL4",205,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",206,0)
 D
"RTN","ECXUTL4",207,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",208,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",209,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",210,0)
 Q ECXCANC
"RTN","ECXUTL4",211,0)
 ;
"RTN","ECXUTL4",212,0)
ECSCOST(ECXCOST) ;Get ECS extract stop code based on cost center
"RTN","ECXUTL4",213,0)
 ;
"RTN","ECXUTL4",214,0)
 ;
"RTN","ECXUTL4",215,0)
 ; Input:
"RTN","ECXUTL4",216,0)
 ;   ECXCOST  - ECS extract cost center
"RTN","ECXUTL4",217,0)
 ;
"RTN","ECXUTL4",218,0)
 ;Output:
"RTN","ECXUTL4",219,0)
 ;              ECS extract stop code
"RTN","ECXUTL4",220,0)
 ;
"RTN","ECXUTL4",221,0)
 N ECXFND,ECXSTOP,I
"RTN","ECXUTL4",222,0)
 S ECXFND=0
"RTN","ECXUTL4",223,0)
 S ECXSTOP=""
"RTN","ECXUTL4",224,0)
 S ECXCOST=+$G(ECXCOST)
"RTN","ECXUTL4",225,0)
 D
"RTN","ECXUTL4",226,0)
 . I 'ECXCOST Q
"RTN","ECXUTL4",227,0)
 . F I=1:1 Q:ECXFND!($P($T(COST+I),";;",2)="END")  D
"RTN","ECXUTL4",228,0)
 .. I ECXCOST=$P($T(COST+I),";;",2) S ECXSTOP=$P($T(COST+I),";;",3),ECXFND=1
"RTN","ECXUTL4",229,0)
 Q ECXSTOP
"RTN","ECXUTL4",230,0)
 ;
"RTN","ECXUTL4",231,0)
COST ;- ECS Cost Center and stop code
"RTN","ECXUTL4",232,0)
 ;;833100;;652
"RTN","ECXUTL4",233,0)
 ;;833200;;653
"RTN","ECXUTL4",234,0)
 ;;833300;;681
"RTN","ECXUTL4",235,0)
 ;;834100;;651
"RTN","ECXUTL4",236,0)
 ;;834200;;650
"RTN","ECXUTL4",237,0)
 ;;834300;;681
"RTN","ECXUTL4",238,0)
 ;;834400;;654
"RTN","ECXUTL4",239,0)
 ;;834500;;681
"RTN","ECXUTL4",240,0)
 ;;834600;;681
"RTN","ECXUTL4",241,0)
 ;;834700;;681
"RTN","ECXUTL4",242,0)
 ;;834800;;681
"RTN","ECXUTL4",243,0)
 ;;834900;;681
"RTN","ECXUTL4",244,0)
 ;;836100;;654
"RTN","ECXUTL4",245,0)
 ;;836200;;654
"RTN","ECXUTL4",246,0)
 ;;END
"RTN","ECXUTL4",247,0)
 ;
"RTN","ECXUTL4",248,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",249,0)
 ;
"RTN","ECXUTL4",250,0)
 ; Input:
"RTN","ECXUTL4",251,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",252,0)
 ;
"RTN","ECXUTL4",253,0)
 ;Output:
"RTN","ECXUTL4",254,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",255,0)
 ;
"RTN","ECXUTL4",256,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",257,0)
 S ECXHNCI=""
"RTN","ECXUTL4",258,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",259,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",260,0)
 Q ECXHNCI
"RTN","ECXUTL4",261,0)
 ;
"RTN","ECXUTL4",262,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",263,0)
 ; treating specialty
"RTN","ECXUTL4",264,0)
 ; Input:
"RTN","ECXUTL4",265,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",266,0)
 ;
"RTN","ECXUTL4",267,0)
 ; Output:
"RTN","ECXUTL4",268,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",269,0)
 ;
"RTN","ECXUTL4",270,0)
 N TS,SC,I
"RTN","ECXUTL4",271,0)
 S TS="^18^23^24^41^65^94^108^",SC="^293^295^290^296^291^292^297^"
"RTN","ECXUTL4",272,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",273,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL4",274,0)
OEFDATA ;
"RTN","ECXUTL4",275,0)
 ;get patient OEF/OIF status and date of return
"RTN","ECXUTL4",276,0)
 S (ECXOEF,ECXOEFDT)=""
"RTN","ECXUTL4",277,0)
 I $G(VASV(11))>0 S ECXOEF=ECXOEF_"OIF"
"RTN","ECXUTL4",278,0)
 I $G(VASV(12))>0 S ECXOEF=ECXOEF_"OEF"
"RTN","ECXUTL4",279,0)
 I $G(VASV(13))>0 S ECXOEF=ECXOEF_"UNK"
"RTN","ECXUTL4",280,0)
 I ECXOEF'="" D
"RTN","ECXUTL4",281,0)
 . S ECXOEFDT=""
"RTN","ECXUTL4",282,0)
 . I $G(VASV(11))>0 S ECXOEFDT=$P($G(VASV(11,$G(VASV(11)),3)),"^")
"RTN","ECXUTL4",283,0)
 . I $G(VASV(12))>0,$P($G(VASV(12,$G(VASV(12)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(12,$G(VASV(12)),3)),"^")
"RTN","ECXUTL4",284,0)
 . I $G(VASV(13))>0,$P($G(VASV(13,$G(VASV(13)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(13,$G(VASV(13)),3)),"^")
"RTN","ECXUTL4",285,0)
 . I ECXOEFDT>0 S ECXOEFDT=17000000+ECXOEFDT
"RTN","ECXUTL4",286,0)
 ;
"RTN","ECXUTL4",287,0)
 S ECXPAT("ECXOEF")=ECXOEF
"RTN","ECXUTL4",288,0)
 S ECXPAT("ECXOEFDT")=ECXOEFDT
"RTN","ECXUTL4",289,0)
 Q
"RTN","ECXUTL4",290,0)
 ;
"RTN","ECXUTL4",291,0)
SHAD(ECXDFN) ; Get PROJ 112/SHAD indicator
"RTN","ECXUTL4",292,0)
 ;
"RTN","ECXUTL4",293,0)
 ; Input:
"RTN","ECXUTL4",294,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",295,0)
 ;
"RTN","ECXUTL4",296,0)
 ;Output:
"RTN","ECXUTL4",297,0)
 ;             PROJ 112/SHAD DX (Y/N/U)
"RTN","ECXUTL4",298,0)
 ;             Error -1, missing parameter
"RTN","ECXUTL4",299,0)
 ;
"RTN","ECXUTL4",300,0)
 N ECXSHAD
"RTN","ECXUTL4",301,0)
 S ECXDFN=$G(ECXDFN)
"RTN","ECXUTL4",302,0)
 S ECXSHAD=$$GETSHAD^DGUTL3(ECXDFN)
"RTN","ECXUTL4",303,0)
 S ECXSHAD=$S(ECXSHAD=1:"Y",ECXSHAD=0:"N",ECXSHAD="":"U",1:-1)
"RTN","ECXUTL4",304,0)
 Q ECXSHAD
"RTN","ECXWRD")
0^22^B14824338^B14814274
"RTN","ECXWRD",1,0)
ECXWRD ;BIR/CML,ALB/JAP  Print Active Wards for Fiscal Year ;9/17/10  15:10
"RTN","ECXWRD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,127**;Dec 22, 1997;Build 36
"RTN","ECXWRD",3,0)
 ;
"RTN","ECXWRD",4,0)
EN ;entry point from option
"RTN","ECXWRD",5,0)
 N DATE,YR,MON,FY,POP,ZTSK
"RTN","ECXWRD",6,0)
 D NOW^%DTC S DATE=$$FMTE^XLFDT(%,"5D"),YR=+$P(DATE,"/",3),MON=+$P(DATE,"/",1),FY=$S(MON<10:YR,1:YR+1)
"RTN","ECXWRD",7,0)
 W !!,"This option prints a list of all MAS wards that were active at any time"
"RTN","ECXWRD",8,0)
 W !,"during FY",FY,".  The list is sorted by Medical Center Division and displays"
"RTN","ECXWRD",9,0)
 W !,"the pointer to the Hospital Location file (#44) and DSS Department data"
"RTN","ECXWRD",10,0)
 W !,"if available."
"RTN","ECXWRD",11,0)
 W !!,"This report requires a print width of 132 characters.",!!
"RTN","ECXWRD",12,0)
 S ECXPGM="START^ECXWRD",ECXDESC="DSS-Print Active Wards for Fiscal Year",ECXSAVE("FY")=""
"RTN","ECXWRD",13,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXWRD",14,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXWRD",15,0)
 .W !,"No device selected... try again later.!!"
"RTN","ECXWRD",16,0)
 I ECXSAVE("ZTSK")=0 U IO D START^ECXWRD
"RTN","ECXWRD",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXWRD",18,0)
 D HOME^%ZIS
"RTN","ECXWRD",19,0)
 K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXWRD",20,0)
 K ECXDIVN,ECFYB,ECFYE,ECXWD,ECXWDN,ECXDEPT,ECXDESC,FY,^TMP("ECXWRD",$J)
"RTN","ECXWRD",21,0)
 Q
"RTN","ECXWRD",22,0)
START ;
"RTN","ECXWRD",23,0)
 N QFLG,%,%H,%I,JJ,SS,HDT,DATA
"RTN","ECXWRD",24,0)
 K ^TMP("ECXWRD",$J)
"RTN","ECXWRD",25,0)
 S ECXFY=FY-1700
"RTN","ECXWRD",26,0)
 S ECFYB=ECXFY-1_"1000",ECFYE=ECXFY_"1001"
"RTN","ECXWRD",27,0)
 ;gather data
"RTN","ECXWRD",28,0)
 S ECXWD=0
"RTN","ECXWRD",29,0)
 F  S ECXWD=$O(^DIC(42,ECXWD)) Q:'ECXWD  I $D(^DIC(42,ECXWD,0))  D
"RTN","ECXWRD",30,0)
 .S EC=^DIC(42,ECXWD,0) D CHK Q:X=1
"RTN","ECXWRD",31,0)
 .S DR=".01;.03;.015;.017;44",DIQ(0)="IE",DIQ="ECX",DA=ECXWD,DIC="^DIC(42," K ECX D EN^DIQ1
"RTN","ECXWRD",32,0)
 .S ECXWDN=$G(ECX(42,ECXWD,.01,"E"))
"RTN","ECXWRD",33,0)
 .S ECXDIVN=$G(ECX(42,ECXWD,.015,"E")) S:ECXDIVN="" ECXDIVN="UNKNOWN"
"RTN","ECXWRD",34,0)
 .S ^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)=$G(ECX(42,ECXWD,44,"I"))_U_$G(ECX(42,ECXWD,.03,"E"))_U_$G(ECX(42,ECXWD,.017,"E"))_U
"RTN","ECXWRD",35,0)
 .I $D(^ECX(727.4,ECXWD)) D
"RTN","ECXWRD",36,0)
 ..S ECXDEPT=$P(^ECX(727.4,ECXWD,0),U,2) Q:ECXDEPT=""
"RTN","ECXWRD",37,0)
 ..D REVERSE^ECXDSSD(ECXDEPT,.ECXDESC)
"RTN","ECXWRD",38,0)
 ..S ^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)=^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)_ECXDEPT_U_ECXDESC
"RTN","ECXWRD",39,0)
 ;print the report
"RTN","ECXWRD",40,0)
 S (PG,QFLG)=0,$P(LN,"-",130)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y
"RTN","ECXWRD",41,0)
 D HDR
"RTN","ECXWRD",42,0)
 I '$D(^TMP("ECXWRD",$J)) W !!,"NO DATA FOUND FOR THIS REPORT" Q
"RTN","ECXWRD",43,0)
 S ECXDIVN=""
"RTN","ECXWRD",44,0)
 F  S ECXDIVN=$O(^TMP("ECXWRD",$J,ECXDIVN)) Q:ECXDIVN=""  Q:QFLG  D
"RTN","ECXWRD",45,0)
 .D:$Y+4>IOSL HDR Q:QFLG
"RTN","ECXWRD",46,0)
 .W !!,"DIVISION: ",ECXDIVN S ECXWDN="" D
"RTN","ECXWRD",47,0)
 ..F  S ECXWDN=$O(^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)) Q:ECXWDN=""  Q:QFLG  D
"RTN","ECXWRD",48,0)
 ...S DATA=^TMP("ECXWRD",$J,ECXDIVN,ECXWDN),ECXDEPT=$P(DATA,U,4)
"RTN","ECXWRD",49,0)
 ...D:$Y+4>IOSL HDR Q:QFLG  W !?5,$E(ECXWDN,1,20),?30,ECXDEPT,?45,$P(DATA,U,1),?60,$E($P(DATA,U,2),1,18),?80,$P(DATA,U,3)
"RTN","ECXWRD",50,0)
 ...Q:ECXDEPT=""
"RTN","ECXWRD",51,0)
 ...D:$Y+4>IOSL HDR Q:QFLG
"RTN","ECXWRD",52,0)
 ...;W !?30,"[Svc: "_$E($P(DATA,U,5),1,20)_"   "_"Prod. Unit: "_$E($P(DATA,U,6),1,40)_"   "_"Div: "_$P(DATA,U,7)_"]",!
"RTN","ECXWRD",53,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXWRD",54,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",55,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXWRD",56,0)
 K ECXDIVN,ECFYB,ECFYE,ECXWD,ECXWDN,ECXDEPT,ECXDESC,FY,^TMP("ECXWRD",$J)
"RTN","ECXWRD",57,0)
 Q
"RTN","ECXWRD",58,0)
 ;
"RTN","ECXWRD",59,0)
CHK ;has this ward been active?
"RTN","ECXWRD",60,0)
 ; output      
"RTN","ECXWRD",61,0)
 ; X = 1 if inactive (out-of-service), 0 otherwise
"RTN","ECXWRD",62,0)
 ;
"RTN","ECXWRD",63,0)
 N ECX,ECY
"RTN","ECXWRD",64,0)
 S X=1 Q:'$D(ECXWD)  S ECY=ECFYB
"RTN","ECXWRD",65,0)
 I '$O(^DIC(42,ECXWD,"OOS",0)) S X=0 Q
"RTN","ECXWRD",66,0)
 S ECX=+$O(^DIC(42,ECXWD,"OOS","AINV",9999998.9-ECY)),ECX=$S($D(^DIC(42,ECXWD,"OOS",+$O(^(+ECX,0)),0)):^(0),1:"")
"RTN","ECXWRD",67,0)
 I '$P(ECX,U,6) S X=0 Q
"RTN","ECXWRD",68,0)
 I $P(ECX,U,6),'$P(ECX,U,4) S X=1 Q
"RTN","ECXWRD",69,0)
 I $P(ECX,U,6),$P(ECX,U,4)<ECFYE S X=0 Q
"RTN","ECXWRD",70,0)
 S X=1
"RTN","ECXWRD",71,0)
 Q
"RTN","ECXWRD",72,0)
 ;
"RTN","ECXWRD",73,0)
HDR ;header and page control
"RTN","ECXWRD",74,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",75,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXWRD",76,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Active Wards for FY",FY,!,"Printed on ",HDT,!
"RTN","ECXWRD",77,0)
 W !?30,"DSS",?45,"Pointer",?60,"Ward",?80,"Ward"
"RTN","ECXWRD",78,0)
 W !?5,"WARD",?30,"Department",?45,"to File #44",?60,"Service",?80,"Specialty"
"RTN","ECXWRD",79,0)
 W !,LN
"RTN","ECXWRD",80,0)
 Q
"RTN","ECXWRDX")
0^23^B4015763^B19919646
"RTN","ECXWRDX",1,0)
ECXWRDX ;ALB/MRY - Assign DSS Dept. to Ward ;Mar 2, 2010
"RTN","ECXWRDX",2,0)
 ;;3.0;DSS EXTRACTS;**8,127**;Dec 22, 1997;Build 36
"RTN","ECXWRDX",3,0)
 ;
"RTN","ECXWRDX",4,0)
EN ;entry point from menu option
"RTN","ECXWRDX",5,0)
 ;lookup ward
"RTN","ECXWRDX",6,0)
 N DIC,DIR,DTOUT,DUOUT,DIRUT,X,Y,DSSID,OUT,JJ,DA,DR,DIE,SS,DIQ
"RTN","ECXWRDX",7,0)
 S DIC(0)="AEMQZ",DIC="^DIC(42," D ^DIC G:$D(DTOUT)!($D(DUOUT))!(+Y<1) EXIT
"RTN","ECXWRDX",8,0)
 S ECXWARD=+Y,DSSID=""
"RTN","ECXWRDX",9,0)
 S DR=".01;.02;.03;.015;.017",DIQ(0)="IE",DIQ="ECX",DA=ECXWARD,DIC="^DIC(42," K ECX D EN^DIQ1
"RTN","ECXWRDX",10,0)
 S ECXWARD=ECXWARD_U_$G(ECX(42,+ECXWARD,.01,"E"))
"RTN","ECXWRDX",11,0)
 W !!,"Ward: ",?18,$P(ECXWARD,U,2)
"RTN","ECXWRDX",12,0)
 S ECXDIV=$G(ECX(42,+ECXWARD,.015,"I"))
"RTN","ECXWRDX",13,0)
 I +ECXDIV>0 D
"RTN","ECXWRDX",14,0)
 .S ECXDIV=ECXDIV_U_ECX(42,+ECXWARD,.015,"E")_"/"_$P(^DG(40.8,+ECXDIV,0),U,2)
"RTN","ECXWRDX",15,0)
 W !,"Ward Bedsection: ",?18,$G(ECX(42,+ECXWARD,.02,"E"))
"RTN","ECXWRDX",16,0)
 W !,"Ward Specialty: ",?18,$G(ECX(42,+ECXWARD,.017,"E"))
"RTN","ECXWRDX",17,0)
 W !,"Ward Service: ",?18,$G(ECX(42,+ECXWARD,.03,"E"))
"RTN","ECXWRDX",18,0)
 I +ECXDIV>0 W !,"Division: ",?18,$P(ECXDIV,U,2)
"RTN","ECXWRDX",19,0)
 ;dss id for division is needed to derive dss dept code
"RTN","ECXWRDX",20,0)
 I ECXDIV="" D  G EN
"RTN","ECXWRDX",21,0)
 .W !!,"Cannot proceed with assignment of DSS Department code for ward,"
"RTN","ECXWRDX",22,0)
 .W !,"because the ward is not associated with a Medical Center Division."
"RTN","ECXWRDX",23,0)
 .W !
"RTN","ECXWRDX",24,0)
 .I $E(IOST)="C" D
"RTN","ECXWRDX",25,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRDX",26,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR W !
"RTN","ECXWRDX",27,0)
 I '$D(^ECX(727.4,+ECXWARD)) D
"RTN","ECXWRDX",28,0)
 .S (X,DINUM)=+ECXWARD,DIC(0)="L",DLAYGO=727.4,DIC="^ECX(727.4,"
"RTN","ECXWRDX",29,0)
 .K DD,DO D FILE^DICN K DIC,DINUM,DLAYGO,X,Y
"RTN","ECXWRDX",30,0)
 S DIR(0)="727.4,1",DIR("A")="DSS Department for Ward" K X,Y
"RTN","ECXWRDX",31,0)
 W !! D ^DIR K DIR Q:$D(DIRUT)
"RTN","ECXWRDX",32,0)
 S ECXDEPT=Y
"RTN","ECXWRDX",33,0)
 S DA=+ECXWARD,DIE="^ECX(727.4,",DR="1///"_ECXDEPT W !! D ^DIE
"RTN","ECXWRDX",34,0)
 K X,Y
"RTN","ECXWRDX",35,0)
 Q
"RTN","ECXWRDX",36,0)
EXIT ;common exit point
"RTN","ECXWRDX",37,0)
 K ECX,ECXWARD,ECXDEPT,ECXSVC,ECXDIV
"RTN","ECXWRDX",38,0)
 Q
"VER")
8.0^22.0
"^DD",727.802,727.802,44,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^1;8^Q
"^DD",727.802,727.802,44,3)
Enter SHAD Status
"^DD",727.802,727.802,44,21,0)
^.001^2^2^3100216^^^^
"^DD",727.802,727.802,44,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.802,727.802,44,21,2,0)
if not, or U if unknown.
"^DD",727.802,727.802,44,23,0)
^.001^3^3^3100216^^^
"^DD",727.802,727.802,44,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,44,23,2,0)
in the ADMISSION EXTRACT file (#727.802), Shipboard Hazard and Defense
"^DD",727.802,727.802,44,23,3,0)
data is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.802,727.802,44,"DT")
3100211
"^DD",727.802,727.802,55,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^1;19^Q
"^DD",727.802,727.802,55,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N 
"^DD",727.802,727.802,55,21,0)
^.001^3^3^3100212^^
"^DD",727.802,727.802,55,21,1,0)
Indicates if treatment provided during this patient encounter is related
"^DD",727.802,727.802,55,21,2,0)
to exposure PROJ 112/SHAD condition.
"^DD",727.802,727.802,55,21,3,0)
Values: Y=YES, N=NO
"^DD",727.802,727.802,55,23,0)
^.001^6^6^3100212^^
"^DD",727.802,727.802,55,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file
"^DD",727.802,727.802,55,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.802,727.802,55,23,3,0)
ENCEVENT^PXAPI.  The ENCEVENT^PXAPI returns the Shipboard Hazard and
"^DD",727.802,727.802,55,23,4,0)
Defense conditions indicator stored at the PROJ 112/SHAD field (#80008) in
"^DD",727.802,727.802,55,23,5,0)
the VISIT file (#9000010).  The value will be stored in the output array
"^DD",727.802,727.802,55,23,6,0)
subscripted by "SHAD".  
"^DD",727.802,727.802,55,"DT")
3100212
"^DD",727.802,727.802,90,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;9^Q
"^DD",727.802,727.802,90,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.802,727.802,90,21,0)
^^6^6^3100831^
"^DD",727.802,727.802,90,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.802,727.802,90,21,2,0)
Care Center) Reconciliation.
"^DD",727.802,727.802,90,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.802,727.802,90,21,4,0)
process can function as designed. "Reconciliation" is the process used 
"^DD",727.802,727.802,90,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.802,727.802,90,21,6,0)
pays for.
"^DD",727.802,727.802,90,23,0)
^^7^7^3100831^
"^DD",727.802,727.802,90,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.802,727.802,90,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.802,727.802,90,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.802,727.802,90,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.802,727.802,90,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.802,727.802,90,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.802,727.802,90,23,7,0)
the value should be placed in this field.
"^DD",727.802,727.802,90,"DT")
3100903
"^DD",727.805,727.805,25,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;8^Q
"^DD",727.805,727.805,25,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.805,727.805,25,21,0)
^^6^6^3100901^
"^DD",727.805,727.805,25,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.805,727.805,25,21,2,0)
Care Center) Reconciliation.
"^DD",727.805,727.805,25,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.805,727.805,25,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.805,727.805,25,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.805,727.805,25,21,6,0)
pays for.
"^DD",727.805,727.805,25,23,0)
^^7^7^3100901^
"^DD",727.805,727.805,25,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.805,727.805,25,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.805,727.805,25,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.805,727.805,25,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.805,727.805,25,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.805,727.805,25,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.805,727.805,25,23,7,0)
the value should be placed in this field.
"^DD",727.805,727.805,25,"DT")
3100903
"^DD",727.808,727.808,37,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;14^Q
"^DD",727.808,727.808,37,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.808,727.808,37,21,0)
^^6^6^3100901^
"^DD",727.808,727.808,37,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.808,727.808,37,21,2,0)
Care Center) Reconciliation.
"^DD",727.808,727.808,37,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.808,727.808,37,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.808,727.808,37,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.808,727.808,37,21,6,0)
pays for.
"^DD",727.808,727.808,37,23,0)
^^7^7^3100901^
"^DD",727.808,727.808,37,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.808,727.808,37,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.808,727.808,37,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.808,727.808,37,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.808,727.808,37,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.808,727.808,37,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.808,727.808,37,23,7,0)
the value should be placed in this field.
"^DD",727.808,727.808,37,"DT")
3100903
"^DD",727.809,727.809,49,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^1;28^Q
"^DD",727.809,727.809,49,.1)

"^DD",727.809,727.809,49,3)
Enter SHAD Status
"^DD",727.809,727.809,49,21,0)
^.001^2^2^3100216^^
"^DD",727.809,727.809,49,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.809,727.809,49,21,2,0)
if not, or U if unknown.
"^DD",727.809,727.809,49,23,0)
^.001^3^3^3100216^^
"^DD",727.809,727.809,49,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.809,727.809,49,23,2,0)
in the UNIT DOSE LOCAL EXTRACT file (#727.809), Shipboard Hazard and
"^DD",727.809,727.809,49,23,3,0)
Defense data is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.809,727.809,49,"DT")
3100212
"^DD",727.809,727.809,83,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;27^Q
"^DD",727.809,727.809,83,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.809,727.809,83,21,0)
^^6^6^3100901^
"^DD",727.809,727.809,83,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.809,727.809,83,21,2,0)
Care Center) Reconciliation.
"^DD",727.809,727.809,83,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.809,727.809,83,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.809,727.809,83,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.809,727.809,83,21,6,0)
pays for.
"^DD",727.809,727.809,83,23,0)
^^7^7^3100901^^
"^DD",727.809,727.809,83,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.809,727.809,83,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.809,727.809,83,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.809,727.809,83,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.809,727.809,83,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.809,727.809,83,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.809,727.809,83,23,7,0)
the value should be placed in this field.
"^DD",727.809,727.809,83,"DT")
3100903
"^DD",727.81,727.81,15,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^0;16^Q
"^DD",727.81,727.81,15,.1)

"^DD",727.81,727.81,15,3)
Enter SHAD Status
"^DD",727.81,727.81,15,21,0)
^.001^2^2^3100216^^
"^DD",727.81,727.81,15,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.81,727.81,15,21,2,0)
if not, or U if unknown.
"^DD",727.81,727.81,15,23,0)
^.001^3^3^3100216^^
"^DD",727.81,727.81,15,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.81,727.81,15,23,2,0)
in the PRESCRIPTION EXTRACT file (#727.81), Shipboard Hazard and Defense
"^DD",727.81,727.81,15,23,3,0)
data is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.81,727.81,15,"DT")
3100212
"^DD",727.81,727.81,18,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^0;19^Q
"^DD",727.81,727.81,18,.1)

"^DD",727.81,727.81,18,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N
"^DD",727.81,727.81,18,21,0)
^^2^2^3100216^
"^DD",727.81,727.81,18,21,1,0)
Indicates if treatment provided during this patient encounter is related
"^DD",727.81,727.81,18,21,2,0)
to exposure PROJ 112/SHAD condition.  Values: Y=YES, N=NO
"^DD",727.81,727.81,18,23,0)
^^6^6^3100216^
"^DD",727.81,727.81,18,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file
"^DD",727.81,727.81,18,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.81,727.81,18,23,3,0)
ENCEVENT^PXAPI.  The ENCEVENT^PXAPI returns the Shipboard Hazard and
"^DD",727.81,727.81,18,23,4,0)
Defense conditions indicator stored at the PROJ 112/SHAD field (#80008) in
"^DD",727.81,727.81,18,23,5,0)
the VISIT file (#9000010).  The value will be stored in the output array
"^DD",727.81,727.81,18,23,6,0)
subscripted by "SHAD".  
"^DD",727.81,727.81,18,"DT")
3100216
"^DD",727.81,727.81,98,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;23^Q
"^DD",727.81,727.81,98,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.81,727.81,98,21,0)
^^6^6^3100901^
"^DD",727.81,727.81,98,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.81,727.81,98,21,2,0)
Care Center) Reconciliation.
"^DD",727.81,727.81,98,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.81,727.81,98,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.81,727.81,98,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.81,727.81,98,21,6,0)
pays for.
"^DD",727.81,727.81,98,23,0)
^^7^7^3100901^
"^DD",727.81,727.81,98,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.81,727.81,98,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.81,727.81,98,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.81,727.81,98,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.81,727.81,98,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.81,727.81,98,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.81,727.81,98,23,7,0)
the value should be placed in this field.
"^DD",727.81,727.81,98,"DT")
3100903
"^DD",727.811,727.811,105,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^2;32^Q
"^DD",727.811,727.811,105,3)
Enter SHAD Status
"^DD",727.811,727.811,105,21,0)
^.001^2^2^3100216^^
"^DD",727.811,727.811,105,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.811,727.811,105,21,2,0)
if not, or U if unknown.
"^DD",727.811,727.811,105,23,0)
^^3^3^3100216^
"^DD",727.811,727.811,105,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.811,727.811,105,23,2,0)
in the SURGERY EXTRACT file (#727.811), Shipboard Hazard and Defense data
"^DD",727.811,727.811,105,23,3,0)
is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.811,727.811,105,"DT")
3100216
"^DD",727.811,727.811,106,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^2;33^Q
"^DD",727.811,727.811,106,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N
"^DD",727.811,727.811,106,21,0)
^.001^2^2^3100216^^
"^DD",727.811,727.811,106,21,1,0)
Indicates if treatment provided during this patient encounter is related
"^DD",727.811,727.811,106,21,2,0)
to exposure PROJ 112/SHAD condition.  Values: Y=YES, N=NO
"^DD",727.811,727.811,106,23,0)
^^6^6^3100216^
"^DD",727.811,727.811,106,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file
"^DD",727.811,727.811,106,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.811,727.811,106,23,3,0)
ENCEVENT^PXAPI.  The ENCEVENT^PXAPI returns the Shipboard Hazard and
"^DD",727.811,727.811,106,23,4,0)
Defense conditions indicator stored at the PROJ 112/SHAD field (#80008) in
"^DD",727.811,727.811,106,23,5,0)
the VISIT file (#9000010).  The value will be stored in the output array
"^DD",727.811,727.811,106,23,6,0)
subscripted by "SHAD".  
"^DD",727.811,727.811,106,"DT")
3100216
"^DD",727.811,727.811,107,0)
FIRST ASST^F^^3;1^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,107,3)
Enter the name of the person assisting the surgeon during the major portion of the principal operation.
"^DD",727.811,727.811,107,21,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,107,21,1,0)
This is the name of the person assisting the surgeon during the operative
"^DD",727.811,727.811,107,21,2,0)
procedure.
"^DD",727.811,727.811,107,23,0)
^^3^3^3100222^
"^DD",727.811,727.811,107,23,1,0)
Derived from the FIRST ASST field (.15) in the SURGERY file (#130) for 
"^DD",727.811,727.811,107,23,2,0)
the surgical case.  It is a pointer to the NEW PERSON file (#200).  The 
"^DD",727.811,727.811,107,23,3,0)
data is stored as "2"_pointer value.
"^DD",727.811,727.811,107,"DT")
3100222
"^DD",727.811,727.811,108,0)
FIRST ASST PC^F^^3;2^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,108,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,108,21,0)
^^3^3^3100222^
"^DD",727.811,727.811,108,21,1,0)
The VA Code of the Person Class of the First Asst associated with this 
"^DD",727.811,727.811,108,21,2,0)
record.
"^DD",727.811,727.811,108,21,3,0)
The VA Code is always of the form "V"_six numeric digits; exactly 7.
"^DD",727.811,727.811,108,23,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,108,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS 
"^DD",727.811,727.811,108,23,2,0)
is the IEN from file #200.
"^DD",727.811,727.811,108,"DT")
3100222
"^DD",727.811,727.811,109,0)
FIRST ASST NPI^F^^3;3^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,109,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,109,21,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,109,21,1,0)
A standard unique life-long identifier of the First Assistant.  This 
"^DD",727.811,727.811,109,21,2,0)
field has a length of 15 characters.
"^DD",727.811,727.811,109,23,0)
^^4^4^3100222^
"^DD",727.811,727.811,109,23,1,0)
A standard unique life-long identifier of the First Assistant.  This 
"^DD",727.811,727.811,109,23,2,0)
field has a length of 15 characters.  The qualified identifier is 
"^DD",727.811,727.811,109,23,3,0)
retrieved via the supporting Kernel API:
"^DD",727.811,727.811,109,23,4,0)
$$NPI^XUSNPI.
"^DD",727.811,727.811,109,"DT")
3100222
"^DD",727.811,727.811,110,0)
SECOND ASST^F^^3;4^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,110,3)
Enter the name of the person assisting the surgeon.
"^DD",727.811,727.811,110,21,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,110,21,1,0)
This is the name of the second person assisting the surgeon during the
"^DD",727.811,727.811,110,21,2,0)
operative procedure.
"^DD",727.811,727.811,110,23,0)
^^3^3^3100222^
"^DD",727.811,727.811,110,23,1,0)
Derived from the SECOND ASST field (.16) in the SURGERY file (#130) for
"^DD",727.811,727.811,110,23,2,0)
the surgical case.  It is a pointer to the NEW PERSON file (#200). The
"^DD",727.811,727.811,110,23,3,0)
data is stored as "2"_pointer value.
"^DD",727.811,727.811,110,"DT")
3100222
"^DD",727.811,727.811,111,0)
SECOND ASST PC^F^^3;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,111,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,111,21,0)
^.001^3^3^3100222^^
"^DD",727.811,727.811,111,21,1,0)
The VA Code of the Person Class of the Second Asst associated with this
"^DD",727.811,727.811,111,21,2,0)
record.  The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.811,727.811,111,21,3,0)
7.  
"^DD",727.811,727.811,111,23,0)
^^2^2^3100222^
"^DD",727.811,727.811,111,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS
"^DD",727.811,727.811,111,23,2,0)
is the IEN from file #200.
"^DD",727.811,727.811,111,"DT")
3100222
"^DD",727.811,727.811,112,0)
SECOND ASST NPI^F^^3;6^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,112,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,112,21,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,112,21,1,0)
A standard unique life-long identifier of the Second Assistant.  This
"^DD",727.811,727.811,112,21,2,0)
field has a length of 15 characters.
"^DD",727.811,727.811,112,23,0)
^^3^3^3100222^
"^DD",727.811,727.811,112,23,1,0)
A standard unique life-long identifier of the Second Assistant.  This
"^DD",727.811,727.811,112,23,2,0)
field has a length of 15 characters.  The qualified identifier is
"^DD",727.811,727.811,112,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.811,727.811,112,"DT")
3100222
"^DD",727.811,727.811,113,0)
PERFUSIONIST^F^^3;7^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,113,3)
Enter the name of the person operating the cardio-pulmonary or organ perfusion apparatus.
"^DD",727.811,727.811,113,21,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,113,21,1,0)
This is the name of the person operating the cardio-pulmonary or organ
"^DD",727.811,727.811,113,21,2,0)
perfusion apparatus.
"^DD",727.811,727.811,113,23,0)
^^3^3^3100222^
"^DD",727.811,727.811,113,23,1,0)
Derived from the PERFUSIONIST field (.167) in the SURGERY file (#130) for
"^DD",727.811,727.811,113,23,2,0)
the surgical case.  It is a pointer to the NEW PERSON file (#200). The
"^DD",727.811,727.811,113,23,3,0)
data is stored as "2"_pointer value.  
"^DD",727.811,727.811,113,"DT")
3100222
"^DD",727.811,727.811,114,0)
PERFUSIONIST PC^F^^3;8^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,114,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,114,21,0)
^.001^3^3^3100222^^
"^DD",727.811,727.811,114,21,1,0)
The VA Code of the Person Class of the Perfusionist associated with this
"^DD",727.811,727.811,114,21,2,0)
record.  The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.811,727.811,114,21,3,0)
7.  
"^DD",727.811,727.811,114,23,0)
^^2^2^3100222^
"^DD",727.811,727.811,114,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS
"^DD",727.811,727.811,114,23,2,0)
is the IEN from file #200.
"^DD",727.811,727.811,114,"DT")
3100222
"^DD",727.811,727.811,115,0)
PERFUSIONIST NPI^F^^3;9^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,115,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,115,21,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,115,21,1,0)
A standard unique life-long identifier of the Perfusionist.  This
"^DD",727.811,727.811,115,21,2,0)
field has a length of 15 characters.
"^DD",727.811,727.811,115,23,0)
^^3^3^3100222^
"^DD",727.811,727.811,115,23,1,0)
A standard unique life-long identifier of the Perfusionist.  This field
"^DD",727.811,727.811,115,23,2,0)
has a length of 15 characters.  The qualified identifier is retrieved via
"^DD",727.811,727.811,115,23,3,0)
the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.811,727.811,115,"DT")
3100222
"^DD",727.811,727.811,116,0)
ASST PERFUSIONIST^F^^3;10^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,116,3)
Enter the name of the person assisting the perfusionist.
"^DD",727.811,727.811,116,21,0)
^.001^2^2^3100222^^^
"^DD",727.811,727.811,116,21,1,0)
This is the name of the person assisting the perfusionist.  If applicable,
"^DD",727.811,727.811,116,21,2,0)
this information may be valuable in documentation of this case.
"^DD",727.811,727.811,116,23,0)
^.001^3^3^3100222^^
"^DD",727.811,727.811,116,23,1,0)
Derived from the ASST PERFUSIONIST field (.168) in the SURGERY file (#130)
"^DD",727.811,727.811,116,23,2,0)
for the surgical case.  It is a pointer to the NEW PERSON file (#200). The
"^DD",727.811,727.811,116,23,3,0)
data is stored as "2"_pointer value.  
"^DD",727.811,727.811,116,"DT")
3100222
"^DD",727.811,727.811,117,0)
ASST PERFUSIONIST PC^F^^3;11^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,117,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,117,21,0)
^.001^3^3^3100222^^
"^DD",727.811,727.811,117,21,1,0)
The VA Code of the Person Class of the Asst Perfusionist associated with
"^DD",727.811,727.811,117,21,2,0)
this record.  The VA Code is always of the form "V"_six numeric digits;
"^DD",727.811,727.811,117,21,3,0)
exactly 7.  
"^DD",727.811,727.811,117,23,0)
^^2^2^3100222^
"^DD",727.811,727.811,117,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS
"^DD",727.811,727.811,117,23,2,0)
is the IEN from file #200.
"^DD",727.811,727.811,117,"DT")
3100222
"^DD",727.811,727.811,118,0)
ASST PERFUSIONIST NPI^F^^3;12^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,118,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,118,21,0)
^.001^2^2^3100222^^
"^DD",727.811,727.811,118,21,1,0)
A standard unique life-long identifier of the Asst Perfusionist.  This
"^DD",727.811,727.811,118,21,2,0)
field has a length of 15 characters.
"^DD",727.811,727.811,118,23,0)
^^3^3^3100222^
"^DD",727.811,727.811,118,23,1,0)
A standard unique life-long identifier of the Asst Perfusionist.  This
"^DD",727.811,727.811,118,23,2,0)
field has a length of 15 characters.  The qualified identifier is
"^DD",727.811,727.811,118,23,3,0)
retrieved via the supporting Kernel API: $$NPI^XUSNPI.
"^DD",727.811,727.811,118,"DT")
3100222
"^DD",727.811,727.811,119,0)
ANESTHESIA SEVERITY ASSESSMENT^F^^3;13^K:$L(X)>2!($L(X)<1) X
"^DD",727.811,727.811,119,3)
Enter ASA code: Number followed by 'E' if Emergency
"^DD",727.811,727.811,119,21,0)
^.001^25^25^3100226^^^^
"^DD",727.811,727.811,119,21,1,0)
NSQIP Definition (2004): Record the American Society of Anesthesiology
"^DD",727.811,727.811,119,21,2,0)
(ASA) Physical Status Classification of the patient's present physical
"^DD",727.811,727.811,119,21,3,0)
condition on a scale from 1-6 as it appears on the anesthesia record. Most
"^DD",727.811,727.811,119,21,4,0)
likely there will be a 2nd assessment of the ASA class prior to anesthesia
"^DD",727.811,727.811,119,21,5,0)
induction. If this is available, report this most recent assessment.
"^DD",727.811,727.811,119,21,6,0)
      The definitions are: 
"^DD",727.811,727.811,119,21,7,0)
      ASA 1 - A normal healthy patient 
"^DD",727.811,727.811,119,21,8,0)
      ASA 2 - A patient with mild systemic
"^DD",727.811,727.811,119,21,9,0)
              disease 
"^DD",727.811,727.811,119,21,10,0)
      ASA 3 - A patient with severe 
"^DD",727.811,727.811,119,21,11,0)
              systemic disease
"^DD",727.811,727.811,119,21,12,0)
      ASA 4 - A patient with severe 
"^DD",727.811,727.811,119,21,13,0)
              systemic disease that is a
"^DD",727.811,727.811,119,21,14,0)
              constant threat to life
"^DD",727.811,727.811,119,21,15,0)
      ASA 5 - A moribund patient who is not
"^DD",727.811,727.811,119,21,16,0)
              expected to survive without 
"^DD",727.811,727.811,119,21,17,0)
              the operation 
"^DD",727.811,727.811,119,21,18,0)
      ASA 6 - A declared brain-dead patient
"^DD",727.811,727.811,119,21,19,0)
              whose organs are being 
"^DD",727.811,727.811,119,21,20,0)
              removed for donor purposes 
"^DD",727.811,727.811,119,21,21,0)
                                 
"^DD",727.811,727.811,119,21,22,0)
  ASA 6 cases should be excluded.  
"^DD",727.811,727.811,119,21,23,0)
                              
"^DD",727.811,727.811,119,21,24,0)
  Classification numbers followed by an 'E'
"^DD",727.811,727.811,119,21,25,0)
  indicate an emergency.  
"^DD",727.811,727.811,119,23,0)
^^3^3^3100226^
"^DD",727.811,727.811,119,23,1,0)
Derived by using the ASA CLASS field (1.13) pointer in the SURGERY file
"^DD",727.811,727.811,119,23,2,0)
(#130) to return the ASA CLASS field (#.01) value from the ASA CLASS file
"^DD",727.811,727.811,119,23,3,0)
(#132.8).
"^DD",727.811,727.811,119,"DT")
3100226
"^DD",727.811,727.811,120,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^3;14^Q
"^DD",727.811,727.811,120,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.811,727.811,120,21,0)
^^6^6^3100901^
"^DD",727.811,727.811,120,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.811,727.811,120,21,2,0)
Care Center) Reconciliation.
"^DD",727.811,727.811,120,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.811,727.811,120,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.811,727.811,120,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.811,727.811,120,21,6,0)
pays for.
"^DD",727.811,727.811,120,23,0)
^^7^7^3100901^
"^DD",727.811,727.811,120,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.811,727.811,120,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.811,727.811,120,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.811,727.811,120,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.811,727.811,120,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.811,727.811,120,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.811,727.811,120,23,7,0)
the value should be placed in this field.
"^DD",727.811,727.811,120,"DT")
3100903
"^DD",727.813,727.813,43,0)
LAB BILLABLE PROCEDURE^S^Y:YES;N:NO;^1;22^Q
"^DD",727.813,727.813,43,3)
Is the test a billable LMIP procedure?
"^DD",727.813,727.813,43,21,0)
^.001^2^2^3100913^^^^
"^DD",727.813,727.813,43,21,1,0)
If a "Y" is entered it will indicate that the test is considered a  
"^DD",727.813,727.813,43,21,2,0)
billable LMIP procedure (lab billable means Lab staff workload).
"^DD",727.813,727.813,43,23,0)
^^5^5^3100913^
"^DD",727.813,727.813,43,23,1,0)
This field indicates if the test is considered to be a billable LMIP 
"^DD",727.813,727.813,43,23,2,0)
procedure or not (lab billable means Lab staff workload).
"^DD",727.813,727.813,43,23,3,0)
 
"^DD",727.813,727.813,43,23,4,0)
This field is derived from the BILLABLE PROCEDURE (#4) field of the WKLD
"^DD",727.813,727.813,43,23,5,0)
CODE (#64) file.
"^DD",727.813,727.813,43,"DT")
3100308
"^DD",727.813,727.813,44,0)
DSS FEEDER KEY^S^Y:YES;N:NO;^1;23^Q
"^DD",727.813,727.813,44,3)
Should the workload code be used for DSS Laboratory data collection?
"^DD",727.813,727.813,44,21,0)
^.001^2^2^3100913^^^^
"^DD",727.813,727.813,44,21,1,0)
If a "Y" is entered it indicates the WKLD Code should be
"^DD",727.813,727.813,44,21,2,0)
used for DSS Laboratory data collection.
"^DD",727.813,727.813,44,23,0)
^^6^6^3100913^
"^DD",727.813,727.813,44,23,1,0)
This field indicates whether the WKLD CODE should be used for DSS Laboratory
"^DD",727.813,727.813,44,23,2,0)
data collection. Codes that are defined as 'Y' (YES) will be extracted and
"^DD",727.813,727.813,44,23,3,0)
passed to the DSS Laboratory API.
"^DD",727.813,727.813,44,23,4,0)
 
"^DD",727.813,727.813,44,23,5,0)
This field is based on the value of the DSS FEEDER KEY (#14) field of the
"^DD",727.813,727.813,44,23,6,0)
WKLD CODE (#64) file.
"^DD",727.813,727.813,44,"DT")
3100913
"^DD",727.813,727.813,45,0)
DATA NAME^F^^2;1^K:$L(X)>40!($L(X)<3) X
"^DD",727.813,727.813,45,3)
Answer must be 3-40 characters in length.
"^DD",727.813,727.813,45,21,0)
^.001^1^1^3100914^^^^
"^DD",727.813,727.813,45,21,1,0)
This field is the Lab Test name.  
"^DD",727.813,727.813,45,23,0)
^^10^10^3100914^
"^DD",727.813,727.813,45,23,1,0)
This field will allow lab management and DSS staff to know whether 
"^DD",727.813,727.813,45,23,2,0)
the entry is a panel test and if it has been designated as a separately
"^DD",727.813,727.813,45,23,3,0)
billable test.  If this field has a value then it is not a panel test and 
"^DD",727.813,727.813,45,23,4,0)
is individually billable.  If this field does not have a value then it's 
"^DD",727.813,727.813,45,23,5,0)
a panel test and is billable as a unit.
"^DD",727.813,727.813,45,23,6,0)
 
"^DD",727.813,727.813,45,23,7,0)
This field indicates the actual data name (test name) expressed in the
"^DD",727.813,727.813,45,23,8,0)
NAME (#.01) field of the LABORATORY TEST File (#60), and is only populated
"^DD",727.813,727.813,45,23,9,0)
if a test is a non-panel test and is part of the CHEM, HEM, TOX, SER, RIA,
"^DD",727.813,727.813,45,23,10,0)
etc. area.
"^DD",727.813,727.813,45,"DT")
3100826
"^DD",727.813,727.813,46,0)
DATA LOCATION^F^^2;2^K:$L(X)>12!($L(X)<4) X
"^DD",727.813,727.813,46,3)
Answer must be 4-12 characters in length.
"^DD",727.813,727.813,46,21,0)
^.001^2^2^3100903^^^^
"^DD",727.813,727.813,46,21,1,0)
The Data Location field is only populated if a test is a non-panel test  
"^DD",727.813,727.813,46,21,2,0)
and is part of the CHEM, HEM, TOX, SER, RIA, etc. area.
"^DD",727.813,727.813,46,23,0)
^.001^2^2^3100903^^^^
"^DD",727.813,727.813,46,23,1,0)
This field is derived from the LOCATION (DATA NAME)(#5) field 
"^DD",727.813,727.813,46,23,2,0)
of the LABORATORY(#60) file.
"^DD",727.813,727.813,46,"DT")
3100308
"^DD",727.813,727.813,47,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;3^Q
"^DD",727.813,727.813,47,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.813,727.813,47,21,0)
^^6^6^3100901^
"^DD",727.813,727.813,47,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.813,727.813,47,21,2,0)
Care Center) Reconciliation.
"^DD",727.813,727.813,47,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.813,727.813,47,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.813,727.813,47,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.813,727.813,47,21,6,0)
pays for.
"^DD",727.813,727.813,47,23,0)
^^7^7^3100901^
"^DD",727.813,727.813,47,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.813,727.813,47,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.813,727.813,47,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.813,727.813,47,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.813,727.813,47,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.813,727.813,47,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.813,727.813,47,23,7,0)
the value should be placed in this field.
"^DD",727.813,727.813,47,"DT")
3100903
"^DD",727.814,727.814,48,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;26^Q
"^DD",727.814,727.814,48,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.814,727.814,48,21,0)
^^6^6^3100901^
"^DD",727.814,727.814,48,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.814,727.814,48,21,2,0)
Care Center) Reconciliation.
"^DD",727.814,727.814,48,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.814,727.814,48,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.814,727.814,48,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.814,727.814,48,21,6,0)
pays for.
"^DD",727.814,727.814,48,23,0)
^^7^7^3100901^
"^DD",727.814,727.814,48,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.814,727.814,48,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.814,727.814,48,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.814,727.814,48,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.814,727.814,48,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.814,727.814,48,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.814,727.814,48,23,7,0)
the value should be placed in this field.
"^DD",727.814,727.814,48,"DT")
3100903
"^DD",727.815,727.815,97,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^2;18^Q
"^DD",727.815,727.815,97,3)
Enter SHAD Status
"^DD",727.815,727.815,97,21,0)
^.001^2^2^3100216^^^
"^DD",727.815,727.815,97,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.815,727.815,97,21,2,0)
if not, or U if unknown.
"^DD",727.815,727.815,97,23,0)
^.001^3^3^3100216^^
"^DD",727.815,727.815,97,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.815,727.815,97,23,2,0)
in the EVENT CAPTURE LOCAL EXTRACT file (#727.815), Shipboard Hazard and
"^DD",727.815,727.815,97,23,3,0)
Defense data is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.815,727.815,97,"DT")
3100216
"^DD",727.815,727.815,98,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^2;19^Q
"^DD",727.815,727.815,98,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N
"^DD",727.815,727.815,98,21,0)
^.001^2^2^3100216^^
"^DD",727.815,727.815,98,21,1,0)
Indicates if treatment provided during this patient encounter is related
"^DD",727.815,727.815,98,21,2,0)
to exposure PROJ 112/SHAD condition.  Values: Y=YES, N=NO
"^DD",727.815,727.815,98,23,0)
^^6^6^3100216^
"^DD",727.815,727.815,98,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file
"^DD",727.815,727.815,98,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.815,727.815,98,23,3,0)
ENCEVENT^PXAPI.  The ENCEVENT^PXAPI returns the Shipboard Hazard and
"^DD",727.815,727.815,98,23,4,0)
Defense conditions indicator stored at the PROJ 112/SHAD field (#80008) in
"^DD",727.815,727.815,98,23,5,0)
the VISIT file (#9000010).  The value will be stored in the output array
"^DD",727.815,727.815,98,23,6,0)
subscripted by "SHAD".  
"^DD",727.815,727.815,98,"DT")
3100216
"^DD",727.815,727.815,99,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;20^Q
"^DD",727.815,727.815,99,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.815,727.815,99,21,0)
^^6^6^3100901^
"^DD",727.815,727.815,99,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.815,727.815,99,21,2,0)
Care Center) Reconciliation.
"^DD",727.815,727.815,99,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.815,727.815,99,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.815,727.815,99,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.815,727.815,99,21,6,0)
pays for.
"^DD",727.815,727.815,99,23,0)
^^7^7^3100901^
"^DD",727.815,727.815,99,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.815,727.815,99,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.815,727.815,99,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.815,727.815,99,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.815,727.815,99,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.815,727.815,99,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.815,727.815,99,23,7,0)
the value should be placed in this field.
"^DD",727.815,727.815,99,"DT")
3100903
"^DD",727.817,727.817,44,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;21^Q
"^DD",727.817,727.817,44,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.817,727.817,44,21,0)
^^6^6^3100902^
"^DD",727.817,727.817,44,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.817,727.817,44,21,2,0)
Care Center) Reconciliation.
"^DD",727.817,727.817,44,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.817,727.817,44,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.817,727.817,44,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.817,727.817,44,21,6,0)
pays for.
"^DD",727.817,727.817,44,23,0)
^^7^7^3100902^
"^DD",727.817,727.817,44,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.817,727.817,44,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.817,727.817,44,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.817,727.817,44,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.817,727.817,44,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.817,727.817,44,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.817,727.817,44,23,7,0)
the value should be placed in this field.
"^DD",727.817,727.817,44,"DT")
3100903
"^DD",727.819,727.819,61,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^1;35^Q
"^DD",727.819,727.819,61,.1)

"^DD",727.819,727.819,61,3)
Enter SHAD Status
"^DD",727.819,727.819,61,21,0)
^.001^2^2^3100216^^^
"^DD",727.819,727.819,61,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.819,727.819,61,21,2,0)
if not, or U if unknown.
"^DD",727.819,727.819,61,23,0)
^.001^3^3^3100216^^
"^DD",727.819,727.819,61,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.819,727.819,61,23,2,0)
in the IV DETAIL EXTRACT file (#727.819), Shipboard Hazard and Defense
"^DD",727.819,727.819,61,23,3,0)
data is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.819,727.819,61,"DT")
3100212
"^DD",727.819,727.819,88,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;25^Q
"^DD",727.819,727.819,88,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.819,727.819,88,21,0)
^^6^6^3100901^
"^DD",727.819,727.819,88,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.819,727.819,88,21,2,0)
Care Center) Reconciliation.
"^DD",727.819,727.819,88,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.819,727.819,88,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.819,727.819,88,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.819,727.819,88,21,6,0)
pays for.
"^DD",727.819,727.819,88,23,0)
^^7^7^3100901^
"^DD",727.819,727.819,88,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.819,727.819,88,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.819,727.819,88,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.819,727.819,88,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.819,727.819,88,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.819,727.819,88,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.819,727.819,88,23,7,0)
the value should be placed in this field.
"^DD",727.819,727.819,88,"DT")
3100903
"^DD",727.824,727.824,32,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;13^Q
"^DD",727.824,727.824,32,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.824,727.824,32,21,0)
^^6^6^3100902^
"^DD",727.824,727.824,32,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.824,727.824,32,21,2,0)
Care Center) Reconciliation.
"^DD",727.824,727.824,32,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.824,727.824,32,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.824,727.824,32,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.824,727.824,32,21,6,0)
pays for.
"^DD",727.824,727.824,32,23,0)
^^7^7^3100902^
"^DD",727.824,727.824,32,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.824,727.824,32,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.824,727.824,32,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.824,727.824,32,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.824,727.824,32,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.824,727.824,32,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.824,727.824,32,23,7,0)
the value should be placed in this field.
"^DD",727.824,727.824,32,"DT")
3100903
"^DD",727.825,727.825,97,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^2;18^Q
"^DD",727.825,727.825,97,3)
Enter SHAD Status
"^DD",727.825,727.825,97,21,0)
^.001^2^2^3100216^^
"^DD",727.825,727.825,97,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.825,727.825,97,21,2,0)
if not, or U if unknown.
"^DD",727.825,727.825,97,23,0)
^^3^3^3100216^
"^DD",727.825,727.825,97,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.825,727.825,97,23,2,0)
in the QUASAR EXTRACT file (#727.825), Shipboard Hazard and Defense data
"^DD",727.825,727.825,97,23,3,0)
is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.825,727.825,97,"DT")
3100216
"^DD",727.825,727.825,98,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^2;19^Q
"^DD",727.825,727.825,98,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N
"^DD",727.825,727.825,98,21,0)
^.001^2^2^3100216^^
"^DD",727.825,727.825,98,21,1,0)
Indicates if treatment provided during this patient encounter is related
"^DD",727.825,727.825,98,21,2,0)
to exposure PROJ 112/SHAD condition.  Values: Y=YES, N=NO
"^DD",727.825,727.825,98,23,0)
^^6^6^3100216^
"^DD",727.825,727.825,98,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file
"^DD",727.825,727.825,98,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.825,727.825,98,23,3,0)
ENCEVENT^PXAPI.  The ENCEVENT^PXAPI returns the Shipboard Hazard and
"^DD",727.825,727.825,98,23,4,0)
Defense conditions indicator stored at the PROJ 112/SHAD field (#80008) in
"^DD",727.825,727.825,98,23,5,0)
the VISIT file (#9000010).  The value will be stored in the output array
"^DD",727.825,727.825,98,23,6,0)
subscripted by "SHAD".  
"^DD",727.825,727.825,98,"DT")
3100216
"^DD",727.825,727.825,99,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;20^Q
"^DD",727.825,727.825,99,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.825,727.825,99,21,0)
^^6^6^3100901^
"^DD",727.825,727.825,99,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.825,727.825,99,21,2,0)
Care Center) Reconciliation.
"^DD",727.825,727.825,99,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.825,727.825,99,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.825,727.825,99,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.825,727.825,99,21,6,0)
pays for.
"^DD",727.825,727.825,99,23,0)
^^7^7^3100901^
"^DD",727.825,727.825,99,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.825,727.825,99,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.825,727.825,99,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.825,727.825,99,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.825,727.825,99,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.825,727.825,99,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.825,727.825,99,23,7,0)
the value should be placed in this field.
"^DD",727.825,727.825,99,"DT")
3100903
"^DD",727.826,727.826,88,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^2;8^Q
"^DD",727.826,727.826,88,3)
Enter SHAD Status
"^DD",727.826,727.826,88,21,0)
^.001^2^2^3100216^^^
"^DD",727.826,727.826,88,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.826,727.826,88,21,2,0)
if not, or U if unknown.
"^DD",727.826,727.826,88,23,0)
^^3^3^3100216^
"^DD",727.826,727.826,88,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.826,727.826,88,23,2,0)
in the PROSTHETICS EXTRACT file (#727.826), Shipboard Hazard and Defense
"^DD",727.826,727.826,88,23,3,0)
data is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.826,727.826,88,"DT")
3100212
"^DD",727.826,727.826,89,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^2;9^Q
"^DD",727.826,727.826,89,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N
"^DD",727.826,727.826,89,21,0)
^.001^2^2^3100216^^
"^DD",727.826,727.826,89,21,1,0)
Indicates if treatment provided during this patient encounter is related
"^DD",727.826,727.826,89,21,2,0)
to exposure PROJ 112/SHAD condition.  Values: Y=YES, N=NO
"^DD",727.826,727.826,89,23,0)
^^6^6^3100216^
"^DD",727.826,727.826,89,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file
"^DD",727.826,727.826,89,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.826,727.826,89,23,3,0)
ENCEVENT^PXAPI.  The ENCEVENT^PXAPI returns the Shipboard Hazard and
"^DD",727.826,727.826,89,23,4,0)
Defense conditions indicator stored at the PROJ 112/SHAD field (#80008) in
"^DD",727.826,727.826,89,23,5,0)
the VISIT file (#9000010).  The value will be stored in the output array
"^DD",727.826,727.826,89,23,6,0)
subscripted by "SHAD".  
"^DD",727.826,727.826,89,"DT")
3100216
"^DD",727.826,727.826,90,0)
LABOR HOURS^NJ6,2X^^2;10^K:(X?.E1"."3N.N) X
"^DD",727.826,727.826,90,3)
Enter the Labor Hours
"^DD",727.826,727.826,90,21,0)
^.001^1^1^3101029^^
"^DD",727.826,727.826,90,21,1,0)
This is the number of hours spent on the job.
"^DD",727.826,727.826,90,23,0)
^.001^2^2^3101029^^^^
"^DD",727.826,727.826,90,23,1,0)
Derived from the TOTAL LABOR HOURS field (#45) of the RECORD OF PROS 
"^DD",727.826,727.826,90,23,2,0)
APPLIANCE/REPAIR File (#660).
"^DD",727.826,727.826,90,"DT")
3100225
"^DD",727.826,727.826,91,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;11^Q
"^DD",727.826,727.826,91,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.826,727.826,91,21,0)
^^6^6^3100902^
"^DD",727.826,727.826,91,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.826,727.826,91,21,2,0)
Care Center) Reconciliation.
"^DD",727.826,727.826,91,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.826,727.826,91,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.826,727.826,91,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.826,727.826,91,21,6,0)
pays for.
"^DD",727.826,727.826,91,23,0)
^^7^7^3100902^
"^DD",727.826,727.826,91,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.826,727.826,91,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.826,727.826,91,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.826,727.826,91,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.826,727.826,91,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.826,727.826,91,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.826,727.826,91,23,7,0)
the value should be placed in this field.
"^DD",727.826,727.826,91,"DT")
3100903
"^DD",727.827,727.827,62,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^2;2^Q
"^DD",727.827,727.827,62,3)
Enter SHAD Status
"^DD",727.827,727.827,62,21,0)
^.001^2^2^3100216^^
"^DD",727.827,727.827,62,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.827,727.827,62,21,2,0)
if not, or U if unknown.
"^DD",727.827,727.827,62,23,0)
^.001^3^3^3100216^^
"^DD",727.827,727.827,62,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.827,727.827,62,23,2,0)
in the CLINIC EXTRACT file (#727.827), Shipboard Hazard and Defense data
"^DD",727.827,727.827,62,23,3,0)
is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.827,727.827,62,"DT")
3100211
"^DD",727.827,727.827,94,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^3;2^Q
"^DD",727.827,727.827,94,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N 
"^DD",727.827,727.827,94,21,0)
^.001^2^2^3100901^^^^
"^DD",727.827,727.827,94,21,1,0)
Indicates if treatment provided during this patient encounter is related
"^DD",727.827,727.827,94,21,2,0)
to exposure PROJ 112/SHAD condition.  Values: Y=YES, N=NO
"^DD",727.827,727.827,94,23,0)
^.001^6^6^3100901^^^^
"^DD",727.827,727.827,94,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file
"^DD",727.827,727.827,94,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.827,727.827,94,23,3,0)
ENCEVENT^PXAPI.  The ENCEVENT^PXAPI returns the Shipboard Hazard and
"^DD",727.827,727.827,94,23,4,0)
Defense conditions indicator stored at the PROJ 112/SHAD field (#80008) in
"^DD",727.827,727.827,94,23,5,0)
the VISIT file (#9000010).  The value will be stored in the output array
"^DD",727.827,727.827,94,23,6,0)
subscripted by "SHAD".  
"^DD",727.827,727.827,94,"DT")
3100901
"^DD",727.827,727.827,95,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^3;3^Q
"^DD",727.827,727.827,95,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.827,727.827,95,21,0)
^^6^6^3100901^
"^DD",727.827,727.827,95,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.827,727.827,95,21,2,0)
Care Center) Reconciliation.
"^DD",727.827,727.827,95,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.827,727.827,95,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.827,727.827,95,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.827,727.827,95,21,6,0)
pays for.
"^DD",727.827,727.827,95,23,0)
^^7^7^3100901^
"^DD",727.827,727.827,95,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.827,727.827,95,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.827,727.827,95,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.827,727.827,95,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.827,727.827,95,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.827,727.827,95,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.827,727.827,95,23,7,0)
the value should be placed in this field.
"^DD",727.827,727.827,95,"DT")
3100903
"^DD",727.829,727.829,30,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;2^Q
"^DD",727.829,727.829,30,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.829,727.829,30,21,0)
^^6^6^3100902^
"^DD",727.829,727.829,30,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.829,727.829,30,21,2,0)
Care Center) Reconciliation.
"^DD",727.829,727.829,30,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.829,727.829,30,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.829,727.829,30,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.829,727.829,30,21,6,0)
pays for.
"^DD",727.829,727.829,30,23,0)
^^7^7^3100902^
"^DD",727.829,727.829,30,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.829,727.829,30,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.829,727.829,30,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.829,727.829,30,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.829,727.829,30,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.829,727.829,30,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.829,727.829,30,23,7,0)
the value should be placed in this field.
"^DD",727.829,727.829,30,"DT")
3100903
"^DD",727.832,727.832,65,0)
SHAD STATUS^S^Y:YES;N:NO;U:UNKNOWN;^1;26^Q
"^DD",727.832,727.832,65,3)
Ener SHAD Status
"^DD",727.832,727.832,65,21,0)
^.001^2^2^3100216^^^
"^DD",727.832,727.832,65,21,1,0)
Data is Y if this patient was exposed to Shipboard Hazard and Defense. N
"^DD",727.832,727.832,65,21,2,0)
if not, or U if unknown.
"^DD",727.832,727.832,65,23,0)
^.001^3^3^3100216^^
"^DD",727.832,727.832,65,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.832,727.832,65,23,2,0)
in the NUTRITION EXTRACT file (#727.832), Shipboard Hazard and Defense
"^DD",727.832,727.832,65,23,3,0)
data is derived from using DBIA #4462 GETSHAD^DGUTL3(DFN).
"^DD",727.832,727.832,65,"DT")
3100212
"^DD",727.832,727.832,66,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;27^Q
"^DD",727.832,727.832,66,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.832,727.832,66,21,0)
^^6^6^3100902^
"^DD",727.832,727.832,66,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.832,727.832,66,21,2,0)
Care Center) Reconciliation.
"^DD",727.832,727.832,66,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.832,727.832,66,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.832,727.832,66,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.832,727.832,66,21,6,0)
pays for.
"^DD",727.832,727.832,66,23,0)
^^7^7^3100902^
"^DD",727.832,727.832,66,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.832,727.832,66,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.832,727.832,66,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.832,727.832,66,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.832,727.832,66,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.832,727.832,66,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.832,727.832,66,23,7,0)
the value should be placed in this field.
"^DD",727.832,727.832,66,"DT")
3100903
"^DD",727.833,727.833,0)
FIELD^^81^81
"^DD",727.833,727.833,0,"DDA")
N
"^DD",727.833,727.833,0,"DT")
3101118
"^DD",727.833,727.833,0,"IX","AC",727.833,2)

"^DD",727.833,727.833,0,"IX","B",727.833,.01)

"^DD",727.833,727.833,0,"NM","BCMA EXTRACT")

"^DD",727.833,727.833,0,"VRPK")
ECX
"^DD",727.833,727.833,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",727.833,727.833,.01,.1)
Sequence Number
"^DD",727.833,727.833,.01,1,0)
^.1
"^DD",727.833,727.833,.01,1,1,0)
727.833^B
"^DD",727.833,727.833,.01,1,1,1)
S ^ECX(727.833,"B",$E(X,1,30),DA)=""
"^DD",727.833,727.833,.01,1,1,2)
K ^ECX(727.833,"B",$E(X,1,30),DA)
"^DD",727.833,727.833,.01,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",727.833,727.833,.01,21,0)
^^1^1^3100308^
"^DD",727.833,727.833,.01,21,1,0)
The record number for this extract entry.
"^DD",727.833,727.833,.01,23,0)
^^1^1^3100308^
"^DD",727.833,727.833,.01,23,1,0)
The internal entry number (IEN) for this record. This entry is DINUMed.
"^DD",727.833,727.833,.01,"DT")
3100308
"^DD",727.833,727.833,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.833,727.833,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.833,727.833,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.833,727.833,1,3)
Answer must be 6 characters in length.
"^DD",727.833,727.833,1,21,0)
^^2^2^3101025^
"^DD",727.833,727.833,1,21,1,0)
A six character string representing the year and the month for which this
"^DD",727.833,727.833,1,21,2,0)
extract was performed.
"^DD",727.833,727.833,1,23,0)
^^2^2^3101025^
"^DD",727.833,727.833,1,23,1,0)
The format is YYYYMM, and typically contains the current date unless the
"^DD",727.833,727.833,1,23,2,0)
extract has been queued to run on a different date. 
"^DD",727.833,727.833,1,"DT")
3101025
"^DD",727.833,727.833,2,0)
EXTRACT NUMBER^P727'^ECX(727,^0;3^Q
"^DD",727.833,727.833,2,.1)
Extract Number
"^DD",727.833,727.833,2,1,0)
^.1
"^DD",727.833,727.833,2,1,1,0)
727.833^AC
"^DD",727.833,727.833,2,1,1,1)
S ^ECX(727.833,"AC",$E(X,1,30),DA)=""
"^DD",727.833,727.833,2,1,1,2)
K ^ECX(727.833,"AC",$E(X,1,30),DA)
"^DD",727.833,727.833,2,1,1,3)
DO NOT DELETE.
"^DD",727.833,727.833,2,1,1,"%D",0)
^^2^2^3100308^
"^DD",727.833,727.833,2,1,1,"%D",1,0)
This cross reference is essential for managing and purging data in this
"^DD",727.833,727.833,2,1,1,"%D",2,0)
file.
"^DD",727.833,727.833,2,1,1,"DT")
3100308
"^DD",727.833,727.833,2,3)
Enter the extract number for this entry.
"^DD",727.833,727.833,2,21,0)
^^2^2^3101025^
"^DD",727.833,727.833,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG (#727) file for this 
"^DD",727.833,727.833,2,21,2,0)
extract.
"^DD",727.833,727.833,2,23,0)
^^2^2^3101025^
"^DD",727.833,727.833,2,23,1,0)
A pointer to the DSS EXTRACT LOG (#727) file. The primary purpose is to
"^DD",727.833,727.833,2,23,2,0)
pick up the header for the mail message.
"^DD",727.833,727.833,2,"DT")
3101025
"^DD",727.833,727.833,3,0)
FACILITY^F^^0;4^K:$L(X)>7!($L(X)<3) X
"^DD",727.833,727.833,3,.1)
Facility
"^DD",727.833,727.833,3,3)
Answer must be 3-7 characters in length.
"^DD",727.833,727.833,3,21,0)
^^1^1^3101118^
"^DD",727.833,727.833,3,21,1,0)
This field identifies the Facility Number from which this extract was run.
"^DD",727.833,727.833,3,23,0)
^^3^3^3101118^
"^DD",727.833,727.833,3,23,1,0)
Using the NAME (#.01) field, which is a pointer to the INSTITUTION 
"^DD",727.833,727.833,3,23,2,0)
(#4) file, from the DSS EXTRACTS (#728) file, this field is derived from
"^DD",727.833,727.833,3,23,3,0)
the STATION NUMBER (#99) field.
"^DD",727.833,727.833,3,"DT")
3101118
"^DD",727.833,727.833,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.833,727.833,4,.1)
Patient No. - DFN
"^DD",727.833,727.833,4,3)
Enter the patient for this extract record.
"^DD",727.833,727.833,4,21,0)
^.001^1^1^3100309^^
"^DD",727.833,727.833,4,21,1,0)
An identifying number for the patient at the local site.
"^DD",727.833,727.833,4,23,0)
^^3^3^3101024^
"^DD",727.833,727.833,4,23,1,0)
Derived from the PATIENT (#.01) field in the BCMA MEDICATION LOG 
"^DD",727.833,727.833,4,23,2,0)
(#53.79) file. PATIENT NO. - DFN is a pointer to the NAME (#.01) field of
"^DD",727.833,727.833,4,23,3,0)
the PATIENT (#2) file. This data represents the patient DFN.
"^DD",727.833,727.833,4,"DT")
3101115
"^DD",727.833,727.833,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.833,727.833,5,.1)
Social Security Number
"^DD",727.833,727.833,5,3)
Answer must be 9-10 characters in length.
"^DD",727.833,727.833,5,21,0)
^.001^1^1^3101110^^^^
"^DD",727.833,727.833,5,21,1,0)
This is the patient's social security number.  
"^DD",727.833,727.833,5,23,0)
^^6^6^3101110^
"^DD",727.833,727.833,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN (#4) field
"^DD",727.833,727.833,5,23,2,0)
in this file, SSN data is derived from the SOCIAL SECURITY NUMBER (#.09)
"^DD",727.833,727.833,5,23,3,0)
field in the PATIENT (#2) file. 
"^DD",727.833,727.833,5,23,4,0)
 
"^DD",727.833,727.833,5,23,5,0)
"Test" patient status is determined in PAT^ECXUTL3.  Any patient with an
"^DD",727.833,727.833,5,23,6,0)
SSN beginning with "00000" will not be included in the extract.
"^DD",727.833,727.833,5,"DT")
3101110
"^DD",727.833,727.833,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.833,727.833,6,.1)
Name
"^DD",727.833,727.833,6,3)
Answer must be 4 characters in length.
"^DD",727.833,727.833,6,21,0)
^.001^1^1^3100310^^
"^DD",727.833,727.833,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.833,727.833,6,23,0)
^^4^4^3101116^
"^DD",727.833,727.833,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN (#4) field
"^DD",727.833,727.833,6,23,2,0)
in this file, NAME data is derived from the NAME (#.01) in the PATIENT
"^DD",727.833,727.833,6,23,3,0)
(#2) file. The first four characters of the first "," piece are used,
"^DD",727.833,727.833,6,23,4,0)
padded with trailing spaces if necessary.
"^DD",727.833,727.833,6,"DT")
3101116
"^DD",727.833,727.833,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.833,727.833,7,.1)
In Out Patient Indicator
"^DD",727.833,727.833,7,3)
Is patient an INPATIENT or OUTPATIENT? 
"^DD",727.833,727.833,7,21,0)
^.001^2^2^3101108^^^
"^DD",727.833,727.833,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.833,727.833,7,21,2,0)
extract entry.
"^DD",727.833,727.833,7,23,0)
^^3^3^3101108^
"^DD",727.833,727.833,7,23,1,0)
This field formerly contained the pointer to the LOCATION TYPE (#40.9)
"^DD",727.833,727.833,7,23,2,0)
file which was either 1=Outpatient or 3=Inpatient.  Pointing to this
"^DD",727.833,727.833,7,23,3,0)
file has become obsolete, and in FY2002 this field has been changed.
"^DD",727.833,727.833,7,"DT")
3101108
"^DD",727.833,727.833,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,8,.1)
Day
"^DD",727.833,727.833,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.833,727.833,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.833,727.833,8,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,8,21,0)
^.001^2^2^3101119^^
"^DD",727.833,727.833,8,21,1,0)
DAY is an 8-character date (YYYYMMDD) on which the patient was 
"^DD",727.833,727.833,8,21,2,0)
administered medication.
"^DD",727.833,727.833,8,23,0)
^.001^4^4^3101119^^
"^DD",727.833,727.833,8,23,1,0)
This field is taken from the ACTION DATE/TIME (#.06) field from the BCMA 
"^DD",727.833,727.833,8,23,2,0)
MEDICATION LOG (#53.79) file. It is parsed so that only the date portion 
"^DD",727.833,727.833,8,23,3,0)
is stored in YYYYMMDD format. The time portion of the ACTION DATE/TIME is 
"^DD",727.833,727.833,8,23,4,0)
stored in the TIME (#29) field of this file.
"^DD",727.833,727.833,8,"DT")
3101119
"^DD",727.833,727.833,9,0)
DATE OF BIRTH^FO^^0;10^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,9,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.833,727.833,9,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.833,727.833,9,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,9,21,0)
^^1^1^3101115^
"^DD",727.833,727.833,9,21,1,0)
The patient's date of birth represented by an 8 character numeric string.
"^DD",727.833,727.833,9,23,0)
^^5^5^3101115^
"^DD",727.833,727.833,9,23,1,0)
The data is derived by using the Patient No. - DFN (#4) field of this file
"^DD",727.833,727.833,9,23,2,0)
to retrieve the DATE OF BIRTH (#.03) field from the PATIENT (#2) file.
"^DD",727.833,727.833,9,23,3,0)
If Date of Birth cannot be determined, then January
"^DD",727.833,727.833,9,23,4,0)
1, 1942, is used as default. The data element is always exactly 8 numeric
"^DD",727.833,727.833,9,23,5,0)
characters in length. The Format is YYYYMMDD.
"^DD",727.833,727.833,9,"DT")
3101123
"^DD",727.833,727.833,10,0)
SEX^S^M:MALE;F:FEMALE;^0;11^Q
"^DD",727.833,727.833,10,21,0)
^^1^1^3100816^
"^DD",727.833,727.833,10,21,1,0)
Data is M if this patient is a male, or F if female.
"^DD",727.833,727.833,10,23,0)
^^3^3^3101115^
"^DD",727.833,727.833,10,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN (#4) field
"^DD",727.833,727.833,10,23,2,0)
in this file, this data is derived from the SEX (#.02) field in the
"^DD",727.833,727.833,10,23,3,0)
PATIENT (#2) file.
"^DD",727.833,727.833,10,"DT")
3101115
"^DD",727.833,727.833,11,0)
STATE^F^^0;12^K:$L(X)>2!($L(X)<2) X
"^DD",727.833,727.833,11,3)
Answer must be 2 numerics.
"^DD",727.833,727.833,11,21,0)
^^3^3^3101109^
"^DD",727.833,727.833,11,21,1,0)
This is a numeric code (2 characters in length) which many packages
"^DD",727.833,727.833,11,21,2,0)
transmit as to Austin to represent the state a patient resides or receives
"^DD",727.833,727.833,11,21,3,0)
treatment in.
"^DD",727.833,727.833,11,23,0)
^^4^4^3101108^
"^DD",727.833,727.833,11,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN (#4) field
"^DD",727.833,727.833,11,23,2,0)
in this file, STATE data is derived from the STATE (#.115) field  in the
"^DD",727.833,727.833,11,23,3,0)
PATIENT (#2) file which points to the STATE (#5) file. For the STATE file
"^DD",727.833,727.833,11,23,4,0)
entry, data transmitted is the two character VA STATE CODE, (#2) field.
"^DD",727.833,727.833,11,"DT")
3101109
"^DD",727.833,727.833,12,0)
COUNTY^F^^0;13^K:$L(X)>3!($L(X)<3) X
"^DD",727.833,727.833,12,3)
Answer must be 3 characters in length.
"^DD",727.833,727.833,12,21,0)
^^1^1^3101108^
"^DD",727.833,727.833,12,21,1,0)
This is the County in which the Patient resides.
"^DD",727.833,727.833,12,23,0)
^^5^5^3101108^
"^DD",727.833,727.833,12,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN (#4) field
"^DD",727.833,727.833,12,23,2,0)
in this file, data is taken from the COUNTY (#.117) field in the PATIENT
"^DD",727.833,727.833,12,23,3,0)
(#2) file, which points to a subfile record in the COUNTY (#3) multiple
"^DD",727.833,727.833,12,23,4,0)
field of the STATE (#5) file. The three character VA COUNTY CODE (#2)
"^DD",727.833,727.833,12,23,5,0)
field within the COUNTY (#3) multiple field is used.
"^DD",727.833,727.833,12,"DT")
3101108
"^DD",727.833,727.833,13,0)
ZIP +4^F^^0;14^K:$L(X)>10!($L(X)<5) X
"^DD",727.833,727.833,13,.1)
Zip Code
"^DD",727.833,727.833,13,3)
Answer must be 5-10 characters in length.
"^DD",727.833,727.833,13,21,0)
^^1^1^3101102^
"^DD",727.833,727.833,13,21,1,0)
Patient's 5 or 9 digit Zip code (Zip +4). 
"^DD",727.833,727.833,13,23,0)
^^2^2^3101102^
"^DD",727.833,727.833,13,23,1,0)
Patient's Zip code which is pulled from THE ZIP+4 (#.1112) field of the 
"^DD",727.833,727.833,13,23,2,0)
PATIENT (#2) file.
"^DD",727.833,727.833,13,"DT")
3101102
"^DD",727.833,727.833,14,0)
COUNTRY CODE^F^^0;15^K:$L(X)>3!($L(X)<1) X
"^DD",727.833,727.833,14,.1)
Country Code
"^DD",727.833,727.833,14,3)
The code for the country. Answer must be 1-3 characters in length.
"^DD",727.833,727.833,14,21,0)
^^1^1^3101109^
"^DD",727.833,727.833,14,21,1,0)
This is the 3 character code of the Patient's Country of residence.
"^DD",727.833,727.833,14,23,0)
^^3^3^3101115^
"^DD",727.833,727.833,14,23,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.833,727.833,14,23,2,0)
field of the COUNTRY (#779.004) file which is pointed to by the COUNTRY 
"^DD",727.833,727.833,14,23,3,0)
(#.1173) field in the PATIENT (#2) file.
"^DD",727.833,727.833,14,"DT")
3101115
"^DD",727.833,727.833,15,0)
WARD^P44'^SC(^0;16^Q
"^DD",727.833,727.833,15,3)
Enter the ward location for this patient.
"^DD",727.833,727.833,15,21,0)
^^1^1^3101118^
"^DD",727.833,727.833,15,21,1,0)
This is the ward location of the patient when he received the medication.
"^DD",727.833,727.833,15,23,0)
^^6^6^3101118^
"^DD",727.833,727.833,15,23,1,0)
This field is initialized to a null, indicating an outpatient status.
"^DD",727.833,727.833,15,23,2,0)
A call to IN5^VADPT using the patient IEN and the event date (DAY (#8)
"^DD",727.833,727.833,15,23,3,0)
field in FM format) is made.  If data is returned identifying an inpatient
"^DD",727.833,727.833,15,23,4,0)
episode, the value of VAIP(5), ward  location, is used to get the HOSPITAL
"^DD",727.833,727.833,15,23,5,0)
LOCATION FILE POINTER (#44) field in the WARD LOCATION (#42) file which is
"^DD",727.833,727.833,15,23,6,0)
a pointer to the HOSPITAL LOCATION (#44) file.
"^DD",727.833,727.833,15,"DT")
3101118
"^DD",727.833,727.833,16,0)
TREATING SPECIALTY^F^^0;17^K:$L(X)>2!($L(X)<1) X
"^DD",727.833,727.833,16,3)
Answer must be 1-2 characters in length.
"^DD",727.833,727.833,16,21,0)
^.001^1^1^3101109^^^
"^DD",727.833,727.833,16,21,1,0)
The PTF CODE of the treating specialty associated with this extract record.
"^DD",727.833,727.833,16,23,0)
^^8^8^3101118^
"^DD",727.833,727.833,16,23,1,0)
This field is initialized to a null, indicating an outpatient status. 
"^DD",727.833,727.833,16,23,2,0)
A call to IN5^VADPT using the patient IEN and the event date (DAY (#8)
"^DD",727.833,727.833,16,23,3,0)
field in FM format) is made. If data returns a patient movement number
"^DD",727.833,727.833,16,23,4,0)
(indicating inpatient status), then the value of VAIP(8), which is the
"^DD",727.833,727.833,16,23,5,0)
pointer to the FACILITY TREATING SPECIALTY (#45.7) file, is used to get
"^DD",727.833,727.833,16,23,6,0)
the SPECIALTY (#1) field which points to the SPECIALTY (#42.4) file. Then,
"^DD",727.833,727.833,16,23,7,0)
the PTF Code (#7) field of the SPECIALTY (#42.4) file is obtained and
"^DD",727.833,727.833,16,23,8,0)
stored instead of the IEN of the specialty.
"^DD",727.833,727.833,16,"DT")
3101118
"^DD",727.833,727.833,17,0)
PROVIDER^P200'^VA(200,^0;18^Q
"^DD",727.833,727.833,17,3)
Enter provider for this record.
"^DD",727.833,727.833,17,21,0)
^.001^1^1^3100818^^^
"^DD",727.833,727.833,17,21,1,0)
The provider assigned to this patient or entity.
"^DD",727.833,727.833,17,23,0)
^^6^6^3101108^
"^DD",727.833,727.833,17,23,1,0)
Derived by calling API, EN^PSJBCMA1, using the ORDER REFERENCE NUMBER 
"^DD",727.833,727.833,17,23,2,0)
(#26) from this file. Provider will be returned in the 1st piece of the
"^DD",727.833,727.833,17,23,3,0)
returning ^TMP(PTMP,$J,1) global.  It is extracted from the PHARMACY
"^DD",727.833,727.833,17,23,4,0)
PATIENT (#55) File by either the PROVIDER (#1) field of its Unit Dose
"^DD",727.833,727.833,17,23,5,0)
(#62) multiple.  Or the PROVIDER (#.06) field of its IV (#100) multiple.  
"^DD",727.833,727.833,17,23,6,0)
The provider IEN is a pointer to the NEW PERSON (#200) File.
"^DD",727.833,727.833,17,"DT")
3101108
"^DD",727.833,727.833,18,0)
PROVIDER PERSON CLASS^F^^0;19^K:$L(X)>7!($L(X)<7) X
"^DD",727.833,727.833,18,3)
Answer must be 7 characters in length.
"^DD",727.833,727.833,18,21,0)
^^2^2^3100816^
"^DD",727.833,727.833,18,21,1,0)
The VA Code of the Person Class of the Primary Care Provider associated with
"^DD",727.833,727.833,18,21,2,0)
this record.
"^DD",727.833,727.833,18,23,0)
^^4^4^3100816^
"^DD",727.833,727.833,18,23,1,0)
The field will hold the VA Code associated with the active Person Class of the patient's 
"^DD",727.833,727.833,18,23,2,0)
Primary Care Provider as of the date of this extract record.
"^DD",727.833,727.833,18,23,3,0)
The VA Code is always of the form "V"_six numeric digits; exactly 7 
"^DD",727.833,727.833,18,23,4,0)
character in length.
"^DD",727.833,727.833,18,"DT")
3100816
"^DD",727.833,727.833,19,0)
PROVIDER NPI^F^^0;20^K:$L(X)>10!($L(X)<1) X
"^DD",727.833,727.833,19,3)
Answer must be 1-10 characters in length.
"^DD",727.833,727.833,19,21,0)
^^2^2^3101108^
"^DD",727.833,727.833,19,21,1,0)
A standard unique life-long identifier of the individuals providing
"^DD",727.833,727.833,19,21,2,0)
health care services.
"^DD",727.833,727.833,19,23,0)
^^2^2^3101108^
"^DD",727.833,727.833,19,23,1,0)
The qualified identifier shall be retrieved via the supporting Kernel
"^DD",727.833,727.833,19,23,2,0)
API:$$NPI^XUSNPI.
"^DD",727.833,727.833,19,"DT")
3101108
"^DD",727.833,727.833,20,0)
PRIMARY CARE PROVIDER^F^^0;21^K:$L(X)>11!($L(X)<11) X
"^DD",727.833,727.833,20,3)
The answer must be 11 characters in length.
"^DD",727.833,727.833,20,21,0)
^^1^1^3101108^
"^DD",727.833,727.833,20,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.833,727.833,20,23,0)
^^8^8^3101118^
"^DD",727.833,727.833,20,23,1,0)
Using the ACTION DATE/TIME (#.06) field from the BCMA MEDICATION LOG
"^DD",727.833,727.833,20,23,2,0)
(#53.79) file and the patient pointer (DFN) stored in the PATIENT NO. -
"^DD",727.833,727.833,20,23,3,0)
DFN (#4) field in this file, a call is made to the Scheduling API,
"^DD",727.833,727.833,20,23,4,0)
OUTPTPR^SDUTL3. The API returns the provider's internal entry number and
"^DD",727.833,727.833,20,23,5,0)
name from the NEW PERSON (#200) file. A "2" is prefixed to the pointer
"^DD",727.833,727.833,20,23,6,0)
value to indicate that the source file is the NEW PERSON (#200) file.
"^DD",727.833,727.833,20,23,7,0)
The customer has come to expect the "2" as a prefix to this field in 
"^DD",727.833,727.833,20,23,8,0)
other extracts. The routine that accomplishes this is PRIMARY^ECXUTL2.
"^DD",727.833,727.833,20,"DT")
3101118
"^DD",727.833,727.833,21,0)
PRIMARY CARE PROVIDER PC^F^^0;22^K:$L(X)>7!($L(X)<7) X
"^DD",727.833,727.833,21,3)
Answer must be 7 characters in length.
"^DD",727.833,727.833,21,21,0)
^.001^2^2^3100825^^^
"^DD",727.833,727.833,21,21,1,0)
The VA Code of the Person Class of the Primary Care Provider
"^DD",727.833,727.833,21,21,2,0)
associated with this record.
"^DD",727.833,727.833,21,23,0)
^.001^4^4^3100825^^
"^DD",727.833,727.833,21,23,1,0)
The field will hold the VA Code associated with the active Person Class
"^DD",727.833,727.833,21,23,2,0)
of the patient's Primary Care Provider as of the date of this extract
"^DD",727.833,727.833,21,23,3,0)
record.
"^DD",727.833,727.833,21,23,4,0)
The VA Code is always of the form "V"_six numeric digits; exactly 7 in length.
"^DD",727.833,727.833,21,"DT")
3100825
"^DD",727.833,727.833,22,0)
PRIMARY CARE PROVIDER NPI^F^^0;23^K:$L(X)>10!($L(X)<1) X
"^DD",727.833,727.833,22,3)
Answer must be 1-10 characters in length.
"^DD",727.833,727.833,22,21,0)
^^1^1^3101108^
"^DD",727.833,727.833,22,21,1,0)
A standard unique life-long identifier of the primary care provider. 
"^DD",727.833,727.833,22,23,0)
^^2^2^3101108^
"^DD",727.833,727.833,22,23,1,0)
The qualified identifier is retrieved via the supporting Kernel API:
"^DD",727.833,727.833,22,23,2,0)
$$NPI^XUSNPI
"^DD",727.833,727.833,22,"DT")
3101108
"^DD",727.833,727.833,23,0)
PRIMARY CARE TEAM^P404.51'^SCTM(404.51,^0;24^Q
"^DD",727.833,727.833,23,3)
Select the patient's primary care team.
"^DD",727.833,727.833,23,21,0)
^^1^1^3101108^
"^DD",727.833,727.833,23,21,1,0)
The primary care team assigned to this patient.
"^DD",727.833,727.833,23,23,0)
^^5^5^3101118^
"^DD",727.833,727.833,23,23,1,0)
Using the DAY (#8) field (in FM format) and  the patient pointer
"^DD",727.833,727.833,23,23,2,0)
(DFN) stored in the PATIENT NO. - DFN (#4) field in this file, a call is
"^DD",727.833,727.833,23,23,3,0)
made to the Scheduling API, OUTPTTM^SDUTL3. The API returns the team's
"^DD",727.833,727.833,23,23,4,0)
internal entry number and name from the TEAM  (#404.51) file.  Only the
"^DD",727.833,727.833,23,23,5,0)
pointer to the TEAM (#404.51) file is transmitted.
"^DD",727.833,727.833,23,"DT")
3101118
"^DD",727.833,727.833,24,0)
ORDERING STOP CODE^F^^0;25^K:$L(X)>3!($L(X)<3) X
"^DD",727.833,727.833,24,3)
Answer must be 3 characters in length.
"^DD",727.833,727.833,24,21,0)
^^1^1^3101006^
"^DD",727.833,727.833,24,21,1,0)
The field contains the stop code with the order.
"^DD",727.833,727.833,24,23,0)
^^16^16^3101006^
"^DD",727.833,727.833,24,23,1,0)
For outpatients the stop code is the primary stop code for the clinic
"^DD",727.833,727.833,24,23,2,0)
(first 3 characters of the DSS Identifier field of this extract). If none
"^DD",727.833,727.833,24,23,3,0)
exists, the value is set to null.
"^DD",727.833,727.833,24,23,4,0)
 
"^DD",727.833,727.833,24,23,5,0)
For observation patients the stop code is translated using the following
"^DD",727.833,727.833,24,23,6,0)
table.
"^DD",727.833,727.833,24,23,7,0)
 
"^DD",727.833,727.833,24,23,8,0)
Treating Specialty      Observation Stop Code
"^DD",727.833,727.833,24,23,9,0)
       18                      293
"^DD",727.833,727.833,24,23,10,0)
       23                      295
"^DD",727.833,727.833,24,23,11,0)
       24                      290
"^DD",727.833,727.833,24,23,12,0)
       36                      296
"^DD",727.833,727.833,24,23,13,0)
       41                      294
"^DD",727.833,727.833,24,23,14,0)
       65                      291
"^DD",727.833,727.833,24,23,15,0)
       94                      292
"^DD",727.833,727.833,24,23,16,0)
       1J                      297
"^DD",727.833,727.833,24,"DT")
3101006
"^DD",727.833,727.833,25,0)
PLACE ORDER NUMBER^P53.79'^PSB(53.79,^1;1^Q
"^DD",727.833,727.833,25,3)
Please select the patient's Place Order Number.
"^DD",727.833,727.833,25,21,0)
^^2^2^3101118^
"^DD",727.833,727.833,25,21,1,0)
This is the order number of the Patient's Barcode Medication 
"^DD",727.833,727.833,25,21,2,0)
Administration record.
"^DD",727.833,727.833,25,23,0)
^^3^3^3101118^
"^DD",727.833,727.833,25,23,1,0)
This is the IEN of the BCMA MEDICATION LOG (#53.79) file. Derived from
"^DD",727.833,727.833,25,23,2,0)
using the 'AADT' cross reference of the BCMA MEDICATION LOG (#53.79) 
"^DD",727.833,727.833,25,23,3,0)
file, based on the start and end dates of the extract.
"^DD",727.833,727.833,25,"DT")
3101118
"^DD",727.833,727.833,26,0)
ORDER REFERENCE NUMBER^F^^1;2^K:$L(X)>15!($L(X)<1) X
"^DD",727.833,727.833,26,3)
Answer must be 1-15 characters in length.
"^DD",727.833,727.833,26,21,0)
^.001^2^2^3101115^^^
"^DD",727.833,727.833,26,21,1,0)
Contains the IEN to the actual order in the PHARMACY PATIENT (#55)
"^DD",727.833,727.833,26,21,2,0)
followed by a U for Unit Dose or V for IV.
"^DD",727.833,727.833,26,23,0)
^^3^3^3101115^
"^DD",727.833,727.833,26,23,1,0)
This field is derived by using the ORDER REFERENCE NUMBER (#.11) field
"^DD",727.833,727.833,26,23,2,0)
of the BCMA MEDICATION LOG (#53.79) file, as pointed to by the PLACE 
"^DD",727.833,727.833,26,23,3,0)
ORDER NUMBER (#25) field of this file.
"^DD",727.833,727.833,26,"DT")
3101108
"^DD",727.833,727.833,27,0)
ROUTE^P51.2'^PS(51.2,^1;3^Q
"^DD",727.833,727.833,27,3)
Select the medication route.
"^DD",727.833,727.833,27,21,0)
^.001^2^2^3101108^^^^
"^DD",727.833,727.833,27,21,1,0)
This is the route of administration for Unit Dose or IV medication for a
"^DD",727.833,727.833,27,21,2,0)
patient.
"^DD",727.833,727.833,27,23,0)
^.001^3^3^3101108^^^^
"^DD",727.833,727.833,27,23,1,0)
This field is extracted from the PARMACY PATIENT (#55) 
"^DD",727.833,727.833,27,23,2,0)
File by either the MED ROUTE (#3) field of its Unit Dose (#62) multiple.
"^DD",727.833,727.833,27,23,3,0)
Or, the MED ROUTE (#132) field of its IV (#100) multiple.
"^DD",727.833,727.833,27,"DT")
3101108
"^DD",727.833,727.833,29,0)
TIME^F^^1;5^K:$L(X)>6!($L(X)<6) X
"^DD",727.833,727.833,29,3)
Answer must be 6 characters in length.
"^DD",727.833,727.833,29,21,0)
^^1^1^3101118^
"^DD",727.833,727.833,29,21,1,0)
This field contains the actual time the medication was administered.
"^DD",727.833,727.833,29,23,0)
^^4^4^3101118^
"^DD",727.833,727.833,29,23,1,0)
This field is taken from the ACTION DATE/TIME (#.06) field from the BCMA 
"^DD",727.833,727.833,29,23,2,0)
MEDICATION LOG (#53.79) file. It is parsed so that only the time portion 
"^DD",727.833,727.833,29,23,3,0)
of the field is stored in HHMMSS format. The date portion is stored in 
"^DD",727.833,727.833,29,23,4,0)
the DAY (#8) field of this file.
"^DD",727.833,727.833,29,"DT")
3101118
"^DD",727.833,727.833,30,0)
COMPONENT CODE^V^^1;6^
"^DD",727.833,727.833,30,3)
Please select the patient's component code.
"^DD",727.833,727.833,30,21,0)
^^2^2^3101118^
"^DD",727.833,727.833,30,21,1,0)
The COMPONENT CODE contains either the dispensed drug, IV additive or 
"^DD",727.833,727.833,30,21,2,0)
IV solution that was administered for this patient.
"^DD",727.833,727.833,30,23,0)
^^11^11^3101118^
"^DD",727.833,727.833,30,23,1,0)
This is a variable pointer field used to identify either the DRUG (#50),
"^DD",727.833,727.833,30,23,2,0)
IV ADDITIVES (#52.6), or the IV SOLUTIONS (#52.7) files.
"^DD",727.833,727.833,30,23,3,0)
 
"^DD",727.833,727.833,30,23,4,0)
Enter one of the following:
"^DD",727.833,727.833,30,23,5,0)
 
"^DD",727.833,727.833,30,23,6,0)
 A.EntryName to select a IV ADDITIVES (#52.6) file.
"^DD",727.833,727.833,30,23,7,0)
 D.EntryName to select a DRUG (#50) file.
"^DD",727.833,727.833,30,23,8,0)
 S.EntryName to select a IV SOLUTIONS (#52.7) file.
"^DD",727.833,727.833,30,23,9,0)
 
"^DD",727.833,727.833,30,23,10,0)
The COMPONENT TYPE (#34) field will contain the variable pointer letter
"^DD",727.833,727.833,30,23,11,0)
(A=IV ADDITIVES, D=DRUG, S=IV SOLUTIONS) from this field.
"^DD",727.833,727.833,30,"DT")
3101118
"^DD",727.833,727.833,30,"V",0)
^.12P^^3
"^DD",727.833,727.833,30,"V",1,0)
52.6^IV ADDITIVES (#52.6) file^2^A^n^n
"^DD",727.833,727.833,30,"V",2,0)
50^DRUG (#50) file^1^D^n^n
"^DD",727.833,727.833,30,"V",3,0)
52.7^IV SOLUTIONS (#52.7) file^3^S^n^n
"^DD",727.833,727.833,31,0)
COMPONENT DOSE ORDERED^F^^1;7^K:$L(X)>30!($L(X)<1) X
"^DD",727.833,727.833,31,3)
Answer must be 1-30 characters in length.
"^DD",727.833,727.833,31,21,0)
^.001^3^3^3101108^^
"^DD",727.833,727.833,31,21,1,0)
COMPONENT DOSE ORDERED contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,31,21,2,0)
or IV solution dose ordered, to which, this medication was administered
"^DD",727.833,727.833,31,21,3,0)
for this patient.
"^DD",727.833,727.833,31,23,0)
^.001^2^2^3101108^^
"^DD",727.833,727.833,31,23,1,0)
Its value is free text derived from the DOSE ORDERED (#.02) field of the 
"^DD",727.833,727.833,31,23,2,0)
subfile #.5, #.6, #.7 multiples of the BCMA MEDICATION LOG (#53.79) file.
"^DD",727.833,727.833,31,"DT")
3101108
"^DD",727.833,727.833,32,0)
COMPONENT DOSE GIVEN^F^^1;8^K:$L(X)>30!($L(X)<1) X
"^DD",727.833,727.833,32,3)
Answer must be 1-30 characters in length.
"^DD",727.833,727.833,32,21,0)
^.001^3^3^3101108^^
"^DD",727.833,727.833,32,21,1,0)
The COMPONENT DOSE GIVEN contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,32,21,2,0)
or IV solutions dose given, to which, this medication was administered 
"^DD",727.833,727.833,32,21,3,0)
for this patient.
"^DD",727.833,727.833,32,23,0)
^.001^3^3^3101108^^
"^DD",727.833,727.833,32,23,1,0)
This field's value is free text derived from the DOSE GIVEN (#.03) field
"^DD",727.833,727.833,32,23,2,0)
of the subfile #.5, #.6, #.7 multiples of the BCMA MEDICATION LOG
"^DD",727.833,727.833,32,23,3,0)
(#53.79) file.
"^DD",727.833,727.833,32,"DT")
3101108
"^DD",727.833,727.833,33,0)
COMPONENT UNITS^F^^1;9^K:$L(X)>40!($L(X)<1) X
"^DD",727.833,727.833,33,3)
Answer must be 1-40 characters in length.
"^DD",727.833,727.833,33,21,0)
^^3^3^3101102^
"^DD",727.833,727.833,33,21,1,0)
The Component Units contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,33,21,2,0)
or IV solutions unit of administration, to which this medication was
"^DD",727.833,727.833,33,21,3,0)
administered for this patient.
"^DD",727.833,727.833,33,23,0)
^^3^3^3101025^
"^DD",727.833,727.833,33,23,1,0)
The Component Units value is free text derived from the Unit of
"^DD",727.833,727.833,33,23,2,0)
Administration (#.04) field of the subfile #.5,#.6,#.7 multiples of the
"^DD",727.833,727.833,33,23,3,0)
BCMA Medication Log (#53.79) File.
"^DD",727.833,727.833,33,"DT")
3101102
"^DD",727.833,727.833,34,0)
COMPONENT TYPE^S^D:Dispensed Drug;A:Additives;S:Solutions;^1;10^Q
"^DD",727.833,727.833,34,3)
What kind of dose was ordered?
"^DD",727.833,727.833,34,21,0)
^^2^2^3101102^
"^DD",727.833,727.833,34,21,1,0)
The Component Type is determined by the value destination of the Component
"^DD",727.833,727.833,34,21,2,0)
Code.
"^DD",727.833,727.833,34,23,0)
^^4^4^3101102^
"^DD",727.833,727.833,34,23,1,0)
This field is derived based on the COMPONENT CODE (#30) field of this 
"^DD",727.833,727.833,34,23,2,0)
file. If the component code is from the DRUG (#50)  file, it will be "D",
"^DD",727.833,727.833,34,23,3,0)
if it's from the IV ADDITIVES (#52.6) file it will  be "A", and if it is
"^DD",727.833,727.833,34,23,4,0)
from IV SOLUTIONS (#52.7) file it will be "S".
"^DD",727.833,727.833,34,"DT")
3101102
"^DD",727.833,727.833,35,0)
ACTION STATUS^S^G:GIVEN;H:HELD;R:REFUSED;N:NOT GIVEN;RM:REMOVED;I:INFUSING;S:STOPPED;C:COMPLETED;M:MISSING DOSE;^1;11^Q
"^DD",727.833,727.833,35,3)
What is the medication administration status?
"^DD",727.833,727.833,35,21,0)
^^1^1^3101025^
"^DD",727.833,727.833,35,21,1,0)
This is the status of the medication administration. 
"^DD",727.833,727.833,35,23,0)
^^2^2^3101102^
"^DD",727.833,727.833,35,23,1,0)
This field is derived from the ACTION STATUS (#.09) field of the BCMA 
"^DD",727.833,727.833,35,23,2,0)
MEDICATION LOG (#53.79) file.
"^DD",727.833,727.833,35,"DT")
3101102
"^DD",727.833,727.833,36,0)
ADMINISTRATION MEDICATION^P50.7'^PS(50.7,^1;12^Q
"^DD",727.833,727.833,36,3)
Select the proper medication.
"^DD",727.833,727.833,36,21,0)
^^1^1^3101025^
"^DD",727.833,727.833,36,21,1,0)
Administration Medication is the medication entered for the order.
"^DD",727.833,727.833,36,23,0)
^^2^2^3101102^
"^DD",727.833,727.833,36,23,1,0)
This field is derived from the ADMINISTRATION MEDICATION (#.08) field of
"^DD",727.833,727.833,36,23,2,0)
the BCMA MEDICATION LOG (#53.79) File.
"^DD",727.833,727.833,36,"DT")
3101102
"^DD",727.833,727.833,37,0)
SCHEDULED ADMINISTRATION DATE^F^^1;13^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,37,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,37,21,0)
^.001^2^2^3101018^^^
"^DD",727.833,727.833,37,21,1,0)
If a continuous order this field will contain the actual administration
"^DD",727.833,727.833,37,21,2,0)
date the medication was ordered for.
"^DD",727.833,727.833,37,23,0)
^^3^3^3101102^
"^DD",727.833,727.833,37,23,1,0)
Derived from the SCHEDULED ADMINISTRATION TIME (#.13) field of the BCMA
"^DD",727.833,727.833,37,23,2,0)
Medication Log (#53.79) File. It is parsed so that only the date portion
"^DD",727.833,727.833,37,23,3,0)
is stored in format YYYYMMDD.
"^DD",727.833,727.833,37,"DT")
3101102
"^DD",727.833,727.833,38,0)
SCHEDULED ADMINISTRATION TIME^F^^1;14^K:$L(X)>6!($L(X)<6) X
"^DD",727.833,727.833,38,3)
Answer must be 6 characters in length.
"^DD",727.833,727.833,38,21,0)
^.001^2^2^3100818^^^
"^DD",727.833,727.833,38,21,1,0)
If a continuous order this field will contain the actual administration
"^DD",727.833,727.833,38,21,2,0)
time the medication was ordered for.
"^DD",727.833,727.833,38,23,0)
^^3^3^3101102^
"^DD",727.833,727.833,38,23,1,0)
The time is derived from the time value of the SCHEDULED ADMINISTRATION
"^DD",727.833,727.833,38,23,2,0)
TIME (#.13) field of the BCMA MEDICATION LOG (#53.79) File. It is parsed 
"^DD",727.833,727.833,38,23,3,0)
so that only the time portion is returned in format HHMMSS.
"^DD",727.833,727.833,38,"DT")
3101102
"^DD",727.833,727.833,39,0)
ORDER SCHEDULE^S^C:CONTINUOUS;P:PRN;O:ONE-TIME;OC:ON-CALL;^2;1^Q
"^DD",727.833,727.833,39,3)
Choose an order schedule.
"^DD",727.833,727.833,39,21,0)
^^1^1^3101102^
"^DD",727.833,727.833,39,21,1,0)
This is the schedule type of the order.
"^DD",727.833,727.833,39,23,0)
^^2^2^3101102^
"^DD",727.833,727.833,39,23,1,0)
Derived from the SCHEDULE ORDER (#.12) field of the BCMA MEDICATION
"^DD",727.833,727.833,39,23,2,0)
LOG (#53.79) File.
"^DD",727.833,727.833,39,"DT")
3101102
"^DD",727.833,727.833,40,0)
IV UNIQUE ID^F^^2;2^K:$L(X)>30!($L(X)<3) X
"^DD",727.833,727.833,40,3)
Answer must be 3-30 characters in length.
"^DD",727.833,727.833,40,21,0)
^.001^1^1^3101102^^^
"^DD",727.833,727.833,40,21,1,0)
This is the unique ID number of an IV bag, which is generated from Inpatient Medications.
"^DD",727.833,727.833,40,23,0)
^.001^2^2^3101102^^
"^DD",727.833,727.833,40,23,1,0)
Derived from the IV UNIQUE ID (#.26) field of the BCMA MEDICATION LOG
"^DD",727.833,727.833,40,23,2,0)
(#53.79) File.
"^DD",727.833,727.833,40,"DT")
3101102
"^DD",727.833,727.833,41,0)
INFUSION RATE^F^^2;3^K:$L(X)>47!($L(X)<1) X
"^DD",727.833,727.833,41,3)
Answer must be 1-47 characters in length.
"^DD",727.833,727.833,41,21,0)
^.001^2^2^3100817^^
"^DD",727.833,727.833,41,21,1,0)
This is the infusion rate for an IV bag, which is passed by Inpatient
"^DD",727.833,727.833,41,21,2,0)
Medications.
"^DD",727.833,727.833,41,23,0)
^^2^2^3101025^
"^DD",727.833,727.833,41,23,1,0)
The infusion rate is derived from the INFUSION RATE (#.35) field of the
"^DD",727.833,727.833,41,23,2,0)
BCMA MEDICATION LOG (#53.79) File.
"^DD",727.833,727.833,41,"DT")
3101025
"^DD",727.833,727.833,42,0)
PRODUCTION DIVISION CODE^F^^2;4^K:$L(X)>7!($L(X)<3) X
"^DD",727.833,727.833,42,3)
Answer must be 3-7 characters in length.
"^DD",727.833,727.833,42,21,0)
^.001^1^1^3101119^^
"^DD",727.833,727.833,42,21,1,0)
This is the facility of the ward where the patient received medication.
"^DD",727.833,727.833,42,23,0)
^.001^4^4^3101119^^
"^DD",727.833,727.833,42,23,1,0)
Derived by getting the PATIENT DIVISION (#.03) field from the BCMA
"^DD",727.833,727.833,42,23,2,0)
MEDICATION LOG (#53.79) File, which is a pointer to the INSTITUTION (#4)
"^DD",727.833,727.833,42,23,3,0)
file.  The value is then used to call the API RADDIV^ECXDEPT to get the
"^DD",727.833,727.833,42,23,4,0)
STATION NUMBER (#99) field from the INSTITUTION (#4) file.
"^DD",727.833,727.833,42,"DT")
3101119
"^DD",727.833,727.833,43,0)
DRUG IEN^P50'^PSDRUG(^2;5^Q
"^DD",727.833,727.833,43,3)
Select the drug administered to the patient.
"^DD",727.833,727.833,43,21,0)
^.001^1^1^3101115^^
"^DD",727.833,727.833,43,21,1,0)
This is the drug administered to the patient.
"^DD",727.833,727.833,43,23,0)
^^4^4^3101115^
"^DD",727.833,727.833,43,23,1,0)
This field is derived from the COMPONENT CODE (#30) field of this file.
"^DD",727.833,727.833,43,23,2,0)
If it's a dispensed drug, it is a copy of the pointer to the DRUG (#50) 
"^DD",727.833,727.833,43,23,3,0)
file. Otherwise, it's a copy of the GENERIC DRUG (#1) field from either 
"^DD",727.833,727.833,43,23,4,0)
the IV ADDITIVES (#52.6) or the IV SOLUTIONS (#52.7) file.
"^DD",727.833,727.833,43,"DT")
3101102
"^DD",727.833,727.833,44,0)
NDC^F^^2;6^K:$L(X)>20!($L(X)<5) X
"^DD",727.833,727.833,44,3)
Answer must be 5-20 characters in length.
"^DD",727.833,727.833,44,21,0)
^.001^1^1^3101108^^
"^DD",727.833,727.833,44,21,1,0)
This is the National Drug Code for the drug/supply item in this order.
"^DD",727.833,727.833,44,23,0)
^.001^17^17^3101108^^
"^DD",727.833,727.833,44,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.833,727.833,44,23,2,0)
Derived from the NDC (#31) field in the DRUG (#50) file for the drug 
"^DD",727.833,727.833,44,23,3,0)
identified by the GENERIC DRUG (#1) field in either the IV ADDITIVES 
"^DD",727.833,727.833,44,23,4,0)
(#52.6) file for additives or the IV SOLUTIONS (#52.7) file for 
"^DD",727.833,727.833,44,23,5,0)
solutions.
"^DD",727.833,727.833,44,23,6,0)
 
"^DD",727.833,727.833,44,23,7,0)
Using the "AC" cross reference on the IV STATS (#50.8) file and a 
"^DD",727.833,727.833,44,23,8,0)
^TMP( array built from the "AC" cross reference, GENERIC DRUG is 
"^DD",727.833,727.833,44,23,9,0)
derived from the following:
"^DD",727.833,727.833,44,23,10,0)
 the IV DRUG (#.01) field,
"^DD",727.833,727.833,44,23,11,0)
 the TYPE (#6) field, and
"^DD",727.833,727.833,44,23,12,0)
 the IEN of the additive or solution for the IV DRUG within the IV DRUG 
"^DD",727.833,727.833,44,23,13,0)
 multiple (#2) field of the DATE multiple (2#) field of the IV STATS 
"^DD",727.833,727.833,44,23,14,0)
(#50. ) file.
"^DD",727.833,727.833,44,23,15,0)
 
"^DD",727.833,727.833,44,23,16,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.833,727.833,44,23,17,0)
Derived from the NDC (#31) field in the DRUG (#50) file.
"^DD",727.833,727.833,44,"DT")
3101108
"^DD",727.833,727.833,45,0)
INVESTIGATIONAL (DEA)^S^I:Investigational;^2;7^Q
"^DD",727.833,727.833,45,3)
The answer must be 1 character in length.
"^DD",727.833,727.833,45,21,0)
^^2^2^3101102^
"^DD",727.833,727.833,45,21,1,0)
This field indicates whether the DEA has labeled the drug as
"^DD",727.833,727.833,45,21,2,0)
investigational.
"^DD",727.833,727.833,45,23,0)
^^3^3^3101025^
"^DD",727.833,727.833,45,23,1,0)
This field is derived by checking the DEA, SPECIAL HDLG (#3) field of the 
"^DD",727.833,727.833,45,23,2,0)
DRUG (#50) file. If that field contains the letter 'I', this field is set 
"^DD",727.833,727.833,45,23,3,0)
to 'I', otherwise it is NULL.
"^DD",727.833,727.833,45,"DT")
3101102
"^DD",727.833,727.833,46,0)
VA DRUG CLASSIFICATION^F^^2;8^K:$L(X)>5!($L(X)<1) X
"^DD",727.833,727.833,46,3)
Answer must be 1-5 characters in length.
"^DD",727.833,727.833,46,21,0)
^^1^1^3101025^
"^DD",727.833,727.833,46,21,1,0)
This is the VA Drug Classification for the item in this order.
"^DD",727.833,727.833,46,23,0)
^^2^2^3101025^
"^DD",727.833,727.833,46,23,1,0)
This field is derived from the VA CLASSIFICATION (#2) field of the DRUG 
"^DD",727.833,727.833,46,23,2,0)
(#50) file. 
"^DD",727.833,727.833,46,"DT")
3101025
"^DD",727.833,727.833,47,0)
MASTER PATIENT INDEX^F^^2;9^K:$L(X)>10!($L(X)<1) X
"^DD",727.833,727.833,47,3)
Answer must be 1-10 characters in length.
"^DD",727.833,727.833,47,21,0)
^^1^1^3101026^
"^DD",727.833,727.833,47,21,1,0)
Unique national VA patient identifier.
"^DD",727.833,727.833,47,23,0)
^^4^4^3101102^
"^DD",727.833,727.833,47,23,1,0)
This field is derived by calling the API $$GETICN^MPIF001 passing
"^DD",727.833,727.833,47,23,2,0)
the Patient's IEN from the PATIENT (#2) file. Which is stored in this 
"^DD",727.833,727.833,47,23,3,0)
file as the Patient No. - DFN (#4) field. The API returns the first piece 
"^DD",727.833,727.833,47,23,4,0)
of the "MPI" cross reference. 
"^DD",727.833,727.833,47,"DT")
3101102
"^DD",727.833,727.833,48,0)
DOM, PRRTP & SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CWT/TR;^2;10^Q
"^DD",727.833,727.833,48,3)
Choose the type of program to which the patient was admitted.
"^DD",727.833,727.833,48,21,0)
^.001^4^4^3101108^^
"^DD",727.833,727.833,48,21,1,0)
This indicates if the Patient is admitted to a DOM (Domiciliary Care),
"^DD",727.833,727.833,48,21,2,0)
PRRTP (Psychosocial Residential Rehabilitation Treatment Program) or
"^DD",727.833,727.833,48,21,3,0)
SARRTP (Substance Abuse Residential Rehabilitation Treatment Program) at
"^DD",727.833,727.833,48,21,4,0)
time of service.
"^DD",727.833,727.833,48,23,0)
^.001^4^4^3101108^^
"^DD",727.833,727.833,48,23,1,0)
This field is derived by retrieving the DOM/PRRTP/SARRTP CODE (#2) field 
"^DD",727.833,727.833,48,23,2,0)
from the DSS TREATING SPECIALTY TRANSLATION (#727.831) file based on the 
"^DD",727.833,727.833,48,23,3,0)
Patient's admission site's SPECIALTY (#1) field in the FACILITY TREATING 
"^DD",727.833,727.833,48,23,4,0)
SPECIALTY (#45.7) file. 
"^DD",727.833,727.833,48,"DT")
3101108
"^DD",727.833,727.833,49,0)
OBSERVATION PATIENT INDICATOR^S^Y:Yes;N:No;^2;11^Q
"^DD",727.833,727.833,49,3)
Is the patient an Extended Outpatient?
"^DD",727.833,727.833,49,21,0)
^.001^1^1^3101110^^^
"^DD",727.833,727.833,49,21,1,0)
This field indicates whether or not the patient is an Extended Outpatient.
"^DD",727.833,727.833,49,23,0)
^.001^2^2^3101110^^^^
"^DD",727.833,727.833,49,23,1,0)
This field is derived by retrieving the OBSERVATION PAT INDICATOR (#4) 
"^DD",727.833,727.833,49,23,2,0)
field of the DSS TREATING SPECIALTY TRANSLATION (#727.831) file. 
"^DD",727.833,727.833,49,"DT")
3101108
"^DD",727.833,727.833,50,0)
ENCOUNTER NUMBER^F^^2;12^K:$L(X)>17!($L(X)<1) X
"^DD",727.833,727.833,50,3)
Answer must be 1-17 characters in length.
"^DD",727.833,727.833,50,21,0)
^.001^3^3^3101116^^
"^DD",727.833,727.833,50,21,1,0)
The field is derived from the inpatient/outpatient status, SSN,
"^DD",727.833,727.833,50,21,2,0)
day, treating specialty, observation patient
"^DD",727.833,727.833,50,21,3,0)
indicator, and DSS identifier or feeder key values in the record.
"^DD",727.833,727.833,50,23,0)
^.001^22^22^3101116^^
"^DD",727.833,727.833,50,23,1,0)
Determined by the following:  If the IN/OUT PATIENT INDICATOR (#7) field
"^DD",727.833,727.833,50,23,2,0)
= "I", the ENCOUNTER NUMBER is the Patient SSN concatenated with the
"^DD",727.833,727.833,50,23,3,0)
DAY (#8) field (in format YYMMDD) of this file concatenated with the
"^DD",727.833,727.833,50,23,4,0)
letter "I". 
"^DD",727.833,727.833,50,23,5,0)
 
"^DD",727.833,727.833,50,23,6,0)
If the IN/OUT PATIENT INDICATOR (#7) field is "O" and the
"^DD",727.833,727.833,50,23,7,0)
OBSERVATION PATIENT INDICATOR (#49) field is "NO", then encounter is
"^DD",727.833,727.833,50,23,8,0)
presumed to be an Outpatient Encounter and the ENCOUNTER NUMBER field is
"^DD",727.833,727.833,50,23,9,0)
the SSN (#5) field concatenated with the DAY (#8) field (in julian date
"^DD",727.833,727.833,50,23,10,0)
format YYDDD) concatenated with the letters "PHA" which is constant 
"^DD",727.833,727.833,50,23,11,0)
for the BCMA Extract.
"^DD",727.833,727.833,50,23,12,0)
 
"^DD",727.833,727.833,50,23,13,0)
If the IN/OUT PATIENT INDICATOR (#7) field is 'O' and the OBSERVATION
"^DD",727.833,727.833,50,23,14,0)
PATIENT INDICATOR (#49) field is equal to "YES", then the ENCOUNTER NUMBER
"^DD",727.833,727.833,50,23,15,0)
is the SSN (#5) field concatenated with the DAY (#8) field (in julian 
"^DD",727.833,727.833,50,23,16,0)
format YYDDD) concatenated with the Ordering Stop Code (#24) field.
"^DD",727.833,727.833,50,23,17,0)
 
"^DD",727.833,727.833,50,23,18,0)
*NOTE: The length of this field is based on SSN always being 9 characters 
"^DD",727.833,727.833,50,23,19,0)
in length, even though SSN (#5) field in this file can be 9 or 10 
"^DD",727.833,727.833,50,23,20,0)
characters long. If an SSN is a pseudo SSN (ending with the letter "P" 
"^DD",727.833,727.833,50,23,21,0)
and being 10 characters long) the letter "P" is removed so that the 
"^DD",727.833,727.833,50,23,22,0)
field is 9 characters long.
"^DD",727.833,727.833,50,"DT")
3101116
"^DD",727.833,727.833,51,0)
MEANS TEST^F^^2;13^K:$L(X)>1!($L(X)<1) X
"^DD",727.833,727.833,51,3)
Answer must be 1 character in length.
"^DD",727.833,727.833,51,21,0)
^^3^3^3101102^
"^DD",727.833,727.833,51,21,1,0)
This field contains the Patient's Means Test status code. The means test 
"^DD",727.833,727.833,51,21,2,0)
determines veterans copay responsibilities and helps to determine 
"^DD",727.833,727.833,51,21,3,0)
enrollment priority.
"^DD",727.833,727.833,51,23,0)
^^6^6^3101102^
"^DD",727.833,727.833,51,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN (#4) field
"^DD",727.833,727.833,51,23,2,0)
in this file, MEANS TEST data is derived from
"^DD",727.833,727.833,51,23,3,0)
the CURRENT MEANS TEST STATUS (#.14) field in the PATIENT (#2) file. This
"^DD",727.833,727.833,51,23,4,0)
field is a pointer to the MEANS TEST STATUS (#408.32) file.  Using the
"^DD",727.833,727.833,51,23,5,0)
means test pointer, the data is derived from the CODE (#.02) field in the
"^DD",727.833,727.833,51,23,6,0)
MEANS TEST STATUS (#408.32) file. 
"^DD",727.833,727.833,51,"DT")
3101102
"^DD",727.833,727.833,52,0)
ELIGIBILITY^F^^2;14^K:$L(X)>3!($L(X)<2) X
"^DD",727.833,727.833,52,3)
Answer must be 2-3 characters in length.
"^DD",727.833,727.833,52,21,0)
^.001^1^1^3100818^^
"^DD",727.833,727.833,52,21,1,0)
Patient's Primary Eligibility converted to NPCD eligibility code.
"^DD",727.833,727.833,52,23,0)
^^10^10^3101102^
"^DD",727.833,727.833,52,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.833,727.833,52,23,2,0)
(#4), ELIGIBILITY data is derived from the PRIMARY ELIGIBILITY CODE field
"^DD",727.833,727.833,52,23,3,0)
(#.361) in the PATIENT file (#2). PRIMARY ELIGIBILITY CODE is a pointer to
"^DD",727.833,727.833,52,23,4,0)
the ELIGIBILITY CODE file (#8). The data is derived from the MAS
"^DD",727.833,727.833,52,23,5,0)
ELIGIBILITY CODE field (#8) in the ELIGIBILITY CODE file (#8) which in
"^DD",727.833,727.833,52,23,6,0)
turn is a pointer to the MAS ELIGIBILITY CODE file (#8.1).
"^DD",727.833,727.833,52,23,7,0)
 
"^DD",727.833,727.833,52,23,8,0)
The pointer value to file #8.1 is converted by ELIG^ECXUTL3 to the
"^DD",727.833,727.833,52,23,9,0)
corresponding eligibility code used by NPCD.  This code is composed of
"^DD",727.833,727.833,52,23,10,0)
two or three numeric characters.
"^DD",727.833,727.833,52,"DT")
3101102
"^DD",727.833,727.833,53,0)
ENROLLMENT LOCATION^F^^2;15^K:$L(X)>7!($L(X)<3) X
"^DD",727.833,727.833,53,3)
Answer must be 3-7 characters in length.
"^DD",727.833,727.833,53,21,0)
^.001^1^1^3101102^^
"^DD",727.833,727.833,53,21,1,0)
This is the Patient's Station number.
"^DD",727.833,727.833,53,23,0)
^.001^5^5^3101102^^
"^DD",727.833,727.833,53,23,1,0)
The PREFERRED FACILITY (#27.02) field of the PATIENT (#2) file
"^DD",727.833,727.833,53,23,2,0)
is defined as the facility that the patient chooses to designate
"^DD",727.833,727.833,53,23,3,0)
as his preferred location for care.  The PREFERRED FACILITY (# 27.02) 
"^DD",727.833,727.833,53,23,4,0)
field is a pointer to the INSTITUTION (#4) file.  From that file,
"^DD",727.833,727.833,53,23,5,0)
the value in the STATION NUMBER (#99) field is used.
"^DD",727.833,727.833,53,"DT")
3101102
"^DD",727.833,727.833,54,0)
ENROLLMENT CATEGORY^S^E:ENROLLED;N:NOT ENROLLED;P:IN PROCESS;^2;16^Q
"^DD",727.833,727.833,54,3)
What is the patient's enrollment status?
"^DD",727.833,727.833,54,21,0)
^^1^1^3101026^
"^DD",727.833,727.833,54,21,1,0)
Patient's enrollment category.
"^DD",727.833,727.833,54,23,0)
^^2^2^3101102^
"^DD",727.833,727.833,54,23,1,0)
ENROLLMENT CATEGORY is derived from the standard call $$CATEGORY^DGENA4
"^DD",727.833,727.833,54,23,2,0)
using the INPUT patient DFN and the ENROLLMENT STATUS (#55) field.
"^DD",727.833,727.833,54,"DT")
3101102
"^DD",727.833,727.833,55,0)
ENROLLMENT STATUS^P27.15'^DGEN(27.15,^2;17^Q
"^DD",727.833,727.833,55,3)
Select the patient's enrollment status.
"^DD",727.833,727.833,55,21,0)
^.001^1^1^3101108^^
"^DD",727.833,727.833,55,21,1,0)
Patient's enrollment status.
"^DD",727.833,727.833,55,23,0)
^.001^2^2^3101108^^
"^DD",727.833,727.833,55,23,1,0)
ENROLLMENT STATUS is derived from the PATIENT ENROLLMENT file (#27.11)
"^DD",727.833,727.833,55,23,2,0)
ENROLLMENT STATUS field (#.04).
"^DD",727.833,727.833,55,"DT")
3101108
"^DD",727.833,727.833,56,0)
ENROLLMENT PRIORITY^F^^2;18^K:$L(X)>2!($L(X)<1) X
"^DD",727.833,727.833,56,3)
Answer must be 1-2 characters in length.
"^DD",727.833,727.833,56,21,0)
^^2^2^3100817^
"^DD",727.833,727.833,56,21,1,0)
This field contains the enrollment priority group and the enrollment
"^DD",727.833,727.833,56,21,2,0)
priority subgroup.
"^DD",727.833,727.833,56,23,0)
^^21^21^3101102^
"^DD",727.833,727.833,56,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group 
"^DD",727.833,727.833,56,23,2,0)
(#.07) field and the enrollment priority subgroup (#.12) field from
"^DD",727.833,727.833,56,23,3,0)
the Patient Enrollment File #27.11.
"^DD",727.833,727.833,56,23,4,0)
 
"^DD",727.833,727.833,56,23,5,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.833,727.833,56,23,6,0)
 
"^DD",727.833,727.833,56,23,7,0)
                                '1' FOR GROUP 1 
"^DD",727.833,727.833,56,23,8,0)
                                '2' FOR GROUP 2 
"^DD",727.833,727.833,56,23,9,0)
                                '3' FOR GROUP 3 
"^DD",727.833,727.833,56,23,10,0)
                                '4' FOR GROUP 4 
"^DD",727.833,727.833,56,23,11,0)
                                '5' FOR GROUP 5 
"^DD",727.833,727.833,56,23,12,0)
                                '6' FOR GROUP 6 
"^DD",727.833,727.833,56,23,13,0)
                                '7' FOR GROUP 7 
"^DD",727.833,727.833,56,23,14,0)
                                '8' FOR GROUP 8 
"^DD",727.833,727.833,56,23,15,0)
 
"^DD",727.833,727.833,56,23,16,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.833,727.833,56,23,17,0)
 
"^DD",727.833,727.833,56,23,18,0)
                                'a' FOR 1 
"^DD",727.833,727.833,56,23,19,0)
                                'c' FOR 3 
"^DD",727.833,727.833,56,23,20,0)
                                'e' FOR 5 
"^DD",727.833,727.833,56,23,21,0)
                                'g' FOR 7   
"^DD",727.833,727.833,56,"DT")
3101102
"^DD",727.833,727.833,57,0)
USER ENROLLEE^S^U:USER ENROLLEE;^3;1^Q
"^DD",727.833,727.833,57,3)
Is the Patient in the Enrollment system?
"^DD",727.833,727.833,57,21,0)
^.001^1^1^3101110^^^^
"^DD",727.833,727.833,57,21,1,0)
The fields indicates if the Patient is in the Enrollment system. 
"^DD",727.833,727.833,57,23,0)
^.001^5^5^3101110^^^^
"^DD",727.833,727.833,57,23,1,0)
User enrollee is determined by checking the Patient Enrollment (#27.11) 
"^DD",727.833,727.833,57,23,2,0)
file. When a user has a current or future fiscal year in the VistA User
"^DD",727.833,727.833,57,23,3,0)
Enrollee Status (#.04) field the value is set to 'U' and Null if no date
"^DD",727.833,727.833,57,23,4,0)
or a past year's value is contained. Determined by the use of an API: 
"^DD",727.833,727.833,57,23,5,0)
$$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in. 
"^DD",727.833,727.833,57,"DT")
3101110
"^DD",727.833,727.833,57,"V",0)
^.12P
"^DD",727.833,727.833,58,0)
ETHNICITY^F^^4;1^K:$L(X)>6!($L(X)<1) X
"^DD",727.833,727.833,58,3)
Answer must be 1-6 characters in length.
"^DD",727.833,727.833,58,21,0)
^^2^2^3101015^
"^DD",727.833,727.833,58,21,1,0)
Indicates the patient's Ethnicity, based on the PTF (Patient Treatment 
"^DD",727.833,727.833,58,21,2,0)
File) definitions. 
"^DD",727.833,727.833,58,23,0)
^^9^9^3101102^
"^DD",727.833,727.833,58,23,1,0)
Using the patient pointer (DFN) ETHNICITY is derived from the PTF VALUE
"^DD",727.833,727.833,58,23,2,0)
(#5) field of the ETHNICITY (#10.2) file  pointed to by the ETHNICITY
"^DD",727.833,727.833,58,23,3,0)
INFORMATION (#.01) field of the ETHNICITY INFORMATION (#2.06) subfile of
"^DD",727.833,727.833,58,23,4,0)
the PATIENT (#2) file. The PTF VALUE (#5) field is just 1 character, this 
"^DD",727.833,727.833,58,23,5,0)
field holds up to 6 self-identified ethnicities.
"^DD",727.833,727.833,58,23,6,0)
 
"^DD",727.833,727.833,58,23,7,0)
The above will occur only if the METHOD OF COLLECTION (#.02) field of the
"^DD",727.833,727.833,58,23,8,0)
ETHNICITY INFORMATION (#2.06) subfile is set to 1 (SELF-IDENTIFICATION),
"^DD",727.833,727.833,58,23,9,0)
otherwise ETHNICITY with be set to null.
"^DD",727.833,727.833,58,"DT")
3101102
"^DD",727.833,727.833,59,0)
RACE 1^F^^4;2^K:$L(X)>6!($L(X)<1) X
"^DD",727.833,727.833,59,3)
Answer must be 1-6 characters in length.
"^DD",727.833,727.833,59,21,0)
^^1^1^3101108^
"^DD",727.833,727.833,59,21,1,0)
This field is the Patient's race code(s). 
"^DD",727.833,727.833,59,23,0)
^^12^12^3101108^
"^DD",727.833,727.833,59,23,1,0)
Using the patient pointer (DFN) this field is derived from the Patient 
"^DD",727.833,727.833,59,23,2,0)
Treatment File (PTF) VALUE (#5) field of the RACE (#10) file pointed
"^DD",727.833,727.833,59,23,3,0)
to by the RACE INFORMATION (#.01) field of the RACE INFORMATION (#2.02)
"^DD",727.833,727.833,59,23,4,0)
subfile of the PATIENT (#2) file. The PTF VALUE (#5) field is just 1 
"^DD",727.833,727.833,59,23,5,0)
character, this field holds up to 6 self-identified races.
"^DD",727.833,727.833,59,23,6,0)
 
"^DD",727.833,727.833,59,23,7,0)
 
"^DD",727.833,727.833,59,23,8,0)
Only those RACE INFORMATION values in the RACE INFORMATION (#2.03) subfile
"^DD",727.833,727.833,59,23,9,0)
where the METHOD OF COLLECTION (#.02) field is set to 1
"^DD",727.833,727.833,59,23,10,0)
(SELF-IDENTIFICATION), will be included in the RACE 1 field.  If any of
"^DD",727.833,727.833,59,23,11,0)
the RACE INFORMATION values returned is "C" (DECLINED TO ANSWER), that
"^DD",727.833,727.833,59,23,12,0)
will be the only value included in the RACE1 field.
"^DD",727.833,727.833,59,"DT")
3101108
"^DD",727.833,727.833,60,0)
VETERAN^S^Y:VETERAN;N:NOT VETERAN;^4;3^Q
"^DD",727.833,727.833,60,3)
Is the patient a veteran?
"^DD",727.833,727.833,60,21,0)
^^1^1^3101015^
"^DD",727.833,727.833,60,21,1,0)
The field indicates if the Patient is a Veteran or not.
"^DD",727.833,727.833,60,23,0)
^^2^2^3101102^
"^DD",727.833,727.833,60,23,1,0)
Using the patient pointer (DFN) this field is derived by reading the 
"^DD",727.833,727.833,60,23,2,0)
VETERAN (Y/N)? (#1901) field in the PATIENT (#2) file. 
"^DD",727.833,727.833,60,"DT")
3101102
"^DD",727.833,727.833,61,0)
PERIOD OF SERVICE^F^^4;4^K:$L(X)>1!($L(X)<1) X
"^DD",727.833,727.833,61,3)
Answer must be 1 character in length.
"^DD",727.833,727.833,61,21,0)
^^2^2^3101015^
"^DD",727.833,727.833,61,21,1,0)
The period of service, which best classifies this patient based on
"^DD",727.833,727.833,61,21,2,0)
eligibility code.
"^DD",727.833,727.833,61,23,0)
^^4^4^3101108^
"^DD",727.833,727.833,61,23,1,0)
This field is derived by pulling the Period of Service (#.323) field from 
"^DD",727.833,727.833,61,23,2,0)
the Patient (#2) file. The Period of Service (#.323) field is a pointer 
"^DD",727.833,727.833,61,23,3,0)
to the Period of Service (#21) file. This field is derived from the CODE 
"^DD",727.833,727.833,61,23,4,0)
(#.03) field of that file.
"^DD",727.833,727.833,61,"DT")
3101108
"^DD",727.833,727.833,62,0)
POW STATUS^S^Y:YES POW;N:NO POW;U:UNKNOWN;^4;5^Q
"^DD",727.833,727.833,62,3)
Was the patient a POW?
"^DD",727.833,727.833,62,21,0)
^.001^1^1^3101108^^
"^DD",727.833,727.833,62,21,1,0)
This field indicates if the patient was ever a Prisoner Of War (POW).
"^DD",727.833,727.833,62,23,0)
^.001^3^3^3101108^^
"^DD",727.833,727.833,62,23,1,0)
This field is derived by checking the POW STATUS INDICATED? (#.525) 
"^DD",727.833,727.833,62,23,2,0)
field in the PATIENT (#2) file.
"^DD",727.833,727.833,62,23,3,0)
The status indicator is returned by SVC^VADPT. 
"^DD",727.833,727.833,62,"DT")
3101108
"^DD",727.833,727.833,63,0)
POW LOCATION^P22'^DIC(22,^4;6^Q
"^DD",727.833,727.833,63,3)
Select the POW location/period.
"^DD",727.833,727.833,63,21,0)
^^1^1^3101108^
"^DD",727.833,727.833,63,21,1,0)
This is the location/period where the patient was a POW.
"^DD",727.833,727.833,63,23,0)
^^3^3^3101108^
"^DD",727.833,727.833,63,23,1,0)
This field is a pointer derived by reading the POW CONFINEMENT LOCATION
"^DD",727.833,727.833,63,23,2,0)
(#.526) field from the PATIENT (#2) file. The location is retrieved by
"^DD",727.833,727.833,63,23,3,0)
calling SVC^VADPT.
"^DD",727.833,727.833,63,"DT")
3101108
"^DD",727.833,727.833,64,0)
RADIATION STATUS^S^Y:Ionizing radiation exposure;N:NO Ionizing radiation exposure;U:UNKNOWN;^4;7^Q
"^DD",727.833,727.833,64,3)
Radiation Exposure Indicated?
"^DD",727.833,727.833,64,21,0)
^.001^1^1^3101108^^
"^DD",727.833,727.833,64,21,1,0)
This field indicates if the Patient was exposed to Ionizing radiation.
"^DD",727.833,727.833,64,23,0)
^.001^3^3^3101108^^
"^DD",727.833,727.833,64,23,1,0)
The field is derived by pulling the RADIATION EXPOSURE INDICATED?
"^DD",727.833,727.833,64,23,2,0)
(#.32103) field from the PATIENT (#2) file.  The status indicator is
"^DD",727.833,727.833,64,23,3,0)
returned by calling SVC^VADPT.
"^DD",727.833,727.833,64,"DT")
3101108
"^DD",727.833,727.833,65,0)
AGENT ORANGE STATUS^S^Y:YES;N:NO;U:UNKNOWN;^4;8^Q
"^DD",727.833,727.833,65,3)
Agent Orange Exposure Indicated? 
"^DD",727.833,727.833,65,21,0)
^^1^1^3101015^
"^DD",727.833,727.833,65,21,1,0)
This field indicates a patient's Agent Orange Exposure status. 
"^DD",727.833,727.833,65,23,0)
^^3^3^3101102^
"^DD",727.833,727.833,65,23,1,0)
The field is derived by pulling the AGENT ORANGE EXPOS. INDICATED? 
"^DD",727.833,727.833,65,23,2,0)
(#.32102) field from the PATIENT (#2) file. The status indicator is
"^DD",727.833,727.833,65,23,3,0)
returned by SVC^VADPT. 
"^DD",727.833,727.833,65,"DT")
3101102
"^DD",727.833,727.833,66,0)
AGENT ORANGE LOCATION^S^K:KOREAN DMZ;V:VIETNAM;O:OTHER;^4;9^Q
"^DD",727.833,727.833,66,3)
Where was patient exposed to Agent Orange?
"^DD",727.833,727.833,66,21,0)
^.001^2^2^3101108^^^
"^DD",727.833,727.833,66,21,1,0)
If this AGENT ORANGE indicator is yes, then this field indicates where
"^DD",727.833,727.833,66,21,2,0)
the exposure took place.  
"^DD",727.833,727.833,66,23,0)
^.001^3^3^3101108^^^
"^DD",727.833,727.833,66,23,1,0)
Using the Patient Pointer (DFN), AGENT ORANGE LOCATION is derived from
"^DD",727.833,727.833,66,23,2,0)
the AGENT ORANGE EXPOSURE LOCATION (#.3213) field of the PATIENT (#2) 
"^DD",727.833,727.833,66,23,3,0)
file. The value is returned from the API SVC^VAPDT. 
"^DD",727.833,727.833,66,"DT")
3101108
"^DD",727.833,727.833,67,0)
PURPLE HEART INDICATOR^S^Y:YES;N:NO;^4;10^Q
"^DD",727.833,727.833,67,3)
Is patient a purple heart recipient and a veteran?
"^DD",727.833,727.833,67,21,0)
^.001^1^1^3101108^^
"^DD",727.833,727.833,67,21,1,0)
This field Indicates whether or not a patient is a Purple Heart recipient.
"^DD",727.833,727.833,67,23,0)
^.001^2^2^3101108^^
"^DD",727.833,727.833,67,23,1,0)
The Purple Heart Indicator is derived by calling SVC^VADPT which returns 
"^DD",727.833,727.833,67,23,2,0)
the CURRENT PH INDICATOR (#.531) field from the PATIENT (#2) file.
"^DD",727.833,727.833,67,"DT")
3101108
"^DD",727.833,727.833,68,0)
MST STATUS^S^Y:Yes, Screened reports MST;N:No, Screened does not report MST;U:Unknown, not screened;D:Screened Declines to answer;^4;11^Q
"^DD",727.833,727.833,68,3)
Choose the MST status for this patient.
"^DD",727.833,727.833,68,21,0)
^.001^2^2^3101102^^^
"^DD",727.833,727.833,68,21,1,0)
This field indicates if the patient suffered Military
"^DD",727.833,727.833,68,21,2,0)
Sexual Trauma (MST). 
"^DD",727.833,727.833,68,23,0)
^.001^3^3^3101102^^^
"^DD",727.833,727.833,68,23,1,0)
The field will be derived by pulling the MST STATUS (#3) field from the
"^DD",727.833,727.833,68,23,2,0)
MST HISTORY (#29.11) file. A call will be made to $$GETSTAT^DGMSTAPI
"^DD",727.833,727.833,68,23,3,0)
passing the Patient Identifier (DFN). 
"^DD",727.833,727.833,68,"DT")
3101102
"^DD",727.833,727.833,69,0)
CNH/SH STATUS^S^Y:YES;N:NO;^4;12^Q
"^DD",727.833,727.833,69,3)
Is patient currently in a Contract Nursing Home?
"^DD",727.833,727.833,69,21,0)
^^2^2^3101108^
"^DD",727.833,727.833,69,21,1,0)
This field indicates if the Patient is in a Contract Nursing Home 
"^DD",727.833,727.833,69,21,2,0)
(CNH).
"^DD",727.833,727.833,69,23,0)
^.001^2^2^3101108^^
"^DD",727.833,727.833,69,23,1,0)
This field is determined by pulling the CNH CURRENT (#148) field from the 
"^DD",727.833,727.833,69,23,2,0)
PATIENT (#2) file. 
"^DD",727.833,727.833,69,"DT")
3101108
"^DD",727.833,727.833,70,0)
HEAD & NECK CANCER INDICATOR^S^Y:YES;N:NO;^4;13^Q
"^DD",727.833,727.833,70,3)
Has patient been diagnosed with cancer of the head and/or neck?
"^DD",727.833,727.833,70,21,0)
^^1^1^3101108^
"^DD",727.833,727.833,70,21,1,0)
Identifies whether patient's diagnosis was for Head and/or Neck Cancer.
"^DD",727.833,727.833,70,23,0)
^.001^3^3^3101108^^
"^DD",727.833,727.833,70,23,1,0)
This indicator is derived by passing the patient pointer (DFN)
"^DD",727.833,727.833,70,23,2,0)
to the API $$GETCUR^DGNTAPI to retrieve the HEAD/NECK
"^DD",727.833,727.833,70,23,3,0)
CA DX (#2.01) field of the NOSE AND THROAT RADIUM HISTORY (#28.11) file.
"^DD",727.833,727.833,70,"DT")
3101102
"^DD",727.833,727.833,71,0)
SHAD STATUS^S^Y:YES;N:NO;^4;14^Q
"^DD",727.833,727.833,71,3)
Does patient meet requirements for SHAD?
"^DD",727.833,727.833,71,21,0)
^^2^2^3101108^
"^DD",727.833,727.833,71,21,1,0)
Indicates whether patient meets requirements for Shipboard Hazard And
"^DD",727.833,727.833,71,21,2,0)
Defense (SHAD).
"^DD",727.833,727.833,71,23,0)
^.001^3^3^3101108^^^^
"^DD",727.833,727.833,71,23,1,0)
This field is the Shipboard Hazard and Defense which is
"^DD",727.833,727.833,71,23,2,0)
derived by using DBIA #4462 GETSHAD^DGUTL3(DFN). Which returns the PROJ 
"^DD",727.833,727.833,71,23,3,0)
112/SHAD (#.32115) field from the Patient (#2) file.
"^DD",727.833,727.833,71,"DT")
3101108
"^DD",727.833,727.833,72,0)
PATIENT TYPE^F^^4;15^K:$L(X)>2!($L(X)<2) X
"^DD",727.833,727.833,72,3)
Answer must be 2 characters in length.
"^DD",727.833,727.833,72,21,0)
^^2^2^3101015^
"^DD",727.833,727.833,72,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen
"^DD",727.833,727.833,72,21,2,0)
at a VA facility.
"^DD",727.833,727.833,72,23,0)
^^16^16^3101015^
"^DD",727.833,727.833,72,23,1,0)
Patient type is determined by the TYPE (#391) field of the PATIENT
"^DD",727.833,727.833,72,23,2,0)
(#2) file which points to the TYPE OF PATIENT (#391) file entries . Every
"^DD",727.833,727.833,72,23,3,0)
patient added to the system must have a TYPE specified. It best
"^DD",727.833,727.833,72,23,4,0)
classifies a patient as one of the following values listed below.
"^DD",727.833,727.833,72,23,5,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.833,727.833,72,23,6,0)
 
"^DD",727.833,727.833,72,23,7,0)
AC= ACTIVE DUTY
"^DD",727.833,727.833,72,23,8,0)
AL= ALLIED VETERAN
"^DD",727.833,727.833,72,23,9,0)
CO= COLLATERAL
"^DD",727.833,727.833,72,23,10,0)
EM= EMPLOYEE
"^DD",727.833,727.833,72,23,11,0)
IN= INELIGIBLE
"^DD",727.833,727.833,72,23,12,0)
MI= MILITARY RETIREE
"^DD",727.833,727.833,72,23,13,0)
NO= NON-VETERAN (OTHER)
"^DD",727.833,727.833,72,23,14,0)
NS= NSC VETERAN
"^DD",727.833,727.833,72,23,15,0)
SC= SC VETERAN
"^DD",727.833,727.833,72,23,16,0)
TR= TRICARE
"^DD",727.833,727.833,72,"DT")
3101015
"^DD",727.833,727.833,73,0)
CV STATUS ELIGIBILITY^S^Y:YES;E:ELIGIBILITY EXPIRED;^4;16^Q
"^DD",727.833,727.833,73,3)
Is patient a Combat Veteran?
"^DD",727.833,727.833,73,21,0)
^.001^2^2^3101119^^^^
"^DD",727.833,727.833,73,21,1,0)
This field indicates whether or not a patient can be considered a Combat 
"^DD",727.833,727.833,73,21,2,0)
Veteran (CV) at the time of treatment. 
"^DD",727.833,727.833,73,23,0)
^^13^13^3101119^
"^DD",727.833,727.833,73,23,1,0)
The CV STATUS ELIGIBILITY is determined by the use of API $$CVEDT^DGCV
"^DD",727.833,727.833,73,23,2,0)
(DFN, DAY (#8) field in FM format) that checks the Combat Vet End Date
"^DD",727.833,727.833,73,23,3,0)
(#.5295) field from the Patient (#2) file to determine CV Status.  API
"^DD",727.833,727.833,73,23,4,0)
returns three pieces i.e. 1^3010106^0, the first piece is resolved as
"^DD",727.833,727.833,73,23,5,0)
follows.
"^DD",727.833,727.833,73,23,6,0)
 
"^DD",727.833,727.833,73,23,7,0)
  1 - qualifies as a CV
"^DD",727.833,727.833,73,23,8,0)
  0 - does not qualify as a CV
"^DD",727.833,727.833,73,23,9,0)
 -1 - bad DFN or date
"^DD",727.833,727.833,73,23,10,0)
 
"^DD",727.833,727.833,73,23,11,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES' 
"^DD",727.833,727.833,73,23,12,0)
or 'E' for 'ELIGIBILITY EXPIRED".  If this field is null it indicates 
"^DD",727.833,727.833,73,23,13,0)
that the patient is not eligible.
"^DD",727.833,727.833,73,"DT")
3101118
"^DD",727.833,727.833,74,0)
CV ELIGIBILITY END DATE^F^^4;17^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,74,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,74,21,0)
^.001^1^1^3101110^^^
"^DD",727.833,727.833,74,21,1,0)
This field is the patient's Combat Veteran (CV) eligibility end date. 
"^DD",727.833,727.833,74,23,0)
^^5^5^3101118^
"^DD",727.833,727.833,74,23,1,0)
The CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV
"^DD",727.833,727.833,74,23,2,0)
(DFN, DAY (#8) in FM format) that checks the Combat Vet End Date (#.5295)
"^DD",727.833,727.833,74,23,3,0)
field from the Patient (#2) file to determine CV Status.  The API returns
"^DD",727.833,727.833,74,23,4,0)
three pieces (i.e. 1^3010106^0) the 2nd piece is the Combat Vet End Date
"^DD",727.833,727.833,74,23,5,0)
which  is stored in YYYYMMDD format.
"^DD",727.833,727.833,74,"DT")
3101118
"^DD",727.833,727.833,75,0)
ENCOUNTER CV^S^Y:YES;^4;18^Q
"^DD",727.833,727.833,75,3)
Was the patient CV eligible on the treatment date?
"^DD",727.833,727.833,75,21,0)
^^2^2^3101110^
"^DD",727.833,727.833,75,21,1,0)
This Field indicates if the patient is a Combat Veteran (CV) based on the 
"^DD",727.833,727.833,75,21,2,0)
treatment date and the end date of combat service.
"^DD",727.833,727.833,75,23,0)
^^12^12^3101118^
"^DD",727.833,727.833,75,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN, 
"^DD",727.833,727.833,75,23,2,0)
DAY #(8) in FM format) that checks the Combat Vet End Date (#.5295) field,
"^DD",727.833,727.833,75,23,3,0)
from the Patient (#2)  file to determine CV Status using the DAY (#8)
"^DD",727.833,727.833,75,23,4,0)
field. The API returns three pieces (i.e.  1^3010106^0).
"^DD",727.833,727.833,75,23,5,0)
 
"^DD",727.833,727.833,75,23,6,0)
The third piece returns:
"^DD",727.833,727.833,75,23,7,0)
 
"^DD",727.833,727.833,75,23,8,0)
1 - vet was eligible on date specified
"^DD",727.833,727.833,75,23,9,0)
0 - vet was not eligible on date specified
"^DD",727.833,727.833,75,23,10,0)
 
"^DD",727.833,727.833,75,23,11,0)
Based on these returns, the value for this field shall be Y =Yes, or
"^DD",727.833,727.833,75,23,12,0)
null.
"^DD",727.833,727.833,75,"DT")
3101118
"^DD",727.833,727.833,76,0)
NATIONAL PATIENT RECORD FLAG^S^Y:YES;^4;19^Q
"^DD",727.833,727.833,76,3)
Does patient have any active record flags?
"^DD",727.833,727.833,76,21,0)
^^2^2^3101108^
"^DD",727.833,727.833,76,21,1,0)
This field will indicate if the Patient has any type of a National Flag
"^DD",727.833,727.833,76,21,2,0)
indicator.
"^DD",727.833,727.833,76,23,0)
^^7^7^3101108^
"^DD",727.833,727.833,76,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File # 
"^DD",727.833,727.833,76,23,2,0)
26.15. This file contains a list of the Category 1 (National) Patient 
"^DD",727.833,727.833,76,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are 
"^DD",727.833,727.833,76,23,4,0)
established at a National level. NATIONAL PATIENT RECORD FLAG is 
"^DD",727.833,727.833,76,23,5,0)
retrieved via an API $$GETACT^DGPFAPI(DFN, TARGET_ROOT. Field value is 
"^DD",727.833,727.833,76,23,6,0)
"Y" if a Category I flag is present and active, otherwise it is 
"^DD",727.833,727.833,76,23,7,0)
NULL.
"^DD",727.833,727.833,76,"DT")
3101108
"^DD",727.833,727.833,77,0)
ERI^S^K:HURRICANE KATRINA;^4;20^Q
"^DD",727.833,727.833,77,3)
Was the patient in a FEMA-designated impacted zip code area?
"^DD",727.833,727.833,77,21,0)
^.001^2^2^3101108^^^
"^DD",727.833,727.833,77,21,1,0)
Identifies patients from impacted zip code areas designated by the
"^DD",727.833,727.833,77,21,2,0)
Federal Emergency Management Agency (FEMA). 
"^DD",727.833,727.833,77,23,0)
^.001^2^2^3101108^^
"^DD",727.833,727.833,77,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.833,727.833,77,23,2,0)
(#.181) located in the PATIENT file (#2). 
"^DD",727.833,727.833,77,"DT")
3101115
"^DD",727.833,727.833,78,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^4;21^Q
"^DD",727.833,727.833,78,3)
Does patient claim exposure to SWA conditions?
"^DD",727.833,727.833,78,21,0)
^^9^9^3101102^
"^DD",727.833,727.833,78,21,1,0)
This field is used to indicate if this visit represents treatment of a VA
"^DD",727.833,727.833,78,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.833,727.833,78,21,3,0)
 
"^DD",727.833,727.833,78,21,4,0)
The South West Asia Theater of operations is defined as:
"^DD",727.833,727.833,78,21,5,0)
 
"^DD",727.833,727.833,78,21,6,0)
Iraq, Kuwait, Saudi Arabia, the neutral zone between Iraq and
"^DD",727.833,727.833,78,21,7,0)
Saudi Arabia, Bahrain, Qatar, the United Arab Emirates, Oman, the Gulf
"^DD",727.833,727.833,78,21,8,0)
of Aden, the Gulf of Oman, the Persian Gulf, the Arabian Sea, the
"^DD",727.833,727.833,78,21,9,0)
Red Sea and the airspace above these locations.
"^DD",727.833,727.833,78,23,0)
^^3^3^3101102^
"^DD",727.833,727.833,78,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field
"^DD",727.833,727.833,78,23,2,0)
(#.322013) in the Patient File (#2) using the patient's DFN.  The status
"^DD",727.833,727.833,78,23,3,0)
indicator is returned by SVC^VADPT. 
"^DD",727.833,727.833,78,"DT")
3101102
"^DD",727.833,727.833,79,0)
OEF/OIF^F^^4;22^K:$L(X)>9!($L(X)<9) X
"^DD",727.833,727.833,79,3)
Answer must be 1-9 characters in length.
"^DD",727.833,727.833,79,21,0)
^^3^3^3101108^
"^DD",727.833,727.833,79,21,1,0)
The Military Operation(s) in which the patient was in combat. This field
"^DD",727.833,727.833,79,21,2,0)
is a length of nine characters and reflects the OEF or OIF where this
"^DD",727.833,727.833,79,21,3,0)
patient was in combat.
"^DD",727.833,727.833,79,23,0)
^^9^9^3101108^
"^DD",727.833,727.833,79,23,1,0)
The value of this field is derived from the LOCATION OF SERVICE field
"^DD",727.833,727.833,79,23,2,0)
(#.01) of the SERVICE [OEF OR OIF] (#2.3215) sub-file located in the
"^DD",727.833,727.833,79,23,3,0)
PATIENT (#2) file.  DSS will capture once, each location where the veteran
"^DD",727.833,727.833,79,23,4,0)
served. In order to accommodate multiple locations, the values for this
"^DD",727.833,727.833,79,23,5,0)
field are concatenated into this 9-character field.  Possible field values
"^DD",727.833,727.833,79,23,6,0)
are one or more combinations of the following:
"^DD",727.833,727.833,79,23,7,0)
OEF =  Operation Enduring Freedom
"^DD",727.833,727.833,79,23,8,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.833,727.833,79,23,9,0)
UNK =  Unknown OEF/OIF
"^DD",727.833,727.833,79,"DT")
3101102
"^DD",727.833,727.833,80,0)
OEF/OIF RETURN DATE^F^^4;23^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,80,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,80,21,0)
^^4^4^3101102^
"^DD",727.833,727.833,80,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is the
"^DD",727.833,727.833,80,21,2,0)
end date of military pay for this OEF/OIF deployment. This date field has
"^DD",727.833,727.833,80,21,3,0)
a format equal to YYYYMMDD. In cases of multiple OEF/OIF tours, this field
"^DD",727.833,727.833,80,21,4,0)
contains only most recent return date.
"^DD",727.833,727.833,80,23,0)
^^3^3^3101102^
"^DD",727.833,727.833,80,23,1,0)
The value of this field is derived of the OEF/OIF TO DATE field (#.03) of
"^DD",727.833,727.833,80,23,2,0)
the SERVICE [OEF OR OIF] (#.3215) subfile located in the PATIENT file
"^DD",727.833,727.833,80,23,3,0)
(#2).
"^DD",727.833,727.833,80,"DT")
3101102
"^DD",727.833,727.833,81,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^4;24^Q
"^DD",727.833,727.833,81,.1)
Patient Category (PATCAT)
"^DD",727.833,727.833,81,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.833,727.833,81,21,0)
^.001^6^6^3101108^^
"^DD",727.833,727.833,81,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.833,727.833,81,21,2,0)
Care Center) Reconciliation.
"^DD",727.833,727.833,81,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.833,727.833,81,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.833,727.833,81,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.833,727.833,81,21,6,0)
pays for.
"^DD",727.833,727.833,81,23,0)
^^11^11^3101108^
"^DD",727.833,727.833,81,23,1,0)
If the VistA Patient Type Code (TYPE (#391) field of the Patient (#2)
"^DD",727.833,727.833,81,23,2,0)
file) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.833,727.833,81,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES (#361) field
"^DD",727.833,727.833,81,23,4,0)
of the PATIENT (#2) file), which points to locally modifiable ELIGIBILITY
"^DD",727.833,727.833,81,23,5,0)
CODE (#8) file should be evaluated. If the value in the
"^DD",727.833,727.833,81,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.833,727.833,81,23,7,0)
the value should be placed in this field.
"^DD",727.833,727.833,81,23,8,0)
 
"^DD",727.833,727.833,81,23,9,0)
FHCC hospitals have special codes that are added to the ELIGIBILITY CODE 
"^DD",727.833,727.833,81,23,10,0)
(#8) file that are used to identify the PATCAT status and may be unique 
"^DD",727.833,727.833,81,23,11,0)
to their facility. 
"^DD",727.833,727.833,81,"DT")
3101108
"^DD",728,728,0)
FIELD^^75^71
"^DD",728,728,0,"DDA")
N
"^DD",728,728,0,"DT")
3100921
"^DD",728,728,0,"IX","B",728,.01)

"^DD",728,728,0,"NM","DSS EXTRACTS")

"^DD",728,728,0,"VRPK")
ECX
"^DD",728,728,.01,0)
NAME^RP4'^DIC(4,^0;1^Q
"^DD",728,728,.01,1,0)
^.1^^-1
"^DD",728,728,.01,1,1,0)
728^B
"^DD",728,728,.01,1,1,1)
S ^ECX(728,"B",$E(X,1,30),DA)=""
"^DD",728,728,.01,1,1,2)
K ^ECX(728,"B",$E(X,1,30),DA)
"^DD",728,728,.01,3)
Enter your DSS location or station number.
"^DD",728,728,.01,21,0)
^.001^2^2^3031006^^^^
"^DD",728,728,.01,21,1,0)
This field contains a pointer to the corresponding location (station number)
"^DD",728,728,.01,21,2,0)
entry in the INSTITUTION file (#4).
"^DD",728,728,.01,23,0)
^.001^1^1^3031006^^^^
"^DD",728,728,.01,23,1,0)
Pointer to the INSTITUTION file (#4).
"^DD",728,728,.01,"DT")
3031003
"^DD",728,728,.5,0)
LAB LMIP^SI^0:NO;1:YES;^LMIP;1^Q
"^DD",728,728,.5,3)
Enter "YES" if you are ready to send LMIP Codes for LAB Extract.
"^DD",728,728,.5,21,0)
^^15^15^2960605^
"^DD",728,728,.5,21,1,0)
This field is a flag that indicates whether a facility is ready to send 
"^DD",728,728,.5,21,2,0)
LMIP codes for the LAB Extract. To answer "YES" to this question, the 
"^DD",728,728,.5,21,3,0)
site must be able to answer "YES" to BOTH of the following questions:
"^DD",728,728,.5,21,4,0)
 
"^DD",728,728,.5,21,5,0)
1. They are in DSS Implementation Round 5 or higher, OR they are in IR1 
"^DD",728,728,.5,21,6,0)
   through IR4 and are extracting data for FY97 or beyond.
"^DD",728,728,.5,21,7,0)
2. All Lab CO directives for LMIP have been completed at their facility.
"^DD",728,728,.5,21,8,0)
   This means that their Lab Service has matched all entries in the 
"^DD",728,728,.5,21,9,0)
   LABORATORY TEST file (#60) to an LMIP code and therefore they are 
"^DD",728,728,.5,21,10,0)
   ready to use the new DSS LAB Extract version that sends only the LMIP 
"^DD",728,728,.5,21,11,0)
   codes to DSS for their initial LAB Feeder Key Values.
"^DD",728,728,.5,21,12,0)
 
"^DD",728,728,.5,21,13,0)
**NOTE** Once this field is set to "YES", the facility is not asked any 
"^DD",728,728,.5,21,14,0)
of these questions again and will automatically use the new DSS LAB 
"^DD",728,728,.5,21,15,0)
Extract version for all future extracts.
"^DD",728,728,.5,"DT")
2970523
"^DD",728,728,7,0)
LAST DATE LAB^D^^7;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,7,3)
Enter the last date that information was extracted for Laboratory.
"^DD",728,728,7,21,0)
^^2^2^2950314^^^^
"^DD",728,728,7,21,1,0)
This field contains the last date that Laboratory information was
"^DD",728,728,7,21,2,0)
extracted to the DSS software.
"^DD",728,728,7,23,0)
^^2^2^2960625^^
"^DD",728,728,7,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,7,23,2,0)
the VA FileMan.
"^DD",728,728,7,"DT")
2900522
"^DD",728,728,8,0)
LAST DATE OP PHARMACY^D^^7;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,8,3)
Enter the last date that information was extracted for Outpatient Pharmacy.
"^DD",728,728,8,21,0)
^^2^2^2950314^^^
"^DD",728,728,8,21,1,0)
This field contains the last date that Outpatient Pharmacy information
"^DD",728,728,8,21,2,0)
was extracted to the DSS software.
"^DD",728,728,8,23,0)
^^2^2^2951018^
"^DD",728,728,8,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,8,23,2,0)
the VA FileMan.
"^DD",728,728,8,"DT")
2900522
"^DD",728,728,9,0)
LAST DATE EC^D^^7;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,9,3)
Enter the last date that information was extracted for Event Capture.
"^DD",728,728,9,21,0)
^^2^2^2950314^^^^
"^DD",728,728,9,21,1,0)
This field contains the last date that Event Capture information was
"^DD",728,728,9,21,2,0)
extracted to the DSS software.
"^DD",728,728,9,23,0)
^^2^2^2951018^
"^DD",728,728,9,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,9,23,2,0)
the VA FileMan.
"^DD",728,728,9,"DT")
2940328
"^DD",728,728,10,0)
LAST DATE ADT^D^^7;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,10,3)
Enter the last date that information was extracted for ADT.
"^DD",728,728,10,21,0)
^^2^2^2950315^^^^
"^DD",728,728,10,21,1,0)
This field contains the last date that MAS admission/discharge/transfer
"^DD",728,728,10,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,10,23,0)
^^2^2^2951018^
"^DD",728,728,10,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,10,23,2,0)
the VA FileMan.
"^DD",728,728,10,"DT")
2900821
"^DD",728,728,11,0)
LAST DATE SURGERY^D^^7;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,11,3)
Enter the last date that information was extracted for Surgery.
"^DD",728,728,11,21,0)
^^2^2^2950314^^^^
"^DD",728,728,11,21,1,0)
This field contains the last date that Surgery information was extracted
"^DD",728,728,11,21,2,0)
to the DSS software.
"^DD",728,728,11,23,0)
^^2^2^2951018^
"^DD",728,728,11,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,11,23,2,0)
the VA FileMan.
"^DD",728,728,11,"DT")
2900614
"^DD",728,728,12,0)
LAST DATE RADIOLOGY^D^^7;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,12,3)
Enter the last date that information was extracted for Radiology.
"^DD",728,728,12,21,0)
^^2^2^2950314^^^^
"^DD",728,728,12,21,1,0)
This field contains the last date that Radiology information was extracted
"^DD",728,728,12,21,2,0)
to the DSS software.
"^DD",728,728,12,23,0)
^^2^2^2951018^
"^DD",728,728,12,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,12,23,2,0)
the VA FileMan.
"^DD",728,728,12,"DT")
2900821
"^DD",728,728,13,0)
LAST DATE NURSING^D^^7;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,13,3)
Enter the last date that information was extracted for Nursing.
"^DD",728,728,13,21,0)
^^2^2^2950314^^
"^DD",728,728,13,21,1,0)
This field contains the last date that Nursing information was extracted 
"^DD",728,728,13,21,2,0)
to the DSS software.
"^DD",728,728,13,23,0)
^^2^2^2951018^
"^DD",728,728,13,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,13,23,2,0)
the VA FileMan.
"^DD",728,728,13,"DT")
2901210
"^DD",728,728,14,0)
LAST DATE UD MEDS^D^^7;8^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,14,3)
Enter the last date that information was extracted for Pharmacy Unit Dose.
"^DD",728,728,14,21,0)
^^2^2^2951018^^^
"^DD",728,728,14,21,1,0)
This field contains the last date that Pharmacy Unit Dose information
"^DD",728,728,14,21,2,0)
was extracted to the DSS software.
"^DD",728,728,14,23,0)
^^2^2^2951018^
"^DD",728,728,14,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,14,23,2,0)
the VA FileMan.
"^DD",728,728,14,"DT")
2910214
"^DD",728,728,15,0)
LAST DATE DENTAL^D^^7;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,15,3)
Enter the last date that information was extracted for Dental.
"^DD",728,728,15,21,0)
^^2^2^2950314^^
"^DD",728,728,15,21,1,0)
This field contains the last date that Dental information was extracted
"^DD",728,728,15,21,2,0)
to the DSS software.
"^DD",728,728,15,23,0)
^^2^2^2951018^
"^DD",728,728,15,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,15,23,2,0)
the VA FileMan.
"^DD",728,728,15,"DT")
2910228
"^DD",728,728,16,0)
LAST DATE IFCAP^D^^7;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,16,3)
Enter the last date that information was extracted for IFCAP.
"^DD",728,728,16,21,0)
^^2^2^2950314^^
"^DD",728,728,16,21,1,0)
This field contains the last date that IFCAP/DSS Unit information was
"^DD",728,728,16,21,2,0)
extracted to the DSS software.
"^DD",728,728,16,23,0)
^^2^2^2951018^
"^DD",728,728,16,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,16,23,2,0)
the VA FileMan.
"^DD",728,728,16,"DT")
2910228
"^DD",728,728,17,0)
LAST DATE CLINIC VISITS^D^^7;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,17,3)
Enter the last date that information was extracted for Clinic Visits.
"^DD",728,728,17,21,0)
^^2^2^2950314^^
"^DD",728,728,17,21,1,0)
This field contains the last date that Clinic Visits information was
"^DD",728,728,17,21,2,0)
extracted to the DSS software.
"^DD",728,728,17,23,0)
^^2^2^2951018^
"^DD",728,728,17,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,17,23,2,0)
the VA FileMan.
"^DD",728,728,17,"DT")
2910322
"^DD",728,728,18,0)
LAST DATE WARD STOCK^D^^7;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,18,3)
Enter the last date that information was extracted for Ward Stock.
"^DD",728,728,18,21,0)
^^2^2^2950314^^
"^DD",728,728,18,21,1,0)
This field contains the last date that Ward Stock information was extracted
"^DD",728,728,18,21,2,0)
to the DSS software.
"^DD",728,728,18,23,0)
^^2^2^2951018^
"^DD",728,728,18,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,18,23,2,0)
the VA FileMan.
"^DD",728,728,18,"DT")
2910514
"^DD",728,728,19,0)
LAST DATE ADMISSIONS^D^^7;13^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,19,3)
Enter the last date that information was extracted for Patient Admissions.
"^DD",728,728,19,21,0)
^^2^2^2990413^^^^
"^DD",728,728,19,21,1,0)
This field contains the last date that Patient Admissions information
"^DD",728,728,19,21,2,0)
was extracted to the DSS software.
"^DD",728,728,19,23,0)
^^2^2^2990413^^^^
"^DD",728,728,19,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,19,23,2,0)
the VA FileMan.
"^DD",728,728,19,"DT")
2910603
"^DD",728,728,20,0)
LAST DATE MOVEMENT^D^^7;14^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,20,3)
Enter the last date that information was extracted for Patient Movement.
"^DD",728,728,20,21,0)
^^2^2^2950314^^
"^DD",728,728,20,21,1,0)
This field contains the last date that Patient Movement information was
"^DD",728,728,20,21,2,0)
extracted to the DSS software.
"^DD",728,728,20,23,0)
^^2^2^2951018^
"^DD",728,728,20,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,20,23,2,0)
the VA FileMan.
"^DD",728,728,20,"DT")
2910603
"^DD",728,728,21,0)
LAST DATE NO SHOWS^D^^7;15^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,21,3)
Enter the last date that information was extracted for Clinic No-Shows.
"^DD",728,728,21,21,0)
^^2^2^2950314^^
"^DD",728,728,21,21,1,0)
This field contains the last date that Clinic No-Shows information was
"^DD",728,728,21,21,2,0)
extracted to the DSS software.
"^DD",728,728,21,23,0)
^^2^2^2951018^
"^DD",728,728,21,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,21,23,2,0)
the VA FileMan.
"^DD",728,728,21,"DT")
2910604
"^DD",728,728,22,0)
LAB^S^R:RUNNING;^7.1;1^Q
"^DD",728,728,22,3)
Enter R if the extract is currently running.
"^DD",728,728,22,21,0)
^.001^1^1^3100921^^^
"^DD",728,728,22,21,1,0)
This field contains data if the Laboratory extract is currently running.
"^DD",728,728,22,23,0)
^.001^2^2^3100921^^
"^DD",728,728,22,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,22,23,2,0)
the VA FileMan.
"^DD",728,728,22,"DT")
2910613
"^DD",728,728,23,0)
OP^S^R:RUNNING;^7.1;2^Q
"^DD",728,728,23,3)
Enter R if the extract is currently running.
"^DD",728,728,23,21,0)
^^2^2^2950314^^^
"^DD",728,728,23,21,1,0)
This fields contains data if the Outpatient Pharmacy extract is currently
"^DD",728,728,23,21,2,0)
running.
"^DD",728,728,23,23,0)
^^2^2^2951018^
"^DD",728,728,23,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,23,23,2,0)
the VA FileMan.
"^DD",728,728,23,"DT")
2910613
"^DD",728,728,24,0)
EC^S^R:RUNNING;^7.1;3^Q
"^DD",728,728,24,3)
Enter R if the extract is currently running.
"^DD",728,728,24,21,0)
^^1^1^2950314^^^
"^DD",728,728,24,21,1,0)
This field contains data if the Event Capture extract is currently running.
"^DD",728,728,24,23,0)
^^2^2^2951018^
"^DD",728,728,24,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,24,23,2,0)
the VA FileMan.
"^DD",728,728,24,"DT")
2910613
"^DD",728,728,25,0)
SURGERY^S^R:RUNNING;^7.1;5^Q
"^DD",728,728,25,3)
Enter R if the extract is currently running.
"^DD",728,728,25,21,0)
^^1^1^2970929^^^
"^DD",728,728,25,21,1,0)
This field contains data if the Surgery extract is currently running.
"^DD",728,728,25,23,0)
^^2^2^2970929^^
"^DD",728,728,25,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,25,23,2,0)
the VA FileMan.
"^DD",728,728,25,"DT")
2910613
"^DD",728,728,26,0)
RADIOLOGY^S^R:RUNNING;^7.1;6^Q
"^DD",728,728,26,3)
Enter R if the extract is currently running.
"^DD",728,728,26,21,0)
^^1^1^2950314^^
"^DD",728,728,26,21,1,0)
This field contains data if the Radiology extract is currently running.
"^DD",728,728,26,23,0)
^^2^2^2951018^
"^DD",728,728,26,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,26,23,2,0)
the VA FileMan.
"^DD",728,728,26,"DT")
2910613
"^DD",728,728,27,0)
NURSING^S^R:RUNNING;^7.1;7^Q
"^DD",728,728,27,3)
Enter R if the extract is currently running.
"^DD",728,728,27,21,0)
^^1^1^2950314^^
"^DD",728,728,27,21,1,0)
This field contains data if the Nursing extract is currently running.
"^DD",728,728,27,23,0)
^^2^2^2951018^
"^DD",728,728,27,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,27,23,2,0)
the VA FileMan.
"^DD",728,728,27,"DT")
2910613
"^DD",728,728,28,0)
UD^S^R:RUNNING;^7.1;8^Q
"^DD",728,728,28,3)
Enter R if the extract is currently running.
"^DD",728,728,28,21,0)
^^2^2^2951018^^^
"^DD",728,728,28,21,1,0)
This field contains data if the Pharmacy Unit Dose extract is currently
"^DD",728,728,28,21,2,0)
running.
"^DD",728,728,28,23,0)
^^2^2^2951018^
"^DD",728,728,28,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,28,23,2,0)
the VA FileMan.
"^DD",728,728,28,"DT")
2910613
"^DD",728,728,29,0)
ADT^S^R:RUNNING;^7.1;4^Q
"^DD",728,728,29,3)
Enter R if the extract is currently running.
"^DD",728,728,29,21,0)
^^2^2^2950315^^
"^DD",728,728,29,21,1,0)
This field contains data if the MAS Admission/Discharge/Transfer extract
"^DD",728,728,29,21,2,0)
is currently running.
"^DD",728,728,29,23,0)
^^2^2^2951018^
"^DD",728,728,29,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,29,23,2,0)
the VA FileMan.
"^DD",728,728,29,"DT")
2910613
"^DD",728,728,30,0)
DENTAL^S^R:RUNNING;^7.1;9^Q
"^DD",728,728,30,3)
Enter R if the extract is currently running.
"^DD",728,728,30,21,0)
^^1^1^2950315^^^
"^DD",728,728,30,21,1,0)
This field contains data if the Dental extract is currently running.
"^DD",728,728,30,23,0)
^^2^2^2951018^
"^DD",728,728,30,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,30,23,2,0)
the VA FileMan.
"^DD",728,728,30,"DT")
2910613
"^DD",728,728,31,0)
IFCAP^S^R:RUNNING;^7.1;10^Q
"^DD",728,728,31,3)
Enter R if the extract is currently running.
"^DD",728,728,31,21,0)
^^2^2^2950315^^
"^DD",728,728,31,21,1,0)
This field contains data if the IFCAP/DSS Unit extract is currently
"^DD",728,728,31,21,2,0)
running.
"^DD",728,728,31,23,0)
^^2^2^2951018^
"^DD",728,728,31,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,31,23,2,0)
the VA FileMan.
"^DD",728,728,31,"DT")
2910613
"^DD",728,728,32,0)
CLINIC^S^R:RUNNING;^7.1;11^Q
"^DD",728,728,32,3)
Enter R if the extract is currently running.
"^DD",728,728,32,21,0)
^^1^1^2951018^^^
"^DD",728,728,32,21,1,0)
This field contains data if the Clinic Visit extract is currently running.
"^DD",728,728,32,23,0)
^^2^2^2951018^
"^DD",728,728,32,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,32,23,2,0)
the VA FileMan.
"^DD",728,728,32,"DT")
2910613
"^DD",728,728,33,0)
WARD STOCK^S^R:RUNNING;^7.1;12^Q
"^DD",728,728,33,3)
Enter R if the extract is currently running.
"^DD",728,728,33,21,0)
^^1^1^2950315^^
"^DD",728,728,33,21,1,0)
This field contains data if the Ward Stock extract is currently running.
"^DD",728,728,33,23,0)
^^2^2^2951018^
"^DD",728,728,33,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,33,23,2,0)
the VA FileMan.
"^DD",728,728,33,"DT")
2910613
"^DD",728,728,34,0)
ADMISSIONS^S^R:RUNNING;^7.1;13^Q
"^DD",728,728,34,3)
Enter R if the extract is currently running.
"^DD",728,728,34,21,0)
^^2^2^2990413^^^^
"^DD",728,728,34,21,1,0)
This field contains data if the Patient Admissions extract is currently
"^DD",728,728,34,21,2,0)
running.
"^DD",728,728,34,23,0)
^^2^2^2990413^^^^
"^DD",728,728,34,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,34,23,2,0)
the VA FileMan.
"^DD",728,728,34,"DT")
2910613
"^DD",728,728,35,0)
MOVES^S^R:RUNNING;^7.1;14^Q
"^DD",728,728,35,3)
Enter R if the extract is currently running.
"^DD",728,728,35,21,0)
^^2^2^2950315^^
"^DD",728,728,35,21,1,0)
This field contains data if the Patient Movements extract is currently
"^DD",728,728,35,21,2,0)
running.
"^DD",728,728,35,23,0)
^^2^2^2951018^
"^DD",728,728,35,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,35,23,2,0)
the VA FileMan.
"^DD",728,728,35,"DT")
2910613
"^DD",728,728,36,0)
NO SHOW^S^R:RUNNING;^7.1;15^Q
"^DD",728,728,36,3)
Enter R if the extract is currently running.
"^DD",728,728,36,21,0)
^^1^1^2950315^^
"^DD",728,728,36,21,1,0)
This field contains data if the Clinic No-Show extract is currently running.
"^DD",728,728,36,23,0)
^^2^2^2951018^
"^DD",728,728,36,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,36,23,2,0)
the VA FileMan.
"^DD",728,728,36,"DT")
2910613
"^DD",728,728,37,0)
LAST DATE IVS^D^^7;16^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,37,3)
Enter the last date that information was extracted for Pharmacy IV.
"^DD",728,728,37,21,0)
^^2^2^2980707^^^^
"^DD",728,728,37,21,1,0)
This field contains the last date that the Pharmacy IV information was
"^DD",728,728,37,21,2,0)
extracted to the DSS software.
"^DD",728,728,37,23,0)
^^2^2^2980707^^^^
"^DD",728,728,37,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,37,23,2,0)
the VA FileMan.
"^DD",728,728,37,"DT")
2911204
"^DD",728,728,38,0)
IVS^S^R:RUNNING;^7.1;16^Q
"^DD",728,728,38,3)
Enter R if the extract is currently running.
"^DD",728,728,38,21,0)
^^1^1^2951018^^^^
"^DD",728,728,38,21,1,0)
This field contains data if the Pharmacy IV extract is currently running.
"^DD",728,728,38,23,0)
^^2^2^2951018^^^^
"^DD",728,728,38,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,38,23,2,0)
the VA FileMan.
"^DD",728,728,38,"DT")
2911204
"^DD",728,728,39,0)
LAST DATE TREATING SPECIALTY^D^^7;17^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,39,3)
Enter the last date that information was extracted for Treating Specialty Change.
"^DD",728,728,39,21,0)
^^2^2^2951018^^^^
"^DD",728,728,39,21,1,0)
This field contains the last date that the Treating Specialty Change
"^DD",728,728,39,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,39,23,0)
^^2^2^2951018^^^^
"^DD",728,728,39,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,39,23,2,0)
the VA FileMan.
"^DD",728,728,39,"DT")
2920410
"^DD",728,728,40,0)
TREATING SPEC^S^R:RUNNING;^7.1;17^Q
"^DD",728,728,40,3)
Enter R if the extract is currently running.
"^DD",728,728,40,21,0)
^^2^2^2951018^^^
"^DD",728,728,40,21,1,0)
This field contains data if the Treating Specialty Change extract is
"^DD",728,728,40,21,2,0)
currently running.
"^DD",728,728,40,23,0)
^^2^2^2951018^^^
"^DD",728,728,40,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,40,23,2,0)
the VA FileMan.
"^DD",728,728,40,"DT")
2920410
"^DD",728,728,41,0)
LAST DATE IFCAP SUMMARY^D^^7;18^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,41,3)
Enter the last date that information was extracted for the IFCAP Summary.
"^DD",728,728,41,21,0)
^^2^2^2951018^^^
"^DD",728,728,41,21,1,0)
This field contains the last date that IFCAP Summary information was
"^DD",728,728,41,21,2,0)
extracted to the DSS software.
"^DD",728,728,41,23,0)
^^2^2^2951018^
"^DD",728,728,41,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,41,23,2,0)
the VA FileMan.
"^DD",728,728,41,"DT")
2920826
"^DD",728,728,42,0)
IFCAP SUMMARY^S^R:RUNNING;^7.1;18^Q
"^DD",728,728,42,3)
Enter R if the extract is currently running.
"^DD",728,728,42,21,0)
^^1^1^2950315^^
"^DD",728,728,42,21,1,0)
This field comntains data if the IFCAP Summary extract is currently running.
"^DD",728,728,42,23,0)
^^2^2^2951018^
"^DD",728,728,42,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,42,23,2,0)
the VA FileMan.
"^DD",728,728,42,"DT")
2920826
"^DD",728,728,43,0)
LAST DATE IV DETAIL^D^^7;19^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,43,3)
Enter the last date that information was extracted for the Pharmacy IV Detail.
"^DD",728,728,43,21,0)
^^2^2^2980707^^^^
"^DD",728,728,43,21,1,0)
This field contains the last date that the Pharmacy IV Detail information
"^DD",728,728,43,21,2,0)
was extracted to the DSS software.
"^DD",728,728,43,23,0)
^^2^2^2980707^^
"^DD",728,728,43,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,43,23,2,0)
the VA FileMan.
"^DD",728,728,43,"DT")
2920922
"^DD",728,728,44,0)
IV DETAIL^S^R:RUNNING;^7.1;19^Q
"^DD",728,728,44,3)
Enter R if the extract is currently running.
"^DD",728,728,44,21,0)
^^2^2^2951025^^^^
"^DD",728,728,44,21,1,0)
This field contains data if the Pharmacy IV Detail extract is currently
"^DD",728,728,44,21,2,0)
running.
"^DD",728,728,44,23,0)
^^2^2^2951025^^^^
"^DD",728,728,44,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,44,23,2,0)
the VA FileMan.
"^DD",728,728,44,"DT")
2920922
"^DD",728,728,45,0)
SETUP DATE^D^^S;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,45,3)
Enter the date that the Setup information was extracted.
"^DD",728,728,45,21,0)
^^2^2^2951018^^^^
"^DD",728,728,45,21,1,0)
This field contains the last date that the Setup information
"^DD",728,728,45,21,2,0)
was extracted to the DSS software.
"^DD",728,728,45,23,0)
^^2^2^2951018^
"^DD",728,728,45,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,45,23,2,0)
the VA FileMan.
"^DD",728,728,45,"DT")
2921222
"^DD",728,728,46,0)
SETUP RUNNING^S^R:RUNNING;^S;2^Q
"^DD",728,728,46,3)
Enter R if the extract is currently running.
"^DD",728,728,46,21,0)
^^1^1^2951018^^^
"^DD",728,728,46,21,1,0)
This field contains data if the Setup extract is running.
"^DD",728,728,46,23,0)
^^2^2^2951018^
"^DD",728,728,46,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,46,23,2,0)
the VA FileMan.
"^DD",728,728,46,"DT")
2921222
"^DD",728,728,47,0)
LAST DATE PAI^D^^7;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,47,3)
Enter the last date that information was extracted for PAI.
"^DD",728,728,47,21,0)
^^2^2^2950315^^^
"^DD",728,728,47,21,1,0)
This field contains the last date that the PAI information was
"^DD",728,728,47,21,2,0)
extracted to the DSS software.
"^DD",728,728,47,23,0)
^^2^2^2951018^^^^
"^DD",728,728,47,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,47,23,2,0)
the VA FileMan.
"^DD",728,728,47,"DT")
2930106
"^DD",728,728,48,0)
PAI^S^R:RUNNING;^7.1;20^Q
"^DD",728,728,48,3)
Enter R if the extract is currently running.
"^DD",728,728,48,21,0)
^^1^1^2950315^^
"^DD",728,728,48,21,1,0)
This field contains data if the PAI extract is currently running.
"^DD",728,728,48,23,0)
^^2^2^2951018^^^
"^DD",728,728,48,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,48,23,2,0)
the VA FileMan.
"^DD",728,728,48,"DT")
2930106
"^DD",728,728,49,0)
AUSTIN QUEUE NAME^FX^^QUEUE;1^K:$L(X)>3!($L(X)<3)!'(X?1"DM"1U)!(X=$P($G(^("QUEUE")),"^",2)) X
"^DD",728,728,49,3)
Enter the three character identifier of the assigned Austin queue for your site.
"^DD",728,728,49,21,0)
^^3^3^2960130^^^^
"^DD",728,728,49,21,1,0)
The name of the queue in Austin to which DSS data will be sent.  This
"^DD",728,728,49,21,2,0)
should be of the two characters DM followed by a single upper case
"^DD",728,728,49,21,3,0)
letter.
"^DD",728,728,49,23,0)
7^^6^6^2960130^^^
"^DD",728,728,49,23,1,0)
This field determines the Austin queue to which data is sent.
"^DD",728,728,49,23,2,0)
During implementation, sites at different stages may be asked
"^DD",728,728,49,23,3,0)
to direct transmission to different queues.  This field is used
"^DD",728,728,49,23,4,0)
by the routine ECXTRANS.  The entry in this field should begin
"^DD",728,728,49,23,5,0)
with the two letters DM.  The third letter will be assigned by
"^DD",728,728,49,23,6,0)
the Austin Automation Center.
"^DD",728,728,49,"DT")
3030715
"^DD",728,728,50,0)
LAST DATE LAB RESULTS^D^^7;21^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,50,3)
Enter the last date that information was extracted for Lab Results.
"^DD",728,728,50,21,0)
^^2^2^2951018^^^
"^DD",728,728,50,21,1,0)
This field contains the last date that the Laboratory Results information
"^DD",728,728,50,21,2,0)
was extracted to the DSS software.
"^DD",728,728,50,23,0)
^^2^2^2951018^^
"^DD",728,728,50,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,50,23,2,0)
the VA FileMan.
"^DD",728,728,50,"DT")
2950307
"^DD",728,728,51,0)
LAB RESULTS^S^R:RUNNING;^7.1;21^Q
"^DD",728,728,51,3)
Enter R if the extract is currently running.
"^DD",728,728,51,21,0)
^^2^2^2951018^^
"^DD",728,728,51,21,1,0)
This field contains data if the Laboratory Results extract is currently
"^DD",728,728,51,21,2,0)
running.
"^DD",728,728,51,23,0)
^^2^2^2951018^
"^DD",728,728,51,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,51,23,2,0)
the VA FileMan.
"^DD",728,728,51,"DT")
2950307
"^DD",728,728,52,0)
RECIPIENT^D^^R1;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,52,3)
Enter the last date that Recipient information was extracted.
"^DD",728,728,52,21,0)
^^2^2^2951018^^^
"^DD",728,728,52,21,1,0)
This field contains the last date that the Recipient information was
"^DD",728,728,52,21,2,0)
extracted to the Rational Meds software.
"^DD",728,728,52,23,0)
^^2^2^2951018^^^^
"^DD",728,728,52,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,52,23,2,0)
the VA FileMan.
"^DD",728,728,52,"DT")
2950728
"^DD",728,728,53,0)
PROVIDER^D^^R1;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,53,3)
Enter the last date that Provider information was extracted.
"^DD",728,728,53,21,0)
^^2^2^2951018^^
"^DD",728,728,53,21,1,0)
This field contains the last date that the Provider information was
"^DD",728,728,53,21,2,0)
extracted to the Rational Meds software.
"^DD",728,728,53,23,0)
^^2^2^2951018^^
"^DD",728,728,53,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,53,23,2,0)
the VA FileMan.
"^DD",728,728,53,"DT")
2950728
"^DD",728,728,54,0)
PHARMACY^D^^R1;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,54,3)
Enter the last date that Pharmacy Claim information was extracted.
"^DD",728,728,54,21,0)
^^1^1^2951127^^^^
"^DD",728,728,54,21,1,0)
Enter the last date that Hospital Claim information was extracted.
"^DD",728,728,54,23,0)
^^2^2^2951127^^^^
"^DD",728,728,54,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,54,23,2,0)
the VA FileMan.
"^DD",728,728,54,"DT")
2950728
"^DD",728,728,55,0)
HOSPITAL^D^^R1;4^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,55,3)
Enter the last date that Hospital Claim information was extracted.
"^DD",728,728,55,21,0)
^^2^2^2951018^^^
"^DD",728,728,55,21,1,0)
This field contains the last date that the Hospital Claim information
"^DD",728,728,55,21,2,0)
was extracted to the Rational Meds software.
"^DD",728,728,55,23,0)
^^2^2^2951018^^^
"^DD",728,728,55,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,55,23,2,0)
the VA FileMan.
"^DD",728,728,55,"DT")
2950728
"^DD",728,728,56,0)
IV CLAIM^D^^R1;5^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,56,21,0)
^^1^1^2951127^
"^DD",728,728,56,21,1,0)
The last date for which the Rational Meds IV claim was extracted.
"^DD",728,728,56,23,0)
^^2^2^2951127^
"^DD",728,728,56,23,1,0)
This field is set by the extract routine and should not be
"^DD",728,728,56,23,2,0)
manipulated by using VA FileMan.
"^DD",728,728,56,"DT")
2951127
"^DD",728,728,57,0)
LAST DATE QUASAR^D^^7;22^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,57,.1)
Last Date QUASAR
"^DD",728,728,57,3)
Enter the last date that information was extracted for QUASAR.
"^DD",728,728,57,21,0)
^^2^2^2980706^^^^
"^DD",728,728,57,21,1,0)
This field contains the last date that Audiology and Speech Pathology
"^DD",728,728,57,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,57,23,0)
^^2^2^2980706^^^
"^DD",728,728,57,23,1,0)
This date is set by the extract routine.  It must not be manipulated
"^DD",728,728,57,23,2,0)
via VA FileMan.
"^DD",728,728,57,"DT")
2960625
"^DD",728,728,58,0)
QUASAR^S^R:RUNNING;^7.1;22^Q
"^DD",728,728,58,3)
Enter R if the extract is currently running.
"^DD",728,728,58,21,0)
^.001^1^1^3060504^^^^
"^DD",728,728,58,21,1,0)
This field contains data if the QUASAR extract is currently running.
"^DD",728,728,58,23,0)
^.001^2^2^3060504^^^
"^DD",728,728,58,23,1,0)
This data is set by the extract routine.  It must not be manipulated
"^DD",728,728,58,23,2,0)
via VA FileMan.
"^DD",728,728,58,"DT")
2960625
"^DD",728,728,59,0)
LAST DATE PROSTHETICS^728.059P^^1;0
"^DD",728,728,59,10)
The routine ^ECXTRAC adds entries as new Prosthetics Divisions are encountered.
"^DD",728,728,59,21,0)
^^2^2^2980722^^^
"^DD",728,728,59,21,1,0)
This sub-file/field contains DSS Prosthetics divisions and their
"^DD",728,728,59,21,2,0)
respective LAST DATE(s) extracted.
"^DD",728,728,59,23,0)
^^7^7^2980722^^^
"^DD",728,728,59,23,1,0)
This sub-file/field(s) are populated by the ECXTRAC routine.  The routine
"^DD",728,728,59,23,2,0)
looks for a given division as a Prosthetics extract processes.  If the
"^DD",728,728,59,23,3,0)
division is not an entry in this sub-file, it is added.  The respecitive
"^DD",728,728,59,23,4,0)
LAST DATE processed is also updated in this sub-file.
"^DD",728,728,59,23,5,0)
 
"^DD",728,728,59,23,6,0)
This sub-file is DINUMed on the pointer to the Institution file (#4) in
"^DD",728,728,59,23,7,0)
the .01 field.
"^DD",728,728,60,0)
PROSTHETICS^S^R:RUNNING;^7.1;23^Q
"^DD",728,728,60,21,0)
^^1^1^2980706^
"^DD",728,728,60,21,1,0)
This field contains data if the PROSTHETICS extract is currently running.
"^DD",728,728,60,23,0)
^^2^2^2980706^
"^DD",728,728,60,23,1,0)
This data is set by the extract routine.  It must not be manipulated
"^DD",728,728,60,23,2,0)
via VA FileMan.
"^DD",728,728,60,"DT")
2980706
"^DD",728,728,61,0)
LAST DATE MENTAL HEALTH^D^^7;24^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,61,21,0)
^^1^1^2990511^
"^DD",728,728,61,21,1,0)
The last date for which Mental Health data was extracted.
"^DD",728,728,61,"DT")
2990511
"^DD",728,728,62,0)
MENTAL HEALTH^S^R:RUNNING;^7.1;24^Q
"^DD",728,728,62,21,0)
^^2^2^2990511^
"^DD",728,728,62,21,1,0)
If the Mental Health extract is running or queued to run, that is
"^DD",728,728,62,21,2,0)
indicated here.
"^DD",728,728,62,"DT")
2990511
"^DD",728,728,63,0)
LAST DATE CLINIC I^D^^7;25^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,63,21,0)
^^1^1^2990511^
"^DD",728,728,63,21,1,0)
The last date for which Clinic Visit data was extracted.
"^DD",728,728,63,"DT")
2990511
"^DD",728,728,64,0)
CLINIC I^S^R:RUNNING;^7.1;25^Q
"^DD",728,728,64,21,0)
^^2^2^2990511^
"^DD",728,728,64,21,1,0)
If the Clinic Visit extract is running or queued to run, that will
"^DD",728,728,64,21,2,0)
be indicated here.
"^DD",728,728,64,"DT")
2990511
"^DD",728,728,65,0)
LAST DATE CLINIC II^D^^7;26^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,65,21,0)
^^1^1^2990511^
"^DD",728,728,65,21,1,0)
Last date for which Clinic Visit data was extracted.
"^DD",728,728,65,"DT")
2990511
"^DD",728,728,66,0)
CLINIC II^S^R:RUNNING;^7.1;26^Q
"^DD",728,728,66,21,0)
^^2^2^2990511^
"^DD",728,728,66,21,1,0)
If the Clinic Visit extract is running or queued to run, it will
"^DD",728,728,66,21,2,0)
be indicated here.
"^DD",728,728,66,"DT")
2990511
"^DD",728,728,67,0)
AUSTIN TEST QUEUE NAME^FX^^QUEUE;2^K:$L(X)>3!($L(X)<3)!'(X?3U)!(X=$P($G(^("QUEUE")),"^",1)) X
"^DD",728,728,67,3)
Enter the three character identifier of the Austin test queue
"^DD",728,728,67,21,0)
^^3^3^3030710^
"^DD",728,728,67,21,1,0)
The name of the test queue in Austin to which DSS data will be sent.  This
"^DD",728,728,67,21,2,0)
should be 3 upper case letters and can not be the same value as AUSTIN
"^DD",728,728,67,21,3,0)
QUEUE NAME (field #49).
"^DD",728,728,67,"DT")
3030711
"^DD",728,728,68,0)
CBOC REPORT VIEWED INDICATOR^728.068A^^2;0
"^DD",728,728,69,0)
LAST DATE LBB^D^^7;27^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,69,3)
(No range limit on date)
"^DD",728,728,69,21,0)
^.001^2^2^3060504^^
"^DD",728,728,69,21,1,0)
This field contains the last date that blood bank data was extracted to
"^DD",728,728,69,21,2,0)
the DSS software.
"^DD",728,728,69,23,0)
^.001^2^2^3060504^^
"^DD",728,728,69,23,1,0)
This date is set by the extract routine.  Must not be manipulated via the 
"^DD",728,728,69,23,2,0)
VA FileMan.
"^DD",728,728,69,"DT")
3060504
"^DD",728,728,70,0)
LBB STATUS^S^R:RUNNING;^7.1;27^Q
"^DD",728,728,70,3)
Populated by the software
"^DD",728,728,70,21,0)
^^1^1^3041124^
"^DD",728,728,70,21,1,0)
Used to inform the user that the extract is presently running.  
"^DD",728,728,70,"DT")
3041124
"^DD",728,728,71,0)
LAST DATE NUT^D^^7;28^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,71,21,0)
^.001^2^2^3060531^^
"^DD",728,728,71,21,1,0)
This field contains the last date that nutrition data was extracted to the
"^DD",728,728,71,21,2,0)
DSS software.
"^DD",728,728,71,23,0)
^^2^2^3060531^
"^DD",728,728,71,23,1,0)
This date is set by the extract routine. Must not be manipulated via the
"^DD",728,728,71,23,2,0)
VA FileMan.
"^DD",728,728,71,"DT")
3060531
"^DD",728,728,72,0)
NUT STATUS^S^R:RUNNING;^7.1;28^Q
"^DD",728,728,72,21,0)
^.001^1^1^3060531^^
"^DD",728,728,72,21,1,0)
Used to inform the user that the extract is presently running.
"^DD",728,728,72,23,0)
^^2^2^3060531^
"^DD",728,728,72,23,1,0)
This data is set by the extract routine.  It must not be manipulated
"^DD",728,728,72,23,2,0)
via VA FileMan.
"^DD",728,728,72,"DT")
3060531
"^DD",728,728,73,0)
FY VERSION^F^^S;3^K:$L(X)>25!($L(X)<1) X
"^DD",728,728,73,3)
Answer must be 1-25 characters in length.
"^DD",728,728,73,21,0)
^^14^14^3090820^
"^DD",728,728,73,21,1,0)
This field identifies the site as a test site for a DSS Fiscal
"^DD",728,728,73,21,2,0)
Year Conversion patch. Only such a test site may allow users
"^DD",728,728,73,21,3,0)
to perform testing extracts via menu option ECX FISCAL YEAR EXTRACT.  
"^DD",728,728,73,21,4,0)
  
"^DD",728,728,73,21,5,0)
When a new version of a DSS Fiscal Year Conversion patch is 
"^DD",728,728,73,21,6,0)
installed at the site, this field will be automatically updated
"^DD",728,728,73,21,7,0)
as long as the patch install calls TESTON^ECXTREX as part of 
"^DD",728,728,73,21,8,0)
the post-installation process.
"^DD",728,728,73,21,9,0)
  
"^DD",728,728,73,21,10,0)
When the nationally released version of the DSS Fiscal Year 
"^DD",728,728,73,21,11,0)
Conversion patch is installed, this field will be automatically updated 
"^DD",728,728,73,21,12,0)
with the released version's sequence number.
"^DD",728,728,73,21,13,0)
 
"^DD",728,728,73,21,14,0)
Layout = patch#fy year#released patch sequence number.
"^DD",728,728,73,"DT")
3090820
"^DD",728,728,74,0)
BCM^S^R:RUNNING;^7.1;29^Q
"^DD",728,728,74,3)
Select R if the BCM extract is runing.
"^DD",728,728,74,"DT")
3100921
"^DD",728,728,75,0)
LAST DATE BCM^D^^7;29^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,75,3)
This is the last date the BCM Extract ran
"^DD",728,728,75,"DT")
3100921
"^DD",728,728.059,0)
LAST DATE PROSTHETICS SUB-FIELD^^1^2
"^DD",728,728.059,0,"DT")
2980722
"^DD",728,728.059,0,"IX","B",728.059,.01)

"^DD",728,728.059,0,"NM","LAST DATE PROSTHETICS")

"^DD",728,728.059,0,"UP")
728
"^DD",728,728.059,.01,0)
DIVISION^P4^DIC(4,^0;1^Q
"^DD",728,728.059,.01,.1)
Division
"^DD",728,728.059,.01,1,0)
^.1
"^DD",728,728.059,.01,1,1,0)
728.059^B
"^DD",728,728.059,.01,1,1,1)
S ^ECX(728,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",728,728.059,.01,1,1,2)
K ^ECX(728,DA(1),1,"B",$E(X,1,30),DA)
"^DD",728,728.059,.01,3)
Enter the Division for the Prosthetics extract
"^DD",728,728.059,.01,10)
Routine ECXTRAC populates this field as a Prosthetics extract processes.
"^DD",728,728.059,.01,21,0)
^^2^2^2980722^^^
"^DD",728,728.059,.01,21,1,0)
This field indicates the division for which Prosthetics information has
"^DD",728,728.059,.01,21,2,0)
been extracted.
"^DD",728,728.059,.01,23,0)
^^6^6^2980722^^
"^DD",728,728.059,.01,23,1,0)
This field is populated by ^ECXTRAC.  If the Prosthetics division that
"^DD",728,728.059,.01,23,2,0)
the Prosthetics extract is processing is not an entry in this file, it
"^DD",728,728.059,.01,23,3,0)
is added.
"^DD",728,728.059,.01,23,4,0)
 
"^DD",728,728.059,.01,23,5,0)
This field is a pointer to the Institution file (#4) and the IEN for the
"^DD",728,728.059,.01,23,6,0)
sub-file is DINUMed on this value.
"^DD",728,728.059,.01,"DT")
2980722
"^DD",728,728.059,1,0)
LAST DATE^D^^0;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728.059,1,3)
Enter the last date that information was extracted for Prosthetics.
"^DD",728,728.059,1,10)
ECXTRAC populates this field during the Prosthetics extract process.
"^DD",728,728.059,1,21,0)
^^2^2^2980722^^
"^DD",728,728.059,1,21,1,0)
The LAST DATE field indicates the last date that the prosthetics extract
"^DD",728,728.059,1,21,2,0)
was completed for the division indicated in the Division (.01) field.
"^DD",728,728.059,1,23,0)
^^3^3^2980722^
"^DD",728,728.059,1,23,1,0)
This field is populated by ^ECXTRAC when the DSS Prosthetics extract is
"^DD",728,728.059,1,23,2,0)
processing.  It is the end date the user enters when generating the
"^DD",728,728.059,1,23,3,0)
Prosthetics extract.
"^DD",728,728.059,1,"DT")
2980722
"^DD",728,728.068,0)
CBOC REPORT VIEWED INDICATOR SUB-FIELD^^.01^1
"^DD",728,728.068,0,"DT")
3031003
"^DD",728,728.068,0,"IX","B",728.068,.01)

"^DD",728,728.068,0,"NM","CBOC REPORT VIEWED INDICATOR")

"^DD",728,728.068,0,"UP")
728
"^DD",728,728.068,.01,0)
CBOC REPORT VIEWED INDICATOR^NJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",728,728.068,.01,1,0)
^.1
"^DD",728,728.068,.01,1,1,0)
728.068^B
"^DD",728,728.068,.01,1,1,1)
S ^ECX(728,DA(1),"CBOC","B",$E(X,1,30),DA)=""
"^DD",728,728.068,.01,1,1,2)
K ^ECX(728,DA(1),"CBOC","B",$E(X,1,30),DA)
"^DD",728,728.068,.01,1,1,"%D",0)
^^1^1^3031006^
"^DD",728,728.068,.01,1,1,"%D",1,0)
CBOC Cross Reference
"^DD",728,728.068,.01,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",728,728.068,.01,"DT")
3031006
"^DIC",727.833,727.833,0)
BCMA EXTRACT^727.833
"^DIC",727.833,727.833,0,"GL")
^ECX(727.833,
"^DIC",727.833,727.833,"%",0)
^1.005^^0
"^DIC",727.833,727.833,"%D",0)
^1.001^19^19^3101119^^
"^DIC",727.833,727.833,"%D",1,0)
This file contains data elements as specified by the Decision Support
"^DIC",727.833,727.833,"%D",2,0)
System (DSS) Program Office for the BCMA (Bar Code Medication 
"^DIC",727.833,727.833,"%D",3,0)
Administration) extract from existing DHCP files. Entries into this file 
"^DIC",727.833,727.833,"%D",4,0)
are made by extracting data from several files. The BCM MEDICATION
"^DIC",727.833,727.833,"%D",5,0)
LOG (#53.79) file is a major source of fields within this file. Once
"^DIC",727.833,727.833,"%D",6,0)
approved by the DSS site manager, entries in this file are loaded into an
"^DIC",727.833,727.833,"%D",7,0)
electronic mail message and sent to the commercial vendor. This file is
"^DIC",727.833,727.833,"%D",8,0)
intended to be used for validation purposes only. Entries should be made
"^DIC",727.833,727.833,"%D",9,0)
only by the extract load routine.
"^DIC",727.833,727.833,"%D",10,0)
   
"^DIC",727.833,727.833,"%D",11,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.833,727.833,"%D",12,0)
intended that the site add whatever cross references deemed necessary.  
"^DIC",727.833,727.833,"%D",13,0)
However, this file contains one nationally determined cross reference, the
"^DIC",727.833,727.833,"%D",14,0)
"AC" cross reference on the EXTRACT NUMBER (#2) field.  This cross 
"^DIC",727.833,727.833,"%D",15,0)
reference is used by the DSS Extracts software package as an essential
"^DIC",727.833,727.833,"%D",16,0)
feature for managing and purging data in this file and should not be
"^DIC",727.833,727.833,"%D",17,0)
modified.  
"^DIC",727.833,727.833,"%D",18,0)
   
"^DIC",727.833,727.833,"%D",19,0)
This file should NOT be modified directly using VA FileMan.  
"^DIC",727.833,"B","BCMA EXTRACT",727.833)

"^DIC",728,728,0)
DSS EXTRACTS^728
"^DIC",728,728,0,"GL")
^ECX(728,
"^DIC",728,728,"%",0)
^1.005^^
"^DIC",728,728,"%D",0)
^^11^11^2990914^^^^
"^DIC",728,728,"%D",1,0)
This file contains various data extract information utilized by the DSS
"^DIC",728,728,"%D",2,0)
Extracts software.  This data includes the last date an extract was
"^DIC",728,728,"%D",3,0)
run, the Austin queue receiving the extract data, and extract setup
"^DIC",728,728,"%D",4,0)
information.
"^DIC",728,728,"%D",5,0)
 
"^DIC",728,728,"%D",6,0)
Data in this file should be entered and edited only by using the DSS
"^DIC",728,728,"%D",7,0)
software and not by direct access via VA FileMan.
"^DIC",728,728,"%D",8,0)
 
"^DIC",728,728,"%D",9,0)
**TECH NOTE**
"^DIC",728,728,"%D",10,0)
When adding a new extract, make sure that the "LAST DATE XXX" is on
"^DIC",728,728,"%D",11,0)
same piece of the 7 node as the "XXX" field is on the 7.1 node.
"^DIC",728,"B","DSS EXTRACTS",728)

"BLD",8205,6)
^117
**END**
**END**
