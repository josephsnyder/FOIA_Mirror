EMERGENCY Released ECX*3*177 SEQ #159
Extracted from mail message
**KIDS**:ECX*3.0*177^

**INSTALL NAME**
ECX*3.0*177
"BLD",11265,0)
ECX*3.0*177^DSS EXTRACTS^0^3191204^y
"BLD",11265,4,0)
^9.64PA^^
"BLD",11265,6.3)
2
"BLD",11265,"ABPKG")
n
"BLD",11265,"KRN",0)
^9.67PA^1.5^25
"BLD",11265,"KRN",.4,0)
.4
"BLD",11265,"KRN",.401,0)
.401
"BLD",11265,"KRN",.402,0)
.402
"BLD",11265,"KRN",.403,0)
.403
"BLD",11265,"KRN",.5,0)
.5
"BLD",11265,"KRN",.84,0)
.84
"BLD",11265,"KRN",1.5,0)
1.5
"BLD",11265,"KRN",1.6,0)
1.6
"BLD",11265,"KRN",1.61,0)
1.61
"BLD",11265,"KRN",1.62,0)
1.62
"BLD",11265,"KRN",3.6,0)
3.6
"BLD",11265,"KRN",3.8,0)
3.8
"BLD",11265,"KRN",9.2,0)
9.2
"BLD",11265,"KRN",9.8,0)
9.8
"BLD",11265,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",11265,"KRN",9.8,"NM",1,0)
ECXAPRO^^0^B62700413
"BLD",11265,"KRN",9.8,"NM",2,0)
ECXCPRO^^0^B39866153
"BLD",11265,"KRN",9.8,"NM",3,0)
ECXLPRO^^0^B33521039
"BLD",11265,"KRN",9.8,"NM",4,0)
ECXAPRO2^^0^B30653153
"BLD",11265,"KRN",9.8,"NM",5,0)
ECXCPRO1^^0^B21108933
"BLD",11265,"KRN",9.8,"NM","B","ECXAPRO",1)

"BLD",11265,"KRN",9.8,"NM","B","ECXAPRO2",4)

"BLD",11265,"KRN",9.8,"NM","B","ECXCPRO",2)

"BLD",11265,"KRN",9.8,"NM","B","ECXCPRO1",5)

"BLD",11265,"KRN",9.8,"NM","B","ECXLPRO",3)

"BLD",11265,"KRN",19,0)
19
"BLD",11265,"KRN",19.1,0)
19.1
"BLD",11265,"KRN",101,0)
101
"BLD",11265,"KRN",409.61,0)
409.61
"BLD",11265,"KRN",771,0)
771
"BLD",11265,"KRN",779.2,0)
779.2
"BLD",11265,"KRN",870,0)
870
"BLD",11265,"KRN",8989.51,0)
8989.51
"BLD",11265,"KRN",8989.52,0)
8989.52
"BLD",11265,"KRN",8993,0)
8993
"BLD",11265,"KRN",8994,0)
8994
"BLD",11265,"KRN","B",.4,.4)

"BLD",11265,"KRN","B",.401,.401)

"BLD",11265,"KRN","B",.402,.402)

"BLD",11265,"KRN","B",.403,.403)

"BLD",11265,"KRN","B",.5,.5)

"BLD",11265,"KRN","B",.84,.84)

"BLD",11265,"KRN","B",1.5,1.5)

"BLD",11265,"KRN","B",1.6,1.6)

"BLD",11265,"KRN","B",1.61,1.61)

"BLD",11265,"KRN","B",1.62,1.62)

"BLD",11265,"KRN","B",3.6,3.6)

"BLD",11265,"KRN","B",3.8,3.8)

"BLD",11265,"KRN","B",9.2,9.2)

"BLD",11265,"KRN","B",9.8,9.8)

"BLD",11265,"KRN","B",19,19)

"BLD",11265,"KRN","B",19.1,19.1)

"BLD",11265,"KRN","B",101,101)

"BLD",11265,"KRN","B",409.61,409.61)

"BLD",11265,"KRN","B",771,771)

"BLD",11265,"KRN","B",779.2,779.2)

"BLD",11265,"KRN","B",870,870)

"BLD",11265,"KRN","B",8989.51,8989.51)

"BLD",11265,"KRN","B",8989.52,8989.52)

"BLD",11265,"KRN","B",8993,8993)

"BLD",11265,"KRN","B",8994,8994)

"BLD",11265,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11265,"QUES",0)
^9.62^^
"BLD",11265,"REQB",0)
^9.611^1^1
"BLD",11265,"REQB",1,0)
ECX*3.0*174^1
"BLD",11265,"REQB","B","ECX*3.0*174",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
177^3191204
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","ECXAPRO")
0^1^B62700413^B58811063
"RTN","ECXAPRO",1,0)
ECXAPRO ;ALB/JAP - PRO Extract Audit Report ;11/19/19  13:55
"RTN","ECXAPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,33,36,132,137,144,177**;Dec 22, 1997;Build 2
"RTN","ECXAPRO",3,0)
 ;
"RTN","ECXAPRO",4,0)
EN ;entry point for PRO extract audit report
"RTN","ECXAPRO",5,0)
 N %X,%Y,DIV,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,CNT,ECXPORT ;144
"RTN","ECXAPRO",6,0)
 S ECXERR=0
"RTN","ECXAPRO",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAPRO",8,0)
 S ECXHEAD="PRO",ECXAUD=0
"RTN","ECXAPRO",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAPRO",10,0)
 ;determine primary division
"RTN","ECXAPRO",11,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXAPRO",12,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXAPRO",13,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXAPRO",14,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXAPRO",15,0)
 ;select 1 or more prosthetics divisions for report
"RTN","ECXAPRO",16,0)
 D PRO^ECXDVSN2(DUZ,ECXPRIME,.ECXDIV,.ECXALL,.ECXERR)
"RTN","ECXAPRO",17,0)
 I ECXERR D  Q
"RTN","ECXAPRO",18,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",19,0)
 ;select extract
"RTN","ECXAPRO",20,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAPRO",21,0)
 I ECXERR=1 D  Q
"RTN","ECXAPRO",22,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPRO",24,0)
 ;if user's selected division doesn't match extract's division, then quit
"RTN","ECXAPRO",25,0)
 I +ECXPRIME'=ECXARRAY("DIV") D  Q
"RTN","ECXAPRO",26,0)
 .S DIV=+ECXARRAY("DIV") S:$D(^DIC(4,DIV,0)) DIV=$P(^(0),U,1)
"RTN","ECXAPRO",27,0)
 .W !!,?5,"Your primary division ("_$P(ECXPRIME,U,3)_") does not match the"
"RTN","ECXAPRO",28,0)
 .W !,?5,"division ("_DIV_") associated with Extract #"_ECXARRAY("EXTRACT")_"."
"RTN","ECXAPRO",29,0)
 .W !!,?5,"Try again... exiting.",!
"RTN","ECXAPRO",30,0)
 .I $E(IOST)="C" D
"RTN","ECXAPRO",31,0)
 ..S SS=20-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO",32,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPRO",33,0)
 ..W @IOF
"RTN","ECXAPRO",34,0)
 ;select summary or detail
"RTN","ECXAPRO",35,0)
 K DIR S DIR(0)="S^D:DETAIL;S:SUMMARY",DIR("A")="Type of Report",DIR("B")="SUMMARY"
"RTN","ECXAPRO",36,0)
 D ^DIR K DIR
"RTN","ECXAPRO",37,0)
 I $D(DIRUT)!($D(DTOUT)) D  Q
"RTN","ECXAPRO",38,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXAPRO",40,0)
 S ECXREPT=Y
"RTN","ECXAPRO",41,0)
 ;continue with detail report
"RTN","ECXAPRO",42,0)
 I ECXREPT="D" D  I $G(ECXPORT) Q  ;144 Stop processing if doing a detailed listing
"RTN","ECXAPRO",43,0)
 .F  D ASK2^ECXAPRO2 Q:$D(DIRUT)!($D(DTOUT))
"RTN","ECXAPRO",44,0)
 ;continue with summary report
"RTN","ECXAPRO",45,0)
 I ECXREPT="S" D
"RTN","ECXAPRO",46,0)
 .S ECXPGM="TASK^ECXAPRO",ECXDESC="PRO Extract Audit Report"
"RTN","ECXAPRO",47,0)
 .S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXREPT")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXAPRO",48,0)
 .S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPRO",49,0)
 ..K ^TMP($J) ;144
"RTN","ECXAPRO",50,0)
 ..S ^TMP($J,"ECXPORT",0)="STATION #^EXTRACT LOG #^TYPE^NPPD GROUP^NPPD LINE^VA^COM^TOTAL^COST^AVE COM" ;144
"RTN","ECXAPRO",51,0)
 ..S CNT=1 ;144
"RTN","ECXAPRO",52,0)
 ..D PROCESS ;144
"RTN","ECXAPRO",53,0)
 ..D DISP^ECXAPRO1 ;144
"RTN","ECXAPRO",54,0)
 ..D EXPDISP^ECXUTL1 ;144
"RTN","ECXAPRO",55,0)
 ..D ASK^ECXAPRO2 ;144
"RTN","ECXAPRO",56,0)
 ..D ^ECXKILL ;144
"RTN","ECXAPRO",57,0)
 .W !
"RTN","ECXAPRO",58,0)
 .;determine output device and queue if requested
"RTN","ECXAPRO",59,0)
 .D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE) I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPRO",60,0)
 ..W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO",61,0)
 ..D AUDIT^ECXKILL
"RTN","ECXAPRO",62,0)
 .I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPRO",63,0)
 ..K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPRO",64,0)
 ..D PROCESS,DISP^ECXAPRO1
"RTN","ECXAPRO",65,0)
 ..;allow user to get details
"RTN","ECXAPRO",66,0)
 ..D ASK^ECXAPRO2
"RTN","ECXAPRO",67,0)
 ;clean-up and close
"RTN","ECXAPRO",68,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO",69,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPRO",70,0)
 D HOME^%ZIS
"RTN","ECXAPRO",71,0)
 D AUDIT^ECXKILL
"RTN","ECXAPRO",72,0)
 Q
"RTN","ECXAPRO",73,0)
 ;
"RTN","ECXAPRO",74,0)
TASK ;entry point from taskmanager
"RTN","ECXAPRO",75,0)
 D PROCESS
"RTN","ECXAPRO",76,0)
 I ECXREPT="S" D DISP^ECXAPRO1
"RTN","ECXAPRO",77,0)
 I ECXREPT="D" D DISP^ECXAPRO2
"RTN","ECXAPRO",78,0)
 D AUDIT^ECXKILL
"RTN","ECXAPRO",79,0)
 Q
"RTN","ECXAPRO",80,0)
 ;
"RTN","ECXAPRO",81,0)
PROCESS ;process the data in file #727.826
"RTN","ECXAPRO",82,0)
 N J,CODE,COST,CPTNM,DATE,DESC,FLG,GN,IEN,KEY,LOC,LABLC,LABMC,NODE,PTNAM,PSASNM,QTY,QFLG,QQFLG,RD,SSN,STN,SRCE,TYPE,NPPDED ;144 NPPD ENT DATE CVW DAN removed CNT
"RTN","ECXAPRO",83,0)
 N NODE2 ;177 Node2 will hold new cost data
"RTN","ECXAPRO",84,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 Killed already if exporting
"RTN","ECXAPRO",85,0)
 S QQFLG=0 ;144 CNT removed as no longer needed
"RTN","ECXAPRO",86,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAPRO",87,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAPRO",88,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAPRO",89,0)
 I ECXALL=0 S J=$O(ECXDIV(99),-1),ECXDIV=ECXDIV(J)
"RTN","ECXAPRO",90,0)
 I ECXALL=1 S ECXDIV=ECXPRIME
"RTN","ECXAPRO",91,0)
 S STN=$P(ECXDIV,U,2)
"RTN","ECXAPRO",92,0)
 ;initialize the prosthetics tmp global for cumulative data
"RTN","ECXAPRO",93,0)
 D CODE^ECXAPRO1
"RTN","ECXAPRO",94,0)
 ;gather extract data and sort by grouper number, calc flag, and nppd code
"RTN","ECXAPRO",95,0)
 S IEN="" F  S IEN=$O(^ECX(727.826,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAPRO",96,0)
 .S ECXPRO=^ECX(727.826,IEN,0),NODE2=$G(^ECX(727.826,IEN,2)) ;177 Get node that contains new cost data
"RTN","ECXAPRO",97,0)
 .;
"RTN","ECXAPRO",98,0)
 .;- Remove trailing "^" from ECXPRO if there
"RTN","ECXAPRO",99,0)
 .I $E(ECXPRO,$L(ECXPRO))="^" S ECXPRO=$E(ECXPRO,1,$L(ECXPRO)-1)
"RTN","ECXAPRO",100,0)
 .S ECXPRO=ECXPRO_U_$P(^ECX(727.826,IEN,1),U,4)_U_$P(^ECX(727.826,IEN,2),U,4) ;NPPD ENTRY DATE 144 CVW
"RTN","ECXAPRO",101,0)
 .S DATE=$P(ECXPRO,U,9)
"RTN","ECXAPRO",102,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAPRO",103,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAPRO",104,0)
 .S DATE=$E(DATE,4,5)_"/"_$E(DATE,6,7)
"RTN","ECXAPRO",105,0)
 .S PTNAM=$P(ECXPRO,U,7),SSN=$E($P(ECXPRO,U,6),6,9)
"RTN","ECXAPRO",106,0)
 .S LOC=$P(ECXPRO,U,10),KEY=$P(ECXPRO,U,11),QTY=$P(ECXPRO,U,12)
"RTN","ECXAPRO",107,0)
 .S COST=$P(ECXPRO,U,25)+$P(NODE2,U,25),LABLC=$P(ECXPRO,U,26)+$P(NODE2,U,26),LABMC=$P(ECXPRO,U,27)+$P(NODE2,U,27) ;177 Costs are stored in ECXPRO if prior to FY20 and are in NODE2 for FY20 and beyond
"RTN","ECXAPRO",108,0)
 .S GN=$P(ECXPRO,U,34),GN=$S(GN="":" ",1:GN),NPPDED=$P(ECXPRO,U,35) ;NPPD ENTRY DATE 144 CVW
"RTN","ECXAPRO",109,0)
 .;don't double count lab items
"RTN","ECXAPRO",110,0)
 .Q:LOC["LAB"
"RTN","ECXAPRO",111,0)
 .;duplicate the logic in sort^rmprn6 that sets cost=0 if form=4
"RTN","ECXAPRO",112,0)
 .I LOC["ORD" S COST=0
"RTN","ECXAPRO",113,0)
 .S LOC=$S(LOC["ORD":$P(LOC,"ORD",1),LOC["HO2":$P(LOC,"HO2",1),1:$P(LOC,"NONL",1)) ;137
"RTN","ECXAPRO",114,0)
 .;quit if feeder location isn't for division selected for report
"RTN","ECXAPRO",115,0)
 .I ECXALL=1,LOC'[STN Q
"RTN","ECXAPRO",116,0)
 .I ECXALL=0,LOC'=STN Q
"RTN","ECXAPRO",117,0)
 .S TYPE=$E(KEY,6),SRCE=$E(KEY,7)
"RTN","ECXAPRO",118,0)
 .S CPTNM=$P(ECXPRO,U,15),PSASNM=$P(ECXPRO,U,33)
"RTN","ECXAPRO",119,0)
 .D GETCODE(PSASNM,.NODE)
"RTN","ECXAPRO",120,0)
 .Q:NODE=""
"RTN","ECXAPRO",121,0)
 .S CODE=$S(TYPE="X":$P(NODE,U,3),1:$P(NODE,U,4))
"RTN","ECXAPRO",122,0)
 .S FLG=$P(NODE,U,2),DESC=$P(NODE,U,5)
"RTN","ECXAPRO",123,0)
 .S ^TMP($J,"RMPRGN",STN,GN,FLG,CODE,IEN)=TYPE_U_SRCE_U_QTY_U_COST_U_LABLC_U_LABMC_U_PSASNM_U_DESC_U_PTNAM_U_SSN_U_DATE_U_LOC_U_NPPDED ;144 CVW
"RTN","ECXAPRO",124,0)
 ;accumulate summary & detail data
"RTN","ECXAPRO",125,0)
 S GN=""
"RTN","ECXAPRO",126,0)
 F  S GN=$O(^TMP($J,"RMPRGN",STN,GN)) Q:GN=""  D
"RTN","ECXAPRO",127,0)
 .S FLG=0
"RTN","ECXAPRO",128,0)
 .F  S FLG=$O(^TMP($J,"RMPRGN",STN,GN,FLG)) Q:FLG'>0  D
"RTN","ECXAPRO",129,0)
 ..I FLG=1 D GROUP S FLG=2 Q
"RTN","ECXAPRO",130,0)
 ..S CODE=0
"RTN","ECXAPRO",131,0)
 ..F  S CODE=$O(^TMP($J,"RMPRGN",STN,GN,FLG,CODE)) Q:CODE=""  D
"RTN","ECXAPRO",132,0)
 ...S RD=0
"RTN","ECXAPRO",133,0)
 ...F  S RD=$O(^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD)) Q:RD'>0  D
"RTN","ECXAPRO",134,0)
 ....S TYPE=$P(^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD),U,1),SRCE=$P(^(RD),U,2),QTY=$P(^(RD),U,3),COST=$P(^(RD),U,4)
"RTN","ECXAPRO",135,0)
 ....S ^TMP($J,CODE,RD)=^TMP($J,"RMPRGN",STN,GN,FLG,CODE,RD)
"RTN","ECXAPRO",136,0)
 ....I TYPE="X" D REP(CODE)
"RTN","ECXAPRO",137,0)
 ....I TYPE="N" D NEW(CODE)
"RTN","ECXAPRO",138,0)
 ....I TYPE="R" D RENT(CODE)
"RTN","ECXAPRO",139,0)
 Q
"RTN","ECXAPRO",140,0)
 ;
"RTN","ECXAPRO",141,0)
GETCODE(PSAS,NODE) ;find the appropriate nppd code using psas hcpcs
"RTN","ECXAPRO",142,0)
 N DIC,X,Y,DESC,FLG,NU,REP
"RTN","ECXAPRO",143,0)
 S NODE=""
"RTN","ECXAPRO",144,0)
 S DIC="^RMPR(661.1,",DIC(0)="XZ",X=PSAS D ^DIC
"RTN","ECXAPRO",145,0)
 I Y=-1 S NODE=U_"2"_U_"R99 Z"_U_"999 Z"_U_"NO HCPCS" Q
"RTN","ECXAPRO",146,0)
 S DESC=$E($P(Y(0),U,2),1,20)
"RTN","ECXAPRO",147,0)
 S FLG=$P(Y(0),U,8) S:FLG="" FLG=2
"RTN","ECXAPRO",148,0)
 ;make sure each code at least 4 characters; group codes are 3 characters in tmp($j,rmprcode)
"RTN","ECXAPRO",149,0)
 S REP=$P(Y(0),U,6) S:$L(REP)=3 REP=REP_" " S:REP="" REP="R99 X"
"RTN","ECXAPRO",150,0)
 S NU=$P(Y(0),U,7) S:$L(NU)=3 NU=NU_" " S:NU="" NU="999 X"
"RTN","ECXAPRO",151,0)
 S NODE=U_FLG_U_REP_U_NU_U_DESC
"RTN","ECXAPRO",152,0)
 Q
"RTN","ECXAPRO",153,0)
 ;
"RTN","ECXAPRO",154,0)
GROUP ;total grouper to main key
"RTN","ECXAPRO",155,0)
 N BF,BL,BR,BCOST,BTCOST,COST,QTY,TYPE,SRCE
"RTN","ECXAPRO",156,0)
 S BF=0,BTCOST=0
"RTN","ECXAPRO",157,0)
 F  S BF=$O(^TMP($J,"RMPRGN",STN,GN,BF)) Q:BF'>0  D
"RTN","ECXAPRO",158,0)
 .S BL=0
"RTN","ECXAPRO",159,0)
 .F  S BL=$O(^TMP($J,"RMPRGN",STN,GN,BF,BL)) Q:BL=""  D
"RTN","ECXAPRO",160,0)
 ..S BR=0
"RTN","ECXAPRO",161,0)
 ..F  S BR=$O(^TMP($J,"RMPRGN",STN,GN,BF,BL,BR)) Q:BR'>0  D
"RTN","ECXAPRO",162,0)
 ...S BCOST=$P(^TMP($J,"RMPRGN",STN,GN,BF,BL,BR),U,4)
"RTN","ECXAPRO",163,0)
 ...S BTCOST=BTCOST+BCOST
"RTN","ECXAPRO",164,0)
 S BL=$O(^TMP($J,"RMPRGN",STN,GN,1,"")),BR=$O(^TMP($J,"RMPRGN",STN,GN,1,BL,""))
"RTN","ECXAPRO",165,0)
 ;calculate based on primary
"RTN","ECXAPRO",166,0)
 S TYPE=$P(^TMP($J,"RMPRGN",STN,GN,1,BL,BR),U,1),SRCE=$P(^(BR),U,2),QTY=$P(^(BR),U,3)
"RTN","ECXAPRO",167,0)
 S COST=BTCOST
"RTN","ECXAPRO",168,0)
 S ^TMP($J,BL,BR)=^TMP($J,"RMPRGN",STN,GN,1,BL,BR),$P(^TMP($J,BL,BR),U,4)=COST
"RTN","ECXAPRO",169,0)
 I TYPE="X" D REP(BL)
"RTN","ECXAPRO",170,0)
 I TYPE="N" D NEW(BL)
"RTN","ECXAPRO",171,0)
 I TYPE="R" D RENT(BL)
"RTN","ECXAPRO",172,0)
 Q
"RTN","ECXAPRO",173,0)
 ;
"RTN","ECXAPRO",174,0)
REP(C) ;calculate repair cost
"RTN","ECXAPRO",175,0)
 N LINE
"RTN","ECXAPRO",176,0)
 S LINE=C
"RTN","ECXAPRO",177,0)
 I LINE="R90 A" S SRCE="C",QTY=1
"RTN","ECXAPRO",178,0)
 I $G(^TMP($J,"R",STN,LINE))="" S ^TMP($J,"R",STN,LINE)=""
"RTN","ECXAPRO",179,0)
 I SRCE["V" S $P(^TMP($J,"R",STN,LINE),U,1)=$P(^TMP($J,"R",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",180,0)
 I SRCE["C" S $P(^TMP($J,"R",STN,LINE),U,2)=$P(^TMP($J,"R",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",181,0)
 S $P(^TMP($J,"R",STN,LINE),U,3)=$P(^TMP($J,"R",STN,LINE),U,3)+COST
"RTN","ECXAPRO",182,0)
 Q
"RTN","ECXAPRO",183,0)
 ;
"RTN","ECXAPRO",184,0)
NEW(C) ;calculate new costs
"RTN","ECXAPRO",185,0)
 N LINE
"RTN","ECXAPRO",186,0)
 S LINE=C
"RTN","ECXAPRO",187,0)
 I $G(^TMP($J,"N",STN,LINE))="" S ^TMP($J,"N",STN,LINE)=""
"RTN","ECXAPRO",188,0)
 I SRCE["V" S $P(^TMP($J,"N",STN,LINE),U,1)=$P(^TMP($J,"N",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",189,0)
 I SRCE["C" S $P(^TMP($J,"N",STN,LINE),U,2)=$P(^TMP($J,"N",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",190,0)
 S $P(^TMP($J,"N",STN,LINE),U,3)=$P(^TMP($J,"N",STN,LINE),U,3)+COST
"RTN","ECXAPRO",191,0)
 Q
"RTN","ECXAPRO",192,0)
 ;
"RTN","ECXAPRO",193,0)
RENT(C) ;calculate rental costs
"RTN","ECXAPRO",194,0)
 N LINE
"RTN","ECXAPRO",195,0)
 S LINE=C
"RTN","ECXAPRO",196,0)
 I $G(^TMP($J,"RT",STN,LINE))="" S ^TMP($J,"RT",STN,LINE)=""
"RTN","ECXAPRO",197,0)
 I SRCE["V" S $P(^TMP($J,"RT",STN,LINE),U,1)=$P(^TMP($J,"RT",STN,LINE),U,1)+QTY
"RTN","ECXAPRO",198,0)
 I SRCE["C" S $P(^TMP($J,"RT",STN,LINE),U,2)=$P(^TMP($J,"RT",STN,LINE),U,2)+QTY
"RTN","ECXAPRO",199,0)
 S $P(^TMP($J,"RT",STN,LINE),U,3)=$P(^TMP($J,"RT",STN,LINE),U,3)+COST
"RTN","ECXAPRO",200,0)
 Q
"RTN","ECXAPRO2")
0^4^B30653153^B30073076
"RTN","ECXAPRO2",1,0)
ECXAPRO2 ;ALB/JAP - PRO Extract Audit Report (cont) ;12/4/19  09:48
"RTN","ECXAPRO2",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,39,144,154,174,177**;Dec 22, 1997;Build 2
"RTN","ECXAPRO2",3,0)
 ;
"RTN","ECXAPRO2",4,0)
ASK ;further detail needed?
"RTN","ECXAPRO2",5,0)
 K X,Y
"RTN","ECXAPRO2",6,0)
 W !
"RTN","ECXAPRO2",7,0)
 S DIR(0)="Y",DIR("A")="Do you want to see details on this audit report",DIR("B")="NO"
"RTN","ECXAPRO2",8,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",9,0)
 Q:($G(Y)=0)!$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",10,0)
 ;allow user to expand as many lines as needed
"RTN","ECXAPRO2",11,0)
 F  D ASK2 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",12,0)
 Q
"RTN","ECXAPRO2",13,0)
 ;
"RTN","ECXAPRO2",14,0)
ASK2 ;select nppd group to be expanded
"RTN","ECXAPRO2",15,0)
 D CODE
"RTN","ECXAPRO2",16,0)
 W @IOF,!
"RTN","ECXAPRO2",17,0)
 W !,?5,"1.   WHEELCHAIRS AND ACCESSORIES"
"RTN","ECXAPRO2",18,0)
 W !,?5,"2.   ARTIFICIAL LEGS"
"RTN","ECXAPRO2",19,0)
 W !,?5,"3.   ARTIFICIAL ARMS AND TERMINAL DEVICES"
"RTN","ECXAPRO2",20,0)
 W !,?5,"4.   BRACES AND ORTHOTICS"
"RTN","ECXAPRO2",21,0)
 W !,?5,"5.   SHOES/ORTHOTICS"
"RTN","ECXAPRO2",22,0)
 W !,?5,"6.   NEUROSENSORY AIDS"
"RTN","ECXAPRO2",23,0)
 W !,?5,"7.   RESTORATIONS"
"RTN","ECXAPRO2",24,0)
 W !,?5,"8.   OXYGEN AND RESPIRATORY"
"RTN","ECXAPRO2",25,0)
 W !,?5,"9.   MEDICAL EQUIPMENT, MISC., ALL OTHER NEW"
"RTN","ECXAPRO2",26,0)
 W !,?5,"10.  REPAIR",!!
"RTN","ECXAPRO2",27,0)
 S DIR(0)="N^1:10:0"
"RTN","ECXAPRO2",28,0)
 S DIR("A")="Select NPPD Group "
"RTN","ECXAPRO2",29,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",30,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",31,0)
 D ASK3(Y)
"RTN","ECXAPRO2",32,0)
 Q:$D(DTOUT)
"RTN","ECXAPRO2",33,0)
 K DIRUT,DTOUT,DUOUT
"RTN","ECXAPRO2",34,0)
 G ASK2
"RTN","ECXAPRO2",35,0)
 Q
"RTN","ECXAPRO2",36,0)
 ;
"RTN","ECXAPRO2",37,0)
ASK3(ECXY) ;select nppd line item
"RTN","ECXAPRO2",38,0)
 N BR,BRC,CODE,CNT,ECXPORT ;144
"RTN","ECXAPRO2",39,0)
 S BR=0,BRC=0 K CODE W @IOF
"RTN","ECXAPRO2",40,0)
 F  S BR=$O(^TMP($J,"RMPRCODE",BR)) Q:BR=""  I $L(BR)>3 D
"RTN","ECXAPRO2",41,0)
 .I $E(BR,1,1)=ECXY S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",42,0)
 .I ($E(BR,1,1)="R")&(ECXY=10) S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",43,0)
 W !
"RTN","ECXAPRO2",44,0)
 S DIR(0)="N^1:"_BRC_":0"
"RTN","ECXAPRO2",45,0)
 S DIR("A")="Select NPPD Line "
"RTN","ECXAPRO2",46,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",47,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",48,0)
 S ECXCODE="",ECXCODE=$O(CODE(Y,ECXCODE))
"RTN","ECXAPRO2",49,0)
 S ECXPGM="TASK^ECXAPRO",ECXDESC="PRO Extract Audit Detail"
"RTN","ECXAPRO2",50,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXREPT")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXCODE")=""
"RTN","ECXAPRO2",51,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPRO2",52,0)
 .K ^TMP($J) ;144
"RTN","ECXAPRO2",53,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^NPPD GROUP^NPPD LINE^NAME^SSN^HCPCS^QTY^TYPE^COST^DATE^HCPCS DESC^STATION #^NPPD ENTRY DATE" ;144
"RTN","ECXAPRO2",54,0)
 .S CNT=1 ;144
"RTN","ECXAPRO2",55,0)
 .D PROCESS^ECXAPRO ;144
"RTN","ECXAPRO2",56,0)
 .D DISP ;144
"RTN","ECXAPRO2",57,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAPRO2",58,0)
 W !
"RTN","ECXAPRO2",59,0)
 ;determine output device and queue if requested
"RTN","ECXAPRO2",60,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE) I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPRO2",61,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO2",62,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPRO2",63,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPRO2",64,0)
 .I '$D(^TMP($J,"RMPRGN")) D PROCESS^ECXAPRO
"RTN","ECXAPRO2",65,0)
 .D DISP
"RTN","ECXAPRO2",66,0)
 I $D(IO(0)) I IO(0)'=IO D ^%ZISC
"RTN","ECXAPRO2",67,0)
 D HOME^%ZIS
"RTN","ECXAPRO2",68,0)
 Q
"RTN","ECXAPRO2",69,0)
 ;
"RTN","ECXAPRO2",70,0)
CODE ;setup nppd codes
"RTN","ECXAPRO2",71,0)
 ;intended to duplicate code^rmprn63
"RTN","ECXAPRO2",72,0)
 N NULINE
"RTN","ECXAPRO2",73,0)
 Q:$D(^TMP($J,"RMPRCODE"))
"RTN","ECXAPRO2",74,0)
 F I=1:1 S NULINE=$P($T(TEXT+I^ECXAPRO3),";;",2) Q:NULINE["QUIT"  D
"RTN","ECXAPRO2",75,0)
 .S ^TMP($J,"RMPRCODE",$P(NULINE,";",1))=$P(NULINE,";",2)
"RTN","ECXAPRO2",76,0)
 Q
"RTN","ECXAPRO2",77,0)
 ;
"RTN","ECXAPRO2",78,0)
DISP ;display all records within nppd code group
"RTN","ECXAPRO2",79,0)
 ;based on desp^rmprn6pl
"RTN","ECXAPRO2",80,0)
 N JJ,SS,LN,PG,COST,DATE,DESC,HCPCS,LOC,PTNAM,QFLG,QTY,RDX,RDXX,SSN,TYPE,DIR,DIRUT,DTOUT,DUOUT,NPPDED ;NPPD ENT DATE CVW 144
"RTN","ECXAPRO2",81,0)
 U IO
"RTN","ECXAPRO2",82,0)
 S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXAPRO2",83,0)
 I '$G(ECXPORT) D HEADER ;144
"RTN","ECXAPRO2",84,0)
 I '$D(^TMP($J,ECXCODE)) D  Q
"RTN","ECXAPRO2",85,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO2",86,0)
 .W !,?14,"No data available.",!
"RTN","ECXAPRO2",87,0)
 .I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",88,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",89,0)
 ..S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",90,0)
 S RDX=0
"RTN","ECXAPRO2",91,0)
 F  S RDX=$O(^TMP($J,ECXCODE,RDX)) Q:RDX'>0  Q:QFLG  D
"RTN","ECXAPRO2",92,0)
 .S RDXX=^TMP($J,ECXCODE,RDX)
"RTN","ECXAPRO2",93,0)
 .S PTNAM=$P(RDXX,U,9),SSN=$P(RDXX,U,10)
"RTN","ECXAPRO2",94,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't display if exporting
"RTN","ECXAPRO2",95,0)
 .S TYPE=$P(RDXX,U,1),TYPE=$S(TYPE="X":"R",1:"I")_" "_$P(RDXX,U,2)
"RTN","ECXAPRO2",96,0)
 .S QTY=+$P(RDXX,U,3),COST=$P(RDXX,U,4),HCPCS=$P(RDXX,U,7),DESC=$P(RDXX,U,8),DATE=$P(RDXX,U,11),LOC=$P(RDXX,U,12),NPPDED=$P(RDXX,U,13) ;144 CVW
"RTN","ECXAPRO2",97,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=ECXEXT_U_ECXCODE_U_^TMP($J,"RMPRCODE",ECXCODE)_U_PTNAM_U_SSN_U_HCPCS_U_QTY_U_TYPE_U_COST_U_DATE_U_DESC_U_LOC_U_NPPDED,CNT=CNT+1 Q  ;144
"RTN","ECXAPRO2",98,0)
 .W !,PTNAM,?5,SSN,?10,HCPCS,?17,QTY,?26,TYPE,?30,COST,?37,DATE,?43,DESC,?64,LOC,?72,NPPDED ;144 CVW
"RTN","ECXAPRO2",99,0)
 I $G(ECXPORT)!(QFLG) Q  ;144,177 Stop processing if exporting or user entered '^'
"RTN","ECXAPRO2",100,0)
 D:($Y+4>IOSL) HEADER W:'QFLG !!,"NOTE: For Vista records with Unit of Issue=MO, the extract Unit of Issue",!,"and Quantity have been converted from months to days." ;174,177
"RTN","ECXAPRO2",101,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",102,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",103,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",104,0)
 Q
"RTN","ECXAPRO2",105,0)
 ;
"RTN","ECXAPRO2",106,0)
HEADER ;header and page control
"RTN","ECXAPRO2",107,0)
 I $E(IOST)="C" D
"RTN","ECXAPRO2",108,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",109,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPRO2",110,0)
 Q:QFLG
"RTN","ECXAPRO2",111,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPRO2",112,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report Detail",?72,"Page ",PG
"RTN","ECXAPRO2",113,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO2",114,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO2",115,0)
 I ECXALL=1 W !,"Station:                 "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",116,0)
 I ECXALL=0 W !,"Division:                "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",117,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAPRO2",118,0)
 W !,LN,!,ECXCODE," -- ",^TMP($J,"RMPRCODE",ECXCODE),?74,"NPPD"
"RTN","ECXAPRO2",119,0)
 W !,"NAME",?5,"SSN",?10,"HCPCS",?17,"QTY",?26,"TYP",?30,"COST",?37,"DATE",?43,"HCPCS DESC",?64,"STN#",?72,"ENTRY DT"
"RTN","ECXAPRO2",120,0)
 W !,LN,!
"RTN","ECXAPRO2",121,0)
 Q
"RTN","ECXCPRO")
0^2^B39866153^B35725966
"RTN","ECXCPRO",1,0)
ECXCPRO ;ALB/JAP - PRO Extract YTD Report ;11/19/19  13:50
"RTN","ECXCPRO",2,0)
 ;;3.0;DSS EXTRACTS;**21,24,33,84,137,144,177**;Dec 22, 1997;Build 2
"RTN","ECXCPRO",3,0)
 ;accumulates extract data by hcpcs code for all extracts in fiscal year date range
"RTN","ECXCPRO",4,0)
 ;if an extract has been purged, then totals will be falsely low
"RTN","ECXCPRO",5,0)
 ;if more than 1 extract exists for a particular month, then totals will be falsely high
"RTN","ECXCPRO",6,0)
 ;if site is multidivisional, then user can generate report for
"RTN","ECXCPRO",7,0)
 ;  any one division - data stored under divisional station# (e.g., 326 or 326AB)
"RTN","ECXCPRO",8,0)
 ;  or for entire facility - data stored under primary station# (e.g., 326) but includes data from all subdivisions
"RTN","ECXCPRO",9,0)
 ;if site is non-divisional, then data stored under facility station#
"RTN","ECXCPRO",10,0)
 ;
"RTN","ECXCPRO",11,0)
 ;
"RTN","ECXCPRO",12,0)
EN ;setup & queue
"RTN","ECXCPRO",13,0)
 N DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,DIV,LAST,OUT,CNT,ECXPORT ;144
"RTN","ECXCPRO",14,0)
 S ECXERR=0
"RTN","ECXCPRO",15,0)
 S ECXHEAD="PRO"
"RTN","ECXCPRO",16,0)
 W !!,"Setup for PRO Extract YTD HCPCS Report --",!
"RTN","ECXCPRO",17,0)
 ;determine primary division
"RTN","ECXCPRO",18,0)
 W !,"If you belong to more than one Primary Division, you must"
"RTN","ECXCPRO",19,0)
 W !,"select a Primary Division for the report.",!
"RTN","ECXCPRO",20,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXCPRO",21,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXCPRO",22,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXCPRO",23,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXCPRO",24,0)
 ;select 1 or more prosthetics divisions for report
"RTN","ECXCPRO",25,0)
 D PRO^ECXDVSN2(DUZ,ECXPRIME,.ECXDIV,.ECXALL,.ECXERR)
"RTN","ECXCPRO",26,0)
 I ECXERR D  Q
"RTN","ECXCPRO",27,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXCPRO",28,0)
 ;determine fiscal year of report
"RTN","ECXCPRO",29,0)
 S DIR(0)="SMBA^C:CURRENT;P:PREVIOUS",DIR("A")="Select C(urrent) or P(revious) Fiscal Year: ",DIR("B")="CURRENT"
"RTN","ECXCPRO",30,0)
 W ! K X,Y D ^DIR K DIR
"RTN","ECXCPRO",31,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","ECXCPRO",32,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXCPRO",33,0)
 I Y="C" D
"RTN","ECXCPRO",34,0)
 .S X=$$CYFY^ECXUTL1(DT),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXCPRO",35,0)
 I Y="P" D
"RTN","ECXCPRO",36,0)
 .S YR=$E(DT,1,3),MON=$E(DT,4,5) S:+MON<10 YR=YR-1 S X1=YR_"0930"
"RTN","ECXCPRO",37,0)
 .S X=$$CYFY^ECXUTL1(X1),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXCPRO",38,0)
 .K C,MON,YR,X1
"RTN","ECXCPRO",39,0)
 ;setup variables for taskmanager
"RTN","ECXCPRO",40,0)
 S ECXPGM="PROCESS^ECXCPRO",ECXDESC="PRO Extract YTD Lab Report"
"RTN","ECXCPRO",41,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXCPRO",42,0)
 ;determine output device and queue if requested
"RTN","ECXCPRO",43,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXCPRO",44,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXCPRO",45,0)
 .S ^TMP($J,"ECXPORT",0)="REPORT TYPE^PSAS HCPCS^QTY COM^TOTAL COM^AVE COM^QTY VA^TOTAL VA^AVE VA^QTY LAB^TOTAL LAB^AVE LAB^ALL AVE" ;144
"RTN","ECXCPRO",46,0)
 .S CNT=1 ;144
"RTN","ECXCPRO",47,0)
 .D PROCESS ;144
"RTN","ECXCPRO",48,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXCPRO",49,0)
 .D ^ECXKILL ;144
"RTN","ECXCPRO",50,0)
 W !!,"Please note: The PRO Extract YTD HCPCS Report requires 132 columns."
"RTN","ECXCPRO",51,0)
 W !,"             Select an appropriate device for output."
"RTN","ECXCPRO",52,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXCPRO",53,0)
 I ECXSAVE("POP")=1 W ! D ^ECXKILL Q
"RTN","ECXCPRO",54,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXCPRO",55,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXCPRO",56,0)
 .D PROCESS
"RTN","ECXCPRO",57,0)
 ;clean-up and close
"RTN","ECXCPRO",58,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXCPRO",59,0)
 D HOME^%ZIS
"RTN","ECXCPRO",60,0)
 Q
"RTN","ECXCPRO",61,0)
 ;
"RTN","ECXCPRO",62,0)
PROCESS ;begin processing
"RTN","ECXCPRO",63,0)
 N DIVISION,E,EXTRACT,REC,NODE0,NODE1,LASTDAY,NODE2 ;177 Added NODE2 to hold new cost values
"RTN","ECXCPRO",64,0)
 K ^TMP($J,"ECXP") S LASTDAY=""
"RTN","ECXCPRO",65,0)
 ;determine which extracts contain data for report
"RTN","ECXCPRO",66,0)
 S (EXTRACT,E)=0
"RTN","ECXCPRO",67,0)
 F  S E=$O(^ECX(727,"E",ECXHEAD,E)) Q:'E  D
"RTN","ECXCPRO",68,0)
 .Q:'$D(^ECX(727,E,0))
"RTN","ECXCPRO",69,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)<ECXARRAY("START")
"RTN","ECXCPRO",70,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)>ECXARRAY("END")
"RTN","ECXCPRO",71,0)
 .Q:$G(^ECX(727,E,"DIV"))'=+ECXPRIME
"RTN","ECXCPRO",72,0)
 .S EXTRACT(E)=^ECX(727,E,0)
"RTN","ECXCPRO",73,0)
 .I $P(EXTRACT(E),U,5)>LASTDAY S LASTDAY=$P(EXTRACT(E),U,5)
"RTN","ECXCPRO",74,0)
 ;setup array of station numbers included in report
"RTN","ECXCPRO",75,0)
 F DIV=0:0 S DIV=$O(ECXDIV(DIV)) Q:'DIV  S ECXSTAT=$P(ECXDIV(DIV),U,2),DIVISION(ECXSTAT)=ECXDIV(DIV)
"RTN","ECXCPRO",76,0)
 ;get the extract data
"RTN","ECXCPRO",77,0)
 S E=0 F  S E=$O(EXTRACT(E)) Q:'E  S REC=0 I $D(^ECX(727.826,"AC",E)) F  S REC=$O(^ECX(727.826,"AC",E,REC)) Q:'REC  D
"RTN","ECXCPRO",78,0)
 .S NODE0=$G(^ECX(727.826,REC,0)),NODE1=$G(^ECX(727.826,REC,1)),NODE2=$G(^ECX(727.826,REC,2)) Q:NODE0=""  ;177 Grab 2 node for new cost info
"RTN","ECXCPRO",79,0)
 .S (ECXCTAMT,ECXLLC,ECXLMC)=0
"RTN","ECXCPRO",80,0)
 .S ECXFELOC=$P(NODE0,U,10),ECXFEKEY=$P(NODE0,U,11)
"RTN","ECXCPRO",81,0)
 .S ECXHCPC=$P(NODE0,U,33),ECXTYPE=$E(ECXFEKEY,6),ECXSRCE=$E(ECXFEKEY,7)
"RTN","ECXCPRO",82,0)
 .S ECXQTY=$P(NODE0,U,12),ECXCTAMT=$P(NODE0,U,25)+$P(NODE2,U,25),ECXGRPR=$P(NODE1,U,4) ;177 Cost for pre FY20 is stored in NODE0, FY20 and later is in NODE2
"RTN","ECXCPRO",83,0)
 .I ECXFELOC["NONL" S ECXSTAT=$P(ECXFELOC,"NONL",1),ECXFORM="NONL"
"RTN","ECXCPRO",84,0)
 .I ECXFELOC["HO2" S ECXSTAT=$P(ECXFELOC,"HO2",1),ECXFORM="NONL" ;137
"RTN","ECXCPRO",85,0)
 .;if this station is lab requesting station, then count lab transaction
"RTN","ECXCPRO",86,0)
 .I ECXFELOC["ORD" D
"RTN","ECXCPRO",87,0)
 ..S ECXSTAT=$P(ECXFELOC,"ORD",1),ECXFORM="ORD"
"RTN","ECXCPRO",88,0)
 ..S ECXLLC=$P(NODE0,U,26)+$P(NODE2,U,26),ECXLMC=$P(NODE0,U,27)+$P(NODE2,U,27) ;177 Pre FY20 costs are stored in NODE0, FY20 and beyond are stored in NODE2
"RTN","ECXCPRO",89,0)
 .;ignore record for receiving station feeder location
"RTN","ECXCPRO",90,0)
 .Q:ECXFELOC["LAB"
"RTN","ECXCPRO",91,0)
 .;ignore record if division not included in this report
"RTN","ECXCPRO",92,0)
 .Q:ECXSTAT=""  Q:'$D(DIVISION(ECXSTAT))
"RTN","ECXCPRO",93,0)
 .;if combining data from all subdivisions, then set in ^tmp using primary station#
"RTN","ECXCPRO",94,0)
 .I ECXALL=1 S ECXSTAT=$P(ECXPRIME,U,2)
"RTN","ECXCPRO",95,0)
 .;be sure there's no padding on cost variables
"RTN","ECXCPRO",96,0)
 .S ECXCTAMT=+$TR(ECXCTAMT," ",0),ECXLLC=+$TR(ECXLLC," ",0),ECXLMC=+$TR(ECXLMC," ",0)
"RTN","ECXCPRO",97,0)
 .;tmp global holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO",98,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) S ^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)="0^0^0^0^0^0^0"
"RTN","ECXCPRO",99,0)
 .I ECXSRCE="C",ECXFORM="NONL" D
"RTN","ECXCPRO",100,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,1)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,1)+ECXQTY
"RTN","ECXCPRO",101,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,2)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,2)+ECXCTAMT
"RTN","ECXCPRO",102,0)
 .I ECXSRCE="V",ECXFORM="NONL" D
"RTN","ECXCPRO",103,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,3)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,3)+ECXQTY
"RTN","ECXCPRO",104,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,4)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,4)+ECXCTAMT
"RTN","ECXCPRO",105,0)
 .I ECXFORM="ORD" D
"RTN","ECXCPRO",106,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,5)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,5)+ECXQTY
"RTN","ECXCPRO",107,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,6)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,6)+ECXLLC
"RTN","ECXCPRO",108,0)
 ..S $P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,7)=$P(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC),U,7)+ECXLMC
"RTN","ECXCPRO",109,0)
 ;setup hcpcs descriptions
"RTN","ECXCPRO",110,0)
 D HCPCS
"RTN","ECXCPRO",111,0)
 ;print report
"RTN","ECXCPRO",112,0)
 D PRINT^ECXCPRO1
"RTN","ECXCPRO",113,0)
 ;cleanup
"RTN","ECXCPRO",114,0)
 I '$G(ECXPORT) D AUDIT^ECXKILL ;144
"RTN","ECXCPRO",115,0)
 Q
"RTN","ECXCPRO",116,0)
 ;
"RTN","ECXCPRO",117,0)
HCPCS ;setup hcpcs cross-reference
"RTN","ECXCPRO",118,0)
 N H,HCPCS,CODE,CPTNM,DESC
"RTN","ECXCPRO",119,0)
 S H=0
"RTN","ECXCPRO",120,0)
 F  S H=$O(^RMPR(661.1,H)) Q:+H<1  D
"RTN","ECXCPRO",121,0)
 .;don't skip inactive hcpcs in case doing previous fy
"RTN","ECXCPRO",122,0)
 .S HCPCS="",HCPCS=$P(^RMPR(661.1,H,0),U,1)
"RTN","ECXCPRO",123,0)
 .S CODE=$$CPT^ICPTCOD(HCPCS)
"RTN","ECXCPRO",124,0)
 .I +CODE>0 S CPTNM=$P(CODE,U,2),DESC=$E($P(CODE,U,3),1,26)
"RTN","ECXCPRO",125,0)
 .Q:CPTNM=""
"RTN","ECXCPRO",126,0)
 .S ^TMP($J,"HCPCS",CPTNM)=DESC
"RTN","ECXCPRO",127,0)
 Q
"RTN","ECXCPRO1")
0^5^B21108933^B20695361
"RTN","ECXCPRO1",1,0)
ECXCPRO1 ;ALB/JAP - PRO Extract YTD Report (cont) ;12/4/19  10:02
"RTN","ECXCPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**21,84,132,144,174,177**;Dec 22, 1997;Build 2
"RTN","ECXCPRO1",3,0)
 ;
"RTN","ECXCPRO1",4,0)
PRINT ;print report
"RTN","ECXCPRO1",5,0)
 N PG,LN,QFLG,NODE,DESC,AVE,JJ,SS,TOTAL,TOT,TQTY
"RTN","ECXCPRO1",6,0)
 U IO
"RTN","ECXCPRO1",7,0)
 S QFLG=0,$P(LN,"-",132)=""
"RTN","ECXCPRO1",8,0)
 S Y=ECXARRAY("START") D DD^%DT S ECXSTART=Y
"RTN","ECXCPRO1",9,0)
 S Y=$S(LASTDAY:LASTDAY,ECXARRAY("END")>DT:DT,1:ECXARRAY("END")) D DD^%DT S ECXEND=Y
"RTN","ECXCPRO1",10,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXCPRO1",11,0)
 ;if ecxall=0, then only one subdivision of multidivision facility
"RTN","ECXCPRO1",12,0)
 ;if ecxall=1, then either entire facility (i.e., non-divisional), or all subdivisions combined under primary station#
"RTN","ECXCPRO1",13,0)
 ;but it's possible that no extract data was found
"RTN","ECXCPRO1",14,0)
 S ECXSTAT="",ECXSTAT=$O(^TMP($J,"ECXP",ECXSTAT)) I ECXSTAT="" D  Q
"RTN","ECXCPRO1",15,0)
 .I $G(ECXPORT) Q  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",16,0)
 .I ECXALL=0 S ECXSTAT=$O(DIVISION(""))
"RTN","ECXCPRO1",17,0)
 .F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",18,0)
 ..S PG=0 D HEADER
"RTN","ECXCPRO1",19,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",20,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",21,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",22,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",23,0)
 F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",24,0)
 .S PG=0 I '$G(ECXPORT) D HEADER ;144 Don't print header if exporting
"RTN","ECXCPRO1",25,0)
 .S ECXHCPC=""
"RTN","ECXCPRO1",26,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE)) D  Q
"RTN","ECXCPRO1",27,0)
 ..I $G(ECXPORT) Q  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",28,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",29,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",30,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",31,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",32,0)
 .F  S ECXHCPC=$O(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) Q:ECXHCPC=""  D  Q:QFLG
"RTN","ECXCPRO1",33,0)
 ..S DESC=$G(^TMP($J,"HCPCS",ECXHCPC)) S:DESC="" DESC="(Unknown)" S DESC=ECXHCPC_" "_DESC
"RTN","ECXCPRO1",34,0)
 ..S NODE=^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)
"RTN","ECXCPRO1",35,0)
 ..;node holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO1",36,0)
 ..F I=1:1:7 S X(I)=+$P(NODE,U,I)
"RTN","ECXCPRO1",37,0)
 ..S AVE("C")=0,AVE("V")=0,AVE("L")=0,AVE("ALL")=0,TOT("L")=0,TOTAL=0,TQTY=0
"RTN","ECXCPRO1",38,0)
 ..S:X(1)>0 AVE("C")=X(2)/X(1) S:X(3)>0 AVE("V")=X(4)/X(3) S TOT("L")=X(6)+X(7) S:X(5)>0 AVE("L")=TOT("L")/X(5)
"RTN","ECXCPRO1",39,0)
 ..S TQTY=X(1)+X(3)+X(5),TOTAL=X(2)+X(4)+TOT("L")
"RTN","ECXCPRO1",40,0)
 ..S:TQTY>0 AVE("ALL")=TOTAL/TQTY
"RTN","ECXCPRO1",41,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",42,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$S(ECXTYPE="N":"NEW",ECXTYPE="R":"RENTAL",1:"REPAIR") D  Q  ;144
"RTN","ECXCPRO1",43,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_DESC_U_X(1)_U_X(2)_U_$FN(AVE("C"),"",2)_U_X(3)_U_X(4)_U_$FN(AVE("V"),"",2)_U_X(5)_U_TOT("L")_U_$FN(AVE("L"),"",2)_U_$FN(AVE("ALL"),"",2) ;144
"RTN","ECXCPRO1",44,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXCPRO1",45,0)
 ..W !,DESC,?33,$J(X(1),8,0),?43,$J(X(2),8,0),?53,$J(AVE("C"),8,2),?63,$J(X(3),8,0),?73,$J(X(4),8,0),?83,$J(AVE("V"),8,2),?93,$J(X(5),8,0),?103,$J(TOT("L"),8,0),?113,$J(AVE("L"),8,2),?123,$J(AVE("ALL"),8,2)
"RTN","ECXCPRO1",46,0)
 .Q:$G(ECXPORT)!(QFLG)  ;144,177 Don't continue if exporting or user entered '^'
"RTN","ECXCPRO1",47,0)
 .I ECXTYPE="R" D  ;174 Section added for note to display after rental information
"RTN","ECXCPRO1",48,0)
 ..I $Y+3>IOSL D HEADER ;Print header if not enough room for the note
"RTN","ECXCPRO1",49,0)
 ..W:'QFLG !!,"NOTE: For Vista records with Unit of Issue=MO, the extract Unit of Issue and Quantity have been converted from months to days." ;177
"RTN","ECXCPRO1",50,0)
 .I 'QFLG,$E(IOST)="C" D
"RTN","ECXCPRO1",51,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",52,0)
 ..S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",53,0)
 I '$G(ECXPORT) W @IOF ;144 Don't write anything if exporting
"RTN","ECXCPRO1",54,0)
 Q
"RTN","ECXCPRO1",55,0)
 ;
"RTN","ECXCPRO1",56,0)
HEADER ;header & page control
"RTN","ECXCPRO1",57,0)
 I $E(IOST)="C" D
"RTN","ECXCPRO1",58,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",59,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",60,0)
 Q:QFLG
"RTN","ECXCPRO1",61,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXCPRO1",62,0)
 W "Prosthetics (PRO) Extract YTD HCPCS Report",?122,"Page "_PG
"RTN","ECXCPRO1",63,0)
 W !,"FY Date Range: "_ECXSTART_" to "_ECXEND
"RTN","ECXCPRO1",64,0)
 I ECXALL=0 W !,"Division:      "_$P(DIVISION(ECXSTAT),U,3)_" ("_$P(DIVISION(ECXSTAT),U,2)_")"
"RTN","ECXCPRO1",65,0)
 I ECXALL=1 W !,"Facility:      "_$P(ECXPRIME,U,3)_" ("_$P(ECXPRIME,U,2)_")"
"RTN","ECXCPRO1",66,0)
 W !,"Run Date/Time: "_ECXRUN
"RTN","ECXCPRO1",67,0)
 W:ECXTYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES (Initial, Replacement, or Spare)"
"RTN","ECXCPRO1",68,0)
 W:ECXTYPE="R" !!,"REPORT OF RENTAL PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",69,0)
 W:ECXTYPE="X" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",70,0)
 W !,?36,"Qty.",?44,"Total $",?55,"Ave. $",?67,"Qty.",?74,"Total $",?85,"Ave. $",?97,"Qty.",?104,"Total $",?114,"Ave. $",?125,"Ave. $"
"RTN","ECXCPRO1",71,0)
 W !,"PSAS HCPCS",?35,"-Comm-",?44,"-Comm-",?55,"-Comm-",?67,"-VA-",?75,"-VA-",?85,"-VA-",?96,"-Lab-",?105,"-Lab-",?114,"-Lab-",?125,"-All-"
"RTN","ECXCPRO1",72,0)
 W !,LN,!
"RTN","ECXCPRO1",73,0)
 Q
"RTN","ECXLPRO")
0^3^B33521039^B29349856
"RTN","ECXLPRO",1,0)
ECXLPRO ;ALB/JAP - PRO Extract YTD Lab Report ;11/19/19  14:00
"RTN","ECXLPRO",2,0)
 ;;3.0;DSS EXTRACTS;**21,24,36,84,144,177**;Dec 22, 1997;Build 2
"RTN","ECXLPRO",3,0)
 ;for data associated with prosthetic items produced by facility laboratory
"RTN","ECXLPRO",4,0)
 ;accumulates extract data by hcpcs code for all extracts in fiscal year date range
"RTN","ECXLPRO",5,0)
 ;if an extract has been purged, then totals will be falsely low
"RTN","ECXLPRO",6,0)
 ;if more than 1 extract exists for a particular month, then totals will be falsely high
"RTN","ECXLPRO",7,0)
 ;if site is multidivisional, then user can generate report for
"RTN","ECXLPRO",8,0)
 ;  any one division - data stored under divisional station# (e.g., 326 or 326AB)
"RTN","ECXLPRO",9,0)
 ;  or for entire facility - data stored under primary station# (e.g., 326) but includes data from all subdivisions
"RTN","ECXLPRO",10,0)
 ;if site is non-divisional, then data stored under facility station#
"RTN","ECXLPRO",11,0)
 ;
"RTN","ECXLPRO",12,0)
EN ;setup & queue
"RTN","ECXLPRO",13,0)
 N DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,DIV,LAST,OUT,ECXPORT,CNT
"RTN","ECXLPRO",14,0)
 S ECXERR=0
"RTN","ECXLPRO",15,0)
 S ECXHEAD="PRO"
"RTN","ECXLPRO",16,0)
 W !!,"Setup for PRO Extract YTD Laboratory Report --",!
"RTN","ECXLPRO",17,0)
 ;determine primary division
"RTN","ECXLPRO",18,0)
 W !,"If you belong to more than one Primary Division, you must"
"RTN","ECXLPRO",19,0)
 W !,"select a Primary Division for the report.",!
"RTN","ECXLPRO",20,0)
 S ECXPRIME=$$PDIV^ECXPUTL
"RTN","ECXLPRO",21,0)
 I ECXPRIME=0 D ^ECXKILL Q
"RTN","ECXLPRO",22,0)
 S DA=ECXPRIME,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99" D EN^DIQ1
"RTN","ECXLPRO",23,0)
 S ECXPRIME=ECXPRIME_U_$G(ECXDIC(4,DA,99,"I"))_U_$G(ECXDIC(4,DA,.01,"I"))
"RTN","ECXLPRO",24,0)
 ;get all prosthetics divisions for report
"RTN","ECXLPRO",25,0)
 S ECXALL=1
"RTN","ECXLPRO",26,0)
 D PDIV3^ECXPUTL(DUZ,ECXPRIME,.ECXDIV)
"RTN","ECXLPRO",27,0)
 I ECXERR D  Q
"RTN","ECXLPRO",28,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXLPRO",29,0)
 ;determine fiscal year of report
"RTN","ECXLPRO",30,0)
 S DIR(0)="SMBA^C:CURRENT;P:PREVIOUS",DIR("A")="Select C(urrent) or P(revious) Fiscal Year: ",DIR("B")="CURRENT"
"RTN","ECXLPRO",31,0)
 W ! K X,Y D ^DIR K DIR
"RTN","ECXLPRO",32,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","ECXLPRO",33,0)
 .D ^ECXKILL W !!,?5,"Try again later... exiting.",!
"RTN","ECXLPRO",34,0)
 I Y="C" D
"RTN","ECXLPRO",35,0)
 .S X=$$CYFY^ECXUTL1(DT),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXLPRO",36,0)
 I Y="P" D
"RTN","ECXLPRO",37,0)
 .S YR=$E(DT,1,3),MON=$E(DT,4,5) S:+MON<10 YR=YR-1 S X1=YR_"0930"
"RTN","ECXLPRO",38,0)
 .S X=$$CYFY^ECXUTL1(X1),ECXARRAY("START")=$P(X,U,3),ECXARRAY("END")=$P(X,U,4)
"RTN","ECXLPRO",39,0)
 .K C,MON,YR,X1
"RTN","ECXLPRO",40,0)
 ;setup variables for taskmanager
"RTN","ECXLPRO",41,0)
 S ECXPGM="PROCESS^ECXLPRO",ECXDESC="PRO Extract YTD HCPCS Report"
"RTN","ECXLPRO",42,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")=""
"RTN","ECXLPRO",43,0)
 ;determine output device and queue if requested
"RTN","ECXLPRO",44,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXLPRO",45,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXLPRO",46,0)
 .S ^TMP($J,"ECXPORT",0)="REPORT TYPE^PSAS HCPCS^LOCAL QTY^LOCAL LABOR COST^LOCAL MATERIAL COST^LOCAL AVE COST^ALL OTHER QTY^ALL OTHER LABOR COST^ALL OTHER MATERIAL COST^ALL OTHER AVE COST" ;144
"RTN","ECXLPRO",47,0)
 .S CNT=1 ;144
"RTN","ECXLPRO",48,0)
 .D PROCESS ;144
"RTN","ECXLPRO",49,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXLPRO",50,0)
 .D ^ECXKILL ;144
"RTN","ECXLPRO",51,0)
 W !!,"Please note: The PRO Extract YTD Laboratory Report requires 132 columns."
"RTN","ECXLPRO",52,0)
 W !,"             Select an appropriate device for output."
"RTN","ECXLPRO",53,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLPRO",54,0)
 I ECXSAVE("POP")=1 W ! D ^ECXKILL Q
"RTN","ECXLPRO",55,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLPRO",56,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLPRO",57,0)
 .D PROCESS
"RTN","ECXLPRO",58,0)
 ;clean-up and close
"RTN","ECXLPRO",59,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLPRO",60,0)
 D HOME^%ZIS
"RTN","ECXLPRO",61,0)
 Q
"RTN","ECXLPRO",62,0)
 ;
"RTN","ECXLPRO",63,0)
PROCESS ;begin processing
"RTN","ECXLPRO",64,0)
 N DIVISION,E,EXTRACT,REC,NODE0,NODE1,LASTDAY,NODE2 ;177 Node2 will hold new cost data
"RTN","ECXLPRO",65,0)
 K ^TMP($J,"ECXP") S LASTDAY=""
"RTN","ECXLPRO",66,0)
 ;determine which extracts contain data for report
"RTN","ECXLPRO",67,0)
 S (EXTRACT,E)=0
"RTN","ECXLPRO",68,0)
 F  S E=$O(^ECX(727,"E",ECXHEAD,E)) Q:'E  D
"RTN","ECXLPRO",69,0)
 .Q:'$D(^ECX(727,E,0))
"RTN","ECXLPRO",70,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)<ECXARRAY("START")
"RTN","ECXLPRO",71,0)
 .Q:$P($G(^ECX(727,E,0)),U,4)>ECXARRAY("END")
"RTN","ECXLPRO",72,0)
 .Q:$G(^ECX(727,E,"DIV"))'=+ECXPRIME
"RTN","ECXLPRO",73,0)
 .S EXTRACT(E)=^ECX(727,E,0)
"RTN","ECXLPRO",74,0)
 .I $P(EXTRACT(E),U,5)>LASTDAY S LASTDAY=$P(EXTRACT(E),U,5)
"RTN","ECXLPRO",75,0)
 ;setup array of station numbers included in report
"RTN","ECXLPRO",76,0)
 F DIV=0:0 S DIV=$O(ECXDIV(DIV)) Q:'DIV  S ECXSTAT=$P(ECXDIV(DIV),U,2),DIVISION(ECXSTAT)=ECXDIV(DIV)
"RTN","ECXLPRO",77,0)
 ;get the extract data
"RTN","ECXLPRO",78,0)
 S E=0 F  S E=$O(EXTRACT(E)) Q:'E  S REC=0 I $D(^ECX(727.826,"AC",E)) F  S REC=$O(^ECX(727.826,"AC",E,REC)) Q:'REC  D
"RTN","ECXLPRO",79,0)
 .S NODE0=$G(^ECX(727.826,REC,0)),NODE1=$G(^ECX(727.826,REC,1)),NODE2=$G(^ECX(727.826,REC,2)) Q:NODE0=""  ;177 Grab node 2 to get new cost data
"RTN","ECXLPRO",80,0)
 .S (ECXCTAMT,ECXLLC,ECXLMC)=0
"RTN","ECXLPRO",81,0)
 .S ECXFELOC=$P(NODE0,U,10),ECXFEKEY=$P(NODE0,U,11)
"RTN","ECXLPRO",82,0)
 .;ignore any record which isn't for lab receiving station
"RTN","ECXLPRO",83,0)
 .Q:ECXFELOC'["LAB"
"RTN","ECXLPRO",84,0)
 .S ECXHCPC=$P(NODE0,U,33),ECXTYPE=$E(ECXFEKEY,6),ECXREQ=$P($E(ECXFEKEY,8,99),"REQ",1)
"RTN","ECXLPRO",85,0)
 .S ECXQTY=$P(NODE0,U,12),ECXCTAMT=$P(NODE0,U,25)+$P(NODE2,U,25),ECXGRPR=$P(NODE1,U,4) ;177 Pre-FY20 cost data is in NODE0, FY20 and beyond cost data is in NODE2
"RTN","ECXLPRO",86,0)
 .S ECXSTAT=$P(ECXFELOC,"LAB",1),ECXFORM="LAB"
"RTN","ECXLPRO",87,0)
 .S ECXLLC=$P(NODE0,U,26)+$P(NODE2,U,26),ECXLMC=$P(NODE0,U,27)+$P(NODE2,U,27) ;177 Pre FY20 cost data is in NODE0, FY20 and beyond cost data is in NODE2
"RTN","ECXLPRO",88,0)
 .;ignore record if division not included in this report
"RTN","ECXLPRO",89,0)
 .Q:ECXSTAT=""  Q:'$D(DIVISION(ECXSTAT))
"RTN","ECXLPRO",90,0)
 .;set in ^tmp using primary station#; determine if requesting station is same as or part of this station
"RTN","ECXLPRO",91,0)
 .S ECXLAB="",ECXSTAT=+ECXSTAT,ECXLAB=$S(ECXREQ'[ECXSTAT:"OTHER",1:"SAME")
"RTN","ECXLPRO",92,0)
 .;be sure there's no padding on cost variables
"RTN","ECXLPRO",93,0)
 .S ECXCTAMT=+$TR(ECXCTAMT," ",0),ECXLLC=+$TR(ECXLLC," ",0),ECXLMC=+$TR(ECXLMC," ",0)
"RTN","ECXLPRO",94,0)
 .;tmp global holds - lab qty^lab labor cost^lab matrl cost
"RTN","ECXLPRO",95,0)
 .I '$D(^TMP($J,"ECXP",ECXTYPE,ECXHCPC)) S ^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"SAME")="0^0^0",^TMP($J,"ECXP",ECXTYPE,ECXHCPC,"OTHER")="0^0^0"
"RTN","ECXLPRO",96,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,1)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,1)+ECXQTY
"RTN","ECXLPRO",97,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,2)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,2)+ECXLLC
"RTN","ECXLPRO",98,0)
 .S $P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,3)=$P(^TMP($J,"ECXP",ECXTYPE,ECXHCPC,ECXLAB),U,3)+ECXLMC
"RTN","ECXLPRO",99,0)
 ;setup hcpcs descriptions
"RTN","ECXLPRO",100,0)
 D HCPCS^ECXCPRO
"RTN","ECXLPRO",101,0)
 ;print report
"RTN","ECXLPRO",102,0)
 D PRINT^ECXLPRO1
"RTN","ECXLPRO",103,0)
 ;cleanup
"RTN","ECXLPRO",104,0)
 I '$G(ECXPORT) D AUDIT^ECXKILL ;144
"RTN","ECXLPRO",105,0)
 Q
"RTN","ECXLPRO",106,0)
 ;
"RTN","ECXLPRO",107,0)
HCPCS ;setup hcpcs cross-reference
"RTN","ECXLPRO",108,0)
 N H,CPT,CPTNM,DESC
"RTN","ECXLPRO",109,0)
 S H=0
"RTN","ECXLPRO",110,0)
 F  S H=$O(^RMPR(661.1,H)) Q:+H<1  D
"RTN","ECXLPRO",111,0)
 .;don't skip inactive hcpcs in case doing previous fy
"RTN","ECXLPRO",112,0)
 .S CPTNM="",CPT=$P(^RMPR(661.1,H,0),U,4)
"RTN","ECXLPRO",113,0)
 .I +CPT>0 S CPTNM=$P(^ICPT(CPT,0),U,1),DESC=$E($P(^ICPT(CPT,0),U,2),1,26)
"RTN","ECXLPRO",114,0)
 .Q:CPTNM=""
"RTN","ECXLPRO",115,0)
 .S ^TMP($J,"HCPCS",CPTNM)=DESC
"RTN","ECXLPRO",116,0)
 Q
"VER")
8.0^22.2
"BLD",11265,6)
^159
**END**
**END**

