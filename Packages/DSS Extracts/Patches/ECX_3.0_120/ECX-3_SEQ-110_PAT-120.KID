EMERGENCY Released ECX*3*120 SEQ #110
Extracted from mail message
**KIDS**:ECX*3.0*120^

**INSTALL NAME**
ECX*3.0*120
"BLD",7879,0)
ECX*3.0*120^DSS EXTRACTS^0^3091103^y
"BLD",7879,1,0)
^^1^1^3090310^
"BLD",7879,1,1,0)
FY10 DSS EXTRACT CHANGES
"BLD",7879,4,0)
^9.64PA^727.819^17
"BLD",7879,4,727.802,0)
727.802
"BLD",7879,4,727.802,2,0)
^9.641^727.802^1
"BLD",7879,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",7879,4,727.802,2,727.802,1,0)
^9.6411^28^5
"BLD",7879,4,727.802,2,727.802,1,28,0)
TREATING SPECIALTY
"BLD",7879,4,727.802,2,727.802,1,75,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.802,2,727.802,1,78,0)
ENCOUNTER SWAC
"BLD",7879,4,727.802,2,727.802,1,88,0)
ADMIT OUTPATIENT TX FLAG
"BLD",7879,4,727.802,2,727.802,1,89,0)
COUNTRY
"BLD",7879,4,727.802,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.802,224)

"BLD",7879,4,727.805,0)
727.805
"BLD",7879,4,727.805,2,0)
^9.641^727.805^1
"BLD",7879,4,727.805,2,727.805,0)
NURSING EXTRACT  (File-top level)
"BLD",7879,4,727.805,2,727.805,1,0)
^9.6411^15^1
"BLD",7879,4,727.805,2,727.805,1,15,0)
TREATING SPECIALTY
"BLD",7879,4,727.805,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.805,224)

"BLD",7879,4,727.808,0)
727.808
"BLD",7879,4,727.808,2,0)
^9.641^727.808^1
"BLD",7879,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",7879,4,727.808,2,727.808,1,0)
^9.6411^15^1
"BLD",7879,4,727.808,2,727.808,1,15,0)
TREATING SPECIALTY
"BLD",7879,4,727.808,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.808,224)

"BLD",7879,4,727.809,0)
727.809
"BLD",7879,4,727.809,2,0)
^9.641^727.809^1
"BLD",7879,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",7879,4,727.809,2,727.809,1,0)
^9.6411^15^4
"BLD",7879,4,727.809,2,727.809,1,15,0)
TREATING SPECIALTY
"BLD",7879,4,727.809,2,727.809,1,58,0)
ORDERING STOP CODE
"BLD",7879,4,727.809,2,727.809,1,76,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.809,2,727.809,1,82,0)
COUNTRY
"BLD",7879,4,727.809,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.809,224)

"BLD",7879,4,727.81,0)
727.81
"BLD",7879,4,727.81,2,0)
^9.641^727.81^1
"BLD",7879,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",7879,4,727.81,2,727.81,1,0)
^9.6411^20^4
"BLD",7879,4,727.81,2,727.81,1,20,0)
TREATING SPECIALTY
"BLD",7879,4,727.81,2,727.81,1,86,0)
ENCOUNTER SWAC
"BLD",7879,4,727.81,2,727.81,1,89,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.81,2,727.81,1,97,0)
COUNTRY
"BLD",7879,4,727.81,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.81,224)

"BLD",7879,4,727.811,0)
727.811
"BLD",7879,4,727.811,2,0)
^9.641^727.811^1
"BLD",7879,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",7879,4,727.811,2,727.811,1,0)
^9.6411^26^3
"BLD",7879,4,727.811,2,727.811,1,26,0)
TREATING SPECIALTY
"BLD",7879,4,727.811,2,727.811,1,97,0)
ENCOUNTER SWAC
"BLD",7879,4,727.811,2,727.811,1,102,0)
SW ASIA CONDITIONS
"BLD",7879,4,727.811,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.811,224)

"BLD",7879,4,727.813,0)
727.813
"BLD",7879,4,727.813,2,0)
^9.641^727.813^1
"BLD",7879,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",7879,4,727.813,2,727.813,1,0)
^9.6411^13^1
"BLD",7879,4,727.813,2,727.813,1,13,0)
TREATING SPECIALTY
"BLD",7879,4,727.813,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.813,224)

"BLD",7879,4,727.814,0)
727.814
"BLD",7879,4,727.814,2,0)
^9.641^727.814^1
"BLD",7879,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",7879,4,727.814,2,727.814,1,0)
^9.6411^18^1
"BLD",7879,4,727.814,2,727.814,1,18,0)
TREATING SPECIALTY
"BLD",7879,4,727.814,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.814,224)

"BLD",7879,4,727.815,0)
727.815
"BLD",7879,4,727.815,2,0)
^9.641^727.815^1
"BLD",7879,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",7879,4,727.815,2,727.815,1,0)
^9.6411^24^3
"BLD",7879,4,727.815,2,727.815,1,24,0)
TREATING SPECIALTY
"BLD",7879,4,727.815,2,727.815,1,36,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.815,2,727.815,1,85,0)
ENCOUNTER SWAC
"BLD",7879,4,727.815,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.815,224)

"BLD",7879,4,727.819,0)
727.819
"BLD",7879,4,727.819,2,0)
^9.641^727.819^1
"BLD",7879,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",7879,4,727.819,2,727.819,1,0)
^9.6411^15^5
"BLD",7879,4,727.819,2,727.819,1,15,0)
TREATING SPECIALTY
"BLD",7879,4,727.819,2,727.819,1,20,0)
TOTAL DOSES PER DAY
"BLD",7879,4,727.819,2,727.819,1,38,0)
ORDERING STOP CODE
"BLD",7879,4,727.819,2,727.819,1,81,0)
SW ASIA CONDITIONS
"BLD",7879,4,727.819,2,727.819,1,87,0)
COUNTRY CODE
"BLD",7879,4,727.819,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.819,224)

"BLD",7879,4,727.824,0)
727.824
"BLD",7879,4,727.824,2,0)
^9.641^727.824^1
"BLD",7879,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",7879,4,727.824,2,727.824,1,0)
^9.6411^18^1
"BLD",7879,4,727.824,2,727.824,1,18,0)
TREATING SPECIALTY
"BLD",7879,4,727.824,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.824,224)

"BLD",7879,4,727.825,0)
727.825
"BLD",7879,4,727.825,2,0)
^9.641^727.825^1
"BLD",7879,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",7879,4,727.825,2,727.825,1,0)
^9.6411^24^3
"BLD",7879,4,727.825,2,727.825,1,24,0)
TREATING SPECIALTY
"BLD",7879,4,727.825,2,727.825,1,36,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.825,2,727.825,1,85,0)
ENCOUNTER SWAC
"BLD",7879,4,727.825,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.825,224)

"BLD",7879,4,727.826,0)
727.826
"BLD",7879,4,727.826,2,0)
^9.641^727.826^1
"BLD",7879,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",7879,4,727.826,2,727.826,1,0)
^9.6411^77^3
"BLD",7879,4,727.826,2,727.826,1,22,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.826,2,727.826,1,77,0)
ENCOUNTER SWAC
"BLD",7879,4,727.826,2,727.826,1,87,0)
COUNTRY
"BLD",7879,4,727.826,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.826,224)

"BLD",7879,4,727.827,0)
727.827
"BLD",7879,4,727.827,2,0)
^9.641^727.827^1
"BLD",7879,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",7879,4,727.827,2,727.827,1,0)
^9.6411^85^3
"BLD",7879,4,727.827,2,727.827,1,84,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.827,2,727.827,1,85,0)
ENCOUNTER SWAC
"BLD",7879,4,727.827,2,727.827,1,93,0)
COUNTRY
"BLD",7879,4,727.827,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.827,224)

"BLD",7879,4,727.832,0)
727.832
"BLD",7879,4,727.832,2,0)
^9.641^727.832^1
"BLD",7879,4,727.832,2,727.832,0)
NUTRITION EXTRACT  (File-top level)
"BLD",7879,4,727.832,2,727.832,1,0)
^9.6411^10^3
"BLD",7879,4,727.832,2,727.832,1,10,0)
TREATING SPECIALTY
"BLD",7879,4,727.832,2,727.832,1,31,0)
SW ASIA CONDITIONS?
"BLD",7879,4,727.832,2,727.832,1,64,0)
COUNTRY
"BLD",7879,4,727.832,222)
y^n^p^^^^n^^n
"BLD",7879,4,727.832,224)

"BLD",7879,4,728,0)
728
"BLD",7879,4,728,2,0)
^9.641^728^1
"BLD",7879,4,728,2,728,0)
DSS EXTRACTS  (File-top level)
"BLD",7879,4,728,2,728,1,0)
^9.6411^73^1
"BLD",7879,4,728,2,728,1,73,0)
FY TEST SITE
"BLD",7879,4,728,222)
y^n^p^^^^n^^n
"BLD",7879,4,728,224)

"BLD",7879,4,728.44,0)
728.44
"BLD",7879,4,728.44,2,0)
^9.641^728.44^1
"BLD",7879,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",7879,4,728.44,2,728.44,1,0)
^9.6411^11^1
"BLD",7879,4,728.44,2,728.44,1,11,0)
NON-COUNT CLINIC (Y/N)
"BLD",7879,4,728.44,222)
y^n^p^^^^n^^n
"BLD",7879,4,728.44,224)

"BLD",7879,4,"APDD",727.802,727.802)

"BLD",7879,4,"APDD",727.802,727.802,28)

"BLD",7879,4,"APDD",727.802,727.802,75)

"BLD",7879,4,"APDD",727.802,727.802,78)

"BLD",7879,4,"APDD",727.802,727.802,88)

"BLD",7879,4,"APDD",727.802,727.802,89)

"BLD",7879,4,"APDD",727.805,727.805)

"BLD",7879,4,"APDD",727.805,727.805,15)

"BLD",7879,4,"APDD",727.808,727.808)

"BLD",7879,4,"APDD",727.808,727.808,15)

"BLD",7879,4,"APDD",727.809,727.809)

"BLD",7879,4,"APDD",727.809,727.809,15)

"BLD",7879,4,"APDD",727.809,727.809,58)

"BLD",7879,4,"APDD",727.809,727.809,76)

"BLD",7879,4,"APDD",727.809,727.809,82)

"BLD",7879,4,"APDD",727.81,727.81)

"BLD",7879,4,"APDD",727.81,727.81,20)

"BLD",7879,4,"APDD",727.81,727.81,86)

"BLD",7879,4,"APDD",727.81,727.81,89)

"BLD",7879,4,"APDD",727.81,727.81,97)

"BLD",7879,4,"APDD",727.811,727.811)

"BLD",7879,4,"APDD",727.811,727.811,26)

"BLD",7879,4,"APDD",727.811,727.811,97)

"BLD",7879,4,"APDD",727.811,727.811,102)

"BLD",7879,4,"APDD",727.813,727.813)

"BLD",7879,4,"APDD",727.813,727.813,13)

"BLD",7879,4,"APDD",727.814,727.814)

"BLD",7879,4,"APDD",727.814,727.814,18)

"BLD",7879,4,"APDD",727.815,727.815)

"BLD",7879,4,"APDD",727.815,727.815,24)

"BLD",7879,4,"APDD",727.815,727.815,36)

"BLD",7879,4,"APDD",727.815,727.815,85)

"BLD",7879,4,"APDD",727.819,727.819)

"BLD",7879,4,"APDD",727.819,727.819,15)

"BLD",7879,4,"APDD",727.819,727.819,20)

"BLD",7879,4,"APDD",727.819,727.819,38)

"BLD",7879,4,"APDD",727.819,727.819,81)

"BLD",7879,4,"APDD",727.819,727.819,87)

"BLD",7879,4,"APDD",727.824,727.824)

"BLD",7879,4,"APDD",727.824,727.824,18)

"BLD",7879,4,"APDD",727.825,727.825)

"BLD",7879,4,"APDD",727.825,727.825,24)

"BLD",7879,4,"APDD",727.825,727.825,36)

"BLD",7879,4,"APDD",727.825,727.825,85)

"BLD",7879,4,"APDD",727.826,727.826)

"BLD",7879,4,"APDD",727.826,727.826,22)

"BLD",7879,4,"APDD",727.826,727.826,77)

"BLD",7879,4,"APDD",727.826,727.826,87)

"BLD",7879,4,"APDD",727.827,727.827)

"BLD",7879,4,"APDD",727.827,727.827,84)

"BLD",7879,4,"APDD",727.827,727.827,85)

"BLD",7879,4,"APDD",727.827,727.827,93)

"BLD",7879,4,"APDD",727.832,727.832)

"BLD",7879,4,"APDD",727.832,727.832,10)

"BLD",7879,4,"APDD",727.832,727.832,31)

"BLD",7879,4,"APDD",727.832,727.832,64)

"BLD",7879,4,"APDD",728,728)

"BLD",7879,4,"APDD",728,728,73)

"BLD",7879,4,"APDD",728.44,728.44)

"BLD",7879,4,"APDD",728.44,728.44,11)

"BLD",7879,4,"B",727.802,727.802)

"BLD",7879,4,"B",727.805,727.805)

"BLD",7879,4,"B",727.808,727.808)

"BLD",7879,4,"B",727.809,727.809)

"BLD",7879,4,"B",727.81,727.81)

"BLD",7879,4,"B",727.811,727.811)

"BLD",7879,4,"B",727.813,727.813)

"BLD",7879,4,"B",727.814,727.814)

"BLD",7879,4,"B",727.815,727.815)

"BLD",7879,4,"B",727.819,727.819)

"BLD",7879,4,"B",727.824,727.824)

"BLD",7879,4,"B",727.825,727.825)

"BLD",7879,4,"B",727.826,727.826)

"BLD",7879,4,"B",727.827,727.827)

"BLD",7879,4,"B",727.832,727.832)

"BLD",7879,4,"B",728,728)

"BLD",7879,4,"B",728.44,728.44)

"BLD",7879,6.3)
43
"BLD",7879,"ABPKG")
n
"BLD",7879,"INID")
^n
"BLD",7879,"INIT")
POST^ECX3P120
"BLD",7879,"KRN",0)
^9.67PA^779.2^20
"BLD",7879,"KRN",.4,0)
.4
"BLD",7879,"KRN",.401,0)
.401
"BLD",7879,"KRN",.402,0)
.402
"BLD",7879,"KRN",.403,0)
.403
"BLD",7879,"KRN",.5,0)
.5
"BLD",7879,"KRN",.84,0)
.84
"BLD",7879,"KRN",3.6,0)
3.6
"BLD",7879,"KRN",3.8,0)
3.8
"BLD",7879,"KRN",9.2,0)
9.2
"BLD",7879,"KRN",9.8,0)
9.8
"BLD",7879,"KRN",9.8,"NM",0)
^9.68A^33^33
"BLD",7879,"KRN",9.8,"NM",1,0)
ECXLARA^^0^B29666776
"BLD",7879,"KRN",9.8,"NM",2,0)
ECXOPRX^^0^B53251147
"BLD",7879,"KRN",9.8,"NM",3,0)
ECXADM^^0^B44017084
"BLD",7879,"KRN",9.8,"NM",4,0)
ECXUTL3^^0^B63750846
"BLD",7879,"KRN",9.8,"NM",5,0)
ECXKILL1^^0^B7082343
"BLD",7879,"KRN",9.8,"NM",6,0)
ECXSCX2^^0^B8788223
"BLD",7879,"KRN",9.8,"NM",7,0)
ECXSCXN^^0^B57854664
"BLD",7879,"KRN",9.8,"NM",8,0)
ECXNUT^^0^B32372950
"BLD",7879,"KRN",9.8,"NM",9,0)
ECXPIVDN^^0^B49936544
"BLD",7879,"KRN",9.8,"NM",10,0)
ECXPIVD2^^0^B8697954
"BLD",7879,"KRN",9.8,"NM",11,0)
ECXOPRX1^^0^B8589426
"BLD",7879,"KRN",9.8,"NM",12,0)
ECXUD^^0^B54326285
"BLD",7879,"KRN",9.8,"NM",13,0)
ECXUTL2^^0^B71058121
"BLD",7879,"KRN",9.8,"NM",14,0)
ECXPRO^^0^B35257665
"BLD",7879,"KRN",9.8,"NM",15,0)
ECXLBB^^0^B50013852
"BLD",7879,"KRN",9.8,"NM",16,0)
ECXLBB1^^0^B26138435
"BLD",7879,"KRN",9.8,"NM",17,0)
ECXLBBC^^0^B41726117
"BLD",7879,"KRN",9.8,"NM",18,0)
ECXTREX^^0^B28561003
"BLD",7879,"KRN",9.8,"NM",19,0)
ECXPHVE^^0^B4219296
"BLD",7879,"KRN",9.8,"NM",20,0)
ECXEC^^0^B49835024
"BLD",7879,"KRN",9.8,"NM",21,0)
ECXUEC^^0^B38987244
"BLD",7879,"KRN",9.8,"NM",22,0)
ECXSCRP^^0^B19429166
"BLD",7879,"KRN",9.8,"NM",23,0)
ECXSCX3^^0^B12749405
"BLD",7879,"KRN",9.8,"NM",24,0)
ECXSTOP^^0^B10000186
"BLD",7879,"KRN",9.8,"NM",25,0)
ECXSCLD^^0^B162480116
"BLD",7879,"KRN",9.8,"NM",26,0)
ECXLARPT^^0^B22212471
"BLD",7879,"KRN",9.8,"NM",27,0)
ECXUTL4^^0^B51958350
"BLD",7879,"KRN",9.8,"NM",28,0)
ECXUTL5^^0^B34433820
"BLD",7879,"KRN",9.8,"NM",29,0)
ECXMTL^^0^B38030219
"BLD",7879,"KRN",9.8,"NM",30,0)
ECXQSR^^0^B40640052
"BLD",7879,"KRN",9.8,"NM",31,0)
ECXSURG1^^0^B15348265
"BLD",7879,"KRN",9.8,"NM",32,0)
ECXRAD^^0^B34986358
"BLD",7879,"KRN",9.8,"NM",33,0)
ECXQSR1^^0^B10373755
"BLD",7879,"KRN",9.8,"NM","B","ECXADM",3)

"BLD",7879,"KRN",9.8,"NM","B","ECXEC",20)

"BLD",7879,"KRN",9.8,"NM","B","ECXKILL1",5)

"BLD",7879,"KRN",9.8,"NM","B","ECXLARA",1)

"BLD",7879,"KRN",9.8,"NM","B","ECXLARPT",26)

"BLD",7879,"KRN",9.8,"NM","B","ECXLBB",15)

"BLD",7879,"KRN",9.8,"NM","B","ECXLBB1",16)

"BLD",7879,"KRN",9.8,"NM","B","ECXLBBC",17)

"BLD",7879,"KRN",9.8,"NM","B","ECXMTL",29)

"BLD",7879,"KRN",9.8,"NM","B","ECXNUT",8)

"BLD",7879,"KRN",9.8,"NM","B","ECXOPRX",2)

"BLD",7879,"KRN",9.8,"NM","B","ECXOPRX1",11)

"BLD",7879,"KRN",9.8,"NM","B","ECXPHVE",19)

"BLD",7879,"KRN",9.8,"NM","B","ECXPIVD2",10)

"BLD",7879,"KRN",9.8,"NM","B","ECXPIVDN",9)

"BLD",7879,"KRN",9.8,"NM","B","ECXPRO",14)

"BLD",7879,"KRN",9.8,"NM","B","ECXQSR",30)

"BLD",7879,"KRN",9.8,"NM","B","ECXQSR1",33)

"BLD",7879,"KRN",9.8,"NM","B","ECXRAD",32)

"BLD",7879,"KRN",9.8,"NM","B","ECXSCLD",25)

"BLD",7879,"KRN",9.8,"NM","B","ECXSCRP",22)

"BLD",7879,"KRN",9.8,"NM","B","ECXSCX2",6)

"BLD",7879,"KRN",9.8,"NM","B","ECXSCX3",23)

"BLD",7879,"KRN",9.8,"NM","B","ECXSCXN",7)

"BLD",7879,"KRN",9.8,"NM","B","ECXSTOP",24)

"BLD",7879,"KRN",9.8,"NM","B","ECXSURG1",31)

"BLD",7879,"KRN",9.8,"NM","B","ECXTREX",18)

"BLD",7879,"KRN",9.8,"NM","B","ECXUD",12)

"BLD",7879,"KRN",9.8,"NM","B","ECXUEC",21)

"BLD",7879,"KRN",9.8,"NM","B","ECXUTL2",13)

"BLD",7879,"KRN",9.8,"NM","B","ECXUTL3",4)

"BLD",7879,"KRN",9.8,"NM","B","ECXUTL4",27)

"BLD",7879,"KRN",9.8,"NM","B","ECXUTL5",28)

"BLD",7879,"KRN",19,0)
19
"BLD",7879,"KRN",19,"NM",0)
^9.68A^76^74
"BLD",7879,"KRN",19,"NM",1,0)
ECX SOURCE AUDITS^^2
"BLD",7879,"KRN",19,"NM",2,0)
ECX LBB SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",3,0)
ECX LBB SOURCE AUDIT REPORTS^^0
"BLD",7879,"KRN",19,"NM",4,0)
ECX LBB SOURCE AUDIT COMPAR^^0
"BLD",7879,"KRN",19,"NM",5,0)
ECX FISCAL YEAR EXTRACT^^0
"BLD",7879,"KRN",19,"NM",6,0)
ECX PHA EDIT^^2
"BLD",7879,"KRN",19,"NM",7,0)
ECX ECS VOL^^0
"BLD",7879,"KRN",19,"NM",8,0)
ECX MAINTENANCE^^0
"BLD",7879,"KRN",19,"NM",9,0)
ECX SETUP CLINIC^^0
"BLD",7879,"KRN",19,"NM",10,0)
ECXSCLOAD^^0
"BLD",7879,"KRN",19,"NM",11,0)
ECXSCLIST^^0
"BLD",7879,"KRN",19,"NM",12,0)
ECXSCEDIT^^0
"BLD",7879,"KRN",19,"NM",13,0)
ECXSCAPPROV^^0
"BLD",7879,"KRN",19,"NM",14,0)
ECX NATIONAL CLINIC^^0
"BLD",7879,"KRN",19,"NM",15,0)
ECX CLN STOP REP^^0
"BLD",7879,"KRN",19,"NM",16,0)
ECX STOP CODE VALIDITY^^0
"BLD",7879,"KRN",19,"NM",19,0)
ECX ADM SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",20,0)
ECX QSR SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",21,0)
ECX ECS SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",22,0)
ECX LAB SOURCE AUDIT (PATIENT)^^0
"BLD",7879,"KRN",19,"NM",23,0)
ECX LAR SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",24,0)
ECX MOV SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",25,0)
ECX MTL SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",26,0)
ECX NUR SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",27,0)
ECX NUT SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",28,0)
ECX PAI SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",29,0)
ECX PHA SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",30,0)
ECX PRO SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",31,0)
ECX RAD SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",32,0)
ECX SUR SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",33,0)
ECX TRT SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",34,0)
ECX ECS MAINTENANCE^^0
"BLD",7879,"KRN",19,"NM",35,0)
ECX SETUP INP MEDS^^0
"BLD",7879,"KRN",19,"NM",36,0)
ECXFEKEY^^0
"BLD",7879,"KRN",19,"NM",37,0)
ECXFELOC^^0
"BLD",7879,"KRN",19,"NM",38,0)
ECX SETUP INP CENSUS^^0
"BLD",7879,"KRN",19,"NM",39,0)
ECX SETUP LAB^^0
"BLD",7879,"KRN",19,"NM",40,0)
ECX DSSDEPT MGMT^^0
"BLD",7879,"KRN",19,"NM",41,0)
ECX CBOC REPORT^^0
"BLD",7879,"KRN",19,"NM",42,0)
ECX CPT INQUIRY^^0
"BLD",7879,"KRN",19,"NM",43,0)
ECX NUTRITION WORKSHEETS^^0
"BLD",7879,"KRN",19,"NM",44,0)
ECXLAB MAINTENACE^^0
"BLD",7879,"KRN",19,"NM",45,0)
ECX PHARMACY MAINTENANCE^^0
"BLD",7879,"KRN",19,"NM",46,0)
ECX PROSTHETICS MAINTENANCE^^0
"BLD",7879,"KRN",19,"NM",47,0)
ECX SURGERY MAINTENANCE^^0
"BLD",7879,"KRN",19,"NM",48,0)
ECX DIVISION ID^^0
"BLD",7879,"KRN",19,"NM",49,0)
ECX WARD DSSDEPT^^0
"BLD",7879,"KRN",19,"NM",50,0)
ECX UNTRANS LAR REPORT^^0
"BLD",7879,"KRN",19,"NM",51,0)
ECX LAB RESULTS TRANS EDIT^^0
"BLD",7879,"KRN",19,"NM",52,0)
ECX LAR LOINC RPT^^0
"BLD",7879,"KRN",19,"NM",53,0)
ECX NUT PRO EDIT^^0
"BLD",7879,"KRN",19,"NM",54,0)
ECX NUT PRO PRINT^^0
"BLD",7879,"KRN",19,"NM",55,0)
ECX NUT DIV EDIT^^0
"BLD",7879,"KRN",19,"NM",56,0)
ECX NUT DIV PRINT^^0
"BLD",7879,"KRN",19,"NM",57,0)
ECX PHA FKEY^^0
"BLD",7879,"KRN",19,"NM",58,0)
ECX PHA VOL^^0
"BLD",7879,"KRN",19,"NM",59,0)
ECX PHA VOL EDIT^^0
"BLD",7879,"KRN",19,"NM",60,0)
ECX PHA VOL EDIT LOG^^0
"BLD",7879,"KRN",19,"NM",61,0)
ECX PHA UDP/IVP SOURCE AUDIT^^0
"BLD",7879,"KRN",19,"NM",62,0)
ECX PRO YTD REPORT^^0
"BLD",7879,"KRN",19,"NM",63,0)
ECX PRO LAB REPORT^^0
"BLD",7879,"KRN",19,"NM",64,0)
ECX PRO COST^^0
"BLD",7879,"KRN",19,"NM",65,0)
ECX PRO COST REPORT^^0
"BLD",7879,"KRN",19,"NM",66,0)
ECXLABRS^^0
"BLD",7879,"KRN",19,"NM",67,0)
ECXLARP^^0
"BLD",7879,"KRN",19,"NM",68,0)
ECXTRYIT^^0
"BLD",7879,"KRN",19,"NM",69,0)
ECXSETUP^^0
"BLD",7879,"KRN",19,"NM",70,0)
ECXWRD^^0
"BLD",7879,"KRN",19,"NM",71,0)
ECXPCT^^0
"BLD",7879,"KRN",19,"NM",72,0)
ECX IV DIV PRINT^^0
"BLD",7879,"KRN",19,"NM",73,0)
ECX IV DIV EDIT^^0
"BLD",7879,"KRN",19,"NM",74,0)
ECXNDC^^0
"BLD",7879,"KRN",19,"NM",75,0)
ECX SUR VOL^^0
"BLD",7879,"KRN",19,"NM",76,0)
ECX SUR VOL REPORT^^0
"BLD",7879,"KRN",19,"NM","B","ECX ADM SOURCE AUDIT",19)

"BLD",7879,"KRN",19,"NM","B","ECX CBOC REPORT",41)

"BLD",7879,"KRN",19,"NM","B","ECX CLN STOP REP",15)

"BLD",7879,"KRN",19,"NM","B","ECX CPT INQUIRY",42)

"BLD",7879,"KRN",19,"NM","B","ECX DIVISION ID",48)

"BLD",7879,"KRN",19,"NM","B","ECX DSSDEPT MGMT",40)

"BLD",7879,"KRN",19,"NM","B","ECX ECS MAINTENANCE",34)

"BLD",7879,"KRN",19,"NM","B","ECX ECS SOURCE AUDIT",21)

"BLD",7879,"KRN",19,"NM","B","ECX ECS VOL",7)

"BLD",7879,"KRN",19,"NM","B","ECX FISCAL YEAR EXTRACT",5)

"BLD",7879,"KRN",19,"NM","B","ECX IV DIV EDIT",73)

"BLD",7879,"KRN",19,"NM","B","ECX IV DIV PRINT",72)

"BLD",7879,"KRN",19,"NM","B","ECX LAB RESULTS TRANS EDIT",51)

"BLD",7879,"KRN",19,"NM","B","ECX LAB SOURCE AUDIT (PATIENT)",22)

"BLD",7879,"KRN",19,"NM","B","ECX LAR LOINC RPT",52)

"BLD",7879,"KRN",19,"NM","B","ECX LAR SOURCE AUDIT",23)

"BLD",7879,"KRN",19,"NM","B","ECX LBB SOURCE AUDIT",2)

"BLD",7879,"KRN",19,"NM","B","ECX LBB SOURCE AUDIT COMPAR",4)

"BLD",7879,"KRN",19,"NM","B","ECX LBB SOURCE AUDIT REPORTS",3)

"BLD",7879,"KRN",19,"NM","B","ECX MAINTENANCE",8)

"BLD",7879,"KRN",19,"NM","B","ECX MOV SOURCE AUDIT",24)

"BLD",7879,"KRN",19,"NM","B","ECX MTL SOURCE AUDIT",25)

"BLD",7879,"KRN",19,"NM","B","ECX NATIONAL CLINIC",14)

"BLD",7879,"KRN",19,"NM","B","ECX NUR SOURCE AUDIT",26)

"BLD",7879,"KRN",19,"NM","B","ECX NUT DIV EDIT",55)

"BLD",7879,"KRN",19,"NM","B","ECX NUT DIV PRINT",56)

"BLD",7879,"KRN",19,"NM","B","ECX NUT PRO EDIT",53)

"BLD",7879,"KRN",19,"NM","B","ECX NUT PRO PRINT",54)

"BLD",7879,"KRN",19,"NM","B","ECX NUT SOURCE AUDIT",27)

"BLD",7879,"KRN",19,"NM","B","ECX NUTRITION WORKSHEETS",43)

"BLD",7879,"KRN",19,"NM","B","ECX PAI SOURCE AUDIT",28)

"BLD",7879,"KRN",19,"NM","B","ECX PHA EDIT",6)

"BLD",7879,"KRN",19,"NM","B","ECX PHA FKEY",57)

"BLD",7879,"KRN",19,"NM","B","ECX PHA SOURCE AUDIT",29)

"BLD",7879,"KRN",19,"NM","B","ECX PHA UDP/IVP SOURCE AUDIT",61)

"BLD",7879,"KRN",19,"NM","B","ECX PHA VOL",58)

"BLD",7879,"KRN",19,"NM","B","ECX PHA VOL EDIT",59)

"BLD",7879,"KRN",19,"NM","B","ECX PHA VOL EDIT LOG",60)

"BLD",7879,"KRN",19,"NM","B","ECX PHARMACY MAINTENANCE",45)

"BLD",7879,"KRN",19,"NM","B","ECX PRO COST",64)

"BLD",7879,"KRN",19,"NM","B","ECX PRO COST REPORT",65)

"BLD",7879,"KRN",19,"NM","B","ECX PRO LAB REPORT",63)

"BLD",7879,"KRN",19,"NM","B","ECX PRO SOURCE AUDIT",30)

"BLD",7879,"KRN",19,"NM","B","ECX PRO YTD REPORT",62)

"BLD",7879,"KRN",19,"NM","B","ECX PROSTHETICS MAINTENANCE",46)

"BLD",7879,"KRN",19,"NM","B","ECX QSR SOURCE AUDIT",20)

"BLD",7879,"KRN",19,"NM","B","ECX RAD SOURCE AUDIT",31)

"BLD",7879,"KRN",19,"NM","B","ECX SETUP CLINIC",9)

"BLD",7879,"KRN",19,"NM","B","ECX SETUP INP CENSUS",38)

"BLD",7879,"KRN",19,"NM","B","ECX SETUP INP MEDS",35)

"BLD",7879,"KRN",19,"NM","B","ECX SETUP LAB",39)

"BLD",7879,"KRN",19,"NM","B","ECX SOURCE AUDITS",1)

"BLD",7879,"KRN",19,"NM","B","ECX STOP CODE VALIDITY",16)

"BLD",7879,"KRN",19,"NM","B","ECX SUR SOURCE AUDIT",32)

"BLD",7879,"KRN",19,"NM","B","ECX SUR VOL",75)

"BLD",7879,"KRN",19,"NM","B","ECX SUR VOL REPORT",76)

"BLD",7879,"KRN",19,"NM","B","ECX SURGERY MAINTENANCE",47)

"BLD",7879,"KRN",19,"NM","B","ECX TRT SOURCE AUDIT",33)

"BLD",7879,"KRN",19,"NM","B","ECX UNTRANS LAR REPORT",50)

"BLD",7879,"KRN",19,"NM","B","ECX WARD DSSDEPT",49)

"BLD",7879,"KRN",19,"NM","B","ECXFEKEY",36)

"BLD",7879,"KRN",19,"NM","B","ECXFELOC",37)

"BLD",7879,"KRN",19,"NM","B","ECXLAB MAINTENACE",44)

"BLD",7879,"KRN",19,"NM","B","ECXLABRS",66)

"BLD",7879,"KRN",19,"NM","B","ECXLARP",67)

"BLD",7879,"KRN",19,"NM","B","ECXNDC",74)

"BLD",7879,"KRN",19,"NM","B","ECXPCT",71)

"BLD",7879,"KRN",19,"NM","B","ECXSCAPPROV",13)

"BLD",7879,"KRN",19,"NM","B","ECXSCEDIT",12)

"BLD",7879,"KRN",19,"NM","B","ECXSCLIST",11)

"BLD",7879,"KRN",19,"NM","B","ECXSCLOAD",10)

"BLD",7879,"KRN",19,"NM","B","ECXSETUP",69)

"BLD",7879,"KRN",19,"NM","B","ECXTRYIT",68)

"BLD",7879,"KRN",19,"NM","B","ECXWRD",70)

"BLD",7879,"KRN",19.1,0)
19.1
"BLD",7879,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",7879,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",7879,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",7879,"KRN",101,0)
101
"BLD",7879,"KRN",409.61,0)
409.61
"BLD",7879,"KRN",771,0)
771
"BLD",7879,"KRN",779.2,0)
779.2
"BLD",7879,"KRN",870,0)
870
"BLD",7879,"KRN",8989.51,0)
8989.51
"BLD",7879,"KRN",8989.52,0)
8989.52
"BLD",7879,"KRN",8994,0)
8994
"BLD",7879,"KRN","B",.4,.4)

"BLD",7879,"KRN","B",.401,.401)

"BLD",7879,"KRN","B",.402,.402)

"BLD",7879,"KRN","B",.403,.403)

"BLD",7879,"KRN","B",.5,.5)

"BLD",7879,"KRN","B",.84,.84)

"BLD",7879,"KRN","B",3.6,3.6)

"BLD",7879,"KRN","B",3.8,3.8)

"BLD",7879,"KRN","B",9.2,9.2)

"BLD",7879,"KRN","B",9.8,9.8)

"BLD",7879,"KRN","B",19,19)

"BLD",7879,"KRN","B",19.1,19.1)

"BLD",7879,"KRN","B",101,101)

"BLD",7879,"KRN","B",409.61,409.61)

"BLD",7879,"KRN","B",771,771)

"BLD",7879,"KRN","B",779.2,779.2)

"BLD",7879,"KRN","B",870,870)

"BLD",7879,"KRN","B",8989.51,8989.51)

"BLD",7879,"KRN","B",8989.52,8989.52)

"BLD",7879,"KRN","B",8994,8994)

"BLD",7879,"QUES",0)
^9.62^^
"BLD",7879,"REQB",0)
^9.611^3^3
"BLD",7879,"REQB",1,0)
ECX*3.0*112^1
"BLD",7879,"REQB",2,0)
DG*5.3*813^1
"BLD",7879,"REQB",3,0)
SD*5.3*557^1
"BLD",7879,"REQB","B","DG*5.3*813",2)

"BLD",7879,"REQB","B","ECX*3.0*112",1)

"BLD",7879,"REQB","B","SD*5.3*557",3)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^n^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,28)

"FIA",727.802,727.802,75)

"FIA",727.802,727.802,78)

"FIA",727.802,727.802,88)

"FIA",727.802,727.802,89)

"FIA",727.805)
NURSING EXTRACT
"FIA",727.805,0)
^ECX(727.805,
"FIA",727.805,0,0)
727.805
"FIA",727.805,0,1)
y^n^p^^^^n^^n
"FIA",727.805,0,10)

"FIA",727.805,0,11)

"FIA",727.805,0,"RLRO")

"FIA",727.805,0,"VR")
3.0^ECX
"FIA",727.805,727.805)
1
"FIA",727.805,727.805,15)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^n^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,15)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^n^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,15)

"FIA",727.809,727.809,58)

"FIA",727.809,727.809,76)

"FIA",727.809,727.809,82)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^n^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,20)

"FIA",727.81,727.81,86)

"FIA",727.81,727.81,89)

"FIA",727.81,727.81,97)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^n^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,26)

"FIA",727.811,727.811,97)

"FIA",727.811,727.811,102)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^n^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,13)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^n^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,18)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,24)

"FIA",727.815,727.815,36)

"FIA",727.815,727.815,85)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^n^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,15)

"FIA",727.819,727.819,20)

"FIA",727.819,727.819,38)

"FIA",727.819,727.819,81)

"FIA",727.819,727.819,87)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^n^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,18)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,24)

"FIA",727.825,727.825,36)

"FIA",727.825,727.825,85)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^n^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,22)

"FIA",727.826,727.826,77)

"FIA",727.826,727.826,87)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^n^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,84)

"FIA",727.827,727.827,85)

"FIA",727.827,727.827,93)

"FIA",727.832)
NUTRITION EXTRACT
"FIA",727.832,0)
^ECX(727.832,
"FIA",727.832,0,0)
727.832
"FIA",727.832,0,1)
y^n^p^^^^n^^n
"FIA",727.832,0,10)

"FIA",727.832,0,11)

"FIA",727.832,0,"RLRO")

"FIA",727.832,0,"VR")
3.0^ECX
"FIA",727.832,727.832)
1
"FIA",727.832,727.832,10)

"FIA",727.832,727.832,31)

"FIA",727.832,727.832,64)

"FIA",728)
DSS EXTRACTS
"FIA",728,0)
^ECX(728,
"FIA",728,0,0)
728P
"FIA",728,0,1)
y^n^p^^^^n^^n
"FIA",728,0,10)

"FIA",728,0,11)

"FIA",728,0,"RLRO")

"FIA",728,0,"VR")
3.0^ECX
"FIA",728,728)
1
"FIA",728,728,73)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^n^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,11)

"INIT")
POST^ECX3P120
"KRN",19,10121,-1)
0^10
"KRN",19,10121,0)
ECXSCLOAD^Create DSS Clinic Stop Code File^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10121,1,0)
^19.06^46^46^3090527^^^^
"KRN",19,10121,1,1,0)
 This option allows the DSS extract manager to create the CLINICS AND
"KRN",19,10121,1,2,0)
 STOP CODES file (#728.44) which will contain clinics, the stop codes
"KRN",19,10121,1,3,0)
 assigned to those clinics by MAS, and the stop codes used for those
"KRN",19,10121,1,4,0)
 clinics by DSS.  The process by which new clinic entries are added and 
"KRN",19,10121,1,5,0)
 existing clinic entries are edited is as follows:
"KRN",19,10121,1,6,0)
  
"KRN",19,10121,1,7,0)
 NEW CLINIC ENTRIES
"KRN",19,10121,1,8,0)
  1. The HOSPITAL LOCATION file (#44) is searched for all clinics.  
"KRN",19,10121,1,9,0)
     Clinics that are currently inactive are ignored.  
"KRN",19,10121,1,10,0)
  2. New clinic entries to the CLINICS AND STOP CODES file (#728.44) are 
"KRN",19,10121,1,11,0)
     added with the following field defaults:
"KRN",19,10121,1,12,0)
     a. STOP CODE field (1) = STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,13,0)
        LOCATION file (#44)
"KRN",19,10121,1,14,0)
     b. CREDIT STOP CODE field (2) = CREDIT STOP CODE field (2503) in 
"KRN",19,10121,1,15,0)
        HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,16,0)
     c. DSS STOP CODE field (3)= STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10121,1,17,0)
        LOCATION file (#44)
"KRN",19,10121,1,18,0)
     d. DSS CREDIT STOP CODE field (4) = CREDIT STOP CODE field (2503) 
"KRN",19,10121,1,19,0)
        in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,20,0)
     e. ACTION TO SEND field (5) = 
"KRN",19,10121,1,21,0)
        "1" (SEND STOP CODE) if CREDIT STOP CODE field (2) does not
"KRN",19,10121,1,22,0)
            exist
"KRN",19,10121,1,23,0)
        "5" (SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE) if CREDIT 
"KRN",19,10121,1,24,0)
            STOP CODE field (2) exists
"KRN",19,10121,1,25,0)
        "6" (DO NOT SEND) if Clinic is flagged as a "non-count" clinic 
"KRN",19,10121,1,26,0)
            in HOSPITAL LOCATION file (#44)
"KRN",19,10121,1,27,0)
 
"KRN",19,10121,1,28,0)
 EXISTING CLINIC ENTRIES
"KRN",19,10121,1,29,0)
  1. All pre-existing clinics are checked against their counterpart in 
"KRN",19,10121,1,30,0)
     the HOSPITAL LOCATION file (#44) to be sure that the STOP CODE 
"KRN",19,10121,1,31,0)
     field (1) in the CLINICS AND STOP CODES file (#728.44) matches the 
"KRN",19,10121,1,32,0)
     STOP CODE NUMBER field (8) in the HOSPITAL LOCATION file (#44).  
"KRN",19,10121,1,33,0)
     The same check is made on the CREDIT STOP CODE field (2) to be sure 
"KRN",19,10121,1,34,0)
     that it matches the CREDIT STOP CODE field (2503) in the HOSPITAL 
"KRN",19,10121,1,35,0)
     LOCATION file (#44).
"KRN",19,10121,1,36,0)
  2. Any pre-existing clinic that has had a change to its active status
"KRN",19,10121,1,37,0)
     or non-count status in the HOSPITAL LOCATION file (#44) will be
"KRN",19,10121,1,38,0)
     reported in an 'UNREVIEWED CLINCS' report with a symbol that 
"KRN",19,10121,1,39,0)
     identifies the change.  This is the same report that is printed
"KRN",19,10121,1,40,0)
     via the 'UNREVIEWED CLINICS' option of the 'Clinics and DSS Stop
"KRN",19,10121,1,41,0)
     Codes Print' menu option.
"KRN",19,10121,1,42,0)
  3. Any stop code changes to pre-existing clinics will delete the DATE 
"KRN",19,10121,1,43,0)
     LAST REVIEWED field (6) in the CLINICS AND STOP CODES file (#728.44).
"KRN",19,10121,1,44,0)
     This will ensure that the edited clinics will print out as 
"KRN",19,10121,1,45,0)
     "unreviewed" the next time the clinic worksheet (from the "Clinics 
"KRN",19,10121,1,46,0)
     and DSS Stop Codes Print") is produced.
"KRN",19,10121,25)
EN^ECXSCLD
"KRN",19,10121,"U")
CREATE DSS CLINIC STOP CODE FI
"KRN",19,10122,-1)
0^11
"KRN",19,10122,0)
ECXSCLIST^Clinics and DSS Stop Codes Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10122,1,0)
^19.06^14^14^3090527^^^^
"KRN",19,10122,1,1,0)
Using this option a worksheet may be printed for the DSS extract
"KRN",19,10122,1,2,0)
manager to use when creating the CLINICS AND STOP CODES file (#728.44)
"KRN",19,10122,1,3,0)
which relates clinics, the stop codes for those clinics used by MAS, and
"KRN",19,10122,1,4,0)
the stop codes required by DSS.
"KRN",19,10122,1,5,0)
 
"KRN",19,10122,1,6,0)
If the 'UNREVIEWED CLINICS' option is selected, then a synchronization
"KRN",19,10122,1,7,0)
will first be performed on the CLINICS AND STOP CODE file (#728.44).
"KRN",19,10122,1,8,0)
This is the same synchronization that is performed when the user runs
"KRN",19,10122,1,9,0)
the 'Create DSS Clinic Stop Code File' menu option.  If there has been
"KRN",19,10122,1,10,0)
a change in the HOSPITAL LOCATION file (#44) to the clinic's active
"KRN",19,10122,1,11,0)
status, its non-count status, if the stop code or credit stop code
"KRN",19,10122,1,12,0)
have been changed, or if new clinics have been added since the prior
"KRN",19,10122,1,13,0)
synchronization, then these change events will be captured.  All the
"KRN",19,10122,1,14,0)
change events are reported in the 'UNREVIEWED CLINiCS' report.
"KRN",19,10122,25)
PRINT^ECXSCLD
"KRN",19,10122,"U")
CLINICS AND DSS STOP CODES PRI
"KRN",19,10123,-1)
0^12
"KRN",19,10123,0)
ECXSCEDIT^Enter/Edit DSS Stop Codes for Clinics^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10123,1,0)
^19.06^4^4^3020731^^^^
"KRN",19,10123,1,1,0)
This options provides a method for the extract manager to select
"KRN",19,10123,1,2,0)
the stop codes for each clinic which will be associated with that
"KRN",19,10123,1,3,0)
clinic for the DSS extract.  These codes may be the same as those
"KRN",19,10123,1,4,0)
associated with the clinic by MAS but they may differ.
"KRN",19,10123,25)
EDIT^ECXSCLD
"KRN",19,10123,"U")
ENTER/EDIT DSS STOP CODES FOR 
"KRN",19,10135,-1)
0^13
"KRN",19,10135,0)
ECXSCAPPROV^Approve Reviewed DSS Clinic Worksheet^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10135,1,0)
^^6^6^2960717^^^^
"KRN",19,10135,1,1,0)
This option provides the extract manager a mechanism to approve all
"KRN",19,10135,1,2,0)
DSS Stop Codes and DSS Credit Stop Codes as site defined in the CLINICS 
"KRN",19,10135,1,3,0)
AND STOP CODES file (#728.44).  Running this option will mark all 
"KRN",19,10135,1,4,0)
currently existing entries in this file as "reviewed" with a date.  This 
"KRN",19,10135,1,5,0)
will allow sites to select to print the "Clinics and DSS Stop Codes 
"KRN",19,10135,1,6,0)
Print" by ALL or UNREVIEWED.
"KRN",19,10135,25)
APPROVE^ECXSCLD
"KRN",19,10135,"U")
APPROVE REVIEWED DSS CLINIC WO
"KRN",19,10137,-1)
0^69
"KRN",19,10137,0)
ECXSETUP^Generate the Inpatient Setup Extract^^R^^ECXMGR^^^^^^DSS EXTRACTS^^1
"KRN",19,10137,1,0)
^^7^7^2950421^^^^
"KRN",19,10137,1,1,0)
This option generates the inpatient setup extract which creates
"KRN",19,10137,1,2,0)
the hospital population for the selected DSS start up date. This data
"KRN",19,10137,1,3,0)
is stored in the ADMISSION SETUP EXTRACT file (#727.82), the
"KRN",19,10137,1,4,0)
PHYSICAL MOVEMENT SETUP EXTRACT file (#727.821), and the
"KRN",19,10137,1,5,0)
TREATING SPECIALTY CHANGE SETUP EXTRACT file (#727.822) until
"KRN",19,10137,1,6,0)
the data is transmitted to the commercial vendor. The option MUST
"KRN",19,10137,1,7,0)
only be run once.
"KRN",19,10137,20)
W !!!,"WARNING.",!,"This is very resource intensive and should be queued to run at slack time.",!!!
"KRN",19,10137,25)
EN^ECXSETUP
"KRN",19,10137,"U")
GENERATE THE INPATIENT SETUP E
"KRN",19,10139,-1)
0^19
"KRN",19,10139,0)
ECX ADM SOURCE AUDIT^Admission (ADM) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10139,1,0)
^19.06^14^14^3010829^^^^
"KRN",19,10139,1,1,0)
This option will generate a report from the ADMISSION EXTRACT
"KRN",19,10139,1,2,0)
file (#727.802) which will allow the DSS extract manager to
"KRN",19,10139,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10139,1,4,0)
Center.
"KRN",19,10139,1,5,0)
  
"KRN",19,10139,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10139,1,7,0)
in the verification process:
"KRN",19,10139,1,8,0)
  
"KRN",19,10139,1,9,0)
Report Title - Gains and Losses Sheet/Bed Status Report
"KRN",19,10139,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10139,1,11,0)
  
"KRN",19,10139,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10139,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10139,1,14,0)
division (if applicable).
"KRN",19,10139,25)
EN^ECXAADM
"KRN",19,10139,"U")
ADMISSION (ADM) EXTRACT AUDIT
"KRN",19,10140,-1)
0^24
"KRN",19,10140,0)
ECX MOV SOURCE AUDIT^Physical Movement (MOV) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10140,1,0)
^^14^14^2990503^^
"KRN",19,10140,1,1,0)
This option will generate a report from the PHYSICAL MOVEMENT
"KRN",19,10140,1,2,0)
EXTRACT file (#727.808) which will allow the DSS extract manager to
"KRN",19,10140,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10140,1,4,0)
Center.
"KRN",19,10140,1,5,0)
  
"KRN",19,10140,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10140,1,7,0)
in the verification process:
"KRN",19,10140,1,8,0)
  
"KRN",19,10140,1,9,0)
Report Title - Gains & Losses Sheet/Bed Status Report
"KRN",19,10140,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10140,1,11,0)
  
"KRN",19,10140,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10140,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10140,1,14,0)
division (if applicable).
"KRN",19,10140,25)
EN^ECXAMOV
"KRN",19,10140,60)

"KRN",19,10140,62)

"KRN",19,10140,63)

"KRN",19,10140,64)

"KRN",19,10140,65)

"KRN",19,10140,66)

"KRN",19,10140,"U")
PHYSICAL MOVEMENT (MOV) EXTRAC
"KRN",19,10141,-1)
0^33
"KRN",19,10141,0)
ECX TRT SOURCE AUDIT^Treating Specialty Change (TRT) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10141,1,0)
^^14^14^2971107^
"KRN",19,10141,1,1,0)
This option will generate a report from the TREATING SPECIALTY
"KRN",19,10141,1,2,0)
CHANGE EXTRACT file (#727.817) which will allow the DSS extract 
"KRN",19,10141,1,3,0)
manager to verify extract data before transmission to the Austin 
"KRN",19,10141,1,4,0)
Automation Center.
"KRN",19,10141,1,5,0)
  
"KRN",19,10141,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10141,1,7,0)
in the verification process:
"KRN",19,10141,1,8,0)
  
"KRN",19,10141,1,9,0)
Report Title - Gains & Losses Sheet/Treating Specialty Report
"KRN",19,10141,1,10,0)
Menu Option -  Gains and Losses (G&L) Sheet [DG G&L SHEET]
"KRN",19,10141,1,11,0)
  
"KRN",19,10141,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10141,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10141,1,14,0)
division (if applicable).
"KRN",19,10141,25)
EN^ECXATRT
"KRN",19,10141,60)

"KRN",19,10141,62)

"KRN",19,10141,63)

"KRN",19,10141,64)

"KRN",19,10141,65)

"KRN",19,10141,66)

"KRN",19,10141,"U")
TREATING SPECIALTY CHANGE (TRT
"KRN",19,10143,-1)
0^28
"KRN",19,10143,0)
ECX PAI SOURCE AUDIT^PAI (PAS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10143,1,0)
^^14^14^2971107^
"KRN",19,10143,1,1,0)
This option will generate a report from the PAI EXTRACT file
"KRN",19,10143,1,2,0)
(#727.823) which will allow the DSS extract manager to verify
"KRN",19,10143,1,3,0)
extract data before transmission to the Austin Automation
"KRN",19,10143,1,4,0)
Center.
"KRN",19,10143,1,5,0)
  
"KRN",19,10143,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10143,1,7,0)
in the verification process:
"KRN",19,10143,1,8,0)
  
"KRN",19,10143,1,9,0)
Report Title - Record Status Report
"KRN",19,10143,1,10,0)
Menu Option -  Record Status Report [DG RUG STATUS]
"KRN",19,10143,1,11,0)
  
"KRN",19,10143,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10143,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10143,1,14,0)
division (if applicable).
"KRN",19,10143,25)
EN^ECXAPAS
"KRN",19,10143,60)

"KRN",19,10143,62)

"KRN",19,10143,63)

"KRN",19,10143,64)

"KRN",19,10143,65)

"KRN",19,10143,66)

"KRN",19,10143,"U")
PAI (PAS) EXTRACT AUDIT
"KRN",19,10144,-1)
0^21
"KRN",19,10144,0)
ECX ECS SOURCE AUDIT^Event Capture (ECS) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10144,1,0)
^^14^14^2971107^
"KRN",19,10144,1,1,0)
This option will generate a report from the EVENT CAPTURE LOCAL 
"KRN",19,10144,1,2,0)
EXTRACT file (#727.815) which will allow the DSS extract manager to
"KRN",19,10144,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10144,1,4,0)
Center.
"KRN",19,10144,1,5,0)
  
"KRN",19,10144,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10144,1,7,0)
in the verification process:
"KRN",19,10144,1,8,0)
  
"KRN",19,10144,1,9,0)
Report Title - DSS Unit Workload Summary Report
"KRN",19,10144,1,10,0)
Menu Option -  DSS Unit Workload Summary [ECRDSSU]
"KRN",19,10144,1,11,0)
  
"KRN",19,10144,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10144,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10144,1,14,0)
division (if applicable).
"KRN",19,10144,25)
EN^ECXAECS
"KRN",19,10144,60)

"KRN",19,10144,62)

"KRN",19,10144,63)

"KRN",19,10144,64)

"KRN",19,10144,"U")
EVENT CAPTURE (ECS) EXTRACT AU
"KRN",19,10145,-1)
0^22
"KRN",19,10145,0)
ECX LAB SOURCE AUDIT (PATIENT)^Laboratory (LAB) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10145,1,0)
^^14^14^2971117^^^^
"KRN",19,10145,1,1,0)
This option will generate a report from the LABORATORY EXTRACT
"KRN",19,10145,1,2,0)
file (#727.813) which will allow the DSS extract manager to
"KRN",19,10145,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10145,1,4,0)
Center.
"KRN",19,10145,1,5,0)
  
"KRN",19,10145,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10145,1,7,0)
in the verification process:
"KRN",19,10145,1,8,0)
  
"KRN",19,10145,1,9,0)
Report Title - Workload Statistics by Accession Area and Shifts
"KRN",19,10145,1,10,0)
Menu Option -  Workload statistics by accession area and shift [LRRP8]
"KRN",19,10145,1,11,0)
  
"KRN",19,10145,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10145,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10145,1,14,0)
division (if applicable).
"KRN",19,10145,25)
EN^ECXALAB
"KRN",19,10145,60)

"KRN",19,10145,62)

"KRN",19,10145,63)

"KRN",19,10145,64)

"KRN",19,10145,"U")
LABORATORY (LAB) EXTRACT AUDIT
"KRN",19,10147,-1)
0^26
"KRN",19,10147,0)
ECX NUR SOURCE AUDIT^Nursing (NUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^1
"KRN",19,10147,1,0)
^^16^16^2971107^
"KRN",19,10147,1,1,0)
This option will generate a report from the NURSING EXTRACT
"KRN",19,10147,1,2,0)
file (#727.805) which will allow the DSS extract manager to
"KRN",19,10147,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10147,1,4,0)
Center.
"KRN",19,10147,1,5,0)
  
"KRN",19,10147,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10147,1,7,0)
in the verification process:
"KRN",19,10147,1,8,0)
  
"KRN",19,10147,1,9,0)
Report Title - Report 10-1106 Segment 200,
"KRN",19,10147,1,10,0)
               Cumulative Daily Patient Classification Data
"KRN",19,10147,1,11,0)
Menu Option -  Patient Category Totals-Midnight Acuity Reports
"KRN",19,10147,1,12,0)
               [NURAPR-RES-MDPC]
"KRN",19,10147,1,13,0)
  
"KRN",19,10147,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10147,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10147,1,16,0)
division (if applicable).
"KRN",19,10147,20)
W !,"The start date should be the same as the end date",!!
"KRN",19,10147,25)
EN^ECXANUR
"KRN",19,10147,60)

"KRN",19,10147,62)

"KRN",19,10147,63)

"KRN",19,10147,64)

"KRN",19,10147,"U")
NURSING (NUR) EXTRACT AUDIT
"KRN",19,10148,-1)
0^31
"KRN",19,10148,0)
ECX RAD SOURCE AUDIT^Radiology (RAD) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10148,1,0)
^^15^15^2971107^
"KRN",19,10148,1,1,0)
This option will generate a report from the RADIOLOGY EXTRACT
"KRN",19,10148,1,2,0)
file (#727.814) which will allow the DSS extract manager to
"KRN",19,10148,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10148,1,4,0)
Center.
"KRN",19,10148,1,5,0)
  
"KRN",19,10148,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10148,1,7,0)
in the verification process:
"KRN",19,10148,1,8,0)
  
"KRN",19,10148,1,9,0)
Report Title - Procedure/CPT Statistics Report, Inpatient
"KRN",19,10148,1,10,0)
               Procedure/CPT Statistics Report, Outpatient
"KRN",19,10148,1,11,0)
Menu Option -  Procedure/CPT Statistics Report [RA CPTSTATS]
"KRN",19,10148,1,12,0)
  
"KRN",19,10148,1,13,0)
Be sure that the extract audit report and the external application
"KRN",19,10148,1,14,0)
report are generated for the same date or date range and the same
"KRN",19,10148,1,15,0)
division (if applicable).
"KRN",19,10148,25)
EN^ECXARAD
"KRN",19,10148,60)

"KRN",19,10148,62)

"KRN",19,10148,63)

"KRN",19,10148,64)

"KRN",19,10148,"U")
RADIOLOGY (RAD) EXTRACT AUDIT
"KRN",19,10149,-1)
2^1
"KRN",19,10149,0)
ECX SOURCE AUDITS^Extract Audit Reports Menu^^M^11721^^^^^^^513
"KRN",19,10149,10,0)
^19.01IP^18^18
"KRN",19,10149,10,1,0)
10139^ADM^1
"KRN",19,10149,10,1,"^")
ECX ADM SOURCE AUDIT
"KRN",19,10149,10,3,0)
10144^ECS^2
"KRN",19,10149,10,3,"^")
ECX ECS SOURCE AUDIT
"KRN",19,10149,10,4,0)
10145^LAB^3
"KRN",19,10149,10,4,"^")
ECX LAB SOURCE AUDIT (PATIENT)
"KRN",19,10149,10,6,0)
10140^MOV^6
"KRN",19,10149,10,6,"^")
ECX MOV SOURCE AUDIT
"KRN",19,10149,10,7,0)
10143^PAS^9
"KRN",19,10149,10,7,"^")
ECX PAI SOURCE AUDIT
"KRN",19,10149,10,8,0)
10148^RAD^13
"KRN",19,10149,10,8,"^")
ECX RAD SOURCE AUDIT
"KRN",19,10149,10,9,0)
10150^SUR^14
"KRN",19,10149,10,9,"^")
ECX SUR SOURCE AUDIT
"KRN",19,10149,10,10,0)
10141^TRT^15
"KRN",19,10149,10,10,"^")
ECX TRT SOURCE AUDIT
"KRN",19,10149,10,11,0)
10147^NUR^8
"KRN",19,10149,10,11,"^")
ECX NUR SOURCE AUDIT
"KRN",19,10149,10,12,0)
10171^ECQ^1.5
"KRN",19,10149,10,12,"^")
ECX QSR SOURCE AUDIT
"KRN",19,10149,10,13,0)
10855^PRO^12
"KRN",19,10149,10,13,"^")
ECX PRO SOURCE AUDIT
"KRN",19,10149,10,14,0)
11348^MTL^7
"KRN",19,10149,10,14,"^")
ECX MTL SOURCE AUDIT
"KRN",19,10149,10,15,0)
12021^PHA^10
"KRN",19,10149,10,15,"^")
ECX PHA SOURCE AUDIT
"KRN",19,10149,10,16,0)
13444^NUT^8.5
"KRN",19,10149,10,16,"^")
ECX NUT SOURCE AUDIT
"KRN",19,10149,10,17,0)
13453^LAR^4
"KRN",19,10149,10,17,"^")
ECX LAR SOURCE AUDIT
"KRN",19,10149,10,18,0)
13755^LBB^5
"KRN",19,10149,10,18,"^")
ECX LBB SOURCE AUDIT REPORTS
"KRN",19,10149,"U")
EXTRACT AUDIT REPORTS MENU
"KRN",19,10150,-1)
0^32
"KRN",19,10150,0)
ECX SUR SOURCE AUDIT^Surgery (SUR) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10150,1,0)
^^14^14^2971107^
"KRN",19,10150,1,1,0)
This option will generate a report from the SURGERY EXTRACT
"KRN",19,10150,1,2,0)
file (#727.811) which will allow the DSS extract manager to
"KRN",19,10150,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,10150,1,4,0)
Center.
"KRN",19,10150,1,5,0)
  
"KRN",19,10150,1,6,0)
The following VistA application report should be of assistance
"KRN",19,10150,1,7,0)
in the verification process:
"KRN",19,10150,1,8,0)
  
"KRN",19,10150,1,9,0)
Report Title - Surgical Service Cumulative Report of CPT Codes
"KRN",19,10150,1,10,0)
Menu Option -  Cumulative Report of CPT Codes [SROACCT]
"KRN",19,10150,1,11,0)
  
"KRN",19,10150,1,12,0)
Be sure that the extract audit report and the external application
"KRN",19,10150,1,13,0)
report are generated for the same date or date range and the same
"KRN",19,10150,1,14,0)
division (if applicable).
"KRN",19,10150,25)
EN^ECXASUR
"KRN",19,10150,60)

"KRN",19,10150,62)

"KRN",19,10150,63)

"KRN",19,10150,64)

"KRN",19,10150,"U")
SURGERY (SUR) EXTRACT AUDIT
"KRN",19,10159,-1)
0^37
"KRN",19,10159,0)
ECXFELOC^Print Feeder Locations^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10159,1,0)
^^2^2^2980806^^^^
"KRN",19,10159,1,1,0)
Using this option a list of feeder locations sorted by the feeder system may
"KRN",19,10159,1,2,0)
be printed.
"KRN",19,10159,25)
EN^ECXFELOC
"KRN",19,10159,"U")
PRINT FEEDER LOCATIONS
"KRN",19,10160,-1)
0^36
"KRN",19,10160,0)
ECXFEKEY^Print Feeder Keys^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10160,1,0)
^19.06^2^2^3020222^^^^
"KRN",19,10160,1,1,0)
Using this option a list of feeder keys sorted by the feeder system may be
"KRN",19,10160,1,2,0)
printed.
"KRN",19,10160,25)
EN^ECXFEKEY
"KRN",19,10160,"U")
PRINT FEEDER KEYS
"KRN",19,10161,-1)
0^8
"KRN",19,10161,0)
ECX MAINTENANCE^Maintenance^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10161,1,0)
^19.06^4^4^3090908^^^^
"KRN",19,10161,1,1,0)
This menu provides the extract manager various options to
"KRN",19,10161,1,2,0)
maintain the files necessary to extract data from existing
"KRN",19,10161,1,3,0)
DHCP files and to generate reports of feeder keys and feeder
"KRN",19,10161,1,4,0)
locations.
"KRN",19,10161,10,0)
^19.01IP^31^31
"KRN",19,10161,10,1,0)
10173^11^11
"KRN",19,10161,10,1,"^")
ECX SETUP CLINIC
"KRN",19,10161,10,3,0)
10174^14^14
"KRN",19,10161,10,3,"^")
ECX SETUP INP MEDS
"KRN",19,10161,10,4,0)
10160^8^8
"KRN",19,10161,10,4,"^")
ECXFEKEY
"KRN",19,10161,10,5,0)
10159^9^9
"KRN",19,10161,10,5,"^")
ECXFELOC
"KRN",19,10161,10,7,0)
10175^13^13
"KRN",19,10161,10,7,"^")
ECX SETUP INP CENSUS
"KRN",19,10161,10,8,0)
10177^12^12
"KRN",19,10161,10,8,"^")
ECX SETUP LAB
"KRN",19,10161,10,9,0)
10853^3^3
"KRN",19,10161,10,9,"^")
ECX DSSDEPT MGMT
"KRN",19,10161,10,16,0)
12456^1^1
"KRN",19,10161,10,16,"^")
ECX CBOC REPORT
"KRN",19,10161,10,19,0)
12463^2^2
"KRN",19,10161,10,19,"^")
ECX CPT INQUIRY
"KRN",19,10161,10,24,0)
13259^6^6
"KRN",19,10161,10,24,"^")
ECX NUTRITION WORKSHEETS
"KRN",19,10161,10,26,0)
13455^5^5
"KRN",19,10161,10,26,"^")
ECXLAB MAINTENACE
"KRN",19,10161,10,27,0)
13456^7^7
"KRN",19,10161,10,27,"^")
ECX PHARMACY MAINTENANCE
"KRN",19,10161,10,29,0)
13457^10^10
"KRN",19,10161,10,29,"^")
ECX PROSTHETICS MAINTENANCE
"KRN",19,10161,10,30,0)
13458^15^15
"KRN",19,10161,10,30,"^")
ECX SURGERY MAINTENANCE
"KRN",19,10161,10,31,0)
13791^4^4
"KRN",19,10161,10,31,"^")
ECX ECS MAINTENANCE
"KRN",19,10161,10.1)
File Maintenance for DSS
"KRN",19,10161,99)
61612,32209
"KRN",19,10161,"U")
MAINTENANCE
"KRN",19,10163,-1)
0^68
"KRN",19,10163,0)
ECXTRYIT^Trial for Setup Extract^^R^^ECXMGR^^^^^^DSS EXTRACTS^^1
"KRN",19,10163,1,0)
^^5^5^2950418^^^^
"KRN",19,10163,1,1,0)
This option uses the logic of the admission setup extract to generate
"KRN",19,10163,1,2,0)
a printed report of the inpatient population on a selected day. This
"KRN",19,10163,1,3,0)
report should be compared to reports from MAS to eliminate any
"KRN",19,10163,1,4,0)
problems in the ADMISSION SETUP EXTRACT file (#727.82) used
"KRN",19,10163,1,5,0)
to generate the admission setup extract.
"KRN",19,10163,20)
W !!!,"WARNING.",!,"This is very resource intensive and should be queued to run at slack time.",!!!
"KRN",19,10163,25)
EN^ECXTRYIT
"KRN",19,10163,"U")
TRIAL FOR SETUP EXTRACT
"KRN",19,10165,-1)
0^66
"KRN",19,10165,0)
ECXLABRS^Link DSS Selected Lab Tests to Local Lab Tests^MENU OPTION NO LONGER USED^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10165,1,0)
^19.06^5^5^3030905^^
"KRN",19,10165,1,1,0)
Using this option the extract manager has the ability to link the DSS
"KRN",19,10165,1,2,0)
selected tests in the DSS LAB TESTS file (#727.2) to the local lab tests
"KRN",19,10165,1,3,0)
in the LABORATORY TESTS file (#60).  Local names for BLOOD, URINE and 
"KRN",19,10165,1,4,0)
FECES specimens must also be defined.  This information is critical for 
"KRN",19,10165,1,5,0)
the DSS Lab Results Extract.
"KRN",19,10165,25)
EN^ECXLABRS
"KRN",19,10165,"U")
LINK DSS SELECTED LAB TESTS TO
"KRN",19,10166,-1)
0^14
"KRN",19,10166,0)
ECX NATIONAL CLINIC^National Clinic Codes for DSS List^^P^^^^^^^^DSS EXTRACTS
"KRN",19,10166,1,0)
^^2^2^2950419^^^
"KRN",19,10166,1,1,0)
This option prints a list of the national clinic codes for DSS from the
"KRN",19,10166,1,2,0)
NATIONAL CLINIC file (#728.441).
"KRN",19,10166,60)
ECX(728.441,
"KRN",19,10166,62)
0
"KRN",19,10166,63)
[ECX CLINIC CODE]
"KRN",19,10166,64)
[ECX CLINIC CODE]
"KRN",19,10166,65)

"KRN",19,10166,66)

"KRN",19,10166,"U")
NATIONAL CLINIC CODES FOR DSS 
"KRN",19,10167,-1)
0^73
"KRN",19,10167,0)
ECX IV DIV EDIT^Enter/Edit IV Room Division^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10167,1,0)
^^4^4^2960319^^^
"KRN",19,10167,1,1,0)
This option allows editing of the DIVISION field (.02) of the IV
"KRN",19,10167,1,2,0)
Room file (#59.5).  The purpose of the DIVISION field is to provide
"KRN",19,10167,1,3,0)
a way to tie outpatient IV data to a Medical Center Division for DSS
"KRN",19,10167,1,4,0)
purposes.
"KRN",19,10167,25)
ED^ECXDIVIV
"KRN",19,10167,"U")
ENTER/EDIT IV ROOM DIVISION
"KRN",19,10168,-1)
0^72
"KRN",19,10168,0)
ECX IV DIV PRINT^Print IV Room Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10168,1,0)
^^5^5^2960319^^
"KRN",19,10168,1,1,0)
This option will print a worksheet listing all the entries in the 
"KRN",19,10168,1,2,0)
IV Room file (#59.5) of the Inpatient Medications Package.  This 
"KRN",19,10168,1,3,0)
worksheet is intended to be used by the DSS Manager to define the 
"KRN",19,10168,1,4,0)
DIVISION (as a pointer to the Medical Center Division file (#40.8))
"KRN",19,10168,1,5,0)
for each IV Room for DSS purposes.
"KRN",19,10168,25)
PRT^ECXDIVIV
"KRN",19,10168,"U")
PRINT IV ROOM WORKSHEET
"KRN",19,10169,-1)
0^70
"KRN",19,10169,0)
ECXWRD^Active MAS Wards for Fiscal Year Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10169,1,0)
^^7^7^2980721^^^
"KRN",19,10169,1,1,0)
This option prints a list of all MAS wards that were active at any time 
"KRN",19,10169,1,2,0)
during the current fiscal year.  The list is sorted by Medical Center 
"KRN",19,10169,1,3,0)
Division and displays the pointer to the HOSPITAL LOCATION file (#44),
"KRN",19,10169,1,4,0)
the service and specialty associated with the ward in the WARD LOCATION
"KRN",19,10169,1,5,0)
file (#42), and the DSS Department code associated with the ward in the
"KRN",19,10169,1,6,0)
DSS WARD file (#727.4).
"KRN",19,10169,1,7,0)
      
"KRN",19,10169,25)
EN^ECXWRD
"KRN",19,10169,"U")
ACTIVE MAS WARDS FOR FISCAL YE
"KRN",19,10171,-1)
0^20
"KRN",19,10171,0)
ECX QSR SOURCE AUDIT^QUASAR (ECQ) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10171,1,0)
^^16^16^2971107^
"KRN",19,10171,1,1,0)
This option will generate a report from the QUASAR EXTRACT file
"KRN",19,10171,1,2,0)
(#727.825) which will allow the DSS extract manager to verify
"KRN",19,10171,1,3,0)
extract data before transmission to the Austin Automation Center.
"KRN",19,10171,1,4,0)
  
"KRN",19,10171,1,5,0)
The following VistA application report should be of assistance
"KRN",19,10171,1,6,0)
in the verification process:
"KRN",19,10171,1,7,0)
  
"KRN",19,10171,1,8,0)
Report Title - Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,9,0)
                 All Clinicians
"KRN",19,10171,1,10,0)
               Audiology & Speech Pathology Procedure Statistics for
"KRN",19,10171,1,11,0)
                 All Other Providers
"KRN",19,10171,1,12,0)
Menu Option -  Statistics by Procedure [ACKQAS PROC STATS]
"KRN",19,10171,1,13,0)
  
"KRN",19,10171,1,14,0)
Be sure that the extract audit report and the external application
"KRN",19,10171,1,15,0)
report are generated for the same date or date range and the same
"KRN",19,10171,1,16,0)
division (if applicable).
"KRN",19,10171,25)
EN^ECXAECQ
"KRN",19,10171,"U")
QUASAR (ECQ) EXTRACT AUDIT
"KRN",19,10172,-1)
0^74
"KRN",19,10172,0)
ECXNDC^Pharmacy NDC Lookup^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10172,1,0)
^^7^7^2960829^
"KRN",19,10172,1,1,0)
This option will allow lookups on the local DRUG file (#50) using NDCs
"KRN",19,10172,1,2,0)
from DSS Pharmacy Feeder Keys that have been rejected because the 1st
"KRN",19,10172,1,3,0)
seven characters are zeros (Ex. "0000000000003073531").  This would occur
"KRN",19,10172,1,4,0)
when a pharmacy item has not been matched to NDF.  To use this option,
"KRN",19,10172,1,5,0)
please enter the NDC (last twelve characters) from a rejected feeder key. 
"KRN",19,10172,1,6,0)
This will display the following information from the local DRUG file
"KRN",19,10172,1,7,0)
(#50): LOCAL GENERIC NAME, DISPENSE UNIT, and PRICE PER DISPENSE UNIT.
"KRN",19,10172,25)
EN^ECXNDC
"KRN",19,10172,"U")
PHARMACY NDC LOOKUP
"KRN",19,10173,-1)
0^9
"KRN",19,10173,0)
ECX SETUP CLINIC^Setup for DSS Clinic Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10173,1,0)
^19.06^2^2^3090520^^^^
"KRN",19,10173,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10173,1,2,0)
define DSS clinic information.
"KRN",19,10173,10,0)
^19.01IP^7^7
"KRN",19,10173,10,1,0)
10166^1^5
"KRN",19,10173,10,1,"^")
ECX NATIONAL CLINIC
"KRN",19,10173,10,2,0)
10121^2^10
"KRN",19,10173,10,2,"^")
ECXSCLOAD
"KRN",19,10173,10,3,0)
10122^3^15
"KRN",19,10173,10,3,"^")
ECXSCLIST
"KRN",19,10173,10,4,0)
10123^4^20
"KRN",19,10173,10,4,"^")
ECXSCEDIT
"KRN",19,10173,10,5,0)
10135^5^25
"KRN",19,10173,10,5,"^")
ECXSCAPPROV
"KRN",19,10173,10,6,0)
12461^6^30
"KRN",19,10173,10,6,"^")
ECX CLN STOP REP
"KRN",19,10173,10,7,0)
13790^7^33
"KRN",19,10173,10,7,"^")
ECX STOP CODE VALIDITY
"KRN",19,10173,99)
61556,49250
"KRN",19,10173,"U")
SETUP FOR DSS CLINIC INFORMATI
"KRN",19,10174,-1)
0^35
"KRN",19,10174,0)
ECX SETUP INP MEDS^Setup for Inpatient Medications Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10174,1,0)
^^2^2^2961004^
"KRN",19,10174,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10174,1,2,0)
define DSS Inpatient Medications pharmacy information.
"KRN",19,10174,10,0)
^19.01IP^3^3
"KRN",19,10174,10,1,0)
10168^1^5
"KRN",19,10174,10,1,"^")
ECX IV DIV PRINT
"KRN",19,10174,10,2,0)
10167^2^10
"KRN",19,10174,10,2,"^")
ECX IV DIV EDIT
"KRN",19,10174,10,3,0)
10172^3^15
"KRN",19,10174,10,3,"^")
ECXNDC
"KRN",19,10174,99)
61143,27971
"KRN",19,10174,"U")
SETUP FOR INPATIENT MEDICATION
"KRN",19,10175,-1)
0^38
"KRN",19,10175,0)
ECX SETUP INP CENSUS^Setup for Inpatient Census Information^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10175,1,0)
^^2^2^2961108^^^
"KRN",19,10175,1,1,0)
This menu provides access to the various options needed to accurately
"KRN",19,10175,1,2,0)
define and create DSS Inpatient Census information.
"KRN",19,10175,10,0)
^19.01IP^4^4
"KRN",19,10175,10,1,0)
10163^1^5
"KRN",19,10175,10,1,"^")
ECXTRYIT
"KRN",19,10175,10,2,0)
10137^2^10
"KRN",19,10175,10,2,"^")
ECXSETUP
"KRN",19,10175,10,3,0)
10169^3^15
"KRN",19,10175,10,3,"^")
ECXWRD
"KRN",19,10175,10,4,0)
10176^4^20
"KRN",19,10175,10,4,"^")
ECXPCT
"KRN",19,10175,99)
61143,27971
"KRN",19,10175,"U")
SETUP FOR INPATIENT CENSUS INF
"KRN",19,10176,-1)
0^71
"KRN",19,10176,0)
ECXPCT^Primary Care Team Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10176,1,0)
^^4^4^2961121^^
"KRN",19,10176,1,1,0)
This option prints a list of all Primary Care Teams.  The list is sorted
"KRN",19,10176,1,2,0)
alphabetically by TEAM name and displays the pointer to the TEAM file
"KRN",19,10176,1,3,0)
(#404.51). The intent of this option is to provide help for building
"KRN",19,10176,1,4,0)
primary care teams on the commercial DSS System.
"KRN",19,10176,25)
EN^ECXPCT
"KRN",19,10176,"U")
PRIMARY CARE TEAM PRINT
"KRN",19,10177,-1)
0^39
"KRN",19,10177,0)
ECX SETUP LAB^Setup for DSS Lab Results Information^MENU OPTION NO LONGER USED^M^^^^^^^^DSS EXTRACTS
"KRN",19,10177,1,0)
^^2^2^2961108^
"KRN",19,10177,1,1,0)
This menu provides access to the options needed to accurately define DSS
"KRN",19,10177,1,2,0)
Lab Results Extract information.
"KRN",19,10177,10,0)
^19.01IP^2^2
"KRN",19,10177,10,1,0)
10165^1^5
"KRN",19,10177,10,1,"^")
ECXLABRS
"KRN",19,10177,10,2,0)
10178^2^10
"KRN",19,10177,10,2,"^")
ECXLARP
"KRN",19,10177,99)
61332,48274
"KRN",19,10177,"U")
SETUP FOR DSS LAB RESULTS INFO
"KRN",19,10178,-1)
0^67
"KRN",19,10178,0)
ECXLARP^Print DSS Lab Test Datasheet^MENU OPTION NO LONGER USED^R^^^^^^^^DSS EXTRACTS
"KRN",19,10178,1,0)
^19.06^5^5^3050513^^^^
"KRN",19,10178,1,1,0)
This option prints a list of the DSS Lab Tests used for the Lab Results
"KRN",19,10178,1,2,0)
Extract (LAR).  It will display the local lab data names for each test.
"KRN",19,10178,1,3,0)
It will also show the blood, urine and feces specimens used by your 
"KRN",19,10178,1,4,0)
facility.  This information is critical for generating the DSS Lab 
"KRN",19,10178,1,5,0)
Results Extract.
"KRN",19,10178,25)
EN^ECXLARP
"KRN",19,10178,"U")
PRINT DSS LAB TEST DATASHEET
"KRN",19,10850,-1)
0^48
"KRN",19,10850,0)
ECX DIVISION ID^Enter/Edit DSS Division Identifier^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10850,1,0)
^19.06^3^3^3020715^^^
"KRN",19,10850,1,1,0)
This option should only be used by the DSS Site Manager to enter or
"KRN",19,10850,1,2,0)
edit the DSS Division Identifier associated with any medical center
"KRN",19,10850,1,3,0)
division.
"KRN",19,10850,25)
EN^ECXDVSNX
"KRN",19,10850,"U")
ENTER/EDIT DSS DIVISION IDENTI
"KRN",19,10851,-1)
0^49
"KRN",19,10851,0)
ECX WARD DSSDEPT^Enter/Edit DSS Ward^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10851,1,0)
^19.06^3^3^3020731^^
"KRN",19,10851,1,1,0)
This option should only be used by the DSS Site Manager to enter or
"KRN",19,10851,1,2,0)
edit the DSS Department code associated with each medical center
"KRN",19,10851,1,3,0)
ward.
"KRN",19,10851,25)
EN^ECXWRDX
"KRN",19,10851,"U")
ENTER/EDIT DSS WARD
"KRN",19,10853,-1)
0^40
"KRN",19,10853,0)
ECX DSSDEPT MGMT^DSS Department Management^^M^^^^^^^^DSS EXTRACTS
"KRN",19,10853,1,0)
^19.06^2^2^3030714^^^^
"KRN",19,10853,1,1,0)
This menu holds the set of options needed for DSS Department management
"KRN",19,10853,1,2,0)
functions.
"KRN",19,10853,10,0)
^19.01IP^2^2
"KRN",19,10853,10,1,0)
10850^1^1
"KRN",19,10853,10,1,"^")
ECX DIVISION ID
"KRN",19,10853,10,2,0)
10851^2^2
"KRN",19,10853,10,2,"^")
ECX WARD DSSDEPT
"KRN",19,10853,99)
61143,27971
"KRN",19,10853,"U")
DSS DEPARTMENT MANAGEMENT
"KRN",19,10855,-1)
0^30
"KRN",19,10855,0)
ECX PRO SOURCE AUDIT^Prosthetics (PRO) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10855,1,0)
^^2^2^3000302^^
"KRN",19,10855,1,1,0)
This option will generate an audit report of the prosthetics information
"KRN",19,10855,1,2,0)
that has been extracted.
"KRN",19,10855,10.1)
PRO Extract Audit
"KRN",19,10855,25)
EN^ECXAPRO
"KRN",19,10855,"U")
PROSTHETICS (PRO) EXTRACT AUDI
"KRN",19,11176,-1)
0^62
"KRN",19,11176,0)
ECX PRO YTD REPORT^Prosthetics (PRO) YTD HCPCS Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11176,1,0)
^19.06^11^11^3030714^^^
"KRN",19,11176,1,1,0)
This report option will list PRO extract data by HCPCS code.  Data is
"KRN",19,11176,1,2,0)
accumulated from all extract records for extracts dated within the
"KRN",19,11176,1,3,0)
beginning and end of a fiscal year.  
"KRN",19,11176,1,4,0)
 
"KRN",19,11176,1,5,0)
If the site is non-divisional, data is reported under the facility
"KRN",19,11176,1,6,0)
Station Number.
"KRN",19,11176,1,7,0)
 
"KRN",19,11176,1,8,0)
If the site is multi-divisional (for Prosthetics), data can be
"KRN",19,11176,1,9,0)
reported for any one division, or for all divisions belonging to
"KRN",19,11176,1,10,0)
the same primary station/division.  If data is from all divisions, 
"KRN",19,11176,1,11,0)
then data is reported under the Station Number of the Primary Division.
"KRN",19,11176,10.1)
PRO YTD Report
"KRN",19,11176,25)
EN^ECXCPRO
"KRN",19,11176,"U")
PROSTHETICS (PRO) YTD HCPCS RE
"KRN",19,11237,-1)
0^63
"KRN",19,11237,0)
ECX PRO LAB REPORT^Prosthetics (PRO) YTD Laboratory Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11237,1,0)
^^10^10^2990324^^^
"KRN",19,11237,1,1,0)
This report option will list PRO extract data by HCPCS code for items 
"KRN",19,11237,1,2,0)
produced within the Prosthetics laboratories of the facilty.  Data is
"KRN",19,11237,1,3,0)
accumulated from all extract records for extracts dated within the 
"KRN",19,11237,1,4,0)
beginning and end of a fiscal year.  
"KRN",19,11237,1,5,0)
  
"KRN",19,11237,1,6,0)
If the site is non-divisional, data is reported under the facility Station
"KRN",19,11237,1,7,0)
Number.
"KRN",19,11237,1,8,0)
  
"KRN",19,11237,1,9,0)
If the site is multi-divisional (for Prosthetics), data is reported for
"KRN",19,11237,1,10,0)
for all divisions belonging to the same primary station/division.
"KRN",19,11237,25)
EN^ECXLPRO
"KRN",19,11237,"U")
PROSTHETICS (PRO) YTD LABORATO
"KRN",19,11348,-1)
0^25
"KRN",19,11348,0)
ECX MTL SOURCE AUDIT^Mental Health (MTL) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11348,1,0)
^^16^16^2990603^
"KRN",19,11348,1,1,0)
This option will generate a report from the MENTAL HEALTH EXTRACT
"KRN",19,11348,1,2,0)
file (#727.812) which will allow the DSS extract manager to
"KRN",19,11348,1,3,0)
verify extract data before transmission to the Austin Automation
"KRN",19,11348,1,4,0)
Center.
"KRN",19,11348,1,5,0)
  
"KRN",19,11348,1,6,0)
The following VistA application reports should be of assistance
"KRN",19,11348,1,7,0)
in the verification process:
"KRN",19,11348,1,8,0)
  
"KRN",19,11348,1,9,0)
Report Title - USAGE STATISTICS
"KRN",19,11348,1,10,0)
Menu Option -  Usage Statistics [YSMUSE]
"KRN",19,11348,1,11,0)
   
"KRN",19,11348,1,12,0)
Report Title - Addiction Severity Index Status Report
"KRN",19,11348,1,13,0)
Menu Option - Site Report by Date [YSAS MANAGEMENT REPORT]
"KRN",19,11348,1,14,0)
  
"KRN",19,11348,1,15,0)
Be sure that the extract audit report and the external application
"KRN",19,11348,1,16,0)
report are generated for the same date or date range.
"KRN",19,11348,25)
EN^ECXAMTL
"KRN",19,11348,"U")
MENTAL HEALTH (MTL) EXTRACT AU
"KRN",19,12021,-1)
0^29
"KRN",19,12021,0)
ECX PHA SOURCE AUDIT^Pharmacy Extracts Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12021,1,0)
^19.06^7^7^3060630^^^^
"KRN",19,12021,1,1,0)
This menu option allows the user to select one of the three Pharmacy
"KRN",19,12021,1,2,0)
Extracts to generate a report of extract records with unusual volumes
"KRN",19,12021,1,3,0)
and/or Feeder Keys of all zeros.  At the beginning of each report, after
"KRN",19,12021,1,4,0)
the extract and date range has been specified, statistics will be
"KRN",19,12021,1,5,0)
displayed on the volume to allow the user to decide if further auditing is
"KRN",19,12021,1,6,0)
required by continuing with the Unusual Volume Report and/or the Zero
"KRN",19,12021,1,7,0)
Feeder Keys Report.
"KRN",19,12021,25)
EN^ECXAPHA
"KRN",19,12021,99)
58653,54105
"KRN",19,12021,"U")
PHARMACY EXTRACTS AUDIT
"KRN",19,12024,-1)
0^57
"KRN",19,12024,0)
ECX PHA FKEY^Pharmacy Extracts Incomplete Feeder Key Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12024,25)
EN^ECXDRUG1
"KRN",19,12024,"U")
PHARMACY EXTRACTS INCOMPLETE F
"KRN",19,12382,-1)
0^51
"KRN",19,12382,0)
ECX LAB RESULTS TRANS EDIT^Add/Edit Lab Results Translation Table^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,12382,25)
EN^ECXLRED
"KRN",19,12382,"U")
ADD/EDIT LAB RESULTS TRANSLATI
"KRN",19,12383,-1)
0^50
"KRN",19,12383,0)
ECX UNTRANS LAR REPORT^Lab Results Extract Untranslatable Results Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12383,25)
EN^ECXALAR
"KRN",19,12383,"U")
LAB RESULTS EXTRACT UNTRANSLAT
"KRN",19,12456,-1)
0^41
"KRN",19,12456,0)
ECX CBOC REPORT^CBOC Activity Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12456,1,0)
^19.06^6^6^3030923^^^^
"KRN",19,12456,1,1,0)
This option displays all records from the CLI Extract that have a 
"KRN",19,12456,1,2,0)
Community Based Outpatient Clinic (CBOC) status of Y (=yes).  The 
"KRN",19,12456,1,3,0)
report is grouped by Feeder Key,Division, and Clinic; it lists the P
"KRN",19,12456,1,4,0)
atient Name, SSN, and Date of Visit for each record.  Totals for 
"KRN",19,12456,1,5,0)
unique SSNs and Visits will be printed for each Clinic, Division, 
"KRN",19,12456,1,6,0)
and Feeder Key, as well as overall totals for the station.
"KRN",19,12456,25)
EN^ECXUCBOC
"KRN",19,12456,"U")
CBOC ACTIVITY REPORT
"KRN",19,12458,-1)
0^64
"KRN",19,12458,0)
ECX PRO COST^Prosthetic Extract Unusual Cost Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12458,1,0)
0
"KRN",19,12458,25)
EN^ECXUPRO
"KRN",19,12458,"U")
PROSTHETIC EXTRACT UNUSUAL COS
"KRN",19,12459,-1)
0^75
"KRN",19,12459,0)
ECX SUR VOL^Surgery Extract Unusual Volume Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12459,1,0)
^19.06^9^9^3090514^^^
"KRN",19,12459,1,1,0)
This option creates a report that lists unusual volumes that would be generated
"KRN",19,12459,1,2,0)
by the Surgery extract (SUR) as determined by a user-defined threshold value.
"KRN",19,12459,1,3,0)
It should be run prior to the generation of the actual extract to identify and
"KRN",19,12459,1,4,0)
fix, as necessary, any volumes determined to be erroneous.
"KRN",19,12459,1,5,0)

"KRN",19,12459,1,6,0)
Unusual volumes are defined as Operation Time, Patient Time, or Anesthesia Time
"KRN",19,12459,1,7,0)
fields greater than the threshold value.
"KRN",19,12459,1,8,0)

"KRN",19,12459,1,9,0)
The report is sorted by descending Volume and Case Number.
"KRN",19,12459,25)
EN^ECXUSUR
"KRN",19,12459,"U")
SURGERY EXTRACT UNUSUAL VOLUME
"KRN",19,12461,-1)
0^15
"KRN",19,12461,0)
ECX CLN STOP REP^DSS Identifier Non-Conforming Clinics Report^^R^^^^^^^y^DSS EXTRACTS
"KRN",19,12461,1,0)
^19.06^5^5^3030811^^^^
"KRN",19,12461,1,1,0)
This option synchronizes the Primary and Secondary Stop Codes found 
"KRN",19,12461,1,2,0)
in the Clinics and Stop Codes File #728.44 with the Primary and 
"KRN",19,12461,1,3,0)
Secondary Stop codes found in the Hospital Location File #44.  It 
"KRN",19,12461,1,4,0)
produces a report of the Clinics that are non-conforming to the stop 
"KRN",19,12461,1,5,0)
code restriction types.
"KRN",19,12461,10.1)
DSS Id. Non-Conform Cln Rep
"KRN",19,12461,25)
ECXSCRP
"KRN",19,12461,"U")
DSS IDENTIFIER NON-CONFORMING 
"KRN",19,12462,-1)
0^5
"KRN",19,12462,0)
ECX FISCAL YEAR EXTRACT^Fiscal Year Logic - DSS Testing Only^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,12462,1,0)
^19.06^10^10^3090506^^^
"KRN",19,12462,1,1,0)
This option should be used with caution as it allows the user to run
"KRN",19,12462,1,2,0)
any supported DSS Extract using specific fiscal year logic.  By
"KRN",19,12462,1,3,0)
running this option you may negatively impact your extract data.
"KRN",19,12462,1,4,0)
  
"KRN",19,12462,1,5,0)
DO NOT USE this option unless you are an official test site for
"KRN",19,12462,1,6,0)
the DSS Fiscal Year Conversion.
"KRN",19,12462,1,7,0)
 
"KRN",19,12462,1,8,0)
Extracts for current fiscal year data using current fiscal year logic
"KRN",19,12462,1,9,0)
will go to AAC production queue; everything else goes to the AAC test 
"KRN",19,12462,1,10,0)
queue.
"KRN",19,12462,25)
EN^ECXTREX
"KRN",19,12462,"U")
FISCAL YEAR LOGIC - DSS TESTIN
"KRN",19,12463,-1)
0^42
"KRN",19,12463,0)
ECX CPT INQUIRY^CPT Inquiry^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12463,1,0)
^19.06^2^2^3030923^^^
"KRN",19,12463,1,1,0)
This inquiry allows the user to select a CPT code, then displays the Short
"KRN",19,12463,1,2,0)
Name, Category, and Description for the selected code.
"KRN",19,12463,25)
EN^ECXUCPT
"KRN",19,12463,"U")
CPT INQUIRY
"KRN",19,12464,-1)
0^58
"KRN",19,12464,0)
ECX PHA VOL^Pharmacy Extracts Unusual Volume Report^^R^^^^^^^^
"KRN",19,12464,25)
EN^ECXAPHA
"KRN",19,12464,99)
59457,58244
"KRN",19,12464,"U")
PHARMACY EXTRACTS UNUSUAL VOLU
"KRN",19,12503,-1)
0^76
"KRN",19,12503,0)
ECX SUR VOL REPORT^SUR Volume Report^^R^^^^^^^^DSS EXTRACTS^^1^1
"KRN",19,12503,1,0)
^19.06^3^3^3050510^^^^
"KRN",19,12503,1,1,0)
This option creates a report that lists volumes for all surgical 
"KRN",19,12503,1,2,0)
cases that would be generated by the Surgery extract (SUR) for
"KRN",19,12503,1,3,0)
transmission to AAC for review.
"KRN",19,12503,15)
K FLAG
"KRN",19,12503,20)
S FLAG=1
"KRN",19,12503,25)
EN^ECXUSUR
"KRN",19,12503,"U")
SUR VOLUME REPORT
"KRN",19,12504,-1)
0^65
"KRN",19,12504,0)
ECX PRO COST REPORT^Cost by PSAS HCPC Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12504,1,0)
^19.06^2^2^3041105^^
"KRN",19,12504,1,1,0)
This option generates a report for prosthetics and it includes all
"KRN",19,12504,1,2,0)
expenditures for a given time frame.
"KRN",19,12504,25)
EN^ECXPROCT
"KRN",19,12504,"U")
COST BY PSAS HCPC REPORT
"KRN",19,13054,-1)
0^2
"KRN",19,13054,0)
ECX LBB SOURCE AUDIT^Laboratory Blood Bank (LBB) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,13054,1,0)
^19.06^5^5^3090504^^^^
"KRN",19,13054,1,1,0)
This report is to provide DSS on-site support with a list of unmatched 
"KRN",19,13054,1,2,0)
blood products.  The report will contain those records that do not have a 
"KRN",19,13054,1,3,0)
value in either the DSS Product Dept or DSS IP # fields.  The result 
"KRN",19,13054,1,4,0)
report will enable the DSS on-site support team to correct the unmatched 
"KRN",19,13054,1,5,0)
blood products prior to running the LBB Extract.
"KRN",19,13054,20)

"KRN",19,13054,25)
ECXPLBB
"KRN",19,13054,"U")
LABORATORY BLOOD BANK (LBB) EX
"KRN",19,13243,-1)
0^60
"KRN",19,13243,0)
ECX PHA VOL EDIT LOG^Pharmacy Volume Edit Log^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13243,1,0)
^19.06^3^3^3060721^^^
"KRN",19,13243,1,1,0)
This option will allow authorized users to view edit changes made to the 
"KRN",19,13243,1,2,0)
Pharmacy extracts (IVP, PRE and UDP) through the Pharmacy Edit Option 
"KRN",19,13243,1,3,0)
[ECX PHA VOL EDIT].
"KRN",19,13243,25)
EN^ECXPHAU
"KRN",19,13243,"U")
PHARMACY VOLUME EDIT LOG
"KRN",19,13244,-1)
0^59
"KRN",19,13244,0)
ECX PHA VOL EDIT^Pharmacy Volume Edit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13244,1,0)
^^5^5^3090514^
"KRN",19,13244,1,1,0)
This option will allow authorized users to edit the Pharmacy extracts
"KRN",19,13244,1,2,0)
(IVP, PRE or UDP). Corrections will be allowed to the Quantity field 
"KRN",19,13244,1,3,0)
for the IVP, PRE and UDP extracts. Additionally, correction will be 
"KRN",19,13244,1,4,0)
allowed to the Unit of Issue field for the PRE extract and the Total 
"KRN",19,13244,1,5,0)
Doses per Day for the IVP extract.
"KRN",19,13244,25)
EN^ECXPHVE
"KRN",19,13244,"U")
PHARMACY VOLUME EDIT
"KRN",19,13245,-1)
2^6
"KRN",19,13245,0)
ECX PHA EDIT^Pharmacy Edit and Edit Log^^M^11721^ECXPVE^^^^^^513
"KRN",19,13245,10,0)
^19.01IP^2^2
"KRN",19,13245,10,1,0)
13244^1
"KRN",19,13245,10,1,"^")
ECX PHA VOL EDIT
"KRN",19,13245,10,2,0)
13243^2
"KRN",19,13245,10,2,"^")
ECX PHA VOL EDIT LOG
"KRN",19,13245,"U")
PHARMACY EDIT AND EDIT LOG
"KRN",19,13246,-1)
0^61
"KRN",19,13246,0)
ECX PHA UDP/IVP SOURCE AUDIT^UDP/IVP Source Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13246,1,0)
^^2^2^3060628^
"KRN",19,13246,1,1,0)
This menu option allows DSS site teams to periodically check the 
"KRN",19,13246,1,2,0)
availability of UDP & IVP source data to avoid data from being lost.
"KRN",19,13246,25)
EN^ECXPHAA
"KRN",19,13246,"U")
UDP/IVP SOURCE AUDIT REPORT
"KRN",19,13255,-1)
0^53
"KRN",19,13255,0)
ECX NUT PRO EDIT^Enter/Edit Nutrition Product Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13255,1,0)
^19.06^3^3^3060612^^^^
"KRN",19,13255,1,1,0)
This option allows DSS site teams to assign standardized DSS Product 
"KRN",19,13255,1,2,0)
values to each Diet, Supplemental Feeding, Tube Feeding and Standing 
"KRN",19,13255,1,3,0)
Orders.
"KRN",19,13255,25)
EN^ECXNUTPE
"KRN",19,13255,"U")
ENTER/EDIT NUTRITION PRODUCT W
"KRN",19,13256,-1)
0^54
"KRN",19,13256,0)
ECX NUT PRO PRINT^Print Nutrition Product Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13256,1,0)
^^8^8^3060612^
"KRN",19,13256,1,1,0)
This option allows site teams to assign standardized DSS Product (Feeder 
"KRN",19,13256,1,2,0)
Key) values to each Diet, Supplemental Feeding, Tube Feeding and Standing
"KRN",19,13256,1,3,0)
Order. This worksheet is divided into four categories:
"KRN",19,13256,1,4,0)
 
"KRN",19,13256,1,5,0)
Production Diets
"KRN",19,13256,1,6,0)
Supplemental Feedings
"KRN",19,13256,1,7,0)
Tube Feedings
"KRN",19,13256,1,8,0)
Standing Orders.
"KRN",19,13256,25)
EN^ECXNUTPP
"KRN",19,13256,"U")
PRINT NUTRITION PRODUCT WORKSH
"KRN",19,13257,-1)
0^55
"KRN",19,13257,0)
ECX NUT DIV EDIT^Enter/Edit Nutrition Division Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13257,1,0)
^19.06^3^3^3060612^^^^
"KRN",19,13257,1,1,0)
This option allows DSS site teams to assign standardized Division values 
"KRN",19,13257,1,2,0)
of the Institution file (#4) to all locally named Production and Delivery 
"KRN",19,13257,1,3,0)
locations.
"KRN",19,13257,25)
EN^ECXNUTDE
"KRN",19,13257,"U")
ENTER/EDIT NUTRITION DIVISION 
"KRN",19,13258,-1)
0^56
"KRN",19,13258,0)
ECX NUT DIV PRINT^Print Nutrition Division Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13258,1,0)
^^3^3^3060612^
"KRN",19,13258,1,1,0)
This option allows DSS site teams to print a listing of all production and
"KRN",19,13258,1,2,0)
delivery location in the nutrition files (#119.71) and (#119.72) and there
"KRN",19,13258,1,3,0)
standardized associated division from the institution file (#4).
"KRN",19,13258,25)
EN^ECXNUTDP
"KRN",19,13258,"U")
PRINT NUTRITION DIVISION WORKS
"KRN",19,13259,-1)
0^43
"KRN",19,13259,0)
ECX NUTRITION WORKSHEETS^Nutrition Worksheets^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13259,10,0)
^19.01IP^4^4
"KRN",19,13259,10,1,0)
13255^3^3
"KRN",19,13259,10,1,"^")
ECX NUT PRO EDIT
"KRN",19,13259,10,2,0)
13256^4^4
"KRN",19,13259,10,2,"^")
ECX NUT PRO PRINT
"KRN",19,13259,10,3,0)
13257^1^1
"KRN",19,13259,10,3,"^")
ECX NUT DIV EDIT
"KRN",19,13259,10,4,0)
13258^2^2
"KRN",19,13259,10,4,"^")
ECX NUT DIV PRINT
"KRN",19,13259,99)
61143,27971
"KRN",19,13259,"U")
NUTRITION WORKSHEETS
"KRN",19,13444,-1)
0^27
"KRN",19,13444,0)
ECX NUT SOURCE AUDIT^Nutrition (NUT) Extract Audit^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,13444,1,0)
^19.06^2^2^3070525^^
"KRN",19,13444,1,1,0)
The Nutrition (NUT) Extract audit report option is used to validate the 
"KRN",19,13444,1,2,0)
nutrition meal records from the NUTRITION EXTRACT file (#727.832).
"KRN",19,13444,20)

"KRN",19,13444,25)
EN^ECXANUT
"KRN",19,13444,"U")
NUTRITION (NUT) EXTRACT AUDIT
"KRN",19,13453,-1)
0^23
"KRN",19,13453,0)
ECX LAR SOURCE AUDIT^Laboratory Results (LAR) Extract Audit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13453,1,0)
^19.06^3^3^3070525^^^
"KRN",19,13453,1,1,0)
The Laboratory Results (LAR) Extract audit report option is used to
"KRN",19,13453,1,2,0)
validate the laboratory results records from the LAB RESULTS EXTRACT
"KRN",19,13453,1,3,0)
file (#727.824).
"KRN",19,13453,25)
EN^ECXLARA
"KRN",19,13453,"U")
LABORATORY RESULTS (LAR) EXTRA
"KRN",19,13455,-1)
0^44
"KRN",19,13455,0)
ECXLAB MAINTENACE^Laboratory^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13455,10,0)
^19.01IP^3^3
"KRN",19,13455,10,1,0)
12383^2
"KRN",19,13455,10,1,"^")
ECX UNTRANS LAR REPORT
"KRN",19,13455,10,2,0)
12382^1
"KRN",19,13455,10,2,"^")
ECX LAB RESULTS TRANS EDIT
"KRN",19,13455,10,3,0)
13579^3
"KRN",19,13455,10,3,"^")
ECX LAR LOINC RPT
"KRN",19,13455,99)
61332,48274
"KRN",19,13455,"U")
LABORATORY
"KRN",19,13456,-1)
0^45
"KRN",19,13456,0)
ECX PHARMACY MAINTENANCE^Pharmacy^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13456,10,0)
^19.01IP^4^4
"KRN",19,13456,10,1,0)
12024^2
"KRN",19,13456,10,1,"^")
ECX PHA FKEY
"KRN",19,13456,10,2,0)
12464^3
"KRN",19,13456,10,2,"^")
ECX PHA VOL
"KRN",19,13456,10,3,0)
13245^1
"KRN",19,13456,10,3,"^")
ECX PHA EDIT
"KRN",19,13456,10,4,0)
13246^4
"KRN",19,13456,10,4,"^")
ECX PHA UDP/IVP SOURCE AUDIT
"KRN",19,13456,99)
61556,49250
"KRN",19,13456,"U")
PHARMACY
"KRN",19,13457,-1)
0^46
"KRN",19,13457,0)
ECX PROSTHETICS MAINTENANCE^Prosthetics^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13457,10,0)
^19.01IP^4^4
"KRN",19,13457,10,1,0)
11176^3
"KRN",19,13457,10,1,"^")
ECX PRO YTD REPORT
"KRN",19,13457,10,2,0)
11237^4
"KRN",19,13457,10,2,"^")
ECX PRO LAB REPORT
"KRN",19,13457,10,3,0)
12458^2
"KRN",19,13457,10,3,"^")
ECX PRO COST
"KRN",19,13457,10,4,0)
12504^1
"KRN",19,13457,10,4,"^")
ECX PRO COST REPORT
"KRN",19,13457,99)
61143,27971
"KRN",19,13457,"U")
PROSTHETICS
"KRN",19,13458,-1)
0^47
"KRN",19,13458,0)
ECX SURGERY MAINTENANCE^Surgery^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13458,10,0)
^19.01IP^2^2
"KRN",19,13458,10,1,0)
12459^2
"KRN",19,13458,10,1,"^")
ECX SUR VOL
"KRN",19,13458,10,2,0)
12503^1
"KRN",19,13458,10,2,"^")
ECX SUR VOL REPORT
"KRN",19,13458,99)
61143,27971
"KRN",19,13458,"U")
SURGERY
"KRN",19,13579,-1)
0^52
"KRN",19,13579,0)
ECX LAR LOINC RPT^Lab Results DSS LOINC Code Report^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,13579,1,0)
^^3^3^3080702^
"KRN",19,13579,1,1,0)
This report lists the DSS LAR Test numbers from the DSS LOINC CODE 
"KRN",19,13579,1,2,0)
(#727.29) and the sites WKLD CODE (#64) file associated laboratory test 
"KRN",19,13579,1,3,0)
names and DSS LOINC codes.
"KRN",19,13579,20)

"KRN",19,13579,25)
EN^ECXLARPT
"KRN",19,13579,"U")
LAB RESULTS DSS LOINC CODE REP
"KRN",19,13755,-1)
0^3
"KRN",19,13755,0)
ECX LBB SOURCE AUDIT REPORTS^Laboratory Blood Bank (LBB) Audit Reports^^M^^^^^^^^
"KRN",19,13755,1,0)
^19.06^4^4^3090727^^
"KRN",19,13755,1,1,0)
Comparative report:  one half of the report displays what is in LBB 
"KRN",19,13755,1,2,0)
extract file (#727.829), where the data reflects static information; the 
"KRN",19,13755,1,3,0)
other half of the report pulls current directly from the source (either 
"KRN",19,13755,1,4,0)
the Lab Date file, #63, or the VBECs Blood Bank file, #6002.03).
"KRN",19,13755,10,0)
^19.01IP^2^2
"KRN",19,13755,10,1,0)
13054^2^2
"KRN",19,13755,10,1,"^")
ECX LBB SOURCE AUDIT
"KRN",19,13755,10,2,0)
13756^1^1
"KRN",19,13755,10,2,"^")
ECX LBB SOURCE AUDIT COMPAR
"KRN",19,13755,99)
61569,50351
"KRN",19,13755,"U")
LABORATORY BLOOD BANK (LBB) AU
"KRN",19,13756,-1)
0^4
"KRN",19,13756,0)
ECX LBB SOURCE AUDIT COMPAR^Laboratory Blood Bank (LBB) Comparative Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13756,25)
ECXLBBC
"KRN",19,13756,"U")
LABORATORY BLOOD BANK (LBB) CO
"KRN",19,13757,-1)
0^7
"KRN",19,13757,0)
ECX ECS VOL^Unusual Volume Report for Event Capture^^R^^^^^^^^
"KRN",19,13757,1,0)
^^8^8^3091020^
"KRN",19,13757,1,1,0)
This report prints a listing of unusual volumes that would be
"KRN",19,13757,1,2,0)
generated by the Event Capture extract (ECS) as determined by
"KRN",19,13757,1,3,0)
a user-defined threshold value. It should be run prior to
"KRN",19,13757,1,4,0)
the generation of an actual extract to identify and fix, as
"KRN",19,13757,1,5,0)
necessary, any volumes determined to be erroneous.
"KRN",19,13757,1,6,0)
  
"KRN",19,13757,1,7,0)
Unusual volumes are those in excess of the threshold value
"KRN",19,13757,1,8,0)
defined by the user. The threshold value is 20 by default.
"KRN",19,13757,25)
EN^ECXUEC
"KRN",19,13757,"U")
UNUSUAL VOLUME REPORT FOR EVEN
"KRN",19,13790,-1)
0^16
"KRN",19,13790,0)
ECX STOP CODE VALIDITY^DSS Clinic & Stop Codes Validity Report^^R^^^^^^^^DSS EXTRACTS^^1
"KRN",19,13790,1,0)
^^3^3^3090520^
"KRN",19,13790,1,1,0)
This report will provide a list of current clinic in the Clinics and Stop 
"KRN",19,13790,1,2,0)
Code file (#728.44) in use with stop codes that do not conform to the 
"KRN",19,13790,1,3,0)
Business Rules for Valid Stop Codes.
"KRN",19,13790,20)
D EN^ECXSCX3
"KRN",19,13790,99)
61523,49616
"KRN",19,13790,"U")
DSS CLINIC & STOP CODES VALIDI
"KRN",19,13791,-1)
0^34
"KRN",19,13791,0)
ECX ECS MAINTENANCE^Event Capture^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13791,10,0)
^19.01IP^1^1
"KRN",19,13791,10,1,0)
13757^1
"KRN",19,13791,10,1,"^")
ECX ECS VOL
"KRN",19,13791,99)
61578,37218
"KRN",19,13791,"U")
EVENT CAPTURE
"KRN",19.1,626,-1)
0^1
"KRN",19.1,626,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,626,1,0)
^19.11^8^8^3090506^^
"KRN",19.1,626,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,626,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,626,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,626,1,4,0)
conversion.
"KRN",19.1,626,1,5,0)
  
"KRN",19.1,626,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,626,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,626,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
120^3091103^1000000011
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^3091103
"PKG",513,22,1,"PAH",1,1,1,0)
FY10 DSS EXTRACT CHANGES
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
34
"RTN","ECX3P120")
0^^B10071964^n/a
"RTN","ECX3P120",1,0)
ECX3P120 ;ALB/JAP - DSS FY2010 Conversion, Post-init ; 6/18/09 9:51am
"RTN","ECX3P120",2,0)
 ;;3.0;DSS EXTRACTS;**120**;Dec 22, 1997;Build 43
"RTN","ECX3P120",3,0)
 ;
"RTN","ECX3P120",4,0)
 ;****************************************
"RTN","ECX3P120",5,0)
 ;Every year: Populate FY Year's version
"RTN","ECX3P120",6,0)
 ; TESTON^ECXTREX(XPDNM,"FY2010")
"RTN","ECX3P120",7,0)
 ;****************************************
"RTN","ECX3P120",8,0)
 ;
"RTN","ECX3P120",9,0)
POST ;post-init
"RTN","ECX3P120",10,0)
 D TEST,OPT
"RTN","ECX3P120",11,0)
 N ECXI
"RTN","ECX3P120",12,0)
 ;add observation treating specialty
"RTN","ECX3P120",13,0)
TS F ECXI=1:1 S ECXOTS=$P($T(OTSP+ECXI),";;",2) Q:ECXOTS="QUIT"  D
"RTN","ECX3P120",14,0)
 .D OTS
"RTN","ECX3P120",15,0)
 Q
"RTN","ECX3P120",16,0)
 ;
"RTN","ECX3P120",17,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P120",18,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P120",19,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P120",20,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P120",21,0)
 D TESTON^ECXTREX(XPDNM,"FY2010")
"RTN","ECX3P120",22,0)
 ;D MES^XPDUTL(" ")
"RTN","ECX3P120",23,0)
 ;D MES^XPDUTL("Remember to assign the ECX DSS TEST key to qualified users.")
"RTN","ECX3P120",24,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P120",25,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P120",26,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option;
"RTN","ECX3P120",27,0)
 ;
"RTN","ECX3P120",28,0)
 ;initialize new field #  in file #728.44;
"RTN","ECX3P120",29,0)
 N EC,ECD,X
"RTN","ECX3P120",30,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D
"RTN","ECX3P120",31,0)
 .I $D(^SC(EC,0)) S ECD=^(0) I $P(ECD,U,3)="C" D
"RTN","ECX3P120",32,0)
 ..S X=$P(ECD,U,17) I X'="" I $D(^ECX(728.44,EC,0)) S $P(^ECX(728.44,EC,0),U,12)=X
"RTN","ECX3P120",33,0)
 Q
"RTN","ECX3P120",34,0)
OPT ;delete ECX LBB SOURCE AUDIT from ECX SOURCE AUDITS
"RTN","ECX3P120",35,0)
 ;
"RTN","ECX3P120",36,0)
 D MES^XPDUTL("...Cleaning up ECX SOURCE AUDITS menu")
"RTN","ECX3P120",37,0)
 N DIC,Y
"RTN","ECX3P120",38,0)
 S DIC="^DIC(19,",DIC(0)="MBX",X="ECX SOURCE AUDITS" D ^DIC Q:+Y<0
"RTN","ECX3P120",39,0)
 S DA(1)=+Y
"RTN","ECX3P120",40,0)
 S DIC="^DIC(19,"_DA(1)_",10,",DIC(0)="MBX",X="ECX LBB SOURCE AUDIT" D ^DIC Q:+Y<0
"RTN","ECX3P120",41,0)
 S DA=+Y
"RTN","ECX3P120",42,0)
 S DIK="^DIC(19,"_DA(1)_",10," D ^DIK
"RTN","ECX3P120",43,0)
 Q
"RTN","ECX3P120",44,0)
OTS ;Add Observation Treating Specialty to DSS TREATING SPECIALTY TRANSLATION File (#727.831)
"RTN","ECX3P120",45,0)
 D BMES^XPDUTL(">>>"_$P(ECXOTS,U,2)_">>>")
"RTN","ECX3P120",46,0)
 N DA,ECXFILE,DIC,DIE,DINUM,DLAYGO,DR,X,Y
"RTN","ECX3P120",47,0)
 S ECXERR=0
"RTN","ECX3P120",48,0)
 S DIC="^ECX(727.831,"
"RTN","ECX3P120",49,0)
 S DIC(0)="LX"
"RTN","ECX3P120",50,0)
 S DINUM=$P(ECXOTS,U)
"RTN","ECX3P120",51,0)
 S X=$P(ECXOTS,U,2)
"RTN","ECX3P120",52,0)
 S DLAYGO=727.831
"RTN","ECX3P120",53,0)
 D ^DIC
"RTN","ECX3P120",54,0)
 S ECXIFN=Y
"RTN","ECX3P120",55,0)
 I +ECXIFN=-1 D  Q
"RTN","ECX3P120",56,0)
 .D MES^XPDUTL("     Entry not added to DSS TREATING SPECIALTY TRANSLATION File (#727.831).  No further updating will occur.")
"RTN","ECX3P120",57,0)
 .D MES^XPDUTL("     Please contact Customer Service for assistance.")
"RTN","ECX3P120",58,0)
 .Q
"RTN","ECX3P120",59,0)
 I $P(ECXIFN,U,3)'=1&(+ECXIFN'=$P(ECXOTS,U)) D  Q
"RTN","ECX3P120",60,0)
 .D MES^XPDUTL("     Entry exists in DSS TREATING SPECIALTY TRANSLATION File (#727.831), but with a different Treating Specialty.")
"RTN","ECX3P120",61,0)
 .D MES^XPDUTL("     No further updating will occur.  Please review entry.")
"RTN","ECX3P120",62,0)
 .S ECXERR=1
"RTN","ECX3P120",63,0)
 .Q 
"RTN","ECX3P120",64,0)
 D MES^XPDUTL("     Entry "_$S($P(ECXIFN,U,3)=1:"added to",1:"exists in")_" DSS TREATING SPECIALTY TRANSLATION File (#727.831).")
"RTN","ECX3P120",65,0)
 D MES^XPDUTL("     Updating DSS TREATING SPECIALTY TRANSLATION File fields.")
"RTN","ECX3P120",66,0)
 S DIE=DIC
"RTN","ECX3P120",67,0)
 S DR="4///"_$P(ECXOTS,U,3)_";5///"_$P(ECXOTS,U,4)_";6///"_$P(ECXOTS,U,5)
"RTN","ECX3P120",68,0)
 S DA=+ECXIFN
"RTN","ECX3P120",69,0)
 D ^DIE
"RTN","ECX3P120",70,0)
 Q
"RTN","ECX3P120",71,0)
OTSP ;Treating Specialty #^Treating Specialty Name^Observation Pat Indicator^Inpat Outpat Code^Observation Stop Code
"RTN","ECX3P120",72,0)
 ;;108^ED OBSERVATION^Y^O^297
"RTN","ECX3P120",73,0)
 ;;QUIT
"RTN","ECX3P120",74,0)
 Q
"RTN","ECXADM")
0^3^B44017084^B41911607
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; 10/15/07 12:14pm
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120**;Dec 22, 1997;Build 43
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 S QFLG=0
"RTN","ECXADM",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",11,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",12,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",13,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",14,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",15,0)
 Q
"RTN","ECXADM",16,0)
 ;
"RTN","ECXADM",17,0)
GET ;gather extract data
"RTN","ECXADM",18,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT
"RTN","ECXADM",19,0)
 ;patient demographics
"RTN","ECXADM",20,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",21,0)
 Q:ECXERR
"RTN","ECXADM",22,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",23,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",24,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",25,0)
 ;admission data
"RTN","ECXADM",26,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",27,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",28,0)
 S (ECDRG,ECDIA,ECXSADM,ECXAOT)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",29,0)
 ;get encounter classification
"RTN","ECXADM",30,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC)="",ECXVISIT=$P(EC,U,27)
"RTN","ECXADM",31,0)
 I ECXVISIT'="" D
"RTN","ECXADM",32,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",33,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",34,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",35,0)
 .S ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXADM",36,0)
 ;use movement record date & time
"RTN","ECXADM",37,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",38,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",39,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",40,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",41,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",42,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",43,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",44,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",45,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",46,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",47,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",48,0)
 N ECXUSRTN
"RTN","ECXADM",49,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",50,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",51,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",52,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",53,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",54,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",55,0)
 ;
"RTN","ECXADM",56,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",57,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",58,0)
 ;
"RTN","ECXADM",59,0)
 ;- Patient Type
"RTN","ECXADM",60,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",61,0)
 ;
"RTN","ECXADM",62,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",63,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",64,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",65,0)
 Q
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",68,0)
 N OK,X
"RTN","ECXADM",69,0)
 K ECXPAT
"RTN","ECXADM",70,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",71,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",72,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",73,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",74,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",75,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",76,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",77,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",78,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",79,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",80,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",81,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",82,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",83,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",84,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",85,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",86,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",87,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",88,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",89,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",90,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",91,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",92,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",93,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",94,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",95,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",96,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",97,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",98,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",99,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",100,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",101,0)
 ;
"RTN","ECXADM",102,0)
 ;-OEF/OIF Data
"RTN","ECXADM",103,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",104,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",105,0)
 ;
"RTN","ECXADM",106,0)
 ;- Agent Orange location
"RTN","ECXADM",107,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",108,0)
 ;
"RTN","ECXADM",109,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",110,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",111,0)
 ; - Race and Ethnicity
"RTN","ECXADM",112,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",113,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",114,0)
 ;
"RTN","ECXADM",115,0)
 ;get primary care data
"RTN","ECXADM",116,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",117,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",118,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",119,0)
 ;get combat veteran data
"RTN","ECXADM",120,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",121,0)
 ;get national patient record flag if exist
"RTN","ECXADM",122,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",123,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",124,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",125,0)
 Q
"RTN","ECXADM",126,0)
 ;
"RTN","ECXADM",127,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",128,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",129,0)
 N EC,EC1,ECX
"RTN","ECXADM",130,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",131,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",132,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",133,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",134,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",135,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",136,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",137,0)
 Q
"RTN","ECXADM",138,0)
 ;
"RTN","ECXADM",139,0)
FILE ;file the extract record
"RTN","ECXADM",140,0)
 ;node0
"RTN","ECXADM",141,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",142,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",143,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",144,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",145,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^
"RTN","ECXADM",146,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",147,0)
 ;node1
"RTN","ECXADM",148,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",149,0)
 ;admission elig^mst status^^sharing payor^
"RTN","ECXADM",150,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",151,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",152,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^enrollment
"RTN","ECXADM",153,0)
 ;priority^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",154,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",155,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",156,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",157,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",158,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",159,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",160,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",161,0)
 ;encoun ECXIR^ OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",162,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",163,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",164,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY 
"RTN","ECXADM",165,0)
 ;
"RTN","ECXADM",166,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",167,0)
 ;
"RTN","ECXADM",168,0)
 N ECXDATA
"RTN","ECXADM",169,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",170,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",171,0)
 ;
"RTN","ECXADM",172,0)
 N DA,DIK
"RTN","ECXADM",173,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",174,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",175,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",176,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",177,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",178,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",179,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",180,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",181,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",182,0)
 S ECODE1=ECODE1_ECXMST_U_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",183,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",184,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",185,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",186,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",187,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",188,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",189,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",190,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",191,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",192,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",193,0)
 S ECRN=ECRN+1
"RTN","ECXADM",194,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",195,0)
 Q
"RTN","ECXADM",196,0)
 ;
"RTN","ECXADM",197,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",198,0)
 S ECHEAD="ADM"
"RTN","ECXADM",199,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",200,0)
 Q
"RTN","ECXADM",201,0)
 ;
"RTN","ECXADM",202,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",203,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",204,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",205,0)
 ;
"RTN","ECXADM",206,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",207,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",208,0)
 ;
"RTN","ECXEC")
0^20^B49835024^B42363608
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ; 10/2/07 2:33pm
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120**;Dec 22, 1997;Build 43
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI
"RTN","ECXEC",10,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",13,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",14,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",15,0)
 Q
"RTN","ECXEC",16,0)
 ;
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",19,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",20,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",21,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",22,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",26,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",27,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",28,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",29,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",30,0)
 S (CNT,I)=0
"RTN","ECXEC",31,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",32,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",33,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",34,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",35,0)
 ;set to send data to pce
"RTN","ECXEC",36,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",37,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",38,0)
 ;from the clinic stop codes
"RTN","ECXEC",39,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",40,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",41,0)
 .D:+ECAC
"RTN","ECXEC",42,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",43,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",44,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",45,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",46,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",47,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",48,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",49,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",50,0)
 ;from the dss unit
"RTN","ECXEC",51,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",52,0)
 .I +ECUSTOP D
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",55,0)
 .I 'ECUSTOP D
"RTN","ECXEC",56,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",58,0)
 I ECXLOGIC>2003 I "^18^23^24^36^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",59,0)
 S ECXDIV=""
"RTN","ECXEC",60,0)
 ;
"RTN","ECXEC",61,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",62,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",63,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",64,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXEC",65,0)
 S (ECU1,ECU2,ECU3)=""
"RTN","ECXEC",66,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",67,0)
 F I=1:1:3 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",68,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",69,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",70,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",71,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",72,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",73,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",74,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",75,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",76,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",77,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",78,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",79,0)
 D:ECP[";"
"RTN","ECXEC",80,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",81,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",82,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",83,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",84,0)
 S ECXCMOD=""
"RTN","ECXEC",85,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",86,0)
 .S MOD=0,M=""
"RTN","ECXEC",87,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",88,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",89,0)
 .K MOD,M
"RTN","ECXEC",90,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",91,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",92,0)
 ;
"RTN","ECXEC",93,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",94,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",95,0)
 ;
"RTN","ECXEC",96,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",97,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",98,0)
 ;
"RTN","ECXEC",99,0)
 ;- encounter classification
"RTN","ECXEC",100,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",101,0)
 I ECXVISIT'="" D
"RTN","ECXEC",102,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",103,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXEC",104,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",105,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",106,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",107,0)
 ;
"RTN","ECXEC",108,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",109,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",110,0)
 ;
"RTN","ECXEC",111,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",112,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",113,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",114,0)
 Q
"RTN","ECXEC",115,0)
 ;
"RTN","ECXEC",116,0)
FILE ;file record in #727.815
"RTN","ECXEC",117,0)
 ;node0
"RTN","ECXEC",118,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",119,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",120,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",121,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",122,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",123,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",124,0)
 ;^pce cpt code (ECXCPT)^primary icd-9 code ECXICD9^secondary icd-9
"RTN","ECXEC",125,0)
 ;ECXICD91^secondary icd-9 ECXICD92^secondary icd-9 ECXICD93^secondary 
"RTN","ECXEC",126,0)
 ;icd-9 ECXICD94^agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",127,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",128,0)
 ;ECPCE7^^dss identifier ECDSS^dss dept
"RTN","ECXEC",129,0)
 ;node1
"RTN","ECXEC",130,0)
 ;mpi ECXMPI^dss dept ECXDSSD^PLACEHOLDER
"RTN","ECXEC",131,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",132,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",133,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",134,0)
 ;placeholder^
"RTN","ECXEC",135,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",136,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",137,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",138,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",139,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",140,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",141,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",142,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",143,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",144,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",145,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date
"RTN","ECXEC",146,0)
 ;ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",147,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",148,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",149,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",150,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",151,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI
"RTN","ECXEC",152,0)
 ;
"RTN","ECXEC",153,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",154,0)
 N ECXDATA
"RTN","ECXEC",155,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",156,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",157,0)
 ;done
"RTN","ECXEC",158,0)
 N DA,DIK
"RTN","ECXEC",159,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",160,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",161,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",162,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",163,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",164,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",165,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",166,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",167,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",168,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",169,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",170,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",171,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",172,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",173,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",174,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",175,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",176,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",177,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",178,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",179,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",180,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXEC",181,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",182,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",183,0)
 Q
"RTN","ECXEC",184,0)
 ;
"RTN","ECXEC",185,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",186,0)
 N OUT
"RTN","ECXEC",187,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",188,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",189,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",190,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",191,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",192,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",193,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",194,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",195,0)
 I OUT S ECFILE=""
"RTN","ECXEC",196,0)
 Q
"RTN","ECXEC",197,0)
 ;
"RTN","ECXEC",198,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",199,0)
 N ECXQQ
"RTN","ECXEC",200,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXKILL1")
0^5^B7082343^B6954712
"RTN","ECXKILL1",1,0)
ECXKILL1 ;ALB/ESD Kill Local DSS Variables (continued) ; 8/28/02 2:07pm
"RTN","ECXKILL1",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,89,120**;Dec 22, 1997;Build 43
"RTN","ECXKILL1",3,0)
 ;
"RTN","ECXKILL1",4,0)
 K ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD
"RTN","ECXKILL1",5,0)
 K ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL1",6,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDF
"RTN","ECXKILL1",7,0)
 K OPC,P,P1,P11,P2,P3,POP,Q,RD,RESP,QFLG
"RTN","ECXKILL1",8,0)
 K SC,SRDA,SRNM,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,W,X,X1,X2,XMDUZ
"RTN","ECXKILL1",9,0)
 K XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB
"RTN","ECXKILL1",10,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","ECXKILL1",11,0)
 K ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER
"RTN","ECXKILL1",12,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM
"RTN","ECXKILL1",13,0)
 K ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC,ECX2TME
"RTN","ECXKILL1",14,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA,ECXINST
"RTN","ECXKILL1",15,0)
 K ECXATT,ECXATTL,ECXATTN,ECXLOS,ECXLOSA,ECXLOSP,ECXPRV,ECXPRVL,ECXPRVN
"RTN","ECXKILL1",16,0)
 K ECXTRT,ECXTRTL,ECXTRTN,ECXSPC,ECXSPCL,ECXSPCN,ECCSC,ECXSC,ECXP1
"RTN","ECXKILL1",17,0)
 K ECXP2,ECXP3,ECXDSSI,ECXDSSD,ECXYM,ECXDIV,ECXDAY,ECXSSN,ECXDATE,ECXPNM
"RTN","ECXKILL1",18,0)
 K ECXDFN,ECXA,ECPTNPI,ECCLAS,ECCLAS2,ECASPR,ECASNPI,ECSRNPI,ECATNPI
"RTN","ECXKILL1",19,0)
 K ECSANPI,ECXCPT,ECXCMOD,ECXFAC,ECXMN,ECXTS,ECXENEL,ECXSAI,ECXPAYOR
"RTN","ECXKILL1",20,0)
 K ECXAST,ECXEST,ECXRST,ECXMST,ECXMIL,ECXPST,ECXPLOC,ECXPOS,ECXSEX,ECXDOB
"RTN","ECXKILL1",21,0)
 K ECXRELG,ECXEMP,ECXHI,ECXSTATE,ECXCNTY,ECXZIP,ECXMAR,ECXRACE,ECXVET
"RTN","ECXKILL1",22,0)
 K ECXVNS,ECXELIG,ECXENRL,ECXPRNPI,ECXPRCLS,ECXWPRV,ECXW,ECXCNT,ECXCOST
"RTN","ECXKILL1",23,0)
 K ECXADM,ECXPROV,ECXPROVP,ECXPROVN,ECXBILST,ECU1A,ECU2A,ECU3A,ECU1NPI
"RTN","ECXKILL1",24,0)
 K ECU2NPI,ECU3NPI,ECDENNPI,ECXWRD,ECXWTO,ECXAO,ECXIR,ECXCLIN,ECXICD9
"RTN","ECXKILL1",25,0)
 K ECXIEN,ECXKEY,ECXMPI,ECXSTOP,ECXSVC,ECXOBS,ECXADMDT,ECXAOL,ECXCEDT
"RTN","ECXKILL1",26,0)
 K ECXCIEN,ECXCNH,ECXCSDT,ECXCTYP,ECXENC,ECXOBS,ECXODIV
"RTN","ECXKILL1",27,0)
 K ECXORDDT,ECXORDPH,ECXORDPR,ECXORDST,ECXDAPR,ECXDPCT,ECXDPR,ECXRPHY
"RTN","ECXKILL1",28,0)
 K ECXPDIV,ECXATYP,ECXPVST,ECXSADM,ECXMTST,ECXQ,ECXHNCI,ECXETH,ECXRC1
"RTN","ECXKILL1",29,0)
 K ECXPHI,ECXCNHU,ECXCAT,ECXPRIOR,ECXOPNPI,ECXAOT,ECXCNTRY
"RTN","ECXKILL1",30,0)
 K ECU,ECU1,ECU2,ECU3,ECAC1,ECAC1S,ECAC2,ECAC2S,ECDSS,ECUPCE,ECUSTOP
"RTN","ECXKILL1",31,0)
 K ECXCVE,ECXCVEDT,ECXCVENC,ECXDOM,ECXDSSP,ECXEUSTA,ECXINP,ECXIO,ICD9
"RTN","ECXKILL1",32,0)
 K ECXMEAN,ECXPPC1,ECXPPC2,ECXPPC3,ECXPTYPE,ECXREL,ECXSBGRP,ECXUESTA
"RTN","ECXKILL1",33,0)
 F I=1:1:4 K @("ECXICD9"_I)
"RTN","ECXKILL1",34,0)
 K ECXUNIT,ECXVIET,CNT,I,ECXCFLG
"RTN","ECXKILL1",35,0)
 Q
"RTN","ECXLARA")
0^1^B29666776^B27412499
"RTN","ECXLARA",1,0)
ECXLARA ;ALB/JRC - LAR Extract Audit Report ; 9/24/08 3:35pm
"RTN","ECXLARA",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXLARA",3,0)
 Q
"RTN","ECXLARA",4,0)
EN ;entry point for NUT extract audit report
"RTN","ECXLARA",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXLARA",6,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXLARA",7,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXLARA",8,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXLARA",9,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXLARA",10,0)
 S (ECXERR,FLAG)=0
"RTN","ECXLARA",11,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXLARA",12,0)
 S ECXHEAD="LAR",ECXAUD=0
"RTN","ECXLARA",13,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXLARA",14,0)
 ;select extract
"RTN","ECXLARA",15,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXLARA",16,0)
 Q:ECXERR
"RTN","ECXLARA",17,0)
 W !!
"RTN","ECXLARA",18,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXLARA",19,0)
 S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXLARA",20,0)
 I ECXERR=1 D  Q
"RTN","ECXLARA",21,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLARA",22,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLARA",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXLARA",24,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXLARA",25,0)
 W !
"RTN","ECXLARA",26,0)
 ;determine output device and queue if requested
"RTN","ECXLARA",27,0)
 S ECXPGM="PROCESS^ECXLARA",ECXDESC="LAR Extract Audit Report"
"RTN","ECXLARA",28,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("STATUS")="",ECXSAVE("REPORT")="",ECXSAVE("FLAG")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXLARA",29,0)
 W !
"RTN","ECXLARA",30,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLARA",31,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXLARA",32,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLARA",33,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLARA",34,0)
 .D AUDIT^ECXKILL
"RTN","ECXLARA",35,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLARA",36,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLARA",37,0)
 .D PROCESS^ECXLARA
"RTN","ECXLARA",38,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLARA",39,0)
 D HOME^%ZIS
"RTN","ECXLARA",40,0)
 D AUDIT^ECXKILL
"RTN","ECXLARA",41,0)
 Q
"RTN","ECXLARA",42,0)
 ;
"RTN","ECXLARA",43,0)
PROCESS ;process data in file #727.824 and store in ^tmp global
"RTN","ECXLARA",44,0)
 N %,ARRAY,ECXEXT,ECXDEF,X,ECXSTART,ECXEND,ECXRUN,IEN,FLAG,NODE0,NODE1,DATE,DIV,TEST,I,MIN,MAX,RESULT
"RTN","ECXLARA",45,0)
 S ARRAY="^TMP($J,""ECXORDER"")",FLAG=0
"RTN","ECXLARA",46,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXLARA",47,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXLARA",48,0)
 ;get run date in external format
"RTN","ECXLARA",49,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXLARA",50,0)
 ;get records in date range and set values
"RTN","ECXLARA",51,0)
 S IEN=0 F  S IEN=$O(^ECX(727.824,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:FLAG
"RTN","ECXLARA",52,0)
 .S NODE0=$G(^ECX(727.824,IEN,0)),NODE1=$D(^(1))
"RTN","ECXLARA",53,0)
 .S DIV=$P(NODE0,U,4),DATE=$P(NODE0,U,9),TEST=$P(NODE0,U,10),RESULT=$P(NODE0,U,11)
"RTN","ECXLARA",54,0)
 .;filter out divisions if not all selected
"RTN","ECXLARA",55,0)
 .Q:$G(@SCRNARR@("DIVISION"))'=1&'$D(@SCRNARR@("DIVISION",+$G(DIV)))
"RTN","ECXLARA",56,0)
 .;convert free text date to fm internal format date
"RTN","ECXLARA",57,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXLARA",58,0)
 .;check for unknowns so that they won't be lost
"RTN","ECXLARA",59,0)
 .F I="DIV","TEST","DATE" I @I="" S @I="UNKNOWN"
"RTN","ECXLARA",60,0)
 .;increment div/test count, check min/max save in ^tmp global
"RTN","ECXLARA",61,0)
 .S $P(^TMP($J,"ECXDSS",DIV,TEST),U)=$P($G(^TMP($J,"ECXDSS",DIV,TEST)),U)+1
"RTN","ECXLARA",62,0)
 .;S MIN=$P(^TMP($J,"ECXDSS",DIV,TEST),U,2)
"RTN","ECXLARA",63,0)
 .;S MAX=$P(^TMP($J,"ECXDSS",DIV,TEST),U,3)
"RTN","ECXLARA",64,0)
 .;S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(MIN']"":RESULT,RESULT<MIN:RESULT,1:MIN),$P(^(TEST),U,3)=$S(RESULT>MAX:RESULT,1:MAX)
"RTN","ECXLARA",65,0)
 .;S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(RESULT["NEG":"NEG",+RESULT<+MIN:RESULT,1:""),$P(^(TEST),U,3)=$S(RESULT["POS":"POS",RESULT>MAX:RESULT,1:"")
"RTN","ECXLARA",66,0)
 .;S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(RESULT["NEG":"NEG",MIN']"":RESULT,+RESULT'=0&RESULT<MIN:RESULT,1:MIN),$P(^(TEST),U,3)=$S(RESULT["POS":"POS",MAX']""&RESULT'=0:RESULT,RESULT>MAX:RESULT,1:MAX)
"RTN","ECXLARA",67,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARA",68,0)
 D PRINT
"RTN","ECXLARA",69,0)
 D AUDIT^ECXKILL
"RTN","ECXLARA",70,0)
 Q
"RTN","ECXLARA",71,0)
 ;
"RTN","ECXLARA",72,0)
PRINT ;print report
"RTN","ECXLARA",73,0)
 N PG,NODE,ECN
"RTN","ECXLARA",74,0)
 U IO
"RTN","ECXLARA",75,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARA",76,0)
 S PG=0
"RTN","ECXLARA",77,0)
 I '$D(^TMP($J,"ECXDSS")) D  Q
"RTN","ECXLARA",78,0)
 .S DIV=0 F  S DIV=$O(@SCRNARR@("DIVISION",DIV)) Q:'DIV  D  Q:FLAG
"RTN","ECXLARA",79,0)
 ..D HEADER Q:FLAG
"RTN","ECXLARA",80,0)
 ..W !
"RTN","ECXLARA",81,0)
 ..W !,"**************************************************"
"RTN","ECXLARA",82,0)
 ..W !,"*  No data available for this division.          *"
"RTN","ECXLARA",83,0)
 ..W !,"**************************************************"
"RTN","ECXLARA",84,0)
 S DIV=0 F  S DIV=$O(^TMP($J,"ECXDSS",DIV)) Q:'DIV  D
"RTN","ECXLARA",85,0)
 .D HEADER Q:FLAG
"RTN","ECXLARA",86,0)
 .S ECN=0 F  S ECN=$O(^ECX(727.29,"AC",ECN)) Q:'ECN  S TEST=$$RJ^XLFSTR(ECN,4,0) D  Q:FLAG
"RTN","ECXLARA",87,0)
 ..S NODE=$S($D(^TMP($J,"ECXDSS",DIV,TEST)):^TMP($J,"ECXDSS",DIV,TEST),1:"")
"RTN","ECXLARA",88,0)
 ..;S TEST="" F  S TEST=$O(^TMP($J,"ECXDSS",DIV,TEST)) Q:TEST']""  D  Q:FLAG
"RTN","ECXLARA",89,0)
 ..;S NODE=^TMP($J,"ECXDSS",DIV,TEST)
"RTN","ECXLARA",90,0)
 ..;S MIN=$P(^TMP($J,"ECXDSS",DIV,TEST),U,2)
"RTN","ECXLARA",91,0)
 ..;S MAX=$P(^TMP($J,"ECXDSS",DIV,TEST),U,3)
"RTN","ECXLARA",92,0)
 ..D:($Y+3>IOSL) HEADER Q:FLAG
"RTN","ECXLARA",93,0)
 ..W !,?4,TEST,?14,$$ECXYMX^ECXUTL($$ECXYM^ECXUTL(DATE)),?27,$S(NODE:$J($P(NODE,U,1),15),1:$J("Not in Extract",15))
"RTN","ECXLARA",94,0)
 ..;;W !,?4,TEST,?14,$$ECXYMX^ECXUTL($$ECXYM^ECXUTL(DATE)),?27,$S(MIN["NEG":$J("NEG",15),1:$J(MIN,15,4)),?44,$S(MAX["POS":$J("POS",15),MAX>0:$J(MAX,15,4),1:""),?60,$J($P(NODE,U,1),15)
"RTN","ECXLARA",95,0)
 Q
"RTN","ECXLARA",96,0)
 ;
"RTN","ECXLARA",97,0)
HEADER ;header and page control
"RTN","ECXLARA",98,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXLARA",99,0)
 I $E(IOST)="C" D
"RTN","ECXLARA",100,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARA",101,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y FLAG=1
"RTN","ECXLARA",102,0)
 Q:FLAG
"RTN","ECXLARA",103,0)
 S DSSID=$S($G(DIV):$$NNT^XUAF4(DIV),1:"UNKNOWN^^")
"RTN","ECXLARA",104,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLARA",105,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXLARA",106,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXLARA",107,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXLARA",108,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXLARA",109,0)
 W !,"Division: "_$P(DSSID,U)_$S($P(DSSID,U,2)'="":" ("_$P(DSSID,U,2)_")",1:""),?68,"Page: "_PG
"RTN","ECXLARA",110,0)
 ;Detailed report sub-header
"RTN","ECXLARA",111,0)
 Q:'$D(^TMP($J))
"RTN","ECXLARA",112,0)
 W !!,?2,"Test Code",?14,"Month Year",?32,"Total Count"
"RTN","ECXLARA",113,0)
 ;W !!,?2,"Test Code",?14,"Month Year",?32,"Min Result",?49,"Max Result",?64,"Total Count"
"RTN","ECXLARA",114,0)
 Q
"RTN","ECXLARPT")
0^26^B22212471^B20353284
"RTN","ECXLARPT",1,0)
ECXLARPT ;ALB/DHH-LAR Results LOINC CODE Report ; 6/15/09 9:36am
"RTN","ECXLARPT",2,0)
 ;;3.0;DSS;**112,120**;MAY 5, 2008;Build 43
"RTN","ECXLARPT",3,0)
 ;
"RTN","ECXLARPT",4,0)
EN ; entry point
"RTN","ECXLARPT",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXLARPT",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXLARPT",7,0)
 ; get today's date
"RTN","ECXLARPT",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXLARPT",9,0)
 S ECXDESC="LAB Results LOINC CODE Report"
"RTN","ECXLARPT",10,0)
 S ECXSAVE("EC*")=""
"RTN","ECXLARPT",11,0)
 W !!,"This report requires 132-column format."
"RTN","ECXLARPT",12,0)
 D EN^XUTMDEVQ("PROCESS^ECXLARPT",ECXDESC,.ECXSAVE)
"RTN","ECXLARPT",13,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXLARPT",14,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLARPT",15,0)
 D HOME^%ZIS
"RTN","ECXLARPT",16,0)
 D AUDIT^ECXKILL
"RTN","ECXLARPT",17,0)
 Q
"RTN","ECXLARPT",18,0)
 ;
"RTN","ECXLARPT",19,0)
 ;
"RTN","ECXLARPT",20,0)
PROCESS ; entry point for queued report
"RTN","ECXLARPT",21,0)
 S ZTREQ="@" N ECXDIV
"RTN","ECXLARPT",22,0)
 D DEFAULT^ECXDVSN(.ECXDIV,1,.ECXERR)
"RTN","ECXLARPT",23,0)
 Q:ECXERR=1
"RTN","ECXLARPT",24,0)
 N TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC,LLNC,I,J,K,L,M,N,WKLD,WKLDCD,SPEC,TA,LTEST,A
"RTN","ECXLARPT",25,0)
 S A("ALL")=""
"RTN","ECXLARPT",26,0)
 D LOINC^ECXUTL6(.A)
"RTN","ECXLARPT",27,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",28,0)
 S ECXLNC="" F I=0:0 S ECXLNC=$O(^TMP($J,"ECXUTL6",ECXLNC)) Q:ECXLNC']""  D
"RTN","ECXLARPT",29,0)
 . S RU=$P(^TMP($J,"ECXUTL6",ECXLNC),U,4) S:$G(RU)="" RU="UNKNOWN"
"RTN","ECXLARPT",30,0)
 . S TNUM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,2)
"RTN","ECXLARPT",31,0)
 . S DSSNM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,3)
"RTN","ECXLARPT",32,0)
 . I '$O(^TMP($J,"ECXUTL6",ECXLNC,0)) D
"RTN","ECXLARPT",33,0)
 .. S ^TMP($J,"ECXLARPT",TNUM,DSSNM,"ZZZZ","ZZZZ",RU,ECXLNC)=""
"RTN","ECXLARPT",34,0)
 . S WKLD="" F J=0:0 S WKLD=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD)) Q:WKLD']""  D
"RTN","ECXLARPT",35,0)
 .. S SPEC="" F K=0:0 S SPEC=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC)) Q:SPEC']""  D
"RTN","ECXLARPT",36,0)
 ... S LTEST="" F M=0:0 S LTEST=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST)) Q:LTEST']""  D
"RTN","ECXLARPT",37,0)
 .... S SPECNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,2)
"RTN","ECXLARPT",38,0)
 .... I SPECNM="DEFAULT LOINC" Q  ;ECXUTL6 default loinc not functionally correct
"RTN","ECXLARPT",39,0)
 .... ;I SPECNM="DEFAULT LOINC" S SPECNM="ZZDEFAULT LOINC"
"RTN","ECXLARPT",40,0)
 .... S TSTNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,3) S:$G(TSTNM)="" TSTNM="UNKNOWN"
"RTN","ECXLARPT",41,0)
 .... S WKLDCD=$S($D(^LAM(WKLD,0)):$P(^(0),"^",2),1:"")
"RTN","ECXLARPT",42,0)
 .... S LLNC=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,4)
"RTN","ECXLARPT",43,0)
 .... S ^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)=WKLD_"^"_WKLDCD_"^"_LLNC
"RTN","ECXLARPT",44,0)
 D PRINT
"RTN","ECXLARPT",45,0)
 Q
"RTN","ECXLARPT",46,0)
 ;
"RTN","ECXLARPT",47,0)
PRINT ; process temp file and print report
"RTN","ECXLARPT",48,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC,WKLD1
"RTN","ECXLARPT",49,0)
 U IO
"RTN","ECXLARPT",50,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARPT",51,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXLARPT",52,0)
 D HEADER Q:QFLG
"RTN","ECXLARPT",53,0)
 S COUNT=COUNT+1
"RTN","ECXLARPT",54,0)
 S TNUM=0 F I=0:0 S TNUM=$O(^TMP($J,"ECXLARPT",TNUM)) Q:'TNUM  D  Q:QFLG
"RTN","ECXLARPT",55,0)
 . S DSSNM="" F J=0:0 S DSSNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM)) Q:DSSNM']""  D  Q:QFLG
"RTN","ECXLARPT",56,0)
 .. S TSTNM="" F K=0:0 S TSTNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM)) Q:TSTNM']""  D  Q:QFLG
"RTN","ECXLARPT",57,0)
 ... S SPECNM="" F L=0:0 S SPECNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM)) Q:SPECNM']""  D  Q:QFLG
"RTN","ECXLARPT",58,0)
 .... S RU="" F M=0:0 S RU=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU)) Q:RU']""  D  Q:QFLG
"RTN","ECXLARPT",59,0)
 ..... S ECXLNC="" F N=0:0 S ECXLNC=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)) Q:ECXLNC']""  D  Q:QFLG
"RTN","ECXLARPT",60,0)
 ...... S WKLD1=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^")
"RTN","ECXLARPT",61,0)
 ...... S WKLDCD=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",2)
"RTN","ECXLARPT",62,0)
 ...... S LLNC=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",3)
"RTN","ECXLARPT",63,0)
 ...... W !,$$RJ^XLFSTR(TNUM,4,"0"),?11,$E(DSSNM,1,24),?37,$E(RU,1,13),?53,$$RJ^XLFSTR(ECXLNC,10," ") ;,?56,$$RJ^XLFSTR(LLNC,10," ")
"RTN","ECXLARPT",64,0)
 ...... I WKLD1="" W ?67,"*"
"RTN","ECXLARPT",65,0)
 ...... ;I SPECNM'="ZZDEFAULT LOINC",$P(LLNC,"(")'=ECXLNC W ?67,"*"
"RTN","ECXLARPT",66,0)
 ...... W ?71,$S(TSTNM'="ZZZZ":$E(TSTNM,1,24),1:" ")
"RTN","ECXLARPT",67,0)
 ...... W ?97,$S(SPECNM'="ZZZZ":$S(SPECNM="ZZDEFAULT LOINC":"DEFAULT LOINC",1:$E(SPECNM,1,13)),1:" "),?112,$$RJ^XLFSTR(WKLD1,8," "),?122,$$RJ^XLFSTR(WKLDCD,10," ")
"RTN","ECXLARPT",68,0)
 ...... S COUNT=COUNT+1
"RTN","ECXLARPT",69,0)
 ...... I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXLARPT",70,0)
 W !!,"FLG ('*'=site not using LOINC code that DSS collects)"
"RTN","ECXLARPT",71,0)
 Q:QFLG
"RTN","ECXLARPT",72,0)
CLOSE ;
"RTN","ECXLARPT",73,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXLARPT",74,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",75,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXLARPT",76,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",77,0)
 Q
"RTN","ECXLARPT",78,0)
 ;
"RTN","ECXLARPT",79,0)
HEADER ;header and page control
"RTN","ECXLARPT",80,0)
 N SS,JJ
"RTN","ECXLARPT",81,0)
 I $E(IOST)="C" D
"RTN","ECXLARPT",82,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",83,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLARPT",84,0)
 Q:QFLG
"RTN","ECXLARPT",85,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLARPT",86,0)
 W !,"LAB RESULTS DSS LOINC CODE REPORT",?124,"Page: "_PG
"RTN","ECXLARPT",87,0)
 W !,"Report Run Date/Time: "_ECRUN
"RTN","ECXLARPT",88,0)
 W !,"DSS Site:             "_$P(ECXDIV(1),U,2)_" ("_$P(ECXDIV(1),U,3)_")"
"RTN","ECXLARPT",89,0)
 ;W !,?97,"LOC",?117,"LOC",?122,"LOC"
"RTN","ECXLARPT",90,0)
 ;W !!,?68,"F",!,"LAR",?49,"LAR",?61,"LOCAL",?68,"L",?97,"LOC SPEC",?113,"LOC WKLD",?122,"LOC WKLD"
"RTN","ECXLARPT",91,0)
 ;W !,"TEST#",?7,"LAR TEST NAME",?33,"LAR UNITS",?49,"LOINC",?61,"LOINC",?68,"G",?71,"LOCAL TEST NAME",?99,"TYPE",?115,"IEN",?125,"CD"
"RTN","ECXLARPT",92,0)
 W !!,?67,"F",?97,"LOC SPEC",?113,"LOC WKLD",?122,"LOC WKLD"
"RTN","ECXLARPT",93,0)
 W !,"LAR TEST#",?11,"LAR TEST NAME",?37,"LAR UNITS",?53,"LAR LOINC",?67,"L",?71,"LOCAL TEST NAME",?99,"TYPE",?115,"IEN",?124,"CODE"
"RTN","ECXLARPT",94,0)
 W !,"(#727.29)",?13,"(#727.29)",?37,"(#727.29)",?53,"(#727.29)",?67,"G",?76,"(#64)",?99,"(#64)",?115,"(#64)",?124,"(#64)"
"RTN","ECXLARPT",95,0)
 W !,LN,!
"RTN","ECXLARPT",96,0)
 Q
"RTN","ECXLARPT",97,0)
 ;
"RTN","ECXLBB")
0^15^B50013852^B45677580
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ; 8/12/08 1:00pm
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84,90,92,104,105,102,120**;Dec 22, 1997;Build 43
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
 ; access to the BLOOD PRODUCT (#66) is supported by IA 4510
"RTN","ECXLBB",7,0)
BEG ;entry point from option
"RTN","ECXLBB",8,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",9,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",10,0)
 Q
"RTN","ECXLBB",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB",12,0)
 ; begin package specific extract
"RTN","ECXLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC,ECPHYNPI
"RTN","ECXLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB",15,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",16,0)
 ; by taskmanager 
"RTN","ECXLBB",17,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",18,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",19,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",20,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",21,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",22,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",23,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",24,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",25,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",26,0)
 ;filing the record entry 
"RTN","ECXLBB",27,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",28,0)
 ; reset for each DFN.
"RTN","ECXLBB",29,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",30,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",31,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",32,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",33,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",34,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",35,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",36,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",37,0)
 .; ECARRY(9)=REQUESTING PROVIDER, ECARRY(10)=REQUEST. PROV. PERSON CLASS
"RTN","ECXLBB",38,0)
 .; ECARRY(11)=UNIT MODIFIED,ECARRY(12)=UNIT MODIFICATION
"RTN","ECXLBB",39,0)
 .; ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB",40,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$G(^LAB(66,$P(EC0,"^",2),0))
"RTN","ECXLBB",41,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",42,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",43,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",44,0)
 . S ECARRY(8)=$E($P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^"),1,10)
"RTN","ECXLBB",45,0)
 . S (ECARRY(9),ECARRY(10),ECARRY(13))="" D GETRPRV
"RTN","ECXLBB",46,0)
 . S ECARRY(11)=$$MODIFIED(),(ECXPHY,ECXPHYPC,ECPHYNPI)=""
"RTN","ECXLBB",47,0)
 . S ECARRY(12)=$S(ECARRY(11)="Y":$$UNITMODS(),1:"")
"RTN","ECXLBB",48,0)
 . D GETDATA
"RTN","ECXLBB",49,0)
 . K ECARRY
"RTN","ECXLBB",50,0)
 D AUDRPT^ECXLBB1
"RTN","ECXLBB",51,0)
 Q
"RTN","ECXLBB",52,0)
UNITMODS() ; Get modification criteria from fields #.06 and #3 from file #66
"RTN","ECXLBB",53,0)
 N MODARY,MO,EC66A,MODSTR,STR3
"RTN","ECXLBB",54,0)
 S MODARY("DIVIDED")="D",MODARY("POOLED")="P",MODARY("WASHED")="W"
"RTN","ECXLBB",55,0)
 S MODARY("FROZEN")="F",MODARY("LEUKOCYTE POOR")="L"
"RTN","ECXLBB",56,0)
 S MODARY("REJUVENATED")="R",MODARY("DEGLYCEROLIZED")="G"
"RTN","ECXLBB",57,0)
 S MODARY("IRRADIATED")="I",MODARY("SEPARATED")="S"
"RTN","ECXLBB",58,0)
 ;if modification criteria is null determine value from description
"RTN","ECXLBB",59,0)
 S MODSTR=$S($P(EC66,U,6)'="":$P(EC66,U,6),1:$$CHKMOD^ECXLBB1($P(EC66,"^")))
"RTN","ECXLBB",60,0)
 ;get modification criteria for entries at field #3 in file #66
"RTN","ECXLBB",61,0)
 S MOD=0 F  S MOD=$O(^LAB(66,$P(EC0,"^",2),3,MOD)) Q:'MOD  D
"RTN","ECXLBB",62,0)
 .S EC66A=$G(^LAB(66,MOD,0)) I EC66A="" Q
"RTN","ECXLBB",63,0)
 .S STR3=$S($P(EC66A,U,6)'="":$P(EC66A,U,6),1:$$CHKMOD^ECXLBB1($P(EC66A,"^")))
"RTN","ECXLBB",64,0)
 .I STR3'="",MODSTR'[STR3 S MODSTR=MODSTR_STR3
"RTN","ECXLBB",65,0)
 Q MODSTR
"RTN","ECXLBB",66,0)
MODIFIED() ; Was unit modified
"RTN","ECXLBB",67,0)
 ; Init variables
"RTN","ECXLBB",68,0)
 N XMATCH,UNIT,MOD,COMPID,MODNODE,MODTO
"RTN","ECXLBB",69,0)
 S (XMATCH,UNIT)=0,MOD=""
"RTN","ECXLBB",70,0)
 ; Check input
"RTN","ECXLBB",71,0)
 Q:'$G(ECLRDFN)!'$P(EC0,U,2) "N"
"RTN","ECXLBB",72,0)
 ;Find xmatch for blood component request
"RTN","ECXLBB",73,0)
 S XMATCH=$O(^LR(ECLRDFN,1.8,$P(EC0,U,2),1,XMATCH)) Q:'XMATCH "N"
"RTN","ECXLBB",74,0)
 ;Get blood inventory file (#65) pointer
"RTN","ECXLBB",75,0)
 S UNIT=$P($G(^LR(ECLRDFN,1.8,$P(EC0,"^",2),1,XMATCH,0)),U)
"RTN","ECXLBB",76,0)
 ;Look at disposition field (#4.1) in blood inventory file (#65)
"RTN","ECXLBB",77,0)
 S MOD=$P($G(^LRD(65,+XMATCH,4)),U),COMPID=$P(EC66,U,3)
"RTN","ECXLBB",78,0)
 ; Get 'the modified to' entry pointer to blood inventory file (#66)
"RTN","ECXLBB",79,0)
 I MOD="MO" S MODTO=0 F  S MODTO=$O(^LRD(65,+XMATCH,9,MODTO)) Q:'MODTO  D
"RTN","ECXLBB",80,0)
 .S MODNODE=$G(^LRD(65,+XMATCH,9,MODTO,0)) Q:$P(^(0),U,3)'>1
"RTN","ECXLBB",81,0)
 .Q:$P(MODNODE,U,2)'=COMPID
"RTN","ECXLBB",82,0)
 .; Set the modify to unit ien for file (#66)
"RTN","ECXLBB",83,0)
 Q $S(MOD="MO":"Y",1:"N")
"RTN","ECXLBB",84,0)
GETRPRV ; get requesting provider, requesting provider person class and 
"RTN","ECXLBB",85,0)
 ; production division code
"RTN","ECXLBB",86,0)
 ; input: ECD      =INVERTED DATE SUBSCRIPT
"RTN","ECXLBB",87,0)
 ;        ECARRY(1)=TRANSFUSION DATE AND TIME
"RTN","ECXLBB",88,0)
 ; note: Accessioned data in file #68 is stored up to 90 days.
"RTN","ECXLBB",89,0)
 N ECXBNOD,ACC,ACCDT,ACCNODE,PERCLS,DIV,NUM
"RTN","ECXLBB",90,0)
 I ECARRY(1)="" Q  ;there is no transfusion date
"RTN","ECXLBB",91,0)
 ;get BLOOD BANK record, field #1, in file #63 located on "BB" node
"RTN","ECXLBB",92,0)
 ;since there is a slight time lapse, $O will find the BB record
"RTN","ECXLBB",93,0)
 S ECXBNOD=$O(^LR(ECLRDFN,"BB",ECD)) I ECXBNOD="" Q
"RTN","ECXLBB",94,0)
 S ECXBNOD=^LR(ECLRDFN,"BB",ECXBNOD,0) I ECXBNOD="" Q
"RTN","ECXLBB",95,0)
 ;Compose accession number,originating from field #.06 subfile #63.01
"RTN","ECXLBB",96,0)
 ; ex. ACC=BB 0528 27
"RTN","ECXLBB",97,0)
 S ACC=$P(ECXBNOD,U,6),ACC=$TR($P(ACC," ",2,99)," ")
"RTN","ECXLBB",98,0)
 S ACCDT=$E(ECARRY(1),1,3)_$E(ACC,1,4),NUM=$E(ACC,5,99)
"RTN","ECXLBB",99,0)
 ;Get field #2 from file #68, field #1 from subfile #68.01 which is
"RTN","ECXLBB",100,0)
 ;subfile #68.02. Look at 29=blood bank ien, from 0th node, get fields
"RTN","ECXLBB",101,0)
 ;#6.5 PROVIDER and #26 DIV
"RTN","ECXLBB",102,0)
 I (ACCDT)=""!(NUM="") Q
"RTN","ECXLBB",103,0)
 ; identify bb accession area the patient was in to get the right DIV
"RTN","ECXLBB",104,0)
 S AREA=$$AREA
"RTN","ECXLBB",105,0)
 S ACCNODE=$G(^LRO(68,+AREA,1,ACCDT,1,NUM,0))
"RTN","ECXLBB",106,0)
 S ECARRY(9)=$P(ACCNODE,U,8) I ECARRY(9)'="" D
"RTN","ECXLBB",107,0)
 . S PERCLS=$$GET^XUA4A72(ECARRY(9),ACCDT)
"RTN","ECXLBB",108,0)
 . I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB",109,0)
 . S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ACCDT)
"RTN","ECXLBB",110,0)
 . S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB",111,0)
 . S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB",112,0)
 S DIV=$P($G(^LRO(68,+AREA,1,ACCDT,1,NUM,.4)),U)
"RTN","ECXLBB",113,0)
 I DIV'="" S ECARRY(13)=$$RADDIV^ECXDEPT(DIV)
"RTN","ECXLBB",114,0)
 Q
"RTN","ECXLBB",115,0)
AREA() ; resolve accession area's ien to use and validate
"RTN","ECXLBB",116,0)
 ;          Accession number
"RTN","ECXLBB",117,0)
 ;          Patient LRDFN
"RTN","ECXLBB",118,0)
 ; note: if there is only one accession area use '29'
"RTN","ECXLBB",119,0)
 N A,CNT,BBLIST,DFN,ACC,AREA,DATE,TDATE,ACCNODE
"RTN","ECXLBB",120,0)
 S (CNT,FLAG,A)=0,DFN=""
"RTN","ECXLBB",121,0)
 ; set the date from the "bb" node in file (#63)
"RTN","ECXLBB",122,0)
 S DATE=$P(ECXBNOD,U)
"RTN","ECXLBB",123,0)
 ; setup array for bb accession areas if more than one
"RTN","ECXLBB",124,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)="BB" D
"RTN","ECXLBB",125,0)
 . S BBLIST(A)=""
"RTN","ECXLBB",126,0)
 . S CNT=CNT+1
"RTN","ECXLBB",127,0)
 I CNT'>1 Q 29
"RTN","ECXLBB",128,0)
 S AREA=0 F  S AREA=$O(BBLIST(AREA)) Q:'AREA  D  Q:FLAG
"RTN","ECXLBB",129,0)
 . ; get additional accession information for validation
"RTN","ECXLBB",130,0)
 . S ACCNODE=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,0))
"RTN","ECXLBB",131,0)
 . S ACC=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,.2))
"RTN","ECXLBB",132,0)
 . S DFN=$P($G(ACCNODE),U)
"RTN","ECXLBB",133,0)
 . S TDATE=$P($G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,3)),U)
"RTN","ECXLBB",134,0)
 . I (DFN=ECLRDFN)&(ACC=$P(ECXBNOD,U,6))&(DATE=TDATE) S FLAG=1
"RTN","ECXLBB",135,0)
 Q AREA
"RTN","ECXLBB",136,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",137,0)
 ; entry in file 727.829
"RTN","ECXLBB",138,0)
 N ECXSTR
"RTN","ECXLBB",139,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",140,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",141,0)
 ;
"RTN","ECXLBB",142,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",143,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",144,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",145,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",146,0)
 Q:ECENCTR=""
"RTN","ECXLBB",147,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB",148,0)
 S ECXERI=ECPAT("ERI")
"RTN","ECXLBB",149,0)
 ;
"RTN","ECXLBB",150,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB",151,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",152,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB",153,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB",154,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",155,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",156,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB",157,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB",158,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB",159,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB",160,0)
 ;  used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB",161,0)
 Q
"RTN","ECXLBB",162,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",163,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",164,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",165,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",166,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",167,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",168,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",169,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",170,0)
 ; 
"RTN","ECXLBB",171,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",172,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",173,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",174,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",175,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",176,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",177,0)
 ;                            1=error condition
"RTN","ECXLBB",178,0)
 N X,OK,ECXERR
"RTN","ECXLBB",179,0)
 ;get data
"RTN","ECXLBB",180,0)
 S ECXERR=0
"RTN","ECXLBB",181,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB",182,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",183,0)
 Q ECXERR
"RTN","ECXLBB",184,0)
 ;
"RTN","ECXLBB",185,0)
FILE(ECODE) ;
"RTN","ECXLBB",186,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",187,0)
 ;
"RTN","ECXLBB",188,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",189,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",190,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",191,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",192,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",193,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB",194,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB",195,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB",196,0)
 ;ECODE1- requesting provider npi ECREQNPI
"RTN","ECXLBB",197,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",198,0)
 ; ECX*3*61
"RTN","ECXLBB",199,0)
 N DA,DIK,EC7
"RTN","ECXLBB",200,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",201,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",202,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB",203,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB",204,0)
 .S ECODE1=$G(ECREQNPI)
"RTN","ECXLBB",205,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB",206,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",207,0)
 Q
"RTN","ECXLBB",208,0)
 ;
"RTN","ECXLBB",209,0)
 ;
"RTN","ECXLBB",210,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",211,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",212,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",213,0)
 Q
"RTN","ECXLBB",214,0)
 ;
"RTN","ECXLBB",215,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",216,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",217,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",218,0)
 ;
"RTN","ECXLBB",219,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",220,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",221,0)
 Q
"RTN","ECXLBB",222,0)
 ;
"RTN","ECXLBB",223,0)
 ;ECXLBB
"RTN","ECXLBB1")
0^16^B26138435^B23103895
"RTN","ECXLBB1",1,0)
ECXLBB1 ;ALB/JRC - DSS VBECS EXTRACT ; 7/24/08 12:01pm
"RTN","ECXLBB1",2,0)
 ;;3.0;DSS EXTRACTS;**105,102,120**;Dec 22, 1997;Build 43
"RTN","ECXLBB1",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB1",4,0)
 ; access to the VBECS EXTRACT file (#6002.03) is supported by
"RTN","ECXLBB1",5,0)
 ; controlled subscription to IA #4953  (global root ^VBECS(6002.03)
"RTN","ECXLBB1",6,0)
BEG ;entry point from option
"RTN","ECXLBB1",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB1",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB1",9,0)
 Q
"RTN","ECXLBB1",10,0)
 ;
"RTN","ECXLBB1",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB1",12,0)
 ; begin package specific extract
"RTN","ECXLBB1",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB1",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB1",15,0)
 N ECPHYNPI,ECREQNPI
"RTN","ECXLBB1",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB1",17,0)
 ; by taskmanager 
"RTN","ECXLBB1",18,0)
 ; ECED defined in ^ECXTRAC - end date of the extract
"RTN","ECXLBB1",19,0)
 ; TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB1",20,0)
 ; ECED and ECSD input provided by the user interface
"RTN","ECXLBB1",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB1",22,0)
 ; Read through the VBECS DSS EXTRACT file (6002.03)
"RTN","ECXLBB1",23,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB1",24,0)
 ;
"RTN","ECXLBB1",25,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB1",26,0)
 N RECORD
"RTN","ECXLBB1",27,0)
 S RECORD=0,ECD=ECSD-.1,ECTODT=ECED+.9
"RTN","ECXLBB1",28,0)
 F  S ECD=$O(^VBEC(6002.03,"C",ECD)) Q:'ECD!(ECD>ECTODT)  S RECORD=0 F  S RECORD=$O(^VBEC(6002.03,"C",ECD,RECORD)) Q:RECORD'>0  S EC0=^VBEC(6002.03,RECORD,0) D
"RTN","ECXLBB1",29,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, ECARRY(3)=COMPONENT 
"RTN","ECXLBB1",30,0)
 .; ECARRY(4)=COMPONENT ABBREVIATION, ECARRY(5)=UNITS POOLED
"RTN","ECXLBB1",31,0)
 .; ECARRY(6)=TRANSFUSION REACTION,ECARRY(7)=VOLUME TRANSFUSED
"RTN","ECXLBB1",32,0)
 .; ECARRY(8)=TRANSFUSION REACTION TYPE, ECARRY(9)=REQUESTING PROVIDER
"RTN","ECXLBB1",33,0)
 .; ECARRY(10)=REQUEST. PROV. PERSON CLASS, ECARRY(11)=UNIT MODIFIED
"RTN","ECXLBB1",34,0)
 .; ECARRY(12)=UNIT MODIFICATION, ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB1",35,0)
 .;
"RTN","ECXLBB1",36,0)
 . S ECXDFN=$P(EC0,U,2),ECERR=$$PAT(ECXDFN) Q:ECERR
"RTN","ECXLBB1",37,0)
 . S ECARRY(1)=$P(EC0,U,10),ECARRY(3)=$P(EC0,U,7),ECARRY(4)=$P(EC0,U,8),ECARRY(5)=$S(+$P(EC0,U,9)=0:1,1:+$P(EC0,U,9)),ECARRY(6)=$S($P(EC0,U,15):"Y",1:"N"),ECARRY(7)=$P(EC0,"^",12),ECARRY(8)=$P(EC0,U,13)
"RTN","ECXLBB1",38,0)
 . S ECARRY(9)=$P(EC0,U,6),ECINST=$P(EC0,U,3),ECARRY(12)=$P(EC0,U,14),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N"),ECARRY(13)=$P(EC0,U,4)
"RTN","ECXLBB1",39,0)
 . ;get requesting and ordering providers and their person class
"RTN","ECXLBB1",40,0)
 . S ECXPHY=$P(EC0,U,5),(ECXPHYPC,ECARRY(10),ECPHYNPI,ECREQNPI)=""
"RTN","ECXLBB1",41,0)
 . I ECXPHY]"" S ECXPHY=$O(^VA(200,"B",ECXPHY,0))
"RTN","ECXLBB1",42,0)
 . I ECXPHY>0 D
"RTN","ECXLBB1",43,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECXPHY,ECD)
"RTN","ECXLBB1",44,0)
 .. I +PERCLS>0 S ECXPHYPC=$P(PERCLS,U,7)
"RTN","ECXLBB1",45,0)
 .. S ECPHYNPI=$$NPI^XUSNPI("Individual_ID",ECXPHY,ECD)
"RTN","ECXLBB1",46,0)
 .. S:+ECPHYNPI'>0 ECPHYNPI="" S ECPHYNPI=$P(ECPHYNPI,U)
"RTN","ECXLBB1",47,0)
 .. S ECXPHY=2_ECXPHY
"RTN","ECXLBB1",48,0)
 . I ECARRY(9)>0 D
"RTN","ECXLBB1",49,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECARRY(9),ECD)
"RTN","ECXLBB1",50,0)
 .. I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB1",51,0)
 .. S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ECD)
"RTN","ECXLBB1",52,0)
 .. S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB1",53,0)
 .. S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB1",54,0)
 . D GETDATA
"RTN","ECXLBB1",55,0)
 . K ECARRY
"RTN","ECXLBB1",56,0)
 Q
"RTN","ECXLBB1",57,0)
 ;
"RTN","ECXLBB1",58,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB1",59,0)
 ; entry in file 727.829
"RTN","ECXLBB1",60,0)
 N ECXSTR
"RTN","ECXLBB1",61,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB1",62,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4)
"RTN","ECXLBB1",63,0)
 ;
"RTN","ECXLBB1",64,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB1",65,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB1",66,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB1",67,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB1",68,0)
 Q:ECENCTR=""
"RTN","ECXLBB1",69,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB1",70,0)
 S ECXERI=$G(ECPAT("ERI"))
"RTN","ECXLBB1",71,0)
 ;
"RTN","ECXLBB1",72,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB1",73,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB1",74,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB1",75,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB1",76,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB1",77,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB1",78,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB1",79,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB1",80,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB1",81,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB1",82,0)
 ;   used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB1",83,0)
 Q
"RTN","ECXLBB1",84,0)
 ;
"RTN","ECXLBB1",85,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB1",86,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB1",87,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB1",88,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB1",89,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB1",90,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB1",91,0)
 ;                            1=error condition
"RTN","ECXLBB1",92,0)
 N X,OK,ECXERR
"RTN","ECXLBB1",93,0)
 ;get data
"RTN","ECXLBB1",94,0)
 S ECXERR=0
"RTN","ECXLBB1",95,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB1",96,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB1",97,0)
 Q ECXERR
"RTN","ECXLBB1",98,0)
 ;
"RTN","ECXLBB1",99,0)
FILE(ECODE) ;
"RTN","ECXLBB1",100,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB1",101,0)
 ;
"RTN","ECXLBB1",102,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB1",103,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB1",104,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB1",105,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB1",106,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB1",107,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB1",108,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB1",109,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB1",110,0)
 ;ECODE1- requesting provider npi ECREQNPI
"RTN","ECXLBB1",111,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB1",112,0)
 ; ECX*3*61
"RTN","ECXLBB1",113,0)
 N DA,DIK,EC7
"RTN","ECXLBB1",114,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB1",115,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB1",116,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB1",117,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB1",118,0)
 .S ECODE1=$G(ECREQNPI)
"RTN","ECXLBB1",119,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB1",120,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB1",121,0)
 Q
"RTN","ECXLBB1",122,0)
 ;
"RTN","ECXLBB1",123,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB1",124,0)
 S ECHEAD="LBB"
"RTN","ECXLBB1",125,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB1",126,0)
 Q
"RTN","ECXLBB1",127,0)
 ;
"RTN","ECXLBB1",128,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB1",129,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB1",130,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB1",131,0)
 ;
"RTN","ECXLBB1",132,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB1",133,0)
 N RES,MODX
"RTN","ECXLBB1",134,0)
 I MD="" Q ""
"RTN","ECXLBB1",135,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB1",136,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB1",137,0)
 Q RES
"RTN","ECXLBB1",138,0)
 ;
"RTN","ECXLBB1",139,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB1",140,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB1",141,0)
 Q
"RTN","ECXLBB1",142,0)
 ;
"RTN","ECXLBB1",143,0)
 ;ECXLBB
"RTN","ECXLBBC")
0^17^B41726117^n/a
"RTN","ECXLBBC",1,0)
ECXLBBC ;ALB/MRY - LBB Extract Audit Comparative Report ; 6/15/09 3:19pm
"RTN","ECXLBBC",2,0)
 ;;3.0;DSS EXTRACTS;**120**;Dec 22, 1997;Build 43
"RTN","ECXLBBC",3,0)
 ;
"RTN","ECXLBBC",4,0)
EN ;entry point for LBB extract audit comparative report
"RTN","ECXLBBC",5,0)
 N ECSD,ECED,ECSDN,ECEDN
"RTN","ECXLBBC",6,0)
 D SETUP^ECXLBB I ECFILE="" Q
"RTN","ECXLBBC",7,0)
 N %X,%Y,%DT,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXLBBC",8,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXLBBC",9,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXLBBC",10,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXLBBC",11,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",12,0)
 S (ECXERR,FLAG)=0
"RTN","ECXLBBC",13,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXLBBC",14,0)
 S ECXHEAD="LBB",ECXAUD=0
"RTN","ECXLBBC",15,0)
 W !!,"Setup for ",ECXHEAD," Extract Comparative Report --",!!
"RTN","ECXLBBC",16,0)
 ;select extract
"RTN","ECXLBBC",17,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXLBBC",18,0)
 Q:ECXERR
"RTN","ECXLBBC",19,0)
 W !!
"RTN","ECXLBBC",20,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXLBBC",21,0)
 ;**not in ECXPLBB report, so leaving multi-divisions out.
"RTN","ECXLBBC",22,0)
 ;S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXLBBC",23,0)
 ;I ECXERR=1 D  Q
"RTN","ECXLBBC",24,0)
 ;.W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",25,0)
 ;.K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",26,0)
 ;.D AUDIT^ECXKILL
"RTN","ECXLBBC",27,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXLBBC",28,0)
 S ECXINST=ECINST
"RTN","ECXLBBC",29,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXLBBC",30,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXLBBC",31,0)
 ;sort by COMP
"RTN","ECXLBBC",32,0)
 S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract comparative report to sort by COMP"
"RTN","ECXLBBC",33,0)
 S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXLBBC",34,0)
 I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXLBBC",35,0)
 ;if y=0 i.e., 'no', then ecxcomp=0 i.e., 'selected'
"RTN","ECXLBBC",36,0)
 S ECXCFLG=Y
"RTN","ECXLBBC",37,0)
 I ECXERR=1 D  Q
"RTN","ECXLBBC",38,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXLBBC",40,0)
 W !
"RTN","ECXLBBC",41,0)
 Q:(ECXARRAY("END")']"")&(ECXARRAY("START")']"")
"RTN","ECXLBBC",42,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP=1
"RTN","ECXLBBC",43,0)
 ;
"RTN","ECXLBBC",44,0)
START ; entry point from tasked job
"RTN","ECXLBBC",45,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXLBBC",46,0)
 N ECXLOGIC,ECXRPT,ECXCRPT,ECXJOB
"RTN","ECXLBBC",47,0)
 S ECXJOB=$J
"RTN","ECXLBBC",48,0)
 K ^TMP("ECXLBBC",ECXJOB)
"RTN","ECXLBBC",49,0)
 U IO
"RTN","ECXLBBC",50,0)
 I $E(IOST,1,2)="C-" W !,"Retrieving records... "
"RTN","ECXLBBC",51,0)
 S (ECXRPT,ECXCRPT)=1 D AUDRPT^ECXLBB ;build source tmp
"RTN","ECXLBBC",52,0)
 D EXTRACT ;build extract tmp
"RTN","ECXLBBC",53,0)
 ;
"RTN","ECXLBBC",54,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXLBBC",55,0)
 N ECDATE,ECXTOT,ECXSTOT,ECXSTRX,ECXSTRS,ECRDT,ECQUIT,ECPG,ECLINE,ECLINE1,ECXCLAST
"RTN","ECXLBBC",56,0)
 I '$D(^TMP("ECXLBBC",ECXJOB)) W !,"There were no records that met the date range criteria" Q
"RTN","ECXLBBC",57,0)
 S (ECPG,ECDATE,ECQUIT,ECXCOMP,ECXTOT,ECXSTOT)=0
"RTN","ECXLBBC",58,0)
 S ECXCOMP("TOTAL","S")=0,ECXCOMP("TOTAL","X")=0,ECXCLAST=0
"RTN","ECXLBBC",59,0)
 S ECLINE="",$P(ECLINE,"=",132)="=",ECLINE1="",$P(ECLINE1,"-",132)="-"
"RTN","ECXLBBC",60,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXLBBC",61,0)
 W:$E(IOST,1,2)="C-" @IOF D HED
"RTN","ECXLBBC",62,0)
 S ECXCOMP=0 F  S ECXCOMP=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP)) D  Q:ECXCOMP=""  Q:ECQUIT
"RTN","ECXLBBC",63,0)
 . I ECXCFLG,ECXCLAST'=0,ECXCOMP="" S ECXSTOT=1 D TOTAL S ECXSTOT=0 Q
"RTN","ECXLBBC",64,0)
 . Q:ECXCOMP=""
"RTN","ECXLBBC",65,0)
 . I ECXCFLG,ECXCLAST'=0,ECXCLAST'=ECXCOMP S ECXSTOT=1 D TOTAL S ECXSTOT=0
"RTN","ECXLBBC",66,0)
 . S ECXCLAST=ECXCOMP
"RTN","ECXLBBC",67,0)
 . S ECXCOMP(ECXCOMP,"S")=0,ECXCOMP(ECXCOMP,"X")=0
"RTN","ECXLBBC",68,0)
 . S ECXDFN=0 F  S ECXDFN=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN)) Q:'ECXDFN  D  Q:ECQUIT
"RTN","ECXLBBC",69,0)
 .. S ECDATE=0 F  S ECDATE=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE))  Q:'ECDATE  D  Q:ECQUIT
"RTN","ECXLBBC",70,0)
 ... S ECXSTRS=$G(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE,"S"))
"RTN","ECXLBBC",71,0)
 ... S ECXSTRX=$G(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE,"X"))
"RTN","ECXLBBC",72,0)
 ... I ECXSTRS'="" D
"RTN","ECXLBBC",73,0)
 .... S ECXCOMP(ECXCOMP,"S")=ECXCOMP(ECXCOMP,"S")+(+$P(ECXSTRS,"^",12))
"RTN","ECXLBBC",74,0)
 .... S ECXCOMP("TOTAL","S")=ECXCOMP("TOTAL","S")+(+$P(ECXSTRS,"^",12))
"RTN","ECXLBBC",75,0)
 ... I ECXSTRX'="" D
"RTN","ECXLBBC",76,0)
 .... S ECXCOMP(ECXCOMP,"X")=ECXCOMP(ECXCOMP,"X")+(+$P(ECXSTRX,"^",12))
"RTN","ECXLBBC",77,0)
 .... S ECXCOMP("TOTAL","X")=ECXCOMP("TOTAL","X")+(+$P(ECXSTRX,"^",12))
"RTN","ECXLBBC",78,0)
 ... D PRINT
"RTN","ECXLBBC",79,0)
 S ECXTOT=1 D TOTAL S ECXTOT=0
"RTN","ECXLBBC",80,0)
 D ^ECXKILL
"RTN","ECXLBBC",81,0)
 Q
"RTN","ECXLBBC",82,0)
 ;
"RTN","ECXLBBC",83,0)
PRINT ;
"RTN","ECXLBBC",84,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXLBBC",85,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXLBBC",86,0)
 . W @IOF D HED
"RTN","ECXLBBC",87,0)
 I ECXSTRS="" W !?3,"***************N*O***D*A*T*A*****************"
"RTN","ECXLBBC",88,0)
 I ECXSTRS'="" D
"RTN","ECXLBBC",89,0)
 . W !,$P(ECXSTRS,"^",5),?11,$P(ECXSTRS,"^",4),?26,$P(ECXSTRS,"^",16)
"RTN","ECXLBBC",90,0)
 . W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRS,"^",8)),2)
"RTN","ECXLBBC",91,0)
 . W ?49,$P(ECXSTRS,"^",11),?60,$J(+$P(ECXSTRS,"^",12),2)
"RTN","ECXLBBC",92,0)
 I ECXSTRX="" W ?83,"*******N*O***D*A*T*A*********"
"RTN","ECXLBBC",93,0)
 I ECXSTRX'="" D
"RTN","ECXLBBC",94,0)
 . W ?80,$P(ECXSTRX,"^",4)
"RTN","ECXLBBC",95,0)
 . W ?92,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRX,"^",8)),2)
"RTN","ECXLBBC",96,0)
 . W ?102,$P(ECXSTRX,"^",11),?113,$J(+$P(ECXSTRX,"^",12),2)
"RTN","ECXLBBC",97,0)
 Q
"RTN","ECXLBBC",98,0)
TOTAL ;
"RTN","ECXLBBC",99,0)
 ;I $Y+3>IOSL D  Q:ECQUIT
"RTN","ECXLBBC",100,0)
 ;. I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXLBBC",101,0)
 ;. W @IOF D HED
"RTN","ECXLBBC",102,0)
 W !,ECLINE1
"RTN","ECXLBBC",103,0)
 I $G(ECXSTOT) W !,?47,$J(ECXCLAST_" TOTAL",12),?60,$J(+$G(ECXCOMP(ECXCLAST,"S")),4),?100,$J(ECXCLAST_" TOTAL",12),?113,$J(+$G(ECXCOMP(ECXCLAST,"X")),4)
"RTN","ECXLBBC",104,0)
 I $G(ECXTOT) W !,"TOTAL",?60,$J(+$G(ECXCOMP("TOTAL","S")),4),?113,$J(+$G(ECXCOMP("TOTAL","X")),4)
"RTN","ECXLBBC",105,0)
 Q
"RTN","ECXLBBC",106,0)
 ;
"RTN","ECXLBBC",107,0)
HED ;
"RTN","ECXLBBC",108,0)
 S ECPG=ECPG+1
"RTN","ECXLBBC",109,0)
 W !,"LBB Extract Comparative Report",?124,"Page",$J(ECPG,3)
"RTN","ECXLBBC",110,0)
 W !,ECSDN," - ",ECEDN,?111,"Run Date:",$J(ECRDT,12)
"RTN","ECXLBBC",111,0)
 W !!,"------------------ LOCAL BLOOD BANK SOURCE ----------------------"
"RTN","ECXLBBC",112,0)
 W ?80,"------------- LBB EXTRACT (#"_ECXARRAY("EXTRACT")_") ---------------"
"RTN","ECXLBBC",113,0)
 W !,?37,"Transf",?57,"Number",?92,"Transf",?113,"Number"
"RTN","ECXLBBC",114,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP",?57,"of Units",?80,"SSN",?92,"Date",?102,"COMP",?113,"of Units"
"RTN","ECXLBBC",115,0)
 W !,ECLINE
"RTN","ECXLBBC",116,0)
 Q
"RTN","ECXLBBC",117,0)
 ;
"RTN","ECXLBBC",118,0)
QUE ;
"RTN","ECXLBBC",119,0)
 ;determine output device and queue if requested
"RTN","ECXLBBC",120,0)
 N %,X,%DT
"RTN","ECXLBBC",121,0)
 S X=ECXARRAY("START") D ^%DT S ECSD=Y S X=ECXARRAY("END") D ^%DT S ECED=Y
"RTN","ECXLBBC",122,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXLBBC",123,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ECXSAVE(X)=""
"RTN","ECXLBBC",124,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ECXSAVE(X)=""
"RTN","ECXLBBC",125,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST","ECXCFLG" S ECXSAVE(X)=""
"RTN","ECXLBBC",126,0)
 ;S ECXSAVE("ECXDIV(")=""
"RTN","ECXLBBC",127,0)
 S ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXLBBC",128,0)
 S ECXPGM="START^ECXLBBC",ECXDESC="LBB Extract Audit Comparative Report"
"RTN","ECXLBBC",129,0)
 W !!,"This report requires a print width of 132 characters.",!!
"RTN","ECXLBBC",130,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLBBC",131,0)
 I ECXSAVE("POP")=1 D  S ECXPOP=1 Q
"RTN","ECXLBBC",132,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",133,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",134,0)
 .D AUDIT^ECXKILL
"RTN","ECXLBBC",135,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLBBC",136,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLBBC",137,0)
 .D START^ECXLBBC
"RTN","ECXLBBC",138,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLBBC",139,0)
 D HOME^%ZIS S ECXPOP=1
"RTN","ECXLBBC",140,0)
 D AUDIT^ECXKILL
"RTN","ECXLBBC",141,0)
 Q
"RTN","ECXLBBC",142,0)
EXTRACT ;build extract tmp
"RTN","ECXLBBC",143,0)
 N ECXEXT,IEN,NODE0,ECXDFN,ECXTDT,ECXTTM,ECXCOMP
"RTN","ECXLBBC",144,0)
 S ECXEXT=ECXARRAY("EXTRACT")
"RTN","ECXLBBC",145,0)
 S IEN=0 F  S IEN=$O(^ECX(727.829,"AC",ECXEXT,IEN)) Q:IEN=""  D
"RTN","ECXLBBC",146,0)
 . S NODE0=$G(^ECX(727.829,IEN,0)),ECXDFN=$P(NODE0,"^",5)
"RTN","ECXLBBC",147,0)
 . S ECXTDT=$P(NODE0,"^",10)
"RTN","ECXLBBC",148,0)
 . I ($E(ECXTDT,1)+1_$E(ECXTDT,3,8))>ECED Q
"RTN","ECXLBBC",149,0)
 . I ($E(ECXTDT,1)+1_$E(ECXTDT,3,8))<ECSD Q
"RTN","ECXLBBC",150,0)
 . S ECXTTM=$P(NODE0,"^",11),ECXCOMP=$P(NODE0,"^",13)
"RTN","ECXLBBC",151,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBBC",152,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECXCOMP,1:"ZZNOZZ"),ECXDFN,ECXTDT_"."_ECXTTM_"."_ECCOUNT,"X"))
"RTN","ECXLBBC",153,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECXCOMP,1:"ZZNOZZ"),ECXDFN,ECXTDT_"."_ECXTTM_"."_ECCOUNT,"X")="^"_$P(NODE0,"^",4,99)
"RTN","ECXLBBC",154,0)
 Q
"RTN","ECXMTL")
0^29^B38030219^B38000130
"RTN","ECXMTL",1,0)
ECXMTL ;ALB/JAP - DSS Mental Health Extract ; 8/17/07 9:52am
"RTN","ECXMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,30,33,39,46,49,71,82,84,92,105,120**;Dec 22, 1997;Build 43
"RTN","ECXMTL",3,0)
 ;
"RTN","ECXMTL",4,0)
BEG ;entry point from option
"RTN","ECXMTL",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMTL",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMTL",7,0)
 Q
"RTN","ECXMTL",8,0)
 ;
"RTN","ECXMTL",9,0)
START ;entry point from tasked job
"RTN","ECXMTL",10,0)
 S QFLG=0
"RTN","ECXMTL",11,0)
 ;get first record #
"RTN","ECXMTL",12,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXMTL",13,0)
 ;call mh/dss api for extract record creation
"RTN","ECXMTL",14,0)
 ;variables ecfile,ecxym,ecinst,ecsd,eced passed in by taskmanager
"RTN","ECXMTL",15,0)
 S ECXSEQ=EC7,ECXECX=$P(EC23,U,2),ECXERR=0
"RTN","ECXMTL",16,0)
 ;call mh api to create extract records
"RTN","ECXMTL",17,0)
 S X="YSDSS" X ^%ZOSF("TEST") I '$T S QFLG=1 Q
"RTN","ECXMTL",18,0)
 D UPD^YSDSS(ECFILE,.ECXSEQ,ECXYM,ECXECX,ECINST,ECSD,ECED,.ECXERR)
"RTN","ECXMTL",19,0)
 Q:ECXERR
"RTN","ECXMTL",20,0)
 Q:QFLG
"RTN","ECXMTL",21,0)
 ;if no error, continue
"RTN","ECXMTL",22,0)
 D UPDATE
"RTN","ECXMTL",23,0)
 Q
"RTN","ECXMTL",24,0)
 ;
"RTN","ECXMTL",25,0)
UPDATE ;add non-mh data to each record created by mh api
"RTN","ECXMTL",26,0)
 N ECXADT,JJ,ECXNPRFI
"RTN","ECXMTL",27,0)
 S EC7=EC7+1
"RTN","ECXMTL",28,0)
 F JJ=EC7:1:ECXSEQ Q:QFLG  D
"RTN","ECXMTL",29,0)
 .Q:'$D(^ECX(ECFILE,JJ,0))
"RTN","ECXMTL",30,0)
 .S ECXDFN=$P(^ECX(ECFILE,JJ,0),U,5),ECXDATE=$P(^ECX(ECFILE,JJ,0),U,9),ECXPRV=$P(^ECX(ECFILE,JJ,0),U,18)
"RTN","ECXMTL",31,0)
 .S ECXSCNUM=$P(^ECX(ECFILE,JJ,0),U,23),ECXSCNAM=$P(^ECX(ECFILE,JJ,0),U,24)
"RTN","ECXMTL",32,0)
 .D PAT(ECXDFN,ECXDATE)
"RTN","ECXMTL",33,0)
 .S (ECXPRCLS,ECPRNPI,ECXDIV,ECXPDIV)="" I ECXPRV D PROV(.ECXPRV,ECXDATE)
"RTN","ECXMTL",34,0)
 .S ECXDSSI=""
"RTN","ECXMTL",35,0)
 .I ECXLOGIC>2003 D
"RTN","ECXMTL",36,0)
 ..I "^18^23^24^36^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXMTL",37,0)
 .;
"RTN","ECXMTL",38,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXMTL",39,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXMTL",40,0)
 .;
"RTN","ECXMTL",41,0)
 .;- set national patient record flag if exist
"RTN","ECXMTL",42,0)
 .D NPRF^ECXUTL5
"RTN","ECXMTL",43,0)
 .;
"RTN","ECXMTL",44,0)
 .;- If no encounter number don't file record
"RTN","ECXMTL",45,0)
 .S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXMTL",46,0)
 .S ECD=ECXDATE,ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXMTL",47,0)
 .;adjust scale name & scale number
"RTN","ECXMTL",48,0)
 .S ECXSCNAM=$E(ECXSCNAM,1,10)
"RTN","ECXMTL",49,0)
 .I ECXSCNUM]"",ECXSCNUM'=+ECXSCNUM S ECXSCNUM=+$E(ECXSCNUM,2,99)
"RTN","ECXMTL",50,0)
 .N ECXDEPT S ECXDEPT="" ;dss department use postponed S ECXDEPT=$$MTL^ECXDEPT(ECXDIV,ECXSCNAM,ECINST) ;p-46 line added
"RTN","ECXMTL",51,0)
 .;Set division to external value if extract is for FY05 or higher
"RTN","ECXMTL",52,0)
 .D FILE
"RTN","ECXMTL",53,0)
 Q
"RTN","ECXMTL",54,0)
 ;
"RTN","ECXMTL",55,0)
PAT(ECXDFN,ECXDATE) ;determine in/outpatient status, demographics, primary care
"RTN","ECXMTL",56,0)
 N OK
"RTN","ECXMTL",57,0)
 S (ECXADT,ECXPNM,ECXSSN,ECXMPI)=""
"RTN","ECXMTL",58,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;3;5;",.ECXPAT)
"RTN","ECXMTL",59,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMTL",60,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXMTL",61,0)
 ;agent orange status
"RTN","ECXMTL",62,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXMTL",63,0)
 ;- Purple Heart Indicator, Period of Service, Agent Orange Location
"RTN","ECXMTL",64,0)
 S ECXPHI=$G(ECXPAT("PHI")),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL")
"RTN","ECXMTL",65,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXMTL",66,0)
 ;Combat Veteran Status
"RTN","ECXMTL",67,0)
 S X3=$$CVEDT^ECXUTL5(ECXDFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXMTL",68,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXMTL",69,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXMTL",70,0)
 ; - Race and Ethnicity
"RTN","ECXMTL",71,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXMTL",72,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXMTL",73,0)
 ;get primary care data
"RTN","ECXMTL",74,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE),ECPTTM=$P(X,U)
"RTN","ECXMTL",75,0)
 S ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXMTL",76,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXMTL",77,0)
 ;get inpatient data
"RTN","ECXMTL",78,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMTL",79,0)
 S ECXA=$P(X,U),(ECXADT,ECXADMDT)=$P($P(X,U,4),"."),ECXDCDT=$P($P(X,U,6),".")
"RTN","ECXMTL",80,0)
 S ECXWPRV=$P(X,U,7),ECXATT=$P(X,U,8)
"RTN","ECXMTL",81,0)
 S ECWPRNPI=$$NPI^XUSNPI("Individual_ID",ECXWPRV,ECXDATE)
"RTN","ECXMTL",82,0)
 S:+ECWPRNPI'>0 ECWPRNPI="" S ECWPRNPI=$P(ECWPRNPI,U)
"RTN","ECXMTL",83,0)
 S ECATTNPI=$$NPI^XUSNPI("Individual_ID",ECXATT,ECXDATE)
"RTN","ECXMTL",84,0)
 S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXMTL",85,0)
 ;Get ward provider and attending phy person classes
"RTN","ECXMTL",86,0)
 S ECXWPRPC=$P(X,U,11),ECXATTPC=$P(X,U,12)
"RTN","ECXMTL",87,0)
 I ECXADMDT S ECXADMDT=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXMTL",88,0)
 I ECXDCDT S ECXDCDT=$$ECXDATE^ECXUTL(ECXDCDT,ECXYM)
"RTN","ECXMTL",89,0)
 Q
"RTN","ECXMTL",90,0)
 ;
"RTN","ECXMTL",91,0)
PROV(ECXPRV,ECXDATE) ;get provider data
"RTN","ECXMTL",92,0)
 N INST,DGIEN,ARR,DIC,DR,DA,DIQ
"RTN","ECXMTL",93,0)
 S ECXPRCLS=$$PRVCLASS^ECXUTL(ECXPRV,ECXDATE)
"RTN","ECXMTL",94,0)
 S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPRV,ECXDATE)
"RTN","ECXMTL",95,0)
 S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXMTL",96,0)
 ;get division identifier using provider
"RTN","ECXMTL",97,0)
 S (ECXDIV,ECXPDIV)=""
"RTN","ECXMTL",98,0)
 S IEN=0 F  D  Q:'IEN  Q:'INST  Q:ECXDIV
"RTN","ECXMTL",99,0)
 .;get pointer to file #4 from provider record
"RTN","ECXMTL",100,0)
 .I '$D(^VA(200,ECXPRV,0)) Q
"RTN","ECXMTL",101,0)
 .S IEN=$O(^VA(200,ECXPRV,2,IEN))
"RTN","ECXMTL",102,0)
 .Q:'IEN
"RTN","ECXMTL",103,0)
 .S DIC="^VA(200,",DR="16",DA=ECXPRV
"RTN","ECXMTL",104,0)
 .S DR(200.02)=".01",DA(200.02)=IEN,DIQ="ARR",DIQ(0)="I"
"RTN","ECXMTL",105,0)
 .D EN^DIQ1
"RTN","ECXMTL",106,0)
 .S INST=$G(ARR(200.02,IEN,.01,"I"))
"RTN","ECXMTL",107,0)
 .Q:'INST
"RTN","ECXMTL",108,0)
 .;get production division
"RTN","ECXMTL",109,0)
 .S ECXPDIV=$$RADDIV^ECXDEPT(INST) ;p-46 line added
"RTN","ECXMTL",110,0)
 .;get medical center division
"RTN","ECXMTL",111,0)
 .S DGIEN=$O(^DG(40.8,"AD",INST,0)) I DGIEN D
"RTN","ECXMTL",112,0)
 ..S ECXDIV=$P($G(^ECX(727.3,DGIEN,0)),U,2)
"RTN","ECXMTL",113,0)
 S ECXPRV="2"_ECXPRV
"RTN","ECXMTL",114,0)
 Q
"RTN","ECXMTL",115,0)
 ;
"RTN","ECXMTL",116,0)
FILE ;file record in #727.812
"RTN","ECXMTL",117,0)
 ;node0
"RTN","ECXMTL",118,0)
 ;facility^dfn^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXMTL",119,0)
 ;day ECXDATE^division ECXDIV^admit date ECXADMDT^
"RTN","ECXMTL",120,0)
 ;d/c date ECXDCDT^dss id ECXDSSI^pc team ECPTTM^pc provider ECPTPR^
"RTN","ECXMTL",121,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXMTL",122,0)
 ;provider ECXPRV^placeholder^prov person class ECXPRCLS^
"RTN","ECXMTL",123,0)
 ;test name ECXSCNAM(?)^test ien ECXSCNUM(?)^scale number^scale name^
"RTN","ECXMTL",124,0)
 ;test score^scale score^attend phys^ward provider
"RTN","ECXMTL",125,0)
 ;node1
"RTN","ECXMTL",126,0)
 ;mpi^assoc pc provider^placeholder^
"RTN","ECXMTL",127,0)
 ;assoc pc prov person class^asi class^asi special^asi encounter date^
"RTN","ECXMTL",128,0)
 ;purple heart ind.^dom prrtp & saartp ind.^enrollment cat^
"RTN","ECXMTL",129,0)
 ;enrollment stat^enrollment prior^period of serv.^obs. pat ind.^
"RTN","ECXMTL",130,0)
 ;encounter num^agent orange loc^dob^production division^dss
"RTN","ECXMTL",131,0)
 ;department ECXDEPT^head & neck canc. indi.^ethnicity^race1^^
"RTN","ECXMTL",132,0)
 ;enrollment prior ECXPRIOR_enrollment subgroup
"RTN","ECXMTL",133,0)
 ;ECXSBGRP^enrollee user ECXUESTA^division ECXDIV^patient type
"RTN","ECXMTL",134,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXMTL",135,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXMTL",136,0)
 ;attending phy person class ECXATTPC^ward provider person class 
"RTN","ECXMTL",137,0)
 ;ECXWPRPC^^agent orange status ECXAST^asso prov npi ECASNPI^att phy
"RTN","ECXMTL",138,0)
 ;npi ECATTNPI^primary care prov npi ECPTNPI^provider npi ECPRNPI^ward
"RTN","ECXMTL",139,0)
 ;provider npi ECWPRNPI
"RTN","ECXMTL",140,0)
 N DA,DIK,STR
"RTN","ECXMTL",141,0)
 I $P(^ECX(ECFILE,JJ,0),U,21)="ASI" S $P(^ECX(ECFILE,JJ,1),U,7)=ECXDATE
"RTN","ECXMTL",142,0)
 S $P(^ECX(ECFILE,JJ,0),U,6,9)=ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE
"RTN","ECXMTL",143,0)
 S STR=$S(ECXLOGIC<2005:ECXDIV,1:"")_U_ECXADMDT_U_ECXDCDT_U_ECXDSSI_U_ECPTTM_U_ECPTPR_U
"RTN","ECXMTL",144,0)
 S STR=STR_U_ECCLAS,$P(^ECX(ECFILE,JJ,0),U,10,17)=STR,STR=""
"RTN","ECXMTL",145,0)
 S $P(^ECX(ECFILE,JJ,0),U,18,20)=ECXPRV_U_U_ECXPRCLS
"RTN","ECXMTL",146,0)
 S $P(^ECX(ECFILE,JJ,0),U,23,24)=ECXSCNUM_U_ECXSCNAM
"RTN","ECXMTL",147,0)
 S $P(^ECX(ECFILE,JJ,0),U,27,29)=ECXATT_U_ECXWPRV_U
"RTN","ECXMTL",148,0)
 I '$D(^ECX(ECFILE,JJ,1)) S ^ECX(727.812,JJ,1)="^^^^^"
"RTN","ECXMTL",149,0)
 S $P(^ECX(ECFILE,JJ,1),U,1,4)=ECXMPI_U_ECASPR_U_U_ECCLAS2
"RTN","ECXMTL",150,0)
 S STR=ECXPHI_U_ECXDOM_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U
"RTN","ECXMTL",151,0)
 S STR=STR_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXDOB_U_ECXPDIV_U_ECXDEPT_U
"RTN","ECXMTL",152,0)
 S STR=STR_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXMTL",153,0)
 I ECXLOGIC>2004 S STR=STR_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXDIV_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXMTL",154,0)
 I ECXLOGIC>2005 S STR=STR_U_ECXATTPC_U_ECXWPRPC
"RTN","ECXMTL",155,0)
 S $P(^ECX(ECFILE,JJ,1),U,8,22)=STR
"RTN","ECXMTL",156,0)
 I ECXLOGIC>2006 S $P(^ECX(ECFILE,JJ,1),U,34)=ECXAST_U
"RTN","ECXMTL",157,0)
 I ECXLOGIC>2007 S $P(^ECX(ECFILE,JJ,1),U,35)=ECASNPI_U_ECATTNPI_U_ECPTNPI_U D
"RTN","ECXMTL",158,0)
 . S ^ECX(ECFILE,JJ,2)=ECPRNPI_U_ECWPRNPI
"RTN","ECXMTL",159,0)
 S DA=JJ,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMTL",160,0)
 S ECRN=ECRN+1
"RTN","ECXMTL",161,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMTL",162,0)
 Q
"RTN","ECXMTL",163,0)
 ;
"RTN","ECXMTL",164,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMTL",165,0)
 S ECHEAD="MTL"
"RTN","ECXMTL",166,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMTL",167,0)
 Q
"RTN","ECXMTL",168,0)
 ;
"RTN","ECXMTL",169,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXMTL",170,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXMTL",171,0)
 Q
"RTN","ECXNUT")
0^8^B32372950^B31564547
"RTN","ECXNUT",1,0)
ECXNUT ;ALB/JRC Nutrition DSS Extract ; 10/31/08 1:57pm
"RTN","ECXNUT",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXNUT",3,0)
BEG ;entry point from option
"RTN","ECXNUT",4,0)
 N EC23,EC7,ECED,ECFILE,ECGRP,ECHEAD,ECINST,ECPACK,ECPIECE,ECRN,ECRTN,ECSD1,ECVER,ECXYM
"RTN","ECXNUT",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNUT",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNUT",7,0)
 Q
"RTN","ECXNUT",8,0)
 ;
"RTN","ECXNUT",9,0)
START ; start package specific extract
"RTN","ECXNUT",10,0)
 ;Init variables
"RTN","ECXNUT",11,0)
 N ECSD,ARRAY
"RTN","ECXNUT",12,0)
 S ECED=ECED+.3,ECSD=ECSD1,ARRAY="^TMP($J,""FH"")"
"RTN","ECXNUT",13,0)
 K @ARRAY
"RTN","ECXNUT",14,0)
 ;
"RTN","ECXNUT",15,0)
 ;Call n&fs api and store in ^TMP($J,"FH" global
"RTN","ECXNUT",16,0)
 D DATA^FHDSSAPI(ECSD,ECED)
"RTN","ECXNUT",17,0)
 ;
"RTN","ECXNUT",18,0)
 ;Get n&fs records from ^TMP($J,"FH" global and file
"RTN","ECXNUT",19,0)
 D GETMEALS^ECXNUT1
"RTN","ECXNUT",20,0)
 ;
"RTN","ECXNUT",21,0)
 ;kill ^tmp global
"RTN","ECXNUT",22,0)
 K @ARRAY
"RTN","ECXNUT",23,0)
 ;
"RTN","ECXNUT",24,0)
 Q
"RTN","ECXNUT",25,0)
 ;
"RTN","ECXNUT",26,0)
GET ;gather extract data
"RTN","ECXNUT",27,0)
 ;Init variables
"RTN","ECXNUT",28,0)
 N ECXORDPC,ECXSSN,ECXPNM,ECXSEX,ECXDOB,ECXMPI,ECXRC1,ECXETH,ECXVET,ECXENRL,ECXELIG,ECXMST,ECXPST,ECXPLOC,ECXPHI,ECXMNS,ECXSTATE,ECXCNTY,ECXZIP,ECXPOS,ECXAST,ECXAOL,ECXRST,ECXEST,ECXTM,ECXDATE,ECXMN,ECXSPC
"RTN","ECXNUT",29,0)
 N ECXADMDT,ECXWRD,ECXFAC,ECXPRV,ECXPRNPI,ECXATT,ECXATNPI,ECXDOM,ECXATTPC,ECXPRVPC,ECXPDIV,ECXCBOC,ECPTPR,ECCLASS,ECPTTM,ECXOBS,ECXHNCI,ECXNPRFI,ECXERI,ECXENC,ECPAT,ECXERR,ADM,W,X,ECXCAT,ECXCVE,ECXPRIOR,ECXPTYPE,ECXSTAT,ECXUESTA,ECXA,ECORNPI
"RTN","ECXNUT",30,0)
 N ECXOEF,ECXOEFDT,ECXCNTRY
"RTN","ECXNUT",31,0)
 ;
"RTN","ECXNUT",32,0)
 ;- Prefix ordering pro with a 2 and get person class
"RTN","ECXNUT",33,0)
 S ECXORDPC=$$PRVCLASS^ECXUTL(+ECXORDPH,DATE)
"RTN","ECXNUT",34,0)
 S ECORNPI=$$NPI^XUSNPI("Individual_ID",+ECXORDPH,DATE)
"RTN","ECXNUT",35,0)
 S:+ECORNPI'>0 ECORNPI="" S ECORNPI=$P(ECORNPI,U)
"RTN","ECXNUT",36,0)
 S ECXORDPH=$S(ECXORDPH:2_ECXORDPH,1:"")
"RTN","ECXNUT",37,0)
 ;
"RTN","ECXNUT",38,0)
 ;set patient file (#2) dfn and get patient demographics
"RTN","ECXNUT",39,0)
 S ECXDFN=$P($G(^TMP($J,"FH","ZN",FHDFN)),U,3)
"RTN","ECXNUT",40,0)
 S ECXERR=0 D PAT(ECXDFN)
"RTN","ECXNUT",41,0)
 Q:ECXERR
"RTN","ECXNUT",42,0)
 ;Set demographic variables
"RTN","ECXNUT",43,0)
 S ECXSSN=ECPAT("SSN"),ECXPNM=ECPAT("NAME"),ECXSEX=ECPAT("SEX"),ECXDOB=ECPAT("DOB"),ECXMPI=ECPAT("MPI"),ECXRC1=ECPAT("RACE1"),ECXETH=ECPAT("ETHNIC"),ECXVET=ECPAT("VET"),ECXENRL=ECPAT("ENROLL LOC"),ECXELIG=ECPAT("ELIG")
"RTN","ECXNUT",44,0)
 S ECXMST=ECPAT("MST STAT"),ECXPST=ECPAT("POW STAT"),ECXPLOC=ECPAT("POW LOC"),ECXPHI=ECPAT("PHI"),ECXMNS=ECPAT("MEANS"),ECXSTATE=ECPAT("STATE"),ECXCNTY=ECPAT("COUNTY"),ECXZIP=ECPAT("ZIP")
"RTN","ECXNUT",45,0)
 S ECXCNTRY=ECPAT("COUNTRY")
"RTN","ECXNUT",46,0)
 S ECXPOS=ECPAT("POS"),ECXAST=ECPAT("AO STAT"),ECXAOL=ECPAT("AOL"),ECXRST=ECPAT("IR STAT"),ECXEST=ECPAT("EC STAT")
"RTN","ECXNUT",47,0)
 ;
"RTN","ECXNUT",48,0)
 ;Get oef/oif data
"RTN","ECXNUT",49,0)
 S ECXOEF=ECPAT("ECXOEF")
"RTN","ECXNUT",50,0)
 S ECXOEFDT=ECPAT("ECXOEFDT")
"RTN","ECXNUT",51,0)
 ;
"RTN","ECXNUT",52,0)
 ;Get enrollment status
"RTN","ECXNUT",53,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXNUT",54,0)
 ;
"RTN","ECXNUT",55,0)
 S ECXTM=$$ECXTIME^ECXUTL(DATE)
"RTN","ECXNUT",56,0)
 S ECXDATE=$$ECXDATE^ECXUTL(+DATE,ECXYM)
"RTN","ECXNUT",57,0)
 ;
"RTN","ECXNUT",58,0)
 ;- Use movement record date & time
"RTN","ECXNUT",59,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,DATE),ECXA=$P(ADM,U)
"RTN","ECXNUT",60,0)
 I $G(P)="INP",$G(ECXA)'="I" Q
"RTN","ECXNUT",61,0)
 S ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3),ECXADMDT=$P(ADM,U,4)
"RTN","ECXNUT",62,0)
 S W=$P(ADM,U,9),ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2)
"RTN","ECXNUT",63,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXNUT",64,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXNUT",65,0)
 ;
"RTN","ECXNUT",66,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXNUT",67,0)
 S ECXCBOC=$$CBOC^ECXSCX2(+ECXFAC) ;Get cboc facility
"RTN","ECXNUT",68,0)
 ;
"RTN","ECXNUT",69,0)
 ;- Get primary care data
"RTN","ECXNUT",70,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,DATE)
"RTN","ECXNUT",71,0)
 S ECPTPR=$P(X,U,2),ECCLASS=$P(X,U,3),ECPTTM=$P(X,U),ECPTNPI=$P(X,U,4)
"RTN","ECXNUT",72,0)
 ;
"RTN","ECXNUT",73,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXNUT",74,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXNUT",75,0)
 ;
"RTN","ECXNUT",76,0)
 ;- Get head and neck cancer indicator
"RTN","ECXNUT",77,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXNUT",78,0)
 ;
"RTN","ECXNUT",79,0)
 ;- Get national patient record flag indicator
"RTN","ECXNUT",80,0)
 N ECXNPRFI D NPRF^ECXUTL5
"RTN","ECXNUT",81,0)
 ;
"RTN","ECXNUT",82,0)
 ;- National response indicator
"RTN","ECXNUT",83,0)
 S ECXERI=$$EMGRES^DGUTL(ECXDFN)
"RTN","ECXNUT",84,0)
 ;
"RTN","ECXNUT",85,0)
 ;- If null encounter number, don't file record
"RTN","ECXNUT",86,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,DATE,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXNUT",87,0)
 D:ECXENC'="" FILE
"RTN","ECXNUT",88,0)
 Q
"RTN","ECXNUT",89,0)
 ;
"RTN","ECXNUT",90,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXNUT",91,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXNUT",92,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXNUT",93,0)
 ;          ECPAT("SSN")
"RTN","ECXNUT",94,0)
 ;          ECPAT("NAME")
"RTN","ECXNUT",95,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXNUT",96,0)
 ;                            1=error condition
"RTN","ECXNUT",97,0)
 N X,OK
"RTN","ECXNUT",98,0)
 ;get data
"RTN","ECXNUT",99,0)
 S ECXERR=0
"RTN","ECXNUT",100,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;2;3;5",.ECPAT)
"RTN","ECXNUT",101,0)
 I 'OK S ECXERR=1
"RTN","ECXNUT",102,0)
 Q ECXERR
"RTN","ECXNUT",103,0)
 ;
"RTN","ECXNUT",104,0)
FILE ;file the n&fs extract record
"RTN","ECXNUT",105,0)
 ;node
"RTN","ECXNUT",106,0)
 ;facility^dfn^ssn^name^in/out^day^time^treating specialty^
"RTN","ECXNUT",107,0)
 ;ordering provider^ordering provider person class^primary 
"RTN","ECXNUT",108,0)
 ;care provider^primary person class^primary care team^mpi^dob^sex^
"RTN","ECXNUT",109,0)
 ;race 1^ethnicity^veteran^enrollment status^enrollment location^
"RTN","ECXNUT",110,0)
 ;enrollment category^enrollment priority^eligibility^period of
"RTN","ECXNUT",111,0)
 ;service^agent orange status^agent orange location^radiation status
"RTN","ECXNUT",112,0)
 ;^environmental contaminants^mst status^head & neck cancer indicator
"RTN","ECXNUT",113,0)
 ;pow status^pow location^purple heart indicator^means test^state code
"RTN","ECXNUT",114,0)
 ;^county code^zip+4^observation patient indicator^rrtp,prrtp and
"RTN","ECXNUT",115,0)
 ;saartp indicator^encounter number^patient division^food production
"RTN","ECXNUT",116,0)
 ;division^delivery division^product feeder key^food production
"RTN","ECXNUT",117,0)
 ;facility^delivery location type^delivery feeder location^quantity^
"RTN","ECXNUT",118,0)
 ;cboc^status^user enrollee^patient type^cv status eligibility^
"RTN","ECXNUT",119,0)
 ;national patient record flag^emergency response indicator^admission
"RTN","ECXNUT",120,0)
 ;date^oef/oif ECXOEF^oef/oif return date ECXOEFDT^ordering provider
"RTN","ECXNUT",121,0)
 ;npi ECORNPI^primary care provider npi ECPTNPI
"RTN","ECXNUT",122,0)
 ;
"RTN","ECXNUT",123,0)
 N DA,DIK,ECODE,ECODE1
"RTN","ECXNUT",124,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXNUT",125,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXNUT",126,0)
 ;
"RTN","ECXNUT",127,0)
 ;convert specialty to PTF Code
"RTN","ECXNUT",128,0)
 ;
"RTN","ECXNUT",129,0)
 N ECXDATA
"RTN","ECXNUT",130,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXNUT",131,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXNUT",132,0)
 ;
"RTN","ECXNUT",133,0)
 S ECODE=ECODE_ECXDATE_U_ECXTM_U_ECXSPC_U_ECXORDPH_U_ECXORDPC_U
"RTN","ECXNUT",134,0)
 S ECODE=ECODE_ECPTPR_U_ECCLASS_U_ECPTTM_U_ECXMPI_U_ECXDOB_U_ECXSEX_U
"RTN","ECXNUT",135,0)
 S ECODE=ECODE_ECXRC1_U_ECXETH_U_ECXVET_U_ECXSTAT_U_ECXENRL_U_ECXCAT_U
"RTN","ECXNUT",136,0)
 S ECODE=ECODE_ECXPRIOR_U_ECXELIG_U_ECXPOS_U_ECXAST_U_ECXAOL_U_ECXRST
"RTN","ECXNUT",137,0)
 S ECODE=ECODE_U_ECXEST_U_ECXMST_U_ECXHNCI_U_ECXPST_U_ECXPLOC_U_ECXPHI
"RTN","ECXNUT",138,0)
 S ECODE=ECODE_U_ECXMNS_U_ECXSTATE_U_ECXCNTY_U
"RTN","ECXNUT",139,0)
 S ECODE1=ECXZIP_U_ECXOBS_U_ECXDOM_U_ECXENC_U_ECXPDIV_U_ECXFPD_U
"RTN","ECXNUT",140,0)
 S ECODE1=ECODE1_ECXFDD_U_ECXKEY_U_ECXFPF_U_ECXDLT_U_ECXDFL_U_ECXQTY_U
"RTN","ECXNUT",141,0)
 S ECODE1=ECODE1_ECXCBOC_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXNPRFI_U
"RTN","ECXNUT",142,0)
 S ECODE1=ECODE1_ECXERI_U_$S(ECXADMDT:$$ECXDATE^ECXUTL(ECXADMDT,ECXYM),1:"")
"RTN","ECXNUT",143,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECXOEF_U_ECXOEFDT_U_$G(ECXTFU)_U_ECORNPI_U_ECPTNPI
"RTN","ECXNUT",144,0)
 I ECXLOGIC>2009 S ECODE1=ECODE1_U_ECXCNTRY
"RTN","ECXNUT",145,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXNUT",146,0)
 S ECRN=ECRN+1
"RTN","ECXNUT",147,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXNUT",148,0)
 Q
"RTN","ECXNUT",149,0)
 ;
"RTN","ECXNUT",150,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXNUT",151,0)
 S ECHEAD="NUT"
"RTN","ECXNUT",152,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNUT",153,0)
 Q
"RTN","ECXOPRX")
0^2^B53251147^B51901081
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 11/5/07 8:17am
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX
"RTN","ECXOPRX",11,0)
 S QFLG=0
"RTN","ECXOPRX",12,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",15,0)
 ;before V6
"RTN","ECXOPRX",16,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 Q:QFLG
"RTN","ECXOPRX",26,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",27,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",28,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",29,0)
 Q
"RTN","ECXOPRX",30,0)
 ;
"RTN","ECXOPRX",31,0)
STUFF ;get data
"RTN","ECXOPRX",32,0)
 N ECXPHA
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA="" Q:'ECDATA
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",39,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",40,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",41,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",42,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",43,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",45,0)
 ;get classification data
"RTN","ECXOPRX",46,0)
 S ECXCLS=$G(^PSRX(ECRX,"IBQ")),ECXMIL=$P(ECXCLS,U,2),ECXAO=$P(ECXCLS,U,3),ECXIR=$P(ECXCLS,U,4),ECXECE=$P(ECXCLS,U,5),ECXHNC=$P(ECXCLS,U,6)
"RTN","ECXOPRX",47,0)
 F X="ECXMIL","ECXAO","ECXIR","ECXECE","ECXHNC" S @X=$S(@X:"Y",@X=0:"N",1:"")
"RTN","ECXOPRX",48,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",49,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",50,0)
 ;get patient specific data
"RTN","ECXOPRX",51,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",52,0)
 I 'ECRFL D
"RTN","ECXOPRX",53,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",54,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",55,0)
 I ECRFL D
"RTN","ECXOPRX",56,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",57,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",58,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",59,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",60,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)["I",ECINV=$S(ECINV:"I",1:""),ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",61,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",62,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",63,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",64,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",65,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",66,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",67,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",68,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",69,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",70,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2),ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",71,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",72,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",73,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",74,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",75,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",76,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",77,0)
 S ECXSCRX=$$SCRX^ECXUTL5(ECRX) ;Service connected rx
"RTN","ECXOPRX",78,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",79,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",80,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",81,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",82,0)
 .. N TMP
"RTN","ECXOPRX",83,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",84,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",85,0)
 .. I (ECXLOGIC>2009),(ECXOBS="YES") S ECXOBS=""
"RTN","ECXOPRX",86,0)
 .. S ECXA="O"
"RTN","ECXOPRX",87,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",88,0)
 Q
"RTN","ECXOPRX",89,0)
 ;
"RTN","ECXOPRX",90,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",91,0)
 N OK,X,PT
"RTN","ECXOPRX",92,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",93,0)
 ;get patient data if saved
"RTN","ECXOPRX",94,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",95,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",96,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",97,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",98,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",99,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",100,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXOPRX",101,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",102,0)
 ;set patient data
"RTN","ECXOPRX",103,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",104,0)
 .K ECXPAT
"RTN","ECXOPRX",105,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",106,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",107,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",108,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",109,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",110,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXOPRX",111,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",112,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",113,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",114,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",115,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",116,0)
 .; OEF/OIF data
"RTN","ECXOPRX",117,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",118,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",119,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",120,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",121,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY
"RTN","ECXOPRX",122,0)
 ;get inpatient data
"RTN","ECXOPRX",123,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",124,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",125,0)
 ;get primary care data
"RTN","ECXOPRX",126,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",127,0)
 Q
"RTN","ECXOPRX",128,0)
 ;
"RTN","ECXOPRX",129,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",130,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",131,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",132,0)
 Q
"RTN","ECXOPRX",133,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",134,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^11^B8589426^B8259189
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 6/6/07 7:23am
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120**;Dec 22, 1997;Build 43
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^placeholder2^qty^cost^placeholder3^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",17,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",18,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",19,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",20,0)
 ;^country ECXCNTRY
"RTN","ECXOPRX1",21,0)
 N DA,DIK
"RTN","ECXOPRX1",22,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",23,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",24,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",25,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_U_ECQTY_U
"RTN","ECXOPRX1",26,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",27,0)
 N ECXDATA
"RTN","ECXOPRX1",28,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",29,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",30,0)
 ;done
"RTN","ECXOPRX1",31,0)
 S ECODE=ECODE_ECXCOST_U_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",32,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",33,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",34,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",35,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",36,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",37,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",42,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",43,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",44,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",45,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",46,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",48,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",49,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",50,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",51,0)
 Q
"RTN","ECXPHVE")
0^19^B4219296^B4185725
"RTN","ECXPHVE",1,0)
ECXPHVE ;ALB/JAM - Pharmacy Volume Edit ; 6/8/09 12:27pm
"RTN","ECXPHVE",2,0)
 ;;3.0;DSS EXTRACTS;**92,120**;Dec 22, 1997;Build 43
"RTN","ECXPHVE",3,0)
 ;
"RTN","ECXPHVE",4,0)
EN ;entry point from menu option
"RTN","ECXPHVE",5,0)
 N DIR,DIRUT,ECXX,Y,STOP,ECPIECE
"RTN","ECXPHVE",6,0)
 N $ESTACK,$ETRAP S $ETRAP="D RESET^ECXPHVE"
"RTN","ECXPHVE",7,0)
 S DIR(0)="SO^P:PRE;I:IVP;U:UDP"
"RTN","ECXPHVE",8,0)
 S DIR("A")="Which extract do you need to edit?"
"RTN","ECXPHVE",9,0)
 D ^DIR I $D(DIRUT) Q
"RTN","ECXPHVE",10,0)
 S ECXX=Y(0),ECPIECE=$S(ECXX="PRE":2,ECXX="IVP":19,1:8)
"RTN","ECXPHVE",11,0)
 S STOP=0 I $P($G(^ECX(728,1,7.1)),"^",ECPIECE)]"" D  I STOP Q
"RTN","ECXPHVE",12,0)
 .W !!,ECXX," Extract running, cannot edit. Try later.",!! S STOP=1
"RTN","ECXPHVE",13,0)
 .K DIR S DIR(0)="E" D ^DIR
"RTN","ECXPHVE",14,0)
 S $P(^ECX(728,1,7.1),"^",ECPIECE)="R"
"RTN","ECXPHVE",15,0)
 D EXTEDT
"RTN","ECXPHVE",16,0)
 Q
"RTN","ECXPHVE",17,0)
 ;
"RTN","ECXPHVE",18,0)
EXTEDT ;Edit extracts - PRE, IVP, or UDP
"RTN","ECXPHVE",19,0)
 N DIC,DIE,DA,DR,DTOUT,DUOUT,Y,D
"RTN","ECXPHVE",20,0)
 S DIC(0)="AENMQZ",DIC("S")="I $$CKREC^ECXPHVE($P(^(0),""^"",3))"
"RTN","ECXPHVE",21,0)
 S DIC("A")="Select "_ECXX_" EXTRACT OR SEQUENCE NUMBER: "
"RTN","ECXPHVE",22,0)
 ;PRE extract (file #727.1) edit Quantity (field #16) & Unit of Issue (field #22)
"RTN","ECXPHVE",23,0)
 I ECXX="PRE" D
"RTN","ECXPHVE",24,0)
 .S DIC="^ECX(727.81,",DR="16;22"
"RTN","ECXPHVE",25,0)
 .D TURNON^DIAUTL(727.81,"16;22","y")
"RTN","ECXPHVE",26,0)
 ;IVP extract (file #727.819) edit Quantity (field #10)&Total Doses per Day (#20)
"RTN","ECXPHVE",27,0)
 I ECXX="IVP" D
"RTN","ECXPHVE",28,0)
 .S DIC="^ECX(727.819,",DR="10;20"
"RTN","ECXPHVE",29,0)
 .D TURNON^DIAUTL(727.819,"10;20","y")
"RTN","ECXPHVE",30,0)
 ;UDP extract (file #727.809) edit Quantity (field #10)
"RTN","ECXPHVE",31,0)
 I ECXX="UDP" D
"RTN","ECXPHVE",32,0)
 .S DIC="^ECX(727.809,",DR="10"
"RTN","ECXPHVE",33,0)
 .D TURNON^DIAUTL(727.809,"10","y")
"RTN","ECXPHVE",34,0)
 F  D  D MIX^DIC1 Q:($D(DTOUT))!($D(DUOUT))!(Y<1)  S DIE=DIC,DA=+Y D ^DIE
"RTN","ECXPHVE",35,0)
 .S D="AC^B"
"RTN","ECXPHVE",36,0)
 .S DIC("W")="W ?30,""  "",$P(^(0),U,2),""  "",?45,$P(^(0),U,3),""  "",?55,$$GET1^DIQ(2,+$P(^(0),U,5),.01,""E"")"
"RTN","ECXPHVE",37,0)
RESET I $G(ECXX)="" Q
"RTN","ECXPHVE",38,0)
 I ECXX="PRE" D TURNON^DIAUTL(727.81,"16;22","e")
"RTN","ECXPHVE",39,0)
 I ECXX="IVP" D TURNON^DIAUTL(727.819,"10;20","e")
"RTN","ECXPHVE",40,0)
 I ECXX="UDP" D TURNON^DIAUTL(727.809,"10","e")
"RTN","ECXPHVE",41,0)
 I $G(ECPIECE) S $P(^ECX(728,1,7.1),"^",ECPIECE)=""
"RTN","ECXPHVE",42,0)
 Q
"RTN","ECXPHVE",43,0)
CKREC(ECXN) ;Checks if record should be edited.
"RTN","ECXPHVE",44,0)
 I ECXN="" Q 0
"RTN","ECXPHVE",45,0)
 I $G(^ECX(727,ECXN,"PURG"))'="" Q 0
"RTN","ECXPHVE",46,0)
 I $G(^ECX(727,ECXN,"TR"))'="" Q 0
"RTN","ECXPHVE",47,0)
 I $G(^ECX(727,ECXN,"Q"))'="" Q 0
"RTN","ECXPHVE",48,0)
 Q 1
"RTN","ECXPIVD2")
0^10^B8697954^B8379900
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 6/5/07 12:39pm
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105,120**;Dec 22, 1997;Build 43
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 ;^country ECXCNTRY
"RTN","ECXPIVD2",19,0)
 N DA,DIK
"RTN","ECXPIVD2",20,0)
 S ECPLACE=""
"RTN","ECXPIVD2",21,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",22,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",23,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",24,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",25,0)
 N ECXDATA
"RTN","ECXPIVD2",26,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",27,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",28,0)
 ;done
"RTN","ECXPIVD2",29,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",30,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",31,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",32,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",33,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",34,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",35,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",37,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",38,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",39,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",40,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",41,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",42,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",43,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",44,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPIVD2",45,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",46,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",47,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",48,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",49,0)
 Q
"RTN","ECXPIVDN")
0^9^B49936544^B49199497
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 10/31/07 1:38pm
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA
"RTN","ECXPIVDN",10,0)
 S QFLG=0
"RTN","ECXPIVDN",11,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",14,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",15,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",16,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",17,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",18,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",19,0)
 .Q:ECXERR
"RTN","ECXPIVDN",20,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",21,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",22,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",23,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",24,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",25,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",26,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",27,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",28,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",29,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",30,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",31,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",32,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",33,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",34,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",35,0)
 Q
"RTN","ECXPIVDN",36,0)
STUFF ;get data
"RTN","ECXPIVDN",37,0)
 N ECORDST
"RTN","ECXPIVDN",38,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",39,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",40,0)
 I ECXA="O" D
"RTN","ECXPIVDN",41,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",42,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",43,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",44,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",45,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",46,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",47,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",48,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",49,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",50,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",51,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",52,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",53,0)
 ..I "^18^23^24^36^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",54,0)
 S ECINV=$P(ECXPHA,U,4),ECINV=$S(ECINV["I":"I",1:""),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",55,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",56,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",57,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",58,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",59,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",60,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",61,0)
 N ECXUSRTN
"RTN","ECXPIVDN",62,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",63,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",64,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",65,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",66,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",67,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",68,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",69,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",70,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",71,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",72,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",73,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",74,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",75,0)
 .I ECXOBS="NO" S ECORDST="PHA"
"RTN","ECXPIVDN",76,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",77,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",78,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",79,0)
 ;get BCMA data
"RTN","ECXPIVDN",80,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",81,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",82,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",83,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",84,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",85,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",86,0)
 Q
"RTN","ECXPIVDN",87,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",88,0)
 N X
"RTN","ECXPIVDN",89,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",90,0)
 ;get patient data if saved
"RTN","ECXPIVDN",91,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",92,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",93,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",94,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",95,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",96,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",97,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXPIVDN",98,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",99,0)
 ;set patient data
"RTN","ECXPIVDN",100,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",101,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",102,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",103,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",104,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXPIVDN",105,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",106,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",107,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",108,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",109,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",110,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",111,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",112,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",113,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",114,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",115,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",116,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",117,0)
 .;save for later
"RTN","ECXPIVDN",118,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",119,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",120,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXPIVDN",121,0)
 ;get primary care data
"RTN","ECXPIVDN",122,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",123,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",124,0)
 ;get inpatient data
"RTN","ECXPIVDN",125,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",126,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",127,0)
 Q
"RTN","ECXPIVDN",128,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",129,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",130,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",131,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",132,0)
 S ECVER=7
"RTN","ECXPIVDN",133,0)
 Q
"RTN","ECXPIVDN",134,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",135,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^14^B35257665^B34644187
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ; 10/17/07 3:47pm
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120**;Dec 22, 1997;Build 43
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",22,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",23,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",24,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",25,0)
 .S ECXDACT=0
"RTN","ECXPRO",26,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 ..;* initialize variables
"RTN","ECXPRO",28,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",29,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",30,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA)=""
"RTN","ECXPRO",31,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP)=""
"RTN","ECXPRO",32,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXAOL,ECXHNCI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",33,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",34,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",35,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",36,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",37,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",38,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",39,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",40,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",41,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",42,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",43,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",44,0)
 ..;OEF/OIF data
"RTN","ECXPRO",45,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",46,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",47,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",48,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",49,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",50,0)
 ..;nppd entry date
"RTN","ECXPRO",51,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",52,0)
 ..;
"RTN","ECXPRO",53,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",54,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",55,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",56,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",57,0)
 ..;
"RTN","ECXPRO",58,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",59,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",60,0)
 ..;
"RTN","ECXPRO",61,0)
 ..;get encounter classifications
"RTN","ECXPRO",62,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR)=""
"RTN","ECXPRO",63,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",64,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",65,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXPRO",66,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",67,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",68,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",69,0)
 ..;
"RTN","ECXPRO",70,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",72,0)
 ..;
"RTN","ECXPRO",73,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",74,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",75,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",76,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",77,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",78,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",79,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",80,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",81,0)
 ;* Send the Exception message
"RTN","ECXPRO",82,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",83,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",84,0)
 .S XMDUZ=.5
"RTN","ECXPRO",85,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",86,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",87,0)
 .D ^XMD
"RTN","ECXPRO",88,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ECXPRO",89,0)
 Q
"RTN","ECXPRO",90,0)
 ;
"RTN","ECXPRO",91,0)
FILE ;file extract record
"RTN","ECXPRO",92,0)
 ;node0
"RTN","ECXPRO",93,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",94,0)
 ;day^feeder location^
"RTN","ECXPRO",95,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",96,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",97,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",98,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",99,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",100,0)
 ;node1
"RTN","ECXPRO",101,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",102,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",103,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",104,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",105,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",106,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",107,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",108,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",109,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",110,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",111,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",112,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",113,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",114,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",115,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",116,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",117,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",118,0)
 ;radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",119,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",120,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI
"RTN","ECXPRO",121,0)
 ;^country ECXCNTRY
"RTN","ECXPRO",122,0)
 N DA,DIK
"RTN","ECXPRO",123,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",124,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",125,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",126,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",127,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",128,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",129,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",130,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",131,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",132,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",133,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",134,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",135,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",136,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",137,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",138,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",139,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",140,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",141,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",142,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",143,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",144,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",145,0)
 Q
"RTN","ECXPRO",146,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",147,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",148,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",149,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",150,0)
 Q
"RTN","ECXPRO",151,0)
 ;
"RTN","ECXPRO",152,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",153,0)
 ;        routines.
"RTN","ECXPRO",154,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",155,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",156,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",157,0)
 ;
"RTN","ECXPRO",158,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",159,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR")
0^30^B40640052^B40606655
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 1/7/08 12:14pm
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120**;Dec 22, 1997;Build 43
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",31,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",32,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",33,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",34,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",35,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",37,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",38,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",39,0)
 ;OEF/OIF data
"RTN","ECXQSR",40,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",41,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",42,0)
 ;
"RTN","ECXQSR",43,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",44,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",45,0)
 Q:ECSTOP=""
"RTN","ECXQSR",46,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",47,0)
 I ECAC D
"RTN","ECXQSR",48,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",49,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",50,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",51,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",52,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",53,0)
 .I "^18^23^24^36^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",54,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",55,0)
 Q:'ECDU
"RTN","ECXQSR",56,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",57,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",58,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",59,0)
 ; was performed.
"RTN","ECXQSR",60,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",61,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",62,0)
 ;if QUASAR v2
"RTN","ECXQSR",63,0)
 I +ECXQV=2 D
"RTN","ECXQSR",64,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",66,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",67,0)
 .S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",68,0)
 .S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",69,0)
 .S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",70,0)
 .S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",71,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",72,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",73,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",74,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",75,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",76,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",77,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",78,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",79,0)
 ;if QUASAR v3
"RTN","ECXQSR",80,0)
 I +ECXQV=3 D
"RTN","ECXQSR",81,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",82,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",83,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",84,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",85,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",86,0)
 ..I ECTP D
"RTN","ECXQSR",87,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",88,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",89,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",90,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",91,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",92,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",93,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",94,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",95,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",96,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",97,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",98,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",99,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",100,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",101,0)
 ..S CNT=$G(STR(P))+1,STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",102,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",103,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",104,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",105,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",106,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",107,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",108,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",109,0)
 ;set up Provider Person class
"RTN","ECXQSR",110,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",111,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",112,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",113,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",114,0)
 F II=2,3 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",115,0)
 .S DA=@XVAR,(DIC,FILEN)=509850.3,DR=".01",DIQ="ECXQSR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXQSR",116,0)
 .S DA=ECXQSR(FILEN,DA,DR,"I"),(DIC,FILEN)=8930.3 D EN^DIQ1 S @XVAR=2_ECXQSR(FILEN,DA,DR,"I") K DA,DIC,DR,DIQ,ECXQSR
"RTN","ECXQSR",117,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",118,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",119,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",120,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",121,0)
 ;get encounter classification
"RTN","ECXQSR",122,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3)
"RTN","ECXQSR",123,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",124,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",125,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXQSR",126,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",127,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",128,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",129,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",130,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",131,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",132,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",133,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",134,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",135,0)
 Q:ECXENC=""
"RTN","ECXQSR",136,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",137,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",138,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",139,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",140,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",141,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",142,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",143,0)
 K CPT,LOC
"RTN","ECXQSR",144,0)
 Q
"RTN","ECXQSR",145,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",146,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",147,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",148,0)
 Q
"RTN","ECXQSR",149,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",150,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^33^B10373755^B9419721
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 6/5/07 12:09pm
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120**;Dec 22, 1997;Build 43
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^secondary icd-9 
"RTN","ECXQSR1",11,0)
 ;#2 ECXICD92^secondary icd-9 #3 ECXICD93^secondary icd-9 #4 ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^dss dept ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",27,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",28,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",29,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",30,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",31,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",32,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",33,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI
"RTN","ECXQSR1",34,0)
 ;
"RTN","ECXQSR1",35,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",36,0)
 N ECXDATA
"RTN","ECXQSR1",37,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",38,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXQSR1",39,0)
 ;done
"RTN","ECXQSR1",40,0)
 N DA,DIK
"RTN","ECXQSR1",41,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",42,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",43,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",44,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",45,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",46,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",47,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",48,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",49,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",50,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",51,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",52,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",53,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",54,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",55,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",56,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",57,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",58,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",59,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",60,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",61,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXQSR1",62,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",63,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",64,0)
 Q
"RTN","ECXQSR1",65,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",66,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",67,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",68,0)
 Q
"RTN","ECXQSR1",69,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",70,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^32^B34986358^B33912770
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ; 5/30/2007
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120**;Dec 22, 1997;Build 43
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",11,0)
 S ECXDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",13,0)
 .S ECXDFN=""
"RTN","ECXRAD",14,0)
 .F  S ECXDFN=$O(^RADPT("AR",ECDT,ECXDFN)) Q:ECXDFN=""  I '$D(^TMP("ECL",$J,ECXDFN)) D GET Q:QFLG
"RTN","ECXRAD",15,0)
 K ^TMP("ECL",$J)
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN
"RTN","ECXRAD",20,0)
 S ^TMP("ECL",$J,ECXDFN)=""
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECXDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,"")) Q:ECXMDA=""
"RTN","ECXRAD",25,0)
 .S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",26,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",27,0)
 .S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",28,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3",.ECXPAT)
"RTN","ECXRAD",29,0)
 .Q:'OK
"RTN","ECXRAD",30,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",31,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXRAD",32,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",33,0)
 .S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",34,0)
 .S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",35,0)
 .S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",36,0)
 .S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",37,0)
 .S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",38,0)
 .;
"RTN","ECXRAD",39,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",40,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",41,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",42,0)
 .S ECXMDA=""
"RTN","ECXRAD",43,0)
 .F  S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",44,0)
 ..S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",45,0)
 ..;
"RTN","ECXRAD",46,0)
 ..;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",47,0)
 ..S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",48,0)
 ..;
"RTN","ECXRAD",49,0)
 ..;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",50,0)
 ..S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",51,0)
 ..S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",52,0)
 ..;
"RTN","ECXRAD",53,0)
 ..;- If no encounter number don't file record
"RTN","ECXRAD",54,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",55,0)
 ..;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",56,0)
 ..;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",57,0)
 ..S ECCN=0
"RTN","ECXRAD",58,0)
 ..F  S ECCN=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",59,0)
 ...S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",60,0)
 ...S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",61,0)
 ...S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",62,0)
 ...S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",63,0)
 ...S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",64,0)
 ...S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",65,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",66,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",67,0)
 ...;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",68,0)
 ...S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",69,0)
 ...S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",70,0)
 ...S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",71,0)
 ...;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",72,0)
 ...S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",73,0)
 ...;get the principal clinic ien DBIA #65
"RTN","ECXRAD",74,0)
 ...S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",75,0)
 ...;get the clinic stop code from file #44
"RTN","ECXRAD",76,0)
 ...S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",77,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",78,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",79,0)
 ...;get CPT code & modifiers
"RTN","ECXRAD",80,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",81,0)
 ...;quit if this is a 'parent' procedure
"RTN","ECXRAD",82,0)
 ...S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",83,0)
 ...Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",84,0)
 ...;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",85,0)
 ...K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",86,0)
 ...I $D(ARR("LABEL")) D
"RTN","ECXRAD",87,0)
 ....K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",88,0)
 ....Q:$D(ERR("DIERR"))
"RTN","ECXRAD",89,0)
 ....S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",90,0)
 ....Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",91,0)
 ....F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",92,0)
 ...S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",93,0)
 ...;get procedure radiology modifiers
"RTN","ECXRAD",94,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",95,0)
 ...F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",96,0)
 ...S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",97,0)
 ...D FILE
"RTN","ECXRAD",98,0)
 Q
"RTN","ECXRAD",99,0)
 ;
"RTN","ECXRAD",100,0)
FILE ;file record
"RTN","ECXRAD",101,0)
 ;node0
"RTN","ECXRAD",102,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",103,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",104,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",105,0)
 ;node1
"RTN","ECXRAD",106,0)
 ;mpi^dss dept^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",107,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",108,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",109,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",110,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",111,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",112,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi
"RTN","ECXRAD",113,0)
 ;
"RTN","ECXRAD",114,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",115,0)
 N ECXDATA
"RTN","ECXRAD",116,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",117,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXRAD",118,0)
 ;done
"RTN","ECXRAD",119,0)
 N DA,DIK
"RTN","ECXRAD",120,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",121,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",122,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",123,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTS_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",124,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",125,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",126,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",127,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",128,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",129,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",130,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",131,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",132,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",133,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",134,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",135,0)
 Q
"RTN","ECXRAD",136,0)
 ;
"RTN","ECXRAD",137,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",138,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",139,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",140,0)
 Q
"RTN","ECXSCLD")
0^25^B162480116^B41231868
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; 6/16/09 3:50pm
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES"
"RTN","ECXSCLD",6,0)
 W !,"file (#728.44)."
"RTN","ECXSCLD",7,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",8,0)
 W !!,"It also compares file #728.44 to the HOSPITAL LOCATION file (#44) to see"
"RTN","ECXSCLD",9,0)
 W !,"if there are any differences since the last time the file was reviewed."
"RTN","ECXSCLD",10,0)
 W !!,"Any differences or new entries will cause an UNREVIEWED CLINICS report"
"RTN","ECXSCLD",11,0)
 W !,"to automatically print.",!
"RTN","ECXSCLD",12,0)
 D SELECT^ECXSCLD
"RTN","ECXSCLD",13,0)
 Q
"RTN","ECXSCLD",14,0)
START ; entry point
"RTN","ECXSCLD",15,0)
 N ZTREQ
"RTN","ECXSCLD",16,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D FIX(EC)
"RTN","ECXSCLD",17,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",18,0)
 ;print 'unreviewed clinics' report
"RTN","ECXSCLD",19,0)
 S ECALL="U" D SPRINT^ECXSCLD
"RTN","ECXSCLD",20,0)
 S ZTREQ="@"
"RTN","ECXSCLD",21,0)
 Q
"RTN","ECXSCLD",22,0)
 ;
"RTN","ECXSCLD",23,0)
FIX(EC) ;
"RTN","ECXSCLD",24,0)
 ; synchronize files #44 and #728.44.
"RTN","ECXSCLD",25,0)
 ; differences are placed in ^XTMP("ECX UNREVIEWED CLINICS")
"RTN","ECXSCLD",26,0)
 S EC=$G(EC)
"RTN","ECXSCLD",27,0)
 I '$D(^SC(EC,0)) Q
"RTN","ECXSCLD",28,0)
 N ECD,DAT
"RTN","ECXSCLD",29,0)
 S ECD=^SC(EC,0),DAT=$G(^SC(EC,"I"))
"RTN","ECXSCLD",30,0)
 I $P(ECD,U,3)'="C" Q
"RTN","ECXSCLD",31,0)
 ; get stop codes and default style for feeder key
"RTN","ECXSCLD",32,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",33,0)
 K ECD2,ECS2,ECDNEW,ECDDIF,ECSCSIGN I $D(^ECX(728.44,EC,0)) S (ECD2,ECDDIF)=^(0),ECSCSIGN=""
"RTN","ECXSCLD",34,0)
 I $D(ECD2) F ECS=2,3,4,5 D
"RTN","ECXSCLD",35,0)
 .S (ECS2(ECS),X)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",36,0)
 .K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",37,0)
 .I +$G(Y)>0 S $P(ECS2(ECS),U,2)=$P(^DIC(40.7,+Y,0),U,3)
"RTN","ECXSCLD",38,0)
 S ID=+DAT,RD=$P(DAT,U,2),ECXINAC=0
"RTN","ECXSCLD",39,0)
 ;change in clinic inactivation for existing entry 
"RTN","ECXSCLD",40,0)
 I $D(ECD2) D
"RTN","ECXSCLD",41,0)
 .;don't include already old inactivated clinics in report
"RTN","ECXSCLD",42,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)=ID S ECXINAC=1
"RTN","ECXSCLD",43,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)'=ID D
"RTN","ECXSCLD",44,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)=ID,ECSCSIGN="*"
"RTN","ECXSCLD",45,0)
 .I ID,RD,(RD'>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",46,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="r"
"RTN","ECXSCLD",47,0)
 .I ID,(ID>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",48,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",49,0)
 .I 'ID,$P(ECD2,U,10) D
"RTN","ECXSCLD",50,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",51,0)
 .S ECDDIF=ECD2
"RTN","ECXSCLD",52,0)
 ;setup for stops
"RTN","ECXSCLD",53,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)_U_$P($G(^DIC(40.7,ECP,0)),U,3)
"RTN","ECXSCLD",54,0)
 S ECDF=$S($P(ECS(18),U)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",55,0)
 S ECDB=EC_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",56,0)
 ;new entry
"RTN","ECXSCLD",57,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",58,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECDB_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",59,0)
 .S $P(^(0),U,6)=ECDF,$P(^(0),U,12)=$P(ECD,U,17)
"RTN","ECXSCLD",60,0)
 .S ECDNEW=^ECX(728.44,EC,0)
"RTN","ECXSCLD",61,0)
 ;changes to existing entry
"RTN","ECXSCLD",62,0)
 I $D(ECD2) D
"RTN","ECXSCLD",63,0)
 .S $P(ECD2,U,1,3)=ECDB,$P(ECDDIF,U,1,3)=ECDB
"RTN","ECXSCLD",64,0)
 .;differs in stop code
"RTN","ECXSCLD",65,0)
 .I +ECS(7)'=+ECS2(2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"!",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",66,0)
 .;differs in credit stop code
"RTN","ECXSCLD",67,0)
 .I +ECS(18)'=+ECS2(3) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"!",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",68,0)
 .;stop code inactive
"RTN","ECXSCLD",69,0)
 .;I $P(ECS(7),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"*",$P(ECDDIF,U,2)=X
"RTN","ECXSCLD",70,0)
 .;credit stop code inactive
"RTN","ECXSCLD",71,0)
 .;I $P(ECS(18),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"*",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",72,0)
 .;dss stop code inactive
"RTN","ECXSCLD",73,0)
 .;I $P(ECS2(4),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,4)_"*",$P(ECDDIF,U,4)=X
"RTN","ECXSCLD",74,0)
 .;dss credit stop code inactive
"RTN","ECXSCLD",75,0)
 .;I $P(ECS2(5),U,2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,5)_"*",$P(ECDDIF,U,5)=X
"RTN","ECXSCLD",76,0)
 .;change in non-count
"RTN","ECXSCLD",77,0)
 .I $P(ECD2,U,12)'=$P(ECD,U,17) S X=$P(ECD,U,17)_"!",$P(ECDDIF,U,12)=X,$P(ECD2,U,12)=$P(ECD,U,17),$P(ECD2,U,7)=""
"RTN","ECXSCLD",78,0)
 .;reset entry
"RTN","ECXSCLD",79,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",80,0)
 ;set tmp node
"RTN","ECXSCLD",81,0)
 S ECSC=$P(ECD,U) S:$L(ECSC)>27 ECSC=$E(ECSC,1,27)
"RTN","ECXSCLD",82,0)
 I $D(ECD2),$P(ECD2,U,7)="" D
"RTN","ECXSCLD",83,0)
 .I ECXINAC,(ECDDIF'["!") Q
"RTN","ECXSCLD",84,0)
 .I $D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) D UPDATE(ECSC,ECDDIF,ECSCSIGN)
"RTN","ECXSCLD",85,0)
 .I '$D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=ECSCSIGN_U_$P(ECDDIF,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",86,0)
 I $D(ECDNEW) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=""_U_$P(ECDNEW,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",87,0)
 Q
"RTN","ECXSCLD",88,0)
 ;
"RTN","ECXSCLD",89,0)
UPDATE(ECSC,ECDDIF,ECSCSIGN) ;update ^xtmp node with today's changes
"RTN","ECXSCLD",90,0)
 N ECXOLD,J,L1,L2,X,X1,X2
"RTN","ECXSCLD",91,0)
 S ECXOLD=^XTMP("ECX UNREVIEWED CLINICS",ECSC)
"RTN","ECXSCLD",92,0)
 F J=2,3 S X1=+$P(ECXOLD,U,J),X2=+$P(ECDDIF,U,J) I X2=X1,$P(ECDDIF,U,J)'=$P(ECXOLD,U,J) D
"RTN","ECXSCLD",93,0)
 .S L1=$L($P(ECXOLD,U,J)),L2=$L($P(ECDDIF,U,J))
"RTN","ECXSCLD",94,0)
 .I L1>L2 S $P(ECDDIF,U,J)=$P(ECXOLD,U,J)
"RTN","ECXSCLD",95,0)
 S X1=$E($P(ECXOLD,U,12),1),X2=$E($P(ECDDIF,U,12),1) I X2=X1 S $P(ECDDIF,U,12)=$P(ECXOLD,U,12)
"RTN","ECXSCLD",96,0)
 S X1=$P(ECXOLD,U),X=X1_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",97,0)
 I ECSCSIGN'="",ECSCSIGN'=X1 S X=ECSCSIGN_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",98,0)
 S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=X
"RTN","ECXSCLD",99,0)
 Q
"RTN","ECXSCLD",100,0)
 ;
"RTN","ECXSCLD",101,0)
SELECT ;select IO device to 'gather clinic stop codes' and print 'unreviewd clinics' report;
"RTN","ECXSCLD",102,0)
 ;for menu option 'Create DSS Clinic Stop Code File' or 'Clinics and DSS Stop Codes Print'
"RTN","ECXSCLD",103,0)
 N DIR,ECALL,IOP,POP,XX,ZTIO,ZTRTN,ZTDESC,ZTSK,ZTSAVE
"RTN","ECXSCLD",104,0)
 ;does user hold key?
"RTN","ECXSCLD",105,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX
"RTN","ECXSCLD",106,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXSCLD",107,0)
 .D PAUSE
"RTN","ECXSCLD",108,0)
 W !,"Please select a print device for the 'Unreviewed Clinics' report."
"RTN","ECXSCLD",109,0)
 W !,"**Please note: If printing in foreground, synching files may cause screen delay."
"RTN","ECXSCLD",110,0)
 W ! S %ZIS="Q" D ^%ZIS
"RTN","ECXSCLD",111,0)
 I POP Q
"RTN","ECXSCLD",112,0)
 ;I IO=IO(0) W !,"You must queue to a print device.",! D HOME^%ZIS G SELECT
"RTN","ECXSCLD",113,0)
 ;queue the report
"RTN","ECXSCLD",114,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCLD",115,0)
 . K ZTSAVE S ZTDESC="Gather Clinic Stop Codes for DSS",ZTRTN="START^ECXSCLD"
"RTN","ECXSCLD",116,0)
 . D ^%ZTLOAD
"RTN","ECXSCLD",117,0)
 . I $G(ZTSK) W !,"Queued as Task #: "_ZTSK D ENDX D PAUSE
"RTN","ECXSCLD",118,0)
 W !!,">> Synchronizing Stop Codes file (#728.44) with the Hospital"
"RTN","ECXSCLD",119,0)
 W !,"   Location file (#44)...",!
"RTN","ECXSCLD",120,0)
 D START
"RTN","ECXSCLD",121,0)
 D ^%ZISC,HOME^%ZIS K IO("Q")
"RTN","ECXSCLD",122,0)
 Q
"RTN","ECXSCLD",123,0)
 ;
"RTN","ECXSCLD",124,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",125,0)
 N OUT,DIR,ECALL
"RTN","ECXSCLD",126,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",127,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (I) Inactive, "
"RTN","ECXSCLD",128,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting approval."
"RTN","ECXSCLD",129,0)
 W !!,"Clinics that were defined as ""inactive"" by MAS the last time the option"
"RTN","ECXSCLD",130,0)
 W !,"""Create DSS Clinic Stop Code File"" was run will be indicated with an ""*"".",!
"RTN","ECXSCLD",131,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("A")="Enter ""A"", ""C"", ""I"", or ""U"""
"RTN","ECXSCLD",132,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",133,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",134,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",135,0)
 S DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",136,0)
 D ^DIR K DIR G ENDX:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",137,0)
 ;sync #728.44 with #44 before printing 'unreviewed'
"RTN","ECXSCLD",138,0)
 I ECALL="U" D  Q
"RTN","ECXSCLD",139,0)
 .W !!,?5,"Before the UNREVIEWED CLINICS report prints, the Clinics and"
"RTN","ECXSCLD",140,0)
 .W !,?5,"Stop Codes file (#728.44) will be synchronized with the Hospital"
"RTN","ECXSCLD",141,0)
 .W !,?5,"Location file (#44).",!!
"RTN","ECXSCLD",142,0)
 .K DIR S DIR(0)="YA",DIR("A")="Do you wish to continue? (Y/N)// " D ^DIR
"RTN","ECXSCLD",143,0)
 .I ('$G(Y)!$G(DIRUT)!$G(DUOUT)!$G(DTOUT)) Q
"RTN","ECXSCLD",144,0)
 .D SELECT^ECXSCLD
"RTN","ECXSCLD",145,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",146,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",147,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",148,0)
 U IO
"RTN","ECXSCLD",149,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCLD",150,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",151,0)
 I ECALL'="U" K ^TMP("EC",$J)
"RTN","ECXSCLD",152,0)
 F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^ECX(728.44,J,0) D
"RTN","ECXSCLD",153,0)
 .I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",154,0)
 .I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",155,0)
 .I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",156,0)
 I ECALL'="U" D
"RTN","ECXSCLD",157,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q
"RTN","ECXSCLD",158,0)
 .F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^TMP("EC",$J,ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",159,0)
 .K ^TMP("EC",$J)
"RTN","ECXSCLD",160,0)
 I ECALL="U" D
"RTN","ECXSCLD",161,0)
 .N ECSCSIGN
"RTN","ECXSCLD",162,0)
 .D HEAD S ECSC=0 I $O(^XTMP("ECX UNREVIEWED CLINICS",ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q
"RTN","ECXSCLD",163,0)
 .F  S ECSC=$O(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) Q:ECSC=""  Q:QFLG  D
"RTN","ECXSCLD",164,0)
 ..S ECSCSIGN=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U),ECD=$P(^XTMP("ECX UNREVIEWED CLINICS",ECSC),U,2,99)
"RTN","ECXSCLD",165,0)
 ..D SHOWEM
"RTN","ECXSCLD",166,0)
 I $E(IOST)="C",'QFLG D SS D ENDX
"RTN","ECXSCLD",167,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",168,0)
 Q
"RTN","ECXSCLD",169,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",170,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD",171,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?71,"Page: ",PG
"RTN","ECXSCLD",172,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",173,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",174,0)
 W !
"RTN","ECXSCLD",175,0)
 W !,?1,"CLINIC",?28,"STOP",?35,"CREDIT",?44,"DSS",?50,"DSS",?59,"ACTION",?68,"NAT'L",?74,"C/N"
"RTN","ECXSCLD",176,0)
 W !,?28,"CODE",?35,"STOP",?44,"STOP",?50,"CREDIT",?68,"CODE"
"RTN","ECXSCLD",177,0)
 W ! W:ECALL'="U" "( * - currently inactive)" W ?35,"CODE",?44,"CODE",?50,"CODE"
"RTN","ECXSCLD",178,0)
 I ECALL="U" W !,?8,"* - inactive     r - reactivated    ! - updated since last review"
"RTN","ECXSCLD",179,0)
 W !,LN
"RTN","ECXSCLD",180,0)
 Q
"RTN","ECXSCLD",181,0)
 ;
"RTN","ECXSCLD",182,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",183,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",184,0)
 N ECNON1P
"RTN","ECXSCLD",185,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD",186,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD",187,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD",188,0)
 W !!,$E(ECSC,1,25)
"RTN","ECXSCLD",189,0)
 I ECALL="U" S:ECD["!" ECSCSIGN=ECSCSIGN_"!" W ECSCSIGN
"RTN","ECXSCLD",190,0)
 E  I ECALL'="U" W:$P(ECD,U,9)]"" "*"
"RTN","ECXSCLD",191,0)
 F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",192,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?68,$S(ECN]"":ECN,1:"____"),?75,ECNON
"RTN","ECXSCLD",193,0)
 Q
"RTN","ECXSCLD",194,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",195,0)
 N JJ,SS
"RTN","ECXSCLD",196,0)
 W !,LN
"RTN","ECXSCLD",197,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactive"
"RTN","ECXSCLD",198,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",199,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",200,0)
 Q
"RTN","ECXSCLD",201,0)
 ;
"RTN","ECXSCLD",202,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",203,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",204,0)
 W ! K DIC S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G ENDX:Y<0
"RTN","ECXSCLD",205,0)
 S CLIEN=+Y
"RTN","ECXSCLD",206,0)
 W !,"STOP CODE : ",$P(Y(0),U,2),!,"CREDIT STOP CODE : ",$P(Y(0),U,3)
"RTN","ECXSCLD",207,0)
 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",208,0)
 S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD",209,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",210,0)
 .S STOP=$P(^ECX(728.44,CLIEN,0),U,4)
"RTN","ECXSCLD",211,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD",212,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",213,0)
 .D ^DIR
"RTN","ECXSCLD",214,0)
 .I X="@" D  Q
"RTN","ECXSCLD",215,0)
 ..S IENS=CLIEN_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",216,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",217,0)
 .I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD",218,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD",219,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",220,0)
 .S AMIS=X K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",221,0)
 .I $D(Y(0)) W " ",$P(Y(0),"^")
"RTN","ECXSCLD",222,0)
 .I Y=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",223,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN)
"RTN","ECXSCLD",224,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",225,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",226,0)
 .S IENS=CLIEN_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("","FDA")
"RTN","ECXSCLD",227,0)
 .S OUT=1
"RTN","ECXSCLD",228,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",229,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD",230,0)
 S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD",231,0)
 .K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD",232,0)
 .S CSTOP=$P(^ECX(728.44,CLIEN,0),U,5)
"RTN","ECXSCLD",233,0)
 .S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD",234,0)
 .S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD",235,0)
 .D ^DIR
"RTN","ECXSCLD",236,0)
 .I X="@" D  Q
"RTN","ECXSCLD",237,0)
 ..S IENS=CLIEN_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD",238,0)
 ..S OUT=1 W "   deleted..."
"RTN","ECXSCLD",239,0)
 .I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD",240,0)
 .I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD",241,0)
 .I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",242,0)
 .S AMIS=X K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",243,0)
 .I $D(Y(0)) W " ",$P(Y(0),"^")
"RTN","ECXSCLD",244,0)
 .I Y=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",245,0)
 .S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN)
"RTN","ECXSCLD",246,0)
 .I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD",247,0)
 .I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD",248,0)
 .S IENS=CLIEN_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("","FDA")
"RTN","ECXSCLD",249,0)
 .S OUT=1
"RTN","ECXSCLD",250,0)
 I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD",251,0)
 ;remaining fields
"RTN","ECXSCLD",252,0)
 S DIE=728.44,DA=+CLIEN
"RTN","ECXSCLD",253,0)
 S DR="5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE
"RTN","ECXSCLD",254,0)
 S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)=""
"RTN","ECXSCLD",255,0)
 K DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","ECXSCLD",256,0)
 K CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",257,0)
 G EDIT
"RTN","ECXSCLD",258,0)
 ;
"RTN","ECXSCLD",259,0)
ERRCHK(CODE,TYPE,CLIEN) ;check for problems
"RTN","ECXSCLD",260,0)
 ;input
"RTN","ECXSCLD",261,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD",262,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD",263,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD",264,0)
 ;output
"RTN","ECXSCLD",265,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD",266,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD",267,0)
 K ECXERR,WARNING
"RTN","ECXSCLD",268,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD",269,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN) -1
"RTN","ECXSCLD",270,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD",271,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD",272,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD",273,0)
 D STOP^ECXSTOP(XCODE,TYPE,CLIEN)
"RTN","ECXSCLD",274,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD",275,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD",276,0)
 Q ECXERR
"RTN","ECXSCLD",277,0)
 ;
"RTN","ECXSCLD",278,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",279,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",280,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",281,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",282,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",283,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",284,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",285,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",286,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G ENDX
"RTN","ECXSCLD",287,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G ENDX
"RTN","ECXSCLD",288,0)
 ;
"RTN","ECXSCLD",289,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",290,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^ECX(728.44,EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",291,0)
 S ZTREQ="@"
"RTN","ECXSCLD",292,0)
 K ^XTMP("ECX UNREVIEWED CLINICS") S ^XTMP("ECX UNREVIEWED CLINICS",0)=$$FMADD^XLFDT(DT,180)_U_DT_U_"ECX UNREVIEWED CLINICS"
"RTN","ECXSCLD",293,0)
ENDX K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN,ZTRTN,ZTIO,ZTDESC
"RTN","ECXSCLD",294,0)
 K DIR,DIRUT,DTOUT,DUOUT,CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",295,0)
 K J,ECSC,ECSD,ECDATE,ECD,ECN,ECNON,ECXINAC,QFLG,PG,LN,SS,POP,%ZIS
"RTN","ECXSCLD",296,0)
 K EC,ECD,ECD2,ECL,ECS,ECS2,ECP,ECSC,ECSC2,ECDB,ECDNEW,ECDDIF,ECSCSIGN,ECDF,ECALL,ID,RD
"RTN","ECXSCLD",297,0)
 Q
"RTN","ECXSCLD",298,0)
 ;
"RTN","ECXSCLD",299,0)
PAUSE ;pause screen
"RTN","ECXSCLD",300,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXSCLD",301,0)
 S DIR(0)="E" W !! D ^DIR W !!
"RTN","ECXSCLD",302,0)
 Q
"RTN","ECXSCLD",303,0)
 ;
"RTN","ECXSCLD",304,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",305,0)
 N DAT,ECD0,ECXMISS,ID,ECGRP
"RTN","ECXSCLD",306,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",307,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^SC(EC,0)),$P(^SC(EC,0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",308,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",309,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",310,0)
 D ^ECXSCX1
"RTN","ECXSCLD",311,0)
 Q
"RTN","ECXSCRP")
0^22^B19429166^B20108565
"RTN","ECXSCRP",1,0)
ECXSCRP ;ALB/JAM - Restricted Stop Code Nonconforming Clinic Report; 07/24/03 ; 9/24/09 10:57am
"RTN","ECXSCRP",2,0)
 ;;3.0;DSS EXTRACTS;**57,58,120**;Dec 22, 1997;Build 43
"RTN","ECXSCRP",3,0)
 ;
"RTN","ECXSCRP",4,0)
EN ;foreground entry point
"RTN","ECXSCRP",5,0)
 N ZTRTN,ZTDESC,ZTIO,ZTQUEUED,DIR,DIRUT,X,Y,ECX,ECXSD,PSC,SSC,ECXPCF
"RTN","ECXSCRP",6,0)
 W @IOF
"RTN","ECXSCRP",7,0)
 W !,"This option synchronizes the Primary and Secondary Stop Codes in the Clinics"
"RTN","ECXSCRP",8,0)
 W !,"and Stop Codes File #728.44 with those in the Hospital Location File #44."
"RTN","ECXSCRP",9,0)
 W !,"It produces a report highlighting any non conformance reasons that pertain"
"RTN","ECXSCRP",10,0)
 W !,"to the Primary and Secondary Codes. Please contact the responsible party"
"RTN","ECXSCRP",11,0)
 W !,"for corrective action."
"RTN","ECXSCRP",12,0)
 S DIR(0)="SO^A:Active Clinics;I:Inactive Clinics;B:Both"
"RTN","ECXSCRP",13,0)
 S DIR("A")="Select Report"
"RTN","ECXSCRP",14,0)
 S DIR("?",1)="Enter an A for Active Clinics, I for Inactive Clinics,"
"RTN","ECXSCRP",15,0)
 S DIR("?")="B for Both Active and Inactive Clinics"
"RTN","ECXSCRP",16,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECXSCRP",17,0)
 S ECXPCF=Y
"RTN","ECXSCRP",18,0)
 W ".  Please be patient, this may take a few moments..."
"RTN","ECXSCRP",19,0)
 ;Synch primary & secondary stop codes from file #44 with #728.44
"RTN","ECXSCRP",20,0)
 S ECX=0 F  S ECX=$O(^ECX(728.44,ECX)) Q:'ECX  D FIX^ECXSCLD(ECX)
"RTN","ECXSCRP",21,0)
 ;device selection
"RTN","ECXSCRP",22,0)
 K IOP,%ZIS,POP,IO("Q")
"RTN","ECXSCRP",23,0)
 S %ZIS("A")="Select Device: ",%ZIS="QM" D ^%ZIS I POP G END
"RTN","ECXSCRP",24,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECXSCRP",25,0)
 .S ZTDESC="Restricted Stop Code/DSS Identifier Report",ZTSAVE("ECXPCF")=""
"RTN","ECXSCRP",26,0)
 .S ZTRTN="PROCESS^ECXSCRP",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECXSCRP",27,0)
 U IO
"RTN","ECXSCRP",28,0)
 D PROCESS
"RTN","ECXSCRP",29,0)
END D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXSCRP",30,0)
 Q
"RTN","ECXSCRP",31,0)
 ;
"RTN","ECXSCRP",32,0)
PROCESS ;background entry point
"RTN","ECXSCRP",33,0)
 ;locate invalid Stop Code in HOSPITAL LOCATION file #44 & CLINICS
"RTN","ECXSCRP",34,0)
 ;AND STOP CODES file #728.44
"RTN","ECXSCRP",35,0)
 N ECX,NAM,STR,IEN,PSC,SSC,CNTX,ECXPG,ECXOUT,LNS,DPC,DSC,SCIEN,ECXF
"RTN","ECXSCRP",36,0)
 N INDT,TYP,ACF,HTYP,CLNF,ECXRDT
"RTN","ECXSCRP",37,0)
 S %H=$H D YX^%DTC S ECXRDT=Y
"RTN","ECXSCRP",38,0)
 S $P(LNS,"-",80)="",(CNTX,IEN,ECXOUT,ECXF)=0,ECXPG=1,CLNF=0
"RTN","ECXSCRP",39,0)
 ;search file #728.44 for invalid stop code entries
"RTN","ECXSCRP",40,0)
 D HDR S IEN=0
"RTN","ECXSCRP",41,0)
 F  S IEN=$O(^ECX(728.44,IEN)) Q:'IEN  D  Q:ECXOUT  S:ECXF CNTX=CNTX+1
"RTN","ECXSCRP",42,0)
 .S ECX=$G(^ECX(728.44,IEN,0)),PSC=$P(ECX,U,2),SSC=$P(ECX,U,3),CLNF=0
"RTN","ECXSCRP",43,0)
 .S DPC=$P(ECX,U,4),DSC=$P(ECX,U,5),NAM=$$GET1^DIQ(44,$P(ECX,U),.01)
"RTN","ECXSCRP",44,0)
 .S INDT=$P(ECX,U,10),ECXF=0 I INDT'="" S NAM="*"_NAM
"RTN","ECXSCRP",45,0)
 .S ACF=$S($E(NAM)="*":0,1:1),HTYP=$$GET1^DIQ(44,$P(ECX,U),2,"I")
"RTN","ECXSCRP",46,0)
 .I $S((ECXPCF="A")&('ACF):1,(ECXPCF="I")&(ACF):1,1:0) Q
"RTN","ECXSCRP",47,0)
 .D  I ECXOUT Q
"RTN","ECXSCRP",48,0)
 ..I PSC="" S STR="Missing primary code" D PRN Q
"RTN","ECXSCRP",49,0)
 ..D SCCHK(PSC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",50,0)
 .I SSC'="" D SCCHK(SSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",51,0)
 .D  I ECXOUT Q 
"RTN","ECXSCRP",52,0)
 ..I DPC="" S STR="No DSS primary code" D PRN Q
"RTN","ECXSCRP",53,0)
 ..I DPC'=PSC D SCCHK(DPC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",54,0)
 .I DSC'="",DSC'=SSC D SCCHK(DSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",55,0)
 W !!,?25,$S(CNTX:CNTX,1:"NO")_" PROBLEM CLINICS FOUND."
"RTN","ECXSCRP",56,0)
 Q
"RTN","ECXSCRP",57,0)
PRN ;print line
"RTN","ECXSCRP",58,0)
 Q:CLNF  I HTYP'="C" S STR="Not a Clinic" S CLNF=1
"RTN","ECXSCRP",59,0)
 I ($Y+3)>IOSL D PAGE,HDR I ECXOUT Q
"RTN","ECXSCRP",60,0)
 W !,IEN,?8,$E(NAM,1,24),?33,PSC,?38,SSC,?45,DPC,?50,DSC,?57,STR
"RTN","ECXSCRP",61,0)
 S ECXF=1
"RTN","ECXSCRP",62,0)
 Q
"RTN","ECXSCRP",63,0)
 ;
"RTN","ECXSCRP",64,0)
SCCHK(SCIEN,TYP) ;check stop code against file 40.7
"RTN","ECXSCRP",65,0)
 N SCN,RTY,CTY,SCI,INACT
"RTN","ECXSCRP",66,0)
 K STR
"RTN","ECXSCRP",67,0)
 S CTY=$S(TYP="P":"^P^E^",1:"^S^E^")
"RTN","ECXSCRP",68,0)
 S SCI=$$SCIEN(SCIEN) I SCI="" D  Q
"RTN","ECXSCRP",69,0)
 .I TYP="S" Q:SSC=PSC  Q:DSC=DPC
"RTN","ECXSCRP",70,0)
 .S STR=SCIEN_" Invalid Stop Code"
"RTN","ECXSCRP",71,0)
 S SCN=$G(^DIC(40.7,SCI,0)),RTY=$P(SCN,U,6),INACT=$P(SCN,U,3)
"RTN","ECXSCRP",72,0)
 I INACT D  Q
"RTN","ECXSCRP",73,0)
 .I INACT>DT S STR=SCIEN_" inactive in future"
"RTN","ECXSCRP",74,0)
 .E  S STR=SCIEN_" code is inactive"
"RTN","ECXSCRP",75,0)
 I $P(SCN,U,2)="" S STR="No pointer in file #40.7" Q
"RTN","ECXSCRP",76,0)
 I RTY="" S STR=SCIEN_" No restriction type" Q
"RTN","ECXSCRP",77,0)
 I CTY'[("^"_RTY_"^") D
"RTN","ECXSCRP",78,0)
 .S STR=SCIEN_" cannot be "_$S(TYP="P":"prim",1:"second")_"ary"
"RTN","ECXSCRP",79,0)
 Q
"RTN","ECXSCRP",80,0)
PAGE ;
"RTN","ECXSCRP",81,0)
 N SS,JJ,DIR,X,Y
"RTN","ECXSCRP",82,0)
 I $E(IOST,1,2)="C-" D
"RTN","ECXSCRP",83,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCRP",84,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECXOUT=1
"RTN","ECXSCRP",85,0)
 Q
"RTN","ECXSCRP",86,0)
 ;
"RTN","ECXSCRP",87,0)
SCIEN(SCIEN) ;Get stop code IEN
"RTN","ECXSCRP",88,0)
 I SCIEN="" Q ""
"RTN","ECXSCRP",89,0)
 S SCIEN=$O(^DIC(40.7,"C",SCIEN,0))
"RTN","ECXSCRP",90,0)
 Q SCIEN
"RTN","ECXSCRP",91,0)
 ;
"RTN","ECXSCRP",92,0)
HDR ;header for data from file #728.44
"RTN","ECXSCRP",93,0)
 W @IOF
"RTN","ECXSCRP",94,0)
 W ECXRDT,?73,"Page: ",ECXPG,!
"RTN","ECXSCRP",95,0)
 W !,?18,"DSS IDENTIFIER NON-CONFORMING CLINICS REPORT",!,?32
"RTN","ECXSCRP",96,0)
 W $S(ECXPCF="A":"Active",ECXPCF="I":"Inactive",1:"All")_" Clinics",!
"RTN","ECXSCRP",97,0)
 W !,"CLINICS AND STOP CODES File (#728.44) - (Use 'Enter/Edit DSS "
"RTN","ECXSCRP",98,0)
 W "Stop Codes for",!,?25,"Clinics' [ECXSCEDIT] menu option to "
"RTN","ECXSCRP",99,0)
 W "make corrections)",!!,?45,"DSS",?50,"DSS"
"RTN","ECXSCRP",100,0)
 W !,?33,"PRIM",?38,"2NDARY",?45,"PRIM",?50,"2NDARY"
"RTN","ECXSCRP",101,0)
 W !,?8,$S(ECXPCF="B":"CLINIC NAME",1:""),?33,"STOP",?38,"CREDIT"
"RTN","ECXSCRP",102,0)
 W ?45,"STOP",?50,"CREDIT",?57,"REASON FOR NON-",!
"RTN","ECXSCRP",103,0)
 W "IEN #",?8,$S(ECXPCF="B":"(*currently inactive)",1:"CLINIC NAME")
"RTN","ECXSCRP",104,0)
 W ?33,"CODE",?38,"CODE",?45,"CODE",?50,"CODE",?57,"CONFORMANCE"
"RTN","ECXSCRP",105,0)
 W !,$E(LNS,1,80)
"RTN","ECXSCRP",106,0)
 S ECXPG=ECXPG+1
"RTN","ECXSCRP",107,0)
 Q
"RTN","ECXSCX2")
0^6^B8788223^B8581538
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ; 6/5/2007
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84,92,105,120**;Dec 22, 1997;Build 43
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXCNTRY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE,ECXHNC)=""
"RTN","ECXSCX2",10,0)
 Q
"RTN","ECXSCX2",11,0)
 ;
"RTN","ECXSCX2",12,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",13,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",14,0)
 S ECXERR=0
"RTN","ECXSCX2",15,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",16,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",17,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",18,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",19,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",20,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",21,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",22,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",23,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",24,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXSCX2",25,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",26,0)
 ; changes for 2001
"RTN","ECXSCX2",27,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",28,0)
 ;- Agent Orange location
"RTN","ECXSCX2",29,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",30,0)
 ;OEF/OIF data
"RTN","ECXSCX2",31,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSCX2",32,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSCX2",33,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",34,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",35,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",36,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",37,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",38,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",39,0)
 ; - Environmental Contaminants
"RTN","ECXSCX2",40,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",41,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXSCX2",42,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXSCX2",43,0)
 Q
"RTN","ECXSCX2",44,0)
 ;
"RTN","ECXSCX2",45,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",46,0)
 N K,X
"RTN","ECXSCX2",47,0)
 ;get primary care data
"RTN","ECXSCX2",48,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",49,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",50,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",51,0)
 ;get inpatient data
"RTN","ECXSCX2",52,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",53,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",54,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",55,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",56,0)
 Q
"RTN","ECXSCX2",57,0)
 ;
"RTN","ECXSCX2",58,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",59,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",60,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",61,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",62,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",63,0)
 Q
"RTN","ECXSCX2",64,0)
 ;
"RTN","ECXSCX2",65,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",66,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",67,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",68,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",69,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",70,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",71,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",72,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCX3")
0^23^B12749405^n/a
"RTN","ECXSCX3",1,0)
ECXSCX3 ;ALB/DHE- DSS Clinic & Stop Codes Validity Report 728.44 ; 6/11/09 3:21pm
"RTN","ECXSCX3",2,0)
 ;;3.0;DSS EXTRACTS;**120**;Dec 22, 1997;Build 43
"RTN","ECXSCX3",3,0)
EN ;entry point from option
"RTN","ECXSCX3",4,0)
 ;
"RTN","ECXSCX3",5,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTSK,ZUSR,ZTDTH,POP
"RTN","ECXSCX3",6,0)
 W !!,"This report will display stop code information of the ACTIVE ",!,"clinics in the Clinics and Stop Code file (#728.44).  It will",!,"display stop codes that do not conform to the Business Rules for ",!,"Valid Stop Codes.",!!
"RTN","ECXSCX3",7,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCX3",8,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","ECXSCX3",9,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCX3",10,0)
 . K ZTSAVE S ZTDESC="DSS Identify Invalid Stop and Credit Stop Codes",ZTRTN="START^ECXSCX3",ZTDTH=$H
"RTN","ECXSCX3",11,0)
 . D ^%ZTLOAD
"RTN","ECXSCX3",12,0)
 . D ^%ZISC,HOME^%ZIS
"RTN","ECXSCX3",13,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED!",1:"REQUEST CANCELLED!")
"RTN","ECXSCX3",14,0)
 D START
"RTN","ECXSCX3",15,0)
EXIT D ^%ZISC,HOME^%ZIS
"RTN","ECXSCX3",16,0)
 Q
"RTN","ECXSCX3",17,0)
START ; queued entry to print report
"RTN","ECXSCX3",18,0)
 U IO
"RTN","ECXSCX3",19,0)
 N CLIEN,CODE,ERR,QUIT,WRN,TOT,CODE1,CODE2,CODE3,CODE4,CLNAME,DATE
"RTN","ECXSCX3",20,0)
 N I,INACT,Y,HEAD,NONAME,QFLG,LN,PG,DAT,REACT
"RTN","ECXSCX3",21,0)
 K WARNING,ECXERR,TYPE
"RTN","ECXSCX3",22,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCX3",23,0)
 S TOT=0,QUIT=""
"RTN","ECXSCX3",24,0)
 D HEAD
"RTN","ECXSCX3",25,0)
 S CLIEN=0 F  S CLIEN=$O(^ECX(728.44,CLIEN)) Q:'CLIEN  D  Q:QUIT
"RTN","ECXSCX3",26,0)
 . Q:'$D(^ECX(728.44,CLIEN,0))
"RTN","ECXSCX3",27,0)
 . S DAT=$G(^SC(CLIEN,"I")),INACT=+DAT,REACT=$P(DAT,"^",2)
"RTN","ECXSCX3",28,0)
 . ;S INACT=$P(^ECX(728.44,CLIEN,0),"^",10)
"RTN","ECXSCX3",29,0)
 . ;I (INACT'>DT)&(INACT'="") Q
"RTN","ECXSCX3",30,0)
 . I INACT,('REACT),INACT'>DT Q
"RTN","ECXSCX3",31,0)
 . I INACT,INACT'>DT I REACT,DT<REACT Q
"RTN","ECXSCX3",32,0)
 . S CLNAME=$S($G(CLIEN)>0:$E($$GET1^DIQ(44,CLIEN,.01,"E"),1,30),1:NONAME)
"RTN","ECXSCX3",33,0)
 . K WARNING,ECXERR,TYPE,ERR,WRN
"RTN","ECXSCX3",34,0)
 . S DATE=DT
"RTN","ECXSCX3",35,0)
 . S CODE1=$P(^ECX(728.44,CLIEN,0),"^",2),TYPE="Stop Code" D STOP^ECXSTOP(CODE1,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",36,0)
 . S CODE2=$P(^ECX(728.44,CLIEN,0),"^",3),TYPE="Credit Stop Code" D STOP^ECXSTOP(CODE2,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",37,0)
 . S CODE3=$P(^ECX(728.44,CLIEN,0),"^",4),TYPE="DSS Stop Code" D STOP^ECXSTOP(CODE3,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",38,0)
 . S CODE4=$P(^ECX(728.44,CLIEN,0),"^",5),TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(CODE4,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",39,0)
 . I $D(ECXERR)!($D(WARNING)) S TOT=TOT+1 D  Q:QUIT
"RTN","ECXSCX3",40,0)
 . . I $Y>(IOSL-5) D HEAD
"RTN","ECXSCX3",41,0)
 . . W !!,CLIEN,?6,CLNAME,?46,$G(CODE1),?54,$G(CODE2),?62,$G(CODE3),?70,$G(CODE4)
"RTN","ECXSCX3",42,0)
 . . I $D(ECXERR) W !,"ERRORS:" D
"RTN","ECXSCX3",43,0)
 . . . S I=0 F  S I=$O(ECXERR(I)) Q:'I  D  Q:QUIT
"RTN","ECXSCX3",44,0)
 . . . . W !?6,ECXERR(I) D ADD
"RTN","ECXSCX3",45,0)
 . . I $D(WARNING) W !,"WARNINGS:" D
"RTN","ECXSCX3",46,0)
 . . . S I=0 F  S I=$O(WARNING(I)) Q:'I  D  Q:QUIT
"RTN","ECXSCX3",47,0)
 . . . . W !?6,WARNING(I) D ADD
"RTN","ECXSCX3",48,0)
 Q:QUIT
"RTN","ECXSCX3",49,0)
 ;
"RTN","ECXSCX3",50,0)
OUT ;
"RTN","ECXSCX3",51,0)
 I TOT'>0 W !!!?6,"NO PROBLEMS FOUND."
"RTN","ECXSCX3",52,0)
 E  W !!!,?10,TOT," PROBLEM CLINICS FOUND."
"RTN","ECXSCX3",53,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCX3",54,0)
 K QFLG,PG,LN,ECXERR,WARNING
"RTN","ECXSCX3",55,0)
 D ^ECXKILL
"RTN","ECXSCX3",56,0)
 Q
"RTN","ECXSCX3",57,0)
 ;
"RTN","ECXSCX3",58,0)
HEAD ; header for worksheet
"RTN","ECXSCX3",59,0)
 W:$E(IOST,1,2)["C-"!(PG>1) @IOF S PG=PG+1
"RTN","ECXSCX3",60,0)
 W !,"DSS CLINIC & STOP CODES VALIDITY REPORT",?71,"Page: ",PG
"RTN","ECXSCX3",61,0)
 W !!,"IEN#",?6,"CLINIC NAME",?46,"PRIM",?54,"2NDARY",?62,"DSS",?70,"DSS"
"RTN","ECXSCX3",62,0)
 W !?46,"STOP",?54,"CREDIT",?62,"PRIM",?70,"2NDARY"
"RTN","ECXSCX3",63,0)
 W !?46,"CODE",?54,"STOP",?62,"STOP",?70,"CREDIT"
"RTN","ECXSCX3",64,0)
 W !?54,"CODE",?62,"CODE",?70,"CODE"
"RTN","ECXSCX3",65,0)
 W !,LN
"RTN","ECXSCX3",66,0)
 Q
"RTN","ECXSCX3",67,0)
 ;
"RTN","ECXSCX3",68,0)
PAUSE N DIR,DIRUT,X,Y
"RTN","ECXSCX3",69,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","ECXSCX3",70,0)
 S DIR(0)="E"
"RTN","ECXSCX3",71,0)
 D ^DIR
"RTN","ECXSCX3",72,0)
 I ('(+Y))!($D(DIRUT)) S QUIT=1
"RTN","ECXSCX3",73,0)
 Q
"RTN","ECXSCX3",74,0)
ADD I $E(IOST,1,2)="C-",($Y>(IOSL-5)) D
"RTN","ECXSCX3",75,0)
 . D PAUSE Q:QUIT
"RTN","ECXSCX3",76,0)
 . D HEAD
"RTN","ECXSCX3",77,0)
 I $E(IOST,1,2)'="C-",($Y>(IOSL-5)) D HEAD
"RTN","ECXSCX3",78,0)
 Q
"RTN","ECXSCX3",79,0)
 ;
"RTN","ECXSCXN")
0^7^B57854664^B57423281
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 6/5/07 11:55am
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120**;Dec 22, 1997;Build 43
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..;get date specific patient data
"RTN","ECXSCXN",69,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",70,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",72,0)
 ..;get visit specific data
"RTN","ECXSCXN",73,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",74,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",75,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",76,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",77,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",78,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV")
"RTN","ECXSCXN",79,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",80,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",81,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",82,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",83,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",84,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",85,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",86,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",87,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",88,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",89,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",90,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",91,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",92,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",93,0)
 ..;appointments
"RTN","ECXSCXN",94,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",95,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",96,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",97,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",98,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",99,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",100,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",101,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",102,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",103,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",104,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",105,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",106,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",107,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",108,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",109,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",110,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",111,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",112,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",113,0)
 ...S ALEN=0
"RTN","ECXSCXN",114,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",115,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",116,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",117,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",118,0)
 ..;dispositions
"RTN","ECXSCXN",119,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",120,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",121,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",122,0)
 Q
"RTN","ECXSCXN",123,0)
 ;
"RTN","ECXSCXN",124,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",125,0)
 N STR
"RTN","ECXSCXN",126,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",127,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",128,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",129,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",130,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",131,0)
 N ECXDATA
"RTN","ECXSCXN",132,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",133,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXSCXN",134,0)
 ;done
"RTN","ECXSCXN",135,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTS_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",136,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",137,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",138,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",139,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",140,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",141,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",142,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",143,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",144,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",145,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",146,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",147,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",148,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",149,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",150,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",151,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",152,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",153,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",154,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",155,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",156,0)
 Q
"RTN","ECXSCXN",157,0)
 ;
"RTN","ECXSCXN",158,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",159,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",160,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",161,0)
 Q
"RTN","ECXSTOP")
0^24^B10000186^n/a
"RTN","ECXSTOP",1,0)
ECXSTOP ;ALB/DHE Stop Codes/Clinic Stops ; 6/16/09 11:41am
"RTN","ECXSTOP",2,0)
 ;;3.0;DSS EXTRACTS;**120**;Dec 22, 1997;Build 43
"RTN","ECXSTOP",3,0)
 ;
"RTN","ECXSTOP",4,0)
STOP(CODE,TYPE,CLIEN,DATE) ;api to return stop code information
"RTN","ECXSTOP",5,0)
 ;
"RTN","ECXSTOP",6,0)
 ;input:
"RTN","ECXSTOP",7,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSTOP",8,0)
 ;   type: type REQUIRED (Stop Code, DSS Stop Code, Credit Stop Code, DSS Credit Stop Code)
"RTN","ECXSTOP",9,0)
 ;  clien: clinic IEN in #728.44 (optional)
"RTN","ECXSTOP",10,0)
 ;   date: date of action (default today) (optional)
"RTN","ECXSTOP",11,0)
 ;
"RTN","ECXSTOP",12,0)
 ;ecxerr(err) and warning(wrn) are existing arrays 
"RTN","ECXSTOP",13,0)
 ;make sure they exist!
"RTN","ECXSTOP",14,0)
 ;
"RTN","ECXSTOP",15,0)
 N XCODE,INACT,RTYPE,IEN
"RTN","ECXSTOP",16,0)
 Q:'CODE
"RTN","ECXSTOP",17,0)
 Q:(TYPE="")
"RTN","ECXSTOP",18,0)
 S CLIEN=$G(CLIEN)
"RTN","ECXSTOP",19,0)
 I $G(DATE)="" S DATE=DT
"RTN","ECXSTOP",20,0)
 S ERR=$G(ERR)+1,WRN=$G(WRN)+1
"RTN","ECXSTOP",21,0)
 K:ERR=1 ECXERR K:WRN=1 WARNING
"RTN","ECXSTOP",22,0)
 S IEN=$O(^DIC(40.7,"C",CODE,0)) I +IEN'>0 S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",23,0)
 I '$D(^DIC(40.7,IEN,0)) S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",24,0)
 I (+CODE'=CODE),($L(CODE)>3) S ECXERR(ERR)=CODE_" is an Invalid "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",25,0)
 S INACT=$P(^DIC(40.7,IEN,0),"^",3) I INACT,((DT>INACT)!(DT=INACT)) S ECXERR(ERR)=CODE_" is an Inactive "_TYPE S ERR=ERR+1
"RTN","ECXSTOP",26,0)
 S RTYPE=$P(^DIC(40.7,IEN,0),"^",6)
"RTN","ECXSTOP",27,0)
 I (TYPE="Stop Code"),(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",28,0)
 I TYPE="DSS Stop Code",(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",29,0)
 I TYPE="Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",30,0)
 I TYPE="DSS Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",31,0)
 ;I ($P(^DIC(40.7,IEN,0),"^",7)>DT) S WARNING(WRN)=CODE_" This "_TYPE_" has a Restriction Date in the future." S WRN=WRN+1
"RTN","ECXSTOP",32,0)
 I (TYPE="Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",3)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",33,0)
 I (TYPE="DSS Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",5)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match DSS Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",34,0)
 ;WARNING  ; check for inactivations in future
"RTN","ECXSTOP",35,0)
 I INACT>DT S WARNING(WRN)=CODE_" This "_TYPE_" has a pending Inactive Date." S WRN=WRN+1
"RTN","ECXSTOP",36,0)
 Q
"RTN","ECXSURG1")
0^31^B15348265^B14336843
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 4/21/08 5:07pm
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^princ postop diagnosis code
"RTN","ECXSURG1",34,0)
 ;ECXPODX^other postop diagnosis code #1 ECXPODX1^other postop
"RTN","ECXSURG1",35,0)
 ;diagnosis code #2 ECXPODX2^ other postop diag code #3 ECXPODX3^
"RTN","ECXSURG1",36,0)
 ;other postop diag code #4 ECXPODX4^other postop diag code #5
"RTN","ECXSURG1",37,0)
 ;ECXPODX5^anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",38,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",39,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",40,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",41,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",42,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",43,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",44,0)
 ;mst status ECXMST^
"RTN","ECXSURG1",45,0)
 ;
"RTN","ECXSURG1",46,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSURG1",47,0)
 N ECXDATA
"RTN","ECXSURG1",48,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSURG1",49,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXSURG1",50,0)
 ;done
"RTN","ECXSURG1",51,0)
 N DA,DIK,STR
"RTN","ECXSURG1",52,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",53,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",54,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",55,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",56,0)
 S STR=ECXMN_U_ECXTS_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",57,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",58,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",59,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",60,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",61,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",62,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",63,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",64,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",65,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",66,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",67,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",68,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",69,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXSURG1",70,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",71,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",72,0)
 ;
"RTN","ECXSURG1",73,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",74,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",75,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",76,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",77,0)
 ;
"RTN","ECXSURG1",78,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",79,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",80,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",81,0)
 I 'CON D
"RTN","ECXSURG1",82,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",83,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",84,0)
 I CON D
"RTN","ECXSURG1",85,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",86,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",87,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",88,0)
 Q
"RTN","ECXSURG1",89,0)
 ;
"RTN","ECXSURG1",90,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",91,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",92,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",93,0)
 Q
"RTN","ECXSURG1",94,0)
 ;
"RTN","ECXSURG1",95,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",96,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTREX")
0^18^B28561003^B11510953
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003 ; 6/11/09 3:43pm
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,92,105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* Use this option with caution since it will allow you to      *"
"RTN","ECXTREX",10,0)
 W !,"* run any supported DSS extract using specific fiscal year     *"
"RTN","ECXTREX",11,0)
 W !,"* logic.  By running this option you may negatively impact     *"
"RTN","ECXTREX",12,0)
 W !,"* your extract data.                                           *"
"RTN","ECXTREX",13,0)
 W !,"*                                                              *"
"RTN","ECXTREX",14,0)
 W !,"* DO NOT USE this option unless you are an official test site  *"
"RTN","ECXTREX",15,0)
 W !,"* for the DSS Fiscal Year Conversion.                          *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 D PAUSE
"RTN","ECXTREX",25,0)
 ;does user hold key?
"RTN","ECXTREX",26,0)
 ;I '$$KCHK^XUSRB("ECX DSS TEST",$G(DUZ)) D  Q
"RTN","ECXTREX",27,0)
 ;.W !!,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXTREX",28,0)
 ;.D PAUSE
"RTN","ECXTREX",29,0)
 ;is this a test site for DSS FY conversion patch?
"RTN","ECXTREX",30,0)
 ;I '$$CHKTEST^ECXTREX() D  Q
"RTN","ECXTREX",31,0)
 ;.W !!,"This site is not a DSS Fiscal Year Conversion test site.",!,"Exiting...",!!
"RTN","ECXTREX",32,0)
 ;.D PAUSE
"RTN","ECXTREX",33,0)
 N ECXTEST,ECXREL S ECXTEST=$$CHKTEST^ECXTREX()
"RTN","ECXTREX",34,0)
 ;
"RTN","ECXTREX",35,0)
 ;Pick extract to queue
"RTN","ECXTREX",36,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",37,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",38,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",39,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",40,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",41,0)
 D ^DIC
"RTN","ECXTREX",42,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",43,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",44,0)
 S ECXDA=+Y
"RTN","ECXTREX",45,0)
 ;Get extract specific routine name
"RTN","ECXTREX",46,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",47,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",48,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",49,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",50,0)
 .W !,"have a value in it."
"RTN","ECXTREX",51,0)
 .W !
"RTN","ECXTREX",52,0)
 .D PAUSE
"RTN","ECXTREX",53,0)
 ;Get time frame for extract
"RTN","ECXTREX",54,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",55,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",56,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",57,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",58,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",59,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",60,0)
 .D ^DIR
"RTN","ECXTREX",61,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",62,0)
 .S STRTDT=Y
"RTN","ECXTREX",63,0)
 .K DIR
"RTN","ECXTREX",64,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",65,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",66,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",67,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",68,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",69,0)
 .I X>DT S X=DT
"RTN","ECXTREX",70,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",71,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",72,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",73,0)
 .D ^DIR
"RTN","ECXTREX",74,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",75,0)
 .S ENDDT=Y
"RTN","ECXTREX",76,0)
 .S OUT=1
"RTN","ECXTREX",77,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",78,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",79,0)
LOGIC ;Get extract logic to use
"RTN","ECXTREX",80,0)
 N ECXLOGIC,YEAR,ECXY,ECXFY,ECXREL
"RTN","ECXTREX",81,0)
 S ECXFY=$P($P(ECXTEST,"#",2),"FY",2)
"RTN","ECXTREX",82,0)
 S ECXREL=$P(ECXTEST,"#",3)
"RTN","ECXTREX",83,0)
 S YEAR=$E(DT)+17_$E(DT,2,3)
"RTN","ECXTREX",84,0)
 S X=$E(DT,1,3)_"1000" I DT>X D
"RTN","ECXTREX",85,0)
 . I (ECXREL)!($$KCHK^XUSRB("ECX DSS TEST",$G(DUZ))) S YEAR=YEAR+1
"RTN","ECXTREX",86,0)
 K DIR
"RTN","ECXTREX",87,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",88,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",89,0)
 F X=YEAR-2:1:YEAR D
"RTN","ECXTREX",90,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",91,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",92,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",93,0)
 I $$KCHK^XUSRB("ECX DSS TEST",$G(DUZ)) D
"RTN","ECXTREX",94,0)
 .S X=$E(DT,1,3)_"1000" I DT'>X S X=YEAR+1 D
"RTN","ECXTREX",95,0)
 ..S Y=$E(X,5)
"RTN","ECXTREX",96,0)
 ..S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",97,0)
 ..S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",98,0)
 D ^DIR
"RTN","ECXTREX",99,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",100,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",101,0)
 N ECXERR S ECXERR=0
"RTN","ECXTREX",102,0)
 I ECXLOGIC>YEAR D
"RTN","ECXTREX",103,0)
 . I ECXREL Q
"RTN","ECXTREX",104,0)
 . S ECXERR=1
"RTN","ECXTREX",105,0)
 I ECXLOGIC=YEAR D
"RTN","ECXTREX",106,0)
 . I YEAR'=ECXFY Q
"RTN","ECXTREX",107,0)
 . I ECXREL Q
"RTN","ECXTREX",108,0)
 . S ECXERR=1
"RTN","ECXTREX",109,0)
 I ECXERR S ECXERR=0 D  I ECXERR Q
"RTN","ECXTREX",110,0)
 . S DIR(0)="Y" W !
"RTN","ECXTREX",111,0)
 . S DIR("A",1)="WARNING: Logic has not been released for this year.  Do not use unless directed"
"RTN","ECXTREX",112,0)
 . S DIR("A")="by DSO.  Do you want to continue",DIR("B")="YES" D ^DIR
"RTN","ECXTREX",113,0)
 . S:$G(DIRUT) ECXERR=1 S:Y=0 ECXERR=1
"RTN","ECXTREX",114,0)
 ;Queue extract
"RTN","ECXTREX",115,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",116,0)
 Q
"RTN","ECXTREX",117,0)
PAUSE ;pause screen
"RTN","ECXTREX",118,0)
 N DIR,X,Y
"RTN","ECXTREX",119,0)
 S DIR(0)="E"
"RTN","ECXTREX",120,0)
 W !!
"RTN","ECXTREX",121,0)
 D ^DIR
"RTN","ECXTREX",122,0)
 W !!
"RTN","ECXTREX",123,0)
 Q
"RTN","ECXTREX",124,0)
 ;
"RTN","ECXTREX",125,0)
CHKTEST() ;check/set release version
"RTN","ECXTREX",126,0)
 ; input none
"RTN","ECXTREX",127,0)
 N ECXY,ECXNM,ECXDT,FDA,JJ,LINE,RESULT,XX
"RTN","ECXTREX",128,0)
 ;get patch name from field #73
"RTN","ECXTREX",129,0)
 S ECXY=$$GET1^DIQ(728,"1,",73) I ECXY="" Q ""
"RTN","ECXTREX",130,0)
 S ECXNM=$P(ECXY,"#"),ECXFY=$P(ECXY,"#",2),ECXSQ=$P(ECXY,"#",3)
"RTN","ECXTREX",131,0)
 ;if Kernel function not on system, allow access by default
"RTN","ECXTREX",132,0)
 S LINE="INSTALDT^XPDUTL",JJ=$T(@LINE) I JJ="" Q ""
"RTN","ECXTREX",133,0)
 ;quit if patch never installed
"RTN","ECXTREX",134,0)
 S JJ=$$INSTALDT^XPDUTL(ECXNM,.RESULT) I 'JJ Q ""
"RTN","ECXTREX",135,0)
 ;get status of last patch of that name installed here
"RTN","ECXTREX",136,0)
 S ECXDT=$O(RESULT(""),-1) I 'ECXDT Q ""
"RTN","ECXTREX",137,0)
 S XX=RESULT(ECXDT)
"RTN","ECXTREX",138,0)
 ;if last version is national, set field #73,
"RTN","ECXTREX",139,0)
 I $P(XX,U,2) S ECXSQ=$P(XX,U,2)
"RTN","ECXTREX",140,0)
 D TESTON(ECXNM,ECXFY,ECXSQ)
"RTN","ECXTREX",141,0)
 Q $$GET1^DIQ(728,"1,",73)
"RTN","ECXTREX",142,0)
 ;INSTALDT^XPDUTL doesn't work for host file
"RTN","ECXTREX",143,0)
 ;
"RTN","ECXTREX",144,0)
TESTON(XPDNM,ECXFY,ECXSQ) ;sets field #73 of file #728
"RTN","ECXTREX",145,0)
 ; input XPDNM - variable defined by KIDS; name of patch
"RTN","ECXTREX",146,0)
 ;       ECXFY - variable defined for patch fiscal year extract
"RTN","ECXTREX",147,0)
 ;       ECXSQ - variable defined for patch release sequence # (optional)
"RTN","ECXTREX",148,0)
 ; output none
"RTN","ECXTREX",149,0)
 ; called only by post-install routine of DSS FY Conversion patch
"RTN","ECXTREX",150,0)
 ;   if patch is TEST version
"RTN","ECXTREX",151,0)
 N ECXNM,FDA
"RTN","ECXTREX",152,0)
 S ECXNM=$G(XPDNM)
"RTN","ECXTREX",153,0)
 S ECXFY=$G(ECXFY)
"RTN","ECXTREX",154,0)
 S ECXSQ=$G(ECXSQ)
"RTN","ECXTREX",155,0)
 Q:(ECXNM="")
"RTN","ECXTREX",156,0)
 Q:(ECXFY="")
"RTN","ECXTREX",157,0)
 ;update field #73 of file #728
"RTN","ECXTREX",158,0)
 S FDA(728,"1,",73)=ECXNM_"#"_ECXFY_"#"_ECXSQ
"RTN","ECXTREX",159,0)
 D FILE^DIE("","FDA")
"RTN","ECXTREX",160,0)
 ;if released version & not a field office, then, kill testing key
"RTN","ECXTREX",161,0)
 I ($G(ECXSQ)'=""),'$$FODMN2() D
"RTN","ECXTREX",162,0)
 .N ECXSKEY
"RTN","ECXTREX",163,0)
 .S ECXSKEY=$$LKUP^XPDKEY("ECX DSS TEST") Q:'ECXSKEY
"RTN","ECXTREX",164,0)
 .D DEL^XPDKEY(+$G(ECXSKEY))
"RTN","ECXTREX",165,0)
 Q
"RTN","ECXTREX",166,0)
 ;
"RTN","ECXTREX",167,0)
FODMN2(DOMAIN) ;Is domain a field office domain
"RTN","ECXTREX",168,0)
 ;Input : DOMAIN - Domain name to check
"RTN","ECXTREX",169,0)
 ;               - Default value pulled from ^XMB("NETNAME")
"RTN","ECXTREX",170,0)
 ;Used in TESTON^ECXTREX to delete security key ECX DSS TEST after
"RTN","ECXTREX",171,0)
 ;testing.
"RTN","ECXTREX",172,0)
 ;Output: 1 = Yes  /  0 = No
"RTN","ECXTREX",173,0)
 ;
"RTN","ECXTREX",174,0)
 N X,SUB,OUT
"RTN","ECXTREX",175,0)
 S DOMAIN=$G(DOMAIN)
"RTN","ECXTREX",176,0)
 S:(DOMAIN="") DOMAIN=$G(^XMB("NETNAME"))
"RTN","ECXTREX",177,0)
 S OUT=0
"RTN","ECXTREX",178,0)
 F X=1:1:$L(DOMAIN,".") D  Q:OUT
"RTN","ECXTREX",179,0)
 .S SUB=$P(DOMAIN,".",X)
"RTN","ECXTREX",180,0)
 .I ($E(SUB,1,3)="FO-")!($E(SUB,1,4)="ISC-") S OUT=1
"RTN","ECXTREX",181,0)
 Q OUT
"RTN","ECXUD")
0^12^B54326285^B52727032
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 10/31/07 1:58pm
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120**;Dec 22, 1997;Build 43
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG
"RTN","ECXUD",20,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",21,0)
 ;
"RTN","ECXUD",22,0)
 ;get patient specific data
"RTN","ECXUD",23,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",24,0)
 Q:ECXERR
"RTN","ECXUD",25,0)
 ;
"RTN","ECXUD",26,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",27,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",28,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",29,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",30,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",31,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",32,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",33,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",34,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",35,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",36,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",37,0)
 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",38,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",39,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",40,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",41,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",42,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",43,0)
 ; - Department and National Production Division
"RTN","ECXUD",44,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",45,0)
 S ECXDSSD=""
"RTN","ECXUD",46,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",47,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",48,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",49,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",50,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",51,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",52,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",53,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",54,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",55,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",56,0)
 ;BCMA data (place holder)
"RTN","ECXUD",57,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXUD",58,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",59,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",60,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",61,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",62,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",63,0)
 Q
"RTN","ECXUD",64,0)
 ;
"RTN","ECXUD",65,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",66,0)
 ;init variables
"RTN","ECXUD",67,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",68,0)
 ;get patient data if saved
"RTN","ECXUD",69,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",70,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",71,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",72,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",73,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",74,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",75,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",76,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",77,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",78,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",79,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",80,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",81,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",82,0)
 ;set patient data
"RTN","ECXUD",83,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",84,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",85,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",86,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",87,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",88,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",89,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",90,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",91,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",92,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",93,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",94,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",95,0)
 .;OEF/OIF data
"RTN","ECXUD",96,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",97,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",98,0)
 .;get CNHU status
"RTN","ECXUD",99,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",100,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",101,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",102,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",103,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",104,0)
 .; - Race and Ethnicity
"RTN","ECXUD",105,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",106,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",107,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",108,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",109,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",110,0)
 .;save for later
"RTN","ECXUD",111,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",112,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",113,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY
"RTN","ECXUD",114,0)
 ;
"RTN","ECXUD",115,0)
 ;get inpatient data
"RTN","ECXUD",116,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",117,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",118,0)
 ;
"RTN","ECXUD",119,0)
 ;get primary care data
"RTN","ECXUD",120,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",121,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",122,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",123,0)
 Q
"RTN","ECXUD",124,0)
 ;
"RTN","ECXUD",125,0)
FILE ;file record
"RTN","ECXUD",126,0)
 ;node0
"RTN","ECXUD",127,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",128,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",129,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",130,0)
 ;node1
"RTN","ECXUD",131,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",132,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",133,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",134,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",135,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",136,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",137,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",138,0)
 ;node2
"RTN","ECXUD",139,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",140,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",141,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",142,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",143,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",144,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",145,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",146,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",147,0)
 ;^country ECXCNTRY
"RTN","ECXUD",148,0)
 ;
"RTN","ECXUD",149,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",150,0)
 N ECXDATA
"RTN","ECXUD",151,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",152,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",153,0)
 ;done
"RTN","ECXUD",154,0)
 N DA,DIK
"RTN","ECXUD",155,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",156,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",157,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",158,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",159,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",160,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",161,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",162,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",163,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",164,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",165,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",166,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",167,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",168,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",169,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",170,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",171,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",172,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",173,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",174,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",175,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",176,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",177,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",178,0)
 Q
"RTN","ECXUD",179,0)
 ;
"RTN","ECXUD",180,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",181,0)
 S ECHEAD="UDP"
"RTN","ECXUD",182,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",183,0)
 Q
"RTN","ECXUD",184,0)
 ;
"RTN","ECXUD",185,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",186,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",187,0)
 Q
"RTN","ECXUEC")
0^21^B38987244^n/a
"RTN","ECXUEC",1,0)
ECXUEC ;ALB/TJL,JAP - Event Capture Extract Unusual Volume Report ; 6/11/09 2:32pm
"RTN","ECXUEC",2,0)
 ;;3.0;DSS EXTRACTS;**120**;July 1, 2003;Build 43
"RTN","ECXUEC",3,0)
 ;
"RTN","ECXUEC",4,0)
EN ; entry point
"RTN","ECXUEC",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUEC",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,DIR,DTOUT,DUOUT,DIRUT,POP,ZTSK,ZTQUEUED
"RTN","ECXUEC",7,0)
 S QFLG=0,ECTHLD=""
"RTN","ECXUEC",8,0)
 ; get today's date
"RTN","ECXUEC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUEC",10,0)
 D BEGIN Q:QFLG
"RTN","ECXUEC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUEC",12,0)
 S ECXDESC="ECS Extract Unusual Volume Report"
"RTN","ECXUEC",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUEC",14,0)
 W !!,"This report is formatted for 132-column line width."
"RTN","ECXUEC",15,0)
 W !!,"Enter 'Q' to queue report to TaskManager, then select printer."
"RTN","ECXUEC",16,0)
 D EN^XUTMDEVQ("PROCESS^ECXUEC",ECXDESC,.ECXSAVE,"",1)
"RTN","ECXUEC",17,0)
 I $G(POP) W !!,"No device selected...exiting.",! Q
"RTN","ECXUEC",18,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUEC",19,0)
 D HOME^%ZIS
"RTN","ECXUEC",20,0)
 I $D(ZTSK) W !!,"Queued as Task #"_ZTSK_"."
"RTN","ECXUEC",21,0)
 Q
"RTN","ECXUEC",22,0)
 ;
"RTN","ECXUEC",23,0)
BEGIN ; display report description
"RTN","ECXUEC",24,0)
 W @IOF
"RTN","ECXUEC",25,0)
 W !,"ECS Extract Unusual Volume Report"
"RTN","ECXUEC",26,0)
 W !!,"   This report prints a listing of unusual volumes that would be"
"RTN","ECXUEC",27,0)
 W !,"   generated by the Event Capture extract (ECS) as determined by"
"RTN","ECXUEC",28,0)
 W !,"   a user-defined threshold value. It should be run prior to"
"RTN","ECXUEC",29,0)
 W !,"   the generation of an actual extract to identify and fix, as"
"RTN","ECXUEC",30,0)
 W !,"   necessary, any volumes determined to be erroneous."
"RTN","ECXUEC",31,0)
 W !!,"   Unusual volumes are those in excess of the threshold value"
"RTN","ECXUEC",32,0)
 W !,"   defined by the user. The threshold value is 20 by default."
"RTN","ECXUEC",33,0)
 W !!,"   Note: You may set a different threshold if you opt to continue."
"RTN","ECXUEC",34,0)
 W !!,"   Run times will vary depending upon the size of the EVENT CAPTURE"
"RTN","ECXUEC",35,0)
 W !,"   PATIENT file (#721) and the date range selected, but may be at"
"RTN","ECXUEC",36,0)
 W !,"   least several minutes. Queuing to a printer is recommended."
"RTN","ECXUEC",37,0)
 W !!,"   The running of this report has no effect on the actual extracts"
"RTN","ECXUEC",38,0)
 W !,"   and can be run as needed."
"RTN","ECXUEC",39,0)
 W !!,"   The report is sorted by DSS Unit, then by descending Volume"
"RTN","ECXUEC",40,0)
 W !,"   within DSS Unit."
"RTN","ECXUEC",41,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",42,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUEC",43,0)
 Q
"RTN","ECXUEC",44,0)
 ;
"RTN","ECXUEC",45,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUEC",46,0)
 N DONE,OUT
"RTN","ECXUEC",47,0)
 ; allow user to set threshold volume
"RTN","ECXUEC",48,0)
 S ECTHLD=20
"RTN","ECXUEC",49,0)
 W !!,"The default threshold volume for unusual volumes in Event Capture is "_ECTHLD_"."
"RTN","ECXUEC",50,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO"
"RTN","ECXUEC",51,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",52,0)
 I Y D
"RTN","ECXUEC",53,0)
 .W !!,"Volume > threshold"
"RTN","ECXUEC",54,0)
 .S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume"
"RTN","ECXUEC",55,0)
 .D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1
"RTN","ECXUEC",56,0)
 ; get date range from user
"RTN","ECXUEC",57,0)
 Q:QFLG
"RTN","ECXUEC",58,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUEC",59,0)
 W !,"Event Capture records.",!
"RTN","ECXUEC",60,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUEC",61,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",62,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",63,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUEC",64,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUEC",65,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",66,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",67,0)
 .I Y<ECSD D  Q
"RTN","ECXUEC",68,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUEC",69,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",70,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUEC",71,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUEC",72,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",73,0)
 .S ECED=Y
"RTN","ECXUEC",74,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUEC",75,0)
 .S DONE=1
"RTN","ECXUEC",76,0)
 Q
"RTN","ECXUEC",77,0)
 ;
"RTN","ECXUEC",78,0)
PROCESS ; entry point for queued report
"RTN","ECXUEC",79,0)
 N QFLG
"RTN","ECXUEC",80,0)
 S ZTREQ="@"
"RTN","ECXUEC",81,0)
 S ECXERR=0 D START Q:ECXERR
"RTN","ECXUEC",82,0)
 S QFLG=0 D PRINT
"RTN","ECXUEC",83,0)
 K ^TMP("ECUV",$J) D ^ECXKILL
"RTN","ECXUEC",84,0)
 Q
"RTN","ECXUEC",85,0)
 ;
"RTN","ECXUEC",86,0)
START ;find EC records in date range
"RTN","ECXUEC",87,0)
 N X,Y,ECLL,ECDA,ECD,COUNT
"RTN","ECXUEC",88,0)
 S ECED=ECED+.3,ECLL=0,COUNT=0
"RTN","ECXUEC",89,0)
 K ^TMP("ECUV",$J)
"RTN","ECXUEC",90,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXUEC",91,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",92,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",93,0)
 Q
"RTN","ECXUEC",94,0)
 ;
"RTN","ECXUEC",95,0)
GETREC ;get data for report
"RTN","ECXUEC",96,0)
 N ECCH,ECL,ECXDFN,ECXSSN,ECXPDIV,ECDT,ECDU,ECV,ECP,ECXPROV,ECXPRV,ECXDATE,ECXUNIT
"RTN","ECXUEC",97,0)
 N ECXDOB,ECXETH,ECXMAR,ECXMPI,ECXPNM,ECXPRIME,ECXRACE,ECXRC1,ECXREL,ECXSEX,N1,N2,VA
"RTN","ECXUEC",98,0)
 S ECCH=^ECH(ECDA,0),ECV=$P(ECCH,U,10)
"RTN","ECXUEC",99,0)
 Q:(ECV<ECTHLD)
"RTN","ECXUEC",100,0)
 S ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXUEC",101,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXUEC",102,0)
 S ECDT=$P(ECCH,U,3),ECDU=$P(ECCH,U,7),ECP=$P(ECCH,U,9)
"RTN","ECXUEC",103,0)
 Q:(ECP']"")
"RTN","ECXUEC",104,0)
 Q:('$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;","12"))
"RTN","ECXUEC",105,0)
 S ECXDATE=$$FMTE^XLFDT(ECDT,5)
"RTN","ECXUEC",106,0)
 K ECXPRV S X=$$GETPPRV^ECPRVMUT(ECDA,.ECXPRV),ECXPROV=$E($P(ECXPRV,U,2),1,30)
"RTN","ECXUEC",107,0)
 I ECXPROV]"" D
"RTN","ECXUEC",108,0)
 .S N1=$$TITLE^XLFSTR($P(ECXPROV,",")),N2=$$TITLE^XLFSTR($P(ECXPROV,",",2))
"RTN","ECXUEC",109,0)
 .S ECXPROV=(N1_","_N2)
"RTN","ECXUEC",110,0)
 I ECP[";" D
"RTN","ECXUEC",111,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L")
"RTN","ECXUEC",112,0)
 S ECXUNIT=$P($G(^ECD(ECDU,0)),U)
"RTN","ECXUEC",113,0)
 S COUNT=COUNT+1
"RTN","ECXUEC",114,0)
 S ^TMP("ECUV",$J,ECXUNIT,(100-ECV),COUNT)=ECXSSN_U_ECXPDIV_U_ECXDATE_U_ECP_U_ECXPROV_U_ECV
"RTN","ECXUEC",115,0)
 Q
"RTN","ECXUEC",116,0)
 ;
"RTN","ECXUEC",117,0)
PRINT ; process temp file and print report
"RTN","ECXUEC",118,0)
 N PG,QFLG,LN,COUNT,REC,CC,SS,JJ,ZTSTOP
"RTN","ECXUEC",119,0)
 N ECXUNIT,ECV,ECVV,ECXSSN,ECXPDIV,ECXDATE,ECXUNIT,ECP,ECXPROV
"RTN","ECXUEC",120,0)
 U IO
"RTN","ECXUEC",121,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUEC",122,0)
 S (PG,QFLG,COUNT)=0,$P(LN,"-",130)=""
"RTN","ECXUEC",123,0)
 D HEADER Q:QFLG
"RTN","ECXUEC",124,0)
 S ECXUNIT="" F  S ECXUNIT=$O(^TMP("ECUV",$J,ECXUNIT)) Q:ECXUNIT=""  D  Q:QFLG
"RTN","ECXUEC",125,0)
 .I COUNT>0 W !,?1,LN
"RTN","ECXUEC",126,0)
 .S ECVV=0 F  S ECVV=$O(^TMP("ECUV",$J,ECXUNIT,ECVV)) Q:'ECVV  D  Q:QFLG
"RTN","ECXUEC",127,0)
 ..S CC=0 F  S CC=$O(^TMP("ECUV",$J,ECXUNIT,ECVV,CC)) Q:'CC  D  Q:QFLG
"RTN","ECXUEC",128,0)
 ...S REC=^TMP("ECUV",$J,ECXUNIT,ECVV,CC),COUNT=COUNT+1
"RTN","ECXUEC",129,0)
 ...S ECXSSN=$P(REC,U),ECXPDIV=$P(REC,U,2),ECXDATE=$P(REC,U,3),ECP=$P(REC,U,4),ECXPROV=$P(REC,U,5),ECV=$P(REC,U,6)
"RTN","ECXUEC",130,0)
 ...W !,?1,ECXSSN,?13,ECXPDIV,?24,ECXUNIT,?55,ECXDATE,?75,ECP,?86,ECV,?94,ECXPROV
"RTN","ECXUEC",131,0)
 ...I $Y+4>IOSL D HEADER Q:QFLG
"RTN","ECXUEC",132,0)
 Q:QFLG
"RTN","ECXUEC",133,0)
 I COUNT=0 W !!,?8,"No unusual Event Capture volumes to report for the date range.",!!
"RTN","ECXUEC",134,0)
 D SS
"RTN","ECXUEC",135,0)
 Q
"RTN","ECXUEC",136,0)
 ;
"RTN","ECXUEC",137,0)
HEADER ;header and page control
"RTN","ECXUEC",138,0)
 D:PG SS Q:QFLG
"RTN","ECXUEC",139,0)
 Q:QFLG
"RTN","ECXUEC",140,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUEC",141,0)
 W !,ECXDESC,?103,"Page: "_PG
"RTN","ECXUEC",142,0)
 W !,"Start Date: ",ECSTART,?92,"Report Run Date: "_ECRUN
"RTN","ECXUEC",143,0)
 W !,"  End Date: ",ECEND,?92,"Threshold Value: ",ECTHLD
"RTN","ECXUEC",144,0)
 W !!,?1,"SSN",?13,"FACILITY",?24,"DSS UNIT",?55,"DATE/TIME",?75,"PROCEDURE",?86,"VOLUME",?94,"PROVIDER"
"RTN","ECXUEC",145,0)
 W !,LN,!
"RTN","ECXUEC",146,0)
 Q
"RTN","ECXUEC",147,0)
 ;
"RTN","ECXUEC",148,0)
SS ;SCROLL STOPS
"RTN","ECXUEC",149,0)
 N JJ,SS
"RTN","ECXUEC",150,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXUEC",151,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",152,0)
 Q
"RTN","ECXUTL2")
0^13^B71058121^B70560984
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ; 6/12/07 6:38am
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105,112,120**;Dec 22, 1997;Build 43
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",34,0)
 I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",35,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",40,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",41,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",42,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",43,0)
 .W !!
"RTN","ECXUTL2",44,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",45,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",46,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",47,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",48,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",49,0)
 S ECXVER=7
"RTN","ECXUTL2",50,0)
 Q
"RTN","ECXUTL2",51,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",52,0)
 ;  DFN   =
"RTN","ECXUTL2",53,0)
 ;  DT    =
"RTN","ECXUTL2",54,0)
 ;  PAR   =
"RTN","ECXUTL2",55,0)
 ;  FLG   =
"RTN","ECXUTL2",56,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",57,0)
 D KPATDEM
"RTN","ECXUTL2",58,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",59,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",60,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",61,0)
 I PAR["1" D
"RTN","ECXUTL2",62,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",63,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",64,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",65,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",66,0)
 I PAR["2" D
"RTN","ECXUTL2",67,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",68,0)
 .S ECXCNTRY=PAT("COUNTRY")
"RTN","ECXUTL2",69,0)
 I PAR["3" D
"RTN","ECXUTL2",70,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",71,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",72,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",73,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",74,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",75,0)
 I PAR["5" D
"RTN","ECXUTL2",76,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",77,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",78,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",79,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",80,0)
 I PAR["6" D
"RTN","ECXUTL2",81,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",82,0)
 I FLG'[3 D
"RTN","ECXUTL2",83,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",84,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",85,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",86,0)
 I FLG'[2 D
"RTN","ECXUTL2",87,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",88,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",89,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",90,0)
 Q 1
"RTN","ECXUTL2",91,0)
 ;
"RTN","ECXUTL2",92,0)
KPATDEM ;
"RTN","ECXUTL2",93,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",94,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",95,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",96,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",97,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",98,0)
 K ECXSBGRP
"RTN","ECXUTL2",99,0)
 Q
"RTN","ECXUTL2",100,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",101,0)
 ;and user enrollee status
"RTN","ECXUTL2",102,0)
 ; input
"RTN","ECXUTL2",103,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",104,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",105,0)
 ; output
"RTN","ECXUTL2",106,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",107,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",108,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",109,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",110,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",111,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",112,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",113,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",114,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",115,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",116,0)
 ;DBIA #3989
"RTN","ECXUTL2",117,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",118,0)
 ;Patient type
"RTN","ECXUTL2",119,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",120,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",121,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",122,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",123,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",124,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",125,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",126,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",127,0)
 ;find previous enrollment
"RTN","ECXUTL2",128,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",129,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",130,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",131,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",132,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",133,0)
 . I "^2^19^"[("^"_$G(ENR("STATUS"))_"^"),$G(ENR("EFFDATE"))>RNDT D
"RTN","ECXUTL2",134,0)
 . . S ECXSTAT=$G(ENR("STATUS")),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",135,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",136,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",137,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",138,0)
 I FL Q 1
"RTN","ECXUTL2",139,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",140,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",141,0)
 Q 1
"RTN","ECXUTL2",142,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",143,0)
 ; input
"RTN","ECXUTL2",144,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",145,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",146,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",147,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",148,0)
 ; output
"RTN","ECXUTL2",149,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",150,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",151,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",152,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",153,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",154,0)
 ;get pc team data
"RTN","ECXUTL2",155,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",156,0)
 ;get primary pc provider data
"RTN","ECXUTL2",157,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",158,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",159,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",160,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",161,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",162,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",163,0)
 S ECASPR=""
"RTN","ECXUTL2",164,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",165,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",166,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",167,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",168,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",169,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",170,0)
 ;assemble
"RTN","ECXUTL2",171,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",172,0)
 Q ECXPRIME
"RTN","ECXUTL2",173,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",174,0)
 ; input
"RTN","ECXUTL2",175,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",176,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",177,0)
 ; output
"RTN","ECXUTL2",178,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",179,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",180,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",181,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",182,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",183,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",184,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",185,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",186,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",187,0)
 N ECXATPPC
"RTN","ECXUTL2",188,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",189,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",190,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",191,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",192,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",193,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",194,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",195,0)
 I ECMN D
"RTN","ECXUTL2",196,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",197,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",198,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",199,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",200,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",201,0)
 .I ECWARD D
"RTN","ECXUTL2",202,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",203,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",204,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",205,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",206,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",207,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",208,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",209,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",210,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",211,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",212,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",213,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",214,0)
 Q ECXINP
"RTN","ECXUTL2",215,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",216,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",217,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",218,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",219,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",220,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",221,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",222,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",223,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",224,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",225,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",226,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",227,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",228,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",229,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",230,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",231,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",232,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",233,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",234,0)
 Q
"RTN","ECXUTL3")
0^4^B63750846^B62713398
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ; 9/28/07 1:38pm
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32,33,35,37,39,42,46,92,105,120**;Dec 22,1997;Build 43
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by reference; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returned in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ,RCNUM,RCVAL,COLMETH
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 I $E(SSN,1,3)="000"!(SSN="") K ECXPAT Q 0  ;test patient
"RTN","ECXUTL3",72,0)
 ;test patient extended checks; mtl extract excluded
"RTN","ECXUTL3",73,0)
 I $G(ECHEAD)'="MTL",'$$SSN^ECXUTL5(SSN) K ECXPAT Q 0
"RTN","ECXUTL3",74,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",75,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",76,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL"
"RTN","ECXUTL3",77,0)
 ;initialize return array values
"RTN","ECXUTL3",78,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",79,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",80,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",81,0)
 ;
"RTN","ECXUTL3",82,0)
 ;- Get ICN if MPI installed
"RTN","ECXUTL3",83,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",84,0)
 .;
"RTN","ECXUTL3",85,0)
 .;- Get 1st piece (either ICN # or -1 if error)
"RTN","ECXUTL3",86,0)
 . S MPI=+$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",87,0)
 .;
"RTN","ECXUTL3",88,0)
 .;- If error, set to null
"RTN","ECXUTL3",89,0)
 . S ECXPAT("MPI")=$S(MPI>0:MPI,1:"")
"RTN","ECXUTL3",90,0)
 D  ;get demographic data
"RTN","ECXUTL3",91,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",92,0)
 . D DEM^VADPT
"RTN","ECXUTL3",93,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",94,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",95,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",96,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",97,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",98,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",99,0)
 . ;add new race and ethnicity fields for FY2003
"RTN","ECXUTL3",100,0)
 . S (ECXPAT("ETHNIC"),ECXPAT("RACE1"))=""
"RTN","ECXUTL3",101,0)
 . S X="DGUTL4" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",102,0)
 .. S COLMETH=$$PTR2CODE^DGUTL4($G(VADM(11,1,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",103,0)
 ... S ECXPAT("ETHNIC")=$$PTR2CODE^DGUTL4(+$G(VADM(11,1)),2,4)
"RTN","ECXUTL3",104,0)
 .. S (RCVAL,RCNUM)=""
"RTN","ECXUTL3",105,0)
 .. F  S RCNUM=$O(VADM(12,RCNUM)) Q:RCNUM=""  Q:RCVAL="C"  S COLMETH=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",106,0)
 ... S RCVAL=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM)),1,4)
"RTN","ECXUTL3",107,0)
 ... I RCVAL="C" S ECXPAT("RACE1")=RCVAL Q
"RTN","ECXUTL3",108,0)
 ... S ECXPAT("RACE1")=ECXPAT("RACE1")_RCVAL
"RTN","ECXUTL3",109,0)
 D  ;get address information
"RTN","ECXUTL3",110,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",111,0)
 . D ADD^VADPT
"RTN","ECXUTL3",112,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",113,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",114,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",115,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",116,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",117,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2)
"RTN","ECXUTL3",118,0)
 . S ECXPAT("COUNTRY")=$$GET1^DIQ(779.004,+$P($G(VAPA(25)),U),.01)
"RTN","ECXUTL3",119,0)
 . S ECXPAT=1
"RTN","ECXUTL3",120,0)
 D  ;get eligibility information
"RTN","ECXUTL3",121,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",122,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",123,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",124,0)
 . S ECXPAT("POS")=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","ECXUTL3",125,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",126,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",127,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",128,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",129,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",130,0)
 . ;get enrollment location
"RTN","ECXUTL3",131,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",132,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",133,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",134,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",135,0)
 . ;get Emergency Response Indicator (FEMA)
"RTN","ECXUTL3",136,0)
 . S ECXPAT("ERI")=$$GET1^DIQ(2,ECXDFN,.181,"I")
"RTN","ECXUTL3",137,0)
 D  ;get other patient information
"RTN","ECXUTL3",138,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",139,0)
 . D OPD^VADPT
"RTN","ECXUTL3",140,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",141,0)
 D  ;get service information
"RTN","ECXUTL3",142,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",143,0)
 . D SVC^VADPT
"RTN","ECXUTL3",144,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",145,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",146,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",147,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",148,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",149,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",150,0)
 . S ECXPAT("PHI")=$S(VASV(9)=1:"Y",VASV(9)=0:"N",1:"")
"RTN","ECXUTL3",151,0)
 . ;- Agent Orange Location (K=Korean DMZ,V=Vietnam)
"RTN","ECXUTL3",152,0)
 . S ECXPAT("AOL")=$P($G(VASV(2,5)),U)
"RTN","ECXUTL3",153,0)
 . ;get patient OEF/OIF status and date of return
"RTN","ECXUTL3",154,0)
 . D OEFDATA^ECXUTL4
"RTN","ECXUTL3",155,0)
 . ;
"RTN","ECXUTL3",156,0)
 . ;get patient current MST status
"RTN","ECXUTL3",157,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",158,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",159,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",160,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",161,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",162,0)
 Q 1
"RTN","ECXUTL3",163,0)
 ;
"RTN","ECXUTL3",164,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",165,0)
 ; Variables -
"RTN","ECXUTL3",166,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",167,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",168,0)
 ;
"RTN","ECXUTL3",169,0)
 ;  Output:
"RTN","ECXUTL3",170,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",171,0)
 ;
"RTN","ECXUTL3",172,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",173,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",174,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",175,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",176,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",177,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",178,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",179,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",180,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",181,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",182,0)
 Q ECXNPCD
"RTN","ECXUTL3",183,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",184,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",185,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",186,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",187,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",188,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",189,0)
 ;;18;;24;POW
"RTN","ECXUTL3",190,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",191,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",192,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",193,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",194,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",195,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",196,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",197,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",198,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",199,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",200,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",201,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",202,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",203,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",204,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",205,0)
 ;;10;;108;Reimbursable Insurance
"RTN","ECXUTL3",206,0)
 ;;19;;109;TRICARE/CHAMPUS
"RTN","ECXUTL3",207,0)
 ;;22;;25;Purple Heart Recipient
"RTN","ECXUTL3",208,0)
 ;;END
"RTN","ECXUTL3",209,0)
 ;
"RTN","ECXUTL3",210,0)
CPT(ECXCPT,ECXMOD,ECXQUA) ;Returns a str with CPT code and modifier codes
"RTN","ECXUTL3",211,0)
 ;Return string is composed of a 5 character CPT code 2 character quantity
"RTN","ECXUTL3",212,0)
 ;plus up to 5 modifier codes, 2 characters each.
"RTN","ECXUTL3",213,0)
 ; Variables -
"RTN","ECXUTL3",214,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",215,0)
 ;         ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",216,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",217,0)
 ;         ECXQUA  - Number of time this procedure performed
"RTN","ECXUTL3",218,0)
 ;
"RTN","ECXUTL3",219,0)
 ;  Output:
"RTN","ECXUTL3",220,0)
 ;         CPTMOD  - String of up to 17 characters, 5 character CPT
"RTN","ECXUTL3",221,0)
 ;                   code 2 character qty plus up to 5 2-character
"RTN","ECXUTL3",222,0)
 ;                   code modifiers.
"RTN","ECXUTL3",223,0)
 ;
"RTN","ECXUTL3",224,0)
 N CPT,MOD,I,CPTMOD
"RTN","ECXUTL3",225,0)
 S ECXQUA=$G(ECXQUA,"01"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",226,0)
 S:$L(ECXQUA)'=2 ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",227,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",228,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",229,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",230,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",231,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",232,0)
 S CPTMOD=$TR($E(CPT,1,17)," ")
"RTN","ECXUTL3",233,0)
 Q CPTMOD
"RTN","ECXUTL3",234,0)
 ;
"RTN","ECXUTL3",235,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",236,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",237,0)
 ;
"RTN","ECXUTL3",238,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD
"RTN","ECXUTL3",239,0)
 Q:$G(ECXCPT)="" ""
"RTN","ECXUTL3",240,0)
 S (CPTMOD,MODX)=""
"RTN","ECXUTL3",241,0)
 S CPTX="("_+$E(ECXCPT,6,7)_") "_$E(ECXCPT,1,5),MODS=$E(ECXCPT,8,17)
"RTN","ECXUTL3",242,0)
 F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D
"RTN","ECXUTL3",243,0)
 .I J>1 S MODX=MODX_", "_MOD Q
"RTN","ECXUTL3",244,0)
 .S MODX=MODX_"-"_MOD
"RTN","ECXUTL3",245,0)
 S:$L(CPTX)>3 CPTMOD=CPTMOD_CPTX_MODX
"RTN","ECXUTL3",246,0)
 Q CPTMOD
"RTN","ECXUTL4")
0^27^B51958350^B51787444
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ; 11/26/07 10:58am
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92,105,112,120**;Dec 22,1997;Build 43
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-297, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<298) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S ECXSTP=+$G(ECXSTP),ECXSTP2=+$G(ECXSTP2)
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS and ECQ (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... ;- Use observation stop code for IVP
"RTN","ECXUTL4",101,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS")!(ECXEXT="ECQ") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",102,0)
 ... ;
"RTN","ECXUTL4",103,0)
 ... ;- Use cost center to obtain stop code for ECS
"RTN","ECXUTL4",104,0)
 ... I ECXEXT="ECS" D  Q:'ECXSTCD
"RTN","ECXUTL4",105,0)
 .... S ECXSTCD=$$ECSCOST(ECXSTP2)
"RTN","ECXUTL4",106,0)
 ....;
"RTN","ECXUTL4",107,0)
 ....;- If no cost center, use 1st 3 chars of DSS ID
"RTN","ECXUTL4",108,0)
 .... I ECXSTCD="" S ECXSTCD=+$E(ECXSTP,1,3)
"RTN","ECXUTL4",109,0)
 ... ;
"RTN","ECXUTL4",110,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP")!(ECXEXT="IVP") S ECXSTCD="PHA"
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",115,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",116,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",117,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",118,0)
 ... ;
"RTN","ECXUTL4",119,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",120,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",121,0)
 ... ;
"RTN","ECXUTL4",122,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",123,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",124,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",125,0)
 ... ;
"RTN","ECXUTL4",126,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",127,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",128,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",129,0)
 Q ENCNUM
"RTN","ECXUTL4",130,0)
 ;
"RTN","ECXUTL4",131,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",132,0)
 ;
"RTN","ECXUTL4",133,0)
 ; Input:
"RTN","ECXUTL4",134,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",135,0)
 ;
"RTN","ECXUTL4",136,0)
 ;Output:
"RTN","ECXUTL4",137,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",138,0)
 ;
"RTN","ECXUTL4",139,0)
 N ECXDT
"RTN","ECXUTL4",140,0)
 S ECXDT=""
"RTN","ECXUTL4",141,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",142,0)
 ;
"RTN","ECXUTL4",143,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",144,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",145,0)
 ;
"RTN","ECXUTL4",146,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",147,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",148,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",149,0)
 ;
"RTN","ECXUTL4",150,0)
 ;
"RTN","ECXUTL4",151,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",152,0)
 ;
"RTN","ECXUTL4",153,0)
 ; Input:
"RTN","ECXUTL4",154,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",155,0)
 ;
"RTN","ECXUTL4",156,0)
 ;Output:
"RTN","ECXUTL4",157,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",158,0)
 ;
"RTN","ECXUTL4",159,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",160,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",161,0)
 ;
"RTN","ECXUTL4",162,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",163,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",164,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",165,0)
 ;
"RTN","ECXUTL4",166,0)
 ;- Extract date portion
"RTN","ECXUTL4",167,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",168,0)
 ;
"RTN","ECXUTL4",169,0)
 ;- Get month (MM)
"RTN","ECXUTL4",170,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",171,0)
 ;
"RTN","ECXUTL4",172,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",173,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",174,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",175,0)
 ;
"RTN","ECXUTL4",176,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",177,0)
 ;
"RTN","ECXUTL4",178,0)
 ; Input:
"RTN","ECXUTL4",179,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",180,0)
 ;
"RTN","ECXUTL4",181,0)
 ;Output:
"RTN","ECXUTL4",182,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",183,0)
 ;
"RTN","ECXUTL4",184,0)
 N ECXCNH
"RTN","ECXUTL4",185,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",186,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",187,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",188,0)
 ;
"RTN","ECXUTL4",189,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",190,0)
 ;
"RTN","ECXUTL4",191,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",192,0)
 ;
"RTN","ECXUTL4",193,0)
 ; Input:
"RTN","ECXUTL4",194,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",195,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",196,0)
 ;
"RTN","ECXUTL4",197,0)
 ;Output:
"RTN","ECXUTL4",198,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",199,0)
 ;
"RTN","ECXUTL4",200,0)
 N ECXCANC
"RTN","ECXUTL4",201,0)
 S ECXCANC=""
"RTN","ECXUTL4",202,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",203,0)
 ;
"RTN","ECXUTL4",204,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",205,0)
 D
"RTN","ECXUTL4",206,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",207,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",208,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",209,0)
 Q ECXCANC
"RTN","ECXUTL4",210,0)
 ;
"RTN","ECXUTL4",211,0)
ECSCOST(ECXCOST) ;Get ECS extract stop code based on cost center
"RTN","ECXUTL4",212,0)
 ;
"RTN","ECXUTL4",213,0)
 ;
"RTN","ECXUTL4",214,0)
 ; Input:
"RTN","ECXUTL4",215,0)
 ;   ECXCOST  - ECS extract cost center
"RTN","ECXUTL4",216,0)
 ;
"RTN","ECXUTL4",217,0)
 ;Output:
"RTN","ECXUTL4",218,0)
 ;              ECS extract stop code
"RTN","ECXUTL4",219,0)
 ;
"RTN","ECXUTL4",220,0)
 N ECXFND,ECXSTOP,I
"RTN","ECXUTL4",221,0)
 S ECXFND=0
"RTN","ECXUTL4",222,0)
 S ECXSTOP=""
"RTN","ECXUTL4",223,0)
 S ECXCOST=+$G(ECXCOST)
"RTN","ECXUTL4",224,0)
 D
"RTN","ECXUTL4",225,0)
 . I 'ECXCOST Q
"RTN","ECXUTL4",226,0)
 . F I=1:1 Q:ECXFND!($P($T(COST+I),";;",2)="END")  D
"RTN","ECXUTL4",227,0)
 .. I ECXCOST=$P($T(COST+I),";;",2) S ECXSTOP=$P($T(COST+I),";;",3),ECXFND=1
"RTN","ECXUTL4",228,0)
 Q ECXSTOP
"RTN","ECXUTL4",229,0)
 ;
"RTN","ECXUTL4",230,0)
COST ;- ECS Cost Center and stop code
"RTN","ECXUTL4",231,0)
 ;;833100;;652
"RTN","ECXUTL4",232,0)
 ;;833200;;653
"RTN","ECXUTL4",233,0)
 ;;833300;;681
"RTN","ECXUTL4",234,0)
 ;;834100;;651
"RTN","ECXUTL4",235,0)
 ;;834200;;650
"RTN","ECXUTL4",236,0)
 ;;834300;;681
"RTN","ECXUTL4",237,0)
 ;;834400;;654
"RTN","ECXUTL4",238,0)
 ;;834500;;681
"RTN","ECXUTL4",239,0)
 ;;834600;;681
"RTN","ECXUTL4",240,0)
 ;;834700;;681
"RTN","ECXUTL4",241,0)
 ;;834800;;681
"RTN","ECXUTL4",242,0)
 ;;834900;;681
"RTN","ECXUTL4",243,0)
 ;;836100;;654
"RTN","ECXUTL4",244,0)
 ;;836200;;654
"RTN","ECXUTL4",245,0)
 ;;END
"RTN","ECXUTL4",246,0)
 ;
"RTN","ECXUTL4",247,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",248,0)
 ;
"RTN","ECXUTL4",249,0)
 ; Input:
"RTN","ECXUTL4",250,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",251,0)
 ;
"RTN","ECXUTL4",252,0)
 ;Output:
"RTN","ECXUTL4",253,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",254,0)
 ;
"RTN","ECXUTL4",255,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",256,0)
 S ECXHNCI=""
"RTN","ECXUTL4",257,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",258,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",259,0)
 Q ECXHNCI
"RTN","ECXUTL4",260,0)
 ;
"RTN","ECXUTL4",261,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",262,0)
 ; treating specialty
"RTN","ECXUTL4",263,0)
 ; Input:
"RTN","ECXUTL4",264,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",265,0)
 ;
"RTN","ECXUTL4",266,0)
 ; Output:
"RTN","ECXUTL4",267,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",268,0)
 ;
"RTN","ECXUTL4",269,0)
 N TS,SC,I
"RTN","ECXUTL4",270,0)
 S TS="^18^23^24^36^41^65^94^108^",SC="^293^295^290^294^296^291^292^297^"
"RTN","ECXUTL4",271,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",272,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL4",273,0)
OEFDATA ;
"RTN","ECXUTL4",274,0)
 ;get patient OEF/OIF status and date of return
"RTN","ECXUTL4",275,0)
 S (ECXOEF,ECXOEFDT)=""
"RTN","ECXUTL4",276,0)
 I $G(VASV(11))>0 S ECXOEF=ECXOEF_"OIF"
"RTN","ECXUTL4",277,0)
 I $G(VASV(12))>0 S ECXOEF=ECXOEF_"OEF"
"RTN","ECXUTL4",278,0)
 I $G(VASV(13))>0 S ECXOEF=ECXOEF_"UNK"
"RTN","ECXUTL4",279,0)
 I ECXOEF'="" D
"RTN","ECXUTL4",280,0)
 . S ECXOEFDT=""
"RTN","ECXUTL4",281,0)
 . I $G(VASV(11))>0 S ECXOEFDT=$P($G(VASV(11,$G(VASV(11)),3)),"^")
"RTN","ECXUTL4",282,0)
 . I $G(VASV(12))>0,$P($G(VASV(12,$G(VASV(12)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(12,$G(VASV(12)),3)),"^")
"RTN","ECXUTL4",283,0)
 . I $G(VASV(13))>0,$P($G(VASV(13,$G(VASV(13)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(13,$G(VASV(13)),3)),"^")
"RTN","ECXUTL4",284,0)
 . I ECXOEFDT>0 S ECXOEFDT=17000000+ECXOEFDT
"RTN","ECXUTL4",285,0)
 ;
"RTN","ECXUTL4",286,0)
 S ECXPAT("ECXOEF")=ECXOEF
"RTN","ECXUTL4",287,0)
 S ECXPAT("ECXOEFDT")=ECXOEFDT
"RTN","ECXUTL4",288,0)
 Q
"RTN","ECXUTL5")
0^28^B34433820^B34282148
"RTN","ECXUTL5",1,0)
ECXUTL5 ;ALB/JRC - Utilities for DSS Extracts ; 10/17/07 3:49pm
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84,92,103,105,120**;Dec 22, 1997;Build 43
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 K @ARRAY
"RTN","ECXUTL5",177,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",178,0)
 ;
"RTN","ECXUTL5",179,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",180,0)
 ;18,23,24,36,41,65,94,108(1J) then assign predefined code and return value
"RTN","ECXUTL5",181,0)
 ;
"RTN","ECXUTL5",182,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",183,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",184,0)
 ;
"RTN","ECXUTL5",185,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,X=108:297,1:"")
"RTN","ECXUTL5",186,0)
 Q CODE
"RTN","ECXUTL5",187,0)
 ;
"RTN","ECXUTL5",188,0)
PSJ59P5(X) ;Get iv room division
"RTN","ECXUTL5",189,0)
 ;   Input  X - iv room ien
"RTN","ECXUTL5",190,0)
 ;
"RTN","ECXUTL5",191,0)
 ;   Output - field .02 division
"RTN","ECXUTL5",192,0)
 ;Init variables
"RTN","ECXUTL5",193,0)
 N DIV S DIV=""
"RTN","ECXUTL5",194,0)
 ;Check input
"RTN","ECXUTL5",195,0)
 I 'X  Q DIV
"RTN","ECXUTL5",196,0)
 D ALL^PSJ59P5(X,,"ECXDIV")
"RTN","ECXUTL5",197,0)
 S DIV=$P($G(^TMP($J,"ECXDIV",X,.02)),U)
"RTN","ECXUTL5",198,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXUTL5",199,0)
 Q DIV
"RTN","ECXUTL5",200,0)
 ;
"RTN","ECXUTL5",201,0)
SCRX(IEN) ;Service connected prescription
"RTN","ECXUTL5",202,0)
 ;Init variables
"RTN","ECXUTL5",203,0)
 N DIC,DR,DA,ECXDIQ
"RTN","ECXUTL5",204,0)
 ;Check input
"RTN","ECXUTL5",205,0)
 I '$G(IEN) Q ""
"RTN","ECXUTL5",206,0)
 S DIC=52,DR="116",DA=IEN,DIQ="ECXDIQ"
"RTN","ECXUTL5",207,0)
 D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXUTL5",208,0)
 Q $S($G(ECXDIQ(52,DA,116))="YES":"Y",$G(ECXDIQ(52,DA,116))="NO":"N",1:"")
"RTN","ECXUTL5",209,0)
 ;
"RTN","ECXUTL5",210,0)
SSN(SSN,FILE) ; extended validation of ssn
"RTN","ECXUTL5",211,0)
 ;       input:     ssn - social security number to validate
"RTN","ECXUTL5",212,0)
 ;                  file - optional "", 2 or 67, the only check is for
"RTN","ECXUTL5",213,0)
 ;                         reference lab file (#67) in which case ssn
"RTN","ECXUTL5",214,0)
 ;                         "000123456" is considered a valid ssn.
"RTN","ECXUTL5",215,0)
 ;        output:   0 - test patient or invalid ssn
"RTN","ECXUTL5",216,0)
 ;                  1 - valid ssn
"RTN","ECXUTL5",217,0)
 ;
"RTN","ECXUTL5",218,0)
 ;check input
"RTN","ECXUTL5",219,0)
 I $G(SSN)']"" Q 0
"RTN","ECXUTL5",220,0)
 S FILE=$G(FILE)
"RTN","ECXUTL5",221,0)
 I (FILE=67)&(SSN="000123456") Q 1
"RTN","ECXUTL5",222,0)
 I "89"[$E(SSN) Q 0
"RTN","ECXUTL5",223,0)
 I (SSN="123456789")!(SSN="111111111")!(SSN="222222222")!(SSN="333333333")!(SSN="444444444")!(SSN="555555555")!($E(SSN,1,3)="666")!($E(SSN,4,5)="00")!($E(SSN,1,3)="000") Q 0
"RTN","ECXUTL5",224,0)
 Q 1
"VER")
8.0^22.0
"^DD",727.802,727.802,28,0)
TREATING SPECIALTY^F^^0;29^K:$L(X)>3!($L(X)<2) X
"^DD",727.802,727.802,28,.1)
Treating Specialty
"^DD",727.802,727.802,28,3)
PTF Code from Specialty File (42.4)
"^DD",727.802,727.802,28,21,0)
^^2^2^3070502^
"^DD",727.802,727.802,28,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.802,727.802,28,21,2,0)
record.
"^DD",727.802,727.802,28,23,0)
^^9^9^3091103^
"^DD",727.802,727.802,28,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) and 
"^DD",727.802,727.802,28,23,2,0)
the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4) in the
"^DD",727.802,727.802,28,23,3,0)
ADMISSION EXTRACT file (#727.802), TREATING SPECIALTY data is derived from
"^DD",727.802,727.802,28,23,4,0)
the FACILITY TREATING SPECIALTY field (#.09) in the PATIENT MOVEMENT file
"^DD",727.802,727.802,28,23,5,0)
(#405). This facility treating specialty data is a pointer to the FACILITY
"^DD",727.802,727.802,28,23,6,0)
TREATING SPECIALTY file (#45.7). Using the SPECIALTY field (#1) in the
"^DD",727.802,727.802,28,23,7,0)
FACILITY TREATING SPECIALTY file (#45.7), the pointer to the SPECIALTY
"^DD",727.802,727.802,28,23,8,0)
file (#42.4) is obtained.  Then, the PTF Code (field #7 of file 42.4) is
"^DD",727.802,727.802,28,23,9,0)
obtained and stored instead of the IEN of the specialty.
"^DD",727.802,727.802,28,"DT")
3091103
"^DD",727.802,727.802,75,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^1;39^Q
"^DD",727.802,727.802,75,21,0)
^.001^2^2^3090527^^^^
"^DD",727.802,727.802,75,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.802,727.802,75,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.802,727.802,75,23,0)
^.001^6^6^3090527^^^^
"^DD",727.802,727.802,75,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field 
"^DD",727.802,727.802,75,23,2,0)
(#.322013) in the Patient File (#2) using the patient's DFN.  The status 
"^DD",727.802,727.802,75,23,3,0)
indicator is returned by SVC^VADPT.  The field values are:
"^DD",727.802,727.802,75,23,4,0)
Y=YES
"^DD",727.802,727.802,75,23,5,0)
N=NO
"^DD",727.802,727.802,75,23,6,0)
U= UNKNOWN
"^DD",727.802,727.802,75,"DT")
3090527
"^DD",727.802,727.802,78,0)
ENCOUNTER SWAC^F^^1;42^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,78,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,78,21,0)
^.001^5^5^3090513^^
"^DD",727.802,727.802,78,21,1,0)
Indicates the appropriate response for exposure to Southwest Asia 
"^DD",727.802,727.802,78,21,2,0)
conditions as related to this patient's episode of care:
"^DD",727.802,727.802,78,21,3,0)
  Y = Yes
"^DD",727.802,727.802,78,21,4,0)
  N = No
"^DD",727.802,727.802,78,21,5,0)
  Null
"^DD",727.802,727.802,78,23,0)
^^6^6^3090513^
"^DD",727.802,727.802,78,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file 
"^DD",727.802,727.802,78,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.802,727.802,78,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the Southwest Asia conditions
"^DD",727.802,727.802,78,23,4,0)
indicator stored at the SW ASIA CONDITIONS field (#80004) in the VISIT
"^DD",727.802,727.802,78,23,5,0)
file (#9000010). The value will be stored in the output array subscripted
"^DD",727.802,727.802,78,23,6,0)
by "PGE".
"^DD",727.802,727.802,78,"DT")
3090513
"^DD",727.802,727.802,88,0)
ADMIT OUTPATIENT TX FLAG^S^Y:YES;^2;7^Q
"^DD",727.802,727.802,88,3)
Enter 'Y' if source of admission = admit outpatient treatment ('1P').
"^DD",727.802,727.802,88,21,0)
^^2^2^3090713^
"^DD",727.802,727.802,88,21,1,0)
This field contains the patient's source of admission flag. YES, if admit
"^DD",727.802,727.802,88,21,2,0)
outpatient treatment ('1P').
"^DD",727.802,727.802,88,"DT")
3090713
"^DD",727.802,727.802,89,0)
COUNTRY CODE^F^^2;8^K:$L(X)>3!($L(X)<1) X
"^DD",727.802,727.802,89,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.802,727.802,89,21,0)
^.001^2^2^3090609^^^^
"^DD",727.802,727.802,89,21,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.802,727.802,89,21,2,0)
field of the COUNTRY (#779.004) file.
"^DD",727.802,727.802,89,"DT")
3090609
"^DD",727.805,727.805,15,0)
TREATING SPECIALTY^F^^0;16^K:$L(X)>3!($L(X)<2) X
"^DD",727.805,727.805,15,.1)
Treating Specialty
"^DD",727.805,727.805,15,3)
Answer must be 2-3 characters in length
"^DD",727.805,727.805,15,21,0)
^^2^2^3070502^
"^DD",727.805,727.805,15,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.805,727.805,15,21,2,0)
record.
"^DD",727.805,727.805,15,23,0)
^^7^7^3091103^
"^DD",727.805,727.805,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.805,727.805,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.805,727.805,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.805,727.805,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.805,727.805,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.805,727.805,15,23,6,0)
SPECIALTY file (#42.4).  Then, the PTF Code (field #7 of file 42.4) is
"^DD",727.805,727.805,15,23,7,0)
obtained and stored instead of the IEN of the specialty.
"^DD",727.805,727.805,15,"DT")
3091103
"^DD",727.808,727.808,15,0)
TREATING SPECIALTY^F^^0;16^K:$L(X)>3!($L(X)<2) X
"^DD",727.808,727.808,15,.1)
Treating Specialty
"^DD",727.808,727.808,15,3)
PTF Code from Specialty File (42.4)
"^DD",727.808,727.808,15,21,0)
^.001^2^2^3091015^^
"^DD",727.808,727.808,15,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.808,727.808,15,21,2,0)
record.
"^DD",727.808,727.808,15,23,0)
^^9^9^3091103^
"^DD",727.808,727.808,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.808,727.808,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.808,727.808,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.808,727.808,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.808,727.808,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.808,727.808,15,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.808,727.808,15,23,7,0)
 
"^DD",727.808,727.808,15,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.808,727.808,15,23,9,0)
of the IEN of the specialty. 
"^DD",727.808,727.808,15,"DT")
3091103
"^DD",727.809,727.809,15,0)
TREATING SPECIALTY^F^^0;16^K:$L(X)>3!($L(X)<2) X
"^DD",727.809,727.809,15,.1)
Treating Specialty
"^DD",727.809,727.809,15,3)
Answer must be 2-3 characters in length
"^DD",727.809,727.809,15,21,0)
^^2^2^3070502^
"^DD",727.809,727.809,15,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.809,727.809,15,21,2,0)
record.
"^DD",727.809,727.809,15,23,0)
^^7^7^3091103^
"^DD",727.809,727.809,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.809,727.809,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.809,727.809,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.809,727.809,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.809,727.809,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.809,727.809,15,23,6,0)
SPECIALTY file (#42.4). Then, the PTF Code (field #7 of file 42.4) is
"^DD",727.809,727.809,15,23,7,0)
obtained and stored instead of the IEN of the specialty.
"^DD",727.809,727.809,15,"DT")
3091103
"^DD",727.809,727.809,58,0)
ORDERING STOP CODE^F^^2;2^K:$L(X)>3!($L(X)<3) X
"^DD",727.809,727.809,58,3)
Answer must be 3 characters in length
"^DD",727.809,727.809,58,21,0)
^.001^1^1^3091001^^^^
"^DD",727.809,727.809,58,21,1,0)
The ordering clinic's stop code.
"^DD",727.809,727.809,58,23,0)
^^16^16^3091001^
"^DD",727.809,727.809,58,23,1,0)
For outpatients the stop code is the primary stop code for the clinic
"^DD",727.809,727.809,58,23,2,0)
(first 3 characters of the DSS Identifier field of this extract). If none
"^DD",727.809,727.809,58,23,3,0)
exists, the value is set to null.
"^DD",727.809,727.809,58,23,4,0)
                             
"^DD",727.809,727.809,58,23,5,0)
For observation patients the stop code is translated using the following
"^DD",727.809,727.809,58,23,6,0)
table.
"^DD",727.809,727.809,58,23,7,0)
 
"^DD",727.809,727.809,58,23,8,0)
Treating Specialty      Observation Stop Code
"^DD",727.809,727.809,58,23,9,0)
       18                      293
"^DD",727.809,727.809,58,23,10,0)
       23                      295
"^DD",727.809,727.809,58,23,11,0)
       24                      290
"^DD",727.809,727.809,58,23,12,0)
       36                      296
"^DD",727.809,727.809,58,23,13,0)
       41                      294
"^DD",727.809,727.809,58,23,14,0)
       65                      291
"^DD",727.809,727.809,58,23,15,0)
       94                      292
"^DD",727.809,727.809,58,23,16,0)
       1J                      297
"^DD",727.809,727.809,58,"DT")
3020611
"^DD",727.809,727.809,76,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^2;20^Q
"^DD",727.809,727.809,76,21,0)
^.001^2^2^3090527^^
"^DD",727.809,727.809,76,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.809,727.809,76,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.809,727.809,76,23,0)
^.001^8^8^3090527^^
"^DD",727.809,727.809,76,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field (#.322013)
"^DD",727.809,727.809,76,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.809,727.809,76,23,3,0)
returned by SVC^VADPT. The SVC^VADPT called is made from routine
"^DD",727.809,727.809,76,23,4,0)
PAT^ECXUTL3. The field values are:
"^DD",727.809,727.809,76,23,5,0)
 
"^DD",727.809,727.809,76,23,6,0)
 Y = YES
"^DD",727.809,727.809,76,23,7,0)
 N = NO
"^DD",727.809,727.809,76,23,8,0)
 U = UNKNOWN
"^DD",727.809,727.809,76,"DT")
3090527
"^DD",727.809,727.809,82,0)
COUNTRY CODE^F^^2;26^K:$L(X)>3!($L(X)<1) X
"^DD",727.809,727.809,82,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.809,727.809,82,21,0)
^.001^2^2^3090609^^
"^DD",727.809,727.809,82,21,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.809,727.809,82,21,2,0)
field of the COUNTRY (#779.004) file.
"^DD",727.809,727.809,82,"DT")
3090609
"^DD",727.81,727.81,20,0)
TREATING SPECIALTY^F^^0;21^K:$L(X)>3!($L(X)<2) X
"^DD",727.81,727.81,20,.1)
Treating Specialty
"^DD",727.81,727.81,20,3)
Answer must be 2-3 characters in length
"^DD",727.81,727.81,20,21,0)
^^3^3^3070502^
"^DD",727.81,727.81,20,21,1,0)
The treating specialty PTF CODE assigned to this patient when the
"^DD",727.81,727.81,20,21,2,0)
prescription was issued, if the patient was an inpatient at that time.
"^DD",727.81,727.81,20,21,3,0)
Otherwise, this field is null.
"^DD",727.81,727.81,20,23,0)
^^7^7^3091103^
"^DD",727.81,727.81,20,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.81,727.81,20,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.81,727.81,20,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.81,727.81,20,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.81,727.81,20,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.81,727.81,20,23,6,0)
SPECIALTY file (#42.4).  Then, the PTF Code (field #7 of file 42.4) is
"^DD",727.81,727.81,20,23,7,0)
obtained and stored instead of the IEN of the specialty.
"^DD",727.81,727.81,20,"DT")
3091103
"^DD",727.81,727.81,86,0)
ENCOUNTER SWAC^F^^2;11^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,86,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,86,21,0)
^^5^5^3090513^
"^DD",727.81,727.81,86,21,1,0)
Indicate the appropriate response for Southwest Asia conditions as
"^DD",727.81,727.81,86,21,2,0)
related to this patient's episode of care:
"^DD",727.81,727.81,86,21,3,0)
  Y = Yes
"^DD",727.81,727.81,86,21,4,0)
  N = No
"^DD",727.81,727.81,86,21,5,0)
  Null
"^DD",727.81,727.81,86,23,0)
^^2^2^3090513^
"^DD",727.81,727.81,86,23,1,0)
This value will be retrieved from the SOUTHWEST ASIA CONDITIONS field #120
"^DD",727.81,727.81,86,23,2,0)
in the PRESCRIPTION #52 file.
"^DD",727.81,727.81,86,"DT")
3090513
"^DD",727.81,727.81,89,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^2;14^Q
"^DD",727.81,727.81,89,21,0)
^.001^2^2^3090527^^^
"^DD",727.81,727.81,89,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.81,727.81,89,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.81,727.81,89,23,0)
^.001^8^8^3090527^^
"^DD",727.81,727.81,89,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field (#.322013)
"^DD",727.81,727.81,89,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.81,727.81,89,23,3,0)
returned by SVC^VADPT. The SVC^VADPT called is made from routine
"^DD",727.81,727.81,89,23,4,0)
PAT^ECXUTL3. The field values are:
"^DD",727.81,727.81,89,23,5,0)
 
"^DD",727.81,727.81,89,23,6,0)
 Y = YES
"^DD",727.81,727.81,89,23,7,0)
 N = NO
"^DD",727.81,727.81,89,23,8,0)
 U = UNKNOWN
"^DD",727.81,727.81,89,"DT")
3090527
"^DD",727.81,727.81,97,0)
COUNTRY CODE^F^^2;22^K:$L(X)>3!($L(X)<1) X
"^DD",727.81,727.81,97,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.81,727.81,97,21,0)
^.001^2^2^3090609^^
"^DD",727.81,727.81,97,21,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.81,727.81,97,21,2,0)
field of the COUNTRY (#779.004) file.
"^DD",727.81,727.81,97,"DT")
3090609
"^DD",727.811,727.811,26,0)
TREATING SPECIALTY^F^^0;27^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,26,.1)
Treating Specialty
"^DD",727.811,727.811,26,3)
Answer must be 1-4 characters in length.
"^DD",727.811,727.811,26,21,0)
^.001^2^2^3091015^^
"^DD",727.811,727.811,26,21,1,0)
The PTF CODE of the treating specialty associated with this extract 
"^DD",727.811,727.811,26,21,2,0)
record.
"^DD",727.811,727.811,26,23,0)
^^9^9^3091103^
"^DD",727.811,727.811,26,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.811,727.811,26,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.811,727.811,26,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.811,727.811,26,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.811,727.811,26,23,5,0)
(#45.7), is used to get the SPECIALTY field (#1) which points to the 
"^DD",727.811,727.811,26,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.811,727.811,26,23,7,0)
 
"^DD",727.811,727.811,26,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.811,727.811,26,23,9,0)
of the IEN of the specialty.
"^DD",727.811,727.811,26,"DT")
3091103
"^DD",727.811,727.811,97,0)
ENCOUNTER SWAC^S^Y:YES;N:NO;^2;24^Q
"^DD",727.811,727.811,97,3)
Encounter related to treatment for Southwest Asia conditions - Y/N
"^DD",727.811,727.811,97,21,0)
^^3^3^3090513^
"^DD",727.811,727.811,97,21,1,0)
Indicates if treatment provided during this patient encounter is related 
"^DD",727.811,727.811,97,21,2,0)
to exposure Southwest Asia conditions while serving in the Southwest Asia 
"^DD",727.811,727.811,97,21,3,0)
Theater of operations.  Values: Y=YES, N=NO
"^DD",727.811,727.811,97,23,0)
^^4^4^3090513^
"^DD",727.811,727.811,97,23,1,0)
Using the pointer to the VISIT file (#90000.10) a call to the PCE 
"^DD",727.811,727.811,97,23,2,0)
API ENCEVENT^PXAPI is made.  This call returns visit data, including 
"^DD",727.811,727.811,97,23,3,0)
the SW ASIA CONDITIONS field (#80004) in the VISIT file 
"^DD",727.811,727.811,97,23,4,0)
(#9000010).
"^DD",727.811,727.811,97,"DT")
3090513
"^DD",727.811,727.811,102,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^2;29^Q
"^DD",727.811,727.811,102,3)
SW ASIA Conditions Status - Y=Yes, N=No, U=Unknown
"^DD",727.811,727.811,102,21,0)
^^2^2^3090513^
"^DD",727.811,727.811,102,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.811,727.811,102,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.811,727.811,102,23,0)
^^7^7^3090513^
"^DD",727.811,727.811,102,23,1,0)
his field is derived from the SOUTHWEST ASIA CONDITIONS? field 
"^DD",727.811,727.811,102,23,2,0)
(#.322013) in the Patient File (#2) using the patient's DFN.  The status 
"^DD",727.811,727.811,102,23,3,0)
indicator is returned by SVC^VADPT which is called by PAT^ECXUTL3. The
"^DD",727.811,727.811,102,23,4,0)
field values are:
"^DD",727.811,727.811,102,23,5,0)
Y=YES
"^DD",727.811,727.811,102,23,6,0)
N=NO
"^DD",727.811,727.811,102,23,7,0)
U= UNKNOWN 
"^DD",727.811,727.811,102,"DT")
3090609
"^DD",727.813,727.813,13,0)
TREATING SPECIALTY^F^^0;14^K:$L(X)>3!($L(X)<2) X
"^DD",727.813,727.813,13,.1)
Treating Specialty
"^DD",727.813,727.813,13,3)
Answer must be 2-3 characters in length
"^DD",727.813,727.813,13,21,0)
^^2^2^3070502^
"^DD",727.813,727.813,13,21,1,0)
Indicates treating specialty PTF CODE for this patient or entity.  Will be
"^DD",727.813,727.813,13,21,2,0)
set to null for outpatients.
"^DD",727.813,727.813,13,23,0)
^^17^17^3091103^
"^DD",727.813,727.813,13,23,1,0)
1. For Lab Extract without LMIP Codes:
"^DD",727.813,727.813,13,23,2,0)
   This field is initialized to a null, indicating an outpatient 
"^DD",727.813,727.813,13,23,3,0)
   status. If a call to IN5^VADPT (using the patient IEN and the event 
"^DD",727.813,727.813,13,23,4,0)
   date) returns a patient movement number (indicating inpatient 
"^DD",727.813,727.813,13,23,5,0)
   status), then the value of VAIP(8), which is the pointer to the 
"^DD",727.813,727.813,13,23,6,0)
   FACILITY TREATING SPECIALTY file (#45.7), is used to get the 
"^DD",727.813,727.813,13,23,7,0)
   SPECIALTY field (1) which points to the SPECIALTY file (#42.4). 
"^DD",727.813,727.813,13,23,8,0)
 
"^DD",727.813,727.813,13,23,9,0)
2. For Lab Extract with LMIP Codes:
"^DD",727.813,727.813,13,23,10,0)
   NAME field (.01) in the SPECIALTY file (#42.4), as pointed to by the 
"^DD",727.813,727.813,13,23,11,0)
   NAME field (.01) in the FACILITY TREATING SPECIALTY file (#45.7), as 
"^DD",727.813,727.813,13,23,12,0)
   pointed to by the TREATING SPECIALTY field (16) of the ACCESSION WKLD 
"^DD",727.813,727.813,13,23,13,0)
   CODE TIME field (1) multiple within the WKLD CODE field (1) multiple 
"^DD",727.813,727.813,13,23,14,0)
   within the DATE field (.03) multiple of the WKLD DATA file (#64.1).
"^DD",727.813,727.813,13,23,15,0)
 
"^DD",727.813,727.813,13,23,16,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.813,727.813,13,23,17,0)
of the IEN of the specialty. 
"^DD",727.813,727.813,13,"DT")
3091103
"^DD",727.814,727.814,18,0)
TREATING SPECIALTY^F^^0;19^K:$L(X)>3!($L(X)<2) X
"^DD",727.814,727.814,18,.1)
Treating Specialty
"^DD",727.814,727.814,18,3)
Answer must be 2-3 characters in length.
"^DD",727.814,727.814,18,21,0)
^.001^2^2^3091015^^
"^DD",727.814,727.814,18,21,1,0)
The PTF CODE of the treating specialty associated with this extract 
"^DD",727.814,727.814,18,21,2,0)
record.
"^DD",727.814,727.814,18,23,0)
^^9^9^3091103^
"^DD",727.814,727.814,18,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.814,727.814,18,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.814,727.814,18,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.814,727.814,18,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.814,727.814,18,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.814,727.814,18,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.814,727.814,18,23,7,0)
 
"^DD",727.814,727.814,18,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.814,727.814,18,23,9,0)
of the IEN of the specialty. 
"^DD",727.814,727.814,18,"DT")
3091103
"^DD",727.815,727.815,24,0)
TREATING SPECIALTY^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,24,.1)
Treating Specialty
"^DD",727.815,727.815,24,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,24,21,0)
^^3^3^3091015^
"^DD",727.815,727.815,24,21,1,0)
The PTF CODE of the treating specialty associated with this extract 
"^DD",727.815,727.815,24,21,2,0)
record. Only applicable if the patient was an inpatient on the date of the
"^DD",727.815,727.815,24,21,3,0)
procedure.
"^DD",727.815,727.815,24,23,0)
^^9^9^3091103^
"^DD",727.815,727.815,24,23,1,0)
This field is initialized to a null, indicating an outpatient status. If
"^DD",727.815,727.815,24,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a
"^DD",727.815,727.815,24,23,3,0)
patient movement number (indicating inpatient status), then the value of
"^DD",727.815,727.815,24,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.815,727.815,24,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.815,727.815,24,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.815,727.815,24,23,7,0)
 
"^DD",727.815,727.815,24,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.815,727.815,24,23,9,0)
of the IEN of the specialty. 
"^DD",727.815,727.815,24,"DT")
3091103
"^DD",727.815,727.815,36,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^0;37^Q
"^DD",727.815,727.815,36,.1)

"^DD",727.815,727.815,36,3)

"^DD",727.815,727.815,36,21,0)
^.001^2^2^3090527^^^^
"^DD",727.815,727.815,36,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.815,727.815,36,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.815,727.815,36,23,0)
^.001^7^7^3090527^^^^
"^DD",727.815,727.815,36,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field 
"^DD",727.815,727.815,36,23,2,0)
(#.322013) in the Patient File (#2) using the patient's DFN.  The status 
"^DD",727.815,727.815,36,23,3,0)
indicator is returned by SVC^VADPT which is called by PAT^ECXUTL3. The
"^DD",727.815,727.815,36,23,4,0)
field values are:
"^DD",727.815,727.815,36,23,5,0)
Y=YES
"^DD",727.815,727.815,36,23,6,0)
N=NO
"^DD",727.815,727.815,36,23,7,0)
U= UNKNOWN 
"^DD",727.815,727.815,36,"DT")
3090527
"^DD",727.815,727.815,85,0)
ENCOUNTER SWAC^F^^2;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,85,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,85,21,0)
^^5^5^3090513^
"^DD",727.815,727.815,85,21,1,0)
Indicates the appropriate response for Southwest Asia conditions as
"^DD",727.815,727.815,85,21,2,0)
related to this patient's episode of care:
"^DD",727.815,727.815,85,21,3,0)
  Y = Yes
"^DD",727.815,727.815,85,21,4,0)
  N = No
"^DD",727.815,727.815,85,21,5,0)
  Null
"^DD",727.815,727.815,85,23,0)
^^5^5^3090513^
"^DD",727.815,727.815,85,23,1,0)
Using the VISIT field (#28) in the EVENT CAPTURE PATIENT file (#721)
"^DD",727.815,727.815,85,23,2,0)
a call is made to API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI.
"^DD",727.815,727.815,85,23,3,0)
The ENCEVENT^PXAPI returns the Southwest Asia conditions indicator stored
"^DD",727.815,727.815,85,23,4,0)
at the SW ASIA CONDITIONS field (#80004) in the VISIT file (#9000010).
"^DD",727.815,727.815,85,23,5,0)
The value will be stored in the output array subscripted by "PGE".
"^DD",727.815,727.815,85,"DT")
3090513
"^DD",727.819,727.819,15,0)
TREATING SPECIALTY^F^^0;15^K:$L(X)>3!($L(X)<2) X
"^DD",727.819,727.819,15,.1)
Treating Specialty
"^DD",727.819,727.819,15,3)
Answer must be 2-3 characters in length
"^DD",727.819,727.819,15,21,0)
^^2^2^3070502^
"^DD",727.819,727.819,15,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.819,727.819,15,21,2,0)
record.
"^DD",727.819,727.819,15,23,0)
^^9^9^3091103^
"^DD",727.819,727.819,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.819,727.819,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.819,727.819,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.819,727.819,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.819,727.819,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.819,727.819,15,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.819,727.819,15,23,7,0)
 
"^DD",727.819,727.819,15,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.819,727.819,15,23,9,0)
of the IEN of the specialty. 
"^DD",727.819,727.819,15,"DT")
3091103
"^DD",727.819,727.819,20,0)
TOTAL DOSES PER DAY^F^^0;20^K:$L(X)>20!($L(X)<1) X
"^DD",727.819,727.819,20,.1)
Total Doses Per Day
"^DD",727.819,727.819,20,3)
Your answer must be 1 to 20 characters in length.
"^DD",727.819,727.819,20,21,0)
^^1^1^2990511^^^
"^DD",727.819,727.819,20,21,1,0)
The total doses per day including units.
"^DD",727.819,727.819,20,23,0)
^^9^9^2990511^^^
"^DD",727.819,727.819,20,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,20,23,2,0)
This field is set to null.
"^DD",727.819,727.819,20,23,3,0)
  
"^DD",727.819,727.819,20,23,4,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.819,727.819,20,23,5,0)
For additives, TOTAL DOSES PER DAY is derived from the ADDITIVE STRENGTH 
"^DD",727.819,727.819,20,23,6,0)
field (6) and the ADDITIVE STRENGTH UNITS field (7) from the IV EXTRACT 
"^DD",727.819,727.819,20,23,7,0)
DATA file (#728.113).
"^DD",727.819,727.819,20,23,8,0)
For solutions, TOTAL DOSES PER DAY is derived from the SOLUTION VOLUME
"^DD",727.819,727.819,20,23,9,0)
field (8), recorded in MLs, from the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,20,"DT")
3090616
"^DD",727.819,727.819,38,0)
ORDERING STOP CODE^F^^1;12^K:$L(X)>3!($L(X)<3) X
"^DD",727.819,727.819,38,3)
Answer must be 3 characters in length
"^DD",727.819,727.819,38,21,0)
^.001^2^2^3091001^^^^
"^DD",727.819,727.819,38,21,1,0)
This field contains the stop code associated with the order. This field is
"^DD",727.819,727.819,38,21,2,0)
set for outpatients only.
"^DD",727.819,727.819,38,23,0)
^^16^16^3091001^
"^DD",727.819,727.819,38,23,1,0)
For outpatients the stop code is the primary stop code for the clinic
"^DD",727.819,727.819,38,23,2,0)
(first 3 characters of the DSS Identifier field of this extract). If none
"^DD",727.819,727.819,38,23,3,0)
exists, the value is set to null.
"^DD",727.819,727.819,38,23,4,0)
 
"^DD",727.819,727.819,38,23,5,0)
For observation patients the stop code is translated using the following
"^DD",727.819,727.819,38,23,6,0)
table.
"^DD",727.819,727.819,38,23,7,0)
 
"^DD",727.819,727.819,38,23,8,0)
Treating Specialty      Observation Stop Code
"^DD",727.819,727.819,38,23,9,0)
       18                      293
"^DD",727.819,727.819,38,23,10,0)
       23                      295
"^DD",727.819,727.819,38,23,11,0)
       24                      290
"^DD",727.819,727.819,38,23,12,0)
       36                      296
"^DD",727.819,727.819,38,23,13,0)
       41                      294
"^DD",727.819,727.819,38,23,14,0)
       65                      291
"^DD",727.819,727.819,38,23,15,0)
       94                      292
"^DD",727.819,727.819,38,23,16,0)
       1J                      297
"^DD",727.819,727.819,38,"DT")
3021002
"^DD",727.819,727.819,81,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^2;18^Q
"^DD",727.819,727.819,81,21,0)
^.001^2^2^3090527^^
"^DD",727.819,727.819,81,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.819,727.819,81,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.819,727.819,81,23,0)
^.001^6^6^3090527^^
"^DD",727.819,727.819,81,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field 
"^DD",727.819,727.819,81,23,2,0)
(#.322013) in the Patient File (#2) using the patient's DFN.  The status 
"^DD",727.819,727.819,81,23,3,0)
indicator is returned by SVC^VADPT.  The field values are:
"^DD",727.819,727.819,81,23,4,0)
Y=YES
"^DD",727.819,727.819,81,23,5,0)
N=NO
"^DD",727.819,727.819,81,23,6,0)
U= UNKNOWN
"^DD",727.819,727.819,81,"DT")
3090527
"^DD",727.819,727.819,87,0)
COUNTRY CODE^F^^2;24^K:$L(X)>3!($L(X)<1) X
"^DD",727.819,727.819,87,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.819,727.819,87,21,0)
^.001^2^2^3090609^^
"^DD",727.819,727.819,87,21,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.819,727.819,87,21,2,0)
field of the COUNTRY (#779.004) file.
"^DD",727.819,727.819,87,"DT")
3090609
"^DD",727.824,727.824,18,0)
TREATING SPECIALTY^F^^0;18^K:$L(X)>3!($L(X)<2) X
"^DD",727.824,727.824,18,.1)
Treating Specialty
"^DD",727.824,727.824,18,3)
Answer must be 2-3 characters in length
"^DD",727.824,727.824,18,21,0)
^^2^2^3070502^
"^DD",727.824,727.824,18,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.824,727.824,18,21,2,0)
record.
"^DD",727.824,727.824,18,23,0)
^^9^9^3091103^
"^DD",727.824,727.824,18,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.824,727.824,18,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.824,727.824,18,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.824,727.824,18,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.824,727.824,18,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.824,727.824,18,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.824,727.824,18,23,7,0)
 
"^DD",727.824,727.824,18,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.824,727.824,18,23,9,0)
of the IEN of the specialty. 
"^DD",727.824,727.824,18,"DT")
3091103
"^DD",727.825,727.825,24,0)
TREATING SPECIALTY^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,24,.1)
Treating Specialty
"^DD",727.825,727.825,24,3)
Answer must be 1-6 characters in length.
"^DD",727.825,727.825,24,21,0)
^^3^3^3091015^
"^DD",727.825,727.825,24,21,1,0)
The PTF CODE of the treating specialty associated with this extract 
"^DD",727.825,727.825,24,21,2,0)
record. Only applicable if the patient was an inpatient on the date of the
"^DD",727.825,727.825,24,21,3,0)
procedure.
"^DD",727.825,727.825,24,23,0)
^^9^9^3091103^
"^DD",727.825,727.825,24,23,1,0)
This field is initialized to a null, indicating an outpatient status. If
"^DD",727.825,727.825,24,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a
"^DD",727.825,727.825,24,23,3,0)
patient movement number (indicating inpatient status), then the value of
"^DD",727.825,727.825,24,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.825,727.825,24,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the 
"^DD",727.825,727.825,24,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.825,727.825,24,23,7,0)
 
"^DD",727.825,727.825,24,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.825,727.825,24,23,9,0)
of the IEN of the specialty. 
"^DD",727.825,727.825,24,"DT")
3091103
"^DD",727.825,727.825,36,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^0;37^Q
"^DD",727.825,727.825,36,.1)

"^DD",727.825,727.825,36,3)

"^DD",727.825,727.825,36,21,0)
^^2^2^3090610^
"^DD",727.825,727.825,36,21,1,0)
Data is Y if this patient claims exposure to Southwest Asia conditions, 
"^DD",727.825,727.825,36,21,2,0)
N if not, U if unknown.
"^DD",727.825,727.825,36,23,0)
^^2^2^3090610^
"^DD",727.825,727.825,36,23,1,0)
SW ASIA CONDITIONS data is derived from the SW ASIA CONDITIONS  field (23)
"^DD",727.825,727.825,36,23,2,0)
in the EVENT CAPTURE PATIENT file (#721).
"^DD",727.825,727.825,36,"DT")
3090527
"^DD",727.825,727.825,85,0)
ENCOUNTER SWAC^F^^2;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,85,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,85,21,0)
^^6^6^3090513^
"^DD",727.825,727.825,85,21,1,0)
This field indicates whether treatment provided during this patient 
"^DD",727.825,727.825,85,21,2,0)
encounter is related to exposure to Southwest Asia conditions while 
"^DD",727.825,727.825,85,21,3,0)
serving in the Southwest Asia Theater of operations.
"^DD",727.825,727.825,85,21,4,0)
  Y = Yes
"^DD",727.825,727.825,85,21,5,0)
  N = No
"^DD",727.825,727.825,85,21,6,0)
  Null
"^DD",727.825,727.825,85,23,0)
^^6^6^3090513^
"^DD",727.825,727.825,85,23,1,0)
Using the PCE VISIT IEN field (#125) in the A&SP CLINIC VISIT file
"^DD",727.825,727.825,85,23,2,0)
(#509850.6) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.825,727.825,85,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the Southwest Asia conditions
"^DD",727.825,727.825,85,23,4,0)
indicator stored at the SW ASIA CONDITIONS field (#80004) in the VISIT
"^DD",727.825,727.825,85,23,5,0)
file (#9000010). The value will be stored in the output array
"^DD",727.825,727.825,85,23,6,0)
subscripted by "PGE".
"^DD",727.825,727.825,85,"DT")
3090513
"^DD",727.826,727.826,22,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^0;23^Q
"^DD",727.826,727.826,22,.1)
SW Asia Conditions
"^DD",727.826,727.826,22,3)

"^DD",727.826,727.826,22,10)
SW ASIA CONDITIONS? field (#.322013) from the Patient file (#2) as derived from DFN.
"^DD",727.826,727.826,22,21,0)
^.001^2^2^3090527^^^
"^DD",727.826,727.826,22,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.826,727.826,22,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.826,727.826,22,23,0)
^.001^7^7^3090527^^^
"^DD",727.826,727.826,22,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field 
"^DD",727.826,727.826,22,23,2,0)
(#.322013) in the Patient File (#2) using the patient's DFN.  The status 
"^DD",727.826,727.826,22,23,3,0)
indicator is returned by SVC^VADPT which is called by PAT^ECXUTL3. The
"^DD",727.826,727.826,22,23,4,0)
field values are:
"^DD",727.826,727.826,22,23,5,0)
Y=YES
"^DD",727.826,727.826,22,23,6,0)
N=NO
"^DD",727.826,727.826,22,23,7,0)
U= UNKNOWN 
"^DD",727.826,727.826,22,"DT")
3090527
"^DD",727.826,727.826,77,0)
ENCOUNTER SWAC^F^^1;45^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,77,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,77,21,0)
^^5^5^3090513^
"^DD",727.826,727.826,77,21,1,0)
Indicates the appropriate response for Southwest Asia conditions as
"^DD",727.826,727.826,77,21,2,0)
related to this patient's episode of care:
"^DD",727.826,727.826,77,21,3,0)
  Y = Yes
"^DD",727.826,727.826,77,21,4,0)
  N = No
"^DD",727.826,727.826,77,21,5,0)
  Null
"^DD",727.826,727.826,77,23,0)
^^6^6^3090513^
"^DD",727.826,727.826,77,23,1,0)
Using the PCE field (#8.12) in the RECORD OF PROS APPLIANCE/REPAIR file
"^DD",727.826,727.826,77,23,2,0)
(#606) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.826,727.826,77,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the Southwest Asia conditions
"^DD",727.826,727.826,77,23,4,0)
indicator stored at the SW ASIA CONDITIONS field (#80004) in the VISIT
"^DD",727.826,727.826,77,23,5,0)
file (#9000010). The value will be stored in the output array subscripted
"^DD",727.826,727.826,77,23,6,0)
"PGE".
"^DD",727.826,727.826,77,"DT")
3090513
"^DD",727.826,727.826,87,0)
COUNTRY CODE^F^^2;7^K:$L(X)>3!($L(X)<1) X
"^DD",727.826,727.826,87,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.826,727.826,87,21,0)
^.001^2^2^3090609^^
"^DD",727.826,727.826,87,21,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.826,727.826,87,21,2,0)
field of the COUNTRY (#779.004) file.
"^DD",727.826,727.826,87,"DT")
3090609
"^DD",727.827,727.827,84,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^2;24^Q
"^DD",727.827,727.827,84,21,0)
^.001^2^2^3090527^^^
"^DD",727.827,727.827,84,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.827,727.827,84,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.827,727.827,84,23,0)
^.001^6^6^3090527^^^
"^DD",727.827,727.827,84,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field 
"^DD",727.827,727.827,84,23,2,0)
(#.322013) in the Patient File (#2) using the patient's DFN.  The status 
"^DD",727.827,727.827,84,23,3,0)
indicator is returned by SVC^VADPT.  The field values are: 
"^DD",727.827,727.827,84,23,4,0)
 Y = YES
"^DD",727.827,727.827,84,23,5,0)
 N = NO
"^DD",727.827,727.827,84,23,6,0)
 U = UNKNOWN
"^DD",727.827,727.827,84,"DT")
3090527
"^DD",727.827,727.827,85,0)
ENCOUNTER SWAC^S^Y:YES;^2;25^Q
"^DD",727.827,727.827,85,21,0)
^.001^3^3^3090513^^
"^DD",727.827,727.827,85,21,1,0)
This field indicates whether treatment provided during this patient 
"^DD",727.827,727.827,85,21,2,0)
encounter is related to exposure to Southwest Asia conditions while 
"^DD",727.827,727.827,85,21,3,0)
serving in the Southwest Asia Theater of operations.
"^DD",727.827,727.827,85,23,0)
^.001^4^4^3090513^^
"^DD",727.827,727.827,85,23,1,0)
Using the pointer to the VISIT file (#90000.10) a call to the PCE API 
"^DD",727.827,727.827,85,23,2,0)
ENCEVENT^PXAPI is made. This call returns visit data including whether 
"^DD",727.827,727.827,85,23,3,0)
the visit was related to the patient's exposure to Southwest Asia 
"^DD",727.827,727.827,85,23,4,0)
conditions while serving in the Southwest Asia Theater of operations.
"^DD",727.827,727.827,85,"DT")
3090513
"^DD",727.827,727.827,93,0)
COUNTRY CODE^F^^3;1^K:$L(X)>3!($L(X)<1) X
"^DD",727.827,727.827,93,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.827,727.827,93,21,0)
^.001^2^2^3090609^^
"^DD",727.827,727.827,93,21,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.827,727.827,93,21,2,0)
field of the COUNTRY (#779.004) file.
"^DD",727.827,727.827,93,"DT")
3090609
"^DD",727.832,727.832,10,0)
TREATING SPECIALTY^F^^0;11^K:$L(X)>3!($L(X)<2) X
"^DD",727.832,727.832,10,3)
Answer must be 2-3 characters in length
"^DD",727.832,727.832,10,21,0)
^.001^2^2^3070502^^
"^DD",727.832,727.832,10,21,1,0)
The PTF CODE of the treating specialty associated with this extract record
"^DD",727.832,727.832,10,21,2,0)
form the SPECIALTY file (#42.4).
"^DD",727.832,727.832,10,23,0)
^^9^9^3091103^
"^DD",727.832,727.832,10,23,1,0)
This field is initialized to a null, indicating an outpatient status. If a
"^DD",727.832,727.832,10,23,2,0)
call to IN5^VADPT (using the patient IEN and the event date) returns a
"^DD",727.832,727.832,10,23,3,0)
patient movement number (indicating inpatient status), then the value of
"^DD",727.832,727.832,10,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file
"^DD",727.832,727.832,10,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the
"^DD",727.832,727.832,10,23,6,0)
SPECIALTY file (#42.4). 
"^DD",727.832,727.832,10,23,7,0)
 
"^DD",727.832,727.832,10,23,8,0)
Then, the PTF Code (field #7 of file 42.4) is obtained and stored instead
"^DD",727.832,727.832,10,23,9,0)
of the IEN of the specialty. 
"^DD",727.832,727.832,10,"DT")
3091103
"^DD",727.832,727.832,31,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^0;32^Q
"^DD",727.832,727.832,31,21,0)
^.001^2^2^3090527^^
"^DD",727.832,727.832,31,21,1,0)
This field is used to indicate if this visit represents treatment of a VA 
"^DD",727.832,727.832,31,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.832,727.832,31,23,0)
^.001^8^8^3090527^^
"^DD",727.832,727.832,31,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field (#.322013)
"^DD",727.832,727.832,31,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.832,727.832,31,23,3,0)
returned by SVC^VADPT. The SVC^VADPT called is made from routine
"^DD",727.832,727.832,31,23,4,0)
PAT^ECXUTL3. The field values are: 
"^DD",727.832,727.832,31,23,5,0)
 
"^DD",727.832,727.832,31,23,6,0)
  Y = YES 
"^DD",727.832,727.832,31,23,7,0)
  N = NO 
"^DD",727.832,727.832,31,23,8,0)
  U = UNKNOWN
"^DD",727.832,727.832,31,"DT")
3090527
"^DD",727.832,727.832,64,0)
COUNTRY CODE^F^^1;25^K:$L(X)>3!($L(X)<1) X
"^DD",727.832,727.832,64,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.832,727.832,64,21,0)
^.001^2^2^3090609^^
"^DD",727.832,727.832,64,21,1,0)
The three-character alpha identifying code is copied from the CODE (#.01) 
"^DD",727.832,727.832,64,21,2,0)
field of the COUNTRY (#779.004) file.
"^DD",727.832,727.832,64,"DT")
3090609
"^DD",728,728,73,0)
FY VERSION^F^^S;3^K:$L(X)>25!($L(X)<1) X
"^DD",728,728,73,3)
Answer must be 1-25 characters in length.
"^DD",728,728,73,21,0)
^^14^14^3090820^
"^DD",728,728,73,21,1,0)
This field identifies the site as a test site for a DSS Fiscal
"^DD",728,728,73,21,2,0)
Year Conversion patch. Only such a test site may allow users
"^DD",728,728,73,21,3,0)
to perform testing extracts via menu option ECX FISCAL YEAR EXTRACT.  
"^DD",728,728,73,21,4,0)
  
"^DD",728,728,73,21,5,0)
When a new version of a DSS Fiscal Year Conversion patch is 
"^DD",728,728,73,21,6,0)
installed at the site, this field will be automatically updated
"^DD",728,728,73,21,7,0)
as long as the patch install calls TESTON^ECXTREX as part of 
"^DD",728,728,73,21,8,0)
the post-installation process.
"^DD",728,728,73,21,9,0)
  
"^DD",728,728,73,21,10,0)
When the nationally released version of the DSS Fiscal Year 
"^DD",728,728,73,21,11,0)
Conversion patch is installed, this field will be automatically updated 
"^DD",728,728,73,21,12,0)
with the released version's sequence number.
"^DD",728,728,73,21,13,0)
 
"^DD",728,728,73,21,14,0)
Layout = patch#fy year#released patch sequence number.
"^DD",728,728,73,"DT")
3090820
"^DD",728.44,728.44,11,0)
NON-COUNT CLINIC (Y/N)^RS^Y:YES;N:NO;^0;12^Q
"^DD",728.44,728.44,11,3)
The value of this field should match field #2502 in the HOSPITAL LOCATION file (#44) for the same clinic.
"^DD",728.44,728.44,11,21,0)
^^2^2^3090526^
"^DD",728.44,728.44,11,21,1,0)
Is this clinic to be a non-count clinic for workload purposes? OR
"^DD",728.44,728.44,11,21,2,0)
Are visits to this clinic to be included in workload statistics?
"^DD",728.44,728.44,11,"DT")
3090525
"BLD",7879,6)
^110
**END**
**END**
