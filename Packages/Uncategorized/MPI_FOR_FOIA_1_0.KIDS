KIDS Distribution saved on Sep 22, 2005@13:06:33
Master Patient Index for FOIA (9/22/05)
**KIDS**:MPI FOR FOIA 1.0^

**INSTALL NAME**
MPI FOR FOIA 1.0
"BLD",1218,0)
MPI FOR FOIA 1.0^^0^3050922^n
"BLD",1218,1,0)
^^1^1^3050922^^^^
"BLD",1218,1,1,0)
Master Patient Index KIDS Build for FOIA (9/22/05)
"BLD",1218,4,0)
^9.64PA^991.11^12
"BLD",1218,4,985,0)
985
"BLD",1218,4,985,222)
y^y^f^^^^n
"BLD",1218,4,985.1,0)
985.1
"BLD",1218,4,985.1,222)
y^y^f^^^^n
"BLD",1218,4,985.2,0)
985.2
"BLD",1218,4,985.2,222)
y^y^f^^^^n
"BLD",1218,4,985.21,0)
985.21
"BLD",1218,4,985.21,222)
y^y^f^^^^n
"BLD",1218,4,985.25,0)
985.25
"BLD",1218,4,985.25,222)
y^y^f^^^^n
"BLD",1218,4,985.26,0)
985.26
"BLD",1218,4,985.26,222)
y^y^f^^^^n
"BLD",1218,4,985.3,0)
985.3
"BLD",1218,4,985.3,222)
y^y^f^^^^n
"BLD",1218,4,985.32,0)
985.32
"BLD",1218,4,985.32,222)
y^y^f^^^^n
"BLD",1218,4,985.33,0)
985.33
"BLD",1218,4,985.33,222)
y^y^f^^^^n
"BLD",1218,4,985.5,0)
985.5
"BLD",1218,4,985.5,222)
y^y^f^^^^n
"BLD",1218,4,985.9,0)
985.9
"BLD",1218,4,985.9,222)
y^y^f^^^^n
"BLD",1218,4,991.11,0)
991.11
"BLD",1218,4,991.11,222)
y^y^f^^y^^y^o^n
"BLD",1218,4,991.11,224)
N X S X=+^(0) I X>99!(X=18)
"BLD",1218,4,"B",985,985)

"BLD",1218,4,"B",985.1,985.1)

"BLD",1218,4,"B",985.2,985.2)

"BLD",1218,4,"B",985.21,985.21)

"BLD",1218,4,"B",985.25,985.25)

"BLD",1218,4,"B",985.26,985.26)

"BLD",1218,4,"B",985.3,985.3)

"BLD",1218,4,"B",985.32,985.32)

"BLD",1218,4,"B",985.33,985.33)

"BLD",1218,4,"B",985.5,985.5)

"BLD",1218,4,"B",985.9,985.9)

"BLD",1218,4,"B",991.11,991.11)

"BLD",1218,"KRN",0)
^9.67PA^8989.52^19
"BLD",1218,"KRN",.4,0)
.4
"BLD",1218,"KRN",.401,0)
.401
"BLD",1218,"KRN",.402,0)
.402
"BLD",1218,"KRN",.403,0)
.403
"BLD",1218,"KRN",.5,0)
.5
"BLD",1218,"KRN",.84,0)
.84
"BLD",1218,"KRN",3.6,0)
3.6
"BLD",1218,"KRN",3.8,0)
3.8
"BLD",1218,"KRN",3.8,"NM",0)
^9.68A^8^7
"BLD",1218,"KRN",3.8,"NM",1,0)
MPI^^0
"BLD",1218,"KRN",3.8,"NM",2,0)
MPI EXCEPTION REPORTS^^0
"BLD",1218,"KRN",3.8,"NM",3,0)
MPI EXCEPTIONS^^0
"BLD",1218,"KRN",3.8,"NM",4,0)
MPI HL7 ALERTS^^0
"BLD",1218,"KRN",3.8,"NM",5,0)
MPI HL7 GROUP^^0
"BLD",1218,"KRN",3.8,"NM",6,0)
MPI MONITOR^^0
"BLD",1218,"KRN",3.8,"NM",8,0)
MPI/PD POC UPDATE^^0
"BLD",1218,"KRN",3.8,"NM","B","MPI",1)

"BLD",1218,"KRN",3.8,"NM","B","MPI EXCEPTION REPORTS",2)

"BLD",1218,"KRN",3.8,"NM","B","MPI EXCEPTIONS",3)

"BLD",1218,"KRN",3.8,"NM","B","MPI HL7 ALERTS",4)

"BLD",1218,"KRN",3.8,"NM","B","MPI HL7 GROUP",5)

"BLD",1218,"KRN",3.8,"NM","B","MPI MONITOR",6)

"BLD",1218,"KRN",3.8,"NM","B","MPI/PD POC UPDATE",8)

"BLD",1218,"KRN",9.2,0)
9.2
"BLD",1218,"KRN",9.8,0)
9.8
"BLD",1218,"KRN",9.8,"NM",0)
^9.68A^235^134
"BLD",1218,"KRN",9.8,"NM",1,0)
MPIA08^^0^B49361747
"BLD",1218,"KRN",9.8,"NM",2,0)
MPIA19^^0^B56042097
"BLD",1218,"KRN",9.8,"NM",3,0)
MPIA19A^^0^B29941211
"BLD",1218,"KRN",9.8,"NM",4,0)
MPIA24^^0^B71511166
"BLD",1218,"KRN",9.8,"NM",5,0)
MPIA24D^^0^B53023832
"BLD",1218,"KRN",9.8,"NM",6,0)
MPIA24P^^0^B3621628
"BLD",1218,"KRN",9.8,"NM",7,0)
MPIA28^^0^B6190893
"BLD",1218,"KRN",9.8,"NM",8,0)
MPIA31^^0^B13872582
"BLD",1218,"KRN",9.8,"NM",9,0)
MPIA31B^^0^B8465860
"BLD",1218,"KRN",9.8,"NM",10,0)
MPIA37^^0^B34504983
"BLD",1218,"KRN",9.8,"NM",11,0)
MPIA37B^^0^B33876133
"BLD",1218,"KRN",9.8,"NM",12,0)
MPIA40^^0^B20969684
"BLD",1218,"KRN",9.8,"NM",13,0)
MPIA43^^0^B79616768
"BLD",1218,"KRN",9.8,"NM",14,0)
MPIA43B^^0^B28001174
"BLD",1218,"KRN",9.8,"NM",15,0)
MPIACK^^0^B10400096
"BLD",1218,"KRN",9.8,"NM",16,0)
MPIACTIV^^0^B44710071
"BLD",1218,"KRN",9.8,"NM",17,0)
MPIACTV2^^0^B6202563
"BLD",1218,"KRN",9.8,"NM",18,0)
MPIADT^^0^B49538628
"BLD",1218,"KRN",9.8,"NM",19,0)
MPIAUCL^^0^B2623230
"BLD",1218,"KRN",9.8,"NM",21,0)
MPIAUCL2^^0^B2981676
"BLD",1218,"KRN",9.8,"NM",22,0)
MPIAUD^^0^B35073918
"BLD",1218,"KRN",9.8,"NM",26,0)
MPIC^^0^B5481141
"BLD",1218,"KRN",9.8,"NM",31,0)
MPICPPF^^0^B6667053
"BLD",1218,"KRN",9.8,"NM",32,0)
MPIDAS^^0^B32324541
"BLD",1218,"KRN",9.8,"NM",33,0)
MPIDIRQ^^0^B1977895
"BLD",1218,"KRN",9.8,"NM",38,0)
MPIEXC01^^0^B53949850
"BLD",1218,"KRN",9.8,"NM",39,0)
MPIEXC02^^0^B28177012
"BLD",1218,"KRN",9.8,"NM",40,0)
MPIEXC03^^0^B11387850
"BLD",1218,"KRN",9.8,"NM",41,0)
MPIEXC04^^0^B12172655
"BLD",1218,"KRN",9.8,"NM",42,0)
MPIEXC05^^0^B11735025
"BLD",1218,"KRN",9.8,"NM",43,0)
MPIEXC06^^0^B11017955
"BLD",1218,"KRN",9.8,"NM",44,0)
MPIEXPRG^^0^B4029358
"BLD",1218,"KRN",9.8,"NM",45,0)
MPIGET^^0^B1930529
"BLD",1218,"KRN",9.8,"NM",64,0)
MPILMBJ^^0^B19202231
"BLD",1218,"KRN",9.8,"NM",66,0)
MPIMBC^^0^B18998077
"BLD",1218,"KRN",9.8,"NM",67,0)
MPIMDM01^^0^B27640377
"BLD",1218,"KRN",9.8,"NM",68,0)
MPIMDM02^^0^B66817532
"BLD",1218,"KRN",9.8,"NM",69,0)
MPIMDMA1^^0^B12479422
"BLD",1218,"KRN",9.8,"NM",70,0)
MPIMDMC1^^0^B17205474
"BLD",1218,"KRN",9.8,"NM",71,0)
MPIMDMC2^^0^B22272529
"BLD",1218,"KRN",9.8,"NM",72,0)
MPIMDMCW^^0^B17601096
"BLD",1218,"KRN",9.8,"NM",73,0)
MPIMDMF1^^0^B21927031
"BLD",1218,"KRN",9.8,"NM",74,0)
MPIMDMF2^^0^B35570941
"BLD",1218,"KRN",9.8,"NM",75,0)
MPIMDMPC^^0^B34738081
"BLD",1218,"KRN",9.8,"NM",76,0)
MPIMDMR1^^0^B80715450
"BLD",1218,"KRN",9.8,"NM",77,0)
MPIMDMT^^0^B44520262
"BLD",1218,"KRN",9.8,"NM",78,0)
MPIMDMU2^^0^B28790984
"BLD",1218,"KRN",9.8,"NM",79,0)
MPIMDMU3^^0^B49066729
"BLD",1218,"KRN",9.8,"NM",80,0)
MPIMDS01^^0^B69401291
"BLD",1218,"KRN",9.8,"NM",81,0)
MPIMDS03^^0^B15182357
"BLD",1218,"KRN",9.8,"NM",83,0)
MPIMER^^0^B3933318
"BLD",1218,"KRN",9.8,"NM",84,0)
MPIMHL^^0^B874338
"BLD",1218,"KRN",9.8,"NM",89,0)
MPIMMONT^^0^B9876219
"BLD",1218,"KRN",9.8,"NM",91,0)
MPIMPDAT^^0^B42718879
"BLD",1218,"KRN",9.8,"NM",113,0)
MPIMSFS^^0^B10722169
"BLD",1218,"KRN",9.8,"NM",114,0)
MPIMSFT^^0^B25813374
"BLD",1218,"KRN",9.8,"NM",118,0)
MPIMSRD^^0^B23389642
"BLD",1218,"KRN",9.8,"NM",124,0)
MPIMTRKE^^0^B14065258
"BLD",1218,"KRN",9.8,"NM",132,0)
MPIMVSN^^0^B16456757
"BLD",1218,"KRN",9.8,"NM",133,0)
MPINODFN^^0^B14269817
"BLD",1218,"KRN",9.8,"NM",134,0)
MPINPDAT^^0^B72364013
"BLD",1218,"KRN",9.8,"NM",137,0)
MPIP16^^0^B8619898
"BLD",1218,"KRN",9.8,"NM",138,0)
MPIP27^^0^B6596863
"BLD",1218,"KRN",9.8,"NM",139,0)
MPIPDAT^^0^B15457573
"BLD",1218,"KRN",9.8,"NM",140,0)
MPIPEXT^^0^B37899850
"BLD",1218,"KRN",9.8,"NM",155,0)
MPIPID2^^0^B19068434
"BLD",1218,"KRN",9.8,"NM",156,0)
MPIPIDB^^0^B27035626
"BLD",1218,"KRN",9.8,"NM",164,0)
MPIRACK^^0^B17660417
"BLD",1218,"KRN",9.8,"NM",165,0)
MPIRAUD^^0^B60126515
"BLD",1218,"KRN",9.8,"NM",166,0)
MPIRAUD2^^0^B10911086
"BLD",1218,"KRN",9.8,"NM",167,0)
MPIRCMRP^^0^B36971724
"BLD",1218,"KRN",9.8,"NM",168,0)
MPIRESS^^0^B9608024
"BLD",1218,"KRN",9.8,"NM",169,0)
MPIRINT^^0^B38296468
"BLD",1218,"KRN",9.8,"NM",170,0)
MPIRPDAT^^0^B56722750
"BLD",1218,"KRN",9.8,"NM",171,0)
MPIRPDT2^^0^B10927776
"BLD",1218,"KRN",9.8,"NM",172,0)
MPIRTASK^^0^B8522019
"BLD",1218,"KRN",9.8,"NM",174,0)
MPIRUTL^^0^B22693095
"BLD",1218,"KRN",9.8,"NM",175,0)
MPIRUTLI^^0^B72080612
"BLD",1218,"KRN",9.8,"NM",176,0)
MPISCORE^^0^B1003029
"BLD",1218,"KRN",9.8,"NM",179,0)
MPISIREV^^0^B18146370
"BLD",1218,"KRN",9.8,"NM",180,0)
MPISIST^^0^B85475888
"BLD",1218,"KRN",9.8,"NM",181,0)
MPISIUT^^0^B34741063
"BLD",1218,"KRN",9.8,"NM",182,0)
MPISSR1^^0^B52388378
"BLD",1218,"KRN",9.8,"NM",183,0)
MPISSR2^^0^B70166061
"BLD",1218,"KRN",9.8,"NM",184,0)
MPISSRU1^^0^B34913615
"BLD",1218,"KRN",9.8,"NM",185,0)
MPISTF1^^0^B65628726
"BLD",1218,"KRN",9.8,"NM",186,0)
MPISUT01^^0^B29073814
"BLD",1218,"KRN",9.8,"NM",187,0)
MPISUT02^^0^B2872576
"BLD",1218,"KRN",9.8,"NM",188,0)
MPITFOUT^^0^B71905099
"BLD",1218,"KRN",9.8,"NM",190,0)
MPIUMF^^0^B4008837
"BLD",1218,"KRN",9.8,"NM",191,0)
MPIUTL^^0^B13088910
"BLD",1218,"KRN",9.8,"NM",192,0)
MPIUTL1^^0^B6268176
"BLD",1218,"KRN",9.8,"NM",193,0)
MPIUTL10^^0^B27535236
"BLD",1218,"KRN",9.8,"NM",194,0)
MPIUTL11^^0^B54230309
"BLD",1218,"KRN",9.8,"NM",195,0)
MPIUTL13^^0^B20430187
"BLD",1218,"KRN",9.8,"NM",196,0)
MPIUTL2^^0^B16028732
"BLD",1218,"KRN",9.8,"NM",197,0)
MPIUTL3^^0^B57592165
"BLD",1218,"KRN",9.8,"NM",198,0)
MPIUTL4^^0^B28028802
"BLD",1218,"KRN",9.8,"NM",199,0)
MPIUTL5^^0^B21369270
"BLD",1218,"KRN",9.8,"NM",200,0)
MPIUTL6^^0^B54033708
"BLD",1218,"KRN",9.8,"NM",201,0)
MPIUTL7^^0^B36550135
"BLD",1218,"KRN",9.8,"NM",202,0)
MPIUTL8^^0^B33330023
"BLD",1218,"KRN",9.8,"NM",203,0)
MPIUTL9^^0^B46160960
"BLD",1218,"KRN",9.8,"NM",204,0)
MPIUWVTQ^^0^B7416139
"BLD",1218,"KRN",9.8,"NM",205,0)
MPIVTQ^^0^B41666173
"BLD",1218,"KRN",9.8,"NM",206,0)
MPIVTQF^^0^B42991701
"BLD",1218,"KRN",9.8,"NM",208,0)
MPIXCW^^0^B22075421
"BLD",1218,"KRN",9.8,"NM",209,0)
MPIXDD^^0^B13863697
"BLD",1218,"KRN",9.8,"NM",210,0)
MPIXEPT^^0^B58058953
"BLD",1218,"KRN",9.8,"NM",211,0)
MPIXEPT2^^0^B28871258
"BLD",1218,"KRN",9.8,"NM",212,0)
MPIXEWL^^0^B11333769
"BLD",1218,"KRN",9.8,"NM",213,0)
MPIXR^^0^B4481825
"BLD",1218,"KRN",9.8,"NM",214,0)
MPIXRP1^^0^B26522942
"BLD",1218,"KRN",9.8,"NM",215,0)
MPIXRP1A^^0^B9512739
"BLD",1218,"KRN",9.8,"NM",216,0)
MPIXRP1B^^0^B1057317
"BLD",1218,"KRN",9.8,"NM",217,0)
MPIXRP2^^0^B32640983
"BLD",1218,"KRN",9.8,"NM",218,0)
MPIXRP2A^^0^B9579570
"BLD",1218,"KRN",9.8,"NM",219,0)
MPIXSE^^0^B17299070
"BLD",1218,"KRN",9.8,"NM",220,0)
MPIXTYPR^^0^B6949646
"BLD",1218,"KRN",9.8,"NM",221,0)
MPIXU^^0^B9395454
"BLD",1218,"KRN",9.8,"NM",222,0)
MPIP11^^0^B3493087
"BLD",1218,"KRN",9.8,"NM",223,0)
MPIAUDIT^^0^B3142031
"BLD",1218,"KRN",9.8,"NM",224,0)
MPICAN^^0^B8224663
"BLD",1218,"KRN",9.8,"NM",225,0)
MPICANDB^^0^B106227
"BLD",1218,"KRN",9.8,"NM",226,0)
MPICANNM^^0^B1295483
"BLD",1218,"KRN",9.8,"NM",227,0)
MPICANSS^^0^B7615236
"BLD",1218,"KRN",9.8,"NM",228,0)
MPIA24C^^0^B1685333
"BLD",1218,"KRN",9.8,"NM",229,0)
MPIA24E^^0^B5306139
"BLD",1218,"KRN",9.8,"NM",230,0)
MPIA43R^^0^B4307259
"BLD",1218,"KRN",9.8,"NM",231,0)
MPIA43U^^0^B35901305
"BLD",1218,"KRN",9.8,"NM",232,0)
MPIA43U2^^0^B77883502
"BLD",1218,"KRN",9.8,"NM",233,0)
MPIMMSG^^0^B5329481
"BLD",1218,"KRN",9.8,"NM",234,0)
MPIQ22^^0^B14823051
"BLD",1218,"KRN",9.8,"NM",235,0)
MPIEU^^0^B33461515
"BLD",1218,"KRN",9.8,"NM","B","MPIA08",1)

"BLD",1218,"KRN",9.8,"NM","B","MPIA19",2)

"BLD",1218,"KRN",9.8,"NM","B","MPIA19A",3)

"BLD",1218,"KRN",9.8,"NM","B","MPIA24",4)

"BLD",1218,"KRN",9.8,"NM","B","MPIA24C",228)

"BLD",1218,"KRN",9.8,"NM","B","MPIA24D",5)

"BLD",1218,"KRN",9.8,"NM","B","MPIA24E",229)

"BLD",1218,"KRN",9.8,"NM","B","MPIA24P",6)

"BLD",1218,"KRN",9.8,"NM","B","MPIA28",7)

"BLD",1218,"KRN",9.8,"NM","B","MPIA31",8)

"BLD",1218,"KRN",9.8,"NM","B","MPIA31B",9)

"BLD",1218,"KRN",9.8,"NM","B","MPIA37",10)

"BLD",1218,"KRN",9.8,"NM","B","MPIA37B",11)

"BLD",1218,"KRN",9.8,"NM","B","MPIA40",12)

"BLD",1218,"KRN",9.8,"NM","B","MPIA43",13)

"BLD",1218,"KRN",9.8,"NM","B","MPIA43B",14)

"BLD",1218,"KRN",9.8,"NM","B","MPIA43R",230)

"BLD",1218,"KRN",9.8,"NM","B","MPIA43U",231)

"BLD",1218,"KRN",9.8,"NM","B","MPIA43U2",232)

"BLD",1218,"KRN",9.8,"NM","B","MPIACK",15)

"BLD",1218,"KRN",9.8,"NM","B","MPIACTIV",16)

"BLD",1218,"KRN",9.8,"NM","B","MPIACTV2",17)

"BLD",1218,"KRN",9.8,"NM","B","MPIADT",18)

"BLD",1218,"KRN",9.8,"NM","B","MPIAUCL",19)

"BLD",1218,"KRN",9.8,"NM","B","MPIAUCL2",21)

"BLD",1218,"KRN",9.8,"NM","B","MPIAUD",22)

"BLD",1218,"KRN",9.8,"NM","B","MPIAUDIT",223)

"BLD",1218,"KRN",9.8,"NM","B","MPIC",26)

"BLD",1218,"KRN",9.8,"NM","B","MPICAN",224)

"BLD",1218,"KRN",9.8,"NM","B","MPICANDB",225)

"BLD",1218,"KRN",9.8,"NM","B","MPICANNM",226)

"BLD",1218,"KRN",9.8,"NM","B","MPICANSS",227)

"BLD",1218,"KRN",9.8,"NM","B","MPICPPF",31)

"BLD",1218,"KRN",9.8,"NM","B","MPIDAS",32)

"BLD",1218,"KRN",9.8,"NM","B","MPIDIRQ",33)

"BLD",1218,"KRN",9.8,"NM","B","MPIEU",235)

"BLD",1218,"KRN",9.8,"NM","B","MPIEXC01",38)

"BLD",1218,"KRN",9.8,"NM","B","MPIEXC02",39)

"BLD",1218,"KRN",9.8,"NM","B","MPIEXC03",40)

"BLD",1218,"KRN",9.8,"NM","B","MPIEXC04",41)

"BLD",1218,"KRN",9.8,"NM","B","MPIEXC05",42)

"BLD",1218,"KRN",9.8,"NM","B","MPIEXC06",43)

"BLD",1218,"KRN",9.8,"NM","B","MPIEXPRG",44)

"BLD",1218,"KRN",9.8,"NM","B","MPIGET",45)

"BLD",1218,"KRN",9.8,"NM","B","MPILMBJ",64)

"BLD",1218,"KRN",9.8,"NM","B","MPIMBC",66)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDM01",67)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDM02",68)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMA1",69)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMC1",70)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMC2",71)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMCW",72)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMF1",73)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMF2",74)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMPC",75)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMR1",76)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMT",77)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMU2",78)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDMU3",79)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDS01",80)

"BLD",1218,"KRN",9.8,"NM","B","MPIMDS03",81)

"BLD",1218,"KRN",9.8,"NM","B","MPIMER",83)

"BLD",1218,"KRN",9.8,"NM","B","MPIMHL",84)

"BLD",1218,"KRN",9.8,"NM","B","MPIMMONT",89)

"BLD",1218,"KRN",9.8,"NM","B","MPIMMSG",233)

"BLD",1218,"KRN",9.8,"NM","B","MPIMPDAT",91)

"BLD",1218,"KRN",9.8,"NM","B","MPIMSFS",113)

"BLD",1218,"KRN",9.8,"NM","B","MPIMSFT",114)

"BLD",1218,"KRN",9.8,"NM","B","MPIMSRD",118)

"BLD",1218,"KRN",9.8,"NM","B","MPIMTRKE",124)

"BLD",1218,"KRN",9.8,"NM","B","MPIMVSN",132)

"BLD",1218,"KRN",9.8,"NM","B","MPINODFN",133)

"BLD",1218,"KRN",9.8,"NM","B","MPINPDAT",134)

"BLD",1218,"KRN",9.8,"NM","B","MPIP11",222)

"BLD",1218,"KRN",9.8,"NM","B","MPIP16",137)

"BLD",1218,"KRN",9.8,"NM","B","MPIP27",138)

"BLD",1218,"KRN",9.8,"NM","B","MPIPDAT",139)

"BLD",1218,"KRN",9.8,"NM","B","MPIPEXT",140)

"BLD",1218,"KRN",9.8,"NM","B","MPIPID2",155)

"BLD",1218,"KRN",9.8,"NM","B","MPIPIDB",156)

"BLD",1218,"KRN",9.8,"NM","B","MPIQ22",234)

"BLD",1218,"KRN",9.8,"NM","B","MPIRACK",164)

"BLD",1218,"KRN",9.8,"NM","B","MPIRAUD",165)

"BLD",1218,"KRN",9.8,"NM","B","MPIRAUD2",166)

"BLD",1218,"KRN",9.8,"NM","B","MPIRCMRP",167)

"BLD",1218,"KRN",9.8,"NM","B","MPIRESS",168)

"BLD",1218,"KRN",9.8,"NM","B","MPIRINT",169)

"BLD",1218,"KRN",9.8,"NM","B","MPIRPDAT",170)

"BLD",1218,"KRN",9.8,"NM","B","MPIRPDT2",171)

"BLD",1218,"KRN",9.8,"NM","B","MPIRTASK",172)

"BLD",1218,"KRN",9.8,"NM","B","MPIRUTL",174)

"BLD",1218,"KRN",9.8,"NM","B","MPIRUTLI",175)

"BLD",1218,"KRN",9.8,"NM","B","MPISCORE",176)

"BLD",1218,"KRN",9.8,"NM","B","MPISIREV",179)

"BLD",1218,"KRN",9.8,"NM","B","MPISIST",180)

"BLD",1218,"KRN",9.8,"NM","B","MPISIUT",181)

"BLD",1218,"KRN",9.8,"NM","B","MPISSR1",182)

"BLD",1218,"KRN",9.8,"NM","B","MPISSR2",183)

"BLD",1218,"KRN",9.8,"NM","B","MPISSRU1",184)

"BLD",1218,"KRN",9.8,"NM","B","MPISTF1",185)

"BLD",1218,"KRN",9.8,"NM","B","MPISUT01",186)

"BLD",1218,"KRN",9.8,"NM","B","MPISUT02",187)

"BLD",1218,"KRN",9.8,"NM","B","MPITFOUT",188)

"BLD",1218,"KRN",9.8,"NM","B","MPIUMF",190)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL",191)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL1",192)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL10",193)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL11",194)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL13",195)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL2",196)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL3",197)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL4",198)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL5",199)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL6",200)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL7",201)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL8",202)

"BLD",1218,"KRN",9.8,"NM","B","MPIUTL9",203)

"BLD",1218,"KRN",9.8,"NM","B","MPIUWVTQ",204)

"BLD",1218,"KRN",9.8,"NM","B","MPIVTQ",205)

"BLD",1218,"KRN",9.8,"NM","B","MPIVTQF",206)

"BLD",1218,"KRN",9.8,"NM","B","MPIXCW",208)

"BLD",1218,"KRN",9.8,"NM","B","MPIXDD",209)

"BLD",1218,"KRN",9.8,"NM","B","MPIXEPT",210)

"BLD",1218,"KRN",9.8,"NM","B","MPIXEPT2",211)

"BLD",1218,"KRN",9.8,"NM","B","MPIXEWL",212)

"BLD",1218,"KRN",9.8,"NM","B","MPIXR",213)

"BLD",1218,"KRN",9.8,"NM","B","MPIXRP1",214)

"BLD",1218,"KRN",9.8,"NM","B","MPIXRP1A",215)

"BLD",1218,"KRN",9.8,"NM","B","MPIXRP1B",216)

"BLD",1218,"KRN",9.8,"NM","B","MPIXRP2",217)

"BLD",1218,"KRN",9.8,"NM","B","MPIXRP2A",218)

"BLD",1218,"KRN",9.8,"NM","B","MPIXSE",219)

"BLD",1218,"KRN",9.8,"NM","B","MPIXTYPR",220)

"BLD",1218,"KRN",9.8,"NM","B","MPIXU",221)

"BLD",1218,"KRN",19,0)
19
"BLD",1218,"KRN",19,"NM",0)
^9.68A^141^78
"BLD",1218,"KRN",19,"NM",2,0)
MPI AUDIT PURGE^^0
"BLD",1218,"KRN",19,"NM",4,0)
MPI DATA MGT ACT WORK DEV TEAM^^0
"BLD",1218,"KRN",19,"NM",11,0)
MPI DATA MGT BROADCAST TF UPD^^0
"BLD",1218,"KRN",19,"NM",12,0)
MPI DATA MGT CHK MESSAGING^^0
"BLD",1218,"KRN",19,"NM",13,0)
MPI DATA MGT CHK OUT^^0
"BLD",1218,"KRN",19,"NM",14,0)
MPI DATA MGT COMPILE DUP SSN^^0
"BLD",1218,"KRN",19,"NM",15,0)
MPI DATA MGT CREATE CASE^^0
"BLD",1218,"KRN",19,"NM",16,0)
MPI DATA MGT CW STATS^^0
"BLD",1218,"KRN",19,"NM",17,0)
MPI DATA MGT DSSN PDAT MPI^^0
"BLD",1218,"KRN",19,"NM",18,0)
MPI DATA MGT DT CONTACT RPT^^0
"BLD",1218,"KRN",19,"NM",19,0)
MPI DATA MGT DUP RES^^0
"BLD",1218,"KRN",19,"NM",20,0)
MPI DATA MGT DUP SSN MENU^^0
"BLD",1218,"KRN",19,"NM",21,0)
MPI DATA MGT E/E DT CONTACT^^0
"BLD",1218,"KRN",19,"NM",24,0)
MPI DATA MGT JOURNAL DMT^^0
"BLD",1218,"KRN",19,"NM",26,0)
MPI DATA MGT MPI ICN AUDIT^^0
"BLD",1218,"KRN",19,"NM",27,0)
MPI DATA MGT PDAT EXT MPI^^0
"BLD",1218,"KRN",19,"NM",28,0)
MPI DATA MGT PDAT MPI^^0
"BLD",1218,"KRN",19,"NM",29,0)
MPI DATA MGT PROC STAT RPT^^0
"BLD",1218,"KRN",19,"NM",30,0)
MPI DATA MGT PRT BRKOUT VISN^^0
"BLD",1218,"KRN",19,"NM",31,0)
MPI DATA MGT PRT DUP SSN RPT^^0
"BLD",1218,"KRN",19,"NM",32,0)
MPI DATA MGT PT DATA INQ MENU^^0
"BLD",1218,"KRN",19,"NM",33,0)
MPI DATA MGT REEST ICN^^0
"BLD",1218,"KRN",19,"NM",34,0)
MPI DATA MGT REM DISP PACT QRY^^0
"BLD",1218,"KRN",19,"NM",35,0)
MPI DATA MGT REM DISP PAUD QRY^^0
"BLD",1218,"KRN",19,"NM",36,0)
MPI DATA MGT REM DISP PDAT QRY^^0
"BLD",1218,"KRN",19,"NM",37,0)
MPI DATA MGT REM QRY MENU^^0
"BLD",1218,"KRN",19,"NM",38,0)
MPI DATA MGT REM SEND PACT QRY^^0
"BLD",1218,"KRN",19,"NM",39,0)
MPI DATA MGT REM SEND PAUD QRY^^0
"BLD",1218,"KRN",19,"NM",40,0)
MPI DATA MGT REM SEND PDAT QRY^^0
"BLD",1218,"KRN",19,"NM",42,0)
MPI DATA MGT REMOTE CMOR PUSH^^0
"BLD",1218,"KRN",19,"NM",43,0)
MPI DATA MGT REMOTE CMOR UPDT^^0
"BLD",1218,"KRN",19,"NM",44,0)
MPI DATA MGT REMOTE DATA SYNC^^0
"BLD",1218,"KRN",19,"NM",45,0)
MPI DATA MGT REMOTE ICN UPDATE^^0
"BLD",1218,"KRN",19,"NM",47,0)
MPI DATA MGT REMOTE SPI^^0
"BLD",1218,"KRN",19,"NM",48,0)
MPI DATA MGT REP MENU^^0
"BLD",1218,"KRN",19,"NM",49,0)
MPI DATA MGT REP PC STATS^^0
"BLD",1218,"KRN",19,"NM",50,0)
MPI DATA MGT REVIEW CHK OUT^^0
"BLD",1218,"KRN",19,"NM",52,0)
MPI DATA MGT SETUP E/E PC^^0
"BLD",1218,"KRN",19,"NM",53,0)
MPI DATA MGT SETUP EDIT VISN^^0
"BLD",1218,"KRN",19,"NM",54,0)
MPI DATA MGT SETUP MENU^^0
"BLD",1218,"KRN",19,"NM",55,0)
MPI DATA MGT SETUP PRT PC^^0
"BLD",1218,"KRN",19,"NM",56,0)
MPI DATA MGT SETUP VISN REPORT^^0
"BLD",1218,"KRN",19,"NM",57,0)
MPI DATA MGT SHAR PT SITES REP^^0
"BLD",1218,"KRN",19,"NM",58,0)
MPI DATA MGT SHAR PT TREND REP^^0
"BLD",1218,"KRN",19,"NM",59,0)
MPI DATA MGT STAT REP DISP^^0
"BLD",1218,"KRN",19,"NM",60,0)
MPI DATA MGT STAT RPT INTERACT^^0
"BLD",1218,"KRN",19,"NM",61,0)
MPI DATA MGT STAT RPT QUEUED^^0
"BLD",1218,"KRN",19,"NM",62,0)
MPI DATA MGT SUMMARY RPT^^0
"BLD",1218,"KRN",19,"NM",63,0)
MPI DATA MGT TFCHK RPT PRT^^0
"BLD",1218,"KRN",19,"NM",64,0)
MPI DATA MGT TFCHK RPT QUEUED^^0
"BLD",1218,"KRN",19,"NM",66,0)
MPI DATA MGT UPDATE MENU^^0
"BLD",1218,"KRN",19,"NM",67,0)
MPI DATA MGT VIEW CASE^^0
"BLD",1218,"KRN",19,"NM",68,0)
MPI EXCEPTION SERVER^^0
"BLD",1218,"KRN",19,"NM",70,0)
MPI ID STATE MENU^^0
"BLD",1218,"KRN",19,"NM",71,0)
MPI ID STATE REMAIN^^0
"BLD",1218,"KRN",19,"NM",72,0)
MPI ID STATE REPORT^^0
"BLD",1218,"KRN",19,"NM",73,0)
MPI ID STATE SET ALL^^0
"BLD",1218,"KRN",19,"NM",74,0)
MPI ID STATE SET SELECTED^^0
"BLD",1218,"KRN",19,"NM",75,0)
MPI ID STATE VALIDATE^^0
"BLD",1218,"KRN",19,"NM",76,0)
MPI MONITORING^^0
"BLD",1218,"KRN",19,"NM",77,0)
MPI NEW PDAT^^0
"BLD",1218,"KRN",19,"NM",89,0)
MPIDMGR^^0
"BLD",1218,"KRN",19,"NM",90,0)
MPIM DAILY PARTIAL QUERY^^0
"BLD",1218,"KRN",19,"NM",100,0)
MPIM QUERY ACK CHECK BCKJOB^^0
"BLD",1218,"KRN",19,"NM",101,0)
MPIM QUERY ACK CHECK INTERACT^^0
"BLD",1218,"KRN",19,"NM",129,0)
MPIX DETAIL CW EXCEPTION RPT^^0
"BLD",1218,"KRN",19,"NM",130,0)
MPIX EXC TYPE STATS RPT^^0
"BLD",1218,"KRN",19,"NM",131,0)
MPIX EXCEPTION HANDLER MENU^^0
"BLD",1218,"KRN",19,"NM",132,0)
MPIX EXCEPTION HANDLING^^0
"BLD",1218,"KRN",19,"NM",133,0)
MPIX EXCEPTION WORKLOAD RPT^^0
"BLD",1218,"KRN",19,"NM",134,0)
MPIX MSG TYPE EXCEPTION STATS^^0
"BLD",1218,"KRN",19,"NM",135,0)
MPIX PURGE 120^^0
"BLD",1218,"KRN",19,"NM",136,0)
MPIX SEARCH EXCEPTIONS ICN/SSN^^0
"BLD",1218,"KRN",19,"NM",137,0)
MPI DATA MGT MISMATCH PT RES^^0
"BLD",1218,"KRN",19,"NM",138,0)
MPI DATA MGT UNL DUP PTS^^0
"BLD",1218,"KRN",19,"NM",139,0)
MPIM MGR REPORTS^^0
"BLD",1218,"KRN",19,"NM",140,0)
MPI DATA MGT EXC TOTS REP^^0
"BLD",1218,"KRN",19,"NM",141,0)
MPI DATA MGT LOC ICN REP^^0
"BLD",1218,"KRN",19,"NM","B","MPI AUDIT PURGE",2)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT ACT WORK DEV TEAM",4)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT BROADCAST TF UPD",11)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT CHK MESSAGING",12)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT CHK OUT",13)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT COMPILE DUP SSN",14)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT CREATE CASE",15)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT CW STATS",16)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT DSSN PDAT MPI",17)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT DT CONTACT RPT",18)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT DUP RES",19)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT DUP SSN MENU",20)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT E/E DT CONTACT",21)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT EXC TOTS REP",140)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT JOURNAL DMT",24)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT LOC ICN REP",141)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT MISMATCH PT RES",137)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT MPI ICN AUDIT",26)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT PDAT EXT MPI",27)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT PDAT MPI",28)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT PROC STAT RPT",29)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT PRT BRKOUT VISN",30)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT PRT DUP SSN RPT",31)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT PT DATA INQ MENU",32)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REEST ICN",33)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REM DISP PACT QRY",34)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REM DISP PAUD QRY",35)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REM DISP PDAT QRY",36)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REM QRY MENU",37)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REM SEND PACT QRY",38)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REM SEND PAUD QRY",39)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REM SEND PDAT QRY",40)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REMOTE CMOR PUSH",42)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REMOTE CMOR UPDT",43)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REMOTE DATA SYNC",44)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REMOTE ICN UPDATE",45)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REMOTE SPI",47)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REP MENU",48)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REP PC STATS",49)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT REVIEW CHK OUT",50)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SETUP E/E PC",52)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SETUP EDIT VISN",53)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SETUP MENU",54)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SETUP PRT PC",55)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SETUP VISN REPORT",56)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SHAR PT SITES REP",57)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SHAR PT TREND REP",58)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT STAT REP DISP",59)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT STAT RPT INTERACT",60)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT STAT RPT QUEUED",61)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT SUMMARY RPT",62)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT TFCHK RPT PRT",63)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT TFCHK RPT QUEUED",64)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT UNL DUP PTS",138)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT UPDATE MENU",66)

"BLD",1218,"KRN",19,"NM","B","MPI DATA MGT VIEW CASE",67)

"BLD",1218,"KRN",19,"NM","B","MPI EXCEPTION SERVER",68)

"BLD",1218,"KRN",19,"NM","B","MPI ID STATE MENU",70)

"BLD",1218,"KRN",19,"NM","B","MPI ID STATE REMAIN",71)

"BLD",1218,"KRN",19,"NM","B","MPI ID STATE REPORT",72)

"BLD",1218,"KRN",19,"NM","B","MPI ID STATE SET ALL",73)

"BLD",1218,"KRN",19,"NM","B","MPI ID STATE SET SELECTED",74)

"BLD",1218,"KRN",19,"NM","B","MPI ID STATE VALIDATE",75)

"BLD",1218,"KRN",19,"NM","B","MPI MONITORING",76)

"BLD",1218,"KRN",19,"NM","B","MPI NEW PDAT",77)

"BLD",1218,"KRN",19,"NM","B","MPIDMGR",89)

"BLD",1218,"KRN",19,"NM","B","MPIM DAILY PARTIAL QUERY",90)

"BLD",1218,"KRN",19,"NM","B","MPIM MGR REPORTS",139)

"BLD",1218,"KRN",19,"NM","B","MPIM QUERY ACK CHECK BCKJOB",100)

"BLD",1218,"KRN",19,"NM","B","MPIM QUERY ACK CHECK INTERACT",101)

"BLD",1218,"KRN",19,"NM","B","MPIX DETAIL CW EXCEPTION RPT",129)

"BLD",1218,"KRN",19,"NM","B","MPIX EXC TYPE STATS RPT",130)

"BLD",1218,"KRN",19,"NM","B","MPIX EXCEPTION HANDLER MENU",131)

"BLD",1218,"KRN",19,"NM","B","MPIX EXCEPTION HANDLING",132)

"BLD",1218,"KRN",19,"NM","B","MPIX EXCEPTION WORKLOAD RPT",133)

"BLD",1218,"KRN",19,"NM","B","MPIX MSG TYPE EXCEPTION STATS",134)

"BLD",1218,"KRN",19,"NM","B","MPIX PURGE 120",135)

"BLD",1218,"KRN",19,"NM","B","MPIX SEARCH EXCEPTIONS ICN/SSN",136)

"BLD",1218,"KRN",19.1,0)
19.1
"BLD",1218,"KRN",19.1,"NM",0)
^9.68A^3^2
"BLD",1218,"KRN",19.1,"NM",2,0)
MPI DQ MGR^^0
"BLD",1218,"KRN",19.1,"NM",3,0)
MPIDMGR^^0
"BLD",1218,"KRN",19.1,"NM","B","MPI DQ MGR",2)

"BLD",1218,"KRN",19.1,"NM","B","MPIDMGR",3)

"BLD",1218,"KRN",101,0)
101
"BLD",1218,"KRN",101,"NM",0)
^9.68A^71^54
"BLD",1218,"KRN",101,"NM",8,0)
MPI A31^^0
"BLD",1218,"KRN",101,"NM",9,0)
MPI A31 REQUEST^^0
"BLD",1218,"KRN",101,"NM",11,0)
MPI ADT-A01 CLIENT^^0
"BLD",1218,"KRN",101,"NM",12,0)
MPI ADT-A01 SERVER^^0
"BLD",1218,"KRN",101,"NM",13,0)
MPI ADT-A03 CLIENT^^0
"BLD",1218,"KRN",101,"NM",14,0)
MPI ADT-A03 SERVER^^0
"BLD",1218,"KRN",101,"NM",15,0)
MPI ADT-A04 CLIENT^^0
"BLD",1218,"KRN",101,"NM",16,0)
MPI ADT-A04 SERVER^^0
"BLD",1218,"KRN",101,"NM",17,0)
MPI ADT-A08 CLIENT^^0
"BLD",1218,"KRN",101,"NM",18,0)
MPI ADT-A08 SERVER^^0
"BLD",1218,"KRN",101,"NM",19,0)
MPI ADT-A24 CLIENT^^0
"BLD",1218,"KRN",101,"NM",20,0)
MPI ADT-A24 SERVER^^0
"BLD",1218,"KRN",101,"NM",21,0)
MPI ADT-A28 CLIENT^^0
"BLD",1218,"KRN",101,"NM",22,0)
MPI ADT-A28 SERVER^^0
"BLD",1218,"KRN",101,"NM",23,0)
MPI ADT-A31 CLIENT^^0
"BLD",1218,"KRN",101,"NM",24,0)
MPI ADT-A31 SERVER^^0
"BLD",1218,"KRN",101,"NM",25,0)
MPI ADT-A37 CLIENT^^0
"BLD",1218,"KRN",101,"NM",26,0)
MPI ADT-A37 SERVER^^0
"BLD",1218,"KRN",101,"NM",27,0)
MPI ADT-A40 CLIENT^^0
"BLD",1218,"KRN",101,"NM",28,0)
MPI ADT-A40 SERVER^^0
"BLD",1218,"KRN",101,"NM",29,0)
MPI ADT-A43 CLIENT^^0
"BLD",1218,"KRN",101,"NM",30,0)
MPI ADT-A43 SERVER^^0
"BLD",1218,"KRN",101,"NM",31,0)
MPI CMOR APP/DIS^^0
"BLD",1218,"KRN",101,"NM",32,0)
MPI CMOR APPROVE/DISAPPROVE^^0
"BLD",1218,"KRN",101,"NM",33,0)
MPI CMOR REQUEST^^0
"BLD",1218,"KRN",101,"NM",34,0)
MPI CMOR RESPONSE^^0
"BLD",1218,"KRN",101,"NM",36,0)
MPI FACILITY INTEGRATION CLIENT^^0
"BLD",1218,"KRN",101,"NM",37,0)
MPI FACILITY INTEGRATION SERVER^^0
"BLD",1218,"KRN",101,"NM",38,0)
MPI ICN-Q02 SERVER^^0
"BLD",1218,"KRN",101,"NM",41,0)
MPI MFN-M05 CLIENT^^0
"BLD",1218,"KRN",101,"NM",42,0)
MPI MFN-M05 SERVER^^0
"BLD",1218,"KRN",101,"NM",43,0)
MPI QRY-A19 CLIENT^^0
"BLD",1218,"KRN",101,"NM",44,0)
MPI QRY-A19 SERVER^^0
"BLD",1218,"KRN",101,"NM",49,0)
MPI TEST^^0
"BLD",1218,"KRN",101,"NM",52,0)
MPIX EXCPT ACTION MENU^^0
"BLD",1218,"KRN",101,"NM",53,0)
MPIX EXCPT ASSIGN CASEWORKER^^0
"BLD",1218,"KRN",101,"NM",54,0)
MPIX EXCPT CASEWORKER SORT^^0
"BLD",1218,"KRN",101,"NM",55,0)
MPIX EXCPT DATE SORT^^0
"BLD",1218,"KRN",101,"NM",56,0)
MPIX EXCPT ICN SORT^^0
"BLD",1218,"KRN",101,"NM",57,0)
MPIX EXCPT MAIN MENU^^0
"BLD",1218,"KRN",101,"NM",58,0)
MPIX EXCPT NOTE^^0
"BLD",1218,"KRN",101,"NM",59,0)
MPIX EXCPT PDAT^^0
"BLD",1218,"KRN",101,"NM",60,0)
MPIX EXCPT PDAT MENU^^0
"BLD",1218,"KRN",101,"NM",61,0)
MPIX EXCPT RCHK^^0
"BLD",1218,"KRN",101,"NM",62,0)
MPIX EXCPT RDISP^^0
"BLD",1218,"KRN",101,"NM",63,0)
MPIX EXCPT REFRESH LIST^^0
"BLD",1218,"KRN",101,"NM",64,0)
MPIX EXCPT RESOLVE^^0
"BLD",1218,"KRN",101,"NM",65,0)
MPIX EXCPT RESOLVED LIST^^0
"BLD",1218,"KRN",101,"NM",66,0)
MPIX EXCPT RSEND^^0
"BLD",1218,"KRN",101,"NM",67,0)
MPIX EXCPT SELECT^^0
"BLD",1218,"KRN",101,"NM",68,0)
MPIX EXCPT SITE SORT^^0
"BLD",1218,"KRN",101,"NM",69,0)
MPIX EXCPT TYPE SORT^^0
"BLD",1218,"KRN",101,"NM",70,0)
MPI QBP-Q22 SERVER^^0
"BLD",1218,"KRN",101,"NM",71,0)
MPI RSP-K22 CLIENT^^0
"BLD",1218,"KRN",101,"NM","B","MPI A31",8)

"BLD",1218,"KRN",101,"NM","B","MPI A31 REQUEST",9)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A01 CLIENT",11)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A01 SERVER",12)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A03 CLIENT",13)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A03 SERVER",14)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A04 CLIENT",15)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A04 SERVER",16)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A08 CLIENT",17)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A08 SERVER",18)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A24 CLIENT",19)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A24 SERVER",20)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A28 CLIENT",21)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A28 SERVER",22)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A31 CLIENT",23)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A31 SERVER",24)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A37 CLIENT",25)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A37 SERVER",26)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A40 CLIENT",27)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A40 SERVER",28)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A43 CLIENT",29)

"BLD",1218,"KRN",101,"NM","B","MPI ADT-A43 SERVER",30)

"BLD",1218,"KRN",101,"NM","B","MPI CMOR APP/DIS",31)

"BLD",1218,"KRN",101,"NM","B","MPI CMOR APPROVE/DISAPPROVE",32)

"BLD",1218,"KRN",101,"NM","B","MPI CMOR REQUEST",33)

"BLD",1218,"KRN",101,"NM","B","MPI CMOR RESPONSE",34)

"BLD",1218,"KRN",101,"NM","B","MPI FACILITY INTEGRATION CLIENT",36)

"BLD",1218,"KRN",101,"NM","B","MPI FACILITY INTEGRATION SERVER",37)

"BLD",1218,"KRN",101,"NM","B","MPI ICN-Q02 SERVER",38)

"BLD",1218,"KRN",101,"NM","B","MPI MFN-M05 CLIENT",41)

"BLD",1218,"KRN",101,"NM","B","MPI MFN-M05 SERVER",42)

"BLD",1218,"KRN",101,"NM","B","MPI QBP-Q22 SERVER",70)

"BLD",1218,"KRN",101,"NM","B","MPI QRY-A19 CLIENT",43)

"BLD",1218,"KRN",101,"NM","B","MPI QRY-A19 SERVER",44)

"BLD",1218,"KRN",101,"NM","B","MPI RSP-K22 CLIENT",71)

"BLD",1218,"KRN",101,"NM","B","MPI TEST",49)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT ACTION MENU",52)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT ASSIGN CASEWORKER",53)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT CASEWORKER SORT",54)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT DATE SORT",55)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT ICN SORT",56)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT MAIN MENU",57)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT NOTE",58)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT PDAT",59)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT PDAT MENU",60)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT RCHK",61)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT RDISP",62)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT REFRESH LIST",63)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT RESOLVE",64)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT RESOLVED LIST",65)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT RSEND",66)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT SELECT",67)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT SITE SORT",68)

"BLD",1218,"KRN",101,"NM","B","MPIX EXCPT TYPE SORT",69)

"BLD",1218,"KRN",409.61,0)
409.61
"BLD",1218,"KRN",409.61,"NM",0)
^9.68A^5^5
"BLD",1218,"KRN",409.61,"NM",1,0)
MPIX EXCPT ACTION^^0
"BLD",1218,"KRN",409.61,"NM",2,0)
MPIX EXCPT PDAT^^0
"BLD",1218,"KRN",409.61,"NM",3,0)
MPIX EXCPT PEXT^^0
"BLD",1218,"KRN",409.61,"NM",4,0)
MPIX EXCPT RPDAT^^0
"BLD",1218,"KRN",409.61,"NM",5,0)
MPIX EXCPT SUMMARY^^0
"BLD",1218,"KRN",409.61,"NM","B","MPIX EXCPT ACTION",1)

"BLD",1218,"KRN",409.61,"NM","B","MPIX EXCPT PDAT",2)

"BLD",1218,"KRN",409.61,"NM","B","MPIX EXCPT PEXT",3)

"BLD",1218,"KRN",409.61,"NM","B","MPIX EXCPT RPDAT",4)

"BLD",1218,"KRN",409.61,"NM","B","MPIX EXCPT SUMMARY",5)

"BLD",1218,"KRN",771,0)
771
"BLD",1218,"KRN",771,"NM",0)
^9.68A^8^8
"BLD",1218,"KRN",771,"NM",1,0)
MPI^^0
"BLD",1218,"KRN",771,"NM",2,0)
MPIF A29 SERVER^^0
"BLD",1218,"KRN",771,"NM",3,0)
MPIF A30 SERVER^^0
"BLD",1218,"KRN",771,"NM",4,0)
MPIF CMOR CHNG^^0
"BLD",1218,"KRN",771,"NM",5,0)
MPIF CMOR RSLT^^0
"BLD",1218,"KRN",771,"NM",6,0)
MPIF MPI^^0
"BLD",1218,"KRN",771,"NM",7,0)
MPIF TRIGGER^^0
"BLD",1218,"KRN",771,"NM",8,0)
MPIF-STARTUP^^0
"BLD",1218,"KRN",771,"NM","B","MPI",1)

"BLD",1218,"KRN",771,"NM","B","MPIF A29 SERVER",2)

"BLD",1218,"KRN",771,"NM","B","MPIF A30 SERVER",3)

"BLD",1218,"KRN",771,"NM","B","MPIF CMOR CHNG",4)

"BLD",1218,"KRN",771,"NM","B","MPIF CMOR RSLT",5)

"BLD",1218,"KRN",771,"NM","B","MPIF MPI",6)

"BLD",1218,"KRN",771,"NM","B","MPIF TRIGGER",7)

"BLD",1218,"KRN",771,"NM","B","MPIF-STARTUP",8)

"BLD",1218,"KRN",870,0)
870
"BLD",1218,"KRN",870,"NM",0)
^9.68A^2^2
"BLD",1218,"KRN",870,"NM",1,0)
MPI DIRECT^^0
"BLD",1218,"KRN",870,"NM",2,0)
MPI TCP^^0
"BLD",1218,"KRN",870,"NM","B","MPI DIRECT",1)

"BLD",1218,"KRN",870,"NM","B","MPI TCP",2)

"BLD",1218,"KRN",8989.51,0)
8989.51
"BLD",1218,"KRN",8989.52,0)
8989.52
"BLD",1218,"KRN",8994,0)
8994
"BLD",1218,"KRN",8994,"NM",0)
^9.68A^11^11
"BLD",1218,"KRN",8994,"NM",1,0)
MPIF ACK CHECK^^0
"BLD",1218,"KRN",8994,"NM",2,0)
MPIF CHANGE CMOR^^0
"BLD",1218,"KRN",8994,"NM",3,0)
MPIF CMOR PUSH REMOTE^^0
"BLD",1218,"KRN",8994,"NM",4,0)
MPIF EXT PDAT REMOTE^^0
"BLD",1218,"KRN",8994,"NM",5,0)
MPIF ICN STATS^^0
"BLD",1218,"KRN",8994,"NM",6,0)
MPIF INACTIVATE^^0
"BLD",1218,"KRN",8994,"NM",7,0)
MPIF REMOTE ICN UPDATE^^0
"BLD",1218,"KRN",8994,"NM",8,0)
MPIF REMOTE SPI^^0
"BLD",1218,"KRN",8994,"NM",9,0)
MPIF SEEDING STATS^^0
"BLD",1218,"KRN",8994,"NM",10,0)
MPIF SEEDING UPDATE^^0
"BLD",1218,"KRN",8994,"NM",11,0)
MPIF SSN DUPS^^0
"BLD",1218,"KRN",8994,"NM","B","MPIF ACK CHECK",1)

"BLD",1218,"KRN",8994,"NM","B","MPIF CHANGE CMOR",2)

"BLD",1218,"KRN",8994,"NM","B","MPIF CMOR PUSH REMOTE",3)

"BLD",1218,"KRN",8994,"NM","B","MPIF EXT PDAT REMOTE",4)

"BLD",1218,"KRN",8994,"NM","B","MPIF ICN STATS",5)

"BLD",1218,"KRN",8994,"NM","B","MPIF INACTIVATE",6)

"BLD",1218,"KRN",8994,"NM","B","MPIF REMOTE ICN UPDATE",7)

"BLD",1218,"KRN",8994,"NM","B","MPIF REMOTE SPI",8)

"BLD",1218,"KRN",8994,"NM","B","MPIF SEEDING STATS",9)

"BLD",1218,"KRN",8994,"NM","B","MPIF SEEDING UPDATE",10)

"BLD",1218,"KRN",8994,"NM","B","MPIF SSN DUPS",11)

"BLD",1218,"KRN","B",.4,.4)

"BLD",1218,"KRN","B",.401,.401)

"BLD",1218,"KRN","B",.402,.402)

"BLD",1218,"KRN","B",.403,.403)

"BLD",1218,"KRN","B",.5,.5)

"BLD",1218,"KRN","B",.84,.84)

"BLD",1218,"KRN","B",3.6,3.6)

"BLD",1218,"KRN","B",3.8,3.8)

"BLD",1218,"KRN","B",9.2,9.2)

"BLD",1218,"KRN","B",9.8,9.8)

"BLD",1218,"KRN","B",19,19)

"BLD",1218,"KRN","B",19.1,19.1)

"BLD",1218,"KRN","B",101,101)

"BLD",1218,"KRN","B",409.61,409.61)

"BLD",1218,"KRN","B",771,771)

"BLD",1218,"KRN","B",870,870)

"BLD",1218,"KRN","B",8989.51,8989.51)

"BLD",1218,"KRN","B",8989.52,8989.52)

"BLD",1218,"KRN","B",8994,8994)

"BLD",1218,"QUES",0)
^9.62^^
"BLD",1218,"REQB",0)
^9.611^^
"DATA",991.11,18,0)
18^0^0^^0
"DATA",991.11,18,10)
Unclassified exception
"DATA",991.11,18,99,0)
^^3^3^2970206.114932
"DATA",991.11,18,99,1,0)
Refer to the supplemental text reported with this exception to determine the 
"DATA",991.11,18,99,2,0)
nature of the problem.  This exception type should normally not be used, but is 
"DATA",991.11,18,99,3,0)
provided for backward compatibility.
"DATA",991.11,200,0)
200^2^1^^4
"DATA",991.11,200,10)
Missing BHS Segment
"DATA",991.11,200,99,0)
^^2^2^2980818^^
"DATA",991.11,200,99,1,0)
Missing BHS Segment in message received from the MPI in the batch load
"DATA",991.11,200,99,2,0)
initialization.
"DATA",991.11,201,0)
201^1^1^^8
"DATA",991.11,201,10)
Missing MSH Segment
"DATA",991.11,201,99,0)
^^1^1^2980110^^
"DATA",991.11,201,99,1,0)
Missing MSH segment in MPI Batch Message being processed from the MPI.
"DATA",991.11,202,0)
202^1^1^^0
"DATA",991.11,202,10)
Missing QAK Segment
"DATA",991.11,202,99,0)
^^1^1^2980110^^
"DATA",991.11,202,99,1,0)
Missing QAK segment in MPI Batch Initialization Message from the MPI.
"DATA",991.11,203,0)
203^1^1^^0
"DATA",991.11,203,10)
Missing MSA Segment
"DATA",991.11,203,99,0)
^^1^1^2980110^^
"DATA",991.11,203,99,1,0)
Missing MSA segment from MPI Batch Initialization Message from the MPI.
"DATA",991.11,204,0)
204^1^1^^4
"DATA",991.11,204,10)
Missing RDF Segment
"DATA",991.11,204,99,0)
^^1^1^2980110^^
"DATA",991.11,204,99,1,0)
Missing RDF Segment from MPI Initialization Batch Message from the MPI.
"DATA",991.11,205,0)
205^1^1^^0
"DATA",991.11,205,10)
Missing RDT Segment
"DATA",991.11,205,99,0)
^^1^1^2980110^^
"DATA",991.11,205,99,1,0)
Missing RDT Segment from the Batch Initialization Message from the MPI.
"DATA",991.11,206,0)
206^1^1^^0
"DATA",991.11,206,10)
Could Not Create VTQ
"DATA",991.11,206,99,0)
^^2^2^2980110^
"DATA",991.11,206,99,1,0)
Unable to create VTQ query segment in Batch Initialization Message to the
"DATA",991.11,206,99,2,0)
MPI.  Tracking only missing encoding characters or invalid DFN.
"DATA",991.11,207,0)
207^2^1^^0
"DATA",991.11,207,10)
Application Reject Error
"DATA",991.11,207,99,0)
^^1^1^2980110^^
"DATA",991.11,207,99,1,0)
Application Rejection Error, wrong application sent in message to MPI.
"DATA",991.11,208,0)
208^2^1^^0
"DATA",991.11,208,10)
Application Error
"DATA",991.11,208,99,0)
^^1^1^2980110^^
"DATA",991.11,208,99,1,0)
Application Error returned from the MPI.
"DATA",991.11,209,0)
209^1
"DATA",991.11,209,10)
Required field(s) Date of Birth or Name missing for patient sent to MPI
"DATA",991.11,209,99,0)
^^3^3^2990121^
"DATA",991.11,209,99,1,0)
No data was returned in the QAK Segment in the Batch Initialization
"DATA",991.11,209,99,2,0)
message from the MPI.  This was returned due to missing one or both of the
"DATA",991.11,209,99,3,0)
required fields - Name or Date of Birth.
"DATA",991.11,210,0)
210^1^1^^20
"DATA",991.11,210,10)
Patient DFN Failed
"DATA",991.11,210,99,0)
^^1^1^2990421^^
"DATA",991.11,210,99,1,0)
Patient DFN is bad, lookup in Patient file failed.
"DATA",991.11,211,0)
211^1^1^^26
"DATA",991.11,211,10)
CMOR Lookup Failed
"DATA",991.11,211,99,0)
^991.1199^2^2^3050922^^^^
"DATA",991.11,211,99,1,0)
CMOR Lookup failed in Institution file.  Maybe two entries with the same
"DATA",991.11,211,99,2,0)
station number or missing a station number.
"DATA",991.11,212,0)
212^1^1^^40
"DATA",991.11,212,10)
TF Update Failed in Pivot file
"DATA",991.11,212,99,0)
^^2^2^2990701^^^
"DATA",991.11,212,99,1,0)
Attempted to add treating facility update to Adt/HL7 Pivot file and it
"DATA",991.11,212,99,2,0)
failed to add.
"DATA",991.11,213,0)
213^1^^^17
"DATA",991.11,213,10)
SSN Match Failed
"DATA",991.11,213,99,0)
^^1^1^2980110^
"DATA",991.11,213,99,1,0)
SSN returned from MPI did not match DFN's entry in Patient file.
"DATA",991.11,214,0)
214^1^^^1
"DATA",991.11,214,10)
Name Doesn't Match
"DATA",991.11,214,99,0)
^^1^1^2980110^
"DATA",991.11,214,99,1,0)
Name returned from MPI did not match DFN's entry in Patient file.
"DATA",991.11,215,0)
215^1
"DATA",991.11,215,10)
Death Entry on MPI not in VISTA
"DATA",991.11,215,99,0)
^^1^1^2980110^
"DATA",991.11,215,99,1,0)
MPI had Date of Death field populated.  Vista did not have Date of Death.
"DATA",991.11,216,0)
216^1
"DATA",991.11,216,10)
Death Entry on Vista not in MPI
"DATA",991.11,216,99,0)
^^1^1^2980110^
"DATA",991.11,216,99,1,0)
VISTA had Date of Death field populated.  MPI did not have Date of Death.
"DATA",991.11,217,0)
217^1
"DATA",991.11,217,10)
Death Entries on MPI and Vista DO NOT Match
"DATA",991.11,217,99,0)
^^1^1^2980110^
"DATA",991.11,217,99,1,0)
MPI and VistA had different dates of death for this patient.
"DATA",991.11,218,0)
218^0^^^6
"DATA",991.11,218,10)
Potential Matches Returned
"DATA",991.11,218,99,0)
^991.1199^2^2^3050922^^^
"DATA",991.11,218,99,1,0)
Missing or Local ICN resolution job returned potential matches from the
"DATA",991.11,218,99,2,0)
MPI.  This must be resolved via the Interactive Query option.
"DATA",991.11,219,0)
219^2^1^^0
"DATA",991.11,219,10)
Missing ICN
"DATA",991.11,219,99,0)
^^1^1^2990526^^
"DATA",991.11,219,99,1,0)
The message being prcessed is missing required field, ICN.
"DATA",991.11,220,0)
220^2^1^^1
"DATA",991.11,220,10)
Error Setting Up HL7
"DATA",991.11,220,99,0)
^^1^1^2990421^^
"DATA",991.11,220,99,1,0)
Error returned from HL7 call to setup hl7 variables or sending messages.
"DATA",991.11,221,0)
221^0^1^^0
"DATA",991.11,221,10)
Missing Site/CMOR
"DATA",991.11,221,99,0)
^^1^1^2990412^^
"DATA",991.11,221,99,1,0)
Site/CMOR not in CMOR message
"DATA",991.11,222,0)
222^2^1^^0
"DATA",991.11,222,10)
Invalid Event Type
"DATA",991.11,222,99,0)
^^1^1^2990412^^
"DATA",991.11,222,99,1,0)
Invalid Event passed in CMOR message
"DATA",991.11,223,0)
223^0^1^^0
"DATA",991.11,223,10)
Missing Excepted Field
"DATA",991.11,223,99,0)
^^1^1^2990421^^^
"DATA",991.11,223,99,1,0)
Missing excepted field
"DATA",991.11,224,0)
224^2^1^^11
"DATA",991.11,224,10)
Missing/Unable to get Logical Link
"DATA",991.11,224,99,0)
^^1^1^2991005^^^^
"DATA",991.11,224,99,1,0)
Link was unable to be retrieved.
"DATA",991.11,225,0)
225^2^1^^0
"DATA",991.11,225,10)
Have Subscribers
"DATA",991.11,225,99,0)
^^2^2^2990421^^
"DATA",991.11,225,99,1,0)
Have subscribers for given patient and can not have subscribers to perform
"DATA",991.11,225,99,2,0)
action.
"DATA",991.11,226,0)
226^2^1^^5
"DATA",991.11,226,10)
Not CMOR
"DATA",991.11,226,99,0)
^^1^1^2990421^^^
"DATA",991.11,226,99,1,0)
Message received is not from the CMOR and should not be processed.
"DATA",991.11,227,0)
227^1^1^^13
"DATA",991.11,227,10)
Multiple ICNs
"DATA",991.11,227,99,0)
^^5^5^2990601^^^
"DATA",991.11,227,99,1,0)
There is a new business rule that "More than one patient in a single
"DATA",991.11,227,99,2,0)
 Patient file can not have the same ICN".  If an ICN is returned from the
"DATA",991.11,227,99,3,0)
 MPI and another patient in that database already has that same ICN, an
"DATA",991.11,227,99,4,0)
 exception will be logged and the ICN, CMOR, etc will not be updated for
"DATA",991.11,227,99,5,0)
 this new patient. 
"DATA",991.11,228,0)
228^2^1^
"DATA",991.11,228,10)
Patient Does Not Exist
"DATA",991.11,228,99,0)
^^1^1^3000203^^^^
"DATA",991.11,228,99,1,0)
The patient does not exist in the patient file.
"DATA",991.11,229,0)
229^2^1^^8
"DATA",991.11,229,10)
Duplicate Station Number in Institution File (#4)
"DATA",991.11,229,99,0)
^^2^2^2991005^^^^
"DATA",991.11,229,99,1,0)
A Station Number has been entered for multiple institutions in
"DATA",991.11,229,99,2,0)
the Institution (#4) file.
"DATA",991.11,230,0)
230^2^1^
"DATA",991.11,230,10)
Invalid Sender Of Facility Integration Message
"DATA",991.11,230,99,0)
^^1^1^3000330^^^^
"DATA",991.11,230,99,1,0)
The CMOR can only accept the Facility Integration Message from the legacy site.
"DATA",991.11,231,0)
231^1^1^
"DATA",991.11,231,10)
Treating Facility Not Known To CMOR
"DATA",991.11,231,99,0)
^^2^2^3000330^^^^
"DATA",991.11,231,99,1,0)
This site has treating facilities for the patient that the
"DATA",991.11,231,99,2,0)
CMOR does not have.
"DATA",991.11,232,0)
232^1^1^
"DATA",991.11,232,10)
Subscriber Not Known To CMOR
"DATA",991.11,232,99,0)
^^1^1^3000330^^^^
"DATA",991.11,232,99,1,0)
This site has subscribers that the CMOR does not have.
"DATA",991.11,233,0)
233^2^1^
"DATA",991.11,233,10)
Cannot Merge Duplicate Pair
"DATA",991.11,233,99,0)
^^2^2^3000405^
"DATA",991.11,233,99,1,0)
Record pair rejected during merge due to a conflict in ICN or CMOR data.
"DATA",991.11,233,99,2,0)
Check the pair.
"DATA",991.11,234,0)
234^2^1^61
"DATA",991.11,234,10)
MPI EXCEPTION
"DATA",991.11,234,99,0)
^^1^1^3010813^
"DATA",991.11,234,99,1,0)
This exception type indicates that the exception occurred on the MPI.
"DATA",991.11,238,0)
238^1
"DATA",991.11,238,10)
Potential Test Patient Issue
"DATA",991.11,238,99,0)
^991.1199^3^3^3040405^^^
"DATA",991.11,238,99,1,0)
Exception generated when the patient appears to be a test patient,
"DATA",991.11,238,99,2,0)
however, the ICN is shared at multiple Treating Facilities or the
"DATA",991.11,238,99,3,0)
SOCIAL SECURITY NUMBER doesn't begin with 5 leading zeros.
"DATA",991.11,239,0)
239^2^^^0
"DATA",991.11,239,10)
Potential Identity Change
"DATA",991.11,239,99,0)
^991.1199^2^2^3040503^^
"DATA",991.11,239,99,1,0)
This exception is generated when Name (first or last), date of birth and 
"DATA",991.11,239,99,2,0)
SSN change for a patient.
"DATA",991.11,240,0)
240^2
"DATA",991.11,240,10)
Temporary/Deactivated ICN in site MERGE pair
"DATA",991.11,240,99,0)
^^4^4^3040909^
"DATA",991.11,240,99,1,0)
This exception is used to notify the DQ team that a site has merged 
"DATA",991.11,240,99,2,0)
patient records together were the TO or FROM record involved an ICN that 
"DATA",991.11,240,99,3,0)
was Deactivated OR were the FROM record was a Permanent ID but the TO 
"DATA",991.11,240,99,4,0)
record was a Temporary.
"DATA",991.11,241,0)
241^2
"DATA",991.11,241,10)
Potential erroneous assignment of ID State
"DATA",991.11,241,99,0)
^991.1199^4^4^3050922^^
"DATA",991.11,241,99,1,0)
This exception is to alert the MPI DQ staff that an edit was made to a 
"DATA",991.11,241,99,2,0)
 permanent ID State ICN in which if re-initiated would no evaluate to a 
"DATA",991.11,241,99,3,0)
 temporary ID State.  The result of investigating this exception might 
"DATA",991.11,241,99,4,0)
 result in a manual correction to the ID State of the ICN.
"FIA",985)
MPI VETERAN/CLIENT
"FIA",985,0)
^MPIVET(
"FIA",985,0,0)
985I
"FIA",985,0,1)
y^y^f^^^^n
"FIA",985,0,10)

"FIA",985,0,11)

"FIA",985,0,"RLRO")

"FIA",985,985)
0
"FIA",985,985.01)
0
"FIA",985,985.02)
0
"FIA",985,985.03)
0
"FIA",985,985.04)
0
"FIA",985.1)
MPI PARAMETER
"FIA",985.1,0)
^MPI(985.1,
"FIA",985.1,0,0)
985.1
"FIA",985.1,0,1)
y^y^f^^^^n
"FIA",985.1,0,10)

"FIA",985.1,0,11)

"FIA",985.1,0,"RLRO")

"FIA",985.1,985.1)
0
"FIA",985.1,985.11)
0
"FIA",985.1,985.12)
0
"FIA",985.1,985.13)
0
"FIA",985.2)
MPI DATA MGT RESOLUTION JOURNAL
"FIA",985.2,0)
^MPI(985.2,
"FIA",985.2,0,0)
985.2I
"FIA",985.2,0,1)
y^y^f^^^^n
"FIA",985.2,0,10)

"FIA",985.2,0,11)

"FIA",985.2,0,"RLRO")

"FIA",985.2,985.2)
0
"FIA",985.2,985.211)
0
"FIA",985.2,985.212)
0
"FIA",985.2,985.213)
0
"FIA",985.2,985.214)
0
"FIA",985.21)
MPI DATA MGT PROBLEM CATEGORY
"FIA",985.21,0)
^MPI(985.21,
"FIA",985.21,0,0)
985.21I
"FIA",985.21,0,1)
y^y^f^^^^n
"FIA",985.21,0,10)

"FIA",985.21,0,11)

"FIA",985.21,0,"RLRO")

"FIA",985.21,985.21)
0
"FIA",985.21,985.22)
0
"FIA",985.25)
MPI DATA MGT ACTIVE RESOLUTION WORK
"FIA",985.25,0)
^MPI(985.25,
"FIA",985.25,0,0)
985.25IP
"FIA",985.25,0,1)
y^y^f^^^^n
"FIA",985.25,0,10)

"FIA",985.25,0,11)

"FIA",985.25,0,"RLRO")

"FIA",985.25,985.25)
0
"FIA",985.26)
MPI MISMATCHED PATIENT LOG
"FIA",985.26,0)
^MPI(985.26,
"FIA",985.26,0,0)
985.26P
"FIA",985.26,0,1)
y^y^f^^^^n
"FIA",985.26,0,10)

"FIA",985.26,0,11)

"FIA",985.26,0,"RLRO")

"FIA",985.26,985.26)
0
"FIA",985.3)
MPI SITE MONITOR
"FIA",985.3,0)
^MPI(985.3,
"FIA",985.3,0,0)
985.3P
"FIA",985.3,0,1)
y^y^f^^^^n
"FIA",985.3,0,10)

"FIA",985.3,0,11)

"FIA",985.3,0,"RLRO")

"FIA",985.3,985.3)
0
"FIA",985.32)
MPI DUP SSN
"FIA",985.32,0)
^MPI(985.32,
"FIA",985.32,0,0)
985.32
"FIA",985.32,0,1)
y^y^f^^^^n
"FIA",985.32,0,10)

"FIA",985.32,0,11)

"FIA",985.32,0,"RLRO")

"FIA",985.32,985.32)
0
"FIA",985.33)
MPI POTENTIAL MATCH COMPILE
"FIA",985.33,0)
^MPI(985.33,
"FIA",985.33,0,0)
985.33P
"FIA",985.33,0,1)
y^y^f^^^^n
"FIA",985.33,0,10)

"FIA",985.33,0,11)

"FIA",985.33,0,"RLRO")

"FIA",985.33,985.33)
0
"FIA",985.5)
MPI FACILITY ASSOCIATION
"FIA",985.5,0)
^MPI(985.5,
"FIA",985.5,0,0)
985.5PI
"FIA",985.5,0,1)
y^y^f^^^^n
"FIA",985.5,0,10)

"FIA",985.5,0,11)

"FIA",985.5,0,"RLRO")

"FIA",985.5,985.5)
0
"FIA",985.5,985.51)
0
"FIA",985.5,985.52)
0
"FIA",985.5,985.53)
0
"FIA",985.5,985.571)
0
"FIA",985.9)
MPI SERVER EXCEPTIONS
"FIA",985.9,0)
^MPI(985.9,
"FIA",985.9,0,0)
985.9D
"FIA",985.9,0,1)
y^y^f^^^^n
"FIA",985.9,0,10)

"FIA",985.9,0,11)

"FIA",985.9,0,"RLRO")

"FIA",985.9,985.9)
0
"FIA",985.9,985.94)
0
"FIA",985.9,985.96)
0
"FIA",991.11)
CIRN HL7 EXCEPTION TYPE
"FIA",991.11,0)
^RGHL7(991.11,
"FIA",991.11,0,0)
991.11I
"FIA",991.11,0,1)
y^y^f^^y^^y^o^n
"FIA",991.11,0,10)

"FIA",991.11,0,11)
N X S X=+^(0) I X>99!(X=18)
"FIA",991.11,0,"RLRO")

"FIA",991.11,991.11)
0
"FIA",991.11,991.112)
0
"FIA",991.11,991.1199)
0
"FRV1",991.11,"234,0",4)
MPI EXCEPTIONS
"FRV1",991.11,"234,0",4,"F")
;XMB(3.8,
"IX",985,985,"D",0)
985^D^Type and Other ID compound x-ref^R^^R^IR^W^985.01^^^^^LS
"IX",985,985,"D",.1,0)
^^2^2^3020301^
"IX",985,985,"D",.1,1,0)
This cross reference will allow facilitate finding the current patient
"IX",985,985,"D",.1,2,0)
entry by type/other id/location.
"IX",985,985,"D",1)
S ^MPIVET("D",X(1),$E(X(2),1,30),X(3),DA(1),DA)=""
"IX",985,985,"D",2)
K ^MPIVET("D",X(1),$E(X(2),1,30),X(3),DA(1),DA)
"IX",985,985,"D",2.5)
K ^MPIVET("D")
"IX",985,985,"D",11.1,0)
^.114IA^3^3
"IX",985,985,"D",11.1,1,0)
1^F^985.01^.02^^1^F
"IX",985,985,"D",11.1,1,3)

"IX",985,985,"D",11.1,2,0)
2^F^985.01^.01^30^2^F
"IX",985,985,"D",11.1,2,3)

"IX",985,985,"D",11.1,3,0)
3^F^985.01^.03^^3^F
"IX",985,985,"D",11.1,3,3)

"IX",985.5,985.5,"AC",0)
985.5^AC^ICN, inverse last tx date, Station (ien)^MU^^R^IR^I^985.5^^^^^S
"IX",985.5,985.5,"AC",.1,0)
^^2^2^3020108^
"IX",985.5,985.5,"AC",.1,1,0)
This cross reference is used to sort associated facilites for an ICN by 
"IX",985.5,985.5,"AC",.1,2,0)
last treatment date (stored as inverse date).
"IX",985.5,985.5,"AC",1)
S ^MPI(985.5,"AC",X(1),9999999-X(2),X(3),DA)=""
"IX",985.5,985.5,"AC",2)
K ^MPI(985.5,"AC",X(1),9999999-X(2),X(3),DA)
"IX",985.5,985.5,"AC",11.1,0)
^.114IA^3^3
"IX",985.5,985.5,"AC",11.1,1,0)
1^F^985.5^1^^1^F
"IX",985.5,985.5,"AC",11.1,2,0)
2^F^985.5^29^^2^F
"IX",985.5,985.5,"AC",11.1,3,0)
3^F^985.5^.01^^3^F
"IX",985.5,985.5,"ASD",0)
985.5^ASD^cross reference to be used by API to find ICN for a pt by dfn/site^R^^R^IR^I^985.5^^^^^S
"IX",985.5,985.5,"ASD",.1,0)
^^1^1^3040512^
"IX",985.5,985.5,"ASD",.1,1,0)
This cross reference will allow us to find a patient's ICN by dfn/site.
"IX",985.5,985.5,"ASD",1)
S ^MPI(985.5,"ASD",$E(X(1),1,30),X(2),DA)=""
"IX",985.5,985.5,"ASD",2)
K ^MPI(985.5,"ASD",$E(X(1),1,30),X(2),DA)
"IX",985.5,985.5,"ASD",2.5)
K ^MPI(985.5,"ASD")
"IX",985.5,985.5,"ASD",11.1,0)
^.114IA^2^2
"IX",985.5,985.5,"ASD",11.1,1,0)
1^F^985.5^2^30^1^F
"IX",985.5,985.5,"ASD",11.1,1,3)

"IX",985.5,985.5,"ASD",11.1,2,0)
2^F^985.5^.01^^2^F
"IX",985.5,985.5,"ASD",11.1,2,3)

"IX",985.9,985.9,"ST",0)
985.9^ST^cross reference on status and exception type^R^^R^IR^I^985.9^^^^^LS
"IX",985.9,985.9,"ST",.1,0)
^^3^3^3040512^
"IX",985.9,985.9,"ST",.1,1,0)
This cross reference will be used to show the Exceptions 238 and 239 with
"IX",985.9,985.9,"ST",.1,2,0)
a status of 1 or 2 at the top of the list when the user first enters the 
"IX",985.9,985.9,"ST",.1,3,0)
exception handler.
"IX",985.9,985.9,"ST",1)
S ^MPI(985.9,"ST",$E(X(1),1,3),$E(X(2),1,3),DA)=""
"IX",985.9,985.9,"ST",2)
K ^MPI(985.9,"ST",$E(X(1),1,3),$E(X(2),1,3),DA)
"IX",985.9,985.9,"ST",2.5)
K ^MPI(985.9,"ST")
"IX",985.9,985.9,"ST",11.1,0)
^.114IA^2^2
"IX",985.9,985.9,"ST",11.1,1,0)
1^F^985.9^.06^3^1^F
"IX",985.9,985.9,"ST",11.1,1,3)

"IX",985.9,985.9,"ST",11.1,2,0)
2^F^985.9^.02^3^2^F
"IX",985.9,985.9,"ST",11.1,2,3)

"KRN",3.8,39,-1)
0^1
"KRN",3.8,39,0)
MPI^PU^^^^^
"KRN",3.8,39,2,0)
^3.801^1^1^3010302^^
"KRN",3.8,39,2,1,0)
MPI MAILGROUP
"KRN",3.8,39,3)

"KRN",3.8,41,-1)
0^5
"KRN",3.8,41,0)
MPI HL7 GROUP^PU^n^^^^
"KRN",3.8,41,3)

"KRN",3.8,41,6,0)
^3.812^2^1
"KRN",3.8,41,6,2,0)
S.HL V16 SERVER@DEVCRN.DOMAIN.EXT
"KRN",3.8,41,6,"B","S.HL V16 SERVER@DEVCRN.ISC-ALB",2)

"KRN",3.8,55,-1)
0^4
"KRN",3.8,55,0)
MPI HL7 ALERTS^PU^y^^^^
"KRN",3.8,55,2,0)
^3.801^1^1^3031010^^^^
"KRN",3.8,55,2,1,0)
This mail group is notifying the members of problems with HL7.
"KRN",3.8,55,3)

"KRN",3.8,57,-1)
0^6
"KRN",3.8,57,0)
MPI MONITOR^PU^n^^^^
"KRN",3.8,57,2,0)
^^3^3^3050610^
"KRN",3.8,57,2,1,0)
This mail group receives bulletins from the ^MPIMMONT nightly background
"KRN",3.8,57,2,2,0)
job when it finds that a site has sent data to the MPI when that site has
"KRN",3.8,57,2,3,0)
never sent data previously.
"KRN",3.8,57,3)

"KRN",3.8,57,6,0)
^3.812^5^5
"KRN",3.8,57,6,1,0)
CHESNEY
"KRN",3.8,57,6,2,0)
LINK
"KRN",3.8,57,6,3,0)
SNOOK
"KRN",3.8,57,6,4,0)
REED
"KRN",3.8,57,6,5,0)
IHLENFELD
"KRN",3.8,57,6,"B","SNOOK",3)

"KRN",3.8,57,6,"B","CHESNEY",1)

"KRN",3.8,57,6,"B","LINK",2)

"KRN",3.8,57,6,"B","IHLENFELD",5)

"KRN",3.8,57,6,"B","REED",4)

"KRN",3.8,61,-1)
0^3
"KRN",3.8,61,0)
MPI EXCEPTIONS^PU^^^^^
"KRN",3.8,61,3)

"KRN",3.8,61,6,0)
^3.812^1^1
"KRN",3.8,61,6,1,0)
G.CIRN EXCEPTION MGT@DOMAIN.EXT
"KRN",3.8,61,6,"B","G.CIRN EXCEPTION MGT@FORUM.VA.",1)

"KRN",3.8,64,-1)
0^2
"KRN",3.8,64,0)
MPI EXCEPTION REPORTS^PU^y^^^^
"KRN",3.8,64,6,0)
^3.812^^0
"KRN",3.8,67,-1)
0^8
"KRN",3.8,67,0)
MPI/PD POC UPDATE^PU^y^^^^
"KRN",3.8,67,2,0)
^3.801^6^6^3050321^^^^
"KRN",3.8,67,2,1,0)
This mail group contains the Data Management team members responsible for 
"KRN",3.8,67,2,2,0)
maintaining the MPI/PD Point Of Contact webpage.
"KRN",3.8,67,2,3,0)
 
"KRN",3.8,67,2,4,0)
Mail messages are generated to this mail group from the facilities
"KRN",3.8,67,2,5,0)
when there are changes to the administrative, IRM or HL7 points
"KRN",3.8,67,2,6,0)
of contact at a facility.
"KRN",19,7479,-1)
0^76
"KRN",19,7479,0)
MPI MONITORING^MPI MONITORING^^R^^^^^^^^
"KRN",19,7479,25)
MPIMMONT
"KRN",19,7479,"U")
MPI MONITORING
"KRN",19,7493,-1)
0^90
"KRN",19,7493,0)
MPIM DAILY PARTIAL QUERY^Daily Partial Query for Site Links/Processes^^R^^^^^^^^
"KRN",19,7493,1,0)
^^3^3^3030604^
"KRN",19,7493,1,1,0)
This option tasks off a "partial" (links and MPI processes) type query to 
"KRN",19,7493,1,2,0)
all sites. This option is intended to be set up in the TaskMan 
"KRN",19,7493,1,3,0)
rescheduler to be run daily in the early morning hours.  
"KRN",19,7493,25)
QUE^MPIMSTAT
"KRN",19,7493,"U")
DAILY PARTIAL QUERY FOR SITE L
"KRN",19,7540,-1)
0^68
"KRN",19,7540,0)
MPI EXCEPTION SERVER^MI EXCEPTION SERVER^^S^^^^^^^^^^
"KRN",19,7540,1,0)
^19.06^1^1^3001128^^^
"KRN",19,7540,1,1,0)
This server option receives exceptions from local sites and files them.
"KRN",19,7540,20)

"KRN",19,7540,25)
RECEIVE^MPIXR
"KRN",19,7540,220)
^R^^N^Y^N^1
"KRN",19,7540,"U")
MI EXCEPTION SERVER
"KRN",19,7542,-1)
0^131
"KRN",19,7542,0)
MPIX EXCEPTION HANDLER MENU^MPI Exception Handler^^M^^^^^^^y^
"KRN",19,7542,1,0)
^19.06^2^2^3011001^^^^
"KRN",19,7542,1,1,0)
This is the menu containing all the options related to processing
"KRN",19,7542,1,2,0)
exceptions sent to the MPI Exception Server.
"KRN",19,7542,10,0)
^19.01IP^8^5
"KRN",19,7542,10,4,0)
7572^EX^5
"KRN",19,7542,10,4,"^")
MPIX EXCEPTION HANDLING
"KRN",19,7542,10,5,0)
7696^WL^10
"KRN",19,7542,10,5,"^")
MPIX EXCEPTION WORKLOAD RPT
"KRN",19,7542,10,6,0)
7697^DR^15
"KRN",19,7542,10,6,"^")
MPIX DETAIL CW EXCEPTION RPT
"KRN",19,7542,10,7,0)
7730^SE^20
"KRN",19,7542,10,7,"^")
MPIX SEARCH EXCEPTIONS ICN/SSN
"KRN",19,7542,10,8,0)
7781^TR^25
"KRN",19,7542,10,8,"^")
MPIX EXC TYPE STATS RPT
"KRN",19,7542,99)
59694,60427
"KRN",19,7542,99.1)
60164,66605
"KRN",19,7542,"U")
MPI EXCEPTION HANDLER
"KRN",19,7544,-1)
0^134
"KRN",19,7544,0)
MPIX MSG TYPE EXCEPTION STATS^MESSAGE TYPE EXCEPTION STATISTICS^^A^^^^^^^y^^^1
"KRN",19,7544,1,0)
^^2^2^3001219^
"KRN",19,7544,1,1,0)
This option prints a report.  The user is requested to select a date range.  The report will contain a variety of statistics, including a count of exceptions resolved for each month in
"KRN",19,7544,1,2,0)
the reporting period by each case worker, and a count of the exceptions currently pending. 
"KRN",19,7544,20)
D REPORT^MPIXRP2A
"KRN",19,7544,"U")
MESSAGE TYPE EXCEPTION STATIST
"KRN",19,7548,-1)
0^13
"KRN",19,7548,0)
MPI DATA MGT CHK OUT^Check Out SSN/ICN^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7548,1,0)
^^4^4^3010219^
"KRN",19,7548,1,1,0)
Use this option to "check out" an SSN or ICN so that other team members
"KRN",19,7548,1,2,0)
will alerted to the SSNs/ICNs being worked on.  If an ICN/SSN is already
"KRN",19,7548,1,3,0)
being worked on, the Case #,  User name, User location and User phone
"KRN",19,7548,1,4,0)
number will be displayed.
"KRN",19,7548,25)
EN1^MPIMDMC1
"KRN",19,7548,"U")
CHECK OUT SSN/ICN
"KRN",19,7549,-1)
0^50
"KRN",19,7549,0)
MPI DATA MGT REVIEW CHK OUT^Review Current SSNs/ICNs Being Worked On^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7549,1,0)
^^2^2^3010219^
"KRN",19,7549,1,1,0)
Review what ICNs/SSNs have been checked out for data resolution work.  
"KRN",19,7549,1,2,0)
Can be sorted by ICN/SSN/User/Patient Name.
"KRN",19,7549,25)
MPIMDMC2
"KRN",19,7549,"U")
REVIEW CURRENT SSNS/ICNS BEING
"KRN",19,7550,-1)
0^4
"KRN",19,7550,0)
MPI DATA MGT ACT WORK DEV TEAM^Active Data Resolution Work (Dev Team)^^M^^MPI DEVELOPER^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7550,1,0)
^^3^3^3020516^
"KRN",19,7550,1,1,0)
This menu, used by the MPI/PD development team, is used to "check out"
"KRN",19,7550,1,2,0)
an SSN or ICN for data resolution or to examine the current ICNs/SSNs
"KRN",19,7550,1,3,0)
that are being worked on.
"KRN",19,7550,10,0)
^19.01IP^2^2
"KRN",19,7550,10,1,0)
7548^^5
"KRN",19,7550,10,1,"^")
MPI DATA MGT CHK OUT
"KRN",19,7550,10,2,0)
7549^^10
"KRN",19,7550,10,2,"^")
MPI DATA MGT REVIEW CHK OUT
"KRN",19,7550,99)
58946,22175
"KRN",19,7550,"U")
ACTIVE DATA RESOLUTION WORK (D
"KRN",19,7551,-1)
0^89
"KRN",19,7551,0)
MPIDMGR^MPI Data Management^^M^^MPI DQ MGR^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7551,1,0)
^19.06^3^3^3040728^^^^
"KRN",19,7551,1,1,0)
This is the primary menu for the Data Quality Management team and the 
"KRN",19,7551,1,2,0)
Master Patient Index / Patient Demographics (MPI/PD) development team 
"KRN",19,7551,1,3,0)
working on the Master Patient Index (MPI) at Austin.
"KRN",19,7551,10,0)
^19.01IP^23^10
"KRN",19,7551,10,14,0)
7625^UPD^30
"KRN",19,7551,10,14,"^")
MPI DATA MGT UPDATE MENU
"KRN",19,7551,10,15,0)
7550^DEV^5
"KRN",19,7551,10,15,"^")
MPI DATA MGT ACT WORK DEV TEAM
"KRN",19,7551,10,16,0)
7555^DMT^15
"KRN",19,7551,10,16,"^")
MPI DATA MGT JOURNAL DMT
"KRN",19,7551,10,17,0)
7559^DUP^20
"KRN",19,7551,10,17,"^")
MPI DATA MGT DUP SSN MENU
"KRN",19,7551,10,20,0)
7603^RPT^35
"KRN",19,7551,10,20,"^")
MPI DATA MGT REP MENU
"KRN",19,7551,10,21,0)
7606^SET^40
"KRN",19,7551,10,21,"^")
MPI DATA MGT SETUP MENU
"KRN",19,7551,10,22,0)
7640^PDI^25
"KRN",19,7551,10,22,"^")
MPI DATA MGT PT DATA INQ MENU
"KRN",19,7551,10,23,0)
7542^EX^27
"KRN",19,7551,10,23,"^")
MPIX EXCEPTION HANDLER MENU
"KRN",19,7551,99)
60164,75507
"KRN",19,7551,99.1)
60164,66605
"KRN",19,7551,"U")
MPI DATA MANAGEMENT
"KRN",19,7552,-1)
0^15
"KRN",19,7552,0)
MPI DATA MGT CREATE CASE^Create/Edit a Case^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7552,1,0)
^19.06^6^6^3020514^^
"KRN",19,7552,1,1,0)
Ask for SSN or ICN
"KRN",19,7552,1,2,0)
- If ICN/SSN does not already exist in MPI DATA MGT RESOLUTION JOURNAL
"KRN",19,7552,1,3,0)
file,  check to be sure the ICN/SSN has been checked out,  then
"KRN",19,7552,1,4,0)
auto-generate a case # , stuff DUZ for USER, stuff sites involved and ICN
"KRN",19,7552,1,5,0)
or SSN  multiples.
"KRN",19,7552,1,6,0)
- If ICN/SSN already exists, display data, User, and status.
"KRN",19,7552,25)
EN1^MPIMDM01
"KRN",19,7552,"U")
CREATE/EDIT A CASE
"KRN",19,7553,-1)
0^67
"KRN",19,7553,0)
MPI DATA MGT VIEW CASE^View a Case^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7553,1,0)
^^2^2^3010219^
"KRN",19,7553,1,1,0)
Can be accessed by Case #, ICN, or SSN - show Case Worker name, phone and
"KRN",19,7553,1,2,0)
location from New Person file.
"KRN",19,7553,25)
EN1^MPIMDMR1
"KRN",19,7553,"U")
VIEW A CASE
"KRN",19,7554,-1)
0^62
"KRN",19,7554,0)
MPI DATA MGT SUMMARY RPT^Summary Journal Report^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7554,1,0)
^^2^2^3010219^
"KRN",19,7554,1,1,0)
- For completed cases - show total # by VISN then site.
"KRN",19,7554,1,2,0)
- For active cases - show brief summary with ICNs/SSNs/Status/Case Worker.
"KRN",19,7554,25)
EN2^MPIMDMR1
"KRN",19,7554,"U")
SUMMARY JOURNAL REPORT
"KRN",19,7555,-1)
0^24
"KRN",19,7555,0)
MPI DATA MGT JOURNAL DMT^Data Resolution Journal (Data Mgt Team)^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7555,1,0)
^^2^2^3020515^
"KRN",19,7555,1,1,0)
This menu provides access for the Data Quality Management team to the
"KRN",19,7555,1,2,0)
Resolution Journal for tracking case work.
"KRN",19,7555,10,0)
^19.01IP^5^5
"KRN",19,7555,10,1,0)
7552^^5
"KRN",19,7555,10,1,"^")
MPI DATA MGT CREATE CASE
"KRN",19,7555,10,2,0)
7553^^10
"KRN",19,7555,10,2,"^")
MPI DATA MGT VIEW CASE
"KRN",19,7555,10,3,0)
7554^^15
"KRN",19,7555,10,3,"^")
MPI DATA MGT SUMMARY RPT
"KRN",19,7555,10,4,0)
7599^^20
"KRN",19,7555,10,4,"^")
MPI DATA MGT E/E DT CONTACT
"KRN",19,7555,10,5,0)
7600^^25
"KRN",19,7555,10,5,"^")
MPI DATA MGT DT CONTACT RPT
"KRN",19,7555,99)
58946,22176
"KRN",19,7555,"U")
DATA RESOLUTION JOURNAL (DATA 
"KRN",19,7556,-1)
0^14
"KRN",19,7556,0)
MPI DATA MGT COMPILE DUP SSN^Compile Duplicate SSN Report^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7556,1,0)
^^9^9^3020617^
"KRN",19,7556,1,1,0)
This background option processes the data in the MPI DUP SSN (#985.32) 
"KRN",19,7556,1,2,0)
file which stores all SSNs identified as "duplicates" (i.e., identical 
"KRN",19,7556,1,3,0)
SSNs assigned to multiple ICNs) by the daily "Background MPI Stat Report 
"KRN",19,7556,1,4,0)
Compile" [MPI DATA MGT STAT RPT QUEUED].  The data is sorted by site/SSN 
"KRN",19,7556,1,5,0)
and stored in an XTMP global. The XTMP global is later used to produce 
"KRN",19,7556,1,6,0)
the "Duplicate SSN Report Print" [MPI DATA MGT PRT DUP SSN RPT] and the 
"KRN",19,7556,1,7,0)
"Print Site Breakout DUP SSN Totals by VISN" [MPI DATA MGT PRT BRKOUT 
"KRN",19,7556,1,8,0)
VISN] reports.  SSN entries in the MPI DUP SSN (#985.32) file that have 
"KRN",19,7556,1,9,0)
been marked as CANNOT BE RESOLVED are omitted from the compile.
"KRN",19,7556,3.91,0)
^19.391^2^1
"KRN",19,7556,3.91,2,0)
0230-2000^M-F
"KRN",19,7556,3.91,"B","0230-2000",2)

"KRN",19,7556,3.91,"B","0600-1900",1)

"KRN",19,7556,25)
EN^MPIMDS01
"KRN",19,7556,"U")
COMPILE DUPLICATE SSN REPORT
"KRN",19,7557,-1)
0^31
"KRN",19,7557,0)
MPI DATA MGT PRT DUP SSN RPT^Duplicate SSN Report Print^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7557,1,0)
^^6^6^3020617^
"KRN",19,7557,1,1,0)
This report uses the data accumulated by the "Compile Duplicate SSN 
"KRN",19,7557,1,2,0)
Report" [MPI DATA MGT COMPILE DUP SSN] background job to produce a 
"KRN",19,7557,1,3,0)
worksheet for duplicate SSN data resolution.  The report is sorted by 
"KRN",19,7557,1,4,0)
Site (i.e., all duplicate SSNs associated with a particular site) and 
"KRN",19,7557,1,5,0)
then by SSN.  SSN entries in the MPI DUP SSN (#985.32) file that have 
"KRN",19,7557,1,6,0)
been marked as CANNOT BE RESOLVED are omitted from the worksheet.
"KRN",19,7557,25)
ASK^MPIMDS01
"KRN",19,7557,"U")
DUPLICATE SSN REPORT PRINT
"KRN",19,7558,-1)
0^30
"KRN",19,7558,0)
MPI DATA MGT PRT BRKOUT VISN^Print Site Breakout DUP SSN Totals by VISN^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7558,1,0)
^^5^5^3020617^
"KRN",19,7558,1,1,0)
This report uses the data accumulated by the "Compile Duplicate SSN 
"KRN",19,7558,1,2,0)
Report" [MPI DATA MGT COMPILE DUP SSN] background job to produce a report 
"KRN",19,7558,1,3,0)
of duplicate SSN cases sorted by VISN/Site.  SSN entries in the MPI DUP 
"KRN",19,7558,1,4,0)
SSN (#985.32) file that have been marked as CANNOT BE RESOLVED are 
"KRN",19,7558,1,5,0)
omitted from the report counts.
"KRN",19,7558,25)
BRKOUT^MPIMDS01
"KRN",19,7558,"U")
PRINT SITE BREAKOUT DUP SSN TO
"KRN",19,7559,-1)
0^20
"KRN",19,7559,0)
MPI DATA MGT DUP SSN MENU^Duplicate SSN Report^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7559,1,0)
^19.06^1^1^3020617^^
"KRN",19,7559,1,1,0)
This menu provides options to print the Duplicate SSN Reports.
"KRN",19,7559,10,0)
^19.01IP^3^3
"KRN",19,7559,10,2,0)
7557^^5
"KRN",19,7559,10,2,"^")
MPI DATA MGT PRT DUP SSN RPT
"KRN",19,7559,10,3,0)
7558^^10
"KRN",19,7559,10,3,"^")
MPI DATA MGT PRT BRKOUT VISN
"KRN",19,7559,99)
58996,43678
"KRN",19,7559,"U")
DUPLICATE SSN REPORT
"KRN",19,7560,-1)
0^28
"KRN",19,7560,0)
MPI DATA MGT PDAT MPI^MPI Patient Data Inquiry^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7560,1,0)
^^5^5^3020703^
"KRN",19,7560,1,1,0)
This option prompts the user to select a patient using ICN, 
"KRN",19,7560,1,2,0)
SSN or surname. If the user entered a duplicate SSN or surname,
"KRN",19,7560,1,3,0)
a list of patients will be returned. Once the user selects the
"KRN",19,7560,1,4,0)
patient, a report with the patient's ICN, Name,SSN, DOB, Sex,
"KRN",19,7560,1,5,0)
CMOR and treating facilities will be displayed. 
"KRN",19,7560,25)
MPIMPDAT
"KRN",19,7560,"U")
MPI PATIENT DATA INQUIRY
"KRN",19,7570,-1)
0^2
"KRN",19,7570,0)
MPI AUDIT PURGE^MPI AUDIT PURGE OLDER THAN X DAYS^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7570,1,0)
^^4^4^3020612^
"KRN",19,7570,1,1,0)
This purge job should be scheduled to run via Taskman, 1 time daily after 
"KRN",19,7570,1,2,0)
hours.  This job will purge the DIA(985 global of entries older than X 
"KRN",19,7570,1,3,0)
days.  The number of days to keep in the Audit is stored in the MPI 
"KRN",19,7570,1,4,0)
Parameter file (#985.1), field PURGE AUDIT DAYS (#1).
"KRN",19,7570,25)
EN^MPIAUCL
"KRN",19,7570,"U")
MPI AUDIT PURGE OLDER THAN X D
"KRN",19,7572,-1)
0^132
"KRN",19,7572,0)
MPIX EXCEPTION HANDLING^MPI Exception Handling^^R^^^^^^^^
"KRN",19,7572,1,0)
^^2^2^3010601^
"KRN",19,7572,1,1,0)
This option provides utilities for resolving exceptions in the MPI SERVER
"KRN",19,7572,1,2,0)
EXCEPTION FILE (#985.9).
"KRN",19,7572,25)
EN^MPIEXC01
"KRN",19,7572,99.1)
59111,65618
"KRN",19,7572,"U")
MPI EXCEPTION HANDLING
"KRN",19,7577,-1)
0^135
"KRN",19,7577,0)
MPIX PURGE 120^MPI Exception Purge (120 DAYS)^^R^^^^^^^^
"KRN",19,7577,1,0)
^^2^2^3010820^
"KRN",19,7577,1,1,0)
This option will purge resolved exceptions in the MPI SERVER EXCEPTIONS
"KRN",19,7577,1,2,0)
FILE (#985.9) that are over 120 days old.
"KRN",19,7577,25)
PRG120^MPIEXPRG
"KRN",19,7577,"U")
MPI EXCEPTION PURGE (120 DAYS)
"KRN",19,7581,-1)
0^40
"KRN",19,7581,0)
MPI DATA MGT REM SEND PDAT QRY^Request Remote Patient Data^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7581,1,0)
8^19.06^8^8^3040121^^^
"KRN",19,7581,1,1,0)
This option sends a remote query to associated facilities.
"KRN",19,7581,1,2,0)
The user is prompted to select a patient by entering an 
"KRN",19,7581,1,3,0)
ICN, SSN, DFN or NAME. Once the patient is selected, a remote 
"KRN",19,7581,1,4,0)
request is sent to the sites. The user can then pick from
"KRN",19,7581,1,5,0)
a list of sites where the remote queries will be sent. The 
"KRN",19,7581,1,6,0)
information retrieved includes demographic data, and can be 
"KRN",19,7581,1,7,0)
displayed by choosing the Display Remote Patient Data Option on 
"KRN",19,7581,1,8,0)
the Patient Data Inquiry menu.
"KRN",19,7581,25)
SEND2^MPIRPDAT
"KRN",19,7581,"U")
REQUEST REMOTE PATIENT DATA
"KRN",19,7583,-1)
0^36
"KRN",19,7583,0)
MPI DATA MGT REM DISP PDAT QRY^Display Remote Patient Data^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7583,1,0)
^19.06^11^11^3040121^^^^
"KRN",19,7583,1,1,0)
This option displays the results of a remote patient data query.
"KRN",19,7583,1,2,0)
The user is prompted to select a patient by entering an
"KRN",19,7583,1,3,0)
ICN, SSN, DFN or NAME. It will then check the status of an 
"KRN",19,7583,1,4,0)
existing remote patient data query and display information such 
"KRN",19,7583,1,5,0)
as patient's place of birth (city and state), father's name, 
"KRN",19,7583,1,6,0)
mother's name, mother's maiden name, next of kin name and 
"KRN",19,7583,1,7,0)
phone number, marital status, religion, race, primary 
"KRN",19,7583,1,8,0)
eligibility code, veteran status, service branch, service 
"KRN",19,7583,1,9,0)
number, service connected percent, service entry date, and 
"KRN",19,7583,1,10,0)
service separation date. 
"KRN",19,7583,1,11,0)
Please be sure history is enabled to capture data.
"KRN",19,7583,25)
DISP2^MPIRPDAT
"KRN",19,7583,"U")
DISPLAY REMOTE PATIENT DATA
"KRN",19,7587,-1)
0^59
"KRN",19,7587,0)
MPI DATA MGT STAT REP DISP^MPI Stat Report Display^^R^^^^^^^^
"KRN",19,7587,1,0)
^^2^2^3011128^
"KRN",19,7587,1,1,0)
This option displays the summary of the most current Stat report 
"KRN",19,7587,1,2,0)
compilation.
"KRN",19,7587,25)
EN2^MPIMSR2
"KRN",19,7587,"U")
MPI STAT REPORT DISPLAY
"KRN",19,7598,-1)
0^17
"KRN",19,7598,0)
MPI DATA MGT DSSN PDAT MPI^MPI Duplicate SSN Patient Inquiry^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7598,1,0)
^19.06^4^4^3020514^^
"KRN",19,7598,1,1,0)
This option will allow a user to do a PDAT lookup on the MPIVET file
"KRN",19,7598,1,2,0)
(#985) using an SSN that is associated with more than one ICN.  The
"KRN",19,7598,1,3,0)
difference between this lookup and the regular PDAT call is that it will
"KRN",19,7598,1,4,0)
display all the PDAT calls and not require the user to enter each ICN.
"KRN",19,7598,25)
DUPLK^MPIMPDAT
"KRN",19,7598,"U")
MPI DUPLICATE SSN PATIENT INQU
"KRN",19,7599,-1)
0^21
"KRN",19,7599,0)
MPI DATA MGT E/E DT CONTACT^Enter/Edit Site Date of Contact^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7599,1,0)
^^3^3^3020122^
"KRN",19,7599,1,1,0)
This option allows a case worker to enter/edit the last Date of Contact 
"KRN",19,7599,1,2,0)
for any site associated with a case in the MPI DATA MGT RESOLUTION 
"KRN",19,7599,1,3,0)
JOURNAL FILE (#985.2).
"KRN",19,7599,25)
DC^MPIMDM01
"KRN",19,7599,"U")
ENTER/EDIT SITE DATE OF CONTAC
"KRN",19,7600,-1)
0^18
"KRN",19,7600,0)
MPI DATA MGT DT CONTACT RPT^Date of Contact Report^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7600,1,0)
^^3^3^3020122^
"KRN",19,7600,1,1,0)
This option prints a list of open cases from the MPI DATA MGT RESOLUTION 
"KRN",19,7600,1,2,0)
JOURNAL file (#985.2) that have sites with a last Date of Contact prior 
"KRN",19,7600,1,3,0)
to a user specified date.
"KRN",19,7600,25)
EN1^MPIMDMT
"KRN",19,7600,"U")
DATE OF CONTACT REPORT
"KRN",19,7601,-1)
0^49
"KRN",19,7601,0)
MPI DATA MGT REP PC STATS^Problem Category Statistics^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7601,1,0)
^19.06^2^2^3020514^^^
"KRN",19,7601,1,1,0)
This report prints a statistic report of Problem Categories from the MPI 
"KRN",19,7601,1,2,0)
DATA MGT RESOLUTION JOURNAL file (#985.2) for a user specified date range.
"KRN",19,7601,25)
EN3^MPIMDMPC
"KRN",19,7601,"U")
PROBLEM CATEGORY STATISTICS
"KRN",19,7602,-1)
0^16
"KRN",19,7602,0)
MPI DATA MGT CW STATS^Case Worker Statistics^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7602,1,0)
^^12^12^3050902^
"KRN",19,7602,1,1,0)
This option prints a Case Worker report of cases stored in the MPI DATA 
"KRN",19,7602,1,2,0)
MGT RESOLUTION JOURNAL file (#985.2) for a specified date range. Cases 
"KRN",19,7602,1,3,0)
that were opened and/or resolved during the specified time period are 
"KRN",19,7602,1,4,0)
included.  Totals are displayed for the number of cases each case worker 
"KRN",19,7602,1,5,0)
opened, the number of those cases still open and the number of cases that 
"KRN",19,7602,1,6,0)
were resolved. (Note: Resolved cases may have been opened outside the 
"KRN",19,7602,1,7,0)
specified date range).  
"KRN",19,7602,1,8,0)
  
"KRN",19,7602,1,9,0)
The user is prompted to enter a date range for data to be included in the 
"KRN",19,7602,1,10,0)
report. The report can be printed to a specified device and lists the 
"KRN",19,7602,1,11,0)
caseworker, total opened cases, total open cases, and total resolved 
"KRN",19,7602,1,12,0)
cases.
"KRN",19,7602,25)
EN1^MPIMDMCW
"KRN",19,7602,"U")
CASE WORKER STATISTICS
"KRN",19,7603,-1)
0^48
"KRN",19,7603,0)
MPI DATA MGT REP MENU^MPI DQ Management Reports^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7603,1,0)
^19.06^1^1^3020514^^^
"KRN",19,7603,1,1,0)
This menu provides access to various DQ Management reports.
"KRN",19,7603,10,0)
^19.01IP^9^9
"KRN",19,7603,10,1,0)
7601^^5
"KRN",19,7603,10,1,"^")
MPI DATA MGT REP PC STATS
"KRN",19,7603,10,2,0)
7602^^10
"KRN",19,7603,10,2,"^")
MPI DATA MGT CW STATS
"KRN",19,7603,10,3,0)
7644^^15
"KRN",19,7603,10,3,"^")
MPI DATA MGT PROC STAT RPT
"KRN",19,7603,10,4,0)
7634^^20
"KRN",19,7603,10,4,"^")
MPI DATA MGT STAT RPT INTERACT
"KRN",19,7603,10,5,0)
7650^^25
"KRN",19,7603,10,5,"^")
MPI DATA MGT SHAR PT TREND REP
"KRN",19,7603,10,6,0)
7651^^30
"KRN",19,7603,10,6,"^")
MPI DATA MGT SHAR PT SITES REP
"KRN",19,7603,10,7,0)
7683^^35
"KRN",19,7603,10,7,"^")
MPI DATA MGT LOC ICN REP
"KRN",19,7603,10,8,0)
7684^^40
"KRN",19,7603,10,8,"^")
MPI DATA MGT EXC TOTS REP
"KRN",19,7603,10,9,0)
7797^^22
"KRN",19,7603,10,9,"^")
MPI DATA MGT TFCHK RPT PRT
"KRN",19,7603,99)
60060,1765
"KRN",19,7603,"U")
MPI DQ MANAGEMENT REPORTS
"KRN",19,7604,-1)
0^52
"KRN",19,7604,0)
MPI DATA MGT SETUP E/E PC^Enter/Edit Problem Categories^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7604,1,0)
^19.06^3^3^3020514^^
"KRN",19,7604,1,1,0)
This option allows the user to create or edit the entries in the MPI DATA 
"KRN",19,7604,1,2,0)
MGT PROBLEM CATEGORY file (#985.21).  These categories are assigned to 
"KRN",19,7604,1,3,0)
the cases in the MPI DATA MGT RESOLUTION JOURNAL file (#985.2).
"KRN",19,7604,25)
EN1^MPIMDMPC
"KRN",19,7604,"U")
ENTER/EDIT PROBLEM CATEGORIES
"KRN",19,7605,-1)
0^55
"KRN",19,7605,0)
MPI DATA MGT SETUP PRT PC^Print Problem Categories^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7605,1,0)
^^2^2^3020122^
"KRN",19,7605,1,1,0)
This option produces a list of the current entries on the MPI DATA MGT 
"KRN",19,7605,1,2,0)
PROBLEM CATEGORY file (#985.21).
"KRN",19,7605,25)
EN2^MPIMDMPC
"KRN",19,7605,"U")
PRINT PROBLEM CATEGORIES
"KRN",19,7606,-1)
0^54
"KRN",19,7606,0)
MPI DATA MGT SETUP MENU^MPI DQ Setup Menu^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7606,1,0)
^19.06^1^1^3020514^^^
"KRN",19,7606,1,1,0)
This menu provides access to various DQ setup options.
"KRN",19,7606,10,0)
^19.01IP^4^4
"KRN",19,7606,10,1,0)
7604^^5
"KRN",19,7606,10,1,"^")
MPI DATA MGT SETUP E/E PC
"KRN",19,7606,10,2,0)
7605^^10
"KRN",19,7606,10,2,"^")
MPI DATA MGT SETUP PRT PC
"KRN",19,7606,10,3,0)
7648^^15
"KRN",19,7606,10,3,"^")
MPI DATA MGT SETUP VISN REPORT
"KRN",19,7606,10,4,0)
7649^^20
"KRN",19,7606,10,4,"^")
MPI DATA MGT SETUP EDIT VISN
"KRN",19,7606,99)
58996,43678
"KRN",19,7606,"U")
MPI DQ SETUP MENU
"KRN",19,7625,-1)
0^66
"KRN",19,7625,0)
MPI DATA MGT UPDATE MENU^Update MPI/PD Data^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7625,1,0)
^19.06^3^3^3040907^^^^
"KRN",19,7625,1,1,0)
This menu contains options that allow the updating of ICN, ICN Checksum 
"KRN",19,7625,1,2,0)
and CMOR as well as allowing the remote inactivation and remote 
"KRN",19,7625,1,3,0)
initialization of patients from a particular site.
"KRN",19,7625,10,0)
^19.01IP^27^27
"KRN",19,7625,10,13,0)
7787^PUSH^12
"KRN",19,7625,10,13,"^")
MPI DATA MGT REMOTE CMOR PUSH
"KRN",19,7625,10,14,0)
7788^SYNC^46
"KRN",19,7625,10,14,"^")
MPI DATA MGT REMOTE DATA SYNC
"KRN",19,7625,10,15,0)
7638^CMOR^10
"KRN",19,7625,10,15,"^")
MPI DATA MGT REMOTE CMOR UPDT
"KRN",19,7625,10,16,0)
7637^UPD^15
"KRN",19,7625,10,16,"^")
MPI DATA MGT REMOTE ICN UPDATE
"KRN",19,7625,10,17,0)
7636^SPI^5
"KRN",19,7625,10,17,"^")
MPI DATA MGT REMOTE SPI
"KRN",19,7625,10,18,0)
7667^DUP^20
"KRN",19,7625,10,18,"^")
MPI DATA MGT DUP RES
"KRN",19,7625,10,20,0)
7695^BC^40
"KRN",19,7625,10,20,"^")
MPI DATA MGT BROADCAST TF UPD
"KRN",19,7625,10,21,0)
7698^RE^45
"KRN",19,7625,10,21,"^")
MPI DATA MGT REEST ICN
"KRN",19,7625,10,24,0)
7729^CHK^55
"KRN",19,7625,10,24,"^")
MPI DATA MGT CHK MESSAGING
"KRN",19,7625,10,26,0)
7810^MP^30
"KRN",19,7625,10,26,"^")
MPI DATA MGT MISMATCH PT RES
"KRN",19,7625,10,27,0)
7811^TR^35
"KRN",19,7625,10,27,"^")
MPI DATA MGT UNL DUP PTS
"KRN",19,7625,99)
60164,75507
"KRN",19,7625,99.1)
59206,52087
"KRN",19,7625,"U")
UPDATE MPI/PD DATA
"KRN",19,7626,-1)
0^38
"KRN",19,7626,0)
MPI DATA MGT REM SEND PACT QRY^Request Remote Patient Activity^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7626,1,0)
^^5^5^3020703^
"KRN",19,7626,1,1,0)
This option prompts the user to select a patient by entering an 
"KRN",19,7626,1,2,0)
ICN or SSN. Once the patient is selected, a remote request is sent 
"KRN",19,7626,1,3,0)
to the sites for patient data. The user can then pick from a list 
"KRN",19,7626,1,4,0)
of sites where the remote queries will be sent. The output 
"KRN",19,7626,1,5,0)
includes exception messages and/or HL7 updates.
"KRN",19,7626,25)
SEND2^MPIACTIV
"KRN",19,7626,"U")
REQUEST REMOTE PATIENT ACTIVIT
"KRN",19,7627,-1)
0^34
"KRN",19,7627,0)
MPI DATA MGT REM DISP PACT QRY^Display Remote Patient Activity^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7627,1,0)
^^4^4^3020703^
"KRN",19,7627,1,1,0)
This option prompts the user to select a patient by entering 
"KRN",19,7627,1,2,0)
an ICN or SSN. It will then check the status of an existing 
"KRN",19,7627,1,3,0)
remote patient data query and display any exceptions or HL7
"KRN",19,7627,1,4,0)
messages at the selected site(s).
"KRN",19,7627,25)
DISP2^MPIACTIV
"KRN",19,7627,"U")
DISPLAY REMOTE PATIENT ACTIVIT
"KRN",19,7628,-1)
0^37
"KRN",19,7628,0)
MPI DATA MGT REM QRY MENU^Remote Queries^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7628,1,0)
^19.06^2^2^3020425^^^
"KRN",19,7628,1,1,0)
Remote queries menu with options to send remote patient data and remote 
"KRN",19,7628,1,2,0)
patient activity queries to associated facilities.
"KRN",19,7628,10,0)
^19.01IP^5^5
"KRN",19,7628,10,1,0)
7581^SD^3
"KRN",19,7628,10,1,"^")
MPI DATA MGT REM SEND PDAT QRY
"KRN",19,7628,10,3,0)
7583^DD^9
"KRN",19,7628,10,3,"^")
MPI DATA MGT REM DISP PDAT QRY
"KRN",19,7628,10,4,0)
7626^SA^12
"KRN",19,7628,10,4,"^")
MPI DATA MGT REM SEND PACT QRY
"KRN",19,7628,10,5,0)
7627^DA^18
"KRN",19,7628,10,5,"^")
MPI DATA MGT REM DISP PACT QRY
"KRN",19,7628,99)
59555,66063
"KRN",19,7628,"U")
REMOTE QUERIES
"KRN",19,7629,-1)
0^61
"KRN",19,7629,0)
MPI DATA MGT STAT RPT QUEUED^Background MPI Stat Report Compile^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7629,1,0)
^^36^36^3050719^
"KRN",19,7629,1,1,0)
This option performs a queued background compile of MPI data to 
"KRN",19,7629,1,2,0)
provide statistics and perform data auto-updates when possible.
"KRN",19,7629,1,3,0)
  
"KRN",19,7629,1,4,0)
 Description of Daily Statistics Report saved:
"KRN",19,7629,1,5,0)
   1. Total number of unique Patients (ICNs).
"KRN",19,7629,1,6,0)
   2. Total number of deactivated ICNs.
"KRN",19,7629,1,7,0)
   3. Total number of ICNs missing a CMOR 
"KRN",19,7629,1,8,0)
      (requires manual resolution)*.
"KRN",19,7629,1,9,0)
   4. Total number of ICNs missing a Treating Facility for the 
"KRN",19,7629,1,10,0)
      CMOR*.
"KRN",19,7629,1,11,0)
   5. Total number of newly identified ICNs with the same SSN as
"KRN",19,7629,1,12,0)
      well as previous totals*.
"KRN",19,7629,1,13,0)
   6. Total number of ICNs missing an ID State.
"KRN",19,7629,1,14,0)
   7. Total number of duplicate TFs in file 985.5.
"KRN",19,7629,1,15,0)
 
"KRN",19,7629,1,16,0)
   * Only ICNs with an ID State of PERMANENT, TEMPORARY or NULL
"KRN",19,7629,1,17,0)
     are counted.
"KRN",19,7629,1,18,0)
 
"KRN",19,7629,1,19,0)
The following problems (if found) that are auto-fixed:
"KRN",19,7629,1,20,0)
   1. SSN Dup - No ICN found at CMOR and not shared on the MPI.
"KRN",19,7629,1,21,0)
     (deactivated).
"KRN",19,7629,1,22,0)
   2. Duplicate TFs in file 985.5 are cleaned up.
"KRN",19,7629,1,23,0)
 
"KRN",19,7629,1,24,0)
The following problems (if found) needing manual resolution are saved for 
"KRN",19,7629,1,25,0)
display:
"KRN",19,7629,1,26,0)
   1. ICNs on MPI Missing CMOR Assignment.
"KRN",19,7629,1,27,0)
   2. ICNs on MPI with CMOR Missing Treating Facility on MPI.
"KRN",19,7629,1,28,0)
   3. SSN Dup - SSN in Conflict between CMOR and MPI.
"KRN",19,7629,1,29,0)
   4. SSN Dup - ICN in History at CMOR but shared on MPI.
"KRN",19,7629,1,30,0)
   5. SSN Dup - ICN not found at CMOR but shared on MPI.
"KRN",19,7629,1,31,0)
   6. SSN Dup - ICN in History at CMOR and not shared on the MPI.
"KRN",19,7629,1,32,0)
   7. SSN Dup - No ICN found at CMOR and not shared on the MPI.
"KRN",19,7629,1,33,0)
      (deactivation failed)
"KRN",19,7629,1,34,0)
   8. ICNs missing an ID State.
"KRN",19,7629,1,35,0)
   9. List of DUP SSN RPC queries were not returned from sites.
"KRN",19,7629,1,36,0)
      These sites will be caught again in the next day's compile.
"KRN",19,7629,25)
QUE1^MPISSR1
"KRN",19,7629,"U")
BACKGROUND MPI STAT REPORT COM
"KRN",19,7634,-1)
0^60
"KRN",19,7634,0)
MPI DATA MGT STAT RPT INTERACT^Daily Statistics Report^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7634,1,0)
^^36^36^3050719^
"KRN",19,7634,1,1,0)
This option performs an interactive compile or display of MPI data to 
"KRN",19,7634,1,2,0)
provide statistics and perform data auto-updates when possible.  
"KRN",19,7634,1,3,0)
  
"KRN",19,7634,1,4,0)
 Description of Daily Statistics Report Display:
"KRN",19,7634,1,5,0)
   1. Total number of unique Patients (ICNs).
"KRN",19,7634,1,6,0)
   2. Total number of deactivated ICNs.
"KRN",19,7634,1,7,0)
   3. Total number of ICNs missing a CMOR 
"KRN",19,7634,1,8,0)
      (requires manual resolution)*.
"KRN",19,7634,1,9,0)
   4. Total number of ICNs missing a Treating Facility for the 
"KRN",19,7634,1,10,0)
      CMOR*.
"KRN",19,7634,1,11,0)
   5. Total number of newly identified ICNs with the same SSN as
"KRN",19,7634,1,12,0)
      well as previous totals*.
"KRN",19,7634,1,13,0)
   6. Total number of ICNs missing an ID State.
"KRN",19,7634,1,14,0)
   7. Total number of duplicate TFs in file 985.5.
"KRN",19,7634,1,15,0)
 
"KRN",19,7634,1,16,0)
   * Only ICNs with an ID State of PERMANENT, TEMPORARY or NULL
"KRN",19,7634,1,17,0)
     are counted.
"KRN",19,7634,1,18,0)
 
"KRN",19,7634,1,19,0)
The following problems (if found) that are auto-fixed:
"KRN",19,7634,1,20,0)
   1. SSN Dup - No ICN found at CMOR and not shared on the MPI.
"KRN",19,7634,1,21,0)
     (deactivated).
"KRN",19,7634,1,22,0)
   2. Duplicate TFs in file 985.5 are cleaned up.
"KRN",19,7634,1,23,0)
 
"KRN",19,7634,1,24,0)
The following problems (if found) needing manual resolution are saved for 
"KRN",19,7634,1,25,0)
display:
"KRN",19,7634,1,26,0)
   1. ICNs on MPI Missing CMOR Assignment.
"KRN",19,7634,1,27,0)
   2. ICNs on MPI with CMOR Missing Treating Facility on MPI.
"KRN",19,7634,1,28,0)
   3. SSN Dup - SSN in Conflict between CMOR and MPI.
"KRN",19,7634,1,29,0)
   4. SSN Dup - ICN in History at CMOR but shared on MPI.
"KRN",19,7634,1,30,0)
   5. SSN Dup - ICN not found at CMOR but shared on MPI.
"KRN",19,7634,1,31,0)
   6. SSN Dup - ICN in History at CMOR and not shared on the MPI.
"KRN",19,7634,1,32,0)
   7. SSN Dup - No ICN found at CMOR and not shared on the MPI.
"KRN",19,7634,1,33,0)
      (deactivation failed)
"KRN",19,7634,1,34,0)
   8. ICNs missing an ID State.
"KRN",19,7634,1,35,0)
   9. List of DUP SSN RPC queries were not returned from sites.
"KRN",19,7634,1,36,0)
      These sites will be caught again in the next day's compile.
"KRN",19,7634,25)
EN^MPISSR1
"KRN",19,7634,"U")
DAILY STATISTICS REPORT
"KRN",19,7636,-1)
0^47
"KRN",19,7636,0)
MPI DATA MGT REMOTE SPI^Remote Single Patient Initialization^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7636,1,0)
^^4^4^3030724^
"KRN",19,7636,1,1,0)
This option allows a user to remotely send a patient from a selected site 
"KRN",19,7636,1,2,0)
to the MPI for an ICN assignment.  The option works in the same manner 
"KRN",19,7636,1,3,0)
(i.e., exact matches only, you can't pick from a list) as the real-time 
"KRN",19,7636,1,4,0)
connection made with the MPI using the VistA registration options.
"KRN",19,7636,25)
SPI^MPIRINT
"KRN",19,7636,"U")
REMOTE SINGLE PATIENT INITIALI
"KRN",19,7637,-1)
0^45
"KRN",19,7637,0)
MPI DATA MGT REMOTE ICN UPDATE^Remote ICN, Checksum and CMOR Update^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7637,1,0)
^^9^9^3030724^
"KRN",19,7637,1,1,0)
This option allows a user to remotely update the INTEGRATION CONTROL 
"KRN",19,7637,1,2,0)
NUMBER (#991.01), ICN CHECKSUM (#991.02), and COORDINATING MASTER OF 
"KRN",19,7637,1,3,0)
RECORD (#991.03) fields in the PATIENT (#2) file for a selected patient 
"KRN",19,7637,1,4,0)
and facility.  The patient can be selected by ICN or SSN.  The remote 
"KRN",19,7637,1,5,0)
update occurs from the MPI to a site selected from the treating facility 
"KRN",19,7637,1,6,0)
list on the MPI.  The user will also have the option of triggering a 
"KRN",19,7637,1,7,0)
patient data update. This would result in the broadcast of a new data 
"KRN",19,7637,1,8,0)
update message.  If the site selected is not the CMOR this will generate 
"KRN",19,7637,1,9,0)
a Patient Data Review (PDR) at the CMOR site.
"KRN",19,7637,25)
UPDT^MPIRINT
"KRN",19,7637,99)
59841,52957
"KRN",19,7637,"U")
REMOTE ICN, CHECKSUM AND CMOR 
"KRN",19,7638,-1)
0^43
"KRN",19,7638,0)
MPI DATA MGT REMOTE CMOR UPDT^Remote CMOR Update^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7638,1,0)
^^8^8^3030724^
"KRN",19,7638,1,1,0)
This option allows a user to remotely update the COORDINATING MASTER OF 
"KRN",19,7638,1,2,0)
RECORD (#991.03) field in the PATIENT (#2) file for a selected patient 
"KRN",19,7638,1,3,0)
and facility.  The patient can be selected by ICN or SSN.  The remote 
"KRN",19,7638,1,4,0)
update occurs using the CMOR from the MPI to a site selected from the 
"KRN",19,7638,1,5,0)
treating facility list on the MPI.  The user will also have the option of 
"KRN",19,7638,1,6,0)
triggering a patient data update. This would result in the broadcast of a 
"KRN",19,7638,1,7,0)
new data update message.  If the site selected is not the CMOR, this will 
"KRN",19,7638,1,8,0)
generate a Patient Data Review (PDR) at the CMOR site.
"KRN",19,7638,25)
CMOR^MPIRINT
"KRN",19,7638,"U")
REMOTE CMOR UPDATE
"KRN",19,7639,-1)
0^26
"KRN",19,7639,0)
MPI DATA MGT MPI ICN AUDIT^ICN Audit Data on the MPI^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7639,1,0)
^19.06^9^9^3020528^^^^
"KRN",19,7639,1,1,0)
This option prints information from the AUDIT file (#1.1) for a
"KRN",19,7639,1,2,0)
selected Integration Control Number (ICN) or Social Security
"KRN",19,7639,1,3,0)
Number (SSN) and date range.  If multiple ICNs are identified sharing
"KRN",19,7639,1,4,0)
the same SSN, available audit data will be displayed for all ICNs.
"KRN",19,7639,1,5,0)
  
"KRN",19,7639,1,6,0)
For the MPI VETERAN/CLIENT (#985) file entry selected, the report
"KRN",19,7639,1,7,0)
prints the ICN, date/time the field was edited, the user who made
"KRN",19,7639,1,8,0)
the change, the field edited, the old value, and the new value. The
"KRN",19,7639,1,9,0)
option or protocol (if available) will also be displayed.
"KRN",19,7639,25)
MPIAUD
"KRN",19,7639,"U")
ICN AUDIT DATA ON THE MPI
"KRN",19,7640,-1)
0^32
"KRN",19,7640,0)
MPI DATA MGT PT DATA INQ MENU^Patient Data Inquiry^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7640,1,0)
^^2^2^3020515^
"KRN",19,7640,1,1,0)
This menu provides access to patient data on the Master Patient Index 
"KRN",19,7640,1,2,0)
(MPI) and from facilities via remote procedure calls (RPCs).
"KRN",19,7640,10,0)
^19.01IP^11^11
"KRN",19,7640,10,1,0)
7560^PDAT^5
"KRN",19,7640,10,1,"^")
MPI DATA MGT PDAT MPI
"KRN",19,7640,10,2,0)
7598^DSSN^10
"KRN",19,7640,10,2,"^")
MPI DATA MGT DSSN PDAT MPI
"KRN",19,7640,10,4,0)
7639^IAUD^20
"KRN",19,7640,10,4,"^")
MPI DATA MGT MPI ICN AUDIT
"KRN",19,7640,10,5,0)
7581^RDAT^25
"KRN",19,7640,10,5,"^")
MPI DATA MGT REM SEND PDAT QRY
"KRN",19,7640,10,6,0)
7583^DDAT^30
"KRN",19,7640,10,6,"^")
MPI DATA MGT REM DISP PDAT QRY
"KRN",19,7640,10,7,0)
7626^RACT^35
"KRN",19,7640,10,7,"^")
MPI DATA MGT REM SEND PACT QRY
"KRN",19,7640,10,8,0)
7627^DACT^40
"KRN",19,7640,10,8,"^")
MPI DATA MGT REM DISP PACT QRY
"KRN",19,7640,10,9,0)
7642^RAUD^45
"KRN",19,7640,10,9,"^")
MPI DATA MGT REM SEND PAUD QRY
"KRN",19,7640,10,10,0)
7643^DAUD^50
"KRN",19,7640,10,10,"^")
MPI DATA MGT REM DISP PAUD QRY
"KRN",19,7640,10,11,0)
7670^EDAT^7
"KRN",19,7640,10,11,"^")
MPI DATA MGT PDAT EXT MPI
"KRN",19,7640,99)
59743,69432
"KRN",19,7640,99.1)
59954,46916
"KRN",19,7640,"U")
PATIENT DATA INQUIRY
"KRN",19,7642,-1)
0^39
"KRN",19,7642,0)
MPI DATA MGT REM SEND PAUD QRY^Request Remote Patient Audit^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7642,1,0)
0^19.06^10^10^3040121^^^
"KRN",19,7642,1,1,0)
This option sends a remote query to associated facilities.
"KRN",19,7642,1,2,0)
The user is prompted to select a patient by entering an
"KRN",19,7642,1,3,0)
ICN, SSN, DFN or NAME and the beginning and ending date ranges
"KRN",19,7642,1,4,0)
of the audit.  Once the patient is selected, a remote request
"KRN",19,7642,1,5,0)
is sent to the sites. The user can then pick from
"KRN",19,7642,1,6,0)
a list of sites where the remote queries will be sent. The
"KRN",19,7642,1,7,0)
information retrieved includes any fields in the patient
"KRN",19,7642,1,8,0)
file which have auditing turned on and have been modified.
"KRN",19,7642,1,9,0)
The data can be displayed by selecting the DISPLAY REMOTE
"KRN",19,7642,1,10,0)
PATIENT AUDIT option on the Patient Data Inquiry menu.
"KRN",19,7642,25)
SEND2^MPIRAUD
"KRN",19,7642,99)
59119,42084
"KRN",19,7642,"U")
REQUEST REMOTE PATIENT AUDIT
"KRN",19,7643,-1)
0^35
"KRN",19,7643,0)
MPI DATA MGT REM DISP PAUD QRY^Display Remote Patient Audit^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7643,1,0)
^19.06^7^7^3040121^^^^
"KRN",19,7643,1,1,0)
This option displays the results of a REQUEST REMOTE PATIENT
"KRN",19,7643,1,2,0)
AUDIT.  The user is prompted to select a patient by entering an
"KRN",19,7643,1,3,0)
ICN, SSN, DFN or NAME.  It will then check the status of an
"KRN",19,7643,1,4,0)
existing remote patient audit query.  Data displayed includes the
"KRN",19,7643,1,5,0)
Date/Time Edited, Field Edited, Edited By, Old Value / New Value
"KRN",19,7643,1,6,0)
and Option/Protocol.
"KRN",19,7643,1,7,0)
Please be sure history is enabled to capture data.
"KRN",19,7643,25)
DISP2^MPIRAUD
"KRN",19,7643,99)
58954,30112
"KRN",19,7643,"U")
DISPLAY REMOTE PATIENT AUDIT
"KRN",19,7644,-1)
0^29
"KRN",19,7644,0)
MPI DATA MGT PROC STAT RPT^MPI Process Status Report^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7644,1,0)
^^34^34^3020702^
"KRN",19,7644,1,1,0)
This report shows the status of the various tasks that are run routinely 
"KRN",19,7644,1,2,0)
on the MPI.
"KRN",19,7644,1,3,0)
 
"KRN",19,7644,1,4,0)
Includes:
"KRN",19,7644,1,5,0)
MPI Stat Report - The daily stat report that shows data problems and 
"KRN",19,7644,1,6,0)
totals on ICNs, Inactivated ICNs, Dup SSNs, etc.
"KRN",19,7644,1,7,0)
 
"KRN",19,7644,1,8,0)
Dup SSN Compile - Compile run to get Dup SSN site worksheets.
"KRN",19,7644,1,9,0)
 
"KRN",19,7644,1,10,0)
Audit Data Purge - Purge of the audit data on the MPI VETERAN/CLIENT 
"KRN",19,7644,1,11,0)
(#985) file.  This data is now to be kept for 1 year.
"KRN",19,7644,1,12,0)
 
"KRN",19,7644,1,13,0)
Site Monitor - Monitor routine run each day to look for any extraneous 
"KRN",19,7644,1,14,0)
sites sending data to the MPI, for example, data coming from a development 
"KRN",19,7644,1,15,0)
or test account.
"KRN",19,7644,1,16,0)
 
"KRN",19,7644,1,17,0)
Shared TF Statistics Compile - Compile done from the monthly data sweeps 
"KRN",19,7644,1,18,0)
that is used to generate the Shared TF spreadsheet.
"KRN",19,7644,1,19,0)
 
"KRN",19,7644,1,20,0)
HL7 Partial Query - Query used for the HL7 Link monitoring when it is 
"KRN",19,7644,1,21,0)
sent to ALL sites.
"KRN",19,7644,1,22,0)
 
"KRN",19,7644,1,23,0)
Last "MPI #'s Report" - Each Wednesday, the summary data from the MPI 
"KRN",19,7644,1,24,0)
Stat Report is captured for the MPI Status Report and also sent 
"KRN",19,7644,1,25,0)
automatically via e-mail to the appropriate mail group on Exchange.
"KRN",19,7644,1,26,0)
 
"KRN",19,7644,1,27,0)
Lastly, this report will check to see if the following background jobs 
"KRN",19,7644,1,28,0)
are running at the same time the MPI Process Status Report is generated.  
"KRN",19,7644,1,29,0)
If they are, information pertaining to the task is displayed which 
"KRN",19,7644,1,30,0)
includes Task #, Routine, Option Name, Device, Date/Time Started, User, 
"KRN",19,7644,1,31,0)
and Job #.
"KRN",19,7644,1,32,0)
 - Local/Missing Jobs from the sites
"KRN",19,7644,1,33,0)
 - MPI Stat Report
"KRN",19,7644,1,34,0)
 - HL7 Purge Transmissions
"KRN",19,7644,25)
EN^MPIMSRD
"KRN",19,7644,99)
58959,42670
"KRN",19,7644,"U")
MPI PROCESS STATUS REPORT
"KRN",19,7648,-1)
0^56
"KRN",19,7648,0)
MPI DATA MGT SETUP VISN REPORT^Site VISN Data Print^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7648,1,0)
^19.06^4^4^3020617^^
"KRN",19,7648,1,1,0)
This report prints the facility name, station number, and VISN
"KRN",19,7648,1,2,0)
information from the MPI SITE MONITOR (#985.3) file.  The report
"KRN",19,7648,1,3,0)
can be printed alphabetically by facility name or for all or a
"KRN",19,7648,1,4,0)
selected number of VISNs.
"KRN",19,7648,25)
EN1^MPIMVSN
"KRN",19,7648,"U")
SITE VISN DATA PRINT
"KRN",19,7649,-1)
0^53
"KRN",19,7649,0)
MPI DATA MGT SETUP EDIT VISN^VISN Update for Site(s)^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7649,1,0)
^^2^2^3020617^
"KRN",19,7649,1,1,0)
This option allows you to update the VISN field in the
"KRN",19,7649,1,2,0)
MPI SITE MONITOR (#985.3) file for a selected facility.
"KRN",19,7649,25)
EN2^MPIMVSN
"KRN",19,7649,"U")
VISN UPDATE FOR SITE(S)
"KRN",19,7650,-1)
0^58
"KRN",19,7650,0)
MPI DATA MGT SHAR PT TREND REP^Shared Patient Trending Report^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7650,1,0)
^19.06^13^13^3020627^^
"KRN",19,7650,1,1,0)
This option displays the shared patient statistics for a selected
"KRN",19,7650,1,2,0)
facility with all other facilities.  Trends over time are evident as
"KRN",19,7650,1,3,0)
the report displays the shared patient totals for a range of dates.
"KRN",19,7650,1,4,0)
  
"KRN",19,7650,1,5,0)
The report dates used can be selected by either of these methods:
"KRN",19,7650,1,6,0)
(1) The default is the First, Midpoint and Last dates available.
"KRN",19,7650,1,7,0)
(2) Alternately, you can choose any three dates in the MPI SHARED
"KRN",19,7650,1,8,0)
TREATING FACILITY STATS (#985.34) file.
"KRN",19,7650,1,9,0)
  
"KRN",19,7650,1,10,0)
The report may display data for the requested facility.  When this
"KRN",19,7650,1,11,0)
occurs, the facility name is enclosed within "<" ">" symbols.  The 
"KRN",19,7650,1,12,0)
numbers displayed are the number of patients with National 
"KRN",19,7650,1,13,0)
Integration Control Numbers (ICNs).
"KRN",19,7650,25)
MPIMSFT
"KRN",19,7650,"U")
SHARED PATIENT TRENDING REPORT
"KRN",19,7651,-1)
0^57
"KRN",19,7651,0)
MPI DATA MGT SHAR PT SITES REP^Total Patients Shared between Two Sites^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7651,1,0)
^^3^3^3020627^
"KRN",19,7651,1,1,0)
This option displays the shared patient totals between two
"KRN",19,7651,1,2,0)
facilities for a selected date range.  The data is from the
"KRN",19,7651,1,3,0)
MPI SHARED TREATING FACILITY STATS (#985.34) file.
"KRN",19,7651,25)
MPIMSFS
"KRN",19,7651,"U")
TOTAL PATIENTS SHARED BETWEEN 
"KRN",19,7665,-1)
0^101
"KRN",19,7665,0)
MPIM QUERY ACK CHECK INTERACT^Check Application ACK Status^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN^^
"KRN",19,7665,1,0)
^19.06^4^4^3020730^^^
"KRN",19,7665,1,1,0)
This option will allow the user to pick the date to check for missing 
"KRN",19,7665,1,2,0)
application level ACKs prior to and All sites or a single site (including 
"KRN",19,7665,1,3,0)
the MPI) to be checked.  The RPC will check to see if there are any 
"KRN",19,7665,1,4,0)
messages still waiting for an ACK to come back prior to date specified.
"KRN",19,7665,20)

"KRN",19,7665,25)
INACT^MPIRACK
"KRN",19,7665,99)
59015,34600
"KRN",19,7665,"U")
CHECK APPLICATION ACK STATUS
"KRN",19,7666,-1)
0^100
"KRN",19,7666,0)
MPIM QUERY ACK CHECK BCKJOB^Check Application ACK Status Background Job^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7666,1,0)
^^7^7^3020730^
"KRN",19,7666,1,1,0)
This option will check all sites and the MPI for missing Application 
"KRN",19,7666,1,2,0)
Level ACKS 3 days old or older.  The RPC will check each site and 
"KRN",19,7666,1,3,0)
retrigger any messages that are missing the ACK or log an exception if 
"KRN",19,7666,1,4,0)
the message can't be regenerated.
"KRN",19,7666,1,5,0)
 
"KRN",19,7666,1,6,0)
This background job should be scheduled to run via TaskMan to run daily, 
"KRN",19,7666,1,7,0)
after hours.
"KRN",19,7666,25)
SCHED^MPIRACK
"KRN",19,7666,"U")
CHECK APPLICATION ACK STATUS B
"KRN",19,7667,-1)
0^19
"KRN",19,7667,0)
MPI DATA MGT DUP RES^Resolve MPI Duplicate^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7667,1,0)
^^21^21^3030724^
"KRN",19,7667,1,1,0)
This option allows a user to merge duplicate records on the MPI when data 
"KRN",19,7667,1,2,0)
stored in the MPI VETERAN/CLIENT (#985) file is exactly the same for 
"KRN",19,7667,1,3,0)
first/last name, date of birth, SSN, and sex.  The records to be merged 
"KRN",19,7667,1,4,0)
can be selected by ICN or SSN.  All records involved are displayed and 
"KRN",19,7667,1,5,0)
the user is prompted to select the record to be retained (primary 
"KRN",19,7667,1,6,0)
record).  The ICNs involved will be displayed with the ICN to be retained 
"KRN",19,7667,1,7,0)
at the top, followed by the ICN(s) that are not matchable, and finally 
"KRN",19,7667,1,8,0)
those that are matchable.  To be matchable, they must be an exact match 
"KRN",19,7667,1,9,0)
on the fields noted above.  If there is at least one matchable entry, the 
"KRN",19,7667,1,10,0)
user is prompted to select the entry(s) to be merged.  This will trigger 
"KRN",19,7667,1,11,0)
messages to all treating facilities associated with the selected entry to 
"KRN",19,7667,1,12,0)
change the current ICN to the ICN being retained.  [NOTE: Only the CMOR 
"KRN",19,7667,1,13,0)
site for each involved ICN has to have an exact data match in order to be 
"KRN",19,7667,1,14,0)
merged.]  As messaging is returned from each site, indicating that the 
"KRN",19,7667,1,15,0)
change has taken place, the MPI FACILITY ASSOCIATION (#985.5) file is 
"KRN",19,7667,1,16,0)
updated for the retained ICN and the previous ICN entry for that site in 
"KRN",19,7667,1,17,0)
the MPI FACILITY ASSOCIATION (#985.5) file entry is removed.  Once all 
"KRN",19,7667,1,18,0)
the treating facilities have been moved to the retained ICN, the previous 
"KRN",19,7667,1,19,0)
ICN entry in the MPI VETERAN/CLIENT (#985) file is inactivated.  All 
"KRN",19,7667,1,20,0)
inactivated ICNs will be placed in the OTHER IDS (#200) field in the MPI 
"KRN",19,7667,1,21,0)
VETERAN/CLIENT (#985) file for the retained ICN.
"KRN",19,7667,25)
MPIA24D
"KRN",19,7667,"U")
RESOLVE MPI DUPLICATE
"KRN",19,7670,-1)
0^27
"KRN",19,7670,0)
MPI DATA MGT PDAT EXT MPI^MPI Extended Patient Data Inquiry^^R^^^^^^^^
"KRN",19,7670,1,0)
^^29^29^3020920^
"KRN",19,7670,1,1,0)
This option provides Master Patient Index (MPI) patient data for a 
"KRN",19,7670,1,2,0)
selected patient.  The patient can be entered by ICN, SSN, or SURNAME. 
"KRN",19,7670,1,3,0)
The report displays all data currently available on the MPI.  In this 
"KRN",19,7670,1,4,0)
extended data format, all available information stored in the MPI 
"KRN",19,7670,1,5,0)
FACILITY ASSOCIATION (#985.5) file is also displayed for each Treating 
"KRN",19,7670,1,6,0)
Facility.  These fields include:
"KRN",19,7670,1,7,0)
2   DFN
"KRN",19,7670,1,8,0)
11  SURNAME
"KRN",19,7670,1,9,0)
12  FIRST NAME
"KRN",19,7670,1,10,0)
13  MIDDLE NAME
"KRN",19,7670,1,11,0)
14  NAME PREFIX
"KRN",19,7670,1,12,0)
15  NAME SUFFIX
"KRN",19,7670,1,13,0)
16  MOTHERS MAIDEN NAME
"KRN",19,7670,1,14,0)
17  DATE OF BIRTH
"KRN",19,7670,1,15,0)
18  PLACE OF BIRTH CITY
"KRN",19,7670,1,16,0)
19  PLACE OF BIRTH STATE
"KRN",19,7670,1,17,0)
20  DATE OF DEATH
"KRN",19,7670,1,18,0)
22  GENDER
"KRN",19,7670,1,19,0)
23  SOCIAL SECURITY NUMBER
"KRN",19,7670,1,20,0)
25  CLAIM NUMBER
"KRN",19,7670,1,21,0)
29  DATE LAST TREATED
"KRN",19,7670,1,22,0)
30  ADT/HL7 EVENT REASON
"KRN",19,7670,1,23,0)
31  DATE OF LAST UPDATE MESSAGE
"KRN",19,7670,1,24,0)
 
"KRN",19,7670,1,25,0)
The user is prompted to select a patient using ICN, SSN SURNAME, or 
"KRN",19,7670,1,26,0)
SURNAME, FIRST NAME. If the user entered a duplicate SSN or SURNAME, a 
"KRN",19,7670,1,27,0)
list of patients will be returned. Once the user selects the patient, a 
"KRN",19,7670,1,28,0)
report with the patient's ICN, Name, SSN, DOB, Sex, CMOR and treating 
"KRN",19,7670,1,29,0)
facilities (with extended data from file #985.5) will be displayed.  
"KRN",19,7670,25)
MPINPDAT
"KRN",19,7670,"U")
MPI EXTENDED PATIENT DATA INQU
"KRN",19,7675,-1)
0^77
"KRN",19,7675,0)
MPI NEW PDAT^Display Patient Data on MPI^^R^^^^^^^^
"KRN",19,7675,25)
MPINPDAT
"KRN",19,7675,"U")
DISPLAY PATIENT DATA ON MPI
"KRN",19,7683,-1)
0^141
"KRN",19,7683,0)
MPI DATA MGT LOC ICN REP^Local ICN Totals Report^^R^^^^^^^^
"KRN",19,7683,1,0)
^^5^5^3030605^
"KRN",19,7683,1,1,0)
This option provides a report of Local ICN counts currently available 
"KRN",19,7683,1,2,0)
from the last PARTIAL remote query to the sites. The user may print data 
"KRN",19,7683,1,3,0)
for ALL sites or a SINGLE site.  If the report is printed for ALL sites, 
"KRN",19,7683,1,4,0)
then the user will choose from two available formats - Standard Report or 
"KRN",19,7683,1,5,0)
ASCII Download. 
"KRN",19,7683,25)
LOC^MPIMQP8
"KRN",19,7683,"U")
LOCAL ICN TOTALS REPORT
"KRN",19,7684,-1)
0^140
"KRN",19,7684,0)
MPI DATA MGT EXC TOTS REP^Exception Totals Report^^R^^^^^^^^
"KRN",19,7684,1,0)
^^5^5^3030605^
"KRN",19,7684,1,1,0)
This option provides a report of Local ICNs and Exception data currently 
"KRN",19,7684,1,2,0)
available from the last PARTIAL remote query to the sites.  The user may 
"KRN",19,7684,1,3,0)
print data for ALL sites or a SINGLE site.  If the report is printed for 
"KRN",19,7684,1,4,0)
ALL sites, then the user will choose from two available formats - 
"KRN",19,7684,1,5,0)
Standard Report or ASCII Download.  
"KRN",19,7684,25)
EXC^MPIMQP8
"KRN",19,7684,"U")
EXCEPTION TOTALS REPORT
"KRN",19,7695,-1)
0^11
"KRN",19,7695,0)
MPI DATA MGT BROADCAST TF UPD^Broadcast TF Update from MPI^^R^^^^^^^^
"KRN",19,7695,1,0)
^^2^2^3030724^
"KRN",19,7695,1,1,0)
This option allows a user to select an ICN on the MPI and broadcast a 
"KRN",19,7695,1,2,0)
Treating Facility Update to all sites sharing the ICN.
"KRN",19,7695,25)
MPIMBC
"KRN",19,7695,"U")
BROADCAST TF UPDATE FROM MPI
"KRN",19,7696,-1)
0^133
"KRN",19,7696,0)
MPIX EXCEPTION WORKLOAD RPT^Exception Workload Report^^R^^^^^^^^
"KRN",19,7696,1,0)
^^12^12^3030603^
"KRN",19,7696,1,1,0)
This option produces an Exception Workload Report for a user selected 
"KRN",19,7696,1,2,0)
date range. The exceptions are screened for the exceptions RECEIVED 
"KRN",19,7696,1,3,0)
during the date range.
"KRN",19,7696,1,4,0)
 
"KRN",19,7696,1,5,0)
The report lists totals for:
"KRN",19,7696,1,6,0)
Resolved Exceptions
"KRN",19,7696,1,7,0)
Unassigned/Pending Exceptions
"KRN",19,7696,1,8,0)
Assigned/Pending Exceptions
"KRN",19,7696,1,9,0)
Resolved Exceptions by Case Worker
"KRN",19,7696,1,10,0)
 
"KRN",19,7696,1,11,0)
"Postmaster" exception totals are exceptions that auto-cleared by 
"KRN",19,7696,1,12,0)
^RGMTEPT.
"KRN",19,7696,25)
MPIXEWL
"KRN",19,7696,"U")
EXCEPTION WORKLOAD REPORT
"KRN",19,7697,-1)
0^129
"KRN",19,7697,0)
MPIX DETAIL CW EXCEPTION RPT^Detail Caseworker Exception Report^^R^^^^^^^^
"KRN",19,7697,1,0)
^^20^20^3030603^
"KRN",19,7697,1,1,0)
This option produces a Detailed Caseworker Exception Report for a user 
"KRN",19,7697,1,2,0)
selected date range and caseworker(s).  Selectable caseworkers will be 
"KRN",19,7697,1,3,0)
determined by screening for those who resolved exceptions during the 
"KRN",19,7697,1,4,0)
selected date range.  Exceptions will be screened to include only those 
"KRN",19,7697,1,5,0)
RESOLVED during the selected date range.
"KRN",19,7697,1,6,0)
 
"KRN",19,7697,1,7,0)
The report will sort the data by caseworker/date resolved.  Detailed data 
"KRN",19,7697,1,8,0)
will be displayed for each exception:
"KRN",19,7697,1,9,0)
Tracking Number
"KRN",19,7697,1,10,0)
Date Reported
"KRN",19,7697,1,11,0)
Status
"KRN",19,7697,1,12,0)
Date Resolved
"KRN",19,7697,1,13,0)
Site Rec'd From
"KRN",19,7697,1,14,0)
HL7 Message ID
"KRN",19,7697,1,15,0)
Patient Name
"KRN",19,7697,1,16,0)
SSN
"KRN",19,7697,1,17,0)
CMOR
"KRN",19,7697,1,18,0)
ICN
"KRN",19,7697,1,19,0)
Exception Text
"KRN",19,7697,1,20,0)
Processing Notes
"KRN",19,7697,25)
MPIXCW
"KRN",19,7697,"U")
DETAIL CASEWORKER EXCEPTION RE
"KRN",19,7698,-1)
0^33
"KRN",19,7698,0)
MPI DATA MGT REEST ICN^Reestablish or Synchronize an ICN on MPI^^R^^^^^^^^
"KRN",19,7698,1,0)
^^6^6^3030724^
"KRN",19,7698,1,1,0)
This option allows a user to reestablish an ICN on the MPI using data 
"KRN",19,7698,1,2,0)
from a selected site.  It can also be used to synchronize the data for an 
"KRN",19,7698,1,3,0)
ICN that already exists on the MPI with data from a selected site.  This 
"KRN",19,7698,1,4,0)
is accomplished by sending a remote query to a site where the ICN exists. 
"KRN",19,7698,1,5,0)
The data returned from the site will populate the appropriate fields in 
"KRN",19,7698,1,6,0)
the MPI VETERAN/CLIENT (#985) and MPI FACILITY ASSOCIATION (#985.5) files.
"KRN",19,7698,25)
START^MPIA19
"KRN",19,7698,"U")
REESTABLISH OR SYNCHRONIZE AN 
"KRN",19,7729,-1)
0^12
"KRN",19,7729,0)
MPI DATA MGT CHK MESSAGING^Check Status of Remote Update Request^^R^^^^^^^^
"KRN",19,7729,1,0)
^^11^11^3050727^
"KRN",19,7729,1,1,0)
This option checks to see if responses to any of the following remote 
"KRN",19,7729,1,2,0)
update options are still pending for a specified ICN/SSN:
"KRN",19,7729,1,3,0)
 
"KRN",19,7729,1,4,0)
Msg
"KRN",19,7729,1,5,0)
Type  OPTION
"KRN",19,7729,1,6,0)
----------------------------------------------------
"KRN",19,7729,1,7,0)
A19   (RE)  Reestablish or Synchronize an ICN on MPI
"KRN",19,7729,1,8,0)
A24   (DUP) Resolve MPI Duplicate
"KRN",19,7729,1,9,0)
A43   (MP)  Mismatched Patient Record Resolution
"KRN",19,7729,1,10,0)
A43   (TR)  Transfer ICN for Duplicate Site Record
"KRN",19,7729,1,11,0)
M05   (BC)  Broadcast TF Update from MPI
"KRN",19,7729,25)
MPIMMSG
"KRN",19,7729,"U")
CHECK STATUS OF REMOTE UPDATE 
"KRN",19,7730,-1)
0^136
"KRN",19,7730,0)
MPIX SEARCH EXCEPTIONS ICN/SSN^Search Exceptions by ICN or SSN^^R^^^^^^^^
"KRN",19,7730,1,0)
^^6^6^3030716^
"KRN",19,7730,1,1,0)
This option will allow a user to search the MPI SERVER EXCEPTIONS file 
"KRN",19,7730,1,2,0)
(#985.9) for any exceptions involving a specified ICN or SSN.
"KRN",19,7730,1,3,0)
 
"KRN",19,7730,1,4,0)
NOTE: Exceptions will be displayed regardless of STATUS, however, 
"KRN",19,7730,1,5,0)
exceptions with a case worker assignment of POSTMASTER will be omitted.  
"KRN",19,7730,1,6,0)
Also, a pseudo-SSN can be used for this search.
"KRN",19,7730,25)
MPIXSE
"KRN",19,7730,"U")
SEARCH EXCEPTIONS BY ICN OR SS
"KRN",19,7756,-1)
0^139
"KRN",19,7756,0)
MPIM MGR REPORTS^Reports Menu^^M^^^^^^^^
"KRN",19,7756,1,0)
^^2^2^3040203^
"KRN",19,7756,1,1,0)
This menu provides access to the various reports written as special 
"KRN",19,7756,1,2,0)
utilities on the MPI.
"KRN",19,7756,10,0)
^19.01IP^5^5
"KRN",19,7756,10,1,0)
7683^LOC^5
"KRN",19,7756,10,1,"^")
MPI DATA MGT LOC ICN REP
"KRN",19,7756,10,2,0)
7684^EXC^10
"KRN",19,7756,10,2,"^")
MPI DATA MGT EXC TOTS REP
"KRN",19,7756,99)
59568,58468
"KRN",19,7756,"U")
REPORTS MENU
"KRN",19,7781,-1)
0^130
"KRN",19,7781,0)
MPIX EXC TYPE STATS RPT^Exception Type Statistics^^R^^^^^^^^
"KRN",19,7781,1,0)
^^2^2^3040608^
"KRN",19,7781,1,1,0)
This option displays an Exception Statistics Report of the exception 
"KRN",19,7781,1,2,0)
types RECEIVED during a user selected date range.  
"KRN",19,7781,25)
MPIXTYPR
"KRN",19,7781,"U")
EXCEPTION TYPE STATISTICS
"KRN",19,7787,-1)
0^42
"KRN",19,7787,0)
MPI DATA MGT REMOTE CMOR PUSH^Remote CMOR Push^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7787,1,0)
^^2^2^3040625^
"KRN",19,7787,1,1,0)
This option will allow the DQ team to create a Push of CMOR from the MPI 
"KRN",19,7787,1,2,0)
as if they had made the request from the current CMOR's system.
"KRN",19,7787,25)
MPIRCMRP
"KRN",19,7787,"U")
REMOTE CMOR PUSH
"KRN",19,7788,-1)
0^44
"KRN",19,7788,0)
MPI DATA MGT REMOTE DATA SYNC^Sync TF site(s) data from CMORs^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7788,1,0)
^^3^3^3040716^
"KRN",19,7788,1,1,0)
This option will allow the DQ team to sync the TFs data using the CMORs 
"KRN",19,7788,1,2,0)
data on the MPI.  It will only update the 5 key fields.  The message is 
"KRN",19,7788,1,3,0)
an A31 sent from the MPI to all the TFs, except the CMORs.
"KRN",19,7788,25)
SYNC^MPIRCMRP
"KRN",19,7788,"U")
SYNC TF SITE(S) DATA FROM CMOR
"KRN",19,7789,-1)
0^70
"KRN",19,7789,0)
MPI ID STATE MENU^ID State Menu^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7789,1,0)
^19.06^4^4^3040406^^^^
"KRN",19,7789,1,1,0)
This menu contains options to set the ID State for existing
"KRN",19,7789,1,2,0)
entries in the MPI VETERAN/CLIENT (#985) file.  Additionally,
"KRN",19,7789,1,3,0)
you can print a report of previous ID State runs and validate
"KRN",19,7789,1,4,0)
the ID State assignments.
"KRN",19,7789,10,0)
^19.01IP^5^5
"KRN",19,7789,10,1,0)
7790^^1
"KRN",19,7789,10,1,"^")
MPI ID STATE SET SELECTED
"KRN",19,7789,10,2,0)
7791^^5
"KRN",19,7789,10,2,"^")
MPI ID STATE SET ALL
"KRN",19,7789,10,3,0)
7792^^10
"KRN",19,7789,10,3,"^")
MPI ID STATE REMAIN
"KRN",19,7789,10,4,0)
7793^^15
"KRN",19,7789,10,4,"^")
MPI ID STATE REPORT
"KRN",19,7789,10,5,0)
7794^^20
"KRN",19,7789,10,5,"^")
MPI ID STATE VALIDATE
"KRN",19,7789,99)
59753,23193
"KRN",19,7789,"U")
ID STATE MENU
"KRN",19,7790,-1)
0^74
"KRN",19,7790,0)
MPI ID STATE SET SELECTED^Set ID State for a Selected Number of Entries^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7790,1,0)
^19.06^10^10^3040406^^^
"KRN",19,7790,1,1,0)
This option allows the user to specify the number of ICNs to be
"KRN",19,7790,1,2,0)
processed.  For the selected number, the data will be evaluated
"KRN",19,7790,1,3,0)
and the ID State value assigned.  At the conclusion of this process, 
"KRN",19,7790,1,4,0)
a report is presented with the results.
"KRN",19,7790,1,5,0)
  
"KRN",19,7790,1,6,0)
For each date/time that the Set ID State for Existing Entries ran,
"KRN",19,7790,1,7,0)
information for ID State is displayed.  For ID State the number of
"KRN",19,7790,1,8,0)
deactivated, temporary, and permanent ICNs is shown. Additionally,
"KRN",19,7790,1,9,0)
the total for each of these categories is listed, along with the
"KRN",19,7790,1,10,0)
total number of entries processed.
"KRN",19,7790,25)
MPISIST
"KRN",19,7790,"U")
SET ID STATE FOR A SELECTED NU
"KRN",19,7791,-1)
0^73
"KRN",19,7791,0)
MPI ID STATE SET ALL^All Existing Entries - Set ID State^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7791,1,0)
^^13^13^3040915^
"KRN",19,7791,1,1,0)
All Existing Entries - Set ID State  [MPI ID STATE SET ALL]
"KRN",19,7791,1,2,0)
Use this entry point on the Austin MPI with caution!
"KRN",19,7791,1,3,0)
If 4000 ICNs are processed each minute, the entire file
"KRN",19,7791,1,4,0)
could take over 44 hours (almost 2 days) to process.
"KRN",19,7791,1,5,0)
  
"KRN",19,7791,1,6,0)
This option allows the user to process ALL ICNs on the MPI in
"KRN",19,7791,1,7,0)
one batch.  The data for each ICN is evaluated, and the ID State
"KRN",19,7791,1,8,0)
value assigned.
"KRN",19,7791,1,9,0)
  
"KRN",19,7791,1,10,0)
This task is queued to run in the background!
"KRN",19,7791,1,11,0)
  
"KRN",19,7791,1,12,0)
Use the History of Set ID State Runs [MPI ID STATE REPORT]
"KRN",19,7791,1,13,0)
option to see the ID State totals generated by this task.
"KRN",19,7791,25)
EN1^MPISIST
"KRN",19,7791,"U")
ALL EXISTING ENTRIES - SET ID 
"KRN",19,7792,-1)
0^71
"KRN",19,7792,0)
MPI ID STATE REMAIN^Entries Remaining with No ID State^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7792,1,0)
^19.06^7^7^3040406^^
"KRN",19,7792,1,1,0)
Use this entry point on the Austin MPI with caution!
"KRN",19,7792,1,2,0)
With over 10 million records to be examined, this option will
"KRN",19,7792,1,3,0)
take a LONG time to run.
"KRN",19,7792,1,4,0)
  
"KRN",19,7792,1,5,0)
This option examines each entry in the MPI VETERAN/CLIENT (#985) file
"KRN",19,7792,1,6,0)
to determine if the ID State has been set for that entry.  The number
"KRN",19,7792,1,7,0)
of entries remaining without an assigned ID State is displayed.
"KRN",19,7792,25)
LEFT^MPISIST
"KRN",19,7792,"U")
ENTRIES REMAINING WITH NO ID S
"KRN",19,7793,-1)
0^72
"KRN",19,7793,0)
MPI ID STATE REPORT^History of Set ID State Runs^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7793,1,0)
^19.06^5^5^3040406^^^
"KRN",19,7793,1,1,0)
For each date/time that the Set ID State for Existing Entries ran,
"KRN",19,7793,1,2,0)
information for ID State is displayed.  For ID State the number of
"KRN",19,7793,1,3,0)
deactivated, temporary, and permanent ICNs is shown. Additionally,
"KRN",19,7793,1,4,0)
the total for each of these categories is listed, along with the
"KRN",19,7793,1,5,0)
total number of entries processed.
"KRN",19,7793,25)
PRTTOT^MPISIST
"KRN",19,7793,"U")
HISTORY OF SET ID STATE RUNS
"KRN",19,7794,-1)
0^75
"KRN",19,7794,0)
MPI ID STATE VALIDATE^Validate ID State Information^^R^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",19,7794,1,0)
^19.06^12^12^3040413^^^^
"KRN",19,7794,1,1,0)
This option allows the user to validate the results of the assigned
"KRN",19,7794,1,2,0)
ID State for a selected number of records in the MPI VETERAN/CLIENT
"KRN",19,7794,1,3,0)
(#985) file. Up to 1,000 records can be selected to analyze.
"KRN",19,7794,1,4,0)
  
"KRN",19,7794,1,5,0)
The information can be displayed for randomly selected Integration
"KRN",19,7794,1,6,0)
Control Numbers (ICNs) or for a selected ID State. The ID States are
"KRN",19,7794,1,7,0)
Deactivated, Temporary, and Permanent. The ID State search begins with
"KRN",19,7794,1,8,0)
the first ICN in File #985.
"KRN",19,7794,1,9,0)
    
"KRN",19,7794,1,10,0)
Use the global structure information from the MPI VETERAN/CLIENT (#985)
"KRN",19,7794,1,11,0)
file to validate that the correct ID State has been assigned. The user
"KRN",19,7794,1,12,0)
must also know the conditions under which each state is assigned.
"KRN",19,7794,25)
VRFY^MPISIUT
"KRN",19,7794,"U")
VALIDATE ID STATE INFORMATION
"KRN",19,7796,-1)
0^64
"KRN",19,7796,0)
MPI DATA MGT TFCHK RPT QUEUED^Background TF Data Validation Compile^^R^^^^^^^^
"KRN",19,7796,1,0)
20
"KRN",19,7796,1,1,0)
This option performs a queued background compile of MPI data to provide 
"KRN",19,7796,1,2,0)
statistics on the total number of entries in the MPI FACILITY ASSOCIATION 
"KRN",19,7796,1,3,0)
file (#985.5) without a DFN (FHIE, Station 200, entries are not checked), 
"KRN",19,7796,1,4,0)
the total number of Temporary ICNs that are shared, and total number of 
"KRN",19,7796,1,5,0)
Station #/DFN duplicates identified in the "ASD" cross-reference in the 
"KRN",19,7796,1,6,0)
MPI FACILITY ASSOCIATION file (#985.5). Results are displayed in option 
"KRN",19,7796,1,7,0)
"Treating Facility Data Validation Report" [MPI DATA MGT TFCHK RPT PRT].  
"KRN",19,7796,1,8,0)
   
"KRN",19,7796,1,9,0)
    Description of compile: 
"KRN",19,7796,1,10,0)
    Each instance (or, in some cases, a count) for items 1-2 below is 
"KRN",19,7796,1,11,0)
    identified and saved in ^XTMP("MPIS","TF1".  
"KRN",19,7796,1,12,0)
    
"KRN",19,7796,1,13,0)
    Description of "Treating Facility Data Validation Report" Display: 
"KRN",19,7796,1,14,0)
    1. Total number of entries in the MPI FACILITY ASSOCIATION file 
"KRN",19,7796,1,15,0)
       (#985.5) without a DFN.
"KRN",19,7796,1,16,0)
    2. Total number of Temporary ICNs that are shared.
"KRN",19,7796,1,17,0)
    3. Total number of Station #/DFN duplicates identified in the "ASD" 
"KRN",19,7796,1,18,0)
       cross-reference in the MPI FACILITY ASSOCIATION file (#985.5).
"KRN",19,7796,1,19,0)
 
"KRN",19,7796,1,20,0)
    Detailed information for items 1, 2 and 3 is then displayed.
"KRN",19,7796,25)
QUE1^MPISTF1
"KRN",19,7796,"U")
BACKGROUND TF DATA VALIDATION 
"KRN",19,7797,-1)
0^63
"KRN",19,7797,0)
MPI DATA MGT TFCHK RPT PRT^Treating Facility Data Validation Report^^R^^^^^^^^
"KRN",19,7797,1,0)
^^21^21^3050609^
"KRN",19,7797,1,1,0)
This option performs an interactive compile or display of MPI data to 
"KRN",19,7797,1,2,0)
provide statistics on the total number of entries in the MPI FACILITY 
"KRN",19,7797,1,3,0)
ASSOCIATION file (#985.5) without a DFN (FHIE, Station 200, entries are 
"KRN",19,7797,1,4,0)
not checked), the total number of Temporary ICNs that are shared, and 
"KRN",19,7797,1,5,0)
total number of Station #/DFN duplicates identified in the "ASD" 
"KRN",19,7797,1,6,0)
cross-reference in the MPI FACILITY ASSOCIATION file (#985.5).  The 
"KRN",19,7797,1,7,0)
compile is generated by the background option "Background TF Data 
"KRN",19,7797,1,8,0)
Validation Compile" [MPI DATA MGT TFCHK RPT QUEUED].
"KRN",19,7797,1,9,0)
      
"KRN",19,7797,1,10,0)
    Description of compile: 
"KRN",19,7797,1,11,0)
    Each instance (or, in some cases, a count) for items 1-2 below is 
"KRN",19,7797,1,12,0)
    identified and saved in ^XTMP("MPIS","TF1".  
"KRN",19,7797,1,13,0)
    
"KRN",19,7797,1,14,0)
    Description of "Treating Facility Data Validation Report" Display: 
"KRN",19,7797,1,15,0)
    1. Total number of entries in the MPI FACILITY ASSOCIATION file 
"KRN",19,7797,1,16,0)
       (#985.5) without a DFN.
"KRN",19,7797,1,17,0)
    2. Total number of Temporary ICNs that are shared.
"KRN",19,7797,1,18,0)
    3. Total number of Station #/DFN duplicates identified in the "ASD" 
"KRN",19,7797,1,19,0)
       cross-reference in the MPI FACILITY ASSOCIATION file (#985.5).
"KRN",19,7797,1,20,0)
 
"KRN",19,7797,1,21,0)
    Detailed information for items 1, 2 and 3 is then displayed.
"KRN",19,7797,25)
EN^MPISTF1
"KRN",19,7797,"U")
TREATING FACILITY DATA VALIDAT
"KRN",19,7810,-1)
0^137
"KRN",19,7810,0)
MPI DATA MGT MISMATCH PT RES^Mismatched Patient Record Resolution^^R^^^^^^^^
"KRN",19,7810,1,0)
^^18^18^3050425^
"KRN",19,7810,1,1,0)
This option allows a user to resolve a Mismatched Patient record. This is 
"KRN",19,7810,1,2,0)
done by selecting the site record to be moved from the "incorrect" (or
"KRN",19,7810,1,3,0)
"FROM") ICN and either correlating it to the "correct" (or "TO") ICN or
"KRN",19,7810,1,4,0)
allowing the user to create a new ICN.
"KRN",19,7810,1,5,0)
 
"KRN",19,7810,1,6,0)
In addition, the "FROM" ICN is removed from the ICN HISTORY (#992) 
"KRN",19,7810,1,7,0)
multiple in the PATIENT (#2) file at the site and any entries associated
"KRN",19,7810,1,8,0)
with that site are removed from the OTHER IDS (#200) field of the MPI
"KRN",19,7810,1,9,0)
VETERAN/CLIENT (#985) file on the MPI.
"KRN",19,7810,1,10,0)
 
"KRN",19,7810,1,11,0)
When to use this option:
"KRN",19,7810,1,12,0)
1. ONLY used to resolve identified mismatched patients!
"KRN",19,7810,1,13,0)
 
"KRN",19,7810,1,14,0)
Notes:
"KRN",19,7810,1,15,0)
- ICN is NOT retained in history.
"KRN",19,7810,1,16,0)
- If the ICN is shared with other facility(s), the final result is the
"KRN",19,7810,1,17,0)
  removal of the site from the treating facility lists on the MPI and each
"KRN",19,7810,1,18,0)
  remaining site(s) who share the ICN.
"KRN",19,7810,25)
EN1^MPIA43
"KRN",19,7810,"U")
MISMATCHED PATIENT RECORD RESO
"KRN",19,7811,-1)
0^138
"KRN",19,7811,0)
MPI DATA MGT UNL DUP PTS^Transfer ICN for Duplicate Site Record^^R^^^^^^^^
"KRN",19,7811,1,0)
^^19^19^3050825^
"KRN",19,7811,1,1,0)
This option allows a user to transfer a site's association from a selected
"KRN",19,7811,1,2,0)
ICN that is the "FROM" record in an identified site duplicate that has not
"KRN",19,7811,1,3,0)
yet been merged.  Once the Station #/DFN record is selected and the move 
"KRN",19,7811,1,4,0)
is confirmed, that record will be moved to a new ICN.  At that point, the
"KRN",19,7811,1,5,0)
"TO" record at the site can be attached to the ICN by either doing an SPI
"KRN",19,7811,1,6,0)
or using the option "(DUP) Resolve MPI Duplicate". In addition, the ICN is
"KRN",19,7811,1,7,0)
removed from the ICN HISTORY (#992) multiple in the PATIENT (#2) file at
"KRN",19,7811,1,8,0)
the site and any entries associated with that site are removed from the
"KRN",19,7811,1,9,0)
OTHER IDS (#200) field of the MPI VETERAN/CLIENT (#985) file on the MPI.
"KRN",19,7811,1,10,0)
 
"KRN",19,7811,1,11,0)
When to use this option:
"KRN",19,7811,1,12,0)
- To remove a duplicate patient (the "FROM" record) at a site from an ICN
"KRN",19,7811,1,13,0)
  so that the "correct" patient (the "TO" record) can be attached to the
"KRN",19,7811,1,14,0)
  ICN for the purpose of enabling RDV.
"KRN",19,7811,1,15,0)
 
"KRN",19,7811,1,16,0)
Notes:
"KRN",19,7811,1,17,0)
- ICN is NOT retained in history.
"KRN",19,7811,1,18,0)
- The final result is the removal of the site from the treating facility 
"KRN",19,7811,1,19,0)
  lists on the MPI and each remaining site(s) who share the ICN.
"KRN",19,7811,25)
EN2^MPIA43
"KRN",19,7811,"U")
TRANSFER ICN FOR DUPLICATE SIT
"KRN",19.1,279,-1)
0^3
"KRN",19.1,279,0)
MPIDMGR^Documentor's Key on MPI Austin
"KRN",19.1,279,1,0)
^^2^2^3030624^
"KRN",19.1,279,1,1,0)
Used to allow documenters to work on a new option. When the option is 
"KRN",19.1,279,1,2,0)
ready for the DQ team, it will be removed.
"KRN",19.1,285,-1)
0^2
"KRN",19.1,285,0)
MPI DQ MGR^Data Quality Key on Austin MPI^^n
"KRN",19.1,285,1,0)
^^2^2^3040727^
"KRN",19.1,285,1,1,0)
This key provides access to all the Data Quality Mgt options that are 
"KRN",19.1,285,1,2,0)
resident on the MPI.
"KRN",101,1598,-1)
0^8
"KRN",101,1598,0)
MPI A31^MPI A31 RESPONSE^^S^^^^^^^^TOOLKIT
"KRN",101,1598,10,0)
^101.01PA^^0
"KRN",101,1598,99)
57807,70513
"KRN",101,1598,770)
^MPIF MPI^ADT^A31^i^P^^NE^NE^2.3^ADT
"KRN",101,1598,771)
D ADT^MPIGET
"KRN",101,1598,772)
Q
"KRN",101,1598,773)
0^0^0^0
"KRN",101,1606,-1)
0^38
"KRN",101,1606,0)
MPI ICN-Q02 SERVER^USED TO BUILD INITIAL ICNS^^E^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1606,99)
57271,49252
"KRN",101,1606,770)
MPIF-STARTUP^^VQQ^Q02^i^P^^AL^NE^2.3^
"KRN",101,1606,775,0)
^101.0775PA^1^1
"KRN",101,1606,775,1,0)
1607
"KRN",101,1606,775,1,"^")
MPI TEST
"KRN",101,1607,-1)
0^49
"KRN",101,1607,0)
MPI TEST^TEST MPI PROTOCOL^^S^^^^^^^^
"KRN",101,1607,99)
57265,59859
"KRN",101,1607,770)
^MPIF MPI^VQQ^Q02^i^P^^^^2.3^ACK
"KRN",101,1607,771)
D ^MPILMBJ
"KRN",101,1607,773)
1^1^^1
"KRN",101,1618,-1)
0^9
"KRN",101,1618,0)
MPI A31 REQUEST^MPI A31 REQUEST^^E^^^^^^^^
"KRN",101,1618,99)
57807,71756
"KRN",101,1618,770)
^MPIF MPI^ADT^A31^i^P^^^^2.3^
"KRN",101,1618,771)
D ADT^MPIGET
"KRN",101,1618,775,0)
^101.0775PA^1^1
"KRN",101,1618,775,1,0)
1598
"KRN",101,1618,775,1,"^")
MPI A31
"KRN",101,1635,-1)
0^36
"KRN",101,1635,0)
MPI FACILITY INTEGRATION CLIENT^FACILITY INTEGRATION CLIENT^^S^^^^^^^^
"KRN",101,1635,1,0)
^^3^3^3000324^
"KRN",101,1635,1,1,0)
This is the client for the facility integration message which notifies
"KRN",101,1635,1,2,0)
sites for a particular patient that there has been a site integration
"KRN",101,1635,1,3,0)
in which the patient was involved.
"KRN",101,1635,99)
58310,29725
"KRN",101,1635,770)
^RG SITE MERGE^^A08^d^P^^^^2.3^ACK
"KRN",101,1635,771)
D RECEIVE^MPIEPM
"KRN",101,1635,772)

"KRN",101,1635,773)
1^1^0^0
"KRN",101,1635,774)
Q
"KRN",101,1636,-1)
0^37
"KRN",101,1636,0)
MPI FACILITY INTEGRATION SERVER^FACILITY INTEGRATION^^E^^^^^^^^
"KRN",101,1636,1,0)
^^1^1^3000324^
"KRN",101,1636,1,1,0)
This is the server for the facility integration message.
"KRN",101,1636,99)
58310,29726
"KRN",101,1636,770)
RG SITE MERGE^^ADT^A08^^P^^AL^AL^2.3^
"KRN",101,1636,772)
Q
"KRN",101,1636,775,0)
^101.0775PA^1^1
"KRN",101,1636,775,1,0)
1635
"KRN",101,1636,775,1,"^")
MPI FACILITY INTEGRATION CLIENT
"KRN",101,1659,-1)
0^55
"KRN",101,1659,0)
MPIX EXCPT DATE SORT^Sort by Exception Date^^A^^^^^^^^
"KRN",101,1659,1,0)
^^2^2^3010523^
"KRN",101,1659,1,1,0)
This protocol allows the user to sort exceptions by date in the 
"KRN",101,1659,1,2,0)
 MPI Exception Handling option [MPIX EXCEPTION HANDLING].
"KRN",101,1659,20)
S MPISORT="SD" D SORT^MPIEXC01
"KRN",101,1659,99)
58820,52034
"KRN",101,1660,-1)
0^68
"KRN",101,1660,0)
MPIX EXCPT SITE SORT^Sort by Reporting Site^^A^^^^^^^^
"KRN",101,1660,1,0)
^^2^2^3010523^
"KRN",101,1660,1,1,0)
This protocol allows the user to sort exceptions by reporting site in the 
"KRN",101,1660,1,2,0)
MPI Exception Handling option [MPI EXCEPTION HANDLING].
"KRN",101,1660,20)
S MPISORT="SS" D SORT^MPIEXC01
"KRN",101,1660,99)
58820,52034
"KRN",101,1661,-1)
0^69
"KRN",101,1661,0)
MPIX EXCPT TYPE SORT^Sort by Exception Type^^A^^^^^^^^
"KRN",101,1661,1,0)
^^2^2^3010523^
"KRN",101,1661,1,1,0)
This protocol allows the user to sort exceptions by type in the MPI
"KRN",101,1661,1,2,0)
Exception Handling option [MPIX EXCEPTION HANDLING].
"KRN",101,1661,20)
S MPISORT="ST" D SORT^MPIEXC01
"KRN",101,1661,99)
58820,52034
"KRN",101,1662,-1)
0^54
"KRN",101,1662,0)
MPIX EXCPT CASEWORKER SORT^Sort by Case Worker^^A^^^^^^^^
"KRN",101,1662,1,0)
^^2^2^3010523^
"KRN",101,1662,1,1,0)
This protocol allows the user to sort exceptions by case worker in the MPI
"KRN",101,1662,1,2,0)
Exception Handling option [MPIX EXCEPTION HANDLING].
"KRN",101,1662,20)
S MPISORT="SW" D SORT^MPIEXC01
"KRN",101,1662,99)
58820,52034
"KRN",101,1663,-1)
0^67
"KRN",101,1663,0)
MPIX EXCPT SELECT^Select Exception^^A^^^^^^^^
"KRN",101,1663,1,0)
^101.06^2^2^3010529^^
"KRN",101,1663,1,1,0)
This item allows the user to Select an exception to work on in the MPI
"KRN",101,1663,1,2,0)
Exception Handler [MPIX EXCEPTION HANDLING].
"KRN",101,1663,20)
D SELECT^MPIEXC01
"KRN",101,1663,99)
58820,52034
"KRN",101,1664,-1)
0^57
"KRN",101,1664,0)
MPIX EXCPT MAIN MENU^MPI EXCEPTION MENU^^M^^^^^^^^
"KRN",101,1664,1,0)
^101.06^2^2^3010601^^^^
"KRN",101,1664,1,1,0)
This protocol serves as the main menu for the MPI Exception Handling
"KRN",101,1664,1,2,0)
Option [MPIX EXCEPTION HANDLING].
"KRN",101,1664,4)
40
"KRN",101,1664,10,0)
^101.01PA^6^6
"KRN",101,1664,10,1,0)
1659^SD^5^^^Sort by Exception Date
"KRN",101,1664,10,1,"^")
MPIX EXCPT DATE SORT
"KRN",101,1664,10,2,0)
1660^SS^10^^^Sort by Reporting Site
"KRN",101,1664,10,2,"^")
MPIX EXCPT SITE SORT
"KRN",101,1664,10,3,0)
1661^ST^15^^^Sort by Exception Type
"KRN",101,1664,10,3,"^")
MPIX EXCPT TYPE SORT
"KRN",101,1664,10,4,0)
1663^SE^3^^^Select Exception
"KRN",101,1664,10,4,"^")
MPIX EXCPT SELECT
"KRN",101,1664,10,5,0)
1665^SI^12^^^Sort by ICN
"KRN",101,1664,10,5,"^")
MPIX EXCPT ICN SORT
"KRN",101,1664,10,6,0)
1708^RL^40^^^Refresh Exception List
"KRN",101,1664,10,6,"^")
MPIX EXCPT REFRESH LIST
"KRN",101,1664,26)
D SHOW^VALM
"KRN",101,1664,28)
Select Action:
"KRN",101,1664,99)
59322,26408
"KRN",101,1665,-1)
0^56
"KRN",101,1665,0)
MPIX EXCPT ICN SORT^Sort by ICN^^A^^^^^^^^
"KRN",101,1665,1,0)
^^2^2^3010524^
"KRN",101,1665,1,1,0)
This protocol allows the user to sort exceptions by ICN in the MPI
"KRN",101,1665,1,2,0)
Exception Handling option [MPI EXCEPTION HANDLING].
"KRN",101,1665,20)
S MPISORT="SI" D SORT^MPIEXC01
"KRN",101,1665,99)
58820,52034
"KRN",101,1666,-1)
0^64
"KRN",101,1666,0)
MPIX EXCPT RESOLVE^Resolve Exception^^A^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1666,1,0)
^101.06^1^1^3010919^^^
"KRN",101,1666,1,1,0)
This protocol allows the user to change the status of an exception.
"KRN",101,1666,20)
D CS^MPIEXC02
"KRN",101,1666,99)
58820,52034
"KRN",101,1667,-1)
0^52
"KRN",101,1667,0)
MPIX EXCPT ACTION MENU^MPI EXCEPTION HANDLING ACTION MENU^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1667,1,0)
^^2^2^3010919^
"KRN",101,1667,1,1,0)
This protocol serves as the action menu for the MPI Exception Handling
"KRN",101,1667,1,2,0)
option [MPIX EXCEPTION HANDLING].
"KRN",101,1667,4)
40
"KRN",101,1667,10,0)
^101.01PA^4^4
"KRN",101,1667,10,1,0)
1666^RE^10^^^Resolve Exception
"KRN",101,1667,10,1,"^")
MPIX EXCPT RESOLVE
"KRN",101,1667,10,2,0)
1668^AC^5^^^Assign Caseworker
"KRN",101,1667,10,2,"^")
MPIX EXCPT ASSIGN CASEWORKER
"KRN",101,1667,10,3,0)
1669^PD^20^^^MPI Patient Data
"KRN",101,1667,10,3,"^")
MPIX EXCPT PDAT
"KRN",101,1667,10,4,0)
1670^NT^30^^^Add/Edit Notes
"KRN",101,1667,10,4,"^")
MPIX EXCPT NOTE
"KRN",101,1667,26)
D SHOW^VALM
"KRN",101,1667,28)
Select Action:
"KRN",101,1667,99)
58820,52034
"KRN",101,1668,-1)
0^53
"KRN",101,1668,0)
MPIX EXCPT ASSIGN CASEWORKER^Assign Caseworker^^A^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1668,1,0)
^^2^2^3010530^
"KRN",101,1668,1,1,0)
This protocol allows the user to assign/change the caseworker assigned to
"KRN",101,1668,1,2,0)
an exception.
"KRN",101,1668,20)
D ASSIGN^MPIEXC02
"KRN",101,1668,99)
58820,52034
"KRN",101,1669,-1)
0^59
"KRN",101,1669,0)
MPIX EXCPT PDAT^MPI Patient Data^^A^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1669,1,0)
^^2^2^3010530^
"KRN",101,1669,1,1,0)
This protocol allows the user to display detailed Master Patient Index
"KRN",101,1669,1,2,0)
(MPI) patient data.
"KRN",101,1669,20)
D PDAT^MPIEXC02
"KRN",101,1669,99)
58820,52034
"KRN",101,1670,-1)
0^58
"KRN",101,1670,0)
MPIX EXCPT NOTE^Add/Edit Notes^^A^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1670,1,0)
^^2^2^3010531^
"KRN",101,1670,1,1,0)
This protocol allows the user to add or edit notes associated with the
"KRN",101,1670,1,2,0)
exception.
"KRN",101,1670,20)
D NOTE^MPIEXC02
"KRN",101,1670,99)
58820,52034
"KRN",101,1671,-1)
0^65
"KRN",101,1671,0)
MPIX EXCPT RESOLVED LIST^List Resolved Exceptions^^A^^^^^^^^
"KRN",101,1671,1,0)
^101.06^2^2^3010601^^^
"KRN",101,1671,1,1,0)
This protocol allows the user to list resolved exceptions on the MPI
"KRN",101,1671,1,2,0)
Exception Handling option.
"KRN",101,1671,20)
S MPISORT="LR" D SORT^MPIEXC01
"KRN",101,1671,99)
58820,52035
"KRN",101,1672,-1)
0^66
"KRN",101,1672,0)
MPIX EXCPT RSEND^Request Remote Patient Data^^A^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1672,1,0)
^^2^2^3010919^
"KRN",101,1672,1,1,0)
This protocol allows the user to send a remote patient data query to
"KRN",101,1672,1,2,0)
treating facility sites.
"KRN",101,1672,20)
D RSEND^MPIEXC04
"KRN",101,1672,99)
59709,43252
"KRN",101,1673,-1)
0^61
"KRN",101,1673,0)
MPIX EXCPT RCHK^Check Remote Patient Data Query^^A^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1673,1,0)
^^2^2^3010919^
"KRN",101,1673,1,1,0)
This protocol allows the user to check the status of a remote patient data
"KRN",101,1673,1,2,0)
query.
"KRN",101,1673,20)
D RCHK^MPIEXC04
"KRN",101,1673,99)
58820,52035
"KRN",101,1674,-1)
0^62
"KRN",101,1674,0)
MPIX EXCPT RDISP^Display Patient Data Query^^A^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1674,1,0)
^101.06^1^1^3030808^^
"KRN",101,1674,1,1,0)
This protocol allows the user to display a patient data query.
"KRN",101,1674,20)
D RDISP^MPIEXC04
"KRN",101,1674,99)
59709,43252
"KRN",101,1675,-1)
0^60
"KRN",101,1675,0)
MPIX EXCPT PDAT MENU^MPI PATIENT DATA ACTION MENU^^M^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1675,1,0)
^101.06^2^2^3030808^^^^
"KRN",101,1675,1,1,0)
This protocol serves as the action menu for the MPI Exception Handling
"KRN",101,1675,1,2,0)
Patient Data Query actions.
"KRN",101,1675,4)
40
"KRN",101,1675,10,0)
^101.01PA^3^2
"KRN",101,1675,10,1,0)
1672^REQ^5^^^Request Remote Patient Data
"KRN",101,1675,10,1,"^")
MPIX EXCPT RSEND
"KRN",101,1675,10,3,0)
1674^DSP^15^^^
"KRN",101,1675,10,3,"^")
MPIX EXCPT RDISP
"KRN",101,1675,26)
D SHOW^VALM
"KRN",101,1675,28)
Select Action:
"KRN",101,1675,99)
59709,43252
"KRN",101,1684,-1)
0^23
"KRN",101,1684,0)
MPI ADT-A31 CLIENT^MPI'S A31^^S^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1684,99)
59744,25949
"KRN",101,1684,770)
^MPIF TRIGGER^^A31^^^^^^2.3^ACK
"KRN",101,1684,771)
D ^MPIA31
"KRN",101,1684,773)
1^1
"KRN",101,1684,774)
Q
"KRN",101,1685,-1)
0^24
"KRN",101,1685,0)
MPI ADT-A31 SERVER^^^E^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1685,770)
MPIF TRIGGER^^ADT^A31^^^^AL^AL^2.4^
"KRN",101,1685,772)
D RESP^MPIA31B
"KRN",101,1685,773)
^
"KRN",101,1685,775,0)
^101.0775PA^1^1
"KRN",101,1685,775,1,0)
1684
"KRN",101,1685,775,1,"^")
MPI ADT-A31 CLIENT
"KRN",101,1686,-1)
0^21
"KRN",101,1686,0)
MPI ADT-A28 CLIENT^MPI'S A28^^S^^^^^^^^
"KRN",101,1686,99)
59107,54082
"KRN",101,1686,770)
^MPIF TRIGGER^^A28^^^^^^^ACK
"KRN",101,1686,771)
D PROC^MPIA28
"KRN",101,1686,773)
1^1
"KRN",101,1687,-1)
0^22
"KRN",101,1687,0)
MPI ADT-A28 SERVER^MPI'S A28 SERVER^^E^^^^^^^^
"KRN",101,1687,99)
59107,54082
"KRN",101,1687,770)
MPIF TRIGGER^^ADT^A28^^D^^AL^AL^2.4^
"KRN",101,1687,775,0)
^101.0775PA^1^1
"KRN",101,1687,775,1,0)
1686
"KRN",101,1687,775,1,"^")
MPI ADT-A28 CLIENT
"KRN",101,1688,-1)
0^19
"KRN",101,1688,0)
MPI ADT-A24 CLIENT^MPI'S A24^^S^^^^^^^^
"KRN",101,1688,99)
59107,54082
"KRN",101,1688,770)
^MPIF TRIGGER^^A24^^^^^^^ACK
"KRN",101,1688,771)
D A24^MPIA24P
"KRN",101,1688,773)
1^1
"KRN",101,1688,774)
Q
"KRN",101,1689,-1)
0^20
"KRN",101,1689,0)
MPI ADT-A24 SERVER^MPI'S A24 SERVER^^E^^^^^^^^
"KRN",101,1689,99)
59107,54082
"KRN",101,1689,770)
MPIF TRIGGER^^ADT^A24^^^^AL^AL^2.4^
"KRN",101,1689,772)
D RES^MPIA24
"KRN",101,1689,775,0)
^101.0775PA^1^1
"KRN",101,1689,775,1,0)
1688
"KRN",101,1689,775,1,"^")
MPI ADT-A24 CLIENT
"KRN",101,1690,-1)
0^27
"KRN",101,1690,0)
MPI ADT-A40 CLIENT^MPI'S A40^^S^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1690,99)
59107,54082
"KRN",101,1690,770)
^MPIF TRIGGER^^A40^^^^^^^ACK
"KRN",101,1690,771)
D PROC^MPIA40
"KRN",101,1690,773)
1^1
"KRN",101,1691,-1)
0^28
"KRN",101,1691,0)
MPI ADT-A40 SERVER^MPI'S A40 SERVER^^E^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1691,99)
59107,54082
"KRN",101,1691,770)
MPIF TRIGGER^^ADT^A40^^D^^AL^AL^2.4^
"KRN",101,1691,775,0)
^101.0775PA^1^1
"KRN",101,1691,775,1,0)
1690
"KRN",101,1691,775,1,"^")
MPI ADT-A40 CLIENT
"KRN",101,1692,-1)
0^42
"KRN",101,1692,0)
MPI MFN-M05 SERVER^^^E^^^^^^^^
"KRN",101,1692,1,0)
^^2^2^3021030^
"KRN",101,1692,1,1,0)
This server protocol is used to broadcast updates for patient date last 
"KRN",101,1692,1,2,0)
treated and/or event reason.
"KRN",101,1692,770)
VAFC TRIGGER^^MFN^M05^^^^AL^AL^2.4^
"KRN",101,1692,772)
D RSP^MPITFOUT
"KRN",101,1692,775,0)
^101.0775PA^1^1
"KRN",101,1692,775,1,0)
1693
"KRN",101,1692,775,1,"^")
MPI MFN-M05 CLIENT
"KRN",101,1693,-1)
0^41
"KRN",101,1693,0)
MPI MFN-M05 CLIENT^^^S^^^^^^^^
"KRN",101,1693,1,0)
^^2^2^3021030^
"KRN",101,1693,1,1,0)
This client protocol is used to broadcast updates for patient date last 
"KRN",101,1693,1,2,0)
treated and/or event reason.
"KRN",101,1693,770)
^VAFC TRIGGER^^M05^^^^^^^MFK
"KRN",101,1693,771)
D IN^MPITFOUT
"KRN",101,1693,773)
1^1
"KRN",101,1693,774)
D ROUTE^MPITFOUT
"KRN",101,1694,-1)
0^12
"KRN",101,1694,0)
MPI ADT-A01 SERVER^^^E^^^^^^^^
"KRN",101,1694,770)
RG ADT^^ADT^A01^^^^AL^AL^2.4^
"KRN",101,1694,772)
Q
"KRN",101,1694,775,0)
^101.0775PA^1^1
"KRN",101,1694,775,1,0)
1695
"KRN",101,1694,775,1,"^")
MPI ADT-A01 CLIENT
"KRN",101,1695,-1)
0^11
"KRN",101,1695,0)
MPI ADT-A01 CLIENT^^^S^^^^^^^^
"KRN",101,1695,770)
^RG ADT^^A01^^^^^^^ACK
"KRN",101,1695,771)
D PROC^MPIA08
"KRN",101,1695,773)
1^1
"KRN",101,1695,774)
Q
"KRN",101,1696,-1)
0^14
"KRN",101,1696,0)
MPI ADT-A03 SERVER^^^E^^^^^^^^
"KRN",101,1696,770)
RG ADT^^ADT^A03^^^^AL^AL^2.4^
"KRN",101,1696,772)
Q
"KRN",101,1696,775,0)
^101.0775PA^1^1
"KRN",101,1696,775,1,0)
1697
"KRN",101,1696,775,1,"^")
MPI ADT-A03 CLIENT
"KRN",101,1697,-1)
0^13
"KRN",101,1697,0)
MPI ADT-A03 CLIENT^^^S^^^^^^^^
"KRN",101,1697,770)
^RG ADT^^A03^^^^^^^ACK
"KRN",101,1697,771)
D PROC^MPIA08
"KRN",101,1697,773)
1^1
"KRN",101,1697,774)
Q
"KRN",101,1698,-1)
0^18
"KRN",101,1698,0)
MPI ADT-A08 SERVER^^^E^^^^^^^^
"KRN",101,1698,770)
RG ADT^^ADT^A08^^^^AL^AL^2.4^
"KRN",101,1698,772)
D RESP^MPIA08
"KRN",101,1698,775,0)
^101.0775PA^1^1
"KRN",101,1698,775,1,0)
1699
"KRN",101,1698,775,1,"^")
MPI ADT-A08 CLIENT
"KRN",101,1699,-1)
0^17
"KRN",101,1699,0)
MPI ADT-A08 CLIENT^^^S^^^^^^^^
"KRN",101,1699,770)
^RG ADT^^A08^^^^^^^ACK
"KRN",101,1699,771)
D PROC^MPIA08
"KRN",101,1699,773)
1^1
"KRN",101,1699,774)
D ROUTE^MPIA08
"KRN",101,1700,-1)
0^16
"KRN",101,1700,0)
MPI ADT-A04 SERVER^^^E^^^^^^^^
"KRN",101,1700,770)
RG ADT^^ADT^A04^^^^AL^AL^2.4^
"KRN",101,1700,772)
D RESP^MPIA08
"KRN",101,1700,775,0)
^101.0775PA^1^1
"KRN",101,1700,775,1,0)
1701
"KRN",101,1700,775,1,"^")
MPI ADT-A04 CLIENT
"KRN",101,1701,-1)
0^15
"KRN",101,1701,0)
MPI ADT-A04 CLIENT^^^S^^^^^^^^
"KRN",101,1701,770)
^RG ADT^^A04^^^^^^^ACK
"KRN",101,1701,771)
D PROC^MPIA08
"KRN",101,1701,773)
1^1
"KRN",101,1701,774)
D ROUTE^MPIA08
"KRN",101,1702,-1)
0^44
"KRN",101,1702,0)
MPI QRY-A19 SERVER^^^E^^^^^^^^
"KRN",101,1702,770)
VAFC TRIGGER^^QRY^A19^^^^AL^AL^2.4^
"KRN",101,1702,772)
D RESP^MPIA19
"KRN",101,1702,775,0)
^101.0775PA^1^1
"KRN",101,1702,775,1,0)
1703
"KRN",101,1702,775,1,"^")
MPI QRY-A19 CLIENT
"KRN",101,1703,-1)
0^43
"KRN",101,1703,0)
MPI QRY-A19 CLIENT^^^S^^^^^^^^
"KRN",101,1703,770)
^VAFC TRIGGER^^A19^^^^^^^ADR
"KRN",101,1703,771)
Q
"KRN",101,1703,773)
1^1
"KRN",101,1703,774)
D ROUTE^MPIA19
"KRN",101,1704,-1)
0^26
"KRN",101,1704,0)
MPI ADT-A37 SERVER^^^E^^^^^^^^
"KRN",101,1704,1,0)
^^3^3^3030123^
"KRN",101,1704,1,1,0)
This HL7 message server protocol is used to generate a ADT-A37 Unlink 
"KRN",101,1704,1,2,0)
Person Information message.  This message will essentially remove a site 
"KRN",101,1704,1,3,0)
from an ICN treating facility list.
"KRN",101,1704,770)
MPIF TRIGGER^^ADT^A37^^^^AL^AL^2.4^
"KRN",101,1704,772)
D RESP^MPIA37
"KRN",101,1704,775,0)
^101.0775PA^1^1
"KRN",101,1704,775,1,0)
1705
"KRN",101,1704,775,1,"^")
MPI ADT-A37 CLIENT
"KRN",101,1705,-1)
0^25
"KRN",101,1705,0)
MPI ADT-A37 CLIENT^^^S^^^^^^^^
"KRN",101,1705,770)
^MPIF TRIGGER^^A37^^^^^^^ACK
"KRN",101,1705,771)
D IN^MPIA37
"KRN",101,1705,773)
1^1
"KRN",101,1705,774)
D ROUTE^MPIA37
"KRN",101,1706,-1)
0^30
"KRN",101,1706,0)
MPI ADT-A43 SERVER^^^E^^^^^^^^
"KRN",101,1706,770)
MPIF TRIGGER^^ADT^A43^^^^AL^AL^2.4^
"KRN",101,1706,772)
D RESP^MPIA43
"KRN",101,1706,775,0)
^101.0775PA^1^1
"KRN",101,1706,775,1,0)
1707
"KRN",101,1706,775,1,"^")
MPI ADT-A43 CLIENT
"KRN",101,1707,-1)
0^29
"KRN",101,1707,0)
MPI ADT-A43 CLIENT^^^S^^^^^^^^
"KRN",101,1707,770)
^MPIF TRIGGER^^A43^^^^^^^ACK
"KRN",101,1707,771)
D IN^MPIA43
"KRN",101,1707,773)
1^1
"KRN",101,1707,774)
D ROUTE^MPIA43
"KRN",101,1708,-1)
0^63
"KRN",101,1708,0)
MPIX EXCPT REFRESH LIST^Refresh Exception List^^A^^^^^^^^MASTER PATIENT VISTA V1.0
"KRN",101,1708,1,0)
^^2^2^3030602^
"KRN",101,1708,1,1,0)
This action will allow the user to refresh the list of exceptions, 
"KRN",101,1708,1,2,0)
including running EPT.
"KRN",101,1708,20)
D REFSH^MPIEXC01
"KRN",101,1708,99)
59322,26192
"KRN",101,1709,-1)
0^31
"KRN",101,1709,0)
MPI CMOR APP/DIS^MPI CMOR APP/DIS^^S^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1709,1,0)
^^2^2^3030718^
"KRN",101,1709,1,1,0)
Protocol for the approve/disapprove msg for CMOR Change Request to update 
"KRN",101,1709,1,2,0)
MPIF CMOR REQUEST file at the sites
"KRN",101,1709,5)

"KRN",101,1709,99)
59400,27161
"KRN",101,1709,770)
^MPIF CMOR CHNG^ADT^A31^^^^NE^NE^2.3^
"KRN",101,1709,771)
D IN^MPIRESS
"KRN",101,1709,773)
0^0^0^0
"KRN",101,1709,774)
Q
"KRN",101,1710,-1)
0^32
"KRN",101,1710,0)
MPI CMOR APPROVE/DISAPPROVE^MPI CMOR APPROVE/DISAPPROVE^^E^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1710,1,0)
^^1^1^3030718^
"KRN",101,1710,1,1,0)
Updating Request to change CMOR to approved or not approved.  
"KRN",101,1710,99)
59400,27161
"KRN",101,1710,770)
MPIF CMOR CHNG^^ADT^A31^^^^AL^NE^2.3^
"KRN",101,1710,772)
Q
"KRN",101,1710,775,0)
^101.0775PA^1^1
"KRN",101,1710,775,1,0)
1709
"KRN",101,1710,775,1,"^")
MPI CMOR APP/DIS
"KRN",101,1711,-1)
0^33
"KRN",101,1711,0)
MPI CMOR REQUEST^MPI CMOR REQUEST^^E^^^^^^^^
"KRN",101,1711,99)
59400,27161
"KRN",101,1711,770)
RG CIRN^^ADT^A31^^^^AL^NE^2.3^
"KRN",101,1711,775,0)
^101.0775PA^1^1
"KRN",101,1711,775,1,0)
1712
"KRN",101,1711,775,1,"^")
MPI CMOR RESPONSE
"KRN",101,1712,-1)
0^34
"KRN",101,1712,0)
MPI CMOR RESPONSE^MPI CMOR RESPONSE^^S^^^^^^^^
"KRN",101,1712,99)
59400,27161
"KRN",101,1712,770)
^RG CIRN^ADT^A31^^^^NE^NE^2.3^
"KRN",101,1712,771)
D IN2^MPIRESS
"KRN",101,1712,773)
0^0^0^0
"KRN",101,1712,774)
Q
"KRN",101,1737,-1)
0^71
"KRN",101,1737,0)
MPI RSP-K22 CLIENT^MPI RSP-K22 CLIENT^^S^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1737,1,0)
^^1^1^3041214^
"KRN",101,1737,1,1,0)
RSP-K22 Client - response to QBP-Q22 messaginig.
"KRN",101,1737,99)
60164,75507
"KRN",101,1737,770)
^MPI^^K22^^^^AL^AL^2.4^RSP
"KRN",101,1737,771)
D IN^MPIQ22
"KRN",101,1737,773)
1^1
"KRN",101,1738,-1)
0^70
"KRN",101,1738,0)
MPI QBP-Q22 SERVER^MPI QBP SERVER^^E^^^^^^^^MASTER PATIENT INDEX AUSTIN
"KRN",101,1738,1,0)
^^1^1^3041214^
"KRN",101,1738,1,1,0)
QBP-Q22 query messaging server.
"KRN",101,1738,99)
60164,75507
"KRN",101,1738,770)
MPI^^QBP^Q22^^^^AL^AL^2.4^
"KRN",101,1738,772)

"KRN",101,1738,775,0)
^101.0775PA^1^1
"KRN",101,1738,775,1,0)
1737
"KRN",101,1738,775,1,"^")
MPI RSP-K22 CLIENT
"KRN",409.61,18,-1)
0^5
"KRN",409.61,18,0)
MPIX EXCPT SUMMARY^1^^80^5^18^1^1^^MPIX EXCPT MAIN MENU^MPI EXCEPTION HANDLING^1^^1
"KRN",409.61,18,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,18,"ARRAY")
 ^TMP("MPIEXC",$J)
"KRN",409.61,18,"COL",0)
^409.621^5^5
"KRN",409.61,18,"COL",1,0)
Exception Type^6^25^Exception Type^H^0
"KRN",409.61,18,"COL",2,0)
Rec'd From^32^10^Rec'd From^H^0
"KRN",409.61,18,"COL",3,0)
Dt Rec'd^43^8^Dt Rec'd^H^0
"KRN",409.61,18,"COL",4,0)
ICN^54^10^ICN^H^0
"KRN",409.61,18,"COL",5,0)
Case Worker^66^12^Case Worker^H^0
"KRN",409.61,18,"COL","AIDENT",0,1)

"KRN",409.61,18,"COL","AIDENT",0,2)

"KRN",409.61,18,"COL","AIDENT",0,3)

"KRN",409.61,18,"COL","AIDENT",0,4)

"KRN",409.61,18,"COL","AIDENT",0,5)

"KRN",409.61,18,"COL","B","Case Worker",5)

"KRN",409.61,18,"COL","B","Dt Rec'd",3)

"KRN",409.61,18,"COL","B","Exception Type",1)

"KRN",409.61,18,"COL","B","ICN",4)

"KRN",409.61,18,"COL","B","Rec'd From",2)

"KRN",409.61,18,"FNL")
D EXIT^MPIEXC01
"KRN",409.61,18,"HDR")
D HDR^MPIEXC01
"KRN",409.61,18,"HLP")
D HELP^MPIEXC01
"KRN",409.61,18,"INIT")
D INIT^MPIEXC01
"KRN",409.61,19,-1)
0^1
"KRN",409.61,19,0)
MPIX EXCPT ACTION^1^^80^5^18^1^1^^MPIX EXCPT ACTION MENU^MPI EXCEPTION HANDLING ACTIONS^1^^1
"KRN",409.61,19,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,19,"ARRAY")
 ^TMP("MPIEXC2",$J)
"KRN",409.61,19,"COL",0)
^409.621^1^1
"KRN",409.61,19,"COL",1,0)
EXCEPTION^2^70^Exception Data^H^0
"KRN",409.61,19,"COL","AIDENT",0,1)

"KRN",409.61,19,"COL","B","EXCEPTION",1)

"KRN",409.61,19,"FNL")
D EXIT^MPIEXC02
"KRN",409.61,19,"HDR")
D HDR^MPIEXC02
"KRN",409.61,19,"HLP")
D HELP^MPIEXC02
"KRN",409.61,19,"INIT")
D INIT^MPIEXC02
"KRN",409.61,20,-1)
0^2
"KRN",409.61,20,0)
MPIX EXCPT PDAT^1^^80^5^18^1^1^^MPIX EXCPT PDAT MENU^MPI PATIENT DATA ACTIONS^1^^1
"KRN",409.61,20,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,20,"ARRAY")
 ^TMP("MPIEXC4",$J)
"KRN",409.61,20,"COL",0)
^409.621^1^1
"KRN",409.61,20,"COL",1,0)
EXCEPTION^2^70^Patient Data^H^0
"KRN",409.61,20,"COL","AIDENT",0,1)

"KRN",409.61,20,"COL","B","EXCEPTION",1)

"KRN",409.61,20,"FNL")
D EXIT^MPIEXC04
"KRN",409.61,20,"HDR")
D HDR^MPIEXC04
"KRN",409.61,20,"HLP")
D HELP^MPIEXC04
"KRN",409.61,20,"INIT")
D INIT^MPIEXC04
"KRN",409.61,21,-1)
0^4
"KRN",409.61,21,0)
MPIX EXCPT RPDAT^1^^80^5^18^1^1^^^MPI REMOTE PATIENT DATA QUERY^1^^1
"KRN",409.61,21,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,21,"ARRAY")
 ^TMP("MPIEXC5",$J)
"KRN",409.61,21,"COL",0)
^409.621^1^1
"KRN",409.61,21,"COL",1,0)
EXCEPTION^2^70^REMOTE PATIENT DATA^H^0
"KRN",409.61,21,"COL","AIDENT",0,1)

"KRN",409.61,21,"COL","B","EXCEPTION",1)

"KRN",409.61,21,"FNL")
D EXIT^MPIEXC05
"KRN",409.61,21,"HDR")
D HDR^MPIEXC05
"KRN",409.61,21,"HLP")
D HELP^MPIEXC05
"KRN",409.61,21,"INIT")
D INIT^MPIEXC05
"KRN",409.61,22,-1)
0^3
"KRN",409.61,22,0)
MPIX EXCPT PEXT^1^^80^5^18^1^1^^^SITE DATA^1^^1
"KRN",409.61,22,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,22,"ARRAY")
 ^TMP("MPIEXC6",$J)
"KRN",409.61,22,"COL",0)
^409.621^1^1
"KRN",409.61,22,"COL",1,0)
EXCEPTION^2^78^Patient Data^H^0
"KRN",409.61,22,"COL","AIDENT",0,1)

"KRN",409.61,22,"COL","B","EXCEPTION",1)

"KRN",409.61,22,"FNL")
D EXIT^MPIEXC06
"KRN",409.61,22,"HDR")
D HDR^MPIEXC06
"KRN",409.61,22,"HLP")
D HELP^MPIEXC06
"KRN",409.61,22,"INIT")
D INIT^MPIEXC06
"KRN",771,7,-1)
0^6
"KRN",771,7,0)
MPIF MPI^a^MPI^MPI^^^USA
"KRN",771,7,"EC")

"KRN",771,7,"FS")

"KRN",771,9,-1)
0^8
"KRN",771,9,0)
MPIF-STARTUP^a^MPI^
"KRN",771,9,"EC")
^~\&
"KRN",771,9,"FS")
|
"KRN",771,9,"MSG",0)
^771.06P^1^1
"KRN",771,9,"MSG",1,0)
PRA
"KRN",771,9,"MSG",1,"R")
ADDPAT^MPIRG2
"KRN",771,9,"SEG",0)
^771.05P^1^1
"KRN",771,12,-1)
0^3
"KRN",771,12,0)
MPIF A30 SERVER^a^MPI^^^^US
"KRN",771,13,-1)
0^2
"KRN",771,13,0)
MPIF A29 SERVER^a^MPI
"KRN",771,14,-1)
0^5
"KRN",771,14,0)
MPIF CMOR RSLT^a^MPI
"KRN",771,28,-1)
0^7
"KRN",771,28,0)
MPIF TRIGGER^a
"KRN",771,31,-1)
0^4
"KRN",771,31,0)
MPIF CMOR CHNG^a^662
"KRN",771,42,-1)
0^1
"KRN",771,42,0)
MPI^a^^^^^USA
"KRN",870,18,-1)
0^2
"KRN",870,18,0)
MPI TCP^MPI^TCP^^^^DOMAIN.EXT^^^^^^^^^^^^^^10
"KRN",870,18,200)
^^^^5
"KRN",870,18,400)
152.125.191.142^5000^M^^120^
"KRN",870,19,-1)
0^1
"KRN",870,19,0)
MPI DIRECT^^TCP^^^^MPIDC-DOMAIN.EXT^^^^^^^^^^^^^^
"KRN",870,19,400)
152.125.191.142^5500^M^^^
"KRN",8994,34,-1)
0^11
"KRN",8994,34,0)
MPIF SSN DUPS^TOSITE^MPIFDUPS^1^S^^^^1
"KRN",8994,34,2,0)
^8994.02A^1^1
"KRN",8994,34,2,1,0)
ARRAY^2^100^1^2
"KRN",8994,34,2,"B","ARRAY",1)

"KRN",8994,34,2,"PARAMSEQ",2,1)

"KRN",8994,35,-1)
0^5
"KRN",8994,35,0)
MPIF ICN STATS^ICNSTAT^MPIFRPC^2^S^^^^1
"KRN",8994,35,1,0)
^8994.01^2^2^3011015^^^^
"KRN",8994,35,1,1,0)
 RPC to return ICN, Exceptions pending, CMOR, CMOR History, ICN History 
"KRN",8994,35,1,2,0)
 for any given ICN
"KRN",8994,35,2,0)
^8994.02A^2^2
"KRN",8994,35,2,1,0)
ICN^1^16^0^2
"KRN",8994,35,2,2,0)
SSN^1^9^0^3
"KRN",8994,35,2,"B","ICN",1)

"KRN",8994,35,2,"B","SSN",2)

"KRN",8994,35,2,"PARAMSEQ",2,1)

"KRN",8994,35,2,"PARAMSEQ",3,2)

"KRN",8994,35,3,0)
^8994.03^10^10^3011015^^^
"KRN",8994,35,3,1,0)
Array returned:
"KRN",8994,35,3,2,0)
  
"KRN",8994,35,3,3,0)
 RETURN(1) = Current CMOR - station number
"KRN",8994,35,3,4,0)
 RETURN(2) = CMOR history - list of previous CMOR station numbers 
"KRN",8994,35,3,5,0)
sperated by ^s - contents of the CMOR History multiple
"KRN",8994,35,3,6,0)
 RETURN(3) = Current ICN - complete ICN including checkdigits
"KRN",8994,35,3,7,0)
 RETURN(4) = ICN History - list of previous ICN values (no checkdigits) 
"KRN",8994,35,3,8,0)
seperated by ^s - contents of the ICN History multiple
"KRN",8994,35,3,9,0)
 
"KRN",8994,35,3,10,0)
RETURN("EXCEPTIONS PENDING") = 
"KRN",8994,36,-1)
0^4
"KRN",8994,36,0)
MPIF EXT PDAT REMOTE^PATINFO^MPIPDAT^2^^^^^1
"KRN",8994,36,2,0)
^8994.02A^4^4
"KRN",8994,36,2,1,0)
ICN^1^16^0^2
"KRN",8994,36,2,2,0)
SSN^1^9^0^3
"KRN",8994,36,2,3,0)
RPC^1^1^0^4
"KRN",8994,36,2,4,0)
EXIST^1^1^0^5
"KRN",8994,36,2,4,1,0)
^^4^4^3011116^
"KRN",8994,36,2,4,1,1,0)
If there is no value or 0 is passed, then a new request for data should 
"KRN",8994,36,2,4,1,2,0)
be made.  If there is a 1 passed, then if there is an existing request in 
"KRN",8994,36,2,4,1,3,0)
the ^XTMP("MPIF EXT PDAT",ICN/SSN,SITE) global, then that request should 
"KRN",8994,36,2,4,1,4,0)
be used to return the data -- request had already been made.
"KRN",8994,36,2,"B","EXIST",4)

"KRN",8994,36,2,"B","ICN",1)

"KRN",8994,36,2,"B","RPC",3)

"KRN",8994,36,2,"B","SSN",2)

"KRN",8994,36,2,"PARAMSEQ",2,1)

"KRN",8994,36,2,"PARAMSEQ",3,2)

"KRN",8994,36,2,"PARAMSEQ",4,3)

"KRN",8994,36,2,"PARAMSEQ",5,4)

"KRN",8994,37,-1)
0^6
"KRN",8994,37,0)
MPIF INACTIVATE^INACT^MPIFRPC^1^^^^^1
"KRN",8994,37,1,0)
^8994.01^2^2^3020328^^
"KRN",8994,37,1,1,0)
This remote procedure call (RPC) allows the remote inactivation of a 
"KRN",8994,37,1,2,0)
patient from the MPI at a specific site.
"KRN",8994,37,2,0)
^8994.02A^1^1
"KRN",8994,37,2,1,0)
ICN^1^16^1^2
"KRN",8994,37,2,1,1,0)
^^1^1^3011015^
"KRN",8994,37,2,1,1,1,0)
ICN to be inactivated.
"KRN",8994,37,2,"B","ICN",1)

"KRN",8994,37,2,"PARAMSEQ",2,1)

"KRN",8994,37,3,0)
^8994.03^2^2^3011015^^
"KRN",8994,37,3,1,0)
1 for successful
"KRN",8994,37,3,2,0)
-1^error message
"KRN",8994,38,-1)
0^8
"KRN",8994,38,0)
MPIF REMOTE SPI^SPI^MPIFRPC2^2^^^^^1
"KRN",8994,38,1,0)
^^3^3^3020328^
"KRN",8994,38,1,1,0)
This remote procedure call (RPC) allows the remote sending of a specific 
"KRN",8994,38,1,2,0)
patient at a specific site to the MPI for ICN assignment.  The patient is 
"KRN",8994,38,1,3,0)
found based upon social security number.
"KRN",8994,38,2,0)
^8994.02A^2^2
"KRN",8994,38,2,1,0)
SSN^1^9^1^2
"KRN",8994,38,2,1,1,0)
^8994.021^2^2^3020215^^
"KRN",8994,38,2,1,1,1,0)
 SSN for the patient that is to be sent to the MPI for ICN assignment.  
"KRN",8994,38,2,1,1,2,0)
 Should there be more than one entry with that SSN, all will be sent.
"KRN",8994,38,2,2,0)
DFN^1^20^1^3
"KRN",8994,38,2,2,1,0)
^^1^1^3020215^
"KRN",8994,38,2,2,1,1,0)
DFN for the patient to be SPI'd.  Use DFN or SSN to find the patient.
"KRN",8994,38,2,"B","DFN",2)

"KRN",8994,38,2,"B","SSN",1)

"KRN",8994,38,2,"PARAMSEQ",2,1)

"KRN",8994,38,2,"PARAMSEQ",3,2)

"KRN",8994,38,3,0)
^8994.03^3^3^3020215^^
"KRN",8994,38,3,1,0)
 Result of SSN being sent to MPI.  If ICN found/created on the MPI that 
"KRN",8994,38,3,2,0)
 will be return.  An error message will be returned if there was a 
"KRN",8994,38,3,3,0)
 problem or a local ICN assigned.
"KRN",8994,39,-1)
0^2
"KRN",8994,39,0)
MPIF CHANGE CMOR^RCCMOR^MPIFRPC^1^^^^^1
"KRN",8994,39,1,0)
^^3^3^3020328^
"KRN",8994,39,1,1,0)
This remote procedure call (RPC) allows the changing/updating of the 
"KRN",8994,39,1,2,0)
COORDINATING MASTER OF RECORD (#991.03) field in the PATIENT (#2) file 
"KRN",8994,39,1,3,0)
for a specific patient. An A08 Update message can also be triggered.
"KRN",8994,39,2,0)
^8994.02A^4^4
"KRN",8994,39,2,1,0)
ICN^1^10^1^2
"KRN",8994,39,2,1,1,0)
^^1^1^3011105^
"KRN",8994,39,2,1,1,1,0)
ICN - not including the checksum
"KRN",8994,39,2,2,0)
SSN^1^9^0^4
"KRN",8994,39,2,2,1,0)
^^2^2^3011105^
"KRN",8994,39,2,2,1,1,0)
SSN of the patient whose CMOR is to be changed.  SSN will be used if ICN 
"KRN",8994,39,2,2,1,2,0)
can't be found due to missing AICN x-ref.
"KRN",8994,39,2,3,0)
CMOR^1^3^1^3
"KRN",8994,39,2,3,1,0)
^8994.021^1^1^3020312^^
"KRN",8994,39,2,3,1,1,0)
The station number of the site that is to become the CMOR
"KRN",8994,39,2,4,0)
A08^1^1^0^5
"KRN",8994,39,2,4,1,0)
^^2^2^3020312^
"KRN",8994,39,2,4,1,1,0)
This field will serve as a flag to note whether or not an A08 update 
"KRN",8994,39,2,4,1,2,0)
message should be triggered.
"KRN",8994,39,2,"B","A08",4)

"KRN",8994,39,2,"B","CMOR",3)

"KRN",8994,39,2,"B","ICN",1)

"KRN",8994,39,2,"B","SSN",2)

"KRN",8994,39,2,"PARAMSEQ",2,1)

"KRN",8994,39,2,"PARAMSEQ",3,3)

"KRN",8994,39,2,"PARAMSEQ",4,2)

"KRN",8994,39,2,"PARAMSEQ",5,4)

"KRN",8994,39,3,0)
^8994.03^2^2^3020312^^
"KRN",8994,39,3,1,0)
1 if successfully change the CMOR
"KRN",8994,39,3,2,0)
 -1^error message if unable to make the change
"KRN",8994,40,-1)
0^7
"KRN",8994,40,0)
MPIF REMOTE ICN UPDATE^UPDATE^MPIFRPC2^1^^^^^1
"KRN",8994,40,1,0)
^^5^5^3020328^
"KRN",8994,40,1,1,0)
This remote procedure call (RPC) allows the remote update of the 
"KRN",8994,40,1,2,0)
INTEGRATION CONTROL NUMBER (#991.01), ICN CHECKSUM (#991.02), and 
"KRN",8994,40,1,3,0)
COORDINATING MASTER OF RECORD (#991.03) fields in the PATIENT (#2) file 
"KRN",8994,40,1,4,0)
at a specified site. The patient is found based upon social security 
"KRN",8994,40,1,5,0)
number.
"KRN",8994,40,2,0)
^8994.02A^5^5
"KRN",8994,40,2,1,0)
SSN^1^9^1^2
"KRN",8994,40,2,1,1,0)
^^1^1^3011130^
"KRN",8994,40,2,1,1,1,0)
Social Security Number of the patient to be updated.
"KRN",8994,40,2,2,0)
ICN^1^16^1^3
"KRN",8994,40,2,2,1,0)
^^1^1^3011130^
"KRN",8994,40,2,2,1,1,0)
ICN - without the checksum to be updated in field 991.01
"KRN",8994,40,2,3,0)
CHECKSUM^1^6^1^4
"KRN",8994,40,2,3,1,0)
^^1^1^3011130^
"KRN",8994,40,2,3,1,1,0)
CHECKSUM for the patient to be stored in field 991.02
"KRN",8994,40,2,4,0)
CMOR^1^3^1^5
"KRN",8994,40,2,4,1,0)
^8994.021^1^1^3011130^^
"KRN",8994,40,2,4,1,1,0)
Station Number to be stored as the CMOR in field 991.03.
"KRN",8994,40,2,5,0)
A08^1^1^0^6
"KRN",8994,40,2,5,1,0)
^8994.021^1^1^3020215^^
"KRN",8994,40,2,5,1,1,0)
If an A08 message needs to be sent this flag should be set to 1.
"KRN",8994,40,2,"B","A08",5)

"KRN",8994,40,2,"B","CHECKSUM",3)

"KRN",8994,40,2,"B","CMOR",4)

"KRN",8994,40,2,"B","ICN",2)

"KRN",8994,40,2,"B","SSN",1)

"KRN",8994,40,2,"PARAMSEQ",2,1)

"KRN",8994,40,2,"PARAMSEQ",3,2)

"KRN",8994,40,2,"PARAMSEQ",4,3)

"KRN",8994,40,2,"PARAMSEQ",5,4)

"KRN",8994,40,2,"PARAMSEQ",6,5)

"KRN",8994,40,3,0)
^8994.03^2^2^3011130^^
"KRN",8994,40,3,1,0)
1 for successful update
"KRN",8994,40,3,2,0)
-1^error message if not successfully updated.
"KRN",8994,46,-1)
0^1
"KRN",8994,46,0)
MPIF ACK CHECK^EN^MPIFACHK^1^^^^^1
"KRN",8994,46,1,0)
^8994.01^1^1^3020715^^
"KRN",8994,46,1,1,0)
Checking for application level ACKs that have not been returned in X days.
"KRN",8994,46,2,0)
^8994.02A^1^1
"KRN",8994,46,2,1,0)
BEFORE^1^7^1^2
"KRN",8994,46,2,1,1,0)
^^1^1^3020715^
"KRN",8994,46,2,1,1,1,0)
The FM date that the messages being checked should happen BEFORE.
"KRN",8994,46,2,"B","BEFORE",1)

"KRN",8994,46,2,"PARAMSEQ",2,1)

"KRN",8994,46,3,0)
^^3^3^3020715^
"KRN",8994,46,3,1,0)
 
"KRN",8994,46,3,2,0)
 0 if no messages needed to be regenerated.
"KRN",8994,46,3,3,0)
 1 if any messages were regenerated.
"KRN",8994,48,-1)
0^10
"KRN",8994,48,0)
MPIF SEEDING UPDATE^SET^MPIFSEED^1^^^^^1
"KRN",8994,48,1,0)
^8994.01^1^1^3030205^^
"KRN",8994,48,1,1,0)
Setting number of entries to be sent during seeding.
"KRN",8994,48,2,0)
^8994.02A^1^1
"KRN",8994,48,2,1,0)
NUMBER^1^10^1^2
"KRN",8994,48,2,1,1,0)
^8994.021^1^1^3030205^^
"KRN",8994,48,2,1,1,1,0)
Number of entries to be sent during each running of the seeding process.
"KRN",8994,48,2,"B","NUMBER",1)

"KRN",8994,48,2,"PARAMSEQ",2,1)

"KRN",8994,48,3,0)
^8994.03^2^2^3030205^^
"KRN",8994,48,3,1,0)
 Successful - 1
"KRN",8994,48,3,2,0)
 Unsuccessful - 0
"KRN",8994,49,-1)
0^9
"KRN",8994,49,0)
MPIF SEEDING STATS^STATS^MPIFSEED^2^^^^^1
"KRN",8994,49,1,0)
^^2^2^3030325^
"KRN",8994,49,1,1,0)
This RPC will return the stats on the seeding process, including when the 
"KRN",8994,49,1,2,0)
 next seeding job is scheduled to run
"KRN",8994,49,3,0)
^^3^3^3030325^
"KRN",8994,49,3,1,0)
RETURN(1)= file 984.8 zero node
"KRN",8994,49,3,2,0)
 RETURN(2)= when MPIF SEEDING TASK is scheduled to run next
"KRN",8994,49,3,3,0)
 RETURN(3)= count of how many ICNs are remaining to be seeded.
"KRN",8994,64,-1)
0^3
"KRN",8994,64,0)
MPIF CMOR PUSH REMOTE^EN^MPIFRCMP^1^S^^^^1
"KRN",8994,64,1,0)
^^2^2^3040624^
"KRN",8994,64,1,1,0)
This remote procedure call (RPC) allows the DQ team to remotely create a 
"KRN",8994,64,1,2,0)
change of CMOR push.
"KRN",8994,64,2,0)
^8994.02A^2^2
"KRN",8994,64,2,1,0)
ICN^1^10^1^2
"KRN",8994,64,2,1,1,0)
^^1^1^3040624^
"KRN",8994,64,2,1,1,1,0)
ICN - not including the checksum
"KRN",8994,64,2,2,0)
NCMOR^1^3^1^3
"KRN",8994,64,2,2,1,0)
^^1^1^3040624^
"KRN",8994,64,2,2,1,1,0)
The station number of the site that is to become the CMOR.
"KRN",8994,64,2,"B","ICN",1)

"KRN",8994,64,2,"B","NCMOR",2)

"KRN",8994,64,2,"PARAMSEQ",2,1)

"KRN",8994,64,2,"PARAMSEQ",3,2)

"KRN",8994,64,3,0)
^^2^2^3040624^
"KRN",8994,64,3,1,0)
 1 if successfully requested PUSH of CMOR to site NCMOR.
"KRN",8994,64,3,2,0)
 -1^error messag if unable to make the request.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",991.11,0,4,6)
MAIL GROUP^P3.8'^XMB(3.8,^0;4^Q
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
134
"RTN","MPIA08")
0^1^B49361747
"RTN","MPIA08",1,0)
MPIA08 ;BIOFO/DLR - Processing routine for ADT/A08 Patient Update ;6/13/02
"RTN","MPIA08",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,21,27,29**;30 Apr 99
"RTN","MPIA08",3,0)
 ;
"RTN","MPIA08",4,0)
RESP ;process the ADT-A08 response ACK-A08
"RTN","MPIA08",5,0)
 D HLLOG^MPIMHL("A08O",$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA08",6,0)
 N ICN,MPIERR
"RTN","MPIA08",7,0)
 N SITE,MPIID,MSGID,DFN,SSN,MPII,MSG,MPI,SG,COMP,SUBCOMP,REP,MPIEVTR,MPIDLT,CMOR,NAME,SURNAME,PREFIX,SUFFIX,CLAIMN,SEX,POBCITY,POBSTATE,FIRST,MIDDLE,MMN,MPIDOB,MPIDOD,MPIJ,MPII,MPISSITE,RESULT,POB,ARRAY,HLA,MPIDLU
"RTN","MPIA08",8,0)
 D INIT
"RTN","MPIA08",9,0)
 Q
"RTN","MPIA08",10,0)
ROUTE ;route the ADT-A08 message to all TF's and supplied sites
"RTN","MPIA08",11,0)
 N AF,CNT,MPIFAC,MPISN,MPIHL,MPILK,RESLT,ERROR,IEN,MPITF
"RTN","MPIA08",12,0)
 K HLL("LINKS")
"RTN","MPIA08",13,0)
 N MPICMOR S MPICMOR=$P($G(^MPIVET(ICN,1)),"^",2) ;Identify the CMOR site
"RTN","MPIA08",14,0)
 S MPICMOR=$$STA^XUAF4(MPICMOR) ;convert IEN to Station#
"RTN","MPIA08",15,0)
 Q:MPICMOR=""
"RTN","MPIA08",16,0)
 K ^XTMP("MPI"_HL("ETN")_"%"_ICN)
"RTN","MPIA08",17,0)
 ;  if site is the CMOR rebroadcast out to all shared facilities
"RTN","MPIA08",18,0)
 I MPICMOR=MPISSITE D
"RTN","MPIA08",19,0)
 .S CNT=1,MPIFAC=0 F  S MPIFAC=$O(^MPI(985.5,"AM",ICN,MPIFAC)) Q:'MPIFAC  D
"RTN","MPIA08",20,0)
 .. ;log the generation into an XTMP global
"RTN","MPIA08",21,0)
 .. ;set the HLL("LINKS" array for this site
"RTN","MPIA08",22,0)
 .. S MPISN=$$STA^XUAF4(MPIFAC)
"RTN","MPIA08",23,0)
 .. Q:MPISN=MPISSITE
"RTN","MPIA08",24,0)
 .. ; Check to see if pt at tf site is "test" pt - if so, don't broadcast and log exception
"RTN","MPIA08",25,0)
 .. S IEN=$O(^MPI(985.5,"AM",ICN,MPIFAC,""))
"RTN","MPIA08",26,0)
 .. D GETS^DIQ(985.5,IEN_",","11;23","I","MPITF")
"RTN","MPIA08",27,0)
 .. I $E($G(MPITF(985.5,IEN_",",11,"I")),1,2)="ZZ" S ERROR="ZZ'd patient in TF list for site "_MPISN_" and patient is shared."
"RTN","MPIA08",28,0)
 .. I $E($G(MPITF(985.5,IEN_",",23,"I")),1,5)="00000" S ERROR="Pt has 5 leading 0s for SSN in TF list for site "_MPISN_" and patient is shared."
"RTN","MPIA08",29,0)
 .. I $D(ERROR) D ERROR(.ARRAY,.HL,ERROR,238) K ERROR Q
"RTN","MPIA08",30,0)
 .. ;log exception if MPIFAC'>0
"RTN","MPIA08",31,0)
 .. K MPIHL,MPILK D LINK^HLUTIL3(MPIFAC,.MPIHL)
"RTN","MPIA08",32,0)
 .. S:'$O(MPIHL(0)) ERROR="-1^Unknown Logical Link for Station# "_MPISN
"RTN","MPIA08",33,0)
 .. I +$G(ERROR)=-1 S ARRAY("ICN")=$G(ICN) D ERROR(.ARRAY,.HL,ERROR,224)
"RTN","MPIA08",34,0)
 .. I +$G(ERROR)'=-1 S MPILK=$O(MPIHL(0)) D
"RTN","MPIA08",35,0)
 ... S HLL("LINKS",CNT)="MPI ADT-"_HL("ETN")_" CLIENT^"_$P(MPIHL(MPILK),"^"),CNT=CNT+1
"RTN","MPIA08",36,0)
 .. ;if reslt log exception
"RTN","MPIA08",37,0)
 .. I '$D(^XTMP("MPI"_HL("ETN")_"%"_ICN,0)) S ^XTMP("MPI"_HL("ETN")_"%"_ICN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_HL("ETN")_" for ICN "_ICN
"RTN","MPIA08",38,0)
 .. S ^XTMP("MPI"_HL("ETN")_"%"_ICN,+$G(MPISN),0)=$S(+$G(ERROR)'=-1:"A",1:"E")_"^"_$G(HL("MID")) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,+$G(MPISN),0)
"RTN","MPIA08",39,0)
 ;  if site is not the CMOR rebroadcast out to the CMOR
"RTN","MPIA08",40,0)
 I MPICMOR'=MPISSITE D
"RTN","MPIA08",41,0)
 . S CNT=1,MPISN=MPICMOR,MPICMOR=$$IEN^XUAF4(MPICMOR)
"RTN","MPIA08",42,0)
 . D LINK^HLUTIL3(MPICMOR,.MPIHL)
"RTN","MPIA08",43,0)
 . S:'$O(MPIHL(0)) ERROR="-1^Unknown Logical Link for Station# "_MPISN
"RTN","MPIA08",44,0)
 . I +$G(ERROR)'=-1 S MPILK=$O(MPIHL(0)) D
"RTN","MPIA08",45,0)
 .. S HLL("LINKS",1)="MPI ADT-"_HL("ETN")_" CLIENT^"_$P(MPIHL(MPILK),"^"),CNT=CNT+1
"RTN","MPIA08",46,0)
 . ;if reslt log exception
"RTN","MPIA08",47,0)
 . I '$D(^XTMP("MPI"_HL("ETN")_"%"_ICN,0)) S ^XTMP("MPI"_HL("ETN")_"%"_ICN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_HL("ETN")_" for ICN "_ICN
"RTN","MPIA08",48,0)
 . S ^XTMP("MPI"_HL("ETN")_"%"_ICN,+$G(MPISN),0)=$S(+$G(ERROR)'=-1:"A",1:"E")_"^"_$G(HL("MID"))
"RTN","MPIA08",49,0)
 . I +$G(ERROR)=-1 S ARRAY("ICN")=$G(ICN) D ERROR(.ARRAY,.HL,ERROR,234) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,+$G(MPISN),0)
"RTN","MPIA08",50,0)
 Q
"RTN","MPIA08",51,0)
PROC ;Entry point to process the ADT message
"RTN","MPIA08",52,0)
 ;It is called by the MPI ADT-Ann SERVER protocol
"RTN","MPIA08",53,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA08",54,0)
PROC1 K ^TMP("HLS",$J)
"RTN","MPIA08",55,0)
 N SITE,MPIID,MSGID,DFN,SSN,MPII,MSG,MPI,SG,COMP,SUBCOMP,REP,MPIEVTR,MPIDLT,CMOR,NAME,SURNAME,PREFIX,SUFFIX,CLAIMN,SEX,POBCITY,POBSTATE,FIRST,MIDDLE,MMN,MPIDOB,MPIDOD,MPIJ,MPII,MPISSITE,RESULT,POB,ARRAY,HLA,MPIDLU,ICN
"RTN","MPIA08",56,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIA08",57,0)
 D INIT
"RTN","MPIA08",58,0)
 ;if message MSH sending facility matches PID assigning authority update
"RTN","MPIA08",59,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIA08",60,0)
 I $G(ARRAY("MPISSITE"))="" S ARRAY("MPISSITE")=$P($G(HL("SAF")),COMP)
"RTN","MPIA08",61,0)
 I HL("ETN")'="A03",$G(ARRAY(1))=""!($G(ARRAY(7))="")!($G(ARRAY(12))="") S MPIERR="Inbound message is missing " D
"RTN","MPIA08",62,0)
 . I $G(ARRAY(1))="" S MPIERR=MPIERR_"(Surname)"
"RTN","MPIA08",63,0)
 . I $G(ARRAY(7))="" S MPIERR=MPIERR_"(DOB)"
"RTN","MPIA08",64,0)
 . I $G(ARRAY(12))="" S MPIERR=MPIERR_"(SEX)"
"RTN","MPIA08",65,0)
 . D ERROR(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA08",66,0)
 . S ARRAY("ICN")="",ICN=""
"RTN","MPIA08",67,0)
 I $G(ARRAY("ICN"))'="" I $E($G(ARRAY("ICN")),1,2)=10 D UPDATE
"RTN","MPIA08",68,0)
GENACK ; Compile the 'ACK' segment, generate the 'ACK' message.
"RTN","MPIA08",69,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_$S($G(MPIERR)]"":HL("FS")_$G(MPIERR),1:"")
"RTN","MPIA08",70,0)
 S HLEID=HL("EID"),HLEIDS=HL("EIDS"),HLARYTYP="LM",HLFORMAT=1
"RTN","MPIA08",71,0)
 D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.HLRESTLA)
"RTN","MPIA08",72,0)
 K HLFS,HLECH
"RTN","MPIA08",73,0)
 I $G(ICN)'="" D
"RTN","MPIA08",74,0)
 .;** 27 ADDING CHECK TO STOP BROADCAST BACK OUT
"RTN","MPIA08",75,0)
 .Q:$D(MPIBRD)
"RTN","MPIA08",76,0)
 .Q:HL("ETN")="A01"!(HL("ETN")="A03")
"RTN","MPIA08",77,0)
 .D INITHL(HL("ETN"))
"RTN","MPIA08",78,0)
 .K HLRESLT D GENERATE^HLMA("MPI ADT-"_HL("ETN")_" SERVER","GM",1,.HLRESLT,"","")
"RTN","MPIA08",79,0)
 .K ^TMP("HLS",$J)
"RTN","MPIA08",80,0)
 K MPIBRD,MPIMERG
"RTN","MPIA08",81,0)
 Q
"RTN","MPIA08",82,0)
INIT S MPIERR=""
"RTN","MPIA08",83,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) S:SG'="MSH" ^TMP("HLS",$J,MPII-1)=HLNODE D
"RTN","MPIA08",84,0)
 . S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ),^TMP("HLS",$J,MPII-1,MPIJ)=HLNODE(MPIJ)
"RTN","MPIA08",85,0)
 . D:SG?2A1(1A,1N) PICK
"RTN","MPIA08",86,0)
 Q
"RTN","MPIA08",87,0)
PICK ;check routine for segment entry point
"RTN","MPIA08",88,0)
 I $T(@SG)]"" D @SG
"RTN","MPIA08",89,0)
 I $T(@SG)="" Q
"RTN","MPIA08",90,0)
 Q
"RTN","MPIA08",91,0)
UPDATE N ARR
"RTN","MPIA08",92,0)
 S ARRAY("DLT")=$G(MPIDLT) ;site date last treated (?)
"RTN","MPIA08",93,0)
 S ARRAY("EVR")=$G(MPIEVTR) ;tf event reason
"RTN","MPIA08",94,0)
 S ARRAY("DLUP")=$G(MPIDLU) ;date last updated
"RTN","MPIA08",95,0)
 I $G(ARRAY("ICN")) S ICN=ARRAY("ICN"),MPISSITE=ARRAY("MPISSITE"),MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARRAY) I +$G(MPIERR)=-1 D ERROR(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA08",96,0)
 Q
"RTN","MPIA08",97,0)
ERROR(ARRAY,HL,MPIERR,TYPE) ;
"RTN","MPIA08",98,0)
 ;due to routine size moved to MPIUTL13
"RTN","MPIA08",99,0)
 D ERROR^MPIUTL13(.ARRAY,.HL,MPIERR,TYPE)
"RTN","MPIA08",100,0)
 Q
"RTN","MPIA08",101,0)
INITHL(MPIEVT) ;initialize HL7 variables
"RTN","MPIA08",102,0)
 N ER S ER=0
"RTN","MPIA08",103,0)
 D INIT^HLFNC2("MPI ADT-"_MPIEVT_" SERVER",.HL)
"RTN","MPIA08",104,0)
 I $O(HL(""))="" S ER="1^"_$P(HL,U,2)
"RTN","MPIA08",105,0)
 I +ER'=1 I $G(HL)]"" S ER=$G(HL)
"RTN","MPIA08",106,0)
 Q
"RTN","MPIA08",107,0)
PID ;process PID segment
"RTN","MPIA08",108,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","MPIA08",109,0)
 ;Since PID can be over 245 characters loop through setting a PID array
"RTN","MPIA08",110,0)
 ;sequenced PID(1)="PID"... PID(4 or 5) can be over 245 characters so
"RTN","MPIA08",111,0)
 ;it will also loop and place it in PID(4,1...
"RTN","MPIA08",112,0)
 ; Input variables (assumes that MSG or MSG(I) will contain the PID segment)
"RTN","MPIA08",113,0)
 ; Output ARRAY array subscripts
"RTN","MPIA08",114,0)
 ;   SSN - patient SSN
"RTN","MPIA08",115,0)
 ;   ICN - patient ICN
"RTN","MPIA08",116,0)
 ;   DFN - sites local identifier
"RTN","MPIA08",117,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","MPIA08",118,0)
 ;   SEX - patient's SEX
"RTN","MPIA08",119,0)
 ;   MPIDOB - Date of Birth
"RTN","MPIA08",120,0)
 ;   NAME,SURNAME,FIRST,MIDDLE,PREFIX,and SUFFIX - Patient Name
"RTN","MPIA08",121,0)
 ;   MMN - Mother's maiden name
"RTN","MPIA08",122,0)
 ;   POBCITY, POBSTATE - Place of birth city and state
"RTN","MPIA08",123,0)
 ;
"RTN","MPIA08",124,0)
 D PID^MPIADT(.MSG,.ARRAY,.HL)
"RTN","MPIA08",125,0)
 I '$D(ARRAY(13)) S ARRAY(13)="@" D ERROR^MPIA08(.ARRAY,.HL,"Pt with ICN "_ARRAY("ICN")_" is missing SSN at site "_ARRAY("MPISSITE"),209) ;no SSN passed for this patient
"RTN","MPIA08",126,0)
 I ARRAY(13)["P" S ARRAY(13)="@"
"RTN","MPIA08",127,0)
 Q
"RTN","MPIA08",128,0)
ZPD ;processing ZPD fileds
"RTN","MPIA08",129,0)
 S ARRAY(38)=$P(MSG,HL("FS"),18) ;POW STATUS
"RTN","MPIA08",130,0)
 I ARRAY(38)=HL("Q") S ARRAY(38)="@"
"RTN","MPIA08",131,0)
 Q
"RTN","MPIA08",132,0)
EVN S MPIEVTR=$P(MSG,HL("FS"),5),MPIDLT=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIA08",133,0)
 Q
"RTN","MPIA08",134,0)
PD1 N COMP
"RTN","MPIA08",135,0)
 S COMP=$E(HL("ECH"),1),ARRAY("CMOR")=$P($P(MSG,HL("FS"),4),COMP,3)
"RTN","MPIA08",136,0)
 Q
"RTN","MPIA08",137,0)
MSH S HLECH=HL("ECH"),HLFS=HL("FS")
"RTN","MPIA08",138,0)
 I $G(HL("SAF"))="" S HL("SAF")=$P(MSG,HL("FS"),4)
"RTN","MPIA08",139,0)
 S MPIDLU=$P(MSG,HL("FS"),7) I $G(MPIDLU)'="" S MPIDLU=$$FMDATE^HLFNC(MPIDLU)
"RTN","MPIA08",140,0)
 S MPIID=HL("MID"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA08",141,0)
 S SITE=$$LKUP^XUAF4($P($P(HLNODE,HL("FS"),4),COMP))
"RTN","MPIA08",142,0)
 S (MPISSITE,ARRAY("MPISSITE"))=+$P(HLNODE,HL("FS"),4)
"RTN","MPIA08",143,0)
 Q
"RTN","MPIA08",144,0)
MSA ;process the MSA segment
"RTN","MPIA08",145,0)
 N MPIAA,MPIMSG,HLCOMP,MPIX,MPIERR,RETURN,ICN,MPIEVNT,ARRAY,EXIT,MPIY,MPIMSG,MPISF
"RTN","MPIA08",146,0)
 S EXIT=0,MPIAA=MSG,MPIMSG=$P(MPIAA,HL("FS"),3),MPIERR=$P(MPIAA,HL("FS"),4)
"RTN","MPIA08",147,0)
 S MPIMSG=$$MSG^HLCSUTL(MPIMSG,"RETURN(1)")
"RTN","MPIA08",148,0)
 K MPIMSG
"RTN","MPIA08",149,0)
 S CNT=1,MPIX=0 F  S MPIX=$O(RETURN(1,MPIX)) Q:'MPIX!(EXIT=1)  D
"RTN","MPIA08",150,0)
 . I RETURN(1,MPIX)'="" D
"RTN","MPIA08",151,0)
 .. I $D(MPIMSG) S MPIMSG(CNT)=RETURN(1,MPIX),CNT=CNT+1
"RTN","MPIA08",152,0)
 .. I '$D(MPIMSG) S MPIMSG=RETURN(1,MPIX),MPIY=MPIX
"RTN","MPIA08",153,0)
 . I RETURN(1,MPIX)="" D  S CNT=1 K MPIMSG
"RTN","MPIA08",154,0)
 .. I $E(RETURN(1,MPIY),1,3)="MSH" D MSH
"RTN","MPIA08",155,0)
 .. I $E(RETURN(1,MPIY),1,3)="PID" D PID^MPIADT(.MPIMSG,.ARRAY,.HL) S EXIT=1
"RTN","MPIA08",156,0)
 S ICN=$G(ARRAY("ICN"))
"RTN","MPIA08",157,0)
 ;if error is returned log exceptions
"RTN","MPIA08",158,0)
 I MPIERR'="" D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA08",159,0)
 S HLCOMP=$E(HL("ECH"),1),MPISF=$P(HL("SAF"),HLCOMP)
"RTN","MPIA08",160,0)
 I $D(^XTMP("MPI"_HL("ETN")_"%"_ICN)) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,MPISF) I '$O(^XTMP("MPI"_HL("ETN")_"%"_ICN,0)) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,0)
"RTN","MPIA08",161,0)
 Q
"RTN","MPIA19")
0^2^B56042097
"RTN","MPIA19",1,0)
MPIA19 ;BIOFO/DLR-Query Utility to update PD and TF info on the MPI ;10/1/02
"RTN","MPIA19",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,21,23,24,31,33**;30 Apr 99
"RTN","MPIA19",3,0)
CHKICN ;
"RTN","MPIA19",4,0)
 N ICN,X
"RTN","MPIA19",5,0)
 S ICN=$$ASKPT^MPIRUTL() I +$G(ICN)'>0 Q
"RTN","MPIA19",6,0)
 S X=0 F  S X=$O(^XTMP("MPIA19%"_ICN,X)) Q:'X  W !,X,"  ",$P(^XTMP("MPIA19%"_ICN,X,0),"^",1,3)
"RTN","MPIA19",7,0)
 Q
"RTN","MPIA19",8,0)
EXC(ICN,SSN,MPILOC) ;
"RTN","MPIA19",9,0)
 N ANS
"RTN","MPIA19",10,0)
 D ADDTF(ICN,.MPILOC)
"RTN","MPIA19",11,0)
 S ANS=$$CONFIRM(ICN,.MPILOC)
"RTN","MPIA19",12,0)
 Q:ANS'=1
"RTN","MPIA19",13,0)
 K ^XTMP("MPIA19%"_ICN) S ^XTMP("MPIA19%"_ICN,0)=DT_"^"_DT_"^"_"HL7 TF QUERY FOR "_ICN
"RTN","MPIA19",14,0)
 D SEND(ICN,.MPILOC)
"RTN","MPIA19",15,0)
 Q
"RTN","MPIA19",16,0)
START ;
"RTN","MPIA19",17,0)
 D RE^MPIRUTLI I QFLG K QFLG Q
"RTN","MPIA19",18,0)
 ;
"RTN","MPIA19",19,0)
 N MPILOC,ICN,ANS,DQFLG
"RTN","MPIA19",20,0)
 S ICN=$$ASK^MPIA43() ;**24 Change ASK call to screen out deactivated
"RTN","MPIA19",21,0)
 Q:+ICN'>0
"RTN","MPIA19",22,0)
 S DQFLG=1 D PDAT^MPIMPDAT(ICN)
"RTN","MPIA19",23,0)
 S ANS=$$ADDTF(ICN,.MPILOC)
"RTN","MPIA19",24,0)
 Q:ANS["^"
"RTN","MPIA19",25,0)
 S ANS=$$CONFIRM(ICN,.MPILOC)
"RTN","MPIA19",26,0)
 Q:ANS'=1
"RTN","MPIA19",27,0)
 K ^XTMP("MPIA19%"_ICN) S ^XTMP("MPIA19%"_ICN,0)=DT_"^"_DT_"^"_"HL7 TF QUERY FOR "_ICN
"RTN","MPIA19",28,0)
 D SEND(ICN,.MPILOC)
"RTN","MPIA19",29,0)
 Q
"RTN","MPIA19",30,0)
ADDTF(ICN,MPILOC) ;
"RTN","MPIA19",31,0)
 N X,AF,FAC,DIC,Y,IEN,STA,X,Y,DUOUT
"RTN","MPIA19",32,0)
 W !,"The following site(s) will be queried:"
"RTN","MPIA19",33,0)
 S X=0 F  S X=$O(^MPI(985.5,"AM",ICN,X)) Q:'X  I $D(^MPI(985.5,X,0)) S AF=^MPI(985.5,X,0) S MPILOC(X)=$$NS^XUAF4(X) W !,?5,$P(MPILOC(X),"^")_"   "_$P(MPILOC(X),"^",2)
"RTN","MPIA19",34,0)
 W !
"RTN","MPIA19",35,0)
 F  D  Q:+Y'>0
"RTN","MPIA19",36,0)
 . S DIC=985.3,DIC(0)="QEAMZ",DIC("A")="Add additional site to the query list: " D ^DIC I +Y>0 S IEN=+Y,STA=$$NS^XUAF4(IEN) S MPILOC(IEN)=STA
"RTN","MPIA19",37,0)
 Q $S($D(DUOUT):"^",1:Y)
"RTN","MPIA19",38,0)
CONFIRM(ICN,MPILOC) ;confirm the transmission of QRY-A19
"RTN","MPIA19",39,0)
 N DIR,X,Y,DUOUT
"RTN","MPIA19",40,0)
 W !!,"Site to query for updated information on ICN#"_ICN,!
"RTN","MPIA19",41,0)
 S X=0 F  S X=$O(MPILOC(X)) Q:'X  W !,?5,$P(MPILOC(X),"^")_"   "_$P(MPILOC(X),"^",2)
"RTN","MPIA19",42,0)
 S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Are you sure you want to query the site(s) listed above" D ^DIR
"RTN","MPIA19",43,0)
 Q +Y
"RTN","MPIA19",44,0)
RESP ;process the ADT-A19 response ADR-A19
"RTN","MPIA19",45,0)
 D HLLOG^MPIMHL("A19",$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA19",46,0)
 D IN
"RTN","MPIA19",47,0)
 Q
"RTN","MPIA19",48,0)
ROUTE ;route the ADT-A19 message to all TF's and supplied sites
"RTN","MPIA19",49,0)
 Q
"RTN","MPIA19",50,0)
 ;
"RTN","MPIA19",51,0)
IN ;Entry point to process the QRY-A19 response message
"RTN","MPIA19",52,0)
 ;It is called by the MPI QRY-A19 SERVER protocol
"RTN","MPIA19",53,0)
 ;
"RTN","MPIA19",54,0)
 N ICN,SITE,MPIID,DFN,SSN,MPIERR,MPII,MSG,MPI,SG,COMP,SUBCOMP,REP,MPIEVTR,MPIDLT,CMOR,NAME,SURNAME,PREFIX,SUFFIX,CLAIMN,SEX,POBCITY,POBSTATE,FIRST,MIDDLE,MMN,MPIDOB,MPIDOD,MPIJ,MPII,MPISSITE,RESULT,POB,ARRAY
"RTN","MPIA19",55,0)
 S MPIERR=""
"RTN","MPIA19",56,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","MPIA19",57,0)
 . S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIA19",58,0)
 . D:SG?2A1(1A,1N) PICK
"RTN","MPIA19",59,0)
 ;if message MSH sending facility matches the PID assigning authority update
"RTN","MPIA19",60,0)
 D UPDATE^MPIA19A(.ARRAY,.HL)
"RTN","MPIA19",61,0)
 S ^XTMP("MPIA19%"_ARRAY("QRYICN"),MPISSITE,0)=$S(+$G(MPIERR)=0:"S",1:"E^"_MPIERR)
"RTN","MPIA19",62,0)
 I ^XTMP("MPIA19%"_ARRAY("QRYICN"),MPISSITE,0)="E" D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)  ;log exception
"RTN","MPIA19",63,0)
 I ^XTMP("MPIA19%"_ARRAY("QRYICN"),MPISSITE,0)="S"
"RTN","MPIA19",64,0)
 K ^XTMP("MPIA19%"_ARRAY("QRYICN"),MPISSITE,0) I '$O(^XTMP("MPIA19%"_ARRAY("QRYICN"),MPISSITE,0)) K ^XTMP("MPIA19%"_ARRAY("QRYICN"),0)
"RTN","MPIA19",65,0)
 K HLFS,HLECH
"RTN","MPIA19",66,0)
 Q
"RTN","MPIA19",67,0)
PICK ;check routine for segment entry point
"RTN","MPIA19",68,0)
 I $T(@SG)]"" D @SG
"RTN","MPIA19",69,0)
 I $T(@SG)="" Q
"RTN","MPIA19",70,0)
 Q
"RTN","MPIA19",71,0)
BLDQRD(ICN,CNT,SITE) ;build QRD from File #985 **APC from File #985.5**
"RTN","MPIA19",72,0)
 N QRD,X,COMP,SUBCOMP,MPIZN,REP,SSN,DFN,IEN,MPI1N
"RTN","MPIA19",73,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA19",74,0)
 ;find the sites data in File #985.5
"RTN","MPIA19",75,0)
 S SSN=$P(^MPIVET(ICN,0),"^",14)
"RTN","MPIA19",76,0)
 S IEN=$O(^MPI(985.5,"AM",ICN,SITE,0))
"RTN","MPIA19",77,0)
 ;check for duplicates if duplicate log exception quit
"RTN","MPIA19",78,0)
 I $D(^MPI(985.5,+IEN,0)) S MPIZN=^MPI(985.5,IEN,0) S DFN=$P(MPIZN,"^",3)
"RTN","MPIA19",79,0)
 I $G(SSN)="" I $D(^MPI(985.5,+IEN,1)) S MPI1N=^MPI(985.5,IEN,1) S SSN=$P(MPI1N,"^",14)
"RTN","MPIA19",80,0)
 S QRD(1)="QRD"
"RTN","MPIA19",81,0)
 S QRD(2)=$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","MPIA19",82,0)
 S QRD(3)="R"  ;record-oriented format
"RTN","MPIA19",83,0)
 S QRD(4)="I"  ;immediate response
"RTN","MPIA19",84,0)
 S QRD(5)=ICN  ;using ICN as the id
"RTN","MPIA19",85,0)
 S QRD(6)=""  ;not used
"RTN","MPIA19",86,0)
 S QRD(7)=""  ;not used
"RTN","MPIA19",87,0)
 S QRD(8)="RD"_COMP_1  ;return one record
"RTN","MPIA19",88,0)
 ;repeat patient ID list including ICN,SSN AND **APC DFN**
"RTN","MPIA19",89,0)
 ;icn(xxxxxxxxxxvyyyyyy)^^^^^^^^USVHA~~0363^NI^^^^^VA FACILITY ID~station#~L repeater ssn(xxxxxxxx)^^^^^^^^USVHA~~0363^SS^^^^^VA FACILITY ID~station#~L repeater dfn(xxxxxxxxxxxxxxxxxxxx)^^^^^^^^USVHA~~0363^PI^^^^^VA FACILITY ID~station#~L
"RTN","MPIA19",90,0)
 S QRD(9)=ICN_COMP_COMP_COMP_COMP_COMP_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_COMP_COMP_COMP_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA19",91,0)
 I $G(SSN)'="" S QRD(9)=$G(QRD(9))_REP_SSN_COMP_COMP_COMP_COMP_COMP_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_COMP_COMP_COMP_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA19",92,0)
 I $G(DFN)'="" S QRD(9)=$G(QRD(9))_REP_DFN_COMP_COMP_COMP_COMP_COMP_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_COMP_COMP_COMP_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA19",93,0)
 S QRD(10)="DEM"  ;Demographic type query
"RTN","MPIA19",94,0)
 S QRD(11)=""  ;context of demographics (not used)
"RTN","MPIA19",95,0)
 S QRD(12)=""  ;(not used)
"RTN","MPIA19",96,0)
 S X=0 F  S X=$O(QRD(X)) Q:'X  S HLA("HLS",CNT)=$G(HLA("HLS",CNT))_QRD(X)_HL("FS")
"RTN","MPIA19",97,0)
 S CNT=CNT+1
"RTN","MPIA19",98,0)
 Q
"RTN","MPIA19",99,0)
SEND(ICN,MPILOC) ;sends the MFU message
"RTN","MPIA19",100,0)
 N CNT,HLA,HLEID,X,MPIX,MPIHL,MPILK,MPISN
"RTN","MPIA19",101,0)
 ;loop through the sending location array to initialize, build, and
"RTN","MPIA19",102,0)
 ;send a separate message.  A separate message is to adhere to the who
"RTN","MPIA19",103,0)
 ;subject filter which is by ICN/assigning facility
"RTN","MPIA19",104,0)
 S MPIX=0 F  S MPIX=$O(MPILOC(MPIX)) Q:'MPIX  D
"RTN","MPIA19",105,0)
 . S X=$$INIT(.HL,.HLEID)
"RTN","MPIA19",106,0)
 . S CNT=1
"RTN","MPIA19",107,0)
 . D BLDQRD(ICN,.CNT,MPIX)
"RTN","MPIA19",108,0)
 .;log the generation into an XTMP global
"RTN","MPIA19",109,0)
 .;set the HLL("LINKS" array for this site
"RTN","MPIA19",110,0)
 . S MPISN=$$STA^XUAF4(MPIX)
"RTN","MPIA19",111,0)
 .;log exception if MPISN'>0
"RTN","MPIA19",112,0)
 . D LINK^HLUTIL3(MPIX,.MPIHL)
"RTN","MPIA19",113,0)
 . S:'$O(MPIHL(0)) ERROR="-1^Unknown Logical Link for Station# "_MPISN
"RTN","MPIA19",114,0)
 . I +$G(ERROR)'=-1 S MPILK=$O(MPIHL(0)) D
"RTN","MPIA19",115,0)
 .. S HLL("LINKS",1)="MPI QRY-A19 CLIENT^"_$P(MPIHL(MPILK),"^")
"RTN","MPIA19",116,0)
 .. W !,"Sending query to "_$$WHAT^XUAF4(MPIX,.01)_", Station#"_MPISN
"RTN","MPIA19",117,0)
 .. K HLRESLT D GENERATE^HLMA("MPI QRY-A19 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIA19",118,0)
 .. S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,U,3))
"RTN","MPIA19",119,0)
 .;if reslt log exception
"RTN","MPIA19",120,0)
 . S ^XTMP("MPIA19%"_ICN,0)=DT_"^"_DT_"^"_"HL7 TF QUERY FOR "_$G(ICN)
"RTN","MPIA19",121,0)
 . I +$G(ERROR)'=-1 S ^XTMP("MPIA19%"_ICN,+$G(MPISN),0)="A"_"^"_$G(HLRESLT)
"RTN","MPIA19",122,0)
 . I +$G(ERROR)=-1 S ^XTMP("MPIA19%"_ICN,+$G(MPISN),0)="E"_"^"_$G(ERROR)
"RTN","MPIA19",123,0)
 . K HLL("LINKS"),RESLT,MPISN,HLA,MPIHL,MPILK,ERROR
"RTN","MPIA19",124,0)
 ; ^ PATCH 31 REMOVED HL VARIABLES FROM KILL LINE
"RTN","MPIA19",125,0)
 Q
"RTN","MPIA19",126,0)
 ;
"RTN","MPIA19",127,0)
INIT(HL,HLEID) ;
"RTN","MPIA19",128,0)
 ;initialize HL7 variables
"RTN","MPIA19",129,0)
 N ER
"RTN","MPIA19",130,0)
 S ER=0
"RTN","MPIA19",131,0)
 D INIT^HLFNC2("MPI QRY-A19 SERVER",.HL)
"RTN","MPIA19",132,0)
 I $O(HL(""))="" S ER="1^"_$P(HL,U,2)
"RTN","MPIA19",133,0)
 I +ER'=1 I $G(HL)]"" S ER=$G(HL)
"RTN","MPIA19",134,0)
 Q ER
"RTN","MPIA19",135,0)
 ;
"RTN","MPIA19",136,0)
PID ;process PID segment
"RTN","MPIA19",137,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","MPIA19",138,0)
 ;Since PID segment and sequence can be over 245 characters
"RTN","MPIA19",139,0)
 ;setting a PID array PID(1)="PID"... PID(4,1
"RTN","MPIA19",140,0)
 ;
"RTN","MPIA19",141,0)
 ; Input variables
"RTN","MPIA19",142,0)
 ;   assumes that MSG or MSG(I) will contain the PID segment
"RTN","MPIA19",143,0)
 ; Output ARRAY array subscripts
"RTN","MPIA19",144,0)
 ;   SSN - patient SSN
"RTN","MPIA19",145,0)
 ;   ICN - patient ICN
"RTN","MPIA19",146,0)
 ;   DFN - sites local identifier
"RTN","MPIA19",147,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","MPIA19",148,0)
 ;   SEX - patient's SEX
"RTN","MPIA19",149,0)
 ;   MPIDOB - Date of Birth
"RTN","MPIA19",150,0)
 ;   NAME,SURNAME,FIRST,MIDDLE,PREFIX,and SUFFIX - Patient Name
"RTN","MPIA19",151,0)
 ;   MMN - Mother's maiden name
"RTN","MPIA19",152,0)
 ;   POBCITY, POBSTATE - Place of birth city and state
"RTN","MPIA19",153,0)
 ;
"RTN","MPIA19",154,0)
 D PID^MPIADT(.MSG,.ARRAY,.HL)
"RTN","MPIA19",155,0)
 I '$D(ARRAY(13)) S ARRAY(13)="@" D ERROR^MPIA08(.ARRAY,.HL,"Pt with ICN "_ARRAY("ICN")_" is missing SSN at site "_ARRAY("MPISSITE"),209) ;no SSN passed for this patient ;**24
"RTN","MPIA19",156,0)
 I ARRAY(13)["P" S ARRAY(13)="@" ;**24
"RTN","MPIA19",157,0)
 Q
"RTN","MPIA19",158,0)
ZPD ; zpd segment **PATCH 21
"RTN","MPIA19",159,0)
 ;POW STATUS
"RTN","MPIA19",160,0)
 S ARRAY(38)=$P(MSG,HL("FS"),18)
"RTN","MPIA19",161,0)
 I ARRAY(38)=HL("Q") S ARRAY(38)="@"
"RTN","MPIA19",162,0)
 Q
"RTN","MPIA19",163,0)
EVN ;
"RTN","MPIA19",164,0)
 S ARRAY("EVR")=$P(MSG,HL("FS"),2)
"RTN","MPIA19",165,0)
 S ARRAY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIA19",166,0)
 Q
"RTN","MPIA19",167,0)
PD1 ;
"RTN","MPIA19",168,0)
 S ARRAY("CMOR")=$P($P(MSG,HL("FS"),4),COMP,3)
"RTN","MPIA19",169,0)
 Q
"RTN","MPIA19",170,0)
MSH ;
"RTN","MPIA19",171,0)
 S HLECH=HL("ECH")
"RTN","MPIA19",172,0)
 S HLFS=HL("FS")
"RTN","MPIA19",173,0)
 S MPIID=HL("MID")
"RTN","MPIA19",174,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIA19",175,0)
 S REP=$E(HL("ECH"),2)
"RTN","MPIA19",176,0)
 S SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA19",177,0)
 S SITE=$$LKUP^XUAF4($P($P(HLNODE,HL("FS"),4),COMP))
"RTN","MPIA19",178,0)
 S MPISSITE=$P($G(HL("SFN")),COMP),ARRAY("MPISSITE")=MPISSITE
"RTN","MPIA19",179,0)
 S ARRAY("DLUP")=$$FMDATE^HLFNC($P(MSG,HL("FS"),7))
"RTN","MPIA19",180,0)
 Q
"RTN","MPIA19",181,0)
MSA ;
"RTN","MPIA19",182,0)
 S ARRAY("AATXT")=$P(MSG,HL("FS"),4)
"RTN","MPIA19",183,0)
 Q
"RTN","MPIA19",184,0)
QRD ;
"RTN","MPIA19",185,0)
 ;get query msg id which should be ICN without checksum
"RTN","MPIA19",186,0)
 S ARRAY("QRYICN")=$P(MSG,HL("FS"),5)
"RTN","MPIA19",187,0)
 Q
"RTN","MPIA19",188,0)
ASKPT() ;
"RTN","MPIA19",189,0)
 N DIC,ICN,Y,X,DTOUT,DUOUT,ANS
"RTN","MPIA19",190,0)
 S DIR(0)="F",DIR("A")="Select PATIENT (Use ICN or SSN): "
"RTN","MPIA19",191,0)
 D ^DIR S ANS=Y
"RTN","MPIA19",192,0)
 W !," HERE",Y," X ",X
"RTN","MPIA19",193,0)
 I +ICN'>0 I $D(^MPI(985.5,"AM",ICN)) N MPIAS S MPIAS=$O(^MPI(985.5,"AM",ICN,0)) I +MPIAS>0 S DIR(0)="Y",DIR("B")="Yes",DIR("A")="ICN has an Associate system would you like to re-establish the Primary Record" D ^DIR I Y=1 W !,"YES"
"RTN","MPIA19",194,0)
 Q:ANS<1 0
"RTN","MPIA19",195,0)
 Q:$D(DTOUT)!($D(DUOUT)) 0
"RTN","MPIA19",196,0)
 S ICN=+Y
"RTN","MPIA19",197,0)
 Q ICN
"RTN","MPIA19A")
0^3^B29941211
"RTN","MPIA19A",1,0)
MPIA19A ;BIOFO/DLR- Query Utility to update PD and TF info on the MPI ;10/1/02
"RTN","MPIA19A",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,21,23,24**;30 Apr 99
"RTN","MPIA19A",3,0)
UPDATE(ARRAY,HL) ;
"RTN","MPIA19A",4,0)
 N ARR,ICNDUP,SITE,ICN,MPISSITE,MPIERR,COMP
"RTN","MPIA19A",5,0)
 ;update icn for the given station#
"RTN","MPIA19A",6,0)
 ;surname (#1) first name (#2) middle name (#3) prefix (#4) suffix (#5)
"RTN","MPIA19A",7,0)
 ;mothers maiden name (#6) date of birth (#7) place of birth state (#9)
"RTN","MPIA19A",8,0)
 ;date of death (#10) gender (#12) ssn (#13) claim# (#15)
"RTN","MPIA19A",9,0)
 ;site date last (DLT), treated tf event reason (EVR), other or alternate ids (OID)
"RTN","MPIA19A",10,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIA19A",11,0)
 S SITE=$P($G(HL("SFN")),COMP),SITE=$$IEN^XUAF4(SITE)
"RTN","MPIA19A",12,0)
 ;I ARRAY("AATXT")["Unknown ICN#"  ;deactivate entry from 985 and 985.5
"RTN","MPIA19A",13,0)
 ;if ICN at site does not equal ICN on MPI (also no ICN at site)
"RTN","MPIA19A",14,0)
 N OID,ICNDUP,X,AA,AL,XX,OIDDEL,OIDDELID
"RTN","MPIA19A",15,0)
ICNNE I +$G(ARRAY("ICN"))'=ARRAY("QRYICN") D
"RTN","MPIA19A",16,0)
 . I $G(ARRAY("ICN"))="" D
"RTN","MPIA19A",17,0)
 .. ;unlink from the MPI the correlation used in the query
"RTN","MPIA19A",18,0)
 .. N ARR1 S ARR1("ICN")=ARRAY("QRYICN"),ARR1("MPISSITE")=SITE,ARR1("FID")="@",ICN=ARR1("ICN"),MPISSITE=$$STA^XUAF4(ARR1("MPISSITE")) D
"RTN","MPIA19A",19,0)
 ... S ARR1("DLUP")=ARRAY("DLUP")
"RTN","MPIA19A",20,0)
 ... ;Q:'$D(^MPI(985.5,"AM",ARR1("ICN")))
"RTN","MPIA19A",21,0)
 ... ;UPDATE will prevent the deletion if site is the CMOR and shared
"RTN","MPIA19A",22,0)
 ... ;UPDATE will also remove any related Other ID's related to this site
"RTN","MPIA19A",23,0)
 ... S MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARR1)
"RTN","MPIA19A",24,0)
 ... ;log exception if error is returned while deactivating queried ICN
"RTN","MPIA19A",25,0)
 ... I +$G(MPIERR)'=0 D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA19A",26,0)
 . I $G(ARRAY("ICN"))'="" D
"RTN","MPIA19A",27,0)
 . ;unlink from the MPI the correlation used in the query
"RTN","MPIA19A",28,0)
 . N ARR1 S ARR1("ICN")=ARRAY("QRYICN"),ARR1("MPISSITE")=SITE,ARR1("FID")="@",ICN=ARR1("ICN"),MPISSITE=$$STA^XUAF4(ARR1("MPISSITE")) D
"RTN","MPIA19A",29,0)
 .. S ARR1("DLUP")=ARRAY("DLUP")
"RTN","MPIA19A",30,0)
 .. I $P($G(^MPIVET(ARR1("ICN"),1)),"^",2)="" I ARRAY("CMOR")'="" N MPISIEN S MPISIEN=$$IEN^XUAF4(ARRAY("CMOR")) S $P(^MPIVET(ARR1("ICN"),1),"^",2)=MPISIEN,^MPIVET("APC",MPISIEN,ARR1("ICN"))=""
"RTN","MPIA19A",31,0)
 .. ;Q:'$D(^MPI(985.5,"AM",ARR1("ICN")))
"RTN","MPIA19A",32,0)
 .. S MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARR1)
"RTN","MPIA19A",33,0)
 .. ;log exception if error is returned while deactivating queried ICN
"RTN","MPIA19A",34,0)
 .. I +$G(MPIERR)'=0 D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA19A",35,0)
 . ;loop through sites ICN history to see if another ICN knows this ICN
"RTN","MPIA19A",36,0)
 . S ICNDUP="",X=0 F  S X=$O(ARRAY("OID",X)) Q:'X  D
"RTN","MPIA19A",37,0)
 .. ;set the other ID, Assigning Authority (i.e. USVHA) and Assigning Location (File#4 IEN)
"RTN","MPIA19A",38,0)
 .. S OID=$P(ARRAY("OID",X),"^"),AA=$P(ARRAY("OID",X),"^",2),AL=$P(ARRAY("OID",X),"^",3)
"RTN","MPIA19A",39,0)
 .. ;if you find another ICN that isn't the ICN known at the site continue
"RTN","MPIA19A",40,0)
 .. I $D(^MPIVET("D",AA,OID)) S OIDDEL=$O(^MPIVET("D",AA,OID,AL,0)) I OIDDEL'="" D:OIDDEL'=ARRAY("ICN")
"RTN","MPIA19A",41,0)
 ... ;check other ICN found and it is not the same ICN delete it
"RTN","MPIA19A",42,0)
 ... N ARR1 S ARR1("ICN")=OIDDEL,ARR1("MPISSITE")=SITE,ARR1("FID")="@",ICN=ARR1("ICN"),MPISSITE=$$STA^XUAF4(ARR1("MPISSITE")) D
"RTN","MPIA19A",43,0)
 .... S MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARR1)
"RTN","MPIA19A",44,0)
 .... I $P($G(^MPIVET(ARR1("ICN"),"ID_STATE")),"^")="D" I ARRAY("CMOR")'="" N MPISIEN S MPISIEN=$$IEN^XUAF4(ARRAY("CMOR")) S $P(^MPIVET(ARR1("ICN"),1),"^",2)=MPISIEN,^MPIVET("APC",MPISIEN,ARR1("ICN"))="" ;**24
"RTN","MPIA19A",45,0)
 .... ;Q:'$D(^MPI(985.5,"AM",ARR1("ICN")))
"RTN","MPIA19A",46,0)
 .... S MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARR1)
"RTN","MPIA19A",47,0)
 .... ;log exception if error is returned while deactivating queried ICN
"RTN","MPIA19A",48,0)
 .... I +$G(MPIERR)'=0 D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA19A",49,0)
 .;now update the new ICN
"RTN","MPIA19A",50,0)
 .I $G(ARRAY("ICN"))'="" S ICN=ARRAY("ICN") D:$D(^MPIVET(ARRAY("ICN"),0))
"RTN","MPIA19A",51,0)
 .. I $P($G(^MPIVET(ARRAY("ICN"),"ID_STATE")),"^")="D" I ARRAY("CMOR")'="" N MPISIEN S MPISIEN=$$IEN^XUAF4(ARRAY("CMOR")) S $P(^MPIVET(ARRAY("ICN"),1),"^",2)=MPISIEN,^MPIVET("APC",MPISIEN,ARRAY("ICN"))="" ;**24
"RTN","MPIA19A",52,0)
 .. S MPISSITE=$P($G(HL("SFN")),COMP),MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARRAY) I +$G(MPIERR)'=0 D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA19A",53,0)
 ;if ICN at site equals ICN on MPI
"RTN","MPIA19A",54,0)
ICNE I +$G(ARRAY("ICN"))=ARRAY("QRYICN") D
"RTN","MPIA19A",55,0)
 . I $P($G(^MPIVET(ARRAY("QRYICN"),1)),"^",2)="" I ARRAY("CMOR")'="" N MPISIEN S MPISIEN=$$IEN^XUAF4(ARRAY("CMOR")) S $P(^MPIVET(ARRAY("QRYICN"),1),"^",2)=MPISIEN,^MPIVET("APC",MPISIEN,ARRAY("QRYICN"))=""
"RTN","MPIA19A",56,0)
 . ;loop through sites ICN history to see if another ICN knows this ICN
"RTN","MPIA19A",57,0)
 . S ICNDUP="",X=0 F  S X=$O(ARRAY("OID",X)) Q:'X  D
"RTN","MPIA19A",58,0)
 .. ;set the other ID, Assigning Authority (i.e. USVHA) and Assigning Location (File#4 IEN)
"RTN","MPIA19A",59,0)
 .. S OID=$P(ARRAY("OID",X),"^"),AA=$P(ARRAY("OID",X),"^",2),AL=$P(ARRAY("OID",X),"^",3)
"RTN","MPIA19A",60,0)
 .. ;if you find another ICN that isn't the ICN known at the site continue
"RTN","MPIA19A",61,0)
 .. I $D(^MPIVET("D",AA,OID)) S OIDDEL=$O(^MPIVET("D",AA,OID,AL,0)) I OIDDEL'="" D:OIDDEL'=ARRAY("ICN")
"RTN","MPIA19A",62,0)
 ... ; check other ICN found and it is not the same ICN delete it
"RTN","MPIA19A",63,0)
 ... N ARR1 S ARR1("ICN")=OIDDEL,ARR1("MPISSITE")=SITE,ARR1("FID")="@",ICN=ARR1("ICN"),MPISSITE=$$STA^XUAF4(ARR1("MPISSITE")),MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARR1)
"RTN","MPIA19A",64,0)
 . ;check existing MPI ICN's to see if this site/SSN pair is already link to another ICN
"RTN","MPIA19A",65,0)
 . I $D(^MPIVET("SSN",ARRAY(13))) S XX=0 F  S XX=$O(^MPIVET("SSN",ARRAY(13),XX)) Q:'XX  I $D(^MPI(985.5,"AM",XX,SITE)) I XX'=ARRAY("ICN") D
"RTN","MPIA19A",66,0)
 .. N ARR1 S MPISSITE=$$STA^XUAF4(SITE),ARR1("ICN")=XX,ARR1("FID")="@",MPIERR=$$UPDATE^MPIUTL4(XX,MPISSITE,.ARR1)
"RTN","MPIA19A",67,0)
 . S MPISSITE=$P($G(HL("SFN")),COMP),ICN=ARRAY("ICN"),MPIERR=$$UPDATE^MPIUTL4(ICN,MPISSITE,.ARRAY) I +$G(MPIERR)'=0 D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)
"RTN","MPIA19A",68,0)
 Q
"RTN","MPIA24")
0^4^B71511166
"RTN","MPIA24",1,0)
MPIA24 ;BPIFO/CMC-A24 BUILDING ROUTINE ;5 MARCH 02
"RTN","MPIA24",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,23,24,31,35**;30 Apr 99
"RTN","MPIA24",3,0)
 ;
"RTN","MPIA24",4,0)
 ;
"RTN","MPIA24",5,0)
LINK(RETAIN,DEPRECAT,SITE,LIDD,LIDR,MPISS) ;API used to LINK duplicate ICN's
"RTN","MPIA24",6,0)
 ;   RETAIN = IEN of the retained ICN
"RTN","MPIA24",7,0)
 ;   DEPRECAT = IEN of the deprecated ICN
"RTN","MPIA24",8,0)
 ;  SITE = IEN of the site involved
"RTN","MPIA24",9,0)
 ;  optional: LIDR = LOCAL ID RETAINED
"RTN","MPIA24",10,0)
 ;  optional: LIDD = LOCAL ID DEPRECATED
"RTN","MPIA24",11,0)
 ;example
"RTN","MPIA24",12,0)
 ;    site link or add = LINK(1000000000,"",500,"",12345)
"RTN","MPIA24",13,0)
 ;    
"RTN","MPIA24",14,0)
 K HLA("HLA"),HLA("HLS"),SYS
"RTN","MPIA24",15,0)
 I $G(MPISS)="" S MPISS=1
"RTN","MPIA24",16,0)
 I $G(LIDD)="" S LIDD=""
"RTN","MPIA24",17,0)
 I $G(LIDR)="" S LIDR=""
"RTN","MPIA24",18,0)
 D A24(RETAIN,SITE,DEPRECAT,SITE,LIDD,LIDR,MPISS)
"RTN","MPIA24",19,0)
 Q
"RTN","MPIA24",20,0)
A24(RETAINED,SITE,DEPRECAT,SITE2,LIDD,LIDR,MPISS) ;
"RTN","MPIA24",21,0)
 ;SITE AND SITE2 ARE IENs
"RTN","MPIA24",22,0)
 ; need to build and send an A24 msg as a response to an A28 Add
"RTN","MPIA24",23,0)
 ; or A40 Merge IDs
"RTN","MPIA24",24,0)
 ;
"RTN","MPIA24",25,0)
 I $G(MPISS)="" S MPISS=1
"RTN","MPIA24",26,0)
 I '$D(DEPRECAT) S DEPRECAT=""
"RTN","MPIA24",27,0)
 I DEPRECAT="" S DEPRECAT=RETAINED,SITE2=SITE
"RTN","MPIA24",28,0)
 N ST,RESLT,LIDD1,LIDR1
"RTN","MPIA24",29,0)
 S RESLT=""
"RTN","MPIA24",30,0)
 S ST=0 F  S ST=$O(^MPI(985.5,"AM",DEPRECAT,ST)) Q:ST=""  D
"RTN","MPIA24",31,0)
 .;check system type to prevent duplicating messages to the same "downstream" system due to being both an association and a correlation
"RTN","MPIA24",32,0)
 .I $$SITET^MPIA24C($$STA^XUAF4(ST))="BT" Q
"RTN","MPIA24",33,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.5,"AM",DEPRECAT,ST,IEN)) Q:'IEN  D
"RTN","MPIA24",34,0)
 ..;if called from LINK
"RTN","MPIA24",35,0)
 ..I LIDR="" S LIDR1=$P($G(^MPI(985.5,IEN,0)),"^",3) I $G(LIDD)="" S LIDD1=LIDR1
"RTN","MPIA24",36,0)
 ..;if called from A28 add or A40 merge
"RTN","MPIA24",37,0)
 ..I LIDR'="" S LIDR1=LIDR,LIDD1=LIDD
"RTN","MPIA24",38,0)
 ..I SITE="" S SITE=ST
"RTN","MPIA24",39,0)
 ..I SITE2="" S SITE2=ST
"RTN","MPIA24",40,0)
 ..D DA24(RETAINED,SITE,DEPRECAT,SITE2,ST,.RESLT,LIDR1,LIDD1,MPISS)
"RTN","MPIA24",41,0)
 Q RESLT
"RTN","MPIA24",42,0)
 ;
"RTN","MPIA24",43,0)
DA24(RETAINED,SITE,DEPRECAT,SITE2,ST,RESLT,LIDR,LIDD,MPISS) ;
"RTN","MPIA24",44,0)
 N CNT,MPI,EVN,TCNT,PD1,TPID,IEN,ERR,TPID2,STN
"RTN","MPIA24",45,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIA24",46,0)
 S CNT=1
"RTN","MPIA24",47,0)
 D INIT^HLFNC2("MPI ADT-A24 SERVER",.HL)
"RTN","MPIA24",48,0)
 I $O(HL(""))="" S RESLT="-1^"_$P(HL,"^",2) Q
"RTN","MPIA24",49,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA24",50,0)
 S ERR="",TCNT=0
"RTN","MPIA24",51,0)
 D BLDEVN^MPIPIDB(RETAINED,.EVN,.HL,"A24",.ERR)
"RTN","MPIA24",52,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24",53,0)
 D BLDPID^MPIPIDB(RETAINED,SITE,1,"1,3,5,6,7,8,11,29",.TPID,.HL,.ERR,LIDR)
"RTN","MPIA24",54,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24",55,0)
 D BLDPID^MPIPIDB(DEPRECAT,SITE2,2,"1,3,5,6,7,8,11,29",.TPID2,.HL,.ERR,LIDD)
"RTN","MPIA24",56,0)
 ; **35 changes ST to SITE2 in 2nd call to BLDPID above
"RTN","MPIA24",57,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24",58,0)
 D BLDPD1^MPIPIDB(RETAINED,"3",.PD1,.HL,.ERR)
"RTN","MPIA24",59,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24",60,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIA24",61,0)
 S HLA("HLS",4)=PD1(1)
"RTN","MPIA24",62,0)
 S CNT=0 F  S CNT=$O(TPID(CNT)) Q:CNT=""  D
"RTN","MPIA24",63,0)
 .I CNT=1 S HLA("HLS",2)=TPID(CNT)
"RTN","MPIA24",64,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=TPID(CNT)
"RTN","MPIA24",65,0)
 S CNT=0 F  S CNT=$O(TPID2(CNT)) Q:CNT=""  D
"RTN","MPIA24",66,0)
 .I CNT=1 S HLA("HLS",3)=TPID2(CNT)
"RTN","MPIA24",67,0)
 .I CNT>1 S HLA("HLS",3,CNT-1)=TPID2(CNT)
"RTN","MPIA24",68,0)
 N LINK,MPILINK
"RTN","MPIA24",69,0)
 S ^XTMP("MPIA24%"_RETAINED,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A24 message for ICN "_RETAINED
"RTN","MPIA24",70,0)
 K HLL("LINKS")
"RTN","MPIA24",71,0)
 N LCNT S LCNT=1
"RTN","MPIA24",72,0)
 ;MPISS = 0 used to identify when the sending site should NOT be included in the list
"RTN","MPIA24",73,0)
 ;MPISS = 1 used to identify when the sending site should be included in the list
"RTN","MPIA24",74,0)
 ;MPISS = 2 used for identifying an ICN ADT-A40 reversal message where only the sending site should be in the list
"RTN","MPIA24",75,0)
 I (ST=SITE&MPISS=1)!(MPISS=2) D LINK^HLUTIL3(ST,.LINK) S MPILINK(ST)="",IEN=$O(LINK(0)),HLL("LINKS",1)="MPI ADT-A24 CLIENT^"_LINK(IEN),LCNT=LCNT+1
"RTN","MPIA24",76,0)
 I ST'=SITE D LINK^HLUTIL3(ST,.LINK) S MPILINK(ST)="",IEN=$O(LINK(0)),HLL("LINKS",1)="MPI ADT-A24 CLIENT^"_LINK(IEN),LCNT=LCNT+1
"RTN","MPIA24",77,0)
 I MPISS'=2 D
"RTN","MPIA24",78,0)
 .;add any systems that have registered an interest in the local ID
"RTN","MPIA24",79,0)
 .N MPISIEN,Z,MPISSITE,MPIX
"RTN","MPIA24",80,0)
 .F MPIX=DEPRECAT,RETAINED D
"RTN","MPIA24",81,0)
 ..S MPISIEN=$O(^MPI(985.5,"AM",MPIX,ST,0))
"RTN","MPIA24",82,0)
 ..I MPISIEN'="" S Z=0 F  S Z=$O(^MPI(985.5,MPISIEN,71,Z)) Q:'Z  D
"RTN","MPIA24",83,0)
 ...N LINK
"RTN","MPIA24",84,0)
 ...S MPISSITE=$P(^MPI(985.5,MPISIEN,71,Z,0),"^") I $G(MPISSITE)>0 D LINK^HLUTIL3(MPISSITE,.LINK) S MPILINK(MPISSITE)="",IEN=$O(LINK(0)),HLL("LINKS",LCNT)="MPI ADT-A24 CLIENT^"_LINK(IEN),LCNT=LCNT+1
"RTN","MPIA24",85,0)
 K HLRESLT D GENERATE^HLMA("MPI ADT-A24 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIA24",86,0)
 ;broadcast an TF update for
"RTN","MPIA24",87,0)
 I MPISS=2 N BCST S BCST=$$BRDCST^MPITFOUT(RETAINED,"REP","ALL","MAD")
"RTN","MPIA24",88,0)
 ;if successful loop through links
"RTN","MPIA24",89,0)
 I HLRESLT'="" S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3)) S MPILINK=0 F  S MPILINK=$O(MPILINK(MPILINK)) Q:'MPILINK  D
"RTN","MPIA24",90,0)
 . S STN=$$STA^XUAF4(MPILINK)
"RTN","MPIA24",91,0)
 . S ^XTMP("MPIA24%"_RETAINED,STN,0)="A^"_HLRESLT
"RTN","MPIA24",92,0)
 . S ^XTMP("MPIA24%"_RETAINED,STN,1)=RETAINED_"%"_SITE_"%"_DEPRECAT_"%"_STN
"RTN","MPIA24",93,0)
 I RESLT="" S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIA24",94,0)
 K HLL("LINKS"),COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS")
"RTN","MPIA24",95,0)
 ; PATCH 31 removed hl7 variable from kill line
"RTN","MPIA24",96,0)
 Q
"RTN","MPIA24",97,0)
 ;
"RTN","MPIA24",98,0)
OLDRES ;No longer used
"RTN","MPIA24",99,0)
 Q
"RTN","MPIA24",100,0)
MSH ;
"RTN","MPIA24",101,0)
 S HLECH=HL("ECH")
"RTN","MPIA24",102,0)
 S HLFS=HL("FS")
"RTN","MPIA24",103,0)
 I $G(HL("SAF"))="" S HL("SAF")=$G(HL("SFN"))
"RTN","MPIA24",104,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIA24",105,0)
 S REP=$E(HL("ECH"),2)
"RTN","MPIA24",106,0)
 S SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA24",107,0)
 S SITE=$$LKUP^XUAF4($P($P(HLNODE,HL("FS"),4),COMP))
"RTN","MPIA24",108,0)
 Q
"RTN","MPIA24",109,0)
PID ;process PID segment
"RTN","MPIA24",110,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","MPIA24",111,0)
 ;Since PID can be over 245 characters loop through setting a PID array
"RTN","MPIA24",112,0)
 ;sequenced PID(1)="PID"... PID(4 or 5) can be over 245 characters so
"RTN","MPIA24",113,0)
 ;it will also loop and place it in PID(4,1...
"RTN","MPIA24",114,0)
 ;
"RTN","MPIA24",115,0)
 ; Input variables
"RTN","MPIA24",116,0)
 ;   assumes that MSG or MSG(I) will contain the PID segment
"RTN","MPIA24",117,0)
 ; Output ARRAY array subscripts
"RTN","MPIA24",118,0)
 ;   SSN - patient SSN
"RTN","MPIA24",119,0)
 ;   ICN - patient ICN
"RTN","MPIA24",120,0)
 ;   DFN - sites local identifier
"RTN","MPIA24",121,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","MPIA24",122,0)
 ;   SEX - patient's SEX
"RTN","MPIA24",123,0)
 ;   MPIDOB - Date of Birth
"RTN","MPIA24",124,0)
 ;   NAME,SURNAME,FIRST,MIDDLE,PREFIX,and SUFFIX - Patient Name
"RTN","MPIA24",125,0)
 ;   MMN - Mother's maiden name
"RTN","MPIA24",126,0)
 ;   POBCITY, POBSTATE - Place of birth city and state
"RTN","MPIA24",127,0)
 ;
"RTN","MPIA24",128,0)
 D PID^MPIADT(.MSG,.ARRAY,.HL)
"RTN","MPIA24",129,0)
 I '$D(ARRAY(13)) S ARRAY(13)="@" D ERROR^MPIA08(.ARRAY,.HL,"Pt with ICN "_ARRAY("ICN")_" is missing SSN at site "_ARRAY("MPISSITE"),209) ;no SSN passed for this patient
"RTN","MPIA24",130,0)
 I ARRAY(13)["P" S ARRAY(13)="@"
"RTN","MPIA24",131,0)
 Q
"RTN","MPIA24",132,0)
RES ;
"RTN","MPIA24",133,0)
 N MSG,SG,MPII,MPIJ,ARRAY,MPIERR,HLFS,HLECH,COMP,REP,SUBCOMP,SITE
"RTN","MPIA24",134,0)
 D HLLOG^MPIMHL($G(HL("ETN"))_"O",$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA24",135,0)
 S MPIERR=""
"RTN","MPIA24",136,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","MPIA24",137,0)
 . S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIA24",138,0)
 . D:SG?2A1(1A,1N) PICK
"RTN","MPIA24",139,0)
 Q
"RTN","MPIA24",140,0)
PICK ;check routine for segment entry point
"RTN","MPIA24",141,0)
 I $T(@SG)]"" D @SG
"RTN","MPIA24",142,0)
 I $T(@SG)="" Q
"RTN","MPIA24",143,0)
 Q
"RTN","MPIA24",144,0)
MSA ;;
"RTN","MPIA24",145,0)
 ;process the MSA segment
"RTN","MPIA24",146,0)
 N ARR,MPIAA,MPIMSG,HLCOMP,MPIX,MPIERR,RETURN,ICN,MPIEVNT,ARRAY,EXIT,SICN,RICN,RICNV,SICNV,MPIY
"RTN","MPIA24",147,0)
 S EXIT=0
"RTN","MPIA24",148,0)
 S MPIAA=MSG
"RTN","MPIA24",149,0)
 S MPIMSG=$P(MPIAA,HL("FS"),3)
"RTN","MPIA24",150,0)
 S MPIERR=$P(MPIAA,HL("FS"),4)
"RTN","MPIA24",151,0)
 S MPIMSG=$$MSG^HLCSUTL(MPIMSG,"RETURN(1)")
"RTN","MPIA24",152,0)
 K MPIMSG
"RTN","MPIA24",153,0)
 S CNT=1,MPIX=0 F  S MPIX=$O(RETURN(1,MPIX)) Q:'MPIX!(EXIT=2)  D
"RTN","MPIA24",154,0)
 . I RETURN(1,MPIX)'="" D
"RTN","MPIA24",155,0)
 .. I $D(MPIMSG) S MPIMSG(CNT)=RETURN(1,MPIX),CNT=CNT+1
"RTN","MPIA24",156,0)
 .. I '$D(MPIMSG) S MPIMSG=RETURN(1,MPIX),MPIY=MPIX
"RTN","MPIA24",157,0)
 . I RETURN(1,MPIX)="" D  S CNT=1 K MPIMSG
"RTN","MPIA24",158,0)
 .. I $E(RETURN(1,MPIY),1,3)="MSH" D MSH
"RTN","MPIA24",159,0)
 .. I $E(RETURN(1,MPIY),1,3)="PID" D
"RTN","MPIA24",160,0)
 ... D PID^MPIADT(.MPIMSG,.ARRAY,.HL)
"RTN","MPIA24",161,0)
 ... I EXIT=0 S SICN=ARRAY("ICN"),SICNV=SICN_"V"_ARRAY("CHKSM")  ;SURVIVING ICN
"RTN","MPIA24",162,0)
 ... I EXIT=1 S RICN=ARRAY("ICN"),RICNV=RICN_"V"_ARRAY("CHKSM")  ;retired ICN
"RTN","MPIA24",163,0)
 ... S EXIT=EXIT+1
"RTN","MPIA24",164,0)
 S ICN=SICN
"RTN","MPIA24",165,0)
 N CNT,COMP S CNT=1,COMP=$E(HL("ECH"),1)
"RTN","MPIA24",166,0)
 ;if error returned from processing site log exception
"RTN","MPIA24",167,0)
 I MPIERR'="" D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234) Q
"RTN","MPIA24",168,0)
 ; ^ **31 added quit after logging exception
"RTN","MPIA24",169,0)
OTHER ; \/ **31 just remove and move OTHER IDs associated with our site
"RTN","MPIA24",170,0)
 ; **35 get TYPE OF TF FACILITY from MPI Site Monitor file
"RTN","MPIA24",171,0)
 N SITET S SITET=$$SITET^MPIA24C($P(HL("SFN"),COMP))
"RTN","MPIA24",172,0)
 ;If not an 'error' ACK move the facility from the Retiring ICN to the surviving ICN
"RTN","MPIA24",173,0)
 I $G(COMP)="" N COMP S COMP=$E(HL("ECH"),1)
"RTN","MPIA24",174,0)
 I $G(CNT)="" N CNT S CNT=1
"RTN","MPIA24",175,0)
 N SITES
"RTN","MPIA24",176,0)
 I RICN'=SICN D
"RTN","MPIA24",177,0)
 .N OID,HIST,TYPE,ERROR,SARR,MPIST,SITEIEN S HIST=0,SITES=$P(HL("SFN"),COMP),SITEIEN=$$IEN^XUAF4(SITES) ; SITEIEN IS THE IEN FOR THE STATION BEING REMOVED
"RTN","MPIA24",178,0)
 .F  S HIST=$O(^MPIVET(RICN,200,HIST)) Q:'HIST  D
"RTN","MPIA24",179,0)
 ..S OID=$G(^MPIVET(RICN,200,HIST,0))
"RTN","MPIA24",180,0)
 ..S TYPE=$P(OID,"^",2),MPI=$P(OID,"^",3) ; TYPE OF ID AND SITE IEN
"RTN","MPIA24",181,0)
 ..Q:MPI'=SITEIEN
"RTN","MPIA24",182,0)
 ..S ERROR=$$DELID^MPIUTL5($P(OID,"^"),TYPE,SITES,RICN) ; REMOVE OTHER ID FROM ICN THAT IS GOING AWAY
"RTN","MPIA24",183,0)
 ..I +ERROR<0 D ERROR^MPIA08(.ARRAY,.HL,ERROR_" for ICN "_RICN,234) Q
"RTN","MPIA24",184,0)
 ..S ERROR=$$SETID^MPIUTL5($P(OID,"^"),TYPE,SITES,SICN) ; SET OTHER ID IN SURVIVING ICN
"RTN","MPIA24",185,0)
 ..I +ERROR<0 D ERROR^MPIA08(.ARRAY,.HL,ERROR_" for ICN "_SICN,234) Q
"RTN","MPIA24",186,0)
 .S SARR("OID",CNT)=RICNV_"^USVHA^"_SITES
"RTN","MPIA24",187,0)
 .N ARR S ICN=RICN,ARR(18)=SICN
"RTN","MPIA24",188,0)
 .;before deleting the Retiring TF check for associations to be moved FROM retiring TF TO the surviving TF
"RTN","MPIA24",189,0)
 .I $D(^MPI(985.5,"AM",SICN,SITES)) D MASSOC^MPIA24C(RICN,SITES) D DEL1TF^MPIUTL9(RICN,SITES) ;**31 delete RICN TF entry for site SITES if SICN already has a TF for SITES
"RTN","MPIA24",190,0)
 .I '$D(^MPI(985.5,"AM",SICN,SITES)) S MPIERR=$$UPDATE^MPIUTL4(ICN,SITES,.ARR) I +MPIERR=-1 D ERROR^MPIA08(.ARRAY,.HL,MPIERR_" SITE="_SITES,234)
"RTN","MPIA24",191,0)
 .;^ **31 Don't move RICN/SITES TF to SICN TF list if SICN/SITES exists already
"RTN","MPIA24",192,0)
 .S MPIERR=$$UPDATE^MPIUTL4(SICN,SITES,.SARR) I +MPIERR=-1 D ERROR^MPIA08(.ARRAY,.HL,MPIERR_" SITE="_SITES,234)
"RTN","MPIA24",193,0)
 S ICN=SICN
"RTN","MPIA24",194,0)
 N RSITE
"RTN","MPIA24",195,0)
 Q:'$D(^MPIVET(RICN,0))
"RTN","MPIA24",196,0)
 S RSITE=$P($G(^MPIVET(RICN,1)),"^",2) I +RSITE>0 S RSITE=$$STA^XUAF4(RSITE)
"RTN","MPIA24",197,0)
 I $D(^XTMP("MPI"_HL("ETN")_"%"_ICN)) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,$P(HL("SFN"),COMP)) I '$O(^XTMP("MPI"_HL("ETN")_"%"_ICN,0)) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,0)
"RTN","MPIA24",198,0)
 ;if no entries in #985.5 point to the RETIRING entry in #985 deactivate retired ICN
"RTN","MPIA24",199,0)
 I '$O(^MPI(985.5,"ZZICN",RICN,0)) N ARR S ARR("FID")="@",MPIERR=$$UPDATE^MPIUTL4(RICN,RSITE,.ARR)
"RTN","MPIA24",200,0)
 ;**35 Need to check to see if site should be added to other site association and/or as a TF
"RTN","MPIA24",201,0)
 N SIEN,RES
"RTN","MPIA24",202,0)
 S SIEN=$$IEN^XUAF4($P(HL("SFN"),COMP))
"RTN","MPIA24",203,0)
 I '$D(^MPI(985.5,"AM",ICN,SIEN))&(SITET'="AS") S RES=$$ADDTF^MPIUTL9(SIEN,+ICN,,ARRAY("DFN"))
"RTN","MPIA24",204,0)
 ; I SITET="AS" OR SITET="BT" ASSOCATION WOULD ALREADY BE PRESENT NO NEED TO ADD AGAIN
"RTN","MPIA24",205,0)
 Q
"RTN","MPIA24C")
0^228^B1685333
"RTN","MPIA24C",1,0)
MPIA24C ;BPIFO/DLR-A24 BUILDING ROUTINE CONTINUED;5 MARCH 02
"RTN","MPIA24C",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**35**;30 Apr 99
"RTN","MPIA24C",3,0)
 ;
"RTN","MPIA24C",4,0)
MASSOC(RICN,SITES) ;move association from retiring ICN to retained ICN
"RTN","MPIA24C",5,0)
 S MPISIEN=$O(^MPI(985.5,"AM",RICN,SITES,0))
"RTN","MPIA24C",6,0)
 I MPISIEN'="" S Z=0 F  S Z=$O(^MPI(985.5,MPISIEN,71,Z)) Q:'Z  D
"RTN","MPIA24C",7,0)
 .N SASS S SASS=$$STA^XUAF4($P(^MPI(985.5,MPISIEN,71,Z,0),"^"))
"RTN","MPIA24C",8,0)
 .S RES=$$ADDSTAS^MPIUTL11(+SICN,$$STA^XUAF4(SITES),SASS) I $P(RES,"^",2)'="" D ERROR^MPIA08(.ARRAY,.HL,$P(RES,"^",2),234)
"RTN","MPIA24C",9,0)
 Q
"RTN","MPIA24C",10,0)
SITET(SSITE) ; This API will return the TYPE OF TF FACILITY (#80) from the MPI SITE MONITOR file (#985.3)
"RTN","MPIA24C",11,0)
 ;Input parameter: SSITE = station number of site that sent msg
"RTN","MPIA24C",12,0)
 ;Returned: Type (TF, AS, BT) or -1^error message
"RTN","MPIA24C",13,0)
 ;
"RTN","MPIA24C",14,0)
 N IEN,TYPE
"RTN","MPIA24C",15,0)
 Q:'$D(^MPI(985.3,"S",SSITE)) "-1^No such site in MPI Site Monitor File"
"RTN","MPIA24C",16,0)
 S IEN=$O(^MPI(985.3,"S",SSITE,""))
"RTN","MPIA24C",17,0)
 Q:'$D(^MPI(985.3,IEN)) "-1^No such site in MPI Site Monitor File"
"RTN","MPIA24C",18,0)
 S TYPE=$P($G(^MPI(985.3,IEN,99)),"^",2)
"RTN","MPIA24C",19,0)
 I TYPE="" S TYPE="TF"
"RTN","MPIA24C",20,0)
 Q TYPE
"RTN","MPIA24D")
0^5^B53023832
"RTN","MPIA24D",1,0)
MPIA24D ;BIOFO/DLR,CML-ROUTINE USED TO RESOLVED DUPLICATES USING HL7 A24 MSGS ;10/3/02
"RTN","MPIA24D",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,24,35**;30 Apr 99
"RTN","MPIA24D",3,0)
 ;
"RTN","MPIA24D",4,0)
 D DUP^MPIRUTLI I QFLG K QFLG Q
"RTN","MPIA24D",5,0)
 ;
"RTN","MPIA24D",6,0)
CHKICN ;
"RTN","MPIA24D",7,0)
 N ICN,X,LINE,X,PRIM,RESLIST,MPIX,MPIY
"RTN","MPIA24D",8,0)
 N ARR,ERR,MPIARR,NAME,NODE,RES
"RTN","MPIA24D",9,0)
 S $P(LINE,"-",81)=""
"RTN","MPIA24D",10,0)
 S ICN=$$ASK^MPIA43() I +$G(ICN)'>0 Q  ;**24 changed ASK PT call
"RTN","MPIA24D",11,0)
 ;identify potential duplicates for this ICN
"RTN","MPIA24D",12,0)
 S NODE=$G(^MPIVET(ICN,0)) I $D(NODE)  D
"RTN","MPIA24D",13,0)
 .S MPIARR(1)=$P(NODE,"^",2),MPIARR(2)=$P(NODE,"^",3),MPIARR(3)=$P(NODE,"^",4),MPIARR(5)=$P(NODE,"^",6)
"RTN","MPIA24D",14,0)
 .S MPIARR(4)=$P(NODE,"^",5),MPIARR(7)=$P(NODE,"^",8),MPIARR(13)=$P(NODE,"^",14)
"RTN","MPIA24D",15,0)
 .S NAME=$$FMNAME^HLFNC(MPIARR(1)_"^"_MPIARR(2)_"^"_MPIARR(3)_"^"_MPIARR(4)_"^"_MPIARR(5),"^")
"RTN","MPIA24D",16,0)
 .S RES="ARR" D TRY^MPIC(NAME,MPIARR(13),MPIARR(7),RES)
"RTN","MPIA24D",17,0)
 D DUPCHK^MPIMDMA1(.ARR,.ERR,ICN) ;**24 find T and P entries - ssn dups
"RTN","MPIA24D",18,0)
 ;if errors process error and quit
"RTN","MPIA24D",19,0)
 I $D(ERR)&'$O(ARR(0)) W !,$P(ERR,"^",2) Q
"RTN","MPIA24D",20,0)
 N MPIDUP,MPIX S MPIDUP=0 S MPIX=0 F  S MPIX=$O(ARR(MPIX)) Q:'MPIX  I MPIX'=ICN S MPIDUP=1
"RTN","MPIA24D",21,0)
 I MPIDUP=0 W !,"No duplicates with ID STATE of Permanent and/or Temporary found, no action necessary!" Q
"RTN","MPIA24D",22,0)
 ;display the duplicate ICN's and identify the primary (retained) ICN
"RTN","MPIA24D",23,0)
 S PRIM=$$PRIMARY(.ARR,LINE)
"RTN","MPIA24D",24,0)
 S ARR("PRIMARY",PRIM)=""
"RTN","MPIA24D",25,0)
 Q:PRIM="^"
"RTN","MPIA24D",26,0)
 D RESOLVE(PRIM,.ARR,LINE)
"RTN","MPIA24D",27,0)
 Q:'$D(ARR("LINK"))  ;UP ARROW'D OUT QUIT
"RTN","MPIA24D",28,0)
 ;
"RTN","MPIA24D",29,0)
LOOP ;Loop on the ARR("LINKS" array to link the ICN(s) to the Primary ICN
"RTN","MPIA24D",30,0)
 W ! N NXT,DIFF,PRIM S DIFF="",PRIM=$O(ARR("PRIMARY",""))
"RTN","MPIA24D",31,0)
 S MPIX=0 F  S MPIX=$O(ARR("LINK",MPIX)) Q:'MPIX  D
"RTN","MPIA24D",32,0)
 . I $D(ARR("TF COMMON",MPIX)) W !!,"CAN'T Merge from MPI - ICNs have TFs in common" H 2 Q
"RTN","MPIA24D",33,0)
 .I $D(ARR("U",MPIX)) D
"RTN","MPIA24D",34,0)
 ..S DIFF=""
"RTN","MPIA24D",35,0)
 ..F NXT=8,9,10,11 I $P(ARR(MPIX),"^",NXT)'="" S DIFF=DIFF_$P(ARR(MPIX),"^",NXT)_"  "
"RTN","MPIA24D",36,0)
 ..W !,"There are differences in Key Data Field(s): "
"RTN","MPIA24D",37,0)
 ..W !,?3,DIFF
"RTN","MPIA24D",38,0)
 ..W !!,?5,"Primary ICN: "_PRIM,?38,"Matching ICN: "_MPIX
"RTN","MPIA24D",39,0)
 ..W !,?8,"NAME: "_$P(ARR(PRIM),"^",1),?40,"NAME: "_$P(ARR(MPIX),"^",1)
"RTN","MPIA24D",40,0)
 ..W !,?8,"SSN: "_$P(ARR(PRIM),"^",2),?40,"SSN: "_$P(ARR(MPIX),"^",2)
"RTN","MPIA24D",41,0)
 ..W !,?8,"DOB: "_$$FMTE^XLFDT($P(ARR(PRIM),"^",3),"D"),?40,"DOB: "_$$FMTE^XLFDT($P(ARR(MPIX),"^",3),"D")
"RTN","MPIA24D",42,0)
 ..W !,?8,"SEX: "_$P(ARR(PRIM),"^",5),?40,"SEX: "_$P(ARR(MPIX),"^",5)
"RTN","MPIA24D",43,0)
 ..W !!
"RTN","MPIA24D",44,0)
 .K DIR,Y,DIRUT,DUOUT,DIROUT S DIR("A")="Are you sure you want to link ICN "_MPIX_" to ICN "_PRIM,DIR("B")="No",DIR(0)="YO" D ^DIR S ANS=Y K Y,DIR,DIRUT,DUOUT,DIROUT
"RTN","MPIA24D",45,0)
 . I +ANS>0 D LINK^MPIA24(PRIM,MPIX,"","","") D
"RTN","MPIA24D",46,0)
 ..; ** 24
"RTN","MPIA24D",47,0)
 ..; set ID state for the "FROM" ICN to Deactivated to avoid anyone matching to this ICN while LINK is in process.
"RTN","MPIA24D",48,0)
 ..;Set the ID State to DEACTIVATED using API
"RTN","MPIA24D",49,0)
 ..N ST,RET S ST="D" S RET=$$SETSTATE^MPISIUT(MPIX,ST)
"RTN","MPIA24D",50,0)
 Q
"RTN","MPIA24D",51,0)
 ;
"RTN","MPIA24D",52,0)
RESOLVE(ICN,ARR,LINE) ;identify ICN's to resolve into the primary ICN
"RTN","MPIA24D",53,0)
 N NAME,FIRST,X,Y,MPI1N,CNT,ANS,MPI,ALL,ANS,STA,PRE,FRST,MID,SUR,SUF
"RTN","MPIA24D",54,0)
 W @IOF
"RTN","MPIA24D",55,0)
 W !,"The following display is broken into three sections."
"RTN","MPIA24D",56,0)
 W !,"PRIMARY or RETAINED ICN: ICN selected to remain on the MPI."
"RTN","MPIA24D",57,0)
 ;W !,"UNMATCHABLE ICN(s)     : ICN(s) that are unmatchable due to any inconsistent"
"RTN","MPIA24D",58,0)
 ;W !,"                         data element(s) with the Primary ICN."
"RTN","MPIA24D",59,0)
 ;**24 removing unmatchables section -- all SSN dups are matchable now
"RTN","MPIA24D",60,0)
 W !,"MATCHABLE ICN(s)       : ICN(s) selectable for linking to the Primary ICN."
"RTN","MPIA24D",61,0)
 W !!,?4,"ICN",?16,"Sta#",?21,"Patient Name",?56,"SSN",?63,"Sex",?71,"DOB",!,LINE
"RTN","MPIA24D",62,0)
 W !,"PRIMARY or RETAINED ICN:"
"RTN","MPIA24D",63,0)
 W !,?4,ICN,?16,$P(ARR(ICN),"^",4),?21,$E($P(ARR(ICN),"^"),1,30),?53,$P(ARR(ICN),"^",2),?64,$P(ARR(ICN),"^",5),?67,$$FMTE^XLFDT($P(ARR(ICN),"^",3))
"RTN","MPIA24D",64,0)
 W !,"MATCHABLE ICN(s):"
"RTN","MPIA24D",65,0)
 I '$D(ARR("S")) D
"RTN","MPIA24D",66,0)
 . W !?4,"None",!
"RTN","MPIA24D",67,0)
 . K Y,DTOUT,DUOUT,DIROUT S DIR(0)="E",DIR("A")="No Duplicates to resolve at this time, press return to continue" D ^DIR K Y,DTOUT,DUOUT,DIROUT
"RTN","MPIA24D",68,0)
 I $D(ARR("S")) D
"RTN","MPIA24D",69,0)
 . S CNT=1,X=0 F  S X=$O(ARR("S",X)) Q:'X  D
"RTN","MPIA24D",70,0)
 .. S MPI(CNT)=X
"RTN","MPIA24D",71,0)
 .. W !,$J(CNT,2)_".",?4,X,?16,$P(ARR(X),"^",4),?21,$E($P(ARR(X),"^"),1,30),?53,$P(ARR(X),"^",2),?64,$P(ARR(X),"^",5),?67,$$FMTE^XLFDT($P(ARR(X),"^",3)) S CNT=CNT+1 D
"RTN","MPIA24D",72,0)
 ...;**35 enforce the one and only one rule if it is a VAMC (i.e. not a OTHER facility type)
"RTN","MPIA24D",73,0)
 ...I $D(^MPI(985.5,"AM",ICN,$$IEN^XUAF4($P(ARR(X),"^",4)))) I $$GET1^DIQ(4,$$IEN^XUAF4($P(ARR(X),"^",4))_",",13,"E")'="OTHER" S ARR("TF COMMON",X)=""
"RTN","MPIA24D",74,0)
 ...;loop through File #985.5
"RTN","MPIA24D",75,0)
 ... S (FIRST,Y)=0 F  S Y=$O(^MPI(985.5,"ZZICN",X,Y)) Q:'Y  S MPI1N=$G(^MPI(985.5,Y,1)) I $P($G(ARR(X)),"^",4)'=$P($G(^MPI(985.5,Y,0)),"^") D 
"RTN","MPIA24D",76,0)
 .... I FIRST=0 S FIRST=1 W !,?4,"Associated Facilities:"
"RTN","MPIA24D",77,0)
 .... S PRE=$P(MPI1N,"^",5),FRST=$P(MPI1N,"^",3),MID=$P(MPI1N,"^",4),SUR=$P(MPI1N,"^",2),SUF=$P(MPI1N,"^",6)
"RTN","MPIA24D",78,0)
 .... S NAME=PRE_$S(PRE="":"",1:" ")_FRST_" "_MID_$S(MID="":"",1:" ")_SUR_$S(SUF="":"",1:" ")_SUF
"RTN","MPIA24D",79,0)
 .... W !,?16,$$STA^XUAF4($P($G(^MPI(985.5,Y,0)),"^")),?21,$E(NAME,1,30),?53,$P(MPI1N,"^",14),?64,$P(MPI1N,"^",13),?67,$$FMTE^XLFDT($P(MPI1N,"^",8))
"RTN","MPIA24D",80,0)
 ....;**35 enforce the one and only one rule if it is a VAMC (i.e. not a OTHER facility type
"RTN","MPIA24D",81,0)
 .... I $D(^MPI(985.5,"AM",ICN,$P($G(^MPI(985.5,Y,0)),"^"))) I $$GET1^DIQ(4,$P($G(^MPI(985.5,Y,0)),"^")_",",13,"E")'="OTHER" S ARR("TF COMMON",$P(^MPI(985.5,Y,0),"^"))=""
"RTN","MPIA24D",82,0)
 . I CNT>2 W !,$J(CNT,2)_".",?4,"ALL"
"RTN","MPIA24D",83,0)
 . I CNT=2 S CNT=1
"RTN","MPIA24D",84,0)
 . W !
"RTN","MPIA24D",85,0)
 . K Y,DTOUT,DUOUT,DIRUT,DIROUT S DIR("A")="Select ICN(s) to link to ICN "_ICN,DIR(0)="L^1:"_CNT D ^DIR S ANS=Y K Y,DTOUT,DUOUT,DIRUT,DIROUT,DIR I +ANS>0 D
"RTN","MPIA24D",86,0)
 .. S ALL=0 F X=1:1:$L(ANS,",")-1 D  Q:ALL=1
"RTN","MPIA24D",87,0)
 ... I $P(ANS,",",X)=CNT S ALL=1 S Y=0 F  S Y=$O(MPI(Y)) Q:'Y  S ARR("LINK",MPI(Y))=""
"RTN","MPIA24D",88,0)
 ... I $P(ANS,",",X)'=CNT S ARR("LINK",MPI($P(ANS,",",X)))=""
"RTN","MPIA24D",89,0)
 . I ANS="^" K ARR("LINK")
"RTN","MPIA24D",90,0)
 Q
"RTN","MPIA24D",91,0)
 ;
"RTN","MPIA24D",92,0)
PRIMARY(ARR,LINE) ;Display duplicates and request user to pick primary
"RTN","MPIA24D",93,0)
 N ICN,X,CNT,MPIZN,NAME,SSN,CMOR,MPI,SEX,MMN,DOB,DIR,DIRUT,X,Y,ANS,PRE,FRST,MID,SUR,SUF,CMORNM,CMORIEN,MATNAME,IDS,AGAIN,TMP,STOP
"RTN","MPIA24D",94,0)
 W !!,"Duplicated ICNs:",!,?6,"ICN",?20,"SSN",?30,"Patient Name",?60,"CMOR",!,LINE
"RTN","MPIA24D",95,0)
 S (CNT,ICN)=0 F  S ICN=$O(ARR(ICN)) Q:'ICN  I $D(^MPIVET(ICN,0)) D
"RTN","MPIA24D",96,0)
 . S MPIZN=^MPIVET(ICN,0),SSN=$P(MPIZN,"^",14),DOB=$P(MPIZN,"^",8),SEX=$P(MPIZN,"^",13),MMN=$P(MPIZN,"^",7)
"RTN","MPIA24D",97,0)
 . S PRE=$P(MPIZN,"^",5),FRST=$P(MPIZN,"^",3),MID=$P(MPIZN,"^",4),SUR=$P(MPIZN,"^",2),SUF=$P(MPIZN,"^",6)
"RTN","MPIA24D",98,0)
 . S NAME=PRE_$S(PRE="":"",1:" ")_FRST_" "_MID_$S(MID="":"",1:" ")_SUR_$S(SUF="":"",1:" ")_SUF
"RTN","MPIA24D",99,0)
 . S MATNAME=FRST_"~"_SUR
"RTN","MPIA24D",100,0)
 . S CMORIEN=$$GET1^DIQ(985,+ICN_",",16,"I") I +CMORIEN>0 S CMOR=$P($$NS^XUAF4(CMORIEN),"^",2),CMORNM=$P($$NS^XUAF4(CMORIEN),"^")
"RTN","MPIA24D",101,0)
 . S IDS=$$IDS^MPISIUT(ICN)
"RTN","MPIA24D",102,0)
 . S CNT=CNT+1 S MPI(CNT)=ICN_"^"_$P(IDS,"^"),ARR(ICN)=NAME_"^"_SSN_"^"_DOB_"^"_CMOR_"^"_SEX_"^"_MMN_"^"_MATNAME
"RTN","MPIA24D",103,0)
 . W !,$J(CNT,2)_".",?4,ICN," ("_$P(IDS,"^")_") ",?19,SSN,?30,NAME,?60,$E(CMORNM,1,22)
"RTN","MPIA24D",104,0)
 W !
"RTN","MPIA24D",105,0)
AGAIN S DIR(0)="NA^1:"_CNT,DIR("A")="Select ICN to be retained on MPI: " D ^DIR
"RTN","MPIA24D",106,0)
 S ANS=X W "  ",$S(+ANS>0:$P(MPI(ANS),"^"),1:"")
"RTN","MPIA24D",107,0)
 S AGAIN=0,STOP=0
"RTN","MPIA24D",108,0)
 I +ANS>0,$P(MPI(ANS),"^",2)="T" D  I AGAIN=1 G AGAIN
"RTN","MPIA24D",109,0)
 . ; check to see if any of the FROM records are P
"RTN","MPIA24D",110,0)
 . N TMP S TMP=0
"RTN","MPIA24D",111,0)
 . F  S TMP=$O(MPI(TMP)) Q:TMP=""!(AGAIN=1)  D
"RTN","MPIA24D",112,0)
 .. I TMP'=ANS,$P(MPI(TMP),"^",2)="P" W !!,"Can't have the TO record have an ID state of Temporary and the FROM record have an ID state of Permanent",! S AGAIN=1
"RTN","MPIA24D",113,0)
 ..; ** 24 ^ check ID state for TO record ID state=T with FROM record ID state=P
"RTN","MPIA24D",114,0)
 ..I TMP'=ANS,$P(MPI(TMP),"^",2)="T" W !!,"Can't merge together ICNs with an ID state of Temporary",! S STOP=1 H 3
"RTN","MPIA24D",115,0)
 I STOP=1 S ANS=0
"RTN","MPIA24D",116,0)
 ;identify and mark matchable (matching primary NAME,SSN,SEX,DOB) ICN's
"RTN","MPIA24D",117,0)
 I +ANS>0 S ICN=0 F  S ICN=$O(ARR(ICN)) Q:'ICN  I ICN'=$P(MPI(ANS),"^") D
"RTN","MPIA24D",118,0)
 . S MPI(ANS)=$P(MPI(ANS),"^")
"RTN","MPIA24D",119,0)
 . I $P(ARR(ICN),"^",7)'=$P(ARR(MPI(ANS)),"^",7) S $P(ARR(ICN),"^",8)="NAME MISMATCH" S ARR("U",ICN)=""
"RTN","MPIA24D",120,0)
 . I $P(ARR(ICN),"^",2)'=$P(ARR(MPI(ANS)),"^",2) S $P(ARR(ICN),"^",9)="SSN MISMATCH" S ARR("U",ICN)=""
"RTN","MPIA24D",121,0)
 . I $P(ARR(ICN),"^",5)'=$P(ARR(MPI(ANS)),"^",5) S $P(ARR(ICN),"^",10)="SEX MISMATCH" S ARR("U",ICN)=""
"RTN","MPIA24D",122,0)
 . I $P(ARR(ICN),"^",3)'=$P(ARR(MPI(ANS)),"^",3) S $P(ARR(ICN),"^",11)="DOB MISMATCH" S ARR("U",ICN)=""
"RTN","MPIA24D",123,0)
 . ;I '$D(ARR("U",ICN)) S ARR("S",ICN)=""
"RTN","MPIA24D",124,0)
 . S ARR("S",ICN)=""
"RTN","MPIA24D",125,0)
 Q $S(+ANS>0:MPI(ANS),1:"^")
"RTN","MPIA24E")
0^229^B5306139
"RTN","MPIA24E",1,0)
MPIA24E ;BPIFO/DLR-A24 ROUTINE EXTENDED ;7 MARCH 2005
"RTN","MPIA24E",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**35**;30 Apr 99
"RTN","MPIA24E",3,0)
 ;
"RTN","MPIA24E",4,0)
DA24(ICN,SITE,ICN2,SITE2,ST,RESLT) ;
"RTN","MPIA24E",5,0)
 N CNT,MPI,EVN,TCNT,PD1,TPID,IEN,ERR,LINK,TPID2,STN
"RTN","MPIA24E",6,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIA24E",7,0)
 S CNT=1
"RTN","MPIA24E",8,0)
 D INIT^HLFNC2("MPI ADT-A24 SERVER",.HL)
"RTN","MPIA24E",9,0)
 I $O(HL(""))="" S RESLT="-1^"_$P(HL,"^",2) Q
"RTN","MPIA24E",10,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA24E",11,0)
 S ERR="",TCNT=0
"RTN","MPIA24E",12,0)
 D BLDEVN^MPIPIDB(ICN,.EVN,.HL,"A24",.ERR)
"RTN","MPIA24E",13,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24E",14,0)
 D BLDPID^MPIPIDB(ICN,SITE,1,"1,3,5,6,7,8,11,29",.TPID,.HL,.ERR)
"RTN","MPIA24E",15,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24E",16,0)
 D BLDPID^MPIPIDB(ICN2,SITE2,2,"1,3,5,6,7,8,11,29",.TPID2,.HL,.ERR)
"RTN","MPIA24E",17,0)
 ; **35 changes ST to SITE2 in 2nd call to BLDPID above
"RTN","MPIA24E",18,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24E",19,0)
 D BLDPD1^MPIPIDB(ICN,"3",.PD1,.HL,.ERR)
"RTN","MPIA24E",20,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA24E",21,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIA24E",22,0)
 S HLA("HLS",4)=PD1(1)
"RTN","MPIA24E",23,0)
 S CNT=0 F  S CNT=$O(TPID(CNT)) Q:CNT=""  D
"RTN","MPIA24E",24,0)
 .I CNT=1 S HLA("HLS",2)=TPID(CNT)
"RTN","MPIA24E",25,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=TPID(CNT)
"RTN","MPIA24E",26,0)
 S CNT=0 F  S CNT=$O(TPID2(CNT)) Q:CNT=""  D
"RTN","MPIA24E",27,0)
 .I CNT=1 S HLA("HLS",3)=TPID2(CNT)
"RTN","MPIA24E",28,0)
 .I CNT>1 S HLA("HLS",3,CNT-1)=TPID2(CNT)
"RTN","MPIA24E",29,0)
 S ^XTMP("MPIA24%"_ICN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A24 message for ICN "_ICN
"RTN","MPIA24E",30,0)
 K HLL("LINKS")
"RTN","MPIA24E",31,0)
 D LINK^HLUTIL3(ST,.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="MPI ADT-A24 CLIENT^"_LINK(IEN)
"RTN","MPIA24E",32,0)
 K HLRESLT D GENERATE^HLMA("MPI ADT-A24 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIA24E",33,0)
 I HLRESLT'="" S STN=$$STA^XUAF4(ST),RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3)),^XTMP("MPIA24%"_ICN,STN,0)="A^"_HLRESLT,^XTMP("MPIA24%"_ICN,STN,1)=ICN_"%"_SITE_"%"_ICN2_"%"_STN
"RTN","MPIA24E",34,0)
 I RESLT="" S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIA24E",35,0)
 K HLL("LINKS"),COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS")
"RTN","MPIA24E",36,0)
 ; PATCH 31 removed hl7 variable from kill line
"RTN","MPIA24E",37,0)
 Q
"RTN","MPIA24E",38,0)
 ;
"RTN","MPIA24P")
0^6^B3621628
"RTN","MPIA24P",1,0)
MPIA24P ;BPOFO/CMC-A24 PROCESSING INBOUND ROUTINE ;22 JUL 02
"RTN","MPIA24P",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,23**;30 Apr 99
"RTN","MPIA24P",3,0)
 ;
"RTN","MPIA24P",4,0)
 ;
"RTN","MPIA24P",5,0)
A24 ;
"RTN","MPIA24P",6,0)
 ;redirect acks to the ack processing routine
"RTN","MPIA24P",7,0)
 I HL("MTN")="ACK" D RES^MPIA24 Q
"RTN","MPIA24P",8,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA24P",9,0)
 ;
"RTN","MPIA24P",10,0)
 N MPII,MPIJ,ARR,SEG,CNT,ERR,SITE,MSG,IEN
"RTN","MPIA24P",11,0)
 S (CNT,ERR)=1
"RTN","MPIA24P",12,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE D
"RTN","MPIA24P",13,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIA24P",14,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIA24P",15,0)
 .I SEG="MSH" D MSH^MPIA31(.ARR,.MSG) Q
"RTN","MPIA24P",16,0)
 .I SEG="EVN" D EVN^MPIA31(.ARR,.MSG) Q
"RTN","MPIA24P",17,0)
 .I SEG="PID" D PID^MPIA31(.ARR,.MSG) Q
"RTN","MPIA24P",18,0)
 .I SEG="PD1" D PD1^MPIA31(.ARR,.MSG) Q
"RTN","MPIA24P",19,0)
 N MPIFS,MPIMID,MPIIENS,MPIEID,MPIEIDS
"RTN","MPIA24P",20,0)
 S SITE=ARR("SITE"),MPIFS=HL("FS"),MPIMID=HL("MID"),MPIIENS=HLMTIENS,MPIEID=HL("EID"),MPIEIDS=HL("EIDS")
"RTN","MPIA24P",21,0)
 S ARR("DLUP")=$$FMTE^XLFDT($$HL7TFM^XLFDT($G(HL("DTM"))))
"RTN","MPIA24P",22,0)
 ; ^ convert to external date from HL7 format via FM format
"RTN","MPIA24P",23,0)
 S ERR="",ERR=$$UPDATE^MPIUTL4(ARR("ICN"),ARR("MPISSITE"),.ARR)
"RTN","MPIA24P",24,0)
 S HL("FS")=MPIFS,HL("MID")=MPIMID,HL("EIDS")=MPIEIDS,HL("EID")=MPIEID,HLMTIENS=MPIIENS K HLA("HLA")
"RTN","MPIA24P",25,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIA24P",26,0)
 D LINK^HLUTIL3(SITE,.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIA24P",27,0)
 S $P(HLA("HLA",1),HL("FS"),7)="DFN="_ARR("DFN")
"RTN","MPIA24P",28,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","MPIA24P",29,0)
 K LINK
"RTN","MPIA24P",30,0)
 Q
"RTN","MPIA28")
0^7^B6190893
"RTN","MPIA28",1,0)
MPIA28 ;BPFO/CMC-ADD NEW PATIENT TO MPI ;5 MAR 02
"RTN","MPIA28",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,16,21,27,24,35**;30 Apr 99
"RTN","MPIA28",3,0)
 ;
"RTN","MPIA28",4,0)
PROC ;
"RTN","MPIA28",5,0)
 N MPII,MPIJ,SEG,CNT,ERR,MSG,ICN,TSITE,IEN,TICN,SITE,RESULT,CMOR,COMP,MPIFS,MPIMID
"RTN","MPIA28",6,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA28",7,0)
 S CNT=1,ERR="",COMP=$E(HL("ECH"),1),MPIFS=HL("FS"),MPIMID=HL("MID")
"RTN","MPIA28",8,0)
 K TSITE,ARR
"RTN","MPIA28",9,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SEG=$E(HLNODE,1,3) D
"RTN","MPIA28",10,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIA28",11,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIA28",12,0)
 .I SEG="MSH" D MSH^MPIA31(.ARR,.MSG) Q
"RTN","MPIA28",13,0)
 .I SEG="EVN" D EVN^MPIA31(.ARR,.MSG) S MPIWHO=$P(MSG,HL("FS"),6) D FORM(.MPIWHO)  ;**21**
"RTN","MPIA28",14,0)
 .I SEG="PID" M MSG=HLNODE D PID^MPIA31(.ARR,.MSG) Q
"RTN","MPIA28",15,0)
 .I SEG="PD1" D PD1^MPIA31(.ARR,.MSG) Q
"RTN","MPIA28",16,0)
 S TSITE=ARR("SITE")
"RTN","MPIA28",17,0)
 ;I '$D(ARR(13)) S ARR(13)="" D ERROR^MPIA08(.ARR,.HL,"Pt with ICN "_ARR("ICN")_" is missing SSN at site "_ARR("MPISSITE"),209) ;no SSN passed for this patient
"RTN","MPIA28",18,0)
 I $D(ARR(13)),ARR(13)="" S MPIMFLG=1 ; no SSN at site for pt **24
"RTN","MPIA28",19,0)
 I '$D(ARR(13)) S ARR(13)="" S MPIMFLG=1 ;no SSN at site for pt **24
"RTN","MPIA28",20,0)
 I ARR(13)["P" S ARR(13)="@"
"RTN","MPIA28",21,0)
 S ICN="",TICN=""
"RTN","MPIA28",22,0)
 ;kill arr(16) to prevent changing CMOR
"RTN","MPIA28",23,0)
 K ARR(16)
"RTN","MPIA28",24,0)
 ;I ARR(7)="" K ARR(7) ; no date of birth *27 - next patch should log exception but create ICN with id state temporary and return icn to site.
"RTN","MPIA28",25,0)
 ;;I ARR(7)="" S MPIMFLG=1 ; no DOB at site for pt **24
"RTN","MPIA28",26,0)
 N TDFN S TDFN=ARR("DFN")
"RTN","MPIA28",27,0)
 S ICN=$$ADDVET^MPIUTL3(ARR("SS"),.ARR)
"RTN","MPIA28",28,0)
 ;
"RTN","MPIA28",29,0)
 S ERR=ICN,HL("FS")=MPIFS,HL("MID")=MPIMID
"RTN","MPIA28",30,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIA28",31,0)
 S $P(HLA("HLA",1),HL("FS"),7)="DFN="_TDFN
"RTN","MPIA28",32,0)
 D LINK^HLUTIL3(TSITE,.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIA28",33,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","MPIA28",34,0)
 K LINK,MPIWHO
"RTN","MPIA28",35,0)
 ;
"RTN","MPIA28",36,0)
 I +$G(ERR)'>1 D ERROR^MPIA08(.ARR,.HL,ERR,234) K ARR Q
"RTN","MPIA28",37,0)
 ; ^ error, didn't add PT
"RTN","MPIA28",38,0)
 ;
"RTN","MPIA28",39,0)
 ; added patient send A24 back
"RTN","MPIA28",40,0)
 S ERR=""
"RTN","MPIA28",41,0)
 D DA24^MPIA24(ICN,TSITE,ICN,TSITE,TSITE,.ERR,ARR("DFN"),ARR("DFN"),1)
"RTN","MPIA28",42,0)
 I +ERR=-1 D ERROR^MPIA08(.ARR,.HL,$P(ERR,"^",2),234)
"RTN","MPIA28",43,0)
 K ARR ;**21**
"RTN","MPIA28",44,0)
 Q
"RTN","MPIA28",45,0)
FORM(WHO) ;FORMATING THE NAME THAT CAME IN ON THE EVN SEGMENT **21**
"RTN","MPIA28",46,0)
 N COMP,LAST,FIRST,MID,SUF,PRE
"RTN","MPIA28",47,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIA28",48,0)
 S LAST=$P(WHO,COMP,2),FIRST=$P(WHO,COMP,3),MID=$P(WHO,COMP,4),SUF=$P(WHO,COMP,5),PRE=$P(WHO,COMP,6)
"RTN","MPIA28",49,0)
 S WHO=LAST_","
"RTN","MPIA28",50,0)
 I FIRST'="" S WHO=WHO_FIRST
"RTN","MPIA28",51,0)
 I MID'="" S WHO=WHO_" "_MID
"RTN","MPIA28",52,0)
 I SUF'="" S WHO=WHO_" "_SUF
"RTN","MPIA28",53,0)
 I PRE'="" S WHO=WHO_" "_PRE
"RTN","MPIA28",54,0)
 Q
"RTN","MPIA31")
0^8^B13872582
"RTN","MPIA31",1,0)
MPIA31 ;BPOFO/CMC-A31 PROCESSING ROUTINE ;11 Feb 02
"RTN","MPIA31",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,16,21,29,24**;30 Apr 99
"RTN","MPIA31",3,0)
 ;
"RTN","MPIA31",4,0)
 ;
"RTN","MPIA31",5,0)
PROC ;
"RTN","MPIA31",6,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA31",7,0)
 N MPII,MPIJ,ARR,SEG,CNT,ERR,SITE,MSG,IEN,CARR
"RTN","MPIA31",8,0)
 S (CNT,ERR)=1
"RTN","MPIA31",9,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE D
"RTN","MPIA31",10,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIA31",11,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIA31",12,0)
 .I SEG="MSH" D MSH(.ARR,.MSG) Q
"RTN","MPIA31",13,0)
 .I SEG="EVN" D EVN(.ARR,.MSG) Q
"RTN","MPIA31",14,0)
 .I SEG="PID" D PID(.ARR,.MSG) Q
"RTN","MPIA31",15,0)
 .I SEG="PD1" D PD1(.CARR,.MSG) Q
"RTN","MPIA31",16,0)
 .I SEG="ZPD" D ZPD(.ARR,.MSG) Q
"RTN","MPIA31",17,0)
 S SITE=ARR("SITE"),ARR("CMOR")=CARR("CMOR") ;**29
"RTN","MPIA31",18,0)
 S ARR("DLUP")=$$FMTE^XLFDT($$HL7TFM^XLFDT($G(HL("DTM"))))
"RTN","MPIA31",19,0)
 ; ^ convert to external date from HL7 format via FM format
"RTN","MPIA31",20,0)
 S ERR=$$CHECK(.ARR,.CARR)
"RTN","MPIA31",21,0)
 ;reestablish ICN if ICN is not a local and is active at the site
"RTN","MPIA31",22,0)
 I ERR="-1^No such ICN" I $E(ARR("ICN"),1,2)=10 N ICNCS S ICNCS=ARR("ICN")_"V"_$$CHECKDG^MPIUTL(ARR("ICN")) S ^MPIVET(ARR("ICN"),0)=ICNCS,^MPIVET("B",ICNCS,ARR("ICN"))="" D
"RTN","MPIA31",23,0)
 . N MPISIEN S MPISIEN=$$IEN^XUAF4(CARR(16)) S $P(^MPIVET(ARR("ICN"),1),"^",2)=MPISIEN,^MPIVET("APC",MPISIEN,ARR("ICN"))=""
"RTN","MPIA31",24,0)
 . S ERR=1
"RTN","MPIA31",25,0)
 I ERR="-1^ICN has been Deactivated"  N MPISIEN S MPISIEN=$$IEN^XUAF4(CARR(16)) S $P(^MPIVET(ARR("ICN"),1),"^",2)=MPISIEN,^MPIVET("APC",MPISIEN,ARR("ICN"))="" S ERR=1
"RTN","MPIA31",26,0)
 I +ERR>0 S ERR=$$UPDATE(.ARR)
"RTN","MPIA31",27,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIA31",28,0)
 D LINK^HLUTIL3(SITE,.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIA31",29,0)
 S $P(HLA("HLA",1),HL("FS"),7)="DFN="_ARR("DFN")
"RTN","MPIA31",30,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","MPIA31",31,0)
 K LINK
"RTN","MPIA31",32,0)
 Q
"RTN","MPIA31",33,0)
 ;
"RTN","MPIA31",34,0)
MSH(ARY,MSG) ;processing MSH fields
"RTN","MPIA31",35,0)
 N COMP
"RTN","MPIA31",36,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIA31",37,0)
 S ARY("SITE")=$$LKUP^XUAF4($P($P(MSG,HL("FS"),4),COMP))
"RTN","MPIA31",38,0)
 S ARY("DLUP")=$$FMDATE^HLFNC($P(MSG,HL("FS"),7))
"RTN","MPIA31",39,0)
 S ARY("MPISSITE")=$P($P(MSG,HL("FS"),4),COMP)
"RTN","MPIA31",40,0)
 Q
"RTN","MPIA31",41,0)
 ;
"RTN","MPIA31",42,0)
EVN(ARY,MSG) ;processing EVN fields
"RTN","MPIA31",43,0)
 S ARY("EVR")=$P(MSG,HL("FS"),2) ;not currently used
"RTN","MPIA31",44,0)
 S ARY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIA31",45,0)
 Q
"RTN","MPIA31",46,0)
 ;
"RTN","MPIA31",47,0)
ZPD(ARRAY,MSG) ;processing ZPD fileds
"RTN","MPIA31",48,0)
 ;POW STATUS
"RTN","MPIA31",49,0)
 S ARRAY(38)=$P(MSG,HL("FS"),18)
"RTN","MPIA31",50,0)
 I ARRAY(38)=HL("Q") S ARRAY(38)="@"
"RTN","MPIA31",51,0)
 Q
"RTN","MPIA31",52,0)
 ;
"RTN","MPIA31",53,0)
PID(ARR,MSG) ;processing PID fields
"RTN","MPIA31",54,0)
 N YY,REP,IDS,ID,PIDAA,COMP,SUBCOMP,NAME,MMN,POB,MPISITE,TARR
"RTN","MPIA31",55,0)
 S REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA31",56,0)
 D PID^MPIADT(.MSG,.ARR,.HL)
"RTN","MPIA31",57,0)
 S ARR("SS")=ARR("MPISSITE")
"RTN","MPIA31",58,0)
 I '$D(ARR(13)) S ARR(13)="@",MPIMFLG=1
"RTN","MPIA31",59,0)
 ; **24  D ERROR^MPIA08(.ARR,.HL,"Pt with ICN "_ARR("ICN")_" is missing SSN at site "_ARR("MPISSITE"),209) ;no SSN passed for this patient
"RTN","MPIA31",60,0)
 I ARR(13)["P" S ARR(13)="@"
"RTN","MPIA31",61,0)
 Q
"RTN","MPIA31",62,0)
 ;
"RTN","MPIA31",63,0)
PD1(CARY,MSG) ;processing PD1 fields
"RTN","MPIA31",64,0)
 N COMP
"RTN","MPIA31",65,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIA31",66,0)
 S CARY(16)=$P($P(HLNODE,HL("FS"),4),COMP,3)
"RTN","MPIA31",67,0)
 S CARY("CMOR")=CARY(16) ;**29
"RTN","MPIA31",68,0)
 Q
"RTN","MPIA31",69,0)
 ;
"RTN","MPIA31",70,0)
CHECK(ARY,CARY) ;making sure ICN exists and TF msg came from exists
"RTN","MPIA31",71,0)
 ; will also check to see if CMORs match - if not log exception but don't return -1^error message.
"RTN","MPIA31",72,0)
 N CMOR,ICN,TF
"RTN","MPIA31",73,0)
 S ICN=+$G(ARY("ICN"))
"RTN","MPIA31",74,0)
 Q:ICN="" "-1^No ICN passed in msg"
"RTN","MPIA31",75,0)
 I '$D(^MPIVET(ICN)) Q "-1^No such ICN"
"RTN","MPIA31",76,0)
 I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" Q "-1^ICN has been Deactivated"  ;**24
"RTN","MPIA31",77,0)
 ;
"RTN","MPIA31",78,0)
 I $G(ARY("SITE"))'=$$LKUP^XUAF4($G(ARY("SS"))) Q "-1^Sending site in MSH isn't Site in PID"
"RTN","MPIA31",79,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIA31",80,0)
 S CMOR=$$STA^XUAF4(CMOR)
"RTN","MPIA31",81,0)
 I CMOR'=CARY(16) D ERROR^MPIA08(.ARY,.HL,"CMOR conflict with site "_ARY("SITE")_" ("_CARY(16)_") and the MPI ("_CMOR_")",226)
"RTN","MPIA31",82,0)
 Q 1
"RTN","MPIA31",83,0)
UPDATE(ARY) ;update fields in 985 or 985.5 accordingly
"RTN","MPIA31",84,0)
 ;;if tf isn't in 985.5 add it in update and update will trigger tf update msg
"RTN","MPIA31",85,0)
 Q $$UPDATE^MPIUTL4(ARY("ICN"),ARY("SS"),.ARY)
"RTN","MPIA31B")
0^9^B8465860
"RTN","MPIA31B",1,0)
MPIA31B ;BPIFO/CMC-A31 BUILDING ROUTINE ;JULY 15 2004
"RTN","MPIA31B",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**29,31**;30 Apr 99
"RTN","MPIA31B",3,0)
 ;
"RTN","MPIA31B",4,0)
 ;
"RTN","MPIA31B",5,0)
A31(ICN,SITE,CMOR) ;
"RTN","MPIA31B",6,0)
 ;ICN - ICN FOR PATIENT TO HAVE ICN BUILT FOR
"RTN","MPIA31B",7,0)
 ;SITE - IEN OF STATION TO HAVE A31 SENT TO
"RTN","MPIA31B",8,0)
 ;CMOR - IEN OF STATION THAT IS THE CMOR
"RTN","MPIA31B",9,0)
 ; RETURNS - -1^ERROR MESSAGE OR 1 IF SUCCESSFUL
"RTN","MPIA31B",10,0)
 N CNT,MPI,EVN,TCNT,PD1,TPID,IEN,ERR,LINK,TPID2,STN,OKAY,RESLT
"RTN","MPIA31B",11,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIA31B",12,0)
 S CNT=1
"RTN","MPIA31B",13,0)
 D INIT^HLFNC2("MPI ADT-A31 SERVER",.HL)
"RTN","MPIA31B",14,0)
 I $O(HL(""))="" S RESLT="-1^"_$P(HL,"^",2) Q
"RTN","MPIA31B",15,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA31B",16,0)
 S ERR="",TCNT=0
"RTN","MPIA31B",17,0)
 D BLDEVN^MPIPIDB(ICN,.EVN,.HL,"A31",.ERR)
"RTN","MPIA31B",18,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA31B",19,0)
 D BLDPID^MPIPIDB(ICN,CMOR,1,"1,3,5,6,7,8,11,29",.TPID,.HL,.ERR)
"RTN","MPIA31B",20,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA31B",21,0)
 D BLDPD1^MPIPIDB(ICN,"3",.PD1,.HL,.ERR)
"RTN","MPIA31B",22,0)
 I ERR'="" S RESLT=ERR Q
"RTN","MPIA31B",23,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIA31B",24,0)
 S HLA("HLS",4)=PD1(1)
"RTN","MPIA31B",25,0)
 S CNT=0 F  S CNT=$O(TPID(CNT)) Q:CNT=""  D
"RTN","MPIA31B",26,0)
 .I CNT=1 S HLA("HLS",2)=TPID(CNT)
"RTN","MPIA31B",27,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=TPID(CNT)
"RTN","MPIA31B",28,0)
 S CNT=0 F  S CNT=$O(TPID2(CNT)) Q:CNT=""  D
"RTN","MPIA31B",29,0)
 .I CNT=1 S HLA("HLS",3)=TPID2(CNT)
"RTN","MPIA31B",30,0)
 .I CNT>1 S HLA("HLS",3,CNT-1)=TPID2(CNT)
"RTN","MPIA31B",31,0)
 S ^XTMP("MPIA31%"_ICN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A31 message for ICN "_ICN
"RTN","MPIA31B",32,0)
 K HLL("LINKS")
"RTN","MPIA31B",33,0)
 D LINK^HLUTIL3($$STA^XUAF4(SITE),.LINK,"I") S IEN=$O(LINK(0))
"RTN","MPIA31B",34,0)
 I IEN'="" S HLL("LINKS",1)="MPI ADT-A31 CLIENT^"_LINK(IEN)
"RTN","MPIA31B",35,0)
 I IEN="" Q "-1^No logical link defined for site "_$$NS^XUAF4(SITE)
"RTN","MPIA31B",36,0)
 K HLRESLT D GENERATE^HLMA("MPI ADT-A31 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIA31B",37,0)
 I HLRESLT'="" S STN=$$STA^XUAF4(SITE),RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3)),^XTMP("MPIA31%"_ICN,STN,0)="A^"_HLRESLT,^XTMP("MPIA31%"_ICN,STN,1)=ICN_"%"_STN
"RTN","MPIA31B",38,0)
 I RESLT="" S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIA31B",39,0)
 I +HLRESLT<0 S OKAY="-1^"_$P(HLRESLT,"^",2)
"RTN","MPIA31B",40,0)
 I +HLRESLT>0 S OKAY=1
"RTN","MPIA31B",41,0)
 K HLA,HLL("LINKS"),COMP,REP,SUBCOMP,HLA("HLA"),HLA("HLS")
"RTN","MPIA31B",42,0)
 ; ^ PATCH 31 REMOVED HL VARIABLES FROM KILL LINE
"RTN","MPIA31B",43,0)
 Q OKAY
"RTN","MPIA31B",44,0)
 ;
"RTN","MPIA31B",45,0)
RESP ;process the ADT-A31 response ACK-A31
"RTN","MPIA31B",46,0)
 D HLLOG^MPIMHL("A31O",$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA31B",47,0)
 N ICN,MPIERR
"RTN","MPIA31B",48,0)
 N SITE,MPIID,MSGID,DFN,SSN,MPII,MSG,MPI,SG,COMP,SUBCOMP,REP,MPIEVTR,MPIDLT,CMOR,NAME,SURNAME,PREFIX,SUFFIX,CLAIMN,SEX,POBCITY,POBSTATE,FIRST,MIDDLE,MMN,MPIDOB,MPIDOD,MPIJ,MPII,MPISSITE,RESULT,POB,ARRAY,HLA,MPIDLU
"RTN","MPIA31B",49,0)
 D INIT^MPIA08
"RTN","MPIA31B",50,0)
 Q
"RTN","MPIA37")
0^10^B34504983
"RTN","MPIA37",1,0)
MPIA37 ;BIOFO/DLR-Routine for sending/receiving ADT-A37 HL7 messages ;9/21/02
"RTN","MPIA37",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,31**;30 Apr 99
"RTN","MPIA37",3,0)
DBIA ;
"RTN","MPIA37",4,0)
 ;IA: 2171  - $$STA and $$NA ^XUAF4
"RTN","MPIA37",5,0)
 ;IA: 2271  - LINK^HLUTIL3
"RTN","MPIA37",6,0)
 ;IA: 3099  - $$MSG^HLCSUTL
"RTN","MPIA37",7,0)
 ;
"RTN","MPIA37",8,0)
ASK() ;Ask for PATIENT
"RTN","MPIA37",9,0)
 ;;REMOVING WITH 24 - REPLACED WITH ASK^MPIA43
"RTN","MPIA37",10,0)
 N ICN,SSN,DIC,X,Y
"RTN","MPIA37",11,0)
 W ! K ICN
"RTN","MPIA37",12,0)
 S DIC="^MPIVET(",DIC(0)="QEAM",DIC("A")="Select PATIENT (Use ICN or SSN): "
"RTN","MPIA37",13,0)
 D ^DIC K DIC
"RTN","MPIA37",14,0)
 S ICN=+Y
"RTN","MPIA37",15,0)
 Q ICN
"RTN","MPIA37",16,0)
 ;
"RTN","MPIA37",17,0)
TFASK(ICN) ;Ask for TF to be unlinked or broken
"RTN","MPIA37",18,0)
 N MPIX,CNT,MPIZN,MPIA,SITE,X,Y,DIR,MPIDIR,SITEIEN
"RTN","MPIA37",19,0)
 ;W !,"Associated Facilities for ICN#"_$G(ICN)
"RTN","MPIA37",20,0)
 S CNT=1,MPIX=0 F  S MPIX=$O(^MPI(985.5,"AM",ICN,MPIX)) Q:'MPIX  S MPIZN=^MPI(985.5,$O(^MPI(985.5,"AM",ICN,MPIX,0)),0) S SITE=$$NS^XUAF4($P(MPIZN,"^")) S MPIX($P(SITE,"^",2))=$O(^MPI(985.5,"AM",ICN,MPIX,0))_"^"_SITE S CNT=CNT+1
"RTN","MPIA37",21,0)
 D PDAT^MPIMPDAT(ICN)
"RTN","MPIA37",22,0)
 I CNT=2 W ! S DIR(0)="Y",DIR("B")="No",DIR("A")=$P(SITE,"^")_" is the only associated facility. Do you wish to break this ICN" D ^DIR I Y>0 I $$CONFIRM(ICN,$P(SITE,"^",2)) S SITEIEN=$$IEN^XUAF4($P(SITE,"^",2)) D BUILD^MPIA37B(ICN,SITEIEN)
"RTN","MPIA37",23,0)
 I CNT>2 W ! D
"RTN","MPIA37",24,0)
 . ;S MPIDIR="SAOM^",X=0,CNT=0 F  S X=$O(MPIX(X)) Q:'X  S CNT=CNT+1,MPIDIR=MPIDIR_$S(CNT=1:"",1:";")_X_":"_$P(MPIX(X),"^",2)
"RTN","MPIA37",25,0)
 . ;S DIR("A")="Select Associated Facility to unlink/break: ",DIR(0)=MPIDIR D ^DIR
"RTN","MPIA37",26,0)
 . S Y=$$ASKST^MPIA43("I $D(^HLCS(870,""C"",+Y))&($D(^MPI(985.5,""AM"",ICN,+Y)))")
"RTN","MPIA37",27,0)
 . S SITE=+Y I SITE>0 I $$CONFIRM(ICN,SITE) S SITEIEN=$$IEN^XUAF4(SITE) D BUILD^MPIA37B(ICN,SITEIEN)
"RTN","MPIA37",28,0)
 Q
"RTN","MPIA37",29,0)
CONFIRM(ICN,SITE) ;confirm the transmission of ADT-A37 Unlink of ICN/SITE
"RTN","MPIA37",30,0)
 N MPIQ,MPILP,CNT,Y,DIR
"RTN","MPIA37",31,0)
 S MPIQ=0
"RTN","MPIA37",32,0)
 W !
"RTN","MPIA37",33,0)
 I $$IEN^XUAF4(SITE)=$P(^MPIVET(ICN,1),"^",2) D
"RTN","MPIA37",34,0)
 .;check tf file to see if it is shared
"RTN","MPIA37",35,0)
 .S CNT=0,MPILP=0 F  S MPILP=$O(^MPI(985.5,"AM",ICN,MPILP)) Q:'MPILP  D
"RTN","MPIA37",36,0)
 .. S CNT=CNT+1
"RTN","MPIA37",37,0)
 .. I MPILP'=SITE S MPIQ=1
"RTN","MPIA37",38,0)
 I MPIQ=1 I CNT>1 W !,"Unable to perform this function, site selected is the CMOR site!" Q 0
"RTN","MPIA37",39,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Are you sure you want to unlink station "_SITE_" from ICN "_ICN D ^DIR
"RTN","MPIA37",40,0)
 Q +Y
"RTN","MPIA37",41,0)
RESP ;process the ADT-A37 response ACK-A37
"RTN","MPIA37",42,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA37",43,0)
 D IN
"RTN","MPIA37",44,0)
 Q
"RTN","MPIA37",45,0)
ROUTE ;route the ADT-A37 message to all TF's
"RTN","MPIA37",46,0)
 ;All TF's and subscriptions for this site will be removed at all
"RTN","MPIA37",47,0)
 ;associated site, and at that site all TF's, Subscriptions (if any),
"RTN","MPIA37",48,0)
 ;ICN, ICN checksum, ICN history, CMOR, CMOR history will be removed
"RTN","MPIA37",49,0)
 ;and replaced with a local ICN.
"RTN","MPIA37",50,0)
 N MPILP,MPILK,INDEX,CNT,MPISN
"RTN","MPIA37",51,0)
 K HLL("LINKS")
"RTN","MPIA37",52,0)
 S CNT=1
"RTN","MPIA37",53,0)
 I '$D(ICN) Q  ;log exception
"RTN","MPIA37",54,0)
 I +$G(ICN)>0 K ^XTMP("MPI"_HL("ETN")_"%"_ICN) S ^XTMP("MPI"_HL("ETN")_"%"_ICN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"HL7 A37 UNLINK "_SITE_" FROM "_ICN
"RTN","MPIA37",55,0)
 S MPILP=0 F  S MPILP=$O(^MPI(985.5,"AM",ICN,MPILP)) Q:'MPILP  D
"RTN","MPIA37",56,0)
 . D LINK^HLUTIL3(MPILP,.MPILK)
"RTN","MPIA37",57,0)
 . S INDEX=$O(MPILK(0)) I +INDEX>0 S HLL("LINKS",CNT)="MPI ADT-A37 CLIENT"_"^"_MPILK(INDEX) S CNT=CNT+1 K MPILK D
"RTN","MPIA37",58,0)
 ..;set the XTMP global
"RTN","MPIA37",59,0)
 .. S MPISN=$$STA^XUAF4(MPILP) I MPISN S ^XTMP("MPI"_HL("ETN")_"%"_ICN,MPISN,0)="A"_"^"_$G(HLRESLT)
"RTN","MPIA37",60,0)
 .. W !,"Sending "_$E($P($G(MPIX(MPISN)),"^",2),1,24)_" unlink msg to station "_MPISN_" for ICN "_ICN_"..."
"RTN","MPIA37",61,0)
 K ICN,SITE
"RTN","MPIA37",62,0)
 Q
"RTN","MPIA37",63,0)
 ;
"RTN","MPIA37",64,0)
IN ;Entry point to process the ADT-A37 Un-link response message
"RTN","MPIA37",65,0)
 ;It is called by the MPI ADT-A37 SERVER protocol
"RTN","MPIA37",66,0)
 ;
"RTN","MPIA37",67,0)
 N MPI,STATN,MPII,MSG,SG,MPIARR,PDFN,INST,MFUPT,PDLT,TFIEN,RETURN
"RTN","MPIA37",68,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,MPISSITE,MPIERR,PID,X,Y,MPIX
"RTN","MPIA37",69,0)
 S MPIERR=""
"RTN","MPIA37",70,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,MPI(MPII))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","MPIA37",71,0)
 Q
"RTN","MPIA37",72,0)
PICK ;check routine for segment entry point
"RTN","MPIA37",73,0)
 I $T(@SG)]"" D @SG
"RTN","MPIA37",74,0)
 I $T(@SG)="" Q
"RTN","MPIA37",75,0)
 Q
"RTN","MPIA37",76,0)
MSA ;;MSA
"RTN","MPIA37",77,0)
 ;process the MSA segment
"RTN","MPIA37",78,0)
 N MPIAA,MPIMSG,HLCOMP,ICN,MPIX,EXIT,RETURN
"RTN","MPIA37",79,0)
 S EXIT=0
"RTN","MPIA37",80,0)
 S MPIAA=MSG
"RTN","MPIA37",81,0)
 S MPIMSG=$P(MPIAA,HL("FS"),3)
"RTN","MPIA37",82,0)
 S MPIERR=$P(MPIAA,HL("FS"),4)
"RTN","MPIA37",83,0)
 S MPIMSG=$$MSG^HLCSUTL(MPIMSG,"RETURN(1)")
"RTN","MPIA37",84,0)
 S MPIX=0 F  S MPIX=$O(RETURN(1,MPIX)) Q:'MPIX!(EXIT=1)  I RETURN(1,MPIX)'="" S MSG=RETURN(1,MPIX) D
"RTN","MPIA37",85,0)
 . I $E(RETURN(1,MPIX),1,3)="MSH" S MSG=RETURN(1,MPIX) D MSH
"RTN","MPIA37",86,0)
 . I $E(RETURN(1,MPIX),1,3)="PID" S MSG=RETURN(1,MPIX) D PID
"RTN","MPIA37",87,0)
 S ^XTMP("MPI"_HL("ETN")_"%"_+PID(2),MPISSITE,0)=$S(MPIERR="":"S",1:"E")
"RTN","MPIA37",88,0)
 I ^XTMP("MPI"_HL("ETN")_"%"_+PID(2),MPISSITE,0)="E" D
"RTN","MPIA37",89,0)
 . N ARRAY S ARRAY("ICN")=$P(PID(2),"^"),ARRAY("SURNAME")=$P($G(^MPIVET(+PID(2),0)),"^",2),ARRAY("FIRST")=$P($G(^MPIVET(+PID(2),0)),"^",3),ARRAY("MIDDLE")=$P($G(^MPIVET(+PID(2),0)),"^",4)
"RTN","MPIA37",90,0)
 . D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)  ;log exception
"RTN","MPIA37",91,0)
 I ^XTMP("MPI"_HL("ETN")_"%"_+PID(2),MPISSITE,0)="S" D
"RTN","MPIA37",92,0)
 . I '$D(PID(2))  ;log exception
"RTN","MPIA37",93,0)
 . I $D(PID(2)) N IEN,TFIEN,ERROR S TFIEN=$P(PID(2),"^",2) D:TFIEN=MPISSITE
"RTN","MPIA37",94,0)
 ..;remove the site from the associated facility list
"RTN","MPIA37",95,0)
 .. N ARY S ARY("FID")="@" S MPIERR=$$UPDATE^MPIUTL4(+PID(2),+MPISSITE,.ARY)
"RTN","MPIA37",96,0)
 K ^XTMP("MPI"_HL("ETN")_"%"_+PID(2),MPISSITE,0) I '$O(^XTMP("MPI"_HL("ETN")_"%"_+PID(2),0)) K ^XTMP("MPI"_HL("ETN")_"%"_+PID(2),0)
"RTN","MPIA37",97,0)
 Q
"RTN","MPIA37",98,0)
MSH ;;MSH
"RTN","MPIA37",99,0)
 ;process the MSH segment
"RTN","MPIA37",100,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","MPIA37",101,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIA37",102,0)
 S MPISSITE=+$P(MSG,HL("FS"),6)
"RTN","MPIA37",103,0)
 I $G(HL("SAF"))="" S HL("SAF")=$P(MSG,HL("FS"),4)
"RTN","MPIA37",104,0)
 Q
"RTN","MPIA37",105,0)
PID ;;PID
"RTN","MPIA37",106,0)
 ;process the PID segment
"RTN","MPIA37",107,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,MPIJ,AUTHTYP,MPIDFN,MPISSN
"RTN","MPIA37",108,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA37",109,0)
 N MPIFX,ID,AUTH
"RTN","MPIA37",110,0)
 S ID=$P(MSG,HL("FS"),4)
"RTN","MPIA37",111,0)
 F MPIFX=1:1:$L(ID,REP) S PID=$P(ID,COMP),AUTH=$P($P(ID,COMP,4),SUBCOMP),AUTHTYP=$P($P(ID,COMP,4),SUBCOMP,2),IDTYP=$P(ID,COMP,5),LOC=$P($P(ID,COMP,6),SUBCOMP,2) D
"RTN","MPIA37",112,0)
 . I AUTH="USSSA" S MPISSN=PID
"RTN","MPIA37",113,0)
 . I AUTH="USVHA" S ICN=PID
"RTN","MPIA37",114,0)
 . I AUTH="" I AUTHTYP="DFN" S MPIDFN=PID
"RTN","MPIA37",115,0)
 S MPIJ=$P(MSG,HL("FS"),2)
"RTN","MPIA37",116,0)
 S PID(MPIJ)=+ICN_"^"_LOC
"RTN","MPIA37",117,0)
 Q
"RTN","MPIA37",118,0)
START ;
"RTN","MPIA37",119,0)
 D PAT^MPIRUTLI I QFLG K QFLG Q
"RTN","MPIA37",120,0)
 S ICN=$$ASK^MPIA43 ; **31 CHANGE TO MPIA43 CALL
"RTN","MPIA37",121,0)
 ; **31 Stop unlink if ICN only at one site
"RTN","MPIA37",122,0)
 Q:ICN'>0
"RTN","MPIA37",123,0)
 I ICN>0 N NXT S NXT=$O(^MPI(985.5,"AM",ICN,"")),NXT=$O(^MPI(985.5,"AM",ICN,NXT))
"RTN","MPIA37",124,0)
 I NXT="" W !,"Patient is only known at one site, can't UNLINK from ICN" H 2 Q
"RTN","MPIA37",125,0)
 D TFASK(ICN)
"RTN","MPIA37",126,0)
 Q
"RTN","MPIA37B")
0^11^B33876133
"RTN","MPIA37B",1,0)
MPIA37B ;BIOFO/DLR-Routine for Building ADT-A37 HL7 messages ;12/7/01
"RTN","MPIA37B",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11**;30 Apr 99
"RTN","MPIA37B",3,0)
DBIA ;
"RTN","MPIA37B",4,0)
 ;IA: 10106 - $$HLDATE^HLFNC
"RTN","MPIA37B",5,0)
 ;IA: 2161  - INIT^HLFNC2
"RTN","MPIA37B",6,0)
 ;IA: 2164  - GENERATE^HLMA
"RTN","MPIA37B",7,0)
 ;IA: 2171  - $$STA and $NS ^XUAF4
"RTN","MPIA37B",8,0)
 ;IA: 2271  - LINK^HLUTIL3
"RTN","MPIA37B",9,0)
 ;IA: 10103 - $$NOW^XLFDT
"RTN","MPIA37B",10,0)
 ;
"RTN","MPIA37B",11,0)
BUILD(ICN,SITE) ;build the ADT-A37 HL7 message
"RTN","MPIA37B",12,0)
 ;  Variable list
"RTN","MPIA37B",13,0)
 ;     ICN - File (#985) IEN for the patient to un-link
"RTN","MPIA37B",14,0)
 ;     SITE - File (#4) IEN for the site to un-link from ICN
"RTN","MPIA37B",15,0)
 ;
"RTN","MPIA37B",16,0)
 N CNT,HLA,HLEID,X
"RTN","MPIA37B",17,0)
 S X=$$INIT(.HL,.HLEID)
"RTN","MPIA37B",18,0)
 S CNT=1
"RTN","MPIA37B",19,0)
 D BLDEVN
"RTN","MPIA37B",20,0)
 D BLDPID1(ICN,SITE,.CNT)
"RTN","MPIA37B",21,0)
 ;D BLDPID^MPIPIDB(ICN,CNT,SEQ,PID,HL,ERR) ;build PID from File #985
"RTN","MPIA37B",22,0)
 K PID
"RTN","MPIA37B",23,0)
 D BLDPID2(ICN,SITE,.CNT)
"RTN","MPIA37B",24,0)
 ;D BLDPID^MPIPIDB(ICN,CNT,SEQ,PID,HL,ERR) ;build PID from File #985
"RTN","MPIA37B",25,0)
 D SEND
"RTN","MPIA37B",26,0)
 Q
"RTN","MPIA37B",27,0)
BLDEVN ;build EVN
"RTN","MPIA37B",28,0)
 S HLA("HLS",CNT)="EVN"_HL("FS")_"A37"_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_HL("FS")_"USER NAME" S CNT=CNT+1
"RTN","MPIA37B",29,0)
 Q
"RTN","MPIA37B",30,0)
BLDPID1(ICN,SITE,CNT) ;build PID from File #985 **APC from File #985.5**
"RTN","MPIA37B",31,0)
 ;if this is a mismatch a null or """" should be passed in, so that
"RTN","MPIA37B",32,0)
 ;the ICN will be removed at the site.
"RTN","MPIA37B",33,0)
 N PID,X,COMP,SUBCOMP,MPIZN,REP
"RTN","MPIA37B",34,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA37B",35,0)
 S MPIZN=^MPIVET(ICN,0)
"RTN","MPIA37B",36,0)
 S PID(1)="PID"
"RTN","MPIA37B",37,0)
 S PID(2)="1"
"RTN","MPIA37B",38,0)
 S PID(3)=""  ;not used
"RTN","MPIA37B",39,0)
 ;repeat patient ID list including ICN,SSN AND **APC DFN**
"RTN","MPIA37B",40,0)
 S PID(4)=""""""_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA37B",41,0)
 I $P(MPIZN,"^",14)'="" S PID(4)=PID(4)_REP_$P(MPIZN,"^",14)_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA37B",42,0)
 ;**APC DFN**  add to the PID(4)
"RTN","MPIA37B",43,0)
 S PID(5)=""  ;not used
"RTN","MPIA37B",44,0)
 ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","MPIA37B",45,0)
 S PID(6)=$P(MPIZN,"^",2)_COMP_$P(MPIZN,"^",3)_COMP_$P(MPIZN,"^",4)_COMP_$P(MPIZN,"^",5)_COMP_$P(MPIZN,"^",6)_COMP_COMP_"L"
"RTN","MPIA37B",46,0)
 ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","MPIA37B",47,0)
 S PID(7)=$P($P(MPIZN,"^",7),",")_COMP_$P($P(MPIZN,"^",7),",",2)_COMP_COMP_COMP_COMP_COMP_"M"
"RTN","MPIA37B",48,0)
 S PID(8)=$P(MPIZN,"^",8)  ;date/time of birth
"RTN","MPIA37B",49,0)
 S PID(9)=$P(MPIZN,"^",13)  ;sex
"RTN","MPIA37B",50,0)
 S PID(10)=""  ;patient alias (not used)
"RTN","MPIA37B",51,0)
 S PID(11)=""  ;race (not used)
"RTN","MPIA37B",52,0)
 S PID(12)=""  ;(not used)
"RTN","MPIA37B",53,0)
 S PID(13)=""
"RTN","MPIA37B",54,0)
 S PID(14)=""
"RTN","MPIA37B",55,0)
 S PID(15)=""
"RTN","MPIA37B",56,0)
 S PID(16)=""
"RTN","MPIA37B",57,0)
 S PID(17)=""
"RTN","MPIA37B",58,0)
 S PID(18)=""
"RTN","MPIA37B",59,0)
 S PID(19)=""
"RTN","MPIA37B",60,0)
 S PID(20)=$P(MPIZN,"^",14)  ;ssn for backwards compatibility now use PID-3
"RTN","MPIA37B",61,0)
 S PID(21)=""
"RTN","MPIA37B",62,0)
 S PID(22)=""
"RTN","MPIA37B",63,0)
 S PID(23)=""
"RTN","MPIA37B",64,0)
 S PID(24)=""  ;place of birth (not used) use PID-11 with an 'N' instead
"RTN","MPIA37B",65,0)
 S PID(25)=""
"RTN","MPIA37B",66,0)
 S PID(26)=""
"RTN","MPIA37B",67,0)
 S PID(27)=""
"RTN","MPIA37B",68,0)
 S PID(28)=""
"RTN","MPIA37B",69,0)
 S PID(29)=""
"RTN","MPIA37B",70,0)
 S PID(30)=$P(MPIZN,"^",11)  ;date of death
"RTN","MPIA37B",71,0)
 S PID(31)=""
"RTN","MPIA37B",72,0)
 S X=0 F  S X=$O(PID(X)) Q:'X  S HLA("HLS",CNT)=$G(HLA("HLS",CNT))_PID(X)_HL("FS")
"RTN","MPIA37B",73,0)
 S CNT=CNT+1
"RTN","MPIA37B",74,0)
 Q
"RTN","MPIA37B",75,0)
BLDPID2(ICN,SITE,CNT) ;build PID from File #985 **APC from File #985.5**
"RTN","MPIA37B",76,0)
 ;if this is a mismatch a null or """" should be passed in, so that
"RTN","MPIA37B",77,0)
 ;the ICN will be removed at the site.
"RTN","MPIA37B",78,0)
 N PID,X,COMP,SUBCOMP,MPIZN,REP
"RTN","MPIA37B",79,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA37B",80,0)
 S MPIZN=$G(^MPIVET(+ICN,0))
"RTN","MPIA37B",81,0)
 S PID(1)="PID"
"RTN","MPIA37B",82,0)
 S PID(2)="2"
"RTN","MPIA37B",83,0)
 S PID(3)=""  ;not used
"RTN","MPIA37B",84,0)
 ;repeat patient ID list including ICN,SSN AND **APC DFN**
"RTN","MPIA37B",85,0)
 S PID(4)=$P(MPIZN,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA37B",86,0)
 I $P(MPIZN,"^",14)'="" S PID(4)=PID(4)_REP_$P(MPIZN,"^",14)_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA37B",87,0)
 ;**APC DFN**  add to the PID(4)
"RTN","MPIA37B",88,0)
 S PID(5)=""  ;not used
"RTN","MPIA37B",89,0)
 ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","MPIA37B",90,0)
 S PID(6)=$P(MPIZN,"^",2)_COMP_$P(MPIZN,"^",3)_COMP_$P(MPIZN,"^",4)_COMP_$P(MPIZN,"^",5)_COMP_$P(MPIZN,"^",6)_COMP_COMP_"L"
"RTN","MPIA37B",91,0)
 ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","MPIA37B",92,0)
 S PID(7)=$P($P(MPIZN,"^",7),",")_COMP_$P($P(MPIZN,"^",7),",",2)_COMP_COMP_COMP_COMP_COMP_"M"
"RTN","MPIA37B",93,0)
 S PID(8)=$P(MPIZN,"^",8)  ;date/time of birth
"RTN","MPIA37B",94,0)
 S PID(9)=$P(MPIZN,"^",13)  ;sex
"RTN","MPIA37B",95,0)
 S PID(10)=""  ;patient alias (not used)
"RTN","MPIA37B",96,0)
 S PID(11)=""  ;race (not used)
"RTN","MPIA37B",97,0)
 S PID(12)=""  ;(not used)
"RTN","MPIA37B",98,0)
 S PID(13)=""
"RTN","MPIA37B",99,0)
 S PID(14)=""
"RTN","MPIA37B",100,0)
 S PID(15)=""
"RTN","MPIA37B",101,0)
 S PID(16)=""
"RTN","MPIA37B",102,0)
 S PID(17)=""
"RTN","MPIA37B",103,0)
 S PID(18)=""
"RTN","MPIA37B",104,0)
 S PID(19)=""
"RTN","MPIA37B",105,0)
 S PID(20)=$P(MPIZN,"^",14)  ;ssn for backwards compatibility now use PID-3
"RTN","MPIA37B",106,0)
 S PID(21)=""
"RTN","MPIA37B",107,0)
 S PID(22)=""
"RTN","MPIA37B",108,0)
 S PID(23)=""
"RTN","MPIA37B",109,0)
 S PID(24)=""  ;place of birth (not used) use PID-11 with an 'N' instead
"RTN","MPIA37B",110,0)
 S PID(25)=""
"RTN","MPIA37B",111,0)
 S PID(26)=""
"RTN","MPIA37B",112,0)
 S PID(27)=""
"RTN","MPIA37B",113,0)
 S PID(28)=""
"RTN","MPIA37B",114,0)
 S PID(29)=""
"RTN","MPIA37B",115,0)
 S PID(30)=$P(MPIZN,"^",11)  ;date of death
"RTN","MPIA37B",116,0)
 S PID(31)=""
"RTN","MPIA37B",117,0)
 S X=0 F  S X=$O(PID(X)) Q:'X  S HLA("HLS",CNT)=$G(HLA("HLS",CNT))_PID(X)_HL("FS")
"RTN","MPIA37B",118,0)
 S CNT=CNT+1
"RTN","MPIA37B",119,0)
 Q
"RTN","MPIA37B",120,0)
BLDPD1(ICN,CNT) ;build PD1 segment which contains the Primary Care/CMOR site
"RTN","MPIA37B",121,0)
 N SITESN,SITENM,SITE,HLCOMP
"RTN","MPIA37B",122,0)
 S (SITE,SITENM,SITESN)=""
"RTN","MPIA37B",123,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIA37B",124,0)
 S SITE=$P($G(^MPIVET(+ICN,1)),"^",2) I SITE'="" S SITE=$$NS^XUAF4(SITE),SITESN=$P(SITE,"^",2),SITENM=$P(SITE,"^")
"RTN","MPIA37B",125,0)
 S HLA("HLS",CNT)="PD1"_HL("FS")_HL("FS")_HL("FS")_SITENM_HLCOMP_"L"_HLCOMP_SITESN S CNT=CNT+1
"RTN","MPIA37B",126,0)
 Q
"RTN","MPIA37B",127,0)
BLDMRG(ICN,SITE,CNT) ;build MRG from File #985 **APC from File #985.5**
"RTN","MPIA37B",128,0)
 N COMP,SUBCOMP
"RTN","MPIA37B",129,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA37B",130,0)
 S HLA("HLS",CNT)="MRG"_HL("FS") D
"RTN","MPIA37B",131,0)
 . ;repeat prior ID's including ICN **APC DFN**
"RTN","MPIA37B",132,0)
 . S HLA("HLS",CNT)=$G(HLA("HLS",CNT))_$P(^MPIVET(ICN,0),"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_"200M"_SUBCOMP_"L"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(SITE)_SUBCOMP_"L"
"RTN","MPIA37B",133,0)
 .S HLA("HLS",CNT)=$G(HLA("HLS",CNT))_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"PAT NAME" S CNT=CNT+1
"RTN","MPIA37B",134,0)
 Q
"RTN","MPIA37B",135,0)
SEND ;
"RTN","MPIA37B",136,0)
 N RESLT,HLRESLT
"RTN","MPIA37B",137,0)
 ;sends the MFU message
"RTN","MPIA37B",138,0)
 ;log the generation into an XTMP global
"RTN","MPIA37B",139,0)
 K HLRESLT D GENERATE^HLMA("MPI ADT-A37 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIA37B",140,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,U,3))
"RTN","MPIA37B",141,0)
 ;if reslt log exception
"RTN","MPIA37B",142,0)
 Q
"RTN","MPIA37B",143,0)
 ;
"RTN","MPIA37B",144,0)
INIT(HL,HLEID) ;
"RTN","MPIA37B",145,0)
 ;initialize HL7 variables
"RTN","MPIA37B",146,0)
 N ER
"RTN","MPIA37B",147,0)
 S ER=0
"RTN","MPIA37B",148,0)
 D INIT^HLFNC2("MPI ADT-A37 SERVER",.HL)
"RTN","MPIA37B",149,0)
 I $O(HL(""))="" S ER="1^"_$P(HL,U,2)
"RTN","MPIA37B",150,0)
 I +ER'=1 I $G(HL)]"" S ER=$G(HL)
"RTN","MPIA37B",151,0)
 Q ER
"RTN","MPIA37B",152,0)
 ;
"RTN","MPIA40")
0^12^B20969684
"RTN","MPIA40",1,0)
MPIA40 ;BPFO/CMC-A40 MERGE PATIENT MESAGE ;26 MAR 02
"RTN","MPIA40",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,23,24,31,35**;30 Apr 99
"RTN","MPIA40",3,0)
 ;
"RTN","MPIA40",4,0)
PROC ;
"RTN","MPIA40",5,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA40",6,0)
 N MPII,MPIJ,SEG,CNT,ERR,MSG,ICN,TSITE,IEN,TICN,SITE,RESULT,ICN2,SITE2,CMOR,DFN,HLT,FROMID,TOID,ARRAY,MPI,MPIERR
"RTN","MPIA40",7,0)
 S CNT=1,ERR=""
"RTN","MPIA40",8,0)
 K TSITE,ARR
"RTN","MPIA40",9,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SEG=$E(HLNODE,1,3) D
"RTN","MPIA40",10,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIA40",11,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIA40",12,0)
 .I SEG="MSH" D MSH^MPIA31(.ARR,.MSG) Q
"RTN","MPIA40",13,0)
 .I SEG="EVN" D EVN^MPIA31(.ARR,.MSG) Q
"RTN","MPIA40",14,0)
 .I SEG="PID" M MSG=HLNODE D PID^MPIA31(.ARR,.MSG) Q
"RTN","MPIA40",15,0)
 .I SEG="PD1" D PD1^MPIA31(.ARR,.MSG) Q
"RTN","MPIA40",16,0)
 .I SEG="MRG" K MSG M MSG=HLNODE D MRG(.ARRAY,.MSG) Q
"RTN","MPIA40",17,0)
 S ICN=ARR("ICN"),TSITE=ARR("SITE"),ICN2=ARRAY("ICN"),SITE2=$$IEN^XUAF4(ARRAY("SITE"))
"RTN","MPIA40",18,0)
 M HLT=HL
"RTN","MPIA40",19,0)
 ;get the FROM and TO local ID(s) being merge from the PID and MRG segments
"RTN","MPIA40",20,0)
 S FROMID=ARRAY("DFN"),TOID=ARR("DFN")
"RTN","MPIA40",21,0)
 ; Moved location of check to before sending A24s to all TFs.
"RTN","MPIA40",22,0)
 ; get ID State for ICN and ICN2
"RTN","MPIA40",23,0)
 ; if ICN and ICN2 are Deactivated, log exception and G ACK
"RTN","MPIA40",24,0)
 ;if ICN is deactivated and ICN2 is permanent, assume that a previous request from another system has requested the merge to occur in the opposite direction,
"RTN","MPIA40",25,0)
 ;    RESOLUTION: reverse the direction of the merge SET ICN=ICN2 and ICN2=ICN then perform the merge, send positive ack, then send an ADT-A24 link message out to all sites including the site requesting the merge.
"RTN","MPIA40",26,0)
 ;if ICN is permanent and ICN2 is deactivated then assume this is a duplicate merge request:
"RTN","MPIA40",27,0)
 ;   1) If requesting sites entry in 985.5 is still pointing to the deactivate ICN then 
"RTN","MPIA40",28,0)
 ; assume this is a duplicate request from another site so continue the merge, then
"RTN","MPIA40",29,0)
 ; generate a positive ack then generate the ADT-A24 to all site except the requesting site.
"RTN","MPIA40",30,0)
 ;   2) If requesting sites entry in 985.5 is pointing to the permanent ICN assume this is a duplicate request from the same site and generate a positive ack.
"RTN","MPIA40",31,0)
 ;if ICN is temporary and ICN2 is permanent, reverse the direction SET ICN=ICN and ICN2=ICN, then generate a positive ack, then broadcast out an ADT-A24 Link message to all site including the requesting site.
"RTN","MPIA40",32,0)
 ;if any other direction allow merge to happen in the requested direction, then generate a positive ack, then generate an ADT-A24 message to all sites.
"RTN","MPIA40",33,0)
 N IDS,IDS2,REVICN
"RTN","MPIA40",34,0)
 S REVICN=0
"RTN","MPIA40",35,0)
 S IDS=$$IDS^MPISIUT(ICN),IDS2=$$IDS^MPISIUT(ICN2)
"RTN","MPIA40",36,0)
 I $P(IDS,"^")="D",($P(IDS2,"^")="D") D  G ACK
"RTN","MPIA40",37,0)
 .S ERR="ID State for ICN(s) involved in Merge is Deactivated - merging on the MPI stopped. ICN (TO)= "_ICN_" ("_IDS_") ICN (FROM)= "_ICN2_" ("_IDS2_")"
"RTN","MPIA40",38,0)
 .;^ **35 updated text for error msg
"RTN","MPIA40",39,0)
 .D ERROR^MPIA08(.ARR,.HL,ERR,240)
"RTN","MPIA40",40,0)
 .;K ERR **35 removing kill so ACK will contain results.
"RTN","MPIA40",41,0)
 .S ERR="-1^"_ERR
"RTN","MPIA40",42,0)
 I $P(IDS,"^")="D",($P(IDS2,"^")="P") D
"RTN","MPIA40",43,0)
 .N TEMPICN S TEMPICN=ICN2,ICN2=ICN,ICN=TEMPICN,REVICN=1
"RTN","MPIA40",44,0)
 ;if the TO/RETAINED ICN is permanent and the FROM/Deprecated ICN is deactivated and the sending site still exists under the deprecate/FROM ICN then allow the merge process to continue
"RTN","MPIA40",45,0)
 ; if it does not exist then assume this is a duplicate message and go ack the A40 message only
"RTN","MPIA40",46,0)
 I $P(IDS,"^")="P",($P(IDS2,"^")="D") I '$D(^MPI(985.5,"AM",+ICN2,$$IEN^XUAF4(ARR("SITE")))) G ACK
"RTN","MPIA40",47,0)
 I $P(IDS,"^")="T"&($P(IDS2,"^")="P") D
"RTN","MPIA40",48,0)
 .N TEMPICN S TEMPICN=ICN2,ICN2=ICN,ICN=TEMPICN,REVICN=1
"RTN","MPIA40",49,0)
 ;
"RTN","MPIA40",50,0)
 M HL=HLT
"RTN","MPIA40",51,0)
 ;S ERR=$$SETSTATE^MPISIUT(ICN2,"D") ;**31 JUST SET ID STATE
"RTN","MPIA40",52,0)
 ;S ERR=$$DEACT^MPIUTL3(ICN2,2) ;**24
"RTN","MPIA40",53,0)
 ;I ERR'=0 S ERR=ERR_" for A40 merge msg" D ERROR^MPIA08(.ARR,.HL,ERR,234) ;**31 could mark as deactivated but still continue with ack as rest happened
"RTN","MPIA40",54,0)
 ;**31 Move SITE/ICN2 to SITE/ICN is not there already
"RTN","MPIA40",55,0)
 S ERR=0
"RTN","MPIA40",56,0)
 I REVICN=0 I '$D(^MPI(985.5,"AM",ICN,TSITE)) S ERR=$$MERGE^MPIMER(ICN,ICN2,TSITE)
"RTN","MPIA40",57,0)
 I ERR'=0 D ERROR^MPIA08(.ARR,.HL,$P(ERR,"^",2)_" ICN="_ICN_" ICN2= "_ICN2_" TSITE="_TSITE,234) G ACK
"RTN","MPIA40",58,0)
 D ACK
"RTN","MPIA40",59,0)
 N RSLT S RSLT=""
"RTN","MPIA40",60,0)
 ;before deleting the merged TF from 985.5 in the OTHER^MPIA24 API send the appropriate ADT-A24 messages to the associating system of the deleted TF
"RTN","MPIA40",61,0)
 D LINK^MPIA24(ICN,ICN2,TSITE,FROMID,TOID,0)
"RTN","MPIA40",62,0)
 ;if this is a reversal of the requested merge ICN direction setup an new Link message just for the sending merge site that will contain the TO DFN in both PID segments since the FROM DFN no longer exists and will not properly process
"RTN","MPIA40",63,0)
 I REVICN=1 D DA24^MPIA24(ICN,TSITE,ICN2,TSITE,TSITE,.RSLT,TOID,TOID,2)
"RTN","MPIA40",64,0)
 S COMP=$E(HL("ECH"),1),RICN=ICN2,SICN=ICN,SITE=$$STA^XUAF4(TSITE),RICNV=$P($G(^MPIVET(ICN2,0)),"^") ;ICN W/CHECKSUM
"RTN","MPIA40",65,0)
 M SARR=ARR
"RTN","MPIA40",66,0)
 D OTHER^MPIA24 K RICN,SICN,COMP,RICNV,SARR
"RTN","MPIA40",67,0)
 S ERR=$$SETSTATE^MPISIUT(ICN2,"D") ;**31 JUST SET ID STATE
"RTN","MPIA40",68,0)
 I ERR'=0 S ERR=ERR_" for A40 merge msg" D ERROR^MPIA08(.ARR,.HL,ERR,234) ;**31 could mark as deactivated but still continue with ack as rest happened
"RTN","MPIA40",69,0)
 ;D LINK^MPIA24(ICN,ICN2,TSITE,FROMID,TOID)
"RTN","MPIA40",70,0)
 K ARR
"RTN","MPIA40",71,0)
 Q
"RTN","MPIA40",72,0)
 ;
"RTN","MPIA40",73,0)
MRG(ARRAY,SEG) ;
"RTN","MPIA40",74,0)
 N COMP,SUBCOMP,REP,IDS,X,ID,PIDAA,PIDNTC,NAME
"RTN","MPIA40",75,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA40",76,0)
 ;get MRG-2 Patient Identifier List (three ids should be returned ICN and DFN)
"RTN","MPIA40",77,0)
 S IDS=$P(SEG,HL("FS"),2)
"RTN","MPIA40",78,0)
 F X=1:1:$L(IDS,REP) S ID=$P(IDS,REP,X) D
"RTN","MPIA40",79,0)
 . ;get id, assigning authority, and name type code
"RTN","MPIA40",80,0)
 . S PIDAA=$P($P(ID,COMP,4),SUBCOMP),PIDNTC=$P(ID,COMP,5),ARRAY("SITE")=$P($P(ID,COMP,6),SUBCOMP,2),ID=$P(ID,COMP)
"RTN","MPIA40",81,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","MPIA40",82,0)
 . I PIDAA="USVHA" D
"RTN","MPIA40",83,0)
 .. I PIDNTC="NI" S ARRAY("ICN")=+ID  ;National unique individual identifier
"RTN","MPIA40",84,0)
 .. I PIDNTC="PI" S ARRAY("DFN")=ID  ;Patient internal identifier
"RTN","MPIA40",85,0)
 ;get MRG-8 Patient Name
"RTN","MPIA40",86,0)
 S NAME=$P(SEG,HL("FS"),8),ARRAY("SURNAME")=$P(NAME,COMP),ARRAY("FIRST")=$P(NAME,COMP,2),ARRAY("MIDDLE")=$P(NAME,COMP,3),ARRAY("PREFIX")=$P(NAME,COMP,4),ARRAY("SUFFIX")=$P(NAME,COMP,5)
"RTN","MPIA40",87,0)
 Q
"RTN","MPIA40",88,0)
ACK S CMOR=$P(^MPIVET(ICN,1),"^",2),IEN=$O(^MPI(985.5,"AM",ICN,CMOR,""))
"RTN","MPIA40",89,0)
 S DFN=$P(^MPI(985.5,IEN,0),"^",3)
"RTN","MPIA40",90,0)
 M HL=HLT
"RTN","MPIA40",91,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIA40",92,0)
 S $P(HLA("HLA",1),HL("FS"),7)="DFN="_DFN
"RTN","MPIA40",93,0)
 D LINK^HLUTIL3(TSITE,.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIA40",94,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","MPIA40",95,0)
 K LINK
"RTN","MPIA40",96,0)
 Q
"RTN","MPIA43")
0^13^B79616768
"RTN","MPIA43",1,0)
MPIA43 ;BIOFO/DLR,CMC,CML-Routine for sending/receiving ADT-A43 HL7 messages ;9/21/02
"RTN","MPIA43",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,31,35**;30 Apr 99
"RTN","MPIA43",3,0)
 ;
"RTN","MPIA43",4,0)
 ;Variable A43FLG needs to be set to indicate which A43 option is being used  ; **35
"RTN","MPIA43",5,0)
 ; A43FLG=1 - Mismatched Patient Record Resolution
"RTN","MPIA43",6,0)
 ; A43FLG=2 - Transfer ICN for Duplicate Site Record
"RTN","MPIA43",7,0)
 ;
"RTN","MPIA43",8,0)
EN1 ;Entry point for MP Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES]   ; **35
"RTN","MPIA43",9,0)
 N A43FLG S A43FLG=1 G START
"RTN","MPIA43",10,0)
 ;
"RTN","MPIA43",11,0)
EN2 ;Entry point for Transfer ICN for Duplicate Site Record [MPI DATA MGT UNL DUP PTS]    ; **35
"RTN","MPIA43",12,0)
 N A43FLG S A43FLG=2
"RTN","MPIA43",13,0)
 ;
"RTN","MPIA43",14,0)
START ;
"RTN","MPIA43",15,0)
 I A43FLG=1 D MP^MPIA43U2 I QFLG K QFLG Q
"RTN","MPIA43",16,0)
 I A43FLG=2 D TR^MPIA43U2 I QFLG K QFLG Q
"RTN","MPIA43",17,0)
 N ICN,DOD,PIDARR
"RTN","MPIA43",18,0)
 S ICN=$$ASK
"RTN","MPIA43",19,0)
 ; **31 STOP UNLINK IF ONLY ONE SITE
"RTN","MPIA43",20,0)
 Q:ICN'>0
"RTN","MPIA43",21,0)
 I ICN>0 N NXT S NXT=$O(^MPI(985.5,"AM",ICN,"")),NXT=$O(^MPI(985.5,"AM",ICN,NXT))
"RTN","MPIA43",22,0)
 I NXT="" W !,"Patient is only known at one site, can't UNLINK from ICN" H 2 Q
"RTN","MPIA43",23,0)
 D TFASK(ICN)
"RTN","MPIA43",24,0)
 ; I TF>0 D BUILD(ICN,TF)
"RTN","MPIA43",25,0)
 Q
"RTN","MPIA43",26,0)
 ;
"RTN","MPIA43",27,0)
ASK() ;Ask for PATIENT
"RTN","MPIA43",28,0)
 N ICN,SSN,DIC,X,Y
"RTN","MPIA43",29,0)
ASK1 W ! K ICN
"RTN","MPIA43",30,0)
 S DIC="^MPIVET(",DIC(0)="QEAM",DIC("A")="Select PATIENT (Use ICN or SSN): "
"RTN","MPIA43",31,0)
 D ^DIC K DIC
"RTN","MPIA43",32,0)
 S ICN=+Y
"RTN","MPIA43",33,0)
 ; **31 ^ ADDED SCREEN TO STOP THE SELECTION OF DEACTIVATED ICNS
"RTN","MPIA43",34,0)
 I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" W !,">> DEACTIVATED ICN, select another patient." G ASK1
"RTN","MPIA43",35,0)
 Q ICN
"RTN","MPIA43",36,0)
 ;
"RTN","MPIA43",37,0)
TFASK(ICN) ;Ask for TF to be moved
"RTN","MPIA43",38,0)
 N MPIX,CNT,MPIZN,MPIA,SITE,X,Y,DIR,MPIDIR,SITEIEN
"RTN","MPIA43",39,0)
 ;**35 CNT should start at 0 to be able to check if there is only 1 other TF besides CMOR
"RTN","MPIA43",40,0)
 ;**35 Can't assume last TF is the non-CMOR site
"RTN","MPIA43",41,0)
 N CMOR,CMORS,TSITE
"RTN","MPIA43",42,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIA43",43,0)
 I CMOR<1 W !,"No CMOR present for this patient!  Contact development team for follow-up!!" Q
"RTN","MPIA43",44,0)
 S CMORS=$$STA^XUAF4(CMOR)
"RTN","MPIA43",45,0)
 S CNT=0,MPIX=0 F  S MPIX=$O(^MPI(985.5,"AM",ICN,MPIX)) Q:'MPIX  D
"RTN","MPIA43",46,0)
 .S MPIZN=^MPI(985.5,$O(^MPI(985.5,"AM",ICN,MPIX,0)),0)
"RTN","MPIA43",47,0)
 .S SITE=$$NS^XUAF4($P(MPIZN,"^"))
"RTN","MPIA43",48,0)
 .S MPIX($P(SITE,"^",2))=$O(^MPI(985.5,"AM",ICN,MPIX,0))_"^"_SITE
"RTN","MPIA43",49,0)
 .I CMORS'=$P(SITE,"^",2) S TSITE=SITE
"RTN","MPIA43",50,0)
 .S CNT=CNT+1
"RTN","MPIA43",51,0)
 D PDAT^MPIMPDAT(ICN)
"RTN","MPIA43",52,0)
 ;**35 Changing code to allow for different prompts depending on # of tfs but only all BUILD^MPIA43B in one place
"RTN","MPIA43",53,0)
 I CNT=2 D
"RTN","MPIA43",54,0)
 .W !!,$P(TSITE,"^")," is the only non-CMOR site for this ICN."
"RTN","MPIA43",55,0)
 .S DIR(0)="Y",DIR("B")="No",DIR("A")="Want to move ("_$P(TSITE,"^",2)_") "_$P(TSITE,"^")_" from ICN "_ICN
"RTN","MPIA43",56,0)
 .D ^DIR K DIR I Y>0 S SITE=$P(TSITE,"^",2)
"RTN","MPIA43",57,0)
 I CNT>2 W ! S SITE=$$ASKST("I $D(^HLCS(870,""C"",+Y))&($D(^MPI(985.5,""AM"",ICN,+Y)))")
"RTN","MPIA43",58,0)
 ; SITE is the STATION NUMBER of the site to be MOVED
"RTN","MPIA43",59,0)
 I SITE>0,$$CONFIRM(ICN,SITE) D
"RTN","MPIA43",60,0)
 .D LINKTO(ICN,SITE,.ICN2) ;get ICN that this MOVED entry should point to
"RTN","MPIA43",61,0)
 .I +ICN2>0 D
"RTN","MPIA43",62,0)
 ..S SITEIEN=$$IEN^XUAF4(+SITE) D BUILD^MPIA43B(ICN,SITEIEN,ICN2)
"RTN","MPIA43",63,0)
 ..D LOG^MPIA43U2
"RTN","MPIA43",64,0)
 .;I +ICN=-1 LOG EXCEPTION - ??
"RTN","MPIA43",65,0)
 Q
"RTN","MPIA43",66,0)
 ;
"RTN","MPIA43",67,0)
ASKST(SCRN) ;
"RTN","MPIA43",68,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","MPIA43",69,0)
SITE I $D(SCRN) S DIC("S")=SCRN
"RTN","MPIA43",70,0)
 S DIC="^DIC(4,",DIC(0)="QEAM",DIC("A")="Select Associated Facility to Move: "
"RTN","MPIA43",71,0)
 I '$D(SCRN) S DIC("S")="I $D(^HLCS(870,""C"",+Y))"
"RTN","MPIA43",72,0)
 D ^DIC
"RTN","MPIA43",73,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","MPIA43",74,0)
 I Y<1 G SITE
"RTN","MPIA43",75,0)
 Q $$STA^XUAF4(+Y)
"RTN","MPIA43",76,0)
 ;
"RTN","MPIA43",77,0)
CONFIRM(ICN,SITE) ;confirm the transmission of ADT-A43 MOVE of ICN/SITE
"RTN","MPIA43",78,0)
 N MPIQ,MPILP,CNT,SITEIEN,SITENM
"RTN","MPIA43",79,0)
 S MPIQ=0
"RTN","MPIA43",80,0)
 W !
"RTN","MPIA43",81,0)
 S SITEIEN=$$IEN^XUAF4(SITE),SITENM=$P($$NS^XUAF4(SITEIEN),"^")
"RTN","MPIA43",82,0)
 I SITEIEN=$P(^MPIVET(ICN,1),"^",2) D
"RTN","MPIA43",83,0)
 .;check tf file to see if it is shared
"RTN","MPIA43",84,0)
 .S CNT=0,MPILP=0 F  S MPILP=$O(^MPI(985.5,"AM",ICN,MPILP)) Q:'MPILP  D
"RTN","MPIA43",85,0)
 ..S CNT=CNT+1
"RTN","MPIA43",86,0)
 ..I MPILP'=SITE S MPIQ=1
"RTN","MPIA43",87,0)
 I MPIQ=1 I CNT>1 W !,"Unable to perform this function, selected site is the CMOR!" Q 0
"RTN","MPIA43",88,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Are you sure you want to move ("_SITE_") "_SITENM D ^DIR
"RTN","MPIA43",89,0)
 Q +Y
"RTN","MPIA43",90,0)
 ;
"RTN","MPIA43",91,0)
LINKTO(ICN,SITESN,ICN2) ; get new ICN for site being moved
"RTN","MPIA43",92,0)
 N NAME,NODE,TFIEN,SIEN,RES,ARR,TFDOB,TFSSN,TFSEX,TODOB,TOSSN,TOSEX,GOT,CHKICN
"RTN","MPIA43",93,0)
 S SIEN=$$IEN^XUAF4(SITESN),RES="MPI" K @RES,ARR
"RTN","MPIA43",94,0)
 S TFIEN=$O(^MPI(985.5,"AM",ICN,SIEN,""))
"RTN","MPIA43",95,0)
 I TFIEN="" S ICN2="-1^NO TF ENTRY FOR ICN/SITE PAIR" Q
"RTN","MPIA43",96,0)
 S NODE=$G(^MPI(985.5,TFIEN,1))
"RTN","MPIA43",97,0)
 I NODE="" S ICN2="-1^NO TF ENTRY FOR ICN/SITE PAIR" Q
"RTN","MPIA43",98,0)
 S ARR(1)=$P(NODE,"^",2),ARR(2)=$P(NODE,"^",3),ARR(3)=$P(NODE,"^",4),ARR(5)=$P(NODE,"^",6)
"RTN","MPIA43",99,0)
 S ARR(4)=$P(NODE,"^",5),ARR(7)=$P(NODE,"^",8),ARR(13)=$P(NODE,"^",14)
"RTN","MPIA43",100,0)
 S NAME=$$FMNAME^HLFNC(ARR(1)_"^"_ARR(2)_"^"_ARR(3)_"^"_ARR(4)_"^"_ARR(5),"^")
"RTN","MPIA43",101,0)
 ;
"RTN","MPIA43",102,0)
 ;If option being used is Transfer ICN for Duplicate Site Record [MPI DATA MGT UNL DUP PTS],  ; **35
"RTN","MPIA43",103,0)
 ;create new ICN and quit
"RTN","MPIA43",104,0)
 I A43FLG=2 D NEW^MPIA43U(TFIEN) Q
"RTN","MPIA43",105,0)
 ;
"RTN","MPIA43",106,0)
 ;at this point, option being used is MP Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES]
"RTN","MPIA43",107,0)
 ;look for potential matches
"RTN","MPIA43",108,0)
 K RES,MPI
"RTN","MPIA43",109,0)
 S RES="RES" D TRY^MPIC(NAME,ARR(13),ARR(7),RES)
"RTN","MPIA43",110,0)
 I ARR(13)'="" N ERR D DUPCHK^MPIMDMA1(.MPI,.ERR,,ARR(13)) K MPI(0),MPI(ICN)
"RTN","MPIA43",111,0)
 ;I ARR(13)'="" N VALUE S VALUE="SSN",VALUE("SSN")=ARR(13) D CHKDUPS^MPIRUTL(.VALUE,.MPI)
"RTN","MPIA43",112,0)
 M MPI=RES  ;combine the two arrays into MPI array
"RTN","MPIA43",113,0)
 K MPI(ICN) ;remove ICN that is being MOVED from list of potential match ICN(s)
"RTN","MPIA43",114,0)
 ;check array for deactivated ICNs
"RTN","MPIA43",115,0)
 S CHKICN=0 F  S CHKICN=$O(MPI(CHKICN)) Q:'CHKICN  I $P($G(^MPIVET(CHKICN,"ID_STATE")),"^")="D" K MPI(CHKICN)
"RTN","MPIA43",116,0)
 ;
"RTN","MPIA43",117,0)
 D PMCHK^MPIA43U
"RTN","MPIA43",118,0)
 ;
"RTN","MPIA43",119,0)
 Q
"RTN","MPIA43",120,0)
 ;
"RTN","MPIA43",121,0)
RESP ;process the ADT-A43 response ACK-A43
"RTN","MPIA43",122,0)
 I $G(HL("ETN"))'="" D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIA43",123,0)
 D IN
"RTN","MPIA43",124,0)
 Q
"RTN","MPIA43",125,0)
 ;
"RTN","MPIA43",126,0)
ROUTE ;route the ADT-A43 message to all TF's
"RTN","MPIA43",127,0)
 D ROUTE^MPIA43R
"RTN","MPIA43",128,0)
 Q
"RTN","MPIA43",129,0)
 ;
"RTN","MPIA43",130,0)
IN ;Entry point to process the ADT-A43 Un-link response message
"RTN","MPIA43",131,0)
 ;It is called by the MPI ADT-A43 SERVER protocol
"RTN","MPIA43",132,0)
 ;
"RTN","MPIA43",133,0)
 N MPI,STATN,MPII,MSG,SG,MPIARR,PDFN,INST,MFUPT,PDLT,TFIEN,RETURN
"RTN","MPIA43",134,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,MPISSITE,MPIERR,PID,X,Y,MPIX,MRG
"RTN","MPIA43",135,0)
 S MPIERR=""
"RTN","MPIA43",136,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,MPI(MPII))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","MPIA43",137,0)
 ; loop through RETURN to get the mismatched ICN from MRG and the new ICN from the PID
"RTN","MPIA43",138,0)
 S MPIX=0 F  S MPIX=$O(RETURN(1,MPIX)) Q:'MPIX  I RETURN(1,MPIX)'="" S MSG=RETURN(1,MPIX) D:$E(RETURN(1,MPIX),1,3)="PID" PID D:$E(RETURN(1,MPIX),1,3)="MSH" MSH D:$E(RETURN(1,MPIX),1,3)="MRG" MRG
"RTN","MPIA43",139,0)
 S ^XTMP("MPI"_HL("ETN")_"%"_+MRG("ICN"),MPISSITE,0)=$S(MPIERR="":"S",1:"E")
"RTN","MPIA43",140,0)
 I ^XTMP("MPI"_HL("ETN")_"%"_+MRG("ICN"),MPISSITE,0)="E" D
"RTN","MPIA43",141,0)
 . N ARRAY S ARRAY("ICN")=+MRG("ICN"),ARRAY("SURNAME")=$P($G(^MPIVET(+MRG("ICN"),0)),"^",2),ARRAY("FIRST")=$P($G(^MPIVET(+MRG("ICN"),0)),"^",3),ARRAY("MIDDLE")=$P($G(^MPIVET(+MRG("ICN"),0)),"^",4)
"RTN","MPIA43",142,0)
 . D ERROR^MPIA08(.ARRAY,.HL,MPIERR,234)  ;log exception
"RTN","MPIA43",143,0)
 I ^XTMP("MPI"_HL("ETN")_"%"_+MRG("ICN"),MPISSITE,0)="S" D
"RTN","MPIA43",144,0)
 . I $D(MRG) D
"RTN","MPIA43",145,0)
 .. N SITES S SITES=$P(HL("SFN"),HLCOMP)
"RTN","MPIA43",146,0)
 .. ;check to see if this site is an association to the mismatched site  NSAS = needs site assoc.
"RTN","MPIA43",147,0)
 .. N MPISIEN,NSAS,MPISSIEN S MPISIEN=0,NSAS=0
"RTN","MPIA43",148,0)
 .. S MPISSIEN=$$IEN^XUAF4(SITES)
"RTN","MPIA43",149,0)
 .. S MPISIEN=$O(^MPI(985.5,"ASD",$G(MRG("DFN")),$$IEN^XUAF4(MRG("LOC")),0))
"RTN","MPIA43",150,0)
 .. I +$G(MPISIEN)>0 I $$CHKASSOC^MPIUTL11(MPISIEN,MPISSIEN) I $$SITET^MPIA24C(SITES)="BT" S RES=$$ADDTF^MPIUTL9(MPISSIEN,+$G(PID("ICN")),,"") S NSAS=1
"RTN","MPIA43",151,0)
 .. ;check to see if this site has any other associations in the old ICN, if not delete the TF
"RTN","MPIA43",152,0)
 .. I $G(NSAS)=1 I '$$ICNASSOC^MPIUTL11(+MRG("ICN"),SITES) D DEL1TF^MPIUTL9(+MRG("ICN"),MPISSIEN)
"RTN","MPIA43",153,0)
 ..;if this is not from the erroneously linked site (i.e. site record being moved) quit
"RTN","MPIA43",154,0)
 .. I SITES'=MRG("LOC") Q
"RTN","MPIA43",155,0)
 .. N ARY S ARY(18)=+PID("ICN") S MPIERR=$$UPDATE^MPIUTL4(+MRG("ICN"),MRG("LOC"),.ARY)
"RTN","MPIA43",156,0)
 ..; \/ **35 just remove and move OTHER IDs associated with the mismatched site
"RTN","MPIA43",157,0)
 .. N OID,HIST,TYPE,ERROR,SARR,MPIST,SITEIEN S HIST=0,SITES=$P(HL("SFN"),HLCOMP),SITEIEN=$$IEN^XUAF4(SITES) ; SITEIEN IS THE IEN FOR THE STATION BEING REMOVED
"RTN","MPIA43",158,0)
 ..F  S HIST=$O(^MPIVET(+MRG("ICN"),200,HIST)) Q:'HIST  D
"RTN","MPIA43",159,0)
 ...S OID=$G(^MPIVET(+MRG("ICN"),200,HIST,0))
"RTN","MPIA43",160,0)
 ...S TYPE=$P(OID,"^",2),MPI=$P(OID,"^",3) ; TYPE OF ID AND SITE IEN
"RTN","MPIA43",161,0)
 ...Q:MPI'=SITEIEN
"RTN","MPIA43",162,0)
 ...S ERROR=$$DELID^MPIUTL5($P(OID,"^"),TYPE,SITES,+MRG("ICN")) ; REMOVE OTHER ID FROM ICN THAT IS GOING AWAY
"RTN","MPIA43",163,0)
 ...I +ERROR<0 D ERROR^MPIA08(.ARRAY,.HL,ERROR_" for ICN "_+MRG("ICN"),234) Q
"RTN","MPIA43",164,0)
 ...S ERROR=$$SETID^MPIUTL5($P(OID,"^"),TYPE,SITES,+PID("ICN")) ; SET OTHER ID IN SURVIVING ICN
"RTN","MPIA43",165,0)
 ...I +ERROR<0 D ERROR^MPIA08(.ARRAY,.HL,ERROR_" for ICN "_+PID("ICN"),234) Q
"RTN","MPIA43",166,0)
 K ^XTMP("MPI"_HL("ETN")_"%"_+MRG("ICN"),MPISSITE,0) I '$O(^XTMP("MPI"_HL("ETN")_"%"_+MRG("ICN"),0)) K ^XTMP("MPI"_HL("ETN")_"%"_+MRG("ICN"),0)
"RTN","MPIA43",167,0)
 Q
"RTN","MPIA43",168,0)
 ;
"RTN","MPIA43",169,0)
PICK ;check routine for segment entry point
"RTN","MPIA43",170,0)
 I $T(@SG)]"" D @SG
"RTN","MPIA43",171,0)
 I $T(@SG)="" Q
"RTN","MPIA43",172,0)
 Q
"RTN","MPIA43",173,0)
 ;
"RTN","MPIA43",174,0)
MSA ;;MSA
"RTN","MPIA43",175,0)
 ;process the MSA segment
"RTN","MPIA43",176,0)
 N MPIAA,MPIMSG,HLCOMP
"RTN","MPIA43",177,0)
 S MPIAA=MSG
"RTN","MPIA43",178,0)
 S MPIMSG=$P(MPIAA,HL("FS"),3)
"RTN","MPIA43",179,0)
 S MPIERR=$P(MPIAA,HL("FS"),4)
"RTN","MPIA43",180,0)
 S MPIMSG=$$MSG^HLCSUTL(MPIMSG,"RETURN(1)")
"RTN","MPIA43",181,0)
 Q
"RTN","MPIA43",182,0)
 ;
"RTN","MPIA43",183,0)
MSH ;;MSH
"RTN","MPIA43",184,0)
 ;process the MSH segment
"RTN","MPIA43",185,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","MPIA43",186,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIA43",187,0)
 S MPISSITE=+$P(MSG,HL("FS"),6)
"RTN","MPIA43",188,0)
 Q
"RTN","MPIA43",189,0)
 ;
"RTN","MPIA43",190,0)
PID ;;PID
"RTN","MPIA43",191,0)
 ;process the PID segment
"RTN","MPIA43",192,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,MPIJ,AUTHTYP,MPISSN,MPIDFN
"RTN","MPIA43",193,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA43",194,0)
 N MPIFX,ID,AUTH
"RTN","MPIA43",195,0)
 S IDL=$P(MSG,HL("FS"),4)
"RTN","MPIA43",196,0)
 ;capture new ICN and DFN/Station# for the mismatched record
"RTN","MPIA43",197,0)
 F MPIFX=1:1:$L(IDL,REP) S ID=$P(IDL,REP,MPIFX),PID=$P(ID,COMP),AUTH=$P($P(ID,COMP,4),SUBCOMP),AUTHTYP=$P($P(ID,COMP,4),SUBCOMP,2),IDTYP=$P(ID,COMP,5),LOC=$P($P(ID,COMP,6),SUBCOMP,2) D
"RTN","MPIA43",198,0)
 . I AUTH="USSSA" S MPISSN=PID
"RTN","MPIA43",199,0)
 . I AUTH="USVHA" D
"RTN","MPIA43",200,0)
 .. I IDTYP="NI" S PID("ICN")=PID
"RTN","MPIA43",201,0)
 .. I IDTYP="PI" S PID("DFN")=PID,PID("LOC")=LOC
"RTN","MPIA43",202,0)
 S MPIJ=$P(MSG,HL("FS"),2)
"RTN","MPIA43",203,0)
 S PID(MPIJ)=+PID("ICN")_"^"_LOC
"RTN","MPIA43",204,0)
 Q
"RTN","MPIA43",205,0)
 ;
"RTN","MPIA43",206,0)
MRG ;;process MRG
"RTN","MPIA43",207,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,MPIJ,AUTHTYP,MPISSN,MPIDFN
"RTN","MPIA43",208,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA43",209,0)
 N MPIFX,ID,AUTH
"RTN","MPIA43",210,0)
 S IDL=$P(MSG,HL("FS"),2)
"RTN","MPIA43",211,0)
 F MPIFX=1:1:$L(IDL,REP) S ID=$P(IDL,REP,MPIFX),MRG=$P(ID,COMP),AUTH=$P($P(ID,COMP,4),SUBCOMP),AUTHTYP=$P($P(ID,COMP,4),SUBCOMP,2),IDTYP=$P(ID,COMP,5),LOC=$P($P(ID,COMP,6),SUBCOMP,2) D
"RTN","MPIA43",212,0)
 . I AUTH="USSSA" S MPISSN=MRG
"RTN","MPIA43",213,0)
 . I AUTH="USVHA" D
"RTN","MPIA43",214,0)
 .. I IDTYP="NI" S ICN=MRG,MRG("ICN")=MRG
"RTN","MPIA43",215,0)
 .. I IDTYP="PI" S MRG("DFN")=MRG,MRG("LOC")=LOC
"RTN","MPIA43",216,0)
 Q
"RTN","MPIA43B")
0^14^B28001174
"RTN","MPIA43B",1,0)
MPIA43B ;BIOFO/DLR-Routine for Building ADT-A43 HL7 messages ;12/7/01
"RTN","MPIA43B",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,35**;30 Apr 99
"RTN","MPIA43B",3,0)
 ;
"RTN","MPIA43B",4,0)
BUILD(ICN,SITE,ICN2) ;build the ADT-A43 HL7 message
"RTN","MPIA43B",5,0)
 ;  Variable list
"RTN","MPIA43B",6,0)
 ;     ICN - File (#985) IEN for the patient to un-link
"RTN","MPIA43B",7,0)
 ;     SITE - File (#4) IEN for the site to un-link from ICN
"RTN","MPIA43B",8,0)
 ;     ICN2 - File (#985) IEN for the patient to be linked to now
"RTN","MPIA43B",9,0)
 ; **35 ADDED ICN2 PARAMETER
"RTN","MPIA43B",10,0)
 N CNT,HLA,HLEID,X,LID
"RTN","MPIA43B",11,0)
 S X=$$INIT(.HL,.HLEID)
"RTN","MPIA43B",12,0)
 S CNT=1
"RTN","MPIA43B",13,0)
 D BLDEVN
"RTN","MPIA43B",14,0)
 ;assuming one ICN per site use the AM xref to get the 985.5 ien
"RTN","MPIA43B",15,0)
 N TFIEN S TFIEN=$O(^MPI(985.5,"AM",+ICN,SITE,0)) I TFIEN S LID=$P($G(^MPI(985.5,TFIEN,0)),"^",3)
"RTN","MPIA43B",16,0)
 D BLDPID1(ICN2,SITE,.CNT,LID) ;*35 PASS ICN2 AS NEW ICN
"RTN","MPIA43B",17,0)
 K PID
"RTN","MPIA43B",18,0)
 D BLDPD1(ICN2,.CNT)
"RTN","MPIA43B",19,0)
 D BLDMRG(ICN,SITE,.CNT,LID)
"RTN","MPIA43B",20,0)
 D SEND
"RTN","MPIA43B",21,0)
 Q
"RTN","MPIA43B",22,0)
BLDEVN ;build EVN
"RTN","MPIA43B",23,0)
 ;get user info
"RTN","MPIA43B",24,0)
 N COMP,SUBCOMP,USERNAME,USERID
"RTN","MPIA43B",25,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIA43B",26,0)
 I $G(USERNAME)="" S USERNAME=DUZ
"RTN","MPIA43B",27,0)
 S USERNAME=$$GET1^DIQ(200,+USERNAME_",",.01)
"RTN","MPIA43B",28,0)
 S USERNAME=$$HLNAME^HLFNC(USERNAME,HL("ECH"))
"RTN","MPIA43B",29,0)
 S USERID=DUZ_COMP_$P(USERNAME,COMP)_COMP_$P(USERNAME,COMP,2)_COMP_COMP_COMP_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"L"_COMP_COMP_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$P($$SITE^VASITE,"^",3)_SUBCOMP_"L"
"RTN","MPIA43B",30,0)
 S HLA("HLS",CNT)="EVN"_HL("FS")_"A43"_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_HL("FS")_$G(USERID)
"RTN","MPIA43B",31,0)
 S CNT=CNT+1
"RTN","MPIA43B",32,0)
 Q
"RTN","MPIA43B",33,0)
BLDPID1(ICN,SITE,CNT,LID) ;build PID from File #985 **APC from File #985.5**
"RTN","MPIA43B",34,0)
 ;if this is a mismatch a null or """" should be passed in, so that
"RTN","MPIA43B",35,0)
 ;the ICN will be removed at the site.
"RTN","MPIA43B",36,0)
 N PID,X,COMP,SUBCOMP,MPIZN,REP
"RTN","MPIA43B",37,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA43B",38,0)
 S MPIZN=^MPIVET(ICN,0)
"RTN","MPIA43B",39,0)
 S PID(1)="PID"
"RTN","MPIA43B",40,0)
 S PID(2)="1"
"RTN","MPIA43B",41,0)
 S PID(3)=""  ;not used
"RTN","MPIA43B",42,0)
 ;repeat patient ID list including ICN,SSN AND DFN
"RTN","MPIA43B",43,0)
 ; **35 INCLUDE ICN (ICN2) AS THE ICN PASSED TO REPLACE ICN IN MRG
"RTN","MPIA43B",44,0)
 S PID(4)=$P(MPIZN,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_"200M"_SUBCOMP_"L" ;**35 changed site to 200M
"RTN","MPIA43B",45,0)
 ;**DFN**  add to the PID-3 or PID(4) **35
"RTN","MPIA43B",46,0)
 I $G(LID)'=""
"RTN","MPIA43B",47,0)
 S PID(4)=PID(4)_REP_LID_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA43B",48,0)
 S PID(4)=PID(4)_REP_$P(MPIZN,"^",14)_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA43B",49,0)
 S PID(5)=""  ;not used
"RTN","MPIA43B",50,0)
 ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","MPIA43B",51,0)
 S PID(6)=$P(MPIZN,"^",2)_COMP_$P(MPIZN,"^",3)_COMP_$P(MPIZN,"^",4)_COMP_$P(MPIZN,"^",5)_COMP_$P(MPIZN,"^",6)_COMP_COMP_"L"
"RTN","MPIA43B",52,0)
 ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","MPIA43B",53,0)
 S PID(7)=$P($P(MPIZN,"^",7),",")_COMP_$P($P(MPIZN,"^",7),",",2)_COMP_COMP_COMP_COMP_COMP_"M"
"RTN","MPIA43B",54,0)
 S PID(8)=$P(MPIZN,"^",8)  ;date/time of birth
"RTN","MPIA43B",55,0)
 S PID(9)=$P(MPIZN,"^",13)  ;sex
"RTN","MPIA43B",56,0)
 S PID(10)=""  ;patient alias (not used)
"RTN","MPIA43B",57,0)
 S PID(11)=""  ;race (not used)
"RTN","MPIA43B",58,0)
 S PID(12)=""  ;(not used)
"RTN","MPIA43B",59,0)
 S PID(13)="",PID(14)="",PID(15)="",PID(16)="",PID(17)="",PID(18)=""
"RTN","MPIA43B",60,0)
 S PID(19)=""
"RTN","MPIA43B",61,0)
 S PID(20)=$P(MPIZN,"^",14)  ;ssn for backwards compatibility now use PID-3
"RTN","MPIA43B",62,0)
 S PID(21)="",PID(22)="",PID(23)=""
"RTN","MPIA43B",63,0)
 S PID(24)=""  ;place of birth (not used) use PID-11 with an 'N' instead
"RTN","MPIA43B",64,0)
 S PID(25)="",PID(26)="",PID(27)="",PID(28)="",PID(29)=""
"RTN","MPIA43B",65,0)
 S PID(30)=$P(MPIZN,"^",11)  ;date of death
"RTN","MPIA43B",66,0)
 S PID(31)=""
"RTN","MPIA43B",67,0)
 S X=0 F  S X=$O(PID(X)) Q:'X  S HLA("HLS",CNT)=$G(HLA("HLS",CNT))_PID(X)_HL("FS")
"RTN","MPIA43B",68,0)
 S CNT=CNT+1
"RTN","MPIA43B",69,0)
 Q
"RTN","MPIA43B",70,0)
BLDPD1(ICN,CNT) ;build PD1 segment which contains the Primary Care/CMOR site
"RTN","MPIA43B",71,0)
 N SITESN,SITENM,SITE,HLCOMP
"RTN","MPIA43B",72,0)
 S (SITE,SITENM,SITESN)=""
"RTN","MPIA43B",73,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIA43B",74,0)
 S SITE=$P($G(^MPIVET(+ICN,1)),"^",2) I SITE'="" S SITE=$$NS^XUAF4(SITE),SITESN=$P(SITE,"^",2),SITENM=$P(SITE,"^")
"RTN","MPIA43B",75,0)
 S HLA("HLS",CNT)="PD1"_HL("FS")_HL("FS")_HL("FS")_SITENM_HLCOMP_"L"_HLCOMP_SITESN S CNT=CNT+1
"RTN","MPIA43B",76,0)
 Q
"RTN","MPIA43B",77,0)
BLDMRG(ICN,SITE,CNT,LID) ;build MRG from File #985 **APC from File #985.5**
"RTN","MPIA43B",78,0)
 N MRG,X,COMP,SUBCOMP,REP
"RTN","MPIA43B",79,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIA43B",80,0)
 S MPIZN=$G(^MPIVET(+ICN,0))
"RTN","MPIA43B",81,0)
 S MRG(1)="MRG" D
"RTN","MPIA43B",82,0)
 . ;repeat prior ID's including ICN **APC DFN**
"RTN","MPIA43B",83,0)
 . S MRG(2)=$P(MPIZN,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_"200M"_SUBCOMP_"L" ;**35 assigning authority is now 200M for ICN
"RTN","MPIA43B",84,0)
 .;**DFN**  add to the PID-3 or PID(4) **35
"RTN","MPIA43B",85,0)
 .I $G(LID)'=""
"RTN","MPIA43B",86,0)
 .S MRG(2)=MRG(2)_REP_$G(LID)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA43B",87,0)
 . S MRG(2)=MRG(2)_REP_$P(MPIZN,"^",14)_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","MPIA43B",88,0)
 . S MRG(8)=$P(MPIZN,"^",2)_COMP_$P(MPIZN,"^",3)_COMP_$P(MPIZN,"^",4)_COMP_$P(MPIZN,"^",5)_COMP_$P(MPIZN,"^",6)_COMP_COMP_"L"
"RTN","MPIA43B",89,0)
 F X=1:1:8 S HLA("HLS",CNT)=$G(HLA("HLS",CNT))_$G(MRG(X))_$S(X'=8:HL("FS"),1:"")
"RTN","MPIA43B",90,0)
 S CNT=CNT+1
"RTN","MPIA43B",91,0)
 Q
"RTN","MPIA43B",92,0)
SEND ;
"RTN","MPIA43B",93,0)
 N RESLT
"RTN","MPIA43B",94,0)
 ;sends the MFU message
"RTN","MPIA43B",95,0)
 K HLRESLT D GENERATE^HLMA("MPI ADT-A43 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIA43B",96,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,U,3))
"RTN","MPIA43B",97,0)
 ;if reslt log exception
"RTN","MPIA43B",98,0)
 Q
"RTN","MPIA43B",99,0)
 ;
"RTN","MPIA43B",100,0)
INIT(HL,HLEID) ;
"RTN","MPIA43B",101,0)
 ;initialize HL7 variables
"RTN","MPIA43B",102,0)
 N ER
"RTN","MPIA43B",103,0)
 S ER=0
"RTN","MPIA43B",104,0)
 D INIT^HLFNC2("MPI ADT-A43 SERVER",.HL)
"RTN","MPIA43B",105,0)
 I $O(HL(""))="" S ER="1^"_$P(HL,U,2)
"RTN","MPIA43B",106,0)
 I +ER'=1 I $G(HL)]"" S ER=$G(HL)
"RTN","MPIA43B",107,0)
 Q ER
"RTN","MPIA43B",108,0)
 ;
"RTN","MPIA43R")
0^230^B4307259
"RTN","MPIA43R",1,0)
MPIA43R ;BIOFO/DLR,CMC,CML-Routine for routing ADT-A43 HL7 messages ;9/21/02
"RTN","MPIA43R",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**35**;30 Apr 99
"RTN","MPIA43R",3,0)
ROUTE ;route the ADT-A43 message to all TF's
"RTN","MPIA43R",4,0)
 ;All TF's and subscriptions for this site will be removed at all
"RTN","MPIA43R",5,0)
 ;associated site, and at that site all TF's, Subscriptions (if any),
"RTN","MPIA43R",6,0)
 ;ICN, ICN checksum, ICN history, CMOR, CMOR history will be removed
"RTN","MPIA43R",7,0)
 ;and replaced with a local ICN.
"RTN","MPIA43R",8,0)
 N MPILP,MPILK,INDEX,CNT,MPISN,MPISSITE
"RTN","MPIA43R",9,0)
 K HLL("LINKS")
"RTN","MPIA43R",10,0)
 S CNT=0
"RTN","MPIA43R",11,0)
 I '$D(ICN) Q  ;log exception
"RTN","MPIA43R",12,0)
 I +$G(ICN)>0 K ^XTMP("MPI"_HL("ETN")_"%"_ICN) S ^XTMP("MPI"_HL("ETN")_"%"_ICN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"HL7 A43 UNLINK "_$G(SITE)_" FROM "_ICN
"RTN","MPIA43R",13,0)
 N LINKS
"RTN","MPIA43R",14,0)
 S MPILP=0 F  S MPILP=$O(^MPI(985.5,"AM",ICN,MPILP)) Q:'MPILP  D
"RTN","MPIA43R",15,0)
 . S LINKS(MPILP)=""
"RTN","MPIA43R",16,0)
 .;assuming a single ICN per site
"RTN","MPIA43R",17,0)
 . S MPISIEN=$O(^MPI(985.5,"AM",ICN,MPILP,0)) I +$G(MPISIEN)>0 D
"RTN","MPIA43R",18,0)
 .. N Z S Z=0 F  S Z=$O(^MPI(985.5,MPISIEN,71,Z)) Q:'Z  S MPISSITE=$P(^MPI(985.5,MPISIEN,71,Z,0),"^") I $G(MPISSITE)>0 S LINKS(MPISSITE)=""
"RTN","MPIA43R",19,0)
 I $O(LINKS(0)) S MPILP=0 F  S MPILP=$O(LINKS(MPILP)) Q:'MPILP  D 
"RTN","MPIA43R",20,0)
 . D LINK^HLUTIL3(MPILP,.MPILK)
"RTN","MPIA43R",21,0)
 . S INDEX=$O(MPILK(0)) I +INDEX>0 S CNT=CNT+1 S HLL("LINKS",CNT)="MPI ADT-A43 CLIENT"_"^"_MPILK(INDEX) K MPILK
"RTN","MPIA43R",22,0)
 . I CNT>0 D
"RTN","MPIA43R",23,0)
 ..;set the XTMP global
"RTN","MPIA43R",24,0)
 .. S MPISN=$$STA^XUAF4(MPILP) I MPISN S ^XTMP("MPI"_HL("ETN")_"%"_ICN,MPISN,0)="A"_"^"_$G(HLRESLT)
"RTN","MPIA43R",25,0)
 .. W !,"Sending "_$E($P($$NS^XUAF4(MPILP),"^"),1,24)_" unlink msg to station "_MPISN_" for ICN "_ICN_"..."
"RTN","MPIA43R",26,0)
 K ICN,SITE
"RTN","MPIA43R",27,0)
 Q
"RTN","MPIA43U")
0^231^B35901305
"RTN","MPIA43U",1,0)
MPIA43U ;BIOFO/CMC,CML-UTILITIES ROUTINE FOR ADT-A43 HL7 messages ;2/22/05
"RTN","MPIA43U",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**35**;30 Apr 99
"RTN","MPIA43U",3,0)
 ;this routine was created new for **35
"RTN","MPIA43U",4,0)
 ;
"RTN","MPIA43U",5,0)
NEW(TFIEN) ;create new ICN
"RTN","MPIA43U",6,0)
 ;setup array to contain field values to create new ICN entry
"RTN","MPIA43U",7,0)
 N MPIWHO,SITEN
"RTN","MPIA43U",8,0)
 W !!,"New ICN being created..."
"RTN","MPIA43U",9,0)
 D SETARR(TFIEN,.ARR)
"RTN","MPIA43U",10,0)
 S MPIWHO=$P($G(^VA(200,DUZ,0)),"^")_" VIA UNLINK" ;person running option
"RTN","MPIA43U",11,0)
 I MPIWHO="" S MPIWHO="IM DQ STAFF VIA UNLINK"
"RTN","MPIA43U",12,0)
 S ARR(21)=MPIWHO,SITEN=$$STA^XUAF4($P(^MPI(985.5,TFIEN,0),"^")),ICN2=$$ADDVET^MPIUTL3(SITEN,.ARR,1)
"RTN","MPIA43U",13,0)
 I +ICN2=-1 W !,"Unable to create a new ICN for this patient." Q
"RTN","MPIA43U",14,0)
 W !,ICN2," assigned to this patient."
"RTN","MPIA43U",15,0)
 Q
"RTN","MPIA43U",16,0)
 ;
"RTN","MPIA43U",17,0)
SETARR(TFIEN,ARR) ; setup array ARR to contain data used to create new ICN
"RTN","MPIA43U",18,0)
 N NODE0,NODE1,NODE2,NODE3,NODE50,NODE60,NODE70,CNT,IEN
"RTN","MPIA43U",19,0)
 S NODE0=$G(^MPI(985.5,TFIEN,0))
"RTN","MPIA43U",20,0)
 S ARR("DFN")=$P(NODE0,"^",3)
"RTN","MPIA43U",21,0)
 S NODE1=$G(^MPI(985.5,TFIEN,1))
"RTN","MPIA43U",22,0)
 S ARR(6)=$P(NODE1,"^",7) ;MOTHER'S MAIDEN NAME
"RTN","MPIA43U",23,0)
 S ARR(8)=$P(NODE1,"^",9) ;POB CITY
"RTN","MPIA43U",24,0)
 S ARR(9)=$P(NODE1,"^",10) ;POB STATE PTR
"RTN","MPIA43U",25,0)
 S ARR(10)=$P(NODE1,"^",11) ;DOD
"RTN","MPIA43U",26,0)
 S ARR(12)=$P(NODE1,"^",13) ;GENDER
"RTN","MPIA43U",27,0)
 S NODE2=$G(^MPI(985.5,TFIEN,2))
"RTN","MPIA43U",28,0)
 S ARR(15)=$G(NODE2,"^") ;CLAIM #
"RTN","MPIA43U",29,0)
 S NODE3=$G(^MPI(985.5,TFIEN,3))
"RTN","MPIA43U",30,0)
 S ARR(30)=$P(NODE3,"^") ;MARITAL STATUS
"RTN","MPIA43U",31,0)
 S ARR(31)=$P(NODE3,"^",2) ;STREET ADDRESS [LINE 1]
"RTN","MPIA43U",32,0)
 S ARR(32)=$P(NODE3,"^",3) ;STREET ADDRESS [LINE 2]
"RTN","MPIA43U",33,0)
 S ARR(33)=$P(NODE3,"^",4) ;STREET ADDRESS [LINE 3]
"RTN","MPIA43U",34,0)
 S ARR(34)=$P(NODE3,"^",5) ;CITY
"RTN","MPIA43U",35,0)
 S ARR(35)=$P(NODE3,"^",6) ;STATE
"RTN","MPIA43U",36,0)
 S ARR(36)=$P(NODE3,"^",7) ;ZIP
"RTN","MPIA43U",37,0)
 S ARR(37)=$P(NODE3,"^",8) ;PHONE
"RTN","MPIA43U",38,0)
 S ARR(38)=$P(NODE3,"^",9) ;POW STATUS
"RTN","MPIA43U",39,0)
 S ARR(39)=$P(NODE3,"^",10) ;MBI
"RTN","MPIA43U",40,0)
 I $G(^MPI(985.5,TFIEN,50,0)),$O(^MPI(985.5,TFIEN,50,""))'="" D
"RTN","MPIA43U",41,0)
 .S CNT=1,IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,50,IEN)) Q:IEN=""  D
"RTN","MPIA43U",42,0)
 ..S NODE50=$G(^MPI(985.5,TFIEN,50,IEN,0))
"RTN","MPIA43U",43,0)
 ..S ARR("ALIAS",CNT,1)=$P(NODE50,"^") ;alias last name
"RTN","MPIA43U",44,0)
 ..S ARR("ALIAS",CNT,2)=$P(NODE50,"^",2) ;alias first name
"RTN","MPIA43U",45,0)
 ..S ARR("ALIAS",CNT,3)=$P(NODE50,"^",3) ;alias middle name
"RTN","MPIA43U",46,0)
 ..S ARR("ALIAS",CNT,4)=$P(NODE50,"^",4) ;alias prefix name
"RTN","MPIA43U",47,0)
 ..S ARR("ALIAS",CNT,5)=$P(NODE50,"^",5) ;alias suffix name
"RTN","MPIA43U",48,0)
 ..S CNT=CNT+1
"RTN","MPIA43U",49,0)
 I $G(^MPI(985.5,TFIEN,60,0)),$O(^MPI(985.5,TFIEN,60,""))'="" D
"RTN","MPIA43U",50,0)
 .S CNT=1,IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,60,IEN)) Q:IEN=""  D
"RTN","MPIA43U",51,0)
 ..S ARR("RACE",CNT)=$G(^MPI(985.5,TFIEN,60,IEN,0)) ;race pointer
"RTN","MPIA43U",52,0)
 I $G(^MPI(985.5,TFIEN,70,0)),$O(^MPI(985.5,TFIEN,70,""))'="" D
"RTN","MPIA43U",53,0)
 .S CNT=1,IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,70,IEN)) Q:IEN=""  D
"RTN","MPIA43U",54,0)
 ..S ARR("ETH",CNT)=$G(^MPI(985.5,TFIEN,70,IEN,0)) ;ethnicity pointer
"RTN","MPIA43U",55,0)
 Q
"RTN","MPIA43U",56,0)
 ;
"RTN","MPIA43U",57,0)
PMCHK ;
"RTN","MPIA43U",58,0)
 ;Need defined coming in:
"RTN","MPIA43U",59,0)
 ;TFIEN - TF in 985.5 to be moved.
"RTN","MPIA43U",60,0)
 ;MPI - array of potential matches
"RTN","MPIA43U",61,0)
 ;SITESN
"RTN","MPIA43U",62,0)
 ;ICN - FROM ICN
"RTN","MPIA43U",63,0)
 ;
"RTN","MPIA43U",64,0)
 ;Need to be defined coming out
"RTN","MPIA43U",65,0)
 ;ICN2 - TO ICN
"RTN","MPIA43U",66,0)
 ;
"RTN","MPIA43U",67,0)
 N NODE,TFDOB,TFSSN,TFSEX,TODOB,TOSSN,TOSEX,DOBCHK,SSNCHK,SEXCHK,GOT
"RTN","MPIA43U",68,0)
 ;
"RTN","MPIA43U",69,0)
 ;no potential matches found
"RTN","MPIA43U",70,0)
 I $O(MPI(0))="" D  I ICN2="" Q
"RTN","MPIA43U",71,0)
 .W !!,">> No potential matches have been found for this patient.",!
"RTN","MPIA43U",72,0)
 .S DIR(0)="Y",DIR("B")="No",DIR("A")="Do you want to create a new ICN for this patient" D ^DIR K DIR
"RTN","MPIA43U",73,0)
 .I Y'=1 W !,"MOVE aborted, no new ICN created." S ICN2="" Q
"RTN","MPIA43U",74,0)
 .I Y=1 D NEW(TFIEN)  ; pass in the 985.5 record that will be used by NEW^MPIA43U to create a new ICN
"RTN","MPIA43U",75,0)
 ;
"RTN","MPIA43U",76,0)
 ;potential matches found
"RTN","MPIA43U",77,0)
 I $O(MPI(0)) D  I RET=-1 Q
"RTN","MPIA43U",78,0)
 .S RET=$$PMDISP(.MPI)
"RTN","MPIA43U",79,0)
 .I RET="N" D NEW(TFIEN) Q  ; pass in the 985.5 record that will be used by NEW^MPIA43U to create a new ICN
"RTN","MPIA43U",80,0)
 .I +RET=-1 S ICN2="" Q
"RTN","MPIA43U",81,0)
 .;do checks to be sure SSN, DOB, and SEX for FROM entry in 985.5 match values in 985 and warn if they don't
"RTN","MPIA43U",82,0)
 .S ICN2=RET
"RTN","MPIA43U",83,0)
 .S TFIEN=$O(^MPI(985.5,"AM",ICN,$$IEN^XUAF4(SITESN),0))
"RTN","MPIA43U",84,0)
 .;get data from 985.5 FROM record
"RTN","MPIA43U",85,0)
 .S NODE=^MPI(985.5,TFIEN,1)
"RTN","MPIA43U",86,0)
 .S TFDOB=$$GET1^DIQ(985.5,TFIEN_",",17,"I")
"RTN","MPIA43U",87,0)
 .S TFSSN=$$GET1^DIQ(985.5,TFIEN_",",23)
"RTN","MPIA43U",88,0)
 .S TFSEX=$$GET1^DIQ(985.5,TFIEN_",",22)
"RTN","MPIA43U",89,0)
 .;get data from 985 TO record
"RTN","MPIA43U",90,0)
 .S NODE=^MPIVET(ICN2,0)
"RTN","MPIA43U",91,0)
 .S TODOB=$$GET1^DIQ(985,ICN2_",",7,"I")
"RTN","MPIA43U",92,0)
 .S TOSSN=$$GET1^DIQ(985,ICN2_",",13)
"RTN","MPIA43U",93,0)
 .S TOSEX=$$GET1^DIQ(985,ICN2_",",12)
"RTN","MPIA43U",94,0)
 .S (DOBCHK,SSNCHK,SEXCHK,GOT)=0
"RTN","MPIA43U",95,0)
 .I TFDOB'=TODOB S DOBCHK=1,GOT=1
"RTN","MPIA43U",96,0)
 .I TFSSN'=TOSSN S SSNCHK=1,GOT=1
"RTN","MPIA43U",97,0)
 .I TFSEX'=TOSEX S SEXCHK=1,GOT=1
"RTN","MPIA43U",98,0)
 .I GOT D
"RTN","MPIA43U",99,0)
 ..W !!,">> The ICN you have selected has the following data mismatches"
"RTN","MPIA43U",100,0)
 ..W !,">> with the site's data you are moving:",!
"RTN","MPIA43U",101,0)
 ..I DOBCHK D
"RTN","MPIA43U",102,0)
 ...W !?4,"<FROM> DOB = ",$$FMTE^XLFDT(TFDOB),?32,"-  <TO> DOB = ",$$FMTE^XLFDT(TODOB)
"RTN","MPIA43U",103,0)
 ..I SSNCHK D
"RTN","MPIA43U",104,0)
 ...W !?4,"<FROM> SSN = ",TFSSN,?32,"-  <TO> SSN = ",TOSSN
"RTN","MPIA43U",105,0)
 ..I SEXCHK D
"RTN","MPIA43U",106,0)
 ...W !?4,"<FROM> SEX = ",TFSEX,?32,"-  <TO> SEX = ",TOSEX
"RTN","MPIA43U",107,0)
 .;ask if user is sure about match
"RTN","MPIA43U",108,0)
 .W !
"RTN","MPIA43U",109,0)
 .S DIR(0)="Y",DIR("B")="No",DIR("A")="Are you sure you want to make this match" D ^DIR K DIR
"RTN","MPIA43U",110,0)
 .I Y=0 S ICN2=""
"RTN","MPIA43U",111,0)
 .I $D(DUOUT)!($D(DTOUT)) S ICN2=""
"RTN","MPIA43U",112,0)
 Q
"RTN","MPIA43U",113,0)
 ;
"RTN","MPIA43U",114,0)
PMDISP(MPI) ;display potential matches for selection
"RTN","MPIA43U",115,0)
 ;MPI = array of potential match ICN(s)
"RTN","MPIA43U",116,0)
 ;     Possible return values:
"RTN","MPIA43U",117,0)
 ;     - ICN selected to match to
"RTN","MPIA43U",118,0)
 ;     - "N" if user opts to create new ICN
"RTN","MPIA43U",119,0)
 ;     - -1 if no action taken
"RTN","MPIA43U",120,0)
 ;
"RTN","MPIA43U",121,0)
 N ICNLP,PMARR,ICNCNT,LOOP,PMICN,NAME,SUR,FNM,MNM,SUF,CMORIEN,CMOR,CMORNM,SSN,DOB,SEX,NODE
"RTN","MPIA43U",122,0)
 S (ICNCNT,ICNLP)=0 F  S ICNLP=$O(MPI(ICNLP)) Q:'ICNLP  S ICNCNT=ICNCNT+1,PMARR(ICNCNT)=ICNLP
"RTN","MPIA43U",123,0)
 W !!,"The following potential ",$S(ICNCNT>1:"matches were ",1:"match was "),"identified:"
"RTN","MPIA43U",124,0)
 S ICNCNT=ICNCNT+1,PMARR(ICNCNT)="NEW"
"RTN","MPIA43U",125,0)
 S LOOP=0 F  S LOOP=$O(PMARR(LOOP)) Q:'LOOP  D
"RTN","MPIA43U",126,0)
 .I LOOP=ICNCNT W !!,$J(LOOP,2),") Create NEW ICN." Q
"RTN","MPIA43U",127,0)
 .S PMICN=PMARR(LOOP),NODE=^MPIVET(PMICN,0)
"RTN","MPIA43U",128,0)
 .S NAME="",SUR=$P(NODE,"^",2),FNM=$P(NODE,"^",3),MNM=$P(NODE,"^",4),SUF=$P(NODE,"^",5)
"RTN","MPIA43U",129,0)
 .I SUR]"" S NAME=SUR_","_FNM_" "_MNM_" "_SUF
"RTN","MPIA43U",130,0)
 .S CMORIEN=$$GET1^DIQ(985,+PMICN_",",16,"I"),(CMOR,CMORNM)=""
"RTN","MPIA43U",131,0)
 .I +CMORIEN>0 S CMOR=$P($$NS^XUAF4(CMORIEN),"^",2),CMORNM=$P($$NS^XUAF4(CMORIEN),"^")
"RTN","MPIA43U",132,0)
 .S SSN=$$GET1^DIQ(985,+PMICN_",",13)
"RTN","MPIA43U",133,0)
 .S DOB=$$GET1^DIQ(985,+PMICN_",",7)
"RTN","MPIA43U",134,0)
 .S SEX=$$GET1^DIQ(985,+PMICN_",",12)
"RTN","MPIA43U",135,0)
 .W !!,$J(LOOP,2),") ",PMICN," - CMOR: (",CMOR,") ",CMORNM
"RTN","MPIA43U",136,0)
 .W !?4,NAME,?36,SSN,"  ",DOB,"  ",SEX
"RTN","MPIA43U",137,0)
 ;
"RTN","MPIA43U",138,0)
 W !
"RTN","MPIA43U",139,0)
 K DIR,Y
"RTN","MPIA43U",140,0)
 S DIR(0)="NA^1:"_ICNCNT
"RTN","MPIA43U",141,0)
 S DIR("A")="Select ICN (1-"_(ICNCNT-1)_") to match or enter ("_ICNCNT_") to create a new ICN: "
"RTN","MPIA43U",142,0)
 D ^DIR K DIR
"RTN","MPIA43U",143,0)
 I Y="^" S RET="-1^No action taken" Q RET
"RTN","MPIA43U",144,0)
 I Y=ICNCNT S RET="N" Q RET
"RTN","MPIA43U",145,0)
 S RET=PMARR(Y) Q RET
"RTN","MPIA43U",146,0)
 Q
"RTN","MPIA43U2")
0^232^B77883502
"RTN","MPIA43U2",1,0)
MPIA43U2 ;BIOFO/CML-UTILITIES ROUTINE FOR ADT-A43 HL7 messages ;2/22/05
"RTN","MPIA43U2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**35**;30 Apr 99
"RTN","MPIA43U2",3,0)
 ;this routine was created new for **35
"RTN","MPIA43U2",4,0)
 ;
"RTN","MPIA43U2",5,0)
LOG ;check for Res Journal file (#985.2) entries for the TO and FROM ICNs
"RTN","MPIA43U2",6,0)
 ;this call is made with the following defined and returned to calling routine:
"RTN","MPIA43U2",7,0)
 ;SITE (site being removed - station number)
"RTN","MPIA43U2",8,0)
 ;ICN (FROM ICN)
"RTN","MPIA43U2",9,0)
 ;ICN2 (TO ICN)
"RTN","MPIA43U2",10,0)
 ;
"RTN","MPIA43U2",11,0)
 N CASEIEN,NOTE,CASENUM,USER,NEWICN,Y
"RTN","MPIA43U2",12,0)
 S USER=$P(^VA(200,DUZ,0),"^")
"RTN","MPIA43U2",13,0)
 ;
"RTN","MPIA43U2",14,0)
1 ;If FROM ICN has no case and TO ICN has no case:
"RTN","MPIA43U2",15,0)
 ;- Create new case, add TO ICN as an additional ICN
"RTN","MPIA43U2",16,0)
 ;- Display new case info to user
"RTN","MPIA43U2",17,0)
 ;- Log note in 985.2
"RTN","MPIA43U2",18,0)
 I +ICN,'$D(^MPI(985.2,"ICN",ICN)),'$D(^MPI(985.2,"ICN",ICN2)) D  G LOGMP
"RTN","MPIA43U2",19,0)
 .W !!,">> There is no Resolution Journal case for either ICN."
"RTN","MPIA43U2",20,0)
 .W !,">> One moment while one is created..."
"RTN","MPIA43U2",21,0)
 .S DIC="^MPI(985.2,",X=ICN,DIC(0)="LZ" D ^DIC K DIC
"RTN","MPIA43U2",22,0)
 .I +Y<0 W !,">> Unable to create case." Q
"RTN","MPIA43U2",23,0)
 .;add TO ICN to ICN multiple
"RTN","MPIA43U2",24,0)
 .S CASEIEN=+Y,CASENUM=$P(Y,"^",2),NEWICN=ICN2
"RTN","MPIA43U2",25,0)
 .D ADDICN
"RTN","MPIA43U2",26,0)
 .D LOGNOTE
"RTN","MPIA43U2",27,0)
 ;
"RTN","MPIA43U2",28,0)
2 ;If FROM ICN has no case and TO ICN has a preexisting  case:
"RTN","MPIA43U2",29,0)
 ;- Do not create a new case
"RTN","MPIA43U2",30,0)
 ;- Add FROM ICN to preexisting case
"RTN","MPIA43U2",31,0)
 ;- Display message to user about preexisting case and that FROM ICN has been added to that case
"RTN","MPIA43U2",32,0)
 ;- Log note to 985.2
"RTN","MPIA43U2",33,0)
 I +ICN,'$D(^MPI(985.2,"ICN",ICN)),$D(^MPI(985.2,"ICN",ICN2)) D  G LOGMP
"RTN","MPIA43U2",34,0)
 .S CASEIEN=$O(^MPI(985.2,"ICN",ICN2,0)),CASENUM=$P(^MPI(985.2,CASEIEN,0),"^")
"RTN","MPIA43U2",35,0)
 .W !!,">> There is a pre-existing Resolution Journal case:"
"RTN","MPIA43U2",36,0)
 .W !,">> Case #",CASENUM," exists for ICN ",ICN2,"."
"RTN","MPIA43U2",37,0)
 .W !,">> ICN ",ICN," will be added to this case."
"RTN","MPIA43U2",38,0)
 .;add FROM ICN to ICN multiple
"RTN","MPIA43U2",39,0)
 .S NEWICN=ICN
"RTN","MPIA43U2",40,0)
 .D ADDICN
"RTN","MPIA43U2",41,0)
 .D LOGNOTE
"RTN","MPIA43U2",42,0)
 ;
"RTN","MPIA43U2",43,0)
3 ;If FROM ICN has preexisting  case and TO ICN has no case:
"RTN","MPIA43U2",44,0)
 ;- Do not create a new case
"RTN","MPIA43U2",45,0)
 ;- Add TO ICN to preexisting case.
"RTN","MPIA43U2",46,0)
 ;- Display message to user about preexisting case and that TO ICN has been added to that case.
"RTN","MPIA43U2",47,0)
 ;- Log note to 985.2
"RTN","MPIA43U2",48,0)
 I +ICN,$D(^MPI(985.2,"ICN",ICN)),'$D(^MPI(985.2,"ICN",ICN2)) D  G LOGMP
"RTN","MPIA43U2",49,0)
 .S CASEIEN=$O(^MPI(985.2,"ICN",ICN,0)),CASENUM=$P(^MPI(985.2,CASEIEN,0),"^")
"RTN","MPIA43U2",50,0)
 .W !!,">> There is a pre-existing Resolution Journal case:"
"RTN","MPIA43U2",51,0)
 .W !,">> Case #",CASENUM," exists for ICN ",ICN,"."
"RTN","MPIA43U2",52,0)
 .W !,">> ICN ",ICN2," will be added to this case."
"RTN","MPIA43U2",53,0)
 .;add TO ICN to ICN multiple
"RTN","MPIA43U2",54,0)
 .S NEWICN=ICN2
"RTN","MPIA43U2",55,0)
 .D ADDICN
"RTN","MPIA43U2",56,0)
 .D LOGNOTE
"RTN","MPIA43U2",57,0)
 ;
"RTN","MPIA43U2",58,0)
4 ;If FROM ICN has preexisting  case and TO ICN is part of that same case:
"RTN","MPIA43U2",59,0)
 ;- Do not create a new case
"RTN","MPIA43U2",60,0)
 ;- Display message to user about preexisting case.
"RTN","MPIA43U2",61,0)
 ;- Log note to 985.2
"RTN","MPIA43U2",62,0)
 N TOCASE,FROMCASE,ED,CASEARR
"RTN","MPIA43U2",63,0)
 S ED=0
"RTN","MPIA43U2",64,0)
 I +ICN,$D(^MPI(985.2,"ICN",ICN)),$D(^MPI(985.2,"ICN",ICN2)) D  I ED G LOGMP
"RTN","MPIA43U2",65,0)
 .S FROMCASE=$O(^MPI(985.2,"ICN",ICN,0)),TOCASE=$O(^MPI(985.2,"ICN",ICN2,0))
"RTN","MPIA43U2",66,0)
 .I FROMCASE=TOCASE D  S ED=1 Q
"RTN","MPIA43U2",67,0)
 ..S CASEIEN=FROMCASE,CASENUM=$P(^MPI(985.2,CASEIEN,0),"^")
"RTN","MPIA43U2",68,0)
 ..W !!,">> There is a pre-existing Resolution Journal case for these ICNs:"
"RTN","MPIA43U2",69,0)
 ..W !,">> Case #",CASENUM," contains ICN ",ICN," and ICN ",ICN2,"."
"RTN","MPIA43U2",70,0)
 ..W !,">> Appropriate notes will be added to this case."
"RTN","MPIA43U2",71,0)
 ..D LOGNOTE
"RTN","MPIA43U2",72,0)
5 .;If FROM ICN has preexisting case and TO ICN is part of a different preexisting case:
"RTN","MPIA43U2",73,0)
 .;- Display warning to user about the situation, that a manual case merge is needed.
"RTN","MPIA43U2",74,0)
 .;- Log note to both cases about the resolution.
"RTN","MPIA43U2",75,0)
 .I FROMCASE'=TOCASE D  Q
"RTN","MPIA43U2",76,0)
 ..S CASEARR(FROMCASE)=$P(^MPI(985.2,FROMCASE,0),"^")
"RTN","MPIA43U2",77,0)
 ..S CASEARR(TOCASE)=$P(^MPI(985.2,TOCASE,0),"^")
"RTN","MPIA43U2",78,0)
 ..W !!,">> There are 2 pre-existing Resolution Journal cases in this situation:"
"RTN","MPIA43U2",79,0)
 ..W !,">> Case #",CASEARR(FROMCASE)," exists for ICN ",ICN,"."
"RTN","MPIA43U2",80,0)
 ..W !,">> Case #",CASEARR(TOCASE)," exists for ICN ",ICN2,"."
"RTN","MPIA43U2",81,0)
 ..W !,">> These cases need to be manually merged."
"RTN","MPIA43U2",82,0)
 ..S CASEIEN=0 F  S CASEIEN=$O(CASEARR(CASEIEN)) Q:'CASEIEN  D LOGNOTE
"RTN","MPIA43U2",83,0)
 ..;since case can't be determined, don't store it in the MPI MISMATCHED PATIENT LOG file (#985.26)
"RTN","MPIA43U2",84,0)
 ..S CASENUM=""
"RTN","MPIA43U2",85,0)
 Q
"RTN","MPIA43U2",86,0)
 ;
"RTN","MPIA43U2",87,0)
LOGMP ;- add entry to MPI MISMATCHED PATIENT LOG file (#985.26)
"RTN","MPIA43U2",88,0)
 N EDDT,TFIEN
"RTN","MPIA43U2",89,0)
 S TFIEN=$O(^MPI(985.5,"AM",ICN,$$IEN^XUAF4(SITE),0))
"RTN","MPIA43U2",90,0)
 K DIE,DA,DR
"RTN","MPIA43U2",91,0)
 S DIC="^MPI(985.26,",DINUM=TFIEN,X="`"_TFIEN,DIC(0)="LZ" D ^DIC K DIC,DINUM
"RTN","MPIA43U2",92,0)
 I +Y<0 W !,"Problem encountered trying to log entry to MPI MISMATCHED PATIENT LOG file (#985.26)." Q
"RTN","MPIA43U2",93,0)
 S EDDT=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MPIA43U2",94,0)
 L +^MPI(985.26,TFIEN):10
"RTN","MPIA43U2",95,0)
 S DIE="^MPI(985.26,",DA=TFIEN,DR="1///^S X=ICN;2///^S X=ICN2;3///^S X=$$NOW^XLFDT;4///^S X=USER;5///^S X=CASENUM"
"RTN","MPIA43U2",96,0)
 D ^DIE K DIE
"RTN","MPIA43U2",97,0)
 L -^MPI(985.26,TFIEN)
"RTN","MPIA43U2",98,0)
 W !!,"   << MPI Mismatched Patient Log file (#985.26) updated. >>"
"RTN","MPIA43U2",99,0)
 Q
"RTN","MPIA43U2",100,0)
 ;
"RTN","MPIA43U2",101,0)
ADDICN ;add additional ICN to existing case
"RTN","MPIA43U2",102,0)
 ;coming into this call you need:
"RTN","MPIA43U2",103,0)
 ;OLDICN - this is the ICN that originally created the case
"RTN","MPIA43U2",104,0)
 ;NEWICN - this is the ICN to be added to the ICN multiple in the case
"RTN","MPIA43U2",105,0)
 ;CASEIEN
"RTN","MPIA43U2",106,0)
 ;CASENUM
"RTN","MPIA43U2",107,0)
 ;USER
"RTN","MPIA43U2",108,0)
 ;
"RTN","MPIA43U2",109,0)
 N NOW,MPIMSSN,ICNNODE,DOB,SSNCHK,LNM,FNM,MNM,NM,TF,TFNM
"RTN","MPIA43U2",110,0)
 L +^MPI(985.2,CASEIEN):10
"RTN","MPIA43U2",111,0)
 S NOW=$$NOW^XLFDT,CASENUM=$P(^MPI(985.2,CASEIEN,0),"^")
"RTN","MPIA43U2",112,0)
 ;
"RTN","MPIA43U2",113,0)
 S MPIMSSN=$P(^MPIVET(NEWICN,0),"^",14)
"RTN","MPIA43U2",114,0)
 ;add SSN for New ICN to the SSN multiple
"RTN","MPIA43U2",115,0)
 I MPIMSSN D
"RTN","MPIA43U2",116,0)
 .K DIC,DA,X,DIE,DR
"RTN","MPIA43U2",117,0)
 .S DIC("P")=$P(^DD(985.2,3,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIA43U2",118,0)
 .S DIC="^MPI(985.2,"_DA(1)_",""SSN"",",X=MPIMSSN D FILE^DICN
"RTN","MPIA43U2",119,0)
 .S DA(1)=CASEIEN,DIE="^MPI(985.2,"_DA(1)_",""SSN"",",DR="1///^S X=NEWICN" D ^DIE K DIE
"RTN","MPIA43U2",120,0)
 ;
"RTN","MPIA43U2",121,0)
 ;add NEWICN to ICN multiple and demographic data for this ICN from file 985
"RTN","MPIA43U2",122,0)
 K DIC,DA,X,DR
"RTN","MPIA43U2",123,0)
 S DIC("P")=$P(^DD(985.2,4,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIA43U2",124,0)
 S DIC="^MPI(985.2,"_DA(1)_",""ICN"",",X=NEWICN D FILE^DICN
"RTN","MPIA43U2",125,0)
 S ICNNODE=^MPIVET(NEWICN,0),DOB=$$FMTE^XLFDT($P(ICNNODE,"^",8)),SSNCHK=$P(ICNNODE,"^",14)
"RTN","MPIA43U2",126,0)
 S LNM=$P(ICNNODE,"^",2),FNM=$P(ICNNODE,"^",3),MNM=$P(ICNNODE,"^",4),NM=LNM_","_FNM_" "_MNM
"RTN","MPIA43U2",127,0)
 S DA(1)=CASEIEN,DIE="^MPI(985.2,"_DA(1)_",""ICN"",",DR="1///^S X=NM;2///^S X=DOB;3///^S X=SSNCHK" D ^DIE K DIE
"RTN","MPIA43U2",128,0)
 ;
"RTN","MPIA43U2",129,0)
 ;add TF data to case for NEW ICN
"RTN","MPIA43U2",130,0)
 S TF=0 F  S TF=$O(^MPI(985.5,"AM",NEWICN,TF)) Q:'TF  D
"RTN","MPIA43U2",131,0)
 .S TFNM=$$GET1^DIQ(4,+TF_",",.01)
"RTN","MPIA43U2",132,0)
 .K DIC,DA,X,DR
"RTN","MPIA43U2",133,0)
 .S DIC("P")=$P(^DD(985.2,5,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIA43U2",134,0)
 .S DIC="^MPI(985.2,"_DA(1)_",""SITE"",",X=TF D FILE^DICN
"RTN","MPIA43U2",135,0)
 .S DA(1)=CASEIEN,DIE="^MPI(985.2,"_DA(1)_",""SITE"",",DR="1///^S X=NEWICN" D ^DIE
"RTN","MPIA43U2",136,0)
 ;
"RTN","MPIA43U2",137,0)
 L -^MPI(985.2,CASEIEN):10
"RTN","MPIA43U2",138,0)
 ;
"RTN","MPIA43U2",139,0)
 ;edit RESOLUTION JOURNAL CASE NUMBER field (#22) in file #985 for NEWICN
"RTN","MPIA43U2",140,0)
 K DIC,DA,X,DR
"RTN","MPIA43U2",141,0)
 I $P($G(^MPIVET(NEWICN,1)),"^",8)'=CASEIEN D
"RTN","MPIA43U2",142,0)
 .L +^MPIVET(NEWICN):10
"RTN","MPIA43U2",143,0)
 .S DIE="^MPIVET(",DA=NEWICN,DR="22///^S X=CASENUM" D ^DIE K DIE
"RTN","MPIA43U2",144,0)
 .L -^MPIVET(NEWICN)
"RTN","MPIA43U2",145,0)
 ;
"RTN","MPIA43U2",146,0)
 ;add entry to MPI DATA MGT ACTIVE RESOLUTION WORK FILE (#985.25)
"RTN","MPIA43U2",147,0)
 I '$D(^MPI(985.25,NEWICN,0)) D
"RTN","MPIA43U2",148,0)
 .K DIC,DA,X,DR
"RTN","MPIA43U2",149,0)
 .S DIC="^MPI(985.25,",X=NEWICN,DIC(0)="LZ",DINUM=NEWICN D FILE^DICN K DINUM
"RTN","MPIA43U2",150,0)
 .S DIE="^MPI(985.25,",DA=NEWICN,DR="1///^S X=MPIMSSN;2///^S X=USER;3///^S X=NOW;4///^S X=CASENUM" D ^DIE K DIE
"RTN","MPIA43U2",151,0)
 ;
"RTN","MPIA43U2",152,0)
 W !!,"ICN #",NEWICN," and related data added to Case #",CASENUM,"."
"RTN","MPIA43U2",153,0)
 Q
"RTN","MPIA43U2",154,0)
 ;
"RTN","MPIA43U2",155,0)
LOGNOTE ;- add note to MPI DATA MGT RESOLUTION JOURNAL (#985.2) file
"RTN","MPIA43U2",156,0)
 ;SITE=sta# of TF being removed from ICN
"RTN","MPIA43U2",157,0)
 N NOTE
"RTN","MPIA43U2",158,0)
 S NOTE(1)=$P($$NS^XUAF4($P($$LKUP^XUAF4(SITE),"^")),"^")_" ("_SITE_") moved from ICN "_ICN_" to ICN "_ICN2_"."
"RTN","MPIA43U2",159,0)
 D ADDNOTE^MPIMDMA1(CASEIEN,.NOTE)
"RTN","MPIA43U2",160,0)
 Q
"RTN","MPIA43U2",161,0)
 ;
"RTN","MPIA43U2",162,0)
MP ;Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES]
"RTN","MPIA43U2",163,0)
 ;QFLG must remain defined to pass back to calling routine
"RTN","MPIA43U2",164,0)
 W @IOF S QFLG=0
"RTN","MPIA43U2",165,0)
 W !,"This option allows a user to resolve a Mismatched Patient record. This is done"
"RTN","MPIA43U2",166,0)
 W !,"by selecting the site record to be moved from the ""incorrect"" (or ""FROM"") ICN"
"RTN","MPIA43U2",167,0)
 W !,"and either correlating it to the ""correct"" (or ""TO"") ICN or allowing the user"
"RTN","MPIA43U2",168,0)
 W !,"to create a new ICN."
"RTN","MPIA43U2",169,0)
 W !!,"In addition, the ""FROM"" ICN is removed from the ICN HISTORY (#992) multiple in"
"RTN","MPIA43U2",170,0)
 W !,"the PATIENT (#2) file at the site and any entries associated with that site are"
"RTN","MPIA43U2",171,0)
 W !,"removed from the OTHER IDS (#200) field of the MPI VETERAN/CLIENT (#985) file"
"RTN","MPIA43U2",172,0)
 W !,"on the MPI."
"RTN","MPIA43U2",173,0)
 W !!,"When to use this option:"
"RTN","MPIA43U2",174,0)
 W !,"1. To resolve identified mismatched patients."
"RTN","MPIA43U2",175,0)
 W !,"2. To resolve cases of Identity Theft."
"RTN","MPIA43U2",176,0)
 W !!,"Notes:"
"RTN","MPIA43U2",177,0)
 W !,"- ICN is NOT retained in history."
"RTN","MPIA43U2",178,0)
 W !,"- If the ICN is shared with other facility(s), the final result is the"
"RTN","MPIA43U2",179,0)
 W !,"  removal of the site from the treating facility lists on the MPI and each"
"RTN","MPIA43U2",180,0)
 W !,"  remaining site(s) who share the ICN."
"RTN","MPIA43U2",181,0)
 W !!
"RTN","MPIA43U2",182,0)
 K DIRUT
"RTN","MPIA43U2",183,0)
 Q
"RTN","MPIA43U2",184,0)
 ;
"RTN","MPIA43U2",185,0)
TR ;Transfer ICN for Duplicate Site Record [MPI DATA MGT UNL DUP PTS]
"RTN","MPIA43U2",186,0)
 ;QFLG must remain defined to pass back to calling routine
"RTN","MPIA43U2",187,0)
 W @IOF S QFLG=0
"RTN","MPIA43U2",188,0)
 W !,"This option allows a user to transfer a site's association from a selected"
"RTN","MPIA43U2",189,0)
 W !,"ICN that is the ""FROM"" record in an identified site duplicate that has not"
"RTN","MPIA43U2",190,0)
 W !,"yet been merged.  Once the Station #/DFN record is selected and the move is"
"RTN","MPIA43U2",191,0)
 W !,"confirmed, that record will be moved to a new ICN.  At that point, the ""TO"""
"RTN","MPIA43U2",192,0)
 W !,"record at the site can be attached to the ICN by either doing an SPI or using"
"RTN","MPIA43U2",193,0)
 W !,"the option ""(DUP) Resolve MPI Duplicate"". In addition, the ICN is removed"
"RTN","MPIA43U2",194,0)
 W !,"from the ICN HISTORY (#992) multiple in the PATIENT (#2) file at the site and"
"RTN","MPIA43U2",195,0)
 W !,"any entries associated with that site are removed from the OTHER IDS (#200)"
"RTN","MPIA43U2",196,0)
 W !,"field of the MPI VETERAN/CLIENT (#985) file on the MPI."
"RTN","MPIA43U2",197,0)
 W !!,"When to use this option:"
"RTN","MPIA43U2",198,0)
 W !,"- To remove a duplicate patient (the ""FROM"" record) at a site from an ICN"
"RTN","MPIA43U2",199,0)
 W !,"  so that the ""correct"" patient (the ""TO"" record) can be attached to the ICN"
"RTN","MPIA43U2",200,0)
 W !,"  for the purpose of enabling RDV."
"RTN","MPIA43U2",201,0)
 W !!,"Notes:"
"RTN","MPIA43U2",202,0)
 W !,"- ICN is NOT retained in history."
"RTN","MPIA43U2",203,0)
 W !,"- The final result is the removal of the site from the treating facility lists"
"RTN","MPIA43U2",204,0)
 W !,"  on the MPI and each remaining site(s) who share the ICN."
"RTN","MPIA43U2",205,0)
 K DIRUT
"RTN","MPIA43U2",206,0)
 Q
"RTN","MPIACK")
0^15^B10400096
"RTN","MPIACK",1,0)
MPIACK ;BPFO/CMC-ACKNOWLEDGEMENT CHECK ;7/8/02
"RTN","MPIACK",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,24**;30 Apr 99
"RTN","MPIACK",3,0)
 ;
"RTN","MPIACK",4,0)
EN(BEFORE,RETURN) ; CHECKING FOR "A" FOR XTMP("MPIAnn OR MPIM05.. NODES that happened before FM date BEFORE
"RTN","MPIACK",5,0)
 ;RETURN will have 0 if no messages need to be resent OR 1 if there are some resent.
"RTN","MPIACK",6,0)
 ;
"RTN","MPIACK",7,0)
 K MPIMSG,MPISITE
"RTN","MPIACK",8,0)
 N DFN2,TAG
"RTN","MPIACK",9,0)
 S MPIMSG="MPIA",RETURN=0
"RTN","MPIACK",10,0)
 F  S MPIMSG=$O(^XTMP(MPIMSG)) Q:$E(MPIMSG,1,4)'="MPIA"&($E(MPIMSG,1,6)'="MPIM05")  D
"RTN","MPIACK",11,0)
 .Q:$P(^XTMP(MPIMSG,0),"^",2)>BEFORE
"RTN","MPIACK",12,0)
 .S MPISITE=0
"RTN","MPIACK",13,0)
 .F  S MPISITE=$O(^XTMP(MPIMSG,MPISITE)) Q:MPISITE=""  D
"RTN","MPIACK",14,0)
 ..I $G(^XTMP(MPIMSG,MPISITE,0))="A" D
"RTN","MPIACK",15,0)
 ...S TAG=$E(MPIMSG,4,6)
"RTN","MPIACK",16,0)
 ...D @TAG S RETURN=1
"RTN","MPIACK",17,0)
 K MPISITE,MPIMSG
"RTN","MPIACK",18,0)
 Q
"RTN","MPIACK",19,0)
A37 ;
"RTN","MPIACK",20,0)
 K ^XTMP(MPIMSG,MPISITE)
"RTN","MPIACK",21,0)
 D EXCEPT^MPIUTL2($P(MPIMSG,"%",2),"Unable to regenerate A37 message for ICN: "_$P(MPIMSG,"%",2)_" to Site: "_MPISITE_" No ACK received back")
"RTN","MPIACK",22,0)
 Q
"RTN","MPIACK",23,0)
A43 ;
"RTN","MPIACK",24,0)
 K ^XTMP(MPIMSG,MPISITE)
"RTN","MPIACK",25,0)
 D EXCEPT^MPIUTL2($P(MPIMSG,"%",2),"Unable to regenerate A43 message for ICN "_$P(MPIMSG,"%",2)_" to Site: "_MPISITE_" No ACK received back")
"RTN","MPIACK",26,0)
 Q
"RTN","MPIACK",27,0)
A04 ;
"RTN","MPIACK",28,0)
 N ERR
"RTN","MPIACK",29,0)
 S ERR="Unable to regenerate A04 message for ICN "_$P(MPIMSG,"%",2)_" to Site: "_MPISITE_" No ACK received back"
"RTN","MPIACK",30,0)
 K ^XTMP(MPIMSG,MPISITE)
"RTN","MPIACK",31,0)
 D EXCEPT^MPIUTL2($P(MPIMSG,"%",2),ERR)
"RTN","MPIACK",32,0)
 Q
"RTN","MPIACK",33,0)
A08 ;
"RTN","MPIACK",34,0)
 N ERR
"RTN","MPIACK",35,0)
 S ERR="Unable to regenerate A08 message for ICN "_$P(MPIMSG,"%",2)_" to Site: "_MPISITE_" No ACK received back"
"RTN","MPIACK",36,0)
 K ^XTMP(MPIMSG,MPISITE)
"RTN","MPIACK",37,0)
 D EXCEPT^MPIUTL2($P(MPIMSG,"%",2),ERR)
"RTN","MPIACK",38,0)
 Q
"RTN","MPIACK",39,0)
A24 ;
"RTN","MPIACK",40,0)
 N SITE2,ICN2,ICN,ST2,ST,ERR
"RTN","MPIACK",41,0)
 S ERR=""
"RTN","MPIACK",42,0)
 I $G(^XTMP(MPIMSG,MPISITE,1))="" K ^XTMP(MPIMSG,MPISITE) Q
"RTN","MPIACK",43,0)
 S SITE2=$P($G(^XTMP(MPIMSG,MPISITE,1)),"%",4)
"RTN","MPIACK",44,0)
 I SITE2'="" S ST2=$$IEN^XUAF4(SITE2)
"RTN","MPIACK",45,0)
 S ST=$$IEN^XUAF4(MPISITE)
"RTN","MPIACK",46,0)
 S ICN2=$P($G(^XTMP(MPIMSG,MPISITE,1)),"%",3)
"RTN","MPIACK",47,0)
 S ICN=$P(MPIMSG,"%",2)
"RTN","MPIACK",48,0)
 I ICN=ICN2 S ICN2="",SITE2=""
"RTN","MPIACK",49,0)
 ;ICN deactivated or had an ICN2
"RTN","MPIACK",50,0)
 I '$D(^MPI(985.5,"AM",ICN,ST)) S ERR="Unable to regenerate A24 message for ICN "_ICN_" to Site: "_MPISITE_" and ICN2 "_ICN2_" Site2: "_SITE2_" No ACK received back"
"RTN","MPIACK",51,0)
 I ICN2'="" S ERR="Unable to regenerate A24 message for ICN "_ICN_" to Site: "_MPISITE_" and ICN2 "_ICN2_" Site2: "_SITE2_" No ACK received back"
"RTN","MPIACK",52,0)
 I ERR'="" D  Q
"RTN","MPIACK",53,0)
 .K ^XTMP(MPIMSG,MPISITE)
"RTN","MPIACK",54,0)
 .D EXCEPT^MPIUTL2(ICN,ERR)
"RTN","MPIACK",55,0)
 ;HAD JUST ONE ICN REGENERATE MSG
"RTN","MPIACK",56,0)
 I ICN2=""&($D(^MPI(985.5,"AM",ICN,ST))) K ^XTMP(MPIMSG,MPISITE) D DA24^MPIA24(ICN,MPISITE,"","")
"RTN","MPIACK",57,0)
 Q
"RTN","MPIACK",58,0)
M05 ;Regenerate MFN-M05 msg for ICN
"RTN","MPIACK",59,0)
 N ICN,BRDCST
"RTN","MPIACK",60,0)
 K ^XTMP(MPIMSG)
"RTN","MPIACK",61,0)
 S ICN=$P(MPIMSG,"%",2)
"RTN","MPIACK",62,0)
 S BRDCST=$$BRDCST^MPITFOUT(+ICN)
"RTN","MPIACK",63,0)
 Q
"RTN","MPIACTIV")
0^16^B44710071
"RTN","MPIACTIV",1,0)
MPIACTIV ;BAY/ALS-REMOTE PATIENT ACTIVITY RPC ;15 MAR 02
"RTN","MPIACTIV",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**8**;30 Apr 99
"RTN","MPIACTIV",3,0)
 ;Reference to RPCCHK^XWB2HL7  supported by IA #3144
"RTN","MPIACTIV",4,0)
 ;Reference to RTNDATA^XWBDRPC supported by IA #3149
"RTN","MPIACTIV",5,0)
 ;Reference to EN1^XWB2HL7 supported by IA #3144
"RTN","MPIACTIV",6,0)
EN ;
"RTN","MPIACTIV",7,0)
SEND ;
"RTN","MPIACTIV",8,0)
 N TFL,X,Y,ICNARR,SNTDT
"RTN","MPIACTIV",9,0)
 W !!,"Remote request to sites for Patient Activity.",!
"RTN","MPIACTIV",10,0)
 S SNTDT=""
"RTN","MPIACTIV",11,0)
 D GETTFL^MPIACTV2(ICN,.TFL)
"RTN","MPIACTIV",12,0)
 W !!,"-> For ICN ",ICN
"RTN","MPIACTIV",13,0)
 I $D(^XTMP("MPIRACT"_ICN,0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRACT"_ICN,0),"^",2)) W !,"Query last sent for this ICN on "_SNTDT
"RTN","MPIACTIV",14,0)
 I ICN'="" D
"RTN","MPIACTIV",15,0)
 . I $P($G(TFL(0)),"^")=1 D
"RTN","MPIACTIV",16,0)
 .. D SELTF^MPIACTV2 Q:((Y="")!(Y="^"))
"RTN","MPIACTIV",17,0)
 .. W !!,"Remote patient activity queries will be sent to:"
"RTN","MPIACTIV",18,0)
 .. S CNT=0,X=0 F  S X=$O(TFARR(X)) Q:'X  S CNT=CNT+1
"RTN","MPIACTIV",19,0)
 .. I CNT>22 D D2^MPIACTV2
"RTN","MPIACTIV",20,0)
 .. I CNT<23 D D1^MPIACTV2
"RTN","MPIACTIV",21,0)
 . D ADDTF^MPIACTV2 Q:$D(DUOUT)
"RTN","MPIACTIV",22,0)
 . W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to continue" D ^DIR S MPIDIR=+Y K DIR
"RTN","MPIACTIV",23,0)
 . I MPIDIR=1 S X=0 F  S X=$O(TFL(X)) Q:'X  D
"RTN","MPIACTIV",24,0)
 .. W !?3,"Sending Remote Query to: ",X,"  ",$P(TFL(X),"^")
"RTN","MPIACTIV",25,0)
 .. I $D(^XTMP("MPIRACT"_ICN,X)) K ^XTMP("MPIRACT"_ICN,X)
"RTN","MPIACTIV",26,0)
 .. D REQ(ICN,.TFL,X)
"RTN","MPIACTIV",27,0)
 . I MPIDIR=1 K ICNARR D CHKDUPS(ICN,.ICNARR) D
"RTN","MPIACTIV",28,0)
 .. I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIACTIV",29,0)
 ... W !!,"-> List of Duplicate ICN's:"
"RTN","MPIACTIV",30,0)
 ... S X=0 F  S X=$O(ICNARR(X)) Q:'X  D
"RTN","MPIACTIV",31,0)
 .... W !,"   ICN ",X S SNTDT="" I $D(^XTMP("MPIRACT"_ICN,0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRACT"_ICN,0),"^",2)) W !,"Query last sent for this ICN on "_SNTDT
"RTN","MPIACTIV",32,0)
 ... W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you wish to send a query to the MPI identified Duplicate ICN's" D ^DIR S MPIDIR=+Y K DIR
"RTN","MPIACTIV",33,0)
 ... ;get ICN TFL list
"RTN","MPIACTIV",34,0)
 ... I MPIDIR=1 S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIACTIV",35,0)
 .... W !,"-> ICN ",ICN
"RTN","MPIACTIV",36,0)
 .... K TFL D GETTFL^MPIACTV2(ICN,.TFL)
"RTN","MPIACTIV",37,0)
 .... W !!,"-> For ICN ",ICN
"RTN","MPIACTIV",38,0)
 .... I $D(^XTMP("MPIRACT"_ICN,0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRACT"_ICN,0),"^",2)) W !,"Query last sent for this ICN on "_SNTDT
"RTN","MPIACTIV",39,0)
 .... I $P($G(TFL(0)),"^")=1 D
"RTN","MPIACTIV",40,0)
 ..... D SELTF^MPIACTV2 Q:((Y="")!(Y="^"))
"RTN","MPIACTIV",41,0)
 ..... W !!,"Remote patient data queries will be sent to:"
"RTN","MPIACTIV",42,0)
 ..... S CNT=0,X=0 F  S X=$O(TFARR(X)) Q:'X  S CNT=CNT+1
"RTN","MPIACTIV",43,0)
 ..... I CNT>22 D D2^MPIACTV2
"RTN","MPIACTIV",44,0)
 ..... I CNT<23 D D1^MPIACTV2
"RTN","MPIACTIV",45,0)
 ..... D ADDTF^MPIACTV2 Q:$D(DUOUT)
"RTN","MPIACTIV",46,0)
 ..... W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to continue" D ^DIR S MPIDIR=+Y K DIR Q:((Y="")!(Y="^"))
"RTN","MPIACTIV",47,0)
 ..... I MPIDIR=1 S X=0 F  S X=$O(TFL(X)) Q:'X  D
"RTN","MPIACTIV",48,0)
 ...... W !?3,"Sending Remote Query to: ",X,"  ",$P(TFL(X),"^")
"RTN","MPIACTIV",49,0)
 ...... I $D(^XTMP("MPIRACT"_ICN,X)) K ^XTMP("MPIRACT"_ICN,X)
"RTN","MPIACTIV",50,0)
 ...... D REQ(ICN,.TFL,X)
"RTN","MPIACTIV",51,0)
 K MPIDIR,CNT,TFARR
"RTN","MPIACTIV",52,0)
 Q
"RTN","MPIACTIV",53,0)
SEND2 ;
"RTN","MPIACTIV",54,0)
 N MPIEXIT S MPIEXIT=0
"RTN","MPIACTIV",55,0)
 W !!,"This option sends a remote query to selected treating facility"
"RTN","MPIACTIV",56,0)
 W !,"site(s) for message and exception data for a patient."
"RTN","MPIACTIV",57,0)
 F  D  Q:MPIEXIT=1
"RTN","MPIACTIV",58,0)
 . D ASK(.ICN) I ICN="" S MPIEXIT=1 Q
"RTN","MPIACTIV",59,0)
 . I $D(Y) D SEND
"RTN","MPIACTIV",60,0)
 K ICN
"RTN","MPIACTIV",61,0)
 Q
"RTN","MPIACTIV",62,0)
DISP ;display returned patient activity queries
"RTN","MPIACTIV",63,0)
 W !!,"Display data returned from remote patient activity queries."
"RTN","MPIACTIV",64,0)
 N TFL,L,Y,ICNARR,STATUS,SL
"RTN","MPIACTIV",65,0)
 I '$D(^XTMP("MPIRACT"_ICN)) W !!,"No remote query sent for this patient." G QDISP
"RTN","MPIACTIV",66,0)
 D TFLST^MPIACTV2(ICN,.TFL)
"RTN","MPIACTIV",67,0)
 W !!,"-> For ICN ",$P(ICN,"V",1),!
"RTN","MPIACTIV",68,0)
 D SELTF^MPIACTV2 I ((Y="")!(Y="^")) G QDISP
"RTN","MPIACTIV",69,0)
 I '$D(TFARR) W !,"No remote query sent for this patient." G QDISP
"RTN","MPIACTIV",70,0)
 S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIACTIV",71,0)
 . S SL=$P(TFARR(L),"^",1)
"RTN","MPIACTIV",72,0)
 . S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIACTIV",73,0)
 . I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIACTIV",74,0)
 . E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIACTIV",75,0)
 . E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIACTIV",76,0)
 . E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIACTIV",77,0)
 . W !!?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")"
"RTN","MPIACTIV",78,0)
 . D DISPLAY(ICN,$P(TFL(SL),"^",2))
"RTN","MPIACTIV",79,0)
QDISP K TFARR S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIACTIV",80,0)
 Q
"RTN","MPIACTIV",81,0)
DISP2 ;
"RTN","MPIACTIV",82,0)
 N MPIEXIT S MPIEXIT=0
"RTN","MPIACTIV",83,0)
 W !!,"This option checks the status of an existing remote patient data query."
"RTN","MPIACTIV",84,0)
 F  D  Q:MPIEXIT=1
"RTN","MPIACTIV",85,0)
 . D ASK(.ICN) I ICN="" S MPIEXIT=1 Q
"RTN","MPIACTIV",86,0)
 . I $D(Y) K ZTSAVE S ZTSAVE("ICN")="" D EN^XUTMDEVQ("DISP^MPIACTIV","Print MPI/PD Patient Activity",.ZTSAVE) S ZTREQ="@"
"RTN","MPIACTIV",87,0)
 K ICN
"RTN","MPIACTIV",88,0)
 Q
"RTN","MPIACTIV",89,0)
DISPLAY(ICN,LOC) ;display remote patient activity query results
"RTN","MPIACTIV",90,0)
 N STATUS,RETURN,RESULT,RET
"RTN","MPIACTIV",91,0)
 I '$D(^XTMP("MPIRACT"_ICN,0)) W !?35," - No patient activity query exists for this patient." Q
"RTN","MPIACTIV",92,0)
 I $D(^XTMP("MPIRACT"_ICN,LOC,0)) S RETURN(0)=$P(^XTMP("MPIRACT"_ICN,LOC,0),"^") D
"RTN","MPIACTIV",93,0)
 . D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D
"RTN","MPIACTIV",94,0)
 .. D RTNDATA^XWBDRPC(.RET,RETURN(0))
"RTN","MPIACTIV",95,0)
 .. D REBLD
"RTN","MPIACTIV",96,0)
 ..;CODE FOR DISPLAY HERE
"RTN","MPIACTIV",97,0)
 .. N ACT,TXT,IEN,IEN1,IEN2,DATE,FLDS,SITE
"RTN","MPIACTIV",98,0)
 .. S IEN=$$IEN^XUAF4(LOC)
"RTN","MPIACTIV",99,0)
 .. S SITE=$P($$NS^XUAF4(IEN),"^",1)
"RTN","MPIACTIV",100,0)
 .. S ACT="" F  S ACT=$O(RARRAY(ICN,LOC,ACT)) Q:ACT=""  D
"RTN","MPIACTIV",101,0)
 ... I ACT="EXC" D
"RTN","MPIACTIV",102,0)
 .... W !!,"Exception(s) for ICN: "_ICN_" at "_SITE,!
"RTN","MPIACTIV",103,0)
 .... S IEN1=0 F  S IEN1=$O(RARRAY(ICN,LOC,"EXC",IEN1)) Q:'IEN1  D
"RTN","MPIACTIV",104,0)
 ..... S IEN2=0 F  S IEN2=$O(RARRAY(ICN,LOC,"EXC",IEN1,IEN2)) Q:'IEN2  D
"RTN","MPIACTIV",105,0)
 ...... S TXT=$P(RARRAY(ICN,LOC,"EXC",IEN1,IEN2),"^",1)
"RTN","MPIACTIV",106,0)
 ...... W !,TXT
"RTN","MPIACTIV",107,0)
 ... I ACT="PIVOT" D
"RTN","MPIACTIV",108,0)
 .... W !!,"HL7 Messages for ICN: "_ICN_" at "_SITE
"RTN","MPIACTIV",109,0)
 .... S FLDS="",IEN1=0
"RTN","MPIACTIV",110,0)
 .... F  S IEN1=$O(RARRAY(ICN,LOC,"PIVOT",IEN1)) Q:'IEN1  D
"RTN","MPIACTIV",111,0)
 ..... S TXT=$P(RARRAY(ICN,LOC,"PIVOT",IEN1),"^",1)
"RTN","MPIACTIV",112,0)
 ..... S DATE=$P(RARRAY(ICN,LOC,"PIVOT",IEN1),"^",2)
"RTN","MPIACTIV",113,0)
 ..... S FLDS=$P($G(RARRAY(ICN,LOC,"PIVOT",IEN1)),"^",3)
"RTN","MPIACTIV",114,0)
 ..... W !!,DATE,?15,TXT
"RTN","MPIACTIV",115,0)
 ..... I FLDS'="" W !,"Fields updated: "_FLDS
"RTN","MPIACTIV",116,0)
 . I $D(RET(0)) I RET(0)<0 W !!,"No Data Returned Due To: "_$P(RET(0),"^",2)
"RTN","MPIACTIV",117,0)
 . K R,RARRAY
"RTN","MPIACTIV",118,0)
 Q
"RTN","MPIACTIV",119,0)
REBLD ; Rebuild array format sent back from RPC call
"RTN","MPIACTIV",120,0)
 N ACT,TXT,MSG,MSG2,TYP,DATE,FLDS,LOC1
"RTN","MPIACTIV",121,0)
 S R="",LOC1=""
"RTN","MPIACTIV",122,0)
 F  S R=$O(RET(R)) Q:R=""  D
"RTN","MPIACTIV",123,0)
 . I $P(RET(R),"^",1)=ICN D
"RTN","MPIACTIV",124,0)
 .. S LOC1=$P(RET(R),"^",2),ACT=$P(RET(R),"^",3)
"RTN","MPIACTIV",125,0)
 .. I LOC1=LOC D
"RTN","MPIACTIV",126,0)
 ... I ACT="EXC" D
"RTN","MPIACTIV",127,0)
 .... S TXT=$P($G(RET(R)),"^",4)
"RTN","MPIACTIV",128,0)
 .... S MSG=$P($G(RET(R)),"^",5),MSG2=$P($G(RET(R)),"^",6)
"RTN","MPIACTIV",129,0)
 .... S RARRAY(ICN,LOC,ACT,MSG,MSG2)=TXT
"RTN","MPIACTIV",130,0)
 ... I ACT="PIVOT" D
"RTN","MPIACTIV",131,0)
 .... S TYP=$P($G(RET(R)),"^",4),DATE=$P($G(RET(R)),"^",5)
"RTN","MPIACTIV",132,0)
 .... S MSG=$P($G(RET(R)),"^",6),FLDS=$P($G(RET(R)),"^",7)
"RTN","MPIACTIV",133,0)
 .... S RARRAY(ICN,LOC,ACT,MSG)=TYP_"^"_DATE_"^"_$G(FLDS)
"RTN","MPIACTIV",134,0)
 . I $P(RET(R),"^",1)<1 D
"RTN","MPIACTIV",135,0)
 .. S RARRAY(ICN,LOC,0)=RET(R)
"RTN","MPIACTIV",136,0)
 K R
"RTN","MPIACTIV",137,0)
 Q
"RTN","MPIACTIV",138,0)
ASK(ICN) ;Ask for PATIENT
"RTN","MPIACTIV",139,0)
 S ICN="",TFL(0)=""
"RTN","MPIACTIV",140,0)
 K SSN
"RTN","MPIACTIV",141,0)
 W !
"RTN","MPIACTIV",142,0)
 S DIC="^MPIVET(",DIC(0)="QEAM",DIC("A")="Select PATIENT (Use ICN or SSN): "
"RTN","MPIACTIV",143,0)
 D ^DIC K DIC I Y<0 Q
"RTN","MPIACTIV",144,0)
 S ICN=+Y
"RTN","MPIACTIV",145,0)
 Q
"RTN","MPIACTIV",146,0)
REQ(ICN,TFL,LOC) ;request a remote patient activity report
"RTN","MPIACTIV",147,0)
 ;LOC - STATION# OF THE INSTITUTION file entry
"RTN","MPIACTIV",148,0)
 I +LOC>0 D EN1^XWB2HL7(.RETURN,LOC,"RG REM ACTIVITY",1,ICN,"")
"RTN","MPIACTIV",149,0)
 S ^XTMP("MPIRACT"_ICN,0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"REMOTE PATIENT ACTIVITY QUERY"
"RTN","MPIACTIV",150,0)
 S ^XTMP("MPIRACT"_ICN,LOC,0)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","MPIACTIV",151,0)
 Q
"RTN","MPIACTIV",152,0)
MONITOR(ICN,LOC,RESULT) ;monitor a remote patient activity request
"RTN","MPIACTIV",153,0)
 N STATUS,RETURN
"RTN","MPIACTIV",154,0)
 I '$D(^XTMP("MPIRACT"_ICN,0)) S RESULT(0)="-1^Unknown" Q
"RTN","MPIACTIV",155,0)
 I '$D(^XTMP("MPIRACT"_ICN,LOC,0)) S RESULT(0)="-1^Unknown" Q
"RTN","MPIACTIV",156,0)
 I $D(^XTMP("MPIRACT"_ICN,LOC,0)) S RETURN(0)=$P(^XTMP("MPIRACT"_ICN,LOC,0),"^") D RPCCHK^XWB2HL7(.RESULT,RETURN(0))
"RTN","MPIACTIV",157,0)
 Q
"RTN","MPIACTIV",158,0)
CHKDUPS(ICN,ICNARR) ;
"RTN","MPIACTIV",159,0)
 S SSN=$P($G(^MPIVET(ICN,0)),"^",14)
"RTN","MPIACTIV",160,0)
 S ICNARR(0)=-1
"RTN","MPIACTIV",161,0)
 I SSN'="" S X=0 F  S X=$O(^MPIVET("SSN",SSN,X)) Q:'X  I X'=ICN S ICNARR(X)="",ICNARR(0)=1
"RTN","MPIACTIV",162,0)
 Q
"RTN","MPIACTV2")
0^17^B6202563
"RTN","MPIACTV2",1,0)
MPIACTV2 ;BAY/ALS-REMOTE PATIENT ACTIVITY RPC ;18 APR 02
"RTN","MPIACTV2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**8**;30 Apr 99
"RTN","MPIACTV2",3,0)
GETTFL(ICN,TFL) ;get a list of TF
"RTN","MPIACTV2",4,0)
 N LOC,CNT
"RTN","MPIACTV2",5,0)
 S TFL(0)="-1^ICN not passed into call"
"RTN","MPIACTV2",6,0)
 I ICN'="" N X S X=0,CNT=1 F  S X=$O(^MPI(985.5,"AM",ICN,X)) Q:'X  D
"RTN","MPIACTV2",7,0)
 . S LOC=$$NNT^XUAF4(X)
"RTN","MPIACTV2",8,0)
 . S TFL($P(LOC,"^",2))=LOC
"RTN","MPIACTV2",9,0)
 . S LOC=$P(LOC,"^",2)
"RTN","MPIACTV2",10,0)
 . D MONITOR^MPIACTIV(ICN,LOC,.RESULT)
"RTN","MPIACTV2",11,0)
 . S $P(TFL(LOC),"^",3)=$P(RESULT(0),"^",2)
"RTN","MPIACTV2",12,0)
 I $O(TFL(0)) S TFL(0)="1"
"RTN","MPIACTV2",13,0)
 Q
"RTN","MPIACTV2",14,0)
ADDTF ;Add sites to query that are not on the Treating Facility List.
"RTN","MPIACTV2",15,0)
 N IEN,LOC,RESULT
"RTN","MPIACTV2",16,0)
 F  D  Q:+Y'>0
"RTN","MPIACTV2",17,0)
 .  S DIC=985.3,DIC(0)="QEAMZ"
"RTN","MPIACTV2",18,0)
 .  S DIC("A")="Add additional site(s) to the query list: "
"RTN","MPIACTV2",19,0)
 .  D ^DIC I +Y>0 Q:$D(DUOUT)  D
"RTN","MPIACTV2",20,0)
 ..  S IEN=+Y,LOC=$$NNT^XUAF4(IEN)
"RTN","MPIACTV2",21,0)
 ..  S TFL($P(LOC,"^",2))=LOC,LOC=$P(LOC,"^",2)
"RTN","MPIACTV2",22,0)
 K DIC
"RTN","MPIACTV2",23,0)
 Q
"RTN","MPIACTV2",24,0)
SELTF ;Allow the user to select treating facilities from a list
"RTN","MPIACTV2",25,0)
 K TFARR,TFARR1
"RTN","MPIACTV2",26,0)
 S I=0 F  S I=$O(TFL(I)) Q:'I  D
"RTN","MPIACTV2",27,0)
 . S TFARR1($P(TFL(I),"^",1))=$P(TFL(I),"^",2)_"^"_$P(TFL(I),"^",1)
"RTN","MPIACTV2",28,0)
 S I="",CNT=0 F  S I=$O(TFARR1(I)) Q:I=""  D
"RTN","MPIACTV2",29,0)
 . S CNT=CNT+1 S TFARR(CNT)=TFARR1(I)
"RTN","MPIACTV2",30,0)
 I CNT=1 S Y=1 Q
"RTN","MPIACTV2",31,0)
 K DIR,Y
"RTN","MPIACTV2",32,0)
 S CNT=CNT+1,TFARR(CNT)="ALL"
"RTN","MPIACTV2",33,0)
 S DIR(0)="LA^1:"_CNT
"RTN","MPIACTV2",34,0)
 S DIR("A")="Select site(s) 1-"_(CNT-1)_" or "_CNT_" for all: "
"RTN","MPIACTV2",35,0)
 W !,"Select one or more of the following: "
"RTN","MPIACTV2",36,0)
 I CNT>22 D D2
"RTN","MPIACTV2",37,0)
 I CNT<23 D D1
"RTN","MPIACTV2",38,0)
 D ^DIR K DIR Q:Y="^"
"RTN","MPIACTV2",39,0)
 I Y<1 K TFARR,TFARR1,L,I,A,CNT Q
"RTN","MPIACTV2",40,0)
 S Y=","_Y
"RTN","MPIACTV2",41,0)
 I Y[(","_CNT_",") K TFARR(CNT),TFARR1,CNT,I Q
"RTN","MPIACTV2",42,0)
 S I=0,A="" F  S I=$O(TFARR(I)) Q:'I  I Y'[(","_I_",") S A=$P(TFARR(I),"^",1) K TFL(A) K TFARR(I)
"RTN","MPIACTV2",43,0)
 K L,I,A,TFARR(CNT),CNT,TFARR1
"RTN","MPIACTV2",44,0)
 Q
"RTN","MPIACTV2",45,0)
D1 ;
"RTN","MPIACTV2",46,0)
 S C1=1,I=0 F  S I=$O(TFARR(I)) Q:'I  D
"RTN","MPIACTV2",47,0)
 . W !,C1_".",?4,"("_$P(TFARR(I),"^",1)_") "_$P(TFARR(I),"^",2) S C1=C1+1
"RTN","MPIACTV2",48,0)
 K C1,I
"RTN","MPIACTV2",49,0)
 Q
"RTN","MPIACTV2",50,0)
D2 ;
"RTN","MPIACTV2",51,0)
 S I2=23 F I=1:1:22 D
"RTN","MPIACTV2",52,0)
 . W !,I_".",?4,"("_$P(TFARR(I),"^",1)_") "_$P(TFARR(I),"^",2)
"RTN","MPIACTV2",53,0)
 . I $D(TFARR(I2)) W ?41,I2_". ",?44,"("_$P(TFARR(I2),"^",1)_") "_$P(TFARR(I2),"^",2) S I2=I2+1
"RTN","MPIACTV2",54,0)
 K I,I2
"RTN","MPIACTV2",55,0)
 Q
"RTN","MPIACTV2",56,0)
TFLST(ICN,TFL) ;Get list of sites query was sent to for this ICN
"RTN","MPIACTV2",57,0)
 N X,LOC,IEN,RESULT
"RTN","MPIACTV2",58,0)
 S X=0
"RTN","MPIACTV2",59,0)
 F  S X=$O(^XTMP("MPIRACT"_ICN,X)) Q:'X  D
"RTN","MPIACTV2",60,0)
 . S IEN=$$IEN^XUAF4(X),LOC=$$NNT^XUAF4(IEN)
"RTN","MPIACTV2",61,0)
 . S TFL($P(LOC,"^",2))=LOC
"RTN","MPIACTV2",62,0)
 . S LOC=$P(LOC,"^",2)
"RTN","MPIACTV2",63,0)
 . D MONITOR^MPIACTIV(ICN,LOC,.RESULT)
"RTN","MPIACTV2",64,0)
 . S $P(TFL(LOC),"^",3)=$P(RESULT(0),"^",2)
"RTN","MPIACTV2",65,0)
 Q
"RTN","MPIADT")
0^18^B49538628
"RTN","MPIADT",1,0)
MPIADT ;BIOFO/DLR-Utility used to process ADT segments ;10/1/02
"RTN","MPIADT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,21,27,31**;30 Apr 99
"RTN","MPIADT",3,0)
 Q
"RTN","MPIADT",4,0)
 ;
"RTN","MPIADT",5,0)
PID(MSG,ARRAY,HL) ;process PID segment
"RTN","MPIADT",6,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","MPIADT",7,0)
 ;Since PID can be over 245 characters loop through setting a PID array
"RTN","MPIADT",8,0)
 ;sequenced PID(1)="PID"... PID(4 or 5) can be over 245 characters so
"RTN","MPIADT",9,0)
 ;it will also loop and place it in PID(4,1...
"RTN","MPIADT",10,0)
 ;
"RTN","MPIADT",11,0)
 ; Input variables
"RTN","MPIADT",12,0)
 ;   assumes that MSG or MSG(I) will contain the PID segment
"RTN","MPIADT",13,0)
 ; Output ARRAY array will contain the following subscripts
"RTN","MPIADT",14,0)
 ;   ICN - patient ICN
"RTN","MPIADT",15,0)
 ;   DFN - sites local identifier
"RTN","MPIADT",16,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","MPIADT",17,0)
 ;   FIELD# of field in the MPI VETERAN/CLIENT file (#985)
"RTN","MPIADT",18,0)
 ;   OID,n -- OTHER IDs (multiple)
"RTN","MPIADT",19,0)
 ;   ALIAS,n -- Alias (multiple)
"RTN","MPIADT",20,0)
 ;   RACE,n -- Race (multiple)
"RTN","MPIADT",21,0)
 ;   ETH,1 -- Ethnicity
"RTN","MPIADT",22,0)
 ;
"RTN","MPIADT",23,0)
 N PID,MPIJ,LNGTH,LNGTH1,PID1,SEQ,SEQ1,COMP,SUBCOMP,REP,HLECH,X,Y,CNT,NXT,ID,IDS,PIDAA,PIDNTC,NAME,LNGTH2,PIDXDT,PIDSITE
"RTN","MPIADT",24,0)
 S ARRAY("DFN")="",ARRAY("ICN")="",ARRAY(15)="@" ;array(15) is the claim number to handle delete at site.
"RTN","MPIADT",25,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIADT",26,0)
 S LNGTH=$L(MSG,HL("FS")) F SEQ=1:1:LNGTH S PID(SEQ)=$P(MSG,HL("FS"),SEQ)
"RTN","MPIADT",27,0)
 S SEQ1=1,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","MPIADT",28,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1,SEQ1=1 D
"RTN","MPIADT",29,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","MPIADT",30,0)
 ... I $L($G(PID(SEQ)))=245 D  Q
"RTN","MPIADT",31,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))>245 S LNGTH1=$L(PID(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","MPIADT",32,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))'>245 S PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_NXT
"RTN","MPIADT",33,0)
 ... I $L(NXT_$G(PID(SEQ)))>245 S LNGTH1=$L($G(PID(SEQ))) S LNGTH2=245-LNGTH1,PID(SEQ)=$G(PID(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S PID(SEQ,SEQ1)=NXT
"RTN","MPIADT",34,0)
 ... I $L(NXT_$G(PID(SEQ)))'>245 S PID(SEQ)=$G(PID(SEQ))_NXT Q
"RTN","MPIADT",35,0)
 ;get PID-3 Patient Identifier List (three ids should be returned ICN, SSN, and DFN)
"RTN","MPIADT",36,0)
 N LASTID,IDCNT,CNT,NAMES,N
"RTN","MPIADT",37,0)
 S IDS=$G(PID(4))
"RTN","MPIADT",38,0)
 S LASTID=$L(IDS,REP),IDCNT=1,CNT=1
"RTN","MPIADT",39,0)
 F X=1:1:LASTID S ID=$P(IDS,REP,X) D
"RTN","MPIADT",40,0)
 .;if this is the last entry check for an extension of the message and reset the key variables
"RTN","MPIADT",41,0)
 .I X=LASTID I $D(PID(4,IDCNT)) S ID=ID_$P(PID(4,IDCNT),REP),IDS=$P(PID(4,IDCNT),REP,2,99),IDCNT=IDCNT+1,X=0,LASTID=$L(IDS,REP)
"RTN","MPIADT",42,0)
 . ;get id, assigning authority, and name type code
"RTN","MPIADT",43,0)
 . S PIDAA=$P($P(ID,COMP,4),SUBCOMP),PIDNTC=$P(ID,COMP,5),PIDSITE=$P($P(ID,COMP,6),SUBCOMP,2),PIDXDT=$P(ID,COMP,8)
"RTN","MPIADT",44,0)
 . S ID=$P(ID,COMP)
"RTN","MPIADT",45,0)
 . Q:ID=""
"RTN","MPIADT",46,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","MPIADT",47,0)
 . I PIDAA="USVHA" D
"RTN","MPIADT",48,0)
 .. I PIDNTC="NI" D
"RTN","MPIADT",49,0)
 ... I $G(PIDXDT)="" S ARRAY("ICN")=+ID,ARRAY("CHKSM")=$P(ID,"V",2)  ;National unique individual identifier
"RTN","MPIADT",50,0)
 ... I $G(PIDXDT)'="" S ARRAY("OID",CNT)=ID_"^"_PIDAA_"^"_PIDSITE_"^"_PIDXDT,CNT=CNT+1  ;Deprecated National unique individual identifier
"RTN","MPIADT",51,0)
 .. I PIDNTC="PI" S ARRAY("DFN")=ID  ;Patient internal identifier
"RTN","MPIADT",52,0)
 . I PIDAA="USSSA" D
"RTN","MPIADT",53,0)
 .. I PIDNTC="SS" S ARRAY(13)=ID  ;Social Security number
"RTN","MPIADT",54,0)
 . I PIDAA="USVBA" D
"RTN","MPIADT",55,0)
 .. I PIDNTC="PN" S ARRAY(15)=ID  ;VBA CLAIM#
"RTN","MPIADT",56,0)
 ;get PID-4 alternate ID (ICN History)
"RTN","MPIADT",57,0)
 I PID(5)'="" D
"RTN","MPIADT",58,0)
 . S CNT=1
"RTN","MPIADT",59,0)
 . F X=1:1:$L(PID(5),REP) S ARRAY("OID",CNT)=$P(PID(5),REP,X),CNT=CNT+1
"RTN","MPIADT",60,0)
 . S Y=0 F  S Y=$O(PID(5,Y)) Q:'Y  D
"RTN","MPIADT",61,0)
 .. S ARRAY("OID",CNT-1)=ARRAY("OID",CNT-1)_$P(PID(5,Y),REP)
"RTN","MPIADT",62,0)
 .. F X=2:1:$L(PID(5,Y),REP) S ARRAY("OID",CNT)=$P(PID(5,Y),REP,X),CNT=CNT+1
"RTN","MPIADT",63,0)
 . S X=0 F  S X=$O(ARRAY("OID",X)) Q:'X  D
"RTN","MPIADT",64,0)
 .. N ID,AA,AL S ID=$P(ARRAY("OID",X),COMP),AA=$P($P(ARRAY("OID",X),COMP,4),SUBCOMP,1),AL=$P($P(ARRAY("OID",X),COMP,6),SUBCOMP,2) S AL=$$IEN^XUAF4(AL)
"RTN","MPIADT",65,0)
 .. S ARRAY("OID",X)=ID_"^"_AA_"^"_AL
"RTN","MPIADT",66,0)
 Q:HL("ETN")="A03"
"RTN","MPIADT",67,0)
 ; ^ don't want to setup all the fields in ARRAY if msg is A03
"RTN","MPIADT",68,0)
 ;get PID-5 Patient Name and Alias(es)
"RTN","MPIADT",69,0)
 S NAMES=$G(PID(6)),CNT=1
"RTN","MPIADT",70,0)
 N A,ALISWKD
"RTN","MPIADT",71,0)
 S A="",ALISWKD=0
"RTN","MPIADT",72,0)
 D NAMARR
"RTN","MPIADT",73,0)
 F  S A=$O(PID(6,A)) Q:A=""  D
"RTN","MPIADT",74,0)
 .S NAMES=PID(6,A) D NAMARR
"RTN","MPIADT",75,0)
 ;get PID-6 Mother's maiden name
"RTN","MPIADT",76,0)
 S ARRAY(6)=$G(PID(7)) I ARRAY(6)="""""" S ARRAY(6)=""
"RTN","MPIADT",77,0)
 I ARRAY(6)'="" S ARRAY(6)=$P(ARRAY(6),COMP,1,5) S HLECH=HL("ECH") S ARRAY(6)=$$FMNAME^HLFNC(ARRAY(6))
"RTN","MPIADT",78,0)
 I ARRAY(6)="" S ARRAY(6)="@"
"RTN","MPIADT",79,0)
 ;get PID-7 Date of Birth
"RTN","MPIADT",80,0)
 S ARRAY(7)=$$FMDATE^HLFNC($G(PID(8))) I ARRAY(7)="""""" S ARRAY(7)=""
"RTN","MPIADT",81,0)
 ;get PID-8 Sex
"RTN","MPIADT",82,0)
 S ARRAY(12)=$G(PID(9)) I ARRAY(12)="""""" S ARRAY(12)="@"
"RTN","MPIADT",83,0)
 ;get PID-11-3 ADDRESS BOTH "P"rimary and "N" Place of
"RTN","MPIADT",84,0)
 S CNT=1
"RTN","MPIADT",85,0)
 N ADRTYPE,ADDR
"RTN","MPIADT",86,0)
 F X=1:1:$L(PID(12),REP) D
"RTN","MPIADT",87,0)
 . S ADDR=$P(PID(12),REP,X),ADRTYPE=$P(ADDR,COMP,7)
"RTN","MPIADT",88,0)
 . I ADRTYPE="P" D
"RTN","MPIADT",89,0)
 .. S ADDR=ADDR
"RTN","MPIADT",90,0)
 .. S ARRAY(31)=$P(ADDR,COMP,1)  ;addr [1]
"RTN","MPIADT",91,0)
 .. I ARRAY(31)=HL("Q")!(ARRAY(31)="") S ARRAY(31)="@"
"RTN","MPIADT",92,0)
 .. S ARRAY(32)=$P(ADDR,COMP,2)  ;addr [2]
"RTN","MPIADT",93,0)
 .. I ARRAY(32)=HL("Q")!(ARRAY(32)="") S ARRAY(32)="@"
"RTN","MPIADT",94,0)
 .. S ARRAY(33)=$P(ADDR,COMP,8)  ;addr [3]
"RTN","MPIADT",95,0)
 .. I ARRAY(33)=HL("Q")!(ARRAY(33)="") S ARRAY(33)="@"
"RTN","MPIADT",96,0)
 .. S ARRAY(34)=$P(ADDR,COMP,3)  ;city
"RTN","MPIADT",97,0)
 .. I ARRAY(34)=HL("Q") S ARRAY(34)="@"
"RTN","MPIADT",98,0)
 .. S ARRAY(35)=$P(ADDR,COMP,4)  ;state
"RTN","MPIADT",99,0)
 .. I ARRAY(35)=HL("Q") S ARRAY(35)="@"
"RTN","MPIADT",100,0)
 .. S ARRAY(36)=$P(ADDR,COMP,5)  ;zip+4
"RTN","MPIADT",101,0)
 .. I ARRAY(36)=HL("Q") S ARRAY(36)="@"
"RTN","MPIADT",102,0)
 .. N CNTYCODE S CNTYCODE=PID(13)  ;county code
"RTN","MPIADT",103,0)
 .. ;S ARRAY(.117)=$P(ARRAY(35),CNTYCODE) ;not stored on mpi
"RTN","MPIADT",104,0)
 .. ;S ARRAY(.131)=PID(14) ;not stored on mpi
"RTN","MPIADT",105,0)
 .. ;S ARRAY(.132)=PID(15) ;not stored on mpi
"RTN","MPIADT",106,0)
 .. ;I ARRAY(.132)="" S ARRAY(.132)="@" ;not stored on mpi
"RTN","MPIADT",107,0)
 . I ADRTYPE="N" D
"RTN","MPIADT",108,0)
 .. S ARRAY(8)=$P(ADDR,COMP,3) ;POB city
"RTN","MPIADT",109,0)
 .. S ARRAY(9)=$P(ADDR,COMP,4)  ;POB state
"RTN","MPIADT",110,0)
 ;get PID-11-3 and 4 Place of birth city and state
"RTN","MPIADT",111,0)
 I $G(ARRAY(8))=HL("Q")!($G(ARRAY(8))="") S ARRAY(8)="@"
"RTN","MPIADT",112,0)
 I $G(ARRAY(9))=HL("Q")!($G(ARRAY(9))="") S ARRAY(9)="@"
"RTN","MPIADT",113,0)
 ;get PID-29 Date of Death
"RTN","MPIADT",114,0)
 S ARRAY(10)=$G(PID(30))
"RTN","MPIADT",115,0)
 I ARRAY(10)="""""" S ARRAY(10)=""
"RTN","MPIADT",116,0)
 S ARRAY(10)=$$FMDATE^HLFNC(ARRAY(10))
"RTN","MPIADT",117,0)
 I ARRAY(10)="" S ARRAY(10)="@"
"RTN","MPIADT",118,0)
 ;get PID-16 Marital Status
"RTN","MPIADT",119,0)
 S ARRAY(30)=$G(PID(17))
"RTN","MPIADT",120,0)
 I $G(ARRAY(30))="S" S ARRAY(30)="N"
"RTN","MPIADT",121,0)
 I $G(ARRAY(30))="A" S ARRAY(30)="S"
"RTN","MPIADT",122,0)
 I $G(ARRAY(30))=HL("Q")!($G(ARRAY(30))="") S ARRAY(30)="@"
"RTN","MPIADT",123,0)
 ;get PID-13 phone number [residence]
"RTN","MPIADT",124,0)
 S ARRAY(37)=$G(PID(14))
"RTN","MPIADT",125,0)
 I $G(ARRAY(37))=HL("Q")!($G(ARRAY(37))="") S ARRAY(37)="@"
"RTN","MPIADT",126,0)
 ;get PID-24 Multiple Birth Indicator
"RTN","MPIADT",127,0)
 S ARRAY(39)=$G(PID(25))
"RTN","MPIADT",128,0)
 I $G(ARRAY(39))=HL("Q")!($G(ARRAY(39))="") S ARRAY(39)="@"
"RTN","MPIADT",129,0)
 ;get PID-22 Ethnic group
"RTN","MPIADT",130,0)
 N VAL
"RTN","MPIADT",131,0)
 S ARRAY("ETH",1)=$P($G(PID(23)),COMP)
"RTN","MPIADT",132,0)
 I $G(ARRAY("ETH",1))=HL("Q")!($G(ARRAY("ETH",1))="") S ARRAY("ETH",1)="@"
"RTN","MPIADT",133,0)
 I ARRAY("ETH",1)'="@" D
"RTN","MPIADT",134,0)
 .S VAL=$P(ARRAY("ETH",1),"-",1,2),VAL=$O(^DIC(10.2,"AHL7",VAL,""))
"RTN","MPIADT",135,0)
 .I VAL'="" S ARRAY("ETH",1)=VAL
"RTN","MPIADT",136,0)
 ;get PID-10 Race (multiple)
"RTN","MPIADT",137,0)
 N RACE,LRACE,LCNT,RAC,VALUE
"RTN","MPIADT",138,0)
 S RACE=$G(PID(11)),LRACE=$L(RACE,REP),LCNT=1
"RTN","MPIADT",139,0)
 F X=1:1:LRACE S RAC=$P(RACE,REP,X),VALUE=$P(RAC,COMP) I VALUE'=""&(VALUE'=HL("Q")) D
"RTN","MPIADT",140,0)
 .S VALUE=$P(VALUE,"-",1,2)
"RTN","MPIADT",141,0)
 .I $D(^DIC(10,"AHL7",VALUE)) S VALUE=$O(^DIC(10,"AHL7",VALUE,""))
"RTN","MPIADT",142,0)
 .I VALUE'="" S ARRAY("RACE",LCNT)=VALUE,LCNT=LCNT+1
"RTN","MPIADT",143,0)
 Q
"RTN","MPIADT",144,0)
PROC ;process in ADT type messages
"RTN","MPIADT",145,0)
 N MPIX S MPIX=0 N REP,SG,HLP,HLRESLTA,HLNODE
"RTN","MPIADT",146,0)
 F MPIX=1:1 X HLNEXT Q:HLQUIT'>0  S SG=$E(HLNODE,1,3) D:$T(@SG)]"" @SG
"RTN","MPIADT",147,0)
 Q
"RTN","MPIADT",148,0)
NAMARR F X=1:1:$L(NAMES,REP) S NAME=$P(NAMES,REP,X) D
"RTN","MPIADT",149,0)
 .I ALISWKD=1 S ALISWKD=0 Q
"RTN","MPIADT",150,0)
 .I $P(NAME,COMP,7)="L" D
"RTN","MPIADT",151,0)
 ..;PATIENT NAME
"RTN","MPIADT",152,0)
 ..S ARRAY(1)=$P(NAME,COMP) I ARRAY(1)="""""" S ARRAY(1)="@"
"RTN","MPIADT",153,0)
 ..S ARRAY(2)=$P(NAME,COMP,2) I ARRAY(2)="""""" S ARRAY(2)="@"
"RTN","MPIADT",154,0)
 ..S ARRAY(3)=$P(NAME,COMP,3) I ARRAY(3)="""""" S ARRAY(3)="@"
"RTN","MPIADT",155,0)
 ..S ARRAY(4)=$P(NAME,COMP,5) I ARRAY(4)="""""" S ARRAY(4)="@"
"RTN","MPIADT",156,0)
 ..S ARRAY(5)=$P(NAME,COMP,4) I ARRAY(5)="""""" S ARRAY(5)="@"
"RTN","MPIADT",157,0)
 .I ($P(NAME,COMP,7)="")&($G(PID(6,A+1))'="") S NAME=NAME_$P($G(PID(6,A+1)),REP,1),ALISWKD=1
"RTN","MPIADT",158,0)
 .I $P(NAME,COMP,7)="A" D
"RTN","MPIADT",159,0)
 ..Q:$P(NAME,COMP)=HL("Q")!($P(NAME,COMP)="")
"RTN","MPIADT",160,0)
 ..S ARRAY("ALIAS",CNT,1)=$P(NAME,COMP)
"RTN","MPIADT",161,0)
 ..S ARRAY("ALIAS",CNT,2)=$P(NAME,COMP,2) I ARRAY("ALIAS",CNT,2)=HL("Q") S ARRAY("ALIAS",CNT,2)="@"
"RTN","MPIADT",162,0)
 ..S ARRAY("ALIAS",CNT,3)=$P(NAME,COMP,3) I ARRAY("ALIAS",CNT,3)=HL("Q") S ARRAY("ALIAS",CNT,3)="@"
"RTN","MPIADT",163,0)
 ..S ARRAY("ALIAS",CNT,4)=$P(NAME,COMP,5) I ARRAY("ALIAS",CNT,4)=HL("Q") S ARRAY("ALIAS",CNT,4)="@"
"RTN","MPIADT",164,0)
 ..S ARRAY("ALIAS",CNT,5)=$P(NAME,COMP,4) I ARRAY("ALIAS",CNT,5)=HL("Q") S ARRAY("ALIAS",CNT,5)="@"
"RTN","MPIADT",165,0)
 ..S CNT=CNT+1
"RTN","MPIADT",166,0)
 Q
"RTN","MPIADT",167,0)
ROUTE ;routing logic for ADT type messages
"RTN","MPIADT",168,0)
 Q
"RTN","MPIADT",169,0)
RESP ;ADT response processor
"RTN","MPIADT",170,0)
 Q
"RTN","MPIAUCL")
0^19^B2623230
"RTN","MPIAUCL",1,0)
MPIAUCL ;CMC/BP-MPI AUDIT CLEANUP ;10/3/00
"RTN","MPIAUCL",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**6**;30 Apr 99
"RTN","MPIAUCL",3,0)
 ;
"RTN","MPIAUCL",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIAUCL",5,0)
 ;  ^DIA(985,ien ^DIA(985,"B" ^DIA(985,"C" ^DIA(985,"D" - #3597
"RTN","MPIAUCL",6,0)
EN ;
"RTN","MPIAUCL",7,0)
 N LAST
"RTN","MPIAUCL",8,0)
 D GETS^DIQ(985.1,1,"1","","LAST")
"RTN","MPIAUCL",9,0)
 S LAST=LAST(985.1,"1,",1)
"RTN","MPIAUCL",10,0)
 I +LAST'>0 S LAST=365
"RTN","MPIAUCL",11,0)
 N %,%H,%I,X,TODAY,X1,X2,MPIACL
"RTN","MPIAUCL",12,0)
 D NOW^%DTC
"RTN","MPIAUCL",13,0)
 S TODAY=X,X1=TODAY,X2="-"_LAST
"RTN","MPIAUCL",14,0)
 D C^%DTC
"RTN","MPIAUCL",15,0)
 S LAST=X
"RTN","MPIAUCL",16,0)
 ; set purge start date/time
"RTN","MPIAUCL",17,0)
 D NOW^%DTC
"RTN","MPIAUCL",18,0)
 K FDA S FDA(985.1,"1,",2)=$E(%,1,12) D FILE^DIE("E","FDA","MPIACL")
"RTN","MPIAUCL",19,0)
 D PASS(LAST)
"RTN","MPIAUCL",20,0)
 ; set purge stop date/time
"RTN","MPIAUCL",21,0)
 D NOW^%DTC
"RTN","MPIAUCL",22,0)
 K FDA S FDA(985.1,"1,",2.1)=$E(%,1,12) D FILE^DIE("E","FDA","MPIACL")
"RTN","MPIAUCL",23,0)
 Q
"RTN","MPIAUCL",24,0)
 ;
"RTN","MPIAUCL",25,0)
PASS(LAST) ;entry point if want to change purge parameter to be less than 190 days
"RTN","MPIAUCL",26,0)
 N TDT,CNT,IEN,CNT1,CNTB,CNTC,CNT985,ICN,CNTD,USER
"RTN","MPIAUCL",27,0)
 S TDT="",(CNT,CNTB,CNTC,CNT985,CNT1,CNTD)=0
"RTN","MPIAUCL",28,0)
 F  S TDT=$O(^DIA(985,"C",TDT)) Q:$E(TDT,1,7)>LAST  D
"RTN","MPIAUCL",29,0)
 .S IEN=""
"RTN","MPIAUCL",30,0)
 .F  S IEN=$O(^DIA(985,"C",TDT,IEN)) Q:IEN=""  D
"RTN","MPIAUCL",31,0)
 ..S CNT=CNT+1
"RTN","MPIAUCL",32,0)
 ..I '$D(^DIA(985,IEN)) S CNTC=CNTC+1 K ^DIA(985,"C",TDT,IEN)
"RTN","MPIAUCL",33,0)
 ..I $D(^DIA(985,IEN)) D
"RTN","MPIAUCL",34,0)
 ...S CNTC=CNTC+1 K ^DIA(985,"C",TDT,IEN)
"RTN","MPIAUCL",35,0)
 ...S USER=$P($G(^DIA(985,IEN,0)),"^",4)
"RTN","MPIAUCL",36,0)
 ...I USER'="" S CNTD=CNTD+1 K ^DIA(985,"D",USER,IEN)
"RTN","MPIAUCL",37,0)
 ...S ICN=$P($G(^DIA(985,IEN,0)),"^")
"RTN","MPIAUCL",38,0)
 ...I ICN'="" S CNTB=CNTB+1 K ^DIA(985,"B",ICN,IEN)
"RTN","MPIAUCL",39,0)
 ...S CNT985=CNT985+1 K ^DIA(985,IEN)
"RTN","MPIAUCL",40,0)
 Q
"RTN","MPIAUCL",41,0)
 ;
"RTN","MPIAUCL2")
0^21^B2981676
"RTN","MPIAUCL2",1,0)
MPIAUCL2 ;CML/BHAM IOFO MPI AUDIT CLEANUP ; 05/29/02
"RTN","MPIAUCL2",2,0)
 ;;1.0; MASTER PATIENT INDEX AUSTIN ;**6**; 30 Apr 99
"RTN","MPIAUCL2",3,0)
 ;TASK 137
"RTN","MPIAUCL2",4,0)
 ;This routine checks the "B","C", and "D" xrefs in the Audit file (#1.1),
"RTN","MPIAUCL2",5,0)
 ;if the zero node does not exist for the entry the xref is killed
"RTN","MPIAUCL2",6,0)
 ;
"RTN","MPIAUCL2",7,0)
 ;D BCHK,CCHK,DCHK
"RTN","MPIAUCL2",8,0)
 D DCHK
"RTN","MPIAUCL2",9,0)
 ;
"RTN","MPIAUCL2",10,0)
QUIT ;
"RTN","MPIAUCL2",11,0)
 Q
"RTN","MPIAUCL2",12,0)
 ;
"RTN","MPIAUCL2",13,0)
BCHK ;check "B" xref
"RTN","MPIAUCL2",14,0)
 K ^XTMP("MPIAUCL","SAT","B XREF CLEANUP")
"RTN","MPIAUCL2",15,0)
 ;N SATB,ICN,IEN,CTR
"RTN","MPIAUCL2",16,0)
 ;
"RTN","MPIAUCL2",17,0)
 S (SATB,CTR,ICN)=0 F  S ICN=$O(^DIA(985,"B",ICN)) Q:'ICN  D
"RTN","MPIAUCL2",18,0)
 .S CTR=CTR+1
"RTN","MPIAUCL2",19,0)
 .S IEN=0 F  S IEN=$O(^DIA(985,"B",ICN,IEN)) Q:'IEN  D
"RTN","MPIAUCL2",20,0)
 ..I '$D(^DIA(985,IEN,0)) S SATB=SATB+1 K ^DIA(985,"B",ICN,IEN)
"RTN","MPIAUCL2",21,0)
 S ^XTMP("MPIAUCL","SAT","B XREF CLEANUP")=SATB
"RTN","MPIAUCL2",22,0)
 Q
"RTN","MPIAUCL2",23,0)
 ;
"RTN","MPIAUCL2",24,0)
CCHK ;check "C" xref
"RTN","MPIAUCL2",25,0)
 K ^XTMP("MPIAUCL","SAT","C XREF CLEANUP")
"RTN","MPIAUCL2",26,0)
 ;N SATC,AUDDT,IEN,CTR
"RTN","MPIAUCL2",27,0)
 ;
"RTN","MPIAUCL2",28,0)
 S (SATC,CTR,AUDDT)=0 F  S AUDDT=$O(^DIA(985,"C",AUDDT)) Q:'AUDDT  D
"RTN","MPIAUCL2",29,0)
 .S IEN=0 F  S IEN=$O(^DIA(985,"C",AUDDT,IEN)) Q:'IEN  D
"RTN","MPIAUCL2",30,0)
 ..S CTR=CTR+1
"RTN","MPIAUCL2",31,0)
 ..I '$D(^DIA(985,IEN,0)) S SATC=SATC+1 K ^DIA(985,"C",AUDDT,IEN)
"RTN","MPIAUCL2",32,0)
 S ^XTMP("MPIAUCL","SAT","C XREF CLEANUP")=SATC
"RTN","MPIAUCL2",33,0)
 Q
"RTN","MPIAUCL2",34,0)
 ;
"RTN","MPIAUCL2",35,0)
DCHK ;check "D" xref
"RTN","MPIAUCL2",36,0)
 K ^XTMP("MPIAUCL","SAT","D XREF CLEANUP")
"RTN","MPIAUCL2",37,0)
 ;N SATD,USER,IEN,CTR
"RTN","MPIAUCL2",38,0)
 ;
"RTN","MPIAUCL2",39,0)
 S (SATD,CTR,USER)=0 F  S USER=$O(^DIA(985,"D",USER)) Q:'USER  D
"RTN","MPIAUCL2",40,0)
 .S IEN=0 F  S IEN=$O(^DIA(985,"D",USER,IEN)) Q:'IEN  D
"RTN","MPIAUCL2",41,0)
 ..S CTR=CTR+1
"RTN","MPIAUCL2",42,0)
 ..I '$D(^DIA(985,IEN,0)) S SATD=SATD+1 K ^DIA(985,"D",USER,IEN)
"RTN","MPIAUCL2",43,0)
 S ^XTMP("MPIAUCL","SAT","D XREF CLEANUP")=SATD
"RTN","MPIAUCL2",44,0)
 Q
"RTN","MPIAUD")
0^22^B35073918
"RTN","MPIAUD",1,0)
MPIAUD ;BIR/CML,PTD-AUDIT data from MPI VETERAN/CLIENT file for an ICN ;4/26/02
"RTN","MPIAUD",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**10,24**;30 Apr 99
"RTN","MPIAUD",3,0)
 ;
"RTN","MPIAUD",4,0)
 ;Reference to ^DIA(985 and data derived from the AUDIT file (#1.1)
"RTN","MPIAUD",5,0)
 ;is supported by IA #2097 and #2602.
"RTN","MPIAUD",6,0)
 ;Reference to ^ORD(101 supported by IA #2596
"RTN","MPIAUD",7,0)
 ;
"RTN","MPIAUD",8,0)
 S QFLG=1
"RTN","MPIAUD",9,0)
 W !!,"This option prints information from the AUDIT file (#1.1) for a"
"RTN","MPIAUD",10,0)
 W !,"selected Integration Control Number (ICN) or Social Security"
"RTN","MPIAUD",11,0)
 W !,"Number (SSN) and date range.  If multiple ICNs are identified sharing"
"RTN","MPIAUD",12,0)
 W !,"the same SSN, available audit data will be displayed for all ICNs."
"RTN","MPIAUD",13,0)
 W !!,"For the MPI VETERAN/CLIENT (#985) file entry selected, the report prints"
"RTN","MPIAUD",14,0)
 W !,"the ICN, date/time the field was edited, the user who made the change,"
"RTN","MPIAUD",15,0)
 W !,"the field edited, the old value, and the new value. The option or"
"RTN","MPIAUD",16,0)
 W !,"protocol (if available) will also be displayed."
"RTN","MPIAUD",17,0)
 ;
"RTN","MPIAUD",18,0)
ASK1 ;Ask for ICN or SSN
"RTN","MPIAUD",19,0)
 K ARRAY,DIR,DIRUT,DTOUT,DUOUT,ERR,X,Y
"RTN","MPIAUD",20,0)
 W ! S DIR(0)="F:9:10",DIR("A")="Enter ICN or SSN"
"RTN","MPIAUD",21,0)
 S DIR("?",1)="Enter the 10 digit Integration Control Number"
"RTN","MPIAUD",22,0)
 S DIR("?")="OR the 9 digit Social Security Number."
"RTN","MPIAUD",23,0)
 D ^DIR K DIR
"RTN","MPIAUD",24,0)
 I $D(DIRUT) G QUIT
"RTN","MPIAUD",25,0)
 I (Y'?9N),(Y'?10N) W " ??" G ASK1
"RTN","MPIAUD",26,0)
 ;ICN entered
"RTN","MPIAUD",27,0)
 I Y?10N I '$O(^DIA(985,"B",Y,0)) W !!,"There is no audit data available for any date for ICN "_Y_"." G ASK1
"RTN","MPIAUD",28,0)
 I Y?10N D
"RTN","MPIAUD",29,0)
 .D DUPCHK^MPIMDMA1(.ARRAY,.ERR,Y)
"RTN","MPIAUD",30,0)
 .I $D(ERR) S ARRAY(Y)="" K ERR
"RTN","MPIAUD",31,0)
 ;SSN entered
"RTN","MPIAUD",32,0)
 I Y?9N D
"RTN","MPIAUD",33,0)
 .D DUPCHK^MPIMDMA1(.ARRAY,.ERR,,Y)
"RTN","MPIAUD",34,0)
 .I $D(ERR) W !!,$P(ERR,"^",2)
"RTN","MPIAUD",35,0)
 I $D(ERR) G ASK1
"RTN","MPIAUD",36,0)
 ;
"RTN","MPIAUD",37,0)
DSP ;Display array of ICNs
"RTN","MPIAUD",38,0)
 W !!,"Your entry has identified the following ICN(s):"
"RTN","MPIAUD",39,0)
 S ICN=0 F  S ICN=$O(ARRAY(ICN)) Q:'ICN  D
"RTN","MPIAUD",40,0)
 .I '$O(^DIA(985,"B",ICN,0)) W !,ICN_" - no audit data available for any date." K ARRAY(ICN) Q
"RTN","MPIAUD",41,0)
 .S AUDIEN=0 F  S AUDIEN=$O(^DIA(985,"B",ICN,AUDIEN)) Q:$D(EARLY)  Q:'AUDIEN  D
"RTN","MPIAUD",42,0)
 ..S EARLY=$P($P($G(^DIA(985,AUDIEN,0)),"^",2),".")
"RTN","MPIAUD",43,0)
 ..I EARLY="" K EARLY Q
"RTN","MPIAUD",44,0)
 ..I $D(EARLY) W !,ICN_" - earliest audit data is "_$$FMTE^XLFDT(EARLY)_"."
"RTN","MPIAUD",45,0)
 .I '$D(EARLY) W !,ICN_" - no audit data available for any date." K ARRAY(ICN)
"RTN","MPIAUD",46,0)
 I '$O(ARRAY(0)) G ASK1
"RTN","MPIAUD",47,0)
 ;
"RTN","MPIAUD",48,0)
ASK2 ;Ask for Date Range
"RTN","MPIAUD",49,0)
 W !!,"Enter date range for data to be included in report."
"RTN","MPIAUD",50,0)
 K DIR,DIRUT,DTOUT,DUOUT S DIR(0)="DAO^:DT:EPX",DIR("A")="Beginning Date: "
"RTN","MPIAUD",51,0)
 I $D(EARLY) S DIR("B")=$$FMTE^XLFDT(EARLY)
"RTN","MPIAUD",52,0)
 D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIAUD",53,0)
 S MPIBDT=Y,DIR(0)="DAO^"_MPIBDT_":DT:EPX",DIR("A")="Ending Date: "
"RTN","MPIAUD",54,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","MPIAUD",55,0)
 D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIAUD",56,0)
 S MPIEDT=Y
"RTN","MPIAUD",57,0)
 ;
"RTN","MPIAUD",58,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","MPIAUD",59,0)
 S ZTSAVE("MPIBDT")="",ZTSAVE("MPIEDT")="",ZTSAVE(".ARRAY")=""
"RTN","MPIAUD",60,0)
 D EN^XUTMDEVQ("START^MPIAUD","Print MPI VETERAN/CLIENT (#985) audit data",.ZTSAVE) I 'POP Q
"RTN","MPIAUD",61,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIAUD",62,0)
 G QUIT
"RTN","MPIAUD",63,0)
 ;
"RTN","MPIAUD",64,0)
START ;Entry point when queued 
"RTN","MPIAUD",65,0)
 N ICN,IEN
"RTN","MPIAUD",66,0)
 S (PG,QFLG)=0,$P(LN,"-",81)=""
"RTN","MPIAUD",67,0)
 S PRGBDT=$$FMTE^XLFDT(MPIBDT),PRGEDT=$$FMTE^XLFDT(MPIEDT)
"RTN","MPIAUD",68,0)
 S HDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIAUD",69,0)
 S ICN=0 F  S ICN=$O(ARRAY(ICN)) Q:'ICN  D
"RTN","MPIAUD",70,0)
 .D LOOP
"RTN","MPIAUD",71,0)
 .D PRT
"RTN","MPIAUD",72,0)
QUIT ;Kill variables and quit
"RTN","MPIAUD",73,0)
 I $E(IOST,1,2)="C-"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIAUD",74,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIAUD",75,0)
 K ^TMP("MPIAUD",$J)
"RTN","MPIAUD",76,0)
 K ARRAY,AUDIEN,DA,DIC,DIQ,DIR,DIRUT,DR,DTOUT,DUOUT,EARLY,EDITDT,FLD,HDT,ICN,IEN,IEN0,JJ,LN,MPIARR,MPIBDT,MPIEDT,NEW
"RTN","MPIAUD",77,0)
 K OLD,OPTDA1,OPTDA2,OPTION,OPTNM,PG,PRGBDT,PRGEDT,PRTDT,QFLG,SS,STOP,USER,X,Y,ZTSK
"RTN","MPIAUD",78,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIAUD",79,0)
 Q
"RTN","MPIAUD",80,0)
 ;
"RTN","MPIAUD",81,0)
LOOP ;Loop on "B" xref of the AUDIT file
"RTN","MPIAUD",82,0)
 K ^TMP("MPIAUD",$J)
"RTN","MPIAUD",83,0)
 S STOP=MPIEDT+1
"RTN","MPIAUD",84,0)
 S IEN=0 F  S IEN=$O(^DIA(985,"B",ICN,IEN)) Q:'IEN  D
"RTN","MPIAUD",85,0)
 .I $D(^DIA(985,IEN,0)) S EDITDT=$P(^(0),"^",2) I EDITDT>MPIBDT,EDITDT<STOP D
"RTN","MPIAUD",86,0)
 ..S ^TMP("MPIAUD",$J,EDITDT,IEN)=""
"RTN","MPIAUD",87,0)
 Q
"RTN","MPIAUD",88,0)
 ;
"RTN","MPIAUD",89,0)
PRT ;Print report
"RTN","MPIAUD",90,0)
 D HDR
"RTN","MPIAUD",91,0)
 I '$O(^TMP("MPIAUD",$J,0)) W !!,"No audit data found in this date range for this ICN." Q
"RTN","MPIAUD",92,0)
 S EDITDT=0 F  S EDITDT=$O(^TMP("MPIAUD",$J,EDITDT)) Q:QFLG  Q:'EDITDT  D
"RTN","MPIAUD",93,0)
 .S IEN=0 F  S IEN=$O(^TMP("MPIAUD",$J,EDITDT,IEN)) Q:QFLG  Q:'IEN  D
"RTN","MPIAUD",94,0)
 ..S PRTDT=$$FMTE^XLFDT($E(EDITDT,1,12))
"RTN","MPIAUD",95,0)
 ..S IEN0=^DIA(985,IEN,0)
"RTN","MPIAUD",96,0)
 ..K MPIARR D FIELD^DID(985,$P(IEN0,"^",3),"","LABEL","MPIARR")
"RTN","MPIAUD",97,0)
 ..S FLD=$G(MPIARR("LABEL")) Q:FLD=""
"RTN","MPIAUD",98,0)
 ..S USER=$P(IEN0,"^",4)
"RTN","MPIAUD",99,0)
 ..I 'USER S USER="UNKNOWN"
"RTN","MPIAUD",100,0)
 ..I USER'="UNKNOWN" S DIC="^VA(200,",DIC(0)="MZO",X="`"_USER D ^DIC S USER=$P(Y,"^",2)
"RTN","MPIAUD",101,0)
 ..S OLD=$G(^DIA(985,IEN,2)) I OLD']"" S OLD="<no previous value>"
"RTN","MPIAUD",102,0)
 ..S NEW=$G(^DIA(985,IEN,3)) I NEW']"" S NEW="<no current value>"
"RTN","MPIAUD",103,0)
 ..K OPTDA1,OPTDA2,OPTION,OPTNM I $G(^DIA(985,IEN,4.1)) D
"RTN","MPIAUD",104,0)
 ...S OPTDA1=+$P(^DIA(985,IEN,4.1),"^")
"RTN","MPIAUD",105,0)
 ...I OPTDA1 S DIC=19,DR=".01",DA=OPTDA1,DIQ(0)="EI",DIQ="OPTION" D EN^DIQ1 K DIC,DR,DA,DIQ S OPTION=$G(OPTION(19,OPTDA1,.01,"E"))
"RTN","MPIAUD",106,0)
 ...S OPTDA2=$P(^DIA(985,IEN,4.1),"^",2)
"RTN","MPIAUD",107,0)
 ...I $P(OPTDA2,";",2)="ORD(101," S DIC=101,DR=".01",DA=+OPTDA2,DIQ(0)="EI",DIQ="OPTION" D EN^DIQ1 K DIC,DR,DA,DIQ S OPTNM=$G(OPTION(101,+OPTDA2,.01,"E")) Q
"RTN","MPIAUD",108,0)
 ...I +OPTDA2 S DIC=19,DR=".01",DA=+OPTDA2,DIQ(0)="EI",DIQ="OPTION" D EN^DIQ1 K DIC,DR,DA,DIQ S OPTNM=$G(OPTION(19,+OPTDA2,.01,"E")) Q
"RTN","MPIAUD",109,0)
 ..D:$Y+5>IOSL HDR Q:QFLG
"RTN","MPIAUD",110,0)
 ..W !,PRTDT,?20,FLD,?51,USER,!?20,OLD," / ",NEW
"RTN","MPIAUD",111,0)
 ..I $G(OPTION)'="" W !?3,OPTION I $G(OPTNM)'="" W "/",$G(OPTNM)
"RTN","MPIAUD",112,0)
 ..W !
"RTN","MPIAUD",113,0)
 Q
"RTN","MPIAUD",114,0)
 ;
"RTN","MPIAUD",115,0)
HDR ;HEADER
"RTN","MPIAUD",116,0)
 I $E(IOST,1,2)="C-" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIAUD",117,0)
 I $E(IOST,1,2)="C-",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIAUD",118,0)
 S PG=PG+1 W:$Y!($E(IOST,1,2)="C-") @IOF
"RTN","MPIAUD",119,0)
 W !,"MPI ICN Audit Data     Printed on ",HDT,?70,"Page: ",PG
"RTN","MPIAUD",120,0)
 W !,"Integration Control Number: ",ICN,"     "
"RTN","MPIAUD",121,0)
 I '$D(^MPIVET(+ICN,0)) W "(Deleted ICN)"
"RTN","MPIAUD",122,0)
 I $D(^MPIVET(+ICN,0)) I $P($G(^MPIVET(+ICN,"ID_STATE")),"^")="D" W "(Deactivated ICN)" ;**24
"RTN","MPIAUD",123,0)
 I $D(^MPIVET(+ICN,0)) I $P($G(^MPIVET(+ICN,0)),"^",14)'="" W "Social Security Number: ",$P($G(^MPIVET(+ICN,0)),"^",14)
"RTN","MPIAUD",124,0)
 W !,"Date Range: ",PRGBDT," to ",PRGEDT
"RTN","MPIAUD",125,0)
 W !!,"Date/Time Edited",?20,"Field Edited",?51,"Edited By"
"RTN","MPIAUD",126,0)
 W !?20,"Old Value / New Value",!?3,"Option/Protocol",!,LN
"RTN","MPIAUD",127,0)
 Q
"RTN","MPIAUD",128,0)
 ;
"RTN","MPIAUDIT")
0^223^B3142031
"RTN","MPIAUDIT",1,0)
MPIAUDIT ;GFT;10:48 AM  24 Aug 1997
"RTN","MPIAUDIT",2,0)
 ;
"RTN","MPIAUDIT",3,0)
 K ^TMP("MPIAUDIT",$J)
"RTN","MPIAUDIT",4,0)
 D WAIT^DICD
"RTN","MPIAUDIT",5,0)
 D REPORT("^TMP(""MPIAUDIT"",$J)")
"RTN","MPIAUDIT",6,0)
 N DIC,BY,L,DIQ,FLDS,FR,TO,DIQ
"RTN","MPIAUDIT",7,0)
 S DIC="^MPIVET(",L=0,L(0)=1,BY(0)="^TMP(""MPIAUDIT"",$J,",BY=.01,(FR,TO)=""
"RTN","MPIAUDIT",8,0)
 S FLDS=".01,1,2,7,13,16,999"
"RTN","MPIAUDIT",9,0)
 D EN1^DIP
"RTN","MPIAUDIT",10,0)
 Q
"RTN","MPIAUDIT",11,0)
 ;
"RTN","MPIAUDIT",12,0)
REPORT(OUT,START) ;entry numbers will go into @OUT
"RTN","MPIAUDIT",13,0)
 ;we start looking after FileMan date START
"RTN","MPIAUDIT",14,0)
 K @OUT N TIMESPAN S TIMESPAN=5*24*60*60 ;5 days, in seconds
"RTN","MPIAUDIT",15,0)
 N MAX S MAX=3 ;most changes allowed within TIMESPAN before we report
"RTN","MPIAUDIT",16,0)
 N B F B=0:0 S B=$O(^DIA(985,"B",B)) Q:'B  I $$ONEGUY(B,TIMESPAN,$G(START))>MAX D
"RTN","MPIAUDIT",17,0)
 .S @OUT@(B)=""
"RTN","MPIAUDIT",18,0)
 Q
"RTN","MPIAUDIT",19,0)
ONEGUY(B,TIMESPAN,START) ;returns maximum number of changes to Entry B during TIMESPAN since START (FileMan-form date)
"RTN","MPIAUDIT",20,0)
 N D,I,G,Y,S,X,%H,%Y,%T
"RTN","MPIAUDIT",21,0)
 F I=0:0 S I=$O(^DIA(985,"B",B,I)) Q:'I  D
"RTN","MPIAUDIT",22,0)
 .S X=$P($G(^DIA(985,I,0)),U,2) I 'X Q
"RTN","MPIAUDIT",23,0)
 .I $G(START)>X Q
"RTN","MPIAUDIT",24,0)
 .I '$D(D(X)) S D(X)="" D  I X-$O(G(X),-1)>5 S G(X)="" ;5 seconds
"RTN","MPIAUDIT",25,0)
 ..S %T=$P(X,".",2)_"000000",S=($E(%T,1,2)*3600)+($E(%T,3,4)*60)+$E(%T,5,6)
"RTN","MPIAUDIT",26,0)
 ..D H^%DTC S X=%H*86400+S
"RTN","MPIAUDIT",27,0)
 S (Y,G)=0 F  S G=$O(G(G)) Q:'G  S:'Y Y=1 S X=$O(G(G)) D  I I>Y S Y=I
"RTN","MPIAUDIT",28,0)
 .F I=1:1 Q:'X  Q:X-G>TIMESPAN  S X=$O(G(X))
"RTN","MPIAUDIT",29,0)
 Q Y
"RTN","MPIAUDIT",30,0)
 ;
"RTN","MPIAUDIT",31,0)
MULDATE(D0) ;
"RTN","MPIAUDIT",32,0)
 N MPI,X,Y,P S P=""
"RTN","MPIAUDIT",33,0)
 F MPI=0:0 S MPI=$O(^DIA(985,"B",D0,MPI)) Q:'MPI  S X=$P($G(^DIA(985,MPI,0)),U,2) I X>P S Y=X D D^DIQ S P=X,X=Y X DICMX
"RTN","MPIC")
0^26^B5481141
"RTN","MPIC",1,0)
MPIC ;GFT;Find MPI duplicates ;8/15/97
"RTN","MPIC",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**2,35**;30 Apr 99
"RTN","MPIC",3,0)
 ;
"RTN","MPIC",4,0)
 ; INTEGRATION AGREEMENTS UTILIZED
"RTN","MPIC",5,0)
 ;   FILE^XDRDQUE - #3528
"RTN","MPIC",6,0)
 ;   ^XDRDFPD - #3524
"RTN","MPIC",7,0)
 ;   EN^XDRDFPD - #3525
"RTN","MPIC",8,0)
 ;   SETUP^XDRDFPD - #3526
"RTN","MPIC",9,0)
 ;   CHECK^XDRDMAIN - #3527
"RTN","MPIC",10,0)
 ;
"RTN","MPIC",11,0)
 D DT^DICRW
"RTN","MPIC",12,0)
 N MPINOADD
"RTN","MPIC",13,0)
 N XDRDMAIN,XDRDTO,XDRDUP
"RTN","MPIC",14,0)
 N XDRCD2,XDRCD,XDRD,XDRDSCOR,XDRDTEST,XDRDTYPE,XDRFL,XDRGL,XDRQFLG
"RTN","MPIC",15,0)
 S XDRFL=985
"RTN","MPIC",16,0)
 D ^XDRDFPD
"RTN","MPIC",17,0)
 K ^TMP("XDRD",$J,985) Q
"RTN","MPIC",18,0)
 ;
"RTN","MPIC",19,0)
EN(XDRCD,MPIOUT) ;
"RTN","MPIC",20,0)
 N ZTQUEUED S ZTQUEUED=1 ;so we don't see a "waiting" message
"RTN","MPIC",21,0)
 N MPINOADD S MPINOADD=1 ;so duplicates don't go into File 15!
"RTN","MPIC",22,0)
 N XDRDMAIN,XDRDTO,XDRDUP
"RTN","MPIC",23,0)
 N XDRCD2,XDRD,XDRDSCOR,XDRDTEST,XDRDTYPE,XDRFL,XDRGL,XDRQFLG
"RTN","MPIC",24,0)
 S XDRFL=985 D EN^XDRDFPD
"RTN","MPIC",25,0)
 K @MPIOUT
"RTN","MPIC",26,0)
 N I F I=0:0 S I=$O(^TMP("XDRD",$J,985,I)) Q:'I  I I-XDRCD S @MPIOUT@(I)=""
"RTN","MPIC",27,0)
 K ^TMP("XDRD",$J,985) Q
"RTN","MPIC",28,0)
 ;
"RTN","MPIC",29,0)
 ;
"RTN","MPIC",30,0)
TRY(NAME,SSN,DOB,MPIOUT) ;FileMan format, 4th parameter is name of local or global array
"RTN","MPIC",31,0)
 S SSN=$TR(SSN," -")
"RTN","MPIC",32,0)
 S NAME=$$HLNAME^HLFNC(NAME,U)
"RTN","MPIC",33,0)
 K @MPIOUT,^TMP("XDRD",$J,985)
"RTN","MPIC",34,0)
 N ZTQUEUED S ZTQUEUED=1 ;so we don't see a "waiting" message
"RTN","MPIC",35,0)
 N MPINOADD S MPINOADD=1 ;so duplicates don't go into File 15!
"RTN","MPIC",36,0)
 N XDRCD,XDRDCAN,XDRDMAIN,XDRDTO,XDRDUP
"RTN","MPIC",37,0)
 N XDRCD2,XDRD,XDRDSCOR,XDRDTEST,XDRDTYPE,XDRFL,XDRGL,XDRQFLG
"RTN","MPIC",38,0)
 S XDRFL=985,XDRGL="^MPIVET(",XDRQFLG=0,XDRDTYPE="b"
"RTN","MPIC",39,0)
 D FILE^XDRDQUE
"RTN","MPIC",40,0)
 D SETUP^XDRDFPD
"RTN","MPIC",41,0)
 D LOCAL^MPICAN
"RTN","MPIC",42,0)
 F XDRCD2=0:0 S XDRCD2=$O(^TMP("XDRD",$J,XDRFL,XDRCD2)) Q:XDRCD2<1000000000  D
"RTN","MPIC",43,0)
 .D CHECK^XDRDMAIN
"RTN","MPIC",44,0)
 .Q:'$G(XDRDSCOR("PDT"))  Q:$G(XDRD("DUPSCORE"))<XDRDSCOR("PDT")
"RTN","MPIC",45,0)
 .;**35 screen out ID STATE of "deactivated"
"RTN","MPIC",46,0)
 .I $P($G(^MPIVET(XDRCD2,"ID_STATE")),"^")'="D" S @MPIOUT@(XDRCD2)=XDRD("DUPSCORE") ;added equals 6/1/01 for gcpr testing it
"RTN","MPIC",47,0)
 K ^TMP("XDRD",$J)
"RTN","MPIC",48,0)
 Q
"RTN","MPICAN")
0^224^B8224663
"RTN","MPICAN",1,0)
MPICAN ;GFT;09:28 AM  17 Dec 1996;CANDIDATES FOR DUPLICATE OF #XDRCD
"RTN","MPICAN",2,0)
 ;;
"RTN","MPICAN",3,0)
 ;
"RTN","MPICAN",4,0)
 ; Calls: EN^DIQ1
"RTN","MPICAN",5,0)
 ;
"RTN","MPICAN",6,0)
START ;
"RTN","MPICAN",7,0)
 K ^TMP("XDRD",$J,985),XDRDCAN
"RTN","MPICAN",8,0)
 D VALUE
"RTN","MPICAN",9,0)
PS I $E(XDRDCAN(985,XDRCD,13,"I"),1,5)="00000" Q
"RTN","MPICAN",10,0)
 D NAME
"RTN","MPICAN",11,0)
 D SSN
"RTN","MPICAN",12,0)
 D DOB
"RTN","MPICAN",13,0)
 I $G(MPINOADD) S XDRD("NOADD")=1 ;keeps info from going into ^VA(15)
"RTN","MPICAN",14,0)
END D EOJ
"RTN","MPICAN",15,0)
 Q
"RTN","MPICAN",16,0)
 ;
"RTN","MPICAN",17,0)
 ;
"RTN","MPICAN",18,0)
LOCAL ;DA=0 means we are comparing with a hypothetical entry, not an actual one!
"RTN","MPICAN",19,0)
 S DA=0
"RTN","MPICAN",20,0)
 F I=1:1:5 S XDRDCAN(985,0,I,"I")=$P(NAME,U,I)
"RTN","MPICAN",21,0)
 S XDRDCAN(985,0,13,"I")=SSN,XDRDCAN(985,0,7,"I")=DOB
"RTN","MPICAN",22,0)
 D L G PS
"RTN","MPICAN",23,0)
 ;
"RTN","MPICAN",24,0)
VALUE ;
"RTN","MPICAN",25,0)
 S DIC=985,DA=XDRCD,DIQ(0)="I",DIQ="XDRDCAN",DR="1;2;3;4;5;7;13"
"RTN","MPICAN",26,0)
 D EN^DIQ1 K DIC,DR,DIQ
"RTN","MPICAN",27,0)
L S XDRDSCOR("DR",985)="2;3;4;5;"_$G(XDRDSCOR("DR",985)) ;we need all the name, for comparison
"RTN","MPICAN",28,0)
 K XDRCD M XDRCD=XDRDCAN S XDRCD=DA K DA
"RTN","MPICAN",29,0)
 Q
"RTN","MPICAN",30,0)
 ;
"RTN","MPICAN",31,0)
NAME ;
"RTN","MPICAN",32,0)
 N F,L,B,C S L=XDRDCAN(985,XDRCD,1,"I"),(B,F)=$E(XDRDCAN(985,XDRCD,2,"I"))
"RTN","MPICAN",33,0)
 I L=""!(F="") Q
"RTN","MPICAN",34,0)
 F  S B=$O(^MPIVET("AM",L,B)) Q:$E(B)'=F  D
"RTN","MPICAN",35,0)
 .F C=0:0 S C=$O(^MPIVET("AM",L,B,C)) Q:'C  S ^TMP("XDRD",$J,985,C)=""
"RTN","MPICAN",36,0)
 Q
"RTN","MPICAN",37,0)
 ;
"RTN","MPICAN",38,0)
SSN ;Get mpis with same last four digits of ssn
"RTN","MPICAN",39,0)
 I XDRDCAN(XDRFL,XDRCD,13,"I")="" S ^TMP("XDRERR","BADSSN",XDRCD)="" G SSNX
"RTN","MPICAN",40,0)
 I XDRDCAN(XDRFL,XDRCD,13,"I")'?9N.E S ^TMP("XDRERR","BADSSN",XDRCD)="" G SSNX
"RTN","MPICAN",41,0)
 S XDRDCAN("SSN")=XDRDCAN(XDRFL,XDRCD,13,"I")
"RTN","MPICAN",42,0)
 S XDRDCAN("L4SSN")=$E(XDRDCAN("SSN"),6,9)
"RTN","MPICAN",43,0)
 S XDRDCAN("BL4SSN")=XDRCD
"RTN","MPICAN",44,0)
 F %=0:0 S XDRDCAN("BL4SSN")=$O(^MPIVET("BS",XDRDCAN("L4SSN"),XDRDCAN("BL4SSN"))) Q:'XDRDCAN("BL4SSN")  S ^TMP("XDRD",$J,XDRFL,XDRDCAN("BL4SSN"))=""
"RTN","MPICAN",45,0)
 ;
"RTN","MPICAN",46,0)
 ; Check SSNS with same first five digits
"RTN","MPICAN",47,0)
 ; Commented out the following line, is not specific enough for IHS
"RTN","MPICAN",48,0)
 ; but would be useful for the VA
"RTN","MPICAN",49,0)
 ;
"RTN","MPICAN",50,0)
 ;S XDRDCAN("F5SSN")=$E(XDRDCAN("SSN"),1,5)_"0000",XDRDCAN("5SSN")=XDRDCAN("F5SSN") D
"RTN","MPICAN",51,0)
 ;. F %=0:0 S XDRDCAN("5SSN")=$O(^DPT("SSN",XDRDCAN("5SSN"))) Q:XDRDCAN("5SSN")'=+XDRDCAN("5SSN")!($E(XDRDCAN("5SSN"),1,5)'=$E(XDRDCAN("SSN"),1,5))  S ^TMP("XDRDCAN",$J,XDRFL,$O(^DPT("SSN",XDRDCAN("5SSN"),"")))=""
"RTN","MPICAN",52,0)
 ;. Q
"RTN","MPICAN",53,0)
SSNX Q
"RTN","MPICAN",54,0)
 ;
"RTN","MPICAN",55,0)
DOB ;Get patients with same date of birth
"RTN","MPICAN",56,0)
 G:XDRDCAN(XDRFL,XDRCD,7,"I")="" DOBX
"RTN","MPICAN",57,0)
 S XDRDCAN("DOB")=XDRDCAN(XDRFL,XDRCD,7,"I")
"RTN","MPICAN",58,0)
 S XDRDCAN("BDOB")=XDRCD
"RTN","MPICAN",59,0)
 F %=0:0 S XDRDCAN("BDOB")=$O(^MPIVET("ADOB",XDRDCAN("DOB"),XDRDCAN("BDOB"))) Q:'XDRDCAN("BDOB")  S ^TMP("XDRD",$J,XDRFL,XDRDCAN("BDOB"))=""
"RTN","MPICAN",60,0)
 ;
"RTN","MPICAN",61,0)
 ;Transpose day of birth and get patients with same date of birth
"RTN","MPICAN",62,0)
 ;
"RTN","MPICAN",63,0)
 S XDRDCAN("TDOB")=$E(XDRDCAN("DOB"),1,5)_$E(XDRDCAN("DOB"),7)_$E(XDRDCAN("DOB"),6)
"RTN","MPICAN",64,0)
 S XDRDCAN("BDOB")=XDRCD
"RTN","MPICAN",65,0)
 F %=0:0 S XDRDCAN("BDOB")=$O(^MPIVET("ADOB",XDRDCAN("TDOB"),XDRDCAN("BDOB"))) Q:'XDRDCAN("BDOB")  S ^TMP("XDRD",$J,XDRFL,XDRDCAN("BDOB"))=""
"RTN","MPICAN",66,0)
DOBX Q
"RTN","MPICAN",67,0)
 ;
"RTN","MPICAN",68,0)
EOJ ;
"RTN","MPICAN",69,0)
 K XDRDCAN,%
"RTN","MPICAN",70,0)
 Q
"RTN","MPICANDB")
0^225^B106227
"RTN","MPICANDB",1,0)
MPICANDB ;GFT;07:20 PM  25 Nov 1996
"RTN","MPICANDB",2,0)
 S XDRCD(985,XDRCD,.03,"I")=XDRCD(985,XDRCD,7,"I")
"RTN","MPICANDB",3,0)
 S XDRCD2(985,XDRCD2,.03,"I")=XDRCD2(985,XDRCD2,7,"I")
"RTN","MPICANDB",4,0)
 G ^XDRPTDOB
"RTN","MPICANNM")
0^226^B1295483
"RTN","MPICANNM",1,0)
MPICANNM ;GFT;9MAR98
"RTN","MPICANNM",2,0)
 ;
"RTN","MPICANNM",3,0)
NM D EOJ^XDRPTN
"RTN","MPICANNM",4,0)
 S XDRDN("MATCH")=$P(XDRDTEST(XDRDTO),U,6)
"RTN","MPICANNM",5,0)
 S XDRDN("NO MATCH")=$P(XDRDTEST(XDRDTO),U,7)
"RTN","MPICANNM",6,0)
 S XDRDN=$$N("XDRCD(985)",XDRCD)
"RTN","MPICANNM",7,0)
 S XDRDN2=$$N("XDRCD2(985)",XDRCD2)
"RTN","MPICANNM",8,0)
 I $P(XDRDN,",",2,9)="" S XDRDN=$P(XDRDN,",")_", ",XDRDN2=$P(XDRDN2,",")_", " ;GFT--IF ONLY LAST NAME, TRUNCATE THE COMPARSION
"RTN","MPICANNM",9,0)
 D INIT1^XDRPTN
"RTN","MPICANNM",10,0)
 D COMPARE^XDRPTN
"RTN","MPICANNM",11,0)
 D EOJ^XDRPTN
"RTN","MPICANNM",12,0)
 Q
"RTN","MPICANNM",13,0)
 ;
"RTN","MPICANNM",14,0)
N(NAME,SUB) N X,I
"RTN","MPICANNM",15,0)
 S X="" F I=1:1:2 D
"RTN","MPICANNM",16,0)
 .I '$D(@NAME@(SUB,I,"I")) S @NAME@(SUB,I,"I")=$P($G(^MPIVET(SUB,0)),U,I+1)
"RTN","MPICANNM",17,0)
 .S X=X_U_@NAME@(SUB,I,"I")
"RTN","MPICANNM",18,0)
 Q $$FMNAME^HLFNC($E(X,2,99),U)
"RTN","MPICANSS")
0^227^B7615236
"RTN","MPICANSS",1,0)
MPICANSS ;GFT;06:38 PM  26 Nov 1996
"RTN","MPICANSS",2,0)
 ;after XDRPTSSN
"RTN","MPICANSS",3,0)
 ;
"RTN","MPICANSS",4,0)
START ;
"RTN","MPICANSS",5,0)
 I XDRCD(XDRFL,XDRCD,13,"I")=""!(XDRCD2(XDRFL,XDRCD2,13,"I")="") G END
"RTN","MPICANSS",6,0)
 D INIT
"RTN","MPICANSS",7,0)
 D COMPARE
"RTN","MPICANSS",8,0)
END D EOJ
"RTN","MPICANSS",9,0)
 Q
"RTN","MPICANSS",10,0)
 ;
"RTN","MPICANSS",11,0)
INIT ;
"RTN","MPICANSS",12,0)
 D EOJ
"RTN","MPICANSS",13,0)
 S XDRDSSN("MATCH")=$P(XDRDTEST(XDRDTO),U,6)
"RTN","MPICANSS",14,0)
 S XDRDSSN("NO MATCH")=$P(XDRDTEST(XDRDTO),U,7)
"RTN","MPICANSS",15,0)
 S XDRDSN=XDRCD(XDRFL,XDRCD,13,"I")
"RTN","MPICANSS",16,0)
 I XDRDSN'?9N.E S XDRDSN=""
"RTN","MPICANSS",17,0)
 S XDRDSN2=XDRCD2(XDRFL,XDRCD2,13,"I")
"RTN","MPICANSS",18,0)
 I XDRDSN2'?9N.E S XDRDSN=""
"RTN","MPICANSS",19,0)
 S XDRDSNF=$E(XDRDSN,1,3),XDRDSN2F=$E(XDRDSN2,1,3)
"RTN","MPICANSS",20,0)
 S XDRDSNS=$E(XDRDSN,4,5),XDRDSN2S=$E(XDRDSN2,4,5)
"RTN","MPICANSS",21,0)
 S XDRDSNT=$E(XDRDSN,6,9),XDRDSN2T=$E(XDRDSN2,6,9)
"RTN","MPICANSS",22,0)
 Q
"RTN","MPICANSS",23,0)
 ;
"RTN","MPICANSS",24,0)
COMPARE ;
"RTN","MPICANSS",25,0)
 I XDRDSN=""!(XDRDSN2="") S XDRD("TEST SCORE")=0 G COMPAREX
"RTN","MPICANSS",26,0)
 I XDRDSN'=""&(XDRDSN2="") S XDRDSSN("MATCH")=0 G COMPAREX
"RTN","MPICANSS",27,0)
 ; SKIP SSN'S IF THEY ARE PSEUDOS
"RTN","MPICANSS",28,0)
 I $E(XDRDSN,10)="P"!($E(XDRDSN2,10)="P") G COMPAREX
"RTN","MPICANSS",29,0)
 ; ADDED LOGIC TO DETERMINE IF ONLY ONE DIGIT IS CHANGED, OR TWO
"RTN","MPICANSS",30,0)
 ; DIGITS SWITCHED
"RTN","MPICANSS",31,0)
 ;   THIS IS ASSIGNED THE MAXIMUM MATCH VALUE, AND LAST 4, ETC LESS.
"RTN","MPICANSS",32,0)
 ;
"RTN","MPICANSS",33,0)
 N N
"RTN","MPICANSS",34,0)
 S N=0 D  I N<2 S XDRD("TEST SCORE")=XDRDSSN("MATCH") G COMPAREX
"RTN","MPICANSS",35,0)
 .N I,XVAL,XVAL2
"RTN","MPICANSS",36,0)
 .F I=1:1:9 S XVAL($E(XDRDSN,I))=$G(XVAL($E(XDRDSN,I)))+1,XVAL2($E(XDRDSN2,I))=$G(XVAL2($E(XDRDSN2,I)))+1
"RTN","MPICANSS",37,0)
 .S I="" F  S I=$O(XVAL(I)) Q:I=""  S N=N+$S(XVAL(I)>$G(XVAL2(I)):XVAL(I)-$G(XVAL2(I)),1:0)
"RTN","MPICANSS",38,0)
 .I N<2 D
"RTN","MPICANSS",39,0)
 ..S N=0
"RTN","MPICANSS",40,0)
 ..F I=1:1:9 I $E(XDRDSN,I)'=$E(XDRDSN2,I) S N=N+1
"RTN","MPICANSS",41,0)
 ;CHECK TO SEE IF LAST FOUR MATCH OR TWO OF THREE PARTS MATCH
"RTN","MPICANSS",42,0)
 I XDRDSNT=XDRDSN2T D  G COMPAREX
"RTN","MPICANSS",43,0)
 .S XDRD("TEST SCORE")=.6*XDRDSSN("MATCH")
"RTN","MPICANSS",44,0)
 .I $P($G(^MPIVET(XDRCD,0)),U,2,6)=$P($G(^MPIVET(XDRCD2,0)),U,2,6) D
"RTN","MPICANSS",45,0)
 ..S XDRD("TEST SCORE")=.8*XDRDSSN("MATCH")
"RTN","MPICANSS",46,0)
 S XDRDSSN("CNT")=0
"RTN","MPICANSS",47,0)
 I XDRDSNF=XDRDSN2F S XDRDSSN("CNT")=XDRDSSN("CNT")+1
"RTN","MPICANSS",48,0)
 I XDRDSNS=XDRDSN2S S XDRDSSN("CNT")=XDRDSSN("CNT")+1
"RTN","MPICANSS",49,0)
 I XDRDSSN("CNT")>1 S XDRD("TEST SCORE")=XDRDSSN("MATCH")*.4 K XDRDSSN("CNT") G COMPAREX
"RTN","MPICANSS",50,0)
 ;
"RTN","MPICANSS",51,0)
 ;CHECK POSITIONAL RELATIONSHIP OF LAST FOUR DIGITS OF SSN'S
"RTN","MPICANSS",52,0)
 S XDRDSSN("PCNT")=0
"RTN","MPICANSS",53,0)
 F XDRDSSN("I")=1:1:4 Q:(XDRDSSN("PCNT")>2)  I $E(XDRDSNT,XDRDSSN("I"))'=$E(XDRDSN2T,XDRDSSN("I")) S XDRDSSN("PCNT")=XDRDSSN("PCNT")+1
"RTN","MPICANSS",54,0)
 I XDRDSSN("PCNT")'>2,XDRDSSN("CNT")>0 S XDRD("TEST SCORE")=XDRDSSN("MATCH")*.2 G COMPAREX
"RTN","MPICANSS",55,0)
 ;
"RTN","MPICANSS",56,0)
 ;ASSIGN NEGATIVE VALUE FOR NO SSN MATCH
"RTN","MPICANSS",57,0)
 S XDRD("TEST SCORE")=XDRDSSN("NO MATCH")
"RTN","MPICANSS",58,0)
COMPAREX ;
"RTN","MPICANSS",59,0)
 Q
"RTN","MPICANSS",60,0)
 ;
"RTN","MPICANSS",61,0)
EOJ ;
"RTN","MPICANSS",62,0)
 K XDRDSN,XDRDSN2,XDRDSNF,XDRDSN2F,XDRDSNS,XDRDSN2S,XDRDSNT,XDRDSN2T
"RTN","MPICANSS",63,0)
 K XDRDSSN
"RTN","MPICANSS",64,0)
 Q
"RTN","MPICPPF")
0^31^B6667053
"RTN","MPICPPF",1,0)
MPICPPF ;GRR/PSI-CONTRACTOR-CHANGE PATIENT'S CMOR ;18 Dec 1996
"RTN","MPICPPF",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**14,18,23**;30 Apr 99
"RTN","MPICPPF",3,0)
 ;
"RTN","MPICPPF",4,0)
 ;14-CHANGES TO USE PAULETTE'S API TO UPDATE CMOR AND CLEAN UP VARIABLES
"RTN","MPICPPF",5,0)
 ;18 - CHANGES TO BROADCAST CHANGE OF CMOR BACK OUT TO EVERYONE
"RTN","MPICPPF",6,0)
EN ;
"RTN","MPICPPF",7,0)
 N I,ERRHL,HLENTRY,MPIPID,MPIPV1,MPIMRG,MPIPICN,MPINPPF,MPIFACN,ARR,MSG,NMSG,CNT,OLDC,MPIFAC,MPISN,FROM
"RTN","MPICPPF",8,0)
 K ^TMP("HLS",$J),ERRHL
"RTN","MPICPPF",9,0)
 S HLENTRY="MPI"
"RTN","MPICPPF",10,0)
 S (MPIPID,MPIPV1,MPIMRG)=""
"RTN","MPICPPF",11,0)
 F I=1:1 Q:'$D(MPITMP(I))  D
"RTN","MPICPPF",12,0)
 .S MSG=MPITMP(I)
"RTN","MPICPPF",13,0)
 .I $E(MPITMP(I),1,3)="MSH" D MSH^MPIA31(.ARR,MSG) Q
"RTN","MPICPPF",14,0)
 .I $E(MPITMP(I),1,3)="EVN" S NMSG=$P(MSG,HL("FS"),7),^TMP("HLS",$J,2)=MPITMP(I) Q
"RTN","MPICPPF",15,0)
 .I $E(MPITMP(I),1,3)="PID" S MPIPID=MPITMP(I),^TMP("HLS",$J,3)=MPITMP(I) Q
"RTN","MPICPPF",16,0)
 .I $E(MPITMP(I),1,3)="PD1" D PD1^MPIA31(.ARR,MSG) S ^TMP("HLS",$J,4)=MPITMP(I) Q
"RTN","MPICPPF",17,0)
 .I $E(MPITMP(I),1,3)="PV1" S MPIPV1=MPITMP(I),^TMP("HLS",$J,5)=MPITMP(I) Q
"RTN","MPICPPF",18,0)
 S MPIPICN=+$P(MPIPID,HL("FS"),3)
"RTN","MPICPPF",19,0)
 S MPINPPF=$P(MPIPV1,HL("FS"),4)
"RTN","MPICPPF",20,0)
 I +MPINPPF<1 S ERRHL="Change of CMOR with no site, 4TH piece PV1 segment" D EXCEPT^MPIUTL2(MPIPICN,ERRHL) K MPITMP Q
"RTN","MPICPPF",21,0)
 S MPIFACN=$$IEN^XUAF4(MPINPPF)
"RTN","MPICPPF",22,0)
 I MPIFACN<0 S ERRHL="Lookup on "_MPINPPF_" failed in Institution file" D EXCEPT^MPIUTL2(MPIPICN,ERRHL) K MPITMP Q
"RTN","MPICPPF",23,0)
 N UPD S ARR(16)=MPINPPF
"RTN","MPICPPF",24,0)
 S UPD=$$UPDATE^MPIUTL4(MPIPICN,$P(HL("SFN"),$E(HL("ECH"),1)),.ARR)
"RTN","MPICPPF",25,0)
 I +UPD<0 D EXCEPT^MPIUTL2(MPIPICN,$P(UPD,"^",2),234)
"RTN","MPICPPF",26,0)
 K MPITMP
"RTN","MPICPPF",27,0)
 I NMSG'="" D
"RTN","MPICPPF",28,0)
 .S OLDC=$P(HL("SFN"),$E(HL("ECH"),1)),FROM=$G(HL("SFN"))
"RTN","MPICPPF",29,0)
 .K HL
"RTN","MPICPPF",30,0)
 .D INIT^HLFNC2("MPIF CMOR REQUEST",.HL)
"RTN","MPICPPF",31,0)
 .I $O(HL(""))="" S ERRHL="-1^"_$P(HL,U,2) Q
"RTN","MPICPPF",32,0)
 .;GET LINKS
"RTN","MPICPPF",33,0)
 .K HLL("LINKS")
"RTN","MPICPPF",34,0)
 .S CNT=1,MPIFAC=0 F  S MPIFAC=$O(^MPI(985.5,"AM",MPIPICN,MPIFAC)) Q:'MPIFAC  D
"RTN","MPICPPF",35,0)
 ..S MPISN=$$STA^XUAF4(MPIFAC)
"RTN","MPICPPF",36,0)
 ..Q:OLDC=MPISN
"RTN","MPICPPF",37,0)
 ..K MPIHL,MPILK D LINK^HLUTIL3(MPIFAC,.MPIHL)
"RTN","MPICPPF",38,0)
 ..I $O(MPIHL(0))="" D ERROR^MPIA08(.ARR,.HL,"-1^No logical link for station# "_MPISN,224) Q
"RTN","MPICPPF",39,0)
 ..S MPILK=$O(MPIHL(0))
"RTN","MPICPPF",40,0)
 ..S HLL("LINKS",CNT)="MPIF CMOR RSLT^"_$P(MPIHL(MPILK),"^"),CNT=CNT+1
"RTN","MPICPPF",41,0)
 .I FROM'="" S MPIHL("SUBSCRIBER")="^^"_FROM
"RTN","MPICPPF",42,0)
 .K HLRESLT D GENERATE^HLMA("MPIF CMOR REQUEST","GM",1,.HLRESLT,"",.MPIHL)
"RTN","MPICPPF",43,0)
 .K ^TMP("HLS",$J)
"RTN","MPICPPF",44,0)
 Q
"RTN","MPICPPF",45,0)
 ;
"RTN","MPIDAS")
0^32^B32324541
"RTN","MPIDAS",1,0)
MPIDAS ;BP/CMC ; MPI SEARCH FOR ANOMALIES IN MPI FIELDS ; 1/28/02
"RTN","MPIDAS",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**P**;30 Apr 99
"RTN","MPIDAS",3,0)
 ;
"RTN","MPIDAS",4,0)
 ;
"RTN","MPIDAS",5,0)
NAME ; Ask for string to be found as part of the name (all components used)
"RTN","MPIDAS",6,0)
 N DIR,Y,X,STRING
"RTN","MPIDAS",7,0)
 S DIR("A")="Enter Name Search string (i.e. CNH, inelig)",DIR("?")="Answer with string 3-30 characters, it is not case sensative",DIR(0)="F:3:30" D ^DIR
"RTN","MPIDAS",8,0)
 Q:Y="^"
"RTN","MPIDAS",9,0)
 I Y?." "!(Y="") W !,"Must be a value other than spaces or null" G NAME
"RTN","MPIDAS",10,0)
 S STRING=Y
"RTN","MPIDAS",11,0)
 I $D(^XTMP("MPI","SEARCH "_STRING)) S DIR("A")="There wass a search for this same string on record, would you like to see these results? ",DIR("B")="YES",DIR(0)="YAO" D ^DIR Q:Y="^"!(Y="")
"RTN","MPIDAS",12,0)
 I $D(^XTMP("MPI","SEARCH "_STRING)),Y=1 D REPORT(STRING) Q
"RTN","MPIDAS",13,0)
 K ^XTMP("MPI","SEARCH "_STRING)
"RTN","MPIDAS",14,0)
 ;W !,"SEARCHING....PLEASE BE PATIENT...."
"RTN","MPIDAS",15,0)
 S ZTRTN="DOIT^MPIDAS",ZTDESC="SEARCHING FOR NAMES W/STRING= "_STRING
"RTN","MPIDAS",16,0)
 S ZTIO="",ZTSAVE("STRING")=STRING
"RTN","MPIDAS",17,0)
 S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIDAS",18,0)
 D ^%ZTLOAD
"RTN","MPIDAS",19,0)
 Q
"RTN","MPIDAS",20,0)
DOIT ;
"RTN","MPIDAS",21,0)
 N PCNM,DIR,Y,NAME,ICN,PC,CNT,ICN,TOTICN,X
"RTN","MPIDAS",22,0)
 S (CNT,ICN,TOTICN)=0
"RTN","MPIDAS",23,0)
 F  S ICN=$O(^MPIVET(ICN)) Q:'ICN  D
"RTN","MPIDAS",24,0)
 .S TOTICN=TOTICN+1
"RTN","MPIDAS",25,0)
 .I $E(IOST,1,2)="C-" I '(TOTICN#50000) W !,TOTICN
"RTN","MPIDAS",26,0)
 .;look for STRING in name
"RTN","MPIDAS",27,0)
 .S NAME=$P($G(^MPIVET(ICN,0)),"^",2,6)
"RTN","MPIDAS",28,0)
 .S PC=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIDAS",29,0)
 .I NAME[STRING D
"RTN","MPIDAS",30,0)
 ..S CNT=CNT+1
"RTN","MPIDAS",31,0)
 ..S PCNM=$P($$NS^XUAF4(PC),"^")
"RTN","MPIDAS",32,0)
 ..I $D(^XTMP("MPI","SEARCH "_STRING,PCNM)) S ^XTMP("MPI","SEARCH "_STRING,PCNM)=^XTMP("MPI","SEARCH "_STRING,PCNM)+1
"RTN","MPIDAS",33,0)
 ..I '$D(^XTMP("MPI","SEARCH "_STRING,PCNM)) S ^XTMP("MPI","SEARCH "_STRING,PCNM)=1,^XTMP("MPI","SEARCH "_STRING,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^SEARCH FOR STRING "_STRING
"RTN","MPIDAS",34,0)
 ..S ^XTMP("MPI","SEARCH "_STRING,PCNM,ICN)=NAME_"^"_$P($G(^MPIVET(ICN,0)),"^",14)_"^"_$P($G(^MPIVET(ICN,0)),"^",8)
"RTN","MPIDAS",35,0)
 S ^XTMP("MPI","SEARCH "_STRING,"TOTAL")=CNT
"RTN","MPIDAS",36,0)
 I $E(IOST,1,2)="C-" D REPORT("SEARCH "_STRING)
"RTN","MPIDAS",37,0)
 Q
"RTN","MPIDAS",38,0)
 ;
"RTN","MPIDAS",39,0)
DOB ; FINDS AND REPORTS ALL ENTRIES MISSING A DOB (NOT INACTIVATED)
"RTN","MPIDAS",40,0)
 N ICN,NODE,CNT,PC,PCNM,TOTICN,DIR,X,Y
"RTN","MPIDAS",41,0)
 S (CNT,ICN,TOTICN)=0
"RTN","MPIDAS",42,0)
 I $D(^XTMP("MPI","MISSING DOB")) S DIR("A")="There is a search on file for missing DOB, would you like to see these results? ",DIR("B")="YES",DIR(0)="YAO" D ^DIR Q:Y="^"!(Y="")
"RTN","MPIDAS",43,0)
 I $D(^XTMP("MPI","MISSING DOB")),Y=1 D REPORT("MISSING DOB") Q
"RTN","MPIDAS",44,0)
 K ^XTMP("MPI","MISSING DOB")
"RTN","MPIDAS",45,0)
 W !,"SEARCHING....PLEASE BE PATIENT...."
"RTN","MPIDAS",46,0)
 F  S ICN=$O(^MPIVET(ICN)) Q:'ICN  D
"RTN","MPIDAS",47,0)
 .S TOTICN=TOTICN+1
"RTN","MPIDAS",48,0)
 .I $E(IOST,1,2)="C-" I '(TOTICN#50000) W !,TOTICN
"RTN","MPIDAS",49,0)
 .;look for entries missing DOB
"RTN","MPIDAS",50,0)
 .Q:$P($G(^MPIVET(ICN,0)),"^",2)=""
"RTN","MPIDAS",51,0)
 .S PC=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIDAS",52,0)
 .I $P($G(^MPIVET(ICN,0)),"^",8)=""!($P($G(^MPIVET(ICN,0)),"^",8)?." ") D
"RTN","MPIDAS",53,0)
 ..S CNT=CNT+1
"RTN","MPIDAS",54,0)
 ..S NAME=$P($G(^MPIVET(ICN,0)),"^",2,4)
"RTN","MPIDAS",55,0)
 ..S PCNM=$P($$NS^XUAF4(PC),"^")
"RTN","MPIDAS",56,0)
 ..I $D(^XTMP("MPI","MISSING DOB",PCNM)) S ^XTMP("MPI","MISSING DOB",PCNM)=^XTMP("MPI","MISSING DOB",PCNM)+1
"RTN","MPIDAS",57,0)
 ..I '$D(^XTMP("MPI","MISSING DOB",PCNM)) S ^XTMP("MPI","MISSING DOB",PCNM)=1,^XTMP("MPI","MISSING DOB",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^SEARCH FOR MISSING DOB"
"RTN","MPIDAS",58,0)
 ..S ^XTMP("MPI","MISSING DOB",PCNM,ICN)=NAME_"^"_$P($G(^MPIVET(ICN,0)),"^",14)_"^"_$P($G(^MPIVET(ICN,0)),"^",8)
"RTN","MPIDAS",59,0)
 S ^XTMP("MPI","MISSING DOB","TOTAL")=CNT
"RTN","MPIDAS",60,0)
 I $E(IOST,1,2)="C-" D REPORT("MISSING DOB")
"RTN","MPIDAS",61,0)
 Q
"RTN","MPIDAS",62,0)
SSN ; FINDS AND REPORTS ALL ENTRIES MISSING SSN (NOT INACTIVATED)
"RTN","MPIDAS",63,0)
 N ICN,NODE,CNT,PC,PCNM,TOTICN,DIR,Y,X
"RTN","MPIDAS",64,0)
 S (CNT,ICN,TOTICN)=0
"RTN","MPIDAS",65,0)
 I $D(^XTMP("MPI","MISSING SSN")) D
"RTN","MPIDAS",66,0)
 .S DIR("A")="There is a search on file for missing SSN, would you like to see these results? ",DIR("B")="YES",DIR(0)="YAO"
"RTN","MPIDAS",67,0)
 .D ^DIR
"RTN","MPIDAS",68,0)
 I $D(^XTMP("MPI","MISSING SSN")) Q:Y="^"!(Y="")
"RTN","MPIDAS",69,0)
 I $D(^XTMP("MPI","MISSING SSN")),Y=1 D REPORT("MISSING SSN") Q
"RTN","MPIDAS",70,0)
 K ^XTMP("MPI","MISSING SSN")
"RTN","MPIDAS",71,0)
 W !,"SEARCHING....PLEASE BE PATIENT...."
"RTN","MPIDAS",72,0)
 F  S ICN=$O(^MPIVET(ICN)) Q:'ICN  D
"RTN","MPIDAS",73,0)
 .S TOTICN=TOTICN+1
"RTN","MPIDAS",74,0)
 .I $E(IOST,1,2)="C-" I '(TOTICN#50000) W !,TOTICN
"RTN","MPIDAS",75,0)
 .;look for entries missing SSN
"RTN","MPIDAS",76,0)
 .Q:$P($G(^MPIVET(ICN,0)),"^",2)=""
"RTN","MPIDAS",77,0)
 .S PC=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIDAS",78,0)
 .I $P($G(^MPIVET(ICN,0)),"^",14)=""!($P($G(^MPIVET(ICN,0)),"^",14)?." ") D
"RTN","MPIDAS",79,0)
 ..S CNT=CNT+1
"RTN","MPIDAS",80,0)
 ..S NAME=$P($G(^MPIVET(ICN,0)),"^",2,4)
"RTN","MPIDAS",81,0)
 ..S PCNM=$P($$NS^XUAF4(PC),"^")
"RTN","MPIDAS",82,0)
 ..I $D(^XTMP("MPI","MISSING SSN",PCNM)) S ^XTMP("MPI","MISSING SSB",PCNM)=^XTMP("MPI","MISSING SSN",PCNM)+1
"RTN","MPIDAS",83,0)
 ..I '$D(^XTMP("MPI","MISSING SSN",PCNM)) S ^XTMP("MPI","MISSING SSN",PCNM)=1,^XTMP("MPI","MISSING SSN",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^SEARCH FOR MISSING SSN"
"RTN","MPIDAS",84,0)
 ..S ^XTMP("MPI","MISSING SSN",PCNM,ICN)=NAME_"^"_$P($G(^MPIVET(ICN,0)),"^",14)_"^"_$P($G(^MPIVET(ICN,0)),"^",8)
"RTN","MPIDAS",85,0)
 S ^XTMP("MPI","MISSING SSN","TOTAL")=CNT
"RTN","MPIDAS",86,0)
 D REPORT("MISSING SSN")
"RTN","MPIDAS",87,0)
 Q
"RTN","MPIDAS",88,0)
 ;
"RTN","MPIDAS",89,0)
REPORT(ST) ;
"RTN","MPIDAS",90,0)
 N NODE,SITE,ICN,CNT,PDOB,SSN,NAME,CMOR,LINE,X
"RTN","MPIDAS",91,0)
 S (LINE,CNT)=0
"RTN","MPIDAS",92,0)
 I '$D(^XTMP("MPI",ST)) W !,"No such search" Q
"RTN","MPIDAS",93,0)
 I $G(^XTMP("MPI",ST,"TOTAL"))=0 W !,"No enties for search ",ST," found" Q
"RTN","MPIDAS",94,0)
 S SITE=0
"RTN","MPIDAS",95,0)
 F  S SITE=$O(^XTMP("MPI",ST,SITE)) Q:SITE=""  D
"RTN","MPIDAS",96,0)
 .Q:SITE="TOTAL"
"RTN","MPIDAS",97,0)
 .S ICN="",LINE=0
"RTN","MPIDAS",98,0)
 .W @IOF
"RTN","MPIDAS",99,0)
 .W !,"CMOR: ",SITE
"RTN","MPIDAS",100,0)
 .F  S ICN=$O(^XTMP("MPI",ST,SITE,ICN)) Q:ICN=""  D
"RTN","MPIDAS",101,0)
 ..S NODE=$G(^XTMP("MPI",ST,SITE,ICN))
"RTN","MPIDAS",102,0)
 ..S NAME=$P(NODE,"^",1,3),SSN=$P(NODE,"^",4),Y=$P(NODE,"^",5) D DD^%DT S PDOB=Y
"RTN","MPIDAS",103,0)
 ..S NAME=$P(NAME,"^")_","_$P(NAME,"^",2)
"RTN","MPIDAS",104,0)
 ..I $P(NAME,"^",3)'="" S NAME=NAME_" "_$P(NAME,"^",3)
"RTN","MPIDAS",105,0)
 ..I $P(NAME,"^",4)'="" S NAME=NAME_" "_$P(NAME,"^",4)
"RTN","MPIDAS",106,0)
 ..W !!,?5,"ICN: ",ICN,!,?10,"Name: ",NAME,!,?10,"SSN: ",SSN,?30,"DOB: ",PDOB
"RTN","MPIDAS",107,0)
 ..S LINE=LINE+6
"RTN","MPIDAS",108,0)
 ..I LINE>20 D PROMPT S LINE=0 W @IOF
"RTN","MPIDAS",109,0)
 .W !!,?5,SITE," TOTAL: ",$G(^XTMP("MPI",ST,SITE)),!
"RTN","MPIDAS",110,0)
 .D PROMPT
"RTN","MPIDAS",111,0)
 W !!!,"TOTAL: ",$G(^XTMP("MPI",ST,"TOTAL")),!!
"RTN","MPIDAS",112,0)
 D PROMPT
"RTN","MPIDAS",113,0)
 Q
"RTN","MPIDAS",114,0)
PROMPT ;
"RTN","MPIDAS",115,0)
 N DIR
"RTN","MPIDAS",116,0)
 S DIR("A")="Hit the Enter key, to Continue "
"RTN","MPIDAS",117,0)
 S DIR(0)="EA"
"RTN","MPIDAS",118,0)
 D ^DIR
"RTN","MPIDAS",119,0)
 Q
"RTN","MPIDIRQ")
0^33^B1977895
"RTN","MPIDIRQ",1,0)
MPIDIRQ(MPIIN,MPIOUT) ;BIOFO/DLR - DIRECT REALTIME QUERY TO MPI [ 01/30/97  11:27 AM ]
"RTN","MPIDIRQ",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**19,24**;30 Apr 99
"RTN","MPIDIRQ",3,0)
EN K MPITMP,@MPIOUT,ERRHL
"RTN","MPIDIRQ",4,0)
 N MPIMSGT,MPILOC,GBL,MPIN
"RTN","MPIDIRQ",5,0)
 S GBL="^TMP(""MPI"",$J)"
"RTN","MPIDIRQ",6,0)
 S U="^" D NOW^%DTC S DT=%\1
"RTN","MPIDIRQ",7,0)
 S U="^",HL("FS")=$E(@MPIIN@(1),4),HL("ECH")=$P(@MPIIN@(1),HL("FS"),2)
"RTN","MPIDIRQ",8,0)
 S MPIN="" F  S MPIN=$O(@MPIIN@(MPIN)) Q:MPIN'>0  S MPITMP(MPIN)=@MPIIN@(MPIN)
"RTN","MPIDIRQ",9,0)
 S MPIDIRQ=1
"RTN","MPIDIRQ",10,0)
 I $E(MPITMP(1),1,3)'="MSH" S @MPIOUT@(1)="Invalid data passed, MSH not first data encountered!" S ERRHL="INVALID DATA" K MPIDIRQ Q
"RTN","MPIDIRQ",11,0)
 S MPIMSGT=$P($P(MPITMP(1),HL("FS"),9),$E(HL("ECH")),2)
"RTN","MPIDIRQ",12,0)
 S MPILOC=$P(MPITMP(1),HL("FS"),4)
"RTN","MPIDIRQ",13,0)
 D HLLOG^MPIMHL($G(MPIMSGT)_"DC",MPILOC)
"RTN","MPIDIRQ",14,0)
 I MPIMSGT="Q02" D EN1^MPIUWVTQ
"RTN","MPIDIRQ",15,0)
 ;I MPIMSGT="A28" D ^MPIPATAR ;**24
"RTN","MPIDIRQ",16,0)
 I $D(ERRHL) K MPIDIRQ Q
"RTN","MPIDIRQ",17,0)
 S MPIN="" F  S MPIN=$O(@GBL@(MPIN)) Q:MPIN'>0  S @MPIOUT@(MPIN)=@GBL@(MPIN)
"RTN","MPIDIRQ",18,0)
 K MPIDIRQ
"RTN","MPIDIRQ",19,0)
 K @GBL
"RTN","MPIDIRQ",20,0)
 Q
"RTN","MPIEU")
0^235^B33461515
"RTN","MPIEU",1,0)
MPIEU ;ALB/CJM - MPI/PD NDBI MERGE UTILITY (CONTINUED) ;08/27/99
"RTN","MPIEU",2,0)
 ;;1.0; MPI AUSTIN ;**32**;30 Apr 99
"RTN","MPIEU",3,0)
 ;
"RTN","MPIEU",4,0)
GETCMOR(ICN) ;
"RTN","MPIEU",5,0)
 ;Descripition: Given the patient's ICN, returns the CMOR.
"RTN","MPIEU",6,0)
 ;
"RTN","MPIEU",7,0)
 ;Input:
"RTN","MPIEU",8,0)
 ;   ICN - patient ICN, pointer to the MPI Veteran/Client file
"RTN","MPIEU",9,0)
 ;Output:
"RTN","MPIEU",10,0)
 ;  Function Value:  The patient's CMOR, a pointer to the Institution file. Returns "" if there is no CMOR for that ICN.
"RTN","MPIEU",11,0)
 ;
"RTN","MPIEU",12,0)
 Q:'$G(ICN) ""
"RTN","MPIEU",13,0)
 Q $P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIEU",14,0)
 ;
"RTN","MPIEU",15,0)
SETCMOR(ICN,INSTIEN,ERROR) ;
"RTN","MPIEU",16,0)
 ;Descripition: Given the patient ICN and a pointer to the institution,
"RTN","MPIEU",17,0)
 ;file, changes the CMOR in the MPI Patient/Client file.
"RTN","MPIEU",18,0)
 ;
"RTN","MPIEU",19,0)
 ;Input:
"RTN","MPIEU",20,0)
 ;   ICN - patient ICN, pointer to the MPI Veteran/Client file
"RTN","MPIEU",21,0)
 ;   INSTIEN - pointer to the institution file
"RTN","MPIEU",22,0)
 ;Output:
"RTN","MPIEU",23,0)
 ;   Function Value - Returns 1 on success, 0 on failure
"RTN","MPIEU",24,0)
 ;   ERROR - (optional,pass by refernce) On failure returns a message.
"RTN","MPIEU",25,0)
 ;
"RTN","MPIEU",26,0)
 N RET,DATA
"RTN","MPIEU",27,0)
 I ('$G(ICN))!('$D(^MPIVET(+$G(ICN),0))) S ERROR="MPI Veteran/Client Not Valid" Q 0
"RTN","MPIEU",28,0)
 I ('$G(INSTIEN))!('$D(^DIC(4,+$G(INSTIEN),0))) S ERROR="Institution Not Valid" Q 0
"RTN","MPIEU",29,0)
 ;
"RTN","MPIEU",30,0)
 L +^MPIVET(ICN):10
"RTN","MPIEU",31,0)
 S DATA(16)=INSTIEN
"RTN","MPIEU",32,0)
 S RET=$$UPD(985,ICN,.DATA,.ERROR)
"RTN","MPIEU",33,0)
 L -^MPIVET(ICN)
"RTN","MPIEU",34,0)
 I 'RET S ERROR="Fileman Failed: "_$G(ERROR)
"RTN","MPIEU",35,0)
 Q RET
"RTN","MPIEU",36,0)
 ;
"RTN","MPIEU",37,0)
GETTF(ICN,INSTIEN,TF) ;
"RTN","MPIEU",38,0)
 ;Descripition: Given the patient ICN and a pointer to the institution,
"RTN","MPIEU",39,0)
 ;file, returns as the function value a pointer to the MPI Facility
"RTN","MPIEU",40,0)
 ;Association file if that station is a treating facility, "" otherwise.
"RTN","MPIEU",41,0)
 ;If the optional parameter TF is passed it, TF() will be returned
"RTN","MPIEU",42,0)
 ;with the data contained in that record.
"RTN","MPIEU",43,0)
 ;
"RTN","MPIEU",44,0)
 ;Input:
"RTN","MPIEU",45,0)
 ;   ICN - patient ICN, pointer to the MPI Veteran/Client file
"RTN","MPIEU",46,0)
 ;   INSTIEN - pointer to the institution file
"RTN","MPIEU",47,0)
 ;Output:
"RTN","MPIEU",48,0)
 ;   Function Value - pointer to the MPI Facility Association file if
"RTN","MPIEU",49,0)
 ;        the facility is a treating facility, "" otherwise.
"RTN","MPIEU",50,0)
 ;   TF() - (optional) (pass by refernce) Defined if the facility is a treating facility
"RTN","MPIEU",51,0)
 ;      ("IEN") - ien of the entry
"RTN","MPIEU",52,0)
 ;      ("ICN") - the ICN
"RTN","MPIEU",53,0)
 ;      ("INSTIEN") - ien of the institution
"RTN","MPIEU",54,0)
 ;
"RTN","MPIEU",55,0)
 K TF
"RTN","MPIEU",56,0)
 Q:'$G(ICN) ""
"RTN","MPIEU",57,0)
 Q:'$G(INSTIEN) ""
"RTN","MPIEU",58,0)
 ;
"RTN","MPIEU",59,0)
 S TF("IEN")=$O(^MPI(985.5,"AM",ICN,INSTIEN,0))
"RTN","MPIEU",60,0)
 S TF("ICN")=ICN,TF("INST")=INSTIEN
"RTN","MPIEU",61,0)
 Q TF("IEN")
"RTN","MPIEU",62,0)
 ;
"RTN","MPIEU",63,0)
ADDTF(ICN,INSTIEN,ERROR) ;
"RTN","MPIEU",64,0)
 ;Descripition: Given the patient ICN and a pointer to the institution,
"RTN","MPIEU",65,0)
 ;file, adds a new entry to the MPI Facility Association file and returns
"RTN","MPIEU",66,0)
 ; as the function value a pointer to the new entry or "" if unsuccessful
"RTN","MPIEU",67,0)
 ;If the entry already exists it returns a pointer to the existing entry.
"RTN","MPIEU",68,0)
 ;Input:
"RTN","MPIEU",69,0)
 ;   ICN - patient ICN, pointer to the MPI Veteran/Client file
"RTN","MPIEU",70,0)
 ;   INSTIEN - pointer to the institution file
"RTN","MPIEU",71,0)
 ;Output:
"RTN","MPIEU",72,0)
 ;   Function Value - Pointer to the MPI Facility Association file if
"RTN","MPIEU",73,0)
 ;        a new entry is added or already exists, "" otherwise.
"RTN","MPIEU",74,0)
 ;   ERROR - (optional,pass by refernce) On failure returns a message.
"RTN","MPIEU",75,0)
 ;
"RTN","MPIEU",76,0)
 N DA,DATA
"RTN","MPIEU",77,0)
 I ('$G(ICN))!('$D(^MPIVET(+$G(ICN),0))) S ERROR="MPI Veteran/Client Not Valid" Q ""
"RTN","MPIEU",78,0)
 I ('$G(INSTIEN))!('$D(^DIC(4,+$G(INSTIEN),0))) S ERROR="Institution Not Valid" Q ""
"RTN","MPIEU",79,0)
 S DA=$$GETTF(ICN,INSTIEN)
"RTN","MPIEU",80,0)
 Q:DA DA
"RTN","MPIEU",81,0)
 ;
"RTN","MPIEU",82,0)
 ;L +^MPI(985.5):10 ;**32 dbs call performs locking
"RTN","MPIEU",83,0)
 S DATA(.01)=INSTIEN
"RTN","MPIEU",84,0)
 S DATA(1)=ICN
"RTN","MPIEU",85,0)
 S DA=$$ADD(985.5,,.DATA,.ERROR)
"RTN","MPIEU",86,0)
 ;L -^MPI(985.5) ;**32 dbs call performs locking
"RTN","MPIEU",87,0)
 I 'DA S ERROR="Fileman Failed: "_$G(ERROR)
"RTN","MPIEU",88,0)
 Q DA
"RTN","MPIEU",89,0)
 ;
"RTN","MPIEU",90,0)
DELETETF(IEN) ;
"RTN","MPIEU",91,0)
 ;Description: Given the ien of an entry in the MPI Facility Association
"RTN","MPIEU",92,0)
 ;file, this routine deletes that record.
"RTN","MPIEU",93,0)
 N DIK,DA
"RTN","MPIEU",94,0)
 Q:'$G(IEN)
"RTN","MPIEU",95,0)
 S DIK="^MPI(985.5,"
"RTN","MPIEU",96,0)
 S DA=IEN
"RTN","MPIEU",97,0)
 D ^DIK
"RTN","MPIEU",98,0)
 Q
"RTN","MPIEU",99,0)
STATNUM(IEN) ;
"RTN","MPIEU",100,0)
 ;Description:  Given an ien to the Institution file, returns as the function value the station number.  Returns "" on failure.
"RTN","MPIEU",101,0)
 ;
"RTN","MPIEU",102,0)
 Q:'$G(IEN) ""
"RTN","MPIEU",103,0)
 ;
"RTN","MPIEU",104,0)
 N STATION
"RTN","MPIEU",105,0)
 Q:'$D(^DIC(4,IEN,0)) ""
"RTN","MPIEU",106,0)
 S STATION=$P($$NNT^XUAF4(IEN),"^",2)
"RTN","MPIEU",107,0)
 Q $S(+STATION:STATION,1:"")
"RTN","MPIEU",108,0)
 ;
"RTN","MPIEU",109,0)
STATIEN(STATNUM) ;
"RTN","MPIEU",110,0)
 ;Description:  Given a station number, returns as the function value a pointer to the Institution file.  Returns "" on failure.
"RTN","MPIEU",111,0)
 ;
"RTN","MPIEU",112,0)
 Q:'$L($G(STATNUM)) ""
"RTN","MPIEU",113,0)
 Q $O(^DIC(4,"D",STATNUM,0))
"RTN","MPIEU",114,0)
 ;
"RTN","MPIEU",115,0)
UPD(FILE,RGDA,DATA,ERROR) ;File data into an existing record.
"RTN","MPIEU",116,0)
 ; Input:
"RTN","MPIEU",117,0)
 ;   FILE - File or sub-file number
"RTN","MPIEU",118,0)
 ;   RGDA - New name for traditional DA array, with same meaning.
"RTN","MPIEU",119,0)
 ;            Pass by reference.
"RTN","MPIEU",120,0)
 ;   DATA - Data array to file (pass by reference)
"RTN","MPIEU",121,0)
 ;          Format: DATA(<field #>)=<value>
"RTN","MPIEU",122,0)
 ;
"RTN","MPIEU",123,0)
 ; Output:
"RTN","MPIEU",124,0)
 ;  Function Value -     0=error and 1=no error
"RTN","MPIEU",125,0)
 ;  ERROR - optional error message - if needed, pass by reference
"RTN","MPIEU",126,0)
 ;
"RTN","MPIEU",127,0)
 ; Example: To update a record in subfile 2.0361 in record with ien=353,
"RTN","MPIEU",128,0)
 ;          subrecord ien=68, with the field .01 value = 21:
"RTN","MPIEU",129,0)
 ;    S DATA(.01)=21,RGDA=68,RGDA(1)=353 I $$UPD^MPIEU(2.0361,.RGDA,.DATA,.ERROR) W !,"DONE"
"RTN","MPIEU",130,0)
 ;
"RTN","MPIEU",131,0)
 N FDA,FIELD,IENS,ERRORS
"RTN","MPIEU",132,0)
 ;
"RTN","MPIEU",133,0)
 ;IENS - Internal Entry Number String defined by FM
"RTN","MPIEU",134,0)
 ;FDA - the FDA array as defined by FM
"RTN","MPIEU",135,0)
 ;
"RTN","MPIEU",136,0)
 I '$G(RGDA) S ERROR="IEN OF RECORD TO BE UPDATED NOT SPECIFIED" Q 0
"RTN","MPIEU",137,0)
 S IENS=$$IENS^DILF(.RGDA)
"RTN","MPIEU",138,0)
 S FIELD=0
"RTN","MPIEU",139,0)
 F  S FIELD=$O(DATA(FIELD)) Q:'FIELD  D
"RTN","MPIEU",140,0)
 .S FDA(FILE,IENS,FIELD)=$G(DATA(FIELD))
"RTN","MPIEU",141,0)
 D FILE^DIE("K","FDA","ERRORS(1)")
"RTN","MPIEU",142,0)
 I +$G(DIERR) D
"RTN","MPIEU",143,0)
 .S ERROR=$G(ERRORS(1,"DIERR",1,"TEXT",1))
"RTN","MPIEU",144,0)
 E  D
"RTN","MPIEU",145,0)
 .S ERROR=""
"RTN","MPIEU",146,0)
 ;
"RTN","MPIEU",147,0)
 I $S(+$G(DIERR):0,1:1) D CLEAN^DILF Q 1
"RTN","MPIEU",148,0)
 E  D CLEAN^DILF Q 0
"RTN","MPIEU",149,0)
 ;
"RTN","MPIEU",150,0)
ADD(FILE,RGDA,DATA,ERROR,IEN) ;
"RTN","MPIEU",151,0)
 ;Description: Creates a new record and files the data.
"RTN","MPIEU",152,0)
 ; Input:
"RTN","MPIEU",153,0)
 ;   FILE - File or sub-file number
"RTN","MPIEU",154,0)
 ;   RGDA - New name for traditional FileMan DA array with same
"RTN","MPIEU",155,0)
 ;            meaning. Pass by reference.  Only needed if adding to a
"RTN","MPIEU",156,0)
 ;            subfile.
"RTN","MPIEU",157,0)
 ;   DATA - Data array to file, pass by reference
"RTN","MPIEU",158,0)
 ;          Format: DATA(<field #>)=<value>
"RTN","MPIEU",159,0)
 ;   IEN - internal entry number to use (optional)
"RTN","MPIEU",160,0)
 ;
"RTN","MPIEU",161,0)
 ; Output:
"RTN","MPIEU",162,0)
 ;   Function Value - If no error then it returns the ien of the created record, else returns NULL.
"RTN","MPIEU",163,0)
 ;  RGDA - returns the ien of the new record, NULL if none created.  If needed, pass by reference.
"RTN","MPIEU",164,0)
 ;  ERROR - optional error message - if needed, pass by reference
"RTN","MPIEU",165,0)
 ;
"RTN","MPIEU",166,0)
 ; Example: To add a record in subfile 2.0361 in the record with ien=353
"RTN","MPIEU",167,0)
 ;          with the field .01 value = 21:
"RTN","MPIEU",168,0)
 ;  S DATA(.01)=21,RGDA(1)=353 I $$ADD^MPIEU(2.0361,.RGDA,.DATA) W !,"DONE"
"RTN","MPIEU",169,0)
 ;
"RTN","MPIEU",170,0)
 ; Example: If creating a record not in a subfile, would look like this:
"RTN","MPIEU",171,0)
 ;          S DATA(.01)=21 I $$ADD^MPIEU(867,,.DATA) W !,"DONE"
"RTN","MPIEU",172,0)
 ;
"RTN","MPIEU",173,0)
 N FDA,FIELD,IENA,IENS,ERRORS
"RTN","MPIEU",174,0)
 ;
"RTN","MPIEU",175,0)
 ;IENS - Internal Entry Number String defined by FM
"RTN","MPIEU",176,0)
 ;IENA - the Internal Entry Numebr Array defined by FM
"RTN","MPIEU",177,0)
 ;FDA - the FDA array defined by FM
"RTN","MPIEU",178,0)
 ;IEN - the ien of the new record
"RTN","MPIEU",179,0)
 ;
"RTN","MPIEU",180,0)
 S RGDA="+1"
"RTN","MPIEU",181,0)
 S IENS=$$IENS^DILF(.RGDA)
"RTN","MPIEU",182,0)
 S FIELD=0
"RTN","MPIEU",183,0)
 F  S FIELD=$O(DATA(FIELD)) Q:'FIELD  D
"RTN","MPIEU",184,0)
 .S FDA(FILE,IENS,FIELD)=$G(DATA(FIELD))
"RTN","MPIEU",185,0)
 I $G(IEN) S IENA(1)=IEN
"RTN","MPIEU",186,0)
 D UPDATE^DIE("","FDA","IENA","ERRORS(1)")
"RTN","MPIEU",187,0)
 I +$G(DIERR) D
"RTN","MPIEU",188,0)
 .S ERROR=$G(ERRORS(1,"DIERR",1,"TEXT",1))
"RTN","MPIEU",189,0)
 .S IEN=""
"RTN","MPIEU",190,0)
 E  D
"RTN","MPIEU",191,0)
 .S IEN=IENA(1)
"RTN","MPIEU",192,0)
 .S ERROR=""
"RTN","MPIEU",193,0)
 D CLEAN^DILF
"RTN","MPIEU",194,0)
 S RGDA=IEN
"RTN","MPIEU",195,0)
 Q IEN
"RTN","MPIEU",196,0)
 ;
"RTN","MPIEU",197,0)
TESTVAL(FILE,FIELD,VALUE) ;
"RTN","MPIEU",198,0)
 ;Description: returns 1 if VALUE is a valid value for FIELD in FILE
"RTN","MPIEU",199,0)
 ;
"RTN","MPIEU",200,0)
 Q:(('$G(FILE))!('$G(FIELD))) 0
"RTN","MPIEU",201,0)
 ;
"RTN","MPIEU",202,0)
 N DISPLAY,VALID,RESULT
"RTN","MPIEU",203,0)
 S VALID=1
"RTN","MPIEU",204,0)
 ;
"RTN","MPIEU",205,0)
 ;if there is no external value then it is not valid
"RTN","MPIEU",206,0)
 S DISPLAY=$$EXTERNAL^DILFD(FILE,FIELD,"F",VALUE)
"RTN","MPIEU",207,0)
 I (DISPLAY="") S VALID=0
"RTN","MPIEU",208,0)
 ; 
"RTN","MPIEU",209,0)
 I VALID,$$GET1^DID(FILE,FIELD,"","TYPE")'["POINTER" D
"RTN","MPIEU",210,0)
 .D CHK^DIE(FILE,FIELD,,VALUE,.RESULT) I RESULT="^" S VALID=0 Q
"RTN","MPIEU",211,0)
 Q VALID
"RTN","MPIEU",212,0)
 ;
"RTN","MPIEU",213,0)
GETLINK(INSTIEN) ;
"RTN","MPIEU",214,0)
 ;Description:  Returns name of logical link for institition, given the institution ien.  Returns "" if a logical link name not found.
"RTN","MPIEU",215,0)
 ;
"RTN","MPIEU",216,0)
 Q:'$G(INSTIEN) ""
"RTN","MPIEU",217,0)
 ;
"RTN","MPIEU",218,0)
 N LINK,I,LINKNAME
"RTN","MPIEU",219,0)
 S LINKNAME=""
"RTN","MPIEU",220,0)
 D
"RTN","MPIEU",221,0)
 .;don't check if enabled - if shut down, message will be queued
"RTN","MPIEU",222,0)
 .;Q:'$$CHKLL^HLUTIL(INSTIEN)
"RTN","MPIEU",223,0)
 .;
"RTN","MPIEU",224,0)
 .D LINK^HLUTIL3(INSTIEN,.LINK)
"RTN","MPIEU",225,0)
 .S I=$O(LINK(0))
"RTN","MPIEU",226,0)
 .I I,$L(LINK(I)) S LINKNAME=LINK(I)
"RTN","MPIEU",227,0)
 Q LINKNAME
"RTN","MPIEU",228,0)
 ;
"RTN","MPIEU",229,0)
GETFIELD(FILE,FIELD,RGDA,ERROR) ;Get field value from an existing record.
"RTN","MPIEU",230,0)
 ; Input:
"RTN","MPIEU",231,0)
 ;   FILE - File or sub-file number
"RTN","MPIEU",232,0)
 ;   RGDA - New name for traditional DA array, with same meaning.
"RTN","MPIEU",233,0)
 ;            Pass by reference.
"RTN","MPIEU",234,0)
 ;   FIELD - Field for which value is needed
"RTN","MPIEU",235,0)
 ;
"RTN","MPIEU",236,0)
 ; Output:
"RTN","MPIEU",237,0)
 ;  Function Value -  field value in internal format,"" if an error was encountered
"RTN","MPIEU",238,0)
 ;  ERROR - optional error message - if needed, pass by reference
"RTN","MPIEU",239,0)
 ;
"RTN","MPIEU",240,0)
 N FDA,IENS,ERRORS,VALUE
"RTN","MPIEU",241,0)
 ;
"RTN","MPIEU",242,0)
 ;IENS - Internal Entry Number String defined by FM
"RTN","MPIEU",243,0)
 ;FDA - the FDA array as defined by FM
"RTN","MPIEU",244,0)
 ;
"RTN","MPIEU",245,0)
 I '$G(RGDA) S ERROR="IEN OF RECORD TO BE UPDATED NOT SPECIFIED" Q ""
"RTN","MPIEU",246,0)
 S IENS=$$IENS^DILF(.RGDA)
"RTN","MPIEU",247,0)
 S VALUE=$$GET1^DIQ(FILE,IENS,FIELD,"I",,"ERRORS(1)")
"RTN","MPIEU",248,0)
 I +$G(DIERR) D
"RTN","MPIEU",249,0)
 .S ERROR=$G(ERRORS(1,"DIERR",1,"TEXT",1))
"RTN","MPIEU",250,0)
 E  D
"RTN","MPIEU",251,0)
 .S ERROR=""
"RTN","MPIEU",252,0)
 ;
"RTN","MPIEU",253,0)
 I $S(+$G(DIERR):0,1:1) D CLEAN^DILF Q VALUE
"RTN","MPIEU",254,0)
 E  D CLEAN^DILF Q ""
"RTN","MPIEU",255,0)
 ;
"RTN","MPIEU",256,0)
ASKYESNO(PROMPT,DEFAULT) ;
"RTN","MPIEU",257,0)
 ;Description: Displays PROMPT, appending '?'.  Expects a YES NO response.
"RTN","MPIEU",258,0)
 ;Input:
"RTN","MPIEU",259,0)
 ;   PROMPT - text to display as prompt.  Appends '?'
"RTN","MPIEU",260,0)
 ;   DEFAULT - (optional) YES or NO.  If not passed, defaults to YES
"RTN","MPIEU",261,0)
 ;Output:
"RTN","MPIEU",262,0)
 ;  Function value: 1 if yes, 0 if no, "" if '^' entered or timeout
"RTN","MPIEU",263,0)
 ;
"RTN","MPIEU",264,0)
 N DIR,Y
"RTN","MPIEU",265,0)
 S DIR(0)="Y"
"RTN","MPIEU",266,0)
 S DIR("A")=PROMPT
"RTN","MPIEU",267,0)
 S DIR("B")=$S($G(DEFAULT)="NO":"NO",1:"YES")
"RTN","MPIEU",268,0)
 D ^DIR
"RTN","MPIEU",269,0)
 Q:$D(DIRUT) ""
"RTN","MPIEU",270,0)
 Q Y
"RTN","MPIEU",271,0)
 ;
"RTN","MPIEU",272,0)
NAME(ICN) ;
"RTN","MPIEU",273,0)
 ;Description: returns the patient name as the function value
"RTN","MPIEU",274,0)
 Q ($$GETFIELD(985,1,ICN)_","_$$GETFIELD(985,2,ICN)_" "_$$GETFIELD(985,3,ICN))
"RTN","MPIEU",275,0)
 ;
"RTN","MPIEU",276,0)
SSN(ICN) ;
"RTN","MPIEU",277,0)
 ;Description: returns the patient SSN as the function value
"RTN","MPIEU",278,0)
 Q $$GETFIELD(985,13,ICN)
"RTN","MPIEXC01")
0^38^B53949850
"RTN","MPIEXC01",1,0)
MPIEXC01 ;BAY/ALS - LIST MANAGER ROUTINE FOR MPI EXCEPTION HANDLER ;30 May 2001
"RTN","MPIEXC01",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5,17,27,29,24**;30 Apr 1999
"RTN","MPIEXC01",3,0)
 ; Reference to ^RGHL7(991.11 supported by IA #3208
"RTN","MPIEXC01",4,0)
 ;
"RTN","MPIEXC01",5,0)
EN ;main entry point for MPI EXCEPTION HANDLER
"RTN","MPIEXC01",6,0)
 ;CML - call inserted to do exception clearing 4/11/03
"RTN","MPIEXC01",7,0)
 D ^MPIXEPT
"RTN","MPIEXC01",8,0)
 ;
"RTN","MPIEXC01",9,0)
 D EN^VALM("MPIX EXCPT SUMMARY")
"RTN","MPIEXC01",10,0)
 Q
"RTN","MPIEXC01",11,0)
HDR ; header code
"RTN","MPIEXC01",12,0)
 S VALMHDR(1)="MPI Exception Handling"
"RTN","MPIEXC01",13,0)
 S VALMHDR(2)=""
"RTN","MPIEXC01",14,0)
 Q
"RTN","MPIEXC01",15,0)
 ;
"RTN","MPIEXC01",16,0)
INIT ; init variables and list array
"RTN","MPIEXC01",17,0)
 ;
"RTN","MPIEXC01",18,0)
 I '$D(MPISORT) S MPISORT="SD"
"RTN","MPIEXC01",19,0)
 K @VALMAR
"RTN","MPIEXC01",20,0)
 I MPISORT="SD" D DTSORT
"RTN","MPIEXC01",21,0)
 E  I MPISORT="SS" D SITESORT
"RTN","MPIEXC01",22,0)
 E  I MPISORT="ST" D TYPESORT
"RTN","MPIEXC01",23,0)
 E  I MPISORT="SW" D WRKRSORT
"RTN","MPIEXC01",24,0)
 E  I MPISORT="SI" D ICNSRT
"RTN","MPIEXC01",25,0)
 E  I MPISORT="LR" D RESLVD
"RTN","MPIEXC01",26,0)
 Q
"RTN","MPIEXC01",27,0)
SORT ;
"RTN","MPIEXC01",28,0)
 D INIT
"RTN","MPIEXC01",29,0)
 S VALMBCK="R"
"RTN","MPIEXC01",30,0)
 Q
"RTN","MPIEXC01",31,0)
HELP ;
"RTN","MPIEXC01",32,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","MPIEXC01",33,0)
 Q
"RTN","MPIEXC01",34,0)
EXIT ;
"RTN","MPIEXC01",35,0)
 K VADM,MPISORT,DATA,ICN,IEN,EXCDT,EXCTYP,CIEN,CNT,STATUS,STA
"RTN","MPIEXC01",36,0)
 K SCREEN,SCR,SCRARR,SCRDUZ,SCRKEY,X
"RTN","MPIEXC01",37,0)
 Q
"RTN","MPIEXC01",38,0)
 ;
"RTN","MPIEXC01",39,0)
DTSORT ; Sort exceptions by Date - DEFAULT
"RTN","MPIEXC01",40,0)
 ;CML - added code to screen exceptions shown to development team and DQ team 9/25/03, Updated 7/27/04 to use the MPI DEVELOPER key **29
"RTN","MPIEXC01",41,0)
 ;This screen will only be used for the DATE sort.
"RTN","MPIEXC01",42,0)
 ;
"RTN","MPIEXC01",43,0)
 ;Look for MPI DEVELOPER key:  **29
"RTN","MPIEXC01",44,0)
 ;If user has that key, show only unassigned exceptions and those assigned to DEV team
"RTN","MPIEXC01",45,0)
 ;If user does not have that key, show only unassigned exceptions and those assigned to DQ team
"RTN","MPIEXC01",46,0)
 ;
"RTN","MPIEXC01",47,0)
 N JJ,X
"RTN","MPIEXC01",48,0)
 S SCRDUZ=$S($D(DUZ):DUZ,1:.5)
"RTN","MPIEXC01",49,0)
 ;
"RTN","MPIEXC01",50,0)
 K SCRKEY S DIC=19.1,X="MPI DEVELOPER" D ^DIC K DIC S SCRKEY=$S(+Y<0:"",1:+Y)  ;**29
"RTN","MPIEXC01",51,0)
 S SCREEN=1,SCR="" I '$D(SCRKEY) S SCREEN=0
"RTN","MPIEXC01",52,0)
 I SCRKEY D
"RTN","MPIEXC01",53,0)
 .K SCRARR
"RTN","MPIEXC01",54,0)
 .S JJ=0 F  S JJ=$O(^VA(200,"AB",SCRKEY,JJ)) Q:'JJ  S SCRARR(JJ)=""
"RTN","MPIEXC01",55,0)
 .I '$D(SCRARR) S SCREEN=0 Q
"RTN","MPIEXC01",56,0)
 .S SCR=$S($D(SCRARR(SCRDUZ)):"DV",1:"DQ")
"RTN","MPIEXC01",57,0)
 ;
"RTN","MPIEXC01",58,0)
 K ^TMP("MPIEXC",$J),ARR
"RTN","MPIEXC01",59,0)
 S EXCDT="",EXCTYP="",CNT=0,STA=""
"RTN","MPIEXC01",60,0)
 ; **27 list exceptions 238 and 239 first regardless of date
"RTN","MPIEXC01",61,0)
 ; **24 adding exception 240 to list of first listed
"RTN","MPIEXC01",62,0)
 F STATUS=1,2 D
"RTN","MPIEXC01",63,0)
 .F EXCTYP=239,238,240 D
"RTN","MPIEXC01",64,0)
 ..S IEN="" F  S IEN=$O(^MPI(985.9,"ST",STATUS,EXCTYP,IEN)) Q:IEN=""  D
"RTN","MPIEXC01",65,0)
 ... S ARR(IEN)=""
"RTN","MPIEXC01",66,0)
 ... S CIEN=$P($G(^MPI(985.9,IEN,0)),"^",7)
"RTN","MPIEXC01",67,0)
 ... S CASEWRKR=$$EXTERNAL^DILFD(985.9,.07,"F",CIEN)
"RTN","MPIEXC01",68,0)
 ... S STA=$P($G(^MPI(985.9,IEN,0)),"^",4)
"RTN","MPIEXC01",69,0)
 ... S ICN=$P($G(^MPI(985.9,IEN,2)),"^",1)
"RTN","MPIEXC01",70,0)
 ... S EXCDT=$P($G(^MPI(985.9,IEN,0)),"^",1)
"RTN","MPIEXC01",71,0)
 ... I SCREEN,$G(CIEN) D  Q
"RTN","MPIEXC01",72,0)
 .... I SCR="DV",$D(SCRARR(CIEN)) D ADDREC
"RTN","MPIEXC01",73,0)
 .... I SCR="DQ",'$D(SCRARR(CIEN)) D ADDREC
"RTN","MPIEXC01",74,0)
 ... D ADDREC
"RTN","MPIEXC01",75,0)
 ;
"RTN","MPIEXC01",76,0)
 S EXCDT="",EXCTYP="",STA=""
"RTN","MPIEXC01",77,0)
 F  S EXCDT=$O(^MPI(985.9,"AG",EXCDT)) Q:'EXCDT  D
"RTN","MPIEXC01",78,0)
 . S STATUS=""
"RTN","MPIEXC01",79,0)
 . F  S STATUS=$O(^MPI(985.9,"AG",EXCDT,STATUS)) Q:'STATUS  D
"RTN","MPIEXC01",80,0)
 .. I STATUS<3 D
"RTN","MPIEXC01",81,0)
 ... S IEN=0,CASEWRKR="",ICN="",CIEN=""
"RTN","MPIEXC01",82,0)
 ... F  S IEN=$O(^MPI(985.9,"AG",EXCDT,STATUS,IEN)) Q:'IEN  D
"RTN","MPIEXC01",83,0)
 .... S EXCTYP=$P(^MPI(985.9,IEN,0),"^",2)
"RTN","MPIEXC01",84,0)
 .... S CIEN=$P($G(^MPI(985.9,IEN,0)),"^",7)
"RTN","MPIEXC01",85,0)
 .... S CASEWRKR=$$EXTERNAL^DILFD(985.9,.07,"F",CIEN)
"RTN","MPIEXC01",86,0)
 .... S STA=$P($G(^MPI(985.9,IEN,0)),"^",4)
"RTN","MPIEXC01",87,0)
 .... S ICN=$P($G(^MPI(985.9,IEN,2)),"^",1)
"RTN","MPIEXC01",88,0)
 .... I SCREEN,$G(CIEN) D  Q
"RTN","MPIEXC01",89,0)
 ..... I SCR="DV",$D(SCRARR(CIEN)),'$D(ARR(IEN)) D ADDREC
"RTN","MPIEXC01",90,0)
 ..... I SCR="DQ",'$D(SCRARR(CIEN)),'$D(ARR(IEN)) D ADDREC
"RTN","MPIEXC01",91,0)
 .... I '$D(ARR(IEN)) D ADDREC
"RTN","MPIEXC01",92,0)
 I CNT<1 D NDATA
"RTN","MPIEXC01",93,0)
 Q
"RTN","MPIEXC01",94,0)
REFSH ; refresh list including getting new list and running EPT
"RTN","MPIEXC01",95,0)
 D CLEAN^VALM10
"RTN","MPIEXC01",96,0)
 D SORT
"RTN","MPIEXC01",97,0)
 D ^MPIXEPT
"RTN","MPIEXC01",98,0)
 D SORT
"RTN","MPIEXC01",99,0)
 Q
"RTN","MPIEXC01",100,0)
RESLVD ;no longer being used
"RTN","MPIEXC01",101,0)
 Q
"RTN","MPIEXC01",102,0)
 ; Resolved exceptions by Date
"RTN","MPIEXC01",103,0)
 K ^TMP("MPIEXC",$J)
"RTN","MPIEXC01",104,0)
 S EXCDT="",EXCTYP="",CNT=0,STA=""
"RTN","MPIEXC01",105,0)
 F  S EXCDT=$O(^MPI(985.9,"AG",EXCDT)) Q:'EXCDT  D
"RTN","MPIEXC01",106,0)
 . S STATUS=3,IEN=0,CASEWRKR="",ICN="",CIEN=""
"RTN","MPIEXC01",107,0)
 . F  S IEN=$O(^MPI(985.9,"AG",EXCDT,STATUS,IEN)) Q:'IEN  D
"RTN","MPIEXC01",108,0)
 .. S EXCTYP=$P(^MPI(985.9,IEN,0),"^",2)
"RTN","MPIEXC01",109,0)
 .. S CIEN=$P($G(^MPI(985.9,IEN,0)),"^",7)
"RTN","MPIEXC01",110,0)
 .. S CASEWRKR=$$EXTERNAL^DILFD(985.9,.07,"F",CIEN)
"RTN","MPIEXC01",111,0)
 .. S STA=$P($G(^MPI(985.9,IEN,0)),"^",4)
"RTN","MPIEXC01",112,0)
 .. S ICN=$P($G(^MPI(985.9,IEN,2)),"^",1)
"RTN","MPIEXC01",113,0)
 .. D ADDREC
"RTN","MPIEXC01",114,0)
 I CNT<1 D NDATA
"RTN","MPIEXC01",115,0)
 Q
"RTN","MPIEXC01",116,0)
SITESORT ; Sort exceptions by Receiving Site
"RTN","MPIEXC01",117,0)
 K ^TMP("MPIEXC",$J)
"RTN","MPIEXC01",118,0)
 S STA="",EXCTYP="",CASEWRKR="",STATUS="",ICN="",EXCDT="",CNT=0
"RTN","MPIEXC01",119,0)
 F  S STA=$O(^MPI(985.9,"D",STA)) Q:'STA  D
"RTN","MPIEXC01",120,0)
 . S IEN=0,CIEN=""
"RTN","MPIEXC01",121,0)
 . F  S IEN=$O(^MPI(985.9,"D",STA,IEN)) Q:'IEN  D
"RTN","MPIEXC01",122,0)
 .. S EXCTYP=$P(^MPI(985.9,IEN,0),"^",2)
"RTN","MPIEXC01",123,0)
 .. S CIEN=$P($G(^MPI(985.9,IEN,0)),"^",7)
"RTN","MPIEXC01",124,0)
 .. S CASEWRKR=$$EXTERNAL^DILFD(985.9,.07,"F",CIEN)
"RTN","MPIEXC01",125,0)
 .. S STATUS=$P($G(^MPI(985.9,IEN,0)),"^",6)
"RTN","MPIEXC01",126,0)
 .. I STATUS<3 D
"RTN","MPIEXC01",127,0)
 ... S EXCDT=$P($G(^MPI(985.9,IEN,0)),"^",1)
"RTN","MPIEXC01",128,0)
 ... S ICN=$P($G(^MPI(985.9,IEN,2)),"^",1)
"RTN","MPIEXC01",129,0)
 ... D ADDREC
"RTN","MPIEXC01",130,0)
 I CNT<1 D NDATA
"RTN","MPIEXC01",131,0)
 Q
"RTN","MPIEXC01",132,0)
TYPESORT ; Sort exceptions by Type
"RTN","MPIEXC01",133,0)
 K ^TMP("MPIEXC",$J)
"RTN","MPIEXC01",134,0)
 S STA="",EXCTYP="",CASEWRKR="",STATUS="",ICN="",EXCDT="",CNT=0
"RTN","MPIEXC01",135,0)
 F  S EXCTYP=$O(^MPI(985.9,"C",EXCTYP)) Q:'EXCTYP  D
"RTN","MPIEXC01",136,0)
 . S IEN=0,CIEN=""
"RTN","MPIEXC01",137,0)
 . F  S IEN=$O(^MPI(985.9,"C",EXCTYP,IEN)) Q:'IEN  D
"RTN","MPIEXC01",138,0)
 .. S CIEN=$P($G(^MPI(985.9,IEN,0)),"^",7)
"RTN","MPIEXC01",139,0)
 .. S CASEWRKR=$$EXTERNAL^DILFD(985.9,.07,"F",CIEN)
"RTN","MPIEXC01",140,0)
 .. S STATUS=$P($G(^MPI(985.9,IEN,0)),"^",6)
"RTN","MPIEXC01",141,0)
 .. I STATUS<3 D
"RTN","MPIEXC01",142,0)
 ... S EXCDT=$P($G(^MPI(985.9,IEN,0)),"^",1)
"RTN","MPIEXC01",143,0)
 ... S STA=$P($G(^MPI(985.9,IEN,0)),"^",4)
"RTN","MPIEXC01",144,0)
 ... S ICN=$P($G(^MPI(985.9,IEN,2)),"^",1)
"RTN","MPIEXC01",145,0)
 ... D ADDREC
"RTN","MPIEXC01",146,0)
 I CNT<1 D NDATA
"RTN","MPIEXC01",147,0)
 Q
"RTN","MPIEXC01",148,0)
WRKRSORT ; Sort exceptions by Case Worker
"RTN","MPIEXC01",149,0)
 K ^TMP("MPIEXC",$J)
"RTN","MPIEXC01",150,0)
 S EXCDT="",EXCTYP="",CNT=0,STA="",ICN=""
"RTN","MPIEXC01",151,0)
 F  S CASEWRKR=$O(^MPI(985.5,"AC",CASEWRKR)) Q:'CASEWRKR  D
"RTN","MPIEXC01",152,0)
 . S STATUS="" F  S STATUS=$O(^MPI(985.9,"AC",CASEWRKR,STATUS)) Q:'STATUS  D
"RTN","MPIEXC01",153,0)
 .. I STATUS<3 D
"RTN","MPIEXC01",154,0)
 ... S EXCDT="" F  S EXCDT=$O(^MPI(985.9,"AC",CASEWRKR,STATUS,EXCDT)) Q:'EXCDT  D
"RTN","MPIEXC01",155,0)
 .... S IEN=0 F  S IEN=$O(^MPI(985.9,"AC",CASEWRKR,STATUS,EXCDT,IEN)) Q:'IEN  D
"RTN","MPIEXC01",156,0)
 .... S EXCTYP=$P(^MPI(985.9,IEN,0),"^",2)
"RTN","MPIEXC01",157,0)
 .... S STA=$P($G(^MPI(985.9,IEN,0)),"^",4)
"RTN","MPIEXC01",158,0)
 .... S ICN=$P($G(^MPI(985.9,IEN,2)),"^",1)
"RTN","MPIEXC01",159,0)
 .... S CASEWRKR=$$EXTERNAL^DILFD(985.9,.07,"F",CASEWRKR)
"RTN","MPIEXC01",160,0)
 .... D ADDREC
"RTN","MPIEXC01",161,0)
 I CNT<1 D NDATA
"RTN","MPIEXC01",162,0)
 Q
"RTN","MPIEXC01",163,0)
ICNSRT ;Sort by ICN
"RTN","MPIEXC01",164,0)
 K ^TMP("MPIEXC",$J)
"RTN","MPIEXC01",165,0)
 S EXCDT="",EXCTYP="",ICN="",CNT=0,STA="",CASEWRKR=""
"RTN","MPIEXC01",166,0)
 F  S ICN=$O(^MPI(985.9,"AE",ICN)) Q:'ICN  D
"RTN","MPIEXC01",167,0)
 . S STATUS="" F  S STATUS=$O(^MPI(985.9,"AE",ICN,STATUS)) Q:'STATUS  D
"RTN","MPIEXC01",168,0)
 .. I STATUS<3 D
"RTN","MPIEXC01",169,0)
 ... S IEN=0,CIEN="" F  S IEN=$O(^MPI(985.9,"AE",ICN,STATUS,IEN)) Q:'IEN  D
"RTN","MPIEXC01",170,0)
 .... S EXCTYP=$P(^MPI(985.9,IEN,0),"^",2)
"RTN","MPIEXC01",171,0)
 .... S STA=$P($G(^MPI(985.9,IEN,0)),"^",4)
"RTN","MPIEXC01",172,0)
 .... S CIEN=$P($G(^MPI(985.9,IEN,0)),"^",7)
"RTN","MPIEXC01",173,0)
 .... S CASEWRKR=$$EXTERNAL^DILFD(985.9,.07,"F",CIEN)
"RTN","MPIEXC01",174,0)
 .... S EXCDT=$P($G(^MPI(985.9,IEN,0)),"^",1)
"RTN","MPIEXC01",175,0)
 .... D ADDREC
"RTN","MPIEXC01",176,0)
 I CNT<1 D NDATA
"RTN","MPIEXC01",177,0)
 Q
"RTN","MPIEXC01",178,0)
NDATA ; No exceptions to be resolved
"RTN","MPIEXC01",179,0)
 S CNT=CNT+1,STRING=""
"RTN","MPIEXC01",180,0)
 S STRING=$$SETSTR^VALM1("There are no exceptions to be resolved at this time.",STRING,5,70)
"RTN","MPIEXC01",181,0)
 S ^TMP("MPIEXC",$J,CNT,0)=STRING
"RTN","MPIEXC01",182,0)
 S ^TMP("MPIEXC",$J,"IDX",CNT,CNT)=""
"RTN","MPIEXC01",183,0)
 S VALMCNT=CNT
"RTN","MPIEXC01",184,0)
 Q
"RTN","MPIEXC01",185,0)
ADDREC ;
"RTN","MPIEXC01",186,0)
 S EXCTXT="",SITE="",INSTIEN="",DATE=""
"RTN","MPIEXC01",187,0)
 S EXCTXT=$P($G(^RGHL7(991.11,EXCTYP,10)),"^",1)
"RTN","MPIEXC01",188,0)
 I $G(STA) D
"RTN","MPIEXC01",189,0)
 . S INSTIEN=$$IEN^XUAF4(+STA) ;;CMC ADDED + 9/10/02
"RTN","MPIEXC01",190,0)
 . I $G(INSTIEN) S SITE=$P($$NS^XUAF4(INSTIEN),"^",1)
"RTN","MPIEXC01",191,0)
 S DATE=$P($$FMTE^XLFDT(EXCDT,2),"@",1)
"RTN","MPIEXC01",192,0)
 I CASEWRKR="" S CASEWRKR="Not Assigned"
"RTN","MPIEXC01",193,0)
 S CNT=CNT+1,STRING=""
"RTN","MPIEXC01",194,0)
 S STRING=$$SETSTR^VALM1(CNT,STRING,1,4)
"RTN","MPIEXC01",195,0)
 S STRING=$$SETSTR^VALM1(EXCTXT,STRING,6,25)
"RTN","MPIEXC01",196,0)
 S STRING=$$SETSTR^VALM1(SITE,STRING,32,10)
"RTN","MPIEXC01",197,0)
 S STRING=$$SETSTR^VALM1(DATE,STRING,43,10)
"RTN","MPIEXC01",198,0)
 S STRING=$$SETSTR^VALM1(ICN,STRING,54,10)
"RTN","MPIEXC01",199,0)
 S STRING=$$SETSTR^VALM1(CASEWRKR,STRING,66,12)
"RTN","MPIEXC01",200,0)
 S ^TMP("MPIEXC",$J,CNT,0)=STRING
"RTN","MPIEXC01",201,0)
 S ^TMP("MPIEXC",$J,"IDX",CNT,CNT)=""
"RTN","MPIEXC01",202,0)
 S ^TMP("MPIEXC",$J,CNT,"DATA")=IEN_"^"_ICN_"^"_SITE_"^"_DATE_"^"_EXCTXT
"RTN","MPIEXC01",203,0)
 S VALMCNT=CNT
"RTN","MPIEXC01",204,0)
 K EXCTXT,SITE,DATE,CASEWRKR,STRING,INSTIEN
"RTN","MPIEXC01",205,0)
 Q
"RTN","MPIEXC01",206,0)
SELECT ;
"RTN","MPIEXC01",207,0)
 I $G(STRING)["no exceptions" D SORT^MPIEXC01  Q
"RTN","MPIEXC01",208,0)
 N VALMY
"RTN","MPIEXC01",209,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIEXC01",210,0)
 I '$D(VALMY) Q
"RTN","MPIEXC01",211,0)
 S VALMCNT=CNT
"RTN","MPIEXC01",212,0)
 S DATA="",CNT=""
"RTN","MPIEXC01",213,0)
 S CNT=$O(VALMY(0))
"RTN","MPIEXC01",214,0)
 S DATA=$G(^TMP("MPIEXC",$J,CNT,"DATA"))
"RTN","MPIEXC01",215,0)
 I '$D(DATA) S CNT=0 Q
"RTN","MPIEXC01",216,0)
 D CLEAN^VALM10
"RTN","MPIEXC01",217,0)
 D EN^MPIEXC02(DATA)
"RTN","MPIEXC01",218,0)
 D SORT^MPIEXC01
"RTN","MPIEXC01",219,0)
 Q
"RTN","MPIEXC01",220,0)
QUIT ;
"RTN","MPIEXC01",221,0)
 Q
"RTN","MPIEXC02")
0^39^B28177012
"RTN","MPIEXC02",1,0)
MPIEXC02 ;BAY/ALS - LIST MANAGER ROUTINE FOR MPI EXCEPTION HANDLER ;30 May 2001
"RTN","MPIEXC02",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5,29**;30 Apr 99
"RTN","MPIEXC02",3,0)
EN(DATA) ; main entry piont for MPIX EXCPT ACTION
"RTN","MPIEXC02",4,0)
 D EN^VALM("MPIX EXCPT ACTION")
"RTN","MPIEXC02",5,0)
 Q
"RTN","MPIEXC02",6,0)
HDR ; header code
"RTN","MPIEXC02",7,0)
 S VALMHDR(1)="MPI EXCEPTION HANDLING ACTIONS"
"RTN","MPIEXC02",8,0)
 S VALMHDR(2)=""
"RTN","MPIEXC02",9,0)
 Q
"RTN","MPIEXC02",10,0)
INIT ;
"RTN","MPIEXC02",11,0)
 K ^TMP("MPIEXC2",$J)
"RTN","MPIEXC02",12,0)
 K @VALMAR
"RTN","MPIEXC02",13,0)
 I DATA="" Q
"RTN","MPIEXC02",14,0)
 S (IEN,ICN,SITE,DATE,EXCTXT,STATUS,CIEN,CASEWRKR,NAME,SSN,CMOR,MSGID,MSGTYP,NOTE)=""
"RTN","MPIEXC02",15,0)
 S IEN=$P(DATA,"^",1)
"RTN","MPIEXC02",16,0)
 S ICN=$P(DATA,"^",2)
"RTN","MPIEXC02",17,0)
 S SITE=$P(DATA,"^",3)
"RTN","MPIEXC02",18,0)
 S DATE=$P(DATA,"^",4)
"RTN","MPIEXC02",19,0)
 S EXCTXT=$P(DATA,"^",5)
"RTN","MPIEXC02",20,0)
 S DIC="^MPI(985.9,",DR=".06;.07;1;2.02;2.03;2.04;3.01;3.03;4" ;**29 chanage from message type to event type (3.02 to 3.03)
"RTN","MPIEXC02",21,0)
 S DA=IEN,DIQ="MPIEXC",DIQ(0)="IE"
"RTN","MPIEXC02",22,0)
 D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","MPIEXC02",23,0)
 S STATUS=$G(MPIEXC(985.9,IEN,.06,"E"))
"RTN","MPIEXC02",24,0)
 S CASEWRKR=$G(MPIEXC(985.9,IEN,.07,"E"))
"RTN","MPIEXC02",25,0)
 I CASEWRKR="" S CASEWRKR="Not Assigned"
"RTN","MPIEXC02",26,0)
 S NAME=$G(MPIEXC(985.9,IEN,2.02,"E"))
"RTN","MPIEXC02",27,0)
 S CMOR=$G(MPIEXC(985.9,IEN,2.04,"E"))
"RTN","MPIEXC02",28,0)
 I CMOR'="" S CMOR=$$IEN^XUAF4(MPIEXC(985.9,IEN,2.04,"I"))
"RTN","MPIEXC02",29,0)
 I CMOR'="" S CMOR=$P($$NS^XUAF4(CMOR),"^",1)
"RTN","MPIEXC02",30,0)
 S SSN=$G(MPIEXC(985.9,IEN,2.03,"E"))
"RTN","MPIEXC02",31,0)
 S MSGID=$G(MPIEXC(985.9,IEN,3.01,"E"))
"RTN","MPIEXC02",32,0)
 S MSGTYP=$G(MPIEXC(985.9,IEN,3.03,"E")) ;**29 changed from message type to event type
"RTN","MPIEXC02",33,0)
 S NOTE=$G(MPIEXC(985.9,IEN,4,"E"))
"RTN","MPIEXC02",34,0)
 S MSGTXT=$G(MPIEXC(985.9,IEN,1,"E"))
"RTN","MPIEXC02",35,0)
 S STR="",LIN=1
"RTN","MPIEXC02",36,0)
 S STR=$$SETSTR^VALM1("Tracking Number:",STR,2,16)
"RTN","MPIEXC02",37,0)
 S STR=$$SETSTR^VALM1(IEN,STR,23,20)
"RTN","MPIEXC02",38,0)
 S STR=$$SETSTR^VALM1("Status:",STR,40,14)
"RTN","MPIEXC02",39,0)
 S STR=$$SETSTR^VALM1(STATUS,STR,55,23)
"RTN","MPIEXC02",40,0)
 D ADDTMP
"RTN","MPIEXC02",41,0)
 S STR=$$SETSTR^VALM1("Date Reported:",STR,2,16)
"RTN","MPIEXC02",42,0)
 S STR=$$SETSTR^VALM1(DATE,STR,23,10)
"RTN","MPIEXC02",43,0)
 S STR=$$SETSTR^VALM1("Case Worker:",STR,40,14)
"RTN","MPIEXC02",44,0)
 S STR=$$SETSTR^VALM1(CASEWRKR,STR,55,23)
"RTN","MPIEXC02",45,0)
 D ADDTMP
"RTN","MPIEXC02",46,0)
 S STR=$$SETSTR^VALM1("Site Rec'd From:",STR,2,18)
"RTN","MPIEXC02",47,0)
 S STR=$$SETSTR^VALM1(SITE,STR,23,30)
"RTN","MPIEXC02",48,0)
 D ADDTMP
"RTN","MPIEXC02",49,0)
 S STR=$$SETSTR^VALM1("Exception Type:",STR,2,16)
"RTN","MPIEXC02",50,0)
 S STR=$$SETSTR^VALM1(EXCTXT,STR,23,55)
"RTN","MPIEXC02",51,0)
 D ADDTMP
"RTN","MPIEXC02",52,0)
 S STR=$$SETSTR^VALM1("Exception Text:",STR,2,20)
"RTN","MPIEXC02",53,0)
 S STR=$$SETSTR^VALM1($E(MSGTXT,1,55),STR,23,55)
"RTN","MPIEXC02",54,0)
 D ADDTMP
"RTN","MPIEXC02",55,0)
 I $E(MSGTXT,56,134)'="" D
"RTN","MPIEXC02",56,0)
 .S STR=$$SETSTR^VALM1($E(MSGTXT,56,134),STR,2,79)
"RTN","MPIEXC02",57,0)
 .D ADDTMP
"RTN","MPIEXC02",58,0)
 .I $E(MSGTXT,135,213)'="" D
"RTN","MPIEXC02",59,0)
 ..S STR=$$SETSTR^VALM1($E(MSGTXT,135,213),STR,2,79)
"RTN","MPIEXC02",60,0)
 ..D ADDTMP
"RTN","MPIEXC02",61,0)
 ..I $E(MSGTXT,214,245)'="" D
"RTN","MPIEXC02",62,0)
 ...S STR=$$SETSTR^VALM1($E(MSGTXT,214,245),STR,2,40)
"RTN","MPIEXC02",63,0)
 ...D ADDTMP
"RTN","MPIEXC02",64,0)
 S LIN=LIN+1
"RTN","MPIEXC02",65,0)
 S STR=$$SETSTR^VALM1("Patient Name:",STR,2,16)
"RTN","MPIEXC02",66,0)
 S STR=$$SETSTR^VALM1(NAME,STR,23,40)
"RTN","MPIEXC02",67,0)
 D ADDTMP
"RTN","MPIEXC02",68,0)
 S STR=$$SETSTR^VALM1("SSN:",STR,2,16)
"RTN","MPIEXC02",69,0)
 S STR=$$SETSTR^VALM1(SSN,STR,23,20)
"RTN","MPIEXC02",70,0)
 D ADDTMP
"RTN","MPIEXC02",71,0)
 S STR=$$SETSTR^VALM1("CMOR:",STR,2,16)
"RTN","MPIEXC02",72,0)
 S STR=$$SETSTR^VALM1(CMOR,STR,23,20)
"RTN","MPIEXC02",73,0)
 S STR=$$SETSTR^VALM1("ICN:",STR,40,13)
"RTN","MPIEXC02",74,0)
 S STR=$$SETSTR^VALM1(ICN,STR,55,24)
"RTN","MPIEXC02",75,0)
 D ADDTMP
"RTN","MPIEXC02",76,0)
 S LIN=LIN+1
"RTN","MPIEXC02",77,0)
 S STR=$$SETSTR^VALM1("HL7 Message ID:",STR,2,16)
"RTN","MPIEXC02",78,0)
 S STR=$$SETSTR^VALM1(MSGID,STR,23,15)
"RTN","MPIEXC02",79,0)
 S STR=$$SETSTR^VALM1("Event Type:",STR,40,13) ;**29 changed from message type to event type
"RTN","MPIEXC02",80,0)
 S STR=$$SETSTR^VALM1(MSGTYP,STR,55,24)
"RTN","MPIEXC02",81,0)
 D ADDTMP
"RTN","MPIEXC02",82,0)
 S VALMCNT=LIN-1
"RTN","MPIEXC02",83,0)
 Q
"RTN","MPIEXC02",84,0)
ADDTMP ;
"RTN","MPIEXC02",85,0)
 S ^TMP("MPIEXC2",$J,LIN,0)=STR
"RTN","MPIEXC02",86,0)
 S ^TMP("MPIEXC2",$J,"IDX",LIN,LIN)=""
"RTN","MPIEXC02",87,0)
 S LIN=LIN+1,STR=""
"RTN","MPIEXC02",88,0)
 Q
"RTN","MPIEXC02",89,0)
ASSIGN ;
"RTN","MPIEXC02",90,0)
 S VALMBCK=""
"RTN","MPIEXC02",91,0)
 L +^MPI(985.9,IEN):10
"RTN","MPIEXC02",92,0)
 S DIE="^MPI(985.9,",DA=IEN,DR=".07//^S X=CASEWRKR"
"RTN","MPIEXC02",93,0)
 D ^DIE K DIE,DA,DR
"RTN","MPIEXC02",94,0)
 L -^MPI(985.9,IEN)
"RTN","MPIEXC02",95,0)
 I $G(MPIEXC(985.9,IEN,.06,"I"))=1 D
"RTN","MPIEXC02",96,0)
 . L +^MPI(985.9,IEN):10
"RTN","MPIEXC02",97,0)
 . S DIE="^MPI(985.9,",DA=IEN,DR=".06///2" D ^DIE K DIE,DA,DR
"RTN","MPIEXC02",98,0)
 . L -^MPI(985.9,IEN)
"RTN","MPIEXC02",99,0)
 D INIT
"RTN","MPIEXC02",100,0)
 S VALMBCK="R"
"RTN","MPIEXC02",101,0)
 Q
"RTN","MPIEXC02",102,0)
CS ;Change exception status
"RTN","MPIEXC02",103,0)
 S VALMBCK=""
"RTN","MPIEXC02",104,0)
 L +^MPI(985.9,IEN):10
"RTN","MPIEXC02",105,0)
 S DIE="^MPI(985.9,",DA=IEN,DR="4" D ^DIE K DIE,DA,DR
"RTN","MPIEXC02",106,0)
 S DIE="^MPI(985.9,",DA=IEN,DR=".06//^S X=STATUS"
"RTN","MPIEXC02",107,0)
 D ^DIE K DIE,DA,DR
"RTN","MPIEXC02",108,0)
 L -^MPI(985.9,IEN)
"RTN","MPIEXC02",109,0)
 I $P(^MPI(985.9,IEN,0),"^",6)=3 D
"RTN","MPIEXC02",110,0)
 . L +^MPI(985.9,IEN):10
"RTN","MPIEXC02",111,0)
 . S DIE="^MPI(985.9,",DA=IEN,DR=".09////^S X=$$NOW^XLFDT"
"RTN","MPIEXC02",112,0)
 . D ^DIE K DIE,DA,DR
"RTN","MPIEXC02",113,0)
 . L -^MPI(985.9,IEN)
"RTN","MPIEXC02",114,0)
 D INIT
"RTN","MPIEXC02",115,0)
 S VALMBCK="R"
"RTN","MPIEXC02",116,0)
 Q
"RTN","MPIEXC02",117,0)
PDAT ;
"RTN","MPIEXC02",118,0)
 S VALMBCK="",PICN="",PSSN="",MPIR=1
"RTN","MPIEXC02",119,0)
 I $D(SSN) S PSSN=SSN
"RTN","MPIEXC02",120,0)
 S ARRAY="^TMP(""MPIXHFS"","_$J_")",TYPE="I",REP=1
"RTN","MPIEXC02",121,0)
 S MPIXDIR=$$GET^XPAR("SYS","MPIX HFS SCRATCH")
"RTN","MPIEXC02",122,0)
 S MPIXFILE="MPIX"_DUZ_".DAT"
"RTN","MPIEXC02",123,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","MPIEXC02",124,0)
 D OPEN^%ZISH("MPIX",MPIXDIR,MPIXFILE,"W") Q:POP
"RTN","MPIEXC02",125,0)
 U IO
"RTN","MPIEXC02",126,0)
 I ICN'="" S PICN=ICN D PDAT^MPIMPDAT(PICN)
"RTN","MPIEXC02",127,0)
 I (PICN="")&(PSSN'="") D PDAT^MPIMPDAT(SSN)
"RTN","MPIEXC02",128,0)
 I (PICN="")&(PSSN="") W !!,"ICN and SSN data missing for this patient."
"RTN","MPIEXC02",129,0)
 N MPIXDEL
"RTN","MPIEXC02",130,0)
 D CLOSE^%ZISH("MPIX")
"RTN","MPIEXC02",131,0)
 K ^TMP("MPIXHFS",$J)
"RTN","MPIEXC02",132,0)
 S MPIXDEL(MPIXFILE)=""
"RTN","MPIEXC02",133,0)
 S X=$$FTG^%ZISH(MPIXDIR,MPIXFILE,$NAME(^TMP("MPIXHFS",$J,1)),3)
"RTN","MPIEXC02",134,0)
 S X=$$DEL^%ZISH(MPIXDIR,$NA(MPIXDEL))
"RTN","MPIEXC02",135,0)
 I $D(^TMP("MPIXHFS",$J)) D EN^MPIEXC04(PICN)
"RTN","MPIEXC02",136,0)
 S ICN=PICN,SSN=PSSN
"RTN","MPIEXC02",137,0)
 D INIT
"RTN","MPIEXC02",138,0)
 S VALMBCK="R"
"RTN","MPIEXC02",139,0)
 K PICN,PSSN,MPIM,ARRAY,MPIR,MPIXDIR,MPIXFILE,REP,TYPE
"RTN","MPIEXC02",140,0)
 Q
"RTN","MPIEXC02",141,0)
NOTE ;
"RTN","MPIEXC02",142,0)
 S VALMBCK=""
"RTN","MPIEXC02",143,0)
 L +^MPI(985.9,IEN):10
"RTN","MPIEXC02",144,0)
 S DIE="^MPI(985.9,",DA=IEN,DR="4"
"RTN","MPIEXC02",145,0)
 D ^DIE K DIE,DA,DR
"RTN","MPIEXC02",146,0)
 L -^MPI(985.9,IEN)
"RTN","MPIEXC02",147,0)
 D INIT
"RTN","MPIEXC02",148,0)
 S VALMBCK="R"
"RTN","MPIEXC02",149,0)
 Q
"RTN","MPIEXC02",150,0)
HELP ;
"RTN","MPIEXC02",151,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","MPIEXC02",152,0)
 Q
"RTN","MPIEXC02",153,0)
EXIT ;
"RTN","MPIEXC02",154,0)
 S VALMBCK=""
"RTN","MPIEXC02",155,0)
 K ^TMP("MPIEXC2",$J),MPIEXC,CMOR,MSGID,MSGTXT,MSGTYP,NAME,NOTE,SSN
"RTN","MPIEXC02",156,0)
 K CASEWRKR,CIEN,DATE,EXCTXT,ICN,IEN,LIN,POP,SITE,STATUS,STR
"RTN","MPIEXC02",157,0)
 S VALMBCK="R"
"RTN","MPIEXC02",158,0)
 Q
"RTN","MPIEXC02",159,0)
EXPND ;
"RTN","MPIEXC02",160,0)
 Q
"RTN","MPIEXC03")
0^40^B11387850
"RTN","MPIEXC03",1,0)
MPIEXC03 ;BAY/ALS MPI EXCEPTION ROUTING
"RTN","MPIEXC03",2,0)
 ;;1.0;MPI AUSTIN;;30 August 2001
"RTN","MPIEXC03",3,0)
BLDMSG ;Build message for MPI Exception Handler
"RTN","MPIEXC03",4,0)
 ;
"RTN","MPIEXC03",5,0)
MPIEXC(ICN,ERRHL) ;
"RTN","MPIEXC03",6,0)
 N MPIMSG,MSGID
"RTN","MPIEXC03",7,0)
 S LIN=1
"RTN","MPIEXC03",8,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**MPI/PD EXCEPTION**",LIN=LIN+1
"RTN","MPIEXC03",9,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="EXCEPTION TYPE:234",LIN=LIN+1
"RTN","MPIEXC03",10,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="OPTIONAL TEXT:"_ERRHL,LIN=LIN+1
"RTN","MPIEXC03",11,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SITE OF OCCURRENCE:200M",LIN=LIN+1
"RTN","MPIEXC03",12,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SITE REPORTING:200M",LIN=LIN+1
"RTN","MPIEXC03",13,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="DATE/TIME REPORTED:"_$$NOW^XLFDT,LIN=LIN+1
"RTN","MPIEXC03",14,0)
 I $G(ICN) D
"RTN","MPIEXC03",15,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**PATIENT DATA**",LIN=LIN+1
"RTN","MPIEXC03",16,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="ICN:"_ICN,LIN=LIN+1
"RTN","MPIEXC03",17,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="NAME:"_$P(^MPIVET(ICN,0),"^",2)_","_$P(^MPIVET(ICN,0),"^",3),LIN=LIN+1
"RTN","MPIEXC03",18,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SSN:"_$P($G(^MPIVET(ICN,0)),"^",14),LIN=LIN+1
"RTN","MPIEXC03",19,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="CMOR:"_$P($G(^MPIVET(ICN,1)),"^",2),LIN=LIN+1
"RTN","MPIEXC03",20,0)
 S MSGID=$G(HL("MID"))
"RTN","MPIEXC03",21,0)
 I MSGID'="" D
"RTN","MPIEXC03",22,0)
 . N MSGIEN
"RTN","MPIEXC03",23,0)
 . K HLMSG
"RTN","MPIEXC03",24,0)
 . S MSGIEN=$O(^HLMA("C",MSGID,0))
"RTN","MPIEXC03",25,0)
 . S DIC="^HLMA(",DR="7,13,151,6",DA=MSGIEN,DIQ(0)="IE",DIQ="HLMSG"
"RTN","MPIEXC03",26,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","MPIEXC03",27,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**HL7 MESSAGE**",LIN=LIN+1
"RTN","MPIEXC03",28,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="EVENT TYPE:"_$G(HLMSG(773,MSGIEN,16,"I")),LIN=LIN+1
"RTN","MPIEXC03",29,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="LOGICAL LINK:"_$G(HLMSG(773,MSGIEN,7,"E")),LIN=LIN+1
"RTN","MPIEXC03",30,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="MSG TYPE:"_$G(HLMSG(773,MSGIEN,15,"I")),LIN=LIN+1
"RTN","MPIEXC03",31,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="MSGID:"_MSGID,LIN=LIN+1
"RTN","MPIEXC03",32,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SENDING APPLICATION:"_$G(HLMSG(773,MSGIEN,13,"E")),LIN=LIN+1
"RTN","MPIEXC03",33,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**END**",LIN=LIN+1
"RTN","MPIEXC03",34,0)
 D MAIL
"RTN","MPIEXC03",35,0)
 K LIN
"RTN","MPIEXC03",36,0)
 Q
"RTN","MPIEXC03",37,0)
MAIL ;
"RTN","MPIEXC03",38,0)
 N SERVER,XMDUZ,XMTEXT,XMSUB,XMY
"RTN","MPIEXC03",39,0)
 S SERVER=$$SERVER()
"RTN","MPIEXC03",40,0)
 Q:$G(SERVER)=""
"RTN","MPIEXC03",41,0)
 S XMDUZ="MPI AUSTIN EXCEPTIONS"
"RTN","MPIEXC03",42,0)
 S XMTEXT="^TMP($J,""MPI SERVER EXCEPTION"","
"RTN","MPIEXC03",43,0)
 S XMSUB="MPI/PD EXCEPTION"
"RTN","MPIEXC03",44,0)
 S XMY(.5)=""
"RTN","MPIEXC03",45,0)
 S XMY(SERVER)=""
"RTN","MPIEXC03",46,0)
 D ^XMD
"RTN","MPIEXC03",47,0)
 Q
"RTN","MPIEXC03",48,0)
SERVER()        ;
"RTN","MPIEXC03",49,0)
        ;Description: Returns the <server name>@<server domain>. This entry
"RTN","MPIEXC03",50,0)
        ;returns the Servers location either at the test MPI or Production MPI.
"RTN","MPIEXC03",51,0)
        ;If a null is returned the MAIL subroutine will default to the MPIF
"RTN","MPIEXC03",52,0)
        ;EXCEPTIONS mail group
"RTN","MPIEXC03",53,0)
        ;
"RTN","MPIEXC03",54,0)
        ;Input: none
"RTN","MPIEXC03",55,0)
        ;Output: Where to send the exception.Returns the <server name>@<server domain> or Null
"RTN","MPIEXC03",56,0)
        ;
"RTN","MPIEXC03",57,0)
        N TO,IEN
"RTN","MPIEXC03",58,0)
        S TO=""
"RTN","MPIEXC03",59,0)
        ; get MPI logical link
"RTN","MPIEXC03",60,0)
        D LINK^HLUTIL3("200M",.HLL,"I")
"RTN","MPIEXC03",61,0)
        ; get MPI domain DBIA 3335
"RTN","MPIEXC03",62,0)
        S IEN=$O(HLL(0)) I +IEN>0 S TO=$$GET1^DIQ(870,+IEN_",",.03) I TO'="" S TO="S.MPI EXCEPTION SERVER@"_TO
"RTN","MPIEXC03",63,0)
        Q TO
"RTN","MPIEXC04")
0^41^B12172655
"RTN","MPIEXC04",1,0)
MPIEXC04 ;BAY/ALS - LIST MANAGER ROUTINE FOR MPI EXCEPTION HANDLER ;30 Sept 2001
"RTN","MPIEXC04",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5,20,27,24,33**;30 Apr 1999
"RTN","MPIEXC04",3,0)
EN(ICN) ;Main entry point for MPIX EXCPT PDAT
"RTN","MPIEXC04",4,0)
 D EN^VALM("MPIX EXCPT PDAT")
"RTN","MPIEXC04",5,0)
 Q
"RTN","MPIEXC04",6,0)
HDR ;header code
"RTN","MPIEXC04",7,0)
 S VALMHDR(1)="MPI EXCEPTION PATIENT DATA"
"RTN","MPIEXC04",8,0)
 S VALMHDR(2)=""
"RTN","MPIEXC04",9,0)
 Q
"RTN","MPIEXC04",10,0)
INIT ;
"RTN","MPIEXC04",11,0)
 K ^TMP("MPIEXC4",$J)
"RTN","MPIEXC04",12,0)
 K @VALMAR
"RTN","MPIEXC04",13,0)
 I '$D(ICN) G EXIT
"RTN","MPIEXC04",14,0)
 I '$D(^TMP("MPIXHFS",$J)) G EXIT
"RTN","MPIEXC04",15,0)
 S LIN=1,X=0,STR="",TXT=""
"RTN","MPIEXC04",16,0)
 F  S X=$O(^TMP("MPIXHFS",$J,X)) Q:'X  D
"RTN","MPIEXC04",17,0)
 . S TXT=^TMP("MPIXHFS",$J,X)
"RTN","MPIEXC04",18,0)
 . I $E(TXT,1,12)'="Enter RETURN" D
"RTN","MPIEXC04",19,0)
 .. S STR=$$SETSTR^VALM1(TXT,STR,2,78)
"RTN","MPIEXC04",20,0)
 .. D ADDTMP
"RTN","MPIEXC04",21,0)
 S VALMCNT=LIN-1
"RTN","MPIEXC04",22,0)
 Q
"RTN","MPIEXC04",23,0)
ADDTMP ;
"RTN","MPIEXC04",24,0)
 S ^TMP("MPIEXC4",$J,LIN,0)=STR
"RTN","MPIEXC04",25,0)
 S ^TMP("MPIEXC4",$J,"IDX",LIN,LIN)=""
"RTN","MPIEXC04",26,0)
 S LIN=LIN+1,STR=""
"RTN","MPIEXC04",27,0)
 Q
"RTN","MPIEXC04",28,0)
RSEND ;Send remote PDAT Query
"RTN","MPIEXC04",29,0)
 S VALMBCK=""
"RTN","MPIEXC04",30,0)
 N RICN,RSSN S RICN=ICN,RSSN=SSN
"RTN","MPIEXC04",31,0)
 N VALUE D  ;**27
"RTN","MPIEXC04",32,0)
 . I ICN="" S VALUE="SSN",VALUE("SSN")=SSN Q
"RTN","MPIEXC04",33,0)
 . S VALUE="ICN",VALUE("ICN")=ICN ;**20
"RTN","MPIEXC04",34,0)
 D FULL^VALM1
"RTN","MPIEXC04",35,0)
 I $S(ICN'="":1,SSN'="":1,1:0) D SEND^MPIRPDAT
"RTN","MPIEXC04",36,0)
 I ICN=""&(SSN="") W !!,"ICN or SSN required for Remote Patient Data"
"RTN","MPIEXC04",37,0)
 D PAUSE^VALM1
"RTN","MPIEXC04",38,0)
 S ICN=RICN,SSN=RSSN
"RTN","MPIEXC04",39,0)
 D INIT
"RTN","MPIEXC04",40,0)
 S VALMBCK="R"
"RTN","MPIEXC04",41,0)
 Q
"RTN","MPIEXC04",42,0)
RCHK ;Check Remote PDAT Query Status
"RTN","MPIEXC04",43,0)
 S VALMBCK=""
"RTN","MPIEXC04",44,0)
 N RICN,RSSN S RICN=ICN,RSSN=SSN
"RTN","MPIEXC04",45,0)
 N VALUE D  ;**27
"RTN","MPIEXC04",46,0)
 . I ICN="" S VALUE="SSN",VALUE("SSN")=SSN Q
"RTN","MPIEXC04",47,0)
 . S VALUE="ICN",VALUE("ICN")=ICN ;**20
"RTN","MPIEXC04",48,0)
 D FULL^VALM1
"RTN","MPIEXC04",49,0)
 D CHKSTAT^MPIRPDT2 ;**20
"RTN","MPIEXC04",50,0)
 D PAUSE^VALM1
"RTN","MPIEXC04",51,0)
 S ICN=RICN,SSN=RSSN
"RTN","MPIEXC04",52,0)
 D INIT
"RTN","MPIEXC04",53,0)
 S VALMBCK="R"
"RTN","MPIEXC04",54,0)
 Q
"RTN","MPIEXC04",55,0)
RDISP ;
"RTN","MPIEXC04",56,0)
 S VALMBCK=""
"RTN","MPIEXC04",57,0)
 N RICN,RSSN S RICN=ICN,RSSN=SSN
"RTN","MPIEXC04",58,0)
 N VALUE D  ;**27
"RTN","MPIEXC04",59,0)
 . I ICN="" S VALUE="SSN",VALUE("SSN")=SSN Q
"RTN","MPIEXC04",60,0)
 . S VALUE="ICN",VALUE("ICN")=ICN ;**20
"RTN","MPIEXC04",61,0)
 D FULL^VALM1
"RTN","MPIEXC04",62,0)
 W !!,"Display data returned from remote patient data queries."
"RTN","MPIEXC04",63,0)
 S TFL="",L="",Y="",ICNARR="",STATUS=""
"RTN","MPIEXC04",64,0)
 I $S(VALUE(VALUE)="":1,'$D(^XTMP("MPIRPDAT",VALUE(VALUE))):1,1:0) W !!,"No remote query sent for this patient." G QRD ;**20 ;**27
"RTN","MPIEXC04",65,0)
 D TFLST^MPIRPDT2(.VALUE,.TFL) ;**20
"RTN","MPIEXC04",66,0)
 W !!,"-> For ",VALUE," ",$G(VALUE(VALUE)),! ;**27
"RTN","MPIEXC04",67,0)
 I $D(TFL(0)) D
"RTN","MPIEXC04",68,0)
 . S X=0 F  S X=$O(TFL(X)) Q:'X  I '$D(^XTMP("MPIRPDAT",VALUE(VALUE),X)) K TFL(X) ;**20 ;**27
"RTN","MPIEXC04",69,0)
 D SELTF^MPIRPDAT
"RTN","MPIEXC04",70,0)
 I '$D(TFARR) W !,"No remote query sent for this patient." G QRD
"RTN","MPIEXC04",71,0)
 I ((Y="")!(Y="^")) G QRD
"RTN","MPIEXC04",72,0)
 D PAUSE^VALM1
"RTN","MPIEXC04",73,0)
 D EN^MPIEXC05(VALUE(VALUE)) ;**27
"RTN","MPIEXC04",74,0)
QRD D PAUSE^VALM1
"RTN","MPIEXC04",75,0)
 S ICN=RICN,SSN=RSSN
"RTN","MPIEXC04",76,0)
 K ICNARR,L,STATUS,TFL,Y,TFARR ;**20
"RTN","MPIEXC04",77,0)
 D INIT
"RTN","MPIEXC04",78,0)
 S VALMBCK="R"
"RTN","MPIEXC04",79,0)
 Q
"RTN","MPIEXC04",80,0)
PEXT ; Display key fields from all TF sites to find discrepancies.
"RTN","MPIEXC04",81,0)
 S VALMBCK=""
"RTN","MPIEXC04",82,0)
 I $S(ICN="":1,SSN="":1,$P($G(^MPIVET(ICN,"ID_STATE")),"^")="D":1,1:0) W !!,"ICN or SSN required to Display Site Data" D PAUSE^VALM1 G PQUIT ;**27 ;**24
"RTN","MPIEXC04",83,0)
 N RICN,RSSN S RICN=ICN,RSSN=SSN
"RTN","MPIEXC04",84,0)
 D FULL^VALM1
"RTN","MPIEXC04",85,0)
 D PEXT^MPIPEXT(.RETURN,RICN,$S(RICN="":RSSN,1:""),"",1,"",0) ;**27
"RTN","MPIEXC04",86,0)
 D PAUSE^VALM1
"RTN","MPIEXC04",87,0)
 D EN^MPIEXC06
"RTN","MPIEXC04",88,0)
 S ICN=RICN,SSN=RSSN
"RTN","MPIEXC04",89,0)
PQUIT D INIT
"RTN","MPIEXC04",90,0)
 S VALMBCK="R"
"RTN","MPIEXC04",91,0)
 K RETURN
"RTN","MPIEXC04",92,0)
 Q
"RTN","MPIEXC04",93,0)
HELP ;
"RTN","MPIEXC04",94,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","MPIEXC04",95,0)
 Q
"RTN","MPIEXC04",96,0)
EXIT ;
"RTN","MPIEXC04",97,0)
 S VALMBCK=""
"RTN","MPIEXC04",98,0)
 K ^TMP("MPIEXC4",$J),LIN,X,STR,TXT
"RTN","MPIEXC04",99,0)
 S VALMBCK="R"
"RTN","MPIEXC04",100,0)
 Q
"RTN","MPIEXC05")
0^42^B11735025
"RTN","MPIEXC05",1,0)
MPIEXC05 ;BAY/ALS - LIST MANAGER ROUTINE FOR MPI REMOTE PDAT ;30 Sept 2001
"RTN","MPIEXC05",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5,20,27,33**;30 Apr 1999
"RTN","MPIEXC05",3,0)
 ;Reference to RPCCHK^XWB2HL7  supported by IA #3144
"RTN","MPIEXC05",4,0)
 ;Reference to RTNDATA^XWBDRPC supported by IA #3149
"RTN","MPIEXC05",5,0)
EN(ICN) ;Main Entry Point for MPIX EXCPT RPDAT
"RTN","MPIEXC05",6,0)
 D EN^VALM("MPIX EXCPT RPDAT")
"RTN","MPIEXC05",7,0)
 Q
"RTN","MPIEXC05",8,0)
HDR ;header code
"RTN","MPIEXC05",9,0)
 S VALMHDR(1)="MPI EXCEPTION REMOTE PATIENT DATA"
"RTN","MPIEXC05",10,0)
 S VALMHDR(2)=""
"RTN","MPIEXC05",11,0)
 Q
"RTN","MPIEXC05",12,0)
INIT ;
"RTN","MPIEXC05",13,0)
 K ^TMP("MPIEXC5",$J)
"RTN","MPIEXC05",14,0)
 K @VALMAR
"RTN","MPIEXC05",15,0)
 I '$D(VALUE) G EXIT
"RTN","MPIEXC05",16,0)
 S LIN=1,STR="",TXT=""
"RTN","MPIEXC05",17,0)
 S TXT="-> For "_VALUE_" "_VALUE(VALUE) S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","MPIEXC05",18,0)
 S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIEXC05",19,0)
 . S SL=$P(TFARR(L),"^",1)
"RTN","MPIEXC05",20,0)
 . S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIEXC05",21,0)
 . I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIEXC05",22,0)
 . E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIEXC05",23,0)
 . E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIEXC05",24,0)
 . E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIEXC05",25,0)
 . S TXT="  "_$P(TFL(SL),"^")_"  status: ("_STATUS_")"
"RTN","MPIEXC05",26,0)
 . D ADDTMP
"RTN","MPIEXC05",27,0)
 . S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP D
"RTN","MPIEXC05",28,0)
 . ;D DISPLAY^MPIRPDAT(ICN,$P((TFL(SL),"^",2)
"RTN","MPIEXC05",29,0)
 . S LOC=$P(TFL(SL),"^",2)
"RTN","MPIEXC05",30,0)
 . N STATUS,RETURN,RESULT,RET,RESULT
"RTN","MPIEXC05",31,0)
 . I '$D(^XTMP("MPIRPDAT",VALUE(VALUE),0)) S TXT=" - No PDAT query exists." S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP ;**20
"RTN","MPIEXC05",32,0)
 . I $D(^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0)) D
"RTN","MPIEXC05",33,0)
 .. ; ^ **20 \/
"RTN","MPIEXC05",34,0)
 .. S RETURN(0)=$P(^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0),"^")
"RTN","MPIEXC05",35,0)
 .. D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D
"RTN","MPIEXC05",36,0)
 ... D RTNDATA^XWBDRPC(.RET,RETURN(0)) D
"RTN","MPIEXC05",37,0)
 ... S R="" F  S R=$O(RET(R)) Q:R=""  S TXT=RET(R) S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","MPIEXC05",38,0)
 .. I $D(RET(0)) I RET(0)<0 S TXT="No Data Returned Due To: "_$P(RET(0),"^",2) S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","MPIEXC05",39,0)
 K ICNARR D CHKDUPS^MPIRUTL(.VALUE,.ICNARR) ;**20,33
"RTN","MPIEXC05",40,0)
 ;Check XTMP to see if duplicate queries were sent
"RTN","MPIEXC05",41,0)
 I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIEXC05",42,0)
 . D ADDTMP
"RTN","MPIEXC05",43,0)
 . S TXT="  Duplicate ICN List:" S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","MPIEXC05",44,0)
 . ;get ICN TFL list
"RTN","MPIEXC05",45,0)
 . S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIEXC05",46,0)
 .. S TXT="-> ICN "_ICN S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","MPIEXC05",47,0)
 .. D ADDTMP
"RTN","MPIEXC05",48,0)
 .. D DUPDISP
"RTN","MPIEXC05",49,0)
 S VALMCNT=LIN-1
"RTN","MPIEXC05",50,0)
 Q
"RTN","MPIEXC05",51,0)
DUPDISP ;
"RTN","MPIEXC05",52,0)
 ;**20 \/
"RTN","MPIEXC05",53,0)
 I $D(^XTMP("MPIRPDAT",ICN)) D
"RTN","MPIEXC05",54,0)
 . K TFL D TFLST^MPIRPDT2(.VALUE,.TFL) ; < **20 \/
"RTN","MPIEXC05",55,0)
 . S L=0 F  S L=$O(TFL(L)) Q:'L  I $D(^XTMP("MPIRPDAT",ICN,L,0)) D
"RTN","MPIEXC05",56,0)
 .. S TXT=L_"  "_$P(TFL(L),"^")_"  status:("_$P(TFL(L),"^",3)_")" S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP D
"RTN","MPIEXC05",57,0)
 ... S RETURN(0)=$P(^XTMP("MPIRPDAT",ICN,L,0),"^") ;LOC to L **20
"RTN","MPIEXC05",58,0)
 ... D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D
"RTN","MPIEXC05",59,0)
 .... D RTNDATA^XWBDRPC(.RET,RETURN(0))
"RTN","MPIEXC05",60,0)
 .... S R="" F  S R=$O(RET(R)) Q:R=""  S TXT=RET(R) S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","MPIEXC05",61,0)
 .... I $D(RET(0)) I RET(0)<0 S TXT="No Data Returned Due To: "_$P(RET(0),"^",2) S STR=$$SETSTR^VALM1(TXT,STR,2,78) D ADDTMP
"RTN","MPIEXC05",62,0)
 Q
"RTN","MPIEXC05",63,0)
ADDTMP ;
"RTN","MPIEXC05",64,0)
 S ^TMP("MPIEXC5",$J,LIN,0)=STR
"RTN","MPIEXC05",65,0)
 S ^TMP("MPIEXC5",$J,"IDX",LIN,LIN)=""
"RTN","MPIEXC05",66,0)
 S LIN=LIN+1,STR=""
"RTN","MPIEXC05",67,0)
 Q
"RTN","MPIEXC05",68,0)
HELP ;
"RTN","MPIEXC05",69,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","MPIEXC05",70,0)
 Q
"RTN","MPIEXC05",71,0)
EXIT ;
"RTN","MPIEXC05",72,0)
 S VALMBCK=""
"RTN","MPIEXC05",73,0)
 K ^TMP("MPIEXC5",$J),LIN,STR,L,R,SL,LOC
"RTN","MPIEXC05",74,0)
 S VALMBCK="R"
"RTN","MPIEXC05",75,0)
 Q
"RTN","MPIEXC06")
0^43^B11017955
"RTN","MPIEXC06",1,0)
MPIEXC06 ;BAY/ALS - Show discrepencies in TF site data ; 31 Jan 2002
"RTN","MPIEXC06",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5**;30 Apr 1999
"RTN","MPIEXC06",3,0)
EN ;Main entry point for MPIX EXCPT PEXT
"RTN","MPIEXC06",4,0)
 D EN^VALM("MPIX EXCPT PEXT")
"RTN","MPIEXC06",5,0)
 Q
"RTN","MPIEXC06",6,0)
HDR ;header code
"RTN","MPIEXC06",7,0)
 S VALMHDR(1)="MPI EXCEPTION PATIENT DATA COMPARE"
"RTN","MPIEXC06",8,0)
 S VALMHDR(2)=""
"RTN","MPIEXC06",9,0)
 Q
"RTN","MPIEXC06",10,0)
INIT ;
"RTN","MPIEXC06",11,0)
 K ^TMP("MPIEXC6",$J)
"RTN","MPIEXC06",12,0)
 K @VALMAR
"RTN","MPIEXC06",13,0)
 I '$D(ICN) G EXIT
"RTN","MPIEXC06",14,0)
 S SIT="",SITE="",LIN=1,STR="",TXT=""
"RTN","MPIEXC06",15,0)
 N SDFN,CMOR,NM,SN,SX,DB,DD,MMN,POBC,POBS
"RTN","MPIEXC06",16,0)
 F  S SIT=$O(RETURN(SIT)) Q:SIT=""  D
"RTN","MPIEXC06",17,0)
 . S ERR="",IEN="",IEN1=""
"RTN","MPIEXC06",18,0)
 . I $D(RETURN(SIT,0)) S ERR=RETURN(SIT,0) D GETSIT D LN1
"RTN","MPIEXC06",19,0)
 . E  I $D(RETURN(SIT,SIT)) S ERR=RETURN(SIT,SIT) D GETSIT D LN1
"RTN","MPIEXC06",20,0)
 . S SDFN=""
"RTN","MPIEXC06",21,0)
 . S SDFN=$O(RETURN(SIT,SDFN)) Q:'SDFN  D
"RTN","MPIEXC06",22,0)
 .. I SIT=SDFN Q
"RTN","MPIEXC06",23,0)
 .. I SIT="MPI" S SDFN=RICN
"RTN","MPIEXC06",24,0)
 .. S CMOR=$P($G(RETURN(SIT,SDFN,"CMOR")),"""",2)
"RTN","MPIEXC06",25,0)
 .. S SITE=SIT
"RTN","MPIEXC06",26,0)
 .. I SIT'="MPI" D
"RTN","MPIEXC06",27,0)
 ... D GETSIT
"RTN","MPIEXC06",28,0)
 ... D GETCMOR
"RTN","MPIEXC06",29,0)
 .. S NM=$P($G(RETURN(SIT,SDFN,"NAME")),"""",2)
"RTN","MPIEXC06",30,0)
 .. S SN=$P($G(RETURN(SIT,SDFN,"SSN")),"""",2)
"RTN","MPIEXC06",31,0)
 .. S SX=$P($G(RETURN(SIT,SDFN,"SEX")),"""",2)
"RTN","MPIEXC06",32,0)
 .. S DB=$P($G(RETURN(SIT,SDFN,"DOB")),"""",2)
"RTN","MPIEXC06",33,0)
 .. S DD=$P($G(RETURN(SIT,SDFN,"DOD")),"""",2)
"RTN","MPIEXC06",34,0)
 .. S MMN=$P($G(RETURN(SIT,SDFN,"MMN")),"""",2)
"RTN","MPIEXC06",35,0)
 .. S POBC=$P($G(RETURN(SIT,SDFN,"POBC")),"""",2)
"RTN","MPIEXC06",36,0)
 .. S POBS=$P($G(RETURN(SIT,SDFN,"POBS")),"""",2)
"RTN","MPIEXC06",37,0)
 .. D LN1
"RTN","MPIEXC06",38,0)
 .. D LN2
"RTN","MPIEXC06",39,0)
 K RETURN,SIT
"RTN","MPIEXC06",40,0)
 Q
"RTN","MPIEXC06",41,0)
GETSIT ;get site name
"RTN","MPIEXC06",42,0)
 S IEN1=$$IEN^XUAF4(SIT) I IEN1>0 S SITE=$P($$NS^XUAF4(IEN1),"^",1)
"RTN","MPIEXC06",43,0)
 Q
"RTN","MPIEXC06",44,0)
GETCMOR ;get CMOR name
"RTN","MPIEXC06",45,0)
 S IEN=$$IEN^XUAF4(CMOR) I IEN>0 S CMOR=$P($$NS^XUAF4(IEN),"^",1)
"RTN","MPIEXC06",46,0)
 Q
"RTN","MPIEXC06",47,0)
ADDTMP ;
"RTN","MPIEXC06",48,0)
 S ^TMP("MPIEXC6",$J,LIN,0)=STR
"RTN","MPIEXC06",49,0)
 S ^TMP("MPIEXC6",$J,"IDX",LIN,LIN)=""
"RTN","MPIEXC06",50,0)
 S LIN=LIN+1,STR=""
"RTN","MPIEXC06",51,0)
 Q
"RTN","MPIEXC06",52,0)
LN1 ;
"RTN","MPIEXC06",53,0)
 I SITE="MPI" S TXT="SITE              ICN        CMOR               NAME"
"RTN","MPIEXC06",54,0)
 E  S TXT="SITE              DFN        CMOR               NAME"
"RTN","MPIEXC06",55,0)
 I $D(RETURN(SIT,0))!$D(RETURN(SIT,SIT)) S TXT="SITE              ERROR"
"RTN","MPIEXC06",56,0)
 D CNTRL^VALM10(LIN,1,78,IORVON,IOINORM)
"RTN","MPIEXC06",57,0)
 S STR=$$SETSTR^VALM1(TXT,STR,1,78) D ADDTMP
"RTN","MPIEXC06",58,0)
 S STR=$$SETSTR^VALM1(SITE,STR,1,17)
"RTN","MPIEXC06",59,0)
 I $D(RETURN(SIT,0))!$D(RETURN(SIT,SIT)) S STR=$$SETSTR^VALM1(ERR,STR,19,50) D ADDTMP G QLN2
"RTN","MPIEXC06",60,0)
 S STR=$$SETSTR^VALM1(SDFN,STR,19,10)
"RTN","MPIEXC06",61,0)
 S STR=$$SETSTR^VALM1(CMOR,STR,30,18)
"RTN","MPIEXC06",62,0)
 S STR=$$SETSTR^VALM1(NM,STR,49,20) D ADDTMP
"RTN","MPIEXC06",63,0)
 D ADDTMP
"RTN","MPIEXC06",64,0)
 Q
"RTN","MPIEXC06",65,0)
LN2 ;
"RTN","MPIEXC06",66,0)
 S TXT="    SSN       SEX DOB         DOD         MOTHER'S MDN NM      PLACE OF BIRTH"
"RTN","MPIEXC06",67,0)
 D CNTRL^VALM10(LIN,5,3,IOUON,IOUOFF)
"RTN","MPIEXC06",68,0)
 D CNTRL^VALM10(LIN,15,3,IOUON,IOUOFF)
"RTN","MPIEXC06",69,0)
 D CNTRL^VALM10(LIN,19,3,IOUON,IOUOFF)
"RTN","MPIEXC06",70,0)
 D CNTRL^VALM10(LIN,31,3,IOUON,IOUOFF)
"RTN","MPIEXC06",71,0)
 D CNTRL^VALM10(LIN,43,15,IOUON,IOUOFF)
"RTN","MPIEXC06",72,0)
 D CNTRL^VALM10(LIN,64,14,IOUON,IOUOFF)
"RTN","MPIEXC06",73,0)
 S STR=$$SETSTR^VALM1(TXT,STR,1,78) D ADDTMP
"RTN","MPIEXC06",74,0)
 S STR=$$SETSTR^VALM1(SN,STR,5,10)
"RTN","MPIEXC06",75,0)
 S STR=$$SETSTR^VALM1(SX,STR,16,1)
"RTN","MPIEXC06",76,0)
 S STR=$$SETSTR^VALM1(DB,STR,19,10)
"RTN","MPIEXC06",77,0)
 S STR=$$SETSTR^VALM1(DD,STR,31,10)
"RTN","MPIEXC06",78,0)
 S STR=$$SETSTR^VALM1(MMN,STR,43,18)
"RTN","MPIEXC06",79,0)
 S STR=$$SETSTR^VALM1(POBC_" "_POBS,STR,64,17) D ADDTMP
"RTN","MPIEXC06",80,0)
QLN2 D ADDTMP
"RTN","MPIEXC06",81,0)
 K TXT,SITE,IEN,IEN1
"RTN","MPIEXC06",82,0)
 Q
"RTN","MPIEXC06",83,0)
HELP ;
"RTN","MPIEXC06",84,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","MPIEXC06",85,0)
 Q
"RTN","MPIEXC06",86,0)
EXIT ;
"RTN","MPIEXC06",87,0)
 S VALMBCK=""
"RTN","MPIEXC06",88,0)
 K ^TMP("MPIEXC6",$J),LIN,STR,ERR
"RTN","MPIEXC06",89,0)
 S VALMBCK="R"
"RTN","MPIEXC06",90,0)
 Q
"RTN","MPIEXPRG")
0^44^B4029358
"RTN","MPIEXPRG",1,0)
MPIEXPRG ;BAY/ALS - OPTIONS TO PURGE MPI EXCEPTIONS ;08/31/01
"RTN","MPIEXPRG",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5**;30 Apr 1999
"RTN","MPIEXPRG",3,0)
MAIN ;
"RTN","MPIEXPRG",4,0)
 ; Reference to ^RGHL7(991.11 supported by IA #3208
"RTN","MPIEXPRG",5,0)
 ;
"RTN","MPIEXPRG",6,0)
PRG120 ; Purge Exceptions over 120 days old
"RTN","MPIEXPRG",7,0)
 S TODAY=""
"RTN","MPIEXPRG",8,0)
 S TODAY=$$NOW^XLFDT
"RTN","MPIEXPRG",9,0)
 S EXCDT="",CNT=0,DIFF=""
"RTN","MPIEXPRG",10,0)
 F  S EXCDT=$O(^MPI(985.9,"AG",EXCDT)) Q:'EXCDT  D
"RTN","MPIEXPRG",11,0)
 . S DIFF=$$FMDIFF^XLFDT(TODAY,EXCDT)
"RTN","MPIEXPRG",12,0)
 . I DIFF>90 D
"RTN","MPIEXPRG",13,0)
 .. S STATUS=""
"RTN","MPIEXPRG",14,0)
 .. F  S STATUS=$O(^MPI(985.9,"AG",EXCDT,STATUS)) Q:'STATUS  D
"RTN","MPIEXPRG",15,0)
 ... ; Only delete resolved exceptions
"RTN","MPIEXPRG",16,0)
 ... I STATUS=3 D
"RTN","MPIEXPRG",17,0)
 .... S IEN=0
"RTN","MPIEXPRG",18,0)
 .... F  S IEN=$O(^MPI(985.9,"AG",EXCDT,STATUS,IEN)) Q:'IEN  D
"RTN","MPIEXPRG",19,0)
 ..... D DEL
"RTN","MPIEXPRG",20,0)
 K TODAY,EXCDT,CNT,DIFF,STATUS,IEN
"RTN","MPIEXPRG",21,0)
 Q
"RTN","MPIEXPRG",22,0)
DEL ; Delete exception
"RTN","MPIEXPRG",23,0)
 S CNT=CNT+1
"RTN","MPIEXPRG",24,0)
 S DA=IEN,DIK="^MPI(985.9,"
"RTN","MPIEXPRG",25,0)
 D ^DIK K DIK,DA
"RTN","MPIEXPRG",26,0)
 Q
"RTN","MPIEXPRG",27,0)
PRGTYP ; Purge by Exception Type
"RTN","MPIEXPRG",28,0)
 S CNT=0
"RTN","MPIEXPRG",29,0)
 S DIC="^RGHL7(991.11,",DIC(0)="QEAM"
"RTN","MPIEXPRG",30,0)
 S DIC("A")="Enter the exception type you want to purge: "
"RTN","MPIEXPRG",31,0)
 D ^DIC K DIC G:Y<200 QUIT
"RTN","MPIEXPRG",32,0)
 S EXCTYP=+Y,ETYPE=$P($G(^RGHL7(991.11,EXCTYP,10)),"^",1) I ETYPE="" S ETYPE=EXCTYP
"RTN","MPIEXPRG",33,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","MPIEXPRG",34,0)
 S DIR("A")="*WARNING* This will permanently delete all "_ETYPE_" exceptions.  Are you sure you want to do this?  YES//  "
"RTN","MPIEXPRG",35,0)
 D ^DIR Q:$D(DIRUT)  K DIR I Y>0 D
"RTN","MPIEXPRG",36,0)
 . S CNT=0,IEN=0
"RTN","MPIEXPRG",37,0)
 . F  S IEN=$O(^MPI(985.9,"C",EXCTYP,IEN)) Q:'IEN  D
"RTN","MPIEXPRG",38,0)
 .. D DEL
"RTN","MPIEXPRG",39,0)
 I CNT=0 W !,"There are no "_ETYPE_" exceptions on file."
"RTN","MPIEXPRG",40,0)
 E  I CNT>0 W !,CNT_" "_ETYPE_" exceptions purged."
"RTN","MPIEXPRG",41,0)
 K ETYPE,EXCTYP,CNT,IEN,X,Y
"RTN","MPIEXPRG",42,0)
QUIT Q
"RTN","MPIGET")
0^45^B1930529
"RTN","MPIGET",1,0)
MPIGET ;GRR/CONTRACTOR-PROCESS INCOMING HL7 TRANSACTIONS ;10/1/97
"RTN","MPIGET",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,11,19,24**;30 Apr 99
"RTN","MPIGET",3,0)
 ; update 6/26/00 cmc -- removed dead code, updated comments, exceptions
"RTN","MPIGET",4,0)
ADT ;;PROCESS ADT MESSAGE
"RTN","MPIGET",5,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIGET",6,0)
 N MPIEVNC
"RTN","MPIGET",7,0)
 D RETREIVE^MPIUTL1
"RTN","MPIGET",8,0)
 S MPIEVNC=$G(HL("ETN"))
"RTN","MPIGET",9,0)
 K ERRHL
"RTN","MPIGET",10,0)
 ;;G:MPIEVNC="A04" ^MPIREGP  ;**24 this is obsolete
"RTN","MPIGET",11,0)
 ;;G:MPIEVNC="A08" ^MPIUPDP  ;**24 this is obsolete
"RTN","MPIGET",12,0)
 ;;G:MPIEVNC="A28" ^MPIPATAR  <- not done through here, see d/c code
"RTN","MPIGET",13,0)
 G:MPIEVNC="A29" ^MPIDELP
"RTN","MPIGET",14,0)
 ;;G:MPIEVNC="A30" ^MPIMERP <-- not done through here, see new msging
"RTN","MPIGET",15,0)
 G:MPIEVNC="A31" ^MPICPPF
"RTN","MPIGET",16,0)
 ; received another event code - log exception?
"RTN","MPIGET",17,0)
 S ERRHL="Invalid Event Code!"
"RTN","MPIGET",18,0)
 D EXCEPT^MPIUTL2("",ERRHL)
"RTN","MPIGET",19,0)
 K MPITMP
"RTN","MPIGET",20,0)
 Q
"RTN","MPIGET",21,0)
 ;;
"RTN","MPIGET",22,0)
MFI ;;PROCESS MASTER FILE UPDATE MESSAGE FOR ADDING TREATING FACILITIES
"RTN","MPIGET",23,0)
 ;;** updated for task # 192 and 193 to cleanup variables
"RTN","MPIGET",24,0)
 ;D OLDIN^MPITFOUT
"RTN","MPIGET",25,0)
 D RETREIVE^MPIUTL1
"RTN","MPIGET",26,0)
 D ^MPIUMF
"RTN","MPIGET",27,0)
 K MPITMP
"RTN","MPIGET",28,0)
 Q
"RTN","MPILMBJ")
0^64^B19202231
"RTN","MPILMBJ",1,0)
MPILMBJ ;BIR/LTL-LOCAL/MISSING ICN BACKGROUND JOB ;12/17/96
"RTN","MPILMBJ",2,0)
 ;;1.0; MASTER PATIENT INDEX AUSTIN ;**15,19,21,23,27,24**;30 Apr 99
"RTN","MPILMBJ",3,0)
 ;;
"RTN","MPILMBJ",4,0)
 ;Reference to $$NEWGCPR^OMGPID01 supported by IA #3495
"RTN","MPILMBJ",5,0)
 ;
"RTN","MPILMBJ",6,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPILMBJ",7,0)
 S ZTIO="MPI BATCH",ZTRTN="EN^MPILMBJ",ZTDTH=$H,ZTSAVE("HL*")=""
"RTN","MPILMBJ",8,0)
 S ZTDESC="MPI BATCH LOAD"
"RTN","MPILMBJ",9,0)
 D ^%ZTLOAD
"RTN","MPILMBJ",10,0)
 K ZTDESC,ZTDTH,ZTIO,ZTREQ,ZTRTN,ZTSAVE
"RTN","MPILMBJ",11,0)
 Q
"RTN","MPILMBJ",12,0)
 ;
"RTN","MPILMBJ",13,0)
EN K MPIDIRQ
"RTN","MPILMBJ",14,0)
 N HLTCPADD,HLTCPCS,HLTCPLNK,HLTCPO,HLTCPORT,MPII,MPI
"RTN","MPILMBJ",15,0)
EN1 K ^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","MPILMBJ",16,0)
 D NOW^%DTC
"RTN","MPILMBJ",17,0)
 S ^TMP("MPILMBJ",$J)="",^TMP("MPILMBJ",$J,0)=%+2_"^"_%_"^Local Missing BCK Job"
"RTN","MPILMBJ",18,0)
 ; ^ FLAG TO KNOW THIS PATIENT IS FROM LOCAL MISSING JOB
"RTN","MPILMBJ",19,0)
 N MPIFID,SG,MSG
"RTN","MPILMBJ",20,0)
 S HLSDT="VTQ",GBL="^TMP(""HLA"",$J)",ZTREQ="@"
"RTN","MPILMBJ",21,0)
 S (MPIMSHC,MPIBSHC)=0,MPICNT=1,MPIFS=HL("FS"),MPIETN=HL("ETN"),MPIEID=HL("EID"),MPIEIDS=HL("EIDS")
"RTN","MPILMBJ",22,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPILMBJ",23,0)
 .S SG=$E(HLNODE,1,3)
"RTN","MPILMBJ",24,0)
 .S MSG=HLNODE
"RTN","MPILMBJ",25,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPILMBJ",26,0)
 .D:SG?2A1(1A,1N) PICK
"RTN","MPILMBJ",27,0)
 N MPIFID,MPIFERR
"RTN","MPILMBJ",28,0)
 D CREATE^HLTF(.MPIFID,.MTIEN,.HLDT,.HLDT1)
"RTN","MPILMBJ",29,0)
 ;**Changes for dynamic addressing - 12/2/97 - CMC
"RTN","MPILMBJ",30,0)
 ;** Setup HLL("LINKS",1)=HL7 Client Protocol^Logical Link
"RTN","MPILMBJ",31,0)
 N MPISI,MPICI K HLL("LINKS")
"RTN","MPILMBJ",32,0)
 S $P(HLL("LINKS",1),"^")="MPI TEST"
"RTN","MPILMBJ",33,0)
 S $P(HLL("LINKS",1),"^",2)=$O(^HLCS(870,"C",MPIFAC,""))
"RTN","MPILMBJ",34,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,MPIEIDS,"GB",1,.MPIFERR,MTIEN)
"RTN","MPILMBJ",35,0)
END K ^TMP("HLA",$J),MPIWHO,GBL,HLSDT,MPIBSHC,MPICNT,MPIERR,MPIFAC,MPIFACSN
"RTN","MPILMBJ",36,0)
 K MPIJ,MPIMSH,MPIMSHC,MPINMSH,MPIPAR,MPIRDF,MPIRDT,MPIRDTC,MPITYP,X,%
"RTN","MPILMBJ",37,0)
 K MPIVTQN,MTIEN,STOP,TCNT,MPIMCN,HLDT,HLDT1,HLERR,HLL,MPIFS,MPIETN,MPIEID,MPIEIDS
"RTN","MPILMBJ",38,0)
 ; $O THRU ^TMP("MPILMBJ",$J getting newly created ICNs to notify FHIE
"RTN","MPILMBJ",39,0)
 I $D(^TMP("MPILMBJ",$J)) D
"RTN","MPILMBJ",40,0)
 .N TSK,ICN S ICN=0 F  S ICN=$O(^TMP("MPILMBJ",$J,ICN)) Q:ICN=""  D
"RTN","MPILMBJ",41,0)
 ..Q:$P($G(^MPIVET(ICN,"ID_STATE")),"^")'="P"  ;**24
"RTN","MPILMBJ",42,0)
 ..S TSK=$$NEWGCPR^OMGPID01(ICN) ;call GCPR to add patient
"RTN","MPILMBJ",43,0)
 K ^TMP("MPILMBJ",$J)
"RTN","MPILMBJ",44,0)
 Q
"RTN","MPILMBJ",45,0)
PICK ;check routine for segment entry point
"RTN","MPILMBJ",46,0)
 I $T(@SG)]"" D @SG
"RTN","MPILMBJ",47,0)
 I $T(@SG)="" Q
"RTN","MPILMBJ",48,0)
 Q
"RTN","MPILMBJ",49,0)
 ;
"RTN","MPILMBJ",50,0)
MSH ;
"RTN","MPILMBJ",51,0)
 S MPIMSHC=MPIMSHC+1,MPIFACSN=$G(HL("SFN"))
"RTN","MPILMBJ",52,0)
 S MPIFAC=$O(^DIC(4,"D",MPIFACSN,0)),MPIMSH=MSG,MPINMSH=$$REVMSH^MPIUTL1(MPIMSH),MPIMCN=$P(MSG,HL("FS"),10),$P(MPINMSH,HL("FS"),9)="ACK"
"RTN","MPILMBJ",53,0)
 S HL("FS")=$E(MSG,4),HL("ECH")=$E(MSG,5,8)
"RTN","MPILMBJ",54,0)
 S MPICNT=MPICNT+1
"RTN","MPILMBJ",55,0)
 S @GBL@(MPICNT)=MPINMSH
"RTN","MPILMBJ",56,0)
 S MPICNT=MPICNT+1
"RTN","MPILMBJ",57,0)
 S @GBL@(MPICNT)="MSA"_HL("FS")_"AA"_HL("FS")_MPIMCN
"RTN","MPILMBJ",58,0)
 S MPIWHO="LOCAL MISSING ICN JOB"
"RTN","MPILMBJ",59,0)
 Q
"RTN","MPILMBJ",60,0)
VTQ ;
"RTN","MPILMBJ",61,0)
 S MPIVTQN=$P(MSG,MPIFS,2)
"RTN","MPILMBJ",62,0)
 S MPITYP=$P(MSG,MPIFS,4)
"RTN","MPILMBJ",63,0)
 S MPIPAR=$P(MSG,MPIFS,6)
"RTN","MPILMBJ",64,0)
 Q
"RTN","MPILMBJ",65,0)
RDF ;
"RTN","MPILMBJ",66,0)
 N RDFCNT
"RTN","MPILMBJ",67,0)
 S MPICNT=MPICNT+1
"RTN","MPILMBJ",68,0)
 S MPIRDF(1)=MSG
"RTN","MPILMBJ",69,0)
 S RDFCNT=2 S X=0 F  S X=$O(MSG(X)) Q:'X  D
"RTN","MPILMBJ",70,0)
 . S MPIRDF(RDFCNT)=MSG(X)
"RTN","MPILMBJ",71,0)
 . S RDFCNT=RDFCNT+1,HL("FS")=MPIFS
"RTN","MPILMBJ",72,0)
 D LAYGO^MPIVTQ(MPIPAR,.MPIRDF,MPIFAC,"MPIRDT",.MPIERR,MPITYP)
"RTN","MPILMBJ",73,0)
 S HL("FS")=MPIFS,HL("ETN")=MPIETN,HL("EID")=MPIEID
"RTN","MPILMBJ",74,0)
 S MPICNT=MPICNT+1
"RTN","MPILMBJ",75,0)
 S @GBL@(MPICNT)="QAK"_MPIFS_MPIVTQN_MPIFS_$S($O(MPIRDT(0))'="":"OK ",1:"NO DATA - "_$G(MPIERR)) ;GRR/2-17-98/TO PASS ERROR CONDITION
"RTN","MPILMBJ",76,0)
 S MPICNT=MPICNT+1
"RTN","MPILMBJ",77,0)
 S @GBL@(MPICNT)=MPIRDF(1)
"RTN","MPILMBJ",78,0)
 S X=1 F  S X=$O(MPIRDF(X)) Q:'X  D
"RTN","MPILMBJ",79,0)
 . S @GBL@(MPICNT,X)=MPIRDF(X)
"RTN","MPILMBJ",80,0)
 S MPICNT=MPICNT+1
"RTN","MPILMBJ",81,0)
 S TCNT=MPICNT
"RTN","MPILMBJ",82,0)
 S MPIRDTC=0,STOP=0
"RTN","MPILMBJ",83,0)
 F  S MPIRDTC=$O(MPIRDT(MPIRDTC)) Q:'MPIRDTC!(STOP)  D
"RTN","MPILMBJ",84,0)
 .;due to the way direct connects work check for blank line to indicate
"RTN","MPILMBJ",85,0)
 .;a separation between hl7 RDT segments
"RTN","MPILMBJ",86,0)
 .I $G(MPIRDT(MPIRDTC))="" S MPICNT=MPICNT+1
"RTN","MPILMBJ",87,0)
 .;if the global location exist this is a continuation of the previous segment
"RTN","MPILMBJ",88,0)
 .I $G(@GBL@(MPICNT))'="" S @GBL@(MPICNT,$O(@GBL@(MPICNT,""),-1)+1)=MPIRDT(MPIRDTC)
"RTN","MPILMBJ",89,0)
 .;if the global does not exist it is the first 245 characters in the segment
"RTN","MPILMBJ",90,0)
 .I $G(@GBL@(MPICNT))="" S @GBL@(MPICNT)=MPIRDT(MPIRDTC)
"RTN","MPILMBJ",91,0)
 .;;I $O(MPIRDT(MPIRDTC))'="",MPITYP["ICN_LOAD" K @GBL@(MPICNT),@GBL@(TCNT) S @GBL@(TCNT-1)="QAK"_MPIFS_MPIVTQN_MPIFS_"NO DATA - POTENTIAL MATCHES FOUND",STOP=1 Q
"RTN","MPILMBJ",92,0)
 Q
"RTN","MPILMBJ",93,0)
ERR S MPICNT=MPICNT+1
"RTN","MPILMBJ",94,0)
 S @GBL@(MPICNT)=MPINMSH
"RTN","MPILMBJ",95,0)
 S MPICNT=MPICNT+1
"RTN","MPILMBJ",96,0)
 S @GBL@(MPICNT)="MSA"_MPIFS_"AR"_MPIFS_MPIMCN_MPIFS_HLERR
"RTN","MPILMBJ",97,0)
 Q
"RTN","MPIMBC")
0^66^B18998077
"RTN","MPIMBC",1,0)
MPIMBC ;BIR/CML-Broadcast Treating Facility Update to Sites from MPI ;7/9/02
"RTN","MPIMBC",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,24**;30 Apr 99
"RTN","MPIMBC",3,0)
 ;
"RTN","MPIMBC",4,0)
BC ;broadcast TF update from MPI
"RTN","MPIMBC",5,0)
 D BC^MPIRUTLI I QFLG K QFLG Q
"RTN","MPIMBC",6,0)
 ;
"RTN","MPIMBC",7,0)
ASK ;Ask for PATIENT
"RTN","MPIMBC",8,0)
 K ICN,SSN
"RTN","MPIMBC",9,0)
 I $D(DIRUT) G QUIT
"RTN","MPIMBC",10,0)
 ;
"RTN","MPIMBC",11,0)
 W ! K ICN
"RTN","MPIMBC",12,0)
 K DIC S DIC="^MPIVET(",DIC(0)="QEAM",DIC("A")="Select PATIENT (Use ICN, SSN, or SURNAME): "
"RTN","MPIMBC",13,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPIMBC",14,0)
 S ICN=+Y D PDAT(ICN)
"RTN","MPIMBC",15,0)
 ;
"RTN","MPIMBC",16,0)
 G ASK
"RTN","MPIMBC",17,0)
 ;
"RTN","MPIMBC",18,0)
QUIT K ^TMP("MPIMBC",$J)
"RTN","MPIMBC",19,0)
 K %,ICN,SSN,DIC,DIR,DIRUT,PID,Y
"RTN","MPIMBC",20,0)
 Q
"RTN","MPIMBC",21,0)
 ;
"RTN","MPIMBC",22,0)
PDAT(PID) ;parameter passed can be ICN or SSN
"RTN","MPIMBC",23,0)
 ;^TMP("MPIMBC",$J,ICN)=SSN_"^"_LNAME_","_FNAME_" "_MNAME_"^"_DOB_"^"_CMOR_"^"_SEX
"RTN","MPIMBC",24,0)
 ;^TMP("MPIMBC",$J,ICN,AFNAME)=AFSTA
"RTN","MPIMBC",25,0)
 ;
"RTN","MPIMBC",26,0)
 N AF,AF1,AFNAME,AFSTA,BC,CASE,CASEIEN,CMOR,CNT,DOB,FNAME,GOT,LN,LNAME,MNAME,NAME,NODE
"RTN","MPIMBC",27,0)
 N NOIS,PAT,PC1,PG,PIDARR,PRTDT,SEX,SITENM,SITENUM,STATUS,SUF,TYPE,USER,USERNM
"RTN","MPIMBC",28,0)
 ;
"RTN","MPIMBC",29,0)
 K ^TMP("MPIMBC",$J),PIDARR
"RTN","MPIMBC",30,0)
 ;
"RTN","MPIMBC",31,0)
 I '$D(^MPIVET(PID))&'$O(^MPIVET("SSN",PID,0)) W !!,"No MPI entry matches this data." Q
"RTN","MPIMBC",32,0)
 I $P($G(^MPIVET(PID,"ID_STATE")),"^")="D" W !!,"This appears to be a deactivated ICN." Q  ;**24
"RTN","MPIMBC",33,0)
 ;
"RTN","MPIMBC",34,0)
 I $D(^MPIVET(PID)) S ICN=PID,PIDARR(ICN)="" G PRT
"RTN","MPIMBC",35,0)
 S SSN=PID,(CNT,ICN)=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  S PIDARR(ICN)="",CNT=CNT+1
"RTN","MPIMBC",36,0)
 I CNT>1 W !!,"This SSN is associated with more than 1 ICN.",!,"Broadcast aborted." Q
"RTN","MPIMBC",37,0)
 ;
"RTN","MPIMBC",38,0)
PRT ;
"RTN","MPIMBC",39,0)
 S $P(LN,"=",81)=""
"RTN","MPIMBC",40,0)
 D NOW^%DTC S PRTDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","MPIMBC",41,0)
 S ICN=$O(PIDARR(0)) Q:'ICN
"RTN","MPIMBC",42,0)
 D SETDAT
"RTN","MPIMBC",43,0)
 I '$D(^TMP("MPIMBC",$J,ICN)) W !!,"No data found for ICN ",ICN,"." Q
"RTN","MPIMBC",44,0)
 D HDR
"RTN","MPIMBC",45,0)
 S NODE=^TMP("MPIMBC",$J,ICN)
"RTN","MPIMBC",46,0)
 S SSN=$P(NODE,"^"),NAME=$P(NODE,"^",2),DOB=$P(NODE,"^",3),CMOR=$P(NODE,"^",4),SEX=$P(NODE,"^",5)
"RTN","MPIMBC",47,0)
 I CMOR="" S CMOR="UNKNOWN"
"RTN","MPIMBC",48,0)
 S GOT=0 I $D(^MPI(985.2,"ICN",ICN)) D
"RTN","MPIMBC",49,0)
 .S CASEIEN=$O(^MPI(985.2,"ICN",ICN,0)),CASE=$P(^MPI(985.2,CASEIEN,0),"^"),NOIS=$P(^(0),"^",6)
"RTN","MPIMBC",50,0)
 .S STATUS=$P($G(^MPI(985.2,CASEIEN,0)),"^",3) I STATUS="O" S GOT=1 D
"RTN","MPIMBC",51,0)
 ..S USER=$P($G(^MPI(985.2,CASEIEN,0)),"^",2),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMBC",52,0)
 ..W !!,"<<This ICN is actively being worked on - "
"RTN","MPIMBC",53,0)
 ..I NOIS]"" W "NOIS #",NOIS,"/"
"RTN","MPIMBC",54,0)
 ..W "Case #",CASE,?78,">>"
"RTN","MPIMBC",55,0)
 ..W !,"<<Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132),?78,">>"
"RTN","MPIMBC",56,0)
 I $D(^MPI(985.25,ICN,0)),'GOT D
"RTN","MPIMBC",57,0)
 .S USER=$P($G(^MPI(985.25,ICN,0)),"^",3),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMBC",58,0)
 .W !!,"<<THIS ICN IS CURRENTLY CHECKED OUT>>"
"RTN","MPIMBC",59,0)
 .W !,"Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMBC",60,0)
 W !!?2,"ICN    : ",ICN,?40,"CMOR: ",CMOR
"RTN","MPIMBC",61,0)
 W !?2,"Name   : ",NAME
"RTN","MPIMBC",62,0)
 W !?2,"SSN    : ",SSN
"RTN","MPIMBC",63,0)
 W !?2,"DOB    : ",DOB
"RTN","MPIMBC",64,0)
 W !?2,"Sex    : ",SEX
"RTN","MPIMBC",65,0)
 W !!?2,"Treating Facilities:",!?2,"--------------------"
"RTN","MPIMBC",66,0)
 S SITENM="" F  S SITENM=$O(^TMP("MPIMBC",$J,ICN,SITENM)) Q:SITENM=""  D
"RTN","MPIMBC",67,0)
 .S SITENUM=^TMP("MPIMBC",$J,ICN,SITENM)
"RTN","MPIMBC",68,0)
 .W !?4,SITENUM," - ",SITENM
"RTN","MPIMBC",69,0)
 W !!
"RTN","MPIMBC",70,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Are you sure you want to send this TF update"
"RTN","MPIMBC",71,0)
 S DIR("?",1)="Enter:"
"RTN","MPIMBC",72,0)
 S DIR("?",2)=" ""NO"" or <RET> to STOP."
"RTN","MPIMBC",73,0)
 S DIR("?",3)=" ""YES"" to send TF update to all sharing sites."
"RTN","MPIMBC",74,0)
 S DIR("?")=" ""^"" to HALT."
"RTN","MPIMBC",75,0)
 D ^DIR K DIR
"RTN","MPIMBC",76,0)
 I Y="^"!(+Y=0) Q
"RTN","MPIMBC",77,0)
 ;
"RTN","MPIMBC",78,0)
 W !!,"Broadcasting TF update..."
"RTN","MPIMBC",79,0)
 S BC=$$BRDCST^MPITFOUT(ICN,"REP","ALL","MUP","BC") ;**24
"RTN","MPIMBC",80,0)
 I BC W " successful."
"RTN","MPIMBC",81,0)
 I 'BC W " NOT successful."
"RTN","MPIMBC",82,0)
 K ^TMP("MPIMBC",$J),PIDARR
"RTN","MPIMBC",83,0)
 Q
"RTN","MPIMBC",84,0)
 ;
"RTN","MPIMBC",85,0)
HDR ;
"RTN","MPIMBC",86,0)
 W @IOF
"RTN","MPIMBC",87,0)
 W !,"MPI Patient Data Search - For : << ",ICN," >>",!,"Printed ",PRTDT,!,LN
"RTN","MPIMBC",88,0)
 Q
"RTN","MPIMBC",89,0)
 ;
"RTN","MPIMBC",90,0)
SETDAT ;find data
"RTN","MPIMBC",91,0)
 S NODE=^MPIVET(ICN,0),LNAME=$P(NODE,"^",2),FNAME=$P(NODE,"^",3)
"RTN","MPIMBC",92,0)
 S MNAME=$P(NODE,"^",4),SUF=$P(NODE,"^",6),SEX=$P(NODE,"^",13),DOB=$$FMTE^XLFDT($P(NODE,"^",8))
"RTN","MPIMBC",93,0)
 S SSN=$P(NODE,"^",14)  I SSN="" S SSN="UNKNOWN"
"RTN","MPIMBC",94,0)
 S CMOR=$P(^(1),"^",2) I CMOR'="" S CMOR=$P($$NS^XUAF4(CMOR),"^")
"RTN","MPIMBC",95,0)
 S ^TMP("MPIMBC",$J,ICN)=SSN_"^"_LNAME_","_FNAME_" "_MNAME_" "_SUF_"^"_DOB_"^"_CMOR_"^"_SEX
"RTN","MPIMBC",96,0)
 S AF=0 F  S AF=$O(^MPI(985.5,"AM",ICN,AF)) Q:'AF  D
"RTN","MPIMBC",97,0)
 .S AF1=$$NS^XUAF4(AF),AFNAME=$P(AF1,"^"),AFSTA=$P(AF1,"^",2)
"RTN","MPIMBC",98,0)
 .S ^TMP("MPIMBC",$J,ICN,AFNAME)=AFSTA
"RTN","MPIMBC",99,0)
 Q
"RTN","MPIMDM01")
0^67^B27640377
"RTN","MPIMDM01",1,0)
MPIMDM01 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Options to Track Data Resolution Work ; 03/14/02
"RTN","MPIMDM01",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,24,31,33,35**;30 Apr 99
"RTN","MPIMDM01",3,0)
 ;
"RTN","MPIMDM01",4,0)
EN1 ;Create/Edit a Case
"RTN","MPIMDM01",5,0)
 I '$G(DUZ) W !!,"DUZ not defined - make sure it is set before using this option." G QUIT
"RTN","MPIMDM01",6,0)
 ;
"RTN","MPIMDM01",7,0)
ASK ;Ask for Case #, or ICN, or SSN
"RTN","MPIMDM01",8,0)
 K ICNARR,SSNARR,ICN,DIR S SHOW="C"
"RTN","MPIMDM01",9,0)
 S QFLG=0,$P(LN,"-",80)=""
"RTN","MPIMDM01",10,0)
 W !!,"Create/Edit RESOLUTION JOURNAL CASE:"
"RTN","MPIMDM01",11,0)
 W !?3,"To CREATE a case, enter ICN or SSN."
"RTN","MPIMDM01",12,0)
ASK2 W !?3,"To EDIT a case, enter Case #, ICN, SSN, or ""?"" for list help."
"RTN","MPIMDM01",13,0)
 ; **35
"RTN","MPIMDM01",14,0)
 ;set following flag to show call to ASKC^MPIMDMU2 is coming from the create/edit option
"RTN","MPIMDM01",15,0)
 S CEFLG=1
"RTN","MPIMDM01",16,0)
 ;
"RTN","MPIMDM01",17,0)
 S REASK=0 D ASKC^MPIMDMU2 I QFLG G QUIT
"RTN","MPIMDM01",18,0)
 I $E(ANS1,2)="." S ANS1=$P(ANS1,".",2)
"RTN","MPIMDM01",19,0)
 I REASK W ! G ASK2
"RTN","MPIMDM01",20,0)
 ;
"RTN","MPIMDM01",21,0)
 I NEW D  G GOT
"RTN","MPIMDM01",22,0)
 .S DIC="^MPI(985.2,",X=ANS1,DIC(0)="LZ" D ^DIC K DIC S CASEIEN=+Y
"RTN","MPIMDM01",23,0)
 ;
"RTN","MPIMDM01",24,0)
 K CASEARR,CNTARR
"RTN","MPIMDM01",25,0)
 I $D(^MPI(985.2,"B",ANS1)) S CASEIEN=$O(^MPI(985.2,"B",ANS1,0)) G GOT
"RTN","MPIMDM01",26,0)
 I $D(^MPI(985.2,"ICN",ANS1)) D  G SHOW
"RTN","MPIMDM01",27,0)
 .S QQ=0 F  S QQ=$O(^MPI(985.2,"ICN",ANS1,QQ)) Q:'QQ  S CASEARR(QQ)=""
"RTN","MPIMDM01",28,0)
 I $D(^MPI(985.2,"SSN",ANS1)) D  G SHOW
"RTN","MPIMDM01",29,0)
 .S QQ=0 F  S QQ=$O(^MPI(985.2,"SSN",ANS1,QQ)) Q:'QQ  S CASEARR(QQ)=""
"RTN","MPIMDM01",30,0)
 I '$D(CASEARR) G QUIT
"RTN","MPIMDM01",31,0)
 ;
"RTN","MPIMDM01",32,0)
SHOW W @IOF,!,"Current associated case(s):"
"RTN","MPIMDM01",33,0)
 W !?4,"CASE #",?16,"NOIS #",?32,"CASE WORKER",?60,"STATUS",!,LN
"RTN","MPIMDM01",34,0)
 S (CASEIEN,CNT)=0 F  S CASEIEN=$O(CASEARR(CASEIEN)) Q:'CASEIEN  D
"RTN","MPIMDM01",35,0)
 .S CNT=CNT+1,USERNM=""
"RTN","MPIMDM01",36,0)
 .S NODE=^MPI(985.2,CASEIEN,0),CASENUM=$P(NODE,"^"),NOIS=$P(NODE,"^",6),USER=$P(NODE,"^",2) I +USER S USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMDM01",37,0)
 .S STATUS=$$GET1^DIQ(985.2,+CASEIEN_",",2)
"RTN","MPIMDM01",38,0)
 .S SHORT="" I $D(^MPI(985.2,CASEIEN,"PROB")) S SHORT=$P(^MPI(985.2,CASEIEN,"PROB"),"^",2)
"RTN","MPIMDM01",39,0)
 .S CNTARR(CNT)=CASEIEN_"^"_STATUS
"RTN","MPIMDM01",40,0)
 .W !,$J(CNT,2),")",?4,CASENUM,?16,NOIS,?32,$E(USERNM,1,25),?60,STATUS
"RTN","MPIMDM01",41,0)
 .K REPEAT S ICNLP=0 F  S ICNLP=$O(^MPI(985.2,CASEIEN,"ICN",ICNLP)) Q:'ICNLP  D
"RTN","MPIMDM01",42,0)
 ..K SSN  ;**31
"RTN","MPIMDM01",43,0)
 ..S ICN=$P(^MPI(985.2,CASEIEN,"ICN",ICNLP,0),"^"),NM=$P(^MPI(985.2,CASEIEN,"ICN",ICNLP,0),"^",2)
"RTN","MPIMDM01",44,0)
 ..I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" S SSN="I" ;**24
"RTN","MPIMDM01",45,0)
 ..I $G(SSN)'="I" I $D(^MPIVET(ICN,0))&($P($G(^MPIVET(ICN,0)),"^",2)]"") S SSN=$P(^MPIVET(ICN,0),"^",14) S:SSN="" SSN="BLANK" ;**24
"RTN","MPIMDM01",46,0)
 ..I '$D(REPEAT(ICN)) W !?4,"ICN #",ICN," - ",NM,?55,$S(SSN="I":"(ICN DEACTIVATED)",1:"SSN: "_SSN) S REPEAT(ICN)=""  ;**24,**35
"RTN","MPIMDM01",47,0)
 .I SHORT]"" W !?4,"[",SHORT,"]"
"RTN","MPIMDM01",48,0)
 ;
"RTN","MPIMDM01",49,0)
PICK ;
"RTN","MPIMDM01",50,0)
 S LOW=1,HI=CNT
"RTN","MPIMDM01",51,0)
 W !!,"Select case (1",$S(HI>1:"-"_HI_")",1:")"),": " R ANS2:DTIME
"RTN","MPIMDM01",52,0)
 I "^"[ANS2 G:SHOW="C" ASK G:SHOW="DC" ASKDC
"RTN","MPIMDM01",53,0)
 I $D(CNTARR(ANS2)) S CASEIEN=$P(CNTARR(ANS2),"^") G GOT
"RTN","MPIMDM01",54,0)
 W "  ??" G PICK
"RTN","MPIMDM01",55,0)
 ;
"RTN","MPIMDM01",56,0)
 ;
"RTN","MPIMDM01",57,0)
GOT D DISCUR^MPIMDM02 G:QFLG QUIT G:SHOW="C" ASK G:SHOW="DC" ASKDC3
"RTN","MPIMDM01",58,0)
 ;
"RTN","MPIMDM01",59,0)
QUIT ;
"RTN","MPIMDM01",60,0)
 K AF,AF1,AFNAME,AFSTA,ANS,ANS1,ANS2,CASE,CASEARR,CASEIEN,CASENUM,CHK,CLAIM,CMOR,CNT,CNTARR
"RTN","MPIMDM01",61,0)
 K DA,DATE,DIC,DIE,DIK,DINUM,DIR,DIRUT,DISP,DOB,DOD,DR,DTCL,DTOP,FNAME,FNM,GOT,HI,ICN,ICNCHK,ICNARR,ICNIEN,ICNLP,ICNNODE
"RTN","MPIMDM01",62,0)
 K JJ,LAST,LN,LNAME,LNM,LOW,MNAME,MNM,MOM,NAME,NEW,NM,NODE,NOW,QFLG,QQ,MPIMCASE,MPIMICN,MPIMSSN,SEX
"RTN","MPIMDM01",63,0)
 K SITE,SITEARR,SITEICN,SITELP,SITENM,SITENUM,SS,SSN,SSNARR,SSNLP,STAT,STATUS,STOP,STUB,USER,USERNM,X,Y
"RTN","MPIMDM01",64,0)
 K LCHK,LDATE,LICN,LIEN,LISTDARR,LISTIARR,LISTPARR,LISTSARR,LPAT,LSSN,LSTOP,LSTRT
"RTN","MPIMDM01",65,0)
 K ICNDA,LCHK,LDATE,LDUZ,LISTCARR,PTNAME,NEWICN,NOIS,PC,SHORT,SSNCHK,SHOW,CONDT,CONCOM,CNTDA
"RTN","MPIMDM01",66,0)
 K ANS3,SITEDA,CHKCASE,CHKSTAT,CHKCNUM,IDST,NEWCASE,DEL,REV,ASSOC,QUIT,CEFLG,REPEAT,REASK
"RTN","MPIMDM01",67,0)
 Q
"RTN","MPIMDM01",68,0)
 ;
"RTN","MPIMDM01",69,0)
DC ;Enter/edit Site DATE OF CONTACT and DATE OF CONTACT COMMENTS
"RTN","MPIMDM01",70,0)
 ;
"RTN","MPIMDM01",71,0)
ASKDC ;Ask for Case #, or ICN, or SSN
"RTN","MPIMDM01",72,0)
 K ICNARR,SSNARR,ICN,DIR  S SHOW="DC"
"RTN","MPIMDM01",73,0)
 S QFLG=0,$P(LN,"-",80)=""
"RTN","MPIMDM01",74,0)
 W !!,"Enter/Edit DATE OF CONTACT data:"
"RTN","MPIMDM01",75,0)
ASKDC2 W !?3,"Enter Case #, ICN, SSN, or ""?"" for list help."
"RTN","MPIMDM01",76,0)
 D ASKC^MPIMDMU2 I QFLG G QUIT
"RTN","MPIMDM01",77,0)
 I $E(ANS1,2)="." W ! G ASKDC2
"RTN","MPIMDM01",78,0)
 ;
"RTN","MPIMDM01",79,0)
 K CASEARR,CNTARR
"RTN","MPIMDM01",80,0)
 I $D(^MPI(985.2,"B",ANS1)) S CASEIEN=$O(^MPI(985.2,"B",ANS1,0)) G GOT
"RTN","MPIMDM01",81,0)
 I $D(^MPI(985.2,"ICN",ANS1)) D  G SHOW
"RTN","MPIMDM01",82,0)
 .S QQ=0 F  S QQ=$O(^MPI(985.2,"ICN",ANS1,QQ)) Q:'QQ  S CASEARR(QQ)=""
"RTN","MPIMDM01",83,0)
 I $D(^MPI(985.2,"SSN",ANS1)) D  G SHOW
"RTN","MPIMDM01",84,0)
 .S QQ=0 F  S QQ=$O(^MPI(985.2,"SSN",ANS1,QQ)) Q:'QQ  S CASEARR(QQ)=""
"RTN","MPIMDM01",85,0)
 I '$D(CASEIEN) G QUIT
"RTN","MPIMDM01",86,0)
 ;
"RTN","MPIMDM01",87,0)
ASKDC3 ;
"RTN","MPIMDM01",88,0)
 K SITEARR S CNT=0
"RTN","MPIMDM01",89,0)
 S SITELP=0 F  S SITELP=$O(^MPI(985.2,CASEIEN,"SITE",SITELP)) Q:'SITELP  D
"RTN","MPIMDM01",90,0)
 .S SITE=+^MPI(985.2,CASEIEN,"SITE",SITELP,0)
"RTN","MPIMDM01",91,0)
 .S SITENM=$$GET1^DIQ(4,+SITE_",",.01),SITEARR(SITENM)=SITELP_"^"_SITENM
"RTN","MPIMDM01",92,0)
 K CNTARR S SITENM="" F  S SITENM=$O(SITEARR(SITENM)) Q:SITENM=""  D
"RTN","MPIMDM01",93,0)
 .S CNT=CNT+1,CNTARR(CNT)=SITEARR(SITENM)
"RTN","MPIMDM01",94,0)
 ;
"RTN","MPIMDM01",95,0)
 I CNT=1 S SITEDA=+CNTARR(1),SITENM=$P(CNTARR(1),"^",2) W !!! G GOTDC
"RTN","MPIMDM01",96,0)
 ;
"RTN","MPIMDM01",97,0)
 I CNT>1 D
"RTN","MPIMDM01",98,0)
 .W !!!!,"Select site to enter DATE OF CONTACT:"
"RTN","MPIMDM01",99,0)
 .S CNTDA=0 F  S CNTDA=$O(CNTARR(CNTDA)) Q:'CNTDA  W !?3,CNTDA,". ",$P(CNTARR(CNTDA),"^",2)
"RTN","MPIMDM01",100,0)
 ;
"RTN","MPIMDM01",101,0)
PICKDC ;
"RTN","MPIMDM01",102,0)
 S LOW=1,HI=CNT
"RTN","MPIMDM01",103,0)
 W !!?3,"Select site (1",$S(HI>1:"-"_HI_")",1:")"),": " R ANS3:DTIME
"RTN","MPIMDM01",104,0)
 I "^"[ANS3 G ASKDC
"RTN","MPIMDM01",105,0)
 I $D(CNTARR(ANS3)) S SITEDA=+CNTARR(ANS3),SITENM=$P(CNTARR(ANS3),"^",2) W "  ",SITENM G GOTDC
"RTN","MPIMDM01",106,0)
 W "  ??" G PICKDC
"RTN","MPIMDM01",107,0)
 ;
"RTN","MPIMDM01",108,0)
GOTDC ;edit
"RTN","MPIMDM01",109,0)
 W !,SITENM,":"
"RTN","MPIMDM01",110,0)
 S DA(1)=CASEIEN,DA=SITEDA,DIE="^MPI(985.2,"_DA(1)_",""SITE"",",DR="2;3"
"RTN","MPIMDM01",111,0)
 L +^MPI(985.2,CASEIEN):1 E  W !!,"Someone else is editing this record. Try again later.",! G QUIT
"RTN","MPIMDM01",112,0)
 D ^DIE K DIE,DA,DR
"RTN","MPIMDM01",113,0)
 W !!!
"RTN","MPIMDM01",114,0)
 S DIE="^MPI(985.2,",DA=CASEIEN,DR=6
"RTN","MPIMDM01",115,0)
 D ^DIE K DIE,DA,DR
"RTN","MPIMDM01",116,0)
 L -^MPI(985.2,CASEIEN)
"RTN","MPIMDM01",117,0)
 I CNT>1 G ASKDC3
"RTN","MPIMDM01",118,0)
 I CNT=1 G ASKDC
"RTN","MPIMDM02")
0^68^B66817532
"RTN","MPIMDM02",1,0)
MPIMDM02 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Options to Track Data Resolution Work ; 03/14/02
"RTN","MPIMDM02",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,33,35**;30 Apr 99
"RTN","MPIMDM02",3,0)
 Q
"RTN","MPIMDM02",4,0)
 ;
"RTN","MPIMDM02",5,0)
DISCUR ;
"RTN","MPIMDM02",6,0)
 K SSNARR,SITEARR,ICNARR
"RTN","MPIMDM02",7,0)
 S USERNM=""
"RTN","MPIMDM02",8,0)
 S NODE=^MPI(985.2,CASEIEN,0),CASENUM=$P(NODE,"^"),USER=$P(NODE,"^",2) I +USER S USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMDM02",9,0)
 S STATUS=$$GET1^DIQ(985.2,+CASEIEN_",",2),NOIS=$P(NODE,"^",6)
"RTN","MPIMDM02",10,0)
 S DTOP=$$FMTE^XLFDT($E($P(NODE,"^",4),1,12)),DTCL=$$FMTE^XLFDT($E($P(NODE,"^",5),1,12))
"RTN","MPIMDM02",11,0)
 S SSNLP=0 F  S SSNLP=$O(^MPI(985.2,CASEIEN,"SSN",SSNLP)) Q:'SSNLP  D
"RTN","MPIMDM02",12,0)
 .S SSN=$P(^MPI(985.2,CASEIEN,"SSN",SSNLP,0),"^"),SSNARR(SSN)=$P(^MPI(985.2,CASEIEN,"SSN",SSNLP,0),"^",2)
"RTN","MPIMDM02",13,0)
 S ICNLP=0 F  S ICNLP=$O(^MPI(985.2,CASEIEN,"ICN",ICNLP)) Q:'ICNLP  D
"RTN","MPIMDM02",14,0)
 .S ICN=$P(^MPI(985.2,CASEIEN,"ICN",ICNLP,0),"^"),ICNARR(ICN)=^MPI(985.2,CASEIEN,"ICN",ICNLP,0)
"RTN","MPIMDM02",15,0)
 S SITELP=0 F  S SITELP=$O(^MPI(985.2,CASEIEN,"SITE",SITELP)) Q:'SITELP  D
"RTN","MPIMDM02",16,0)
 .S SITE=+^MPI(985.2,CASEIEN,"SITE",SITELP,0)
"RTN","MPIMDM02",17,0)
 .S SITENM=$$GET1^DIQ(4,+SITE_",",.01),SITEICN=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",2)
"RTN","MPIMDM02",18,0)
 .S SITEARR(SITENM)=SITEICN
"RTN","MPIMDM02",19,0)
 .S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIMDM02",20,0)
 ..Q:ICN=SITEICN
"RTN","MPIMDM02",21,0)
 ..I $D(^MPI(985.5,"AM",ICN,SITE)) S SITEARR(SITENM)=SITEARR(SITENM)_"/"_ICN
"RTN","MPIMDM02",22,0)
 .S CONDT=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",3) I CONDT]"" S CONDT=$$FMTE^XLFDT($E(CONDT,1,12))
"RTN","MPIMDM02",23,0)
 .S CONCOM=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",4)
"RTN","MPIMDM02",24,0)
 .S SITEARR(SITENM)=SITEARR(SITENM)_"^"_CONDT_"^"_CONCOM
"RTN","MPIMDM02",25,0)
 ;
"RTN","MPIMDM02",26,0)
 W !!,"CASE #     : ",CASENUM,?40,"STATUS     : ",STATUS
"RTN","MPIMDM02",27,0)
 W !,"DATE OPENED: ",DTOP,?40,"DATE CLOSED: ",DTCL
"RTN","MPIMDM02",28,0)
 I NOIS]"" W !,"NOIS #     : ",NOIS
"RTN","MPIMDM02",29,0)
 W !,LN
"RTN","MPIMDM02",30,0)
 I $D(^MPI(985.2,CASEIEN,"PROB")) D
"RTN","MPIMDM02",31,0)
 .S PC=+^MPI(985.2,CASEIEN,"PROB") I PC S PC=$P($G(^MPI(985.21,PC,0)),"^")
"RTN","MPIMDM02",32,0)
 .S SHORT=$P(^MPI(985.2,CASEIEN,"PROB"),"^",2)
"RTN","MPIMDM02",33,0)
 .I SHORT]"" W !,"SHORT DESC.: ",SHORT
"RTN","MPIMDM02",34,0)
 .I PC]"" W !,"PROBLEM CATEGORY: ",PC
"RTN","MPIMDM02",35,0)
 W !
"RTN","MPIMDM02",36,0)
 W !,"SSN(s) INVOLVED:" S SSN=0 F  S SSN=$O(SSNARR(SSN)) Q:'SSN  W !?3,SSN I +SSNARR(SSN) W "  ICN: ",+SSNARR(SSN)
"RTN","MPIMDM02",37,0)
 W !!,"ICN(s) INVOLVED:" S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIMDM02",38,0)
 .S DOB=$$FMTE^XLFDT($P(ICNARR(ICN),"^",3)),NM=$P(ICNARR(ICN),"^",2),SSN=$P(ICNARR(ICN),"^",4)
"RTN","MPIMDM02",39,0)
 .S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMDM02",40,0)
 .I IDST]"" W !," (",IDST,") ",ICN
"RTN","MPIMDM02",41,0)
 .I IDST="" W !?5,ICN
"RTN","MPIMDM02",42,0)
 .W ?16,NM I SSN]"" W ?48,"SSN: ",SSN
"RTN","MPIMDM02",43,0)
 .W ?63,"DOB: ",DOB
"RTN","MPIMDM02",44,0)
 W !!,"SITE(s) INVOLVED:"
"RTN","MPIMDM02",45,0)
 S SITE="" F  S SITE=$O(SITEARR(SITE)) Q:SITE=""  W !?3,SITE,?35,"ICN: ",$P(SITEARR(SITE),"^")
"RTN","MPIMDM02",46,0)
 ;add DATE OF CONTACT data
"RTN","MPIMDM02",47,0)
 S SITE="" F  S SITE=$O(SITEARR(SITE)) Q:SITE=""  D
"RTN","MPIMDM02",48,0)
 .I $P(SITEARR(SITE),"^",2)]"" W !!,SITE," contacted ",$P(SITEARR(SITE),"^",2)
"RTN","MPIMDM02",49,0)
 .I $P(SITEARR(SITE),"^",3)]"" W !,"Comments: ",!,$P(SITEARR(SITE),"^",3)
"RTN","MPIMDM02",50,0)
 I SHOW="DC" Q
"RTN","MPIMDM02",51,0)
 W !!,"=========================================="
"RTN","MPIMDM02",52,0)
 I USERNM="" W !,"No Case Worker currently assigned." G ED
"RTN","MPIMDM02",53,0)
 W !,"PRIMARY CASE WORKER: ",USERNM
"RTN","MPIMDM02",54,0)
 W !,"LOCATION           : ",$$GET1^DIQ(200,+USER_",",.111)
"RTN","MPIMDM02",55,0)
 W !,"PHONE              : ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMDM02",56,0)
 ;
"RTN","MPIMDM02",57,0)
ED ;
"RTN","MPIMDM02",58,0)
 W !!
"RTN","MPIMDM02",59,0)
 K DIR S DIR(0)="SAM^D:DELETE;E:EDIT;"
"RTN","MPIMDM02",60,0)
 S DIR("A")="Do you want to (D)elete or (E)dit this case? (or ""^"" to HALT) "
"RTN","MPIMDM02",61,0)
 S DIR("B")="E"
"RTN","MPIMDM02",62,0)
 S DIR("?",1)="Enter:"
"RTN","MPIMDM02",63,0)
 S DIR("?",2)=" ""D"" to delete this case."
"RTN","MPIMDM02",64,0)
 S DIR("?")=" ""E"" to edit the STATUS and RESOLUTION NOTES for this case."
"RTN","MPIMDM02",65,0)
 D ^DIR K DIR I $D(DIRUT) S QFLG=1 Q 
"RTN","MPIMDM02",66,0)
 S ANS=Y
"RTN","MPIMDM02",67,0)
 ;
"RTN","MPIMDM02",68,0)
 I ANS="D" S DIK="^MPI(985.2,",DA=CASEIEN D ^DIK K DIK Q
"RTN","MPIMDM02",69,0)
 ;
"RTN","MPIMDM02",70,0)
 L +^MPI(985.2,CASEIEN):1 E  W !!,"Someone else is editing this record. Try again later.",! Q
"RTN","MPIMDM02",71,0)
 ;
"RTN","MPIMDM02",72,0)
EDCHK ;ask for additional ICNs
"RTN","MPIMDM02",73,0)
 S NEWCASE=$S(NEW=1:1,1:0),DEL=0,REV=0,ASSOC=0
"RTN","MPIMDM02",74,0)
 S DISP=0
"RTN","MPIMDM02",75,0)
 W !! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you want to add another ICN to this case"
"RTN","MPIMDM02",76,0)
 S DIR("?",1)="- If there is another ICN that should be associated with this case that does"
"RTN","MPIMDM02",77,0)
 S DIR("?",2)="  not share the same ICN then you need to add it here by answering ""YES""."
"RTN","MPIMDM02",78,0)
 S DIR("?")="- If there is no other ICN that needs to be added, answer ""NO""."
"RTN","MPIMDM02",79,0)
 D ^DIR K DIR
"RTN","MPIMDM02",80,0)
 I +Y'=1 G EDREST
"RTN","MPIMDM02",81,0)
 ;
"RTN","MPIMDM02",82,0)
 S DIC="^MPIVET(",DIC(0)="QEAM"
"RTN","MPIMDM02",83,0)
 W ! D ^DIC K DIC G:+Y<0 EDQ
"RTN","MPIMDM02",84,0)
 S NEWICN=+Y,DISP=1
"RTN","MPIMDM02",85,0)
 ;
"RTN","MPIMDM02",86,0)
 ;check to see if new ICN is associated with a case already
"RTN","MPIMDM02",87,0)
 I $D(^MPI(985.2,"ICN",NEWICN)) D
"RTN","MPIMDM02",88,0)
 .S ASSOC=1,QUIT=0
"RTN","MPIMDM02",89,0)
 .S CHKCASE=$O(^MPI(985.2,"ICN",NEWICN,0))
"RTN","MPIMDM02",90,0)
 .S CHKCNUM=$P(^MPI(985.2,CHKCASE,0),"^")
"RTN","MPIMDM02",91,0)
 .W !!,"<< This ICN is already associated with Case #",CHKCNUM,", >>"
"RTN","MPIMDM02",92,0)
 .W !,"<< therefore it cannot be added to this case.            >>"
"RTN","MPIMDM02",93,0)
 .I NEWCASE D DELNEW Q
"RTN","MPIMDM02",94,0)
 .I 'NEWCASE D NOTE Q
"RTN","MPIMDM02",95,0)
 ;
"RTN","MPIMDM02",96,0)
 ;if user has opted to delete the newly created case then throw them into the associated case for editing.
"RTN","MPIMDM02",97,0)
 I ASSOC,NEWCASE,DEL S CASEIEN=CHKCASE,NEW=0 G DISCUR
"RTN","MPIMDM02",98,0)
 ;
"RTN","MPIMDM02",99,0)
 ;if current case was not newly created and user wants to review cases for a possible merge, quit
"RTN","MPIMDM02",100,0)
 I ASSOC,'NEWCASE,REV S DISP=0 G EDQ
"RTN","MPIMDM02",101,0)
 ;
"RTN","MPIMDM02",102,0)
 ;if current case was not newly created then skip to edit of remaining fields
"RTN","MPIMDM02",103,0)
 I ASSOC,'NEWCASE,'REV G EDREST
"RTN","MPIMDM02",104,0)
 ;
"RTN","MPIMDM02",105,0)
 I ASSOC,QUIT G EDREST
"RTN","MPIMDM02",106,0)
 ;
"RTN","MPIMDM02",107,0)
 ;at this point, the additional ICN is being added.
"RTN","MPIMDM02",108,0)
 W ! S DIR("A")="Are you sure you want to add this ICN",DIR("B")="No",DIR(0)="Y" D ^DIR
"RTN","MPIMDM02",109,0)
 I Y'=1 W !,"ICN has not been added." G EDREST
"RTN","MPIMDM02",110,0)
 ;
"RTN","MPIMDM02",111,0)
 S NOW=$$NOW^XLFDT
"RTN","MPIMDM02",112,0)
 K SSNARR,ICNARR
"RTN","MPIMDM02",113,0)
 S MPIMSSN=$P(^MPIVET(NEWICN,0),"^",14)
"RTN","MPIMDM02",114,0)
 I 'MPIMSSN S ICNARR(NEWICN)=""
"RTN","MPIMDM02",115,0)
 I MPIMSSN D
"RTN","MPIMDM02",116,0)
 .S ICNLP=0 F  S ICNLP=$O(^MPIVET("SSN",MPIMSSN,ICNLP)) Q:'ICNLP  S ICNARR(ICNLP)=""
"RTN","MPIMDM02",117,0)
 ;add SSN for New ICN
"RTN","MPIMDM02",118,0)
 I MPIMSSN D
"RTN","MPIMDM02",119,0)
 .K DIC,DA,X,DIE,DR
"RTN","MPIMDM02",120,0)
 .S DIC("P")=$P(^DD(985.2,3,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIMDM02",121,0)
 .S DIC="^MPI(985.2,"_DA(1)_",""SSN"",",X=MPIMSSN D FILE^DICN
"RTN","MPIMDM02",122,0)
 .S ICNCHK=$O(^MPIVET("SSN",MPIMSSN,0)) I '$O(^MPIVET("SSN",MPIMSSN,ICNCHK)) D
"RTN","MPIMDM02",123,0)
 ..S DA(1)=CASEIEN,DIE="^MPI(985.2,"_DA(1)_",""SSN"",",DR="1///^S X=ICNCHK" D ^DIE K DIE
"RTN","MPIMDM02",124,0)
 ;add any other ICNs that are associated with SSN for NEW ICN
"RTN","MPIMDM02",125,0)
 S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIMDM02",126,0)
 .K DIC,DA,X,DR
"RTN","MPIMDM02",127,0)
 .S DIC("P")=$P(^DD(985.2,4,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIMDM02",128,0)
 .S DIC="^MPI(985.2,"_DA(1)_",""ICN"",",X=ICN D FILE^DICN
"RTN","MPIMDM02",129,0)
 .S ICNNODE=^MPIVET(ICN,0),DOB=$$FMTE^XLFDT($P(ICNNODE,"^",8)),SSNCHK=$P(ICNNODE,"^",14)
"RTN","MPIMDM02",130,0)
 .S LNM=$P(ICNNODE,"^",2),FNM=$P(ICNNODE,"^",3),MNM=$P(ICNNODE,"^",4),NM=LNM_","_FNM_" "_MNM
"RTN","MPIMDM02",131,0)
 .S DA(1)=CASEIEN,DIE="^MPI(985.2,"_DA(1)_",""ICN"",",DR="1///^S X=NM;2///^S X=DOB;3///^S X=SSNCHK" D ^DIE K DIE
"RTN","MPIMDM02",132,0)
 . ; add entry to MPI DATA MGT ACTIVE RESOLUTION WORK FILE (#985.25)
"RTN","MPIMDM02",133,0)
 .I '$D(^MPI(985.25,NEWICN,0)) D
"RTN","MPIMDM02",134,0)
 ..K DIC,DA,X,DR
"RTN","MPIMDM02",135,0)
 ..S DIC="^MPI(985.25,",X=ICN,DIC(0)="LZ",DINUM=ICN D FILE^DICN
"RTN","MPIMDM02",136,0)
 ..S DIE="^MPI(985.25,",DA=ICN,DR="1///^S X=MPIMSSN;2///^S X=USER;3///^S X=NOW;4///^S X=CASENUM" D ^DIE K DIE
"RTN","MPIMDM02",137,0)
 .. ;add site data to case for NEW ICN
"RTN","MPIMDM02",138,0)
 .S SITE=0 F  S SITE=$O(^MPI(985.5,"AM",ICN,SITE)) Q:'SITE  D
"RTN","MPIMDM02",139,0)
 ..S SITENM=$$GET1^DIQ(4,+SITE_",",.01)
"RTN","MPIMDM02",140,0)
 ..K DIC,DA,X,DR
"RTN","MPIMDM02",141,0)
 ..S DIC("P")=$P(^DD(985.2,5,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIMDM02",142,0)
 ..S DIC="^MPI(985.2,"_DA(1)_",""SITE"",",X=SITE D FILE^DICN
"RTN","MPIMDM02",143,0)
 ..S DA(1)=CASEIEN,DIE="^MPI(985.2,"_DA(1)_",""SITE"",",DR="1///^S X=ICN" D ^DIE
"RTN","MPIMDM02",144,0)
 .; update the RESOLUTION JOURNAL CASE NUMBER field (#22) in file 985  ; **35
"RTN","MPIMDM02",145,0)
 .N X,DA,DO,DIC,DIE
"RTN","MPIMDM02",146,0)
 .N FDA,MPIM
"RTN","MPIMDM02",147,0)
 .S FDA(985,ICN_",",22)=$P(^MPI(985.2,CASEIEN,0),"^")
"RTN","MPIMDM02",148,0)
 .D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDM02",149,0)
 ;
"RTN","MPIMDM02",150,0)
 W !!,"ICN #",NEWICN," and related data added to Case #",CASENUM,"."
"RTN","MPIMDM02",151,0)
 ;
"RTN","MPIMDM02",152,0)
EDREST ;edit rest of the fields
"RTN","MPIMDM02",153,0)
 W ! S DIE="^MPI(985.2,",DA=CASEIEN,DR="6;2;9;10;11;1" D ^DIE K DIE,DA,DR
"RTN","MPIMDM02",154,0)
 ;
"RTN","MPIMDM02",155,0)
EDQ L -^MPI(985.2,CASEIEN)
"RTN","MPIMDM02",156,0)
 I DISP G DISCUR
"RTN","MPIMDM02",157,0)
 Q
"RTN","MPIMDM02",158,0)
 ;
"RTN","MPIMDM02",159,0)
DELNEW ;give user the option to delete the current case that was newly created
"RTN","MPIMDM02",160,0)
 W !!,"You can choose to do one of the following:"
"RTN","MPIMDM02",161,0)
 W !,"1. Delete the case you just created and edit case #",CHKCNUM,"."
"RTN","MPIMDM02",162,0)
 W !,"2. Retain the case you just created and enter this additional"
"RTN","MPIMDM02",163,0)
 W !,"   ICN as an AUTO NOTE only."
"RTN","MPIMDM02",164,0)
 W !,"3. Nothing - no record of this ICN will be added to this case.",!
"RTN","MPIMDM02",165,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMDM02",166,0)
 S DIR(0)="SA^1:Delete;2:Retain;3:Nothing"
"RTN","MPIMDM02",167,0)
 W ! S DIR("A")="Select action:  ",DIR("B")=3
"RTN","MPIMDM02",168,0)
 D ^DIR K DIR
"RTN","MPIMDM02",169,0)
 I Y=3!($D(DIRUT)) S QUIT=1 Q
"RTN","MPIMDM02",170,0)
 ;just add a note
"RTN","MPIMDM02",171,0)
 I Y=2 D  Q
"RTN","MPIMDM02",172,0)
 .N NOTE,NOTEDT,CW
"RTN","MPIMDM02",173,0)
 .S NOTEDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMDM02",174,0)
 .S CW=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","MPIMDM02",175,0)
 .S NOTE(1)=CW_" added ICN "_NEWICN_" as a note on "_NOTEDT_"."
"RTN","MPIMDM02",176,0)
 .D ADDNOTE^MPIMDMA1(CASEIEN,.NOTE,1)
"RTN","MPIMDM02",177,0)
 .S QUIT=1
"RTN","MPIMDM02",178,0)
 ;delete current case
"RTN","MPIMDM02",179,0)
 I Y=1 D  Q
"RTN","MPIMDM02",180,0)
 .L -^MPI(985.2,CASEIEN)
"RTN","MPIMDM02",181,0)
 .S DIK="^MPI(985.2,",DA=CASEIEN D ^DIK K DIK
"RTN","MPIMDM02",182,0)
 .W !!,"Case #",CASENUM," deleted.  You can now edit Case #",CHKCNUM,"."
"RTN","MPIMDM02",183,0)
 .W !! S DIR(0)="E",DIR("A")="Press return to continue" D ^DIR K DIR
"RTN","MPIMDM02",184,0)
 .S DEL=1
"RTN","MPIMDM02",185,0)
 Q
"RTN","MPIMDM02",186,0)
 ;
"RTN","MPIMDM02",187,0)
NOTE ;give user the option to add additional ICN as note to current case
"RTN","MPIMDM02",188,0)
 W !!,"You can choose to do one of the following:"
"RTN","MPIMDM02",189,0)
 W !,"1. Enter this additional ICN as a AUTO NOTE only to the current case."
"RTN","MPIMDM02",190,0)
 W !,"2. Quit editing to manually review all cases to decide if they should be merged."
"RTN","MPIMDM02",191,0)
 W !,"3. Nothing - no record of this ICN will be added to this case."
"RTN","MPIMDM02",192,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMDM02",193,0)
 S DIR(0)="SA^1:Add;2:Review;3:Nothing"
"RTN","MPIMDM02",194,0)
 W ! S DIR("A")="Select action:  ",DIR("B")=3
"RTN","MPIMDM02",195,0)
 D ^DIR K DIR
"RTN","MPIMDM02",196,0)
 I Y=3!($D(DIRUT)) Q
"RTN","MPIMDM02",197,0)
 ;just add a note
"RTN","MPIMDM02",198,0)
 I Y=1 D  Q
"RTN","MPIMDM02",199,0)
 .N NOTE,NOTEDT,CW
"RTN","MPIMDM02",200,0)
 .S NOTEDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMDM02",201,0)
 .S CW=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","MPIMDM02",202,0)
 .S NOTE(1)=CW_" added ICN "_NEWICN_" as a note on "_NOTEDT_"."
"RTN","MPIMDM02",203,0)
 .D ADDNOTE^MPIMDMA1(CASEIEN,.NOTE,1)
"RTN","MPIMDM02",204,0)
 ;user chooses to review cases for possible merge
"RTN","MPIMDM02",205,0)
 I Y=2 S REV=1 Q
"RTN","MPIMDM02",206,0)
 Q
"RTN","MPIMDMA1")
0^69^B12479422
"RTN","MPIMDMA1",1,0)
MPIMDMA1 ;BIR/CML-MPI Data Mgt Menu API Calls ;09/09/02
"RTN","MPIMDMA1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,13,24**;30 Apr 99
"RTN","MPIMDMA1",3,0)
 ;
"RTN","MPIMDMA1",4,0)
ADDNOTE(CASEIEN,NOTE,OPT) ;add text to RESOLUTION NOTES in file #985.2
"RTN","MPIMDMA1",5,0)
 ; CASEIEN - Pass IEN for entry in file 985.2
"RTN","MPIMDMA1",6,0)
 ; NOTE    - Pass array of data strings to be added to RESOLUTION NOTES 
"RTN","MPIMDMA1",7,0)
 ;           field in file 985.2
"RTN","MPIMDMA1",8,0)
 ; OPT     - If a "1" is passed, then this API was called from an 
"RTN","MPIMDMA1",9,0)
 ;           interactive option and messages will be displayed to the user.
"RTN","MPIMDMA1",10,0)
 ;           If a "1" is not passed, no messages.
"RTN","MPIMDMA1",11,0)
 ;
"RTN","MPIMDMA1",12,0)
 I '$D(^MPI(985.2,CASEIEN,0)) Q
"RTN","MPIMDMA1",13,0)
 I '$D(NOTE) Q
"RTN","MPIMDMA1",14,0)
 ;
"RTN","MPIMDMA1",15,0)
 N ERR,SKIP
"RTN","MPIMDMA1",16,0)
 I '$D(OPT) S OPT=0
"RTN","MPIMDMA1",17,0)
 S SKIP(1)=" "
"RTN","MPIMDMA1",18,0)
 S SKIP(2)="==> <<AUTO NOTE filed "_$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))_">>:"
"RTN","MPIMDMA1",19,0)
 L +^MPI(985.2,CASEIEN):10
"RTN","MPIMDMA1",20,0)
 D WP^DIE(985.2,CASEIEN_",",6,"KA","SKIP",.ERR)
"RTN","MPIMDMA1",21,0)
 D WP^DIE(985.2,CASEIEN_",",6,"KA","NOTE",.ERR)
"RTN","MPIMDMA1",22,0)
 L -^MPI(985.2,CASEIEN)
"RTN","MPIMDMA1",23,0)
 I '$D(ERR),OPT W !?3,"<< Notes for case #",$P(^MPI(985.2,CASEIEN,0),"^")," updated.>>" Q
"RTN","MPIMDMA1",24,0)
 I $D(ERR(110)),OPT W !?3,"Another user is editing this entry. No update made."
"RTN","MPIMDMA1",25,0)
 Q
"RTN","MPIMDMA1",26,0)
 ;
"RTN","MPIMDMA1",27,0)
DUPCHK(MPIMARR,MPIMERR,MPIMICN,MPIMSSN,OPT) ; check to see if duplicate ICNs sharing the same SSN
"RTN","MPIMDMA1",28,0)
 ;
"RTN","MPIMDMA1",29,0)
 ; MPIMARR - this array will contain the following if no error situation exists:
"RTN","MPIMDMA1",30,0)
 ;           - if only one ICN exists  -> MPIMARR(0)=0 and MPIMARR(ICN) is set for that ICN
"RTN","MPIMDMA1",31,0)
 ;           - if duplicate ICNs exist -> MPIMARR(0)=1 and MPIMARR(ICN) is set for all ICNs
"RTN","MPIMDMA1",32,0)
 ;
"RTN","MPIMDMA1",33,0)
 ; MPIMERR - if this parameter is passed, error messages will be returned - possible values:
"RTN","MPIMDMA1",34,0)
 ;           1^ICN does not exist.
"RTN","MPIMDMA1",35,0)
 ;           2^ICN is deactivated.
"RTN","MPIMDMA1",36,0)
 ;           3^SSN not defined for this ICN - no search possible.
"RTN","MPIMDMA1",37,0)
 ;           4^SSN not found on MPI.
"RTN","MPIMDMA1",38,0)
 ;
"RTN","MPIMDMA1",39,0)
 ; MPIMICN - if this parameter is defined, it must be an ICN
"RTN","MPIMDMA1",40,0)
 ; MPIMSSN - if this parameter is defined, it must be an SSN
"RTN","MPIMDMA1",41,0)
 ;
"RTN","MPIMDMA1",42,0)
 ; Note: For patch MPI*1.0*24 changes were made to use ID State to check for deactivated ICNs 
"RTN","MPIMDMA1",43,0)
 ;       and to add ability to screen return results.
"RTN","MPIMDMA1",44,0)
 ;
"RTN","MPIMDMA1",45,0)
 ; OPT     - if this parameter is passed, then the user wants to screen the check by ID State.
"RTN","MPIMDMA1",46,0)
 ;           - If OPT="P", only check ICNs that are "PERMANENT".
"RTN","MPIMDMA1",47,0)
 ;           - If OPT is not passed, both "TEMPORARY" and "PERMANENT" ICNs are returned.
"RTN","MPIMDMA1",48,0)
 ;
"RTN","MPIMDMA1",49,0)
 ;
"RTN","MPIMDMA1",50,0)
 N ICN,SSN,IDST
"RTN","MPIMDMA1",51,0)
 ;
"RTN","MPIMDMA1",52,0)
 I $D(MPIMICN) D  Q
"RTN","MPIMDMA1",53,0)
 .I '$D(^MPIVET(MPIMICN,0)) S MPIMERR="1^ICN does not exist." Q
"RTN","MPIMDMA1",54,0)
 .S IDST=$P($G(^MPIVET(MPIMICN,"ID_STATE")),"^")
"RTN","MPIMDMA1",55,0)
 .I IDST="D" S MPIMERR="2^ICN is deactivated." Q
"RTN","MPIMDMA1",56,0)
 .S SSN=$P(^MPIVET(MPIMICN,0),"^",14) I SSN="" S MPIMERR="3^SSN not defined - no search possible." Q
"RTN","MPIMDMA1",57,0)
 .S ICN=$O(^MPIVET("SSN",SSN,0)),IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMDMA1",58,0)
 .I $G(OPT)="P",IDST="P" S MPIMARR(0)=0,MPIMARR(ICN)=""
"RTN","MPIMDMA1",59,0)
 .I $G(OPT)'="P",IDST'="D" S MPIMARR(0)=0,MPIMARR(ICN)=""
"RTN","MPIMDMA1",60,0)
 .I $O(^MPIVET("SSN",SSN,ICN)) D
"RTN","MPIMDMA1",61,0)
 ..F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  D
"RTN","MPIMDMA1",62,0)
 ...S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMDMA1",63,0)
 ...I $G(OPT)="P",IDST="P" S MPIMARR(0)=1,MPIMARR(ICN)=""
"RTN","MPIMDMA1",64,0)
 ...I $G(OPT)'="P",IDST'="D" S MPIMARR(0)=1,MPIMARR(ICN)=""
"RTN","MPIMDMA1",65,0)
 ;
"RTN","MPIMDMA1",66,0)
 I $D(MPIMSSN) D  Q
"RTN","MPIMDMA1",67,0)
 .I '$D(^MPIVET("SSN",MPIMSSN)) S MPIMERR="4^SSN not found on MPI." Q
"RTN","MPIMDMA1",68,0)
 .S ICN=$O(^MPIVET("SSN",MPIMSSN,0)),IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMDMA1",69,0)
 .I $G(OPT)="P",IDST="P" S MPIMARR(0)=0,MPIMARR(ICN)=""
"RTN","MPIMDMA1",70,0)
 .I $G(OPT)'="P",IDST'="D" S MPIMARR(0)=0,MPIMARR(ICN)=""
"RTN","MPIMDMA1",71,0)
 .I $O(^MPIVET("SSN",MPIMSSN,ICN)) D
"RTN","MPIMDMA1",72,0)
 ..F  S ICN=$O(^MPIVET("SSN",MPIMSSN,ICN)) Q:'ICN  D
"RTN","MPIMDMA1",73,0)
 ...S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMDMA1",74,0)
 ...I $G(OPT)="P",IDST="P" S MPIMARR(0)=1,MPIMARR(ICN)=""
"RTN","MPIMDMA1",75,0)
 ...I $G(OPT)'="P",IDST'="D" S MPIMARR(0)=1,MPIMARR(ICN)=""
"RTN","MPIMDMA1",76,0)
 ;
"RTN","MPIMDMA1",77,0)
FNDTF(ARR1) ;build array of available dates in MPI SHARED TREATING FACILITY STATS (#985.34) file
"RTN","MPIMDMA1",78,0)
 N ARR2,CNT,COMDT,LIM,CNT1
"RTN","MPIMDMA1",79,0)
 S (CNT,COMDT)=0 F  S COMDT=$O(^MPI(985.34,"B",COMDT)) Q:'COMDT  S CNT=CNT+1,ARR1(CNT)=$J(CNT,2)_") "_$$FMTE^XLFDT(COMDT)_"^"_COMDT
"RTN","MPIMDMA1",80,0)
 ;
"RTN","MPIMDMA1",81,0)
 S LIM=$FN((CNT/3),"",0)
"RTN","MPIMDMA1",82,0)
 F CNT=1:1:LIM S ARR2(CNT)=""
"RTN","MPIMDMA1",83,0)
 ;
"RTN","MPIMDMA1",84,0)
 S (CNT,CNT1)=0
"RTN","MPIMDMA1",85,0)
 F  S CNT=$O(ARR1(CNT)) Q:'CNT  S CNT1=CNT1+1 D
"RTN","MPIMDMA1",86,0)
 .I CNT1>LIM S CNT1=1
"RTN","MPIMDMA1",87,0)
 .S ARR2(CNT1)=ARR2(CNT1)_"   "_$P(ARR1(CNT),"^")
"RTN","MPIMDMA1",88,0)
 ;
"RTN","MPIMDMA1",89,0)
 W !!,"Dates for which data is available:",!
"RTN","MPIMDMA1",90,0)
 S CNT=0 F  S CNT=$O(ARR2(CNT)) Q:'CNT  W !,ARR2(CNT)
"RTN","MPIMDMA1",91,0)
 Q
"RTN","MPIMDMC1")
0^70^B17205474
"RTN","MPIMDMC1",1,0)
MPIMDMC1 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Options to Track Data Resolution Work (CON'T) ; 03/14/02
"RTN","MPIMDMC1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,24**;30 Apr 99
"RTN","MPIMDMC1",3,0)
 ;
"RTN","MPIMDMC1",4,0)
EN1 ;Manual check out of ICN or SSN
"RTN","MPIMDMC1",5,0)
 W ! S $P(LN,"=",81)=""
"RTN","MPIMDMC1",6,0)
 S DIC="^MPI(985.25,",DIC(0)="QEAML",DIC("A")="Check out ICN (use ICN or SSN): "
"RTN","MPIMDMC1",7,0)
 D ^DIC K DIC G:Y<0 QUIT S ICN=+Y
"RTN","MPIMDMC1",8,0)
 ;existing entry
"RTN","MPIMDMC1",9,0)
 S USER=$P(^MPI(985.25,ICN,0),"^",3) I +USER D  G EN1
"RTN","MPIMDMC1",10,0)
 .S USERNM=$$GET1^DIQ(200,+USER_",",.01) D SET,PRT
"RTN","MPIMDMC1",11,0)
 .I $D(CASE) D  Q
"RTN","MPIMDMC1",12,0)
 ..W !!,"===> This ICN checked out by <<OPEN>> CASE #",CASE
"RTN","MPIMDMC1",13,0)
 ..I NOIS]"" W "  <<NOIS>> ",NOIS
"RTN","MPIMDMC1",14,0)
 ..W !,"===> Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMDMC1",15,0)
 .I '$D(CASE) D
"RTN","MPIMDMC1",16,0)
 ..W !!,"===> This ICN has already been checked out by:"
"RTN","MPIMDMC1",17,0)
 ..W !,"===> ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMDMC1",18,0)
 .W ! S DIR(0)="Y",DIR("A")="     Do you want to release this ICN",DIR("B")="NO" D ^DIR K DIR
"RTN","MPIMDMC1",19,0)
 .I +Y=1 S DIK="^MPI(985.25,",DA=ICN D ^DIK K DIK W "  released."
"RTN","MPIMDMC1",20,0)
 ;
"RTN","MPIMDMC1",21,0)
 ;new entry
"RTN","MPIMDMC1",22,0)
 S SSN=$P(^MPIVET(ICN,0),"^",14),USERNM=$$GET1^DIQ(200,+DUZ_",",.01),NOW=$$NOW^XLFDT
"RTN","MPIMDMC1",23,0)
 L +^MPI(985.25,ICN):1 E  W !!,"Someone else is editing this record. Try again later.",! G QUIT
"RTN","MPIMDMC1",24,0)
 S DIE="^MPI(985.25,",DA=ICN,DR="1///^S X=SSN;2///^S X=USERNM;3///^S X=NOW" D ^DIE K DIE
"RTN","MPIMDMC1",25,0)
 L -^MPI(985.25,ICN)
"RTN","MPIMDMC1",26,0)
 D SET,PRT
"RTN","MPIMDMC1",27,0)
 G EN1
"RTN","MPIMDMC1",28,0)
 ;
"RTN","MPIMDMC1",29,0)
QUIT K AF,AF1,AFNAME,AFSTA,CASE,CASEIEN,CLAIM,CMOR,DA,DIC,DIE,DIK,DIR,DOB,DOD,DR,FNAME,GOT,ICN,ICNIEN
"RTN","MPIMDMC1",30,0)
 K LN,LNAME,MNAME,MOM,NAME,NODE,NOW,SEX,SITENM,SITENUM,SSN,STATUS,STUB,USER,USERNM,Y,NOIS
"RTN","MPIMDMC1",31,0)
 K ^XTMP("MPIM","DMC1",$J)
"RTN","MPIMDMC1",32,0)
 Q
"RTN","MPIMDMC1",33,0)
 ;
"RTN","MPIMDMC1",34,0)
SET ;find data
"RTN","MPIMDMC1",35,0)
 K ^XTMP("MPIM","DMC1",$J)
"RTN","MPIMDMC1",36,0)
 S ^XTMP("MPIM",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MASTER PATIENT INDEX AUSTIN"
"RTN","MPIMDMC1",37,0)
 S STUB=0
"RTN","MPIMDMC1",38,0)
 S NODE=^MPIVET(ICN,0),SSN=$P(NODE,"^",14),LNAME=$P(NODE,"^",2),FNAME=$P(NODE,"^",3),MOM=$P(NODE,"^",7)
"RTN","MPIMDMC1",39,0)
 S MNAME=$P(NODE,"^",4),SEX=$P(NODE,"^",13),DOB=$$FMTE^XLFDT($P(NODE,"^",8)),DOD=$P(NODE,"^",11)
"RTN","MPIMDMC1",40,0)
 I SSN="" S SSN="UNKNOWN"
"RTN","MPIMDMC1",41,0)
 I $D(^MPIVET(ICN,0)),$P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" S STUB=1 Q  ;**24
"RTN","MPIMDMC1",42,0)
 S CLAIM=$P(^MPIVET(ICN,1),"^"),CMOR=$P(^(1),"^",2)
"RTN","MPIMDMC1",43,0)
 I CMOR'="" S CMOR=$P($$NS^XUAF4(CMOR),"^")
"RTN","MPIMDMC1",44,0)
 S ^XTMP("MPIM","DMC1",$J,SSN,ICN)=LNAME_","_FNAME_" "_MNAME_"^"_DOB_"^"_CMOR_"^"_SEX_"^"_CLAIM_"^"_DOD
"RTN","MPIMDMC1",45,0)
 S AF=0 F  S AF=$O(^MPI(985.5,"AM",ICN,AF)) Q:'AF  D
"RTN","MPIMDMC1",46,0)
 .S AF1=$$NS^XUAF4(AF),AFNAME=$P(AF1,"^"),AFSTA=$P(AF1,"^",2)
"RTN","MPIMDMC1",47,0)
 .S ^XTMP("MPIM","DMC1",$J,SSN,ICN,AFNAME)=AFSTA
"RTN","MPIMDMC1",48,0)
 Q
"RTN","MPIMDMC1",49,0)
 ;
"RTN","MPIMDMC1",50,0)
PRT ;Print checked out record
"RTN","MPIMDMC1",51,0)
 I STUB D  Q
"RTN","MPIMDMC1",52,0)
 .W !!,"This appears to be a deactivated ICN."
"RTN","MPIMDMC1",53,0)
 .S DIK="^MPI(985.25,",DA=ICN D ^DIK K DIK
"RTN","MPIMDMC1",54,0)
 .W "  Check out of this ICN has been cancelled."
"RTN","MPIMDMC1",55,0)
 ;
"RTN","MPIMDMC1",56,0)
 W @IOF
"RTN","MPIMDMC1",57,0)
 ;check to see if this ICN is associated with an active case in file #985.2
"RTN","MPIMDMC1",58,0)
 K CASE S GOT=0 I $D(^MPI(985.2,"ICN",ICN)) D
"RTN","MPIMDMC1",59,0)
 .S CASEIEN=0 F  S CASEIEN=$O(^MPI(985.2,"ICN",ICN,CASEIEN)) Q:'CASEIEN  D  Q:GOT
"RTN","MPIMDMC1",60,0)
 ..S STATUS=$P(^MPI(985.2,CASEIEN,0),"^",3)
"RTN","MPIMDMC1",61,0)
 ..I STATUS="O" S GOT=1,CASE=$P(^MPI(985.2,CASEIEN,0),"^"),NOIS=$P(^(0),"^",6)
"RTN","MPIMDMC1",62,0)
 W !,"Checked out on ",$$FMTE^XLFDT($E($P(^MPI(985.25,ICN,0),"^",4),1,12))," by ",USERNM
"RTN","MPIMDMC1",63,0)
 I $D(CASE) W !,"<<OPEN>> CASE #",CASE I NOIS]"" W ?31,"<<NOIS>> ",NOIS
"RTN","MPIMDMC1",64,0)
 W !,LN
"RTN","MPIMDMC1",65,0)
 S SSN="" F  S SSN=$O(^XTMP("MPIM","DMC1",$J,SSN)) Q:SSN=""  D
"RTN","MPIMDMC1",66,0)
 .S ICNIEN=0 F  S ICNIEN=$O(^XTMP("MPIM","DMC1",$J,SSN,ICNIEN)) Q:'ICNIEN  D
"RTN","MPIMDMC1",67,0)
 ..S NODE=^XTMP("MPIM","DMC1",$J,SSN,ICNIEN)
"RTN","MPIMDMC1",68,0)
 ..S NAME=$P(NODE,"^"),DOB=$P(NODE,"^",2),CMOR=$P(NODE,"^",3),SEX=$P(NODE,"^",4)
"RTN","MPIMDMC1",69,0)
 ..S CLAIM=$P(NODE,"^",5),DOD=$P(NODE,"^",6)
"RTN","MPIMDMC1",70,0)
 ..I CMOR="" S CMOR="UNKNOWN"
"RTN","MPIMDMC1",71,0)
 ..I DOD]"" S DOD=$$FMTE^XLFDT(DOD)
"RTN","MPIMDMC1",72,0)
 ..W !?2,"ICN    : ",ICNIEN,?40,"CMOR: ",CMOR
"RTN","MPIMDMC1",73,0)
 ..W !?2,"Name   : ",NAME
"RTN","MPIMDMC1",74,0)
 ..W !?2,"SSN    : ",SSN
"RTN","MPIMDMC1",75,0)
 ..W !?2,"DOB    : ",DOB I DOD]"" W ?27,"===> Date of Death: ",DOD
"RTN","MPIMDMC1",76,0)
 ..W !?2,"Sex    : ",SEX
"RTN","MPIMDMC1",77,0)
 ..W !?2,"Claim #: ",CLAIM
"RTN","MPIMDMC1",78,0)
 ..W !?2,"Mother's Maiden Name: ",MOM
"RTN","MPIMDMC1",79,0)
 ..W !!?2,"Associated Facilities:",!?2,"----------------------"
"RTN","MPIMDMC1",80,0)
 ..S SITENM="" F  S SITENM=$O(^XTMP("MPIM","DMC1",$J,SSN,ICNIEN,SITENM)) Q:SITENM=""  D
"RTN","MPIMDMC1",81,0)
 ...S SITENUM=^XTMP("MPIM","DMC1",$J,SSN,ICNIEN,SITENM)
"RTN","MPIMDMC1",82,0)
 ...W !?4,SITENUM," - ",SITENM
"RTN","MPIMDMC1",83,0)
 Q
"RTN","MPIMDMC2")
0^71^B22272529
"RTN","MPIMDMC2",1,0)
MPIMDMC2 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Options to View Data Resolution Work in file 985.25 ; 03/14/02
"RTN","MPIMDMC2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7**;30 Apr 99
"RTN","MPIMDMC2",3,0)
 ;
"RTN","MPIMDMC2",4,0)
 ;review current entries in file #985.25 (active work)
"RTN","MPIMDMC2",5,0)
 W !!,"This option prints a current report from the MPI DATA MGT ACTIVE RESOLUTION"
"RTN","MPIMDMC2",6,0)
 W !,"WORK file (#985.25).  The report can be sorted by ICN, SSN, Patient Name,"
"RTN","MPIMDMC2",7,0)
 W !,"or Case Worker.",!!,"Select Sort:"
"RTN","MPIMDMC2",8,0)
 K DIR S DIR(0)="SAM^I:ICN;S:SSN;P:PATIENT NAME;C:CASE WORKER;"
"RTN","MPIMDMC2",9,0)
 S DIR("A")="  (I)CN, (S)SN, (P)atient Name, or (C)ase Worker (or ""^"" to HALT): "
"RTN","MPIMDMC2",10,0)
 D ^DIR I $D(DIRUT) S QFLG=1 G QUIT
"RTN","MPIMDMC2",11,0)
 S ANS=Y
"RTN","MPIMDMC2",12,0)
 ;
"RTN","MPIMDMC2",13,0)
 K ICNARR,SSNARR,PTARR,CSARR S ICNT=0
"RTN","MPIMDMC2",14,0)
 S ICN=0 F  S ICN=$O(^MPI(985.25,ICN)) Q:'ICN  D
"RTN","MPIMDMC2",15,0)
 .S ICNT=ICNT+1
"RTN","MPIMDMC2",16,0)
 .S NODE=^MPI(985.25,ICN,0),CHKOUT=$$FMTE^XLFDT($E($P(NODE,"^",4),1,12))
"RTN","MPIMDMC2",17,0)
 .S CASE="",CASEIEN=$P(NODE,"^",5) I +CASEIEN S CASE=$P(^MPI(985.2,CASEIEN,0),"^"),NOIS=$P(^(0),"^",6)
"RTN","MPIMDMC2",18,0)
 .S SSN=$P(NODE,"^",2) I SSN="" S SSN="UNKNOWN"
"RTN","MPIMDMC2",19,0)
 .S USER=$P(NODE,"^",3),USERNM=$$GET1^DIQ(200,+USER_",",.01),USERADDR=$$GET1^DIQ(200,+USER_",",.111),USERPH=$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMDMC2",20,0)
 .S ICNNODE=^MPIVET(ICN,0),DOB=$$FMTE^XLFDT($P(ICNNODE,"^",8))
"RTN","MPIMDMC2",21,0)
 .S LNM=$P(ICNNODE,"^",2),FNM=$P(ICNNODE,"^",3),MNM=$P(ICNNODE,"^",4),NM=LNM_","_FNM_" "_MNM
"RTN","MPIMDMC2",22,0)
 .I ANS="I" S ICNARR(ICN)=SSN_"^"_NM_"^"_DOB_"^"_CASE_"^"_CHKOUT_"^"_USERNM_"^"_USERADDR_"^"_USERPH_"^"_NOIS Q
"RTN","MPIMDMC2",23,0)
 .I ANS="S" S SSNARR(SSN,ICN)=NM_"^"_DOB_"^"_CASE_"^"_CHKOUT_"^"_USERNM_"^"_USERADDR_"^"_USERPH_"^"_NOIS Q
"RTN","MPIMDMC2",24,0)
 .I ANS="P" S PTARR(NM,ICN)=SSN_"^"_DOB_"^"_CASE_"^"_CHKOUT_"^"_USERNM_"^"_USERADDR_"^"_USERPH_"^"_NOIS Q
"RTN","MPIMDMC2",25,0)
 .I ANS="C" S CSARR(USERNM,ICN)=SSN_"^"_NM_"^"_DOB_"^"_CASE_"^"_CHKOUT_"^"_NOIS Q
"RTN","MPIMDMC2",26,0)
 ;
"RTN","MPIMDMC2",27,0)
 S PDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)),$P(LN,"=",80)="",$P(LN2,"-",80)=""
"RTN","MPIMDMC2",28,0)
 S SORTPRT=$S(ANS="I":"ICN",ANS="S":"SSN",ANS="P":"PATIENT NAME",1:"CASE WORKER")_" SORT"
"RTN","MPIMDMC2",29,0)
 W @IOF
"RTN","MPIMDMC2",30,0)
 W !,"Active Resolution Work File Entries  <<",SORTPRT,">>  - Total Entries: ",ICNT
"RTN","MPIMDMC2",31,0)
 W !,"Printed: ",PDT,!,LN,!
"RTN","MPIMDMC2",32,0)
 ;
"RTN","MPIMDMC2",33,0)
 I ANS="I" D
"RTN","MPIMDMC2",34,0)
 .W !,"ICN",?13,"SSN",?24,"PATIENT NAME",?55,"DOB",?69,"CASE #",!,LN2
"RTN","MPIMDMC2",35,0)
 .S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  S NODE=(ICNARR(ICN)) D
"RTN","MPIMDMC2",36,0)
 ..S SSN=$P(NODE,"^"),NM=$P(NODE,"^",2),DOB=$P(NODE,"^",3),CASE=$P(NODE,"^",4)
"RTN","MPIMDMC2",37,0)
 ..S CHKOUT=$P(NODE,"^",5),USERNM=$P(NODE,"^",6),USERADDR=$P(NODE,"^",7),USERPH=$P(NODE,"^",8),NOIS=$P(NODE,"^",9)
"RTN","MPIMDMC2",38,0)
 ..W !,ICN,?13,SSN,?24,NM,?55,DOB,?69,CASE
"RTN","MPIMDMC2",39,0)
 ..I NOIS]"" W !,"Associated with NOIS #",NOIS
"RTN","MPIMDMC2",40,0)
 ..W !?2,"=> Checked out ",CHKOUT," by:",!?5,USERNM," / ",USERADDR," / ",USERPH,!
"RTN","MPIMDMC2",41,0)
 ;
"RTN","MPIMDMC2",42,0)
 I ANS="S" D
"RTN","MPIMDMC2",43,0)
 .W !,"SSN",?12,"ICN",?24,"PATIENT NAME",?55,"DOB",?69,"CASE #",!,LN2
"RTN","MPIMDMC2",44,0)
 .S SSN="" F  S SSN=$O(SSNARR(SSN)) Q:SSN=""  D
"RTN","MPIMDMC2",45,0)
 ..S ICN=0 F  S ICN=$O(SSNARR(SSN,ICN)) Q:'ICN  S NODE=(SSNARR(SSN,ICN)) D
"RTN","MPIMDMC2",46,0)
 ...S NM=$P(NODE,"^",1),DOB=$P(NODE,"^",2),CASE=$P(NODE,"^",3)
"RTN","MPIMDMC2",47,0)
 ...S CHKOUT=$P(NODE,"^",4),USERNM=$P(NODE,"^",5),USERADDR=$P(NODE,"^",6),USERPH=$P(NODE,"^",7),NOIS=$P(NODE,"^",8)
"RTN","MPIMDMC2",48,0)
 ...W !,SSN,?12,ICN,?24,NM,?55,DOB,?69,CASE
"RTN","MPIMDMC2",49,0)
 ...I NOIS]"" W !,"Associated with NOIS #",NOIS
"RTN","MPIMDMC2",50,0)
 ...W !?2,"=> Checked out ",CHKOUT," by:",!?5,USERNM," / ",USERADDR," / ",USERPH,!
"RTN","MPIMDMC2",51,0)
 ;
"RTN","MPIMDMC2",52,0)
 I ANS="P" D
"RTN","MPIMDMC2",53,0)
 .W !,"PATIENT NAME",?33,"ICN",?45,"SSN",?55,"DOB",?69,"CASE #",!,LN2
"RTN","MPIMDMC2",54,0)
 .S NM="" F  S NM=$O(PTARR(NM)) Q:NM=""  D
"RTN","MPIMDMC2",55,0)
 ..S ICN=0 F  S ICN=$O(PTARR(NM,ICN)) Q:'ICN  S NODE=(PTARR(NM,ICN)) D
"RTN","MPIMDMC2",56,0)
 ...S SSN=$P(NODE,"^",1),DOB=$P(NODE,"^",2),CASE=$P(NODE,"^",3)
"RTN","MPIMDMC2",57,0)
 ...S CHKOUT=$P(NODE,"^",4),USERNM=$P(NODE,"^",5),USERADDR=$P(NODE,"^",6),USERPH=$P(NODE,"^",7),NOIS=$P(NODE,"^",8)
"RTN","MPIMDMC2",58,0)
 ...W !,NM,?33,ICN,?45,SSN,?55,DOB,?69,CASE
"RTN","MPIMDMC2",59,0)
 ...I NOIS]"" W !,"Associated with NOIS #",NOIS
"RTN","MPIMDMC2",60,0)
 ...W !?2,"=> Checked out ",CHKOUT," by:",!?5,USERNM," / ",USERADDR," / ",USERPH,!
"RTN","MPIMDMC2",61,0)
 ;
"RTN","MPIMDMC2",62,0)
 I ANS="C" D
"RTN","MPIMDMC2",63,0)
 .S USERNM="" F  S USERNM=$O(CSARR(USERNM)) Q:USERNM=""  D
"RTN","MPIMDMC2",64,0)
 ..S DIC=200,DIC(0)="M",X=USERNM D ^DIC K DIC S USER=+Y Q:USER<0
"RTN","MPIMDMC2",65,0)
 ..S USERADDR=$$GET1^DIQ(200,+USER_",",.111),USERPH=$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMDMC2",66,0)
 ..W !,"CASE WORKER: ",USERNM," / ",USERADDR," / ",USERPH
"RTN","MPIMDMC2",67,0)
 ..W !,"ICN",?13,"SSN",?24,"PATIENT NAME",?55,"DOB",?69,"CASE #",!,LN2
"RTN","MPIMDMC2",68,0)
 ..S ICN=0 F  S ICN=$O(CSARR(USERNM,ICN)) Q:'ICN  S NODE=(CSARR(USERNM,ICN)) D
"RTN","MPIMDMC2",69,0)
 ...S SSN=$P(NODE,"^",1),NM=$P(NODE,"^",2),DOB=$P(NODE,"^",3),CASE=$P(NODE,"^",4),CHKOUT=$P(NODE,"^",5),NOIS=$P(NODE,"^",6)
"RTN","MPIMDMC2",70,0)
 ...W !,ICN,?13,SSN,?24,NM,?55,DOB,?69,CASE
"RTN","MPIMDMC2",71,0)
 ...I NOIS]"" W !,"Associated with NOIS #",NOIS
"RTN","MPIMDMC2",72,0)
 ...W !,"=> Checked out ",CHKOUT,!
"RTN","MPIMDMC2",73,0)
 ;
"RTN","MPIMDMC2",74,0)
QUIT K ANS,CASE,CASEIEN,CASENUM,CCNT,CHKOUT,COMP,COMPCNT,CSARR,CSORT,DIC,DIR,DIRUT,DOB,DTCL,DTOP,FNM
"RTN","MPIMDMC2",75,0)
 K ICN,ICNARR,ICNIEN,ICNLOOP,ICNLP,ICNNODE,ICNT,ISORT,JJ,LN,LN2,LNM,MNM,NM,NODE,PDT,PRT,PTARR,QFLG
"RTN","MPIMDMC2",76,0)
 K SITE,SITEARR,SITEIEN,SITELP,SITENM,SORTPRT,SS,SSN,SSNARR,SSNIEN,SSNLOOP,SSNLP,SSORT,STATUS
"RTN","MPIMDMC2",77,0)
 K TXT,USER,USERADDR,USERPH,USERNM,VISN,X,Y,NOIS
"RTN","MPIMDMC2",78,0)
 Q
"RTN","MPIMDMCW")
0^72^B17601096
"RTN","MPIMDMCW",1,0)
MPIMDMCW ;BIR/CML - (MPI ROUTINE) Case Worker Stat Report ; 03/14/02
"RTN","MPIMDMCW",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,36**;30 Apr 99
"RTN","MPIMDMCW",3,0)
 ;
"RTN","MPIMDMCW",4,0)
EN1 ;Print a totals report of CW open and closed cases from file #985.2 during a specified date range
"RTN","MPIMDMCW",5,0)
 S QFLG=1
"RTN","MPIMDMCW",6,0)
 W !!,"This option prints a Case Worker report of cases stored in the MPI DATA MGT"
"RTN","MPIMDMCW",7,0)
 W !,"RESOLUTION JOURNAL file (#985.2) for a specified date range.  Cases that were"
"RTN","MPIMDMCW",8,0)
 W !,"opened and/or resolved during the specified time period are included.  Totals"
"RTN","MPIMDMCW",9,0)
 W !,"are displayed for the number of cases each case worker opened, the number of"
"RTN","MPIMDMCW",10,0)
 W !,"those cases still open and the number of cases that were resolved."
"RTN","MPIMDMCW",11,0)
 W !,"(Note: Resolved cases may have been opened outside the specified date range.)"
"RTN","MPIMDMCW",12,0)
 ;
"RTN","MPIMDMCW",13,0)
ASK ;Ask for Date Range
"RTN","MPIMDMCW",14,0)
 W !!,"Enter date range for data to be included in report."
"RTN","MPIMDMCW",15,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMDMCW",16,0)
 S DIR(0)="DAO^:DT:EPX",DIR("A")="Beginning Date for Report:  "
"RTN","MPIMDMCW",17,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S MPIMBDT=Y
"RTN","MPIMDMCW",18,0)
 S DIR(0)="DAO^"_MPIMBDT_":DT:EPX"
"RTN","MPIMDMCW",19,0)
 S DIR("A")="Ending Date for Report:  "
"RTN","MPIMDMCW",20,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S MPIMEDT=Y
"RTN","MPIMDMCW",21,0)
DEV ;
"RTN","MPIMDMCW",22,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPIMDMCW",23,0)
 K ZTSAVE S ZTSAVE("MPIMBDT")="",ZTSAVE("MPIMEDT")=""
"RTN","MPIMDMCW",24,0)
 D EN^XUTMDEVQ("START^MPIMDMCW","MPI - Print Case Worker Stats",.ZTSAVE) I 'POP Q
"RTN","MPIMDMCW",25,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMDMCW",26,0)
 G QUIT
"RTN","MPIMDMCW",27,0)
 ;
"RTN","MPIMDMCW",28,0)
START ;Compile report
"RTN","MPIMDMCW",29,0)
 ;TOTOP = total cases opened during date range
"RTN","MPIMDMCW",30,0)
 ;TOTO = total cases still open
"RTN","MPIMDMCW",31,0)
 ;TOTR = total cases resolved during date range
"RTN","MPIMDMCW",32,0)
 ;
"RTN","MPIMDMCW",33,0)
 K CWARR,CASEARR
"RTN","MPIMDMCW",34,0)
 S STOPDT=MPIMEDT_".9",STARTDT=MPIMBDT-.1
"RTN","MPIMDMCW",35,0)
 S (PG,QFLG,CNT,TOTOP,TOTO,TOTR)=0,$P(LN,"-",81)=""
"RTN","MPIMDMCW",36,0)
 S HDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMDMCW",37,0)
 D HDR
"RTN","MPIMDMCW",38,0)
 S CASE=0 F  S CASE=$O(^MPI(985.2,CASE)) Q:'CASE  D
"RTN","MPIMDMCW",39,0)
 .S DTOP=$P(^MPI(985.2,CASE,0),"^",4) I DTOP<STARTDT!(DTOP>STOPDT) Q
"RTN","MPIMDMCW",40,0)
 .I '$D(CASEARR(CASE)) S CASEARR(CASE)=""
"RTN","MPIMDMCW",41,0)
 .S STATUS=$P(^MPI(985.2,CASE,0),"^",3),CW=$P(^(0),"^",2),CWNM=$$GET1^DIQ(200,+CW_",",.01)
"RTN","MPIMDMCW",42,0)
 .I '$D(CWARR(CWNM,"OP")) S CWARR(CWNM,"OP")=0
"RTN","MPIMDMCW",43,0)
 .S CWARR(CWNM,"OP")=CWARR(CWNM,"OP")+1,TOTOP=TOTOP+1
"RTN","MPIMDMCW",44,0)
 .I STATUS="O" D
"RTN","MPIMDMCW",45,0)
 ..I '$D(CWARR(CWNM,"O")) S CWARR(CWNM,"O")=0
"RTN","MPIMDMCW",46,0)
 ..S CWARR(CWNM,"O")=CWARR(CWNM,"O")+1,TOTO=TOTO+1
"RTN","MPIMDMCW",47,0)
 .I STATUS="R" D
"RTN","MPIMDMCW",48,0)
 ..I '$D(CWARR(CWNM,"R")) S CWARR(CWNM,"R")=0
"RTN","MPIMDMCW",49,0)
 ..S CWARR(CWNM,"R")=CWARR(CWNM,"R")+1,TOTR=TOTR+1
"RTN","MPIMDMCW",50,0)
 ;
"RTN","MPIMDMCW",51,0)
 ; check for any cases opened outside the date range that have been closed
"RTN","MPIMDMCW",52,0)
 S CASE=0 F  S CASE=$O(^MPI(985.2,CASE)) Q:'CASE  D
"RTN","MPIMDMCW",53,0)
 .S DTCL=$P(^MPI(985.2,CASE,0),"^",5) I DTCL<STARTDT!(DTCL>STOPDT) Q
"RTN","MPIMDMCW",54,0)
 .I $D(CASEARR(CASE)) Q
"RTN","MPIMDMCW",55,0)
 .S CW=$P(^MPI(985.2,CASE,0),"^",2),CWNM=$$GET1^DIQ(200,+CW_",",.01)
"RTN","MPIMDMCW",56,0)
 .I '$D(CWARR(CWNM,"R")) S CWARR(CWNM,"R")=0
"RTN","MPIMDMCW",57,0)
 .S CWARR(CWNM,"R")=CWARR(CWNM,"R")+1,TOTR=TOTR+1
"RTN","MPIMDMCW",58,0)
 ;
"RTN","MPIMDMCW",59,0)
PRT ;Print report
"RTN","MPIMDMCW",60,0)
 S CNT=0
"RTN","MPIMDMCW",61,0)
 S CW="" F  S CW=$O(CWARR(CW)) Q:CW=""  D
"RTN","MPIMDMCW",62,0)
 .S CNT=CNT+1
"RTN","MPIMDMCW",63,0)
 .S TOTCWOP=$G(CWARR(CW,"OP")),TOTCWO=$G(CWARR(CW,"O")),TOTCWR=$G(CWARR(CW,"R"))
"RTN","MPIMDMCW",64,0)
 .S:TOTCWOP="" TOTCWOP=0 S:TOTCWO="" TOTCWO=0 S:TOTCWR="" TOTCWR=0
"RTN","MPIMDMCW",65,0)
 .D:$Y+5>IOSL HDR G:QFLG QUIT
"RTN","MPIMDMCW",66,0)
 .W !,$J(CNT,2),". ",CW,?42,$J(TOTCWOP,6),?58,$J(TOTCWO,6),?71,$J(TOTCWR,6)
"RTN","MPIMDMCW",67,0)
 ;write grand totals
"RTN","MPIMDMCW",68,0)
 W !?35,"------------------------------------------"
"RTN","MPIMDMCW",69,0)
 W !?27,"TOTAL:",?42,$J(TOTOP,6),?58,$J(TOTO,6),?71,$J(TOTR,6)
"RTN","MPIMDMCW",70,0)
 G QUIT
"RTN","MPIMDMCW",71,0)
 ;
"RTN","MPIMDMCW",72,0)
HDR ;header for stat report
"RTN","MPIMDMCW",73,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMDMCW",74,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIMDMCW",75,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","MPIMDMCW",76,0)
 W !,"MPI IMDQ - Case Worker Statistics",?70,"Page: ",PG
"RTN","MPIMDMCW",77,0)
 W !,"For period ",$$FMTE^XLFDT($P(MPIMBDT,"."))," to ",$$FMTE^XLFDT($P(MPIMEDT,".")),?51,"Printed ",HDT
"RTN","MPIMDMCW",78,0)
 W !!?39,"TOTAL CASES",?54,"TOTAL STILL",?71,"TOTAL"
"RTN","MPIMDMCW",79,0)
 W !?5,"CASE WORKER",?41,"OPENED",?57,"OPEN",?70,"RESOLVED*",!,LN
"RTN","MPIMDMCW",80,0)
 Q
"RTN","MPIMDMCW",81,0)
 ;
"RTN","MPIMDMCW",82,0)
QUIT ;
"RTN","MPIMDMCW",83,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIMDMCW",84,0)
 .S SS=19-$Y F JJ=1:1:SS W !
"RTN","MPIMDMCW",85,0)
 .W !,"*Note:"
"RTN","MPIMDMCW",86,0)
 .W !,"Total Resolved count may include cases opened outside the specified date range.",!
"RTN","MPIMDMCW",87,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMDMCW",88,0)
 K %,CASE,CNT,CW,CWARR,CWNM,DIR,DIRUT,DTOP,DTOUT,DUOUT,HDT,JJ,LN,MPIMBDT,MPIMEDT,PG,QFLG,SS,STARTDT
"RTN","MPIMDMCW",89,0)
 K STATUS,STOPDT,TOTC,TOTCWC,TOTCWO,TOTCWR,TOTO,TOTR,X,Y,ZTSK
"RTN","MPIMDMCW",90,0)
 K DTCL,TOTCWOP,TOTOP
"RTN","MPIMDMCW",91,0)
 Q
"RTN","MPIMDMF1")
0^73^B21927031
"RTN","MPIMDMF1",1,0)
MPIMDMF1 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Utility FileMan Calls ; 03/14/02
"RTN","MPIMDMF1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,35**;30 Apr 99
"RTN","MPIMDMF1",3,0)
 ;
"RTN","MPIMDMF1",4,0)
ADD ;called from input transform for the CASE # field in file 985.2 to add new entry to file
"RTN","MPIMDMF1",5,0)
 I '$G(DUZ) W !!,"DUZ not defined - make sure it is set before using this option." Q
"RTN","MPIMDMF1",6,0)
 I X="@" Q
"RTN","MPIMDMF1",7,0)
 I '$D(^MPIVET("SSN",X))&('$D(^MPIVET(X)))&('$D(^MPI(985.2,X))) Q
"RTN","MPIMDMF1",8,0)
 ;
"RTN","MPIMDMF1",9,0)
 N NOW,DATE,CHK,LAST,NEW,ICNLP,NODE,DOB,LNM,FNM,MNM,NM,ICN,QQ,GOT,USER,MPIMSSN,CHKDATE
"RTN","MPIMDMF1",10,0)
 I $D(^MPIVET("SSN",X)) S MPIMSSN=X,MPIMICN=$O(^MPIVET("SSN",MPIMSSN,0))
"RTN","MPIMDMF1",11,0)
 I $D(^MPIVET(X)) S MPIMICN=X,MPIMSSN=$P(^MPIVET(MPIMICN,0),"^",14)
"RTN","MPIMDMF1",12,0)
 I 'MPIMICN K MPIMICN,X Q
"RTN","MPIMDMF1",13,0)
 ;
"RTN","MPIMDMF1",14,0)
 ;check for already existing case in file 985.25
"RTN","MPIMDMF1",15,0)
 I +MPIMSSN D
"RTN","MPIMDMF1",16,0)
 .S ICNLP=0 F  S ICNLP=$O(^MPIVET("SSN",MPIMSSN,ICNLP)) Q:'ICNLP  S ICNARR(ICNLP)=""
"RTN","MPIMDMF1",17,0)
 I '$D(ICNARR) S ICNARR(MPIMICN)=""
"RTN","MPIMDMF1",18,0)
 S GOT=0
"RTN","MPIMDMF1",19,0)
 S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  I $D(^MPI(985.25,ICN,0)) D
"RTN","MPIMDMF1",20,0)
 .S USER=$P(^MPI(985.25,ICN,0),"^",3) I +USER S USER=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMDMF1",21,0)
 .W !!,"==> ICN #",ICN," is checked out by ",USER,"."
"RTN","MPIMDMF1",22,0)
 .W !,"However, no Resolution Journal Case exists. In order to create a new Resolution"
"RTN","MPIMDMF1",23,0)
 .W !,"Journal case, the ICN has to be released."
"RTN","MPIMDMF1",24,0)
 .K FDA S FDA(985.25,ICN_",",.01)="@" D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",25,0)
 .W " ...ICN #",ICN," has been released."
"RTN","MPIMDMF1",26,0)
 ;
"RTN","MPIMDMF1",27,0)
 S NOW=$E($$NOW^XLFDT,1,12),DATE=$E(NOW,2,3)_$E(NOW,4,5),CHKDATE=DATE_"-00000"
"RTN","MPIMDMF1",28,0)
 ;
"RTN","MPIMDMF1",29,0)
 I $O(^MPI(985.2,"B",CHKDATE)) D
"RTN","MPIMDMF1",30,0)
 .S CHK=DATE_"-99999"
"RTN","MPIMDMF1",31,0)
 .S LAST=$P($O(^MPI(985.2,"B",CHK),-1),"-",2)
"RTN","MPIMDMF1",32,0)
 .S NEW=+LAST+1,QQ="0000"_NEW,X=DATE_"-"_$E(QQ,$L(NEW),$L(QQ))
"RTN","MPIMDMF1",33,0)
 ;
"RTN","MPIMDMF1",34,0)
 I '$O(^MPI(985.2,"B",CHKDATE)) S X=DATE_"-00001"
"RTN","MPIMDMF1",35,0)
 ;
"RTN","MPIMDMF1",36,0)
 W !!,"New Case #",X," created for:",!  ; **35
"RTN","MPIMDMF1",37,0)
 K ICNARR,SSNARR
"RTN","MPIMDMF1",38,0)
 I 'MPIMSSN S ICNARR(MPIMICN)=""
"RTN","MPIMDMF1",39,0)
 I +MPIMSSN D
"RTN","MPIMDMF1",40,0)
 .S ICNLP=0 F  S ICNLP=$O(^MPIVET("SSN",MPIMSSN,ICNLP)) Q:'ICNLP  S ICNARR(ICNLP)=""
"RTN","MPIMDMF1",41,0)
 S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIMDMF1",42,0)
 .S NODE=^MPIVET(ICN,0),DOB=$$FMTE^XLFDT($P(NODE,"^",8))
"RTN","MPIMDMF1",43,0)
 .S LNM=$P(NODE,"^",2),FNM=$P(NODE,"^",3),MNM=$P(NODE,"^",4),NM=LNM_","_FNM_" "_MNM
"RTN","MPIMDMF1",44,0)
 .W !,NM,?31,"ICN:",ICN,"  SSN:",MPIMSSN,?62,"DOB:",DOB
"RTN","MPIMDMF1",45,0)
 W !
"RTN","MPIMDMF1",46,0)
 Q
"RTN","MPIMDMF1",47,0)
 ;
"RTN","MPIMDMF1",48,0)
ADD2 ;XREF on CASE # field in file #985.2 to auto-stuff data for new entry in file
"RTN","MPIMDMF1",49,0)
 ;MPIMICN is set from input transform call to ADD
"RTN","MPIMDMF1",50,0)
 Q:'$D(MPIMICN)
"RTN","MPIMDMF1",51,0)
 K SSNARR,ICNARR
"RTN","MPIMDMF1",52,0)
 N ICNLP,MPIMSSN,CASEIEN,STAT,USER,ICN,CASE,ICNNODE,DOB,FNM,LNM,MNM,NM,SSNCHK,ICNCHK,SITE,SITENM
"RTN","MPIMDMF1",53,0)
 S MPIMSSN=$P(^MPIVET(MPIMICN,0),"^",14)
"RTN","MPIMDMF1",54,0)
 I 'MPIMSSN S ICNARR(MPIMICN)=""
"RTN","MPIMDMF1",55,0)
 I MPIMSSN D
"RTN","MPIMDMF1",56,0)
 .S ICNLP=0 F  S ICNLP=$O(^MPIVET("SSN",MPIMSSN,ICNLP)) Q:'ICNLP  S ICNARR(ICNLP)=""
"RTN","MPIMDMF1",57,0)
 S CASEIEN=DA
"RTN","MPIMDMF1",58,0)
 S USER=$$GET1^DIQ(200,+DUZ_",",.01),NOW=$E($$NOW^XLFDT,1,12),CASE=$P(^MPI(985.2,CASEIEN,0),"^")
"RTN","MPIMDMF1",59,0)
 N DA,DO,DIH,DIV,DIC,DIE,DR
"RTN","MPIMDMF1",60,0)
 N FDA,MPIM,IENS
"RTN","MPIMDMF1",61,0)
 S FDA(985.2,CASEIEN_",",1)=USER
"RTN","MPIMDMF1",62,0)
 S FDA(985.2,CASEIEN_",",7)=$$FMTE^XLFDT(NOW)
"RTN","MPIMDMF1",63,0)
 D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",64,0)
 S DA=CASEIEN
"RTN","MPIMDMF1",65,0)
 I MPIMSSN D
"RTN","MPIMDMF1",66,0)
 .N X,DA,DO,DIC,DIE
"RTN","MPIMDMF1",67,0)
 .S DIC("P")=$P(^DD(985.2,3,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIMDMF1",68,0)
 .S DIC="^MPI(985.2,"_DA(1)_",""SSN"",",X=MPIMSSN D FILE^DICN
"RTN","MPIMDMF1",69,0)
 .S IENS=$$IENS^DILF(.DA)
"RTN","MPIMDMF1",70,0)
 .S ICNCHK=$O(^MPIVET("SSN",MPIMSSN,0)) I '$O(^MPIVET("SSN",MPIMSSN,ICNCHK)) D
"RTN","MPIMDMF1",71,0)
 ..N FDA,MPIM
"RTN","MPIMDMF1",72,0)
 ..S FDA(985.211,IENS,1)=ICNCHK
"RTN","MPIMDMF1",73,0)
 ..D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",74,0)
 ;
"RTN","MPIMDMF1",75,0)
 S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIMDMF1",76,0)
 .N X,DA,DO,DIC,DIE
"RTN","MPIMDMF1",77,0)
 .S DIC("P")=$P(^DD(985.2,4,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIMDMF1",78,0)
 .S DIC="^MPI(985.2,"_DA(1)_",""ICN"",",X=ICN D FILE^DICN
"RTN","MPIMDMF1",79,0)
 .S IENS=$$IENS^DILF(.DA)
"RTN","MPIMDMF1",80,0)
 .S ICNNODE=^MPIVET(ICN,0),DOB=$$FMTE^XLFDT($P(ICNNODE,"^",8)),SSNCHK=$P(ICNNODE,"^",14)
"RTN","MPIMDMF1",81,0)
 .S LNM=$P(ICNNODE,"^",2),FNM=$P(ICNNODE,"^",3),MNM=$P(ICNNODE,"^",4),NM=LNM_","_FNM_" "_MNM
"RTN","MPIMDMF1",82,0)
 .N FDA,MPIM
"RTN","MPIMDMF1",83,0)
 .S FDA(985.212,IENS,1)=NM
"RTN","MPIMDMF1",84,0)
 .S FDA(985.212,IENS,2)=DOB
"RTN","MPIMDMF1",85,0)
 .S FDA(985.212,IENS,3)=SSNCHK
"RTN","MPIMDMF1",86,0)
 .D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",87,0)
 .; update the RESOLUTION JOURNAL CASE NUMBER field (#22) in file 985  ; **35
"RTN","MPIMDMF1",88,0)
 .N X,DA,DO,DIC,DIE
"RTN","MPIMDMF1",89,0)
 .N FDA,MPIM
"RTN","MPIMDMF1",90,0)
 .S FDA(985,ICN_",",22)=$P(^MPI(985.2,CASEIEN,0),"^")
"RTN","MPIMDMF1",91,0)
 .D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",92,0)
 .; add entry to MPI DATA MGT ACTIVE RESOLUTION WORK FILE (#985.25)
"RTN","MPIMDMF1",93,0)
 .N X,DA,DO,DIC,DIE
"RTN","MPIMDMF1",94,0)
 .S DIC="^MPI(985.25,",X=ICN,DIC(0)="LZ",DINUM=ICN D FILE^DICN
"RTN","MPIMDMF1",95,0)
 .N FDA,MPIM
"RTN","MPIMDMF1",96,0)
 .S FDA(985.25,ICN_",",1)=MPIMSSN
"RTN","MPIMDMF1",97,0)
 .S FDA(985.25,ICN_",",2)=USER
"RTN","MPIMDMF1",98,0)
 .S FDA(985.25,ICN_",",3)=$$FMTE^XLFDT(NOW)
"RTN","MPIMDMF1",99,0)
 .S FDA(985.25,ICN_",",4)=CASE
"RTN","MPIMDMF1",100,0)
 .D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",101,0)
 .S SITE=0 F  S SITE=$O(^MPI(985.5,"AM",ICN,SITE)) Q:'SITE  D
"RTN","MPIMDMF1",102,0)
 ..S SITENM=$$GET1^DIQ(4,+SITE_",",.01)
"RTN","MPIMDMF1",103,0)
 ..N X,DA,DO,DIC,DIE
"RTN","MPIMDMF1",104,0)
 ..S DIC("P")=$P(^DD(985.2,5,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIMDMF1",105,0)
 ..S DIC="^MPI(985.2,"_DA(1)_",""SITE"",",X=SITE D FILE^DICN
"RTN","MPIMDMF1",106,0)
 ..S IENS=$$IENS^DILF(.DA)
"RTN","MPIMDMF1",107,0)
 ..N FDA,MPIM
"RTN","MPIMDMF1",108,0)
 ..S FDA(985.213,IENS,1)=ICN
"RTN","MPIMDMF1",109,0)
 ..D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",110,0)
 ;
"RTN","MPIMDMF1",111,0)
 ;update the STATUS of the case
"RTN","MPIMDMF1",112,0)
 K DA S DA=CASEIEN
"RTN","MPIMDMF1",113,0)
 S STAT="O"
"RTN","MPIMDMF1",114,0)
 N FDA,MPIM
"RTN","MPIMDMF1",115,0)
 S FDA(985.2,CASEIEN_",",2)=STAT
"RTN","MPIMDMF1",116,0)
 D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF1",117,0)
 ;
"RTN","MPIMDMF1",118,0)
 Q
"RTN","MPIMDMF2")
0^74^B35570941
"RTN","MPIMDMF2",1,0)
MPIMDMF2 ;BIR/CML-MPI Data Mgt Menu Utility FileMan Calls ;6/15/02
"RTN","MPIMDMF2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,12,33,35**;30 Apr 99
"RTN","MPIMDMF2",3,0)
 ;
"RTN","MPIMDMF2",4,0)
STAT ;XREF on STATUS field in file #985.2 to do the following when status is edited
"RTN","MPIMDMF2",5,0)
 ;when it is set to Resolved or Cannot be Resolved:
"RTN","MPIMDMF2",6,0)
 ; - delete corresponding entry in file #985.25
"RTN","MPIMDMF2",7,0)
 ; - set DATE/TIME CASE CLOSED in file 985.2 to NOW
"RTN","MPIMDMF2",8,0)
 ;
"RTN","MPIMDMF2",9,0)
 ;when it is set to Open:
"RTN","MPIMDMF2",10,0)
 ; - add corresponding entry in file #985.25
"RTN","MPIMDMF2",11,0)
 ; - set DATE/TIME CASE CLOSED to null
"RTN","MPIMDMF2",12,0)
 ;
"RTN","MPIMDMF2",13,0)
 N ICNIEN,ICN,STATUS,MPIMCASE,NOW,ICNIEN,SSN,USER,MPIM,DUP
"RTN","MPIMDMF2",14,0)
 S MPIMCASE=DA
"RTN","MPIMDMF2",15,0)
 S STATUS=$P(^MPI(985.2,MPIMCASE,0),"^",3),NOW=$$NOW^XLFDT
"RTN","MPIMDMF2",16,0)
 ;
"RTN","MPIMDMF2",17,0)
 I STATUS'="O" D
"RTN","MPIMDMF2",18,0)
 .S $P(^MPI(985.2,MPIMCASE,0),"^",5)=NOW
"RTN","MPIMDMF2",19,0)
 .S ICNIEN=0 F  S ICNIEN=$O(^MPI(985.2,MPIMCASE,"ICN",ICNIEN)) Q:'ICNIEN  D
"RTN","MPIMDMF2",20,0)
 ..S ICN=$P(^MPI(985.2,MPIMCASE,"ICN",ICNIEN,0),"^")
"RTN","MPIMDMF2",21,0)
 ..I $D(^MPI(985.25,ICN,0)) D
"RTN","MPIMDMF2",22,0)
 ...W !?3,"Deleting associated entry in file #985.25 for ICN #",ICN,"."
"RTN","MPIMDMF2",23,0)
 ...S FDA(985.25,ICN_",",.01)="@"
"RTN","MPIMDMF2",24,0)
 ...D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",25,0)
 ;
"RTN","MPIMDMF2",26,0)
 I STATUS="O" D
"RTN","MPIMDMF2",27,0)
 .N DIE,DIC,DR,X,DV,DW,DIK,DINUM
"RTN","MPIMDMF2",28,0)
 .S $P(^MPI(985.2,MPIMCASE,0),"^",5)=""
"RTN","MPIMDMF2",29,0)
 .S USER=$$GET1^DIQ(200,+DUZ_",",.01)
"RTN","MPIMDMF2",30,0)
 .S ICNIEN=0 F  S ICNIEN=$O(^MPI(985.2,MPIMCASE,"ICN",ICNIEN)) Q:'ICNIEN  D
"RTN","MPIMDMF2",31,0)
 ..S ICN=$P(^MPI(985.2,MPIMCASE,"ICN",ICNIEN,0),"^")
"RTN","MPIMDMF2",32,0)
 ..Q:'$D(^MPIVET(ICN,0))
"RTN","MPIMDMF2",33,0)
 ..S SSN=$P(^MPIVET(ICN,0),"^",14)
"RTN","MPIMDMF2",34,0)
 ..S DIC="^MPI(985.25,",X=ICN,DIC(0)="LZ",DINUM=ICN D FILE^DICN
"RTN","MPIMDMF2",35,0)
 ..N FDA,MPIM
"RTN","MPIMDMF2",36,0)
 ..S FDA(985.25,ICN_",",1)=SSN
"RTN","MPIMDMF2",37,0)
 ..S FDA(985.25,ICN_",",2)=USER
"RTN","MPIMDMF2",38,0)
 ..S FDA(985.25,ICN_",",3)=$$FMTE^XLFDT(NOW)
"RTN","MPIMDMF2",39,0)
 ..D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",40,0)
 ..S DUP=$$FIND1^DIC(985.32,"","",SSN) I DUP,$$GET1^DIQ(985.32,DUP_",",2)="YES" D
"RTN","MPIMDMF2",41,0)
 ...N FDA,MPIM
"RTN","MPIMDMF2",42,0)
 ...S FDA(985.32,DUP_",",2)="@"
"RTN","MPIMDMF2",43,0)
 ...D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",44,0)
 ;
"RTN","MPIMDMF2",45,0)
 I STATUS="R" D
"RTN","MPIMDMF2",46,0)
 .N DIE,DIC,DR,X,DV,DW
"RTN","MPIMDMF2",47,0)
 .S ICNIEN=0 F  S ICNIEN=$O(^MPI(985.2,MPIMCASE,"ICN",ICNIEN)) Q:'ICNIEN  D
"RTN","MPIMDMF2",48,0)
 ..S ICN=$P(^MPI(985.2,MPIMCASE,"ICN",ICNIEN,0),"^")
"RTN","MPIMDMF2",49,0)
 ..Q:'$D(^MPIVET(ICN,0))
"RTN","MPIMDMF2",50,0)
 ..S SSN=$P(^MPIVET(ICN,0),"^",14)
"RTN","MPIMDMF2",51,0)
 ..S DUP=$$FIND1^DIC(985.32,"","",SSN) I DUP,$$GET1^DIQ(985.32,DUP_",",2)="YES" D
"RTN","MPIMDMF2",52,0)
 ...N FDA,MPIM
"RTN","MPIMDMF2",53,0)
 ...S FDA(985.32,DUP_",",2)="@"
"RTN","MPIMDMF2",54,0)
 ...D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",55,0)
 ;
"RTN","MPIMDMF2",56,0)
 I STATUS="C" D
"RTN","MPIMDMF2",57,0)
 .N DIE,DIC,DR,X,DV,DW
"RTN","MPIMDMF2",58,0)
 .S ICNIEN=0 F  S ICNIEN=$O(^MPI(985.2,MPIMCASE,"ICN",ICNIEN)) Q:'ICNIEN  D
"RTN","MPIMDMF2",59,0)
 ..S ICN=$P(^MPI(985.2,MPIMCASE,"ICN",ICNIEN,0),"^")
"RTN","MPIMDMF2",60,0)
 ..Q:'$D(^MPIVET(ICN,0))
"RTN","MPIMDMF2",61,0)
 ..S SSN=$P(^MPIVET(ICN,0),"^",14)
"RTN","MPIMDMF2",62,0)
 ..S DUP=$$FIND1^DIC(985.32,"","",SSN) I DUP D
"RTN","MPIMDMF2",63,0)
 ...I $$GET1^DIQ(985.32,DUP_",",2)="YES" Q
"RTN","MPIMDMF2",64,0)
 ...N FDA,MPIM
"RTN","MPIMDMF2",65,0)
 ...S FDA(985.32,DUP_",",2)=1
"RTN","MPIMDMF2",66,0)
 ...D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",67,0)
 Q
"RTN","MPIMDMF2",68,0)
 ;
"RTN","MPIMDMF2",69,0)
DEL2 ;XREF on CASE # field in file #985.2 to delete corresponding entry in file #985.25 and #985
"RTN","MPIMDMF2",70,0)
 ;when CASE # is deleted
"RTN","MPIMDMF2",71,0)
 N ICNIEN,ICN,STATUS,MPIMCASE,MPIM,MPIMLDA,MPIMCNUM
"RTN","MPIMDMF2",72,0)
 S MPIMCASE=DA,MPIMCNUM=$P(^MPI(985.2,MPIMCASE,0),"^")
"RTN","MPIMDMF2",73,0)
 S ICNIEN=0 F  S ICNIEN=$O(^MPI(985.2,MPIMCASE,"ICN",ICNIEN)) Q:'ICNIEN  D
"RTN","MPIMDMF2",74,0)
 .S ICN=$P(^MPI(985.2,MPIMCASE,"ICN",ICNIEN,0),"^")
"RTN","MPIMDMF2",75,0)
 .I $D(^MPI(985.25,ICN,0)) D
"RTN","MPIMDMF2",76,0)
 ..W !?3,"Deleting associated entry in file #985.25 for ICN #",ICN,"."
"RTN","MPIMDMF2",77,0)
 ..N FDA,MPIM
"RTN","MPIMDMF2",78,0)
 ..S FDA(985.25,ICN_",",.01)="@"
"RTN","MPIMDMF2",79,0)
 ..D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",80,0)
 ..W !?3,"Deleting Resolution Journal Case Number in file #985 for ICN #",ICN,"."  ; **35
"RTN","MPIMDMF2",81,0)
 ..N FDA,MPIM
"RTN","MPIMDMF2",82,0)
 ..S FDA(985,ICN_",",22)="@"
"RTN","MPIMDMF2",83,0)
 ..D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",84,0)
 ..I $D(^MPI(985.26,"RJ",MPIMCASE)) D
"RTN","MPIMDMF2",85,0)
 ...S MPIMLDA=$O(^MPI(985.26,"RJ",MPIMCASE,0))
"RTN","MPIMDMF2",86,0)
 ...W !?3,"Deleting MISMATCHED PATIENT LOG entry in file #985.26 for Case #",MPIMCNUM,"."
"RTN","MPIMDMF2",87,0)
 ...N FDA,MPIM
"RTN","MPIMDMF2",88,0)
 ...S FDA(985.26,MPIMLDA_",",.01)="@"
"RTN","MPIMDMF2",89,0)
 ...D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",90,0)
 Q
"RTN","MPIMDMF2",91,0)
 ;
"RTN","MPIMDMF2",92,0)
WRTID ;WRITE IDENTIFIER for USER and Status fields for file 985.2
"RTN","MPIMDMF2",93,0)
 N CASEIEN,CASE,CW,STAT
"RTN","MPIMDMF2",94,0)
 S CASEIEN=+Y
"RTN","MPIMDMF2",95,0)
 S CASE=$$GET1^DIQ(985.2,+CASEIEN_",",.01)
"RTN","MPIMDMF2",96,0)
 S CW=$$GET1^DIQ(985.2,+CASEIEN_",",1)
"RTN","MPIMDMF2",97,0)
 S STAT=$$GET1^DIQ(985.2,+CASEIEN_",",2)
"RTN","MPIMDMF2",98,0)
 W "  ",CW,?52,STAT
"RTN","MPIMDMF2",99,0)
 Q
"RTN","MPIMDMF2",100,0)
 ;
"RTN","MPIMDMF2",101,0)
ADDCW ;If case worker is edited store update in notes.
"RTN","MPIMDMF2",102,0)
 Q:'$D(X)
"RTN","MPIMDMF2",103,0)
 N NOTE,CWDT,CW,MPIMCASE,MPIMICN,MPIMICND
"RTN","MPIMDMF2",104,0)
 S CWDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMDMF2",105,0)
 S CW=$$GET1^DIQ(200,+X_",",.01)
"RTN","MPIMDMF2",106,0)
 S NOTE(1)=CW_" assigned as case worker on "_CWDT_"."
"RTN","MPIMDMF2",107,0)
 D ADDNOTE^MPIMDMA1(DA,.NOTE,1)
"RTN","MPIMDMF2",108,0)
 ;
"RTN","MPIMDMF2",109,0)
 ;look for corresponding entry in file 985.25
"RTN","MPIMDMF2",110,0)
 N MPIMRPC,MPIMCASE,MPIMICN,MPIMICND,MPIM
"RTN","MPIMDMF2",111,0)
 S MPIMCASE=DA
"RTN","MPIMDMF2",112,0)
 S MPIMICN=0 F  S MPIMICN=$O(^MPI(985.2,MPIMCASE,"ICN",MPIMICN)) Q:'MPIMICN  D
"RTN","MPIMDMF2",113,0)
 .S MPIMICND=+$G(^MPI(985.2,MPIMCASE,"ICN",MPIMICN,0))
"RTN","MPIMDMF2",114,0)
 .I $D(^MPI(985.25,MPIMICND,0)) D
"RTN","MPIMDMF2",115,0)
 ..W !?3,"Updating case worker in file #985.25 for ICN #",MPIMICND
"RTN","MPIMDMF2",116,0)
 ..N FDA,MPIM
"RTN","MPIMDMF2",117,0)
 ..S FDA(985.25,MPIMICND_",",2)=CW
"RTN","MPIMDMF2",118,0)
 ..D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",119,0)
 Q
"RTN","MPIMDMF2",120,0)
 ;
"RTN","MPIMDMF2",121,0)
ADDDC ;If DATE CONTACTED is edited store update in notes.
"RTN","MPIMDMF2",122,0)
 Q:'$D(X)
"RTN","MPIMDMF2",123,0)
 N NOTE,DCDT,SITEIEN,SITE
"RTN","MPIMDMF2",124,0)
 S SITEIEN=$P(^MPI(985.2,DA(1),"SITE",DA,0),"^"),SITE=$$GET1^DIQ(4,+SITEIEN_",",.01)
"RTN","MPIMDMF2",125,0)
 S DCDT=$$FMTE^XLFDT($E(X,1,12))
"RTN","MPIMDMF2",126,0)
 S NOTE(1)=SITE_" contacted "_DCDT_"."
"RTN","MPIMDMF2",127,0)
 D ADDNOTE^MPIMDMA1(DA(1),.NOTE,1)
"RTN","MPIMDMF2",128,0)
 Q
"RTN","MPIMDMF2",129,0)
 ;
"RTN","MPIMDMF2",130,0)
ADDDCC ;If DATE CONTACTED COMMENTS is edited store update in notes.
"RTN","MPIMDMF2",131,0)
 Q:'$D(X)
"RTN","MPIMDMF2",132,0)
 N NOTE,SITEIEN,SITE
"RTN","MPIMDMF2",133,0)
 S SITEIEN=$P(^MPI(985.2,DA(1),"SITE",DA,0),"^"),SITE=$$GET1^DIQ(4,+SITEIEN_",",.01)
"RTN","MPIMDMF2",134,0)
 S NOTE(1)=SITE_" Contact Comments:"
"RTN","MPIMDMF2",135,0)
 S NOTE(2)=X
"RTN","MPIMDMF2",136,0)
 D ADDNOTE^MPIMDMA1(DA(1),.NOTE,1)
"RTN","MPIMDMF2",137,0)
 Q
"RTN","MPIMDMF2",138,0)
 ;
"RTN","MPIMDMF2",139,0)
ADDPC ;If PROBLEM CATEGORY is edited store update in notes.
"RTN","MPIMDMF2",140,0)
 Q:'$D(X)
"RTN","MPIMDMF2",141,0)
 N NOTE,PCAT,PCDT
"RTN","MPIMDMF2",142,0)
 S PCDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMDMF2",143,0)
 S PCAT=$$GET1^DIQ(985.21,+X_",",.01)
"RTN","MPIMDMF2",144,0)
 S NOTE(1)="Problem Category : "_PCAT
"RTN","MPIMDMF2",145,0)
 S NOTE(2)="                   assigned "_PCDT_"."
"RTN","MPIMDMF2",146,0)
 D ADDNOTE^MPIMDMA1(DA,.NOTE,1)
"RTN","MPIMDMF2",147,0)
 Q
"RTN","MPIMDMF2",148,0)
 ;
"RTN","MPIMDMF2",149,0)
CHKAF(ICN,OPT) ;called to check site multiple in file 985.2 for any open cases associated with the passed ICN
"RTN","MPIMDMF2",150,0)
 ;loop on ^MPI(985.5,"AM",ICN and add any sites that are missing in site multiple
"RTN","MPIMDMF2",151,0)
 ;if site is added, send auto-stuff note
"RTN","MPIMDMF2",152,0)
 ;
"RTN","MPIMDMF2",153,0)
 ;1st parameter (ICN) - ICN
"RTN","MPIMDMF2",154,0)
 ;2nd parameter (OPT) - If a "1" is passed, then this API was called from an interactive option and
"RTN","MPIMDMF2",155,0)
 ;                      messages will be displayed to the user. If a "1" is not passed, no messages.
"RTN","MPIMDMF2",156,0)
 Q:'$D(^MPI(985.2,"ICN",ICN))
"RTN","MPIMDMF2",157,0)
 N CASEIEN,SITE,SITENM,IENS
"RTN","MPIMDMF2",158,0)
 S CASEIEN=$O(^MPI(985.2,"ICN",ICN,0))
"RTN","MPIMDMF2",159,0)
 I $P($G(^MPI(985.2,CASEIEN,0)),"^",3)="O" D
"RTN","MPIMDMF2",160,0)
 .S SITE=0 F  S SITE=$O(^MPI(985.5,"AM",ICN,SITE)) Q:'SITE  D
"RTN","MPIMDMF2",161,0)
 ..Q:$D(^MPI(985.2,"SITE",SITE,CASEIEN))
"RTN","MPIMDMF2",162,0)
 ..S SITENM=$$GET1^DIQ(4,+SITE_",",.01)
"RTN","MPIMDMF2",163,0)
 ..N X,DA,DO,DIC,DIE
"RTN","MPIMDMF2",164,0)
 ..S DIC("P")=$P(^DD(985.2,5,0),"^",2),DA(1)=CASEIEN,DIC(0)="LZ"
"RTN","MPIMDMF2",165,0)
 ..S DIC="^MPI(985.2,"_DA(1)_",""SITE"",",X=SITE
"RTN","MPIMDMF2",166,0)
 ..L +^MPI(985.2,CASEIEN):10
"RTN","MPIMDMF2",167,0)
 ..D FILE^DICN
"RTN","MPIMDMF2",168,0)
 ..S IENS=$$IENS^DILF(.DA)
"RTN","MPIMDMF2",169,0)
 ..N FDA,MPIM
"RTN","MPIMDMF2",170,0)
 ..S FDA(985.213,IENS,1)=ICN
"RTN","MPIMDMF2",171,0)
 ..D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDMF2",172,0)
 ..I $G(OPT) W !?3,"<< ",SITENM," added as a site to Case #",$P(^MPI(985.2,CASEIEN,0),"^"),".>>"
"RTN","MPIMDMF2",173,0)
 ..N NOTE
"RTN","MPIMDMF2",174,0)
 ..S NOTE(1)=SITENM_" added as an Associated Facility for ICN #"_ICN_"."
"RTN","MPIMDMF2",175,0)
 ..D ADDNOTE^MPIMDMA1(CASEIEN,.NOTE,$S($G(OPT):1,1:""))
"RTN","MPIMDMF2",176,0)
 ..L -^MPI(985.2,CASEIEN)
"RTN","MPIMDMF2",177,0)
 Q
"RTN","MPIMDMPC")
0^75^B34738081
"RTN","MPIMDMPC",1,0)
MPIMDMPC ;BIR/CML - (MPI ROUTINE) Enter/Edit/Report Problem Category data ; 03/14/02
"RTN","MPIMDMPC",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,33**;30 Apr 99
"RTN","MPIMDMPC",3,0)
 ;
"RTN","MPIMDMPC",4,0)
EN1 ;Enter/Edit Problem Categories
"RTN","MPIMDMPC",5,0)
 S QFLG=1
"RTN","MPIMDMPC",6,0)
 W !!,"Use this option to create or edit Problem Categories."
"RTN","MPIMDMPC",7,0)
 W !!?35,"*WARNING*",!,"Don't delete Problem Categories already been pointed to by cases!"
"RTN","MPIMDMPC",8,0)
 W !,"If you aren't sure if a PC has been used, run the Problem Category Stats."
"RTN","MPIMDMPC",9,0)
 ;
"RTN","MPIMDMPC",10,0)
ASK1 W ! S DIC="^MPI(985.21,",DIC(0)="QEAML",DIC("A")="Select PROBLEM CATEGORY: "
"RTN","MPIMDMPC",11,0)
 D ^DIC K DIC G:Y<0 QUIT2 S PCDA=+Y
"RTN","MPIMDMPC",12,0)
 L +^MPI(985.21,PCDA):1 E  W !!,"Someone else is editing this record. Try again later.",! G QUIT
"RTN","MPIMDMPC",13,0)
 W ! S DIE="^MPI(985.21,",DA=PCDA,DR=".01;.5;1" D ^DIE K DIE
"RTN","MPIMDMPC",14,0)
 L -^MPI(985.21,PCDA)
"RTN","MPIMDMPC",15,0)
 G ASK1
"RTN","MPIMDMPC",16,0)
 ;
"RTN","MPIMDMPC",17,0)
EN2 ;Print list of PCs
"RTN","MPIMDMPC",18,0)
 S QFLG=1
"RTN","MPIMDMPC",19,0)
 W !!,"This report lists the current Problem Categories."
"RTN","MPIMDMPC",20,0)
 ;
"RTN","MPIMDMPC",21,0)
DEV2 ;
"RTN","MPIMDMPC",22,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPIMDMPC",23,0)
 D EN^XUTMDEVQ("START2^MPIMDMPC","MPI - Print List of Problem Categories") I 'POP Q
"RTN","MPIMDMPC",24,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMDMPC",25,0)
 G QUIT
"RTN","MPIMDMPC",26,0)
 ;
"RTN","MPIMDMPC",27,0)
START2 ;Compile & Print report
"RTN","MPIMDMPC",28,0)
 S (PG,QFLG,CNT)=0,$P(LN,"-",81)=""
"RTN","MPIMDMPC",29,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","MPIMDMPC",30,0)
 D HDR2
"RTN","MPIMDMPC",31,0)
 S CODE="" F  S CODE=$O(^MPI(985.21,"C",CODE)) Q:CODE=""  Q:QFLG  D
"RTN","MPIMDMPC",32,0)
 .S CNT=CNT+1
"RTN","MPIMDMPC",33,0)
 .S PCDA=$O(^MPI(985.21,"C",CODE,0))
"RTN","MPIMDMPC",34,0)
 .S SHORT=$P($G(^MPI(985.21,PCDA,0)),"^")
"RTN","MPIMDMPC",35,0)
 .D:$Y+5>IOSL HDR2 Q:QFLG
"RTN","MPIMDMPC",36,0)
 .W !!,$J(CNT,2),". ",?5,CODE,?12,SHORT
"RTN","MPIMDMPC",37,0)
 .S DESC=0 F  S DESC=$O(^MPI(985.21,PCDA,"DESC",DESC)) Q:'DESC  W !,^MPI(985.21,PCDA,"DESC",DESC,0)
"RTN","MPIMDMPC",38,0)
 G QUIT
"RTN","MPIMDMPC",39,0)
 ;
"RTN","MPIMDMPC",40,0)
EN3 ;Print PC stats from file #985.2
"RTN","MPIMDMPC",41,0)
 S QFLG=1
"RTN","MPIMDMPC",42,0)
 W !!,"This report prints a statistic report of Problem Categories from the"
"RTN","MPIMDMPC",43,0)
 W !,"MPI DATA MGT RESOLUTION JOURNAL file (#985.2) for a specified date range."
"RTN","MPIMDMPC",44,0)
 ;
"RTN","MPIMDMPC",45,0)
ASK3 ;Ask for Date Range
"RTN","MPIMDMPC",46,0)
 W !!,"Enter date range for data to be included in report."
"RTN","MPIMDMPC",47,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMDMPC",48,0)
 S DIR(0)="DAO^:DT:EPX",DIR("A")="Beginning Date for Report:  "
"RTN","MPIMDMPC",49,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S MPIMBDT=Y
"RTN","MPIMDMPC",50,0)
 S DIR(0)="DAO^"_MPIMBDT_":DT:EPX"
"RTN","MPIMDMPC",51,0)
 S DIR("A")="Ending Date for Report:  "
"RTN","MPIMDMPC",52,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S MPIMEDT=Y
"RTN","MPIMDMPC",53,0)
DEV3 ;
"RTN","MPIMDMPC",54,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPIMDMPC",55,0)
 K ZTSAVE S ZTSAVE("MPIMBDT")="",ZTSAVE("MPIMEDT")=""
"RTN","MPIMDMPC",56,0)
 D EN^XUTMDEVQ("START3^MPIMDMPC","MPI - Print Problem Category Stats",.ZTSAVE) I 'POP Q
"RTN","MPIMDMPC",57,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMDMPC",58,0)
 G QUIT
"RTN","MPIMDMPC",59,0)
 ;
"RTN","MPIMDMPC",60,0)
START3 ;Compile & Print report
"RTN","MPIMDMPC",61,0)
 ;TOTO = total open cases
"RTN","MPIMDMPC",62,0)
 ;TOTR = total resolved cases
"RTN","MPIMDMPC",63,0)
 ;TOTC = total cannot be resolved cases
"RTN","MPIMDMPC",64,0)
 ;TOTONONE = total open cases with no problem category
"RTN","MPIMDMPC",65,0)
 ;TOTRNONE = total resolved cases with no problem category
"RTN","MPIMDMPC",66,0)
 ;TOTCNONE = total cannot be resolved cases with no problem category
"RTN","MPIMDMPC",67,0)
 ;
"RTN","MPIMDMPC",68,0)
 K PCARR
"RTN","MPIMDMPC",69,0)
 S STOPDT=MPIMEDT_".9",STARTDT=MPIMBDT-.1
"RTN","MPIMDMPC",70,0)
 S (PG,QFLG,CNT,TOTO,TOTR,TOTC,TOTONONE,TOTRNONE,TOTCNONE)=0,$P(LN,"-",81)=""
"RTN","MPIMDMPC",71,0)
 S HDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMDMPC",72,0)
 D HDR3
"RTN","MPIMDMPC",73,0)
 S CASE=0 F  S CASE=$O(^MPI(985.2,CASE)) Q:'CASE  D
"RTN","MPIMDMPC",74,0)
 .S DTOP=$P(^MPI(985.2,CASE,0),"^",4) I DTOP<STARTDT!(DTOP>STOPDT) Q
"RTN","MPIMDMPC",75,0)
 .S STATUS=$P(^MPI(985.2,CASE,0),"^",3)
"RTN","MPIMDMPC",76,0)
 .I '$D(^MPI(985.2,CASE,"PROB")) D  Q
"RTN","MPIMDMPC",77,0)
 ..I STATUS="O" S TOTONONE=TOTONONE+1
"RTN","MPIMDMPC",78,0)
 ..I STATUS="R" S TOTRNONE=TOTRNONE+1
"RTN","MPIMDMPC",79,0)
 ..I STATUS="C" S TOTCNONE=TOTCNONE+1
"RTN","MPIMDMPC",80,0)
 .I $D(^MPI(985.2,CASE,"PROB")) D
"RTN","MPIMDMPC",81,0)
 ..;if case is pointing to a PC that has been deleted, count as no PC
"RTN","MPIMDMPC",82,0)
 ..S PCDA=+^MPI(985.2,CASE,"PROB") D
"RTN","MPIMDMPC",83,0)
 ...I '$D(^MPI(985.21,PCDA,0)) D  Q
"RTN","MPIMDMPC",84,0)
 ....I STATUS="O" S TOTONONE=TOTONONE+1
"RTN","MPIMDMPC",85,0)
 ....I STATUS="R" S TOTRNONE=TOTRNONE+1
"RTN","MPIMDMPC",86,0)
 ....I STATUS="C" S TOTCNONE=TOTCNONE+1
"RTN","MPIMDMPC",87,0)
 ...S CODE=$P(^MPI(985.21,PCDA,0),"^",2)
"RTN","MPIMDMPC",88,0)
 ...I STATUS="O" D  Q
"RTN","MPIMDMPC",89,0)
 ....I '$D(PCARR(CODE,PCDA,"O")) S PCARR(CODE,PCDA,"O")=0
"RTN","MPIMDMPC",90,0)
 ....S PCARR(CODE,PCDA,"O")=PCARR(CODE,PCDA,"O")+1,TOTO=TOTO+1
"RTN","MPIMDMPC",91,0)
 ...I STATUS="R" D  Q
"RTN","MPIMDMPC",92,0)
 ....I '$D(PCARR(CODE,PCDA,"R")) S PCARR(CODE,PCDA,"R")=0
"RTN","MPIMDMPC",93,0)
 ....S PCARR(CODE,PCDA,"R")=PCARR(CODE,PCDA,"R")+1,TOTR=TOTR+1
"RTN","MPIMDMPC",94,0)
 ...I STATUS="C" D  Q
"RTN","MPIMDMPC",95,0)
 ....I '$D(PCARR(CODE,PCDA,"C")) S PCARR(CODE,PCDA,"C")=0
"RTN","MPIMDMPC",96,0)
 ....S PCARR(CODE,PCDA,"C")=PCARR(CODE,PCDA,"C")+1,TOTC=TOTC+1
"RTN","MPIMDMPC",97,0)
 ;
"RTN","MPIMDMPC",98,0)
PRT ;Print report
"RTN","MPIMDMPC",99,0)
 S CNT=0
"RTN","MPIMDMPC",100,0)
 S CODE="" F  S CODE=$O(PCARR(CODE)) Q:CODE=""  D
"RTN","MPIMDMPC",101,0)
 .S CNT=CNT+1
"RTN","MPIMDMPC",102,0)
 .S PCDA=$O(PCARR(CODE,0)),TOTPCO=$G(PCARR(CODE,PCDA,"O")),TOTPCR=$G(PCARR(CODE,PCDA,"R")),TOTPCC=$G(PCARR(CODE,PCDA,"C"))
"RTN","MPIMDMPC",103,0)
 .S:TOTPCO="" TOTPCO=0 S:TOTPCR="" TOTPCR=0 S:TOTPCC="" TOTPCC=0
"RTN","MPIMDMPC",104,0)
 .D:$Y+5>IOSL HDR3 G:QFLG QUIT
"RTN","MPIMDMPC",105,0)
 .W !,$J(CNT,2),". ",CODE,?12,$P(^MPI(985.21,PCDA,0),"^"),?43,$J(TOTPCO,6),?53,$J(TOTPCR,6),?67,$J(TOTPCC,6)
"RTN","MPIMDMPC",106,0)
 .;S DESC=0 F  S DESC=$O(^MPI(985.21,PCDA,"DESC",DESC)) Q:'DESC  W !,^MPI(985.21,PCDA,"DESC",DESC,0)
"RTN","MPIMDMPC",107,0)
 ;write grand totals
"RTN","MPIMDMPC",108,0)
 W !?43,"------------------------------"
"RTN","MPIMDMPC",109,0)
 W !?35,"TOTAL:",?43,$J(TOTO,6),?53,$J(TOTR,6),?67,$J(TOTC,6)
"RTN","MPIMDMPC",110,0)
 W !!?4,"Total cases with no Problem Category:",?43,$J(TOTONONE,6),?53,$J(TOTRNONE,6),?67,$J(TOTCNONE,6)
"RTN","MPIMDMPC",111,0)
 G QUIT
"RTN","MPIMDMPC",112,0)
 ;
"RTN","MPIMDMPC",113,0)
HDR2 ;header for list
"RTN","MPIMDMPC",114,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMDMPC",115,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIMDMPC",116,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","MPIMDMPC",117,0)
 W !,"MPI DQ - Problem Category List",?70,"Page: ",PG,!,"Printed on ",HDT
"RTN","MPIMDMPC",118,0)
 W !!?5,"CODE",?12,"SHORT DESCRIPTION",!,LN
"RTN","MPIMDMPC",119,0)
 Q
"RTN","MPIMDMPC",120,0)
 ;
"RTN","MPIMDMPC",121,0)
HDR3 ;header for stat report
"RTN","MPIMDMPC",122,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMDMPC",123,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIMDMPC",124,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","MPIMDMPC",125,0)
 W !,"MPI DQ - Problem Category Case Statistics",?70,"Page: ",PG
"RTN","MPIMDMPC",126,0)
 W !,"For period ",$$FMTE^XLFDT($P(MPIMBDT,"."))," to ",$$FMTE^XLFDT($P(MPIMEDT,".")),?51,"Printed ",HDT
"RTN","MPIMDMPC",127,0)
 W !!?44,"TOTAL",?53,"TOTAL",?68,"TOTAL"
"RTN","MPIMDMPC",128,0)
 W !?5,"CODE",?12,"SHORT DESCRIPTION",?44,"OPEN",?52,"RESOLVED",?62,"CANNOT BE RESOLVED",!,LN
"RTN","MPIMDMPC",129,0)
 Q
"RTN","MPIMDMPC",130,0)
 ;
"RTN","MPIMDMPC",131,0)
QUIT ;
"RTN","MPIMDMPC",132,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIMDMPC",133,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMDMPC",134,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMDMPC",135,0)
QUIT2 ;
"RTN","MPIMDMPC",136,0)
 K %,CASE,CNT,CODE,DA,DESC,DIC,DIE,DIR,DIRUT,DR,DTOP,DTOUT,DUOUT,HDT,JJ,LN,MPIMBDT,MPIMEDT,PCARR,PCDA,PG
"RTN","MPIMDMPC",137,0)
 K QFLG,SHORT,SS,STARTDT,STATUS,STOPDT,TOTC,TOTCNONE,TOTO,TOTONONE,TOTPCC,TOTPCO,TOTPCR,TOTR,TOTRNONE,X,Y,ZTSK
"RTN","MPIMDMPC",138,0)
 Q
"RTN","MPIMDMR1")
0^76^B80715450
"RTN","MPIMDMR1",1,0)
MPIMDMR1 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Options to View Data Resolution Work ; 10/31/02
"RTN","MPIMDMR1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,33**;30 Apr 99
"RTN","MPIMDMR1",3,0)
 ;
"RTN","MPIMDMR1",4,0)
EN1 ;View a Case
"RTN","MPIMDMR1",5,0)
ASK1 ;Ask for Case #, or ICN, or SSN
"RTN","MPIMDMR1",6,0)
 K ICNARR,SSNARR,ICN S QFLG=0
"RTN","MPIMDMR1",7,0)
 W !!,"View a Case - Enter Case #, ICN, SSN, or ""?"" for list help."
"RTN","MPIMDMR1",8,0)
 D ASKC^MPIMDMU2 I QFLG G QUIT
"RTN","MPIMDMR1",9,0)
 I $E(ANS1,2)="." G ASK1
"RTN","MPIMDMR1",10,0)
 S DIC="^MPI(985.2,",DIC(0)="QM",X=ANS1
"RTN","MPIMDMR1",11,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPIMDMR1",12,0)
 S CASEIEN=+Y,PRT="V"
"RTN","MPIMDMR1",13,0)
 D SET W @IOF D SUM I QFLG G QUIT
"RTN","MPIMDMR1",14,0)
 D USER I QFLG G QUIT
"RTN","MPIMDMR1",15,0)
 D STOP I QFLG G QUIT
"RTN","MPIMDMR1",16,0)
 G ASK1
"RTN","MPIMDMR1",17,0)
 ;
"RTN","MPIMDMR1",18,0)
EN2 ;Summary Report of cases in file #985.2
"RTN","MPIMDMR1",19,0)
 S (ALL,QFLG)=0 K CWTOT,CWTOTO
"RTN","MPIMDMR1",20,0)
 W !!,"This option prints a summary report from the MPI DATA MGT RESOLUTION JOURNAL"
"RTN","MPIMDMR1",21,0)
 W !,"file (#985.2).  Completed cases are totaled by site within VISNs. Active cases"
"RTN","MPIMDMR1",22,0)
 W !,"can be sorted by ICN, SSN, or case worker and will display a summary for each.",!
"RTN","MPIMDMR1",23,0)
 K DIR S DIR(0)="SAM^I:ICN;S:SSN;C:CASE WORKER;"
"RTN","MPIMDMR1",24,0)
 S DIR("A")="Select Sort: (I)CN, (S)SN, or (C)ase Worker (or ""^"" to HALT): "
"RTN","MPIMDMR1",25,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!$D(DIRUT) G QUIT
"RTN","MPIMDMR1",26,0)
 S ANS=Y  I ANS'="C" S ALL=1
"RTN","MPIMDMR1",27,0)
 ;if sort is to be by case worker, allow selection of one, some, or all
"RTN","MPIMDMR1",28,0)
 I ANS="C" D  G:QFLG QUIT G:'ALL PRT
"RTN","MPIMDMR1",29,0)
 .I '$O(^MPI(985.25,"DUZ",0)) W !!,"There are no case workers with active cases at this time." S QFLG=1 Q
"RTN","MPIMDMR1",30,0)
 .K CWARR1,CWARR2
"RTN","MPIMDMR1",31,0)
 .S CW=0 F  S CW=$O(^MPI(985.25,"DUZ",CW)) Q:'CW  S CWARR1($$GET1^DIQ(200,+CW_",",.01))=CW
"RTN","MPIMDMR1",32,0)
 .S CNT=0,CW="" F  S CW=$O(CWARR1(CW)) Q:CW=""  D
"RTN","MPIMDMR1",33,0)
 ..S CNT=CNT+1,CWARR2(CNT)=CWARR1(CW)_"^"_CW
"RTN","MPIMDMR1",34,0)
 .S MAX=CNT+1,CWARR2(MAX)="^<<ALL>> CASE WORKERS"
"RTN","MPIMDMR1",35,0)
 .;do display
"RTN","MPIMDMR1",36,0)
 .W @IOF,!,"The following case workers have active cases at this time:",!
"RTN","MPIMDMR1",37,0)
 .I MAX>20 D DISP2
"RTN","MPIMDMR1",38,0)
 .I MAX<21 S CNT=0 F  S CNT=$O(CWARR2(CNT)) Q:'CNT  D
"RTN","MPIMDMR1",39,0)
 ..S CW=$P(CWARR2(CNT),"^",2)
"RTN","MPIMDMR1",40,0)
 ..W !?3,$J(CNT,2),". ",CW
"RTN","MPIMDMR1",41,0)
 .D PICK Q:QFLG  Q:ALL
"RTN","MPIMDMR1",42,0)
 .;generate report
"RTN","MPIMDMR1",43,0)
 .K CSORT
"RTN","MPIMDMR1",44,0)
 .S CNT=0 F  S CNT=$O(CWARR2(CNT)) Q:'CNT  D
"RTN","MPIMDMR1",45,0)
 ..S CWIEN=$P(CWARR2(CNT),"^"),CWNM=$P(CWARR2(CNT),"^",2),CWTOT(CWNM)=0,CWTOTO(CWNM)=0
"RTN","MPIMDMR1",46,0)
 ..S (COMPCNT,OPENCNT,CASEIEN)=0 F  S CASEIEN=$O(^MPI(985.2,"DUZ",CWNM,CASEIEN)) Q:'CASEIEN  D
"RTN","MPIMDMR1",47,0)
 ...S STATUS=$P(^MPI(985.2,CASEIEN,0),"^",3)
"RTN","MPIMDMR1",48,0)
 ...I STATUS'="O" S COMPCNT=COMPCNT+1 Q
"RTN","MPIMDMR1",49,0)
 ...I STATUS="O" S OPENCNT=OPENCNT+1
"RTN","MPIMDMR1",50,0)
 ...S CSORT(CWNM,CASEIEN)=""
"RTN","MPIMDMR1",51,0)
 ..S CWTOT(CWNM)=COMPCNT
"RTN","MPIMDMR1",52,0)
 ..S CWTOTO(CWNM)=OPENCNT
"RTN","MPIMDMR1",53,0)
 ;
"RTN","MPIMDMR1",54,0)
COMP ;compile data
"RTN","MPIMDMR1",55,0)
 K COMP,CSORT,ISORT,SSORT
"RTN","MPIMDMR1",56,0)
 S (CCNT,COMPCNT,CASEIEN)=0 F  S CASEIEN=$O(^MPI(985.2,CASEIEN)) Q:'CASEIEN  D
"RTN","MPIMDMR1",57,0)
 .S STATUS=$P(^MPI(985.2,CASEIEN,0),"^",3),CCNT=CCNT+1
"RTN","MPIMDMR1",58,0)
 .I STATUS'="O" D  Q
"RTN","MPIMDMR1",59,0)
 ..S COMPCNT=COMPCNT+1
"RTN","MPIMDMR1",60,0)
 ..S SITE=0 F  S SITE=$O(^MPI(985.2,CASEIEN,"SITE",SITE)) Q:'SITE  D
"RTN","MPIMDMR1",61,0)
 ...S SITEIEN=$P(^MPI(985.2,CASEIEN,"SITE",SITE,0),"^"),SITENM=$$GET1^DIQ(4,+SITEIEN_",",.01)
"RTN","MPIMDMR1",62,0)
 ...S VISN=$P($G(^MPI(985.3,SITEIEN,0)),"^",3) Q:VISN=""  I '$D(COMP(VISN)) S COMP(VISN)=0
"RTN","MPIMDMR1",63,0)
 ...I '$D(COMP(VISN,SITENM)) S COMP(VISN,SITENM)=0
"RTN","MPIMDMR1",64,0)
 ...S COMP(VISN,SITENM)=COMP(VISN,SITENM)+1,COMP(VISN)=COMP(VISN)+1
"RTN","MPIMDMR1",65,0)
 .S USER=$P(^MPI(985.2,CASEIEN,0),"^",2),USER=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMDMR1",66,0)
 .I ANS="C" S CSORT(USER,CASEIEN)="" D  Q
"RTN","MPIMDMR1",67,0)
 ..I '$D(CWTOT(USER)) S CWTOT(USER)=0
"RTN","MPIMDMR1",68,0)
 ..I '$D(CWTOTO(USER)) S CWTOTO(USER)=0
"RTN","MPIMDMR1",69,0)
 ..I STATUS="O" S CWTOTO(USER)=CWTOTO(USER)+1
"RTN","MPIMDMR1",70,0)
 ..I STATUS'="O" S CWTOT(USER)=CWTOT(USER)
"RTN","MPIMDMR1",71,0)
 .I ANS="I" S ICNIEN=0 F  S ICNIEN=$O(^MPI(985.2,CASEIEN,"ICN",ICNIEN)) Q:'ICNIEN  D  Q
"RTN","MPIMDMR1",72,0)
 ..S ICN=$P(^MPI(985.2,CASEIEN,"ICN",ICNIEN,0),"^"),ISORT(ICN,CASEIEN)=""
"RTN","MPIMDMR1",73,0)
 .I ANS="S" S SSNIEN=0 F  S SSNIEN=$O(^MPI(985.2,CASEIEN,"SSN",SSNIEN)) Q:'SSNIEN  D  Q
"RTN","MPIMDMR1",74,0)
 ..S SSN=$P(^MPI(985.2,CASEIEN,"SSN",SSNIEN,0),"^"),SSORT(SSN,CASEIEN)=""
"RTN","MPIMDMR1",75,0)
 ;
"RTN","MPIMDMR1",76,0)
PRT ;
"RTN","MPIMDMR1",77,0)
 W ! D ^%ZIS
"RTN","MPIMDMR1",78,0)
 S PRT="S" I ANS="C" S PRT="R"
"RTN","MPIMDMR1",79,0)
 S PDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)),$P(LN2,"=",80)=""
"RTN","MPIMDMR1",80,0)
 S SORTPRT=$S(ANS="I":"ICN",ANS="S":"SSN",1:"CASE WORKER")_" SORT"
"RTN","MPIMDMR1",81,0)
 W @IOF
"RTN","MPIMDMR1",82,0)
 W !,"RESOLUTION JOURNAL  <<",SORTPRT,">>  Printed: ",PDT,!,LN2
"RTN","MPIMDMR1",83,0)
 ;
"RTN","MPIMDMR1",84,0)
 I ALL D
"RTN","MPIMDMR1",85,0)
 .S (TOTC,TOTO)=0,STAT=""
"RTN","MPIMDMR1",86,0)
 .F  S STAT=$O(^MPI(985.2,"ASTAT",STAT)) Q:STAT=""  D
"RTN","MPIMDMR1",87,0)
 ..S IEN=0 F  S IEN=$O(^MPI(985.2,"ASTAT",STAT,IEN)) Q:'IEN  D
"RTN","MPIMDMR1",88,0)
 ...I STAT'="O" S TOTC=TOTC+1
"RTN","MPIMDMR1",89,0)
 ...I STAT="O" S TOTO=TOTO+1
"RTN","MPIMDMR1",90,0)
 .W !,"Total Completed Cases: ",$J(TOTC,8)
"RTN","MPIMDMR1",91,0)
 .W !,"Total Open Cases     : ",$J(TOTO,8)
"RTN","MPIMDMR1",92,0)
 .W !!,"Completed Case VISN/Site Totals:",!,"--------------------------------"
"RTN","MPIMDMR1",93,0)
 .S VISN=0 F  S VISN=$O(COMP(VISN)) Q:'VISN  D
"RTN","MPIMDMR1",94,0)
 ..W !,"VISN ",VISN,": Total - ",COMP(VISN)
"RTN","MPIMDMR1",95,0)
 ..S SITE="" F  S SITE=$O(COMP(VISN,SITE)) Q:SITE=""  W !?3,SITE,?35,COMP(VISN,SITE)
"RTN","MPIMDMR1",96,0)
 ;
"RTN","MPIMDMR1",97,0)
 I ANS="I" D  G QUIT
"RTN","MPIMDMR1",98,0)
 .S ICNLOOP=0 F  S ICNLOOP=$O(ISORT(ICNLOOP)) Q:'ICNLOOP  Q:QFLG  D
"RTN","MPIMDMR1",99,0)
 ..W !!!!,"==> ICN: ",ICNLOOP
"RTN","MPIMDMR1",100,0)
 ..S CASEIEN=0 F  S CASEIEN=$O(ISORT(ICNLOOP,CASEIEN)) Q:'CASEIEN  D SET,SUM Q:QFLG  D USER Q:QFLG
"RTN","MPIMDMR1",101,0)
 ;
"RTN","MPIMDMR1",102,0)
 I ANS="S" D  G QUIT
"RTN","MPIMDMR1",103,0)
 .S SSNLOOP=0 F  S SSNLOOP=$O(SSORT(SSNLOOP)) Q:'SSNLOOP  Q:QFLG  D
"RTN","MPIMDMR1",104,0)
 ..W !!!!,"==> SSN: ",SSNLOOP
"RTN","MPIMDMR1",105,0)
 ..S CASEIEN=0 F  S CASEIEN=$O(SSORT(SSNLOOP,CASEIEN)) Q:'CASEIEN  D SET,SUM Q:QFLG  D USER Q:QFLG
"RTN","MPIMDMR1",106,0)
 ;
"RTN","MPIMDMR1",107,0)
 I ANS="C" D  G QUIT
"RTN","MPIMDMR1",108,0)
 .S USERNM="" F  S USERNM=$O(CSORT(USERNM)) Q:USERNM=""  Q:QFLG  D
"RTN","MPIMDMR1",109,0)
 ..S DIC=200,X=USERNM D ^DIC K DIC S USER=+Y
"RTN","MPIMDMR1",110,0)
 ..I ALL W !!!!
"RTN","MPIMDMR1",111,0)
 ..D USER
"RTN","MPIMDMR1",112,0)
 ..S CASEIEN=0 F  S CASEIEN=$O(CSORT(USERNM,CASEIEN)) Q:'CASEIEN  Q:QFLG  W ! D SET,SUM Q:QFLG
"RTN","MPIMDMR1",113,0)
 ;
"RTN","MPIMDMR1",114,0)
QUIT K ALL,ANS,ANS1,C1,C1D,C2,CASE,CASEIEN,CASENUM,CCNT,CHKOUT,CNT,COMP,COMPCNT,CSARR,CSORT,CW,CWARR1,CWARR2,CWIEN
"RTN","MPIMDMR1",115,0)
 K CWNM,CWTOT,CWTOTO,DIC,DIR,DIRUT,DISPARR,DOB,DTCL,DTOP,DTOUT,DUOUT,FNM,ICN,ICNARR,ICNIEN,ICNLOOP,ICNLP,ICNNODE
"RTN","MPIMDMR1",116,0)
 K ICNT,IEN,ISORT,JJ,LN,LN2,LNM,MAX,MNM,NM,NODE,NOIS,OPENCNT,PDT,PRT,PTARR,QFLG,SITE,SITEARR,SITEIEN,SITELP
"RTN","MPIMDMR1",117,0)
 K SITENM,SORTPRT,SS,SSN,SSNARR,SSNIEN,SSNLOOP,SSNLP,SSORT,STAT,STATUS,TOTC,TOTO,TXT,USER,USERADDR,USERNM
"RTN","MPIMDMR1",118,0)
 K USERPH,VISN,X,Y,CONCOM,CONDT,PC,SHORT,SITEICN,X,IDST
"RTN","MPIMDMR1",119,0)
 Q
"RTN","MPIMDMR1",120,0)
 ;
"RTN","MPIMDMR1",121,0)
SET ;
"RTN","MPIMDMR1",122,0)
 K SSNARR,SITEARR,ICNARR
"RTN","MPIMDMR1",123,0)
 S NODE=^MPI(985.2,CASEIEN,0),CASENUM=$P(NODE,"^"),NOIS=$P(NODE,"^",6)
"RTN","MPIMDMR1",124,0)
 I PRT'="R" S USER=$P(NODE,"^",2),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMDMR1",125,0)
 S STATUS=$$GET1^DIQ(985.2,+CASEIEN_",",2),$P(LN,"-",80)=""
"RTN","MPIMDMR1",126,0)
 S DTOP=$$FMTE^XLFDT($E($P(NODE,"^",4),1,12)),DTCL=$$FMTE^XLFDT($E($P(NODE,"^",5),1,12))
"RTN","MPIMDMR1",127,0)
 S SSNLP=0 F  S SSNLP=$O(^MPI(985.2,CASEIEN,"SSN",SSNLP)) Q:'SSNLP  D
"RTN","MPIMDMR1",128,0)
 .S SSN=$P(^MPI(985.2,CASEIEN,"SSN",SSNLP,0),"^"),SSNARR(SSN)="",SSNARR(SSN)=$P(^MPI(985.2,CASEIEN,"SSN",SSNLP,0),"^",2)
"RTN","MPIMDMR1",129,0)
 S ICNLP=0 F  S ICNLP=$O(^MPI(985.2,CASEIEN,"ICN",ICNLP)) Q:'ICNLP  D
"RTN","MPIMDMR1",130,0)
 .S ICN=$P(^MPI(985.2,CASEIEN,"ICN",ICNLP,0),"^"),ICNARR(ICN)=^MPI(985.2,CASEIEN,"ICN",ICNLP,0)
"RTN","MPIMDMR1",131,0)
 S SITELP=0 F  S SITELP=$O(^MPI(985.2,CASEIEN,"SITE",SITELP)) Q:'SITELP  D
"RTN","MPIMDMR1",132,0)
 .S SITE=+^MPI(985.2,CASEIEN,"SITE",SITELP,0)
"RTN","MPIMDMR1",133,0)
 .S SITENM=$$GET1^DIQ(4,+SITE_",",.01),SITEICN=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",2)
"RTN","MPIMDMR1",134,0)
 .S SITEARR(SITENM)=SITEICN
"RTN","MPIMDMR1",135,0)
 .S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIMDMR1",136,0)
 ..Q:ICN=SITEICN
"RTN","MPIMDMR1",137,0)
 ..I $D(^MPI(985.5,"AM",ICN,SITE)) S SITEARR(SITENM)=SITEARR(SITENM)_"/"_ICN
"RTN","MPIMDMR1",138,0)
 .S CONDT=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",3) I CONDT]"" S CONDT=$$FMTE^XLFDT($E(CONDT,1,12))
"RTN","MPIMDMR1",139,0)
 .S CONCOM=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",4)
"RTN","MPIMDMR1",140,0)
 .S SITEARR(SITENM)=SITEARR(SITENM)_"^"_CONDT_"^"_CONCOM
"RTN","MPIMDMR1",141,0)
 Q
"RTN","MPIMDMR1",142,0)
 ;
"RTN","MPIMDMR1",143,0)
SUM ;
"RTN","MPIMDMR1",144,0)
 S (SHORT,PC)=""
"RTN","MPIMDMR1",145,0)
 I $D(^MPI(985.2,CASEIEN,"PROB")) D
"RTN","MPIMDMR1",146,0)
 .S PC=+^MPI(985.2,CASEIEN,"PROB") I PC S PC=$P($G(^MPI(985.21,PC,0)),"^")
"RTN","MPIMDMR1",147,0)
 .S SHORT=$P(^MPI(985.2,CASEIEN,"PROB"),"^",2)
"RTN","MPIMDMR1",148,0)
 ;
"RTN","MPIMDMR1",149,0)
 I $Y>(IOSL-4) D STOP Q:QFLG
"RTN","MPIMDMR1",150,0)
 W !,"CASE #: ",CASENUM,?21,"NOIS: ",NOIS,?46,"STATUS     : ",STATUS
"RTN","MPIMDMR1",151,0)
 W !,"DATE OPENED: ",DTOP I PRT="V" W ?46,"DATE CLOSED: ",DTCL
"RTN","MPIMDMR1",152,0)
 W !,LN
"RTN","MPIMDMR1",153,0)
 I SHORT]"" W !,"SHORT DESC.: ",SHORT
"RTN","MPIMDMR1",154,0)
 I PC]"" W !,"PROBLEM CATEGORY: ",PC
"RTN","MPIMDMR1",155,0)
 I $G(SHORT)!($G(PC)) W !
"RTN","MPIMDMR1",156,0)
 ;
"RTN","MPIMDMR1",157,0)
 I $Y>(IOSL-2) D STOP Q:QFLG
"RTN","MPIMDMR1",158,0)
 W !,"SSN(s) INVOLVED:" S SSN=0 F  S SSN=$O(SSNARR(SSN)) Q:'SSN  Q:QFLG  D
"RTN","MPIMDMR1",159,0)
 .I $Y>(IOSL-2) D STOP Q:QFLG
"RTN","MPIMDMR1",160,0)
 .W !?3,SSN I +SSNARR(SSN) W "  ICN: ",+SSNARR(SSN)
"RTN","MPIMDMR1",161,0)
 Q:QFLG
"RTN","MPIMDMR1",162,0)
 I $Y>(IOSL-3) D STOP Q:QFLG
"RTN","MPIMDMR1",163,0)
 W !!,"ICN(s) INVOLVED:" S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  Q:QFLG  D
"RTN","MPIMDMR1",164,0)
 .S DOB=$$FMTE^XLFDT($P(ICNARR(ICN),"^",3)),NM=$P(ICNARR(ICN),"^",2),SSN=$P(ICNARR(ICN),"^",4)
"RTN","MPIMDMR1",165,0)
 .I $Y>(IOSL-2) D STOP Q:QFLG
"RTN","MPIMDMR1",166,0)
 .S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMDMR1",167,0)
 .I IDST]"" W !," (",IDST,") ",ICN
"RTN","MPIMDMR1",168,0)
 .I IDST="" W !?5,ICN
"RTN","MPIMDMR1",169,0)
 .W ?16,NM I SSN]"" W ?48,"SSN: ",SSN
"RTN","MPIMDMR1",170,0)
 .W ?63,"DOB: ",DOB
"RTN","MPIMDMR1",171,0)
 Q:QFLG
"RTN","MPIMDMR1",172,0)
 I $Y>(IOSL-3) D STOP Q:QFLG
"RTN","MPIMDMR1",173,0)
 W !!,"SITE(s) INVOLVED:"
"RTN","MPIMDMR1",174,0)
 S SITE="" F  S SITE=$O(SITEARR(SITE)) Q:SITE=""  Q:QFLG  W !?3,SITE,?35,"ICN: ",$P(SITEARR(SITE),"^")
"RTN","MPIMDMR1",175,0)
 ;add DATE OF CONTACT data
"RTN","MPIMDMR1",176,0)
 S SITE="" F  S SITE=$O(SITEARR(SITE)) Q:SITE=""  D
"RTN","MPIMDMR1",177,0)
 .I $P(SITEARR(SITE),"^",2)]"" W !!,SITE," contacted ",$P(SITEARR(SITE),"^",2)
"RTN","MPIMDMR1",178,0)
 .I $P(SITEARR(SITE),"^",3)]"" W !,"Comments: ",!,$P(SITEARR(SITE),"^",3)
"RTN","MPIMDMR1",179,0)
 ;
"RTN","MPIMDMR1",180,0)
 I PRT="V" W !!,"NOTES:" S TXT=0 F  S TXT=$O(^MPI(985.2,CASEIEN,1,TXT)) Q:'TXT  Q:QFLG  D  Q:QFLG
"RTN","MPIMDMR1",181,0)
 .I $Y>(IOSL-2) D STOP Q:QFLG
"RTN","MPIMDMR1",182,0)
 .W !,^MPI(985.2,CASEIEN,1,TXT,0)
"RTN","MPIMDMR1",183,0)
 Q
"RTN","MPIMDMR1",184,0)
 ;
"RTN","MPIMDMR1",185,0)
USER ;
"RTN","MPIMDMR1",186,0)
 I $Y>(IOSL-6) D STOP Q:QFLG
"RTN","MPIMDMR1",187,0)
 I PRT'="R" W !!,"=========================================="
"RTN","MPIMDMR1",188,0)
 W !,"PRIMARY CASE WORKER: ",USERNM I $D(CWTOT(USERNM)) W ?43,"Total # completed cases: ",$J(CWTOT(USERNM),6)
"RTN","MPIMDMR1",189,0)
 W !,"LOCATION: ",$$GET1^DIQ(200,+USER_",",.111) I $D(CWTOTO(USERNM)) W ?43,"Total # open cases     : ",$J(CWTOTO(USERNM),6)
"RTN","MPIMDMR1",190,0)
 W !,"PHONE   : ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMDMR1",191,0)
 I PRT="R" W !,"=========================================="
"RTN","MPIMDMR1",192,0)
 Q
"RTN","MPIMDMR1",193,0)
 ;
"RTN","MPIMDMR1",194,0)
STOP ;
"RTN","MPIMDMR1",195,0)
 S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMDMR1",196,0)
 S DIR(0)="E" D ^DIR K DIR I 'Y S QFLG=1
"RTN","MPIMDMR1",197,0)
 I 'QFLG W @IOF
"RTN","MPIMDMR1",198,0)
 Q
"RTN","MPIMDMR1",199,0)
 ;
"RTN","MPIMDMR1",200,0)
PICK ;
"RTN","MPIMDMR1",201,0)
 S QFLG=0,ALL=0
"RTN","MPIMDMR1",202,0)
 W !
"RTN","MPIMDMR1",203,0)
 S DIR(0)="LO^1:"_MAX,DIR("A")="Select case worker(s) or choose ("_MAX_") for ALL case workers"
"RTN","MPIMDMR1",204,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!$D(DIRUT) S QFLG=1 Q
"RTN","MPIMDMR1",205,0)
 S Y=","_Y K CWARR2(MAX)
"RTN","MPIMDMR1",206,0)
 I Y[(","_MAX_",") S ALL=1 Q
"RTN","MPIMDMR1",207,0)
 S CNT=0 F  S CNT=$O(CWARR2(CNT)) Q:'CNT  I Y'[(","_CNT_",") K CWARR2(CNT)
"RTN","MPIMDMR1",208,0)
 Q
"RTN","MPIMDMR1",209,0)
 ;
"RTN","MPIMDMR1",210,0)
DISP2 ;display 2 columns of case workers
"RTN","MPIMDMR1",211,0)
 K DISPARR S C2=20
"RTN","MPIMDMR1",212,0)
 F C1=1:1:20 D
"RTN","MPIMDMR1",213,0)
 .S C1D=C1 I $L(C1)=1 S C1D=" "_C1  ;;just to line up the numbers 
"RTN","MPIMDMR1",214,0)
 .S C2=C2+1
"RTN","MPIMDMR1",215,0)
 .S DISPARR(C1)=C1D_". "_$P(CWARR2(C1),"^",2)
"RTN","MPIMDMR1",216,0)
 .I $D(CWARR2(C2)) S DISPARR(C1)=DISPARR(C1)_"@"_C2_". "_$P(CWARR2(C2),"^",2)
"RTN","MPIMDMR1",217,0)
 S CNT=0 F  S CNT=$O(DISPARR(CNT)) Q:'CNT  W !,$P(DISPARR(CNT),"@"),?40,$P(DISPARR(CNT),"@",2)
"RTN","MPIMDMR1",218,0)
 Q
"RTN","MPIMDMT")
0^77^B44520262
"RTN","MPIMDMT",1,0)
MPIMDMT ;BIR/CML - (MPI ROUTINE) Date of Contact Report ; 03/14/02
"RTN","MPIMDMT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7**;30 Apr 99
"RTN","MPIMDMT",3,0)
 ;
"RTN","MPIMDMT",4,0)
EN1 ;Date of Contact Report from file #985.2
"RTN","MPIMDMT",5,0)
 S (ALL,QFLG)=0
"RTN","MPIMDMT",6,0)
 W !!,"This option prints a list of open cases from the MPI DATA MGT RESOLUTION"
"RTN","MPIMDMT",7,0)
 W !,"JOURNAL file (#985.2) that have sites with a last Date of Contact prior"
"RTN","MPIMDMT",8,0)
 W !,"to a specified date."
"RTN","MPIMDMT",9,0)
 ;
"RTN","MPIMDMT",10,0)
ASK1 ;allow selection of one, some, or all case workers
"RTN","MPIMDMT",11,0)
 I '$O(^MPI(985.25,"DUZ",0)) W !!,"There are no case workers with active cases at this time." Q
"RTN","MPIMDMT",12,0)
 K CWARR1,CWARR2
"RTN","MPIMDMT",13,0)
 S CW=0 F  S CW=$O(^MPI(985.25,"DUZ",CW)) Q:'CW  S CWARR1($$GET1^DIQ(200,+CW_",",.01))=CW
"RTN","MPIMDMT",14,0)
 S CNT=0,CW="" F  S CW=$O(CWARR1(CW)) Q:CW=""  D
"RTN","MPIMDMT",15,0)
 .S CNT=CNT+1,CWARR2(CNT)=CWARR1(CW)_"^"_CW
"RTN","MPIMDMT",16,0)
 S MAX=CNT+1,CWARR2(MAX)="^<<ALL>> CASE WORKERS"
"RTN","MPIMDMT",17,0)
 ;do display
"RTN","MPIMDMT",18,0)
 W !!!,"The following case workers have active cases at this time:",!
"RTN","MPIMDMT",19,0)
 I MAX>20 D DISP2
"RTN","MPIMDMT",20,0)
 I MAX<21 S CNT=0 F  S CNT=$O(CWARR2(CNT)) Q:'CNT  D
"RTN","MPIMDMT",21,0)
 .S CW=$P(CWARR2(CNT),"^",2)
"RTN","MPIMDMT",22,0)
 .W !?3,$J(CNT,2),". ",CW
"RTN","MPIMDMT",23,0)
 D PICK G:QFLG QUIT
"RTN","MPIMDMT",24,0)
 ;
"RTN","MPIMDMT",25,0)
ASK2 ;Ask for cutoff date
"RTN","MPIMDMT",26,0)
 W !!,"==> Enter cutoff date to be used to identify open cases with sites"
"RTN","MPIMDMT",27,0)
 W !,"==> having a last Date of Contact PRIOR to the cutoff date."
"RTN","MPIMDMT",28,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMDMT",29,0)
 W ! S DIR(0)="DAO^:DT:EPX",DIR("A")="Cutoff Date for Report:  "
"RTN","MPIMDMT",30,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S CUTDT=Y
"RTN","MPIMDMT",31,0)
 I '$D(CUTDT)!('$D(CWARR2)) G QUIT
"RTN","MPIMDMT",32,0)
 ;
"RTN","MPIMDMT",33,0)
DEV ;
"RTN","MPIMDMT",34,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPIMDMT",35,0)
 K ZTSAVE S ZTSAVE("CUTDT")="",ZTSAVE("CWARR2(")=""
"RTN","MPIMDMT",36,0)
 D EN^XUTMDEVQ("START^MPIMDMT","MPI - Print Date of Contact",.ZTSAVE) I 'POP Q
"RTN","MPIMDMT",37,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMDMT",38,0)
 G QUIT
"RTN","MPIMDMT",39,0)
 ;
"RTN","MPIMDMT",40,0)
START ;Compile report
"RTN","MPIMDMT",41,0)
 K CWARR
"RTN","MPIMDMT",42,0)
 S JJ=0 F  S JJ=$O(CWARR2(JJ)) Q:'JJ  S CWDA=+CWARR2(JJ),CWNM=$P(CWARR2(JJ),"^",2),CWARR(CWDA)=CWNM
"RTN","MPIMDMT",43,0)
 K CWDA,CWNM
"RTN","MPIMDMT",44,0)
 ;
"RTN","MPIMDMT",45,0)
 S CHKDT=CUTDT-.1
"RTN","MPIMDMT",46,0)
 S ^XTMP("MPIM",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MASTER PATIENT INDEX AUSTIN"
"RTN","MPIMDMT",47,0)
 K ^XTMP("MPIM","DMT",$J)
"RTN","MPIMDMT",48,0)
 ;
"RTN","MPIMDMT",49,0)
 S CASEIEN=0 F  S CASEIEN=$O(^MPI(985.2,"ASTAT","O",CASEIEN)) Q:'CASEIEN  D
"RTN","MPIMDMT",50,0)
 .Q:$P(^MPI(985.2,CASEIEN,0),"^",3)'="O"
"RTN","MPIMDMT",51,0)
 .S CW=$P(^MPI(985.2,CASEIEN,0),"^",2) I '$D(CWARR(CW)) Q
"RTN","MPIMDMT",52,0)
 .S CWNM=CWARR(CW)
"RTN","MPIMDMT",53,0)
 .S SITE=0 F  S SITE=$O(^MPI(985.2,CASEIEN,"SITE",SITE)) Q:'SITE  D
"RTN","MPIMDMT",54,0)
 ..S NODE=$G(^MPI(985.2,CASEIEN,"SITE",SITE,0))
"RTN","MPIMDMT",55,0)
 ..S CONDT=$P(NODE,"^",3)
"RTN","MPIMDMT",56,0)
 ..I CONDT="" Q
"RTN","MPIMDMT",57,0)
 ..I CONDT>CHKDT Q
"RTN","MPIMDMT",58,0)
 ..S ^XTMP("MPIM","DMT",$J,CWNM,CASEIEN)=""
"RTN","MPIMDMT",59,0)
 ;
"RTN","MPIMDMT",60,0)
PRT ;Print data
"RTN","MPIMDMT",61,0)
 S (PG,QFLG)=0,$P(LN,"-",81)=""
"RTN","MPIMDMT",62,0)
 S HDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMDMT",63,0)
 D HDR
"RTN","MPIMDMT",64,0)
 ;
"RTN","MPIMDMT",65,0)
 S CWNM="" F  S CWNM=$O(^XTMP("MPIM","DMT",$J,CWNM)) Q:CWNM=""  Q:QFLG  D
"RTN","MPIMDMT",66,0)
 .S CASEIEN=0 F  S CASEIEN=$O(^XTMP("MPIM","DMT",$J,CWNM,CASEIEN)) Q:'CASEIEN  Q:QFLG  D
"RTN","MPIMDMT",67,0)
 ..D SET,SUM Q:QFLG
"RTN","MPIMDMT",68,0)
QUIT ;
"RTN","MPIMDMT",69,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIMDMT",70,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMDMT",71,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMDMT",72,0)
 K ^XTMP("MPIM","DMT",$J)
"RTN","MPIMDMT",73,0)
 K ALL,C1,C1D,C2,CASEIEN,CASENUM,CHKDT,CNT,CONCOM,CONDT,CUTDT,CW,CWARR,CWARR1,CWARR2,CWDA,CWNM
"RTN","MPIMDMT",74,0)
 K DIR,DIRUT,DISPARR,DOB,DTCL,DTOP,DTOUT,DUOUT,HDT,ICN,ICNARR,ICNLP,JJ,LN,MAX,NM,NODE,NOIS,PC,PG
"RTN","MPIMDMT",75,0)
 K QFLG,SHORT,SITE,SITEARR,SITEICN,SITELP,SITENM,SS,SSN,SSNARR,SSNLP,STATUS,X,Y,ZTSK
"RTN","MPIMDMT",76,0)
 Q
"RTN","MPIMDMT",77,0)
PICK ;
"RTN","MPIMDMT",78,0)
 S QFLG=0,ALL=0
"RTN","MPIMDMT",79,0)
 W !
"RTN","MPIMDMT",80,0)
 S DIR(0)="LO^1:"_MAX,DIR("A")="Select case worker(s) or choose ("_MAX_") for ALL case workers"
"RTN","MPIMDMT",81,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!$D(DIRUT) S QFLG=1 Q
"RTN","MPIMDMT",82,0)
 S Y=","_Y K CWARR2(MAX)
"RTN","MPIMDMT",83,0)
 I Y[(","_MAX_",") S ALL=1 Q
"RTN","MPIMDMT",84,0)
 S CNT=0 F  S CNT=$O(CWARR2(CNT)) Q:'CNT  I Y'[(","_CNT_",") K CWARR2(CNT)
"RTN","MPIMDMT",85,0)
 Q
"RTN","MPIMDMT",86,0)
 ;
"RTN","MPIMDMT",87,0)
DISP2 ;display 2 columns of case workers
"RTN","MPIMDMT",88,0)
 K DISPARR S C2=20
"RTN","MPIMDMT",89,0)
 F C1=1:1:20 D
"RTN","MPIMDMT",90,0)
 .S C1D=C1 I $L(C1)=1 S C1D=" "_C1  ;;just to line up the numbers 
"RTN","MPIMDMT",91,0)
 .S C2=C2+1
"RTN","MPIMDMT",92,0)
 .S DISPARR(C1)=C1D_". "_$P(CWARR2(C1),"^",2)
"RTN","MPIMDMT",93,0)
 .I $D(CWARR2(C2)) S DISPARR(C1)=DISPARR(C1)_"@"_C2_". "_$P(CWARR2(C2),"^",2)
"RTN","MPIMDMT",94,0)
 S CNT=0 F  S CNT=$O(DISPARR(CNT)) Q:'CNT  W !,$P(DISPARR(CNT),"@"),?40,$P(DISPARR(CNT),"@",2)
"RTN","MPIMDMT",95,0)
 Q
"RTN","MPIMDMT",96,0)
SET ;
"RTN","MPIMDMT",97,0)
 K SSNARR,SITEARR,ICNARR
"RTN","MPIMDMT",98,0)
 S NODE=^MPI(985.2,CASEIEN,0),CASENUM=$P(NODE,"^"),NOIS=$P(NODE,"^",6)
"RTN","MPIMDMT",99,0)
 S STATUS=$$GET1^DIQ(985.2,+CASEIEN_",",2),$P(LN,"-",80)=""
"RTN","MPIMDMT",100,0)
 S DTOP=$$FMTE^XLFDT($E($P(NODE,"^",4),1,12)),DTCL=$$FMTE^XLFDT($E($P(NODE,"^",5),1,12))
"RTN","MPIMDMT",101,0)
 S SSNLP=0 F  S SSNLP=$O(^MPI(985.2,CASEIEN,"SSN",SSNLP)) Q:'SSNLP  D
"RTN","MPIMDMT",102,0)
 .S SSN=$P(^MPI(985.2,CASEIEN,"SSN",SSNLP,0),"^"),SSNARR(SSN)="",SSNARR(SSN)=$P(^MPI(985.2,CASEIEN,"SSN",SSNLP,0),"^",2)
"RTN","MPIMDMT",103,0)
 S ICNLP=0 F  S ICNLP=$O(^MPI(985.2,CASEIEN,"ICN",ICNLP)) Q:'ICNLP  D
"RTN","MPIMDMT",104,0)
 .S ICN=$P(^MPI(985.2,CASEIEN,"ICN",ICNLP,0),"^"),ICNARR(ICN)=^MPI(985.2,CASEIEN,"ICN",ICNLP,0)
"RTN","MPIMDMT",105,0)
 S SITELP=0 F  S SITELP=$O(^MPI(985.2,CASEIEN,"SITE",SITELP)) Q:'SITELP  D
"RTN","MPIMDMT",106,0)
 .S SITE=+^MPI(985.2,CASEIEN,"SITE",SITELP,0)
"RTN","MPIMDMT",107,0)
 .S SITENM=$$GET1^DIQ(4,+SITE_",",.01),SITEICN=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",2)
"RTN","MPIMDMT",108,0)
 .S SITEARR(SITENM)=SITEICN
"RTN","MPIMDMT",109,0)
 .S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  D
"RTN","MPIMDMT",110,0)
 ..Q:ICN=SITEICN
"RTN","MPIMDMT",111,0)
 ..I $D(^MPI(985.5,"AM",ICN,SITE)) S SITEARR(SITENM)=SITEARR(SITENM)_"/"_ICN
"RTN","MPIMDMT",112,0)
 .S CONDT=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",3) I CONDT]"" S CONDT=$$FMTE^XLFDT($E(CONDT,1,12))
"RTN","MPIMDMT",113,0)
 .S CONCOM=$P(^MPI(985.2,CASEIEN,"SITE",SITELP,0),"^",4)
"RTN","MPIMDMT",114,0)
 .S SITEARR(SITENM)=SITEARR(SITENM)_"^"_CONDT_"^"_CONCOM
"RTN","MPIMDMT",115,0)
 Q
"RTN","MPIMDMT",116,0)
 ;
"RTN","MPIMDMT",117,0)
SUM ;
"RTN","MPIMDMT",118,0)
 S (SHORT,PC)=""
"RTN","MPIMDMT",119,0)
 I $D(^MPI(985.2,CASEIEN,"PROB")) D
"RTN","MPIMDMT",120,0)
 .S PC=+^MPI(985.2,CASEIEN,"PROB") I PC S PC=$P($G(^MPI(985.21,PC,0)),"^")
"RTN","MPIMDMT",121,0)
 .S SHORT=$P(^MPI(985.2,CASEIEN,"PROB"),"^",2)
"RTN","MPIMDMT",122,0)
 ;
"RTN","MPIMDMT",123,0)
 I $Y>(IOSL-4) D HDR Q:QFLG
"RTN","MPIMDMT",124,0)
 W !!,"====> CASE WORKER: ",CWNM,!,"CASE #: ",CASENUM,?21,"NOIS: ",NOIS,?46,"STATUS     : ",STATUS
"RTN","MPIMDMT",125,0)
 W !,"DATE OPENED: ",DTOP,?46,"DATE CLOSED: ",DTCL,!,LN
"RTN","MPIMDMT",126,0)
 I SHORT]"" W !,"SHORT DESC.: ",SHORT
"RTN","MPIMDMT",127,0)
 I PC]"" W !,"PROBLEM CATEGORY: ",PC
"RTN","MPIMDMT",128,0)
 W !
"RTN","MPIMDMT",129,0)
 ;
"RTN","MPIMDMT",130,0)
 I $Y>(IOSL-2) D HDR Q:QFLG
"RTN","MPIMDMT",131,0)
 W !,"SSN(s) INVOLVED:" S SSN=0 F  S SSN=$O(SSNARR(SSN)) Q:'SSN  Q:QFLG  D
"RTN","MPIMDMT",132,0)
 .I $Y>(IOSL-2) D HDR Q:QFLG
"RTN","MPIMDMT",133,0)
 .W !?3,SSN I +SSNARR(SSN) W "  ICN: ",+SSNARR(SSN)
"RTN","MPIMDMT",134,0)
 Q:QFLG
"RTN","MPIMDMT",135,0)
 I $Y>(IOSL-3) D HDR Q:QFLG
"RTN","MPIMDMT",136,0)
 W !!,"ICN(s) INVOLVED:" S ICN=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  Q:QFLG  D
"RTN","MPIMDMT",137,0)
 .S DOB=$$FMTE^XLFDT($P(ICNARR(ICN),"^",3)),NM=$P(ICNARR(ICN),"^",2),SSN=$P(ICNARR(ICN),"^",4)
"RTN","MPIMDMT",138,0)
 .I $Y>(IOSL-2) D HDR Q:QFLG
"RTN","MPIMDMT",139,0)
 .W !?3,ICN,?16,NM I SSN]"" W ?48,"SSN: ",SSN
"RTN","MPIMDMT",140,0)
 .W ?63,"DOB: ",DOB
"RTN","MPIMDMT",141,0)
 Q:QFLG
"RTN","MPIMDMT",142,0)
 I $Y>(IOSL-3) D HDR Q:QFLG
"RTN","MPIMDMT",143,0)
 W !!,"SITE(s) INVOLVED:"
"RTN","MPIMDMT",144,0)
 S SITE="" F  S SITE=$O(SITEARR(SITE)) Q:SITE=""  Q:QFLG  W !?3,SITE,?35,"ICN: ",$P(SITEARR(SITE),"^")
"RTN","MPIMDMT",145,0)
 ;add DATE OF CONTACT data
"RTN","MPIMDMT",146,0)
 S SITE="" F  S SITE=$O(SITEARR(SITE)) Q:SITE=""  D
"RTN","MPIMDMT",147,0)
 .I $P(SITEARR(SITE),"^",2)]"" W !!,SITE," contacted ",$P(SITEARR(SITE),"^",2)
"RTN","MPIMDMT",148,0)
 .I $P(SITEARR(SITE),"^",3)]"" W !,"Comments: ",!,$P(SITEARR(SITE),"^",3)
"RTN","MPIMDMT",149,0)
 Q
"RTN","MPIMDMT",150,0)
 ;
"RTN","MPIMDMT",151,0)
HDR ;header
"RTN","MPIMDMT",152,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMDMT",153,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIMDMT",154,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","MPIMDMT",155,0)
 W !,"MPI DQ - Contact of Date Report",?70,"Page: ",PG
"RTN","MPIMDMT",156,0)
 W !,"Last Date of Contact PRIOR to ",$$FMTE^XLFDT($P(CUTDT,".")),?51,"Printed ",HDT,!,LN
"RTN","MPIMDMT",157,0)
 Q
"RTN","MPIMDMU2")
0^78^B28790984
"RTN","MPIMDMU2",1,0)
MPIMDMU2 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Utility Calls ; 07/26/02
"RTN","MPIMDMU2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,12,24,35**;30 Apr 99
"RTN","MPIMDMU2",3,0)
 ;
"RTN","MPIMDMU2",4,0)
ASKC ;
"RTN","MPIMDMU2",5,0)
 ;NOTE: The variables QFLG, ANS1, REASK, and NEW are not NEWed/KILLed in this routine
"RTN","MPIMDMU2",6,0)
 ;      because they need to be passed back to any routines calling ASKC
"RTN","MPIMDMU2",7,0)
 ;      The variables below are inclusive of all variables used in this routine
"RTN","MPIMDMU2",8,0)
 ;      AND in routine ^MPIMDMU3 that is called by ^MPIMDMU2
"RTN","MPIMDMU2",9,0)
 ;
"RTN","MPIMDMU2",10,0)
 N CASE,CNT,DIR,DTOP,ICN,ICNDA,LAST,LDATE,LDUZ,LICN,LIEN
"RTN","MPIMDMU2",11,0)
 N LPAT,LSSN,LSTOP,LSTRT,NODE,PTNAME,RGBDT,RGEDT,RGNOW,SSN,STATUS,STATUS1,USER
"RTN","MPIMDMU2",12,0)
 N LCHK,SHORT,Y
"RTN","MPIMDMU2",13,0)
 ;
"RTN","MPIMDMU2",14,0)
 S ^XTMP("MPIM",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MASTER PATIENT INDEX AUSTIN"
"RTN","MPIMDMU2",15,0)
 ;
"RTN","MPIMDMU2",16,0)
 I '$D(QFLG) S QFLG=0
"RTN","MPIMDMU2",17,0)
 S NEW=0
"RTN","MPIMDMU2",18,0)
 W !!?3,"Select: " R ANS1:DTIME I "^"[ANS1 S QFLG=1 Q
"RTN","MPIMDMU2",19,0)
 ;
"RTN","MPIMDMU2",20,0)
 I $E(ANS1)=" ",$D(^XTMP("MPIM","PICK",DUZ)) S ANS1=^XTMP("MPIM","PICK",DUZ) W " ",ANS1
"RTN","MPIMDMU2",21,0)
 ;
"RTN","MPIMDMU2",22,0)
 I $E(ANS1)="?" D  G ASKC
"RTN","MPIMDMU2",23,0)
 .W !!,"You can get a list of existing cases several ways:"
"RTN","MPIMDMU2",24,0)
 .W !
"RTN","MPIMDMU2",25,0)
 .W !,"  - By specific year/month, enter ""D."" followed by the numeric shortcut for"
"RTN","MPIMDMU2",26,0)
 .W !,"    the year/month."
"RTN","MPIMDMU2",27,0)
 .W !,"    Example: D.0102 (for all cases falling in the month of February 2001)"
"RTN","MPIMDMU2",28,0)
 .W !
"RTN","MPIMDMU2",29,0)
 .W !,"  - By SSN, enter ""S."" followed by a portion/or all of the beginning of an SSN."  ; **35
"RTN","MPIMDMU2",30,0)
 .W !,"    Example: S.12 (for all cases with an SSN starting with ""12"")"
"RTN","MPIMDMU2",31,0)
 .W !
"RTN","MPIMDMU2",32,0)
 .W !,"  - By ICN, enter ""I."" followed by a portion/or all of the beginning of an ICN."  ; **35
"RTN","MPIMDMU2",33,0)
 .W !,"    Example: I.1003 (for all cases with an ICN starting with ""1003"")"
"RTN","MPIMDMU2",34,0)
 .W !
"RTN","MPIMDMU2",35,0)
 .W !,"  - By Patient Name, enter ""P."" followed a portion of the patient's name."
"RTN","MPIMDMU2",36,0)
 .W !,"    Example: P.LI (for all cases with patient last name starting with ""LI"")"
"RTN","MPIMDMU2",37,0)
 .W !
"RTN","MPIMDMU2",38,0)
 .W !,"  - By case worker, enter ""C."" followed a portion of the case worker's name."
"RTN","MPIMDMU2",39,0)
 .W !,"    This list will ask for a date range to limit the number of items displayed."
"RTN","MPIMDMU2",40,0)
 .W !,"    Example: C.HA (for all cases with case worker last name starting with ""HA"")"
"RTN","MPIMDMU2",41,0)
 ;
"RTN","MPIMDMU2",42,0)
 ; **35
"RTN","MPIMDMU2",43,0)
 S SKIP=0
"RTN","MPIMDMU2",44,0)
 I $E(ANS1,2)'=".",$D(^MPIVET("SSN",ANS1)) D  Q
"RTN","MPIMDMU2",45,0)
 .S ^XTMP("MPIM","PICK",DUZ)=ANS1
"RTN","MPIMDMU2",46,0)
 .S ANS1="S."_ANS1,SKIP=1
"RTN","MPIMDMU2",47,0)
 .D LISTS^MPIMDMU3 S QFLG=0
"RTN","MPIMDMU2",48,0)
 ;
"RTN","MPIMDMU2",49,0)
 Q:QFLG
"RTN","MPIMDMU2",50,0)
 ;
"RTN","MPIMDMU2",51,0)
 I $E(ANS1,1,2)="C." D LISTC S QFLG=0 Q
"RTN","MPIMDMU2",52,0)
 I $E(ANS1,1,2)="D." D LISTD^MPIMDMU3 S QFLG=0 Q
"RTN","MPIMDMU2",53,0)
 I $E(ANS1,1,2)="S." I 'SKIP D LISTS^MPIMDMU3 S QFLG=0 Q
"RTN","MPIMDMU2",54,0)
 I $E(ANS1,1,2)="I." D LISTI^MPIMDMU3 S QFLG=0 Q
"RTN","MPIMDMU2",55,0)
 I $E(ANS1,1,2)="P." D LISTP^MPIMDMU3 S QFLG=0 Q
"RTN","MPIMDMU2",56,0)
 ;
"RTN","MPIMDMU2",57,0)
CHKLIST ;
"RTN","MPIMDMU2",58,0)
 I $D(LIST),$D(LIST(+ANS1)) S ANS1=LIST(+ANS1) W " CASE #",ANS1 S ^XTMP("MPIM","PICK",DUZ)=ANS1 K LIST Q
"RTN","MPIMDMU2",59,0)
 ;
"RTN","MPIMDMU2",60,0)
 I ('$D(^MPI(985.2,"B",ANS1))&('$D(^MPI(985.2,"ICN",ANS1)))&('$D(^MPI(985.2,"SSN",ANS1)))) D  G:'NEW ASKC
"RTN","MPIMDMU2",61,0)
 .I $D(^MPIVET(ANS1,0)) S NEW=1 Q
"RTN","MPIMDMU2",62,0)
 .I $D(^MPIVET("SSN",ANS1)) S NEW=1 Q
"RTN","MPIMDMU2",63,0)
 .W " ??"
"RTN","MPIMDMU2",64,0)
 ;
"RTN","MPIMDMU2",65,0)
 S ^XTMP("MPIM","PICK",DUZ)=ANS1
"RTN","MPIMDMU2",66,0)
 ;
"RTN","MPIMDMU2",67,0)
QUIT Q
"RTN","MPIMDMU2",68,0)
 ;
"RTN","MPIMDMU2",69,0)
LISTC ;
"RTN","MPIMDMU2",70,0)
 W !!,"In order to limit the number of cases displayed, enter a"
"RTN","MPIMDMU2",71,0)
 W !,"date range during which the cases were opened.",!
"RTN","MPIMDMU2",72,0)
 ;
"RTN","MPIMDMU2",73,0)
 S RGNOW=$$NOW^XLFDT()
"RTN","MPIMDMU2",74,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMDMU2",75,0)
 S DIR(0)="DAO^:"_RGNOW_":EPX",DIR("A")="Beginning Date for List:  "
"RTN","MPIMDMU2",76,0)
 D ^DIR K DIR Q:$D(DIRUT)  S RGBDT=Y
"RTN","MPIMDMU2",77,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMDMU2",78,0)
 S DIR(0)="DAO^"_RGBDT_":"_RGNOW_":EPX",DIR("A")="Ending Date for List:  "
"RTN","MPIMDMU2",79,0)
 D ^DIR K DIR Q:$D(DIRUT)  S RGEDT=Y_"999999"
"RTN","MPIMDMU2",80,0)
 ;
"RTN","MPIMDMU2",81,0)
 K ^TMP("MPIM",$J),LIST S CNT=0
"RTN","MPIMDMU2",82,0)
 S LCHK=$P(ANS1,"C.",2),LCHK=$TR(LCHK,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MPIMDMU2",83,0)
 S LDUZ=LCHK
"RTN","MPIMDMU2",84,0)
 I '$O(^MPI(985.2,"DUZ",LDUZ)) S LDUZ=$E(LDUZ,1,($L(LDUZ)-1))_"A"
"RTN","MPIMDMU2",85,0)
 F  S LDUZ=$O(^MPI(985.2,"DUZ",LDUZ)) Q:LDUZ=""  Q:$E(LDUZ,1,$L(LCHK))'=LCHK  D
"RTN","MPIMDMU2",86,0)
 .S LIEN=0 F  S LIEN=$O(^MPI(985.2,"DUZ",LDUZ,LIEN)) Q:'LIEN  D
"RTN","MPIMDMU2",87,0)
 ..D SET^MPIMDMU3 I DTOP<RGBDT!(DTOP>RGEDT) Q
"RTN","MPIMDMU2",88,0)
 ..S CNT=CNT+1,LIST(CNT)=CASE
"RTN","MPIMDMU2",89,0)
 ..S ^TMP("MPIM",$J,CNT,LDUZ,LIEN)=CASE_"^"_USER_"^"_STATUS_"^"_$G(SHORT)_"^"_DTOP
"RTN","MPIMDMU2",90,0)
 ..S ICNDA=0 F  S ICNDA=$O(^MPI(985.2,LIEN,"ICN",ICNDA)) Q:'ICNDA  D SET2^MPIMDMU3 S ^TMP("MPIM",$J,CNT,LDUZ,LIEN,ICN)=PTNAME_"^"_SSN
"RTN","MPIMDMU2",91,0)
 ;
"RTN","MPIMDMU2",92,0)
 I '$D(^TMP("MPIM",$J)) W !?3,"No cases exist with a case worker name beginning with ",LCHK,"." Q
"RTN","MPIMDMU2",93,0)
 ;
"RTN","MPIMDMU2",94,0)
 W @IOF S REASK=1
"RTN","MPIMDMU2",95,0)
 S CNT=0 F  S CNT=$O(^TMP("MPIM",$J,CNT)) Q:'CNT  D
"RTN","MPIMDMU2",96,0)
 .S LDUZ="" F  S LDUZ=$O(^TMP("MPIM",$J,CNT,LDUZ)) Q:LDUZ=""  Q:QFLG  D
"RTN","MPIMDMU2",97,0)
 ..S LIEN=0 F  S LIEN=$O(^TMP("MPIM",$J,CNT,LDUZ,LIEN)) Q:'LIEN  Q:QFLG  D
"RTN","MPIMDMU2",98,0)
 ...S CASE=$P(^TMP("MPIM",$J,CNT,LDUZ,LIEN),"^"),USER=$P(^TMP("MPIM",$J,CNT,LDUZ,LIEN),"^",2)
"RTN","MPIMDMU2",99,0)
 ...S STATUS=$P(^TMP("MPIM",$J,CNT,LDUZ,LIEN),"^",3),SHORT=$P(^TMP("MPIM",$J,CNT,LDUZ,LIEN),"^",4),DTOP=$P(^TMP("MPIM",$J,CNT,LDUZ,LIEN),"^",5)
"RTN","MPIMDMU2",100,0)
 ...I $Y+4>IOSL D PAUSE^MPIMDMU3 Q:QFLG  W @IOF
"RTN","MPIMDMU2",101,0)
 ...W !!,CNT,". ",$E(LDUZ,1,25),?29,CASE,?40,"(opened ",$$FMTE^XLFDT($E(DTOP,1,7)),")",?62,STATUS
"RTN","MPIMDMU2",102,0)
 ...S ICN=0 F  S ICN=$O(^TMP("MPIM",$J,CNT,LDUZ,LIEN,ICN)) Q:'ICN  Q:QFLG  D
"RTN","MPIMDMU2",103,0)
 ....I $Y+3>IOSL D PAUSE^MPIMDMU3 Q:QFLG  W @IOF
"RTN","MPIMDMU2",104,0)
 ....S PTNAME=$P(^TMP("MPIM",$J,CNT,LDUZ,LIEN,ICN),"^"),SSN=$P(^TMP("MPIM",$J,CNT,LDUZ,LIEN,ICN),"^",2)
"RTN","MPIMDMU2",105,0)
 ....W !?6,ICN,?17,PTNAME,?49,SSN
"RTN","MPIMDMU2",106,0)
 ...I 'QFLG,SHORT]"" W !?6,"[",SHORT,"]"
"RTN","MPIMDMU2",107,0)
 K ^TMP("MPIM",$J)
"RTN","MPIMDMU2",108,0)
 Q
"RTN","MPIMDMU3")
0^79^B49066729
"RTN","MPIMDMU3",1,0)
MPIMDMU3 ;BIR/CML - (MPI ROUTINE) MPI Data Mgt Menu Utility Calls ; 07/26/02
"RTN","MPIMDMU3",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,12,24,35**;30 Apr 99
"RTN","MPIMDMU3",3,0)
 Q
"RTN","MPIMDMU3",4,0)
 ;
"RTN","MPIMDMU3",5,0)
 ;NOTE: The variables QFLG, ANS1, REASK, and NEW are not NEWed/KILLed in this routine
"RTN","MPIMDMU3",6,0)
 ;      because they need to be passed back to any routines calling ASKC^MPIMDMU2.
"RTN","MPIMDMU3",7,0)
 ;      All other variables in this routine are NEWed in ASKC^MPIMDMU2.
"RTN","MPIMDMU3",8,0)
 ;
"RTN","MPIMDMU3",9,0)
LISTD ;
"RTN","MPIMDMU3",10,0)
 K ^TMP("MPIM",$J),LIST S CNT=0
"RTN","MPIMDMU3",11,0)
 S LCHK=$P(ANS1,"D.",2) I LCHK'?4N W " ??" Q
"RTN","MPIMDMU3",12,0)
 S LDATE=LCHK_"-" F  S LDATE=$O(^MPI(985.2,"B",LDATE)) Q:LDATE=""  Q:$E(LDATE,1,4)>LCHK  D
"RTN","MPIMDMU3",13,0)
 .S LIEN=0 F  S LIEN=$O(^MPI(985.2,"B",LDATE,LIEN)) Q:'LIEN  D
"RTN","MPIMDMU3",14,0)
 ..D SET S CNT=CNT+1,LIST(CNT)=CASE
"RTN","MPIMDMU3",15,0)
 ..S ^TMP("MPIM",$J,CNT,CASE)=USER_"^"_STATUS_"^"_$G(SHORT)
"RTN","MPIMDMU3",16,0)
 ..S ICNDA=0 F  S ICNDA=$O(^MPI(985.2,LIEN,"ICN",ICNDA)) Q:'ICNDA  D SET2 S ^TMP("MPIM",$J,CNT,CASE,ICN)=PTNAME_"^"_SSN
"RTN","MPIMDMU3",17,0)
 ;
"RTN","MPIMDMU3",18,0)
 I '$D(^TMP("MPIM",$J)) W !?3,"No cases exist for that Month/Year." Q
"RTN","MPIMDMU3",19,0)
 W @IOF S REASK=1
"RTN","MPIMDMU3",20,0)
 S CNT=0 F  S CNT=$O(^TMP("MPIM",$J,CNT)) Q:'CNT  D
"RTN","MPIMDMU3",21,0)
 .S CASE="" F  S CASE=$O(^TMP("MPIM",$J,CNT,CASE)) Q:CASE=""  Q:QFLG  D
"RTN","MPIMDMU3",22,0)
 ..S USER=$P(^TMP("MPIM",$J,CNT,CASE),"^"),STATUS=$P(^TMP("MPIM",$J,CNT,CASE),"^",2),SHORT=$P(^TMP("MPIM",$J,CNT,CASE),"^",3)
"RTN","MPIMDMU3",23,0)
 ..I $Y+4>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",24,0)
 ..W !!,CNT,". ",CASE,?15,USER,?59,STATUS
"RTN","MPIMDMU3",25,0)
 ..S ICN=0 F  S ICN=$O(^TMP("MPIM",$J,CNT,CASE,ICN)) Q:'ICN  Q:QFLG  D
"RTN","MPIMDMU3",26,0)
 ...I $Y+3>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",27,0)
 ...S PTNAME=$P(^TMP("MPIM",$J,CNT,CASE,ICN),"^"),SSN=$P(^TMP("MPIM",$J,CNT,CASE,ICN),"^",2)
"RTN","MPIMDMU3",28,0)
 ...W !?6,ICN,?17,PTNAME,?49,SSN
"RTN","MPIMDMU3",29,0)
 ..I 'QFLG,SHORT]"" W !?6,"[",SHORT,"]"
"RTN","MPIMDMU3",30,0)
 K ^TMP("MPIM",$J)
"RTN","MPIMDMU3",31,0)
 Q
"RTN","MPIMDMU3",32,0)
 ;
"RTN","MPIMDMU3",33,0)
LISTS ;
"RTN","MPIMDMU3",34,0)
 K ^TMP("MPIM",$J),LIST,CASECHK S CNT=0
"RTN","MPIMDMU3",35,0)
 S LCHK=$P(ANS1,"S.",2)
"RTN","MPIMDMU3",36,0)
 S LSTRT=LCHK_"000000000",LSTRT=$E(LSTRT,1,9)
"RTN","MPIMDMU3",37,0)
 S LAST=$E(LSTRT,9) I LAST>0 S LAST=LAST-1,LSTRT=$E(LSTRT,1,8)_LAST
"RTN","MPIMDMU3",38,0)
 S LSTOP=LCHK_"999999999",LSTOP=$E(LSTOP,1,9)
"RTN","MPIMDMU3",39,0)
 S LSSN=LSTRT F  S LSSN=$O(^MPI(985.2,"SSN",LSSN)) Q:LSSN=""  Q:$E(LSSN,1,$L(LCHK))'=LCHK  Q:LSSN>LSTOP  D
"RTN","MPIMDMU3",40,0)
 .S LIEN=0 F  S LIEN=$O(^MPI(985.2,"SSN",LSSN,LIEN)) Q:'LIEN  D
"RTN","MPIMDMU3",41,0)
 ..D SET
"RTN","MPIMDMU3",42,0)
 ..I '$D(CASECHK(CASE)) D
"RTN","MPIMDMU3",43,0)
 ...S CNT=CNT+1,LIST(CNT)=CASE,CASECHK(CASE)=""
"RTN","MPIMDMU3",44,0)
 ...S ^TMP("MPIM",$J,CNT,LSSN,LIEN)=CASE_"^"_USER_"^"_STATUS_"^"_$G(SHORT)
"RTN","MPIMDMU3",45,0)
 ...S ICNDA=0 F  S ICNDA=$O(^MPI(985.2,LIEN,"ICN",ICNDA)) Q:'ICNDA  D SET2 S ^TMP("MPIM",$J,CNT,LSSN,LIEN,ICN)=PTNAME_"^"_SSN
"RTN","MPIMDMU3",46,0)
 ;
"RTN","MPIMDMU3",47,0)
 ;if no cases are found with the specified SSN, check to see if there is an ICN for that SSN that has a case.  ; **35
"RTN","MPIMDMU3",48,0)
 I '$D(^TMP("MPIM",$J)) D
"RTN","MPIMDMU3",49,0)
 .S LICN=0 F  S LICN=$O(^MPIVET("SSN",LCHK,LICN)) Q:'LICN  D
"RTN","MPIMDMU3",50,0)
 ..S LIEN=0 F  S LIEN=$O(^MPI(985.2,"ICN",LICN,LIEN)) Q:'LIEN  D
"RTN","MPIMDMU3",51,0)
 ...D SET S CNT=CNT+1,LIST(CNT)=CASE
"RTN","MPIMDMU3",52,0)
 ...S ^TMP("MPIM",$J,CNT,LICN,LIEN)=CASE_"^"_USER_"^"_STATUS_"^"_$G(SHORT)
"RTN","MPIMDMU3",53,0)
 ...S ICNDA=0 F  S ICNDA=$O(^MPI(985.2,LIEN,"ICN",ICNDA)) Q:'ICNDA  D SET2 S ^TMP("MPIM",$J,CNT,LICN,LIEN,ICN)=PTNAME_"^"_SSN
"RTN","MPIMDMU3",54,0)
 ;
"RTN","MPIMDMU3",55,0)
 I '$D(^TMP("MPIM",$J)) D  Q
"RTN","MPIMDMU3",56,0)
 .I $G(CEFLG)=1 S NEW=1 Q
"RTN","MPIMDMU3",57,0)
 .I $G(CEFLG)="" I '$D(^TMP("MPIM",$J)) W !?3,"No cases exist with an SSN beginning with ",LCHK,"."
"RTN","MPIMDMU3",58,0)
 ;
"RTN","MPIMDMU3",59,0)
 W @IOF S REASK=1
"RTN","MPIMDMU3",60,0)
 S CNT=0 F  S CNT=$O(^TMP("MPIM",$J,CNT)) Q:'CNT  D
"RTN","MPIMDMU3",61,0)
 .S LSSN="" F  S LSSN=$O(^TMP("MPIM",$J,CNT,LSSN)) Q:LSSN=""  Q:QFLG  D
"RTN","MPIMDMU3",62,0)
 ..S LIEN=0 F  S LIEN=$O(^TMP("MPIM",$J,CNT,LSSN,LIEN)) Q:'LIEN  Q:QFLG  D
"RTN","MPIMDMU3",63,0)
 ...S CASE=$P(^TMP("MPIM",$J,CNT,LSSN,LIEN),"^"),USER=$P(^TMP("MPIM",$J,CNT,LSSN,LIEN),"^",2)
"RTN","MPIMDMU3",64,0)
 ...S STATUS=$P(^TMP("MPIM",$J,CNT,LSSN,LIEN),"^",3),SHORT=$P(^TMP("MPIM",$J,CNT,LSSN,LIEN),"^",4)
"RTN","MPIMDMU3",65,0)
 ...I $Y+4>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",66,0)
 ...W !!,CNT,". ",LSSN,?15,CASE,?28,USER,?60,STATUS
"RTN","MPIMDMU3",67,0)
 ...S ICN=0 F  S ICN=$O(^TMP("MPIM",$J,CNT,LSSN,LIEN,ICN)) Q:'ICN  Q:QFLG  D
"RTN","MPIMDMU3",68,0)
 ....I $Y+3>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",69,0)
 ....S PTNAME=$P(^TMP("MPIM",$J,CNT,LSSN,LIEN,ICN),"^"),SSN=$P(^TMP("MPIM",$J,CNT,LSSN,LIEN,ICN),"^",2)
"RTN","MPIMDMU3",70,0)
 ....W !?6,ICN,?17,PTNAME,?49,SSN
"RTN","MPIMDMU3",71,0)
 ...I 'QFLG,SHORT]"" W !?6,"[",SHORT,"]"
"RTN","MPIMDMU3",72,0)
 K ^TMP("MPIM",$J),CASECHK
"RTN","MPIMDMU3",73,0)
 Q
"RTN","MPIMDMU3",74,0)
 ;
"RTN","MPIMDMU3",75,0)
LISTI ;
"RTN","MPIMDMU3",76,0)
 K ^TMP("MPIM",$J),LIST S CNT=0
"RTN","MPIMDMU3",77,0)
 S LCHK=$P(ANS1,"I.",2)
"RTN","MPIMDMU3",78,0)
 S LSTRT=LCHK_"0000000000",LSTRT=$E(LSTRT,1,10)
"RTN","MPIMDMU3",79,0)
 S LAST=$E(LSTRT,10) I LAST>0 S LAST=LAST-1,LSTRT=$E(LSTRT,1,9)_LAST
"RTN","MPIMDMU3",80,0)
 S LSTOP=LCHK_"9999999999",LSTOP=$E(LSTOP,1,10)
"RTN","MPIMDMU3",81,0)
 S LICN=LSTRT F  S LICN=$O(^MPI(985.2,"ICN",LICN)) Q:'LICN  Q:LICN>LSTOP  D
"RTN","MPIMDMU3",82,0)
 .S LIEN=0 F  S LIEN=$O(^MPI(985.2,"ICN",LICN,LIEN)) Q:'LIEN  D
"RTN","MPIMDMU3",83,0)
 ..D SET S CNT=CNT+1,LIST(CNT)=CASE
"RTN","MPIMDMU3",84,0)
 ..S ^TMP("MPIM",$J,CNT,LICN,LIEN)=CASE_"^"_USER_"^"_STATUS_"^"_$G(SHORT)
"RTN","MPIMDMU3",85,0)
 ..S ICNDA=0 F  S ICNDA=$O(^MPI(985.2,LIEN,"ICN",ICNDA)) Q:'ICNDA  D SET2 S ^TMP("MPIM",$J,CNT,LICN,LIEN,ICN)=PTNAME_"^"_SSN
"RTN","MPIMDMU3",86,0)
 ;
"RTN","MPIMDMU3",87,0)
 I '$D(^TMP("MPIM",$J)) D  Q
"RTN","MPIMDMU3",88,0)
 .I $G(CEFLG)=1 S NEW=1 Q
"RTN","MPIMDMU3",89,0)
 .I $G(CEFLG)="" I '$D(^TMP("MPIM",$J)) W !?3,"No cases exist with an ICN beginning with ",LCHK,"."
"RTN","MPIMDMU3",90,0)
 ;
"RTN","MPIMDMU3",91,0)
 W @IOF S REASK=1
"RTN","MPIMDMU3",92,0)
 S CNT=0 F  S CNT=$O(^TMP("MPIM",$J,CNT)) Q:'CNT  D
"RTN","MPIMDMU3",93,0)
 .S LICN=0 F  S LICN=$O(^TMP("MPIM",$J,CNT,LICN)) Q:'LICN  Q:QFLG  D
"RTN","MPIMDMU3",94,0)
 ..S LIEN=0 F  S LIEN=$O(^TMP("MPIM",$J,CNT,LICN,LIEN)) Q:'LIEN  Q:QFLG  D
"RTN","MPIMDMU3",95,0)
 ...S CASE=$P(^TMP("MPIM",$J,CNT,LICN,LIEN),"^"),USER=$P(^TMP("MPIM",$J,CNT,LICN,LIEN),"^",2)
"RTN","MPIMDMU3",96,0)
 ...S STATUS=$P(^TMP("MPIM",$J,CNT,LICN,LIEN),"^",3),SHORT=$P(^TMP("MPIM",$J,CNT,LICN,LIEN),"^",4)
"RTN","MPIMDMU3",97,0)
 ...I $Y+4>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",98,0)
 ...W !!,CNT,". ",LICN,?15,CASE,?28,USER,?60,STATUS
"RTN","MPIMDMU3",99,0)
 ...S ICN=0 F  S ICN=$O(^TMP("MPIM",$J,CNT,LICN,LIEN,ICN)) Q:'ICN  Q:QFLG  D
"RTN","MPIMDMU3",100,0)
 ....I $Y+3>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",101,0)
 ....S PTNAME=$P(^TMP("MPIM",$J,CNT,LICN,LIEN,ICN),"^"),SSN=$P(^TMP("MPIM",$J,CNT,LICN,LIEN,ICN),"^",2)
"RTN","MPIMDMU3",102,0)
 ....W !?6,ICN,?17,PTNAME,?49,SSN
"RTN","MPIMDMU3",103,0)
 ...I 'QFLG,SHORT]"" W !?6,"[",SHORT,"]"
"RTN","MPIMDMU3",104,0)
 K ^TMP("MPIM",$J)
"RTN","MPIMDMU3",105,0)
 Q
"RTN","MPIMDMU3",106,0)
 ;
"RTN","MPIMDMU3",107,0)
LISTP ;
"RTN","MPIMDMU3",108,0)
 K ^TMP("MPIM",$J),LIST S CNT=0
"RTN","MPIMDMU3",109,0)
 S LCHK=$P(ANS1,"P.",2),LCHK=$TR(LCHK,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MPIMDMU3",110,0)
 S LPAT=LCHK
"RTN","MPIMDMU3",111,0)
 I '$O(^MPI(985.2,"PAT",LPAT)) S LPAT=$E(LPAT,1,($L(LPAT)-1))_"A"
"RTN","MPIMDMU3",112,0)
 F  S LPAT=$O(^MPI(985.2,"PAT",LPAT)) Q:LPAT=""  Q:$E(LPAT,1,$L(LCHK))'=LCHK  D
"RTN","MPIMDMU3",113,0)
 .S LIEN=0 F  S LIEN=$O(^MPI(985.2,"PAT",LPAT,LIEN)) Q:'LIEN  D
"RTN","MPIMDMU3",114,0)
 ..D SET S CNT=CNT+1,LIST(CNT)=CASE
"RTN","MPIMDMU3",115,0)
 ..S ^TMP("MPIM",$J,CNT,LPAT,LIEN)=CASE_"^"_USER_"^"_STATUS_"^"_$G(SHORT)
"RTN","MPIMDMU3",116,0)
 ..S ICNDA=0 F  S ICNDA=$O(^MPI(985.2,LIEN,"ICN",ICNDA)) Q:'ICNDA  D SET2 S ^TMP("MPIM",$J,CNT,LPAT,LIEN,ICN)=PTNAME_"^"_SSN
"RTN","MPIMDMU3",117,0)
 ;
"RTN","MPIMDMU3",118,0)
 I '$D(^TMP("MPIM",$J)) W !?3,"No cases exist with a patient name beginning with ",LCHK,"." Q
"RTN","MPIMDMU3",119,0)
 ;
"RTN","MPIMDMU3",120,0)
 W @IOF S REASK=1
"RTN","MPIMDMU3",121,0)
 S CNT=0 F  S CNT=$O(^TMP("MPIM",$J,CNT)) Q:'CNT  D
"RTN","MPIMDMU3",122,0)
 .S LPAT="" F  S LPAT=$O(^TMP("MPIM",$J,CNT,LPAT)) Q:LPAT=""  Q:QFLG  D
"RTN","MPIMDMU3",123,0)
 ..S LIEN=0 F  S LIEN=$O(^TMP("MPIM",$J,CNT,LPAT,LIEN)) Q:'LIEN  Q:QFLG  D
"RTN","MPIMDMU3",124,0)
 ...S CASE=$P(^TMP("MPIM",$J,CNT,LPAT,LIEN),"^"),USER=$P(^TMP("MPIM",$J,CNT,LPAT,LIEN),"^",2)
"RTN","MPIMDMU3",125,0)
 ...S STATUS=$P(^TMP("MPIM",$J,CNT,LPAT,LIEN),"^",3),SHORT=$P(^TMP("MPIM",$J,CNT,LPAT,LIEN),"^",4)
"RTN","MPIMDMU3",126,0)
 ...I $Y+4>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",127,0)
 ...W !!,CNT,". ",$E(LPAT,1,25),?32,CASE,?44,$E(USER,1,20),?66,$E(STATUS,1,15)
"RTN","MPIMDMU3",128,0)
 ...S ICN=0 F  S ICN=$O(^TMP("MPIM",$J,CNT,LPAT,LIEN,ICN)) Q:'ICN  Q:QFLG  D
"RTN","MPIMDMU3",129,0)
 ....I $Y+3>IOSL D PAUSE Q:QFLG  W @IOF
"RTN","MPIMDMU3",130,0)
 ....S PTNAME=$P(^TMP("MPIM",$J,CNT,LPAT,LIEN,ICN),"^"),SSN=$P(^TMP("MPIM",$J,CNT,LPAT,LIEN,ICN),"^",2)
"RTN","MPIMDMU3",131,0)
 ....W !?6,ICN,?17,PTNAME,?49,SSN
"RTN","MPIMDMU3",132,0)
 ...I 'QFLG,SHORT]"" W !?6,"[",SHORT,"]"
"RTN","MPIMDMU3",133,0)
 K ^TMP("MPIM",$J)
"RTN","MPIMDMU3",134,0)
 Q
"RTN","MPIMDMU3",135,0)
 ;
"RTN","MPIMDMU3",136,0)
SET ;
"RTN","MPIMDMU3",137,0)
 K SHORT
"RTN","MPIMDMU3",138,0)
 S NODE=^MPI(985.2,LIEN,0),CASE=$P(NODE,"^"),USER=$$GET1^DIQ(200,+LIEN_",",.01),STATUS=$$GET1^DIQ(985.2,+LIEN_",",2),DTOP=$P(NODE,"^",4)
"RTN","MPIMDMU3",139,0)
 I $D(^MPI(985.2,LIEN,"PROB")) S SHORT=$P(^MPI(985.2,LIEN,"PROB"),"^",2)
"RTN","MPIMDMU3",140,0)
 Q
"RTN","MPIMDMU3",141,0)
 ;
"RTN","MPIMDMU3",142,0)
SET2 S ICN=$P(^MPI(985.2,LIEN,"ICN",ICNDA,0),"^"),PTNAME=$P(^MPI(985.2,LIEN,"ICN",ICNDA,0),"^",2)
"RTN","MPIMDMU3",143,0)
 I '$D(^MPIVET(ICN,0)) S SSN="(ICN now deleted)" Q
"RTN","MPIMDMU3",144,0)
 I $P($G(^MPIVET(+ICN,"ID_STATE")),"^")="D" S SSN="(ICN now deactivated)" Q  ;**24
"RTN","MPIMDMU3",145,0)
 S SSN=$P(^MPIVET(ICN,0),"^",14)
"RTN","MPIMDMU3",146,0)
 Q
"RTN","MPIMDMU3",147,0)
 ;
"RTN","MPIMDMU3",148,0)
PAUSE ;
"RTN","MPIMDMU3",149,0)
 W ! S DIR(0)="E" D ^DIR K DIR I 'Y S QFLG=1
"RTN","MPIMDMU3",150,0)
 Q
"RTN","MPIMDS01")
0^80^B69401291
"RTN","MPIMDS01",1,0)
MPIMDS01 ;BIR/CML-DUP SSN Report on MPI ;8/24/02
"RTN","MPIMDS01",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**12**;30 Apr 99
"RTN","MPIMDS01",3,0)
 ;Print Dup SSN Report by Site
"RTN","MPIMDS01",4,0)
 ;
"RTN","MPIMDS01",5,0)
 I $D(^XTMP("MPIM","DS COMPILE STOP")) D
"RTN","MPIMDS01",6,0)
 .W !!,"==> The DUP SSN Report was last compiled on ",$$FMTE^XLFDT($E(^XTMP("MPIM","DS COMPILE STOP"),1,12)),"."
"RTN","MPIMDS01",7,0)
 ;
"RTN","MPIMDS01",8,0)
 W !!,"This compile can take quite awhile."
"RTN","MPIMDS01",9,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you sure you want to continue"
"RTN","MPIMDS01",10,0)
 D ^DIR
"RTN","MPIMDS01",11,0)
 I +Y'=1 K DIR G QUIT
"RTN","MPIMDS01",12,0)
 ;
"RTN","MPIMDS01",13,0)
EN ;use this tag for entry for background job
"RTN","MPIMDS01",14,0)
 ;1. Remove all SSNs from ^MPI(985.32 that are no longer duplicated.
"RTN","MPIMDS01",15,0)
 D CHKDUP
"RTN","MPIMDS01",16,0)
 ;
"RTN","MPIMDS01",17,0)
COMP ;2. Compile data into 2 globals:
"RTN","MPIMDS01",18,0)
 ;^XTMP("MPIM","DS SSN",SSN,ICN,SITE NAME)=SITE STATION #^PT NAME^DOB^CMOR^SEX
"RTN","MPIMDS01",19,0)
 ;^XTMP("MPIM","DS SITE",SITE IEN IN ^DIC(4),SSN,ICN)=""
"RTN","MPIMDS01",20,0)
 K ^XTMP("MPIM","DS SSN"),^XTMP("MPIM","DS SITE"),SITEARR
"RTN","MPIMDS01",21,0)
 ;
"RTN","MPIMDS01",22,0)
 K ^XTMP("MPIM","DS COMPILE START"),^XTMP("MPIM","DS COMPILE STOP")
"RTN","MPIMDS01",23,0)
 S ^XTMP("MPIM","DS COMPILE START")=$$NOW^XLFDT
"RTN","MPIMDS01",24,0)
 S ^XTMP("MPIM",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MPI DQ Data"
"RTN","MPIMDS01",25,0)
 ;
"RTN","MPIMDS01",26,0)
 W !!,"one moment, please..."
"RTN","MPIMDS01",27,0)
 S (TOTSITE,SSNCNT)=0
"RTN","MPIMDS01",28,0)
 S SSN="" F  S SSN=$O(^MPI(985.32,"B",SSN)) Q:SSN=""  D
"RTN","MPIMDS01",29,0)
 .S SSNCNT=SSNCNT+1
"RTN","MPIMDS01",30,0)
 . ; do not include SSNs marked as CANNOT BE RESOLVED
"RTN","MPIMDS01",31,0)
 .S SSNDA=$O(^MPI(985.32,"B",SSN,0)) I $P(^MPI(985.32,SSNDA,0),"^",3)=1 Q
"RTN","MPIMDS01",32,0)
 .S ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  D
"RTN","MPIMDS01",33,0)
 ..I '$D(^MPIVET(ICN,0)) K ^MPIVET("SSN",SSN,ICN) Q
"RTN","MPIMDS01",34,0)
 ..S NODE=^MPIVET(ICN,0),LNAME=$P(NODE,"^",2),FNAME=$P(NODE,"^",3),MNAME=$P(NODE,"^",4)
"RTN","MPIMDS01",35,0)
 ..S SEX=$P(NODE,"^",13),DOB=$$FMTE^XLFDT($P(NODE,"^",8))
"RTN","MPIMDS01",36,0)
 ..S CLAIM=$P(^MPIVET(ICN,1),"^"),CMOR=$P(^(1),"^",2)
"RTN","MPIMDS01",37,0)
 ..I CMOR'="" S CMOR=$P($$NS^XUAF4(CMOR),"^")
"RTN","MPIMDS01",38,0)
 ..S AF=0 F  S AF=$O(^MPI(985.5,"AM",ICN,AF)) Q:'AF  D
"RTN","MPIMDS01",39,0)
 ...S AF1=$$NS^XUAF4(AF),AFNAME=$P(AF1,"^"),AFSTA=$P(AF1,"^",2)
"RTN","MPIMDS01",40,0)
 ...;I '$D(SITEARR(AFNAME)) S SITEARR(AFNAME)=0
"RTN","MPIMDS01",41,0)
 ...;S SITEARR(AFNAME)=SITEARR(AFNAME)+1,TOTSITE=TOTSITE+1
"RTN","MPIMDS01",42,0)
 ...S ^XTMP("MPIM","DS SSN",SSN,ICN,AFNAME)=AFSTA_"^"_LNAME_","_FNAME_" "_MNAME_"^"_DOB_"^"_CMOR_"^"_SEX_"^"_CLAIM
"RTN","MPIMDS01",43,0)
 ...S ^XTMP("MPIM","DS SITE",AF,SSN,ICN)=""
"RTN","MPIMDS01",44,0)
 ;
"RTN","MPIMDS01",45,0)
 I $E(IOST)="C" W !,SSNCNT," SSN dups processed."
"RTN","MPIMDS01",46,0)
 ;
"RTN","MPIMDS01",47,0)
 D NOW^%DTC
"RTN","MPIMDS01",48,0)
 S ^XTMP("MPIM","DS COMPILE STOP")=$E(%,1,12)
"RTN","MPIMDS01",49,0)
 K FDA,MPIMDS01 S FDA(985.1,"1,",3)=$E(%,1,12) D FILE^DIE("E","FDA","MPIMDS01")
"RTN","MPIMDS01",50,0)
 ;
"RTN","MPIMDS01",51,0)
 ;do breakout by VISN/Site
"RTN","MPIMDS01",52,0)
 I $E(IOST)="C" D BRKOUT
"RTN","MPIMDS01",53,0)
 G QUIT
"RTN","MPIMDS01",54,0)
 ;
"RTN","MPIMDS01",55,0)
ASK ;3. Ask for Site to print report for (all or single)
"RTN","MPIMDS01",56,0)
 W !!,"This option prints data generated from the [MPI DATA MGT COMPILE DUP SSN]"
"RTN","MPIMDS01",57,0)
 W !,"background job "
"RTN","MPIMDS01",58,0)
 I '$D(^XTMP("MPIM","DS COMPILE START")) D  G QUIT
"RTN","MPIMDS01",59,0)
 .W "which has not been compiled.  Please schedule it."
"RTN","MPIMDS01",60,0)
 I $D(^XTMP("MPIM","DS COMPILE START")),'$D(^XTMP("MPIM","DS COMPILE STOP")) D  G QUIT
"RTN","MPIMDS01",61,0)
 .W "which is currently being compiled.  Try again later."
"RTN","MPIMDS01",62,0)
 I $D(^XTMP("MPIM","DS COMPILE START")),$D(^XTMP("MPIM","DS COMPILE STOP")) D
"RTN","MPIMDS01",63,0)
 .W "which was last compiled ",$$FMTE^XLFDT($E(^XTMP("MPIM","DS COMPILE STOP"),1,7)),"."
"RTN","MPIMDS01",64,0)
 ;
"RTN","MPIMDS01",65,0)
 I '$D(^XTMP("MPIM","DS SSN")) W !,"No data is currently compiled." G QUIT
"RTN","MPIMDS01",66,0)
 W ! S PRTFLG=0
"RTN","MPIMDS01",67,0)
 K DIR S DIR(0)="SAM^A:ALL;S:SINGLE;"
"RTN","MPIMDS01",68,0)
 S DIR("A")="Print Report for (A)LL Sites or a (S)INGLE Site? "
"RTN","MPIMDS01",69,0)
 S DIR("B")="S"
"RTN","MPIMDS01",70,0)
 S DIR("?",1)="Enter:"
"RTN","MPIMDS01",71,0)
 S DIR("?",2)=" ""A"" to report data for all facilities."
"RTN","MPIMDS01",72,0)
 S DIR("?")=" ""S"" to print report data for a single facility."
"RTN","MPIMDS01",73,0)
 D ^DIR G:$D(DIRUT) QUIT S ANS=Y
"RTN","MPIMDS01",74,0)
 ;
"RTN","MPIMDS01",75,0)
PRTEN K SITEARR
"RTN","MPIMDS01",76,0)
 I ANS="S" D  G:PRT<0 QUIT G DEV
"RTN","MPIMDS01",77,0)
 .S DIC="^DIC(4,",DIC(0)="QEAM",DIC("S")="I $D(^XTMP(""MPIM"",""DS SITE"",+Y))"
"RTN","MPIMDS01",78,0)
 .S DIC("A")="Select Facility for Report: "
"RTN","MPIMDS01",79,0)
 .D ^DIC K DIC S PRT=+Y Q:PRT<0  S SITEARR($P($$NS^XUAF4(PRT),"^"))=PRT
"RTN","MPIMDS01",80,0)
 . ; ask how many patients to print
"RTN","MPIMDS01",81,0)
 .S CNT=0,SSN="" F  S SSN=$O(^XTMP("MPIM","DS SITE",PRT,SSN)) Q:SSN=""  S CNT=CNT+1
"RTN","MPIMDS01",82,0)
 .W !!,"This site is involved in ",CNT," SSN duplicates."
"RTN","MPIMDS01",83,0)
 .K DIR S DIR(0)="N^1:"_CNT,DIR("A")="How many SSNs do you want to print"
"RTN","MPIMDS01",84,0)
 .D ^DIR K DIR
"RTN","MPIMDS01",85,0)
 .I $D(DIRUT) S PRT=-1 Q
"RTN","MPIMDS01",86,0)
 .S LIMIT=+Y
"RTN","MPIMDS01",87,0)
 ;
"RTN","MPIMDS01",88,0)
 I ANS="A" D
"RTN","MPIMDS01",89,0)
 .S PRT=0 F  S PRT=$O(^XTMP("MPIM","DS SITE",PRT)) Q:'PRT  S SITEARR($P($$NS^XUAF4(PRT),"^"))=PRT
"RTN","MPIMDS01",90,0)
 ;
"RTN","MPIMDS01",91,0)
DEV ;
"RTN","MPIMDS01",92,0)
 W !!,"Right Margin for this report is 132."
"RTN","MPIMDS01",93,0)
 K ZTSAVE S ZTSAVE("ANS")="",ZTSAVE("SITEARR(")="",ZTSAVE("LIMIT")=""
"RTN","MPIMDS01",94,0)
 D EN^XUTMDEVQ("START^MPIMDS01","MPI - Print DUP SSN Report",.ZTSAVE) I 'POP Q
"RTN","MPIMDS01",95,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMDS01",96,0)
 G QUIT
"RTN","MPIMDS01",97,0)
 ;
"RTN","MPIMDS01",98,0)
START ;
"RTN","MPIMDS01",99,0)
 ;compile and Print Report
"RTN","MPIMDS01",100,0)
 I '$D(PRTFLG) S PRTFLG=0
"RTN","MPIMDS01",101,0)
 ;PRTFLG=1 this is the call to just print the list for developers use
"RTN","MPIMDS01",102,0)
 ;PRTFLG=0 this is the call the data mgt team will use
"RTN","MPIMDS01",103,0)
 I '$D(SITEARR) G QUIT
"RTN","MPIMDS01",104,0)
 S $P(LN1,"-",132)="",$P(LN2,"_",47)="",$P(LN3,"_",28)="",QFLG=0
"RTN","MPIMDS01",105,0)
 S VERLINE="VERIFIED CORRECT DATA - PATIENT NAME: "_LN2_"  DOB: "_LN3_"  SEX: _____"
"RTN","MPIMDS01",106,0)
 D NOW^%DTC S PRTDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","MPIMDS01",107,0)
 ;
"RTN","MPIMDS01",108,0)
 S SITE="" F  S SITE=$O(SITEARR(SITE)) Q:SITE=""  D
"RTN","MPIMDS01",109,0)
 .S SITEIEN=SITEARR(SITE),SITESTA=$P($$NS^XUAF4(SITEIEN),"^",2)
"RTN","MPIMDS01",110,0)
 .S (PG,SSNCNT)=0
"RTN","MPIMDS01",111,0)
 .D HDR
"RTN","MPIMDS01",112,0)
 .S SSN="" F  S SSN=$O(^XTMP("MPIM","DS SITE",SITEIEN,SSN)) Q:SSN=""  Q:QFLG  D
"RTN","MPIMDS01",113,0)
 ..I '$D(^MPI(985.32,"B",SSN)) Q
"RTN","MPIMDS01",114,0)
 ..S SSNIEN=$O(^MPI(985.32,"B",SSN,0))
"RTN","MPIMDS01",115,0)
 ..I 'PRTFLG,$P(^MPI(985.32,SSNIEN,0),"^",2)=1 Q
"RTN","MPIMDS01",116,0)
 ..I PRTFLG,$P(^MPI(985.32,SSNIEN,0),"^",2)'=1 Q
"RTN","MPIMDS01",117,0)
 ..S SSNCNT=SSNCNT+1 I $D(LIMIT),SSNCNT>LIMIT S QFLG=1 Q
"RTN","MPIMDS01",118,0)
 ..D:LNCNT>40 HDR W !!,$J(SSNCNT,3),". SSN: ",SSN S LNCNT=LNCNT+2
"RTN","MPIMDS01",119,0)
 ..I $D(^MPI(985.2,"SSN",SSN)) D
"RTN","MPIMDS01",120,0)
 ...S CASEIEN=$O(^MPI(985.2,"SSN",SSN,0)),CASE=$P(^MPI(985.2,CASEIEN,0),"^"),NOIS=$P(^MPI(985.2,CASEIEN,0),"^",6)
"RTN","MPIMDS01",121,0)
 ...S STATUS=$P($G(^MPI(985.2,CASEIEN,0)),"^",3) I STATUS="O" D
"RTN","MPIMDS01",122,0)
 ....S USER=$P($G(^MPI(985.2,CASEIEN,0)),"^",2),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMDS01",123,0)
 ....W !?6,"<<ACTIVE CASE #",CASE I NOIS]"" W " / NOIS #",NOIS
"RTN","MPIMDS01",124,0)
 ....W ">>"
"RTN","MPIMDS01",125,0)
 ....W !?6,"Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMDS01",126,0)
 ..S ICN=0 F  S ICN=$O(^XTMP("MPIM","DS SSN",SSN,ICN)) Q:'ICN  D
"RTN","MPIMDS01",127,0)
 ...S SITENM="" F  S SITENM=$O(^XTMP("MPIM","DS SSN",SSN,ICN,SITENM)) Q:SITENM=""  D
"RTN","MPIMDS01",128,0)
 ....W ! S LNCNT=LNCNT+1
"RTN","MPIMDS01",129,0)
 ....S NODE=^XTMP("MPIM","DS SSN",SSN,ICN,SITENM)
"RTN","MPIMDS01",130,0)
 ....S PC1=$P(NODE,"^") I PC1=SITESTA W "=>"
"RTN","MPIMDS01",131,0)
 ....S PAT=$P(NODE,"^",2),DOB=$P(NODE,"^",3),CMOR=$P(NODE,"^",4),SEX=$P(NODE,"^",5),CLAIM=$P(NODE,"^",6)
"RTN","MPIMDS01",132,0)
 ....W ?4,ICN,?15,"(",PC1,")",$E(SITENM,1,25),?46,PAT,?78,DOB,?92,SEX,?95,$E(CMOR,1,25),?121,CLAIM
"RTN","MPIMDS01",133,0)
 ..W !!,VERLINE S LNCNT=LNCNT+2
"RTN","MPIMDS01",134,0)
 ;
"RTN","MPIMDS01",135,0)
QUIT ;
"RTN","MPIMDS01",136,0)
 K %,AF,AF1,AFNAME,AFSTA,ANS,CLAIM,CMOR,DIRUT,DOB,FNAME,ICN,LN1,LN2,LN3,LNAME,MNAME,NODE,PAT
"RTN","MPIMDS01",137,0)
 K PC1,PG,PRT,PRTDT,SEX,SITE,SITEARR,SITEIEN,SITENM,SITESTA,SSN,SSNCNT,TOTSITE,VERLINE,Y
"RTN","MPIMDS01",138,0)
 K PRTFLG,CASE,CASEIEN,LNCNT,SSNIEN,STATUS,USER,USERNM,VISN,SSNDA,CNT,LIMIT,QFLG,NOIS
"RTN","MPIMDS01",139,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMDS01",140,0)
 Q
"RTN","MPIMDS01",141,0)
 ;
"RTN","MPIMDS01",142,0)
HDR ;
"RTN","MPIMDS01",143,0)
 S PG=PG+1,LNCNT=1
"RTN","MPIMDS01",144,0)
 W !!!,"MPI Duplicate SSN Report - For ",SITE,"  (Station #",SITESTA,")",?121,"Page: ",PG,!,"Printed ",PRTDT
"RTN","MPIMDS01",145,0)
 W !!?4,"ICN",?15,"Sharing Facility",?46,"Patient Name",?78,"DOB",?91,"Sex",?95,"CMOR",?121,"Claim #",!,LN1
"RTN","MPIMDS01",146,0)
 Q
"RTN","MPIMDS01",147,0)
 ;
"RTN","MPIMDS01",148,0)
BRKOUT ;
"RTN","MPIMDS01",149,0)
 I '$D(^XTMP("MPIM","DS COMPILE STOP")) W !!,"No Dup SSN data is currently compiled." G QUIT
"RTN","MPIMDS01",150,0)
 W !!,"==> The DUP SSN Report was last compiled on ",$$FMTE^XLFDT($E(^XTMP("MPIM","DS COMPILE STOP"),1,12)),"."
"RTN","MPIMDS01",151,0)
 ;
"RTN","MPIMDS01",152,0)
 K BRKOUT
"RTN","MPIMDS01",153,0)
 S SITEIEN=0 F  S SITEIEN=$O(^XTMP("MPIM","DS SITE",SITEIEN)) Q:'SITEIEN  D
"RTN","MPIMDS01",154,0)
 .S SITENM=$$GET1^DIQ(4,+SITEIEN_",",.01)
"RTN","MPIMDS01",155,0)
 .I '$D(^MPI(985.3,SITEIEN,0)) W !,SITENM," is no longer in MPI SITE MONITOR file (#985.3).",!,"Recompile DUP SSN data." Q
"RTN","MPIMDS01",156,0)
 .I $D(^MPI(985.3,SITEIEN,0)) S VISN=$P(^MPI(985.3,SITEIEN,0),"^",3) Q:VISN=""
"RTN","MPIMDS01",157,0)
 .S SSN="" F  S SSN=$O(^XTMP("MPIM","DS SITE",SITEIEN,SSN)) Q:SSN=""  D
"RTN","MPIMDS01",158,0)
 ..I '$D(BRKOUT(VISN,SITENM)) S BRKOUT(VISN,SITENM)=0
"RTN","MPIMDS01",159,0)
 ..S BRKOUT(VISN,SITENM)=BRKOUT(VISN,SITENM)+1
"RTN","MPIMDS01",160,0)
 ;
"RTN","MPIMDS01",161,0)
 W !!,"Dup SSN totals by VISN/Site:",!,"----------------------------"
"RTN","MPIMDS01",162,0)
 S VISN=0 F  S VISN=$O(BRKOUT(VISN)) Q:'VISN  D
"RTN","MPIMDS01",163,0)
 .W !!,"VISN: ",VISN
"RTN","MPIMDS01",164,0)
 .S SITENM="" F  S SITENM=$O(BRKOUT(VISN,SITENM)) Q:SITENM=""  W !?3,SITENM,?30,BRKOUT(VISN,SITENM)
"RTN","MPIMDS01",165,0)
 Q
"RTN","MPIMDS01",166,0)
 ;
"RTN","MPIMDS01",167,0)
CHKDUP ;check file ^MPI(985.32 for any entries that need to be removed
"RTN","MPIMDS01",168,0)
 K ^XTMP("MPIS","MER1","SSN TO REMOVE")
"RTN","MPIMDS01",169,0)
 S DELCNT=0
"RTN","MPIMDS01",170,0)
 S SSN="" F  S SSN=$O(^MPI(985.32,"B",SSN)) Q:SSN=""  D
"RTN","MPIMDS01",171,0)
 .S CNT=0,ICN=0
"RTN","MPIMDS01",172,0)
 .F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  S CNT=CNT+1
"RTN","MPIMDS01",173,0)
 .I CNT<2 D
"RTN","MPIMDS01",174,0)
 ..S DELCNT=DELCNT+1
"RTN","MPIMDS01",175,0)
 ..S ^XTMP("MPIS","MER1","SSN TO REMOVE",SSN)=""
"RTN","MPIMDS01",176,0)
 S ^XTMP("MPIS","SR1","@@","TOT SSN DUP REMOVED FROM 985.32")=DELCNT
"RTN","MPIMDS01",177,0)
 I DELCNT=0 G SAVEPAR
"RTN","MPIMDS01",178,0)
 ;
"RTN","MPIMDS01",179,0)
 ;remove SSNs in ^XTMP("MPIS","MER1","SSN TO REMOVE" from file 985.32
"RTN","MPIMDS01",180,0)
 S SSN="" F  S SSN=$O(^XTMP("MPIS","MER1","SSN TO REMOVE",SSN)) Q:SSN=""  D
"RTN","MPIMDS01",181,0)
 .S DA=$O(^MPI(985.32,"B",SSN,0)) Q:'DA
"RTN","MPIMDS01",182,0)
 .S DIK="^MPI(985.32," D ^DIK K DIK,DA
"RTN","MPIMDS01",183,0)
 ;
"RTN","MPIMDS01",184,0)
SAVEPAR ;save totals on resolved and added dups to MPI Parameter file
"RTN","MPIMDS01",185,0)
 I '$D(ADDCNT) S ADDCNT=0  ;this would happen if call is made from DUP SSN compile
"RTN","MPIMDS01",186,0)
 ;
"RTN","MPIMDS01",187,0)
 ;
"RTN","MPIMDS01",188,0)
 I $D(^MPI(985.1,1,"STATDUP",DT,0)) D
"RTN","MPIMDS01",189,0)
 .S OLDADD=$P(^MPI(985.1,1,"STATDUP",DT,0),"^",2),OLDDEL=$P(^(0),"^",3)
"RTN","MPIMDS01",190,0)
 .S ADDCNT=ADDCNT+OLDADD,DELCNT=DELCNT+OLDDEL
"RTN","MPIMDS01",191,0)
 ;
"RTN","MPIMDS01",192,0)
 I '$D(^MPI(985.1,1,"STATDUP",DT,0)) D
"RTN","MPIMDS01",193,0)
 .S DIC="^MPI(985.1,"_1_",""STATDUP"",",DIC(0)="LZ",DIC("P")=$P($G(^DD(985.1,7.3,0)),"^",2),DA(1)=1,X=DT,DINUM=X
"RTN","MPIMDS01",194,0)
 .D ^DIC K DIC
"RTN","MPIMDS01",195,0)
 ;
"RTN","MPIMDS01",196,0)
 S IENS=DT_","_1
"RTN","MPIMDS01",197,0)
 K FDA,MPIM S FDA(985.12,IENS_",",1)=ADDCNT D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDS01",198,0)
 ;
"RTN","MPIMDS01",199,0)
 S IENS=DT_","_1
"RTN","MPIMDS01",200,0)
 K FDA,MPIM S FDA(985.12,IENS_",",2)=DELCNT D FILE^DIE("E","FDA","MPIM")
"RTN","MPIMDS01",201,0)
 Q
"RTN","MPIMDS03")
0^81^B15182357
"RTN","MPIMDS03",1,0)
MPIMDS03 ;BIR/CML-DUP SSN Compile on MPI to Populate File #985.33;8/24/02
"RTN","MPIMDS03",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**25**;30 Apr 99
"RTN","MPIMDS03",3,0)
 ;
"RTN","MPIMDS03",4,0)
 I $D(^XTMP("MPIM","DS2 COMPILE","START"))&'($D(^XTMP("MPIM","DS2 COMPILE","STOP"))) D  Q
"RTN","MPIMDS03",5,0)
 .W !!,"The compile was last started on ",$$FMTE^XLFDT(^XTMP("MPIM","DS2 COMPILE","START")),"."
"RTN","MPIMDS03",6,0)
 .W !,"That compile is either still running or has been interrupted.",!,"Please check and try again."
"RTN","MPIMDS03",7,0)
 ;
"RTN","MPIMDS03",8,0)
 I $D(^XTMP("MPIM","DS2 COMPILE","STOP")) D
"RTN","MPIMDS03",9,0)
 .W !!,"==> The Duplicate SSN Compile was last run on ",$$FMTE^XLFDT($E(^XTMP("MPIM","DS2 COMPILE","STOP"),1,12)),"."
"RTN","MPIMDS03",10,0)
 ;
"RTN","MPIMDS03",11,0)
 W !!,"This compile can take quite awhile."
"RTN","MPIMDS03",12,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you sure you want to continue"
"RTN","MPIMDS03",13,0)
 D ^DIR
"RTN","MPIMDS03",14,0)
 I +Y'=1 K DIR G QUIT
"RTN","MPIMDS03",15,0)
 ;
"RTN","MPIMDS03",16,0)
EN ;use this tag for entry for background job
"RTN","MPIMDS03",17,0)
 ;
"RTN","MPIMDS03",18,0)
 ;check to see if compile is already running
"RTN","MPIMDS03",19,0)
 I $D(^XTMP("MPIM","DS2 COMPILE","START"))&'$D(^XTMP("MPIM","DS2 COMPILE","STOP")) Q
"RTN","MPIMDS03",20,0)
 ;
"RTN","MPIMDS03",21,0)
 ;Step 1. Remove all SSNs from ^MPI(985.32 that are no longer duplicated or 
"RTN","MPIMDS03",22,0)
 ;        no longer have an ID State of Permanent or Temporary.
"RTN","MPIMDS03",23,0)
 D CHKDUP^MPISUT01
"RTN","MPIMDS03",24,0)
 ;
"RTN","MPIMDS03",25,0)
COMP ;Step 2. Compile data and set into the MPI POTENTIAL MATCH COMPILE file (#985.33)
"RTN","MPIMDS03",26,0)
 ;
"RTN","MPIMDS03",27,0)
 ;delete old compile
"RTN","MPIMDS03",28,0)
 K ^MPI(985.33) S ^MPI(985.33,0)="MPI POTENTIAL MATCH COMPILE^985.33P^"
"RTN","MPIMDS03",29,0)
 ;
"RTN","MPIMDS03",30,0)
 K ^XTMP("MPIM","DS2 COMPILE")
"RTN","MPIMDS03",31,0)
 S ^XTMP("MPIM","DS2 COMPILE","START")=$$NOW^XLFDT
"RTN","MPIMDS03",32,0)
 S ^XTMP("MPIM",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MPI DQ Data"
"RTN","MPIMDS03",33,0)
 ;
"RTN","MPIMDS03",34,0)
 S (SSNCNT,GRPID)=0
"RTN","MPIMDS03",35,0)
 S SSN="" F  S SSN=$O(^MPI(985.32,"B",SSN)) Q:SSN=""  D
"RTN","MPIMDS03",36,0)
 .S SSNCNT=SSNCNT+1 I '(SSNCNT#100) S ^XTMP("MPIM","DS2 COMPILE","CNT")=SSNCNT
"RTN","MPIMDS03",37,0)
 . ; do not include SSNs marked as CANNOT BE RESOLVED
"RTN","MPIMDS03",38,0)
 .S SSNDA=$O(^MPI(985.32,"B",SSN,0)) I $P(^MPI(985.32,SSNDA,0),"^",3)=1 Q
"RTN","MPIMDS03",39,0)
 .S GRPID=GRPID+1
"RTN","MPIMDS03",40,0)
 .S ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  D
"RTN","MPIMDS03",41,0)
 ..I '$D(^MPIVET(ICN,0)) K ^MPIVET("SSN",SSN,ICN) Q
"RTN","MPIMDS03",42,0)
 ..D SET
"RTN","MPIMDS03",43,0)
 ;
"RTN","MPIMDS03",44,0)
 I $E(IOST)="C" W !,SSNCNT," SSN dups processed."
"RTN","MPIMDS03",45,0)
 S ^XTMP("MPIM","DS2 COMPILE","TOT SSN PROCESSED")=SSNCNT
"RTN","MPIMDS03",46,0)
 ;
"RTN","MPIMDS03",47,0)
 D NOW^%DTC
"RTN","MPIMDS03",48,0)
 S ^XTMP("MPIM","DS2 COMPILE","STOP")=$E(%,1,12)
"RTN","MPIMDS03",49,0)
 K FDA,MPIMDS03 S FDA(985.1,"1,",3)=$E(%,1,12) D FILE^DIE("E","FDA","MPIMDS03")
"RTN","MPIMDS03",50,0)
 ;
"RTN","MPIMDS03",51,0)
QUIT ;
"RTN","MPIMDS03",52,0)
 K %,%I,CASE,DA,DFN,DIC,DINUM,DIR,DOB,DTCRT,DTLT,FDA,FNM,GRPID,ICN,IDSTATE,MNM
"RTN","MPIMDS03",53,0)
 K NODE,REC,SEX,SSN,SSNCNT,SSNDA,SSNTF,STATUS,SUF,SURNM,TF,TFIEN,X,Y
"RTN","MPIMDS03",54,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMDS03",55,0)
 Q
"RTN","MPIMDS03",56,0)
 ;
"RTN","MPIMDS03",57,0)
SET ;find data for all TFs for passed ICN
"RTN","MPIMDS03",58,0)
 ;get data from file 985
"RTN","MPIMDS03",59,0)
 ;ID State
"RTN","MPIMDS03",60,0)
 S IDSTATE=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMDS03",61,0)
 I IDSTATE="D" Q
"RTN","MPIMDS03",62,0)
 ;date originally created
"RTN","MPIMDS03",63,0)
 S DTCRT=$P(^MPIVET(ICN,1),"^",5)
"RTN","MPIMDS03",64,0)
 ;find Resolution Journal case (if any) for this ICN
"RTN","MPIMDS03",65,0)
 S CASE=$O(^MPI(985.2,"ICN",ICN,0)) I +CASE S CASE=$P(^MPI(985.2,CASE,0),"^")
"RTN","MPIMDS03",66,0)
 ;loop on all entries in 985.5 for each record
"RTN","MPIMDS03",67,0)
 S TF=0 F  S TF=$O(^MPI(985.5,"AM",ICN,TF)) Q:'TF  D
"RTN","MPIMDS03",68,0)
 .S TFIEN=$O(^MPI(985.5,"AM",ICN,TF,0))
"RTN","MPIMDS03",69,0)
 .S NODE=^MPI(985.5,TFIEN,0)
"RTN","MPIMDS03",70,0)
 .S DFN=$P(NODE,"^",3)  ;DFN
"RTN","MPIMDS03",71,0)
 .S NODE=$G(^MPI(985.5,TFIEN,1))
"RTN","MPIMDS03",72,0)
 .S SURNM=$P(NODE,"^",2)   ;Surname
"RTN","MPIMDS03",73,0)
 .S FNM=$P(NODE,"^",3)   ;First Name
"RTN","MPIMDS03",74,0)
 .S MNM=$P(NODE,"^",4)   ;Middle Name
"RTN","MPIMDS03",75,0)
 .S SUF=$P(NODE,"^",6)   ;Suffix
"RTN","MPIMDS03",76,0)
 .S SSNTF=$P(NODE,"^",14)   ;SSN for TF record
"RTN","MPIMDS03",77,0)
 .S DOB=$P(NODE,"^",8)   ;Date Of Birth
"RTN","MPIMDS03",78,0)
 .S SEX=$P(NODE,"^",13)   ;Sex
"RTN","MPIMDS03",79,0)
 .S DTLT=$P($G(^MPI(985.5,TFIEN,2)),"^",5)   ;Date Last Treated
"RTN","MPIMDS03",80,0)
 .S STATUS="P"   ;Status set to "PENDING"
"RTN","MPIMDS03",81,0)
 .;set data into file #985.33
"RTN","MPIMDS03",82,0)
 .S DIC="^MPI(985.33,",X=TFIEN,DIC(0)="LZ",DINUM=TFIEN D FILE^DICN S REC=+Y
"RTN","MPIMDS03",83,0)
 .S NODE=ICN_"^"_IDSTATE_"^"_DFN_"^"_SURNM_"^"_FNM_"^"_MNM_"^"_SUF_"^"_SSNTF_"^"_DOB_"^"_SEX_"^"_DTLT_"^"_DTCRT_"^"_CASE_"^"_STATUS_"^"_GRPID
"RTN","MPIMDS03",84,0)
 .S ^MPI(985.33,REC,0)=^MPI(985.33,REC,0)_"^"_NODE
"RTN","MPIMDS03",85,0)
 .;insert code here to set any needed xrefs
"RTN","MPIMDS03",86,0)
 .;S xref for Group Identifier
"RTN","MPIMDS03",87,0)
 .S ^MPI(985.33,"GRPID",GRPID,REC)=""
"RTN","MPIMDS03",88,0)
 Q
"RTN","MPIMER")
0^83^B3933318
"RTN","MPIMER",1,0)
MPIMER ;BPFO/CMC-MERGE PATIENTS FROM ICN2 TO ICN1 ;9 Apr 02
"RTN","MPIMER",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,24,31**;30 Apr 99
"RTN","MPIMER",3,0)
 ;
"RTN","MPIMER",4,0)
 ;
"RTN","MPIMER",5,0)
MERGE(ICN,ICN2,SITE) ; merge tf lists, deactivate icn2
"RTN","MPIMER",6,0)
 Q:'$D(^MPIVET(ICN))!('$D(^MPIVET(ICN2))) "-1^Missing ICN or ICN2 from MPIVET"
"RTN","MPIMER",7,0)
 ; ^ must have both ICNs to continue
"RTN","MPIMER",8,0)
 N ARR,MPITMP,IEN,CMOR,DIC,DA,DIQ,DR,ERR,TF
"RTN","MPIMER",9,0)
 S CMOR=$P($G(^MPIVET(+ICN,1)),"^",2)
"RTN","MPIMER",10,0)
 Q:CMOR="" "-1^No CMOR for ICN"
"RTN","MPIMER",11,0)
 ;I $G(SITE)="" S SITE="" ***31
"RTN","MPIMER",12,0)
 I $G(SITE)="" Q "-1^Missing SITE that sent message"
"RTN","MPIMER",13,0)
 S ERR=0
"RTN","MPIMER",14,0)
 ;ONLY DO THIS FOR THE SITE THAT SENT MERGE MSG. **31
"RTN","MPIMER",15,0)
 ;F  S SITE=$O(^MPI(985.5,"AM",ICN2,SITE)) Q:SITE=""  D
"RTN","MPIMER",16,0)
 ;.Q:SITE=CMOR
"RTN","MPIMER",17,0)
 S IEN=$O(^MPI(985.5,"AM",ICN2,SITE,""))
"RTN","MPIMER",18,0)
 S DIC="^MPI(985.5,",DR=".01;1;2;11;12;13;14;15;16;17;18;19;20;22;23;25;29"
"RTN","MPIMER",19,0)
 S DA=IEN,DIQ="MPITMP",DIQ(0)="NEI"
"RTN","MPIMER",20,0)
 D EN^DIQ1
"RTN","MPIMER",21,0)
 S ARR(1)=$G(MPITMP(985.5,IEN,11,"E")) ;SURNAME
"RTN","MPIMER",22,0)
 S ARR(2)=$G(MPITMP(985.5,IEN,12,"E")) ;FIRST
"RTN","MPIMER",23,0)
 S ARR(3)=$G(MPITMP(985.5,IEN,13,"E")) ;MIDDLE
"RTN","MPIMER",24,0)
 S ARR(4)=$G(MPITMP(985.5,IEN,14,"E")) ;PREFIX
"RTN","MPIMER",25,0)
 S ARR(5)=$G(MPITMP(985.5,IEN,15,"E")) ;SUFFIX
"RTN","MPIMER",26,0)
 S ARR(6)=$G(MPITMP(985.5,IEN,16,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIMER",27,0)
 S ARR(7)=$G(MPITMP(985.5,IEN,17,"E")) ;DOB
"RTN","MPIMER",28,0)
 S ARR(8)=$G(MPITMP(985.5,IEN,18,"E")) ;pob city
"RTN","MPIMER",29,0)
 S ARR(9)=$G(MPITMP(985.5,IEN,19,"E")) ;pob state
"RTN","MPIMER",30,0)
 S ARR(10)=$G(MPITMP(985.5,IEN,20,"E")) ;DOD
"RTN","MPIMER",31,0)
 S ARR(12)=$G(MPITMP(985.5,IEN,22,"E")) ;SEX
"RTN","MPIMER",32,0)
 S ARR(13)=$G(MPITMP(985.5,IEN,23,"E")) ;SSN
"RTN","MPIMER",33,0)
 I ARR(13)'?9N S ARR(13)="@"
"RTN","MPIMER",34,0)
 S ARR(15)=$G(MPITMP(985.5,IEN,25,"E")) ;CLAIM NUMBER
"RTN","MPIMER",35,0)
 S ARR("DLT")=$G(MPITMP(985.5,IEN,29,"E")) ; DATE OF LAST TREATMENT
"RTN","MPIMER",36,0)
 S ARR("DFN")=$G(MPITMP(985.5,IEN,2,"E")) ;DFN
"RTN","MPIMER",37,0)
 S TF=$G(MPITMP(985.5,IEN,.01,"I")) ;SITE
"RTN","MPIMER",38,0)
 S TF=$P($$NNT^XUAF4(TF),"^",2)
"RTN","MPIMER",39,0)
 S ERR=$$UPDATE^MPIUTL4(ICN,TF,.ARR)
"RTN","MPIMER",40,0)
 Q ERR_" FROM MERGE CALL"
"RTN","MPIMHL")
0^84^B874338
"RTN","MPIMHL",1,0)
MPIMHL ;BIOFO/DLR - HL7 messaging statistics utility ; 06/06/03
"RTN","MPIMHL",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**19**;30 Apr 99
"RTN","MPIMHL",3,0)
HLLOG(TYPE,LOC) ;
"RTN","MPIMHL",4,0)
 N MPIDT
"RTN","MPIMHL",5,0)
 S ^XTMP("MPIHL",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MPI HL7 Messaging Statistics"
"RTN","MPIMHL",6,0)
 S MPIDT=$P($$NOW^XLFDT,".")
"RTN","MPIMHL",7,0)
 L +^XTMP("MPIHL",$G(MPIDT),$G(TYPE),$G(LOC)):5
"RTN","MPIMHL",8,0)
 S ^XTMP("MPIHL",$G(MPIDT),$G(TYPE),$G(LOC))=$G(^XTMP("MPIHL",$G(MPIDT),$G(TYPE),$G(LOC)))+1
"RTN","MPIMHL",9,0)
 L -^XTMP("MPIHL",$G(MPIDT),$G(TYPE),$G(LOC))
"RTN","MPIMHL",10,0)
 Q
"RTN","MPIMMONT")
0^89^B9876219
"RTN","MPIMMONT",1,0)
MPIMMONT ;ALS,CML,CMC,PTD-MONITOR MPI FOR NEW SITES FILING ENTRIES ;03/30/99
"RTN","MPIMMONT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**##**;30 Apr 99
"RTN","MPIMMONT",3,0)
EN ;Entry point
"RTN","MPIMMONT",4,0)
 S INDX=1,IEN=""
"RTN","MPIMMONT",5,0)
 F  S IEN=$O(^MPIVET("APC",IEN)) Q:IEN=""  D
"RTN","MPIMMONT",6,0)
 .I '$D(^MPI(985.3,"B",IEN)) D FILE
"RTN","MPIMMONT",7,0)
 S IEN=""
"RTN","MPIMMONT",8,0)
 F  S IEN=$O(^MPI(985.5,"B",IEN)) Q:IEN=""  D
"RTN","MPIMMONT",9,0)
 .I '$D(^MPI(985.3,"B",IEN)) D FILE
"RTN","MPIMMONT",10,0)
 I $D(LOCARRAY) D BULLET
"RTN","MPIMMONT",11,0)
 ;
"RTN","MPIMMONT",12,0)
 D IPCHK ;check if tcp/ip addresses changed in 870
"RTN","MPIMMONT",13,0)
 D SNCHK ;check if station number is correct in 985.3
"RTN","MPIMMONT",14,0)
 ;
"RTN","MPIMMONT",15,0)
 ;Set monitor end date/time
"RTN","MPIMMONT",16,0)
 D NOW^%DTC
"RTN","MPIMMONT",17,0)
 K FDA S FDA(985.1,"1,",4)=$E(%,1,12) D FILE^DIE("E","FDA","MPIMMONT")
"RTN","MPIMMONT",18,0)
 ;
"RTN","MPIMMONT",19,0)
QUIT ;
"RTN","MPIMMONT",20,0)
 K %,COUNT,DA,DIC,DIE,DINUM,DR,FDA,I,IEN,INDX,INST,INSTNAME,INSTNUM,INSTVISN,JJ
"RTN","MPIMMONT",21,0)
 K LOCARRAY,MPIMTXT,NEW,STNUM,X,XMDUZ,XMKK,XMLOCK,XMR,XMSUB,XMT,XMTEXT,XMY,XMZ,Y
"RTN","MPIMMONT",22,0)
 Q
"RTN","MPIMMONT",23,0)
 ;
"RTN","MPIMMONT",24,0)
FILE ;
"RTN","MPIMMONT",25,0)
 S DIC="^MPI(985.3,",X=IEN,DIC(0)="LZ",DINUM=IEN
"RTN","MPIMMONT",26,0)
 D FILE^DICN
"RTN","MPIMMONT",27,0)
 S NEW=+Y
"RTN","MPIMMONT",28,0)
 N INST,INSTNAME,INSTNUM,INSTVISN,JJ,PARENT S INST=$$NNT^XUAF4(IEN) Q:INST=""
"RTN","MPIMMONT",29,0)
 S INSTNAME=$P(INST,"^",1),INSTNUM=$P(INST,"^",2),INSTVISN=""
"RTN","MPIMMONT",30,0)
 D PARENT^XUAF4("PARENT","`"_IEN,"VISN")
"RTN","MPIMMONT",31,0)
 I $D(PARENT) S JJ=$O(PARENT("P",0)) S INSTVISN=$P($P($G(PARENT("P",JJ)),"^")," ",2)
"RTN","MPIMMONT",32,0)
 L +^MPI(985.3,+NEW):10
"RTN","MPIMMONT",33,0)
 S DIE="^MPI(985.3,",DA=NEW,DR="1///^S X=INSTNUM;2///^S X=INSTVISN"
"RTN","MPIMMONT",34,0)
 D ^DIE K DA,DIE,DR
"RTN","MPIMMONT",35,0)
 L -^MPI(985.3,+NEW)
"RTN","MPIMMONT",36,0)
 S LOCARRAY(INDX)=INSTNUM_"   "_INSTNAME
"RTN","MPIMMONT",37,0)
 S INDX=INDX+1
"RTN","MPIMMONT",38,0)
 Q
"RTN","MPIMMONT",39,0)
 ;
"RTN","MPIMMONT",40,0)
BULLET ;
"RTN","MPIMMONT",41,0)
 K MPIMTXT
"RTN","MPIMMONT",42,0)
 S MPIMTXT(1)="The MPI has received new entries from:"
"RTN","MPIMMONT",43,0)
 S I=0,COUNT=2
"RTN","MPIMMONT",44,0)
 F  S I=$O(LOCARRAY(I)) Q:I=""  S MPIMTXT(COUNT)=LOCARRAY(I)_" ",COUNT=COUNT+1
"RTN","MPIMMONT",45,0)
 S XMSUB="NEW SITE FOUND ON MPI"
"RTN","MPIMMONT",46,0)
 S XMTEXT="MPIMTXT("
"RTN","MPIMMONT",47,0)
 S XMY("G.MPI MONITOR@DOMAIN.EXT")=""
"RTN","MPIMMONT",48,0)
 S XMY("G.MPI MONITOR")=""
"RTN","MPIMMONT",49,0)
 S XMDUZ="MPI MONITOR"
"RTN","MPIMMONT",50,0)
 D ^XMD
"RTN","MPIMMONT",51,0)
 Q
"RTN","MPIMMONT",52,0)
 ;
"RTN","MPIMMONT",53,0)
 ;IPCHK & IP modules will be removed prior to becoming Class I
"RTN","MPIMMONT",54,0)
IPCHK ;check if IP addresses have changed in 870
"RTN","MPIMMONT",55,0)
 N NODE,IP,TCP,ND2,IEN,NAME
"RTN","MPIMMONT",56,0)
 S IEN=0
"RTN","MPIMMONT",57,0)
 F  S IEN=$O(^DIZ(200001,IEN)) Q:IEN'?.N  D
"RTN","MPIMMONT",58,0)
 .S NODE=$P($G(^DIZ(200001,IEN,0)),"^")
"RTN","MPIMMONT",59,0)
 .S IP=$P($G(^DIZ(200001,IEN,0)),"^",2)
"RTN","MPIMMONT",60,0)
 .S TCP=$P(^HLCS(870,NODE,400),"^")
"RTN","MPIMMONT",61,0)
 .S NAME=$P(^HLCS(870,NODE,0),"^")
"RTN","MPIMMONT",62,0)
 .I IP'=TCP S $P(^DIZ(200001,IEN,0),"^",2)=TCP D IP(NODE,TCP,NAME)
"RTN","MPIMMONT",63,0)
 Q
"RTN","MPIMMONT",64,0)
 ;
"RTN","MPIMMONT",65,0)
IP(DA,X,NODE) ;
"RTN","MPIMMONT",66,0)
 ;DA - IEN IN 870
"RTN","MPIMMONT",67,0)
 ;X - NEW TCP/IP ADDRESS
"RTN","MPIMMONT",68,0)
 ;NODE - LINK NAME
"RTN","MPIMMONT",69,0)
 N XMDUZ,XMSUB,IP,MPI,XMY,XMTEXT
"RTN","MPIMMONT",70,0)
 S IP=X
"RTN","MPIMMONT",71,0)
 S XMDUZ="MPI AUSTIN"
"RTN","MPIMMONT",72,0)
 S XMSUB=NODE_" TCP/IP ADDRESS CHANGE"
"RTN","MPIMMONT",73,0)
 S XMY("G.MPI MONITOR@DOMAIN.EXT")="",XMTEXT="MPI(1,"
"RTN","MPIMMONT",74,0)
 S MPI(1,1)="The TCP/IP address for link "_NODE
"RTN","MPIMMONT",75,0)
 S MPI(1,2)="has changed to: "_IP
"RTN","MPIMMONT",76,0)
 D ^XMD
"RTN","MPIMMONT",77,0)
 Q
"RTN","MPIMMONT",78,0)
 ;
"RTN","MPIMMONT",79,0)
SNCHK ;Check if STATION NUMBER in 985.3 matches INSTITUTION (#4) file
"RTN","MPIMMONT",80,0)
 N IEN,INSTNUM,STNUM
"RTN","MPIMMONT",81,0)
 S IEN=0
"RTN","MPIMMONT",82,0)
 F  S IEN=$O(^MPI(985.3,IEN)) Q:'IEN  D
"RTN","MPIMMONT",83,0)
 .S STNUM=$P($G(^MPI(985.3,IEN,0)),"^",2)
"RTN","MPIMMONT",84,0)
 .S INSTNUM=$$GET1^DIQ(4,+IEN_",",99)
"RTN","MPIMMONT",85,0)
 .I STNUM'=INSTNUM D
"RTN","MPIMMONT",86,0)
 ..L +^MPI(985.3,+IEN):10
"RTN","MPIMMONT",87,0)
 ..S DIE="^MPI(985.3,",DA=+IEN,DR="1///^S X=INSTNUM"
"RTN","MPIMMONT",88,0)
 ..D ^DIE K DA,DIE,DR
"RTN","MPIMMONT",89,0)
 ..L -^MPI(985.3,+IEN)
"RTN","MPIMMONT",90,0)
 Q
"RTN","MPIMMSG")
0^233^B5329481
"RTN","MPIMMSG",1,0)
MPIMMSG ;BIR/CML-Check Outstanding HL Messaging for an ICN/SSN ;07/27/05
"RTN","MPIMMSG",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**35**;30 Apr 99
"RTN","MPIMMSG",3,0)
 ;
"RTN","MPIMMSG",4,0)
 S $P(LN,"-",81)=""
"RTN","MPIMMSG",5,0)
 W !!,"This option checks to see if responses to any of the following remote update"
"RTN","MPIMMSG",6,0)
 W !,"options are still pending for a specified ICN/SSN:"
"RTN","MPIMMSG",7,0)
 W !!,"Msg"
"RTN","MPIMMSG",8,0)
 W !,"Type  OPTION",!,LN
"RTN","MPIMMSG",9,0)
 W !,"A19   (RE)  Reestablish or Synchronize an ICN on MPI"
"RTN","MPIMMSG",10,0)
 W !,"A24   (DUP) Resolve MPI Duplicate"
"RTN","MPIMMSG",11,0)
 W !,"A43   (MP)  Mismatched Patient Record Resolution"
"RTN","MPIMMSG",12,0)
 W !,"A43   (TR)  Transfer ICN for Duplicate Site Record"
"RTN","MPIMMSG",13,0)
 W !,"M05   (BC)  Broadcast TF Update from MPI",!
"RTN","MPIMMSG",14,0)
 ;
"RTN","MPIMMSG",15,0)
ASK S QFLG=0
"RTN","MPIMMSG",16,0)
 S ICN=$$ASKPT^MPIRUTL() I +$G(ICN)'>0 G QUIT
"RTN","MPIMMSG",17,0)
 ;identify potential duplicates for this ICN
"RTN","MPIMMSG",18,0)
 K ARR,ERR D DUPCHK^MPIMDMA1(.ARR,.ERR,ICN)
"RTN","MPIMMSG",19,0)
 I $D(ERR) D  I QFLG G ASK
"RTN","MPIMMSG",20,0)
 .I ERR=1 W !?3,"This ICN does not exist on the MPI." S QFLG=1 Q
"RTN","MPIMMSG",21,0)
 .S ARR(0)=0,ARR(ICN)=""
"RTN","MPIMMSG",22,0)
 I ARR(0)=1 D
"RTN","MPIMMSG",23,0)
 .W !!,"Your selection has identified the following duplicate ICNs:"
"RTN","MPIMMSG",24,0)
 .S LP=0 F  S LP=$O(ARR(LP)) Q:'LP  D
"RTN","MPIMMSG",25,0)
 ..S SSN=$P(^MPIVET(LP,0),"^",14)
"RTN","MPIMMSG",26,0)
 ..W !?3,"ICN: ",LP,"  SSN:",SSN
"RTN","MPIMMSG",27,0)
 ;
"RTN","MPIMMSG",28,0)
 K TYPE F LP="MPIA19","MPIM05","MPIA24","MPIA43" S TYPE(LP)=""
"RTN","MPIMMSG",29,0)
 ;
"RTN","MPIMMSG",30,0)
 S (GOT,ICN)=0 F  S ICN=$O(ARR(ICN)) Q:'ICN  D
"RTN","MPIMMSG",31,0)
 .W !!,"ICN ",ICN,":",!,"---------------"
"RTN","MPIMMSG",32,0)
 .S TYPE="" F  S TYPE=$O(TYPE(TYPE)) Q:TYPE=""  D
"RTN","MPIMMSG",33,0)
 ..S SUB=TYPE_"%"_ICN
"RTN","MPIMMSG",34,0)
 ..I $D(^XTMP(SUB,0)) S SENT=$$FMTE^XLFDT($P(^XTMP(SUB,0),"^",2)) D
"RTN","MPIMMSG",35,0)
 ...S SITE=0 F  S SITE=$O(^XTMP(SUB,SITE)) Q:'SITE  D
"RTN","MPIMMSG",36,0)
 ....K SITEARR D F4^XUAF4(SITE,.SITEARR)
"RTN","MPIMMSG",37,0)
 ....S MSG=$P(TYPE,"MPI",2)
"RTN","MPIMMSG",38,0)
 ....W !,MSG," msg sent ",SENT," to ",SITEARR("NAME")," awaiting response." S GOT=1
"RTN","MPIMMSG",39,0)
 ;
"RTN","MPIMMSG",40,0)
 I 'GOT W !,"No messages are awaiting a response for this ICN."
"RTN","MPIMMSG",41,0)
 ;
"RTN","MPIMMSG",42,0)
 W !! S DIR(0)="E" D ^DIR K DIR
"RTN","MPIMMSG",43,0)
 ;
"RTN","MPIMMSG",44,0)
QUIT ;
"RTN","MPIMMSG",45,0)
 K ARR,ERR,GOT,ICN,LN,LP,MSG,QFLG,SENT,SITE,SITEARR,SSN,SUB,TYPE
"RTN","MPIMMSG",46,0)
 Q
"RTN","MPIMPDAT")
0^91^B42718879
"RTN","MPIMPDAT",1,0)
MPIMPDAT ;BIR/CML - (MPI ROUTINE) Search for MPI Patient Data ; 06/06/02
"RTN","MPIMPDAT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**7,15,21,20,24,36**;30 Apr 99
"RTN","MPIMPDAT",3,0)
 ;
"RTN","MPIMPDAT",4,0)
 ;Print Dup SSN Report by Patient
"RTN","MPIMPDAT",5,0)
 ;
"RTN","MPIMPDAT",6,0)
 W !,"Search for MPI Patient Data." K DIRUT
"RTN","MPIMPDAT",7,0)
ASK ;Ask for PATIENT
"RTN","MPIMPDAT",8,0)
 K ICN,SSN
"RTN","MPIMPDAT",9,0)
 I $D(DIRUT) G QUIT
"RTN","MPIMPDAT",10,0)
 ;
"RTN","MPIMPDAT",11,0)
 W ! K ICN
"RTN","MPIMPDAT",12,0)
 S DIC="^MPIVET(",DIC(0)="QEAM",DIC("A")="Select PATIENT (Use ICN, SSN, or SURNAME): "
"RTN","MPIMPDAT",13,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPIMPDAT",14,0)
 S ICN=+Y
"RTN","MPIMPDAT",15,0)
 S ^XTMP("MPIRUTL_PROMPT","DEFAULT",DUZ)="I."_ICN
"RTN","MPIMPDAT",16,0)
 D PDAT(ICN)
"RTN","MPIMPDAT",17,0)
 ;
"RTN","MPIMPDAT",18,0)
 G ASK
"RTN","MPIMPDAT",19,0)
 ;
"RTN","MPIMPDAT",20,0)
QUIT ;
"RTN","MPIMPDAT",21,0)
 K ^TMP("MPIMPDAT",$J)
"RTN","MPIMPDAT",22,0)
 K %,AF,AF1,AFNAME,AFSTA,CASE,CASEIEN,CLAIM,CMOR,DIR,DIRUT,DOB,DOD,DQFLG,GOT,FNAME,ICN,LN,LNAME,MNAME,CNT,MBI
"RTN","MPIMPDAT",23,0)
 K NAME,NODE,PAT,PC1,PG,PIDARR,PRTDT,SEX,SITENM,SSN,TYPE,Y,SITENUM,MOM,POBC,POBS,POBSDA,NOIS,MPIR,STATUS,SUF,USER,USERNM
"RTN","MPIMPDAT",24,0)
 K IDST,QFLG,OMIT
"RTN","MPIMPDAT",25,0)
 Q
"RTN","MPIMPDAT",26,0)
 ;
"RTN","MPIMPDAT",27,0)
PDAT(PID) ;parameter passed can be ICN or SSN
"RTN","MPIMPDAT",28,0)
 ;^TMP("MPIMPDAT",$J,ICN)=SSN_"^"_LNAME_","_FNAME_" "_MNAME_"^"_DOB_"^"_CMOR_"^"_SEX_"^"_CLAIM_"^"_DOD_"^"_MOM_"^"_POBC_"^"_POBS_"^"_MIB_"^"_IDST
"RTN","MPIMPDAT",29,0)
 ;^TMP("MPIMPDAT",$J,ICN,AFNAME)=AFSTA
"RTN","MPIMPDAT",30,0)
 ;
"RTN","MPIMPDAT",31,0)
 N AF,AF1,AFNAME,AFSTA,CLAIM,CMOR,DIR,DOB,FNAME,LN,LNAME,MBI,MNAME,CNT,ICN,SSN
"RTN","MPIMPDAT",32,0)
 N NAME,NODE,PAT,PC1,PG,PRTDT,SEX,SITENM,TYPE,SITENUM,MOM,POBC,POBS,SUF
"RTN","MPIMPDAT",33,0)
 N ALIAS,ALN,AFN,AMN,ASUF,ALNM,IDST,QFLG
"RTN","MPIMPDAT",34,0)
 ;
"RTN","MPIMPDAT",35,0)
 K ^TMP("MPIMPDAT",$J),PIDARR
"RTN","MPIMPDAT",36,0)
 ;
"RTN","MPIMPDAT",37,0)
 I '$D(^MPIVET(PID))&'$O(^MPIVET("SSN",PID,0)) W !!,"No MPI entry matches this data." Q
"RTN","MPIMPDAT",38,0)
 I $P($G(^MPIVET(PID,"ID_STATE")),"^")="D" D  Q:QFLG
"RTN","MPIMPDAT",39,0)
 .S QFLG=0
"RTN","MPIMPDAT",40,0)
 .I '$D(^MPIVET(PID,1)) W !!,"<< This is a DEACTIVATED ICN with no data. >>" S QFLG=1 Q
"RTN","MPIMPDAT",41,0)
 .W !!,"<< This is a DEACTIVATED ICN! >>" H 2
"RTN","MPIMPDAT",42,0)
 ;
"RTN","MPIMPDAT",43,0)
 ;check here to catch an ICN that was inactivated in the past and doesn't yet have an ID State
"RTN","MPIMPDAT",44,0)
 ;this check is necessary until all ICNs have an ID State
"RTN","MPIMPDAT",45,0)
 I $D(^MPIVET(PID,0)),'$D(^MPIVET(PID,1)) W !!,"<< This is an old INACTIVATED ICN that has not yet been DEACTIVATED. >>" Q
"RTN","MPIMPDAT",46,0)
 ;
"RTN","MPIMPDAT",47,0)
 I $D(^MPIVET(PID)) S ICN=PID,PIDARR(ICN)="" G PRT
"RTN","MPIMPDAT",48,0)
 S SSN=PID,(CNT,ICN)=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  D
"RTN","MPIMPDAT",49,0)
 .I $G(OMIT)=1,$P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" Q
"RTN","MPIMPDAT",50,0)
 .S PIDARR(ICN)="",CNT=CNT+1
"RTN","MPIMPDAT",51,0)
 ;
"RTN","MPIMPDAT",52,0)
PRT ;
"RTN","MPIMPDAT",53,0)
 S $P(LN,"=",81)=""
"RTN","MPIMPDAT",54,0)
 D NOW^%DTC S PRTDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","MPIMPDAT",55,0)
 S ICN=0 F  S ICN=$O(PIDARR(ICN)) Q:'ICN  D  Q:$D(DIRUT)
"RTN","MPIMPDAT",56,0)
 .D SET
"RTN","MPIMPDAT",57,0)
 .I '$D(^TMP("MPIMPDAT",$J,ICN)) W !!,"No data found for ICN ",ICN,"." Q
"RTN","MPIMPDAT",58,0)
 .S NODE=^TMP("MPIMPDAT",$J,ICN)
"RTN","MPIMPDAT",59,0)
 .S SSN=$P(NODE,"^"),NAME=$P(NODE,"^",2),DOB=$P(NODE,"^",3),CMOR=$P(NODE,"^",4),SEX=$P(NODE,"^",5)
"RTN","MPIMPDAT",60,0)
 .S CLAIM=$P(NODE,"^",6),DOD=$P(NODE,"^",7),MOM=$P(NODE,"^",8),POBC=$P(NODE,"^",9),POBS=$P(NODE,"^",10),MBI=$P(NODE,"^",11),IDST=$P(NODE,"^",12)
"RTN","MPIMPDAT",61,0)
 .I CMOR="" S CMOR="UNKNOWN"
"RTN","MPIMPDAT",62,0)
 .D HDR
"RTN","MPIMPDAT",63,0)
 .S GOT=0 I $D(^MPI(985.2,"ICN",ICN)) D
"RTN","MPIMPDAT",64,0)
 ..S CASEIEN=$O(^MPI(985.2,"ICN",ICN,0)),CASE=$P(^MPI(985.2,CASEIEN,0),"^"),NOIS=$P(^(0),"^",6)
"RTN","MPIMPDAT",65,0)
 ..S STATUS=$P($G(^MPI(985.2,CASEIEN,0)),"^",3) I STATUS="O" S GOT=1 D
"RTN","MPIMPDAT",66,0)
 ...S USER=$P($G(^MPI(985.2,CASEIEN,0)),"^",2),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMPDAT",67,0)
 ...W !!,"<<This ICN is actively being worked on - "
"RTN","MPIMPDAT",68,0)
 ...I NOIS]"" W "NOIS #",NOIS,"/"
"RTN","MPIMPDAT",69,0)
 ...W "Case #",CASE,?78,">>"
"RTN","MPIMPDAT",70,0)
 ...W !,"<<Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132),?78,">>"
"RTN","MPIMPDAT",71,0)
 .I $D(^MPI(985.25,ICN,0)),'GOT D
"RTN","MPIMPDAT",72,0)
 ..S USER=$P($G(^MPI(985.25,ICN,0)),"^",3),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPIMPDAT",73,0)
 ..W !!,"<<THIS ICN IS CURRENTLY CHECKED OUT>>"
"RTN","MPIMPDAT",74,0)
 ..W !,"Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPIMPDAT",75,0)
 .W !!?2,"ICN    : ",ICN,?40,"CMOR: ",CMOR
"RTN","MPIMPDAT",76,0)
 .W !?2,"Name   : ",NAME
"RTN","MPIMPDAT",77,0)
 .W !?2,"SSN    : ",SSN
"RTN","MPIMPDAT",78,0)
 .W !?2,"DOB    : ",DOB I DOD]"" W ?31,"Date of Death: ",DOD
"RTN","MPIMPDAT",79,0)
 .W !?2,"MBI    : ",MBI
"RTN","MPIMPDAT",80,0)
 .W !?2,"Sex    : ",SEX
"RTN","MPIMPDAT",81,0)
 .I CLAIM]"" W !?2,"Claim #: ",CLAIM
"RTN","MPIMPDAT",82,0)
 .I POBC]"" W !?2,"Place of Birth City : ",POBC
"RTN","MPIMPDAT",83,0)
 .I POBS]"" W !?2,"Place of Birth State: ",POBS
"RTN","MPIMPDAT",84,0)
 .I MOM]"" W !?2,"Mother's Maiden Name: ",MOM
"RTN","MPIMPDAT",85,0)
 .I $O(^MPIVET(ICN,50,0)) D
"RTN","MPIMPDAT",86,0)
 ..W !?2,"Alias  :"
"RTN","MPIMPDAT",87,0)
 ..S ALIAS=0 F  S ALIAS=$O(^MPIVET(ICN,50,ALIAS)) Q:'ALIAS  D
"RTN","MPIMPDAT",88,0)
 ...S NODE=^MPIVET(ICN,50,ALIAS,0),ALN=$P(NODE,"^"),AFN=$P(NODE,"^",2),AMN=$P(NODE,"^",3),ASUF=$P(NODE,"^",5)
"RTN","MPIMPDAT",89,0)
 ...S ALNM=ALN_","_AFN_" "_AMN_" "_ASUF
"RTN","MPIMPDAT",90,0)
 ...W !?4,ALNM
"RTN","MPIMPDAT",91,0)
 .W !!?2,"Treating Facilities:",!?2,"--------------------"
"RTN","MPIMPDAT",92,0)
 .S SITENM="" F  S SITENM=$O(^TMP("MPIMPDAT",$J,ICN,SITENM)) Q:SITENM=""  D
"RTN","MPIMPDAT",93,0)
 ..S SITENUM=^TMP("MPIMPDAT",$J,ICN,SITENM)
"RTN","MPIMPDAT",94,0)
 ..W !?4,SITENUM,?10,"- ",SITENM
"RTN","MPIMPDAT",95,0)
 .W !!
"RTN","MPIMPDAT",96,0)
 .I '$D(DQFLG) S DIR(0)="E" D ^DIR K DIR
"RTN","MPIMPDAT",97,0)
 I $D(DQFLG) I $G(CNT)>1 W !!,"<< ",CNT," ICNs found - scroll back for data. >>"
"RTN","MPIMPDAT",98,0)
 K ^TMP("MPIMPDAT",$J)
"RTN","MPIMPDAT",99,0)
 Q
"RTN","MPIMPDAT",100,0)
 ;
"RTN","MPIMPDAT",101,0)
HDR ;
"RTN","MPIMPDAT",102,0)
 I '$D(MPIR) W @IOF
"RTN","MPIMPDAT",103,0)
 W !,"MPI Patient Data Search - For : << ",ICN," >>    ID State: ",IDST
"RTN","MPIMPDAT",104,0)
 W !,"Printed ",PRTDT,!,LN
"RTN","MPIMPDAT",105,0)
 Q
"RTN","MPIMPDAT",106,0)
 ;
"RTN","MPIMPDAT",107,0)
SET ;find data
"RTN","MPIMPDAT",108,0)
 S NODE=^MPIVET(ICN,0),LNAME=$P(NODE,"^",2),FNAME=$P(NODE,"^",3),MOM=$P(NODE,"^",7)
"RTN","MPIMPDAT",109,0)
 S POBC=$P(NODE,"^",9),POBS=$P(NODE,"^",10) I +POBS D
"RTN","MPIMPDAT",110,0)
 .S POBS=$P($G(^DIC(5,POBS,0)),"^") I POBS="" S POBS="UNKNOWN"
"RTN","MPIMPDAT",111,0)
 S MNAME=$P(NODE,"^",4),SUF=$P(NODE,"^",6),SEX=$P(NODE,"^",13)
"RTN","MPIMPDAT",112,0)
 S DOB=$P(NODE,"^",8) I DOB'="" S DOB=$$FMTE^XLFDT(DOB)
"RTN","MPIMPDAT",113,0)
 S DOD=$P(NODE,"^",11) I DOD'="" S DOD=$$FMTE^XLFDT(DOD)
"RTN","MPIMPDAT",114,0)
 S SSN=$P(NODE,"^",14)  I SSN="" S SSN="UNKNOWN"
"RTN","MPIMPDAT",115,0)
 S CLAIM=$P($G(^MPIVET(ICN,1)),"^"),CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIMPDAT",116,0)
 I CMOR'="" S CMOR=$P($$NS^XUAF4(CMOR),"^")
"RTN","MPIMPDAT",117,0)
 S MBI=$P($G(^MPIVET(ICN,2)),"^",10) S MBI=$S(MBI="Y":"YES",1:"NO")
"RTN","MPIMPDAT",118,0)
 S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^"),IDST=$S(IDST="P":"PERMANENT",IDST="T":"TEMPORARY",IDST="D":"DEACTIVATED",1:"NOT DEFINED")
"RTN","MPIMPDAT",119,0)
 S ^TMP("MPIMPDAT",$J,ICN)=SSN_"^"_LNAME_","_FNAME_" "_MNAME_" "_SUF_"^"_DOB_"^"_CMOR_"^"_SEX_"^"_CLAIM_"^"_DOD_"^"_MOM_"^"_POBC_"^"_POBS_"^"_MBI_"^"_IDST
"RTN","MPIMPDAT",120,0)
 S AF=0 F  S AF=$O(^MPI(985.5,"AM",ICN,AF)) Q:'AF  D
"RTN","MPIMPDAT",121,0)
 .S AF1=$$NS^XUAF4(AF),AFNAME=$P(AF1,"^"),AFSTA=$P(AF1,"^",2)
"RTN","MPIMPDAT",122,0)
 .S ^TMP("MPIMPDAT",$J,ICN,AFNAME)=AFSTA
"RTN","MPIMPDAT",123,0)
 Q
"RTN","MPIMPDAT",124,0)
 ;
"RTN","MPIMPDAT",125,0)
DUPLK ;do PDAT call for dup SSNs
"RTN","MPIMPDAT",126,0)
 K ANS,GOT,ICN,IDST,OMIT,NODE,LNAME,FNAME,MNAME,SUF,NAME
"RTN","MPIMPDAT",127,0)
 W !!,"Enter duplicated SSN: " R ANS:DTIME
"RTN","MPIMPDAT",128,0)
 I "^"[ANS K ANS Q
"RTN","MPIMPDAT",129,0)
 ;
"RTN","MPIMPDAT",130,0)
 I '$O(^MPIVET("SSN",ANS,0)) W " ??" G DUPLK
"RTN","MPIMPDAT",131,0)
 ;
"RTN","MPIMPDAT",132,0)
 ;display ICNs
"RTN","MPIMPDAT",133,0)
 W !!,"This SSN is defined for the following ICN(s):"
"RTN","MPIMPDAT",134,0)
 S (GOT,ICN)=0
"RTN","MPIMPDAT",135,0)
 F  S ICN=$O(^MPIVET("SSN",ANS,ICN)) Q:'ICN  D
"RTN","MPIMPDAT",136,0)
 .S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIMPDAT",137,0)
 .I IDST="D" S GOT=1
"RTN","MPIMPDAT",138,0)
 .S IDST=$S(IDST="P":"PERMANENT",IDST="T":"TEMPORARY",IDST="D":"DEACTIVATED",1:"NOT DEFINED")
"RTN","MPIMPDAT",139,0)
 .S NODE=^MPIVET(ICN,0),LNAME=$P(NODE,"^",2),FNAME=$P(NODE,"^",3),MNAME=$P(NODE,"^",4),SUF=$P(NODE,"^",6)
"RTN","MPIMPDAT",140,0)
 .S NAME=LNAME_","_FNAME_" "_MNAME_" "_SUF
"RTN","MPIMPDAT",141,0)
 .W !?3,ICN,"  ",NAME,?46,"ID State: ",IDST
"RTN","MPIMPDAT",142,0)
 ;
"RTN","MPIMPDAT",143,0)
 I 'GOT S DIR(0)="E" W !! D ^DIR K DIR I 'Y  G QUIT
"RTN","MPIMPDAT",144,0)
 I 'GOT S DQFLG=1 K GOT,OMIT D PDAT(ANS) G DUPLK
"RTN","MPIMPDAT",145,0)
 ;if deactivated ICNs are found, give user the choice to omit them from the display
"RTN","MPIMPDAT",146,0)
 W !
"RTN","MPIMPDAT",147,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you want to include the DEACTIVATED ICN(s) in the display"
"RTN","MPIMPDAT",148,0)
 D ^DIR K DIR
"RTN","MPIMPDAT",149,0)
 I $D(DIRUT) G QUIT
"RTN","MPIMPDAT",150,0)
 I +Y=0 S OMIT=1
"RTN","MPIMPDAT",151,0)
 K GOT S DQFLG=1 D PDAT(ANS)
"RTN","MPIMPDAT",152,0)
 G DUPLK
"RTN","MPIMSFS")
0^113^B10722169
"RTN","MPIMSFS",1,0)
MPIMSFS ;BIR/PTD-NUMBER OF SHARED PATIENTS BETWEEN 2 SITES ;06/27/02
"RTN","MPIMSFS",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**13**;30 Apr 99
"RTN","MPIMSFS",3,0)
 ;
"RTN","MPIMSFS",4,0)
 S QFLG=1
"RTN","MPIMSFS",5,0)
 W !!,"This option displays the shared patient totals between two"
"RTN","MPIMSFS",6,0)
 W !,"facilities for a selected date range.  The data is from the"
"RTN","MPIMSFS",7,0)
 W !,"MPI SHARED TREATING FACILITY STATS (#985.34) file."
"RTN","MPIMSFS",8,0)
 ;
"RTN","MPIMSFS",9,0)
 I '$O(^MPI(985.34,0)) W !!,"There is no data in the MPI SHARED TREATING FACILITY STATS (#985.34) file.",! G QUIT
"RTN","MPIMSFS",10,0)
 ;
"RTN","MPIMSFS",11,0)
SITE ;Pick two sites
"RTN","MPIMSFS",12,0)
 W ! S DIC="^DIC(4,",DIC(0)="QEAM",DIC("A")="Select first facility: "
"RTN","MPIMSFS",13,0)
 S DIC("S")="I $D(^MPI(985.3,""B"",+Y))"
"RTN","MPIMSFS",14,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPIMSFS",15,0)
 S ST1IEN=+Y
"RTN","MPIMSFS",16,0)
 W ! S DIC="^DIC(4,",DIC(0)="QEAM",DIC("A")="Select second facility: "
"RTN","MPIMSFS",17,0)
 S DIC("S")="I $D(^MPI(985.3,""B"",+Y))"
"RTN","MPIMSFS",18,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPIMSFS",19,0)
 S ST2IEN=+Y
"RTN","MPIMSFS",20,0)
 ;
"RTN","MPIMSFS",21,0)
DATE ;Select dates
"RTN","MPIMSFS",22,0)
 K DTARR D FNDTF^MPIMDMA1(.DTARR)
"RTN","MPIMSFS",23,0)
 I '$D(DTARR) W !!,"No dates are in the file to select." G QUIT
"RTN","MPIMSFS",24,0)
 S (CNT,QQ)=0 F  S QQ=$O(DTARR(QQ)) Q:'QQ  S CNT=CNT+1
"RTN","MPIMSFS",25,0)
 S MAX=CNT K SELARR W !
"RTN","MPIMSFS",26,0)
 S DIR(0)="LO^1:"_MAX,DIR("A")="Select any date or date range"
"RTN","MPIMSFS",27,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT
"RTN","MPIMSFS",28,0)
 S Y=","_Y
"RTN","MPIMSFS",29,0)
 S CNT=0 F  S CNT=$O(DTARR(CNT)) Q:'CNT  I Y[(","_CNT_",") S SELARR($P(DTARR(CNT),"^",2))=""
"RTN","MPIMSFS",30,0)
 I '$D(SELARR) W !!,"Choose dates or enter ""^"" to halt."  K CNT,DIR,DTOUT,DUOUT,DIRUT,MAX,QQ,SELARR,Y G DATE
"RTN","MPIMSFS",31,0)
 ;
"RTN","MPIMSFS",32,0)
DEV ;Device selection
"RTN","MPIMSFS",33,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPIMSFS",34,0)
 K ZTSAVE S ZTSAVE("ST1IEN")="",ZTSAVE("ST2IEN")="",ZTSAVE(".SELARR")=""
"RTN","MPIMSFS",35,0)
 D EN^XUTMDEVQ("START^MPIMSFS","MPI - Print Shared Facility Report",.ZTSAVE) I 'POP Q
"RTN","MPIMSFS",36,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMSFS",37,0)
 G QUIT
"RTN","MPIMSFS",38,0)
 ;
"RTN","MPIMSFS",39,0)
START ;
"RTN","MPIMSFS",40,0)
 S (PG,QFLG)=0,$P(LN,"-",81)=""
"RTN","MPIMSFS",41,0)
 S HDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMSFS",42,0)
 S FACNM1=$P(^MPI(985.3,+ST1IEN,0),"^",6) I FACNM1="" S FACNM1=$$GET1^DIQ(4,+ST1IEN_",",.01)
"RTN","MPIMSFS",43,0)
 S FACNM2=$P(^MPI(985.3,+ST2IEN,0),"^",6) I FACNM2="" S FACNM2=$$GET1^DIQ(4,+ST2IEN_",",.01)
"RTN","MPIMSFS",44,0)
 D HDR
"RTN","MPIMSFS",45,0)
 ;
"RTN","MPIMSFS",46,0)
PRT ;Print report
"RTN","MPIMSFS",47,0)
 S LOOPDT=0 F  S LOOPDT=$O(SELARR(LOOPDT)) Q:'LOOPDT  D
"RTN","MPIMSFS",48,0)
 .D:$Y+4>IOSL HDR Q:QFLG
"RTN","MPIMSFS",49,0)
 .Q:'$D(^MPI(985.34,LOOPDT,"SITE",ST1IEN,"TF",ST2IEN,0))
"RTN","MPIMSFS",50,0)
 .W !,$$FMTE^XLFDT(LOOPDT),?35,$J($FN($P(^MPI(985.34,LOOPDT,"SITE",ST1IEN,"TF",ST2IEN,0),"^",2),","),7)
"RTN","MPIMSFS",51,0)
 ;
"RTN","MPIMSFS",52,0)
QUIT ;Kill variables and quit
"RTN","MPIMSFS",53,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIMSFS",54,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMSFS",55,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMSFS",56,0)
 K CNT,DIC,DIR,DIRUT,DTARR,DTOUT,DUOUT,FACNM1,FACNM2,HDT,JJ
"RTN","MPIMSFS",57,0)
 K LN,LOOPDT,MAX,PG,QFLG,QQ,SELARR,SS,ST1IEN,ST2IEN,X,Y
"RTN","MPIMSFS",58,0)
 Q
"RTN","MPIMSFS",59,0)
 ;
"RTN","MPIMSFS",60,0)
HDR ;Header for report
"RTN","MPIMSFS",61,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMSFS",62,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIMSFS",63,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","MPIMSFS",64,0)
 W !,"MPI DQ - Shared Patient Report   (printed ",HDT,")",?70,"Page: ",PG
"RTN","MPIMSFS",65,0)
 W !,"Shared between "_FACNM1_" and "_FACNM2
"RTN","MPIMSFS",66,0)
 W !!,"DATE",?30,"# SHARED PATIENTS",!,LN
"RTN","MPIMSFS",67,0)
 Q
"RTN","MPIMSFS",68,0)
 ;
"RTN","MPIMSFT")
0^114^B25813374
"RTN","MPIMSFT",1,0)
MPIMSFT ;BIR/PTD-SHARED PATIENT TRENDING REPORT ;06/24/02
"RTN","MPIMSFT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**13**;30 Apr 99
"RTN","MPIMSFT",3,0)
 ;
"RTN","MPIMSFT",4,0)
 S QFLG=1
"RTN","MPIMSFT",5,0)
 W !!,"This option displays the shared patient statistics for a selected"
"RTN","MPIMSFT",6,0)
 W !,"facility with all other facilities.  Trends over time are evident as"
"RTN","MPIMSFT",7,0)
 W !,"the report displays the shared patient totals for a range of dates."
"RTN","MPIMSFT",8,0)
 W !!,"The report dates used can be selected by either of these methods:"
"RTN","MPIMSFT",9,0)
 W !,"(1) The default is the First, Midpoint and Last dates available."
"RTN","MPIMSFT",10,0)
 W !,"(2) Alternately, you can choose any three dates in the MPI SHARED"
"RTN","MPIMSFT",11,0)
 W !,"TREATING FACILITY STATS (#985.34) file."
"RTN","MPIMSFT",12,0)
 ;
"RTN","MPIMSFT",13,0)
 I '$O(^MPI(985.34,0)) W !!,"There is no data in the MPI SHARED TREATING FACILITY STATS (#985.34) file.",! G QUIT
"RTN","MPIMSFT",14,0)
 ;
"RTN","MPIMSFT",15,0)
SELCT ;Pick a site
"RTN","MPIMSFT",16,0)
 W ! S DIC="^DIC(4,",DIC(0)="QEAM",DIC("A")="Select facility: "
"RTN","MPIMSFT",17,0)
 S DIC("S")="I $D(^MPI(985.3,""B"",+Y))"
"RTN","MPIMSFT",18,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPIMSFT",19,0)
 S SITEIEN=+Y
"RTN","MPIMSFT",20,0)
 ;
"RTN","MPIMSFT",21,0)
 W !!,"Choose print specifications."
"RTN","MPIMSFT",22,0)
 W !,"1. Default dates (F/M/L)",!,"2. User selected dates",!
"RTN","MPIMSFT",23,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMSFT",24,0)
 S DIR(0)="SA^1:First/Middle/Last;2:User selected dates"
"RTN","MPIMSFT",25,0)
 S DIR("A")="Select specifications:  ",DIR("B")=1
"RTN","MPIMSFT",26,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S ANS=Y
"RTN","MPIMSFT",27,0)
 ;
"RTN","MPIMSFT",28,0)
 ;How many dates in the file?
"RTN","MPIMSFT",29,0)
 S (TOT,MPIDT)=0 F  S MPIDT=$O(^MPI(985.34,"B",MPIDT)) Q:'MPIDT  S TOT=TOT+1
"RTN","MPIMSFT",30,0)
 ;
"RTN","MPIMSFT",31,0)
ANS1 ;Use default dates; ANS=1
"RTN","MPIMSFT",32,0)
 I ANS=1 D  G DEV
"RTN","MPIMSFT",33,0)
 .S FIRST=$O(^MPI(985.34,0)) ;Get the first date
"RTN","MPIMSFT",34,0)
 .S LAST=$O(^MPI(985.34," "),-1) ;Get the last date
"RTN","MPIMSFT",35,0)
 .;Get the middle date
"RTN","MPIMSFT",36,0)
 .S (CNT,MIDDLE)=0 F  S MIDDLE=$O(^MPI(985.34,"B",MIDDLE)) S CNT=CNT+1 Q:CNT>(TOT/2)
"RTN","MPIMSFT",37,0)
 ;
"RTN","MPIMSFT",38,0)
ANS2 ;Select dates for report; ANS=2
"RTN","MPIMSFT",39,0)
 K DTARR D FNDTF^MPIMDMA1(.DTARR)
"RTN","MPIMSFT",40,0)
 I '$D(DTARR) W !!,"No dates are in the file to select." G QUIT
"RTN","MPIMSFT",41,0)
 K SELARR W !
"RTN","MPIMSFT",42,0)
 S DIR(0)="LO^1:"_TOT,DIR("A")="Select date(s)"
"RTN","MPIMSFT",43,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT
"RTN","MPIMSFT",44,0)
 S Y=","_Y
"RTN","MPIMSFT",45,0)
 S (CNT,SEL)=0 F  S CNT=$O(DTARR(CNT)) Q:'CNT  I Y[(","_CNT_",") S SELARR($P(DTARR(CNT),"^",2))="",SEL=SEL+1
"RTN","MPIMSFT",46,0)
 I SEL'=3 W !!,"You must choose three (3) dates for this report."  K CNT,DIR,DTOUT,DUOUT,DIRUT,SEL,SELARR,Y G ANS2
"RTN","MPIMSFT",47,0)
 ;Set date variables
"RTN","MPIMSFT",48,0)
 S (CNT,QQ)=0 F  S QQ=$O(SELARR(QQ)) Q:'QQ  D
"RTN","MPIMSFT",49,0)
 .S CNT=CNT+1
"RTN","MPIMSFT",50,0)
 .I CNT=1 S FIRST=$O(SELARR(QQ-.1))
"RTN","MPIMSFT",51,0)
 .I CNT=2 S MIDDLE=$O(SELARR(QQ-.1))
"RTN","MPIMSFT",52,0)
 .I CNT=3 S LAST=$O(SELARR(QQ-.1))
"RTN","MPIMSFT",53,0)
 ;
"RTN","MPIMSFT",54,0)
DEV ;Device selection
"RTN","MPIMSFT",55,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPIMSFT",56,0)
 K ZTSAVE S ZTSAVE("SITEIEN")="",ZTSAVE("FIRST")="",ZTSAVE("LAST")="",ZTSAVE("MIDDLE")=""
"RTN","MPIMSFT",57,0)
 D EN^XUTMDEVQ("START^MPIMSFT","MPI - Print Shared Facility Trending Report",.ZTSAVE) I 'POP Q
"RTN","MPIMSFT",58,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMSFT",59,0)
 G QUIT
"RTN","MPIMSFT",60,0)
 ;
"RTN","MPIMSFT",61,0)
START ;Compile report
"RTN","MPIMSFT",62,0)
 K ARRAY
"RTN","MPIMSFT",63,0)
 S (PG,QFLG)=0,$P(LN,"-",81)=""
"RTN","MPIMSFT",64,0)
 S HDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMSFT",65,0)
 S FDT=$$FMTE^XLFDT(FIRST),MDT=$$FMTE^XLFDT(MIDDLE),LDT=$$FMTE^XLFDT(LAST)
"RTN","MPIMSFT",66,0)
 S FACNM=$P(^MPI(985.3,+SITEIEN,0),"^",6) I FACNM="" S FACNM=$$GET1^DIQ(4,+SITEIEN_",",.01)
"RTN","MPIMSFT",67,0)
 D HDR
"RTN","MPIMSFT",68,0)
FIRST ;First date
"RTN","MPIMSFT",69,0)
 S TF=0 F  S TF=$O(^MPI(985.34,FIRST,"SITE",SITEIEN,"TF",TF)) Q:'TF  S TFNM="" D
"RTN","MPIMSFT",70,0)
 .I '$D(^MPI(985.3,+TF,0)) Q
"RTN","MPIMSFT",71,0)
 .S TFNM=$P(^MPI(985.3,+TF,0),"^",6)
"RTN","MPIMSFT",72,0)
 .I TFNM="" S TFNM=$$GET1^DIQ(4,+TF_",",.01)
"RTN","MPIMSFT",73,0)
 .S ARRAY(TFNM)=$P(^MPI(985.34,FIRST,"SITE",SITEIEN,"TF",TF,0),"^",2)
"RTN","MPIMSFT",74,0)
MID ;Middle date
"RTN","MPIMSFT",75,0)
 S TF=0 F  S TF=$O(^MPI(985.34,MIDDLE,"SITE",SITEIEN,"TF",TF)) Q:'TF  S TFNM="" D
"RTN","MPIMSFT",76,0)
 .I '$D(^MPI(985.3,+TF,0)) Q
"RTN","MPIMSFT",77,0)
 .S TFNM=$P(^MPI(985.3,+TF,0),"^",6)
"RTN","MPIMSFT",78,0)
 .I TFNM="" S TFNM=$$GET1^DIQ(4,+TF_",",.01)
"RTN","MPIMSFT",79,0)
 .I $D(ARRAY(TFNM)) S ARRAY(TFNM)=ARRAY(TFNM)_"^"_$P(^MPI(985.34,MIDDLE,"SITE",SITEIEN,"TF",TF,0),"^",2)
"RTN","MPIMSFT",80,0)
 .I '$D(ARRAY(TFNM)) S ARRAY(TFNM)="^"_$P(^MPI(985.34,MIDDLE,"SITE",SITEIEN,"TF",TF,0),"^",2)
"RTN","MPIMSFT",81,0)
LAST ;Last date
"RTN","MPIMSFT",82,0)
 S TF=0 F  S TF=$O(^MPI(985.34,LAST,"SITE",SITEIEN,"TF",TF)) Q:'TF  S TFNM="" D
"RTN","MPIMSFT",83,0)
 .I '$D(^MPI(985.3,+TF,0)) Q
"RTN","MPIMSFT",84,0)
 .S TFNM=$P(^MPI(985.3,+TF,0),"^",6)
"RTN","MPIMSFT",85,0)
 .I TFNM="" S TFNM=$$GET1^DIQ(4,+TF_",",.01)
"RTN","MPIMSFT",86,0)
 .I $D(ARRAY(TFNM)) S ARRAY(TFNM)=ARRAY(TFNM)_"^"_$P(^MPI(985.34,LAST,"SITE",SITEIEN,"TF",TF,0),"^",2)
"RTN","MPIMSFT",87,0)
 .I '$D(ARRAY(TFNM)) S ARRAY(TFNM)="^^"_$P(^MPI(985.34,LAST,"SITE",SITEIEN,"TF",TF,0),"^",2)
"RTN","MPIMSFT",88,0)
 ;
"RTN","MPIMSFT",89,0)
PRT ;Print report
"RTN","MPIMSFT",90,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  Q:QFLG  D
"RTN","MPIMSFT",91,0)
 .D:$Y+4>IOSL HDR Q:QFLG
"RTN","MPIMSFT",92,0)
 .W !,$S(NAME=FACNM:"<"_NAME_">",1:NAME)
"RTN","MPIMSFT",93,0)
 .W ?37,$J($FN($P(ARRAY(NAME),"^"),","),7),?52,$J($FN($P(ARRAY(NAME),"^",2),","),7),?67,$J($FN($P(ARRAY(NAME),"^",3),","),7)
"RTN","MPIMSFT",94,0)
 ;
"RTN","MPIMSFT",95,0)
QUIT ;Kill variables and quit
"RTN","MPIMSFT",96,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIMSFT",97,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMSFT",98,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMSFT",99,0)
 K ANS,ARRAY,CNT,DIC,DIR,DIRUT,DTARR,DUOUT,FACNM,FDT,FIRST,HDT,JJ,LAST,LDT,LN
"RTN","MPIMSFT",100,0)
 K MDT,MIDDLE,MPIDT,NAME,PG,QQ,QFLG,SEL,SELARR,SITEIEN,SS,TF,TFNM,TOT,X,Y
"RTN","MPIMSFT",101,0)
 Q
"RTN","MPIMSFT",102,0)
 ;
"RTN","MPIMSFT",103,0)
HDR ;Header for report
"RTN","MPIMSFT",104,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMSFT",105,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIMSFT",106,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","MPIMSFT",107,0)
 W !,"MPI DQ - Shared Patient Trending Report  (printed ",HDT,")",?72,"Page: ",PG
"RTN","MPIMSFT",108,0)
 W !,"Total Patients Shared with "_FACNM
"RTN","MPIMSFT",109,0)
 W !!,"FACILITY NAME",?35,FDT,?50,MDT,?65,LDT,!,LN
"RTN","MPIMSFT",110,0)
 Q
"RTN","MPIMSFT",111,0)
 ;
"RTN","MPIMSRD")
0^118^B23389642
"RTN","MPIMSRD",1,0)
MPIMSRD ;BIR/CML-MPI/PD Status Report Display ;7/16/02
"RTN","MPIMSRD",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**12,24**;30 Apr 99
"RTN","MPIMSRD",3,0)
 ;
"RTN","MPIMSRD",4,0)
 ;Fileman reads to OPTION SCHEDULING (#19.2) file supported by IA #3599
"RTN","MPIMSRD",5,0)
 ;Reference to ^%ZTSCH("TASK" supported by IA #3520
"RTN","MPIMSRD",6,0)
 ;Reference to ^EN^XUTMTP supported by IA #3521
"RTN","MPIMSRD",7,0)
 ;
"RTN","MPIMSRD",8,0)
EN ;
"RTN","MPIMSRD",9,0)
 ; display the status of the various MPI processes
"RTN","MPIMSRD",10,0)
 S QFLG=0 W @IOF
"RTN","MPIMSRD",11,0)
 W !?25,"MPI STATUS REPORT",!?19,"(generated ",$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)),")"
"RTN","MPIMSRD",12,0)
 ;
"RTN","MPIMSRD",13,0)
SCHED ;check scheduled tasks
"RTN","MPIMSRD",14,0)
 W !!,"Scheduled Background Job   Last Completed Run        Next Scheduled Run"
"RTN","MPIMSRD",15,0)
 W !,"------------------------   ------------------        ------------------"
"RTN","MPIMSRD",16,0)
 ;
"RTN","MPIMSRD",17,0)
STAT ;MPI DATA MGT STAT RPT QUEUED
"RTN","MPIMSRD",18,0)
 W !,"MPI Stat Report",?27
"RTN","MPIMSRD",19,0)
 S DAT=$$GET1^DIQ(985.1,1_",",7.1) I DAT="" S DAT="CURRENTLY COMPILING"
"RTN","MPIMSRD",20,0)
 W DAT,?53
"RTN","MPIMSRD",21,0)
 S DIC="^DIC(19.2,",X="MPI DATA MGT STAT RPT QUEUED" D ^DIC K DIC
"RTN","MPIMSRD",22,0)
 I +Y<0 S DAT="NOT SCHEDULED" W DAT G AUD
"RTN","MPIMSRD",23,0)
 S DAT=$$GET1^DIQ(19.2,+Y_",",2) I DAT="" S DAT="NOT SCHEDULED"
"RTN","MPIMSRD",24,0)
 W DAT
"RTN","MPIMSRD",25,0)
 ;
"RTN","MPIMSRD",26,0)
AUD ;MPI AUDIT PURGE
"RTN","MPIMSRD",27,0)
 W !,"Audit Data Purge",?27
"RTN","MPIMSRD",28,0)
 S DAT=$$GET1^DIQ(985.1,1_",",2.1) I DAT="" S DAT="UNKNOWN"
"RTN","MPIMSRD",29,0)
 W DAT,?53
"RTN","MPIMSRD",30,0)
 S DIC="^DIC(19.2,",X="MPI AUDIT PURGE" D ^DIC K DIC
"RTN","MPIMSRD",31,0)
 I +Y<0 S DAT="NOT SCHEDULED" W DAT G SM
"RTN","MPIMSRD",32,0)
 S DAT=$$GET1^DIQ(19.2,+Y_",",2) I DAT="" S DAT="NOT SCHEDULED"
"RTN","MPIMSRD",33,0)
 W DAT
"RTN","MPIMSRD",34,0)
 ;
"RTN","MPIMSRD",35,0)
SM ;MPI MONITORING
"RTN","MPIMSRD",36,0)
 W !,"Invalid Site Monitor",?27
"RTN","MPIMSRD",37,0)
 S DAT=$$GET1^DIQ(985.1,1_",",4) I DAT="" S DAT="UNKNOWN"
"RTN","MPIMSRD",38,0)
 W DAT,?53
"RTN","MPIMSRD",39,0)
 S DIC="^DIC(19.2,",X="MPI MONITORING" D ^DIC K DIC
"RTN","MPIMSRD",40,0)
 I +Y<0 S DAT="NOT SCHEDULED" W DAT G DUP
"RTN","MPIMSRD",41,0)
 S DAT=$$GET1^DIQ(19.2,+Y_",",2) I DAT="" S DAT="NOT SCHEDULED"
"RTN","MPIMSRD",42,0)
 W DAT
"RTN","MPIMSRD",43,0)
 ;
"RTN","MPIMSRD",44,0)
DUP ;MPI DATA MGT COMPILE DUP SSN
"RTN","MPIMSRD",45,0)
 W !,"Dup SSN Compile",?27
"RTN","MPIMSRD",46,0)
 S DAT=$$GET1^DIQ(985.1,1_",",3) I DAT="" S DAT="UNKNOWN"
"RTN","MPIMSRD",47,0)
 W DAT,?53
"RTN","MPIMSRD",48,0)
 S DIC="^DIC(19.2,",X="MPI DATA MGT COMPILE DUP SSN" D ^DIC K DIC
"RTN","MPIMSRD",49,0)
 I +Y<0 S DAT="NOT SCHEDULED" W DAT G NS
"RTN","MPIMSRD",50,0)
 S DAT=$$GET1^DIQ(19.2,+Y_",",2) I DAT="" S DAT="NOT SCHEDULED"
"RTN","MPIMSRD",51,0)
 W DAT
"RTN","MPIMSRD",52,0)
 ;
"RTN","MPIMSRD",53,0)
NS ;check non-scheduled tasks
"RTN","MPIMSRD",54,0)
 W !!,"Non-Scheduled Tasks:",!,"--------------------"
"RTN","MPIMSRD",55,0)
 ;
"RTN","MPIMSRD",56,0)
TF ;
"RTN","MPIMSRD",57,0)
 W !,"Last Shared TF Statistics Compile - "
"RTN","MPIMSRD",58,0)
 S DAT=$$GET1^DIQ(985.1,1_",",5) I DAT="" S DAT="UNKNOWN"
"RTN","MPIMSRD",59,0)
 W DAT
"RTN","MPIMSRD",60,0)
 ;
"RTN","MPIMSRD",61,0)
QUERY ;
"RTN","MPIMSRD",62,0)
 W !,"Last HL7 Query Sent to ALL Sites  - "
"RTN","MPIMSRD",63,0)
 S DAT=$$GET1^DIQ(985.1,1_",",6) I DAT="" S DAT="UNKNOWN"
"RTN","MPIMSRD",64,0)
 W DAT
"RTN","MPIMSRD",65,0)
 I DAT]"" S USER=$$GET1^DIQ(985.1,1_",",6.1) I USER]"" W ?56,"(",$E(USER,1,20),")"
"RTN","MPIMSRD",66,0)
 ;
"RTN","MPIMSRD",67,0)
RPT ;get last MPI's report
"RTN","MPIMSRD",68,0)
 S LSTDT=$P($G(^MPI(985.1,1,"STATSUM",0)),"^",3)
"RTN","MPIMSRD",69,0)
 W !!,"Last ""MPI #'s Report"":"
"RTN","MPIMSRD",70,0)
 I LSTDT]"" W " (transmitted ",$$FMTE^XLFDT($P(LSTDT,".")),")"
"RTN","MPIMSRD",71,0)
 W !,"----------------------"
"RTN","MPIMSRD",72,0)
 I LSTDT="" W !,"No record found of a last ""MPI #'s Report." G BCK
"RTN","MPIMSRD",73,0)
 S IENS=LSTDT_","_1
"RTN","MPIMSRD",74,0)
 S TOTICN=$$GET1^DIQ(985.11,IENS_",",1)
"RTN","MPIMSRD",75,0)
 S TOTICN=$S(TOTICN="":"ZERO",1:$FN(TOTICN,","))
"RTN","MPIMSRD",76,0)
 W !,"Total unique ICNs                      : ",$J(TOTICN,10)
"RTN","MPIMSRD",77,0)
 ;
"RTN","MPIMSRD",78,0)
 S TOTIN=$$GET1^DIQ(985.11,IENS_",",2)
"RTN","MPIMSRD",79,0)
 S TOTIN=$S(TOTIN="":"ZERO",1:$FN(TOTIN,","))
"RTN","MPIMSRD",80,0)
 W !,"Total deactivated ICNs                 : ",$J(TOTIN,10)
"RTN","MPIMSRD",81,0)
 ;
"RTN","MPIMSRD",82,0)
 S TOTRES=$$GET1^DIQ(985.11,IENS_",",3)
"RTN","MPIMSRD",83,0)
 S TOTRES=$S(TOTRES="":"ZERO",1:$FN(TOTRES,","))
"RTN","MPIMSRD",84,0)
 W !,"Dup SSNs identified for resolution     : ",$J(TOTRES,10)
"RTN","MPIMSRD",85,0)
 ;
"RTN","MPIMSRD",86,0)
 S TOTNORES=$$GET1^DIQ(985.11,IENS_",",4)
"RTN","MPIMSRD",87,0)
 S TOTNORES=$S(TOTNORES="":"ZERO",1:$FN(TOTNORES,","))
"RTN","MPIMSRD",88,0)
 W !,"Dup SSNs marked as ""Cannot Be Resolved"": ",$J(TOTNORES,10)
"RTN","MPIMSRD",89,0)
 ;
"RTN","MPIMSRD",90,0)
BCK ;check for background jobs that may be running for:
"RTN","MPIMSRD",91,0)
 ;Local/Missing ICNs
"RTN","MPIMSRD",92,0)
 ;HL Purge Transmissions
"RTN","MPIMSRD",93,0)
 ;MPI Statistics Report
"RTN","MPIMSRD",94,0)
 ;
"RTN","MPIMSRD",95,0)
 W !! S DIR(0)="E" D ^DIR K DIR
"RTN","MPIMSRD",96,0)
 I $D(DUOUT)!($D(DIRUT))!($D(DTOUT)) S QFLG=1 G QUIT
"RTN","MPIMSRD",97,0)
 ;
"RTN","MPIMSRD",98,0)
 S $P(LN,"-",80)="" K ARR
"RTN","MPIMSRD",99,0)
 ;
"RTN","MPIMSRD",100,0)
 S TASK=0 F  S TASK=$O(^%ZTSCH("TASK",TASK)) Q:'TASK  D
"RTN","MPIMSRD",101,0)
 .S ROU=$P(^%ZTSCH("TASK",TASK),"^",2),OPT=$P(^%ZTSCH("TASK",TASK),"^",4)
"RTN","MPIMSRD",102,0)
 .I ROU="MPILMBJ" S ARR(ROU,TASK)=ROU
"RTN","MPIMSRD",103,0)
 .I OPT="MPI DATA MGT STAT RPT QUEUED" S ARR(OPT,TASK)=OPT
"RTN","MPIMSRD",104,0)
 .I OPT="HL PURGE TRANSMISSIONS" S ARR(OPT,TASK)=OPT
"RTN","MPIMSRD",105,0)
 ;
"RTN","MPIMSRD",106,0)
 I '$D(ARR) S QFLG=1 G QUIT
"RTN","MPIMSRD",107,0)
 S CNT=0,ROU="" F  S ROU=$O(ARR(ROU)) Q:ROU=""  D
"RTN","MPIMSRD",108,0)
 .S TASK=0 F  S TASK=$O(ARR(ROU,TASK)) Q:'TASK  S CNT=CNT+1
"RTN","MPIMSRD",109,0)
 ;
"RTN","MPIMSRD",110,0)
 W @IOF,!,"The following background job",$S(CNT>1:"s are",1:" is")," currently running:"
"RTN","MPIMSRD",111,0)
 S CNT=0,ROU="" F  S ROU=$O(ARR(ROU)) Q:ROU=""  D
"RTN","MPIMSRD",112,0)
 .S CNT=CNT+1
"RTN","MPIMSRD",113,0)
 .I ROU="MPILMBJ" W !!,CNT,". Local/Missing ICNs:"
"RTN","MPIMSRD",114,0)
 .I ROU="HL PURGE TRANSMISSIONS" W !!,CNT,". HL Purge Transmissions:"
"RTN","MPIMSRD",115,0)
 .I ROU="MPI DATA MGT STAT RPT QUEUED" W !!,CNT,". MPI Statistics Report:"
"RTN","MPIMSRD",116,0)
 .S JOBCNT=0
"RTN","MPIMSRD",117,0)
 .S TASK=0 F  S TASK=$O(ARR(ROU,TASK)) Q:'TASK  D
"RTN","MPIMSRD",118,0)
 ..S JOBCNT=JOBCNT+1 I JOBCNT=1 W !,LN
"RTN","MPIMSRD",119,0)
 ..D EN^XUTMTP(TASK) W !,LN
"RTN","MPIMSRD",120,0)
 ;
"RTN","MPIMSRD",121,0)
QUIT ;
"RTN","MPIMSRD",122,0)
 I 'QFLG D
"RTN","MPIMSRD",123,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMSRD",124,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","MPIMSRD",125,0)
 ;
"RTN","MPIMSRD",126,0)
 K DAT,DIC,DIR,IENS,LSTDT,TOTICN,TOTIN,TOTNORES,TOTRES,USER,X,Y
"RTN","MPIMSRD",127,0)
 K ARR,CNT,DIRUT,DTOUT,DUOUT,JJ,JOBCNT,LN,QFLG,ROU,SS,TASK,OPT
"RTN","MPIMSRD",128,0)
 Q
"RTN","MPIMTRKE")
0^124^B14065258
"RTN","MPIMTRKE",1,0)
MPIMTRKE ;BIR/CML - (MPI ROUTINE) Enter/Edit MPI TEAM SUPPORT TRACKER File ; 03/14/02
"RTN","MPIMTRKE",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;;30 Apr 99
"RTN","MPIMTRKE",3,0)
 ;
"RTN","MPIMTRKE",4,0)
EN1 ;Enter/Edit support data
"RTN","MPIMTRKE",5,0)
 I '$D(DUZ) W !,"DUZ must be defined to use this option." Q
"RTN","MPIMTRKE",6,0)
 W @IOF
"RTN","MPIMTRKE",7,0)
 ;W !,"MPI EXCEPTIONS =>  Number of resolved exceptions from the MPI Exception Handler."
"RTN","MPIMTRKE",8,0)
 ;W !
"RTN","MPIMTRKE",9,0)
 W !,"NOIS =>  Number of resolved NOIS calls either picked up or entered on this date."
"RTN","MPIMTRKE",10,0)
 W !
"RTN","MPIMTRKE",11,0)
 W !,"HL7 COMMUNICATION/LINK ISSUES =>  Number of resolved HL7 issues."
"RTN","MPIMTRKE",12,0)
 W !,"   Examples:"
"RTN","MPIMTRKE",13,0)
 W !,"     - Links in ERROR that needed to be restarted."
"RTN","MPIMTRKE",14,0)
 W !,"     - Clearing stalled links."
"RTN","MPIMTRKE",15,0)
 W !,"     - Working on/with a site to start a listener."
"RTN","MPIMTRKE",16,0)
 W !,"     - Working on/with a site with filer problems."
"RTN","MPIMTRKE",17,0)
 W !,"     - Working on/with a site to start Event Queue."
"RTN","MPIMTRKE",18,0)
 W !,"     - Working on/with a site to start VAFC BATCH UPDATE job."
"RTN","MPIMTRKE",19,0)
 W !
"RTN","MPIMTRKE",20,0)
 W !,"SITE/DQ TEAM REQUESTS FOR HELP =>  Number of requests received from a site,"
"RTN","MPIMTRKE",21,0)
 W !,"   the data mgt team, or others that did not originate with a NOIS."
"RTN","MPIMTRKE",22,0)
 W !
"RTN","MPIMTRKE",23,0)
 W !,"SITE DATA CLEANUP =>  Number of sites where a data cleanup effort was performed"
"RTN","MPIMTRKE",24,0)
 W !,"   like the cleanup of the Station #776 TF entries."
"RTN","MPIMTRKE",25,0)
 W !
"RTN","MPIMTRKE",26,0)
 W !,"OUTSTANDING ISSUES/NOTES =>  Any outstanding issues or notes that need to be"
"RTN","MPIMTRKE",27,0)
 W !,"   passed to the team for the next support day. Can be transmitted to Exchange."
"RTN","MPIMTRKE",28,0)
 ;
"RTN","MPIMTRKE",29,0)
 W ! S DIC="^MPI(985.39,",DIC(0)="QEAML",DIC("A")="Select REPORTING DATE: "
"RTN","MPIMTRKE",30,0)
 D ^DIC K DIC G:Y<0 QUIT S RDT=+Y
"RTN","MPIMTRKE",31,0)
 L +^MPI(985.39,RDT):1 E  W !!,"Someone else is editing this record. Try again later.",! G QUIT
"RTN","MPIMTRKE",32,0)
 ;
"RTN","MPIMTRKE",33,0)
 W ! S DA(1)=RDT,DIC="^MPI(985.39,"_DA(1)_",1,",DIC(0)="QEAML",DIC("A")="Select REPORTING TEAM MEMBER: "
"RTN","MPIMTRKE",34,0)
 D ^DIC K DIC G:Y<0 UNLOCK S TMEM=+Y
"RTN","MPIMTRKE",35,0)
 ;
"RTN","MPIMTRKE",36,0)
 ;W ! S DA(1)=RDT,DA=TMEM,DIE="^MPI(985.39,"_DA(1)_",1,",DR="1T;2T;3T;4T;5T;6T"
"RTN","MPIMTRKE",37,0)
 W ! S DA(1)=RDT,DA=TMEM,DIE="^MPI(985.39,"_DA(1)_",1,",DR="2T;3T;4T;5T;6T"
"RTN","MPIMTRKE",38,0)
 D ^DIE K DIE
"RTN","MPIMTRKE",39,0)
 ;
"RTN","MPIMTRKE",40,0)
 I '$O(^MPI(985.39,RDT,1,TMEM,"OUTSTD",0)) G UNLOCK
"RTN","MPIMTRKE",41,0)
 ;ask to send email to Exchange
"RTN","MPIMTRKE",42,0)
 W !
"RTN","MPIMTRKE",43,0)
 S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Send notification of the OUTSTANDING ISSUES/NOTES to Exchange"
"RTN","MPIMTRKE",44,0)
 D ^DIR K DIR
"RTN","MPIMTRKE",45,0)
 I +Y'=1 G UNLOCK
"RTN","MPIMTRKE",46,0)
 ;
"RTN","MPIMTRKE",47,0)
 ;send email
"RTN","MPIMTRKE",48,0)
 S SUPDT=$$FMTE^XLFDT(RDT),TMEMNAME=$$GET1^DIQ(200,+$P(^MPI(985.39,RDT,1,TMEM,0),"^")_",",.01)
"RTN","MPIMTRKE",49,0)
 K MPIMTXT
"RTN","MPIMTRKE",50,0)
 S (CNT,QQ)=0 F  S QQ=$O(^MPI(985.39,RDT,1,TMEM,"OUTSTD",QQ)) Q:'QQ  D
"RTN","MPIMTRKE",51,0)
 .S MPIMTXT(QQ)=^MPI(985.39,RDT,1,TMEM,"OUTSTD",QQ,0),CNT=CNT+1
"RTN","MPIMTRKE",52,0)
 F QQ=1:1:3 S CNT=CNT+1,MPIMTXT(CNT)=""
"RTN","MPIMTRKE",53,0)
 S CNT=CNT+1,MPIMTXT(CNT)="Logged by "_TMEMNAME
"RTN","MPIMTRKE",54,0)
 S XMSUB="Outstanding Support Issues from "_SUPDT
"RTN","MPIMTRKE",55,0)
 S XMTEXT="MPIMTXT("
"RTN","MPIMTRKE",56,0)
 S XMY("LINK")=""
"RTN","MPIMTRKE",57,0)
 S XMY("IHLENFELD")=""
"RTN","MPIMTRKE",58,0)
 S XMY("CHESNEY")=""
"RTN","MPIMTRKE",59,0)
 S XMY("SNOOK")=""
"RTN","MPIMTRKE",60,0)
 S XMY("REED")=""
"RTN","MPIMTRKE",61,0)
 S XMY("DAVIS")=""
"RTN","MPIMTRKE",62,0)
 ;
"RTN","MPIMTRKE",63,0)
 I DUZ=11424 S XMDUZ="CHESNEY"
"RTN","MPIMTRKE",64,0)
 I DUZ=11456 S XMDUZ="DAVIS"
"RTN","MPIMTRKE",65,0)
 I DUZ=11449 S XMDUZ="IHLENFELD"
"RTN","MPIMTRKE",66,0)
 I DUZ=11433 S XMDUZ="LINK"
"RTN","MPIMTRKE",67,0)
 I DUZ=11445 S XMDUZ="REED"
"RTN","MPIMTRKE",68,0)
 I DUZ=11442 S XMDUZ="SNOOK"
"RTN","MPIMTRKE",69,0)
 ;
"RTN","MPIMTRKE",70,0)
 I '$D(XMDUZ) S XMDUZ=TMEMNAME
"RTN","MPIMTRKE",71,0)
 ;
"RTN","MPIMTRKE",72,0)
 D ^XMD W !!,"...message sent"
"RTN","MPIMTRKE",73,0)
 ;
"RTN","MPIMTRKE",74,0)
UNLOCK L -^MPI(985.39,RDT)
"RTN","MPIMTRKE",75,0)
 ;
"RTN","MPIMTRKE",76,0)
QUIT ;
"RTN","MPIMTRKE",77,0)
 K XMY,XMDUZ,XMKK,XMLOCK,XMR,XMSUB,XMT,XMTEXT,XMZ,MPIMTXT
"RTN","MPIMTRKE",78,0)
 K CNT,DA,DIC,DIE,DIR,DR,QQ,RDT,SUPDT,TMEM,TMEMNAME,Y
"RTN","MPIMTRKE",79,0)
 Q
"RTN","MPIMVSN")
0^132^B16456757
"RTN","MPIMVSN",1,0)
MPIMVSN ;BIR/PTD-SITE MONITOR (#985.3) FILE REPORT & EDIT ;06/06/02
"RTN","MPIMVSN",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**12**;30 Apr 99
"RTN","MPIMVSN",3,0)
 ;
"RTN","MPIMVSN",4,0)
EN1 ;Print data from SITE MONITOR (#985.3) file
"RTN","MPIMVSN",5,0)
 S QFLG=1
"RTN","MPIMVSN",6,0)
 W !!,"This report prints the facility name, station number, and VISN"
"RTN","MPIMVSN",7,0)
 W !,"information from the MPI SITE MONITOR (#985.3) file.  The report"
"RTN","MPIMVSN",8,0)
 W !,"can be printed alphabetically by facility name or for all or a"
"RTN","MPIMVSN",9,0)
 W !,"selected number of VISNs."
"RTN","MPIMVSN",10,0)
 ;
"RTN","MPIMVSN",11,0)
ASK1 ;Choose sort order
"RTN","MPIMVSN",12,0)
 W !!,"Choose the print specifications for this report."
"RTN","MPIMVSN",13,0)
 W !,"1. Alphabetical by facility",!,"2. All VISNs",!,"3. Selected VISNs",!
"RTN","MPIMVSN",14,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMVSN",15,0)
 S DIR(0)="SA^1:Alphabetical;2:All VISNs;3:Selected VISNs"
"RTN","MPIMVSN",16,0)
 S DIR("A")="Select order:  ",DIR("B")=1
"RTN","MPIMVSN",17,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S SORT=Y
"RTN","MPIMVSN",18,0)
 ;
"RTN","MPIMVSN",19,0)
ASK2 ;Choose VISN
"RTN","MPIMVSN",20,0)
 S VLIST=""
"RTN","MPIMVSN",21,0)
 I SORT=3 D  G:$D(DIRUT) QUIT
"RTN","MPIMVSN",22,0)
 .W !!,"Select VISN or VISNs (1-22) for this report."
"RTN","MPIMVSN",23,0)
 .K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIMVSN",24,0)
 .S DIR(0)="LAO^1:22",DIR("A")="Select VISN(s):  "
"RTN","MPIMVSN",25,0)
 .D ^DIR K DIR Q:$D(DIRUT)
"RTN","MPIMVSN",26,0)
 .S VLIST=Y
"RTN","MPIMVSN",27,0)
 ;
"RTN","MPIMVSN",28,0)
DEV ;Device selection
"RTN","MPIMVSN",29,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPIMVSN",30,0)
 K ZTSAVE S ZTSAVE("SORT")="",ZTSAVE("VLIST")=""
"RTN","MPIMVSN",31,0)
 D EN^XUTMDEVQ("START^MPIMVSN","MPI - Print Site Monitor Report",.ZTSAVE) I 'POP Q
"RTN","MPIMVSN",32,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIMVSN",33,0)
 G QUIT
"RTN","MPIMVSN",34,0)
 ;
"RTN","MPIMVSN",35,0)
START ;Compile report
"RTN","MPIMVSN",36,0)
 K ARRAY,VARR
"RTN","MPIMVSN",37,0)
 S (PG,QFLG,CNT)=0,$P(LN,"-",81)=""
"RTN","MPIMVSN",38,0)
 S HDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIMVSN",39,0)
 D HDR
"RTN","MPIMVSN",40,0)
 ;Sort VISN entries in alphabetical order
"RTN","MPIMVSN",41,0)
 ;All VISNs =2; Selected VISNs =3
"RTN","MPIMVSN",42,0)
 I SORT=2 S VISN=0 F  S VISN=$O(^MPI(985.3,"AV",VISN)) Q:'VISN  D
"RTN","MPIMVSN",43,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.3,"AV",VISN,IEN)) Q:'IEN  D
"RTN","MPIMVSN",44,0)
 ..S ZNODE=^MPI(985.3,IEN,0),NAME=$P(ZNODE,"^",6) Q:NAME=""
"RTN","MPIMVSN",45,0)
 ..S ARRAY(VISN,NAME)=$P(ZNODE,"^",2)
"RTN","MPIMVSN",46,0)
 I SORT=3 S LNG=$L(VLIST,",")-1 F LOOP=1:1:LNG D
"RTN","MPIMVSN",47,0)
 .S VN=$P(VLIST,","),VARR(VN)=""
"RTN","MPIMVSN",48,0)
 .S VLIST=$P(VLIST,",",2,99)
"RTN","MPIMVSN",49,0)
 I SORT=3 S VISN=0 F  S VISN=$O(VARR(VISN)) Q:'VISN  D
"RTN","MPIMVSN",50,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.3,"AV",VISN,IEN)) Q:'IEN  D
"RTN","MPIMVSN",51,0)
 ..S ZNODE=^MPI(985.3,IEN,0),NAME=$P(ZNODE,"^",6) Q:NAME=""
"RTN","MPIMVSN",52,0)
 ..S ARRAY(VISN,NAME)=$P(ZNODE,"^",2)
"RTN","MPIMVSN",53,0)
 ;
"RTN","MPIMVSN",54,0)
PRT ;Print report
"RTN","MPIMVSN",55,0)
 S CNT=0
"RTN","MPIMVSN",56,0)
 I SORT=1 D  G:QFLG QUIT
"RTN","MPIMVSN",57,0)
 .S NAME="" F  S NAME=$O(^MPI(985.3,"APRT",NAME)) Q:NAME=""  Q:QFLG  D
"RTN","MPIMVSN",58,0)
 ..S IEN=0 F  S IEN=$O(^MPI(985.3,"APRT",NAME,IEN)) Q:'IEN  D
"RTN","MPIMVSN",59,0)
 ...S CNT=CNT+1
"RTN","MPIMVSN",60,0)
 ...D:$Y+5>IOSL HDR Q:QFLG
"RTN","MPIMVSN",61,0)
 ...S ZNODE=^MPI(985.3,IEN,0)
"RTN","MPIMVSN",62,0)
 ...W !?5,NAME,?45,$P(ZNODE,"^",2),?61,$J($P(ZNODE,"^",3),2)
"RTN","MPIMVSN",63,0)
 ;
"RTN","MPIMVSN",64,0)
 ;Else SORT= 2 or 3
"RTN","MPIMVSN",65,0)
 S VISN=0 F  S VISN=$O(ARRAY(VISN)) Q:'VISN  Q:QFLG  D
"RTN","MPIMVSN",66,0)
 .S NAME="" F  S NAME=$O(ARRAY(VISN,NAME)) Q:NAME=""  Q:QFLG  D
"RTN","MPIMVSN",67,0)
 ..S CNT=CNT+1
"RTN","MPIMVSN",68,0)
 ..D:$Y+5>IOSL HDR Q:QFLG
"RTN","MPIMVSN",69,0)
 ..W !?5,NAME,?45,$P(ARRAY(VISN,NAME),"^"),?61,$J(VISN,2)
"RTN","MPIMVSN",70,0)
 ;
"RTN","MPIMVSN",71,0)
 G QUIT
"RTN","MPIMVSN",72,0)
 ;
"RTN","MPIMVSN",73,0)
HDR ;Header for report
"RTN","MPIMVSN",74,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMVSN",75,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPIMVSN",76,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF
"RTN","MPIMVSN",77,0)
 W !,"MPI DQ - Site Monitor (#985.3) File Report",?70,"Page: ",PG
"RTN","MPIMVSN",78,0)
 W !,"Printed ",HDT
"RTN","MPIMVSN",79,0)
 W !?5,"FACILITY NAME",?40,"STATION NUMBER",?60,"VISN",!,LN
"RTN","MPIMVSN",80,0)
 Q
"RTN","MPIMVSN",81,0)
 ;
"RTN","MPIMVSN",82,0)
QUIT ;Kill variables and quit
"RTN","MPIMVSN",83,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIMVSN",84,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIMVSN",85,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIMVSN",86,0)
 K ARRAY,CNT,DA,DIC,DIR,DIRUT,DTOUT,DUOUT,HDT,IEN,JJ,LN,LNG
"RTN","MPIMVSN",87,0)
 K LOOP,NAME,PG,QFLG,SORT,SS,VARR,VISN,VLIST,VN,X,Y,ZNODE
"RTN","MPIMVSN",88,0)
 Q
"RTN","MPIMVSN",89,0)
 ;
"RTN","MPIMVSN",90,0)
EN2 ;Edit SITE MONITOR (#985.3) file VISN field
"RTN","MPIMVSN",91,0)
 W !!,"This option allows you to update the VISN field in the "
"RTN","MPIMVSN",92,0)
 W !,"MPI SITE MONITOR (#985.3) file for a selected facility.",!
"RTN","MPIMVSN",93,0)
 ;
"RTN","MPIMVSN",94,0)
SITE ;Select site to edit
"RTN","MPIMVSN",95,0)
 K DIC,DA,DR
"RTN","MPIMVSN",96,0)
 S (DIC,DIE)="^MPI(985.3,",DIC(0)="QEAM",DIC("A")="Select facility: "
"RTN","MPIMVSN",97,0)
 D ^DIC K DIC G:+Y<0 QUIT2
"RTN","MPIMVSN",98,0)
 S (DA,SITEIEN)=+Y,DR="2"
"RTN","MPIMVSN",99,0)
 L +^MPI(985.3,SITEIEN):1 E  W !!,"Someone else is editing this record. Try again later.",! G QUIT2
"RTN","MPIMVSN",100,0)
 D ^DIE K DA,DIE,DR
"RTN","MPIMVSN",101,0)
 L -^MPI(985.3,SITEIEN)
"RTN","MPIMVSN",102,0)
QUIT2 ;Kill variables and quit
"RTN","MPIMVSN",103,0)
 K DA,DIC,DIE,DR,SITEIEN,X,Y
"RTN","MPIMVSN",104,0)
 ;
"RTN","MPINODFN")
0^133^B14269817
"RTN","MPINODFN",1,0)
MPINODFN ;BIR/PTD-Utility to Find Entries in 985.5 with No DFN ;8/13/04
"RTN","MPINODFN",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;;30 Apr 99
"RTN","MPINODFN",3,0)
 ;
"RTN","MPINODFN",4,0)
FND ;Look for Entries in MPI FACILITY ASSOCIATION (#985.5) file with No DFN
"RTN","MPINODFN",5,0)
 W !!,"This call identifies entries in the MPI FACILITY ASSOCIATION",!,"(#985.5) file that have no data in the DFN (#2) field."
"RTN","MPINODFN",6,0)
 ;
"RTN","MPINODFN",7,0)
 I $D(^XTMP("MPINODFN","@@","COMPILE BEGIN"))&'$D(^XTMP("MPINODFN","@@","COMPILE DONE")) D  G QUIT
"RTN","MPINODFN",8,0)
 .W !!,"This report is already being compiled!"
"RTN","MPINODFN",9,0)
 ;
"RTN","MPINODFN",10,0)
 I $E(IOST,1,2)="C-" W !!,"Beginning search for entries with no data in the DFN (#2) field."
"RTN","MPINODFN",11,0)
 K ^XTMP("MPINODFN")
"RTN","MPINODFN",12,0)
 ;
"RTN","MPINODFN",13,0)
 S START=$$NOW^XLFDT
"RTN","MPINODFN",14,0)
 S ^XTMP("MPINODFN",0)=START+100_"^"_START_"^MPI FACILITY ASSOCIATION (#985.5) file entries with No DFN."
"RTN","MPINODFN",15,0)
 ;
"RTN","MPINODFN",16,0)
 S ^XTMP("MPINODFN","@@","COMPILE BEGIN")=START
"RTN","MPINODFN",17,0)
LOOP S (CNT,TFIEN)=0
"RTN","MPINODFN",18,0)
 F  S TFIEN=$O(^MPI(985.5,TFIEN)) Q:'TFIEN  D
"RTN","MPINODFN",19,0)
 .S CNT=CNT+1 I $E(IOST,1,2)="C-" I '(CNT#50000) W !,CNT
"RTN","MPINODFN",20,0)
 .S ZNODE=$G(^MPI(985.5,TFIEN,0))
"RTN","MPINODFN",21,0)
 .S DFN=$P($G(ZNODE),"^",3)
"RTN","MPINODFN",22,0)
 .I DFN="" D
"RTN","MPINODFN",23,0)
 ..S ICN=$P($G(ZNODE),"^",2) I ICN="" S ^XTMP("MPINODFN","@@","CORRUPTED ENTRY",TFIEN)="" Q
"RTN","MPINODFN",24,0)
 ..S IDSTATE=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPINODFN",25,0)
 ..I IDSTATE="" S IDSTATE="U"
"RTN","MPINODFN",26,0)
 ..S SITEIEN=$P($G(ZNODE),"^") I SITEIEN=192 Q  ;Ignore AUSTIN '200' entries - they were not seeded. **8/17/04
"RTN","MPINODFN",27,0)
 ..S SITENAM=$P($G(^DIC(4,SITEIEN,0)),"^") I SITENAM="" S SITENAM="UNKNOWN"
"RTN","MPINODFN",28,0)
 ..S SITENUM=$P($G(^DIC(4,SITEIEN,99)),"^") I SITENUM="" S SITENUM="UNKNOWN"
"RTN","MPINODFN",29,0)
 ..S SHARE=$S(($$CHECK^MPISUT01(ICN)=0):"NOT SHARED",1:"SHARED") ;**8/18/04
"RTN","MPINODFN",30,0)
 ..S ^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN)=SITENAM_"^"_SITENUM_"^"_SHARE ;**8/18/04
"RTN","MPINODFN",31,0)
TOTL ;
"RTN","MPINODFN",32,0)
 S (CNT,ICN,TFIEN)=0 S IDSTATE="@@",SITENUM="" F  S IDSTATE=$O(^XTMP("MPINODFN",IDSTATE)) Q:IDSTATE=""  D
"RTN","MPINODFN",33,0)
 .F  S ICN=$O(^XTMP("MPINODFN",IDSTATE,ICN)) Q:'ICN  D
"RTN","MPINODFN",34,0)
 ..F  S SITENUM=$O(^XTMP("MPINODFN",IDSTATE,ICN,SITENUM)) Q:SITENUM=""  D
"RTN","MPINODFN",35,0)
 ...F  S TFIEN=$O(^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN)) Q:'TFIEN  D
"RTN","MPINODFN",36,0)
 ....I '$D(^XTMP("MPINODFN","@@","SITE NUMBER:",SITENUM)) S ^XTMP("MPINODFN","@@","SITE NUMBER:",SITENUM)=0
"RTN","MPINODFN",37,0)
 ....S ^XTMP("MPINODFN","@@","SITE NUMBER:",SITENUM)=^XTMP("MPINODFN","@@","SITE NUMBER:",SITENUM)+1_"^"_$P(^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN),"^")
"RTN","MPINODFN",38,0)
 ....S CNT=CNT+1
"RTN","MPINODFN",39,0)
 S ^XTMP("MPINODFN","@@","GRAND TOTAL")=CNT
"RTN","MPINODFN",40,0)
 S ^XTMP("MPINODFN","@@","COMPILE DONE")=$$NOW^XLFDT
"RTN","MPINODFN",41,0)
 ;
"RTN","MPINODFN",42,0)
 W !!,"Compile complete - ",CNT," entries in 985.5 found with no DFN."
"RTN","MPINODFN",43,0)
 ;
"RTN","MPINODFN",44,0)
QUIT ;Kill variables and quit.
"RTN","MPINODFN",45,0)
 K CNT,DFN,ICN,IDSTATE,SHARE,SITEIEN,SITENAM,SITENUM,START,TFIEN,ZNODE
"RTN","MPINODFN",46,0)
 Q
"RTN","MPINODFN",47,0)
 ;
"RTN","MPINODFN",48,0)
SHARED ;Is ICN Shared?  If so, can't be inactivated. **8/18/04
"RTN","MPINODFN",49,0)
 ;Code incorporated above.  No need to call this stand alone module.
"RTN","MPINODFN",50,0)
 S (CNT,ICN,TFIEN)=0 S IDSTATE="@@",SITENUM=""
"RTN","MPINODFN",51,0)
 F  S IDSTATE=$O(^XTMP("MPINODFN",IDSTATE)) Q:IDSTATE=""  D
"RTN","MPINODFN",52,0)
 .F  S ICN=$O(^XTMP("MPINODFN",IDSTATE,ICN)) Q:'ICN  D
"RTN","MPINODFN",53,0)
 ..F  S SITENUM=$O(^XTMP("MPINODFN",IDSTATE,ICN,SITENUM)) Q:SITENUM=""  D
"RTN","MPINODFN",54,0)
 ...F  S TFIEN=$O(^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN)) Q:'TFIEN  D
"RTN","MPINODFN",55,0)
 ....I ($$CHECK^MPISUT01(ICN)=1) S ^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN)=^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN)_"^"_"SHARED" S CNT=CNT+1
"RTN","MPINODFN",56,0)
 ....I ($$CHECK^MPISUT01(ICN)=0) S ^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN)=^XTMP("MPINODFN",IDSTATE,ICN,SITENUM,TFIEN)_"^"_"NOT SHARED"
"RTN","MPINODFN",57,0)
 W !!,"Done.  Found ",CNT," shared entries."
"RTN","MPINODFN",58,0)
 G QUIT
"RTN","MPINODFN",59,0)
 ;
"RTN","MPINPDAT")
0^134^B72364013
"RTN","MPINPDAT",1,0)
MPINPDAT ;BIR/CML-(MPI ROUTINE) Search for MPI Patient Data ;09/12/02
"RTN","MPINPDAT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,15,21,20,24,36**;30 Apr 99
"RTN","MPINPDAT",3,0)
 ;
"RTN","MPINPDAT",4,0)
 ;Print Dup SSN Report by Patient
"RTN","MPINPDAT",5,0)
 ;
"RTN","MPINPDAT",6,0)
 W !,"Search for MPI Patient Data. (Enhanced call for file 985.5)" K DIRUT
"RTN","MPINPDAT",7,0)
ASK ;Ask for PATIENT
"RTN","MPINPDAT",8,0)
 K ICN,SSN
"RTN","MPINPDAT",9,0)
 I $D(DIRUT) G QUIT
"RTN","MPINPDAT",10,0)
 ;
"RTN","MPINPDAT",11,0)
 W ! K ICN
"RTN","MPINPDAT",12,0)
 S DIC="^MPIVET(",DIC(0)="QEAM",DIC("A")="Select PATIENT (Use ICN, SSN, or SURNAME): "
"RTN","MPINPDAT",13,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPINPDAT",14,0)
 S ICN=+Y
"RTN","MPINPDAT",15,0)
 S ^XTMP("MPIRUTL_PROMPT","DEFAULT",DUZ)="I."_ICN
"RTN","MPINPDAT",16,0)
 D PDAT(ICN)
"RTN","MPINPDAT",17,0)
 ;
"RTN","MPINPDAT",18,0)
 G ASK
"RTN","MPINPDAT",19,0)
 ;
"RTN","MPINPDAT",20,0)
QUIT ;
"RTN","MPINPDAT",21,0)
 K ^TMP("MPINPDAT",$J)
"RTN","MPINPDAT",22,0)
 K %,ADDR1,ADDR2,ADDR3,AF,AF1,AFNAME,AFSTA,CASE,CASEIEN,CITY,CLAIM,CMOR,CSZ,DA,DIR,DIRUT,DOB,DOD,DQFLG,GOT,FNAME,ICN,LN,LNAME,MNAME,CNT
"RTN","MPINPDAT",23,0)
 K NAME,NODE,PAT,PC1,PG,PIDARR,PRTDT,SEX,SITENM,SSN,TYPE,Y,SITENUM,MOM,POBC,POBS,POBSDA,NOIS,MPIR,STATE,STATUS,SUF,USER,USERNM
"RTN","MPINPDAT",24,0)
 K AFIEN,ALOC,DFN,DTLT,DTLUP,EVTR,ID,IDDA,NODE1,NODE2,MBI,RACENM,X,ZIP,PHONE
"RTN","MPINPDAT",25,0)
 K IDST,QFLG,AFDA,AFFLG,AFFT
"RTN","MPINPDAT",26,0)
 Q
"RTN","MPINPDAT",27,0)
 ;
"RTN","MPINPDAT",28,0)
PDAT(PID) ;parameter passed can be ICN or SSN
"RTN","MPINPDAT",29,0)
 ;^TMP("MPINPDAT",$J,ICN)=SSN_"^"_LNAME_","_FNAME_" "_MNAME_" "_SUF_"^"_DOB_"^"_CMOR_"^"_SEX_"^"_DOD_"^"_CRDT_"^"_CRFAC_"^"_CRBY_"^"_IDST
"RTN","MPINPDAT",30,0)
 ;^TMP("MPINPDAT",$J,ICN,AFNAME)=AFSTA^AFIEN
"RTN","MPINPDAT",31,0)
 ;
"RTN","MPINPDAT",32,0)
 N AF,AF1,AFNAME,AFSTA,CLAIM,CMOR,DIR,DOB,FNAME,LN,LNAME,MIB,MNAME,CNT,ICN,SSN
"RTN","MPINPDAT",33,0)
 N NAME,NODE,PAT,PC1,PG,PRTDT,SEX,SITENM,TYPE,SITENUM,MOM,POBC,POBS,SUF
"RTN","MPINPDAT",34,0)
 N AFIEN,ALOC,DFN,DTLT,DTLUP,EVTR,ID,IDDA,NODE1,NODE2,CRDT,CRFAC,CRBY,MS,POW,ETH,RACE,ALIAS,IDST,QFLG
"RTN","MPINPDAT",35,0)
 ;
"RTN","MPINPDAT",36,0)
 K ^TMP("MPINPDAT",$J),PIDARR
"RTN","MPINPDAT",37,0)
 ;
"RTN","MPINPDAT",38,0)
 I '$D(^MPIVET(PID))&'$O(^MPIVET("SSN",PID,0)) W !!,"No MPI entry matches this data." Q
"RTN","MPINPDAT",39,0)
 I $P($G(^MPIVET(PID,"ID_STATE")),"^")="D" D  Q:QFLG
"RTN","MPINPDAT",40,0)
 .S QFLG=0
"RTN","MPINPDAT",41,0)
 .I '$D(^MPIVET(PID,1)) W !!,"<< This is a DEACTIVATED ICN with no data. >>" S QFLG=1 Q
"RTN","MPINPDAT",42,0)
 .W !!,"<< This is a DEACTIVATED ICN! >>" H 2
"RTN","MPINPDAT",43,0)
 ;
"RTN","MPINPDAT",44,0)
 ;check here to catch an ICN that was inactivated in the past and doesn't yet have an ID State
"RTN","MPINPDAT",45,0)
 ;this check is necessary until all ICNs have an ID State
"RTN","MPINPDAT",46,0)
 I $D(^MPIVET(PID,0)),'$D(^MPIVET(PID,1)) W !!,"<< This is an old INACTIVATED ICN that has not yet been DEACTIVATED. >>" Q
"RTN","MPINPDAT",47,0)
 ;
"RTN","MPINPDAT",48,0)
 I $D(^MPIVET(PID)) S ICN=PID,PIDARR(ICN)="" G PRT
"RTN","MPINPDAT",49,0)
 S SSN=PID,(CNT,ICN)=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  S PIDARR(ICN)="",CNT=CNT+1
"RTN","MPINPDAT",50,0)
 ;
"RTN","MPINPDAT",51,0)
PRT ;
"RTN","MPINPDAT",52,0)
 S $P(LN,"=",81)=""
"RTN","MPINPDAT",53,0)
 D NOW^%DTC S PRTDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","MPINPDAT",54,0)
 S ICN=0 F  S ICN=$O(PIDARR(ICN)) Q:'ICN  D  Q:$D(DIRUT)
"RTN","MPINPDAT",55,0)
 .D SET
"RTN","MPINPDAT",56,0)
 .I '$D(^TMP("MPINPDAT",$J,ICN)) W !!,"No data found for ICN ",ICN,"." Q
"RTN","MPINPDAT",57,0)
DEM .S NODE=^TMP("MPINPDAT",$J,ICN)
"RTN","MPINPDAT",58,0)
 .S SSN=$P(NODE,"^"),NAME=$P(NODE,"^",2),DOB=$P(NODE,"^",3),CMOR=$P(NODE,"^",4),SEX=$P(NODE,"^",5)
"RTN","MPINPDAT",59,0)
 .S DOD=$P(NODE,"^",6),IDST=$P(NODE,"^",10)
"RTN","MPINPDAT",60,0)
 .S CRDT=$P(NODE,"^",7),CRFAC=$P(NODE,"^",8),CRBY=$P(NODE,"^",9)
"RTN","MPINPDAT",61,0)
 .I CMOR="" S CMOR="UNKNOWN"
"RTN","MPINPDAT",62,0)
 .I CRDT="" S CRDT="UNKNOWN"
"RTN","MPINPDAT",63,0)
 .I CRFAC="" S CRFAC="UNKNOWN"
"RTN","MPINPDAT",64,0)
 .I CRBY="" S CRBY="UNKNOWN"
"RTN","MPINPDAT",65,0)
 .D HDR
"RTN","MPINPDAT",66,0)
 .S GOT=0 I $D(^MPI(985.2,"ICN",ICN)) D
"RTN","MPINPDAT",67,0)
 ..S CASEIEN=$O(^MPI(985.2,"ICN",ICN,0)),CASE=$P(^MPI(985.2,CASEIEN,0),"^"),NOIS=$P(^(0),"^",6)
"RTN","MPINPDAT",68,0)
 ..S STATUS=$P($G(^MPI(985.2,CASEIEN,0)),"^",3) I STATUS="O" S GOT=1 D
"RTN","MPINPDAT",69,0)
 ...S USER=$P($G(^MPI(985.2,CASEIEN,0)),"^",2),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPINPDAT",70,0)
 ...W !!,"<<This ICN is actively being worked on - "
"RTN","MPINPDAT",71,0)
 ...I NOIS]"" W "NOIS #",NOIS,"/"
"RTN","MPINPDAT",72,0)
 ...W "Case #",CASE,?78,">>"
"RTN","MPINPDAT",73,0)
 ...W !,"<<Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132),?78,">>"
"RTN","MPINPDAT",74,0)
 .I $D(^MPI(985.25,ICN,0)),'GOT D
"RTN","MPINPDAT",75,0)
 ..S USER=$P($G(^MPI(985.25,ICN,0)),"^",3),USERNM=$$GET1^DIQ(200,+USER_",",.01)
"RTN","MPINPDAT",76,0)
 ..W !!,"<<THIS ICN IS CURRENTLY CHECKED OUT>>"
"RTN","MPINPDAT",77,0)
 ..W !,"Case Worker: ",USERNM," / ",$$GET1^DIQ(200,+USER_",",.111)," / ",$$GET1^DIQ(200,+USER_",",.132)
"RTN","MPINPDAT",78,0)
 .W !!?2,"ICN    : ",ICN,?40,"CMOR: ",CMOR
"RTN","MPINPDAT",79,0)
 .W !?2,"Name   : ",NAME
"RTN","MPINPDAT",80,0)
 .W !?2,"SSN    : ",SSN
"RTN","MPINPDAT",81,0)
 .W !?2,"DOB    : ",DOB I DOD]"" W ?31,"Date of Death: ",DOD
"RTN","MPINPDAT",82,0)
 .W !?2,"Sex    : ",SEX
"RTN","MPINPDAT",83,0)
 .W !!?2,"Date/Time of Original Creation: ",CRDT
"RTN","MPINPDAT",84,0)
 .W !?2,"Facility of Original Creation : ",CRFAC
"RTN","MPINPDAT",85,0)
 .W !?2,"Created by                    : ",CRBY
"RTN","MPINPDAT",86,0)
TF .W !!?2,"Treating Facilities:",!?2,"--------------------"
"RTN","MPINPDAT",87,0)
 .S SITENM="" F  S SITENM=$O(^TMP("MPINPDAT",$J,ICN,SITENM)) Q:SITENM=""  D
"RTN","MPINPDAT",88,0)
 ..S SITENUM=$P(^TMP("MPINPDAT",$J,ICN,SITENM),"^"),AF=$P(^(SITENM),"^",2)
"RTN","MPINPDAT",89,0)
 ..W !?4,SITENUM,?10,"- ",SITENM  ;** 36
"RTN","MPINPDAT",90,0)
 ..D SET2
"RTN","MPINPDAT",91,0)
 ..I NAME]"" W !?6,"Name   : ",NAME I +DFN W "   (DFN #",DFN,")"
"RTN","MPINPDAT",92,0)
 ..I SSN]"" W !?6,"SSN    : ",SSN
"RTN","MPINPDAT",93,0)
 ..I DOB]"" W !?6,"DOB    : ",DOB I DOD]"" W ?31,"Date of Death: ",DOD
"RTN","MPINPDAT",94,0)
 ..I 'AFFLG W !?6,"MBI    : ",MBI  ;** 36
"RTN","MPINPDAT",95,0)
 ..I SEX]"" W !?6,"Sex    : ",SEX
"RTN","MPINPDAT",96,0)
 ..I CLAIM]"" W !?6,"Claim #: ",CLAIM
"RTN","MPINPDAT",97,0)
 ..I MS]"" W !?6,"Marital Status        : ",MS
"RTN","MPINPDAT",98,0)
 ..I POBC]"" W !?6,"Place of Birth City   : ",POBC
"RTN","MPINPDAT",99,0)
 ..I POBS]"" W !?6,"Place of Birth State  : ",POBS
"RTN","MPINPDAT",100,0)
 ..I MOM]"" W !?6,"Mother's Maiden Name  : ",MOM
"RTN","MPINPDAT",101,0)
 ..I POW]"" W !?6,"POW Status Indicated? : ",POW
"RTN","MPINPDAT",102,0)
 ..I ETH]"" W !?6,"Ethnicity Information : ",ETH
"RTN","MPINPDAT",103,0)
 ..I GOT D
"RTN","MPINPDAT",104,0)
 ...W !?6,"Address Information   :"
"RTN","MPINPDAT",105,0)
 ...I ADDR1]"" W !?10,ADDR1
"RTN","MPINPDAT",106,0)
 ...I ADDR2]"" W !?10,ADDR2
"RTN","MPINPDAT",107,0)
 ...I ADDR3]"" W !?10,ADDR3
"RTN","MPINPDAT",108,0)
 ...I CITY="" S CITY="UNKNOWN"
"RTN","MPINPDAT",109,0)
 ...S CSZ=CITY_", "_STATE_"   "_ZIP W !?10,CSZ
"RTN","MPINPDAT",110,0)
 ...I PHONE]"" W !?10,"PHONE: ",PHONE
"RTN","MPINPDAT",111,0)
 ..I $O(^MPI(985.5,AF,60,0)) D
"RTN","MPINPDAT",112,0)
 ...W !?6,"Race Information:"
"RTN","MPINPDAT",113,0)
 ..S RACE=0 F  S RACE=$O(^MPI(985.5,AF,60,RACE)) Q:'RACE  S RACENM=^MPI(985.5,AF,60,RACE,0) I RACENM]"" D
"RTN","MPINPDAT",114,0)
 ...S DIC=10,DIC(0)="QM",X="`"_RACENM,DA=AF D ^DIC K DIC I +Y S RACENM=$P(Y,"^",2)
"RTN","MPINPDAT",115,0)
 ...W !?10,RACENM
"RTN","MPINPDAT",116,0)
 ..I $O(^MPI(985.5,AF,50,0)) D
"RTN","MPINPDAT",117,0)
 ...K ALN,AFN,AMN,ASUF,ALNM
"RTN","MPINPDAT",118,0)
 ...W !?6,"Alias:"
"RTN","MPINPDAT",119,0)
 ...S ALIAS=0 F  S ALIAS=$O(^MPI(985.5,AF,50,ALIAS)) Q:'ALIAS  D
"RTN","MPINPDAT",120,0)
 ....S NODE=^MPI(985.5,AF,50,ALIAS,0),ALN=$P(NODE,"^"),AFN=$P(NODE,"^",2),AMN=$P(NODE,"^",3),ASUF=$P(NODE,"^",5)
"RTN","MPINPDAT",121,0)
 ....S ALNM=ALN_","_AFN_" "_AMN_" "_ASUF
"RTN","MPINPDAT",122,0)
 ....W !?10,ALNM
"RTN","MPINPDAT",123,0)
OTHRSIT ..I $D(^MPI(985.5,AF,71,0)) W !?6,"Other Site Association(s):" D
"RTN","MPINPDAT",124,0)
 ...N OTH,OTHPTR,OTHNM S OTH=0 F  S OTH=$O(^MPI(985.5,AF,71,OTH)) Q:'OTH  S OTHPTR=^MPI(985.5,AF,71,OTH,0) I OTHPTR]"" D
"RTN","MPINPDAT",125,0)
 ....S DIC=4,DIC(0)="QM",X="`"_OTHPTR,DA=AF D ^DIC K DIC I +Y S OTHNM=$P(Y,"^",2)
"RTN","MPINPDAT",126,0)
 ....W !?14,$$STA^XUAF4(OTHPTR),?20,"- ",OTHNM  ;** 36
"RTN","MPINPDAT",127,0)
 ..I DTLT]"" W !?6,"Date Last Treated     : ",DTLT
"RTN","MPINPDAT",128,0)
 ..I EVTR]"" W !?6,"Event Reason  : ",EVTR
"RTN","MPINPDAT",129,0)
 ..I DTLUP]"" W !?6,"Date Data Last Updated: ",DTLUP
"RTN","MPINPDAT",130,0)
OTHRID .W !!?2,"Other IDs:",!?2,"----------"
"RTN","MPINPDAT",131,0)
 .I '$O(^MPIVET(ICN,200,0)) W !?2,"None Found"
"RTN","MPINPDAT",132,0)
 .I $O(^MPIVET(ICN,200,0)) D
"RTN","MPINPDAT",133,0)
 ..S IDDA=0 F  S IDDA=$O(^MPIVET(ICN,200,IDDA)) Q:'IDDA  D
"RTN","MPINPDAT",134,0)
 ...S ID=$P(^MPIVET(ICN,200,IDDA,0),"^"),ALOC=$P(^(0),"^",3)
"RTN","MPINPDAT",135,0)
 ...I +ALOC S ALOC=$P($$NS^XUAF4(ALOC),"^")
"RTN","MPINPDAT",136,0)
 ...W !?2,ID,?24,"Assigning Location: ",ALOC
"RTN","MPINPDAT",137,0)
 .W !!
"RTN","MPINPDAT",138,0)
 .I '$D(DQFLG) S DIR(0)="E" D ^DIR K DIR
"RTN","MPINPDAT",139,0)
 I $D(DQFLG) I $G(CNT)>1 W !!,"<< ",CNT," ICNs found - scroll back for data. >>"
"RTN","MPINPDAT",140,0)
 K ^TMP("MPINPDAT",$J)
"RTN","MPINPDAT",141,0)
 Q
"RTN","MPINPDAT",142,0)
 ;
"RTN","MPINPDAT",143,0)
HDR ;
"RTN","MPINPDAT",144,0)
 I '$D(MPIR) W @IOF
"RTN","MPINPDAT",145,0)
 W !,"MPI Patient Data Search - For : << ",ICN," >>    ID State: ",IDST
"RTN","MPINPDAT",146,0)
 W !,"Printed ",PRTDT,!,LN
"RTN","MPINPDAT",147,0)
 Q
"RTN","MPINPDAT",148,0)
 ;
"RTN","MPINPDAT",149,0)
SET ;find data
"RTN","MPINPDAT",150,0)
 S NODE=^MPIVET(ICN,0),LNAME=$P(NODE,"^",2),FNAME=$P(NODE,"^",3)
"RTN","MPINPDAT",151,0)
 S MNAME=$P(NODE,"^",4),SUF=$P(NODE,"^",6),SEX=$P(NODE,"^",13)
"RTN","MPINPDAT",152,0)
 S DOB=$P(NODE,"^",8) I DOB'="" S DOB=$$FMTE^XLFDT(DOB)
"RTN","MPINPDAT",153,0)
 S DOD=$P(NODE,"^",11) I DOD'="" S DOD=$$FMTE^XLFDT(DOD)
"RTN","MPINPDAT",154,0)
 S SSN=$P(NODE,"^",14)  I SSN="" S SSN="UNKNOWN"
"RTN","MPINPDAT",155,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPINPDAT",156,0)
 I CMOR'="" S CMOR=$P($$NS^XUAF4(CMOR),"^")
"RTN","MPINPDAT",157,0)
 S NODE=^MPIVET(ICN,1),CRDT=$P(NODE,"^",5),CRFAC=$P(NODE,"^",6),CRBY=$P(NODE,"^",7)
"RTN","MPINPDAT",158,0)
 I +CRFAC S CRFAC=$$GET1^DIQ(4,+CRFAC_",",.01)
"RTN","MPINPDAT",159,0)
 I +CRDT S CRDT=$$FMTE^XLFDT($E(CRDT,1,12))
"RTN","MPINPDAT",160,0)
 S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^"),IDST=$S(IDST="P":"PERMANENT",IDST="T":"TEMPORARY",IDST="D":"DEACTIVATED",1:"NOT DEFINED")
"RTN","MPINPDAT",161,0)
 S ^TMP("MPINPDAT",$J,ICN)=SSN_"^"_LNAME_","_FNAME_" "_MNAME_" "_SUF_"^"_DOB_"^"_CMOR_"^"_SEX_"^"_DOD_"^"_CRDT_"^"_CRFAC_"^"_CRBY_"^"_IDST
"RTN","MPINPDAT",162,0)
 S AF=0 F  S AF=$O(^MPI(985.5,"AM",ICN,AF)) Q:'AF  D
"RTN","MPINPDAT",163,0)
 .S AF1=$$NS^XUAF4(AF),AFNAME=$P(AF1,"^"),AFSTA=$P(AF1,"^",2),AFIEN=$O(^MPI(985.5,"AM",ICN,AF,0))
"RTN","MPINPDAT",164,0)
 .S ^TMP("MPINPDAT",$J,ICN,AFNAME)=AFSTA_"^"_AFIEN
"RTN","MPINPDAT",165,0)
 Q
"RTN","MPINPDAT",166,0)
 ;
"RTN","MPINPDAT",167,0)
SET2 ;find site data from file 985.5
"RTN","MPINPDAT",168,0)
 S DFN=$P($G(^MPI(985.5,AF,0)),"^",3),AFDA=$P($G(^MPI(985.5,AF,0)),"^")  ;** 36
"RTN","MPINPDAT",169,0)
 ;check to see if Facility Type is for this TF is "Other" ;** 36
"RTN","MPINPDAT",170,0)
 S AFFLG=0 I AFDA D
"RTN","MPINPDAT",171,0)
 .S AFFT=$$GET1^DIQ(4,AFDA_",",13)
"RTN","MPINPDAT",172,0)
 .I AFFT="OTHER" S AFFLG=1
"RTN","MPINPDAT",173,0)
 S DFN=$P($G(^MPI(985.5,AF,0)),"^",3)
"RTN","MPINPDAT",174,0)
 S NODE1=$G(^MPI(985.5,AF,1)),NODE2=$G(^MPI(985.5,AF,2))
"RTN","MPINPDAT",175,0)
 S LNAME=$P(NODE1,"^",2),FNAME=$P(NODE1,"^",3),MNAME=$P(NODE1,"^",4),SUF=$P(NODE1,"^",6)
"RTN","MPINPDAT",176,0)
 S NAME=LNAME_","_FNAME_" "_MNAME_" "_SUF I LNAME="" S NAME=""
"RTN","MPINPDAT",177,0)
 S MOM=$P(NODE1,"^",7),SEX=$P(NODE1,"^",13)
"RTN","MPINPDAT",178,0)
 S DOB=$P(NODE1,"^",8) I DOB'="" S DOB=$$FMTE^XLFDT(DOB)
"RTN","MPINPDAT",179,0)
 S DOD=$P(NODE1,"^",11) I DOD'="" S DOD=$$FMTE^XLFDT(DOD)
"RTN","MPINPDAT",180,0)
 S SSN=$P(NODE1,"^",14)
"RTN","MPINPDAT",181,0)
 S POBC=$P(NODE1,"^",9),POBS=$P(NODE1,"^",10) I +POBS D
"RTN","MPINPDAT",182,0)
 .S POBS=$P($G(^DIC(5,POBS,0)),"^") I POBS="" S POBS="UNKNOWN"
"RTN","MPINPDAT",183,0)
 S MBI=$P($G(^MPI(985.5,AF,3)),"^",10) S MBI=$S(MBI="Y":"YES",1:"NO")
"RTN","MPINPDAT",184,0)
 S MS=$$GET1^DIQ(985.5,AF_",",40)
"RTN","MPINPDAT",185,0)
 S POW=$$GET1^DIQ(985.5,AF_",",48)
"RTN","MPINPDAT",186,0)
 S ETH=$G(^MPI(985.5,AF,70,1,0)) I ETH]"" S DIC=10.2,DIC(0)="QM",X="`"_ETH,DA=AF D ^DIC K DIC I +Y S ETH=$P(Y,"^",2)
"RTN","MPINPDAT",187,0)
 S GOT=0
"RTN","MPINPDAT",188,0)
 S ADDR1=$$GET1^DIQ(985.5,AF_",",41) I ADDR1]"" S GOT=1
"RTN","MPINPDAT",189,0)
 S ADDR2=$$GET1^DIQ(985.5,AF_",",42)
"RTN","MPINPDAT",190,0)
 S ADDR3=$$GET1^DIQ(985.5,AF_",",43)
"RTN","MPINPDAT",191,0)
 S CITY=$$GET1^DIQ(985.5,AF_",",44) I CITY]"" S GOT=1
"RTN","MPINPDAT",192,0)
 S STATE=$$GET1^DIQ(985.5,AF_",",45) I STATE]"" S GOT=1
"RTN","MPINPDAT",193,0)
 S ZIP=$$GET1^DIQ(985.5,AF_",",46) I ZIP]"" S GOT=1
"RTN","MPINPDAT",194,0)
 S PHONE=$$GET1^DIQ(985.5,AF_",",47) I PHONE]"" S GOT=1
"RTN","MPINPDAT",195,0)
 ;
"RTN","MPINPDAT",196,0)
 S CLAIM=$P(NODE2,"^"),EVTR=$$GET1^DIQ(985.5,+AF_",",30)
"RTN","MPINPDAT",197,0)
 S DTLT=$$FMTE^XLFDT($P(NODE2,"^",5)),DTLUP=$$FMTE^XLFDT($P(NODE2,"^",7))
"RTN","MPINPDAT",198,0)
 Q
"RTN","MPIP11")
0^222^B3493087
"RTN","MPIP11",1,0)
MPIP11 ;BIOFO/DLR - CLEANUP OF MISSING 985.5 NAME INFO ; 08/20/03
"RTN","MPIP11",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11**;30 Apr 99
"RTN","MPIP11",3,0)
 ;
"RTN","MPIP11",4,0)
 N CNT,FLD,X,ICN,SITE,MPILOC
"RTN","MPIP11",5,0)
 K ^XTMP("DLRMIS") S ^XTMP("DLRMIS",0)=DT+2_"^"_DT_"^MISSING NAME IN 985.5 CLEANUP" S CNT=0,X=0 F  S X=$O(^MPI(985.5,X)) Q:'X  S CNT=CNT+1 W:CNT#100000=0 !,CNT S CNT=CNT+1 I $D(^MPI(985.5,X,1)) I $P(^MPI(985.5,X,1),"^",2)="" D
"RTN","MPIP11",6,0)
 . S ^XTMP("DLRMIS","RCNT")=$G(^XTMP("DLRMIS","RCNT"))+1 S ICN=$P(^MPI(985.5,X,0),"^",2),SITE=$P(^(0),"^")
"RTN","MPIP11",7,0)
 . F FLD=2:1:6 L +^MPIVET(ICN):5 S $P(^MPI(985.5,X,1),"^",FLD)=$P(^MPIVET(ICN,0),"^",FLD) L -^MPIVET(ICN)
"RTN","MPIP11",8,0)
 . I SITE'=$P(^MPIVET(ICN,1),"^",2) S ^XTMP("DLRMIS",X)=ICN S ^XTMP("DLRMIS","MCNT")=$G(^XTMP("DLRMIS","MCNT"))+1 S MPILOC(SITE)=$$NS^XUAF4(SITE) D SEND^MPIA19(ICN,.MPILOC) K MPILOC
"RTN","MPIP11",9,0)
 Q
"RTN","MPIP16")
0^137^B8619898
"RTN","MPIP16",1,0)
MPIP16 ;BIR/CMC-POST INIT FOR MPI*1*167 ;5/12/04
"RTN","MPIP16",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**16**;30 Apr 99
"RTN","MPIP16",3,0)
 ;
"RTN","MPIP16",4,0)
PTXFR ; Create new x-ref in MPI FACILITY ASSOCIATION file (#985.5) on the DFN (#2)
"RTN","MPIP16",5,0)
 ;get ien for ^DD("IX" to place cross-reference
"RTN","MPIP16",6,0)
 D BMES^XPDUTL(">>> Creating new cross reference, 'ASD' on MPI FACILITY ASSOCIATION (#985.5) file, DFN (#2) and FACILITY ID (#.01)")
"RTN","MPIP16",7,0)
 N IEN,TIEN
"RTN","MPIP16",8,0)
 S IEN=0
"RTN","MPIP16",9,0)
 I $D(^DD("IX","IX","ASD")) D BMES^XPDUTL("X-Reference Already Exists") Q
"RTN","MPIP16",10,0)
 S TIEN=54
"RTN","MPIP16",11,0)
CHK I $D(^DD("IX",TIEN)) S TIEN=TIEN+1 G CHK
"RTN","MPIP16",12,0)
 S ^DD("IX",TIEN,0)="985.5^ASD^cross reference to be used by API to find ICN for a pt by dfn/site^R^^R^IR^I^985.5^^^^^S"
"RTN","MPIP16",13,0)
 S ^DD("IX",TIEN,.1,0)="^^1^1^3040512^"
"RTN","MPIP16",14,0)
 S ^DD("IX",TIEN,.1,1,0)="This cross reference will allow us to find a patient's ICN by dfn/site."
"RTN","MPIP16",15,0)
 S ^DD("IX",TIEN,1)="S ^MPI(985.5,""ASD"",$E(X(1),1,30),X(2),DA)="""""
"RTN","MPIP16",16,0)
 S ^DD("IX",TIEN,2)="K ^MPI(985.5,""ASD"",$E(X(1),1,30),X(2),DA)"
"RTN","MPIP16",17,0)
 S ^DD("IX",TIEN,2.5)="K ^MPI(985.5,""ASD"")"
"RTN","MPIP16",18,0)
 S ^DD("IX",TIEN,11.1,0)="^.114IA^2^2"
"RTN","MPIP16",19,0)
 S ^DD("IX",TIEN,11.1,1,0)="1^F^985.5^2^30^1^F"
"RTN","MPIP16",20,0)
 S ^DD("IX",TIEN,11.1,1,3)=""
"RTN","MPIP16",21,0)
 S ^DD("IX",TIEN,11.1,2,0)="2^F^985.5^.01^^2^F"
"RTN","MPIP16",22,0)
 S ^DD("IX",TIEN,11.1,2,3)=""
"RTN","MPIP16",23,0)
 S ^DD("IX",TIEN,11.1,"AC",1,1)=""
"RTN","MPIP16",24,0)
 S ^DD("IX",TIEN,11.1,"AC",2,2)=""
"RTN","MPIP16",25,0)
 S ^DD("IX",TIEN,11.1,"B",1,1)=""
"RTN","MPIP16",26,0)
 S ^DD("IX",TIEN,11.1,"B",2,2)=""
"RTN","MPIP16",27,0)
 S ^DD("IX",TIEN,11.1,"BB",1,1)=""
"RTN","MPIP16",28,0)
 S ^DD("IX",TIEN,11.1,"BB",2,2)=""
"RTN","MPIP16",29,0)
 S ^DD("IX","B",985.5,TIEN)=""
"RTN","MPIP16",30,0)
 S ^DD("IX","AC",985.5,TIEN)=""
"RTN","MPIP16",31,0)
 S ^DD("IX","F",985.5,.01,TIEN,2)=""
"RTN","MPIP16",32,0)
 S ^DD("IX","F",985.5,2,TIEN,1)=""
"RTN","MPIP16",33,0)
 S ^DD("IX","IX","ASD",TIEN)=""
"RTN","MPIP16",34,0)
 Q
"RTN","MPIP16",35,0)
 ;
"RTN","MPIP16",36,0)
TASK ;Setting cross reference for existing entries
"RTN","MPIP16",37,0)
 ;N DIK S DIK="^MPI(985.5,",DIK(1)="2^ASD" D ENALL^DIK
"RTN","MPIP16",38,0)
 S ZTIO=""
"RTN","MPIP16",39,0)
 S ZTRTN="QUE^MPIP16",ZTDTH=$H,ZTDESC="MPI SETUP 'ASD' X-REF"
"RTN","MPIP16",40,0)
 D ^%ZTLOAD
"RTN","MPIP16",41,0)
 K ZTDESC,ZTDTH,ZTIO,ZTREQ,ZTRTN,ZTSAVE
"RTN","MPIP16",42,0)
 Q
"RTN","MPIP16",43,0)
QUE ; setting of "ASD" x-ref for existing entries
"RTN","MPIP16",44,0)
 N IEN,CNT,%,START,STOP
"RTN","MPIP16",45,0)
 S IEN=0,CNT=0
"RTN","MPIP16",46,0)
 D NOW^%DTC S START=%
"RTN","MPIP16",47,0)
 F  S IEN=$O(^MPI(985.5,IEN)) Q:IEN=""  D SET(IEN,.CNT)
"RTN","MPIP16",48,0)
 D NOW^%DTC S STOP=%
"RTN","MPIP16",49,0)
 D MAIL(START,STOP,CNT)
"RTN","MPIP16",50,0)
 K CNT
"RTN","MPIP16",51,0)
 Q
"RTN","MPIP16",52,0)
SET(IEN,CNT) ;
"RTN","MPIP16",53,0)
 N DFN,SITE
"RTN","MPIP16",54,0)
LOOP L +^MPI(985.5,IEN):10 I '$T D LOOP
"RTN","MPIP16",55,0)
 S DFN=$P($G(^MPI(985.5,IEN,0)),"^",3)
"RTN","MPIP16",56,0)
 I DFN=""!(DFN<0) L -^MPI(985.5,IEN) Q
"RTN","MPIP16",57,0)
 S SITE=$P($G(^MPI(985.5,IEN,0)),"^",1)
"RTN","MPIP16",58,0)
 I SITE=""!(SITE<0) L -^MPI(985.5,IEN) Q
"RTN","MPIP16",59,0)
 S ^MPI(985.5,"ASD",DFN,SITE,IEN)=""
"RTN","MPIP16",60,0)
 S CNT=CNT+1
"RTN","MPIP16",61,0)
 L -^MPI(985.5,IEN)
"RTN","MPIP16",62,0)
 Q
"RTN","MPIP16",63,0)
MAIL(START,STOP,CNT) ;
"RTN","MPIP16",64,0)
 N XMDUZ,XMSUB,XMY,MPI,XMTEXT
"RTN","MPIP16",65,0)
 S XMDUZ="MPI AUSTIN"
"RTN","MPIP16",66,0)
 S XMSUB="Set 'ASD' x-ref complete"
"RTN","MPIP16",67,0)
 S XMY("G.CIRN DEV@DOMAIN.EXT")="",XMTEXT="MPI(1,"
"RTN","MPIP16",68,0)
 S MPI(1,1)="The setting of the 'ASD' x-ref has completed"
"RTN","MPIP16",69,0)
 S MPI(1,2)="  Start Time: "_START
"RTN","MPIP16",70,0)
 S MPI(1,3)="  End Time: "_STOP
"RTN","MPIP16",71,0)
 S MPI(1,4)=""
"RTN","MPIP16",72,0)
 S MPI(1,5)=" Set "_CNT_" 'ASD' x-refs"
"RTN","MPIP16",73,0)
 D ^XMD
"RTN","MPIP16",74,0)
 Q
"RTN","MPIP27")
0^138^B6596863
"RTN","MPIP27",1,0)
MPIP27 ;BIR/CMC-POST INIT FOR MPI*1*27 ;5/12/04
"RTN","MPIP27",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**27**;30 Apr 99
"RTN","MPIP27",3,0)
 ;
"RTN","MPIP27",4,0)
PTXFR ; Create new x-ref in MPI SERVER EXCEPTIONS file (#985.9) on the STATUS (#.06) field
"RTN","MPIP27",5,0)
 D BMES^XPDUTL(">>> Creating new cross reference on MPI SERVER EXCEPTIONS (#985.9) file, STATUS (#.06) and EXCEPTION TYPE (#.02)")
"RTN","MPIP27",6,0)
 ; Get next ien for ^DD("IX" to place cross-reference
"RTN","MPIP27",7,0)
 N IEN,TIEN
"RTN","MPIP27",8,0)
 S IEN=0
"RTN","MPIP27",9,0)
 I $D(^DD("IX","IX","ST")) D BMES^XPDUTL("X-Reference Already Exists") Q
"RTN","MPIP27",10,0)
 S TIEN=53
"RTN","MPIP27",11,0)
CHK I $D(^DD("IX",TIEN)) S TIEN=TIEN+1 G CHK
"RTN","MPIP27",12,0)
 S ^DD("IX",TIEN,0)="985.9^ST^cross reference on status and exception type^R^^R^IR^I^985.9^^^^^LS"
"RTN","MPIP27",13,0)
 S ^DD("IX",TIEN,.1,0)="^^3^3^3040512^"
"RTN","MPIP27",14,0)
 S ^DD("IX",TIEN,.1,1,0)="This cross reference will be used to show the Exceptions 238 and 239 with"
"RTN","MPIP27",15,0)
 S ^DD("IX",TIEN,.1,2,0)="a status of 1 or 2 at the top of the list when the user first enters the "
"RTN","MPIP27",16,0)
 S ^DD("IX",TIEN,.1,3,0)="exception handler."
"RTN","MPIP27",17,0)
 S ^DD("IX",TIEN,1)="S ^MPI(985.9,""ST"",$E(X(1),1,3),$E(X(2),1,3),DA)="""""
"RTN","MPIP27",18,0)
 S ^DD("IX",TIEN,2)="K ^MPI(985.9,""ST"",$E(X(1),1,3),$E(X(2),1,3),DA)"
"RTN","MPIP27",19,0)
 S ^DD("IX",TIEN,2.5)="K ^MPI(985.9,""ST"")"
"RTN","MPIP27",20,0)
 S ^DD("IX",TIEN,11.1,0)="^.114IA^2^2"
"RTN","MPIP27",21,0)
 S ^DD("IX",TIEN,11.1,1,0)="1^F^985.9^.06^3^1^F"
"RTN","MPIP27",22,0)
 S ^DD("IX",TIEN,11.1,1,3)=""
"RTN","MPIP27",23,0)
 S ^DD("IX",TIEN,11.1,2,0)="2^F^985.9^.02^3^2^F"
"RTN","MPIP27",24,0)
 S ^DD("IX",TIEN,11.1,2,3)=""
"RTN","MPIP27",25,0)
 S ^DD("IX",TIEN,11.1,"AC",1,1)=""
"RTN","MPIP27",26,0)
 S ^DD("IX",TIEN,11.1,"AC",2,2)=""
"RTN","MPIP27",27,0)
 S ^DD("IX",TIEN,11.1,"B",1,1)=""
"RTN","MPIP27",28,0)
 S ^DD("IX",TIEN,11.1,"B",2,2)=""
"RTN","MPIP27",29,0)
 S ^DD("IX",TIEN,11.1,"BB",1,1)=""
"RTN","MPIP27",30,0)
 S ^DD("IX",TIEN,11.1,"BB",2,2)=""
"RTN","MPIP27",31,0)
 S ^DD("IX","IX","ST",TIEN)=""
"RTN","MPIP27",32,0)
 S ^DD("IX","BB",985.9,"ST",TIEN)=""
"RTN","MPIP27",33,0)
 S ^DD("IX","B",985.9,TIEN)=""
"RTN","MPIP27",34,0)
 S ^DD("IX","AC",985.9,TIEN)=""
"RTN","MPIP27",35,0)
 S ^DD("IX","F",985.9,.02,TIEN,2)=""
"RTN","MPIP27",36,0)
 S ^DD("IX","F",985.9,.06,TIEN,1)=""
"RTN","MPIP27",37,0)
 ;
"RTN","MPIP27",38,0)
 D BMES^XPDUTL(">>> Queue off Setting new cross reference on MPI SERVER EXCEPTIONS (#985.9) file, STATUS (#.06) and EXCEPTION TYPE (#.02) - 'ST' - for existing entries")
"RTN","MPIP27",39,0)
 ;Setting cross reference for existing entries
"RTN","MPIP27",40,0)
 N DIK S DIK="^MPI(985.9,",DIK(1)=".06^ST" D ENALL^DIK
"RTN","MPIP27",41,0)
 Q
"RTN","MPIPDAT")
0^139^B15457573
"RTN","MPIPDAT",1,0)
MPIPDAT ;CIOFO-SF/CMC REMOTE PDAT FROM MPI ;10/16/01
"RTN","MPIPDAT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3**; 30 Apr 99
"RTN","MPIPDAT",3,0)
 ;
"RTN","MPIPDAT",4,0)
PATINFO(RETURN,ICN,SSN,RPC) ;
"RTN","MPIPDAT",5,0)
 ;
"RTN","MPIPDAT",6,0)
 N MPINODE,ARRAY,TICN,TSSN,TEXT,CNTD,PICN,XX,NAME,X
"RTN","MPIPDAT",7,0)
 I $G(ICN)=""&($G(SSN)="") S RETURN="-1^NO ICN OR SSN PASSED" Q
"RTN","MPIPDAT",8,0)
 S TICN=ICN,TSSN=SSN,TEXT=""
"RTN","MPIPDAT",9,0)
 I $G(SSN)'="" D
"RTN","MPIPDAT",10,0)
 .S ICN=$$GETICNS(SSN)
"RTN","MPIPDAT",11,0)
 .I RPC=1 S TEXT="MPI(""SSN USED"")="
"RTN","MPIPDAT",12,0)
 .S RETURN(1,"SSN USED")=TEXT_""""_SSN_"""" ; possible to have multiple entries with same SSN
"RTN","MPIPDAT",13,0)
 S PICN=ICN,CNTD=0
"RTN","MPIPDAT",14,0)
 F XX=1:1 S ICN=$P(PICN,"^",XX) Q:ICN=""  D
"RTN","MPIPDAT",15,0)
 .S CNTD=CNTD+1,NAME=""
"RTN","MPIPDAT",16,0)
 .I '$D(^MPIVET(+ICN)) S RETURN(XX)="ICN DOESN'T EXIST. ICN= "_ICN Q
"RTN","MPIPDAT",17,0)
 .I RPC=1 S RETURN(XX,"ICN")="MPI("_+ICN_",""ICN"")="_""""_+ICN_""""
"RTN","MPIPDAT",18,0)
 .I RPC=0 S RETURN(XX,"ICN")=""""_+ICN_""""
"RTN","MPIPDAT",19,0)
 .D GETS^DIQ(985,+ICN_",",".01;1;2;3;4;5;6;7;8;9;10;12;13;15;16","IE","ARRAY")
"RTN","MPIPDAT",20,0)
 .F X=.01,1,2,3,4,5,6,7,8,9,10,12,13,15,16 D
"RTN","MPIPDAT",21,0)
 ..I X=.01 D  Q
"RTN","MPIPDAT",22,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""ICN"")="
"RTN","MPIPDAT",23,0)
 ...S RETURN(ICN,"ICN")=TEXT_""""_ARRAY(985,ICN_",",.01,"E")_""""
"RTN","MPIPDAT",24,0)
 ..I X=1 D  Q
"RTN","MPIPDAT",25,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""LAST NAME"")="
"RTN","MPIPDAT",26,0)
 ...S RETURN(ICN,"LAST NAME")=TEXT_""""_ARRAY(985,ICN_",",1,"E")_""""
"RTN","MPIPDAT",27,0)
 ...S NAME=ARRAY(985,ICN_",",1,"E")_","
"RTN","MPIPDAT",28,0)
 ..I X=2 D  Q
"RTN","MPIPDAT",29,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""FIRST NAME"")="
"RTN","MPIPDAT",30,0)
 ...S RETURN(ICN,"FIRST NAME")=TEXT_""""_ARRAY(985,ICN_",",2,"E")_""""
"RTN","MPIPDAT",31,0)
 ...S NAME=NAME_ARRAY(985,ICN_",",2,"E")
"RTN","MPIPDAT",32,0)
 ..I X=3 D  Q
"RTN","MPIPDAT",33,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""MIDDLE NAME"")="
"RTN","MPIPDAT",34,0)
 ...S RETURN(ICN,"MIDDLE NAME")=TEXT_""""_ARRAY(985,ICN_",",3,"E")_""""
"RTN","MPIPDAT",35,0)
 ...I ARRAY(985,ICN_",",3,"E")'="" S NAME=NAME_" "_ARRAY(985,ICN_",",3,"E")
"RTN","MPIPDAT",36,0)
 ..I X=4 D  Q
"RTN","MPIPDAT",37,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""NAME PREFIX"")="
"RTN","MPIPDAT",38,0)
 ...S RETURN(ICN,"NAME PREFIX")=TEXT_""""_ARRAY(985,ICN_",",4,"E")_""""
"RTN","MPIPDAT",39,0)
 ..I X=5 D  Q
"RTN","MPIPDAT",40,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""NAME SUFFIX"")="
"RTN","MPIPDAT",41,0)
 ...S RETURN(ICN,"NAME SUFFIX")=TEXT_""""_ARRAY(985,ICN_",",5,"E")_""""
"RTN","MPIPDAT",42,0)
 ...I ARRAY(985,ICN_",",5,"E")'="" S NAME=NAME_" "_ARRAY(985,ICN_",",5,"E")
"RTN","MPIPDAT",43,0)
 ..I X=12 D  Q
"RTN","MPIPDAT",44,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""SEX"")="
"RTN","MPIPDAT",45,0)
 ...S RETURN(ICN,"SEX")=TEXT_""""_ARRAY(985,ICN_",",12,"E")_""""
"RTN","MPIPDAT",46,0)
 ..I X=7 D  Q
"RTN","MPIPDAT",47,0)
 ...N TDOB S TDOB=ARRAY(985,ICN_",",7,"I")_""""
"RTN","MPIPDAT",48,0)
 ...I ARRAY(985,ICN_",",7,"E")'="" S ARRAY(985,ICN_",",7,"E")=$E(TDOB,4,5)_"/"_$E(TDOB,6,7)_"/"_$S($E(TDOB,1)=1:18,$E(TDOB,1)=2:19,$E(TDOB,1)=3:20)_$E(TDOB,2,3)
"RTN","MPIPDAT",49,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""DOB"")="
"RTN","MPIPDAT",50,0)
 ...S RETURN(ICN,"DOB")=TEXT_""""_ARRAY(985,ICN_",",7,"E")_""""
"RTN","MPIPDAT",51,0)
 ..I X=6 D  Q
"RTN","MPIPDAT",52,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""MMN"")="
"RTN","MPIPDAT",53,0)
 ...S RETURN(ICN,"MMN")=TEXT_""""_ARRAY(985,ICN_",",6,"E")_""""
"RTN","MPIPDAT",54,0)
 ..I X=10 D  Q
"RTN","MPIPDAT",55,0)
 ...N TDOD S TDOD=ARRAY(985,ICN_",",10,"I")_""""
"RTN","MPIPDAT",56,0)
 ...I ARRAY(985,ICN_",",10,"E")'="" S ARRAY(985,ICN_",",10,"E")=$E(TDOD,4,5)_"/"_$E(TDOD,6,7)_"/"_$S($E(TDOD,1)=1:18,$E(TDOD,1)=2:19,$E(TDOD,1)=3:20)_$E(TDOD,2,3)
"RTN","MPIPDAT",57,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""DOD"")="
"RTN","MPIPDAT",58,0)
 ...S RETURN(ICN,"DOD")=TEXT_""""_ARRAY(985,ICN_",",10,"E")_""""
"RTN","MPIPDAT",59,0)
 ..I X=8 D  Q
"RTN","MPIPDAT",60,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""POBC"")="
"RTN","MPIPDAT",61,0)
 ...S RETURN(ICN,"POBC")=TEXT_""""_ARRAY(985,ICN_",",8,"E")_""""
"RTN","MPIPDAT",62,0)
 ..I X=9 D  Q
"RTN","MPIPDAT",63,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""POBS"")="
"RTN","MPIPDAT",64,0)
 ...S RETURN(ICN,"POBS")=TEXT_""""_$G(ARRAY(985,ICN_",",9,"E"))_""""
"RTN","MPIPDAT",65,0)
 ..I X=13 D  Q
"RTN","MPIPDAT",66,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""SSN"")="
"RTN","MPIPDAT",67,0)
 ...S RETURN(ICN,"SSN")=TEXT_""""_ARRAY(985,ICN_",",13,"E")_""""
"RTN","MPIPDAT",68,0)
 ..I X=15 D  Q
"RTN","MPIPDAT",69,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""CLAIM #"")="
"RTN","MPIPDAT",70,0)
 ...S RETURN(ICN,"CLAIM #")=TEXT_""""_ARRAY(985,ICN_",",15,"E")_""""
"RTN","MPIPDAT",71,0)
 ..I X=16 D  Q
"RTN","MPIPDAT",72,0)
 ...I RPC=1 S TEXT="MPI("_ICN_",""CMOR"")="
"RTN","MPIPDAT",73,0)
 ...S RETURN(ICN,"CMOR")=TEXT_""""_ARRAY(985,ICN_",",16,"E")_""""
"RTN","MPIPDAT",74,0)
 .I RPC=1 S TEXT="MPI("_ICN_",""NAME"")="
"RTN","MPIPDAT",75,0)
 .S RETURN(ICN,"NAME")=TEXT_""""_NAME_""""
"RTN","MPIPDAT",76,0)
 Q
"RTN","MPIPDAT",77,0)
 ;
"RTN","MPIPDAT",78,0)
GETICNS(SSN) ;
"RTN","MPIPDAT",79,0)
 ; Find all ICNs for a given SSN -- all if there are more than one
"RTN","MPIPDAT",80,0)
 ; patient with that SSN
"RTN","MPIPDAT",81,0)
 ; SSN - SSN for patient attempted to be found in the Patient file (#2)
"RTN","MPIPDAT",82,0)
 ; Returned is a list of ICNs for this SSN
"RTN","MPIPDAT",83,0)
 ;
"RTN","MPIPDAT",84,0)
 N LIST,ICN
"RTN","MPIPDAT",85,0)
 S (ICN,LIST)=""
"RTN","MPIPDAT",86,0)
 I $D(^MPIVET("SSN",SSN))="" S LIST="-1^NO SUCH SSN" Q
"RTN","MPIPDAT",87,0)
 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:ICN=""  D
"RTN","MPIPDAT",88,0)
 .I +ICN>0 S LIST=LIST_ICN_"^"
"RTN","MPIPDAT",89,0)
 Q LIST
"RTN","MPIPEXT")
0^140^B37899850
"RTN","MPIPEXT",1,0)
MPIPEXT ;SFCIO/CMC-EXTENDED PDAT - RPC ;26 JUN 01
"RTN","MPIPEXT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3**;30 Apr 99
"RTN","MPIPEXT",3,0)
 ;
"RTN","MPIPEXT",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIPEXT",5,0)
 ;  EN1^XWB2HL7 - #3144
"RTN","MPIPEXT",6,0)
 ;  RTNDATA^XWBDRPC - #3149
"RTN","MPIPEXT",7,0)
 ;
"RTN","MPIPEXT",8,0)
PEXT(RETURN,ICN,SSN,LOCAL,ALL,SITE,RPC) ;get patient info array
"RTN","MPIPEXT",9,0)
 N MPINODE,ARRAY,TICN,TSSN
"RTN","MPIPEXT",10,0)
 I RPC="" S RPC=0 ; default is 0 for RPC
"RTN","MPIPEXT",11,0)
 I $G(ICN)=""&($G(SSN)="") S RETURN="-1^NO ICN OR SSN PASSED" Q
"RTN","MPIPEXT",12,0)
 I $G(LOCAL)=""&($G(ALL)="")&($G(SITE)="") S ALL=1
"RTN","MPIPEXT",13,0)
 ; ^ All is the default
"RTN","MPIPEXT",14,0)
 I LOCAL=1 D PATINFO^MPIPDAT(.RETURN,ICN,SSN,0) Q
"RTN","MPIPEXT",15,0)
 I ALL=1 D ALL(.RETURN,ICN,SSN,RPC) Q
"RTN","MPIPEXT",16,0)
 I SITE'="" D SITE(.RETURN,ICN,SSN,SITE,RPC)
"RTN","MPIPEXT",17,0)
 Q
"RTN","MPIPEXT",18,0)
 ;
"RTN","MPIPEXT",19,0)
SITE(RETS,ICN,SSN,SITE,RPC) ;
"RTN","MPIPEXT",20,0)
 ; request PDAT from one remote site
"RTN","MPIPEXT",21,0)
 I $G(SITE)="" S RETS="-1^No Site Passed" Q
"RTN","MPIPEXT",22,0)
 I $G(ICN)=""&($G(SSN)="") S RETS="-1^No ICN or SSN passed" Q
"RTN","MPIPEXT",23,0)
 I ICN="" S EXIST=$$ASK(SSN,SITE)
"RTN","MPIPEXT",24,0)
 I SSN="" S EXIST=$$ASK(ICN,SITE)
"RTN","MPIPEXT",25,0)
 Q:EXIST=-1
"RTN","MPIPEXT",26,0)
 I EXIST=1 D
"RTN","MPIPEXT",27,0)
 .I ICN="" S RETS(0)=$G(^XTMP("MPI EXT PDAT"_SSN,SITE))
"RTN","MPIPEXT",28,0)
 .I SSN="" S RETS(0)=$G(^XTMP("MPI EXT PDAT"_ICN,SITE))
"RTN","MPIPEXT",29,0)
 .I RETS(0)="" S EXIST=0
"RTN","MPIPEXT",30,0)
 I EXIST=0 D
"RTN","MPIPEXT",31,0)
 .I ICN="" K ^XTMP("MPI EXT PDAT"_SSN,SITE)
"RTN","MPIPEXT",32,0)
 .I SSN="" K ^XTMP("MPI EXT PDAT"_ICN,SITE)
"RTN","MPIPEXT",33,0)
 .D EN1^XWB2HL7(.RETS,SITE,"MPIF EXT PDAT REMOTE",1,ICN,SSN,1)
"RTN","MPIPEXT",34,0)
 .I $G(ICN)'="" S ^XTMP("MPI EXT PDAT"_ICN,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPI EXT PDAT"_ICN,SITE)=RETS(0)_"^"_$P(^XTMP("MPI EXT PDAT"_ICN,0),"^",2)
"RTN","MPIPEXT",35,0)
 .I $G(SSN)'="" S ^XTMP("MPI EXT PDAT"_SSN,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPI EXT PDAT"_SSN,SITE)=RETS(0)_"^"_$P(^XTMP("MPI EXT PDAT"_ICN,0),"^",2)
"RTN","MPIPEXT",36,0)
 ;
"RTN","MPIPEXT",37,0)
 N CNT,SUB
"RTN","MPIPEXT",38,0)
 S CNT=0
"RTN","MPIPEXT",39,0)
AGAIN H 10 K RES D RTNDATA^XWBDRPC(.RES,RETS(0)) S CNT=CNT+1
"RTN","MPIPEXT",40,0)
 I +RES(0)=-1&(RES(0)["Not DONE") I CNT<11 G AGAIN
"RTN","MPIPEXT",41,0)
 I +RES(0)=-1&(RES(0)["Not DONE") I CNT>10 S RETS(SITE)="Unable to get data" Q
"RTN","MPIPEXT",42,0)
 I RES(0)="0^New" I CNT<11 G AGAIN
"RTN","MPIPEXT",43,0)
 I RES(0)="0^New" I CNT>10 S RETS(SITE)="Unable to get data" Q
"RTN","MPIPEXT",44,0)
 I +RES(0)=-1 S RETS=RES(0) Q
"RTN","MPIPEXT",45,0)
 I RES'="" I CNT<11 G AGAIN
"RTN","MPIPEXT",46,0)
 I RES'="" I CNT>10 S RETS(SITE)="Unable to get data" Q
"RTN","MPIPEXT",47,0)
 D REFORMAT(.RES)
"RTN","MPIPEXT",48,0)
 K RETS,EXIST
"RTN","MPIPEXT",49,0)
 M RETS(SITE)=RES
"RTN","MPIPEXT",50,0)
 K RES
"RTN","MPIPEXT",51,0)
 Q
"RTN","MPIPEXT",52,0)
 ;
"RTN","MPIPEXT",53,0)
ALL(RETS2,ICN,SSN,RPC) ;
"RTN","MPIPEXT",54,0)
 ; request PDAT from ALL TFs and the MPI
"RTN","MPIPEXT",55,0)
 I $G(ICN)=""&($G(SSN)="") S RETS1="-1^No ICN or SSN passed" Q
"RTN","MPIPEXT",56,0)
 N ICN2
"RTN","MPIPEXT",57,0)
 I ICN="" S EXIST=$$ASK(SSN,1)
"RTN","MPIPEXT",58,0)
 I SSN="" S EXIST=$$ASK(ICN,1)
"RTN","MPIPEXT",59,0)
 Q:EXIST=-1
"RTN","MPIPEXT",60,0)
 I SSN'="" S ICN=$$GETICNS^MPIPDAT(SSN)
"RTN","MPIPEXT",61,0)
 F XX=1:1 S ICN2=$P(ICN,"^",XX) Q:ICN2=""  D
"RTN","MPIPEXT",62,0)
 .D ALL2(ICN2,SSN,1,.RETS2,EXIST)
"RTN","MPIPEXT",63,0)
 K EXIST
"RTN","MPIPEXT",64,0)
 Q
"RTN","MPIPEXT",65,0)
 ;
"RTN","MPIPEXT",66,0)
ALL2(ICN,SSN,RPC,RETS1,EXIST) ;
"RTN","MPIPEXT",67,0)
 D GETTFS(ICN,.ARR)
"RTN","MPIPEXT",68,0)
 I +ARR=-1 G MPI
"RTN","MPIPEXT",69,0)
 S SITE=""
"RTN","MPIPEXT",70,0)
 F  S SITE=$O(ARR(SITE)) Q:SITE=""  D
"RTN","MPIPEXT",71,0)
 .K RETS1
"RTN","MPIPEXT",72,0)
 .I EXIST=1 D
"RTN","MPIPEXT",73,0)
 ..I ICN="" S RETS1(0)=$G(^XTMP("MPI EXT PDAT"_SSN,SITE))
"RTN","MPIPEXT",74,0)
 ..I SSN="" S RETS1(0)=$G(^XTMP("MPI EXT PDAT"_ICN,SITE))
"RTN","MPIPEXT",75,0)
 ..I RETS1(0)="" S EXIST=0
"RTN","MPIPEXT",76,0)
 .I EXIST=0 D
"RTN","MPIPEXT",77,0)
 ..I ICN="" K ^XTMP("MPI EXT PDAT"_SSN,SITE)
"RTN","MPIPEXT",78,0)
 ..I SSN="" K ^XTMP("MPI EXT PDAT"_ICN,SITE)
"RTN","MPIPEXT",79,0)
 ..D EN1^XWB2HL7(.RETS1,SITE,"MPIF EXT PDAT REMOTE",1,ICN,SSN,1)
"RTN","MPIPEXT",80,0)
 ..I $G(ICN)'="" S ^XTMP("MPI EXT PDAT"_ICN,SITE,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPI EXT PDAT"_ICN,SITE)=RETS1(0)
"RTN","MPIPEXT",81,0)
 ..I $G(SSN)'="" S ^XTMP("MPI EXT PDAT"_SSN,SITE,0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_"^"_$$NOW^XLFDT_"^"_"Remote data from site",^XTMP("MPI EXT PDAT"_SSN,SITE)=RETS1(0)
"RTN","MPIPEXT",82,0)
 ;
"RTN","MPIPEXT",83,0)
MPI ;
"RTN","MPIPEXT",84,0)
 K RETS1,RES,RESS2
"RTN","MPIPEXT",85,0)
 N ZNODE,IEN
"RTN","MPIPEXT",86,0)
 H 10
"RTN","MPIPEXT",87,0)
 I SSN="" S IEN=ICN
"RTN","MPIPEXT",88,0)
 I ICN="" S IEN=SSN
"RTN","MPIPEXT",89,0)
 S SITE=""
"RTN","MPIPEXT",90,0)
 F  S SITE=$O(^XTMP("MPI EXT PDAT"_IEN,SITE)) Q:SITE=""  D
"RTN","MPIPEXT",91,0)
 .S ZNODE=$G(^XTMP("MPI EXT PDAT"_IEN,SITE))
"RTN","MPIPEXT",92,0)
 .K RES
"RTN","MPIPEXT",93,0)
 .D RET(.RES,SITE,ZNODE)
"RTN","MPIPEXT",94,0)
 .K RETS1(SITE)
"RTN","MPIPEXT",95,0)
 .M RETS1(SITE)=RES
"RTN","MPIPEXT",96,0)
 .K RES
"RTN","MPIPEXT",97,0)
 ;
"RTN","MPIPEXT",98,0)
 K RES,RESS2
"RTN","MPIPEXT",99,0)
 D PATINFO^MPIPDAT(.RESS2,ICN,SSN,0)
"RTN","MPIPEXT",100,0)
 M RETS1("MPI")=RESS2
"RTN","MPIPEXT",101,0)
 K RESS2,ARR
"RTN","MPIPEXT",102,0)
 Q
"RTN","MPIPEXT",103,0)
 ;
"RTN","MPIPEXT",104,0)
RET(REST,SITE,IEN) ;
"RTN","MPIPEXT",105,0)
 ; RETRIEVING DATA
"RTN","MPIPEXT",106,0)
 N RES1,CNT S CNT=0
"RTN","MPIPEXT",107,0)
AGAIN1 H 10 K RES1,REST D RTNDATA^XWBDRPC(.RES1,IEN) S CNT=CNT+1
"RTN","MPIPEXT",108,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT<11 G AGAIN1
"RTN","MPIPEXT",109,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT>10 S REST(SITE)="Unable to get data" Q
"RTN","MPIPEXT",110,0)
 I RES1(0)="0^New" I CNT<11 G AGAIN1
"RTN","MPIPEXT",111,0)
 I RES1(0)="0^New" I CNT>10 S REST(SITE)="Unable to get data" Q
"RTN","MPIPEXT",112,0)
 I +RES1(0)=-1 S REST(SITE)=RES1(0) Q
"RTN","MPIPEXT",113,0)
 I RES1'="" I CNT<11 G AGAIN
"RTN","MPIPEXT",114,0)
 I RES1'="" I CNT>10 S REST(SITE)="Unable to get data" Q
"RTN","MPIPEXT",115,0)
 D REFORMAT(.RES1)
"RTN","MPIPEXT",116,0)
 K REST
"RTN","MPIPEXT",117,0)
 M REST=RES1
"RTN","MPIPEXT",118,0)
 Q
"RTN","MPIPEXT",119,0)
 ;
"RTN","MPIPEXT",120,0)
GETTFS(ICN,ARRAY) ; get list of TF station numbers for a patient (dfn)
"RTN","MPIPEXT",121,0)
 N SITE,CNT
"RTN","MPIPEXT",122,0)
 S SITE="",CNT=0
"RTN","MPIPEXT",123,0)
 I '$D(^MPI(985.5,"AM",ICN)) S ARRAY="-1^No treating facilities for this ICN" Q
"RTN","MPIPEXT",124,0)
 F  S SITE=$O(^MPI(985.5,"AM",ICN,SITE)) Q:SITE=""  D
"RTN","MPIPEXT",125,0)
 .S CNT=CNT+1
"RTN","MPIPEXT",126,0)
 .S ARRAY($P($$NNT^XUAF4(SITE),"^",2))=""
"RTN","MPIPEXT",127,0)
 I CNT=0 S ARRAY="-1^No treating facilities for this ICN"
"RTN","MPIPEXT",128,0)
 S ARRAY=CNT
"RTN","MPIPEXT",129,0)
 Q
"RTN","MPIPEXT",130,0)
 ;
"RTN","MPIPEXT",131,0)
REFORMAT(ARRAY) ; Reformat from RPC=1 format to RPC=0 format
"RTN","MPIPEXT",132,0)
 I $O(ARRAY(0))="" S ARRAY(0)="Unable to get data" Q
"RTN","MPIPEXT",133,0)
 N XX,ARR,TARR
"RTN","MPIPEXT",134,0)
 S XX=""
"RTN","MPIPEXT",135,0)
 F  S XX=$O(ARRAY(XX)) Q:XX=""  D
"RTN","MPIPEXT",136,0)
 .I XX=0 S TARR=$P(ARRAY(XX),"(")
"RTN","MPIPEXT",137,0)
 .S ARR=$P(ARRAY(XX),"=")
"RTN","MPIPEXT",138,0)
 .S @ARR=$P(ARRAY(XX),"=",2)
"RTN","MPIPEXT",139,0)
 K ARRAY
"RTN","MPIPEXT",140,0)
 M ARRAY=@TARR
"RTN","MPIPEXT",141,0)
 K @TARR
"RTN","MPIPEXT",142,0)
 Q
"RTN","MPIPEXT",143,0)
 ;
"RTN","MPIPEXT",144,0)
ASK(ICNSSN,SITE) ; Function to check if there has been a previous request made 
"RTN","MPIPEXT",145,0)
 ; for this ICN/SSN.  If so, ask the user if they wish to view if or 
"RTN","MPIPEXT",146,0)
 ; create a new request.
"RTN","MPIPEXT",147,0)
 ;
"RTN","MPIPEXT",148,0)
 N DIR,X,Y,SITE1
"RTN","MPIPEXT",149,0)
 I '$D(^XTMP("MPI EXT PDAT"_ICNSSN)) Q 0
"RTN","MPIPEXT",150,0)
 I SITE=1 D
"RTN","MPIPEXT",151,0)
 .S SITE1=0
"RTN","MPIPEXT",152,0)
 .W !!,"There has been a request made for this patient to site(s): "
"RTN","MPIPEXT",153,0)
 .F  S SITE1=$O(^XTMP("MPI EXT PDAT"_ICNSSN,SITE1)) Q:SITE1=""  D
"RTN","MPIPEXT",154,0)
 ..W !,SITE1,?10,$P($$NNT^XUAF4($$LKUP^XUAF4(SITE1)),"^"),?40,"made at "
"RTN","MPIPEXT",155,0)
 ..N Y S Y=$P($G(^XTMP("MPI EXT PDAT"_ICNSSN,SITE1)),"^",2) D DD^%DT
"RTN","MPIPEXT",156,0)
 ..W Y
"RTN","MPIPEXT",157,0)
 I SITE'=1,'$D(^XTMP("MPI EXT PDAT"_ICNSSN,SITE)) Q 0
"RTN","MPIPEXT",158,0)
 I SITE'=1 D
"RTN","MPIPEXT",159,0)
 .W !!,"There has been a previous request made for this patient from the same "
"RTN","MPIPEXT",160,0)
 .W !,"site you are requesting.  The request was made at "
"RTN","MPIPEXT",161,0)
 .N Y S Y=$P($G(^XTMP("MPI EXT PDAT"_ICNSSN,SITE)),"^",2) D DD^%DT
"RTN","MPIPEXT",162,0)
 .W Y
"RTN","MPIPEXT",163,0)
 S DIR("A")="Would you like to view this data?"
"RTN","MPIPEXT",164,0)
 S DIR(0)="Y",DIR("B")="No"
"RTN","MPIPEXT",165,0)
 D ^DIR
"RTN","MPIPEXT",166,0)
 I Y="^" Q -1
"RTN","MPIPEXT",167,0)
 I Y'=1 Q 0
"RTN","MPIPEXT",168,0)
 Q 1
"RTN","MPIPID2")
0^155^B19068434
"RTN","MPIPID2",1,0)
MPIPID2 ;BPCIOFO/CMC-NAME RE-FORMATTING ;11/2/01
"RTN","MPIPID2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**4**;30 Apr 99
"RTN","MPIPID2",3,0)
 ;
"RTN","MPIPID2",4,0)
 ; Originally VAFCPID2 at sites
"RTN","MPIPID2",5,0)
 ;ALB/MLI,PKE-Create generic PID segment ;9/21/99
"RTN","MPIPID2",6,0)
 ;;5.3;Registration;**149,240,312**;Aug 13, 1993
"RTN","MPIPID2",7,0)
 ; aggressive name re-formatting
"RTN","MPIPID2",8,0)
 ;
"RTN","MPIPID2",9,0)
NAME(MPISTR) ;Being aggressive about where Suffix is placed, extra punctuation
"RTN","MPIPID2",10,0)
 ;MPISTR - name as stored in Patient file
"RTN","MPIPID2",11,0)
 I $E(MPISTR,1,14)="MERGING INTO `" S MPISTR=$P($P(MPISTR,"(",2),")") Q  ;**240
"RTN","MPIPID2",12,0)
 N LAST,FIRST,MIDDLE,SUFFIX,POS,LAST12,LAST2,LAST3,REST,SUF,SEC,SEC12,SEC3,MID12,MID3,FIR12,FIR3,PL,MID3,TMPSTR,TFLG
"RTN","MPIPID2",13,0)
 S TFLG="N"
"RTN","MPIPID2",14,0)
 S TMPSTR=MPISTR
"RTN","MPIPID2",15,0)
 I $E(MPISTR,($L(MPISTR)-4),$L(MPISTR))=" TEST" S MPISTR=$E(MPISTR,1,($L(MPISTR)-4)),TFLG="Y"
"RTN","MPIPID2",16,0)
 I MPISTR["'" S MPISTR=$TR(MPISTR,"'","") ;Remove ' puncution marks from the name
"RTN","MPIPID2",17,0)
 S MPISTR=$TR(MPISTR,"."," ") I $E(MPISTR,$L(MPISTR))=" " S MPISTR=$E(MPISTR,1,$L(MPISTR)-1)
"RTN","MPIPID2",18,0)
 ;check if 3rd instead of III
"RTN","MPIPID2",19,0)
 I $F(MPISTR,"3RD")'=0 S MPISTR=$E(MPISTR,1,$F(MPISTR,"3RD")-4)_"III"_$E(MPISTR,$F(MPISTR,"3RD"),$L(MPISTR))
"RTN","MPIPID2",20,0)
 ;check if 2nd instead of II
"RTN","MPIPID2",21,0)
 I $F(MPISTR,"2ND")'=0 S MPISTR=$E(MPISTR,1,$F(MPISTR,"2ND")-4)_"II"_$E(MPISTR,$F(MPISTR,"2ND"),$L(MPISTR))
"RTN","MPIPID2",22,0)
 I $P(MPISTR,",",3)'="" S PL=$F(MPISTR,","),FIRST=$E(MPISTR,PL,$L(MPISTR)),MPISTR=$P(MPISTR,",")_","_$TR(FIRST,","," ")
"RTN","MPIPID2",23,0)
TR I $F(MPISTR,"  ") S PL=$F(MPISTR,"  "),MPISTR=$E(MPISTR,1,PL-2)_$E(MPISTR,PL,$L(MPISTR)) G TR
"RTN","MPIPID2",24,0)
 ;check for more than three pieces after the comma - ex: last,j.r. first mi
"RTN","MPIPID2",25,0)
 I $P(MPISTR,",",2)?.A1" ".A1" ".A1" ".A S REST=$P(MPISTR,",",2) I $E(REST,1,4)?1A1" "1A1" " S POS=$E(REST,1)_$E(REST,3) D
"RTN","MPIPID2",26,0)
 .I POS="II"!(POS="IV")!(POS="VI")!(POS="JR")!(POS="SR")!(POS="DR") S SUF="Y" S MPISTR=$P(MPISTR,",")_","_$E(REST,5,$L(REST))_" "_POS,POS="Y"
"RTN","MPIPID2",27,0)
 ;move the suffix from the left of the comma to the end of the name str
"RTN","MPIPID2",28,0)
 S LAST=$P(MPISTR,","),REST=$P(MPISTR,",",2),POS="N",SUF="N"
"RTN","MPIPID2",29,0)
 I LAST?.A1" ".E D
"RTN","MPIPID2",30,0)
 .S LAST2=$P(LAST," ",2),LAST12=$E(LAST2,1,2),LAST3=$E(LAST2,3)
"RTN","MPIPID2",31,0)
 .I LAST12="V"!(LAST12="V.")!(LAST12="I")!(LAST12="I.") S POS="Y",SUFFIX=LAST2
"RTN","MPIPID2",32,0)
 .I LAST12="JR"!(LAST12="SR")!(LAST12="DR")!(LAST12="MD")!(LAST12="II")!(LAST12="IV")!(LAST12="VI") S POS="Y",SUFFIX=LAST2
"RTN","MPIPID2",33,0)
 .I POS="Y",(LAST12="II") I LAST3'="",(LAST3'="."),(LAST3'="I") S POS="N",SUFFIX=""
"RTN","MPIPID2",34,0)
 .I POS="Y",(LAST12="VI") I LAST3'="",(LAST3'="."),(LAST3'="I") S POS="N",SUFFIX=""
"RTN","MPIPID2",35,0)
 .I POS="Y",LAST12'="II",LAST12'="VI" I LAST3'=""&(LAST3'=".") S POS="N"
"RTN","MPIPID2",36,0)
 .I LAST12="ES"&(LAST3="Q") S POS="Y",SUFFIX=LAST2
"RTN","MPIPID2",37,0)
 .I $D(SUFFIX) S SUFFIX=$TR(SUFFIX,".","")
"RTN","MPIPID2",38,0)
 .I POS="Y" S MPISTR=$P(LAST," ")_","_REST_" "_SUFFIX,POS="N",SUF="Y"
"RTN","MPIPID2",39,0)
 I POS="N",$P(MPISTR,",")[" " D
"RTN","MPIPID2",40,0)
 .S LAST=$P(MPISTR,","),LAST2=$P(LAST," ",2) I $P(LAST," ",3)'="" S MPISTR=$P(LAST," ")_LAST2_" "_$P(LAST," ",3)_","_$P(MPISTR,",",2)
"RTN","MPIPID2",41,0)
 ;
"RTN","MPIPID2",42,0)
SP ;remove any extra spaces
"RTN","MPIPID2",43,0)
 I $F(MPISTR,"  ") S PL=$F(MPISTR,"  "),MPISTR=$E(MPISTR,1,PL-2)_$E(MPISTR,PL,$L(MPISTR)) G SP
"RTN","MPIPID2",44,0)
 ;Check for middle name existance with suffix to put a place holder of ""
"RTN","MPIPID2",45,0)
 S SEC=$P(MPISTR,",",2),FIRST=$P(SEC," "),MIDDLE=$P(SEC," ",2),SUFFIX=$P(SEC," ",3)
"RTN","MPIPID2",46,0)
 I SUFFIX="",SUF="Y" S SUFFIX=MIDDLE,MIDDLE="""""",MPISTR=$P(MPISTR,",")_","_FIRST_" "_MIDDLE_" "_SUFFIX
"RTN","MPIPID2",47,0)
 ; ^ SUF="Y" means we moved it from left to right of comma
"RTN","MPIPID2",48,0)
 I SUFFIX="",SUF="N" D
"RTN","MPIPID2",49,0)
 .S MID12=$E(MIDDLE,1,2),MID3=$E(MIDDLE,3) ;Check if MIDDLE is a suffix
"RTN","MPIPID2",50,0)
 .I MID12="ES"&(MID3="Q") S POS="Y"
"RTN","MPIPID2",51,0)
 .I MID12="JR"!(MID12="SR")!(MID12="DR")!(MID12="MD")!(MID12="II")!(MID12="IV")!(MID12="VI") S POS="Y"
"RTN","MPIPID2",52,0)
 .I POS="Y",(MID12="II") I MID3'="",(MID3'="."),(MID3'="I") S POS="N",SUFFIX=""
"RTN","MPIPID2",53,0)
 .I POS="Y",(MID12="VI") I MID3'="",(MID3'="."),(MID3'="I") S POS="N",SUFFIX=""
"RTN","MPIPID2",54,0)
 .I POS="Y",MID12'="II",MID12'="VI" I MID3'=""&(MID3'=".") S POS="N"
"RTN","MPIPID2",55,0)
 .I POS="Y" S SUFFIX=MIDDLE,MIDDLE=""""""
"RTN","MPIPID2",56,0)
 .S MPISTR=$P(MPISTR,",")_","_FIRST_" "_MIDDLE_" "_SUFFIX
"RTN","MPIPID2",57,0)
 S POS="N"
"RTN","MPIPID2",58,0)
 S FIR12=$E(FIRST,1,2),FIR3=$E(FIRST,3) ;check if FIRST is a suffix
"RTN","MPIPID2",59,0)
 I FIR12="ES"&(FIR3="Q") S POS="Y"
"RTN","MPIPID2",60,0)
 I FIR12="JR"!(FIR12="SR")!(FIR12="DR")!(FIR12="MD")!(FIR12="II")!(FIR12="IV")!(FIR12="VI") S POS="Y"
"RTN","MPIPID2",61,0)
 I POS="Y",(FIR12="II") I FIR3'="",(FIR3'="."),(FIR3'="I") S POS="N",SUFFIX=""
"RTN","MPIPID2",62,0)
 I POS="Y",(FIR12="VI") I FIR3'="",(FIR3'="."),(FIR3'="I") S POS="N",SUFFIX=""
"RTN","MPIPID2",63,0)
 I POS="Y",FIR12'="II",FIR12'="VI" I FIR3'=""&(FIR3'=".") S POS="N"
"RTN","MPIPID2",64,0)
 ; if no middle name can't be sure if initials or suffix so will leave as initials
"RTN","MPIPID2",65,0)
 I POS="Y",MIDDLE="" S MPISTR=$P(MPISTR,",")_","_$E(FIR12,1)_" "_$E(FIR12,2) S POS="N"
"RTN","MPIPID2",66,0)
 I TFLG="Y" S MPISTR=MPISTR_" TEST"
"RTN","MPIPID2",67,0)
 I POS="Y" S MPISTR=$P(MPISTR,",")_","_MIDDLE_" "_$S(SUFFIX="":"""""",1:SUFFIX)_" "_FIRST
"RTN","MPIPID2",68,0)
SP2 ;remove any extra spaces
"RTN","MPIPID2",69,0)
 I $F(MPISTR,"  ") S PL=$F(MPISTR,"  "),MPISTR=$E(MPISTR,1,PL-2)_$E(MPISTR,PL,$L(MPISTR)) G SP2
"RTN","MPIPID2",70,0)
 I $E(MPISTR,$L(MPISTR))=" " S MPISTR=$E(MPISTR,1,($L(MPISTR)-1))
"RTN","MPIPID2",71,0)
 Q
"RTN","MPIPIDB")
0^156^B27035626
"RTN","MPIPIDB",1,0)
MPIPIDB ;BPOFO/CMC-PID AND PD1 BUILDER ;3/5/02
"RTN","MPIPIDB",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,29,35**;29 Apr 99
"RTN","MPIPIDB",3,0)
 ;
"RTN","MPIPIDB",4,0)
 ;
"RTN","MPIPIDB",5,0)
BLDEVN(ICN,EVN,HL,EVR,ERR) ;
"RTN","MPIPIDB",6,0)
 ; at this point only seq 1 and 2 are supported
"RTN","MPIPIDB",7,0)
 S EVN(1)="EVN"_HL("FS")_EVR_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","MPIPIDB",8,0)
 Q
"RTN","MPIPIDB",9,0)
 ;
"RTN","MPIPIDB",10,0)
BLDPD1(ICN,SEQ,PD1,HL,ERR) ;
"RTN","MPIPIDB",11,0)
 ; At this point only sequence 3 is supported
"RTN","MPIPIDB",12,0)
 N SITE,CNODE,COMP
"RTN","MPIPIDB",13,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIPIDB",14,0)
 ;get CMOR
"RTN","MPIPIDB",15,0)
 S CNODE=$G(^MPIVET(ICN,1))
"RTN","MPIPIDB",16,0)
 S SITE=$$NS^XUAF4($P(CNODE,"^",2))
"RTN","MPIPIDB",17,0)
 S PD1(1)="PD1"_HL("FS")_HL("FS")_HL("FS")_$P(SITE,"^")_COMP_"D"_COMP_$P(SITE,"^",2)
"RTN","MPIPIDB",18,0)
 Q
"RTN","MPIPIDB",19,0)
BLDPID(ICN,SITE,CNT,SEQ,PID,HL,ERR,LID) ;build PID from File #985
"RTN","MPIPIDB",20,0)
 ;The required sequences 3 and 5 will be returned and at this point
"RTN","MPIPIDB",21,0)
 ;sequences 1,3,5,6,7,8,11 and 29 are supported
"RTN","MPIPIDB",22,0)
 ;SITE SHOULD BE IEN
"RTN","MPIPIDB",23,0)
 ;
"RTN","MPIPIDB",24,0)
 N MPIMN,SSN,APID,PDOD,HIST,HISTDT,MPIHMN,LVL,LVL1,NXT,LNGTH,NXTC,COMP,REP,SUBCOMP,LVL2,X,STATE,CITY,CLAIM,NODE,OID,IEN,SITEN
"RTN","MPIPIDB",25,0)
 I $G(LID)="" S LID=""
"RTN","MPIPIDB",26,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIPIDB",27,0)
 S (CLAIM,APID(5))=""
"RTN","MPIPIDB",28,0)
 S SITEN=$$STA^XUAF4(SITE)
"RTN","MPIPIDB",29,0)
 ;get MPI node
"RTN","MPIPIDB",30,0)
 S NODE=$G(^MPIVET(ICN,0))
"RTN","MPIPIDB",31,0)
 S SSN=$P(NODE,"^",14)
"RTN","MPIPIDB",32,0)
 S APID(2)=CNT
"RTN","MPIPIDB",33,0)
 S APID(3)=""  ;not used
"RTN","MPIPIDB",34,0)
 ;repeat patient ID list including ICN (NI),SSN (SS),CLAIM# (PN) AND DFN (PI)
"RTN","MPIPIDB",35,0)
 S APID(4)=$P(NODE,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_"200M"_SUBCOMP_"L"
"RTN","MPIPIDB",36,0)
 ; old code that passed ICN with site station# S APID(4)=$P(NODE,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITEN_SUBCOMP_"L"
"RTN","MPIPIDB",37,0)
 I $G(SSN)'="" S APID(4)=APID(4)_REP_SSN_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_"200M"_SUBCOMP_"L"
"RTN","MPIPIDB",38,0)
 I ICN'="" N TFNODE,TFIEN S TFIEN=$O(^MPI(985.5,"AM",ICN,$P($G(^MPIVET(ICN,1)),"^",2),"")) I TFIEN'="" S TFNODE=$G(^MPI(985.5,TFIEN,0))
"RTN","MPIPIDB",39,0)
 I LID'="" S APID(4)=APID(4)_REP_LID_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_SITEN_SUBCOMP_"L"
"RTN","MPIPIDB",40,0)
 ;CLAIM#
"RTN","MPIPIDB",41,0)
 S CLAIM=+$P($G(^MPIVET(ICN,1)),"^")
"RTN","MPIPIDB",42,0)
 I CLAIM>0 S APID(4)=APID(4)_REP_CLAIM_COMP_COMP_COMP_"USVBA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PN"_COMP_"VA FACILITY ID"_SUBCOMP_"200M"_SUBCOMP_"L"
"RTN","MPIPIDB",43,0)
 ;alternate id (OTHER IDS)
"RTN","MPIPIDB",44,0)
 I APID(5)'="" I $D(^MPIVET(ICN,200,0)),$O(^MPIVET(ICN,200,0))'="" D
"RTN","MPIPIDB",45,0)
 .N HIST S NXTC=0,LVL=0,HIST=0  F  S HIST=$O(^MPIVET(ICN,200,HIST)) Q:'HIST  S OID=$G(^MPIVET(ICN,200,HIST,0)) D
"RTN","MPIPIDB",46,0)
 ..I APID(5)="" S APID(5)=$P(OID,"^")_COMP_COMP_COMP_$P(OID,"^",2)_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$P(OID,"^",3)_SUBCOMP_"L"_COMP_COMP
"RTN","MPIPIDB",47,0)
 ..I APID(5)'="" D
"RTN","MPIPIDB",48,0)
 ...S NXT=$P(OID,"^")_COMP_COMP_COMP_$P(OID,"^",2)_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_$P(OID,"^",3)_SUBCOMP_"L"_COMP_COMP
"RTN","MPIPIDB",49,0)
 ...I LVL=0 D
"RTN","MPIPIDB",50,0)
 ....I $L(APID(5)_NXT)'>244 S APID(5)=APID(5)_REP_NXT Q
"RTN","MPIPIDB",51,0)
 ....I $L(APID(5)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(5)),APID(5)=APID(5)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","MPIPIDB",52,0)
 ...I LVL>0 D
"RTN","MPIPIDB",53,0)
 ....I $L($G(APID(5,LVL))_NXT)'>245 S APID(5,LVL)=$G(APID(5,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","MPIPIDB",54,0)
 ....I $L($G(APID(5,LVL))_NXT)>245 S LNGTH=244-$L(APID(5,LVL)),APID(5,LVL)=APID(5,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(5,LVL)=NXT
"RTN","MPIPIDB",55,0)
 ..I NXTC=1 S NXTC=0
"RTN","MPIPIDB",56,0)
 ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","MPIPIDB",57,0)
 S APID(6)=$P(NODE,"^",2)_COMP_$P(NODE,"^",3)_COMP_$P(NODE,"^",4)_COMP_$P(NODE,"^",6)_COMP_$P(NODE,"^",5)_COMP_COMP_"L"
"RTN","MPIPIDB",58,0)
 ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","MPIPIDB",59,0)
 S APID(7)=""
"RTN","MPIPIDB",60,0)
 I $P(NODE,"^",7)'="" S APID(7)=$$HLNAME^HLFNC($P(NODE,"^",7),HL("ECH")) I $P(APID(6),$E(HL("ECH"),1),7)'="M" S $P(APID(7),$E(HL("ECH"),1),7)="M"
"RTN","MPIPIDB",61,0)
 S APID(8)=$$HLDATE^HLFNC($P(NODE,"^",8))  ;date/time of birth **29
"RTN","MPIPIDB",62,0)
 S APID(9)=$P(NODE,"^",13)  ;sex
"RTN","MPIPIDB",63,0)
 S APID(10)=""  ;patient alias (not used)
"RTN","MPIPIDB",64,0)
 S APID(11)=""  ;race (not used)
"RTN","MPIPIDB",65,0)
 ;place of birth city and state
"RTN","MPIPIDB",66,0)
 S APID(12)=""
"RTN","MPIPIDB",67,0)
 I $P(NODE,"^",9)'="" S $P(APID(12),COMP,3)=$P(NODE,"^",9)
"RTN","MPIPIDB",68,0)
 I $P(NODE,"^",10)'="" S $P(APID(12),COMP,4)=$$GET1^DIQ(5,+$P(NODE,"^",10)_",",1)
"RTN","MPIPIDB",69,0)
 I $G(APID(12))'="" S $P(APID(12),COMP,7)="N"
"RTN","MPIPIDB",70,0)
 S APID(13)="",APID(14)="",APID(15)="",APID(16)="",APID(17)=""
"RTN","MPIPIDB",71,0)
 S APID(18)="",APID(19)=""
"RTN","MPIPIDB",72,0)
 S APID(20)=""  ;ssn passed in PID-3
"RTN","MPIPIDB",73,0)
 S APID(21)="",APID(22)="",APID(23)=""
"RTN","MPIPIDB",74,0)
 S APID(24)=""  ;place of birth (not used) use PID-11 with an 'N' instead
"RTN","MPIPIDB",75,0)
 S APID(25)="",APID(26)="",APID(27)="",APID(28)="",APID(29)=""
"RTN","MPIPIDB",76,0)
 S APID(30)=""
"RTN","MPIPIDB",77,0)
 I $P(NODE,"^",11)'="" S APID(30)=$$HLDATE^HLFNC($P(NODE,"^",11))  ;date of death
"RTN","MPIPIDB",78,0)
 S APID(31)=""
"RTN","MPIPIDB",79,0)
 S PID(1)="PID"_HL("FS")
"RTN","MPIPIDB",80,0)
 S LVL=1,X=1 F  S X=$O(APID(X)) Q:'X  D
"RTN","MPIPIDB",81,0)
 . S PID(LVL)=$G(PID(LVL))
"RTN","MPIPIDB",82,0)
 . S NXT=APID(X) D
"RTN","MPIPIDB",83,0)
 .. I '$O(APID(X,0)) S NXT=NXT_HL("FS")
"RTN","MPIPIDB",84,0)
 .. I $L($G(PID(LVL))_NXT)>245 S LNGTH=245-$L(PID(LVL)),PID(LVL)=PID(LVL)_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),LVL=LVL+1
"RTN","MPIPIDB",85,0)
 .. I $L($G(PID(LVL))_NXT)'>245 S PID(LVL)=$G(PID(LVL))_NXT
"RTN","MPIPIDB",86,0)
 . S LVL2=0 F  S LVL2=$O(APID(X,LVL2)) Q:'LVL2  D
"RTN","MPIPIDB",87,0)
 .. S NXT=APID(X,LVL2) D
"RTN","MPIPIDB",88,0)
 ... I $L($G(PID(LVL))_NXT)>245 S LNGTH=245-$L(PID(LVL)),PID(LVL)=PID(LVL)_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),LVL=LVL+1
"RTN","MPIPIDB",89,0)
 ... I $L($G(PID(LVL))_NXT)'>245 S PID(LVL)=$G(PID(LVL))_NXT
"RTN","MPIPIDB",90,0)
 ... I '$O(APID(X,LVL2)) S PID(LVL)=PID(LVL)_HL("FS")
"RTN","MPIPIDB",91,0)
 Q
"RTN","MPIQ22")
0^234^B14823051
"RTN","MPIQ22",1,0)
MPIQ22 ;BIOFO/CMC- QBP-Q22 PROCESSING RTN ;10/14/04
"RTN","MPIQ22",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**35**;30 Apr 99
"RTN","MPIQ22",3,0)
 ;
"RTN","MPIQ22",4,0)
RSP ;
"RTN","MPIQ22",5,0)
 Q
"RTN","MPIQ22",6,0)
IN ;Entry point to process the QBP-Q22 message
"RTN","MPIQ22",7,0)
 D HLLOG^MPIMHL("Q22",$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPIQ22",8,0)
 ;
"RTN","MPIQ22",9,0)
 N ICN,SITE,MPIID,DFN,SSN,MPIFERR,MPII,MSG,MPI,SG,MPIEVTR,MPIDLT,CMOR,NAME,SURNAME,PREFIX,SUFFIX,CLAIMN,SEX,POBCITY,POBSTATE,FIRST,MIDDLE,MMN
"RTN","MPIQ22",10,0)
 N MPIDOB,MPIDOD,MPIJ,MPII,MPISSITE,RESULT,POB,ARRAY,ERR,MPIFID,MTIEN,PSEG,TF,AS
"RTN","MPIQ22",11,0)
 K HLA
"RTN","MPIQ22",12,0)
 S MPIFERR="",TF=1,AS=1
"RTN","MPIQ22",13,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3)  D:SG?2A1(1A,1N) PICK
"RTN","MPIQ22",14,0)
 ;check if sending system is in MPI site monitor file - if not reject msg
"RTN","MPIQ22",15,0)
 N SNDSYS S SNDSYS=$P($G(HL("SFN")),$E(HL("ECH"),1))
"RTN","MPIQ22",16,0)
 I '$D(^MPI(985.3,"S",SNDSYS)) D
"RTN","MPIQ22",17,0)
 .K HLA S HLA("HLA",1)="MSA"_MPIFS_"AR"_MPIFS_MPIID_MPIFS_"System isn't in MPI Site Monitor file - rejected"
"RTN","MPIQ22",18,0)
 .S HLA("HLA",2)="QAK"_MPIFS_MPIID_MPIFS_"AR"_MPIFS_$P(QPD,MPIFS,2)_MPIFS_0
"RTN","MPIQ22",19,0)
 .S HLA("HLA",3)=QPD
"RTN","MPIQ22",20,0)
 I '$D(^MPI(985.3,"S",SNDSYS)) D SEND Q
"RTN","MPIQ22",21,0)
 ;
"RTN","MPIQ22",22,0)
 ;What are the query fields - at this point query is by DFN/Site only
"RTN","MPIQ22",23,0)
 ;I $G(PID(3,5))="PI" D
"RTN","MPIQ22",24,0)
 ;Have DFN/Site as query criteria
"RTN","MPIQ22",25,0)
 S SITE=$P($G(PID(3,6)),SUBCOMP,2) ;station number for Site DFN
"RTN","MPIQ22",26,0)
 S DFN=$G(PID(3,1))
"RTN","MPIQ22",27,0)
 I DFN=""!(SITE="") S ERR="-1^Missing DFN or Site for lookup" Q
"RTN","MPIQ22",28,0)
 I LINK="BT"!(LINK="TF") S TF=0
"RTN","MPIQ22",29,0)
 I LINK="BT"!(LINK="AS") S AS=0
"RTN","MPIQ22",30,0)
 S ICN=$$GETICN^MPIUTL11(DFN,SITE,SSITE,AS,TF)
"RTN","MPIQ22",31,0)
 ;;I +ICN=-1 S ERR="-1^DFN/Site NOT found on MPI"
"RTN","MPIQ22",32,0)
 ;was an ICN found?  Build message back.
"RTN","MPIQ22",33,0)
 N RES,CNT
"RTN","MPIQ22",34,0)
 I +ICN'=-1 D
"RTN","MPIQ22",35,0)
 .S HLA("HLA",1)="MSA"_MPIFS_"AA"_MPIFS_MPIID
"RTN","MPIQ22",36,0)
 .S HLA("HLA",2)="QAK"_MPIFS_MPIID_MPIFS_"OK"_MPIFS_$P(QPD,MPIFS,2)_MPIFS_1
"RTN","MPIQ22",37,0)
 .S HLA("HLA",3)=QPD
"RTN","MPIQ22",38,0)
 .D BLDPID^MPIPIDB(+ICN,$$IEN^XUAF4(SITE),1,"",.PSEG,.HL,.ERR,DFN)
"RTN","MPIQ22",39,0)
 .S HLA("HLA",4)=PSEG(1)
"RTN","MPIQ22",40,0)
 .I $O(PSEG(1))'="" N SUBCNT S SUBCNT=1,CNT=4,NXT=1 F  S NXT=$O(PSEG(NXT)) Q:NXT=""  D
"RTN","MPIQ22",41,0)
 .. S HLA("HLA",CNT,SUBCNT)=PSEG(NXT),SUBCNT=SUBCNT+1
"RTN","MPIQ22",42,0)
 .S ARRAY("ICN")=+ICN
"RTN","MPIQ22",43,0)
 .; check LINK to see what record linkage should happen
"RTN","MPIQ22",44,0)
 .I LINK="TF"!(LINK="BT") S RES=$$ADDTF^MPIUTL9($$IEN^XUAF4(SSITE),+ICN,) I RES'=0 D ERROR^MPIA08(.ARRAY,.HL,$P(RES,"^",2),234)
"RTN","MPIQ22",45,0)
 .; add system to TF list
"RTN","MPIQ22",46,0)
 .I LINK="AS"!(LINK="BT") S RES=$$ADDSTAS^MPIUTL11(+ICN,SITE,SSITE) I RES'=0 D ERROR^MPIA08(.ARRAY,.HL,$P(RES,"^",2),234)
"RTN","MPIQ22",47,0)
 .; add system to Associated System site list
"RTN","MPIQ22",48,0)
 .;I LINK="NT" - add no linkage - was just a lookup
"RTN","MPIQ22",49,0)
 I +ICN=-1 D
"RTN","MPIQ22",50,0)
 .S HLA("HLA",1)="MSA"_MPIFS_"AA"_MPIFS_MPIID
"RTN","MPIQ22",51,0)
 .S HLA("HLA",2)="QAK"_MPIFS_MPIID_MPIFS_"NF"_MPIFS_$P(QPD,MPIFS,2)_MPIFS_0
"RTN","MPIQ22",52,0)
 .S HLA("HLA",3)=QPD
"RTN","MPIQ22",53,0)
SEND ;
"RTN","MPIQ22",54,0)
 D CREATE^HLTF(.MPIFID,.MTIEN,.HLDT,.HLDT1)
"RTN","MPIQ22",55,0)
 S $P(HLL("LINKS"),1)="MPI RSP-K22 CLIENT"
"RTN","MPIQ22",56,0)
 K MPIL
"RTN","MPIQ22",57,0)
 D LINK^HLUTIL3(SSITE,.MPIL,"I")
"RTN","MPIQ22",58,0)
 S $P(HLL("LINKS"),2)=$O(MPIL(0))
"RTN","MPIQ22",59,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFERR,"",.HL)
"RTN","MPIQ22",60,0)
 K COMP,REP,SUBCOMP,SUBSUB,SSITE,LINK,QPD,MPIFS,HLA,MPIL,PID
"RTN","MPIQ22",61,0)
 ;
"RTN","MPIQ22",62,0)
 Q
"RTN","MPIQ22",63,0)
PICK ;check routine for segment entry point
"RTN","MPIQ22",64,0)
 I $T(@SG)]"" D @SG
"RTN","MPIQ22",65,0)
 I $T(@SG)="" Q
"RTN","MPIQ22",66,0)
 Q
"RTN","MPIQ22",67,0)
MSH ;
"RTN","MPIQ22",68,0)
 S HLECH=HL("ECH"),MPIFS=HL("FS"),MPIID=HL("MID")
"RTN","MPIQ22",69,0)
 S COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIQ22",70,0)
 S SUBSUB=$E(HL("ECH"),$L($G(HL("ECH"))))
"RTN","MPIQ22",71,0)
 S SSITE=$P($P(HLNODE,HL("FS"),4),COMP)
"RTN","MPIQ22",72,0)
 Q
"RTN","MPIQ22",73,0)
QPD ;
"RTN","MPIQ22",74,0)
 N SBY,SEG
"RTN","MPIQ22",75,0)
 S QPD=$G(MSG) ;QPD SEGMENT
"RTN","MPIQ22",76,0)
 S SBY=$P(QPD,MPIFS,4) ;search criteria
"RTN","MPIQ22",77,0)
 N NXT,XXX,FIELD,SUBFLD
"RTN","MPIQ22",78,0)
 F XXX=1:1 S NXT=$P(SBY,REP,XXX) Q:NXT=""  D
"RTN","MPIQ22",79,0)
 .;NXT=@PID.3.X~<value>
"RTN","MPIQ22",80,0)
 .S NXT=$E(NXT,2,$L(NXT)) ; remove the @
"RTN","MPIQ22",81,0)
 .S SEG=$E(NXT,1,3) ;segment name
"RTN","MPIQ22",82,0)
 .S FIELD=$P(NXT,".",2),SUBFLD=+$P(NXT,".",3)
"RTN","MPIQ22",83,0)
 .S @SEG@(FIELD,SUBFLD)=$P(NXT,COMP,2) ;ie PID(3,1)=<dfn>
"RTN","MPIQ22",84,0)
 S LINK=$P(QPD,MPIFS,7) ; record linking field
"RTN","MPIQ22",85,0)
 I LINK="" S LINK="NT"
"RTN","MPIQ22",86,0)
 ; LINK values:
"RTN","MPIQ22",87,0)
 ;TF = add the site sending the query to the Treating Facility List
"RTN","MPIQ22",88,0)
 ;AS = add the site sending the query to the site association for the Treating Facility for the site associated with the DFN
"RTN","MPIQ22",89,0)
 ;BT = add both the TF and the AS
"RTN","MPIQ22",90,0)
 ;NT = add neither the TF or the AS (If nothing is passed the default will be NT)
"RTN","MPIQ22",91,0)
 Q
"RTN","MPIRACK")
0^164^B17660417
"RTN","MPIRACK",1,0)
MPIRACK ;BP/CMC-CHECK ON ACKS AT SITES AND MPI ;7/24/02
"RTN","MPIRACK",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11**;30 Apr 99
"RTN","MPIRACK",3,0)
 ;
"RTN","MPIRACK",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIRACK",5,0)
 ;  EN1^XWB2HL7 - #3144
"RTN","MPIRACK",6,0)
 ;  RTNDATA^XWBDRPC - #3149
"RTN","MPIRACK",7,0)
 ;
"RTN","MPIRACK",8,0)
INACT ;inactivate option that allows the user to specify the date to check to see if there are missing ACKS and if there are regenerate msgs
"RTN","MPIRACK",9,0)
 ;User can specify all or one specific site
"RTN","MPIRACK",10,0)
 K ^XTMP("MPIACK")
"RTN","MPIRACK",11,0)
 N BEFORE,ASK
"RTN","MPIRACK",12,0)
 S BEFORE=$$ASKDT()
"RTN","MPIRACK",13,0)
 Q:BEFORE=0
"RTN","MPIRACK",14,0)
 S ASK=$$ASKSITE()
"RTN","MPIRACK",15,0)
 Q:ASK=0
"RTN","MPIRACK",16,0)
 W !!,"Please be patient while the request is sent out and data received back ..."
"RTN","MPIRACK",17,0)
 I ASK="A" D ALL(BEFORE)
"RTN","MPIRACK",18,0)
 I ASK'="A" D SINGLE(ASK,BEFORE)
"RTN","MPIRACK",19,0)
 D REPORT
"RTN","MPIRACK",20,0)
 Q
"RTN","MPIRACK",21,0)
 ;
"RTN","MPIRACK",22,0)
ASKSITE() ;ask user if want to send to all or one site
"RTN","MPIRACK",23,0)
 K DIR
"RTN","MPIRACK",24,0)
 S DIR(0)="SAM^A:All Sites;S:Single Site"
"RTN","MPIRACK",25,0)
 S DIR("A")="Send to (A)ll or (S)ingle Site? "
"RTN","MPIRACK",26,0)
 S DIR("B")="A"
"RTN","MPIRACK",27,0)
 S DIR("?")="Enter A for All sites or S for a Single site"
"RTN","MPIRACK",28,0)
AGAIN2 D ^DIR K DIR
"RTN","MPIRACK",29,0)
 I Y="^" Q 0
"RTN","MPIRACK",30,0)
 I Y="A" Q Y
"RTN","MPIRACK",31,0)
 I Y="S" N SITE S SITE=$$ASKST^MPIRUTL()
"RTN","MPIRACK",32,0)
 Q:SITE=0 SITE
"RTN","MPIRACK",33,0)
 I SITE'?3N D AGAIN2
"RTN","MPIRACK",34,0)
 Q SITE
"RTN","MPIRACK",35,0)
 ;
"RTN","MPIRACK",36,0)
ASKDT() ;ask user for date to check prior to for missing ACKs
"RTN","MPIRACK",37,0)
 N DIR,DIRUT,X,Y,TODAY,LAST
"RTN","MPIRACK",38,0)
 D NOW^%DTC S TODAY=X K %,%H,%I
"RTN","MPIRACK",39,0)
 S X1=TODAY,X2=-1
"RTN","MPIRACK",40,0)
 D C^%DTC
"RTN","MPIRACK",41,0)
 S LAST=X K X,%H,X1,X2
"RTN","MPIRACK",42,0)
 S DIR(0)="D^::X"
"RTN","MPIRACK",43,0)
 S DIR("A")="Enter the Date to check PROIR to for Missing ACKs"
"RTN","MPIRACK",44,0)
 S DIR("?")="Enter the date so that date-1 day is the last date to be checked for missing ACKs."
"RTN","MPIRACK",45,0)
AGAIN D ^DIR
"RTN","MPIRACK",46,0)
 I Y>LAST W !,"Date must be no earlier than "_$$FMTE^XLFDT(LAST,"D") G AGAIN
"RTN","MPIRACK",47,0)
 Q:$D(DIRUT) 0
"RTN","MPIRACK",48,0)
 Q Y
"RTN","MPIRACK",49,0)
 ;
"RTN","MPIRACK",50,0)
SCHED ;scheduled option that checks to see if there are missing ACKs 3 days ago, sending it to all sites.
"RTN","MPIRACK",51,0)
 K ^XTMP("MPIACK")
"RTN","MPIRACK",52,0)
 N TODAY,BEFORE
"RTN","MPIRACK",53,0)
 D NOW^%DTC
"RTN","MPIRACK",54,0)
 S TODAY=X
"RTN","MPIRACK",55,0)
 K X,Y,%,%I,%H
"RTN","MPIRACK",56,0)
 S X1=TODAY,X2=-2
"RTN","MPIRACK",57,0)
 D C^%DTC
"RTN","MPIRACK",58,0)
 S BEFORE=X
"RTN","MPIRACK",59,0)
 K X,%H,X1,X2
"RTN","MPIRACK",60,0)
 D ALL(BEFORE)
"RTN","MPIRACK",61,0)
 Q
"RTN","MPIRACK",62,0)
 ;
"RTN","MPIRACK",63,0)
SINGLE(SITE,BEFORE) ;
"RTN","MPIRACK",64,0)
 I SITE="MPI" D EN^MPIACK(BEFORE,.RETURN) Q
"RTN","MPIRACK",65,0)
 D EN1^XWB2HL7(.RETURN,SITE,"MPIF ACK CHECK",1,BEFORE)
"RTN","MPIRACK",66,0)
 S ^XTMP("MPIACK",0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"ACK CHECK"
"RTN","MPIRACK",67,0)
 S ^XTMP("MPIACK",SITE,0)=RETURN(0)
"RTN","MPIRACK",68,0)
 K RETURN
"RTN","MPIRACK",69,0)
 G GETDATA
"RTN","MPIRACK",70,0)
 ;
"RTN","MPIRACK",71,0)
ALL(BEFORE) ;
"RTN","MPIRACK",72,0)
 N SITE
"RTN","MPIRACK",73,0)
 S SITE=""
"RTN","MPIRACK",74,0)
 F  S SITE=$O(^MPI(985.3,"S",SITE)) Q:SITE=""  D
"RTN","MPIRACK",75,0)
 .Q:SITE=200
"RTN","MPIRACK",76,0)
 .; ^ Don't send to FHIE site
"RTN","MPIRACK",77,0)
 .K RETURN
"RTN","MPIRACK",78,0)
 .D EN1^XWB2HL7(.RETURN,SITE,"MPIF ACK CHECK",1,BEFORE)
"RTN","MPIRACK",79,0)
 .S ^XTMP("MPIACK",0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"ACK CHECK"
"RTN","MPIRACK",80,0)
 .S ^XTMP("MPIACK",SITE,0)=RETURN(0)
"RTN","MPIRACK",81,0)
 D EN^MPIACK(BEFORE,.RETURN)
"RTN","MPIRACK",82,0)
 ; ^ check MPI in ALL as well
"RTN","MPIRACK",83,0)
 K RETURN
"RTN","MPIRACK",84,0)
 ;
"RTN","MPIRACK",85,0)
GETDATA ;
"RTN","MPIRACK",86,0)
 S SITE=0
"RTN","MPIRACK",87,0)
 F  S SITE=$O(^XTMP("MPIACK",SITE)) Q:SITE=""  D
"RTN","MPIRACK",88,0)
 .Q:SITE=200!(SITE="MPI")
"RTN","MPIRACK",89,0)
 .; didn't send to site 200 FHIE site or the MPI
"RTN","MPIRACK",90,0)
 .S RETURN(0)=$G(^XTMP("MPIACK",SITE,0))
"RTN","MPIRACK",91,0)
 .K RES
"RTN","MPIRACK",92,0)
 .D RET(.RES,RETURN(0))
"RTN","MPIRACK",93,0)
 .I +RES(0)'<0 S ^XTMP("MPIACK",SITE,0)=+RES(0)
"RTN","MPIRACK",94,0)
 .I +RES(0)<0 S ^XTMP("MPIACK",SITE,0)="Error in Process "_$P(RES(0),"^",2)
"RTN","MPIRACK",95,0)
 Q
"RTN","MPIRACK",96,0)
 ;
"RTN","MPIRACK",97,0)
RET(REST,IEN) ; RETRIEVING DATA
"RTN","MPIRACK",98,0)
 N CNT S CNT=0
"RTN","MPIRACK",99,0)
AGAIN1 H 10 K REST D RTNDATA^XWBDRPC(.REST,IEN) S CNT=CNT+1
"RTN","MPIRACK",100,0)
 I +REST(0)=-1&(REST(0)["Not DONE") I CNT<11 G AGAIN1
"RTN","MPIRACK",101,0)
 I +REST(0)=-1&(REST(0)["Not DONE") I CNT>10 S REST="0^Unable to get data" Q
"RTN","MPIRACK",102,0)
 I REST(0)="0^New" I CNT<11 G AGAIN1
"RTN","MPIRACK",103,0)
 I REST(0)="0^New" I CNT>10 S REST="0^Unable to get data" Q
"RTN","MPIRACK",104,0)
 Q:+REST(0)=-1
"RTN","MPIRACK",105,0)
 I REST'="" I CNT<11 G AGAIN1
"RTN","MPIRACK",106,0)
 I REST'="" I CNT>10 S REST="0^Unable to get data"
"RTN","MPIRACK",107,0)
 Q
"RTN","MPIRACK",108,0)
 ;
"RTN","MPIRACK",109,0)
REPORT ;
"RTN","MPIRACK",110,0)
 N RESULT,SITE,DIS
"RTN","MPIRACK",111,0)
 S SITE=0
"RTN","MPIRACK",112,0)
 W !!!,"Report for ACK check on "_$$FMTE^XLFDT($P($G(^XTMP("MPIACK",0)),"^",2)),!
"RTN","MPIRACK",113,0)
 F  S SITE=$O(^XTMP("MPIACK",SITE)) Q:SITE=""  D
"RTN","MPIRACK",114,0)
 .S RESULT=$G(^XTMP("MPIACK",SITE,0))
"RTN","MPIRACK",115,0)
 .I RESULT=0 S DIS="No messages needed to be regenerated"
"RTN","MPIRACK",116,0)
 .I RESULT=1 S DIS="Messages needed to be regenerated and were"
"RTN","MPIRACK",117,0)
 .I RESULT["Error" S DIS=RESULT
"RTN","MPIRACK",118,0)
 .W !,"Station Number: "_SITE_" Reported: "_DIS
"RTN","MPIRACK",119,0)
 W !
"RTN","MPIRACK",120,0)
 Q
"RTN","MPIRAUD")
0^165^B60126515
"RTN","MPIRAUD",1,0)
MPIRAUD ;BIR/DRI - REMOTE PATIENT AUDIT QUERY ROUTINE ;1/8/04  11:14
"RTN","MPIRAUD",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5,20,27,33**;30 Apr 1999
"RTN","MPIRAUD",3,0)
 ;Reference to RPCCHK^XWB2HL7  supported by IA #3144
"RTN","MPIRAUD",4,0)
 ;Reference to RTNDATA^XWBDRPC supported by IA #3149
"RTN","MPIRAUD",5,0)
 ;Reference to EN1^XWB2HL7 supported by IA #3144
"RTN","MPIRAUD",6,0)
 ;VAFC REMOTE AUDIT remote procedure call supported by IA # #### ;3496
"RTN","MPIRAUD",7,0)
 ;
"RTN","MPIRAUD",8,0)
EN ;entry point to request/monitor/display remote audit report
"RTN","MPIRAUD",9,0)
SEND ;send remote patient audit query
"RTN","MPIRAUD",10,0)
 W !!,"Remote request to sites for Patient Audit Data.",!
"RTN","MPIRAUD",11,0)
 N TFL,L,X,Y,ICNARR,MPIDIR,SNTDT,TFARR,CRTN ;**33
"RTN","MPIRAUD",12,0)
 S CRTN="MPIRAUD" ;**33
"RTN","MPIRAUD",13,0)
 I VALUE="ICN"!(VALUE="SSN") D GETTFL^MPIRUTL(VALUE(VALUE),.TFL)  ;**33
"RTN","MPIRAUD",14,0)
 W !!,"-> For ",VALUE," ",$G(VALUE(VALUE))
"RTN","MPIRAUD",15,0)
 I $D(^XTMP("MPIRAUD",VALUE(VALUE),0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRAUD",VALUE(VALUE),0),"^",2)) W "   query last sent on "_SNTDT
"RTN","MPIRAUD",16,0)
 W !
"RTN","MPIRAUD",17,0)
 ;
"RTN","MPIRAUD",18,0)
 I $P($G(TFL(0)),"^")=1 D
"RTN","MPIRAUD",19,0)
 . D SELTF Q:((Y="")!(Y="^"))
"RTN","MPIRAUD",20,0)
 . W !!,"Remote patient audit queries will be sent to:"
"RTN","MPIRAUD",21,0)
 . S CNT=0,X=0 F  S X=$O(TFARR(X)) Q:'X  S CNT=CNT+1
"RTN","MPIRAUD",22,0)
 . I CNT>22 D D2
"RTN","MPIRAUD",23,0)
 . I CNT<23 D D1
"RTN","MPIRAUD",24,0)
 ;
"RTN","MPIRAUD",25,0)
 D ADDTF^MPIRUTL I '$O(TFL(0)) Q  ;**33
"RTN","MPIRAUD",26,0)
 ;
"RTN","MPIRAUD",27,0)
 W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to continue" D ^DIR S MPIDIR=+Y K DIR I 'MPIDIR Q
"RTN","MPIRAUD",28,0)
 S X=0 F  S X=$O(TFL(X)) Q:'X  D
"RTN","MPIRAUD",29,0)
 . W !?3,"Sending Remote Query to: ",X,"  ",$P(TFL(X),"^")
"RTN","MPIRAUD",30,0)
 . I $D(^XTMP("MPIRAUD",VALUE(VALUE),X)) K ^XTMP("MPIRAUD",VALUE(VALUE),X)
"RTN","MPIRAUD",31,0)
 . D REQ(.VALUE,.TFL,X)
"RTN","MPIRAUD",32,0)
 I VALUE="ICN"!(VALUE="SSN") K ICNARR D CHKDUPS^MPIRUTL(.VALUE,.ICNARR) D  ;**33
"RTN","MPIRAUD",33,0)
 . I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIRAUD",34,0)
 .. W !!,"-> List of Duplicate ICN's:"
"RTN","MPIRAUD",35,0)
 .. S X=0 F  S X=$O(ICNARR(X)) Q:'X  W !,"   ICN ",X S SNTDT="" I $D(^XTMP("MPIRAUD",X,0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRAUD",X,0),"^",2)) W "   query last sent on "_SNTDT
"RTN","MPIRAUD",36,0)
 .. W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you wish to send a query to the MPI identified Duplicate ICN's" D ^DIR S MPIDIR=+Y K DIR I 'MPIDIR Q
"RTN","MPIRAUD",37,0)
 .. ;get ICN TFL list
"RTN","MPIRAUD",38,0)
 .. N VALUE S VALUE="ICN" ;duplicate checking only by icn
"RTN","MPIRAUD",39,0)
 .. S VALUE(VALUE)=0 F  S VALUE(VALUE)=$O(ICNARR(VALUE(VALUE))) Q:'VALUE(VALUE)  D
"RTN","MPIRAUD",40,0)
 ... K TFL D GETTFL^MPIRUTL(VALUE(VALUE),.TFL)  ;**33
"RTN","MPIRAUD",41,0)
 ... W !!,"-> For ",VALUE," ",VALUE(VALUE)
"RTN","MPIRAUD",42,0)
 ... I $D(^XTMP("MPIRAUD",VALUE(VALUE),0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRAUD",VALUE(VALUE),0),"^",2)) W "  query last sent on "_SNTDT
"RTN","MPIRAUD",43,0)
 ... W !
"RTN","MPIRAUD",44,0)
 ... I $P($G(TFL(0)),"^")=1 D
"RTN","MPIRAUD",45,0)
 .... D SELTF Q:((Y="")!(Y="^"))
"RTN","MPIRAUD",46,0)
 .... W !!,"Remote patient audit queries will be sent to:"
"RTN","MPIRAUD",47,0)
 .... S CNT=0,X=0 F  S X=$O(TFARR(X)) Q:'X  S CNT=CNT+1
"RTN","MPIRAUD",48,0)
 .... I CNT>22 D D2
"RTN","MPIRAUD",49,0)
 .... I CNT<23 D D1
"RTN","MPIRAUD",50,0)
 .... D ADDTF^MPIRUTL  ;**33
"RTN","MPIRAUD",51,0)
 .... W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to continue" D ^DIR S MPIDIR=+Y K DIR I 'MPIDIR Q
"RTN","MPIRAUD",52,0)
 .... S X=0 F  S X=$O(TFL(X)) Q:'X  D
"RTN","MPIRAUD",53,0)
 ..... W !?3,"Sending Remote Query to: ",X,"  ",$P(TFL(X),"^")
"RTN","MPIRAUD",54,0)
 ..... I $D(^XTMP("MPIRAUD",VALUE(VALUE),X)) K ^XTMP("MPIRAUD",VALUE(VALUE),X)
"RTN","MPIRAUD",55,0)
 ..... D REQ(.VALUE,.TFL,X)
"RTN","MPIRAUD",56,0)
 Q
"RTN","MPIRAUD",57,0)
 ;
"RTN","MPIRAUD",58,0)
SEND2 ;entry point to send a remote patient audit query
"RTN","MPIRAUD",59,0)
 N MPIBDT,MPIEDT
"RTN","MPIRAUD",60,0)
 N MPIEXIT S MPIEXIT=0
"RTN","MPIRAUD",61,0)
 W !!,"This option sends a remote patient audit query to selected treating"
"RTN","MPIRAUD",62,0)
 W !,"facility site(s) for MPI/PD audit data for a patient."
"RTN","MPIRAUD",63,0)
 F  D  Q:MPIEXIT=1
"RTN","MPIRAUD",64,0)
 . N VALUE
"RTN","MPIRAUD",65,0)
 . D ASK^MPIRUTL("ISDP",.VALUE) I $G(VALUE)="" S MPIEXIT=1 Q  ;**20
"RTN","MPIRAUD",66,0)
 . D ASK2(.MPIBDT,.MPIEDT) I 'MPIBDT!'MPIEDT S MPIEXIT=1 Q
"RTN","MPIRAUD",67,0)
 . D SEND
"RTN","MPIRAUD",68,0)
 Q
"RTN","MPIRAUD",69,0)
 ;
"RTN","MPIRAUD",70,0)
DISP ;display remote patient audit query
"RTN","MPIRAUD",71,0)
 W !!,"Display data returned from remote patient audit queries."
"RTN","MPIRAUD",72,0)
 W !,"(Be sure HISTORY is enabled to capture data!)",!
"RTN","MPIRAUD",73,0)
 N TFL,L,X,Y,ICNARR,STATUS,SL,TFARR
"RTN","MPIRAUD",74,0)
 I '$D(^XTMP("MPIRAUD",VALUE(VALUE))) W !!,"No remote query sent for this patient." G QDISP
"RTN","MPIRAUD",75,0)
 D TFLST^MPIRAUD2(.VALUE,.TFL)
"RTN","MPIRAUD",76,0)
 W !!,"-> For ",VALUE," ",$G(VALUE(VALUE)),!
"RTN","MPIRAUD",77,0)
 D SELTF I ((Y="")!(Y="^")) G QDISP
"RTN","MPIRAUD",78,0)
 I '$D(TFARR) W !,"No remote query sent for this patient." G QDISP
"RTN","MPIRAUD",79,0)
 S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRAUD",80,0)
 . S SL=$P(TFARR(L),"^",1)
"RTN","MPIRAUD",81,0)
 . S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRAUD",82,0)
 . I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRAUD",83,0)
 . E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRAUD",84,0)
 . E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRAUD",85,0)
 . E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRAUD",86,0)
 . W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")",!
"RTN","MPIRAUD",87,0)
 . D DISPLAY(.VALUE,$P(TFL(SL),"^",2))
"RTN","MPIRAUD",88,0)
 ;I 'Y G QDISP
"RTN","MPIRAUD",89,0)
 I VALUE="ICN"!(VALUE="SSN") K ICNARR D CHKDUPS^MPIRUTL(.VALUE,.ICNARR) D  ;**33
"RTN","MPIRAUD",90,0)
 . I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIRAUD",91,0)
 .. W !!,"  Duplicate ICN List:"
"RTN","MPIRAUD",92,0)
 .. ;get ICN TFL list
"RTN","MPIRAUD",93,0)
 .. S VALUE(VALUE)=0 F  S VALUE(VALUE)=$O(ICNARR(VALUE(VALUE))) Q:'VALUE(VALUE)  D
"RTN","MPIRAUD",94,0)
 ... W !,"-> For ",VALUE," ",VALUE(VALUE)
"RTN","MPIRAUD",95,0)
 ... I '$D(^XTMP("MPIRAUD",VALUE(VALUE))) W !!,"No remote query sent for this patient." Q
"RTN","MPIRAUD",96,0)
 ... K TFL D TFLST^MPIRAUD2(.VALUE,.TFL)
"RTN","MPIRAUD",97,0)
 ... W !!,"-> For ",VALUE," ",VALUE(VALUE),!
"RTN","MPIRAUD",98,0)
 ... I $D(TFL(0)) D
"RTN","MPIRAUD",99,0)
 .... S X=0 F  S X=$O(TFL(X)) Q:'X  I '$D(^XTMP("MPIRAUD",VALUE(VALUE),X)) K TFL(X)
"RTN","MPIRAUD",100,0)
 ... D SELTF Q:((Y="")!(Y="^"))
"RTN","MPIRAUD",101,0)
 ... I '$D(TFARR) W !,"No remote query sent for this patient." Q
"RTN","MPIRAUD",102,0)
 ... S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRAUD",103,0)
 .... S SL=$P(TFARR(L),"^",1)
"RTN","MPIRAUD",104,0)
 .... S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRAUD",105,0)
 .... I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRAUD",106,0)
 .... E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRAUD",107,0)
 .... E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRAUD",108,0)
 .... E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRAUD",109,0)
 .... W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")",!
"RTN","MPIRAUD",110,0)
 .... D DISPLAY(.VALUE,$P(TFL(SL),"^",2))
"RTN","MPIRAUD",111,0)
QDISP S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIRAUD",112,0)
 Q
"RTN","MPIRAUD",113,0)
 ;
"RTN","MPIRAUD",114,0)
DISP2 ;entry point to display a remote patient audit query
"RTN","MPIRAUD",115,0)
 N MPIEXIT S MPIEXIT=0
"RTN","MPIRAUD",116,0)
 W !!,"This option checks the status of an existing remote patient audit query."
"RTN","MPIRAUD",117,0)
 F  D  Q:MPIEXIT=1
"RTN","MPIRAUD",118,0)
 . N VALUE
"RTN","MPIRAUD",119,0)
 . D ASK^MPIRUTL("ISDP",.VALUE) I $G(VALUE)="" S MPIEXIT=1 Q  ;**20
"RTN","MPIRAUD",120,0)
 . K ZTSAVE S ZTSAVE("VALUE")="" D EN^XUTMDEVQ("DISP^MPIRAUD","Print MPI/PD Audit Data",.ZTSAVE)
"RTN","MPIRAUD",121,0)
 Q
"RTN","MPIRAUD",122,0)
 ;
"RTN","MPIRAUD",123,0)
ASK2(MPIBDT,MPIEDT) ;Ask for Date Range
"RTN","MPIRAUD",124,0)
 N DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIRAUD",125,0)
 S (MPIBDT,MPIEDT)=""
"RTN","MPIRAUD",126,0)
 W !!,"Enter date range for data to be included in report."
"RTN","MPIRAUD",127,0)
 S DIR(0)="DAO^:DT:EPX",DIR("A")="Beginning Date:  ",DIR("B")="JAN 01, 1997" D ^DIR K DIR Q:$D(DIRUT)  S MPIBDT=Y
"RTN","MPIRAUD",128,0)
 S DIR(0)="DAO^"_MPIBDT_":DT:EPX",DIR("A")="Ending Date:  ",DIR("B")=$$FMTE^XLFDT(DT) D ^DIR K DIR Q:$D(DIRUT)  S MPIEDT=Y
"RTN","MPIRAUD",129,0)
 Q
"RTN","MPIRAUD",130,0)
 ;
"RTN","MPIRAUD",131,0)
REQ(VALUE,TFL,LOC) ;request a remote audit report
"RTN","MPIRAUD",132,0)
 ;LOC - STATION# OF THE INSTITUTION file entry
"RTN","MPIRAUD",133,0)
 N RETURN
"RTN","MPIRAUD",134,0)
 I +LOC>0 D EN1^XWB2HL7(.RETURN,LOC,"VAFC REMOTE AUDIT",1,.VALUE,"",MPIBDT,MPIEDT)
"RTN","MPIRAUD",135,0)
 S ^XTMP("MPIRAUD",VALUE(VALUE),0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"REMOTE AUDIT QUERY"
"RTN","MPIRAUD",136,0)
 S ^XTMP("MPIRAUD",VALUE(VALUE),LOC,0)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","MPIRAUD",137,0)
 Q
"RTN","MPIRAUD",138,0)
 ;
"RTN","MPIRAUD",139,0)
DISPLAY(VALUE,LOC) ;display a remote audit report
"RTN","MPIRAUD",140,0)
 N GLO,STATUS,RETURN,RESULT,RET,TXT
"RTN","MPIRAUD",141,0)
 I '$D(^XTMP("MPIRAUD",VALUE(VALUE),0)) W !?35," - No patient audit query exists for this patient." Q
"RTN","MPIRAUD",142,0)
 I $D(^XTMP("MPIRAUD",VALUE(VALUE),LOC,0)) S RETURN(0)=$P(^XTMP("MPIRAUD",VALUE(VALUE),LOC,0),"^") D
"RTN","MPIRAUD",143,0)
 . D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D
"RTN","MPIRAUD",144,0)
 .. D RTNDATA^XWBDRPC(.RET,RETURN(0)) D
"RTN","MPIRAUD",145,0)
 ... I $G(RET)'="",$D(@RET) S GLO=RET F  S GLO=$Q(@GLO) Q:$QS(GLO,1)'=$J  S TXT=@GLO W !,TXT I ($E(IOST,1,2)="C-") D
"RTN","MPIRAUD",146,0)
 .... ;I $Y>22 S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF S $Y=1
"RTN","MPIRAUD",147,0)
 ... S R="" F  S R=$O(RET(R)) Q:R=""  S TXT=RET(R) W !,TXT I ($E(IOST,1,2)="C-") D
"RTN","MPIRAUD",148,0)
 .... ;I $Y>22 S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF S $Y=1
"RTN","MPIRAUD",149,0)
 . I $G(RET(0))<0 S TXT="No Data Returned Due To: "_$P(RET(0),"^",2,99) W !!,TXT
"RTN","MPIRAUD",150,0)
 ;
"RTN","MPIRAUD",151,0)
 K R
"RTN","MPIRAUD",152,0)
 Q
"RTN","MPIRAUD",153,0)
 ;
"RTN","MPIRAUD",154,0)
SELTF ;Allow the user to select treating facilities from a list
"RTN","MPIRAUD",155,0)
 K TFARR N TFARR1,L,I,A,CNT
"RTN","MPIRAUD",156,0)
 S I=0 F  S I=$O(TFL(I)) Q:'I  D
"RTN","MPIRAUD",157,0)
 . S TFARR1($P(TFL(I),"^",1))=$P(TFL(I),"^",2)_"^"_$P(TFL(I),"^",1)
"RTN","MPIRAUD",158,0)
 S I="",CNT=0 F  S I=$O(TFARR1(I)) Q:I=""  D
"RTN","MPIRAUD",159,0)
 . S CNT=CNT+1 S TFARR(CNT)=TFARR1(I)
"RTN","MPIRAUD",160,0)
 I CNT=1 S Y=1 Q
"RTN","MPIRAUD",161,0)
 K DIR,Y
"RTN","MPIRAUD",162,0)
 S CNT=CNT+1,TFARR(CNT)="ALL"
"RTN","MPIRAUD",163,0)
 S DIR(0)="LA^1:"_CNT
"RTN","MPIRAUD",164,0)
 S DIR("A")="Select site(s) 1-"_(CNT-1)_" or "_CNT_" for all: "
"RTN","MPIRAUD",165,0)
 S DIR("B")=CNT
"RTN","MPIRAUD",166,0)
 W !,"Select one or more of the following: "
"RTN","MPIRAUD",167,0)
 I CNT>22 D D2
"RTN","MPIRAUD",168,0)
 I CNT<23 D D1
"RTN","MPIRAUD",169,0)
 D ^DIR K DIR Q:Y="^"
"RTN","MPIRAUD",170,0)
 I Y<1 K TFARR,TFARR1,L,I,A,CNT Q
"RTN","MPIRAUD",171,0)
 S Y=","_Y
"RTN","MPIRAUD",172,0)
 I Y[(","_CNT_",") K TFARR(CNT),TFARR1,CNT,I Q
"RTN","MPIRAUD",173,0)
 S I=0,A="" F  S I=$O(TFARR(I)) Q:'I  I Y'[(","_I_",") S A=$P(TFARR(I),"^",1) K TFL(A) K TFARR(I)
"RTN","MPIRAUD",174,0)
 K L,I,A,TFARR(CNT),CNT,TFARR1
"RTN","MPIRAUD",175,0)
 Q
"RTN","MPIRAUD",176,0)
D1 ;
"RTN","MPIRAUD",177,0)
 S C1=1,I=0 F  S I=$O(TFARR(I)) Q:'I  D
"RTN","MPIRAUD",178,0)
 . W !,C1_".",?4,"("_$P(TFARR(I),"^",1)_") "_$P(TFARR(I),"^",2) S C1=C1+1
"RTN","MPIRAUD",179,0)
 K C1,I
"RTN","MPIRAUD",180,0)
 Q
"RTN","MPIRAUD",181,0)
D2 ;
"RTN","MPIRAUD",182,0)
 S I2=23 F I=1:1:22 D
"RTN","MPIRAUD",183,0)
 . W !,I_".",?4,"("_$P(TFARR(I),"^",1)_") "_$P(TFARR(I),"^",2)
"RTN","MPIRAUD",184,0)
 . I $D(TFARR(I2)) W ?41,I2_". ",?44,"("_$P(TFARR(I2),"^",1)_") "_$P(TFARR(I2),"^",2) S I2=I2+1
"RTN","MPIRAUD",185,0)
 K I,I2
"RTN","MPIRAUD",186,0)
 Q
"RTN","MPIRAUD2")
0^166^B10911086
"RTN","MPIRAUD2",1,0)
MPIRAUD2 ;BIR/DRI - REMOTE PATIENT AUDIT QUERY ROUTINE #2 ;1/8/04  11:14
"RTN","MPIRAUD2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN ;**5,20,33**;30 Apr 1999
"RTN","MPIRAUD2",3,0)
 ;
"RTN","MPIRAUD2",4,0)
TFLST(VALUE,TFL) ;Get list of sites query was sent to for this ICN
"RTN","MPIRAUD2",5,0)
 N X,LOC,IEN,RESULT
"RTN","MPIRAUD2",6,0)
 S X=0
"RTN","MPIRAUD2",7,0)
 F  S X=$O(^XTMP("MPIRAUD",VALUE(VALUE),X)) Q:'X  D
"RTN","MPIRAUD2",8,0)
 .  S IEN=$$IEN^XUAF4(X),LOC=$$NNT^XUAF4(IEN)
"RTN","MPIRAUD2",9,0)
 .  S TFL(X)=LOC
"RTN","MPIRAUD2",10,0)
 .  D MONITOR(.VALUE,X,.RESULT)
"RTN","MPIRAUD2",11,0)
 .  S $P(TFL(X),"^",3)=$P(RESULT(0),"^",2)
"RTN","MPIRAUD2",12,0)
 Q
"RTN","MPIRAUD2",13,0)
 ;
"RTN","MPIRAUD2",14,0)
MONITOR(VALUE,LOC,RESULT) ;monitor a remote audit request
"RTN","MPIRAUD2",15,0)
 N STATUS,RETURN
"RTN","MPIRAUD2",16,0)
 I '$D(^XTMP("MPIRAUD",VALUE(VALUE),0)) S RESULT(0)="-1^Unknown" Q
"RTN","MPIRAUD2",17,0)
 I '$D(^XTMP("MPIRAUD",VALUE(VALUE),LOC,0)) S RESULT(0)="-1^Unknown" Q
"RTN","MPIRAUD2",18,0)
 I $D(^XTMP("MPIRAUD",VALUE(VALUE),LOC,0)) S RETURN(0)=$P(^XTMP("MPIRAUD",VALUE(VALUE),LOC,0),"^") D RPCCHK^XWB2HL7(.RESULT,RETURN(0))
"RTN","MPIRAUD2",19,0)
 Q
"RTN","MPIRAUD2",20,0)
CHKSTAT ;check status of remote patient audit query
"RTN","MPIRAUD2",21,0)
 W !!,"Checking the status of Remote Patient Audit Data Query.",!
"RTN","MPIRAUD2",22,0)
 N TFL,L,X,Y,ICNARR,STATUS,SL,TFARR
"RTN","MPIRAUD2",23,0)
 I '$D(^XTMP("MPIRAUD",VALUE(VALUE))) W !!,"No remote query sent for this ",VALUE," ." Q
"RTN","MPIRAUD2",24,0)
 W !!,"-> For ",VALUE," ",$G(VALUE(VALUE)),!
"RTN","MPIRAUD2",25,0)
 D TFLST(.VALUE,.TFL)
"RTN","MPIRAUD2",26,0)
 D SELTF^MPIRAUD Q:((Y="")!(Y="^"))
"RTN","MPIRAUD2",27,0)
 I '$D(TFARR) W !,"No remote query sent for this patient." Q
"RTN","MPIRAUD2",28,0)
 S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRAUD2",29,0)
 . S SL=$P(TFARR(L),"^",1)
"RTN","MPIRAUD2",30,0)
 . S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRAUD2",31,0)
 . I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRAUD2",32,0)
 . E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRAUD2",33,0)
 . E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRAUD2",34,0)
 . E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRAUD2",35,0)
 . W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")"
"RTN","MPIRAUD2",36,0)
 I VALUE="ICN" K ICNARR D CHKDUPS^MPIRUTL(.VALUE,.ICNARR) D  ;**33
"RTN","MPIRAUD2",37,0)
 . I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIRAUD2",38,0)
 .. W !!,"  Duplicate ICN List:"
"RTN","MPIRAUD2",39,0)
 .. ;get ICN TFL list
"RTN","MPIRAUD2",40,0)
 .. S VALUE(VALUE)=0 F  S VALUE(VALUE)=$O(ICNARR(VALUE(VALUE))) Q:'VALUE(VALUE)  D
"RTN","MPIRAUD2",41,0)
 ... W !,"-> For ",VALUE," ",VALUE(VALUE)
"RTN","MPIRAUD2",42,0)
 ... I '$D(^XTMP("MPIRAUD",VALUE(VALUE))) W !!,"No remote query sent for this patient." Q
"RTN","MPIRAUD2",43,0)
 ... K TFL D TFLST(.VALUE,.TFL)
"RTN","MPIRAUD2",44,0)
 ... W !!,"-> For ",VALUE," ",VALUE(VALUE),!
"RTN","MPIRAUD2",45,0)
 ... I $D(TFL(0)) D
"RTN","MPIRAUD2",46,0)
 .... S X=0 F  S X=$O(TFL(X)) Q:'X  I '$D(^XTMP("MPIRAUD",VALUE(VALUE),X)) K TFL(X)
"RTN","MPIRAUD2",47,0)
 ... D SELTF^MPIRAUD Q:((Y="")!(Y="^"))
"RTN","MPIRAUD2",48,0)
 ... I '$D(TFARR) W !,"No remote query sent for this patient." Q
"RTN","MPIRAUD2",49,0)
 ... S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRAUD2",50,0)
 .... S SL=$P(TFARR(L),"^",1)
"RTN","MPIRAUD2",51,0)
 .... S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRAUD2",52,0)
 .... I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRAUD2",53,0)
 .... E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRAUD2",54,0)
 .... E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRAUD2",55,0)
 .... E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRAUD2",56,0)
 .... W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")"
"RTN","MPIRAUD2",57,0)
 Q
"RTN","MPIRAUD2",58,0)
 ;
"RTN","MPIRAUD2",59,0)
CHKSTAT2 ;entry point to check status of a remote patient audit query
"RTN","MPIRAUD2",60,0)
 N MPIEXIT S MPIEXIT=0
"RTN","MPIRAUD2",61,0)
 W !!,"This option checks the status of an existing remote patient audit query."
"RTN","MPIRAUD2",62,0)
 F  D  Q:MPIEXIT=1
"RTN","MPIRAUD2",63,0)
 . N VALUE
"RTN","MPIRAUD2",64,0)
 . D ASK^MPIRUTL("ISDP",.VALUE) I $G(VALUE)="" S MPIEXIT=1 Q  ;**20
"RTN","MPIRAUD2",65,0)
 . D CHKSTAT
"RTN","MPIRAUD2",66,0)
 Q
"RTN","MPIRCMRP")
0^167^B36971724
"RTN","MPIRCMRP",1,0)
MPIRCMRP ;BP/CMC-RPC INTERFACE FOR CMOR PUSH ;6/24/04
"RTN","MPIRCMRP",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**29,31,35**;30 Apr 99
"RTN","MPIRCMRP",3,0)
 ;
"RTN","MPIRCMRP",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIRCMRP",5,0)
 ;  EN1^XWB2HL7 - #3144
"RTN","MPIRCMRP",6,0)
 ;  RTNDATA^XWBDRPC - #3149
"RTN","MPIRCMRP",7,0)
 ;  ^HLCS(870,"C" - #3550
"RTN","MPIRCMRP",8,0)
 ;
"RTN","MPIRCMRP",9,0)
CMOR ; Option to update CMOR remotely
"RTN","MPIRCMRP",10,0)
 D CMOR2 I QFLG K QFLG Q
"RTN","MPIRCMRP",11,0)
 N TMP,CIEN,ICN,CHK,CMOR,SITE,A31,SCRN
"RTN","MPIRCMRP",12,0)
 S ICN=$$ASKPT^MPIRUTL()
"RTN","MPIRCMRP",13,0)
 Q:ICN<1
"RTN","MPIRCMRP",14,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2),CIEN=CMOR
"RTN","MPIRCMRP",15,0)
 S CMOR=$$STA^XUAF4(CMOR)
"RTN","MPIRCMRP",16,0)
 I CMOR="" W !!,"Patient does not have CMOR on MPI" Q
"RTN","MPIRCMRP",17,0)
 S TMP=$O(^MPI(985.5,"AM",ICN,"")) I $O(^MPI(985.5,"AM",ICN,TMP))="" W !!,"Patient isn't shared, can't request change of CMOR." Q
"RTN","MPIRCMRP",18,0)
 D PDAT^MPIMPDAT(ICN)
"RTN","MPIRCMRP",19,0)
 W !!,"Current CMOR is: "_$P($$NS^XUAF4(CIEN),"^")_" ("_CMOR_")"
"RTN","MPIRCMRP",20,0)
 S SITE=$$ASKST(ICN,CIEN)
"RTN","MPIRCMRP",21,0)
 Q:SITE=0!(SITE="^")!(SITE="")
"RTN","MPIRCMRP",22,0)
 ;*35 removed until VistA patch is installed at all site to address the failure to issue
"RTN","MPIRCMRP",23,0)
 ;K DIR
"RTN","MPIRCMRP",24,0)
 ;S DIR(0)="Y",DIR("B")="NO",DIR("A",1)="Trigger a patient update to synchronize data at all",DIR("A")="sites after the CMOR has been changed"
"RTN","MPIRCMRP",25,0)
 ;D ^DIR
"RTN","MPIRCMRP",26,0)
 ;K DIR
"RTN","MPIRCMRP",27,0)
 ;I (Y'=1)&(Y'=0) Q
"RTN","MPIRCMRP",28,0)
 ;S A31=Y
"RTN","MPIRCMRP",29,0)
 S A31=0
"RTN","MPIRCMRP",30,0)
 W !!
"RTN","MPIRCMRP",31,0)
 N DIR,Y S DIR(0)="Y",DIR("B")="YES"
"RTN","MPIRCMRP",32,0)
 S DIR("A")="Are you sure you want to request a PUSH CMOR for this Patient"
"RTN","MPIRCMRP",33,0)
 D ^DIR
"RTN","MPIRCMRP",34,0)
 K DIR
"RTN","MPIRCMRP",35,0)
 Q:$D(DTOUT)!($D(DUOUT))!('Y)
"RTN","MPIRCMRP",36,0)
 W !!,"Attempting to Request CMOR PUSH for this patient....",!
"RTN","MPIRCMRP",37,0)
 K RETURN
"RTN","MPIRCMRP",38,0)
 D EN1^XWB2HL7(.RETURN,CMOR,"MPIF CMOR PUSH REMOTE",1,ICN,SITE)
"RTN","MPIRCMRP",39,0)
 K RES
"RTN","MPIRCMRP",40,0)
 H 10
"RTN","MPIRCMRP",41,0)
 D RET(.RES,RETURN(0))
"RTN","MPIRCMRP",42,0)
 N XXX
"RTN","MPIRCMRP",43,0)
 I +RES(0)=1 W !,"CMOR PUSH requested"
"RTN","MPIRCMRP",44,0)
 I +RES(0)'=1 D  Q
"RTN","MPIRCMRP",45,0)
 .I $P(RES(0),"^",2)["Handle" S $P(RES(0),"^",2)="Error in Process"
"RTN","MPIRCMRP",46,0)
 .I $P(RES(0),"^",2)="" S $P(RES(0),"^",2)="No data returned from site yet"
"RTN","MPIRCMRP",47,0)
 .W !,"Unable to request CMOR PUSH - ",$P(RES(0),"^",2)_" "_$P(RES,"^",2)
"RTN","MPIRCMRP",48,0)
 K RES
"RTN","MPIRCMRP",49,0)
 I A31 D A31(ICN,SITE)
"RTN","MPIRCMRP",50,0)
 Q
"RTN","MPIRCMRP",51,0)
A31(ICN,CMOR) ;
"RTN","MPIRCMRP",52,0)
 ; send out a broadcast of new CMORs fields
"RTN","MPIRCMRP",53,0)
 N CNT S CNT=0
"RTN","MPIRCMRP",54,0)
TRY ; CHECK IF CMOR HAS BEEN CHANGED AT MPI, IF SO SEND A31 TO ALL TFS MINUS CMOR SITE
"RTN","MPIRCMRP",55,0)
 N CCMOR S CCMOR=$P(^MPIVET(ICN,1),"^",2)
"RTN","MPIRCMRP",56,0)
 I $$IEN^XUAF4(CMOR)'=CCMOR S CNT=CNT+1 I CNT<11 H 5 G TRY
"RTN","MPIRCMRP",57,0)
 I CNT>9 W !,"CMOR still hasn't changed, data sync not triggered" Q
"RTN","MPIRCMRP",58,0)
 ; cmor updated - trigger A31 to all TFs for ICN, except for CMOR
"RTN","MPIRCMRP",59,0)
 N A31,ST,CIEN S CIEN=$$IEN^XUAF4(CMOR)
"RTN","MPIRCMRP",60,0)
 S ST=0 F  S ST=$O(^MPI(985.5,"AM",ICN,ST)) Q:ST=""  D
"RTN","MPIRCMRP",61,0)
 .I ST=CIEN Q
"RTN","MPIRCMRP",62,0)
 .; ^ SITE IS CMOR'S SITE - DON'T NEED TO SEND THEM THE A31
"RTN","MPIRCMRP",63,0)
 .S A31=$$A31^MPIA31B(ICN,ST,CIEN)
"RTN","MPIRCMRP",64,0)
 .I +A31=1 W !,"Update message sent to "_$P($$NS^XUAF4(ST),"^")_" ("_$$STA^XUAF4(ST)_")"
"RTN","MPIRCMRP",65,0)
 .I +A31'=1 W !,"Unable to send update message to "_$P($$NS^XUAF4(ST),"^")_" ("_$$STA^XUAF4(ST)_")"
"RTN","MPIRCMRP",66,0)
 ;
"RTN","MPIRCMRP",67,0)
 Q
"RTN","MPIRCMRP",68,0)
 ;
"RTN","MPIRCMRP",69,0)
RET(REST,IEN) ; RETRIEVING DATA
"RTN","MPIRCMRP",70,0)
 N CNT S CNT=0
"RTN","MPIRCMRP",71,0)
AGAIN1 H 10 K REST D RTNDATA^XWBDRPC(.REST,IEN) S CNT=CNT+1
"RTN","MPIRCMRP",72,0)
 I +REST(0)=-1&(REST(0)["Not DONE") I CNT<11 G AGAIN1
"RTN","MPIRCMRP",73,0)
 I +REST(0)=-1&(REST(0)["Not DONE") I CNT>10 S REST="0^Unable to get data" Q
"RTN","MPIRCMRP",74,0)
 I REST(0)="0^New" I CNT<11 G AGAIN1
"RTN","MPIRCMRP",75,0)
 I REST(0)="0^New" I CNT>10 S REST="0^Unable to get data" Q
"RTN","MPIRCMRP",76,0)
 Q:+REST(0)=-1
"RTN","MPIRCMRP",77,0)
 I REST'="" I CNT<11 G AGAIN1
"RTN","MPIRCMRP",78,0)
 I REST'="" I CNT>10 S REST="0^Unable to get data"
"RTN","MPIRCMRP",79,0)
 Q
"RTN","MPIRCMRP",80,0)
 ;
"RTN","MPIRCMRP",81,0)
ASKST(ICN,CIEN) ;
"RTN","MPIRCMRP",82,0)
 N TP,DIC,X,Y,DTOUT,DUOUT
"RTN","MPIRCMRP",83,0)
SITE S DIC="^DIC(4,",DIC(0)="QEAM",DIC("A")="Select the site to be the new CMOR: "
"RTN","MPIRCMRP",84,0)
 ;S DIC("S")="I $D(^MPI(985.5,""AM"",ICN,+Y)),$D(^HLCS(870,""C"",+Y)),$P(^DIC(4,+Y,0),"^",13)="VAMC"!($P(^DIC(4,+Y,0),"^",13)="OC")!($P(^DIC(4,+Y,0),"^",13)="M&ROC")!($P(^DIC(4,+Y,0),"^",13)="RO-OC")"
"RTN","MPIRCMRP",85,0)
 S DIC("S")="N TP,YP S YP=+Y_"","",TP=$$GET1^DIQ(4,YP,13) I $D(^MPI(985.5,""AM"",ICN,+Y)),$D(^HLCS(870,""C"",+Y)),TP=""VAMC""!(TP=""OC"")!(TP=""RO-OC"")!(TP=""M&ROC"")"
"RTN","MPIRCMRP",86,0)
 D ^DIC
"RTN","MPIRCMRP",87,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","MPIRCMRP",88,0)
 I Y<1!(+Y=CIEN) G SITE
"RTN","MPIRCMRP",89,0)
 Q $$STA^XUAF4(+Y)
"RTN","MPIRCMRP",90,0)
 ;
"RTN","MPIRCMRP",91,0)
CMOR2 ;Remote CMOR Push [MPI DATA MGT REMOTE CMOR PUSH]
"RTN","MPIRCMRP",92,0)
 ;MPIRCMRP
"RTN","MPIRCMRP",93,0)
 W @IOF S QFLG=0
"RTN","MPIRCMRP",94,0)
 W !,"This option allows a user to remotely REQUEST a PUSH of CMOR from the current"
"RTN","MPIRCMRP",95,0)
 W !,"COORDINATING MASTER OF RECORD (CMOR).  The patient can be selected by ICN or"
"RTN","MPIRCMRP",96,0)
 W !,"SSN.  The user will be prompted for which site should become the new CMOR."
"RTN","MPIRCMRP",97,0)
 W !,"The new CMOR must be a valid site to be a CMOR and be in the Treating Facility"
"RTN","MPIRCMRP",98,0)
 W !,"list.  The request will be made as if you had used the VISTA option at the"
"RTN","MPIRCMRP",99,0)
 W !,"current CMOR to request a Push of the CMOR.  You will also be given the option"
"RTN","MPIRCMRP",100,0)
 W !,"of synchronizing the key demographic fields.  The option will pause while the"
"RTN","MPIRCMRP",101,0)
 W !,"CMOR Push request is sent and will check up to 10 times to see if the CMOR has"
"RTN","MPIRCMRP",102,0)
 W !,"changed on the MPI to the new site.  If the CMOR does not change during that"
"RTN","MPIRCMRP",103,0)
 W !,"time, the synchronization will not occur and you will be notified of such."
"RTN","MPIRCMRP",104,0)
 W !!,"When to use this option:"
"RTN","MPIRCMRP",105,0)
 W !,"- The current CMOR assignment for an ICN needs to be transferred to another"
"RTN","MPIRCMRP",106,0)
 W !,"  facility without involving site personnel.",!!!
"RTN","MPIRCMRP",107,0)
 K DIRUT
"RTN","MPIRCMRP",108,0)
 Q
"RTN","MPIRCMRP",109,0)
SYNC ; Option to SYNC tfs with CMOR data from the MPI
"RTN","MPIRCMRP",110,0)
 D SYNC2 I QFLG K QFLG Q
"RTN","MPIRCMRP",111,0)
 N TMP,CIEN,ICN,CHK,CMOR,SITE,A31,SCRN
"RTN","MPIRCMRP",112,0)
 S ICN=$$ASKPT^MPIRUTL()
"RTN","MPIRCMRP",113,0)
 Q:ICN<1
"RTN","MPIRCMRP",114,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2),CIEN=CMOR
"RTN","MPIRCMRP",115,0)
 S CMOR=$$STA^XUAF4(CMOR)
"RTN","MPIRCMRP",116,0)
 S TMP=$O(^MPI(985.5,"AM",ICN,"")) I $O(^MPI(985.5,"AM",ICN,TMP))="" W !!,"Patient isn't shared." Q
"RTN","MPIRCMRP",117,0)
 K DIR
"RTN","MPIRCMRP",118,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A",1)="Are you sure you want to trigger a patient update to",DIR("A")="synchronize the data at all sites with the CMOR's data"
"RTN","MPIRCMRP",119,0)
 D ^DIR
"RTN","MPIRCMRP",120,0)
 K DIR
"RTN","MPIRCMRP",121,0)
 I (Y'=1)&(Y'=0) Q
"RTN","MPIRCMRP",122,0)
 S A31=Y
"RTN","MPIRCMRP",123,0)
 W !!
"RTN","MPIRCMRP",124,0)
 I A31 D A31(ICN,CMOR)
"RTN","MPIRCMRP",125,0)
 Q
"RTN","MPIRCMRP",126,0)
SYNC2 ; Sync TF site(s) data from CMORs [MPI DATA MGT REMOTE DATA SYNC]
"RTN","MPIRCMRP",127,0)
 ;SYNC^MPIRCMRP
"RTN","MPIRCMRP",128,0)
 W @IOF S QFLG=0
"RTN","MPIRCMRP",129,0)
 W !,"This option allows a user to remotely REQUEST the synchronization of the key"
"RTN","MPIRCMRP",130,0)
 W !,"demographic fields from the current CMOR for an ICN to all other treating"
"RTN","MPIRCMRP",131,0)
 W !,"facilities associated with this ICN."
"RTN","MPIRCMRP",132,0)
 W !!,"When to use this option:"
"RTN","MPIRCMRP",133,0)
 W !,"- When key demographic fields at a non-CMOR Treating Facility site do not"
"RTN","MPIRCMRP",134,0)
 W !,"  match the CMOR site's data.",!!!
"RTN","MPIRCMRP",135,0)
 K DIRUT
"RTN","MPIRCMRP",136,0)
 Q
"RTN","MPIRESS")
0^168^B9608024
"RTN","MPIRESS",1,0)
MPIRESS ;BIOFO/CMC-Process a CMOR result ;7/18/03
"RTN","MPIRESS",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**18,23**;30 Apr 99
"RTN","MPIRESS",3,0)
 ;
"RTN","MPIRESS",4,0)
IN ;
"RTN","MPIRESS",5,0)
 ; FORWARDING approve/not approve msg to update Request in 984.9 file
"RTN","MPIRESS",6,0)
 N XX,CNT,II,ERR,LNK,ARRAY,REQ,RLST,MPIHL,MPIL,ERROR,FROM
"RTN","MPIRESS",7,0)
 S CNT=0
"RTN","MPIRESS",8,0)
 F II=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIRESS",9,0)
 .I $P(HLNODE,HL("FS"),1)="EVN" S HLA("HLS",1)=HLNODE
"RTN","MPIRESS",10,0)
 .I $P(HLNODE,HL("FS"),1)="NTE" S HLA("HLS",2)=HLNODE,REQ=$P(HLNODE,HL("FS"),7)
"RTN","MPIRESS",11,0)
 .I $P(HLNODE,HL("FS"),1)="PID" S HLA("HLS",3)=HLNODE,ARRAY("ICN")=+$P(HLNODE,HL("FS"),3)
"RTN","MPIRESS",12,0)
 S FROM=$G(HL("SFN"))
"RTN","MPIRESS",13,0)
 D INIT^HLFNC2("MPI CMOR APPROVE/DISAPPROVE",.MPIHL)
"RTN","MPIRESS",14,0)
 I $G(MPIHL)'="" D  Q
"RTN","MPIRESS",15,0)
 .S ERROR=MPIHL_" returned for ICN "_ARRAY("ICN")_" for CMOR change app/disapp msg for request #"_REQ D ERROR^MPIA08(.ARRAY,.MPIHL,ERROR,234)
"RTN","MPIRESS",16,0)
 ;GET LINK TO SEND MSG TO
"RTN","MPIRESS",17,0)
 K HLL("LINKS")
"RTN","MPIRESS",18,0)
 D LINK^HLUTIL3(+REQ,.MPIL,"I")
"RTN","MPIRESS",19,0)
 S XX=$O(MPIL(0)) I XX>0 S HLL("LINKS",1)="MPI CMOR APP/DIS^"_MPIL(XX)
"RTN","MPIRESS",20,0)
 I FROM'="" S MPIHL("SUBSCRIBER")="^^"_FROM
"RTN","MPIRESS",21,0)
 D GENERATE^HLMA("MPI CMOR APPROVE/DISAPPROVE","LM",1,.RLST,"",.MPIHL)
"RTN","MPIRESS",22,0)
 I 'RLST D  Q
"RTN","MPIRESS",23,0)
 .S ERROR="Error returned when generating msg for CMOR change app/disapp msg for ICN "_ARRAY("ICN")_" for CMOR change app/disapp msg for request #"_REQ
"RTN","MPIRESS",24,0)
 .D ERROR^MPIA08(.ARRAY,.MPIHL,ERROR,234)
"RTN","MPIRESS",25,0)
 Q
"RTN","MPIRESS",26,0)
 ;
"RTN","MPIRESS",27,0)
IN2 ; forwarding initial CMOR REQUEST TO SITE
"RTN","MPIRESS",28,0)
 N CXX,NT,II,ERR,LNK,ARRAY,REQ,RLST,MPIHL,MPIL,FROM,NCMOR
"RTN","MPIRESS",29,0)
 S CNT=0
"RTN","MPIRESS",30,0)
 F II=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIRESS",31,0)
 .I $P(HLNODE,HL("FS"),1)="EVN" S HLA("HLS",1)=HLNODE
"RTN","MPIRESS",32,0)
 .I $P(HLNODE,HL("FS"),1)="NTE" S HLA("HLS",2)=HLNODE,REQ=$P(HLNODE,HL("FS"),7),NCMOR=$P(HLNODE,HL("FS"),10)
"RTN","MPIRESS",33,0)
 .I $P(HLNODE,HL("FS"),1)="PID" S HLA("HLS",3)=HLNODE,ARRAY("ICN")=+$P(HLNODE,HL("FS"),3)
"RTN","MPIRESS",34,0)
 S FROM=$G(HL("SFN"))
"RTN","MPIRESS",35,0)
 D INIT^HLFNC2("MPI CMOR REQUEST",.MPIHL)
"RTN","MPIRESS",36,0)
 I $G(MPIHL)'="" D  Q
"RTN","MPIRESS",37,0)
 .S ERROR=MPIHL_" returned for ICN "_ARRAY("ICN")_" for CMOR change app/disapp msg for request #"_REQ D ERROR^MPIA08(.ARRAY,.MPIHL,ERROR,234)
"RTN","MPIRESS",38,0)
 ;GET LINK TO SEND MSG TO
"RTN","MPIRESS",39,0)
 D LINK^HLUTIL3(NCMOR,.MPIL,"I")
"RTN","MPIRESS",40,0)
 S XX=$O(MPIL(0)) I XX>0 S HLL("LINKS",1)="MPI CMOR RESPONSE^"_MPIL(XX)
"RTN","MPIRESS",41,0)
 I FROM'="" S MPIHL("SUBSCRIBER")="^^"_FROM
"RTN","MPIRESS",42,0)
 D GENERATE^HLMA("MPI CMOR REQUEST","LM",1,.RLST,"",.MPIHL)
"RTN","MPIRESS",43,0)
 I 'RLST D  Q
"RTN","MPIRESS",44,0)
 .S ERROR="Error returned when generating msg for CMOR change app/disapp msg for ICN "_ARRAY("ICN")_" for CMOR change app/disapp msg for request #"_REQ
"RTN","MPIRESS",45,0)
 .D ERROR^MPIA08(.ARRAY,.MPIHL,ERROR,234)
"RTN","MPIRESS",46,0)
 Q
"RTN","MPIRESS",47,0)
 ;
"RTN","MPIRINT")
0^169^B38296468
"RTN","MPIRINT",1,0)
MPIRINT ;BP/CMC-RPC INTERFACES ;11/28/01
"RTN","MPIRINT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,24,33**;30 Apr 99
"RTN","MPIRINT",3,0)
 ;
"RTN","MPIRINT",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIRINT",5,0)
 ;  EN1^XWB2HL7 - #3144
"RTN","MPIRINT",6,0)
 ;  RTNDATA^XWBDRPC - #3149
"RTN","MPIRINT",7,0)
 ;  ^HLCS(870,"C" - #3550
"RTN","MPIRINT",8,0)
 ;
"RTN","MPIRINT",9,0)
SPI ; Remotely using SPI -- no selection possible.
"RTN","MPIRINT",10,0)
 D SPI^MPIRUTLI I QFLG K QFLG Q
"RTN","MPIRINT",11,0)
 N SSN,SITE,DFN,ANS
"RTN","MPIRINT",12,0)
 W !!
"RTN","MPIRINT",13,0)
 K DIR
"RTN","MPIRINT",14,0)
 S (SSN,DFN)=""
"RTN","MPIRINT",15,0)
 S SSN=$$ASKSSN^MPIRUTL(1)
"RTN","MPIRINT",16,0)
 Q:SSN="^"!(SSN=0)
"RTN","MPIRINT",17,0)
 I SSN="" S DFN=$$ASKDFN^MPIRUTL()
"RTN","MPIRINT",18,0)
 Q:DFN="^"!(DFN=0)
"RTN","MPIRINT",19,0)
 I DFN=""&(SSN="") W !,"Need to have either SSN or DFN to use SPI." Q
"RTN","MPIRINT",20,0)
 W !!
"RTN","MPIRINT",21,0)
 S SITE=$$ASKST^MPIRUTL()
"RTN","MPIRINT",22,0)
 Q:SITE=0!(SITE="^")!(SITE="")
"RTN","MPIRINT",23,0)
 K RETURN
"RTN","MPIRINT",24,0)
 W !!,"Attempting to get ICN for patient....",!
"RTN","MPIRINT",25,0)
 D EN1^XWB2HL7(.RETURN,SITE,"MPIF REMOTE SPI",1,SSN,DFN)
"RTN","MPIRINT",26,0)
 K RES
"RTN","MPIRINT",27,0)
 H 15
"RTN","MPIRINT",28,0)
 D RET(.RES,RETURN(0))
"RTN","MPIRINT",29,0)
 I +RES(0)<0 D
"RTN","MPIRINT",30,0)
 .I $P(RES,"^",2)["Handle" S $P(RES,"^",2)="Error in Process" W !!,$P(RES,"^",2) Q
"RTN","MPIRINT",31,0)
 ; possible to have multiple entries sent to MPI -- more than one entry with that SSN
"RTN","MPIRINT",32,0)
 N IEN,XXX S IEN="",XXX=0
"RTN","MPIRINT",33,0)
 F  S IEN=$O(RES(IEN)) Q:IEN=""  D
"RTN","MPIRINT",34,0)
 .I IEN=0!(RES(0)<0) S RES(IEN)=$P(RES(IEN),"^",2)
"RTN","MPIRINT",35,0)
 .I $G(RES(IEN))="New" W !,"No data returned yet from site" S XXX=1
"RTN","MPIRINT",36,0)
 .W !,$G(RES(IEN))
"RTN","MPIRINT",37,0)
 .I RES(IEN)?10N1"V".N S XXX=+RES(IEN)
"RTN","MPIRINT",38,0)
 W:XXX'=1 " was returned from site ",SITE
"RTN","MPIRINT",39,0)
 I XXX>1 S XXX=$$BRDCST^MPITFOUT(XXX,"UPD","ALL","MUP")
"RTN","MPIRINT",40,0)
 K RES,RETURN
"RTN","MPIRINT",41,0)
 Q
"RTN","MPIRINT",42,0)
 ;
"RTN","MPIRINT",43,0)
UPDT ; update remotely ICN, ICN Checksum and CMOR
"RTN","MPIRINT",44,0)
 D UPD^MPIRUTLI I QFLG K QFLG Q
"RTN","MPIRINT",45,0)
 N CST,ICN,CHK,CMOR,SITE,SSN,SSN2,A08,SCRN,TEXT
"RTN","MPIRINT",46,0)
 S ICN=$$ASKPT^MPIRUTL()
"RTN","MPIRINT",47,0)
 Q:ICN<1
"RTN","MPIRINT",48,0)
 S SCRN="I $D(^MPI(985.5,""AM"","_ICN_",+Y))"
"RTN","MPIRINT",49,0)
 S SITE=$$ASKST^MPIRUTL(SCRN)
"RTN","MPIRINT",50,0)
 Q:SITE=0!(SITE="^")!(SITE="")
"RTN","MPIRINT",51,0)
 S CHK=$P($P($G(^MPIVET(ICN,0)),"^"),"V",2)
"RTN","MPIRINT",52,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIRINT",53,0)
 S (CST,CMOR)=$$STA^XUAF4(CMOR)
"RTN","MPIRINT",54,0)
 I CHK=""!(CMOR="") W !!,"Can't update - missing CMOR or Checksum" Q
"RTN","MPIRINT",55,0)
 K DIR
"RTN","MPIRINT",56,0)
 S SSN=$P($G(^MPIVET(ICN,0)),"^",14)
"RTN","MPIRINT",57,0)
 S DIR("B")=SSN
"RTN","MPIRINT",58,0)
 S SSN2=$$ASKSSN^MPIRUTL()
"RTN","MPIRINT",59,0)
 I SSN2="" W !,"SSN is required, try again when you have SSN" Q
"RTN","MPIRINT",60,0)
 Q:SSN2="^"
"RTN","MPIRINT",61,0)
 K DIR,X,Y
"RTN","MPIRINT",62,0)
 I CST=SITE S TEXT="synchronize all sites"
"RTN","MPIRINT",63,0)
 I CST'=SITE S TEXT="generate a PDR for the current CMOR"
"RTN","MPIRINT",64,0)
 S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to trigger a patient update to "_TEXT
"RTN","MPIRINT",65,0)
 D ^DIR
"RTN","MPIRINT",66,0)
 K DIR
"RTN","MPIRINT",67,0)
 I (Y'=1)&(Y'=0) Q
"RTN","MPIRINT",68,0)
 S A08=Y
"RTN","MPIRINT",69,0)
 W !!
"RTN","MPIRINT",70,0)
 N DIR,Y S DIR(0)="Y",DIR("B")="YES"
"RTN","MPIRINT",71,0)
 S DIR("A")="Are you sure you want to update this Patient with this data"
"RTN","MPIRINT",72,0)
 D ^DIR
"RTN","MPIRINT",73,0)
 K DIR
"RTN","MPIRINT",74,0)
 Q:$D(DTOUT)!($D(DUOUT))!('Y)
"RTN","MPIRINT",75,0)
 W !!,"Attempting to get data updated for patient....",!
"RTN","MPIRINT",76,0)
 D EN1^XWB2HL7(.RETURN,SITE,"MPIF REMOTE ICN UPDATE",1,SSN2,ICN,CHK,CMOR,A08)
"RTN","MPIRINT",77,0)
 K RES
"RTN","MPIRINT",78,0)
 H 15
"RTN","MPIRINT",79,0)
 D RET(.RES,RETURN(0))
"RTN","MPIRINT",80,0)
 N XXX
"RTN","MPIRINT",81,0)
 I +RES(0)=0 W !,"Updated ICN, ICN Checksum and CMOR in Patient file" S XXX=$$BRDCST^MPITFOUT(ICN,"UPD","ALL","MUP")
"RTN","MPIRINT",82,0)
 I +RES(0)<0 D
"RTN","MPIRINT",83,0)
 .I $P(RES(0),"^",2)["Handle" S $P(RES(0),"^",2)="Error in Process"
"RTN","MPIRINT",84,0)
 .I $P(RES(0),"^",2)="" S $P(RES(0),"^",2)="No data returned yet from site"
"RTN","MPIRINT",85,0)
 .W !,"Unable to update ICN Information - ",$P(RES(0),"^",2)
"RTN","MPIRINT",86,0)
 K RES
"RTN","MPIRINT",87,0)
 Q
"RTN","MPIRINT",88,0)
 ;
"RTN","MPIRINT",89,0)
CMOR ; Option to update CMOR remotely
"RTN","MPIRINT",90,0)
 D CMOR^MPIRUTLI I QFLG K QFLG Q
"RTN","MPIRINT",91,0)
 N CST,ICN,CHK,CMOR,SITE,SSN,SSN2,A08,SCRN,TEXT
"RTN","MPIRINT",92,0)
 S ICN=$$ASKPT^MPIRUTL()
"RTN","MPIRINT",93,0)
 Q:ICN<1
"RTN","MPIRINT",94,0)
 S SCRN="I $D(^MPI(985.5,""AM"","_ICN_",+Y))"
"RTN","MPIRINT",95,0)
 S SITE=$$ASKST^MPIRUTL(SCRN)
"RTN","MPIRINT",96,0)
 Q:SITE=0!(SITE="^")!(SITE="")
"RTN","MPIRINT",97,0)
 I SITE="200M" D MPI(ICN) Q
"RTN","MPIRINT",98,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPIRINT",99,0)
 S (CST,CMOR)=$$STA^XUAF4(CMOR)
"RTN","MPIRINT",100,0)
 I (CMOR="") W !!,"Patient does not have CMOR on MPI" Q
"RTN","MPIRINT",101,0)
 K DIR
"RTN","MPIRINT",102,0)
 S SSN=$P($G(^MPIVET(ICN,0)),"^",14)
"RTN","MPIRINT",103,0)
 S DIR("B")=SSN
"RTN","MPIRINT",104,0)
 S SSN2=$$ASKSSN^MPIRUTL()
"RTN","MPIRINT",105,0)
 I SSN2="" W !,"SSN is required, try again when you have SSN" K DIR Q
"RTN","MPIRINT",106,0)
 I SSN2="^"!(SSN2=0) K DIR Q
"RTN","MPIRINT",107,0)
 K DIR,X,Y
"RTN","MPIRINT",108,0)
 I CST=SITE S TEXT="synchronize all sites"
"RTN","MPIRINT",109,0)
 I CST'=SITE S TEXT="generate a PDR for the current CMOR"
"RTN","MPIRINT",110,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Trigger a patient update to "_TEXT
"RTN","MPIRINT",111,0)
 D ^DIR
"RTN","MPIRINT",112,0)
 K DIR
"RTN","MPIRINT",113,0)
 I (Y'=1)&(Y'=0) Q
"RTN","MPIRINT",114,0)
 S A08=Y
"RTN","MPIRINT",115,0)
 W !!
"RTN","MPIRINT",116,0)
 N DIR,Y S DIR(0)="Y",DIR("B")="YES"
"RTN","MPIRINT",117,0)
 S DIR("A")="Are you sure you want to update the CMOR for this Patient"
"RTN","MPIRINT",118,0)
 D ^DIR
"RTN","MPIRINT",119,0)
 K DIR
"RTN","MPIRINT",120,0)
 Q:$D(DTOUT)!($D(DUOUT))!('Y)
"RTN","MPIRINT",121,0)
 W !!,"Attempting to get CMOR updated for patient....",!
"RTN","MPIRINT",122,0)
 D EN1^XWB2HL7(.RETURN,SITE,"MPIF CHANGE CMOR",1,ICN,CMOR,SSN2,A08)
"RTN","MPIRINT",123,0)
 K RES
"RTN","MPIRINT",124,0)
 H 15
"RTN","MPIRINT",125,0)
 D RET(.RES,RETURN(0))
"RTN","MPIRINT",126,0)
 N XXX
"RTN","MPIRINT",127,0)
 I +RES(0)=1 W !,"Updated CMOR to "_$P($$NS^XUAF4($$LKUP^XUAF4(CMOR)),"^")_" ("_CMOR_")" S XXX=$$BRDCST^MPITFOUT(ICN,"UPD","ALL","MUP")
"RTN","MPIRINT",128,0)
 I +RES(0)=-1 D
"RTN","MPIRINT",129,0)
 .I $P(RES(0),"^",2)["Handle" S $P(RES(0),"^",2)="Error in Process"
"RTN","MPIRINT",130,0)
 .I $P(RES(0),"^",2)="" S $P(RES(0),"^",2)="No data returned from site yet"
"RTN","MPIRINT",131,0)
 .W !,"Unable to update CMOR - ",$P(RES,"^",2)
"RTN","MPIRINT",132,0)
 K RES
"RTN","MPIRINT",133,0)
 Q
"RTN","MPIRINT",134,0)
 ;
"RTN","MPIRINT",135,0)
RET(REST,IEN) ; RETRIEVING DATA
"RTN","MPIRINT",136,0)
 N CNT S CNT=0
"RTN","MPIRINT",137,0)
AGAIN1 H 10 K REST D RTNDATA^XWBDRPC(.REST,IEN) S CNT=CNT+1
"RTN","MPIRINT",138,0)
 I +REST(0)=-1&(REST(0)["Not DONE") I CNT<11 G AGAIN1
"RTN","MPIRINT",139,0)
 I +REST(0)=-1&(REST(0)["Not DONE") I CNT>10 S REST="0^Unable to get data" Q
"RTN","MPIRINT",140,0)
 I REST(0)="0^New" I CNT<11 G AGAIN1
"RTN","MPIRINT",141,0)
 I REST(0)="0^New" I CNT>10 S REST="0^Unable to get data" Q
"RTN","MPIRINT",142,0)
 Q:+REST(0)=-1
"RTN","MPIRINT",143,0)
 I REST'="" I CNT<11 G AGAIN1
"RTN","MPIRINT",144,0)
 I REST'="" I CNT>10 S REST="0^Unable to get data"
"RTN","MPIRINT",145,0)
 Q
"RTN","MPIRINT",146,0)
 ;
"RTN","MPIRINT",147,0)
MPI(ICN) ;
"RTN","MPIRINT",148,0)
 N CMOR,DIC,X,Y,DTOUT,DUOUT,NCMOR,ARY,TMP,DIR
"RTN","MPIRINT",149,0)
 S DIC="^DIC(4,",DIC(0)="QEAM",DIC("A")="Select the site to be the CMOR: "
"RTN","MPIRINT",150,0)
 S DIC("S")="I $D(^HLCS(870,""C"",+Y))&($D(^MPI(985.5,""AM"",ICN,+Y)))"
"RTN","MPIRINT",151,0)
 D ^DIC
"RTN","MPIRINT",152,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","MPIRINT",153,0)
 S NCMOR=+Y
"RTN","MPIRINT",154,0)
 W !!
"RTN","MPIRINT",155,0)
 N DIR,Y S DIR(0)="Y",DIR("B")="NO"
"RTN","MPIRINT",156,0)
 S DIR("A")="Are you sure you want to update the CMOR for this Patient"
"RTN","MPIRINT",157,0)
 D ^DIR
"RTN","MPIRINT",158,0)
 K DIR
"RTN","MPIRINT",159,0)
 Q:$D(DTOUT)!($D(DUOUT))!('Y)
"RTN","MPIRINT",160,0)
 S ARY("ICN")=ICN
"RTN","MPIRINT",161,0)
 S ARY("SITE")=$$STA^XUAF4($P($G(^MPIVET(ICN,1)),"^",2))
"RTN","MPIRINT",162,0)
 S ARY(16)=$$STA^XUAF4(NCMOR)
"RTN","MPIRINT",163,0)
 S TMP=$$UPDATE^MPIUTL4(ARY("ICN"),ARY("SITE"),.ARY)
"RTN","MPIRINT",164,0)
 I TMP=0 W !,"CMOR updated successfully"
"RTN","MPIRINT",165,0)
 I TMP'=0 W !,"Unable to update CMOR - ",TMP
"RTN","MPIRINT",166,0)
 Q
"RTN","MPIRPDAT")
0^170^B56722750
"RTN","MPIRPDAT",1,0)
MPIRPDAT ;BAY/ALS-REMOTE PATIENT DATA QUERY ROUTINE ;1/8/04
"RTN","MPIRPDAT",2,0)
  ;;1.0;MASTER PATIENT INDEX AUSTIN;**5,20,31,33,36**;30 Apr 1999
"RTN","MPIRPDAT",3,0)
  ;Reference to RPCCHK^XWB2HL7  supported by IA #3144
"RTN","MPIRPDAT",4,0)
  ;Reference to RTNDATA^XWBDRPC supported by IA #3149
"RTN","MPIRPDAT",5,0)
  ;Reference to EN1^XWB2HL7 supported by IA #3144
"RTN","MPIRPDAT",6,0)
  ;VAFC REMOTE PDAT remote procedure call supported by IA #3496
"RTN","MPIRPDAT",7,0)
  ;
"RTN","MPIRPDAT",8,0)
EN ;entry point to request/monitor/display remote pdat report
"RTN","MPIRPDAT",9,0)
SEND ;send remote patient data query
"RTN","MPIRPDAT",10,0)
  W !!,"Remote request to sites for Patient Data.",!
"RTN","MPIRPDAT",11,0)
  N TFL,L,X,Y,ICNARR,MPIDIR,SNTDT,TFARR,CRTN ;**33
"RTN","MPIRPDAT",12,0)
  S CRTN="MPIRPDAT" ;**33
"RTN","MPIRPDAT",13,0)
  I VALUE="ICN"!(VALUE="SSN") D GETTFL^MPIRUTL(VALUE(VALUE),.TFL) ;**33
"RTN","MPIRPDAT",14,0)
  W !!,"-> For ",VALUE," ",$G(VALUE(VALUE))
"RTN","MPIRPDAT",15,0)
  I $D(^XTMP("MPIRPDAT",VALUE(VALUE),0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRPDAT",VALUE(VALUE),0),"^",2)) W "   query last sent on "_SNTDT
"RTN","MPIRPDAT",16,0)
  W !
"RTN","MPIRPDAT",17,0)
  ;
"RTN","MPIRPDAT",18,0)
  I $P($G(TFL(0)),"^")=1 D
"RTN","MPIRPDAT",19,0)
  . D SELTF Q:((Y="")!(Y="^"))
"RTN","MPIRPDAT",20,0)
  . W !!,"Remote patient data queries will be sent to:"
"RTN","MPIRPDAT",21,0)
  . S CNT=0,X=0 F  S X=$O(TFARR(X)) Q:'X  S CNT=CNT+1
"RTN","MPIRPDAT",22,0)
  . I CNT>22 D D2
"RTN","MPIRPDAT",23,0)
  . I CNT<23 D D1
"RTN","MPIRPDAT",24,0)
  ;
"RTN","MPIRPDAT",25,0)
  D ADDTF^MPIRUTL I '$O(TFL(0)) Q  ;**33
"RTN","MPIRPDAT",26,0)
  ;
"RTN","MPIRPDAT",27,0)
  W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to continue" D ^DIR S MPIDIR=+Y K DIR I 'MPIDIR Q
"RTN","MPIRPDAT",28,0)
  S X=0 F  S X=$O(TFL(X)) Q:'X  D  I 'MPIDIR Q   ;**36
"RTN","MPIRPDAT",29,0)
  . W !?3,"Sending Remote Query to: ",X,"  ",$P(TFL(X),"^")
"RTN","MPIRPDAT",30,0)
  . I $D(^XTMP("MPIRPDAT",VALUE(VALUE),X)) K ^XTMP("MPIRPDAT",VALUE(VALUE),X)
"RTN","MPIRPDAT",31,0)
  . D REQ(.VALUE,.TFL,X)
"RTN","MPIRPDAT",32,0)
  I VALUE="ICN"!(VALUE="SSN") K ICNARR D CHKDUPS^MPIRUTL(.VALUE,.ICNARR) D  ;**33
"RTN","MPIRPDAT",33,0)
  . I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIRPDAT",34,0)
  .. W !!,"-> List of Duplicate ICN's:"
"RTN","MPIRPDAT",35,0)
  .. S X=0 F  S X=$O(ICNARR(X)) Q:'X  W !,"   ICN ",X S SNTDT="" I $D(^XTMP("MPIRPDAT",X,0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRPDAT",X,0),"^",2)) W "   query last sent on "_SNTDT
"RTN","MPIRPDAT",36,0)
  .. W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you wish to send a query to the MPI identified Duplicate ICN's" D ^DIR S MPIDIR=+Y K DIR I 'MPIDIR Q
"RTN","MPIRPDAT",37,0)
  .. ;get ICN TFL list
"RTN","MPIRPDAT",38,0)
  .. N VALUE S VALUE="ICN" ;duplicate checking only by icn
"RTN","MPIRPDAT",39,0)
  .. S VALUE(VALUE)=0 F  S VALUE(VALUE)=$O(ICNARR(VALUE(VALUE))) Q:'VALUE(VALUE)  D  I 'MPIDIR Q   ;**36
"RTN","MPIRPDAT",40,0)
  ... K TFL D GETTFL^MPIRUTL(VALUE(VALUE),.TFL) ;**33
"RTN","MPIRPDAT",41,0)
  ... W !!,"-> For ",VALUE," ",VALUE(VALUE)
"RTN","MPIRPDAT",42,0)
  ... I $D(^XTMP("MPIRPDAT",VALUE(VALUE),0)) S SNTDT=$$FMTE^XLFDT($P(^XTMP("MPIRPDAT",VALUE(VALUE),0),"^",2)) W "  query last sent on "_SNTDT
"RTN","MPIRPDAT",43,0)
  ... W !
"RTN","MPIRPDAT",44,0)
  ... I $P($G(TFL(0)),"^")=1 D
"RTN","MPIRPDAT",45,0)
  .... D SELTF Q:((Y="")!(Y="^"))
"RTN","MPIRPDAT",46,0)
  .... W !!,"Remote patient data queries will be sent to:"
"RTN","MPIRPDAT",47,0)
  .... S CNT=0,X=0 F  S X=$O(TFARR(X)) Q:'X  S CNT=CNT+1
"RTN","MPIRPDAT",48,0)
  .... I CNT>22 D D2
"RTN","MPIRPDAT",49,0)
  .... I CNT<23 D D1
"RTN","MPIRPDAT",50,0)
  ... D ADDTF^MPIRUTL ;**33
"RTN","MPIRPDAT",51,0)
  ... I $O(TFL(0))'="" W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to continue" D ^DIR S MPIDIR=+Y K DIR I 'MPIDIR Q
"RTN","MPIRPDAT",52,0)
  ... ; ^ and \/ **31
"RTN","MPIRPDAT",53,0)
  ... S X=0 F  S X=$O(TFL(X)) Q:'X  D
"RTN","MPIRPDAT",54,0)
  .... W !?3,"Sending Remote Query to: ",X,"  ",$P(TFL(X),"^")
"RTN","MPIRPDAT",55,0)
  .... I $D(^XTMP("MPIRPDAT",VALUE(VALUE),X)) K ^XTMP("MPIRPDAT",VALUE(VALUE),X)
"RTN","MPIRPDAT",56,0)
  .... D REQ(.VALUE,.TFL,X)
"RTN","MPIRPDAT",57,0)
  Q
"RTN","MPIRPDAT",58,0)
  ;
"RTN","MPIRPDAT",59,0)
SEND2 ;entry point to send a remote patient data query
"RTN","MPIRPDAT",60,0)
  N MPIEXIT S MPIEXIT=0
"RTN","MPIRPDAT",61,0)
  W !!,"This option sends a remote patient data query to selected treating"
"RTN","MPIRPDAT",62,0)
  W !,"facility site(s) for MPI/PD data for a patient."
"RTN","MPIRPDAT",63,0)
  F  D  Q:MPIEXIT=1
"RTN","MPIRPDAT",64,0)
  . N VALUE
"RTN","MPIRPDAT",65,0)
  . D ASK^MPIRUTL("ISDP",.VALUE) I $G(VALUE)="" S MPIEXIT=1 Q  ;**20
"RTN","MPIRPDAT",66,0)
  . D SEND
"RTN","MPIRPDAT",67,0)
  Q
"RTN","MPIRPDAT",68,0)
  ;
"RTN","MPIRPDAT",69,0)
DISP ;display remote patient data query
"RTN","MPIRPDAT",70,0)
  W !!,"Display data returned from remote patient data queries."
"RTN","MPIRPDAT",71,0)
  W !,"(Be sure HISTORY is enabled to capture data!)",!
"RTN","MPIRPDAT",72,0)
  N TFL,L,X,Y,ICNARR,STATUS,SL,TFARR
"RTN","MPIRPDAT",73,0)
  I '$D(^XTMP("MPIRPDAT",VALUE(VALUE))) W !!,"No remote query sent for this patient." G QDISP
"RTN","MPIRPDAT",74,0)
  D TFLST^MPIRPDT2(.VALUE,.TFL)
"RTN","MPIRPDAT",75,0)
  W !!,"-> For ",VALUE," ",$G(VALUE(VALUE)),!
"RTN","MPIRPDAT",76,0)
  D SELTF I ((Y="")!(Y="^")) G QDISP
"RTN","MPIRPDAT",77,0)
  I '$D(TFARR) W !,"No remote query sent for this patient." G QDISP
"RTN","MPIRPDAT",78,0)
  S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRPDAT",79,0)
  . S SL=$P(TFARR(L),"^",1)
"RTN","MPIRPDAT",80,0)
  . S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRPDAT",81,0)
  . I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRPDAT",82,0)
  . E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRPDAT",83,0)
  . E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRPDAT",84,0)
  . E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRPDAT",85,0)
  . W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")",!
"RTN","MPIRPDAT",86,0)
  . D DISPLAY(.VALUE,$P(TFL(SL),"^",2))
"RTN","MPIRPDAT",87,0)
  ;I 'Y G QDISP
"RTN","MPIRPDAT",88,0)
  I VALUE="ICN"!(VALUE="SSN") K ICNARR D CHKDUPS^MPIRUTL(.VALUE,.ICNARR) D  ;**33
"RTN","MPIRPDAT",89,0)
  . I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIRPDAT",90,0)
  .. W !!,"  Duplicate ICN List:"
"RTN","MPIRPDAT",91,0)
  .. ;get ICN TFL list
"RTN","MPIRPDAT",92,0)
  .. S VALUE(VALUE)=0 F  S VALUE(VALUE)=$O(ICNARR(VALUE(VALUE))) Q:'VALUE(VALUE)  D
"RTN","MPIRPDAT",93,0)
  ... W !,"-> For ",VALUE," ",VALUE(VALUE)
"RTN","MPIRPDAT",94,0)
  ... I '$D(^XTMP("MPIRPDAT",VALUE(VALUE))) W !!,"No remote query sent for this patient." Q
"RTN","MPIRPDAT",95,0)
  ... K TFL D TFLST^MPIRPDT2(.VALUE,.TFL)
"RTN","MPIRPDAT",96,0)
  ... W !!,"-> For ",VALUE," ",VALUE(VALUE),!
"RTN","MPIRPDAT",97,0)
  ... I $D(TFL(0)) D
"RTN","MPIRPDAT",98,0)
  .... S X=0 F  S X=$O(TFL(X)) Q:'X  I '$D(^XTMP("MPIRPDAT",VALUE(VALUE),X)) K TFL(X)
"RTN","MPIRPDAT",99,0)
  ... D SELTF Q:((Y="")!(Y="^"))
"RTN","MPIRPDAT",100,0)
  ... I '$D(TFARR) W !,"No remote query sent for this patient." Q
"RTN","MPIRPDAT",101,0)
  ... S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRPDAT",102,0)
  .... S SL=$P(TFARR(L),"^",1)
"RTN","MPIRPDAT",103,0)
  .... S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRPDAT",104,0)
  .... I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRPDAT",105,0)
  .... E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRPDAT",106,0)
  .... E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRPDAT",107,0)
  .... E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRPDAT",108,0)
  .... W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")",!
"RTN","MPIRPDAT",109,0)
  .... D DISPLAY(.VALUE,$P(TFL(SL),"^",2))
"RTN","MPIRPDAT",110,0)
QDISP S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIRPDAT",111,0)
  Q
"RTN","MPIRPDAT",112,0)
  ;
"RTN","MPIRPDAT",113,0)
DISP2 ;entry point to display a remote patient data query
"RTN","MPIRPDAT",114,0)
  N MPIEXIT S MPIEXIT=0
"RTN","MPIRPDAT",115,0)
  W !!,"This option checks the status of an existing remote patient data query."
"RTN","MPIRPDAT",116,0)
  F  D  Q:MPIEXIT=1
"RTN","MPIRPDAT",117,0)
  . N VALUE
"RTN","MPIRPDAT",118,0)
  . D ASK^MPIRUTL("ISDP",.VALUE) I $G(VALUE)="" S MPIEXIT=1 Q  ;**20
"RTN","MPIRPDAT",119,0)
  . K ZTSAVE S ZTSAVE("VALUE")="" D EN^XUTMDEVQ("DISP^MPIRPDAT","Print MPI/PD Patient Data",.ZTSAVE)
"RTN","MPIRPDAT",120,0)
  Q
"RTN","MPIRPDAT",121,0)
  ;
"RTN","MPIRPDAT",122,0)
REQ(VALUE,TFL,LOC) ;request a remote pdat report
"RTN","MPIRPDAT",123,0)
  ;LOC - STATION# OF THE INSTITUTION file entry
"RTN","MPIRPDAT",124,0)
  N RETURN
"RTN","MPIRPDAT",125,0)
  I +LOC>0 D EN1^XWB2HL7(.RETURN,LOC,"VAFC REMOTE PDAT",1,.VALUE,"")
"RTN","MPIRPDAT",126,0)
  S ^XTMP("MPIRPDAT",VALUE(VALUE),0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"REMOTE PDAT QUERY"
"RTN","MPIRPDAT",127,0)
  S ^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","MPIRPDAT",128,0)
  Q
"RTN","MPIRPDAT",129,0)
  ;
"RTN","MPIRPDAT",130,0)
DISPLAY(VALUE,LOC) ;display a remote pdat report
"RTN","MPIRPDAT",131,0)
  N GLO,STATUS,RETURN,RESULT,RET,TXT
"RTN","MPIRPDAT",132,0)
  I '$D(^XTMP("MPIRPDAT",VALUE(VALUE),0)) W !?35," - No patient data query exists for this patient." Q
"RTN","MPIRPDAT",133,0)
  I $D(^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0)) S RETURN(0)=$P(^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0),"^") D
"RTN","MPIRPDAT",134,0)
  . D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D
"RTN","MPIRPDAT",135,0)
  .. D RTNDATA^XWBDRPC(.RET,RETURN(0)) D
"RTN","MPIRPDAT",136,0)
  ... I $G(RET)'="",$D(@RET) S GLO=RET F  S GLO=$Q(@GLO) Q:$QS(GLO,1)'=$J  S TXT=@GLO W !,TXT I ($E(IOST,1,2)="C-") D
"RTN","MPIRPDAT",137,0)
  .... ;I $Y>22 S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF S $Y=1
"RTN","MPIRPDAT",138,0)
  ... S R="" F  S R=$O(RET(R)) Q:R=""  S TXT=RET(R) W !,TXT I ($E(IOST,1,2)="C-") D
"RTN","MPIRPDAT",139,0)
  .... ;I $Y>22 S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF S $Y=1
"RTN","MPIRPDAT",140,0)
  . I $G(RET(0))<0 S TXT="No Data Returned Due To: "_$P(RET(0),"^",2,99) W !!,TXT
"RTN","MPIRPDAT",141,0)
  ;
"RTN","MPIRPDAT",142,0)
  K R
"RTN","MPIRPDAT",143,0)
  Q
"RTN","MPIRPDAT",144,0)
  ;
"RTN","MPIRPDAT",145,0)
SELTF ;Allow the user to select treating facilities from a list
"RTN","MPIRPDAT",146,0)
  K TFARR N TFARR1,L,I,A,CNT
"RTN","MPIRPDAT",147,0)
  S I=0 F  S I=$O(TFL(I)) Q:'I  D
"RTN","MPIRPDAT",148,0)
  . S TFARR1($P(TFL(I),"^",1))=$P(TFL(I),"^",2)_"^"_$P(TFL(I),"^",1)
"RTN","MPIRPDAT",149,0)
  S I="",CNT=0 F  S I=$O(TFARR1(I)) Q:I=""  D
"RTN","MPIRPDAT",150,0)
  . S CNT=CNT+1 S TFARR(CNT)=TFARR1(I)
"RTN","MPIRPDAT",151,0)
  I CNT=1 S Y=1 Q
"RTN","MPIRPDAT",152,0)
  K DIR,Y
"RTN","MPIRPDAT",153,0)
  S CNT=CNT+1,TFARR(CNT)="ALL"
"RTN","MPIRPDAT",154,0)
  S DIR(0)="LA^1:"_CNT
"RTN","MPIRPDAT",155,0)
  S DIR("A")="Select site(s) 1-"_(CNT-1)_" or "_CNT_" for all: "
"RTN","MPIRPDAT",156,0)
  S DIR("B")=CNT
"RTN","MPIRPDAT",157,0)
  W !,"Select one or more of the following: "
"RTN","MPIRPDAT",158,0)
  I CNT>22 D D2
"RTN","MPIRPDAT",159,0)
  I CNT<23 D D1
"RTN","MPIRPDAT",160,0)
  D ^DIR K DIR Q:Y="^"
"RTN","MPIRPDAT",161,0)
  I Y<1 K TFARR,TFARR1,L,I,A,CNT Q
"RTN","MPIRPDAT",162,0)
  S Y=","_Y
"RTN","MPIRPDAT",163,0)
  I Y[(","_CNT_",") K TFARR(CNT),TFARR1,CNT,I Q
"RTN","MPIRPDAT",164,0)
  S I=0,A="" F  S I=$O(TFARR(I)) Q:'I  I Y'[(","_I_",") S A=$P(TFARR(I),"^",1) K TFL(A) K TFARR(I)
"RTN","MPIRPDAT",165,0)
  K L,I,A,TFARR(CNT),CNT,TFARR1
"RTN","MPIRPDAT",166,0)
  Q
"RTN","MPIRPDAT",167,0)
D1 ;
"RTN","MPIRPDAT",168,0)
  S C1=1,I=0 F  S I=$O(TFARR(I)) Q:'I  D
"RTN","MPIRPDAT",169,0)
  . W !,C1_".",?4,"("_$P(TFARR(I),"^",1)_") "_$P(TFARR(I),"^",2) S C1=C1+1
"RTN","MPIRPDAT",170,0)
  K C1,I
"RTN","MPIRPDAT",171,0)
  Q
"RTN","MPIRPDAT",172,0)
D2 ;
"RTN","MPIRPDAT",173,0)
  S I2=23 F I=1:1:22 D
"RTN","MPIRPDAT",174,0)
  . W !,I_".",?4,"("_$P(TFARR(I),"^",1)_") "_$P(TFARR(I),"^",2)
"RTN","MPIRPDAT",175,0)
  . I $D(TFARR(I2)) W ?41,I2_". ",?44,"("_$P(TFARR(I2),"^",1)_") "_$P(TFARR(I2),"^",2) S I2=I2+1
"RTN","MPIRPDAT",176,0)
  K I,I2
"RTN","MPIRPDAT",177,0)
  Q
"RTN","MPIRPDT2")
0^171^B10927776
"RTN","MPIRPDT2",1,0)
MPIRPDT2 ;BAY/ALS - REMOTE PATIENT DATA QUERY ROUTINE #2 ;1/8/04  11:14
"RTN","MPIRPDT2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN ;**5,20,33**;30 Apr 1999
"RTN","MPIRPDT2",3,0)
 ;
"RTN","MPIRPDT2",4,0)
TFLST(VALUE,TFL) ;Get list of sites query was sent to for this ICN
"RTN","MPIRPDT2",5,0)
 N X,LOC,IEN,RESULT
"RTN","MPIRPDT2",6,0)
 S X=0
"RTN","MPIRPDT2",7,0)
 F  S X=$O(^XTMP("MPIRPDAT",VALUE(VALUE),X)) Q:'X  D
"RTN","MPIRPDT2",8,0)
 .  S IEN=$$IEN^XUAF4(X),LOC=$$NNT^XUAF4(IEN)
"RTN","MPIRPDT2",9,0)
 .  S TFL(X)=LOC
"RTN","MPIRPDT2",10,0)
 .  D MONITOR(.VALUE,X,.RESULT)
"RTN","MPIRPDT2",11,0)
 .  S $P(TFL(X),"^",3)=$P(RESULT(0),"^",2)
"RTN","MPIRPDT2",12,0)
 Q
"RTN","MPIRPDT2",13,0)
 ;
"RTN","MPIRPDT2",14,0)
MONITOR(VALUE,LOC,RESULT) ;monitor a remote pdat request
"RTN","MPIRPDT2",15,0)
 N STATUS,RETURN
"RTN","MPIRPDT2",16,0)
 I '$D(^XTMP("MPIRPDAT",VALUE(VALUE),0)) S RESULT(0)="-1^Unknown" Q
"RTN","MPIRPDT2",17,0)
 I '$D(^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0)) S RESULT(0)="-1^Unknown" Q
"RTN","MPIRPDT2",18,0)
 I $D(^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0)) S RETURN(0)=$P(^XTMP("MPIRPDAT",VALUE(VALUE),LOC,0),"^") D RPCCHK^XWB2HL7(.RESULT,RETURN(0))
"RTN","MPIRPDT2",19,0)
 Q
"RTN","MPIRPDT2",20,0)
CHKSTAT ;check status of remote patient data query
"RTN","MPIRPDT2",21,0)
 W !!,"Checking the status of Remote Patient Data Query.",!
"RTN","MPIRPDT2",22,0)
 N TFL,L,X,Y,ICNARR,STATUS,SL,TFARR
"RTN","MPIRPDT2",23,0)
 I '$D(^XTMP("MPIRPDAT",VALUE(VALUE))) W !!,"No remote query sent for this ",VALUE," ." Q
"RTN","MPIRPDT2",24,0)
 W !!,"-> For ",VALUE," ",$G(VALUE(VALUE)),!
"RTN","MPIRPDT2",25,0)
 D TFLST(.VALUE,.TFL)
"RTN","MPIRPDT2",26,0)
 D SELTF^MPIRPDAT Q:((Y="")!(Y="^"))
"RTN","MPIRPDT2",27,0)
 I '$D(TFARR) W !,"No remote query sent for this patient." Q
"RTN","MPIRPDT2",28,0)
 S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRPDT2",29,0)
 . S SL=$P(TFARR(L),"^",1)
"RTN","MPIRPDT2",30,0)
 . S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRPDT2",31,0)
 . I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRPDT2",32,0)
 . E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRPDT2",33,0)
 . E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRPDT2",34,0)
 . E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRPDT2",35,0)
 . W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")"
"RTN","MPIRPDT2",36,0)
 I VALUE="ICN" K ICNARR D CHKDUPS^MPIRUTL(.VALUE,.ICNARR) D  ;**33
"RTN","MPIRPDT2",37,0)
 . I $P($G(ICNARR(0)),"^")'=-1 D
"RTN","MPIRPDT2",38,0)
 .. W !!,"  Duplicate ICN List:"
"RTN","MPIRPDT2",39,0)
 .. ;get ICN TFL list
"RTN","MPIRPDT2",40,0)
 .. S VALUE(VALUE)=0 F  S VALUE(VALUE)=$O(ICNARR(VALUE(VALUE))) Q:'VALUE(VALUE)  D
"RTN","MPIRPDT2",41,0)
 ... W !,"-> For ",VALUE," ",VALUE(VALUE)
"RTN","MPIRPDT2",42,0)
 ... I '$D(^XTMP("MPIRPDAT",VALUE(VALUE))) W !!,"No remote query sent for this patient." Q
"RTN","MPIRPDT2",43,0)
 ... K TFL D TFLST(.VALUE,.TFL)
"RTN","MPIRPDT2",44,0)
 ... W !!,"-> For ",VALUE," ",VALUE(VALUE),!
"RTN","MPIRPDT2",45,0)
 ... I $D(TFL(0)) D
"RTN","MPIRPDT2",46,0)
 .... S X=0 F  S X=$O(TFL(X)) Q:'X  I '$D(^XTMP("MPIRPDAT",VALUE(VALUE),X)) K TFL(X)
"RTN","MPIRPDT2",47,0)
 ... D SELTF^MPIRPDAT Q:((Y="")!(Y="^"))
"RTN","MPIRPDT2",48,0)
 ... I '$D(TFARR) W !,"No remote query sent for this patient." Q
"RTN","MPIRPDT2",49,0)
 ... S L=0 F  S L=$O(TFARR(L)) Q:'L  D
"RTN","MPIRPDT2",50,0)
 .... S SL=$P(TFARR(L),"^",1)
"RTN","MPIRPDT2",51,0)
 .... S STATUS=$P(TFL(SL),"^",3)
"RTN","MPIRPDT2",52,0)
 .... I STATUS["Handle" S STATUS="Error in Process"
"RTN","MPIRPDT2",53,0)
 .... E  I STATUS["New" S STATUS="Request Sent"
"RTN","MPIRPDT2",54,0)
 .... E  I STATUS["Running" S STATUS="Awaiting Response"
"RTN","MPIRPDT2",55,0)
 .... E  I STATUS["Done" S STATUS="Response Received"
"RTN","MPIRPDT2",56,0)
 .... W !?3,"  ",$P(TFL(SL),"^"),"  status: (",STATUS,")"
"RTN","MPIRPDT2",57,0)
 Q
"RTN","MPIRPDT2",58,0)
 ;
"RTN","MPIRPDT2",59,0)
CHKSTAT2 ;entry point to check status of a remote patient data query
"RTN","MPIRPDT2",60,0)
 N MPIEXIT S MPIEXIT=0
"RTN","MPIRPDT2",61,0)
 W !!,"This option checks the status of an existing remote patient data query."
"RTN","MPIRPDT2",62,0)
 F  D  Q:MPIEXIT=1
"RTN","MPIRPDT2",63,0)
 . N VALUE
"RTN","MPIRPDT2",64,0)
 . D ASK^MPIRUTL("ISDP",.VALUE) I $G(VALUE)="" S MPIEXIT=1 Q  ;**20
"RTN","MPIRPDT2",65,0)
 . D CHKSTAT
"RTN","MPIRPDT2",66,0)
 Q
"RTN","MPIRTASK")
0^172^B8522019
"RTN","MPIRTASK",1,0)
MPIRTASK ;BIR/PTD-REMOTE QUERY ROUTINE FOR CURRENTLY RUNNING HL7 TASKS ;03/04/02
"RTN","MPIRTASK",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3**;30 Apr 99
"RTN","MPIRTASK",3,0)
 ;
"RTN","MPIRTASK",4,0)
 ;Reference to ^XWB2HL7 supported by IA #3144
"RTN","MPIRTASK",5,0)
 ;Reference to ^XWBDRPC supported by IA #3149
"RTN","MPIRTASK",6,0)
 ;
"RTN","MPIRTASK",7,0)
SEND ;Request a remote query for running HL7 tasks.
"RTN","MPIRTASK",8,0)
 ;To which site will query be sent?
"RTN","MPIRTASK",9,0)
 W !!,"This option sends a remote query to a selected facility",!,"and returns a report of the currently running HL7 tasks.",!
"RTN","MPIRTASK",10,0)
 S DIC="^DIC(4,",DIC(0)="QEAM",DIC("S")="I $D(^MPI(985.3,""B"",+Y))"
"RTN","MPIRTASK",11,0)
 W ! S DIC("A")="Select the site to send to: "
"RTN","MPIRTASK",12,0)
 D ^DIC K DIC G:Y<0 QUIT
"RTN","MPIRTASK",13,0)
 W !!?3,"Attempting to get currently running HL7 tasks at: "_$P(Y,"^",2)
"RTN","MPIRTASK",14,0)
 S SITE=$$STA^XUAF4(+Y)
"RTN","MPIRTASK",15,0)
 K RETURN
"RTN","MPIRTASK",16,0)
 D EN1^XWB2HL7(.RETURN,SITE,"RG REMOTE HL7 TASK",1)
"RTN","MPIRTASK",17,0)
 I RETURN(0)="" W !,"Query was unsuccessful: ",$P(RETURN(1),"^",2) G QUIT
"RTN","MPIRTASK",18,0)
 ;Else RPC successful, RETURN(0) has IEN for other calls.
"RTN","MPIRTASK",19,0)
 S IEN=RETURN(0)
"RTN","MPIRTASK",20,0)
 ;Retrieve data
"RTN","MPIRTASK",21,0)
 N CNT S CNT=0
"RTN","MPIRTASK",22,0)
AGAIN ;Repeat attempt up to 10 times
"RTN","MPIRTASK",23,0)
 H 2 K RET D RTNDATA^XWBDRPC(.RET,IEN) S CNT=CNT+1
"RTN","MPIRTASK",24,0)
 I RET["TMP" G DEV
"RTN","MPIRTASK",25,0)
 I +RET(0)=-1&(RET(0)["Not DONE") I CNT<11 G AGAIN
"RTN","MPIRTASK",26,0)
 I +RET(0)=-1&(RET(0)["Not DONE") I CNT>10 W !,"Query was unsuccessful, unable to get data after 10 attempts." G QUIT
"RTN","MPIRTASK",27,0)
 I RET(0)="0^New" I CNT<11 G AGAIN
"RTN","MPIRTASK",28,0)
 I RET(0)="0^New" I CNT>10 W !,"Query was unsuccessful, unable to get data after 10 attempts." G QUIT
"RTN","MPIRTASK",29,0)
 I +RET(0)=-1 W !," Query was unsuccessful: "_$S($P(RET(0),"^",2)["Handle":"Error in Process",1:$P(RET(0),"^",2)) G QUIT
"RTN","MPIRTASK",30,0)
 I (RET'=""),(RET'["TMP") W !,"Query was unsuccessful, no data returned." G QUIT
"RTN","MPIRTASK",31,0)
DEV ;Device selection
"RTN","MPIRTASK",32,0)
 W !,"The right margin for this report is 80.",!!
"RTN","MPIRTASK",33,0)
 K ZTSAVE S ZTSAVE("RET")=""
"RTN","MPIRTASK",34,0)
 D EN^XUTMDEVQ("DISPLAY^MPIRTASK","Print currently running HL7 tasks at remote site",.ZTSAVE) I 'POP Q
"RTN","MPIRTASK",35,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPIRTASK",36,0)
 G QUIT
"RTN","MPIRTASK",37,0)
 ;
"RTN","MPIRTASK",38,0)
DISPLAY ;Display data if in an array
"RTN","MPIRTASK",39,0)
 W @IOF,!
"RTN","MPIRTASK",40,0)
 I RET="" S LN="" F  S LN=$O(RET(LN)) Q:LN=""  W !,RET(LN) I $Y>22 S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF S $Y=1
"RTN","MPIRTASK",41,0)
 ;Display data if in a global
"RTN","MPIRTASK",42,0)
 I RET["TMP" S LN="" F  S LN=$O(@RET@(LN)) Q:LN=""  W !,@RET@(LN) I $Y>22 S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF S $Y=1
"RTN","MPIRTASK",43,0)
QUIT ;Kill variables and quit.
"RTN","MPIRTASK",44,0)
 I $D(IOST) W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIRTASK",45,0)
 I $D(RET) I RET["TMP" S IEN=$P($P(RET,","),"(",2) K ^TMP(IEN,"XWB")
"RTN","MPIRTASK",46,0)
 K CNT,DIC,DIR,IEN,LN,RET,RETURN,SITE,SITEIEN,X,Y,ZTSK
"RTN","MPIRTASK",47,0)
 Q
"RTN","MPIRTASK",48,0)
 ;
"RTN","MPIRUTL")
0^174^B22693095
"RTN","MPIRUTL",1,0)
MPIRUTL ;BP/CMC-RPC INTERFACE UTILITIES ;1/8/04  11:14
"RTN","MPIRUTL",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,20,33**;30 Apr 99
"RTN","MPIRUTL",3,0)
 ;
"RTN","MPIRUTL",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIRUTL",5,0)
 ;  ^HLCS(870,"C" - #3550
"RTN","MPIRUTL",6,0)
 ;
"RTN","MPIRUTL",7,0)
ASKPT() ;
"RTN","MPIRUTL",8,0)
 N DIC,ICN,Y,X,DTOUT,DUOUT
"RTN","MPIRUTL",9,0)
 S DIC="^MPIVET(",DIC(0)="QEAM",DIC("A")="Select PATIENT (Use ICN or SSN): "
"RTN","MPIRUTL",10,0)
 D ^DIC
"RTN","MPIRUTL",11,0)
 Q:Y<1 0
"RTN","MPIRUTL",12,0)
 Q:$D(DTOUT)!($D(DUOUT)) 0
"RTN","MPIRUTL",13,0)
 S ICN=+Y
"RTN","MPIRUTL",14,0)
 Q ICN
"RTN","MPIRUTL",15,0)
 ;
"RTN","MPIRUTL",16,0)
ASKSSN(FLG) ;
"RTN","MPIRUTL",17,0)
 N X,Y,DTOUT,DUOUT
"RTN","MPIRUTL",18,0)
SSN S DIR(0)="FUO^9:9:",DIR("A")="Enter SSN (No Dashes) for the Patient"
"RTN","MPIRUTL",19,0)
 D ^DIR
"RTN","MPIRUTL",20,0)
 Q:$D(DTOUT)!($D(DUOUT)) 0
"RTN","MPIRUTL",21,0)
 I $G(FLG)="",(Y'?9N) W !,"SSN is required and should be 9 numbers" G SSN
"RTN","MPIRUTL",22,0)
 I $G(FLG)'="",Y'="",Y'?9N W !,"SSN is required and should be 9 numbers" G SSN
"RTN","MPIRUTL",23,0)
 K DIR
"RTN","MPIRUTL",24,0)
 Q Y
"RTN","MPIRUTL",25,0)
 ;
"RTN","MPIRUTL",26,0)
ASKDFN() ;
"RTN","MPIRUTL",27,0)
 N X,Y,DTOUT,DUOUT
"RTN","MPIRUTL",28,0)
DFN S DIR(0)="FUO^1:20:",DIR("A")="Enter DFN for the Patient at the Site"
"RTN","MPIRUTL",29,0)
 D ^DIR
"RTN","MPIRUTL",30,0)
 Q:$D(DTOUT)!($D(DUOUT)) 0
"RTN","MPIRUTL",31,0)
 I Y=""!(Y'?1N.N) W !,"DFN is required and should be ALL numbers" G DFN
"RTN","MPIRUTL",32,0)
 K DIR
"RTN","MPIRUTL",33,0)
 Q Y
"RTN","MPIRUTL",34,0)
 ;
"RTN","MPIRUTL",35,0)
ASKST(SCRN) ;
"RTN","MPIRUTL",36,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","MPIRUTL",37,0)
SITE I $D(SCRN) S DIC("S")=SCRN
"RTN","MPIRUTL",38,0)
 S DIC="^DIC(4,",DIC(0)="QEAM",DIC("A")="Select the site to send to: "
"RTN","MPIRUTL",39,0)
 I '$D(SCRN) S DIC("S")="I $D(^HLCS(870,""C"",+Y))"
"RTN","MPIRUTL",40,0)
 D ^DIC
"RTN","MPIRUTL",41,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","MPIRUTL",42,0)
 I Y<1 G SITE
"RTN","MPIRUTL",43,0)
 Q $$STA^XUAF4(+Y)
"RTN","MPIRUTL",44,0)
 ;
"RTN","MPIRUTL",45,0)
ASK(PROMPTS,VALUE) ;Ask for ICN, SSN, DFN, or PATIENT NAME ; **20
"RTN","MPIRUTL",46,0)
 N ANS,I,PROMPT
"RTN","MPIRUTL",47,0)
 S ^XTMP("MPIRUTL_PROMPT",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MASTER PATIENT INDEX AUSTIN DEFAULT PROMPT"
"RTN","MPIRUTL",48,0)
 S VALUE=""
"RTN","MPIRUTL",49,0)
 S PROMPT="Enter " F I=1:1:$L(PROMPTS) D   I $L(PROMPTS)=I S PROMPT=$E(PROMPT,1,$L(PROMPT)-2)_": "
"RTN","MPIRUTL",50,0)
 . I $E(PROMPTS,I)="I" S PROMPT=PROMPT_"ICN, "
"RTN","MPIRUTL",51,0)
 . I $E(PROMPTS,I)="S" S PROMPT=PROMPT_"SSN, "
"RTN","MPIRUTL",52,0)
 . I $E(PROMPTS,I)="P" S PROMPT=PROMPT_"NAME, "
"RTN","MPIRUTL",53,0)
 . I $E(PROMPTS,I)="D" S PROMPT=PROMPT_"DFN, "
"RTN","MPIRUTL",54,0)
 F  W !!,PROMPT R ANS:DTIME Q:"^"[ANS  S ANS=$$UP^XLFSTR(ANS) D  I VALUE'="" Q
"RTN","MPIRUTL",55,0)
 . I $E(ANS)=" ",$D(^XTMP("MPIRUTL_PROMPT","DEFAULT",DUZ)) S ANS=^XTMP("MPIRUTL_PROMPT","DEFAULT",DUZ) W " ",ANS
"RTN","MPIRUTL",56,0)
 . I ANS?1"I."1N.N S VALUE="ICN",VALUE(VALUE)=$E(ANS,3,$L(ANS)) Q
"RTN","MPIRUTL",57,0)
 . I ANS?1"S."1.9N.1"P" S VALUE="SSN",VALUE(VALUE)=$E(ANS,3,$L(ANS)) Q
"RTN","MPIRUTL",58,0)
 . I ANS?1"D."1.N S VALUE="DFN",VALUE(VALUE)=$E(ANS,3,$L(ANS)) Q
"RTN","MPIRUTL",59,0)
 . I ANS?1"P."1.E S VALUE="NAME",VALUE(VALUE)=$E(ANS,3,$L(ANS)) Q
"RTN","MPIRUTL",60,0)
 . I ANS'["?" W " ??"
"RTN","MPIRUTL",61,0)
 . W !!,"  - For DFN, enter ""D."" followed by the numeric patient ien.",!,"    Example: D.1234"
"RTN","MPIRUTL",62,0)
 . W !!,"  - For SSN, enter ""S."" followed by the patient's SSN (Psuedo SSN's ok).",!,"    Example: S.123456789P"
"RTN","MPIRUTL",63,0)
 . W !!,"  - For ICN, enter ""I."" followed by the local or national ICN.",!,"    Example: I.1000000001"
"RTN","MPIRUTL",64,0)
 . W !!,"  - For Patient Name, enter ""P."" followed by the patient's name.",!,"    Example: P.DOE,JOHN"
"RTN","MPIRUTL",65,0)
 I "^"'[ANS S ^XTMP("MPIRUTL_PROMPT","DEFAULT",DUZ)=ANS
"RTN","MPIRUTL",66,0)
 Q
"RTN","MPIRUTL",67,0)
 ;
"RTN","MPIRUTL",68,0)
GETTFL(ICN,TFL) ;get a list of Treating Facilities ;**33
"RTN","MPIRUTL",69,0)
 N LOC,CNT,SSN,AICN
"RTN","MPIRUTL",70,0)
 S TFL(0)="-1^ICN not passed into call"
"RTN","MPIRUTL",71,0)
 I VALUE="SSN" D
"RTN","MPIRUTL",72,0)
 .S SSN=ICN,ICN=0,AICN="" F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  Q:AICN  D
"RTN","MPIRUTL",73,0)
 ..I $P($G(^MPIVET(ICN,"ID_STATE")),"^")'="D" S AICN=ICN
"RTN","MPIRUTL",74,0)
 .S ICN=AICN
"RTN","MPIRUTL",75,0)
 I ICN'="" N X S X=0,CNT=1 F  S X=$O(^MPI(985.5,"AM",ICN,X)) Q:'X  D
"RTN","MPIRUTL",76,0)
 . S LOC=$$NNT^XUAF4(X)
"RTN","MPIRUTL",77,0)
 . S TFL($P(LOC,"^",2))=LOC
"RTN","MPIRUTL",78,0)
 . S LOC=$P(LOC,"^",2)
"RTN","MPIRUTL",79,0)
 . I CRTN="MPIRPDAT" D MONITOR^MPIRPDT2(.VALUE,LOC,.RESULT)
"RTN","MPIRUTL",80,0)
 . I CRTN="MPIRAUD" D MONITOR^MPIRAUD2(.VALUE,LOC,.RESULT)
"RTN","MPIRUTL",81,0)
 . S $P(TFL(LOC),"^",3)=$P(RESULT(0),"^",2)
"RTN","MPIRUTL",82,0)
 I $O(TFL(0)) S TFL(0)="1"
"RTN","MPIRUTL",83,0)
 Q
"RTN","MPIRUTL",84,0)
 ;
"RTN","MPIRUTL",85,0)
CHKDUPS(VALUE,ICNARR) ;Check for Duplicates - called from Remote PDAT and Audit ;**33
"RTN","MPIRUTL",86,0)
 N SSN,ICN,AICN
"RTN","MPIRUTL",87,0)
 I VALUE="ICN" S SSN=$P($G(^MPIVET(VALUE(VALUE),0)),"^",14)
"RTN","MPIRUTL",88,0)
 I VALUE="SSN" D
"RTN","MPIRUTL",89,0)
 .S SSN=VALUE(VALUE),ICN=0,AICN="" F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  Q:AICN  D
"RTN","MPIRUTL",90,0)
 ..I $P($G(^MPIVET(ICN,"ID_STATE")),"^")'="D" S AICN=ICN
"RTN","MPIRUTL",91,0)
 .S VALUE="ICN",VALUE(VALUE)=AICN
"RTN","MPIRUTL",92,0)
 S ICNARR(0)=-1
"RTN","MPIRUTL",93,0)
 I $G(SSN)'="" D
"RTN","MPIRUTL",94,0)
 .S ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  I $P($G(^MPIVET(ICN,"ID_STATE")),"^")'="D" D
"RTN","MPIRUTL",95,0)
 ..I ICN'=VALUE(VALUE) S ICNARR(ICN)="",ICNARR(0)=1
"RTN","MPIRUTL",96,0)
 Q
"RTN","MPIRUTL",97,0)
 ;
"RTN","MPIRUTL",98,0)
ADDTF ;Add sites to query that are not on the Treating Facility List. ;**33
"RTN","MPIRUTL",99,0)
 N DIC,IEN,LOC,RESULT
"RTN","MPIRUTL",100,0)
 F  D  Q:+Y'>0
"RTN","MPIRUTL",101,0)
 .  S DIC=985.3,DIC(0)="QEAMZ"
"RTN","MPIRUTL",102,0)
 .  S DIC("A")="Add additional site(s) to the query list: "
"RTN","MPIRUTL",103,0)
 .  D ^DIC I +Y>0 D
"RTN","MPIRUTL",104,0)
 ..  S IEN=+Y,LOC=$$NNT^XUAF4(IEN)
"RTN","MPIRUTL",105,0)
 ..  S TFL($P(LOC,"^",2))=LOC,LOC=$P(LOC,"^",2)
"RTN","MPIRUTL",106,0)
 ..  I CRTN="MPIRPDAT" D MONITOR^MPIRPDT2(.VALUE,LOC,.RESULT)
"RTN","MPIRUTL",107,0)
 ..  I CRTN="MPIRAUD" D MONITOR^MPIRAUD2(.VALUE,LOC,.RESULT)
"RTN","MPIRUTL",108,0)
 ..  S $P(TFL(LOC),"^",3)=$P(RESULT(0),"^",2)
"RTN","MPIRUTL",109,0)
 Q
"RTN","MPIRUTL",110,0)
 ;
"RTN","MPIRUTLI")
0^175^B72080612
"RTN","MPIRUTLI",1,0)
MPIRUTLI ;BHAM/CML-RPC Utility Option Intros ;11/29/01
"RTN","MPIRUTLI",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,24,31,33**;30 Apr 99
"RTN","MPIRUTLI",3,0)
 ;
"RTN","MPIRUTLI",4,0)
SPI ;Remote Single Patient Initialization [MPI DATA MGT REMOTE SPI]
"RTN","MPIRUTLI",5,0)
 ;SPI^MPIRINT
"RTN","MPIRUTLI",6,0)
 W @IOF S QFLG=0
"RTN","MPIRUTLI",7,0)
 W !,"This option allows a user to remotely send a patient from a selected site to"
"RTN","MPIRUTLI",8,0)
 W !,"the MPI for an ICN assignment.  The option works in the same manner (i.e.,"
"RTN","MPIRUTLI",9,0)
 W !,"exact matches only, you can't pick from a list) as the real-time connection"
"RTN","MPIRUTLI",10,0)
 W !,"made with the MPI using the VistA registration options."
"RTN","MPIRUTLI",11,0)
 W !!,"When to use this option:"
"RTN","MPIRUTLI",12,0)
 W !,"- To get an ICN for a patient when one is needed quickly.  For example, a"
"RTN","MPIRUTLI",13,0)
 W !,"  Remote Data View (RDV) needs to be done and you aren't successful getting"
"RTN","MPIRUTLI",14,0)
 W !,"  site involvement to SPI the patient."
"RTN","MPIRUTLI",15,0)
 W !!
"RTN","MPIRUTLI",16,0)
 K DIRUT
"RTN","MPIRUTLI",17,0)
 Q
"RTN","MPIRUTLI",18,0)
 ;
"RTN","MPIRUTLI",19,0)
CMOR ;Remote CMOR Update [MPI DATA MGT REMOTE CMOR UPDT]
"RTN","MPIRUTLI",20,0)
 ;CMOR^MPIRINT
"RTN","MPIRUTLI",21,0)
 W @IOF S QFLG=0
"RTN","MPIRUTLI",22,0)
 W !,"This option allows a user to remotely update the COORDINATING MASTER OF RECORD"
"RTN","MPIRUTLI",23,0)
 W !,"(#991.03) field in the PATIENT (#2) file for a selected patient and facility."
"RTN","MPIRUTLI",24,0)
 W !,"The patient can be selected by ICN or SSN.  The remote update occurs using the"
"RTN","MPIRUTLI",25,0)
 W !,"CMOR from the MPI to a site selected from the treating facility list on the MPI."
"RTN","MPIRUTLI",26,0)
 W !,"The user will also have the option of triggering a patient data update. This"
"RTN","MPIRUTLI",27,0)
 W !,"would result in the broadcast of a new data update message.  If the site"
"RTN","MPIRUTLI",28,0)
 W !,"selected is not the CMOR, this will generate a Patient Data Review (PDR) at the"
"RTN","MPIRUTLI",29,0)
 W !,"CMOR site."
"RTN","MPIRUTLI",30,0)
 W !!,"When to use this option:"
"RTN","MPIRUTLI",31,0)
 W !,"- The CMOR assignment on the MPI and a VistA site do not agree."
"RTN","MPIRUTLI",32,0)
 W !!
"RTN","MPIRUTLI",33,0)
 K DIRUT
"RTN","MPIRUTLI",34,0)
 Q
"RTN","MPIRUTLI",35,0)
 ;
"RTN","MPIRUTLI",36,0)
UPD ;Remote ICN, Checksum and CMOR Update [MPI DATA MGT REMOTE ICN UPDATE]
"RTN","MPIRUTLI",37,0)
 ;UPDT^MPIRINT
"RTN","MPIRUTLI",38,0)
 W @IOF S QFLG=0
"RTN","MPIRUTLI",39,0)
 W !,"This option allows a user to remotely update the INTEGRATION CONTROL NUMBER"
"RTN","MPIRUTLI",40,0)
 W !,"(#991.01), ICN CHECKSUM (#991.02), and COORDINATING MASTER OF RECORD (#991.03)"
"RTN","MPIRUTLI",41,0)
 W !,"fields in the PATIENT (#2) file for a selected patient and facility.  The"
"RTN","MPIRUTLI",42,0)
 W !,"patient can be selected by ICN or SSN.  The remote update occurs from the MPI to"
"RTN","MPIRUTLI",43,0)
 W !,"a site selected from the treating facility list on the MPI.  The user will also"
"RTN","MPIRUTLI",44,0)
 W !,"have the option of triggering a patient data update. This would result in the"
"RTN","MPIRUTLI",45,0)
 W !,"broadcast of a new data update message.  If the site selected is not the CMOR"
"RTN","MPIRUTLI",46,0)
 W !,"this will generate a Patient Data Review (PDR) at the CMOR site."
"RTN","MPIRUTLI",47,0)
 W !!,"When to use this option:"
"RTN","MPIRUTLI",48,0)
 W !,"- A site doesn't have the ICN (i.e., lost messaging) that is on the MPI."
"RTN","MPIRUTLI",49,0)
 W !!,"Notes:"
"RTN","MPIRUTLI",50,0)
 W !,"- This option will re-connect the site to the ICN but DOES NOT do any data"
"RTN","MPIRUTLI",51,0)
 W !,"  validation checks so you will need to ensure that this patient's data "
"RTN","MPIRUTLI",52,0)
 W !,"  hasn't changed, otherwise you could create a mismatch."
"RTN","MPIRUTLI",53,0)
 W !,"- This option will NOT allow an existing National ICN to be overwritten"
"RTN","MPIRUTLI",54,0)
 W !,"  with another ICN."
"RTN","MPIRUTLI",55,0)
 W !!
"RTN","MPIRUTLI",56,0)
 K DIRUT
"RTN","MPIRUTLI",57,0)
 Q
"RTN","MPIRUTLI",58,0)
 ;
"RTN","MPIRUTLI",59,0)
DUP ;Resolve MPI Duplicate [MPI DATA MGT DUP RES]
"RTN","MPIRUTLI",60,0)
 ;MPIA24D
"RTN","MPIRUTLI",61,0)
 W @IOF S QFLG=0
"RTN","MPIRUTLI",62,0)
 W !,"This option allows a user to merge duplicate records on the MPI when SSN data"
"RTN","MPIRUTLI",63,0)
 W !,"stored in the MPI VETERAN/CLIENT (#985) file is exactly the same. The records"
"RTN","MPIRUTLI",64,0)
 W !,"to be merged can be selected by ICN or SSN.  All records are displayed and the"
"RTN","MPIRUTLI",65,0)
 W !,"user is prompted to select the record to be retained (primary record). ALL ICNs"
"RTN","MPIRUTLI",66,0)
 W !,"are displayed with the ICN to be retained at the top, followed by the ICN(s)"
"RTN","MPIRUTLI",67,0)
 W !,"that are not able to be matched, and finally those that are able to be matched."
"RTN","MPIRUTLI",68,0)
 W !!,"To be able to match, they must exactly match the SSN field.  If there is at"
"RTN","MPIRUTLI",69,0)
 W !,"least one entry able to be matched, the user is prompted to select the entry(s)"
"RTN","MPIRUTLI",70,0)
 W !,"to be merged.  This will trigger messages to all treating facilities associated"
"RTN","MPIRUTLI",71,0)
 W !,"with the selected entry to change the current ICN to the ICN being retained."
"RTN","MPIRUTLI",72,0)
 W !,"[NOTE: Only the CMOR site for each involved ICN has to have an exact SSN match"
"RTN","MPIRUTLI",73,0)
 W !,"in order to be merged.]  As messaging is returned from each site, indicating"
"RTN","MPIRUTLI",74,0)
 W !,"the merge has taken place, the MPI FACILITY ASSOCIATION (#985.5) file is updated"
"RTN","MPIRUTLI",75,0)
 W !,"for the retained ICN and the previous ICN for that site in the MPI FACILITY"
"RTN","MPIRUTLI",76,0)
 W !,"ASSOCIATION (#985.5) file entry is removed. Once the treating facilities have"
"RTN","MPIRUTLI",77,0)
 W !,"been moved to the retained ICN, the previous ICN entry in the MPI VETERAN/"
"RTN","MPIRUTLI",78,0)
 W !,"CLIENT (#985) file is deactivated.  All deactivated ICNs are placed in the OTHER"
"RTN","MPIRUTLI",79,0)
 W !,"IDS (#200) field in the MPI VETERAN/CLIENT (#985) file for the retained ICN."
"RTN","MPIRUTLI",80,0)
 W !!,"When to use this option:"
"RTN","MPIRUTLI",81,0)
 W !,"- To merge identified duplicates on the MPI when the SSN matches between the"
"RTN","MPIRUTLI",82,0)
 W !,"  CMOR sites for the involved ICNs."
"RTN","MPIRUTLI",83,0)
 ;
"RTN","MPIRUTLI",84,0)
 G QUIT
"RTN","MPIRUTLI",85,0)
 ;
"RTN","MPIRUTLI",86,0)
RM ;Unlink ICN for Mismatched/Dup Patient [MPI DATA MGT UNL MIS/DUP PTS]
"RTN","MPIRUTLI",87,0)
 ;START^MPIA43
"RTN","MPIRUTLI",88,0)
 W @IOF S QFLG=0
"RTN","MPIRUTLI",89,0)
 W !,"This option allows a user to unlink a site's association from a selected ICN."
"RTN","MPIRUTLI",90,0)
 W !,"In addition, the ICN is removed from the ICN HISTORY (#992) multiple in the"
"RTN","MPIRUTLI",91,0)
 W !,"PATIENT (#2) file at the site and any entries associated with that site are"
"RTN","MPIRUTLI",92,0)
 W !,"removed from the OTHER IDS (#200) field of the MPI VETERAN/CLIENT (#985) file"
"RTN","MPIRUTLI",93,0)
 W !,"on the MPI."
"RTN","MPIRUTLI",94,0)
 W !!,"When to use this option:"
"RTN","MPIRUTLI",95,0)
 W !,"1. To remove a duplicate patient at a site from an ICN so that the ""correct"""
"RTN","MPIRUTLI",96,0)
 W !,"   patient entry can be SPI'd to the ICN."
"RTN","MPIRUTLI",97,0)
 W !,"2. To resolve identified mismatched patients."
"RTN","MPIRUTLI",98,0)
 W !,"3. To Un-link Austin (200) duplicate record."
"RTN","MPIRUTLI",99,0)
 W !!,"Notes:"
"RTN","MPIRUTLI",100,0)
 W !,"- ICN is NOT retained in history."
"RTN","MPIRUTLI",101,0)
 W !,"- If the patient who is being unlinked from an ICN is from the ONLY site"
"RTN","MPIRUTLI",102,0)
 W !,"  associated with the ICN, the final result is that the ICN is deactivated"
"RTN","MPIRUTLI",103,0)
 W !,"  on the MPI."
"RTN","MPIRUTLI",104,0)
 W !,"- If the ICN is shared with other facility(s), the final result is the"
"RTN","MPIRUTLI",105,0)
 W !,"  removal of the site from the treating facility lists on the MPI and each"
"RTN","MPIRUTLI",106,0)
 W !,"  remaining site(s) who share the ICN."
"RTN","MPIRUTLI",107,0)
 W !,"- In the future, this option could also be used to unlink/unmatch a patient"
"RTN","MPIRUTLI",108,0)
 W !,"  from another system (e.g., the Health Data Repository)."
"RTN","MPIRUTLI",109,0)
 W !!
"RTN","MPIRUTLI",110,0)
 K DIRUT
"RTN","MPIRUTLI",111,0)
 Q
"RTN","MPIRUTLI",112,0)
 ;
"RTN","MPIRUTLI",113,0)
BC ;Broadcast TF Update from MPI [MPI DATA MGT BROADCAST TF UPD]
"RTN","MPIRUTLI",114,0)
 ;^MPIMBC
"RTN","MPIRUTLI",115,0)
 W @IOF S QFLG=0
"RTN","MPIRUTLI",116,0)
 W !,"This option allows a user to select an ICN on the MPI and broadcast a Treating"
"RTN","MPIRUTLI",117,0)
 W !,"Facility Update to all sites sharing the ICN."
"RTN","MPIRUTLI",118,0)
 W !!,"When to use this option:"
"RTN","MPIRUTLI",119,0)
 W !,"1. A site who shares an ICN does not have the complete treating facility list."
"RTN","MPIRUTLI",120,0)
 W !,"2. A site has an extra treating facility erroneously assigned to a patient"
"RTN","MPIRUTLI",121,0)
 W !,"   and you need to remove it."
"RTN","MPIRUTLI",122,0)
 W !!,"Notes:"
"RTN","MPIRUTLI",123,0)
 W !,"- If you see that a site has not updated their treating facility list due to a"
"RTN","MPIRUTLI",124,0)
 W !,"  large backlog of messaging, using this option will NOT fix the problem.  If"
"RTN","MPIRUTLI",125,0)
 W !,"  it is an emergency please contact the development team."
"RTN","MPIRUTLI",126,0)
 W !!
"RTN","MPIRUTLI",127,0)
 K DIRUT
"RTN","MPIRUTLI",128,0)
 Q
"RTN","MPIRUTLI",129,0)
 ;
"RTN","MPIRUTLI",130,0)
RE ;Reestablish or Synchronize an ICN on MPI [MPI DATA MGT REEST ICN]
"RTN","MPIRUTLI",131,0)
 ;START^MPIA19
"RTN","MPIRUTLI",132,0)
 W @IOF S QFLG=0
"RTN","MPIRUTLI",133,0)
 W !,"This option allows a user to reestablish an ICN on the MPI using data from a"
"RTN","MPIRUTLI",134,0)
 W !,"selected site.  It can also be used to synchronize the data for an ICN that"
"RTN","MPIRUTLI",135,0)
 W !,"already exists on the MPI with data from a selected site.  This is accomplished"
"RTN","MPIRUTLI",136,0)
 W !,"by sending a remote query to a site where the ICN exists. The data returned from"
"RTN","MPIRUTLI",137,0)
 W !,"the site will populate the appropriate fields in the MPI VETERAN/CLIENT (#985)"
"RTN","MPIRUTLI",138,0)
 W !,"and MPI FACILITY ASSOCIATION (#985.5) files."
"RTN","MPIRUTLI",139,0)
 W !!,"When to use this option:"
"RTN","MPIRUTLI",140,0)
 W !,"1. To establish or update data for a particular Treating Facility when that"
"RTN","MPIRUTLI",141,0)
 W !,"   data is incomplete for an existing ICN on the MPI. "
"RTN","MPIRUTLI",142,0)
 W !,"2. To deactivate an ICN on the MPI when that ICN exists only in HISTORY at"
"RTN","MPIRUTLI",143,0)
 W !,"   the site or does not exist at all."
"RTN","MPIRUTLI",144,0)
 W !,"3. ICN exists at site but is deactivated on MPI or does not exist on the MPI."
"RTN","MPIRUTLI",145,0)
 W !!,"CAUTION For an ICN that is not shared with other facility(s):"
"RTN","MPIRUTLI",146,0)
 W !,"If the ICN exists on the MPI but does not exist at the site (or is only in"
"RTN","MPIRUTLI",147,0)
 W !,"History at the site), using the RE option will DEACTIVATE the ICN on the MPI."
"RTN","MPIRUTLI",148,0)
 W !,"For these cases, you should instead use the UPD option to send a message"
"RTN","MPIRUTLI",149,0)
 W !,"from the MPI to update the ICN at the site."
"RTN","MPIRUTLI",150,0)
 K DIRUT
"RTN","MPIRUTLI",151,0)
 Q
"RTN","MPIRUTLI",152,0)
 ;
"RTN","MPIRUTLI",153,0)
QUIT ;
"RTN","MPIRUTLI",154,0)
 K DIR
"RTN","MPIRUTLI",155,0)
 S DIR(0)="E" D  D ^DIR K DIR
"RTN","MPIRUTLI",156,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIRUTLI",157,0)
 I $D(DIRUT) S QFLG=1
"RTN","MPIRUTLI",158,0)
 K SS,DIR,DIRUT
"RTN","MPIRUTLI",159,0)
 W !
"RTN","MPIRUTLI",160,0)
 Q
"RTN","MPISCORE")
0^176^B1003029
"RTN","MPISCORE",1,0)
MPISCORE ;GFT
"RTN","MPISCORE",2,0)
 ;
"RTN","MPISCORE",3,0)
2(XDRCD,XDRCD2) ;
"RTN","MPISCORE",4,0)
 N XDRFL,XDRGL,XDRDSCOR,XDRDTEST,XDRDUP,XDRQFLG
"RTN","MPISCORE",5,0)
 D DT^DICRW
"RTN","MPISCORE",6,0)
 S XDRFL=985,XDRGL=^DIC(985,0,"GL")
"RTN","MPISCORE",7,0)
 S XDRQFLG=0
"RTN","MPISCORE",8,0)
 S XDRD("NOADD")=""
"RTN","MPISCORE",9,0)
 S XDRDTYPE="b"
"RTN","MPISCORE",10,0)
 D ^XDRDSCOR
"RTN","MPISCORE",11,0)
 D ^XDRDUP
"RTN","MPISCORE",12,0)
 Q XDRD("DUPSCORE")
"RTN","MPISCORE",13,0)
 ;
"RTN","MPISCORE",14,0)
TMP F CNT=2,3 D D
"RTN","MPISCORE",15,0)
 Q
"RTN","MPISCORE",16,0)
D S SS="" F  S SS=$O(^TMP("ZZCML1",CNT,SS)),SSI="" Q:SS=""  D
"RTN","MPISCORE",17,0)
 .F X=1:1:CNT S (SS(X),SSI)=$O(^TMP("ZZCML1",CNT,SS,SSI))
"RTN","MPISCORE",18,0)
 .I SS(1),SS(2),$D(^MPIVET(SS(1))),$D(^(SS(2))) S ^TMP("ZZCML1",CNT,SS)=$$2(SS(1),SS(2))_"^"_$H
"RTN","MPISIREV")
0^179^B18146370
"RTN","MPISIREV",1,0)
MPISIREV ;BIR/PTD-Determine ID STATE for ICN ;4/8/04
"RTN","MPISIREV",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**24,31**;30 Apr 99
"RTN","MPISIREV",3,0)
 ;
"RTN","MPISIREV",4,0)
EN(ICN) ;Establish or Re-evaluate ID STATE for new or existing entry.
"RTN","MPISIREV",5,0)
 ;Does NOT set ID STATE; only determines current value of ID STATE.
"RTN","MPISIREV",6,0)
 ;If variable MPIMFLG exists, ID STATE will be set to TEMPORARY
"RTN","MPISIREV",7,0)
 ;because there is no SSN at the site.
"RTN","MPISIREV",8,0)
 ;
"RTN","MPISIREV",9,0)
 ;Input:
"RTN","MPISIREV",10,0)
 ;ICN - Patient INTEGRATION CONTROL NUMBER
"RTN","MPISIREV",11,0)
 ;
"RTN","MPISIREV",12,0)
 ;      Example: S ICN=1001131312
"RTN","MPISIREV",13,0)
 ;               S RET=$$EN^MPISIREV(ICN)
"RTN","MPISIREV",14,0)
 ;
"RTN","MPISIREV",15,0)
 ;Returns:
"RTN","MPISIREV",16,0)
 ;     -1^error message, if unable to determine ID STATE
"RTN","MPISIREV",17,0)
 ;     or
"RTN","MPISIREV",18,0)
 ;     Current ID STATE (internal, e.g., "P")^Exception Number (if generated)^Exception message
"RTN","MPISIREV",19,0)
 ;
"RTN","MPISIREV",20,0)
 N DOB,EXNM,GNDR,IMPRS,MPIERR,RESULT,SSN,SURNM,ZNODE
"RTN","MPISIREV",21,0)
 ;Does variable MPIMFLG exist?
"RTN","MPISIREV",22,0)
 I $G(MPIMFLG) D  G END
"RTN","MPISIREV",23,0)
 .S RESULT="T"
"RTN","MPISIREV",24,0)
 .S EXNM=209
"RTN","MPISIREV",25,0)
 .S MPIERR="No SSN was sent from the site - TEMPORARY."
"RTN","MPISIREV",26,0)
 .S RESULT=RESULT_"^"_EXNM_"^"_MPIERR
"RTN","MPISIREV",27,0)
 .K MPIMFLG
"RTN","MPISIREV",28,0)
 ;
"RTN","MPISIREV",29,0)
 ;For ICN, get data from the zero node.
"RTN","MPISIREV",30,0)
 S RESULT="-1^Unable to determine ID State for ICN in MPI VETERAN/CLIENT (#985) file." ;Initialize
"RTN","MPISIREV",31,0)
 S ZNODE=$G(^MPIVET(ICN,0))
"RTN","MPISIREV",32,0)
 S SURNM=$P($G(ZNODE),"^",2)
"RTN","MPISIREV",33,0)
 S DOB=$P($G(ZNODE),"^",8)
"RTN","MPISIREV",34,0)
 S GNDR=$P($G(ZNODE),"^",13)
"RTN","MPISIREV",35,0)
 S SSN=$P($G(ZNODE),"^",14)
"RTN","MPISIREV",36,0)
 ;Determine ID STATE
"RTN","MPISIREV",37,0)
 D DACT I $P(RESULT,"^")="D" G END ;DEACTIVATED
"RTN","MPISIREV",38,0)
 D TMP I $P(RESULT,"^")="T" G END ;TEMPORARY
"RTN","MPISIREV",39,0)
 D PERM ;PERMANENT
"RTN","MPISIREV",40,0)
 ;
"RTN","MPISIREV",41,0)
END ;Return ID STATE (& possibly an exception) or Error Message.
"RTN","MPISIREV",42,0)
 Q RESULT
"RTN","MPISIREV",43,0)
 ;
"RTN","MPISIREV",44,0)
 ;
"RTN","MPISIREV",45,0)
DACT ;DEACTIVATED - ICN no longer used.
"RTN","MPISIREV",46,0)
 ;SURNAME, SSN, DATE OF BIRTH and SEX all null.
"RTN","MPISIREV",47,0)
 I (SURNM="")&(SSN="")&(DOB="")&(GNDR="") S RESULT="D"
"RTN","MPISIREV",48,0)
 ;MPI Changes Iteration 2 - All data not deleted in 985 when deactivated.
"RTN","MPISIREV",49,0)
 ;To deactivate an ICN, call API - SETSTATE^MPISIUT
"RTN","MPISIREV",50,0)
 Q
"RTN","MPISIREV",51,0)
 ;
"RTN","MPISIREV",52,0)
TMP ;TEMPORARY - Not enough fields to make it permanent.
"RTN","MPISIREV",53,0)
 ;2 leading 'Z's for name AND 5 leading '0's for SSN AND no shared TFs.
"RTN","MPISIREV",54,0)
 I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=0) S RESULT="T" Q
"RTN","MPISIREV",55,0)
 ;5 leading '0's for SSN AND no shared TFs.
"RTN","MPISIREV",56,0)
 I ($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=0) S RESULT="T" Q
"RTN","MPISIREV",57,0)
 ;2 leading 'Z's for name AND SSN does NOT begin with 5 '0's AND no shared TFs.
"RTN","MPISIREV",58,0)
 I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)'="00000")&($$CHECK^MPISUT01(ICN)=0) S RESULT="T" Q
"RTN","MPISIREV",59,0)
 ;Name contains 'MERGE ' or 'MERGING'
"RTN","MPISIREV",60,0)
 I (SURNM["MERGE ")!(SURNM["MERGING") D  Q
"RTN","MPISIREV",61,0)
 .S RESULT="T"
"RTN","MPISIREV",62,0)
 .;If no shared TFs, quit.
"RTN","MPISIREV",63,0)
 .;If there are shared TFs, log exception.
"RTN","MPISIREV",64,0)
 .I ($$CHECK^MPISUT01(ICN)=1) D
"RTN","MPISIREV",65,0)
 ..S EXNM=238
"RTN","MPISIREV",66,0)
 ..S MPIERR="Name contains 'MERGE ' or 'MERGING' & Shared TFs - TEMPORARY."
"RTN","MPISIREV",67,0)
 ..S RESULT=RESULT_"^"_EXNM_"^"_MPIERR
"RTN","MPISIREV",68,0)
 ;SURNAME OR DATE OF BIRTH OR GENDER equals null OR DOB has no year.
"RTN","MPISIREV",69,0)
 I (SURNM="")!(DOB="")!($E(DOB,1,3)="000")!(GNDR="") D  Q
"RTN","MPISIREV",70,0)
 .S EXNM=209
"RTN","MPISIREV",71,0)
 .I SURNM="" S MPIERR="Surname equals null - TEMPORARY."
"RTN","MPISIREV",72,0)
 .I DOB="" S MPIERR="Date of birth equals null - TEMPORARY."
"RTN","MPISIREV",73,0)
 .I GNDR="" S MPIERR="Gender equals null - TEMPORARY."
"RTN","MPISIREV",74,0)
 .I $E(DOB,1,3)="000" S MPIERR="No year for date of birth - TEMPORARY."
"RTN","MPISIREV",75,0)
 .S RESULT="T"_"^"_EXNM_"^"_MPIERR
"RTN","MPISIREV",76,0)
 ;
"RTN","MPISIREV",77,0)
 ;Determine if DATE OF BIRTH is imprecise.
"RTN","MPISIREV",78,0)
 S IMPRS=0 ;Initialize variable to NOT imprecise.
"RTN","MPISIREV",79,0)
 I $E(DOB,4,7)="0000" S IMPRS=1 ;Imprecise: year only; no month/day
"RTN","MPISIREV",80,0)
 I ($E(DOB,6,7)="00")&($E(DOB,4,5)'="00") S IMPRS=1 ;Imprecise: year/month only; no day
"RTN","MPISIREV",81,0)
 ;DATE OF BIRTH is imprecise AND SSN equals null.
"RTN","MPISIREV",82,0)
 I (IMPRS=1)&(SSN="") S EXNM=209,MPIERR="DOB imprecise & SSN null - TEMPORARY." S RESULT="T"_"^"_EXNM_"^"_MPIERR Q
"RTN","MPISIREV",83,0)
 ;3 leading 'E's for SURNAME.
"RTN","MPISIREV",84,0)
 I $E(SURNM,1,3)="EEE" S EXNM=209,MPIERR="Leading Es for Name - TEMPORARY." S RESULT="T"_"^"_EXNM_"^"_MPIERR
"RTN","MPISIREV",85,0)
 Q
"RTN","MPISIREV",86,0)
 ;
"RTN","MPISIREV",87,0)
PERM ;PERMANENT - All required fields are entered.
"RTN","MPISIREV",88,0)
 ;2 leading 'Z's for name AND 5 leading '0's for SSN AND there are shared TFs.
"RTN","MPISIREV",89,0)
 I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=1) S EXNM=238,MPIERR="ZZ'd Name & Leading 0s in SSN & Shared TFs - PERMANENT." S RESULT="P"_"^"_EXNM_"^"_MPIERR Q
"RTN","MPISIREV",90,0)
 ;5 leading '0's for SSN AND there are shared TFs.
"RTN","MPISIREV",91,0)
 I ($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=1) S EXNM=238,MPIERR="Leading 0s in SSN & Shared TFs - PERMANENT." S RESULT="P"_"^"_EXNM_"^"_MPIERR Q
"RTN","MPISIREV",92,0)
 ;2 leading 'Z's for name AND SSN does NOT begin with 5 '0's AND there are shared TFs.
"RTN","MPISIREV",93,0)
 I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)'="00000")&($$CHECK^MPISUT01(ICN)=1) S EXNM=238,MPIERR="ZZ'd Name, NO Leading 0s for SSN & Shared TFs - PERMANENT." S RESULT="P"_"^"_EXNM_"^"_MPIERR Q
"RTN","MPISIREV",94,0)
 ;Else there is a good SURNM, DOB, GNDR, and SSN
"RTN","MPISIREV",95,0)
 S RESULT="P"
"RTN","MPISIREV",96,0)
 Q
"RTN","MPISIREV",97,0)
 ;
"RTN","MPISIST")
0^180^B85475888
"RTN","MPISIST",1,0)
MPISIST ;BIR/PTD-Set ID State for Existing Entries in File 985 ;4/6/04
"RTN","MPISIST",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**22,31**;30 Apr 99
"RTN","MPISIST",3,0)
 ;
"RTN","MPISIST",4,0)
 ;Calls $$CHECK^MPISUT01 ;Returns '1' if shared, '0' if not shared.
"RTN","MPISIST",5,0)
 ;
"RTN","MPISIST",6,0)
EN ;Entry point to process a specific number of ICNs (for testing).
"RTN","MPISIST",7,0)
 W ! K NPROC S MAX=$P(^MPIVET(0),"^",4) S X=MAX,X2=0,X3=($L(MAX)+2) D COMMA^%DTC
"RTN","MPISIST",8,0)
 W !,"There are "_X_" ICNs in the MPI VETERAN/CLIENT (#985) file."
"RTN","MPISIST",9,0)
 W !!,"This routine displays the following statistics:"
"RTN","MPISIST",10,0)
 W !,"For each date/time that the Set ID State for Existing Entries ran,"
"RTN","MPISIST",11,0)
 W !,"information for ID State is displayed.  For ID State, the number"
"RTN","MPISIST",12,0)
 W !,"of deactivated, temporary, and permanent ICNs is shown."
"RTN","MPISIST",13,0)
 W !,"Additionally, the total for each of these categories is listed,"
"RTN","MPISIST",14,0)
 W !,"along with the total number of entries processed.",!
"RTN","MPISIST",15,0)
 S DIR(0)="NA^1:"_MAX_":0",DIR("A")="Select the number of ICNs to be processed: " D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPISIST",16,0)
 S NPROC=Y,ENFLG=1
"RTN","MPISIST",17,0)
 K MAX,X,X2,X3,Y
"RTN","MPISIST",18,0)
 G LOOP
"RTN","MPISIST",19,0)
 ;
"RTN","MPISIST",20,0)
EN1 ;Entry point to process all unassigned ICNs.
"RTN","MPISIST",21,0)
 W !!,"Use this entry point on the Austin MPI with caution!"
"RTN","MPISIST",22,0)
 W !,"If 4000 ICNs are processed each minute, the entire file"
"RTN","MPISIST",23,0)
 W !,"could take over 44 hours (almost 2 days) to process.",!
"RTN","MPISIST",24,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you sure you want to continue"
"RTN","MPISIST",25,0)
 S DIR("?")="If you answer YES, this task will be queued to run in the background."
"RTN","MPISIST",26,0)
 D ^DIR I +Y'=1 K DIR G QUIT
"RTN","MPISIST",27,0)
 ;
"RTN","MPISIST",28,0)
QUE ;Queue the job to run in the background.
"RTN","MPISIST",29,0)
 W !!,"This task will be queued to run in the background!",!!
"RTN","MPISIST",30,0)
 K ZTSAVE S ZTSAVE("ENFLG")=0,ZTSAVE("NPROC")=0
"RTN","MPISIST",31,0)
 S ZTRTN="LOOP^MPISIST"
"RTN","MPISIST",32,0)
 S ZTDESC="Set ID State for Existing Entries in the MPI VETERAN/CLIENT (#985) file."
"RTN","MPISIST",33,0)
 S ZTIO=""
"RTN","MPISIST",34,0)
 S ZTDTH=$H
"RTN","MPISIST",35,0)
 D ^%ZTLOAD
"RTN","MPISIST",36,0)
 I $D(ZTSK) W "     Task number ",ZTSK," has been queued."
"RTN","MPISIST",37,0)
 Q
"RTN","MPISIST",38,0)
 ;
"RTN","MPISIST",39,0)
LOOP ;Loop through the MPI VETERAN/CLIENT (#985) file.
"RTN","MPISIST",40,0)
 ;Get the last ICN processed from the MPI PARAMETER (#985.1) file.
"RTN","MPISIST",41,0)
 S (TOTICN,CNT,DACT,TMP,PERM)=0 N RET I $E(IOST,1,2)="C-" W !
"RTN","MPISIST",42,0)
 S PRAM=$G(^MPI(985.1,1,"ID_STATE"))
"RTN","MPISIST",43,0)
 I 'PRAM S ICN=0
"RTN","MPISIST",44,0)
 I PRAM S ICN=$P($G(^MPI(985.1,1,"ID_STATE")),"^",3) I 'ICN S ICN=0
"RTN","MPISIST",45,0)
 S LSTICN=ICN
"RTN","MPISIST",46,0)
 I $E($O(^MPIVET(ICN)),1)="A" W:$E(IOST,1,2)="C-" !,"All current ICNs have been assigned an ID State." G QUIT
"RTN","MPISIST",47,0)
 D NOW^%DTC
"RTN","MPISIST",48,0)
 S ^XTMP("MPISIST",0)=%+100_"^"_%_"^ID STATE Exception Data"
"RTN","MPISIST",49,0)
 K FDA S FDA(985.1,"1,",8)=% D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",50,0)
 K FDA S FDA(985.1,"1,",8.1)="@" D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",51,0)
 F  S ICN=$O(^MPIVET(ICN)) Q:'ICN  Q:(ENFLG&(CNT=NPROC))  D
"RTN","MPISIST",52,0)
 .Q:$D(^MPIVET(ICN,"ID_STATE"))  ;ID STATE was previously set.
"RTN","MPISIST",53,0)
 .;For each ICN, get data from the zero and one nodes.
"RTN","MPISIST",54,0)
 .S ZNODE=$G(^MPIVET(ICN,0))
"RTN","MPISIST",55,0)
 .S SURNM=$P($G(ZNODE),"^",2)
"RTN","MPISIST",56,0)
 .S FRSTNM=$P($G(ZNODE),"^",3)
"RTN","MPISIST",57,0)
 .S MIDNM=$P($G(ZNODE),"^",4)
"RTN","MPISIST",58,0)
 .S PNAM=SURNM_","_FRSTNM_" "_MIDNM
"RTN","MPISIST",59,0)
 .S DOB=$P($G(ZNODE),"^",8)
"RTN","MPISIST",60,0)
 .S GNDR=$P($G(ZNODE),"^",13)
"RTN","MPISIST",61,0)
 .S SSN=$P($G(ZNODE),"^",14)
"RTN","MPISIST",62,0)
 .S CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPISIST",63,0)
 .S TOTICN=TOTICN+1
"RTN","MPISIST",64,0)
 .;
"RTN","MPISIST",65,0)
DACT .;DEACTIVATED - ICN no longer used.
"RTN","MPISIST",66,0)
 .;SURNAME, SSN, DATE OF BIRTH & COORDINATING MASTER OF RECORD all null.
"RTN","MPISIST",67,0)
 .I (SURNM="")&(SSN="")&(DOB="")&(CMOR="") D  Q
"RTN","MPISIST",68,0)
 ..S STATE="D"
"RTN","MPISIST",69,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",70,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",71,0)
 .;
"RTN","MPISIST",72,0)
TMP .;TEMPORARY - Not enough fields to make it permanent.
"RTN","MPISIST",73,0)
 .S STATE="T"
"RTN","MPISIST",74,0)
 .;2 leading 'Z's for name AND 5 leading '0's for SSN AND no shared TFs.
"RTN","MPISIST",75,0)
 .I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=0) D  Q
"RTN","MPISIST",76,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",77,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",78,0)
 .;5 leading '0's for SSN AND no shared TFs.
"RTN","MPISIST",79,0)
 .I ($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=0) D  Q
"RTN","MPISIST",80,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",81,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",82,0)
 .;2 leading 'Z's for name AND SSN does NOT begin with 5 '0's AND no shared TFs.
"RTN","MPISIST",83,0)
 .I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)'="00000")&($$CHECK^MPISUT01(ICN)=0) D  Q
"RTN","MPISIST",84,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",85,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",86,0)
 .;Name contains 'MERGE ' or 'MERGING'
"RTN","MPISIST",87,0)
 .I (SURNM["MERGE ")!(SURNM["MERGING") D  Q
"RTN","MPISIST",88,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",89,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",90,0)
 ..;If there are shared TFs, set XTMP global.
"RTN","MPISIST",91,0)
 ..I ($$CHECK^MPISUT01(ICN)=1) D
"RTN","MPISIST",92,0)
 ...S EXTEXT="Name contains 'MERGE ' or 'MERGING' & Shared TFs"
"RTN","MPISIST",93,0)
 ...D SETXTMP
"RTN","MPISIST",94,0)
 .;SURNAME OR DATE OF BIRTH OR GENDER equals null OR DOB has no year.
"RTN","MPISIST",95,0)
 .I (SURNM="")!(DOB="")!($E(DOB,1,3)="000")!(GNDR="") D  Q
"RTN","MPISIST",96,0)
 ..I SURNM="" S EXTEXT="Surname equals null"
"RTN","MPISIST",97,0)
 ..I DOB="" S EXTEXT="Date of birth equals null"
"RTN","MPISIST",98,0)
 ..I GNDR="" S EXTEXT="Gender equals null"
"RTN","MPISIST",99,0)
 ..I $E(DOB,1,3)="000" S EXTEXT="No year for date of birth"
"RTN","MPISIST",100,0)
 ..D SETXTMP
"RTN","MPISIST",101,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",102,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",103,0)
 .;Determine if DATE OF BIRTH is imprecise.
"RTN","MPISIST",104,0)
 .S IMPRS=0 ;Initialize variable to NOT imprecise.
"RTN","MPISIST",105,0)
 .I $E(DOB,4,7)="0000" S IMPRS=1 ;Imprecise: year only; no month/day
"RTN","MPISIST",106,0)
 .I ($E(DOB,6,7)="00")&($E(DOB,4,5)'="00") S IMPRS=1 ;Imprecise: year/month only; no day
"RTN","MPISIST",107,0)
 .;DATE OF BIRTH is imprecise AND SSN equals null.
"RTN","MPISIST",108,0)
 .I (IMPRS=1)&(SSN="") D  Q
"RTN","MPISIST",109,0)
 ..S EXTEXT="DOB imprecise & SSN null"
"RTN","MPISIST",110,0)
 ..D SETXTMP
"RTN","MPISIST",111,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",112,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",113,0)
 .;3 leading 'E's for SURNAME.
"RTN","MPISIST",114,0)
 .I $E(SURNM,1,3)="EEE" D  Q
"RTN","MPISIST",115,0)
 ..S EXTEXT="Leading Es for Name"
"RTN","MPISIST",116,0)
 ..D SETXTMP
"RTN","MPISIST",117,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",118,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",119,0)
 .;
"RTN","MPISIST",120,0)
PERM .;PERMANENT - All required fields are entered.
"RTN","MPISIST",121,0)
 .S STATE="P"
"RTN","MPISIST",122,0)
 .;2 leading 'Z's for name AND 5 leading '0's for SSN AND there are shared TFs.
"RTN","MPISIST",123,0)
 .I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=1) D  Q
"RTN","MPISIST",124,0)
 ..S EXTEXT="ZZ'd Name & Leading 0s in SSN & Shared TFs"
"RTN","MPISIST",125,0)
 ..D SETXTMP
"RTN","MPISIST",126,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",127,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",128,0)
 .;5 leading '0's for SSN AND there are shared TFs.
"RTN","MPISIST",129,0)
 .I ($E(SSN,1,5)="00000")&($$CHECK^MPISUT01(ICN)=1) D  Q
"RTN","MPISIST",130,0)
 ..S EXTEXT="Leading 0s in SSN & Shared TFs"
"RTN","MPISIST",131,0)
 ..D SETXTMP
"RTN","MPISIST",132,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",133,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",134,0)
 .;2 leading 'Z's for name AND SSN does NOT begin with 5 '0's AND there are shared TFs.
"RTN","MPISIST",135,0)
 .I ($E(SURNM,1,2)="ZZ")&($E(SSN,1,5)'="00000")&($$CHECK^MPISUT01(ICN)=1) D  Q
"RTN","MPISIST",136,0)
 ..S EXTEXT="ZZ'd Name & NO Leading 0s for SSN & Shared TFs"
"RTN","MPISIST",137,0)
 ..D SETXTMP
"RTN","MPISIST",138,0)
 ..S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",139,0)
 ..I RET=0 D TALLY
"RTN","MPISIST",140,0)
 .;Else there is a good SURNM, DOB, GNDR, and SSN
"RTN","MPISIST",141,0)
 .S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIST",142,0)
 .I RET=0 D TALLY
"RTN","MPISIST",143,0)
 ;
"RTN","MPISIST",144,0)
UPDT ;Set fields in the MPI PARAMETER (#985.1) file.
"RTN","MPISIST",145,0)
 D NOW^%DTC S STPDT=%
"RTN","MPISIST",146,0)
 K FDA S FDA(985.1,"1,",8.1)=STPDT D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",147,0)
 K FDA S FDA(985.1,"1,",8.2)=LSTICN D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",148,0)
 S DIC="^MPI(985.1,"_1_",""ID_STATE_SUM"",",DIC(0)="LZ",DIC("P")=$P($G(^DD(985.1,8.3,0)),"^",2),DA(1)=1,X=STPDT D ^DIC K DIC
"RTN","MPISIST",149,0)
 S IENS=$P(Y,"^")_","_1
"RTN","MPISIST",150,0)
 K FDA S FDA(985.13,IENS_",",1)=TOTICN D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",151,0)
 K FDA S FDA(985.13,IENS_",",2)=DACT D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",152,0)
 K FDA S FDA(985.13,IENS_",",4)=TMP D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",153,0)
 K FDA S FDA(985.13,IENS_",",5)=PERM D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIST",154,0)
 I $E(IOST,1,2)="C-" D PRTTOT
"RTN","MPISIST",155,0)
QUIT ;Kill variables and quit.
"RTN","MPISIST",156,0)
 K %,ARR,CMOR,CNT,DA,DACT,DIR,DIRUT,DOB,ERR,ENFLG,EX,EXTEXT,FDA,FRSTNM,GNDR,HL,ICN,IEN,IENS,IMPRS,LN,LN2,LSTDT,LSTICN,MAX,MIDNM
"RTN","MPISIST",157,0)
 K NPROC,PERM,PNAM,PRAM,SSN,STATE,STMON,STNAM,STPDT,SUBD,SUBICN,SUBP,SUBT,SURNM,TMP,TOTICN,TST,VISN,X,X2,X3,Y,ZNODE,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","MPISIST",158,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPISIST",159,0)
 Q
"RTN","MPISIST",160,0)
 ;
"RTN","MPISIST",161,0)
TALLY ;Update totals for report.
"RTN","MPISIST",162,0)
 ;STATE set before coming into this module.
"RTN","MPISIST",163,0)
 I STATE="D" S DACT=DACT+1
"RTN","MPISIST",164,0)
 I STATE="T" S TMP=TMP+1
"RTN","MPISIST",165,0)
 I STATE="P" S PERM=PERM+1
"RTN","MPISIST",166,0)
 I ENFLG S CNT=CNT+1
"RTN","MPISIST",167,0)
 S LSTICN=ICN
"RTN","MPISIST",168,0)
 I '(TOTICN#10000) D
"RTN","MPISIST",169,0)
 .I $E(IOST,1,2)="C-" W !,"Last ICN processed: ",LSTICN,"     Count:",CNT
"RTN","MPISIST",170,0)
 Q
"RTN","MPISIST",171,0)
 ;
"RTN","MPISIST",172,0)
SETXTMP ;Set XTMP Global.
"RTN","MPISIST",173,0)
 ;
"RTN","MPISIST",174,0)
 N STMON,STNAM,VISN
"RTN","MPISIST",175,0)
 S STMON=$G(^MPI(985.3,CMOR,0))
"RTN","MPISIST",176,0)
 S VISN=$P($G(STMON),"^",3) I VISN="" S VISN="99"
"RTN","MPISIST",177,0)
 S STNAM=$P($G(STMON),"^",6) I STNAM="" S STNAM="Missing Facility Name"
"RTN","MPISIST",178,0)
 S ^XTMP("MPISIST",VISN,STNAM,EXTEXT,ICN)=PNAM_"^"_SSN
"RTN","MPISIST",179,0)
 Q
"RTN","MPISIST",180,0)
 ;
"RTN","MPISIST",181,0)
PRTTOT ;Print Statistics for ID State Status
"RTN","MPISIST",182,0)
 I '$O(^MPI(985.1,1,"ID_STATE_SUM",0)) W !!,"The Set ID State code has not been run. No data available." Q
"RTN","MPISIST",183,0)
 S (IEN,TOTICN,SUBICN,DACT,SUBD,TMP,SUBT,PERM,SUBP)=0,$P(LN,"=",81)="",$P(LN2,"-",81)=""
"RTN","MPISIST",184,0)
 W @IOF,"ID State Statistics for Existing Entries",!,"in the MPI VETERAN/CLIENT (#985) File",!?52,"Printed: ",$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)),!,LN
"RTN","MPISIST",185,0)
 W !,"Run Date              Deactivated   Temporary   Permanent     Sub-Total by Date",!,LN2
"RTN","MPISIST",186,0)
 F  S IEN=$O(^MPI(985.1,1,"ID_STATE_SUM",IEN)) Q:'IEN  D
"RTN","MPISIST",187,0)
 .S ZNODE=$G(^MPI(985.1,1,"ID_STATE_SUM",IEN,0))
"RTN","MPISIST",188,0)
 .S LSTDT=$P($G(ZNODE),"^")
"RTN","MPISIST",189,0)
 .S SUBICN=$P($G(ZNODE),"^",2),TOTICN=TOTICN+SUBICN
"RTN","MPISIST",190,0)
 .S SUBD=$P($G(ZNODE),"^",3),DACT=DACT+SUBD
"RTN","MPISIST",191,0)
 .S SUBT=$P($G(ZNODE),"^",5),TMP=TMP+SUBT
"RTN","MPISIST",192,0)
 .S SUBP=$P($G(ZNODE),"^",6),PERM=PERM+SUBP
"RTN","MPISIST",193,0)
 .W !,$$FMTE^XLFDT(LSTDT),?22,$J(SUBD,10),?34,$J(SUBT,10),?46,$J(SUBP,10),?66,$J((SUBD+SUBT+SUBP),10)
"RTN","MPISIST",194,0)
 W !,LN2,!,"Total Number Processed:",?22,$J(DACT,10),?34,$J(TMP,10),?46,$J(PERM,10),?66,$J((TOTICN),10)
"RTN","MPISIST",195,0)
 I '$D(ENFLG) D QUIT
"RTN","MPISIST",196,0)
 Q
"RTN","MPISIST",197,0)
 ;
"RTN","MPISIST",198,0)
 ;
"RTN","MPISIST",199,0)
PRG ;Clean out all ID State Information
"RTN","MPISIST",200,0)
 S STATUS="",ICN=0
"RTN","MPISIST",201,0)
 F  S STATUS=$O(^MPIVET("AID",STATUS)) Q:STATUS=""  D
"RTN","MPISIST",202,0)
 .F  S ICN=$O(^MPIVET("AID",STATUS,ICN)) Q:'ICN  D
"RTN","MPISIST",203,0)
 ..K ^MPIVET(ICN,"ID_STATE")
"RTN","MPISIST",204,0)
 K ^MPI(985.1,1,"ID_STATE")
"RTN","MPISIST",205,0)
 K ^MPI(985.1,1,"ID_STATE_SUM")
"RTN","MPISIST",206,0)
 K ^MPIVET("AID")
"RTN","MPISIST",207,0)
 K ^XTMP("MPISIST")
"RTN","MPISIST",208,0)
 K ICN,STATUS
"RTN","MPISIST",209,0)
 Q
"RTN","MPISIST",210,0)
 ;
"RTN","MPISIST",211,0)
 ;
"RTN","MPISIST",212,0)
LEFT ;How many ICNs do not have an ID State assigned?
"RTN","MPISIST",213,0)
 ;Get the last ICN processed from the MPI PARAMETER (#985.1) file.
"RTN","MPISIST",214,0)
 I '$D(^MPIVET("AID")) W !!,"The Set ID State code has not been run." Q
"RTN","MPISIST",215,0)
 S PRAM=$G(^MPI(985.1,1,"ID_STATE"))
"RTN","MPISIST",216,0)
 I 'PRAM W !!,"The Set ID State code has not been run." Q
"RTN","MPISIST",217,0)
 I PRAM S ICN=$P($G(^MPI(985.1,1,"ID_STATE")),"^",3) I 'ICN W !!,"The Set ID State code has not been run." Q
"RTN","MPISIST",218,0)
 I $E($O(^MPIVET(ICN)),1)="A" W !,"All current ICNs have been assigned an ID State." Q
"RTN","MPISIST",219,0)
 ;Count remaining ICNs with no ID State.
"RTN","MPISIST",220,0)
 S CNT=0
"RTN","MPISIST",221,0)
 F  S ICN=$O(^MPIVET(ICN)) Q:'ICN  D
"RTN","MPISIST",222,0)
 .Q:$D(^MPIVET(ICN,"ID_STATE"))  ;ID STATE was previously set.
"RTN","MPISIST",223,0)
 .I '$D(^MPIVET(ICN,"ID_STATE")) S CNT=CNT+1
"RTN","MPISIST",224,0)
 W !!,"There are a total of "_CNT_" ICNs remaining to be assigned an ID State."
"RTN","MPISIST",225,0)
 K CNT,ICN,PRAM Q
"RTN","MPISIST",226,0)
 ;
"RTN","MPISIUT")
0^181^B34741063
"RTN","MPISIUT",1,0)
MPISIUT ;BIR/PTD-Set ID State Utility Routine ;4/6/04
"RTN","MPISIUT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**22,24**;30 Apr 99
"RTN","MPISIUT",3,0)
 ;
"RTN","MPISIUT",4,0)
IDS(ICN) ;API to Return ID State for a Given ICN.
"RTN","MPISIUT",5,0)
 ;ID STATE (#80) and DATE OF ID STATE (#81)
"RTN","MPISIUT",6,0)
 ;in MPI VETERAN/CLIENT (#985) file.
"RTN","MPISIUT",7,0)
 ;Input:
"RTN","MPISIUT",8,0)
 ;ICN - Patient INTEGRATION CONTROL NUMBER
"RTN","MPISIUT",9,0)
 ;
"RTN","MPISIUT",10,0)
 ;   Example: S ICN=1001131312
"RTN","MPISIUT",11,0)
 ;            S RET=$$IDS^MPISIUT(ICN)
"RTN","MPISIUT",12,0)
 ;   RET=D^DEACTIVATED^3040212.094258^Feb 12, 2004@09:42:58
"RTN","MPISIUT",13,0)
 ;
"RTN","MPISIUT",14,0)
 ;Returns:
"RTN","MPISIUT",15,0)
 ;     -1^error message, if no ID State or invalid ICN
"RTN","MPISIUT",16,0)
 ;     or
"RTN","MPISIUT",17,0)
 ;     ID STATE^ID State External^DATE Internal Format^
"RTN","MPISIUT",18,0)
 ;     DATE External Format
"RTN","MPISIUT",19,0)
 ;
"RTN","MPISIUT",20,0)
 N IENS,DIERR,RESULT
"RTN","MPISIUT",21,0)
 I ICN="" S RESULT="-1^Invalid parameter - no ICN passed." Q RESULT
"RTN","MPISIUT",22,0)
 I ICN<1 S RESULT="-1^Invalid ICN format." Q RESULT
"RTN","MPISIUT",23,0)
 I ICN["V" S RESULT="-1^Invalid ICN format." Q RESULT
"RTN","MPISIUT",24,0)
 S ICN=+ICN ;ensure ICN does not contain checksum digit
"RTN","MPISIUT",25,0)
 I '$D(^MPIVET(ICN)) S RESULT="-1^No entry for ICN in MPI VETERAN/CLIENT (#985) file." Q RESULT
"RTN","MPISIUT",26,0)
 I '$D(^MPIVET(ICN,"ID_STATE")) S RESULT="-1^No ID State for ICN in MPI VETERAN/CLIENT (#985) file." Q RESULT
"RTN","MPISIUT",27,0)
 S IENS=ICN_","
"RTN","MPISIUT",28,0)
 D GETS^DIQ(985,IENS_",","80;81","EI","IDST")
"RTN","MPISIUT",29,0)
 I $D(DIERR) S RESULT="-1^GETS^DIQ call failed for ICN." Q RESULT
"RTN","MPISIUT",30,0)
 S RESULT=IDST(985,IENS,80,"I")_"^"_IDST(985,IENS,80,"E")_"^"_IDST(985,IENS,81,"I")_"^"_IDST(985,IENS,81,"E")
"RTN","MPISIUT",31,0)
 K IDST,IENS,DIERR
"RTN","MPISIUT",32,0)
 Q RESULT
"RTN","MPISIUT",33,0)
 ;
"RTN","MPISIUT",34,0)
 ;
"RTN","MPISIUT",35,0)
IDS2(ICN) ;Rapid API to Return ID State for a Given ICN.
"RTN","MPISIUT",36,0)
 ;NOTE: Calling routine is responsible for ensuring that ICN is valid.
"RTN","MPISIUT",37,0)
 ;Preferred call for most situations is IDS (above)
"RTN","MPISIUT",38,0)
 ;
"RTN","MPISIUT",39,0)
 ;Input:
"RTN","MPISIUT",40,0)
 ;ICN - Patient INTEGRATION CONTROL NUMBER
"RTN","MPISIUT",41,0)
 ;
"RTN","MPISIUT",42,0)
 ;      Example: S ICN=1001131312
"RTN","MPISIUT",43,0)
 ;               S RET=$$IDS2^MPISIUT(ICN)
"RTN","MPISIUT",44,0)
 ;
"RTN","MPISIUT",45,0)
 ;Returns:
"RTN","MPISIUT",46,0)
 ;     ID STATE internal value (may be null if no value exists)^
"RTN","MPISIUT",47,0)
 ;
"RTN","MPISIUT",48,0)
 N RESULT
"RTN","MPISIUT",49,0)
 S RESULT=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPISIUT",50,0)
 Q RESULT
"RTN","MPISIUT",51,0)
 ;
"RTN","MPISIUT",52,0)
 ;
"RTN","MPISIUT",53,0)
SETSTATE(ICN,STATE) ;API to SET the ID State for a Given ICN and State.
"RTN","MPISIUT",54,0)
 ;Set ID STATE (#80) and DATE OF ID STATE (#81)
"RTN","MPISIUT",55,0)
 ;in MPI VETERAN/CLIENT (#985) file.
"RTN","MPISIUT",56,0)
 ;Input:
"RTN","MPISIUT",57,0)
 ;ICN - Patient INTEGRATION CONTROL NUMBER
"RTN","MPISIUT",58,0)
 ;STATE - 'D' or 'T' or 'P' - ID STATE
"RTN","MPISIUT",59,0)
 ;
"RTN","MPISIUT",60,0)
 ;      Example: S ICN=1001131312,STATE="D"
"RTN","MPISIUT",61,0)
 ;               S RET=$$SETSTATE^MPISIUT(ICN,STATE)
"RTN","MPISIUT",62,0)
 ;
"RTN","MPISIUT",63,0)
 ;Returns:
"RTN","MPISIUT",64,0)
 ;     -1^error message, if unsuccessful
"RTN","MPISIUT",65,0)
 ;     0 if successful
"RTN","MPISIUT",66,0)
 ;
"RTN","MPISIUT",67,0)
 N DIERR,IDST,IENS,NEWST,RESULT
"RTN","MPISIUT",68,0)
 S RESULT="-1^Unable to set ID STATE information for ICN." ;Initialize
"RTN","MPISIUT",69,0)
 I $G(ICN)="" S RESULT="-1^Invalid parameter - no ICN passed." Q RESULT
"RTN","MPISIUT",70,0)
 I (STATE'="D"),(STATE'="T"),(STATE'="P") Q RESULT
"RTN","MPISIUT",71,0)
 S NEWST=STATE ;Incoming state to which ICN is to be set
"RTN","MPISIUT",72,0)
 ;Set ID STATE (#80) and DATE OF ID STATE (#81)
"RTN","MPISIUT",73,0)
 K FDA S FDA(985,ICN_",",80)=STATE D FILE^DIE("E","FDA","MPISIST")
"RTN","MPISIUT",74,0)
 D NOW^%DTC
"RTN","MPISIUT",75,0)
 K FDA S FDA(985,ICN_",",81)=% D FILE^DIE("E","FDA","MPISIST") K %
"RTN","MPISIUT",76,0)
 ;Confirm that ID STATE was set to the requested state
"RTN","MPISIUT",77,0)
 S IENS=ICN_","
"RTN","MPISIUT",78,0)
 D GETS^DIQ(985,IENS_",","80","I","IDST")
"RTN","MPISIUT",79,0)
 I $D(DIERR) S RESULT="-1^GETS^DIQ call failed for ICN." Q RESULT
"RTN","MPISIUT",80,0)
 I NEWST'=IDST(985,IENS,80,"I") S RESULT="-1^ID STATE change failed for ICN." Q RESULT
"RTN","MPISIUT",81,0)
 I NEWST=IDST(985,IENS,80,"I") S RESULT=0
"RTN","MPISIUT",82,0)
 Q RESULT
"RTN","MPISIUT",83,0)
 ;
"RTN","MPISIUT",84,0)
 ;
"RTN","MPISIUT",85,0)
LOGEXC(EX,ERR) ;API to Log an Exception for a Given Exception # and Error Message.
"RTN","MPISIUT",86,0)
 ;EX - Exception number from CIRN HL7 EXCEPTION TYPE (#991.11) file.
"RTN","MPISIUT",87,0)
 ;ERR - Appropriate error message based on type of error.
"RTN","MPISIUT",88,0)
 ;**24
"RTN","MPISIUT",89,0)
 I '$D(ARR("ICN")) S ARR("ICN")=ICN
"RTN","MPISIUT",90,0)
 I ARR("ICN")="" S ARR("ICN")=ICN
"RTN","MPISIUT",91,0)
 I '$D(HL("ECH")) S HL("ECH")="^~|\&"
"RTN","MPISIUT",92,0)
 I '$D(HL("SFN")) S HL("SFN")="200M"
"RTN","MPISIUT",93,0)
 D ERROR^MPIA08(.ARR,.HL,ERR,EX)
"RTN","MPISIUT",94,0)
 Q
"RTN","MPISIUT",95,0)
 ;
"RTN","MPISIUT",96,0)
 ;
"RTN","MPISIUT",97,0)
VRFY ;Module to verify field values used to determine ID State.
"RTN","MPISIUT",98,0)
 W !!,"This option allows you to validate the results of the assigned ID State.",!,"You can specify the number of records to examine."
"RTN","MPISIUT",99,0)
 W !!,"The information can be displayed for randomly selected ICNs, or",!,"for a selected ID State.  The ID State search begins with the first ICN."
"RTN","MPISIUT",100,0)
 ;
"RTN","MPISIUT",101,0)
 S DIR(0)="S^1:Selected ID State;2:Random ICNs",DIR("A")="Choose the preferred sampling mechanism" D ^DIR K DIR G:$D(DIRUT) VEND
"RTN","MPISIUT",102,0)
 S ANS=Y W !
"RTN","MPISIUT",103,0)
 ;
"RTN","MPISIUT",104,0)
 S DIR(0)="NA^1:1000:0",DIR("A")="Select the number of records you wish to analyze: " D ^DIR K DIR G:$D(DIRUT) VEND
"RTN","MPISIUT",105,0)
 S REQ=Y,$P(LN,"-",81)="",CNT=0
"RTN","MPISIUT",106,0)
 ;
"RTN","MPISIUT",107,0)
 I ANS=2 G VF2
"RTN","MPISIUT",108,0)
 ;
"RTN","MPISIUT",109,0)
VF1 ;Validate for Selected ID State.
"RTN","MPISIUT",110,0)
 W ! S DIR(0)="SA^D:Deactivated;T:Temporary;P:Permanent",DIR("A")="Select the ID State you wish to review: " D ^DIR K DIR G:$D(DIRUT) VEND
"RTN","MPISIUT",111,0)
 S STATUS=Y,STNAM=Y(0),ICN=0
"RTN","MPISIUT",112,0)
 D HDR
"RTN","MPISIUT",113,0)
 F  S ICN=$O(^MPIVET("AID",STATUS,ICN)) Q:ICN=""  Q:CNT=REQ  D PRT
"RTN","MPISIUT",114,0)
 G VEND
"RTN","MPISIUT",115,0)
 ;
"RTN","MPISIUT",116,0)
VF2 ;Validate Random ICNs.
"RTN","MPISIUT",117,0)
 K ^TMP("MPISIUT") N LPCNT,X S LPCNT=0
"RTN","MPISIUT",118,0)
 F X=0:0 D BLDARR Q:LPCNT=REQ
"RTN","MPISIUT",119,0)
 D HDR
"RTN","MPISIUT",120,0)
 S ICN=0
"RTN","MPISIUT",121,0)
 F  S ICN=$O(^TMP("MPISIUT",$J,ICN)) Q:'ICN  D PRT
"RTN","MPISIUT",122,0)
 ;
"RTN","MPISIUT",123,0)
VEND K ANS,CNT,DIRUT,DTOUT,DUOUT,ICN,IDST,IENS,LN,REQ,STATUS,STNAM,X,Y,^TMP("MPISIUT")
"RTN","MPISIUT",124,0)
 Q
"RTN","MPISIUT",125,0)
 ;
"RTN","MPISIUT",126,0)
HDR W @IOF,"Global data for ",$S(ANS=2:"a random sampling of ICNs:",1:"records assigned an ID State of "_STNAM_":"),!,LN
"RTN","MPISIUT",127,0)
 W !,"Global Format for Validation:"
"RTN","MPISIUT",128,0)
 I ANS=2 W !,"^MPIVET(D0,ID_STATE)= (#80) ID STATE [1]^(#81) DATE OF ID STATE [2]^"
"RTN","MPISIUT",129,0)
 W !,"^MPIVET(D0,0)= (#.01) INTEGRATION CONTROL NUMBER [1]^(#1) SURNAME [2]^^^^^^ "
"RTN","MPISIUT",130,0)
 W !,"(#7) DATE OF BIRTH [8]^^^^^(#12) GENDER [13]^(#13) SOCIAL SECURITY NUMBER [14]^"
"RTN","MPISIUT",131,0)
 W !,"^MPIVET(D0,1)= ^(#16) COORDINATING MASTER OF RECORD [2]^",!,LN
"RTN","MPISIUT",132,0)
 Q
"RTN","MPISIUT",133,0)
 ;
"RTN","MPISIUT",134,0)
BLDARR ;Build Array of Random ICNs.
"RTN","MPISIUT",135,0)
 N LIM,PAD,RAN,RICN
"RTN","MPISIUT",136,0)
 S PAD=1000000000
"RTN","MPISIUT",137,0)
 S RAN=$E($RANDOM(+$P(^MPIVETN,"^")),1,7)
"RTN","MPISIUT",138,0)
 ; ^ Change '7' (above) to '8' on the production MPI.
"RTN","MPISIUT",139,0)
 S LIM=10-$L(RAN)
"RTN","MPISIUT",140,0)
 S RICN=$E(PAD,1,LIM)_RAN
"RTN","MPISIUT",141,0)
 Q:'$D(^MPIVET(RICN,0))
"RTN","MPISIUT",142,0)
 Q:'$D(^MPIVET(RICN,"ID_STATE"))
"RTN","MPISIUT",143,0)
 Q:$D(^TMP("MPISIUT",$J,RICN))
"RTN","MPISIUT",144,0)
 S ^TMP("MPISIUT",$J,RICN)=""
"RTN","MPISIUT",145,0)
 S LPCNT=LPCNT+1
"RTN","MPISIUT",146,0)
 Q
"RTN","MPISIUT",147,0)
 ;
"RTN","MPISIUT",148,0)
PRT ;Display Global Data for ICN.
"RTN","MPISIUT",149,0)
 W !!,"Integration Control Number:  ",ICN,?45,"Shared TFs?  ",$S(($$CHECK^MPISUT01(ICN)=0):"NO",1:"YES")
"RTN","MPISIUT",150,0)
 I ANS=2 W !,"ID State Node:  " D
"RTN","MPISIUT",151,0)
 .S IENS=ICN_","
"RTN","MPISIUT",152,0)
 .D GETS^DIQ(985,IENS_",","80;81","E","IDST")
"RTN","MPISIUT",153,0)
 .W IDST(985,IENS,80,"E")_"^"_IDST(985,IENS,81,"E")
"RTN","MPISIUT",154,0)
 W !,"Zero Node:",!,$G(^MPIVET(ICN,0))
"RTN","MPISIUT",155,0)
 W !,"One Node:",!,$G(^MPIVET(ICN,1)) I $G(^MPIVET(ICN,1))="" W "  <NULL>"
"RTN","MPISIUT",156,0)
 S CNT=CNT+1
"RTN","MPISIUT",157,0)
 Q
"RTN","MPISIUT",158,0)
 ;
"RTN","MPISIUT",159,0)
 ;
"RTN","MPISSR1")
0^182^B52388378
"RTN","MPISSR1",1,0)
MPISSR1 ;BIR/CML-Compile Data Validation Data for MPI ;7/9/02
"RTN","MPISSR1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,12,25,31,36**;30 Apr 99
"RTN","MPISSR1",3,0)
 ;
"RTN","MPISSR1",4,0)
BY ;bypass prohibited time
"RTN","MPISSR1",5,0)
 S BYPASS=1
"RTN","MPISSR1",6,0)
 ;
"RTN","MPISSR1",7,0)
EN ;use this entry point for DQ menu option
"RTN","MPISSR1",8,0)
 W !!,"This option provides the following diagnostic statistics:"
"RTN","MPISSR1",9,0)
 W !?3,"1. Total number of unique Patients (ICNs)."
"RTN","MPISSR1",10,0)
 W !?3,"2. Total number of deactivated ICNs."
"RTN","MPISSR1",11,0)
 W !?3,"3. Total number of ICNs missing a CMOR*."
"RTN","MPISSR1",12,0)
 W !?3,"4. Total number of ICNs missing a Treating Facility for the CMOR*."
"RTN","MPISSR1",13,0)
 W !?3,"5. Total number of ICNs with the same SSN*."
"RTN","MPISSR1",14,0)
 W !?3,"6. Total number of ICNs missing an ID State."
"RTN","MPISSR1",15,0)
 W !?3,"7. Total number of duplicate TFs in file 985.5."
"RTN","MPISSR1",16,0)
 W !!?3,"* Only ICNs with an ID State of PERMANENT, TEMPORARY or NULL are counted."
"RTN","MPISSR1",17,0)
 ;
"RTN","MPISSR1",18,0)
 W !!,"The following problems (if found) that were auto-fixed are displayed:"
"RTN","MPISSR1",19,0)
 W !?3,"1. SSN Dup - No ICN found at CMOR and not shared on the MPI. (deactivated)."
"RTN","MPISSR1",20,0)
 ;
"RTN","MPISSR1",21,0)
 W !!,"The following problems (if found) needing manual resolution are displayed:"
"RTN","MPISSR1",22,0)
 W !?3,"1. ICNs on MPI Missing CMOR Assignment."
"RTN","MPISSR1",23,0)
 W !?3,"2. ICNs on MPI with CMOR Missing Treating Facility on MPI."
"RTN","MPISSR1",24,0)
 W !?3,"3. SSN Dup - SSN in Conflict between CMOR and MPI."
"RTN","MPISSR1",25,0)
 W !?3,"4. SSN Dup - ICN in History at CMOR but shared on MPI."
"RTN","MPISSR1",26,0)
 W !?3,"5. SSN Dup - ICN not found at CMOR but shared on MPI."
"RTN","MPISSR1",27,0)
 W !?3,"6. SSN Dup - ICN in History at CMOR and not shared on the MPI."
"RTN","MPISSR1",28,0)
 W !?3,"7. SSN Dup - No ICN found at CMOR and not shared on the MPI."
"RTN","MPISSR1",29,0)
 W !?3,"   (deactivation failed)"
"RTN","MPISSR1",30,0)
 W !?3,"8. ICNs missing an ID State."
"RTN","MPISSR1",31,0)
 ;
"RTN","MPISSR1",32,0)
START ;
"RTN","MPISSR1",33,0)
 I '$D(BYPASS) S BYPASS=0
"RTN","MPISSR1",34,0)
 I $D(^XTMP("MPIS","SR1","@@","COMPILE STARTED"))&'$D(^XTMP("MPIS","SR1","@@","COMPILE STOPPED")) D  G QUIT
"RTN","MPISSR1",35,0)
 .W !!,"This report is currently being compiled!"
"RTN","MPISSR1",36,0)
 ;
"RTN","MPISSR1",37,0)
 I '$D(^XTMP("MPIS","SR1","@@","COMPILE STARTED")) W !!,"No data is currently available." G CHK
"RTN","MPISSR1",38,0)
 ;
"RTN","MPISSR1",39,0)
 S QFLG=0
"RTN","MPISSR1",40,0)
 S PRT=0,LAST=^XTMP("MPIS","SR1","@@","COMPILE STOPPED"),LAST=$$FMTE^XLFDT(LAST)
"RTN","MPISSR1",41,0)
 W !!,"===> NOTE <==="
"RTN","MPISSR1",42,0)
 W !,"This data was last compiled on ",LAST
"RTN","MPISSR1",43,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you just want a reprint of that data"
"RTN","MPISSR1",44,0)
 S DIR("?",1)="Enter:"
"RTN","MPISSR1",45,0)
 S DIR("?",2)=" ""YES"" or <RET> to reprint current data and NOT recompile."
"RTN","MPISSR1",46,0)
 S DIR("?",3)=" ""NO"" to recompile new data (this takes several hours)."
"RTN","MPISSR1",47,0)
 S DIR("?")=" ""^"" to HALT."
"RTN","MPISSR1",48,0)
 D ^DIR K DIR
"RTN","MPISSR1",49,0)
 I Y="^" S QFLG=1 G QUIT
"RTN","MPISSR1",50,0)
 I +Y=1 D ^MPISSR2 G QUIT
"RTN","MPISSR1",51,0)
 ;at this point, user has opted to re-compile
"RTN","MPISSR1",52,0)
CHK ;check to be sure stat report not being run during prime time
"RTN","MPISSR1",53,0)
 I 'BYPASS S QUIT=0 D  I QUIT G QUIT
"RTN","MPISSR1",54,0)
 .D NOW^%DTC
"RTN","MPISSR1",55,0)
 .S TODAY=$$DOW^XLFDT(%) I TODAY="Saturday"!(TODAY="Sunday") S BYPASS=1 Q
"RTN","MPISSR1",56,0)
 .S CHKTIME=$E($P(%,".",2),1,4)
"RTN","MPISSR1",57,0)
 .I CHKTIME>"0700"&(CHKTIME<"1700") S QUIT=1 D
"RTN","MPISSR1",58,0)
 ..W !!,"<< STAT report cannot be compiled between 7:00am and 5:00pm! >>"
"RTN","MPISSR1",59,0)
 ;
"RTN","MPISSR1",60,0)
 W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you sure you want to recompile (this takes several hours)"
"RTN","MPISSR1",61,0)
 S DIR("?",1)="Enter:"
"RTN","MPISSR1",62,0)
 S DIR("?",2)=" ""NO"" or <RET> to reprint current data and NOT recompile."
"RTN","MPISSR1",63,0)
 S DIR("?",3)=" ""YES"" to recompile new data."
"RTN","MPISSR1",64,0)
 S DIR("?")=" ""^"" to HALT."
"RTN","MPISSR1",65,0)
 D ^DIR K DIR
"RTN","MPISSR1",66,0)
 I Y="^" G QUIT
"RTN","MPISSR1",67,0)
 I +Y=0 D ^MPISSR2 G QUIT
"RTN","MPISSR1",68,0)
 W !!,"Recompiling data..."
"RTN","MPISSR1",69,0)
 ;
"RTN","MPISSR1",70,0)
QUE1 ;entry point for queued background job to do LOOP1 & LOOP2
"RTN","MPISSR1",71,0)
 ;prohibit this run on Saturday, Sunday
"RTN","MPISSR1",72,0)
 ;
"RTN","MPISSR1",73,0)
 ;TOTICN=Total number of unique Patients (ICNs)
"RTN","MPISSR1",74,0)
 ;TOTMISPC=Total number of ICNs missing a CMOR
"RTN","MPISSR1",75,0)
 ;TOTMISAF=Total number of ICNs missing a Treating Facility for the CMOR
"RTN","MPISSR1",76,0)
 ;TOTMISID=Total number of ICNs missing an ID State
"RTN","MPISSR1",77,0)
 ;TOTDSSN=Total number of ICNs associated with dup SSNs
"RTN","MPISSR1",78,0)
 ;TOTOLD=Total number of dup SSNs found in file #985.32
"RTN","MPISSR1",79,0)
 ;TOTDUP=Total number of dup TFs found in file #985.5
"RTN","MPISSR1",80,0)
 ;TOTDEAC=Total number of deactivated ICN records
"RTN","MPISSR1",81,0)
 ;
"RTN","MPISSR1",82,0)
 I $D(^XTMP("MPIS","SR1","@@","COMPILE STARTED"))&'$D(^XTMP("MPIS","SR1","@@","COMPILE STOPPED")) G QUIT
"RTN","MPISSR1",83,0)
 ;
"RTN","MPISSR1",84,0)
 I '$D(BYPASS) S QUIT=0 D  I QUIT G QUIT
"RTN","MPISSR1",85,0)
 .S TODAY=$$DOW^XLFDT($$NOW^XLFDT())
"RTN","MPISSR1",86,0)
 .I TODAY="Saturday"!(TODAY="Sunday") S QUIT=1
"RTN","MPISSR1",87,0)
 ;
"RTN","MPISSR1",88,0)
 K ^XTMP("MPIS","SR1"),^XTMP("MPIS","FIXED"),^XTMP("MPIS","MANUAL FIX")
"RTN","MPISSR1",89,0)
 D NOW^%DTC
"RTN","MPISSR1",90,0)
 S ^XTMP("MPIS",0)=%+100_"^"_%_"^MPI/PD Maintenance Data"
"RTN","MPISSR1",91,0)
 S ^XTMP("MPIS","SR1","@@","COMPILE STARTED")=%
"RTN","MPISSR1",92,0)
 ; set stat report start date/time and delete existing data for stop time
"RTN","MPISSR1",93,0)
 K FDA S FDA(985.1,"1,",7)=$E(%,1,12) D FILE^DIE("E","FDA","MPIMSR1")
"RTN","MPISSR1",94,0)
 L +^MPI(985.1,1):10
"RTN","MPISSR1",95,0)
 S DIE="^MPI(985.1,",DA=1,DR="7.1///@" D ^DIE K DIE,DA,DR
"RTN","MPISSR1",96,0)
 L -^MPI(985.1,1)
"RTN","MPISSR1",97,0)
 ;
"RTN","MPISSR1",98,0)
 D LOOP1,LOOP2
"RTN","MPISSR1",99,0)
 G PROC
"RTN","MPISSR1",100,0)
 ;
"RTN","MPISSR1",101,0)
LOOP1 ;Find total ICNs, patients missing a CMOR or TF for CMOR, ICNs missing an ID State
"RTN","MPISSR1",102,0)
 ;look for duplicate TFs
"RTN","MPISSR1",103,0)
 ;
"RTN","MPISSR1",104,0)
 I $E(IOST,1,2)="C-" W !!,"Beginning search of MPI VETERAN/CLIENT file - approx. ",$P(^MPIVET(0),"^",4)," entries."
"RTN","MPISSR1",105,0)
 K ^XTMP("MPIS","SR1","DEACTIVATED")
"RTN","MPISSR1",106,0)
 K ^XTMP("MPIS","SR1","TF DUP")
"RTN","MPISSR1",107,0)
 ;
"RTN","MPISSR1",108,0)
 S (TOTICN,TOTMISPC,TOTMISAF,TOTDEAC,TOTMISID,TOTEEE,TOTDUP)=0
"RTN","MPISSR1",109,0)
 S ICN=0
"RTN","MPISSR1",110,0)
 F  S ICN=$O(^MPIVET(ICN)) Q:'ICN  D
"RTN","MPISSR1",111,0)
 .S TOTICN=TOTICN+1
"RTN","MPISSR1",112,0)
 .I '(TOTICN#100000) S ^XTMP("MPIS","SR1","@@","TOT ICN CNT")=TOTICN I $E(IOST,1,2)="C-" W !,TOTICN
"RTN","MPISSR1",113,0)
 .S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPISSR1",114,0)
 .I IDST="D" S TOTDEAC=TOTDEAC+1 Q
"RTN","MPISSR1",115,0)
 .I IDST="" D
"RTN","MPISSR1",116,0)
 ..S TOTMISID=TOTMISID+1,^XTMP("MPIS","MANUAL FIX",8,ICN)=ICN_" missing an ID State"
"RTN","MPISSR1",117,0)
 .S PC=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPISSR1",118,0)
 .I 'PC D
"RTN","MPISSR1",119,0)
 ..S TOTMISPC=TOTMISPC+1
"RTN","MPISSR1",120,0)
 ..S ^XTMP("MPIS","MANUAL FIX",1,ICN)=ICN_" missing a CMOR"
"RTN","MPISSR1",121,0)
 .;look for TF for CMOR
"RTN","MPISSR1",122,0)
 .I PC I '$D(^MPI(985.5,"AM",ICN,PC)) D
"RTN","MPISSR1",123,0)
 ..S TOTMISAF=TOTMISAF+1
"RTN","MPISSR1",124,0)
 ..S PCNM=$P($$NS^XUAF4(PC),"^")
"RTN","MPISSR1",125,0)
 ..S ^XTMP("MPIS","MANUAL FIX",5,ICN)=ICN_" missing TF for CMOR of "_PCNM
"RTN","MPISSR1",126,0)
 .;check file 985.5
"RTN","MPISSR1",127,0)
 .S TF=0 F  S TF=$O(^MPI(985.5,"AM",ICN,TF)) Q:'TF  D
"RTN","MPISSR1",128,0)
 ..S (IEN,IENCNT)=0
"RTN","MPISSR1",129,0)
 ..F  S IEN=$O(^MPI(985.5,"AM",ICN,TF,IEN)) Q:'IEN  D
"RTN","MPISSR1",130,0)
 ...S IENCNT=IENCNT+1
"RTN","MPISSR1",131,0)
 ...I IENCNT>1 D
"RTN","MPISSR1",132,0)
 ....S TOTDUP=TOTDUP+1
"RTN","MPISSR1",133,0)
 ....S ^XTMP("MPIS","SR1","TF DUP",ICN,IEN)=^MPI(985.5,IEN,0)
"RTN","MPISSR1",134,0)
 ;
"RTN","MPISSR1",135,0)
 S ^XTMP("MPIS","SR1","@@","TOT MISSING PC")=TOTMISPC
"RTN","MPISSR1",136,0)
 S ^XTMP("MPIS","SR1","@@","TOT MISSING AF")=TOTMISAF
"RTN","MPISSR1",137,0)
 S ^XTMP("MPIS","SR1","@@","TOT MISSING IDSTATE")=TOTMISID
"RTN","MPISSR1",138,0)
 S ^XTMP("MPIS","SR1","@@","TOT DEACTIVATED")=TOTDEAC
"RTN","MPISSR1",139,0)
 S ^XTMP("MPIS","SR1","@@","TOT ICN")=TOTICN
"RTN","MPISSR1",140,0)
 S ^XTMP("MPIS","SR1","@@","TOT TF DUP")=TOTDUP
"RTN","MPISSR1",141,0)
 ;
"RTN","MPISSR1",142,0)
 ;check for treating facility dups and auto-clean  ; **36
"RTN","MPISSR1",143,0)
 I ^XTMP("MPIS","SR1","@@","TOT TF DUP")>0 S HIDE=1 D DEL^MPISUT02
"RTN","MPISSR1",144,0)
 Q
"RTN","MPISSR1",145,0)
 ;
"RTN","MPISSR1",146,0)
LOOP2 ;look for dup SSNs
"RTN","MPISSR1",147,0)
 ;
"RTN","MPISSR1",148,0)
 ;TOTDSSN=Total number of ICNs associated with dup SSNs
"RTN","MPISSR1",149,0)
 ;TOTOLD=Total number of dup SSNs found in file #985.32
"RTN","MPISSR1",150,0)
 ;
"RTN","MPISSR1",151,0)
 I $E(IOST,1,2)="C-" W !!,"Beginning search for dup SSNs."
"RTN","MPISSR1",152,0)
 K ^XTMP("MPIS","SR1","SSN DUP")
"RTN","MPISSR1",153,0)
 S (TOTDSSN,TOTOLD,TOT)=0
"RTN","MPISSR1",154,0)
 S SSN=""
"RTN","MPISSR1",155,0)
 F  S SSN=$O(^MPIVET("SSN",SSN)) Q:SSN=""  D
"RTN","MPISSR1",156,0)
 .I $E(IOST,1,2)="C-" S TOT=TOT+1 I '(TOT#100000) W !,TOT
"RTN","MPISSR1",157,0)
 .I $E(SSN,1,5)="00000" Q
"RTN","MPISSR1",158,0)
 .S CNT=0,ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  S CNT=CNT+1 I CNT>1 Q
"RTN","MPISSR1",159,0)
 .I CNT<2 Q
"RTN","MPISSR1",160,0)
 .I $D(^MPI(985.32,"B",SSN)) S TOTOLD=TOTOLD+1 Q
"RTN","MPISSR1",161,0)
 .S CNT=0,ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  I $P($G(^MPIVET(ICN,"ID_STATE")),"^")'="D" S CNT=CNT+1
"RTN","MPISSR1",162,0)
 .I CNT<2 Q
"RTN","MPISSR1",163,0)
 .S ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  D
"RTN","MPISSR1",164,0)
 ..I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" Q
"RTN","MPISSR1",165,0)
 ..S TOTDSSN=TOTDSSN+1
"RTN","MPISSR1",166,0)
 ..S NODE=$G(^MPIVET(ICN,0)),NAME=$P(NODE,"^",2,6),DOB=$P(NODE,"^",8)
"RTN","MPISSR1",167,0)
 ..S CMOR=$P($G(^MPIVET(ICN,1)),"^",2) I CMOR="" S CMOR="UNKNOWN"
"RTN","MPISSR1",168,0)
 ..S ^XTMP("MPIS","SR1","SSN DUP",CNT,SSN,ICN,CMOR)=NAME_"^"_DOB_"^"_SSN
"RTN","MPISSR1",169,0)
 S ^XTMP("MPIS","SR1","@@","TOT SSN DUP")=TOTDSSN
"RTN","MPISSR1",170,0)
 S ^XTMP("MPIS","SR1","@@","TOT SSN DUP OLD")=TOTOLD
"RTN","MPISSR1",171,0)
 Q
"RTN","MPISSR1",172,0)
 ;
"RTN","MPISSR1",173,0)
PROC ;replaces PASS2^MPIMSRU1
"RTN","MPISSR1",174,0)
 D PROC^MPISSRU1
"RTN","MPISSR1",175,0)
 ;
"RTN","MPISSR1",176,0)
DONE ;set xtmp node
"RTN","MPISSR1",177,0)
 I $E(IOST,1,2)="C-" W !!,"DONE"
"RTN","MPISSR1",178,0)
 ;
"RTN","MPISSR1",179,0)
 D NOW^%DTC
"RTN","MPISSR1",180,0)
 S ^XTMP("MPIS","SR1","@@","COMPILE STOPPED")=%
"RTN","MPISSR1",181,0)
 ; set stat report end date/time
"RTN","MPISSR1",182,0)
 K FDA S FDA(985.1,"1,",7.1)=$E(%,1,12) D FILE^DIE("E","FDA","MPIMSR1")
"RTN","MPISSR1",183,0)
 ;
"RTN","MPISSR1",184,0)
 I $E(IOST,1,2)="C-" D ^MPISSR2
"RTN","MPISSR1",185,0)
 ;
"RTN","MPISSR1",186,0)
QUIT ;
"RTN","MPISSR1",187,0)
 K %,AF,AFIEN,AFNAME,AFNM,AFNUM,AFTOT,ARR,BYPASS,CMOR,CNT,DIC,DIR,DOB,GOT,HDT,IDST,ICN,IEN,IENCNT,LAST
"RTN","MPISSR1",188,0)
 K LN1,LN2,NAME,NODE,PC,PCNAME,PCNM,PCTOT,PRT,QFLG,QUIT,SSN,SSNCNT,TODAY,TOT,TOTAF,TOTDUP
"RTN","MPISSR1",189,0)
 K TOTDSSN,TOTEEE,TOTICN,TOTDEAC,TOTMISID,TOTMISAF,TOTMISPC,TOTMISSN,TOTOLD,TOTPC,X,Y,PENDCNT,CBR,CBRCNT
"RTN","MPISSR1",190,0)
 K CHKTIME,TF,DFN,SCREEN,HIDE
"RTN","MPISSR1",191,0)
 Q
"RTN","MPISSR2")
0^183^B70166061
"RTN","MPISSR2",1,0)
MPISSR2 ;BIR/CML-Compile Data Validation Data for MPI (CON'T) ;7/2/02
"RTN","MPISSR2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,12,25,31,36**;30 Apr 99
"RTN","MPISSR2",3,0)
 ;
"RTN","MPISSR2",4,0)
 G PRT
"RTN","MPISSR2",5,0)
 ;
"RTN","MPISSR2",6,0)
EN2 ;entry point for data mgt team
"RTN","MPISSR2",7,0)
 S PFLG=1
"RTN","MPISSR2",8,0)
 I $D(^XTMP("MPIS","SR1","@@","COMPILE STARTED"))&'$D(^XTMP("MPIS","SR1","@@","COMPILE STOPPED")) D  G QUIT
"RTN","MPISSR2",9,0)
 .W !!,"This report is currently being compiled!"
"RTN","MPISSR2",10,0)
 ;
"RTN","MPISSR2",11,0)
DEV ;
"RTN","MPISSR2",12,0)
 S QFLG=0
"RTN","MPISSR2",13,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPISSR2",14,0)
 D EN^XUTMDEVQ("PRT^MPISSR2","MPI - Print MPI Stat Report") I 'POP Q
"RTN","MPISSR2",15,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","MPISSR2",16,0)
 G QUIT
"RTN","MPISSR2",17,0)
 ;
"RTN","MPISSR2",18,0)
PRT ;Print report
"RTN","MPISSR2",19,0)
 S QFLG=0
"RTN","MPISSR2",20,0)
 I '$D(^XTMP("MPIS","SR1")) D  G QUIT
"RTN","MPISSR2",21,0)
 .W !!,"No data is available.",!,"The option ""Background MPI Stat Rpt Compile"" needs to be run first!"
"RTN","MPISSR2",22,0)
 ;
"RTN","MPISSR2",23,0)
 S LAST=^XTMP("MPIS","SR1","@@","COMPILE STOPPED")
"RTN","MPISSR2",24,0)
 S LAST=$$FMTE^XLFDT($E(LAST,1,12))
"RTN","MPISSR2",25,0)
 S $P(LN1,"=",81)="",$P(LN2,"-",81)=""
"RTN","MPISSR2",26,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","MPISSR2",27,0)
 ;calculate compile time
"RTN","MPISSR2",28,0)
 S COMPB=^XTMP("MPIS","SR1","@@","COMPILE STARTED")
"RTN","MPISSR2",29,0)
 S COMPS=^XTMP("MPIS","SR1","@@","COMPILE STOPPED")
"RTN","MPISSR2",30,0)
 S DIFF=($$FMDIFF^XLFDT(COMPS,COMPB,2))/3600
"RTN","MPISSR2",31,0)
 W @IOF
"RTN","MPISSR2",32,0)
 W !!!,"MPI Daily Statistics Report - Printed ",HDT,!,"Date Report Last Compiled: ",LAST,?54,"(Compile Time: ",$J(DIFF,5,2)," hrs)",!,LN1
"RTN","MPISSR2",33,0)
 ;
"RTN","MPISSR2",34,0)
PRT1 W !!,"Total number of unique Patients (ICNs)",?63,":"
"RTN","MPISSR2",35,0)
 I $D(^XTMP("MPIS","SR1","@@","TOT ICN")) D
"RTN","MPISSR2",36,0)
 .W ?65,$J($FN(^XTMP("MPIS","SR1","@@","TOT ICN"),","),12)
"RTN","MPISSR2",37,0)
 .W !!,"Total ICNs missing a CMOR",?63,":"
"RTN","MPISSR2",38,0)
 .W ?65,$J(^XTMP("MPIS","SR1","@@","TOT MISSING PC"),12)
"RTN","MPISSR2",39,0)
 .W !,"Total ICNs missing a TF for CMOR",?63,":"
"RTN","MPISSR2",40,0)
 .W ?65,$J(^XTMP("MPIS","SR1","@@","TOT MISSING AF"),12)
"RTN","MPISSR2",41,0)
 .W !,"Total number of deactivated ICNs",?63,":"
"RTN","MPISSR2",42,0)
 .W ?65,$J($FN(^XTMP("MPIS","SR1","@@","TOT DEACTIVATED"),","),12)
"RTN","MPISSR2",43,0)
 .W !,"Total number of ICNs missing an ID State",?63,":"
"RTN","MPISSR2",44,0)
 .W ?65,$J($FN(^XTMP("MPIS","SR1","@@","TOT MISSING IDSTATE"),","),12)
"RTN","MPISSR2",45,0)
 .W !,"Total number of duplicate TF entries in file 985.5 (fixed)",?63,":"  ; **36
"RTN","MPISSR2",46,0)
 .W ?65,$J($FN(^XTMP("MPIS","SR1","@@","TOT TF DUP"),","),12)
"RTN","MPISSR2",47,0)
 .W !!,LN2
"RTN","MPISSR2",48,0)
 ;
"RTN","MPISSR2",49,0)
PRT2 ;
"RTN","MPISSR2",50,0)
 W !!,"Total number of new duplicated SSNs identified",?63,":"
"RTN","MPISSR2",51,0)
 W ?65,$J(^XTMP("MPIS","SR1","@@","TOT SSN DUP"),12)
"RTN","MPISSR2",52,0)
 ;do breakout of dup SSNs
"RTN","MPISSR2",53,0)
 I ^XTMP("MPIS","SR1","@@","TOT SSN DUP")>0 D
"RTN","MPISSR2",54,0)
 .K ARR
"RTN","MPISSR2",55,0)
 .S NUM=0,SSNCNT=0
"RTN","MPISSR2",56,0)
 .F  S NUM=$O(^XTMP("MPIS","SR1","SSN DUP",NUM)) Q:'NUM  D
"RTN","MPISSR2",57,0)
 ..S SSN="",CNT=0
"RTN","MPISSR2",58,0)
 ..F  S SSN=$O(^XTMP("MPIS","SR1","SSN DUP",NUM,SSN)) Q:SSN=""  D  S ARR(NUM)=CNT
"RTN","MPISSR2",59,0)
 ...S SSNCNT=SSNCNT+1
"RTN","MPISSR2",60,0)
 ...S ICN=0
"RTN","MPISSR2",61,0)
 ...F  S ICN=$O(^XTMP("MPIS","SR1","SSN DUP",NUM,SSN,ICN)) Q:'ICN  D
"RTN","MPISSR2",62,0)
 ....S CNT=CNT+1
"RTN","MPISSR2",63,0)
 .W !?3,"Breakdown:"
"RTN","MPISSR2",64,0)
 .S NUM=0
"RTN","MPISSR2",65,0)
 .F  S NUM=$O(ARR(NUM)) Q:'NUM  D
"RTN","MPISSR2",66,0)
 ..W !?6,"Total ICNs in groups of ",NUM," that share the same SSN",?55,":",?57,$J(ARR(NUM),7)
"RTN","MPISSR2",67,0)
 ;
"RTN","MPISSR2",68,0)
 W !!?3,"Total duplicate SSNs saved to file #985.32",?63,":"
"RTN","MPISSR2",69,0)
 W ?65,$J(^XTMP("MPIS","SR1","@@","TOT SSN DUP SAVED TO 985.32"),12)
"RTN","MPISSR2",70,0)
 ;
"RTN","MPISSR2",71,0)
 W !?3,"Total duplicate SSNs removed from file #985.32",?63,":"
"RTN","MPISSR2",72,0)
 W ?65,$J(^XTMP("MPIS","SR1","@@","TOT SSN DUP REMOVED FROM 985.32"),12)
"RTN","MPISSR2",73,0)
 ;
"RTN","MPISSR2",74,0)
 ;count the total number of SSNs in ^MPI(985.32) that need to be resolved AND which
"RTN","MPISSR2",75,0)
 ;are marked as CANNOT BE RESOLVED
"RTN","MPISSR2",76,0)
 S (CNT,PENDCNT,CBRCNT)=0,IEN=0
"RTN","MPISSR2",77,0)
 F  S IEN=$O(^MPI(985.32,IEN)) Q:'IEN  D
"RTN","MPISSR2",78,0)
 .S CNT=CNT+1
"RTN","MPISSR2",79,0)
 .S CBR=$P(^MPI(985.32,IEN,0),"^",3)
"RTN","MPISSR2",80,0)
 .I CBR=1 S CBRCNT=CBRCNT+1 Q
"RTN","MPISSR2",81,0)
 .S PENDCNT=PENDCNT+1
"RTN","MPISSR2",82,0)
 W !!?3,"Total duplicate SSNs currently identified in file 985.32",?63,":",?65,$J($FN(CNT,","),12)
"RTN","MPISSR2",83,0)
 W !?6,"Total duplicate SSNs pending resolution",?55,":",?57,$J($FN(PENDCNT,","),7)
"RTN","MPISSR2",84,0)
 W !?6,"Total duplicate SSNs marked as CANNOT BE RESOLVED:",?57,$J($FN(CBRCNT,","),7)
"RTN","MPISSR2",85,0)
 ;
"RTN","MPISSR2",86,0)
PRT3 ;print detail of auto-fixes
"RTN","MPISSR2",87,0)
 ; description of ^XTMP("MPIS","FIXED" nodes:
"RTN","MPISSR2",88,0)
 S TYPE(1)="SSN Dup - No ICN found at CMOR (DEACTIVATED):"
"RTN","MPISSR2",89,0)
 ;
"RTN","MPISSR2",90,0)
 D PG G:QFLG QUIT
"RTN","MPISSR2",91,0)
 W !,"Detail of Automatic Fixes:" K ULN S $P(ULN,"=",27)="" W !,ULN
"RTN","MPISSR2",92,0)
 I '$D(^XTMP("MPIS","FIXED")) W !,"None found." G PRT4
"RTN","MPISSR2",93,0)
 S TYP=0 F  S TYP=$O(^XTMP("MPIS","FIXED",TYP)) Q:'TYP  D
"RTN","MPISSR2",94,0)
 .K ULN S $P(ULN,"-",($L(TYPE(TYP))+1))=""
"RTN","MPISSR2",95,0)
 .W !!,TYPE(TYP),!,ULN
"RTN","MPISSR2",96,0)
 .S ICN=0 F  S ICN=$O(^XTMP("MPIS","FIXED",TYP,ICN)) Q:'ICN  W !,^XTMP("MPIS","FIXED",TYP,ICN)
"RTN","MPISSR2",97,0)
 ;
"RTN","MPISSR2",98,0)
PRT4 ;print detail of manual fixes
"RTN","MPISSR2",99,0)
 ; description of ^XTMP("MPIS","MANUAL FIX" nodes:
"RTN","MPISSR2",100,0)
 S TYPE(1)="ICN on MPI Missing CMOR Assignment:"
"RTN","MPISSR2",101,0)
 S TYPE(2)="SSN Dup - SSN in Conflict between CMOR and MPI:"
"RTN","MPISSR2",102,0)
 S TYPE(3)="ICN in History at CMOR but shared on MPI:"
"RTN","MPISSR2",103,0)
 S TYPE(4)="ICN not found at CMOR but shared on MPI:"
"RTN","MPISSR2",104,0)
 S TYPE(5)="CMOR Missing Treating Facility on MPI:"
"RTN","MPISSR2",105,0)
 S TYPE(6)="ICN in History at CMOR and not shared on the MPI:"
"RTN","MPISSR2",106,0)
 S TYPE(7)="No ICN found at CMOR and not shared on the MPI:"
"RTN","MPISSR2",107,0)
 S TYPE(8)="ICN(s) missing an ID State:"
"RTN","MPISSR2",108,0)
 ;
"RTN","MPISSR2",109,0)
 D PG G:QFLG QUIT
"RTN","MPISSR2",110,0)
 W !,"Detail of Data Issues Requiring Manual Resolution:" K ULN S $P(ULN,"=",51)="" W !,ULN
"RTN","MPISSR2",111,0)
 I '$D(^XTMP("MPIS","MANUAL FIX")) G PRT4B
"RTN","MPISSR2",112,0)
 S TYP=0 F  S TYP=$O(^XTMP("MPIS","MANUAL FIX",TYP)) Q:'TYP  D
"RTN","MPISSR2",113,0)
 .K ULN S $P(ULN,"-",($L(TYPE(TYP))+1))=""
"RTN","MPISSR2",114,0)
 .W !!,TYPE(TYP),!,ULN
"RTN","MPISSR2",115,0)
 .S ICN=0 F  S ICN=$O(^XTMP("MPIS","MANUAL FIX",TYP,ICN)) Q:'ICN  W !,^XTMP("MPIS","MANUAL FIX",TYP,ICN)
"RTN","MPISSR2",116,0)
 ;
"RTN","MPISSR2",117,0)
PRT4B ;look for more than 2 ICNs tied to an SSN at a site
"RTN","MPISSR2",118,0)
 K MORARR
"RTN","MPISSR2",119,0)
 S CNT=2 F  S CNT=$O(^XTMP("MPIS","SR1","SSN DUP",CNT)) Q:'CNT  D
"RTN","MPISSR2",120,0)
 .S SSN="" F  S SSN=$O(^XTMP("MPIS","SR1","SSN DUP",CNT,SSN)) Q:SSN=""  D
"RTN","MPISSR2",121,0)
 ..S ICN=0 F  S ICN=$O(^XTMP("MPIS","SR1","SSN DUP",CNT,SSN,ICN)) Q:'ICN  D
"RTN","MPISSR2",122,0)
 ...S SITE=0 F  S SITE=$O(^XTMP("MPIS","SR1","SSN DUP",CNT,SSN,ICN,SITE)) Q:'SITE  D
"RTN","MPISSR2",123,0)
 ....D SET
"RTN","MPISSR2",124,0)
 ....S MORARR(CNT,SSN,ICN,SITE)=NAME
"RTN","MPISSR2",125,0)
 ;
"RTN","MPISSR2",126,0)
 I '$D(MORARR),'$D(^XTMP("MPIS","MANUAL FIX")) W !,"None found." G PRT5
"RTN","MPISSR2",127,0)
 ;
"RTN","MPISSR2",128,0)
 I $D(MORARR) D
"RTN","MPISSR2",129,0)
 .S CNT=0 F  S CNT=$O(MORARR(CNT)) Q:'CNT  D
"RTN","MPISSR2",130,0)
 ..W !!,"Site dups involving ",CNT," ICNs for an SSN:"
"RTN","MPISSR2",131,0)
 ..S SSN="" F  S SSN=$O(MORARR(CNT,SSN)) Q:SSN=""  D
"RTN","MPISSR2",132,0)
 ...W !!?2,"SSN: ",SSN,!?2,"--------------"
"RTN","MPISSR2",133,0)
 ...S ICN=0 F  S ICN=$O(MORARR(CNT,SSN,ICN)) Q:'ICN  D
"RTN","MPISSR2",134,0)
 ....S SITE=$O(MORARR(CNT,SSN,ICN,0)),SITENM=$P($$NS^XUAF4(SITE),"^")
"RTN","MPISSR2",135,0)
 ....W !?2,ICN,"  ",SITENM,?50,MORARR(CNT,SSN,ICN,SITE)
"RTN","MPISSR2",136,0)
 ;
"RTN","MPISSR2",137,0)
PRT5 ;print list of RPC queries were not returned
"RTN","MPISSR2",138,0)
 D PG G:QFLG QUIT
"RTN","MPISSR2",139,0)
 W !,"DUP SSN RPC queries were not returned from the following sites:" K ULN S $P(ULN,"=",64)="" W !,ULN
"RTN","MPISSR2",140,0)
 K RPCARR
"RTN","MPISSR2",141,0)
 S STA=0 F  S STA=$O(^XTMP("MPIS","TOSITE",STA)) Q:'STA  D
"RTN","MPISSR2",142,0)
 .S ICN=0 F  S ICN=$O(^XTMP("MPIS","TOSITE",STA,ICN)) Q:'ICN  D
"RTN","MPISSR2",143,0)
 ..S SSN=$O(^XTMP("MPIS","TOSITE",STA,ICN,""))
"RTN","MPISSR2",144,0)
 ..I $P(^XTMP("MPIS","TOSITE",STA,ICN,SSN),"^")="S" S RPCARR(STA,SSN,ICN)="S"
"RTN","MPISSR2",145,0)
 ..I $P(^XTMP("MPIS","TOSITE",STA,ICN,SSN),"^")="" S RPCARR(STA,SSN,ICN)="NS"
"RTN","MPISSR2",146,0)
 ;
"RTN","MPISSR2",147,0)
 I '$D(RPCARR) W !,"None found." G PRT6
"RTN","MPISSR2",148,0)
 S STA=0 F  S STA=$O(RPCARR(STA)) Q:'STA  D
"RTN","MPISSR2",149,0)
 .S X=STA,DIC=4,DIC(0)="M" D ^DIC K DIC Q:Y<0  S STANM=$P(Y,"^",2)
"RTN","MPISSR2",150,0)
 .W !!,STANM,":"
"RTN","MPISSR2",151,0)
 .S SSN="" F  S SSN=$O(RPCARR(STA,SSN)) Q:SSN=""  D
"RTN","MPISSR2",152,0)
 ..S ICN=0 F  S ICN=$O(RPCARR(STA,SSN,ICN)) Q:'ICN  D
"RTN","MPISSR2",153,0)
 ...I RPCARR(STA,SSN,ICN)="S" W !,"   sent SSN: ",SSN," - ICN: ",ICN
"RTN","MPISSR2",154,0)
 ...I RPCARR(STA,SSN,ICN)="NS" W !,"   SSN: ",SSN," - ICN: ",ICN," not sent."
"RTN","MPISSR2",155,0)
 ;
"RTN","MPISSR2",156,0)
PRT6 ;print list of data in ^XTMP("MPIS","SR1","SSN DUP"  (replaces ^TAGSTAT call); **36
"RTN","MPISSR2",157,0)
 D PG G:QFLG QUIT
"RTN","MPISSR2",158,0)
 W !,"Breakdown of new SSN duplicates:"
"RTN","MPISSR2",159,0)
 W !,"(Note: ** marks those with DOB differences)"
"RTN","MPISSR2",160,0)
 S TOT=0
"RTN","MPISSR2",161,0)
 S CNT=0 F  S CNT=$O(^XTMP("MPIS","SR1","SSN DUP",CNT)) Q:'CNT  D
"RTN","MPISSR2",162,0)
 .W !!,"Dup Grouping: ",CNT
"RTN","MPISSR2",163,0)
 .W !!,"ICN          CMOR             PATIENT NAME                   DOB",!,LN1
"RTN","MPISSR2",164,0)
 .S SSN="" F  S SSN=$O(^XTMP("MPIS","SR1","SSN DUP",CNT,SSN)) Q:SSN=""  D
"RTN","MPISSR2",165,0)
 ..W !!,"SSN: ",SSN
"RTN","MPISSR2",166,0)
 ..K FSTDOB,FSTSITE S TOT=TOT+1
"RTN","MPISSR2",167,0)
 ..S ICN=0 F  S ICN=$O(^XTMP("MPIS","SR1","SSN DUP",CNT,SSN,ICN)) Q:'ICN  D
"RTN","MPISSR2",168,0)
 ...S SITE=$O(^XTMP("MPIS","SR1","SSN DUP",CNT,SSN,ICN,0))
"RTN","MPISSR2",169,0)
 ...S SITENM=$P(^DIC(4,SITE,0),"^"),SITENM=SITENM_"            ",SITENM=$E(SITENM,1,15)
"RTN","MPISSR2",170,0)
 ...S NODE=^XTMP("MPIS","SR1","SSN DUP",CNT,SSN,ICN,SITE)
"RTN","MPISSR2",171,0)
 ...S LNM=$P(NODE,"^"),FNM=$P(NODE,"^",2),MNM=$P(NODE,"^",3),PRE=$P(NODE,"^",4),SUF=$P(NODE,"^",5)
"RTN","MPISSR2",172,0)
 ...S NAME=LNM_","_FNM_" "_MNM
"RTN","MPISSR2",173,0)
 ...I PRE]"" S NAME=PRE_" "_NAME
"RTN","MPISSR2",174,0)
 ...I SUF]"" S NAME=NAME_" "_SUF
"RTN","MPISSR2",175,0)
 ...S DOB=$P(NODE,"^",6),GOT=0,GOTS=0
"RTN","MPISSR2",176,0)
 ...I '$D(FSTDOB) S FSTDOB=DOB
"RTN","MPISSR2",177,0)
 ...I $D(FSTSITE),SITE=FSTSITE S GOTS=1
"RTN","MPISSR2",178,0)
 ...I '$D(FSTSITE) S FSTSITE=SITE
"RTN","MPISSR2",179,0)
 ...I DOB'=FSTDOB S GOT=1
"RTN","MPISSR2",180,0)
 ...I DOB]"" S DOB=$$FMTE^XLFDT(DOB)
"RTN","MPISSR2",181,0)
 ...W !
"RTN","MPISSR2",182,0)
 ...I GOT W "**"
"RTN","MPISSR2",183,0)
 ...W ICN,?13,SITENM,?30,NAME,?61,DOB
"RTN","MPISSR2",184,0)
 ...I GOTS W !,"<<<<SAME SITE>>>>"
"RTN","MPISSR2",185,0)
 W !!,TOT," total dup groups."
"RTN","MPISSR2",186,0)
 ;
"RTN","MPISSR2",187,0)
QUIT ;
"RTN","MPISSR2",188,0)
 I 'QFLG D
"RTN","MPISSR2",189,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPISSR2",190,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","MPISSR2",191,0)
 K PFLG,%,ARR,CNT,COMPB,COMPS,DIFF,HDT,ICN,IEN,JJ,LAST,LN1,LN2,NUM,QFLG,RPCARR,SS,SSN,SSNCNT,STA,STANM,TYP,TYPE,ULN,X,Y
"RTN","MPISSR2",192,0)
 K CBR,CBRCNT,PEND,ARR,PENDCNT,MORARR,SITE,SITENM,NODE,LNAME,FNAME,MNAME,SUF,NAME
"RTN","MPISSR2",193,0)
 K CNT,ICN,NODE,NAME,DOB,SOC,GOT,FSTDOB,FSTSITE,GOTS,TOT,LNM,FNM,MNM,PRE,SUF  ; **36
"RTN","MPISSR2",194,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPISSR2",195,0)
 Q
"RTN","MPISSR2",196,0)
 ;
"RTN","MPISSR2",197,0)
PG ;scroll stops
"RTN","MPISSR2",198,0)
 S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPISSR2",199,0)
 S DIR(0)="E" D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPISSR2",200,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","MPISSR2",201,0)
 I $E(IOST,1,2)'="C-" W !!
"RTN","MPISSR2",202,0)
 Q
"RTN","MPISSR2",203,0)
 ;
"RTN","MPISSR2",204,0)
SET ;set patient name
"RTN","MPISSR2",205,0)
 S NODE=^XTMP("MPIS","SR1","SSN DUP",CNT,SSN,ICN,SITE)
"RTN","MPISSR2",206,0)
 S LNAME=$P(NODE,"^"),FNAME=$P(NODE,"^",2),MNAME=$P(NODE,"^",3),SUF=$P(NODE,"^",5)
"RTN","MPISSR2",207,0)
 S NAME=LNAME_","_FNAME_" "_MNAME_" "_SUF
"RTN","MPISSR2",208,0)
 Q
"RTN","MPISSRU1")
0^184^B34913615
"RTN","MPISSRU1",1,0)
MPISSRU1 ;BIR/CML-Utility Calls for DUP SSN Problem on MPI ;9/11/02 
"RTN","MPISSRU1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,12,25,31**;30 Apr 99
"RTN","MPISSRU1",3,0)
 ;
"RTN","MPISSRU1",4,0)
 ;Reference to EN1^XWB2HL7 supported by IA #3144
"RTN","MPISSRU1",5,0)
 ;Reference to RTNDATA^XWBDRPC supported by IA #3149
"RTN","MPISSRU1",6,0)
 ;
"RTN","MPISSRU1",7,0)
PROC ;search for instances of multiple ICNs existing for a single SSN at a single site.
"RTN","MPISSRU1",8,0)
 K ^XTMP("MPIS","TOSITE")
"RTN","MPISSRU1",9,0)
 S CNT=0,SSN=""
"RTN","MPISSRU1",10,0)
 F  S SSN=$O(^XTMP("MPIS","SR1","SSN DUP",2,SSN)) Q:SSN=""  D
"RTN","MPISSRU1",11,0)
 .K SITEARR
"RTN","MPISSRU1",12,0)
 .S ICN=0 F  S ICN=$O(^XTMP("MPIS","SR1","SSN DUP",2,SSN,ICN)) Q:'ICN  D
"RTN","MPISSRU1",13,0)
 ..S SITE=$O(^XTMP("MPIS","SR1","SSN DUP",2,SSN,ICN,0))
"RTN","MPISSRU1",14,0)
 ..I SITE="UNKNOWN" Q
"RTN","MPISSRU1",15,0)
 ..I '$D(SITEARR(SITE)) S SITEARR(SITE)="" Q
"RTN","MPISSRU1",16,0)
 ..I $D(SITEARR(SITE)) S STA=$P($$NS^XUAF4(SITE),"^",2) D
"RTN","MPISSRU1",17,0)
 ...S ICN2=0 F  S ICN2=$O(^XTMP("MPIS","SR1","SSN DUP",2,SSN,ICN2)) Q:'ICN2  S ^XTMP("MPIS","TOSITE",STA,ICN2,SSN)=""
"RTN","MPISSRU1",18,0)
 ;
"RTN","MPISSRU1",19,0)
 ;if no instances are found, save dup SSNs into file #985.32
"RTN","MPISSRU1",20,0)
 I '$D(^XTMP("MPIS","TOSITE")) D SAVE G QUIT
"RTN","MPISSRU1",21,0)
 ;
"RTN","MPISSRU1",22,0)
 ;if instances are found, send RPC queries to sites
"RTN","MPISSRU1",23,0)
 I $E(IOST,1,2)="C-" W !!,"Sending RPC queries to sites for DUP SSNs..."
"RTN","MPISSRU1",24,0)
 S STA=0 F  S STA=$O(^XTMP("MPIS","TOSITE",STA)) Q:'STA  D
"RTN","MPISSRU1",25,0)
 .S CNT=0,ARRCNT=1
"RTN","MPISSRU1",26,0)
 .S ICN=0 F  S ICN=$O(^XTMP("MPIS","TOSITE",STA,ICN)) Q:'ICN  D
"RTN","MPISSRU1",27,0)
 ..S SSN="" F  S SSN=$O(^XTMP("MPIS","TOSITE",STA,ICN,SSN)) Q:SSN=""  D
"RTN","MPISSRU1",28,0)
 ...S CNT=CNT+1
"RTN","MPISSRU1",29,0)
 ...I CNT>6 S CNT=1,ARRCNT=ARRCNT+1
"RTN","MPISSRU1",30,0)
 ...I CNT=1 S SNDARR(STA,ARRCNT)=STA_";"_ICN_";"_SSN Q
"RTN","MPISSRU1",31,0)
 ...S SNDARR(STA,ARRCNT)=SNDARR(STA,ARRCNT)_"^"_STA_";"_ICN_";"_SSN
"RTN","MPISSRU1",32,0)
 ;
"RTN","MPISSRU1",33,0)
SEND ;send RPC queries and set ^XTMP("MPIS","SNDARR"
"RTN","MPISSRU1",34,0)
 Q:'$D(SNDARR)
"RTN","MPISSRU1",35,0)
 K ^XTMP("MPIS","SNDARR")
"RTN","MPISSRU1",36,0)
 S STA=0 F  S STA=$O(SNDARR(STA)) Q:'STA  D
"RTN","MPISSRU1",37,0)
 .S CNT=0 F  S CNT=$O(SNDARR(STA,CNT)) Q:'CNT  D
"RTN","MPISSRU1",38,0)
 ..S SEND=SNDARR(STA,CNT)
"RTN","MPISSRU1",39,0)
 ..D EN1^XWB2HL7(.RETURN,STA,"MPIF SSN DUPS",1,SEND)
"RTN","MPISSRU1",40,0)
 ..S ^XTMP("MPIS","SNDARR",STA,CNT)=SEND_"@"_RETURN(0)
"RTN","MPISSRU1",41,0)
 ..;parse out SNDARR to set XTMP nodes
"RTN","MPISSRU1",42,0)
 ..K SET F QQ=1:1:$L(SNDARR(STA,CNT),"^") S SET(QQ)=$P(SNDARR(STA,CNT),"^",QQ)
"RTN","MPISSRU1",43,0)
 ..S QQ=0 F  S QQ=$O(SET(QQ)) Q:'QQ  D
"RTN","MPISSRU1",44,0)
 ...S STA=$P(SET(QQ),";"),ICN=$P(SET(QQ),";",2),SSN=$P(SET(QQ),";",3)
"RTN","MPISSRU1",45,0)
 ...I +RETURN(0)=-1 S ^XTMP("MPIS","TOSITE",STA,ICN,SSN)="S^ERROR SENDING RPC" Q
"RTN","MPISSRU1",46,0)
 ...S ^XTMP("MPIS","TOSITE",STA,ICN,SSN)="S^"_RETURN(0)
"RTN","MPISSRU1",47,0)
 ;
"RTN","MPISSRU1",48,0)
PULL ;wait 10 minutes and pull data back
"RTN","MPISSRU1",49,0)
 I $E(IOST,1,2)="C-" W !!,"Retrieving RPC queries..."
"RTN","MPISSRU1",50,0)
 H 600
"RTN","MPISSRU1",51,0)
 S STA=0 F  S STA=$O(^XTMP("MPIS","SNDARR",STA)) Q:'STA  D
"RTN","MPISSRU1",52,0)
 .S CNT=0 F  S CNT=$O(^XTMP("MPIS","SNDARR",STA,CNT)) Q:'CNT  D
"RTN","MPISSRU1",53,0)
 ..S NODE=^XTMP("MPIS","SNDARR",STA,CNT),RETURN(0)=$P(NODE,"@",2),PARSE=$P(NODE,"@")
"RTN","MPISSRU1",54,0)
 ..I +RETURN(0)=-1 Q
"RTN","MPISSRU1",55,0)
 ..D RTNDATA^XWBDRPC(.RET,RETURN(0))
"RTN","MPISSRU1",56,0)
 ..;parse out RET(0) to set XTMP nodes
"RTN","MPISSRU1",57,0)
 ..I RET'=""!(+RET(0)=-1)!(+RET(0)=0) Q
"RTN","MPISSRU1",58,0)
 ..K SET F QQ=1:1:($L(RET(0),"^")-1) S SET(QQ)=$P(RET(0),"^",QQ)
"RTN","MPISSRU1",59,0)
 ..S QQ=0 F  S QQ=$O(SET(QQ)) Q:'QQ  D
"RTN","MPISSRU1",60,0)
 ...S STA=$P(SET(QQ),";"),ICN=$P(SET(QQ),";",2),SSN=$P(SET(QQ),";",3),RESULT=$P(SET(QQ),";",4)
"RTN","MPISSRU1",61,0)
 ...I +RETURN(0)=-1 S ^XTMP("MPIS","TOSITE",STA,ICN,SSN)="R^ERROR RECEIVED FROM RPC" Q
"RTN","MPISSRU1",62,0)
 ...S ^XTMP("MPIS","TOSITE",STA,ICN,SSN)="R^"_RESULT
"RTN","MPISSRU1",63,0)
 ;
"RTN","MPISSRU1",64,0)
RESULT ;process ^XTMP("MPIS","TOSITE" results
"RTN","MPISSRU1",65,0)
 ;Result Code (1=ICN does not exist, 2=ICN does exist, 3=SSN Conflict, 4=ICN in History)
"RTN","MPISSRU1",66,0)
 ;    If Result Type=1 (ICN does not exist): kill ^XTMP node and deactivate ICN.
"RTN","MPISSRU1",67,0)
 ;    If Result Type=2 (ICN does exist):  kill ^XTMP node
"RTN","MPISSRU1",68,0)
 ;    If Result Type=3 (SSN conflict): check to see if SSN edit has made it to the MPI
"RTN","MPISSRU1",69,0)
 ;        if it has, kill ^XTMP node, QUIT
"RTN","MPISSRU1",70,0)
 ;        if it hasn't, leave XTMP for display on stat report and manual resolution.
"RTN","MPISSRU1",71,0)
 ;            ^XTMP node will  remain but will be killed the following day when the compile runs.
"RTN","MPISSRU1",72,0)
 ;    If Result Type=4 (ICN in History): leave XTMP for display on stat report and manual resolution.
"RTN","MPISSRU1",73,0)
 ;
"RTN","MPISSRU1",74,0)
 ; description of ^XTMP("MPIS","FIXED" nodes:
"RTN","MPISSRU1",75,0)
 ;   1 = SSN Dup - No ICN found at CMOR (DEACTIVATED)
"RTN","MPISSRU1",76,0)
 ;
"RTN","MPISSRU1",77,0)
 ; description of ^XTMP("MPIS","MANUAL FIX" nodes:
"RTN","MPISSRU1",78,0)
 ;   1 = ICN on MPI Missing CMOR Assignment
"RTN","MPISSRU1",79,0)
 ;   2 = SSN Dup - SSN in Conflict between CMOR and MPI
"RTN","MPISSRU1",80,0)
 ;   3 = SSN Dup - ICN in History at CMOR but shared on MPI
"RTN","MPISSRU1",81,0)
 ;   4 = SSN Dup - ICN not found at CMOR but shared on MPI
"RTN","MPISSRU1",82,0)
 ;   5 = CMOR Missing Associated Facility on MPI
"RTN","MPISSRU1",83,0)
 ;   6 = SSN Dup - ICN in History at CMOR but not as a primary ICN and not shared on the MPI
"RTN","MPISSRU1",84,0)
 ;   7 = SSN Dup - No ICN found at CMOR and not shared on the MPI (Deactivation failed)
"RTN","MPISSRU1",85,0)
 ;   8 = Missing ID State
"RTN","MPISSRU1",86,0)
 ;
"RTN","MPISSRU1",87,0)
 S STA=0 F  S STA=$O(^XTMP("MPIS","TOSITE",STA)) Q:'STA  D
"RTN","MPISSRU1",88,0)
 .S X=STA,DIC=4,DIC(0)="M" D ^DIC K DIC Q:Y<0  S STANM=$E($P(Y,"^",2),1,25)
"RTN","MPISSRU1",89,0)
 .S ICN=0 F  S ICN=$O(^XTMP("MPIS","TOSITE",STA,ICN)) Q:'ICN  D
"RTN","MPISSRU1",90,0)
 ..S SSN="" F  S SSN=$O(^XTMP("MPIS","TOSITE",STA,ICN,SSN)) Q:SSN=""  D
"RTN","MPISSRU1",91,0)
 ...S NODE=^XTMP("MPIS","TOSITE",STA,ICN,SSN) Q:NODE["ERROR"
"RTN","MPISSRU1",92,0)
 ...S STATUS=$P(NODE,"^") Q:STATUS="S"
"RTN","MPISSRU1",93,0)
 ...S RESULT=$P(NODE,"^",2)
"RTN","MPISSRU1",94,0)
 ...;Result Type=1 (ICN does not exist)
"RTN","MPISSRU1",95,0)
 ...I RESULT=1 D  Q
"RTN","MPISSRU1",96,0)
 ....I $$CHECK^MPISUT01(ICN)=1 D  Q
"RTN","MPISSRU1",97,0)
 .....S ^XTMP("MPIS","MANUAL FIX",4,ICN)=ICN_" (SSN: "_SSN_") not found in "_STANM
"RTN","MPISSRU1",98,0)
 ....S IDCHNG=$$DEACT^MPIUTL3(ICN,2)
"RTN","MPISSRU1",99,0)
 ....I +IDCHNG=0 D
"RTN","MPISSRU1",100,0)
 .....K ^XTMP("MPIS","TOSITE",STA,ICN,SSN)
"RTN","MPISSRU1",101,0)
 .....S ^XTMP("MPIS","FIXED",1,ICN)=ICN_" (SSN: "_SSN_") not found in "_STANM_" - Deactivated."
"RTN","MPISSRU1",102,0)
 ....I +IDCHNG=-1 D
"RTN","MPISSRU1",103,0)
 .....S ^XTMP("MPIS","MANUAL FIX",7,ICN)=ICN_" (SSN: "_SSN_") not found in "_STANM
"RTN","MPISSRU1",104,0)
 ...;Result Type=2 (ICN does exist)
"RTN","MPISSRU1",105,0)
 ...I RESULT=2 K ^XTMP("MPIS","TOSITE",STA,ICN,SSN) Q
"RTN","MPISSRU1",106,0)
 ...;Result Type=3 (SSN conflict)
"RTN","MPISSRU1",107,0)
 ...I RESULT=3 D  Q
"RTN","MPISSRU1",108,0)
 ....S MPISSN=$P($G(^MPIVET(ICN,0)),"^",14)
"RTN","MPISSRU1",109,0)
 ....I MPISSN'=SSN K ^XTMP("MPIS","TOSITE",STA,ICN,SSN)
"RTN","MPISSRU1",110,0)
 ....I MPISSN=SSN S ^XTMP("MPIS","MANUAL FIX",2,ICN)=ICN_" (SSN: "_SSN_") in SSN conflict with "_STANM
"RTN","MPISSRU1",111,0)
 ...;Result Type=4 (ICN in History)
"RTN","MPISSRU1",112,0)
 ...I RESULT=4 D
"RTN","MPISSRU1",113,0)
 ....I $D(ERR) S ^XTMP("MPIS","MANUAL FIX",3,ICN)=ERR Q
"RTN","MPISSRU1",114,0)
 ....S ^XTMP("MPIS","MANUAL FIX",6,ICN)=ICN_" (SSN: "_SSN_") in History in "_STANM
"RTN","MPISSRU1",115,0)
 ;
"RTN","MPISSRU1",116,0)
DONE ;After processing is completed, save dup SSNs
"RTN","MPISSRU1",117,0)
 D SAVE
"RTN","MPISSRU1",118,0)
 ;
"RTN","MPISSRU1",119,0)
QUIT ;
"RTN","MPISSRU1",120,0)
 K ARRCNT,CASEIEN,CHK,CNT,DA,DELCNT,DIC,DIK,ERR,GRP,ICN,ICN2,MPISSN,NODE,NOTE,PARSE
"RTN","MPISSRU1",121,0)
 K QQ,RESULT,RET,RETURN,SEND,SET,SITE,SITEARR,SNDARR,SSN,SSNARR,STA,STANM,STATUS,X,Y
"RTN","MPISSRU1",122,0)
 K PENDCNT,CBRCNT,IEN,CBR,TOTICN,TOTDACT,DINUM,IENS,FDA,MPIM,TODAY,IDCHNG
"RTN","MPISSRU1",123,0)
 Q
"RTN","MPISSRU1",124,0)
 ;
"RTN","MPISSRU1",125,0)
SAVE ;save new SSN dups into file ^MPI(985.32
"RTN","MPISSRU1",126,0)
 ;example:
"RTN","MPISSRU1",127,0)
 ;^XTMP("MPIS","SR1","SSN DUP",2,"064622675",1000788431,57) = PERALTA^JOSE^^^^2610806^064622675
"RTN","MPISSRU1",128,0)
 ;DO NOT save any SSNs remaining in ^XTMP("MPIS","TOSITE",STA,ICN,SSN)
"RTN","MPISSRU1",129,0)
 ;
"RTN","MPISSRU1",130,0)
 ;create array of SSNs remaining in ^XTMP("MPIS","TOSITE",STA,ICN,SSN)
"RTN","MPISSRU1",131,0)
 I $E(IOST,1,2)="C-" W !!,"Saving DUP SSNs to file 985.32..."
"RTN","MPISSRU1",132,0)
 K SSNARR
"RTN","MPISSRU1",133,0)
 S STA=0 F  S STA=$O(^XTMP("MPIS","TOSITE",STA)) Q:'STA  D
"RTN","MPISSRU1",134,0)
 .S ICN=0 F  S ICN=$O(^XTMP("MPIS","TOSITE",STA,ICN)) Q:'ICN  D
"RTN","MPISSRU1",135,0)
 ..S SSN="" F  S SSN=$O(^XTMP("MPIS","TOSITE",STA,ICN,SSN)) Q:SSN=""  S SSNARR(SSN)=""
"RTN","MPISSRU1",136,0)
 ;
"RTN","MPISSRU1",137,0)
 S (CNT,GRP)=0
"RTN","MPISSRU1",138,0)
 F  S GRP=$O(^XTMP("MPIS","SR1","SSN DUP",GRP)) Q:'GRP  D
"RTN","MPISSRU1",139,0)
 .S SSN="" F  S SSN=$O(^XTMP("MPIS","SR1","SSN DUP",GRP,SSN)) Q:SSN=""  I '$D(^MPI(985.32,"B",SSN)) D
"RTN","MPISSRU1",140,0)
 ..I $D(SSNARR(SSN)) Q
"RTN","MPISSRU1",141,0)
 ..S DIC="^MPI(985.32,",X=SSN,DIC(0)="LZ"
"RTN","MPISSRU1",142,0)
 ..D FILE^DICN
"RTN","MPISSRU1",143,0)
 ..I $D(^MPI(985.32,"B",SSN)) S CNT=CNT+1
"RTN","MPISSRU1",144,0)
 S ^XTMP("MPIS","SR1","@@","TOT SSN DUP SAVED TO 985.32")=CNT,ADDCNT=CNT
"RTN","MPISSRU1",145,0)
 ;
"RTN","MPISSRU1",146,0)
 D CHKDUP^MPISUT01
"RTN","MPISSRU1",147,0)
 ;
"RTN","MPISSRU1",148,0)
 K CNT,GRP,IEN,SSN,DIC,X
"RTN","MPISSRU1",149,0)
 K TOTRES,TOTADD,ADD,RES,IENS,DAILY,FIRST,LAST
"RTN","MPISSRU1",150,0)
 ;
"RTN","MPISSRU1",151,0)
 ;if this is Wednesday, save data and send e-mail
"RTN","MPISSRU1",152,0)
 S TODAY=$$DOW^XLFDT($$NOW^XLFDT()) I TODAY="Wednesday" D FILE^MPISUT01
"RTN","MPISSRU1",153,0)
 ;
"RTN","MPISSRU1",154,0)
 K CNT,GRP,IEN,SSN,DIC,X
"RTN","MPISSRU1",155,0)
 K TOTRES,TOTADD,ADD,RES,IENS,DAILY,FIRST,LAST,ADDCNT,DELCNT,OLDADD,OLDDEL
"RTN","MPISSRU1",156,0)
 Q
"RTN","MPISTF1")
0^185^B65628726
"RTN","MPISTF1",1,0)
MPISTF1 ;BIR/CML-Compile Data Validation Data for MPI, Check of file 985.5;
"RTN","MPISTF1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**31,36**;30 Apr 99
"RTN","MPISTF1",3,0)
 ;
"RTN","MPISTF1",4,0)
BY ;bypass prohibited time
"RTN","MPISTF1",5,0)
 S BYPASS=1
"RTN","MPISTF1",6,0)
 ;
"RTN","MPISTF1",7,0)
EN ;use this entry point for DQ menu option
"RTN","MPISTF1",8,0)
 W !!,"This option provides the following diagnostic statistics:"
"RTN","MPISTF1",9,0)
 W !?3,"1. Total number of entries in file 985.5 without a DFN."
"RTN","MPISTF1",10,0)
 W !?3,"   (FHIE, Station 200, entries are not checked.)"
"RTN","MPISTF1",11,0)
 W !?3,"2. Total number of Temporary ICNs that are shared (HDR issue)."
"RTN","MPISTF1",12,0)
 W !?3,"3. Total number of STA#/DFN duplicates found in file 985.5."  ; **36
"RTN","MPISTF1",13,0)
 ;
"RTN","MPISTF1",14,0)
START ;
"RTN","MPISTF1",15,0)
 S QFLG=0
"RTN","MPISTF1",16,0)
 I '$D(BYPASS) S BYPASS=0
"RTN","MPISTF1",17,0)
 I $D(^XTMP("MPIS","TF1","@@","COMPILE STARTED"))&'$D(^XTMP("MPIS","TF1","@@","COMPILE STOPPED")) D  G QUIT
"RTN","MPISTF1",18,0)
 .W !!,"This report is currently being compiled!"
"RTN","MPISTF1",19,0)
 ;
"RTN","MPISTF1",20,0)
 I '$D(^XTMP("MPIS","TF1","@@","COMPILE STARTED")) W !!,"No data is currently available." G CHK
"RTN","MPISTF1",21,0)
 ;
"RTN","MPISTF1",22,0)
 S PRT=0,LAST=^XTMP("MPIS","TF1","@@","COMPILE STOPPED"),LAST=$$FMTE^XLFDT(LAST)
"RTN","MPISTF1",23,0)
 W !!,"===> NOTE <==="
"RTN","MPISTF1",24,0)
 W !,"This data was last compiled on ",LAST
"RTN","MPISTF1",25,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you just want a reprint of that data"
"RTN","MPISTF1",26,0)
 S DIR("?",1)="Enter:"
"RTN","MPISTF1",27,0)
 S DIR("?",2)=" ""YES"" or <RET> to reprint current data and NOT recompile."
"RTN","MPISTF1",28,0)
 S DIR("?",3)=" ""NO"" to recompile new data (this takes several hours)."
"RTN","MPISTF1",29,0)
 S DIR("?")=" ""^"" to HALT."
"RTN","MPISTF1",30,0)
 D ^DIR K DIR
"RTN","MPISTF1",31,0)
 I Y="^" S QFLG=1 G QUIT
"RTN","MPISTF1",32,0)
 I +Y=1 D PRINT G QUIT
"RTN","MPISTF1",33,0)
 ;
"RTN","MPISTF1",34,0)
 ;at this point, user has opted to re-compile
"RTN","MPISTF1",35,0)
CHK ;check to be sure stat report not being run during prime time
"RTN","MPISTF1",36,0)
 I 'BYPASS S QUIT=0 D  I QUIT G QUIT
"RTN","MPISTF1",37,0)
 .D NOW^%DTC
"RTN","MPISTF1",38,0)
 .S TODAY=$$DOW^XLFDT(%) I TODAY="Saturday"!(TODAY="Sunday") S BYPASS=1 Q
"RTN","MPISTF1",39,0)
 .S CHKTIME=$E($P(%,".",2),1,4)
"RTN","MPISTF1",40,0)
 .I CHKTIME>"0700"&(CHKTIME<"1700") S QUIT=1 D
"RTN","MPISTF1",41,0)
 ..W !!,"<< STAT report cannot be compiled between 7:00am and 5:00pm! >>"
"RTN","MPISTF1",42,0)
 ;
"RTN","MPISTF1",43,0)
 W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you sure you want to recompile (this takes several hours)"
"RTN","MPISTF1",44,0)
 S DIR("?",1)="Enter:"
"RTN","MPISTF1",45,0)
 S DIR("?",2)=" ""NO"" or <RET> to reprint current data and NOT recompile."
"RTN","MPISTF1",46,0)
 S DIR("?",3)=" ""YES"" to recompile new data."
"RTN","MPISTF1",47,0)
 S DIR("?")=" ""^"" to HALT."
"RTN","MPISTF1",48,0)
 D ^DIR K DIR
"RTN","MPISTF1",49,0)
 I Y="^" G QUIT
"RTN","MPISTF1",50,0)
 I +Y=0 D PRINT G QUIT
"RTN","MPISTF1",51,0)
 W !!,"Recompiling data..."
"RTN","MPISTF1",52,0)
 ;
"RTN","MPISTF1",53,0)
QUE1 ;entry point for queued background job
"RTN","MPISTF1",54,0)
 ;prohibit this run on Saturday, Sunday
"RTN","MPISTF1",55,0)
 ;
"RTN","MPISTF1",56,0)
 ;TOTDFN=Total number of entries in 985.5 without a DFN
"RTN","MPISTF1",57,0)
 ;TOTSHR=Total number of entries in file 985.5 with an temporary ICN that is shared
"RTN","MPISTF1",58,0)
 ;TOTDUP=Total number of STA#/DFN duplicates in file 985.5  ; **36
"RTN","MPISTF1",59,0)
 ;
"RTN","MPISTF1",60,0)
 I $D(^XTMP("MPIS","TF1","@@","COMPILE STARTED"))&'$D(^XTMP("MPIS","TF1","@@","COMPILE STOPPED")) G QUIT
"RTN","MPISTF1",61,0)
 ;
"RTN","MPISTF1",62,0)
 I '$D(BYPASS) S QUIT=0 D  I QUIT G QUIT
"RTN","MPISTF1",63,0)
 .S TODAY=$$DOW^XLFDT($$NOW^XLFDT())
"RTN","MPISTF1",64,0)
 .I TODAY="Saturday"!(TODAY="Sunday") S QUIT=1
"RTN","MPISTF1",65,0)
 ;
"RTN","MPISTF1",66,0)
 K ^XTMP("MPIS","TF1") S QFLG=0
"RTN","MPISTF1",67,0)
 D NOW^%DTC
"RTN","MPISTF1",68,0)
 S ^XTMP("MPIS",0)=%+100_"^"_%_"^MPI/PD Maintenance Data"
"RTN","MPISTF1",69,0)
 S ^XTMP("MPIS","TF1","@@","COMPILE STARTED")=%
"RTN","MPISTF1",70,0)
 ; set stat report start date/time and delete existing data for stop time
"RTN","MPISTF1",71,0)
 K FDA S FDA(985.1,"1,",9)=$E(%,1,12) D FILE^DIE("E","FDA","MPISTF1")
"RTN","MPISTF1",72,0)
 L +^MPI(985.1,1):10
"RTN","MPISTF1",73,0)
 S DIE="^MPI(985.1,",DA=1,DR="9.1///@" D ^DIE K DIE,DA,DR
"RTN","MPISTF1",74,0)
 L -^MPI(985.1,1)
"RTN","MPISTF1",75,0)
 ;
"RTN","MPISTF1",76,0)
 D LOOP1
"RTN","MPISTF1",77,0)
 I $E(IOST,1,2)="C-" D PRINT
"RTN","MPISTF1",78,0)
 ;
"RTN","MPISTF1",79,0)
QUIT ;
"RTN","MPISTF1",80,0)
 K %,BYPASS,CHKTIME,COMPB,COMPS,DIFF,DIR,HDT,ICN,ICNCNT,IDST,IEN,JJ,LAST,LN1,LN2
"RTN","MPISTF1",81,0)
 K PFLG,PRT,QFLG,QUIT,SCREEN,SS,TF,TFCNT,TODAY,TOTDFN,TOTSHR,ULN,Y
"RTN","MPISTF1",82,0)
 K DFN,DFNCNT,NODE,TOTDUP,RECDFN,RECICN,RECSTA,STA,TFIEN  ; **36
"RTN","MPISTF1",83,0)
 D ^%ZISC I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPISTF1",84,0)
 Q
"RTN","MPISTF1",85,0)
 ;
"RTN","MPISTF1",86,0)
LOOP1 ;look for missing DFN values and Temporary ICNs that are shared
"RTN","MPISTF1",87,0)
 ;
"RTN","MPISTF1",88,0)
 I $E(IOST,1,2)="C-" W !!,"Beginning search - approx. ",$P(^MPIVET(0),"^",4)," ICNs to check."
"RTN","MPISTF1",89,0)
 K ^XTMP("MPIS","TF1","TEMP ICN SHR")
"RTN","MPISTF1",90,0)
 K ^XTMP("MPIS","TF1","NO DFN")
"RTN","MPISTF1",91,0)
 ;
"RTN","MPISTF1",92,0)
 ;find IEN for Station 200
"RTN","MPISTF1",93,0)
 S SCREEN=$$IEN^XUAF4(200) I SCREEN="" S SCREEN=0
"RTN","MPISTF1",94,0)
 ;
"RTN","MPISTF1",95,0)
 S (TOTSHR,TOTDFN,ICNCNT)=0
"RTN","MPISTF1",96,0)
 ;
"RTN","MPISTF1",97,0)
 ;check file 985.5
"RTN","MPISTF1",98,0)
 S ICN=0 F  S ICN=$O(^MPI(985.5,"AM",ICN)) Q:'ICN  D
"RTN","MPISTF1",99,0)
 .S ICNCNT=ICNCNT+1
"RTN","MPISTF1",100,0)
 .I '(ICNCNT#100000) S ^XTMP("MPIS","TF1","@@","TOT ICN CNT")=ICNCNT I $E(IOST,1,2)="C-" W !,ICNCNT
"RTN","MPISTF1",101,0)
 .S TFCNT=0
"RTN","MPISTF1",102,0)
 .S TF=0 F  S TF=$O(^MPI(985.5,"AM",ICN,TF)) Q:'TF  D
"RTN","MPISTF1",103,0)
 ..S TFCNT=TFCNT+1
"RTN","MPISTF1",104,0)
 ..I TFCNT=1 S IEN=$O(^MPI(985.5,"AM",ICN,TF,0)) D
"RTN","MPISTF1",105,0)
 ...I TF'=SCREEN I $P($G(^MPI(985.5,IEN,0)),"^",3)="" D
"RTN","MPISTF1",106,0)
 ....S ^XTMP("MPIS","TF1","NO DFN",IEN)="File #985.5 entry #"_IEN_" missing DFN value (ICN "_ICN_")"
"RTN","MPISTF1",107,0)
 ....S TOTDFN=TOTDFN+1
"RTN","MPISTF1",108,0)
 .I TFCNT>1 D
"RTN","MPISTF1",109,0)
 ..S IDST=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPISTF1",110,0)
 ..I IDST'="T" Q
"RTN","MPISTF1",111,0)
 ..S TOTSHR=TOTSHR+1
"RTN","MPISTF1",112,0)
 ..S ^XTMP("MPIS","TF1","TEMP ICN SHR",ICN)="Temporary ICN "_ICN_" is shared."
"RTN","MPISTF1",113,0)
 ;
"RTN","MPISTF1",114,0)
 S ^XTMP("MPIS","TF1","@@","TOT TEMP ICN SHR")=TOTSHR
"RTN","MPISTF1",115,0)
 S ^XTMP("MPIS","TF1","@@","TOT NO DFN")=TOTDFN
"RTN","MPISTF1",116,0)
 ;
"RTN","MPISTF1",117,0)
LOOP2 ;look for STA#/DFN duplicates IN 985.5  ; **36
"RTN","MPISTF1",118,0)
 K ^XTMP("MPIS","TF1","DUP STA/DFN")
"RTN","MPISTF1",119,0)
 S (DFN,DFNCNT,TOTDUP)=0
"RTN","MPISTF1",120,0)
 F  S DFN=$O(^MPI(985.5,"ASD",DFN)) Q:'DFN  D
"RTN","MPISTF1",121,0)
 .S DFNCNT=DFNCNT+1
"RTN","MPISTF1",122,0)
 .I '(DFNCNT#10000) S ^XTMP("MPIS","TF1","@@","TOT DFN CNT")=DFNCNT I $E(IOST,1,2)="C-" W !,DFNCNT
"RTN","MPISTF1",123,0)
 .S STA=0 F  S STA=$O(^MPI(985.5,"ASD",DFN,STA)) Q:'STA  D
"RTN","MPISTF1",124,0)
 ..S TFIEN=$O(^MPI(985.5,"ASD",DFN,STA,0)) I $O(^MPI(985.5,"ASD",DFN,STA,TFIEN)) D
"RTN","MPISTF1",125,0)
 ...S TOTDUP=TOTDUP+1
"RTN","MPISTF1",126,0)
 ...S TFIEN=0 F  S TFIEN=$O(^MPI(985.5,"ASD",DFN,STA,TFIEN)) Q:'TFIEN  S ^XTMP("MPIS","TF1","DUP STA/DFN",DFN,STA,TFIEN)=$G(^MPI(985.5,TFIEN,0))
"RTN","MPISTF1",127,0)
 S ^XTMP("MPIS","TF1","@@","TOT DUP STA/DFN")=TOTDUP
"RTN","MPISTF1",128,0)
 ;
"RTN","MPISTF1",129,0)
DONE ;set xtmp node
"RTN","MPISTF1",130,0)
 I $E(IOST,1,2)="C-" W !!,"DONE"
"RTN","MPISTF1",131,0)
 ;
"RTN","MPISTF1",132,0)
 D NOW^%DTC
"RTN","MPISTF1",133,0)
 S ^XTMP("MPIS","TF1","@@","COMPILE STOPPED")=%
"RTN","MPISTF1",134,0)
 ; set stat report end date/time
"RTN","MPISTF1",135,0)
 K FDA S FDA(985.1,"1,",9.1)=$E(%,1,12) D FILE^DIE("E","FDA","MPISTF1")
"RTN","MPISTF1",136,0)
 Q
"RTN","MPISTF1",137,0)
 ;
"RTN","MPISTF1",138,0)
EN2 ;entry point for data mgt team
"RTN","MPISTF1",139,0)
 S PFLG=1,QFLG=0 D PRINT G QUIT
"RTN","MPISTF1",140,0)
 ;
"RTN","MPISTF1",141,0)
PRINT ;display report
"RTN","MPISTF1",142,0)
 I $D(^XTMP("MPIS","TF1","@@","COMPILE STARTED"))&'$D(^XTMP("MPIS","TF1","@@","COMPILE STOPPED")) D  Q
"RTN","MPISTF1",143,0)
 .W !!,"This report is currently being compiled!"
"RTN","MPISTF1",144,0)
 ;
"RTN","MPISTF1",145,0)
DEV ;
"RTN","MPISTF1",146,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","MPISTF1",147,0)
 D EN^XUTMDEVQ("PRT^MPISTF1","MPI - Print MPI TF Check Report") I 'POP Q
"RTN","MPISTF1",148,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!" S QFLG=1
"RTN","MPISTF1",149,0)
 Q
"RTN","MPISTF1",150,0)
 ;
"RTN","MPISTF1",151,0)
PRT ;Print report
"RTN","MPISTF1",152,0)
 I '$D(^XTMP("MPIS","TF1")) D  Q
"RTN","MPISTF1",153,0)
 .W !!,"No data is available.",!,"The option ""Background TF Data Validation Compile"" needs to be run first!"
"RTN","MPISTF1",154,0)
 ;
"RTN","MPISTF1",155,0)
 S LAST=^XTMP("MPIS","TF1","@@","COMPILE STOPPED")
"RTN","MPISTF1",156,0)
 S LAST=$$FMTE^XLFDT($E(LAST,1,12))
"RTN","MPISTF1",157,0)
 S $P(LN1,"=",81)="",$P(LN2,"-",81)=""
"RTN","MPISTF1",158,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","MPISTF1",159,0)
 ;calculate compile time
"RTN","MPISTF1",160,0)
 S COMPB=^XTMP("MPIS","TF1","@@","COMPILE STARTED")
"RTN","MPISTF1",161,0)
 S COMPS=^XTMP("MPIS","TF1","@@","COMPILE STOPPED")
"RTN","MPISTF1",162,0)
 S DIFF=($$FMDIFF^XLFDT(COMPS,COMPB,2))/3600
"RTN","MPISTF1",163,0)
 W @IOF
"RTN","MPISTF1",164,0)
 W !!!,"MPI Treating Facility Data Validation Report - Printed ",HDT,!,"Date Report Last Compiled: ",LAST,?54,"(Compile Time: ",$J(DIFF,5,2)," hrs)",!,LN1
"RTN","MPISTF1",165,0)
 ;
"RTN","MPISTF1",166,0)
PRT1 W !!,"Total number of entries in file 985.5 without a DFN",?63,":"
"RTN","MPISTF1",167,0)
 W ?65,$J($FN(^XTMP("MPIS","TF1","@@","TOT NO DFN"),","),12)
"RTN","MPISTF1",168,0)
 W !,"Total number Temporary ICNs that are shared",?63,":"
"RTN","MPISTF1",169,0)
 W ?65,$J($FN(^XTMP("MPIS","TF1","@@","TOT TEMP ICN SHR"),","),12)
"RTN","MPISTF1",170,0)
 W !,"Total number of STA#/DFN duplicates found in file 985.5",?63,":"  ; **36
"RTN","MPISTF1",171,0)
 W ?65,$J($FN(^XTMP("MPIS","TF1","@@","TOT DUP STA/DFN"),","),12)  ; **36
"RTN","MPISTF1",172,0)
 ;
"RTN","MPISTF1",173,0)
PRT2 ;print detail of entries in 985.5 with no DFN
"RTN","MPISTF1",174,0)
 I ^XTMP("MPIS","TF1","@@","TOT NO DFN")=0 G PRT3
"RTN","MPISTF1",175,0)
 D PG Q:QFLG
"RTN","MPISTF1",176,0)
 W !,"Detail of entries in 985.5 with no DFN:" K ULN S $P(ULN,"=",40)="" W !,ULN
"RTN","MPISTF1",177,0)
 S IEN=0 F  S IEN=$O(^XTMP("MPIS","TF1","NO DFN",IEN)) Q:'IEN  D
"RTN","MPISTF1",178,0)
 .W !,^XTMP("MPIS","TF1","NO DFN",IEN)
"RTN","MPISTF1",179,0)
 ;
"RTN","MPISTF1",180,0)
PRT3 ;print detail of temporary ICNs that are shared
"RTN","MPISTF1",181,0)
 I ^XTMP("MPIS","TF1","@@","TOT TEMP ICN SHR")=0 G PRT4  ; **36
"RTN","MPISTF1",182,0)
 D PG Q:QFLG
"RTN","MPISTF1",183,0)
 W !,"Detail of temporary ICNs that are shared:" K ULN S $P(ULN,"=",42)="" W !,ULN
"RTN","MPISTF1",184,0)
 S ICN=0 F  S ICN=$O(^XTMP("MPIS","TF1","TEMP ICN SHR",ICN)) Q:'ICN  D
"RTN","MPISTF1",185,0)
 .W !,^XTMP("MPIS","TF1","TEMP ICN SHR",ICN)
"RTN","MPISTF1",186,0)
 ;
"RTN","MPISTF1",187,0)
PRT4 ;print detail of STA#/DFN duplicates found in file 985.5  ; **36
"RTN","MPISTF1",188,0)
 I ^XTMP("MPIS","TF1","@@","TOT TEMP ICN SHR")=0 G QUIT
"RTN","MPISTF1",189,0)
 D PG Q:QFLG
"RTN","MPISTF1",190,0)
 W !,"Detail of STA#/DFN duplicates found in file 985.5:" K ULN S $P(ULN,"=",50)="" W !,ULN
"RTN","MPISTF1",191,0)
 S DFN=0 F  S DFN=$O(^XTMP("MPIS","TF1","DUP STA/DFN",DFN)) Q:'DFN  D
"RTN","MPISTF1",192,0)
 .S STA=0 F  S STA=$O(^XTMP("MPIS","TF1","DUP STA/DFN",DFN,STA)) Q:'STA  D
"RTN","MPISTF1",193,0)
 ..W !!,"STA#/DFN - ",$$STA^XUAF4(STA),"/",DFN," TF entries in 985.5:"
"RTN","MPISTF1",194,0)
 ..S TFIEN=0 F  S TFIEN=$O(^XTMP("MPIS","TF1","DUP STA/DFN",DFN,STA,TFIEN)) Q:'TFIEN  D
"RTN","MPISTF1",195,0)
 ...S NODE=^XTMP("MPIS","TF1","DUP STA/DFN",DFN,STA,TFIEN)
"RTN","MPISTF1",196,0)
 ...S RECSTA=$$STA^XUAF4($P(NODE,"^")),RECICN=$P(NODE,"^",2),RECDFN=$P(NODE,"^",3)
"RTN","MPISTF1",197,0)
 ...W !?3,"File 985.5 IEN: ",TFIEN," = Sta #",RECSTA,"/ ICN ",RECICN,"/ DFN ",RECDFN
"RTN","MPISTF1",198,0)
 Q
"RTN","MPISTF1",199,0)
 ;
"RTN","MPISTF1",200,0)
PG ;scroll stops
"RTN","MPISTF1",201,0)
 S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPISTF1",202,0)
 S DIR(0)="E" D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","MPISTF1",203,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","MPISTF1",204,0)
 I $E(IOST,1,2)'="C-" W !!
"RTN","MPISTF1",205,0)
 Q
"RTN","MPISUT01")
0^186^B29073814
"RTN","MPISUT01",1,0)
MPISUT01 ;BIR/CML-Utility Calls for MPI Stat Report ;7/16/02
"RTN","MPISUT01",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**3,12,25**;30 Apr 99
"RTN","MPISUT01",3,0)
 ;
"RTN","MPISUT01",4,0)
CHECK(ICN) ; this API will check to see if the ICN is shared
"RTN","MPISUT01",5,0)
 ; returning 1 if it is shared, otherwise 0
"RTN","MPISUT01",6,0)
 I '$D(^MPIVET(ICN)) Q 0
"RTN","MPISUT01",7,0)
 N SITE,FLG S SITE="",FLG=0
"RTN","MPISUT01",8,0)
 F  S SITE=$O(^MPI(985.5,"AM",ICN,SITE)) Q:SITE=""  S FLG=FLG+1
"RTN","MPISUT01",9,0)
 I FLG>1 Q 1
"RTN","MPISUT01",10,0)
 Q 0
"RTN","MPISUT01",11,0)
 ;
"RTN","MPISUT01",12,0)
KILLMPIV(ICN) ;
"RTN","MPISUT01",13,0)
 N DA,DIK
"RTN","MPISUT01",14,0)
 S DA=ICN,DIK="^MPIVET(" D ^DIK
"RTN","MPISUT01",15,0)
 K DA,DIK
"RTN","MPISUT01",16,0)
 Q
"RTN","MPISUT01",17,0)
 ;
"RTN","MPISUT01",18,0)
KILL9855(ICN) ;
"RTN","MPISUT01",19,0)
 N SITE
"RTN","MPISUT01",20,0)
 S SITE="",DIK="^MPI(985.5,"
"RTN","MPISUT01",21,0)
 F  S SITE=$O(^MPI(985.5,"AM",ICN,SITE)) Q:SITE=""  D
"RTN","MPISUT01",22,0)
 .S DA=$O(^MPI(985.5,"AM",ICN,SITE,""))
"RTN","MPISUT01",23,0)
 .Q:DA=""
"RTN","MPISUT01",24,0)
 .D ^DIK
"RTN","MPISUT01",25,0)
 K DA,DIK
"RTN","MPISUT01",26,0)
 Q
"RTN","MPISUT01",27,0)
 ;
"RTN","MPISUT01",28,0)
FILE ;count the total number of SSNs in ^MPI(985.32) that need to be resolved AND which
"RTN","MPISUT01",29,0)
 ;are marked as CANNOT BE RESOLVED
"RTN","MPISUT01",30,0)
 ;also report the totals for dup SSN resolved and added during the last week.
"RTN","MPISUT01",31,0)
 ;
"RTN","MPISUT01",32,0)
 S (TOTADD,TOTRES)=0,(FIRST,LAST)=""
"RTN","MPISUT01",33,0)
 S X="T-7" D ^%DT S DAILY=+Y
"RTN","MPISUT01",34,0)
 S FIRST=$O(^MPI(985.1,1,"STATDUP",DAILY)) I +FIRST D
"RTN","MPISUT01",35,0)
 .S FIRST=$$FMTE^XLFDT(FIRST),LAST=$$FMTE^XLFDT(DT)
"RTN","MPISUT01",36,0)
 ;
"RTN","MPISUT01",37,0)
 F  S DAILY=$O(^MPI(985.1,1,"STATDUP",DAILY)) Q:'DAILY  Q:DAILY>DT  D
"RTN","MPISUT01",38,0)
 .S IENS=DAILY_","_1
"RTN","MPISUT01",39,0)
 .S ADD=$$GET1^DIQ(985.12,IENS_",",1) I ADD="" S ADD=0
"RTN","MPISUT01",40,0)
 .S RES=$$GET1^DIQ(985.12,IENS_",",2) I RES="" S RES=0
"RTN","MPISUT01",41,0)
 .S TOTADD=TOTADD+ADD,TOTRES=TOTRES+RES
"RTN","MPISUT01",42,0)
 ;
"RTN","MPISUT01",43,0)
 S (CNT,PENDCNT,CBRCNT,IEN)=0
"RTN","MPISUT01",44,0)
 F  S IEN=$O(^MPI(985.32,IEN)) Q:'IEN  D
"RTN","MPISUT01",45,0)
 .S CNT=CNT+1
"RTN","MPISUT01",46,0)
 .S CBR=$P(^MPI(985.32,IEN,0),"^",3)
"RTN","MPISUT01",47,0)
 .I CBR=1 S CBRCNT=CBRCNT+1 Q
"RTN","MPISUT01",48,0)
 .S PENDCNT=PENDCNT+1
"RTN","MPISUT01",49,0)
 ;
"RTN","MPISUT01",50,0)
 S TOTICN=$G(^XTMP("MPIS","SR1","@@","TOT ICN"))
"RTN","MPISUT01",51,0)
 S TOTDACT=$G(^XTMP("MPIS","SR1","@@","TOT DEACTIVATED"))
"RTN","MPISUT01",52,0)
 ;
"RTN","MPISUT01",53,0)
 S DIC="^MPI(985.1,"_1_",""STATSUM"",",DIC(0)="LZ",DIC("P")=$P($G(^DD(985.1,7.2,0)),"^",2),DA(1)=1,X=DT,DINUM=X
"RTN","MPISUT01",54,0)
 D ^DIC K DIC
"RTN","MPISUT01",55,0)
 ;
"RTN","MPISUT01",56,0)
 S IENS=DT_","_1
"RTN","MPISUT01",57,0)
 K FDA,MPIM S FDA(985.11,IENS_",",1)=TOTICN D FILE^DIE("E","FDA","MPIM")
"RTN","MPISUT01",58,0)
 ;
"RTN","MPISUT01",59,0)
 S IENS=DT_","_1
"RTN","MPISUT01",60,0)
 K FDA,MPIM S FDA(985.11,IENS_",",2)=TOTDACT D FILE^DIE("E","FDA","MPIM")
"RTN","MPISUT01",61,0)
 ;
"RTN","MPISUT01",62,0)
 S IENS=DT_","_1
"RTN","MPISUT01",63,0)
 K FDA,MPIM S FDA(985.11,IENS_",",3)=PENDCNT D FILE^DIE("E","FDA","MPIM")
"RTN","MPISUT01",64,0)
 ;
"RTN","MPISUT01",65,0)
 S IENS=DT_","_1
"RTN","MPISUT01",66,0)
 K FDA,MPIM S FDA(985.11,IENS_",",4)=CBRCNT D FILE^DIE("E","FDA","MPIM")
"RTN","MPISUT01",67,0)
 ;
"RTN","MPISUT01",68,0)
 ;send email
"RTN","MPISUT01",69,0)
 K MPIMTXT
"RTN","MPISUT01",70,0)
 S MPIMTXT(1)="Data generated "_$$FMTE^XLFDT(DT)_":"
"RTN","MPISUT01",71,0)
 S MPIMTXT(2)=""
"RTN","MPISUT01",72,0)
 S MPIMTXT(3)=$FN(TOTICN,",")_" unique ICNs on the MPI."
"RTN","MPISUT01",73,0)
 S MPIMTXT(4)=$FN(TOTDACT,",")_" of these have been deactivated."
"RTN","MPISUT01",74,0)
 S MPIMTXT(5)=""
"RTN","MPISUT01",75,0)
 S MPIMTXT(6)=$FN(PENDCNT,",")_" Duplicate SSNs Identified for Resolution."
"RTN","MPISUT01",76,0)
 S MPIMTXT(7)=$FN(CBRCNT,",")_" Duplicate SSNs Marked as CANNOT BE RESOLVED."
"RTN","MPISUT01",77,0)
 S MPIMTXT(8)=""
"RTN","MPISUT01",78,0)
 S MPIMTXT(9)=TOTADD_" Duplicate SSNs ADDED during period "_FIRST_" to "_LAST_"."
"RTN","MPISUT01",79,0)
 S MPIMTXT(10)=TOTRES_" Duplicate SSNs RESOLVED during period "_FIRST_" to "_LAST_"."
"RTN","MPISUT01",80,0)
 S MPIMTXT(11)=""
"RTN","MPISUT01",81,0)
 S MPIMTXT(12)=""
"RTN","MPISUT01",82,0)
 S MPIMTXT(13)="NOTE: Resolved duplicates could have been the result of DQ Team work, NOIS"
"RTN","MPISUT01",83,0)
 S MPIMTXT(14)="resolution, or sites finding an error in their data and correcting it."
"RTN","MPISUT01",84,0)
 S XMSUB="MPI #'s Report for "_$$FMTE^XLFDT(DT)
"RTN","MPISUT01",85,0)
 S XMTEXT="MPIMTXT("
"RTN","MPISUT01",86,0)
 S XMY("STATS")=""
"RTN","MPISUT01",87,0)
 S XMDUZ="G.MPI MONITOR"
"RTN","MPISUT01",88,0)
 D ^XMD
"RTN","MPISUT01",89,0)
 K ADD,ADDCNT,CBR,CBRCNT,CNT,DAILY,DINUM,FIRST,IEN,IENS,LAST,PENDCNT
"RTN","MPISUT01",90,0)
 K RES,TOTADD,TOTICN,TOTDACT,TOTRES,X,XMDUZ,XMSUB,XMTEXT,XMY,Y
"RTN","MPISUT01",91,0)
 Q
"RTN","MPISUT01",92,0)
 ;
"RTN","MPISUT01",93,0)
CHKDUP ;check file ^MPI(985.32 for any entries that need to be removed
"RTN","MPISUT01",94,0)
 ;either because they are no longer duplicated or the ID State is
"RTN","MPISUT01",95,0)
 ;not Permanent or Temporary
"RTN","MPISUT01",96,0)
 ;
"RTN","MPISUT01",97,0)
 I $E(IOST)="C" W !!,"Checking the MPI DUP SSN file (#985.32) - "
"RTN","MPISUT01",98,0)
 ;
"RTN","MPISUT01",99,0)
 K ^XTMP("MPIS","MER1","SSN TO REMOVE")
"RTN","MPISUT01",100,0)
 S DELCNT=0
"RTN","MPISUT01",101,0)
 S SSN="" F  S SSN=$O(^MPI(985.32,"B",SSN)) Q:SSN=""  D
"RTN","MPISUT01",102,0)
 .;on first loop, check ID State and set array if IDSTATE is P or T
"RTN","MPISUT01",103,0)
 .K ICNARR
"RTN","MPISUT01",104,0)
 .S ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:'ICN  D
"RTN","MPISUT01",105,0)
 ..S IDS=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPISUT01",106,0)
 ..I IDS="P"!(IDS="T") S ICNARR(ICN)=""
"RTN","MPISUT01",107,0)
 .;on second loop count number of ICNs involved in dup
"RTN","MPISUT01",108,0)
 .S (CNT,ICN)=0 F  S ICN=$O(ICNARR(ICN)) Q:'ICN  S CNT=CNT+1
"RTN","MPISUT01",109,0)
 .I CNT<2 D
"RTN","MPISUT01",110,0)
 ..S DELCNT=DELCNT+1
"RTN","MPISUT01",111,0)
 ..S ^XTMP("MPIS","MER1","SSN TO REMOVE",SSN)=""
"RTN","MPISUT01",112,0)
 ;
"RTN","MPISUT01",113,0)
 I $E(IOST)="C" W DELCNT," SSN dups removed."
"RTN","MPISUT01",114,0)
 ;
"RTN","MPISUT01",115,0)
 S ^XTMP("MPIS","SR1","@@","TOT SSN DUP REMOVED FROM 985.32")=DELCNT
"RTN","MPISUT01",116,0)
 D SAVEPAR
"RTN","MPISUT01",117,0)
 ;
"RTN","MPISUT01",118,0)
 ;remove SSNs in ^XTMP("MPIS","MER1","SSN TO REMOVE" from file 985.32
"RTN","MPISUT01",119,0)
 S SSN="" F  S SSN=$O(^XTMP("MPIS","MER1","SSN TO REMOVE",SSN)) Q:SSN=""  D
"RTN","MPISUT01",120,0)
 .S DA=$O(^MPI(985.32,"B",SSN,0)) Q:'DA
"RTN","MPISUT01",121,0)
 .S DIK="^MPI(985.32," D ^DIK K DIK,DA
"RTN","MPISUT01",122,0)
 Q
"RTN","MPISUT01",123,0)
 ;
"RTN","MPISUT01",124,0)
SAVEPAR ;save totals on resolved and added dups to MPI Parameter file
"RTN","MPISUT01",125,0)
 I '$D(ADDCNT) S ADDCNT=0  ;this would happen if call is made from DUP SSN compile
"RTN","MPISUT01",126,0)
 ;
"RTN","MPISUT01",127,0)
 ;
"RTN","MPISUT01",128,0)
 I $D(^MPI(985.1,1,"STATDUP",DT,0)) D
"RTN","MPISUT01",129,0)
 .S OLDADD=$P(^MPI(985.1,1,"STATDUP",DT,0),"^",2),OLDDEL=$P(^(0),"^",3)
"RTN","MPISUT01",130,0)
 .S ADDCNT=ADDCNT+OLDADD,DELCNT=DELCNT+OLDDEL
"RTN","MPISUT01",131,0)
 ;
"RTN","MPISUT01",132,0)
 I '$D(^MPI(985.1,1,"STATDUP",DT,0)) D
"RTN","MPISUT01",133,0)
 .S DIC="^MPI(985.1,"_1_",""STATDUP"",",DIC(0)="LZ",DIC("P")=$P($G(^DD(985.1,7.3,0)),"^",2),DA(1)=1,X=DT,DINUM=X
"RTN","MPISUT01",134,0)
 .D ^DIC K DIC
"RTN","MPISUT01",135,0)
 ;
"RTN","MPISUT01",136,0)
 S IENS=DT_","_1
"RTN","MPISUT01",137,0)
 K FDA,MPIM S FDA(985.12,IENS_",",1)=ADDCNT D FILE^DIE("E","FDA","MPIM")
"RTN","MPISUT01",138,0)
 ;
"RTN","MPISUT01",139,0)
 S IENS=DT_","_1
"RTN","MPISUT01",140,0)
 K FDA,MPIM S FDA(985.12,IENS_",",2)=DELCNT D FILE^DIE("E","FDA","MPIM")
"RTN","MPISUT01",141,0)
 ;
"RTN","MPISUT01",142,0)
 K ADDCNT,CNT,DA,DELCNT,ICNARR,IDS,IENS,OLDADD,OLDDEL,SSN
"RTN","MPISUT01",143,0)
 Q
"RTN","MPISUT02")
0^187^B2872576
"RTN","MPISUT02",1,0)
MPISUT02 ;BIR/CML-Utility Calls for MPI Stat Report ;7/16/02
"RTN","MPISUT02",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**25,36**;30 Apr 99
"RTN","MPISUT02",3,0)
 ;
"RTN","MPISUT02",4,0)
DISP ;display the dups identified in LOOP3^MPISSR1
"RTN","MPISUT02",5,0)
 I '$D(^XTMP("MPIS","SR1","TF DUP")) D  Q
"RTN","MPISUT02",6,0)
 .W !!,"There are no dups in the MPI FACILITY ASSOCIATION file (#985.5)!"
"RTN","MPISUT02",7,0)
 S (CNT,ICN)=0
"RTN","MPISUT02",8,0)
 F  S ICN=$O(^XTMP("MPIS","SR1","TF DUP",ICN)) Q:'ICN  D
"RTN","MPISUT02",9,0)
 .S CNT=CNT+1
"RTN","MPISUT02",10,0)
 .W !!,CNT,". ICN: ",ICN
"RTN","MPISUT02",11,0)
 .S IEN=0 F  S IEN=$O(^XTMP("MPIS","SR1","TF DUP",ICN,IEN)) Q:'IEN  D
"RTN","MPISUT02",12,0)
 ..S AF=$P(^XTMP("MPIS","SR1","TF DUP",ICN,IEN),"^")
"RTN","MPISUT02",13,0)
 ..S TFIEN=0 F  S TFIEN=$O(^MPI(985.5,"AM",ICN,AF,TFIEN)) Q:'TFIEN  D
"RTN","MPISUT02",14,0)
 ...D CAPTION^DIQ(985.5,TFIEN,"R")
"RTN","MPISUT02",15,0)
 ...W !
"RTN","MPISUT02",16,0)
 .I ^XTMP("MPIS","SR1","@@","TOT TF DUP")>0 W !,"(use call DEL^MPISUT02 to delete TF dups)"
"RTN","MPISUT02",17,0)
 G QUIT
"RTN","MPISUT02",18,0)
 ;
"RTN","MPISUT02",19,0)
DEL ;delete duplicates in the MPI FACILITY ASSOCIATION file (#985.5)
"RTN","MPISUT02",20,0)
 I '$D(^XTMP("MPIS","SR1","TF DUP")) D  Q
"RTN","MPISUT02",21,0)
 .I '$G(HIDE) W !!,"There are no dups in the MPI FACILITY ASSOCIATION file (#985.5) to delete!"
"RTN","MPISUT02",22,0)
 N IEN,DA,DIK,ICN,CNT
"RTN","MPISUT02",23,0)
 S ICN=0,CNT=0
"RTN","MPISUT02",24,0)
 F  S ICN=$O(^XTMP("MPIS","SR1","TF DUP",ICN)) Q:ICN=""  D
"RTN","MPISUT02",25,0)
 .S IEN=0
"RTN","MPISUT02",26,0)
 .F  S IEN=$O(^XTMP("MPIS","SR1","TF DUP",ICN,IEN)) Q:IEN=""  D
"RTN","MPISUT02",27,0)
 ..S DIK="^MPI(985.5,",DA=IEN
"RTN","MPISUT02",28,0)
 ..D ^DIK
"RTN","MPISUT02",29,0)
 ..S CNT=CNT+1
"RTN","MPISUT02",30,0)
 I '$G(HIDE) W !,"TOTAL DELETED - ",CNT
"RTN","MPISUT02",31,0)
 G QUIT
"RTN","MPISUT02",32,0)
 ;
"RTN","MPISUT02",33,0)
QUIT ;
"RTN","MPISUT02",34,0)
 K AF,CNT,DA,DIK,ICN,IEN,TFIEN
"RTN","MPISUT02",35,0)
 Q
"RTN","MPITFOUT")
0^188^B71905099
"RTN","MPITFOUT",1,0)
MPITFOUT ;BIOFO/DLR-Broadcaster of TF Master File updates ;7/24/02
"RTN","MPITFOUT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,19,24,35**;30 Apr 99
"RTN","MPITFOUT",3,0)
DBIA ;
"RTN","MPITFOUT",4,0)
 ;IA: 2056  - $$GET1^DIQ
"RTN","MPITFOUT",5,0)
 ;IA: 10106 - $$HLDATE and $$FMNAME ^HLFNC
"RTN","MPITFOUT",6,0)
 ;IA: 2434  - $$REPROC^HLUTIL
"RTN","MPITFOUT",7,0)
 ;IA: 2271  - LINK^HLUTIL3
"RTN","MPITFOUT",8,0)
 ;IA: 2171  - $$WHAT and $$STA ^XUAF4
"RTN","MPITFOUT",9,0)
 ;IA: 10103 - $$FMADD^XLFDT
"RTN","MPITFOUT",10,0)
 ;IA: 10112 - $$SITE^VASITE
"RTN","MPITFOUT",11,0)
 ;
"RTN","MPITFOUT",12,0)
UPDATE ;entry point called to send/broadcast TF list to all sites
"RTN","MPITFOUT",13,0)
 N ICN,X,MPIZN,SITE,BCST,Y
"RTN","MPITFOUT",14,0)
 S ICN=$$ASK^MPIA43
"RTN","MPITFOUT",15,0)
 I $G(ICN)'="" W !!,"TF update will be sent to the following site(s):" S X=0 F  S X=$O(^MPI(985.5,"AM",ICN,X)) Q:'X  S MPIZN=^MPI(985.5,$O(^MPI(985.5,"AM",ICN,X,0)),0) S SITE=$$NS^XUAF4($P(MPIZN,"^")) W !,?5,SITE
"RTN","MPITFOUT",16,0)
 S DIR("A")="Are you sure want to proceed",DIR("B")="Yes",DIR(0)="Y" D ^DIR
"RTN","MPITFOUT",17,0)
 I Y=1 W !!,"Sending update to the associated systems..." N BCST S BCST=$$BRDCST^MPITFOUT(ICN,"UPD","ALL","MUP")
"RTN","MPITFOUT",18,0)
 Q
"RTN","MPITFOUT",19,0)
BRDCST(ICN,MFIT,MPISITE,MFET,OPTION) ;
"RTN","MPITFOUT",20,0)
 ;This entry point is used to generate a MAster File update for a given
"RTN","MPITFOUT",21,0)
 ;ICN
"RTN","MPITFOUT",22,0)
 ;
"RTN","MPITFOUT",23,0)
 ;Input:
"RTN","MPITFOUT",24,0)
 ; ICN - IEN of the entry in File #985
"RTN","MPITFOUT",25,0)
 ; MFIT - MFI type (REP or UPD) (optional)
"RTN","MPITFOUT",26,0)
 ; MPISITE - File #4 IEN that was added/updated/deleted (optional)
"RTN","MPITFOUT",27,0)
 ; MFET - MFI type (MAD-added, MDL-deleted, MUP-updated) (optional)
"RTN","MPITFOUT",28,0)
 ; OPTION - Used for BC option to overwrite the check to prevent
"RTN","MPITFOUT",29,0)
 ;                     the sending of a TF update if only one site.
"RTN","MPITFOUT",30,0)
 ; default value will be ICN,"REP","ALL","MAD"
"RTN","MPITFOUT",31,0)
 ;Output: Sends MFU messages
"RTN","MPITFOUT",32,0)
 ;
"RTN","MPITFOUT",33,0)
 I '$D(^MPIVET(ICN,0)) Q 1
"RTN","MPITFOUT",34,0)
 I '$D(^MPIVET(ICN,1)) Q 1
"RTN","MPITFOUT",35,0)
 I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" Q 1  ;**24
"RTN","MPITFOUT",36,0)
 ;do not send a TF update out if there is only one associate system (this will prevent new adds during batch query job from generating exceptions)
"RTN","MPITFOUT",37,0)
 N CNT,X,MPIASSOC
"RTN","MPITFOUT",38,0)
 S CNT=0,X=0 F  S X=$O(^MPI(985.5,"AM",ICN,X)) Q:'X  D
"RTN","MPITFOUT",39,0)
 . S CNT=CNT+1
"RTN","MPITFOUT",40,0)
 . N MPIIEN S MPIIEN=$O(^MPI(985.5,"AM",ICN,X,0)) I $D(^MPI(985.5,MPIIEN)) S MPIASSOC=+$O(^MPI(985.5,MPIIEN,71,0))
"RTN","MPITFOUT",41,0)
 I CNT>1!($G(OPTION)="BC")!($G(MPIASSOC)>0) S ZTSAVE("ICN")="",ZTSAVE("MFIT")="",ZTSAVE("MFET")="",ZTSAVE("MPISITE")="",ZTRTN="START^MPITFOUT",ZTDESC="Sending Master File Update for ICN "_$G(ICN),ZTIO="MPI TF UPDATES",ZTDTH=$H D ^%ZTLOAD ;**24
"RTN","MPITFOUT",42,0)
 K ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH
"RTN","MPITFOUT",43,0)
 Q 1
"RTN","MPITFOUT",44,0)
START ;
"RTN","MPITFOUT",45,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPITFOUT",46,0)
 N TF,X,MPI,EXC,MFI,MFE,HLEID,HLA,MPISITEN
"RTN","MPITFOUT",47,0)
 ;set defaults
"RTN","MPITFOUT",48,0)
 I $G(MFIT)'="UPD" S MFIT="REP"
"RTN","MPITFOUT",49,0)
 S MPISITEN=$$GET1^DIQ(4,+$G(MPISITE)_",",99,"I")
"RTN","MPITFOUT",50,0)
 I MPISITEN="" S MPISITE="ALL"
"RTN","MPITFOUT",51,0)
 I $G(MFET)="" S MFET="MAD"
"RTN","MPITFOUT",52,0)
 I MFIT="REP"&(MFET'="MAD") S MFET="MAD"
"RTN","MPITFOUT",53,0)
 ;
"RTN","MPITFOUT",54,0)
 S X=$$INIT(.HL,.HLEID)
"RTN","MPITFOUT",55,0)
 I +X=1 D EXCPT(EXC) Q  ;log exception
"RTN","MPITFOUT",56,0)
MFN ;build MFN message
"RTN","MPITFOUT",57,0)
 N TF,INSTNAM,INSTNUM,CMOR,EC,TFDT,TFEVT,CNT
"RTN","MPITFOUT",58,0)
 S CNT=1
"RTN","MPITFOUT",59,0)
 S EC=$E(HL("ECH"),1)
"RTN","MPITFOUT",60,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2)
"RTN","MPITFOUT",61,0)
 S INSTNAM=$$WHAT^XUAF4(+CMOR,.01)
"RTN","MPITFOUT",62,0)
 S INSTNUM=$$WHAT^XUAF4(+CMOR,99)
"RTN","MPITFOUT",63,0)
 S HLA("HLS",CNT)="MFI"_HL("FS")_"TFL"_HL("FS")_HL("FS")_$G(MFIT)_HL("FS")_HL("FS")_HL("FS")_"NE"_HL("FS")_INSTNUM_EC_INSTNAM S CNT=CNT+1
"RTN","MPITFOUT",64,0)
BMFE ;build MFE and ZET segments
"RTN","MPITFOUT",65,0)
 N MFE
"RTN","MPITFOUT",66,0)
 I MPISITE'="ALL" Q:'$O(^MPI(985.5,"AM",ICN,MPISITE,0))
"RTN","MPITFOUT",67,0)
 I MPISITE'="ALL" D
"RTN","MPITFOUT",68,0)
 . ;find the tf and call bldmfe and bldzet
"RTN","MPITFOUT",69,0)
 . S MFE=$O(^MPI(985.5,"AM",ICN,MPISITE,0))
"RTN","MPITFOUT",70,0)
 . Q:MFE=""
"RTN","MPITFOUT",71,0)
 . D BLDMFE(MFE,MFET,.CNT),BLDZET(MFE,.CNT)
"RTN","MPITFOUT",72,0)
 I MPISITE="ALL" D
"RTN","MPITFOUT",73,0)
 . F TF=0:0 S TF=$O(^MPI(985.5,"AM",ICN,TF)) Q:'TF  D
"RTN","MPITFOUT",74,0)
 .. F MFE=0:0 S MFE=$O(^MPI(985.5,"AM",ICN,TF,MFE)) Q:'MFE  D
"RTN","MPITFOUT",75,0)
 ... D BLDMFE(MFE,MFET,.CNT)
"RTN","MPITFOUT",76,0)
 ... D BLDZET(MFE,.CNT)
"RTN","MPITFOUT",77,0)
SEND ;
"RTN","MPITFOUT",78,0)
 N RESLT,HLRESLT
"RTN","MPITFOUT",79,0)
 N HLP S HLP("NAMESPACE")="DG"
"RTN","MPITFOUT",80,0)
 ;sends the MFU message
"RTN","MPITFOUT",81,0)
 ;log the generation into an XTMP global
"RTN","MPITFOUT",82,0)
 I +$G(ICN)>0 D
"RTN","MPITFOUT",83,0)
 .K:$D(^XTMP("MPI"_HL("ETN")_"%"_ICN)) ^XTMP("MPI"_HL("ETN")_"%"_ICN) S ^XTMP("MPI"_HL("ETN")_"%"_ICN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"HL7 TF UPDATE FOR ICN#"_ICN
"RTN","MPITFOUT",84,0)
 D GENERATE^HLMA("MPI MFN-M05 SERVER","LM",1,.HLRESLT,"",.HLP)
"RTN","MPITFOUT",85,0)
 ;D GENERATE^HLMA(HLEID,"LM",1,.HLRESLT,"",.HLP)
"RTN","MPITFOUT",86,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,U,3))
"RTN","MPITFOUT",87,0)
 ;if reslt log exception
"RTN","MPITFOUT",88,0)
 K ICN,MFIT,MFET,MPISITE,ZTQUEUED,ZTREQ
"RTN","MPITFOUT",89,0)
 Q
"RTN","MPITFOUT",90,0)
 ;
"RTN","MPITFOUT",91,0)
BLDMFE(MFE,MFET,CNT) ;
"RTN","MPITFOUT",92,0)
 N TFDT,TF,INSTNUM,INSTNAM
"RTN","MPITFOUT",93,0)
 S TF=$P($G(^MPI(985.5,+MFE,0)),"^",1)
"RTN","MPITFOUT",94,0)
 S INSTNAM=$$WHAT^XUAF4(+TF,.01),INSTNUM=$$WHAT^XUAF4(+TF,99)
"RTN","MPITFOUT",95,0)
 S TFDT=$P($G(^MPI(985.5,MFE,2)),"^",5) I $G(TFDT)'="" S TFDT=$$HLDATE^HLFNC(TFDT)
"RTN","MPITFOUT",96,0)
 S HLA("HLS",CNT)="MFE"_HL("FS")_$G(MFET)_HL("FS")_INSTNUM_HL("FS")_TFDT_HL("FS")_INSTNUM_EC_INSTNAM_EC_"VA"_EC_$P($G(^MPIVET(+ICN,0)),"^")_EC_"ICN"_EC_"VA" S CNT=CNT+1
"RTN","MPITFOUT",97,0)
 Q
"RTN","MPITFOUT",98,0)
BLDZET(MFE,CNT) ;
"RTN","MPITFOUT",99,0)
 S TFEVT=$P($G(^MPI(985.5,MFE,2)),"^",6)
"RTN","MPITFOUT",100,0)
 S HLA("HLS",CNT)="ZET"_HL("FS")_TFEVT S CNT=CNT+1
"RTN","MPITFOUT",101,0)
 Q
"RTN","MPITFOUT",102,0)
EXCPT(EXC) ;log an exception
"RTN","MPITFOUT",103,0)
 Q
"RTN","MPITFOUT",104,0)
INIT(HL,HLEID) ;
"RTN","MPITFOUT",105,0)
 ;initialize HL7 variables
"RTN","MPITFOUT",106,0)
 ;N ER
"RTN","MPITFOUT",107,0)
 ;S ER=0
"RTN","MPITFOUT",108,0)
 ;D INIT^HLFNC2(HLEID,.HL)
"RTN","MPITFOUT",109,0)
 ;I $O(HL(""))="" S ER="1^"_$P(HL,U,2)
"RTN","MPITFOUT",110,0)
 ;I +ER'=1 I $G(HL)]"" S ER=$G(HL)
"RTN","MPITFOUT",111,0)
 ;Q ER
"RTN","MPITFOUT",112,0)
 N ER
"RTN","MPITFOUT",113,0)
 S ER=0
"RTN","MPITFOUT",114,0)
 D INIT^HLFNC2("MPI MFN-M05 SERVER",.HL)
"RTN","MPITFOUT",115,0)
 I $O(HL(""))="" S ER="1^"_$P(HL,U,2)
"RTN","MPITFOUT",116,0)
 I +ER'=1 I $G(HL)]"" S ER=$G(HL)
"RTN","MPITFOUT",117,0)
 Q ER
"RTN","MPITFOUT",118,0)
 ;
"RTN","MPITFOUT",119,0)
OLDIN ;This entry point is used to process the Treating Facility Master File Update Message in from a CMOR site that has the old messaging-received add-me TF from site that is still sending old messaging
"RTN","MPITFOUT",120,0)
 N OLDMSG
"RTN","MPITFOUT",121,0)
 S OLDMSG=1
"RTN","MPITFOUT",122,0)
IN ;This entry point is used to process the Treating Facility Master File Update Message in from a CMOR site that has the new messaging-received add-me TF from site that is still sending old messaging
"RTN","MPITFOUT",123,0)
 ;It is called by the MPI MFN-M05 CLIENT protocol when a MFN message
"RTN","MPITFOUT",124,0)
 ;is received
"RTN","MPITFOUT",125,0)
 ;There are no inputs or outputs
"RTN","MPITFOUT",126,0)
 ;
"RTN","MPITFOUT",127,0)
 N MPI,STATN,MPII,MSG,SG,MPIARR,PDFN,INST,MFUPT,PDLT,TFIEN,MPIERR
"RTN","MPITFOUT",128,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,ARR
"RTN","MPITFOUT",129,0)
 ;Process in the Treating Facility MFN msg
"RTN","MPITFOUT",130,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,MPI(MPII))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","MPITFOUT",131,0)
 ;do not rebroadcast if it is an acknowledgement MFK (code only used in the interim period between first site installing 2nd set of msg and last site installing second set of patches
"RTN","MPITFOUT",132,0)
 I HL("MTN")="MFN" D
"RTN","MPITFOUT",133,0)
 . N INST S INST=0 F  S INST=$O(MFI(ICN,INST)) Q:'INST  D
"RTN","MPITFOUT",134,0)
 .. Q:MPIARR("CMOR")=INST
"RTN","MPITFOUT",135,0)
 .. S ARR("DLT")=$P(MFI(ICN,INST),"^"),ARR("EVR")=$P(MFI(ICN,INST),"^",2),ARR("ICN")=ICN
"RTN","MPITFOUT",136,0)
 .. S MPIERR=$$UPDATE^MPIUTL4(ICN,INST,.ARR) I +$G(MPIERR)=-1 D ERROR^MPIA08(.ARR,.HL,MPIERR,234)
"RTN","MPITFOUT",137,0)
 . ;if this was sent from a CMOR site with new messaging
"RTN","MPITFOUT",138,0)
 . I $G(OLDMSG)'=1 D
"RTN","MPITFOUT",139,0)
 .. ;broadcast the tf out because this might be a result of a new add
"RTN","MPITFOUT",140,0)
 .. N BCST S BCST=$$BRDCST^MPITFOUT(ICN,"UPD","ALL","MUP")
"RTN","MPITFOUT",141,0)
 .. ;send the application ack back to sending site
"RTN","MPITFOUT",142,0)
 .. S HLEID=HL("EID"),HLEIDS=HL("EIDS"),HLARYTYP="LM",HLFORMAT=1
"RTN","MPITFOUT",143,0)
 .. S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_$S($G(MPIERR)]"":HL("FS")_$G(MPIERR),1:"")
"RTN","MPITFOUT",144,0)
 .. D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.HLRESTLA)
"RTN","MPITFOUT",145,0)
 K HLA
"RTN","MPITFOUT",146,0)
 Q
"RTN","MPITFOUT",147,0)
PICK ;check routine for segment entry point
"RTN","MPITFOUT",148,0)
 I $T(@SG)]"" D @SG
"RTN","MPITFOUT",149,0)
 I $T(@SG)="" Q
"RTN","MPITFOUT",150,0)
 Q
"RTN","MPITFOUT",151,0)
MSH ;;MSH
"RTN","MPITFOUT",152,0)
 ;process the MSH segment
"RTN","MPITFOUT",153,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","MPITFOUT",154,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPITFOUT",155,0)
 S MPIARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","MPITFOUT",156,0)
 Q
"RTN","MPITFOUT",157,0)
EVN ;;EVN
"RTN","MPITFOUT",158,0)
 ;process the EVN segment
"RTN","MPITFOUT",159,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPITFOUT",160,0)
 Q
"RTN","MPITFOUT",161,0)
PID ;;PID
"RTN","MPITFOUT",162,0)
 ;process the PID segment
"RTN","MPITFOUT",163,0)
 S PDFN=+$P(MSG,HL("FS"),4)
"RTN","MPITFOUT",164,0)
 Q
"RTN","MPITFOUT",165,0)
MFI ;;MFI
"RTN","MPITFOUT",166,0)
 ;process the MFI segment
"RTN","MPITFOUT",167,0)
 S MFI=MSG
"RTN","MPITFOUT",168,0)
 S MFUPT=$P(MSG,HL("FS"),2)
"RTN","MPITFOUT",169,0)
 S MPIARR("CMOR")=+$P(MSG,HL("FS"),8)
"RTN","MPITFOUT",170,0)
 Q
"RTN","MPITFOUT",171,0)
MFE ;;MFE
"RTN","MPITFOUT",172,0)
 ;process the MFE segment
"RTN","MPITFOUT",173,0)
 N HLCOMP,NXTSGMT
"RTN","MPITFOUT",174,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPITFOUT",175,0)
 S PDLT=$$FMDATE^HLFNC($P(MSG,HL("FS"),4))
"RTN","MPITFOUT",176,0)
 S ICN=$P($P(MSG,HL("FS"),5),HLCOMP,4)
"RTN","MPITFOUT",177,0)
 S INST=+$P(MSG,HL("FS"),5)
"RTN","MPITFOUT",178,0)
 S MFE(INST)=MSG
"RTN","MPITFOUT",179,0)
 S MFI(ICN,INST)=PDLT
"RTN","MPITFOUT",180,0)
 Q
"RTN","MPITFOUT",181,0)
MFA ;;MFA
"RTN","MPITFOUT",182,0)
 ;process the MFE segment
"RTN","MPITFOUT",183,0)
 N HLCOMP,NXTSGMT,STATUS
"RTN","MPITFOUT",184,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPITFOUT",185,0)
 S PDLT=$$FMDATE^HLFNC($P(MSG,HL("FS"),4))
"RTN","MPITFOUT",186,0)
 S INST=+$P(MSG,HL("FS"),3)
"RTN","MPITFOUT",187,0)
 S STATUS=$P(MSG,HL("FS"),5)
"RTN","MPITFOUT",188,0)
 I $D(^XTMP("MPI"_HL("ETN")_"%"_ICN,+MPIARR("SENDING SITE"),0)) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,+MPIARR("SENDING SITE"),0)
"RTN","MPITFOUT",189,0)
 S MFA(INST)=STATUS
"RTN","MPITFOUT",190,0)
 I $E(STATUS,1)="U" K ^XTMP("MPI"_HL("ETN")_"%"_ICN,+MPIARR("SENDING SITE"),INST,0) S MPIARR("ICN")=$G(ICN) I $G(MULTEXC)'=1 D ERROR^MPIA08(.MPIARR,.HL,$P(STATUS,HLCOMP,2),212) S MULTEXC=1
"RTN","MPITFOUT",191,0)
 I $E(STATUS,1)="S" D
"RTN","MPITFOUT",192,0)
 .K ^XTMP("MPI"_HL("ETN")_"%"_ICN,+MPIARR("SENDING SITE"),INST,0)
"RTN","MPITFOUT",193,0)
 .I '$O(^XTMP("MPI"_HL("ETN")_"%"_ICN,+MPIARR("SENDING SITE"),0)) K ^XTMP("MPI"_HL("ETN")_"%"_ICN,+MPIARR("SENDING SITE"))
"RTN","MPITFOUT",194,0)
 I '$O(^XTMP("MPI"_HL("ETN")_"%"_ICN,0)) K ^XTMP("MPI"_HL("ETN")_"%"_ICN)
"RTN","MPITFOUT",195,0)
 Q
"RTN","MPITFOUT",196,0)
ZET ;;ZET
"RTN","MPITFOUT",197,0)
 ;process Patient's Date Last Treated Event Type, ZET segment
"RTN","MPITFOUT",198,0)
 N PDLTET
"RTN","MPITFOUT",199,0)
 S PDLTET=$P(MSG,HL("FS"),2)
"RTN","MPITFOUT",200,0)
 S $P(MFI(ICN,INST),"^",2)=PDLTET
"RTN","MPITFOUT",201,0)
 Q
"RTN","MPITFOUT",202,0)
RSP ;response process logic entry point
"RTN","MPITFOUT",203,0)
 ;initialize multiple exception variable
"RTN","MPITFOUT",204,0)
 N MULTEXC S MULTEXC=0
"RTN","MPITFOUT",205,0)
 D HLLOG^MPIMHL($G(HL("ETN")),$P($G(HL("SFN")),$E(HL("ECH"),1)))
"RTN","MPITFOUT",206,0)
 D IN
"RTN","MPITFOUT",207,0)
 Q
"RTN","MPITFOUT",208,0)
ROUTE ;routing logic entry point
"RTN","MPITFOUT",209,0)
 N MPILP,MPILK,INDEX,CNT,MPISN,MPILKS,MPIASSOC
"RTN","MPITFOUT",210,0)
 K HLL
"RTN","MPITFOUT",211,0)
 S CNT=1
"RTN","MPITFOUT",212,0)
 I '$D(ICN) Q  ;log exception
"RTN","MPITFOUT",213,0)
 S MPILP="" F  S MPILP=$O(^MPI(985.5,"AM",ICN,MPILP)) Q:'MPILP  D
"RTN","MPITFOUT",214,0)
 . S MPILKS(MPILP)=""
"RTN","MPITFOUT",215,0)
 . N MPIIEN S MPIIEN=$O(^MPI(985.5,"AM",ICN,MPILP,0)) I $D(MPIIEN) D
"RTN","MPITFOUT",216,0)
 .. S MPIASSOC=0 F  S X=$O(^MPI(985.5,MPIIEN,71,X)) Q:'X  I $D(^MPI(985.5,MPIIEN,71,X,0)) S MPILKS($P(^MPI(985.5,MPIIEN,71,X,0),"^"))=""
"RTN","MPITFOUT",217,0)
 S MPILP="" F  S MPILP=$O(MPILKS(MPILP)) Q:'MPILP  D
"RTN","MPITFOUT",218,0)
 . Q:MPILP=$$IEN^XUAF4("200HD")  ;don't send message to HDR - per their request
"RTN","MPITFOUT",219,0)
 . Q:MPILP=$$IEN^XUAF4("200HD1")  ;don't send message to HDR - per their request
"RTN","MPITFOUT",220,0)
 . Q:MPILP=$$IEN^XUAF4("200RS")  ;don't send message to RSA - per their request
"RTN","MPITFOUT",221,0)
 . Q:$E(MPILP,1,4)="200T"  ;don't send message to HTH - per their request
"RTN","MPITFOUT",222,0)
 . D LINK^HLUTIL3(MPILP,.MPILK)
"RTN","MPITFOUT",223,0)
 . S INDEX=$O(MPILK(0)) I +INDEX>0 S HLL("LINKS",CNT)="MPI MFN-M05 CLIENT"_"^"_MPILK(INDEX) S CNT=CNT+1 K MPILK D
"RTN","MPITFOUT",224,0)
 .. ;set the XTMP global
"RTN","MPITFOUT",225,0)
 .. S MPISN=$$STA^XUAF4(MPILP) I MPISN S ^XTMP("MPI"_HL("ETN")_"%"_ICN,MPISN,0)="A"
"RTN","MPITFOUT",226,0)
 K ICN
"RTN","MPITFOUT",227,0)
 Q
"RTN","MPITFOUT",228,0)
TEST ;
"RTN","MPITFOUT",229,0)
 W $$REPROC^HLUTIL(39266,"D IN^MPITFOUT")
"RTN","MPITFOUT",230,0)
 Q
"RTN","MPITFOUT",231,0)
RECONCIL ;
"RTN","MPITFOUT",232,0)
 Q
"RTN","MPIUMF")
0^190^B4008837
"RTN","MPIUMF",1,0)
MPIUMF ;GFT-TREATING FACILITY UPDATE ;10/24/97
"RTN","MPIUMF",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**1,24**;30 Apr 99
"RTN","MPIUMF",3,0)
 ;;CLEANUP OF VARIABLES
"RTN","MPIUMF",4,0)
 ;
"RTN","MPIUMF",5,0)
 N MPITFD,ERRHL,MPIFAC,MPICN,MPIDATA,MPISN,MPIFACN,DIC,X,Y,MPIDA,STFD,I
"RTN","MPIUMF",6,0)
 K ^TMP("HLS",$J),ERRHL
"RTN","MPIUMF",7,0)
 S MPIFAC=$G(HL("SFN")),MPITFD=0
"RTN","MPIUMF",8,0)
 Q:MPIFAC=""
"RTN","MPIUMF",9,0)
 S MPIFAC=$$LKUP^XUAF4(MPIFAC)
"RTN","MPIUMF",10,0)
 F I=1:1 Q:'$D(MPITMP(I))!($D(ERRHL))  I $E(MPITMP(I),1,3)="MFE" S MPICN=$P($P(MPITMP(I),HL("FS"),5),$E(HL("ECH")),4) D CHECK(MPIFAC,MPICN,.ERRHL) Q:$D(ERRHL)  D
"RTN","MPIUMF",11,0)
 .S MPIDATA=$P(MPITMP(I),HL("FS"),5)
"RTN","MPIUMF",12,0)
 .S MPISN=$P(MPIDATA,$E(HL("ECH"))),MPICN=+$P(MPIDATA,$E(HL("ECH")),4)
"RTN","MPIUMF",13,0)
 .Q:MPISN=""
"RTN","MPIUMF",14,0)
 .S MPIFACN=$$LKUP^XUAF4(MPISN)
"RTN","MPIUMF",15,0)
 .I MPIFACN'>0 S ERRHL="INVALID TREATING FACILITY!" Q
"RTN","MPIUMF",16,0)
 .S DIC="^MPIVET(",DIC(0)="",X=+MPICN D ^DIC I Y<0 S ERRHL="No Patient with this ICN found in MPIVET file" D EXCEPT^MPIUTL2(+MPICN,ERRHL) Q
"RTN","MPIUMF",17,0)
 .S MPIDA=+Y
"RTN","MPIUMF",18,0)
 .S STFD=$P(MPITMP(I),HL("FS"),4)
"RTN","MPIUMF",19,0)
 .Q:$D(^MPI(985.5,"AM",MPICN,MPIFACN))
"RTN","MPIUMF",20,0)
 .S DIC="^MPI(985.5,",DIC(0)="L",DIC("DR")="1////^S X=MPICN",X=MPIFACN D FILE^DICN
"RTN","MPIUMF",21,0)
 Q
"RTN","MPIUMF",22,0)
 ;
"RTN","MPIUMF",23,0)
CHECK(MPIFAC,MPICN,ERRHL) ;
"RTN","MPIUMF",24,0)
 N CMOR
"RTN","MPIUMF",25,0)
 S CMOR=$$VALPPF^MPIUTL2(MPIFAC,MPICN) ;**24
"RTN","MPIUMF",26,0)
 I 'CMOR S ERRHL="Sending facility NOT the patient's CMOR! Site sent is "_$G(HL("SFN")) D EXCEPT^MPIUTL2(MPICN,ERRHL)
"RTN","MPIUMF",27,0)
 Q
"RTN","MPIUMF",28,0)
 ;
"RTN","MPIUTL")
0^191^B13088910
"RTN","MPIUTL",1,0)
MPIUTL ;GFT/CONTRACTOR;CHECK DIGIT CALCULATION ;17 Dec 1996
"RTN","MPIUTL",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**14**;30 Apr 99
"RTN","MPIUTL",3,0)
 ;
"RTN","MPIUTL",4,0)
 ;
"RTN","MPIUTL",5,0)
CHECKDG(NUM) ;Check Digit Calculation
"RTN","MPIUTL",6,0)
 N I,J,LTH,MPID,MPIMAP,MPIT,TAB,VAL,SUM
"RTN","MPIUTL",7,0)
 I $L(NUM)'=16 D
"RTN","MPIUTL",8,0)
 .S LTH=($L(NUM)+1) F I=LTH:1:16 S NUM="0"_NUM
"RTN","MPIUTL",9,0)
 F MPIT=1:1:6  D
"RTN","MPIUTL",10,0)
 .; For each check digit, compute a value
"RTN","MPIUTL",11,0)
 .F MPID=1:1:16  D
"RTN","MPIUTL",12,0)
 ..S MPIMAP(MPIT,0,"MAP")=0
"RTN","MPIUTL",13,0)
 ..S MPIMAP(MPIT,MPID)=$E(NUM,MPID),VAL=MPIMAP(MPIT,MPID)
"RTN","MPIUTL",14,0)
 ..S SUM=(MPIMAP(MPIT,MPID)+(MPIMAP(MPIT,MPID-1,"MAP")))#10
"RTN","MPIUTL",15,0)
 ..S MPIMAP(MPIT,MPID,"MAP")=$P($P($T(@MPIT+SUM),";;",2),";",MPID)
"RTN","MPIUTL",16,0)
 .S TAB(MPIT)=MPIMAP(MPIT,16,"MAP")
"RTN","MPIUTL",17,0)
 .Q
"RTN","MPIUTL",18,0)
 S SUM=""
"RTN","MPIUTL",19,0)
 F J=1:1:6  D
"RTN","MPIUTL",20,0)
 .S SUM=SUM_TAB(J)
"RTN","MPIUTL",21,0)
 Q SUM
"RTN","MPIUTL",22,0)
 ;
"RTN","MPIUTL",23,0)
 ;
"RTN","MPIUTL",24,0)
 ;
"RTN","MPIUTL",25,0)
1 ;;4;9;7;4;4;4;4;0;9;9;7;7;8;4;6;8
"RTN","MPIUTL",26,0)
 ;;5;0;6;5;1;1;2;3;6;5;3;5;7;6;5;5
"RTN","MPIUTL",27,0)
 ;;9;4;2;0;3;7;5;1;7;1;0;9;0;3;2;2
"RTN","MPIUTL",28,0)
 ;;3;2;1;7;7;0;6;9;2;4;1;1;3;8;1;0
"RTN","MPIUTL",29,0)
 ;;2;3;3;9;5;9;9;2;3;8;6;0;1;9;8;1
"RTN","MPIUTL",30,0)
 ;;1;6;8;2;0;6;1;7;4;3;5;4;4;2;3;3
"RTN","MPIUTL",31,0)
 ;;7;8;9;1;2;2;0;8;1;6;8;6;9;0;0;4
"RTN","MPIUTL",32,0)
 ;;6;7;0;8;8;8;3;4;5;2;4;3;5;1;4;6
"RTN","MPIUTL",33,0)
 ;;0;1;5;6;6;3;8;5;0;0;9;2;2;5;9;7
"RTN","MPIUTL",34,0)
 ;;8;5;4;3;9;5;7;6;8;7;2;8;6;7;7;9
"RTN","MPIUTL",35,0)
2 ;;4;7;3;4;6;0;0;1;2;9;5;6;2;6;1;1
"RTN","MPIUTL",36,0)
 ;;0;1;9;2;2;6;4;7;9;8;4;9;7;8;0;7
"RTN","MPIUTL",37,0)
 ;;2;6;4;8;9;2;8;6;7;0;9;3;5;0;8;4
"RTN","MPIUTL",38,0)
 ;;8;0;5;1;3;8;2;3;4;1;0;0;9;1;3;0
"RTN","MPIUTL",39,0)
 ;;5;3;7;0;7;9;9;9;6;2;1;2;8;9;4;8
"RTN","MPIUTL",40,0)
 ;;1;9;8;5;1;5;1;0;5;7;2;8;6;7;7;9
"RTN","MPIUTL",41,0)
 ;;9;5;1;9;5;4;6;5;0;6;3;4;1;3;9;2
"RTN","MPIUTL",42,0)
 ;;3;4;0;3;8;1;3;4;8;5;6;5;4;2;5;5
"RTN","MPIUTL",43,0)
 ;;7;2;6;6;0;3;7;8;1;4;7;1;0;4;6;3
"RTN","MPIUTL",44,0)
 ;;6;8;2;7;4;7;5;2;3;3;8;7;3;5;2;6
"RTN","MPIUTL",45,0)
3 ;;8;5;2;3;2;7;3;4;6;3;6;1;6;4;5;0
"RTN","MPIUTL",46,0)
 ;;9;7;3;9;9;6;0;7;5;9;4;5;1;8;6;2
"RTN","MPIUTL",47,0)
 ;;1;4;4;5;0;0;4;2;2;6;1;2;8;9;8;6
"RTN","MPIUTL",48,0)
 ;;4;1;0;6;3;3;7;6;8;8;3;8;3;1;1;4
"RTN","MPIUTL",49,0)
 ;;0;0;9;0;5;1;5;3;4;0;5;7;7;2;9;3
"RTN","MPIUTL",50,0)
 ;;3;6;6;2;6;4;6;8;7;1;7;4;2;7;7;9
"RTN","MPIUTL",51,0)
 ;;5;8;1;4;7;2;8;0;1;7;2;3;0;0;4;8
"RTN","MPIUTL",52,0)
 ;;2;9;7;7;4;9;9;1;3;5;0;9;9;6;0;1
"RTN","MPIUTL",53,0)
 ;;7;2;8;1;8;5;1;5;0;2;9;0;5;3;2;7
"RTN","MPIUTL",54,0)
 ;;6;3;5;8;1;8;2;9;9;4;8;6;4;5;3;5
"RTN","MPIUTL",55,0)
4 ;;5;0;3;6;4;0;6;7;1;6;4;3;5;5;6;6
"RTN","MPIUTL",56,0)
 ;;0;9;7;7;1;3;4;5;2;9;6;6;9;6;7;1
"RTN","MPIUTL",57,0)
 ;;2;3;5;5;9;2;5;6;4;4;8;1;3;4;2;4
"RTN","MPIUTL",58,0)
 ;;4;5;4;1;0;4;2;4;6;7;5;2;0;1;5;3
"RTN","MPIUTL",59,0)
 ;;7;1;2;3;6;6;3;0;0;5;9;8;2;9;9;2
"RTN","MPIUTL",60,0)
 ;;3;4;0;4;8;8;9;9;9;0;7;0;4;2;0;0
"RTN","MPIUTL",61,0)
 ;;6;7;6;9;2;5;1;3;5;8;2;4;8;3;8;5
"RTN","MPIUTL",62,0)
 ;;1;8;8;8;3;7;0;2;3;2;3;9;7;0;4;9
"RTN","MPIUTL",63,0)
 ;;9;6;9;0;5;1;7;1;8;3;0;7;1;7;1;8
"RTN","MPIUTL",64,0)
 ;;8;2;1;2;7;9;8;8;7;1;1;5;6;8;3;7
"RTN","MPIUTL",65,0)
5 ;;4;4;0;2;2;9;3;2;2;6;5;1;2;7;2;7
"RTN","MPIUTL",66,0)
 ;;8;3;6;9;0;3;9;7;4;7;6;6;4;9;0;0
"RTN","MPIUTL",67,0)
 ;;2;7;1;8;3;5;2;5;1;8;9;0;9;3;6;2
"RTN","MPIUTL",68,0)
 ;;7;0;5;0;9;4;1;1;6;1;7;8;8;2;3;4
"RTN","MPIUTL",69,0)
 ;;5;1;7;7;4;6;0;8;7;5;2;2;1;5;4;9
"RTN","MPIUTL",70,0)
 ;;1;6;9;3;6;1;8;9;0;4;4;3;7;0;1;8
"RTN","MPIUTL",71,0)
 ;;0;9;2;1;5;0;4;0;3;9;1;7;0;6;7;3
"RTN","MPIUTL",72,0)
 ;;9;2;8;4;8;7;7;6;5;0;0;9;3;1;8;6
"RTN","MPIUTL",73,0)
 ;;3;5;3;6;1;8;6;3;8;3;3;5;6;8;9;5
"RTN","MPIUTL",74,0)
 ;;6;8;4;5;7;2;5;4;9;2;8;4;5;4;5;1
"RTN","MPIUTL",75,0)
6 ;;6;2;8;2;7;3;3;8;4;9;2;4;4;1;6;1
"RTN","MPIUTL",76,0)
 ;;8;1;9;3;1;6;7;9;2;4;7;5;9;6;2;0
"RTN","MPIUTL",77,0)
 ;;5;3;2;9;0;1;9;4;8;7;4;6;3;7;8;9
"RTN","MPIUTL",78,0)
 ;;0;7;0;5;8;2;6;7;6;5;0;7;1;9;9;4
"RTN","MPIUTL",79,0)
 ;;2;9;1;4;9;9;4;0;1;3;9;3;0;2;5;6
"RTN","MPIUTL",80,0)
 ;;7;0;3;8;6;8;0;1;3;0;5;9;2;8;3;8
"RTN","MPIUTL",81,0)
 ;;9;6;5;6;3;4;2;6;7;6;3;2;7;4;1;3
"RTN","MPIUTL",82,0)
 ;;4;8;6;7;4;5;1;3;5;1;6;1;6;3;0;5
"RTN","MPIUTL",83,0)
 ;;3;5;4;1;5;7;5;5;9;2;8;0;8;5;7;7
"RTN","MPIUTL",84,0)
 ;;1;4;7;0;2;0;8;2;0;8;1;8;5;0;4;2
"RTN","MPIUTL",85,0)
 ;
"RTN","MPIUTL",86,0)
MERGE(TO,FROM,DIE,DA) ;
"RTN","MPIUTL",87,0)
 Q 
"RTN","MPIUTL",88,0)
 ;;NO LONGER USED
"RTN","MPIUTL",89,0)
 ;'TO' AND 'FROM' MUST BE CALL-BY-REFERENCE;  'DIE' AND 'DA' OPTIONAL
"RTN","MPIUTL",90,0)
 N P,V,NEWNODE,OLDNODE,SUB,DR
"RTN","MPIUTL",91,0)
 S SUB="",DR=0 D SUB I DR S DR="Q" D ^DIE
"RTN","MPIUTL",92,0)
 Q
"RTN","MPIUTL",93,0)
 ;
"RTN","MPIUTL",94,0)
SUB Q
"RTN","MPIUTL",95,0)
 ;; NO LONGER USED
"RTN","MPIUTL",96,0)
 S SUB=$O(FROM(SUB)) Q:SUB=""
"RTN","MPIUTL",97,0)
 S OLDNODE=FROM(SUB) G SUB:OLDNODE?."^"
"RTN","MPIUTL",98,0)
 S NEWNODE=$G(TO(SUB))
"RTN","MPIUTL",99,0)
 F P=1:1:$L(OLDNODE,U) S V=$P(OLDNODE,U,P) I V]"",$P(NEWNODE,U,P)="" D
"RTN","MPIUTL",100,0)
 .S $P(NEWNODE,U,P)=V I $G(DA),$G(DIE) D
"RTN","MPIUTL",101,0)
 ..I V[";" S V="^S X="_$$QUOTE(V)
"RTN","MPIUTL",102,0)
 ..S DR=DR+1,DR(1,DIE,DR)=$O(^DD(DIE,"GL",SUB,P,0))_"////"_V
"RTN","MPIUTL",103,0)
 S TO(SUB)=NEWNODE G SUB
"RTN","MPIUTL",104,0)
 ;
"RTN","MPIUTL",105,0)
QUOTE(X) ;
"RTN","MPIUTL",106,0)
 N I F I=0:1 S I=$F(X,"""",I) Q:'I  S X=$E(X,1,I-1)_$E(X,I-1,999)
"RTN","MPIUTL",107,0)
 Q """"_X_""""
"RTN","MPIUTL",108,0)
 ;
"RTN","MPIUTL1")
0^192^B6268176
"RTN","MPIUTL1",1,0)
MPIUTL1 ;GRR/PSI-MPI/GATEWAY PROJECT  ;12/11/96
"RTN","MPIUTL1",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**4,2,6,24,32**;30 Apr 99
"RTN","MPIUTL1",3,0)
 ;
"RTN","MPIUTL1",4,0)
RETREIVE        ;RETREIVE HLNODES AND PLACE IN LOCAL ARRAY
"RTN","MPIUTL1",5,0)
 K MPITMP N MPIMID,I
"RTN","MPIUTL1",6,0)
 S MPIMID=HL("MID")
"RTN","MPIUTL1",7,0)
 F I=1:1 X HLNEXT Q:(HLQUIT'>0)  S MPITMP(I)=HLNODE
"RTN","MPIUTL1",8,0)
 Q
"RTN","MPIUTL1",9,0)
 ;;
"RTN","MPIUTL1",10,0)
REVMSH(MPIMSH)    ;REFORMAT TO SEND BACK IN ACKNOWLEDGEMENT
"RTN","MPIUTL1",11,0)
 N SA,SF,RA,RF,M1
"RTN","MPIUTL1",12,0)
 S SA=$P(MPIMSH,HL("FS"),5)
"RTN","MPIUTL1",13,0)
 S SF=$P(MPIMSH,HL("FS"),6)
"RTN","MPIUTL1",14,0)
 S RA=$P(MPIMSH,HL("FS"),3)
"RTN","MPIUTL1",15,0)
 S RF=$P(MPIMSH,HL("FS"),4)
"RTN","MPIUTL1",16,0)
 S M1="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI"_HL("FS")_"MPI"_HL("FS")_RA_HL("FS")_RF_HL("FS")_$P(MPIMSH,HL("FS"),7)_HL("FS")_HL("FS")_"ACK"_$E(HL("ECH"))_"Q02"_HL("FS")_$P(MPIMSH,HL("FS"),10)_HL("FS")_"P"_HL("FS")_"2.3"
"RTN","MPIUTL1",17,0)
 ;**32 changed ADT to ACK and A31 to Q02
"RTN","MPIUTL1",18,0)
 Q M1
"RTN","MPIUTL1",19,0)
 ;;
"RTN","MPIUTL1",20,0)
REVBSH(MPIBSH) ;
"RTN","MPIUTL1",21,0)
 N BSA,BSF,BRA,BRF,M2,BCID
"RTN","MPIUTL1",22,0)
 S BSA=$P(MPIBSH,HL("FS"),5),BSF=$P(MPIBSH,HL("FS"),6)
"RTN","MPIUTL1",23,0)
 S BRA=$P(MPIBSH,HL("FS"),3),BRF=$P(MPIBSH,HL("FS"),4),BCID=$P(MPIBSH,HL("FS"),11)
"RTN","MPIUTL1",24,0)
 S M2="BHS"_HL("FS")_HL("ECH")_HL("FS")_BSA_HL("FS")_BSF_HL("FS")_BRA_HL("FS")_BRF_HL("FS")_$P(MPIBSH,HL("FS"),7)_HL("FS")_HL("FS")_HL("FS")_HL("FS")_BCID
"RTN","MPIUTL1",25,0)
 Q M2
"RTN","MPIUTL1",26,0)
 ;;
"RTN","MPIUTL1",27,0)
ERROR(ERRHL) ;PROCESS ERROR AND SEND APPLICATION REJECT
"RTN","MPIUTL1",28,0)
 ;;**32 -- NO LONGER USED
"RTN","MPIUTL1",29,0)
 ;N MPINMSH,MPIFACN,MPIOUT
"RTN","MPIUTL1",30,0)
 ;S MPINMSH=$$REVMSH(MPITMP(1))
"RTN","MPIUTL1",31,0)
 ;S ^TMP("HLS",$J,1)=MPINMSH
"RTN","MPIUTL1",32,0)
 ;S MPIFACN=$G(HL("SFN"))
"RTN","MPIUTL1",33,0)
 ;S ^TMP("HLS",$J,2)="MSA"_HL("FS")_"AR"_HL("FS")_$P(MPINMSH,HL("FS"),9)_HL("FS")_ERRHL
"RTN","MPIUTL1",34,0)
 ;S $P(^TMP("HLS",$J,1),HL("FS"),9)="ACK"_$E(HL("ECH"))_"A28"
"RTN","MPIUTL1",35,0)
 ;I $G(MPIDIRQ)'=1 S $P(HLL("LINKS",1),"^")="MPI A28" D GENACK(MPIFACN)
"RTN","MPIUTL1",36,0)
 ;I $G(MPIDIRQ)=1 S @MPIOUT@(1)=^TMP("HLS",$J,1),@MPIOUT@(2)=^TMP("HLS",$J,2)
"RTN","MPIUTL1",37,0)
 Q
"RTN","MPIUTL1",38,0)
 ;
"RTN","MPIUTL1",39,0)
SENDA31(MPIPICN) ;;SEND A31 TYPE EVENT TO DHCP (RETURN PATIENT ICN)
"RTN","MPIUTL1",40,0)
 ;**32 NO LONGER USED
"RTN","MPIUTL1",41,0)
 ;K ^TMP("HLS",$J)
"RTN","MPIUTL1",42,0)
 ;N MPICNT,MPINMSH
"RTN","MPIUTL1",43,0)
 ;S HLSDT="A31",GBL="^TMP(""HLS"",$J)"
"RTN","MPIUTL1",44,0)
 ;S MPICNT=0
"RTN","MPIUTL1",45,0)
 ;S MPINMSH=$$REVMSH^MPIUTL1(MPITMP(1))
"RTN","MPIUTL1",46,0)
 ;S $P(MPINMSH,HL("FS"),9)="ADT"_$E(HL("ECH"))_"A31"
"RTN","MPIUTL1",47,0)
 ;S MPICNT=MPICNT+1
"RTN","MPIUTL1",48,0)
 ;S @GBL@(MPICNT)=MPINMSH
"RTN","MPIUTL1",49,0)
 ;I $G(MPIDIRQ)=1 D
"RTN","MPIUTL1",50,0)
 ;.S MPICNT=MPICNT+1
"RTN","MPIUTL1",51,0)
 ;.S @GBL@(MPICNT)="MSA"_HL("FS")_$S($D(ERRHL):"AR",1:"AA")_HL("FS")_$P(MPINMSH,HL("FS"),9)_$G(ERRHL)
"RTN","MPIUTL1",52,0)
 ;S MPICNT=MPICNT+1
"RTN","MPIUTL1",53,0)
 ;N %,%H,%I,X,EVNDATE,EVN
"RTN","MPIUTL1",54,0)
 ;D NOW^%DTC S EVNDATE=$$HLDATE^HLFNC(%)
"RTN","MPIUTL1",55,0)
 ;S EVN="EVN"_HL("FS")_"A31"_HL("FS")_EVNDATE_HL("FS")_HL("FS")_"95"
"RTN","MPIUTL1",56,0)
 ;S @GBL@(MPICNT)=EVN
"RTN","MPIUTL1",57,0)
 ;S MPICNT=MPICNT+1
"RTN","MPIUTL1",58,0)
 ;S @GBL@(MPICNT)=MPITMP(3),$P(@GBL@(MPICNT),HL("FS"),3)=MPIPICN
"RTN","MPIUTL1",59,0)
 ;I $G(MPIDIRQ)'=1 S MPIA31=1,$P(HLL("LINKS",1),"^")="MPI A31" D GENACK(MPIFACN) K MPIA31 D GENERATE^HLMA("MPI A31","GM",1,,.HLRST)
"RTN","MPIUTL1",60,0)
 Q
"RTN","MPIUTL1",61,0)
 ;;
"RTN","MPIUTL1",62,0)
NAME(N) ;;SEPERATE NAME
"RTN","MPIUTL1",63,0)
 ;;**24 - no longer being used
"RTN","MPIUTL1",64,0)
 ;N NM2,NM,LST,FST,MID,SUFF,PRE
"RTN","MPIUTL1",65,0)
 ;S LST=$P(N,$E(HL("ECH"))),FST=$P(N,$E(HL("ECH")),2),MID=$P(N,$E(HL("ECH")),3)
"RTN","MPIUTL1",66,0)
 ;S SUFF=$P(N,$E(HL("ECH")),4),PRE=$P(N,$E(HL("ECH")),5)
"RTN","MPIUTL1",67,0)
 ;S NM=LST_","_FST
"RTN","MPIUTL1",68,0)
 ;I MID'="" S NM=NM_" "_MID
"RTN","MPIUTL1",69,0)
 ;I SUFF'="" S NM=NM_" "_SUFF
"RTN","MPIUTL1",70,0)
 ;I PRE'="" S NM=NM_" "_PRE
"RTN","MPIUTL1",71,0)
 ;D NAME^MPIPID2(.NM)
"RTN","MPIUTL1",72,0)
 ;S NM2=$P(NM,",",2)
"RTN","MPIUTL1",73,0)
 ;S M(1)=$P(NM,",",1),M(2)=$P(NM2," ")
"RTN","MPIUTL1",74,0)
 ;S M(3)=$P(NM2," ",2) I M(3)="""""" S M(3)=""
"RTN","MPIUTL1",75,0)
 ;S M(5)=$P(NM2," ",3) I M(5)="""""" S M(5)=""
"RTN","MPIUTL1",76,0)
 ;S M(4)=$P(NM2," ",4) I M(4)="""""" S M(4)=""
"RTN","MPIUTL1",77,0)
 Q
"RTN","MPIUTL1",78,0)
 ;;
"RTN","MPIUTL1",79,0)
STRIPDQ(X) ;
"RTN","MPIUTL1",80,0)
 N Y S Y=$TR(X,"""""","")
"RTN","MPIUTL1",81,0)
 Q Y
"RTN","MPIUTL1",82,0)
GENACK(MPIFAC) ;;GENERATE ACKNOWLEDGEMENT MESSAGE
"RTN","MPIUTL1",83,0)
 ;N MPIFID
"RTN","MPIUTL1",84,0)
 ;Q:MPIFAC=""
"RTN","MPIUTL1",85,0)
 ;;;S HLMTIENS=$O(^HL(772,"C",HL("MID"),0))
"RTN","MPIUTL1",86,0)
 ;;;S HLMTIENS=$O(^HL(772,"C",HL("MID"),HLMTIENS))
"RTN","MPIUTL1",87,0)
 ;S $P(HLL("LINKS",1),"^",2)=$O(^HLCS(870,"C",MPIFAC,""))
"RTN","MPIUTL1",88,0)
 ;Q:$G(MPIA31)=1
"RTN","MPIUTL1",89,0)
 ;N MPIFERR,MPIRES
"RTN","MPIUTL1",90,0)
 ;;;D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.MPIFERR)
"RTN","MPIUTL1",91,0)
 Q
"RTN","MPIUTL10")
0^193^B27535236
"RTN","MPIUTL10",1,0)
MPIUTL10 ;BIR/CMC-Utilities ;4/5/04
"RTN","MPIUTL10",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**27**;30 Apr 99
"RTN","MPIUTL10",3,0)
 ;
"RTN","MPIUTL10",4,0)
EXACT(SEG,MPIA) ; checking for exact match on Name, SSN, DOB, Sex, including name w/middle name vs middle initial
"RTN","MPIUTL10",5,0)
 D HL^MPIVTQ
"RTN","MPIUTL10",6,0)
 N COND,C,FIRST,LAST,MID,SUF,PRE,NODE,BIRTH,SEX,SSN
"RTN","MPIUTL10",7,0)
 S PRE="",SUF="",MID="",FIRST="",SEX="",SSN="",BIRTH=""
"RTN","MPIUTL10",8,0)
 F C=1:1 S COND=$P(SEG,MPIREPS,C) Q:COND=""  D
"RTN","MPIUTL10",9,0)
 .I COND["@00108.1" S LAST=$P(COND,MPICOMPS,3) Q
"RTN","MPIUTL10",10,0)
 .I COND["@00108.2" S FIRST=$P(COND,MPICOMPS,3) Q
"RTN","MPIUTL10",11,0)
 .I COND["@00108.3" S MID=$P(COND,MPICOMPS,3) Q
"RTN","MPIUTL10",12,0)
 .I COND["@00108.4" S SUF=$P(COND,MPICOMPS,3) Q
"RTN","MPIUTL10",13,0)
 .I COND["@00108.5" S PRE=$P(COND,MPICOMPS,3) Q
"RTN","MPIUTL10",14,0)
 .I COND["@00110" S BIRTH=$$FMDATE^HLFNC($P(COND,MPICOMPS,3)) Q
"RTN","MPIUTL10",15,0)
 .I COND["@00111" S SEX=$P(COND,MPICOMPS,3) Q
"RTN","MPIUTL10",16,0)
 .I COND["@00122" S SSN=$P(COND,MPICOMPS,3) Q
"RTN","MPIUTL10",17,0)
 D EXACT2(SSN,SEX,LAST,FIRST,SUF,PRE,MID,BIRTH,.MPIA)
"RTN","MPIUTL10",18,0)
 Q
"RTN","MPIUTL10",19,0)
EXACT2(SSN,SEX,LAST,FIRST,SUF,PRE,MID,BIRTH,MPIA) ; ALREADY have field haves
"RTN","MPIUTL10",20,0)
 N ICN,FOUND,NODE,IDS,MPIN,QNM
"RTN","MPIUTL10",21,0)
 K FOUND
"RTN","MPIUTL10",22,0)
 Q:'$D(SSN)!('$D(SEX))!('$D(LAST))!('$D(BIRTH))
"RTN","MPIUTL10",23,0)
 Q:SSN=""!(SSN["P")  ; no ssn or psuedo
"RTN","MPIUTL10",24,0)
 Q:SEX=""!(BIRTH="")  ; no sex or dob
"RTN","MPIUTL10",25,0)
 Q:'$D(^MPIVET("SSN",SSN))  ; SSN not known on MPI
"RTN","MPIUTL10",26,0)
 S ICN=0 F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:ICN=""!($D(FOUND))  D
"RTN","MPIUTL10",27,0)
 .; $O thru entries with SSN
"RTN","MPIUTL10",28,0)
 .S NODE=$G(^MPIVET(ICN,0))
"RTN","MPIUTL10",29,0)
 .S IDS=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIUTL10",30,0)
 .Q:IDS'=""&(IDS'="P")
"RTN","MPIUTL10",31,0)
 .; ^ IF NOT PERMANENT QUIT --including null since not all ICNs have id states yet
"RTN","MPIUTL10",32,0)
 .Q:$P(NODE,"^",2)'=LAST!($P(NODE,"^",3)'=FIRST)  ; Not same name
"RTN","MPIUTL10",33,0)
 .Q:$P(NODE,"^",8)'=BIRTH!($P(NODE,"^",13)'=SEX)  ; not same sex or dob
"RTN","MPIUTL10",34,0)
 .S MPIN=$P(NODE,"^",2,6)
"RTN","MPIUTL10",35,0)
 .S QNM=LAST_"^"_FIRST_"^"_MID_"^"_PRE_"^"_SUF
"RTN","MPIUTL10",36,0)
 .I QNM=MPIN S FOUND=1
"RTN","MPIUTL10",37,0)
 .I QNM'=MPIN&(MID'=$P(MPIN,"^",3)) D
"RTN","MPIUTL10",38,0)
 .; names not the same exactly but first and last are - checking for same first, last and middle name vs middle initial
"RTN","MPIUTL10",39,0)
 .I $L(MID)>1&($L($P(MPIN,"^",3))=1),$E(MID,1)=$P(MPIN,"^",3) S FOUND=1
"RTN","MPIUTL10",40,0)
 .I $L(MID)=1&($L($P(MPIN,"^",3))>1),MID=$E($P(MPIN,"^",3),1) S FOUND=1
"RTN","MPIUTL10",41,0)
 .I $D(FOUND) S MPIA(ICN)=""
"RTN","MPIUTL10",42,0)
 Q
"RTN","MPIUTL10",43,0)
 ;
"RTN","MPIUTL10",44,0)
IDCHECK(ICN,SITE,CMOR,NARR,MPIBRD,MPIMERG,ARR) ;
"RTN","MPIUTL10",45,0)
 N SHARE,MPIARR K MPIBRD,MPIMERG,SHARE
"RTN","MPIUTL10",46,0)
 Q:$G(NARR("FID"))="@"
"RTN","MPIUTL10",47,0)
 ; ^ DELETING TF
"RTN","MPIUTL10",48,0)
 I $E($G(NARR(11)),1,2)="ZZ"!($E($G(NARR(23)),1,5)="00000") S MPIBRD=1
"RTN","MPIUTL10",49,0)
 ; ^ "TEST" pt don't broadcast
"RTN","MPIUTL10",50,0)
 D SHARE(ICN,.SHARE)
"RTN","MPIUTL10",51,0)
 I $G(SHARE)=1&($D(MPIBRD)) D ERROR^MPIA08(.ARR,.HL,"ICN "_ICN_" is a shared pt that has been changed to a 'TEST' pt at site "_$$STA^XUAF4(SITE),238)
"RTN","MPIUTL10",52,0)
 I $G(SHARE)'=1&($D(MPIBRD)) K MPIBRD Q
"RTN","MPIUTL10",53,0)
 Q:$D(MPIBRD)
"RTN","MPIUTL10",54,0)
 Q:'$D(^MPI(985.5,"AM",ICN,SITE))!($D(NARR("FID")))
"RTN","MPIUTL10",55,0)
 ; ^ new TF for this ICN              ^ Deleting TF
"RTN","MPIUTL10",56,0)
 K MPIIDC,MPIIDC2
"RTN","MPIUTL10",57,0)
 ;check to see if Name, SSN and DOB changed (possible dfn recyle)
"RTN","MPIUTL10",58,0)
 ; if MPIBRD=1 don't broadcast update msg out or update 985
"RTN","MPIUTL10",59,0)
 ; if MPIIDC=1 all fields changed
"RTN","MPIUTL10",60,0)
 ; if MPIIDC2=1 at least one field changed
"RTN","MPIUTL10",61,0)
 D CHKIDFLD(ICN,SITE,CMOR,.NARR,.MPIBRD,.MPIIDC,.MPIIDC2)
"RTN","MPIUTL10",62,0)
 I $D(MPIIDC),($D(SHARE))&(MPIIDC=2) D ERROR^MPIA08(.ARR,.HL,"ONLY 2 of the ID fields changed and patient is SHARED for ICN "_ICN_" from site "_$$STA^XUAF4(SITE)_". UPDATES ONLY to 985.5 and no further BROADCASTING allowed",239) Q
"RTN","MPIUTL10",63,0)
 ; ^ IF ONLY 2 FIELD CHANGE AND SHARED LOG EXCEPTION - STOP BROADCASTING
"RTN","MPIUTL10",64,0)
 I $D(MPIIDC),($D(SHARE))&(MPIIDC>2) D ERROR^MPIA08(.ARR,.HL,"MORE THAN 2 of the ID fields changed and patient is SHARED for ICN "_ICN_" from site "_$$STA^XUAF4(SITE)_". UPDATES ONLY to 985.5 and NO further BROADCASTING allowed.",239) Q
"RTN","MPIUTL10",65,0)
 ; ^ IF MORE THAN 2 FIELDS CHANGED AND SHARED, LOG EXCEPTION AND STOP UPDATING 985 AND BROADCASTING
"RTN","MPIUTL10",66,0)
 I $D(MPIIDC)&('$D(SHARE)),(MPIIDC>2) D ERROR^MPIA08(.ARR,.HL,"MORE than two ID fields changed and pt IS NOT SHARED for ICN "_ICN_" from site "_$$STA^XUAF4(SITE)_".  UPDATES ALLOWED in 985 and 985.5 files.",239) K MPIBRD Q
"RTN","MPIUTL10",67,0)
 ; ^ log exception to notify DQ team of possible dfn recycle. BUT allow all updating since patient IS NOT SHARED.
"RTN","MPIUTL10",68,0)
 I $D(MPIIDC)&('$D(SHARE)),(MPIIDC<3) K MPIIDC,MPIBRD Q
"RTN","MPIUTL10",69,0)
 ; ^ not shared and only 2 fields edited, broadcast
"RTN","MPIUTL10",70,0)
 ;;I $D(MPIIDC2)&('$D(SHARE)) D EXACT2(NARR(23),NARR(22),NARR(11),NARR(12),NARR(15),NARR(14),NARR(13),NARR(17),.MPIARR) I $O(MPIARR(0))'="" D MERGE(ICN,$O(MPIARR(0))) S MPIBRD=1,MPIMERG=1 Q
"RTN","MPIUTL10",71,0)
 ; ^ at least (but not all) one field for id changed, if not shared see if there is an exact match == if so, merge pts. To be part of patch 24.
"RTN","MPIUTL10",72,0)
 Q
"RTN","MPIUTL10",73,0)
MERGE(ICN,ARRAY) ;
"RTN","MPIUTL10",74,0)
 Q
"RTN","MPIUTL10",75,0)
 ;
"RTN","MPIUTL10",76,0)
SHARE(ICN,SHARED) ; check to see if patient is shared in 985.5
"RTN","MPIUTL10",77,0)
 N IEN,CNT
"RTN","MPIUTL10",78,0)
 K SHARED
"RTN","MPIUTL10",79,0)
 S (CNT,IEN)=0
"RTN","MPIUTL10",80,0)
 F  S IEN=$O(^MPI(985.5,"AM",ICN,IEN)) Q:IEN=""  S CNT=CNT+1
"RTN","MPIUTL10",81,0)
 I CNT>1 S SHARED=1
"RTN","MPIUTL10",82,0)
 Q
"RTN","MPIUTL10",83,0)
 ;
"RTN","MPIUTL10",84,0)
CHKIDFLD(ICN,SITE,CMOR,NARR,MPIBRD,IDCH,IDCH2) ;
"RTN","MPIUTL10",85,0)
 N IDARR K IDARR,IDCH,IDCH2,MANY
"RTN","MPIUTL10",86,0)
 D COMPARE(985.5,"11;12;23;17;22",ICN,SITE,.NARR,.IDARR,.MANY)
"RTN","MPIUTL10",87,0)
 ; last name, first name, ssn, dob and sex
"RTN","MPIUTL10",88,0)
 I MANY>1 S IDCH=MANY,MPIBRD=1 Q
"RTN","MPIUTL10",89,0)
 ; ^ check if at least 2 fields have changed - any part of the name (first or last), SEX, SSN OR DOB fields changed
"RTN","MPIUTL10",90,0)
 I MANY=1 S IDCH2=1 Q
"RTN","MPIUTL10",91,0)
 ; ^ check if atleast 1 but not all changed
"RTN","MPIUTL10",92,0)
 Q
"RTN","MPIUTL10",93,0)
 ;
"RTN","MPIUTL10",94,0)
COMPARE(FILE,FIELDS,ICN,SITE,NARR,COMA,MANY) ;
"RTN","MPIUTL10",95,0)
 N NXT,OLD,CNT,IEN K OLD,MANY
"RTN","MPIUTL10",96,0)
 I FILE=985 D GETS^DIQ(FILE,+ICN_",",FIELDS,"I","OLD"),FORMAT^MPIUTL6
"RTN","MPIUTL10",97,0)
 ;
"RTN","MPIUTL10",98,0)
 I FILE=985.5 D
"RTN","MPIUTL10",99,0)
 .S IEN=$O(^MPI(985.5,"AM",ICN,SITE,"")),CNT=1
"RTN","MPIUTL10",100,0)
 .I IEN'="" D GETS^DIQ(FILE,IEN_",",FIELDS,"I","OLD")
"RTN","MPIUTL10",101,0)
 Q:FILE=985.5&(IEN="")  ;TF DOESN'T EXIST
"RTN","MPIUTL10",102,0)
 ;
"RTN","MPIUTL10",103,0)
 I FILE=985 S IEN=+ICN
"RTN","MPIUTL10",104,0)
 ;
"RTN","MPIUTL10",105,0)
 S MANY=0
"RTN","MPIUTL10",106,0)
 S CNT=1 F  S NXT=$P(FIELDS,";",CNT) Q:NXT=""  D
"RTN","MPIUTL10",107,0)
 .S CNT=CNT+1
"RTN","MPIUTL10",108,0)
 .Q:'$D(NARR(NXT))
"RTN","MPIUTL10",109,0)
 .I $G(NARR(NXT))'="@"&($G(NARR(NXT))'=""""""),$G(OLD(FILE,IEN_",",NXT,"I"))'=NARR(NXT) D
"RTN","MPIUTL10",110,0)
 ..I NXT'=11&(NXT'=12) S MANY=MANY+1
"RTN","MPIUTL10",111,0)
 ..I NXT=11!(NXT=12) I '$D(COMA(11))&('$D(COMA(12)))&('$D(COMA(11))) S MANY=MANY+1
"RTN","MPIUTL10",112,0)
 ..S COMA(NXT)=""
"RTN","MPIUTL10",113,0)
 ; ^ Compare values, if different set array COMA(field #)
"RTN","MPIUTL10",114,0)
 Q
"RTN","MPIUTL11")
0^194^B54230309
"RTN","MPIUTL11",1,0)
MPIUTL11 ;BIR/CMC-Utilities ;5/13/04
"RTN","MPIUTL11",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**16,35**;30 Apr 99
"RTN","MPIUTL11",3,0)
 ;
"RTN","MPIUTL11",4,0)
GETICN(DFN,SITE,SNDST,ASSOC,TFUP) ;
"RTN","MPIUTL11",5,0)
 ; This API will return the ICN (including checksum) for a patient who has this DFN at SITE
"RTN","MPIUTL11",6,0)
 ; DFN - IEN in Patient file (#2)
"RTN","MPIUTL11",7,0)
 ; SITE - Station Number of facility where patient has DFN
"RTN","MPIUTL11",8,0)
 ; SNDST - Station Number of site making request
"RTN","MPIUTL11",9,0)
 ; ASSOC - Site making request is added to the ICN found for the DFN/SITE in the associate site multiple (optional - default is to add association) set to 1 to treat as lookup only
"RTN","MPIUTL11",10,0)
 ; TFUP - Site making request is added as a TF for the ICN found for the DFN/SITE (optional - default is to add TF) set to 1 to treat as lookup only
"RTN","MPIUTL11",11,0)
 ; RETURNED - ICN or -1^error message
"RTN","MPIUTL11",12,0)
 N STA,IEN,ICN,SENT,AASSOC
"RTN","MPIUTL11",13,0)
 I '$D(TFUP) S TFUP=0
"RTN","MPIUTL11",14,0)
 I '$D(ASSOC) S ASSOC=0
"RTN","MPIUTL11",15,0)
 Q:'$D(DFN)!('$D(SITE)) "-1^Missing required parameters"
"RTN","MPIUTL11",16,0)
 Q:($G(DFN)<1) "-1^DFN must be greater than 0"
"RTN","MPIUTL11",17,0)
 S STA=$$IEN^XUAF4(SITE),SENT=$$IEN^XUAF4(SNDST)
"RTN","MPIUTL11",18,0)
 Q:STA<1 "-1^Unknown Station Number for SITE association"
"RTN","MPIUTL11",19,0)
 Q:SENT<1 "-1^Unknown Station Number for Site making request"
"RTN","MPIUTL11",20,0)
 Q:'$D(^MPI(985.5,"ASD",DFN,STA))&(TFUP'=0)&(ASSOC'=0) "-1^Unknown Site/DFN pair"
"RTN","MPIUTL11",21,0)
 ; **35 Add TF placeholder for site/dfn if not found and request to api was to added TF
"RTN","MPIUTL11",22,0)
 I TFUP=0&('$D(^MPI(985.5,"ASD",DFN,STA))) D ADDEN(DFN,STA,SENT,ASSOC) Q "-1^DFN/Site Unknown on MPI"
"RTN","MPIUTL11",23,0)
 ; **35 Add TF placeholder for site/dfn if not found and request to api was to added TF
"RTN","MPIUTL11",24,0)
 I ASSOC=0&('$D(^MPI(985.5,"ASD",DFN,STA))) D ADDEN(DFN,STA,SENT,ASSOC) Q "-1^DFN/Site Unknown on MPI"
"RTN","MPIUTL11",25,0)
 S IEN=$O(^MPI(985.5,"ASD",DFN,STA,""))
"RTN","MPIUTL11",26,0)
 Q:'$D(^MPI(985.5,IEN,0)) "-1^Cross reference exists but no entry in 985.5"
"RTN","MPIUTL11",27,0)
 S ICN=$P($G(^MPI(985.5,IEN,0)),"^",2)
"RTN","MPIUTL11",28,0)
 I ICN=""&(SNDST'="200M"),'$$CHKASSOC(IEN,SENT) N TMP S TMP=$$ADDSTAS(ICN,SITE,SNDST,DFN)
"RTN","MPIUTL11",29,0)
 Q:ICN="" "-1^DFN/Site Unknown on MPI"
"RTN","MPIUTL11",30,0)
 Q:'$D(^MPIVET(ICN,0)) "-1^ICN doesn't exist in MPI Veteran/Client file"
"RTN","MPIUTL11",31,0)
 S ICN=$P($G(^MPIVET(ICN,0)),"^")
"RTN","MPIUTL11",32,0)
 Q:ICN<1 "-1^ICN doesn't exist in MPI Veteran/Client file"
"RTN","MPIUTL11",33,0)
 I TFUP'=1 D
"RTN","MPIUTL11",34,0)
 .; create TF for ICN where site is SNDST
"RTN","MPIUTL11",35,0)
 .N ATF S ATF=$$ADDTF^MPIUTL9(SENT,ICN,,DFN)
"RTN","MPIUTL11",36,0)
 .I +ATF<0 D ERROR(ICN,SNDST,"Unable to create entry in 985.5 for "_SNDST_" for ICN "_ICN,"")
"RTN","MPIUTL11",37,0)
 .;I ATF<0 log exception - HL7 variables not defined when called by CORBA
"RTN","MPIUTL11",38,0)
 I ASSOC'=1 D
"RTN","MPIUTL11",39,0)
 .; add SNDST as Associated Site to TF entry for ICN/SITE
"RTN","MPIUTL11",40,0)
 .S AASSOC=$$ADDSTAS(ICN,SITE,SNDST)
"RTN","MPIUTL11",41,0)
 .I +AASSOC<0 D ERROR(ICN,SNDST,$P(AASSOC,"^",2),"")
"RTN","MPIUTL11",42,0)
 .;I AASOC<0 log exception - hl7 vars not defined when called by CORBA
"RTN","MPIUTL11",43,0)
 Q ICN
"RTN","MPIUTL11",44,0)
 ;
"RTN","MPIUTL11",45,0)
ADDSTAS(ICN,SITE,ASSOC,DFN) ; **35 added DFN as a parameter to allow adding another Association to a place holder TF entry, making ICN no longer required to add an association
"RTN","MPIUTL11",46,0)
 ; The API will add a site association (ASSOC) to the TF entry for ICN/SITE
"RTN","MPIUTL11",47,0)
 ; ICN - ICN for the patient association is being made - if ICN is not known, then DFN must be passed
"RTN","MPIUTL11",48,0)
 ; SITE - Station Number of the Site the association is being made
"RTN","MPIUTL11",49,0)
 ; ASSOC - Station Number of the site that is the Association
"RTN","MPIUTL11",50,0)
 ; DFN - If ICN is 0 then DFN must be passed as the IEN for the SITE - if ICN is known, DFN is not needed
"RTN","MPIUTL11",51,0)
 ;Returned = 1 if successfully added association or -1^error message
"RTN","MPIUTL11",52,0)
 ; 0 returned if association already exists
"RTN","MPIUTL11",53,0)
 ;
"RTN","MPIUTL11",54,0)
 N TFIEN,STA,STA2,LOCK,EXIST,DIC,X,Y,FLG,DA
"RTN","MPIUTL11",55,0)
 I '$D(ICN) S ICN=""
"RTN","MPIUTL11",56,0)
 I '$D(DFN) S DFN=""
"RTN","MPIUTL11",57,0)
 Q:('$D(SITE))!('$D(ASSOC)) "-1^MISSING REQUIRED PARAMETERS"
"RTN","MPIUTL11",58,0)
 Q:($G(SITE)="")!($G(ASSOC)="") "-1^MISSING REQUIRED PARAMETERS"
"RTN","MPIUTL11",59,0)
 Q:('$D(ICN))&('$D(DFN)) "-1^MISSING REQUIRED PARAMETERS"
"RTN","MPIUTL11",60,0)
 Q:($G(ICN)="")&($G(DFN)="") "-1^MISSING REQUIRED PARAMETERS"
"RTN","MPIUTL11",61,0)
 I '$D(ICN) S ICN=""
"RTN","MPIUTL11",62,0)
 I '$D(DFN) S DFN=""
"RTN","MPIUTL11",63,0)
 S STA=$$IEN^XUAF4(SITE),STA2=$$IEN^XUAF4(ASSOC)
"RTN","MPIUTL11",64,0)
 Q:STA<1 "-1^SITE UNKNOWN"
"RTN","MPIUTL11",65,0)
 Q:STA2<1 "-1^SITE ASSOCIATION UNKNOWN"
"RTN","MPIUTL11",66,0)
 I $G(ICN)'="" S TFIEN=$O(^MPI(985.5,"AM",+ICN,STA,""))
"RTN","MPIUTL11",67,0)
 I $G(DFN)'="" S TFIEN=$O(^MPI(985.5,"ASD",DFN,STA,""))
"RTN","MPIUTL11",68,0)
 Q:TFIEN<1 "-1^No entry in 985.5 for this ICN/Station# OR DFN/Station#"
"RTN","MPIUTL11",69,0)
 S EXIST=$$CHKASSOC(TFIEN,STA2)
"RTN","MPIUTL11",70,0)
 Q:EXIST=1 0
"RTN","MPIUTL11",71,0)
 S LOCK=$$LOCK(TFIEN)
"RTN","MPIUTL11",72,0)
 Q:+LOCK=-1 "-1^Unable to lock record IEN= "_TFIEN_" in file 985.5 to update Site Association"
"RTN","MPIUTL11",73,0)
 S FLG=1
"RTN","MPIUTL11",74,0)
 I '$D(^MPI(985.5,TFIEN,71)) S ^MPI(985.5,TFIEN,71,0)="^985.571PA^^"
"RTN","MPIUTL11",75,0)
 S DIC="^MPI(985.5,"_TFIEN_",71,",DIC(0)="LZNQ",DIC("P")=$P($G(^DD(985.5,71,0)),"^",1),DA(1)=TFIEN,X="`"_STA2 D ^DIC
"RTN","MPIUTL11",76,0)
 I +Y<0 S FLG="-1^Trouble updating Association value "_ASSOC_" for ICN "_ICN_" IEN "_TFIEN_" in file 985.5"
"RTN","MPIUTL11",77,0)
 L -^MPI(985.5,TFIEN)
"RTN","MPIUTL11",78,0)
 Q FLG
"RTN","MPIUTL11",79,0)
 ;
"RTN","MPIUTL11",80,0)
CHKASSOC(TFIEN,STA2) ; check to see if association already exists
"RTN","MPIUTL11",81,0)
 Q:$D(^MPI(985.5,TFIEN,71,"B",STA2)) 1
"RTN","MPIUTL11",82,0)
 Q 0
"RTN","MPIUTL11",83,0)
 ;
"RTN","MPIUTL11",84,0)
LOCK(TFIEN) ;
"RTN","MPIUTL11",85,0)
 N CNT
"RTN","MPIUTL11",86,0)
 S CNT=0
"RTN","MPIUTL11",87,0)
TRY L +^MPI(985.5,TFIEN):10
"RTN","MPIUTL11",88,0)
 Q:$T 1
"RTN","MPIUTL11",89,0)
 I '$T S CNT=CNT+1 I CNT<11 G TRY
"RTN","MPIUTL11",90,0)
 Q 0
"RTN","MPIUTL11",91,0)
 ;
"RTN","MPIUTL11",92,0)
ADDEN(DFN,SITE,SENT,ASSOC) ;add a placeholder TF entry for this DFN/SITE pair in 985.5
"RTN","MPIUTL11",93,0)
 I '$D(ASSOC) S ASSOC=0
"RTN","MPIUTL11",94,0)
 Q:ASSOC=1
"RTN","MPIUTL11",95,0)
 ; ^ don't create associations
"RTN","MPIUTL11",96,0)
 N DIC,Y,X,DA,TFIEN,LOCK
"RTN","MPIUTL11",97,0)
 I '$D(DFN)!('$D(SITE))!('$D(SENT)) D ERROR("",$G(SITE),"Unable to create place holder TF for DFN "_$G(DFN)_" parameter SITE "_$G(SITE)_" with Association site parameter SENT "_$G(SENT)_" due to missing required fields.",234) Q
"RTN","MPIUTL11",98,0)
 I $G(DFN)=""!($G(SITE)="")!($G(SENT)="") D ERROR("",SITE,"Unable to create place holder TF for DFN "_DFN_" parameter SITE "_SITE_" with Association site parameter "_SENT_" due to missing required fields.",234) Q
"RTN","MPIUTL11",99,0)
 K DO S DIC=985.5,DIC(0)="L",X=SITE,DIC("DR")="2///"_DFN D FILE^DICN K DO
"RTN","MPIUTL11",100,0)
 I +Y=-1 D ERROR("",SITE,"Unable to create place holder TF for DFN "_DFN_" SITE "_$$STA^XUAF4(SITE)_" with Association site of "_$$STA^XUAF4(SENT),234) Q
"RTN","MPIUTL11",101,0)
 S TFIEN=+Y
"RTN","MPIUTL11",102,0)
 S LOCK=$$LOCK(TFIEN)
"RTN","MPIUTL11",103,0)
 I +LOCK=-1 D ERROR("",SITE,"Unable to lock record IEN= "_TFIEN_" in file 985.5 to update Site Association for site "_$$STA^XUAF4(SENT),234) Q
"RTN","MPIUTL11",104,0)
 I '$D(^MPI(985.5,TFIEN,71)) S ^MPI(985.5,TFIEN,71,0)="^985.571PA^^"
"RTN","MPIUTL11",105,0)
 K DIC,DA,X,Y
"RTN","MPIUTL11",106,0)
 S DIC="^MPI(985.5,"_TFIEN_",71,",DIC(0)="LZNQ",DIC("P")=$P($G(^DD(985.5,71,0)),"^",1),DA(1)=TFIEN,X="`"_SENT D ^DIC
"RTN","MPIUTL11",107,0)
 I +Y<0 D ERROR("",SITE,"Trouble updating Association value "_$$STA^XUAF4(ASSOC)_" for IEN "_TFIEN_" in file 985.5",234)
"RTN","MPIUTL11",108,0)
 L -^MPI(985.5,TFIEN)
"RTN","MPIUTL11",109,0)
 Q
"RTN","MPIUTL11",110,0)
 ;
"RTN","MPIUTL11",111,0)
ERROR(ICN,SITE,MPIERR,TYPE) ;
"RTN","MPIUTL11",112,0)
 N EXCEPT,ERROR,VALUE
"RTN","MPIUTL11",113,0)
 I '$D(TYPE) S TYPE=234
"RTN","MPIUTL11",114,0)
 I TYPE="" S TYPE=234
"RTN","MPIUTL11",115,0)
 S EXCEPT("DATE/TIME REPORTED")=$$NOW^XLFDT,EXCEPT("ICN")=$G(ICN),EXCEPT("EXCEPTION TYPE")=TYPE
"RTN","MPIUTL11",116,0)
 S EXCEPT("OPTIONAL TEXT")=$G(MPIERR)
"RTN","MPIUTL11",117,0)
 S EXCEPT("SITE OF OCCURRENCE")="200M",EXCEPT("SITE REPORTING")="200M"
"RTN","MPIUTL11",118,0)
 S VALUE=$$ADD^MPIXU(.EXCEPT,.ERROR)
"RTN","MPIUTL11",119,0)
 Q
"RTN","MPIUTL11",120,0)
 ;
"RTN","MPIUTL11",121,0)
ISTF(ICN,STA) ;
"RTN","MPIUTL11",122,0)
 ; This API will return 1 if this ICN has this site STA as a treating facility
"RTN","MPIUTL11",123,0)
 ; ICN - ICN for the patient
"RTN","MPIUTL11",124,0)
 ; STA - Station Number of facility
"RTN","MPIUTL11",125,0)
 ; RETURNED - 1 if this ICN has a Treating Facility of STA
"RTN","MPIUTL11",126,0)
 ;    - 0 if this ICN doesn't have this Treating Facility (STA)
"RTN","MPIUTL11",127,0)
 ;    - 1^ERROR MSG if there was a problem
"RTN","MPIUTL11",128,0)
 ;
"RTN","MPIUTL11",129,0)
 Q:'$D(^MPIVET(+ICN)) "-1^ICN not know in MPI Vet file"
"RTN","MPIUTL11",130,0)
 Q:'$D(^MPI(985.5,"ZZICN",+ICN)) "-1^ICN not known in MPI TF file"
"RTN","MPIUTL11",131,0)
 N IEN S IEN=$$IEN^XUAF4(STA) Q:+IEN<1 "-1^Station not known on MPI"
"RTN","MPIUTL11",132,0)
 Q:'$D(^MPI(985.5,"AM",+ICN,IEN)) 0
"RTN","MPIUTL11",133,0)
 S IEN=$O(^MPI(985.5,"AM",+ICN,IEN,""))
"RTN","MPIUTL11",134,0)
 Q:'$D(^MPI(985.5,IEN)) 0
"RTN","MPIUTL11",135,0)
 Q 1
"RTN","MPIUTL11",136,0)
 ;
"RTN","MPIUTL11",137,0)
A24AS ; ZTLOAD called from ADDTF^MPIUTL9
"RTN","MPIUTL11",138,0)
 ; send A24 messages to sites in the Association multiple for patient:
"RTN","MPIUTL11",139,0)
 ; ICN, SITEIEN, DFN
"RTN","MPIUTL11",140,0)
 I '$D(^MPI(985.5,"AM",ICN,SITEIEN)) D ERROR(ICN,$$STA^XUAF4(SITEIEN),"ICN/Site TF ("_ICN_"/"_SITEIEN_" [IEN]) entry doesn't exist when A24 was tasked off to be sent") Q
"RTN","MPIUTL11",141,0)
 ; ICN/Site TF entry doesn't exist any longer
"RTN","MPIUTL11",142,0)
 I '$D(^MPI(985.5,"ASD",DFN,SITEIEN)) D ERROR(ICN,$$STA^XUAF4(SITEIEN),"DFN/Site ("_DFN_"/"_SITEIEN_" [IEN]) pair entry doesn't exist when A24 was tasked off to be sent") Q
"RTN","MPIUTL11",143,0)
 ; dfn/site pair doesn't exist any longer
"RTN","MPIUTL11",144,0)
 N NICN,TFIEN S TFIEN=$O(^MPI(985.5,"ASD",DFN,SITEIEN,""))
"RTN","MPIUTL11",145,0)
 S NICN=$P($G(^MPI(985.5,TFIEN,0)),"^",2)
"RTN","MPIUTL11",146,0)
 I NICN'=ICN D ERROR(ICN,$$STA^XUAF4(SITEIEN),"ICN "_NICN_" doesn't match ICN "_ICN_" passed to A24 tasked off job. DFN="_DFN) Q
"RTN","MPIUTL11",147,0)
 ; ICN for site/dfn pair doesn't match ICN passed
"RTN","MPIUTL11",148,0)
 Q:'$D(^MPI(985.5,TFIEN,71,"B"))
"RTN","MPIUTL11",149,0)
 ; ^ There aren't any Site Associations for this TF entry
"RTN","MPIUTL11",150,0)
 D DA24^MPIA24(ICN,SITEIEN,ICN,SITEIEN,SITEIEN,.RESLT,$G(DFN),$G(DFN),0)
"RTN","MPIUTL11",151,0)
 I +RESLT<0 D ERROR(ICN,$$STA^XUAF4(SITEIEN),RESLT) Q
"RTN","MPIUTL11",152,0)
 K DFN,ICN,SITEIEN
"RTN","MPIUTL11",153,0)
 Q
"RTN","MPIUTL11",154,0)
ICNASSOC(ICN,STA) ;API to loop through the TF list and find an association for a given system
"RTN","MPIUTL11",155,0)
 ; STA = station # of the institution#
"RTN","MPIUTL11",156,0)
 N HASASSOC S HASASSOC=0
"RTN","MPIUTL11",157,0)
 Q:$G(ICN)="" "-1^ICN passed was null"
"RTN","MPIUTL11",158,0)
 Q:'$D(^MPIVET(+ICN)) "-1^ICN not know in MPI Vet file"
"RTN","MPIUTL11",159,0)
 Q:$G(STA)="" "-1^Station# passed was null"
"RTN","MPIUTL11",160,0)
 N TFIEN,MPIIEN
"RTN","MPIUTL11",161,0)
 S TFIEN=0 F  S TFIEN=$O(^MPI(985.5,"AM",+ICN,TFIEN)) Q:'TFIEN!(HASASSOC=1)  D
"RTN","MPIUTL11",162,0)
 .S MPIIEN=0 F  S MPIIEN=$O(^MPI(985.5,"AM",+ICN,TFIEN,MPIIEN)) Q:'MPIIEN!(HASASSOC=1)  I $D(^MPI(985.5,MPIIEN,71,"B",$$IEN^XUAF4(STA))) S HASASSOC=1
"RTN","MPIUTL11",163,0)
 Q HASASSOC
"RTN","MPIUTL13")
0^195^B20430187
"RTN","MPIUTL13",1,0)
MPIUTL13 ;BIR/CMC-Utilities ;7/28/04
"RTN","MPIUTL13",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**29,24,31**;30 Apr 99
"RTN","MPIUTL13",3,0)
 ;
"RTN","MPIUTL13",4,0)
ERROR(ARRAY,HL,MPIERR,TYPE) ;
"RTN","MPIUTL13",5,0)
 N EXCEPT,ERROR,VALUE
"RTN","MPIUTL13",6,0)
 I TYPE="" S TYPE=234
"RTN","MPIUTL13",7,0)
 I $L(MPIERR,"^")>1 S MPIERR=$P(MPIERR,"^",2)
"RTN","MPIUTL13",8,0)
 I MPIERR["No entry for ICN in MPI VETERAN/CLIENT (#985)"!(MPIERR["ICN Does NOT exist in MPI Veteran file")!(MPIERR["No such ICN") D
"RTN","MPIUTL13",9,0)
 .;reestablish the entry in #985 as deactivated
"RTN","MPIUTL13",10,0)
 .I $G(ARRAY("ICN"))'="" N ICNCS,RET,ST S ICNCS=ARRAY("ICN")_"V"_$$CHECKDG^MPIUTL(ARRAY("ICN")) S ^MPIVET(ARRAY("ICN"),0)=ICNCS,^MPIVET("B",ICNCS,ARRAY("ICN"))="" S ST="D",RET=$$SETSTATE^MPISIUT(ARRAY("ICN"),ST) ;**24
"RTN","MPIUTL13",11,0)
 S EXCEPT("CMOR")=$G(ARRAY("CMOR")),EXCEPT("DATE/TIME REPORTED")=$$NOW^XLFDT,EXCEPT("ICN")=$G(ARRAY("ICN")),EXCEPT("LOGICAL LINK")="MPIVA",EXCEPT("MESSAGE ID")=$G(HL("MID")),EXCEPT("EXCEPTION TYPE")=TYPE
"RTN","MPIUTL13",12,0)
 S EXCEPT("EVENT TYPE")=$G(HL("ETN")),EXCEPT("MESSAGE TYPE")="ADT"
"RTN","MPIUTL13",13,0)
 I $G(ARRAY(1))="" I $G(ARRAY("ICN"))'="" N MPIVETZ S MPIVETZ=^MPIVET(ARRAY("ICN"),0) S ARRAY(1)=$P(MPIVETZ,"^",2),ARRAY(2)=$P(MPIVETZ,"^",3),ARRAY(3)=$P(MPIVETZ,"^",4)
"RTN","MPIUTL13",14,0)
 S EXCEPT("NAME")=$G(ARRAY(1))_","_$G(ARRAY(2))_" "_$G(ARRAY(3))
"RTN","MPIUTL13",15,0)
 S EXCEPT("OPTIONAL TEXT")=$G(MPIERR),EXCEPT("SENDING APPLICATION")="VAFC TRIGGER"
"RTN","MPIUTL13",16,0)
 S EXCEPT("SITE OF OCCURRENCE")="200M",EXCEPT("SITE REPORTING")=$P($G(HL("SFN")),$E(HL("ECH"),1)),EXCEPT("SSN")=$G(ARRAY(13))
"RTN","MPIUTL13",17,0)
 ;**29
"RTN","MPIUTL13",18,0)
 I TYPE=239&($G(ARRAY("ICN"))'="") D
"RTN","MPIUTL13",19,0)
 .;            ^ ADDED CHECK IN PATCH 31
"RTN","MPIUTL13",20,0)
 .N CIEN S CIEN=$$IEN^XUAF4($G(ARRAY("CMOR")))
"RTN","MPIUTL13",21,0)
 .N CNAME S CNAME=$P($$NS^XUAF4(CIEN),"^")
"RTN","MPIUTL13",22,0)
 .N SRIEN S SRIEN=$$IEN^XUAF4($G(EXCEPT("SITE REPORTING")))
"RTN","MPIUTL13",23,0)
 .N SRNAM S SRNAM=$P($$NS^XUAF4(SRIEN),"^")
"RTN","MPIUTL13",24,0)
 .N MPIVETZ,OLD S MPIVETZ=^MPIVET(ARRAY("ICN"),0)
"RTN","MPIUTL13",25,0)
 .N IEN S IEN=$O(^MPI(985.5,"AM",ARRAY("ICN"),SRIEN,""))
"RTN","MPIUTL13",26,0)
 .I IEN'="" D GETS^DIQ(985.5,IEN_",","11;12;23;17;22","I","OLD")
"RTN","MPIUTL13",27,0)
 .S EXCEPT("PROCESSING NOTES",1)="CMOR'S ["_CNAME_" ("_$G(ARRAY("CMOR"))_")] DATA: "
"RTN","MPIUTL13",28,0)
 .S EXCEPT("PROCESSING NOTES",2)="NAME: "_$P($G(MPIVETZ),"^",2)_","_$P($G(MPIVETZ),"^",3)_" "_$P($G(MPIVETZ),"^",4)_" "_$P($G(MPIVETZ),"^",6)
"RTN","MPIUTL13",29,0)
 .N Y,DOB S Y=$P($G(MPIVETZ),"^",8) X ^DD("DD") S DOB=Y
"RTN","MPIUTL13",30,0)
 .S EXCEPT("PROCESSING NOTES",3)="SSN: "_$P($G(MPIVETZ),"^",14)_"  DOB: "_DOB_"   SEX: "_$P($G(MPIVETZ),"^",13)
"RTN","MPIUTL13",31,0)
 .S EXCEPT("PROCESSING NOTES",4)="",EXCEPT("PROCESSING NOTES",5)="Data sent in HL7 message from site "_SRNAM_" ("_$G(EXCEPT("SITE REPORTING"))_")"
"RTN","MPIUTL13",32,0)
 .S EXCEPT("PROCESSING NOTES",6)="NAME: "_$G(EXCEPT("NAME"))
"RTN","MPIUTL13",33,0)
 .S Y=$G(ARRAY(7)) X ^DD("DD") S DOB=Y
"RTN","MPIUTL13",34,0)
 .S EXCEPT("PROCESSING NOTES",7)="SSN: "_$G(EXCEPT("SSN"))_"   DOB: "_DOB_"   SEX: "_$G(ARRAY(12))
"RTN","MPIUTL13",35,0)
 .S EXCEPT("PROCESSING NOTES",8)="",EXCEPT("PROCESSING NOTES",9)="Data as it was PRIOR to HL7 message for site "_SRNAM_" ("_$G(EXCEPT("SITE REPORTING"))_")"
"RTN","MPIUTL13",36,0)
 .S EXCEPT("PROCESSING NOTES",10)="NAME (LAST,FIRST): "_$G(OLD(985.5,IEN_",",11,"I"))_","_$G(OLD(985.5,IEN_",",12,"I"))
"RTN","MPIUTL13",37,0)
 .K Y S Y=$G(OLD(985.5,IEN_",",17,"I")) X ^DD("DD") S DOB=Y K Y
"RTN","MPIUTL13",38,0)
 .S EXCEPT("PROCESSING NOTES",11)="SSN: "_$G(OLD(985.5,IEN_",",23,"I"))_"   DOB: "_DOB_"   SEX: "_$G(OLD(985.5,IEN_",",22,"I")),EXCEPT("PROCESSING NOTES",12)=""
"RTN","MPIUTL13",39,0)
 S VALUE=$$ADD^MPIXU(.EXCEPT,.ERROR)
"RTN","MPIUTL13",40,0)
 Q
"RTN","MPIUTL13",41,0)
 ;
"RTN","MPIUTL13",42,0)
PERMTEM(CICN) ; **24
"RTN","MPIUTL13",43,0)
 ;Permanent ID state to Temp ID state - need new ICN to do this
"RTN","MPIUTL13",44,0)
 ; This entry point will mark CICN as Deactivated for the ID state but
"RTN","MPIUTL13",45,0)
 ; leave the rest of the data.  Create a new ICN for CICN data to move to
"RTN","MPIUTL13",46,0)
 ; when the A24 comes back from the site.  Send an A24 to the site
"RTN","MPIUTL13",47,0)
 ; letting them know that NICN replaces CICN.  
"RTN","MPIUTL13",48,0)
 ; ICN, CMOR and ID state set for NICN
"RTN","MPIUTL13",49,0)
 N RET,EN,CMOR,Y,NICN,DIC,DINUM,X,ERR,LOC,ODEL,TYPE,NODE,OLDID
"RTN","MPIUTL13",50,0)
 ;must clean out OTHER IDs for the CICN entry so RETURN msgs can process
"RTN","MPIUTL13",51,0)
 I $D(^MPIVET(CICN,200)) D
"RTN","MPIUTL13",52,0)
 .S EN=0 F  S EN=$O(^MPIVET(CICN,200,EN)) Q:EN=""  D
"RTN","MPIUTL13",53,0)
 ..S NODE=$G(^MPIVET(CICN,200,EN,0))
"RTN","MPIUTL13",54,0)
 ..S OLDID=$P(NODE,"^")
"RTN","MPIUTL13",55,0)
 ..S TYPE=$P(NODE,"^",2)
"RTN","MPIUTL13",56,0)
 ..S LOC=$$STA^XUAF4($P(NODE,"^",3))
"RTN","MPIUTL13",57,0)
 ..S ODEL=$$DELID^MPIUTL5(OLDID,TYPE,LOC,CICN)
"RTN","MPIUTL13",58,0)
 S RET=$$SETSTATE^MPISIUT(CICN,"D")
"RTN","MPIUTL13",59,0)
 ; Mark current ICN have deactivated id state to prevent matching while change happening
"RTN","MPIUTL13",60,0)
 ;create new ICN
"RTN","MPIUTL13",61,0)
 S CMOR=$P($G(^MPIVET(CICN,1)),"^",2) ;PTR TO FILE 4
"RTN","MPIUTL13",62,0)
 ;CHECK FOR NO CMOR - LOG EXCEPTION
"RTN","MPIUTL13",63,0)
 L +^MPIVETN
"RTN","MPIUTL13",64,0)
 S Y=$G(^MPIVETN)
"RTN","MPIUTL13",65,0)
 I Y="" L +^MPIVET(0) S (Y,^MPIVETN)=+$P($G(^MPIVET(0)),U,3) L -^MPIVET(0)
"RTN","MPIUTL13",66,0)
 S (X,^MPIVETN)=Y+1
"RTN","MPIUTL13",67,0)
 L -^MPIVETN
"RTN","MPIUTL13",68,0)
 S:X?.NP X=X_"V"_$$CHECKDG^MPIUTL(X)
"RTN","MPIUTL13",69,0)
 S DIC="^MPIVET(",DIC(0)="L",DINUM=+X,DIC("DR")="16///`"_CMOR
"RTN","MPIUTL13",70,0)
 D FILE^DICN
"RTN","MPIUTL13",71,0)
 S NICN=+Y
"RTN","MPIUTL13",72,0)
 ;I Y<0 LOG EXCEPTION FOR NOT BEING ABLE TO CREATE NEW ENTRY
"RTN","MPIUTL13",73,0)
 S RET=$$SETSTATE^MPISIUT(NICN,"T") ;SET ID STATE TO TEMPORARY
"RTN","MPIUTL13",74,0)
 ;GET WHO AND HOW and WHEN CREATED AND POPULATE IN 985
"RTN","MPIUTL13",75,0)
 N WHO,WHEN K Y,X,%
"RTN","MPIUTL13",76,0)
 D NOW^%DTC S WHEN=% K Y,X,%
"RTN","MPIUTL13",77,0)
 S WHO="Perm ID pt to 'test' pt"
"RTN","MPIUTL13",78,0)
 K FDA S FDA(985,NICN_",",19)=WHEN,FDA(985,NICN_",",20)=CMOR,FDA(985,NICN_",",21)=WHO
"RTN","MPIUTL13",79,0)
 K MPIERR D FILE^DIE("E","FDA","MPIERR") K FDA
"RTN","MPIUTL13",80,0)
 ;SEND A24 TO CMOR
"RTN","MPIUTL13",81,0)
 D DA24^MPIA24(NICN,CMOR,CICN,CMOR,CMOR,.ERR)
"RTN","MPIUTL13",82,0)
 ;
"RTN","MPIUTL13",83,0)
 Q
"RTN","MPIUTL2")
0^196^B16028732
"RTN","MPIUTL2",1,0)
MPIUTL2 ;CMC/BPISC - Exceptions ;7/17/00
"RTN","MPIUTL2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN ;**5,24**;30 Apr 1999
"RTN","MPIUTL2",3,0)
 ;
"RTN","MPIUTL2",4,0)
 ;Reference to ^HLMA("C" and field 13 supported by IA #3244
"RTN","MPIUTL2",5,0)
 ;Reference to ^HLMA fields .01,7,15,and 16 supported by IA #3273
"RTN","MPIUTL2",6,0)
 ;Reference to the HL LOGICAL LINK file (#870) supported by IA #3335
"RTN","MPIUTL2",7,0)
 ;Send Exception E-Mail messages to FORUM
"RTN","MPIUTL2",8,0)
 ;
"RTN","MPIUTL2",9,0)
 ;EXCEPT(ICN,ERR)
"RTN","MPIUTL2",10,0)
 ;ICN - Integration Control Number for Patient with problem
"RTN","MPIUTL2",11,0)
 ;ERR - problem
"RTN","MPIUTL2",12,0)
 ;
"RTN","MPIUTL2",13,0)
 ;N XMDUZ,XMSUB,XMTEXT,ARRAY,XMY
"RTN","MPIUTL2",14,0)
 ;S XMY("G.MPI EXCEPTIONS")=""
"RTN","MPIUTL2",15,0)
 ;S XMDUZ="MPI AUSTIN EXCEPTIONS"
"RTN","MPIUTL2",16,0)
 ;S XMSUB=ERR
"RTN","MPIUTL2",17,0)
 ;S XMTEXT="ARRAY(1,"
"RTN","MPIUTL2",18,0)
 ;S ARRAY(1,1)="The following Exception occurred on the MPI with message"
"RTN","MPIUTL2",19,0)
 ;S ARRAY(1,2)=$G(HLMTIENS)
"RTN","MPIUTL2",20,0)
 ;S ARRAY(1,3)=$G(ERR)_" for ICN "_$G(ICN)
"RTN","MPIUTL2",21,0)
 ;D ^XMD
"RTN","MPIUTL2",22,0)
 ;Q
"RTN","MPIUTL2",23,0)
EXCEPT(ICN,ERRHL,EXCTYP)       ;
"RTN","MPIUTL2",24,0)
 N MPIMSG,MSGID,CIEN
"RTN","MPIUTL2",25,0)
 I '$D(EXCTYP) S EXCTYP=234
"RTN","MPIUTL2",26,0)
 S LIN=1,NAME=""
"RTN","MPIUTL2",27,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**MPI/PD EXCEPTION**",LIN=LIN+1
"RTN","MPIUTL2",28,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="EXCEPTION TYPE:"_EXCTYP,LIN=LIN+1
"RTN","MPIUTL2",29,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="OPTIONAL TEXT:"_ERRHL,LIN=LIN+1
"RTN","MPIUTL2",30,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SITE OF OCCURRENCE:200M",LIN=LIN+1
"RTN","MPIUTL2",31,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SITE REPORTING:200M",LIN=LIN+1
"RTN","MPIUTL2",32,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="DATE/TIME REPORTED:"_$$NOW^XLFDT,LIN=LIN+1
"RTN","MPIUTL2",33,0)
 I $G(ICN) D
"RTN","MPIUTL2",34,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**PATIENT DATA**",LIN=LIN+1
"RTN","MPIUTL2",35,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="ICN:"_+ICN,LIN=LIN+1
"RTN","MPIUTL2",36,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="NAME:"_$P($G(^MPIVET(ICN,0)),"^",2)_","_$P($G(^MPIVET(ICN,0)),"^",3),LIN=LIN+1,NAME=$P($G(^MPIVET(ICN,0)),"^",2)_","_$P($G(^MPIVET(ICN,0)),"^",3)
"RTN","MPIUTL2",37,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SSN:"_$P($G(^MPIVET(ICN,0)),"^",14),LIN=LIN+1
"RTN","MPIUTL2",38,0)
 . S CIEN=$P($G(^MPIVET(ICN,1)),"^",2) I CIEN'="" S CIEN=$$STA^XUAF4(CIEN)
"RTN","MPIUTL2",39,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="CMOR:"_$G(CIEN),LIN=LIN+1
"RTN","MPIUTL2",40,0)
 S MSGID=$G(HL("MID"))
"RTN","MPIUTL2",41,0)
 I MSGID'="" D
"RTN","MPIUTL2",42,0)
 . N MSGIEN
"RTN","MPIUTL2",43,0)
 . S HL772=""
"RTN","MPIUTL2",44,0)
 . K HLMSG
"RTN","MPIUTL2",45,0)
 . S MSGIEN=$O(^HLMA("C",MSGID,0))
"RTN","MPIUTL2",46,0)
 . S DIC="^HLMA(",DR=".01;7;13;15;16",DA=MSGIEN,DIQ(0)="IE",DIQ="HLMSG"
"RTN","MPIUTL2",47,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","MPIUTL2",48,0)
 . S HL772=$G(HLMSG(773,MSGIEN,.01,"I"))
"RTN","MPIUTL2",49,0)
 . I (NAME="")!(NAME=",") D
"RTN","MPIUTL2",50,0)
 .. S HL77202=0 F  S HL77202=$O(^HL(772,HL772,"IN",HL77202)) Q:'HL77202  D
"RTN","MPIUTL2",51,0)
 ... I $P(^HL(772,HL772,"IN",HL77202,0),"^",1)="PID" D
"RTN","MPIUTL2",52,0)
 .... N ICN,NAME,SSN
"RTN","MPIUTL2",53,0)
 .... S ICN=$P(^HL(772,HL772,"IN",HL77202,0),"^",3) S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="ICN:"_+ICN
"RTN","MPIUTL2",54,0)
 .... S NAME=$P(^HL(772,HL772,"IN",HL77202,0),"^",6)
"RTN","MPIUTL2",55,0)
 .... S NAME=$TR(NAME,"~"," ") S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="NAME:"_NAME
"RTN","MPIUTL2",56,0)
 .... S SSN=$P(^HL(772,HL772,"IN",HL77202,0),"^",20) S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SSN:"_SSN
"RTN","MPIUTL2",57,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**HL7 MESSAGE**",LIN=LIN+1
"RTN","MPIUTL2",58,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="MESSAGE ID:"_MSGID,LIN=LIN+1
"RTN","MPIUTL2",59,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="LOGICAL LINK:"_$G(HLMSG(773,MSGIEN,7,"E")),LIN=LIN+1
"RTN","MPIUTL2",60,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="SENDING APPLICATION:"_$G(HLMSG(773,MSGIEN,13,"E")),LIN=LIN+1
"RTN","MPIUTL2",61,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="MESSAGE TYPE:"_$G(HLMSG(773,MSGIEN,15,"E")),LIN=LIN+1
"RTN","MPIUTL2",62,0)
 . S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="EVENT TYPE:"_$G(HLMSG(773,MSGIEN,16,"I")),LIN=LIN+1
"RTN","MPIUTL2",63,0)
 S ^TMP($J,"MPI SERVER EXCEPTION",LIN)="**END**",LIN=LIN+1
"RTN","MPIUTL2",64,0)
 D MAIL
"RTN","MPIUTL2",65,0)
 K LIN,HLMSG
"RTN","MPIUTL2",66,0)
 Q
"RTN","MPIUTL2",67,0)
MAIL ;
"RTN","MPIUTL2",68,0)
 N SERVER,XMDUZ,XMTEXT,XMSUB,XMY
"RTN","MPIUTL2",69,0)
 S SERVER=$$SERVER()
"RTN","MPIUTL2",70,0)
 Q:$G(SERVER)=""
"RTN","MPIUTL2",71,0)
 S XMDUZ="MPI AUSTIN EXCEPTIONS"
"RTN","MPIUTL2",72,0)
 S XMTEXT="^TMP($J,""MPI SERVER EXCEPTION"","
"RTN","MPIUTL2",73,0)
 S XMSUB="MPI/PD EXCEPTION"
"RTN","MPIUTL2",74,0)
 S XMY(.5)=""
"RTN","MPIUTL2",75,0)
 S XMY(SERVER)=""
"RTN","MPIUTL2",76,0)
 D ^XMD
"RTN","MPIUTL2",77,0)
 Q
"RTN","MPIUTL2",78,0)
SERVER() ;
"RTN","MPIUTL2",79,0)
 ;Description: Returns the <server name>@<server domain>. This entry
"RTN","MPIUTL2",80,0)
 ;returns the Servers location either at the test MPI or Production MPI.
"RTN","MPIUTL2",81,0)
 ;If a null is returned the MAIL subroutine will default to the MPIF
"RTN","MPIUTL2",82,0)
 ;EXCEPTIONS mail group
"RTN","MPIUTL2",83,0)
 ;
"RTN","MPIUTL2",84,0)
 ;Input: none
"RTN","MPIUTL2",85,0)
 ;Output: Where to send the exception.Returns the <server name>@<server domain> or Null
"RTN","MPIUTL2",86,0)
 ;
"RTN","MPIUTL2",87,0)
 N TO,IEN
"RTN","MPIUTL2",88,0)
 S TO=""
"RTN","MPIUTL2",89,0)
 ; get MPI logical link
"RTN","MPIUTL2",90,0)
 D LINK^HLUTIL3("200M",.HLL,"I")
"RTN","MPIUTL2",91,0)
 ; get MPI domain DBIA 3335
"RTN","MPIUTL2",92,0)
 S IEN=$O(HLL(0)) I +IEN>0 S TO=$$GET1^DIQ(870,+IEN_",",.03) I TO'="" S TO="S.MPI EXCEPTION SERVER@"_TO
"RTN","MPIUTL2",93,0)
 Q TO
"RTN","MPIUTL2",94,0)
 ;
"RTN","MPIUTL2",95,0)
VALPPF(MPIFAC,MPIPICN) ;API to Validate that Sending Facility is the CMOR ;**24
"RTN","MPIUTL2",96,0)
 ;Input:
"RTN","MPIUTL2",97,0)
 ;MPIFAC - Treating Facility
"RTN","MPIUTL2",98,0)
 ;MPIPICN - Integration Control Number
"RTN","MPIUTL2",99,0)
 ;
"RTN","MPIUTL2",100,0)
 ;Output:
"RTN","MPIUTL2",101,0)
 ;YES=1, NO=0
"RTN","MPIUTL2",102,0)
 ;
"RTN","MPIUTL2",103,0)
 Q $S($P($G(^MPIVET(+MPIPICN,1)),"^",2)=MPIFAC:1,1:0)
"RTN","MPIUTL3")
0^197^B57592165
"RTN","MPIUTL3",1,0)
MPIUTL3 ;BIR/PTD-Utility to Add/Delete/Deactivate Entries in Files 985 and 985.5 ;12/21/01
"RTN","MPIUTL3",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,21,23,26,27,24,31,35**;30 Apr 99
"RTN","MPIUTL3",3,0)
 ;Reference to $$NEWGCPR^OMGPID01 supported by IA #3495
"RTN","MPIUTL3",4,0)
 ;
"RTN","MPIUTL3",5,0)
DEACT(ICN,FLAG) ;DEACTIVATE entry in MPI VETERAN/CLIENT (#985) file,
"RTN","MPIUTL3",6,0)
 ;leave all data.  If optional FLAG is passed (as designated below),
"RTN","MPIUTL3",7,0)
 ;then delete CMOR and/or the OTHER IDS multiple.
"RTN","MPIUTL3",8,0)
 ;Delete pointers to ICN from files 985.25 & 985.5.
"RTN","MPIUTL3",9,0)
 ;Add note to cases in file 985.2 involved with ICN.
"RTN","MPIUTL3",10,0)
 ;Resolve exceptions for ICN in 985.9 if STATUS is UNASSIGNED.
"RTN","MPIUTL3",11,0)
 ;
"RTN","MPIUTL3",12,0)
 ;Input:
"RTN","MPIUTL3",13,0)
 ;  ICN - INTEGRATION CONTROL NUMBER
"RTN","MPIUTL3",14,0)
 ;  FLAG - (optional)
"RTN","MPIUTL3",15,0)
 ;      If sent with a value of "1", ONLY the CMOR field
"RTN","MPIUTL3",16,0)
 ;      is deleted.
"RTN","MPIUTL3",17,0)
 ;      If sent with a value of "2", ONLY the OTHER IDS
"RTN","MPIUTL3",18,0)
 ;      (multiple) field is deleted.
"RTN","MPIUTL3",19,0)
 ;      If sent with a value of "3", BOTH the CMOR and
"RTN","MPIUTL3",20,0)
 ;      OTHER IDS (multiple) fields are deleted.
"RTN","MPIUTL3",21,0)
 ;      If FLAG is not sent, is "0", or null, neither field is deleted.
"RTN","MPIUTL3",22,0)
 ;
"RTN","MPIUTL3",23,0)
 ;      Example: S ICN=1001131312
"RTN","MPIUTL3",24,0)
 ;               S RET=$$DEACT^MPIUTL3(ICN)
"RTN","MPIUTL3",25,0)
 ;      Example: S ICN=1001131312,FLAG=1
"RTN","MPIUTL3",26,0)
 ;               S RET=$$DEACT^MPIUTL3(ICN,FLAG)
"RTN","MPIUTL3",27,0)
 ;
"RTN","MPIUTL3",28,0)
 ;Returns: -1^error message, if unsuccessful
"RTN","MPIUTL3",29,0)
 ;          0 if OK
"RTN","MPIUTL3",30,0)
 ;
"RTN","MPIUTL3",31,0)
EN Q:+ICN<1 "-1^Invalid ICN format."
"RTN","MPIUTL3",32,0)
 Q:ICN["V" "-1^Invalid ICN format."
"RTN","MPIUTL3",33,0)
 S ICN=+ICN ;ICN - NO checksum digit
"RTN","MPIUTL3",34,0)
 Q:'$D(^MPIVET(ICN)) "-1^No entry for ICN in MPI VETERAN/CLIENT (#985) file."
"RTN","MPIUTL3",35,0)
 N DA,DIK,MPI,MPIDA,RET
"RTN","MPIUTL3",36,0)
TRYA L +^MPIVET(ICN):10 I '$T G TRYA
"RTN","MPIUTL3",37,0)
 ; ^ KEEP TRYING TIL GET LOCK **31
"RTN","MPIUTL3",38,0)
 ;I '$T Q "-1^Unable to lock MPI VETERAN/CLIENT (#985) file record."
"RTN","MPIUTL3",39,0)
 ;
"RTN","MPIUTL3",40,0)
RSJNL ;Add note to MPI DATA MGT RESOLUTION JOURNAL (#985.2) file
"RTN","MPIUTL3",41,0)
 ;for cases associated with ICN regardless of status.
"RTN","MPIUTL3",42,0)
 ;Loop on ICN x-ref.
"RTN","MPIUTL3",43,0)
 N CASEIEN,NOTE
"RTN","MPIUTL3",44,0)
 S CASEIEN=0 F  S CASEIEN=$O(^MPI(985.2,"ICN",ICN,CASEIEN)) Q:'CASEIEN  D
"RTN","MPIUTL3",45,0)
 .S NOTE(1)=ICN_" deactivated."
"RTN","MPIUTL3",46,0)
 .D ADDNOTE^MPIMDMA1(CASEIEN,.NOTE)
"RTN","MPIUTL3",47,0)
 ;
"RTN","MPIUTL3",48,0)
ACTV ;Delete entries in MPI DATA MGT ACTIVE RESOLUTION WORK (#985.25) file for ICN.
"RTN","MPIUTL3",49,0)
 S MPIDA=0 F  S MPIDA=$O(^MPI(985.25,"B",ICN,MPIDA)) Q:'MPIDA  D 
"RTN","MPIUTL3",50,0)
 .S DA=MPIDA,DIK="^MPI(985.25," D ^DIK
"RTN","MPIUTL3",51,0)
 I $O(^MPI(985.25,"B",ICN,0)) D UNLOCK Q "-1^Unable to delete entries in MPI DATA MGT ACTIVE RESOLUTION WORK (#985.25) file for ICN."
"RTN","MPIUTL3",52,0)
 ;
"RTN","MPIUTL3",53,0)
FACASN ;Delete entries in MPI FACILITY ASSOCIATION (#985.5) file for ICN.
"RTN","MPIUTL3",54,0)
 S MPI=0 F  S MPI=$O(^MPI(985.5,"AM",ICN,MPI)) Q:'MPI  D
"RTN","MPIUTL3",55,0)
 .S MPIDA=0 F  S MPIDA=$O(^MPI(985.5,"AM",ICN,MPI,MPIDA)) Q:'MPIDA  D
"RTN","MPIUTL3",56,0)
 ..S DA=MPIDA,DIK="^MPI(985.5," D ^DIK
"RTN","MPIUTL3",57,0)
 I $O(^MPI(985.5,"AM",ICN,0)) D UNLOCK Q "-1^Unable to delete entries in MPI FACILITY ASSOCIATION (#985.5) file for ICN."
"RTN","MPIUTL3",58,0)
 ;
"RTN","MPIUTL3",59,0)
SRVEXC ;Check entries in the MPI SERVER EXCEPTIONS (#985.9) file for ICN.
"RTN","MPIUTL3",60,0)
 S RET=$$RSLVSREX^MPIUTL9(ICN) I RET'=0 D UNLOCK Q RET
"RTN","MPIUTL3",61,0)
 ;
"RTN","MPIUTL3",62,0)
MPI ;If FLAG is sent, delete CMOR and/or OTHER IDS (multiple)
"RTN","MPIUTL3",63,0)
 ;in MPI VETERAN/CLIENT (#985) file for ICN.
"RTN","MPIUTL3",64,0)
 ;
"RTN","MPIUTL3",65,0)
 I $G(FLAG) N ST,IEN S IEN=0 D
"RTN","MPIUTL3",66,0)
 .;Delete COORDINATING MASTER OF RECORD (#16)
"RTN","MPIUTL3",67,0)
 .I (FLAG=1)!(FLAG=3) S DIE="^MPIVET(",DA=ICN,DR="16///@" D ^DIE K DA,DIE,DR
"RTN","MPIUTL3",68,0)
 .;Delete OTHER IDS (multiple)
"RTN","MPIUTL3",69,0)
 .I (FLAG=2)!(FLAG=3) D
"RTN","MPIUTL3",70,0)
 ..F  S IEN=$O(^MPIVET(ICN,200,IEN)) Q:'IEN  D
"RTN","MPIUTL3",71,0)
 ...S DIE="^MPIVET("_ICN_",200,",DA=IEN,DA(1)=ICN
"RTN","MPIUTL3",72,0)
 ...S DR=".01///@;.02///@;.03///@" D ^DIE K DA,DIE,DR
"RTN","MPIUTL3",73,0)
 ;Set the ID State to DEACTIVATED using API
"RTN","MPIUTL3",74,0)
 S ST="D" S RET=$$SETSTATE^MPISIUT(ICN,ST)
"RTN","MPIUTL3",75,0)
 I RET<0 D UNLOCK Q RET
"RTN","MPIUTL3",76,0)
 D UNLOCK
"RTN","MPIUTL3",77,0)
 Q 0
"RTN","MPIUTL3",78,0)
 ;
"RTN","MPIUTL3",79,0)
UNLOCK ;Unlock MPI VETERAN/CLIENT (#985) file for ICN.
"RTN","MPIUTL3",80,0)
 L -^MPIVET(ICN)
"RTN","MPIUTL3",81,0)
 Q
"RTN","MPIUTL3",82,0)
 ;
"RTN","MPIUTL3",83,0)
ADDVET(SITE,ARR,MOVE) ;Add new entry to MPI VETERAN/CLIENT (#985) file, call UPDATE
"RTN","MPIUTL3",84,0)
 ;^MPIUTL4 to update fields.  ADDVET is ONLY called to add a NEW ICN.
"RTN","MPIUTL3",85,0)
 ;
"RTN","MPIUTL3",86,0)
 ;SITE - treating facility (stn #) from whom msg is received
"RTN","MPIUTL3",87,0)
 ;ARR - array of field values to be updated; subscript is field number
"RTN","MPIUTL3",88,0)
 ;      as found in MPI VETERAN/CLIENT (#985) file.
"RTN","MPIUTL3",89,0)
 ;MOVE (optional) - As part of the "Move" process when a new ICN
"RTN","MPIUTL3",90,0)
 ;                  is created only update 985.  Value should = 1
"RTN","MPIUTL3",91,0)
 ;
"RTN","MPIUTL3",92,0)
 ;      Example: S SITE=520,ARR(1)="JONES",ARR(2)="ROBERT"
"RTN","MPIUTL3",93,0)
 ;               S ARR(7)="JAN 12, 1922",ARR(13)=422457643
"RTN","MPIUTL3",94,0)
 ;               S RET=$$ADDVET^MPIUTL3(SITE,.ARR)
"RTN","MPIUTL3",95,0)
 ;
"RTN","MPIUTL3",96,0)
 ;      Calling routine ensures that data is in EXTERNAL format for input
"RTN","MPIUTL3",97,0)
 ;
"RTN","MPIUTL3",98,0)
 ;Returns: -1^error message, if unable to add
"RTN","MPIUTL3",99,0)
 ;          If successful in adding, return ICN
"RTN","MPIUTL3",100,0)
 ;
"RTN","MPIUTL3",101,0)
 I SITE="" Q "-1^Invalid parameter - no SITE passed."
"RTN","MPIUTL3",102,0)
 I '$D(ARR) Q "-1^Invalid parameter - no data sent in array ARR."
"RTN","MPIUTL3",103,0)
 I '$D(ARR(1)) Q "-1^Required data missing - SURNAME in array ARR."
"RTN","MPIUTL3",104,0)
 ;I '$D(ARR(2)) Q "-1^Required data missing - FIRST NAME in array ARR." **24
"RTN","MPIUTL3",105,0)
 ;I '$D(ARR(7)) Q "-1^Required data missing - DATE OF BIRTH in array ARR." **24
"RTN","MPIUTL3",106,0)
 ;
"RTN","MPIUTL3",107,0)
 N DOB,FNAM,GNDR,ICN,INTL,LNAM,MATCH,MNAM,NODE1,PRFX,RET,SSN,SFX ;**24
"RTN","MPIUTL3",108,0)
 N LSTICN,NM,NM2,SAVFN,SAVLN,SAVMN,SAVPRE,SAVSUF,MOVEARR
"RTN","MPIUTL3",109,0)
 S (ICN,MATCH)=0
"RTN","MPIUTL3",110,0)
 ;If pseudo SSN sent, change to "@", field will be deleted in UPDATE.
"RTN","MPIUTL3",111,0)
 I $D(ARR(13)),$G(ARR(13))["P" S ARR(13)="@"
"RTN","MPIUTL3",112,0)
 I $D(ARR(13)),$G(ARR(13))'="@" S ARR(13)=$E(ARR(13),1,9)
"RTN","MPIUTL3",113,0)
 ;Standardize incoming ARR name values
"RTN","MPIUTL3",114,0)
 D FORMAT^MPIUTL6
"RTN","MPIUTL3",115,0)
 ;Get values from standardized (name) and incoming array ARR
"RTN","MPIUTL3",116,0)
 S LNAM=$G(ARR(1)),FNAM=$G(ARR(2)),MNAM=$G(ARR(3)),PRFX=$G(ARR(4)) ;**24
"RTN","MPIUTL3",117,0)
 S SFX=$G(ARR(5)),DOB=$G(ARR(7)),GNDR=$G(ARR(12)),SSN=$G(ARR(13)) ;**24
"RTN","MPIUTL3",118,0)
 I LNAM="""""" S LNAM=""
"RTN","MPIUTL3",119,0)
 I FNAM="""""" S FNAM=""
"RTN","MPIUTL3",120,0)
 I MNAM="""""" S MNAM=""
"RTN","MPIUTL3",121,0)
 I PRFX="""""" S PRFX=""
"RTN","MPIUTL3",122,0)
 I SFX="""""" S SFX=""
"RTN","MPIUTL3",123,0)
 I SSN="@" S SSN="" ;for comparison
"RTN","MPIUTL3",124,0)
 I DOB'="" D DT^DILF(,DOB,.INTL) S DOB=INTL ; for comparison
"RTN","MPIUTL3",125,0)
 ;
"RTN","MPIUTL3",126,0)
MATCH ;Does exact match exist in MPI VETERAN/CLIENT (#985) file?
"RTN","MPIUTL3",127,0)
 ;**24 check if this site/dfn pair exists, if yes use that ICN (id state can be permanent or temporary)
"RTN","MPIUTL3",128,0)
 I $G(MOVE)'=1 D
"RTN","MPIUTL3",129,0)
 . I $D(ARR("DFN")) N API S API=$$GETICN^MPIUTL11(ARR("DFN"),SITE,"200M",1,1) I +API>1 S ICN=+API,MATCH=1,ARR("ICN")=ICN Q
"RTN","MPIUTL3",130,0)
 . ; ^ **31 ADDED SETTING OF ARR("ICN")
"RTN","MPIUTL3",131,0)
 . ;if there is a SSN loop on "SSN" xref
"RTN","MPIUTL3",132,0)
 . I $G(SSN)'="" I $O(^MPIVET("SSN",SSN,0)) D
"RTN","MPIUTL3",133,0)
 .. F  S ICN=$O(^MPIVET("SSN",SSN,ICN)) Q:MATCH=1  Q:'ICN  D  K OLD I MATCH=1 S ICN=LSTICN Q
"RTN","MPIUTL3",134,0)
 ... S MATCH=0 K OLD
"RTN","MPIUTL3",135,0)
 ... S MATCH=$$EXACT(ICN,LNAM,FNAM,MNAM,PRFX,SFX,DOB,GNDR,SSN,SITE,.ARR) ;**24
"RTN","MPIUTL3",136,0)
 ... I MATCH=1 S LSTICN=ICN
"RTN","MPIUTL3",137,0)
 .;if NO first name (ie. MADONNA) and no SSN loop on "ADOB" xref
"RTN","MPIUTL3",138,0)
 .; \/ **31 Added DOB'="" check
"RTN","MPIUTL3",139,0)
 .I $G(SSN)="",$G(FNAM)="",$G(DOB)'="" I $O(^MPIVET("ADOB",DOB,0)) D
"RTN","MPIUTL3",140,0)
 .. F  S ICN=$O(^MPIVET("ADOB",DOB,ICN)) Q:MATCH=1  Q:'ICN  D  K OLD I MATCH=1 S ICN=LSTICN Q
"RTN","MPIUTL3",141,0)
 ... S MATCH=0 K OLD
"RTN","MPIUTL3",142,0)
 ... S MATCH=$$EXACT(ICN,LNAM,FNAM,MNAM,PRFX,SFX,DOB,GNDR,SSN,SITE,.ARR) ;**24
"RTN","MPIUTL3",143,0)
 ... I MATCH=1 S LSTICN=ICN
"RTN","MPIUTL3",144,0)
 ;
"RTN","MPIUTL3",145,0)
SKIP ;Restore original name values into ARR because
"RTN","MPIUTL3",146,0)
 ;UPDATE^MPIUTL4 may update 985 as well as 985.5.
"RTN","MPIUTL3",147,0)
 D RESTORE^MPIUTL6
"RTN","MPIUTL3",148,0)
 ;
"RTN","MPIUTL3",149,0)
 ;If exact match was found, use that ICN to call UPDATE^MPIUTL4.
"RTN","MPIUTL3",150,0)
 I MATCH=1 S RET=$$UPDATE^MPIUTL4(ICN,SITE,.ARR) D  Q RET
"RTN","MPIUTL3",151,0)
 .I +RET'=0 S ARR("ICN")=ICN D ERROR^MPIA08(.ARR,.HL,RET,234) Q
"RTN","MPIUTL3",152,0)
 .S RET=ICN ;Return ICN
"RTN","MPIUTL3",153,0)
 ;
"RTN","MPIUTL3",154,0)
ICN ;Else, no exact match found; create new ICN entry.
"RTN","MPIUTL3",155,0)
 ; check to be sure we don't already have one of the OTHER IDS already in use for a patient that wasn't an exact match.
"RTN","MPIUTL3",156,0)
 N CHECK,NODE,P1,P2,P3,NXT S RET=0,NXT=0
"RTN","MPIUTL3",157,0)
 I $O(ARR("OID",0)) D
"RTN","MPIUTL3",158,0)
 .F  S NXT=$O(ARR("OID",NXT)) Q:NXT=""!(+RET<0)  D
"RTN","MPIUTL3",159,0)
 ..S NODE=$G(ARR("OID",NXT)),P1=$P(NODE,"^"),P2=$P(NODE,"^",2),P3=$P(NODE,"^",3)
"RTN","MPIUTL3",160,0)
 ..I P1=""!(P2="")!(P3="")!(ICN="") Q
"RTN","MPIUTL3",161,0)
 ..;Quit if entry already exists in OTHER IDS (#200) multiple.
"RTN","MPIUTL3",162,0)
 ..S CHECK=$O(^MPIVET("D",P2,P1,P3,""))
"RTN","MPIUTL3",163,0)
 ..I CHECK'="" S RET="-1^Unable to assign a new ICN for patient with OTHER ID "_P1_" and TYPE "_P2_" because ICN "_CHECK_" already has this ID, type and location"
"RTN","MPIUTL3",164,0)
 I +RET'=0 Q RET
"RTN","MPIUTL3",165,0)
 N DA,DD,DIC,DINUM,DO,X,Y,%,%H,%I
"RTN","MPIUTL3",166,0)
 L +^MPIVETN
"RTN","MPIUTL3",167,0)
 S Y=$G(^MPIVETN)
"RTN","MPIUTL3",168,0)
 I Y="" L +^MPIVET(0) S (Y,^MPIVETN)=+$P($G(^MPIVET(0)),U,3) L -^MPIVET(0)
"RTN","MPIUTL3",169,0)
 S (X,^MPIVETN)=Y+1
"RTN","MPIUTL3",170,0)
 L -^MPIVETN
"RTN","MPIUTL3",171,0)
 S:X?.NP X=X_"V"_$$CHECKDG^MPIUTL(X)
"RTN","MPIUTL3",172,0)
 S DIC="^MPIVET(",DIC(0)="L",DINUM=+X
"RTN","MPIUTL3",173,0)
 I $D(SITE),SITE'="" S DIC("DR")="16///`"_$$IEN^XUAF4(SITE)
"RTN","MPIUTL3",174,0)
 D FILE^DICN
"RTN","MPIUTL3",175,0)
 S ICN=+Y
"RTN","MPIUTL3",176,0)
 I Y<0 Q "-1^Unable to create new entry in MPI VETERAN/CLIENT (#985) file."
"RTN","MPIUTL3",177,0)
 I $D(^TMP("MPILMBJ",$J)) S ^TMP("MPILMBJ",$J,ICN)=""
"RTN","MPIUTL3",178,0)
 S ARR(21)=MPIWHO
"RTN","MPIUTL3",179,0)
 D NOW^%DTC
"RTN","MPIUTL3",180,0)
 S ARR(19)=%
"RTN","MPIUTL3",181,0)
 S ARR(20)=SITE
"RTN","MPIUTL3",182,0)
 S RET=0
"RTN","MPIUTL3",183,0)
 I $G(MOVE)=1 S MOVEARR(19)=ARR(19),MOVEARR(20)=SITE,MOVEARR(21)=ARR(21) N IEN S IEN=$O(^MPI(985.5,"ASD",ARR("DFN"),$$IEN^XUAF4(SITE),0)) D GET9855^MPIUTL5(IEN,.MOVEARR) D VETFILE^MPIUTL6(ICN,.MOVEARR) K MOVEARR
"RTN","MPIUTL3",184,0)
 I $G(MOVE)'=1 S RET=$$UPDATE^MPIUTL4(ICN,SITE,.ARR)
"RTN","MPIUTL3",185,0)
 I +RET'=0 S ARR("ICN")=ICN D ERROR^MPIA08(.ARR,.HL,RET,234)
"RTN","MPIUTL3",186,0)
 ;;I +RET=0&($D(MPIMFLG)) S ARR("ICN")=ICN D ERROR^MPIA08(.ARR,.HL,"Missing DOB and/or SSN at site for this patient",209) ;**24
"RTN","MPIUTL3",187,0)
 ;;^ covered by ID state set/re-evaluation
"RTN","MPIUTL3",188,0)
 K MPIMFLG ;**24
"RTN","MPIUTL3",189,0)
 S RET=ICN ;Return ICN
"RTN","MPIUTL3",190,0)
 Q RET
"RTN","MPIUTL3",191,0)
 ;
"RTN","MPIUTL3",192,0)
EXACT(ICN,LNAM,FNAM,MNAM,PRFX,SFX,DOB,GNDR,SSN,SITE,ARR) ;
"RTN","MPIUTL3",193,0)
 N OLD,IEN9855,SFIEN
"RTN","MPIUTL3",194,0)
 ;loop through #985.5 - Does this DFN for this site already exists
"RTN","MPIUTL3",195,0)
 S SFIEN=$$IEN^XUAF4(SITE)
"RTN","MPIUTL3",196,0)
 S IEN9855=$O(^MPI(985.5,"AM",ICN,SFIEN,0)) I IEN9855'="" I $D(^MPI(985.5,IEN9855,0)) I $G(ARR("DFN"))'="" I $P($G(^MPI(985.5,IEN9855,0)),"^",3)=ARR("DFN") Q 1
"RTN","MPIUTL3",197,0)
 D GETS^DIQ(985,+ICN_",","1;2;3;4;5;7;12;13","EI","OLD") ;**24
"RTN","MPIUTL3",198,0)
 ;Compare incoming values to old values for ICN; quit if no match.
"RTN","MPIUTL3",199,0)
 I LNAM'=OLD(985,+ICN_",",1,"E") Q 0
"RTN","MPIUTL3",200,0)
 I FNAM'=OLD(985,+ICN_",",2,"E") Q 0
"RTN","MPIUTL3",201,0)
 I MNAM'=OLD(985,+ICN_",",3,"E") Q 0
"RTN","MPIUTL3",202,0)
 I PRFX'=OLD(985,+ICN_",",4,"E") Q 0
"RTN","MPIUTL3",203,0)
 I SFX'=OLD(985,+ICN_",",5,"E") Q 0
"RTN","MPIUTL3",204,0)
 I DOB'=OLD(985,+ICN_",",7,"I") Q 0
"RTN","MPIUTL3",205,0)
 I GNDR'=OLD(985,+ICN_",",12,"E") Q 0  ;**24
"RTN","MPIUTL3",206,0)
 I SSN'=OLD(985,+ICN_",",13,"E") Q 0
"RTN","MPIUTL3",207,0)
 ;Else all fields match for existing ICN entry.
"RTN","MPIUTL3",208,0)
 Q 1
"RTN","MPIUTL4")
0^198^B28028802
"RTN","MPIUTL4",1,0)
MPIUTL4 ;BIR/PTD-Utility to Update Files 985 and 985.5 ;12/21/01
"RTN","MPIUTL4",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,21,23,26,27,24,31,35**;30 Apr 99
"RTN","MPIUTL4",3,0)
 ;
"RTN","MPIUTL4",4,0)
UPDATE(ICN,SITE,ARR) ;Update MPI FACILITY ASSOCIATION (#985.5) file and possibly MPI VETERAN/CLIENT (#985).
"RTN","MPIUTL4",5,0)
 ;
"RTN","MPIUTL4",6,0)
 ;ICN - patient integration control number
"RTN","MPIUTL4",7,0)
 ;SITE - treating facility (station number) from whom message is received
"RTN","MPIUTL4",8,0)
 ;ARR - array of field values to be updated; subscript is field number
"RTN","MPIUTL4",9,0)
 ;      as found in the MPI VETERAN/CLIENT (#985) file.
"RTN","MPIUTL4",10,0)
 ;
"RTN","MPIUTL4",11,0)
 ;      NOTE: To update the DATE LAST TREATED (#29) field in the MPI
"RTN","MPIUTL4",12,0)
 ;      FACILITY ASSOCIATION (#985.5) file, also send ARR("DLT") with
"RTN","MPIUTL4",13,0)
 ;      the date as the array value.  Date should be in external format.
"RTN","MPIUTL4",14,0)
 ;      To update the DFN (#2) field in the MPI FACILITY ASSOCIATION
"RTN","MPIUTL4",15,0)
 ;      (#985.5) file, also send ARR("DFN").
"RTN","MPIUTL4",16,0)
 ;      To remove a FACILITY ID (#.01) from the MPI FACILITY ASSOCIATION
"RTN","MPIUTL4",17,0)
 ;      (#985.5) file, also send ARR("FID")="@".
"RTN","MPIUTL4",18,0)
 ;      To move a TF from one ICN to another pass the surviving ICN in
"RTN","MPIUTL4",19,0)
 ;      ARR(18) which will change it in #985.5 and trigger a TF update
"RTN","MPIUTL4",20,0)
 ;      for the surviving ICN.
"RTN","MPIUTL4",21,0)
 ;      To update fields in the OTHER IDS (#200) multiple in the MPI 
"RTN","MPIUTL4",22,0)
 ;      VETERAN/CLIENT (#985) file for an ICN, also send the ARR("OID",#)
"RTN","MPIUTL4",23,0)
 ;      multiple.  Array value ="P1^P2^P3".
"RTN","MPIUTL4",24,0)
 ;      To update the ADT/HL7 EVENT REASON (#30) field in the MPI
"RTN","MPIUTL4",25,0)
 ;      FACILITY ASSOCIATION (#985.5) file, also send ARR("EVR").
"RTN","MPIUTL4",26,0)
 ;      To update the DATE OF LAST UPDATE MESSAGE (#31) field in the MPI
"RTN","MPIUTL4",27,0)
 ;      FACILITY ASSOCIATION (#985.5) file, also send ARR("DLUP") with
"RTN","MPIUTL4",28,0)
 ;      the date as the array value.  Date should be in external format.
"RTN","MPIUTL4",29,0)
 ;
"RTN","MPIUTL4",30,0)
 ;      Calling routine ensures that data is in EXTERNAL format for input
"RTN","MPIUTL4",31,0)
 ;
"RTN","MPIUTL4",32,0)
 ;      Example: S ICN=1001131312,SITE=520
"RTN","MPIUTL4",33,0)
 ;               S ARR(1)="JONES",ARR(2)="ROBERT",ARR("DFN")="928374659"
"RTN","MPIUTL4",34,0)
 ;               S ARR(13)=422457643,ARR("DLT")="JAN 4, 2002"
"RTN","MPIUTL4",35,0)
 ;               S RET=$$UPDATE^MPIUTL4(ICN,SITE,.ARR)
"RTN","MPIUTL4",36,0)
 ;
"RTN","MPIUTL4",37,0)
 ;Returns: -1^error message, if unable to update
"RTN","MPIUTL4",38,0)
 ;          0 if successful in updating
"RTN","MPIUTL4",39,0)
 ;
"RTN","MPIUTL4",40,0)
EN ;Entry point to process incoming data.
"RTN","MPIUTL4",41,0)
 N CMOR,CMORCHG,CNT,FLD,IEN,MPI,NEWARR,NEWCMOR,NODE1,RESULT,RET,STNM,TFIEN,Y ;**26
"RTN","MPIUTL4",42,0)
 S RESULT=0
"RTN","MPIUTL4",43,0)
 I ICN="" S RESULT="-1^Invalid parameter - no ICN passed." Q RESULT
"RTN","MPIUTL4",44,0)
 I ICN<1 S RESULT="-1^Invalid ICN format." Q RESULT
"RTN","MPIUTL4",45,0)
 I ICN["V" S RESULT="-1^Invalid ICN format." Q RESULT
"RTN","MPIUTL4",46,0)
 S ICN=+ICN ;ensure ICN does not contain checksum digit
"RTN","MPIUTL4",47,0)
 I '$D(^MPIVET(ICN)) S RESULT="-1^No entry for ICN in MPI VETERAN/CLIENT (#985) file." Q RESULT
"RTN","MPIUTL4",48,0)
 I SITE="" S RESULT="-1^Invalid parameter - no SITE passed." Q RESULT
"RTN","MPIUTL4",49,0)
 I '$D(ARR) S RESULT="-1^No field data sent in array ARR for ICN "_ICN_"." Q RESULT
"RTN","MPIUTL4",50,0)
START ;If pseudo SSN sent, change to "@", field will be deleted upon update.
"RTN","MPIUTL4",51,0)
 I $D(ARR(13)),$G(ARR(13))["P" S ARR(13)="@"
"RTN","MPIUTL4",52,0)
 I $D(ARR(13)),$G(ARR(13))'="@" S ARR(13)=$E(ARR(13),1,9)
"RTN","MPIUTL4",53,0)
 ;Convert 2-character state code to state name - POB State
"RTN","MPIUTL4",54,0)
 I $D(ARR(9)),$L(ARR(9))=2 S IEN=$O(^DIC(5,"C",ARR(9),"")) I IEN S ARR(9)=$P(^DIC(5,+IEN,0),"^") ;**DRI
"RTN","MPIUTL4",55,0)
 ;Convert 2-character state code to state name - State [residence]
"RTN","MPIUTL4",56,0)
 I $D(ARR(35)),$L(ARR(35))=2 S IEN=$O(^DIC(5,"C",ARR(35),"")) I IEN S ARR(35)=$P(^DIC(5,+IEN,0),"^") ;**21
"RTN","MPIUTL4",57,0)
 D CMOR I RESULT'=0 Q RESULT  ;**24 REMOVED UNLOCK LINE TAG
"RTN","MPIUTL4",58,0)
 ;**27 check if Name, DOB, SSN and Sex are to change - need to only update 985.5 and stop broadcast
"RTN","MPIUTL4",59,0)
 D CONVERT^MPIUTL9 I RESULT'=0 Q RESULT  ;**24 REMOVE UNLOCK LINE TAG
"RTN","MPIUTL4",60,0)
 I '$D(ARR("FID"))&($$STA^XUAF4(SITE)'=200)&(HL("ETN")'="A03")&(HL("ETN")'="A40") K MPIBRD,MPIMERG D IDCHECK^MPIUTL10(ICN,SITE,CMOR,.NEWARR,.MPIBRD,.MPIMERG,.ARR)
"RTN","MPIUTL4",61,0)
 ; ^ if deleting tf, site is FHIE, message is A03 or A40 don't do IDCHECK
"RTN","MPIUTL4",62,0)
 I $D(MPIBRD) D FAFILE^MPIUTL6 Q RESULT  ;**24 REMOVE UNLOCK LINE TAG
"RTN","MPIUTL4",63,0)
 ;
"RTN","MPIUTL4",64,0)
 ;Update OTHER IDS if data has been sent in the ARR("OID") array.
"RTN","MPIUTL4",65,0)
TRYLK L +^MPIVET(ICN):10 I '$T G TRYLK
"RTN","MPIUTL4",66,0)
 ; ^ keep trying til get lock **31
"RTN","MPIUTL4",67,0)
 ;I '$T S RESULT="-1^Unable to lock MPIVET file (#985) record" Q RESULT
"RTN","MPIUTL4",68,0)
 I $O(ARR("OID",0)) S RET=$$OID^MPIUTL6(ICN,.ARR) I RET'=1 D UNLOCK Q RET
"RTN","MPIUTL4",69,0)
 I $O(ARR("OID",0))&'$O(ARR(0)) D UNLOCK Q RESULT
"RTN","MPIUTL4",70,0)
 D UNLOCK
"RTN","MPIUTL4",71,0)
 ;Check to see if SITE equals COORDINATING MASTER OF RECORD (#16) in the MPI VETERAN/CLIENT (#985) file for ICN.
"RTN","MPIUTL4",72,0)
 ;If sending site is NOT the CMOR, convert ARR data, only update 985.5.
"RTN","MPIUTL4",73,0)
 I SITE'=CMOR D  Q RESULT
"RTN","MPIUTL4",74,0)
 .;Remove facility from MPI FACILITY ASSOCIATION (#985.5) file?  If so, delete and quit.
"RTN","MPIUTL4",75,0)
 .I $D(ARR("FID")),$G(ARR("FID"))="@" D  Q
"RTN","MPIUTL4",76,0)
 ..D DEL1TF^MPIUTL9(ICN,SITE)
"RTN","MPIUTL4",77,0)
 ..I $O(^MPI(985.5,"AM",ICN,SITE,0)) S RESULT="-1^Unable to delete entry in MPI FACILITY ASSOCIATION (#985.5) file for ICN."
"RTN","MPIUTL4",78,0)
 .D FAFILE^MPIUTL6
"RTN","MPIUTL4",79,0)
 ;
"RTN","MPIUTL4",80,0)
 ;Else sending site is the CMOR.
"RTN","MPIUTL4",81,0)
TRYLK2 L +^MPIVET(ICN):10 I '$T G TRYLK2
"RTN","MPIUTL4",82,0)
 ; ^ keep trying til get lock **31
"RTN","MPIUTL4",83,0)
 ;I '$T S RESULT="-1^Unable to lock MPIVET file (#985) record" Q RESULT
"RTN","MPIUTL4",84,0)
 ;Remove facility from MPI FACILITY ASSOCIATION (#985.5) file?
"RTN","MPIUTL4",85,0)
 I $D(ARR("FID")),$G(ARR("FID"))="@" D  D UNLOCK Q RESULT
"RTN","MPIUTL4",86,0)
 .;How many associated facilities for ICN?
"RTN","MPIUTL4",87,0)
 .S (CNT,MPI)=0 F  S MPI=$O(^MPI(985.5,"AM",ICN,MPI)) Q:'MPI  S CNT=CNT+1
"RTN","MPIUTL4",88,0)
 .I CNT>1 S RESULT="-1^Unable to remove CMOR site "_SITE_" association with ICN "_ICN_" in MPI FACILITY ASSOCIATION (#985.5) file." Q
"RTN","MPIUTL4",89,0)
 .;Is CMOR the only associated facility? If so, remove from 985.5 and deactivate ICN in 985.
"RTN","MPIUTL4",90,0)
 .I CNT=1,$O(^MPI(985.5,"AM",ICN,SITE,0)) D
"RTN","MPIUTL4",91,0)
 ..D DEL1TF^MPIUTL9(ICN,SITE)
"RTN","MPIUTL4",92,0)
 ..I $O(^MPI(985.5,"AM",ICN,SITE,0)) S RESULT="-1^Unable to delete entry in MPI FACILITY ASSOCIATION (#985.5) file for ICN." Q
"RTN","MPIUTL4",93,0)
 ..S RESULT=$$DEACT^MPIUTL3(ICN,2) ;**31 add 2 parameter to remove OTHER IDs
"RTN","MPIUTL4",94,0)
 .;If there are NO associated facilities, deactivate ICN in 985.
"RTN","MPIUTL4",95,0)
 .I CNT=0 S RESULT=$$DEACT^MPIUTL3(ICN,2) ;**31 add 2 parameter to remove OTHER IDs
"RTN","MPIUTL4",96,0)
 ;
"RTN","MPIUTL4",97,0)
 ;Did CMOR site request a "change of CMOR"?  If YES, update only the MPI VETERAN/CLIENT (#985) file with data from the NEWCMOR.
"RTN","MPIUTL4",98,0)
 S CMORCHG=0 I $D(ARR(16)) S NEWCMOR=+$G(ARR(16)) D  I RESULT'=0 D UNLOCK Q RESULT
"RTN","MPIUTL4",99,0)
 .I NEWCMOR'>0 S RESULT="-1^Invalid input for CMOR in ARR(16)." Q
"RTN","MPIUTL4",100,0)
 .I NEWCMOR>0 S NEWCMOR=$$IEN^XUAF4(NEWCMOR) I NEWCMOR<0 S RESULT="-1^Lookup on "_ARR(16)_" failed in INSTITUTION (#4) file." Q  ;**26
"RTN","MPIUTL4",101,0)
 .I CMOR'=NEWCMOR S CMORCHG=1
"RTN","MPIUTL4",102,0)
 I CMORCHG=1 D  Q RESULT
"RTN","MPIUTL4",103,0)
 .D CMORCHG^MPIUTL9 K ARR(16) I RESULT'=0 D UNLOCK Q
"RTN","MPIUTL4",104,0)
 .I $G(ARR(1))'="" D VETFILE^MPIUTL6(ICN,.ARR) ;**35 add params
"RTN","MPIUTL4",105,0)
 .D UNLOCK
"RTN","MPIUTL4",106,0)
 ;
"RTN","MPIUTL4",107,0)
 ;Else CMOR site did NOT request a "change of CMOR", update the MPI VETERAN/CLIENT (#985) and MPI FACILITY ASSOCIATION (#985.5) files for ICN.
"RTN","MPIUTL4",108,0)
 I $G(ARR(1))'="" D VETFILE^MPIUTL6(ICN,.ARR) ;**35 add params
"RTN","MPIUTL4",109,0)
 D UNLOCK
"RTN","MPIUTL4",110,0)
 D FAFILE^MPIUTL6
"RTN","MPIUTL4",111,0)
 Q RESULT
"RTN","MPIUTL4",112,0)
 ;
"RTN","MPIUTL4",113,0)
 ;
"RTN","MPIUTL4",114,0)
CMOR ;Convert SITE from station number to IEN, get CMOR for the sending SITE.
"RTN","MPIUTL4",115,0)
 S RESULT=0,STNM=SITE ;**26
"RTN","MPIUTL4",116,0)
 ;L +^MPIVET(ICN):10 I '$T S RESULT="-1^Unable to lock MPI VETERAN/CLIENT (#985) file record." Q **24 MOVED LOCK
"RTN","MPIUTL4",117,0)
 S SITE=$$IEN^XUAF4(SITE) I SITE<0 S RESULT="-1^Lookup on "_STNM_" failed in INSTITUTION (#4) file." Q  ;**26
"RTN","MPIUTL4",118,0)
 S CMOR=$P($G(^MPIVET(ICN,1)),"^",2) I 'CMOR S RESULT="-1^No CMOR for ICN "_ICN_" in MPI VETERAN/CLIENT (#985) file." Q
"RTN","MPIUTL4",119,0)
 Q
"RTN","MPIUTL4",120,0)
 ;
"RTN","MPIUTL4",121,0)
UNLOCK ;Unlock MPI VETERAN/CLIENT (#985) file for ICN.
"RTN","MPIUTL4",122,0)
 L -^MPIVET(ICN)
"RTN","MPIUTL4",123,0)
 Q
"RTN","MPIUTL5")
0^199^B21369270
"RTN","MPIUTL5",1,0)
MPIUTL5 ;CMC/BPISC-X-REF FOR OTHER IDS ;8/20/01
"RTN","MPIUTL5",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN ;**11,24,31,35**;30 Apr 99
"RTN","MPIUTL5",3,0)
 ;
"RTN","MPIUTL5",4,0)
 ;
"RTN","MPIUTL5",5,0)
GETID(ICN,ARRAY) ;
"RTN","MPIUTL5",6,0)
 ; This API will return all IDs for a given ICN
"RTN","MPIUTL5",7,0)
 ; ARRAY will contain these values, subscripted by type and location (station #)
"RTN","MPIUTL5",8,0)
 ; EX.  ARRAY("GCPR",776,1)=5, ARRAY("GCPR",300,2)=6, ARRAY("USVHA",800,1)=1000293847
"RTN","MPIUTL5",9,0)
 ;
"RTN","MPIUTL5",10,0)
 K ARRAY
"RTN","MPIUTL5",11,0)
 I ICN="" S ARRAY(0)="-1^No ICN passed" Q
"RTN","MPIUTL5",12,0)
 I '$D(^MPIVET(+ICN)) S ARRAY(0)="-1^No such ICN value" Q
"RTN","MPIUTL5",13,0)
 I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" S ARRAY(0)="-1^ICN has been Deactivated" Q  ;**24
"RTN","MPIUTL5",14,0)
 N IEN,LOC,TYPE
"RTN","MPIUTL5",15,0)
 S IEN=0
"RTN","MPIUTL5",16,0)
 F  S IEN=$O(^MPIVET(ICN,200,IEN)) Q:IEN="B"  D
"RTN","MPIUTL5",17,0)
 .S ID=$P($G(^MPIVET(ICN,200,IEN,0)),"^"),TYPE=$P($G(^MPIVET(ICN,200,IEN,0)),"^",2),LOC=$P($G(^MPIVET(ICN,200,IEN,0)),"^",3)
"RTN","MPIUTL5",18,0)
 .S LOC=$P($$NS^XUAF4(LOC),"^",2)
"RTN","MPIUTL5",19,0)
 .S ARRAY(TYPE,LOC,IEN)=ID
"RTN","MPIUTL5",20,0)
 Q
"RTN","MPIUTL5",21,0)
 ;
"RTN","MPIUTL5",22,0)
GETICN(ID,TYPE,LOC) ;
"RTN","MPIUTL5",23,0)
 ; This API will return the ICN for a given ID/TYPE
"RTN","MPIUTL5",24,0)
 ; ID - ID NUMBER TO BE USED IN LOOKUP
"RTN","MPIUTL5",25,0)
 ; TYPE - WHAT TYPE OF ID IS BEING PASSED -- WILL MATCH WITH SET OF CODES FOR FIELD TYPE OF ID NUM
"RTN","MPIUTL5",26,0)
 ; LOC - Location from which this ID was stored (STATION #)
"RTN","MPIUTL5",27,0)
 ;
"RTN","MPIUTL5",28,0)
 N RETURN,STN
"RTN","MPIUTL5",29,0)
 I ID=""!(TYPE="")!(LOC="") Q "-1^Missing Required Parameters"
"RTN","MPIUTL5",30,0)
 S STN=$$IEN^XUAF4(LOC)
"RTN","MPIUTL5",31,0)
 I STN="" Q "-1^No such location"
"RTN","MPIUTL5",32,0)
 S RETURN=$O(^MPIVET("D",TYPE,ID,STN,""))
"RTN","MPIUTL5",33,0)
 I RETURN="" S RETURN="-1^ID Not Found"
"RTN","MPIUTL5",34,0)
 Q RETURN
"RTN","MPIUTL5",35,0)
 ;
"RTN","MPIUTL5",36,0)
SETID(ID,TYPE,LOC,ICN) ;
"RTN","MPIUTL5",37,0)
 ; This API will return 1 for successful and -1^error message if not
"RTN","MPIUTL5",38,0)
 ; It will set the ID, Type and Assigning Location fields for ICN
"RTN","MPIUTL5",39,0)
 ; ID = Other ID to be created
"RTN","MPIUTL5",40,0)
 ; TYPE = Actual type of ID
"RTN","MPIUTL5",41,0)
 ; LOC = STATION NUMBER from Institution file for the location
"RTN","MPIUTL5",42,0)
 ; ICN = ICN where the entry is to be created
"RTN","MPIUTL5",43,0)
 ;
"RTN","MPIUTL5",44,0)
 I ID=""!(TYPE="")!(LOC="")!(ICN="") Q "-1^Missing Required Parameters"
"RTN","MPIUTL5",45,0)
 I '$D(^MPIVET(+ICN,0)) Q "-1^No Such ICN on file"
"RTN","MPIUTL5",46,0)
 I $P($G(^MPIVET(+ICN,"ID_STATE")),"^")="D" Q "-1^ICN has been deactivated"  ;**24
"RTN","MPIUTL5",47,0)
 I TYPE'="GCPR"&(TYPE'="USVHA") Q "-1^Invalid Type passed"
"RTN","MPIUTL5",48,0)
 N TLOC S TLOC=$$IEN^XUAF4(LOC)
"RTN","MPIUTL5",49,0)
 I +TLOC<1 Q "-1^Missing or Invalid Assigning Station "_LOC
"RTN","MPIUTL5",50,0)
 I $D(^MPIVET("D",TYPE,ID,TLOC,ICN)) Q 1
"RTN","MPIUTL5",51,0)
 ;^ entry already exists **24 ^^ CHANGED FROM LOC TO TLOC **31
"RTN","MPIUTL5",52,0)
 N DIE,DA,DR,DIC,X,Y,CHECK
"RTN","MPIUTL5",53,0)
TRYA L +^MPIVET(ICN):10 I '$T G TRYA
"RTN","MPIUTL5",54,0)
 ; ^ KEEP TRYING TIL GET LOCK **31
"RTN","MPIUTL5",55,0)
 ;I '$T Q "-1^Unable to lock record"
"RTN","MPIUTL5",56,0)
 K DD,DO,DA ;**24 HERE THRU ^DIE
"RTN","MPIUTL5",57,0)
 I '$D(^MPIVET(ICN,200,0)) S DA=1
"RTN","MPIUTL5",58,0)
 I $D(^MPIVET(ICN,200,0)) S DA=+$P(^MPIVET(ICN,200,0),"^",3)
"RTN","MPIUTL5",59,0)
DA I $D(^MPIVET(ICN,200,DA,0)) S DA=DA+1 G DA
"RTN","MPIUTL5",60,0)
 S DIC="^MPIVET("_ICN_",200,",DIC(0)="LZ",DIC("P")=$P($G(^DD(985,200,0)),"^",2),DA(1)=ICN,X=ID
"RTN","MPIUTL5",61,0)
 D FILE^DICN
"RTN","MPIUTL5",62,0)
 S DIE="^MPIVET("_ICN_",200,",DR=".02///"_TYPE_";.03///`"_TLOC
"RTN","MPIUTL5",63,0)
 D ^DIE
"RTN","MPIUTL5",64,0)
 L -^MPIVET(ICN)
"RTN","MPIUTL5",65,0)
 S CHECK=$$GETICN(ID,TYPE,LOC)
"RTN","MPIUTL5",66,0)
 I +CHECK'=-1 I +CHECK'=ICN Q "-1^Unable to update ICN "_ICN_" with ID "_ID_" and Type "_TYPE_" because ICN "_CHECK_" already has this ID, type and location"
"RTN","MPIUTL5",67,0)
 Q 1
"RTN","MPIUTL5",68,0)
 ;
"RTN","MPIUTL5",69,0)
DELID(ID,TYPE,LOC,ICN) ;
"RTN","MPIUTL5",70,0)
 ; api to delete an ID/Type/Location for an ICN
"RTN","MPIUTL5",71,0)
 ; ID is the Other ID to be deleted
"RTN","MPIUTL5",72,0)
 ; TYPE is the kind of ID it is to be deleted
"RTN","MPIUTL5",73,0)
 ; LOC is the station number for the location to be deleted
"RTN","MPIUTL5",74,0)
 ; ICN is the ICN for which the ID is to be removed from
"RTN","MPIUTL5",75,0)
 ;
"RTN","MPIUTL5",76,0)
 I ID=""!(TYPE="")!(ICN="")!(LOC="") Q "-1^Missing Required Fields to delete OTHER ID: ID="_ID_" TYPE= "_TYPE_" LOC= "_LOC
"RTN","MPIUTL5",77,0)
 I '$D(^MPIVET(ICN,0)) Q "-1^No such ICN"
"RTN","MPIUTL5",78,0)
 ;;;I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="D" Q "-1^ICN has been Deactivated"  ;**24 **31 should remove OTHER IDs regardless of ID state
"RTN","MPIUTL5",79,0)
 N IEN,RETURN,SIEN
"RTN","MPIUTL5",80,0)
 S IEN="",RETURN=0,SIEN=$$IEN^XUAF4(LOC)
"RTN","MPIUTL5",81,0)
 I SIEN="" Q "-1^No such location on file"
"RTN","MPIUTL5",82,0)
 S IEN=$O(^MPIVET("D",TYPE,ID,SIEN,ICN,""))
"RTN","MPIUTL5",83,0)
 S DIE="^MPIVET("_ICN_",200,",DA=IEN,DR=".01///@;.02///@;.03///@",DA(1)=ICN D ^DIE S RETURN=1
"RTN","MPIUTL5",84,0)
 I RETURN=0 Q "-1^No such ID/Type/Location for this ICN"
"RTN","MPIUTL5",85,0)
 Q RETURN
"RTN","MPIUTL5",86,0)
GET9855(IEN,ARR) ;
"RTN","MPIUTL5",87,0)
 I '$D(^MPI(985.5,IEN))  Q
"RTN","MPIUTL5",88,0)
 ;SURNAME
"RTN","MPIUTL5",89,0)
 S ARR(1)=$P($G(^MPI(985.5,IEN,1)),"^",2)
"RTN","MPIUTL5",90,0)
 ;FIRST NAME
"RTN","MPIUTL5",91,0)
 S ARR(2)=$P($G(^MPI(985.5,IEN,1)),"^",3)
"RTN","MPIUTL5",92,0)
 ;MIDDLE NAME
"RTN","MPIUTL5",93,0)
 S ARR(3)=$P($G(^MPI(985.5,IEN,1)),"^",4)
"RTN","MPIUTL5",94,0)
 ;PREFIX
"RTN","MPIUTL5",95,0)
 S ARR(4)=$P($G(^MPI(985.5,IEN,1)),"^",5)
"RTN","MPIUTL5",96,0)
 ;SUFFIX
"RTN","MPIUTL5",97,0)
 S ARR(5)=$P($G(^MPI(985.5,IEN,1)),"^",6)
"RTN","MPIUTL5",98,0)
 ;MOTHER'S MAIDEN NAME
"RTN","MPIUTL5",99,0)
 S ARR(6)=$P($G(^MPI(985.5,IEN,1)),"^",7)
"RTN","MPIUTL5",100,0)
 ;DOB
"RTN","MPIUTL5",101,0)
 S ARR(7)=$P($G(^MPI(985.5,IEN,1)),"^",8)
"RTN","MPIUTL5",102,0)
 ;pob city
"RTN","MPIUTL5",103,0)
 S ARR(8)=$P($G(^MPI(985.5,IEN,1)),"^",9)
"RTN","MPIUTL5",104,0)
 ; pob state
"RTN","MPIUTL5",105,0)
 S ARR(9)=$P($G(^MPI(985.5,IEN,1)),"^",10)
"RTN","MPIUTL5",106,0)
 ;DOD
"RTN","MPIUTL5",107,0)
 S ARR(10)=$P($G(^MPI(985.5,IEN,1)),"^",11)
"RTN","MPIUTL5",108,0)
 ;gender
"RTN","MPIUTL5",109,0)
 S ARR(12)=$P($G(^MPI(985.5,IEN,1)),"^",13)
"RTN","MPIUTL5",110,0)
 ;SSN
"RTN","MPIUTL5",111,0)
 S ARR(13)=$P($G(^MPI(985.5,IEN,1)),"^",14)
"RTN","MPIUTL5",112,0)
 ;claim number
"RTN","MPIUTL5",113,0)
 S ARR(15)=$P($G(^MPI(985.5,IEN,2)),"^",1)
"RTN","MPIUTL5",114,0)
 ;marital status
"RTN","MPIUTL5",115,0)
 S ARR(30)=$P($G(^MPI(985.5,IEN,3)),"^",1)
"RTN","MPIUTL5",116,0)
 ;street line 1
"RTN","MPIUTL5",117,0)
 S ARR(31)=$P($G(^MPI(985.5,IEN,3)),"^",2)
"RTN","MPIUTL5",118,0)
 ;street line 2
"RTN","MPIUTL5",119,0)
 S ARR(32)=$P($G(^MPI(985.5,IEN,3)),"^",3)
"RTN","MPIUTL5",120,0)
 ;street line 3
"RTN","MPIUTL5",121,0)
 S ARR(33)=$P($G(^MPI(985.5,IEN,3)),"^",4)
"RTN","MPIUTL5",122,0)
 ;city
"RTN","MPIUTL5",123,0)
 S ARR(34)=$P($G(^MPI(985.5,IEN,3)),"^",5)
"RTN","MPIUTL5",124,0)
 ;state
"RTN","MPIUTL5",125,0)
 S ARR(35)=$P($G(^MPI(985.5,IEN,3)),"^",6)
"RTN","MPIUTL5",126,0)
 ;zip
"RTN","MPIUTL5",127,0)
 S ARR(36)=$P($G(^MPI(985.5,IEN,3)),"^",7)
"RTN","MPIUTL5",128,0)
 ;phone number
"RTN","MPIUTL5",129,0)
 S ARR(37)=$P($G(^MPI(985.5,IEN,3)),"^",8)
"RTN","MPIUTL5",130,0)
 ;pow status
"RTN","MPIUTL5",131,0)
 S ARR(38)=$P($G(^MPI(985.5,IEN,3)),"^",9)
"RTN","MPIUTL5",132,0)
 ;MBI
"RTN","MPIUTL5",133,0)
 S ARR(39)=$P($G(^MPI(985.5,IEN,3)),"^",10)
"RTN","MPIUTL5",134,0)
 Q
"RTN","MPIUTL6")
0^200^B54033708
"RTN","MPIUTL6",1,0)
MPIUTL6 ;BIR/PTD-Utility to Update Files 985 and 985.5, Continued ;7/15/05  17:10
"RTN","MPIUTL6",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**11,21,23,27,24,35**;30 Apr 99
"RTN","MPIUTL6",3,0)
 ;Routine called by MPIUTL4
"RTN","MPIUTL6",4,0)
 ;Reference to $$NEWGCPR^OMGPID01 supported by IA #3495
"RTN","MPIUTL6",5,0)
 ;
"RTN","MPIUTL6",6,0)
FAFILE ;Update the MPI FACILITY ASSOCIATION (#985.5) file.
"RTN","MPIUTL6",7,0)
 S RESULT=0 Q:'$O(NEWARR(0))
"RTN","MPIUTL6",8,0)
 ;Loop through NEWARR array, call FILE^DIE to update each field.
"RTN","MPIUTL6",9,0)
 N %DT,FLAG,FLD,MPIVAL,TFIEN
"RTN","MPIUTL6",10,0)
 S TFIEN=$O(^MPI(985.5,"AM",ICN,SITE,0))
"RTN","MPIUTL6",11,0)
 I TFIEN L +^MPI(985.5,TFIEN):10 I '$T S RESULT="-1^Unable to lock MPI FACILITY ASSOCIATION (#985.5) file record." Q
"RTN","MPIUTL6",12,0)
 ;if entry does not exist try to add but do not add if this is a A24 link to another ICN ARR(18) holds the surviving ICN value and would only be set in that case
"RTN","MPIUTL6",13,0)
 ; **35 adding DFN to parameter list when calling ADDTF^MPIUTL9
"RTN","MPIUTL6",14,0)
 I 'TFIEN,$G(ARR(18)) Q  ;**35 eliminate subscript error at unlock
"RTN","MPIUTL6",15,0)
 I 'TFIEN I $G(ARR(18))="" S RESULT=$$ADDTF^MPIUTL9(SITE,ICN,,NEWARR(2)) Q:RESULT'=0  I RESULT=0 S TFIEN=$O(^MPI(985.5,"AM",ICN,SITE,0)) L +^MPI(985.5,TFIEN):10 I '$T S RESULT="-1^Unable to lock MPI FACILITY ASSOCIATION (#985.5) file record." Q
"RTN","MPIUTL6",16,0)
 ;get current value for date last treated and event reason
"RTN","MPIUTL6",17,0)
 N MPITFB S MPITFB=0
"RTN","MPIUTL6",18,0)
 I $G(NEWARR(29))'=""!$G(NEWARR(30))'="" N OLD D GETS^DIQ(985.5,+TFIEN_",","29","I","OLD") D GETS^DIQ(985.5,+TFIEN_",","30","I","OLD")
"RTN","MPIUTL6",19,0)
 S FLAG=0,FLD="" F  S FLD=$O(NEWARR(FLD)) Q:'FLD  S MPIVAL=$G(NEWARR(FLD)) D
"RTN","MPIUTL6",20,0)
 .K FDA S FDA(985.5,TFIEN_",",FLD)=MPIVAL
"RTN","MPIUTL6",21,0)
 .I FLD=29 I MPIVAL'=OLD(985.5,+TFIEN_",",29,"I") S MPITFB=1
"RTN","MPIUTL6",22,0)
 .I FLD=30 I MPIVAL'=OLD(985.5,+TFIEN_",",30,"I") S MPITFB=1
"RTN","MPIUTL6",23,0)
 .K MPIERR D FILE^DIE("E","FDA","MPIERR") K FDA
"RTN","MPIUTL6",24,0)
 .I $D(MPIERR("DIERR")) S FLAG="-1^Unable to update field "_FLD_" in MPI FACILITY ASSOCIATION (#985.5) file due to: "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIUTL6",25,0)
 .;11/18/02 Temporary fix until STATE file standardized
"RTN","MPIUTL6",26,0)
 .;If exception for PLACE OF BIRTH STATE, stuff global with '90'
"RTN","MPIUTL6",27,0)
 .;(pointer #) for 'OTHER', ignore exception and continue.
"RTN","MPIUTL6",28,0)
 .I $D(MPIERR("DIERR"))&(FLD=19) S $P(^MPI(985.5,TFIEN,1),"^",10)="90",FLAG=0
"RTN","MPIUTL6",29,0)
 .;10/24/03 Temporary fix until STATE file standardized
"RTN","MPIUTL6",30,0)
 .;If exception for STATE [RESIDENCE], stuff global with '90'
"RTN","MPIUTL6",31,0)
 .;(pointer #) for 'OTHER', ignore exception and continue.
"RTN","MPIUTL6",32,0)
 .I $D(MPIERR("DIERR"))&(FLD=45) S $P(^MPI(985.5,TFIEN,3),"^",6)="90",FLAG=0
"RTN","MPIUTL6",33,0)
 L -^MPI(985.5,TFIEN)
"RTN","MPIUTL6",34,0)
 ; ALIAS, ETH and RACE are all multiples
"RTN","MPIUTL6",35,0)
 N FILE S FILE=985.5
"RTN","MPIUTL6",36,0)
 I $D(NEWARR("ALIAS"))!($D(NEWARR("ETH")))!($D(NEWARR("RACE")))!($D(^MPI(985.5,TFIEN,50)))!($D(^MPI(985.5,TFIEN,60)))!($D(^MPI(985.5,TFIEN,70))) D MULT(ICN,.NEWARR,.FLAG,FILE,TFIEN)
"RTN","MPIUTL6",37,0)
 I FLAG'=0 S RESULT=FLAG
"RTN","MPIUTL6",38,0)
 ;if TF moves from retired ICN to surviving ICN broadcast surviving TF full list
"RTN","MPIUTL6",39,0)
 I $D(NEWARR(1)) N BCST S BCST=$$BRDCST^MPITFOUT(NEWARR(1),"REP","ALL","MAD") S BCST=$$BRDCST^MPITFOUT(ICN,"REP","ALL","MAD","BC") Q  ;call API to broadcast MFU for new and old ICN
"RTN","MPIUTL6",40,0)
 ;if date last treated or event reason have changed broadcast TF
"RTN","MPIUTL6",41,0)
 I MPITFB=1 N BCST S BCST=$$BRDCST^MPITFOUT(ICN,"UPD","ALL","MUP") ;call API to broadcast MFU
"RTN","MPIUTL6",42,0)
 Q
"RTN","MPIUTL6",43,0)
 ;
"RTN","MPIUTL6",44,0)
VETFILE(ICN,ARR) ;Update the MPI VETERAN/CLIENT (#985) file. ;**35 add params
"RTN","MPIUTL6",45,0)
 ;Get original field values for ICN from MPI VETERAN/CLIENT (#985) file.
"RTN","MPIUTL6",46,0)
 N OLD
"RTN","MPIUTL6",47,0)
 D GETS^DIQ(985,+ICN_",","1;2;3;4;5;6;7;8;9;10;12;13;15;16;18;30;31;32;33;34;35;36;37;38;39","I","OLD")
"RTN","MPIUTL6",48,0)
 ;Standardize incoming name elements for File #985.
"RTN","MPIUTL6",49,0)
 N NM,NM2,SAVFN,SAVLN,SAVMN,SAVPRE,SAVSUF
"RTN","MPIUTL6",50,0)
 D FORMAT
"RTN","MPIUTL6",51,0)
 ;
"RTN","MPIUTL6",52,0)
 S RESULT=0
"RTN","MPIUTL6",53,0)
 ;Loop through numeric part of incoming ARR array.
"RTN","MPIUTL6",54,0)
 ;If incoming data is different from original data, call FILE^DIE to update each field.
"RTN","MPIUTL6",55,0)
 ;If there is a change in name, DOB, or SSN, update GCPR
"RTN","MPIUTL6",56,0)
 N FLAG,FLD,GCPR,MPIVAL,FHIEIEN
"RTN","MPIUTL6",57,0)
 S FHIEIEN=$$IEN^XUAF4(200)
"RTN","MPIUTL6",58,0)
 S (FLAG,FLD,GCPR)=0 F  S FLD=$O(ARR(FLD)) Q:'FLD  S MPIVAL=$G(ARR(FLD)) D
"RTN","MPIUTL6",59,0)
 .I MPIVAL="@"!(MPIVAL="""""") S MPIVAL=""
"RTN","MPIUTL6",60,0)
 .I MPIVAL'=$G(OLD(985,+ICN_",",FLD,"I")) D  Q:FLAG'=0
"RTN","MPIUTL6",61,0)
 ..K FDA S FDA(985,ICN_",",FLD)=MPIVAL
"RTN","MPIUTL6",62,0)
 ..K MPIERR D FILE^DIE("E","FDA","MPIERR") K FDA
"RTN","MPIUTL6",63,0)
 ..I $D(MPIERR("DIERR")) S FLAG="-1^Unable to update field "_FLD_" in MPI VETERAN/CLIENT (#985) file due to: "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIUTL6",64,0)
 ..;11/18/02 Temporary fix until STATE file standardized
"RTN","MPIUTL6",65,0)
 ..;If exception for PLACE OF BIRTH STATE, stuff global with '90'
"RTN","MPIUTL6",66,0)
 ..;(pointer #) for 'OTHER', ignore exception and continue.
"RTN","MPIUTL6",67,0)
 ..I $D(MPIERR("DIERR"))&(FLD=9) S $P(^MPIVET(ICN,0),"^",10)="90",FLAG=0
"RTN","MPIUTL6",68,0)
 ..;10/24/03 Temporary fix until STATE file standardized
"RTN","MPIUTL6",69,0)
 ..;If exception for STATE [RESIDENCE], stuff global with '90'
"RTN","MPIUTL6",70,0)
 ..;(pointer #) for 'OTHER', ignore exception and continue.
"RTN","MPIUTL6",71,0)
 ..I $D(MPIERR("DIERR"))&(FLD=35) S $P(^MPIVET(ICN,2),"^",6)="90",FLAG=0
"RTN","MPIUTL6",72,0)
 ..I FLD=1!(FLD=2)!(FLD=3)!(FLD=4)!(FLD=5)!(FLD=7)!(FLD=13) S GCPR=1
"RTN","MPIUTL6",73,0)
 ; ALIAS, ETH and RACE are all multiples
"RTN","MPIUTL6",74,0)
 N FILE S FILE=985
"RTN","MPIUTL6",75,0)
 I $D(ARR("ALIAS"))!($D(ARR("ETH")))!($D(ARR("RACE")))!($D(^MPIVET(ICN,50)))!($D(^MPIVET(ICN,60)))!($D(^MPIVET(ICN,70))) D MULT(ICN,.ARR,.FLAG,FILE)
"RTN","MPIUTL6",76,0)
 I FLAG'=0 S RESULT=FLAG
"RTN","MPIUTL6",77,0)
 ;
"RTN","MPIUTL6",78,0)
EVAL ;Evaluate ID STATE - call MPISIREV. ;**24
"RTN","MPIUTL6",79,0)
 ;Did ICN previously have an ID STATE?
"RTN","MPIUTL6",80,0)
 ;Get ID STATE (#80) for ICN and initialize IDCHG flag.
"RTN","MPIUTL6",81,0)
 N ANS,NEWSTATE,OLDSTATE,RETURN
"RTN","MPIUTL6",82,0)
 S OLDSTATE=$P($G(^MPIVET(ICN,"ID_STATE")),"^")
"RTN","MPIUTL6",83,0)
 ;An ID STATE of DEACTIVATED CANNOT change to any other ID STATE via this path.
"RTN","MPIUTL6",84,0)
 ;Continue only if original State is null, temporary, or permanent.
"RTN","MPIUTL6",85,0)
 I (OLDSTATE="")!(OLDSTATE="T")!(OLDSTATE="P") D
"RTN","MPIUTL6",86,0)
 .;Call MPISIREV to get new state.
"RTN","MPIUTL6",87,0)
 .S ANS=$$EN^MPISIREV(ICN)
"RTN","MPIUTL6",88,0)
 .;If unable to determine ID STATE for ICN, log exception & quit.
"RTN","MPIUTL6",89,0)
 .I +ANS=-1 D LOGEXC^MPISIUT(209,$P(ANS,"^",2)) Q
"RTN","MPIUTL6",90,0)
 .;Else we have an ID STATE
"RTN","MPIUTL6",91,0)
 .S NEWSTATE=$P(ANS,"^")
"RTN","MPIUTL6",92,0)
 .;ID STATE CANNOT change from PERMANENT to TEMPORARY.
"RTN","MPIUTL6",93,0)
 .I (OLDSTATE="P")&(NEWSTATE="T") D ERROR^MPIA08(.ARR,.HL,"DFN#"_$G(ARR("DFN"))_" at site "_$G(ARR("MPISSITE"))_" was modified such that the ID State would be Temporary for ICN, "_$G(ARR("ICN")),241) Q
"RTN","MPIUTL6",94,0)
 .;If ID STATE changed, set ID STATE (& log exception if appropriate)
"RTN","MPIUTL6",95,0)
 .I OLDSTATE'=NEWSTATE D
"RTN","MPIUTL6",96,0)
 ..S RETURN=$$SETSTATE^MPISIUT(ICN,NEWSTATE) ; fail not expected
"RTN","MPIUTL6",97,0)
 ..;$$EN^MPISIREV can return exception info if applicable.
"RTN","MPIUTL6",98,0)
 ..;If the new ID STATE should log an exception, do so.
"RTN","MPIUTL6",99,0)
 ..Q:$P($G(ANS),"^",2)=""  ;No exception sent.
"RTN","MPIUTL6",100,0)
 ..D LOGEXC^MPISIUT($P(ANS,"^",2),$P(ANS,"^",3))
"RTN","MPIUTL6",101,0)
 ;
"RTN","MPIUTL6",102,0)
 I GCPR=1 I '$D(^MPI(985.5,"AM",ICN,FHIEIEN)) I $P($G(^MPIVET(ICN,"ID_STATE")),"^")="P" N TSK S TSK=$$NEWGCPR^OMGPID01(ICN) ;update GCPR patient data ;**24
"RTN","MPIUTL6",103,0)
 ;
"RTN","MPIUTL6",104,0)
 ;Reset ARR values for name elements for File #985.5 (non-standardized).
"RTN","MPIUTL6",105,0)
 D RESTORE
"RTN","MPIUTL6",106,0)
 Q
"RTN","MPIUTL6",107,0)
 ;
"RTN","MPIUTL6",108,0)
OID(ICN,ARR) ;Update fields in the OTHER IDS (#200) multiple in the
"RTN","MPIUTL6",109,0)
 ;MPI VETERAN/CLIENT (#985) file for ICN.
"RTN","MPIUTL6",110,0)
 ;
"RTN","MPIUTL6",111,0)
 ;ICN - patient integration control number
"RTN","MPIUTL6",112,0)
 ;ARR - array of field values to be updated in the ARR("OID",#)
"RTN","MPIUTL6",113,0)
 ;array multiple. Array values: "P1-ID^P2-TYPE^P3-ASN LCN".
"RTN","MPIUTL6",114,0)
 ;
"RTN","MPIUTL6",115,0)
 ;Returns: -1^error message, if unable to update
"RTN","MPIUTL6",116,0)
 ;         1 if successful in updating
"RTN","MPIUTL6",117,0)
 ;
"RTN","MPIUTL6",118,0)
 N RET
"RTN","MPIUTL6",119,0)
 I '$O(ARR("OID",0)) Q "-1^No incoming data array sent."
"RTN","MPIUTL6",120,0)
 S RET=1 N NODE,NUM,P1,P2,P3
"RTN","MPIUTL6",121,0)
 S NUM=0 F  S NUM=$O(ARR("OID",NUM)) Q:'NUM!(+RET=-1)  D
"RTN","MPIUTL6",122,0)
 .S NODE=$G(ARR("OID",NUM))
"RTN","MPIUTL6",123,0)
 .S P1=$P(NODE,"^")
"RTN","MPIUTL6",124,0)
 .S P2=$P(NODE,"^",2)
"RTN","MPIUTL6",125,0)
 .S P3=$P(NODE,"^",3)
"RTN","MPIUTL6",126,0)
 .I P1=""!(P2="")!(P3="")!(ICN="") S RET="-1^Missing required parameter" Q
"RTN","MPIUTL6",127,0)
 .;Quit if entry already exists in OTHER IDS (#200) multiple.
"RTN","MPIUTL6",128,0)
 .I $O(^MPIVET("D",P2,P1,P3,ICN,0)) Q
"RTN","MPIUTL6",129,0)
 .;Call SETID^MPIUTL5 to create entry and populate fields.
"RTN","MPIUTL6",130,0)
 .S RET=$$SETID^MPIUTL5(P1,P2,P3,ICN)
"RTN","MPIUTL6",131,0)
 Q RET
"RTN","MPIUTL6",132,0)
 ;
"RTN","MPIUTL6",133,0)
FORMAT ;Save incoming ARR name values, call name standardization code, set ARR values
"RTN","MPIUTL6",134,0)
 S (SAVFN,SAVLN,SAVMN,SAVPRE,SAVSUF)=""
"RTN","MPIUTL6",135,0)
 I $D(ARR(1)) S SAVLN=$G(ARR(1))
"RTN","MPIUTL6",136,0)
 I $D(ARR(2)) S SAVFN=$G(ARR(2))
"RTN","MPIUTL6",137,0)
 I $D(ARR(3)) S SAVMN=$G(ARR(3))
"RTN","MPIUTL6",138,0)
 I $D(ARR(4)) S SAVPRE=$G(ARR(4))
"RTN","MPIUTL6",139,0)
 I $D(ARR(5)) S SAVSUF=$G(ARR(5))
"RTN","MPIUTL6",140,0)
 Q:SAVLN=""  ;Last name required
"RTN","MPIUTL6",141,0)
 Q:SAVFN=""  ;First name required
"RTN","MPIUTL6",142,0)
 S NM=SAVLN_","_SAVFN
"RTN","MPIUTL6",143,0)
 I SAVMN'="" S NM=NM_" "_SAVMN
"RTN","MPIUTL6",144,0)
 I SAVSUF'="" S NM=NM_" "_SAVSUF
"RTN","MPIUTL6",145,0)
 I SAVPRE'="" S NM=NM_" "_SAVPRE
"RTN","MPIUTL6",146,0)
 D NAME^MPIPID2(.NM)
"RTN","MPIUTL6",147,0)
 I $D(ARR(1)) S ARR(1)=$P(NM,","),NM2=$P(NM,",",2)
"RTN","MPIUTL6",148,0)
 I $D(ARR(2)) S ARR(2)=$P(NM2," ")
"RTN","MPIUTL6",149,0)
 I $D(ARR(3)) S ARR(3)=$P(NM2," ",2)
"RTN","MPIUTL6",150,0)
 I $D(ARR(5)) S ARR(5)=$P(NM2," ",3)
"RTN","MPIUTL6",151,0)
 I $D(ARR(4)) S ARR(4)=$P(NM2," ",4)
"RTN","MPIUTL6",152,0)
 ;D STDNAME^XLFNAME(.NM,"C")
"RTN","MPIUTL6",153,0)
 ;I $D(ARR(1)) S ARR(1)=$G(NM("FAMILY"))
"RTN","MPIUTL6",154,0)
 ;I $D(ARR(2)) S ARR(2)=$G(NM("GIVEN"))
"RTN","MPIUTL6",155,0)
 ;I $D(ARR(3)) S ARR(3)=$G(NM("MIDDLE"))
"RTN","MPIUTL6",156,0)
 ;I $D(ARR(5)) S ARR(5)=$G(NM("SUFFIX"))
"RTN","MPIUTL6",157,0)
 ;I $D(ARR(4)) S ARR(4)=$G(NM("PREFIX"))
"RTN","MPIUTL6",158,0)
 Q
"RTN","MPIUTL6",159,0)
 ;
"RTN","MPIUTL6",160,0)
RESTORE ;Restore original values into ARR name values
"RTN","MPIUTL6",161,0)
 S ARR(1)=$G(SAVLN)
"RTN","MPIUTL6",162,0)
 I ARR(1)="""""" S ARR(1)=""
"RTN","MPIUTL6",163,0)
 S ARR(2)=$G(SAVFN)
"RTN","MPIUTL6",164,0)
 I ARR(2)="""""" S ARR(2)=""
"RTN","MPIUTL6",165,0)
 S ARR(3)=$G(SAVMN)
"RTN","MPIUTL6",166,0)
 I ARR(3)="""""" S ARR(3)=""
"RTN","MPIUTL6",167,0)
 S ARR(4)=$G(SAVPRE)
"RTN","MPIUTL6",168,0)
 I ARR(4)="""""" S ARR(4)=""
"RTN","MPIUTL6",169,0)
 S ARR(5)=$G(SAVSUF)
"RTN","MPIUTL6",170,0)
 I ARR(5)="""""" S ARR(5)=""
"RTN","MPIUTL6",171,0)
 Q
"RTN","MPIUTL6",172,0)
 ;
"RTN","MPIUTL6",173,0)
MULT(ICN,ARR,FLG,FIL,TFIEN) ;
"RTN","MPIUTL6",174,0)
 ;updating multiples for fields Race, Ethnicity and Alias
"RTN","MPIUTL6",175,0)
 ;ICN - patient integration control number
"RTN","MPIUTL6",176,0)
 ;ARR - array of field values to be updated in the ARR("RACE",#)
"RTN","MPIUTL6",177,0)
 ; or ARR("ETH",#) or ARR("ALIAS",#)
"RTN","MPIUTL6",178,0)
 ;FIL - file we are updating - 985 or 985.5
"RTN","MPIUTL6",179,0)
 ;Returns FLG as: -1^error message, if unable to update
"RTN","MPIUTL6",180,0)
 ;         1 if successful in updating
"RTN","MPIUTL6",181,0)
 ;
"RTN","MPIUTL6",182,0)
 N RES
"RTN","MPIUTL6",183,0)
 I '$D(TFIEN) S TFIEN=""
"RTN","MPIUTL6",184,0)
 ;;I '$D(ARR("RACE"))&('$D(ARR("ETH")))&('$D(ARR("ALIAS"))) S FLG="-1^No incoming data array sent to MULT api for ICN "_ICN_"."
"RTN","MPIUTL6",185,0)
 I $D(ARR("RACE"))!($D(^MPIVET(ICN,60)))!($D(^MPI(985.5,+TFIEN,60))) D RACE^MPIUTL7(.ARR,ICN,.FLG,FIL,TFIEN)
"RTN","MPIUTL6",186,0)
 I $D(ARR("ETH"))!($D(^MPIVET(ICN,70)))!($D(^MPI(985.5,+TFIEN,70))) D ETHN^MPIUTL7(.ARR,ICN,.FLG,FIL,TFIEN)
"RTN","MPIUTL6",187,0)
 I $D(ARR("ALIAS"))!($D(^MPIVET(ICN,50)))!($D(^MPI(985.5,+TFIEN,50))) D ALIAS^MPIUTL8(.ARR,ICN,.FLG,FIL,TFIEN)
"RTN","MPIUTL6",188,0)
 Q
"RTN","MPIUTL7")
0^201^B36550135
"RTN","MPIUTL7",1,0)
MPIUTL7 ;CMC/BPISC-POPULATING MULTIPLES IN 985 AND 985.5 ;9/3/03
"RTN","MPIUTL7",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN ;**21,31**;30 Apr 99
"RTN","MPIUTL7",3,0)
 ;
"RTN","MPIUTL7",4,0)
LOCK985(ICN) ;
"RTN","MPIUTL7",5,0)
TRYA L +^MPIVET(ICN):10 I '$T G TRYA
"RTN","MPIUTL7",6,0)
 Q
"RTN","MPIUTL7",7,0)
RACE(ARRAY,ICN,FLAG,FILE,TFIEN) ;
"RTN","MPIUTL7",8,0)
 ; ARRAY("RACE",#) <= holds the values that are to be populated
"RTN","MPIUTL7",9,0)
 ; ICN is the integration control number of the patient
"RTN","MPIUTL7",10,0)
 ; FLAG is to hold any error messages to be returned
"RTN","MPIUTL7",11,0)
 ; FILE is which file we are populating -- 985 or 985.5
"RTN","MPIUTL7",12,0)
 ; TFIEN (populated when FILE=985.5) is the IEN of the entry to up updated in 985.5
"RTN","MPIUTL7",13,0)
 N IEN,X,DIC,VAL,DA,DR
"RTN","MPIUTL7",14,0)
 I FILE=985 D
"RTN","MPIUTL7",15,0)
 .D LOCK985(ICN) ;**31
"RTN","MPIUTL7",16,0)
 .;L +^MPIVET(ICN) I '$T S FLAG="-1^Unable to lock record "_ICN_" in file 985 to update Race" Q
"RTN","MPIUTL7",17,0)
 .S IEN=""
"RTN","MPIUTL7",18,0)
 .D CLEANR(.ARRAY,ICN,FILE)
"RTN","MPIUTL7",19,0)
 .F  S IEN=$O(ARRAY("RACE",IEN)) Q:IEN=""  D
"RTN","MPIUTL7",20,0)
 ..S VAL=$G(ARRAY("RACE",IEN)) ;check to see if this RACE already exists
"RTN","MPIUTL7",21,0)
 ..Q:$$CHECKR(VAL,ICN,FILE)
"RTN","MPIUTL7",22,0)
 ..Q:VAL="@"
"RTN","MPIUTL7",23,0)
 ..I VAL'="@" S VAL="`"_VAL
"RTN","MPIUTL7",24,0)
 ..S DIC="^MPIVET("_ICN_",60,",DIC(0)="LZ",DIC("P")=$P($G(^DD(985,60,0)),"^",2),DA(1)=ICN,X=VAL D ^DIC
"RTN","MPIUTL7",25,0)
 ..I +Y<0 S FLAG="-1^Trouble updating RACE value "_VAL_" for ICN "_ICN_" in file 985"
"RTN","MPIUTL7",26,0)
 ..K X,Y,DIC
"RTN","MPIUTL7",27,0)
 .L -^MPIVET(ICN)
"RTN","MPIUTL7",28,0)
 I FILE=985.5 D
"RTN","MPIUTL7",29,0)
 .I $G(TFIEN)<0 S FLAG="-1^IEN for 985.5 for ICN "_ICN_" to update RACE in 985.5" Q
"RTN","MPIUTL7",30,0)
 .S IEN=""
"RTN","MPIUTL7",31,0)
 .L +^MPI(985.5,TFIEN):10 I '$T S FLAG="-1^Unable to lock record IEN= "_TFIEN_" in file 985.5 to update Race" Q
"RTN","MPIUTL7",32,0)
 .D CLEANR(.ARRAY,ICN,FILE,TFIEN)
"RTN","MPIUTL7",33,0)
 .F  S IEN=$O(ARRAY("RACE",IEN)) Q:IEN=""  D
"RTN","MPIUTL7",34,0)
 ..S VAL=$G(ARRAY("RACE",IEN)) ;check to see if this RACE already exists
"RTN","MPIUTL7",35,0)
 ..Q:$$CHECKR(VAL,ICN,FILE,TFIEN)
"RTN","MPIUTL7",36,0)
 ..Q:VAL="@"
"RTN","MPIUTL7",37,0)
 ..I VAL'="@" S VAL="`"_VAL
"RTN","MPIUTL7",38,0)
 ..S DIC="^MPI(985.5,"_TFIEN_",60,",DIC(0)="LZ",DIC("P")=$P($G(^DD(985.5,60,0)),"^",2),DA(1)=TFIEN,X=VAL D ^DIC
"RTN","MPIUTL7",39,0)
 ..I +Y<0 S FLAG="-1^Trouble updating RACE value "_$G(ARRAY("RACE",IEN))_" for ICN "_ICN_" IEN "_TFIEN_" in file 985.5"
"RTN","MPIUTL7",40,0)
 ..K X,Y,DIC
"RTN","MPIUTL7",41,0)
 .L -^MPI(985.5,TFIEN)
"RTN","MPIUTL7",42,0)
 Q
"RTN","MPIUTL7",43,0)
CLEANR(ARRAY,ICN,FILE,TFIEN) ;remove an old Race values that are no longer at the site
"RTN","MPIUTL7",44,0)
 N MPIA,RACE,IEN,DIE,DA,DR,X,Y
"RTN","MPIUTL7",45,0)
 I FILE=985 D
"RTN","MPIUTL7",46,0)
 .Q:'$O(^MPIVET(ICN,60,0))
"RTN","MPIUTL7",47,0)
 .S IEN=0 F  S IEN=$O(ARRAY("RACE",IEN)) Q:IEN=""  S RACE=$P(ARRAY("RACE",IEN),"^"),MPIA(RACE)=""
"RTN","MPIUTL7",48,0)
 .S IEN=0 F  S IEN=$O(^MPIVET(ICN,60,IEN)) Q:IEN=""  S RACE=$P(^MPIVET(ICN,60,IEN,0),"^") I '$D(MPIA(RACE)) D
"RTN","MPIUTL7",49,0)
 ..;need to remove this entry from the race multiple -not at site
"RTN","MPIUTL7",50,0)
 ..S DIE="^MPIVET("_ICN_",60,",DA=IEN,DR=".01///@",DA(1)=ICN D ^DIE
"RTN","MPIUTL7",51,0)
 I FILE=985.5 D
"RTN","MPIUTL7",52,0)
 .Q:'$O(^MPI(985.5,TFIEN,60,0))
"RTN","MPIUTL7",53,0)
 .S IEN=0 F  S IEN=$O(ARRAY("RACE",IEN)) Q:IEN=""  S RACE=$P(ARRAY("RACE",IEN),"^"),MPIA(RACE)=""
"RTN","MPIUTL7",54,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,60,IEN)) Q:IEN=""  S RACE=$P(^MPI(985.5,TFIEN,60,IEN,0),"^") I '$D(MPIA(RACE)) D
"RTN","MPIUTL7",55,0)
 ..;need to remove this entry from the race multiple - not at site
"RTN","MPIUTL7",56,0)
 ..S DIE="^MPI(985.5,"_TFIEN_",60,",DA=IEN,DR=".01///@",DA(1)=ICN D ^DIE
"RTN","MPIUTL7",57,0)
 Q
"RTN","MPIUTL7",58,0)
CHECKR(RAC,ICN,FILE,TFIEN) ;check if race value already exists
"RTN","MPIUTL7",59,0)
 N RET,IEN
"RTN","MPIUTL7",60,0)
 S RET=0
"RTN","MPIUTL7",61,0)
 I FILE=985 D
"RTN","MPIUTL7",62,0)
 .I $D(^MPIVET(ICN,60)) S IEN=0 F  S IEN=$O(^MPIVET(ICN,60,IEN)) Q:IEN=""  D
"RTN","MPIUTL7",63,0)
 ..I $P($G(^MPIVET(ICN,60,IEN,0)),"^")=RAC S RET=1
"RTN","MPIUTL7",64,0)
 I FILE=985.5 D
"RTN","MPIUTL7",65,0)
 .I $D(^MPI(985.5,TFIEN,60)) S IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,60,IEN)) Q:IEN=""  D
"RTN","MPIUTL7",66,0)
 ..I $P($G(^MPI(985.5,TFIEN,60,IEN,0)),"^")=RAC S RET=1
"RTN","MPIUTL7",67,0)
 Q RET
"RTN","MPIUTL7",68,0)
ETHN(ARRAY,ICN,FLAG,FILE,TFIEN) ;
"RTN","MPIUTL7",69,0)
 ; ARRAY("ETH",#) <= holds the values that are to be populated
"RTN","MPIUTL7",70,0)
 ; ICN is the integration control number of the patient
"RTN","MPIUTL7",71,0)
 ; FLAG is to hold any error messages to be returned
"RTN","MPIUTL7",72,0)
 ; FILE is which file we are populating -- 985 or 985.5
"RTN","MPIUTL7",73,0)
 ; TFIEN (populated when FILE=985.5) is the IEN of the entry to up updated in 985.5
"RTN","MPIUTL7",74,0)
 N IEN,X,DIC,VAL
"RTN","MPIUTL7",75,0)
 I FILE=985 D
"RTN","MPIUTL7",76,0)
 .D LOCK985(ICN) ;**31
"RTN","MPIUTL7",77,0)
 .;L +^MPIVET(ICN):10 I '$T S FLAG="-1^Unable to lock record "_ICN_" in file 985 to update Ethnicity" Q
"RTN","MPIUTL7",78,0)
 .D CLEANE(.ARRAY,ICN,FILE)
"RTN","MPIUTL7",79,0)
 .S IEN=""
"RTN","MPIUTL7",80,0)
 .F  S IEN=$O(ARRAY("ETH",IEN)) Q:IEN=""  D
"RTN","MPIUTL7",81,0)
 ..S VAL=$G(ARRAY("ETH",IEN)) ;check to see if this Ethnicity already exists
"RTN","MPIUTL7",82,0)
 ..Q:$$CHECKE(VAL,ICN,FILE)
"RTN","MPIUTL7",83,0)
 ..Q:VAL="@"
"RTN","MPIUTL7",84,0)
 ..I VAL'="@" S VAL="`"_VAL
"RTN","MPIUTL7",85,0)
 ..S DIC="^MPIVET("_ICN_",70,",DIC(0)="LZ",DIC("P")=$P($G(^DD(985,70,0)),"^",2),DA(1)=ICN,X=VAL D ^DIC
"RTN","MPIUTL7",86,0)
 ..I +Y<0 S FLAG="-1^Trouble updating ETHNICITY value "_VAL_" for ICN "_ICN_" in file 985"
"RTN","MPIUTL7",87,0)
 ..K X,Y,DIC
"RTN","MPIUTL7",88,0)
 .L -^MPIVET(ICN)
"RTN","MPIUTL7",89,0)
 I FILE=985.5 D
"RTN","MPIUTL7",90,0)
 .I $G(TFIEN)<0 S FLAG="-1^IEN for 985.5 NOT passed for ICN "_ICN_" to update ETHNICITY in 985.5" Q
"RTN","MPIUTL7",91,0)
 .S IEN=""
"RTN","MPIUTL7",92,0)
 .L +^MPI(985.5,TFIEN):10 I '$T S FLAG="-1^Unable to lock record "_TFIEN_" to update Ethnicity in file 985.5" Q
"RTN","MPIUTL7",93,0)
 .D CLEANE(.ARRAY,ICN,FILE,TFIEN)
"RTN","MPIUTL7",94,0)
 .F  S IEN=$O(ARRAY("ETH",IEN)) Q:IEN=""  D
"RTN","MPIUTL7",95,0)
 ..S VAL=$G(ARRAY("ETH",IEN))
"RTN","MPIUTL7",96,0)
 ..Q:$$CHECKE(VAL,ICN,FILE,TFIEN)
"RTN","MPIUTL7",97,0)
 ..; ^ check to see if ethnicity already exists
"RTN","MPIUTL7",98,0)
 ..Q:VAL="@"
"RTN","MPIUTL7",99,0)
 ..I VAL'="@" S VAL="`"_VAL
"RTN","MPIUTL7",100,0)
 ..S DIC="^MPI(985.5,"_TFIEN_",70,",DIC(0)="LZ",DIC("P")=$P($G(^DD(985.5,70,0)),"^",2),DA(1)=TFIEN,X=VAL D ^DIC
"RTN","MPIUTL7",101,0)
 ..I +Y<0 S FLAG="-1^Trouble updating ETHNICITY value "_$G(ARRAY("ETH",IEN))_" for ICN "_ICN_" for IEN "_TFIEN_" in file 985.5"
"RTN","MPIUTL7",102,0)
 ..K X,Y,DIC
"RTN","MPIUTL7",103,0)
 .L -^MPI(985.5,TFIEN)
"RTN","MPIUTL7",104,0)
 Q
"RTN","MPIUTL7",105,0)
CHECKE(ETHN,ICN,FILE,TFIEN) ;
"RTN","MPIUTL7",106,0)
 N RET,IEN
"RTN","MPIUTL7",107,0)
 S RET=0
"RTN","MPIUTL7",108,0)
 I FILE=985 D
"RTN","MPIUTL7",109,0)
 .I $D(^MPIVET(ICN,70)) S IEN=0 F  S IEN=$O(^MPIVET(ICN,70,IEN)) Q:IEN=""  D
"RTN","MPIUTL7",110,0)
 ..I $P($G(^MPIVET(ICN,70,IEN,0)),"^")=ETHN S RET=1
"RTN","MPIUTL7",111,0)
 I FILE=985.5 D
"RTN","MPIUTL7",112,0)
 .I $D(^MPI(985.5,TFIEN,70)) S IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,70,IEN)) Q:IEN=""  D
"RTN","MPIUTL7",113,0)
 ..I $P($G(^MPI(985.5,TFIEN,70,IEN,0)),"^")=ETHN S RET=1
"RTN","MPIUTL7",114,0)
 Q RET
"RTN","MPIUTL7",115,0)
CLEANE(ARRAY,ICN,FILE,TFIEN) ;remove an old ETHNICITY values that are no longer at the site
"RTN","MPIUTL7",116,0)
 N MPIE,ETH,IEN,DIE,DA,DR,X,Y
"RTN","MPIUTL7",117,0)
 I FILE=985 D
"RTN","MPIUTL7",118,0)
 .Q:'$O(^MPIVET(ICN,70,0))
"RTN","MPIUTL7",119,0)
 .S IEN=0 F  S IEN=$O(ARRAY("ETH",IEN)) Q:IEN=""  S ETH=$P(ARRAY("ETH",IEN),"^"),MPIE(ETH)=""
"RTN","MPIUTL7",120,0)
 .S IEN=0 F  S IEN=$O(^MPIVET(ICN,70,IEN)) Q:IEN=""  S ETH=$P(^MPIVET(ICN,70,IEN,0),"^") I '$D(MPIE(ETH)) D
"RTN","MPIUTL7",121,0)
 ..;need to remove this entry from the ETHNICITY multiple as it isn't at the site anymore
"RTN","MPIUTL7",122,0)
 ..S DIE="^MPIVET("_ICN_",70,",DA=IEN,DR=".01///@",DA(1)=ICN D ^DIE
"RTN","MPIUTL7",123,0)
 I FILE=985.5 D
"RTN","MPIUTL7",124,0)
 .Q:'$O(^MPI(985.5,TFIEN,70,0))
"RTN","MPIUTL7",125,0)
 .S IEN=0 F  S IEN=$O(ARRAY("ETH",IEN)) Q:IEN=""  S ETH=$P(ARRAY("ETH",IEN),"^"),MPIE(ETH)=""
"RTN","MPIUTL7",126,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,70,IEN)) Q:IEN=""  S ETH=$P(^MPI(985.5,TFIEN,70,IEN,0),"^") I '$D(MPIE(ETH)) D
"RTN","MPIUTL7",127,0)
 ..;need to remove this entry from the ETHNICITY multiple as it isn't at the site anymore
"RTN","MPIUTL7",128,0)
 ..S DIE="^MPI(985.5,"_TFIEN_",70,",DA=IEN,DR=".01///@",DA(1)=ICN D ^DIE
"RTN","MPIUTL7",129,0)
 Q
"RTN","MPIUTL8")
0^202^B33330023
"RTN","MPIUTL8",1,0)
MPIUTL8 ;CMC/BPISC-POPULATING MULTIPLES IN 985 AND 985.5 ;9/3/03
"RTN","MPIUTL8",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN ;**21,20,27,31**;30 Apr 99
"RTN","MPIUTL8",3,0)
 ;
"RTN","MPIUTL8",4,0)
LOCK985(ICN) ;
"RTN","MPIUTL8",5,0)
TRYA L +^MPIVET(ICN):10 I '$T G TRYA
"RTN","MPIUTL8",6,0)
 Q
"RTN","MPIUTL8",7,0)
ALIAS(ARRAY,ICN,FLAG,FILE,TFIEN) ;
"RTN","MPIUTL8",8,0)
 ; ARRAY("ALIAS",#,PIECE#) <= holds the values that are to be populated
"RTN","MPIUTL8",9,0)
 ; ICN is the integration control number of the patient
"RTN","MPIUTL8",10,0)
 ; FLAG is to hold any error messages to be returned
"RTN","MPIUTL8",11,0)
 ; FILE is which file we are populating -- 985 or 985.5
"RTN","MPIUTL8",12,0)
 ; TFIEN (populated when FILE=985.5) is the IEN of the entry to up updated in 985.5
"RTN","MPIUTL8",13,0)
 N IEN,X,DIC,LAST,FIRST,MID,SUF,PRE,CNT,FND,DIE,DR,DA
"RTN","MPIUTL8",14,0)
 S CNT=0
"RTN","MPIUTL8",15,0)
 I FILE=985 D
"RTN","MPIUTL8",16,0)
 .D LOCK985(ICN)
"RTN","MPIUTL8",17,0)
 .;L +^MPIVET(ICN):10 I '$T S FLAG="-1^Unable to lock record "_ICN_" in file 985 to update Alias" Q
"RTN","MPIUTL8",18,0)
 .D CLEANA(.ARRAY,ICN,FILE)
"RTN","MPIUTL8",19,0)
 .S IEN=""
"RTN","MPIUTL8",20,0)
 .F  S IEN=$O(ARRAY("ALIAS",IEN)) Q:IEN=""  D
"RTN","MPIUTL8",21,0)
 ..S CNT=CNT+1
"RTN","MPIUTL8",22,0)
 ..S LAST=$G(ARRAY("ALIAS",IEN,1)),FIRST=$G(ARRAY("ALIAS",IEN,2)),MID=$G(ARRAY("ALIAS",IEN,3)),SUF=$G(ARRAY("ALIAS",IEN,5)),PRE=$G(ARRAY("ALIAS",IEN,4))
"RTN","MPIUTL8",23,0)
 ..Q:$$CHECKA(LAST,FIRST,MID,SUF,PRE,ICN,FILE)
"RTN","MPIUTL8",24,0)
 ..; ^ check to see if it exists already
"RTN","MPIUTL8",25,0)
 ..Q:LAST="@"
"RTN","MPIUTL8",26,0)
 ..S DIC="^MPIVET("_ICN_",50,",DIC(0)="LZ",DIC("P")=$P($G(^DD(985,50,0)),"^",2),DA(1)=ICN,X=LAST
"RTN","MPIUTL8",27,0)
 ..D FILE^DICN
"RTN","MPIUTL8",28,0)
 ..S DIE="^MPIVET("_ICN_",50,",DA=+Y,DR="1///"_FIRST_";2///"_MID_";3///"_PRE_";4///"_SUF D ^DIE
"RTN","MPIUTL8",29,0)
 ..S FND=$$CHECKA(LAST,FIRST,MID,SUF,PRE,ICN,FILE) I 'FND S FLAG="-1^ALIAS "_LAST_", "_FIRST_" "_MID_" "_SUF_" "_PRE_" wasn't updated for ICN "_ICN_" in file 985"
"RTN","MPIUTL8",30,0)
 .L -^MPIVET(ICN)
"RTN","MPIUTL8",31,0)
 ;
"RTN","MPIUTL8",32,0)
 I FILE=985.5 D
"RTN","MPIUTL8",33,0)
 .I $G(TFIEN)<0 S FLAG="-1^IEN for 985.5 for ICN "_ICN_" to update ALIAS in 985.5" Q
"RTN","MPIUTL8",34,0)
 .L +^MPI(985.5,TFIEN):10 I '$T S FLAG="-1^Unable to lock record "_TFIEN_" in file 985.5 to update Alias" Q
"RTN","MPIUTL8",35,0)
 .D CLEANA(.ARRAY,ICN,FILE,TFIEN)
"RTN","MPIUTL8",36,0)
 .S IEN=""
"RTN","MPIUTL8",37,0)
 .F  S IEN=$O(ARRAY("ALIAS",IEN)) Q:IEN=""  D
"RTN","MPIUTL8",38,0)
 ..S CNT=CNT+1
"RTN","MPIUTL8",39,0)
 ..S LAST=$G(ARRAY("ALIAS",IEN,1)),FIRST=$G(ARRAY("ALIAS",IEN,2)),MID=$G(ARRAY("ALIAS",IEN,3)),SUF=$G(ARRAY("ALIAS",IEN,5)),PRE=$G(ARRAY("ALIAS",IEN,4))
"RTN","MPIUTL8",40,0)
 ..Q:$$CHECKA(LAST,FIRST,MID,SUF,PRE,ICN,FILE,TFIEN)
"RTN","MPIUTL8",41,0)
 ..; ^ check to see if it exists already
"RTN","MPIUTL8",42,0)
 ..Q:LAST="@"
"RTN","MPIUTL8",43,0)
 ..S DIC="^MPI(985.5,"_TFIEN_",50,",DIC(0)="LZ",DIC("P")=$P($G(^DD(985.5,50,0)),"^",2),DA(1)=ICN,X=LAST
"RTN","MPIUTL8",44,0)
 ..D FILE^DICN
"RTN","MPIUTL8",45,0)
 ..S DIE="^MPI(985.5,"_TFIEN_",50,",DA=+Y,DR="1///"_FIRST_";2///"_MID_";3///"_PRE_";4///"_SUF D ^DIE
"RTN","MPIUTL8",46,0)
 ..S FND=$$CHECKA(LAST,FIRST,MID,SUF,PRE,ICN,FILE,TFIEN) I 'FND S FLAG="-1^ALIAS "_LAST_", "_FIRST_" "_MID_" "_SUF_" "_PRE_" wasn't updated for entry "_TFIEN_" in file 985.5"
"RTN","MPIUTL8",47,0)
 .L -^MPI(985.5,TFIEN)
"RTN","MPIUTL8",48,0)
 Q
"RTN","MPIUTL8",49,0)
 ;
"RTN","MPIUTL8",50,0)
CHECKA(LAST,FIRST,MID,SUF,PRE,ICN,FILE,TFIEN) ;
"RTN","MPIUTL8",51,0)
 N RET,IEN,NODE
"RTN","MPIUTL8",52,0)
 S RET=0
"RTN","MPIUTL8",53,0)
 I FILE=985 D
"RTN","MPIUTL8",54,0)
 .I $D(^MPIVET(ICN,50)) S IEN=0 F  S IEN=$O(^MPIVET(ICN,50,IEN)) Q:IEN=""  D
"RTN","MPIUTL8",55,0)
 ..S NODE=$G(^MPIVET(ICN,50,IEN,0))
"RTN","MPIUTL8",56,0)
 ..I $P(NODE,"^")=LAST&($P(NODE,"^",2)=FIRST)&($P(NODE,"^",3)=MID)&($P(NODE,"^",4)=PRE)&($P(NODE,"^",5)=SUF) S RET=1
"RTN","MPIUTL8",57,0)
 I FILE=985.5 D
"RTN","MPIUTL8",58,0)
 .I $D(^MPI(985.5,TFIEN,50)) S IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,50,IEN)) Q:IEN=""  D 
"RTN","MPIUTL8",59,0)
 ..S NODE=$G(^MPI(985.5,TFIEN,50,IEN,0))
"RTN","MPIUTL8",60,0)
 ..I $P(NODE,"^")=LAST&($P(NODE,"^",2)=FIRST)&($P(NODE,"^",3)=MID)&($P(NODE,"^",4)=PRE)&($P(NODE,"^",5)=SUF) S RET=1
"RTN","MPIUTL8",61,0)
 Q RET
"RTN","MPIUTL8",62,0)
 ;
"RTN","MPIUTL8",63,0)
CLEANA(ARRAY,ICN,FILE,TFIEN) ;remove an old alias values that are no longer at the site
"RTN","MPIUTL8",64,0)
 N MPIA,ALIAS,IEN,DIE,DA,DR,X,Y,LAST,FIRST,MID,PRE,SUF
"RTN","MPIUTL8",65,0)
 N FI,FND,IEN2,LA,MI,PR,SU,NODE
"RTN","MPIUTL8",66,0)
 I FILE=985 D
"RTN","MPIUTL8",67,0)
 .Q:'$O(^MPIVET(ICN,50,0))
"RTN","MPIUTL8",68,0)
 .S IEN=0 F  S IEN=$O(ARRAY("ALIAS",IEN)) Q:IEN=""  D
"RTN","MPIUTL8",69,0)
 ..S LAST=$G(ARRAY("ALIAS",IEN,1)),FIRST=$G(ARRAY("ALIAS",IEN,2)),MID=$G(ARRAY("ALIAS",IEN,3)),PRE=$G(ARRAY("ALIAS",IEN,4)),SUF=$G(ARRAY("ALIAS",IEN,5))
"RTN","MPIUTL8",70,0)
 ..I LAST="" S LAST=0
"RTN","MPIUTL8",71,0)
 ..I FIRST="" S FIRST=0
"RTN","MPIUTL8",72,0)
 ..I MID="" S MID=0
"RTN","MPIUTL8",73,0)
 ..I PRE="" S PRE=0
"RTN","MPIUTL8",74,0)
 ..I SUF="" S SUF=0
"RTN","MPIUTL8",75,0)
 ..S MPIA("LAST",LAST,IEN)="",MPIA("FIRST",FIRST,IEN)="",MPIA("MID",MID,IEN)=""
"RTN","MPIUTL8",76,0)
 ..S MPIA("PRE",PRE,IEN)="",MPIA("SUF",SUF,IEN)=""
"RTN","MPIUTL8",77,0)
 .S IEN=0 F  S IEN=$O(^MPIVET(ICN,50,IEN)) Q:IEN=""  D
"RTN","MPIUTL8",78,0)
 ..S NODE=$G(^MPIVET(ICN,50,IEN,0))
"RTN","MPIUTL8",79,0)
 ..S LA=$P(NODE,"^"),FI=$P(NODE,"^",2),MI=$P(NODE,"^",3),PR=$P(NODE,"^",4),SU=$P(NODE,"^",5)
"RTN","MPIUTL8",80,0)
 ..I FI="" S FI=0
"RTN","MPIUTL8",81,0)
 ..I MI="" S MI=0
"RTN","MPIUTL8",82,0)
 ..I PR="" S PR=0
"RTN","MPIUTL8",83,0)
 ..I SU="" S SU=0
"RTN","MPIUTL8",84,0)
 ..I '$D(MPIA("LAST",LA)) S FND=0
"RTN","MPIUTL8",85,0)
 ..I $D(MPIA("LAST",LA)) D
"RTN","MPIUTL8",86,0)
 ...S FND=0,IEN2=0 F  S IEN2=$O(MPIA("LAST",LA,IEN2)) Q:IEN2=""  D
"RTN","MPIUTL8",87,0)
 ....I $D(MPIA("FIRST",FI,IEN2))&($D(MPIA("MID",MI,IEN2)))&($D(MPIA("PRE",PR,IEN2)))&($D(MPIA("SUF",SU,IEN2))) S FND=1
"RTN","MPIUTL8",88,0)
 ..;need to remove this entry from the ALIAS multiple as it isn't at the site anymore
"RTN","MPIUTL8",89,0)
 ..I FND=0 S DIE="^MPIVET("_ICN_",50,",DA=IEN,DR=".01///@;1///@;2///@;3///@;4///@",DA(1)=ICN D ^DIE
"RTN","MPIUTL8",90,0)
 ..S FND=0
"RTN","MPIUTL8",91,0)
 I FILE=985.5 D
"RTN","MPIUTL8",92,0)
 .Q:'$O(^MPI(985.5,TFIEN,50,0))
"RTN","MPIUTL8",93,0)
 .S IEN=0 F  S IEN=$O(ARRAY("ALIAS",IEN)) Q:IEN=""  D
"RTN","MPIUTL8",94,0)
 ..S LAST=$G(ARRAY("ALIAS",IEN,1)),FIRST=$G(ARRAY("ALIAS",IEN,2)),MID=$G(ARRAY("ALIAS",IEN,3)),PRE=$G(ARRAY("ALIAS",IEN,4)),SUF=$G(ARRAY("ALIAS",IEN,5))
"RTN","MPIUTL8",95,0)
 ..I LAST="" S LAST=0
"RTN","MPIUTL8",96,0)
 ..I FIRST="" S FIRST=0
"RTN","MPIUTL8",97,0)
 ..I MID="" S MID=0
"RTN","MPIUTL8",98,0)
 ..I PRE="" S PRE=0
"RTN","MPIUTL8",99,0)
 ..I SUF="" S SUF=0
"RTN","MPIUTL8",100,0)
 ..S MPIA("LAST",LAST,IEN)="",MPIA("FIRST",FIRST,IEN)="",MPIA("MID",MID,IEN)=""
"RTN","MPIUTL8",101,0)
 ..S MPIA("PRE",PRE,IEN)="",MPIA("SUF",SUF,IEN)=""
"RTN","MPIUTL8",102,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.5,TFIEN,50,IEN)) Q:IEN=""  D
"RTN","MPIUTL8",103,0)
 ..S NODE=$G(^MPI(985.5,TFIEN,50,IEN,0))
"RTN","MPIUTL8",104,0)
 ..S LA=$P(NODE,"^"),FI=$P(NODE,"^",2),MI=$P(NODE,"^",3),PR=$P(NODE,"^",4),SU=$P(NODE,"^",5)
"RTN","MPIUTL8",105,0)
 ..I FI="" S FI=0
"RTN","MPIUTL8",106,0)
 ..I MI="" S MI=0
"RTN","MPIUTL8",107,0)
 ..I PR="" S PR=0
"RTN","MPIUTL8",108,0)
 ..I SU="" S SU=0
"RTN","MPIUTL8",109,0)
 ..I '$D(MPIA("LAST",LA)) S FND=0
"RTN","MPIUTL8",110,0)
 ..I $D(MPIA("LAST",LA)) D
"RTN","MPIUTL8",111,0)
 ...S FND=0,IEN2=0 F  S IEN2=$O(MPIA("LAST",LA,IEN2)) Q:IEN2=""  I $D(MPIA("FIRST",FI,IEN2))&($D(MPIA("MID",MI,IEN2)))&($D(MPIA("PRE",PR,IEN2)))&($D(MPIA("SUF",SU,IEN2))) S FND=1
"RTN","MPIUTL8",112,0)
 ..;need to remove this entry from the ALIAS multiple as it isn't at the site anymore
"RTN","MPIUTL8",113,0)
 ..I FND=0 S DIE="^MPI(985.5,"_TFIEN_",50,",DA=IEN,DR=".01///@;1///@;2///@;3///@;4///@",DA(1)=ICN D ^DIE
"RTN","MPIUTL8",114,0)
 ..S FND=0
"RTN","MPIUTL8",115,0)
 Q
"RTN","MPIUTL9")
0^203^B46160960
"RTN","MPIUTL9",1,0)
MPIUTL9 ;BIR/PTD-Continuation of Utility MPIUTL3 and MPIUTL4 ;2/24/04
"RTN","MPIUTL9",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**23,24,32,35**;30 Apr 99
"RTN","MPIUTL9",3,0)
 ;
"RTN","MPIUTL9",4,0)
DELTF(ICN) ;Delete ALL entries in MPI FACILITY ASSOCIATION (#985.5) file for ICN.
"RTN","MPIUTL9",5,0)
 ;
"RTN","MPIUTL9",6,0)
 ;ICN - patient ICN
"RTN","MPIUTL9",7,0)
 ;
"RTN","MPIUTL9",8,0)
 Q:'$G(ICN)
"RTN","MPIUTL9",9,0)
 N DA,DIK,MPI,MPIDA
"RTN","MPIUTL9",10,0)
 S MPI=0 F  S MPI=$O(^MPI(985.5,"AM",ICN,MPI)) Q:'MPI  D
"RTN","MPIUTL9",11,0)
 .S MPIDA=0 F  S MPIDA=$O(^MPI(985.5,"AM",ICN,MPI,MPIDA)) Q:'MPIDA  D
"RTN","MPIUTL9",12,0)
 ..S DA=MPIDA,DIK="^MPI(985.5," D ^DIK
"RTN","MPIUTL9",13,0)
 ..N BCST S BCST=$$BRDCST^MPITFOUT(ICN,"UPD",MPI,"MDL") ;call API to broadcast MFU
"RTN","MPIUTL9",14,0)
 Q
"RTN","MPIUTL9",15,0)
 ;
"RTN","MPIUTL9",16,0)
DEL1TF(ICN,MPI) ;Delete specific entry in MPI FACILITY ASSOCIATION (#985.5) file for ICN.
"RTN","MPIUTL9",17,0)
 ;
"RTN","MPIUTL9",18,0)
 ;ICN - patient ICN
"RTN","MPIUTL9",19,0)
 ;MPI - facility id (ptr to INSTITUTION file)
"RTN","MPIUTL9",20,0)
 ;
"RTN","MPIUTL9",21,0)
 N HIST,NXTC,TYPE,OID,ERROR,MPIST
"RTN","MPIUTL9",22,0)
 Q:'$G(ICN)
"RTN","MPIUTL9",23,0)
 Q:'$G(MPI)
"RTN","MPIUTL9",24,0)
 Q:'$O(^MPI(985.5,"AM",ICN,MPI,0))
"RTN","MPIUTL9",25,0)
 N DA,DIK,MPIDA
"RTN","MPIUTL9",26,0)
 S MPIDA=0 F  S MPIDA=$O(^MPI(985.5,"AM",ICN,MPI,MPIDA)) Q:'MPIDA  D
"RTN","MPIUTL9",27,0)
 .S DA=MPIDA,DIK="^MPI(985.5," D ^DIK
"RTN","MPIUTL9",28,0)
 N HIST S NXTC=0,HIST=0  F  S HIST=$O(^MPIVET(ICN,200,HIST)) Q:'HIST  S OID=$G(^MPIVET(ICN,200,HIST,0)),TYPE=$P(OID,"^",2) I MPI=$P(OID,"^",3) S MPIST=$$STA^XUAF4(MPI),ERROR=$$DELID^MPIUTL5($P(OID,"^"),TYPE,MPIST,ICN)
"RTN","MPIUTL9",29,0)
 N BCST S BCST=$$BRDCST^MPITFOUT(ICN,"UPD",MPI,"MDL") ;call API to broadcast MFU
"RTN","MPIUTL9",30,0)
 Q
"RTN","MPIUTL9",31,0)
 ;
"RTN","MPIUTL9",32,0)
RSLVSREX(ICN) ;Resolve entries in the MPI SERVER EXCEPTIONS (#985.9) file
"RTN","MPIUTL9",33,0)
 ;for ICN if STATUS is UNASSIGNED.
"RTN","MPIUTL9",34,0)
 ;
"RTN","MPIUTL9",35,0)
 ;ICN - patient ICN
"RTN","MPIUTL9",36,0)
 ;
"RTN","MPIUTL9",37,0)
 ;Returns: -1^error message, if unsuccessful
"RTN","MPIUTL9",38,0)
 ;          0 if OK
"RTN","MPIUTL9",39,0)
 ;
"RTN","MPIUTL9",40,0)
 Q:+ICN<1 "-1^Invalid ICN format."
"RTN","MPIUTL9",41,0)
 Q:ICN["V" "-1^Invalid ICN format."
"RTN","MPIUTL9",42,0)
 S ICN=+ICN ;ICN - NO checksum digit
"RTN","MPIUTL9",43,0)
 Q:'$D(^MPIVET(ICN)) "-1^No entry for ICN in MPI VETERAN/CLIENT (#985) file."
"RTN","MPIUTL9",44,0)
 N CW,DA,DR,EDDT,ERR,NOTE,TRKDA,UPD
"RTN","MPIUTL9",45,0)
 S TRKDA=0 F  S TRKDA=$O(^MPI(985.9,"AE",ICN,1,TRKDA)) Q:'TRKDA  D
"RTN","MPIUTL9",46,0)
 .S CW="POSTMASTER",UPD="RESOLVED",EDDT=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MPIUTL9",47,0)
 .L +^MPI(985.9,TRKDA):10
"RTN","MPIUTL9",48,0)
 .S DIE="^MPI(985.9,",DA=TRKDA,DR=".09///^S X=EDDT;.07///^S X=CW;.06///^S X=UPD" D ^DIE K DIE,DA,DR
"RTN","MPIUTL9",49,0)
 .S NOTE(1)="ICN has been deactivated."
"RTN","MPIUTL9",50,0)
 .D WP^DIE(985.9,TRKDA_",",4,"KA","NOTE",.ERR)
"RTN","MPIUTL9",51,0)
 .L -^MPI(985.9,TRKDA) ;**32 added trkda
"RTN","MPIUTL9",52,0)
 Q 0
"RTN","MPIUTL9",53,0)
 ;
"RTN","MPIUTL9",54,0)
ADDTF(AF,MPICN,OPT,DFN) ;Add entry to MPI FACILITY ASSOCIATION (#985.5) file.
"RTN","MPIUTL9",55,0)
 ;CHKAF^MPIMDMF2 updates MPI DATA MGT RESOLUTION JOURNAL (#985.2) file.
"RTN","MPIUTL9",56,0)
 ;**35 DFN added to parameter list
"RTN","MPIUTL9",57,0)
 ;AF - association facility IEN
"RTN","MPIUTL9",58,0)
 ;MPICN - patient ICN
"RTN","MPIUTL9",59,0)
 ;OPT - variable used by CHKAF^MPIMDMF2 to control display
"RTN","MPIUTL9",60,0)
 ;      Pass "1" for interactive messages to the user.
"RTN","MPIUTL9",61,0)
 ;      If "1" is not passed, no messages are displayed.
"RTN","MPIUTL9",62,0)
 ;DFN - IEN from file 2 of patient at Site AF
"RTN","MPIUTL9",63,0)
 ;
"RTN","MPIUTL9",64,0)
 ;   Example: S MPICN=1001131312,AF=520
"RTN","MPIUTL9",65,0)
 ;            S RET=$$ADDTF^MPIUTL9(AF,MPICN)
"RTN","MPIUTL9",66,0)
 ;
"RTN","MPIUTL9",67,0)
 ;Returns -1^error message, in unsuccessful
"RTN","MPIUTL9",68,0)
 ;         0 if OK
"RTN","MPIUTL9",69,0)
 ;
"RTN","MPIUTL9",70,0)
 N DIC,X
"RTN","MPIUTL9",71,0)
 Q:$D(^MPI(985.5,"AM",+MPICN,AF)) 0
"RTN","MPIUTL9",72,0)
 ; ^ entry already exists
"RTN","MPIUTL9",73,0)
 ;**35 entry doesn't exist for this ICN/Site yet, check for site/DFN before creating a new entry
"RTN","MPIUTL9",74,0)
 I $D(^MPI(985.5,"ASD",+$G(DFN),AF)) D
"RTN","MPIUTL9",75,0)
 .; update exiting place holder entry to have ICN added
"RTN","MPIUTL9",76,0)
 .N DA S DA=$O(^MPI(985.5,"ASD",DFN,AF,""))
"RTN","MPIUTL9",77,0)
 .I '$D(^MPI(985.5,DA,0)) K ^MPI(985.5,"ASD",DFN,AF,DA) Q
"RTN","MPIUTL9",78,0)
 .K FDA S FDA(985.5,DA_",",1)=+MPICN K MPIERR D FILE^DIE("E","FDA","MPIERR") K FDA
"RTN","MPIUTL9",79,0)
 .; populate ICN into existing entry for Site/DFN pair
"RTN","MPIUTL9",80,0)
 .; ** send A24 message to all Associated Sites **
"RTN","MPIUTL9",81,0)
 .S ZTSAVE("ICN")=+MPICN,ZTSAVE("SITEIEN")=AF,ZTSAVE("DFN")=DFN,ZTIO=""
"RTN","MPIUTL9",82,0)
 .S ZTDESC="A24 TO ASSOCIATED SITES",ZTRTN="A24AS^MPIUTL11",ZTDTH=$H
"RTN","MPIUTL9",83,0)
 .D ^%ZTLOAD
"RTN","MPIUTL9",84,0)
 .K ZTSAVE,ZTDESC,ZTRTN,ZTDTH,ZTREQ
"RTN","MPIUTL9",85,0)
 ; if Site/DFN pair doesn't exist, add new TF entry
"RTN","MPIUTL9",86,0)
 I '$D(^MPI(985.5,"ASD",+$G(DFN),AF)) D
"RTN","MPIUTL9",87,0)
 .S DIC="^MPI(985.5,",X=AF,DIC(0)="L",DIC("DR")="1////^S X=+MPICN"
"RTN","MPIUTL9",88,0)
 .L +^MPI(985.5,AF):10 ;**32 add af
"RTN","MPIUTL9",89,0)
 .D FILE^DICN
"RTN","MPIUTL9",90,0)
 .L -^MPI(985.5,AF) ;**32 add af
"RTN","MPIUTL9",91,0)
 I '$D(^MPI(985.5,"AM",+MPICN,AF)) Q "-1^No entry for "_AF_" for ICN "_+MPICN_" in MPI FACILITY ASSOCIATION (#985.5) file." ;**32 added plus to +mpicn
"RTN","MPIUTL9",92,0)
 D CHKAF^MPIMDMF2(+MPICN,$S($G(OPT):1,1:"")) ;**32 added plus to +mpicn
"RTN","MPIUTL9",93,0)
 ;on new add generate full list of TFs (ICN,"REP","ALL","MAD")
"RTN","MPIUTL9",94,0)
 N BCST S BCST=$$BRDCST^MPITFOUT(+MPICN,"REP","ALL","MAD") ;call API to broadcast MFU ;**32 added plus to +mpicn
"RTN","MPIUTL9",95,0)
 Q 0
"RTN","MPIUTL9",96,0)
 ;
"RTN","MPIUTL9",97,0)
CONVERT ;Loop through array ARR fields; convert 985 field numbers to 985.5 numbers.
"RTN","MPIUTL9",98,0)
 S RESULT=0 N FLD
"RTN","MPIUTL9",99,0)
 I $O(ARR(0))="" S RESULT="-1^No field data sent in array ARR for ICN "_ICN_"." Q
"RTN","MPIUTL9",100,0)
 S FLD="" F  S FLD=$O(ARR(FLD)) Q:FLD=""  D
"RTN","MPIUTL9",101,0)
 .I FLD=1 S NEWARR(11)=$G(ARR(FLD)) ;SURNAME
"RTN","MPIUTL9",102,0)
 .I FLD=2 S NEWARR(12)=$G(ARR(FLD)) ;FIRST NAME
"RTN","MPIUTL9",103,0)
 .I FLD=3 S NEWARR(13)=$G(ARR(FLD)) ;MIDDLE NAME
"RTN","MPIUTL9",104,0)
 .I FLD=4 S NEWARR(14)=$G(ARR(FLD)) ;NAME PREFIX
"RTN","MPIUTL9",105,0)
 .I FLD=5 S NEWARR(15)=$G(ARR(FLD)) ;NAME SUFFIX
"RTN","MPIUTL9",106,0)
 .I FLD=6 S NEWARR(16)=$G(ARR(FLD)) ;MOTHERS MAIDEN NAME
"RTN","MPIUTL9",107,0)
 .I FLD=7 S NEWARR(17)=$G(ARR(FLD)) ;DATE OF BIRTH
"RTN","MPIUTL9",108,0)
 .I FLD=8 S NEWARR(18)=$G(ARR(FLD)) ;PLACE OF BIRTH CITY
"RTN","MPIUTL9",109,0)
 .I FLD=9 S NEWARR(19)=$G(ARR(FLD)) ;PLACE OF BIRTH STATE
"RTN","MPIUTL9",110,0)
 .I FLD=10 S NEWARR(20)=$G(ARR(FLD)) ;DATE OF DEATH
"RTN","MPIUTL9",111,0)
 .I FLD=12 S NEWARR(22)=$G(ARR(FLD)) ;GENDER
"RTN","MPIUTL9",112,0)
 .I FLD=13 S NEWARR(23)=$G(ARR(FLD)) ;SOCIAL SECURITY NUMBER
"RTN","MPIUTL9",113,0)
 .I FLD=15 S NEWARR(25)=$G(ARR(FLD)) ;CLAIM NUMBER
"RTN","MPIUTL9",114,0)
 .I FLD=18 S NEWARR(1)=$G(ARR(18))  ;SURVIVING ICN
"RTN","MPIUTL9",115,0)
 .I FLD="DLT" S NEWARR(29)=$G(ARR("DLT")) ;DATE LAST TREATED
"RTN","MPIUTL9",116,0)
 .I FLD="EVR" S NEWARR(30)=$G(ARR("EVR")) ;ADT/HL7 EVENT REASON
"RTN","MPIUTL9",117,0)
 .I FLD="DFN" S NEWARR(2)=$G(ARR("DFN")) ;DFN
"RTN","MPIUTL9",118,0)
 .I FLD="DLUP" S NEWARR(31)=$G(ARR("DLUP")) ;DATE OF LAST UPDATE MESSAGE
"RTN","MPIUTL9",119,0)
 .; new fields added for patch 21
"RTN","MPIUTL9",120,0)
 .I FLD=30 S NEWARR(40)=$G(ARR(30)) ;marital status
"RTN","MPIUTL9",121,0)
 .I FLD=31 S NEWARR(41)=$G(ARR(31)) ;STREET ADDRESS 1
"RTN","MPIUTL9",122,0)
 .I FLD=32 S NEWARR(42)=$G(ARR(32)) ;STREET ADDRESS 2
"RTN","MPIUTL9",123,0)
 .I FLD=33 S NEWARR(43)=$G(ARR(33)) ;STREET ADDRESS 3
"RTN","MPIUTL9",124,0)
 .I FLD=34 S NEWARR(44)=$G(ARR(34)) ;CITY
"RTN","MPIUTL9",125,0)
 .I FLD=35 S NEWARR(45)=$G(ARR(35)) ;STATE
"RTN","MPIUTL9",126,0)
 .I FLD=36 S NEWARR(46)=$G(ARR(36)) ;ZIP+4
"RTN","MPIUTL9",127,0)
 .I FLD=37 S NEWARR(47)=$G(ARR(37)) ;PHONE
"RTN","MPIUTL9",128,0)
 .I FLD=38 S NEWARR(48)=$G(ARR(38)) ;POW STATUS
"RTN","MPIUTL9",129,0)
 .I FLD=39 S NEWARR(49)=$G(ARR(39)) ; multiple birth indicator
"RTN","MPIUTL9",130,0)
 .I FLD="ALIAS",$D(ARR("ALIAS")) M NEWARR("ALIAS")=ARR("ALIAS") ;ALIAS
"RTN","MPIUTL9",131,0)
 .I FLD="RACE",$D(ARR("RACE")) M NEWARR("RACE")=ARR("RACE") ;RACE
"RTN","MPIUTL9",132,0)
 .I FLD="ETH",$D(ARR("ETH")) M NEWARR("ETH")=ARR("ETH") ;ETHNICITY
"RTN","MPIUTL9",133,0)
 Q
"RTN","MPIUTL9",134,0)
 ;
"RTN","MPIUTL9",135,0)
CMORCHG ;Get data from the newly requested NEWCMOR in 985.5, IF data exists.
"RTN","MPIUTL9",136,0)
 S RESULT=0
"RTN","MPIUTL9",137,0)
 S TFIEN=$O(^MPI(985.5,"AM",ICN,NEWCMOR,0)) I 'TFIEN S RESULT=$$ADDTF(NEWCMOR,ICN) Q:RESULT'=0  I RESULT=0 S TFIEN=$O(^MPI(985.5,"AM",ICN,NEWCMOR,0))
"RTN","MPIUTL9",138,0)
 ;Look at DATE OF LAST UPDATE MESSAGE (#31) field for NEWCMOR.  If null,
"RTN","MPIUTL9",139,0)
 ;update COORDINATING MASTER OF RECORD (#16) field in 985, set RESULT and quit.
"RTN","MPIUTL9",140,0)
 S NEWCMOR="`"_NEWCMOR N NODE1,Y
"RTN","MPIUTL9",141,0)
 S DIE="^MPIVET(",DA=ICN,DR="16///^S X=NEWCMOR" ;Node is already locked
"RTN","MPIUTL9",142,0)
 D ^DIE K DA,DIE,DR
"RTN","MPIUTL9",143,0)
 ;prepare to update 985 with data from 985.5
"RTN","MPIUTL9",144,0)
 L +^MPI(985.5,TFIEN):10 I '$T S RESULT="-1^Unable to lock MPI FACILITY ASSOCIATION (#985.5) file record." Q
"RTN","MPIUTL9",145,0)
 I $O(^MPI(985.5,TFIEN,0)) S NODE1=$G(^MPI(985.5,TFIEN,1)) D
"RTN","MPIUTL9",146,0)
 .S ARR(1)=$P(NODE1,"^",2) ;SURNAME
"RTN","MPIUTL9",147,0)
 .Q:ARR(1)=""
"RTN","MPIUTL9",148,0)
 .S ARR(2)=$P(NODE1,"^",3) ;FIRST NAME
"RTN","MPIUTL9",149,0)
 .S ARR(3)=$P(NODE1,"^",4) ;MIDDLE NAME
"RTN","MPIUTL9",150,0)
 .S ARR(4)=$P(NODE1,"^",5) ;NAME PREFIX
"RTN","MPIUTL9",151,0)
 .S ARR(5)=$P(NODE1,"^",6) ;NAME SUFFIX
"RTN","MPIUTL9",152,0)
 .S ARR(6)=$P(NODE1,"^",7) ;MOTHERS MAIDEN NAME
"RTN","MPIUTL9",153,0)
 .S Y=$P(NODE1,"^",8) D DD^%DT S ARR(7)=Y ;DATE OF BIRTH
"RTN","MPIUTL9",154,0)
 .S ARR(8)=$P(NODE1,"^",9) ;PLACE OF BIRTH CITY
"RTN","MPIUTL9",155,0)
 .S ARR(9)=$P(NODE1,"^",10) ;PLACE OF BIRTH STATE
"RTN","MPIUTL9",156,0)
 .S Y=$P(NODE1,"^",11) D DD^%DT S ARR(10)=Y ;DATE OF DEATH
"RTN","MPIUTL9",157,0)
 .S ARR(12)=$P(NODE1,"^",13) ;GENDER
"RTN","MPIUTL9",158,0)
 .S ARR(13)=$P(NODE1,"^",14) I $G(ARR(13))["P" S ARR(13)="@" ;SOCIAL SECURITY NUMBER
"RTN","MPIUTL9",159,0)
 .I $D(ARR(13)),$G(ARR(13))'="@" S ARR(13)=$E(ARR(13),1,9)
"RTN","MPIUTL9",160,0)
 I $O(^MPI(985.5,TFIEN,1)) S ARR(15)=$P($G(^MPI(985.5,TFIEN,2)),"^") ;CLAIM NUMBER
"RTN","MPIUTL9",161,0)
 ;ARR(16) COORDINATING MASTER OF RECORD is original input
"RTN","MPIUTL9",162,0)
 L -^MPI(985.5,TFIEN)
"RTN","MPIUTL9",163,0)
 Q
"RTN","MPIUTL9",164,0)
 ;
"RTN","MPIUWVTQ")
0^204^B7416139
"RTN","MPIUWVTQ",1,0)
MPIUWVTQ ;;GRR; PROCESSING VTQ; 01/30/97
"RTN","MPIUWVTQ",2,0)
 ;;1.0; MASTER PATIENT INDEX AUSTIN ;**6,15**;30 Apr 99
"RTN","MPIUWVTQ",3,0)
 ;;
"RTN","MPIUWVTQ",4,0)
 K MPIDIRQ
"RTN","MPIUWVTQ",5,0)
EN1 K ^TMP("MPI",$J)
"RTN","MPIUWVTQ",6,0)
 N STOP,TCNT
"RTN","MPIUWVTQ",7,0)
 S HLSDT="VTQ",GBL="^TMP(""MPI"",$J)"
"RTN","MPIUWVTQ",8,0)
 S (MPIMSHC,MPICNT)=0
"RTN","MPIUWVTQ",9,0)
 S MPIIFN="" F  S MPIIFN=$O(MPITMP(MPIIFN)) Q:MPIIFN=""  D  Q:$D(ERRHL)
"RTN","MPIUWVTQ",10,0)
 .S MPI(0)=MPITMP(MPIIFN)
"RTN","MPIUWVTQ",11,0)
 .I $E(MPI(0),1,3)="MSH" S MPIMSHC=MPIMSHC+1,MPIFACSN=$P(MPI(0),HL("FS"),4),MPIFAC=$O(^DIC(4,"D",MPIFACSN,0)),MPIMSH=MPI(0),MPINMSH=$$REVMSH^MPIUTL1(MPIMSH),MPIMCN=$P(MPI(0),HL("FS"),10) Q
"RTN","MPIUWVTQ",12,0)
 .I $E(MPI(0),1,3)="VTQ" D
"RTN","MPIUWVTQ",13,0)
 ..S MPIVTQN=$P(MPI(0),HL("FS"),2)
"RTN","MPIUWVTQ",14,0)
 ..S MPITYP=$P(MPI(0),HL("FS"),4)
"RTN","MPIUWVTQ",15,0)
 ..S MPIPAR=$P(MPI(0),HL("FS"),6)
"RTN","MPIUWVTQ",16,0)
 ..S MPIIFN=MPIIFN+1
"RTN","MPIUWVTQ",17,0)
 ..I $E($G(MPITMP(MPIIFN)),1,3)'="RDF" S ERRHL="RDF SEGMENT MISSING" Q
"RTN","MPIUWVTQ",18,0)
 ..S MPIRDF(1)=MPITMP(MPIIFN),MPIRDF(2)=$G(MPITMP(MPIIFN+1))
"RTN","MPIUWVTQ",19,0)
 ..S MPIRDT="MPIJUNK"
"RTN","MPIUWVTQ",20,0)
 ..D LAYGO^MPIVTQ(MPIPAR,.MPIRDF,MPIFAC,MPIRDT,.MPIERR,MPITYP)
"RTN","MPIUWVTQ",21,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",22,0)
 ..S @GBL@(MPICNT)=MPINMSH
"RTN","MPIUWVTQ",23,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",24,0)
 ..S @GBL@(MPICNT)=""
"RTN","MPIUWVTQ",25,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",26,0)
 ..S @GBL@(MPICNT)="MSA"_HL("FS")_"AA"_HL("FS")_MPIMCN
"RTN","MPIUWVTQ",27,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",28,0)
 ..S @GBL@(MPICNT)=""
"RTN","MPIUWVTQ",29,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",30,0)
 ..S @GBL@(MPICNT)="QAK"_HL("FS")_MPIVTQN_HL("FS")_$S($O(@MPIRDT@(0))'="":"OK",1:"NO DATA ")
"RTN","MPIUWVTQ",31,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",32,0)
 ..S @GBL@(MPICNT)=""
"RTN","MPIUWVTQ",33,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",34,0)
 ..S @GBL@(MPICNT)=MPIRDF(1),MPICNT=MPICNT+1,@GBL@(MPICNT)=MPIRDF(2)
"RTN","MPIUWVTQ",35,0)
 ..S TCNT=MPICNT
"RTN","MPIUWVTQ",36,0)
 ..S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",37,0)
 ..S @GBL@(MPICNT)=""
"RTN","MPIUWVTQ",38,0)
 ..S MPIRDTC=0,STOP=0
"RTN","MPIUWVTQ",39,0)
 ..F  S MPIRDTC=$O(@MPIRDT@(MPIRDTC)) Q:MPIRDTC'>0!(STOP)  D
"RTN","MPIUWVTQ",40,0)
 ...S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",41,0)
 ...S @GBL@(MPICNT)=@MPIRDT@(MPIRDTC)
"RTN","MPIUWVTQ",42,0)
 ...I $O(@MPIRDT@(MPIRDTC))'="",MPITYP["ICN_LOAD" K @GBL@(MPICNT),@GBL@(TCNT) S @GBL@(TCNT-1)="QAK"_HL("FS")_MPIVTQN_HL("FS")_"NO DATA - POTENTIAL MATCHES FOUND",STOP=1 Q
"RTN","MPIUWVTQ",43,0)
 ..I $G(MPIDIRQ)'=1 D GENERATE^HLMA("MPI VTQ","GM",1,,.HLRST)
"RTN","MPIUWVTQ",44,0)
 I $D(ERRHL) D
"RTN","MPIUWVTQ",45,0)
 .S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",46,0)
 .S @GBL@(MPICNT)=MPINMSH
"RTN","MPIUWVTQ",47,0)
 .S MPICNT=MPICNT+1
"RTN","MPIUWVTQ",48,0)
 .S @GBL@(MPICNT)="MSA"_HL("FS")_"AR"_HL("FS")_MPIMCN_HL("FS")_ERRHL
"RTN","MPIUWVTQ",49,0)
 .I $G(MPIDIRQ)'=1 D GENERATE^HLMA("MPI VTQ","GM",1,,.HLRST)
"RTN","MPIUWVTQ",50,0)
 Q
"RTN","MPIVTQ")
0^205^B41666173
"RTN","MPIVTQ",1,0)
MPIVTQ ;GFT-QUERY PROCESSING ;5/15/98
"RTN","MPIVTQ",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**2,14,15,27,24,31**;30 Apr 99
"RTN","MPIVTQ",3,0)
 ;
"RTN","MPIVTQ",4,0)
DIC(LNAME,DOB,SSN) ;
"RTN","MPIVTQ",5,0)
 N RDF,VTQ,MPICOMPS,MPIREPS,MPIOUT S U="^"
"RTN","MPIVTQ",6,0)
 D HL S RDF="RDF"_HL("FS")_1_HL("FS")_"@00105"_MPICOMPS_"ST"_MPICOMPS_16
"RTN","MPIVTQ",7,0)
 S VTQ=""
"RTN","MPIVTQ",8,0)
 I $G(SSN) S VTQ=VTQ_MPICOMPS_"AND"_MPIREPS_"@00122"_MPICOMPS_"EQ"_MPICOMPS_SSN
"RTN","MPIVTQ",9,0)
 I $L(DOB) S VTQ=VTQ_MPICOMPS_"AND"_MPIREPS_"@00110"_MPICOMPS_"EQ"_MPICOMPS_DOB
"RTN","MPIVTQ",10,0)
 I $L(LNAME) S VTQ=VTQ_MPICOMPS_"AND"_MPIREPS_"@00108.1"_MPICOMPS_"EQ"_MPICOMPS_LNAME
"RTN","MPIVTQ",11,0)
 S VTQ=$E(VTQ,6,999) I VTQ="" Q -1
"RTN","MPIVTQ",12,0)
 D VTQ(VTQ,.RDF,"MPIOUT") I $D(MPIOUT(1)),'$O(MPIOUT(1)) Q $P(MPIOUT(1),HL("FS"),2)
"RTN","MPIVTQ",13,0)
 Q -1
"RTN","MPIVTQ",14,0)
 ;
"RTN","MPIVTQ",15,0)
TRY(SEG,RDF,OUT,ERR) ;find potential duplicates
"RTN","MPIVTQ",16,0)
 ;NOT USED
"RTN","MPIVTQ",17,0)
 ;N B,ENT,MPICOMPS,MPIREPS
"RTN","MPIVTQ",18,0)
 ;K ERR,MPI
"RTN","MPIVTQ",19,0)
 ;S B=$$THREE Q:$D(ERR)
"RTN","MPIVTQ",20,0)
 ;D DUPCHK(B,0,.MPI)
"RTN","MPIVTQ",21,0)
 ;F ENT=0:0 S ENT=$O(MPI(ENT)) Q:'ENT  D RDT^MPIVTQF(ENT,.RDF,OUT,.ERR)
"RTN","MPIVTQ",22,0)
 Q
"RTN","MPIVTQ",23,0)
 ;
"RTN","MPIVTQ",24,0)
DUPCHK(B,FULL,MPI,MPITYP) ;
"RTN","MPIVTQ",25,0)
 N SSN,LNAME,FNAME,MNAME,PRENAME,SUFFNAME,DOB,F,COND,C,P
"RTN","MPIVTQ",26,0)
 F C="122SSN","108.1LNAME","108.2FNAME","108.3MNAME","108.4PRENAME","108.5SUFFNAME","110DOB" D
"RTN","MPIVTQ",27,0)
 .; changed \/ to add @00 to number for search to avoid false hits
"RTN","MPIVTQ",28,0)
 .S P=$F(B,"@00"_+C)
"RTN","MPIVTQ",29,0)
 .I $E(B,P)=MPICOMPS S F=$P($E(B,P,999),MPICOMPS,3),@($P(C,+C,2)_"=F")
"RTN","MPIVTQ",30,0)
 ; we aren't screening out those missing the DOB, must handle it **27
"RTN","MPIVTQ",31,0)
 I $D(DOB) S DOB=$$FMDATE^HLFNC(DOB)
"RTN","MPIVTQ",32,0)
 I FULL S LNAME=$$FMNAME^HLFNC(LNAME_U_$G(FNAME)_U_$G(MNAME)_U_$G(PRENAME)_U_$G(SUFFNAME),U)
"RTN","MPIVTQ",33,0)
 I '$D(SSN) S SSN="",MPIMFLG=1 ;**24
"RTN","MPIVTQ",34,0)
 I SSN["P" S SSN="" ;**31 reset SSN to null if pseudo SSN passed
"RTN","MPIVTQ",35,0)
 I '$D(DOB) S DOB="" ;**27 **24
"RTN","MPIVTQ",36,0)
 ;**24 check if site/dfn exists - if so, that's the match no other searching
"RTN","MPIVTQ",37,0)
 N API S API=$$GETICN^MPIUTL11(MPIVTQN,$$STA^XUAF4(MPIFAC),"200M",1,1) I +API>1 S @MPI@(+API)="" ;**31 station # passed instead of IEN
"RTN","MPIVTQ",38,0)
 I $E(SSN,1,5)="00000"!($E(LNAME,1,3)="EEE")!($E(LNAME,1,2)="ZZ")!(LNAME["MERGING")!(DOB="")!(SSN="") Q  ;**27 **24
"RTN","MPIVTQ",39,0)
 I +API<1 D TRY^MPIC(LNAME,SSN,DOB,MPI)
"RTN","MPIVTQ",40,0)
 Q
"RTN","MPIVTQ",41,0)
 ;
"RTN","MPIVTQ",42,0)
ERR S ERR="FLDS MUST INCLUDE Last NAME"
"RTN","MPIVTQ",43,0)
 Q
"RTN","MPIVTQ",44,0)
 ;
"RTN","MPIVTQ",45,0)
THREE() ;build VTQ for SSN,LASTNAME,DOB
"RTN","MPIVTQ",46,0)
 K @OUT,ERR
"RTN","MPIVTQ",47,0)
 D SEG S B=""
"RTN","MPIVTQ",48,0)
 F C=1:1 S COND=$P(SEG,MPIREPS,C) Q:COND=""  F P="@00122","@00108.1","@00110" I $P(COND,P)="" S B=B_COND_MPIREPS
"RTN","MPIVTQ",49,0)
 ;check for required last name - NO LONGER NEED DOB **27
"RTN","MPIVTQ",50,0)
 ;I B'["@00110"!(B'["@00108.1") D ERR Q ""
"RTN","MPIVTQ",51,0)
 I B'["00108.1" D ERR Q ""
"RTN","MPIVTQ",52,0)
 I B?.E1"AND"1P S B=$E(B,1,$L(B)-5)
"RTN","MPIVTQ",53,0)
 Q B
"RTN","MPIVTQ",54,0)
 ;
"RTN","MPIVTQ",55,0)
LAYGO(SEG,RDF,INST,OUT,ERR,MPITYP) ;
"RTN","MPIVTQ",56,0)
 N MPITHRSH,COND,OP,ANDOR,P,C,ARR,FLD,N,TYPE,B,MPICOMPS,MPIREPS,MPIPM,MPIDA
"RTN","MPIVTQ",57,0)
 K ^TMP("MPIA",$J)
"RTN","MPIVTQ",58,0)
 S MPIA="^TMP(""MPIA"",$J)"
"RTN","MPIVTQ",59,0)
 K ERR
"RTN","MPIVTQ",60,0)
 S B=$$THREE Q:$D(ERR)
"RTN","MPIVTQ",61,0)
 D DUPCHK(SEG,1,MPIA,MPITYP)
"RTN","MPIVTQ",62,0)
 I '$O(@MPIA@(0)) D ADDNEW(MPITYP) Q
"RTN","MPIVTQ",63,0)
 S MPITHRSH=208 ;***
"RTN","MPIVTQ",64,0)
 N DA S DA=$O(@MPIA@(0))
"RTN","MPIVTQ",65,0)
 I '$O(@MPIA@(DA)) S ICN=DA D TELL Q
"RTN","MPIVTQ",66,0)
 I DA D
"RTN","MPIVTQ",67,0)
 .I MPITYP["NO_LOAD" I '$O(@MPIA@(0)) N FCNT S FCNT=$O(@OUT@(""),-1)+1 S @OUT@(FCNT)="" S:'$D(HL("FS")) HL("FS")=MPIFS D RDT^MPIVTQF(DA,.RDF,.OUT,.ERR,INST) ;**24
"RTN","MPIVTQ",68,0)
 . S (MPIDA,MPIPM)=0 F  S MPIDA=$O(@MPIA@(MPIDA)) Q:MPIDA=""  D
"RTN","MPIVTQ",69,0)
 .. I MPITYP["NO_LOAD" D
"RTN","MPIVTQ",70,0)
 ...; check to see if ICN has been deactivated
"RTN","MPIVTQ",71,0)
 ...I $P($G(^MPIVET(MPIDA,"ID_STATE")),"^")="D" Q  ;**24
"RTN","MPIVTQ",72,0)
 ... ;establish the null line between hl7 segments
"RTN","MPIVTQ",73,0)
 ... S FCNT=$O(@OUT@(""),-1)+1,@OUT@(FCNT)=""
"RTN","MPIVTQ",74,0)
 ... I '$D(HL("FS")) S HL("FS")=MPIFS
"RTN","MPIVTQ",75,0)
 ... D RDT^MPIVTQF(MPIDA,.RDF,.OUT,.ERR,INST) ; **24
"RTN","MPIVTQ",76,0)
 .. S MPIPM=MPIPM+1
"RTN","MPIVTQ",77,0)
 . I MPIPM>1 S MPIERR="POTENTIAL MATCHES: "_MPIPM_" PATIENTS MATCH AT LEVEL OF "_MPITHRSH_" OR HIGHER" Q
"RTN","MPIVTQ",78,0)
 K MPIA
"RTN","MPIVTQ",79,0)
 Q
"RTN","MPIVTQ",80,0)
 ;
"RTN","MPIVTQ",81,0)
ADDNEW(MPITYP) ;
"RTN","MPIVTQ",82,0)
 N ICN,ARR,C,B,CMOR
"RTN","MPIVTQ",83,0)
 Q:MPITYP'["ICN_LOAD"
"RTN","MPIVTQ",84,0)
 F C=1:1 S COND=$P(SEG,MPIREPS,C) Q:COND=""  D FLD Q:$D(ERR)  S ARR(N)=B I OP'="EQ"!("AND"'[ANDOR) S ERR="BAD VTQ FORMAT FOR ADDING AN MPI ENTRY" G Q
"RTN","MPIVTQ",85,0)
 S ARR("DFN")=MPIVTQN ;**24 to get DFN populated in 985.5
"RTN","MPIVTQ",86,0)
 S ICN=$$ADDVET^MPIUTL3(MPIFACSN,.ARR)
"RTN","MPIVTQ",87,0)
TELL I '$D(HL("FS")) S HL("FS")=MPIFS
"RTN","MPIVTQ",88,0)
 D RDT^MPIVTQF(ICN,.RDF,OUT,.ERR,MPIFAC) ;report entry 'DA' of File 985 **24 added MPIFAC to RDT^MPIVTQF call
"RTN","MPIVTQ",89,0)
Q Q
"RTN","MPIVTQ",90,0)
 ;
"RTN","MPIVTQ",91,0)
NEWICN(X) ;if X is null, number will be generated
"RTN","MPIVTQ",92,0)
 N DD,DO,Y,DIC,DINUM,DA,X,IEN
"RTN","MPIVTQ",93,0)
 I $G(X) S DINUM=+X Q:$D(^MPIVET(DINUM)) DINUM
"RTN","MPIVTQ",94,0)
 E  D
"RTN","MPIVTQ",95,0)
 .L +^MPIVETN
"RTN","MPIVTQ",96,0)
 .S Y=$G(^MPIVETN)
"RTN","MPIVTQ",97,0)
 .I Y="" L +^MPIVET(0) S (Y,^MPIVETN)=+$P($G(^MPIVET(0)),U,3) L -^MPIVET(0)
"RTN","MPIVTQ",98,0)
 .S (X,IEN,DINUM,^MPIVETN)=Y+1
"RTN","MPIVTQ",99,0)
 .L -^MPIVETN
"RTN","MPIVTQ",100,0)
 S:X?.NP X=X_"V"_$$CHECKDG^MPIUTL(X)
"RTN","MPIVTQ",101,0)
 S DIC="^MPIVET(",DIC(0)="L"
"RTN","MPIVTQ",102,0)
 D FILE^DICN
"RTN","MPIVTQ",103,0)
 Q IEN
"RTN","MPIVTQ",104,0)
 ;
"RTN","MPIVTQ",105,0)
VTQ(SEG,RDF,OUT,ERR) ;
"RTN","MPIVTQ",106,0)
 ;'OUT' is the name of an array (perhaps a Global name) into which the output message(s) are put
"RTN","MPIVTQ",107,0)
 K ERR,@OUT
"RTN","MPIVTQ",108,0)
 N L,CAP,D0,ANDOR,C,COND,IX,IXQ,IXV,N,O,FLD,OP,A,B,TYPE,X,P,XEC,MPICOMPS,MPIREPS
"RTN","MPIVTQ",109,0)
 D SEG S XEC="I ",ANDOR=0,IX="ZZ"
"RTN","MPIVTQ",110,0)
 S O=0
"RTN","MPIVTQ",111,0)
 F C=1:1 S COND=$P(SEG,MPIREPS,C) Q:COND=""  D  Q:$D(ERR)
"RTN","MPIVTQ",112,0)
 .I ANDOR="" S ERR="NO 'AND' CONNECTING SEARCH CRITERIA" Q
"RTN","MPIVTQ",113,0)
 .D FLD Q:$D(ERR)
"RTN","MPIVTQ",114,0)
 .S A="^MPIVET(D0,"_N_")" I N'=0 S A="$G("_A_")"
"RTN","MPIVTQ",115,0)
 .S A="$P("_A_",U,"_P_")"
"RTN","MPIVTQ",116,0)
 .I TYPE="D",OP="EQ"!(OP="GN") D  D
"RTN","MPIVTQ",117,0)
 ..I B?3.5N1"00" S B=B\100,OP="GN"
"RTN","MPIVTQ",118,0)
 .S B=$$QUOTE^MPIUTL(B),IXQ=$P(FLD,";",5)
"RTN","MPIVTQ",119,0)
 .K X F O="EQ","NE","LT","GT","LE","GE","CT","GN" I O=OP D @O Q
"RTN","MPIVTQ",120,0)
 .I '$D(X) S ERR="BAD OPERATOR '"_OP_"'",X="" Q
"RTN","MPIVTQ",121,0)
 .S L=$L(XEC) I L+$L(X)>240 S XEC(1)=$E(XEC,1,L-1),XEC="X XEC(1) I $T"_$E(XEC,L)
"RTN","MPIVTQ",122,0)
 .S XEC=XEC_"("_X_")"_$S(ANDOR="AND":"&",ANDOR="OR":"!",1:"") Q
"RTN","MPIVTQ",123,0)
 Q:$D(ERR)
"RTN","MPIVTQ",124,0)
 I ANDOR]"" S ERR="DANGLING '"_ANDOR_"'" Q
"RTN","MPIVTQ",125,0)
 I '$D(IXV) S ERR="NO CROSS-REF" Q
"RTN","MPIVTQ",126,0)
 D @("IX"_IX)
"RTN","MPIVTQ",127,0)
 Q
"RTN","MPIVTQ",128,0)
 ;
"RTN","MPIVTQ",129,0)
SEG D HL
"RTN","MPIVTQ",130,0)
 I SEG?1"VTQ".E S SEG=$P(SEG,HL("FS"),5)
"RTN","MPIVTQ",131,0)
 Q
"RTN","MPIVTQ",132,0)
HL ;
"RTN","MPIVTQ",133,0)
 I '$D(HL("FS")) S HL("FS")="|"
"RTN","MPIVTQ",134,0)
 I '$D(HL("ECH")) S HL("ECH")="^~\&"
"RTN","MPIVTQ",135,0)
 S MPICOMPS=$E(HL("ECH"))
"RTN","MPIVTQ",136,0)
 S MPIREPS=$E(HL("ECH"),2)
"RTN","MPIVTQ",137,0)
 Q
"RTN","MPIVTQ",138,0)
 ;
"RTN","MPIVTQ",139,0)
FLD S FLD=$$^MPIVTQF($P(COND,MPICOMPS)),OP=$P(COND,MPICOMPS,2),B=$P(COND,MPICOMPS,3),ANDOR=$P(COND,MPICOMPS,4)
"RTN","MPIVTQ",140,0)
 S N=$P(FLD,";",3)
"RTN","MPIVTQ",141,0)
 I N="" S ERR="BAD FIELD NAME" Q
"RTN","MPIVTQ",142,0)
 S TYPE=$P(FLD,";",4)
"RTN","MPIVTQ",143,0)
 I TYPE="P",OP="EQ"!(OP="NE") D
"RTN","MPIVTQ",144,0)
 .I B'="" N FILE S FILE=$P(FLD,";",5) I FILE="^DIC(5," S B=$P($G(^DIC(5,B,0)),"^",2)
"RTN","MPIVTQ",145,0)
 .I B'="" I FILE'="^DIC(5," N DIC,X,Y S DIC=$P(FLD,";",5),DIC(0)="M",X=B D ^DIC S B=+Y
"RTN","MPIVTQ",146,0)
 S:TYPE="D" B=$$FMDATE^HLFNC(B)
"RTN","MPIVTQ",147,0)
 Q
"RTN","MPIVTQ",148,0)
 ;
"RTN","MPIVTQ",149,0)
 ;
"RTN","MPIVTQ",150,0)
IXSA ;
"RTN","MPIVTQ",151,0)
 N S S S=IXV F  D IXA S IXV=$O(^MPIVET("B",IXV)) Q:$P(IXV,S)]""  Q:IXV=""
"RTN","MPIVTQ",152,0)
 Q
"RTN","MPIVTQ",153,0)
IXA ;lookup by MPI number
"RTN","MPIVTQ",154,0)
 F D0=0:0 S D0=$O(^MPIVET("B",IXV,D0)) Q:'D0  D XEC
"RTN","MPIVTQ",155,0)
 Q
"RTN","MPIVTQ",156,0)
 ;
"RTN","MPIVTQ",157,0)
IXSB ;
"RTN","MPIVTQ",158,0)
 N S S S=IXV F  D IXB S IXV=$O(^MPIVET("SSN",IXV)) Q:$P(IXV,S)]""  Q:IXV=""
"RTN","MPIVTQ",159,0)
 Q
"RTN","MPIVTQ",160,0)
IXB ;lookup by SSN
"RTN","MPIVTQ",161,0)
 F D0=0:0 S D0=$O(^MPIVET("SSN",IXV,D0)) Q:'D0  D XEC
"RTN","MPIVTQ",162,0)
 Q
"RTN","MPIVTQ",163,0)
 ;
"RTN","MPIVTQ",164,0)
IXSC ;
"RTN","MPIVTQ",165,0)
 N S S S=IXV F  D IXC S IXV=$O(^MPIVET("AM",IXV)) Q:$P(IXV,S)]""  Q:IXV=""
"RTN","MPIVTQ",166,0)
 Q
"RTN","MPIVTQ",167,0)
IXC ;lookup by LastName
"RTN","MPIVTQ",168,0)
 N FN S FN=""
"RTN","MPIVTQ",169,0)
 F  S FN=$O(^MPIVET("AM",IXV,FN)) Q:FN=""  F D0=0:0 S D0=$O(^MPIVET("AM",IXV,FN,D0)) Q:'D0  D XEC
"RTN","MPIVTQ",170,0)
 Q
"RTN","MPIVTQ",171,0)
 ;
"RTN","MPIVTQ",172,0)
XEC I $D(^MPIVET(D0,0)) X XEC I  D RDT^MPIVTQF(D0,.RDF,OUT,.ERR)
"RTN","MPIVTQ",173,0)
 Q
"RTN","MPIVTQ",174,0)
 ;
"RTN","MPIVTQ",175,0)
EQ S X=A_"="_B
"RTN","MPIVTQ",176,0)
IXQ I IXQ]"",IX]IXQ S IX=IXQ,@("IXV="_B)
"RTN","MPIVTQ",177,0)
 Q
"RTN","MPIVTQ",178,0)
NE S X=A_"'="_B Q
"RTN","MPIVTQ",179,0)
LT S X=B_"]]"_A Q
"RTN","MPIVTQ",180,0)
GT S X=A_"]]"_B Q
"RTN","MPIVTQ",181,0)
LE S X=A_"']]"_B Q
"RTN","MPIVTQ",182,0)
GE S X=B_"']]"_A Q
"RTN","MPIVTQ",183,0)
CT S X=A_"["_B Q
"RTN","MPIVTQ",184,0)
GN S X="$P("_A_","_B_")="""""
"RTN","MPIVTQ",185,0)
 Q:IXQ=""  S IXQ="S"_IXQ G IXQ
"RTN","MPIVTQ",186,0)
 ;
"RTN","MPIVTQF")
0^206^B42991701
"RTN","MPIVTQF",1,0)
MPIVTQF(F) ;GFT/CONTRACTOR-RDT BUILDER ;1/30/97
"RTN","MPIVTQF",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**6,14,15,21,16,24**;30 Apr 99
"RTN","MPIVTQF",3,0)
 ;
"RTN","MPIVTQF",4,0)
 ;RETURNS ALL THE ";"-PIECES FOLLOWING THE FIELD NAME - field number;data type;file pointed to;x-ref to be used.
"RTN","MPIVTQF",5,0)
 ;THUS, $$MPIVTQ("@00105") IS ".01;;;A"
"RTN","MPIVTQF",6,0)
 ;
"RTN","MPIVTQF",7,0)
 N T,I F I=0:1 S T=$T(FIELD+I) Q:$P(T,";",3)=F!(T?.P)
"RTN","MPIVTQF",8,0)
 Q $P(T,";",5,9)
"RTN","MPIVTQF",9,0)
FIELD ;;@00105;ICN;0;1;.01
"RTN","MPIVTQF",10,0)
 ;;@00122;SSN;0;14;13
"RTN","MPIVTQF",11,0)
 ;;@00108.1;LAST NAME;0;2;1
"RTN","MPIVTQF",12,0)
 ;;@00108.2;FIRST NAME;0;3;2
"RTN","MPIVTQF",13,0)
 ;;@00108.3;MIDDLE;0;4;3
"RTN","MPIVTQF",14,0)
 ;;@00108.4;NAME SUFFIX;0;6;5
"RTN","MPIVTQF",15,0)
 ;;@00108.5;NAME PREFIX;0;5;4
"RTN","MPIVTQF",16,0)
 ;;@00126.1;BIRTH PLACE CITY;0;9;8
"RTN","MPIVTQF",17,0)
 ;;@00126.2;BIRTH PLACE STATE;0;10;9;P;^DIC(5,
"RTN","MPIVTQF",18,0)
 ;;@00109.1;MOTHER'S MAIDEN NAME;0;7;6
"RTN","MPIVTQF",19,0)
 ;;@00111;SEX;0;13;12
"RTN","MPIVTQF",20,0)
 ;;@00756;PRIMARY CARE SITE;1;2;16;P;^DIC(4,
"RTN","MPIVTQF",21,0)
 ;;@00740;DATE OF DEATH;0;11;10;D
"RTN","MPIVTQF",22,0)
 ;;@00110;DOB;0;8;7;D
"RTN","MPIVTQF",23,0)
 ;;@00109;MA'S MAIDEN NAME;0;7;6
"RTN","MPIVTQF",24,0)
 ;;@00169;TREATING FACILITY (MULTIPLE--FILE 985.5);;;;
"RTN","MPIVTQF",25,0)
 ;;@ZEL6;CLAIM NUMBER;1;1;15
"RTN","MPIVTQF",26,0)
 ;;@00112.1;ALIAS LAST NAME;985.02;1;.01
"RTN","MPIVTQF",27,0)
 ;;@00112.2;ALIAS FIRST NAME;985.02;2;1
"RTN","MPIVTQF",28,0)
 ;;@00112.3;ALIAS MIDDLE NAME;985.02;3;2
"RTN","MPIVTQF",29,0)
 ;;@00112.4;ALIAS SUFFIX;985.02;5;4
"RTN","MPIVTQF",30,0)
 ;;@00112.5;ALIAS PREFIX;985.02;4;3
"RTN","MPIVTQF",31,0)
 ;;@POW;POW STATUS;2;9;38
"RTN","MPIVTQF",32,0)
 ;;@00127;MULITPLE BIRTH;2;10;39
"RTN","MPIVTQF",33,0)
 ;;
"RTN","MPIVTQF",34,0)
 ;
"RTN","MPIVTQF",35,0)
 ;
"RTN","MPIVTQF",36,0)
RDT(EN,RDF,OUT,POP,SITE) ; 'EN' is IEN in File 985, 'RDF' is output specification in RDF format, OUT is an array name, POP is an ERROR message if non-null,SITE is the station number of the site making the request
"RTN","MPIVTQF",37,0)
 N MPICOMP
"RTN","MPIVTQF",38,0)
 S MPICOMP=$E(HL("ECH"),1)
"RTN","MPIVTQF",39,0)
 I '$D(^MPIVET(EN,0)) S POP="no such guy" Q
"RTN","MPIVTQF",40,0)
 ; check to be sure entry hasn't been deactivated since started
"RTN","MPIVTQF",41,0)
 I $P($G(^MPIVET(EN,"ID_STATE")),"^")="D" Q  ;**24
"RTN","MPIVTQF",42,0)
 I $P($G(^MPIVET(EN,"ID_STATE")),"^")'="P"&('$D(^MPI(985.5,"AM",EN,SITE))) Q  ;**24 if not a permanent site must be a TF
"RTN","MPIVTQF",43,0)
 N FCNT S FCNT=$O(@OUT@(""),-1)+1
"RTN","MPIVTQF",44,0)
 S @OUT@(FCNT)="RDT"
"RTN","MPIVTQF",45,0)
RECURS N FILL,CASE,RDT,CAP,TRD,X,Y
"RTN","MPIVTQF",46,0)
 S CASE="",RDT="RDT"
"RTN","MPIVTQF",47,0)
 N A,C,R,TYPE,FLD,MPIX,POP,AL
"RTN","MPIVTQF",48,0)
 ;loop through the RDF segment array
"RTN","MPIVTQF",49,0)
 N MPIREP,MPICOMP,SEQ,SEQ1,NXT,LNGTH,LNGTH1,LNGTH2,MSG
"RTN","MPIVTQF",50,0)
 S MPICOMP=$E(HL("ECH"),1),MPIREP=$E(HL("ECH"),2)
"RTN","MPIVTQF",51,0)
 S SEQ1=1,SEQ=0,X=0 F  S X=$O(RDF(X)) Q:'X  S LNGTH=$L(RDF(X),HL("FS")) D
"RTN","MPIVTQF",52,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","MPIVTQF",53,0)
 .. S NXT=$P(RDF(X),HL("FS"),Y) D
"RTN","MPIVTQF",54,0)
 ... I $L($G(MSG(SEQ)))=245 D  Q
"RTN","MPIVTQF",55,0)
 .... I $L(NXT_$G(MSG(SEQ,SEQ1)))>245 S LNGTH1=$L(MSG(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,MSG(SEQ,SEQ1)=$G(MSG(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","MPIVTQF",56,0)
 .... I $L(NXT_$G(MSG(SEQ,SEQ1)))'>245 S MSG(SEQ,SEQ1)=$G(MSG(SEQ,SEQ1))_NXT
"RTN","MPIVTQF",57,0)
 ... I $L(NXT_$G(MSG(SEQ)))>245 S LNGTH1=$L($G(MSG(SEQ))) S LNGTH2=245-LNGTH1,MSG(SEQ)=$G(MSG(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S MSG(SEQ,SEQ1)=NXT
"RTN","MPIVTQF",58,0)
 ... I $L(NXT_$G(MSG(SEQ)))'>245 S MSG(SEQ)=$G(MSG(SEQ))_NXT Q
"RTN","MPIVTQF",59,0)
RDFLOOP ;loop through RDF sequence 2
"RTN","MPIVTQF",60,0)
 N LAST,SEQ,LASTVAL,REP,TMPMSG,CASEVAL,REPCNT
"RTN","MPIVTQF",61,0)
 ;set last repeater in this first array
"RTN","MPIVTQF",62,0)
 I $D(MSG(2)) N LAST S SEQ=1 S LAST=$L(MSG(2),MPIREP) D
"RTN","MPIVTQF",63,0)
 .N X F REPCNT=1:1:LAST-1 S TMPMSG(2,REPCNT)=$P(MSG(2),MPIREP,REPCNT)
"RTN","MPIVTQF",64,0)
 I '$D(MSG(2,SEQ)) I $P(MSG(2),MPIREP,LAST)'="" S TMPMSG(2,LAST)=$P($P(MSG(2),MPIREP,LAST),MPICOMP)
"RTN","MPIVTQF",65,0)
 I $D(MSG(2,SEQ)) S LASTVAL=$P(MSG(2),MPIREP,LAST),REPCNT=LAST F  Q:'$D(MSG(2,SEQ))  S LAST=$L(MSG(2,SEQ),MPIREP) D
"RTN","MPIVTQF",66,0)
 .;set last repeater in this array
"RTN","MPIVTQF",67,0)
 .N REP F REP=1:1:LAST-1 D
"RTN","MPIVTQF",68,0)
 ..I '$D(MSG(2,SEQ)) I $P(MSG(2),MPIREP,LAST)'="" S TMPMSG(2,LAST)=$P($P(MSG(2),MPIREP,LAST),MPICOMP)
"RTN","MPIVTQF",69,0)
 ..S TMPMSG(2,REPCNT)=$S($D(LASTVAL):LASTVAL,1:"")_$P(MSG(2,SEQ),MPIREP,REP) K LASTVAL S REPCNT=REPCNT+1
"RTN","MPIVTQF",70,0)
 .I $D(MSG(2,SEQ)) S LASTVAL=$P(MSG(2,SEQ),MPIREP,LAST)
"RTN","MPIVTQF",71,0)
 .S SEQ=SEQ+1
"RTN","MPIVTQF",72,0)
 .I '$D(MSG(2,SEQ)) I $P(MSG(2,SEQ-1),MPIREP,LAST)'="" S TMPMSG(2,REPCNT)=$P(MSG(2,SEQ-1),MPIREP,LAST)
"RTN","MPIVTQF",73,0)
 K MSG(2) M MSG(2)=TMPMSG(2) K TMPMSG(2)
"RTN","MPIVTQF",74,0)
 S MPIX=MSG(1),AL=0
"RTN","MPIVTQF",75,0)
 F C=1:1:MPIX S CAP=MSG(2,C) Q:CAP=""  D  Q:$D(POP)
"RTN","MPIVTQF",76,0)
 .I CAP["@00112"&(AL=0) D ALIAS(EN,.TRD) S AL=1 D BLDOUT(HL("FS")_TRD,.FCNT) Q
"RTN","MPIVTQF",77,0)
 .I CAP["@00112"&(AL>0) Q
"RTN","MPIVTQF",78,0)
 .I CAP["CASE#" S CASE=$$CASE(EN) S CASEVAL=HL("FS")_$S($P(CASE,"^")'="":$P(CASE,"^")_"/"_$P(CASE,"^",2)_"/"_$P(CASE,"^",3),1:"") D BLDOUT(CASEVAL,.FCNT) Q
"RTN","MPIVTQF",79,0)
 .S FLD=$$MPIVTQF($P(CAP,MPICOMPS)) I FLD="" S POP="bad field name in RDF" Q
"RTN","MPIVTQF",80,0)
 .S A=$P(FLD,";") G GETVAL:A'=""
"RTN","MPIVTQF",81,0)
 .S FILL="",TFC=0
"RTN","MPIVTQF",82,0)
 .;move to next sequence
"RTN","MPIVTQF",83,0)
 .I CAP["@00169" D BLDOUT(HL("FS"),.FCNT)
"RTN","MPIVTQF",84,0)
 .F  D  I '$O(^MPI(985.5,"AM",EN,A)) Q
"RTN","MPIVTQF",85,0)
 ..N MPIDLT,MPIER,MPITF
"RTN","MPIVTQF",86,0)
 ..S A=$O(^MPI(985.5,"AM",EN,A))
"RTN","MPIVTQF",87,0)
 ..S MPITF=$G(^MPI(985.5,+$O(^MPI(985.5,"AM",EN,+A,0)),2)) S MPIDLT=$$HLDATE^HLFNC($P(MPITF,"^",5)),MPIER=$P(MPITF,"^",6)
"RTN","MPIVTQF",88,0)
 ..;add date last treated and event reason
"RTN","MPIVTQF",89,0)
 ..S FILLVALU=$P($$NS^XUAF4(+A),U,2)_MPICOMP_MPIDLT_MPICOMP_MPIER_MPIREPS
"RTN","MPIVTQF",90,0)
 ..;S FILLVALU=$P($$NS^XUAF4(+A),U,2)_MPIREPS
"RTN","MPIVTQF",91,0)
 ..D BLDOUT(FILLVALU,.FCNT)
"RTN","MPIVTQF",92,0)
GETVAL .Q:A=""
"RTN","MPIVTQF",93,0)
 .S A=$P($G(^MPIVET(EN,A)),U,$P(FLD,";",2))
"RTN","MPIVTQF",94,0)
 .S TYPE=$P(FLD,";",4) I TYPE="D" S A=$$HLDATE^HLFNC(A,$P(CAP,MPICOMPS,2))
"RTN","MPIVTQF",95,0)
 .I TYPE="P" N ZZ S ZZ=$P(FLD,";",5),A=$S(ZZ="^DIC(4,":$P($$NS^XUAF4(A),U,2),1:$P($G(^DIC(5,+A,0)),U,2)) ;**RWF** fixed CLOSEP error **16
"RTN","MPIVTQF",96,0)
CC .I CAP'["@00169" D BLDOUT(HL("FS")_$E(A,1,$P(CAP,MPICOMPS,3)),.FCNT)
"RTN","MPIVTQF",97,0)
 .Q
"RTN","MPIVTQF",98,0)
 Q
"RTN","MPIVTQF",99,0)
BLDOUT(FILLVALU,FCNT) ;
"RTN","MPIVTQF",100,0)
 N XLEN,TOTLEN,NEXT
"RTN","MPIVTQF",101,0)
 S NEXT=0
"RTN","MPIVTQF",102,0)
 S TOTLEN=$L($G(@OUT@(FCNT)))+$L(FILLVALU)
"RTN","MPIVTQF",103,0)
 I TOTLEN'>245 S @OUT@(FCNT)=$G(@OUT@(FCNT))_FILLVALU Q
"RTN","MPIVTQF",104,0)
 I TOTLEN>245 D
"RTN","MPIVTQF",105,0)
 . S XLEN=245-$L($G(@OUT@(FCNT)))
"RTN","MPIVTQF",106,0)
 . S @OUT@(FCNT)=$G(@OUT@(FCNT))_$E(FILLVALU,1,XLEN),FCNT=FCNT+1
"RTN","MPIVTQF",107,0)
 . S @OUT@(FCNT)=$E(FILLVALU,XLEN+1,245)
"RTN","MPIVTQF",108,0)
 Q
"RTN","MPIVTQF",109,0)
 ;
"RTN","MPIVTQF",110,0)
CASE(ICNN) ;
"RTN","MPIVTQF",111,0)
 N CASEI,STATUS,CASE,NOIS,USER,UNAME
"RTN","MPIVTQF",112,0)
 S (CASEI,STATUS,CASE,NOIS,USER,UNAME)=""
"RTN","MPIVTQF",113,0)
 I '$D(^MPI(985.2,"ICN",ICNN)) Q "^^"
"RTN","MPIVTQF",114,0)
 S CASEI=0
"RTN","MPIVTQF",115,0)
 F  S CASEI=$O(^MPI(985.2,"ICN",ICNN,CASEI)) Q:CASEI=""  D
"RTN","MPIVTQF",116,0)
 .S STATUS=$P($G(^MPI(985.2,CASEI,0)),"^",3)
"RTN","MPIVTQF",117,0)
 .I STATUS="O" D
"RTN","MPIVTQF",118,0)
 ..S CASE=$P(^MPI(985.2,CASEI,0),"^"),NOIS=$P(^MPI(985.2,CASEI,0),"^",6)
"RTN","MPIVTQF",119,0)
 ..S USER=$P($G(^MPI(985.2,CASEI,0)),"^",2),UNAME=$$GET1^DIQ(200,USER_",",.01)
"RTN","MPIVTQF",120,0)
 Q CASE_"^"_NOIS_"^"_UNAME
"RTN","MPIVTQF",121,0)
ALIAS(EN,TDR) ; get all Alias's for this patient (EN)
"RTN","MPIVTQF",122,0)
 S TDR=""
"RTN","MPIVTQF",123,0)
 Q:'$D(^MPIVET(EN))
"RTN","MPIVTQF",124,0)
 Q:'$D(^MPIVET(EN,50))
"RTN","MPIVTQF",125,0)
 N FND,CNT,NAME S CNT=0,FND=0
"RTN","MPIVTQF",126,0)
 F  S CNT=$O(^MPIVET(EN,50,CNT)) Q:CNT=""  D
"RTN","MPIVTQF",127,0)
 .S NAME=$G(^MPIVET(EN,50,CNT,0))
"RTN","MPIVTQF",128,0)
 .Q:NAME=""
"RTN","MPIVTQF",129,0)
 .;S NAME=$TR(NAME,"^","~"),FND=FND+1
"RTN","MPIVTQF",130,0)
 .;I FND>1 S TDR=TDR_"/"
"RTN","MPIVTQF",131,0)
 .;S TDR=TDR_NAME
"RTN","MPIVTQF",132,0)
 .S TDR("LAST")=$G(TDR("LAST"))_$S($G(TDR("LAST"))'="":MPIREPS,1:"")_$P(NAME,"^")
"RTN","MPIVTQF",133,0)
 .S TDR("FIRST")=$G(TDR("FIRST"))_$S($G(TDR("FIRST"))'="":MPIREPS,1:"")_$P(NAME,"^",2)
"RTN","MPIVTQF",134,0)
 .S TDR("MIDDLE")=$G(TDR("MIDDLE"))_$S($G(TDR("MIDDLE"))'="":MPIREPS,1:"")_$P(NAME,"^",3)
"RTN","MPIVTQF",135,0)
 .S TDR("PREFIX")=$G(TDR("PREFIX"))_$S($G(TDR("PREFIX"))'="":MPIREPS,1:"")_$P(NAME,"^",4)
"RTN","MPIVTQF",136,0)
 .S TDR("SUFFIX")=$G(TDR("SUFFIX"))_$S($G(TDR("SUFFIX"))'="":MPIREPS,1:"")_$P(NAME,"^",5)
"RTN","MPIVTQF",137,0)
 I $D(TDR) D
"RTN","MPIVTQF",138,0)
 . I $D(TDR("LAST")) S FILLVALU=HL("FS")_TDR("LAST") D BLDOUT(FILLVALU,.FCNT)
"RTN","MPIVTQF",139,0)
 . I $D(TDR("FIRST")) S FILLVALU=HL("FS")_TDR("FIRST") D BLDOUT(FILLVALU,.FCNT)
"RTN","MPIVTQF",140,0)
 . I $D(TDR("MIDDLE")) S FILLVALU=HL("FS")_TDR("MIDDLE") D BLDOUT(FILLVALU,.FCNT)
"RTN","MPIVTQF",141,0)
 . I $D(TDR("SUFFIX")) S FILLVALU=HL("FS")_TDR("SUFFIX") D BLDOUT(FILLVALU,.FCNT)
"RTN","MPIVTQF",142,0)
 . I $D(TDR("PREFIX")) S FILLVALU=HL("FS")_TDR("PREFIX") D BLDOUT(FILLVALU,.FCNT)
"RTN","MPIVTQF",143,0)
 Q
"RTN","MPIXCW")
0^208^B22075421
"RTN","MPIXCW",1,0)
MPIXCW ;BIR/CML-Detailed Caseworker Resolved Exception Report ;7/9/02
"RTN","MPIXCW",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**17**;30 Apr 99
"RTN","MPIXCW",3,0)
 ;
"RTN","MPIXCW",4,0)
 W !!,"This option will display a detailed report of exceptions RESOLVED"
"RTN","MPIXCW",5,0)
 W !,"by selected user(s) during a selected date range.",!
"RTN","MPIXCW",6,0)
 ;
"RTN","MPIXCW",7,0)
ASK ;Ask for Date Range
"RTN","MPIXCW",8,0)
 W !!,"Enter date range for data to be included in report.",!
"RTN","MPIXCW",9,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIXCW",10,0)
 S DIR(0)="DAO^:"_$$NOW^XLFDT_":EPXT",DIR("A")="Beginning Date for Report:  "
"RTN","MPIXCW",11,0)
 D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIXCW",12,0)
 S RGBDT=Y
"RTN","MPIXCW",13,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIXCW",14,0)
 S DIR(0)="DAO^"_RGBDT_":"_$$NOW^XLFDT_":EPXT",DIR("A")="Ending Date for Report: "
"RTN","MPIXCW",15,0)
 S DIR("B")=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)) D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIXCW",16,0)
 S RGEDT=Y
"RTN","MPIXCW",17,0)
 ;
"RTN","MPIXCW",18,0)
 S BEGDT=$S($L(RGBDT)=7:$$FMADD^XLFDT(RGBDT,-1)_.24,1:RGBDT-.0001)
"RTN","MPIXCW",19,0)
 S STOPDT=$S($L(RGEDT)=7:RGEDT_.24,1:RGEDT)
"RTN","MPIXCW",20,0)
 S SBDT=$$FMADD^XLFDT($E(RGBDT,1,7),-1),SEDT=$E(RGEDT,1,7)
"RTN","MPIXCW",21,0)
 S SBDT=$$FMADD^XLFDT($E(RGBDT,1,7),-1),SEDT=$E(RGEDT,1,7)
"RTN","MPIXCW",22,0)
 ;
"RTN","MPIXCW",23,0)
 ;Ask for caseworker
"RTN","MPIXCW",24,0)
 D SELCW I '$D(CWARR) G QUIT
"RTN","MPIXCW",25,0)
 ;
"RTN","MPIXCW",26,0)
COMP ;compile data
"RTN","MPIXCW",27,0)
 K ^XTMP("MPIXCW",$J)
"RTN","MPIXCW",28,0)
 S (ECNT,CWCNT)=0
"RTN","MPIXCW",29,0)
 F  S CWCNT=$O(CWARR(CWCNT)) Q:'CWCNT  D
"RTN","MPIXCW",30,0)
 .S CW=$P(CWARR(CWCNT),"^"),CWNM=$P(CWARR(CWCNT),"^",2)
"RTN","MPIXCW",31,0)
 .S DTLP=SBDT F  S DTLP=$O(^MPI(985.9,"AF",CW,DTLP)) Q:'DTLP  Q:DTLP>SEDT  D
"RTN","MPIXCW",32,0)
 ..S IEN=0 F  S IEN=$O(^MPI(985.9,"AF",CW,DTLP,IEN)) Q:'IEN  D
"RTN","MPIXCW",33,0)
 ...S RESDT=$E($P($G(^MPI(985.9,IEN,0)),"^",9),1,12)
"RTN","MPIXCW",34,0)
 ...I RESDT>BEGDT&(RESDT<STOPDT) S ^XTMP("MPIXCW",$J,CWNM,IEN)=""
"RTN","MPIXCW",35,0)
 ;
"RTN","MPIXCW",36,0)
PRT ;Print data
"RTN","MPIXCW",37,0)
 S HBDT=$$FMTE^XLFDT(RGBDT),HEDT=$$FMTE^XLFDT(RGEDT)
"RTN","MPIXCW",38,0)
 S $P(LN,"=",81)="",$P(LN2,"-",81)=""
"RTN","MPIXCW",39,0)
 W @IOF,!,"Caseworker Exception Report for ",HBDT," to ",HEDT
"RTN","MPIXCW",40,0)
 W !,"Printed: ",$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)),!,LN
"RTN","MPIXCW",41,0)
 ;
"RTN","MPIXCW",42,0)
 I '$D(^XTMP("MPIXCW",$J)) W !!,"No data found for that date range." G QUIT
"RTN","MPIXCW",43,0)
 ;
"RTN","MPIXCW",44,0)
 S CW="",CNT=0 F  S CW=$O(^XTMP("MPIXCW",$J,CW)) Q:CW=""  D
"RTN","MPIXCW",45,0)
 .S CNT=CNT+1 I CNT>1 W !,LN2
"RTN","MPIXCW",46,0)
 .W !!!,"  << Caseworker: ",CW," >>"
"RTN","MPIXCW",47,0)
 .S IEN=0 F  S IEN=$O(^XTMP("MPIXCW",$J,CW,IEN)) Q:'IEN  D
"RTN","MPIXCW",48,0)
 ..D SET
"RTN","MPIXCW",49,0)
 ..W !!,LN2
"RTN","MPIXCW",50,0)
 ..W !,"Tracking Number: ",IEN,?46,"Date Received : ",DTREC
"RTN","MPIXCW",51,0)
 ..W !,"Status         : ",STATUS,?46,"Date Resolved : ",DTRES
"RTN","MPIXCW",52,0)
 ..W !,"Site Rec'd From: ",SITEFROM,?46,"HL7 Message ID: ",MSGID
"RTN","MPIXCW",53,0)
 ..W !!,"Patient Name: ",PTNM,?46,"SSN: ",PTSSN
"RTN","MPIXCW",54,0)
 ..W !,"CMOR        : ",CMOR,?46,"ICN: ",ICN
"RTN","MPIXCW",55,0)
 ..W !!,"Exception Text:",!,EXCTXT
"RTN","MPIXCW",56,0)
 ..W !!,"Processing Notes:"
"RTN","MPIXCW",57,0)
 ..S TXT=0 F  S TXT=$O(^MPI(985.9,IEN,4,TXT)) Q:'TXT  D
"RTN","MPIXCW",58,0)
 ...W !,^MPI(985.9,IEN,4,TXT,0)
"RTN","MPIXCW",59,0)
 ;
"RTN","MPIXCW",60,0)
 W !! S DIR(0)="E" D ^DIR K DIR
"RTN","MPIXCW",61,0)
 ;
"RTN","MPIXCW",62,0)
QUIT ;
"RTN","MPIXCW",63,0)
 K BEGDT,CMOR,CNT,CW,CWARR,CWARR1,CWCNT,CWNM,DIR,DIRUT,DTLP,DTOUT,DTRES,DTREC,DUOUT,ECNT,EXCTXT,GOT
"RTN","MPIXCW",64,0)
 K HBDT,HEDT,I,ICN,IEN,LN,LN2,MSGID,PTNM,PTSSN,RESDT,RGBDT,RGEDT,SBDT,SEDT,SITEFROM,STATUS,STOPDT,TXT,Y
"RTN","MPIXCW",65,0)
 Q
"RTN","MPIXCW",66,0)
 ;
"RTN","MPIXCW",67,0)
SELCW ;Allow the user to select caseworker from a list
"RTN","MPIXCW",68,0)
 K CWARR1,CWARR
"RTN","MPIXCW",69,0)
 S CW=.5 F  S CW=$O(^MPI(985.9,"AF",CW)) Q:'CW  D
"RTN","MPIXCW",70,0)
 .S DTLP=SBDT,GOT=0 F  S DTLP=$O(^MPI(985.9,"AF",CW,DTLP)) Q:'DTLP  Q:DTLP>SEDT  Q:GOT  D
"RTN","MPIXCW",71,0)
 ..S IEN=0 F  S IEN=$O(^MPI(985.9,"AF",CW,DTLP,IEN)) Q:'IEN  D  Q:GOT
"RTN","MPIXCW",72,0)
 ...S RESDT=$E($P($G(^MPI(985.9,IEN,0)),"^",9),1,12)
"RTN","MPIXCW",73,0)
 ...I RESDT>BEGDT&(RESDT<STOPDT) S GOT=1
"RTN","MPIXCW",74,0)
 .I GOT S CWARR1($$GET1^DIQ(200,+CW_",",.01))=CW
"RTN","MPIXCW",75,0)
 ;
"RTN","MPIXCW",76,0)
 S CNT=0
"RTN","MPIXCW",77,0)
 S I="" F  S I=$O(CWARR1(I)) Q:I=""  D
"RTN","MPIXCW",78,0)
 .S CNT=CNT+1,CWARR(CNT)=CWARR1(I)_"^"_I
"RTN","MPIXCW",79,0)
 I CNT=0 W !,"No data is available for that timeframe." Q
"RTN","MPIXCW",80,0)
 ;
"RTN","MPIXCW",81,0)
 W !
"RTN","MPIXCW",82,0)
 K DIR,Y
"RTN","MPIXCW",83,0)
 I CNT>1 S CNT=CNT+1,CWARR(CNT)="^ALL"
"RTN","MPIXCW",84,0)
 S DIR(0)="LA^1:"_CNT
"RTN","MPIXCW",85,0)
 I CNT=1 S DIR("A")="Select caseworker: "
"RTN","MPIXCW",86,0)
 I CNT>1 S DIR("A")="Select caseworker(s) 1-"_(CNT-1)_" or "_CNT_" for ALL: "
"RTN","MPIXCW",87,0)
 S DIR("B")=CNT
"RTN","MPIXCW",88,0)
 ;
"RTN","MPIXCW",89,0)
 W !!,"Data is available for the following caseworker(s)"
"RTN","MPIXCW",90,0)
 W $S(CNT=1:":",1:", select one or more:")
"RTN","MPIXCW",91,0)
 S I=0 F  S I=$O(CWARR(I)) Q:'I  W !,$J(I,2),". ",$P(CWARR(I),"^",2)
"RTN","MPIXCW",92,0)
 W !
"RTN","MPIXCW",93,0)
 ;
"RTN","MPIXCW",94,0)
 D ^DIR K DIR
"RTN","MPIXCW",95,0)
 I Y="^"!(Y<1) K CW,CWARR,CWARR1,I,CNT Q
"RTN","MPIXCW",96,0)
 S Y=","_Y
"RTN","MPIXCW",97,0)
 I Y[(","_CNT_","),CNT>1 K CWARR(CNT),CWARR1,CNT,I Q
"RTN","MPIXCW",98,0)
 S I=0 F  S I=$O(CWARR(I)) Q:'I  I Y'[(","_I_",") K CWARR(I)
"RTN","MPIXCW",99,0)
 K CW,CWARR1,I,CNT
"RTN","MPIXCW",100,0)
 Q
"RTN","MPIXCW",101,0)
 ;
"RTN","MPIXCW",102,0)
SET ;
"RTN","MPIXCW",103,0)
 S DTREC=$$GET1^DIQ(985.9,IEN_",",.01,"E") I $L(DTREC)>18 S DTREC=$E(DTREC,1,18)
"RTN","MPIXCW",104,0)
 S DTRES=$$GET1^DIQ(985.9,IEN_",",.09,"E") I $L(DTRES)>18 S DTRES=$E(DTRES,1,18)
"RTN","MPIXCW",105,0)
 S STATUS=$$GET1^DIQ(985.9,IEN_",",.06)
"RTN","MPIXCW",106,0)
 S SITEFROM=$E($$WHAT^XUAF4($$LKUP^XUAF4($$GET1^DIQ(985.9,IEN_",",.04)),.01),1,27)
"RTN","MPIXCW",107,0)
 S EXCTXT=$$GET1^DIQ(985.9,IEN_",",1)
"RTN","MPIXCW",108,0)
 S ICN=$$GET1^DIQ(985.9,IEN_",",2.01)
"RTN","MPIXCW",109,0)
 S PTNM=$$GET1^DIQ(985.9,IEN_",",2.02)
"RTN","MPIXCW",110,0)
 S PTSSN=$$GET1^DIQ(985.9,IEN_",",2.03)
"RTN","MPIXCW",111,0)
 S CMOR=$$WHAT^XUAF4($$LKUP^XUAF4($$GET1^DIQ(985.9,IEN_",",2.04)),.01)
"RTN","MPIXCW",112,0)
 S MSGID=$$GET1^DIQ(985.9,IEN_",",3.01)
"RTN","MPIXCW",113,0)
 Q
"RTN","MPIXDD")
0^209^B13863697
"RTN","MPIXDD",1,0)
MPIXDD ;ALB/CJM,CML - FUNCTIONS FOUND IN THE DD FOR THE MPI SERVER EXCEPTION FILE ;08/27/99
"RTN","MPIXDD",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**5,17,27**;30 Apr 1999
"RTN","MPIXDD",3,0)
 ;
"RTN","MPIXDD",4,0)
SETAC(IEN) ;
"RTN","MPIXDD",5,0)
 ;Description: logic to set the AC cross-reference
"RTN","MPIXDD",6,0)
 N DATE,PERSON,STATUS,NODE
"RTN","MPIXDD",7,0)
 S NODE=$G(^MPI(985.9,IEN,0))
"RTN","MPIXDD",8,0)
 S DATE=$P(NODE,"^")\1
"RTN","MPIXDD",9,0)
 Q:'DATE
"RTN","MPIXDD",10,0)
 S STATUS=$P(NODE,"^",6)
"RTN","MPIXDD",11,0)
 Q:'STATUS
"RTN","MPIXDD",12,0)
 S PERSON=$P(NODE,"^",7)
"RTN","MPIXDD",13,0)
 Q:'PERSON
"RTN","MPIXDD",14,0)
 S ^MPI(985.9,"AC",PERSON,STATUS,DATE,IEN)=""
"RTN","MPIXDD",15,0)
 Q
"RTN","MPIXDD",16,0)
KILLAC(IEN,PERSON) ;
"RTN","MPIXDD",17,0)
 ;Description: kill logic for the AC cross-reference
"RTN","MPIXDD",18,0)
 ;
"RTN","MPIXDD",19,0)
 N DATE,STATUS,NODE
"RTN","MPIXDD",20,0)
 S NODE=$G(^MPI(985.9,IEN,0))
"RTN","MPIXDD",21,0)
 S DATE=$P(NODE,"^")\1
"RTN","MPIXDD",22,0)
 Q:'DATE
"RTN","MPIXDD",23,0)
 S STATUS=$P(NODE,"^",6)
"RTN","MPIXDD",24,0)
 Q:'STATUS
"RTN","MPIXDD",25,0)
 K ^MPI(985.9,"AC",PERSON,STATUS,DATE,IEN)
"RTN","MPIXDD",26,0)
 Q
"RTN","MPIXDD",27,0)
KILLAC1(IEN,X) ;
"RTN","MPIXDD",28,0)
 ;Description: kill logic for the AC1 cross-reference
"RTN","MPIXDD",29,0)
 N DATE,PERSON,STATUS,NODE
"RTN","MPIXDD",30,0)
 S NODE=$G(^MPI(985.9,IEN,0))
"RTN","MPIXDD",31,0)
 S DATE=X\1
"RTN","MPIXDD",32,0)
 Q:'DATE
"RTN","MPIXDD",33,0)
 S PERSON=$P(NODE,"^",7)
"RTN","MPIXDD",34,0)
 Q:'PERSON
"RTN","MPIXDD",35,0)
 S STATUS=$P(NODE,"^",6)
"RTN","MPIXDD",36,0)
 Q:'STATUS
"RTN","MPIXDD",37,0)
 K ^MPI(985.9,"AC",PERSON,STATUS,DATE,IEN)
"RTN","MPIXDD",38,0)
 Q
"RTN","MPIXDD",39,0)
KILLAC2(IEN,STATUS) ;
"RTN","MPIXDD",40,0)
 ;Description: kill logic for the AC2 cross-reference
"RTN","MPIXDD",41,0)
 ;
"RTN","MPIXDD",42,0)
 N DATE,PERSON,NODE
"RTN","MPIXDD",43,0)
 S NODE=$G(^MPI(985.9,IEN,0))
"RTN","MPIXDD",44,0)
 S DATE=$P(NODE,"^")\1
"RTN","MPIXDD",45,0)
 Q:'DATE
"RTN","MPIXDD",46,0)
 S PERSON=$P(NODE,"^",7)
"RTN","MPIXDD",47,0)
 Q:'PERSON
"RTN","MPIXDD",48,0)
 K ^MPI(985.9,"AC",PERSON,STATUS,DATE,IEN)
"RTN","MPIXDD",49,0)
 Q
"RTN","MPIXDD",50,0)
 ;
"RTN","MPIXDD",51,0)
 ;
"RTN","MPIXDD",52,0)
SETAE(IEN) ;
"RTN","MPIXDD",53,0)
 ;Description: logic to set the AE cross-reference
"RTN","MPIXDD",54,0)
 ;Input:
"RTN","MPIXDD",55,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",56,0)
 ;Output: none
"RTN","MPIXDD",57,0)
 ;
"RTN","MPIXDD",58,0)
 N ICN,STATUS
"RTN","MPIXDD",59,0)
 S STATUS=$P($G(^MPI(985.9,IEN,0)),"^",6)
"RTN","MPIXDD",60,0)
 Q:'STATUS
"RTN","MPIXDD",61,0)
 S ICN=$P($G(^MPI(985.9,IEN,2)),"^")
"RTN","MPIXDD",62,0)
 Q:'$L(ICN)
"RTN","MPIXDD",63,0)
 S ^MPI(985.9,"AE",ICN,STATUS,IEN)=""
"RTN","MPIXDD",64,0)
 Q
"RTN","MPIXDD",65,0)
KILLAE(IEN,ICN) ;
"RTN","MPIXDD",66,0)
 ;Description: kill logic for the AE cross-reference
"RTN","MPIXDD",67,0)
 ;Input:
"RTN","MPIXDD",68,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",69,0)
 ;  ICN - the old ICN
"RTN","MPIXDD",70,0)
 ;Output: none
"RTN","MPIXDD",71,0)
 ;
"RTN","MPIXDD",72,0)
 N STATUS
"RTN","MPIXDD",73,0)
 S STATUS=$P($G(^MPI(985.9,IEN,0)),"^",6)
"RTN","MPIXDD",74,0)
 Q:'STATUS
"RTN","MPIXDD",75,0)
 K ^MPI(985.9,"AE",ICN,STATUS,IEN)
"RTN","MPIXDD",76,0)
 Q
"RTN","MPIXDD",77,0)
 ;
"RTN","MPIXDD",78,0)
SETICN(IEN) ;
"RTN","MPIXDD",79,0)
 ;Description: logic to set the ICN cross-reference
"RTN","MPIXDD",80,0)
 ;Input:
"RTN","MPIXDD",81,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",82,0)
 ;Output: none
"RTN","MPIXDD",83,0)
 ;Kill logic in DD: K ^MPI(985.9,"ICN",$E(X,1,30),DA)
"RTN","MPIXDD",84,0)
 N ICN
"RTN","MPIXDD",85,0)
 S ICN=$P($G(^MPI(985.9,IEN,2)),"^")
"RTN","MPIXDD",86,0)
 Q:'$L(ICN)
"RTN","MPIXDD",87,0)
 S ^MPI(985.9,"ICN",ICN,IEN)=""
"RTN","MPIXDD",88,0)
 Q
"RTN","MPIXDD",89,0)
 ;
"RTN","MPIXDD",90,0)
SETSSN(IEN) ;
"RTN","MPIXDD",91,0)
 ;Description: logic to set the SSN cross-reference
"RTN","MPIXDD",92,0)
 ;Input:
"RTN","MPIXDD",93,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",94,0)
 ;Output: none
"RTN","MPIXDD",95,0)
 ;Kill logic in DD: K ^MPI(985.9,"SSN",$E(X,1,30),DA)
"RTN","MPIXDD",96,0)
 N SSN
"RTN","MPIXDD",97,0)
 S SSN=$P($G(^MPI(985.9,IEN,2)),"^",3)
"RTN","MPIXDD",98,0)
 Q:'$L(SSN)
"RTN","MPIXDD",99,0)
 S ^MPI(985.9,"SSN",SSN,IEN)=""
"RTN","MPIXDD",100,0)
 Q
"RTN","MPIXDD",101,0)
 ;
"RTN","MPIXDD",102,0)
KILLAE1(IEN,STATUS) ;
"RTN","MPIXDD",103,0)
 ;Description: kill logic for the AE1 cross-reference
"RTN","MPIXDD",104,0)
 ;Input:
"RTN","MPIXDD",105,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",106,0)
 ;  Status - the old status
"RTN","MPIXDD",107,0)
 ;Output: none
"RTN","MPIXDD",108,0)
 ;
"RTN","MPIXDD",109,0)
 ;
"RTN","MPIXDD",110,0)
 N ICN
"RTN","MPIXDD",111,0)
 S ICN=$P($G(^MPI(985.9,IEN,2)),"^")
"RTN","MPIXDD",112,0)
 Q:'ICN
"RTN","MPIXDD",113,0)
 K ^MPI(985.9,"AE",ICN,STATUS,IEN)
"RTN","MPIXDD",114,0)
 Q
"RTN","MPIXDD",115,0)
 ;
"RTN","MPIXDD",116,0)
SETAF(IEN) ;
"RTN","MPIXDD",117,0)
 ;Description: logic to set the AF cross-reference, file 985.9
"RTN","MPIXDD",118,0)
 ;Input:
"RTN","MPIXDD",119,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",120,0)
 ;Output: none
"RTN","MPIXDD",121,0)
 ;
"RTN","MPIXDD",122,0)
 N WORKER,DATE,NODE
"RTN","MPIXDD",123,0)
 S NODE=$G(^MPI(985.9,IEN,0))
"RTN","MPIXDD",124,0)
 S WORKER=$P(NODE,"^",7)
"RTN","MPIXDD",125,0)
 Q:'WORKER
"RTN","MPIXDD",126,0)
 S DATE=$P(NODE,"^",9)\1
"RTN","MPIXDD",127,0)
 Q:'DATE
"RTN","MPIXDD",128,0)
 S ^MPI(985.9,"AF",WORKER,DATE,IEN)=""
"RTN","MPIXDD",129,0)
 Q
"RTN","MPIXDD",130,0)
KILLAF(IEN,WORKER) ;
"RTN","MPIXDD",131,0)
 ;Description: kill logic for the AE cross-reference
"RTN","MPIXDD",132,0)
 ;Input:
"RTN","MPIXDD",133,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",134,0)
 ;  WORKER - the old case worker
"RTN","MPIXDD",135,0)
 ;Output: none
"RTN","MPIXDD",136,0)
 ;
"RTN","MPIXDD",137,0)
 N DATE
"RTN","MPIXDD",138,0)
 S DATE=$P($G(^MPI(985.9,IEN,0)),"^",9)\1
"RTN","MPIXDD",139,0)
 Q:'DATE
"RTN","MPIXDD",140,0)
 K ^MPI(985.9,"AF",WORKER,DATE,IEN)
"RTN","MPIXDD",141,0)
 Q
"RTN","MPIXDD",142,0)
 ;
"RTN","MPIXDD",143,0)
KILLAF1(IEN,DATE) ;
"RTN","MPIXDD",144,0)
 ;Description: kill logic for the AF1 cross-reference
"RTN","MPIXDD",145,0)
 ;Input:
"RTN","MPIXDD",146,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",147,0)
 ;  DATE - the old Date/Time Resolved
"RTN","MPIXDD",148,0)
 ;Output: none
"RTN","MPIXDD",149,0)
 ;
"RTN","MPIXDD",150,0)
 ;
"RTN","MPIXDD",151,0)
 S DATE=DATE\1
"RTN","MPIXDD",152,0)
 Q:'$G(DATE)
"RTN","MPIXDD",153,0)
 ;
"RTN","MPIXDD",154,0)
 N WORKER
"RTN","MPIXDD",155,0)
 S WORKER=$P($G(^MPI(985.9,IEN,2)),"^",7)
"RTN","MPIXDD",156,0)
 Q:'WORKER
"RTN","MPIXDD",157,0)
 K ^MPI(985.9,"AF",WORKER,DATE,IEN)
"RTN","MPIXDD",158,0)
 Q
"RTN","MPIXDD",159,0)
 ;
"RTN","MPIXDD",160,0)
SETAG(IEN) ;
"RTN","MPIXDD",161,0)
 ;Description: logic to set the AG cross-reference, file 985.9
"RTN","MPIXDD",162,0)
 ;Input:
"RTN","MPIXDD",163,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",164,0)
 ;Output: none
"RTN","MPIXDD",165,0)
 ;
"RTN","MPIXDD",166,0)
 N STATUS,DATE,NODE
"RTN","MPIXDD",167,0)
 S NODE=$G(^MPI(985.9,IEN,0))
"RTN","MPIXDD",168,0)
 S STATUS=$P(NODE,"^",6)
"RTN","MPIXDD",169,0)
 Q:'STATUS
"RTN","MPIXDD",170,0)
 S DATE=(+NODE)\1
"RTN","MPIXDD",171,0)
 Q:'DATE
"RTN","MPIXDD",172,0)
 S ^MPI(985.9,"AG",DATE,STATUS,IEN)=""
"RTN","MPIXDD",173,0)
 Q
"RTN","MPIXDD",174,0)
 ;
"RTN","MPIXDD",175,0)
KILLAG(IEN,DATE) ;
"RTN","MPIXDD",176,0)
 ;Description: kill logic for the AG cross-reference
"RTN","MPIXDD",177,0)
 ;Input:
"RTN","MPIXDD",178,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",179,0)
 ;  DATE - DATE/TIME RECEIVED
"RTN","MPIXDD",180,0)
 ;Output: none
"RTN","MPIXDD",181,0)
 ;
"RTN","MPIXDD",182,0)
 N STATUS
"RTN","MPIXDD",183,0)
 S STATUS=$P($G(^MPI(985.9,IEN,0)),"^",6)
"RTN","MPIXDD",184,0)
 S DATE=DATE\1
"RTN","MPIXDD",185,0)
 Q:'DATE
"RTN","MPIXDD",186,0)
 K ^MPI(985.9,"AG",DATE,STATUS,IEN)
"RTN","MPIXDD",187,0)
 Q
"RTN","MPIXDD",188,0)
 ;
"RTN","MPIXDD",189,0)
KILLAG1(IEN,STATUS) ;
"RTN","MPIXDD",190,0)
 ;Description: kill logic for the AG1 cross-reference
"RTN","MPIXDD",191,0)
 ;Input:
"RTN","MPIXDD",192,0)
 ;  IEN - internal entry number of the record, file 985.9
"RTN","MPIXDD",193,0)
 ;  STATUS - the STATUS field
"RTN","MPIXDD",194,0)
 ;Output: none
"RTN","MPIXDD",195,0)
 ;
"RTN","MPIXDD",196,0)
 ;
"RTN","MPIXDD",197,0)
 N DATE
"RTN","MPIXDD",198,0)
 S DATE=(+$G(^MPI(985.9,IEN,0)))\1
"RTN","MPIXDD",199,0)
 Q:'DATE
"RTN","MPIXDD",200,0)
 K ^MPI(985.9,"AG",DATE,STATUS,IEN)
"RTN","MPIXDD",201,0)
 Q
"RTN","MPIXEPT")
0^210^B58058953
"RTN","MPIXEPT",1,0)
MPIXEPT ;ALB/CML - Auto-resolution of Exceptions before entering the Exception Handler ;08/02/05
"RTN","MPIXEPT",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**27,30**;30 Apr 1999
"RTN","MPIXEPT",3,0)
 ;
"RTN","MPIXEPT",4,0)
EN1 ;call from the top to make all calls
"RTN","MPIXEPT",5,0)
 D NOW^%DTC
"RTN","MPIXEPT",6,0)
 S ^XTMP("RGMTEPT",0)=$$FMADD^XLFDT(DT,30)_"^"_%_"^MPI Exception Data"
"RTN","MPIXEPT",7,0)
 S LOGDT=%,NOTE(1)="This exception is being ignored."
"RTN","MPIXEPT",8,0)
 ;
"RTN","MPIXEPT",9,0)
DOD208 ;clear the exception type 208 for "0" in Date of Death
"RTN","MPIXEPT",10,0)
 D SET S CHKTYPE=208,CHKTXT="value '0' for field DATE OF DEATH",SUBTXT="ZERO FOR DATE OF DEATH"
"RTN","MPIXEPT",11,0)
 D LOOP
"RTN","MPIXEPT",12,0)
 W !!,"Checking for Type 208 (ZERO FOR DATE OF DEATH):  ",CNT," exception(s) cleared."
"RTN","MPIXEPT",13,0)
 D TOT
"RTN","MPIXEPT",14,0)
 ;
"RTN","MPIXEPT",15,0)
DOD234 ;clear the exception type 234 for "0" in Date of Death
"RTN","MPIXEPT",16,0)
 D SET S CHKTYPE=234,CHKTXT="value '0' for field DATE OF DEATH",SUBTXT="ZERO FOR DATE OF DEATH"
"RTN","MPIXEPT",17,0)
 D LOOP
"RTN","MPIXEPT",18,0)
 W !!,"Checking for Type 234 ('0' for field DATE OF DEATH):  ",CNT," exception(s) cleared."
"RTN","MPIXEPT",19,0)
 D TOT
"RTN","MPIXEPT",20,0)
 ;
"RTN","MPIXEPT",21,0)
ST208 ;clear the exception type 208 for STATE FILE problem
"RTN","MPIXEPT",22,0)
 D SET S CHKTYPE=208,CHKTXT="field PLACE OF BIRTH STATE",SUBTXT="STATE FILE PROBLEM"
"RTN","MPIXEPT",23,0)
 D LOOP
"RTN","MPIXEPT",24,0)
 W !!,"Checking for Type 208 (STATE file problem):  ",CNT," exception(s) cleared."
"RTN","MPIXEPT",25,0)
 D TOT
"RTN","MPIXEPT",26,0)
 ;
"RTN","MPIXEPT",27,0)
ST234 ;clear the exception type 234 for STATE FILE problem
"RTN","MPIXEPT",28,0)
 D SET S CHKTYPE=234,CHKTXT="field PLACE OF BIRTH STATE",SUBTXT="STATE FILE PROBLEM"
"RTN","MPIXEPT",29,0)
 D LOOP
"RTN","MPIXEPT",30,0)
 W !!,"Checking for Type 234 (STATE file problem):  ",CNT," exception(s) cleared."
"RTN","MPIXEPT",31,0)
 D TOT
"RTN","MPIXEPT",32,0)
 ;
"RTN","MPIXEPT",33,0)
PRE234 ;clear the exception type 234 for NAME PREFIX DD issue
"RTN","MPIXEPT",34,0)
 D SET S CHKTYPE=234,CHKTXT="field NAME PREFIX",SUBTXT="NAME PREFIX DD"
"RTN","MPIXEPT",35,0)
 D LOOP
"RTN","MPIXEPT",36,0)
 W !!,"Checking for Type 234 (NAME PREFIX DD issue):  ",CNT," exception(s) cleared."
"RTN","MPIXEPT",37,0)
 D TOT
"RTN","MPIXEPT",38,0)
 ;
"RTN","MPIXEPT",39,0)
PRE208 ;clear the exception type 208 for NAME PREFIX DD issue
"RTN","MPIXEPT",40,0)
 D SET S CHKTYPE=208,CHKTXT="field NAME PREFIX",SUBTXT="NAME PREFIX DD"
"RTN","MPIXEPT",41,0)
 D LOOP
"RTN","MPIXEPT",42,0)
 W !!,"Checking for Type 208 (NAME PREFIX DD issue):  ",CNT," exception(s) cleared."
"RTN","MPIXEPT",43,0)
 D TOT
"RTN","MPIXEPT",44,0)
 ;
"RTN","MPIXEPT",45,0)
CLM1 ;clear the exception invalid Claim Number for Exception TYPE 208
"RTN","MPIXEPT",46,0)
 D SET S CHKTYPE=208,CHKTXT="field CLAIM NUMBER",SUBTXT="INVALID CLAIM NUMBER"
"RTN","MPIXEPT",47,0)
 D LOOP
"RTN","MPIXEPT",48,0)
 W !!,"Checking for Type 208 (INVALID CLAIM NUMBER):  ",CNT," exception(s) cleared."
"RTN","MPIXEPT",49,0)
 D TOT
"RTN","MPIXEPT",50,0)
 ;
"RTN","MPIXEPT",51,0)
CLM2 ;clear the exception invalid Claim Number for Exception TYPE 234
"RTN","MPIXEPT",52,0)
 D SET S CHKTYPE=234,CHKTXT="field CLAIM NUMBER",SUBTXT="INVALID CLAIM NUMBER"
"RTN","MPIXEPT",53,0)
 D LOOP
"RTN","MPIXEPT",54,0)
 W !!,"Checking for Type 234 (INVALID CLAIM NUMBER):"
"RTN","MPIXEPT",55,0)
 D TOT
"RTN","MPIXEPT",56,0)
 ;
"RTN","MPIXEPT",57,0)
INFO1 ;clear the info-only exception "DOB imprecise & SSN null - TEMPORARY" for Exception TYPE 209
"RTN","MPIXEPT",58,0)
 D SET S CHKTYPE=209,CHKTXT="DOB imprecise & SSN null - TEMPORARY",SUBTXT="INFO ONLY_DOB and SSN NULL"
"RTN","MPIXEPT",59,0)
 D LOOP
"RTN","MPIXEPT",60,0)
 W !!,"Checking for Type 209 (INFO ONLY - DOB and SSN NULL):"
"RTN","MPIXEPT",61,0)
 D TOT
"RTN","MPIXEPT",62,0)
 ;
"RTN","MPIXEPT",63,0)
INFO2 ;clear the info-only exception "Date of birth equals null - TEMPORARY" for Exception TYPE 209
"RTN","MPIXEPT",64,0)
 D SET S CHKTYPE=209,CHKTXT="Date of birth equals null - TEMPORARY",SUBTXT="INFO ONLY_DOB NULL"
"RTN","MPIXEPT",65,0)
 D LOOP
"RTN","MPIXEPT",66,0)
 W !!,"Checking for Type 209 (INFO ONLY - DOB NULL):"
"RTN","MPIXEPT",67,0)
 D TOT
"RTN","MPIXEPT",68,0)
 ;
"RTN","MPIXEPT",69,0)
INFO3 ;clear the info-only exception "Gender equals null - TEMPORARY" for Exception TYPE 209
"RTN","MPIXEPT",70,0)
 D SET S CHKTYPE=209,CHKTXT="Gender equals null - TEMPORARY",SUBTXT="INFO ONLY_GENDER NULL"
"RTN","MPIXEPT",71,0)
 D LOOP
"RTN","MPIXEPT",72,0)
 W !!,"Checking for Type 209 (INFO ONLY - GENDER NULL):"
"RTN","MPIXEPT",73,0)
 D TOT
"RTN","MPIXEPT",74,0)
 ;
"RTN","MPIXEPT",75,0)
INFO4 ;clear the info-only exception "Leading Es for Name - TEMPORARY" for Exception TYPE 209
"RTN","MPIXEPT",76,0)
 D SET S CHKTYPE=209,CHKTXT="Leading Es for Name - TEMPORARY",SUBTXT="INFO ONLY_LEADING Es for NAME"
"RTN","MPIXEPT",77,0)
 D LOOP
"RTN","MPIXEPT",78,0)
 W !!,"Checking for Type 209 (INFO ONLY - LEADING Es for NAME):"
"RTN","MPIXEPT",79,0)
 D TOT
"RTN","MPIXEPT",80,0)
 ;
"RTN","MPIXEPT",81,0)
INFO5 ;clear the info-only exception "Inbound message is missing (DOB)" for Exception TYPE 234
"RTN","MPIXEPT",82,0)
 D SET S CHKTYPE=234,CHKTXT="Inbound message is missing (DOB)",SUBTXT="INFO ONLY_Inbound msg missing DOB"
"RTN","MPIXEPT",83,0)
 D LOOP
"RTN","MPIXEPT",84,0)
 W !!,"Checking for Type 234 (INFO ONLY - Inbound message is missing (DOB)):"
"RTN","MPIXEPT",85,0)
 D TOT
"RTN","MPIXEPT",86,0)
 ;
"RTN","MPIXEPT",87,0)
HDR1 ;clear the Unknown Logical link for HDR for Exception TYPE 224
"RTN","MPIXEPT",88,0)
 D SET S CHKTYPE=224,CHKTXT="Unknown Logical link for facility",SUBTXT="Unknown Logical link for Non-VAMC Site"
"RTN","MPIXEPT",89,0)
 D LOOP
"RTN","MPIXEPT",90,0)
 W !!,"Checking for Type 224 (Unknown Logical link for Non-VAMC Site):"
"RTN","MPIXEPT",91,0)
 D TOT
"RTN","MPIXEPT",92,0)
 ;
"RTN","MPIXEPT",93,0)
CLRDUP ;clear duplicate exceptions
"RTN","MPIXEPT",94,0)
 W !!,"Checking for duplicate exceptions..."
"RTN","MPIXEPT",95,0)
 ;
"RTN","MPIXEPT",96,0)
 K NOTE S CNT=0
"RTN","MPIXEPT",97,0)
 W !!?3,"Checking ""unassigned"" exceptions for duplicate exceptions for ICNs:"
"RTN","MPIXEPT",98,0)
 ;
"RTN","MPIXEPT",99,0)
 ;loop on "unassigned" exceptions
"RTN","MPIXEPT",100,0)
 K ICNARR S SUB="NOTID"
"RTN","MPIXEPT",101,0)
 S TRKDA=0 F  S TRKDA=$O(^MPI(985.9,"AD",1,TRKDA)) Q:'TRKDA  D
"RTN","MPIXEPT",102,0)
 .S NODE=$G(^MPI(985.9,TRKDA,0)) Q:NODE=""
"RTN","MPIXEPT",103,0)
 .S STAT=$P(NODE,"^",6) Q:STAT'=1
"RTN","MPIXEPT",104,0)
 .S TYPE=$P(NODE,"^",2) I TYPE=239!(TYPE=238) S SUB="ID"
"RTN","MPIXEPT",105,0)
 .S ICN=$P($G(^MPI(985.9,TRKDA,2)),"^") I +ICN S ICNARR(SUB,ICN,TRKDA)=""
"RTN","MPIXEPT",106,0)
 ;
"RTN","MPIXEPT",107,0)
NONID ;clear the identified exceptions for non ID exceptions
"RTN","MPIXEPT",108,0)
 W !?6,"Clearing NON ID Change or Test Pt duplicates..."
"RTN","MPIXEPT",109,0)
 S CLRCNT=0
"RTN","MPIXEPT",110,0)
 S ICN=0 F  S ICN=$O(ICNARR("NOTID",ICN)) Q:'ICN  D
"RTN","MPIXEPT",111,0)
 .S FIRST=$O(ICNARR("NOTID",ICN,0)) I $O(ICNARR("NOTID",ICN,FIRST)) D
"RTN","MPIXEPT",112,0)
 ..S TRKDA=FIRST F  S TRKDA=$O(ICNARR("NOTID",ICN,TRKDA)) Q:'TRKDA  D
"RTN","MPIXEPT",113,0)
 ...S NOTE(1)="Duplicate of Tracker #"_FIRST_"."
"RTN","MPIXEPT",114,0)
 ...D EDIT S CLRCNT=CLRCNT+1
"RTN","MPIXEPT",115,0)
 ...W !?6,"Clearing tracker #",TRKDA," - dup of tracker #",FIRST K ICNARR(ICN,TRKDA)
"RTN","MPIXEPT",116,0)
 W !?6,CLRCNT," duplicate exception(s) cleared."
"RTN","MPIXEPT",117,0)
 ;
"RTN","MPIXEPT",118,0)
 ;clear the identified exceptions for non ID exceptions
"RTN","MPIXEPT",119,0)
 W !!?6,"Clearing ID Change or Test Pt duplicates..."
"RTN","MPIXEPT",120,0)
 S CLRCNT=0
"RTN","MPIXEPT",121,0)
 S ICN=0 F  S ICN=$O(ICNARR("ID",ICN)) Q:'ICN  D
"RTN","MPIXEPT",122,0)
 .S FIRST=$O(ICNARR("ID",ICN,0)) I $O(ICNARR("ID",ICN,FIRST)) D
"RTN","MPIXEPT",123,0)
 ..S TRKDA=FIRST F  S TRKDA=$O(ICNARR("ID",ICN,TRKDA)) Q:'TRKDA  D
"RTN","MPIXEPT",124,0)
 ...S NOTE(1)="Duplicate of Tracker #"_FIRST_"."
"RTN","MPIXEPT",125,0)
 ...D EDIT S CLRCNT=CLRCNT+1
"RTN","MPIXEPT",126,0)
 ...W !?6,"Clearing tracker #",TRKDA," - dup of tracker #",FIRST K ICNARR(ICN,TRKDA)
"RTN","MPIXEPT",127,0)
 W !?6,CLRCNT," duplicate exception(s) cleared."
"RTN","MPIXEPT",128,0)
 ;
"RTN","MPIXEPT",129,0)
ID ;loop on "assigned" exceptions to see if any are for type 238 or 239
"RTN","MPIXEPT",130,0)
 K IDARR
"RTN","MPIXEPT",131,0)
 W !!?3,"Checking ""assigned"" ID Change or Test Pt exceptions for duplicate ICNs:"
"RTN","MPIXEPT",132,0)
 ;
"RTN","MPIXEPT",133,0)
 S TRKDA=0 F  S TRKDA=$O(^MPI(985.9,"AD",2,TRKDA)) Q:'TRKDA  D
"RTN","MPIXEPT",134,0)
 .S NODE=$G(^MPI(985.9,TRKDA,0)) Q:NODE=""
"RTN","MPIXEPT",135,0)
 .S STAT=$P(NODE,"^",6) Q:STAT'=2
"RTN","MPIXEPT",136,0)
 .S TYPE=$P(NODE,"^",2) I TYPE=239!(TYPE=238) D
"RTN","MPIXEPT",137,0)
 ..S ICN=$P($G(^MPI(985.9,TRKDA,2)),"^") I +ICN S IDARR(ICN,TRKDA)=""
"RTN","MPIXEPT",138,0)
 ;
"RTN","MPIXEPT",139,0)
 ;clear any "unassigned" (TYPE 238 OR 239) exceptions where there is an "assigned" exception for that ICN
"RTN","MPIXEPT",140,0)
 W !?6,"Clearing ID Change or Test Pt duplicates with assigned exceptions..."
"RTN","MPIXEPT",141,0)
 S CLRCNT=0
"RTN","MPIXEPT",142,0)
 S ICN=0 F  S ICN=$O(IDARR(ICN)) Q:'ICN  D
"RTN","MPIXEPT",143,0)
 .S FIRST=$O(IDARR(ICN,0))
"RTN","MPIXEPT",144,0)
 .I $D(ICNARR("ID",ICN)) D
"RTN","MPIXEPT",145,0)
 ..S TRKDA=0 F  S TRKDA=$O(ICNARR("ID",ICN,TRKDA)) Q:'TRKDA  D
"RTN","MPIXEPT",146,0)
 ...S NOTE(1)="Duplicate of Tracker #"_FIRST_"."
"RTN","MPIXEPT",147,0)
 ...D EDIT S CLRCNT=CLRCNT+1
"RTN","MPIXEPT",148,0)
 ...W !?6,"Clearing tracker #",TRKDA," - dup of tracker #",FIRST
"RTN","MPIXEPT",149,0)
 W !?6,CLRCNT," duplicate exception(s) cleared."
"RTN","MPIXEPT",150,0)
 ;
"RTN","MPIXEPT",151,0)
 I CNT>0 S ^XTMP("RGMTEPT",999,"DUP MANUAL EXCEPTIONS",LOGDT)=CNT
"RTN","MPIXEPT",152,0)
 S (TOT,CHKDT)=0 F  S CHKDT=$O(^XTMP("RGMTEPT",999,"DUP MANUAL EXCEPTIONS",CHKDT)) Q:'CHKDT  D
"RTN","MPIXEPT",153,0)
 .S TOT=TOT+^XTMP("RGMTEPT",999,"DUP MANUAL EXCEPTIONS",CHKDT)
"RTN","MPIXEPT",154,0)
 W !!?3,"To date, ",TOT," instances of duplicate exceptions have been cleared."
"RTN","MPIXEPT",155,0)
 ;
"RTN","MPIXEPT",156,0)
DQ ;produce global for report to hand to sites for cleanup
"RTN","MPIXEPT",157,0)
 D ^MPIXEPT2
"RTN","MPIXEPT",158,0)
 H 1
"RTN","MPIXEPT",159,0)
 ;
"RTN","MPIXEPT",160,0)
QUIT ;
"RTN","MPIXEPT",161,0)
 K %,CHKDT,CHKTXT,CHKTYPE,CNT,CW,DA,DIE,DR,EDDT,ERR,FIRST
"RTN","MPIXEPT",162,0)
 K ICN,ICNARR,LOGDT,NODE,NOTE,STAT,TOT,TRKDA,TXT,TYPE,UPD,SUBTXT,IDARR,CLRCNT,SUB
"RTN","MPIXEPT",163,0)
 Q
"RTN","MPIXEPT",164,0)
 ;
"RTN","MPIXEPT",165,0)
SET ;
"RTN","MPIXEPT",166,0)
 S CW=$P(^VA(200,.5,0),"^")
"RTN","MPIXEPT",167,0)
 S CNT=0,UPD="RESOLVED"
"RTN","MPIXEPT",168,0)
 Q
"RTN","MPIXEPT",169,0)
LOOP ;search for exceptions
"RTN","MPIXEPT",170,0)
 S TRKDA=0 F  S TRKDA=$O(^MPI(985.9,"AD",1,TRKDA)) Q:'TRKDA  D
"RTN","MPIXEPT",171,0)
 .S NODE=$G(^MPI(985.9,TRKDA,0)) Q:NODE=""
"RTN","MPIXEPT",172,0)
 .S STAT=$P(NODE,"^",6) Q:STAT'=1
"RTN","MPIXEPT",173,0)
 .S TYPE=$P(NODE,"^",2) Q:TYPE'=CHKTYPE
"RTN","MPIXEPT",174,0)
 .S TXT=$G(^MPI(985.9,TRKDA,1)) I TXT[CHKTXT D EDIT
"RTN","MPIXEPT",175,0)
 Q
"RTN","MPIXEPT",176,0)
 ;
"RTN","MPIXEPT",177,0)
EDIT ;edit case worker and status
"RTN","MPIXEPT",178,0)
 S EDDT=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MPIXEPT",179,0)
 S CNT=CNT+1 I CNT=1 W !!
"RTN","MPIXEPT",180,0)
 L +^MPI(985.9,TRKDA):10
"RTN","MPIXEPT",181,0)
 D WP^DIE(985.9,TRKDA_",",4,"KA","NOTE",.ERR)
"RTN","MPIXEPT",182,0)
 S DIE="^MPI(985.9,",DA=TRKDA,DR=".09///^S X=EDDT;.07///^S X=CW;.06///^S X=UPD" D ^DIE K DIE,DA,DR
"RTN","MPIXEPT",183,0)
 W !,"Tracker # ",TRKDA," - ",$E(^MPI(985.9,TRKDA,1),1,62)
"RTN","MPIXEPT",184,0)
 L -^MPI(985.9,TRKDA)
"RTN","MPIXEPT",185,0)
 Q
"RTN","MPIXEPT",186,0)
 ;
"RTN","MPIXEPT",187,0)
WP ;log note use this call if all you want to do is log a note
"RTN","MPIXEPT",188,0)
 L +^MPI(985.9,TRKDA):10
"RTN","MPIXEPT",189,0)
 D WP^DIE(985.9,TRKDA_",",4,"KA","NOTE",.ERR)
"RTN","MPIXEPT",190,0)
 L -^MPI(985.9,TRKDA)
"RTN","MPIXEPT",191,0)
 Q
"RTN","MPIXEPT",192,0)
TOT ;
"RTN","MPIXEPT",193,0)
 I CNT>0 S ^XTMP("RGMTEPT",CHKTYPE,SUBTXT,LOGDT)=CNT
"RTN","MPIXEPT",194,0)
 S (TOT,CHKDT)=0 F  S CHKDT=$O(^XTMP("RGMTEPT",CHKTYPE,SUBTXT,CHKDT)) Q:'CHKDT  D
"RTN","MPIXEPT",195,0)
 .S TOT=TOT+^XTMP("RGMTEPT",CHKTYPE,SUBTXT,CHKDT)
"RTN","MPIXEPT",196,0)
 W !?3,"To date, ",TOT," instances of this exception have been cleared."
"RTN","MPIXEPT",197,0)
 Q
"RTN","MPIXEPT2")
0^211^B28871258
"RTN","MPIXEPT2",1,0)
MPIXEPT2 ;Auto-resolution of Exceptions before entering the Exception Handler (for reports) ;08/27/99
"RTN","MPIXEPT2",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**27,30**;30 Apr 1999
"RTN","MPIXEPT2",3,0)
 ;
"RTN","MPIXEPT2",4,0)
EN ;
"RTN","MPIXEPT2",5,0)
 D NOW^%DTC
"RTN","MPIXEPT2",6,0)
 S $P(^XTMP("RGMTEPT2",0),"^",1,3)=$$FMADD^XLFDT(DT,60)_"^"_%_"^MPI Exception Data"
"RTN","MPIXEPT2",7,0)
 I '$D(LOGDT) S LOGDT=%
"RTN","MPIXEPT2",8,0)
 S CW="DATA,MANAGEMENT"
"RTN","MPIXEPT2",9,0)
 ;
"RTN","MPIXEPT2",10,0)
SAV1 ;save data for sites for 2 character CITY names for Exception TYPE 208
"RTN","MPIXEPT2",11,0)
 D SET1 S CHKTYPE=208,CHKTXT="Unable to update field 44",SUBTXT="INVALID RESIDENCE CITY"
"RTN","MPIXEPT2",12,0)
 D LOOP,TOT
"RTN","MPIXEPT2",13,0)
 ;
"RTN","MPIXEPT2",14,0)
SAV2 ;save data for sites for 2 character CITY names for Exception TYPE 234
"RTN","MPIXEPT2",15,0)
 D SET1 S CHKTYPE=234,CHKTXT="Unable to update field 44",SUBTXT="INVALID RESIDENCE CITY"
"RTN","MPIXEPT2",16,0)
 D LOOP,TOT
"RTN","MPIXEPT2",17,0)
 ;
"RTN","MPIXEPT2",18,0)
SAV3 ;save data for sites for Invalid Date of Birth for Exception TYPE 208
"RTN","MPIXEPT2",19,0)
 D SET1 S CHKTYPE=208,CHKTXT="field DATE OF BIRTH",SUBTXT="INVALID DATE OF BIRTH"
"RTN","MPIXEPT2",20,0)
 D LOOP,TOT
"RTN","MPIXEPT2",21,0)
 ;
"RTN","MPIXEPT2",22,0)
SAV4 ;save data for sites for Invalid Date of Birth for Exception TYPE 234
"RTN","MPIXEPT2",23,0)
 D SET1 S CHKTYPE=234,CHKTXT="field DATE OF BIRTH in file MPI FACILITY ASSOCIATION is not valid.",SUBTXT="INVALID DATE OF BIRTH"
"RTN","MPIXEPT2",24,0)
 D LOOP,TOT
"RTN","MPIXEPT2",25,0)
 ;
"RTN","MPIXEPT2",26,0)
SAV5 ;save data for sites for Invalid Place of Birth City for Exception TYPE 208
"RTN","MPIXEPT2",27,0)
 D SET1 S CHKTYPE=208,CHKTXT="field PLACE OF BIRTH CITY",SUBTXT="INVALID POB CITY"
"RTN","MPIXEPT2",28,0)
 D LOOP,TOT
"RTN","MPIXEPT2",29,0)
 ;
"RTN","MPIXEPT2",30,0)
SAV6 ;save data for sites for Invalid Place of Birth City for Exception TYPE 234
"RTN","MPIXEPT2",31,0)
 D SET1 S CHKTYPE=234,CHKTXT="field PLACE OF BIRTH CITY",SUBTXT="INVALID POB CITY"
"RTN","MPIXEPT2",32,0)
 D LOOP,TOT
"RTN","MPIXEPT2",33,0)
 ;
"RTN","MPIXEPT2",34,0)
SAV7 ;save data for sites for STREET ADDRESS [LINE 1] issue for Exception TYPE 208
"RTN","MPIXEPT2",35,0)
 D SET1 S CHKTYPE=208,CHKTXT="Unable to update field 41",SUBTXT="INVALID STR ADDR LINE 1"
"RTN","MPIXEPT2",36,0)
 D LOOP,TOT
"RTN","MPIXEPT2",37,0)
 ;
"RTN","MPIXEPT2",38,0)
SAV8 ;save data for sites for STREET ADDRESS [LINE 1] issue for Exception TYPE 234
"RTN","MPIXEPT2",39,0)
 D SET1 S CHKTYPE=234,CHKTXT="Unable to update field 41",SUBTXT="INVALID STR ADDR LINE 1"
"RTN","MPIXEPT2",40,0)
 D LOOP,TOT
"RTN","MPIXEPT2",41,0)
 ;
"RTN","MPIXEPT2",42,0)
SAV9 ;save data for sites for STREET ADDRESS [LINE 2] issue for Exception TYPE 208
"RTN","MPIXEPT2",43,0)
 D SET1 S CHKTYPE=208,CHKTXT="Unable to update field 42",SUBTXT="INVALID STR ADDR LINE 2"
"RTN","MPIXEPT2",44,0)
 D LOOP,TOT
"RTN","MPIXEPT2",45,0)
 ;
"RTN","MPIXEPT2",46,0)
SAV10 ;save data for sites for STREET ADDRESS [LINE 2] issue for Exception TYPE 234
"RTN","MPIXEPT2",47,0)
 D SET1 S CHKTYPE=234,CHKTXT="Unable to update field 42",SUBTXT="INVALID STR ADDR LINE 2"
"RTN","MPIXEPT2",48,0)
 D LOOP,TOT
"RTN","MPIXEPT2",49,0)
 ;
"RTN","MPIXEPT2",50,0)
SAV11 ;save data for sites for STREET ADDRESS [LINE 3] issue for Exception TYPE 208
"RTN","MPIXEPT2",51,0)
 D SET1 S CHKTYPE=208,CHKTXT="Unable to update field 43",SUBTXT="INVALID STR ADDR LINE 3"
"RTN","MPIXEPT2",52,0)
 D LOOP,TOT
"RTN","MPIXEPT2",53,0)
 ;
"RTN","MPIXEPT2",54,0)
SAV12 ;save data for sites for STREET ADDRESS [LINE 3] issue for Exception TYPE 234
"RTN","MPIXEPT2",55,0)
 D SET1 S CHKTYPE=234,CHKTXT="Unable to update field 43",SUBTXT="INVALID STR ADDR LINE 3"
"RTN","MPIXEPT2",56,0)
 D LOOP,TOT
"RTN","MPIXEPT2",57,0)
 ;
"RTN","MPIXEPT2",58,0)
SAV13 ;save data for sites for NO SSN AT SITE issue for Exception TYPE 209
"RTN","MPIXEPT2",59,0)
 ;D SET1 S CHKTYPE=209,SUBTXT="NO SSN AT SITE"
"RTN","MPIXEPT2",60,0)
 ;D LOOP,TOT
"RTN","MPIXEPT2",61,0)
SAV14 ;save data for sites for INVALID DATE OF DEATH issue for Exception TYPE 234
"RTN","MPIXEPT2",62,0)
 D SET1 S CHKTYPE=234,CHKTXT="value '""""00' for field DATE OF DEATH",SUBTXT="INVALID DATE OF DEATH"
"RTN","MPIXEPT2",63,0)
 D LOOP,TOT
"RTN","MPIXEPT2",64,0)
 ;
"RTN","MPIXEPT2",65,0)
SAV15 ;save data for sites for INVALID DATE OF DEATH issue for Exception TYPE 208
"RTN","MPIXEPT2",66,0)
 D SET1 S CHKTYPE=208,CHKTXT="value '""""00' for field DATE OF DEATH",SUBTXT="INVALID DATE OF DEATH"
"RTN","MPIXEPT2",67,0)
 D LOOP,TOT
"RTN","MPIXEPT2",68,0)
 ;
"RTN","MPIXEPT2",69,0)
 ;===================================================
"RTN","MPIXEPT2",70,0)
ASG1 ;assign to DQ team -  MISSING SEX for Exception TYPE 234
"RTN","MPIXEPT2",71,0)
 D SET2 S CHKTYPE=234,CHKTXT="missing (SEX)"
"RTN","MPIXEPT2",72,0)
 D LOOP
"RTN","MPIXEPT2",73,0)
 ;
"RTN","MPIXEPT2",74,0)
ASG2 ;assign to DQ team - GENDER issues for Exception TYPE 208
"RTN","MPIXEPT2",75,0)
 D SET2 S CHKTYPE=208,CHKTXT="field GENDER"
"RTN","MPIXEPT2",76,0)
 D LOOP
"RTN","MPIXEPT2",77,0)
 ;
"RTN","MPIXEPT2",78,0)
ASG3 ;assign to DQ team - Potential Test Patient Issue for Exception TYPE 238
"RTN","MPIXEPT2",79,0)
 D SET2 S CHKTYPE=238
"RTN","MPIXEPT2",80,0)
 D LOOP
"RTN","MPIXEPT2",81,0)
 ;
"RTN","MPIXEPT2",82,0)
ASG4 ;assign to DQ team - Potential Identity Change issues for Exception TYPE 239
"RTN","MPIXEPT2",83,0)
 D SET2 S CHKTYPE=239
"RTN","MPIXEPT2",84,0)
 D LOOP
"RTN","MPIXEPT2",85,0)
 ;
"RTN","MPIXEPT2",86,0)
QUIT ;
"RTN","MPIXEPT2",87,0)
 K %,CHKDT,CHKTXT,CHKTYPE,CMOR,CNT,CW,DA,DIE,DQLOG,DR,DTRPT,EXCTXT,EXCTYPE,ICN,LOGDT,NODE,NODE2
"RTN","MPIXEPT2",88,0)
 K PTNM,PTSSN,SITEFROM,STAT,SUBTXT,TOT,TRKDA,TXT,TYPE,UPD,ERR,NOTE,EDDT
"RTN","MPIXEPT2",89,0)
 Q
"RTN","MPIXEPT2",90,0)
 ;
"RTN","MPIXEPT2",91,0)
SET1 ;use for exceptions to be saved off for DQ Exception Report
"RTN","MPIXEPT2",92,0)
 S CNT=0,UPD="RESOLVED",DQLOG=1
"RTN","MPIXEPT2",93,0)
 K NOTE S NOTE(1)="This exception was auto-resolved for reporting to DQ Team."
"RTN","MPIXEPT2",94,0)
 Q
"RTN","MPIXEPT2",95,0)
 ;
"RTN","MPIXEPT2",96,0)
SET2 ;use for DQ Exceptions to go to exception handler
"RTN","MPIXEPT2",97,0)
 S CNT=0,UPD="ASSIGNED",DQLOG=0
"RTN","MPIXEPT2",98,0)
 K NOTE S NOTE(1)="This exception was auto-assigned to DQ Team."
"RTN","MPIXEPT2",99,0)
 Q
"RTN","MPIXEPT2",100,0)
 ;
"RTN","MPIXEPT2",101,0)
LOOP ;
"RTN","MPIXEPT2",102,0)
 S TRKDA=0 F  S TRKDA=$O(^MPI(985.9,"AD",1,TRKDA)) Q:'TRKDA  D
"RTN","MPIXEPT2",103,0)
 .S NODE=$G(^MPI(985.9,TRKDA,0)) Q:NODE=""
"RTN","MPIXEPT2",104,0)
 .S STAT=$P(NODE,"^",6) Q:STAT'=1
"RTN","MPIXEPT2",105,0)
 .S TYPE=$P(NODE,"^",2) Q:TYPE'=CHKTYPE
"RTN","MPIXEPT2",106,0)
 .I TYPE=238!(TYPE=239) D SETD,EDIT Q
"RTN","MPIXEPT2",107,0)
 .I TYPE=209 D SETD,EDIT Q
"RTN","MPIXEPT2",108,0)
 .S TXT=$G(^MPI(985.9,TRKDA,1)) I TXT[CHKTXT D SETD,EDIT
"RTN","MPIXEPT2",109,0)
 Q
"RTN","MPIXEPT2",110,0)
 ;
"RTN","MPIXEPT2",111,0)
SETD ;
"RTN","MPIXEPT2",112,0)
 S NODE2=^MPI(985.9,TRKDA,0)
"RTN","MPIXEPT2",113,0)
 S DTRPT=$P(NODE2,"^",3) I DTRPT]"" S DTRPT=$$FMTE^XLFDT($E(DTRPT,1,12))
"RTN","MPIXEPT2",114,0)
 S SITEFROM=$$GET1^DIQ(985.9,TRKDA_",",.04)
"RTN","MPIXEPT2",115,0)
 S EXCTYPE=$P(NODE2,"^",2) I +EXCTYPE S EXCTYPE=$P(^RGHL7(991.11,EXCTYPE,0),"^")
"RTN","MPIXEPT2",116,0)
 S EXCTXT=$P($G(^MPI(985.9,TRKDA,1)),"^")
"RTN","MPIXEPT2",117,0)
 S ICN=$P($G(^MPI(985.9,TRKDA,2)),"^")
"RTN","MPIXEPT2",118,0)
 S PTNM=$P($G(^MPI(985.9,TRKDA,2)),"^",2)
"RTN","MPIXEPT2",119,0)
 S PTSSN=$P($G(^MPI(985.9,TRKDA,2)),"^",3)
"RTN","MPIXEPT2",120,0)
 S CMOR=$P($G(^MPI(985.9,TRKDA,2)),"^",4)
"RTN","MPIXEPT2",121,0)
 ;
"RTN","MPIXEPT2",122,0)
 Q:ICN=""
"RTN","MPIXEPT2",123,0)
 Q:'DQLOG
"RTN","MPIXEPT2",124,0)
 I '$D(^XTMP("RGMTEPT2",SUBTXT,SITEFROM,ICN)) D
"RTN","MPIXEPT2",125,0)
 .S ^XTMP("RGMTEPT2",SUBTXT,SITEFROM,ICN,LOGDT,"ID",TRKDA)=PTNM_"^"_PTSSN_"^"_CMOR_"^"_EXCTYPE_"^"_DTRPT
"RTN","MPIXEPT2",126,0)
 .S ^XTMP("RGMTEPT2",SUBTXT,SITEFROM,ICN,LOGDT,"TXT",TRKDA)=EXCTXT
"RTN","MPIXEPT2",127,0)
 Q
"RTN","MPIXEPT2",128,0)
 ;
"RTN","MPIXEPT2",129,0)
EDIT ;
"RTN","MPIXEPT2",130,0)
 Q:ICN=""
"RTN","MPIXEPT2",131,0)
 S EDDT=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MPIXEPT2",132,0)
 S CNT=CNT+1
"RTN","MPIXEPT2",133,0)
 L +^MPI(985.9,TRKDA):10
"RTN","MPIXEPT2",134,0)
 D WP^DIE(985.9,TRKDA_",",4,"KA","NOTE",.ERR)
"RTN","MPIXEPT2",135,0)
 I DQLOG S DIE="^MPI(985.9,",DA=TRKDA,DR=".09///^S X=EDDT;.07///^S X=CW;.06///^S X=UPD" D ^DIE K DIE,DA,DR
"RTN","MPIXEPT2",136,0)
 I 'DQLOG S DIE="^MPI(985.9,",DA=TRKDA,DR=".07///^S X=CW;.06///^S X=UPD" D ^DIE K DIE,DA,DR
"RTN","MPIXEPT2",137,0)
 L -^MPI(985.9,TRKDA)
"RTN","MPIXEPT2",138,0)
 Q
"RTN","MPIXEPT2",139,0)
 ;
"RTN","MPIXEPT2",140,0)
WP ;log note use this call if all you want to do is log a note
"RTN","MPIXEPT2",141,0)
 L +^MPI(985.9,TRKDA):10
"RTN","MPIXEPT2",142,0)
 D WP^DIE(985.9,TRKDA_",",4,"KA","NOTE",.ERR)
"RTN","MPIXEPT2",143,0)
 L -^^MPI(985.9,TRKDA)
"RTN","MPIXEPT2",144,0)
 Q
"RTN","MPIXEPT2",145,0)
TOT ;
"RTN","MPIXEPT2",146,0)
 I CNT>0 S ^XTMP("RGMTEPT",CHKTYPE,SUBTXT,LOGDT)=CNT
"RTN","MPIXEPT2",147,0)
 S (TOT,CHKDT)=0 F  S CHKDT=$O(^XTMP("RGMTEPT",CHKTYPE,SUBTXT,CHKDT)) Q:'CHKDT  D
"RTN","MPIXEPT2",148,0)
 .S TOT=TOT+^XTMP("RGMTEPT",CHKTYPE,SUBTXT,CHKDT)
"RTN","MPIXEPT2",149,0)
 Q
"RTN","MPIXEWL")
0^212^B11333769
"RTN","MPIXEWL",1,0)
MPIXEWL ;BIR/CML-Exception Work Load Report (NEW) ;7/9/02
"RTN","MPIXEWL",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**17**;30 Apr 99
"RTN","MPIXEWL",3,0)
 ;
"RTN","MPIXEWL",4,0)
 W !!,"This option will display a workload report of exceptions RECEIVED"
"RTN","MPIXEWL",5,0)
 W !,"during a user selected date range.",!
"RTN","MPIXEWL",6,0)
 ;
"RTN","MPIXEWL",7,0)
ASK ;Ask for Date Range
"RTN","MPIXEWL",8,0)
 W !!,"Enter date range for data to be included in report.",!
"RTN","MPIXEWL",9,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIXEWL",10,0)
 S DIR(0)="DAO^:"_$$NOW^XLFDT_":EPXT",DIR("A")="Beginning Date for Report:  "
"RTN","MPIXEWL",11,0)
 D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIXEWL",12,0)
 S RGBDT=Y
"RTN","MPIXEWL",13,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIXEWL",14,0)
 S DIR(0)="DAO^"_RGBDT_":"_$$NOW^XLFDT_":EPXT",DIR("A")="Ending Date for Report: "
"RTN","MPIXEWL",15,0)
 S DIR("B")=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)) D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIXEWL",16,0)
 S RGEDT=Y
"RTN","MPIXEWL",17,0)
 ;
"RTN","MPIXEWL",18,0)
 S BEGDT=$S($L(RGBDT)=7:$$FMADD^XLFDT(RGBDT,-1)_.24,1:RGBDT-.0001)
"RTN","MPIXEWL",19,0)
 S STOPDT=$S($L(RGEDT)=7:RGEDT_.24,1:RGEDT)
"RTN","MPIXEWL",20,0)
 ;
"RTN","MPIXEWL",21,0)
COMP ;
"RTN","MPIXEWL",22,0)
 K ^XTMP("MPIXEWL",$J)
"RTN","MPIXEWL",23,0)
 ;UPCNT=# Unassigned/Pending Exceptions
"RTN","MPIXEWL",24,0)
 ;APCNT=# Assigned/Pending Exceptions
"RTN","MPIXEWL",25,0)
 ;RESCNT=# Resolved Exceptions
"RTN","MPIXEWL",26,0)
 ;
"RTN","MPIXEWL",27,0)
 S (RESCNT,UPCNT,APCNT)=0
"RTN","MPIXEWL",28,0)
 F  S BEGDT=$O(^MPI(985.9,"B",BEGDT)) Q:'BEGDT  Q:BEGDT>STOPDT  D
"RTN","MPIXEWL",29,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.9,"B",BEGDT,IEN)) Q:'IEN  D
"RTN","MPIXEWL",30,0)
 ..S STATUS=$$GET1^DIQ(985.9,IEN_",",.06)
"RTN","MPIXEWL",31,0)
 ..S CW=$$GET1^DIQ(985.9,IEN_",",.07) I CW="POSTMASTER" S CW="ZZ"_CW
"RTN","MPIXEWL",32,0)
 ..I STATUS="UNASSIGNED" S UPCNT=UPCNT+1 Q
"RTN","MPIXEWL",33,0)
 ..I STATUS="ASSIGNED" S APCNT=APCNT+1 Q
"RTN","MPIXEWL",34,0)
 ..I STATUS="RESOLVED" D
"RTN","MPIXEWL",35,0)
 ...S RESCNT=RESCNT+1
"RTN","MPIXEWL",36,0)
 ...I '$D(^XTMP("MPIXEWL",$J,"RESOLVED",CW)) S ^XTMP("MPIXEWL",$J,"RESOLVED",CW)=0
"RTN","MPIXEWL",37,0)
 ...S ^XTMP("MPIXEWL",$J,"RESOLVED",CW)=^XTMP("MPIXEWL",$J,"RESOLVED",CW)+1
"RTN","MPIXEWL",38,0)
 ;
"RTN","MPIXEWL",39,0)
 S ^XTMP("MPIXEWL",$J,"TOT UNASSIGNED/PEND")=UPCNT
"RTN","MPIXEWL",40,0)
 S ^XTMP("MPIXEWL",$J,"TOT ASSIGNED/PEND")=APCNT
"RTN","MPIXEWL",41,0)
 S ^XTMP("MPIXEWL",$J,"TOT RESOLVED")=RESCNT
"RTN","MPIXEWL",42,0)
 S ^XTMP("MPIXEWL",$J,"TOT EXC RECEIVED")=RESCNT+UPCNT+APCNT
"RTN","MPIXEWL",43,0)
 ;
"RTN","MPIXEWL",44,0)
PRT ;
"RTN","MPIXEWL",45,0)
 S HBDT=$$FMTE^XLFDT($E(RGBDT,1,12)),HEDT=$$FMTE^XLFDT($E(RGEDT,1,12))
"RTN","MPIXEWL",46,0)
 S PDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIXEWL",47,0)
 S $P(LN,"-",81)=""
"RTN","MPIXEWL",48,0)
 ;
"RTN","MPIXEWL",49,0)
 W @IOF,!,"Exception Workload Report for ",HBDT," to ",HEDT
"RTN","MPIXEWL",50,0)
 W !,"Printed: ",PDT,!,LN
"RTN","MPIXEWL",51,0)
 ;
"RTN","MPIXEWL",52,0)
 I '$D(^XTMP("MPIXEWL",$J)) W !,"No data found for that time period." G QUIT
"RTN","MPIXEWL",53,0)
 ;
"RTN","MPIXEWL",54,0)
 W !,"Unassigned/Pending Exceptions:",?31,$J(UPCNT,7)
"RTN","MPIXEWL",55,0)
 W !,"Assigned/Pending Exceptions  :",?31,$J(APCNT,7)
"RTN","MPIXEWL",56,0)
 W !,"Resolved Exceptions          :",?31,$J(RESCNT,7)
"RTN","MPIXEWL",57,0)
 W !?40,"TOTAL EXCEPTIONS RECEIVED: ",$J(^XTMP("MPIXEWL",$J,"TOT EXC RECEIVED"),7)
"RTN","MPIXEWL",58,0)
 W !!,"Resolved Exceptions by Case Worker",!,"----------------------------------"
"RTN","MPIXEWL",59,0)
 ;
"RTN","MPIXEWL",60,0)
 S CW="" F  S CW=$O(^XTMP("MPIXEWL",$J,"RESOLVED",CW)) Q:CW=""  Q:CW="ZZPOSTMASTER"  D
"RTN","MPIXEWL",61,0)
 .W !,CW,?25,": ",$J(^XTMP("MPIXEWL",$J,"RESOLVED",CW),5)
"RTN","MPIXEWL",62,0)
 S CW="ZZPOSTMASTER"
"RTN","MPIXEWL",63,0)
 I $D(^XTMP("MPIXEWL",$J,"RESOLVED",CW)) D
"RTN","MPIXEWL",64,0)
 .W !!,"POSTMASTER",?25,": ",$J(^XTMP("MPIXEWL",$J,"RESOLVED",CW),5)
"RTN","MPIXEWL",65,0)
 ;
"RTN","MPIXEWL",66,0)
 S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIXEWL",67,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","MPIXEWL",68,0)
 ;
"RTN","MPIXEWL",69,0)
QUIT ;
"RTN","MPIXEWL",70,0)
 K APCNT,BEGDT,CW,DIR,DIRUT,DTOUT,DUOUT,HBDT,HEDT,IEN,JJ,LN,PDT,RESCNT,RGBDT,RGEDT,SS,STATUS,STOPDT,UPCNT,Y
"RTN","MPIXEWL",71,0)
 Q
"RTN","MPIXR")
0^213^B4481825
"RTN","MPIXR",1,0)
MPIXR ;ALB/CJM -RECEIVE EXCEPTION MESSAGE;08/27/99
"RTN","MPIXR",2,0)
 ;;1.0; MPI Austin ;;30 Apr 99
"RTN","MPIXR",3,0)
 ;
"RTN","MPIXR",4,0)
RECEIVE ;Description: Read the exception message and file it.
"RTN","MPIXR",5,0)
 N EXCEPT
"RTN","MPIXR",6,0)
 F  X XMREC Q:(XMER<0)  D
"RTN","MPIXR",7,0)
 .N LABEL,DATA
"RTN","MPIXR",8,0)
 .Q:($E(XMRG,1,2)="**")
"RTN","MPIXR",9,0)
 .S LABEL=$P(XMRG,":"),DATA=$P(XMRG,":",2,99)
"RTN","MPIXR",10,0)
 .Q:'$L(LABEL)
"RTN","MPIXR",11,0)
 .I LABEL="TREATING FACILITY" D  Q
"RTN","MPIXR",12,0)
 ..N SITE
"RTN","MPIXR",13,0)
 ..S SITE=$S($L(DATA):DATA,1:" ")
"RTN","MPIXR",14,0)
 ..S EXCEPT("TF",SITE)=""
"RTN","MPIXR",15,0)
 ..F  X XMREC Q:(XMER<0)  Q:($E(XMRG,1,2)="**")  S LABEL=$P(XMRG,":"),DATA=$P(XMRG,":",2,99)  D
"RTN","MPIXR",16,0)
 ...Q:'$L(LABEL)
"RTN","MPIXR",17,0)
 ...S EXCEPT("TF",SITE,LABEL)=DATA
"RTN","MPIXR",18,0)
 .S EXCEPT(LABEL)=DATA
"RTN","MPIXR",19,0)
 I $D(EXCEPT) D
"RTN","MPIXR",20,0)
 .N FOUND S FOUND=0
"RTN","MPIXR",21,0)
 .;
"RTN","MPIXR",22,0)
 .;if the same ICN is currently assigned to someone, assign this exception to the same person
"RTN","MPIXR",23,0)
 .I $L($G(EXCEPT("ICN"))) D
"RTN","MPIXR",24,0)
 ..N STATUS,IEN
"RTN","MPIXR",25,0)
 ..S IEN=$O(^MPI(985.9,"AE",EXCEPT("ICN"),2,0)) I IEN S EXCEPT("CASE WORKER")=$$WORKER^MPIXU(IEN),EXCEPT("STATUS")=2 Q 
"RTN","MPIXR",26,0)
 ..;
"RTN","MPIXR",27,0)
 ..;check if this is a duplicate
"RTN","MPIXR",28,0)
 ..S IEN=0
"RTN","MPIXR",29,0)
 ..F STATUS=1,2 Q:FOUND  F  S IEN=$O(^MPI(985.9,"AE",EXCEPT("ICN"),STATUS,IEN)) Q:'IEN  Q:FOUND  D
"RTN","MPIXR",30,0)
 ...N OLD
"RTN","MPIXR",31,0)
 ...Q:'$$GET^MPIXU(IEN,.OLD)
"RTN","MPIXR",32,0)
 ...I OLD("EXCEPTION TYPE")=$G(EXCEPT("EXCEPTION TYPE")),OLD("SITE REPORTING")=$G(EXCEPT("SITE REPORTING")),OLD("OPTIONAL TEXT")=$G(EXCEPT("OPTIONAL TEXT")) S FOUND=1
"RTN","MPIXR",33,0)
 ..;
"RTN","MPIXR",34,0)
 .Q:FOUND
"RTN","MPIXR",35,0)
 .I $$ADD^MPIXU(.EXCEPT) D
"RTN","MPIXR",36,0)
 ..S XMSER="S.MPI EXCEPTION SERVER"
"RTN","MPIXR",37,0)
 ..D REMSBMSG^XMA1C
"RTN","MPIXR",38,0)
 Q
"RTN","MPIXRP1")
0^214^B26522942
"RTN","MPIXRP1",1,0)
MPIXRP1 ;ALB/CJM -Case Worker Statistics Report (continued) ;12/12/200
"RTN","MPIXRP1",2,0)
 ;;1.0; MPI Austin ;;30 Apr 99
"RTN","MPIXRP1",3,0)
 ;
"RTN","MPIXRP1",4,0)
BUILD(REPORT,FROM,TO) ;
"RTN","MPIXRP1",5,0)
 ;Description: Fetches the needed statistics and writes the report body
"RTN","MPIXRP1",6,0)
 ;to @REPORT, butdoes not handle the display.
"RTN","MPIXRP1",7,0)
 ;
"RTN","MPIXRP1",8,0)
 ;Input:
"RTN","MPIXRP1",9,0)
 ;  REPORT - @REPORT is the global location to place the report
"RTN","MPIXRP1",10,0)
 ;  FROM - month/year to start in FM format
"RTN","MPIXRP1",11,0)
 ;  TO   - month/year to end in FM format (optional, DT assumed)
"RTN","MPIXRP1",12,0)
 ;Output:Report contents written to @REPORT
"RTN","MPIXRP1",13,0)
 ;
"RTN","MPIXRP1",14,0)
 K @REPORT
"RTN","MPIXRP1",15,0)
 S:'$G(TO) TO=$$DT^XLFDT
"RTN","MPIXRP1",16,0)
 S $E(FROM,6,7)="00"
"RTN","MPIXRP1",17,0)
 S $E(TO,6,7)="32"
"RTN","MPIXRP1",18,0)
 D COUNT(REPORT,FROM,TO)
"RTN","MPIXRP1",19,0)
 D WRITE(REPORT,FROM,TO)
"RTN","MPIXRP1",20,0)
 Q
"RTN","MPIXRP1",21,0)
 ;
"RTN","MPIXRP1",22,0)
COUNT(REPORT,FROM,TO) ;
"RTN","MPIXRP1",23,0)
 ;Description: Gathers the needed statistics.
"RTN","MPIXRP1",24,0)
 ;Input:
"RTN","MPIXRP1",25,0)
 ;  REPORT - @REPORT is the global location to place the report
"RTN","MPIXRP1",26,0)
 ;  FROM - month/year to start in FM format
"RTN","MPIXRP1",27,0)
 ;  TO   - month/year to end in FM format
"RTN","MPIXRP1",28,0)
 ;Output:
"RTN","MPIXRP1",29,0)
 ;   @REPORT@("ASSIGNED/PENDING")=<count of assigned & pending  exceptions
"RTN","MPIXRP1",30,0)
 ;   @REPORT@("ASSIGNED/PENDING",<case worker DUZ>)=<count of pending  exceptions for individual case worker
"RTN","MPIXRP1",31,0)
 ;   @REPORT@("UNASSIGNED/PENDING")=<count of unassigned & pending  exceptions
"RTN","MPIXRP1",32,0)
 ;   @REPORT@("RESOLVED",<case worker>,<YYYMM>)=count of exceptions resolved by case worker for the month
"RTN","MPIXRP1",33,0)
 ;   @REPORT@("RESOLVED","TOTAL",<YYYMMM>)=count of exceptions resolved by all case workers for the month
"RTN","MPIXRP1",34,0)
 ;   @REPORT@("RESOLVED","TOTAL")=count of exceptions resolved by all case workers for the entire report period
"RTN","MPIXRP1",35,0)
 ;
"RTN","MPIXRP1",36,0)
 N WORKER,IEN
"RTN","MPIXRP1",37,0)
 ;count assigned/pending exceptions
"RTN","MPIXRP1",38,0)
 S WORKER=0
"RTN","MPIXRP1",39,0)
 F  S WORKER=$O(^MPI(985.9,"AC",WORKER)) Q:'WORKER  D
"RTN","MPIXRP1",40,0)
 .N DATE
"RTN","MPIXRP1",41,0)
 .S DATE=0
"RTN","MPIXRP1",42,0)
 .F  S DATE=$O(^MPI(985.9,"AC",WORKER,2,DATE)) Q:'DATE  D
"RTN","MPIXRP1",43,0)
 ..S IEN=0
"RTN","MPIXRP1",44,0)
 ..F  S IEN=$O(^MPI(985.9,"AC",WORKER,2,DATE,IEN)) Q:'IEN  D
"RTN","MPIXRP1",45,0)
 ...S @REPORT@("ASSIGNED/PENDING")=$G(@REPORT@("ASSIGNED/PENDING"))+1
"RTN","MPIXRP1",46,0)
 ...S @REPORT@("ASSIGNED/PENDING",WORKER)=$G(@REPORT@("ASSIGNED/PENDING",WORKER))+1
"RTN","MPIXRP1",47,0)
 ;
"RTN","MPIXRP1",48,0)
 ;Count unassigned exceptions
"RTN","MPIXRP1",49,0)
 S IEN=0
"RTN","MPIXRP1",50,0)
 F  S IEN=$O(^MPI(985.9,"AD",1,IEN)) Q:'IEN  S @REPORT@("UNASSIGNED/PENDING")=$G(@REPORT@("UNASSIGNED/PENDING"))+1
"RTN","MPIXRP1",51,0)
 ;
"RTN","MPIXRP1",52,0)
 ;count resolved exceptions for date range by case worker
"RTN","MPIXRP1",53,0)
 S WORKER=0
"RTN","MPIXRP1",54,0)
 F  S WORKER=$O(^MPI(985.9,"AF",WORKER)) Q:'WORKER  D
"RTN","MPIXRP1",55,0)
 .N DATE
"RTN","MPIXRP1",56,0)
 .S DATE=FROM
"RTN","MPIXRP1",57,0)
 .F  S DATE=$O(^MPI(985.9,"AF",WORKER,DATE)) Q:'DATE  Q:(DATE>TO)  D
"RTN","MPIXRP1",58,0)
 ..S IEN=0
"RTN","MPIXRP1",59,0)
 ..F  S IEN=$O(^MPI(985.9,"AF",WORKER,DATE,IEN)) Q:'IEN  D
"RTN","MPIXRP1",60,0)
 ... S @REPORT@("RESOLVED",WORKER,$E(DATE,1,5))=$G(@REPORT@("RESOLVED",WORKER,$E(DATE,1,5)))+1
"RTN","MPIXRP1",61,0)
 ... S @REPORT@("RESOLVED","TOTAL",$E(DATE,1,5))=$G(@REPORT@("RESOLVED","TOTAL",$E(DATE,1,5)))+1
"RTN","MPIXRP1",62,0)
 ... S @REPORT@("RESOLVED","TOTAL")=$G(@REPORT@("RESOLVED","TOTAL"))+1
"RTN","MPIXRP1",63,0)
 Q
"RTN","MPIXRP1",64,0)
 ;
"RTN","MPIXRP1",65,0)
WRITE(REPORT,FROM,TO) ;
"RTN","MPIXRP1",66,0)
 ;Description: Using the statisics compiled by COUNT(), writes the body of the report to @REPORT.
"RTN","MPIXRP1",67,0)
 ;Input:
"RTN","MPIXRP1",68,0)
 ;  REPORT - @REPORT contains the needed statistics
"RTN","MPIXRP1",69,0)
 ;  FROM - month/year to start in FM format
"RTN","MPIXRP1",70,0)
 ;  TO   - month/year to end in FM format
"RTN","MPIXRP1",71,0)
 ;Output:Report contents written to @REPORT
"RTN","MPIXRP1",72,0)
 ;
"RTN","MPIXRP1",73,0)
 N MONTH,WORKER
"RTN","MPIXRP1",74,0)
 D ADD("Resolved Exceptions:           "_$$RJ^MPIXU(+$G(@REPORT@("RESOLVED","TOTAL")),6))
"RTN","MPIXRP1",75,0)
 D ADD("Unassigned/Pending Exceptions: "_$$RJ^MPIXU(+$G(@REPORT@("UNASSIGNED/PENDING")),6))
"RTN","MPIXRP1",76,0)
 D ADD("Assigned/Pending Exceptions:   "_$$RJ^MPIXU(+$G(@REPORT@("ASSIGNED/PENDING")),6))
"RTN","MPIXRP1",77,0)
 D ADD(" ")
"RTN","MPIXRP1",78,0)
 ;
"RTN","MPIXRP1",79,0)
 ;write for each case worker the pending exceptions
"RTN","MPIXRP1",80,0)
 D ADD("Count of Pending Exceptions by Case Worker")
"RTN","MPIXRP1",81,0)
 D ADD("------------------------------------------")
"RTN","MPIXRP1",82,0)
 S WORKER=0
"RTN","MPIXRP1",83,0)
 F  S WORKER=$O(@REPORT@("ASSIGNED/PENDING",WORKER)) Q:'WORKER  D
"RTN","MPIXRP1",84,0)
 .D ADD("    Case Worker:  "_$$LJ^MPIXU($$GETFIELD^MPIEU(200,.01,WORKER),20)_"   Pending: "_+$G(@REPORT@("ASSIGNED/PENDING",WORKER)))
"RTN","MPIXRP1",85,0)
 ;
"RTN","MPIXRP1",86,0)
 D ADD(" ")
"RTN","MPIXRP1",87,0)
 ;
"RTN","MPIXRP1",88,0)
 ;write monthly totals of resolved cases
"RTN","MPIXRP1",89,0)
 D ADD("Monthly Count of Resolved Exceptions")
"RTN","MPIXRP1",90,0)
 D ADD("-------------------------------------")
"RTN","MPIXRP1",91,0)
 S MONTH=FROM
"RTN","MPIXRP1",92,0)
 F  D  S MONTH=$$ADDMONTH(MONTH) Q:(MONTH>TO)
"RTN","MPIXRP1",93,0)
 .D ADD("    "_$$MONTH($E(MONTH,4,5))_" "_$$YEAR($E(MONTH,1,3))_"   "_$$RJ^MPIXU(+$G(@REPORT@("RESOLVED","TOTAL",$E(MONTH,1,5))),6))
"RTN","MPIXRP1",94,0)
 D ADD(" ")
"RTN","MPIXRP1",95,0)
 ;
"RTN","MPIXRP1",96,0)
 ;write for each case worker the monthy totals
"RTN","MPIXRP1",97,0)
 D ADD("Monthly Count of Resolved Exceptions by Case Worker")
"RTN","MPIXRP1",98,0)
 D ADD("----------------------------------------------------")
"RTN","MPIXRP1",99,0)
 S WORKER=0
"RTN","MPIXRP1",100,0)
 F  S WORKER=$O(@REPORT@("RESOLVED",WORKER)) Q:'WORKER  D
"RTN","MPIXRP1",101,0)
 .N COUNT,MCOUNT S COUNT=0
"RTN","MPIXRP1",102,0)
 .S MONTH=FROM
"RTN","MPIXRP1",103,0)
 .D ADD("    Case Worker:"_$$GETFIELD^MPIEU(200,.01,WORKER))
"RTN","MPIXRP1",104,0)
 .F  D  S MONTH=$$ADDMONTH(MONTH) Q:(MONTH>TO)
"RTN","MPIXRP1",105,0)
 ..S MCOUNT=+$G(@REPORT@("RESOLVED",WORKER,$E(MONTH,1,5)))
"RTN","MPIXRP1",106,0)
 ..Q:'MCOUNT
"RTN","MPIXRP1",107,0)
 ..D ADD("        "_$$MONTH($E(MONTH,4,5))_" "_$$YEAR($E(MONTH,1,3))_"   "_$$RJ^MPIXU(MCOUNT,5))
"RTN","MPIXRP1",108,0)
 ..S COUNT=COUNT+MCOUNT
"RTN","MPIXRP1",109,0)
 .D ADD("          total:   "_$$RJ^MPIXU(COUNT,5))
"RTN","MPIXRP1",110,0)
 D ADD(" ")
"RTN","MPIXRP1",111,0)
 D ADD("**  END OF REPORT **")
"RTN","MPIXRP1",112,0)
 Q
"RTN","MPIXRP1",113,0)
 ;
"RTN","MPIXRP1",114,0)
HEADER(FROM,TO,PAGE) ;
"RTN","MPIXRP1",115,0)
 ;
"RTN","MPIXRP1",116,0)
 S PAGE=$G(PAGE)+1
"RTN","MPIXRP1",117,0)
 Q "Case Worker Statistics for "_$$MONTH($E(FROM,4,5))_" "_$$YEAR($E(FROM,1,3))_" to "_$$MONTH($E(TO,4,5))_" "_$$YEAR($E(TO,1,3))_" as of "_$$FMTE^XLFDT($$DT^XLFDT)_"    Page: "_PAGE
"RTN","MPIXRP1",118,0)
 Q
"RTN","MPIXRP1",119,0)
 ;
"RTN","MPIXRP1",120,0)
YEAR(X) ;change 3 digit FM year to AC
"RTN","MPIXRP1",121,0)
 Q 1700+X
"RTN","MPIXRP1",122,0)
 ;
"RTN","MPIXRP1",123,0)
MONTH(X) ;change format of month from digit to 3 characters
"RTN","MPIXRP1",124,0)
 S X=+X
"RTN","MPIXRP1",125,0)
 Q $S(X=1:"Jan",X=2:"Feb",X=3:"Mar",X=4:"Apr",X=5:"May",X=6:"Jun",X=7:"Jul",X=8:"Aug",X=9:"Sep",X=10:"Oct",X=11:"Nov",X=12:"Dec",1:"")
"RTN","MPIXRP1",126,0)
 ;
"RTN","MPIXRP1",127,0)
ADDMONTH(DATE) ;add one month to the FM date
"RTN","MPIXRP1",128,0)
 N MONTH,YEAR,NEWMONTH
"RTN","MPIXRP1",129,0)
 S MONTH=$E(DATE,4,5)
"RTN","MPIXRP1",130,0)
 S YEAR=$E(DATE,1,3)
"RTN","MPIXRP1",131,0)
 I MONTH<12 D
"RTN","MPIXRP1",132,0)
 .S MONTH=MONTH+1 I ($L(MONTH)<2) S MONTH="0"_MONTH
"RTN","MPIXRP1",133,0)
 E  I MONTH=12 D
"RTN","MPIXRP1",134,0)
 .S MONTH="01",YEAR=YEAR+1 S:($L(YEAR)=1) YEAR="00"_YEAR S:($L(YEAR)=2) YEAR="0"_YEAR
"RTN","MPIXRP1",135,0)
 Q YEAR_MONTH_$E(DATE,6,7)
"RTN","MPIXRP1",136,0)
 ;
"RTN","MPIXRP1",137,0)
ADD(TEXT) ;
"RTN","MPIXRP1",138,0)
 N LINE
"RTN","MPIXRP1",139,0)
 S LINE=+$G(@REPORT@(0))
"RTN","MPIXRP1",140,0)
 S LINE=LINE+1
"RTN","MPIXRP1",141,0)
 S @REPORT@(LINE)=TEXT
"RTN","MPIXRP1",142,0)
 S @REPORT@(0)=LINE+1
"RTN","MPIXRP1",143,0)
 Q
"RTN","MPIXRP1A")
0^215^B9512739
"RTN","MPIXRP1A",1,0)
MPIXRP1A ;ALB/CJM -Case Worker Statistics Report ;12/12/2000
"RTN","MPIXRP1A",2,0)
 ;;1.0; MPI Austin ;;30 Apr 99
"RTN","MPIXRP1A",3,0)
 ;
"RTN","MPIXRP1A",4,0)
REPORT ;
"RTN","MPIXRP1A",5,0)
 N MPIXTO,MPIXFROM
"RTN","MPIXRP1A",6,0)
 ;
"RTN","MPIXRP1A",7,0)
 S MPIXFROM=$$ASKBEGIN()
"RTN","MPIXRP1A",8,0)
 G:'MPIXFROM EXIT
"RTN","MPIXRP1A",9,0)
 S MPIXTO=$$ASKEND(MPIXFROM)
"RTN","MPIXRP1A",10,0)
 G:'MPIXTO EXIT
"RTN","MPIXRP1A",11,0)
 I $$DEVICE() D PRINT(MPIXFROM,MPIXTO)
"RTN","MPIXRP1A",12,0)
EXIT ;
"RTN","MPIXRP1A",13,0)
 Q
"RTN","MPIXRP1A",14,0)
 ;
"RTN","MPIXRP1A",15,0)
DEVICE() ;
"RTN","MPIXRP1A",16,0)
 ;Description: allows the user to select a device.
"RTN","MPIXRP1A",17,0)
 ;Input: none
"RTN","MPIXRP1A",18,0)
 ;
"RTN","MPIXRP1A",19,0)
 ;Output:
"RTN","MPIXRP1A",20,0)
 ;  Function Value - Returns 0 if the user decides not to print or to
"RTN","MPIXRP1A",21,0)
 ;       queue the report, 1 otherwise.
"RTN","MPIXRP1A",22,0)
 ;
"RTN","MPIXRP1A",23,0)
 N OK
"RTN","MPIXRP1A",24,0)
 S OK=1
"RTN","MPIXRP1A",25,0)
 S %ZIS="MQ"
"RTN","MPIXRP1A",26,0)
 D ^%ZIS
"RTN","MPIXRP1A",27,0)
 S:POP OK=0
"RTN","MPIXRP1A",28,0)
 D:OK&$D(IO("Q"))
"RTN","MPIXRP1A",29,0)
 .S ZTRTN="QPRINT^MPIXRP1A",ZTDESC="Case Worker Statistics Report",ZTSAVE("MPIX*")=""
"RTN","MPIXRP1A",30,0)
 .D ^%ZTLOAD
"RTN","MPIXRP1A",31,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","MPIXRP1A",32,0)
 .D HOME^%ZIS
"RTN","MPIXRP1A",33,0)
 .S OK=0
"RTN","MPIXRP1A",34,0)
 Q OK
"RTN","MPIXRP1A",35,0)
 ;
"RTN","MPIXRP1A",36,0)
ASKBEGIN() ;
"RTN","MPIXRP1A",37,0)
 ;Description: Asks the user to enter a beginning date.
"RTN","MPIXRP1A",38,0)
 ;Input: none
"RTN","MPIXRP1A",39,0)
 ;Output: Returns the date as the function value, or 0 if the user does nto select a date
"RTN","MPIXRP1A",40,0)
 ;
"RTN","MPIXRP1A",41,0)
 N DIR,X,Y
"RTN","MPIXRP1A",42,0)
 S DIR(0)="D^::X"
"RTN","MPIXRP1A",43,0)
 S DIR("A")="Enter Beginning Date"
"RTN","MPIXRP1A",44,0)
 S DIR("?",1)="Enter the beginning date to report work statisitcs."
"RTN","MPIXRP1A",45,0)
 S DIR("?")="Statistics will be reported for each month in the requested period."
"RTN","MPIXRP1A",46,0)
 D ^DIR
"RTN","MPIXRP1A",47,0)
 Q:$D(DIRUT) 0
"RTN","MPIXRP1A",48,0)
 Q Y
"RTN","MPIXRP1A",49,0)
 ;
"RTN","MPIXRP1A",50,0)
ASKEND(FROM) ;
"RTN","MPIXRP1A",51,0)
 ;Description: Asks the user to enter an end date.
"RTN","MPIXRP1A",52,0)
 ;Input:
"RTN","MPIXRP1A",53,0)
 ;  FROM - the earliest possible date
"RTN","MPIXRP1A",54,0)
 ;Output: Returns the date as the function value, or 0 if the user does nto select a date
"RTN","MPIXRP1A",55,0)
 ;
"RTN","MPIXRP1A",56,0)
 N DIR,X,Y
"RTN","MPIXRP1A",57,0)
 S DIR(0)="D^::X"
"RTN","MPIXRP1A",58,0)
 S DIR("A")="Enter Ending Date"
"RTN","MPIXRP1A",59,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","MPIXRP1A",60,0)
 S DIR("?",1)="Enter the ending date to report work statisitcs."
"RTN","MPIXRP1A",61,0)
 S DIR("?")="Statistics will be reported for each month in the requested period."
"RTN","MPIXRP1A",62,0)
AGAIN D ^DIR
"RTN","MPIXRP1A",63,0)
 Q:$D(DIRUT) 0
"RTN","MPIXRP1A",64,0)
 I (Y<$G(FROM)) W !,"Date must be no earlier than "_$$FMTE^XLFDT(FROM,"D") G AGAIN
"RTN","MPIXRP1A",65,0)
 Q Y
"RTN","MPIXRP1A",66,0)
 ;
"RTN","MPIXRP1A",67,0)
QPRINT ;
"RTN","MPIXRP1A",68,0)
 ;Description: entry point if queued
"RTN","MPIXRP1A",69,0)
 D PRINT(MPIXFROM,MPIXTO)
"RTN","MPIXRP1A",70,0)
 Q
"RTN","MPIXRP1A",71,0)
 ;
"RTN","MPIXRP1A",72,0)
PRINT(FROM,TO) ;
"RTN","MPIXRP1A",73,0)
 N REPORT,CRT,QUIT,PAGE,LINE
"RTN","MPIXRP1A",74,0)
 S PAGE=0
"RTN","MPIXRP1A",75,0)
 S REPORT="^TMP($J,""MPIX CASE WORKER STATISITICS"")"
"RTN","MPIXRP1A",76,0)
 S QUIT=0
"RTN","MPIXRP1A",77,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","MPIXRP1A",78,0)
 D BUILD^MPIXRP1(REPORT,FROM,TO)
"RTN","MPIXRP1A",79,0)
 U IO
"RTN","MPIXRP1A",80,0)
 I CRT W @IOF
"RTN","MPIXRP1A",81,0)
 D HEADER
"RTN","MPIXRP1A",82,0)
 S LINE=0
"RTN","MPIXRP1A",83,0)
 F  S LINE=$O(@REPORT@(LINE)) Q:'LINE  D LINE($G(@REPORT@(LINE)))
"RTN","MPIXRP1A",84,0)
 ;
"RTN","MPIXRP1A",85,0)
 I CRT,'QUIT D PAUSE
"RTN","MPIXRP1A",86,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIXRP1A",87,0)
 D ^%ZISC
"RTN","MPIXRP1A",88,0)
 K @REPORT
"RTN","MPIXRP1A",89,0)
 Q
"RTN","MPIXRP1A",90,0)
 ;
"RTN","MPIXRP1A",91,0)
HEADER ;
"RTN","MPIXRP1A",92,0)
 ;Input:
"RTN","MPIXRP1A",93,0)
 ;   FROM
"RTN","MPIXRP1A",94,0)
 ;   TO
"RTN","MPIXRP1A",95,0)
 ;   PAGE
"RTN","MPIXRP1A",96,0)
 ;
"RTN","MPIXRP1A",97,0)
 W $$HEADER^MPIXRP1(FROM,TO,.PAGE),!!
"RTN","MPIXRP1A",98,0)
 Q
"RTN","MPIXRP1A",99,0)
 ;
"RTN","MPIXRP1A",100,0)
LINE(LINE) ;
"RTN","MPIXRP1A",101,0)
 ;Description: prints a line. First prints header if at end of page.
"RTN","MPIXRP1A",102,0)
 ;
"RTN","MPIXRP1A",103,0)
 I CRT,($Y>(IOSL-4)) D
"RTN","MPIXRP1A",104,0)
 .D PAUSE
"RTN","MPIXRP1A",105,0)
 .Q:QUIT
"RTN","MPIXRP1A",106,0)
 .W @IOF
"RTN","MPIXRP1A",107,0)
 .D HEADER
"RTN","MPIXRP1A",108,0)
 .W LINE
"RTN","MPIXRP1A",109,0)
 ;
"RTN","MPIXRP1A",110,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","MPIXRP1A",111,0)
 .W @IOF
"RTN","MPIXRP1A",112,0)
 .D HEADER
"RTN","MPIXRP1A",113,0)
 .W LINE
"RTN","MPIXRP1A",114,0)
 ;
"RTN","MPIXRP1A",115,0)
 E  W !,LINE
"RTN","MPIXRP1A",116,0)
 Q
"RTN","MPIXRP1A",117,0)
 ;
"RTN","MPIXRP1A",118,0)
PAUSE   ;
"RTN","MPIXRP1A",119,0)
 ;Description: Screen pause.  Sets QUIT=1 if user decides to quit.
"RTN","MPIXRP1A",120,0)
 ;
"RTN","MPIXRP1A",121,0)
 N DIR,X,Y
"RTN","MPIXRP1A",122,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","MPIXRP1A",123,0)
 S DIR(0)="E" D ^DIR
"RTN","MPIXRP1A",124,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","MPIXRP1A",125,0)
 Q
"RTN","MPIXRP1B")
0^216^B1057317
"RTN","MPIXRP1B",1,0)
MPIXRP1B ;ALB/CJM -Case Worker Statistics Report (E-MAIL) ;12/12/2000
"RTN","MPIXRP1B",2,0)
 ;;1.0; MPI Austin ;;30 Apr 99
"RTN","MPIXRP1B",3,0)
 ;
"RTN","MPIXRP1B",4,0)
REPORT ;
"RTN","MPIXRP1B",5,0)
 N MPIXTO,MPIXFROM,REPORT
"RTN","MPIXRP1B",6,0)
 S MPIXTO=$$DT^XLFDT
"RTN","MPIXRP1B",7,0)
 S MPIXFROM=$$FMADD^XLFDT(MPIXTO,-60)
"RTN","MPIXRP1B",8,0)
 S REPORT="^TMP($J,""MPIX CASE WORKER STATISITICS"")"
"RTN","MPIXRP1B",9,0)
 D BUILD^MPIXRP1(REPORT,MPIXFROM,MPIXTO)
"RTN","MPIXRP1B",10,0)
 S @REPORT@(.5)=$$HEADER^MPIXRP1(MPIXFROM,MPIXTO,0)
"RTN","MPIXRP1B",11,0)
 D MAIL
"RTN","MPIXRP1B",12,0)
 K @REPORT
"RTN","MPIXRP1B",13,0)
 Q
"RTN","MPIXRP1B",14,0)
 ;
"RTN","MPIXRP1B",15,0)
MAIL ;
"RTN","MPIXRP1B",16,0)
 ;Description: Sends the message located at @RGMSG to the MPI Exception Report Mail Group
"RTN","MPIXRP1B",17,0)
 ;Input: message at @REPORT
"RTN","MPIXRP1B",18,0)
 ;Output: none
"RTN","MPIXRP1B",19,0)
        ;
"RTN","MPIXRP1B",20,0)
 N XMY,XMSUB,XMDUZ,XMTEXT,XMZ,XMDUN,DIFROM
"RTN","MPIXRP1B",21,0)
 S XMDUZ="Austin MPI"
"RTN","MPIXRP1B",22,0)
 S XMY(.5)=""
"RTN","MPIXRP1B",23,0)
 S XMY("G.MPI EXCEPTION REPORTS")=""
"RTN","MPIXRP1B",24,0)
 S XMTEXT=$P(REPORT,")")_","
"RTN","MPIXRP1B",25,0)
 S XMSUB="MPI Case Worker Statisitcs Report"
"RTN","MPIXRP1B",26,0)
 D ^XMD
"RTN","MPIXRP1B",27,0)
 Q
"RTN","MPIXRP2")
0^217^B32640983
"RTN","MPIXRP2",1,0)
MPIXRP2 ;ALB/CJM -Exception Type Statistics Report (continued) ;12/12/200
"RTN","MPIXRP2",2,0)
 ;;1.0; MPI Austin ;;30 Apr 99
"RTN","MPIXRP2",3,0)
 ;
"RTN","MPIXRP2",4,0)
BUILD(REPORT,FROM,TO) ;
"RTN","MPIXRP2",5,0)
 ;Description: Fetches the needed statistics and writes the report body
"RTN","MPIXRP2",6,0)
 ;to @REPORT, butdoes not handle the display.
"RTN","MPIXRP2",7,0)
 ;
"RTN","MPIXRP2",8,0)
 ;Input:
"RTN","MPIXRP2",9,0)
 ;  REPORT - @REPORT is the global location to place the report
"RTN","MPIXRP2",10,0)
 ;  FROM - month/year to start in FM format
"RTN","MPIXRP2",11,0)
 ;  TO   - month/year to end in FM format (optional, DT assumed)
"RTN","MPIXRP2",12,0)
 ;Output:Report contents written to @REPORT
"RTN","MPIXRP2",13,0)
 ;
"RTN","MPIXRP2",14,0)
 K @REPORT
"RTN","MPIXRP2",15,0)
 S:'$G(TO) TO=$$DT^XLFDT
"RTN","MPIXRP2",16,0)
 S $E(FROM,6,7)="00"
"RTN","MPIXRP2",17,0)
 S $E(TO,6,7)="32"
"RTN","MPIXRP2",18,0)
 D COUNT(REPORT,FROM,TO)
"RTN","MPIXRP2",19,0)
 D WRITE(REPORT,FROM,TO)
"RTN","MPIXRP2",20,0)
 Q
"RTN","MPIXRP2",21,0)
 ;
"RTN","MPIXRP2",22,0)
COUNT(REPORT,FROM,TO) ;
"RTN","MPIXRP2",23,0)
 ;Description: Gathers the needed statistics.
"RTN","MPIXRP2",24,0)
 ;Input:
"RTN","MPIXRP2",25,0)
 ;  REPORT - @REPORT is the global location to place the report
"RTN","MPIXRP2",26,0)
 ;  FROM - month/year to start in FM format
"RTN","MPIXRP2",27,0)
 ;  TO   - month/year to end in FM format
"RTN","MPIXRP2",28,0)
 ;Output:
"RTN","MPIXRP2",29,0)
 ;   @REPORT@("TOTAL")=<count of all exceptions for reporting period>
"RTN","MPIXRP2",30,0)
 ;   @REPORT@("MSG",<month>)=<count of exceptions for a msg type for a month
"RTN","MPIXRP2",31,0)
 ;   @REPORT@("MSG")=<count of exceptions for a msg type for reporting period
"RTN","MPIXRP2",32,0)
 ;   @REPORT@("EX",<month>)=<count of exceptions for an exception type for a month
"RTN","MPIXRP2",33,0)
 ;   @REPORT@("EX")=<count of exceptions for an exception type for reporting period
"RTN","MPIXRP2",34,0)
 ;   @REPORT@("MSG/EX",<application>,<exception>)=<count of exceptions for an msg type/exception type for reporting period
"RTN","MPIXRP2",35,0)
 ;   @REPORT@("MSG/EX",<application>,<exception>,<month>)=<count of exceptions for an msg type/exception type for a month
"RTN","MPIXRP2",36,0)
 ;
"RTN","MPIXRP2",37,0)
 N DATE
"RTN","MPIXRP2",38,0)
 S DATE=FROM
"RTN","MPIXRP2",39,0)
 F  S DATE=$O(^MPI(985.9,"B",DATE)) Q:'DATE  Q:(DATE>TO)  D
"RTN","MPIXRP2",40,0)
 .N IEN
"RTN","MPIXRP2",41,0)
 .S IEN=0
"RTN","MPIXRP2",42,0)
 .F  S IEN=$O(^MPI(985.9,"B",DATE,IEN)) Q:'IEN  D
"RTN","MPIXRP2",43,0)
 ..N EXCEPT,MSG
"RTN","MPIXRP2",44,0)
 ..S EXCEPT=$$EXCEPT^MPIXU(IEN)
"RTN","MPIXRP2",45,0)
 ..S:(EXCEPT="") EXCEPT="?"
"RTN","MPIXRP2",46,0)
 ..S MSG=$$APP^MPIXU(IEN)_" "_$$MSGTYPE^MPIXU(IEN)_"~"_$$EVENT^MPIXU(IEN)
"RTN","MPIXRP2",47,0)
 ..S @REPORT@("TOTAL")=$G(@REPORT@("TOTAL"))+1
"RTN","MPIXRP2",48,0)
 ..S @REPORT@("TOTAL",$E(DATE,1,5))=$G(@REPORT@("TOTAL",$E(DATE,1,5)))+1
"RTN","MPIXRP2",49,0)
 ..S @REPORT@("EX",EXCEPT)=$G(@REPORT@("EX",EXCEPT))+1
"RTN","MPIXRP2",50,0)
 ..S @REPORT@("EX",EXCEPT,$E(DATE,1,5))=$G(@REPORT@("EX",EXCEPT,$E(DATE,1,5)))+1
"RTN","MPIXRP2",51,0)
 ..S @REPORT@("MSG")=$G(@REPORT@("MSG"))+1
"RTN","MPIXRP2",52,0)
 ..S @REPORT@("MSG",MSG)=$G(@REPORT@("MSG",MSG))+1
"RTN","MPIXRP2",53,0)
 ..S @REPORT@("MSG",MSG,$E(DATE,1,5))=$G(@REPORT@("MSG",MSG,$E(DATE,1,5)))+1
"RTN","MPIXRP2",54,0)
 ..S @REPORT@("MSG/EX",MSG,EXCEPT)=$G(@REPORT@("MSG/EX",MSG,EXCEPT))+1
"RTN","MPIXRP2",55,0)
 ..;S @REPORT@("MSG/EX",MSG,EXCEPT,$E(DATE,1,5))=$G(@REPORT@("MSG/EX",MSG,EXCEPT,$E(DATE,1,3)))+1
"RTN","MPIXRP2",56,0)
 ;
"RTN","MPIXRP2",57,0)
 Q
"RTN","MPIXRP2",58,0)
 ;
"RTN","MPIXRP2",59,0)
WRITE(REPORT,FROM,TO) ;
"RTN","MPIXRP2",60,0)
 ;Description: Using the statisics compiled by COUNT(), writes the body of the report to @REPORT.
"RTN","MPIXRP2",61,0)
 ;Input:
"RTN","MPIXRP2",62,0)
 ;  REPORT - @REPORT contains the needed statistics
"RTN","MPIXRP2",63,0)
 ;  FROM - month/year to start in FM format
"RTN","MPIXRP2",64,0)
 ;  TO   - month/year to end in FM format
"RTN","MPIXRP2",65,0)
 ;Output:Report contents written to @REPORT
"RTN","MPIXRP2",66,0)
 ;
"RTN","MPIXRP2",67,0)
 N MONTH,EXCEPT,MSG
"RTN","MPIXRP2",68,0)
 D ADD("Total Received Exceptions:           "_$$RJ^MPIXU(+$G(@REPORT@("TOTAL")),6))
"RTN","MPIXRP2",69,0)
 D ADD(" ")
"RTN","MPIXRP2",70,0)
 ;
"RTN","MPIXRP2",71,0)
 ;
"RTN","MPIXRP2",72,0)
 ;write monthly count of exceptons
"RTN","MPIXRP2",73,0)
 D ADD("Monthly Count of Received Exceptions")
"RTN","MPIXRP2",74,0)
 D ADD("-------------------------------------")
"RTN","MPIXRP2",75,0)
 S MONTH=FROM
"RTN","MPIXRP2",76,0)
 F  D  S MONTH=$$ADDMONTH(MONTH) Q:(MONTH>TO)
"RTN","MPIXRP2",77,0)
 .D ADD("    "_$$MONTH($E(MONTH,4,5))_" "_$$YEAR($E(MONTH,1,3))_"   "_$$RJ^MPIXU(+$G(@REPORT@("TOTAL",$E(MONTH,1,5))),6))
"RTN","MPIXRP2",78,0)
 D ADD(" ")
"RTN","MPIXRP2",79,0)
 ;
"RTN","MPIXRP2",80,0)
 ;write for each exception type the monthy totals
"RTN","MPIXRP2",81,0)
 D ADD("Monthly Count of Received Exceptions by Exception Type")
"RTN","MPIXRP2",82,0)
 D ADD("------------------------------------------------------")
"RTN","MPIXRP2",83,0)
 S EXCEPT=""
"RTN","MPIXRP2",84,0)
 F  S EXCEPT=$O(@REPORT@("EX",EXCEPT)) Q:'$L(EXCEPT)  D
"RTN","MPIXRP2",85,0)
 .N MCOUNT,TYPEIEN,TYPE
"RTN","MPIXRP2",86,0)
 .S MONTH=FROM
"RTN","MPIXRP2",87,0)
 .I EXCEPT S TYPEIEN=+$O(^RGHL7(991.11,"B",EXCEPT,"")),TYPE=$$LJ^MPIXU(EXCEPT_"/"_$S(TYPEIEN:$G(^RGHL7(991.11,TYPEIEN,10)),1:" "),40) ;**DRI added ,""
"RTN","MPIXRP2",88,0)
 .D ADD("    Exception Type:"_TYPE)
"RTN","MPIXRP2",89,0)
 .F  D  S MONTH=$$ADDMONTH(MONTH) Q:(MONTH>TO)
"RTN","MPIXRP2",90,0)
 ..S MCOUNT=+$G(@REPORT@("EX",EXCEPT,$E(MONTH,1,5)))
"RTN","MPIXRP2",91,0)
 ..Q:'MCOUNT
"RTN","MPIXRP2",92,0)
 ..D ADD("        "_$$MONTH($E(MONTH,4,5))_" "_$$YEAR($E(MONTH,1,3))_"   "_$$RJ^MPIXU(MCOUNT,5))
"RTN","MPIXRP2",93,0)
 .D ADD("          total:   "_$$RJ^MPIXU($G(@REPORT@("EX",EXCEPT)),5))
"RTN","MPIXRP2",94,0)
 D ADD(" ")
"RTN","MPIXRP2",95,0)
 ;
"RTN","MPIXRP2",96,0)
 ;write for each message type the monthy count
"RTN","MPIXRP2",97,0)
 D ADD("Monthly Count of Received Exceptions by Message Type")
"RTN","MPIXRP2",98,0)
 D ADD("------------------------------------------------------")
"RTN","MPIXRP2",99,0)
 S MSG=""
"RTN","MPIXRP2",100,0)
 F  S MSG=$O(@REPORT@("MSG",MSG)) Q:'$L(MSG)  D
"RTN","MPIXRP2",101,0)
 .N MCOUNT
"RTN","MPIXRP2",102,0)
 .S MONTH=FROM
"RTN","MPIXRP2",103,0)
 .D ADD("    Message Type:"_MSG)
"RTN","MPIXRP2",104,0)
 .F  D  S MONTH=$$ADDMONTH(MONTH) Q:(MONTH>TO)
"RTN","MPIXRP2",105,0)
 ..S MCOUNT=+$G(@REPORT@("MSG",MSG,$E(MONTH,1,5)))
"RTN","MPIXRP2",106,0)
 ..Q:'MCOUNT
"RTN","MPIXRP2",107,0)
 ..D ADD("        "_$$MONTH($E(MONTH,4,5))_" "_$$YEAR($E(MONTH,1,3))_"   "_$$RJ^MPIXU(MCOUNT,5))
"RTN","MPIXRP2",108,0)
 .D ADD("          total:   "_$$RJ^MPIXU($G(@REPORT@("MSG",MSG)),5))
"RTN","MPIXRP2",109,0)
 D ADD(" ")
"RTN","MPIXRP2",110,0)
 ;
"RTN","MPIXRP2",111,0)
 ;write count for each message type/exception type
"RTN","MPIXRP2",112,0)
 D ADD("Count of Received Exceptions by Message Type and Exception Type")
"RTN","MPIXRP2",113,0)
 D ADD("---------------------------------------------------------------")
"RTN","MPIXRP2",114,0)
 S MSG=""
"RTN","MPIXRP2",115,0)
 F  S MSG=$O(@REPORT@("MSG/EX",MSG)) Q:'$L(MSG)  D  D ADD(" ")
"RTN","MPIXRP2",116,0)
 .D ADD("Message Type: "_MSG)
"RTN","MPIXRP2",117,0)
 .S EXCEPT=""
"RTN","MPIXRP2",118,0)
 .F  S EXCEPT=$O(@REPORT@("MSG/EX",MSG,EXCEPT)) Q:'$L(EXCEPT)  D
"RTN","MPIXRP2",119,0)
 ..N TYPE,TYPEIEN
"RTN","MPIXRP2",120,0)
 ..I EXCEPT S TYPEIEN=+$O(^RGHL7(991.11,"B",EXCEPT,"")),TYPE=$$LJ^MPIXU(EXCEPT_"/"_$S(TYPEIEN:$G(^RGHL7(991.11,TYPEIEN,10)),1:" "),40) ;**DRI added ,""
"RTN","MPIXRP2",121,0)
 ..D ADD("       Exception Type: "_TYPE_"   Count: "_$$RJ^MPIXU($G(@REPORT@("MSG/EX",MSG,EXCEPT)),5))
"RTN","MPIXRP2",122,0)
 D ADD(" ")
"RTN","MPIXRP2",123,0)
 D ADD("**  END OF REPORT **")
"RTN","MPIXRP2",124,0)
 Q
"RTN","MPIXRP2",125,0)
 ;
"RTN","MPIXRP2",126,0)
HEADER(FROM,TO,PAGE) ;
"RTN","MPIXRP2",127,0)
 ;
"RTN","MPIXRP2",128,0)
 S PAGE=$G(PAGE)+1
"RTN","MPIXRP2",129,0)
 Q "Exception Type Statistics for "_$$MONTH($E(FROM,4,5))_" "_$$YEAR($E(FROM,1,3))_" to "_$$MONTH($E(TO,4,5))_" "_$$YEAR($E(TO,1,3))_" as of "_$$FMTE^XLFDT($$DT^XLFDT)_"    Page: "_PAGE
"RTN","MPIXRP2",130,0)
 Q
"RTN","MPIXRP2",131,0)
 ;
"RTN","MPIXRP2",132,0)
YEAR(X) ;change 3 digit FM year to AC
"RTN","MPIXRP2",133,0)
 Q 1700+X
"RTN","MPIXRP2",134,0)
 ;
"RTN","MPIXRP2",135,0)
MONTH(X) ;change format of month from digit to 3 characters
"RTN","MPIXRP2",136,0)
 S X=+X
"RTN","MPIXRP2",137,0)
 Q $S(X=1:"Jan",X=2:"Feb",X=3:"Mar",X=4:"Apr",X=5:"May",X=6:"Jun",X=7:"Jul",X=8:"Aug",X=9:"Sep",X=10:"Oct",X=11:"Nov",X=12:"Dec",1:"")
"RTN","MPIXRP2",138,0)
 ;
"RTN","MPIXRP2",139,0)
ADDMONTH(DATE) ;add one month to the FM date
"RTN","MPIXRP2",140,0)
 N MONTH,YEAR,NEWMONTH
"RTN","MPIXRP2",141,0)
 S MONTH=$E(DATE,4,5)
"RTN","MPIXRP2",142,0)
 S YEAR=$E(DATE,1,3)
"RTN","MPIXRP2",143,0)
 I MONTH<12 D
"RTN","MPIXRP2",144,0)
 .S MONTH=MONTH+1 I ($L(MONTH)<2) S MONTH="0"_MONTH
"RTN","MPIXRP2",145,0)
 E  I MONTH=12 D
"RTN","MPIXRP2",146,0)
 .S MONTH="01",YEAR=YEAR+1 S:($L(YEAR)=1) YEAR="00"_YEAR S:($L(YEAR)=2) YEAR="0"_YEAR
"RTN","MPIXRP2",147,0)
 Q YEAR_MONTH_$E(DATE,6,7)
"RTN","MPIXRP2",148,0)
 ;
"RTN","MPIXRP2",149,0)
ADD(TEXT) ;
"RTN","MPIXRP2",150,0)
 N LINE
"RTN","MPIXRP2",151,0)
 S LINE=+$G(@REPORT@(0))
"RTN","MPIXRP2",152,0)
 S LINE=LINE+1
"RTN","MPIXRP2",153,0)
 S @REPORT@(LINE)=TEXT
"RTN","MPIXRP2",154,0)
 S @REPORT@(0)=LINE+1
"RTN","MPIXRP2",155,0)
 Q
"RTN","MPIXRP2A")
0^218^B9579570
"RTN","MPIXRP2A",1,0)
MPIXRP2A ;ALB/CJM -Exception Type Statistics Report ;12/12/2000
"RTN","MPIXRP2A",2,0)
 ;;1.0; MPI Austin ;;30 Apr 99
"RTN","MPIXRP2A",3,0)
 ;
"RTN","MPIXRP2A",4,0)
REPORT ;
"RTN","MPIXRP2A",5,0)
 N MPIXTO,MPIXFROM
"RTN","MPIXRP2A",6,0)
 ;
"RTN","MPIXRP2A",7,0)
 S MPIXFROM=$$ASKBEGIN()
"RTN","MPIXRP2A",8,0)
 G:'MPIXFROM EXIT
"RTN","MPIXRP2A",9,0)
 S MPIXTO=$$ASKEND(MPIXFROM)
"RTN","MPIXRP2A",10,0)
 G:'MPIXTO EXIT
"RTN","MPIXRP2A",11,0)
 I $$DEVICE() D PRINT(MPIXFROM,MPIXTO)
"RTN","MPIXRP2A",12,0)
EXIT ;
"RTN","MPIXRP2A",13,0)
 Q
"RTN","MPIXRP2A",14,0)
 ;
"RTN","MPIXRP2A",15,0)
DEVICE() ;
"RTN","MPIXRP2A",16,0)
 ;Description: allows the user to select a device.
"RTN","MPIXRP2A",17,0)
 ;Input: none
"RTN","MPIXRP2A",18,0)
 ;
"RTN","MPIXRP2A",19,0)
 ;Output:
"RTN","MPIXRP2A",20,0)
 ;  Function Value - Returns 0 if the user decides not to print or to
"RTN","MPIXRP2A",21,0)
 ;       queue the report, 1 otherwise.
"RTN","MPIXRP2A",22,0)
 ;
"RTN","MPIXRP2A",23,0)
 N OK
"RTN","MPIXRP2A",24,0)
 S OK=1
"RTN","MPIXRP2A",25,0)
 S %ZIS="MQ"
"RTN","MPIXRP2A",26,0)
 D ^%ZIS
"RTN","MPIXRP2A",27,0)
 S:POP OK=0
"RTN","MPIXRP2A",28,0)
 D:OK&$D(IO("Q"))
"RTN","MPIXRP2A",29,0)
 .S ZTRTN="QPRINT^MPIXRP1A",ZTDESC="Exception Type Statistics Report",ZTSAVE("MPIX*")=""
"RTN","MPIXRP2A",30,0)
 .D ^%ZTLOAD
"RTN","MPIXRP2A",31,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","MPIXRP2A",32,0)
 .D HOME^%ZIS
"RTN","MPIXRP2A",33,0)
 .S OK=0
"RTN","MPIXRP2A",34,0)
 Q OK
"RTN","MPIXRP2A",35,0)
 ;
"RTN","MPIXRP2A",36,0)
ASKBEGIN() ;
"RTN","MPIXRP2A",37,0)
 ;Description: Asks the user to enter a beginning date.
"RTN","MPIXRP2A",38,0)
 ;Input: none
"RTN","MPIXRP2A",39,0)
 ;Output: Returns the date as the function value, or 0 if the user does nto select a date
"RTN","MPIXRP2A",40,0)
 ;
"RTN","MPIXRP2A",41,0)
 N DIR,X,Y
"RTN","MPIXRP2A",42,0)
 S DIR(0)="D^::X"
"RTN","MPIXRP2A",43,0)
 S DIR("A")="Enter Beginning Date"
"RTN","MPIXRP2A",44,0)
 S DIR("?",1)="Enter the beginning date to report work statisitcs."
"RTN","MPIXRP2A",45,0)
 S DIR("?")="Statistics will be reported for each month in the requested period."
"RTN","MPIXRP2A",46,0)
 D ^DIR
"RTN","MPIXRP2A",47,0)
 Q:$D(DIRUT) 0
"RTN","MPIXRP2A",48,0)
 Q Y
"RTN","MPIXRP2A",49,0)
 ;
"RTN","MPIXRP2A",50,0)
ASKEND(FROM) ;
"RTN","MPIXRP2A",51,0)
 ;Description: Asks the user to enter an end date.
"RTN","MPIXRP2A",52,0)
 ;Input:
"RTN","MPIXRP2A",53,0)
 ;  FROM - the earliest possible date
"RTN","MPIXRP2A",54,0)
 ;Output: Returns the date as the function value, or 0 if the user does nto select a date
"RTN","MPIXRP2A",55,0)
 ;
"RTN","MPIXRP2A",56,0)
 N DIR,X,Y
"RTN","MPIXRP2A",57,0)
 S DIR(0)="D^::X"
"RTN","MPIXRP2A",58,0)
 S DIR("A")="Enter Ending Date"
"RTN","MPIXRP2A",59,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","MPIXRP2A",60,0)
 S DIR("?",1)="Enter the ending date to report work statisitcs."
"RTN","MPIXRP2A",61,0)
 S DIR("?")="Statistics will be reported for each month in the requested period."
"RTN","MPIXRP2A",62,0)
AGAIN D ^DIR
"RTN","MPIXRP2A",63,0)
 Q:$D(DIRUT) 0
"RTN","MPIXRP2A",64,0)
 I (Y<$G(FROM)) W !,"Date must be no earlier than "_$$FMTE^XLFDT(FROM,"D") G AGAIN
"RTN","MPIXRP2A",65,0)
 Q Y
"RTN","MPIXRP2A",66,0)
 ;
"RTN","MPIXRP2A",67,0)
QPRINT ;
"RTN","MPIXRP2A",68,0)
 ;Description: entry point if queued
"RTN","MPIXRP2A",69,0)
 D PRINT(MPIXFROM,MPIXTO)
"RTN","MPIXRP2A",70,0)
 Q
"RTN","MPIXRP2A",71,0)
 ;
"RTN","MPIXRP2A",72,0)
PRINT(FROM,TO) ;
"RTN","MPIXRP2A",73,0)
 N REPORT,CRT,QUIT,PAGE,LINE
"RTN","MPIXRP2A",74,0)
 S PAGE=0
"RTN","MPIXRP2A",75,0)
 S REPORT="^TMP($J,""MPIX EXCEPTION TYPE STATISITICS"")"
"RTN","MPIXRP2A",76,0)
 S QUIT=0
"RTN","MPIXRP2A",77,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","MPIXRP2A",78,0)
 D BUILD^MPIXRP2(REPORT,FROM,TO)
"RTN","MPIXRP2A",79,0)
 U IO
"RTN","MPIXRP2A",80,0)
 I CRT W @IOF
"RTN","MPIXRP2A",81,0)
 D HEADER
"RTN","MPIXRP2A",82,0)
 S LINE=0
"RTN","MPIXRP2A",83,0)
 F  S LINE=$O(@REPORT@(LINE)) Q:'LINE  D LINE($G(@REPORT@(LINE)))
"RTN","MPIXRP2A",84,0)
 ;
"RTN","MPIXRP2A",85,0)
 I CRT,'QUIT D PAUSE
"RTN","MPIXRP2A",86,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIXRP2A",87,0)
 D ^%ZISC
"RTN","MPIXRP2A",88,0)
 K @REPORT
"RTN","MPIXRP2A",89,0)
 Q
"RTN","MPIXRP2A",90,0)
 ;
"RTN","MPIXRP2A",91,0)
HEADER ;
"RTN","MPIXRP2A",92,0)
 ;Input:
"RTN","MPIXRP2A",93,0)
 ;   FROM
"RTN","MPIXRP2A",94,0)
 ;   TO
"RTN","MPIXRP2A",95,0)
 ;   PAGE
"RTN","MPIXRP2A",96,0)
 ;
"RTN","MPIXRP2A",97,0)
 W $$HEADER^MPIXRP2(FROM,TO,.PAGE),!!
"RTN","MPIXRP2A",98,0)
 Q
"RTN","MPIXRP2A",99,0)
 ;
"RTN","MPIXRP2A",100,0)
LINE(LINE) ;
"RTN","MPIXRP2A",101,0)
 ;Description: prints a line. First prints header if at end of page.
"RTN","MPIXRP2A",102,0)
 ;
"RTN","MPIXRP2A",103,0)
 I CRT,($Y>(IOSL-4)) D
"RTN","MPIXRP2A",104,0)
 .D PAUSE
"RTN","MPIXRP2A",105,0)
 .Q:QUIT
"RTN","MPIXRP2A",106,0)
 .W @IOF
"RTN","MPIXRP2A",107,0)
 .D HEADER
"RTN","MPIXRP2A",108,0)
 .W LINE
"RTN","MPIXRP2A",109,0)
 ;
"RTN","MPIXRP2A",110,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","MPIXRP2A",111,0)
 .W @IOF
"RTN","MPIXRP2A",112,0)
 .D HEADER
"RTN","MPIXRP2A",113,0)
 .W LINE
"RTN","MPIXRP2A",114,0)
 ;
"RTN","MPIXRP2A",115,0)
 E  W !,LINE
"RTN","MPIXRP2A",116,0)
 Q
"RTN","MPIXRP2A",117,0)
 ;
"RTN","MPIXRP2A",118,0)
PAUSE   ;
"RTN","MPIXRP2A",119,0)
 ;Description: Screen pause.  Sets QUIT=1 if user decides to quit.
"RTN","MPIXRP2A",120,0)
 ;
"RTN","MPIXRP2A",121,0)
 N DIR,X,Y
"RTN","MPIXRP2A",122,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","MPIXRP2A",123,0)
 S DIR(0)="E" D ^DIR
"RTN","MPIXRP2A",124,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","MPIXRP2A",125,0)
 Q
"RTN","MPIXSE")
0^219^B17299070
"RTN","MPIXSE",1,0)
MPIXSE ;BIR/CML-Search Exception Utilities ;7/9/02
"RTN","MPIXSE",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**17,27**;30 Apr 99
"RTN","MPIXSE",3,0)
 ;
"RTN","MPIXSE",4,0)
 W !!,"This option will allow you to search the MPI SERVER EXCEPTIONS file (#985.9)"
"RTN","MPIXSE",5,0)
 W !,"for any exceptions involving a specified ICN or SSN (can also be a pseudo-SSN)."
"RTN","MPIXSE",6,0)
 W !!,"NOTE: You may select to omit or include exceptions assigned to the POSTMASTER."
"RTN","MPIXSE",7,0)
 W !,"Exceptions will be displayed regardless of STATUS."
"RTN","MPIXSE",8,0)
 ;
"RTN","MPIXSE",9,0)
 S ^XTMP("MPIX",0)=$$FMADD^XLFDT(DT,30)_"^"_$$NOW^XLFDT_"^MASTER PATIENT INDEX AUSTIN"
"RTN","MPIXSE",10,0)
 ;
"RTN","MPIXSE",11,0)
ASK1 ;Ask if POSTMASTER exceptions should be included
"RTN","MPIXSE",12,0)
 W !!
"RTN","MPIXSE",13,0)
 K DIR S PM=0
"RTN","MPIXSE",14,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you want to include POSTMASTER (auto-resolved) exceptions"
"RTN","MPIXSE",15,0)
 D ^DIR K DIR
"RTN","MPIXSE",16,0)
 I $D(DIRUT)!($D(DTOUT))!($D(DUOUT)) G QUIT
"RTN","MPIXSE",17,0)
 I +Y=1 S PM=1
"RTN","MPIXSE",18,0)
 ;
"RTN","MPIXSE",19,0)
ASK2 ;Ask for ICN or SSN
"RTN","MPIXSE",20,0)
 S QFLG=0
"RTN","MPIXSE",21,0)
 K DIR,DIRUT,DTOUT,DUOUT,ICN,SSN,SUB
"RTN","MPIXSE",22,0)
 W ! S DIR(0)="FO:9:10",DIR("A")="Select ICN or SSN"
"RTN","MPIXSE",23,0)
 S DIR("?",1)="Enter the Integration Control Number"
"RTN","MPIXSE",24,0)
 S DIR("?")="OR the Social Security Number."
"RTN","MPIXSE",25,0)
 D ^DIR K DIR
"RTN","MPIXSE",26,0)
 I $D(DIRUT)!($D(DTOUT))!($D(DUOUT)) G QUIT
"RTN","MPIXSE",27,0)
 I $E(Y)=" ",$D(^XTMP("MPIX","PICK",DUZ)) S Y=^XTMP("MPIX","PICK",DUZ) W " ",Y
"RTN","MPIXSE",28,0)
 ;
"RTN","MPIXSE",29,0)
 S SUB=$S(Y?9N."P":"SSN",Y?10N:"ICN",1:"")
"RTN","MPIXSE",30,0)
 I $G(SUB)']"" W " ??" G ASK1
"RTN","MPIXSE",31,0)
 ;
"RTN","MPIXSE",32,0)
 S ^XTMP("MPIX","PICK",DUZ)=Y
"RTN","MPIXSE",33,0)
 ;ICN entered
"RTN","MPIXSE",34,0)
 I SUB="ICN" D  I QFLG G ASK1
"RTN","MPIXSE",35,0)
 .S ICN=Y
"RTN","MPIXSE",36,0)
 .I '$O(^MPI(985.9,"ICN",ICN,0)) W !!,"There are no exceptions identified for ICN "_ICN_"." S QFLG=1 Q
"RTN","MPIXSE",37,0)
 I $D(ICN) S LP=ICN G COMP
"RTN","MPIXSE",38,0)
 ;
"RTN","MPIXSE",39,0)
 ;SSN entered
"RTN","MPIXSE",40,0)
 I SUB="SSN" D  I QFLG G ASK1
"RTN","MPIXSE",41,0)
 .S SSN=Y
"RTN","MPIXSE",42,0)
 .I '$O(^MPI(985.9,"SSN",SSN,0)) W !!,"There are no exceptions identified for SSN "_SSN_"." S QFLG=1 Q
"RTN","MPIXSE",43,0)
 I $D(SSN) S LP=SSN G COMP
"RTN","MPIXSE",44,0)
 ;
"RTN","MPIXSE",45,0)
COMP ;compile data
"RTN","MPIXSE",46,0)
 K ^XTMP("MPIXSE",$J)
"RTN","MPIXSE",47,0)
 S (CNT,TRKDA)=0 F  S TRKDA=$O(^MPI(985.9,SUB,LP,TRKDA)) Q:'TRKDA  D
"RTN","MPIXSE",48,0)
 .S CW=$$GET1^DIQ(985.9,TRKDA_",",.07,"E")
"RTN","MPIXSE",49,0)
 .I CW="POSTMASTER" I 'PM Q
"RTN","MPIXSE",50,0)
 .S CNT=CNT+1,^XTMP("MPIXSE",$J,SUB,TRKDA)=""
"RTN","MPIXSE",51,0)
 ;
"RTN","MPIXSE",52,0)
PRT ;Print data
"RTN","MPIXSE",53,0)
 S $P(LN,"=",81)="",$P(LN2,"-",81)=""
"RTN","MPIXSE",54,0)
 W @IOF,!,"Exception Report for ",$S(SUB="ICN":"ICN #",1:"SSN #"),LP,?40,"[",CNT," exception(s) identified]"
"RTN","MPIXSE",55,0)
 W !,"Printed: ",$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)),!,LN
"RTN","MPIXSE",56,0)
 ;
"RTN","MPIXSE",57,0)
 I '$D(^XTMP("MPIXSE",$J)) W !!,"No data found for ",$S(SUB="ICN ":"ICN",1:"SSN "),LP G QUIT
"RTN","MPIXSE",58,0)
 ;
"RTN","MPIXSE",59,0)
 S (CNT,TRKDA)=0 F  S TRKDA=$O(^XTMP("MPIXSE",$J,SUB,TRKDA)) Q:'TRKDA  D
"RTN","MPIXSE",60,0)
 .S CNT=CNT+1 I CNT>1 W !,LN2
"RTN","MPIXSE",61,0)
 .D SET
"RTN","MPIXSE",62,0)
 .W !,"Caseworker     : ",CW
"RTN","MPIXSE",63,0)
 .W !,"Tracking Number: ",TRKDA,?46,"Date Received : ",DTREC
"RTN","MPIXSE",64,0)
 .W !,"Status         : ",STATUS,?46,"Date Resolved : ",DTRES
"RTN","MPIXSE",65,0)
 .W !,"Site Rec'd From: ",SITEFROM,?46,"HL7 Message ID: ",MSGID
"RTN","MPIXSE",66,0)
 .W !!,"Patient Name: ",PTNM,?46,"SSN: ",PTSSN
"RTN","MPIXSE",67,0)
 .W !,"CMOR        : ",CMOR,?46,"ICN: ",ICN
"RTN","MPIXSE",68,0)
 .W !!,"Exception Text:",!,EXCTXT
"RTN","MPIXSE",69,0)
 .W !!,"Processing Notes:"
"RTN","MPIXSE",70,0)
 .S TXT=0 F  S TXT=$O(^MPI(985.9,TRKDA,4,TXT)) Q:'TXT  D
"RTN","MPIXSE",71,0)
 ..W !,^MPI(985.9,TRKDA,4,TXT,0)
"RTN","MPIXSE",72,0)
 ;
"RTN","MPIXSE",73,0)
 W !! S DIR(0)="E" D ^DIR K DIR
"RTN","MPIXSE",74,0)
 ;
"RTN","MPIXSE",75,0)
QUIT ;
"RTN","MPIXSE",76,0)
 K ^XTMP("MPIXSE",$J)
"RTN","MPIXSE",77,0)
 K CMOR,CNT,CW,DIR,DIRUT,DTOUT,DTREC,DTRES,DUOUT,EXCTXT,ICN,LN,LN2,LP
"RTN","MPIXSE",78,0)
 K MSGID,PTNM,PTSSN,QFLG,SITEFROM,SSN,STATUS,SUB,TRKDA,TXT,Y,PM
"RTN","MPIXSE",79,0)
 Q
"RTN","MPIXSE",80,0)
 ;
"RTN","MPIXSE",81,0)
SET ;
"RTN","MPIXSE",82,0)
 S CW=$$GET1^DIQ(985.9,TRKDA_",",.07,"E") I CW="" S CW="UNASSIGNED"
"RTN","MPIXSE",83,0)
 S DTREC=$$GET1^DIQ(985.9,TRKDA_",",.01,"E") I $L(DTREC)>18 S DTREC=$E(DTREC,1,18)
"RTN","MPIXSE",84,0)
 S DTRES=$$GET1^DIQ(985.9,TRKDA_",",.09,"E") I $L(DTRES)>18 S DTRES=$E(DTRES,1,18)
"RTN","MPIXSE",85,0)
 S STATUS=$$GET1^DIQ(985.9,TRKDA_",",.06)
"RTN","MPIXSE",86,0)
 S SITEFROM=$E($$WHAT^XUAF4($$LKUP^XUAF4($$GET1^DIQ(985.9,TRKDA_",",.04)),.01),1,27)
"RTN","MPIXSE",87,0)
 S EXCTXT=$$GET1^DIQ(985.9,TRKDA_",",1)
"RTN","MPIXSE",88,0)
 S ICN=$$GET1^DIQ(985.9,TRKDA_",",2.01)
"RTN","MPIXSE",89,0)
 S PTNM=$$GET1^DIQ(985.9,TRKDA_",",2.02)
"RTN","MPIXSE",90,0)
 S PTSSN=$$GET1^DIQ(985.9,TRKDA_",",2.03)
"RTN","MPIXSE",91,0)
 S CMOR=$$WHAT^XUAF4($$LKUP^XUAF4($$GET1^DIQ(985.9,TRKDA_",",2.04)),.01)
"RTN","MPIXSE",92,0)
 S MSGID=$$GET1^DIQ(985.9,TRKDA_",",3.01)
"RTN","MPIXSE",93,0)
 Q
"RTN","MPIXTYPR")
0^220^B6949646
"RTN","MPIXTYPR",1,0)
MPIXTYPR ;BIR/CML-Exception Type Report by Date Range ;08/27/99
"RTN","MPIXTYPR",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**22**;30 Apr 1999
"RTN","MPIXTYPR",3,0)
EN ;
"RTN","MPIXTYPR",4,0)
 W !!,"This option displays an Exception Statistics Report of the"
"RTN","MPIXTYPR",5,0)
 W !,"exception types RECEIVED during a user selected date range.",!
"RTN","MPIXTYPR",6,0)
ASK ;Ask for Date Range
"RTN","MPIXTYPR",7,0)
 W !!,"Enter date range for data to be included in report.",!
"RTN","MPIXTYPR",8,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIXTYPR",9,0)
 S DIR(0)="DAO^:"_$$NOW^XLFDT_":EPXT",DIR("A")="Beginning Date for Report:  "
"RTN","MPIXTYPR",10,0)
 D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIXTYPR",11,0)
 S RGBDT=Y
"RTN","MPIXTYPR",12,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","MPIXTYPR",13,0)
 S DIR(0)="DAO^"_RGBDT_":"_$$NOW^XLFDT_":EPXT",DIR("A")="Ending Date for Report: "
"RTN","MPIXTYPR",14,0)
 S DIR("B")=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12)) D ^DIR K DIR I $D(DIRUT) G QUIT
"RTN","MPIXTYPR",15,0)
 S RGEDT=Y
"RTN","MPIXTYPR",16,0)
 ;
"RTN","MPIXTYPR",17,0)
 S BEGDT=$S($L(RGBDT)=7:$$FMADD^XLFDT(RGBDT,-1)_.24,1:RGBDT-.0001)
"RTN","MPIXTYPR",18,0)
 S STOPDT=$S($L(RGEDT)=7:RGEDT_.24,1:RGEDT)
"RTN","MPIXTYPR",19,0)
 ;
"RTN","MPIXTYPR",20,0)
COMP ;
"RTN","MPIXTYPR",21,0)
 ;UPCNT=# Unassigned/Pending Exceptions
"RTN","MPIXTYPR",22,0)
 ;
"RTN","MPIXTYPR",23,0)
 K TYPARR
"RTN","MPIXTYPR",24,0)
 F  S BEGDT=$O(^MPI(985.9,"B",BEGDT)) Q:'BEGDT  Q:BEGDT>STOPDT  D
"RTN","MPIXTYPR",25,0)
 .S IEN=0 F  S IEN=$O(^MPI(985.9,"B",BEGDT,IEN)) Q:'IEN  D
"RTN","MPIXTYPR",26,0)
 ..S TYPE=$P(^MPI(985.9,IEN,0),"^",2),TYPNM=$P($G(^RGHL7(991.11,TYPE,10)),"^") I TYPNM="" S TYPNM="UNKNOWN"
"RTN","MPIXTYPR",27,0)
 ..I '$D(TYPARR(TYPNM,TYPE)) S TYPARR(TYPNM,TYPE)=0
"RTN","MPIXTYPR",28,0)
 ..S TYPARR(TYPNM,TYPE)=TYPARR(TYPNM,TYPE)+1
"RTN","MPIXTYPR",29,0)
 ;
"RTN","MPIXTYPR",30,0)
PRT ;
"RTN","MPIXTYPR",31,0)
 S HBDT=$$FMTE^XLFDT($E(RGBDT,1,12)),HEDT=$$FMTE^XLFDT($E(RGEDT,1,12))
"RTN","MPIXTYPR",32,0)
 S PDT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","MPIXTYPR",33,0)
 S $P(LN,"-",81)="",TOTEXC=0
"RTN","MPIXTYPR",34,0)
 ;
"RTN","MPIXTYPR",35,0)
 W @IOF,!,"Exception Statistics Report by Exception Type"
"RTN","MPIXTYPR",36,0)
 W !,"For Date Range: ",HBDT," to ",HEDT
"RTN","MPIXTYPR",37,0)
 W !,"Printed: ",PDT
"RTN","MPIXTYPR",38,0)
 W !!,"TYPE  TOT #   TYPE DESCRIPTION",!,LN
"RTN","MPIXTYPR",39,0)
 ;
"RTN","MPIXTYPR",40,0)
 I '$D(TYPARR) W !,"No data found for that time period." G QUIT
"RTN","MPIXTYPR",41,0)
 ;
"RTN","MPIXTYPR",42,0)
 S TYPNM="" F  S TYPNM=$O(TYPARR(TYPNM)) Q:TYPNM=""  D
"RTN","MPIXTYPR",43,0)
 .S TYPE=0 F  S TYPE=$O(TYPARR(TYPNM,TYPE)) Q:'TYPE  D
"RTN","MPIXTYPR",44,0)
 ..W !,TYPE,?5,$J(TYPARR(TYPNM,TYPE),6),?14,$E(TYPNM,1,66)
"RTN","MPIXTYPR",45,0)
 ..S TOTEXC=TOTEXC+TYPARR(TYPNM,TYPE)
"RTN","MPIXTYPR",46,0)
 W !!,"Total Exceptions received during this period: ",TOTEXC
"RTN","MPIXTYPR",47,0)
 ;
"RTN","MPIXTYPR",48,0)
 ;
"RTN","MPIXTYPR",49,0)
 S SS=22-$Y F JJ=1:1:SS W !
"RTN","MPIXTYPR",50,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","MPIXTYPR",51,0)
 ;
"RTN","MPIXTYPR",52,0)
QUIT ;
"RTN","MPIXTYPR",53,0)
 K BEGDT,HBDT,HEDT,IEN,JJ,LN,PDT,RGBDT,RGEDT,SS,STOPDT,TOTEXC,TYPARR,TYPE,TYPNM,Y
"RTN","MPIXTYPR",54,0)
 Q
"RTN","MPIXU")
0^221^B9395454
"RTN","MPIXU",1,0)
MPIXU ;ALB/CJM -APIs FOR THE MPI SERVER EXCEPTION FILE ;08/27/99
"RTN","MPIXU",2,0)
 ;;1.0;MASTER PATIENT INDEX AUSTIN;**29**;30 Apr 99
"RTN","MPIXU",3,0)
 ;
"RTN","MPIXU",4,0)
ADD(EXCEPT,ERROR) ;
"RTN","MPIXU",5,0)
 ;Description: Adds a new exception to the MPI Server Exception file.
"RTN","MPIXU",6,0)
 ;Input:
"RTN","MPIXU",7,0)
 ;  EXCEPT() - array containing field values (pass by reference)
"RTN","MPIXU",8,0)
 ;Output:
"RTN","MPIXU",9,0)
 ; Function value - new Exception Tracking Number if successful, "" otherwise
"RTN","MPIXU",10,0)
 ; ERROR - on failure, returns a message (optional, pass by reference)
"RTN","MPIXU",11,0)
 ;
"RTN","MPIXU",12,0)
 N IEN,DATA,FIELD
"RTN","MPIXU",13,0)
 S IEN=0
"RTN","MPIXU",14,0)
 S DATA(.01)=$$NOW^XLFDT
"RTN","MPIXU",15,0)
 S DATA(.06)=$S($G(EXCEPT("STATUS")):EXCEPT("STATUS"),1:1)
"RTN","MPIXU",16,0)
 S DATA(.07)=$S($G(EXCEPT("CASE WORKER")):EXCEPT("CASE WORKER"),1:"")
"RTN","MPIXU",17,0)
 F FIELD=.02,.03,.04,.05,1,2.01,2.02,2.03,2.04,3.01,3.02,3.03,3.04,3.05 S DATA(FIELD)=$G(EXCEPT($$GET1^DID(985.9,FIELD,"","LABEL")))
"RTN","MPIXU",18,0)
 S IEN=$$ADD^MPIEU(985.9,,.DATA,.ERROR)
"RTN","MPIXU",19,0)
 I IEN D
"RTN","MPIXU",20,0)
 .N SITE
"RTN","MPIXU",21,0)
 .S SITE=""
"RTN","MPIXU",22,0)
 .F  S SITE=$O(EXCEPT("TF",SITE)) Q:(SITE="")  D
"RTN","MPIXU",23,0)
 ..N DATA,DA
"RTN","MPIXU",24,0)
 ..S DA(1)=IEN
"RTN","MPIXU",25,0)
 ..S DATA(.01)=SITE
"RTN","MPIXU",26,0)
 ..F FIELD=.02,.03 S DATA(FIELD)=$G(EXCEPT("TF",SITE,$$GET1^DID(985.96,FIELD,"","LABEL")))
"RTN","MPIXU",27,0)
 ..I '$$ADD^MPIEU(985.96,.DA,.DATA)
"RTN","MPIXU",28,0)
 .;update any PROCESSING NOTES **29
"RTN","MPIXU",29,0)
 .I $D(EXCEPT("PROCESSING NOTES")) D
"RTN","MPIXU",30,0)
 ..N MPIPN,ERR M MPIPN=EXCEPT("PROCESSING NOTES")
"RTN","MPIXU",31,0)
 ..D WP^DIE(985.9,IEN_",",4,"KA","MPIPN",.ERR)
"RTN","MPIXU",32,0)
 Q IEN
"RTN","MPIXU",33,0)
 ;
"RTN","MPIXU",34,0)
GET(IEN,EXCEPT) ;
"RTN","MPIXU",35,0)
 ;Description: Returns the exception in the EXCEPT() array.
"RTN","MPIXU",36,0)
 ;Input:
"RTN","MPIXU",37,0)
 ;  IEN - the ien of the MPI Server Exception
"RTN","MPIXU",38,0)
 ;Output:
"RTN","MPIXU",39,0)
 ;  Function Value: 1 if successful, 0 otherwise
"RTN","MPIXU",40,0)
 ;  EXCEPT() - (pass by reference) an array containing the record
"RTN","MPIXU",41,0)
 ;
"RTN","MPIXU",42,0)
 Q:'$D(^MPI(985.9,IEN)) 0
"RTN","MPIXU",43,0)
 ;
"RTN","MPIXU",44,0)
 N FLD,TF,SITE
"RTN","MPIXU",45,0)
 F FLD=.001,.02,.03,.04,.05,.06,.07,.08,.09,1,2.01,2.02,2.03,2.04,3.01,3.02,3.03,3.04,3.05,5 S EXCEPT($$GET1^DID(985.9,FLD,"","LABEL"))=$$GETFIELD^MPIEU(985.9,FLD,IEN)
"RTN","MPIXU",46,0)
 S TF=0
"RTN","MPIXU",47,0)
 F  S TF=$O(^MPI(985.9,IEN,6,TF)) Q:'TF  D
"RTN","MPIXU",48,0)
 .N DA
"RTN","MPIXU",49,0)
 .S TF(1)=IEN
"RTN","MPIXU",50,0)
 .S SITE=$$GETFIELD^MPIEU(985.96,.01,.TF)
"RTN","MPIXU",51,0)
 .Q:(SITE="")
"RTN","MPIXU",52,0)
 .F FLD=.02,.03 S EXCEPT("TF",SITE,$$GET1^DID(985.96,FLD,"","LABEL"))=$$GETFIELD^MPIEU(985.96,FLD,.TF)
"RTN","MPIXU",53,0)
 M EXCEPT("PROCESSING NOTES")=^MPI(985.9,IEN,4)
"RTN","MPIXU",54,0)
 Q 1
"RTN","MPIXU",55,0)
 ;
"RTN","MPIXU",56,0)
LOCK(IEN) ;
"RTN","MPIXU",57,0)
 L +^MPI(985.9,IEN):10
"RTN","MPIXU",58,0)
 Q $T
"RTN","MPIXU",59,0)
 ;
"RTN","MPIXU",60,0)
UNLOCK(IEN) ;
"RTN","MPIXU",61,0)
 L -^MPI(985.9,IEN)
"RTN","MPIXU",62,0)
 Q
"RTN","MPIXU",63,0)
 ;
"RTN","MPIXU",64,0)
STATUS(IEN) ;
"RTN","MPIXU",65,0)
 ;Description: Returns the status of the given exception.
"RTN","MPIXU",66,0)
 Q $$GETFIELD^MPIEU(985.9,.06,IEN)
"RTN","MPIXU",67,0)
 ;
"RTN","MPIXU",68,0)
WORKER(IEN) ;
"RTN","MPIXU",69,0)
 ;Description: Returns the case workers of the given exception.
"RTN","MPIXU",70,0)
 Q $$GETFIELD^MPIEU(985.9,.07,IEN)
"RTN","MPIXU",71,0)
APP(IEN) ;
"RTN","MPIXU",72,0)
 ;Description: Returns the application of the given exception.
"RTN","MPIXU",73,0)
 Q $$GETFIELD^MPIEU(985.9,3.04,IEN)
"RTN","MPIXU",74,0)
EVENT(IEN) ;
"RTN","MPIXU",75,0)
 ;Description: Returns the event type of the given exception.
"RTN","MPIXU",76,0)
 Q $$GETFIELD^MPIEU(985.9,3.03,IEN)
"RTN","MPIXU",77,0)
MSGTYPE(IEN) ;
"RTN","MPIXU",78,0)
 ;Description: Returns the message type type of the given exception.
"RTN","MPIXU",79,0)
 Q $$GETFIELD^MPIEU(985.9,3.02,IEN)
"RTN","MPIXU",80,0)
EXCEPT(IEN) ;
"RTN","MPIXU",81,0)
 ;Description: Returns the exception type type of the given exception.
"RTN","MPIXU",82,0)
 Q $$GETFIELD^MPIEU(985.9,.02,IEN)
"RTN","MPIXU",83,0)
 ;
"RTN","MPIXU",84,0)
COUNT() ;Counts unassigned exceptions
"RTN","MPIXU",85,0)
 N IEN,COUNT
"RTN","MPIXU",86,0)
 S (IEN,COUNT)=0
"RTN","MPIXU",87,0)
 F  S IEN=$O(^MPI(985.9,"AD",1,IEN)) Q:'IEN  S COUNT=COUNT+1
"RTN","MPIXU",88,0)
 Q COUNT
"RTN","MPIXU",89,0)
 ;
"RTN","MPIXU",90,0)
RJ(STRING,LENGTH) ;
"RTN","MPIXU",91,0)
 S LENGTH=LENGTH_"T"
"RTN","MPIXU",92,0)
 Q $$RJ^XLFSTR(STRING,LENGTH," ")
"RTN","MPIXU",93,0)
LJ(STRING,LENGTH) ;
"RTN","MPIXU",94,0)
 S LENGTH=LENGTH_"T"
"RTN","MPIXU",95,0)
 Q $$LJ^XLFSTR(STRING,LENGTH," ")
"RTN","MPIXU",96,0)
 ;
"RTN","MPIXU",97,0)
SITENAME(STATNUM) ;
"RTN","MPIXU",98,0)
 ;Description: Given the station number, returns the site name
"RTN","MPIXU",99,0)
 Q:($G(STATNUM)="") ""
"RTN","MPIXU",100,0)
 N IEN
"RTN","MPIXU",101,0)
 S IEN=$O(^DIC(4,"D",STATNUM,0))
"RTN","MPIXU",102,0)
 Q:IEN $P($G(^DIC(4,IEN,0)),"^")
"RTN","MPIXU",103,0)
 Q ""
"SEC","^DIC",985,985,0,"AUDIT")

"SEC","^DIC",985,985,0,"DD")
@
"SEC","^DIC",985,985,0,"DEL")

"SEC","^DIC",985,985,0,"LAYGO")

"SEC","^DIC",985,985,0,"RD")
@
"SEC","^DIC",985,985,0,"WR")

"SEC","^DIC",985.2,985.2,0,"AUDIT")

"SEC","^DIC",985.2,985.2,0,"DD")
@
"SEC","^DIC",985.2,985.2,0,"DEL")

"SEC","^DIC",985.2,985.2,0,"LAYGO")

"SEC","^DIC",985.2,985.2,0,"RD")

"SEC","^DIC",985.2,985.2,0,"WR")

"SEC","^DIC",985.21,985.21,0,"DD")
@
"SEC","^DIC",985.25,985.25,0,"AUDIT")
@
"SEC","^DIC",985.25,985.25,0,"DD")
@
"SEC","^DIC",985.25,985.25,0,"DEL")
@
"SEC","^DIC",985.25,985.25,0,"LAYGO")
@
"SEC","^DIC",985.25,985.25,0,"RD")
@
"SEC","^DIC",985.25,985.25,0,"WR")
@
"SEC","^DIC",985.26,985.26,0,"DD")
@
"SEC","^DIC",985.3,985.3,0,"AUDIT")
@
"SEC","^DIC",985.3,985.3,0,"DD")
@
"SEC","^DIC",985.3,985.3,0,"DEL")
@
"SEC","^DIC",985.3,985.3,0,"LAYGO")
@
"SEC","^DIC",985.3,985.3,0,"RD")
@
"SEC","^DIC",985.3,985.3,0,"WR")
@
"SEC","^DIC",985.32,985.32,0,"DD")
@
"SEC","^DIC",985.5,985.5,0,"DD")
@
"SEC","^DIC",985.5,985.5,0,"RD")
@
"VER")
8.0^22.0
"^DD",985,985,0)
FIELD^^999^41
"^DD",985,985,0,"DDA")
N
"^DD",985,985,0,"DT")
3040414
"^DD",985,985,0,"ID",1)
W ""
"^DD",985,985,0,"ID",7)
W ""
"^DD",985,985,0,"ID",13)
W ""
"^DD",985,985,0,"ID","WRITE")
W "(",$P($G(^("ID_STATE")),U),")" W:$P(^(0),U,2)]"" ?28," ",$P(^(0),U,2),",",$P(^(0),U,3)," ",$P(^(0),U,4)," ",$P(^(0),U,6) W ?68," ",$P(^(0),U,14)
"^DD",985,985,0,"IX","ADOB",985,7)

"^DD",985,985,0,"IX","AID",985,80)

"^DD",985,985,0,"IX","AM",985,1)

"^DD",985,985,0,"IX","AM2",985,2)

"^DD",985,985,0,"IX","APC",985,16)

"^DD",985,985,0,"IX","ARJC",985,22)

"^DD",985,985,0,"IX","B",985,.01)

"^DD",985,985,0,"IX","BS",985,13)

"^DD",985,985,0,"IX","NM",985,1)

"^DD",985,985,0,"IX","NM2",985,2)

"^DD",985,985,0,"IX","SSN",985,13)

"^DD",985,985,0,"NM","MPI VETERAN/CLIENT")

"^DD",985,985,0,"PT",985.1,8.2)

"^DD",985,985,0,"PT",985.211,1)

"^DD",985,985,0,"PT",985.212,.01)

"^DD",985,985,0,"PT",985.213,1)

"^DD",985,985,0,"PT",985.25,.01)

"^DD",985,985,0,"PT",985.26,1)

"^DD",985,985,0,"PT",985.26,2)

"^DD",985,985,0,"PT",985.33,1)

"^DD",985,985,0,"PT",985.5,1)

"^DD",985,985,0,"PT",985.7,3)

"^DD",985,985,0,"PT",8801.24,.01)

"^DD",985,985,0,"PT",8801.3,1)

"^DD",985,985,0,"PT",8801.4,1)

"^DD",985,985,0,"VRPK")
MPI
"^DD",985,985,.01,0)
INTEGRATION CONTROL NUMBER^RFXa^^0;1^S:X?1.N1"V"&($T(^MPIUTL)]"")&($G(DUZ(0))="@") X=X_$$CHECKDG^MPIUTL($P(X,"V")) K:$L(X)>23!($L(X)<8)!'(X?1.N1"V"6N) X I $D(X),$T(^MPIUTL)]"",$$CHECKDG^MPIUTL($P(X,"V"))'=$P(X,"V",2) K X
"^DD",985,985,.01,.1)
@00105
"^DD",985,985,.01,1,0)
^.1
"^DD",985,985,.01,1,1,0)
985^B
"^DD",985,985,.01,1,1,1)
S ^MPIVET("B",$E(X,1,30),DA)=""
"^DD",985,985,.01,1,1,2)
K ^MPIVET("B",$E(X,1,30),DA)
"^DD",985,985,.01,3)
NUMBER, followed by V, followed by CHECKSUM NUMBER
"^DD",985,985,.01,21,0)
^^1^1^2960910^
"^DD",985,985,.01,21,1,0)
Based on ASTM E-1714 format is 16 digits, delimiter character, 6 checksum digits.
"^DD",985,985,.01,"AUDIT")
y
"^DD",985,985,.01,"DT")
2961129
"^DD",985,985,1,0)
SURNAME^Fa^^0;2^K:$L(X)>35!($L(X)<1) X
"^DD",985,985,1,.1)
@00108.1
"^DD",985,985,1,1,0)
^.1
"^DD",985,985,1,1,1,0)
985^AM^MUMPS
"^DD",985,985,1,1,1,1)
N T S T=$P($G(^MPIVET(DA,0)),U,3) I T]"" S ^MPIVET("AM",X,T,DA)=""
"^DD",985,985,1,1,1,2)
N T S T=$P($G(^MPIVET(DA,0)),U,3) I T]"" K ^MPIVET("AM",X,T,DA)
"^DD",985,985,1,1,1,3)
USED FOR 1ST-LAST LOOKUP
"^DD",985,985,1,1,1,"DT")
2961017
"^DD",985,985,1,1,2,0)
985^NM^MUMPS
"^DD",985,985,1,1,2,1)
N T S T=$P($G(^MPIVET(DA,0)),U,3) S ^MPIVET("NM",X_","_T,DA)=""
"^DD",985,985,1,1,2,2)
N T S T=$P($G(^MPIVET(DA,0)),U,3) K ^MPIVET("NM",X_","_T,DA)
"^DD",985,985,1,1,2,3)
DO NOT DELETE!
"^DD",985,985,1,1,2,"%D",0)
^.101^2^2^3040227^^
"^DD",985,985,1,1,2,"%D",1,0)
This cross-reference will allow lookup on file #985 and was specifically 
"^DD",985,985,1,1,2,"%D",2,0)
created for the MPI Patient Data Inquiry (PDAT).
"^DD",985,985,1,1,2,"DT")
3040227
"^DD",985,985,1,3)
Answer must be 1-35 characters in length
"^DD",985,985,1,21,0)
^^1^1^2970111^^^
"^DD",985,985,1,21,1,0)
Family name, also known as last name.
"^DD",985,985,1,"AUDIT")
e
"^DD",985,985,1,"DT")
3040227
"^DD",985,985,2,0)
FIRST NAME^Fa^^0;3^K:$L(X)>25!($L(X)<1) X
"^DD",985,985,2,.1)
@00108.2
"^DD",985,985,2,1,0)
^.1
"^DD",985,985,2,1,1,0)
985^AM2^MUMPS
"^DD",985,985,2,1,1,1)
N T S T=$P($G(^MPIVET(DA,0)),U,2) I T]"" S ^MPIVET("AM",T,X,DA)=""
"^DD",985,985,2,1,1,2)
N T S T=$P($G(^MPIVET(DA,0)),U,2) I T]"" K ^MPIVET("AM",T,X,DA)
"^DD",985,985,2,1,1,3)
USED FOR 1ST-LAST NAME LOOKUP
"^DD",985,985,2,1,1,"DT")
2961017
"^DD",985,985,2,1,2,0)
985^NM2^MUMPS
"^DD",985,985,2,1,2,1)
N T S T=$P($G(^MPIVET(DA,0)),U,2) I T]"" S ^MPIVET("NM",T_","_X,DA)=""
"^DD",985,985,2,1,2,2)
N T S T=$P($G(^MPIVET(DA,0)),U,2) I T]"" K ^MPIVET("NM",T_","_X,DA)
"^DD",985,985,2,1,2,3)
DO NOT DELETE!
"^DD",985,985,2,1,2,"%D",0)
^^2^2^3020418^
"^DD",985,985,2,1,2,"%D",1,0)
This cross-reference will allow lookup on file #985 and was specifically 
"^DD",985,985,2,1,2,"%D",2,0)
created for the MPI Patient Data Inquiry (PDAT).
"^DD",985,985,2,1,2,"DT")
3020418
"^DD",985,985,2,3)
Answer must be 1-25 characters in length.
"^DD",985,985,2,21,0)
^.001^1^1^3020214^^
"^DD",985,985,2,21,1,0)
The first given name for the person.
"^DD",985,985,2,"AUDIT")
e
"^DD",985,985,2,"DT")
3020418
"^DD",985,985,3,0)
MIDDLE NAME^Fa^^0;4^K:$L(X)>25!($L(X)<1) X
"^DD",985,985,3,.1)
@00108.3
"^DD",985,985,3,3)
Answer must be 1-25 characters in length.
"^DD",985,985,3,21,0)
^^1^1^2960910^
"^DD",985,985,3,21,1,0)
The middle given name for the patient.
"^DD",985,985,3,"AUDIT")
e
"^DD",985,985,3,"DT")
3020214
"^DD",985,985,4,0)
NAME PREFIX^Fa^^0;5^K:$L(X)>10!($L(X)<2) X
"^DD",985,985,4,.1)
@00108.5
"^DD",985,985,4,3)
Answer must be 2-10 characters in length.
"^DD",985,985,4,21,0)
^.001^1^1^3020214^^
"^DD",985,985,4,21,1,0)
Commonly, Dr., Ms., Sir, or other appropriate titles.
"^DD",985,985,4,"AUDIT")
e
"^DD",985,985,4,"DT")
3020214
"^DD",985,985,5,0)
NAME SUFFIX^Fa^^0;6^K:$L(X)>10!($L(X)<1) X
"^DD",985,985,5,.1)

"^DD",985,985,5,3)
Answer must be 1-10 characters in length.
"^DD",985,985,5,21,0)
^.001^1^1^3020813^^
"^DD",985,985,5,21,1,0)
Examples ar Jr., Sr., PhD, etc.
"^DD",985,985,5,"AUDIT")
e
"^DD",985,985,5,"DT")
3020813
"^DD",985,985,6,0)
MOTHERS MAIDEN NAME^F^^0;7^K:$L(X)>35!($L(X)<2) X
"^DD",985,985,6,.1)
@00109.1
"^DD",985,985,6,3)
Answer must be 2-35 characters in length.
"^DD",985,985,6,21,0)
^.001^1^1^3020213^^^
"^DD",985,985,6,21,1,0)
The surname of the mother at the mother's birth.
"^DD",985,985,6,"AUDIT")
n
"^DD",985,985,6,"DT")
3020213
"^DD",985,985,7,0)
DATE OF BIRTH^DXa^^0;8^S %DT="EP" D ^%DT S X=Y K:Y<1 X
"^DD",985,985,7,.1)

"^DD",985,985,7,1,0)
^.1
"^DD",985,985,7,1,1,0)
985^ADOB
"^DD",985,985,7,1,1,1)
S ^MPIVET("ADOB",$E(X,1,30),DA)=""
"^DD",985,985,7,1,1,2)
K ^MPIVET("ADOB",$E(X,1,30),DA)
"^DD",985,985,7,1,1,3)
Used for DUPLICATE-CHECKING
"^DD",985,985,7,1,1,"DT")
2961125
"^DD",985,985,7,3)
Enter the person's date of birth.
"^DD",985,985,7,21,0)
^.001^1^1^3020214^^^
"^DD",985,985,7,21,1,0)
The persons birthday.
"^DD",985,985,7,"AUDIT")
e
"^DD",985,985,7,"DT")
3020214
"^DD",985,985,8,0)
PLACE OF BIRTH CITY^F^^0;9^K:$L(X)>20!($L(X)<2) X
"^DD",985,985,8,.1)
@00126.1
"^DD",985,985,8,3)
Answer must be 2-20 characters in length.
"^DD",985,985,8,21,0)
^.001^1^1^3020213^^
"^DD",985,985,8,21,1,0)
The name of the city or town (or nearest) where the person was born.
"^DD",985,985,8,"AUDIT")
n
"^DD",985,985,8,"DT")
3020213
"^DD",985,985,9,0)
PLACE OF BIRTH STATE^P5'^DIC(5,^0;10^Q
"^DD",985,985,9,.1)
@00126.2
"^DD",985,985,9,21,0)
^^1^1^2960910^
"^DD",985,985,9,21,1,0)
If USA, 2 character state abbreviation, if not USA, the country state.
"^DD",985,985,9,"AUDIT")
n
"^DD",985,985,9,"DT")
2961129
"^DD",985,985,10,0)
DATE OF DEATH^D^^0;11^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",985,985,10,.1)

"^DD",985,985,10,3)
The date of the person's death.
"^DD",985,985,10,21,0)
^.001^1^1^3021108^^^^
"^DD",985,985,10,21,1,0)
The date of the person's death.
"^DD",985,985,10,"AUDIT")
n
"^DD",985,985,10,"DT")
3021108
"^DD",985,985,11,0)
DEATH VERIFICATION STATUS^S^V:VERIFIED;^0;12^Q
"^DD",985,985,11,21,0)
^^5^5^3011024^
"^DD",985,985,11,21,1,0)
*** NOTE:  FIELD NOT USED CURRENTLY
"^DD",985,985,11,21,2,0)
 
"^DD",985,985,11,21,3,0)
One of 4 criteria must exist to flag this as Verified.  Patient
"^DD",985,985,11,21,4,0)
death under VA auspices; DoD casualty report; receipt of certified
"^DD",985,985,11,21,5,0)
death certificate; or burial benefits by NCS.
"^DD",985,985,11,"AUDIT")
n
"^DD",985,985,11,"DT")
3011024
"^DD",985,985,12,0)
GENDER^S^M:MALE;F:FEMALE;^0;13^Q
"^DD",985,985,12,.1)
@00111
"^DD",985,985,12,21,0)
^^1^1^2960910^
"^DD",985,985,12,21,1,0)
Whether person is male or female.
"^DD",985,985,12,"AUDIT")
n
"^DD",985,985,12,"DT")
2961129
"^DD",985,985,13,0)
SOCIAL SECURITY NUMBER^Fa^^0;14^K:$L(X)>9!($L(X)<9) X
"^DD",985,985,13,.1)
@00122
"^DD",985,985,13,1,0)
^.1
"^DD",985,985,13,1,1,0)
985^SSN
"^DD",985,985,13,1,1,1)
S ^MPIVET("SSN",$E(X,1,30),DA)=""
"^DD",985,985,13,1,1,2)
K ^MPIVET("SSN",$E(X,1,30),DA)
"^DD",985,985,13,1,1,"DT")
2961007
"^DD",985,985,13,1,2,0)
985^BS^MUMPS
"^DD",985,985,13,1,2,1)
S ^MPIVET("BS",$E(X,6,9),DA)=""
"^DD",985,985,13,1,2,2)
K ^MPIVET("BS",$E(X,6,9),DA)
"^DD",985,985,13,1,2,3)
Used for DUPLICATE-CHECKING
"^DD",985,985,13,1,2,"DT")
2961125
"^DD",985,985,13,3)
Answer must be 9 characters in length.
"^DD",985,985,13,21,0)
^^1^1^2960910^
"^DD",985,985,13,21,1,0)
Persons social security number.
"^DD",985,985,13,"AUDIT")
e
"^DD",985,985,13,"DT")
2961129
"^DD",985,985,14,0)
SSN VERIFICATION STATUS^S^U:UNKNOWN;V:VALIDATED THRU IVM;I:INVALID;P:PSEUDO;^0;15^Q
"^DD",985,985,14,21,0)
^^3^3^3011024^
"^DD",985,985,14,21,1,0)
NOTE:  NOT USED CURRENTLY
"^DD",985,985,14,21,2,0)
 
"^DD",985,985,14,21,3,0)
The status of the verification of the person's ssn.
"^DD",985,985,14,"AUDIT")
n
"^DD",985,985,14,"DT")
3011024
"^DD",985,985,15,0)
CLAIM NUMBER^F^^1;1^K:$L(X)>9!($L(X)<7) X
"^DD",985,985,15,3)
Answer must be 7-9 characters in length.
"^DD",985,985,15,21,0)
^.001^1^1^3020213^^^^
"^DD",985,985,15,21,1,0)
VBA assigned claim number.  Used to assist confirming ID.
"^DD",985,985,15,"AUDIT")
n
"^DD",985,985,15,"DT")
3030729
"^DD",985,985,16,0)
COORDINATING MASTER OF RECORD^P4'a^DIC(4,^1;2^Q
"^DD",985,985,16,.1)
@00756
"^DD",985,985,16,1,0)
^.1^^-1
"^DD",985,985,16,1,1,0)
985^APC
"^DD",985,985,16,1,1,1)
S ^MPIVET("APC",$E(X,1,30),DA)=""
"^DD",985,985,16,1,1,2)
K ^MPIVET("APC",$E(X,1,30),DA)
"^DD",985,985,16,1,1,"DT")
2990702
"^DD",985,985,16,1,2,0)
985^APC
"^DD",985,985,16,1,2,1)
S ^MPIVET("APC",$E(X,1,30),DA)=""
"^DD",985,985,16,1,2,2)
K ^MPIVET("APC",$E(X,1,30),DA)
"^DD",985,985,16,1,2,"DT")
3001017
"^DD",985,985,16,21,0)
^^1^1^3011023^
"^DD",985,985,16,21,1,0)
Coordinating Site for this patient.
"^DD",985,985,16,"AUDIT")
y
"^DD",985,985,16,"DT")
3011023
"^DD",985,985,17,0)
SENSITIVITY^S^S:SENSITIVE;^1;3^Q
"^DD",985,985,17,21,0)
^^4^4^3011024^
"^DD",985,985,17,21,1,0)
NOTE:  NOT USED CURRENTLY
"^DD",985,985,17,21,2,0)
 
"^DD",985,985,17,21,3,0)
Sensitivity is used to assist in sensitive management audit
"^DD",985,985,17,21,4,0)
reports for unusual activity.
"^DD",985,985,17,"AUDIT")
n
"^DD",985,985,17,"DT")
3011024
"^DD",985,985,18,0)
PRIMARY ICN^F^^1;4^K:$L(X)>16!($L(X)<1) X
"^DD",985,985,18,3)
Answer must be 1-16 characters in length.
"^DD",985,985,18,21,0)
^^5^5^3011024^
"^DD",985,985,18,21,1,0)
NOTE:  NOT USED IN THIS CAPACITY CURRENTLY.  If populated, it has the 
"^DD",985,985,18,21,2,0)
same value as the .01 field.
"^DD",985,985,18,21,3,0)
 
"^DD",985,985,18,21,4,0)
All aliases or merged entries have the primary ICN to identify
"^DD",985,985,18,21,5,0)
the correct ICN to use.
"^DD",985,985,18,"AUDIT")
n
"^DD",985,985,18,"DT")
3011024
"^DD",985,985,19,0)
DATE/TIME OF ORIGINAL CREATION^DI^^1;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985,985,19,3)
Enter the date/time this patient was added to the MPI.
"^DD",985,985,19,21,0)
^.001^4^4^3030320^^
"^DD",985,985,19,21,1,0)
DATE/TIME OF ORIGINAL CREATION is the date/time that the
"^DD",985,985,19,21,2,0)
patient was added to the MPI VETERAN/CLIENT (#985) file.
"^DD",985,985,19,21,3,0)
This information will be used for reports and analysis by
"^DD",985,985,19,21,4,0)
the MPI Data Quality Management team.
"^DD",985,985,19,"DT")
3030303
"^DD",985,985,20,0)
FACILITY OF ORIGINAL CREATION^P4'I^DIC(4,^1;6^Q
"^DD",985,985,20,3)
Enter the facility that originally added this person to the MPI.
"^DD",985,985,20,21,0)
^^4^4^3030303^
"^DD",985,985,20,21,1,0)
FACILITY OF ORIGINAL CREATION is the facility that originally 
"^DD",985,985,20,21,2,0)
added the patient to the MPI VETERAN/CLIENT (#985) file.
"^DD",985,985,20,21,3,0)
This information will be used for reports and analysis by
"^DD",985,985,20,21,4,0)
the MPI Data Quality Management team.
"^DD",985,985,20,"DT")
3030303
"^DD",985,985,21,0)
CREATED BY^FI^^1;7^K:$L(X)>115!($L(X)<1) X
"^DD",985,985,21,3)
Identify the person who added this patient to the MPI.
"^DD",985,985,21,21,0)
^.001^4^4^3030320^^
"^DD",985,985,21,21,1,0)
The CREATED BY field identifies the person at the FACILITY OF
"^DD",985,985,21,21,2,0)
ORIGINAL CREATION who added the patient to the MPI VETERAN/CLIENT
"^DD",985,985,21,21,3,0)
(#985) file.  This information will be used for reports and analysis
"^DD",985,985,21,21,4,0)
by the MPI Data Quality Management team.
"^DD",985,985,21,"DT")
3030320
"^DD",985,985,22,0)
RESOLUTION JOURNAL CASE NUMBER^P985.2'^MPI(985.2,^1;8^Q
"^DD",985,985,22,1,0)
^.1
"^DD",985,985,22,1,1,0)
985^ARJC
"^DD",985,985,22,1,1,1)
S ^MPIVET("ARJC",$E(X,1,30),DA)=""
"^DD",985,985,22,1,1,2)
K ^MPIVET("ARJC",$E(X,1,30),DA)
"^DD",985,985,22,1,1,3)
Do not delete this xref!
"^DD",985,985,22,1,1,"%D",0)
^^2^2^3040331^
"^DD",985,985,22,1,1,"%D",1,0)
This cross-reference is used to sort and identify ICNs that are involved
"^DD",985,985,22,1,1,"%D",2,0)
in cases in the MPI DATA MGT RESOLUTION JOURNAL file (#985.2).
"^DD",985,985,22,1,1,"DT")
3040331
"^DD",985,985,22,3)
Enter the Resolution Journal case number (if any) associated with this ICN.
"^DD",985,985,22,21,0)
^^4^4^3040323^
"^DD",985,985,22,21,1,0)
If a case exists in the MPI DATA MGT RESOLUTION JOURNAL file (#985.2) for 
"^DD",985,985,22,21,2,0)
this ICN it will be stored in this field regardless of the status of the 
"^DD",985,985,22,21,3,0)
case.  Resolution Journal cases hold the history of any resolution work 
"^DD",985,985,22,21,4,0)
done by the Data Quality Team on this ICN.  
"^DD",985,985,22,"DT")
3040331
"^DD",985,985,30,0)
MARITAL STATUS^P11'^DIC(11,^2;1^Q
"^DD",985,985,30,3)
Enter this patient's current marital status.
"^DD",985,985,30,21,0)
^.001^1^1^3030305^^
"^DD",985,985,30,21,1,0)
Enter this patient's current marital status.
"^DD",985,985,30,"DT")
3030305
"^DD",985,985,31,0)
STREET ADDRESS [LINE 1]^F^^2;2^K:$L(X)>35!($L(X)<3) X
"^DD",985,985,31,3)
Answer must be 3-35 characters in length.
"^DD",985,985,31,21,0)
^^2^2^3030303^
"^DD",985,985,31,21,1,0)
Enter the first line of this patient's residence street address
"^DD",985,985,31,21,2,0)
[3-35 characters].
"^DD",985,985,31,"DT")
3030303
"^DD",985,985,32,0)
STREET ADDRESS [LINE 2]^F^^2;3^K:$L(X)>30!($L(X)<3) X
"^DD",985,985,32,3)
Answer must be 3-30 characters in length.
"^DD",985,985,32,21,0)
^^3^3^3030303^
"^DD",985,985,32,21,1,0)
Enter the second line of this patient's residence street address
"^DD",985,985,32,21,2,0)
[3-30 characters] if the space provided in 'street address' was
"^DD",985,985,32,21,3,0)
not sufficient.
"^DD",985,985,32,"DT")
3030303
"^DD",985,985,33,0)
STREET ADDRESS [LINE 3]^F^^2;4^K:$L(X)>30!($L(X)<3) X
"^DD",985,985,33,3)
Answer must be 3-30 characters in length.
"^DD",985,985,33,21,0)
^^3^3^3030303^
"^DD",985,985,33,21,1,0)
Enter the third line of this patient's residence street address
"^DD",985,985,33,21,2,0)
[3-30 characters] if the space provided in 'street address' and
"^DD",985,985,33,21,3,0)
'street address 2' was not sufficient.
"^DD",985,985,33,"DT")
3030303
"^DD",985,985,34,0)
CITY [RESIDENCE]^F^^2;5^K:$L(X)>28!($L(X)<3) X
"^DD",985,985,34,3)
Answer must be 3-28 characters in length
"^DD",985,985,34,21,0)
^.001^1^1^3040601^^^
"^DD",985,985,34,21,1,0)
Enter the city in which this patient resides [3-28 characters].
"^DD",985,985,34,"DT")
3031023
"^DD",985,985,35,0)
STATE [RESIDENCE]^P5'^DIC(5,^2;6^Q
"^DD",985,985,35,3)
Enter the state where the patient resides.
"^DD",985,985,35,21,0)
^.001^1^1^3030304^^
"^DD",985,985,35,21,1,0)
Enter the state where the patient resides.
"^DD",985,985,35,"DT")
3030304
"^DD",985,985,36,0)
ZIP+4 [RESIDENCE]^F^^2;7^K:$L(X)>10!($L(X)<5) X
"^DD",985,985,36,3)
Answer must be 5-10 characters in length.
"^DD",985,985,36,21,0)
^.001^2^2^3030304^^
"^DD",985,985,36,21,1,0)
Answer with either the 5-digit format (e.g. 12345) or the nine-digit
"^DD",985,985,36,21,2,0)
format (e.g. 12345-6789 or 123456789).
"^DD",985,985,36,"DT")
3030304
"^DD",985,985,37,0)
PHONE NUMBER [RESIDENCE]^F^^2;8^K:$L(X)>23!($L(X)<4) X
"^DD",985,985,37,3)
Answer must be 4-23 characters in length.
"^DD",985,985,37,21,0)
^.001^2^2^3040414^^^
"^DD",985,985,37,21,1,0)
Enter the telephone number [4-23 characters] to this patient's
"^DD",985,985,37,21,2,0)
place of residence.
"^DD",985,985,37,"DT")
3040414
"^DD",985,985,38,0)
POW STATUS INDICATED?^S^Y:YES;N:NO;U:UNKNOWN;^2;9^Q
"^DD",985,985,38,3)
Was this patient a Prisoner of War?
"^DD",985,985,38,21,0)
^^2^2^3030303^
"^DD",985,985,38,21,1,0)
For this patient, enter 'Y' if s/he was confined as a prisoner
"^DD",985,985,38,21,2,0)
of war, 'N' if not, or 'U' if unknown.
"^DD",985,985,38,"DT")
3030303
"^DD",985,985,39,0)
MULTIPLE BIRTH INDICATOR^S^N:NO;Y:*MULTIPLE BIRTH*;^2;10^Q
"^DD",985,985,39,3)
Is the patient part of a multiple birth?
"^DD",985,985,39,21,0)
^.001^3^3^3030519^^^^
"^DD",985,985,39,21,1,0)
The MULTIPLE BIRTH INDICATOR will designate whether or not
"^DD",985,985,39,21,2,0)
the patient is part of a multiple birth (i.e. to identify
"^DD",985,985,39,21,3,0)
twins, etc.).
"^DD",985,985,39,"DT")
3030519
"^DD",985,985,50,0)
ALIAS^985.02A^^50;0
"^DD",985,985,50,21,0)
^.001^2^2^3030403^^^^
"^DD",985,985,50,21,1,0)
If this patient is known by any name other than that entered in
"^DD",985,985,50,21,2,0)
the name field enter that/those other name(s) here.
"^DD",985,985,60,0)
RACE INFORMATION^985.03PA^^60;0
"^DD",985,985,60,21,0)
^.001^1^1^3030306^^
"^DD",985,985,60,21,1,0)
Enter the races which best identify this patient.
"^DD",985,985,70,0)
ETHNICITY INFORMATION^985.04PA^^70;0
"^DD",985,985,70,21,0)
^.001^1^1^3030306^^
"^DD",985,985,70,21,1,0)
Enter the ethnicity which best identifies this patient.
"^DD",985,985,80,0)
ID STATE^S^P:PERMANENT;T:TEMPORARY;D:DEACTIVATED;^ID_STATE;1^Q
"^DD",985,985,80,.1)

"^DD",985,985,80,1,0)
^.1
"^DD",985,985,80,1,1,0)
985^AID
"^DD",985,985,80,1,1,1)
S ^MPIVET("AID",$E(X,1,30),DA)=""
"^DD",985,985,80,1,1,2)
K ^MPIVET("AID",$E(X,1,30),DA)
"^DD",985,985,80,1,1,3)
DO NOT DELETE!
"^DD",985,985,80,1,1,"%D",0)
^^1^1^3040127^
"^DD",985,985,80,1,1,"%D",1,0)
This cross-reference allows sorting of file #985 by ID STATE.
"^DD",985,985,80,1,1,"DT")
3040127
"^DD",985,985,80,3)
Enter the status of the record.
"^DD",985,985,80,21,0)
^.001^25^25^3040401^^^^
"^DD",985,985,80,21,1,0)
ID STATE designates the status of the entry in the MPI VETERAN/CLIENT
"^DD",985,985,80,21,2,0)
(#985) file in accordance with business rules and standards.  For this
"^DD",985,985,80,21,3,0)
patient, enter P if the record is determined to be PERMANENT, T if
"^DD",985,985,80,21,4,0)
TEMPORARY, or D if DEACTIVATED.
"^DD",985,985,80,21,5,0)
  
"^DD",985,985,80,21,6,0)
The following ID STATE definitions are from the Object Management
"^DD",985,985,80,21,7,0)
Group (OMG) Person Identification Service (PIDS) Specification.
"^DD",985,985,80,21,8,0)
  
"^DD",985,985,80,21,9,0)
PERMANENT: When an ID is created as permanent all mandatory traits
"^DD",985,985,80,21,10,0)
must be provided.  A permanent ID can be merged or deprecated but
"^DD",985,985,80,21,11,0)
not made temporary.
"^DD",985,985,80,21,12,0)
  
"^DD",985,985,80,21,13,0)
TEMPORARY: An ID can be created as temporary without indicating
"^DD",985,985,80,21,14,0)
any mandatory traits.  A common usage is to create an ID that data
"^DD",985,985,80,21,15,0)
can be bound to a patient before that patient is identified with an
"^DD",985,985,80,21,16,0)
appropriate confidence.  A temporary ID can be made permanent, merged,
"^DD",985,985,80,21,17,0)
or deprecated.  A temporary ID is made permanent explicitly - just
"^DD",985,985,80,21,18,0)
updating the profile to contain all required traits does not change
"^DD",985,985,80,21,19,0)
the state.
"^DD",985,985,80,21,20,0)
  
"^DD",985,985,80,21,21,0)
DEACTIVATED: Once an ID is expected not to be needed any more it can
"^DD",985,985,80,21,22,0)
be deactivated (merged or deprecated), which keeps it around for
"^DD",985,985,80,21,23,0)
historical purposes.  A deactivated ID is in its final state and
"^DD",985,985,80,21,24,0)
cannot be transitioned to any other state by PIDS operations,
"^DD",985,985,80,21,25,0)
except unmerging.
"^DD",985,985,80,"DT")
3040401
"^DD",985,985,81,0)
DATE OF ID STATE^D^^ID_STATE;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985,985,81,3)
Enter the date and time the ID STATE was last edited.
"^DD",985,985,81,21,0)
^.001^2^2^3040121^^
"^DD",985,985,81,21,1,0)
The DATE OF ID STATE field identifies when the ID STATE field
"^DD",985,985,81,21,2,0)
was last updated.
"^DD",985,985,81,"DT")
3040121
"^DD",985,985,101,0)
TYPE OF CLIENT^S^V:VETERAN;H:HUMANITARIAN;T:TEST ENTRY;P:PROVIDER;O:OTHER;E:ENTRY IN ERROR;^100;1^Q
"^DD",985,985,101,21,0)
^^1^1^3011024^
"^DD",985,985,101,21,1,0)
NOTE:  NOT USED CURRENTLY
"^DD",985,985,101,"AUDIT")
n
"^DD",985,985,101,"DT")
3011024
"^DD",985,985,200,0)
OTHER IDS^985.01^^200;0
"^DD",985,985,999,0)
DATE/TIME CHANGED^CmJ29^^ ; ^D MULDATE^MPIAUDIT(D0)
"^DD",985,985,999,9)
^
"^DD",985,985,999,9.01)

"^DD",985,985,999,9.1)
D MULDATE^MPIAUDIT(D0)
"^DD",985,985.01,0)
OTHER IDS SUB-FIELD^^.03^3
"^DD",985,985.01,0,"DT")
3020227
"^DD",985,985.01,0,"NM","OTHER IDS")

"^DD",985,985.01,0,"UP")
985
"^DD",985,985.01,.01,0)
OTHER IDS^F^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",985,985.01,.01,1,0)
^.1^^0
"^DD",985,985.01,.01,3)
Answer must be 1-20 characters in length.
"^DD",985,985.01,.01,21,0)
^^2^2^3010820^
"^DD",985,985.01,.01,21,1,0)
This field will be used to store other IDs for this patient entry.  Such
"^DD",985,985.01,.01,21,2,0)
as the GCPR ID, previous ICNs, etc.
"^DD",985,985.01,.01,"DT")
3020301
"^DD",985,985.01,.02,0)
TYPE OF ID NUM^S^GCPR:GCPR;USVHA:OTHER ICNS;^0;2^Q
"^DD",985,985.01,.02,1,0)
^.1^^0
"^DD",985,985.01,.02,"DT")
3020301
"^DD",985,985.01,.03,0)
ASSIGNING LOCATION^P4'^DIC(4,^0;3^Q
"^DD",985,985.01,.03,3)
Enter the facility associated with this ID.
"^DD",985,985.01,.03,21,0)
^^1^1^3020221^
"^DD",985,985.01,.03,21,1,0)
This field contains the facility associated with the ID.
"^DD",985,985.01,.03,"DT")
3020301
"^DD",985,985.02,0)
ALIAS SUB-FIELD^^4^5
"^DD",985,985.02,0,"DT")
3030303
"^DD",985,985.02,0,"NM","ALIAS")

"^DD",985,985.02,0,"UP")
985
"^DD",985,985.02,.01,0)
ALIAS SURNAME^F^^0;1^K:$L(X)>35!($L(X)<1) X
"^DD",985,985.02,.01,1,0)
^.1^^0
"^DD",985,985.02,.01,3)
Answer must be 1-35 characters in length.
"^DD",985,985.02,.01,21,0)
^.001^3^3^3030303^^^
"^DD",985,985.02,.01,21,1,0)
Enter the family name, also know as last name.
"^DD",985,985.02,.01,21,2,0)
If this patient is known by any name other than that entered in
"^DD",985,985.02,.01,21,3,0)
the name field enter that/those other name(s) here.
"^DD",985,985.02,.01,"DT")
3030423
"^DD",985,985.02,1,0)
ALIAS FIRST NAME^F^^0;2^K:$L(X)>25!($L(X)<1) X
"^DD",985,985.02,1,3)
Answer must be 1-25 characters in length.
"^DD",985,985.02,1,21,0)
^.001^1^1^3030303^^^
"^DD",985,985.02,1,21,1,0)
The first given name for the person.
"^DD",985,985.02,1,"DT")
3030303
"^DD",985,985.02,2,0)
ALIAS MIDDLE NAME^F^^0;3^K:$L(X)>25!($L(X)<1) X
"^DD",985,985.02,2,3)
Answer must be 1-25 characters in length.
"^DD",985,985.02,2,21,0)
^^1^1^3030303^
"^DD",985,985.02,2,21,1,0)
The middle given name for the patient.
"^DD",985,985.02,2,"DT")
3030303
"^DD",985,985.02,3,0)
ALIAS PREFIX^F^^0;4^K:$L(X)>10!($L(X)<2) X
"^DD",985,985.02,3,3)
Answer must be 2-10 characters in length.
"^DD",985,985.02,3,21,0)
^.001^1^1^3030304^^^
"^DD",985,985.02,3,21,1,0)
Commonly, Dr., Ms., Sir, or other appropriate titles.
"^DD",985,985.02,3,"DT")
3030303
"^DD",985,985.02,4,0)
ALIAS SUFFIX^F^^0;5^K:$L(X)>10!($L(X)<1) X
"^DD",985,985.02,4,3)
Answer must be 1-10 characters in length.
"^DD",985,985.02,4,21,0)
^^1^1^3030303^
"^DD",985,985.02,4,21,1,0)
Examples are Jr., Sr., PhD, etc.
"^DD",985,985.02,4,"DT")
3030303
"^DD",985,985.03,0)
RACE INFORMATION SUB-FIELD^^.01^1
"^DD",985,985.03,0,"DT")
3030304
"^DD",985,985.03,0,"NM","RACE INFORMATION")

"^DD",985,985.03,0,"UP")
985
"^DD",985,985.03,.01,0)
RACE INFORMATION^*P10'^DIC(10,^0;1^S DIC("S")="I '$G(^(.02))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",985,985.03,.01,1,0)
^.1^^0
"^DD",985,985.03,.01,3)
Answer must be 1-45 characters in length.
"^DD",985,985.03,.01,12)
Can't select inactivated entries.
"^DD",985,985.03,.01,12.1)
S DIC("S")="I '$G(^(.02))"
"^DD",985,985.03,.01,21,0)
^.001^1^1^3030304^^
"^DD",985,985.03,.01,21,1,0)
Enter the races which best identify this patient.
"^DD",985,985.03,.01,"DT")
3030902
"^DD",985,985.04,0)
ETHNICITY INFORMATION SUB-FIELD^^.01^1
"^DD",985,985.04,0,"DT")
3030304
"^DD",985,985.04,0,"NM","ETHNICITY INFORMATION")

"^DD",985,985.04,0,"UP")
985
"^DD",985,985.04,.01,0)
ETHNICITY INFORMATION^*P10.2'^DIC(10.2,^0;1^S DIC("S")="I '$G(^(.02))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",985,985.04,.01,1,0)
^.1^^0
"^DD",985,985.04,.01,3)
Answer must be 1-45 characters in length.
"^DD",985,985.04,.01,12)
Can't select inactivated entries.
"^DD",985,985.04,.01,12.1)
S DIC("S")="I '$G(^(.02))"
"^DD",985,985.04,.01,21,0)
^.001^1^1^3030304^^
"^DD",985,985.04,.01,21,1,0)
Enter the ethnicity which best identifies this patient.
"^DD",985,985.04,.01,"DT")
3030902
"^DD",985.1,985.1,0)
FIELD^^9.1^19
"^DD",985.1,985.1,0,"DT")
3050609
"^DD",985.1,985.1,0,"IX","B",985.1,.01)

"^DD",985.1,985.1,0,"NM","MPI PARAMETER")

"^DD",985.1,985.1,0,"VRPK")
MPI
"^DD",985.1,985.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",985.1,985.1,.01,1,0)
^.1
"^DD",985.1,985.1,.01,1,1,0)
985.1^B
"^DD",985.1,985.1,.01,1,1,1)
S ^MPI(985.1,"B",$E(X,1,30),DA)=""
"^DD",985.1,985.1,.01,1,1,2)
K ^MPI(985.1,"B",$E(X,1,30),DA)
"^DD",985.1,985.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",985.1,985.1,.01,21,0)
^^1^1^3011127^
"^DD",985.1,985.1,.01,21,1,0)
One entry should be present in this parameter file.
"^DD",985.1,985.1,.01,"DT")
3011127
"^DD",985.1,985.1,1,0)
PURGE AUDIT DAYS^NJ4,0^^AUD;1^K:+X'=X!(X>9999)!(X<99)!(X?.E1"."1.N) X
"^DD",985.1,985.1,1,3)
Type a number between 99 and 9999, 0 Decimal Digits
"^DD",985.1,985.1,1,21,0)
^^2^2^3020612^
"^DD",985.1,985.1,1,21,1,0)
Number of days to keep the audit of the MPI Veteran/Client file in the 
"^DD",985.1,985.1,1,21,2,0)
^DIA(985 global.   
"^DD",985.1,985.1,1,"DT")
3020612
"^DD",985.1,985.1,2,0)
AUDIT PURGE LAST START DATE^D^^AUD;2^S %DT="ET" D ^%DT S X=Y K:X<1 X
"^DD",985.1,985.1,2,3)
(No range limit on date)
"^DD",985.1,985.1,2,21,0)
^^1^1^3020612^
"^DD",985.1,985.1,2,21,1,0)
This field will hold the date/time the Audit Purge was last started.
"^DD",985.1,985.1,2,"DT")
3020612
"^DD",985.1,985.1,2.1,0)
AUDIT PURGE LAST END DATE^D^^AUD;3^S %DT="ET" D ^%DT S X=Y K:X<1 X
"^DD",985.1,985.1,2.1,3)
(No range limit on date)
"^DD",985.1,985.1,2.1,21,0)
^^1^1^3020612^
"^DD",985.1,985.1,2.1,21,1,0)
This field will hold the date/time the MPI Audit Purge was last completed.
"^DD",985.1,985.1,2.1,"DT")
3020612
"^DD",985.1,985.1,3,0)
DUP SSN REPORT LAST RUN DATE^D^^DUPSSN;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,3,3)
This field contains the last date/time the Dup SSN report was run to completion.  This field is ONLY populated by the Dup SSN report routine ^MPIMDS01.
"^DD",985.1,985.1,3,21,0)
^^3^3^3020611^
"^DD",985.1,985.1,3,21,1,0)
This is the last date/time the Dup SSN report was run to completion 
"^DD",985.1,985.1,3,21,2,0)
("Compile Duplicate SSN Report" [MPI DATA MGT COMPILE DUP SSN]).  This 
"^DD",985.1,985.1,3,21,3,0)
field is ONLY populated by the Dup SSN report routine ^MPIMDS01.
"^DD",985.1,985.1,3,"DT")
3020611
"^DD",985.1,985.1,4,0)
SITE MONITOR LAST RUN DATE^D^^SITEMON;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,4,3)
This field contains the last date/time the MPI MONITORING background job was run to completion.  This field is ONLY populated by the MPI MONITORING routine ^MPIMMONT.
"^DD",985.1,985.1,4,21,0)
^^3^3^3020611^
"^DD",985.1,985.1,4,21,1,0)
This is the last date/time the MPI MONITORING background job was run to 
"^DD",985.1,985.1,4,21,2,0)
completion.  This field is ONLY populated by the MPI MONITORING routine 
"^DD",985.1,985.1,4,21,3,0)
^MPIMMONT.
"^DD",985.1,985.1,4,"DT")
3020611
"^DD",985.1,985.1,5,0)
SHARED TF STATS LAST RUN DATE^D^^TFSTATS;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,5,3)
This field contains the last date/time the Shared TF Stats routine was run to completion.  This field is ONLY populated by the SHARED TF STATS routine ^MPIMTF01.
"^DD",985.1,985.1,5,21,0)
^^3^3^3020611^
"^DD",985.1,985.1,5,21,1,0)
This is the last date/time the Shared TF Stats routine was run to 
"^DD",985.1,985.1,5,21,2,0)
completion.  This field is ONLY populated by the SHARED TF STATS routine 
"^DD",985.1,985.1,5,21,3,0)
^MPIMTF01.
"^DD",985.1,985.1,5,"DT")
3020611
"^DD",985.1,985.1,6,0)
HL7 PARTIAL QUERY LAST SENT^D^^HLQUERY;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,6,3)
This field contains the last date/time an HL7 Partial Query is sent to ALL sites. This field is ONLY populated by the routine ^MPIMSTAT.
"^DD",985.1,985.1,6,21,0)
^^3^3^3020611^
"^DD",985.1,985.1,6,21,1,0)
This is the last date/time an HL7 Partial Query is sent to ALL sites 
"^DD",985.1,985.1,6,21,2,0)
("Query Sites for Monitored Data" [MPIM QUERY ONE/ALL]).  This field is 
"^DD",985.1,985.1,6,21,3,0)
ONLY populated by the routine ^MPIMSTAT.
"^DD",985.1,985.1,6,"DT")
3020611
"^DD",985.1,985.1,6.1,0)
HL7 QUERY SENT BY^P200'^VA(200,^HLQUERY;2^Q
"^DD",985.1,985.1,6.1,3)
This is the person who sent out the partial remote query for HL monitoring.
"^DD",985.1,985.1,6.1,21,0)
^^2^2^3020619^
"^DD",985.1,985.1,6.1,21,1,0)
This is the person who sent out the partial remote query that returns 
"^DD",985.1,985.1,6.1,21,2,0)
information used for HL link monitoring.
"^DD",985.1,985.1,6.1,"DT")
3020619
"^DD",985.1,985.1,7,0)
STAT REPORT LAST START DATE^D^^STAT;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,7,3)
This field contains the last date/time the MPI Stat Report (MPI DATA MGT STAT RPT QUEUED) background job compile was started. This field is ONLY populated by the routine ^MPISSR1.
"^DD",985.1,985.1,7,21,0)
^^3^3^3020611^
"^DD",985.1,985.1,7,21,1,0)
This is the last date/time the MPI Stat Report (MPI DATA MGT STAT RPT 
"^DD",985.1,985.1,7,21,2,0)
QUEUED) background job compile was started. This field is ONLY populated 
"^DD",985.1,985.1,7,21,3,0)
by the routine ^MPISSR1.
"^DD",985.1,985.1,7,"DT")
3020611
"^DD",985.1,985.1,7.1,0)
STAT REPORT LAST END DATE^D^^STAT;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,7.1,3)
This field contains the last date/time the MPI Stat Report (MPI DATA MGT STAT RPT QUEUED) background job compile was run to completion. This field is ONLY populated by the routine ^MPISSR2.
"^DD",985.1,985.1,7.1,21,0)
^^3^3^3020611^
"^DD",985.1,985.1,7.1,21,1,0)
This is the last date/time the MPI Stat Report (MPI DATA MGT STAT RPT 
"^DD",985.1,985.1,7.1,21,2,0)
QUEUED) background job compile was run to completion. This field is ONLY 
"^DD",985.1,985.1,7.1,21,3,0)
populated by the routine ^MPISSR2.
"^DD",985.1,985.1,7.1,"DT")
3020611
"^DD",985.1,985.1,7.2,0)
STAT REPORT SUMMARY DATE^985.11D^^STATSUM;0
"^DD",985.1,985.1,7.2,21,0)
^^6^6^3020611^
"^DD",985.1,985.1,7.2,21,1,0)
This multiple contains the summary data from the MPI Stat Report (MPI 
"^DD",985.1,985.1,7.2,21,2,0)
DATA MGT STAT RPT QUEUED) background job.  These fields are only 
"^DD",985.1,985.1,7.2,21,3,0)
populated from the compiles that run each Wednesday and ONLY from the 
"^DD",985.1,985.1,7.2,21,4,0)
routine ^MPISSR2. After these fields are populated, the information is 
"^DD",985.1,985.1,7.2,21,5,0)
bundled into an e-mail message and sent to the appropriate mail group on 
"^DD",985.1,985.1,7.2,21,6,0)
Exchange.
"^DD",985.1,985.1,7.3,0)
STAT REPORT DAILY DUP SSN DATE^985.12D^^STATDUP;0
"^DD",985.1,985.1,7.3,21,0)
^.001^2^2^3020717^^^
"^DD",985.1,985.1,7.3,21,1,0)
This multiple stores the daily Stat Report data for DUP SSN resolution 
"^DD",985.1,985.1,7.3,21,2,0)
and additions for tracking/reporting purposes.
"^DD",985.1,985.1,8,0)
ID STATE LAST START DATE^D^^ID_STATE;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,8,3)
Enter the date/time when the routine was last started.
"^DD",985.1,985.1,8,21,0)
^.001^2^2^3040209^^^
"^DD",985.1,985.1,8,21,1,0)
This field contains the last date/time the Set ID State for 
"^DD",985.1,985.1,8,21,2,0)
Existing Entries routine was started.
"^DD",985.1,985.1,8,"DT")
3040127
"^DD",985.1,985.1,8.1,0)
ID STATE LAST END DATE^D^^ID_STATE;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,8.1,3)
Enter the date/time when the routine last completed.
"^DD",985.1,985.1,8.1,21,0)
^^2^2^3040127^
"^DD",985.1,985.1,8.1,21,1,0)
This field contains the last date/time the Set ID State for
"^DD",985.1,985.1,8.1,21,2,0)
Existing Entries routine completed.
"^DD",985.1,985.1,8.1,"DT")
3040127
"^DD",985.1,985.1,8.2,0)
ID STATE LAST ICN PROCESSED^P985'^MPIVET(^ID_STATE;3^Q
"^DD",985.1,985.1,8.2,3)
Enter the last processed INTEGRATION CONTROL NUMBER.
"^DD",985.1,985.1,8.2,21,0)
^^2^2^3040127^
"^DD",985.1,985.1,8.2,21,1,0)
This field contains the INTEGRATION CONTROL NUMBER that was
"^DD",985.1,985.1,8.2,21,2,0)
last processed by the Set ID State for Existing Entries routine.
"^DD",985.1,985.1,8.2,"DT")
3040127
"^DD",985.1,985.1,8.3,0)
ID STATE RUN DATE^985.13D^^ID_STATE_SUM;0
"^DD",985.1,985.1,8.3,21,0)
^.001^3^3^3040406^^^^
"^DD",985.1,985.1,8.3,21,1,0)
This multiple contains the summary data from the Set ID State
"^DD",985.1,985.1,8.3,21,2,0)
for Existing Entries process - the date/time it ran, and the
"^DD",985.1,985.1,8.3,21,3,0)
number of entries processed at that date/time.
"^DD",985.1,985.1,9,0)
TF CHECK RPT LAST START DATE^D^^TFCHK;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,9,3)
This field contains the last date/time the Background TF Data Validation Compile (MPI DATA MGT TFCHK RPT QUEUED) was started. This field is ONLY populated by the routine ^MPISTF1.  
"^DD",985.1,985.1,9,21,0)
^^7^7^3050609^
"^DD",985.1,985.1,9,21,1,0)
This is the last date/time the Background TF Data Validation Compile (MPI 
"^DD",985.1,985.1,9,21,2,0)
DATA MGT TFCHK RPT QUEUED) was started. This field is ONLY populated by 
"^DD",985.1,985.1,9,21,3,0)
the routine ^MPISTF1 that is called by the background option "Background 
"^DD",985.1,985.1,9,21,4,0)
TF Data Validation Compile" [MPI DATA MGT TFCHK RPT QUEUED]. This option 
"^DD",985.1,985.1,9,21,5,0)
searches the MPI FACILITY ASSOCIATION file (#985.5) for treating facility 
"^DD",985.1,985.1,9,21,6,0)
entries without a DFN (FHIE, Station 200, entries are not checked) and 
"^DD",985.1,985.1,9,21,7,0)
identifies Temporary ICNs that are shared.
"^DD",985.1,985.1,9,"DT")
3050609
"^DD",985.1,985.1,9.1,0)
TF CHECK RPT LAST END DATE^D^^TFCHK;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.1,9.1,3)
This field contains the last date/time the Background TF Data Validation Compile (MPI DATA MGT TFCHK RPT QUEUED) was run to completion. This field is ONLY populated by the routine ^MPISTF1. 
"^DD",985.1,985.1,9.1,21,0)
^^7^7^3050609^
"^DD",985.1,985.1,9.1,21,1,0)
This is the last date/time the Background TF Data Validation Compile (MPI 
"^DD",985.1,985.1,9.1,21,2,0)
DATA MGT TFCHK RPT QUEUED) was run to completion. This field is ONLY 
"^DD",985.1,985.1,9.1,21,3,0)
populated by the routine ^MPISTF1 that is called by the background option 
"^DD",985.1,985.1,9.1,21,4,0)
"Background TF Data Validation Compile" [MPI DATA MGT TFCHK RPT QUEUED]. 
"^DD",985.1,985.1,9.1,21,5,0)
This option searches the MPI FACILITY ASSOCIATION file (#985.5) for 
"^DD",985.1,985.1,9.1,21,6,0)
treating facility entries without a DFN (FHIE, Station 200, entries are 
"^DD",985.1,985.1,9.1,21,7,0)
not checked) and identifies Temporary ICNs that are shared. 
"^DD",985.1,985.1,9.1,"DT")
3041022
"^DD",985.1,985.11,0)
STAT REPORT SUMMARY DATE SUB-FIELD^^4^5
"^DD",985.1,985.11,0,"DT")
3020611
"^DD",985.1,985.11,0,"NM","STAT REPORT SUMMARY DATE")

"^DD",985.1,985.11,0,"UP")
985.1
"^DD",985.1,985.11,.01,0)
STAT REPORT SUMMARY DATE^DX^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X S:$D(X) DINUM=X
"^DD",985.1,985.11,.01,1,0)
^.1^^0
"^DD",985.1,985.11,.01,3)
This field contains the last date/time the MPI Stat Report background job compile was run to completion on a Wednesday. This field is ONLY populated by the routine (^MPISSR2).
"^DD",985.1,985.11,.01,21,0)
^^3^3^3020611^
"^DD",985.1,985.11,.01,21,1,0)
This is the last date/time the MPI Stat Report (MPI DATA MGT STAT RPT 
"^DD",985.1,985.11,.01,21,2,0)
QUEUED) background job compile was run to completion on a Wednesday. This 
"^DD",985.1,985.11,.01,21,3,0)
field is ONLY populated by the routine (^MPISSR2).
"^DD",985.1,985.11,.01,"DT")
3020611
"^DD",985.1,985.11,1,0)
TOTAL ICNS^NJ12,0^^0;2^K:+X'=X!(X>999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.11,1,3)
This field contains the summary data from the MPI Stat Report background job for the "Total number of unique Patients (ICNs)". This field is ONLY populated by the routine ^MPISSR2.
"^DD",985.1,985.11,1,21,0)
^^4^4^3020611^
"^DD",985.1,985.11,1,21,1,0)
This is the "Total number of unique Patients (ICNs)" reported in the 
"^DD",985.1,985.11,1,21,2,0)
summary data section of the last MPI Stat Report (MPI DATA MGT STAT RPT 
"^DD",985.1,985.11,1,21,3,0)
QUEUED) compiled on a Wednesday. This field is ONLY populated by the 
"^DD",985.1,985.11,1,21,4,0)
routine ^MPISSR2.
"^DD",985.1,985.11,1,"DT")
3020611
"^DD",985.1,985.11,2,0)
TOTAL INACTIVATED ICNS^NJ10,0^^0;3^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.11,2,3)
This field contains the summary data from the MPI Stat Report background job for the "Total number of inactivated ICNs". This field is ONLY populated by the routine ^MPISSR2.
"^DD",985.1,985.11,2,21,0)
^^4^4^3020611^
"^DD",985.1,985.11,2,21,1,0)
This is the "Total number of inactivated ICNs" reported in the summary 
"^DD",985.1,985.11,2,21,2,0)
data section of the last MPI Stat Report (MPI DATA MGT STAT RPT QUEUED) 
"^DD",985.1,985.11,2,21,3,0)
compiled on a Wednesday. This field is ONLY populated by the routine 
"^DD",985.1,985.11,2,21,4,0)
^MPISSR).
"^DD",985.1,985.11,2,"DT")
3020611
"^DD",985.1,985.11,3,0)
TOTAL DUP SSNS TO BE RESOLVED^NJ10,0^^0;4^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.11,3,3)
This field contains the summary data from the MPI Stat Report background job for the "Total duplicate SSNs requiring resolution". This field is ONLY populated by the routine ^MPISSR2.
"^DD",985.1,985.11,3,21,0)
^^6^6^3020611^
"^DD",985.1,985.11,3,21,1,0)
This is the "Total duplicate SSNs requiring resolution" reported in the 
"^DD",985.1,985.11,3,21,2,0)
summary data section of the last MPI Stat Report (MPI DATA MGT STAT RPT 
"^DD",985.1,985.11,3,21,3,0)
QUEUED) compiled on a Wednesday. This is the total number of duplicated 
"^DD",985.1,985.11,3,21,4,0)
SSNs minus the total number of duplicated SSN cases that have been marked 
"^DD",985.1,985.11,3,21,5,0)
as "cannot be resolved". This field is ONLY populated by the routine 
"^DD",985.1,985.11,3,21,6,0)
^MPISSR2.
"^DD",985.1,985.11,3,"DT")
3020611
"^DD",985.1,985.11,4,0)
TOTAL UNRESOLVABLE DUP SSNS^NJ10,0^^0;5^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.11,4,3)
This field contains the summary data from the MPI Stat Report background job for the "Total duplicate SSNs marked as "Cannot be Resolved". This field is ONLY populated by the routine ^MPISSR2.
"^DD",985.1,985.11,4,21,0)
^^4^4^3020611^
"^DD",985.1,985.11,4,21,1,0)
This is the "Total duplicate SSNs marked as "Cannot be Resolved" reported 
"^DD",985.1,985.11,4,21,2,0)
in the summary data section of the last MPI Stat Report (MPI DATA MGT 
"^DD",985.1,985.11,4,21,3,0)
STAT RPT QUEUED) compiled on a Wednesday. This field is ONLY populated by 
"^DD",985.1,985.11,4,21,4,0)
the routine ^MPISSR2.
"^DD",985.1,985.11,4,"DT")
3020611
"^DD",985.1,985.12,0)
STAT REPORT DAILY DUP SSN DATE SUB-FIELD^^2^3
"^DD",985.1,985.12,0,"DT")
3020717
"^DD",985.1,985.12,0,"NM","STAT REPORT DAILY DUP SSN DATE")

"^DD",985.1,985.12,0,"UP")
985.1
"^DD",985.1,985.12,.01,0)
STAT REPORT DAILY DUP SSN DATE^MDXa^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X S:$D(X) DINUM=X
"^DD",985.1,985.12,.01,1,0)
^.1^^0
"^DD",985.1,985.12,.01,3)
Enter the date for which this daily DUP SSN data is being entered.
"^DD",985.1,985.12,.01,21,0)
^.001^4^4^3020717^^^
"^DD",985.1,985.12,.01,21,1,0)
This is the date for which daily Stat Report data for DUP SSN resolution 
"^DD",985.1,985.12,.01,21,2,0)
and additions is stored.  This information is reported each Wednesday 
"^DD",985.1,985.12,.01,21,3,0)
after the option "Background MPI Stat Report Compile" [MPI DATA MGT STAT 
"^DD",985.1,985.12,.01,21,4,0)
RPT QUEUED].
"^DD",985.1,985.12,.01,"AUDIT")
y
"^DD",985.1,985.12,.01,"DT")
3020717
"^DD",985.1,985.12,1,0)
SSN ADDED^NJ6,0a^^0;2^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.12,1,3)
Enter the total number of duplicate SSNs that were added on this date.
"^DD",985.1,985.12,1,21,0)
^^4^4^3020717^
"^DD",985.1,985.12,1,21,1,0)
This is the total number of new duplicate SSNs that were added on this 
"^DD",985.1,985.12,1,21,2,0)
date to the MPI DUP SSN (#985.32) file.  These duplicates are identified 
"^DD",985.1,985.12,1,21,3,0)
by the option "Background MPI Stat Report Compile" [MPI DATA MGT STAT RPT 
"^DD",985.1,985.12,1,21,4,0)
QUEUED].
"^DD",985.1,985.12,1,"AUDIT")
y
"^DD",985.1,985.12,1,"DT")
3020717
"^DD",985.1,985.12,2,0)
SSN RESOLVED^NJ5,0a^^0;3^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.12,2,3)
Enter the total number of duplicate SSNs that were resolved on this date.
"^DD",985.1,985.12,2,21,0)
^^4^4^3020717^
"^DD",985.1,985.12,2,21,1,0)
This is the total number of duplicate SSNs that were resolved on this 
"^DD",985.1,985.12,2,21,2,0)
date either by Data Management team work, NOIS/Exception resolution, or 
"^DD",985.1,985.12,2,21,3,0)
site data corrections.  As duplicate SSNs are resolved, they are deleted 
"^DD",985.1,985.12,2,21,4,0)
from the MPI DUP SSN (#985.32) file.
"^DD",985.1,985.12,2,"AUDIT")
y
"^DD",985.1,985.12,2,"DT")
3020717
"^DD",985.1,985.13,0)
ID STATE RUN DATE SUB-FIELD^^5^5
"^DD",985.1,985.13,0,"DT")
3040405
"^DD",985.1,985.13,0,"IX","B",985.13,.01)

"^DD",985.1,985.13,0,"NM","ID STATE RUN DATE")

"^DD",985.1,985.13,0,"UP")
985.1
"^DD",985.1,985.13,.01,0)
ID STATE RUN DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.1,985.13,.01,1,0)
^.1
"^DD",985.1,985.13,.01,1,1,0)
985.13^B
"^DD",985.1,985.13,.01,1,1,1)
S ^MPI(985.1,DA(1),"ID_STATE_SUM","B",$E(X,1,30),DA)=""
"^DD",985.1,985.13,.01,1,1,2)
K ^MPI(985.1,DA(1),"ID_STATE_SUM","B",$E(X,1,30),DA)
"^DD",985.1,985.13,.01,3)
Enter the date/time when the routine last completed.
"^DD",985.1,985.13,.01,21,0)
^.001^2^2^3040209^^^
"^DD",985.1,985.13,.01,21,1,0)
This field contains the date/time the Set ID State for
"^DD",985.1,985.13,.01,21,2,0)
Existing Entries routine completed.
"^DD",985.1,985.13,.01,"DT")
3040127
"^DD",985.1,985.13,1,0)
ID STATE NUMBER PROCESSED^NJ10,0^^0;2^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.13,1,3)
Enter the number of entries processed.
"^DD",985.1,985.13,1,21,0)
^.001^2^2^3040209^^^
"^DD",985.1,985.13,1,21,1,0)
This field contains the total number of entries processed
"^DD",985.1,985.13,1,21,2,0)
for the specific date/time.
"^DD",985.1,985.13,1,"DT")
3040127
"^DD",985.1,985.13,2,0)
DEACTIVATED TOTAL^NJ10,0^^0;3^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.13,2,3)
Enter the number of DEACTIVATED entries processed.
"^DD",985.1,985.13,2,21,0)
^.001^2^2^3040405^^^
"^DD",985.1,985.13,2,21,1,0)
This field contains the total number of entries processed
"^DD",985.1,985.13,2,21,2,0)
with an ID STATE of DEACTIVATED for the specific date/time.
"^DD",985.1,985.13,2,"DT")
3040210
"^DD",985.1,985.13,4,0)
TEMPORARY TOTAL^NJ10,0^^0;5^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.13,4,3)
Enter the number of TEMPORARY entries processed.
"^DD",985.1,985.13,4,21,0)
^^2^2^3040209^
"^DD",985.1,985.13,4,21,1,0)
This field contains the total number of entries processed
"^DD",985.1,985.13,4,21,2,0)
with an ID STATE of TEMPORARY for the specific date/time.
"^DD",985.1,985.13,4,"DT")
3040209
"^DD",985.1,985.13,5,0)
PERMANENT TOTAL^NJ10,0^^0;6^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",985.1,985.13,5,3)
Enter the number of PERMANENT entries processed.
"^DD",985.1,985.13,5,21,0)
^^2^2^3040209^
"^DD",985.1,985.13,5,21,1,0)
This field contains the total number of entries processed
"^DD",985.1,985.13,5,21,2,0)
with an ID STATE of PERMANENT for the specific date/time.
"^DD",985.1,985.13,5,"DT")
3040209
"^DD",985.2,985.2,0)
FIELD^^11^12
"^DD",985.2,985.2,0,"DDA")
N
"^DD",985.2,985.2,0,"DT")
3021003
"^DD",985.2,985.2,0,"ID","WRITE")
D WRTID^MPIMDMF2
"^DD",985.2,985.2,0,"IX","AC",985.2,2)

"^DD",985.2,985.2,0,"IX","AD",985.2,.01)

"^DD",985.2,985.2,0,"IX","AE",985.2,.01)

"^DD",985.2,985.2,0,"IX","APROB",985.2,10)

"^DD",985.2,985.2,0,"IX","ASTAT",985.2,2)

"^DD",985.2,985.2,0,"IX","B",985.2,.01)

"^DD",985.2,985.2,0,"IX","DUZ",985.2,1)

"^DD",985.2,985.2,0,"IX","ICN",985.212,.01)

"^DD",985.2,985.2,0,"IX","NOIS",985.2,9)

"^DD",985.2,985.2,0,"IX","PAT",985.212,1)

"^DD",985.2,985.2,0,"IX","SITE",985.213,.01)

"^DD",985.2,985.2,0,"IX","SSN",985.211,.01)

"^DD",985.2,985.2,0,"NM","MPI DATA MGT RESOLUTION JOURNAL")

"^DD",985.2,985.2,0,"PT",985,22)

"^DD",985.2,985.2,0,"PT",985.25,4)

"^DD",985.2,985.2,0,"PT",985.26,5)

"^DD",985.2,985.2,0,"PT",985.33,13)

"^DD",985.2,985.2,0,"VRPK")
MPI
"^DD",985.2,985.2,.01,0)
CASE #^RFX^^0;1^D ADD^MPIMDMF1 K:$L(X)>10!($L(X)<10)!'(X?4N1"-"5N) X
"^DD",985.2,985.2,.01,1,0)
^.1
"^DD",985.2,985.2,.01,1,1,0)
985.2^B
"^DD",985.2,985.2,.01,1,1,1)
S ^MPI(985.2,"B",$E(X,1,30),DA)=""
"^DD",985.2,985.2,.01,1,1,2)
K ^MPI(985.2,"B",$E(X,1,30),DA)
"^DD",985.2,985.2,.01,1,2,0)
985.2^AD^MUMPS
"^DD",985.2,985.2,.01,1,2,1)
Q
"^DD",985.2,985.2,.01,1,2,2)
D DEL2^MPIMDMF2
"^DD",985.2,985.2,.01,1,2,"%D",0)
^^2^2^3020317^
"^DD",985.2,985.2,.01,1,2,"%D",1,0)
DEL2^MPIMDMF2 deletes corresponding entry in MPI DATA MGT PROBLEM 
"^DD",985.2,985.2,.01,1,2,"%D",2,0)
CATEGORY file (#985.25) when CASE # is deleted.
"^DD",985.2,985.2,.01,1,2,"DT")
3020117
"^DD",985.2,985.2,.01,1,3,0)
985.2^AE^MUMPS
"^DD",985.2,985.2,.01,1,3,1)
D ADD2^MPIMDMF1
"^DD",985.2,985.2,.01,1,3,2)
Q
"^DD",985.2,985.2,.01,1,3,"%D",0)
^^2^2^3020117^
"^DD",985.2,985.2,.01,1,3,"%D",1,0)
ADD2^MPIMDMF1 auto-stuffs data for new entry in file, MPIMICN is set from 
"^DD",985.2,985.2,.01,1,3,"%D",2,0)
input transform call to ADD.
"^DD",985.2,985.2,.01,1,3,"DT")
3020117
"^DD",985.2,985.2,.01,3)
To create a new case, enter an involved ICN or SSN.  To edit an existing case, enter the Case # or an involved ICN or SSN.
"^DD",985.2,985.2,.01,21,0)
^^3^3^3020401^
"^DD",985.2,985.2,.01,21,1,0)
This is the case number automatically generated and assigned to this 
"^DD",985.2,985.2,.01,21,2,0)
case.  The format is year/month-sequential case number for that 
"^DD",985.2,985.2,.01,21,3,0)
year/month.  Ex. 0102-00018 would be case #18 created in February 2001.
"^DD",985.2,985.2,.01,"DT")
3020117
"^DD",985.2,985.2,1,0)
CASE WORKER^RP200'X^VA(200,^0;2^D ADDCW^MPIMDMF2
"^DD",985.2,985.2,1,1,0)
^.1
"^DD",985.2,985.2,1,1,1,0)
985.2^DUZ^MUMPS
"^DD",985.2,985.2,1,1,1,1)
S ^MPI(985.2,"DUZ",$P(^VA(200,X,0),"^"),DA)=""
"^DD",985.2,985.2,1,1,1,2)
K ^MPI(985.2,"DUZ",$P(^VA(200,X,0),"^"),DA)
"^DD",985.2,985.2,1,1,1,"DT")
3011129
"^DD",985.2,985.2,1,3)
Enter the user who is primarily responsible for the tracking and resolution of this case.
"^DD",985.2,985.2,1,21,0)
^^3^3^3020317^
"^DD",985.2,985.2,1,21,1,0)
This is the case worker automatically assigned to this case at the time a 
"^DD",985.2,985.2,1,21,2,0)
case is created.  The case worker can be edited at any point and an "auto 
"^DD",985.2,985.2,1,21,3,0)
note" will be posted to the Resolution Notes.
"^DD",985.2,985.2,1,"DT")
3020117
"^DD",985.2,985.2,2,0)
STATUS^RS^O:OPEN;R:RESOLVED;C:CANNOT BE RESOLVED;^0;3^Q
"^DD",985.2,985.2,2,1,0)
^.1
"^DD",985.2,985.2,2,1,1,0)
985.2^ASTAT
"^DD",985.2,985.2,2,1,1,1)
S ^MPI(985.2,"ASTAT",$E(X,1,30),DA)=""
"^DD",985.2,985.2,2,1,1,2)
K ^MPI(985.2,"ASTAT",$E(X,1,30),DA)
"^DD",985.2,985.2,2,1,1,"DT")
3010213
"^DD",985.2,985.2,2,1,2,0)
985.2^AC^MUMPS
"^DD",985.2,985.2,2,1,2,1)
D STAT^MPIMDMF2
"^DD",985.2,985.2,2,1,2,2)
Q
"^DD",985.2,985.2,2,1,2,"%D",0)
^^9^9^3020317^
"^DD",985.2,985.2,2,1,2,"%D",1,0)
This xref will do the following when STATUS is edited: 
"^DD",985.2,985.2,2,1,2,"%D",2,0)
 
"^DD",985.2,985.2,2,1,2,"%D",3,0)
When status is set to Resolved or Cannot be Resolved, delete 
"^DD",985.2,985.2,2,1,2,"%D",4,0)
corresponding entry in file MPI DATA MGT PROBLEM CATEGORY file (#985.25) 
"^DD",985.2,985.2,2,1,2,"%D",5,0)
and set DATE/TIME CASE CLOSED in file MPI DATA MGT PROBLEM CATEGORY file 
"^DD",985.2,985.2,2,1,2,"%D",6,0)
(#985.25) to NOW.  
"^DD",985.2,985.2,2,1,2,"%D",7,0)
                                 
"^DD",985.2,985.2,2,1,2,"%D",8,0)
When status is set to Open, add corresponding entry in file MPI DATA MGT 
"^DD",985.2,985.2,2,1,2,"%D",9,0)
PROBLEM CATEGORY file (#985.25) and set DATE/TIME CASE CLOSED to null.  
"^DD",985.2,985.2,2,1,2,"DT")
3020117
"^DD",985.2,985.2,2,3)
Enter the current status of this case.
"^DD",985.2,985.2,2,21,0)
^^3^3^3020318^
"^DD",985.2,985.2,2,21,1,0)
This is the status currently assigned to this case. An ICN or SSN can only
"^DD",985.2,985.2,2,21,2,0)
be associated with one OPEN case.  Cases with a status of RESOLVED or 
"^DD",985.2,985.2,2,21,3,0)
CANNOT BE RESOLVED are considered to be closed.
"^DD",985.2,985.2,2,"DT")
3020117
"^DD",985.2,985.2,3,0)
SSN^985.211^^SSN;0
"^DD",985.2,985.2,3,21,0)
^.001^1^1^3020317^^
"^DD",985.2,985.2,3,21,1,0)
This is the list of SSNs associated with this case.
"^DD",985.2,985.2,4,0)
ICN^985.212P^^ICN;0
"^DD",985.2,985.2,4,21,0)
^.001^1^1^3020317^^
"^DD",985.2,985.2,4,21,1,0)
This is the list of ICNs associated with this case.
"^DD",985.2,985.2,5,0)
SITE^985.213P^^SITE;0
"^DD",985.2,985.2,5,21,0)
^^2^2^3020318^
"^DD",985.2,985.2,5,21,1,0)
This is the list of medical facilities associated with all the ICNs 
"^DD",985.2,985.2,5,21,2,0)
included in this case at the time this case was created.
"^DD",985.2,985.2,6,0)
RESOLUTION NOTES^985.214^^1;0
"^DD",985.2,985.2,6,21,0)
^^2^2^3020318^
"^DD",985.2,985.2,6,21,1,0)
These are notes that provide an historical record of what the problem and 
"^DD",985.2,985.2,6,21,2,0)
resolution steps were for this case.
"^DD",985.2,985.2,7,0)
DATE/TIME CASE OPENED^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",985.2,985.2,7,3)
Enter the date/time work began on this case.
"^DD",985.2,985.2,7,21,0)
^^1^1^3020116^
"^DD",985.2,985.2,7,21,1,0)
This is the date/time this case was originally created.
"^DD",985.2,985.2,7,"DT")
3010213
"^DD",985.2,985.2,8,0)
DATE/TIME CASE CLOSED^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985.2,985.2,8,3)
Enter the date/time this case was closed either by being resolved or determining it cannot be resolved.
"^DD",985.2,985.2,8,21,0)
^^2^2^3020318^
"^DD",985.2,985.2,8,21,1,0)
This is the date/time this case was given a status of RESOLVED or CANNOT 
"^DD",985.2,985.2,8,21,2,0)
BE RESOLVED.
"^DD",985.2,985.2,8,"DT")
3020318
"^DD",985.2,985.2,9,0)
ASSOCIATED NOIS^F^^0;6^K:$L(X)>99!($L(X)<1) X
"^DD",985.2,985.2,9,1,0)
^.1
"^DD",985.2,985.2,9,1,1,0)
985.2^NOIS
"^DD",985.2,985.2,9,1,1,1)
S ^MPI(985.2,"NOIS",$E(X,1,30),DA)=""
"^DD",985.2,985.2,9,1,1,2)
K ^MPI(985.2,"NOIS",$E(X,1,30),DA)
"^DD",985.2,985.2,9,1,1,"DT")
3011130
"^DD",985.2,985.2,9,3)
Enter NOIS or Remedy ID number.
"^DD",985.2,985.2,9,21,0)
^^4^4^3020318^
"^DD",985.2,985.2,9,21,1,0)
This field is used to store the identifier of a NOIS that may be 
"^DD",985.2,985.2,9,21,2,0)
associated with this case.  This information will be displayed on the MPI 
"^DD",985.2,985.2,9,21,3,0)
Patient Data Query (PDAT), View a Case option, and Dup SSN report.  It is 
"^DD",985.2,985.2,9,21,4,0)
also an editable field in the Create/Edit a Case option.
"^DD",985.2,985.2,9,"DT")
3021003
"^DD",985.2,985.2,10,0)
PROBLEM CATEGORY^P985.21'X^MPI(985.21,^PROB;1^D ADDPC^MPIMDMF2
"^DD",985.2,985.2,10,1,0)
^.1
"^DD",985.2,985.2,10,1,1,0)
985.2^APROB
"^DD",985.2,985.2,10,1,1,1)
S ^MPI(985.2,"APROB",$E(X,1,30),DA)=""
"^DD",985.2,985.2,10,1,1,2)
K ^MPI(985.2,"APROB",$E(X,1,30),DA)
"^DD",985.2,985.2,10,1,1,"%D",0)
^^1^1^3020116^
"^DD",985.2,985.2,10,1,1,"%D",1,0)
This xref is used to sort cases by Problem Category.
"^DD",985.2,985.2,10,1,1,"DT")
3020116
"^DD",985.2,985.2,10,3)
Enter the Problem Category appropriate for this case.
"^DD",985.2,985.2,10,21,0)
^^2^2^3020318^
"^DD",985.2,985.2,10,21,1,0)
This is the Problem Category appropriate for this case.  Problem 
"^DD",985.2,985.2,10,21,2,0)
Categories are stored in the MPI DATA MGT PROBLEM CATEGORY FILE (#985.21).
"^DD",985.2,985.2,10,"DT")
3050217
"^DD",985.2,985.2,11,0)
SHORT PROBLEM DESCRIPTION^F^^PROB;2^K:$L(X)>65!($L(X)<1) X
"^DD",985.2,985.2,11,3)
Enter a brief description of this case. Answer must be 1-65 characters in length.
"^DD",985.2,985.2,11,21,0)
^^1^1^3020318^
"^DD",985.2,985.2,11,21,1,0)
This is the brief free text description of this case.
"^DD",985.2,985.2,11,"DT")
3020116
"^DD",985.2,985.211,0)
SSN SUB-FIELD^^1^2
"^DD",985.2,985.211,0,"DT")
3020116
"^DD",985.2,985.211,0,"NM","SSN")

"^DD",985.2,985.211,0,"UP")
985.2
"^DD",985.2,985.211,.01,0)
SSN^MF^^0;1^K:$L(X)>9!($L(X)<9) X
"^DD",985.2,985.211,.01,1,0)
^.1
"^DD",985.2,985.211,.01,1,1,0)
985.2^SSN
"^DD",985.2,985.211,.01,1,1,1)
S ^MPI(985.2,"SSN",$E(X,1,30),DA(1),DA)=""
"^DD",985.2,985.211,.01,1,1,2)
K ^MPI(985.2,"SSN",$E(X,1,30),DA(1),DA)
"^DD",985.2,985.211,.01,1,1,"DT")
3010213
"^DD",985.2,985.211,.01,3)
Enter an SSN associated with this case.
"^DD",985.2,985.211,.01,21,0)
^.001^1^1^3020317^^^
"^DD",985.2,985.211,.01,21,1,0)
This is the list of SSNs associated with this case.
"^DD",985.2,985.211,.01,"DT")
3020116
"^DD",985.2,985.211,1,0)
ICN^P985'^MPIVET(^0;2^Q
"^DD",985.2,985.211,1,3)
Enter an ICN associated with this SSN.
"^DD",985.2,985.211,1,21,0)
^^2^2^3020317^
"^DD",985.2,985.211,1,21,1,0)
This is any ICN associated with this SSN.  If this is a dup SSN type case 
"^DD",985.2,985.211,1,21,2,0)
then no ICN will be stored.
"^DD",985.2,985.211,1,"DT")
3020116
"^DD",985.2,985.212,0)
ICN SUB-FIELD^^3^4
"^DD",985.2,985.212,0,"DT")
3020317
"^DD",985.2,985.212,0,"NM","ICN")

"^DD",985.2,985.212,0,"UP")
985.2
"^DD",985.2,985.212,.01,0)
ICN^MP985'^MPIVET(^0;1^Q
"^DD",985.2,985.212,.01,1,0)
^.1
"^DD",985.2,985.212,.01,1,1,0)
985.2^ICN
"^DD",985.2,985.212,.01,1,1,1)
S ^MPI(985.2,"ICN",$E(X,1,30),DA(1),DA)=""
"^DD",985.2,985.212,.01,1,1,2)
K ^MPI(985.2,"ICN",$E(X,1,30),DA(1),DA)
"^DD",985.2,985.212,.01,1,1,"DT")
3010213
"^DD",985.2,985.212,.01,3)
Enter each ICN involved in this case.
"^DD",985.2,985.212,.01,21,0)
^^1^1^3020317^
"^DD",985.2,985.212,.01,21,1,0)
This is the list of ICNs associated with this case.
"^DD",985.2,985.212,.01,"DT")
3010213
"^DD",985.2,985.212,1,0)
PATIENT NAME^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",985.2,985.212,1,1,0)
^.1
"^DD",985.2,985.212,1,1,1,0)
985.2^PAT
"^DD",985.2,985.212,1,1,1,1)
S ^MPI(985.2,"PAT",$E(X,1,30),DA(1),DA)=""
"^DD",985.2,985.212,1,1,1,2)
K ^MPI(985.2,"PAT",$E(X,1,30),DA(1),DA)
"^DD",985.2,985.212,1,1,1,"DT")
3010305
"^DD",985.2,985.212,1,3)
Enter name of patient associated with this ICN. 
"^DD",985.2,985.212,1,21,0)
^^2^2^3020317^
"^DD",985.2,985.212,1,21,1,0)
This is the patient name stored for this patient in the MPI 
"^DD",985.2,985.212,1,21,2,0)
VETERAN/CLIENT file (#985) at the time this case was created.
"^DD",985.2,985.212,1,"DT")
3010305
"^DD",985.2,985.212,2,0)
PATIENT DOB^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",985.2,985.212,2,3)
Enter the date of birth for this patient.
"^DD",985.2,985.212,2,21,0)
^^2^2^3020318^
"^DD",985.2,985.212,2,21,1,0)
This is the date of birth stored for this patient in the MPI
"^DD",985.2,985.212,2,21,2,0)
VETERAN/CLIENT file (#985) at the time this case was created.
"^DD",985.2,985.212,2,"DT")
3020317
"^DD",985.2,985.212,3,0)
SSN^F^^0;4^K:$L(X)>9!($L(X)<9) X
"^DD",985.2,985.212,3,3)
Enter the SSN associated with this ICN.
"^DD",985.2,985.212,3,21,0)
^^3^3^3020318^
"^DD",985.2,985.212,3,21,1,0)
This is the SSN stored for this patient in the MPI VETERAN/CLIENT file 
"^DD",985.2,985.212,3,21,2,0)
(#985) at the time this case was created.  Pseudo-SSNs are not stored in 
"^DD",985.2,985.212,3,21,3,0)
the MPI VETERAN/CLIENT file (#985).
"^DD",985.2,985.212,3,"DT")
3020116
"^DD",985.2,985.213,0)
SITE SUB-FIELD^^3^4
"^DD",985.2,985.213,0,"DT")
3020301
"^DD",985.2,985.213,0,"NM","SITE")

"^DD",985.2,985.213,0,"UP")
985.2
"^DD",985.2,985.213,.01,0)
SITE^MP4'^DIC(4,^0;1^Q
"^DD",985.2,985.213,.01,1,0)
^.1
"^DD",985.2,985.213,.01,1,1,0)
985.2^SITE
"^DD",985.2,985.213,.01,1,1,1)
S ^MPI(985.2,"SITE",$E(X,1,30),DA(1),DA)=""
"^DD",985.2,985.213,.01,1,1,2)
K ^MPI(985.2,"SITE",$E(X,1,30),DA(1),DA)
"^DD",985.2,985.213,.01,1,1,"DT")
3010213
"^DD",985.2,985.213,.01,3)
Enter each medical facility involved in this case.
"^DD",985.2,985.213,.01,21,0)
^^2^2^3020318^
"^DD",985.2,985.213,.01,21,1,0)
This is the list of medical facilities associated with all the ICNs 
"^DD",985.2,985.213,.01,21,2,0)
included in this case at the time this case was created.
"^DD",985.2,985.213,.01,"DT")
3010213
"^DD",985.2,985.213,1,0)
ICN^P985'^MPIVET(^0;2^Q
"^DD",985.2,985.213,1,3)
Enter the ICN associated with this medical facility at the time this case was created.
"^DD",985.2,985.213,1,21,0)
^^2^2^3020318^
"^DD",985.2,985.213,1,21,1,0)
This is the ICN associated with this medical facility at the time this 
"^DD",985.2,985.213,1,21,2,0)
case was created.
"^DD",985.2,985.213,1,"DT")
3020116
"^DD",985.2,985.213,2,0)
DATE CONTACTED^DX^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X I $D(X) D ADDDC^MPIMDMF2
"^DD",985.2,985.213,2,3)
Enter the last date this medical facility was contacted.
"^DD",985.2,985.213,2,21,0)
^^3^3^3020318^
"^DD",985.2,985.213,2,21,1,0)
This is the last date this medical facility was contacted.  All past dates
"^DD",985.2,985.213,2,21,2,0)
can be viewed in the RESOLUTION NOTES as they are stored there 
"^DD",985.2,985.213,2,21,3,0)
automatically each time this field is edited.
"^DD",985.2,985.213,2,"DT")
3020116
"^DD",985.2,985.213,3,0)
DATE CONTACTED COMMENTS^FX^^0;4^K:$L(X)>80!($L(X)<1) X I $D(X) D ADDDCC^MPIMDMF2
"^DD",985.2,985.213,3,3)
Enter any brief comments concerning the site contact. Answer must be 1-80 characters in length.
"^DD",985.2,985.213,3,21,0)
^.001^3^3^3020301^^
"^DD",985.2,985.213,3,21,1,0)
These are any brief comments associated with the last date the site was 
"^DD",985.2,985.213,3,21,2,0)
contacted.  All past comments can be viewed in the RESOLUTION NOTES as 
"^DD",985.2,985.213,3,21,3,0)
they are stored there automatically each time this field is edited.
"^DD",985.2,985.213,3,"DT")
3020301
"^DD",985.2,985.214,0)
RESOLUTION NOTES SUB-FIELD^^.01^1
"^DD",985.2,985.214,0,"DT")
3020116
"^DD",985.2,985.214,0,"NM","RESOLUTION NOTES")

"^DD",985.2,985.214,0,"UP")
985.2
"^DD",985.2,985.214,.01,0)
RESOLUTION NOTES^W^^0;1^Q
"^DD",985.2,985.214,.01,3)
Enter all relevant notes concerning the resolution of this case.
"^DD",985.2,985.214,.01,21,0)
^^2^2^3020318^
"^DD",985.2,985.214,.01,21,1,0)
These are notes that provide an historical record of what the problem and 
"^DD",985.2,985.214,.01,21,2,0)
resolution steps were for this case.
"^DD",985.2,985.214,.01,"DT")
3020116
"^DD",985.21,985.21,0)
FIELD^^1^3
"^DD",985.21,985.21,0,"DDA")
N
"^DD",985.21,985.21,0,"DT")
3020120
"^DD",985.21,985.21,0,"ID","WRITE")
W ?38,$P(^(0),U,2)
"^DD",985.21,985.21,0,"IX","B",985.21,.01)

"^DD",985.21,985.21,0,"IX","C",985.21,.5)

"^DD",985.21,985.21,0,"NM","MPI DATA MGT PROBLEM CATEGORY")

"^DD",985.21,985.21,0,"PT",985.2,10)

"^DD",985.21,985.21,0,"VRPK")
MPI
"^DD",985.21,985.21,.01,0)
PROBLEM CATEGORY^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",985.21,985.21,.01,1,0)
^.1
"^DD",985.21,985.21,.01,1,1,0)
985.21^B
"^DD",985.21,985.21,.01,1,1,1)
S ^MPI(985.21,"B",$E(X,1,30),DA)=""
"^DD",985.21,985.21,.01,1,1,2)
K ^MPI(985.21,"B",$E(X,1,30),DA)
"^DD",985.21,985.21,.01,3)
Enter the name of this Problem Category.  Answer must be 3-30 characters in length.
"^DD",985.21,985.21,.01,21,0)
^^2^2^3020318^
"^DD",985.21,985.21,.01,21,1,0)
This is the brief descriptive name of the Problem Category that is 
"^DD",985.21,985.21,.01,21,2,0)
assigned to each MPI Resolution Journal Case (file #985.2).
"^DD",985.21,985.21,.01,"DT")
3020116
"^DD",985.21,985.21,.5,0)
CODE^RF^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",985.21,985.21,.5,1,0)
^.1
"^DD",985.21,985.21,.5,1,1,0)
985.21^C
"^DD",985.21,985.21,.5,1,1,1)
S ^MPI(985.21,"C",$E(X,1,30),DA)=""
"^DD",985.21,985.21,.5,1,1,2)
K ^MPI(985.21,"C",$E(X,1,30),DA)
"^DD",985.21,985.21,.5,1,1,"DT")
3020120
"^DD",985.21,985.21,.5,3)
Enter the code to be used to select this Problem Category.
"^DD",985.21,985.21,.5,21,0)
^^2^2^3020120^
"^DD",985.21,985.21,.5,21,1,0)
This is a 1-3 character code used to select the Problem Category from a 
"^DD",985.21,985.21,.5,21,2,0)
list.
"^DD",985.21,985.21,.5,"DT")
3020120
"^DD",985.21,985.21,1,0)
DESCRIPTION^985.22^^DESC;0
"^DD",985.21,985.21,1,21,0)
^^2^2^3020318^
"^DD",985.21,985.21,1,21,1,0)
This is a word processing field used to describe this Problem Category in 
"^DD",985.21,985.21,1,21,2,0)
detail.
"^DD",985.21,985.22,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",985.21,985.22,0,"DT")
3020116
"^DD",985.21,985.22,0,"NM","DESCRIPTION")

"^DD",985.21,985.22,0,"UP")
985.21
"^DD",985.21,985.22,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",985.21,985.22,.01,3)
Enter a detailed description of this Problem category.
"^DD",985.21,985.22,.01,21,0)
^^2^2^3020318^
"^DD",985.21,985.22,.01,21,1,0)
This is a word processing field used to describe this Problem Category in 
"^DD",985.21,985.22,.01,21,2,0)
detail.
"^DD",985.21,985.22,.01,"DT")
3020116
"^DD",985.25,985.25,0)
FIELD^^4^5
"^DD",985.25,985.25,0,"DT")
3020402
"^DD",985.25,985.25,0,"ID","WRITE")
S %I=Y,Y=$S('$D(^(0)):"",$D(^MPI(985.2,+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(985.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",985.25,985.25,0,"IX","B",985.25,.01)

"^DD",985.25,985.25,0,"IX","DUZ",985.25,2)

"^DD",985.25,985.25,0,"IX","SSN",985.25,1)

"^DD",985.25,985.25,0,"NM","MPI DATA MGT ACTIVE RESOLUTION WORK")

"^DD",985.25,985.25,0,"VRPK")
MPI
"^DD",985.25,985.25,.01,0)
ICN^RP985'X^MPIVET(^0;1^S DINUM=X
"^DD",985.25,985.25,.01,1,0)
^.1
"^DD",985.25,985.25,.01,1,1,0)
985.25^B
"^DD",985.25,985.25,.01,1,1,1)
S ^MPI(985.25,"B",$E(X,1,30),DA)=""
"^DD",985.25,985.25,.01,1,1,2)
K ^MPI(985.25,"B",$E(X,1,30),DA)
"^DD",985.25,985.25,.01,3)
Enter the ICN of the patient for whom data resolution work is being done.
"^DD",985.25,985.25,.01,21,0)
^^3^3^3020318^
"^DD",985.25,985.25,.01,21,1,0)
This is an ICN that are currently being worked on either through a case 
"^DD",985.25,985.25,.01,21,2,0)
being created in the MPI DATA MGT RESOLUTION JOURNAL file (#985.2) or 
"^DD",985.25,985.25,.01,21,3,0)
directly checked out using the option [MPI DATA MGT CHK OUT].
"^DD",985.25,985.25,.01,"DT")
3010213
"^DD",985.25,985.25,1,0)
SSN^F^^0;2^K:$L(X)>9!($L(X)<9) X
"^DD",985.25,985.25,1,1,0)
^.1
"^DD",985.25,985.25,1,1,1,0)
985.25^SSN
"^DD",985.25,985.25,1,1,1,1)
S ^MPI(985.25,"SSN",$E(X,1,30),DA)=""
"^DD",985.25,985.25,1,1,1,2)
K ^MPI(985.25,"SSN",$E(X,1,30),DA)
"^DD",985.25,985.25,1,1,1,"DT")
3010213
"^DD",985.25,985.25,1,3)
Answer must be 9 characters in length.
"^DD",985.25,985.25,1,21,0)
^.001^2^2^3020402^^
"^DD",985.25,985.25,1,21,1,0)
This is the SSN associated with this ICN.  If the patient has a pseudo 
"^DD",985.25,985.25,1,21,2,0)
SSN, no SSN will be defined.
"^DD",985.25,985.25,1,"DT")
3020402
"^DD",985.25,985.25,2,0)
USER^P200'^VA(200,^0;3^Q
"^DD",985.25,985.25,2,1,0)
^.1
"^DD",985.25,985.25,2,1,1,0)
985.25^DUZ
"^DD",985.25,985.25,2,1,1,1)
S ^MPI(985.25,"DUZ",$E(X,1,30),DA)=""
"^DD",985.25,985.25,2,1,1,2)
K ^MPI(985.25,"DUZ",$E(X,1,30),DA)
"^DD",985.25,985.25,2,1,1,"DT")
3010213
"^DD",985.25,985.25,2,3)
Enter the user who is primarily associated with the work on this ICN.
"^DD",985.25,985.25,2,21,0)
^^1^1^3020318^
"^DD",985.25,985.25,2,21,1,0)
This is the user who is primarily associated with the work on this ICN.
"^DD",985.25,985.25,2,"DT")
3010213
"^DD",985.25,985.25,3,0)
DATE/TIME CHECKED OUT^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985.25,985.25,3,3)
Enter the date/time this ICN was "checked out" for data resolution work.
"^DD",985.25,985.25,3,21,0)
^^4^4^3020318^
"^DD",985.25,985.25,3,21,1,0)
This is date/time this ICN was "checked out" for data resolution work. 
"^DD",985.25,985.25,3,21,2,0)
This could be the auto-set date/time a case was created in the MPI DATA 
"^DD",985.25,985.25,3,21,3,0)
MGT RESOLUTION JOURNAL file (#985.2) or the date/time an ICN was directly 
"^DD",985.25,985.25,3,21,4,0)
checked out using the option [MPI DATA MGT CHK OUT].
"^DD",985.25,985.25,3,"DT")
3020318
"^DD",985.25,985.25,4,0)
ASSOCIATED CASE #^P985.2'^MPI(985.2,^0;5^Q
"^DD",985.25,985.25,4,3)
Enter the associated CASE # from file MPI DATA MGT RESOLUTION JOURNAL FILE (#985.2).
"^DD",985.25,985.25,4,21,0)
^^3^3^3020318^
"^DD",985.25,985.25,4,21,1,0)
If this ICN was auto-defined when a case was created in the MPI DATA MGT 
"^DD",985.25,985.25,4,21,2,0)
RESOLUTION JOURNAL file (#985.2), then this field will contain that Case 
"^DD",985.25,985.25,4,21,3,0)
#.
"^DD",985.25,985.25,4,"DT")
3010216
"^DD",985.26,985.26,0)
FIELD^^5^6
"^DD",985.26,985.26,0,"DDA")
N
"^DD",985.26,985.26,0,"DT")
3050315
"^DD",985.26,985.26,0,"IX","ADUZ",985.26,4)

"^DD",985.26,985.26,0,"IX","ARDT",985.26,3)

"^DD",985.26,985.26,0,"IX","B",985.26,.01)

"^DD",985.26,985.26,0,"IX","FR",985.26,1)

"^DD",985.26,985.26,0,"IX","RJ",985.26,5)

"^DD",985.26,985.26,0,"IX","TO",985.26,2)

"^DD",985.26,985.26,0,"NM","MPI MISMATCHED PATIENT LOG")

"^DD",985.26,985.26,0,"VRPK")
MPI
"^DD",985.26,985.26,.01,0)
MISMATCHED SITE^RP985.5'^MPI(985.5,^0;1^Q
"^DD",985.26,985.26,.01,1,0)
^.1
"^DD",985.26,985.26,.01,1,1,0)
985.26^B
"^DD",985.26,985.26,.01,1,1,1)
S ^MPI(985.26,"B",$E(X,1,30),DA)=""
"^DD",985.26,985.26,.01,1,1,2)
K ^MPI(985.26,"B",$E(X,1,30),DA)
"^DD",985.26,985.26,.01,3)
Enter the site record from the MPI FACILITY ASSOCIATION (#985.5) file that has been mismatched to the wrong ICN. 
"^DD",985.26,985.26,.01,21,0)
^^2^2^3050318^
"^DD",985.26,985.26,.01,21,1,0)
Site record (for a specific patient) from the MPI FACILITY ASSOCIATION 
"^DD",985.26,985.26,.01,21,2,0)
(#985.5) file that has been mismatched to an incorrect ICN.
"^DD",985.26,985.26,.01,"DT")
3050315
"^DD",985.26,985.26,1,0)
ICN MOVED FROM^P985'^MPIVET(^0;2^Q
"^DD",985.26,985.26,1,1,0)
^.1
"^DD",985.26,985.26,1,1,1,0)
985.26^FR
"^DD",985.26,985.26,1,1,1,1)
S ^MPI(985.26,"FR",$E(X,1,30),DA)=""
"^DD",985.26,985.26,1,1,1,2)
K ^MPI(985.26,"FR",$E(X,1,30),DA)
"^DD",985.26,985.26,1,1,1,3)
Do NOT delete this cross reference!
"^DD",985.26,985.26,1,1,1,"%D",0)
^^2^2^3050318^
"^DD",985.26,985.26,1,1,1,"%D",1,0)
This cross reference is used as a lookup tool for ICNs that were involved 
"^DD",985.26,985.26,1,1,1,"%D",2,0)
in Mismatched Patients as the incorrect ICN.
"^DD",985.26,985.26,1,1,1,"DT")
3050318
"^DD",985.26,985.26,1,3)
Enter the ICN to which the site record from the MPI FACILITY ASSOCIATION (#985.5) file was mismatched.  
"^DD",985.26,985.26,1,21,0)
^^4^4^3050318^
"^DD",985.26,985.26,1,21,1,0)
ICN to which the site record in the MPI FACILITY ASSOCIATION (#985.5) 
"^DD",985.26,985.26,1,21,2,0)
file was mismatched. The site record will be re-pointed to the correct 
"^DD",985.26,985.26,1,21,3,0)
ICN by the user either selecting the correct pre-existing ICN or creating 
"^DD",985.26,985.26,1,21,4,0)
a new ICN for the patient in question.  
"^DD",985.26,985.26,1,"DT")
3050318
"^DD",985.26,985.26,2,0)
ICN MOVED TO^P985'^MPIVET(^0;3^Q
"^DD",985.26,985.26,2,1,0)
^.1
"^DD",985.26,985.26,2,1,1,0)
985.26^TO
"^DD",985.26,985.26,2,1,1,1)
S ^MPI(985.26,"TO",$E(X,1,30),DA)=""
"^DD",985.26,985.26,2,1,1,2)
K ^MPI(985.26,"TO",$E(X,1,30),DA)
"^DD",985.26,985.26,2,1,1,3)
Do NOT delete this cross reference!
"^DD",985.26,985.26,2,1,1,"%D",0)
^^3^3^3050318^
"^DD",985.26,985.26,2,1,1,"%D",1,0)
This cross reference is used as a lookup tool for ICNs that were involved 
"^DD",985.26,985.26,2,1,1,"%D",2,0)
in Mismatched Patients as the correct ICN (i.e., the newly pointed to 
"^DD",985.26,985.26,2,1,1,"%D",3,0)
ICN).
"^DD",985.26,985.26,2,1,1,"DT")
3050318
"^DD",985.26,985.26,2,3)
Enter the ICN the site record from the MPI FACILITY ASSOCIATION (#985.5) file was re-pointed to by the user either selecting the correct pre-existing ICN or creating a new ICN.
"^DD",985.26,985.26,2,21,0)
^^3^3^3050318^
"^DD",985.26,985.26,2,21,1,0)
ICN the site record in the MPI FACILITY ASSOCIATION (#985.5) file was 
"^DD",985.26,985.26,2,21,2,0)
re-pointed to by the user either selecting the correct pre-existing ICN 
"^DD",985.26,985.26,2,21,3,0)
or creating a new ICN for the patient in question.  
"^DD",985.26,985.26,2,"DT")
3050318
"^DD",985.26,985.26,3,0)
RESOLUTION DATE^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985.26,985.26,3,1,0)
^.1
"^DD",985.26,985.26,3,1,1,0)
985.26^ARDT
"^DD",985.26,985.26,3,1,1,1)
S ^MPI(985.26,"ARDT",$E(X,1,30),DA)=""
"^DD",985.26,985.26,3,1,1,2)
K ^MPI(985.26,"ARDT",$E(X,1,30),DA)
"^DD",985.26,985.26,3,1,1,3)
Do NOT delete this cross reference!
"^DD",985.26,985.26,3,1,1,"%D",0)
^^2^2^3050318^
"^DD",985.26,985.26,3,1,1,"%D",1,0)
This cross reference is used as a sorting tool for Mismatched Patients 
"^DD",985.26,985.26,3,1,1,"%D",2,0)
instances by the date the mismatch was corrected.
"^DD",985.26,985.26,3,1,1,"DT")
3050318
"^DD",985.26,985.26,3,3)
Enter the date/time the user resolved the Patient Mismatch using the option Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES].
"^DD",985.26,985.26,3,21,0)
^^2^2^3050318^
"^DD",985.26,985.26,3,21,1,0)
Date/time the user resolved the Patient Mismatch using the option 
"^DD",985.26,985.26,3,21,2,0)
Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES].
"^DD",985.26,985.26,3,"DT")
3050318
"^DD",985.26,985.26,4,0)
RESOLVED BY^P200'^VA(200,^0;5^Q
"^DD",985.26,985.26,4,1,0)
^.1
"^DD",985.26,985.26,4,1,1,0)
985.26^ADUZ
"^DD",985.26,985.26,4,1,1,1)
S ^MPI(985.26,"ADUZ",$E(X,1,30),DA)=""
"^DD",985.26,985.26,4,1,1,2)
K ^MPI(985.26,"ADUZ",$E(X,1,30),DA)
"^DD",985.26,985.26,4,1,1,3)
Do NOT delete this cross reference!
"^DD",985.26,985.26,4,1,1,"%D",0)
^^2^2^3050318^
"^DD",985.26,985.26,4,1,1,"%D",1,0)
This cross reference is used as a sorting tool for Mismatched Patients 
"^DD",985.26,985.26,4,1,1,"%D",2,0)
instances by the user who resolved the mismatch.
"^DD",985.26,985.26,4,1,1,"DT")
3050318
"^DD",985.26,985.26,4,3)
Enter the user who resolved the Patient Mismatch using the option Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES].
"^DD",985.26,985.26,4,21,0)
^^2^2^3050318^
"^DD",985.26,985.26,4,21,1,0)
User who resolved the Patient Mismatch using the option Mismatched 
"^DD",985.26,985.26,4,21,2,0)
Patient Record Resolution [MPI DATA MGT MISMATCH PT RES].
"^DD",985.26,985.26,4,"DT")
3050318
"^DD",985.26,985.26,5,0)
RESOLUTION JOURNAL CASE^P985.2'^MPI(985.2,^0;6^Q
"^DD",985.26,985.26,5,1,0)
^.1
"^DD",985.26,985.26,5,1,1,0)
985.26^RJ
"^DD",985.26,985.26,5,1,1,1)
S ^MPI(985.26,"RJ",$E(X,1,30),DA)=""
"^DD",985.26,985.26,5,1,1,2)
K ^MPI(985.26,"RJ",$E(X,1,30),DA)
"^DD",985.26,985.26,5,1,1,3)
Do NOT delete this cross reference!
"^DD",985.26,985.26,5,1,1,"%D",0)
^^3^3^3050318^
"^DD",985.26,985.26,5,1,1,"%D",1,0)
This cross reference is used as a lookup tool for Mismatched Patients 
"^DD",985.26,985.26,5,1,1,"%D",2,0)
instances by the Resolution Journal Case Number.  The Resolution Journal 
"^DD",985.26,985.26,5,1,1,"%D",3,0)
Case is where the notes pertaining to this mismatch are stored.  
"^DD",985.26,985.26,5,1,1,"DT")
3050318
"^DD",985.26,985.26,5,3)
Enter Resolution Journal Case that was created and/or updated by the action of resolving the Patient Mismatch using the option Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES].
"^DD",985.26,985.26,5,21,0)
^^3^3^3050318^
"^DD",985.26,985.26,5,21,1,0)
Resolution Journal Case that was created and/or updated by the action of 
"^DD",985.26,985.26,5,21,2,0)
resolving the Patient Mismatch using the option Mismatched Patient Record 
"^DD",985.26,985.26,5,21,3,0)
Resolution [MPI DATA MGT MISMATCH PT RES].
"^DD",985.26,985.26,5,"DT")
3050318
"^DD",985.3,985.3,0)
FIELD^^99^7
"^DD",985.3,985.3,0,"DDA")
N
"^DD",985.3,985.3,0,"DT")
3021115
"^DD",985.3,985.3,0,"IX","APRT",985.3,5)

"^DD",985.3,985.3,0,"IX","AV",985.3,2)

"^DD",985.3,985.3,0,"IX","B",985.3,.01)

"^DD",985.3,985.3,0,"IX","S",985.3,1)

"^DD",985.3,985.3,0,"IX","TZ",985.3,3)

"^DD",985.3,985.3,0,"NM","MPI SITE MONITOR")

"^DD",985.3,985.3,.01,0)
MPI INSTALLED SITE^RP4'X^DIC(4,^0;1^S:$D(X) DINUM=X Q
"^DD",985.3,985.3,.01,1,0)
^.1
"^DD",985.3,985.3,.01,1,1,0)
985.3^B
"^DD",985.3,985.3,.01,1,1,1)
S ^MPI(985.3,"B",$E(X,1,30),DA)=""
"^DD",985.3,985.3,.01,1,1,2)
K ^MPI(985.3,"B",$E(X,1,30),DA)
"^DD",985.3,985.3,.01,3)
This is the pointer to the Institution File (#4).
"^DD",985.3,985.3,.01,21,0)
^^2^2^3010702^
"^DD",985.3,985.3,.01,21,1,0)
This is the pointer to the INSTITUTION file (#4) for a site that has sent
"^DD",985.3,985.3,.01,21,2,0)
patient data to the MPI.
"^DD",985.3,985.3,.01,"DT")
3010529
"^DD",985.3,985.3,1,0)
STATION NUMBER^RF^^0;2^K:$L(X)>7!($L(X)<3)!'(X?3N.AN) X
"^DD",985.3,985.3,1,1,0)
^.1
"^DD",985.3,985.3,1,1,1,0)
985.3^S
"^DD",985.3,985.3,1,1,1,1)
S ^MPI(985.3,"S",$E(X,1,30),DA)=""
"^DD",985.3,985.3,1,1,1,2)
K ^MPI(985.3,"S",$E(X,1,30),DA)
"^DD",985.3,985.3,1,1,1,3)
DO NOT DELETE THIS XREF!
"^DD",985.3,985.3,1,1,1,"%D",0)
^^1^1^3010702^
"^DD",985.3,985.3,1,1,1,"%D",1,0)
This cross reference is used to sort and lookup sites by station number.
"^DD",985.3,985.3,1,1,1,"DT")
3010702
"^DD",985.3,985.3,1,3)
Answer must be 3-7 characters in length
"^DD",985.3,985.3,1,21,0)
^^4^4^3050210^
"^DD",985.3,985.3,1,21,1,0)
This is the site's official STATION NUMBER for the primary location.
"^DD",985.3,985.3,1,21,2,0)
 
"^DD",985.3,985.3,1,21,3,0)
**Patch MPI*1.0*32 changed this field to allow for non-VAMC entries where 
"^DD",985.3,985.3,1,21,4,0)
the station number isn't just 3 digits.
"^DD",985.3,985.3,1,"DT")
3050210
"^DD",985.3,985.3,2,0)
VISN^NJ2,0^^0;3^K:+X'=X!(X>22)!(X<1)!(X?.E1"."1N.N) X
"^DD",985.3,985.3,2,1,0)
^.1
"^DD",985.3,985.3,2,1,1,0)
985.3^AV
"^DD",985.3,985.3,2,1,1,1)
S ^MPI(985.3,"AV",$E(X,1,30),DA)=""
"^DD",985.3,985.3,2,1,1,2)
K ^MPI(985.3,"AV",$E(X,1,30),DA)
"^DD",985.3,985.3,2,1,1,3)
DO NOT DELETE THIS XREF!
"^DD",985.3,985.3,2,1,1,"DT")
3010702
"^DD",985.3,985.3,2,3)
Enter the numeric designation for the VISN to which this site belongs.
"^DD",985.3,985.3,2,21,0)
^^1^1^3010702^
"^DD",985.3,985.3,2,21,1,0)
This is the VISN to which this site belongs.
"^DD",985.3,985.3,2,"DT")
3010702
"^DD",985.3,985.3,3,0)
TIME ZONE^S^E:EASTERN;C:CENTRAL;M:MOUNTAIN;P:PACIFIC;^0;4^Q
"^DD",985.3,985.3,3,1,0)
^.1
"^DD",985.3,985.3,3,1,1,0)
985.3^TZ
"^DD",985.3,985.3,3,1,1,1)
S ^MPI(985.3,"TZ",$E(X,1,30),DA)=""
"^DD",985.3,985.3,3,1,1,2)
K ^MPI(985.3,"TZ",$E(X,1,30),DA)
"^DD",985.3,985.3,3,1,1,3)
DO NOT DELETE THIS XREF!
"^DD",985.3,985.3,3,1,1,"%D",0)
^^1^1^3010702^
"^DD",985.3,985.3,3,1,1,"%D",1,0)
This cross reference is used to sort and lookup sites by time zone.
"^DD",985.3,985.3,3,1,1,"DT")
3010702
"^DD",985.3,985.3,3,3)
If site falls in the Eastern, Central, Mountain, or Pacific time zone, enter that time zone.
"^DD",985.3,985.3,3,21,0)
^^3^3^3010822^
"^DD",985.3,985.3,3,21,1,0)
This field is the time zone for the site.  It is used to create the "TZ"
"^DD",985.3,985.3,3,21,2,0)
xref for the RGMT Remote query option to send queries a group of sites.
"^DD",985.3,985.3,3,21,3,0)
It is only used for Eastern, Central, Mountain, or Pacific time zones.
"^DD",985.3,985.3,3,"DT")
3010702
"^DD",985.3,985.3,5,0)
PRINT NAME^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",985.3,985.3,5,1,0)
^.1
"^DD",985.3,985.3,5,1,1,0)
985.3^APRT
"^DD",985.3,985.3,5,1,1,1)
S ^MPI(985.3,"APRT",$E(X,1,30),DA)=""
"^DD",985.3,985.3,5,1,1,2)
K ^MPI(985.3,"APRT",$E(X,1,30),DA)
"^DD",985.3,985.3,5,1,1,3)
DO NOT DELETE
"^DD",985.3,985.3,5,1,1,"DT")
3020303
"^DD",985.3,985.3,5,3)
Answer must be 3-30 characters in length.
"^DD",985.3,985.3,5,21,0)
^^1^1^3020303^
"^DD",985.3,985.3,5,21,1,0)
This is the name of the facility in "pretty print" format.
"^DD",985.3,985.3,5,"DT")
3020303
"^DD",985.3,985.3,80,0)
TYPE OF TF FACILITY^S^TF:TREATING FACILITY ONLY;AS:ASSOCIATED FACILITY ONLY;BT:BOTH TF AND AS;^99;2^Q
"^DD",985.3,985.3,80,21,0)
^^7^7^3050204^
"^DD",985.3,985.3,80,21,1,0)
This field will be used to determine if a non-VistA system (downstream 
"^DD",985.3,985.3,80,21,2,0)
system) should be a in the Treating Facility list or an Associated 
"^DD",985.3,985.3,80,21,3,0)
Facility to a VistA system or be both.   The ACK-A24 will need to consult 
"^DD",985.3,985.3,80,21,4,0)
this file to determine if a TF entry should be created or not for the 
"^DD",985.3,985.3,80,21,5,0)
downstream system.
"^DD",985.3,985.3,80,21,6,0)
 
"^DD",985.3,985.3,80,21,7,0)
Default is TF only.  All VistA systems at this point are TF only.
"^DD",985.3,985.3,80,"DT")
3050211
"^DD",985.3,985.3,99,0)
DATE SITE SEEDED^D^^99;1^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",985.3,985.3,99,3)
Enter date this site started the seeding process
"^DD",985.3,985.3,99,"DT")
3021115
"^DD",985.32,985.32,0)
FIELD^^2^3
"^DD",985.32,985.32,0,"DDA")
N
"^DD",985.32,985.32,0,"DT")
3020614
"^DD",985.32,985.32,0,"IX","ACBR",985.32,2)

"^DD",985.32,985.32,0,"IX","B",985.32,.01)

"^DD",985.32,985.32,0,"NM","MPI DUP SSN")

"^DD",985.32,985.32,0,"VRPK")
MPI
"^DD",985.32,985.32,.01,0)
SSN^RF^^0;1^K:$L(X)>9!($L(X)<9)!'(X'?1P.E) X
"^DD",985.32,985.32,.01,1,0)
^.1
"^DD",985.32,985.32,.01,1,1,0)
985.32^B
"^DD",985.32,985.32,.01,1,1,1)
S ^MPI(985.32,"B",$E(X,1,30),DA)=""
"^DD",985.32,985.32,.01,1,1,2)
K ^MPI(985.32,"B",$E(X,1,30),DA)
"^DD",985.32,985.32,.01,3)
Enter SSN that is duplicated for more than one ICN. 
"^DD",985.32,985.32,.01,21,0)
^^1^1^3010822^
"^DD",985.32,985.32,.01,21,1,0)
This is the SSN that is duplicated for more than one ICN.  
"^DD",985.32,985.32,.01,"DT")
3010822
"^DD",985.32,985.32,1,0)
IDENTICAL DUP FLAG^S^1:YES;0:NO;^0;2^Q
"^DD",985.32,985.32,1,3)
Enter "Yes" if all ICNs involved with this SSN have patients with the same first and last name as well as DOB.
"^DD",985.32,985.32,1,21,0)
^^4^4^3010822^
"^DD",985.32,985.32,1,21,1,0)
If this field is set, it means that the patients involved with this SSN
"^DD",985.32,985.32,1,21,2,0)
have the same first and last name as well as DOB.  This will allow this
"^DD",985.32,985.32,1,21,3,0)
SSN to be displayed on a special report of "easy fix" dup SSN entries for
"^DD",985.32,985.32,1,21,4,0)
quick resolution and will omit this SSN from the "regular" DUP SSN report.
"^DD",985.32,985.32,1,"DT")
3010822
"^DD",985.32,985.32,2,0)
CANNOT BE RESOLVED^S^1:YES;0:NO;^0;3^Q
"^DD",985.32,985.32,2,1,0)
^.1
"^DD",985.32,985.32,2,1,1,0)
985.32^ACBR
"^DD",985.32,985.32,2,1,1,1)
S ^MPI(985.32,"ACBR",$E(X,1,30),DA)=""
"^DD",985.32,985.32,2,1,1,2)
K ^MPI(985.32,"ACBR",$E(X,1,30),DA)
"^DD",985.32,985.32,2,1,1,"%D",0)
^^2^2^3020614^
"^DD",985.32,985.32,2,1,1,"%D",1,0)
This xref is used to identify SSNs that have been marked in the MPI DATA 
"^DD",985.32,985.32,2,1,1,"%D",2,0)
MGT RESOLUTION JOURNAL as "Cannot be Resolved".
"^DD",985.32,985.32,2,1,1,"DT")
3020614
"^DD",985.32,985.32,2,3)
Enter "Yes" if this SSN has been marked in the MPI DATA MGT RESOLUTION JOURNAL (#985.2) file with a STATUS of CANNOT BE RESOLVED.
"^DD",985.32,985.32,2,21,0)
^.001^7^7^3020617^^
"^DD",985.32,985.32,2,21,1,0)
If this field is set to "Yes", it means that this SSN has been marked in 
"^DD",985.32,985.32,2,21,2,0)
the MPI DATA MGT RESOLUTION JOURNAL (#985.2) file with a STATUS of CANNOT 
"^DD",985.32,985.32,2,21,3,0)
BE RESOLVED.  This STATUS means not enough data is available at the 
"^DD",985.32,985.32,2,21,4,0)
sharing sites to determine if the duplicated ICNs belong to the same 
"^DD",985.32,985.32,2,21,5,0)
patient.  This field being set to "Yes" will cause this SSN to be omitted 
"^DD",985.32,985.32,2,21,6,0)
from the Dup SSN Report as well as from counts for total number of DUP 
"^DD",985.32,985.32,2,21,7,0)
SSNs to be resolved on the MPI Stat Report.
"^DD",985.32,985.32,2,"DT")
3020614
"^DD",985.33,985.33,0)
FIELD^^15^16
"^DD",985.33,985.33,0,"DDA")
N
"^DD",985.33,985.33,0,"DT")
3040310
"^DD",985.33,985.33,0,"IX","B",985.33,.01)

"^DD",985.33,985.33,0,"NM","MPI POTENTIAL MATCH COMPILE")

"^DD",985.33,985.33,0,"VRPK")
MPI
"^DD",985.33,985.33,.01,0)
TREATING FACILITY RECORD^RP985.5'^MPI(985.5,^0;1^Q
"^DD",985.33,985.33,.01,1,0)
^.1
"^DD",985.33,985.33,.01,1,1,0)
985.33^B
"^DD",985.33,985.33,.01,1,1,1)
S ^MPI(985.33,"B",$E(X,1,30),DA)=""
"^DD",985.33,985.33,.01,1,1,2)
K ^MPI(985.33,"B",$E(X,1,30),DA)
"^DD",985.33,985.33,.01,3)
Enter the pointer to the MPI FACILITY ASSOCIATION file (#985.5) for this record.
"^DD",985.33,985.33,.01,21,0)
^^4^4^3040922^
"^DD",985.33,985.33,.01,21,1,0)
Each record in this file is a pointer to the MPI FACILITY ASSOCIATION file
"^DD",985.33,985.33,.01,21,2,0)
(#985.5).  Entries are treating facilities identified as being part of a
"^DD",985.33,985.33,.01,21,3,0)
duplicate grouping generated from the Duplicate SSN Compile routine 
"^DD",985.33,985.33,.01,21,4,0)
MPIDMSO3.
"^DD",985.33,985.33,.01,"DT")
3040310
"^DD",985.33,985.33,1,0)
ICN^P985'^MPIVET(^0;2^Q
"^DD",985.33,985.33,1,3)
Enter the ICN associated with this entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,1,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,1,21,1,0)
ICN associated with this entry in the MPI FACILITY ASSOCIATION file 
"^DD",985.33,985.33,1,21,2,0)
(#985.5).
"^DD",985.33,985.33,1,"DT")
3040310
"^DD",985.33,985.33,2,0)
ID STATE^S^P:PERMANENT;T:TEMPORARY;^0;3^Q
"^DD",985.33,985.33,2,3)
Enter the ID State assigned to this record's ICN in the MPI VETERAN/CLIENT file (#985).
"^DD",985.33,985.33,2,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,2,21,1,0)
The ID State assigned to this record's ICN in the MPI VETERAN/CLIENT file 
"^DD",985.33,985.33,2,21,2,0)
(#985).
"^DD",985.33,985.33,2,"DT")
3040310
"^DD",985.33,985.33,3,0)
DFN^F^^0;4^K:$L(X)>15!($L(X)<1) X
"^DD",985.33,985.33,3,3)
Enter the DFN associated with this record in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,3,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,3,21,1,0)
The DFN associated with this record in the MPI FACILITY ASSOCIATION file 
"^DD",985.33,985.33,3,21,2,0)
(#985.5).
"^DD",985.33,985.33,3,"DT")
3040310
"^DD",985.33,985.33,4,0)
SURNAME^F^^0;5^K:$L(X)>35!($L(X)<1) X
"^DD",985.33,985.33,4,3)
Enter the SURNAME defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,4,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,4,21,1,0)
The SURNAME defined for this record's entry in the MPI FACILITY 
"^DD",985.33,985.33,4,21,2,0)
ASSOCIATION file (#985.5).
"^DD",985.33,985.33,4,"DT")
3040310
"^DD",985.33,985.33,5,0)
FIRST NAME^F^^0;6^K:$L(X)>25!($L(X)<1) X
"^DD",985.33,985.33,5,3)
Enter the FIRST NAME defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,5,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,5,21,1,0)
The FIRST NAME defined for this record's entry in the MPI FACILITY 
"^DD",985.33,985.33,5,21,2,0)
ASSOCIATION file (#985.5).
"^DD",985.33,985.33,5,"DT")
3040310
"^DD",985.33,985.33,6,0)
MIDDLE NAME^F^^0;7^K:$L(X)>25!($L(X)<1) X
"^DD",985.33,985.33,6,3)
Enter the MIDDLE NAME defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,6,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,6,21,1,0)
The MIDDLE NAME defined for this record's entry in the MPI FACILITY 
"^DD",985.33,985.33,6,21,2,0)
ASSOCIATION file (#985.5).
"^DD",985.33,985.33,6,"DT")
3040310
"^DD",985.33,985.33,7,0)
SUFFIX^F^^0;8^K:$L(X)>10!($L(X)<1) X
"^DD",985.33,985.33,7,3)
Enter the FIRST NAME defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,7,21,0)
^.001^2^2^3040922^^
"^DD",985.33,985.33,7,21,1,0)
The FIRST NAME defined for this record's entry in the MPI FACILITY 
"^DD",985.33,985.33,7,21,2,0)
ASSOCIATION file (#985.5).
"^DD",985.33,985.33,7,"DT")
3040310
"^DD",985.33,985.33,8,0)
SSN^F^^0;9^K:$L(X)>9!($L(X)<1) X
"^DD",985.33,985.33,8,3)
Enter the SSN defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,8,21,0)
^.001^2^2^3040922^^
"^DD",985.33,985.33,8,21,1,0)
The SSN defined for this record's entry in the MPI FACILITY ASSOCIATION 
"^DD",985.33,985.33,8,21,2,0)
file (#985.5).
"^DD",985.33,985.33,8,"DT")
3040310
"^DD",985.33,985.33,9,0)
DATE OF BIRTH^D^^0;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",985.33,985.33,9,3)
Enter the DATE OF BIRTH defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,9,21,0)
^.001^2^2^3040922^^
"^DD",985.33,985.33,9,21,1,0)
The DATE OF BIRTH defined for this record's entry in the MPI FACILITY 
"^DD",985.33,985.33,9,21,2,0)
ASSOCIATION file (#985.5).
"^DD",985.33,985.33,9,"DT")
3040310
"^DD",985.33,985.33,10,0)
SEX^S^M:MALE;F:FEMALE;^0;11^Q
"^DD",985.33,985.33,10,3)
Enter the SEX defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,10,21,0)
^.001^2^2^3040922^^
"^DD",985.33,985.33,10,21,1,0)
The SEX defined for this record's entry in the MPI FACILITY ASSOCIATION 
"^DD",985.33,985.33,10,21,2,0)
file (#985.5).
"^DD",985.33,985.33,10,"DT")
3040310
"^DD",985.33,985.33,11,0)
DATE LAST TREATED^D^^0;12^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.33,985.33,11,3)
Enter the DATE LAST TREATED defined for this record's entry in the MPI FACILITY ASSOCIATION file (#985.5).
"^DD",985.33,985.33,11,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,11,21,1,0)
The DATE LAST TREATED defined for this record's entry in the MPI FACILITY 
"^DD",985.33,985.33,11,21,2,0)
ASSOCIATION file (#985.5).
"^DD",985.33,985.33,11,"DT")
3040310
"^DD",985.33,985.33,12,0)
DATE/TIME OF ORIGINAL CREATION^D^^0;13^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",985.33,985.33,12,3)
Enter the Date/Time the ICN associated with this record was initially created in the MPI VETERAN/CLIENT file (#985).
"^DD",985.33,985.33,12,21,0)
^^2^2^3040922^
"^DD",985.33,985.33,12,21,1,0)
The Date/Time the ICN associated with this record was initially created in
"^DD",985.33,985.33,12,21,2,0)
the MPI VETERAN/CLIENT file (#985).
"^DD",985.33,985.33,12,"DT")
3040310
"^DD",985.33,985.33,13,0)
CASE IEN^P985.2'^MPI(985.2,^0;14^Q
"^DD",985.33,985.33,13,3)
Enter the internal record number of the case in the MPI DATA MGT RESOLUTION JOURNAL (#985.2) associated with this record's ICN if one exists.
"^DD",985.33,985.33,13,21,0)
^^3^3^3040310^
"^DD",985.33,985.33,13,21,1,0)
If the ICN associated with this record is involved in a case in the MPI 
"^DD",985.33,985.33,13,21,2,0)
DATA MGT RESOLUTION JOURNAL (#985.2), this field will set to the internal 
"^DD",985.33,985.33,13,21,3,0)
record number for that case.
"^DD",985.33,985.33,13,"DT")
3040310
"^DD",985.33,985.33,14,0)
STATUS^S^P:PENDING;R:RESOLVED;^0;15^Q
"^DD",985.33,985.33,14,3)
Enter the status of the resolution work on the duplicate grouping in which this record is involved.
"^DD",985.33,985.33,14,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,14,21,1,0)
Status of the resolution work on the duplicate grouping in which this 
"^DD",985.33,985.33,14,21,2,0)
record is involved.
"^DD",985.33,985.33,14,"DT")
3040310
"^DD",985.33,985.33,15,0)
GROUPING IDENTIFIER^NJ8,0^^0;16^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",985.33,985.33,15,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",985.33,985.33,15,21,0)
^^2^2^3040310^
"^DD",985.33,985.33,15,21,1,0)
Sequential number linking all records in this file that share the same 
"^DD",985.33,985.33,15,21,2,0)
SSN, i.e., the duplicate grouping. 
"^DD",985.33,985.33,15,"DT")
3040310
"^DD",985.5,985.5,0)
FIELD^^71^33
"^DD",985.5,985.5,0,"DDA")
N
"^DD",985.5,985.5,0,"DT")
3040817
"^DD",985.5,985.5,0,"ID",1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^MPIVET(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(985,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",985.5,985.5,0,"IX","AM",985.5,.01)

"^DD",985.5,985.5,0,"IX","AM2",985.5,1)

"^DD",985.5,985.5,0,"IX","B",985.5,.01)

"^DD",985.5,985.5,0,"IX","ZZICN",985.5,1)

"^DD",985.5,985.5,0,"NM","MPI FACILITY ASSOCIATION")

"^DD",985.5,985.5,0,"PT",985.26,.01)

"^DD",985.5,985.5,0,"PT",985.33,.01)

"^DD",985.5,985.5,0,"VRPK")
MPI
"^DD",985.5,985.5,.01,0)
FACILITY ID^RP4'X^DIC(4,^0;1^I $G(DA) N T S T=$P($G(^MPI(985.5,DA,0)),U,2) I T]"" S T=$O(^MPI(985.5,"AM",T,X,0)) I T,T-DA!$O(^(DA)) K X
"^DD",985.5,985.5,.01,1,0)
^.1
"^DD",985.5,985.5,.01,1,1,0)
985.5^B
"^DD",985.5,985.5,.01,1,1,1)
S ^MPI(985.5,"B",$E(X,1,30),DA)=""
"^DD",985.5,985.5,.01,1,1,2)
K ^MPI(985.5,"B",$E(X,1,30),DA)
"^DD",985.5,985.5,.01,1,2,0)
985.5^AM^MUMPS
"^DD",985.5,985.5,.01,1,2,1)
N T S T=$P($G(^MPI(985.5,DA,0)),U,2) I T]"" S ^MPI(985.5,"AM",T,X,DA)=""
"^DD",985.5,985.5,.01,1,2,2)
N T S T=$P($G(^MPI(985.5,DA,0)),U,2) I T]"" K ^MPI(985.5,"AM",T,X,DA)
"^DD",985.5,985.5,.01,1,2,3)
NEED THIS FOR REFERENTIAL INTEGRITY
"^DD",985.5,985.5,.01,1,2,"DT")
2961005
"^DD",985.5,985.5,.01,3)
FACILITY/ICN PAIR MUST BE UNIQUE
"^DD",985.5,985.5,.01,21,0)
^^2^2^3011024^
"^DD",985.5,985.5,.01,21,1,0)
This is a pointer to the Institution file - it represents the station 
"^DD",985.5,985.5,.01,21,2,0)
where the patient had treatment.
"^DD",985.5,985.5,.01,"DT")
3040512
"^DD",985.5,985.5,1,0)
INTEGRATION CONTROL NUMBER^P985'X^MPIVET(^0;2^I $G(DA) N T S T=$P($G(^MPI(985.5,DA,0)),U) I T]"" S T=$O(^MPI(985.5,"AM",T,X,0)) I T,T-DA!$O(^(DA)) K X
"^DD",985.5,985.5,1,1,0)
^.1
"^DD",985.5,985.5,1,1,1,0)
985.5^AM2^MUMPS
"^DD",985.5,985.5,1,1,1,1)
N T S T=$P($G(^MPI(985.5,DA,0)),U) I T]"" S ^MPI(985.5,"AM",X,T,DA)=""
"^DD",985.5,985.5,1,1,1,2)
N T S T=$P($G(^MPI(985.5,DA,0)),U) I T]"" K ^MPI(985.5,"AM",X,T,DA)
"^DD",985.5,985.5,1,1,1,3)
NEED FOR REFERENTIAL INTEGRITY
"^DD",985.5,985.5,1,1,1,"DT")
2961005
"^DD",985.5,985.5,1,1,2,0)
985.5^ZZICN
"^DD",985.5,985.5,1,1,2,1)
S ^MPI(985.5,"ZZICN",$E(X,1,30),DA)=""
"^DD",985.5,985.5,1,1,2,2)
K ^MPI(985.5,"ZZICN",$E(X,1,30),DA)
"^DD",985.5,985.5,1,1,2,"DT")
2971213
"^DD",985.5,985.5,1,3)

"^DD",985.5,985.5,1,21,0)
^.001^2^2^3040322^^
"^DD",985.5,985.5,1,21,1,0)
This a pointer to the patient in the Master Patient Index that has been 
"^DD",985.5,985.5,1,21,2,0)
seen at this facility.
"^DD",985.5,985.5,1,"DT")
3040608
"^DD",985.5,985.5,2,0)
DFN^F^^0;3^K:$L(X)>18!($L(X)<1) X
"^DD",985.5,985.5,2,3)
Answer must be 1-18 characters in length.
"^DD",985.5,985.5,2,21,0)
^^2^2^3030902^
"^DD",985.5,985.5,2,21,1,0)
The unique system assigned identifier at the identified facility
"^DD",985.5,985.5,2,21,2,0)
for the patient/client.
"^DD",985.5,985.5,2,"DT")
3040512
"^DD",985.5,985.5,11,0)
SURNAME^F^^1;2^K:$L(X)>35!($L(X)<1) X
"^DD",985.5,985.5,11,3)
Answer must be 1-35 characters in length.
"^DD",985.5,985.5,11,21,0)
^.001^1^1^3040817^^
"^DD",985.5,985.5,11,21,1,0)
Family name, also known as last name.
"^DD",985.5,985.5,11,"DT")
3040817
"^DD",985.5,985.5,12,0)
FIRST NAME^F^^1;3^K:$L(X)>25!($L(X)<1) X
"^DD",985.5,985.5,12,3)
Answer must be 1-25 characters in length.
"^DD",985.5,985.5,12,21,0)
^.001^1^1^3011217^^
"^DD",985.5,985.5,12,21,1,0)
The first given name for the person.
"^DD",985.5,985.5,12,"DT")
3020214
"^DD",985.5,985.5,13,0)
MIDDLE NAME^F^^1;4^K:$L(X)>25!($L(X)<1) X
"^DD",985.5,985.5,13,3)
Answer must be 1-25 characters in length.
"^DD",985.5,985.5,13,21,0)
^^1^1^3011217^
"^DD",985.5,985.5,13,21,1,0)
The middle given name for the person.
"^DD",985.5,985.5,13,"DT")
3020214
"^DD",985.5,985.5,14,0)
NAME PREFIX^F^^1;5^K:$L(X)>10!($L(X)<2) X
"^DD",985.5,985.5,14,3)
Answer must be 2-10 characters in length.
"^DD",985.5,985.5,14,21,0)
^^1^1^3011217^
"^DD",985.5,985.5,14,21,1,0)
Commonly, Dr., Ms., Sir, or other appropriate titles.
"^DD",985.5,985.5,14,"DT")
3020214
"^DD",985.5,985.5,15,0)
NAME SUFFIX^F^^1;6^K:$L(X)>10!($L(X)<1) X
"^DD",985.5,985.5,15,3)
Answer must be 1-10 characters in length.
"^DD",985.5,985.5,15,21,0)
^.001^1^1^3020813^^
"^DD",985.5,985.5,15,21,1,0)
Examples are Jr., Sr., PhD, etc.
"^DD",985.5,985.5,15,"DT")
3020813
"^DD",985.5,985.5,16,0)
MOTHERS MAIDEN NAME^F^^1;7^K:$L(X)>35!($L(X)<2) X
"^DD",985.5,985.5,16,3)
Answer must be 2-35 characters in length.
"^DD",985.5,985.5,16,21,0)
^.001^1^1^3020213^^
"^DD",985.5,985.5,16,21,1,0)
The surname of the mother at the mother's birth.
"^DD",985.5,985.5,16,"DT")
3020213
"^DD",985.5,985.5,17,0)
DATE OF BIRTH^DX^^1;8^S %DT="EP" D ^%DT S X=Y K:Y<1 X
"^DD",985.5,985.5,17,3)
Enter date of birth.
"^DD",985.5,985.5,17,21,0)
^.001^1^1^3011217^^
"^DD",985.5,985.5,17,21,1,0)
The person's birth day.
"^DD",985.5,985.5,17,"DT")
3020214
"^DD",985.5,985.5,18,0)
PLACE OF BIRTH CITY^F^^1;9^K:$L(X)>20!($L(X)<2) X
"^DD",985.5,985.5,18,3)
Answer must be 2-20 characters in length.
"^DD",985.5,985.5,18,21,0)
^.001^1^1^3020213^^
"^DD",985.5,985.5,18,21,1,0)
The name of the city or town (or nearest) where the person was born.
"^DD",985.5,985.5,18,"DT")
3020213
"^DD",985.5,985.5,19,0)
PLACE OF BIRTH STATE^P5'^DIC(5,^1;10^Q
"^DD",985.5,985.5,19,3)
Enter state where person was born.
"^DD",985.5,985.5,19,21,0)
^^1^1^3011217^
"^DD",985.5,985.5,19,21,1,0)
If USA, 2 character state abbreviation; if not USA, the country state.
"^DD",985.5,985.5,19,"DT")
3011217
"^DD",985.5,985.5,20,0)
DATE OF DEATH^D^^1;11^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",985.5,985.5,20,3)
Enter date of death.
"^DD",985.5,985.5,20,21,0)
^.001^1^1^3021108^^^^
"^DD",985.5,985.5,20,21,1,0)
The date of the person's death.
"^DD",985.5,985.5,20,"DT")
3021108
"^DD",985.5,985.5,22,0)
GENDER^S^M:MALE;F:FEMALE;^1;13^Q
"^DD",985.5,985.5,22,3)
Enter "M" or "F".
"^DD",985.5,985.5,22,21,0)
^^1^1^3011217^
"^DD",985.5,985.5,22,21,1,0)
Whether person is male or female.
"^DD",985.5,985.5,22,"DT")
3011217
"^DD",985.5,985.5,23,0)
SOCIAL SECURITY NUMBER^F^^1;14^K:$L(X)>9!($L(X)<9) X
"^DD",985.5,985.5,23,3)
Answer must be 9 characters in length.
"^DD",985.5,985.5,23,21,0)
^^1^1^3011217^
"^DD",985.5,985.5,23,21,1,0)
Person's social security number.
"^DD",985.5,985.5,23,"DT")
3011217
"^DD",985.5,985.5,25,0)
CLAIM NUMBER^F^^2;1^K:$L(X)>9!($L(X)<7) X
"^DD",985.5,985.5,25,3)
Answer must be 7-9 characters in length.
"^DD",985.5,985.5,25,21,0)
^.001^1^1^3020213^^
"^DD",985.5,985.5,25,21,1,0)
VBA assigned claim number.  Used to assist confirming ID.
"^DD",985.5,985.5,25,"DT")
3020213
"^DD",985.5,985.5,29,0)
DATE LAST TREATED^D^^2;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",985.5,985.5,29,3)
Enter the date of last treatment at this facility.
"^DD",985.5,985.5,29,21,0)
^.001^2^2^3020611^^^
"^DD",985.5,985.5,29,21,1,0)
This field will contain the DATE LAST TREATED for this facility
"^DD",985.5,985.5,29,21,2,0)
as in the TREATING FACILITY LIST (#391.91) file on the VAMC side.
"^DD",985.5,985.5,29,"DT")
3020108
"^DD",985.5,985.5,30,0)
ADT/HL7 EVENT REASON^S^A1:PATIENT ADMISSION;A2:PATIENT DISCHARGE;A3:CHECKED OUT (CLINIC);^2;6^Q
"^DD",985.5,985.5,30,3)
Enter the reason for the event experienced by the patient at this facility.
"^DD",985.5,985.5,30,21,0)
^.001^3^3^3020423^^
"^DD",985.5,985.5,30,21,1,0)
This field tracks the reason for an event experienced by a patient
"^DD",985.5,985.5,30,21,2,0)
at a given facility.  Some event reasons might be patient admission,
"^DD",985.5,985.5,30,21,3,0)
patient discharge, etc.
"^DD",985.5,985.5,30,"DT")
3020423
"^DD",985.5,985.5,31,0)
DATE OF LAST UPDATE MESSAGE^D^^2;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",985.5,985.5,31,3)
Enter the update date.
"^DD",985.5,985.5,31,21,0)
^.001^3^3^3020611^^^^
"^DD",985.5,985.5,31,21,1,0)
This field will hold the DATE OF LAST UPDATE MESSAGE information.
"^DD",985.5,985.5,31,21,2,0)
This indicates the last date that messaging updated the data
"^DD",985.5,985.5,31,21,3,0)
for the patient at this facility.
"^DD",985.5,985.5,31,"DT")
3020611
"^DD",985.5,985.5,40,0)
MARITAL STATUS^P11'^DIC(11,^3;1^Q
"^DD",985.5,985.5,40,3)
Enter this patient's current marital status.
"^DD",985.5,985.5,40,21,0)
^.001^1^1^3030305^^
"^DD",985.5,985.5,40,21,1,0)
Enter this patient's current marital status.
"^DD",985.5,985.5,40,"DT")
3030305
"^DD",985.5,985.5,41,0)
STREET ADDRESS [LINE 1]^F^^3;2^K:$L(X)>35!($L(X)<3) X
"^DD",985.5,985.5,41,3)
Answer must be 3-35 characters in length.
"^DD",985.5,985.5,41,21,0)
^^2^2^3030304^
"^DD",985.5,985.5,41,21,1,0)
Enter the first line of this patient's residence street address
"^DD",985.5,985.5,41,21,2,0)
[3-35 characters].
"^DD",985.5,985.5,41,"DT")
3030304
"^DD",985.5,985.5,42,0)
STREET ADDRESS [LINE 2]^F^^3;3^K:$L(X)>30!($L(X)<3) X
"^DD",985.5,985.5,42,3)
Answer must be 3-30 characters in length.
"^DD",985.5,985.5,42,21,0)
^^3^3^3030304^
"^DD",985.5,985.5,42,21,1,0)
Enter the second line of this patient's residence street address 
"^DD",985.5,985.5,42,21,2,0)
[3-30 characters] if the space provided in 'street address' was 
"^DD",985.5,985.5,42,21,3,0)
not sufficient.
"^DD",985.5,985.5,42,"DT")
3030304
"^DD",985.5,985.5,43,0)
STREET ADDRESS [LINE 3]^F^^3;4^K:$L(X)>30!($L(X)<3) X
"^DD",985.5,985.5,43,3)
Answer must be 3-30 characters in length.
"^DD",985.5,985.5,43,21,0)
^^3^3^3030304^
"^DD",985.5,985.5,43,21,1,0)
Enter the third line of this patient's residence street address 
"^DD",985.5,985.5,43,21,2,0)
[3-30 characters] if the space provided in 'street address' and 
"^DD",985.5,985.5,43,21,3,0)
'street address 2' was not sufficient.
"^DD",985.5,985.5,43,"DT")
3030304
"^DD",985.5,985.5,44,0)
CITY [RESIDENCE]^F^^3;5^K:$L(X)>28!($L(X)<3) X
"^DD",985.5,985.5,44,3)
Answer must be 3-28 characters in length.
"^DD",985.5,985.5,44,21,0)
^.001^1^1^3031024^^^^
"^DD",985.5,985.5,44,21,1,0)
Enter the city in which this patient resides [3-28 characters].
"^DD",985.5,985.5,44,"DT")
3031024
"^DD",985.5,985.5,45,0)
STATE [RESIDENCE]^P5'^DIC(5,^3;6^Q
"^DD",985.5,985.5,45,3)
Enter the state where the patient resides.
"^DD",985.5,985.5,45,21,0)
^^1^1^3030304^
"^DD",985.5,985.5,45,21,1,0)
Enter the state where the patient resides.
"^DD",985.5,985.5,45,"DT")
3030304
"^DD",985.5,985.5,46,0)
ZIP+4 [RESIDENCE]^F^^3;7^K:$L(X)>10!($L(X)<5) X
"^DD",985.5,985.5,46,3)
Answer must be 5-10 characters in length.
"^DD",985.5,985.5,46,21,0)
^^2^2^3030304^
"^DD",985.5,985.5,46,21,1,0)
Answer with either the 5-digit format (e.g. 12345) or the nine-digit
"^DD",985.5,985.5,46,21,2,0)
format (e.g. 12345-6789 or 123456789).
"^DD",985.5,985.5,46,"DT")
3030304
"^DD",985.5,985.5,47,0)
PHONE NUMBER [RESIDENCE]^F^^3;8^K:$L(X)>23!($L(X)<4) X
"^DD",985.5,985.5,47,3)
Answer must be 4-23 characters in length.
"^DD",985.5,985.5,47,21,0)
^.001^2^2^3040414^^^
"^DD",985.5,985.5,47,21,1,0)
Enter the telephone number [4-23 characters] to this patient's 
"^DD",985.5,985.5,47,21,2,0)
place of residence.
"^DD",985.5,985.5,47,"DT")
3040414
"^DD",985.5,985.5,48,0)
POW STATUS INDICATED?^S^Y:YES;N:NO;U:UNKNOWN;^3;9^Q
"^DD",985.5,985.5,48,3)
Was this patient a Prisoner of War?
"^DD",985.5,985.5,48,21,0)
^^2^2^3030304^
"^DD",985.5,985.5,48,21,1,0)
For this patient, enter 'Y' if s/he was confined as a prisoner 
"^DD",985.5,985.5,48,21,2,0)
of war, 'N' if not, or 'U' if unknown.
"^DD",985.5,985.5,48,"DT")
3030304
"^DD",985.5,985.5,49,0)
MULTIPLE BIRTH INDICATOR^S^N:NO;Y:*MULTIPLE BIRTH*;^3;10^Q
"^DD",985.5,985.5,49,3)
Is the patient part of a multiple birth?
"^DD",985.5,985.5,49,21,0)
^.001^3^3^3030519^^^^
"^DD",985.5,985.5,49,21,1,0)
The MULTIPLE BIRTH INDICATOR will designate whether or not 
"^DD",985.5,985.5,49,21,2,0)
the patient is part of a multiple birth (i.e. to identify 
"^DD",985.5,985.5,49,21,3,0)
twins, etc.).
"^DD",985.5,985.5,49,"DT")
3030519
"^DD",985.5,985.5,50,0)
ALIAS^985.51A^^50;0
"^DD",985.5,985.5,50,21,0)
^.001^2^2^3030306^^^^
"^DD",985.5,985.5,50,21,1,0)
If this patient is known by any name other than that entered in
"^DD",985.5,985.5,50,21,2,0)
the name field enter that/those other name(s) here.
"^DD",985.5,985.5,60,0)
RACE INFORMATION^985.52PA^^60;0
"^DD",985.5,985.5,60,21,0)
^.001^1^1^3030902^^^
"^DD",985.5,985.5,60,21,1,0)
Enter the races which best identify this patient.
"^DD",985.5,985.5,70,0)
ETHNICITY INFORMATION^985.53PA^^70;0
"^DD",985.5,985.5,70,21,0)
^.001^1^1^3030306^^
"^DD",985.5,985.5,70,21,1,0)
Enter the ethnicity which best identifies this patient.
"^DD",985.5,985.5,71,0)
SITE ASSOCIATION^985.571PA^^71;0
"^DD",985.5,985.51,0)
ALIAS SUB-FIELD^^4^5
"^DD",985.5,985.51,0,"DT")
3030304
"^DD",985.5,985.51,0,"NM","ALIAS")

"^DD",985.5,985.51,0,"UP")
985.5
"^DD",985.5,985.51,.01,0)
ALIAS SURNAME^F^^0;1^K:$L(X)>35!($L(X)<1) X
"^DD",985.5,985.51,.01,1,0)
^.1^^0
"^DD",985.5,985.51,.01,3)
Answer must be 1-35 characters in length.
"^DD",985.5,985.51,.01,21,0)
^.001^3^3^3030304^^^
"^DD",985.5,985.51,.01,21,1,0)
Enter the family name, also know as last name.  If this patient
"^DD",985.5,985.51,.01,21,2,0)
is known by any name other than that entered in the name field enter
"^DD",985.5,985.51,.01,21,3,0)
that/those other name(s) here.
"^DD",985.5,985.51,.01,"DT")
3030423
"^DD",985.5,985.51,1,0)
ALIAS FIRST NAME^F^^0;2^K:$L(X)>25!($L(X)<1) X
"^DD",985.5,985.51,1,3)
Answer must be 1-25 characters in length.
"^DD",985.5,985.51,1,21,0)
^^1^1^3030304^
"^DD",985.5,985.51,1,21,1,0)
The first given name for the person.
"^DD",985.5,985.51,1,"DT")
3030304
"^DD",985.5,985.51,2,0)
ALIAS MIDDLE NAME^F^^0;3^K:$L(X)>25!($L(X)<1) X
"^DD",985.5,985.51,2,3)
Answer must be 1-25 characters in length.
"^DD",985.5,985.51,2,21,0)
^^1^1^3030304^
"^DD",985.5,985.51,2,21,1,0)
The middle given name for the patient.
"^DD",985.5,985.51,2,"DT")
3030304
"^DD",985.5,985.51,3,0)
ALIAS PREFIX^F^^0;4^K:$L(X)>10!($L(X)<2) X
"^DD",985.5,985.51,3,3)
Answer must be 2-10 characters in length.
"^DD",985.5,985.51,3,21,0)
^^1^1^3030304^
"^DD",985.5,985.51,3,21,1,0)
Commonly, Dr., Ms., Sir, or other appropriate titles.
"^DD",985.5,985.51,3,"DT")
3030304
"^DD",985.5,985.51,4,0)
ALIAS SUFFIX^F^^0;5^K:$L(X)>10!($L(X)<1) X
"^DD",985.5,985.51,4,3)
Answer must be 1-10 characters in length.
"^DD",985.5,985.51,4,21,0)
^^1^1^3030304^
"^DD",985.5,985.51,4,21,1,0)
Examples are Jr., Sr., PhD, etc.
"^DD",985.5,985.51,4,"DT")
3030304
"^DD",985.5,985.52,0)
RACE INFORMATION SUB-FIELD^^.01^1
"^DD",985.5,985.52,0,"DT")
3030902
"^DD",985.5,985.52,0,"NM","RACE INFORMATION")

"^DD",985.5,985.52,0,"UP")
985.5
"^DD",985.5,985.52,.01,0)
RACE INFORMATION^M*P10'^DIC(10,^0;1^S DIC("S")="I '$G(^(.02))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",985.5,985.52,.01,1,0)
^.1^^0
"^DD",985.5,985.52,.01,3)
Answer must be 1-45 characters in length.
"^DD",985.5,985.52,.01,12)
Can't select entries that are inactive.
"^DD",985.5,985.52,.01,12.1)
S DIC("S")="I '$G(^(.02))"
"^DD",985.5,985.52,.01,"DT")
3030902
"^DD",985.5,985.53,0)
ETHNICITY INFORMATION SUB-FIELD^^.01^1
"^DD",985.5,985.53,0,"DT")
3030902
"^DD",985.5,985.53,0,"NM","ETHNICITY INFORMATION")

"^DD",985.5,985.53,0,"UP")
985.5
"^DD",985.5,985.53,.01,0)
ETHNICITY INFORMATION^*P10.2'^DIC(10.2,^0;1^S DIC("S")="I '$G(^(.02))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",985.5,985.53,.01,1,0)
^.1^^0
"^DD",985.5,985.53,.01,3)
Answer must be 1-45 characters in length.
"^DD",985.5,985.53,.01,12)
Can't select inactivated entries
"^DD",985.5,985.53,.01,12.1)
S DIC("S")="I '$G(^(.02))"
"^DD",985.5,985.53,.01,21,0)
^.001^1^1^3030304^^
"^DD",985.5,985.53,.01,21,1,0)
Enter the ethnicity which best identifies this patient.
"^DD",985.5,985.53,.01,"DT")
3030902
"^DD",985.5,985.571,0)
SITE ASSOCIATION SUB-FIELD^^.01^1
"^DD",985.5,985.571,0,"DT")
3040604
"^DD",985.5,985.571,0,"IX","B",985.571,.01)

"^DD",985.5,985.571,0,"NM","SITE ASSOCIATION")

"^DD",985.5,985.571,0,"UP")
985.5
"^DD",985.5,985.571,.01,0)
OTHER SITE ASSOCIATIONS^P4'^DIC(4,^0;1^Q
"^DD",985.5,985.571,.01,1,0)
^.1
"^DD",985.5,985.571,.01,1,1,0)
985.571^B
"^DD",985.5,985.571,.01,1,1,1)
S ^MPI(985.5,DA(1),71,"B",$E(X,1,30),DA)=""
"^DD",985.5,985.571,.01,1,1,2)
K ^MPI(985.5,DA(1),71,"B",$E(X,1,30),DA)
"^DD",985.5,985.571,.01,21,0)
^^2^2^3040607^
"^DD",985.5,985.571,.01,21,1,0)
This field will store the systems that also know this specific site/dfn 
"^DD",985.5,985.571,.01,21,2,0)
pair as the reason that they know this patient.  I.E. HDR
"^DD",985.5,985.571,.01,"DT")
3040607
"^DD",985.9,985.9,0)
FIELD^^6^23
"^DD",985.9,985.9,0,"DDA")
N
"^DD",985.9,985.9,0,"DT")
3010816
"^DD",985.9,985.9,0,"IX","AC",985.9,.07)

"^DD",985.9,985.9,0,"IX","AC1",985.9,.01)

"^DD",985.9,985.9,0,"IX","AC2",985.9,.06)

"^DD",985.9,985.9,0,"IX","AD",985.9,.06)

"^DD",985.9,985.9,0,"IX","AE",985.9,2.01)

"^DD",985.9,985.9,0,"IX","AE1",985.9,.06)

"^DD",985.9,985.9,0,"IX","AF",985.9,.07)

"^DD",985.9,985.9,0,"IX","AF1",985.9,.09)

"^DD",985.9,985.9,0,"IX","AG",985.9,.01)

"^DD",985.9,985.9,0,"IX","AG1",985.9,.06)

"^DD",985.9,985.9,0,"IX","B",985.9,.01)

"^DD",985.9,985.9,0,"IX","C",985.9,.02)

"^DD",985.9,985.9,0,"IX","D",985.9,.04)

"^DD",985.9,985.9,0,"IX","ICN",985.9,2.01)

"^DD",985.9,985.9,0,"IX","SSN",985.9,2.03)

"^DD",985.9,985.9,0,"NM","MPI SERVER EXCEPTIONS")

"^DD",985.9,985.9,0,"VRPK")
MPI
"^DD",985.9,985.9,.001,0)
TRACKING NUMBER^NJ8,0^^ ^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",985.9,985.9,.001,3)
This is a number that is assigned by the system to identify the exception.
"^DD",985.9,985.9,.001,21,0)
^^1^1^3001130^
"^DD",985.9,985.9,.001,21,1,0)
This number will be used to identify the exception.
"^DD",985.9,985.9,.001,"DT")
3001129
"^DD",985.9,985.9,.01,0)
DATE/TIME RECEIVED^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985.9,985.9,.01,1,0)
^.1
"^DD",985.9,985.9,.01,1,1,0)
985.9^B
"^DD",985.9,985.9,.01,1,1,1)
S ^MPI(985.9,"B",$E(X,1,30),DA)=""
"^DD",985.9,985.9,.01,1,1,2)
K ^MPI(985.9,"B",$E(X,1,30),DA)
"^DD",985.9,985.9,.01,1,2,0)
985.9^AC1^MUMPS
"^DD",985.9,985.9,.01,1,2,1)
D SETAC^MPIXDD(DA)
"^DD",985.9,985.9,.01,1,2,2)
D KILLAC1^MPIXDD(DA,X)
"^DD",985.9,985.9,.01,1,2,"%D",0)
^.101^3^3^3001219^^^^
"^DD",985.9,985.9,.01,1,2,"%D",1,0)
This cross-reference will be maintained by the AC,AC1,and AC2 cross-reference
"^DD",985.9,985.9,.01,1,2,"%D",2,0)
logic. The format of the cross-reference is:
"^DD",985.9,985.9,.01,1,2,"%D",3,0)
^MPI(985.9,"AC",<Exception Case Worker>,<Status>,<Date Received>,<ien>)=""
"^DD",985.9,985.9,.01,1,2,"DT")
3001206
"^DD",985.9,985.9,.01,1,3,0)
985.9^AG^MUMPS
"^DD",985.9,985.9,.01,1,3,1)
D SETAG^MPIXDD(DA)
"^DD",985.9,985.9,.01,1,3,2)
D KILLAG^MPIXDD(DA,X)
"^DD",985.9,985.9,.01,1,3,"%D",0)
^.101^4^4^3001219^^^^
"^DD",985.9,985.9,.01,1,3,"%D",1,0)
This cross-reference is maintained by the AG cross-reference on the 
"^DD",985.9,985.9,.01,1,3,"%D",2,0)
DATE/TIME RECEIVED field and the AG1 cross-reference on the status field.
"^DD",985.9,985.9,.01,1,3,"%D",3,0)
The format is:
"^DD",985.9,985.9,.01,1,3,"%D",4,0)
"AG",<date portion of DATE/TIME RECEIVED field>,<STATUS>,<IEN>)=""
"^DD",985.9,985.9,.01,1,3,"DT")
3001219
"^DD",985.9,985.9,.01,3)
Enter the date and time the server received the exception.
"^DD",985.9,985.9,.01,"DT")
3001219
"^DD",985.9,985.9,.02,0)
EXCEPTION TYPE^P991.11'^RGHL7(991.11,^0;2^Q
"^DD",985.9,985.9,.02,1,0)
^.1
"^DD",985.9,985.9,.02,1,1,0)
985.9^C
"^DD",985.9,985.9,.02,1,1,1)
S ^MPI(985.9,"C",$E(X,1,30),DA)=""
"^DD",985.9,985.9,.02,1,1,2)
K ^MPI(985.9,"C",$E(X,1,30),DA)
"^DD",985.9,985.9,.02,1,1,"%D",0)
^^1^1^3010523^
"^DD",985.9,985.9,.02,1,1,"%D",1,0)
Cross reference on Exception Type for sorting.
"^DD",985.9,985.9,.02,1,1,"DT")
3010523
"^DD",985.9,985.9,.02,3)
Enter the CIRN Exception Type.
"^DD",985.9,985.9,.02,"DT")
3010816
"^DD",985.9,985.9,.03,0)
DATE/TIME REPORTED^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",985.9,985.9,.03,3)
(No range limit on date)
"^DD",985.9,985.9,.03,"DT")
3001129
"^DD",985.9,985.9,.04,0)
SITE REPORTING^F^^0;4^K:$L(X)>7!($L(X)<3) X
"^DD",985.9,985.9,.04,1,0)
^.1
"^DD",985.9,985.9,.04,1,1,0)
985.9^D
"^DD",985.9,985.9,.04,1,1,1)
S ^MPI(985.9,"D",$E(X,1,30),DA)=""
"^DD",985.9,985.9,.04,1,1,2)
K ^MPI(985.9,"D",$E(X,1,30),DA)
"^DD",985.9,985.9,.04,1,1,"%D",0)
^^2^2^3010523^
"^DD",985.9,985.9,.04,1,1,"%D",1,0)
This cross-reference is used for sorting exceptions by site in the MPI
"^DD",985.9,985.9,.04,1,1,"%D",2,0)
Exception Handling option.
"^DD",985.9,985.9,.04,1,1,"DT")
3010523
"^DD",985.9,985.9,.04,3)
Enter the station number of the site that sent the exception to the MPI Exception Handler.
"^DD",985.9,985.9,.04,"DT")
3010523
"^DD",985.9,985.9,.05,0)
SITE OF OCCURRENCE^F^^0;5^K:$L(X)>7!($L(X)<3) X
"^DD",985.9,985.9,.05,3)
Enter the station number of the site where the exception occurred.
"^DD",985.9,985.9,.05,"DT")
3001129
"^DD",985.9,985.9,.06,0)
STATUS^R*S^1:UNASSIGNED;2:ASSIGNED;3:RESOLVED;^0;6^Q
"^DD",985.9,985.9,.06,1,0)
^.1
"^DD",985.9,985.9,.06,1,1,0)
985.9^AC2^MUMPS
"^DD",985.9,985.9,.06,1,1,1)
D SETAC^MPIXDD(DA)
"^DD",985.9,985.9,.06,1,1,2)
D KILLAC2^MPIXDD(DA,X)
"^DD",985.9,985.9,.06,1,1,"%D",0)
^.101^3^3^3001206^^^
"^DD",985.9,985.9,.06,1,1,"%D",1,0)
This cross-reference will be maintained by the AC,AC1,and AC2 cross-reference
"^DD",985.9,985.9,.06,1,1,"%D",2,0)
logic. The format of the cross-reference is:
"^DD",985.9,985.9,.06,1,1,"%D",3,0)
^MPI(985.9,"AC",<Exception Case Worker>,<Status>,<Date Received>,<ien>)=""
"^DD",985.9,985.9,.06,1,1,"DT")
3001206
"^DD",985.9,985.9,.06,1,2,0)
985.9^AD
"^DD",985.9,985.9,.06,1,2,1)
S ^MPI(985.9,"AD",$E(X,1,30),DA)=""
"^DD",985.9,985.9,.06,1,2,2)
K ^MPI(985.9,"AD",$E(X,1,30),DA)
"^DD",985.9,985.9,.06,1,2,"DT")
3001206
"^DD",985.9,985.9,.06,1,3,0)
985.9^AE1^MUMPS
"^DD",985.9,985.9,.06,1,3,1)
D SETAE^MPIXDD(DA)
"^DD",985.9,985.9,.06,1,3,2)
D KILLAE1^MPIXDD(DA,X)
"^DD",985.9,985.9,.06,1,3,"%D",0)
^^3^3^3001207^
"^DD",985.9,985.9,.06,1,3,"%D",1,0)
This cross reference has the format: ,"AE",<ICN>,<STATUS>,<IEN>)="". It is
"^DD",985.9,985.9,.06,1,3,"%D",2,0)
maintained by the AE cross-reference on the ICN field and the AE1
"^DD",985.9,985.9,.06,1,3,"%D",3,0)
cross-reference on the Status field.
"^DD",985.9,985.9,.06,1,3,"DT")
3001207
"^DD",985.9,985.9,.06,1,4,0)
985.9^AG1^MUMPS
"^DD",985.9,985.9,.06,1,4,1)
D SETAG^MPIXDD(DA)
"^DD",985.9,985.9,.06,1,4,2)
D KILLAG1^MPIXDD(DA,X)
"^DD",985.9,985.9,.06,1,4,"%D",0)
^.101^4^4^3001214^^
"^DD",985.9,985.9,.06,1,4,"%D",1,0)
This cross-reference is maintained by the AG cross-reference on the 
"^DD",985.9,985.9,.06,1,4,"%D",2,0)
DATE/TIME RECEIVED field and the AG1 cross-reference on the status field.
"^DD",985.9,985.9,.06,1,4,"%D",3,0)
The format is:
"^DD",985.9,985.9,.06,1,4,"%D",4,0)
"AG",<date portion of DATE/TIME RECEIVED field>,<STATUS>,<IEN>)=""
"^DD",985.9,985.9,.06,1,4,"DT")
3001214
"^DD",985.9,985.9,.06,3)
Enter the code that describes the status of the exception.
"^DD",985.9,985.9,.06,12)
If a case worker is assigned, the status can not be NOT ASSIGNED/PENDING. If there is no case worker assigned then the status can not be RESOLVED.
"^DD",985.9,985.9,.06,12.1)
S DIC("S")="I ('$P(^MPI(985.9,DA,0),""^"",7)&(X<2))!($P(^MPI(985.9,DA,0),""^"",7)&(X>1))"
"^DD",985.9,985.9,.06,"DT")
3010531
"^DD",985.9,985.9,.07,0)
CASE WORKER^P200'^VA(200,^0;7^Q
"^DD",985.9,985.9,.07,1,0)
^.1
"^DD",985.9,985.9,.07,1,1,0)
985.9^AC^MUMPS
"^DD",985.9,985.9,.07,1,1,1)
D SETAC^MPIXDD(DA)
"^DD",985.9,985.9,.07,1,1,2)
D KILLAC^MPIXDD(DA,X)
"^DD",985.9,985.9,.07,1,1,"%D",0)
^.101^3^3^3001206^^^^
"^DD",985.9,985.9,.07,1,1,"%D",1,0)
This cross-reference will be maintained by the AC,AC1,and AC2 cross-reference
"^DD",985.9,985.9,.07,1,1,"%D",2,0)
logic. The format of the cross-reference is:
"^DD",985.9,985.9,.07,1,1,"%D",3,0)
^MPI(985.9,"AC",<Exception Case Worker>,<Status>,<Date Received>,<ien>)=""
"^DD",985.9,985.9,.07,1,1,"DT")
3001206
"^DD",985.9,985.9,.07,1,2,0)
985.9^AF^MUMPS
"^DD",985.9,985.9,.07,1,2,1)
D SETAF^MPIXDD(DA)
"^DD",985.9,985.9,.07,1,2,2)
D KILLAF^MPIXDD(DA,X)
"^DD",985.9,985.9,.07,1,2,"%D",0)
^.101^2^2^3001212^^
"^DD",985.9,985.9,.07,1,2,"%D",1,0)
The AF and AF1 cross-references work together to maintain this.  The format is
"^DD",985.9,985.9,.07,1,2,"%D",2,0)
"AF",<case worker>,<Date portion of Date/Time Resolved>,<ien>)=""
"^DD",985.9,985.9,.07,1,2,"DT")
3001212
"^DD",985.9,985.9,.07,3)
Who is responsible for resolving this exception?
"^DD",985.9,985.9,.07,"DT")
3001212
"^DD",985.9,985.9,.08,0)
TRANSFERED BY^P200'^VA(200,^0;8^Q
"^DD",985.9,985.9,.08,3)
Enter the person who transfered responsibility for the exception.
"^DD",985.9,985.9,.08,"DT")
3001206
"^DD",985.9,985.9,.09,0)
DATE/TIME RESOLVED^D^^0;9^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",985.9,985.9,.09,1,0)
^.1
"^DD",985.9,985.9,.09,1,1,0)
985.9^AF1^MUMPS
"^DD",985.9,985.9,.09,1,1,1)
D SETAF^MPIXDD(DA)
"^DD",985.9,985.9,.09,1,1,2)
D KILLAF1^MPIXDD(DA,X)
"^DD",985.9,985.9,.09,1,1,"%D",0)
^.101^2^2^3001212^^
"^DD",985.9,985.9,.09,1,1,"%D",1,0)
The AF and AF1 cross-references work together to maintain this.  The format is
"^DD",985.9,985.9,.09,1,1,"%D",2,0)
"AF",<case worker>,<Date portion of Date/Time Resolved>,<ien>)=""
"^DD",985.9,985.9,.09,1,1,"DT")
3001212
"^DD",985.9,985.9,.09,3)
Enter the date and time that the exception was resolved.
"^DD",985.9,985.9,.09,"DT")
3001212
"^DD",985.9,985.9,1,0)
OPTIONAL TEXT^F^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",985.9,985.9,1,3)
Answer must be 1-245 characters in length.
"^DD",985.9,985.9,1,"DT")
3001129
"^DD",985.9,985.9,2.01,0)
ICN^NJ11,0^^2;1^K:+X'=X!(X>99999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",985.9,985.9,2.01,1,0)
^.1
"^DD",985.9,985.9,2.01,1,1,0)
985.9^AE^MUMPS
"^DD",985.9,985.9,2.01,1,1,1)
D SETAE^MPIXDD(DA)
"^DD",985.9,985.9,2.01,1,1,2)
D KILLAE^MPIXDD(DA,X)
"^DD",985.9,985.9,2.01,1,1,"%D",0)
^.101^3^3^3001207^^
"^DD",985.9,985.9,2.01,1,1,"%D",1,0)
This cross reference has the format: ,"AE",<ICN>,<STATUS>,<IEN>)="". It is
"^DD",985.9,985.9,2.01,1,1,"%D",2,0)
maintained by the AE cross-reference on the ICN field and the AE1
"^DD",985.9,985.9,2.01,1,1,"%D",3,0)
cross-reference on the Status field.
"^DD",985.9,985.9,2.01,1,1,"DT")
3001207
"^DD",985.9,985.9,2.01,1,2,0)
985.9^ICN^MUMPS
"^DD",985.9,985.9,2.01,1,2,1)
D SETICN^MPIXDD(DA)
"^DD",985.9,985.9,2.01,1,2,2)
K ^MPI(985.9,"ICN",$E(X,1,30),DA)
"^DD",985.9,985.9,2.01,1,2,3)
DO NOT DELETE!!
"^DD",985.9,985.9,2.01,1,2,"%D",0)
^^4^4^3030716^
"^DD",985.9,985.9,2.01,1,2,"%D",1,0)
This cross reference has the format: ,"ICN",<ICN>,<IEN>)="". It is 
"^DD",985.9,985.9,2.01,1,2,"%D",2,0)
maintained by the ICN cross-reference on the ICN field and used to lookup 
"^DD",985.9,985.9,2.01,1,2,"%D",3,0)
and sort MPI exceptions by ICN.  This cross-reference will not be built 
"^DD",985.9,985.9,2.01,1,2,"%D",4,0)
for exceptions with a Case Worker assignment of POSTMASTER (DUZ=.5).
"^DD",985.9,985.9,2.01,1,2,"DT")
3030716
"^DD",985.9,985.9,2.01,3)
Type a number between 1 and 99999999999, 0 Decimal Digits
"^DD",985.9,985.9,2.01,"DT")
3030716
"^DD",985.9,985.9,2.02,0)
NAME^F^^2;2^K:$L(X)>65!($L(X)<1) X
"^DD",985.9,985.9,2.02,3)
Enter the patient's name as found in the Patient file of the site that reported the exception.
"^DD",985.9,985.9,2.02,"DT")
3001129
"^DD",985.9,985.9,2.03,0)
SSN^F^^2;3^K:$L(X)>10!($L(X)<9) X
"^DD",985.9,985.9,2.03,1,0)
^.1
"^DD",985.9,985.9,2.03,1,1,0)
985.9^SSN^MUMPS
"^DD",985.9,985.9,2.03,1,1,1)
D SETSSN^MPIXDD(DA)
"^DD",985.9,985.9,2.03,1,1,2)
K ^MPI(985.9,"SSN",$E(X,1,30),DA)
"^DD",985.9,985.9,2.03,1,1,3)
DO NOT DELETE!!
"^DD",985.9,985.9,2.03,1,1,"%D",0)
^^4^4^3030716^
"^DD",985.9,985.9,2.03,1,1,"%D",1,0)
This cross reference has the format: ,"SSN",<ICN>,<IEN>)="". It is 
"^DD",985.9,985.9,2.03,1,1,"%D",2,0)
maintained by the SSN cross-reference on the SSN field and used to lookup 
"^DD",985.9,985.9,2.03,1,1,"%D",3,0)
and sort MPI exceptions by SSN.  This cross-reference will not be built 
"^DD",985.9,985.9,2.03,1,1,"%D",4,0)
for exceptions with a Case Worker assignment of POSTMASTER (DUZ=.5).
"^DD",985.9,985.9,2.03,1,1,"DT")
3030716
"^DD",985.9,985.9,2.03,3)
Enter the patient's Social Security Numver as found in the reporting site's patient file.  It may be a pseudo-SSN.
"^DD",985.9,985.9,2.03,"DT")
3030716
"^DD",985.9,985.9,2.04,0)
CMOR^F^^2;4^K:$L(X)>7!($L(X)<1) X
"^DD",985.9,985.9,2.04,3)
Enter the station number of the CMOR.
"^DD",985.9,985.9,2.04,"DT")
3001205
"^DD",985.9,985.9,3.01,0)
MESSAGE ID^F^^3;1^K:$L(X)>20!($L(X)<1) X
"^DD",985.9,985.9,3.01,3)
Enter the HL7 Message ID of the message being processed when the exception occurred.
"^DD",985.9,985.9,3.01,"DT")
3001129
"^DD",985.9,985.9,3.02,0)
MESSAGE TYPE^F^^3;2^K:$L(X)>3!($L(X)<3) X
"^DD",985.9,985.9,3.02,3)
The three character HL7 message type abbreviation (e.g., MSH).  Answer must be 3 characters in length.
"^DD",985.9,985.9,3.02,"DT")
3001129
"^DD",985.9,985.9,3.03,0)
EVENT TYPE^F^^3;3^K:$L(X)>3!($L(X)<3) X
"^DD",985.9,985.9,3.03,3)
Enter the 3 character HL7 Event Type Code.
"^DD",985.9,985.9,3.03,"DT")
3001129
"^DD",985.9,985.9,3.04,0)
SENDING APPLICATION^F^^3;4^K:$L(X)>15!($L(X)<3) X
"^DD",985.9,985.9,3.04,3)
The name of the sending application.
"^DD",985.9,985.9,3.04,"DT")
3001129
"^DD",985.9,985.9,3.05,0)
LOGICAL LINK^F^^3;5^K:$L(X)>10!($L(X)<3) X
"^DD",985.9,985.9,3.05,3)
The name of the logical link over which the HL7 message was received.
"^DD",985.9,985.9,3.05,"DT")
3001129
"^DD",985.9,985.9,4,0)
PROCESSING NOTES^985.94A^^4;0
"^DD",985.9,985.9,4,21,0)
^.001^2^2^3001205^^
"^DD",985.9,985.9,4,21,1,0)
The Processing Notes will be entered by the exception case worker to desribe
"^DD",985.9,985.9,4,21,2,0)
the progress and outcome of his/her processing of the exception.
"^DD",985.9,985.9,5,0)
TRANSFER NOTE^F^^5;1^K:$L(X)>245!($L(X)<1) X
"^DD",985.9,985.9,5,3)
If you transfer responsibilty for this exception, please indicate the reason.
"^DD",985.9,985.9,5,"DT")
3001129
"^DD",985.9,985.9,6,0)
TREATING FACILITIES^985.96^^6;0
"^DD",985.9,985.94,0)
PROCESSING NOTES SUB-FIELD^^.01^1
"^DD",985.9,985.94,0,"DT")
3001205
"^DD",985.9,985.94,0,"NM","PROCESSING NOTES")

"^DD",985.9,985.94,0,"UP")
985.9
"^DD",985.9,985.94,.01,0)
PROCESSING NOTES^WL^^0;1^Q
"^DD",985.9,985.94,.01,3)
Enter notes to describe your progress in resolving the exception.
"^DD",985.9,985.94,.01,"DT")
3001205
"^DD",985.9,985.96,0)
TREATING FACILITIES SUB-FIELD^^.03^3
"^DD",985.9,985.96,0,"DT")
3001129
"^DD",985.9,985.96,0,"IX","B",985.96,.01)

"^DD",985.9,985.96,0,"NM","TREATING FACILITIES")

"^DD",985.9,985.96,0,"UP")
985.9
"^DD",985.9,985.96,.01,0)
TREATING FACILITY^MF^^0;1^K:$L(X)>7!($L(X)<3) X
"^DD",985.9,985.96,.01,1,0)
^.1
"^DD",985.9,985.96,.01,1,1,0)
985.96^B
"^DD",985.9,985.96,.01,1,1,1)
S ^MPI(985.9,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",985.9,985.96,.01,1,1,2)
K ^MPI(985.9,DA(1),6,"B",$E(X,1,30),DA)
"^DD",985.9,985.96,.01,3)
Enter the station number of the treating facility.
"^DD",985.9,985.96,.01,"DT")
3001129
"^DD",985.9,985.96,.02,0)
DATE LAST TREATED^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",985.9,985.96,.02,3)
Enter the date the patient was treated at the facility.
"^DD",985.9,985.96,.02,"DT")
3001129
"^DD",985.9,985.96,.03,0)
EVENT REASON^F^^0;3^K:$L(X)>3!($L(X)<1) X
"^DD",985.9,985.96,.03,3)
Enter the HL7 event reason code for the event experienced by the patient at this treating facility.
"^DD",985.9,985.96,.03,"DT")
3001129
"^DD",991.11,991.11,0)
FIELD^^99^8
"^DD",991.11,991.11,0,"DDA")
N
"^DD",991.11,991.11,0,"DT")
2980721
"^DD",991.11,991.11,0,"ID",10)
W:$D(^(10)) "   ",$E(^(10),1,100)
"^DD",991.11,991.11,0,"IX","B",991.11,.01)

"^DD",991.11,991.11,0,"IX","C",991.11,10)

"^DD",991.11,991.11,0,"NM","CIRN HL7 EXCEPTION TYPE")

"^DD",991.11,991.11,0,"PT",985.9,.02)

"^DD",991.11,991.11,0,"PT",991.12,2)

"^DD",991.11,991.11,0,"VRPK")
MPI
"^DD",991.11,991.11,.01,0)
NUMBER^RNJ12,0X^^0;1^K:X'=X\1!(X<1) X S:$D(X) DINUM=X
"^DD",991.11,991.11,.01,1,0)
^.1
"^DD",991.11,991.11,.01,1,1,0)
991.11^B
"^DD",991.11,991.11,.01,1,1,1)
S ^RGHL7(991.11,"B",$E(X,1,30),DA)=""
"^DD",991.11,991.11,.01,1,1,2)
K ^RGHL7(991.11,"B",$E(X,1,30),DA)
"^DD",991.11,991.11,.01,3)
Index of this exception.
"^DD",991.11,991.11,.01,21,0)
^^1^1^2990308^^
"^DD",991.11,991.11,.01,21,1,0)
This is the index number of this exception.
"^DD",991.11,991.11,.01,"DT")
2970201
"^DD",991.11,991.11,1,0)
SEVERITY^S^0:INFORMATIONAL;1:MINOR;2:SEVERE;^0;2^Q
"^DD",991.11,991.11,1,3)
Severity level of this exception.
"^DD",991.11,991.11,1,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,1,21,1,0)
This is the severity level of this exception, '0' for Informational,
"^DD",991.11,991.11,1,21,2,0)
'1' for Minor or '2' for Severe.
"^DD",991.11,991.11,1,"DT")
2970201
"^DD",991.11,991.11,2,0)
ACTION^S^0:NONE;1:MAIL;2:ALERT;^0;3^Q
"^DD",991.11,991.11,2,3)
Action to be taken upon logging this exception.
"^DD",991.11,991.11,2,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,2,21,1,0)
This is the action to be taken upon logging this exception,
"^DD",991.11,991.11,2,21,2,0)
'0' for None, '1' for Mail, or '2' for Alert.
"^DD",991.11,991.11,2,"DT")
2970201
"^DD",991.11,991.11,3,0)
COUNT^NJ12,0X^^0;5^K:X\1'=X!(X<0) X
"^DD",991.11,991.11,3,3)
Total number of exceptions logged with this type.
"^DD",991.11,991.11,3,21,0)
^^1^1^2990308^^
"^DD",991.11,991.11,3,21,1,0)
This is a count of all exceptions logged of this type.
"^DD",991.11,991.11,3,"DT")
2970317
"^DD",991.11,991.11,6,0)
MAIL GROUP^P3.8'^XMB(3.8,^0;4^Q
"^DD",991.11,991.11,6,3)
Mail group to which notification will be sent for alert and mail action types.
"^DD",991.11,991.11,6,21,0)
^^3^3^2990308^^
"^DD",991.11,991.11,6,21,1,0)
This is a pointer to the MAIL GROUP file (#3.8), indicating
"^DD",991.11,991.11,6,21,2,0)
which mail group a notification will be sent to for alert
"^DD",991.11,991.11,6,21,3,0)
and mail action types.
"^DD",991.11,991.11,6,"DT")
2970201
"^DD",991.11,991.11,10,0)
TEXT^F^^10;E1,100^K:$L(X)>100!($L(X)<1) X
"^DD",991.11,991.11,10,1,0)
^.1
"^DD",991.11,991.11,10,1,1,0)
991.11^C
"^DD",991.11,991.11,10,1,1,1)
S ^RGHL7(991.11,"C",$E(X,1,30),DA)=""
"^DD",991.11,991.11,10,1,1,2)
K ^RGHL7(991.11,"C",$E(X,1,30),DA)
"^DD",991.11,991.11,10,1,1,"DT")
2970201
"^DD",991.11,991.11,10,3)
Text message for this exception.
"^DD",991.11,991.11,10,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,10,21,1,0)
This is a free text field (up to 100 characters) which holds the
"^DD",991.11,991.11,10,21,2,0)
message for this exception.
"^DD",991.11,991.11,10,"DT")
2970201
"^DD",991.11,991.11,20,0)
SECURITY KEY^991.112P^^20;0
"^DD",991.11,991.11,20,21,0)
^^4^4^2990308^^^
"^DD",991.11,991.11,20,21,1,0)
This is used to control access to a particular exception type. 
"^DD",991.11,991.11,20,21,2,0)
A user must possess at least one of the listed security keys to 
"^DD",991.11,991.11,20,21,3,0)
access the associated exception.  If no security keys are listed, 
"^DD",991.11,991.11,20,21,4,0)
access is unrestricted.
"^DD",991.11,991.11,99,0)
DESCRIPTION^991.1199^^99;0
"^DD",991.11,991.11,99,21,0)
^^2^2^2990308^^^
"^DD",991.11,991.11,99,21,1,0)
This is a word-processing field used for storing
"^DD",991.11,991.11,99,21,2,0)
the detailed explanation of this exception type.
"^DD",991.11,991.112,0)
SECURITY KEY SUB-FIELD^^.01^1
"^DD",991.11,991.112,0,"DT")
2980721
"^DD",991.11,991.112,0,"IX","B",991.112,.01)

"^DD",991.11,991.112,0,"NM","SECURITY KEY")

"^DD",991.11,991.112,0,"UP")
991.11
"^DD",991.11,991.112,.01,0)
SECURITY KEY^MP19.1'X^DIC(19.1,^0;1^S DINUM=X
"^DD",991.11,991.112,.01,1,0)
^.1
"^DD",991.11,991.112,.01,1,1,0)
991.112^B
"^DD",991.11,991.112,.01,1,1,1)
S ^RGHL7(991.11,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",991.11,991.112,.01,1,1,2)
K ^RGHL7(991.11,DA(1),20,"B",$E(X,1,30),DA)
"^DD",991.11,991.112,.01,3)
Enter a security key to control access to this exception.
"^DD",991.11,991.112,.01,21,0)
^^4^4^2990308^^
"^DD",991.11,991.112,.01,21,1,0)
This is used to control access to a particular exception type. 
"^DD",991.11,991.112,.01,21,2,0)
A user must possess at least one of the listed security keys to 
"^DD",991.11,991.112,.01,21,3,0)
access the associated exception.  If no security keys are listed, 
"^DD",991.11,991.112,.01,21,4,0)
access is unrestricted.
"^DD",991.11,991.112,.01,"DT")
2980721
"^DD",991.11,991.1199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",991.11,991.1199,0,"DT")
2970201
"^DD",991.11,991.1199,0,"NM","DESCRIPTION")

"^DD",991.11,991.1199,0,"UP")
991.11
"^DD",991.11,991.1199,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",991.11,991.1199,.01,3)
Detailed explanation of this exception.
"^DD",991.11,991.1199,.01,21,0)
^^1^1^2990308^^^
"^DD",991.11,991.1199,.01,21,1,0)
This field holds the detailed explanation of this exception.
"^DD",991.11,991.1199,.01,"DT")
2970201
"^DIC",985,985,0)
MPI VETERAN/CLIENT^985I
"^DIC",985,985,0,"GL")
^MPIVET(
"^DIC",985,985,"%",0)
^1.005^^0
"^DIC",985,985,"%D",0)
^^11^11^3020403^
"^DIC",985,985,"%D",1,0)
This file is the Master Patient Index.  Name, SSN and DOB are used in the 
"^DIC",985,985,"%D",2,0)
match algorithm to determine if the patient exists in the index already.  
"^DIC",985,985,"%D",3,0)
The only fields to be stored in this file should be those which would 
"^DIC",985,985,"%D",4,0)
assist in identifying this patient.  Other ID fields are appropriate.
"^DIC",985,985,"%D",5,0)
 
"^DIC",985,985,"%D",6,0)
Psuedo SSN are not to be stored.
"^DIC",985,985,"%D",7,0)
ZZ'd patients should be automatically inactivated via the site changing 
"^DIC",985,985,"%D",8,0)
the patient's name to ZZxxxx.
"^DIC",985,985,"%D",9,0)
Patients that have the SSN changed to have 5 leading 0s will also be 
"^DIC",985,985,"%D",10,0)
automatically inactivated via the site changing the patient's SSN.  This 
"^DIC",985,985,"%D",11,0)
will be included in MPIF*1.0*21
"^DIC",985,"B","MPI VETERAN/CLIENT",985)

"^DIC",985.1,985.1,0)
MPI PARAMETER^985.1
"^DIC",985.1,985.1,0,"GL")
^MPI(985.1,
"^DIC",985.1,"B","MPI PARAMETER",985.1)

"^DIC",985.2,985.2,0)
MPI DATA MGT RESOLUTION JOURNAL^985.2
"^DIC",985.2,985.2,0,"GL")
^MPI(985.2,
"^DIC",985.2,985.2,"%",0)
^1.005^^0
"^DIC",985.2,985.2,"%D",0)
^^2^2^3020116^
"^DIC",985.2,985.2,"%D",1,0)
This file stores all data pertaining to individual cases created to track 
"^DIC",985.2,985.2,"%D",2,0)
data resolution work on MPI data.
"^DIC",985.2,"B","MPI DATA MGT RESOLUTION JOURNAL",985.2)

"^DIC",985.21,985.21,0)
MPI DATA MGT PROBLEM CATEGORY^985.21
"^DIC",985.21,985.21,0,"GL")
^MPI(985.21,
"^DIC",985.21,985.21,"%D",0)
^^3^3^3020116^
"^DIC",985.21,985.21,"%D",1,0)
This file stores contains a list of Problem Categories that can be 
"^DIC",985.21,985.21,"%D",2,0)
attributed to the cases in the MPI DATA MGT RESOLUTION JOURNAL FILE 
"^DIC",985.21,985.21,"%D",3,0)
(#985.2).
"^DIC",985.21,"B","MPI DATA MGT PROBLEM CATEGORY",985.21)

"^DIC",985.25,985.25,0)
MPI DATA MGT ACTIVE RESOLUTION WORK^985.25
"^DIC",985.25,985.25,0,"GL")
^MPI(985.25,
"^DIC",985.25,985.25,"%D",0)
^^10^10^3020318^
"^DIC",985.25,985.25,"%D",1,0)
This file is used to store all ICNs that are currently being worked on 
"^DIC",985.25,985.25,"%D",2,0)
either through a case being created in the MPI DATA MGT RESOLUTION 
"^DIC",985.25,985.25,"%D",3,0)
JOURNAL file (#985.2) or directly checked out using the option [MPI DATA 
"^DIC",985.25,985.25,"%D",4,0)
MGT CHK OUT].  When a case is created in the MPI DATA MGT RESOLUTION 
"^DIC",985.25,985.25,"%D",5,0)
JOURNAL file (#985.2) an automatic ICN entry is created on this file.  
"^DIC",985.25,985.25,"%D",6,0)
When a case is closed, all corresponding ICN entries in this file are 
"^DIC",985.25,985.25,"%D",7,0)
deleted.  When an MPI PDAT call is made on an ICN, this file is checked 
"^DIC",985.25,985.25,"%D",8,0)
to see if there this is active work associated with the ICN.  If there 
"^DIC",985.25,985.25,"%D",9,0)
is, the case number and case worker information will be displayed with 
"^DIC",985.25,985.25,"%D",10,0)
the normal PDAT data.
"^DIC",985.25,"B","MPI DATA MGT ACTIVE RESOLUTION WORK",985.25)

"^DIC",985.26,985.26,0)
MPI MISMATCHED PATIENT LOG^985.26
"^DIC",985.26,985.26,0,"GL")
^MPI(985.26,
"^DIC",985.26,985.26,"%D",0)
^^6^6^3050318^
"^DIC",985.26,985.26,"%D",1,0)
This file is a log of Mismatched Patient cases resolved through the 
"^DIC",985.26,985.26,"%D",2,0)
option Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT 
"^DIC",985.26,985.26,"%D",3,0)
RES].  This data is used to produce a statistical report.
"^DIC",985.26,985.26,"%D",4,0)
 
"^DIC",985.26,985.26,"%D",5,0)
NOTE: Entries in this file should ONLY be made through the option 
"^DIC",985.26,985.26,"%D",6,0)
Mismatched Patient Record Resolution [MPI DATA MGT MISMATCH PT RES].
"^DIC",985.26,"B","MPI MISMATCHED PATIENT LOG",985.26)

"^DIC",985.3,985.3,0)
MPI SITE MONITOR^985.3
"^DIC",985.3,985.3,0,"GL")
^MPI(985.3,
"^DIC",985.3,985.3,"%",0)
^1.005^^0
"^DIC",985.3,985.3,"%D",0)
^^27^27^3010702^
"^DIC",985.3,985.3,"%D",1,0)
This file stores the pointers to the INSTITUTION file for all sites as
"^DIC",985.3,985.3,"%D",2,0)
they are loaded to the MPI.  This file is used for a variety of reasons:
"^DIC",985.3,985.3,"%D",3,0)
 
"^DIC",985.3,985.3,"%D",4,0)
-  Monitor to track which sites have sent data via a background routine
"^DIC",985.3,985.3,"%D",5,0)
run each night on the MPI (^RGMTMPIM).  When each new site is loaded to
"^DIC",985.3,985.3,"%D",6,0)
the MPI an entry is made in this file and a bulletin is sent to the MPI
"^DIC",985.3,985.3,"%D",7,0)
Monitor mail group.  If the new site is a valid CIRN site, the bulletin
"^DIC",985.3,985.3,"%D",8,0)
can be ignored and the entry will remain in the file (no more bulletins
"^DIC",985.3,985.3,"%D",9,0)
will be generated).  If a the new site is NOT an appropriate site, (for
"^DIC",985.3,985.3,"%D",10,0)
example, legacy sites from an NDBI Integration or test accounts where a
"^DIC",985.3,985.3,"%D",11,0)
site may attempt a load to the MPI PRIOR to their production account
"^DIC",985.3,985.3,"%D",12,0)
install) the bulletin will alert the members of the mail group who will
"^DIC",985.3,985.3,"%D",13,0)
then investigate the situation.  They would then remove the site entry
"^DIC",985.3,985.3,"%D",14,0)
from this file to ensure that any future transmissions from the site would
"^DIC",985.3,985.3,"%D",15,0)
generate the bulletin.
"^DIC",985.3,985.3,"%D",16,0)
 
"^DIC",985.3,985.3,"%D",17,0)
- Dup SSN tracking: display all sites involved in DUP SSN instance.
"^DIC",985.3,985.3,"%D",18,0)
 
"^DIC",985.3,985.3,"%D",19,0)
- Resolution Journal tracking: display all sites involved in a data
"^DIC",985.3,985.3,"%D",20,0)
resolution case.
"^DIC",985.3,985.3,"%D",21,0)
 
"^DIC",985.3,985.3,"%D",22,0)
- TF report compilation: this report displays shared TF statistics for all
"^DIC",985.3,985.3,"%D",23,0)
sites.
"^DIC",985.3,985.3,"%D",24,0)
 
"^DIC",985.3,985.3,"%D",25,0)
- MPI Stat Report generation and cleanups.
"^DIC",985.3,985.3,"%D",26,0)
 
"^DIC",985.3,985.3,"%D",27,0)
- Managing remote queries.
"^DIC",985.3,"B","MPI SITE MONITOR",985.3)

"^DIC",985.32,985.32,0)
MPI DUP SSN^985.32
"^DIC",985.32,985.32,0,"GL")
^MPI(985.32,
"^DIC",985.32,985.32,"%",0)
^1.005^^0
"^DIC",985.32,985.32,"%D",0)
^^3^3^3010822^
"^DIC",985.32,985.32,"%D",1,0)
This file stores SSNs that are duplicated on the MPI where the patient
"^DIC",985.32,985.32,"%D",2,0)
names and/or DOBs are diverse enough between the sites that a manual
"^DIC",985.32,985.32,"%D",3,0)
resolution is necessary.
"^DIC",985.32,"B","MPI DUP SSN",985.32)

"^DIC",985.33,985.33,0)
MPI POTENTIAL MATCH COMPILE^985.33
"^DIC",985.33,985.33,0,"GL")
^MPI(985.33,
"^DIC",985.33,985.33,"%",0)
^1.005^^0
"^DIC",985.33,985.33,"%D",0)
^^4^4^3040922^
"^DIC",985.33,985.33,"%D",1,0)
Each record in this file is a pointer to the MPI FACILITY ASSOCIATION file
"^DIC",985.33,985.33,"%D",2,0)
(#985.5). Entries are treating facilities identified as being part of a
"^DIC",985.33,985.33,"%D",3,0)
duplicate grouping generated from the Duplicate SSN Compile 
"^DIC",985.33,985.33,"%D",4,0)
[Routine ^MPIMDS03].
"^DIC",985.33,"B","MPI POTENTIAL MATCH COMPILE",985.33)

"^DIC",985.5,985.5,0)
MPI FACILITY ASSOCIATION^985.5PI
"^DIC",985.5,985.5,0,"GL")
^MPI(985.5,
"^DIC",985.5,985.5,"%",0)
^1.005^^0
"^DIC",985.5,985.5,"%D",0)
^1.001^3^3^3020124^^
"^DIC",985.5,985.5,"%D",1,0)
This file holds the Treating Facility List, a list of institutions where 
"^DIC",985.5,985.5,"%D",2,0)
the patient has had treatment.  It is similar to the Treating Facility 
"^DIC",985.5,985.5,"%D",3,0)
file at the VAMCs (#391.91)
"^DIC",985.5,"B","MPI FACILITY ASSOCIATION",985.5)

"^DIC",985.9,985.9,0)
MPI SERVER EXCEPTIONS^985.9
"^DIC",985.9,985.9,0,"GL")
^MPI(985.9,
"^DIC",985.9,985.9,"%",0)
^1.005^^0
"^DIC",985.9,"B","MPI SERVER EXCEPTIONS",985.9)

"^DIC",991.11,991.11,0)
CIRN HL7 EXCEPTION TYPE^991.11
"^DIC",991.11,991.11,0,"GL")
^RGHL7(991.11,
"^DIC",991.11,991.11,"%D",0)
^^3^3^2990308^^
"^DIC",991.11,991.11,"%D",1,0)
This file holds the CIRN HL7 exception types.  It is pointed to by
"^DIC",991.11,991.11,"%D",2,0)
the TYPE field (#2) for the EXCEPTION subfield (#991.12) of the CIRN
"^DIC",991.11,991.11,"%D",3,0)
HL7 EXCEPTION LOG file (#991.1).
"^DIC",991.11,"B","CIRN HL7 EXCEPTION TYPE",991.11)

**END**
**END**
