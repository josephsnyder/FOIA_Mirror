Released XU*8*549 SEQ #443
Extracted from mail message
**KIDS**:XU*8.0*549^

**INSTALL NAME**
XU*8.0*549
"BLD",6431,0)
XU*8.0*549^KERNEL^0^3101006^y
"BLD",6431,4,0)
^9.64PA^4^1
"BLD",6431,4,4,0)
4
"BLD",6431,4,4,2,0)
^9.641^4^1
"BLD",6431,4,4,2,4,0)
INSTITUTION  (File-top level)
"BLD",6431,4,4,2,4,1,0)
^9.6411^200^1
"BLD",6431,4,4,2,4,1,200,0)
BILLING FACILITY NAME
"BLD",6431,4,4,222)
y^y^p^^^^n^^n
"BLD",6431,4,4,224)

"BLD",6431,4,"APDD",4,4)

"BLD",6431,4,"APDD",4,4,200)

"BLD",6431,4,"B",4,4)

"BLD",6431,6.3)
9
"BLD",6431,"ABNS",0)
^9.66A^^
"BLD",6431,"ABPKG")
y^n
"BLD",6431,"INID")
^n
"BLD",6431,"INIT")
MAIN^XUMF04P
"BLD",6431,"KRN",0)
^9.67PA^8989.52^19
"BLD",6431,"KRN",.4,0)
.4
"BLD",6431,"KRN",.401,0)
.401
"BLD",6431,"KRN",.402,0)
.402
"BLD",6431,"KRN",.403,0)
.403
"BLD",6431,"KRN",.5,0)
.5
"BLD",6431,"KRN",.84,0)
.84
"BLD",6431,"KRN",3.6,0)
3.6
"BLD",6431,"KRN",3.8,0)
3.8
"BLD",6431,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",6431,"KRN",9.2,0)
9.2
"BLD",6431,"KRN",9.8,0)
9.8
"BLD",6431,"KRN",9.8,"NM",0)
^9.68A^6^4
"BLD",6431,"KRN",9.8,"NM",1,0)
XUMF04^^0^B19370991
"BLD",6431,"KRN",9.8,"NM",4,0)
XUMF04H^^0^B30233648
"BLD",6431,"KRN",9.8,"NM",5,0)
XUMF04Q^^0^B8242499
"BLD",6431,"KRN",9.8,"NM",6,0)
XUAF4^^0^B47018536
"BLD",6431,"KRN",9.8,"NM","B","XUAF4",6)

"BLD",6431,"KRN",9.8,"NM","B","XUMF04",1)

"BLD",6431,"KRN",9.8,"NM","B","XUMF04H",4)

"BLD",6431,"KRN",9.8,"NM","B","XUMF04Q",5)

"BLD",6431,"KRN",19,0)
19
"BLD",6431,"KRN",19,"NM",0)
^9.68A^6^6
"BLD",6431,"KRN",19,"NM",1,0)
XUMF DMIS ID LOAD^^0
"BLD",6431,"KRN",19,"NM",2,0)
XUMF LOAD INSTITUTION^^0
"BLD",6431,"KRN",19,"NM",3,0)
XUMF LOAD NPI^^0
"BLD",6431,"KRN",19,"NM",4,0)
XUMF IMF ADD EDIT^^0
"BLD",6431,"KRN",19,"NM",5,0)
XUMF IMF EDIT STATUS^^0
"BLD",6431,"KRN",19,"NM",6,0)
XUMF335 clean 4.1 and 4^^0
"BLD",6431,"KRN",19,"NM","B","XUMF DMIS ID LOAD",1)

"BLD",6431,"KRN",19,"NM","B","XUMF IMF ADD EDIT",4)

"BLD",6431,"KRN",19,"NM","B","XUMF IMF EDIT STATUS",5)

"BLD",6431,"KRN",19,"NM","B","XUMF LOAD INSTITUTION",2)

"BLD",6431,"KRN",19,"NM","B","XUMF LOAD NPI",3)

"BLD",6431,"KRN",19,"NM","B","XUMF335 clean 4.1 and 4",6)

"BLD",6431,"KRN",19.1,0)
19.1
"BLD",6431,"KRN",101,0)
101
"BLD",6431,"KRN",101,"NM",0)
^9.68A^4^4
"BLD",6431,"KRN",101,"NM",1,0)
XUMF 04 MFK^^0
"BLD",6431,"KRN",101,"NM",2,0)
XUMF 04 MFN^^0
"BLD",6431,"KRN",101,"NM",3,0)
XUMF 04 MFQ^^0
"BLD",6431,"KRN",101,"NM",4,0)
XUMF 04 MFR^^0
"BLD",6431,"KRN",101,"NM","B","XUMF 04 MFK",1)

"BLD",6431,"KRN",101,"NM","B","XUMF 04 MFN",2)

"BLD",6431,"KRN",101,"NM","B","XUMF 04 MFQ",3)

"BLD",6431,"KRN",101,"NM","B","XUMF 04 MFR",4)

"BLD",6431,"KRN",409.61,0)
409.61
"BLD",6431,"KRN",771,0)
771
"BLD",6431,"KRN",771,"NM",0)
^9.68A^4^4
"BLD",6431,"KRN",771,"NM",1,0)
XUMF 04 MFR^^0
"BLD",6431,"KRN",771,"NM",2,0)
XUMF 04 MFK^^0
"BLD",6431,"KRN",771,"NM",3,0)
XUMF 04 MFQ^^0
"BLD",6431,"KRN",771,"NM",4,0)
XUMF 04 MFN^^0
"BLD",6431,"KRN",771,"NM","B","XUMF 04 MFK",2)

"BLD",6431,"KRN",771,"NM","B","XUMF 04 MFN",4)

"BLD",6431,"KRN",771,"NM","B","XUMF 04 MFQ",3)

"BLD",6431,"KRN",771,"NM","B","XUMF 04 MFR",1)

"BLD",6431,"KRN",870,0)
870
"BLD",6431,"KRN",8989.51,0)
8989.51
"BLD",6431,"KRN",8989.52,0)
8989.52
"BLD",6431,"KRN",8994,0)
8994
"BLD",6431,"KRN","B",.4,.4)

"BLD",6431,"KRN","B",.401,.401)

"BLD",6431,"KRN","B",.402,.402)

"BLD",6431,"KRN","B",.403,.403)

"BLD",6431,"KRN","B",.5,.5)

"BLD",6431,"KRN","B",.84,.84)

"BLD",6431,"KRN","B",3.6,3.6)

"BLD",6431,"KRN","B",3.8,3.8)

"BLD",6431,"KRN","B",9.2,9.2)

"BLD",6431,"KRN","B",9.8,9.8)

"BLD",6431,"KRN","B",19,19)

"BLD",6431,"KRN","B",19.1,19.1)

"BLD",6431,"KRN","B",101,101)

"BLD",6431,"KRN","B",409.61,409.61)

"BLD",6431,"KRN","B",771,771)

"BLD",6431,"KRN","B",870,870)

"BLD",6431,"KRN","B",8989.51,8989.51)

"BLD",6431,"KRN","B",8989.52,8989.52)

"BLD",6431,"KRN","B",8994,8994)

"BLD",6431,"QUES",0)
^9.62^^
"BLD",6431,"REQB",0)
^9.611^^
"FIA",4)
INSTITUTION
"FIA",4,0)
^DIC(4,
"FIA",4,0,0)
4Is
"FIA",4,0,1)
y^y^p^^^^n^^n
"FIA",4,0,10)

"FIA",4,0,11)

"FIA",4,0,"RLRO")

"FIA",4,0,"VR")
8.0^XU
"FIA",4,4)
1
"FIA",4,4,200)

"INIT")
MAIN^XUMF04P
"KRN",19,9524,-1)
0^4
"KRN",19,9524,0)
XUMF IMF ADD EDIT^IMF edit^LOG REMEDY TICKET TO CHANGE NATIONAL ENTRY^R^^XUMF INSTITUTION^^^^^^KERNEL
"KRN",19,9524,1,0)
^19.06^6^6^3101006^^^
"KRN",19,9524,1,1,0)
This option is used to edit this facility's (or associated facility's) 
"KRN",19,9524,1,2,0)
address information.  The edits will update your local INSTITUTION (#4) 
"KRN",19,9524,1,3,0)
file AND the Institution Master File (IMF) on FORUM.
"KRN",19,9524,1,4,0)
 
"KRN",19,9524,1,5,0)
WARNING:  Use extreme care updating this information, because you will be 
"KRN",19,9524,1,6,0)
updating not just your own database but the national database as well.
"KRN",19,9524,25)

"KRN",19,9524,"U")
IMF EDIT
"KRN",19,9529,-1)
0^1
"KRN",19,9529,0)
XUMF DMIS ID LOAD^Load DMIS ID's^^R^^XUMF INSTITUTION^^^^^^KERNEL
"KRN",19,9529,1,0)
^^3^3^3020930^
"KRN",19,9529,1,1,0)
This option is used to queue a background job that will query the 
"KRN",19,9529,1,2,0)
Institution Master File (IMF) and get the DOD DMIS ID facilities and 
"KRN",19,9529,1,3,0)
populate the local INSTITUTION (#4) file with them.
"KRN",19,9529,25)
DMIS^XUMF04Q
"KRN",19,9529,"U")
LOAD DMIS ID'S
"KRN",19,9942,-1)
0^5
"KRN",19,9942,0)
XUMF IMF EDIT STATUS^IMF Display Cleanup Status^DO NOT USE THIS OPTION^R^^^^^^^^KERNEL
"KRN",19,9942,1,0)
^^2^2^3031214^
"KRN",19,9942,1,1,0)
This option displays the facilities associated the user and the status
"KRN",19,9942,1,2,0)
of the IMF data cleanup for each facility.
"KRN",19,9942,25)

"KRN",19,9942,"U")
IMF DISPLAY CLEANUP STATUS
"KRN",19,9943,-1)
0^2
"KRN",19,9943,0)
XUMF LOAD INSTITUTION^Update/refresh Institution file with IMF data^^R^^XUMF INSTITUTION^^^^^^KERNEL
"KRN",19,9943,1,0)
^19.06^3^3^3031229^^
"KRN",19,9943,1,1,0)
This option queries the Institution Master File (IMF) to get the
"KRN",19,9943,1,2,0)
gold file of Institutions and automatically updates the local
"KRN",19,9943,1,3,0)
INSTITUTION (#4) file.
"KRN",19,9943,25)
EN^XUMF04Q
"KRN",19,9943,"U")
UPDATE/REFRESH INSTITUTION FIL
"KRN",19,9944,-1)
0^6
"KRN",19,9944,0)
XUMF335 clean 4.1 and 4^Patch XU*8*335 clean 4.1 and 4^USE XUMF LOAD INSTITUTION^R^^XUMF INSTITUTION^^^^^^KERNEL
"KRN",19,9944,1,0)
^19.06^3^3^3040115^^
"KRN",19,9944,1,1,0)
This option will remove existing entries from the Facility Type (#4.1)
"KRN",19,9944,1,2,0)
file and get the gold standard from FORUM.  It will then update the
"KRN",19,9944,1,3,0)
Institution (#4) file with IMF data.
"KRN",19,9944,25)

"KRN",19,9944,"U")
PATCH XU*8*335 CLEAN 4.1 AND 4
"KRN",19,10465,-1)
0^3
"KRN",19,10465,0)
XUMF LOAD NPI^Load Institution NPI values^USE XUMF LOAD INSTITUTION^R^^^^^^^^KERNEL
"KRN",19,10465,1,0)
^^2^2^3060822^
"KRN",19,10465,1,1,0)
This option will execute an HL7 query to FORUM to get the NPI values
"KRN",19,10465,1,2,0)
from the Institution Master File and update the local Institution file.
"KRN",19,10465,25)
EN^XUMF416
"KRN",19,10465,"U")
LOAD INSTITUTION NPI VALUES
"KRN",101,3998,-1)
0^2
"KRN",101,3998,0)
XUMF 04 MFN^Institution updates^^E^^^^^^^^
"KRN",101,3998,1,0)
^^1^1^3001011^^^^
"KRN",101,3998,1,1,0)
This protocol is the Master File Notification event driver for the Institution file.
"KRN",101,3998,99)
61696,26014
"KRN",101,3998,770)
XUMF 04 MFN^^MFN^M05^i^P^^^^2.3^MFN
"KRN",101,3998,772)
Q
"KRN",101,3998,775,0)
^101.0775PA^1^1
"KRN",101,3998,775,1,0)
3999
"KRN",101,3998,775,1,"^")
XUMF 04 MFK
"KRN",101,3999,-1)
0^1
"KRN",101,3999,0)
XUMF 04 MFK^Institution handler^^S^^^^^^^^
"KRN",101,3999,1,0)
^101.06^1^1^3000629^^^^
"KRN",101,3999,1,1,0)
This protocol handles Master File Notifications for the Institution file.
"KRN",101,3999,99)
61696,26061
"KRN",101,3999,770)
^XUMF 04 MFK^MFN^M05^i^P^^^^2.3^MFK
"KRN",101,3999,771)
D MAIN^XUMF04H
"KRN",101,3999,772)

"KRN",101,3999,773)
1^1^^1
"KRN",101,3999,774)
Q
"KRN",101,4000,-1)
0^3
"KRN",101,4000,0)
XUMF 04 MFQ^Institution query^^E^^^^^^^^
"KRN",101,4000,1,0)
^^1^1^3000303^^^^
"KRN",101,4000,1,1,0)
This protocol is Master File Query event driver for the Institution file.
"KRN",101,4000,99)
61702,26127
"KRN",101,4000,770)
XUMF 04 MFQ^^MFQ^M05^i^P^^^^2.3^MFR
"KRN",101,4000,771)

"KRN",101,4000,772)
D MAIN^XUMF04H
"KRN",101,4000,775,0)
^101.0775PA^2^1
"KRN",101,4000,775,2,0)
4001
"KRN",101,4000,775,2,"^")
XUMF 04 MFR
"KRN",101,4001,-1)
0^4
"KRN",101,4001,0)
XUMF 04 MFR^Institution query response^^S^^^^^^^^
"KRN",101,4001,1,0)
^^1^1^3000222^^^^
"KRN",101,4001,1,1,0)
This protocol handles Master File Query messages for the Institution file.
"KRN",101,4001,99)
61702,26174
"KRN",101,4001,770)
^XUMF 04 MFR^MFQ^M05^i^P^^^^2.3^MFR
"KRN",101,4001,771)
D MAIN^XUMF04QR
"KRN",101,4001,772)

"KRN",101,4001,773)
1^1^^1
"KRN",101,4001,774)
Q
"KRN",771,173,-1)
0^2
"KRN",771,173,0)
XUMF 04 MFK^a^MFS^XUMF SERVER^^^USA
"KRN",771,173,"MSG",0)
^771.06P^1^1
"KRN",771,173,"MSG",1,0)
MSA
"KRN",771,173,"MSG",1,"R")
NONE
"KRN",771,173,"SEG",0)
^771.05P^1^1
"KRN",771,173,"SEG",1,0)
MSH
"KRN",771,173,"SEG",1,"F")
.01
"KRN",771,174,-1)
0^4
"KRN",771,174,0)
XUMF 04 MFN^a^MFS^XUMF SERVER^^^USA
"KRN",771,174,"MSG",0)
^771.06P^1^1
"KRN",771,174,"MSG",1,0)
MSA
"KRN",771,174,"MSG",1,"R")
NONE
"KRN",771,174,"SEG",0)
^771.05P^1^1
"KRN",771,174,"SEG",1,0)
MSH
"KRN",771,174,"SEG",1,"F")
.01
"KRN",771,175,-1)
0^1
"KRN",771,175,0)
XUMF 04 MFR^a^MFS^XUMF SERVER^^^USA
"KRN",771,175,"MSG",0)
^771.06P^2^1
"KRN",771,175,"MSG",2,0)
ZTA
"KRN",771,175,"MSG",2,"R")
NONE
"KRN",771,175,"SEG",0)
^771.05P^1^1
"KRN",771,175,"SEG",1,0)
MSH
"KRN",771,175,"SEG",1,"F")
.01
"KRN",771,176,-1)
0^3
"KRN",771,176,0)
XUMF 04 MFQ^a^MFS^XUMF SERVER^^^USA
"KRN",771,176,"MSG",0)
^771.06P^1^1
"KRN",771,176,"MSG",1,0)
ZTA
"KRN",771,176,"MSG",1,"R")
NONE
"KRN",771,176,"SEG",0)
^771.05P^1^1
"KRN",771,176,"SEG",1,0)
MSH
"KRN",771,176,"SEG",1,"F")
.01
"MBREQ")
0
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3040115^2960606^1
"PKG",3,22,1,"PAH",1,0)
549^3101006
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","XUAF4")
0^6^B47018536^B41593357
"RTN","XUAF4",1,0)
XUAF4 ;ISC-SF/RWF/RAM - Institution file access. ;04/01/99  08:07
"RTN","XUAF4",2,0)
 ;;8.0;KERNEL;**43,112,206,209,232,217,261,394,549**;Jul 10, 1995;Build 9
"RTN","XUAF4",3,0)
 Q  ;No access from the top.
"RTN","XUAF4",4,0)
 ;
"RTN","XUAF4",5,0)
PARENT(ROOT,CHILD,ASSO) ;sr. Return array of IEN's of parents
"RTN","XUAF4",6,0)
 N %,%0
"RTN","XUAF4",7,0)
 S CHILD=$$LKUP(CHILD),ASSO=$$ASSO($G(ASSO)),%=0
"RTN","XUAF4",8,0)
 F  S %=$O(^DIC(4,CHILD,7,%)) Q:%'>0  S %0=+$P(^(%,0),U,2) D
"RTN","XUAF4",9,0)
 . Q:+%'=ASSO
"RTN","XUAF4",10,0)
 . S @ROOT@("P",+%0)=$$NS(+%0)
"RTN","XUAF4",11,0)
 Q
"RTN","XUAF4",12,0)
CHILDREN(ROOT,PAR,ASSO,XUAC) ;sr. Return the children
"RTN","XUAF4",13,0)
 N %,%1 S %=0,PAR=$$LKUP(PAR),ASSO=$$ASSO($G(ASSO)),XUAC=$G(XUAC)
"RTN","XUAF4",14,0)
 Q:ASSO'>0
"RTN","XUAF4",15,0)
 F  S %=$O(^DIC(4,"AC",ASSO,PAR,%)) Q:%'>0  D
"RTN","XUAF4",16,0)
 . I XUAC,$$STATUS(%)="I" Q
"RTN","XUAF4",17,0)
 . S @ROOT@("C",%)=$$NS(%)
"RTN","XUAF4",18,0)
 Q
"RTN","XUAF4",19,0)
SIBLING(ROOT,CHILD,ASSO) ;sr. Return the siblings
"RTN","XUAF4",20,0)
 N % S %=0,ASSO=$$ASSO($G(ASSO))
"RTN","XUAF4",21,0)
 D PARENT(ROOT,CHILD,ASSO)
"RTN","XUAF4",22,0)
 F  S %=$O(@ROOT@("P",%)) Q:%'>0  D CHILDREN($NA(@ROOT@("P",%)),"`"_%,ASSO)
"RTN","XUAF4",23,0)
 Q
"RTN","XUAF4",24,0)
NNT(%) ;ef.sr. Return Name, Station Number, ASSO
"RTN","XUAF4",25,0)
 I %'>0 Q ""
"RTN","XUAF4",26,0)
 Q $$NS(%)_"^"_$$WHAT(%,13)
"RTN","XUAF4",27,0)
 ;
"RTN","XUAF4",28,0)
LKUP(%) ;ef.sr. Resolve a value into IEN
"RTN","XUAF4",29,0)
 I $E(%)="`" S %=+$E(%,2,99) Q:$D(^DIC(4,%,0))#2 % Q 0
"RTN","XUAF4",30,0)
 ;Q $$FIND1^DIC(4,,"MX",%)
"RTN","XUAF4",31,0)
 Q $$FIND1^DIC(4,,"MX",%,,"I $P(^(0),U,11)'=""I""") ;To screen Inactive
"RTN","XUAF4",32,0)
 ;
"RTN","XUAF4",33,0)
STATUS(%) ;Get the status of a IEN
"RTN","XUAF4",34,0)
 Q $P($G(^DIC(4,%,0)),U,11)
"RTN","XUAF4",35,0)
 ;
"RTN","XUAF4",36,0)
TYPE(%) ;Lookup a Faclity TYPE in file 4.1
"RTN","XUAF4",37,0)
 I %="" Q %
"RTN","XUAF4",38,0)
 I $D(^DIC(4.1,"B",%))>9 Q %
"RTN","XUAF4",39,0)
 S %=$$FIND1^DIC(4.1,,"MX",%)
"RTN","XUAF4",40,0)
 Q $P($G(^DIC(4.1,+%,0)),U)
"RTN","XUAF4",41,0)
 ;
"RTN","XUAF4",42,0)
ASSO(%) ;Lookup an Asso
"RTN","XUAF4",43,0)
 Q:+%=% % S:%="" %="VISN"
"RTN","XUAF4",44,0)
 S %=$$FIND1^DIC(4.05,,"MX",%)
"RTN","XUAF4",45,0)
 Q +%
"RTN","XUAF4",46,0)
 ;
"RTN","XUAF4",47,0)
NS(IEN) ;ef.sr. Return name and station #
"RTN","XUAF4",48,0)
 Q $P($G(^DIC(4,IEN,0)),U,1)_U_$P($G(^DIC(4,+IEN,99)),U,1)
"RTN","XUAF4",49,0)
 ;
"RTN","XUAF4",50,0)
WHAT(IEN,FLD) ;ef.sr. Field to return
"RTN","XUAF4",51,0)
 Q $$GET1^DIQ(4,IEN_",",FLD,"")
"RTN","XUAF4",52,0)
 ;
"RTN","XUAF4",53,0)
CIRN(%1,%2) ;ef.sr. Is this a CIRN Enables inst.
"RTN","XUAF4",54,0)
 N % S %1=+$G(%1)
"RTN","XUAF4",55,0)
 Q:'$D(^DIC(4,%1,0)) -1
"RTN","XUAF4",56,0)
 I $G(%2)]"" N DIE,DR,DA S DA=%1,DR="990.1///"_%2,DIE="^DIC(4," D ^DIE
"RTN","XUAF4",57,0)
 Q $$WHAT(%1,990.1)
"RTN","XUAF4",58,0)
 ;
"RTN","XUAF4",59,0)
IEN(STA) ;return IEN for a station number
"RTN","XUAF4",60,0)
 S STA=$G(STA) Q:STA="" STA
"RTN","XUAF4",61,0)
 Q $O(^DIC(4,"D",STA,0))
"RTN","XUAF4",62,0)
 ;
"RTN","XUAF4",63,0)
STA(IEN) ;return station number for an IEN
"RTN","XUAF4",64,0)
 Q $P($G(^DIC(4,+IEN,99)),U)
"RTN","XUAF4",65,0)
 ;
"RTN","XUAF4",66,0)
TF(IEN) ;active treating facility? (1=YES,0=NO)
"RTN","XUAF4",67,0)
 N ARRAY Q:'$G(IEN) 0
"RTN","XUAF4",68,0)
 D F4($$STA(IEN),.ARRAY,"AM")
"RTN","XUAF4",69,0)
 Q $S(ARRAY:1,1:0)
"RTN","XUAF4",70,0)
 ;
"RTN","XUAF4",71,0)
RT(IEN) ;realigned to
"RTN","XUAF4",72,0)
 N ARRAY Q:'$G(IEN) 0
"RTN","XUAF4",73,0)
 D F4($$STA(IEN),.ARRAY)
"RTN","XUAF4",74,0)
 Q $G(ARRAY("REALIGNED TO"))
"RTN","XUAF4",75,0)
 ;
"RTN","XUAF4",76,0)
RF(IEN) ;realigned from
"RTN","XUAF4",77,0)
 N ARRAY Q:'$G(IEN) 0
"RTN","XUAF4",78,0)
 D F4($$STA(IEN),.ARRAY)
"RTN","XUAF4",79,0)
 Q $G(ARRAY("REALIGNED FROM"))
"RTN","XUAF4",80,0)
 ;
"RTN","XUAF4",81,0)
O99(IEN) ;returns pointer to new station number IEN
"RTN","XUAF4",82,0)
 Q:$O(^DIC(4,"AOLD99",+$G(IEN),""))="" ""
"RTN","XUAF4",83,0)
 Q $O(^DIC(4,"D",$O(^DIC(4,"AOLD99",+$G(IEN),"")),0))
"RTN","XUAF4",84,0)
 ;
"RTN","XUAF4",85,0)
LEGACY(STA) ; -- legacy station number (1=yes; 0=no)
"RTN","XUAF4",86,0)
 Q $S($$RT^XUAF4(+$$IEN^XUAF4(STA)):1,1:0)
"RTN","XUAF4",87,0)
 ;
"RTN","XUAF4",88,0)
PRNT(STA) ; -- parent facility
"RTN","XUAF4",89,0)
 N X S STA=$G(STA) Q:STA="" "0^no station number passed"
"RTN","XUAF4",90,0)
 D PARENT("X",STA,"PARENT FACILITY") S X=$O(X("P",0))
"RTN","XUAF4",91,0)
 Q:'X "0^no parent associated with input station number"
"RTN","XUAF4",92,0)
 Q X_U_$P($G(X("P",+X)),U,2)_U_$P($G(X("P",+X)),U)
"RTN","XUAF4",93,0)
 ;
"RTN","XUAF4",94,0)
NAME(IEN) ; -- Official Name
"RTN","XUAF4",95,0)
 Q:$P($G(^DIC(4,+IEN,99)),U,3)'="" $P($G(^DIC(4,+IEN,99)),U,3)
"RTN","XUAF4",96,0)
 Q $P($G(^DIC(4,+IEN,0)),U)
"RTN","XUAF4",97,0)
 ;
"RTN","XUAF4",98,0)
ACTIVE(IEN) ; -- active facility (1=active, 0=inactive)
"RTN","XUAF4",99,0)
 ;
"RTN","XUAF4",100,0)
 Q '$P($G(^DIC(4,+IEN,99)),U,4)
"RTN","XUAF4",101,0)
 ;
"RTN","XUAF4",102,0)
PADD(IEN) ; -- physical address (street addr^city^state^zip)
"RTN","XUAF4",103,0)
 ;
"RTN","XUAF4",104,0)
 N X,STATE
"RTN","XUAF4",105,0)
 ;
"RTN","XUAF4",106,0)
 S X=$P($G(^DIC(4,+IEN,0)),U,2)
"RTN","XUAF4",107,0)
 S STATE=$P($G(^DIC(5,+X,0)),U,2)
"RTN","XUAF4",108,0)
 S X=$G(^DIC(4,+IEN,1)) Q:X="" X
"RTN","XUAF4",109,0)
 ;
"RTN","XUAF4",110,0)
 Q $P(X,U)_U_$P(X,U,3)_U_STATE_U_$P(X,U,4)
"RTN","XUAF4",111,0)
 ;
"RTN","XUAF4",112,0)
MADD(IEN) ; -- mailing address (street addr^city^state^zip)
"RTN","XUAF4",113,0)
 ;
"RTN","XUAF4",114,0)
 N X,STATE
"RTN","XUAF4",115,0)
 ;
"RTN","XUAF4",116,0)
 S X=$G(^DIC(4,+IEN,4)) Q:X="" X
"RTN","XUAF4",117,0)
 S STATE=$P($G(^DIC(5,+$P(X,U,4),0)),U,2)
"RTN","XUAF4",118,0)
 ;
"RTN","XUAF4",119,0)
 Q $P(X,U)_U_$P(X,U,3)_U_STATE_U_$P(X,U,5)
"RTN","XUAF4",120,0)
 ;
"RTN","XUAF4",121,0)
F4(STA,ARRAY,FLAG,ONDT) ;File #4 multipurpose API
"RTN","XUAF4",122,0)
 ;
"RTN","XUAF4",123,0)
 ;INPUT
"RTN","XUAF4",124,0)
 ;       STA     Station number (required)
"RTN","XUAF4",125,0)
 ;
"RTN","XUAF4",126,0)
 ;    [.]ARRAY   $NAME reference for return values.  (required)
"RTN","XUAF4",127,0)
 ;
"RTN","XUAF4",128,0)
 ;       FLAG    A = Active entries only.  (optional)
"RTN","XUAF4",129,0)
 ;               M = Medical treating facilities only.
"RTN","XUAF4",130,0)
 ;
"RTN","XUAF4",131,0)
 ;       ONDT    Return name on this FM internal date.  (optional);
"RTN","XUAF4",132,0)
 ;
"RTN","XUAF4",133,0)
 ;OUTPUT
"RTN","XUAF4",134,0)
 ;       ARRAY                     IEN or '0^error message'
"RTN","XUAF4",135,0)
 ;       ARRAY("NAME")             name
"RTN","XUAF4",136,0)
 ;       ARRAY("VA NAME")          offical va name
"RTN","XUAF4",137,0)
 ;       ARRAY("STATION NUMBER")   station number
"RTN","XUAF4",138,0)
 ;       ARRAY("TYPE")             facilty type name
"RTN","XUAF4",139,0)
 ;       ARRAY("INACTIVE")         inactive date (0=not inactive)
"RTN","XUAF4",140,0)
 ;       note: if inactive date not available but entry inactive then 1
"RTN","XUAF4",141,0)
 ;
"RTN","XUAF4",142,0)
 ;       ARRAY("REALIGNED TO")     IEN^station number^date
"RTN","XUAF4",143,0)
 ;       ARRAY("REALIGNED FROM")   IEN^station number^date
"RTN","XUAF4",144,0)
 ;
"RTN","XUAF4",145,0)
 K ARRAY
"RTN","XUAF4",146,0)
 S STA=$G(STA),FLAG=$G(FLAG),ONDT=$G(ONDT)
"RTN","XUAF4",147,0)
 I STA="" S ARRAY="0^invalid input STA - required" Q
"RTN","XUAF4",148,0)
 ;
"RTN","XUAF4",149,0)
 N IEN,N99,TO,FM,I,RDT,NAME,VANAME,HDT
"RTN","XUAF4",150,0)
 ;
"RTN","XUAF4",151,0)
 S IEN=$$IEN(STA)
"RTN","XUAF4",152,0)
 I 'IEN S ARRAY="0^station number does not exist" Q
"RTN","XUAF4",153,0)
 S N99=$G(^DIC(4,+IEN,99))
"RTN","XUAF4",154,0)
 S ARRAY=$$SCRN() Q:'ARRAY
"RTN","XUAF4",155,0)
 ;
"RTN","XUAF4",156,0)
 S ARRAY("NAME")=$P(^DIC(4,IEN,0),U)
"RTN","XUAF4",157,0)
 S ARRAY("VA NAME")=$P(N99,U,3)
"RTN","XUAF4",158,0)
 S ARRAY("STATION NUMBER")=STA
"RTN","XUAF4",159,0)
 S ARRAY("TYPE")=$P($G(^DIC(4.1,+$G(^DIC(4,IEN,3)),0)),U)
"RTN","XUAF4",160,0)
 ;
"RTN","XUAF4",161,0)
 ;realignments
"RTN","XUAF4",162,0)
 S TO=$O(^DIC(4,"ARTO",IEN,0)) D:TO
"RTN","XUAF4",163,0)
 .S RDT=$O(^DIC(4,"ART",TO,IEN,0))
"RTN","XUAF4",164,0)
 .S ARRAY("REALIGNED TO")=TO_U_$$STA(TO)_U_RDT
"RTN","XUAF4",165,0)
 S FM=$O(^DIC(4,"ARFM",IEN,0)) D:FM
"RTN","XUAF4",166,0)
 .S ARRAY("REALIGNED FROM")=FM_U_$$STA(FM)_U_$O(^DIC(4,"ARF",FM,IEN,0))
"RTN","XUAF4",167,0)
 ;
"RTN","XUAF4",168,0)
 S I=$O(^DIC(4,"AI",IEN,0)),I=$S(I:I,$G(RDT):RDT,1:+$P(N99,U,4))
"RTN","XUAF4",169,0)
 S ARRAY("INACTIVE")=I
"RTN","XUAF4",170,0)
 ;
"RTN","XUAF4",171,0)
 Q:'ONDT
"RTN","XUAF4",172,0)
 ;
"RTN","XUAF4",173,0)
 ;get name for date
"RTN","XUAF4",174,0)
 S NAME=ARRAY("NAME")
"RTN","XUAF4",175,0)
 S VANAME=ARRAY("VA NAME")
"RTN","XUAF4",176,0)
 S HDT=DT
"RTN","XUAF4",177,0)
 F  S HDT=$O(^DIC(4,IEN,999,HDT),-1) Q:('HDT!(HDT<ONDT))  D
"RTN","XUAF4",178,0)
 .N X S X=$G(^DIC(4,IEN,999,HDT,0)) Q:X=""
"RTN","XUAF4",179,0)
 .S:$P(X,U,2)'="" NAME=$P(X,U,2)
"RTN","XUAF4",180,0)
 .S:$P(X,U,3)'="" VANAME=$P(X,U,3)
"RTN","XUAF4",181,0)
 S ARRAY("NAME")=NAME
"RTN","XUAF4",182,0)
 S ARRAY("VA NAME")=VANAME
"RTN","XUAF4",183,0)
 ;
"RTN","XUAF4",184,0)
 Q
"RTN","XUAF4",185,0)
 ;
"RTN","XUAF4",186,0)
IDT(IEN) ; inactive date
"RTN","XUAF4",187,0)
 N IDT,ND,XDT
"RTN","XUAF4",188,0)
 S IEN=$G(IEN) Q:'IEN IEN
"RTN","XUAF4",189,0)
 S XDT=9999999,IDT=""
"RTN","XUAF4",190,0)
 F  S XDT=$O(^DIC(4,+IEN,999,XDT),-1) Q:'XDT  D  Q:IDT
"RTN","XUAF4",191,0)
 .S ND=$G(^DIC(4,+IEN,999,XDT,0)) Q:ND=""
"RTN","XUAF4",192,0)
 .S IDT=$S($P(ND,U,5):XDT,$P(ND,U,7):XDT,1:IDT)
"RTN","XUAF4",193,0)
 Q IDT
"RTN","XUAF4",194,0)
 ;
"RTN","XUAF4",195,0)
SCRN() ;sreen IEN
"RTN","XUAF4",196,0)
 N X S X=$E(N99,1,3)
"RTN","XUAF4",197,0)
 I FLAG["A",$P(N99,U,4) Q "0^inactive facility"
"RTN","XUAF4",198,0)
 I FLAG["M",$S(X=358:0,X<400:1,X>759:1,X<700:0,X<750:1,1:0),$G(DUZ("AG"))="V" Q "0^not a treating facility"
"RTN","XUAF4",199,0)
 Q IEN
"RTN","XUAF4",200,0)
 ;
"RTN","XUAF4",201,0)
LOOKUP ; -- lookup an enty by coding system / ID pair
"RTN","XUAF4",202,0)
 ;
"RTN","XUAF4",203,0)
 N DIC,D
"RTN","XUAF4",204,0)
 ;
"RTN","XUAF4",205,0)
 S DIC="^DIC(4,",DIC(0)="QEA",D="XUMFIDX" D IX^DIC
"RTN","XUAF4",206,0)
 ;
"RTN","XUAF4",207,0)
 Q
"RTN","XUAF4",208,0)
 ;
"RTN","XUAF4",209,0)
IDX(CDSYS,ID) ; -- return IEN for a given coding system / ID pair
"RTN","XUAF4",210,0)
 ;
"RTN","XUAF4",211,0)
 ;INPUT
"RTN","XUAF4",212,0)
 ;       CDSYS   coding system (required)
"RTN","XUAF4",213,0)
 ;       ID      identifier (required)
"RTN","XUAF4",214,0)
 ;OUTPUT
"RTN","XUAF4",215,0)
 ;       $$      Internal Entry Number
"RTN","XUAF4",216,0)
 ;
"RTN","XUAF4",217,0)
 N IEN
"RTN","XUAF4",218,0)
 ;
"RTN","XUAF4",219,0)
 S CDSYS=$G(CDSYS),ID=$G(ID)
"RTN","XUAF4",220,0)
 ;
"RTN","XUAF4",221,0)
 Q:CDSYS="" "0^CDSYS required"
"RTN","XUAF4",222,0)
 Q:ID="" "0^ID required"
"RTN","XUAF4",223,0)
 ;
"RTN","XUAF4",224,0)
 I CDSYS="VASTANUM" Q $O(^DIC(4,"D",ID,0))
"RTN","XUAF4",225,0)
 I CDSYS="NPI"  Q $O(^DIC(4,"ANPI",ID,0))
"RTN","XUAF4",226,0)
 ;
"RTN","XUAF4",227,0)
 S IEN=$O(^DIC(4,"XUMFIDX",CDSYS,ID,0))
"RTN","XUAF4",228,0)
 ;
"RTN","XUAF4",229,0)
 Q $S(IEN:IEN,1:"0^not found")
"RTN","XUAF4",230,0)
 ;
"RTN","XUAF4",231,0)
ID(CDSYS,IEN) ; returns the ID for a given coding system / IEN
"RTN","XUAF4",232,0)
 ;
"RTN","XUAF4",233,0)
 ;INPUT
"RTN","XUAF4",234,0)
 ;       CDSYS   coding system (required)
"RTN","XUAF4",235,0)
 ;       IEN     Internal Entry Number (required)
"RTN","XUAF4",236,0)
 ;OUTPUT
"RTN","XUAF4",237,0)
 ;       $$      Identifier
"RTN","XUAF4",238,0)
 ;
"RTN","XUAF4",239,0)
 N ID,IDX
"RTN","XUAF4",240,0)
 ;
"RTN","XUAF4",241,0)
 S CDSYS=$G(CDSYS),IEN=$G(IEN)
"RTN","XUAF4",242,0)
 Q:CDSYS="" "" Q:'IEN "" Q:'$D(^DIC(4,IEN)) ""
"RTN","XUAF4",243,0)
 ;
"RTN","XUAF4",244,0)
 I CDSYS="VASTANUM" Q $P($G(^DIC(4,+IEN,99)),U)
"RTN","XUAF4",245,0)
 I CDSYS="NPI"  Q $P($G(^DIC(4,+IEN,"NPI")),U)
"RTN","XUAF4",246,0)
 ;
"RTN","XUAF4",247,0)
 S IDX=$O(^DIC(4,IEN,9999,"B",CDSYS,0)) Q:'IDX ""
"RTN","XUAF4",248,0)
 ;
"RTN","XUAF4",249,0)
 Q $P($G(^DIC(4,IEN,9999,IDX,0)),U,2)
"RTN","XUAF4",250,0)
 ;
"RTN","XUAF4",251,0)
CDSYS(Y) ; coding systems
"RTN","XUAF4",252,0)
 ;
"RTN","XUAF4",253,0)
 ;INPUT/OUTPUT
"RTN","XUAF4",254,0)
 ;       .Y     Y(CDSYS) = $D local system ^ coding system name
"RTN","XUAF4",255,0)
 ;
"RTN","XUAF4",256,0)
 S Y("DMIS")=$D(^DIC(4,"XUMFIDX","DMIS"))_U_"DoD DMIS ID"
"RTN","XUAF4",257,0)
 S Y("VASTANUM")=$D(^DIC(4,"D"))_U_"VA Station Number"
"RTN","XUAF4",258,0)
 S Y("NPI")=$D(^DIC(4,"ANPI"))_U_"NPI"
"RTN","XUAF4",259,0)
 S Y("CLIA")=$D(^DIC(4,"XUMFIDX","CLIA"))_U_"CLIA number"
"RTN","XUAF4",260,0)
 S Y("MAMMO-ACR")=$D(^DIC(4,"XUMFIDX","MAMMO-ACR"))_U_"MAMMO-ACR number"
"RTN","XUAF4",261,0)
 ;
"RTN","XUAF4",262,0)
 Q
"RTN","XUAF4",263,0)
 ;
"RTN","XUAF4",264,0)
LCDSYS(Y) ;  list coding systems
"RTN","XUAF4",265,0)
 ;
"RTN","XUAF4",266,0)
 N CDSYS
"RTN","XUAF4",267,0)
 S CDSYS=""
"RTN","XUAF4",268,0)
 S CDSYS("NPI")="",CDSYS("VASTANUM")=""
"RTN","XUAF4",269,0)
 F  S CDSYS=$O(^DIC(4,"XUMFIDX",CDSYS)) Q:CDSYS=""  D
"RTN","XUAF4",270,0)
 .S Y(CDSYS)=""
"RTN","XUAF4",271,0)
 ;
"RTN","XUAF4",272,0)
 Q
"RTN","XUAF4",273,0)
 ;
"RTN","XUAF4",274,0)
BNIEN(IEN) ; -- Billing Facility Name - Internal Entry Number
"RTN","XUAF4",275,0)
 ;
"RTN","XUAF4",276,0)
 Q $P($G(^DIC(4,+IEN,99)),U,2)
"RTN","XUAF4",277,0)
 ;
"RTN","XUAF4",278,0)
BNSTA(STA) ; -- Billing Facility Name - Station Number
"RTN","XUAF4",279,0)
 ;
"RTN","XUAF4",280,0)
 Q $P($G(^DIC(4,+$$IEN^XUAF4(STA),99)),U,2)
"RTN","XUAF4",281,0)
 ;
"RTN","XUMF04")
0^1^B19370991^n/a
"RTN","XUMF04",1,0)
XUMF04 ;BP/RAM - INSTITUTION SEGMENTS ;06/28/00
"RTN","XUMF04",2,0)
 ;;8.0;KERNEL;**549**;Jul 10, 1995;Build 9
"RTN","XUMF04",3,0)
 ;
"RTN","XUMF04",4,0)
 Q
"RTN","XUMF04",5,0)
 ;
"RTN","XUMF04",6,0)
MSA(ERROR,HLFS,HL) ; - ACK 
"RTN","XUMF04",7,0)
 ;
"RTN","XUMF04",8,0)
 S:$G(HLFS)="" HLFS="^"
"RTN","XUMF04",9,0)
 ;
"RTN","XUMF04",10,0)
 Q "MSA"_HLFS_$S(ERROR:"AE",1:"AA")_HLFS_$G(HL("MID"))
"RTN","XUMF04",11,0)
 ;
"RTN","XUMF04",12,0)
QRD(HLFS,WHO) ; -- query definition segment
"RTN","XUMF04",13,0)
 ;
"RTN","XUMF04",14,0)
 S:$G(HLFS)="" HLFS="^"
"RTN","XUMF04",15,0)
 S:$G(WHO)="" WHO="VASTANUM"
"RTN","XUMF04",16,0)
 ;
"RTN","XUMF04",17,0)
 N QDT,QFC,QP,QID,ZDRT,ZDRDT,QLR,WHAT,WDDC,WDCVQ,QRL,QRD
"RTN","XUMF04",18,0)
 ;
"RTN","XUMF04",19,0)
 S QDT=$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","XUMF04",20,0)
 S QFC="R"
"RTN","XUMF04",21,0)
 S QP="I"
"RTN","XUMF04",22,0)
 S QID="Z04"
"RTN","XUMF04",23,0)
 S ZDRT=""
"RTN","XUMF04",24,0)
 S ZDRDT=""
"RTN","XUMF04",25,0)
 S QLR="RD"_HLCS_999
"RTN","XUMF04",26,0)
 S WHAT="INSTITUTION"
"RTN","XUMF04",27,0)
 S WDDC="VA"
"RTN","XUMF04",28,0)
 S WDCVQ=""
"RTN","XUMF04",29,0)
 S QRL=""
"RTN","XUMF04",30,0)
 S QRD="QRD"_HLFS_QDT_HLFS_QFC_HLFS_QP_HLFS_QID_HLFS_ZDRT_HLFS_ZDRDT
"RTN","XUMF04",31,0)
 S QRD=QRD_HLFS_QLR_HLFS_WHO_HLFS_WHAT_HLFS_WDDC_HLFS_WDCVQ_HLFS_QRL
"RTN","XUMF04",32,0)
 ;
"RTN","XUMF04",33,0)
 Q QRD
"RTN","XUMF04",34,0)
 ;
"RTN","XUMF04",35,0)
MFI() ; master file identifier segment
"RTN","XUMF04",36,0)
 ;
"RTN","XUMF04",37,0)
 N ID,APP,EVENT,ENDT,EFFDT,RESP,MFI
"RTN","XUMF04",38,0)
 ;
"RTN","XUMF04",39,0)
 S ID="Z04"
"RTN","XUMF04",40,0)
 S APP="MFS"
"RTN","XUMF04",41,0)
 S EVENT="UPD"
"RTN","XUMF04",42,0)
 S ENDT=$$NOW^XLFDT
"RTN","XUMF04",43,0)
 S EFFDT=$$NOW^XLFDT
"RTN","XUMF04",44,0)
 S RESP="NE"
"RTN","XUMF04",45,0)
 S MFI=$$MFI^XUMFMFI(ID,APP,EVENT,ENDT,EFFDT,RESP)
"RTN","XUMF04",46,0)
 ;
"RTN","XUMF04",47,0)
 Q MFI
"RTN","XUMF04",48,0)
 ;
"RTN","XUMF04",49,0)
MFE(IEN) ; master file entry segment
"RTN","XUMF04",50,0)
 ;
"RTN","XUMF04",51,0)
 N EVENT,MFN,EDT,CODE,MFE
"RTN","XUMF04",52,0)
 ;
"RTN","XUMF04",53,0)
 S EVENT="MUP"
"RTN","XUMF04",54,0)
 S MFN=""
"RTN","XUMF04",55,0)
 S EDT=$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","XUMF04",56,0)
 S CODE=$$CODESYS(IEN)
"RTN","XUMF04",57,0)
 S MFE=$$MFE^XUMFMFE(EVENT,MFN,EDT,CODE)
"RTN","XUMF04",58,0)
 ;
"RTN","XUMF04",59,0)
 Q MFE
"RTN","XUMF04",60,0)
 ;
"RTN","XUMF04",61,0)
ZIN(IEN,NODE,HLFS,HLCS) ; ZIN segment
"RTN","XUMF04",62,0)
 ;
"RTN","XUMF04",63,0)
 N IENS,NAME,STATE,STREET1,STREET2,CITY,ZIP,ST1,ST2,CITY1,STATE1,ZIP1
"RTN","XUMF04",64,0)
 N X,ARRAY,BILLNAME,NPIDT,TAX,TAXSTAT,TAXPC,CLIA,DMIS,MAMMO
"RTN","XUMF04",65,0)
 N STATUS,FACTYP,AGENCY,STANUM,OFFNAME,INACTIVE,VISN,PARENT,NPI,NPISTAT
"RTN","XUMF04",66,0)
 ;
"RTN","XUMF04",67,0)
 S IENS=IEN_","
"RTN","XUMF04",68,0)
 ;
"RTN","XUMF04",69,0)
 S:$G(HLFS)="" HLFS="^"
"RTN","XUMF04",70,0)
 S:$G(HLCS)="" HLCS="~"
"RTN","XUMF04",71,0)
 ;
"RTN","XUMF04",72,0)
 D GETS^DIQ(4,IENS,"*","","ARRAY")
"RTN","XUMF04",73,0)
 ;
"RTN","XUMF04",74,0)
 S NAME=ARRAY(4,IENS,.01)
"RTN","XUMF04",75,0)
 S STATE=ARRAY(4,IENS,.02)
"RTN","XUMF04",76,0)
 S STREET1=ARRAY(4,IENS,1.01)
"RTN","XUMF04",77,0)
 S STREET2=ARRAY(4,IENS,1.02)
"RTN","XUMF04",78,0)
 S CITY=ARRAY(4,IENS,1.03)
"RTN","XUMF04",79,0)
 S ZIP=ARRAY(4,IENS,1.04)
"RTN","XUMF04",80,0)
 S ST1=ARRAY(4,IENS,4.01)
"RTN","XUMF04",81,0)
 S ST2=ARRAY(4,IENS,4.02)
"RTN","XUMF04",82,0)
 S CITY1=ARRAY(4,IENS,4.03)
"RTN","XUMF04",83,0)
 S STATE1=ARRAY(4,IENS,4.04)
"RTN","XUMF04",84,0)
 S ZIP1=ARRAY(4,IENS,4.05)
"RTN","XUMF04",85,0)
 S STATUS=ARRAY(4,IENS,11)
"RTN","XUMF04",86,0)
 S FACTYP=ARRAY(4,IENS,13)
"RTN","XUMF04",87,0)
 S AGENCY=ARRAY(4,IENS,95)
"RTN","XUMF04",88,0)
 S STANUM=ARRAY(4,IENS,99)
"RTN","XUMF04",89,0)
 S OFFNAME=ARRAY(4,IENS,100)
"RTN","XUMF04",90,0)
 S INACTIVE=ARRAY(4,IENS,101)
"RTN","XUMF04",91,0)
 S BILLNAME=ARRAY(4,IENS,200)
"RTN","XUMF04",92,0)
 S VISN=$P($G(^DIC(4,+$P($G(^DIC(4,+IEN,7,1,0)),U,2),0)),U)
"RTN","XUMF04",93,0)
 S PARENT=$P($G(^DIC(4,+$P($G(^DIC(4,+IEN,7,2,0)),U,2),99)),U)
"RTN","XUMF04",94,0)
 S NPI=$$NPI^XUSNPI("Organization_ID",IEN)
"RTN","XUMF04",95,0)
 S:$P(NPI,U)="-1" NPI=""
"RTN","XUMF04",96,0)
 S NPIDT=$$HLDATE^HLFNC($P(NPI,U,2))
"RTN","XUMF04",97,0)
 S NPISTAT=$$UP^XLFSTR($P(NPI,U,3))
"RTN","XUMF04",98,0)
 S NPI=$P(NPI,U)
"RTN","XUMF04",99,0)
 S TAX=$$TAXORG^XUSTAX(IEN)
"RTN","XUMF04",100,0)
 S X=$P(TAX,U,2),TAX=$P(TAX,U)
"RTN","XUMF04",101,0)
 S:X X=$O(^DIC(4,IEN,"TAXONOMY","B",X,0))
"RTN","XUMF04",102,0)
 S X=$G(^DIC(4,+IEN,"TAXONOMY",+$G(X),0))
"RTN","XUMF04",103,0)
 S TAXPC=$S('X:"",$P(X,U,2)=1:"YES",1:"NO")
"RTN","XUMF04",104,0)
 S TAXSTAT=$S('X:"",$P(X,U,3)="A":"ACTIVE",1:"INACTIVE")
"RTN","XUMF04",105,0)
 S CLIA=$$ID^XUAF4("CLIA",IEN)
"RTN","XUMF04",106,0)
 S MAMMO=$$ID^XUAF4("MAMMO-ACR",IEN)
"RTN","XUMF04",107,0)
 S DMIS=$$ID^XUAF4("DMIS",IEN)
"RTN","XUMF04",108,0)
 ;
"RTN","XUMF04",109,0)
 S NODE="ZIN"_HLFS_NAME_HLFS_STANUM_HLFS_STATUS_HLFS_FACTYP_HLFS
"RTN","XUMF04",110,0)
 S NODE(1)=OFFNAME_HLFS_INACTIVE_HLFS_STATE_HLFS_VISN_HLFS_PARENT
"RTN","XUMF04",111,0)
 S NODE(1)=NODE(1)_HLFS_HLFS_HLFS_HLFS_HLFS
"RTN","XUMF04",112,0)
 S NODE(2)=STREET1_HLCS_STREET2_HLCS_CITY_HLCS_STATE_HLCS_ZIP_HLFS
"RTN","XUMF04",113,0)
 S NODE(3)=ST1_HLCS_ST2_HLCS_CITY1_HLCS_STATE1_HLCS_ZIP1_HLFS
"RTN","XUMF04",114,0)
 S NODE(4)=AGENCY_HLFS_NPI_HLFS_NPISTAT_HLFS_NPIDT_HLFS_TAX_HLFS
"RTN","XUMF04",115,0)
 S NODE(4)=NODE(4)_TAXSTAT_HLFS_TAXPC_HLFS
"RTN","XUMF04",116,0)
 S NODE(4)=NODE(4)_CLIA_HLFS_MAMMO_HLFS_DMIS_HLFS_BILLNAME
"RTN","XUMF04",117,0)
 ;
"RTN","XUMF04",118,0)
 Q
"RTN","XUMF04",119,0)
 ;
"RTN","XUMF04",120,0)
CODESYS(IEN) ; coding system / id
"RTN","XUMF04",121,0)
 ;
"RTN","XUMF04",122,0)
 N X
"RTN","XUMF04",123,0)
 ;
"RTN","XUMF04",124,0)
 S X=$$STA^XUAF4(IEN) Q:X X_"~"_$P(^DIC(4,IEN,0),U)_"~VASTANUM"
"RTN","XUMF04",125,0)
 ;
"RTN","XUMF04",126,0)
 S X=$$ID^XUAF4("NPI",IEN) Q:X'="" X_"~"_$P(^DIC(4,IEN,0),U)_"~NPI"
"RTN","XUMF04",127,0)
 ;
"RTN","XUMF04",128,0)
 S X=$$ID^XUAF4("DMIS",IEN) Q:X'="" X_"~"_$P(^DIC(4,IEN,0),U)_"~DMIS"
"RTN","XUMF04",129,0)
 ;
"RTN","XUMF04",130,0)
 Q 0
"RTN","XUMF04",131,0)
 ;
"RTN","XUMF04H")
0^4^B30233648^n/a
"RTN","XUMF04H",1,0)
XUMF04H ;BP/RAM - INSTITUTION Handler ;11/16/05
"RTN","XUMF04H",2,0)
 ;;8.0;KERNEL;**549**;Jul 10, 1995;Build 9
"RTN","XUMF04H",3,0)
 ;
"RTN","XUMF04H",4,0)
 ; This routine handles Institution Master File HL7 messages.
"RTN","XUMF04H",5,0)
 ;
"RTN","XUMF04H",6,0)
MAIN ; -- entry point
"RTN","XUMF04H",7,0)
 ;
"RTN","XUMF04H",8,0)
 Q:$$KSP^XUPARAM("INST")=12000
"RTN","XUMF04H",9,0)
 ;
"RTN","XUMF04H",10,0)
 N X,HLFS,HLCS,ERROR,HLRESLTA,IFN,IEN,KEY,VALUE,ROOT,HLSCS,CDSYS,TEXT,ID
"RTN","XUMF04H",11,0)
 ;
"RTN","XUMF04H",12,0)
 D INIT,PROCESS,REPLY,EXIT
"RTN","XUMF04H",13,0)
 ;
"RTN","XUMF04H",14,0)
 Q
"RTN","XUMF04H",15,0)
 ;
"RTN","XUMF04H",16,0)
INIT ; -- initialize
"RTN","XUMF04H",17,0)
 ;
"RTN","XUMF04H",18,0)
 S ERROR=0,IEN=""
"RTN","XUMF04H",19,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMF04H",20,0)
 ;
"RTN","XUMF04H",21,0)
 Q
"RTN","XUMF04H",22,0)
 ;
"RTN","XUMF04H",23,0)
PROCESS ; -- pull message text
"RTN","XUMF04H",24,0)
 ;
"RTN","XUMF04H",25,0)
 F  X HLNEXT Q:HLQUIT'>0  D
"RTN","XUMF04H",26,0)
 .Q:$P(HLNODE,HLFS)=""
"RTN","XUMF04H",27,0)
 .D @($P(HLNODE,HLFS))
"RTN","XUMF04H",28,0)
 ;
"RTN","XUMF04H",29,0)
 Q
"RTN","XUMF04H",30,0)
 ;
"RTN","XUMF04H",31,0)
MSH ; -- MSH segment
"RTN","XUMF04H",32,0)
 ;
"RTN","XUMF04H",33,0)
 Q
"RTN","XUMF04H",34,0)
 ;
"RTN","XUMF04H",35,0)
MSA ; -- MSA segment
"RTN","XUMF04H",36,0)
 ;
"RTN","XUMF04H",37,0)
 Q
"RTN","XUMF04H",38,0)
 ;
"RTN","XUMF04H",39,0)
QRD ; -- QRD segment
"RTN","XUMF04H",40,0)
 ;
"RTN","XUMF04H",41,0)
 Q
"RTN","XUMF04H",42,0)
 ;
"RTN","XUMF04H",43,0)
MFI ; -- MFI segment
"RTN","XUMF04H",44,0)
 ;
"RTN","XUMF04H",45,0)
 Q
"RTN","XUMF04H",46,0)
 ;
"RTN","XUMF04H",47,0)
MFE ; -- MFE segment
"RTN","XUMF04H",48,0)
 ;
"RTN","XUMF04H",49,0)
 S KEY=$P(HLNODE,HLFS,5)
"RTN","XUMF04H",50,0)
 ;
"RTN","XUMF04H",51,0)
 S ID=$P(KEY,HLCS)
"RTN","XUMF04H",52,0)
 S TEXT=$P(KEY,HLCS,2)
"RTN","XUMF04H",53,0)
 S CDSYS=$P(KEY,HLCS,3)
"RTN","XUMF04H",54,0)
 ;
"RTN","XUMF04H",55,0)
 I CDSYS="VASTANUM" D  Q
"RTN","XUMF04H",56,0)
 .S IEN=$O(^DIC(4,"D",ID,0)) Q:IEN
"RTN","XUMF04H",57,0)
 .S IEN=$O(^DIC(4,"B",TEXT,0))
"RTN","XUMF04H",58,0)
 ;
"RTN","XUMF04H",59,0)
 I CDSYS="NPI" D  Q
"RTN","XUMF04H",60,0)
 .S IEN=$O(^DIC(4,"ANPI",ID,0)) Q:IEN
"RTN","XUMF04H",61,0)
 .S IEN=$O(^DIC(4,"B",TEXT,0))
"RTN","XUMF04H",62,0)
 I CDSYS="DMIS" D  Q
"RTN","XUMF04H",63,0)
 .S IEN=$O(^DIC(4,"XUMFIDX","DMIS",ID,0)) Q:IEN
"RTN","XUMF04H",64,0)
 .S IEN=$O(^DIC(4,"B",TEXT,0))
"RTN","XUMF04H",65,0)
 ;
"RTN","XUMF04H",66,0)
 Q
"RTN","XUMF04H",67,0)
 ;
"RTN","XUMF04H",68,0)
ZIN ; -- VHA Institution segment
"RTN","XUMF04H",69,0)
 ;
"RTN","XUMF04H",70,0)
 W "."
"RTN","XUMF04H",71,0)
 ;
"RTN","XUMF04H",72,0)
 N NAME,FACTYP,OFNME,INACTIVE,STATE,VISN,PARENT,STREET,STREET2,CITY,ZIP
"RTN","XUMF04H",73,0)
 N STRT1,STRT2,CITY1,STATE1,STANUM,BILLNAME,IEN1,IENS,ERR,ERROR1
"RTN","XUMF04H",74,0)
 N ZIP1,AGENCY,NPIDT,NPISTAT,NPI,TAX,TAXPC,TAXSTAT,MAMMO,CLIA,DMIS,XXXX
"RTN","XUMF04H",75,0)
 ;
"RTN","XUMF04H",76,0)
 D PARSE^XUMFXHL7("HLNODE","XXXX")
"RTN","XUMF04H",77,0)
 ;
"RTN","XUMF04H",78,0)
 S STANUM=XXXX(2)
"RTN","XUMF04H",79,0)
 ;
"RTN","XUMF04H",80,0)
 I $G(STANUM),CDSYS'="VASTANUM" Q
"RTN","XUMF04H",81,0)
 ;
"RTN","XUMF04H",82,0)
 S XUMF=1,ERROR1=""
"RTN","XUMF04H",83,0)
 ;
"RTN","XUMF04H",84,0)
 S NAME=XXXX(1)
"RTN","XUMF04H",85,0)
 S FACTYP=$P(XXXX(4),"~",1)
"RTN","XUMF04H",86,0)
 S OFNME=XXXX(5)
"RTN","XUMF04H",87,0)
 S INACTIVE=XXXX(6)
"RTN","XUMF04H",88,0)
 S STATE=XXXX(7)
"RTN","XUMF04H",89,0)
 S VISN=XXXX(8)
"RTN","XUMF04H",90,0)
 S PARENT=XXXX(9)
"RTN","XUMF04H",91,0)
 S STREET=$P(XXXX(14),"~",1)
"RTN","XUMF04H",92,0)
 S STREET2=$P(XXXX(14),"~",2)
"RTN","XUMF04H",93,0)
 S CITY=$P(XXXX(14),"~",3)
"RTN","XUMF04H",94,0)
 S ZIP=$P(XXXX(14),"~",5)
"RTN","XUMF04H",95,0)
 S STRT1=$P(XXXX(15),"~",1)
"RTN","XUMF04H",96,0)
 S STRT2=$P(XXXX(15),"~",2)
"RTN","XUMF04H",97,0)
 S CITY1=$P(XXXX(15),"~",3)
"RTN","XUMF04H",98,0)
 S STATE1=$P(XXXX(15),"~",4)
"RTN","XUMF04H",99,0)
 S ZIP1=$P(XXXX(15),"~",5)
"RTN","XUMF04H",100,0)
 S AGENCY=$P(XXXX(16),"~")
"RTN","XUMF04H",101,0)
 S NPI=XXXX(17)
"RTN","XUMF04H",102,0)
 S NPISTAT=XXXX(18)
"RTN","XUMF04H",103,0)
 S NPIDT=$$FMDATE^HLFNC(XXXX(19))
"RTN","XUMF04H",104,0)
 S TAX=XXXX(20)
"RTN","XUMF04H",105,0)
 S TAXSTAT=XXXX(21)
"RTN","XUMF04H",106,0)
 S TAXPC=XXXX(22)
"RTN","XUMF04H",107,0)
 S CLIA=XXXX(23)
"RTN","XUMF04H",108,0)
 S MAMMO=XXXX(24)
"RTN","XUMF04H",109,0)
 S DMIS=XXXX(25)
"RTN","XUMF04H",110,0)
 S BILLNAME=XXXX(26)
"RTN","XUMF04H",111,0)
 ;
"RTN","XUMF04H",112,0)
 ; -- new entry
"RTN","XUMF04H",113,0)
 I 'IEN D  Q:'IEN
"RTN","XUMF04H",114,0)
 .N X,Y S X=NAME
"RTN","XUMF04H",115,0)
 .K DIC S DIC=4,DIC(0)="F"
"RTN","XUMF04H",116,0)
 .D FILE^DICN K DIC
"RTN","XUMF04H",117,0)
 .S IEN=$S(Y="-1":0,1:+Y)
"RTN","XUMF04H",118,0)
 ;
"RTN","XUMF04H",119,0)
 S IENS=IEN_","
"RTN","XUMF04H",120,0)
 ;
"RTN","XUMF04H",121,0)
 K FDA
"RTN","XUMF04H",122,0)
 S FDA(4,IENS,.01)=NAME
"RTN","XUMF04H",123,0)
 S FDA(4,IENS,13)=FACTYP
"RTN","XUMF04H",124,0)
 S FDA(4,IENS,1.01)=STREET
"RTN","XUMF04H",125,0)
 S FDA(4,IENS,1.02)=STREET2
"RTN","XUMF04H",126,0)
 S FDA(4,IENS,1.03)=CITY
"RTN","XUMF04H",127,0)
 S FDA(4,IENS,1.04)=ZIP
"RTN","XUMF04H",128,0)
 S FDA(4,IENS,.02)=STATE
"RTN","XUMF04H",129,0)
 S FDA(4,IENS,4.01)=STRT1
"RTN","XUMF04H",130,0)
 S FDA(4,IENS,4.02)=STRT2
"RTN","XUMF04H",131,0)
 S FDA(4,IENS,4.03)=CITY1
"RTN","XUMF04H",132,0)
 S FDA(4,IENS,4.04)=STATE1
"RTN","XUMF04H",133,0)
 S FDA(4,IENS,4.05)=ZIP1
"RTN","XUMF04H",134,0)
 S FDA(4,IENS,11)="National"
"RTN","XUMF04H",135,0)
 S FDA(4,IENS,100)=OFNME
"RTN","XUMF04H",136,0)
 S FDA(4,IENS,101)=INACTIVE
"RTN","XUMF04H",137,0)
 S FDA(4,IENS,95)=AGENCY
"RTN","XUMF04H",138,0)
 S FDA(4,IENS,200)=BILLNAME
"RTN","XUMF04H",139,0)
 S FDA(4,IENS,99)=STANUM
"RTN","XUMF04H",140,0)
 D FILE^DIE("E","FDA")
"RTN","XUMF04H",141,0)
 ;
"RTN","XUMF04H",142,0)
 I $G(VISN)'="" D
"RTN","XUMF04H",143,0)
 .K FDA
"RTN","XUMF04H",144,0)
 .S IENS="?+1,"_IEN_","
"RTN","XUMF04H",145,0)
 .S FDA(4.014,IENS,.01)="VISN"
"RTN","XUMF04H",146,0)
 .S FDA(4.014,IENS,1)=VISN
"RTN","XUMF04H",147,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF04H",148,0)
 ;
"RTN","XUMF04H",149,0)
 I $G(PARENT)'="" D
"RTN","XUMF04H",150,0)
 .K FDA
"RTN","XUMF04H",151,0)
 .S IENS="?+2,"_IEN_","
"RTN","XUMF04H",152,0)
 .S FDA(4.014,IENS,.01)="PARENT FACILITY"
"RTN","XUMF04H",153,0)
 .S FDA(4.014,IENS,1)=PARENT
"RTN","XUMF04H",154,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF04H",155,0)
 ;
"RTN","XUMF04H",156,0)
 I $G(NPIDT)'="",$G(^DIC(4,IEN,"NPI"))'=NPI D
"RTN","XUMF04H",157,0)
 .S IENS="?+1,"_IEN_","
"RTN","XUMF04H",158,0)
 .S FDA(4.042,IENS,.01)=NPIDT
"RTN","XUMF04H",159,0)
 .S FDA(4.042,IENS,.02)=NPISTAT
"RTN","XUMF04H",160,0)
 .S FDA(4.042,IENS,.03)=NPI
"RTN","XUMF04H",161,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF04H",162,0)
 ;
"RTN","XUMF04H",163,0)
 I $G(TAX)'="",$P($$TAXORG^XUSTAX(IEN),U)'=TAX D
"RTN","XUMF04H",164,0)
 .K FDA,ROOT,IDX
"RTN","XUMF04H",165,0)
 .S IENS="?+1,"_IEN_","
"RTN","XUMF04H",166,0)
 .S FDA(4.043,IENS,.01)=TAX
"RTN","XUMF04H",167,0)
 .S FDA(4.043,IENS,.02)=TAXPC
"RTN","XUMF04H",168,0)
 .S FDA(4.043,IENS,.03)=TAXSTAT
"RTN","XUMF04H",169,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF04H",170,0)
 ;
"RTN","XUMF04H",171,0)
 I $G(CLIA)'="" D
"RTN","XUMF04H",172,0)
 .S IENS="?+2,"_IEN_","
"RTN","XUMF04H",173,0)
 .K FDA
"RTN","XUMF04H",174,0)
 .S FDA(4.9999,IENS,.01)="CLIA"
"RTN","XUMF04H",175,0)
 .S FDA(4.9999,IENS,.02)=CLIA
"RTN","XUMF04H",176,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF04H",177,0)
 ;
"RTN","XUMF04H",178,0)
 I $G(MAMMO)'="" D
"RTN","XUMF04H",179,0)
 .S IENS="?+2,"_IEN_","
"RTN","XUMF04H",180,0)
 .K FDA
"RTN","XUMF04H",181,0)
 .S FDA(4.9999,IENS,.01)="MAMMO"
"RTN","XUMF04H",182,0)
 .S FDA(4.9999,IENS,.02)=MAMMO
"RTN","XUMF04H",183,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF04H",184,0)
 ;
"RTN","XUMF04H",185,0)
 I $G(DMIS)'="" D
"RTN","XUMF04H",186,0)
 .S IENS="?+2,"_IEN_","
"RTN","XUMF04H",187,0)
 .K FDA
"RTN","XUMF04H",188,0)
 .S FDA(4.9999,IENS,.01)="DMIS"
"RTN","XUMF04H",189,0)
 .S FDA(4.9999,IENS,.02)=DMIS
"RTN","XUMF04H",190,0)
 .D UPDATE^DIE("E","FDA")
"RTN","XUMF04H",191,0)
 ;
"RTN","XUMF04H",192,0)
 Q
"RTN","XUMF04H",193,0)
 ;
"RTN","XUMF04H",194,0)
REPLY ; -- master file response
"RTN","XUMF04H",195,0)
 ;
"RTN","XUMF04H",196,0)
 Q:HL("MTN")="MFR"
"RTN","XUMF04H",197,0)
 Q:HL("MTN")="MFK"
"RTN","XUMF04H",198,0)
 Q:HL("MTN")="ACK"
"RTN","XUMF04H",199,0)
 ;
"RTN","XUMF04H",200,0)
 N X
"RTN","XUMF04H",201,0)
 S X="MSA"_HLFS_$S(ERROR:"AE",1:"AA")_HLFS_HL("MID")_HLFS_$P(ERROR,U,2)
"RTN","XUMF04H",202,0)
 S ^TMP("HLA",$J,1)=X
"RTN","XUMF04H",203,0)
 ;
"RTN","XUMF04H",204,0)
 S HLP("PRIORITY")="I"
"RTN","XUMF04H",205,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.HLRESLT)
"RTN","XUMF04H",206,0)
 ;
"RTN","XUMF04H",207,0)
 ; check for error
"RTN","XUMF04H",208,0)
 I ($P($G(HLRESLT),U,3)'="") D  Q
"RTN","XUMF04H",209,0)
 .S ERROR=1_U_$P(HLRESLT,HLFS,3)_U_$P(HLRESLT,HLFS,2)_U_$P(HLRESLT,U)
"RTN","XUMF04H",210,0)
 ;
"RTN","XUMF04H",211,0)
 ; successful call, message ID returned
"RTN","XUMF04H",212,0)
 S ERROR="0^"_$P($G(HLRESLT),U,1)
"RTN","XUMF04H",213,0)
 ;
"RTN","XUMF04H",214,0)
 Q
"RTN","XUMF04H",215,0)
 ;
"RTN","XUMF04H",216,0)
EXIT ; -- cleanup, and quit
"RTN","XUMF04H",217,0)
 ;
"RTN","XUMF04H",218,0)
 Q
"RTN","XUMF04H",219,0)
 ;
"RTN","XUMF04P")
0^^B14327792^n/a
"RTN","XUMF04P",1,0)
XUMF04P ;BP/RAM - INSTITUTION CLEANUP ;06/28/00
"RTN","XUMF04P",2,0)
 ;;8.0;KERNEL;**549**;Jul 10, 1995;Build 9
"RTN","XUMF04P",3,0)
 ;
"RTN","XUMF04P",4,0)
 ;
"RTN","XUMF04P",5,0)
 Q
"RTN","XUMF04P",6,0)
 ;
"RTN","XUMF04P",7,0)
MAIN ; -- post init entry point
"RTN","XUMF04P",8,0)
 ;
"RTN","XUMF04P",9,0)
 Q:$$KSP^XUPARAM("INST")=12000
"RTN","XUMF04P",10,0)
 Q:$P($$PARAM^HLCS2,U,3)="T"
"RTN","XUMF04P",11,0)
 ;
"RTN","XUMF04P",12,0)
 M ^TMP("XUMF 04",$$NOW^XLFDT,$J,4)=^DIC(4)
"RTN","XUMF04P",13,0)
 ;
"RTN","XUMF04P",14,0)
 S XUMF=1
"RTN","XUMF04P",15,0)
 ;
"RTN","XUMF04P",16,0)
 D P101,PHARM,LP1,LP2,NPI,TAX,EN^XUMF04Q,BK
"RTN","XUMF04P",17,0)
 ;
"RTN","XUMF04P",18,0)
 Q
"RTN","XUMF04P",19,0)
 ;
"RTN","XUMF04P",20,0)
KT ; -- kill temp node / file backup
"RTN","XUMF04P",21,0)
 ;
"RTN","XUMF04P",22,0)
 K ^TMP("XUMF 04")
"RTN","XUMF04P",23,0)
 ;
"RTN","XUMF04P",24,0)
 Q
"RTN","XUMF04P",25,0)
 ;
"RTN","XUMF04P",26,0)
BK ; -- background job to kill temp node in 30 days
"RTN","XUMF04P",27,0)
 ;
"RTN","XUMF04P",28,0)
 N ZTRTN,ZTDESC,ZTDTH
"RTN","XUMF04P",29,0)
 ;
"RTN","XUMF04P",30,0)
 S ZTRTN="KT^XUMF04P"
"RTN","XUMF04P",31,0)
 S ZTDESC="XUMF kill temp backup of file 4 - patch xu549"
"RTN","XUMF04P",32,0)
 S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,30,0,0,0)
"RTN","XUMF04P",33,0)
 S ZTIO=""
"RTN","XUMF04P",34,0)
 ;
"RTN","XUMF04P",35,0)
 D ^%ZTLOAD
"RTN","XUMF04P",36,0)
 ;
"RTN","XUMF04P",37,0)
 Q
"RTN","XUMF04P",38,0)
 ;
"RTN","XUMF04P",39,0)
P101 ; -- add subscriber protocols to event protocols
"RTN","XUMF04P",40,0)
 ;
"RTN","XUMF04P",41,0)
 N IEN,FDA,IENS
"RTN","XUMF04P",42,0)
 ;
"RTN","XUMF04P",43,0)
 ; mfp
"RTN","XUMF04P",44,0)
 K FDA
"RTN","XUMF04P",45,0)
 S IEN=$$FIND1^DIC(101,,"B","XUMF 04 MFQ")
"RTN","XUMF04P",46,0)
 S IENS=IEN_","
"RTN","XUMF04P",47,0)
 S FDA(101.0775,"?+1,"_IENS,.01)="XUMF 04 MFR"
"RTN","XUMF04P",48,0)
 D UPDATE^DIE("E","FDA","IENS")
"RTN","XUMF04P",49,0)
 ;
"RTN","XUMF04P",50,0)
 ; mfq
"RTN","XUMF04P",51,0)
 K FDA
"RTN","XUMF04P",52,0)
 S IEN=$$FIND1^DIC(101,,"B","XUMF 04 MFN")
"RTN","XUMF04P",53,0)
 S IENS=IEN_","
"RTN","XUMF04P",54,0)
 S FDA(101.0775,"?+1,"_IENS,.01)="XUMF 04 MFK"
"RTN","XUMF04P",55,0)
 D UPDATE^DIE("E","FDA","IENS")
"RTN","XUMF04P",56,0)
 ;
"RTN","XUMF04P",57,0)
 Q
"RTN","XUMF04P",58,0)
 ;
"RTN","XUMF04P",59,0)
LP1 ; -- loop file
"RTN","XUMF04P",60,0)
 ;
"RTN","XUMF04P",61,0)
 W !!!,"CHECKING IDENTIFIER MULTIPLE",!!!
"RTN","XUMF04P",62,0)
 ;
"RTN","XUMF04P",63,0)
 N IEN,STA,IEN,DA
"RTN","XUMF04P",64,0)
 ;
"RTN","XUMF04P",65,0)
 S STA="" F  S STA=$O(^DIC(4,"XUMFIDX","VASTANUM",STA)) Q:STA=""  D
"RTN","XUMF04P",66,0)
 . S IEN=$O(^DIC(4,"XUMFIDX","VASTANUM",STA,0)) Q:'IEN
"RTN","XUMF04P",67,0)
 . S DA=$O(^DIC(4,"XUMFIDX","VASTANUM",STA,IEN,0)) Q:'DA
"RTN","XUMF04P",68,0)
 . D CLN
"RTN","XUMF04P",69,0)
 ;
"RTN","XUMF04P",70,0)
 Q
"RTN","XUMF04P",71,0)
 ;
"RTN","XUMF04P",72,0)
LP2 ; -- loop file
"RTN","XUMF04P",73,0)
 ;
"RTN","XUMF04P",74,0)
 N IEN,NPI,IEN,DA
"RTN","XUMF04P",75,0)
 ;
"RTN","XUMF04P",76,0)
 S NPI="" F  S NPI=$O(^DIC(4,"XUMFIDX","NPI",NPI)) Q:NPI=""  D
"RTN","XUMF04P",77,0)
 . S IEN=$O(^DIC(4,"XUMFIDX","NPI",NPI,0)) Q:'IEN
"RTN","XUMF04P",78,0)
 . S DA=$O(^DIC(4,"XUMFIDX","NPI",NPI,IEN,0)) Q:'DA
"RTN","XUMF04P",79,0)
 . D CLN
"RTN","XUMF04P",80,0)
 ;
"RTN","XUMF04P",81,0)
 Q
"RTN","XUMF04P",82,0)
 ;
"RTN","XUMF04P",83,0)
CLN ; -- clean up id mult
"RTN","XUMF04P",84,0)
 ;
"RTN","XUMF04P",85,0)
 N IENS,ROOT,DIK,DIC
"RTN","XUMF04P",86,0)
 ;
"RTN","XUMF04P",87,0)
 S IENS=IEN_","
"RTN","XUMF04P",88,0)
 ;
"RTN","XUMF04P",89,0)
 S ROOT=$$ROOT^DILFD(4.9999,","_IENS,1)
"RTN","XUMF04P",90,0)
 S DA(1)=+IENS,DIK=$P(ROOT,")")_"," D ^DIK
"RTN","XUMF04P",91,0)
 ;
"RTN","XUMF04P",92,0)
 Q
"RTN","XUMF04P",93,0)
 ;
"RTN","XUMF04P",94,0)
NPI ; -- clean npi
"RTN","XUMF04P",95,0)
 ;
"RTN","XUMF04P",96,0)
 N IEN,NPI,IEN,ROOT,IENS
"RTN","XUMF04P",97,0)
 ;
"RTN","XUMF04P",98,0)
 S IEN=0 F  S IEN=$O(^DIC(4,IEN)) Q:'IEN  D
"RTN","XUMF04P",99,0)
 . S NPI=$G(^DIC(4,IEN,"NPI")) Q:'NPI
"RTN","XUMF04P",100,0)
 . S IDX=0 F  S IDX=$O(^DIC(4,IEN,"NPISTATUS",IDX)) Q:'IDX  D
"RTN","XUMF04P",101,0)
 .. Q:$P(^DIC(4,IEN,"NPISTATUS",IDX,0),U,3)=NPI
"RTN","XUMF04P",102,0)
 .. S IENS=IEN_",",ROOT=$$ROOT^DILFD(4.042,","_IENS,1)
"RTN","XUMF04P",103,0)
 .. N DA,DIK,DIC S DA(1)=+IENS,DA=IDX,DIK=$P(ROOT,")")_"," D ^DIK
"RTN","XUMF04P",104,0)
 ;
"RTN","XUMF04P",105,0)
 Q
"RTN","XUMF04P",106,0)
 ;
"RTN","XUMF04P",107,0)
PHARM ; REMOVE DUPLICATE PHARM
"RTN","XUMF04P",108,0)
 ;
"RTN","XUMF04P",109,0)
 W !!!,"CLEANING UP DUPLICATE PHARMACY ENTRIES",!!!
"RTN","XUMF04P",110,0)
 ;
"RTN","XUMF04P",111,0)
 N NAME,IEN,IENS,FDA,XUMF
"RTN","XUMF04P",112,0)
 ;
"RTN","XUMF04P",113,0)
 S NAME=""
"RTN","XUMF04P",114,0)
 F  S NAME=$O(^DIC(4,"B",NAME)) Q:NAME=""  Q:$E(NAME,1,2)="ZZ"  D
"RTN","XUMF04P",115,0)
 .Q:NAME'[" PHARM"
"RTN","XUMF04P",116,0)
 .S IEN=0 F  S IEN=$O(^DIC(4,"B",NAME,IEN)) Q:'IEN  D
"RTN","XUMF04P",117,0)
 ..Q:+$G(^DIC(4,IEN,"NPI"))
"RTN","XUMF04P",118,0)
 ..Q:+$G(^DIC(4,IEN,99))
"RTN","XUMF04P",119,0)
 ..Q:$P($G(^DIC(4,IEN,0)),U,11)="L"
"RTN","XUMF04P",120,0)
 ..S XUMF=1
"RTN","XUMF04P",121,0)
 ..S IENS=IEN_","
"RTN","XUMF04P",122,0)
 ..K FDA
"RTN","XUMF04P",123,0)
 ..S FDA(4,IENS,.01)=$E("ZZ DUP "_NAME,1,30)
"RTN","XUMF04P",124,0)
 ..S FDA(4,IENS,101)="INACTIVE"
"RTN","XUMF04P",125,0)
 ..D FILE^DIE("E","FDA")
"RTN","XUMF04P",126,0)
 ;
"RTN","XUMF04P",127,0)
 Q
"RTN","XUMF04P",128,0)
 ;
"RTN","XUMF04P",129,0)
TAX ;
"RTN","XUMF04P",130,0)
 ;
"RTN","XUMF04P",131,0)
 S IEN=0 F  S IEN=$O(^DIC(4,IEN)) Q:'IEN  D
"RTN","XUMF04P",132,0)
 .Q:'$D(^DIC(4,IEN,"TAXONOMY"))
"RTN","XUMF04P",133,0)
 .N ROOT,IDX,IENS
"RTN","XUMF04P",134,0)
 .S IENS=IEN_",",ROOT=$$ROOT^DILFD(4.043,","_IENS,1)
"RTN","XUMF04P",135,0)
 .S IDX=$O(@ROOT@(0)) Q:'IDX
"RTN","XUMF04P",136,0)
 .F  S IDX=$O(@ROOT@(IDX)) Q:'IDX  D
"RTN","XUMF04P",137,0)
 ..D
"RTN","XUMF04P",138,0)
 ...N DA,DIK,DIC S DA(1)=+IENS,DA=IDX,DIK=$P(ROOT,")")_"," D ^DIK
"RTN","XUMF04P",139,0)
 ;
"RTN","XUMF04P",140,0)
 Q
"RTN","XUMF04P",141,0)
 ;
"RTN","XUMF04P",142,0)
EXIT ; -- cleanup, and quit
"RTN","XUMF04P",143,0)
 ;
"RTN","XUMF04P",144,0)
 Q
"RTN","XUMF04P",145,0)
 ;
"RTN","XUMF04Q")
0^5^B8242499^n/a
"RTN","XUMF04Q",1,0)
XUMF04Q ;BP/RAM - INSTITUTION QUERY ;06/28/00
"RTN","XUMF04Q",2,0)
 ;;8.0;KERNEL;**549**;Jul 10, 1995;Build 9
"RTN","XUMF04Q",3,0)
 ;
"RTN","XUMF04Q",4,0)
 Q
"RTN","XUMF04Q",5,0)
 ;
"RTN","XUMF04Q",6,0)
EN ; -- QUERY and PROCESS RESPONSE
"RTN","XUMF04Q",7,0)
 ;
"RTN","XUMF04Q",8,0)
 Q:$$KSP^XUPARAM("INST")=12000
"RTN","XUMF04Q",9,0)
 Q:$P($$PARAM^HLCS2,U,3)="T"
"RTN","XUMF04Q",10,0)
 ;
"RTN","XUMF04Q",11,0)
 N XUMFCD
"RTN","XUMF04Q",12,0)
 ;
"RTN","XUMF04Q",13,0)
 M ^TMP("XUMF 04",$$NOW^XLFDT,$J,4)=^DIC(4)
"RTN","XUMF04Q",14,0)
 ;
"RTN","XUMF04Q",15,0)
 W !!!,"GET FACILITY TYPE",!!!
"RTN","XUMF04Q",16,0)
 ; load facility type
"RTN","XUMF04Q",17,0)
 D LOAD^XUMF(4.1)
"RTN","XUMF04Q",18,0)
 ;
"RTN","XUMF04Q",19,0)
 W !!!,"GET INSTITUTION BY STATION NUMBER - PLEASE WAIT",!!!
"RTN","XUMF04Q",20,0)
 ; load va station number
"RTN","XUMF04Q",21,0)
 D MAIN^XUMF04Q
"RTN","XUMF04Q",22,0)
 W !!!,"PROCESS STATION NUMBER",!!!
"RTN","XUMF04Q",23,0)
 D MAIN^XUMF04H
"RTN","XUMF04Q",24,0)
 ;
"RTN","XUMF04Q",25,0)
 W !!!,"GET INSTITUTUION BY NPI",!!!
"RTN","XUMF04Q",26,0)
 ; load NPI
"RTN","XUMF04Q",27,0)
 S XUMFCD="NPI"
"RTN","XUMF04Q",28,0)
 D MAIN^XUMF04Q
"RTN","XUMF04Q",29,0)
 W !!!,"PROCESS NPI",!!!
"RTN","XUMF04Q",30,0)
 D MAIN^XUMF04H
"RTN","XUMF04Q",31,0)
 W !!!,"DONE",!!!
"RTN","XUMF04Q",32,0)
 ;
"RTN","XUMF04Q",33,0)
 Q
"RTN","XUMF04Q",34,0)
 ;
"RTN","XUMF04Q",35,0)
BG ; -- background job
"RTN","XUMF04Q",36,0)
 ;
"RTN","XUMF04Q",37,0)
 N ZTRTN,ZTDESC,ZTDTH
"RTN","XUMF04Q",38,0)
 ;
"RTN","XUMF04Q",39,0)
 S ZTRTN="EN^XUMF04Q"
"RTN","XUMF04Q",40,0)
 S ZTDESC="XUMF load all national Institution data"
"RTN","XUMF04Q",41,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","XUMF04Q",42,0)
 S ZTIO=""
"RTN","XUMF04Q",43,0)
 ;
"RTN","XUMF04Q",44,0)
 D ^%ZTLOAD
"RTN","XUMF04Q",45,0)
 ;
"RTN","XUMF04Q",46,0)
 Q
"RTN","XUMF04Q",47,0)
 ;
"RTN","XUMF04Q",48,0)
MAIN ; -- QUERY MESSAGE
"RTN","XUMF04Q",49,0)
 ;
"RTN","XUMF04Q",50,0)
 N CNT,ERR,I,X,HLFS,HLCS,ERROR,HLRESLTA,IFN,IEN,TYPE
"RTN","XUMF04Q",51,0)
 N VALUE,HLSCS,PROTOCOL,TEST
"RTN","XUMF04Q",52,0)
 ;
"RTN","XUMF04Q",53,0)
 D INIT,BUILD,SEND,EXIT
"RTN","XUMF04Q",54,0)
 ;
"RTN","XUMF04Q",55,0)
 Q
"RTN","XUMF04Q",56,0)
 ;
"RTN","XUMF04Q",57,0)
INIT ; -- initialize
"RTN","XUMF04Q",58,0)
 ;
"RTN","XUMF04Q",59,0)
 K ^TMP("HLS",$J)
"RTN","XUMF04Q",60,0)
 ;
"RTN","XUMF04Q",61,0)
 K HL,HLCS,HLDOM,HLECH,HLFS,HLINST,HLINSTN,HLL,HLMTIEN,HLNEXT
"RTN","XUMF04Q",62,0)
 K HLNODE,HLP,HLPARAM,HLPROD,HLQ,HLQUIT,HLRESLT,HLSCS
"RTN","XUMF04Q",63,0)
 ;
"RTN","XUMF04Q",64,0)
 S PROTOCOL=$O(^ORD(101,"B","XUMF 04 MFQ",0))
"RTN","XUMF04Q",65,0)
 D INIT^HLFNC2(PROTOCOL,.HL)
"RTN","XUMF04Q",66,0)
 S TEST=$S($P($$PARAM^HLCS2,U,3)="T":1,1:0)
"RTN","XUMF04Q",67,0)
 S HLL("LINKS",1)="XUMF 04 MFR^XUMF "_$S('TEST:"FORUM",1:"TEST")
"RTN","XUMF04Q",68,0)
 ;
"RTN","XUMF04Q",69,0)
 S ERROR=0,CNT=1
"RTN","XUMF04Q",70,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMF04Q",71,0)
 ;
"RTN","XUMF04Q",72,0)
 Q
"RTN","XUMF04Q",73,0)
 ;
"RTN","XUMF04Q",74,0)
BUILD ; -- build message
"RTN","XUMF04Q",75,0)
 ;
"RTN","XUMF04Q",76,0)
 D QRD
"RTN","XUMF04Q",77,0)
 ;
"RTN","XUMF04Q",78,0)
 Q
"RTN","XUMF04Q",79,0)
 ;
"RTN","XUMF04Q",80,0)
MSA ; -- MSA segment
"RTN","XUMF04Q",81,0)
 ;
"RTN","XUMF04Q",82,0)
 S ^TMP("HLS",$J,CNT)=$$MSA^XUMF04(ERROR,HLFS,.HL)
"RTN","XUMF04Q",83,0)
 S CNT=CNT+1
"RTN","XUMF04Q",84,0)
 ;
"RTN","XUMF04Q",85,0)
 Q
"RTN","XUMF04Q",86,0)
 ;
"RTN","XUMF04Q",87,0)
QRD ; -- QRD segment
"RTN","XUMF04Q",88,0)
 ;
"RTN","XUMF04Q",89,0)
 S ^TMP("HLS",$J,CNT)=$$QRD^XUMF04(HLFS,$G(XUMFCD))
"RTN","XUMF04Q",90,0)
 S CNT=CNT+1
"RTN","XUMF04Q",91,0)
 ;
"RTN","XUMF04Q",92,0)
 Q
"RTN","XUMF04Q",93,0)
 ;
"RTN","XUMF04Q",94,0)
 ;
"RTN","XUMF04Q",95,0)
 ;
"RTN","XUMF04Q",96,0)
SEND ; -- send HL7 message
"RTN","XUMF04Q",97,0)
 ;
"RTN","XUMF04Q",98,0)
 S HLP("PRIORITY")="I"
"RTN","XUMF04Q",99,0)
 ;
"RTN","XUMF04Q",100,0)
 D DIRECT^HLMA(PROTOCOL,"GM",1,.HLRESLT,"",.HLP)
"RTN","XUMF04Q",101,0)
 ;
"RTN","XUMF04Q",102,0)
 ; check for error
"RTN","XUMF04Q",103,0)
 I ($P($G(HLRESLT),U,3)'="") D  Q
"RTN","XUMF04Q",104,0)
 .S ERROR=1_U_$P(HLRESLT,HLFS,3)_U_$P(HLRESLT,HLFS,2)_U_$P(HLRESLT,U)
"RTN","XUMF04Q",105,0)
 ;
"RTN","XUMF04Q",106,0)
 ; successful call, message ID returned
"RTN","XUMF04Q",107,0)
 S ERROR="0^"_$P($G(HLRESLT),U,1)
"RTN","XUMF04Q",108,0)
 ;
"RTN","XUMF04Q",109,0)
 Q
"RTN","XUMF04Q",110,0)
 ;
"RTN","XUMF04Q",111,0)
EXIT ; -- exit
"RTN","XUMF04Q",112,0)
 ;
"RTN","XUMF04Q",113,0)
 D CLEAN^DILF
"RTN","XUMF04Q",114,0)
 ;
"RTN","XUMF04Q",115,0)
 K ^TMP("HLS",$J)
"RTN","XUMF04Q",116,0)
 ;
"RTN","XUMF04Q",117,0)
 Q
"RTN","XUMF04Q",118,0)
 ;
"RTN","XUMF04Q",119,0)
DMIS ; - load DMIS
"RTN","XUMF04Q",120,0)
 ;
"RTN","XUMF04Q",121,0)
 Q:$$KSP^XUPARAM("INST")=12000
"RTN","XUMF04Q",122,0)
 Q:$P($$PARAM^HLCS2,U,3)="T"
"RTN","XUMF04Q",123,0)
 ;
"RTN","XUMF04Q",124,0)
 N XUMFCD
"RTN","XUMF04Q",125,0)
 S XUMFCD="DMIS"
"RTN","XUMF04Q",126,0)
 D MAIN^XUMF04Q
"RTN","XUMF04Q",127,0)
 D MAIN^XUMF04H
"RTN","XUMF04Q",128,0)
 ;
"RTN","XUMF04Q",129,0)
 Q
"RTN","XUMF04Q",130,0)
 ;
"VER")
8.0^22.0
"^DD",4,4,200,0)
BILLING FACILITY NAME^FX^^99;2^K:$L(X)>80!($L(X)<3) X K:($P($G(^DIC(4,+$G(DA),0)),U,11)="N")&'$G(XUMF) X
"^DD",4,4,200,3)
Answer must be 3-80 characters in length.  This field is centrally maintained and supported by the MFS mechanism.  Do not edit.
"^DD",4,4,200,21,0)
^^8^8^3100802^
"^DD",4,4,200,21,1,0)
This field is the billing facility name populated with the
"^DD",4,4,200,21,2,0)
GOLD STANDARD NAME provided by the CBO and required for
"^DD",4,4,200,21,3,0)
pharmacies, CBOC's, VAMC's, etc - Anything that could be identified 
"^DD",4,4,200,21,4,0)
as a Billing Facility (Billing Provider) for billing in VistA.
"^DD",4,4,200,21,5,0)
 
"^DD",4,4,200,21,6,0)
This new field is not editable locally (same as the .01 and 100 
"^DD",4,4,200,21,7,0)
fields).  Updates would be managed through Forum and the Master File 
"^DD",4,4,200,21,8,0)
Update mechanisms only.  
"^DD",4,4,200,"DT")
3100802
"BLD",6431,6)
^443
**END**
**END**
