Released XU*8*559 SEQ #488
Extracted from mail message
**KIDS**:XU*8.0*559^

**INSTALL NAME**
XU*8.0*559
"BLD",1351,0)
XU*8.0*559^KERNEL^0^3110419^y
"BLD",1351,1,0)
^^2^2^3110223^^
"BLD",1351,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"BLD",1351,1,2,0)

"BLD",1351,4,0)
^9.64PA^^
"BLD",1351,6.3)
4
"BLD",1351,"KRN",0)
^9.67PA^9002226^21
"BLD",1351,"KRN",.4,0)
.4
"BLD",1351,"KRN",.401,0)
.401
"BLD",1351,"KRN",.402,0)
.402
"BLD",1351,"KRN",.403,0)
.403
"BLD",1351,"KRN",.5,0)
.5
"BLD",1351,"KRN",.84,0)
.84
"BLD",1351,"KRN",3.6,0)
3.6
"BLD",1351,"KRN",3.8,0)
3.8
"BLD",1351,"KRN",9.2,0)
9.2
"BLD",1351,"KRN",9.8,0)
9.8
"BLD",1351,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",1351,"KRN",9.8,"NM",1,0)
XPDCOMF^^0^B110969193
"BLD",1351,"KRN",9.8,"NM",2,0)
XPDCOMG^^0^B8379375
"BLD",1351,"KRN",9.8,"NM",3,0)
XPDUTL^^0^B24049764
"BLD",1351,"KRN",9.8,"NM",4,0)
XPDTC^^0^B47613677
"BLD",1351,"KRN",9.8,"NM",5,0)
XPDIJ1^^0^B30480094
"BLD",1351,"KRN",9.8,"NM","B","XPDCOMF",1)

"BLD",1351,"KRN",9.8,"NM","B","XPDCOMG",2)

"BLD",1351,"KRN",9.8,"NM","B","XPDIJ1",5)

"BLD",1351,"KRN",9.8,"NM","B","XPDTC",4)

"BLD",1351,"KRN",9.8,"NM","B","XPDUTL",3)

"BLD",1351,"KRN",19,0)
19
"BLD",1351,"KRN",19.1,0)
19.1
"BLD",1351,"KRN",101,0)
101
"BLD",1351,"KRN",409.61,0)
409.61
"BLD",1351,"KRN",771,0)
771
"BLD",1351,"KRN",779.2,0)
779.2
"BLD",1351,"KRN",870,0)
870
"BLD",1351,"KRN",8989.51,0)
8989.51
"BLD",1351,"KRN",8989.52,0)
8989.52
"BLD",1351,"KRN",8994,0)
8994
"BLD",1351,"KRN",9002226,0)
9002226
"BLD",1351,"KRN","B",.4,.4)

"BLD",1351,"KRN","B",.401,.401)

"BLD",1351,"KRN","B",.402,.402)

"BLD",1351,"KRN","B",.403,.403)

"BLD",1351,"KRN","B",.5,.5)

"BLD",1351,"KRN","B",.84,.84)

"BLD",1351,"KRN","B",3.6,3.6)

"BLD",1351,"KRN","B",3.8,3.8)

"BLD",1351,"KRN","B",9.2,9.2)

"BLD",1351,"KRN","B",9.8,9.8)

"BLD",1351,"KRN","B",19,19)

"BLD",1351,"KRN","B",19.1,19.1)

"BLD",1351,"KRN","B",101,101)

"BLD",1351,"KRN","B",409.61,409.61)

"BLD",1351,"KRN","B",771,771)

"BLD",1351,"KRN","B",779.2,779.2)

"BLD",1351,"KRN","B",870,870)

"BLD",1351,"KRN","B",8989.51,8989.51)

"BLD",1351,"KRN","B",8989.52,8989.52)

"BLD",1351,"KRN","B",8994,8994)

"BLD",1351,"KRN","B",9002226,9002226)

"BLD",1351,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1351,"QUES",0)
^9.62^^
"BLD",1351,"REQB",0)
^9.611^3^3
"BLD",1351,"REQB",1,0)
XU*8.0*200^0
"BLD",1351,"REQB",2,0)
XU*8.0*517^2
"BLD",1351,"REQB",3,0)
XU*8.0*539^2
"BLD",1351,"REQB","B","XU*8.0*200",1)

"BLD",1351,"REQB","B","XU*8.0*517",2)

"BLD",1351,"REQB","B","XU*8.0*539",3)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^200^1
"PKG",3,20,200,0)
200^^XDRM200N
"PKG",3,20,200,1)

"PKG",3,20,"B",200,200)

"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
559^3110419
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3110419
"PKG",3,22,1,"PAH",1,1,1,0)
Please see the patch description on FORUM, in the National Patch Module.
"PKG",3,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","XPDCOMF")
0^1^B110969193^B109672448
"RTN","XPDCOMF",1,0)
XPDCOMF ;SFISC/GFT/MSC - COMPARE FILES ;08/14/2008
"RTN","XPDCOMF",2,0)
 ;;8.0;KERNEL;**506,539,559**;Jul 10, 1995;Build 4
"RTN","XPDCOMF",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDCOMF",4,0)
 ;DI1 & DI2 are left & right roots
"RTN","XPDCOMF",5,0)
 ;DIFLAG[1 -->compare files   [2-->compare entries   ["L" --> IGNORE EXTRA ENTRIES ON RIGHT SIDE
"RTN","XPDCOMF",6,0)
 ;DITCPT is array of TITLES, called by reference
"RTN","XPDCOMF",7,0)
EN(DI1,DI2,DIDD,DIFLAG,DITCPT) ;
"RTN","XPDCOMF",8,0)
N I '$D(@DI1),'$D(@DI2) Q
"RTN","XPDCOMF",9,0)
 N I,DIR,DID,W,DIL,DIN1,DIN2,DIV1,DIV2,DIGL,DIDDN,DIO,DIV,DIT,DIOX,DITM,DIN,D1,D2
"RTN","XPDCOMF",10,0)
 K DIRUT
"RTN","XPDCOMF",11,0)
 S DIL=+DIFLAG
"RTN","XPDCOMF",12,0)
 I '$D(DITCPT(1)),$G(DITCPT)'>DIL D
"RTN","XPDCOMF",13,0)
 .I DIDD S DITCPT(1)="ENTRIES IN FILE #"_DIDD_" ("_$P($G(^DIC(DIDD,0)),U)_")"
"RTN","XPDCOMF",14,0)
 .E  S X="" D  S DITCPT(1)="DATA DICTIONARY #"_$QS(DI2,1)_" ("_X_")"
"RTN","XPDCOMF",15,0)
 ..S I=$NA(@DI1,1) I '$D(@I@(0,"NM")) S I=$NA(@DI2,1)
"RTN","XPDCOMF",16,0)
 ..F  S X=X_$O(@I@(0,"NM",0)) Q:'$D(@I@(0,"UP"))  S X=X_" SUBFIELD" Q
"RTN","XPDCOMF",17,0)
 ;
"RTN","XPDCOMF",18,0)
KILL S DIV=$D(^DD(DIDD,.001)),(DIOX,U)="^",IOM=$G(IOM,80) F  S X=$O(^UTILITY("DITCP",$J,DIL)) Q:$D(DIRUT)!'X  K ^(X)
"RTN","XPDCOMF",19,0)
 I '$D(@DI1) D  Q
"RTN","XPDCOMF",20,0)
 .S D1="{Missing}" I '$D(@DI2) S D2="{Also Missing}" D WB Q
"RTN","XPDCOMF",21,0)
 .I DIL#2 S D2="" D WB Q
"RTN","XPDCOMF",22,0)
 .S DIN2=$QS(DI2,$QL(DI2)),DIGL=0,DIN=1 D RIGHT(DI2)
"RTN","XPDCOMF",23,0)
 I '$D(@DI2) D  Q
"RTN","XPDCOMF",24,0)
 .I DIL#2 S D1="",D2="{Missing}" D WB Q
"RTN","XPDCOMF",25,0)
 .S DIGL=0,DIN=1,^UTILITY("DITCP",$J,"X1",DIDD,$QS(DI1,$QL(DI1)))=$P(@DI1@(0),U) G END
"RTN","XPDCOMF",26,0)
 I 'DIDD,DIL=1 D
"RTN","XPDCOMF",27,0)
 .N P,DITCPL F X=1,2 S Y=@("DI"_X),P=1,%="" D  S P(X)=P-1
"RTN","XPDCOMF",28,0)
 ..F  S %=$O(@Y@(0,"ID",%)) Q:%=""  S A=$S(+%=%:%,1:+$P(%,"WDI",2)) S:$D(@Y@(A,0))=1 DITCPL(X,P)=$S(A:$P($G(@Y@(A,0)),U),1:%_" (Display only)"),P=P+1
"RTN","XPDCOMF",29,0)
 .I DIFLAG'["L"!$D(DITCPL(1)) D DITCPL("IDENTIFIERS")
"RTN","XPDCOMF",30,0)
 .F P="DIC","ACT" K DITCPL M DITCPL(1,1)=@DI1@(0,P),DITCPL(2,1)=@DI2@(0,P) I DIFLAG'["L"!$D(DITCPL(1)) D DITCPL($S(P="DIC":"SPECIAL LOOKUP",1:"POST-SELECTION ACTION"))
"RTN","XPDCOMF",31,0)
S I DIL#2 S DIN1=$O(@DI1@(0)) K ^UTILITY("DITCP",$J,DIL) G ENTRY  ;WE ARE AT ROOT OF A (SUB)-FILE  FIND 1ST ENTRY ON LEFT SIDE
"RTN","XPDCOMF",32,0)
 S (DIN1,DIN2)=-1
"RTN","XPDCOMF",33,0)
 I DIL'<DIFLAG D  ;Build a header for this Entry
"RTN","XPDCOMF",34,0)
 .N D,O S D=$G(DIDD(DIL),DIDD),O=$G(@DI2@(0)) I D-.1 S O=$P(O,U,1,D=.11+1) ;For INDEX, take FILE + NAME field
"RTN","XPDCOMF",35,0)
 .I 'D S O="FIELD: "_O
"RTN","XPDCOMF",36,0)
 .E  S O=$O(^DD(D,0,"NM",0))_": "_$$EXT(O,.01,2) I D=.4!(D=.401)!(D=.402) S D=$P($G(@DI1@(0)),U,4) S:D O=O_" (File "_D_")"
"RTN","XPDCOMF",37,0)
 .I DIV S O=O_" (#"_$QS(DI2,$QL(DI2))_")"
"RTN","XPDCOMF",38,0)
 .S DITCPT(DIL)=O
"RTN","XPDCOMF",39,0)
 G INPUT:DIDD=.402,SORT:DIDD=.401,PRINT:DIDD=.4
"RTN","XPDCOMF",40,0)
GET2D S DIN1=$O(@DI1@(DIN1)),DIN2=$O(@DI2@(DIN2))
"RTN","XPDCOMF",41,0)
 ;NOW CHECK IF WE'RE AT THE SAME NODE ON BOTH SIDES
"RTN","XPDCOMF",42,0)
NEXTD G END:$D(DIRUT) I DIN1=DIN2 G UP:DIN1="",D2:$D(@DI2@(DIN2))>9 S DIV2=@DI2@(DIN2),DIV1=@DI1@(DIN1) G GET2D:DIV2=DIV1 S DIN="",DIGL=DIN1 D  G GET2D
"RTN","XPDCOMF",43,0)
 .F  S DIN=$O(^DD(DIDD,"GL",DIGL,DIN)) Q:DIN=""!$D(DIRUT)  D
"RTN","XPDCOMF",44,0)
 ..I 'DIN S %X=+$E(DIN,2,9),%Y=$P(DIN,",",2),D2=$E(DIV2,%X,%Y),D1=$E(DIV1,%X,%Y)
"RTN","XPDCOMF",45,0)
 ..E  S D1=$P(DIV1,U,DIN),D2=$P(DIV2,U,DIN) I DIN=2 S:DIDD=0 D1=$TR(D1,"a"),D2=$TR(D2,"a") I DIDD=.4031 D BLOCK(D1) ;SPECIFIER OR HEADER BLOCK
"RTN","XPDCOMF",46,0)
 ..I D1'=D2 D:D1]""!(DIFLAG'["L") DIO12($$TITLE) Q
"RTN","XPDCOMF",47,0)
 .I DIGL=0,'DIDD,'$D(DIRUT) S D1=$P(DIV1,U,5,99),D2=$P(DIV2,U,5,99) Q:D1=D2  D DIO12($S($P(DIV1,U,2)["C":"COMPUTED EXPRESSION",1:"INPUT TRANSFORM")) Q
"RTN","XPDCOMF",48,0)
 D X G END:$D(DIRUT),NEXTD
"RTN","XPDCOMF",49,0)
 ;
"RTN","XPDCOMF",50,0)
D2 G ENTRY:DIL#2 S Y=$O(^DD(DIDD,"GL",DIN1,0,0)) ;DOWN TO A MULTIPLE FIELD
"RTN","XPDCOMF",51,0)
 I Y,$D(^DD(DIDD,+Y,0)) S Y=$P(^(0),U,2) I Y]"",Y-.15,$D(^DD(+Y,.01,0)) G WP:$P(^(0),U,2)["W" D DN S DIDD=+Y G S
"RTN","XPDCOMF",52,0)
 G GET2D
"RTN","XPDCOMF",53,0)
 ;
"RTN","XPDCOMF",54,0)
WP S X=$P(^(0),U),%Y=0
"RTN","XPDCOMF",55,0)
 F %X=0:0 S %X=$O(@DI1@(DIN1,%X)) Q:$D(^(+%X,0))[0  S I=^(0),%Y=$O(@DI2@(DIN2,%Y)) G WPD:$G(^(+%Y,0))'=I ;IS EVERY LINE IDENTICAL?
"RTN","XPDCOMF",56,0)
 G GET2D:'$O(@DI2@(DIN2,%Y))
"RTN","XPDCOMF",57,0)
WPD D SUBHD W !?IOM-$L(X)\2,X,"..."
"RTN","XPDCOMF",58,0)
 G GET2D
"RTN","XPDCOMF",59,0)
 ;
"RTN","XPDCOMF",60,0)
 ;^UTILITY("DITCP",$J,"X1",DIDD,DIN1) = new entry
"RTN","XPDCOMF",61,0)
 ;^UTILITY("DITCP",$J,"X2",DIDD,DIN1) = KIDS will delete
"RTN","XPDCOMF",62,0)
ENTRY S DIGL=0,DIN=1 G NEXTENT:'$D(@DI1@(+DIN1,0)) S X=$P(^(0),U)
"RTN","XPDCOMF",63,0)
 ;check if we are comparing to KIDS
"RTN","XPDCOMF",64,0)
 I $E(DI1,1,12)="^XTMP(""XPDI""" D  G NEXTENT:Y
"RTN","XPDCOMF",65,0)
 .;check KIDS action; 0=send, 3=merge. Only these send the full record
"RTN","XPDCOMF",66,0)
 .S Y=+$G(@DI1@(+DIN1,-1)) I Y=3!'Y S Y=0 Q
"RTN","XPDCOMF",67,0)
 .;delete: save & goto next entry
"RTN","XPDCOMF",68,0)
 .I Y=1 S ^UTILITY("DITCP",$J,"X2",DIDD,DIN1)=X
"RTN","XPDCOMF",69,0)
 .Q
"RTN","XPDCOMF",70,0)
 I DIDD=.11,$G(DITCPIF),DITCPIF-X G NEXTENT ;Skip INDEXes not for this DD
"RTN","XPDCOMF",71,0)
 I DIDD=.4032 D  D BLOCK(X) G NEXTENT
"RTN","XPDCOMF",72,0)
 .N V S V=$$EXT(X,.01,1) I V]"" S V=$O(@($$NS(2)_"DIST(.404,""B"",V,0)")) I V S X=V
"RTN","XPDCOMF",73,0)
 .S ^UTILITY("DITCP",$J,DIL,X)=""
"RTN","XPDCOMF",74,0)
 S DIV=$D(^DD(DIDD,.001)) G UP:DIDD=.4032!(DIDD=19.01)!(DIDD=101.01) ;for now, give up matching BLOCKs,MENUs, or ITEMs
"RTN","XPDCOMF",75,0)
 I DIDD=.1 S DIN2=+DIN1,X=@DI1@(DIN1,0) G NEW:'$D(@DI2@(DIN2,0)),NEW:^(0)'=X,OLD ;CROSS-REFERENCE matches on entire 0 node
"RTN","XPDCOMF",76,0)
BIX I $P($G(@DI2@(DIN1,0)),U)=X S DIN2=DIN1 G OLD:$$MATCH,NEW:DIV
"RTN","XPDCOMF",77,0)
 I $P(^DD(DIDD,.01,0),U,2)["P" S MSCP=$$EXT(X,.01,1) F DIN2=0:0 S DIN2=$O(@DI2@(DIN2)) G NEW:DIN2'>0  I $$EXT($P($G(^(DIN2,0)),U),2)=MSCP G OLD:$$MATCH
"RTN","XPDCOMF",78,0)
 ;if no "B" x-ref, then check entire file for match
"RTN","XPDCOMF",79,0)
 S DIN2=0 I '$D(^DD(DIDD,0,"IX","B",DIDD,.01)) F  S DIN2=$O(@DI2@(DIN2)) G NEW:DIN2'>0 I $P($G(^(DIN2,0)),U)=X G OLD:$$MATCH
"RTN","XPDCOMF",80,0)
BI S DIN2=$O(@DI2@("B",$E(X,1,30),DIN2)) I 'DIN2 S:$L(X)>30 DIN2=$O(@DI2@("B",X,DIN2)) G NEW:'DIN2
"RTN","XPDCOMF",81,0)
 I $D(@DI2@(DIN2,0)),$P(^(0),X)="" G OLD:$$MATCH ;COMPARE BY NAME
"RTN","XPDCOMF",82,0)
 G BI
"RTN","XPDCOMF",83,0)
 ;
"RTN","XPDCOMF",84,0)
NEW S ^UTILITY("DITCP",$J,"X1",DIDD,DIN1)=X ;WILL SHOW EXTRA ENTRY ON LEFT SIDE
"RTN","XPDCOMF",85,0)
NEXTENT S DIN1=$O(@DI1@(DIN1))
"RTN","XPDCOMF",86,0)
N2 I DIN1 G ENTRY
"RTN","XPDCOMF",87,0)
 I DIFLAG'["L" F DIN2=0:0 S DIN2=$O(@DI2@(DIN2)) Q:'DIN2  Q:+DIN2'=DIN2  D  Q:$D(DIRUT)  ;Print extras on right
"RTN","XPDCOMF",88,0)
 .I '$D(^UTILITY("DITCP",$J,DIL,DIN2)) D RIGHT($NA(@DI2@(DIN2)))
"RTN","XPDCOMF",89,0)
 G END:$D(DIRUT),UP
"RTN","XPDCOMF",90,0)
 ; 
"RTN","XPDCOMF",91,0)
RIGHT(X) Q:'$D(@X@(0))#2  I DIDD=.11,$G(DITCPIF),DITCPIF-^(0) Q
"RTN","XPDCOMF",92,0)
 D XTRAM($P(^(0),U,1,$S(DIDD=.1:99,1:1)),2) Q  ;If X-REF, compare entire node
"RTN","XPDCOMF",93,0)
 ;
"RTN","XPDCOMF",94,0)
 ;DID=title, X: 1=left,2=right, P=prefix to title
"RTN","XPDCOMF",95,0)
XTRAM(DID,X,P) Q:DIDD=.15  ;FORGET TRIGGERED-BY
"RTN","XPDCOMF",96,0)
 F I=DIL+(DIL#2):1 K DITCPT(I) I $O(DITCPT(I))="" Q  ;S:$G(DITCPT)>(I-1) DITCPT=I-1 B:DIDD=8994  Q
"RTN","XPDCOMF",97,0)
 I DIDD=.11 S DID="@DI"_X_"@(DIN"_X_",0)",DID=$P(@DID,U,2,3)
"RTN","XPDCOMF",98,0)
 S DIDDN=$S(DIDD:$O(^DD(DIDD,0,"NM","")),1:"FIELD")_$S(DIV:" #"_@("DIN"_X),$D(^DIC(DIDD)):"",1:" Multiple")_": ",Y=^DD(DIDD,.01,0)
"RTN","XPDCOMF",99,0)
 S:$G(P)]"" DIDDN=P_DIDDN
"RTN","XPDCOMF",100,0)
 D DIT,DIO
"RTN","XPDCOMF",101,0)
 Q
"RTN","XPDCOMF",102,0)
 ;
"RTN","XPDCOMF",103,0)
 ;
"RTN","XPDCOMF",104,0)
 ;
"RTN","XPDCOMF",105,0)
 ;
"RTN","XPDCOMF",106,0)
MATCH() I DIV,DIN1'=DIN2 Q 0 ;DO ENTRIES MATCH?  NOT IF NUMBERS DON'T AND IT'S NUMBER-MEANINGFUL
"RTN","XPDCOMF",107,0)
 I $D(^UTILITY("DITCP",$J,DIL,DIN2)) Q 0 ;We already matched this one
"RTN","XPDCOMF",108,0)
 I DIDD=.11 Q '$$MISMATCH(.02) ;INDEX must match on NAME
"RTN","XPDCOMF",109,0)
 I DIDD=.403 Q '$$MISMATCH(7) ;FORM must match on PRIMARY FILE
"RTN","XPDCOMF",110,0)
 I DIDD=.4!(DIDD=.401)!(DIDD=.402) Q '$$MISMATCH(4) ;TEMPLATES must match on FILE
"RTN","XPDCOMF",111,0)
 I DIDD=19 Q 1 ;OPTION matches on NAME alone
"RTN","XPDCOMF",112,0)
 S DITM=.01
"RTN","XPDCOMF",113,0)
ID S DITM=$O(^DD(DIDD,0,"ID",DITM)) I DITM="" Q 1
"RTN","XPDCOMF",114,0)
 S I=DITM S:I?1"W"1.NP I=$E(I,2,99) I $$MISMATCH(I) Q 0 ;MATCH EACH NON-NULL IDENTIFIER
"RTN","XPDCOMF",115,0)
 G ID
"RTN","XPDCOMF",116,0)
 ;
"RTN","XPDCOMF",117,0)
MISMATCH(I) K B S A=$P($G(^DD(DIDD,I,0)),U,2) I A=""!(A["P")!(A["V") Q 0 ;DON'T TRY TO MATCH POINTERS
"RTN","XPDCOMF",118,0)
 D  Q:W="" 0 S B=W Q:'$D(^DD(DIDD,I,0)) 0 D  Q:W="" 0 Q W'=B ;If two non-null values aren't equal it's a mismatch
"RTN","XPDCOMF",119,0)
 .S A=$P(^(0),U,4),%=$P(A,";",2),W=$P(A,";"),A=$S($D(B):DI2,1:DI1) I W?." " S W="" Q
"RTN","XPDCOMF",120,0)
 .I $D(@A@($S($D(B):DIN2,1:DIN1),W))[0 S W="" Q
"RTN","XPDCOMF",121,0)
 .I % S W=$P(^(W),U,%)
"RTN","XPDCOMF",122,0)
 .E  S W=$E(^(W),+$E(%,2,9),$P(%,",",2))
"RTN","XPDCOMF",123,0)
 .S:W?.E1L.E W=$$UP^DILIBF(W)
"RTN","XPDCOMF",124,0)
 ;
"RTN","XPDCOMF",125,0)
OLD S ^UTILITY("DITCP",$J,DIL,DIN2)="" ;Remember that we found DIN2 as a match
"RTN","XPDCOMF",126,0)
 D DN G S
"RTN","XPDCOMF",127,0)
 ;
"RTN","XPDCOMF",128,0)
 ;
"RTN","XPDCOMF",129,0)
DN S DIDD(DIL)=DIDD
"RTN","XPDCOMF",130,0)
 N X,%X F X=1,2 S %X=@("DIN"_X),(W,W(X,DIL))=@("DI"_X),W=$NA(@W@(%X)),@("DI"_X)=W  ;ADD A SUBSCRIPT
"RTN","XPDCOMF",131,0)
 S DIL=DIL+1 Q
"RTN","XPDCOMF",132,0)
 ;
"RTN","XPDCOMF",133,0)
UP ;
"RTN","XPDCOMF",134,0)
 G END:'$D(W(2,DIL-1))
"RTN","XPDCOMF",135,0)
 S DIN1=$O(@DI1) I DIL#2=0 S:$G(DITCPT)>DIL DITCPT=DIL D U G N2
"RTN","XPDCOMF",136,0)
 D LEFT Q:$D(DIRUT)  S DIN2=$O(@DI2),DIDD=DIDD(DIL-1)
"RTN","XPDCOMF",137,0)
 D U G NEXTD
"RTN","XPDCOMF",138,0)
U S (DIL,Y)=DIL-1,DI1=W(1,Y),DI2=W(2,Y)
"RTN","XPDCOMF",139,0)
 Q
"RTN","XPDCOMF",140,0)
 ;
"RTN","XPDCOMF",141,0)
 ;
"RTN","XPDCOMF",142,0)
2 ;
"RTN","XPDCOMF",143,0)
X G XTRA1:DIN2="",XTRA2:DIN1="" I +DIN1=DIN1 G XTRA1:+DIN2'=DIN2!(DIN2>DIN1),XTRA2
"RTN","XPDCOMF",144,0)
 G XTRA2:+DIN2=DIN2!(DIN1]DIN2)
"RTN","XPDCOMF",145,0)
XTRA1 S X=1,DIGL=DIN1
"RTN","XPDCOMF",146,0)
 D XTRA S DIN1=$O(@DI1@(DIN1)) Q
"RTN","XPDCOMF",147,0)
XTRA2 S X=2,DIGL=DIN2 D:DIFLAG'["L" XTRA S DIN2=$O(@DI2@(DIN2)) Q
"RTN","XPDCOMF",148,0)
 ;
"RTN","XPDCOMF",149,0)
XTRA S DIR="@DI"_X_"@(DIGL)" I $D(@DIR)<9 S DIN="",DIV=@DIR G GL
"RTN","XPDCOMF",150,0)
 S I=$O(^(DIGL,0)) Q:'I  S I=$O(^(I)),DIN=$O(^DD(DIDD,"GL",DIGL,0,0)) Q:$D(^DD(DIDD,+DIN,0))[0
"RTN","XPDCOMF",151,0)
 S DIDDN=$P(^(0),U)_$S($P(^DD(+$P(^(0),U,2),.01,0),U,2)["W":"...",1:" Multiple"_$E("s",I>0)),(DID,DIT)="" D DIO S DIOX=0 Q
"RTN","XPDCOMF",152,0)
 ;
"RTN","XPDCOMF",153,0)
GL S DIN=$O(^DD(DIDD,"GL",DIGL,DIN)) Q:DIN=""  S Y=$O(^(DIN,0)) G GL:'$D(^DD(DIDD,+Y,0)) S DIO=$P(^(0),U)_": "
"RTN","XPDCOMF",154,0)
 I DIN S DID=$P(DIV,U,DIN) G:DID="" GL:$P(DIV,U,DIN,999)]"",Q
"RTN","XPDCOMF",155,0)
 E  S DID=$E(DIV,+$E(DIN,2,9),$P(DIN,",",2)) Q:DID?." "
"RTN","XPDCOMF",156,0)
 S DIDDN=$$TITLE G GL:DIDDN="" S DIDDN=DIDDN_": "
"RTN","XPDCOMF",157,0)
 D DIO G GL:'$D(DIRUT)
"RTN","XPDCOMF",158,0)
END D LEFT Q:$D(DIRUT)
"RTN","XPDCOMF",159,0)
 I 'DIDD,DIFLAG#2 N DITCPIF,DIDD D  G ENTRY ;INDEXES for File #DITCPIF
"RTN","XPDCOMF",160,0)
 .S DITCPIF=$QS(DI1,1),DIDD=.11,DI1=$NA(@DI1,0)_"(""IX"")",DI2=$NA(@DI2,0)_"(""IX"")",(DIN1,DIN2)=0
"RTN","XPDCOMF",161,0)
Q Q
"RTN","XPDCOMF",162,0)
 ;
"RTN","XPDCOMF",163,0)
 ;
"RTN","XPDCOMF",164,0)
 ;
"RTN","XPDCOMF",165,0)
LEFT ;display left side; "X1" subscript, these are new records
"RTN","XPDCOMF",166,0)
 N DIN1
"RTN","XPDCOMF",167,0)
 F DIN1=0:0 S DIN1=$O(^UTILITY("DITCP",$J,"X1",DIDD,DIN1)) Q:'DIN1  D XTRAM(^(DIN1),1,"*ADD* ") K ^UTILITY("DITCP",$J,"X1",DIDD,DIN1) Q:$D(DIRUT)
"RTN","XPDCOMF",168,0)
 ;"X2" subscript, these are KIDS delete records
"RTN","XPDCOMF",169,0)
 Q:'$D(^UTILITY("DITCP",$J,"X2",DIDD))
"RTN","XPDCOMF",170,0)
 F DIN1=0:0 S DIN1=$O(^UTILITY("DITCP",$J,"X2",DIDD,DIN1)) Q:'DIN1  D XTRAM(^(DIN1),1,"*DELETE* ") K ^UTILITY("DITCP",$J,"X2",DIDD,DIN1) Q:$D(DIRUT)
"RTN","XPDCOMF",171,0)
 Q
"RTN","XPDCOMF",172,0)
 ;
"RTN","XPDCOMF",173,0)
 ;
"RTN","XPDCOMF",174,0)
TITLE() S Y=$$FLDNUM I '$D(^DD(DIDD,+Y,0)) Q "" ;decide whether this FIELD is interesting
"RTN","XPDCOMF",175,0)
 I $O(^(5,0)) Q "" ;Forget TRIGGERED FIELDS! (INTERESTING!)
"RTN","XPDCOMF",176,0)
 I DIDD=.403,Y'>5 Q ""
"RTN","XPDCOMF",177,0)
 I DIDD=19,DIGL\1=99!(Y=3.6) Q ""
"RTN","XPDCOMF",178,0)
 I 'DIDD,Y=50!(DIGL="DT")!(DIGL=8)!(DIGL=8.5)!(DIGL=9)!(Y=1.1) Q ""
"RTN","XPDCOMF",179,0)
 I 'DIDD,Y=.3,$G(DIV1)[":" Q "SET OF CODES" ;INSTEAD OF "POINTER"
"RTN","XPDCOMF",180,0)
 S Y=^DD(DIDD,+Y,0) D DIT Q $P(Y,U)
"RTN","XPDCOMF",181,0)
 ;
"RTN","XPDCOMF",182,0)
FLDNUM() I DIN]"" Q $O(^DD(DIDD,"GL",DIGL,DIN,0))
"RTN","XPDCOMF",183,0)
 Q .01
"RTN","XPDCOMF",184,0)
 ;
"RTN","XPDCOMF",185,0)
DIT ;
"RTN","XPDCOMF",186,0)
 S DIT=$P(Y,U,2),I=$P(Y,U,3) Q
"RTN","XPDCOMF",187,0)
 ;
"RTN","XPDCOMF",188,0)
EXT(X,C,MSCSIDE) I X]"" N Y,Y1 I C S C=$P($G(^DD(DIDD,C,0)),U,2),Y=X,Y1=1 D:$G(MSCSIDE)  D:Y1 S^DIQ I Y]"" Q Y ;101.41 BOMBED IN $$EXTERNAL^DIDU(DIDD,$$FLDNUM,,X)
"RTN","XPDCOMF",189,0)
 .F  Q:C'["P"  Q:'$D(@($$NS(MSCSIDE)_$P(^(0),U,3)_"0)"))  S C=$P(^(0),U,2),Y1=$D(^(+Y,0)) Q:'Y1  S Y=$P(^(0),U),C=$P($G(^DD(+C,.01,0)),U,2)
"RTN","XPDCOMF",190,0)
 Q X
"RTN","XPDCOMF",191,0)
 ;
"RTN","XPDCOMF",192,0)
NS(MSCSIDE) N N S N=@("DI"_MSCSIDE) I $E(N,2)="[" Q $E(N,1,$F(N,"]")-1) ;returns "^" OR "^[NS]"
"RTN","XPDCOMF",193,0)
 Q U
"RTN","XPDCOMF",194,0)
 ;
"RTN","XPDCOMF",195,0)
DIO ;X=1 MEANS LEFT SIDE, X=2 MEANS RIGHT SIDE
"RTN","XPDCOMF",196,0)
 ;DID=WHAT WE HAVE TO PRINT
"RTN","XPDCOMF",197,0)
 S DIOX=$Y D SUBHD Q:$D(DIRUT)  S DIO=DIDDN_$$EXT(DID,$$FLDNUM,X)
"RTN","XPDCOMF",198,0)
DIO1 ;DIO IS OUTPUT
"RTN","XPDCOMF",199,0)
 I X=1 S DIOX(1)=DIDDN D LF
"RTN","XPDCOMF",200,0)
 Q:$D(DIRUT)
"RTN","XPDCOMF",201,0)
 I X=2 D:$S(DIOX-1:1,'$D(DIOX(1)):1,1:$P(DIO,DIOX(1))]"") LF Q:$D(DIRUT)  W ?IOM\2 K DIOX(1)
"RTN","XPDCOMF",202,0)
 W !,$J("",DIL),$E(DIO,1,IOM\2-DIL-1) S DIO=$E(DIO,IOM\2-DIL,999) I $L(DIO)<$S(X=1:17,X=2:2) W DIO S DIOX=X Q  ;WRITE A LITTLE MORE THAN HALF A LINE
"RTN","XPDCOMF",203,0)
 S DIOX=0 G DIO1
"RTN","XPDCOMF",204,0)
 ;
"RTN","XPDCOMF",205,0)
 ;
"RTN","XPDCOMF",206,0)
DIO12(T) ;WRITE D1 AND D2 SIDE BY SIDE
"RTN","XPDCOMF",207,0)
 N D,V
"RTN","XPDCOMF",208,0)
 Q:D1=D2!(T="") 
"RTN","XPDCOMF",209,0)
 F D=1,2 D
"RTN","XPDCOMF",210,0)
 .S V="D"_D Q:@V=""
"RTN","XPDCOMF",211,0)
 .S @V=T_": "_$$EXT(@V,$$FLDNUM,D)
"RTN","XPDCOMF",212,0)
 Q:D1=D2  ;EXTERNAL VERSIONS MAY BE SAME
"RTN","XPDCOMF",213,0)
WB D SUBHD
"RTN","XPDCOMF",214,0)
 F  Q:D1=""&(D2="")  D LF Q:$D(DIRUT)  F D=1,2 S X="D"_D W:D=2 ?IOM\2 W $J("",DIL),$E(@X,1,IOM\2-DIL-1) S @X=$E(@X,IOM\2-DIL,999)
"RTN","XPDCOMF",215,0)
 Q
"RTN","XPDCOMF",216,0)
 ;
"RTN","XPDCOMF",217,0)
 ;
"RTN","XPDCOMF",218,0)
SUBHD ;
"RTN","XPDCOMF",219,0)
 N Y,L S Y=$O(DITCPT("")) Q:Y=""
"RTN","XPDCOMF",220,0)
 I $G(DITCPT) S L=DITCPT
"RTN","XPDCOMF",221,0)
 E  S L=Y F Y=$G(DIL):-1:Y D LF G Q:$D(DIRUT)
"RTN","XPDCOMF",222,0)
 F  Q:L>$G(DIL)!$D(DIRUT)  D LF Q:$D(DIRUT)  W:$D(DITCPT(L)) ?IOM-$L(DITCPT(L))\2,DITCPT(L) S L=L+1
"RTN","XPDCOMF",223,0)
 K DITCPT S DITCPT=L-1 Q  ;REMEMBER HOW DEEP WE WERE AT LAST OUTPUT
"RTN","XPDCOMF",224,0)
 ;
"RTN","XPDCOMF",225,0)
 ;
"RTN","XPDCOMF",226,0)
LF W ! Q:$Y+3<IOSL!$D(DIRUT)
"RTN","XPDCOMF",227,0)
 D:$E($G(IOST),1,2)="C-"
"RTN","XPDCOMF",228,0)
 .N DIR,X,Y
"RTN","XPDCOMF",229,0)
 .S DIR(0)="E" W ! D ^DIR S $Y=0
"RTN","XPDCOMF",230,0)
 I '$D(DIRUT) W @IOF
"RTN","XPDCOMF",231,0)
 Q
"RTN","XPDCOMF",232,0)
 ;
"RTN","XPDCOMF",233,0)
INPUT I $T(GET^DIETED)="" Q
"RTN","XPDCOMF",234,0)
 N DITCPL F DITCPL=1,2 D GET^DIETED($NA(DITCPL(DITCPL)),@("DI"_DITCPL))
"RTN","XPDCOMF",235,0)
 D DITCPL("EDIT FIELDS") G UP
"RTN","XPDCOMF",236,0)
 ;
"RTN","XPDCOMF",237,0)
SORT  I $T(GET^DIBTED)="" Q
"RTN","XPDCOMF",238,0)
 N DITCPL,DHD,DIBTA,DIBT0,MSCS F DITCPL=1,2 D
"RTN","XPDCOMF",239,0)
 .S DIBTA=$NA(DITCPL(DITCPL))
"RTN","XPDCOMF",240,0)
 .S DIBT0=-(DITCPL/10+$J) K ^DIBT(DIBT0) M ^DIBT(DIBT0)=@("@DI"_DITCPL),MSCS(DITCPL)=^DIBT(DIBT0,"O") ;GRAB SORT TEMPLATES INTO NEGATIVELY-NUMBERED ^DIBT NODE!
"RTN","XPDCOMF",241,0)
 .D GET^DIBTED(DIBTA) K ^DIBT(DIBT0)
"RTN","XPDCOMF",242,0)
 D DITCPL("SORT FIELDS")
"RTN","XPDCOMF",243,0)
 K DITCPL M DITCPL=MSCS D DITCPL("SEARCH SPECIFICATIONS")
"RTN","XPDCOMF",244,0)
 G UP
"RTN","XPDCOMF",245,0)
 ;
"RTN","XPDCOMF",246,0)
PRINT I $T(GET^DIPTED)'["," Q
"RTN","XPDCOMF",247,0)
 N DITCPL,DISH,DHD F DITCPL=1,2 D GET^DIPTED($NA(DITCPL(DITCPL)),@("DI"_DITCPL))
"RTN","XPDCOMF",248,0)
 D DITCPL("PRINT FIELDS") G UP
"RTN","XPDCOMF",249,0)
 ;
"RTN","XPDCOMF",250,0)
DITCPL(H) D EN^XPDCOML("DITCPL(1)","DITCPL(2)",H)
"RTN","XPDCOMF",251,0)
 Q
"RTN","XPDCOMF",252,0)
 ;
"RTN","XPDCOMF",253,0)
BLOCK(X) N D S D=DIL+(DIL#2=0)+1 N DIL S DIL=D,DIDD(DIL)=DIDD S:$G(DITCPT)>2 DITCPT=2 D E(.404,$P($G(^DIST(.404,+X,0)),U)) ;compare ScreenMan BLOCKs
"RTN","XPDCOMF",254,0)
 Q
"RTN","XPDCOMF",255,0)
E(XPDI,NAME,DIFL) N X,N,MSC,S Q:NAME=""!'XPDI
"RTN","XPDCOMF",256,0)
 S MSCF=$G(^DIC(XPDI,0,"GL")) Q:MSCF'?1"^".E  S MSCF=$E($$CREF^DILF(MSCF),2,99)
"RTN","XPDCOMF",257,0)
 F X=1,2 S N=$$NS(X)_MSCF D  S:'S S=-999 S MSC(X)=$NA(@N@(S))
"RTN","XPDCOMF",258,0)
 .F S=0:0 S S=$O(@N@("B",NAME,S)) Q:'S  Q:'$G(DIFL)  Q:XPDI<.4!(XPDI>.402)  Q:$P($G(@N@(S,0)),U,4)=DIFL  ;TEMPLATE FILE# MUST MATCH
"RTN","XPDCOMF",259,0)
 D EN(MSC(1),MSC(2),XPDI,$G(DIL,2),.DITCPT)
"RTN","XPDCOMF",260,0)
 Q
"RTN","XPDCOMG")
0^2^B8379375^B8227835
"RTN","XPDCOMG",1,0)
XPDCOMG ;SFISC/RSD - compare globals ;08/14/2008
"RTN","XPDCOMG",2,0)
 ;;8.0;KERNEL;**304,506,559**;Jul 10, 1995;Build 4
"RTN","XPDCOMG",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDCOMG",4,0)
EN D IX,FIA:'$D(DIRUT),KRN:'$D(DIRUT)
"RTN","XPDCOMG",5,0)
 Q
"RTN","XPDCOMG",6,0)
 ;
"RTN","XPDCOMG",7,0)
IX ;FileMan new style cross-references
"RTN","XPDCOMG",8,0)
 N XPDF,XPDF2,XPDFN
"RTN","XPDCOMG",9,0)
 F XPDF=0:0 S XPDF=$O(^XTMP("XPDI",XPDA,"IX",XPDF)) Q:'XPDF  F XPDF2=0:0 S XPDF2=$O(^XTMP("XPDI",XPDA,"IX",XPDF,XPDF2)) Q:'XPDF2  D
"RTN","XPDCOMG",10,0)
 .S XPDFN="" F  S XPDFN=$O(^XTMP("XPDI",XPDA,"IX",XPDF,XPDF2,XPDFN)) Q:XPDFN=""!$D(DIRUT)  D
"RTN","XPDCOMG",11,0)
 ..K ^TMP($J) M ^TMP($J,1)=^XTMP("XPDI",XPDA,"IX",XPDF,XPDF2,XPDFN)
"RTN","XPDCOMG",12,0)
 ..D DASHES,EN^XPDCOMF($NA(^TMP($J)),$NA(^DD("IX")),.11,"1L",.DITCPT)
"RTN","XPDCOMG",13,0)
 ..Q
"RTN","XPDCOMG",14,0)
 Q
"RTN","XPDCOMG",15,0)
 ;
"RTN","XPDCOMG",16,0)
FIA ;FileMan DD and Data
"RTN","XPDCOMG",17,0)
 N DIC,OLDA,XPDFIL,XPDFILO,XPDFILS,XPDS,XPDS0,XPDX,XPDX0,XPDY,XPDY1,XPDZ,XPDZ1,X,Y
"RTN","XPDCOMG",18,0)
 S XPDFIL=0
"RTN","XPDCOMG",19,0)
 F  S XPDFIL=$O(^XTMP("XPDI",XPDA,"FIA",XPDFIL)) Q:'XPDFIL!$D(DIRUT)  S X=^(XPDFIL),XPDZ1=^(XPDFIL,0),XPDFILO=^(0,1) D
"RTN","XPDCOMG",20,0)
 .I '$D(^DIC(XPDFIL)) W !!,?14," FILE # ",XPDFIL," (",X,") is NEW",! Q
"RTN","XPDCOMG",21,0)
 .S XPDZ="^XTMP(""XPDI"","_XPDA,XPDY=XPDZ_",""^DIC"","_XPDFIL_","_XPDFIL_",0",XPDX=XPDY_")"
"RTN","XPDCOMG",22,0)
 .S XPDY=XPDY_",",XPDY1="^DIC("_XPDFIL_",0",XPDS=XPDY1_")",XPDY1=XPDY1_","
"RTN","XPDCOMG",23,0)
 .I $P(XPDFILO,U)="y" D
"RTN","XPDCOMG",24,0)
 ..;W !!,XPDUL," File # ",XPDFIL," Data Dictionary "
"RTN","XPDCOMG",25,0)
 ..S XPDFILS=0 F  S XPDFILS=$O(^XTMP("XPDI",XPDA,"^DD",XPDFIL,XPDFILS)) Q:'XPDFILS  D
"RTN","XPDCOMG",26,0)
 ...S XPDY=XPDZ_",""^DD"","_XPDFIL_","_XPDFILS,XPDX=XPDY_")",XPDY=XPDY_",",XPDY1="^DD("_XPDFILS,XPDS=XPDY1_")",XPDY1=XPDY1_","
"RTN","XPDCOMG",27,0)
 ...D DASHES,EN^XPDCOMF(XPDX,XPDS,0,"1L",.DITCPT)
"RTN","XPDCOMG",28,0)
 ...Q
"RTN","XPDCOMG",29,0)
 ..Q
"RTN","XPDCOMG",30,0)
 .;check Data in file
"RTN","XPDCOMG",31,0)
 .Q:'$D(^XTMP("XPDI",XPDA,"DATA",XPDFIL))
"RTN","XPDCOMG",32,0)
 .D DASHES,EN^XPDCOMF($NA(^(XPDFIL)),$$CREF^DIQGU(^DIC(XPDFIL,0,"GL")),XPDFIL,"1L",.DITCPT)
"RTN","XPDCOMG",33,0)
 W ! Q
"RTN","XPDCOMG",34,0)
 ;
"RTN","XPDCOMG",35,0)
KRN ;Kernel Components
"RTN","XPDCOMG",36,0)
 N DEL,DIC,OLDA,ORD,X,XPDFIL,XPDFILNM,XPDI,XPDS,XPDS0,XPDX,XPDX0,XPDY,XPDY1,XPDZ,XPDZ1,Y
"RTN","XPDCOMG",37,0)
 S ORD=0
"RTN","XPDCOMG",38,0)
 F  S ORD=$O(^XTMP("XPDI",XPDA,"ORD",ORD)) Q:'ORD!$D(DIRUT)  S XPDFIL=+$O(^(ORD,0)),XPDFILNM=$G(^(XPDFIL,0)) D:XPDFIL
"RTN","XPDCOMG",39,0)
 .I $P($G(^DIC(XPDFIL,0)),U)'=XPDFILNM W !!," File "_XPDFIL_" is not "_XPDFILNM_", nothing can be installed.",! Q
"RTN","XPDCOMG",40,0)
 .D DASHES,EN^XPDCOMF($NA(^XTMP("XPDI",XPDA,"KRN",XPDFIL)),$$CREF^DIQGU(^DIC(XPDFIL,0,"GL")),XPDFIL,"1L",.DITCPT)
"RTN","XPDCOMG",41,0)
 .Q
"RTN","XPDCOMG",42,0)
 Q
"RTN","XPDCOMG",43,0)
 ;
"RTN","XPDCOMG",44,0)
DASHES K DITCPT S DITCPT(0)=XPDUL
"RTN","XPDCOMG",45,0)
 Q
"RTN","XPDCOMG",46,0)
 ;
"RTN","XPDIJ1")
0^5^B30480094^B30144798
"RTN","XPDIJ1",1,0)
XPDIJ1 ;SFISC/RSD - Cont. of Install Job ;05/11/2001  09:07
"RTN","XPDIJ1",2,0)
 ;;8.0;KERNEL;**41,68,108,200,559**;Jul 10, 1995;Build 4
"RTN","XPDIJ1",3,0)
 ;Per VHA Directive  2004-038, this routine should not be modified.
"RTN","XPDIJ1",4,0)
IN ;install XPDA
"RTN","XPDIJ1",5,0)
 ;XPDA=ien of file 9.7, XPDNM=package name
"RTN","XPDIJ1",6,0)
 Q:'$D(^XTMP("XPDI",XPDA))!'$D(^XPD(9.7,XPDA,0))
"RTN","XPDIJ1",7,0)
 ;check if already installed
"RTN","XPDIJ1",8,0)
 I $P($G(^XPD(9.7,XPDA,1)),U,3) D BMES^XPDUTL(" "_XPDNM_" Already Installed ") Q
"RTN","XPDIJ1",9,0)
 N DIFROM,XPD,XPD0,XPDBLD,XPDCHECK,XPDCP,XPDI,XPDGREF,XPDIST,XPDIDTOT,XPDIDCNT,XPDIDMOD,XPDRTN
"RTN","XPDIJ1",10,0)
 ;XPDBLD subscript for build entry i.e. ^XTMP("XPDI",XPDA,"BLD",XPDBLD
"RTN","XPDIJ1",11,0)
 S DIFROM=$$VER^XPDUTL(XPDNM),XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),XPDGREF="^XTMP(""XPDI"","_XPDA_",""TEMP"")"
"RTN","XPDIJ1",12,0)
 D TITLE^XPDID(XPDNM)
"RTN","XPDIJ1",13,0)
 ;^XTMP("XPDI",XPDA,"BLD",XPDBLD,6) is set when the msg is loaded.  Forum adds this as the last line of the msg.
"RTN","XPDIJ1",14,0)
 ;add Package file entry if sent, set TEST # & SEQ #
"RTN","XPDIJ1",15,0)
 S Y=$$PKGADD^XPDIP,XPD0=^XTMP("XPDI",XPDA,"BLD",XPDBLD,0),Y=$G(^(6)),XPDNM("TST")=$P(Y,U),XPDNM("SEQ")=$P(Y,U,2)
"RTN","XPDIJ1",16,0)
 I '$$CHK(11) D
"RTN","XPDIJ1",17,0)
 .D BMES^XPDUTL(" Install Started for "_XPDNM_" : "),STMP(11)
"RTN","XPDIJ1",18,0)
 .;update status, installed by fields and distribution date
"RTN","XPDIJ1",19,0)
 .S XPD(9.7,XPDA_",",.02)=2,XPD(9.7,XPDA_",",9)=DUZ,XPD(9.7,XPDA_",",51)=$P(XPD0,U,4)
"RTN","XPDIJ1",20,0)
 .D FILE^DIE("","XPD")
"RTN","XPDIJ1",21,0)
 E  D BMES^XPDUTL(" Install Restarted for "_XPDNM_" at "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",22,0)
 D BMES^XPDUTL("Build Distribution Date: "_$$FMTE^XLFDT($P(XPD0,U,4)))
"RTN","XPDIJ1",23,0)
 D RTN Q:$D(XPDABORT)
"RTN","XPDIJ1",24,0)
 D PRE Q:$D(XPDABORT)
"RTN","XPDIJ1",25,0)
 D FMDATA Q:$D(XPDABORT)
"RTN","XPDIJ1",26,0)
 D COMP Q:$D(XPDABORT)
"RTN","XPDIJ1",27,0)
 D POST:$G(XPDT("MASTER"))'=XPDA
"RTN","XPDIJ1",28,0)
 Q  ;Finshed
"RTN","XPDIJ1",29,0)
 ;
"RTN","XPDIJ1",30,0)
RTN I '$$CHK(12) D
"RTN","XPDIJ1",31,0)
 .D BMES^XPDUTL(" Installing Routines:"),SETTOT^XPDID(9.8),RTN^XPDIJ(XPDA),STMP(12)
"RTN","XPDIJ1",32,0)
 E  D BMES^XPDUTL(" Routines already installed.")
"RTN","XPDIJ1",33,0)
 Q
"RTN","XPDIJ1",34,0)
 ;
"RTN","XPDIJ1",35,0)
PRE S XPDCP="INI"
"RTN","XPDIJ1",36,0)
 ;check if pre-install has completed
"RTN","XPDIJ1",37,0)
 I '$$VERCP^XPDUTL("XPD PREINSTALL COMPLETED") D  Q:$D(XPDABORT)
"RTN","XPDIJ1",38,0)
 .;setup XPDQUES array with pre-install questions/answers
"RTN","XPDIJ1",39,0)
 .D QUES^XPDIQ("PRE")
"RTN","XPDIJ1",40,0)
 .;XPDCHECK=ien of current checkpoint, (0)=name of checkpoint
"RTN","XPDIJ1",41,0)
 .;XPDCP="INI"-pre install or "INIT"-post install
"RTN","XPDIJ1",42,0)
 .;loop thru check points starting with INSTALL STARTED
"RTN","XPDIJ1",43,0)
 .S XPDCHECK=1
"RTN","XPDIJ1",44,0)
 .F  S XPDCHECK=$O(^XPD(9.7,XPDA,"INI",XPDCHECK)) Q:'XPDCHECK  S XPD=^(XPDCHECK,0) D  Q:$D(XPDABORT)
"RTN","XPDIJ1",45,0)
 ..;if there is no call back, quit
"RTN","XPDIJ1",46,0)
 ..Q:$G(^XPD(9.7,XPDA,"INI",XPDCHECK,1))=""  S XPDRTN=^(1)
"RTN","XPDIJ1",47,0)
 ..;check if checkpoint has been completed
"RTN","XPDIJ1",48,0)
 ..Q:$P(XPD,U,2)
"RTN","XPDIJ1",49,0)
 ..I XPDCHECK=2 D BMES^XPDUTL(" Running Pre-Install Routine: "_XPDRTN)
"RTN","XPDIJ1",50,0)
 ..;zero the progress bar
"RTN","XPDIJ1",51,0)
 ..I $D(XPDIDVT) S XPDIDTOT=0 D UPDATE^XPDID(0)
"RTN","XPDIJ1",52,0)
 ..D @XPDRTN
"RTN","XPDIJ1",53,0)
 ..;write message and abort if developer wants
"RTN","XPDIJ1",54,0)
 ..I $D(XPDABORT) D BMES^XPDUTL("Install ** ABORTED ** in Pre-Install program") Q
"RTN","XPDIJ1",55,0)
 ..S %=$$COMCP^XPDUTL(XPDCHECK)
"RTN","XPDIJ1",56,0)
 .Q:$D(XPDABORT)
"RTN","XPDIJ1",57,0)
 .;complete pre-init check point
"RTN","XPDIJ1",58,0)
 .S %=$$COMCP^XPDUTL("XPD PREINSTALL COMPLETED")
"RTN","XPDIJ1",59,0)
 E  D BMES^XPDUTL(" Pre-Install already finished.")
"RTN","XPDIJ1",60,0)
 Q
"RTN","XPDIJ1",61,0)
 ;
"RTN","XPDIJ1",62,0)
FMDATA ;build XPDQUES arrays for all of the FM Files
"RTN","XPDIJ1",63,0)
 D QUES^XPDIQ("XPF")
"RTN","XPDIJ1",64,0)
 ;check the last file and see if it's already installed
"RTN","XPDIJ1",65,0)
 S XPD=$G(^(+$O(^XPD(9.7,XPDA,4,"A"),-1),0))
"RTN","XPDIJ1",66,0)
 I '$P(XPD,U,2) D:$D(^XTMP("XPDI",XPDA,"FIA"))
"RTN","XPDIJ1",67,0)
 .D BMES^XPDUTL(" Installing Data Dictionaries: "),SETTOT^XPDID(4),FIA^XPDIK,MES^XPDUTL("               "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",68,0)
 E  D BMES^XPDUTL(" Data Dictionaries already installed.")
"RTN","XPDIJ1",69,0)
 S %=+$O(^XTMP("XPDI",XPDA,"DATA",""),-1),XPD=$G(^XPD(9.7,XPDA,4,%,0))
"RTN","XPDIJ1",70,0)
 I '$P(XPD,U,3) D:%
"RTN","XPDIJ1",71,0)
 .D BMES^XPDUTL(" Installing Data: "),DAT^XPDIK,MES^XPDUTL("               "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",72,0)
 E  D BMES^XPDUTL(" Data already installed.")
"RTN","XPDIJ1",73,0)
 Q
"RTN","XPDIJ1",74,0)
 ;
"RTN","XPDIJ1",75,0)
COMP S (%,XPD)=""
"RTN","XPDIJ1",76,0)
 F  S %=+$O(^XPD(9.7,XPDA,"KRN",%)) Q:'%  S XPD=$G(^(%,0)) Q:'$P(XPD,U,2)
"RTN","XPDIJ1",77,0)
 I '$P(XPD,U,2) D:$D(^XTMP("XPDI",XPDA,"KRN"))
"RTN","XPDIJ1",78,0)
 .D BMES^XPDUTL(" Installing PACKAGE COMPONENTS: "),KRN^XPDIK,MES^XPDUTL("               "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",79,0)
 E  D BMES^XPDUTL(" PACKAGE COMPONENTS already installed.")
"RTN","XPDIJ1",80,0)
 Q
"RTN","XPDIJ1",81,0)
 ;
"RTN","XPDIJ1",82,0)
POST S XPDCP="INIT"
"RTN","XPDIJ1",83,0)
 ;check if post-install has completed
"RTN","XPDIJ1",84,0)
 I '$$VERCP^XPDUTL("XPD POSTINSTALL COMPLETED") D  Q:$D(XPDABORT)
"RTN","XPDIJ1",85,0)
 .;setup XPDQUES array with post-install questions/answers
"RTN","XPDIJ1",86,0)
 .D QUES^XPDIQ("POS")
"RTN","XPDIJ1",87,0)
 .;loop thru check points starting with INSTALL STARTED
"RTN","XPDIJ1",88,0)
 .S XPDCHECK=1
"RTN","XPDIJ1",89,0)
 .F  S XPDCHECK=$O(^XPD(9.7,XPDA,"INIT",XPDCHECK)) Q:'XPDCHECK  S XPD=^(XPDCHECK,0) D  Q:$D(XPDABORT)
"RTN","XPDIJ1",90,0)
 ..;if there is no call back, quit
"RTN","XPDIJ1",91,0)
 ..Q:$G(^XPD(9.7,XPDA,"INIT",XPDCHECK,1))=""  S XPDRTN=^(1)
"RTN","XPDIJ1",92,0)
 ..;quit if checkpoint has completed time
"RTN","XPDIJ1",93,0)
 ..Q:$P(XPD,U,2)
"RTN","XPDIJ1",94,0)
 ..I XPDCHECK=2 D BMES^XPDUTL(" Running Post-Install Routine: "_XPDRTN)
"RTN","XPDIJ1",95,0)
 ..;zero the progress bar
"RTN","XPDIJ1",96,0)
 ..I $D(XPDIDVT) S XPDIDTOT=0 D UPDATE^XPDID(0)
"RTN","XPDIJ1",97,0)
 ..D @XPDRTN
"RTN","XPDIJ1",98,0)
 ..;write message and abort if developer wants
"RTN","XPDIJ1",99,0)
 ..I $D(XPDABORT) D BMES^XPDUTL("Install ** ABORTED ** in Post-Install program") Q
"RTN","XPDIJ1",100,0)
 ..S %=$$COMCP^XPDUTL(XPDCHECK)
"RTN","XPDIJ1",101,0)
 .Q:$D(XPDABORT)
"RTN","XPDIJ1",102,0)
 .;complete post-init check point
"RTN","XPDIJ1",103,0)
 .S %=$$COMCP^XPDUTL("XPD POSTINSTALL COMPLETED")
"RTN","XPDIJ1",104,0)
 E  D BMES^XPDUTL(" Post-Install already finished.")
"RTN","XPDIJ1",105,0)
 ;move routines to install file & Routine file
"RTN","XPDIJ1",106,0)
 D BMES^XPDUTL(" Updating Routine file..."),SETTOT^XPDID(9.8),RTN^XPDIP
"RTN","XPDIJ1",107,0)
 ;XPDIST is flag for site tracking^A/B install message, it is set in PKG^XPDIP
"RTN","XPDIJ1",108,0)
 ;install Package file, OERR parameter multiple, and Build file
"RTN","XPDIJ1",109,0)
 S XPDIST="" D BMES^XPDUTL(" Updating KIDS files..."),PKG^XPDIP
"RTN","XPDIJ1",110,0)
 D BMES^XPDUTL(" "_XPDNM_" Installed. "),STMP(17)
"RTN","XPDIJ1",111,0)
 ;sends install messages local/forum
"RTN","XPDIJ1",112,0)
 S %=$$EN^XPDIST(XPDA,XPDIST) D BMES^XPDUTL(" "_$P("NO ",U,'$P(%,"#",2))_"Install Message sent "_%)
"RTN","XPDIJ1",113,0)
 Q
"RTN","XPDIJ1",114,0)
CHK(X) ;check checkpoints in file 9.7, X=field #, returns 1=completed, 0=not completed
"RTN","XPDIJ1",115,0)
 Q $$GET1^DIQ(9.7,XPDA_",",X,"I")]""
"RTN","XPDIJ1",116,0)
 ;
"RTN","XPDIJ1",117,0)
STMP(X) ;timestamp checkpoints in file 9.7, X=field #
"RTN","XPDIJ1",118,0)
 N XPD,%
"RTN","XPDIJ1",119,0)
 S %=$$NOW^XLFDT,XPD(9.7,XPDA_",",X)=%
"RTN","XPDIJ1",120,0)
 D MES^XPDUTL("               "_$$FMTE^XLFDT(%)),FILE^DIE("","XPD")
"RTN","XPDIJ1",121,0)
 Q
"RTN","XPDIJ1",122,0)
 ;
"RTN","XPDIJ1",123,0)
INHIBIT(SET) ;Set/Clear the Inhibit logon field.
"RTN","XPDIJ1",124,0)
 N VOL,IEN
"RTN","XPDIJ1",125,0)
 F IEN=0:0 S IEN=$O(^%ZIS(14.5,IEN)) Q:IEN'>0  D
"RTN","XPDIJ1",126,0)
 . I $P(^%ZIS(14.5,IEN,0),U,11)=1 S VOL(14.5,IEN_",",1)=SET
"RTN","XPDIJ1",127,0)
 . Q
"RTN","XPDIJ1",128,0)
 D FILE^DIE("","VOL")
"RTN","XPDIJ1",129,0)
 Q
"RTN","XPDTC")
0^4^B47613677^B46970375
"RTN","XPDTC",1,0)
XPDTC ;SFISC/RSD - Transport calls ;10/15/2008
"RTN","XPDTC",2,0)
 ;;8.0;KERNEL;**10,15,21,39,41,44,58,83,92,95,100,108,124,131,463,511,517,559**;Jul 10, 1995;Build 4
"RTN","XPDTC",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDTC",4,0)
 Q
"RTN","XPDTC",5,0)
 ;^XTMP("XPDT",XPDA,data type,file #,
"RTN","XPDTC",6,0)
 ;XPDA=ien of File 9.6, XPDNM=.01 field
"RTN","XPDTC",7,0)
DD ;build DD
"RTN","XPDTC",8,0)
 N FILE,FGR,FNAM,Z2,Z3,Z4
"RTN","XPDTC",9,0)
 S FILE=0,FGR="^XTMP(""XPDT"",XPDA)",FNAM=$NA(^XPD(9.6,XPDA,4,"APDD"))
"RTN","XPDTC",10,0)
 F  S FILE=$O(^XPD(9.6,XPDA,4,FILE)) Q:'FILE  D
"RTN","XPDTC",11,0)
 .S Z2=$G(^XPD(9.6,XPDA,4,FILE,222)),Z3=$G(^(223)),Z4=$G(^(224))
"RTN","XPDTC",12,0)
 .Q:'$$DATA^XPDV(FILE,Z2)
"RTN","XPDTC",13,0)
 .D FIA^DIFROMSU(FILE,"",FNAM,FGR,Z2,Z3,Z4,XPDVER),DIERR:$D(DIERR)
"RTN","XPDTC",14,0)
 Q:'$D(^XTMP("XPDT",XPDA,"FIA"))
"RTN","XPDTC",15,0)
 ;send DD and Data
"RTN","XPDTC",16,0)
 D DDOUT^DIFROMS("","","",FGR),DIERR:$D(DIERR),DATAOUT^DIFROMS("","","",FGR),DIERR:$D(DIERR)
"RTN","XPDTC",17,0)
 Q
"RTN","XPDTC",18,0)
 ;XPDERR is checked in XPDT and will abort transport
"RTN","XPDTC",19,0)
DIERR ;record error
"RTN","XPDTC",20,0)
 D MSG^DIALOG("EW",.XPD) S XPDERR=1
"RTN","XPDTC",21,0)
 Q
"RTN","XPDTC",22,0)
KRN ;build Kernel Files
"RTN","XPDTC",23,0)
 ;XPDFILE=file #, XPDOLDA=ien in Build file
"RTN","XPDTC",24,0)
 N %,%1,%2,DA,EACT,FACT,FGR,XPDFILE,XPDFL,XPDOLDA,XPDI
"RTN","XPDTC",25,0)
 F XPDFILE=1:1 S Y0=$P($T(FILES+XPDFILE^XPDE),";;",2,99) Q:Y0=""  S XPDI(+Y0)=Y0
"RTN","XPDTC",26,0)
 ;XPDI(XPDFILE)=file;order;x-ref;fact;eact;fpre;epre;fpos;epos;fdel
"RTN","XPDTC",27,0)
 S XPDFILE=0
"RTN","XPDTC",28,0)
 ;check we are sending something and have the executes
"RTN","XPDTC",29,0)
 F  S XPDFILE=$O(^XPD(9.6,XPDA,"KRN",XPDFILE)) Q:'XPDFILE  S XPDI=$G(XPDI(XPDFILE)) I $O(^(XPDFILE,"NM",0)),XPDI D  Q:$D(XPDERR)  D:FACT]"" ACT(FACT)
"RTN","XPDTC",30,0)
 .S FACT=$P(XPDI,";",4),EACT=$P(XPDI,";",5)
"RTN","XPDTC",31,0)
 .;need to add code to check if File and data is already being sent in the File
"RTN","XPDTC",32,0)
 .;mult. If it is, don't bother sending it again.  DTL(XPDFILE)
"RTN","XPDTC",33,0)
 .S XPDOLDA=0,FGR=$$FILE^XPDV(XPDFILE) I FGR="" S XPDERR=1 Q
"RTN","XPDTC",34,0)
 .K ^TMP($J,"XPD")
"RTN","XPDTC",35,0)
 .F  S XPDOLDA=$O(^XPD(9.6,XPDA,"KRN",XPDFILE,"NM",XPDOLDA)) Q:'XPDOLDA  S Y0=$G(^(XPDOLDA,0)) D
"RTN","XPDTC",36,0)
 ..;XPDFL= 0-send,1-delete,2-link,3-merge,4-attach,5-disable
"RTN","XPDTC",37,0)
 ..S XPDFL=$P(Y0,U,3)
"RTN","XPDTC",38,0)
 ..;If deleting at site get an unused DA
"RTN","XPDTC",39,0)
 ..I XPDFL=1 S DA=$O(@FGR@(" "),-1)+1 F DA=DA:1 Q:'$D(^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA))
"RTN","XPDTC",40,0)
 ..;$P(Y0,U,2) is file # for this template, reset Y0 before getting DA
"RTN","XPDTC",41,0)
 ..E  S:$P(Y0,U,2) $P(Y0,U)=$P(Y0,"    FILE #") S DA=$$ENTRY^XPDV(Y0)
"RTN","XPDTC",42,0)
 ..I 'DA S XPDERR=1 Q
"RTN","XPDTC",43,0)
 ..;(-1)=action ^ ien in Build file
"RTN","XPDTC",44,0)
 ..S ^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA,-1)=+XPDFL_"^"_XPDOLDA
"RTN","XPDTC",45,0)
 ..;action 2 - verify children, 4 - verify parent
"RTN","XPDTC",46,0)
 ..I XPDFL=2!(XPDFL=4),'$$MENU^XPDV(XPDFILE,DA,XPDFL) S XPDERR=1 Q
"RTN","XPDTC",47,0)
 ..;if action is 1,4 or 5 then only send .01 field and set checksum to ""
"RTN","XPDTC",48,0)
 ..I XPDFL=1!(XPDFL>3) S ^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA,0)=$P(Y0,U),$P(^XPD(9.6,XPDA,"KRN",XPDFILE,"NM",XPDOLDA,0),U,4)="" Q
"RTN","XPDTC",49,0)
 ..M ^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA)=@FGR@(DA)
"RTN","XPDTC",50,0)
 ..;execute entry build action
"RTN","XPDTC",51,0)
 ..D:EACT]"" ACT(EACT)
"RTN","XPDTC",52,0)
 .;quit if no entries were saved
"RTN","XPDTC",53,0)
 .Q:'$O(^XTMP("XPDT",XPDA,"KRN",XPDFILE,0))
"RTN","XPDTC",54,0)
 .;XPDI=XPDI(XPDFILE), build x-ref of order to install
"RTN","XPDTC",55,0)
 .S %=$P(^DIC(XPDFILE,0),U),^XTMP("XPDT",XPDA,"ORD",+$P(XPDI,";",2),XPDFILE)=XPDI,^(XPDFILE,0)=%
"RTN","XPDTC",56,0)
 .Q
"RTN","XPDTC",57,0)
 Q
"RTN","XPDTC",58,0)
QUES ;build from Install Questions multiple
"RTN","XPDTC",59,0)
 N I,J,K,X,%
"RTN","XPDTC",60,0)
 S X=""
"RTN","XPDTC",61,0)
 ;the "B" x-ref will give me the order of the questions
"RTN","XPDTC",62,0)
 F  S X=$O(^XPD(9.6,XPDA,"QUES","B",X)) Q:X=""  S I=$$QUES^XPDV(X) S:'I XPDERR=1 D:I
"RTN","XPDTC",63,0)
 .S J=0 F  S J=$O(^XPD(9.6,XPDA,"QUES",I,J)) Q:J=""  D
"RTN","XPDTC",64,0)
 ..;tranform J to DIR subscripts
"RTN","XPDTC",65,0)
 ..I $L(J)=1!(J="QQ") S ^XTMP("XPDT",XPDA,"QUES",X,$TR(J,"1ABQ","0AB?"))=^(J) Q  ;^(J) ref to ^XPD(9.6,XPDA,"QUES",I,J)
"RTN","XPDTC",66,0)
 ..;set the word processing fields into DIR("?",#) structure
"RTN","XPDTC",67,0)
 ..F %=1:1 Q:'$D(^XPD(9.6,XPDA,"QUES",I,J,%,0))  S ^XTMP("XPDT",XPDA,"QUES",X,$TR(J,"AQ10","A?"),%)=^(0)
"RTN","XPDTC",68,0)
 ;send the File questions
"RTN","XPDTC",69,0)
 S K=$G(^XPD(9.6,XPDA,"QDEF")) ;Developer Defaults for Questions
"RTN","XPDTC",70,0)
 F I=1:2 S X=$P($T(QUESTION+I),";;",2,99) Q:X=""  S Y=$P($T(QUESTION+I+1),";;",2) D
"RTN","XPDTC",71,0)
 .S ^XTMP("XPDT",XPDA,"QUES",$P(X,";"),0)=$P(X,";",2),^("A")=$P(X,";",3),^("B")=$S($L($P(K,U,I)):$P(K,U,I),1:$P(X,";",4)),^("??")=$P(X,";",5) S:Y]"" ^("M")=Y
"RTN","XPDTC",72,0)
 Q
"RTN","XPDTC",73,0)
INT ;build pre,post, & enviroment init routines
"RTN","XPDTC",74,0)
 N %,I,R,X,Z
"RTN","XPDTC",75,0)
 F I="PRE","INI","INIT" I $G(^XPD(9.6,XPDA,I))]"" S X=^(I) D
"RTN","XPDTC",76,0)
 .;remove parameters and seperate routine name from tag^routine
"RTN","XPDTC",77,0)
 .S ^XTMP("XPDT",XPDA,I)=X,X=$P(X,"("),R=$P(X,U,$L(X,U)) Q:$D(^("RTN",R))
"RTN","XPDTC",78,0)
 .I '$$RTN^XPDV(X,.Z) W !,"Routine ",X,Z S XPDERR=1 Q
"RTN","XPDTC",79,0)
 .S %=$$LOAD^XPDTA(R,"0^")
"RTN","XPDTC",80,0)
 Q
"RTN","XPDTC",81,0)
BLD ;build Build file, Package file and Order Parameter file
"RTN","XPDTC",82,0)
 N %,DIC,X,XPD,XPDI,XPDV,Y
"RTN","XPDTC",83,0)
 ;Update the 'Date Distributed' field
"RTN","XPDTC",84,0)
 S XPD(9.6,XPDA_",",.02)=$$DT^XLFDT()
"RTN","XPDTC",85,0)
 D FILE^DIE("","XPD") K XPD
"RTN","XPDTC",86,0)
 ;save version of kernel and fm
"RTN","XPDTC",87,0)
 S ^XTMP("XPDT",XPDA,"VER")=$$VERSION^XPDUTL("XU")_U_$$VERSION^XPDUTL("VA FILEMAN")
"RTN","XPDTC",88,0)
 S ^XTMP("XPDT",XPDA,"MBREQ")=$P($G(XPDT(XPDT)),U,4)
"RTN","XPDTC",89,0)
 M ^XTMP("XPDT",XPDA,"BLD",XPDA)=^XPD(9.6,XPDA)
"RTN","XPDTC",90,0)
 ;check national package file pointer
"RTN","XPDTC",91,0)
 S XPDI=$P(^XPD(9.6,XPDA,0),U,2)
"RTN","XPDTC",92,0)
 I XPDI="" W !,"No Package File Link" Q
"RTN","XPDTC",93,0)
 S $P(^XTMP("XPDT",XPDA,"BLD",XPDA,0),U,2)=$$PT^XPDTA("^DIC(9.4)",XPDI)
"RTN","XPDTC",94,0)
 ;quit if no pointer to package file
"RTN","XPDTC",95,0)
 I '$D(^DIC(9.4,XPDI)) W !,"Package File Link is corrupted" S XPDERR=1 Q
"RTN","XPDTC",96,0)
 ;update version multiple in package file,XPD=version^date distributed
"RTN","XPDTC",97,0)
 S XPD=$$VER^XPDUTL(XPDNM)_U_$P(^XTMP("XPDT",XPDA,"BLD",XPDA,0),U,4)
"RTN","XPDTC",98,0)
 ;XPD(1)=root of description field
"RTN","XPDTC",99,0)
 S:$D(^XTMP("XPDT",XPDA,"BLD",XPDA,1)) XPD(1)=$NA(^(1))
"RTN","XPDTC",100,0)
 S ^XTMP("XPDT",XPDA,"PKG",XPDI,0)=^DIC(9.4,XPDI,0),^XTMP("XPDT",XPDA,"PKG",XPDI,22,0)="^"_$P(^DD(9.4,22,0),U,2)_"^1^1"
"RTN","XPDTC",101,0)
 ;add node 20 to XTMP for Patient Merge
"RTN","XPDTC",102,0)
 M ^XTMP("XPDT",XPDA,"PKG",XPDI,20)=^DIC(9.4,XPDI,20)
"RTN","XPDTC",103,0)
 ;XPDNM'["*" is a version release
"RTN","XPDTC",104,0)
 I XPDNM'["*" D
"RTN","XPDTC",105,0)
 .S XPDV=$$PKGVER^XPDIP(XPDI,.XPD)
"RTN","XPDTC",106,0)
 .;Merge is used to set single nodes and merge multiples
"RTN","XPDTC",107,0)
 .F %=1,5,7,20,"DEV","VERSION" M ^XTMP("XPDT",XPDA,"PKG",XPDI,%)=^DIC(9.4,XPDI,%)
"RTN","XPDTC",108,0)
 .;XPDV=ien of Version Multiple
"RTN","XPDTC",109,0)
 .I $D(^DIC(9.4,XPDI,22,XPDV))'>9 W !!,"**Version multiple in Package file wasn't updated**",!! S XPDERR=1 Q
"RTN","XPDTC",110,0)
 .;get just the current version multiple and make it the first entry in version multiple
"RTN","XPDTC",111,0)
 .M ^XTMP("XPDT",XPDA,"PKG",XPDI,22,1)=^DIC(9.4,XPDI,22,XPDV)
"RTN","XPDTC",112,0)
 .;check if SEND PATCH HISTORY is NO, kill PAH
"RTN","XPDTC",113,0)
 .I $P(XPDT(XPDT),U,5) K ^XTMP("XPDT",XPDA,"PKG",XPDI,22,1,"PAH")
"RTN","XPDTC",114,0)
 ;this is a patch, %=version number, $P(XPD,U)=patch number
"RTN","XPDTC",115,0)
 E  D
"RTN","XPDTC",116,0)
 .S %=$P(XPD,U),$P(XPD,U)=$P(XPDNM,"*",3),XPDV=$$PKGPAT^XPDIP(XPDI,%,.XPD)
"RTN","XPDTC",117,0)
 .S ^XTMP("XPDT",XPDA,"PKG",XPDI,22,1,0)=^DIC(9.4,XPDI,22,+XPDV,0)
"RTN","XPDTC",118,0)
 .I $D(^DIC(9.4,XPDI,22,+XPDV,"PAH",+$P(XPDV,U,2)))'>9 W !!,"**Patch multiple in Package file wasn't updated**",!! S XPDERR=1 Q
"RTN","XPDTC",119,0)
 .M ^XTMP("XPDT",XPDA,"PKG",XPDI,22,1,"PAH",1)=^DIC(9.4,XPDI,22,+XPDV,"PAH",+$P(XPDV,U,2))
"RTN","XPDTC",120,0)
 .;if CURRENT VERSION was updated in $$PKGPAT, save to TG
"RTN","XPDTC",121,0)
 .I $P(XPDV,U,3) S ^XTMP("XPDT",XPDA,"PKG",XPDI,"VERSION")=$P(XPDV,U,3)
"RTN","XPDTC",122,0)
 ;save the version ien^patch ien on -1 node
"RTN","XPDTC",123,0)
 S ^XTMP("XPDT",XPDA,"PKG",XPDI,-1)="1^1"
"RTN","XPDTC",124,0)
 ;resolve Primary Help Frame (0;4)
"RTN","XPDTC",125,0)
 S %=+$P(^DIC(9.4,XPDI,0),U,4) S:% $P(^XTMP("XPDT",XPDA,"PKG",XPDI,0),U,4)=$$PT^XPDTA("^DIC(9.2)",%)
"RTN","XPDTC",126,0)
 Q
"RTN","XPDTC",127,0)
 ;
"RTN","XPDTC",128,0)
ACT(%) ;execute action
"RTN","XPDTC",129,0)
 ;user can count on DA,XPDFILE,XPDFL,XPDNM,XPDOLDA being around
"RTN","XPDTC",130,0)
 ;DA=ien in ^XTMP("XPDT",XPDA,"KRN",XPDFILE,DA)
"RTN","XPDTC",131,0)
 ;XPDOLDA=ien in ^XPD(9.6,XPDA,"KRN",XPDIFLE,"NM",XPDOLDA)
"RTN","XPDTC",132,0)
 N EACT,FACT,FGR,K0,Y0
"RTN","XPDTC",133,0)
 S:%'["^" %="^"_%
"RTN","XPDTC",134,0)
 D @% Q
"RTN","XPDTC",135,0)
 ;
"RTN","XPDTC",136,0)
 ;the following are the default questions for the INSTALL QUESTIONS
"RTN","XPDTC",137,0)
 ;in file 9.6, the format is:
"RTN","XPDTC",138,0)
 ;;field .01;field 1;field 2;field 4;field 7
"RTN","XPDTC",139,0)
 ;;field 10
"RTN","XPDTC",140,0)
QUESTION ;package install questions
"RTN","XPDTC",141,0)
 ;;XPF1;Y;Shall I write over your |FLAG| File;YES;^D REP^XPDH
"RTN","XPDTC",142,0)
 ;;D XPF1^XPDIQ
"RTN","XPDTC",143,0)
 ;;XPF2;Y;Want my data |FLAG| yours;YES;^D DTA^XPDH
"RTN","XPDTC",144,0)
 ;;D XPF2^XPDIQ
"RTN","XPDTC",145,0)
 ;;XPI1;YO;Want KIDS to INHIBIT LOGONs during the install;NO;^D INHIBIT^XPDH
"RTN","XPDTC",146,0)
 ;;D XPI1^XPDIQ
"RTN","XPDTC",147,0)
 ;;XPM1;PO^VA(200,:EM;Enter the Coordinator for Mail Group '|FLAG|';;^D MG^XPDH
"RTN","XPDTC",148,0)
 ;;D XPM1^XPDIQ
"RTN","XPDTC",149,0)
 ;;XPO1;Y;Want KIDS to Rebuild Menu Trees Upon Completion of Install;NO;^D MENU^XPDH
"RTN","XPDTC",150,0)
 ;;D XPO1^XPDIQ
"RTN","XPDTC",151,0)
 ;;XPZ1;Y;Want to DISABLE Scheduled Options, Menu Options, and Protocols;NO;^D OPT^XPDH
"RTN","XPDTC",152,0)
 ;;D XPZ1^XPDIQ
"RTN","XPDTC",153,0)
 ;;XPZ2;Y;Want to MOVE routines to other CPUs;NO;^D RTN^XPDH
"RTN","XPDTC",154,0)
 ;;D XPZ2^XPDIQ
"RTN","XPDUTL")
0^3^B24049764^B23402759
"RTN","XPDUTL",1,0)
XPDUTL ;SFISC/RSD - KIDS utilities ;10/15/2008
"RTN","XPDUTL",2,0)
 ;;8.0;KERNEL;**21,28,39,81,100,108,137,181,275,491,511,559**;Jul 10, 1995;Build 4
"RTN","XPDUTL",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDUTL",4,0)
 Q
"RTN","XPDUTL",5,0)
VERSION(X) ;Get current version from Package file, X=package name or
"RTN","XPDUTL",6,0)
 ;package namespace
"RTN","XPDUTL",7,0)
 N I
"RTN","XPDUTL",8,0)
 S I=$$LKPKG(X) Q:'I ""
"RTN","XPDUTL",9,0)
 Q $P($G(^DIC(9.4,+I,"VERSION")),"^")
"RTN","XPDUTL",10,0)
 ;
"RTN","XPDUTL",11,0)
VER(X) ;returns version number from Build file, X=build name
"RTN","XPDUTL",12,0)
 Q:X["*" $P(X,"*",2)
"RTN","XPDUTL",13,0)
 Q $P(X," ",$L(X," "))
"RTN","XPDUTL",14,0)
 ;
"RTN","XPDUTL",15,0)
STATUS(IEN) ;returns status from Install File, IEN=Install File IEN
"RTN","XPDUTL",16,0)
 I '$D(^XPD(9.7,IEN,0)) Q -1
"RTN","XPDUTL",17,0)
 Q $P(^XPD(9.7,IEN,0),U,9)
"RTN","XPDUTL",18,0)
 ;
"RTN","XPDUTL",19,0)
PKG(X) ;returns package name from Build file, X=build name
"RTN","XPDUTL",20,0)
 Q $S(X["*":$P(X,"*"),1:$P(X," ",1,$L(X," ")-1))
"RTN","XPDUTL",21,0)
 ;
"RTN","XPDUTL",22,0)
LAST(PKG,VER,REL) ;returns last patch applied for a Package, PATCH^DATE
"RTN","XPDUTL",23,0)
 ;PKG=package name, VER=version number, REL[optional]=1 if you want released patches only
"RTN","XPDUTL",24,0)
 ;Patch includes Seq # if Released
"RTN","XPDUTL",25,0)
 N PKGIEN,VERIEN,LATEST,PATCH,SUBIEN,Y
"RTN","XPDUTL",26,0)
 S PKGIEN=$$LKPKG($G(PKG)) Q:'PKGIEN -1
"RTN","XPDUTL",27,0)
 I $G(VER)="" S VER=$P($G(^DIC(9.4,PKGIEN,"VERSION")),"^") Q:'VER -1
"RTN","XPDUTL",28,0)
 S VERIEN=$O(^DIC(9.4,PKGIEN,22,"B",VER,"")) Q:'VERIEN -1
"RTN","XPDUTL",29,0)
 S LATEST=-1,PATCH=-1,SUBIEN=0
"RTN","XPDUTL",30,0)
 F  S SUBIEN=$O(^DIC(9.4,PKGIEN,22,VERIEN,"PAH",SUBIEN)) Q:SUBIEN'>0  S Y=$G(^(SUBIEN,0)) D:$P(Y,U,2)>LATEST
"RTN","XPDUTL",31,0)
 . I $G(REL),$P(Y,U)'["SEQ #" Q  ;released only, must contain SEQ
"RTN","XPDUTL",32,0)
 . S LATEST=$P(Y,U,2),PATCH=$P(Y,U)
"RTN","XPDUTL",33,0)
 Q PATCH_U_LATEST
"RTN","XPDUTL",34,0)
 ;
"RTN","XPDUTL",35,0)
PATCH(X) ;return 1 if patch X was installed, X=aaaa*nn.nn*nnn
"RTN","XPDUTL",36,0)
 Q:X'?1.4UN1"*"1.2N1"."1.2N.1(1"V",1"T").2N1"*"1.3N 0
"RTN","XPDUTL",37,0)
 N %,I,J
"RTN","XPDUTL",38,0)
 S I=$$LKPKG($P(X,"*")) Q:'I 0
"RTN","XPDUTL",39,0)
 S J=$O(^DIC(9.4,I,22,"B",$P(X,"*",2),0)),X=$P(X,"*",3) Q:'J 0
"RTN","XPDUTL",40,0)
 ;check if patch is just a number
"RTN","XPDUTL",41,0)
 Q:$O(^DIC(9.4,I,22,J,"PAH","B",X,0)) 1
"RTN","XPDUTL",42,0)
 S %=$O(^DIC(9.4,I,22,J,"PAH","B",X_" SEQ"))
"RTN","XPDUTL",43,0)
 Q (X=+%)
"RTN","XPDUTL",44,0)
 ;
"RTN","XPDUTL",45,0)
INSTALDT(INSTALL,RESULT) ;returns number of installs, 0 if not installed or doesn't exist
"RTN","XPDUTL",46,0)
 ;input: INSTALL=required, Install name; RESULT=required, passed by reference
"RTN","XPDUTL",47,0)
 ;output: RESULT=number in RESULT array; RESULT(FM date/time)=TEST# ^ SEQ#
"RTN","XPDUTL",48,0)
 N CNT,DATE,IEN
"RTN","XPDUTL",49,0)
 K RESULT
"RTN","XPDUTL",50,0)
 S (IEN,CNT,RESULT)=0
"RTN","XPDUTL",51,0)
 I $G(INSTALL)="" Q 0
"RTN","XPDUTL",52,0)
 F  S IEN=$O(^XPD(9.7,"B",INSTALL,IEN)) Q:'IEN  D
"RTN","XPDUTL",53,0)
 .S DATE=$P($G(^XPD(9.7,IEN,1)),U,3) Q:'DATE
"RTN","XPDUTL",54,0)
 .S RESULT(DATE)=$G(^XPD(9.7,IEN,6)),CNT=CNT+1
"RTN","XPDUTL",55,0)
 S RESULT=CNT
"RTN","XPDUTL",56,0)
 Q CNT
"RTN","XPDUTL",57,0)
 ;
"RTN","XPDUTL",58,0)
NEWCP(XPD,XPDC,XPDP) ;create new check point, returns 0=error or ien
"RTN","XPDUTL",59,0)
 ;XPD=name, XPDC=call back, XPDP=parameters
"RTN","XPDUTL",60,0)
 Q:$G(XPD)="" 0
"RTN","XPDUTL",61,0)
 N %,XPDI,XPDJ,XPDF,XPDY
"RTN","XPDUTL",62,0)
 ;XPDCP="INI"=Pre-init, "INIT"=Post-init
"RTN","XPDUTL",63,0)
 S XPDI=$S(XPDCP="INIT":9.716,1:9.713)
"RTN","XPDUTL",64,0)
 S %=$$FIND1^DIC(XPDI,","_XPDA_",","X",XPD) Q:% %
"RTN","XPDUTL",65,0)
 S XPDF="+1,"_XPDA_",",XPDJ(XPDI,XPDF,.01)=XPD
"RTN","XPDUTL",66,0)
 S:$D(XPDC) XPDJ(XPDI,XPDF,2)=XPDC
"RTN","XPDUTL",67,0)
 S:$D(XPDP) XPDJ(XPDI,XPDF,3)=XPDP
"RTN","XPDUTL",68,0)
 D UPDATE^DIE("","XPDJ","XPDY")
"RTN","XPDUTL",69,0)
 Q $G(XPDY(1))
"RTN","XPDUTL",70,0)
 ;
"RTN","XPDUTL",71,0)
UPCP(XPD,XPDP) ;update check point, returns 0=error or ien
"RTN","XPDUTL",72,0)
 ;XPD=name, XPDP=parameters
"RTN","XPDUTL",73,0)
 N XPDI,XPDJ,XPDF,XPDY
"RTN","XPDUTL",74,0)
 ;XPDCP="INI"=Pre-init, "INIT"=Post-init
"RTN","XPDUTL",75,0)
 S XPDI=$S(XPDCP="INIT":9.716,1:9.713),XPDY=$$DICCP($G(XPD))
"RTN","XPDUTL",76,0)
 Q:'XPDY 0
"RTN","XPDUTL",77,0)
 S XPDF=XPDY_","_XPDA_","
"RTN","XPDUTL",78,0)
 S:$D(XPDP) XPDJ(XPDI,XPDF,3)=XPDP
"RTN","XPDUTL",79,0)
 D FILE^DIE("","XPDJ")
"RTN","XPDUTL",80,0)
 Q XPDY
"RTN","XPDUTL",81,0)
 ;
"RTN","XPDUTL",82,0)
COMCP(XPD) ;complete check point, returns 0=error or date/time
"RTN","XPDUTL",83,0)
 ;XPD=name
"RTN","XPDUTL",84,0)
 N XPDD,XPDI,XPDJ,XPDY
"RTN","XPDUTL",85,0)
 S XPDI=$S(XPDCP="INIT":9.716,1:9.713),XPDY=$$DICCP($G(XPD))
"RTN","XPDUTL",86,0)
 Q:'XPDY 0
"RTN","XPDUTL",87,0)
 S XPDD=$$NOW^XLFDT,XPDJ(XPDI,XPDY_","_XPDA_",",1)=XPDD
"RTN","XPDUTL",88,0)
 D FILE^DIE("","XPDJ")
"RTN","XPDUTL",89,0)
 Q XPDD
"RTN","XPDUTL",90,0)
 ;
"RTN","XPDUTL",91,0)
VERCP(XPD) ;verify check point, returns 1=completed, 0=not
"RTN","XPDUTL",92,0)
 ;-1=doesn't exist
"RTN","XPDUTL",93,0)
 ;XPD=name
"RTN","XPDUTL",94,0)
 N XPDI,XPDY
"RTN","XPDUTL",95,0)
 S XPDI=$S(XPDCP="INIT":9.716,1:9.713),XPDY=$$DICCP($G(XPD))
"RTN","XPDUTL",96,0)
 Q:'XPDY -1
"RTN","XPDUTL",97,0)
 Q ''$$GET1^DIQ(XPDI,XPDY_","_XPDA_",",1,"I")
"RTN","XPDUTL",98,0)
 ;
"RTN","XPDUTL",99,0)
PARCP(XPD,XPDF) ;returns parameters of check point
"RTN","XPDUTL",100,0)
 ;XPD=name, XPDF="PRE"
"RTN","XPDUTL",101,0)
 N XPDI,XPDY
"RTN","XPDUTL",102,0)
 I $G(XPDF)="PRE" N XPDCP S XPDCP="INI"
"RTN","XPDUTL",103,0)
 S XPDI=$S(XPDCP="INIT":9.716,1:9.713),XPDY=$$DICCP($G(XPD))
"RTN","XPDUTL",104,0)
 Q:'XPDY 0
"RTN","XPDUTL",105,0)
 Q $$GET1^DIQ(XPDI,XPDY_","_XPDA_",",3,"I")
"RTN","XPDUTL",106,0)
 ;
"RTN","XPDUTL",107,0)
CURCP(XPDF) ;returns current check point
"RTN","XPDUTL",108,0)
 ;XPDF flag - 0=externel, 1=internal
"RTN","XPDUTL",109,0)
 Q $S($G(XPDF):XPDCHECK,1:XPDCHECK(0))
"RTN","XPDUTL",110,0)
 ;
"RTN","XPDUTL",111,0)
WP(X) ;X=global ref
"RTN","XPDUTL",112,0)
 N %
"RTN","XPDUTL",113,0)
 Q:'$D(@X)
"RTN","XPDUTL",114,0)
 F %=1:1 Q:'$D(@X@(%))  W !,@X@(%)
"RTN","XPDUTL",115,0)
 Q:'$G(XPDA)  D WP^DIE(9.7,XPDA_",",20,"A",X)
"RTN","XPDUTL",116,0)
 Q
"RTN","XPDUTL",117,0)
MES(X) ;record message, X=message or an array passed by reference
"RTN","XPDUTL",118,0)
 N %
"RTN","XPDUTL",119,0)
 I $D(X)#2 S %=X K X S X(1)=%
"RTN","XPDUTL",120,0)
 ;write message
"RTN","XPDUTL",121,0)
 F %=1:1 Q:'$D(X(%))  W !,X(%)
"RTN","XPDUTL",122,0)
 Q:'$G(XPDA)  D WP^DIE(9.7,XPDA_",",20,"A","X")
"RTN","XPDUTL",123,0)
 Q
"RTN","XPDUTL",124,0)
BMES(X) ;add blank line before message
"RTN","XPDUTL",125,0)
 N %
"RTN","XPDUTL",126,0)
 I $D(X)#2 S %=X K X S X(1)=" ",X(2)=%
"RTN","XPDUTL",127,0)
 D MES(.X)
"RTN","XPDUTL",128,0)
 Q
"RTN","XPDUTL",129,0)
RTNUP(X,Y) ;update routine action, X=routine, Y=action
"RTN","XPDUTL",130,0)
 ;actions:  1=delete, 2=skip
"RTN","XPDUTL",131,0)
 N %
"RTN","XPDUTL",132,0)
 ;set action to Y
"RTN","XPDUTL",133,0)
 Q:'$G(Y)!'$D(^XTMP("XPDI",$G(XPDA),"RTN",X)) 0 S $P(^(X),U)=+Y
"RTN","XPDUTL",134,0)
 Q 1
"RTN","XPDUTL",135,0)
 ;get Build ien
"RTN","XPDUTL",136,0)
 S Y=$O(^XTMP("XPDI",XPDA,"BLD",0))
"RTN","XPDUTL",137,0)
 ;remove checksum when updating action, since action can only be
"RTN","XPDUTL",138,0)
 ;delete or skip, not sure if we want to do this
"RTN","XPDUTL",139,0)
 S:$P(%,U,2) $P(^XTMP("XPDI",XPDA,"BLD",Y,"KRN",9.8,"NM",$P(%,U,2),0),U,4)=""
"RTN","XPDUTL",140,0)
 Q 1
"RTN","XPDUTL",141,0)
 ;
"RTN","XPDUTL",142,0)
RTNLOG(X) ;Enter/Update routine in the Routine File
"RTN","XPDUTL",143,0)
 N Y,FDA,IEN
"RTN","XPDUTL",144,0)
 S Y=$O(^DIC(9.8,"B",X,0))
"RTN","XPDUTL",145,0)
 I Y'>0 S IEN="?+1,",FDA(9.8,IEN,1)="R"
"RTN","XPDUTL",146,0)
 I Y>0 S IEN=(+Y)_","
"RTN","XPDUTL",147,0)
 S FDA(9.8,IEN,.01)=X,FDA(9.8,IEN,7.4)=$$NOW^XLFDT
"RTN","XPDUTL",148,0)
 D UPDATE^DIE("","FDA","IEN")
"RTN","XPDUTL",149,0)
 Q
"RTN","XPDUTL",150,0)
 ;
"RTN","XPDUTL",151,0)
DICCP(X) ;lookup check point, returns ien or 0
"RTN","XPDUTL",152,0)
 Q:$G(X)="" 0
"RTN","XPDUTL",153,0)
 ;if they pass ien, fail if can't find
"RTN","XPDUTL",154,0)
 I X=+X S Y=X Q:'$D(^XPD(9.7,XPDA,XPDCP,Y,0)) 0
"RTN","XPDUTL",155,0)
 E  S Y=$$FIND1^DIC(XPDI,","_XPDA_",","X",X)
"RTN","XPDUTL",156,0)
 Q Y
"RTN","XPDUTL",157,0)
 ;
"RTN","XPDUTL",158,0)
PRODE(XPDN,XPD) ;enable/disable protocols, return 1 for success
"RTN","XPDUTL",159,0)
 ;XPDN=protocol name, XPD=1-enable, 0-disable
"RTN","XPDUTL",160,0)
 Q:$G(XPDN)="" 0
"RTN","XPDUTL",161,0)
 S XPD=+$G(XPD)
"RTN","XPDUTL",162,0)
 D KIDS^XQOO1($P(XPDSET,U,2),101,XPDN,.XPD)
"RTN","XPDUTL",163,0)
 Q $S(XPD<0:0,1:1)
"RTN","XPDUTL",164,0)
 ;
"RTN","XPDUTL",165,0)
OPTDE(XPDN,XPD) ;enable/disable options, return 1 for success
"RTN","XPDUTL",166,0)
 ;XPDN=protocol name, XPD=1-enable, 0-disable
"RTN","XPDUTL",167,0)
 Q:$G(XPDN)="" 0
"RTN","XPDUTL",168,0)
 S XPD=+$G(XPD)
"RTN","XPDUTL",169,0)
 D KIDS^XQOO1($P(XPDSET,U,2),19,XPDN,.XPD)
"RTN","XPDUTL",170,0)
 Q $S(XPD<0:0,1:1)
"RTN","XPDUTL",171,0)
 ;
"RTN","XPDUTL",172,0)
BUILD(XPDN,XPD) ;check if a build exists, return 1 for success
"RTN","XPDUTL",173,0)
 ;XPDN=build name, XPD=1-exist, 0-been removed
"RTN","XPDUTL",174,0)
 S XPD=$D(XPDT("NM",XPDN))
"RTN","XPDUTL",175,0)
 Q XPD
"RTN","XPDUTL",176,0)
 ;
"RTN","XPDUTL",177,0)
MAILGRP(X) ;Return mail group for package, X=package name or namespace
"RTN","XPDUTL",178,0)
 N XD,DIC,DR,DA,DIQ
"RTN","XPDUTL",179,0)
 S DA=$$LKPKG(X) Q:'DA ""
"RTN","XPDUTL",180,0)
 S DIC="^DIC(9.4,",DR=1938,DIQ="XD" D EN^DIQ1
"RTN","XPDUTL",181,0)
 Q $S($G(XD(9.4,DA,1938))="":"",1:"G."_XD(9.4,DA,1938))
"RTN","XPDUTL",182,0)
 ;
"RTN","XPDUTL",183,0)
LKPKG(X) ;Return Package ien,  X=package name or namespace
"RTN","XPDUTL",184,0)
 Q:$G(X)="" 0
"RTN","XPDUTL",185,0)
 N DA
"RTN","XPDUTL",186,0)
 I $L(X)<5 D  Q:DA +DA
"RTN","XPDUTL",187,0)
 .S DA=$O(^DIC(9.4,"C",X,0))
"RTN","XPDUTL",188,0)
 .S:'DA DA=$O(^DIC(9.4,"C2",X,0))
"RTN","XPDUTL",189,0)
 I $L(X)>3 S DA=$O(^DIC(9.4,"B",X,0))
"RTN","XPDUTL",190,0)
 Q +DA
"VER")
8.0^22.0
"BLD",1351,6)
^488
**END**
**END**
