KIDS Distribution saved on Nov 03, 2010@10:06:24
XU 506
**KIDS**:XU*8.0*506^

**INSTALL NAME**
XU*8.0*506
"BLD",1118,0)
XU*8.0*506^KERNEL^0^3090312^y
"BLD",1118,1,0)
^^4^4^3081209^^
"BLD",1118,1,1,0)
Please see the patch description on FORUM, in the National
"BLD",1118,1,2,0)
 Patch Module.
"BLD",1118,1,3,0)

"BLD",1118,1,4,0)

"BLD",1118,4,0)
^9.64PA^^
"BLD",1118,6)
^417
"BLD",1118,6.3)
11
"BLD",1118,"ABPKG")
n
"BLD",1118,"KRN",0)
^9.67PA^779.2^20
"BLD",1118,"KRN",.4,0)
.4
"BLD",1118,"KRN",.401,0)
.401
"BLD",1118,"KRN",.402,0)
.402
"BLD",1118,"KRN",.403,0)
.403
"BLD",1118,"KRN",.5,0)
.5
"BLD",1118,"KRN",.84,0)
.84
"BLD",1118,"KRN",3.6,0)
3.6
"BLD",1118,"KRN",3.8,0)
3.8
"BLD",1118,"KRN",9.2,0)
9.2
"BLD",1118,"KRN",9.8,0)
9.8
"BLD",1118,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",1118,"KRN",9.8,"NM",1,0)
XPDCOM^^0^B16563839
"BLD",1118,"KRN",9.8,"NM",2,0)
XPDCOMG^^0^B8227835
"BLD",1118,"KRN",9.8,"NM",3,0)
XPDCOMF^^0^B79333923
"BLD",1118,"KRN",9.8,"NM",4,0)
XPDCOML^^0^B8752451
"BLD",1118,"KRN",9.8,"NM",5,0)
XPDIU^^0^B16953601
"BLD",1118,"KRN",9.8,"NM",6,0)
XPDIJ^^0^B23600088
"BLD",1118,"KRN",9.8,"NM","B","XPDCOM",1)

"BLD",1118,"KRN",9.8,"NM","B","XPDCOMF",3)

"BLD",1118,"KRN",9.8,"NM","B","XPDCOMG",2)

"BLD",1118,"KRN",9.8,"NM","B","XPDCOML",4)

"BLD",1118,"KRN",9.8,"NM","B","XPDIJ",6)

"BLD",1118,"KRN",9.8,"NM","B","XPDIU",5)

"BLD",1118,"KRN",19,0)
19
"BLD",1118,"KRN",19,"NM",0)
^9.68A^^
"BLD",1118,"KRN",19.1,0)
19.1
"BLD",1118,"KRN",101,0)
101
"BLD",1118,"KRN",409.61,0)
409.61
"BLD",1118,"KRN",771,0)
771
"BLD",1118,"KRN",779.2,0)
779.2
"BLD",1118,"KRN",870,0)
870
"BLD",1118,"KRN",8989.51,0)
8989.51
"BLD",1118,"KRN",8989.52,0)
8989.52
"BLD",1118,"KRN",8994,0)
8994
"BLD",1118,"KRN","B",.4,.4)

"BLD",1118,"KRN","B",.401,.401)

"BLD",1118,"KRN","B",.402,.402)

"BLD",1118,"KRN","B",.403,.403)

"BLD",1118,"KRN","B",.5,.5)

"BLD",1118,"KRN","B",.84,.84)

"BLD",1118,"KRN","B",3.6,3.6)

"BLD",1118,"KRN","B",3.8,3.8)

"BLD",1118,"KRN","B",9.2,9.2)

"BLD",1118,"KRN","B",9.8,9.8)

"BLD",1118,"KRN","B",19,19)

"BLD",1118,"KRN","B",19.1,19.1)

"BLD",1118,"KRN","B",101,101)

"BLD",1118,"KRN","B",409.61,409.61)

"BLD",1118,"KRN","B",771,771)

"BLD",1118,"KRN","B",779.2,779.2)

"BLD",1118,"KRN","B",870,870)

"BLD",1118,"KRN","B",8989.51,8989.51)

"BLD",1118,"KRN","B",8989.52,8989.52)

"BLD",1118,"KRN","B",8994,8994)

"BLD",1118,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1118,"QUES",0)
^9.62^^
"BLD",1118,"REQB",0)
^9.611^4^3
"BLD",1118,"REQB",2,0)
XU*8.0*275^2
"BLD",1118,"REQB",3,0)
XU*8.0*304^2
"BLD",1118,"REQB",4,0)
XU*8.0*393^2
"BLD",1118,"REQB","B","XU*8.0*275",2)

"BLD",1118,"REQB","B","XU*8.0*304",3)

"BLD",1118,"REQB","B","XU*8.0*393",4)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3080616^3080616^6
"PKG",3,22,1,"PAH",1,0)
506^3090312^6
"PKG",3,22,1,"PAH",1,1,0)
^^4^4^3090312
"PKG",3,22,1,"PAH",1,1,1,0)
Please see the patch description on FORUM, in the National
"PKG",3,22,1,"PAH",1,1,2,0)
 Patch Module.
"PKG",3,22,1,"PAH",1,1,3,0)

"PKG",3,22,1,"PAH",1,1,4,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","XPDCOM")
0^1^B16563839^B12902115
"RTN","XPDCOM",1,0)
XPDCOM ;SFISC/RSD - Compare Transport Global ;08/14/2008
"RTN","XPDCOM",2,0)
 ;;8.0;KERNEL;**21,58,108,124,393,506**;Jul 10, 1995;Build 11
"RTN","XPDCOM",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDCOM",4,0)
EN1 ;compare to current system
"RTN","XPDCOM",5,0)
 N DIC,DIR,DIRUT,DITCPT,POP,XPD,XPDA,XPDC,XPDNM,XPDT,XPDST,XPDUL,Y,Z,%ZIS
"RTN","XPDCOM",6,0)
 S XPDST=$$LOOK^XPDI1("I '$P(^(0),U,9),$D(^XTMP(""XPDI"",Y))",1) Q:XPDST'>0
"RTN","XPDCOM",7,0)
 S DIR(0)="SO^1:Full Comparison;2:Second line of Routines only;3:Routines only;4:Old style Routine compare",DIR("A")="Type of Compare",DIR("?")="Enter the type of comparison." ;rwf
"RTN","XPDCOM",8,0)
 D ^DIR Q:Y=""!$D(DTOUT)!$D(DUOUT)
"RTN","XPDCOM",9,0)
 S XPDC=Y,Y="JOB^XPDCOM",Z="Transport Global Compare",XPD("XPDNM")="",XPD("XPDC")="",XPD("XPDT(")=""
"RTN","XPDCOM",10,0)
 D EN^XUTMDEVQ(Y,Z,.XPD)
"RTN","XPDCOM",11,0)
 Q
"RTN","XPDCOM",12,0)
 ;
"RTN","XPDCOM",13,0)
JOB ;Loop thru XPDT
"RTN","XPDCOM",14,0)
 N XPDIT
"RTN","XPDCOM",15,0)
 F XPDIT=0:0 S XPDIT=$O(XPDT(XPDIT)) Q:XPDIT'>0  D COM(+XPDT(XPDIT))
"RTN","XPDCOM",16,0)
 Q
"RTN","XPDCOM",17,0)
 ;
"RTN","XPDCOM",18,0)
COM(XPDA) ;XPDA=ien of package in ^XTMP("XPDI"
"RTN","XPDCOM",19,0)
 Q:'$D(^XTMP("XPDI",$G(XPDA)))
"RTN","XPDCOM",20,0)
 S:$D(XPDT("DA",XPDA)) XPDNM=$P(XPDT(+XPDT("DA",XPDA)),U,2)
"RTN","XPDCOM",21,0)
 D HDR,COMR,EN^XPDCOMG:XPDC=1
"RTN","XPDCOM",22,0)
 W !!
"RTN","XPDCOM",23,0)
 Q
"RTN","XPDCOM",24,0)
 ;
"RTN","XPDCOM",25,0)
COMR ;compare routines
"RTN","XPDCOM",26,0)
 N DL,NAME,RM,XL,XPDI,X,XL,Y,YL,XPDHEAD
"RTN","XPDCOM",27,0)
 S (NAME,XPDI)="",RM=IOM/2-8
"RTN","XPDCOM",28,0)
 F  S XPDI=$O(^XTMP("XPDI",XPDA,"RTN",XPDI)) Q:XPDI=""  S X=+$G(^(XPDI)) D
"RTN","XPDCOM",29,0)
 .S NAME=" Routine: "_XPDI,XPDHEAD=0
"RTN","XPDCOM",30,0)
 .I X W:X=1 !!,"*DELETE*",NAME,! Q
"RTN","XPDCOM",31,0)
 .S X=XPDI X ^%ZOSF("TEST") E  W !!,"*ADD*",NAME,! Q
"RTN","XPDCOM",32,0)
 .;check 2nd line only
"RTN","XPDCOM",33,0)
 .I XPDC=2 D  Q
"RTN","XPDCOM",34,0)
 ..S XL(2)=$G(^XTMP("XPDI",XPDA,"RTN",XPDI,2,0)),YL(2)=$T(+2^@XPDI)
"RTN","XPDCOM",35,0)
 ..D EN^XPDCOML("XL","YL",NAME)
"RTN","XPDCOM",36,0)
 ..W:'XPDHEAD !,?IOM-$L(NAME)\2,NAME
"RTN","XPDCOM",37,0)
 ..W !
"RTN","XPDCOM",38,0)
 ..I XL(2)=YL(2)!(XL(2)'["**") Q
"RTN","XPDCOM",39,0)
 ..;check patch string
"RTN","XPDCOM",40,0)
 ..S X=$P(XL(2),"**",2),XL=$L(X,","),Y=$P(YL(2),"**",2),YL=$L(Y,",")
"RTN","XPDCOM",41,0)
 ..Q:X=Y
"RTN","XPDCOM",42,0)
 ..;incoming has more patches than system, check for missing patches
"RTN","XPDCOM",43,0)
 ..I XL>YL W:$P(X,",",1,(XL-1))'=Y "*** WARNING, you are missing one or more Patches ***",! Q
"RTN","XPDCOM",44,0)
 ..I YL>XL W "*** WARNING, your routine has more patches than the incoming routine ***",! Q
"RTN","XPDCOM",45,0)
 ..Q
"RTN","XPDCOM",46,0)
 .;get number of lines in rouitine, XL
"RTN","XPDCOM",47,0)
 .F X=1:1 Q:'$D(^XTMP("XPDI",XPDA,"RTN",XPDI,X))
"RTN","XPDCOM",48,0)
 .S XL=X-1
"RTN","XPDCOM",49,0)
 .K ^TMP($J,XPDI)
"RTN","XPDCOM",50,0)
 .F X=1:1 S Y=$T(+X^@XPDI) Q:Y=""  S ^TMP($J,XPDI,X,0)=Y
"RTN","XPDCOM",51,0)
 .S DL=X-1 ;number of line in routine on disk
"RTN","XPDCOM",52,0)
 .D EN^XPDCOML($NA(^XTMP("XPDI",XPDA,"RTN",XPDI)),$NA(^TMP($J,XPDI)),NAME):XPDC<4,COMP:XPDC=4
"RTN","XPDCOM",53,0)
 .W:'XPDHEAD !,?IOM-$L(NAME)\2,NAME
"RTN","XPDCOM",54,0)
 .W ! K ^TMP($J,XPDI)
"RTN","XPDCOM",55,0)
 .Q
"RTN","XPDCOM",56,0)
 I NAME="" W ?RM,"No Routines"
"RTN","XPDCOM",57,0)
 Q
"RTN","XPDCOM",58,0)
 ;
"RTN","XPDCOM",59,0)
COMP ;taken from XMPC routine
"RTN","XPDCOM",60,0)
 N D1,DI,I,J,K,NL,X1,XI,Y1
"RTN","XPDCOM",61,0)
 S (XI,DI)=0,NL=5,XPDHEAD=1
"RTN","XPDCOM",62,0)
 W !,?IOM-$L(NAME)\2,NAME
"RTN","XPDCOM",63,0)
 ;check each line in the incoming routine,X1, against the routine on disk,D1
"RTN","XPDCOM",64,0)
 F  S XI=XI+1,DI=DI+1 Q:XI>XL!(DI>DL)  D:^XTMP("XPDI",XPDA,"RTN",XPDI,XI,0)'=^TMP($J,XPDI,DI,0)
"RTN","XPDCOM",65,0)
 .S X1=^XTMP("XPDI",XPDA,"RTN",XPDI,XI,0),Y1=0
"RTN","XPDCOM",66,0)
 .;if lines are not the same, look ahead five lines in D1
"RTN","XPDCOM",67,0)
 .F I=DI:1:$S(DI+NL<DL:DI+NL,1:DL) S D1=^TMP($J,XPDI,I,0) D  Q:Y1
"RTN","XPDCOM",68,0)
 ..F K=1:5:26 Q:$L($E(D1,K,K+10))<7  I $F(X1,$E(D1,K,K+10))  D  Q
"RTN","XPDCOM",69,0)
 ...;print the lines upto the line that are the same
"RTN","XPDCOM",70,0)
 ...F J=DI:1:I-1 D WP(^TMP($J,XPDI,J,0),2)
"RTN","XPDCOM",71,0)
 ...;quit if the lines are equal
"RTN","XPDCOM",72,0)
 ...S DI=I,Y1=1 Q:D1=X1
"RTN","XPDCOM",73,0)
 ...;if lines are equal, print old and new
"RTN","XPDCOM",74,0)
 ...D WP(D1,3),WP(X1,4)
"RTN","XPDCOM",75,0)
 .Q:Y1  D WP(X1,1) S DI=DI-1
"RTN","XPDCOM",76,0)
 ;check remaining lines in routines
"RTN","XPDCOM",77,0)
 I XI>XL&(DI<(DL+1)) F I=DI:1:DL D WP(^TMP($J,XPDI,I,0),2)
"RTN","XPDCOM",78,0)
 I DI>DL&(XI<(XL+1)) F I=XI:1:XL D WP(^XTMP("XPDI",XPDA,"RTN",XPDI,I,0),1)
"RTN","XPDCOM",79,0)
 Q
"RTN","XPDCOM",80,0)
WP(X,Y) ;
"RTN","XPDCOM",81,0)
 W !,"* "_$P("ADD^DEL^OLD^NEW",U,Y)_" *  ",X
"RTN","XPDCOM",82,0)
 Q
"RTN","XPDCOM",83,0)
 ;
"RTN","XPDCOM",84,0)
HDR ;
"RTN","XPDCOM",85,0)
 S $P(XPDUL,"-",80)=""
"RTN","XPDCOM",86,0)
 W @IOF,!,"Compare KIDS package ",XPDNM," to current site (Disk)"
"RTN","XPDCOM",87,0)
 W !,"Site: ",$$KSP^XUPARAM("WHERE")
"RTN","XPDCOM",88,0)
 D GETENV^%ZOSV W "  UCI: ",$P(Y,U),",",$P(Y,U,2),"  ",?IOM/2+2,$$FMTE^XLFDT($$NOW^XLFDT()),!
"RTN","XPDCOM",89,0)
 I XPDC>1 W:XPDC=2 "2nd Line of " W "Routines Only",!
"RTN","XPDCOM",90,0)
 W ?3,"KIDS",?IOM\2+3,"Disk",!
"RTN","XPDCOM",91,0)
 W XPDUL,!
"RTN","XPDCOM",92,0)
 Q
"RTN","XPDCOMF")
0^3^B79333923^n/a
"RTN","XPDCOMF",1,0)
XPDCOMF ;SFISC/GFT/MSC - COMPARE FILES ;08/14/2008
"RTN","XPDCOMF",2,0)
 ;;8.0;KERNEL;**506**;Jul 10, 1995;Build 11
"RTN","XPDCOMF",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDCOMF",4,0)
 ;DI1 & DI2 are left & right roots
"RTN","XPDCOMF",5,0)
 ;DIFLAG[1 -->compare files   [2-->compare entries   ["L" --> IGNORE EXTRA ENTRIES ON RIGHT SIDE
"RTN","XPDCOMF",6,0)
 ;DITCPT is array of TITLES, called by reference
"RTN","XPDCOMF",7,0)
EN(DI1,DI2,DIDD,DIFLAG,DITCPT) ;
"RTN","XPDCOMF",8,0)
 N I,DIR,DID,W,DIL,DIN1,DIN2,DIV1,DIV2,DIGL,DIDDN,DIO,DIV,DIT,DIOX,DITM,DIN,D1,D2
"RTN","XPDCOMF",9,0)
 K DIRUT
"RTN","XPDCOMF",10,0)
 S DIL=+DIFLAG
"RTN","XPDCOMF",11,0)
 I $G(DITCPT)'>DIL D
"RTN","XPDCOMF",12,0)
 .I DIDD S DITCPT(1)="ENTRIES IN FILE #"_DIDD_" ("_$P($G(^DIC(DIDD,0)),U)_")"
"RTN","XPDCOMF",13,0)
 .E  S X="" D  S DITCPT(1)="DATA DICTIONARY #"_$QS(DI2,1)_" ("_X_")"
"RTN","XPDCOMF",14,0)
 ..S I=$NA(@DI1,1) I '$D(@I@(0,"NM")) S I=$NA(@DI2,1)
"RTN","XPDCOMF",15,0)
 ..F  S X=X_$O(@I@(0,"NM",0)) Q:'$D(@I@(0,"UP"))  S X=X_" SUBFIELD" Q
"RTN","XPDCOMF",16,0)
 ;
"RTN","XPDCOMF",17,0)
 K ^UTILITY("DITCP",$J) S DIV=$D(^DD(DIDD,.001)),(DIOX,U)="^",IOM=$G(IOM,80)
"RTN","XPDCOMF",18,0)
 I '$D(@DI1) D  Q
"RTN","XPDCOMF",19,0)
 .S D1="{Missing}" I '$D(@DI2) S D2="{Also Missing}" D WB Q
"RTN","XPDCOMF",20,0)
 .I DIL#2 S D2="" D WB Q
"RTN","XPDCOMF",21,0)
 .S DIN2=$QS(DI2,$QL(DI2)),DIGL=0,DIN=1 D RIGHT(DI2)
"RTN","XPDCOMF",22,0)
 I '$D(@DI2) D  Q
"RTN","XPDCOMF",23,0)
 .I DIL#2 S D1="",D2="{Missing}" D WB Q
"RTN","XPDCOMF",24,0)
 .S DIGL=0,DIN=1,^UTILITY("DITCP",$J,"X1",DIDD,$QS(DI1,$QL(DI1)))=$P(@DI1@(0),U) G END
"RTN","XPDCOMF",25,0)
 I 'DIDD,DIL=1 D
"RTN","XPDCOMF",26,0)
 .N P,DITCPL F X=1,2 S Y=@("DI"_X),P=1,%="" D  S P(X)=P-1
"RTN","XPDCOMF",27,0)
 ..F  S %=$O(@Y@(0,"ID",%)) Q:%=""  S A=$S(+%=%:%,1:+$P(%,"WDI",2)) S:$D(@Y@(A,0))=1 DITCPL(X,P)=$S(A:$P($G(@Y@(A,0)),U),1:%_" (Display only)"),P=P+1
"RTN","XPDCOMF",28,0)
 .I DIFLAG'["L"!$D(DITCPL(1)) D DITCPL("IDENTIFIERS")
"RTN","XPDCOMF",29,0)
 .F P="DIC","ACT" K DITCPL M DITCPL(1,1)=@DI1@(0,P),DITCPL(2,1)=@DI2@(0,P) I DIFLAG'["L"!$D(DITCPL(1)) D DITCPL($S(P="DIC":"SPECIAL LOOKUP",1:"POST-SELECTION ACTION"))
"RTN","XPDCOMF",30,0)
S I DIL#2 S DIN1=$O(@DI1@(0)) K ^UTILITY("DITCP",$J,DIL) G ENTRY  ;WE ARE AT ROOT OF A (SUB)-FILE  FIND 1ST ENTRY ON LEFT SIDE
"RTN","XPDCOMF",31,0)
 S (DIN1,DIN2)=-1
"RTN","XPDCOMF",32,0)
 I DIL'<DIFLAG D  ;Build a header for this Entry
"RTN","XPDCOMF",33,0)
 .N D,O S D=$G(DIDD(DIL),DIDD),O=$G(@DI2@(0)) I D-.1 S O=$P(O,U,1,D=.11+1) ;For INDEX, take FILE + NAME field
"RTN","XPDCOMF",34,0)
 .I 'D S O="FIELD: "_O
"RTN","XPDCOMF",35,0)
 .E  S O=$O(^DD(D,0,"NM",0))_": "_$$EXTERNAL^DIDU(D,.01,,O) I D?1".4".N S D=$P($G(@DI1@(0)),U,4) S:D O=O_" (File "_D_")"
"RTN","XPDCOMF",36,0)
 .I DIV S O=O_" (#"_$QS(DI2,$QL(DI2))_")"
"RTN","XPDCOMF",37,0)
 .S DITCPT(DIL)=O
"RTN","XPDCOMF",38,0)
 G INPUT:DIDD=.402,SORT:DIDD=.401,PRINT:DIDD=.4
"RTN","XPDCOMF",39,0)
GET2D S DIN1=$O(@DI1@(DIN1)),DIN2=$O(@DI2@(DIN2))
"RTN","XPDCOMF",40,0)
 ;NOW CHECK IF WE'RE AT THE SAME NODE ON BOTH SIDES
"RTN","XPDCOMF",41,0)
NEXTD G END:$D(DIRUT) I DIN1=DIN2 G UP:DIN1="",D2:$D(@DI2@(DIN2))>9 S DIV2=@DI2@(DIN2),DIV1=@DI1@(DIN1) G GET2D:DIV2=DIV1 S DIN="",DIGL=DIN1 D  G GET2D
"RTN","XPDCOMF",42,0)
 .F  S DIN=$O(^DD(DIDD,"GL",DIGL,DIN)) Q:DIN=""!$D(DIRUT)  D
"RTN","XPDCOMF",43,0)
 ..I 'DIN S %X=+$E(DIN,2,9),%Y=$P(DIN,",",2),D2=$E(DIV2,%X,%Y),D1=$E(DIV1,%X,%Y)
"RTN","XPDCOMF",44,0)
 ..E  S D1=$P(DIV1,U,DIN),D2=$P(DIV2,U,DIN) I DIN=2,DIDD=0 S D1=$TR(D1,"a"),D2=$TR(D2,"a") ;SPECIFIER
"RTN","XPDCOMF",45,0)
 ..I D1'=D2 D:D1]""!(DIFLAG'["L") DIO12($$TITLE) Q
"RTN","XPDCOMF",46,0)
 .I DIGL=0,'DIDD,'$D(DIRUT) S D1=$P(DIV1,U,5,99),D2=$P(DIV2,U,5,99) Q:D1=D2  D DIO12($S($P(DIV1,U,2)["C":"COMPUTED EXPRESSION",1:"INPUT TRANSFORM")) Q
"RTN","XPDCOMF",47,0)
 D X G END:$D(DIRUT),NEXTD
"RTN","XPDCOMF",48,0)
 ;
"RTN","XPDCOMF",49,0)
D2 G ENTRY:DIL#2 S Y=$O(^DD(DIDD,"GL",DIN1,0,0)) ;DOWN TO A MULTIPLE FIELD
"RTN","XPDCOMF",50,0)
 I Y,$D(^DD(DIDD,+Y,0)) S Y=$P(^(0),U,2) I Y]"",Y-.15,$D(^DD(+Y,.01,0)) G WP:$P(^(0),U,2)["W" D DN S DIDD=+Y G S
"RTN","XPDCOMF",51,0)
 G GET2D
"RTN","XPDCOMF",52,0)
 ;
"RTN","XPDCOMF",53,0)
WP S X=$P(^(0),U),%Y=0
"RTN","XPDCOMF",54,0)
 F %X=0:0 S %X=$O(@DI1@(DIN1,%X)) Q:$D(^(+%X,0))[0  S I=^(0),%Y=$O(@DI2@(DIN2,%Y)) G WPD:$G(^(+%Y,0))'=I ;IS EVERY LINE IDENTICAL?
"RTN","XPDCOMF",55,0)
 G GET2D:'$O(@DI2@(DIN2,%Y))
"RTN","XPDCOMF",56,0)
WPD D SUBHD W !?IOM-$L(X)\2,X,"..."
"RTN","XPDCOMF",57,0)
 G GET2D
"RTN","XPDCOMF",58,0)
 ;
"RTN","XPDCOMF",59,0)
 ;^UTILITY("DITCP",$J,"X1",DIDD,DIN1) = new entry
"RTN","XPDCOMF",60,0)
 ;^UTILITY("DITCP",$J,"X2",DIDD,DIN1) = KIDS will delete
"RTN","XPDCOMF",61,0)
ENTRY S DIGL=0,DIN=1 G NEXTENT:'$D(@DI1@(+DIN1,0)) S X=$P(^(0),U)
"RTN","XPDCOMF",62,0)
 ;check if we are comparing to KIDS
"RTN","XPDCOMF",63,0)
 I $E(DI1,1,12)="^XTMP(""XPDI""" D  G NEXTENT:Y
"RTN","XPDCOMF",64,0)
 .;check KIDS action,(0,3)=continue processing
"RTN","XPDCOMF",65,0)
 .S Y=+$G(@DI1@(+DIN1,-1)) I Y=3!'Y S Y=0 Q
"RTN","XPDCOMF",66,0)
 .;delete: save & goto next entry
"RTN","XPDCOMF",67,0)
 .I Y=1 S ^UTILITY("DITCP",$J,"X2",DIDD,DIN1)=X
"RTN","XPDCOMF",68,0)
 .Q
"RTN","XPDCOMF",69,0)
 I DIDD=.11,$G(DITCPIF),DITCPIF-X G NEXTENT ;Skip INDEXes not for this DD
"RTN","XPDCOMF",70,0)
 S DIV=$D(^DD(DIDD,.001)) G UP:DIDD=.4032!(DIDD=19.01) ;for now, give up matching BLOCKS or MENUS
"RTN","XPDCOMF",71,0)
 I DIDD=.1 S DIN2=+DIN1,X=@DI1@(DIN1,0) G NEW:'$D(@DI2@(DIN2,0)),NEW:^(0)'=X,OLD ;CROSS-REFERENCE matches on entire 0 node
"RTN","XPDCOMF",72,0)
BIX I $P($G(@DI2@(DIN1,0)),U)=X S DIN2=DIN1 G OLD:$$MATCH,NEW:DIV
"RTN","XPDCOMF",73,0)
 S DIN2=0 I '$D(^DD(DIDD,0,"IX","B",DIDD,.01)) F  S DIN2=$O(@DI2@(DIN2)) G NEW:DIN2'>0 I $P($G(^(DIN2,0)),U)=X G OLD:$$MATCH
"RTN","XPDCOMF",74,0)
BI S DIN2=$O(@DI2@("B",$E(X,1,30),DIN2)) G NEW:'DIN2 I $D(@DI2@(DIN2,0)),$P(^(0),X)="" G OLD:$$MATCH ;COMPARE BY NAME
"RTN","XPDCOMF",75,0)
 G BI
"RTN","XPDCOMF",76,0)
 ;
"RTN","XPDCOMF",77,0)
NEW S ^UTILITY("DITCP",$J,"X1",DIDD,DIN1)=X ;WILL SHOW EXTRA ENTRY ON LEFT SIDE
"RTN","XPDCOMF",78,0)
NEXTENT S DIN1=$O(@DI1@(DIN1))
"RTN","XPDCOMF",79,0)
N2 I DIN1 G ENTRY
"RTN","XPDCOMF",80,0)
 I DIFLAG'["L" F DIN2=0:0 S DIN2=$O(@DI2@(DIN2)) Q:'DIN2  Q:+DIN2'=DIN2  I '$D(^UTILITY("DITCP",$J,DIL,DIN2)) D RIGHT($NA(@DI2@(DIN2))) Q:$D(DIRUT)
"RTN","XPDCOMF",81,0)
 G END:$D(DIRUT),UP
"RTN","XPDCOMF",82,0)
 ; 
"RTN","XPDCOMF",83,0)
RIGHT(X) Q:'$D(@X@(0))#2  I DIDD=.11,$G(DITCPIF),DITCPIF-^(0) Q
"RTN","XPDCOMF",84,0)
 D XTRAM($P(^(0),U,1,$S(DIDD=.1:99,1:1)),2) Q  ;If X-REF, compare entire node
"RTN","XPDCOMF",85,0)
 ;
"RTN","XPDCOMF",86,0)
 ;DID=title, X: 1=left,2=right, P=prefix to title
"RTN","XPDCOMF",87,0)
XTRAM(DID,X,P) Q:DIDD=.15  ;FORGET TRIGGERED-BY
"RTN","XPDCOMF",88,0)
 F I=DIL+(DIL#2):1 K DITCPT(I) I $O(DITCPT(I))="" Q  ;S:$G(DITCPT)>(I-1) DITCPT=I-1 B:DIDD=8994  Q
"RTN","XPDCOMF",89,0)
 I DIDD=.11 S DID="@DI"_X_"@(DIN"_X_",0)",DID=$P(@DID,U,2,3)
"RTN","XPDCOMF",90,0)
 S DIDDN=$S(DIDD:$O(^DD(DIDD,0,"NM","")),1:"FIELD")_$S(DIV:" #"_@("DIN"_X),$D(^DIC(DIDD)):"",1:" Multiple")_": ",Y=^DD(DIDD,.01,0)
"RTN","XPDCOMF",91,0)
 S:$G(P)]"" DIDDN=P_DIDDN
"RTN","XPDCOMF",92,0)
 D DIT,DIO
"RTN","XPDCOMF",93,0)
 Q
"RTN","XPDCOMF",94,0)
 ;
"RTN","XPDCOMF",95,0)
 ;
"RTN","XPDCOMF",96,0)
 ;
"RTN","XPDCOMF",97,0)
 ;
"RTN","XPDCOMF",98,0)
MATCH() I DIV,DIN1'=DIN2 Q 0 ;DO ENTRIES MATCH?  NOT IF NUMBERS DON'T AND IT'S NUMBER-MEANINGFUL
"RTN","XPDCOMF",99,0)
 I $D(^UTILITY("DITCP",$J,DIL,DIN2)) Q 0 ;We already matched this one
"RTN","XPDCOMF",100,0)
 I DIDD=.11 Q '$$MISMATCH(.02) ;INDEX must match on NAME
"RTN","XPDCOMF",101,0)
 I DIDD=.403 Q '$$MISMATCH(7) ;FORM must match on PRIMARY FILE
"RTN","XPDCOMF",102,0)
 I DIDD=.4!(DIDD=.401)!(DIDD=.402) Q '$$MISMATCH(4) ;TEMPLATES must match on FILE
"RTN","XPDCOMF",103,0)
 I DIDD=19 Q 1 ;OPTION matches on NAME alone
"RTN","XPDCOMF",104,0)
 S DITM=.01
"RTN","XPDCOMF",105,0)
I S DITM=$O(^DD(DIDD,0,"ID",DITM)) I DITM="" Q 1
"RTN","XPDCOMF",106,0)
 S I=DITM S:I?1"W"1.NP I=$E(I,2,99) I $$MISMATCH(I) Q 0 ;MATCH EACH NON-NULL IDENTIFIER
"RTN","XPDCOMF",107,0)
 G I
"RTN","XPDCOMF",108,0)
 ;
"RTN","XPDCOMF",109,0)
MISMATCH(I) K B I '$D(^DD(DIDD,I,0)) Q 0
"RTN","XPDCOMF",110,0)
 D  Q:W="" 0 S B=W Q:'$D(^DD(DIDD,I,0)) 0 D  Q:W="" 0 Q W'=B ;If two non-null values aren't equal it's a mismatch
"RTN","XPDCOMF",111,0)
 .S A=$P(^(0),U,4),%=$P(A,";",2),W=$P(A,";"),A=$S($D(B):DI2,1:DI1) I W?." " S W="" Q
"RTN","XPDCOMF",112,0)
 .I $D(@A@($S($D(B):DIN2,1:DIN1),W))[0 S W="" Q
"RTN","XPDCOMF",113,0)
 .I % S W=$P(^(W),U,%)
"RTN","XPDCOMF",114,0)
 .E  S W=$E(^(W),+$E(%,2,9),$P(%,",",2))
"RTN","XPDCOMF",115,0)
 .S:W?.E1L.E W=$$UP^DILIBF(W)
"RTN","XPDCOMF",116,0)
 ;
"RTN","XPDCOMF",117,0)
OLD S ^UTILITY("DITCP",$J,DIL,DIN2)="" ;Remember that we found DIN2 as a match
"RTN","XPDCOMF",118,0)
 D DN G S
"RTN","XPDCOMF",119,0)
 ;
"RTN","XPDCOMF",120,0)
 ;
"RTN","XPDCOMF",121,0)
DN S DIDD(DIL)=DIDD
"RTN","XPDCOMF",122,0)
 N X,%X F X=1,2 S %X=@("DIN"_X),(W,W(X,DIL))=@("DI"_X),W=$NA(@W@(%X)),@("DI"_X)=W  ;ADD A SUBSCRIPT
"RTN","XPDCOMF",123,0)
 S DIL=DIL+1 Q
"RTN","XPDCOMF",124,0)
 ;
"RTN","XPDCOMF",125,0)
UP ;
"RTN","XPDCOMF",126,0)
 G END:'$D(W(2,DIL-1))
"RTN","XPDCOMF",127,0)
 S DIN1=$O(@DI1) I DIL#2=0 S:$G(DITCPT)>DIL DITCPT=DIL D U G N2
"RTN","XPDCOMF",128,0)
 D LEFT Q:$D(DIRUT)  S DIN2=$O(@DI2),DIDD=DIDD(DIL-1)
"RTN","XPDCOMF",129,0)
 D U G NEXTD
"RTN","XPDCOMF",130,0)
U S (DIL,Y)=DIL-1,DI1=W(1,Y),DI2=W(2,Y)
"RTN","XPDCOMF",131,0)
 Q
"RTN","XPDCOMF",132,0)
 ;
"RTN","XPDCOMF",133,0)
 ;
"RTN","XPDCOMF",134,0)
2 ;
"RTN","XPDCOMF",135,0)
X G XTRA1:DIN2="",XTRA2:DIN1="" I +DIN1=DIN1 G XTRA1:+DIN2'=DIN2!(DIN2>DIN1),XTRA2
"RTN","XPDCOMF",136,0)
 G XTRA2:+DIN2=DIN2!(DIN1]DIN2)
"RTN","XPDCOMF",137,0)
XTRA1 S X=1,DIGL=DIN1
"RTN","XPDCOMF",138,0)
 D XTRA S DIN1=$O(@DI1@(DIN1)) Q
"RTN","XPDCOMF",139,0)
XTRA2 S X=2,DIGL=DIN2 D:DIFLAG'["L" XTRA S DIN2=$O(@DI2@(DIN2)) Q
"RTN","XPDCOMF",140,0)
 ;
"RTN","XPDCOMF",141,0)
XTRA S DIR="@DI"_X_"@(DIGL)" I $D(@DIR)<9 S DIN="",DIV=@DIR G GL
"RTN","XPDCOMF",142,0)
 S I=$O(^(DIGL,0)) Q:'I  S I=$O(^(I)),DIN=$O(^DD(DIDD,"GL",DIGL,0,0)) Q:$D(^DD(DIDD,+DIN,0))[0
"RTN","XPDCOMF",143,0)
 S DIDDN=$P(^(0),U)_$S($P(^DD(+$P(^(0),U,2),.01,0),U,2)["W":"...",1:" Multiple"_$E("s",I>0)),(DID,DIT)="" D DIO S DIOX=0 Q
"RTN","XPDCOMF",144,0)
 ;
"RTN","XPDCOMF",145,0)
GL S DIN=$O(^DD(DIDD,"GL",DIGL,DIN)) Q:DIN=""  S Y=$O(^(DIN,0)) G GL:'$D(^DD(DIDD,+Y,0)) S DIO=$P(^(0),U)_": "
"RTN","XPDCOMF",146,0)
 I DIN S DID=$P(DIV,U,DIN) G:DID="" GL:$P(DIV,U,DIN,999)]"",Q
"RTN","XPDCOMF",147,0)
 E  S DID=$E(DIV,+$E(DIN,2,9),$P(DIN,",",2)) Q:DID?." "
"RTN","XPDCOMF",148,0)
 S DIDDN=$$TITLE G GL:DIDDN="" S DIDDN=DIDDN_": "
"RTN","XPDCOMF",149,0)
 D DIO G GL:'$D(DIRUT)
"RTN","XPDCOMF",150,0)
END D LEFT
"RTN","XPDCOMF",151,0)
 K ^UTILITY("DITCP",$J) Q:$D(DIRUT)  I 'DIDD,DIFLAG#2 N DITCPIF,DIDD D  G ENTRY ;INDEXES for File #DITCPIF
"RTN","XPDCOMF",152,0)
 .S DITCPIF=$QS(DI1,1),DIDD=.11,DI1=$NA(@DI1,0)_"(""IX"")",DI2=$NA(@DI2,0)_"(""IX"")",(DIN1,DIN2)=0
"RTN","XPDCOMF",153,0)
Q Q
"RTN","XPDCOMF",154,0)
 ;
"RTN","XPDCOMF",155,0)
 ;
"RTN","XPDCOMF",156,0)
 ;
"RTN","XPDCOMF",157,0)
LEFT ;display left side; "X1" subscript, these are new records
"RTN","XPDCOMF",158,0)
 N DIN1
"RTN","XPDCOMF",159,0)
 F DIN1=0:0 S DIN1=$O(^UTILITY("DITCP",$J,"X1",DIDD,DIN1)) Q:'DIN1  D XTRAM(^(DIN1),1,"*ADD* ") K ^UTILITY("DITCP",$J,"X1",DIDD,DIN1) Q:$D(DIRUT)
"RTN","XPDCOMF",160,0)
 ;"X2" subscript, these are KIDS delete records
"RTN","XPDCOMF",161,0)
 Q:'$D(^UTILITY("DITCP",$J,"X2",DIDD))
"RTN","XPDCOMF",162,0)
 F DIN1=0:0 S DIN1=$O(^UTILITY("DITCP",$J,"X2",DIDD,DIN1)) Q:'DIN1  D XTRAM(^(DIN1),1,"*DELETE* ") K ^UTILITY("DITCP",$J,"X2",DIDD,DIN1) Q:$D(DIRUT)
"RTN","XPDCOMF",163,0)
 Q
"RTN","XPDCOMF",164,0)
 ;
"RTN","XPDCOMF",165,0)
 ;
"RTN","XPDCOMF",166,0)
TITLE() S Y=$$FLDNUM I '$D(^DD(DIDD,+Y,0)) Q "" ;decide whether this FIELD is interesting
"RTN","XPDCOMF",167,0)
 I $O(^(5,0)) Q "" ;Forget TRIGGERED FIELDS! (INTERESTING!)
"RTN","XPDCOMF",168,0)
 I DIDD=.403,Y'>5 Q ""
"RTN","XPDCOMF",169,0)
 I DIDD=19,DIGL\1=99!(Y=3.6) Q ""
"RTN","XPDCOMF",170,0)
 I 'DIDD,Y=50!(DIGL="DT")!(DIGL=8)!(DIGL=8.5)!(DIGL=9)!(Y=1.1) Q ""
"RTN","XPDCOMF",171,0)
 I 'DIDD,Y=.3,$G(DIV1)[":" Q "SET OF CODES" ;INSTEAD OF "POINTER"
"RTN","XPDCOMF",172,0)
 S Y=^DD(DIDD,+Y,0) D DIT Q $P(Y,U)
"RTN","XPDCOMF",173,0)
 ;
"RTN","XPDCOMF",174,0)
FLDNUM() I DIN]"" Q $O(^DD(DIDD,"GL",DIGL,DIN,0))
"RTN","XPDCOMF",175,0)
 Q 0
"RTN","XPDCOMF",176,0)
 ;
"RTN","XPDCOMF",177,0)
DIT ;
"RTN","XPDCOMF",178,0)
 S DIT=$P(Y,U,2),I=$P(Y,U,3) Q
"RTN","XPDCOMF",179,0)
 ;
"RTN","XPDCOMF",180,0)
EXT(X) I X]"" N A S A=X,X=$$EXTERNAL^DIDU(DIDD,$$FLDNUM,,X) S:X="" X=A
"RTN","XPDCOMF",181,0)
 Q X
"RTN","XPDCOMF",182,0)
 ;
"RTN","XPDCOMF",183,0)
 ;
"RTN","XPDCOMF",184,0)
DIO ;X=1 MEANS LEFT SIDE, X=2 MEANS RIGHT SIDE
"RTN","XPDCOMF",185,0)
 ;DID=WHAT WE HAVE TO PRINT
"RTN","XPDCOMF",186,0)
 S DIOX=$Y D SUBHD Q:$D(DIRUT)  S DIO=DIDDN_$$EXT(DID)
"RTN","XPDCOMF",187,0)
DIO1 ;DIO IS OUTPUT
"RTN","XPDCOMF",188,0)
 I X=1 S DIOX(1)=DIDDN D LF
"RTN","XPDCOMF",189,0)
 Q:$D(DIRUT)
"RTN","XPDCOMF",190,0)
 I X=2 D:$S(DIOX-1:1,'$D(DIOX(1)):1,1:$P(DIO,DIOX(1))]"") LF Q:$D(DIRUT)  W ?IOM\2 K DIOX(1)
"RTN","XPDCOMF",191,0)
 W !,$J("",DIL),$E(DIO,1,IOM\2-DIL-1) S DIO=$E(DIO,IOM\2-DIL,999) I $L(DIO)<$S(X=1:17,X=2:2) W DIO S DIOX=X Q  ;WRITE A LITTLE MORE THAN HALF A LINE
"RTN","XPDCOMF",192,0)
 S DIOX=0 G DIO1
"RTN","XPDCOMF",193,0)
 ;
"RTN","XPDCOMF",194,0)
 ;
"RTN","XPDCOMF",195,0)
DIO12(T) ;WRITE D1 AND D2 SIDE BY SIDE
"RTN","XPDCOMF",196,0)
 N D,V
"RTN","XPDCOMF",197,0)
 Q:D1=D2!(T="") 
"RTN","XPDCOMF",198,0)
 F D=1,2 D
"RTN","XPDCOMF",199,0)
 .S V="D"_D Q:@V=""
"RTN","XPDCOMF",200,0)
 .S @V=T_": "_$$EXT(@V)
"RTN","XPDCOMF",201,0)
 Q:D1=D2  ;EXTERNAL VERSIONS MAY BE SAME
"RTN","XPDCOMF",202,0)
WB D SUBHD
"RTN","XPDCOMF",203,0)
 F  Q:D1=""&(D2="")  D LF Q:$D(DIRUT)  F D=1,2 S X="D"_D W:D=2 ?IOM\2 W $J("",DIL),$E(@X,1,IOM\2-DIL-1) S @X=$E(@X,IOM\2-DIL,999)
"RTN","XPDCOMF",204,0)
 Q
"RTN","XPDCOMF",205,0)
 ;
"RTN","XPDCOMF",206,0)
 ;
"RTN","XPDCOMF",207,0)
SUBHD ;
"RTN","XPDCOMF",208,0)
 N Y,L S Y=$O(DITCPT("")) Q:Y=""
"RTN","XPDCOMF",209,0)
 I $G(DITCPT) S L=DITCPT
"RTN","XPDCOMF",210,0)
 E  S L=Y F Y=$G(DIL):-1:Y D LF G Q:$D(DIRUT)
"RTN","XPDCOMF",211,0)
 F  Q:L>$G(DIL)!$D(DIRUT)  D LF Q:$D(DIRUT)  W:$D(DITCPT(L)) ?IOM-$L(DITCPT(L))\2,DITCPT(L) S L=L+1
"RTN","XPDCOMF",212,0)
 K DITCPT S DITCPT=L-1 Q  ;REMEMBER HOW DEEP WE WERE AT LAST OUTPUT
"RTN","XPDCOMF",213,0)
 ;
"RTN","XPDCOMF",214,0)
 ;
"RTN","XPDCOMF",215,0)
LF W ! Q:$Y+3<IOSL!$D(DIRUT)
"RTN","XPDCOMF",216,0)
 D:$E($G(IOST),1,2)="C-"
"RTN","XPDCOMF",217,0)
 .N DIR,X,Y
"RTN","XPDCOMF",218,0)
 .S DIR(0)="E" W ! D ^DIR S $Y=0
"RTN","XPDCOMF",219,0)
 I '$D(DIRUT) W @IOF
"RTN","XPDCOMF",220,0)
 Q
"RTN","XPDCOMF",221,0)
 ;
"RTN","XPDCOMF",222,0)
INPUT I $T(GET^DIETED)="" Q
"RTN","XPDCOMF",223,0)
 N DITCPL F DITCPL=1,2 D GET^DIETED($NA(DITCPL(DITCPL)),@("DI"_DITCPL))
"RTN","XPDCOMF",224,0)
 D DITCPL("EDIT FIELDS") G UP
"RTN","XPDCOMF",225,0)
 ;
"RTN","XPDCOMF",226,0)
SORT Q
"RTN","XPDCOMF",227,0)
 ;
"RTN","XPDCOMF",228,0)
PRINT Q
"RTN","XPDCOMF",229,0)
 ;
"RTN","XPDCOMF",230,0)
DITCPL(H) D EN^XPDCOML("DITCPL(1)","DITCPL(2)",H)
"RTN","XPDCOMF",231,0)
 Q
"RTN","XPDCOMG")
0^2^B8227835^B14114977
"RTN","XPDCOMG",1,0)
XPDCOMG ;SFISC/RSD - compare globals ;08/14/2008
"RTN","XPDCOMG",2,0)
 ;;8.0;KERNEL;**304,506**;Jul 10, 1995;Build 11
"RTN","XPDCOMG",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDCOMG",4,0)
EN D IX,FIA:'$D(DIRUT),KRN:'$D(DIRUT)
"RTN","XPDCOMG",5,0)
 Q
"RTN","XPDCOMG",6,0)
 ;
"RTN","XPDCOMG",7,0)
IX ;FileMan new style cross-references
"RTN","XPDCOMG",8,0)
 N XPDF,XPDF2,XPDFN
"RTN","XPDCOMG",9,0)
 F XPDF=0:0 S XPDF=$O(^XTMP("XPDI",XPDA,"IX",XPDF)) Q:'XPDF  F XPDF2=0:0 S XPDF2=$O(^XTMP("XPDI",XPDA,"IX",XPDF,XPDF2)) Q:'XPDF2  D
"RTN","XPDCOMG",10,0)
 .S XPDFN="" F  S XPDFN=$O(^XTMP("XPDI",XPDA,"IX",XPDF,XPDF2,XPDFN)) Q:XPDFN=""!$D(DIRUT)  D
"RTN","XPDCOMG",11,0)
 ..K ^TMP($J) M ^TMP($J,1)=^XTMP("XPDI",XPDA,"IX",XPDF,XPDF2,XPDFN)
"RTN","XPDCOMG",12,0)
 ..D DASHES,EN^XPDCOMF($NA(^TMP($J)),$NA(^DD("IX")),.11,"1L",.DITCPT)
"RTN","XPDCOMG",13,0)
 ..Q
"RTN","XPDCOMG",14,0)
 Q
"RTN","XPDCOMG",15,0)
 ;
"RTN","XPDCOMG",16,0)
FIA ;FileMan DD and Data
"RTN","XPDCOMG",17,0)
 N DIC,OLDA,XPDFIL,XPDFILO,XPDFILS,XPDS,XPDS0,XPDX,XPDX0,XPDY,XPDY1,XPDZ,XPDZ1,X,Y
"RTN","XPDCOMG",18,0)
 S XPDFIL=0
"RTN","XPDCOMG",19,0)
 F  S XPDFIL=$O(^XTMP("XPDI",XPDA,"FIA",XPDFIL)) Q:'XPDFIL!$D(DIRUT)  S XPDZ1=^(XPDFIL,0),XPDFILO=^(0,1) D
"RTN","XPDCOMG",20,0)
 .I '$D(^DIC(XPDFIL)) W !!," File # ",XPDFIL," is NEW",! Q
"RTN","XPDCOMG",21,0)
 .S XPDZ="^XTMP(""XPDI"","_XPDA,XPDY=XPDZ_",""^DIC"","_XPDFIL_","_XPDFIL_",0",XPDX=XPDY_")"
"RTN","XPDCOMG",22,0)
 .S XPDY=XPDY_",",XPDY1="^DIC("_XPDFIL_",0",XPDS=XPDY1_")",XPDY1=XPDY1_","
"RTN","XPDCOMG",23,0)
 .I $P(XPDFILO,U)="y" D
"RTN","XPDCOMG",24,0)
 ..;W !!,XPDUL," File # ",XPDFIL," Data Dictionary "
"RTN","XPDCOMG",25,0)
 ..S XPDFILS=0 F  S XPDFILS=$O(^XTMP("XPDI",XPDA,"^DD",XPDFIL,XPDFILS)) Q:'XPDFILS  D
"RTN","XPDCOMG",26,0)
 ...S XPDY=XPDZ_",""^DD"","_XPDFIL_","_XPDFILS,XPDX=XPDY_")",XPDY=XPDY_",",XPDY1="^DD("_XPDFILS,XPDS=XPDY1_")",XPDY1=XPDY1_","
"RTN","XPDCOMG",27,0)
 ...D DASHES,EN^XPDCOMF(XPDX,XPDS,0,"1L",.DITCPT)
"RTN","XPDCOMG",28,0)
 ...Q
"RTN","XPDCOMG",29,0)
 ..Q
"RTN","XPDCOMG",30,0)
 .;check Data in file
"RTN","XPDCOMG",31,0)
 .Q:'$D(^XTMP("XPDI",XPDA,"DATA",XPDFIL))
"RTN","XPDCOMG",32,0)
 .D DASHES,EN^XPDCOMF($NA(^(XPDFIL)),$$CREF^DIQGU(^DIC(XPDFIL,0,"GL")),XPDFIL,"1L",.DITCPT)
"RTN","XPDCOMG",33,0)
 W ! Q
"RTN","XPDCOMG",34,0)
 ;
"RTN","XPDCOMG",35,0)
KRN ;Kernel Components
"RTN","XPDCOMG",36,0)
 N DEL,DIC,OLDA,ORD,X,XPDFIL,XPDFILNM,XPDI,XPDS,XPDS0,XPDX,XPDX0,XPDY,XPDY1,XPDZ,XPDZ1,Y
"RTN","XPDCOMG",37,0)
 S ORD=0
"RTN","XPDCOMG",38,0)
 F  S ORD=$O(^XTMP("XPDI",XPDA,"ORD",ORD)) Q:'ORD!$D(DIRUT)  S XPDFIL=+$O(^(ORD,0)),XPDFILNM=$G(^(XPDFIL,0)) D:XPDFIL
"RTN","XPDCOMG",39,0)
 .I $P($G(^DIC(XPDFIL,0)),U)'=XPDFILNM W !!," File "_XPDFIL_" is not "_XPDFILNM_", nothing can be installed.",! Q
"RTN","XPDCOMG",40,0)
 .D DASHES,EN^XPDCOMF($NA(^XTMP("XPDI",XPDA,"KRN",XPDFIL)),$$CREF^DIQGU(^DIC(XPDFIL,0,"GL")),XPDFIL,"1L",.DITCPT)
"RTN","XPDCOMG",41,0)
 .Q
"RTN","XPDCOMG",42,0)
 Q
"RTN","XPDCOMG",43,0)
 ;
"RTN","XPDCOMG",44,0)
DASHES K DITCPT S DITCPT(0)=XPDUL
"RTN","XPDCOMG",45,0)
 Q
"RTN","XPDCOMG",46,0)
 ;
"RTN","XPDCOML")
0^4^B8752451^n/a
"RTN","XPDCOML",1,0)
XPDCOML ;SFISC/GFT -COMPARE TWO LISTS, LEFT/RIGHT ;08/14/2008
"RTN","XPDCOML",2,0)
 ;;8.0;KERNEL;**506**;Jul 10, 1995;Build 11
"RTN","XPDCOML",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDCOML",4,0)
 ;
"RTN","XPDCOML",5,0)
EN(LEFT,RIGHT,HEADER) ;
"RTN","XPDCOML",6,0)
 N WINDOW S WINDOW=30 ;HOW FAR TO LOOK AHEAD
"RTN","XPDCOML",7,0)
 N SHORT S SHORT=7 ;SHORTEST LINE LENGTH TO COMPARE
"RTN","XPDCOML",8,0)
 N DI S DI(1)=LEFT,DI(2)=RIGHT
"RTN","XPDCOML",9,0)
 N H S H=2
"RTN","XPDCOML",10,0)
 N L1,L2,E1,E2,C,S,V1,V2,X,Z,Y,I,G,J,K,L,IFN,IFE,IFP
"RTN","XPDCOML",11,0)
 S E1=$O(@DI(1)@(""),-1),E2=$O(@DI(2)@(""),-1) ;FIND BOTTOM OF ARRAYS TO BE COMPARED
"RTN","XPDCOML",12,0)
 S S="",C=IOM-2/2\1,(L1,L2)=0
"RTN","XPDCOML",13,0)
D S L1=L1+1,L2=L2+1 I L1>E1!(L2>E2) D  Q  ;Grab two new lines.  If we can't WE'RE AT END
"RTN","XPDCOML",14,0)
 .F I=L2:1:E2 S X=$$GET(2,I),Z=1,G=I D W2(1)
"RTN","XPDCOML",15,0)
 .F I=L1:1:E1 S X=$$GET(1,I),Z=1,G=I D W1
"RTN","XPDCOML",16,0)
 G:$$GET(1,L1)=$$GET(2,L2) D  ;If lines are equal, go get two more
"RTN","XPDCOML",17,0)
 S V1=$$GET(1,L1),(IFE,IFP,IFN)=""
"RTN","XPDCOML",18,0)
 F I=L2:1:L2+WINDOW Q:I>E2  S V2=$$GET(2,I) D PARTIAL G D:IFE Q:IFN  ;MOVE DOWN RIGHT SIDE TO FIND MATCH FOR 'V1'
"RTN","XPDCOML",19,0)
 I $$GET(1,L1+1)=$$GET(2,L2+1),$$GET(1,L1+2)=$$GET(2,L2+2)!($L($$GET(1,L1))>SHORT) D SBS(L1,L2) G D
"RTN","XPDCOML",20,0)
 S Z=1,G=L1,X=V1 D W1 S L2=L2-1
"RTN","XPDCOML",21,0)
 G D
"RTN","XPDCOML",22,0)
 ;
"RTN","XPDCOML",23,0)
GET(RL,LINE) ;RETURNS RIGHT OR LEFT LINE
"RTN","XPDCOML",24,0)
 I $D(@DI(RL)@(LINE))=1 Q $$STRIP(@DI(RL)@(LINE))
"RTN","XPDCOML",25,0)
 I $D(@DI(RL)@(LINE,0)) Q $$STRIP(@DI(RL)@(LINE,0)_$G(@DI(RL)@(LINE,"OVF",1)))
"RTN","XPDCOML",26,0)
 Q ""
"RTN","XPDCOML",27,0)
STRIP(X) F  Q:X'?.E1" "  S X=$E(X,1,$L(X)-1) ;Take off trailing spaces
"RTN","XPDCOML",28,0)
 Q X
"RTN","XPDCOML",29,0)
 ;
"RTN","XPDCOML",30,0)
PARTIAL F K=1:5:26 Q:$L($E(V2,K,K+10))<SHORT  I $F(V1,$E(V2,K,K+10)) S IFP=1 G E1
"RTN","XPDCOML",31,0)
 Q
"RTN","XPDCOML",32,0)
E1 ;Go down to line I on rt side
"RTN","XPDCOML",33,0)
 D HEAD
"RTN","XPDCOML",34,0)
 F J=L2:1:I S X=$$GET(2,J) I X'?.P,$L(X)'<SHORT F Y=L1+1:1:$S(L1+WINDOW<E1:L1+WINDOW,1:E1) I $$GET(1,Y)=X S IFN=1 G Q  ;Look down on the left side!
"RTN","XPDCOML",35,0)
 F L2=L2:1 Q:L2=I  S X=$$GET(2,L2),Z=1,G=L2 D W2(1) ;Write out extras on RIGHT
"RTN","XPDCOML",36,0)
 S:V1=V2 IFE=1 D:'IFE SBS(L1,L2)
"RTN","XPDCOML",37,0)
Q Q
"RTN","XPDCOML",38,0)
 ;
"RTN","XPDCOML",39,0)
 ;
"RTN","XPDCOML",40,0)
SBS(L1,L2) ;SIDE BY SIDE PRINT
"RTN","XPDCOML",41,0)
 N S1,S2
"RTN","XPDCOML",42,0)
 S S1=$$GET(1,L1),S2=$$GET(2,L2),Z=1,L=0
"RTN","XPDCOML",43,0)
 F K=1:1 S X=$E(S1,1,C-5) S:K=1 G=L1 D W1 S Y=X,X=$E(S2,1,C-5) S:K=1 G=L2,Z=1 D W2(0) S S1=$E(S1,C-4,255),S2=$E(S2,C-4,255) D:X'=Y&$D(S)&(L=0)  I $L(S1)+$L(S2)=0 S IFE=1 Q
"RTN","XPDCOML",44,0)
 .F L=1:1:$L(X) I $E(X,L)'=$E(Y,L) W !?L+3,"^",?L+C+4,"^" Q
"RTN","XPDCOML",45,0)
 Q
"RTN","XPDCOML",46,0)
 ;
"RTN","XPDCOML",47,0)
 ;
"RTN","XPDCOML",48,0)
W1 ;WRITE LEFT SIDE, line G
"RTN","XPDCOML",49,0)
 D HEAD F  W ! Q:'$L(X)  W $S(Z:$J(G,3),1:"   "),"{",$E(X,1,C-5),$C(125) S Z=0 Q:$L(X)<(C-4)  S X=$E(X,C-4,999)
"RTN","XPDCOML",50,0)
 Q
"RTN","XPDCOML",51,0)
 ;
"RTN","XPDCOML",52,0)
W2(DITCPLLF) ;WRITE RIGHT SIDE, line G
"RTN","XPDCOML",53,0)
 D HEAD F  W:DITCPLLF ! Q:'$L(X)  W ?C+1 W $S(Z:$J(G,3),1:"   "),"{",$E(X,1,C-5),$C(125) S Z=0 Q:$L(X)<(C-4)  S X=$E(X,C-4,999)
"RTN","XPDCOML",54,0)
 Q
"RTN","XPDCOML",55,0)
 ;
"RTN","XPDCOML",56,0)
HEAD ;If we haven't written subheader, do so
"RTN","XPDCOML",57,0)
 S:H=2 H=0 Q:H'=0  D SUBHD^XPDCOMF
"RTN","XPDCOML",58,0)
 W !,?IOM-$L(HEADER)\2,HEADER
"RTN","XPDCOML",59,0)
 S H=1,XPDHEAD=1
"RTN","XPDCOML",60,0)
 Q
"RTN","XPDIJ")
0^6^B23600088^B20798007
"RTN","XPDIJ",1,0)
XPDIJ ;SFISC/RSD - Install Job ;08/14/2008
"RTN","XPDIJ",2,0)
 ;;8.0;KERNEL;**2,21,28,41,44,68,81,95,108,124,229,275,506**;Jul 10, 1995;Build 11
"RTN","XPDIJ",3,0)
 ;Per VHA Directive  2004-038, this routine should not be modified.
"RTN","XPDIJ",4,0)
EN ;install all packages
"RTN","XPDIJ",5,0)
 ;XPDA=ien of first package
"RTN","XPDIJ",6,0)
 ;this is needed to restore XPDIJ1
"RTN","XPDIJ",7,0)
 D LNRF("XPDUTL") ;p275 SAVE calls RTNLOG^XPDUTL
"RTN","XPDIJ",8,0)
 D LNRF("XPDIJ1") ;See that XPDIJ1 is loaded befor it is called
"RTN","XPDIJ",9,0)
 N IEN,XPDI,XPD0,XPDSET,XPDABORT,XPDMENU,XPDQUIT,XPDVOL,X,Y,ZTRTN,ZTDTH,ZTIO,ZTDESC,ZTSK
"RTN","XPDIJ",10,0)
 M X=DUZ N DUZ M DUZ=X S DUZ(0)="@" ;See that install has full FM priv.
"RTN","XPDIJ",11,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^XPDIJ"
"RTN","XPDIJ",12,0)
 E  S X="ERR^XPDIJ",@^%ZOSF("TRAP")
"RTN","XPDIJ",13,0)
 Q:'$D(^XPD(9.7,+$G(XPDA),0))  S XPD0=^(0)
"RTN","XPDIJ",14,0)
 D INIT^XPDID
"RTN","XPDIJ",15,0)
 ;See if need to Inhibit Logons
"RTN","XPDIJ",16,0)
 I $$ANSWER^XPDIQ("XPI1") D INHIBIT^XPDIJ1("Y")
"RTN","XPDIJ",17,0)
 ;disable options & protocols for setname, XPDSET=1/0^setname^out of order msg.
"RTN","XPDIJ",18,0)
 S Y=$P(XPD0,U,8),XPDSET=+Y_U_$E(Y,2,99)_U_$S($L(Y):$P($G(^XTMP("XQOO",$E(Y,2,99),0)),U),1:"")
"RTN","XPDIJ",19,0)
 ;hang the number of seconds given in 0;10
"RTN","XPDIJ",20,0)
 I XPDSET D OFF^XQOO1($P(XPDSET,U,2)) I $P(XPD0,U,10) H ($P(XPD0,U,10)*60)
"RTN","XPDIJ",21,0)
 S Y=0
"RTN","XPDIJ",22,0)
 ;XPDABORT can be set in pre or post install to abort install
"RTN","XPDIJ",23,0)
 F  S Y=$O(^XPD(9.7,"ASP",XPDA,Y)) Q:'Y  S %=$O(^(Y,0)) D:%  Q:$D(XPDABORT)
"RTN","XPDIJ",24,0)
 .N XPD,XPDA,XPDNM,XPDV,XPDV0,XPDVOL,XPDX,XPDY,Y
"RTN","XPDIJ",25,0)
 .;Now do the Install
"RTN","XPDIJ",26,0)
 .S XPDA=%,XPDNM=$P($G(^XPD(9.7,XPDA,0)),U) D IN^XPDIJ1 Q:$D(XPDABORT)
"RTN","XPDIJ",27,0)
 ;
"RTN","XPDIJ",28,0)
 ;Now do Master Build Post INIT.
"RTN","XPDIJ",29,0)
 I '$D(XPDABORT),$D(XPDT("MASTER")) D
"RTN","XPDIJ",30,0)
 .N XPDBLD,XPDGREF
"RTN","XPDIJ",31,0)
 .S XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),XPDGREF="^XTMP(""XPDI"","_XPDA_",""TEMP"")"
"RTN","XPDIJ",32,0)
 .D POST^XPDIJ1
"RTN","XPDIJ",33,0)
 ;ZTREQ tells taskman to delete task
"RTN","XPDIJ",34,0)
 I $G(ZTSK) S ZTREQ="@" D
"RTN","XPDIJ",35,0)
 .;remove task # from Install File
"RTN","XPDIJ",36,0)
 .N XPD S XPD(9.7,XPDA_",",5)="@"
"RTN","XPDIJ",37,0)
 .D FILE^DIE("","XPD")
"RTN","XPDIJ",38,0)
 ;quit if install was aborted
"RTN","XPDIJ",39,0)
 I $D(XPDABORT) D EXIT^XPDID("Install Aborted!!"),^%ZISC Q
"RTN","XPDIJ",40,0)
 ;put option back in order
"RTN","XPDIJ",41,0)
 I $P(XPDSET,U,2)]"" D ON^XQOO1($P(XPDSET,U,2)) K ^XTMP("XQOO",$P(XPDSET,U,2))
"RTN","XPDIJ",42,0)
 ;check if menu rebuild is wanted (only if option has been added to any installs)
"RTN","XPDIJ",43,0)
 ;XPDMENU is used to check that it is only done once
"RTN","XPDIJ",44,0)
 S (Y,XPDMENU)=0
"RTN","XPDIJ",45,0)
 F  S Y=$O(^XPD(9.7,"ASP",XPDA,Y)) Q:'Y  S %=$O(^(Y,0)) D:%  Q:XPDMENU
"RTN","XPDIJ",46,0)
 .N XPDA,Y
"RTN","XPDIJ",47,0)
 .S XPDA=%
"RTN","XPDIJ",48,0)
 .I $$ANSWER^XPDIQ("XPO1") D BMES^XPDUTL(" Call MENU rebuild"),KIDS^XQ81 S XPDMENU=1
"RTN","XPDIJ",49,0)
 .;There should be no reason to check other CPUs anymore, patch 496
"RTN","XPDIJ",50,0)
 .Q
"RTN","XPDIJ",51,0)
 .;check if need to queue menu rebuild on other CPUs
"RTN","XPDIJ",52,0)
 .D:$O(^XPD(9.7,XPDA,"VOL",0))
"RTN","XPDIJ",53,0)
 ..N XPDU,XPDY,XPDV,XPDV0,ZTUCI,ZTCPU
"RTN","XPDIJ",54,0)
 ..X ^%ZOSF("UCI") S XPDU=$P(Y,","),XPDY=$P(Y,",",2),XPDV=0
"RTN","XPDIJ",55,0)
 ..;loop thru VOLUMES SET and don't do current volume set
"RTN","XPDIJ",56,0)
 ..F  S XPDV=$O(^XPD(9.7,XPDA,"VOL",XPDV)) Q:'XPDV  S XPDV0=$P(^(XPDV,0),U) D:XPDV0'=XPDY
"RTN","XPDIJ",57,0)
 ...S ZTUCI=XPDU,ZTDTH=$H,ZTIO="",ZTDESC="Install Menu Rebuild",ZTCPU=XPDV0,ZTRTN="KIDS^XQ81" D ^%ZTLOAD
"RTN","XPDIJ",58,0)
 ;
"RTN","XPDIJ",59,0)
 ;See if need to reset inhibit logons
"RTN","XPDIJ",60,0)
 I $$ANSWER^XPDIQ("XPI1") D INHIBIT^XPDIJ1("N")
"RTN","XPDIJ",61,0)
 ;
"RTN","XPDIJ",62,0)
 ;clean up globals
"RTN","XPDIJ",63,0)
 S Y=0
"RTN","XPDIJ",64,0)
 F  S Y=$O(^XPD(9.7,"ASP",XPDA,Y)) Q:'Y  S XPDI=$O(^(Y,0)) D:XPDI
"RTN","XPDIJ",65,0)
 . N %,Y,XPD,X
"RTN","XPDIJ",66,0)
 . ;See if need to delete Env,Pre,Post routines.
"RTN","XPDIJ",67,0)
 . S %=$O(^XTMP("XPDI",XPDI,"BLD",0)),XPD=$G(^XTMP("XPDI",XPDI,"BLD",%,"INID"))
"RTN","XPDIJ",68,0)
 . I '$$GET^XUPARAM("XPD NO_EPP_DELETE") F %=1:1:3 I $P(XPD,U,%)="y" D
"RTN","XPDIJ",69,0)
 . . S X=^XTMP("XPDI",XPDI,$P("PRE^INIT^INI",U,%)) S:X[U X=$P(X,U,2) X:X]"" ^%ZOSF("DEL")
"RTN","XPDIJ",70,0)
 . ;kill transport global
"RTN","XPDIJ",71,0)
 . K ^XTMP("XPDI",XPDI)
"RTN","XPDIJ",72,0)
 . ;update the status field
"RTN","XPDIJ",73,0)
 . S XPD(9.7,XPDI_",",.02)=3
"RTN","XPDIJ",74,0)
 . D FILE^DIE("","XPD")
"RTN","XPDIJ",75,0)
 D EXIT^XPDID("Install Completed"),^%ZISC
"RTN","XPDIJ",76,0)
 Q
"RTN","XPDIJ",77,0)
 ;
"RTN","XPDIJ",78,0)
SAVE(X) ;restore routine X
"RTN","XPDIJ",79,0)
 N %,DIE,XCM,XCN,XCS
"RTN","XPDIJ",80,0)
 S DIE="^XTMP(""XPDI"",XPDA,""RTN"",X,",XCN=0
"RTN","XPDIJ",81,0)
 X ^%ZOSF("SAVE") D RTNLOG^XPDUTL(X)
"RTN","XPDIJ",82,0)
 Q
"RTN","XPDIJ",83,0)
RTN(XPDA) ;restore all routines for package XPDA
"RTN","XPDIJ",84,0)
 ;^XPD("XPDI",XPDA,"RTN",routine name)=0-install, 1-delete, 2-skip^checksum
"RTN","XPDIJ",85,0)
 Q:$G(XPDA)=""
"RTN","XPDIJ",86,0)
 N X,XPDI,XPDJ S XPDI=""
"RTN","XPDIJ",87,0)
 F  S XPDI=$O(^XTMP("XPDI",XPDA,"RTN",XPDI)) Q:XPDI=""  S XPDJ=^(XPDI) D
"RTN","XPDIJ",88,0)
 .;if we are doing VT graphic display, set counter
"RTN","XPDIJ",89,0)
 .I $D(XPDIDVT) S XPDIDCNT=XPDIDCNT+1 D:'(XPDIDCNT#XPDIDMOD) UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIJ",90,0)
 .I 'XPDJ D SAVE(XPDI) Q
"RTN","XPDIJ",91,0)
 .;set checksum to null, since routine wasn't loaded
"RTN","XPDIJ",92,0)
 .I $P(XPDJ,U,2) S $P(^XTMP("XPDI",XPDA,"BLD",XPDBLD,"KRN",9.8,"NM",$P(XPDJ,U,2),0),U,4)=""
"RTN","XPDIJ",93,0)
 .I $P(XPDJ,U)=1 S X=XPDI X ^%ZOSF("DEL")
"RTN","XPDIJ",94,0)
 ;if graphic display, update full count
"RTN","XPDIJ",95,0)
 I $D(XPDIDVT) D UPDATE^XPDID(XPDIDCNT)
"RTN","XPDIJ",96,0)
 Q
"RTN","XPDIJ",97,0)
 ;
"RTN","XPDIJ",98,0)
VOLERR(V,F) ;volume set not updated,V=volume set, F=flag
"RTN","XPDIJ",99,0)
 N XQA,XQAMSG,XPDMES
"RTN","XPDIJ",100,0)
 S XPDMES(1)=" ",XPDMES(2)=" ** Job on VOLUME SET "_V_$S(F:" never started **",1:" has been idle for an hour.")
"RTN","XPDIJ",101,0)
 S XPDMES(3)=" ** "_V_" has NOT been updated! **"
"RTN","XPDIJ",102,0)
 S XQA(DUZ)="",XQAMSG="VOLUME SET "_V_" NOT updated for Install "_$E($P($G(^XPD(9.7,+$G(XPDA),0)),"^"),1,30)
"RTN","XPDIJ",103,0)
 D MES^XPDUTL(.XPDMES),SETUP^XQALERT
"RTN","XPDIJ",104,0)
 Q
"RTN","XPDIJ",105,0)
 ;come here on error, record error in Install file and cleanup var.
"RTN","XPDIJ",106,0)
ERR N XPDERROR,XQA,XQAMSG
"RTN","XPDIJ",107,0)
 S XPDERROR=$$EC^%ZOSV
"RTN","XPDIJ",108,0)
 ;record error, write message, reset terminal
"RTN","XPDIJ",109,0)
 D ^%ZTER,BMES^XPDUTL(XPDERROR),EXIT^XPDID()
"RTN","XPDIJ",110,0)
 S XQA(DUZ)="",XQAMSG="Install "_$E($P($G(^XPD(9.7,+$G(XPDA),0)),"^"),1,30)_" has encountered an Error."
"RTN","XPDIJ",111,0)
 D SETUP^XQALERT G UNWIND^%ZTER
"RTN","XPDIJ",112,0)
 ;
"RTN","XPDIJ",113,0)
LNRF(RN) ;Load needed routines first
"RTN","XPDIJ",114,0)
 I $D(^XTMP("XPDI",XPDA,"RTN",RN)) D
"RTN","XPDIJ",115,0)
 .N X
"RTN","XPDIJ",116,0)
 .D SAVE(RN)
"RTN","XPDIJ",117,0)
 .S XCN=$$RTNUP^XPDUTL(RN,2)
"RTN","XPDIJ",118,0)
 Q
"RTN","XPDIU")
0^5^B16953601^B13389830
"RTN","XPDIU",1,0)
XPDIU ;SFISC/RSD - UNload/Convert/Rollup Distribution Global ;08/14/2008
"RTN","XPDIU",2,0)
 ;;8.0;KERNEL;**15,41,44,51,58,101,108,506**;Jul 10, 1995;Build 11
"RTN","XPDIU",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XPDIU",4,0)
EN1 ;unload
"RTN","XPDIU",5,0)
 N %,DA,DIK,DIR,DIRUT,X,XPD,XPDST,XPDT,XPDQ,XPDQUIT,Y
"RTN","XPDIU",6,0)
 ;remove dangling transport globals
"RTN","XPDIU",7,0)
 S DA=0 F  S DA=$O(^XTMP("XPDI",DA)) Q:'DA  I '$D(^XPD(9.7,DA)) K ^XTMP("XPDI",DA)
"RTN","XPDIU",8,0)
 ;must be the starting package and still exist in the transport global
"RTN","XPDIU",9,0)
 S (DA,XPDST)=$$LOOK^XPDI1("I $D(^XPD(9.7,""ASP"",Y,1,Y)),$D(^XTMP(""XPDI"",Y))") Q:'DA
"RTN","XPDIU",10,0)
 S XPDQ=^XPD(9.7,DA,0),DIR(0)="Y",DIR("A")="Want to continue with the Unload of this Distribution",DIR("B")="NO"
"RTN","XPDIU",11,0)
 ;check if install has status of start
"RTN","XPDIU",12,0)
 I $P(XPDQ,U,9)=2 W !!,"***WARNING***  Install ",$P(XPDQ,U)," has already started!",!,"   Unloading this install might leave your system in an unstable state!!",!!
"RTN","XPDIU",13,0)
 S DIR("?")="YES will delete the Transport Global and the entry in the Install file for these Packages."
"RTN","XPDIU",14,0)
 I $P(XPDQ,U,9)=1,$P(XPDQ,U,6) W !,"This Distribution is Queued for Install with task number ",$P(XPDQ,U,6),!,"Don't forget to delete Taskman Task.",!
"RTN","XPDIU",15,0)
 W ! D ^DIR I 'Y!$D(DIRUT) D QUIT^XPDI1(XPDST) Q
"RTN","XPDIU",16,0)
 S XPD=0,DIK="^XPD(9.7,"
"RTN","XPDIU",17,0)
 ;need to kill the XTMP("XPDI") and the entry in the install file
"RTN","XPDIU",18,0)
 F  S XPD=$O(XPDT(XPD)) Q:'XPD  S DA=+XPDT(XPD) D ^DIK K ^XTMP("XPDI",DA)
"RTN","XPDIU",19,0)
 ;check if Out-Of-Order setname is defined, kill it
"RTN","XPDIU",20,0)
 I $D(^XTMP("XQOO",$P(XPDQ,U))) K ^($P(XPDQ,U))
"RTN","XPDIU",21,0)
 D QUIT^XPDI1(XPDST)
"RTN","XPDIU",22,0)
 Q
"RTN","XPDIU",23,0)
EN2 ;convert
"RTN","XPDIU",24,0)
 N %,DA,DIK,DIR,DIRUT,X,XPD,XPDBLD,XPDI,XPDNM,XPDPKG,XPDPMT,XPDST,XPDT,XPDQUIT,Y
"RTN","XPDIU",25,0)
 S XPDI=$$LOOK^XPDI1("I '$P(^(0),U,9),$D(^XPD(9.7,""ASP"",Y,1,Y))") Q:'XPDI
"RTN","XPDIU",26,0)
 K XPDT("DA"),XPDT("NM")
"RTN","XPDIU",27,0)
 ;make sure transport globals exist
"RTN","XPDIU",28,0)
 S XPDT=0 F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D
"RTN","XPDIU",29,0)
 .S Y=+XPDT(XPDT) Q:$D(^XTMP("XPDI",Y))
"RTN","XPDIU",30,0)
 .W !,$P(XPDT(XPDT),U,2),"   ** Transport Global doesn't exist **",$C(7)
"RTN","XPDIU",31,0)
 .K XPDT(XPDT) S XPDQUIT=1
"RTN","XPDIU",32,0)
 I $D(XPDT)'>9!$D(XPDQUIT) D QUIT^XPDI1(XPDI) Q
"RTN","XPDIU",33,0)
 S DIR(0)="Y",DIR("A")="Want to make the Transport Globals Permanent",DIR("B")="NO"
"RTN","XPDIU",34,0)
 S DIR("?",1)="YES will leave the Transport Global so you can transport this TG in multiple Distributions."
"RTN","XPDIU",35,0)
 S DIR("?")="NO will remove the Transport Global after you transport this TG in the next Distribution."
"RTN","XPDIU",36,0)
 D ^DIR I $D(DIRUT) D QUIT^XPDI1(XPDI) Q
"RTN","XPDIU",37,0)
 S XPDPMT=Y,DIR("A")="Want to continue with the Conversion of the Package(s)",DIR("B")="NO"
"RTN","XPDIU",38,0)
 S DIR("?",1)="YES will convert the Packages to globals that can be transported.",DIR("?")="An entry will be added to the Build file and the entry in the Install file will be deleted."
"RTN","XPDIU",39,0)
 D ^DIR I 'Y!$D(DIRUT) Q
"RTN","XPDIU",40,0)
 S XPDT=0,DIK="^XPD(9.7,"
"RTN","XPDIU",41,0)
 F  S XPDT=$O(XPDT(XPDT)) Q:'XPDT  D  Q:$D(XPDQUIT)
"RTN","XPDIU",42,0)
 .;kill Install file entry
"RTN","XPDIU",43,0)
 .S XPDA=+XPDT(XPDT),XPDNM=$P(XPDT(XPDT),U,2),XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),XPDPKG=+$O(^XTMP("XPDI",XPDA,"PKG",0))
"RTN","XPDIU",44,0)
 .;resolve the Package file link
"RTN","XPDIU",45,0)
 .D:XPDPKG
"RTN","XPDIU",46,0)
 ..N DIC,X,Y
"RTN","XPDIU",47,0)
 ..S DIC="^DIC(9.4,",DIC(0)="X",X=$P(^XTMP("XPDI",XPDA,"PKG",XPDPKG,0),U)
"RTN","XPDIU",48,0)
 ..D ^DIC I Y<0 S XPDPKG=0 Q
"RTN","XPDIU",49,0)
 ..S XPDPKG=+Y
"RTN","XPDIU",50,0)
 ..Q
"RTN","XPDIU",51,0)
 .S DA=$$BLD^XPDIP(XPDBLD) D:DA
"RTN","XPDIU",52,0)
 ..K ^XTMP("XPDT",DA)
"RTN","XPDIU",53,0)
 ..;check that component files exists
"RTN","XPDIU",54,0)
 ..S Y=$O(^XTMP("XPDI",XPDA,"BLD",0)),X=0 I Y F  S X=+$O(^XTMP("XPDI",XPDA,"BLD",Y,"KRN",X)) Q:'X  D
"RTN","XPDIU",55,0)
 ...;if file doesn't exist, kill it and 'B' x-ref
"RTN","XPDIU",56,0)
 ...I '$D(^DIC(X,0)) K ^XTMP("XPDI",XPDA,"BLD",Y,"KRN",X),^("B",X)
"RTN","XPDIU",57,0)
 ...Q
"RTN","XPDIU",58,0)
 ..S ^XTMP("XPDT",DA)=XPDPMT M ^XTMP("XPDT",DA)=^XTMP("XPDI",XPDA)
"RTN","XPDIU",59,0)
 ..Q
"RTN","XPDIU",60,0)
 .I 'DA W !,XPDNM,"   ** Couldn't add to Build file **" S XPDQUIT=1 Q
"RTN","XPDIU",61,0)
 .;kill Install file entry
"RTN","XPDIU",62,0)
 .S DA=XPDA D ^DIK
"RTN","XPDIU",63,0)
 .K ^XTMP("XPDI",XPDA)
"RTN","XPDIU",64,0)
 ;set expiration date to 1 year if global should be permanent, else 30
"RTN","XPDIU",65,0)
 S ^XTMP("XPDT",0)=$$FMADD^XLFDT(DT,$S(XPDPMT:365,1:30))_U_DT
"RTN","XPDIU",66,0)
 D QUIT^XPDI1(XPDI)
"RTN","XPDIU",67,0)
 W !,"  ** DONE **",!
"RTN","XPDIU",68,0)
 Q
"VER")
8.0^22.0
**END**
**END**
