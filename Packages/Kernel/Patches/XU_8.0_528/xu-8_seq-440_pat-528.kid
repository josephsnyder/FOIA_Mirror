Released XU*8*528 SEQ #440
Extracted from mail message
**KIDS**:XU*8.0*528^

**INSTALL NAME**
XU*8.0*528
"BLD",1239,0)
XU*8.0*528^KERNEL^0^3090616^y
"BLD",1239,1,0)
^^2^2^3090522^
"BLD",1239,1,1,0)
Kernel patch XU*8.0*528; Fix NPI Extract Report. Please refer to the 
"BLD",1239,1,2,0)
Description in Forum Patch Module for details.
"BLD",1239,4,0)
^9.64PA^^
"BLD",1239,6.3)
2
"BLD",1239,"ABPKG")
n
"BLD",1239,"KRN",0)
^9.67PA^9002226^21
"BLD",1239,"KRN",.4,0)
.4
"BLD",1239,"KRN",.401,0)
.401
"BLD",1239,"KRN",.402,0)
.402
"BLD",1239,"KRN",.403,0)
.403
"BLD",1239,"KRN",.5,0)
.5
"BLD",1239,"KRN",.84,0)
.84
"BLD",1239,"KRN",3.6,0)
3.6
"BLD",1239,"KRN",3.8,0)
3.8
"BLD",1239,"KRN",9.2,0)
9.2
"BLD",1239,"KRN",9.8,0)
9.8
"BLD",1239,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",1239,"KRN",9.8,"NM",1,0)
XUSNPIX1^^0^B78458745
"BLD",1239,"KRN",9.8,"NM",2,0)
XUSNPIX4^^0^B75484055
"BLD",1239,"KRN",9.8,"NM",3,0)
XUSNPIXU^^0^B16989884
"BLD",1239,"KRN",9.8,"NM","B","XUSNPIX1",1)

"BLD",1239,"KRN",9.8,"NM","B","XUSNPIX4",2)

"BLD",1239,"KRN",9.8,"NM","B","XUSNPIXU",3)

"BLD",1239,"KRN",19,0)
19
"BLD",1239,"KRN",19,"NM",0)
^9.68A^^
"BLD",1239,"KRN",19.1,0)
19.1
"BLD",1239,"KRN",101,0)
101
"BLD",1239,"KRN",409.61,0)
409.61
"BLD",1239,"KRN",771,0)
771
"BLD",1239,"KRN",779.2,0)
779.2
"BLD",1239,"KRN",870,0)
870
"BLD",1239,"KRN",8989.51,0)
8989.51
"BLD",1239,"KRN",8989.52,0)
8989.52
"BLD",1239,"KRN",8994,0)
8994
"BLD",1239,"KRN",9002226,0)
9002226
"BLD",1239,"KRN","B",.4,.4)

"BLD",1239,"KRN","B",.401,.401)

"BLD",1239,"KRN","B",.402,.402)

"BLD",1239,"KRN","B",.403,.403)

"BLD",1239,"KRN","B",.5,.5)

"BLD",1239,"KRN","B",.84,.84)

"BLD",1239,"KRN","B",3.6,3.6)

"BLD",1239,"KRN","B",3.8,3.8)

"BLD",1239,"KRN","B",9.2,9.2)

"BLD",1239,"KRN","B",9.8,9.8)

"BLD",1239,"KRN","B",19,19)

"BLD",1239,"KRN","B",19.1,19.1)

"BLD",1239,"KRN","B",101,101)

"BLD",1239,"KRN","B",409.61,409.61)

"BLD",1239,"KRN","B",771,771)

"BLD",1239,"KRN","B",779.2,779.2)

"BLD",1239,"KRN","B",870,870)

"BLD",1239,"KRN","B",8989.51,8989.51)

"BLD",1239,"KRN","B",8989.52,8989.52)

"BLD",1239,"KRN","B",8994,8994)

"BLD",1239,"KRN","B",9002226,9002226)

"BLD",1239,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1239,"QUES",0)
^9.62^^
"BLD",1239,"REQB",0)
^9.611^1^1
"BLD",1239,"REQB",1,0)
XU*8.0*481^1
"BLD",1239,"REQB","B","XU*8.0*481",1)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090423^3080616^6
"PKG",3,22,1,"PAH",1,0)
528^3090616
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3090616
"PKG",3,22,1,"PAH",1,1,1,0)
Kernel patch XU*8.0*528; Fix NPI Extract Report. Please refer to the 
"PKG",3,22,1,"PAH",1,1,2,0)
Description in Forum Patch Module for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XUSNPIX1")
0^1^B78458745^B76017094
"RTN","XUSNPIX1",1,0)
XUSNPIX1 ;OAK_BP/CMW - NPI EXTRACT REPORT ; 6/17/09
"RTN","XUSNPIX1",2,0)
 ;;8.0;KERNEL;**438,452,453,481,528**; Jul 10, 1995;Build 2
"RTN","XUSNPIX1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XUSNPIX1",4,0)
 ;
"RTN","XUSNPIX1",5,0)
 ; NPI Extract Report
"RTN","XUSNPIX1",6,0)
 ;
"RTN","XUSNPIX1",7,0)
 ; Input parameter: N/A
"RTN","XUSNPIX1",8,0)
 ;
"RTN","XUSNPIX1",9,0)
 ; Other relevant variables:
"RTN","XUSNPIX1",10,0)
 ;   XUSRTN="XUSNPIX1" (current routine name, used for ^XTMP and ^TMP
"RTN","XUSNPIX1",11,0)
 ;                         storage subscript)
"RTN","XUSNPIX1",12,0)
 ; Storage Global:
"RTN","XUSNPIX1",13,0)
 ;   ^XTMP("XUSNPIX1",0) = Piece 1^Piece 2^Piece 3^Piece 4^Piece 5^Piece 6
"RTN","XUSNPIX1",14,0)
 ;      where:
"RTN","XUSNPIX1",15,0)
 ;      Piece 1 => Purge Date - 1 year in future
"RTN","XUSNPIX1",16,0)
 ;      Piece 2 => Create Date - Today
"RTN","XUSNPIX1",17,0)
 ;      Piece 3 => Description
"RTN","XUSNPIX1",18,0)
 ;      Piece 4 => Last Date Compiled
"RTN","XUSNPIX1",19,0)
 ;      Piece 5 => $H last run start time
"RTN","XUSNPIX1",20,0)
 ;      Piece 6 => $H last run completion time
"RTN","XUSNPIX1",21,0)
 ;
"RTN","XUSNPIX1",22,0)
 ;   ^XTMP("XUSNPIX1",1) = DATA
"RTN","XUSNPIX1",23,0)
 ;               
"RTN","XUSNPIX1",24,0)
 ;          XUSNPI => Unique NPI of entry
"RTN","XUSNPIX1",25,0)
 ;          LDT => Last Date Run, VA Fileman Format
"RTN","XUSNPIX1",26,0)
 ;
"RTN","XUSNPIX1",27,0)
 ; Entry Point - TASKMAN => Run report in background using TASKMAN
"RTN","XUSNPIX1",28,0)
 ;
"RTN","XUSNPIX1",29,0)
 Q
"RTN","XUSNPIX1",30,0)
 ;
"RTN","XUSNPIX1",31,0)
TASKMAN ;TASKMAN ENTRY POINT
"RTN","XUSNPIX1",32,0)
 ; Process Report
"RTN","XUSNPIX1",33,0)
 N XUSRTN,DTTM,XUSPROD,XUSVER,INSMAIL
"RTN","XUSNPIX1",34,0)
 ;
"RTN","XUSNPIX1",35,0)
 ; Check for required variables
"RTN","XUSNPIX1",36,0)
 I $G(U)=""!($G(DT)="") G EXIT
"RTN","XUSNPIX1",37,0)
 S XUSRTN="XUSNPIX1"
"RTN","XUSNPIX1",38,0)
 S DTTM=$$HTE^XLFDT($H,"2")
"RTN","XUSNPIX1",39,0)
 ; Check to see if report is in use
"RTN","XUSNPIX1",40,0)
 L +^XTMP(XUSRTN):5 I '$T G EXIT
"RTN","XUSNPIX1",41,0)
 ;
"RTN","XUSNPIX1",42,0)
 ;Reset Summary Scratch Globals
"RTN","XUSNPIX1",43,0)
 K ^TMP("XUSNPIXS",$J)
"RTN","XUSNPIX1",44,0)
 K ^TMP("XUSNPIXT",$J)
"RTN","XUSNPIX1",45,0)
 ;
"RTN","XUSNPIX1",46,0)
 ; Initialize variables
"RTN","XUSNPIX1",47,0)
 D INIT(XUSRTN)
"RTN","XUSNPIX1",48,0)
 ;
"RTN","XUSNPIX1",49,0)
 ; Pull Station(Institution) data
"RTN","XUSNPIX1",50,0)
 D INST(XUSRTN,XUSVER,.INSMAIL)
"RTN","XUSNPIX1",51,0)
 ;
"RTN","XUSNPIX1",52,0)
 ;Process New Person File
"RTN","XUSNPIX1",53,0)
 D PROC1(XUSRTN,XUSPROD,XUSVER,DTTM,INSMAIL)
"RTN","XUSNPIX1",54,0)
 ;
"RTN","XUSNPIX1",55,0)
 ; Process Institution File
"RTN","XUSNPIX1",56,0)
 D ENT^XUSNPIX2(XUSPROD,XUSVER)
"RTN","XUSNPIX1",57,0)
 ;
"RTN","XUSNPIX1",58,0)
 ; Process Non VA File
"RTN","XUSNPIX1",59,0)
 D ENT^XUSNPIX3(XUSPROD,XUSVER)
"RTN","XUSNPIX1",60,0)
 ;
"RTN","XUSNPIX1",61,0)
 ; Send summary message
"RTN","XUSNPIX1",62,0)
 D SMAIL^XUSNPIX5("XUSNPIXT",XUSPROD,XUSVER,DTTM)
"RTN","XUSNPIX1",63,0)
 ;
"RTN","XUSNPIX1",64,0)
 ;Standard EXIT point
"RTN","XUSNPIX1",65,0)
EXIT ;
"RTN","XUSNPIX1",66,0)
 K DTTM,XUSVER,XUSHDR,XUSPROD,INSMAIL
"RTN","XUSNPIX1",67,0)
 ;
"RTN","XUSNPIX1",68,0)
 ;Kill off Scratch Globals
"RTN","XUSNPIX1",69,0)
 K ^TMP("XUSNPIXS",$J)
"RTN","XUSNPIX1",70,0)
 K ^TMP("XUSNPIXT",$J)
"RTN","XUSNPIX1",71,0)
 K ^TMP("XUSNPIXU",$J)
"RTN","XUSNPIX1",72,0)
 ; Log Run Completion Time
"RTN","XUSNPIX1",73,0)
 S $P(^XTMP(XUSRTN,0),U,6)=$H
"RTN","XUSNPIX1",74,0)
 L -^XTMP(XUSRTN)
"RTN","XUSNPIX1",75,0)
 ;
"RTN","XUSNPIX1",76,0)
 Q
"RTN","XUSNPIX1",77,0)
 ;
"RTN","XUSNPIX1",78,0)
INIT(XUSRTN) ; check/init variables
"RTN","XUSNPIX1",79,0)
 N XUSDESC
"RTN","XUSNPIX1",80,0)
 ; Set to NEXT release version from NPM
"RTN","XUSNPIX1",81,0)
 S XUSVER="481.5"
"RTN","XUSNPIX1",82,0)
 ; Get production/test account flag
"RTN","XUSNPIX1",83,0)
 S XUSPROD=$S($$PROD^XUPROD(1):"PROD",1:"TEST")
"RTN","XUSNPIX1",84,0)
 ;
"RTN","XUSNPIX1",85,0)
 ; Reset Temporary Scratch Global
"RTN","XUSNPIX1",86,0)
 D INIT^XUSNPIXU
"RTN","XUSNPIX1",87,0)
 K ^TMP(XUSRTN)
"RTN","XUSNPIX1",88,0)
 S XUSDESC="NPI EXTRACT TYPE 1 - Do Not Delete"
"RTN","XUSNPIX1",89,0)
 S ^XTMP(XUSRTN,0)=(DT+10000)_U_DT_U_XUSDESC_U_DT_U_$H
"RTN","XUSNPIX1",90,0)
 ; Generate TMP BCBS Array
"RTN","XUSNPIX1",91,0)
 D BCBSID^XUSNPIXU
"RTN","XUSNPIX1",92,0)
 ;
"RTN","XUSNPIX1",93,0)
 Q
"RTN","XUSNPIX1",94,0)
 ;
"RTN","XUSNPIX1",95,0)
INST(XUSRTN,XUSVER,INSMAIL) ;Pull station and Institution info
"RTN","XUSNPIX1",96,0)
 N INST,SINFO,DIC4
"RTN","XUSNPIX1",97,0)
 ; Pull site info
"RTN","XUSNPIX1",98,0)
 S SINFO=$$SITE^VASITE
"RTN","XUSNPIX1",99,0)
 ; Station Number 
"RTN","XUSNPIX1",100,0)
 S SITE=$P(SINFO,U,3)
"RTN","XUSNPIX1",101,0)
 ; Institution    
"RTN","XUSNPIX1",102,0)
 S INST=$P(SINFO,U)
"RTN","XUSNPIX1",103,0)
 ;
"RTN","XUSNPIX1",104,0)
 ; Get institution mailing address
"RTN","XUSNPIX1",105,0)
 I INST D
"RTN","XUSNPIX1",106,0)
 . S DIC4=$G(^DIC(4,INST,4))
"RTN","XUSNPIX1",107,0)
 . S XUSNP(7)=$P(DIC4,U)
"RTN","XUSNPIX1",108,0)
 . S XUSNP(8)=$P(DIC4,U,2)
"RTN","XUSNPIX1",109,0)
 . S XUSNP(9)=$P(DIC4,U,3)
"RTN","XUSNPIX1",110,0)
 . S XUSNP(10)=$P(DIC4,U,4)
"RTN","XUSNPIX1",111,0)
 . I XUSNP(10) S XUSNP(10)=$P($G(^DIC(5,XUSNP(10),0)),U,2)
"RTN","XUSNPIX1",112,0)
 . S XUSNP(11)=$P(DIC4,U,5)
"RTN","XUSNPIX1",113,0)
 . S INSMAIL=XUSNP(7)_U_XUSNP(8)_U_XUSNP(9)_U_XUSNP(10)_U_XUSNP(11)
"RTN","XUSNPIX1",114,0)
 S XUSHDR="Station: "_SITE_U_XUSNP(9)_U_XUSNP(10)_U_XUSNP(11)_U_"TYPE 1"_U_XUSVER
"RTN","XUSNPIX1",115,0)
 ;
"RTN","XUSNPIX1",116,0)
 Q
"RTN","XUSNPIX1",117,0)
 ;
"RTN","XUSNPIX1",118,0)
PROC1(XUSRTN,XUSPROD,XUSVER,DTTM,INSMAIL) ;Process all New Person records
"RTN","XUSNPIX1",119,0)
 N XUSNPI,XUSDT,XUSNEW,XUSI,XUSDATA,XUSVA0,XUSVA0,XUSVA1,XUSNAME,XUSDOB,XUSDIV,XUSSTL,XUSSTLN,XUSOPN
"RTN","XUSNPIX1",120,0)
 N XUSPER,XUSSPC,XUSTAX,XUSTAXID,XUSIZE,NPIEN,DIC4,SPDIV,VA12,VA13,COUNT,MSGCNT,MAXSIZE,TOTREC,XUSEOL
"RTN","XUSNPIX1",121,0)
 ;
"RTN","XUSNPIX1",122,0)
 ; Set to 300000 for live
"RTN","XUSNPIX1",123,0)
 S MAXSIZE=300000
"RTN","XUSNPIX1",124,0)
 ;
"RTN","XUSNPIX1",125,0)
 ; Set end of line character
"RTN","XUSNPIX1",126,0)
 S XUSEOL="~~"
"RTN","XUSNPIX1",127,0)
 ;
"RTN","XUSNPIX1",128,0)
 ; set counter
"RTN","XUSNPIX1",129,0)
 S COUNT=1,(TOTREC,MSGCNT,XUSIZE)=0
"RTN","XUSNPIX1",130,0)
 ; Loop through NEW PERSON NPI records NPI cross ref
"RTN","XUSNPIX1",131,0)
 S XUSNPI=0
"RTN","XUSNPIX1",132,0)
 F  S XUSNPI=$O(^VA(200,"ANPI",XUSNPI)) Q:'XUSNPI  D
"RTN","XUSNPIX1",133,0)
 . S NPIEN=$O(^VA(200,"ANPI",XUSNPI,""))
"RTN","XUSNPIX1",134,0)
 . ;
"RTN","XUSNPIX1",135,0)
 . ; Init columns
"RTN","XUSNPIX1",136,0)
 . F XUSI=1:1:29 S XUSNP(XUSI)=""
"RTN","XUSNPIX1",137,0)
 . S XUSNP(1)=XUSNPI S XUSDATA1=XUSNP(1)
"RTN","XUSNPIX1",138,0)
 . ;
"RTN","XUSNPIX1",139,0)
 . S XUSVA0=$G(^VA(200,NPIEN,0))
"RTN","XUSNPIX1",140,0)
 . S XUSVA1=$G(^VA(200,NPIEN,1))
"RTN","XUSNPIX1",141,0)
 . S XUSNAME=$P(XUSVA0,U)
"RTN","XUSNPIX1",142,0)
 . ; BREAK NAME INTO COMPONENTS
"RTN","XUSNPIX1",143,0)
 . I XUSNAME'="" D
"RTN","XUSNPIX1",144,0)
 . . S XLFNC=XUSNAME D FORMAT^XLFNAME7(.XLFNC,,,,0)
"RTN","XUSNPIX1",145,0)
 . . S XUSNP(2)=XLFNC("GIVEN"),XUSNP(3)=XLFNC("MIDDLE"),XUSNP(4)=XLFNC("FAMILY")
"RTN","XUSNPIX1",146,0)
 . . I XLFNC("SUFFIX")'="" S XUSNP(4)=XUSNP(4)_" "_XLFNC("SUFFIX")
"RTN","XUSNPIX1",147,0)
 . . K XLFNC
"RTN","XUSNPIX1",148,0)
 . S XUSDATA1=XUSDATA1_U_XUSNP(2)_U_XUSNP(3)_U_XUSNP(4)
"RTN","XUSNPIX1",149,0)
 . S XUSNP(5)=1 ;TYPE
"RTN","XUSNPIX1",150,0)
 . S XUSDOB=$P(XUSVA1,U,3)
"RTN","XUSNPIX1",151,0)
 . ; dob formatted as mm/dd/yyyy
"RTN","XUSNPIX1",152,0)
 . I XUSDOB D
"RTN","XUSNPIX1",153,0)
 . . S XUSNP(6)=$$FMTE^XLFDT(XUSDOB,5)
"RTN","XUSNPIX1",154,0)
 . S XUSDATA1=XUSDATA1_U_XUSNP(5)_U_XUSNP(6)
"RTN","XUSNPIX1",155,0)
 . ;
"RTN","XUSNPIX1",156,0)
 . ; Pay to Provider Address Use primary institution mailing address NP7-11
"RTN","XUSNPIX1",157,0)
 . S XUSDATA1=XUSDATA1_U_INSMAIL
"RTN","XUSNPIX1",158,0)
 . ;
"RTN","XUSNPIX1",159,0)
 . ; Servicing Provider Address
"RTN","XUSNPIX1",160,0)
 . S (XUSDIV)=0
"RTN","XUSNPIX1",161,0)
 . ; Loop through Division multiple
"RTN","XUSNPIX1",162,0)
 . F  S XUSDIV=$O(^VA(200,NPIEN,2,XUSDIV)) Q:'XUSDIV  D
"RTN","XUSNPIX1",163,0)
 . . S DIC4=$G(^DIC(4,XUSDIV,4))
"RTN","XUSNPIX1",164,0)
 . . S XUSNP(12)=$P(DIC4,U)
"RTN","XUSNPIX1",165,0)
 . . S XUSNP(13)=$P(DIC4,U,2)
"RTN","XUSNPIX1",166,0)
 . . S XUSNP(14)=$P(DIC4,U,3)
"RTN","XUSNPIX1",167,0)
 . . S XUSNP(15)=$P(DIC4,U,4)
"RTN","XUSNPIX1",168,0)
 . . I XUSNP(15) S XUSNP(15)=$P($G(^DIC(5,XUSNP(15),0)),U,2)
"RTN","XUSNPIX1",169,0)
 . . S XUSNP(16)=$P(DIC4,U,5)
"RTN","XUSNPIX1",170,0)
 . . S XUSSTA(XUSDIV)=$P($G(^DIC(4,XUSDIV,99)),U)
"RTN","XUSNPIX1",171,0)
 . . S SPADR(XUSDIV)=XUSNP(12)_U_XUSNP(13)_U_XUSNP(14)_U_XUSNP(15)_U_XUSNP(16)
"RTN","XUSNPIX1",172,0)
 . ; If no divisions found
"RTN","XUSNPIX1",173,0)
 . I '$D(SPADR) D
"RTN","XUSNPIX1",174,0)
 . . S XUSSTA(9999)="N/A",SPADR(9999)=XUSNP(12)_U_XUSNP(13)_U_XUSNP(14)_U_XUSNP(15)_U_XUSNP(16)
"RTN","XUSNPIX1",175,0)
 . ;
"RTN","XUSNPIX1",176,0)
 . ; Office Phone number
"RTN","XUSNPIX1",177,0)
 . S XUSOPN=$P($G(^VA(200,NPIEN,.13)),U,2)
"RTN","XUSNPIX1",178,0)
 . I XUSOPN'="" S XUSNP(17)=XUSOPN
"RTN","XUSNPIX1",179,0)
 . ;
"RTN","XUSNPIX1",180,0)
 . ; Degree
"RTN","XUSNPIX1",181,0)
 . S XUSNP(18)=$P($G(^VA(200,NPIEN,3.1)),U,6)
"RTN","XUSNPIX1",182,0)
 . ; Degree Code (place holder)
"RTN","XUSNPIX1",183,0)
 . S XUSNP(19)=""
"RTN","XUSNPIX1",184,0)
 . ;
"RTN","XUSNPIX1",185,0)
 . ; get taxonomy and specialty
"RTN","XUSNPIX1",186,0)
 . S XUSPER=0
"RTN","XUSNPIX1",187,0)
 . F  S XUSPER=$O(^VA(200,NPIEN,"USC1","B",XUSPER)) Q:'XUSPER  D
"RTN","XUSNPIX1",188,0)
 . . S XUSSPC=$P($G(^USC(8932.1,XUSPER,0)),U,9)
"RTN","XUSNPIX1",189,0)
 . . S XUSTAX=$P($G(^USC(8932.1,XUSPER,0)),U,7)
"RTN","XUSNPIX1",190,0)
 . . I XUSSPC'="" D
"RTN","XUSNPIX1",191,0)
 . . . I XUSNP(20)="" S XUSNP(20)=XUSSPC Q
"RTN","XUSNPIX1",192,0)
 . . . S XUSNP(20)=XUSNP(20)_";"_XUSSPC
"RTN","XUSNPIX1",193,0)
 . . I XUSTAX'="" D
"RTN","XUSNPIX1",194,0)
 . . . I XUSNP(21)="" S XUSNP(21)=XUSTAX Q
"RTN","XUSNPIX1",195,0)
 . . . S XUSNP(21)=XUSNP(21)_";"_XUSTAX
"RTN","XUSNPIX1",196,0)
 . ;
"RTN","XUSNPIX1",197,0)
 . ; Tax ID
"RTN","XUSNPIX1",198,0)
 . S XUSTAXID=$P($G(^VA(200,NPIEN,"TPB")),U,2)
"RTN","XUSNPIX1",199,0)
 . I XUSTAXID="" S XUSTAXID=$P($G(^VA(200,NPIEN,1)),U,9)
"RTN","XUSNPIX1",200,0)
 . S XUSNP(22)=XUSTAXID
"RTN","XUSNPIX1",201,0)
 . ;
"RTN","XUSNPIX1",202,0)
 . S XUSDATA2=XUSNP(17)_U_XUSNP(18)_U_XUSNP(19)_U_XUSNP(20)_U_XUSNP(21)_U_XUSNP(22)
"RTN","XUSNPIX1",203,0)
 . ;
"RTN","XUSNPIX1",204,0)
 . ; Medicare Part A/B
"RTN","XUSNPIX1",205,0)
 . S XUSNP(23)=670899
"RTN","XUSNPIX1",206,0)
 . S XUSNP(24)="VA"_$E(SITE+10000,2,5)
"RTN","XUSNPIX1",207,0)
 . ;
"RTN","XUSNPIX1",208,0)
 . ; State License
"RTN","XUSNPIX1",209,0)
 . S XUSSTL=0
"RTN","XUSNPIX1",210,0)
 . F  S XUSSTL=$O(^VA(200,NPIEN,"PS1",XUSSTL)) Q:'XUSSTL  D
"RTN","XUSNPIX1",211,0)
 . . S XUSSTLN=$P($G(^VA(200,NPIEN,"PS1",XUSSTL,0)),U,2)
"RTN","XUSNPIX1",212,0)
 . . I XUSSTLN'="" D
"RTN","XUSNPIX1",213,0)
 . . . I XUSNP(25)="" S XUSNP(25)=XUSSTLN Q
"RTN","XUSNPIX1",214,0)
 . . . S XUSNP(25)=XUSNP(25)_";"_XUSSTLN
"RTN","XUSNPIX1",215,0)
 . ; DEA #
"RTN","XUSNPIX1",216,0)
 . S XUSNP(26)=$P($G(^VA(200,NPIEN,"PS")),U,2)
"RTN","XUSNPIX1",217,0)
 . ;
"RTN","XUSNPIX1",218,0)
 . S XUSDATA2=XUSDATA2_U_XUSNP(23)_U_XUSNP(24)_U_XUSNP(25)_U_XUSNP(26)
"RTN","XUSNPIX1",219,0)
 . ;
"RTN","XUSNPIX1",220,0)
 . ; Station #
"RTN","XUSNPIX1",221,0)
 . S XUSNP(27)=""
"RTN","XUSNPIX1",222,0)
 . ;
"RTN","XUSNPIX1",223,0)
 . ; Get BCBS Payer ID Array
"RTN","XUSNPIX1",224,0)
 . K XUSBXID
"RTN","XUSNPIX1",225,0)
 . D PRACID^XUSNPIXU(NPIEN,.XUSBXID)
"RTN","XUSNPIX1",226,0)
 . ;
"RTN","XUSNPIX1",227,0)
 . ; Save entry to ^TMP and update count
"RTN","XUSNPIX1",228,0)
 . N XUSB,XUSB1
"RTN","XUSNPIX1",229,0)
 . S XUSDIV=0
"RTN","XUSNPIX1",230,0)
 . F  S XUSDIV=$O(SPADR(XUSDIV)) Q:'XUSDIV  D
"RTN","XUSNPIX1",231,0)
 . . S COUNT=COUNT+1,TOTREC=TOTREC+1
"RTN","XUSNPIX1",232,0)
 . . S ^TMP(XUSRTN,$J,COUNT)=XUSDATA1_U_SPADR(XUSDIV)_U_XUSDATA2_U_XUSSTA(XUSDIV)_U_XUSEOL
"RTN","XUSNPIX1",233,0)
 . . S XUSIZE=XUSIZE+$L(^TMP(XUSRTN,$J,COUNT))
"RTN","XUSNPIX1",234,0)
 . . ; Check BCBS Id array
"RTN","XUSNPIX1",235,0)
 . . I $D(XUSBXID) D
"RTN","XUSNPIX1",236,0)
 . . . S XUSB=""
"RTN","XUSNPIX1",237,0)
 . . . F  S XUSB=$O(XUSBXID(XUSB)) Q:XUSB=""  D
"RTN","XUSNPIX1",238,0)
 . . . . S XUSB1=$G(XUSBXID(XUSB)) I XUSB1'="" S XUSB1="^"_XUSB1 ;add p 528
"RTN","XUSNPIX1",239,0)
 . . . . S COUNT=COUNT+1,TOTREC=TOTREC+1
"RTN","XUSNPIX1",240,0)
 . . . . S ^TMP(XUSRTN,$J,COUNT)=XUSDATA1_U_SPADR(XUSDIV)_U_XUSDATA2_U_XUSSTA(XUSDIV)_U_$$TRIM^XLFSTR(XUSB)_XUSB1_U_XUSEOL ;add _XUSB1 p 528
"RTN","XUSNPIX1",241,0)
 . . . . S XUSIZE=XUSIZE+$L(^TMP(XUSRTN,$J,COUNT))
"RTN","XUSNPIX1",242,0)
 . K XUSNP,XUSDATA1,XUSDATA2,XUSDATA3,SPADR,XUSBXID,CNT,XUSSTA
"RTN","XUSNPIX1",243,0)
 . I XUSIZE>MAXSIZE D
"RTN","XUSNPIX1",244,0)
 . . D EOF(XUSRTN)
"RTN","XUSNPIX1",245,0)
 . . D EMAIL^XUSNPIX5(XUSRTN)
"RTN","XUSNPIX1",246,0)
 . . K ^TMP(XUSRTN,$J)
"RTN","XUSNPIX1",247,0)
 . . S ^TMP("XUSNPIXS",$J,1,MSGCNT)="1^"_(COUNT-2)
"RTN","XUSNPIX1",248,0)
 . . S ^TMP(XUSRTN,$J,1)=XUSHDR
"RTN","XUSNPIX1",249,0)
 . . S COUNT=1,XUSIZE=0
"RTN","XUSNPIX1",250,0)
 D EOF(XUSRTN)
"RTN","XUSNPIX1",251,0)
 ;
"RTN","XUSNPIX1",252,0)
 ; Send the last message (if it has records)
"RTN","XUSNPIX1",253,0)
 I $G(COUNT)>1 D
"RTN","XUSNPIX1",254,0)
 .D EMAIL^XUSNPIX5(XUSRTN)
"RTN","XUSNPIX1",255,0)
 .K ^TMP(XUSRTN,$J)
"RTN","XUSNPIX1",256,0)
 .S ^TMP("XUSNPIXS",$J,1,MSGCNT)="1^"_(COUNT-2)
"RTN","XUSNPIX1",257,0)
 ;
"RTN","XUSNPIX1",258,0)
 ; Set summary totals
"RTN","XUSNPIX1",259,0)
 S ^XTMP("XUSNPIXT",0)=(DT+10000)_U_DT_U_"NPI EXTRACT SUMMARY TOTALS"_U_DT_U_$H
"RTN","XUSNPIX1",260,0)
 S ^XTMP("XUSNPIXT","H")=$P(XUSHDR,U,1,4)
"RTN","XUSNPIX1",261,0)
 S ^XTMP("XUSNPIXT",1)=MSGCNT_U_TOTREC_U_DTTM
"RTN","XUSNPIX1",262,0)
 K INSMAIL,SITE
"RTN","XUSNPIX1",263,0)
 Q
"RTN","XUSNPIX1",264,0)
 ;
"RTN","XUSNPIX1",265,0)
EOF(XUSRTN) ;
"RTN","XUSNPIX1",266,0)
 Q:COUNT=1
"RTN","XUSNPIX1",267,0)
 S MSGCNT=MSGCNT+1
"RTN","XUSNPIX1",268,0)
 S ^TMP(XUSRTN,$J,1)=XUSHDR_U_"Message Number: "_MSGCNT_U_"Line Count: "_COUNT_U_DTTM_U_$G(XUSPROD)_U_XUSEOL
"RTN","XUSNPIX1",269,0)
 S COUNT=COUNT+1
"RTN","XUSNPIX1",270,0)
 S ^TMP(XUSRTN,$J,COUNT)="END OF FILE"_U_XUSEOL
"RTN","XUSNPIX1",271,0)
 Q
"RTN","XUSNPIX4")
0^2^B75484055^B71596917
"RTN","XUSNPIX4",1,0)
XUSNPIX4 ;OAK_BP/CMW - NPI EXTRACT REPORT ; 6/17/09
"RTN","XUSNPIX4",2,0)
 ;;8.0;KERNEL;**438,452,453,481,528**; Jul 10, 1995;Build 2
"RTN","XUSNPIX4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","XUSNPIX4",4,0)
 ;
"RTN","XUSNPIX4",5,0)
 ; NPI Extract Report
"RTN","XUSNPIX4",6,0)
 ;
"RTN","XUSNPIX4",7,0)
 ; Input parameter: N/A
"RTN","XUSNPIX4",8,0)
 ;
"RTN","XUSNPIX4",9,0)
 ; Other relevant variables:
"RTN","XUSNPIX4",10,0)
 ;   XUSRTN="XUSNPIX1NV" (current routine name, used for ^XTMP and ^TMP
"RTN","XUSNPIX4",11,0)
 ;   XUSRTN="XUSNPIX2NV"  storage subscript)
"RTN","XUSNPIX4",12,0)
 ; Storage Global:
"RTN","XUSNPIX4",13,0)
 ;   ^XTMP("XUSNPIX1VA",0) = Piece 1^Piece 2^Piece 3^Piece 4^Piece 5^Piece 6
"RTN","XUSNPIX4",14,0)
 ;   ^XTMP("XUSNPIX2VA",0)
"RTN","XUSNPIX4",15,0)
 ;      where:
"RTN","XUSNPIX4",16,0)
 ;      Piece 1 => Purge Date - 1 year in future
"RTN","XUSNPIX4",17,0)
 ;      Piece 2 => Create Date - Today
"RTN","XUSNPIX4",18,0)
 ;      Piece 3 => Description
"RTN","XUSNPIX4",19,0)
 ;      Piece 4 => Last Date Compiled
"RTN","XUSNPIX4",20,0)
 ;      Piece 5 => $H last run start time
"RTN","XUSNPIX4",21,0)
 ;      Piece 6 => $H last run completion time
"RTN","XUSNPIX4",22,0)
 ;      
"RTN","XUSNPIX4",23,0)
 ;      Entry Point - ENT called from XUSNPIX1
"RTN","XUSNPIX4",24,0)
 ;
"RTN","XUSNPIX4",25,0)
 Q
"RTN","XUSNPIX4",26,0)
 ;
"RTN","XUSNPIX4",27,0)
 ; Individual records
"RTN","XUSNPIX4",28,0)
TYPE1(DTTM3,PTPMAIL,SITE,XUSPROD,XUSHDR) ;
"RTN","XUSNPIX4",29,0)
 N IBA0,NVIEN,XUSNPI,MAXSIZE,XUSEOL,XUSCNT
"RTN","XUSNPIX4",30,0)
 N XUSI,XUSNM,XUSNV,XLFNC,XUSIZE,XUSDT,XUSNEW
"RTN","XUSNPIX4",31,0)
 N TOTREC1
"RTN","XUSNPIX4",32,0)
 ;
"RTN","XUSNPIX4",33,0)
 ; Set Maximum Message Size
"RTN","XUSNPIX4",34,0)
 S MAXSIZE=300000
"RTN","XUSNPIX4",35,0)
 ;
"RTN","XUSNPIX4",36,0)
 ; Set end of line character
"RTN","XUSNPIX4",37,0)
 S XUSEOL="~~"
"RTN","XUSNPIX4",38,0)
 ;
"RTN","XUSNPIX4",39,0)
 S XUSCNT=1,(TOTREC1,MSGCNT,XUSIZE)=0
"RTN","XUSNPIX4",40,0)
 S XUSNPI=""
"RTN","XUSNPIX4",41,0)
 F  S XUSNPI=$O(^TMP("XUSNPI",$J,1,XUSNPI)) Q:'XUSNPI  D
"RTN","XUSNPIX4",42,0)
 . S XUSDATA=XUSNPI
"RTN","XUSNPIX4",43,0)
 . S NVIEN=$G(^TMP("XUSNPI",$J,1,XUSNPI))
"RTN","XUSNPIX4",44,0)
 . ;
"RTN","XUSNPIX4",45,0)
 . F XUSI=1:1:29 S XUSNV(XUSI)=""
"RTN","XUSNPIX4",46,0)
 . S IBA0=$G(^IBA(355.93,NVIEN,0))
"RTN","XUSNPIX4",47,0)
 . S XUSNM=$P(IBA0,U)
"RTN","XUSNPIX4",48,0)
 . ; Break Name into components
"RTN","XUSNPIX4",49,0)
 . I XUSNM'="" D
"RTN","XUSNPIX4",50,0)
 . . S XLFNC=XUSNM D FORMAT^XLFNAME7(.XLFNC,,,,0)
"RTN","XUSNPIX4",51,0)
 . . S XUSNV(2)=XLFNC("GIVEN"),XUSNV(3)=XLFNC("MIDDLE"),XUSNV(4)=XLFNC("FAMILY")
"RTN","XUSNPIX4",52,0)
 . . I XLFNC("SUFFIX")'="" S XUSNV(4)=XUSNV(4)_" "_XLFNC("SUFFIX")
"RTN","XUSNPIX4",53,0)
 . . K XLFNC
"RTN","XUSNPIX4",54,0)
 . S XUSDATA=XUSDATA_U_XUSNV(2)_U_XUSNV(3)_U_XUSNV(4)
"RTN","XUSNPIX4",55,0)
 . S XUSNV(5)=1 ;TYPE
"RTN","XUSNPIX4",56,0)
 . ;                                    
"RTN","XUSNPIX4",57,0)
 . ; DOB (place holder)
"RTN","XUSNPIX4",58,0)
 . S XUSNV(6)=""
"RTN","XUSNPIX4",59,0)
 . S XUSDATA=XUSDATA_U_XUSNV(5)_U_XUSNV(6)
"RTN","XUSNPIX4",60,0)
 . ;
"RTN","XUSNPIX4",61,0)
 . ; Pay to Provider Address (7-11)
"RTN","XUSNPIX4",62,0)
 . S XUSDATA=XUSDATA_U_PTPMAIL
"RTN","XUSNPIX4",63,0)
 . ;
"RTN","XUSNPIX4",64,0)
 . ; Servicing Provider Address
"RTN","XUSNPIX4",65,0)
 . S XUSNV(12)=$P(IBA0,U,5)
"RTN","XUSNPIX4",66,0)
 . S XUSNV(13)=$P(IBA0,U,10)
"RTN","XUSNPIX4",67,0)
 . S XUSNV(14)=$P(IBA0,U,6)
"RTN","XUSNPIX4",68,0)
 . S XUSNV(15)=$P(IBA0,U,7)
"RTN","XUSNPIX4",69,0)
 . I XUSNV(15) S XUSNV(15)=$P($G(^DIC(5,XUSNV(12),0)),U,2)
"RTN","XUSNPIX4",70,0)
 . S XUSNV(16)=$P(IBA0,U,8)
"RTN","XUSNPIX4",71,0)
 . S XUSDATA=XUSDATA_U_XUSNV(12)_U_XUSNV(13)_U_XUSNV(14)_U_XUSNV(15)_U_XUSNV(16)
"RTN","XUSNPIX4",72,0)
 . ;
"RTN","XUSNPIX4",73,0)
 . ; Office Phone number (place holder)
"RTN","XUSNPIX4",74,0)
 . S XUSNV(17)=""
"RTN","XUSNPIX4",75,0)
 . ;
"RTN","XUSNPIX4",76,0)
 . ; Degree Description / Degree Code (place holder)
"RTN","XUSNPIX4",77,0)
 . S XUSNV(18)=""
"RTN","XUSNPIX4",78,0)
 . S XUSNV(19)=""
"RTN","XUSNPIX4",79,0)
 . ;
"RTN","XUSNPIX4",80,0)
 . ; Get Taxonomy and specialty codes
"RTN","XUSNPIX4",81,0)
 . N NVTX,NVSPC,NVTAX
"RTN","XUSNPIX4",82,0)
 . S NVTX=0
"RTN","XUSNPIX4",83,0)
 . F  S NVTX=$O(^IBA(355.93,NVIEN,"TAXONOMY","B",NVTX)) Q:'NVTX  D
"RTN","XUSNPIX4",84,0)
 . . S NVSPC=$P($G(^USC(8932.1,NVTX,0)),U,9)
"RTN","XUSNPIX4",85,0)
 . . S NVTAX=$P($G(^USC(8932.1,NVTX,0)),U,7)
"RTN","XUSNPIX4",86,0)
 . . I NVSPC'="" D
"RTN","XUSNPIX4",87,0)
 . . . I XUSNV(20)="" S XUSNV(20)=NVSPC Q
"RTN","XUSNPIX4",88,0)
 . . . S XUSNV(20)=XUSNV(20)_";"_NVSPC
"RTN","XUSNPIX4",89,0)
 . . I NVTAX'="" D
"RTN","XUSNPIX4",90,0)
 . . . I XUSNV(21)="" S XUSNV(21)=NVTAX Q
"RTN","XUSNPIX4",91,0)
 . . . S XUSNV(21)=XUSNV(21)_";"_NVTAX
"RTN","XUSNPIX4",92,0)
 . ;
"RTN","XUSNPIX4",93,0)
 . ; Fed tax ID
"RTN","XUSNPIX4",94,0)
 . S XUSNV(22)=$P($G(IBA0),U,9)
"RTN","XUSNPIX4",95,0)
 . ;
"RTN","XUSNPIX4",96,0)
 . S XUSDATA=XUSDATA_U_XUSNV(17)_U_XUSNV(18)_U_XUSNV(19)_U_XUSNV(20)_U_XUSNV(21)_U_XUSNV(22)
"RTN","XUSNPIX4",97,0)
 . ;
"RTN","XUSNPIX4",98,0)
 . ; Medicare Part A/B
"RTN","XUSNPIX4",99,0)
 . S XUSNV(23)=670899
"RTN","XUSNPIX4",100,0)
 . S XUSNV(24)="VA"_$E(SITE+10000,2,5)
"RTN","XUSNPIX4",101,0)
 . ;
"RTN","XUSNPIX4",102,0)
 . ; State Lic and DEA (place holder)
"RTN","XUSNPIX4",103,0)
 . S XUSNV(25)=""
"RTN","XUSNPIX4",104,0)
 . S XUSNV(26)=""
"RTN","XUSNPIX4",105,0)
 . ;
"RTN","XUSNPIX4",106,0)
 . ; VISN Station
"RTN","XUSNPIX4",107,0)
 . S XUSNV(27)=SITE
"RTN","XUSNPIX4",108,0)
 . ;
"RTN","XUSNPIX4",109,0)
 . S XUSDATA=XUSDATA_U_XUSNV(23)_U_XUSNV(24)_U_XUSNV(25)_U_XUSNV(26)_U_XUSNV(27)
"RTN","XUSNPIX4",110,0)
 . ;
"RTN","XUSNPIX4",111,0)
 . ;BCBS info
"RTN","XUSNPIX4",112,0)
 . K XUSBXID
"RTN","XUSNPIX4",113,0)
 . D NNVAID^XUSNPIXU(NVIEN,.XUSBXID)
"RTN","XUSNPIX4",114,0)
 . ;
"RTN","XUSNPIX4",115,0)
 . ;Update counter and save Entry
"RTN","XUSNPIX4",116,0)
 . N XUSB,XUSB1
"RTN","XUSNPIX4",117,0)
 . S XUSCNT=XUSCNT+1,TOTREC1=TOTREC1+1
"RTN","XUSNPIX4",118,0)
 . S ^TMP(XUSRTN,$J,XUSCNT)=XUSDATA_U_XUSEOL
"RTN","XUSNPIX4",119,0)
 . S XUSIZE=XUSIZE+$L(^TMP(XUSRTN,$J,XUSCNT))
"RTN","XUSNPIX4",120,0)
 . I $D(XUSBXID) D
"RTN","XUSNPIX4",121,0)
 . . S XUSB=""
"RTN","XUSNPIX4",122,0)
 . . F  S XUSB=$O(XUSBXID(XUSB)) Q:XUSB=""  D
"RTN","XUSNPIX4",123,0)
 . . . S XUSB1=$G(XUSBXID(XUSB)) I XUSB1'="" S XUSB1="^"_XUSB1 ;add p 528
"RTN","XUSNPIX4",124,0)
 . . . S XUSCNT=XUSCNT+1,TOTREC1=TOTREC1+1
"RTN","XUSNPIX4",125,0)
 . . . S ^TMP(XUSRTN,$J,XUSCNT)=XUSDATA_U_$$TRIM^XLFSTR(XUSB)_XUSB1_U_XUSEOL ;add _XUSB1 p 528
"RTN","XUSNPIX4",126,0)
 . . . S XUSIZE=XUSIZE+$L(^TMP(XUSRTN,$J,XUSCNT))
"RTN","XUSNPIX4",127,0)
 . I XUSIZE>MAXSIZE D
"RTN","XUSNPIX4",128,0)
 . . D EOF1(XUSRTN)
"RTN","XUSNPIX4",129,0)
 . . D EMAIL^XUSNPIX3(XUSRTN)
"RTN","XUSNPIX4",130,0)
 . . K ^TMP(XUSRTN,$J)
"RTN","XUSNPIX4",131,0)
 . . S ^TMP("XUSNPIXS",$J,3,MSGCNT)="1 (Non-VA)^"_(XUSCNT-2)
"RTN","XUSNPIX4",132,0)
 . . S ^TMP(XUSRTN,$J,1)=XUSHDR
"RTN","XUSNPIX4",133,0)
 . . S XUSCNT=1,XUSIZE=0
"RTN","XUSNPIX4",134,0)
 . K XUSNV,XUSDATA,XUSBXID
"RTN","XUSNPIX4",135,0)
 ;
"RTN","XUSNPIX4",136,0)
 D EOF1(XUSRTN)
"RTN","XUSNPIX4",137,0)
 ;
"RTN","XUSNPIX4",138,0)
 ; Send last message (if it has records)
"RTN","XUSNPIX4",139,0)
 I $G(XUSCNT)>1 D
"RTN","XUSNPIX4",140,0)
 . D EMAIL^XUSNPIX3(XUSRTN)
"RTN","XUSNPIX4",141,0)
 . K ^TMP(XUSRTN,$J)
"RTN","XUSNPIX4",142,0)
 . S ^TMP("XUSNPIXS",$J,3,MSGCNT)="1 (Non-VA)^"_($G(XUSCNT)-2)
"RTN","XUSNPIX4",143,0)
 ;
"RTN","XUSNPIX4",144,0)
 ; Update Summary
"RTN","XUSNPIX4",145,0)
 S ^XTMP("XUSNPIXT","1NV")=MSGCNT_U_TOTREC1_U_DTTM3
"RTN","XUSNPIX4",146,0)
 Q
"RTN","XUSNPIX4",147,0)
 ;
"RTN","XUSNPIX4",148,0)
EOF1(XUSRTN) ;
"RTN","XUSNPIX4",149,0)
 Q:$G(XUSCNT)=1
"RTN","XUSNPIX4",150,0)
 S MSGCNT=MSGCNT+1
"RTN","XUSNPIX4",151,0)
 S ^TMP(XUSRTN,$J,1)=XUSHDR_U_"Message Number: "_MSGCNT_U_"Line Count: "_XUSCNT_U_DTTM3_U_$G(XUSPROD)_U_XUSEOL
"RTN","XUSNPIX4",152,0)
 S XUSCNT=XUSCNT+1
"RTN","XUSNPIX4",153,0)
 S ^TMP(XUSRTN,$J,XUSCNT)="END OF FILE"_U_XUSEOL
"RTN","XUSNPIX4",154,0)
 Q
"RTN","XUSNPIX4",155,0)
 ;
"RTN","XUSNPIX4",156,0)
TYPE2(DTTM3,PTPMAIL,SITE,XUSPROD,XUSHDR) ;Facility/Group
"RTN","XUSNPIX4",157,0)
 N IBA0,NVIEN,XUSNPI,MAXSIZE,XUSEOL,XUSCNT
"RTN","XUSNPIX4",158,0)
 N XUSNV,XUSI,XUSNM,XLFNC,MSGCNT,XUSIZE,XUSDT,XUSNEW,TOTREC2
"RTN","XUSNPIX4",159,0)
 ;
"RTN","XUSNPIX4",160,0)
 ; Set Maximum Message Size
"RTN","XUSNPIX4",161,0)
 S MAXSIZE=300000
"RTN","XUSNPIX4",162,0)
 ;
"RTN","XUSNPIX4",163,0)
 ; Set end of line character
"RTN","XUSNPIX4",164,0)
 S XUSEOL="~~"
"RTN","XUSNPIX4",165,0)
 ;
"RTN","XUSNPIX4",166,0)
 S XUSNPI=""
"RTN","XUSNPIX4",167,0)
 S XUSCNT=1,(TOTREC2,MSGCNT,XUSIZE)=0
"RTN","XUSNPIX4",168,0)
 F  S XUSNPI=$O(^TMP("XUSNPI",$J,2,XUSNPI)) Q:'XUSNPI  D
"RTN","XUSNPIX4",169,0)
 . S XUSDATA=XUSNPI
"RTN","XUSNPIX4",170,0)
 . S NVIEN=$G(^TMP("XUSNPI",$J,2,XUSNPI))
"RTN","XUSNPIX4",171,0)
 . ;
"RTN","XUSNPIX4",172,0)
 . F XUSI=1:1:24 S XUSNV(XUSI)=""
"RTN","XUSNPIX4",173,0)
 . S IBA0=$G(^IBA(355.93,NVIEN,0))
"RTN","XUSNPIX4",174,0)
 . ;Get Organization name  
"RTN","XUSNPIX4",175,0)
 . S XUSNV(2)=$P(IBA0,U)
"RTN","XUSNPIX4",176,0)
 . ;Type
"RTN","XUSNPIX4",177,0)
 . S XUSNV(3)=2
"RTN","XUSNPIX4",178,0)
 . ;
"RTN","XUSNPIX4",179,0)
 . S XUSDATA=XUSDATA_U_XUSNV(2)_U_XUSNV(3)
"RTN","XUSNPIX4",180,0)
 . ;
"RTN","XUSNPIX4",181,0)
 . ; Pay to Provider Address (4-8)
"RTN","XUSNPIX4",182,0)
 . S XUSDATA=XUSDATA_U_PTPMAIL
"RTN","XUSNPIX4",183,0)
 . ;
"RTN","XUSNPIX4",184,0)
 . ; Servicing Provider Address
"RTN","XUSNPIX4",185,0)
 . S XUSNV(9)=$P(IBA0,U,5)
"RTN","XUSNPIX4",186,0)
 . S XUSNV(10)=$P(IBA0,U,10)
"RTN","XUSNPIX4",187,0)
 . S XUSNV(11)=$P(IBA0,U,6)
"RTN","XUSNPIX4",188,0)
 . S XUSNV(12)=$P(IBA0,U,7)
"RTN","XUSNPIX4",189,0)
 . I XUSNV(12) S XUSNV(12)=$P($G(^DIC(5,XUSNV(12),0)),U,2)
"RTN","XUSNPIX4",190,0)
 . S XUSNV(13)=$P(IBA0,U,8)
"RTN","XUSNPIX4",191,0)
 . S XUSDATA=XUSDATA_U_XUSNV(9)_U_XUSNV(10)_U_XUSNV(11)_U_XUSNV(12)_U_XUSNV(13)
"RTN","XUSNPIX4",192,0)
 . ;
"RTN","XUSNPIX4",193,0)
 . ;Office Phone number (place holder)
"RTN","XUSNPIX4",194,0)
 . S XUSNV(14)=""
"RTN","XUSNPIX4",195,0)
 . ; 
"RTN","XUSNPIX4",196,0)
 . ; get Taxonomy and Specialty
"RTN","XUSNPIX4",197,0)
 . N NVTX,NVSPC,NVTAX
"RTN","XUSNPIX4",198,0)
 . S NVTX=0
"RTN","XUSNPIX4",199,0)
 . F  S NVTX=$O(^IBA(355.93,NVIEN,"TAXONOMY","B",NVTX)) Q:'NVTX  D
"RTN","XUSNPIX4",200,0)
 . . S NVSPC=$P($G(^USC(8932.1,NVTX,0)),U,9)
"RTN","XUSNPIX4",201,0)
 . . S NVTAX=$P($G(^USC(8932.1,NVTX,0)),U,7)
"RTN","XUSNPIX4",202,0)
 . . I NVSPC'="" D
"RTN","XUSNPIX4",203,0)
 . . . I XUSNV(15)="" S XUSNV(15)=NVSPC Q
"RTN","XUSNPIX4",204,0)
 . . . S XUSNV(15)=XUSNV(15)_";"_NVSPC
"RTN","XUSNPIX4",205,0)
 . . I NVTAX'="" D
"RTN","XUSNPIX4",206,0)
 . . . I XUSNV(16)="" S XUSNV(16)=NVTAX Q
"RTN","XUSNPIX4",207,0)
 . . . S XUSNV(16)=XUSNV(16)_";"_NVTAX
"RTN","XUSNPIX4",208,0)
 . ;
"RTN","XUSNPIX4",209,0)
 . ; Fed Tax ID
"RTN","XUSNPIX4",210,0)
 . S XUSNV(17)=$P($G(IBA0),U,9)
"RTN","XUSNPIX4",211,0)
 . ;
"RTN","XUSNPIX4",212,0)
 . ;Medicare A/B
"RTN","XUSNPIX4",213,0)
 . S XUSNV(18)=670899
"RTN","XUSNPIX4",214,0)
 . S XUSNV(19)="VA"_$E(SITE+10000,2,5)
"RTN","XUSNPIX4",215,0)
 . ;
"RTN","XUSNPIX4",216,0)
 . S XUSDATA=XUSDATA_U_XUSNV(14)_U_XUSNV(15)_U_XUSNV(16)_U_XUSNV(17)_U_XUSNV(18)_U_XUSNV(19)
"RTN","XUSNPIX4",217,0)
 . ;
"RTN","XUSNPIX4",218,0)
 . ;State License Number
"RTN","XUSNPIX4",219,0)
 . S XUSNV(20)=$P($G(IBA0),U,12)
"RTN","XUSNPIX4",220,0)
 . ;
"RTN","XUSNPIX4",221,0)
 . ;DEA Number (place holder)
"RTN","XUSNPIX4",222,0)
 . S XUSNV(21)=""
"RTN","XUSNPIX4",223,0)
 . ;
"RTN","XUSNPIX4",224,0)
 . ;VISN STATION ID
"RTN","XUSNPIX4",225,0)
 . S XUSNV(22)=SITE
"RTN","XUSNPIX4",226,0)
 . ;
"RTN","XUSNPIX4",227,0)
 . S XUSDATA=XUSDATA_U_XUSNV(20)_U_XUSNV(21)_U_XUSNV(22)
"RTN","XUSNPIX4",228,0)
 . ;
"RTN","XUSNPIX4",229,0)
 . ;BCBS info
"RTN","XUSNPIX4",230,0)
 . K XUSBXID
"RTN","XUSNPIX4",231,0)
 . D NNVAID^XUSNPIXU(NVIEN,.XUSBXID)
"RTN","XUSNPIX4",232,0)
 . ;
"RTN","XUSNPIX4",233,0)
 . ;Update counter and save Entry
"RTN","XUSNPIX4",234,0)
 . N XUSB,XUSB1
"RTN","XUSNPIX4",235,0)
 . S XUSCNT=XUSCNT+1,TOTREC2=TOTREC2+1
"RTN","XUSNPIX4",236,0)
 . S ^TMP(XUSRTN,$J,XUSCNT)=XUSDATA_U_XUSEOL
"RTN","XUSNPIX4",237,0)
 . S XUSIZE=XUSIZE+$L(^TMP(XUSRTN,$J,XUSCNT))
"RTN","XUSNPIX4",238,0)
 . I $D(XUSBXID) D
"RTN","XUSNPIX4",239,0)
 . . S XUSB=""
"RTN","XUSNPIX4",240,0)
 . . F  S XUSB=$O(XUSBXID(XUSB)) Q:XUSB=""  D
"RTN","XUSNPIX4",241,0)
 . . . S XUSB1=$G(XUSBXID(XUSB)) I XUSB1'="" S XUSB1="^"_XUSB1 ;add p 528
"RTN","XUSNPIX4",242,0)
 . . . S XUSCNT=XUSCNT+1,TOTREC2=TOTREC2+1
"RTN","XUSNPIX4",243,0)
 . . . S ^TMP(XUSRTN,$J,XUSCNT)=XUSDATA_U_$$TRIM^XLFSTR(XUSB)_XUSB1_U_XUSEOL ;add _XUSB1 p 528
"RTN","XUSNPIX4",244,0)
 . . . S XUSIZE=XUSIZE+$L(^TMP(XUSRTN,$J,XUSCNT))
"RTN","XUSNPIX4",245,0)
 . I XUSIZE>MAXSIZE D
"RTN","XUSNPIX4",246,0)
 . . D EOF2(XUSRTN)
"RTN","XUSNPIX4",247,0)
 . . D EMAIL^XUSNPIX3(XUSRTN)
"RTN","XUSNPIX4",248,0)
 . . K ^TMP(XUSRTN,$J)
"RTN","XUSNPIX4",249,0)
 . . S ^TMP("XUSNPIXS",$J,4,MSGCNT)="2 (Non-VA)^"_(XUSCNT-2)
"RTN","XUSNPIX4",250,0)
 . . S ^TMP(XUSRTN,$J,1)=XUSHDR
"RTN","XUSNPIX4",251,0)
 . . S XUSCNT=1,XUSIZE=0
"RTN","XUSNPIX4",252,0)
 . K XUSNV,XUSDATA,XUSB,XUSBXID
"RTN","XUSNPIX4",253,0)
 ;
"RTN","XUSNPIX4",254,0)
 D EOF2(XUSRTN)
"RTN","XUSNPIX4",255,0)
 ;
"RTN","XUSNPIX4",256,0)
 ; Send last message (if it has records)
"RTN","XUSNPIX4",257,0)
 I $G(XUSCNT)>1 D
"RTN","XUSNPIX4",258,0)
 . D EMAIL^XUSNPIX3(XUSRTN)
"RTN","XUSNPIX4",259,0)
 . K ^TMP(XUSRTN,$J)
"RTN","XUSNPIX4",260,0)
 . S ^TMP("XUSNPIXS",$J,4,MSGCNT)="2 (Non-VA)^"_($G(XUSCNT)-2)
"RTN","XUSNPIX4",261,0)
 ;
"RTN","XUSNPIX4",262,0)
 ; Update Summary
"RTN","XUSNPIX4",263,0)
 S ^XTMP("XUSNPIXT","2NV")=MSGCNT_U_TOTREC2_U_DTTM3
"RTN","XUSNPIX4",264,0)
 Q
"RTN","XUSNPIX4",265,0)
 ;
"RTN","XUSNPIX4",266,0)
EOF2(XUSRTN) ;
"RTN","XUSNPIX4",267,0)
 Q:$G(XUSCNT)=1
"RTN","XUSNPIX4",268,0)
 S MSGCNT=MSGCNT+1
"RTN","XUSNPIX4",269,0)
 S ^TMP(XUSRTN,$J,1)=XUSHDR_U_"Message Number: "_MSGCNT_U_"Line Count: "_XUSCNT_U_DTTM3_U_$G(XUSPROD)_U_XUSEOL
"RTN","XUSNPIX4",270,0)
 S XUSCNT=XUSCNT+1
"RTN","XUSNPIX4",271,0)
 S ^TMP(XUSRTN,$J,XUSCNT)="END OF FILE"_U_XUSEOL
"RTN","XUSNPIX4",272,0)
 Q
"RTN","XUSNPIXU")
0^3^B16989884^B14909976
"RTN","XUSNPIXU",1,0)
XUSNPIXU ;OAK_BP/DLS - NPI Extract Utilities ; 6/17/09
"RTN","XUSNPIXU",2,0)
 ;;8.0;KERNEL;**438,453,528**; Jul 10, 1995;Build 2
"RTN","XUSNPIXU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","XUSNPIXU",4,0)
 ;
"RTN","XUSNPIXU",5,0)
 Q
"RTN","XUSNPIXU",6,0)
 ;
"RTN","XUSNPIXU",7,0)
 ; NPI Extract Functions and Utilities
"RTN","XUSNPIXU",8,0)
 ; 
"RTN","XUSNPIXU",9,0)
BCBSID ; This sub-routine is designed to create a string for each Blue Cross/Blue Shield Insurance Company,
"RTN","XUSNPIXU",10,0)
 ; including the Ins Co name and an array of BCBS ID's (the ID's separated by a semi-colon sub-delimiter).
"RTN","XUSNPIXU",11,0)
 ;
"RTN","XUSNPIXU",12,0)
 ; Input Parameter - N/A
"RTN","XUSNPIXU",13,0)
 ; 
"RTN","XUSNPIXU",14,0)
 ; System Parameters
"RTN","XUSNPIXU",15,0)
 ;       S     ==> ";"  (Semi-Colon Sub-Delimiter)
"RTN","XUSNPIXU",16,0)
 ;       U     ==> "^"
"RTN","XUSNPIXU",17,0)
 ; 
"RTN","XUSNPIXU",18,0)
 ; Variables
"RTN","XUSNPIXU",19,0)
 ;       INSCO   - Insurance Company IEN
"RTN","XUSNPIXU",20,0)
 ;       INSTYP  - Insurance Company Type
"RTN","XUSNPIXU",21,0)
 ;       INSNAM  - Insurance Company Name
"RTN","XUSNPIXU",22,0)
 ;       INSHPR  - Hospital Provider Number
"RTN","XUSNPIXU",23,0)
 ;       INSPPR  - Professional Provider Number
"RTN","XUSNPIXU",24,0)
 ;       IBILP   - IB Insurance Co Level Billing Provider IEN
"RTN","XUSNPIXU",25,0)
 ;       IBILF   - IB Insurance Co Level Billing Facility IEN
"RTN","XUSNPIXU",26,0)
 ;       IBDFPID - Default BCBS Provider #
"RTN","XUSNPIXU",27,0)
 ;       IBILPID - IB Insurance Co Level Billing Provider ID
"RTN","XUSNPIXU",28,0)
 ;       IBILFID - IB Insurance Co Level Billing Facility ID
"RTN","XUSNPIXU",29,0)
 ;       IDSTR   - Local BCBS ID String, placed into ^TMP when complete.
"RTN","XUSNPIXU",30,0)
 ;
"RTN","XUSNPIXU",31,0)
 K ^TMP("XUSNPIXU",$J)
"RTN","XUSNPIXU",32,0)
 N INSCO,INSTYP,INSNAM,INSHPR,INSPPR,IBILP,IBILF,IBILPID,IBILFID,IDSTR,P,S
"RTN","XUSNPIXU",33,0)
 ;
"RTN","XUSNPIXU",34,0)
 S S=";"
"RTN","XUSNPIXU",35,0)
 ;
"RTN","XUSNPIXU",36,0)
 ; Loop through the Insurance Co file.
"RTN","XUSNPIXU",37,0)
 S INSCO=0
"RTN","XUSNPIXU",38,0)
 F  S INSCO=$O(^DIC(36,INSCO)) Q:'INSCO  D
"RTN","XUSNPIXU",39,0)
 . S IDSTR=""
"RTN","XUSNPIXU",40,0)
 . S INSTYP=$$GET1^DIQ(36,INSCO_",",.13)
"RTN","XUSNPIXU",41,0)
 . ;
"RTN","XUSNPIXU",42,0)
 . ; If the Insurance Co type is not Blue Cross or Blue Shield, QUIT and move on to the next one.
"RTN","XUSNPIXU",43,0)
 . I '((INSTYP="BLUE CROSS")!(INSTYP="BLUE SHIELD")) Q
"RTN","XUSNPIXU",44,0)
 . ;
"RTN","XUSNPIXU",45,0)
 . ; Get Insurance Company Name. 
"RTN","XUSNPIXU",46,0)
 . S INSNAM=$$GET1^DIQ(36,INSCO_",",.01)
"RTN","XUSNPIXU",47,0)
 . ;
"RTN","XUSNPIXU",48,0)
 . ; Get the IB Insurance Co Level Billing Prov ID's.
"RTN","XUSNPIXU",49,0)
 . S IBILP=0
"RTN","XUSNPIXU",50,0)
 . F  S IBILP=$O(^IBA(355.92,"B",INSCO,IBILP)) Q:'IBILP  D
"RTN","XUSNPIXU",51,0)
 . . S IBILPID=$$GET1^DIQ(355.92,IBILP_",",.07)
"RTN","XUSNPIXU",52,0)
 . . D ADDID(.IDSTR,IBILPID)
"RTN","XUSNPIXU",53,0)
 . ;
"RTN","XUSNPIXU",54,0)
 . ; Get the IB Insurance Co Level Billing Facility ID's.
"RTN","XUSNPIXU",55,0)
 . S IBILF=0
"RTN","XUSNPIXU",56,0)
 . F  S IBILF=$O(^IBA(355.91,"B",INSCO,IBILF)) Q:'IBILF  D
"RTN","XUSNPIXU",57,0)
 . . S IBILFID=$$GET1^DIQ(355.91,IBILF_",",.07)
"RTN","XUSNPIXU",58,0)
 . . D ADDID(.IDSTR,IBILFID)
"RTN","XUSNPIXU",59,0)
 . ;
"RTN","XUSNPIXU",60,0)
 . ; Remove trailing semi-colon and place local ID string into ^TMP.
"RTN","XUSNPIXU",61,0)
 . I $E(IDSTR,$L(IDSTR))=";" S IDSTR=$E(IDSTR,1,$L(IDSTR)-1)
"RTN","XUSNPIXU",62,0)
 . I IDSTR'="" S ^TMP("XUSNPIXU",$J,INSCO)=INSNAM_U_IDSTR
"RTN","XUSNPIXU",63,0)
 Q
"RTN","XUSNPIXU",64,0)
 ;
"RTN","XUSNPIXU",65,0)
 ;
"RTN","XUSNPIXU",66,0)
ADDID(IDSTRING,ID) ; Append BCBS ID to local ID string, using ";" as the sub-delimiter. Called from BCBSID
"RTN","XUSNPIXU",67,0)
 ;
"RTN","XUSNPIXU",68,0)
 ; Input Parameters
"RTN","XUSNPIXU",69,0)
 ;       IDSTRING - Local variable ID string, passed from BCBSID
"RTN","XUSNPIXU",70,0)
 ;       ID       - ID to be appended to IDSTRING, passed from BCBSID
"RTN","XUSNPIXU",71,0)
 ;               
"RTN","XUSNPIXU",72,0)
 I '$D(ID)!('$D(IDSTRING)) Q
"RTN","XUSNPIXU",73,0)
 I ID'="",IDSTRING'[ID S IDSTRING=IDSTRING_ID_S
"RTN","XUSNPIXU",74,0)
 Q
"RTN","XUSNPIXU",75,0)
 ;
"RTN","XUSNPIXU",76,0)
PRACID(NPIEN,INS) ; Get Practitioner IDs
"RTN","XUSNPIXU",77,0)
 ;
"RTN","XUSNPIXU",78,0)
 ; Output Parameter
"RTN","XUSNPIXU",79,0)
 ;               INS - Array-Passed by Reference
"RTN","XUSNPIXU",80,0)
 N BIEN,PRAC,A,A1,A2
"RTN","XUSNPIXU",81,0)
 K INS
"RTN","XUSNPIXU",82,0)
 S BIEN=NPIEN_";VA(200,"
"RTN","XUSNPIXU",83,0)
 S PRAC=""
"RTN","XUSNPIXU",84,0)
 F  S PRAC=$O(^IBA(355.9,"B",BIEN,PRAC)) Q:'PRAC  D
"RTN","XUSNPIXU",85,0)
 . S A=$$BCBSTR(PRAC) I A="" Q  ;P 528
"RTN","XUSNPIXU",86,0)
 . S A1=$P(A,"^"),A2=$P(A,"^",2) I A1="" Q  ;add p 528
"RTN","XUSNPIXU",87,0)
 . I $D(INS(A1)) S INS(A1_" ")=A2 Q  ;add p 528
"RTN","XUSNPIXU",88,0)
 . S INS(A1)=A2  ;add p 528
"RTN","XUSNPIXU",89,0)
 Q
"RTN","XUSNPIXU",90,0)
 ;
"RTN","XUSNPIXU",91,0)
NNVAID(NPIEN,INS) ; Get Non-VA Provider IDS
"RTN","XUSNPIXU",92,0)
 ;
"RTN","XUSNPIXU",93,0)
 ; Output Parameter
"RTN","XUSNPIXU",94,0)
 ;               INS - Array-Passed by Reference             
"RTN","XUSNPIXU",95,0)
 N BIEN,PRAC,A,A1,A2
"RTN","XUSNPIXU",96,0)
 K INS
"RTN","XUSNPIXU",97,0)
 S BIEN=NPIEN_";IBA(355.93,"
"RTN","XUSNPIXU",98,0)
 S PRAC=""
"RTN","XUSNPIXU",99,0)
 F  S PRAC=$O(^IBA(355.9,"B",BIEN,PRAC)) Q:'PRAC  D
"RTN","XUSNPIXU",100,0)
 . S A=$$BCBSTR(PRAC) I A="" Q  ;p 528
"RTN","XUSNPIXU",101,0)
 . S A1=$P(A,"^"),A2=$P(A,"^",2) I A1="" Q  ;add p 528
"RTN","XUSNPIXU",102,0)
 . I $D(INS(A1)) S INS(A1_" ")=A2 Q  ;add p 528
"RTN","XUSNPIXU",103,0)
 . S INS(A1)=A2  ;add p 528
"RTN","XUSNPIXU",104,0)
 Q
"RTN","XUSNPIXU",105,0)
 ;
"RTN","XUSNPIXU",106,0)
INSTID(INSARRAY) ; Get Institution IDs
"RTN","XUSNPIXU",107,0)
 ;
"RTN","XUSNPIXU",108,0)
 ; Output Parameter
"RTN","XUSNPIXU",109,0)
 ;               INSARRAY - Array-Passed by Reference          
"RTN","XUSNPIXU",110,0)
 N INS,A
"RTN","XUSNPIXU",111,0)
 K INSARRAY
"RTN","XUSNPIXU",112,0)
 S INS=0
"RTN","XUSNPIXU",113,0)
 ; 12/13/2007 DLS - Change array structure from INSARRAY(A)="" to INSARRAY($P(A,U,1))=$P(A,U,2)
"RTN","XUSNPIXU",114,0)
 F  S INS=$O(^TMP("XUSNPIXU",$J,INS)) Q:INS=""  D
"RTN","XUSNPIXU",115,0)
 . S A=$G(^TMP("XUSNPIXU",$J,INS))
"RTN","XUSNPIXU",116,0)
 . I A'="" S INSARRAY($P(A,U,1))=$P(A,U,2)
"RTN","XUSNPIXU",117,0)
 Q
"RTN","XUSNPIXU",118,0)
 ;
"RTN","XUSNPIXU",119,0)
 ;
"RTN","XUSNPIXU",120,0)
BCBSTR(PRACIEN) ; Receive an IB Billing Practitioner Provider IEN and return the string of ID's already created.
"RTN","XUSNPIXU",121,0)
 ;
"RTN","XUSNPIXU",122,0)
 ; Input Parameters
"RTN","XUSNPIXU",123,0)
 ;       PRACIEN - Practitioner Ins. Co. file IEN - Linked to Provider and passed from NPI Extract.
"RTN","XUSNPIXU",124,0)
 ;       
"RTN","XUSNPIXU",125,0)
 ; System Parameters
"RTN","XUSNPIXU",126,0)
 ;               S ==> ";"  (Semi-Colon Sub-Delimiter)
"RTN","XUSNPIXU",127,0)
 ; Variables
"RTN","XUSNPIXU",128,0)
 ;       INSCO  - Insurance Company IEN
"RTN","XUSNPIXU",129,0)
 ;       PRVID  - Provider ID for the specific Insurance Company. This is added on to the ID string stored in TMP. 
"RTN","XUSNPIXU",130,0)
 ;
"RTN","XUSNPIXU",131,0)
 ; Get the Ins Co IEN
"RTN","XUSNPIXU",132,0)
 N INSCO,PRVID,P,S
"RTN","XUSNPIXU",133,0)
 S S=";"
"RTN","XUSNPIXU",134,0)
 S INSCO=$$GET1^DIQ(355.9,PRACIEN_",",.02,"I")
"RTN","XUSNPIXU",135,0)
 ;
"RTN","XUSNPIXU",136,0)
 ; Quit if this is NOT a Blue Cross/Blue Shield Insurance Company.
"RTN","XUSNPIXU",137,0)
 I $G(^TMP("XUSNPIXU",$J,+INSCO))="" Q ""
"RTN","XUSNPIXU",138,0)
 ;
"RTN","XUSNPIXU",139,0)
 ; Get the Practitioner ID for this specific Insurance Company. (commented out for now)
"RTN","XUSNPIXU",140,0)
 S PRVID=$$GET1^DIQ(355.9,PRACIEN_",",.07)
"RTN","XUSNPIXU",141,0)
 ;
"RTN","XUSNPIXU",142,0)
 ;  If PRVID is NOT null AND the ID is NOT already in the string AND
"RTN","XUSNPIXU",143,0)
 ; (If the string DOES NOT end with a "^", return the ID string with the sub-delimiter and PRVID appended) OR
"RTN","XUSNPIXU",144,0)
 ; (If the string DOES     end with a "^", return the ID string with only PRVID appended.)
"RTN","XUSNPIXU",145,0)
 I PRVID'="",((^TMP("XUSNPIXU",$J,INSCO)'["^PRVID;")!(^TMP("XUSNPIXU",$J,INSCO)'[";PRVID;")) D  Q ^TMP("XUSNPIXU",$J,INSCO)_PRVID
"RTN","XUSNPIXU",146,0)
 . I $E($L(^TMP("XUSNPIXU",$J,INSCO)))'=U S PRVID=S_PRVID
"RTN","XUSNPIXU",147,0)
 . Q
"RTN","XUSNPIXU",148,0)
 ;
"RTN","XUSNPIXU",149,0)
 ; If nothing needs changing, return the string unchanged.
"RTN","XUSNPIXU",150,0)
 Q ^TMP("XUSNPIXU",$J,INSCO)
"RTN","XUSNPIXU",151,0)
 ;
"RTN","XUSNPIXU",152,0)
INIT ;Initialize ^XTMP
"RTN","XUSNPIXU",153,0)
 K ^XTMP("XUSNPIX1")
"RTN","XUSNPIXU",154,0)
 K ^XTMP("XUSNPIX2")
"RTN","XUSNPIXU",155,0)
 K ^XTMP("XUSNPIX1NV")
"RTN","XUSNPIXU",156,0)
 K ^XTMP("XUSNPIX2NV")
"RTN","XUSNPIXU",157,0)
 K ^XTMP("XUSNPIXT")
"RTN","XUSNPIXU",158,0)
 ;
"VER")
8.0^22.0
"BLD",1239,6)
^440
**END**
**END**
