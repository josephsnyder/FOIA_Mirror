Released XU*8*546 SEQ #442
Extracted from mail message
**KIDS**:XU*8.0*546^

**INSTALL NAME**
XU*8.0*546
"BLD",1301,0)
XU*8.0*546^KERNEL^0^3101014^y
"BLD",1301,1,0)
^^2^2^3100505^^
"BLD",1301,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",1301,1,2,0)
XU*8*546  More Mixed OS device fixes.
"BLD",1301,4,0)
^9.64PA^3.5^2
"BLD",1301,4,3.081,0)
3.081
"BLD",1301,4,3.081,2,0)
^9.641^3.081^1
"BLD",1301,4,3.081,2,3.081,0)
SIGN-ON LOG  (File-top level)
"BLD",1301,4,3.081,2,3.081,1,0)
^9.6411^99^1
"BLD",1301,4,3.081,2,3.081,1,99,0)
ELAPSED TIME (MINUTES)
"BLD",1301,4,3.081,222)
y^y^p^^^^n^^n
"BLD",1301,4,3.081,224)

"BLD",1301,4,3.5,0)
3.5
"BLD",1301,4,3.5,2,0)
^9.641^3.5^1
"BLD",1301,4,3.5,2,3.5,0)
DEVICE  (File-top level)
"BLD",1301,4,3.5,2,3.5,1,0)
^9.6411^18000^3
"BLD",1301,4,3.5,2,3.5,1,2,0)
TYPE
"BLD",1301,4,3.5,2,3.5,1,5.5,0)
QUEUING
"BLD",1301,4,3.5,2,3.5,1,18000,0)
NVS PASSOVER FLAG
"BLD",1301,4,3.5,222)
y^n^p^^^^n^^n
"BLD",1301,4,3.5,224)

"BLD",1301,4,"APDD",3.081,3.081)

"BLD",1301,4,"APDD",3.081,3.081,99)

"BLD",1301,4,"APDD",3.5,3.5)

"BLD",1301,4,"APDD",3.5,3.5,2)

"BLD",1301,4,"APDD",3.5,3.5,5.5)

"BLD",1301,4,"APDD",3.5,3.5,18000)

"BLD",1301,4,"B",3.081,3.081)

"BLD",1301,4,"B",3.5,3.5)

"BLD",1301,6.3)
9
"BLD",1301,"INID")
^n
"BLD",1301,"INIT")
POST^XU8P546
"BLD",1301,"KRN",0)
^9.67PA^9002226^21
"BLD",1301,"KRN",.4,0)
.4
"BLD",1301,"KRN",.401,0)
.401
"BLD",1301,"KRN",.402,0)
.402
"BLD",1301,"KRN",.403,0)
.403
"BLD",1301,"KRN",.5,0)
.5
"BLD",1301,"KRN",.84,0)
.84
"BLD",1301,"KRN",3.6,0)
3.6
"BLD",1301,"KRN",3.8,0)
3.8
"BLD",1301,"KRN",9.2,0)
9.2
"BLD",1301,"KRN",9.8,0)
9.8
"BLD",1301,"KRN",9.8,"NM",0)
^9.68A^12^10
"BLD",1301,"KRN",9.8,"NM",2,0)
ZIS^^0^B19582012
"BLD",1301,"KRN",9.8,"NM",3,0)
ZIS2^^0^B17503413
"BLD",1301,"KRN",9.8,"NM",4,0)
ZISFONT^^0^B10375505
"BLD",1301,"KRN",9.8,"NM",5,0)
ZIS1^^0^B27515391
"BLD",1301,"KRN",9.8,"NM",6,0)
ZIS5^^0^B14306275
"BLD",1301,"KRN",9.8,"NM",7,0)
ZIS7^^0^B4664721
"BLD",1301,"KRN",9.8,"NM",8,0)
ZISHONT^^0^B60362647
"BLD",1301,"KRN",9.8,"NM",9,0)
ZIS3^^0^B13326333
"BLD",1301,"KRN",9.8,"NM",10,0)
ZIS4ONT^^0^B30953938
"BLD",1301,"KRN",9.8,"NM",12,0)
ZIS6^^0^B20915436
"BLD",1301,"KRN",9.8,"NM","B","ZIS",2)

"BLD",1301,"KRN",9.8,"NM","B","ZIS1",5)

"BLD",1301,"KRN",9.8,"NM","B","ZIS2",3)

"BLD",1301,"KRN",9.8,"NM","B","ZIS3",9)

"BLD",1301,"KRN",9.8,"NM","B","ZIS4ONT",10)

"BLD",1301,"KRN",9.8,"NM","B","ZIS5",6)

"BLD",1301,"KRN",9.8,"NM","B","ZIS6",12)

"BLD",1301,"KRN",9.8,"NM","B","ZIS7",7)

"BLD",1301,"KRN",9.8,"NM","B","ZISFONT",4)

"BLD",1301,"KRN",9.8,"NM","B","ZISHONT",8)

"BLD",1301,"KRN",19,0)
19
"BLD",1301,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",1301,"KRN",19,"NM",1,0)
XUHGMGR^^1^
"BLD",1301,"KRN",19,"NM","B","XUHGMGR",1)

"BLD",1301,"KRN",19.1,0)
19.1
"BLD",1301,"KRN",101,0)
101
"BLD",1301,"KRN",409.61,0)
409.61
"BLD",1301,"KRN",771,0)
771
"BLD",1301,"KRN",779.2,0)
779.2
"BLD",1301,"KRN",870,0)
870
"BLD",1301,"KRN",8989.51,0)
8989.51
"BLD",1301,"KRN",8989.52,0)
8989.52
"BLD",1301,"KRN",8994,0)
8994
"BLD",1301,"KRN",9002226,0)
9002226
"BLD",1301,"KRN","B",.4,.4)

"BLD",1301,"KRN","B",.401,.401)

"BLD",1301,"KRN","B",.402,.402)

"BLD",1301,"KRN","B",.403,.403)

"BLD",1301,"KRN","B",.5,.5)

"BLD",1301,"KRN","B",.84,.84)

"BLD",1301,"KRN","B",3.6,3.6)

"BLD",1301,"KRN","B",3.8,3.8)

"BLD",1301,"KRN","B",9.2,9.2)

"BLD",1301,"KRN","B",9.8,9.8)

"BLD",1301,"KRN","B",19,19)

"BLD",1301,"KRN","B",19.1,19.1)

"BLD",1301,"KRN","B",101,101)

"BLD",1301,"KRN","B",409.61,409.61)

"BLD",1301,"KRN","B",771,771)

"BLD",1301,"KRN","B",779.2,779.2)

"BLD",1301,"KRN","B",870,870)

"BLD",1301,"KRN","B",8989.51,8989.51)

"BLD",1301,"KRN","B",8989.52,8989.52)

"BLD",1301,"KRN","B",8994,8994)

"BLD",1301,"KRN","B",9002226,9002226)

"BLD",1301,"PRE")
XU8P546
"BLD",1301,"QDEF")
^^^^YES
"BLD",1301,"QUES",0)
^9.62^^
"BLD",1301,"REQB",0)
^9.611^3^2
"BLD",1301,"REQB",2,0)
XU*8.0*524^2
"BLD",1301,"REQB",3,0)
XU*8.0*205^2
"BLD",1301,"REQB","B","XU*8.0*205",3)

"BLD",1301,"REQB","B","XU*8.0*524",2)

"FIA",3.081)
SIGN-ON LOG
"FIA",3.081,0)
^XUSEC(0,
"FIA",3.081,0,0)
3.081P
"FIA",3.081,0,1)
y^y^p^^^^n^^n
"FIA",3.081,0,10)

"FIA",3.081,0,11)

"FIA",3.081,0,"RLRO")

"FIA",3.081,0,"VR")
8.0^XU
"FIA",3.081,3.081)
1
"FIA",3.081,3.081,99)

"FIA",3.5)
DEVICE
"FIA",3.5,0)
^%ZIS(1,
"FIA",3.5,0,0)
3.5Is
"FIA",3.5,0,1)
y^n^p^^^^n^^n
"FIA",3.5,0,10)

"FIA",3.5,0,11)

"FIA",3.5,0,"RLRO")

"FIA",3.5,0,"VR")
8.0^XU
"FIA",3.5,3.5)
1
"FIA",3.5,3.5,2)

"FIA",3.5,3.5,5.5)

"FIA",3.5,3.5,18000)

"INIT")
POST^XU8P546
"KRN",19,1524,-1)
1^1
"KRN",19,1524,0)
XUHGMGR
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3090706^3090706^6
"PKG",3,22,1,"PAH",1,0)
546^3101014
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3101014
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*546  More Mixed OS device fixes.
"PRE")
XU8P546
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","XU8P546")
0^^B4830511^n/a
"RTN","XU8P546",1,0)
XU8P546 ;ISF/RWF - Patch XU-546 Pre/Post init ;10/06/10  16:07
"RTN","XU8P546",2,0)
 ;;8.0;KERNEL;**546**;;Build 9
"RTN","XU8P546",3,0)
 ;Fall into
"RTN","XU8P546",4,0)
ENV ;Environment Check
"RTN","XU8P546",5,0)
 N HG,DA,IX,ZTSK,ZTDTH,FIRST,X,Y
"RTN","XU8P546",6,0)
 S IX=0,U="^"
"RTN","XU8P546",7,0)
 F  S IX=$O(^%ZIS(1,"AHG",IX)),DA=0 Q:'IX  F  S DA=$O(^%ZIS(1,"AHG",IX,DA)) Q:'DA  S HG(DA)=0
"RTN","XU8P546",8,0)
 Q:'$D(HG)
"RTN","XU8P546",9,0)
 W !,"The following Devices have entries in the HUNT GROUP Multiple (that is"
"RTN","XU8P546",10,0)
 W !,"to be deleted) and will need to addressed before installing the patch.",!
"RTN","XU8P546",11,0)
 S DA=0
"RTN","XU8P546",12,0)
 F  S DA=$O(HG(DA)) Q:'DA  D SHOW1(DA)
"RTN","XU8P546",13,0)
 S ZTDTH=0,FIRST=1
"RTN","XU8P546",14,0)
 F  S ZTDTH=$O(^%ZTSCH(ZTDTH)),ZTSK=0 Q:'ZTDTH  D
"RTN","XU8P546",15,0)
 . F  S ZTSK=$O(^%ZTSCH(ZTDTH,ZTSK)),IX=0 Q:'ZTSK  S X=$P($P($G(^%ZTSK(ZTSK,.2)),U),";"),Y=$P($G(^(.26)),U) D
"RTN","XU8P546",16,0)
 . . F  S IX=$O(HG(IX)) Q:'IX  I X=HG(IX)!(Y=HG(IX)) D LABEL:FIRST,EN^XUTMTP(ZTSK) W !
"RTN","XU8P546",17,0)
 . . Q
"RTN","XU8P546",18,0)
 . Q
"RTN","XU8P546",19,0)
 S:$G(XPDENV)=1 XPDQUIT=2 ;Don't install, Leave global
"RTN","XU8P546",20,0)
 Q
"RTN","XU8P546",21,0)
 ;
"RTN","XU8P546",22,0)
LABEL ;Tasks Lable
"RTN","XU8P546",23,0)
 S FIRST=0 D ENV^XUTMUTL
"RTN","XU8P546",24,0)
 W !!,"The following tasks use a Hunt Group Device.",!
"RTN","XU8P546",25,0)
 Q
"RTN","XU8P546",26,0)
 ;
"RTN","XU8P546",27,0)
PRE ;
"RTN","XU8P546",28,0)
 Q
"RTN","XU8P546",29,0)
 ;
"RTN","XU8P546",30,0)
POST ;#29 old HG, #30 (3.53) HG Multiple
"RTN","XU8P546",31,0)
 N DA,DIK,HG,DIU
"RTN","XU8P546",32,0)
 D BMES^XPDUTL("Removing old Hunt Group field (#29).")
"RTN","XU8P546",33,0)
 S DA=29,DA(1)=3.5,DIK="^DD(3.5," ;D ^DIK
"RTN","XU8P546",34,0)
 D BMES^XPDUTL("Removing Hunt Group Multiple (#30).")
"RTN","XU8P546",35,0)
 S DIU=3.53,DIU(0)="SED" D EN^DIU2
"RTN","XU8P546",36,0)
 K ^%ZIS(1,"AHG") ;Remove the X-ref.
"RTN","XU8P546",37,0)
 D PATCH^ZTMGRSET(546)
"RTN","XU8P546",38,0)
 Q
"RTN","XU8P546",39,0)
 ;
"RTN","XU8P546",40,0)
SHOW1(DA) ;
"RTN","XU8P546",41,0)
 N X,X1,I
"RTN","XU8P546",42,0)
 S X=$G(^%ZIS(1,DA,0)),X1=$G(^("TYPE")),HG(DA)=$P(X,U)
"RTN","XU8P546",43,0)
 W !," Device: "_$P(X,U)_" is type "_X1_" and has the following members."
"RTN","XU8P546",44,0)
 S I=0
"RTN","XU8P546",45,0)
 F  S I=$O(^%ZIS(1,DA,"HG",I)) Q:'I  S X1=^%ZIS(1,DA,"HG",I,0),X=$G(^%ZIS(1,X1,0)) W !,?5,$P(X,U)
"RTN","XU8P546",46,0)
 Q
"RTN","XU8P546",47,0)
 ;
"RTN","ZIS")
0^2^B19582012^B21144380
"RTN","ZIS",1,0)
%ZIS ;SFISC/AC,RWF -- DEVICE HANDLER ;06/09/10  16:15
"RTN","ZIS",2,0)
 ;;8.0;KERNEL;**18,23,69,112,199,191,275,363,440,499,524,546**;JUL 10, 1995;Build 9
"RTN","ZIS",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZIS",4,0)
 N %ZISOS,%ZISV
"RTN","ZIS",5,0)
 S U="^",%ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^%ZOSF("VOL")),POP=0 ;p524
"RTN","ZIS",6,0)
 ;Check SPOOLER special case first
"RTN","ZIS",7,0)
INIT ;
"RTN","ZIS",8,0)
 I $G(ZTQUEUED),$G(IOT)="SPL",$D(IOP),$L($G(IO)),IO=$G(IO(0)),$D(IO(1,IO))#2,(IOP[$G(ION)!(IOP[IO)) K %ZIS,%IS,IOP Q  ;p524
"RTN","ZIS",9,0)
 ;p524 Line above for HD141181.
"RTN","ZIS",10,0)
 I '$D(%ZIS),$D(%IS) M %ZIS=%IS
"RTN","ZIS",11,0)
 S:'($D(%ZIS)#2) %ZIS="M" M %IS=%ZIS ;update %IS for now
"RTN","ZIS",12,0)
 I '$D(^XUTL("XQ",$J,"MIXED OS")) S ^XUTL("XQ",$J,"MIXED OS")=$$PRI^%ZOSV
"RTN","ZIS",13,0)
 S %ZIS("PRI")=$G(^XUTL("XQ",$J,"MIXED OS"),1)
"RTN","ZIS",14,0)
 ;
"RTN","ZIS",15,0)
 I $D(ZTQUEUED) D  I '$D(IOP) S POP=1 G EXIT^%ZIS1
"RTN","ZIS",16,0)
 .I $G(ZTIO)="" S:%ZIS'[0 %ZIS=%ZIS_"0",%IS=%ZIS
"RTN","ZIS",17,0)
 I '$D(ZTQUEUED),%ZIS["T",$P($G(IOP),";")="Q" S POP=1 G EXIT^%ZIS1
"RTN","ZIS",18,0)
 N %,%A,%E,%H,%I,%X,%XX,%Y,%Z,%Z1,%Z2,%Z9,%Z90,%Z91,%Z95,%ZISB,%ZTIME,%ZTYPE
"RTN","ZIS",19,0)
 N %ZHFN,%ZISOLD,%ZTOUT,%ZISDTIM,DTOUT,DUOUT
"RTN","ZIS",20,0)
 S %ZISDTIM=$G(DTIME,300)
"RTN","ZIS",21,0)
 ;Save symbols to restore if don't open a device
"RTN","ZIS",22,0)
 D SYMBOL^%ZISUTL(0,$NA(%ZISOLD))
"RTN","ZIS",23,0)
A D CLEAN ;p363
"RTN","ZIS",24,0)
 K IO("P"),IO("Q"),IO("S"),IO("T")
"RTN","ZIS",25,0)
K2 D K2^%ZIS1
"RTN","ZIS",26,0)
 S %ZISB=%ZIS'["N",(%E,%H)=0,%Y="" S:'$D(IO(0)) IO(0)=$I
"RTN","ZIS",27,0)
 I $D(IOP),IOP=$I!(IOP="HOME")!(0[IOP),$D(^XUTL("XQ",$J,"IO")) D HOME K %IS,%Y,%ZIS,%ZISB,%ZISV,IOP Q
"RTN","ZIS",28,0)
 ;Don't worry about HOME if %ZIS[0
"RTN","ZIS",29,0)
 D:%ZIS'[0 GETHOME G EXIT^%ZIS1:POP,^%ZIS1 ;Jump to next part
"RTN","ZIS",30,0)
 ;
"RTN","ZIS",31,0)
GETHOME I $D(IO("HOME")),$P(IO("HOME"),"^",2)=IO(0) S (%E,%H)=+IO("HOME") Q
"RTN","ZIS",32,0)
 I $D(^XUTL("XQ",$J,"IOS")),$D(^("IO")),IO(0)=^("IO") S (%E,%H)=^("IOS") Q
"RTN","ZIS",33,0)
 ;CALL LINEPORT CODE HERE---
"RTN","ZIS",34,0)
 S %=$$LINEPORT^%ZISUTL I % S (%E,%H)=% Q
"RTN","ZIS",35,0)
 S %ZISVT=$I D VTLKUP I '%E S %ZISVT=$I D VIRTUAL
"RTN","ZIS",36,0)
 I %ZISVT=""!(%E'>0) I %ZIS'[0 O IO(0)::0 I $T U IO(0) W !,"HOME DEVICE ("_$I_") DOES NOT EXIST IN THE DEVICE FILE",!,"PLEASE CONTACT YOUR SYSTEM MANAGER!",*7
"RTN","ZIS",37,0)
 S %H=%E S:'%H&(%ZIS'[0) POP=1 S:(%H>0)&('$D(IO("HOME"))) IO("HOME")=%H_"^"_$I
"RTN","ZIS",38,0)
 Q
"RTN","ZIS",39,0)
VIRTUAL ;See if a Virtual Terminal (LAT, TELNET)
"RTN","ZIS",40,0)
 ;Change the MSM check for telnet to work with v4.4
"RTN","ZIS",41,0)
 ;I %ZISOS["MSM" X "I $P($ZV,""Version "",2)'<3 S %ZISVT=$ZDE(+%ZISVT) I %ZISVT?.E1""~""4.5N.E S %ZISVT=""TELNET"""
"RTN","ZIS",42,0)
 ;Changed to remove CPU x-ref's.  The G X-ref is triggered from the Sign-on field (1.95)
"RTN","ZIS",43,0)
 F %ZISI=$L(%ZISVT):-1:1 D:$D(^%ZIS(1,"C",%ZISVT))  Q:$S('%E:0,$G(^%ZIS(1,%E,"TYPE"))="VTRM":1,1:0)  S %ZISVT=$E(%ZISVT,1,%ZISI)
"RTN","ZIS",44,0)
 .D VTLKUP Q  ;Q:$S('%E:0,'$D(^%ZIS(1,%E,"TYPE")):0,^("TYPE")="VTRM":1,1:0)
"RTN","ZIS",45,0)
 .;S %X=0 F %ZISX=%ZISV,"" Q:%X>0  S %X=0 F  S %E=+$O(^%ZIS(1,"CPU",%ZISX_"."_%ZISVT,%X)) S %X=%E Q:%E'>0  I $G(^%ZIS(1,+%E,"TYPE"))="VTRM" Q
"RTN","ZIS",46,0)
 Q
"RTN","ZIS",47,0)
VTLKUP F %ZISX=%ZISV,"" S %E=+$O(^%ZIS(1,"G","SYS."_%ZISX_"."_%ZISVT,0)) Q:%E
"RTN","ZIS",48,0)
 Q
"RTN","ZIS",49,0)
 ;
"RTN","ZIS",50,0)
CURRENT ;Old, Not in current doc's.
"RTN","ZIS",51,0)
 N %ZIS,%IS,%E,%H,%A,%,POP,X
"RTN","ZIS",52,0)
 S FF="#",SL=24,BS="*8",RM=80,(SUB,XY)="",%ZIS=0,%ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^("VOL")),POP=0
"RTN","ZIS",53,0)
 D GETHOME K %ZISI,%ZISOS,%ZISV,%ZISVT,%ZISX Q:POP
"RTN","ZIS",54,0)
 I $D(^%ZIS(1,%H,"SUBTYPE")) S SUB=+^("SUBTYPE")
"RTN","ZIS",55,0)
 I $D(SUB),SUB,$D(^%ZIS(2,SUB,1)) S SUB=$S($D(^(0)):$P(^(0),"^"),1:""),FF=$P(^(1),"^",2),SL=$P(^(1),"^",3),BS=$P(^(1),"^",4),XY=$P(^(1),"^",5),RM=+^(1)
"RTN","ZIS",56,0)
 E  S SUB=""
"RTN","ZIS",57,0)
 I $D(^%ZOSF("RM")) S X=RM X ^("RM")
"RTN","ZIS",58,0)
 Q
"RTN","ZIS",59,0)
HOME ;Entry point to establish IO* variables for home device.
"RTN","ZIS",60,0)
 D CLEAN ;(p363)
"RTN","ZIS",61,0)
 N X I '$D(^XUTL("XQ",$J,"IO")) S IOP="HOME" D ^%ZIS Q
"RTN","ZIS",62,0)
 D RESETVAR
"RTN","ZIS",63,0)
 I $L($G(IO)),$P($G(IO("HOME")),"^",2)=IO,$D(IO(1,IO)) U IO ;p524
"RTN","ZIS",64,0)
 I '$D(IO("C")),$G(IOM),IO=$I,$D(IO(1,IO)),$D(^%ZOSF("RM")) S X=+IOM X ^("RM")
"RTN","ZIS",65,0)
 Q
"RTN","ZIS",66,0)
 ;IO("Q") is checked by many routines after a call to ^%ZISC, so only clean on call to %ZIS.
"RTN","ZIS",67,0)
CLEAN ;Cleanup env. Called from %ZISC also.
"RTN","ZIS",68,0)
 I $G(IOT)'="SPL" K IO("DOC"),IO("SPOOL") ;(p440)
"RTN","ZIS",69,0)
 I $G(IOT)'="HFS" K IO("HFSIO") ;p440
"RTN","ZIS",70,0)
 S (IOPAR,IOUPAR)=""
"RTN","ZIS",71,0)
 Q
"RTN","ZIS",72,0)
 ;
"RTN","ZIS",73,0)
RESETVAR ;Reset home IO* variables.
"RTN","ZIS",74,0)
 I '$D(^XUTL("XQ",$J,"IO")) Q
"RTN","ZIS",75,0)
 N %
"RTN","ZIS",76,0)
 F %="IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","IOPAR","IOUPAR" I $D(^XUTL("XQ",$J,%))#2 S @%=^(%)
"RTN","ZIS",77,0)
 F %="IO(""IP"")","IO(""CLNM"")","IO(""DOC"")","IO(""HFSIO"")","IO(""SPOOL"")" I $D(^XUTL("XQ",$J,%))#2 S @%=^(%)
"RTN","ZIS",78,0)
 S POP=0,IO(0)=IO
"RTN","ZIS",79,0)
 Q
"RTN","ZIS",80,0)
SAVEVAR ;Save home IO* variables, called from XUS1,%ZTMS3
"RTN","ZIS",81,0)
 N %
"RTN","ZIS",82,0)
 F %="IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","IOPAR","IOUPAR" I $D(@%) S ^XUTL("XQ",$J,%)=@%
"RTN","ZIS",83,0)
 F %="IO(""IP"")","IO(""CLNM"")","IO(""DOC"")","IO(""HFSIO"")","IO(""SPOOL"")" I $D(@%) S ^XUTL("XQ",$J,%)=@%
"RTN","ZIS",84,0)
 Q
"RTN","ZIS",85,0)
ZISLPC Q  ;No longer called in Kernel v8.
"RTN","ZIS",86,0)
 ;
"RTN","ZIS",87,0)
HLP1 G EN1^%ZIS7
"RTN","ZIS",88,0)
HLP2 N %E,%H,%X,%ZISV,X,%ZISDTIM
"RTN","ZIS",89,0)
 S %ZISDTIM=$G(DTIME,60),%ZISV=$S($D(^%ZOSF("VOL")):^("VOL"),1:"") G EN2^%ZIS7
"RTN","ZIS",90,0)
 ;
"RTN","ZIS",91,0)
REWIND(IO2,IOT,IOPAR) ;Rewind Device
"RTN","ZIS",92,0)
 N %,X,Y,$ES,$ET S $ET="D REWERR^%ZIS Q 0"
"RTN","ZIS",93,0)
 S %=$I
"RTN","ZIS",94,0)
 I '($D(IO2)#2)!'$D(IOT)!'$D(IOPAR) Q 0
"RTN","ZIS",95,0)
 I "MT^SDP^HFS"'[IOT Q 0
"RTN","ZIS",96,0)
 S @("Y=$$REW"_IOT_"^%ZIS4(IO2,IOPAR)")
"RTN","ZIS",97,0)
 U %
"RTN","ZIS",98,0)
 Q Y
"RTN","ZIS",99,0)
REWERR ;Error encountered
"RTN","ZIS",100,0)
 S IO("ERROR")=$EC
"RTN","ZIS",101,0)
 S $EC="",$ET="Q:$ES>1  S $EC="""" Q 0" S $EC=",U1,"
"RTN","ZIS",102,0)
 Q 0
"RTN","ZIS",103,0)
 ;
"RTN","ZIS1")
0^5^B27515391^B26104414
"RTN","ZIS1",1,0)
%ZIS1 ;SFISC/AC,RWF -- DEVICE HANDLER (DEVICE INPUT) ;08/17/10  11:50
"RTN","ZIS1",2,0)
 ;;8.0;KERNEL;**18,49,69,104,112,199,391,440,499,518,546**;JUL 10, 1995;Build 9
"RTN","ZIS1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZIS1",4,0)
MAIN ;Called from %ZIS with a GOTO
"RTN","ZIS1",5,0)
 ;Check for "ASK DEVICE"
"RTN","ZIS1",6,0)
 I '$D(IOP),$D(^%ZIS(1,%E,0)),'$P(^(0),"^",3) S %A=%H,%Z=^(0) D L2^%ZIS2 G EXIT
"RTN","ZIS1",7,0)
L1 ;Main Device Lookup Loop
"RTN","ZIS1",8,0)
 I '$D(IOP),$D(IO("Q")),POP D AQUE^%ZIS3 K:%=2 IO("Q") S:%=2 %ZISB=$S(%ZIS'["N":2,1:0) I %=-1 S POP=1 G EXIT
"RTN","ZIS1",9,0)
 S %E=%H,POP=0,%IS=%ZIS ;Reset %IS from %ZIS
"RTN","ZIS1",10,0)
 I %ZIS'["Q",$D(XQNOGO) S POP=1 W:'$D(IOP) !,$C(7),"OUTPUT IS NEVER ALLOWED FOR THIS OPTION" G EXIT
"RTN","ZIS1",11,0)
 D IOP:$D(IOP),R:'$D(IOP)
"RTN","ZIS1",12,0)
 G EXIT:$D(DTOUT)!$D(DUOUT)!(POP&$D(IOP)),L1:POP&'$D(IOP)
"RTN","ZIS1",13,0)
 D LKUP I %A'>0 S POP=1 D:'$D(DUOUT) MSG1 K DUOUT
"RTN","ZIS1",14,0)
 I %A>0,'$D(^%ZIS(1,%A,0)) D MSG2 K %ZISIOS S POP=1
"RTN","ZIS1",15,0)
 I POP G EXIT:$D(IOP),L1:'$D(IOP)
"RTN","ZIS1",16,0)
 S %E=%A,%Z1=$G(^%ZIS(1,%A,1)),%Z=^(0) ;Set naked for screen
"RTN","ZIS1",17,0)
 I $D(%ZIS("S")) N Y S Y=%E D XS^ZISX S:'$T POP=1 G G:POP ;Screen Code
"RTN","ZIS1",18,0)
 W:'$D(IOP)&($P(%Z,"^",2)'=$I)&($P(%Z1,"^")]"") "  ",$P(%Z1,"^")
"RTN","ZIS1",19,0)
 D L2^%ZIS2 ;Call
"RTN","ZIS1",20,0)
G G L1:POP&'$D(IOP)&'($D(DTOUT)!$D(DUOUT)) ;Didn't get it
"RTN","ZIS1",21,0)
 ;
"RTN","ZIS1",22,0)
EXIT ;
"RTN","ZIS1",23,0)
 I POP G EX2 ;Did not get the device.
"RTN","ZIS1",24,0)
 ;For type[TRM reset $X & $Y
"RTN","ZIS1",25,0)
 I %ZTYPE["TRM",IO]"",$D(IO(1,IO)) U IO S:'(IO=IO(0)&'$D(IO("S"))&'$D(ZTQUEUED)) $X=0,$Y=0
"RTN","ZIS1",26,0)
 ;Do count of number of times device opened.  Field 51.
"RTN","ZIS1",27,0)
 I $L($G(IO)),$D(IO(1,IO))#2,$G(%ZISIOS) D
"RTN","ZIS1",28,0)
 . S $P(^(5),"^",1)=$P($G(^%ZIS(1,%ZISIOS,5)),"^",1)+1
"RTN","ZIS1",29,0)
 I %ZIS["H" S IO(0)=IO,IO("HOME")=%ZISIOS_"^"_IO ;Make home device
"RTN","ZIS1",30,0)
 I '$D(IO("Q")),$D(%ZISLOCK) S ^XUTL("XQ",$J,"lock",%ZISIOS)=%ZISLOCK
"RTN","ZIS1",31,0)
 I $D(IO)#2,IO]"",$D(IO(1,IO))#2,$D(%Z1),$P(%Z1,"^",11) S IO(1,IO,"NOFF")=1
"RTN","ZIS1",32,0)
EX2 ;
"RTN","ZIS1",33,0)
 I %ZIS'[0,$G(IO(0))]"" U IO(0) ;Make sure return with home active
"RTN","ZIS1",34,0)
 G SETVAR:'POP!(%ZIS["T"),KILVAR
"RTN","ZIS1",35,0)
 ;
"RTN","ZIS1",36,0)
IOP ;Request with IOP set
"RTN","ZIS1",37,0)
 S (%ZISVT,%X)=IOP S:%X'?1.UNP %X=$$UP(%X) I %X'="Q" D SETQ Q
"RTN","ZIS1",38,0)
 S %ZIS=%ZIS_%X,%IS=%ZIS K IOP W %X D SETQ
"RTN","ZIS1",39,0)
 Q
"RTN","ZIS1",40,0)
 ;Get ready to ask user for device
"RTN","ZIS1",41,0)
R I %ZIS["Q",$D(XQNOGO) W !,$C(7),"at this time, Output MUST be QUEUED"
"RTN","ZIS1",42,0)
 S %A=$S($D(%ZIS("B")):%ZIS("B"),1:"HOME") ;Setup default
"RTN","ZIS1",43,0)
 I %ZIS["P",%A="HOME",$D(^%ZIS(1,%E,99)),$D(^%ZIS(1,+^(99),0)) S %A=$P(^(0),"^",1)
"RTN","ZIS1",44,0)
RD W !,$S($D(%ZIS("A")):%ZIS("A"),1:"DEVICE: ") W:%A]"" %A,"// " D SBR S:%X="" %X=%A S %ZISVT=%X
"RTN","ZIS1",45,0)
 I %X?2"?".E D EN2^%ZIS7 G R
"RTN","ZIS1",46,0)
 I %X?1"?".E D EN1^%ZIS7 G R
"RTN","ZIS1",47,0)
 I $D(DTOUT)!$D(DUOUT)!(%X'?.ANP)!($L($P(%X,";"))>31) S:%ZIS["T" IO="" S POP=1 Q
"RTN","ZIS1",48,0)
 S:%X'?1.UNP %X=$$UP(%X) D SETQ G R:$T
"RTN","ZIS1",49,0)
 Q
"RTN","ZIS1",50,0)
SETQ ;User wants to queue output
"RTN","ZIS1",51,0)
 S %Y=$P(%X,";",2,9),%X=$P(%X,";",1) S:$L(";"_%Y,";/")=2 IO("P")=$P(";"_%Y,";/",2)
"RTN","ZIS1",52,0)
 I %X="Q",%ZIS'["Q" W:'$D(IOP) "  Application doesn't support Queuing",!
"RTN","ZIS1",53,0)
 I %ZIS["Q",%X="Q" S %X=%Y,%ZISVT=$P(%ZISVT,";",2,9),%ZISB=0,IO("Q")=1,%ZIS("A")="DEVICE: " S:$D(IOP) %Y=$P(%X,";",2,9),%X=$P(%X,";",1)
"RTN","ZIS1",54,0)
 I $T,'$D(IOP) W "UEUE TO PRINT ON" Q  ; Return $T value
"RTN","ZIS1",55,0)
 Q
"RTN","ZIS1",56,0)
 ;%X is uppercase of %ZISVT
"RTN","ZIS1",57,0)
LKUP ;Lookup device name
"RTN","ZIS1",58,0)
 S %ZISMY=$P(%ZISVT,";",2,999),%ZISVT=$P(%ZISVT,";")
"RTN","ZIS1",59,0)
 I %X="H" W:'$D(IOP) "ome" S %X=0
"RTN","ZIS1",60,0)
 I 0[%X!(%X="HOME")!(%X=$I) S %A=%H Q
"RTN","ZIS1",61,0)
 I $E(%ZISVT)="`",$D(IOP) S %A=+$E(%ZISVT,2,999) I $D(^%ZIS(1,%A,0))#2 Q
"RTN","ZIS1",62,0)
 S %A=0 I "P"[%X Q:$D(IOP)&('$D(^%ZIS(1,%E,99)))  I $D(^%ZIS(1,%E,99)) S %A=+^(99) Q  ;Closest Printer
"RTN","ZIS1",63,0)
 I %X=" ",$D(DUZ)#2,$D(^DISV(+DUZ,"^%ZIS(1,")) S %A=^("^%ZIS(1,") Q
"RTN","ZIS1",64,0)
 S %A=+$O(^%ZIS(1,"B",%ZISVT,0)) Q:%A>0  ;mixed case lookup
"RTN","ZIS1",65,0)
 I %X'=%ZISVT S %A=+$O(^%ZIS(1,"B",%X,0)) Q:%A>0  ;uppercase lookup
"RTN","ZIS1",66,0)
 D VTLKUP^%ZIS S %A=%E Q:%A>0  ;mixed case lookup
"RTN","ZIS1",67,0)
 I %X'=%ZISVT S %ZISVT=%X D VTLKUP^%ZIS S %A=%E Q:%A>0  ;uppercase lookup
"RTN","ZIS1",68,0)
 N %XX,%YY S %XX=%X D 1^%ZIS5 S %A=+%YY
"RTN","ZIS1",69,0)
 Q
"RTN","ZIS1",70,0)
SBR ;Read Sub-routine, Output %X
"RTN","ZIS1",71,0)
 K DTOUT,DUOUT R %X:%ZISDTIM E  W $C(7) S DTOUT=1 Q
"RTN","ZIS1",72,0)
 S:%X="."!(%X="^") DUOUT=1,%X=""
"RTN","ZIS1",73,0)
 Q
"RTN","ZIS1",74,0)
 ;
"RTN","ZIS1",75,0)
LOW(%) Q $TR(%,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ZIS1",76,0)
UP(%) Q $TR(%,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ZIS1",77,0)
 ;
"RTN","ZIS1",78,0)
 ;Call/Return % = 1 (yes), 2 (no) -1 (^)
"RTN","ZIS1",79,0)
YN W "? ",$P("Yes// ^No// ",U,%)
"RTN","ZIS1",80,0)
RYN R %X:%ZISDTIM E  S DTOUT=1,%X=U W $C(7)
"RTN","ZIS1",81,0)
 S:$L(%X)!'% %X=$E(%X),%=$S("Yy"[%X:1,"Nn"[%X:2,"^"[%X:-1,1:0)
"RTN","ZIS1",82,0)
 I '%,%X'?."?" W $C(7),"??",!?4,"ANSWER 'Yes' OR 'No': " G RYN
"RTN","ZIS1",83,0)
 W:$X>73 ! W $P("  (Yes)^  (No)",U,%)
"RTN","ZIS1",84,0)
 Q
"RTN","ZIS1",85,0)
MSG1 I '$D(IOP) W ?20,$C(7),"  [DEVICE DOES NOT EXIST]"
"RTN","ZIS1",86,0)
 Q
"RTN","ZIS1",87,0)
MSG2 I '$D(IOP) W ?20,$C(7),"  [DEVICE FILE ERROR]"
"RTN","ZIS1",88,0)
 Q
"RTN","ZIS1",89,0)
 ;
"RTN","ZIS1",90,0)
SETVAR ;Come here to setup the variables for the selected device
"RTN","ZIS1",91,0)
 S:$D(IO)[0 IO="" G KILVAR:%ZIS["T"&(IO="")
"RTN","ZIS1",92,0)
 I $G(%Z)="" S ION="Unknown device",POP=1 G KILVAR
"RTN","ZIS1",93,0)
 S:IO'=IO(0)&($D(DUZ)#2) ^DISV(+DUZ,"^%ZIS(1,")=%E
"RTN","ZIS1",94,0)
 S ION=$P(%Z,"^",1),IOM=+%Z91,IOF=$P(%Z91,"^",2),IOSL=$P(%Z91,"^",3),IOBS=$P(%Z91,"^",4),IOXY=$P(%Z91,"^",5)
"RTN","ZIS1",95,0)
 I IOSL>65534 S IOSL=65534 ;Cache rolls $Y at 65535
"RTN","ZIS1",96,0)
 S IOT=%ZTYPE,IOST(0)=%ZISIOST(0),IOST=%ZISIOST,IOPAR=%ZISOPAR,IOUPAR=%ZISUPAR,IOHG="" ;p546 %ZISHG
"RTN","ZIS1",97,0)
 S:IOF="" IOF="#" ;See that IOF has something
"RTN","ZIS1",98,0)
 I $D(IO("Q")),'$D(%ZIS("afn")) K IO("HFSIO") ;Let TM build it at run time.
"RTN","ZIS1",99,0)
 K IOCPU S:$D(%ZISCPU) IOCPU=%ZISCPU
"RTN","ZIS1",100,0)
 G KIL
"RTN","ZIS1",101,0)
 ;
"RTN","ZIS1",102,0)
KILVAR ;Come here to restore the calling variables
"RTN","ZIS1",103,0)
 D SYMBOL^%ZISUTL(1,"%ZISOLD")
"RTN","ZIS1",104,0)
 S:'$L($G(IOF)) IOF="#" S:'$D(IOST(0)) IOST(0)=0
"RTN","ZIS1",105,0)
 ;See that all standard variables are defined
"RTN","ZIS1",106,0)
 F %I="IO","ION","IOM","IOBS","IOSL","IOST" S:$D(@%I)[0 @%I=""
"RTN","ZIS1",107,0)
 K IO("HFSIO"),IO("OPEN") I $D(%ZISCPU) S:'$D(IOCPU) IOCPU=%ZISCPU
"RTN","ZIS1",108,0)
KIL ;Final exit cleanup
"RTN","ZIS1",109,0)
 S:'POP IOS=%ZISIOS I POP K:%ZIS'["T" %ZISIOS I %ZIS["T" K IOS S:$D(%ZISIOS) IOS=%ZISIOS
"RTN","ZIS1",110,0)
 S:%ZIS["T" IO("T")=1
"RTN","ZIS1",111,0)
 K %ZIS,%IS,%ZISOS,%ZISV,IOP
"RTN","ZIS1",112,0)
K2 ;Called from %ZIS
"RTN","ZIS1",113,0)
 K %ZISCHK,%ZISCPU,%ZISI,%ZISR,%ZISVT,%ZISB,%ZISX,ZISI,%ZISHP,%ZISIO,%ZISIOS,%ZISIOM
"RTN","ZIS1",114,0)
 K %ZISIOF,%ZISIOSL,%ZISIOBS,%ZISIOST,%ZISIOST(0),%ZISTO,%ZISTP,%ZISSIO,%ZISOPEN,%ZISOPAR,%ZISUPAR
"RTN","ZIS1",115,0)
 K %ZISMY,%ZISQUIT,%ZISLOCK
"RTN","ZIS1",116,0)
 Q
"RTN","ZIS2")
0^3^B17503413^B20845932
"RTN","ZIS2",1,0)
%ZIS2 ;SFISC/AC,RWF -- DEVICE HANDLER (CHECKS) ;08/17/10  10:12
"RTN","ZIS2",2,0)
 ;;8.0;KERNEL;**69,104,112,118,136,241,440,546**;JUL 10, 1995;Build 9
"RTN","ZIS2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZIS2",4,0)
 ;
"RTN","ZIS2",5,0)
L2 ;Entry point from %ZIS1, %E holds the IEN value
"RTN","ZIS2",6,0)
 I $D(DTOUT)!$D(DUOUT) K %ZISHP,%ZISHPOP Q
"RTN","ZIS2",7,0)
CHECK ;Get IO check for secondary $I
"RTN","ZIS2",8,0)
 K %ZISCPU N %Z2,%ZFQ
"RTN","ZIS2",9,0)
 S POP=0,%Z=^%ZIS(1,%E,0),%Z2=$S(%ZIS("PRI")=1:"",1:$G(^%ZIS(1,%E,2))) ;Get Primary and secondary IO.
"RTN","ZIS2",10,0)
 S IO=$S(%ZIS("PRI")=1:$P(%Z,"^",2),$L($P(%Z2,"^")):$P(%Z2,"^"),1:$P(%Z,"^",2)) ;
"RTN","ZIS2",11,0)
 S %Z90=$G(^(90)),%Z95=$G(^(95)),%ZTIME=$G(^("TIME")),%ZTYPE=$G(^("TYPE"))
"RTN","ZIS2",12,0)
 I '$$QUECHK Q
"RTN","ZIS2",13,0)
 I %ZTYPE="RES" S %ZISRL=+$P(%Z1,"^",10) G T
"RTN","ZIS2",14,0)
VTRM I %ZTYPE="VTRM",'('$D(IO("Q"))&(%A=%H)) W:'$D(IOP)&'$D(%ZISHP) *7,"  [YOU CAN NOT SELECT A VIRTUAL TERMINAL]" S POP=1 ;Virtual Terminal Check
"RTN","ZIS2",15,0)
 S:%ZTYPE="VTRM"&'$D(IO("Q"))&(%A=%H) IO=$I
"RTN","ZIS2",16,0)
 ;
"RTN","ZIS2",17,0)
SLAVE I $D(IO("Q")),$P(%Z,"^",2)=0,$P(%Z,"^",8)']"" W:'$D(IOP) *7,!?10,"  [SLAVE device NOT set up for queuing]" S POP=1 G T
"RTN","ZIS2",18,0)
OCPU D OTHCPU("DEVICE")
"RTN","ZIS2",19,0)
 ;
"RTN","ZIS2",20,0)
OOS G T:POP
"RTN","ZIS2",21,0)
 ;Out Of Service Check
"RTN","ZIS2",22,0)
 I %Z90,$D(DT)#2,%Z90'>DT S POP=1 I '$D(IOP),'$D(%ZISHP) W *7,"  [Out of Service]"
"RTN","ZIS2",23,0)
 ;
"RTN","ZIS2",24,0)
PTIME G T:POP!(IO=$I)!(IO=0)
"RTN","ZIS2",25,0)
 ;Prohibitted Time Check
"RTN","ZIS2",26,0)
 S %A=$P(%ZTIME,"^") I %ZISB,$L(%A) D  I POP,'$D(IOP),'$D(%ZISHP) W *7,"  [ACCESS PROHIBITED "_%A_"]" ;AT THIS TIME]"
"RTN","ZIS2",27,0)
 . N %C,%L,%H ;%C is current time, %L is lower limit, %H is upper limit
"RTN","ZIS2",28,0)
 . S %C=$P($H,",",2),%C=%C\60#60+(%C\3600*100),%H=$P(%A,"-",2),%L=+%A
"RTN","ZIS2",29,0)
 . I $S(%H'<%L:(%C'>%H&(%C'<%L)),1:(%C'<%L!(%C'>%H))) S POP=1
"RTN","ZIS2",30,0)
 . Q
"RTN","ZIS2",31,0)
DUZ I 'POP D SEC ;Security Check
"RTN","ZIS2",32,0)
 ;
"RTN","ZIS2",33,0)
T ;
"RTN","ZIS2",34,0)
 ;
"RTN","ZIS2",35,0)
TMPVAR K IO("S") S %ZISIOS=%E S:IO=0 IO=$I,IO("S")=%H
"RTN","ZIS2",36,0)
 S %ZISOPAR=$$IOPAR(%E,"IOPAR")
"RTN","ZIS2",37,0)
 S %ZISUPAR=$$IOPAR(%E,"IOUPAR"),%ZISTO=+$P(%ZTIME,"^",2)
"RTN","ZIS2",38,0)
 ;Slave Device
"RTN","ZIS2",39,0)
 I $D(IO("S")) D  I POP Q
"RTN","ZIS2",40,0)
 . S IO=$S(%ZIS["S":$P($G(^%ZIS(1,+$P(%Z,"^",8),0)),"^",2),1:IO)
"RTN","ZIS2",41,0)
 . I %ZIS["S",IO]"" S %H=+$P(%Z,"^",8),IO("S")=%H,IO(0)=IO
"RTN","ZIS2",42,0)
 . S IO("S")=$S($G(^XUTL("XQ",$J,"IOST(0)")):^("IOST(0)"),1:$G(^%ZIS(1,%H,"SUBTYPE")))
"RTN","ZIS2",43,0)
 . S:IO="" POP=1
"RTN","ZIS2",44,0)
 . Q
"RTN","ZIS2",45,0)
 S %A=+$G(^%ZIS(1,%E,"SUBTYPE")),%ZISTP=0 ;%A is pointer to subtype
"RTN","ZIS2",46,0)
 I %E=%H,%ZTYPE["TRM" D  I 1
"RTN","ZIS2",47,0)
 . I $D(^XUTL("XQ",$J,"IOST(0)")) D  ;Use home
"RTN","ZIS2",48,0)
 . . S %A=+^XUTL("XQ",$J,"IOST(0)"),%Z91="",%ZISTP=1
"RTN","ZIS2",49,0)
 . . F %ZISI="IOM","IOF","IOSL","IOBS","IOXY" S %Z91=%Z91_$G(^XUTL("XQ",$J,%ZISI))_"^"
"RTN","ZIS2",50,0)
 . E  S %=$$LNPRTSUB^%ZISUTL I %>0 S %A=%,%Z91=""
"RTN","ZIS2",51,0)
 E  S %Z91=$P($G(^%ZIS(2,%A,1)),"^",1,4),$P(%Z91,"^",5)=$G(^("XY"))
"RTN","ZIS2",52,0)
 ;
"RTN","ZIS2",53,0)
 D ST^%ZIS3(%ZISTP) S:%ZIS["U" USIO=$P(%Z91,"^",1,4)
"RTN","ZIS2",54,0)
T2 I POP S:%ZIS'["T" IO="" Q
"RTN","ZIS2",55,0)
 ;Removed HG from next line.
"RTN","ZIS2",56,0)
 G ^%ZIS3:"^MTRM^VTRM^TRM^SPL^MT^SDP^HFS^RES^OTH^BAR^IMPC^CHAN^"[("^"_%ZTYPE_"^") ;Jump to next part
"RTN","ZIS2",57,0)
 S POP=1 Q
"RTN","ZIS2",58,0)
 ;
"RTN","ZIS2",59,0)
QUECHK() ;Return 1 if OK
"RTN","ZIS2",60,0)
 S %ZFQ=$P(%Z,"^",12) ;5.5 =QUEUING 0:ALLOWED;1:FORCED;2:NOT ALLOWED;
"RTN","ZIS2",61,0)
 ;Forced Queuing, Don't check if %ZIS["N"
"RTN","ZIS2",62,0)
 S:%ZIS["Q"&'$D(ZTQUEUED)&(%ZFQ=1!$D(XQNOGO)) %ZISB=0,IO("Q")=1
"RTN","ZIS2",63,0)
 I %ZFQ=1,(%ZIS'["Q")&(%ZIS'["N"),'$D(ZTQUEUED) D  Q 0
"RTN","ZIS2",64,0)
 . W:'$D(IOP) !,"Sorry, QUEUING is required for this device."
"RTN","ZIS2",65,0)
 . S POP=1
"RTN","ZIS2",66,0)
 . Q
"RTN","ZIS2",67,0)
 ;Or Queuing NOT allowed
"RTN","ZIS2",68,0)
 I %ZFQ=2 S %ZIS=$TR(%ZIS,"Q") I $D(IO("Q")) D  Q 0
"RTN","ZIS2",69,0)
 . W:'$D(IOP) !,"Queuing NOT ALLOWED on this device"
"RTN","ZIS2",70,0)
 . S POP=1 K:$D(IOP) IO("Q")
"RTN","ZIS2",71,0)
 . Q
"RTN","ZIS2",72,0)
 Q 1
"RTN","ZIS2",73,0)
 ;
"RTN","ZIS2",74,0)
OTHCPU(%1) ;%1 should be either DEVICE or HUNT GROUP
"RTN","ZIS2",75,0)
 N %2,X,Y,%ZISMSG S %ZISMSG=0
"RTN","ZIS2",76,0)
 F %2="CPU","VOLUME SET" D
"RTN","ZIS2",77,0)
 .I %2="VOLUME SET" S X=$P($P(%Z,"^",9),":"),Y=%ZISV
"RTN","ZIS2",78,0)
 .E  D GETENV^%ZOSV S X=$P($P(%Z,"^",9),":",2),Y=$P($P(Y,"^",4),":",2)
"RTN","ZIS2",79,0)
 .I X=Y!(X="") Q:%1="DEVICE"  D  Q  ;Other Vol Set/Cpu Check
"RTN","ZIS2",80,0)
 ..S %ZISHG(0)=%E,%ZISHG=$P(%Z,"^")
"RTN","ZIS2",81,0)
 ..I %ZISB S POP=1
"RTN","ZIS2",82,0)
 ..E  S IO=" "
"RTN","ZIS2",83,0)
 .I %2="VOLUME SET" S $P(%ZISCPU,":")=X
"RTN","ZIS2",84,0)
 .E  S $P(%ZISCPU,":",2)=X
"RTN","ZIS2",85,0)
 .I %1="HUNT GROUP" K %ZISHG(0)
"RTN","ZIS2",86,0)
 .I %ZIS["Q" S IO("Q")=1,%ZISB=0 S:%1="HUNT GROUP" IO=" "
"RTN","ZIS2",87,0)
 .E  I %ZISB&(%ZTYPE="TRM"&($D(%ZISHG(0))&(%ZIS'["D"))) S POP=1
"RTN","ZIS2",88,0)
 .E  W:'$D(IOP)&'%ZISMSG *7,"  ["_%1_" is on another "_%2_" ('"_X_"')]",! S POP=1,%ZISMSG=1
"RTN","ZIS2",89,0)
 Q
"RTN","ZIS2",90,0)
IOPAR(%DA,%N) ;Return I/O parameter
"RTN","ZIS2",91,0)
 Q $S($L($G(%ZIS(%N))):%ZIS(%N),1:$G(^%ZIS(1,%DA,%N)))
"RTN","ZIS2",92,0)
 ;
"RTN","ZIS2",93,0)
SEC ;Do Security check
"RTN","ZIS2",94,0)
 I %Z95]"" S %X=$G(DUZ(0)) I %X'="@" S POP=1 F %A=1:1:$L(%X) I %Z95[$E(%X,%A) S POP=0 Q
"RTN","ZIS2",95,0)
 I POP,'$D(IOP),'$D(%ZISHP) W *7,"  [Access Prohibited]"
"RTN","ZIS2",96,0)
 Q
"RTN","ZIS3")
0^9^B13326333^B14236085
"RTN","ZIS3",1,0)
%ZIS3 ;SFISC/AC,RWF -- DEVICE HANDLER(DEVICE TYPES & PARAMETERS) ;06/09/10  17:47
"RTN","ZIS3",2,0)
 ;;8.0;KERNEL;**18,36,69,104,391,440,499,546**;JUL 10, 1995;Build 9
"RTN","ZIS3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZIS3",4,0)
 ;Call with a Go from ^%ZIS2
"RTN","ZIS3",5,0)
 I %ZIS'["T",$G(^%ZIS(1,+%E,"POX"))]"" D XPOX^ZISX(%E) ;Pre-Open
"RTN","ZIS3",6,0)
 I $D(%ZISQUIT) S POP=1 K %ZISQUIT
"RTN","ZIS3",7,0)
 S %ZISCHK=1
"RTN","ZIS3",8,0)
 ;See if need to lock.
"RTN","ZIS3",9,0)
 K %ZISLOCK
"RTN","ZIS3",10,0)
 I %ZIS'["T",+$G(^%ZIS(1,+%E,"GBL")) S %ZISLOCK=$NA(^%ZIS("lock",IO))
"RTN","ZIS3",11,0)
 ;
"RTN","ZIS3",12,0)
 I 'POP G TRM:(%ZTYPE["TRM"),@(%ZTYPE_"^%ZIS6") ;Jump to next part
"RTN","ZIS3",13,0)
 ;
"RTN","ZIS3",14,0)
Q ;%ZIS6 Returns here
"RTN","ZIS3",15,0)
 ;See if need to un-lock.
"RTN","ZIS3",16,0)
 I $D(%ZISUOUT) K %ZISUOUT,%ZISHP,%ZISHPOP Q
"RTN","ZIS3",17,0)
 I POP S:%ZIS'["T" IO=""
"RTN","ZIS3",18,0)
 Q  ;Return to %ZIS1
"RTN","ZIS3",19,0)
 ;
"RTN","ZIS3",20,0)
VTRM ;Virtual terminal type
"RTN","ZIS3",21,0)
TRM ;Terminal type
"RTN","ZIS3",22,0)
 D MARGN:'POP,SETPAR:'POP ;Terminal type
"RTN","ZIS3",23,0)
 I 'POP,%ZIS'["T",%ZISB=1,'$D(IOP),IO'=IO(0),'$D(IO("Q")),%ZIS["Q" D AQUE
"RTN","ZIS3",24,0)
 D W("")
"RTN","ZIS3",25,0)
 I '$D(IO("Q")),'POP,%ZISB,%ZIS'["T" D O^%ZIS4
"RTN","ZIS3",26,0)
 G Q
"RTN","ZIS3",27,0)
DEVOK N X,Y,X1 ;Not sure this is needed
"RTN","ZIS3",28,0)
 S X=IO,X1=%ZTYPE
"RTN","ZIS3",29,0)
 D DEVOK^%ZOSV I Y=-99!(Y=0)!(Y=$J) Q
"RTN","ZIS3",30,0)
 I Y>0 S POP=1 D:(%ZIS["D") W($C(7)_"[Device Unavailable]") Q
"RTN","ZIS3",31,0)
 I Y=-1 S IO="",POP=1 D:(%ZIS["D") W($C(7)_"[Device does not Exist or Unavailable]") Q
"RTN","ZIS3",32,0)
 Q
"RTN","ZIS3",33,0)
 ;
"RTN","ZIS3",34,0)
MARGN ;Get the margin and page length
"RTN","ZIS3",35,0)
 S %A=$P(%Y,";",1)
"RTN","ZIS3",36,0)
 I %A?1A.ANP D SUBIEN(.%A,1) I $D(^%ZIS(2,%A,1)) K %Z91 D ST(1) S %Y=$P(%Y,";",2,9),%ZISMY=$P(%ZISMY,";",2,9) G MARGN
"RTN","ZIS3",37,0)
 I %A>3 S $P(%Z91,"^")=$S(%A>255:255,1:+%A)
"RTN","ZIS3",38,0)
 I $P(%Y,";",2) S $P(%Z91,"^",3)=+$S($P(%Y,";",2)>65534:65534,1:$P(%Y,";",2)) ;Cache fix for $Y#65535 wrap
"RTN","ZIS3",39,0)
 ;
"RTN","ZIS3",40,0)
ALTP I '$D(IO("P")) Q:%A>3  G ASKMAR:%ZTYPE["TRM" Q
"RTN","ZIS3",41,0)
 S %X=$F(IO("P"),"M") I %X S %A=+$E(IO("P"),%X,99),$P(%Z91,"^")=$S(%A>255:255,1:%A)
"RTN","ZIS3",42,0)
 S %X=$F(IO("P"),"L") I %X S $P(%Z91,"^",3)=+$E(IO("P"),%X,99)
"RTN","ZIS3",43,0)
 Q:%A>3!(%ZTYPE'["TRM")
"RTN","ZIS3",44,0)
ASKMAR I %ZIS["M",'$D(IOP),$S(%E=%H:+$P(%Z,"^",3),1:1),$P(%Z,"^",4) W "    Right Margin: " W:$P(%Z91,"^")]"" +%Z91,"// "
"RTN","ZIS3",45,0)
 E  Q
"RTN","ZIS3",46,0)
 D SBR^%ZIS1 I '$D(DTOUT)&'$D(DUOUT) S:%X=""&($P(%Z91,"^")]"") %X=+%Z91 G ASKMAR:%X'?1.N S $P(%Z91,"^")=$S(%X>255:255,1:%X) Q
"RTN","ZIS3",47,0)
 S POP=1 I %ZISB&(%ZTYPE["TRM") D C Q
"RTN","ZIS3",48,0)
 Q
"RTN","ZIS3",49,0)
 ;
"RTN","ZIS3",50,0)
W(%) ;Write text
"RTN","ZIS3",51,0)
 Q:$D(IOP)
"RTN","ZIS3",52,0)
 W !,%
"RTN","ZIS3",53,0)
 Q
"RTN","ZIS3",54,0)
 ;
"RTN","ZIS3",55,0)
C ;Close open device
"RTN","ZIS3",56,0)
 I IO'=$G(IO(0)),$D(IO(1,IO)) C IO K IO(1,IO)
"RTN","ZIS3",57,0)
 Q
"RTN","ZIS3",58,0)
 ;
"RTN","ZIS3",59,0)
SETPAR S:$L(%ZISOPAR)&($E(%ZISOPAR)'="(") %ZISOPAR="("_%ZISOPAR_")"
"RTN","ZIS3",60,0)
 Q
"RTN","ZIS3",61,0)
 ;
"RTN","ZIS3",62,0)
AQUE ;Ask about Queueing
"RTN","ZIS3",63,0)
 W ! S %=$S($D(IO("Q")):1,1:2)
"RTN","ZIS3",64,0)
 I $D(IO("Q")) W !,"Previously, you have selected queueing."
"RTN","ZIS3",65,0)
 W !,"Do you "_$S($D(IO("Q")):"STILL ",1:"")_"want your output QUEUED"
"RTN","ZIS3",66,0)
 D YN^%ZIS1 G AQUE:%=0 Q:$D(IO("Q"))
"RTN","ZIS3",67,0)
 I %=-1 S POP=1,%ZISHPOP=1,%ZISUOUT=1 D C Q
"RTN","ZIS3",68,0)
 I %=1 S IO("Q")=1 D C Q
"RTN","ZIS3",69,0)
 Q
"RTN","ZIS3",70,0)
 ;
"RTN","ZIS3",71,0)
ST(%ZISTP) ;
"RTN","ZIS3",72,0)
 S %ZISIOST(0)=%A,%ZISIOST=$P($G(^%ZIS(2,%A,0)),"^")
"RTN","ZIS3",73,0)
 S:'$D(%Z91) %Z91=$P($G(^%ZIS(2,%A,1),"132^#^60^$C(8)"),"^",1,4),$P(%Z91,"^",5)=$G(^("XY"))
"RTN","ZIS3",74,0)
 Q:%ZISTP
"RTN","ZIS3",75,0)
STP N %B ;%E is a pointer to the Device file
"RTN","ZIS3",76,0)
 S %B=$G(^%ZIS(1,%E,91))
"RTN","ZIS3",77,0)
 S:$P(%B,"^")]"" $P(%Z91,"^")=+%B S:$P(%B,"^",3)]"" $P(%Z91,"^",3)=$P(%B,"^",3) ;S $P(%Z91,"^",5)=$G(^%ZIS(2,%ZISIOST(0),"XY"))
"RTN","ZIS3",78,0)
 Q
"RTN","ZIS3",79,0)
SUBIEN(%1,%) ;Return Subtype ien. %1 is call by Ref.
"RTN","ZIS3",80,0)
 N %XX,%YY
"RTN","ZIS3",81,0)
 I $D(^%ZIS(2,"B",%1))>9 S %1=+$O(^%ZIS(2,"B",%1,0)) Q
"RTN","ZIS3",82,0)
 I '$G(%) S X="" Q
"RTN","ZIS3",83,0)
 S %XX=%1 D 2^%ZIS5 S %1=+%YY
"RTN","ZIS3",84,0)
 Q
"RTN","ZIS3",85,0)
SUBTYPE(%A) ;Called from %ZISH
"RTN","ZIS3",86,0)
 N %ZISIOST,%Z91
"RTN","ZIS3",87,0)
 S:$G(%A)="" %A="P-OTHER"
"RTN","ZIS3",88,0)
 D SUBIEN(.%A),ST(1)
"RTN","ZIS3",89,0)
 S IOM=$P(%Z91,U,1),IOF=$P(%Z91,U,2),IOSL=$P(%Z91,U,3),IOST=%ZISIOST,IOST(0)=%ZISIOST(0),IOBS="$C(8)"
"RTN","ZIS3",90,0)
 S:IOST="" IOST="P-OTHER",IOST(0)=0
"RTN","ZIS3",91,0)
 Q
"RTN","ZIS4ONT")
0^10^B30953938^B29959546
"RTN","ZIS4ONT",1,0)
%ZIS4 ;SFISC/RWF,AC - DEVICE HANDLER SPOOL SPECIFIC CODE (Cache) ;08/02/10  14:50
"RTN","ZIS4ONT",2,0)
 ;;8.0;KERNEL;**34,59,69,191,278,293,440,499,524,546**;Jul 10, 1995;Build 9
"RTN","ZIS4ONT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZIS4ONT",4,0)
 ;
"RTN","ZIS4ONT",5,0)
OPEN ;Called for TRM devices
"RTN","ZIS4ONT",6,0)
 G OPN2:$D(IO(1,IO))
"RTN","ZIS4ONT",7,0)
 S POP=0 D OP1 G NOPEN:'$D(IO(1,IO))
"RTN","ZIS4ONT",8,0)
OPN2 ;
"RTN","ZIS4ONT",9,0)
 I $D(%ZISHP),'$D(IOP) W !,$C(7)_" Routing to device "_$P(^%ZIS(1,%E,0),"^",1)_$S($D(^(1)):" "_$P(^(1),"^",1)_" ",1:"")
"RTN","ZIS4ONT",10,0)
 Q
"RTN","ZIS4ONT",11,0)
NOPEN ;
"RTN","ZIS4ONT",12,0)
 I %ZIS'["D",$D(%ZISHP) S POP=1 Q
"RTN","ZIS4ONT",13,0)
 I '$D(IOP) W $C(7)_"  [BUSY]" W "  ...  RETRY" S %=2,U="^" D YN^%ZIS1 G OPEN:%=1
"RTN","ZIS4ONT",14,0)
 S POP=1 Q
"RTN","ZIS4ONT",15,0)
 Q
"RTN","ZIS4ONT",16,0)
OP1 N $ET S $ET="G OPNERR^%ZIS4"
"RTN","ZIS4ONT",17,0)
 I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q
"RTN","ZIS4ONT",18,0)
 O IO::%ZISTO S:$T IO(1,IO)="" S:'$T POP=1
"RTN","ZIS4ONT",19,0)
 Q
"RTN","ZIS4ONT",20,0)
OPNERR S POP=1,IO("LASTERR")=$G(IO("ERROR")),IO("ERROR")=$ZE,$EC=""
"RTN","ZIS4ONT",21,0)
 Q
"RTN","ZIS4ONT",22,0)
 ;
"RTN","ZIS4ONT",23,0)
O ;Gets called for all devices
"RTN","ZIS4ONT",24,0)
 N X,%A1
"RTN","ZIS4ONT",25,0)
 D:%ZIS["L" ZIO
"RTN","ZIS4ONT",26,0)
 I $D(IO("S")),$D(^%ZIS(2,IO("S"),10)),^(10)]"" U IO(0) D X10^ZISX ;Open Printer port
"RTN","ZIS4ONT",27,0)
OPAR I $D(IOP),%ZTYPE="HFS",$D(%ZIS("HFSIO")),$D(%ZIS("IOPAR")),%ZIS("HFSIO")]"" S IO=%ZIS("HFSIO"),%ZISOPAR=%ZIS("IOPAR")
"RTN","ZIS4ONT",28,0)
 S %A=$S($L(%ZISOPAR):%ZISOPAR,%ZTYPE'["TRM":"",$E(%ZISIOST,1)="C":"("_+%Z91_":""C"")",$E(%ZISIOST,1,2)="PK":"("_+%Z91_":""P"")",1:+%Z91)
"RTN","ZIS4ONT",29,0)
 S %A=%A_$S(%A["):":"",%ZTYPE["OTH"&($P(%ZTIME,"^",3)="n"):"",1:":"_%ZISTO),%A=""""_IO_""""_$E(":",%A]"")_%A
"RTN","ZIS4ONT",30,0)
 D O1 I POP W:'$D(IOP) !,?5,$C(7)_"[Device is BUSY]" Q
"RTN","ZIS4ONT",31,0)
 U IO S $X=0,$Y=0
"RTN","ZIS4ONT",32,0)
 I $L(%ZISUPAR) S %A1=""""_IO_""":"_%ZISUPAR U @%A1
"RTN","ZIS4ONT",33,0)
 G OXECUTE^%ZIS6
"RTN","ZIS4ONT",34,0)
 ;
"RTN","ZIS4ONT",35,0)
O1 N $ET S $ET="G OPNERR^%ZIS4"
"RTN","ZIS4ONT",36,0)
 I $D(%ZISLOCK) L +@%ZISLOCK:5 E  S POP=1 Q
"RTN","ZIS4ONT",37,0)
 O @%A S:'$T&(%A?.E1":".N) POP=1 S:'POP IO(1,IO)=""
"RTN","ZIS4ONT",38,0)
 S IO("ERROR")=""
"RTN","ZIS4ONT",39,0)
 Q
"RTN","ZIS4ONT",40,0)
 ;Version 3 used ip/port, Version 4 has ip:port|xx
"RTN","ZIS4ONT",41,0)
ZIO I $D(IO("IP")),$D(IO("ZIO")) Q  ;p499,p524
"RTN","ZIS4ONT",42,0)
 N %,%1 S %=$ZIO,%1=$$VERSION^%ZOSV
"RTN","ZIS4ONT",43,0)
 S IO("ZIO")=$S(%1<4:$I,1:$ZIO),%1=$S(%["/":"/",1:":")
"RTN","ZIS4ONT",44,0)
 ;Drop prefix
"RTN","ZIS4ONT",45,0)
 S:%["|TNT|" %=$E(%,6,999) S:%["|TNA|" %=$E(%,6,999)
"RTN","ZIS4ONT",46,0)
 ;Get IP name or number
"RTN","ZIS4ONT",47,0)
 S:$P(%,%1)["." IO("IP")=$P(%,%1)
"RTN","ZIS4ONT",48,0)
 I $$OS^%ZOSV="VMS",$G(IO("IP"))="" S IO("IP")=$P($ZF("TRNLNM","SYS$REM_NODE"),":") ;For SSH, p499
"RTN","ZIS4ONT",49,0)
 S:'$L(IO("ZIO")) IO("ZIO")=$G(IO("IP"))
"RTN","ZIS4ONT",50,0)
 ;If have FQDN keep it in IO("CLNM") and get IP.
"RTN","ZIS4ONT",51,0)
 I $L($G(IO("IP"))),IO("IP")'?1.3N1P1.3N1P1.3N1P1.3N S:'$D(IO("CLNM")) IO("CLNM")=IO("IP") S IO("IP")=$P($ZU(54,13,IO("IP")),",") ;p499,p546
"RTN","ZIS4ONT",52,0)
 Q
"RTN","ZIS4ONT",53,0)
 ;
"RTN","ZIS4ONT",54,0)
SPOOL ;%ZDA=pointer to ^XMB(3.51, %ZFN=spool file Num/Name.
"RTN","ZIS4ONT",55,0)
 N %ZOS S %ZOS=$$OS^%ZOSV
"RTN","ZIS4ONT",56,0)
 I '$D(^XMB(3.51,0)) W:'$D(IOP) !?5,"The spooler files are not setup in this account." G NO
"RTN","ZIS4ONT",57,0)
 I $D(ZISDA) W:'$D(IOP) !?5,$C(7)_"You may not Spool the printing of a Spool document" G NO
"RTN","ZIS4ONT",58,0)
 I $D(DUZ)[0 W:'$D(IOP) !,"Must be a valid user." G NO
"RTN","ZIS4ONT",59,0)
 ;Get entry in Spool Doc file
"RTN","ZIS4ONT",60,0)
R S %ZY=-1 D NEWDOC^ZISPL1:$D(DUZ)=11 G NO:%ZY'>0 S %ZDA=+%ZY,%ZFN=$P(%ZY(0),U,2),IO("DOC")=$P(%ZY(0),U,1) G OK:$D(IO("Q"))
"RTN","ZIS4ONT",61,0)
 G:'%ZISB OK I '$P(%ZY,"^",3),%ZFN]"" D SPL3 G NO:%ZFN<0,DOC
"RTN","ZIS4ONT",62,0)
 I %ZOS="NT" D  G:%ZFN>255 NO
"RTN","ZIS4ONT",63,0)
 . F %ZFN=1:1:260 I '$D(^XMB(3.51,"C",%ZFN))!$D(^(%ZFN,%ZDA)) Q:%ZFN<256  W:'$D(IOP) $C(7)_"  DELETE SOME OTHER DOCUMENT!" Q
"RTN","ZIS4ONT",64,0)
 . Q:%ZFN>255  D SPL2 S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)=""
"RTN","ZIS4ONT",65,0)
 I %ZOS'="NT" D  G:%ZFN=-1 NO ;For VMS & UNIT p546
"RTN","ZIS4ONT",66,0)
 . S %ZFN=IO_"SPOOL_no_"_%ZDA_".TMP" D SPL2 Q:%ZFN=-1  S $P(^XMB(3.51,%ZDA,0),U,2)=%ZFN,^XMB(3.51,"C",%ZFN,%ZDA)="",IO=%ZFN
"RTN","ZIS4ONT",67,0)
DOC S IO("SPOOL")=%ZDA,^XUTL("XQ",$J,"SPOOL")=%ZDA
"RTN","ZIS4ONT",68,0)
 I $D(^%ZIS(1,%ZISIOS,1)),$P(^(1),"^",8),$O(^("SPL",0)) S ^XUTL("XQ",$J,"ADSPL")=%ZISIOS,ZISPLAD=%ZISIOS
"RTN","ZIS4ONT",69,0)
OK K %ZDA,%ZFN Q
"RTN","ZIS4ONT",70,0)
NO K %ZDA,%ZFN,IO("DOC") S POP=1 Q
"RTN","ZIS4ONT",71,0)
 ;
"RTN","ZIS4ONT",72,0)
SPL2 ;Open for output
"RTN","ZIS4ONT",73,0)
 I %ZOS="NT" O IO:(%ZFN:0) S IO(1,IO)="",^SPOOL(0,IO("DOC"),%ZFN)="",^SPOOL(%ZFN,0)=IO("DOC")_"{"_$H Q
"RTN","ZIS4ONT",74,0)
 ;VMS
"RTN","ZIS4ONT",75,0)
 O %ZFN:("WNS"):2 G:'$T SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4ONT",76,0)
 ;
"RTN","ZIS4ONT",77,0)
SPL3 ;Open to read
"RTN","ZIS4ONT",78,0)
 I %ZOS="NT" G SPL4:'$D(^SPOOL(%ZFN,2147483647)) O IO:(%ZFN:$P(^(2147483647),"{",3)):1 S:'$T ZISPLQ=1 K ^(2147483647) S IO(1,IO)="" Q
"RTN","ZIS4ONT",79,0)
 ;VMS
"RTN","ZIS4ONT",80,0)
 N $ETRAP S $ETRAP="S $EC="""" G SPL4^%ZIS4"
"RTN","ZIS4ONT",81,0)
 O %ZFN:"RV":1 S:'$T ZISPLQ=1 G:$ZA<0!('$T) SPL4 S IO(1,%ZFN)="" Q
"RTN","ZIS4ONT",82,0)
 ;
"RTN","ZIS4ONT",83,0)
SPL4 W:'$D(IOP) !,"Spool file already open" S %ZFN=-1 Q
"RTN","ZIS4ONT",84,0)
 ;
"RTN","ZIS4ONT",85,0)
CLOSE ;Handle Close and copy to Global
"RTN","ZIS4ONT",86,0)
 N %,%ZOS,%Z1,%ZCR,%2,%3,%X,%Y,ZTSK,%ZFN S %ZOS=$$OS^%ZOSV
"RTN","ZIS4ONT",87,0)
 I %ZOS="NT",IO=2,$D(IO(1,IO)) K IO(1,IO) C IO
"RTN","ZIS4ONT",88,0)
 I %ZOS="VMS",$L(IO),$D(IO(1,IO)) U IO S %ZFN=$ZIO C IO K IO(1,IO)
"RTN","ZIS4ONT",89,0)
 I %ZOS="UNIX",$L(IO),$D(IO(1,IO)) C IO K IO(1,IO)
"RTN","ZIS4ONT",90,0)
 ;See that ZTSK is set so we will move to the global now.
"RTN","ZIS4ONT",91,0)
 S ZTSK=$G(ZTSK,1) D FILE^ZISPL1 I %ZDA'>0 K ZISPLAD Q
"RTN","ZIS4ONT",92,0)
 G:%ZOS'="NT" CLVMS ;p546
"RTN","ZIS4ONT",93,0)
 S %ZFN=$P(%ZS,"^",2),%ZCR=$C(13),%Y="",%=0,%3=$P(^SPOOL(%ZFN,2147483647),"{",3)
"RTN","ZIS4ONT",94,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL"))
"RTN","ZIS4ONT",95,0)
 F %2=1:1:%3 Q:'$D(^SPOOL(%ZFN,%2))  S %X=^SPOOL(%ZFN,%2) D
"RTN","ZIS4ONT",96,0)
 . I %Z1<% D LIMIT S %2=%3 Q
"RTN","ZIS4ONT",97,0)
 . I %X[$C(13,12) D:$L($P(%X,$C(13))) ADD($P(%X,$C(13))) D ADD("|TOP|") Q
"RTN","ZIS4ONT",98,0)
 . D ADD($P(%X,$C(13),1))
"RTN","ZIS4ONT",99,0)
 K ^SPOOL(%ZFN),^SPOOL(0,$P(%ZS,U,1)),%Y,%X,%1,%2,%3 D CLOSE^ZISPL1
"RTN","ZIS4ONT",100,0)
 Q
"RTN","ZIS4ONT",101,0)
ADD(L) S %=%+1,^XMBS(3.519,XS,2,%,0)=L
"RTN","ZIS4ONT",102,0)
 Q
"RTN","ZIS4ONT",103,0)
LIMIT D ADD("*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***") S $P(^XMB(3.51,%ZDA,0),"^",11)=1
"RTN","ZIS4ONT",104,0)
 Q
"RTN","ZIS4ONT",105,0)
CLVMS ;Close for Cache VMS & Linux
"RTN","ZIS4ONT",106,0)
 N $ES,$ET S $ET="D:$EC'[""ENDOF"" ^%ZTER,UNWIND^%ZTER S $EC="""" D SPLEX^%ZIS4,UNWIND^%ZTER"
"RTN","ZIS4ONT",107,0)
 S %ZA=$ZU(68,40,1) ;Work like DSM
"RTN","ZIS4ONT",108,0)
 ;%ZFN Could be set at the top
"RTN","ZIS4ONT",109,0)
 S %ZFN=$S($G(%ZFN)]"":%ZFN,1:$P(%ZS,"^",2)) D SPL3 Q:%ZFN']""  U %ZFN S %ZCR=$C(13),%Y=""
"RTN","ZIS4ONT",110,0)
 S %Z1=+$G(^XTV(8989.3,1,"SPL")),%=0
"RTN","ZIS4ONT",111,0)
 F  R %X#255:5 Q:$ZEOF<0  D  G:%Z1<% SPLEX
"RTN","ZIS4ONT",112,0)
 . I %Z1<% D LIMIT Q
"RTN","ZIS4ONT",113,0)
 . I %X[$C(12) D  Q
"RTN","ZIS4ONT",114,0)
 . . S %Y=$P(%X,$C(12)) D:$L(%Y) ADD(%Y),ADD("|TOP|")
"RTN","ZIS4ONT",115,0)
 . . S %Y=$P(%X,$C(12),2) D:$L(%Y) ADD(%Y)
"RTN","ZIS4ONT",116,0)
 . . Q
"RTN","ZIS4ONT",117,0)
 . D ADD(%X)
"RTN","ZIS4ONT",118,0)
 . Q
"RTN","ZIS4ONT",119,0)
SPLEX C %ZFN:"D" K:%ZFN]"" IO(1,%ZFN) D CLOSE^ZISPL1 K %Y,%X,%1,%ZFN Q
"RTN","ZIS4ONT",120,0)
 ;
"RTN","ZIS4ONT",121,0)
 ;
"RTN","ZIS4ONT",122,0)
HFS G HFS^%ZISF
"RTN","ZIS4ONT",123,0)
REWMT(IO2,IOPAR) ;Rewind Magtape
"RTN","ZIS4ONT",124,0)
 N $ETRAP S $ET="G REWERR^%ZIS4"
"RTN","ZIS4ONT",125,0)
 U IO2 W *5
"RTN","ZIS4ONT",126,0)
 Q 1
"RTN","ZIS4ONT",127,0)
REWSDP(IO2,IOPAR) ;Rewind SDP
"RTN","ZIS4ONT",128,0)
 G REW1
"RTN","ZIS4ONT",129,0)
REWHFS(IO2,IOPAR) ;Rewind Host File.
"RTN","ZIS4ONT",130,0)
REW1 ;ZIS set % to the current $I so need to update % if = IO
"RTN","ZIS4ONT",131,0)
 N NIO,OP,$ETRAP
"RTN","ZIS4ONT",132,0)
 S $ET="G REWERR^%ZIS4"
"RTN","ZIS4ONT",133,0)
 C IO2 ;You do a rewind to read the file.
"RTN","ZIS4ONT",134,0)
 S OP=$S($ZV["VMS":"RV",1:"RS")
"RTN","ZIS4ONT",135,0)
 O IO2:(OP):1 S IO(1,IO2)=""
"RTN","ZIS4ONT",136,0)
 Q 1
"RTN","ZIS4ONT",137,0)
REWERR ;Error encountered
"RTN","ZIS4ONT",138,0)
 S IO("ERROR")=$EC,$ECODE=""
"RTN","ZIS4ONT",139,0)
 Q 0
"RTN","ZIS5")
0^6^B14306275^B13408571
"RTN","ZIS5",1,0)
%ZIS5 ;SFISC/STAFF --DEVICE LOOK-UP ;05/05/10  15:54
"RTN","ZIS5",2,0)
 ;;8.0;KERNEL;**18,24,69,499,518,546**;JUL 10, 1995;Build 9
"RTN","ZIS5",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZIS5",4,0)
 ;Does a DIC like lookup. %XX,%YY are call in/out parameters
"RTN","ZIS5",5,0)
 N %DO,%DIY,%DD,%DIX
"RTN","ZIS5",6,0)
 S U="^",%DO="" K DUOUT
"RTN","ZIS5",7,0)
 I $D(^%ZIS(%ZISDFN,0)) S %DO=^(0)
"RTN","ZIS5",8,0)
A G:%ZIS(0)'["A" X
"RTN","ZIS5",9,0)
 ;Ask Device
"RTN","ZIS5",10,0)
 I $D(%ZIS("A")) S %DD=%ZIS("A") G B
"RTN","ZIS5",11,0)
 S %DD="Select "_$P(%DO,U,1)_": "
"RTN","ZIS5",12,0)
B I $D(%ZIS("B")),%ZIS("B")]"" S %YY=%ZIS("B"),%XX=$O(^%ZIS(%ZISDFN,%D,%YY)),%DIY=$S($F(%XX,%YY)-1=$L(%YY):%XX,$D(^%ZIS(%ZISDFN,%YY,0)):$P(^(0),U,1),1:%YY) W %DD,%DIY,"// " R %XX:%ZISDTIM G G:%XX]"" S %XX=%DIY G G
"RTN","ZIS5",13,0)
 W !,%DD R %XX:%ZISDTIM
"RTN","ZIS5",14,0)
G G NO:'$T,NO:%XX["^" G:%XX?.N&(+%XX=%XX) NUM I %XX'?.ANP!($L(%XX)>30) W:%ZIS(0)["Q" *7," ??" G A
"RTN","ZIS5",15,0)
 ;Lookup
"RTN","ZIS5",16,0)
X I %XX=" ",$D(DUZ)#2,$D(^DISV(+DUZ,"^%ZIS("_%ZISDFN_",")) S %YY=+^("^%ZIS("_%ZISDFN_",") D S G:'$T NO G GOT
"RTN","ZIS5",17,0)
F G NO:%XX="" K %DS S %DS=0,%DS(0)=1,%DIX=%XX,%DIY=0
"RTN","ZIS5",18,0)
 I $D(^%ZIS(%ZISDFN,%D,%XX)) G T1
"RTN","ZIS5",19,0)
TRY S %DIX=$O(^%ZIS(%ZISDFN,%D,%DIX)) G:$P(%DIX,%XX,1)'=""!(%DIX="") T2 S %DIY=0
"RTN","ZIS5",20,0)
T1 S %DIY=$O(^%ZIS(%ZISDFN,%D,%DIX,+%DIY)) G:%DIY'>0 TRY S %YY=+%DIY D S G:'$T T1
"RTN","ZIS5",21,0)
 I %DS,'(%DS#10) D LST G NO:%XX=U,ADD:%YY<0,GOT:%YY>0
"RTN","ZIS5",22,0)
 S %DS=%DS+1,%DS(%DS)=%DIY G T1
"RTN","ZIS5",23,0)
LSYN ;
"RTN","ZIS5",24,0)
S I $D(^%ZIS(%ZISDFN,%YY,0)) G S1
"RTN","ZIS5",25,0)
 Q
"RTN","ZIS5",26,0)
S1 G S2:%ZISDFN'=1!(%D'="LSYN") I $P(^%ZIS(1,%YY,0),U,9)=%ZISV!($P(^(0),U,9)="") G S2
"RTN","ZIS5",27,0)
 Q
"RTN","ZIS5",28,0)
S2 N Y S Y=%YY D:$D(%ZIS("S")) XS^ZISX Q
"RTN","ZIS5",29,0)
T2 G:'%DS NO S %DIY="" D LST G NO:%XX=U,ADD:%YY<1,GOT
"RTN","ZIS5",30,0)
LST I %DS=1,'$D(%ZISLST) S %YY=%DS(1) Q
"RTN","ZIS5",31,0)
 S %YY=-1 Q:%ZIS(0)'["E"  W !
"RTN","ZIS5",32,0)
 F %DZ=%DS(0):1:%DS W !,$J(%DZ,2)," ",$P(^%ZIS(%ZISDFN,%DS(%DZ),0),U,1) D:%ZISDFN=1  I $D(%ZIS("W")),$D(^(0)) W "  " D XW^ZISX
"RTN","ZIS5",33,0)
 . ;Show Location
"RTN","ZIS5",34,0)
 . S %=$G(^(1)) W:$X+$L($P(%,U))>74 !?75-$L(X) W "   "_$P(%,U)
"RTN","ZIS5",35,0)
L1 W:%DIY !,"Type '^' to Stop, or" W !,"Choose 1" W:%DS>1 "-",%DS
"RTN","ZIS5",36,0)
 R "> ",%YY:%ZISDTIM S %ZISLST=1 I %YY="",%DIY S %DS(0)=%DS+1,%YY=0 W ! Q
"RTN","ZIS5",37,0)
 I %YY=U!(%YY="") S %YY=-1,DUOUT=1 S:%YY=U %XX=U Q
"RTN","ZIS5",38,0)
 I +%YY'=%YY!(%YY<1)!(%YY>%DS) W:%ZIS(0)["Q" *7," ??" G L1
"RTN","ZIS5",39,0)
 S %YY=%DS(%YY) Q
"RTN","ZIS5",40,0)
GOT S %DZ=^%ZIS(%ZISDFN,+%YY,0)
"RTN","ZIS5",41,0)
 W:%ZIS(0)["E" "  ",$P(%DZ,U,1)
"RTN","ZIS5",42,0)
R I %ZIS(0)'["F" S:$S($D(DUZ)#2:$S(DUZ:1,1:0),1:0) ^DISV(DUZ,"^%ZIS("_%ZISDFN_",")=+%YY
"RTN","ZIS5",43,0)
 I %ZIS(0)["Z" S %YY(0)=^%ZIS(%ZISDFN,+%YY,0)
"RTN","ZIS5",44,0)
Q K %ZISDFN,%DO,%DD,%DIX,%DIY,%DZ Q
"RTN","ZIS5",45,0)
ADD ;can't add to files
"RTN","ZIS5",46,0)
NO S %YY=-1 G Q
"RTN","ZIS5",47,0)
NUM I $D(^%ZIS(%ZISDFN,%XX)) S %YY=%XX D S I $T G GOT
"RTN","ZIS5",48,0)
 G F
"RTN","ZIS5",49,0)
 ;
"RTN","ZIS5",50,0)
1 ;Entry point for Device lookup
"RTN","ZIS5",51,0)
 N %D,%DS,%ZISDFN,%ZISLST ;p518
"RTN","ZIS5",52,0)
 F %D="B","LSYN" S %ZISDFN=1,%ZIS(0)=$S($D(IOP):"M",1:"EMQ") D %ZIS5 Q:(%YY>0)!$D(DUOUT)
"RTN","ZIS5",53,0)
 Q
"RTN","ZIS5",54,0)
2 ;Entry point for Terminal type lookup
"RTN","ZIS5",55,0)
 N %D,%DS,%ZISDFN,%ZISLST ;p518
"RTN","ZIS5",56,0)
 S %D="B",%ZISDFN=2,%ZIS(0)=$S($D(IOP):"M",1:"EMQ") D %ZIS5
"RTN","ZIS5",57,0)
 Q
"RTN","ZIS5",58,0)
 ;
"RTN","ZIS5",59,0)
 ;A=all printers, P=local printers, C=complete list, D=local devices
"RTN","ZIS5",60,0)
LD1 ;Called from %ZIS7
"RTN","ZIS5",61,0)
 S %E=0,%Y=0 D LCPU:"PD"[$E(%X) S %E=0 W !
"RTN","ZIS5",62,0)
L S %E=$S("PD"[$E(%X):$O(^UTILITY("ZIS",$J,"DEVLST","B",%E)),1:$O(^%ZIS(1,"B",%E))) G:%E="" RESTART S %A=+$O(^(%E,0))
"RTN","ZIS5",63,0)
 G L:'$D(^%ZIS(1,%A,0)) ;,L:$P(^(0),"^",2)=46,L:$P(^(0),"^",2)=63 p546 Skip check for device numbers
"RTN","ZIS5",64,0)
 I $D(%ZIS("S")) N Y S Y=%A D XS^ZISX G L:'$T ;Screen
"RTN","ZIS5",65,0)
 I "AP"[$E(%X) G L:$P($G(^%ZIS(2,+$G(^%ZIS(1,%A,"SUBTYPE")),0)),U)'?1"P".E
"RTN","ZIS5",66,0)
 W $P(^%ZIS(1,%A,0),"^",1) W:$D(^(1)) " ",$P(^(1),"^",1) I $D(^(90)),^(90) W " ** OUT OF SERVICE"
"RTN","ZIS5",67,0)
 W ?39 I $X>40 W ! S %Y=%Y+1 I %Y>20 R "'^' TO STOP: ",%Y:%ZISDTIM,! G RESTART:%Y?1P S %Y=0
"RTN","ZIS5",68,0)
 G L
"RTN","ZIS5",69,0)
 ;
"RTN","ZIS5",70,0)
LCPU S %A=%ZISV
"RTN","ZIS5",71,0)
LC1 S %A=$O(^%ZIS(1,"CPU",%A)) Q:$P(%A,".")'=%ZISV  S %E=0
"RTN","ZIS5",72,0)
LC2 S %E=+$O(^%ZIS(1,"CPU",%A,%E)) G LC1:%E'>0,LC1:'$D(^%ZIS(1,%E,0)) S ^UTILITY("ZIS",$J,"DEVLST","B",$P(^(0),"^",1),%E)="" G LC2
"RTN","ZIS5",73,0)
 ;
"RTN","ZIS5",74,0)
RESTART S:$D(%H) %E=+%H K %X,^UTILITY("ZIS",$J,"DEVLST")
"RTN","ZIS5",75,0)
 Q
"RTN","ZIS6")
0^12^B20915436^B20359601
"RTN","ZIS6",1,0)
%ZIS6 ;SFISC/AC - DEVICE HANDLER -- RESOURCES ;06/10/10  09:27
"RTN","ZIS6",2,0)
 ;;8.0;KERNEL;**24,49,69,118,127,136,440,546**;JUL 10, 1995;Build 9
"RTN","ZIS6",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZIS6",4,0)
 ;Expect that IO is current device
"RTN","ZIS6",5,0)
OXECUTE ;Open Execute
"RTN","ZIS6",6,0)
 I $D(^%ZIS(2,%ZISIOST(0),2))=1 S %Y=^(2) D 2
"RTN","ZIS6",7,0)
ANSBAK ;Answer Back
"RTN","ZIS6",8,0)
 I $D(^%ZIS(2,%ZISIOST(0),102)) S %Y=^(102) D 2 E  S POP=1 D:'$D(IOP) SAY($C(7)_"[NOT ON LINE]") C:%ZISB IO K IO(1,IO) G QUIT
"RTN","ZIS6",9,0)
 I $D(%ZISMTR) X ^%ZOSF("MAGTAPE") U IO W:$D(%MT("REW")) @%MT("REW") U IO(0) K %MT
"RTN","ZIS6",10,0)
 G QUIT:'$D(IO("P"))
"RTN","ZIS6",11,0)
 I $F(IO("P"),"B"),$D(^%ZIS(2,%ZISIOST(0),7)) S %Y=$P(^(7),"^",1) I %Y]"" W @%Y
"RTN","ZIS6",12,0)
 S %Y=$F(IO("P"),"P") G QLTY:'%Y S %Y=+$E(IO("P"),%Y,99),%X=$S(%Y=16:12.1,%Y=10!(%Y=12):5,1:"") G QLTY:'%X
"RTN","ZIS6",13,0)
 S %Y=$S($D(^%ZIS(2,%ZISIOST(0),%X)):$P(^(%X),"^",$S(%Y=12:2,1:1)),1:"")
"RTN","ZIS6",14,0)
 I %Y]"" W @%Y
"RTN","ZIS6",15,0)
QLTY S %Y=$F(IO("P"),"Q") Q:'%Y  S %Y=+$E(IO("P"),%Y,99),%X=$S(%Y<0!(%Y>2):0,1:%Y+1)
"RTN","ZIS6",16,0)
 I %X S %Y=$S($D(^%ZIS(2,%ZISIOST(0),12.2)):$P(^(12.2),"^",%X),1:"") I %Y]""  W @%Y
"RTN","ZIS6",17,0)
QUIT U:%ZIS'[0 IO(0)
"RTN","ZIS6",18,0)
 Q
"RTN","ZIS6",19,0)
2 ;Do Execute code
"RTN","ZIS6",20,0)
 Q:%Y=""  I %ZIS'[0,$D(^%ZIS(1,+%H,"TYPE")),^("TYPE")["TRM" D OH Q:POP
"RTN","ZIS6",21,0)
 S %X=$T U IO D %Y^ZISX
"RTN","ZIS6",22,0)
 Q
"RTN","ZIS6",23,0)
OH ;Open Home
"RTN","ZIS6",24,0)
 Q:$S($L($G(IO(0))):$D(IO(1,IO(0))),1:0)
"RTN","ZIS6",25,0)
 N $ES,$ET S $ET="G OPNERR^%ZIS4"
"RTN","ZIS6",26,0)
 O IO(0)::0 S IO(1,IO(0))="" ;See that HOME DEVICE is open.
"RTN","ZIS6",27,0)
 Q
"RTN","ZIS6",28,0)
 ;
"RTN","ZIS6",29,0)
SAY(%SAY) ;
"RTN","ZIS6",30,0)
 Q:%ZIS[0  U IO(0) W %SAY U IO
"RTN","ZIS6",31,0)
 Q
"RTN","ZIS6",32,0)
RES1 ;Allocate a resource slot, Release in %ZISC.
"RTN","ZIS6",33,0)
 N A,L,X,%ZISD0
"RTN","ZIS6",34,0)
 S %ZISD0=$O(^%ZISL(3.54,"B",IO,0))
"RTN","ZIS6",35,0)
 I '%ZISD0 S %ZISD0=$$RADD(IO) ;New one
"RTN","ZIS6",36,0)
 L +^%ZISL(3.54,%ZISD0,0):2 I '$T S POP=1 W:'$D(IOP) *7,"  [NOT Available]" G RESX
"RTN","ZIS6",37,0)
RES2 S X=$P(^%ZISL(3.54,%ZISD0,0),"^",2)
"RTN","ZIS6",38,0)
 I X<1 S POP=1 W:'$D(IOP) *7,"  [NOT Available]" G RESX
"RTN","ZIS6",39,0)
 S X=$S(X>0:X-1,1:0),$P(^%ZISL(3.54,%ZISD0,0),"^",2)=X
"RTN","ZIS6",40,0)
 ;
"RTN","ZIS6",41,0)
R1 ;Grab a slot
"RTN","ZIS6",42,0)
 S IO(1,IO)="RES",A=$G(^%ZISL(3.54,%ZISD0,1,0),"^3.542^^")
"RTN","ZIS6",43,0)
 F L=1:1:%ZISRL I '$D(^%ZISL(3.54,%ZISD0,1,L,0)) Q
"RTN","ZIS6",44,0)
 I '$T K IO(1,IO) G RES2 ;No free slots
"RTN","ZIS6",45,0)
 S ^%ZISL(3.54,%ZISD0,1,L,0)=L_"^"_%ZISV_"^"_$J_"^"_$G(ZTSK)_"^"_$H,^%ZISL(3.54,"AJ",$J,%ZISD0,L)="",^%ZISL(3.54,%ZISD0,1,"B",L,L)=""
"RTN","ZIS6",46,0)
 S $P(A,"^",3,4)=L_U_($P(A,U,4)+1),^%ZISL(3.54,%ZISD0,1,0)=A
"RTN","ZIS6",47,0)
RESX L -^%ZISL(3.54,%ZISD0,0) Q
"RTN","ZIS6",48,0)
 ;
"RTN","ZIS6",49,0)
RADD(X) ;Add Resource
"RTN","ZIS6",50,0)
 N %1,%2
"RTN","ZIS6",51,0)
 S %1=$G(^%ZISL(3.54,0),"RESOURCE^3.54^^"),%2=$P(%1,U,3)
"RTN","ZIS6",52,0)
 F %2=%2:1 Q:'$D(^%ZISL(3.54,%2,0))
"RTN","ZIS6",53,0)
 S $P(^%ZISL(3.54,0),U,3,4)=%2_U_($P(%1,U,4)+1),^%ZISL(3.54,%2,0)=X_"^"_$G(%ZISRL,1),^%ZISL(3.54,"B",X,%2)=""
"RTN","ZIS6",54,0)
 Q %2
"RTN","ZIS6",55,0)
 ;
"RTN","ZIS6",56,0)
RESOK ;DEVOK check for RES devices, for all OS's.
"RTN","ZIS6",57,0)
 N %ZISD0,%ZISD1
"RTN","ZIS6",58,0)
 S Y=0,%ZISD0=$O(^%ZISL(3.54,"B",X,0))
"RTN","ZIS6",59,0)
 I '%ZISD0 S Y=-1,%ZISD0=$O(^%ZIS(1,"C",X,0)) Q:'%ZISD0  Q:'$D(^%ZIS(1,+%ZISD0,0))  Q:$P(^(0),"^")'=X  Q:'$D(^("TYPE"))  Q:^("TYPE")'="RES"  S Y=0 Q
"RTN","ZIS6",60,0)
 S X1=$G(^%ZISL(3.54,+%ZISD0,0))
"RTN","ZIS6",61,0)
 I $P(X1,"^",2)&(X=$P(X1,"^")) S Y=0 Q
"RTN","ZIS6",62,0)
 S Y=999 F %ZISD1=0:0 S %ZISD1=$O(^%ZISL(3.54,%ZISD0,1,%ZISD1)) Q:%ZISD1'>0  I $D(^(%ZISD1,0)) S Y=$P(^(0),"^",3) Q
"RTN","ZIS6",63,0)
 Q
"RTN","ZIS6",64,0)
 ;
"RTN","ZIS6",65,0)
Q G Q^%ZIS3
"RTN","ZIS6",66,0)
HG ;Was Hunt Group
"RTN","ZIS6",67,0)
 Q
"RTN","ZIS6",68,0)
SPL ;Spool type
"RTN","ZIS6",69,0)
 N %E,%Z D MARGN^%ZIS3 W:'$D(IOP) ! D SPOOL^%ZIS4:%ZIS'["T"
"RTN","ZIS6",70,0)
 G Q
"RTN","ZIS6",71,0)
MT D MARGN^%ZIS3,ASKPAR,AMTREW:'POP&'$D(IOP)&%ZISB W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%ZIS'["T")) ;Magtape type
"RTN","ZIS6",72,0)
 G Q
"RTN","ZIS6",73,0)
SDP ;Sequential disk processor type
"RTN","ZIS6",74,0)
 D MARGN^%ZIS3,ASKPAR W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%ZIS'["T"))
"RTN","ZIS6",75,0)
 G Q
"RTN","ZIS6",76,0)
HFS ;Host File Server type
"RTN","ZIS6",77,0)
 D MARGN^%ZIS3,HFS^%ZISF W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%ZIS'["T"))
"RTN","ZIS6",78,0)
 G Q
"RTN","ZIS6",79,0)
RES ;Resources
"RTN","ZIS6",80,0)
 G Q:%ZIS["T" N X,X1 I %ZIS'["R"!'$D(IOP) S POP=1 W:'$D(IOP) *7,"  [NOT AVAILABLE]" Q
"RTN","ZIS6",81,0)
 G Q:$D(IO(1,IO)) I %ZIS["T" S X=IO,X1="RES" D DEVOK^%ZIS3 S:Y POP=1 G Q:POP
"RTN","ZIS6",82,0)
 D:%ZISB RES1 G Q
"RTN","ZIS6",83,0)
CHAN ;Network Channel type devices -- DecNet or TCP/IP devices.
"RTN","ZIS6",84,0)
 I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO ;DECNET Server Device
"RTN","ZIS6",85,0)
 D MARGN^%ZIS3:'POP,ASKPAR:'POP W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%ZIS'["T"))
"RTN","ZIS6",86,0)
 G Q
"RTN","ZIS6",87,0)
IMPC ;Imaging Work Station
"RTN","ZIS6",88,0)
BAR ;Bar Code
"RTN","ZIS6",89,0)
OTH ;Other Device type
"RTN","ZIS6",90,0)
 D MARGN^%ZIS3:'POP,ASKPAR:'POP W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%ZIS'["T"))
"RTN","ZIS6",91,0)
 G Q
"RTN","ZIS6",92,0)
 ;
"RTN","ZIS6",93,0)
ASKPAR ;Ask Parameters
"RTN","ZIS6",94,0)
 G SETPAR^%ZIS3:$D(IOP),SETPAR^%ZIS3:'$P(^%ZIS(1,%E,0),"^",4) W "  ADDRESS/PARAMETERS: " W:%ZISOPAR]"" %ZISOPAR_"// " D SBR^%ZIS1 D MSG1:%X="?" G ASKPAR:%X="?" S:%X]"" %ZISOPAR=%X I $D(DTOUT)!$D(DUOUT) S POP=1
"RTN","ZIS6",95,0)
 I POP,%ZISB&(%ZTYPE["TRM") C IO K IO(1,IO) Q
"RTN","ZIS6",96,0)
 Q:POP  G SETPAR^%ZIS3
"RTN","ZIS6",97,0)
 ;
"RTN","ZIS6",98,0)
AMTREW ;Mag Tape Rewind
"RTN","ZIS6",99,0)
 I %ZISB,%ZTYPE="MT",'$D(IOP) W "  REWIND" S %=2,U="^",%ZISDTIM=60 D YN^%ZIS1 K %ZISDTIM G AMTREW:%=0 I %=-1 S POP=1 Q
"RTN","ZIS6",100,0)
 S:%=1 %ZISMTR=1
"RTN","ZIS6",101,0)
 Q
"RTN","ZIS6",102,0)
MSG1 W !?5,"Enter the desired parameters needed to open the selected device.",!?25
"RTN","ZIS6",103,0)
 Q
"RTN","ZIS6",104,0)
 ;
"RTN","ZIS7")
0^7^B4664721^B4495992
"RTN","ZIS7",1,0)
%ZIS7 ;SFISC/AC - DEVICE HANDLER HELP ;05/05/10  15:58
"RTN","ZIS7",2,0)
 ;;8.0;KERNEL;**205,546**;JUL 10, 1995;Build 9
"RTN","ZIS7",3,0)
EN1 W !,"Specify a device with optional parameters in the format"
"RTN","ZIS7",4,0)
 W !,?8,"Device Name;Right Margin;Page Length"
"RTN","ZIS7",5,0)
 W !,?21,"or"
"RTN","ZIS7",6,0)
 W !,?5,"Device Name;Subtype;Right Margin;Page Length"
"RTN","ZIS7",7,0)
 W !!,"Or in the new format"
"RTN","ZIS7",8,0)
 W !,?14,"Device Name;/settings"
"RTN","ZIS7",9,0)
 W !,?21,"or"
"RTN","ZIS7",10,0)
 W !,?10,"Device Name;Subtype;/settings"
"RTN","ZIS7",11,0)
 W !,"For example"
"RTN","ZIS7",12,0)
 W !,?17,"HOME;80;999"
"RTN","ZIS7",13,0)
 W !,?21,"or"
"RTN","ZIS7",14,0)
 W !,?13,"HOME;C-VT320;/M80L999"
"RTN","ZIS7",15,0)
 W !!,"Enter ?? for more information"
"RTN","ZIS7",16,0)
 Q
"RTN","ZIS7",17,0)
EN2 S X=0 I $D(^%ZOSF("TEST")) S X="XQH" X ^("TEST")
"RTN","ZIS7",18,0)
 I $T S X=$O(^DIC(9.2,"B","XUDOC DEVICE PROMPT*",0)),X=$D(^DIC(9.2,+X,0)) I X S X=($P(^(0),"^",1)="XUDOC DEVICE PROMPT*")
"RTN","ZIS7",19,0)
 W !,"The following information is available:"
"RTN","ZIS7",20,0)
 ;W !?20,"Printer Listing",!?20,"Complete Device Listing",!?20,"Extended Help"_$S(X:"",1:" [UNAVAILABLE]")
"RTN","ZIS7",21,0)
 W !?20,"All Printers",!?20,"Printers only on '"_%ZISV_"'",!?20,"Complete Device Listing",!?20,"Devices only on '"_%ZISV_"'"
"RTN","ZIS7",22,0)
 W !,?20,"New Format for Device Specification",!?20,"Extended Help"_$S(X:"",1:" [UNAVAILABLE]")
"RTN","ZIS7",23,0)
R W !!?15,"Select one (A,P,C,D,N, or E): " D SBR^%ZIS1 S %X=$$UP^%ZIS1(%X) ;p546
"RTN","ZIS7",24,0)
 I $D(DTOUT)!$D(DUOUT) K DTOUT,DUOUT Q
"RTN","ZIS7",25,0)
 Q:%X=""  S %X=$E(%X_"?")
"RTN","ZIS7",26,0)
 I %X="?"!("APCDNE"'[%X) W !,"Enter 'A', 'P', 'C', 'D', 'N' or 'E'" G R
"RTN","ZIS7",27,0)
 I 'X,%X="E" W *7," [UNAVAILABLE]" G R
"RTN","ZIS7",28,0)
 I "APCD"[%X D LD1^%ZIS5 Q
"RTN","ZIS7",29,0)
 I "EN"'[%X W *7," [ERROR]" Q
"RTN","ZIS7",30,0)
 N %ZIS,%H,%E,%ZISB,%ZISV,IO ;p546
"RTN","ZIS7",31,0)
 S U="^",XQH=$S(%X="E":"XUDOC DEVICE PROMPT*",1:"XUDOC DEVICE ALT SYNTAX")
"RTN","ZIS7",32,0)
 D DT^DICRW:'$D(DUZ)#2!'$D(DTIME),EN^XQH
"RTN","ZIS7",33,0)
 Q
"RTN","ZISFONT")
0^4^B10375505^B10288750
"RTN","ZISFONT",1,0)
%ZISF ;SFISC/AC - HOST FILES FOR Cache on NT & VMS ;06/07/10  15:08
"RTN","ZISFONT",2,0)
 ;;8.0;KERNEL;**34,191,271,385,499,524,546**;Jul 10, 1995;Build 9
"RTN","ZISFONT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZISFONT",4,0)
HFS ;Host File Server
"RTN","ZISFONT",5,0)
 ;Calling parameters in %ZIS override Device file.
"RTN","ZISFONT",6,0)
 Q:$D(IOP)&$D(%ZIS("HFSIO"))&$D(%ZIS("IOPAR"))
"RTN","ZISFONT",7,0)
 N %
"RTN","ZISFONT",8,0)
 ;Get file name
"RTN","ZISFONT",9,0)
 I $D(%ZIS("HFSNAME")) S IO=%ZIS("HFSNAME"),%X=IO
"RTN","ZISFONT",10,0)
 E  D ASKHFS ;Return name in %X
"RTN","ZISFONT",11,0)
 ;Mode or actual parameters
"RTN","ZISFONT",12,0)
H S:$D(%ZIS("HFSMODE")) %ZISOPAR=$$MODE(%ZIS("HFSMODE"))
"RTN","ZISFONT",13,0)
H1 I $D(IO("Q"))!(%ZIS["Z") S IO("HFSIO")=""
"RTN","ZISFONT",14,0)
 S:$L(%X) %ZIS("afn")=1
"RTN","ZISFONT",15,0)
 S IO=$S($L(%X):%X,1:IO),IO=$$CHKNM(IO) ;See that we have a directory
"RTN","ZISFONT",16,0)
 S:$D(IO("HFSIO")) IO("HFSIO")=IO
"RTN","ZISFONT",17,0)
 I '$D(IOP)&$D(%ZIS("HFSNAME")) S %="    HOST FILE USED:  "_%ZIS("HFSNAME") W:$X+$L(%)>75 ! W %,!
"RTN","ZISFONT",18,0)
 ;Check Ask Parameters
"RTN","ZISFONT",19,0)
 D ASKPAR^%ZIS6,SETPAR^%ZIS3
"RTN","ZISFONT",20,0)
 ;Check Ask IO Mode
"RTN","ZISFONT",21,0)
HFSIOO I '$D(IOP),%ZTYPE="HFS",'$D(%ZIS("HFSMODE")),'$P(^%ZIS(1,%E,0),"^",4),%ZISOPAR="",$P($G(^%ZIS(1,%E,1)),"^",6) D
"RTN","ZISFONT",22,0)
 . W:$X>19 ! W ?20,"INPUT/OUTPUT OPERATION: R//"
"RTN","ZISFONT",23,0)
 Q:'$T  D SBR^%ZIS1 I $D(DTOUT)!$D(DFOUT)!$D(DUOUT) S POP=1 Q
"RTN","ZISFONT",24,0)
 S:%X="" %X="R" S %X=$$UP^%ZIS1(%X)
"RTN","ZISFONT",25,0)
 D HOPT:%X="?"!'$$CHECK(%X),HOPT1:%X="??" G HFSIOO:%X="?"!'$$CHECK(%X)
"RTN","ZISFONT",26,0)
 S:%X]"" %ZISOPAR="("_$$MODE(%X)_")"
"RTN","ZISFONT",27,0)
 Q
"RTN","ZISFONT",28,0)
 ;
"RTN","ZISFONT",29,0)
CHECK(X) ;Check that we have valid option
"RTN","ZISFONT",30,0)
 N Y,%
"RTN","ZISFONT",31,0)
 Q:(X["R")&(X["W") 0 ;Can't have both
"RTN","ZISFONT",32,0)
 S Y=1 I $L($TR(X,"ANRW")) S Y=0
"RTN","ZISFONT",33,0)
 Q Y
"RTN","ZISFONT",34,0)
 ;
"RTN","ZISFONT",35,0)
ASKHFS ;---Ask host file name here---
"RTN","ZISFONT",36,0)
 I $D(%ZIS("B","HFS"))#2,%ZIS("B","HFS")]"" D
"RTN","ZISFONT",37,0)
 .S IO=%ZIS("B","HFS") ;Set default host file name
"RTN","ZISFONT",38,0)
 S %X='$P($G(^%ZIS(1,%E,1)),"^",5)
"RTN","ZISFONT",39,0)
 S:'%X %X=""
"RTN","ZISFONT",40,0)
 I $D(IOP)!%X!$D(%ZIS("HFSNAME")) S %X="" Q
"RTN","ZISFONT",41,0)
ASKAGN W !,"HOST FILE NAME: "_IO_"//" D SBR^%ZIS1
"RTN","ZISFONT",42,0)
 I %X?1."?".E W !,"ENTER HOST FILE NAME" G ASKAGN
"RTN","ZISFONT",43,0)
 S:$D(DTOUT)!$D(DUOUT) POP=1
"RTN","ZISFONT",44,0)
 Q
"RTN","ZISFONT",45,0)
CHKNM(H)        ;Check the HFS name
"RTN","ZISFONT",46,0)
 Q:$D(IO("Q")) H
"RTN","ZISFONT",47,0)
 N N,P,F,%OS S N=H,%OS=$$OS^%ZOSV
"RTN","ZISFONT",48,0)
 ;Find any path may have
"RTN","ZISFONT",49,0)
 S P=$TR($RE(H),"\:[]","////"),F=$RE($P(P,"/")),P=$P(H,F,1)
"RTN","ZISFONT",50,0)
 I %OS["VMS",((P'[":")&(P'["["))!(P["\") S N=$$DEFDIR^%ZISH("")_F ;VMS - disk:[directory]file
"RTN","ZISFONT",51,0)
 I %OS["NT",'(P?1(1A1":\",1"\\").E) S N=$$DEFDIR^%ZISH("")_F ;NT - C:\DIR\FILE
"RTN","ZISFONT",52,0)
 I %OS["UNIX",(P'["/") S N=$$DEFDIR^%ZISH("")_F ;UNIX/Linux - ./file or /mnt/dir/file
"RTN","ZISFONT",53,0)
 Q N
"RTN","ZISFONT",54,0)
 ;
"RTN","ZISFONT",55,0)
MODE(X) ;Return value for %ZISOPAR.
"RTN","ZISFONT",56,0)
 ;For VMS only, The H is for read SHARE. Going back to READ Stream mode.
"RTN","ZISFONT",57,0)
 N Y,Q S Q=$C(34)
"RTN","ZISFONT",58,0)
 I $ZV["VMS" S Y=$S(X="N":"NWS",X="W":"NWS",X="A":"AWS",1:"RHS")
"RTN","ZISFONT",59,0)
 E  S Y=$S(X="N":"NWS",X="W":"NWS",X="A":"AWS",1:"RS")
"RTN","ZISFONT",60,0)
 Q $S($L(Y):Q_Y_Q,1:Y)
"RTN","ZISFONT",61,0)
 ;
"RTN","ZISFONT",62,0)
HOPT W !,"You may enter a code that represents one of",!,"the following host file input/ouput operation:"
"RTN","ZISFONT",63,0)
 W !?16,"R = READ ACCESS",!?16,"W = WRITE ACCESS",!?16,"N = NEWVERSION",!?16,"A = APPEND"
"RTN","ZISFONT",64,0)
 Q
"RTN","ZISFONT",65,0)
 ;
"RTN","ZISFONT",66,0)
HOPT1 S %ZISI=$O(^DIC(9.2,"B","XUHFSPARAM-MVX",0)) Q:'%ZISI  Q:'$D(^DIC(9.2,+%ZISI,0))  Q:$P(^(0),"^",1)'="XUHFSPARAM-MVX"
"RTN","ZISFONT",67,0)
 Q:$D(^DIC(9.2,+%ZISI,1))'>9  F %X=0:0 S %X=$O(^DIC(9.2,+%ZISI,1,%X)) Q:%X'>0  I $D(^(%X,0)) W !,^(0)
"RTN","ZISFONT",68,0)
 W ! S %X="??"
"RTN","ZISFONT",69,0)
 Q
"RTN","ZISHONT")
0^8^B60362647^B59753873
"RTN","ZISHONT",1,0)
%ZISH ;IHS/PR,SFISC/AC - Host File Control for Cache for VMS/NT/UNIX ;06/09/10  16:01
"RTN","ZISHONT",2,0)
 ;;8.0;KERNEL;**34,65,84,104,191,306,385,440,518,524,546**;JUL 10, 1995;Build 9
"RTN","ZISHONT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ZISHONT",4,0)
 ;
"RTN","ZISHONT",5,0)
OPEN(X1,X2,X3,X4,X5,X6)    ;SR. Open Host File
"RTN","ZISHONT",6,0)
 ;X1=handle name
"RTN","ZISHONT",7,0)
 ;X2=directory name \dir\
"RTN","ZISHONT",8,0)
 ;X3=file name
"RTN","ZISHONT",9,0)
 ;X4=file access mode e.g.: W for write, R for read, A for append.
"RTN","ZISHONT",10,0)
 ;X5=Max record size for a new file, X6=Subtype
"RTN","ZISHONT",11,0)
 N %,%1,%2,%I,%ZOS,%T,%ZA,%ZISHIO,$ET
"RTN","ZISHONT",12,0)
 S $ET="D OPNERR^%ZISH"
"RTN","ZISHONT",13,0)
 S U="^",%I=$I,%T=0,POP=0,X2=$$DEFDIR($G(X2)),%ZOS=$$OS^%ZOSV M %ZISHIO=IO
"RTN","ZISHONT",14,0)
 I %ZOS'="VMS" S %1=$S(X4["A":"AW",X4["W":"WN",1:"R")_$S(X4["B":"U",1:"S") ;NT & Unix
"RTN","ZISHONT",15,0)
 I %ZOS="VMS" S %1=$S(X4["A":"AW",X4["W":"WN",1:"RH")_$S(X4["B":"U",1:"S")
"RTN","ZISHONT",16,0)
 ;The next line eliminates the <ENDOFFILE> error for sequential files for the current process.
"RTN","ZISHONT",17,0)
 S %ZA=$ZUTIL(68,40,1) ;Work like DSM
"RTN","ZISHONT",18,0)
 S %=X2_X3 O %:(%1):2 I '$T S POP=1 Q
"RTN","ZISHONT",19,0)
 S IO=%,IO(1,IO)="",IOT="HFS",IOM=80,IOSL=60,POP=0 D SUBTYPE^%ZIS3($G(X6,"P-OTHER"))
"RTN","ZISHONT",20,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHONT",21,0)
 ;I $L($G(%I)) U %I ;Would only needed if we had done a USE.
"RTN","ZISHONT",22,0)
 Q
"RTN","ZISHONT",23,0)
 ;
"RTN","ZISHONT",24,0)
OPNERR ;Handle open error
"RTN","ZISHONT",25,0)
 S POP=1,$ECODE=""
"RTN","ZISHONT",26,0)
 ;I $L($G(%I)) U %I
"RTN","ZISHONT",27,0)
 Q
"RTN","ZISHONT",28,0)
 ;
"RTN","ZISHONT",29,0)
CLOSE(X) ;SR. Close HFS device not opened by %ZIS.
"RTN","ZISHONT",30,0)
 ;X=HANDLE NAME
"RTN","ZISHONT",31,0)
 ;IO=Device
"RTN","ZISHONT",32,0)
 N %
"RTN","ZISHONT",33,0)
 I $L($G(IO)) C IO K IO(1,IO)
"RTN","ZISHONT",34,0)
 I $L($G(X)) D RMDEV^%ZISUTL(X)
"RTN","ZISHONT",35,0)
 ;Only reset home if one setup.
"RTN","ZISHONT",36,0)
 I $D(IO("HOME"))!$D(^XUTL("XQ",$J,"IOS")) D HOME^%ZIS
"RTN","ZISHONT",37,0)
 Q
"RTN","ZISHONT",38,0)
 ;
"RTN","ZISHONT",39,0)
OPENERR ;
"RTN","ZISHONT",40,0)
 Q 0
"RTN","ZISHONT",41,0)
 ;
"RTN","ZISHONT",42,0)
DEL(%ZX1,%ZX2) ;ef,SR. Del files, return 1 if deleted all requested.
"RTN","ZISHONT",43,0)
 ;S Y=$$DEL^%ZISH("dir path",$NA(array))
"RTN","ZISHONT",44,0)
 ; will invoke an OS command to delete file(s)
"RTN","ZISHONT",45,0)
 ; UNIX: rm -f filespec[ ...]
"RTN","ZISHONT",46,0)
 ; VMS: del filespec[,...]
"RTN","ZISHONT",47,0)
 N %ZARG,%ZXDEL,%ZOS,%ZDELIM,%ZCOMND,%ZLIST
"RTN","ZISHONT",48,0)
 S %ZARG="",%ZXDEL=1
"RTN","ZISHONT",49,0)
 S %ZX1=$$DEFDIR($G(%ZX1))
"RTN","ZISHONT",50,0)
 S %ZOS=$$OS^%ZOSV
"RTN","ZISHONT",51,0)
 S %ZDELIM=$S(%ZOS="UNIX":" ",1:",")
"RTN","ZISHONT",52,0)
 S %ZCOMND=$S(%ZOS="UNIX":"rm -f ",1:"del ")
"RTN","ZISHONT",53,0)
 D
"RTN","ZISHONT",54,0)
 . N $ETRAP,$ESTACK S $ETRAP="D DELERR^%ZISH"
"RTN","ZISHONT",55,0)
 . N %,%ZI,%ZISH,%ZX,%ZFOUND S %ZISH=""
"RTN","ZISHONT",56,0)
 . F %ZI=1:1 S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHONT",57,0)
 . . N $ETRAP,$ESTACK S $ETRAP="D DELERR^%ZISH"
"RTN","ZISHONT",58,0)
 . . I %ZISH["*" S %ZXDEL=0 Q  ; Wild card not allowed.
"RTN","ZISHONT",59,0)
 . . S %ZX=$S(%ZISH[%ZX1:%ZISH,1:%ZX1_%ZISH) ; prepend directory path
"RTN","ZISHONT",60,0)
 . . I %ZOS="VMS",%ZX'[";" S %ZX=%ZX_";*"
"RTN","ZISHONT",61,0)
 . . S %ZFOUND=$ZSEARCH(%ZX)]""  ; File exists
"RTN","ZISHONT",62,0)
 . . S:%ZFOUND %ZARG=$S(%ZARG="":%ZX,1:%ZARG_%ZDELIM_%ZX) ; join files
"RTN","ZISHONT",63,0)
 . . I $L(%ZARG)>2000 S %=$ZF(-1,%ZCOMND_%ZARG),%ZARG="" H 1 ; delete files at a time
"RTN","ZISHONT",64,0)
 . ;
"RTN","ZISHONT",65,0)
 . I $L(%ZARG) S %=$ZF(-1,%ZCOMND_%ZARG) ; delete remaining files
"RTN","ZISHONT",66,0)
 ;
"RTN","ZISHONT",67,0)
 I %ZXDEL S %ZXDEL='$$LIST(%ZX1,%ZX2,"%ZLIST")
"RTN","ZISHONT",68,0)
 Q %ZXDEL
"RTN","ZISHONT",69,0)
 ;
"RTN","ZISHONT",70,0)
DELERR ;Trap any $ETRAP error, unwind and return.
"RTN","ZISHONT",71,0)
 S $ETRAP="D UNWIND^%ZTER"
"RTN","ZISHONT",72,0)
 S %ZXDEL=0,%ZARG=""
"RTN","ZISHONT",73,0)
 D UNWIND^%ZTER
"RTN","ZISHONT",74,0)
 Q
"RTN","ZISHONT",75,0)
 ;
"RTN","ZISHONT",76,0)
DEL1(%ZX3) ;ef,SR. Delete one file
"RTN","ZISHONT",77,0)
 N %ZI1,%ZI2
"RTN","ZISHONT",78,0)
 D SPLIT(%ZX3,.%ZI1,.%ZI2) S %ZI2(%ZI2)=""
"RTN","ZISHONT",79,0)
 Q $$DEL(%ZI1,$NA(%ZI2))
"RTN","ZISHONT",80,0)
 ;
"RTN","ZISHONT",81,0)
SPLIT(%I,%O1,%O2) ;Split to path,file
"RTN","ZISHONT",82,0)
 N %ZOS,%D,D S %ZOS=$$OS^%ZOSV
"RTN","ZISHONT",83,0)
 I %ZOS["VMS" D  Q
"RTN","ZISHONT",84,0)
 . S D=$S(%I["]":"]",1:":")
"RTN","ZISHONT",85,0)
 . S %O1=$P(%I,D,1)_D,%O2=$P(%I,D,2)
"RTN","ZISHONT",86,0)
 . Q
"RTN","ZISHONT",87,0)
 S %D=$S(%ZOS="UNIX":"/",%ZOS="NT":"\",1:""),%O1="",%O2="" Q:%D=""
"RTN","ZISHONT",88,0)
 S D=$L(%I,%D),%O1=$P(%I,%D,1,D-1),%O2=$P(%I,%D,D)
"RTN","ZISHONT",89,0)
 Q
"RTN","ZISHONT",90,0)
 ;
"RTN","ZISHONT",91,0)
FEXIST(%PATH,%FL) ;Check if files exsist.
"RTN","ZISHONT",92,0)
 ;S Y=$$DTEST("/usr/var",$NA(array))
"RTN","ZISHONT",93,0)
 N %ZISH,%ZISHY
"RTN","ZISHONT",94,0)
 S %ZISH=$$LIST(%PATH,%FL,"%ZISHY")
"RTN","ZISHONT",95,0)
 Q %ZISH
"RTN","ZISHONT",96,0)
 ;
"RTN","ZISHONT",97,0)
LIST(%ZX1,%ZX2,%ZX3) ;ef,SR. Create a local array holding file names
"RTN","ZISHONT",98,0)
 ;S Y=$$LIST^%ZISH("\dir\",$NA(array),$NA(return array)) Return 1 if found anything
"RTN","ZISHONT",99,0)
 ;
"RTN","ZISHONT",100,0)
 N %ZISH,%ZISHN,%ZX,%ZISHY,%ZY,%ZOS
"RTN","ZISHONT",101,0)
 S %ZX1=$$DEFDIR($G(%ZX1)),%ZOS=$$OS^%ZOSV
"RTN","ZISHONT",102,0)
 ;S %ZX1=$$TRNLNM(%ZX1)
"RTN","ZISHONT",103,0)
 ;Get fls to act on
"RTN","ZISHONT",104,0)
 S %ZISH="" F  S %ZISH=$O(@%ZX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHONT",105,0)
 . S %ZISHY=$P(%ZISH,"*")
"RTN","ZISHONT",106,0)
 . I %ZOS="VMS",%ZISH'["." S %ZISH=%ZISH_".*" ;Allways upper
"RTN","ZISHONT",107,0)
 . ;NT, display case, ignore for lookup
"RTN","ZISHONT",108,0)
 . S %ZX=%ZX1_%ZISH
"RTN","ZISHONT",109,0)
 . F %ZISHN=0:1 D  Q:(%ZX="")
"RTN","ZISHONT",110,0)
 . . S %ZX=$ZSEARCH($S(%ZISHN:"",1:%ZX))
"RTN","ZISHONT",111,0)
 . . ;Q:(%ZX="")!($$UP^XLFSTR(%ZX)'[%ZISHY)!(%ZX?.E1.2".")
"RTN","ZISHONT",112,0)
 . . Q:(%ZX="")!(%ZX?.E1.2".")
"RTN","ZISHONT",113,0)
 . . I %ZOS="VMS" S %ZX=$P(%ZX,"]",2),@%ZX3@(%ZX)=""
"RTN","ZISHONT",114,0)
 . . I %ZOS="NT" S %ZY=$P(%ZX,"\",$L(%ZX,"\")),@%ZX3@(%ZY)=""
"RTN","ZISHONT",115,0)
 . . I %ZOS="UNIX" S %ZY=$P(%ZX,"/",$L(%ZX,"/")) Q:%ZX'[%ZISHY  S @%ZX3@(%ZY)=""
"RTN","ZISHONT",116,0)
 . . Q
"RTN","ZISHONT",117,0)
 Q $O(@%ZX3@(""))]""
"RTN","ZISHONT",118,0)
 ;
"RTN","ZISHONT",119,0)
MV(X1,X2,Y1,Y2) ;ef,SR. Rename a fl
"RTN","ZISHONT",120,0)
 ;S Y=$$MV^ZOSHDOS("\dir\","fl","\dir\","fl")
"RTN","ZISHONT",121,0)
 ;Unix use mv, NT/VMS use COPY and DEL
"RTN","ZISHONT",122,0)
 N %,X,Y,%ZOS,%ZISHX S %ZOS=$$OS^%ZOSV
"RTN","ZISHONT",123,0)
 S X1=$$DEFDIR($G(X1)),Y1=$$DEFDIR($G(Y1))
"RTN","ZISHONT",124,0)
 S X=$ZSEARCH(X1_X2),Y=Y1_Y2 ;move X to Y
"RTN","ZISHONT",125,0)
 I X="" Q 0
"RTN","ZISHONT",126,0)
 ;Move to same place can delete file. Since at destination return 1
"RTN","ZISHONT",127,0)
 I $P(X,";")=Y Q 1
"RTN","ZISHONT",128,0)
 S %=$ZF(-1,$S(%ZOS="UNIX":"mv ",1:"copy ")_X_" "_Y) ;Use NT/VMS copy
"RTN","ZISHONT",129,0)
 I %ZOS'="UNIX" D
"RTN","ZISHONT",130,0)
 . S X2=$P(X,X1,2),%ZISHX(X2)=""
"RTN","ZISHONT",131,0)
 . S Y=$$DEL^%ZISH(X1,$NA(%ZISHX))
"RTN","ZISHONT",132,0)
 Q 1
"RTN","ZISHONT",133,0)
 ;
"RTN","ZISHONT",134,0)
PWD() ;ef,SR. Print working directory
"RTN","ZISHONT",135,0)
 N Y,%ZOS
"RTN","ZISHONT",136,0)
 S Y=$$DEFDIR(""),%ZOS=$$OS^%ZOSV
"RTN","ZISHONT",137,0)
 I Y="" S Y=$ZSEARCH("*")
"RTN","ZISHONT",138,0)
 Q $S(%ZOS["VMS":Y,1:$P(Y,".",1))
"RTN","ZISHONT",139,0)
 ;
"RTN","ZISHONT",140,0)
TRNLNM(PATH) ;ef. Expand logical path
"RTN","ZISHONT",141,0)
 N %ZOS,P1,P2
"RTN","ZISHONT",142,0)
 S %ZOS=$$OS^%ZOSV,PATH=$G(PATH)
"RTN","ZISHONT",143,0)
 I %ZOS="VMS" D  Q PATH
"RTN","ZISHONT",144,0)
 . S P1=PATH_$S(PATH[":":"*.*",1:":*.*")
"RTN","ZISHONT",145,0)
 . S P2=$ZSEARCH(P1)
"RTN","ZISHONT",146,0)
 . S:$L(P2) PATH=$S(P2["]":$P(P2,"]",1,$L(P2,"]")-1)_"]",1:$P(P2,":",1)_":")
"RTN","ZISHONT",147,0)
 . Q
"RTN","ZISHONT",148,0)
 I %ZOS="NT" D  Q PATH
"RTN","ZISHONT",149,0)
 . S P1=PATH_$S($E(PATH,$L(PATH))'="\":"\*",1:"*"),P2=$ZSEARCH(P1)
"RTN","ZISHONT",150,0)
 . S:$L(P2) PATH=$P(P2,"\",1,$L(P2,"\")-1)_"\"
"RTN","ZISHONT",151,0)
 . Q
"RTN","ZISHONT",152,0)
 ;Unix Cache $ZSEARCH uses % around an environment variable
"RTN","ZISHONT",153,0)
 I %ZOS="UNIX" D  Q PATH
"RTN","ZISHONT",154,0)
 . S P1=PATH_$S($E(PATH,$L(PATH))'="/":"/*",1:"*"),P2=$ZSEARCH(P1)
"RTN","ZISHONT",155,0)
 . S:$L(P2) PATH=$P(P2,"/",1,$L(P2,"/")-1)_"/"
"RTN","ZISHONT",156,0)
 . Q
"RTN","ZISHONT",157,0)
 Q PATH
"RTN","ZISHONT",158,0)
 ;
"RTN","ZISHONT",159,0)
DEFDIR(DF) ;ef. Default Dir and frmt
"RTN","ZISHONT",160,0)
 ;Need to handle NT, VMS and Linux
"RTN","ZISHONT",161,0)
 N %ZOS,P1,P2 S %ZOS=$$OS^%ZOSV,DF=$G(DF)
"RTN","ZISHONT",162,0)
 Q:DF="." "" ;Special way to get current dir.
"RTN","ZISHONT",163,0)
 S:DF="" DF=$G(^XTV(8989.3,1,"DEV")),DF=$P(DF,"^",$S($$PRI^%ZOSV<2:1,1:2))
"RTN","ZISHONT",164,0)
 Q:DF="" ""
"RTN","ZISHONT",165,0)
 ;Check syntax, VMS needs disk:[dir] or logical:
"RTN","ZISHONT",166,0)
 I %ZOS="VMS" D
"RTN","ZISHONT",167,0)
 . I DF[":" S P1=$P(DF,":")_":",P2=$P(DF,":",2)
"RTN","ZISHONT",168,0)
 . E  S P1="",P2=DF
"RTN","ZISHONT",169,0)
 . I P1="",P2["$" S P1=P2,P2=""  ;Could be a logical
"RTN","ZISHONT",170,0)
 . I $L(P2) S:P2'["[" P2="["_P2 S:P2'["]" P2=P2_"]"
"RTN","ZISHONT",171,0)
 . S DF=P1_P2 S:DF'[":" DF=DF_":"
"RTN","ZISHONT",172,0)
 . Q
"RTN","ZISHONT",173,0)
 ;Check syntax, Unix needs /mnt/fl, ./fl, ~/fl %HOME%/fl
"RTN","ZISHONT",174,0)
 I %ZOS="UNIX" D
"RTN","ZISHONT",175,0)
 . S DF=$TR(DF,"\","/")
"RTN","ZISHONT",176,0)
 . S:$E(DF,$L(DF))'="/" DF=DF_"/"
"RTN","ZISHONT",177,0)
 . Q
"RTN","ZISHONT",178,0)
 ;Check syntax, NT needs c:\dir\ or \\server\folder\
"RTN","ZISHONT",179,0)
 I %ZOS="NT" D
"RTN","ZISHONT",180,0)
 . N P1,P2
"RTN","ZISHONT",181,0)
 . I '(DF?1(1A1":\",1"\\").E) S DF=$$DEFDIR("")
"RTN","ZISHONT",182,0)
 . S P1="",P2=DF
"RTN","ZISHONT",183,0)
 . I DF[":" S P1=$P(DF,":")_":",P2=$P(DF,":",2)
"RTN","ZISHONT",184,0)
 . S P2=$TR(P2,"/","\")
"RTN","ZISHONT",185,0)
 . I $L(P2) S:".\"'[$E(P2,1) P2="\"_P2 S:$E(P2,$L(P2))'="\" P2=P2_"\"
"RTN","ZISHONT",186,0)
 . S DF=P1_P2
"RTN","ZISHONT",187,0)
 . Q
"RTN","ZISHONT",188,0)
 S DF=$$TRNLNM(DF) ;Resolve logicals
"RTN","ZISHONT",189,0)
 Q DF
"RTN","ZISHONT",190,0)
 ;
"RTN","ZISHONT",191,0)
FL(X) ;Fl len
"RTN","ZISHONT",192,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHONT",193,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHONT",194,0)
 I $L(ZOSHP1)>8 S X=4 Q
"RTN","ZISHONT",195,0)
 I $L(ZOSHP2)>3 S X=4 Q
"RTN","ZISHONT",196,0)
 Q
"RTN","ZISHONT",197,0)
 ;
"RTN","ZISHONT",198,0)
STATUS() ;ef,SR. Return EOF status
"RTN","ZISHONT",199,0)
 U $I
"RTN","ZISHONT",200,0)
 Q $$EOF($ZEOF)
"RTN","ZISHONT",201,0)
 ;
"RTN","ZISHONT",202,0)
EOF(X) ;Eof flag, pass in $ZEOF
"RTN","ZISHONT",203,0)
 Q (X=-1)
"RTN","ZISHONT",204,0)
 ;
"RTN","ZISHONT",205,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHONT",206,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHONT",207,0)
 N I,F,MX
"RTN","ZISHONT",208,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHONT",209,0)
 S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;
"RTN","ZISHONT",210,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHONT",211,0)
 I IX=1 S %ZISHF=F_"(%ZISHI" ;Build root, IX=1
"RTN","ZISHONT",212,0)
 I IX>1 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHONT",213,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHONT",214,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$QS(HF,I)
"RTN","ZISHONT",215,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHONT",216,0)
 Q
"RTN","ZISHONT",217,0)
 ;
"RTN","ZISHONT",218,0)
READNXT(REC) ;Read any sized record into array. %ZB has terminator
"RTN","ZISHONT",219,0)
 N %,I,X,$ES,$ET S REC="",$ET="D READNX^%ZISH Q"
"RTN","ZISHONT",220,0)
 U IO R X:5 S %ZB=$A($ZB),REC=$E(X,1,255)
"RTN","ZISHONT",221,0)
 Q:$L(X)<256
"RTN","ZISHONT",222,0)
 S %=256 F I=1:1 Q:$L(X)<%  S REC(I)=$E(X,%,%+254),%=%+255
"RTN","ZISHONT",223,0)
 Q
"RTN","ZISHONT",224,0)
READNX ;Check for EOF
"RTN","ZISHONT",225,0)
 I $ZE["ENDOFFILE" S %ZA=-1
"RTN","ZISHONT",226,0)
 S $EC=""
"RTN","ZISHONT",227,0)
 Q
"RTN","ZISHONT",228,0)
 ;
"RTN","ZISHONT",229,0)
FTG(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;ef,SR. Unload contents of host file into global
"RTN","ZISHONT",230,0)
 ;p1=hostf file directory
"RTN","ZISHONT",231,0)
 ;p2=host file name
"RTN","ZISHONT",232,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHONT",233,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHONT",234,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHONT",235,0)
 N %ZA,%ZB,%ZC,%XX,%OVFCNT,%ZISHF,%ZISHO,POP,%ZISUB,$ES,$ET
"RTN","ZISHONT",236,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHOF,%ZISHOX,%ZISHS,%ZX,%ZISHY
"RTN","ZISHONT",237,0)
 S %ZX1=$$DEFDIR($G(%ZX1)),%ZISHOF=$G(%ZX5,"OVF")
"RTN","ZISHONT",238,0)
 D MAKEREF(%ZX3,%ZX4,"%ZISHOF")
"RTN","ZISHONT",239,0)
 D OPEN^%ZISH(,%ZX1,%ZX2,"R")
"RTN","ZISHONT",240,0)
 I POP Q 0
"RTN","ZISHONT",241,0)
 S %ZC=1,%ZA=0,$ET="S %ZC=0,%ZA=-1,$EC="""" Q"
"RTN","ZISHONT",242,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF($ZEOF)!%ZA  D
"RTN","ZISHONT",243,0)
 . S @%ZISHF=%XX
"RTN","ZISHONT",244,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHONT",245,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHONT",246,0)
 . Q
"RTN","ZISHONT",247,0)
 D CLOSE() ;Normal exit
"RTN","ZISHONT",248,0)
 Q %ZC
"RTN","ZISHONT",249,0)
 ;
"RTN","ZISHONT",250,0)
GTF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Load contents of global to host file.
"RTN","ZISHONT",251,0)
 ;p1=$NAME of global reference
"RTN","ZISHONT",252,0)
 ;p2=incrementing subscript
"RTN","ZISHONT",253,0)
 ;p3=host file directory
"RTN","ZISHONT",254,0)
 ;p4=host file name
"RTN","ZISHONT",255,0)
 N %ZISHY,%ZISHOX
"RTN","ZISHONT",256,0)
 S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,"W")
"RTN","ZISHONT",257,0)
 Q %ZISHY
"RTN","ZISHONT",258,0)
 ;
"RTN","ZISHONT",259,0)
GATF(%ZX1,%ZX2,%ZX3,%ZX4) ;ef,SR. Append to host file.
"RTN","ZISHONT",260,0)
 ;
"RTN","ZISHONT",261,0)
 ;p1=$NAME of global reference
"RTN","ZISHONT",262,0)
 ;p2=incrementing subscript
"RTN","ZISHONT",263,0)
 ;p3=host file directory
"RTN","ZISHONT",264,0)
 ;p4=host file name
"RTN","ZISHONT",265,0)
 N %ZISHY
"RTN","ZISHONT",266,0)
 S %ZISHY=$$MGTF(%ZX1,%ZX2,%ZX3,%ZX4,"A")
"RTN","ZISHONT",267,0)
 Q %ZISHY
"RTN","ZISHONT",268,0)
 ;
"RTN","ZISHONT",269,0)
MGTF(%ZX1,%ZX2,%ZX3,%ZX4,%ZX5) ;
"RTN","ZISHONT",270,0)
 ;p1=$NAME of global reference
"RTN","ZISHONT",271,0)
 ;p2=incrementing subscript
"RTN","ZISHONT",272,0)
 ;p3=host file directory
"RTN","ZISHONT",273,0)
 ;p4=host file name
"RTN","ZISHONT",274,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHS,%ZISHOX,IO,%ZX,Y,%ZC
"RTN","ZISHONT",275,0)
 D MAKEREF(%ZX1,%ZX2)
"RTN","ZISHONT",276,0)
 D OPEN^%ZISH(,$G(%ZX3),%ZX4,%ZX5) ;Default dir set in open
"RTN","ZISHONT",277,0)
 I POP Q 0
"RTN","ZISHONT",278,0)
 N $ETRAP S $ETRAP="S $EC="""" D CLOSE^%ZISH() Q 0"
"RTN","ZISHONT",279,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZX,!
"RTN","ZISHONT",280,0)
 D CLOSE()
"RTN","ZISHONT",281,0)
 Q 1
"RTN","ZISHONT",282,0)
 ;
"VER")
8.0^22.0
"^DD",3.081,3.081,99,0)
ELAPSED TIME (MINUTES)^CJ8^^ ; ^X ^DD(3.081,99,9.6) S X=$S(Y(3.081,99,9):Y(3.081,99,10),Y(3.081,99,11):X) S Y=X,X=Y(3.081,99,7),X=X_Y
"^DD",3.081,3.081,99,9)
^
"^DD",3.081,3.081,99,9.01)
3.081^16;3.081^.001;3.081^3
"^DD",3.081,3.081,99,9.1)
$S(INTERNAL(#3):MINUTES(#3,#.001),1:"on line")_$S(INTERNAL(#16):"*",1:" ")
"^DD",3.081,3.081,99,9.2)
S Y(3.081,99,1)=$S($D(^XUSEC(0,D0,0)):^(0),1:"") S X=$P(Y(3.081,99,1),U,4),X=X S X=X,Y(3.081,99,2)=$G(X),Y(3.081,99,3)=$G(X) S X=$P(Y(3.081,99,1),U,4)
"^DD",3.081,3.081,99,9.3)
X ^DD(3.081,99,9.2) S Y(3.081,99,4)=$G(X) S X=$S('$D(D0):"",D0<0:"",1:D0)
"^DD",3.081,3.081,99,9.4)
X ^DD(3.081,99,9.3) S X1=Y(3.081,99,4) S Y=$E(X1_"000",9,10)-$E(X_"000",9,10)*60+$E(X1_"00000",11,12)-$E(X_"00000",11,12),X2=X,X=$P(X,".",1)'=$P(X1,".",1) D ^%DTC:X S X=X*1440+Y S X=X
"^DD",3.081,3.081,99,9.5)
X ^DD(3.081,99,9.4) S Y(3.081,99,5)=$G(X) S X=1,Y(3.081,99,6)=$G(X) S X="on line",X=$S(Y(3.081,99,2):Y(3.081,99,5),Y(3.081,99,6):X),Y(3.081,99,7)=$G(X)
"^DD",3.081,3.081,99,9.6)
X ^DD(3.081,99,9.5) S Y(3.081,99,8)=$G(X) S X=$P(Y(3.081,99,1),U,16),X=X S X=X,Y(3.081,99,9)=$G(X) S X="*",Y(3.081,99,10)=$G(X) S X=1,Y(3.081,99,11)=$G(X) S X=" "
"^DD",3.081,3.081,99,21,0)
^^1^1^2920528^^
"^DD",3.081,3.081,99,21,1,0)
This is the amount of time the user has been signed on.
"^DD",3.081,3.081,99,"DT")
3100512
"^DD",3.5,3.5,2,0)
TYPE^RS^TRM:TERMINAL;OTH:OTHER;MT:MAGTAPE;SDP:SDP;SPL:SPOOL;BAR:BARCODE READER;HFS:HOST FILE SERVER;VTRM:VIRTUAL TERMINAL;RES:RESOURCES;CHAN:NETWORK CHANNEL;IMPC:IMAGING WORK STATION;^TYPE;1^Q
"^DD",3.5,3.5,2,.1)

"^DD",3.5,3.5,2,1,0)
^.1
"^DD",3.5,3.5,2,1,1,0)
^^TRIGGER^3.54^.01
"^DD",3.5,3.5,2,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="RES" I X S X=DIV X ^DD(3.5,2,1,1,89.2) ;S Y(101)=$S($D(^%ZISL(3.54,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S DIU=X K Y X ^DD(3.5,2,1,1,1.1) X ^DD(3.5,2,1,1,1.4)
"^DD",3.5,3.5,2,1,1,1.1)
S X=DIV S Y(1)=$S($D(^%ZIS(1,D0,0)):^(0),1:"") S X=$P(Y(1),U,2)
"^DD",3.5,3.5,2,1,1,1.4)
S DIH=$S($D(^%ZISL(3.54,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,1)=DIV,DIH=3.54,DIG=.01 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.5,3.5,2,1,1,2)
Q
"^DD",3.5,3.5,2,1,1,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^%ZIS(1,D0,0)):^(0),1:"") S X=$P(Y(1),U,2) K DIC S DIC="^%ZISL(3.54,",DIC(0)="NMFL" D ^DIC S (D,D0,DIV(0))=+Y
"^DD",3.5,3.5,2,1,1,"%D",0)
^^5^5^2930414^
"^DD",3.5,3.5,2,1,1,"%D",1,0)
Whenever the TYPE field of the DEVICE File(#3.5) is changed
"^DD",3.5,3.5,2,1,1,"%D",2,0)
to TYPE RESOURCE, the value of $I is triggered
"^DD",3.5,3.5,2,1,1,"%D",3,0)
into the NAME field of the RESOURCE File(#3.54).
"^DD",3.5,3.5,2,1,1,"%D",4,0)
This ensures that an entry in the RESOURCE File(#3.54)
"^DD",3.5,3.5,2,1,1,"%D",5,0)
is established for every device entry of TYPE RESOURCE.
"^DD",3.5,3.5,2,1,1,"CREATE CONDITION")
INTERNAL(#2)="RES"
"^DD",3.5,3.5,2,1,1,"CREATE VALUE")
#1
"^DD",3.5,3.5,2,1,1,"DELETE VALUE")
NO EFFECT
"^DD",3.5,3.5,2,1,1,"DIC")
LOOKUP
"^DD",3.5,3.5,2,1,1,"DT")
2921015
"^DD",3.5,3.5,2,1,1,"FIELD")
#1:RESOURCE
"^DD",3.5,3.5,2,1,2,0)
^^TRIGGER^3.5^35
"^DD",3.5,3.5,2,1,2,1)
X ^DD(3.5,2,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^%ZIS(1,D0,1)):^(1),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X="1" X ^DD(3.5,2,1,2,1.4)
"^DD",3.5,3.5,2,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X,Y(3)=$S($D(^%ZIS(1,D0,1)):^(1),1:""),X=Y(0) S X=X="RES",Y(1)=X,Y(2)=X S X=$P(Y(3),U,10) S X=X="",Y=X,X=Y(1),X=X&Y
"^DD",3.5,3.5,2,1,2,1.4)
S DIH=$S($D(^%ZIS(1,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,10)=DIV,DIH=3.5,DIG=35 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",3.5,3.5,2,1,2,2)
Q
"^DD",3.5,3.5,2,1,2,3)
Set the default value.
"^DD",3.5,3.5,2,1,2,"%D",0)
^^3^3^2961212^
"^DD",3.5,3.5,2,1,2,"%D",1,0)
Whenever a device entry is created with a TYPE RESOURCE, a default value
"^DD",3.5,3.5,2,1,2,"%D",2,0)
of '1' is triggered into the AVAILABLE SLOTS field of the RESOURCE
"^DD",3.5,3.5,2,1,2,"%D",3,0)
File(#3.54).
"^DD",3.5,3.5,2,1,2,"CREATE CONDITION")
(INTERNAL(TYPE)="RES")&(INTERNAL(#35)="")
"^DD",3.5,3.5,2,1,2,"CREATE VALUE")
"1"
"^DD",3.5,3.5,2,1,2,"DELETE VALUE")
NO EFFECT
"^DD",3.5,3.5,2,1,2,"DT")
2961212
"^DD",3.5,3.5,2,1,2,"FIELD")
#35
"^DD",3.5,3.5,2,9)
@
"^DD",3.5,3.5,2,21,0)
^^39^39^3100615^
"^DD",3.5,3.5,2,21,1,0)
This field has the general type of device on the CPU.  'TRM' is the most
"^DD",3.5,3.5,2,21,2,0)
common entry.
"^DD",3.5,3.5,2,21,3,0)
      TRM -- Terminal devices such as most crts and printers
"^DD",3.5,3.5,2,21,4,0)
             should be associated with a corresponding device entry
"^DD",3.5,3.5,2,21,5,0)
             with a type of 'TRM'.
"^DD",3.5,3.5,2,21,6,0)
      HFS -- Host File Server is only available on mumps platforms
"^DD",3.5,3.5,2,21,7,0)
             that exists on a layered system(e.g.: VMS, UNIX, NT, etc.).
"^DD",3.5,3.5,2,21,8,0)
             This type and the associated functionality provides
"^DD",3.5,3.5,2,21,9,0)
             the vehicle to read and write to host level files.
"^DD",3.5,3.5,2,21,10,0)
             Instead of directing reports to a printer, the results
"^DD",3.5,3.5,2,21,11,0)
             could be placed into a VMS, NT or UNIX file.  This would
"^DD",3.5,3.5,2,21,12,0)
             allow a non-mumps based statistical package or spreadsheet
"^DD",3.5,3.5,2,21,13,0)
             to use data produced by the mumps based application by
"^DD",3.5,3.5,2,21,14,0)
             simply extracting data from the host file.
"^DD",3.5,3.5,2,21,15,0)
     VTRM -- Virtual Terminal Server devices are those that are associated
"^DD",3.5,3.5,2,21,16,0)
             with a dynamically created mumps port identification($I).
"^DD",3.5,3.5,2,21,17,0)
             A generic device entry with a device type of 'VTRM'
"^DD",3.5,3.5,2,21,18,0)
             can be established for users who log into the system
"^DD",3.5,3.5,2,21,19,0)
             through terminal servers.
"^DD",3.5,3.5,2,21,20,0)
      RES -- Resources is a type used for special sequencing of tasks
"^DD",3.5,3.5,2,21,21,0)
             that do not require a particular device.
"^DD",3.5,3.5,2,21,22,0)
     CHAN -- Network Channels are high speed devices that use network
"^DD",3.5,3.5,2,21,23,0)
             protocols such as TCP/IP.
"^DD",3.5,3.5,2,21,24,0)
      OTH -- Other devices that do not fit a particular category
"^DD",3.5,3.5,2,21,25,0)
             should be given a type of 'OTH'.
"^DD",3.5,3.5,2,21,26,0)
       MT -- Magtape device should have a type of 'MT'.
"^DD",3.5,3.5,2,21,27,0)
      SPL -- Spool device is a predefined allocated disk space similar
"^DD",3.5,3.5,2,21,28,0)
             to SDP.  However, access to the spool device can be achieved
"^DD",3.5,3.5,2,21,29,0)
             from multiple users simultaneously.
"^DD",3.5,3.5,2,21,30,0)
      BAR -- Bar code reader.  This type identifies the device
"^DD",3.5,3.5,2,21,31,0)
             as a barcode reader.
"^DD",3.5,3.5,2,21,32,0)
      SDP -- Sequential Disk Processor is a predefined allocated
"^DD",3.5,3.5,2,21,33,0)
             disk space used for sequential processing.  On DSM-11
"^DD",3.5,3.5,2,21,34,0)
             and M/11+ systems, devices 59 thru 62 are reserved for SDP.
"^DD",3.5,3.5,2,21,35,0)
             On MSM, the Sequential Block Processor(SBP) is essentially
"^DD",3.5,3.5,2,21,36,0)
             the same as SDP. This has been replaced with HFS.
"^DD",3.5,3.5,2,21,37,0)
     IMPC -- Imaging work station device(reserved for future use for
"^DD",3.5,3.5,2,21,38,0)
             DHCP Imaging Project).
"^DD",3.5,3.5,2,21,39,0)

"^DD",3.5,3.5,2,"DT")
3100615
"^DD",3.5,3.5,5.5,0)
QUEUING^S^0:ALLOWED;1:FORCED;2:NOT ALLOWED;^0;12^Q
"^DD",3.5,3.5,5.5,21,0)
^^15^15^3100819^
"^DD",3.5,3.5,5.5,21,1,0)
When this field is set to FORCED and queuing is allowed by the calling
"^DD",3.5,3.5,5.5,21,2,0)
program (%ZIS["Q"), the Device Handler will return IO("Q")=1 upon
"^DD",3.5,3.5,5.5,21,3,0)
device selection and the job will be queued.  That is, the user
"^DD",3.5,3.5,5.5,21,4,0)
does not need to enter "Q" to invoke queuing and will not be prompted
"^DD",3.5,3.5,5.5,21,5,0)
with the question about wanting output queued.  If the program 
"^DD",3.5,3.5,5.5,21,6,0)
does not allow queuing (%ZIS'["Q"), the user will see the following
"^DD",3.5,3.5,5.5,21,7,0)
message: Sorry, QUEUING is required for this device.
"^DD",3.5,3.5,5.5,21,8,0)
 
"^DD",3.5,3.5,5.5,21,9,0)
Set this field to NOT ALLOWED if queuing is not possible or desired
"^DD",3.5,3.5,5.5,21,10,0)
for this device.
"^DD",3.5,3.5,5.5,21,11,0)
 
"^DD",3.5,3.5,5.5,21,12,0)
Set this field to ALLOWED if queuing is possible for this device.
"^DD",3.5,3.5,5.5,21,13,0)
When this field is set to ALLOWED, the application/user will determine
"^DD",3.5,3.5,5.5,21,14,0)
if queuing is desired.  Setting this field to null is the same as
"^DD",3.5,3.5,5.5,21,15,0)
setting this field to ALLOWED.
"^DD",3.5,3.5,5.5,"DT")
3100819
"^DD",3.5,3.5,18000,0)
NVS PASSOVER FLAG^S^1:YES;^NV;1^Q
"^DD",3.5,3.5,18000,3)
Is this device to not be cleared in the test account?
"^DD",3.5,3.5,18000,21,0)
^^4^4^3100819^
"^DD",3.5,3.5,18000,21,1,0)
This field is a flag which will allow for the devices so selected to be
"^DD",3.5,3.5,18000,21,2,0)
skipped in the NVS TEST ACCOUNT initialization process.  If the test
"^DD",3.5,3.5,18000,21,3,0)
database has a different path to the device in question, some editting may
"^DD",3.5,3.5,18000,21,4,0)
be needed.
"^DD",3.5,3.5,18000,"DT")
3100819
"BLD",1301,6)
^442
**END**
**END**
