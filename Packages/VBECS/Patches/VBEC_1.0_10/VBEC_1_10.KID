KIDS Distribution saved on Sep 23, 2010@13:18:39
VBEC*1*10 9/22/10
**KIDS**:VBEC*1.0*10^

**INSTALL NAME**
VBEC*1.0*10
"BLD",7355,0)
VBEC*1.0*10^VBECS^0^3100923^y
"BLD",7355,1,0)
^^2^2^3100310^
"BLD",7355,1,1,0)
This patch contains changes to the VBECS Blood Bank package. Refer to the 
"BLD",7355,1,2,0)
patch listed in the Forum patch module for more details.
"BLD",7355,4,0)
^9.64PA^6000^2
"BLD",7355,4,6000,0)
6000
"BLD",7355,4,6000,2,0)
^9.641^6000^1
"BLD",7355,4,6000,2,6000,0)
VBECS SITE PARAMETERS  (File-top level)
"BLD",7355,4,6000,2,6000,1,0)
^9.6411^1^1
"BLD",7355,4,6000,2,6000,1,1,0)
WORKLOAD RUN DATE
"BLD",7355,4,6000,222)
y^n^p^^^^n^^n
"BLD",7355,4,6000,224)

"BLD",7355,4,6002.04,0)
6002.04
"BLD",7355,4,6002.04,222)
y^n^f^^n^^y^o^n
"BLD",7355,4,"APDD",6000,6000)

"BLD",7355,4,"APDD",6000,6000,1)

"BLD",7355,4,"B",6000,6000)

"BLD",7355,4,"B",6002.04,6002.04)

"BLD",7355,6.3)
15
"BLD",7355,"INIT")
VBECP10
"BLD",7355,"KRN",0)
^9.67PA^779.2^20
"BLD",7355,"KRN",.4,0)
.4
"BLD",7355,"KRN",.401,0)
.401
"BLD",7355,"KRN",.402,0)
.402
"BLD",7355,"KRN",.403,0)
.403
"BLD",7355,"KRN",.5,0)
.5
"BLD",7355,"KRN",.84,0)
.84
"BLD",7355,"KRN",3.6,0)
3.6
"BLD",7355,"KRN",3.8,0)
3.8
"BLD",7355,"KRN",9.2,0)
9.2
"BLD",7355,"KRN",9.8,0)
9.8
"BLD",7355,"KRN",9.8,"NM",0)
^9.68A^9^8
"BLD",7355,"KRN",9.8,"NM",1,0)
VBECSRV^^0^B26349772
"BLD",7355,"KRN",9.8,"NM",2,0)
VBECA7^^0^B32810678
"BLD",7355,"KRN",9.8,"NM",3,0)
VBECRPCD^^0^B6726989
"BLD",7355,"KRN",9.8,"NM",4,0)
VBECHLRT^^0^B3777483
"BLD",7355,"KRN",9.8,"NM",6,0)
VBECP10^^0^B3147138
"BLD",7355,"KRN",9.8,"NM",7,0)
VBECA5B^^0^B11377348
"BLD",7355,"KRN",9.8,"NM",8,0)
VBECA7A^^0^B37967504
"BLD",7355,"KRN",9.8,"NM",9,0)
VBECA7A1^^0^B71661689
"BLD",7355,"KRN",9.8,"NM","B","VBECA5B",7)

"BLD",7355,"KRN",9.8,"NM","B","VBECA7",2)

"BLD",7355,"KRN",9.8,"NM","B","VBECA7A",8)

"BLD",7355,"KRN",9.8,"NM","B","VBECA7A1",9)

"BLD",7355,"KRN",9.8,"NM","B","VBECHLRT",4)

"BLD",7355,"KRN",9.8,"NM","B","VBECP10",6)

"BLD",7355,"KRN",9.8,"NM","B","VBECRPCD",3)

"BLD",7355,"KRN",9.8,"NM","B","VBECSRV",1)

"BLD",7355,"KRN",19,0)
19
"BLD",7355,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",7355,"KRN",19,"NM",1,0)
VBECSERVER^^0
"BLD",7355,"KRN",19,"NM","B","VBECSERVER",1)

"BLD",7355,"KRN",19.1,0)
19.1
"BLD",7355,"KRN",101,0)
101
"BLD",7355,"KRN",409.61,0)
409.61
"BLD",7355,"KRN",771,0)
771
"BLD",7355,"KRN",779.2,0)
779.2
"BLD",7355,"KRN",870,0)
870
"BLD",7355,"KRN",8989.51,0)
8989.51
"BLD",7355,"KRN",8989.52,0)
8989.52
"BLD",7355,"KRN",8994,0)
8994
"BLD",7355,"KRN","B",.4,.4)

"BLD",7355,"KRN","B",.401,.401)

"BLD",7355,"KRN","B",.402,.402)

"BLD",7355,"KRN","B",.403,.403)

"BLD",7355,"KRN","B",.5,.5)

"BLD",7355,"KRN","B",.84,.84)

"BLD",7355,"KRN","B",3.6,3.6)

"BLD",7355,"KRN","B",3.8,3.8)

"BLD",7355,"KRN","B",9.2,9.2)

"BLD",7355,"KRN","B",9.8,9.8)

"BLD",7355,"KRN","B",19,19)

"BLD",7355,"KRN","B",19.1,19.1)

"BLD",7355,"KRN","B",101,101)

"BLD",7355,"KRN","B",409.61,409.61)

"BLD",7355,"KRN","B",771,771)

"BLD",7355,"KRN","B",779.2,779.2)

"BLD",7355,"KRN","B",870,870)

"BLD",7355,"KRN","B",8989.51,8989.51)

"BLD",7355,"KRN","B",8989.52,8989.52)

"BLD",7355,"KRN","B",8994,8994)

"BLD",7355,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7355,"QUES",0)
^9.62^^
"BLD",7355,"REQB",0)
^9.611^1^1
"BLD",7355,"REQB",1,0)
VBEC*1.0*3^2
"BLD",7355,"REQB","B","VBEC*1.0*3",1)

"DATA",6002.04,1,0)
LRBLA^16491336
"DATA",6002.04,2,0)
LRBLA1^13247720
"DATA",6002.04,3,0)
LRBLA2^10714606
"DATA",6002.04,4,0)
LRBLAA^19811268
"DATA",6002.04,5,0)
LRBLAA1^3999346
"DATA",6002.04,6,0)
LRBLAB^1563563
"DATA",6002.04,7,0)
LRBLAGG^2696134
"DATA",6002.04,8,0)
LRBLAUD^12655999
"DATA",6002.04,9,0)
LRBLAUD1^26768640
"DATA",6002.04,10,0)
LRBLB^24918643
"DATA",6002.04,11,0)
LRBLBU^2865040
"DATA",6002.04,12,0)
LRBLC^2421662
"DATA",6002.04,13,0)
LRBLCAP^3397555
"DATA",6002.04,14,0)
LRBLCMV^6259531
"DATA",6002.04,15,0)
LRBLD^3589634
"DATA",6002.04,16,0)
LRBLDA^17368709
"DATA",6002.04,17,0)
LRBLDA1^4245088
"DATA",6002.04,18,0)
LRBLDAA^16566025
"DATA",6002.04,19,0)
LRBLDAL^12772212
"DATA",6002.04,20,0)
LRBLDC^18246921
"DATA",6002.04,21,0)
LRBLDC1^5965563
"DATA",6002.04,22,0)
LRBLDCR^12866758
"DATA",6002.04,23,0)
LRBLDCU^6912463
"DATA",6002.04,24,0)
LRBLDED^7786610
"DATA",6002.04,25,0)
LRBLDEL^12423140
"DATA",6002.04,26,0)
LRBLDELT^6534675
"DATA",6002.04,27,0)
LRBLDEX^2807713
"DATA",6002.04,28,0)
LRBLDEX1^15936157
"DATA",6002.04,29,0)
LRBLDEX2^18027976
"DATA",6002.04,30,0)
LRBLDK^4986215
"DATA",6002.04,31,0)
LRBLDL^10780969
"DATA",6002.04,32,0)
LRBLDL1^1371304
"DATA",6002.04,33,0)
LRBLDLG^24837211
"DATA",6002.04,34,0)
LRBLDMV^8125382
"DATA",6002.04,35,0)
LRBLDP^2996140
"DATA",6002.04,36,0)
LRBLDPA^4417470
"DATA",6002.04,37,0)
LRBLDPA1^18467575
"DATA",6002.04,38,0)
LRBLDPA2^17911279
"DATA",6002.04,39,0)
LRBLDPAW^3501459
"DATA",6002.04,40,0)
LRBLDPH^12474385
"DATA",6002.04,41,0)
LRBLDPL^5079534
"DATA",6002.04,42,0)
LRBLDR^20180505
"DATA",6002.04,43,0)
LRBLDR1^9681943
"DATA",6002.04,44,0)
LRBLDRR^25487142
"DATA",6002.04,45,0)
LRBLDRR1^36322090
"DATA",6002.04,46,0)
LRBLDRR2^3873846
"DATA",6002.04,47,0)
LRBLDRR3^4006079
"DATA",6002.04,48,0)
LRBLDSC^10732866
"DATA",6002.04,49,0)
LRBLDT^18989962
"DATA",6002.04,50,0)
LRBLDTA^3542673
"DATA",6002.04,51,0)
LRBLDUC^6967983
"DATA",6002.04,52,0)
LRBLDW^7417352
"DATA",6002.04,53,0)
LRBLDX^6289087
"DATA",6002.04,54,0)
LRBLJA^22206171
"DATA",6002.04,55,0)
LRBLJA1^7278858
"DATA",6002.04,56,0)
LRBLJB^12069336
"DATA",6002.04,57,0)
LRBLJC^12020685
"DATA",6002.04,58,0)
LRBLJCK^13704675
"DATA",6002.04,59,0)
LRBLJD^17526948
"DATA",6002.04,60,0)
LRBLJD1^20438593
"DATA",6002.04,61,0)
LRBLJDA^12659173
"DATA",6002.04,62,0)
LRBLJDM^23636935
"DATA",6002.04,63,0)
LRBLJDP^12156511
"DATA",6002.04,64,0)
LRBLJED^19813234
"DATA",6002.04,65,0)
LRBLJI^11303078
"DATA",6002.04,66,0)
LRBLJL^32044357
"DATA",6002.04,67,0)
LRBLJL1^12455437
"DATA",6002.04,68,0)
LRBLJLA^12954422
"DATA",6002.04,69,0)
LRBLJLG^33485546
"DATA",6002.04,70,0)
LRBLJLG1^18526954
"DATA",6002.04,71,0)
LRBLJM^7587108
"DATA",6002.04,72,0)
LRBLJM1^32006091
"DATA",6002.04,73,0)
LRBLJP^6075414
"DATA",6002.04,74,0)
LRBLJPA^6509389
"DATA",6002.04,75,0)
LRBLJPA1^22930790
"DATA",6002.04,76,0)
LRBLJPA2^13538443
"DATA",6002.04,77,0)
LRBLJPH^8496103
"DATA",6002.04,78,0)
LRBLJPP^15992544
"DATA",6002.04,79,0)
LRBLJPP1^7950187
"DATA",6002.04,80,0)
LRBLJR^11541905
"DATA",6002.04,81,0)
LRBLJRB^14372796
"DATA",6002.04,82,0)
LRBLJSH^13270669
"DATA",6002.04,83,0)
LRBLJT^12315310
"DATA",6002.04,84,0)
LRBLJTS^4856283
"DATA",6002.04,85,0)
LRBLJTS1^11907320
"DATA",6002.04,86,0)
LRBLJTS2^10531128
"DATA",6002.04,87,0)
LRBLJU^7479468
"DATA",6002.04,88,0)
LRBLJU1^9199662
"DATA",6002.04,89,0)
LRBLJUT^6910878
"DATA",6002.04,90,0)
LRBLJW^15908424
"DATA",6002.04,91,0)
LRBLJX^7189988
"DATA",6002.04,92,0)
LRBLP^23063826
"DATA",6002.04,93,0)
LRBLPA^4917256
"DATA",6002.04,94,0)
LRBLPAB^3559834
"DATA",6002.04,95,0)
LRBLPB^1398193
"DATA",6002.04,96,0)
LRBLPBR^10668916
"DATA",6002.04,97,0)
LRBLPBR1^20753304
"DATA",6002.04,98,0)
LRBLPC^20715197
"DATA",6002.04,99,0)
LRBLPC1^9166467
"DATA",6002.04,100,0)
LRBLPCS^18630025
"DATA",6002.04,101,0)
LRBLPCS1^18313594
"DATA",6002.04,102,0)
LRBLPCSS^13448992
"DATA",6002.04,103,0)
LRBLPD^14946952
"DATA",6002.04,104,0)
LRBLPD1^14926470
"DATA",6002.04,105,0)
LRBLPE^16478868
"DATA",6002.04,106,0)
LRBLPE1^11209104
"DATA",6002.04,107,0)
LRBLPED^30672400
"DATA",6002.04,108,0)
LRBLPED1^12361611
"DATA",6002.04,109,0)
LRBLPED2^4068005
"DATA",6002.04,110,0)
LRBLPEW^16625171
"DATA",6002.04,111,0)
LRBLPH^4606867
"DATA",6002.04,112,0)
LRBLPIT^8603721
"DATA",6002.04,113,0)
LRBLPP^1507816
"DATA",6002.04,114,0)
LRBLPQA^11183171
"DATA",6002.04,115,0)
LRBLPR^7910362
"DATA",6002.04,116,0)
LRBLPR1^17139253
"DATA",6002.04,117,0)
LRBLPRA^7284366
"DATA",6002.04,118,0)
LRBLPT^11904359
"DATA",6002.04,119,0)
LRBLPT1^13257814
"DATA",6002.04,120,0)
LRBLPTR^15909434
"DATA",6002.04,121,0)
LRBLPTR1^12410628
"DATA",6002.04,122,0)
LRBLPUS^22228922
"DATA",6002.04,123,0)
LRBLPUS1^16194936
"DATA",6002.04,124,0)
LRBLPUS2^9981298
"DATA",6002.04,125,0)
LRBLPX^24141645
"DATA",6002.04,126,0)
LRBLPX1^21999226
"DATA",6002.04,127,0)
LRBLQPR^7403029
"DATA",6002.04,128,0)
LRBLQST^8202015
"DATA",6002.04,129,0)
LRBLRCT^13566350
"DATA",6002.04,130,0)
LRBLS^20512427
"DATA",6002.04,131,0)
LRBLSCRN^1499431
"DATA",6002.04,132,0)
LRBLSET^3784871
"DATA",6002.04,133,0)
LRBLSRV^2711195
"DATA",6002.04,134,0)
LRBLSSN^5258961
"DATA",6002.04,135,0)
LRBLST^4195346
"DATA",6002.04,136,0)
LRBLSTR^3560028
"DATA",6002.04,137,0)
LRBLSUM^2235261
"DATA",6002.04,138,0)
LRBLTA^8463693
"DATA",6002.04,139,0)
LRBLTA1^4844621
"DATA",6002.04,140,0)
LRBLTX^19096112
"DATA",6002.04,141,0)
LRBLTXA^15194346
"DATA",6002.04,142,0)
LRBLU^25741537
"DATA",6002.04,143,0)
LRBLUL^1293094
"DATA",6002.04,144,0)
LRBLVAL^807361
"DATA",6002.04,145,0)
LRBLW^5200260
"DATA",6002.04,146,0)
LRBLWD^9101552
"DATA",6002.04,147,0)
LRBLWDS^9459816
"DATA",6002.04,148,0)
LRBLY^3405068
"DATA",6002.04,149,0)
LRUB^3314864
"DATA",6002.04,150,0)
LRUC^1927708
"DATA",6002.04,151,0)
LRUCN^7002830
"DATA",6002.04,152,0)
LRUD^13085309
"DATA",6002.04,153,0)
LRUDIT^2190213
"DATA",6002.04,154,0)
LRUL^7269934
"DATA",6002.04,155,0)
LRUMSG^613211
"DATA",6002.04,156,0)
LRUT^1986962
"DATA",6002.04,157,0)
LRUTL^21270986
"DATA",6002.04,158,0)
LRUG^2437566
"DATA",6002.04,159,0)
VBECA1^15238106
"DATA",6002.04,160,0)
VBECA1A^4232079
"DATA",6002.04,161,0)
VBECA1B^61255311
"DATA",6002.04,162,0)
VBECA1B1^35331122
"DATA",6002.04,163,0)
VBECA2^990799
"DATA",6002.04,164,0)
VBECA3^13958816
"DATA",6002.04,165,0)
VBECA3A^116577
"DATA",6002.04,166,0)
VBECA3B^11129821
"DATA",6002.04,167,0)
VBECA3C^16841971
"DATA",6002.04,168,0)
VBECA4^15334551
"DATA",6002.04,169,0)
VBECA5^813104
"DATA",6002.04,170,0)
VBECA5A^2902941
"DATA",6002.04,171,0)
VBECA5B^11377348
"DATA",6002.04,172,0)
VBECA6^10870720
"DATA",6002.04,173,0)
VBECA7^32512479
"DATA",6002.04,174,0)
VBECA7A^37967504
"DATA",6002.04,175,0)
VBECA7A1^69945388
"DATA",6002.04,176,0)
VBECA7B^64114607
"DATA",6002.04,177,0)
VBECAZ^1531462
"DATA",6002.04,178,0)
VBECDC00^29006974
"DATA",6002.04,179,0)
VBECDC01^38136752
"DATA",6002.04,180,0)
VBECDC02^4904086
"DATA",6002.04,181,0)
VBECDC19^52486759
"DATA",6002.04,182,0)
VBECDCDC^30473665
"DATA",6002.04,183,0)
VBECDCHX^13671377
"DATA",6002.04,184,0)
VBECDCM^20099895
"DATA",6002.04,185,0)
VBECDCM0^11064686
"DATA",6002.04,186,0)
VBECDCM1^24209996
"DATA",6002.04,187,0)
VBECDCM2^22225177
"DATA",6002.04,188,0)
VBECDCMP^16912213
"DATA",6002.04,189,0)
VBECDCNM^13224428
"DATA",6002.04,190,0)
VBECDCR^30083905
"DATA",6002.04,191,0)
VBECDCSP^1068327
"DATA",6002.04,192,0)
VBECDCST^10953715
"DATA",6002.04,193,0)
VBECDCU^32610200
"DATA",6002.04,194,0)
VBECDCU1^14426272
"DATA",6002.04,195,0)
VBECDCU2^36794365
"DATA",6002.04,196,0)
VBECDCX^45221687
"DATA",6002.04,197,0)
VBECDCX1^10155625
"DATA",6002.04,198,0)
VBECDSS^14002875
"DATA",6002.04,199,0)
VBECENV^11886954
"DATA",6002.04,200,0)
VBECHLOR^17460611
"DATA",6002.04,201,0)
VBECHLRT^3777483
"DATA",6002.04,202,0)
VBECLU^62085514
"DATA",6002.04,203,0)
VBECLU0^22984698
"DATA",6002.04,204,0)
VBECLU3^17629716
"DATA",6002.04,205,0)
VBECPOST^81343398
"DATA",6002.04,206,0)
VBECPST1^41532594
"DATA",6002.04,207,0)
VBECRL^10917646
"DATA",6002.04,208,0)
VBECRPC^37044839
"DATA",6002.04,209,0)
VBECRPC1^5917800
"DATA",6002.04,210,0)
VBECRPCA^73291905
"DATA",6002.04,211,0)
VBECRPCB^37262884
"DATA",6002.04,212,0)
VBECRPCC^23397469
"DATA",6002.04,213,0)
VBECRPCD^6726989
"DATA",6002.04,214,0)
VBECRPCE^8061175
"DATA",6002.04,215,0)
VBECRPCH^3877808
"DATA",6002.04,216,0)
VBECRPCM^41078175
"DATA",6002.04,217,0)
VBECRPCP^17844001
"DATA",6002.04,218,0)
VBECRPCW^4711802
"DATA",6002.04,219,0)
VBECUTL^14471136
"DATA",6002.04,220,0)
VBECVLC^23203538
"DATA",6002.04,221,0)
VBECVLL^6895087
"DATA",6002.04,222,0)
VBECSRV^26349772
"FIA",6000)
VBECS SITE PARAMETERS
"FIA",6000,0)
^VBEC(6000,
"FIA",6000,0,0)
6000P
"FIA",6000,0,1)
y^n^p^^^^n^^n
"FIA",6000,0,10)

"FIA",6000,0,11)

"FIA",6000,0,"RLRO")

"FIA",6000,0,"VR")
1.0^VBEC
"FIA",6000,6000)
1
"FIA",6000,6000,1)

"FIA",6002.04)
VBEC INTEGRITY
"FIA",6002.04,0)
^VBEC(6002.04,
"FIA",6002.04,0,0)
6002.04
"FIA",6002.04,0,1)
y^n^f^^n^^y^o^n
"FIA",6002.04,0,10)

"FIA",6002.04,0,11)

"FIA",6002.04,0,"RLRO")

"FIA",6002.04,0,"VR")
1.0^VBEC
"FIA",6002.04,6002.04)
0
"INIT")
VBECP10
"KRN",19,2926763,-1)
0^1
"KRN",19,2926763,0)
VBECSERVER^VBEC INTEGRITY SERVER^^S^^^^^^^^
"KRN",19,2926763,25)
VBECSRV
"KRN",19,2926763,220)
^R^^^Y^E^0
"KRN",19,2926763,"U")
VBEC INTEGRITY SERVER
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",649,-1)
1^1
"PKG",649,0)
VBECS^VBEC^VistA Blood Establishment Computer System
"PKG",649,20,0)
^9.402P^^
"PKG",649,22,0)
^9.49I^1^1
"PKG",649,22,1,0)
1.0^3090423^3080103^1
"PKG",649,22,1,"PAH",1,0)
10^3100923
"PKG",649,22,1,"PAH",1,1,0)
^^2^2^3100923
"PKG",649,22,1,"PAH",1,1,1,0)
This patch contains changes to the VBECS Blood Bank package. Refer to the 
"PKG",649,22,1,"PAH",1,1,2,0)
patch listed in the Forum patch module for more details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","VBECA5B")
0^7^B11377348
"RTN","VBECA5B",1,0)
VBECA5B ;HIOFO/BNT/RLM - VBECS COMPONENT CLASS LOOKUP FOR SURGERY ;11/24/2004
"RTN","VBECA5B",2,0)
 ;;1.0;VBECS;**10**;Apr 14, 2005;Build 15
"RTN","VBECA5B",3,0)
 ;
"RTN","VBECA5B",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA5B",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA5B",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA5B",7,0)
 ; 
"RTN","VBECA5B",8,0)
 ; Integration Agreements:
"RTN","VBECA5B",9,0)
 ; Reference DIBA 4622 for VBECS Blood Products
"RTN","VBECA5B",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA5B",11,0)
 ; Reference to CHKNAME^XQ5 supported by IA #????
"RTN","VBECA5B",12,0)
 ; 
"RTN","VBECA5B",13,0)
 QUIT
"RTN","VBECA5B",14,0)
 ;
"RTN","VBECA5B",15,0)
COMPCL  ; -- Retrieves XML from VBECS
"RTN","VBECA5B",16,0)
 Q:'$D(X)
"RTN","VBECA5B",17,0)
 K ^TMP("VBECA5B",$J),^TMP("VBECA5B1",$J) S VBECX=X
"RTN","VBECA5B",18,0)
 D INITV^VBECRPCC("VBECS Blood Products")
"RTN","VBECA5B",19,0)
 S VBECY="^TMP(""VBECA5B"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECA5B1"",$J)"
"RTN","VBECA5B",20,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA5B",21,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA5B",22,0)
 D EN(.ARR,VBECY)
"RTN","VBECA5B",23,0)
SEL ;
"RTN","VBECA5B",24,0)
 K C,DIR S X=VBECX
"RTN","VBECA5B",25,0)
 ;S DIR("A")="",DIR(0)="FA^2:40",DIR("?")="^D LIST^VBECA5B",DIR("??")="^D LIST^VBECA5B" D ^DIR I $D(DIRUT) S X="" Q  ;Uncomment for testing
"RTN","VBECA5B",26,0)
 I $D(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",X)) Q
"RTN","VBECA5B",27,0)
 S A=X F I=1:1 S A=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",A)) Q:$E(A,1,$L(X))'=X  D
"RTN","VBECA5B",28,0)
  . S B="" F  S B=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",A,B)) Q:B=""  S C(I,A)=B
"RTN","VBECA5B",29,0)
 I I=2 S Y=$O(C(1,"")) W $E(Y,$L(X)+1,999) S X=Y Q
"RTN","VBECA5B",30,0)
 S (A,B)="" F  S A=$O(C(A)) Q:'A  W !?5,A,?9 F  S B=$O(C(A,B)) Q:B=""  W B
"RTN","VBECA5B",31,0)
SEL1 K DIR S DIR("A")="CHOOSE 1-"_(I-1)_":",DIR(0)="LA^1:"_(I-1),DIR("?")="^D LIST^VBECA5B",DIR("??")="^D LIST^VBECA5B"
"RTN","VBECA5B",32,0)
 D ^DIR I $D(DIRUT) S X="" Q
"RTN","VBECA5B",33,0)
 S X=$O(C(X,""))
"RTN","VBECA5B",34,0)
EXIT ;
"RTN","VBECA5B",35,0)
 K A,B,DIRUT,EVT,I,OPTION,VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES
"RTN","VBECA5B",36,0)
 K VBECL,VBECSRC,VBECSTAT,VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND
"RTN","VBECA5B",37,0)
 K VBECUNS,VBECY,Y
"RTN","VBECA5B",38,0)
 Q
"RTN","VBECA5B",39,0)
LIST ;Lists components for ? or ??.  Also replaces LIST66 and OUT66
"RTN","VBECA5B",40,0)
 D INITV^VBECRPCC("VBECS Blood Products")
"RTN","VBECA5B",41,0)
 S VBECY="^TMP(""VBECA5BL"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECA5B1L"",$J)"
"RTN","VBECA5B",42,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA5B",43,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA5B",44,0)
 N CBK,CNT
"RTN","VBECA5B",45,0)
 S OPTION="",VBECRES=$NA(^TMP("VBEC_BP_LIST",$J))
"RTN","VBECA5B",46,0)
 K @VBECRES
"RTN","VBECA5B",47,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA5B",48,0)
 K CBK
"RTN","VBECA5B",49,0)
 S CBK("STARTELEMENT")="STELE^VBECA5B"
"RTN","VBECA5B",50,0)
 S CBK("ENDELEMENT")="ENELE^VBECA5B"
"RTN","VBECA5B",51,0)
 S CBK("CHARACTERS")="CHAR^VBECA5B"
"RTN","VBECA5B",52,0)
 D EN^MXMLPRSE(VBECY,.CBK,.OPTION)
"RTN","VBECA5B",53,0)
 S VBECLI=0 F  S VBECLI=$O(^TMP("VBEC_BP_LIST",$J,"BLOOD PRODUCT",VBECLI)) Q:'VBECLI  W !?5,$P(^(VBECLI),"^"),"  -  ",$P(^(VBECLI),"^",2)
"RTN","VBECA5B",54,0)
 Q
"RTN","VBECA5B",55,0)
 ;S A=""  F VBECL=1:1 S A=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A)) Q:'A  D  I '(VBECL#5) S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","VBECA5B",56,0)
 ; . W !,$P(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A),"^"),"   ",$P(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A),"^",2)
"RTN","VBECA5B",57,0)
 Q
"RTN","VBECA5B",58,0)
EN(ARR,DOC) ;
"RTN","VBECA5B",59,0)
 N CBK,CNT
"RTN","VBECA5B",60,0)
 S OPTION="",VBECRES=$NA(^TMP("VBEC_BP_DATA",$J))
"RTN","VBECA5B",61,0)
 K @VBECRES
"RTN","VBECA5B",62,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA5B",63,0)
 D SET(.CBK)
"RTN","VBECA5B",64,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA5B",65,0)
 M ARR=@VBECRES
"RTN","VBECA5B",66,0)
 Q
"RTN","VBECA5B",67,0)
SET(CBK) ;
"RTN","VBECA5B",68,0)
 K CBK
"RTN","VBECA5B",69,0)
 S CBK("STARTELEMENT")="STELE^VBECA5B"
"RTN","VBECA5B",70,0)
 S CBK("ENDELEMENT")="ENELE^VBECA5B"
"RTN","VBECA5B",71,0)
 S CBK("CHARACTERS")="CHAR^VBECA5B"
"RTN","VBECA5B",72,0)
 Q
"RTN","VBECA5B",73,0)
 ;
"RTN","VBECA5B",74,0)
STELE(ELE,ATR) ; -- element start event handler
"RTN","VBECA5B",75,0)
 I ELE="ComponentClass" D
"RTN","VBECA5B",76,0)
  . S VBECLN=VBECLN+1,@VBECRES@("BLOOD PRODUCT",VBECLN)=$G(ATR("name"))_"^"_$G(ATR("shortName"))
"RTN","VBECA5B",77,0)
  . S @VBECRES@("BLOOD PRODUCT","B",$G(ATR("name")),VBECLN)=""
"RTN","VBECA5B",78,0)
  . S @VBECRES@("BLOOD PRODUCT","B",$G(ATR("shortName")),VBECLN)=""
"RTN","VBECA5B",79,0)
 Q
"RTN","VBECA5B",80,0)
ENELE(ELE) ; -- element end event handler
"RTN","VBECA5B",81,0)
 Q
"RTN","VBECA5B",82,0)
 ;
"RTN","VBECA5B",83,0)
CHAR(TEXT) ;
"RTN","VBECA5B",84,0)
 Q
"RTN","VBECA5B",85,0)
ZEOR ;VBECA5B
"RTN","VBECA7")
0^2^B32810678
"RTN","VBECA7",1,0)
VBECA7 ;DALOI/RLM - Workload API ; 8/18/04 10:40am
"RTN","VBECA7",2,0)
 ;;1.0;VBECS;**10**;Apr 14, 2005;Build 15
"RTN","VBECA7",3,0)
 ;
"RTN","VBECA7",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7",7,0)
 ; 
"RTN","VBECA7",8,0)
 ; Integration Agreements:
"RTN","VBECA7",9,0)
 ;  VBECS workload capture supported by IA 4627
"RTN","VBECA7",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA7",11,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECA7",12,0)
 ; Reference to UPDATE^DIE supported by IA #2053
"RTN","VBECA7",13,0)
 ; 
"RTN","VBECA7",14,0)
 QUIT
"RTN","VBECA7",15,0)
 ;
"RTN","VBECA7",16,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",17,0)
 ;      Private Method Supports IA 4767
"RTN","VBECA7",18,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",19,0)
WKLDCAP() ;
"RTN","VBECA7",20,0)
 S NEWWKLD=0
"RTN","VBECA7",21,0)
 D INITV^VBECRPCC("VBECS Workload")
"RTN","VBECA7",22,0)
 I +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA7",23,0)
 S VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA7",24,0)
 S VBECPRMS("PARAMS",1,"VALUE")="P"
"RTN","VBECA7",25,0)
 F I=1:0 D  Q:'NEWWKLD
"RTN","VBECA7",26,0)
 . S NEWWKLD=0
"RTN","VBECA7",27,0)
 . S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA7",28,0)
 . S VBECY=$NA(^TMP("VBECS_XML_RES",$J))
"RTN","VBECA7",29,0)
 . K @VBECY
"RTN","VBECA7",30,0)
 . D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA7",31,0)
 . I $D(@VBECY@("ERROR")) S ARR("ERROR")="1^"_@VBECY@("ERROR") S NEWWKLD=0 Q
"RTN","VBECA7",32,0)
 . D PARSE
"RTN","VBECA7",33,0)
 ;
"RTN","VBECA7",34,0)
EXIT I $D(VBERR) S ARR("ERROR")="1^Errors encountered during parse"
"RTN","VBECA7",35,0)
 K @VBECY,ATR,CBK,DIERR,ELE,FDA,OPTION,TEXT,VBECPRMS
"RTN","VBECA7",36,0)
 K VBECRES,VBECSTAT,VBECY,VBERRA,VBERRB
"RTN","VBECA7",37,0)
 Q '(+$D(ARR)) ;This will return a 1 for a successful transfer and load
"RTN","VBECA7",38,0)
PARSE ;The callbacks defined here will allow the MXMLPRSE API to place
"RTN","VBECA7",39,0)
 ;the data directly into file 6002.01
"RTN","VBECA7",40,0)
 S CBK("STARTELEMENT")="STELE^VBECA7"
"RTN","VBECA7",41,0)
 S CBK("ENDELEMENT")="ENELE^VBECA7"
"RTN","VBECA7",42,0)
 S CBK("CHARACTERS")="CHAR^VBECA7"
"RTN","VBECA7",43,0)
 S OPTION=""
"RTN","VBECA7",44,0)
 D EN^MXMLPRSE(VBECY,.CBK,.OPTION)
"RTN","VBECA7",45,0)
 Q
"RTN","VBECA7",46,0)
STELE(ELE,ATR) ;File the data for each attribute in the FDA array
"RTN","VBECA7",47,0)
 ;for use by the UPDATE^DIE Database Server API.
"RTN","VBECA7",48,0)
 I $D(ATR) D
"RTN","VBECA7",49,0)
  . I ELE["Trans",$D(ATR("id")) S FDA(1,6002.01,"+1,",.01)=ATR("id"),NEWWKLD=1
"RTN","VBECA7",50,0)
  . I $D(ATR("type")) S FDA(1,6002.01,"+1,",1)=ATR("type")
"RTN","VBECA7",51,0)
  . I $D(ATR("division")) S ATR("division")=$TR(ATR("division")," ",""),FDA(1,6002.01,"+1,",2)=$$FIND1^DIC(4,,"MX",ATR("division")) ;RLM 9/22/2010
"RTN","VBECA7",52,0)
  . I $D(ATR("accessionArea")) D
"RTN","VBECA7",53,0)
  . . S FDA(1,6002.01,"+1,",14)=ATR("accessionArea")
"RTN","VBECA7",54,0)
  . I $D(ATR("dateTime")) S FDA(1,6002.01,"+1,",3)=ATR("dateTime")
"RTN","VBECA7",55,0)
  . I $D(ATR("status")) S FDA(1,6002.01,"+1,",5)=ATR("status")
"RTN","VBECA7",56,0)
  . I $D(ATR("code")) D
"RTN","VBECA7",57,0)
  . . ;S FDA(1,6002.01,"+1,",6)=$$WKLDPTR(ATR("code"))
"RTN","VBECA7",58,0)
  . . S FDA(1,6002.01,"+1,",6)=$$WKLDPTR1(ATR("code"),ATR("method")) ;RLM 6-3-10
"RTN","VBECA7",59,0)
  . I $D(ATR("method")) D  ;RLM 6-3-10
"RTN","VBECA7",60,0)
  . . S FDA(1,6002.01,"+1,",7)=$$MTHDPTR(ATR("method")) ;RLM 6-3-10
"RTN","VBECA7",61,0)
  . I $D(ATR("multiplyFactor")) S FDA(1,6002.01,"+1,",8)=ATR("multiplyFactor")
"RTN","VBECA7",62,0)
  . I $D(ATR("dfn")) D
"RTN","VBECA7",63,0)
  . . I $D(^DPT(ATR("dfn"),-9)) S ATR("dfn")=+^DPT(ATR("dfn"),-9)
"RTN","VBECA7",64,0)
  . . I $D(^DPT(ATR("dfn"))) S FDA(1,6002.01,"+1,",9)=ATR("dfn")
"RTN","VBECA7",65,0)
  . I $D(ATR("duz")) D
"RTN","VBECA7",66,0)
  . . I $D(^VA(200,ATR("duz"))) S FDA(1,6002.01,"+1,",10)=ATR("duz")
"RTN","VBECA7",67,0)
  . I $D(ATR("accessionNumber")) S FDA(1,6002.01,"+1,",11)=ATR("accessionNumber")
"RTN","VBECA7",68,0)
  . I $D(ATR("testPerformed")) D
"RTN","VBECA7",69,0)
  . . I $D(^LAB(60,$$STRIP^XLFSTR(ATR("testPerformed")," "))) S FDA(1,6002.01,"+1,",12)=$$STRIP^XLFSTR(ATR("testPerformed")," ")
"RTN","VBECA7",70,0)
  . I ELE["Unit",$D(ATR("id")) S FDA(1,6002.01,"+1,",13)=ATR("id")
"RTN","VBECA7",71,0)
 Q
"RTN","VBECA7",72,0)
ENELE(ELE) ;Ignore the end of each element until the end of
"RTN","VBECA7",73,0)
 ;WorkloadTransactions is found.  File the data at this point.
"RTN","VBECA7",74,0)
 I ELE="WorkloadTransactions" D
"RTN","VBECA7",75,0)
  . Q:'NEWWKLD
"RTN","VBECA7",76,0)
  . D UPDATE^DIE("","FDA(1)",,"VBERR")
"RTN","VBECA7",77,0)
  . ;We'll remove the Writes and handle the errors in a different way
"RTN","VBECA7",78,0)
  . ;prior to release.
"RTN","VBECA7",79,0)
  . I $D(VBERR) D  ;W !,"An error has occurred with ID ",FDA(1,6002.01,"+1,",.01) D
"RTN","VBECA7",80,0)
  . . S (VBERRA,VBERRB,VBERRC)="" F  S VBERRA=$O(VBERR("DIERR",VBERRA)) Q:'VBERRA  F  S VBERRB=$O(VBERR("DIERR",VBERRA,"TEXT",VBERRB)) Q:'VBERRB  S VBERRC=VBERRC+1,XMTEXT(VBERRC)=VBERR("DIERR",VBERRA,"TEXT",VBERRB) K DIERR,VBERR
"RTN","VBECA7",81,0)
  . . S XMDUZ="VBECS Workload Event"
"RTN","VBECA7",82,0)
  . . S XMSUB="VBECS Workload Event"
"RTN","VBECA7",83,0)
  . . S XMTEXT="VBLN("
"RTN","VBECA7",84,0)
  . . S XMY("G.VBECS INTERFACE ADMIN")=""
"RTN","VBECA7",85,0)
  . . D ^XMD
"RTN","VBECA7",86,0)
  . . ;S (VBERRA,VBERRB)="" F  S VBERRA=$O(VBERR("DIERR",VBERRA)) Q:'VBERRA  F  S VBERRB=$O(VBERR("DIERR",VBERRA,"TEXT",VBERRB)) Q:'VBERRB  S ARR("ERROR")="1^Errors encountered during parse" W !,VBERR("DIERR",VBERRA,"TEXT",VBERRB) K DIERR,VBERR
"RTN","VBECA7",87,0)
 Q
"RTN","VBECA7",88,0)
CHAR(TEXT) ;This one isn't necessary, but we'll report an error
"RTN","VBECA7",89,0)
 ;if text is found.
"RTN","VBECA7",90,0)
 S VBERR("DIERR",999999,"TEXT",999999)="TEXT was returned unexpectedly"
"RTN","VBECA7",91,0)
 Q
"RTN","VBECA7",92,0)
WKLDPTR(CODE) ; Gets the pointer to the workload code file 64
"RTN","VBECA7",93,0)
 I $L($P(CODE,".",2))'=5 D
"RTN","VBECA7",94,0)
 . S VBSUFX=$P(CODE,".",2)
"RTN","VBECA7",95,0)
 . F I=1:1 S VBSUFX=VBSUFX_" " Q:$L(VBSUFX)=5
"RTN","VBECA7",96,0)
 . S $P(CODE,".",2)=VBSUFX
"RTN","VBECA7",97,0)
 Q $S($D(^LAM("C",CODE)):$O(^LAM("C",CODE,0)),1:0)
"RTN","VBECA7",98,0)
 Q
"RTN","VBECA7",99,0)
WKLDPTR1(CODE,CODE1) ; Gets the pointer to the workload code file 64 SWITCH TO E X-REF
"RTN","VBECA7",100,0)
 S CODE=$P(CODE,"."),CODE1=$TR(CODE1,".","") S:'CODE1 CODE1="0000"
"RTN","VBECA7",101,0)
 Q $S($D(^LAM("E",CODE_"."_CODE1)):$O(^LAM("E",CODE_"."_CODE1,0)),1:0)
"RTN","VBECA7",102,0)
 Q
"RTN","VBECA7",103,0)
MTHDPTR(CODE) ; Gets the pointer to the workload code file 64
"RTN","VBECA7",104,0)
 S LRSUF=$$FIND1^DIC(64.2,"","O","."_CODE_" ","C","","ERR")
"RTN","VBECA7",105,0)
 Q $S(LRSUF:LRSUF,1:"") ;
"RTN","VBECA7",106,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",107,0)
 ;      Private Method Supports IA 4767
"RTN","VBECA7",108,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",109,0)
UPDTWKLD ; Update VBECS Workload
"RTN","VBECA7",110,0)
 D UPDTWKLD^VBECA7A
"RTN","VBECA7",111,0)
 Q
"RTN","VBECA7",112,0)
TESTSET ;This sets up test data.
"RTN","VBECA7",113,0)
 Q  ;ZL VBECA7 D ZEOR,PARSE ;To test
"RTN","VBECA7",114,0)
 S ^TMP("VBEC_XML_RES",$J,1)="<BloodBank><WorkloadTransactions><Transaction id=""FIRST"" type=""P"" division=""589"" dateTime=""3040614"" status=""S""><Workload code=""Acetone"" method=""ACUTE"" multiplyFactor=""1"" />"
"RTN","VBECA7",115,0)
 S ^TMP("VBEC_XML_RES",$J,2)="<Patient dfn=""262768"" /><VbecsUser duz=""7"" /><Lab accessionNumber=""789"" testPerformed=""ABG"" /><Unit id=""A1"" /></Transaction></WorkloadTransactions>"
"RTN","VBECA7",116,0)
 Q
"RTN","VBECA7",117,0)
 ;
"RTN","VBECA7",118,0)
ZEOR ;VBECA7
"RTN","VBECA7A")
0^8^B37967504
"RTN","VBECA7A",1,0)
VBECA7A ;HOIFO/SAE - Workload API ; 9/30/04 5:38pm
"RTN","VBECA7A",2,0)
 ;;1.0;VBECS;**10**;Apr 14, 2005;Build 15
"RTN","VBECA7A",3,0)
 ;
"RTN","VBECA7A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7A",7,0)
 ; 
"RTN","VBECA7A",8,0)
 ; Integration Agreements:
"RTN","VBECA7A",9,0)
 ;  VBECS workload update supported by IA 4628
"RTN","VBECA7A",10,0)
 ; Reference to LIST^DIC supported by DBIA #2051
"RTN","VBECA7A",11,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA7A",12,0)
 ; 
"RTN","VBECA7A",13,0)
 QUIT
"RTN","VBECA7A",14,0)
 ;
"RTN","VBECA7A",15,0)
UPDTWKLD ;  Update Workload Event Data
"RTN","VBECA7A",16,0)
 ;
"RTN","VBECA7A",17,0)
 ; This routine initializes Vistalink connection values (port,
"RTN","VBECA7A",18,0)
 ; URL, etc.), then builds a local array of selected entries
"RTN","VBECA7A",19,0)
 ; (those that have been successfully processed) from the
"RTN","VBECA7A",20,0)
 ; VistA VBECS WORKLOAD CAPTURE (#6002.01) file.
"RTN","VBECA7A",21,0)
 ; For each entry, listed in the local array, does the following:
"RTN","VBECA7A",22,0)
 ; - sends request, via VistaLink, to .Net VBECS VistALink listener
"RTN","VBECA7A",23,0)
 ; - receives response: VBECS processing status or ErrorText message
"RTN","VBECA7A",24,0)
 ; - If no errors (comm, VistaLink, etc.):
"RTN","VBECA7A",25,0)
 ;   - update VBECS WORKLOAD CAPTURE (#6002.01) file entry:
"RTN","VBECA7A",26,0)
 ;     - delete it (if it had been successfully processed in VBECS) or
"RTN","VBECA7A",27,0)
 ;     - update two fields in this entry (if there had been ErrorText)
"RTN","VBECA7A",28,0)
 ; - If comm, VistaLink, etc., errors:
"RTN","VBECA7A",29,0)
 ;   -  not update VistA
"RTN","VBECA7A",30,0)
 ;   -  save the non-specific error for inclusion in MailMan message.
"RTN","VBECA7A",31,0)
 ; - A MailMan message is transmitted to the G.VBECS INTERFACE ADMIN
"RTN","VBECA7A",32,0)
 ;      mail group:
"RTN","VBECA7A",33,0)
 ;   - identifying success or failure and other transaction info
"RTN","VBECA7A",34,0)
 ;
"RTN","VBECA7A",35,0)
 ; Input  - none
"RTN","VBECA7A",36,0)
 ; Output - no output variables.
"RTN","VBECA7A",37,0)
 ;          However, MailMan msg is sent for fatal errors.
"RTN","VBECA7A",38,0)
 ;
"RTN","VBECA7A",39,0)
 N VBY       ; array of file 6002.01 fields from selected entries
"RTN","VBECA7A",40,0)
 N VBIEN     ; IEN of entry to delete - used in ENELE subroutine
"RTN","VBECA7A",41,0)
 N VBRSLT    ; ^TMP global array of results returned from VBECS
"RTN","VBECA7A",42,0)
 N VBMT      ; array with VistA update status messages for mail text
"RTN","VBECA7A",43,0)
 N VBN       ; loop control variable for For loop
"RTN","VBECA7A",44,0)
 N VBECPRMS  ; local array for REQUEST and results
"RTN","VBECA7A",45,0)
 N VBIENSV   ; IEN to save and use to verify same as VBECS
"RTN","VBECA7A",46,0)
 N VBMTBLT   ; flag that signifies that VBMT has been built
"RTN","VBECA7A",47,0)
 ;
"RTN","VBECA7A",48,0)
 S VBN=0
"RTN","VBECA7A",49,0)
 S VBRSLT=$NA(^TMP("VBECS_XML_RES",$J)) K @VBRSLT
"RTN","VBECA7A",50,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J)) K @VBMT
"RTN","VBECA7A",51,0)
 ;
"RTN","VBECA7A",52,0)
 D INITV^VBECRPCC("VBECS Update Workload Event") ; init VL listener
"RTN","VBECA7A",53,0)
 D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",54,0)
 I $D(@VBMT@(" ERROR")) D  Q
"RTN","VBECA7A",55,0)
 . D BLDERMSG^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",56,0)
 . D SENDMSG(VBMT)
"RTN","VBECA7A",57,0)
 . D CLEANUP
"RTN","VBECA7A",58,0)
 ;
"RTN","VBECA7A",59,0)
 D GETVISTA(.VBY)
"RTN","VBECA7A",60,0)
 ;
"RTN","VBECA7A",61,0)
 ; step thru array. each node contains one entry from file 6002.01
"RTN","VBECA7A",62,0)
 F  S VBN=$O(VBY("DILIST",VBN)) Q:VBN']""  D  Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",63,0)
 . K @VBMT
"RTN","VBECA7A",64,0)
 . D BLDPARMS(.VBY,VBN,.VBECPRMS)
"RTN","VBECA7A",65,0)
 . D BLDRSLTS(.VBECPRMS)
"RTN","VBECA7A",66,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",67,0)
 . Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",68,0)
 . D BLDGLOB(.VBECPRMS,VBRSLT)
"RTN","VBECA7A",69,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",70,0)
 . Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",71,0)
 . D SETVISTA(VBRSLT)
"RTN","VBECA7A",72,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",73,0)
 ;
"RTN","VBECA7A",74,0)
 I $D(@VBMT@(" ERROR")) D  Q
"RTN","VBECA7A",75,0)
 . D BLDERMSG^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",76,0)
 . D SENDMSG(VBMT)
"RTN","VBECA7A",77,0)
 ;
"RTN","VBECA7A",78,0)
 D CLEANUP
"RTN","VBECA7A",79,0)
 Q
"RTN","VBECA7A",80,0)
 ;
"RTN","VBECA7A",81,0)
GETVISTA(VBY) ; get file entries from VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7A",82,0)
 ;
"RTN","VBECA7A",83,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",84,0)
 ;
"RTN","VBECA7A",85,0)
 ;
"RTN","VBECA7A",86,0)
 ; Input
"RTN","VBECA7A",87,0)
 ;   none
"RTN","VBECA7A",88,0)
 ; Output
"RTN","VBECA7A",89,0)
 ;   VBY - array, with each entries' fields packed into each node:
"RTN","VBECA7A",90,0)
 ;           IEN of entry is in first piece of the node value
"RTN","VBECA7A",91,0)
 ;           Fields shown in VBECFLDS variable
"RTN","VBECA7A",92,0)
 ;           List fields in same sequence as SDD Input section 4.1.4
"RTN","VBECA7A",93,0)
 ;
"RTN","VBECA7A",94,0)
 N VBECFLDS  ; fields to retrieve & pack in each VBY("DILIST") node
"RTN","VBECA7A",95,0)
 N VBECSCR   ; screen to filter in entries for two fields:
"RTN","VBECA7A",96,0)
 ;              PROCESSED DATE (#4) field - not null
"RTN","VBECA7A",97,0)
 ;              STATUS         (#5) field - (S)UCCESSFULLY PROCESSED
"RTN","VBECA7A",98,0)
 ;
"RTN","VBECA7A",99,0)
 S X1=DT,X2=-14 D C^%DTC S VBOFF=X
"RTN","VBECA7A",100,0)
 S VBECFLDS="@;.01;5I;4I;20;99"
"RTN","VBECA7A",101,0)
 S VBECSCR("S")="I ($P(^(0),U,4)>VBOFF)&($P(^(0),U,6)=""S"")" ;RLM 6-1-2010
"RTN","VBECA7A",102,0)
 D LIST^DIC(6002.01,"",VBECFLDS,"P","","","","",.VBECSCR,"","VBY")
"RTN","VBECA7A",103,0)
 S VBLOOP=0 F  S VBLOOP=$O(VBY("DILIST",VBLOOP)) Q:'VBLOOP  S $P(VBY("DILIST",VBLOOP,0),"^",4)=$P(VBY("DILIST",VBLOOP,0),"^",4)_$E("0000000.000000",$L($P(VBY("DILIST",VBLOOP,0),"^",4)),13)
"RTN","VBECA7A",104,0)
 ;Added formatting to ensure a six digit time. RLM 4/2/2008
"RTN","VBECA7A",105,0)
 ; VBY("DILIST",4,0)=
"RTN","VBECA7A",106,0)
 ;    8^AC934682-43C2-4B7E-B63B-063C7BABCFAD^^JUL 28, 2004@23:23:49^
"RTN","VBECA7A",107,0)
 ;    some sample error text^pce encounter value
"RTN","VBECA7A",108,0)
 Q
"RTN","VBECA7A",109,0)
 ;
"RTN","VBECA7A",110,0)
BLDPARMS(VBY,VBN,VBECPRMS) ;  build VBECPRMS(PARAMS)
"RTN","VBECA7A",111,0)
 ;
"RTN","VBECA7A",112,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",113,0)
 ;
"RTN","VBECA7A",114,0)
 ; Build VBECPRMS("PARAMS" array for current VistA entry
"RTN","VBECA7A",115,0)
 ;
"RTN","VBECA7A",116,0)
 ; Input
"RTN","VBECA7A",117,0)
 ;   VBY       ; Array: VBECS WORKLOAD CAPTURE (#6002.01) file entries
"RTN","VBECA7A",118,0)
 ;   VBN       ; Node from VBY filtered collection of entries
"RTN","VBECA7A",119,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",120,0)
 ; Output
"RTN","VBECA7A",121,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",122,0)
 ;
"RTN","VBECA7A",123,0)
 N VBW       ; field value
"RTN","VBECA7A",124,0)
 N VBECPI    ; DILIST node piece and VBECPRMS node subscript
"RTN","VBECA7A",125,0)
 N VBNODVAL  ; value of node
"RTN","VBECA7A",126,0)
 N VBX       ; array node
"RTN","VBECA7A",127,0)
 ;
"RTN","VBECA7A",128,0)
 S VBNODVAL=VBY("DILIST",VBN,0)
"RTN","VBECA7A",129,0)
 S VBX="INITIAL IEN:  "_$P(VBNODVAL,U)_U_$P(VBNODVAL,U)
"RTN","VBECA7A",130,0)
 S @VBMT@("!INITIAL IEN")=VBX
"RTN","VBECA7A",131,0)
 S VBNODVAL=$E(VBNODVAL,$F(VBNODVAL,U),$L(VBNODVAL))  ; remove IEN
"RTN","VBECA7A",132,0)
 F VBECPI=1:1:5  D
"RTN","VBECA7A",133,0)
 . S VBW=$P(VBNODVAL,U,VBECPI)
"RTN","VBECA7A",134,0)
 . S VBECPRMS("PARAMS",VBECPI,"VALUE")=VBW
"RTN","VBECA7A",135,0)
 . S VBECPRMS("PARAMS",VBECPI,"TYPE")="STRING"
"RTN","VBECA7A",136,0)
 Q
"RTN","VBECA7A",137,0)
 ;
"RTN","VBECA7A",138,0)
BLDRSLTS(VBECPRMS) ;  put results in VBECPRMS("RESULTS") local array
"RTN","VBECA7A",139,0)
 ;
"RTN","VBECA7A",140,0)
 ; Input
"RTN","VBECA7A",141,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",142,0)
 ; Output
"RTN","VBECA7A",143,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",144,0)
 ;
"RTN","VBECA7A",145,0)
 N VBSTAT  ; temp variable
"RTN","VBECA7A",146,0)
 ;
"RTN","VBECA7A",147,0)
 S VBSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA7A",148,0)
 Q
"RTN","VBECA7A",149,0)
 ;
"RTN","VBECA7A",150,0)
BLDGLOB(VBECPRMS,VBRSLT) ;  put results from VBECS in ^TMP global
"RTN","VBECA7A",151,0)
 ;
"RTN","VBECA7A",152,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",153,0)
 ;
"RTN","VBECA7A",154,0)
 ;
"RTN","VBECA7A",155,0)
 ; Input
"RTN","VBECA7A",156,0)
 ;   VBECPRMS - array
"RTN","VBECA7A",157,0)
 ; Output
"RTN","VBECA7A",158,0)
 ;   VBRSLT   - $NA of ^TMP results global to build
"RTN","VBECA7A",159,0)
 ;
"RTN","VBECA7A",160,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBRSLT)
"RTN","VBECA7A",161,0)
 Q
"RTN","VBECA7A",162,0)
 ;
"RTN","VBECA7A",163,0)
SETVISTA(VBRSLT) ;  Update Vista. MXMLPRSE invokes callback routines
"RTN","VBECA7A",164,0)
 ;
"RTN","VBECA7A",165,0)
 ; Input
"RTN","VBECA7A",166,0)
 ;   VBRSLT - name of results global
"RTN","VBECA7A",167,0)
 ;
"RTN","VBECA7A",168,0)
 N VBCBK  ; callback routines
"RTN","VBECA7A",169,0)
 ;
"RTN","VBECA7A",170,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",171,0)
 ;
"RTN","VBECA7A",172,0)
 ; callbacks allow MXMLPRSE to put data in file 6002.01
"RTN","VBECA7A",173,0)
 S VBCBK("STARTELEMENT")="STELE^VBECA7A1"
"RTN","VBECA7A",174,0)
 S VBCBK("ENDELEMENT")="ENELE^VBECA7A1"
"RTN","VBECA7A",175,0)
 S VBCBK("CHARACTERS")="CHAR^VBECA7A1"
"RTN","VBECA7A",176,0)
 S OPTION=""
"RTN","VBECA7A",177,0)
 D EN^MXMLPRSE(VBRSLT,.VBCBK,.OPTION)
"RTN","VBECA7A",178,0)
 Q
"RTN","VBECA7A",179,0)
 ;
"RTN","VBECA7A",180,0)
SENDMSG(VBMT) ;  Function - send error message to mail group
"RTN","VBECA7A",181,0)
 ;
"RTN","VBECA7A",182,0)
 ; If unsuccessful deletion, send error text
"RTN","VBECA7A",183,0)
 ;
"RTN","VBECA7A",184,0)
 ; Input:
"RTN","VBECA7A",185,0)
 ;   VBMT array with info about transaction
"RTN","VBECA7A",186,0)
 ;
"RTN","VBECA7A",187,0)
 N VBT      ; node in array during $Q
"RTN","VBECA7A",188,0)
 N VBLN     ; message parameters
"RTN","VBECA7A",189,0)
 N VBGROUP  ; name of mail group to which message will be sent
"RTN","VBECA7A",190,0)
 N VBCNT    ; line count of VBLN array
"RTN","VBECA7A",191,0)
 N VBUSERNM ; IEN of user's entry in NEW PERSON file
"RTN","VBECA7A",192,0)
 N VBUSER   ; name of user running this program
"RTN","VBECA7A",193,0)
 N XMDUZ    ; sender
"RTN","VBECA7A",194,0)
 N XMSUB    ; message subject
"RTN","VBECA7A",195,0)
 N XMTEXT   ; message text array
"RTN","VBECA7A",196,0)
 N XMY      ; recipient array
"RTN","VBECA7A",197,0)
 N XMZ      ; returned message number
"RTN","VBECA7A",198,0)
 ;
"RTN","VBECA7A",199,0)
 I '$D(@VBMT@(" ERROR")) Q
"RTN","VBECA7A",200,0)
 ;. S VBX="SUCCESSFUL VBECS-VistA dialog"
"RTN","VBECA7A",201,0)
 ;. S @VBMT@("!SUCCESSFUL VBECS-VISTA DIALOG")=VBX
"RTN","VBECA7A",202,0)
 ;
"RTN","VBECA7A",203,0)
 S VBCNT=1
"RTN","VBECA7A",204,0)
 S VBT=$NA(@VBMT)
"RTN","VBECA7A",205,0)
 ;
"RTN","VBECA7A",206,0)
 ;S VBUSERNM=$$GET1^DIQ(200,DUZ,.01)
"RTN","VBECA7A",207,0)
 ;
"RTN","VBECA7A",208,0)
 S VBLN(VBCNT)="* * * VBECS Workload Event Error Notification * * *"
"RTN","VBECA7A",209,0)
 F  S VBT=$Q(@VBT) Q:VBT=""  Q:$NA(@VBT)'[$J  D
"RTN","VBECA7A",210,0)
 . S VBCNT=VBCNT+1
"RTN","VBECA7A",211,0)
 . S:VBT["DILIST" VBLN(VBCNT)=$G(@VBT)
"RTN","VBECA7A",212,0)
 . S:VBT'["DILIST" VBLN(VBCNT)=$P($G(@VBT),U)
"RTN","VBECA7A",213,0)
 . S VBLN(VBCNT)=$TR(VBLN(VBCNT),"""","'")
"RTN","VBECA7A",214,0)
 ;
"RTN","VBECA7A",215,0)
 S XMDUZ="VBECS Workload Event"
"RTN","VBECA7A",216,0)
 S XMSUB="VBECS Workload Event"
"RTN","VBECA7A",217,0)
 S XMTEXT="VBLN("
"RTN","VBECA7A",218,0)
 ; reactivate the following ling after testing:
"RTN","VBECA7A",219,0)
 S XMY("G.VBECS INTERFACE ADMIN")=""
"RTN","VBECA7A",220,0)
 ;S XMY(VBUSERNM)=""
"RTN","VBECA7A",221,0)
 D ^XMD
"RTN","VBECA7A",222,0)
 Q
"RTN","VBECA7A",223,0)
 ;
"RTN","VBECA7A",224,0)
CLEANUP K ATR,CBK,DIERR,ELE,VBFDA,OPTION,TEXT,VBECPRMS,@VBRSLT,@VBMT
"RTN","VBECA7A",225,0)
 Q
"RTN","VBECA7A1")
0^9^B71661689
"RTN","VBECA7A1",1,0)
VBECA7A1 ;HOIFO/SAE - Workload API ; 9/30/04 5:49pm
"RTN","VBECA7A1",2,0)
 ;;1.0;VBECS;**10**;Apr 14, 2005;Build 15
"RTN","VBECA7A1",3,0)
 ;
"RTN","VBECA7A1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7A1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7A1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7A1",7,0)
 ; 
"RTN","VBECA7A1",8,0)
 ; Integration Agreements:
"RTN","VBECA7A1",9,0)
 ; 
"RTN","VBECA7A1",10,0)
 QUIT
"RTN","VBECA7A1",11,0)
 ;
"RTN","VBECA7A1",12,0)
CHKERROR(VBECPRMS,VBRSLT,VBMT) ; check for error in results
"RTN","VBECA7A1",13,0)
 ;
"RTN","VBECA7A1",14,0)
 ; Input
"RTN","VBECA7A1",15,0)
 ;   VBECPRMS - array
"RTN","VBECA7A1",16,0)
 ;   VBRSLT   - name of ^TMP results global
"RTN","VBECA7A1",17,0)
 ;   VBMT     - name of message text global
"RTN","VBECA7A1",18,0)
 ; Output
"RTN","VBECA7A1",19,0)
 ;   VBMT     - message text global to build onto
"RTN","VBECA7A1",20,0)
 ;
"RTN","VBECA7A1",21,0)
 Q  ;RLM 07 08 10 Don't record errors.
"RTN","VBECA7A1",22,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7A1",23,0)
 ;
"RTN","VBECA7A1",24,0)
 N VBX     ; temporary variable for holding text
"RTN","VBECA7A1",25,0)
 ;
"RTN","VBECA7A1",26,0)
 ; error where ^TMP results global is malformed where it looks like:
"RTN","VBECA7A1",27,0)
 ; ^TMP("VBECS_XML_RES",541084121,1) = ???<?xml version="1.0" ... etc.
"RTN","VBECA7A1",28,0)
 ; this error cannot be checked in STELE(not called in this situation)
"RTN","VBECA7A1",29,0)
 ;
"RTN","VBECA7A1",30,0)
 I $G(VBECPRMS("ERROR"))'=0 D  Q
"RTN","VBECA7A1",31,0)
 . S VBX=VBECPRMS("ERROR")_" returned by INITV~VBECRPCC"
"RTN","VBECA7A1",32,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",33,0)
 I $D(@VBRSLT@("ERROR")) D  Q
"RTN","VBECA7A1",34,0)
 . S VBX=@VBRSLT@("ERROR")_" from PARSE~VBECRPC1 results global"
"RTN","VBECA7A1",35,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",36,0)
 I $P($G(@VBRSLT@(1)),"<")?1."?" D  Q
"RTN","VBECA7A1",37,0)
 . S VBX="MALFORMED RESULTS GLOBAL from PARSE~VBECRPC1 results global"
"RTN","VBECA7A1",38,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",39,0)
 Q
"RTN","VBECA7A1",40,0)
 ;
"RTN","VBECA7A1",41,0)
BLDERMSG(VBECPRMS,VBRSLT,VBMT) ;  build error message(s) into VBMT global
"RTN","VBECA7A1",42,0)
 ;
"RTN","VBECA7A1",43,0)
 Q  ;RLM 07 08 10 Don't record errors.
"RTN","VBECA7A1",44,0)
 ;
"RTN","VBECA7A1",45,0)
 N VBX       ; temporary variable for holding text
"RTN","VBECA7A1",46,0)
 N VBNM      ; indirect name of request/results array/global
"RTN","VBECA7A1",47,0)
 N VBNM2     ; copy of VBNM for different FOR loop
"RTN","VBECA7A1",48,0)
 N VBORIG    ; copy of VBNM with trailing parenthesis removed
"RTN","VBECA7A1",49,0)
 N VBDATA    ; data value from request/results node
"RTN","VBECA7A1",50,0)
 N VBLBL     ; label value comprised of $NA_VBDATA
"RTN","VBECA7A1",51,0)
 N VBSUB     ; subscript value for array node
"RTN","VBECA7A1",52,0)
 N VBOUT     ; full concatenated value of node to display
"RTN","VBECA7A1",53,0)
 N VBLCV     ; loop control variable for FOR loop
"RTN","VBECA7A1",54,0)
 N VBDONE    ; flag to signify 'done' with loop
"RTN","VBECA7A1",55,0)
 N VBBLANK   ; blank line of blank spaces
"RTN","VBECA7A1",56,0)
 N VBMAXDAT  ; maximum allowable length of array node data value
"RTN","VBECA7A1",57,0)
 N VBMAXLBL  ; maximum discovered length of array node label value
"RTN","VBECA7A1",58,0)
 N VBSPACES  ; calulated gap to format display to show data at column
"RTN","VBECA7A1",59,0)
 ;
"RTN","VBECA7A1",60,0)
 S VBX="Following are the request and results array(s)"
"RTN","VBECA7A1",61,0)
 I $D(@VBMT@("!INITIAL IEN"))#2=1 D
"RTN","VBECA7A1",62,0)
 . S VBX=VBX_" for IEN # "_$P(@VBMT@("!INITIAL IEN"),U,2)
"RTN","VBECA7A1",63,0)
 . S @VBMT@("#FOLLOWS MSG")=VBX
"RTN","VBECA7A1",64,0)
 S VBBLANK="                                                         "
"RTN","VBECA7A1",65,0)
 ;
"RTN","VBECA7A1",66,0)
 F VBNM="VBECPRMS",$NA(@VBRSLT) D
"RTN","VBECA7A1",67,0)
 . S VBNM2=VBNM,VBORIG=$P(VBNM,")")
"RTN","VBECA7A1",68,0)
 . S VBMAXLBL=1
"RTN","VBECA7A1",69,0)
 . F  S VBNM2=$Q(@VBNM2) Q:VBNM2=""  Q:$NA(@VBNM2)'[VBORIG  D
"RTN","VBECA7A1",70,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM2),"(",2)
"RTN","VBECA7A1",71,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM2),")")
"RTN","VBECA7A1",72,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECA7A1",73,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7A1",74,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECA7A1",75,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7A1",76,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7A1",77,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7A1",78,0)
 . . S VBMAXLBL=$S($L(VBLBL)>VBMAXLBL:$L(VBLBL),1:VBMAXLBL)
"RTN","VBECA7A1",79,0)
 . S VBMAXLBL=$S(VBMAXLBL>30:30,1:VBMAXLBL+3)
"RTN","VBECA7A1",80,0)
 . S VBMAXDAT=80-VBMAXLBL-2
"RTN","VBECA7A1",81,0)
 . S VBORIG=$P(VBNM,")")
"RTN","VBECA7A1",82,0)
 . F  S VBNM=$Q(@VBNM) Q:VBNM=""  Q:$NA(@VBNM)'[VBORIG  D
"RTN","VBECA7A1",83,0)
 . . S VBLCV=0
"RTN","VBECA7A1",84,0)
 . . S VBSUB=$NA(@VBNM),VBSUB=$TR(VBSUB,"""","")
"RTN","VBECA7A1",85,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM),"(",2)
"RTN","VBECA7A1",86,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM),")")
"RTN","VBECA7A1",87,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECA7A1",88,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7A1",89,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECA7A1",90,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7A1",91,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7A1",92,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7A1",93,0)
 . . S VBSPACES="",$P(VBSPACES," ",VBMAXLBL-$L(VBLBL))=""
"RTN","VBECA7A1",94,0)
 . . S VBSPACES=VBSPACES
"RTN","VBECA7A1",95,0)
 . . S VBDATA=$G(@VBNM)
"RTN","VBECA7A1",96,0)
 . . K VBDONE
"RTN","VBECA7A1",97,0)
 . . F VBLCV=0:1:25 D  Q:$D(VBDONE)
"RTN","VBECA7A1",98,0)
 . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7A1",99,0)
 . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",100,0)
 . . . S VBDATA(VBLCV)="  "_$E(VBDATA,1,VBMAXDAT)
"RTN","VBECA7A1",101,0)
 . . . S VBDATA=$E(VBDATA,VBMAXDAT+1,$L(VBDATA))
"RTN","VBECA7A1",102,0)
 . . . S:$L(VBDATA)'>0 VBDONE=1
"RTN","VBECA7A1",103,0)
 . . . I VBLCV<1 D  Q
"RTN","VBECA7A1",104,0)
 . . . . I $L(VBLBL)'>VBMAXLBL D  Q
"RTN","VBECA7A1",105,0)
 . . . . . S $P(VBSPACES," ",$L(VBLBL)-VBMAXLBL)=""
"RTN","VBECA7A1",106,0)
 . . . . . S VBLBL=VBLBL_VBSPACES
"RTN","VBECA7A1",107,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",108,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",109,0)
 . . . . I $L(VBLBL)>VBMAXLBL D
"RTN","VBECA7A1",110,0)
 . . . . . S @VBMT@(VBSUB)=VBLBL
"RTN","VBECA7A1",111,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",112,0)
 . . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7A1",113,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",114,0)
 . . . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7A1",115,0)
 . . . . . S VBLCV=VBLCV+1
"RTN","VBECA7A1",116,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",117,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",118,0)
 . . . I VBLCV>0 D
"RTN","VBECA7A1",119,0)
 . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7A1",120,0)
 . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",121,0)
 . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",122,0)
 K VBDATA
"RTN","VBECA7A1",123,0)
 Q
"RTN","VBECA7A1",124,0)
 ;
"RTN","VBECA7A1",125,0)
STELE(ELE,ATR) ; Find attribute value
"RTN","VBECA7A1",126,0)
 ;
"RTN","VBECA7A1",127,0)
 ; Input
"RTN","VBECA7A1",128,0)
 ;   ELE - Element,         as defined in Document Type Descriptor
"RTN","VBECA7A1",129,0)
 ;   ATR - Attribute array, as defined in Document Type Descriptor
"RTN","VBECA7A1",130,0)
 ; Output
"RTN","VBECA7A1",131,0)
 ;   VBIEN    - Derived IEN of VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7A1",132,0)
 ;   VBID     - TRANSACTION ID
"RTN","VBECA7A1",133,0)
 ;   VBIENERR - Error message from failure to $$FIND entry in file
"RTN","VBECA7A1",134,0)
 ;   VBMT     - Result array for mail text to be sent to mail group
"RTN","VBECA7A1",135,0)
 ;
"RTN","VBECA7A1",136,0)
 N VBIENI   ; initial IEN of this entry
"RTN","VBECA7A1",137,0)
 K VBIENERR
"RTN","VBECA7A1",138,0)
 N VBX      ; temporary variable for various uses
"RTN","VBECA7A1",139,0)
 N VBBEG    ; beginning character of text value in XML string
"RTN","VBECA7A1",140,0)
 N VBEND    ; ending character of text value in XML string
"RTN","VBECA7A1",141,0)
 N VBERMSG  ; error text message
"RTN","VBECA7A1",142,0)
 ;
"RTN","VBECA7A1",143,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7A1",144,0)
 Q:$D(@VBRSLT@("ERROR"))  ; standard ^TMP "ERROR" - caught by CHKERROR
"RTN","VBECA7A1",145,0)
 ;
"RTN","VBECA7A1",146,0)
 I $L(ELE)'>0 D  Q
"RTN","VBECA7A1",147,0)
 . S VBX="ERROR: No ELEMENT received from parsing routine"
"RTN","VBECA7A1",148,0)
 . S @VBMT@(" ERROR")="ERROR:                "_VBX
"RTN","VBECA7A1",149,0)
 ;
"RTN","VBECA7A1",150,0)
 I ELE="WorkloadEvent" D
"RTN","VBECA7A1",151,0)
 . I '$D(ATR("successfullyUpdated")) D
"RTN","VBECA7A1",152,0)
 . . I $D(ATR("id")) D
"RTN","VBECA7A1",153,0)
 . . . S VBX=ATR("id")_U_ATR("id")
"RTN","VBECA7A1",154,0)
 . . . S @VBMT@("!TRANSACTION ID")="TRANSACTION ID:  "_VBX
"RTN","VBECA7A1",155,0)
 . . . S VBIEN=$$FIND1^DIC(6002.01,"","QX",ATR("id"),"","","VBIENERR")
"RTN","VBECA7A1",156,0)
 . . . I VBIEN?1.N,VBIEN>0 D
"RTN","VBECA7A1",157,0)
 . . . . S VBX=VBIEN_U_VBIEN
"RTN","VBECA7A1",158,0)
 . . . . S @VBMT@("!DERIVED IEN")="DERIVED IEN:  "_VBX
"RTN","VBECA7A1",159,0)
 . . . . S VBX="Successful FIND of VistA entry using VBECS txn ID"
"RTN","VBECA7A1",160,0)
 . . . . S @VBMT@("!SUCCESSFUL FIND")="SUCCESSFUL FIND:  "_VBX
"RTN","VBECA7A1",161,0)
 . . . I VBIEN=0!(VBIEN'?1.N.E)!$D(VBIENERR) D  Q
"RTN","VBECA7A1",162,0)
 . . . . S VBX="No VistA entry for Txn id "_ATR("id")_" was found"
"RTN","VBECA7A1",163,0)
 . . . . ;S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",164,0)
 . . . I VBIEN=$P($G(@VBMT@("!INITIAL IEN")),U,2) D  Q
"RTN","VBECA7A1",165,0)
 . . . . S VBX="Successful match: initial lookup IEN and derived IEN"
"RTN","VBECA7A1",166,0)
 . . . . S @VBMT@("!IEN MATCH")="IENs match:  "_VBX
"RTN","VBECA7A1",167,0)
 . . . I VBIEN'=$P($G(@VBMT@("!INITIAL IEN")),U,2) D  Q
"RTN","VBECA7A1",168,0)
 . . . . S VBX="Mismatch between initial lookup IEN and derived IEN"
"RTN","VBECA7A1",169,0)
 . . . . ;S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",170,0)
 . . I '$D(ATR("id")) D
"RTN","VBECA7A1",171,0)
 . . . S VBX="No Txn ID accompanied the successfullyUpdated attribute"
"RTN","VBECA7A1",172,0)
 . . . ;S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",173,0)
 Q
"RTN","VBECA7A1",174,0)
 ;
"RTN","VBECA7A1",175,0)
ENELE(ELE) ; Ignore end of each element until end of WorkloadTransactions
"RTN","VBECA7A1",176,0)
 ;
"RTN","VBECA7A1",177,0)
 ; Input:
"RTN","VBECA7A1",178,0)
 ;   ELE  - element name from VBECS
"RTN","VBECA7A1",179,0)
 ;
"RTN","VBECA7A1",180,0)
 N VBMT      ; name of global containing mailman message text
"RTN","VBECA7A1",181,0)
 N VBTEXT    ; text from ErrorText element
"RTN","VBECA7A1",182,0)
 N VBTXNID   ; transaction id from @VBMT@("!TRANSACTION ID")
"RTN","VBECA7A1",183,0)
 N VBIEN     ; IEN of entry to update for failure edits
"RTN","VBECA7A1",184,0)
 N VBFDA     ; array for FILE^DIE
"RTN","VBECA7A1",185,0)
 N VBX       ; temporary variable for various uses
"RTN","VBECA7A1",186,0)
 N VBERRMSG  ; error message from FILE^DIE
"RTN","VBECA7A1",187,0)
 N VBLUERR   ; lookup error from $$FIND
"RTN","VBECA7A1",188,0)
 ;
"RTN","VBECA7A1",189,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J))
"RTN","VBECA7A1",190,0)
 ;
"RTN","VBECA7A1",191,0)
 Q:$D(@VBMT@(" ERROR"))  ; an error has already been identified
"RTN","VBECA7A1",192,0)
 ; Q:ELE'="WorkloadEvent"
"RTN","VBECA7A1",193,0)
 ;
"RTN","VBECA7A1",194,0)
 I '$D(@VBMT@("!VBECS ERRTXT")) D
"RTN","VBECA7A1",195,0)
 . I $D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",196,0)
 . . S DIK="^VBEC(6002.01,"
"RTN","VBECA7A1",197,0)
 . . S DA=$P(@VBMT@("!DERIVED IEN"),U,2)
"RTN","VBECA7A1",198,0)
 . . D ^DIK
"RTN","VBECA7A1",199,0)
 . . S VBX="VistA entry # "_DA_" was deleted."
"RTN","VBECA7A1",200,0)
 . . S @VBMT@("!VISTA UPDATE - ENTRY DELETED")=VBX
"RTN","VBECA7A1",201,0)
 . . K DA,DIC,DIK
"RTN","VBECA7A1",202,0)
 . I '$D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",203,0)
 . . S VBX="No VistA update attempted because no IEN was retrieved"
"RTN","VBECA7A1",204,0)
 . . S @VBMT@("!VISTA UPDATE - UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7A1",205,0)
 ;
"RTN","VBECA7A1",206,0)
 I $D(@VBMT@("!VBECS ERRTXT")) D
"RTN","VBECA7A1",207,0)
 . I $D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",208,0)
 . . S VBIEN=$P(@VBMT@("!DERIVED IEN"),U,2)
"RTN","VBECA7A1",209,0)
 . . Q:VBIEN'?1.N
"RTN","VBECA7A1",210,0)
 . . S VBFDA(6002.01,VBIEN_",",5)="E"
"RTN","VBECA7A1",211,0)
 . . S VBFDA(6002.01,VBIEN_",",20)=$P(@VBMT@("!VBECS ERRTXT"),": ",2)
"RTN","VBECA7A1",212,0)
 . . D FILE^DIE("","VBFDA","VBERRMSG")
"RTN","VBECA7A1",213,0)
 . . I '$D(VBERRMSG) D
"RTN","VBECA7A1",214,0)
 . . . S VBX="Entry # "_VBIEN_" was updated"
"RTN","VBECA7A1",215,0)
 . . . S @VBMT@("!VISTA UPDATE - ENTRY UPDATED")=VBX
"RTN","VBECA7A1",216,0)
 . . I $D(VBERRMSG) D
"RTN","VBECA7A1",217,0)
 . . . S VBX=$G(VBERRMSG("DIERR",1,"TEXT",1))
"RTN","VBECA7A1",218,0)
 . . . ;S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7A1",219,0)
 . . . S @VBMT@("!VISTA UPDATE - UPDATE FAILED")=VBX
"RTN","VBECA7A1",220,0)
 . I '$D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",221,0)
 . . S VBX="No VistA update for ERROR TEXT attempted (no IEN)"
"RTN","VBECA7A1",222,0)
 . . ;S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7A1",223,0)
 . . S @VBMT@("!VISTA UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7A1",224,0)
 Q
"RTN","VBECA7A1",225,0)
 ;
"RTN","VBECA7A1",226,0)
CHAR(TEXT) ;
"RTN","VBECA7A1",227,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A1",228,0)
 ;
"RTN","VBECA7A1",229,0)
 I XML["ErrorText" D
"RTN","VBECA7A1",230,0)
 . S @VBMT@("!VBECS ERRTXT")="VBECS ErrorText message: "_TEXT
"RTN","VBECA7A1",231,0)
 Q
"RTN","VBECHLRT")
0^4^B3777483
"RTN","VBECHLRT",1,0)
VBECHLRT ;HOIFO/BNT - VBECS HL7 ADT Messaging Routing routine;July 13, 2004
"RTN","VBECHLRT",2,0)
 ;;1.0;VBECS;**10**;Apr 14, 2005;Build 15
"RTN","VBECHLRT",3,0)
 ;
"RTN","VBECHLRT",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECHLRT",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECHLRT",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECHLRT",7,0)
 ; 
"RTN","VBECHLRT",8,0)
 ; Integration Agreements:
"RTN","VBECHLRT",9,0)
 ; Reference to ^%ZTLOAD supported by IA #10063
"RTN","VBECHLRT",10,0)
 ; Reference to INIT^HLFNC2 supported by IA #2161
"RTN","VBECHLRT",11,0)
 ; Reference to GENERATE^HLMA supported by IA #2164
"RTN","VBECHLRT",12,0)
 ; Reference to GETDFN^MPIF001 supported by IA #2701
"RTN","VBECHLRT",13,0)
 ;
"RTN","VBECHLRT",14,0)
 QUIT
"RTN","VBECHLRT",15,0)
 ;
"RTN","VBECHLRT",16,0)
EN ; Get Message and queue TaskMan to send it on.
"RTN","VBECHLRT",17,0)
 ;
"RTN","VBECHLRT",18,0)
 ; Only send ADT A08 Message Types
"RTN","VBECHLRT",19,0)
 N VBECEVNT,HLA,MSG,VBI,VBJ,SG,VBECSEND
"RTN","VBECHLRT",20,0)
 D INIT^HLFNC2("VAFC ADT-A08 SERVER",.HL) ;Initialize HL7 variables
"RTN","VBECHLRT",21,0)
 S VBECEVNT=HL("ETN")
"RTN","VBECHLRT",22,0)
 S VBECSEND=0
"RTN","VBECHLRT",23,0)
 Q:VBECEVNT'[$E("A08")
"RTN","VBECHLRT",24,0)
 F VBI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","VBECHLRT",25,0)
 . S HLA("HLS",VBI)=MSG
"RTN","VBECHLRT",26,0)
 . S VBJ=0 F  S VBJ=$O(HLNODE(VBJ)) Q:'VBJ  S MSG(VBJ)=HLNODE(VBJ),HLA("HLS",VBI,VBJ)=HLNODE(VBJ)
"RTN","VBECHLRT",27,0)
 . I $T(@SG)]"" D @SG
"RTN","VBECHLRT",28,0)
 Q:'VBECSEND
"RTN","VBECHLRT",29,0)
 ;
"RTN","VBECHLRT",30,0)
 S ZTIO=""
"RTN","VBECHLRT",31,0)
 S ZTRTN="SNDMSG^VBECHLRT"
"RTN","VBECHLRT",32,0)
 S ZTSAVE("HLA(""HLS"",")=""
"RTN","VBECHLRT",33,0)
 S ZTSAVE("VBECEVNT")=""
"RTN","VBECHLRT",34,0)
 S ZTDESC="VBECS HL7 Message Router"
"RTN","VBECHLRT",35,0)
 S ZTDTH=$H
"RTN","VBECHLRT",36,0)
 D ^%ZTLOAD
"RTN","VBECHLRT",37,0)
 D EXIT
"RTN","VBECHLRT",38,0)
 Q
"RTN","VBECHLRT",39,0)
 ;
"RTN","VBECHLRT",40,0)
ZFF ; This segment contains the edited fields
"RTN","VBECHLRT",41,0)
 N X,VBECFLDS
"RTN","VBECHLRT",42,0)
 S VBECFLDS=$P(MSG,HL("FS"),3)
"RTN","VBECHLRT",43,0)
 F I=1:1 S X=$P(VBECFLDS,";",I) Q:X']""  D  Q:VBECSEND
"RTN","VBECHLRT",44,0)
 . S VBECSEND=$S(X=".01":1,X=".02":1,X=".03":1,X=".09":1,X=".351":1,X="991.01":1,1:0)
"RTN","VBECHLRT",45,0)
 Q
"RTN","VBECHLRT",46,0)
 ;
"RTN","VBECHLRT",47,0)
SNDMSG ; Create the ^TMP("HLS",$J global array and send the message
"RTN","VBECHLRT",48,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","VBECHLRT",49,0)
 N EID
"RTN","VBECHLRT",50,0)
 S EID=$O(^ORD(101,"B","VBECS ADT-"_VBECEVNT_" SERVER",0))
"RTN","VBECHLRT",51,0)
 N HL,INT,HLRESLT,HLP
"RTN","VBECHLRT",52,0)
 S HL="HL",INT=0
"RTN","VBECHLRT",53,0)
 D INIT^HLFNC2(EID,.HL,INT)
"RTN","VBECHLRT",54,0)
 D GENERATE^HLMA(EID,"LM",1,.HLRESLT,"",.HLP)
"RTN","VBECHLRT",55,0)
 K HLA,VBECEVNT
"RTN","VBECHLRT",56,0)
 Q
"RTN","VBECHLRT",57,0)
 ;
"RTN","VBECHLRT",58,0)
EXIT ; Kill variables and quit
"RTN","VBECHLRT",59,0)
 K SG,ZTIO,ZTSAVE,ZTDESC,ZTRTN,ZTDTH
"RTN","VBECHLRT",60,0)
 Q
"RTN","VBECP10")
0^6^B3147138
"RTN","VBECP10",1,0)
VBECP10 ;HIOFO;RLM VBECS PATCH 3 Post Install Routine ; 04/30/09 14:40
"RTN","VBECP10",2,0)
 ;;1.0;VBECS;**10**;Apr 14, 2005;Build 15
"RTN","VBECP10",3,0)
 ;
"RTN","VBECP10",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECP10",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECP10",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECP10",7,0)
 ; 
"RTN","VBECP10",8,0)
 ; Integration Agreements:
"RTN","VBECP10",9,0)
 ; Reference to FILESEC^DDMOD supported by DBIA #2916
"RTN","VBECP10",10,0)
 ; Reference to ^XMD supported by DBIA #10113
"RTN","VBECP10",11,0)
 ; Reference to ^XPDUTL supported by DBIA #10141
"RTN","VBECP10",12,0)
 ; Reference to $$GET1^DIQ supported by DBIA #2056
"RTN","VBECP10",13,0)
 ; Reference to $$SITE^VASITE supported by DBIA #10112
"RTN","VBECP10",14,0)
ENV ; Environment Check
"RTN","VBECP10",15,0)
 ;Send a message showing successful installation.
"RTN","VBECP10",16,0)
 K ^TMP("VBEC",$J)
"RTN","VBECP10",17,0)
 s ^TMP("VBEC",$J,1,0)="Patch VBEC*1.0*10 has been installed by "_$$GET1^DIQ(200,DUZ_",",".01","E","VBECN","ERR")_" at "_$P($$SITE^VASITE,"^",2)
"RTN","VBECP10",18,0)
 s XMSUB="VBEC*1.0*10 Patch Installation verification",XMTEXT="^TMP(""VBEC"",$J)",XMDUN="VBECS Patch Monitor"
"RTN","VBECP10",19,0)
 d PATCH
"RTN","VBECP10",20,0)
 s XMY("G.VBEC@FORUM.VA.GOV")=""
"RTN","VBECP10",21,0)
 d SENDMSG^XMXAPI(DUZ,XMSUB,XMTEXT,.XMY)
"RTN","VBECP10",22,0)
 k ^TMP("VBEC",$J)
"RTN","VBECP10",23,0)
 q
"RTN","VBECP10",24,0)
PATCH ;
"RTN","VBECP10",25,0)
 s ^TMP("VBEC",$J,3,0)=" ",^TMP("VBEC",$J,4,0)=" ",^TMP("VBEC",$J,5,0)="Previous Patches:"
"RTN","VBECP10",26,0)
 ;Update the loop in this line to reflect all released patches
"RTN","VBECP10",27,0)
 f VBECI=1:1:9999 s VBECA=$$PATCH^XPDUTL("VBEC*1.0*"_VBECI) i VBECA s ^TMP("VBEC",$J,(VBECI+6),0)="Patch VBEC*1.0*"_VBECI_" has been installed."
"RTN","VBECP10",28,0)
 q
"RTN","VBECP10",29,0)
EOR ;VBECP10
"RTN","VBECRPCD")
0^3^B6726989
"RTN","VBECRPCD",1,0)
VBECRPCD ;DALOI/RLM - Lookup HOSPITAL LOCATION based on DIVISION ;12 January 2004
"RTN","VBECRPCD",2,0)
 ;;1.0;VBECS;**3,10**;Apr 14, 2005;Build 15
"RTN","VBECRPCD",3,0)
 ;
"RTN","VBECRPCD",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCD",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCD",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCD",7,0)
 ; 
"RTN","VBECRPCD",8,0)
 ; Integration Agreements:
"RTN","VBECRPCD",9,0)
 ; Reference to ^SC( supported by IA #10040
"RTN","VBECRPCD",10,0)
 ; Reference to $$SITE^VASITE supported by IA #10112
"RTN","VBECRPCD",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCD",12,0)
 ;
"RTN","VBECRPCD",13,0)
 ; This routine should not be called from the top.
"RTN","VBECRPCD",14,0)
 QUIT
"RTN","VBECRPCD",15,0)
 ;
"RTN","VBECRPCD",16,0)
LOC(RESULTS,DIV) ; Main RPC Entry
"RTN","VBECRPCD",17,0)
 S VBECCNT=0
"RTN","VBECRPCD",18,0)
 S RESULTS=$NA(^TMP("VBECHLOC",$J))
"RTN","VBECRPCD",19,0)
 K @RESULTS
"RTN","VBECRPCD",20,0)
 D BEGROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",21,0)
 I DIV="" D  Q
"RTN","VBECRPCD",22,0)
 . D ADD^VBECRPC("<Error>No Division Provided</Error>")
"RTN","VBECRPCD",23,0)
 . D ENDROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",24,0)
 . Q
"RTN","VBECRPCD",25,0)
 I DIV]"" D LOOK
"RTN","VBECRPCD",26,0)
 D ENDROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",27,0)
 Q
"RTN","VBECRPCD",28,0)
LOOK ;
"RTN","VBECRPCD",29,0)
 S VBECA=0 F  S VBECA=$O(^SC(VBECA)) Q:'VBECA  D
"RTN","VBECRPCD",30,0)
  . Q:'$P(^SC(VBECA,0),U,15)  ;No Division
"RTN","VBECRPCD",31,0)
  . S IDATE=$P($G(^SC(VBECA,"I")),"^",1) ;inactivate date
"RTN","VBECRPCD",32,0)
  . S RDATE=$P($G(^SC(VBECA,"I")),"^",2) ;reactivate date
"RTN","VBECRPCD",33,0)
  . I IDATE]"",IDATE<DT,RDATE="" Q  ;past inactivate date, no reactivate date
"RTN","VBECRPCD",34,0)
  . I IDATE]"",IDATE<DT,RDATE>DT Q  ;past inactivate date, future reactivate date
"RTN","VBECRPCD",35,0)
  . ;Q:$D(^SC(VBECA,"I"))  ;Inactive Location???
"RTN","VBECRPCD",36,0)
  . Q:"CWOR"'[$P(^SC(VBECA,0),U,3)  ;Clinic, Ward, or Operating Room
"RTN","VBECRPCD",37,0)
  . I DIV=$P($$SITE^VASITE(DT,+$P(^SC(VBECA,0),U,15)),U,3) D
"RTN","VBECRPCD",38,0)
  . . D BEGROOT^VBECRPC("Location")
"RTN","VBECRPCD",39,0)
  . . D ADD^VBECRPC("<LocationName>"_$$CHARCHK^XOBVLIB($$WSTRIP($P(^SC(VBECA,0),U)))_"</LocationName>")
"RTN","VBECRPCD",40,0)
  . . D ADD^VBECRPC("<LocationIEN>"_$$CHARCHK^XOBVLIB(VBECA)_"</LocationIEN>")
"RTN","VBECRPCD",41,0)
  . . D ADD^VBECRPC("<LocationType>"_$$CHARCHK^XOBVLIB($P(^SC(VBECA,0),U,3))_"</LocationType>")
"RTN","VBECRPCD",42,0)
  . . D ENDROOT^VBECRPC("Location")
"RTN","VBECRPCD",43,0)
 Q
"RTN","VBECRPCD",44,0)
KILL ;
"RTN","VBECRPCD",45,0)
 K DIV,VBDATA,VBECA,VBECCNT
"RTN","VBECRPCD",46,0)
 Q
"RTN","VBECRPCD",47,0)
WSTRIP(VBDATA) ;Strip White Space
"RTN","VBECRPCD",48,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)
"RTN","VBECRPCD",49,0)
 F  Q:$E(VBDATA,1)'=" "  S VBDATA=$E(VBDATA,2,$L(VBDATA))
"RTN","VBECRPCD",50,0)
 Q VBDATA
"RTN","VBECRPCD",51,0)
 ;
"RTN","VBECRPCD",52,0)
TESTLOC ; Entry point to write the results of the Get Hospital Locations RPC
"RTN","VBECRPCD",53,0)
 ; Function in XML format
"RTN","VBECRPCD",54,0)
 ;
"RTN","VBECRPCD",55,0)
 S VBECTST=1
"RTN","VBECRPCD",56,0)
 D LOC(.RESULTS,"589")
"RTN","VBECRPCD",57,0)
 S X=0
"RTN","VBECRPCD",58,0)
 F  S X=$O(@RESULTS@(X)) Q:X=""  D
"RTN","VBECRPCD",59,0)
 . W @RESULTS@(X)
"RTN","VBECRPCD",60,0)
 Q
"RTN","VBECSRV")
0^1^B26349772
"RTN","VBECSRV",1,0)
VBECSRV ;DALLAS CIOFO/RLM - INTEGRITY CHECKER FOR BLOOD BANK ROUTINES ;08/20/2001 4:35 PM
"RTN","VBECSRV",2,0)
 ;;1.0;VBEC;**10**;Sep 27, 1994;Build 15
"RTN","VBECSRV",3,0)
 ;
"RTN","VBECSRV",4,0)
START ;
"RTN","VBECSRV",5,0)
 K ^TMP($J,"VBECDATA")
"RTN","VBECSRV",6,0)
 S VBECSITE=$P($$SITE^VASITE,U,2),VBECSIT1=$P($$SITE^VASITE,U,1)
"RTN","VBECSRV",7,0)
 ;Determine station number
"RTN","VBECSRV",8,0)
 S VBECSUB=$TR(XQSUB,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","VBECSRV",9,0)
 ;Translate the subject into upper case and place it into a locally
"RTN","VBECSRV",10,0)
 ;namespaced variable.
"RTN","VBECSRV",11,0)
 S ^TMP("VBECINTEG",$J,1,0)=VBECSUB_" triggered at "_VBECSITE_" by "_XMFROM_" on "_XQDATE
"RTN","VBECSRV",12,0)
 ;The first line of the message tells who requested the action and when.
"RTN","VBECSRV",13,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",14,0)
 I VBECSUB["REPORT" D REPORT G EXIT
"RTN","VBECSRV",15,0)
 I VBECSUB["UPDATE" D UPDATE G EXIT
"RTN","VBECSRV",16,0)
 I VBECSUB["LIST" D LIST G EXIT
"RTN","VBECSRV",17,0)
 I VBECSUB["PATCH" D PATCH G EXIT
"RTN","VBECSRV",18,0)
 K XMTEXT,XMSUB,VBECSITE,VBECNOW,XMY
"RTN","VBECSRV",19,0)
 ;Call a routine based on the "Subject" line of the message.
"RTN","VBECSRV",20,0)
 ;Skip the rest of the routine (down to exit) if the subject
"RTN","VBECSRV",21,0)
 ;is a valid call.
"RTN","VBECSRV",22,0)
 S VBECSITE=$P($$SITE^VASITE,U,2),VBECSIT1=$P($$SITE^VASITE,U,1)
"RTN","VBECSRV",23,0)
 S ^TMP($J,"VBECDATA",1)=""
"RTN","VBECSRV",24,0)
 S ^TMP($J,"VBECDATA",2)="Sorry, but I don't know how to "_XQSUB
"RTN","VBECSRV",25,0)
 S ^TMP($J,"VBECDATA",3)="No action taken"
"RTN","VBECSRV",26,0)
 S ^TMP($J,"VBECDATA",3)="Invalid VBEC Server Request From "_XMFROM_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",27,0)
 S XMY("G.bloodbank@FO-HINES.MED.VA.GOV")=""
"RTN","VBECSRV",28,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",29,0)
 S XMSUB="Invalid BB Server Request From "_XMFROM_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",30,0)
 S XMTEXT="^TMP($J,""VBECDATA"",",XMDUZ="Blood Bank Monitor"
"RTN","VBECSRV",31,0)
 D ^XMD
"RTN","VBECSRV",32,0)
 ;Send a message to the designated mail group if the server is triggered with
"RTN","VBECSRV",33,0)
 ;an invalid command.  This lets the users know that they either made
"RTN","VBECSRV",34,0)
 ;a typo, or that someone is attempting to improperly invoke the server.
"RTN","VBECSRV",35,0)
EXIT K %DT,XMTEXT,XMSUB,VBECSITE,VBECNOW,XMY,^TMP($J,"VBECDATA")
"RTN","VBECSRV",36,0)
 Q
"RTN","VBECSRV",37,0)
REPORT ;report on invalid checksums at a site.
"RTN","VBECSRV",38,0)
 S VBECSITE=$P($$SITE^VASITE,U,2),VBECSIT1=$P($$SITE^VASITE,U,1)
"RTN","VBECSRV",39,0)
 S X=$T(+0) X ^%ZOSF("RSUM1") S ^TMP("VBECINTEG",$J,2,0)="VBECSRV at "_VBECSITE_" = "_Y,^TMP("VBECINTEG1",$J,3,0)="**VBECSRV^"_Y_"^^"_VBECSIT1_"^"_DT
"RTN","VBECSRV",40,0)
 S VBA=0,VBI=4 F  S VBA=$O(^VBEC(6002.04,VBA)) Q:'VBA  S VBDATA=$G(^VBEC(6002.04,VBA,0)) D
"RTN","VBECSRV",41,0)
  . S X=$P(VBDATA,"^") X ^%ZOSF("TEST") I '$T S ^TMP("VBECINTEG",$J,VBI,0)=X_" is missing.",VBI=VBI+1,^TMP("VBECINTEG1",$J,VBI,0)="**"_X_"^"_$P(VBDATA,"^",2)_"^0^"_DT,VBI=VBI+1 Q
"RTN","VBECSRV",42,0)
  . X ^%ZOSF("RSUM1") I $P(VBDATA,"^",2)'=Y S ^TMP("VBECINTEG",$J,VBI,0)=X_" should be "_$P(VBDATA,"^",2)_" is "_Y,VBI=VBI+1
"RTN","VBECSRV",43,0)
  . S ^TMP("VBECINTEG1",$J,VBI,0)="**"_X_"^"_$P(VBDATA,"^",2)_"^"_Y_"^"_VBECSIT1_"^"_DT_"^"_(Y'=$P(VBDATA,"^",2)),VBI=VBI+1
"RTN","VBECSRV",44,0)
 K XMY S XMY("G.bloodbank@FO-HINES.MED.VA.GOV")="" ;,XMY("S.VBECINTEG@FO-HINES.MED.VA.GOV")=""
"RTN","VBECSRV",45,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",46,0)
 S XMSUB="BB CHECKSUM "_XQSUB_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",47,0)
 F I="",1 S XMTEXT="^TMP(""VBECINTEG"_I_""",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",48,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",49,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",50,0)
 Q
"RTN","VBECSRV",51,0)
UPDATE ;Update checksums at a site.
"RTN","VBECSRV",52,0)
 S VBI=2
"RTN","VBECSRV",53,0)
 F  X XMREC Q:XMER<0  S VBDEL=$S($P(XMRG,"^")?1"-".E:1,1:0),VBROU=$TR($P(XMRG,"^"),"-",""),VBCHK=$P(XMRG,"^",2) D
"RTN","VBECSRV",54,0)
  . S VBECON=$$FIND1^DIC(6002.04,,"X",VBROU,,.ERROR)
"RTN","VBECSRV",55,0)
  . I VBDEL S DA=VBECON,DIK="^VBEC(6002.04," D ^DIK S ^TMP("VBECINTEG",$J,VBI,0)="Routine "_VBROU_" deleted at "_VBECSITE,VBI=VBI+1 Q
"RTN","VBECSRV",56,0)
  . S VBECIEN=$S(VBECON:VBECON_",",1:"+1,")
"RTN","VBECSRV",57,0)
  . S FDA(1,6002.04,VBECIEN,.01)=VBROU
"RTN","VBECSRV",58,0)
  . S FDA(1,6002.04,VBECIEN,1)=VBCHK
"RTN","VBECSRV",59,0)
  . I 'VBECON D UPDATE^DIE("","FDA(1)",,"VBERR")
"RTN","VBECSRV",60,0)
  . I VBECON D FILE^DIE("E","FDA(1)","VBERR")
"RTN","VBECSRV",61,0)
  . S ^TMP("VBECINTEG",$J,VBI,0)="Routine "_VBROU_$S(VBECON:" updated to ",1:" added with ")_"checksum "_VBCHK,VBI=VBI+1
"RTN","VBECSRV",62,0)
 K XMY S XMY("G.bloodbank@FO-HINES.MED.VA.GOV")=""
"RTN","VBECSRV",63,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",64,0)
 S XMSUB="BB Checksum update at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",65,0)
 S XMTEXT="^TMP(""VBECINTEG"",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",66,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",67,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",68,0)
 Q
"RTN","VBECSRV",69,0)
LIST ;
"RTN","VBECSRV",70,0)
 S VBA=0,VBI=2  F  S VBA=$O(^VBEC(6002.04,VBA)) Q:'VBA  D
"RTN","VBECSRV",71,0)
  . S VBDATA=$G(^VBEC(6002.04,VBA,0)),VBROU=$P(VBDATA,"^"),VBCHK=$P(VBDATA,"^",2)
"RTN","VBECSRV",72,0)
  . I VBDATA="" S ^TMP("VBECINTEG",$J,VBI,0)="Record "_VBA_" damaged." Q
"RTN","VBECSRV",73,0)
  . S ^TMP("VBECINTEG",$J,VBI,0)=VBECSIT1_$E("          ",1,(10-$L(VBECSIT1)))_VBROU_$E("          ",1,(10-$L(VBROU)))_VBCHK,VBI=VBI+1
"RTN","VBECSRV",74,0)
 K XMY S XMY("G.bloodbank@FO-HINES.MED.VA.GOV")=""
"RTN","VBECSRV",75,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",76,0)
 S XMSUB="BB CHECKSUM "_XQSUB_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",77,0)
 S XMTEXT="^TMP(""VBECINTEG"",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",78,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",79,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",80,0)
 Q
"RTN","VBECSRV",81,0)
PATCH ;Determine Vista patch level. Expand later to include VBECS
"RTN","VBECSRV",82,0)
 f VBECI=1:1:9999 s VBECA=$$PATCH^XPDUTL("VBEC*1.0*"_VBECI) i VBECA s ^TMP("VBEC",$J,(VBECI+5),0)="Patch VBEC*1.0*"_VBECI_" has been installed."
"RTN","VBECSRV",83,0)
 K XMY S XMY("G.bloodbank@FO-HINES.MED.VA.GOV")=""
"RTN","VBECSRV",84,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",85,0)
 S XMSUB="VBEC Patch List at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",86,0)
 S XMTEXT="^TMP(""VBEC"",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",87,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",88,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",89,0)
ZEOR ;VBECSRV
"VER")
8.0^22.0
"^DD",6000,6000,1,0)
WORKLOAD RUN DATE^F^^WKLD;1^K:$L(X)>10!($L(X)<1) X
"^DD",6000,6000,1,3)
Answer must be 1-10 characters in length.
"^DD",6000,6000,1,21,0)
^^4^4^3100526^
"^DD",6000,6000,1,21,1,0)
This field hold the last run date for the workload extraction from VBECS. 
"^DD",6000,6000,1,21,2,0)
The data in this field is the $H date and will be compared to the current 
"^DD",6000,6000,1,21,3,0)
$H date when deciding whether or not to allow the extraction to run. Only 
"^DD",6000,6000,1,21,4,0)
one run is allowed per day.
"^DD",6000,6000,1,"DT")
3100526
"^DD",6002.04,6002.04,0)
FIELD^^1^2
"^DD",6002.04,6002.04,0,"DDA")
N
"^DD",6002.04,6002.04,0,"DT")
3061212
"^DD",6002.04,6002.04,0,"IX","B",6002.04,.01)

"^DD",6002.04,6002.04,0,"NM","VBEC INTEGRITY")

"^DD",6002.04,6002.04,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",6002.04,6002.04,.01,1,0)
^.1
"^DD",6002.04,6002.04,.01,1,1,0)
6002.04^B
"^DD",6002.04,6002.04,.01,1,1,1)
S ^VBEC(6002.04,"B",$E(X,1,30),DA)=""
"^DD",6002.04,6002.04,.01,1,1,2)
K ^VBEC(6002.04,"B",$E(X,1,30),DA)
"^DD",6002.04,6002.04,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation.
"^DD",6002.04,6002.04,.01,21,0)
^^2^2^3100526^^
"^DD",6002.04,6002.04,.01,21,1,0)
This is the name of the routine being monitored by the Blood Bank team to 
"^DD",6002.04,6002.04,.01,21,2,0)
ensure FDA compliance.
"^DD",6002.04,6002.04,.01,"DT")
3100526
"^DD",6002.04,6002.04,1,0)
CHECKSUM^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",6002.04,6002.04,1,3)
Answer must be 1-20 characters in length.
"^DD",6002.04,6002.04,1,21,0)
^^2^2^3100526^
"^DD",6002.04,6002.04,1,21,1,0)
This is the checksum for the routine listed in field .01. These checksums
"^DD",6002.04,6002.04,1,21,2,0)
were calculated using ^%ZOSF("RSUM").
"^DD",6002.04,6002.04,1,"DT")
3100526
"^DIC",6002.04,6002.04,0)
VBEC INTEGRITY^6002.04
"^DIC",6002.04,6002.04,0,"GL")
^VBEC(6002.04,
"^DIC",6002.04,6002.04,"%",0)
^1.005^^
"^DIC",6002.04,6002.04,"%D",0)
^^3^3^3100526^
"^DIC",6002.04,6002.04,"%D",1,0)
This file will support the quarterly integrity checks required by the 
"^DIC",6002.04,6002.04,"%D",2,0)
FDA. It will hold the routine names and the checksums for the routines to 
"^DIC",6002.04,6002.04,"%D",3,0)
be monitored by the Blood Bank team.
"^DIC",6002.04,"B","VBEC INTEGRITY",6002.04)

**END**
**END**
