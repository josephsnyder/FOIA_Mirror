Released ROR*1.5*8 SEQ #8
Extracted from mail message
**KIDS**:ROR*1.5*8^

**INSTALL NAME**
ROR*1.5*8
"BLD",7567,0)
ROR*1.5*8^CLINICAL CASE REGISTRIES^0^3090608^y
"BLD",7567,1,0)
^^2^2^3090515^^
"BLD",7567,1,1,0)
Clinical Case Registries patch ROR*1.5*8.  See Patch Description for 
"BLD",7567,1,2,0)
details.
"BLD",7567,4,0)
^9.64PA^798^2
"BLD",7567,4,798,0)
798
"BLD",7567,4,798,222)
y^y^f^^^^n
"BLD",7567,4,799.34,0)
799.34
"BLD",7567,4,799.34,222)
n^n^f^^y^^y^r^n
"BLD",7567,4,"B",798,798)

"BLD",7567,4,"B",799.34,799.34)

"BLD",7567,6.3)
8
"BLD",7567,"ABNS",0)
^9.66A^1^1
"BLD",7567,"ABNS",1,0)
ROR
"BLD",7567,"ABNS",1,1,0)
^9.661A^^
"BLD",7567,"ABNS","B","ROR",1)

"BLD",7567,"ABPKG")
n^n
"BLD",7567,"INID")
n^n^n
"BLD",7567,"KRN",0)
^9.67PA^779.2^20
"BLD",7567,"KRN",.4,0)
.4
"BLD",7567,"KRN",.401,0)
.401
"BLD",7567,"KRN",.402,0)
.402
"BLD",7567,"KRN",.403,0)
.403
"BLD",7567,"KRN",.5,0)
.5
"BLD",7567,"KRN",.84,0)
.84
"BLD",7567,"KRN",3.6,0)
3.6
"BLD",7567,"KRN",3.8,0)
3.8
"BLD",7567,"KRN",9.2,0)
9.2
"BLD",7567,"KRN",9.8,0)
9.8
"BLD",7567,"KRN",9.8,"NM",0)
^9.68A^25^24
"BLD",7567,"KRN",9.8,"NM",1,0)
RORRP017^^0^B27131562
"BLD",7567,"KRN",9.8,"NM",2,0)
RORRP020^^0^B29770622
"BLD",7567,"KRN",9.8,"NM",3,0)
RORRP034^^0^B16836450
"BLD",7567,"KRN",9.8,"NM",4,0)
RORRP037^^0^B15161292
"BLD",7567,"KRN",9.8,"NM",5,0)
RORTSK13^^0^B47863947
"BLD",7567,"KRN",9.8,"NM",6,0)
RORX001^^0^B34927586
"BLD",7567,"KRN",9.8,"NM",7,0)
RORX002^^0^B23097652
"BLD",7567,"KRN",9.8,"NM",8,0)
RORX003^^0^B26330182
"BLD",7567,"KRN",9.8,"NM",9,0)
RORX004^^0^B17581672
"BLD",7567,"KRN",9.8,"NM",10,0)
RORX005A^^0^B34579924
"BLD",7567,"KRN",9.8,"NM",11,0)
RORX006A^^0^B23504467
"BLD",7567,"KRN",9.8,"NM",12,0)
RORX007A^^0^B14789636
"BLD",7567,"KRN",9.8,"NM",13,0)
RORX008A^^0^B31066416
"BLD",7567,"KRN",9.8,"NM",14,0)
RORX009A^^0^B67206272
"BLD",7567,"KRN",9.8,"NM",15,0)
RORX010^^0^B47994129
"BLD",7567,"KRN",9.8,"NM",16,0)
RORX011^^0^B62423011
"BLD",7567,"KRN",9.8,"NM",18,0)
RORX014A^^0^B31289294
"BLD",7567,"KRN",9.8,"NM",19,0)
RORX015A^^0^B71344884
"BLD",7567,"KRN",9.8,"NM",20,0)
RORX016A^^0^B11587383
"BLD",7567,"KRN",9.8,"NM",21,0)
RORXU009^^0^B3569628
"BLD",7567,"KRN",9.8,"NM",22,0)
RORX012^^0^B17404871
"BLD",7567,"KRN",9.8,"NM",23,0)
RORX012A^^0^B73606888
"BLD",7567,"KRN",9.8,"NM",24,0)
RORXU010^^0^B9497434
"BLD",7567,"KRN",9.8,"NM",25,0)
RORXU001^^0^B13481235
"BLD",7567,"KRN",9.8,"NM","B","RORRP017",1)

"BLD",7567,"KRN",9.8,"NM","B","RORRP020",2)

"BLD",7567,"KRN",9.8,"NM","B","RORRP034",3)

"BLD",7567,"KRN",9.8,"NM","B","RORRP037",4)

"BLD",7567,"KRN",9.8,"NM","B","RORTSK13",5)

"BLD",7567,"KRN",9.8,"NM","B","RORX001",6)

"BLD",7567,"KRN",9.8,"NM","B","RORX002",7)

"BLD",7567,"KRN",9.8,"NM","B","RORX003",8)

"BLD",7567,"KRN",9.8,"NM","B","RORX004",9)

"BLD",7567,"KRN",9.8,"NM","B","RORX005A",10)

"BLD",7567,"KRN",9.8,"NM","B","RORX006A",11)

"BLD",7567,"KRN",9.8,"NM","B","RORX007A",12)

"BLD",7567,"KRN",9.8,"NM","B","RORX008A",13)

"BLD",7567,"KRN",9.8,"NM","B","RORX009A",14)

"BLD",7567,"KRN",9.8,"NM","B","RORX010",15)

"BLD",7567,"KRN",9.8,"NM","B","RORX011",16)

"BLD",7567,"KRN",9.8,"NM","B","RORX012",22)

"BLD",7567,"KRN",9.8,"NM","B","RORX012A",23)

"BLD",7567,"KRN",9.8,"NM","B","RORX014A",18)

"BLD",7567,"KRN",9.8,"NM","B","RORX015A",19)

"BLD",7567,"KRN",9.8,"NM","B","RORX016A",20)

"BLD",7567,"KRN",9.8,"NM","B","RORXU001",25)

"BLD",7567,"KRN",9.8,"NM","B","RORXU009",21)

"BLD",7567,"KRN",9.8,"NM","B","RORXU010",24)

"BLD",7567,"KRN",19,0)
19
"BLD",7567,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",7567,"KRN",19,"NM",1,0)
ROR GUI^^0
"BLD",7567,"KRN",19,"NM","B","ROR GUI",1)

"BLD",7567,"KRN",19.1,0)
19.1
"BLD",7567,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",7567,"KRN",101,0)
101
"BLD",7567,"KRN",409.61,0)
409.61
"BLD",7567,"KRN",771,0)
771
"BLD",7567,"KRN",779.2,0)
779.2
"BLD",7567,"KRN",870,0)
870
"BLD",7567,"KRN",8989.51,0)
8989.51
"BLD",7567,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",7567,"KRN",8989.51,"NM",1,0)
ROR GUI PARAMETER^^0
"BLD",7567,"KRN",8989.51,"NM","B","ROR GUI PARAMETER",1)

"BLD",7567,"KRN",8989.52,0)
8989.52
"BLD",7567,"KRN",8994,0)
8994
"BLD",7567,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",7567,"KRN",8994,"NM",1,0)
ROR LIST REGISTRY DRUGS^^0
"BLD",7567,"KRN",8994,"NM",2,0)
ROR LIST INVESTIGATIONAL DRUGS^^0
"BLD",7567,"KRN",8994,"NM","B","ROR LIST INVESTIGATIONAL DRUGS",2)

"BLD",7567,"KRN",8994,"NM","B","ROR LIST REGISTRY DRUGS",1)

"BLD",7567,"KRN","B",.4,.4)

"BLD",7567,"KRN","B",.401,.401)

"BLD",7567,"KRN","B",.402,.402)

"BLD",7567,"KRN","B",.403,.403)

"BLD",7567,"KRN","B",.5,.5)

"BLD",7567,"KRN","B",.84,.84)

"BLD",7567,"KRN","B",3.6,3.6)

"BLD",7567,"KRN","B",3.8,3.8)

"BLD",7567,"KRN","B",9.2,9.2)

"BLD",7567,"KRN","B",9.8,9.8)

"BLD",7567,"KRN","B",19,19)

"BLD",7567,"KRN","B",19.1,19.1)

"BLD",7567,"KRN","B",101,101)

"BLD",7567,"KRN","B",409.61,409.61)

"BLD",7567,"KRN","B",771,771)

"BLD",7567,"KRN","B",779.2,779.2)

"BLD",7567,"KRN","B",870,870)

"BLD",7567,"KRN","B",8989.51,8989.51)

"BLD",7567,"KRN","B",8989.52,8989.52)

"BLD",7567,"KRN","B",8994,8994)

"BLD",7567,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7567,"QUES",0)
^9.62^^
"BLD",7567,"REQB",0)
^9.611^6^6
"BLD",7567,"REQB",1,0)
ROR*1.5*2^2
"BLD",7567,"REQB",2,0)
ROR*1.5*3^2
"BLD",7567,"REQB",3,0)
ROR*1.5*4^2
"BLD",7567,"REQB",4,0)
ROR*1.5*5^2
"BLD",7567,"REQB",5,0)
ROR*1.5*6^2
"BLD",7567,"REQB",6,0)
ROR*1.5*7^2
"BLD",7567,"REQB","B","ROR*1.5*2",1)

"BLD",7567,"REQB","B","ROR*1.5*3",2)

"BLD",7567,"REQB","B","ROR*1.5*4",3)

"BLD",7567,"REQB","B","ROR*1.5*5",4)

"BLD",7567,"REQB","B","ROR*1.5*6",5)

"BLD",7567,"REQB","B","ROR*1.5*7",6)

"DATA",799.34,1,0)
List of Registry Patients^1^1^1^^^^^1
"DATA",799.34,1,1)
14,20,32,180,70,100
"DATA",799.34,1,10.01)
$$REGPTLST^RORX001
"DATA",799.34,1,11,0)
^799.3411^1^1^3090310^^^^
"DATA",799.34,1,11,1,0)
<PATIENTS CONFIRMED="1"/>
"DATA",799.34,1,12,0)
^799.3412^1^1^3090310^^^^
"DATA",799.34,1,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,2,0)
Current Inpatient List^1^1^2^^^^^1
"DATA",799.34,2,1)
14,180,70,100
"DATA",799.34,2,10.01)
$$INPTLST^RORX002
"DATA",799.34,2,12,0)
^799.3412^1^1^3051012^^^
"DATA",799.34,2,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,3,0)
General Utilization and Demographics^1^1^3^^^^^1
"DATA",799.34,3,1)
10,14,22,62,35,30,180,70,100
"DATA",799.34,3,10.01)
$$UTLDMG^RORX003
"DATA",799.34,3,11,0)
^799.3411^3^3^3090310^^^
"DATA",799.34,3,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,3,11,2,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,3,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,3,12,0)
^799.3412^1^1^3090310^^^^
"DATA",799.34,3,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,4,0)
Clinic Follow Up^1^1^4^^^^^1
"DATA",799.34,4,1)
10,14,22,60,66,50,180,70,100
"DATA",799.34,4,10.01)
$$CLNFLWUP^RORX004
"DATA",799.34,4,11,0)
^799.3411^3^3^3090408^^^^
"DATA",799.34,4,11,1,0)
<CLINICS ALL="1"/>
"DATA",799.34,4,11,2,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,4,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" SEEN="1"/>
"DATA",799.34,4,12,0)
^799.3412^1^1^3090408^^^^
"DATA",799.34,4,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,5,0)
Inpatient Utilization^1^1^5^^^^^1
"DATA",799.34,5,1)
10,14,22,170,110,46,34,180,70,100
"DATA",799.34,5,10.01)
$$IPUTL^RORX005
"DATA",799.34,5,11,0)
^799.3411^4^4^3090310^^^^
"DATA",799.34,5,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,5,11,2,0)
<DIVISIONS ALL="1"/>
"DATA",799.34,5,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,5,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,5,12,0)
^799.3412^5^5^3090310^^^
"DATA",799.34,5,12,1,0)
<SM TABLE="BEDSECTION" FIELD="NAME"/>
"DATA",799.34,5,12,2,0)
<SM TABLE="HU_DAYS" FIELD="ND:DESC"/>
"DATA",799.34,5,12,3,0)
<SM TABLE="HU_STAYS" FIELD="NST:DESC"/>
"DATA",799.34,5,12,4,0)
<SM TABLE="NOBS" FIELD="NAME"/>
"DATA",799.34,5,12,5,0)
<SM TABLE="STAYS" FIELD="NST:DESC"/>
"DATA",799.34,6,0)
Lab Utilization^1^1^6^^^^^1
"DATA",799.34,6,1)
10,14,22,110,120,52,180,70,100
"DATA",799.34,6,10.01)
$$LABUTL^RORX006
"DATA",799.34,6,11,0)
^799.3411^5^5^3090310^^^
"DATA",799.34,6,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,6,11,2,0)
<LABTESTS ALL="1"/>
"DATA",799.34,6,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,6,11,4,0)
<MINRPNUM>1</MINRPNUM>
"DATA",799.34,6,11,5,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,6,12,0)
^799.3412^3^3^3090310^^^^
"DATA",799.34,6,12,1,0)
<SM TABLE="LABTESTS" FIELD="NAME"/>
"DATA",799.34,6,12,2,0)
<SM TABLE="PATIENTS" FIELD="NR:DESC"/>
"DATA",799.34,6,12,3,0)
<SM TABLE="RESULTS" FIELD="NR:DESC"/>
"DATA",799.34,7,0)
Radiology Utilization^1^1^7^^^^^1
"DATA",799.34,7,1)
10,14,22,110,120,180,70,100
"DATA",799.34,7,10.01)
$$RADUTL^RORX007
"DATA",799.34,7,11,0)
^799.3411^4^4^3090310^^^
"DATA",799.34,7,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,7,11,2,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,7,11,3,0)
<MINRPNUM>1</MINRPNUM>
"DATA",799.34,7,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,7,12,0)
^799.3412^2^2^3090310^^^^
"DATA",799.34,7,12,1,0)
<SM TABLE="PATIENTS" FIELD="TOTAL:DESC"/>
"DATA",799.34,7,12,2,0)
<SM TABLE="PROCEDURES" FIELD="NAME"/>
"DATA",799.34,9,0)
Pharmacy Prescription Utilization^1^1^9^^^^^1
"DATA",799.34,9,1)
10,14,22,170,26,110,46,54,44,90,180,70,100
"DATA",799.34,9,10.01)
$$RXUTIL^RORX009
"DATA",799.34,9,11,0)
^799.3411^4^4^3090310^^
"DATA",799.34,9,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,9,11,2,0)
<DRUGS AGGR_GENERIC="1" ALL="1"/>
"DATA",799.34,9,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,9,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,9,12,0)
^799.3412^3^3^3090310^^
"DATA",799.34,9,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,9,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,9,12,3,0)
<SM TABLE="HU_NRX" FIELD="NAME"/>
"DATA",799.34,10,0)
Registry Lab Tests by Range^1^^10^^^^^1
"DATA",799.34,10,1)
10,14,22,47,180,70,100
"DATA",799.34,10,10.01)
$$LRGRANGE^RORX010
"DATA",799.34,10,11,0)
^799.3411^2^2^3090310^^
"DATA",799.34,10,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,10,11,2,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,10,12,0)
^799.3412^2^2^3090310^^^^
"DATA",799.34,10,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,10,12,2,0)
<SM TABLE="PTLRL" FIELD="GROUP"/>
"DATA",799.34,11,0)
Patient Medication History^1^1^11^^^^^1
"DATA",799.34,11,1)
10,14,170,26,140,54,180,70,100
"DATA",799.34,11,10.01)
$$RXHIST^RORX011
"DATA",799.34,11,11,0)
^799.3411^3^3^3090310^^^^
"DATA",799.34,11,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,11,11,2,0)
<DRUGS ALL="1"/>
"DATA",799.34,11,11,3,0)
<PATIENTS INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,11,12,0)
^799.3412^1^1^3090310^^^
"DATA",799.34,11,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,12,0)
Combined Meds and Labs^1^1^12^^^^^1
"DATA",799.34,12,1)
14,22,64,66,10,54,44,11,53,12,180,70,100
"DATA",799.34,12,10.01)
$$RXANDLAB^RORX012
"DATA",799.34,12,11,0)
^799.3411^5^5^3090310^^^^
"DATA",799.34,12,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,12,11,2,0)
<DATE_RANGE_2 TYPE="YEAR"/>
"DATA",799.34,12,11,3,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,12,11,4,0)
<DRUGS AGGR_GENERIC="1" ALL="1"/>
"DATA",799.34,12,11,5,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,12,12,0)
^799.3412^3^3^3090310^^^^
"DATA",799.34,12,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,12,12,2,0)
<SM TABLE="LABTESTS" FIELD="NAME"/>
"DATA",799.34,12,12,3,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,13,0)
Diagnoses^1^1^13^^^^^1
"DATA",799.34,13,1)
10,14,22,62,160,70,100
"DATA",799.34,13,10.01)
$$ICD9LST^RORX013
"DATA",799.34,13,11,0)
^799.3411^4^4^3051004^^
"DATA",799.34,13,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,13,11,2,0)
<ICD9LST ALL="1"/>
"DATA",799.34,13,11,3,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,13,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,13,12,0)
^799.3412^3^3^3051012^^
"DATA",799.34,13,12,1,0)
<SM TABLE="ICD9LST" FIELD="CODE"/>
"DATA",799.34,13,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,13,12,3,0)
<SM TABLE="PTICDL" FIELD="CODE"/>
"DATA",799.34,14,0)
Registry Medications^1^1^14^^^^^1
"DATA",799.34,14,1)
10,14,22,170,26,62,84,56,180,70,100
"DATA",799.34,14,10.01)
$$RXCOMB^RORX014
"DATA",799.34,14,11,0)
^799.3411^3^3^3090310^^^^
"DATA",799.34,14,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,14,11,2,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,14,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,14,12,0)
^799.3412^3^3^3090310^^^^
"DATA",799.34,14,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,14,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,14,12,3,0)
<SM TABLE="RXCOMBLST" FIELD="NP:DESC"/>
"DATA",799.34,15,0)
Procedures^1^1^15^^^^^1
"DATA",799.34,15,1)
10,14,22,150,65,66,62,160,59,12,180,70,100
"DATA",799.34,15,10.01)
$$PROCLST^RORX015
"DATA",799.34,15,11,0)
^799.3411^6^6^3090310^^^^
"DATA",799.34,15,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,15,11,2,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,15,11,3,0)
<CPTLST ALL="1"/>
"DATA",799.34,15,11,4,0)
<ICD9LST ALL="1"/>
"DATA",799.34,15,11,5,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,15,11,6,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" PROC="1" INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,15,12,0)
^799.3412^3^3^3090310^^^^
"DATA",799.34,15,12,1,0)
<SM TABLE="PROCLST" FIELD="PROCODE"/>
"DATA",799.34,15,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,15,12,3,0)
<SM TABLE="PROCEDURES" FIELD="NAME"/>
"DATA",799.34,16,0)
Outpatient Utilization^1^1^16^^^^^1
"DATA",799.34,16,1)
10,14,22,170,110,46,34,180,70,100
"DATA",799.34,16,10.01)
$$OPUTL^RORX016
"DATA",799.34,16,11,0)
^799.3411^4^4^3090310^^^^
"DATA",799.34,16,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,16,11,2,0)
<DIVISIONS ALL="1"/>
"DATA",799.34,16,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,16,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,16,12,0)
^799.3412^3^3^3090310^^^
"DATA",799.34,16,12,1,0)
<SM TABLE="CLINICS" FIELD="STOP"/>
"DATA",799.34,16,12,2,0)
<SM TABLE="HU_STOPS" FIELD="NSC:DESC"/>
"DATA",799.34,16,12,3,0)
<SM TABLE="STOPS" FIELD="NSC:DESC"/>
"DATA",799.34,17,0)
VERA Reimbursement Report^1^^8^^^^^1
"DATA",799.34,17,1)
10,14,22,24,28,84,56,180,70,100
"DATA",799.34,17,10.01)
$$ARVREIMB^RORX008
"DATA",799.34,17,11,0)
^799.3411^3^3^3090310^^^^
"DATA",799.34,17,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,17,11,2,0)
<DRUGS INVESTIG="1"/>
"DATA",799.34,17,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,17,12,0)
^799.3412^2^2^3090310^^^^
"DATA",799.34,17,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,17,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"FIA",798)
ROR REGISTRY RECORD
"FIA",798,0)
^RORDATA(798,
"FIA",798,0,0)
798PAs
"FIA",798,0,1)
y^y^f^^^^n
"FIA",798,0,10)

"FIA",798,0,11)

"FIA",798,0,"RLRO")

"FIA",798,0,"VR")
1.5^ROR
"FIA",798,798)
0
"FIA",798,798.01)
0
"FIA",798,798.02)
0
"FIA",799.34)
ROR REPORT PARAMETERS
"FIA",799.34,0)
^ROR(799.34,
"FIA",799.34,0,0)
799.34I
"FIA",799.34,0,1)
n^n^f^^y^^y^r^n
"FIA",799.34,0,10)

"FIA",799.34,0,11)

"FIA",799.34,0,"RLRO")

"FIA",799.34,0,"VR")
1.5^ROR
"FIA",799.34,799.34)
0
"FIA",799.34,799.3411)
0
"FIA",799.34,799.3412)
0
"IX",798,798,"ADELETE",0)
798^ADELETE^Deletes the data associated with the registry record^MU^^F^^I^798^^^^^A
"IX",798,798,"ADELETE",.1,0)
^^10^10^3060105^
"IX",798,798,"ADELETE",.1,1,0)
The "ADELETE" cross-reference is used to delete 
"IX",798,798,"ADELETE",.1,2,0)
the records of other files associated with the 
"IX",798,798,"ADELETE",.1,3,0)
main registry record being deleted from the ROR
"IX",798,798,"ADELETE",.1,4,0)
REGISTRY RECORD file (#798).
"IX",798,798,"ADELETE",.1,5,0)
 
"IX",798,798,"ADELETE",.1,6,0)
The cross-reference logic calls the DEL798^RORDD01
"IX",798,798,"ADELETE",.1,7,0)
procedure, which tries to delete the corresponding
"IX",798,798,"ADELETE",.1,8,0)
records from the ROR HIV RECORD (#799.4), ROR
"IX",798,798,"ADELETE",.1,9,0)
PATIENT (#798.4) and ROR PATIENT EVENTS (#798.3)
"IX",798,798,"ADELETE",.1,10,0)
files.
"IX",798,798,"ADELETE",1)
Q
"IX",798,798,"ADELETE",2)
D DEL798^RORDD01(DA,X1(1))
"IX",798,798,"ADELETE",2.4)
S X=($G(X2(1))="")
"IX",798,798,"ADELETE",11.1,0)
^.114IA^1^1
"IX",798,798,"ADELETE",11.1,1,0)
1^F^798^.01^^^F
"IX",798,798,"ADEM",0)
798^ADEM^Sets the date of last demographic update^MU^^F^^I^798^^^^^A
"IX",798,798,"ADEM",1)
D FILE^RORDD01(798,DA_",",4.1,$$NOW^XLFDT)
"IX",798,798,"ADEM",1.4)
S X=(X2(1)>0)
"IX",798,798,"ADEM",2)
Q
"IX",798,798,"ADEM",11.1,0)
^.114IA^1^1
"IX",798,798,"ADEM",11.1,1,0)
1^F^798^4^^^
"IX",798,798,"ALOC",0)
798^ALOC^Sets the date of last local data modification^MU^^F^^I^798^^^^^A
"IX",798,798,"ALOC",1)
D FILE^RORDD01(798,DA_",",5.1,$$NOW^XLFDT)
"IX",798,798,"ALOC",1.4)
S X=(X2(1)>0)
"IX",798,798,"ALOC",2)
Q
"IX",798,798,"ALOC",11.1,0)
^.114IA^1^1
"IX",798,798,"ALOC",11.1,1,0)
1^F^798^5^^^
"IX",798,798,"ARCP",0)
798^ARCP^Registry, Date Confirmed, Patient^R^^R^IR^I^798^^^^^S
"IX",798,798,"ARCP",.1,0)
^^15^15^3060203^
"IX",798,798,"ARCP",.1,1,0)
This index sorts registry patients by their 
"IX",798,798,"ARCP",.1,2,0)
confirmation dates. It has the following
"IX",798,798,"ARCP",.1,3,0)
structure: 
"IX",798,798,"ARCP",.1,4,0)
                     
"IX",798,798,"ARCP",.1,5,0)
  ^RORDATA(798,"ARCP",<Registry>,
"IX",798,798,"ARCP",.1,6,0)
    <Date Confirmed>,<Patient>,IEN) = ""
"IX",798,798,"ARCP",.1,7,0)
                     
"IX",798,798,"ARCP",.1,8,0)
The <Registry> is the registry IEN (IEN of the
"IX",798,798,"ARCP",.1,9,0)
registry parameters record in the ROR REGISTRY
"IX",798,798,"ARCP",.1,10,0)
PARAMETERS file) concatenated with the "#" so that
"IX",798,798,"ARCP",.1,11,0)
the LIST^DIC can be used to retrieve the records
"IX",798,798,"ARCP",.1,12,0)
associated with the specified registry.
"IX",798,798,"ARCP",.1,13,0)
                     
"IX",798,798,"ARCP",.1,14,0)
The <Patient> is the IEN of the patient's record
"IX",798,798,"ARCP",.1,15,0)
in the ROR PATIENT file (#798.4).
"IX",798,798,"ARCP",1)
S ^RORDATA(798,"ARCP",X(2),X(3),X(4),DA)=""
"IX",798,798,"ARCP",2)
K ^RORDATA(798,"ARCP",X(2),X(3),X(4),DA)
"IX",798,798,"ARCP",2.5)
K ^RORDATA(798,"ARCP")
"IX",798,798,"ARCP",11.1,0)
^.114IA^4^4
"IX",798,798,"ARCP",11.1,1,0)
1^F^798^.02^^^F
"IX",798,798,"ARCP",11.1,2,0)
2^C^^^^1
"IX",798,798,"ARCP",11.1,2,1.5)
S X=$S(X(1)'="":X(1)_"#",1:"")
"IX",798,798,"ARCP",11.1,3,0)
3^F^798^2^^2^F
"IX",798,798,"ARCP",11.1,4,0)
4^F^798^.01^^3^F
"IX",798,798,"ARD",0)
798^ARD^Registry & Date Entered^R^^R^IR^I^798^^^^^S
"IX",798,798,"ARD",.1,0)
^^2^2^3030714^
"IX",798,798,"ARD",.1,1,0)
This cross-reference can be used to search for
"IX",798,798,"ARD",.1,2,0)
recently added patients.
"IX",798,798,"ARD",1)
S ^RORDATA(798,"ARD",X(2),X(3),DA)=""
"IX",798,798,"ARD",2)
K ^RORDATA(798,"ARD",X(2),X(3),DA)
"IX",798,798,"ARD",2.5)
K ^RORDATA(798,"ARD")
"IX",798,798,"ARD",11.1,0)
^.114IA^4^3
"IX",798,798,"ARD",11.1,1,0)
1^F^798^.02^^^F
"IX",798,798,"ARD",11.1,1,4)

"IX",798,798,"ARD",11.1,3,0)
3^F^798^1^^2^F
"IX",798,798,"ARD",11.1,4,0)
2^C^^^^1
"IX",798,798,"ARD",11.1,4,1.5)
S X=$S(X(1)'="":X(1)_"#",1:"")
"IX",798,798,"ARP",0)
798^ARP^Registry & Patient^R^^R^IR^I^798^^^^^S
"IX",798,798,"ARP",.1,0)
^^13^13^3060203^
"IX",798,798,"ARP",.1,1,0)
This cross-reference lists the registry patients. 
"IX",798,798,"ARP",.1,2,0)
It has the following structure:
"IX",798,798,"ARP",.1,3,0)
 
"IX",798,798,"ARP",.1,4,0)
 ^RORDATA(798,"ARP",<Registry>,<Patient>,IEN)
"IX",798,798,"ARP",.1,5,0)
 
"IX",798,798,"ARP",.1,6,0)
The <Registry> is the registry IEN (IEN of the 
"IX",798,798,"ARP",.1,7,0)
registry parameters record in the ROR REGISTRY
"IX",798,798,"ARP",.1,8,0)
PARAMETERS file) concatenated with the "#" so that
"IX",798,798,"ARP",.1,9,0)
the LIST^DIC can be used to retrieve the records
"IX",798,798,"ARP",.1,10,0)
associated with the specified registry.
"IX",798,798,"ARP",.1,11,0)
 
"IX",798,798,"ARP",.1,12,0)
The <Patient> is the IEN of the patient's record 
"IX",798,798,"ARP",.1,13,0)
in the ROR PATIENT file.
"IX",798,798,"ARP",1)
S ^RORDATA(798,"ARP",X(2),X(3),DA)=""
"IX",798,798,"ARP",1.4)

"IX",798,798,"ARP",2)
K ^RORDATA(798,"ARP",X(2),X(3),DA)
"IX",798,798,"ARP",2.5)
K ^RORDATA(798,"ARP")
"IX",798,798,"ARP",11.1,0)
^.114IA^4^3
"IX",798,798,"ARP",11.1,1,0)
1^F^798^.02^^^
"IX",798,798,"ARP",11.1,3,0)
2^C^^^^1^F
"IX",798,798,"ARP",11.1,3,1.5)
S X=$S(X(1)'="":X(1)_"#",1:"")
"IX",798,798,"ARP",11.1,4,0)
3^F^798^.01^^2^F
"IX",798,798,"ASTATUS",0)
798^ASTATUS^Reacts on record status changes^MU^^R^^I^798^^^^^A
"IX",798,798,"ASTATUS",.1,0)
^^7^7^3050630^
"IX",798,798,"ASTATUS",.1,1,0)
This trigger reacts on status changes of the 
"IX",798,798,"ASTATUS",.1,2,0)
registry records (confirmed, deleted, etc.). 
"IX",798,798,"ASTATUS",.1,3,0)
 
"IX",798,798,"ASTATUS",.1,4,0)
According to the nature of the change, the 
"IX",798,798,"ASTATUS",.1,5,0)
$$RST798^RORDD01 function populates the
"IX",798,798,"ASTATUS",.1,6,0)
corresponding fields of the registry record (DATE
"IX",798,798,"ASTATUS",.1,7,0)
CONFIRMED, DATE DELETED, etc.).
"IX",798,798,"ASTATUS",1)
D RST798^RORDD01(1,DA,+$G(X1(1)),+$G(X2(1)))
"IX",798,798,"ASTATUS",1.4)

"IX",798,798,"ASTATUS",2)
D RST798^RORDD01(2,DA,+$G(X1(1)),+$G(X2(1)))
"IX",798,798,"ASTATUS",2.4)
S X=($G(X2(2))'="")
"IX",798,798,"ASTATUS",11.1,0)
^.114IA^2^2
"IX",798,798,"ASTATUS",11.1,1,0)
1^F^798^3^^^F
"IX",798,798,"ASTATUS",11.1,2,0)
2^F^798^.01^^^F
"IX",798,798,"KEY",0)
798^KEY^Uniqueness Index for Key 'A' of File #798^R^^R^IR^I^798^^^^^LS
"IX",798,798,"KEY",.1,0)
^^3^3^3060203^
"IX",798,798,"KEY",.1,1,0)
This index guarantees uniqueness of the patient 
"IX",798,798,"KEY",.1,2,0)
record in the particular registry and allows users
"IX",798,798,"KEY",.1,3,0)
to easily find this record.
"IX",798,798,"KEY",1)
S ^RORDATA(798,"KEY",X(1),X(2),DA)=""
"IX",798,798,"KEY",2)
K ^RORDATA(798,"KEY",X(1),X(2),DA)
"IX",798,798,"KEY",2.5)
K ^RORDATA(798,"KEY")
"IX",798,798,"KEY",11.1,0)
^.114IA^2^2
"IX",798,798,"KEY",11.1,1,0)
1^F^798^.01^^1
"IX",798,798,"KEY",11.1,2,0)
2^F^798^.02^^2
"IX",798,798.02,"B",0)
798.02^B^Uniqueness Index for Key 'B' of Subfile #798.02^R^^F^IR^I^798.02^^^^^LS
"IX",798,798.02,"B",1)
S ^RORDATA(798,DA(1),20,"B",X,DA)=""
"IX",798,798.02,"B",2)
K ^RORDATA(798,DA(1),20,"B",X,DA)
"IX",798,798.02,"B",2.5)
K ^RORDATA(798,DA(1),20,"B")
"IX",798,798.02,"B",11.1,0)
^.114IA^1^1
"IX",798,798.02,"B",11.1,1,0)
1^F^798.02^.01^^1
"IX",799.34,799.34,"KEY",0)
799.34^KEY^Uniqueness Index for Key 'A' of File #799.34^R^^F^IR^I^799.34^^^^^LS
"IX",799.34,799.34,"KEY",1)
S ^ROR(799.34,"KEY",X,DA)=""
"IX",799.34,799.34,"KEY",2)
K ^ROR(799.34,"KEY",X,DA)
"IX",799.34,799.34,"KEY",2.5)
K ^ROR(799.34,"KEY")
"IX",799.34,799.34,"KEY",11.1,0)
^.114IA^1^1
"IX",799.34,799.34,"KEY",11.1,1,0)
1^F^799.34^.04^^1
"KEY",798,798,"A",0)
798^A^P^28
"KEY",798,798,"A",2,0)
^.312IA^2^2
"KEY",798,798,"A",2,1,0)
.01^798^1
"KEY",798,798,"A",2,2,0)
.02^798^2
"KEY",798,798.02,"B",0)
798.02^B^S^30
"KEY",798,798.02,"B",2,0)
^.312IA^1^1
"KEY",798,798.02,"B",2,1,0)
.01^798.02^1
"KEY",799.34,799.34,"A",0)
799.34^A^P^385
"KEY",799.34,799.34,"A",2,0)
^.312IA^1^1
"KEY",799.34,799.34,"A",2,1,0)
.04^799.34^1
"KEYPTR",798,798,"A")
798^KEY
"KEYPTR",798,798.02,"B")
798.02^B
"KEYPTR",799.34,799.34,"A")
799.34^KEY
"KRN",19,2919641,-1)
0^1
"KRN",19,2919641,0)
ROR GUI^Broker Context^^B^^^^^^^^CLINICAL CASE REGISTRIES
"KRN",19,2919641,1,0)
^19.06^2^2^3090408^^^^
"KRN",19,2919641,1,1,0)
This option holds the references to the package RPC Broker Calls used by
"KRN",19,2919641,1,2,0)
the GUI to create an application context (for security purposes).
"KRN",19,2919641,99)
59948,35805
"KRN",19,2919641,99.1)
61339,35658
"KRN",19,2919641,200.9)
^y
"KRN",19,2919641,"RPC",0)
^19.05P^91^91
"KRN",19,2919641,"RPC",10,0)
XWB GET VARIABLE VALUE
"KRN",19,2919641,"RPC",14,0)
ROR LOG MESSAGE DETAILS
"KRN",19,2919641,"RPC",16,0)
XUS GET USER INFO
"KRN",19,2919641,"RPC",17,0)
XUS KEY CHECK
"KRN",19,2919641,"RPC",29,0)
ROR REPORT RETRIEVE
"KRN",19,2919641,"RPC",30,0)
ROR GUI ACCESS
"KRN",19,2919641,"RPC",31,0)
ROR TASK INFO
"KRN",19,2919641,"RPC",32,0)
ROR TASK LIST
"KRN",19,2919641,"RPC",33,0)
ROR REPORT SCHEDULE
"KRN",19,2919641,"RPC",34,0)
XWB IS RPC AVAILABLE
"KRN",19,2919641,"RPC",35,0)
ROR GET REGISTRY INFO
"KRN",19,2919641,"RPC",36,0)
ROR LIST REGISTRY USERS
"KRN",19,2919641,"RPC",37,0)
ROR GUI PARAMETER GET
"KRN",19,2919641,"RPC",38,0)
ROR GUI PARAMETER SET
"KRN",19,2919641,"RPC",39,0)
ROR LOG GET ACCESS VIOLATIONS
"KRN",19,2919641,"RPC",40,0)
ROR LOG GET LIST
"KRN",19,2919641,"RPC",41,0)
ROR LOG GET MESSAGES
"KRN",19,2919641,"RPC",42,0)
ROR REPORTS AVAILABLE
"KRN",19,2919641,"RPC",43,0)
ROR TASK DELETE
"KRN",19,2919641,"RPC",44,0)
ROR REPORT STYLESHEET
"KRN",19,2919641,"RPC",45,0)
ROR LIST PATIENTS
"KRN",19,2919641,"RPC",46,0)
ROR PATIENT SELECTION RULES
"KRN",19,2919641,"RPC",47,0)
ROR LIST DIVISIONS
"KRN",19,2919641,"RPC",48,0)
ROR LIST HOSPITAL LOCATIONS
"KRN",19,2919641,"RPC",49,0)
ROR LIST ICD-9
"KRN",19,2919641,"RPC",50,0)
ROR LIST LABORATORY TESTS
"KRN",19,2919641,"RPC",51,0)
ROR LIST VA DRUG CLASSES
"KRN",19,2919641,"RPC",52,0)
ROR LIST ITEMS
"KRN",19,2919641,"RPC",53,0)
ROR LIST VISTA USERS
"KRN",19,2919641,"RPC",54,0)
ROR UPDATE COORDINATORS
"KRN",19,2919641,"RPC",55,0)
ROR LIST COORDINATORS
"KRN",19,2919641,"RPC",56,0)
ROR LIST STATES
"KRN",19,2919641,"RPC",57,0)
RORICR CDC LOAD
"KRN",19,2919641,"RPC",58,0)
RORICR CDC SAVE
"KRN",19,2919641,"RPC",59,0)
ROR LOG INFO
"KRN",19,2919641,"RPC",60,0)
ROR GET USER INFO
"KRN",19,2919641,"RPC",61,0)
ROR PATIENT GET DATA
"KRN",19,2919641,"RPC",63,0)
ROR PATIENT DELETE
"KRN",19,2919641,"RPC",64,0)
ROR LIST LOCAL LAB TESTS
"KRN",19,2919641,"RPC",65,0)
ROR UPDATE LOCAL LAB TESTS
"KRN",19,2919641,"RPC",66,0)
ROR UPDATE LOCAL DRUGS
"KRN",19,2919641,"RPC",67,0)
ROR LIST LOCAL DRUGS
"KRN",19,2919641,"RPC",68,0)
ROR LIST DRUGS
"KRN",19,2919641,"RPC",69,0)
RORICR PATIENT LOAD
"KRN",19,2919641,"RPC",70,0)
RORICR PATIENT SAVE
"KRN",19,2919641,"RPC",72,0)
RORICR CDC CANCEL
"KRN",19,2919641,"RPC",73,0)
ROR TASK VALIDATE RESCHEDULING
"KRN",19,2919641,"RPC",74,0)
ROR LIST GENERIC DRUGS
"KRN",19,2919641,"RPC",75,0)
RORHEPC PATIENT LOAD
"KRN",19,2919641,"RPC",76,0)
RORHEPC PATIENT SAVE
"KRN",19,2919641,"RPC",78,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,2919641,"RPC",79,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,2919641,"RPC",80,0)
ROR LIST PARAMETER INSTANCES
"KRN",19,2919641,"RPC",81,0)
ROR GUI PARAMETER RENAME
"KRN",19,2919641,"RPC",82,0)
DDR LISTER
"KRN",19,2919641,"RPC",83,0)
ROR LIST LOCAL FIELDS
"KRN",19,2919641,"RPC",84,0)
ROR LIST SELECTION RULES
"KRN",19,2919641,"RPC",85,0)
ROR PRODUCTION ACCOUNT
"KRN",19,2919641,"RPC",86,0)
ROR UPDATE LOCAL FIELDS
"KRN",19,2919641,"RPC",87,0)
ROR GET SERVER TIME
"KRN",19,2919641,"RPC",88,0)
ROR LIST CPT
"KRN",19,2919641,"RPC",89,0)
ROR PATIENT REGISTRY LABS
"KRN",19,2919641,"RPC",90,0)
ROR LIST REGISTRY DRUGS
"KRN",19,2919641,"RPC",91,0)
ROR LIST INVESTIGATIONAL DRUGS
"KRN",19,2919641,"U")
BROKER CONTEXT
"KRN",8989.51,353,-1)
0^1
"KRN",8989.51,353,0)
ROR GUI PARAMETER^Clinical Case Registries GUI Parameter^1^GUI Parameter^^
"KRN",8989.51,353,1)
W
"KRN",8989.51,353,4,0)
^8989.514^2^2
"KRN",8989.51,353,4,1,0)
GUI
"KRN",8989.51,353,4,2,0)
SETTINGS
"KRN",8989.51,353,4,"B","GUI",1)

"KRN",8989.51,353,4,"B","SETTINGS",2)

"KRN",8989.51,353,6)
F
"KRN",8989.51,353,30,0)
^8989.513I^2^2
"KRN",8989.51,353,30,1,0)
1^200
"KRN",8989.51,353,30,2,0)
2^9.4
"KRN",8994,2841,-1)
0^1
"KRN",8994,2841,0)
ROR LIST REGISTRY DRUGS^RORGEN^RORRP017^4^R^0^^1^1
"KRN",8994,2841,1,0)
^8994.01^2^2^3090407^^^^
"KRN",8994,2841,1,1,0)
The ROR LIST REGISTRY DRUGS RPC returns a list of drugs from file 799.5
"KRN",8994,2841,1,2,0)
based on input of a beginning NAME value
"KRN",8994,2841,2,0)
^8994.02A^4^4
"KRN",8994,2841,2,1,0)
PART^1^30^1^1
"KRN",8994,2841,2,1,1,0)
^8994.021^1^1^3090407^^
"KRN",8994,2841,2,1,1,1,0)
The partial match restriction
"KRN",8994,2841,2,2,0)
FLAGS^1^1^1^2
"KRN",8994,2841,2,2,1,0)
^8994.021^1^1^3090407^^^
"KRN",8994,2841,2,2,1,1,0)
1 equals HEPC Registry 2 equals HIV Registry
"KRN",8994,2841,2,3,0)
NUMBER^1^10^0^4
"KRN",8994,2841,2,3,1,0)
^8994.021^1^1^3090407^^
"KRN",8994,2841,2,3,1,1,0)
DEPRECATED
"KRN",8994,2841,2,4,0)
FROM^1^10^0^3
"KRN",8994,2841,2,4,1,0)
^8994.021^1^1^3090407^^^^
"KRN",8994,2841,2,4,1,1,0)
DEPRECATED
"KRN",8994,2841,2,"B","FLAGS",2)

"KRN",8994,2841,2,"B","FROM",4)

"KRN",8994,2841,2,"B","NUMBER",3)

"KRN",8994,2841,2,"B","PART",1)

"KRN",8994,2841,2,"PARAMSEQ",1,1)

"KRN",8994,2841,2,"PARAMSEQ",2,2)

"KRN",8994,2841,2,"PARAMSEQ",3,4)

"KRN",8994,2841,2,"PARAMSEQ",4,3)

"KRN",8994,2841,3,0)
^8994.03^3^3^3090407^^^^
"KRN",8994,2841,3,1,0)
A list of drugs based on the input of PART
"KRN",8994,2841,3,2,0)
First item = number of drugs in the returned list
"KRN",8994,2841,3,3,0)
Each drug item = first $P^ = IEN, second $P^ = NAME of drug
"KRN",8994,2842,-1)
0^2
"KRN",8994,2842,0)
ROR LIST INVESTIGATIONAL DRUGS^RORINV^RORRP017^4^R^^^1^1
"KRN",8994,2842,1,0)
^8994.01^3^3^3090407^^^
"KRN",8994,2842,1,1,0)
[ROR LIST INVESTIGATIONAL DRUGS] returns a list of drugs that are
"KRN",8994,2842,1,2,0)
classified as investigational in file ^PS(50.605 and have a drug class
"KRN",8994,2842,1,3,0)
of IN140 for HEPC or IN150 for HIV
"KRN",8994,2842,2,0)
^8994.02A^4^4
"KRN",8994,2842,2,1,0)
PART^1^^0^1
"KRN",8994,2842,2,1,1,0)
^^2^2^3090403^
"KRN",8994,2842,2,1,1,1,0)
A string that is passed in to filter the number of drugs returned.
"KRN",8994,2842,2,1,1,2,0)
If the string is ?? then the call will return all drugs that qualify.
"KRN",8994,2842,2,2,0)
FLAGS^1^^1^2
"KRN",8994,2842,2,2,1,0)
^^2^2^3090403^
"KRN",8994,2842,2,2,1,1,0)
If equal to 1 this will work with the HEPC Registry.  If equal to 2 will
"KRN",8994,2842,2,2,1,2,0)
work with the HIV Registry
"KRN",8994,2842,2,3,0)
NUMBER^1^^0^3
"KRN",8994,2842,2,3,1,0)
^^1^1^3090403^
"KRN",8994,2842,2,3,1,1,0)
DEPRECATED
"KRN",8994,2842,2,4,0)
FROM^1^^0^4
"KRN",8994,2842,2,4,1,0)
^8994.021^1^1^3090407^^^
"KRN",8994,2842,2,4,1,1,0)
DEPRECATED
"KRN",8994,2842,2,"B","FLAGS",2)

"KRN",8994,2842,2,"B","FROM",4)

"KRN",8994,2842,2,"B","NUMBER",3)

"KRN",8994,2842,2,"B","PART",1)

"KRN",8994,2842,2,"PARAMSEQ",1,1)

"KRN",8994,2842,2,"PARAMSEQ",2,2)

"KRN",8994,2842,2,"PARAMSEQ",3,3)

"KRN",8994,2842,2,"PARAMSEQ",4,4)

"KRN",8994,2842,3,0)
^8994.03^4^4^3090407^^^
"KRN",8994,2842,3,1,0)
An array that consist of a zero node that holds the count of drugs and
"KRN",8994,2842,3,2,0)
subordinate nodes that hold two pieces of data:
"KRN",8994,2842,3,3,0)
$P1 = IEN in the file
"KRN",8994,2842,3,4,0)
$P2 = Drug name
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",618,-1)
1^1
"PKG",618,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL REGISTRIES
"PKG",618,20,0)
^9.402P^^
"PKG",618,22,0)
^9.49I^1^1
"PKG",618,22,1,0)
1.5^3060208^3060419^568
"PKG",618,22,1,"PAH",1,0)
8^3090608^520665226
"PKG",618,22,1,"PAH",1,1,0)
^^2^2^3090608
"PKG",618,22,1,"PAH",1,1,1,0)
Clinical Case Registries patch ROR*1.5*8.  See Patch Description for 
"PKG",618,22,1,"PAH",1,1,2,0)
details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
24
"RTN","RORRP017")
0^1^B27131562^B9907674
"RTN","RORRP017",1,0)
RORRP017 ;HIOFO/SG,VC - RPC: DRUGS AND CLASSES ;4/17/09 10:45am
"RTN","RORRP017",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORRP017",3,0)
 ;
"RTN","RORRP017",4,0)
 ; This routine uses the following IAs:
"RTN","RORRP017",5,0)
 ;
"RTN","RORRP017",6,0)
 ; #4533         ZERO^PSS50, NDF^PSS50, DATA^PSS50 (supported)
"RTN","RORRP017",7,0)
 ; #4540         ZERO^PSN50P6 (supported)
"RTN","RORRP017",8,0)
 ; #4543         C^PSN50P65, IEN^PSN50P65 (supported)
"RTN","RORRP017",9,0)
 ;
"RTN","RORRP017",10,0)
 ; This routine was modified March 2009 to include Registry Drugs
"RTN","RORRP017",11,0)
 ; RPC call is ROR LIST REGISTRY DRUGS into tag RORGEN
"RTN","RORRP017",12,0)
 ;
"RTN","RORRP017",13,0)
 Q
"RTN","RORRP017",14,0)
 ;
"RTN","RORRP017",15,0)
 ;***** RETURNS THE LIST OF DRUGS (DISPENSED OR GENERIC)
"RTN","RORRP017",16,0)
 ; RPC: [ROR LIST DRUGS]
"RTN","RORRP017",17,0)
 ;
"RTN","RORRP017",18,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP017",19,0)
 ;               are returned to.
"RTN","RORRP017",20,0)
 ;
"RTN","RORRP017",21,0)
 ; [PART]        The partial match restriction.
"RTN","RORRP017",22,0)
 ;
"RTN","RORRP017",23,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORRP017",24,0)
 ;                 G  Retrive generic drugs (from file #50.6).
"RTN","RORRP017",25,0)
 ;                    Otherwise, list of dispensed drugs (from
"RTN","RORRP017",26,0)
 ;                    file #50) is retrieved.
"RTN","RORRP017",27,0)
 ;
"RTN","RORRP017",28,0)
 ; [NUMBER]      Deprecated
"RTN","RORRP017",29,0)
 ; [FROM]        Deprecated
"RTN","RORRP017",30,0)
 ;
"RTN","RORRP017",31,0)
 ; Return Values:
"RTN","RORRP017",32,0)
 ;
"RTN","RORRP017",33,0)
 ; A negative value of the first "^"-piece of the RESULTS(0)
"RTN","RORRP017",34,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP017",35,0)
 ; details).
"RTN","RORRP017",36,0)
 ;
"RTN","RORRP017",37,0)
 ; Otherwise, number of drugs is returned in the
"RTN","RORRP017",38,0)
 ; @RESULTS@(0) and the subsequent nodes of the global array
"RTN","RORRP017",39,0)
 ; contain the drugs.
"RTN","RORRP017",40,0)
 ; 
"RTN","RORRP017",41,0)
 ; @RESULTS@(0)          Number of drugs
"RTN","RORRP017",42,0)
 ;
"RTN","RORRP017",43,0)
 ; @RESULTS@(i)          Drug
"RTN","RORRP017",44,0)
 ;                         ^01: Drug IEN
"RTN","RORRP017",45,0)
 ;                         ^02: Drug Name
"RTN","RORRP017",46,0)
 ;                         ^03: VA Drug Class (only for dispensed)
"RTN","RORRP017",47,0)
 ;
"RTN","RORRP017",48,0)
DRUGLIST(RESULTS,PART,FLAGS,NUMBER,FROM) ;
"RTN","RORRP017",49,0)
 N BUF,CNT,GENERIC,IEN,LP,NAME,NODE,RC,RORERRDL,TMP
"RTN","RORRP017",50,0)
 D CLEAR^RORERR("DRUGLIST^RORRP017",1)
"RTN","RORRP017",51,0)
 K RESULTS  S RESULTS=$$ALLOC^RORTMP()
"RTN","RORRP017",52,0)
 ;--- Check the parameters
"RTN","RORRP017",53,0)
 S FLAGS=$G(FLAGS)  S:$G(PART)="" PART="??"
"RTN","RORRP017",54,0)
 S GENERIC=(FLAGS["G")
"RTN","RORRP017",55,0)
 ;--- Get the list of drugs
"RTN","RORRP017",56,0)
 S NODE=$$ALLOC^RORTMP(.TMP)
"RTN","RORRP017",57,0)
 I GENERIC  D
"RTN","RORRP017",58,0)
 . D ZERO^PSN50P6(,PART,,,TMP)  ; Generic
"RTN","RORRP017",59,0)
 E  D ZERO^PSS50(,PART,,,,TMP)  ; Dispensed
"RTN","RORRP017",60,0)
 ;--- Copy the data to the destination array
"RTN","RORRP017",61,0)
 S:PART="??" PART=""  S LP=$L(PART)
"RTN","RORRP017",62,0)
 S NAME="",CNT=0
"RTN","RORRP017",63,0)
 F  S NAME=$O(@NODE@("B",NAME))  Q:NAME=""  D
"RTN","RORRP017",64,0)
 . S IEN=""
"RTN","RORRP017",65,0)
 . F  S IEN=$O(@NODE@("B",NAME,IEN))  Q:IEN=""  D
"RTN","RORRP017",66,0)
 . . S TMP=$G(@NODE@(IEN,.01))  Q:TMP=""
"RTN","RORRP017",67,0)
 . . Q:$E(TMP,1,LP)'=PART  ; Exclude mnemonics
"RTN","RORRP017",68,0)
 . . S BUF=IEN_U_TMP  S:'GENERIC $P(BUF,U,3)=$G(@NODE@(IEN,2))
"RTN","RORRP017",69,0)
 . . S CNT=CNT+1,@RESULTS@(CNT)=BUF
"RTN","RORRP017",70,0)
 ;--- Success
"RTN","RORRP017",71,0)
 S @RESULTS@(0)=CNT
"RTN","RORRP017",72,0)
 D FREE^RORTMP(NODE)
"RTN","RORRP017",73,0)
 Q
"RTN","RORRP017",74,0)
 ;
"RTN","RORRP017",75,0)
 ;***** RETURNS THE LIST OF VA DRUG CLASSES
"RTN","RORRP017",76,0)
 ; RPC: [ROR LIST VA DRUG CLASSES]
"RTN","RORRP017",77,0)
 ;
"RTN","RORRP017",78,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP017",79,0)
 ;               are returned to.
"RTN","RORRP017",80,0)
 ;
"RTN","RORRP017",81,0)
 ; [PARENT]      Reserved
"RTN","RORRP017",82,0)
 ;
"RTN","RORRP017",83,0)
 ; [PART]        The partial match restriction.
"RTN","RORRP017",84,0)
 ;
"RTN","RORRP017",85,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORRP017",86,0)
 ;                 N  Search classes by their names
"RTN","RORRP017",87,0)
 ;                    (by default, the search is performed by codes)
"RTN","RORRP017",88,0)
 ;
"RTN","RORRP017",89,0)
 ; [NUMBER]      Deprecated
"RTN","RORRP017",90,0)
 ; [FROM]        Deprecated
"RTN","RORRP017",91,0)
 ;
"RTN","RORRP017",92,0)
 ; Return Values:
"RTN","RORRP017",93,0)
 ;
"RTN","RORRP017",94,0)
 ; A negative value of the first "^"-piece of the @RESULTS@(0)
"RTN","RORRP017",95,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP017",96,0)
 ; details).
"RTN","RORRP017",97,0)
 ;
"RTN","RORRP017",98,0)
 ; Otherwise, number of drug classes is returned in the
"RTN","RORRP017",99,0)
 ; @RESULTS@(0) and the subsequent nodes of the global array
"RTN","RORRP017",100,0)
 ; contain the classes.
"RTN","RORRP017",101,0)
 ; 
"RTN","RORRP017",102,0)
 ; @RESULTS@(0)          Number of classes
"RTN","RORRP017",103,0)
 ;
"RTN","RORRP017",104,0)
 ; @RESULTS@(i)          Drug Class
"RTN","RORRP017",105,0)
 ;                         ^01: IEN
"RTN","RORRP017",106,0)
 ;                         ^02: Classification
"RTN","RORRP017",107,0)
 ;                         ^03: Code
"RTN","RORRP017",108,0)
 ;
"RTN","RORRP017",109,0)
VACLSLST(RESULTS,PARENT,PART,FLAGS,NUMBER,FROM) ;
"RTN","RORRP017",110,0)
 N CNT,IEN,LP,NODE,RC,RORERRDL,SUBS,TMP,VAL,XREF
"RTN","RORRP017",111,0)
 D CLEAR^RORERR("VACLSLST^RORRP017",1)
"RTN","RORRP017",112,0)
 K RESULTS  S RESULTS=$$ALLOC^RORTMP()
"RTN","RORRP017",113,0)
 ;--- Check the parameters
"RTN","RORRP017",114,0)
 S FLAGS=$G(FLAGS)  S:$G(PART)="" PART="??"
"RTN","RORRP017",115,0)
 ;--- Get the list of codes
"RTN","RORRP017",116,0)
 S NODE=$$ALLOC^RORTMP(.TMP)
"RTN","RORRP017",117,0)
 I FLAGS["N"  D  S XREF="C",SUBS=1
"RTN","RORRP017",118,0)
 . D C^PSN50P65(,PART,TMP)
"RTN","RORRP017",119,0)
 E  D  S XREF="B",SUBS=.01
"RTN","RORRP017",120,0)
 . D IEN^PSN50P65(,PART,TMP)
"RTN","RORRP017",121,0)
 ;--- Copy the data to the destination array
"RTN","RORRP017",122,0)
 S:PART="??" PART=""  S LP=$L(PART)
"RTN","RORRP017",123,0)
 S VAL="",CNT=0
"RTN","RORRP017",124,0)
 F  S VAL=$O(@NODE@(XREF,VAL))  Q:VAL=""  D
"RTN","RORRP017",125,0)
 . S IEN=""
"RTN","RORRP017",126,0)
 . F  S IEN=$O(@NODE@(XREF,VAL,IEN))  Q:IEN=""  D
"RTN","RORRP017",127,0)
 . . S TMP=$G(@NODE@(IEN,SUBS))
"RTN","RORRP017",128,0)
 . . Q:$E(TMP,1,LP)'=PART  ; Exclude mnemonics
"RTN","RORRP017",129,0)
 . . S CNT=CNT+1
"RTN","RORRP017",130,0)
 . . S @RESULTS@(CNT)=IEN_U_$G(@NODE@(IEN,1))_U_$G(@NODE@(IEN,.01))
"RTN","RORRP017",131,0)
 ;--- Success
"RTN","RORRP017",132,0)
 S @RESULTS@(0)=CNT
"RTN","RORRP017",133,0)
 D FREE^RORTMP(NODE)
"RTN","RORRP017",134,0)
 Q
"RTN","RORRP017",135,0)
 ;
"RTN","RORRP017",136,0)
 ;***** RETURNS THE LIST OF REGISTRY DRUGS
"RTN","RORRP017",137,0)
 ; RPC: [ROR LIST REGISTRY DRUGS]
"RTN","RORRP017",138,0)
 ; .RESULTS    Reference to a local variable where the results
"RTN","RORRP017",139,0)
 ;             are return to
"RTN","RORRP017",140,0)
 ; PART        The partial match value passed in from Application
"RTN","RORRP017",141,0)
 ; FLAGS       Not used
"RTN","RORRP017",142,0)
 ; NUMBER      Not used
"RTN","RORRP017",143,0)
 ; FROM        Not used
"RTN","RORRP017",144,0)
 ;
"RTN","RORRP017",145,0)
 ; Information returned
"RTN","RORRP017",146,0)
 ;    @RESULTS@(0)   Number of drugs returned
"RTN","RORRP017",147,0)
 ;    @RESULTS@(n)   Drug Class
"RTN","RORRP017",148,0)
 ;                   $p1= IEN
"RTN","RORRP017",149,0)
 ;                   $p2= NAME OF DRUG
"RTN","RORRP017",150,0)
 ;
"RTN","RORRP017",151,0)
RORGEN(RESULTS,PART,FLAGS,NUMBER,FROM) ;
"RTN","RORRP017",152,0)
 N BUF,CNT,GENERIC,IEN,LP,NAME,RC,RORERRDL,TMP,REGID,RRIEN
"RTN","RORRP017",153,0)
 D CLEAR^RORERR("RORGEN^RORRP017",1)
"RTN","RORRP017",154,0)
 K RESULTS S RESULTS=$$ALLOC^RORTMP()
"RTN","RORRP017",155,0)
 S:$G(PART)="" PART="??"
"RTN","RORRP017",156,0)
 S:PART="??" PART=""
"RTN","RORRP017",157,0)
 S LP=$L(PART)
"RTN","RORRP017",158,0)
 S NAME=PART,CNT=0
"RTN","RORRP017",159,0)
 F  S NAME=$O(^ROR(799.51,"B",NAME)) Q:NAME=""  D
"RTN","RORRP017",160,0)
 . Q:$E(NAME,1,LP)'=PART
"RTN","RORRP017",161,0)
 .S IEN=""
"RTN","RORRP017",162,0)
 .F  S IEN=$O(^ROR(799.51,"B",NAME,IEN)) Q:IEN=""  D
"RTN","RORRP017",163,0)
 . . S REGID=$P($G(^ROR(799.51,IEN,0)),U,2)
"RTN","RORRP017",164,0)
 . . Q:REGID'=FLAGS
"RTN","RORRP017",165,0)
 . . S RRIEN=$P($G(^ROR(799.51,IEN,0)),U,4)
"RTN","RORRP017",166,0)
 . . S BUF=RRIEN_U_NAME,CNT=CNT+1
"RTN","RORRP017",167,0)
 . . S @RESULTS@(CNT)=BUF
"RTN","RORRP017",168,0)
 S @RESULTS@(0)=CNT
"RTN","RORRP017",169,0)
 Q
"RTN","RORRP017",170,0)
 ;
"RTN","RORRP017",171,0)
 ;---  Returns a list of Investigative Drugs per registry
"RTN","RORRP017",172,0)
 ; RPC:   [ROR LIST INVESTIGATIVE DRUGS]
"RTN","RORRP017",173,0)
 ; .RESULTS     Reference to a local variable where the results
"RTN","RORRP017",174,0)
 ;              are returned to
"RTN","RORRP017",175,0)
 ; PART         The partial match value passed in from the application
"RTN","RORRP017",176,0)
 ; FLAGS        Indicator of registry HEPC=1, HIV=2
"RTN","RORRP017",177,0)
 ; NUMBER       Not used
"RTN","RORRP017",178,0)
 ; FROM         Not used
"RTN","RORRP017",179,0)
RORINV(RESULTS,PART,FLAGS,NUMBER,FROM) ;
"RTN","RORRP017",180,0)
 N BUF,CNT,IEN,LP,NAME,NODE,RC,RORERRDL,TMP,TMP2,INVES,CLAS,SUBS,PNTR
"RTN","RORRP017",181,0)
 N RORREG,XREF,VAL
"RTN","RORRP017",182,0)
 D CLEAR^RORERR("RORINV^RORRP017",1)
"RTN","RORRP017",183,0)
 K RESULTS
"RTN","RORRP017",184,0)
 S RESULTS=$$ALLOC^RORTMP()
"RTN","RORRP017",185,0)
 S NODE=$$ALLOC^RORTMP(.TMP)
"RTN","RORRP017",186,0)
 S SUBS=$$ALLOC^RORTMP(.TMP2)
"RTN","RORRP017",187,0)
 S FLAGS=$G(FLAGS)
"RTN","RORRP017",188,0)
 I FLAGS=1 S RORREG="IN140"
"RTN","RORRP017",189,0)
 I FLAGS=2 S RORREG="IN150"
"RTN","RORRP017",190,0)
 S:$G(PART)="" PART="??"
"RTN","RORRP017",191,0)
 S:PART="??" PART=""
"RTN","RORRP017",192,0)
 S LP=$L(PART)
"RTN","RORRP017",193,0)
 ;D B^PSS50(PART,,,,TMP)
"RTN","RORRP017",194,0)
 D NDF^PSS50(,PART,,,,TMP)
"RTN","RORRP017",195,0)
 S XREF="B"
"RTN","RORRP017",196,0)
 S VAL="",CNT=0
"RTN","RORRP017",197,0)
 F  S VAL=$O(@NODE@(XREF,VAL)) Q:VAL=""  D
"RTN","RORRP017",198,0)
 . S IEN=""
"RTN","RORRP017",199,0)
 . F  S IEN=$O(@NODE@(XREF,VAL,IEN)) Q:IEN=""  D
"RTN","RORRP017",200,0)
 . . D DATA^PSS50(IEN,,,,,TMP2)
"RTN","RORRP017",201,0)
 . . S CLAS=$P($G(@SUBS@(IEN,25)),U,2)
"RTN","RORRP017",202,0)
 . . Q:CLAS'=RORREG
"RTN","RORRP017",203,0)
 . . S PNTR=$P($G(@SUBS@(IEN,20)),U,1)
"RTN","RORRP017",204,0)
 . . S CNT=CNT+1
"RTN","RORRP017",205,0)
 . . S BUF=PNTR_U_$G(@SUBS@(IEN,.01))
"RTN","RORRP017",206,0)
 . . S @RESULTS@(CNT)=BUF
"RTN","RORRP017",207,0)
 S @RESULTS@(0)=CNT
"RTN","RORRP017",208,0)
 D FREE^RORTMP(NODE)
"RTN","RORRP017",209,0)
 D FREE^RORTMP(SUBS)
"RTN","RORRP017",210,0)
 Q
"RTN","RORRP017",211,0)
 ;
"RTN","RORRP020")
0^2^B29770622^B26441857
"RTN","RORRP020",1,0)
RORRP020 ;HIOFO/SG,VC - RPC: PATIENT DATA UTILITIES ;4/7/09 9:53am
"RTN","RORRP020",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORRP020",3,0)
 ;
"RTN","RORRP020",4,0)
 ; This routine uses the following IAs:
"RTN","RORRP020",5,0)
 ;
"RTN","RORRP020",6,0)
 ; #2051         LIST^DIC (supported)
"RTN","RORRP020",7,0)
 ; #2056         GET1^DIQ, GETS^DIQ (supported)
"RTN","RORRP020",8,0)
 ; #10061        4^VADPT (supported)
"RTN","RORRP020",9,0)
 ;
"RTN","RORRP020",10,0)
 Q
"RTN","RORRP020",11,0)
 ;
"RTN","RORRP020",12,0)
 ;***** LOADS THE DATA FROM THE 'PATIENT' FILE (#2)
"RTN","RORRP020",13,0)
 ;
"RTN","RORRP020",14,0)
 ; DFN           Patient IEN
"RTN","RORRP020",15,0)
 ;
"RTN","RORRP020",16,0)
 ; .RORDEM       Reference to a local variable where the demographic
"RTN","RORRP020",17,0)
 ;               information is returned to:
"RTN","RORRP020",18,0)
 ;
"RTN","RORRP020",19,0)
 ;                 ^01: Patient IEN (DFN)
"RTN","RORRP020",20,0)
 ;                 ^02: Patient Name
"RTN","RORRP020",21,0)
 ;                 ^03: Date of Birth (FileMan)
"RTN","RORRP020",22,0)
 ;                 ^04: SSN
"RTN","RORRP020",23,0)
 ;                 ^05: Date of Death (FileMan)
"RTN","RORRP020",24,0)
 ;                 ^06: Sex (F/M)
"RTN","RORRP020",25,0)
 ;
"RTN","RORRP020",26,0)
 ; [.RORADR]     Reference to a local variable where the patient's
"RTN","RORRP020",27,0)
 ;               address is returned to:
"RTN","RORRP020",28,0)
 ;
"RTN","RORRP020",29,0)
 ;                 ^01: Address (1)
"RTN","RORRP020",30,0)
 ;                 ^02: Address (2)
"RTN","RORRP020",31,0)
 ;                 ^03: Address (3)
"RTN","RORRP020",32,0)
 ;                 ^04: City
"RTN","RORRP020",33,0)
 ;                 ^05: State (IEN)
"RTN","RORRP020",34,0)
 ;                 ^06: State (Name)
"RTN","RORRP020",35,0)
 ;                 ^07: ZIP
"RTN","RORRP020",36,0)
 ;                 ^08: ZIP+4
"RTN","RORRP020",37,0)
 ;                 ^09: County (IEN)
"RTN","RORRP020",38,0)
 ;                 ^10: County (Name)
"RTN","RORRP020",39,0)
 ;                 ^11: Home Phone
"RTN","RORRP020",40,0)
 ;
"RTN","RORRP020",41,0)
 ; [.VADM]       Reference to a local array that is populated by
"RTN","RORRP020",42,0)
 ;               the 4^VADM API inside this function
"RTN","RORRP020",43,0)
 ;
"RTN","RORRP020",44,0)
 ; Return Values:
"RTN","RORRP020",45,0)
 ;       <0  Error code
"RTN","RORRP020",46,0)
 ;        0  Ok
"RTN","RORRP020",47,0)
 ;
"RTN","RORRP020",48,0)
LOAD2(DFN,RORDEM,RORADR,VADM) ;
"RTN","RORRP020",49,0)
 N I,VA,VAHOW,VAPA,VAROOT  D 4^VADPT
"RTN","RORRP020",50,0)
 ;--- Demographic information
"RTN","RORRP020",51,0)
 S RORDEM=DFN                          ; DFN
"RTN","RORRP020",52,0)
 S $P(RORDEM,U,2)=$G(VADM(1))          ; Name
"RTN","RORRP020",53,0)
 S $P(RORDEM,U,3)=$P($G(VADM(3)),U)    ; DOB
"RTN","RORRP020",54,0)
 S $P(RORDEM,U,4)=$P($G(VADM(2)),U)    ; SSN
"RTN","RORRP020",55,0)
 S $P(RORDEM,U,5)=$P($G(VADM(6)),U)    ; DOD
"RTN","RORRP020",56,0)
 S $P(RORDEM,U,6)=$P($G(VADM(5)),U)    ; Sex
"RTN","RORRP020",57,0)
 ;--- Patient's address
"RTN","RORRP020",58,0)
 S RORADR=$G(VAPA(1))                  ; Address (1)
"RTN","RORRP020",59,0)
 S $P(RORADR,U,2)=$G(VAPA(2))          ; Address (2)
"RTN","RORRP020",60,0)
 S $P(RORADR,U,3)=$G(VAPA(3))          ; Address (3)
"RTN","RORRP020",61,0)
 S $P(RORADR,U,4)=$G(VAPA(4))          ; City
"RTN","RORRP020",62,0)
 S $P(RORADR,U,5)=$P($G(VAPA(5)),U,1)  ; State IEN
"RTN","RORRP020",63,0)
 S $P(RORADR,U,6)=$P($G(VAPA(5)),U,2)  ; State Name
"RTN","RORRP020",64,0)
 S $P(RORADR,U,7)=$P($G(VAPA(6)),U,1)  ; ZIP
"RTN","RORRP020",65,0)
 S $P(RORADR,U,8)=$P($G(VAPA(6)),U,2)  ; ZIP+4
"RTN","RORRP020",66,0)
 S $P(RORADR,U,9)=$P($G(VAPA(7)),U,1)  ; County IEN
"RTN","RORRP020",67,0)
 S $P(RORADR,U,10)=$P($G(VAPA(7)),U,2) ; County Name
"RTN","RORRP020",68,0)
 S $P(RORADR,U,11)=$G(VAPA(8))         ; Home Phone Number
"RTN","RORRP020",69,0)
 Q 0
"RTN","RORRP020",70,0)
 ;
"RTN","RORRP020",71,0)
 ;***** LOADS THE REGISTRY DATA FOR THE PATIENT
"RTN","RORRP020",72,0)
 ;
"RTN","RORRP020",73,0)
 ; IEN           IEN of the registry record (file #798)
"RTN","RORRP020",74,0)
 ;
"RTN","RORRP020",75,0)
 ; .ROR8DST      Reference to a local variable where the results
"RTN","RORRP020",76,0)
 ;               are returned to:
"RTN","RORRP020",77,0)
 ;
"RTN","RORRP020",78,0)
 ;                 ^01: Date Entered (FileMan)
"RTN","RORRP020",79,0)
 ;                 ^02: Status Code (Field 3, File #798)
"RTN","RORRP020",80,0)
 ;                 ^03: Active (0/1)
"RTN","RORRP020",81,0)
 ;                 ^04: Do not Send (0/1)
"RTN","RORRP020",82,0)
 ;                 ^05: Data Acknowledged Until (FileMan)
"RTN","RORRP020",83,0)
 ;                 ^06: Data Extracted Until (FileMan)
"RTN","RORRP020",84,0)
 ;                 ^07: Date Selected (FileMan)
"RTN","RORRP020",85,0)
 ;                 ^08: Date Confirmed (FileMan)
"RTN","RORRP020",86,0)
 ;                 ^09: Location Selected (Institution Name)
"RTN","RORRP020",87,0)
 ;                 ^10: Description of the Earliest Selection Rule
"RTN","RORRP020",88,0)
 ;                 ^11: reserved
"RTN","RORRP020",89,0)
 ;                 ^12: reserved
"RTN","RORRP020",90,0)
 ;                 ^13: Action Flags (see the description below)
"RTN","RORRP020",91,0)
 ;
"RTN","RORRP020",92,0)
 ;               The Action Flags field indicates the actions that
"RTN","RORRP020",93,0)
 ;               can be performed on the patient's record in the
"RTN","RORRP020",94,0)
 ;               registry:
"RTN","RORRP020",95,0)
 ;
"RTN","RORRP020",96,0)
 ;                   C  CDC form can be edited/printed
"RTN","RORRP020",97,0)
 ;                   D  The record can be deleted
"RTN","RORRP020",98,0)
 ;                   E  The record can be edited
"RTN","RORRP020",99,0)
 ;                   O  Read-only mode
"RTN","RORRP020",100,0)
 ;
"RTN","RORRP020",101,0)
 ; DOD           Date of Death (for deceased patients)
"RTN","RORRP020",102,0)
 ;
"RTN","RORRP020",103,0)
 ; COMMENT        Comment of no more than 100 characters added for
"RTN","RORRP020",104,0)
 ;                Patch 1.5*8  January, 2009
"RTN","RORRP020",105,0)
 ;
"RTN","RORRP020",106,0)
 ; Return Values:
"RTN","RORRP020",107,0)
 ;       <0  Error code
"RTN","RORRP020",108,0)
 ;        0  Ok
"RTN","RORRP020",109,0)
 ;
"RTN","RORRP020",110,0)
LOAD798(IEN,ROR8DST,DOD) ;
"RTN","RORRP020",111,0)
 N FLAGS,IENS,RC,RORBUF,RORMSG,TMP
"RTN","RORRP020",112,0)
 S ROR8DST=""
"RTN","RORRP020",113,0)
 ;
"RTN","RORRP020",114,0)
 ;--- Check if the patient is in the registry
"RTN","RORRP020",115,0)
 I (IEN'>0)!($D(^RORDATA(798,+IEN))<10)  D  Q 0
"RTN","RORRP020",116,0)
 . S $P(ROR8DST,U,13)=""
"RTN","RORRP020",117,0)
 ;
"RTN","RORRP020",118,0)
 ;--- Load values from the registry record
"RTN","RORRP020",119,0)
 S IENS=(+IEN)_","
"RTN","RORRP020",120,0)
 ;****************************** ONE LINE OF OLD CODE
"RTN","RORRP020",121,0)
 ;D GETS^DIQ(798,IENS,"1;2;3;8;9.1;9.2;11","I","RORBUF","RORMSG")
"RTN","RORRP020",122,0)
 K RORMSG D GETS^DIQ(798,IENS,"1;2;3;8;9.1;9.2;11;12","I","RORBUF","RORMSG")
"RTN","RORRP020",123,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORRP020",124,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORRP020",125,0)
 ;
"RTN","RORRP020",126,0)
 ;--- Registry data
"RTN","RORRP020",127,0)
 S ROR8DST=$G(RORBUF(798,IENS,1,"I"))            ; DATE ENTERED
"RTN","RORRP020",128,0)
 S $P(ROR8DST,U,2)=+$G(RORBUF(798,IENS,3,"I"))   ; STATUS
"RTN","RORRP020",129,0)
 S $P(ROR8DST,U,3)=+$G(RORBUF(798,IENS,8,"I"))   ; ACTIVE
"RTN","RORRP020",130,0)
 S $P(ROR8DST,U,4)=+$G(RORBUF(798,IENS,11,"I"))  ; DON'T SEND
"RTN","RORRP020",131,0)
 S $P(ROR8DST,U,5)=$G(RORBUF(798,IENS,9.1,"I"))  ; ACKNOWLEDGED UNTIL
"RTN","RORRP020",132,0)
 S $P(ROR8DST,U,6)=$G(RORBUF(798,IENS,9.2,"I"))  ; EXTRACTED UNTIL
"RTN","RORRP020",133,0)
 S $P(ROR8DST,U,8)=$G(RORBUF(798,IENS,2,"I"))    ; DATE CONFIRMED
"RTN","RORRP020",134,0)
 ; -- ADDED COMMENT
"RTN","RORRP020",135,0)
 S $P(ROR8DST,U,14)=$G(RORBUF(798,IENS,12,"I"))  ; COMMENT
"RTN","RORRP020",136,0)
 ;
"RTN","RORRP020",137,0)
 ;--- Earliest selection rule
"RTN","RORRP020",138,0)
 S IENS=","_IENS,TMP="@;.01I;1I;2E"  K RORBUF
"RTN","RORRP020",139,0)
 K RORMSG D LIST^DIC(798.01,IENS,TMP,"PU",1,,,"AD",,,"RORBUF","RORMSG")
"RTN","RORRP020",140,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORRP020",141,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORRP020",142,0)
 I $G(RORBUF("DILIST",0))>0  S RC=0  D  Q:RC<0 RC
"RTN","RORRP020",143,0)
 . S TMP=$G(RORBUF("DILIST",1,0))
"RTN","RORRP020",144,0)
 . S $P(ROR8DST,U,7)=$P(TMP,U,3)                 ; DATE
"RTN","RORRP020",145,0)
 . S $P(ROR8DST,U,9)=$P(TMP,U,4)                 ; LOCATION
"RTN","RORRP020",146,0)
 . S IENS=+$P(TMP,U,2)_","
"RTN","RORRP020",147,0)
 . K RORMSG S TMP=$$GET1^DIQ(798.2,IENS,4,,,"RORMSG")
"RTN","RORRP020",148,0)
 . ;S:$G(DIERR) RC=$$DBS^RORERR("RORMSG",-9,,,798.2,IENS)
"RTN","RORRP020",149,0)
 . S:$G(RORMSG("DIERR")) RC=$$DBS^RORERR("RORMSG",-9,,,798.2,IENS)
"RTN","RORRP020",150,0)
 . S $P(ROR8DST,U,10)=TMP                        ; SELECTION RULE
"RTN","RORRP020",151,0)
 ;
"RTN","RORRP020",152,0)
 ;--- Action flags
"RTN","RORRP020",153,0)
 ; The actions and modes are enabled/disabled according to the
"RTN","RORRP020",154,0)
 ; following table:
"RTN","RORRP020",155,0)
 ;-----------------------------------------------------;
"RTN","RORRP020",156,0)
 ;   Actions    ;        Status of the patient         ;
"RTN","RORRP020",157,0)
 ;     and      ;--------------------------------------;
"RTN","RORRP020",158,0)
 ;    Modes     ;Not Added;Pending;Active;Inactive;Dead;
"RTN","RORRP020",159,0)
 ;--------------+---------+-------+------+--------+----;
"RTN","RORRP020",160,0)
 ; (C)DC        ;    D    ;   D   ;      ;        ;    ;
"RTN","RORRP020",161,0)
 ; (D)elete     ;    D    ;       ;      ;        ;    ;
"RTN","RORRP020",162,0)
 ; (E)dit       ;    D    ;       ;      ;        ;    ;
"RTN","RORRP020",163,0)
 ; Read (O)nly  ;         ;       ;      ;        ;    ;
"RTN","RORRP020",164,0)
 ;-----------------------------------------------------;
"RTN","RORRP020",165,0)
 ; D  the action is disabled if at least one of the marked
"RTN","RORRP020",166,0)
 ;    conditions is true;
"RTN","RORRP020",167,0)
 ;
"RTN","RORRP020",168,0)
 ; E  the action is enabled if at least one of the marked
"RTN","RORRP020",169,0)
 ;    conditions is true.
"RTN","RORRP020",170,0)
 ;---
"RTN","RORRP020",171,0)
 D
"RTN","RORRP020",172,0)
 . I $P(ROR8DST,U,2)=4  S FLAGS="DE"  Q    ; Pending
"RTN","RORRP020",173,0)
 . S FLAGS="CDE"
"RTN","RORRP020",174,0)
 S $P(ROR8DST,U,13)=FLAGS
"RTN","RORRP020",175,0)
 Q 0
"RTN","RORRP020",176,0)
 ;
"RTN","RORRP020",177,0)
 ;***** PERFORMS THE POST-PROCESSING OF THE LISTS
"RTN","RORRP020",178,0)
 ;
"RTN","RORRP020",179,0)
 ; RESULTS       Closed root of the array that contains the
"RTN","RORRP020",180,0)
 ;               results of the query
"RTN","RORRP020",181,0)
 ;
"RTN","RORRP020",182,0)
 ; REGIEN        Registry IEN
"RTN","RORRP020",183,0)
 ;
"RTN","RORRP020",184,0)
 ; FLAGS         Flags that control the execution
"RTN","RORRP020",185,0)
 ;
"RTN","RORRP020",186,0)
 ; Return Values:
"RTN","RORRP020",187,0)
 ;       <0  Error code
"RTN","RORRP020",188,0)
 ;        0  Ok
"RTN","RORRP020",189,0)
 ;
"RTN","RORRP020",190,0)
POSTPROC(RESULTS,REGIEN,FLAGS) ;
"RTN","RORRP020",191,0)
 N BUF,DOD,FNP,FO,IEN,IR,PATIEN,RC,TMP
"RTN","RORRP020",192,0)
 S FNP=($TR(FLAGS,"P")'=FLAGS),FO=(FLAGS["O")
"RTN","RORRP020",193,0)
 ;--- Process the resulting records
"RTN","RORRP020",194,0)
 S (IR,RC)=0
"RTN","RORRP020",195,0)
 F  S IR=$O(@RESULTS@(IR))  Q:IR'>0  D  Q:RC<0
"RTN","RORRP020",196,0)
 . S BUF=$G(@RESULTS@(IR,0)),PATIEN=+$P(BUF,U,2)
"RTN","RORRP020",197,0)
 . I PATIEN'>0  S PATIEN=+BUF  Q:PATIEN'>0
"RTN","RORRP020",198,0)
 . ;--- Load the required fields from the PATIENT file
"RTN","RORRP020",199,0)
 . Q:$$LOAD2(PATIEN,.BUF)<0
"RTN","RORRP020",200,0)
 . S DOD=$P(BUF,U,5)
"RTN","RORRP020",201,0)
 . S @RESULTS@(IR,0)=BUF
"RTN","RORRP020",202,0)
 . ;--- Add optional registry fields if necessary
"RTN","RORRP020",203,0)
 . I FO  D  Q:RC<0
"RTN","RORRP020",204,0)
 . . ;--- Get the IEN of the registry record
"RTN","RORRP020",205,0)
 . . S IEN=$$PRRIEN^RORUTL01(PATIEN,REGIEN)
"RTN","RORRP020",206,0)
 . . ;--- Try to load the data from the ROR REGISTRY RECORD file
"RTN","RORRP020",207,0)
 . . S RC=$$LOAD798(IEN,.BUF,DOD)
"RTN","RORRP020",208,0)
 . . S:RC'<0 @RESULTS@(IR,1)="O^"_BUF
"RTN","RORRP020",209,0)
 ;---
"RTN","RORRP020",210,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORRP034")
0^3^B16836450^B12580586
"RTN","RORRP034",1,0)
RORRP034 ;HIOFO/SG,VC - RPC: HIV PATIENT SAVE/CANCEL ;1/29/09 9:46am
"RTN","RORRP034",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**2,8**;Feb 17, 2006;Build 8
"RTN","RORRP034",3,0)
 ;Per VHA Directive 10-92-142, this routine should not be modified.
"RTN","RORRP034",4,0)
 ;
"RTN","RORRP034",5,0)
 ; This routine uses the following IAs:
"RTN","RORRP034",6,0)
 ;
"RTN","RORRP034",7,0)
 ; #2053         FILE^DIC (supported)
"RTN","RORRP034",8,0)
 Q
"RTN","RORRP034",9,0)
 ;
"RTN","RORRP034",10,0)
 ;***** UPDATES THE PATIENT'S REGISTRY DATA
"RTN","RORRP034",11,0)
 ; RPC: [RORICR PATIENT SAVE]
"RTN","RORRP034",12,0)
 ;
"RTN","RORRP034",13,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP034",14,0)
 ;               are returned to.
"RTN","RORRP034",15,0)
 ;
"RTN","RORRP034",16,0)
 ; REGIEN        Registry IEN
"RTN","RORRP034",17,0)
 ;
"RTN","RORRP034",18,0)
 ; PTIEN         IEN of the registry patient (DFN)
"RTN","RORRP034",19,0)
 ;
"RTN","RORRP034",20,0)
 ; [CANCEL]      Cancel the update and unlock the registry data
"RTN","RORRP034",21,0)
 ;
"RTN","RORRP034",22,0)
 ; .DATA         Reference to a local array that contains the data
"RTN","RORRP034",23,0)
 ;               in the same format as the output of the RORICR
"RTN","RORRP034",24,0)
 ;               PATIENT LOAD remote procedure. Only PH, ICR, and
"RTN","RORRP034",25,0)
 ;               LFV segments are processed; the others are ignored.
"RTN","RORRP034",26,0)
 ;
"RTN","RORRP034",27,0)
 ; Revision for Patch 1.5*8 to add Comments
"RTN","RORRP034",28,0)
 ;   In DATA array there will be a 3 piece record, formated as follows
"RTN","RORRP034",29,0)
 ; PC^STAT^COMMENT  If STAT is P then the COMMENT will be added.  If
"RTN","RORRP034",30,0)
 ;                  STAT is C then the COMMENT will be a blank.
"RTN","RORRP034",31,0)
 ;
"RTN","RORRP034",32,0)
 ; Return Values:
"RTN","RORRP034",33,0)
 ;
"RTN","RORRP034",34,0)
 ; A negative value of the first "^"-piece of the RESULTS(0)
"RTN","RORRP034",35,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP034",36,0)
 ; details).
"RTN","RORRP034",37,0)
 ;
"RTN","RORRP034",38,0)
 ; Otherwise, zero is returned in the RESULTS(0).
"RTN","RORRP034",39,0)
 ;
"RTN","RORRP034",40,0)
SAVE(RESULTS,REGIEN,PTIEN,CANCEL,DATA) ;
"RTN","RORRP034",41,0)
 N IENS,LOCK,RC,RORERRDL,STAT,COMMENT
"RTN","RORRP034",42,0)
 D CLEAR^RORERR("SAVE^RORRP034",1)
"RTN","RORRP034",43,0)
 K RESULTS  S (RESULTS(0),RC)=0
"RTN","RORRP034",44,0)
 D
"RTN","RORRP034",45,0)
 . ;--- Registry IEN
"RTN","RORRP034",46,0)
 . I $G(REGIEN)'>0  D  Q
"RTN","RORRP034",47,0)
 . . S RC=$$ERROR^RORERR(-88,,,,"REGIEN",$G(REGIEN))
"RTN","RORRP034",48,0)
 . S REGIEN=+REGIEN
"RTN","RORRP034",49,0)
 . ;--- Patient IEN
"RTN","RORRP034",50,0)
 . I $G(PTIEN)'>0  D  Q
"RTN","RORRP034",51,0)
 . . S RC=$$ERROR^RORERR(-88,,,,"PTIEN",$G(PTIEN))
"RTN","RORRP034",52,0)
 . S PTIEN=+PTIEN
"RTN","RORRP034",53,0)
 . ;--- Get the IENS of the registry record
"RTN","RORRP034",54,0)
 . S IENS=$$PRRIEN^RORUTL01(PTIEN,REGIEN)_","
"RTN","RORRP034",55,0)
 . S:IENS>0 (LOCK(798,IENS),LOCK(799.4,IENS))=""
"RTN","RORRP034",56,0)
 . Q:$G(CANCEL)=1
"RTN","RORRP034",57,0)
 . ;--- Save the data
"RTN","RORRP034",58,0)
 . S RC=$$SAVE1(.IENS)
"RTN","RORRP034",59,0)
 . I '$D(LOCK)  S:IENS>0 (LOCK(798,IENS),LOCK(799.4,IENS))=""
"RTN","RORRP034",60,0)
 . S:RC>0 RESULTS(0)=RC
"RTN","RORRP034",61,0)
 ;
"RTN","RORRP034",62,0)
 ;--- Do not unlock the records if there are errors in the data
"RTN","RORRP034",63,0)
 ;    (positive value is returned by the $$SAVE1), since the user
"RTN","RORRP034",64,0)
 ;--- will have another chance to correct the data and save it.
"RTN","RORRP034",65,0)
 D:RC'>0 UNLOCK^RORLOCK(.LOCK)
"RTN","RORRP034",66,0)
 D:RC<0 RPCSTK^RORERR(.RESULTS,RC)
"RTN","RORRP034",67,0)
 Q
"RTN","RORRP034",68,0)
 ;
"RTN","RORRP034",69,0)
 ;***** INTERNAL ENTRY POINT THAT UPDATES THE REGISTRY DATA
"RTN","RORRP034",70,0)
SAVE1(IENS798) ;
"RTN","RORRP034",71,0)
 N IENS,LFIEN,LFV,RC,RDI,REGNAME,RORFDA,RORMSG,SEG,TMP
"RTN","RORRP034",72,0)
 ;
"RTN","RORRP034",73,0)
 ;=== Add the patient to the registry if necessary
"RTN","RORRP034",74,0)
 I IENS798'>0  S RC=0  D  Q:RC<0 RC
"RTN","RORRP034",75,0)
 . S REGNAME=$P($$REGNAME^RORUTL01(REGIEN),U)
"RTN","RORRP034",76,0)
 . ;--- Add the patient to the registry
"RTN","RORRP034",77,0)
 . S RC=$$ADDPAT^RORUPD06(PTIEN,REGNAME)  Q:RC<0
"RTN","RORRP034",78,0)
 . ;--- Get the IENS of the registry record
"RTN","RORRP034",79,0)
 . S IENS798=$$PRRIEN^RORUTL01(PTIEN,REGIEN)_","
"RTN","RORRP034",80,0)
 . S:IENS798'>0 RC=$$ERROR^RORERR(-97,,,PTIEN,REGNAME)
"RTN","RORRP034",81,0)
 ;
"RTN","RORRP034",82,0)
 ;=== Prepare the data
"RTN","RORRP034",83,0)
 N LFCNT ;added 'new' statement
"RTN","RORRP034",84,0)
 S (LFCNT,RDI,RC)=0
"RTN","RORRP034",85,0)
 F  S RDI=$O(DATA(RDI))  Q:RDI'>0  D  Q:RC
"RTN","RORRP034",86,0)
 . S SEG=$P(DATA(RDI),U)
"RTN","RORRP034",87,0)
 . ;--- Risk factors
"RTN","RORRP034",88,0)
 . I SEG="PH"  D  Q
"RTN","RORRP034",89,0)
 . . S RC=$$CDCFDA^RORRP026(IENS798,"PH^RORRP026",DATA(RDI),.RORFDA)
"RTN","RORRP034",90,0)
 . ;--- Registry data
"RTN","RORRP034",91,0)
 . I SEG="ICR"  D  Q
"RTN","RORRP034",92,0)
 . . S TMP=$P(DATA(RDI),U,3)
"RTN","RORRP034",93,0)
 . . S RORFDA(799.4,IENS798,.02)=TMP
"RTN","RORRP034",94,0)
 . . S RORFDA(799.4,IENS798,.03)=$S(TMP:$P(DATA(RDI),U,4),1:"")
"RTN","RORRP034",95,0)
 . ;--- Local field values
"RTN","RORRP034",96,0)
 . I SEG="LFV"  D  Q
"RTN","RORRP034",97,0)
 . . S LFIEN=+$P(DATA(RDI),U,3)
"RTN","RORRP034",98,0)
 . . S:LFIEN>0 LFV(LFIEN)=DATA(RDI)
"RTN","RORRP034",99,0)
 . ;---  If there is a comment for a Pending Patient
"RTN","RORRP034",100,0)
 . I SEG="PC" D  Q
"RTN","RORRP034",101,0)
 . . S STAT=$P(DATA(RDI),U,2)
"RTN","RORRP034",102,0)
 . . S COMMENT=$P(DATA(RDI),U,3)
"RTN","RORRP034",103,0)
 Q:RC RC
"RTN","RORRP034",104,0)
 ;
"RTN","RORRP034",105,0)
 ;=== Confirm the pending patient
"RTN","RORRP034",106,0)
 ;D:$$GET1^DIQ(798,IENS798,3,"I",,"RORMSG")=4
"RTN","RORRP034",107,0)
 I CANCEL=0 D
"RTN","RORRP034",108,0)
 . ;--- Do not clear the DON'T SEND flag for 'test' patients
"RTN","RORRP034",109,0)
 . S:'$$TESTPAT^RORUTL01(PTIEN) RORFDA(798,IENS798,11)="@"
"RTN","RORRP034",110,0)
 . ;--- Change the STATUS from 'Pending' to 'Active'
"RTN","RORRP034",111,0)
 . S RORFDA(798,IENS798,3)=0
"RTN","RORRP034",112,0)
 . ;--- Delete any comment fields
"RTN","RORRP034",113,0)
 . S RORFDA(798,IENS798,12)=" "
"RTN","RORRP034",114,0)
 ;
"RTN","RORRP034",115,0)
 ;=== Update local fields
"RTN","RORRP034",116,0)
 ;S RC=$$UPDLFV^RORUTL19(IENS798,.LFV)  Q:RC<0 RC
"RTN","RORRP034",117,0)
 S RC=$$UPDLFV^RORUTL19(IENS798,.LFV)
"RTN","RORRP034",118,0)
 S:RC RORFDA(798,IENS798,5)=1  ; UPDATE LOCAL REGISTRY DATA
"RTN","RORRP034",119,0)
 ;=== Update the COMMENTS field
"RTN","RORRP034",120,0)
 I STAT="P" S RORFDA(798,IENS798,12)=$G(COMMENT)
"RTN","RORRP034",121,0)
 ;
"RTN","RORRP034",122,0)
 ;=== Update the record(s)
"RTN","RORRP034",123,0)
 I $D(RORFDA)>1  D  Q:RC<0 RC
"RTN","RORRP034",124,0)
 . ; UPDATE LOCAL REGISTRY DATA
"RTN","RORRP034",125,0)
 . K RORMSG D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORRP034",126,0)
 . ;S:$G(DIERR) RC=$$DBS^RORERR("RORMSG",-9,,PTIEN,"798&799.4",IENS798)
"RTN","RORRP034",127,0)
 . S:$G(RORMSG("DIERR")) RC=$$DBS^RORERR("RORMSG",-9,,PTIEN,"798&799.4",IENS798)
"RTN","RORRP034",128,0)
 ;
"RTN","RORRP034",129,0)
 ;=== Success
"RTN","RORRP034",130,0)
 Q 0
"RTN","RORRP037")
0^4^B15161292^B11518664
"RTN","RORRP037",1,0)
RORRP037 ;HIOFO/SG,VC - RPC: HEPC PATIENT SAVE/CANCEL ;1/29/09 9:53am
"RTN","RORRP037",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**2,8**;Feb 17, 2006;Build 8
"RTN","RORRP037",3,0)
 ;Per VHA Directive 10-92-142, this routine should not be modified.
"RTN","RORRP037",4,0)
 ;
"RTN","RORRP037",5,0)
 ; This routine uses the following IAs:
"RTN","RORRP037",6,0)
 ;
"RTN","RORRP037",7,0)
 ; #2053         FILE^DIC (supported)
"RTN","RORRP037",8,0)
 Q
"RTN","RORRP037",9,0)
 ;
"RTN","RORRP037",10,0)
 ;***** UPDATES THE PATIENT'S REGISTRY DATA
"RTN","RORRP037",11,0)
 ; RPC: [RORHEPC PATIENT SAVE]
"RTN","RORRP037",12,0)
 ;
"RTN","RORRP037",13,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","RORRP037",14,0)
 ;               are returned to.
"RTN","RORRP037",15,0)
 ;
"RTN","RORRP037",16,0)
 ; REGIEN        Registry IEN
"RTN","RORRP037",17,0)
 ;
"RTN","RORRP037",18,0)
 ; PTIEN         IEN of the registry patient (DFN)
"RTN","RORRP037",19,0)
 ;
"RTN","RORRP037",20,0)
 ; [CANCEL]      Cancel the update and unlock the registry data
"RTN","RORRP037",21,0)
 ;
"RTN","RORRP037",22,0)
 ; .DATA         Reference to a local array that contains the data
"RTN","RORRP037",23,0)
 ;               in the same format as the output of the RORHEPC
"RTN","RORRP037",24,0)
 ;               PATIENT LOAD remote procedure. Only HEPC and LFV
"RTN","RORRP037",25,0)
 ;               segments are processed; the others are ignored.
"RTN","RORRP037",26,0)
 ; Revision for Patch 1.5*8 to add comments
"RTN","RORRP037",27,0)
 ;   In DATA array there will be a 3 piece record, formated as follows
"RTN","RORRP037",28,0)
 ; PC^STAT^COMMENT  If STAT is P then the COMMENT will be added. If
"RTN","RORRP037",29,0)
 ;                  STAT is C then the COMMENT will be a blank.
"RTN","RORRP037",30,0)
 ;
"RTN","RORRP037",31,0)
 ; Return Values:
"RTN","RORRP037",32,0)
 ;
"RTN","RORRP037",33,0)
 ; A negative value of the first "^"-piece of the RESULTS(0)
"RTN","RORRP037",34,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP037",35,0)
 ; details).
"RTN","RORRP037",36,0)
 ;
"RTN","RORRP037",37,0)
 ; Otherwise, zero is returned in the RESULTS(0).
"RTN","RORRP037",38,0)
 ;
"RTN","RORRP037",39,0)
SAVE(RESULTS,REGIEN,PTIEN,CANCEL,DATA) ;
"RTN","RORRP037",40,0)
 N IENS,LOCK,RC,RORERRDL,STAT,COMMENT
"RTN","RORRP037",41,0)
 D CLEAR^RORERR("SAVE^RORRP037",1)
"RTN","RORRP037",42,0)
 K RESULTS  S (RESULTS(0),RC)=0
"RTN","RORRP037",43,0)
 D
"RTN","RORRP037",44,0)
 . ;--- Registry IEN
"RTN","RORRP037",45,0)
 . I $G(REGIEN)'>0  D  Q
"RTN","RORRP037",46,0)
 . . S RC=$$ERROR^RORERR(-88,,,,"REGIEN",$G(REGIEN))
"RTN","RORRP037",47,0)
 . S REGIEN=+REGIEN
"RTN","RORRP037",48,0)
 . ;--- Patient IEN
"RTN","RORRP037",49,0)
 . I $G(PTIEN)'>0  D  Q
"RTN","RORRP037",50,0)
 . . S RC=$$ERROR^RORERR(-88,,,,"PTIEN",$G(PTIEN))
"RTN","RORRP037",51,0)
 . S PTIEN=+PTIEN
"RTN","RORRP037",52,0)
 . ;--- Get the IENS of the registry record
"RTN","RORRP037",53,0)
 . S IENS=$$PRRIEN^RORUTL01(PTIEN,REGIEN)_","
"RTN","RORRP037",54,0)
 . S:IENS>0 LOCK(798,IENS)=""
"RTN","RORRP037",55,0)
 . Q:$G(CANCEL)=1
"RTN","RORRP037",56,0)
 . ;--- Save the data
"RTN","RORRP037",57,0)
 . S RC=$$SAVE1(.IENS)
"RTN","RORRP037",58,0)
 . I '$D(LOCK)  S:IENS>0 LOCK(798,IENS)=""
"RTN","RORRP037",59,0)
 . S:RC>0 RESULTS(0)=RC
"RTN","RORRP037",60,0)
 ;
"RTN","RORRP037",61,0)
 ;--- Do not unlock the records if there are errors in the data
"RTN","RORRP037",62,0)
 ;    (positive value is returned by the $$SAVE1), since the user
"RTN","RORRP037",63,0)
 ;--- will have another chance to correct the data and save it.
"RTN","RORRP037",64,0)
 D:RC'>0 UNLOCK^RORLOCK(.LOCK)
"RTN","RORRP037",65,0)
 D:RC<0 RPCSTK^RORERR(.RESULTS,RC)
"RTN","RORRP037",66,0)
 Q
"RTN","RORRP037",67,0)
 ;
"RTN","RORRP037",68,0)
 ;***** INTERNAL ENTRY POINT THAT UPDATES THE REGISTRY DATA
"RTN","RORRP037",69,0)
 ;
"RTN","RORRP037",70,0)
 ; IENS798       IENS of the registry record in the file #798
"RTN","RORRP037",71,0)
 ;
"RTN","RORRP037",72,0)
 ; Return Values:
"RTN","RORRP037",73,0)
 ;       <0  Error code
"RTN","RORRP037",74,0)
 ;        0  Ok
"RTN","RORRP037",75,0)
 ;
"RTN","RORRP037",76,0)
SAVE1(IENS798) ;
"RTN","RORRP037",77,0)
 N IENS,LFIEN,LFV,RC,RDI,REGNAME,RORFDA,RORMSG,SEG,TMP
"RTN","RORRP037",78,0)
 ;
"RTN","RORRP037",79,0)
 ;=== Add the patient to the registry if necessary
"RTN","RORRP037",80,0)
 I IENS798'>0  S RC=0  D  Q:RC<0 RC
"RTN","RORRP037",81,0)
 . S REGNAME=$P($$REGNAME^RORUTL01(REGIEN),U)
"RTN","RORRP037",82,0)
 . ;--- Add the patient to the registry
"RTN","RORRP037",83,0)
 . S RC=$$ADDPAT^RORUPD06(PTIEN,REGNAME)  Q:RC<0
"RTN","RORRP037",84,0)
 . ;--- Get the IENS of the registry record
"RTN","RORRP037",85,0)
 . S IENS798=$$PRRIEN^RORUTL01(PTIEN,REGIEN)_","
"RTN","RORRP037",86,0)
 . S:IENS798'>0 RC=$$ERROR^RORERR(-97,,,PTIEN,REGNAME)
"RTN","RORRP037",87,0)
 ;
"RTN","RORRP037",88,0)
 ;=== Prepare the data
"RTN","RORRP037",89,0)
 N LFCNT ;added 'new' statement
"RTN","RORRP037",90,0)
 S (LFCNT,RDI,RC)=0
"RTN","RORRP037",91,0)
 F  S RDI=$O(DATA(RDI))  Q:RDI'>0  D  Q:RC
"RTN","RORRP037",92,0)
 . S SEG=$P(DATA(RDI),U)
"RTN","RORRP037",93,0)
 . ;--- Registry data
"RTN","RORRP037",94,0)
 . I SEG="HEPC"  D  Q
"RTN","RORRP037",95,0)
 . . ; Insert code here if/when necessary
"RTN","RORRP037",96,0)
 . ;--- Local field values
"RTN","RORRP037",97,0)
 . I SEG="LFV"  D  Q
"RTN","RORRP037",98,0)
 . . S LFIEN=+$P(DATA(RDI),U,3)
"RTN","RORRP037",99,0)
 . . S:LFIEN>0 LFV(LFIEN)=DATA(RDI)
"RTN","RORRP037",100,0)
 . ;--- If there is a comment for a Pending Patient
"RTN","RORRP037",101,0)
 . I SEG="PC" D  Q
"RTN","RORRP037",102,0)
 . . S STAT=$P(DATA(RDI),U,2)
"RTN","RORRP037",103,0)
 . . S COMMENT=$P(DATA(RDI),U,3)
"RTN","RORRP037",104,0)
 Q:RC RC
"RTN","RORRP037",105,0)
 ;
"RTN","RORRP037",106,0)
 ;=== Confirm the pending patient
"RTN","RORRP037",107,0)
 ;D:$$GET1^DIQ(798,IENS798,3,"I",,"RORMSG")=4
"RTN","RORRP037",108,0)
 I CANCEL=0 D
"RTN","RORRP037",109,0)
 . ;--- Do not clear the DON'T SEND flag for 'test' patients
"RTN","RORRP037",110,0)
 . S:'$$TESTPAT^RORUTL01(PTIEN) RORFDA(798,IENS798,11)="@"
"RTN","RORRP037",111,0)
 . ;--- Change the STATUS from 'Pending' to 'Active'
"RTN","RORRP037",112,0)
 . S RORFDA(798,IENS798,3)=0
"RTN","RORRP037",113,0)
 . ;--- Delete any comment fields
"RTN","RORRP037",114,0)
 . S RORFDA(798,IENS798,12)=" "
"RTN","RORRP037",115,0)
 ;
"RTN","RORRP037",116,0)
 ;=== Update local fields
"RTN","RORRP037",117,0)
 ;S RC=$$UPDLFV^RORUTL19(IENS798,.LFV)  Q:RC<0 RC
"RTN","RORRP037",118,0)
 S RC=$$UPDLFV^RORUTL19(IENS798,.LFV)
"RTN","RORRP037",119,0)
 S:RC RORFDA(798,IENS798,5)=1  ; UPDATE LOCAL REGISTRY DATA
"RTN","RORRP037",120,0)
 ;=== Add the COMMENT field to file 798 for pending patients
"RTN","RORRP037",121,0)
 I STAT="P" S RORFDA(798,IENS798,12)=$G(COMMENT)
"RTN","RORRP037",122,0)
 ;
"RTN","RORRP037",123,0)
 ;=== Update the record(s)
"RTN","RORRP037",124,0)
 I $D(RORFDA)>1  D  Q:RC<0 RC
"RTN","RORRP037",125,0)
 . K RORMSG D FILE^DIE(,"RORFDA","RORMSG")
"RTN","RORRP037",126,0)
 . ;S:$G(DIERR) RC=$$DBS^RORERR("RORMSG",-9,,PTIEN,798,IENS798)
"RTN","RORRP037",127,0)
 . S:$G(RORMSG("DIERR")) RC=$$DBS^RORERR("RORMSG",-9,,PTIEN,798,IENS798)
"RTN","RORRP037",128,0)
 ;
"RTN","RORRP037",129,0)
 ;=== Success
"RTN","RORRP037",130,0)
 Q 0
"RTN","RORTSK13")
0^5^B47863947^B43389000
"RTN","RORTSK13",1,0)
RORTSK13 ;HIOFO/SG,VAC - PARSER FOR REPORT PARAMETERS ;4/7/09 2:05pm
"RTN","RORTSK13",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORTSK13",3,0)
 ;
"RTN","RORTSK13",4,0)
 ; Modified March 2009 to support ICD9FILT parameter passed in
"RTN","RORTSK13",5,0)
 ;
"RTN","RORTSK13",6,0)
 ; This routine uses the following IAs:
"RTN","RORTSK13",7,0)
 ;
"RTN","RORTSK13",8,0)
 ; #1995         $$CODEN^ICPTCOD (supported)
"RTN","RORTSK13",9,0)
 ; #3990         $$CODEN^ICDCODE (supported)
"RTN","RORTSK13",10,0)
 ; #4149         EN^MXMLPRSE (supported)
"RTN","RORTSK13",11,0)
 ;
"RTN","RORTSK13",12,0)
 ; RORXML -------------- DESCRIPTOR FOR THE XML PARSING
"RTN","RORTSK13",13,0)
 ;
"RTN","RORTSK13",14,0)
 ; RORXML(
"RTN","RORTSK13",15,0)
 ;
"RTN","RORTSK13",16,0)
 ;   "ERR")              Number of parsing errors
"RTN","RORTSK13",17,0)
 ;
"RTN","RORTSK13",18,0)
 ;   "PATH")             Path to the current XML tag
"RTN","RORTSK13",19,0)
 ;
"RTN","RORTSK13",20,0)
 ;   "RXGRP")            Name of the current drug group
"RTN","RORTSK13",21,0)
 ;
"RTN","RORTSK13",22,0)
 ;   "TI")               Number of the current text line of
"RTN","RORTSK13",23,0)
 ;                       the current tag value
"RTN","RORTSK13",24,0)
 ;
"RTN","RORTSK13",25,0)
 Q
"RTN","RORTSK13",26,0)
 ;
"RTN","RORTSK13",27,0)
 ;***** START DOCUMENT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",28,0)
DOCSTART ;
"RTN","RORTSK13",29,0)
 S RORXML("PATH")="",RORXML("ERR")=0
"RTN","RORTSK13",30,0)
 K RORXML("RXGRP")
"RTN","RORTSK13",31,0)
 Q
"RTN","RORTSK13",32,0)
 ;
"RTN","RORTSK13",33,0)
 ;***** DUMMY CALLBACKS FOR THE SAX PARSER
"RTN","RORTSK13",34,0)
DUMMY(DUMMY1,DUMMY2,DUMMY3) ;
"RTN","RORTSK13",35,0)
DUMMY1 Q
"RTN","RORTSK13",36,0)
 ;
"RTN","RORTSK13",37,0)
 ;***** END ELEMENT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",38,0)
 ;
"RTN","RORTSK13",39,0)
 ; ELMT          Name of the element
"RTN","RORTSK13",40,0)
 ;
"RTN","RORTSK13",41,0)
ELEND(ELMT) ;
"RTN","RORTSK13",42,0)
 ;--- Reset the drug group name in the end of the group
"RTN","RORTSK13",43,0)
 K:RORXML("PATH")="PARAMS,DRUGS,GROUP" RORXML("RXGRP")
"RTN","RORTSK13",44,0)
 ;--- Reset the ICD-9 group name in the end of the group
"RTN","RORTSK13",45,0)
 K:RORXML("PATH")="PARAMS,ICD9LST,GROUP" RORXML("ICD9GRP")
"RTN","RORTSK13",46,0)
 K:RORXML("PATH")="PARAMS,ICD9FILT,GROUP" RORXML("ICD9GRP")
"RTN","RORTSK13",47,0)
 ;--- Update the current element path
"RTN","RORTSK13",48,0)
 S RORXML("PATH")=$P(RORXML("PATH"),",",1,$L(RORXML("PATH"),",")-1)
"RTN","RORTSK13",49,0)
 Q
"RTN","RORTSK13",50,0)
 ;
"RTN","RORTSK13",51,0)
 ;***** START DOCUMENT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",52,0)
 ;
"RTN","RORTSK13",53,0)
 ; ELMT          Name of the element
"RTN","RORTSK13",54,0)
 ; .ATTR         List of attributes and their values
"RTN","RORTSK13",55,0)
 ;
"RTN","RORTSK13",56,0)
ELSTART(ELMT,ATTR) ;
"RTN","RORTSK13",57,0)
 N GROUP,ID,IEN,ITEM,LIST,LVL,RC,SECTION,TMP
"RTN","RORTSK13",58,0)
 ;--- Update the current element path
"RTN","RORTSK13",59,0)
 S RORXML("PATH")=RORXML("PATH")_$S(RORXML("PATH")'="":",",1:"")_ELMT
"RTN","RORTSK13",60,0)
 S RORXML("TI")=1
"RTN","RORTSK13",61,0)
 ;--- Ignore everything except parameters
"RTN","RORTSK13",62,0)
 Q:$P(RORXML("PATH"),",")'="PARAMS"
"RTN","RORTSK13",63,0)
 S LVL=$L(RORXML("PATH"),",")
"RTN","RORTSK13",64,0)
 ;
"RTN","RORTSK13",65,0)
 ;=== Store 3-level lists
"RTN","RORTSK13",66,0)
 I LVL=5  D  Q
"RTN","RORTSK13",67,0)
 . S LIST=$P(RORXML("PATH"),",",LVL-3,LVL-1)
"RTN","RORTSK13",68,0)
 . ;--- Medications and drug classes
"RTN","RORTSK13",69,0)
 . I $P(LIST,",",1,2)="DRUGS,GROUP"  D  Q
"RTN","RORTSK13",70,0)
 . . S GROUP=$G(RORXML("RXGRP"))  Q:GROUP=""
"RTN","RORTSK13",71,0)
 . . S SECTION=$P(LIST,",",3)     Q:SECTION=""
"RTN","RORTSK13",72,0)
 . . S ID=$G(ATTR("ID"))          Q:ID=""
"RTN","RORTSK13",73,0)
 . . S RORTSK("PARAMS","DRUGS","G",GROUP,SECTION,ID)=$G(ATTR("CODE"))
"RTN","RORTSK13",74,0)
 ;
"RTN","RORTSK13",75,0)
 ;=== Store 2-level lists
"RTN","RORTSK13",76,0)
 I LVL=4  D  Q
"RTN","RORTSK13",77,0)
 . S LIST=$P(RORXML("PATH"),",",LVL-2,LVL-1)
"RTN","RORTSK13",78,0)
 . ;--- ICD-9 diagnosis or procedure codes
"RTN","RORTSK13",79,0)
 . I LIST="ICD9LST,GROUP"  D  Q
"RTN","RORTSK13",80,0)
 . . S GROUP=$G(RORXML("ICD9GRP"))  Q:GROUP=""
"RTN","RORTSK13",81,0)
 . . S ID=$G(ATTR("ID"))            Q:ID=""
"RTN","RORTSK13",82,0)
 . . S TMP=$S($G(RORTSK("PARAMS","ICD9LST","A","PROCMODE")):80.1,1:80)
"RTN","RORTSK13",83,0)
 . . S IEN=+$$CODEN^ICDCODE(ID,TMP)
"RTN","RORTSK13",84,0)
 . . S:IEN>0 RORTSK("PARAMS","ICD9LST","G",GROUP,"C",IEN)=ID
"RTN","RORTSK13",85,0)
 .;--- ICD9 codes
"RTN","RORTSK13",86,0)
 . I LIST="ICD9FILT,GROUP" D  Q
"RTN","RORTSK13",87,0)
 . . S GROUP=$G(RORXML("ICD9GRP"))  Q:GROUP=""
"RTN","RORTSK13",88,0)
 . . S ID=$G(ATTR("ID"))            Q:ID=""
"RTN","RORTSK13",89,0)
 . . S IEN=+$$CODEN^ICDCODE(ID,80)
"RTN","RORTSK13",90,0)
 . . S:IEN>0 RORTSK("PARAMS","ICD9FILT","G",GROUP,"C",IEN)=ID
"RTN","RORTSK13",91,0)
 ;
"RTN","RORTSK13",92,0)
 ;=== Store the lists
"RTN","RORTSK13",93,0)
 I LVL=3  D  Q
"RTN","RORTSK13",94,0)
 . S LIST=$P(RORXML("PATH"),",",LVL-1)
"RTN","RORTSK13",95,0)
 . ;--- List of ICD-9 codes
"RTN","RORTSK13",96,0)
 . I LIST="CPTLST"  D:ELMT="CPT"  Q
"RTN","RORTSK13",97,0)
 . . S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",98,0)
 . . S IEN=+$$CODEN^ICPTCOD(ID)
"RTN","RORTSK13",99,0)
 . . S:IEN>0 RORTSK("PARAMS",LIST,"C",IEN)=ID
"RTN","RORTSK13",100,0)
 . ;--- Name of the current drug group and its attributes
"RTN","RORTSK13",101,0)
 . I LIST="DRUGS"  D:ELMT="GROUP"  Q
"RTN","RORTSK13",102,0)
 . . S (RORXML("RXGRP"),ID)=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",103,0)
 . . M RORTSK("PARAMS","DRUGS","G",ID,"A")=ATTR
"RTN","RORTSK13",104,0)
 . . K RORTSK("PARAMS","DRUGS","G",ID,"A","ID")
"RTN","RORTSK13",105,0)
 . ;--- Name of the current ICD-9 group
"RTN","RORTSK13",106,0)
 . I (LIST="ICD9LST")!(LIST="ICD9FILT")  D:ELMT="GROUP"  Q
"RTN","RORTSK13",107,0)
 . . S RORXML("ICD9GRP")=$G(ATTR("ID"))
"RTN","RORTSK13",108,0)
 . ;--- List of ICD-9 codes
"RTN","RORTSK13",109,0)
 . ;I LIST="ICD9LST"  D:ELMT="ICD9"  Q
"RTN","RORTSK13",110,0)
 . ;. S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",111,0)
 . ;. S TMP=$S($G(RORTSK("PARAMS","ICD9LST","A","PROC")):80.1,1:80)
"RTN","RORTSK13",112,0)
 . ;. S IEN=+$$CODEN^ICDCODE(ID,TMP)
"RTN","RORTSK13",113,0)
 . ;. S:IEN>0 RORTSK("PARAMS",LIST,"C",IEN)=ID
"RTN","RORTSK13",114,0)
 . ;--- Lab tests
"RTN","RORTSK13",115,0)
 . I LIST="LABTESTS"  D:ELMT="LT"  Q
"RTN","RORTSK13",116,0)
 . . S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",117,0)
 . . S RORTSK("PARAMS","LABTESTS","C",ID)=""
"RTN","RORTSK13",118,0)
 . . S TMP=$G(ATTR("LOW"))
"RTN","RORTSK13",119,0)
 . . S:TMP'="" RORTSK("PARAMS","LABTESTS","C",ID,"L")=TMP
"RTN","RORTSK13",120,0)
 . . S TMP=$G(ATTR("HIGH"))
"RTN","RORTSK13",121,0)
 . . S:TMP'="" RORTSK("PARAMS","LABTESTS","C",ID,"H")=TMP
"RTN","RORTSK13",122,0)
 . ;--- Laboratory test ranges
"RTN","RORTSK13",123,0)
 . I LIST="LRGRANGES"  D:ELMT="LRGRANGE"  Q
"RTN","RORTSK13",124,0)
 . . S ID=$G(ATTR("ID"))  Q:'$G(ATTR("USE"))!(ID="")
"RTN","RORTSK13",125,0)
 . . S RORTSK("PARAMS",LIST,"C",ID)=""
"RTN","RORTSK13",126,0)
 . . S TMP=$G(ATTR("LOW"))
"RTN","RORTSK13",127,0)
 . . S:TMP'="" RORTSK("PARAMS",LIST,"C",ID,"L")=TMP
"RTN","RORTSK13",128,0)
 . . S TMP=$G(ATTR("HIGH"))
"RTN","RORTSK13",129,0)
 . . S:TMP'="" RORTSK("PARAMS",LIST,"C",ID,"H")=TMP
"RTN","RORTSK13",130,0)
 . ;--- "Include/Exclude" list processing
"RTN","RORTSK13",131,0)
 . I (LIST="LOCAL_FIELDS")!(LIST="OTHER_REGISTRIES")  D  Q
"RTN","RORTSK13",132,0)
 . . S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",133,0)
 . . S TMP=+$G(ATTR("MODE"))  ; 1 - Include; -1 - Exclude
"RTN","RORTSK13",134,0)
 . . S:TMP RORTSK("PARAMS",LIST,"C",ID)=TMP
"RTN","RORTSK13",135,0)
 . ;--- Default processing
"RTN","RORTSK13",136,0)
 . S TMP=","_LIST_","
"RTN","RORTSK13",137,0)
 . Q:'(",CLINICS,DIVISIONS,OPTIONAL_COLUMNS,PATIENTS,SELRULES,UTIL_TYPES,"[TMP)
"RTN","RORTSK13",138,0)
 . S ID=$G(ATTR("ID"))
"RTN","RORTSK13",139,0)
 . S:ID'="" RORTSK("PARAMS",LIST,"C",ID)=""
"RTN","RORTSK13",140,0)
 ;
"RTN","RORTSK13",141,0)
 ;=== Store the top-level attributes
"RTN","RORTSK13",142,0)
 I LVL=2  D  Q
"RTN","RORTSK13",143,0)
 . ;--- Date range(s)
"RTN","RORTSK13",144,0)
 . I ELMT?1"DATE_RANGE".1(1"_"1.N)  D  Q
"RTN","RORTSK13",145,0)
 . . N STDT,ENDT
"RTN","RORTSK13",146,0)
 . . S RC=$$DTRANGE^RORTSK14(.ATTR,.STDT,.ENDT)  Q:RC<0
"RTN","RORTSK13",147,0)
 . . S RORTSK("PARAMS",ELMT,"A","START")=STDT
"RTN","RORTSK13",148,0)
 . . S RORTSK("PARAMS",ELMT,"A","END")=ENDT
"RTN","RORTSK13",149,0)
 . ;--- Ignore internal nodes
"RTN","RORTSK13",150,0)
 . Q:ELMT="PANELS"
"RTN","RORTSK13",151,0)
 . ;--- Default processing
"RTN","RORTSK13",152,0)
 . M RORTSK("PARAMS",ELMT,"A")=ATTR
"RTN","RORTSK13",153,0)
 ;
"RTN","RORTSK13",154,0)
 ;--- Ignore everything else
"RTN","RORTSK13",155,0)
 Q
"RTN","RORTSK13",156,0)
 ;
"RTN","RORTSK13",157,0)
 ;***** TEXT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",158,0)
 ;
"RTN","RORTSK13",159,0)
 ; TXT           Line of unmarked text
"RTN","RORTSK13",160,0)
 ;
"RTN","RORTSK13",161,0)
ELTEXT(TXT) ;
"RTN","RORTSK13",162,0)
 N ITEM,LIST,LVL
"RTN","RORTSK13",163,0)
 S LVL=$L(RORXML("PATH"),",")
"RTN","RORTSK13",164,0)
 ;--- Store top-level values
"RTN","RORTSK13",165,0)
 I LVL=2  D  Q
"RTN","RORTSK13",166,0)
 . S ITEM=$P(RORXML("PATH"),",",LVL)
"RTN","RORTSK13",167,0)
 . S RORTSK("PARAMS",ITEM)=$G(RORTSK("PARAMS",ITEM))_TXT
"RTN","RORTSK13",168,0)
 ;--- Ignore everything else
"RTN","RORTSK13",169,0)
 Q
"RTN","RORTSK13",170,0)
 ;
"RTN","RORTSK13",171,0)
 ;***** ERROR CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",172,0)
 ;
"RTN","RORTSK13",173,0)
 ; .ERR          Reference to a local variable containing
"RTN","RORTSK13",174,0)
 ;               informations about the error
"RTN","RORTSK13",175,0)
 ;
"RTN","RORTSK13",176,0)
ERROR(ERR) ;
"RTN","RORTSK13",177,0)
 N ERRCODE,RORINFO,TMP
"RTN","RORTSK13",178,0)
 I ERR("SEV")  D
"RTN","RORTSK13",179,0)
 . S ERRCODE=-105,RORXML("ERR")=$G(RORXML("ERR"))+1
"RTN","RORTSK13",180,0)
 E  S ERRCODE=-104
"RTN","RORTSK13",181,0)
 ;--- Prepare message details
"RTN","RORTSK13",182,0)
 S RORINFO(1)=$TR(ERR("MSG"),U,"~")
"RTN","RORTSK13",183,0)
 S TMP=$P("Warning^Validation Error^Conformance Error",U,ERR("SEV")+1)
"RTN","RORTSK13",184,0)
 S RORINFO(2)=TMP_" in line #"_ERR("LIN")_" (pos#"_ERR("POS")_")"
"RTN","RORTSK13",185,0)
 S RORINFO(3)=$TR(ERR("XML"),$C(9,10,13)," ")
"RTN","RORTSK13",186,0)
 ;--- Record the error message
"RTN","RORTSK13",187,0)
 D ERROR^RORERR(ERRCODE,,.RORINFO)
"RTN","RORTSK13",188,0)
 Q
"RTN","RORTSK13",189,0)
 ;
"RTN","RORTSK13",190,0)
 ;***** PARSES AND PREPARES THE REPORT PARAMETERS
"RTN","RORTSK13",191,0)
 ;
"RTN","RORTSK13",192,0)
 ; .PARAMS       Reference to a local variable that contains report
"RTN","RORTSK13",193,0)
 ;               parameters in XML format. This variable is KILL'ed
"RTN","RORTSK13",194,0)
 ;               by this function.
"RTN","RORTSK13",195,0)
 ;
"RTN","RORTSK13",196,0)
 ; .RORTSK       Reference to a local variable that contains a task
"RTN","RORTSK13",197,0)
 ;               descriptor.
"RTN","RORTSK13",198,0)
 ;
"RTN","RORTSK13",199,0)
 ; Return Values:
"RTN","RORTSK13",200,0)
 ;       <0  Error code
"RTN","RORTSK13",201,0)
 ;        0  Ok
"RTN","RORTSK13",202,0)
 ;
"RTN","RORTSK13",203,0)
PARSEPRM(PARAMS,RORTSK) ;
"RTN","RORTSK13",204,0)
 K RORTSK("PARAMS")
"RTN","RORTSK13",205,0)
 Q:$D(PARAMS)<10 0
"RTN","RORTSK13",206,0)
 ;---
"RTN","RORTSK13",207,0)
 N CBK,RORSRC,RORSUBS,RORTMP,RORXML
"RTN","RORTSK13",208,0)
 S RORSRC=$$ALLOC^RORTMP()          ; Source buffer for XML
"RTN","RORTSK13",209,0)
 S RORTMP=$$ALLOC^RORTMP(.RORSUBS)  ; Temporary buffer
"RTN","RORTSK13",210,0)
 ;--- Copy the XML document into a global since the parser
"RTN","RORTSK13",211,0)
 ;--- cannot read it from a local variable
"RTN","RORTSK13",212,0)
 M @RORSRC=PARAMS  K PARAMS
"RTN","RORTSK13",213,0)
 ;--- Parse the parameters
"RTN","RORTSK13",214,0)
 S CBK("CHARACTERS")="ELTEXT^RORTSK13"
"RTN","RORTSK13",215,0)
 S CBK("COMMENT")="DUMMY^RORTSK13"
"RTN","RORTSK13",216,0)
 S CBK("DOCTYPE")="DUMMY^RORTSK13"
"RTN","RORTSK13",217,0)
 S CBK("ENDDOCUMENT")="DUMMY1^RORTSK13"
"RTN","RORTSK13",218,0)
 S CBK("ENDELEMENT")="ELEND^RORTSK13"
"RTN","RORTSK13",219,0)
 S CBK("ERROR")="ERROR^RORTSK13"
"RTN","RORTSK13",220,0)
 S CBK("EXTERNAL")="DUMMY^RORTSK13"
"RTN","RORTSK13",221,0)
 S CBK("NOTATION")="DUMMY^RORTSK13"
"RTN","RORTSK13",222,0)
 S CBK("PI")="DUMMY^RORTSK13"
"RTN","RORTSK13",223,0)
 S CBK("STARTDOCUMENT")="DOCSTART^RORTSK13"
"RTN","RORTSK13",224,0)
 S CBK("STARTELEMENT")="ELSTART^RORTSK13"
"RTN","RORTSK13",225,0)
 D EN^MXMLPRSE(RORSRC,.CBK,"W")
"RTN","RORTSK13",226,0)
 ;--- Cleanup
"RTN","RORTSK13",227,0)
 D FREE^RORTMP(RORTMP),FREE^RORTMP(RORSRC)
"RTN","RORTSK13",228,0)
 Q $S($G(RORXML("ERR"))>0:$$ERROR^RORERR(-106),1:0)
"RTN","RORX001")
0^6^B34927586^B28863901
"RTN","RORX001",1,0)
RORX001 ;HOIFO/SG,VAC - LIST OF REGISTRY PATIENTS ;4/16/09 11:53am
"RTN","RORX001",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX001",3,0)
 ;
"RTN","RORX001",4,0)
 ; This routine uses the following IAs:
"RTN","RORX001",5,0)
 ;
"RTN","RORX001",6,0)
 ; #2051         LIST^DIC (supported)
"RTN","RORX001",7,0)
 ; #2056         GET1^DIQ, GETS^DIQ (supported)
"RTN","RORX001",8,0)
 ; #10061        DEM^VADPT (supported)
"RTN","RORX001",9,0)
 ;
"RTN","RORX001",10,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX001",11,0)
 ;    or Exclude
"RTN","RORX001",12,0)
 Q
"RTN","RORX001",13,0)
 ;
"RTN","RORX001",14,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX001",15,0)
 ;
"RTN","RORX001",16,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX001",17,0)
 ;
"RTN","RORX001",18,0)
 ; Return Values:
"RTN","RORX001",19,0)
 ;       <0  Error code
"RTN","RORX001",20,0)
 ;        0  Ok
"RTN","RORX001",21,0)
 ;
"RTN","RORX001",22,0)
HEADER(PARTAG) ;
"RTN","RORX001",23,0)
 N COL,COLUMNS,HEADER,TMP
"RTN","RORX001",24,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX001",25,0)
 S COLUMNS=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORX001",26,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"NAME","PATIENTS")
"RTN","RORX001",27,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"HEADER","1")
"RTN","RORX001",28,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"FOOTER","1")
"RTN","RORX001",29,0)
 S RORFLDS=".01"
"RTN","RORX001",30,0)
 ;--- Required columns
"RTN","RORX001",31,0)
 F COL="#","NAME"  D
"RTN","RORX001",32,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX001",33,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",COL)
"RTN","RORX001",34,0)
 ;--- Additional columns
"RTN","RORX001",35,0)
 F COL="DOD","CSSN","LAST4","SELRULES","SELDT","CONFDT"  D
"RTN","RORX001",36,0)
 . Q:'$$OPTCOL^RORXU006(COL)
"RTN","RORX001",37,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX001",38,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",COL)
"RTN","RORX001",39,0)
 ;---
"RTN","RORX001",40,0)
 S:$$OPTCOL^RORXU006("CONFDT") RORFLDS=RORFLDS_";2"
"RTN","RORX001",41,0)
 S:$$OPTCOL^RORXU006("SELDT") RORFLDS=RORFLDS_";3.2"
"RTN","RORX001",42,0)
 Q 0
"RTN","RORX001",43,0)
 ;
"RTN","RORX001",44,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX001",45,0)
 ;
"RTN","RORX001",46,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX001",47,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX001",48,0)
 ;
"RTN","RORX001",49,0)
 ; Return Values:
"RTN","RORX001",50,0)
 ;       <0  Error code
"RTN","RORX001",51,0)
 ;        0  Ok
"RTN","RORX001",52,0)
 ;
"RTN","RORX001",53,0)
PATIENT(IENS,PARTAG) ;
"RTN","RORX001",54,0)
 N DFN,IATIME,NAME,RC,RORBUF,RORMSG,TMP,VA,VADM,VAHOW,VAROOT
"RTN","RORX001",55,0)
 K RORMSG D GETS^DIQ(798,IENS,RORFLDS,"I","RORBUF","RORMSG")
"RTN","RORX001",56,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX001",57,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX001",58,0)
 S DFN=$G(RORBUF(798,IENS,.01,"I"))
"RTN","RORX001",59,0)
 ;--- Load the demographic data
"RTN","RORX001",60,0)
 D DEM^VADPT
"RTN","RORX001",61,0)
 ;--- The <PATIENT> tag
"RTN","RORX001",62,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,DFN)
"RTN","RORX001",63,0)
 ;--- Patient Name
"RTN","RORX001",64,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX001",65,0)
 ;--- Date of Death
"RTN","RORX001",66,0)
 D:$$OPTCOL^RORXU006("DOD")
"RTN","RORX001",67,0)
 . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX001",68,0)
 . D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX001",69,0)
 ;--- Coded SSN
"RTN","RORX001",70,0)
 D:$$OPTCOL^RORXU006("CSSN")
"RTN","RORX001",71,0)
 . S TMP=$$XOR^RORUTL03($P(VADM(2),U))
"RTN","RORX001",72,0)
 . D ADDVAL^RORTSK11(RORTSK,"CSSN",TMP,PTAG,1)
"RTN","RORX001",73,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX001",74,0)
 D:$$OPTCOL^RORXU006("LAST4")
"RTN","RORX001",75,0)
 . D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX001",76,0)
 ;--- Selection Rules
"RTN","RORX001",77,0)
 I $$OPTCOL^RORXU006("SELRULES")  D  Q:RC<0 RC
"RTN","RORX001",78,0)
 . S RC=$$SELRULES(IENS,PTAG)
"RTN","RORX001",79,0)
 ;--- Date Selected for the Registry
"RTN","RORX001",80,0)
 D:$$OPTCOL^RORXU006("SELDT")
"RTN","RORX001",81,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF(798,IENS,3.2,"I"))\1)
"RTN","RORX001",82,0)
 . D ADDVAL^RORTSK11(RORTSK,"SELDT",TMP,PTAG,1)
"RTN","RORX001",83,0)
 ;--- Date Confirmed in the Registry
"RTN","RORX001",84,0)
 D:$$OPTCOL^RORXU006("CONFDT")
"RTN","RORX001",85,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF(798,IENS,2,"I"))\1)
"RTN","RORX001",86,0)
 . D ADDVAL^RORTSK11(RORTSK,"CONFDT",TMP,PTAG,1)
"RTN","RORX001",87,0)
 ;--- Patient IEN (DFN)
"RTN","RORX001",88,0)
 ;S:$$OPTCOL^RORXU006("DFN") TMP=$$ADDVAL^RORTSK11(RORTSK,"DFN",DFN,PTAG)
"RTN","RORX001",89,0)
 ;--- Integration Control Number
"RTN","RORX001",90,0)
 ;D:$$OPTCOL^RORXU006("ICN")
"RTN","RORX001",91,0)
 ;. S TMP=$$ICN^RORUTL02(DFN)
"RTN","RORX001",92,0)
 ;. D ADDVAL^RORTSK11(RORTSK,"ICN",$P(TMP,"V"),PTAG,1)
"RTN","RORX001",93,0)
 Q 0
"RTN","RORX001",94,0)
 ;
"RTN","RORX001",95,0)
 ;***** COMPILES A LIST OF REGISTRY PATIENTS
"RTN","RORX001",96,0)
 ; REPORT CODE: 001
"RTN","RORX001",97,0)
 ;
"RTN","RORX001",98,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX001",99,0)
 ;
"RTN","RORX001",100,0)
 ; Return Values:
"RTN","RORX001",101,0)
 ;       <0  Error code
"RTN","RORX001",102,0)
 ;        0  Ok
"RTN","RORX001",103,0)
 ;
"RTN","RORX001",104,0)
REGPTLST(RORTSK) ;
"RTN","RORX001",105,0)
 N RORFLDS       ; Fields to load from the file #798
"RTN","RORX001",106,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX001",107,0)
 N RORREG        ; Registry IEN
"RTN","RORX001",108,0)
 ;
"RTN","RORX001",109,0)
 N BODY,CNT,ECNT,IEN,IENS,MODE,PTNAME,RC,REPORT,SFLAGS,TMP,XREFNODE
"RTN","RORX001",110,0)
 N RCC,FLAG
"RTN","RORX001",111,0)
 ;--- Root node of the report
"RTN","RORX001",112,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX001",113,0)
 Q:REPORT<0 REPORT
"RTN","RORX001",114,0)
 ;
"RTN","RORX001",115,0)
 ;--- Get and prepare the report parameters
"RTN","RORX001",116,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX001",117,0)
 S RC=$$PARAMS^RORXU002(.RORTSK,REPORT,,,.SFLAGS)  Q:RC<0 RC
"RTN","RORX001",118,0)
 S SFLAGS=$TR(SFLAGS,"DG")
"RTN","RORX001",119,0)
 S:'$$PARAM^RORTSK01("PATIENTS","CONFIRMED") SFLAGS=SFLAGS_"C"
"RTN","RORX001",120,0)
 S:'$$PARAM^RORTSK01("PATIENTS","PENDING") SFLAGS=SFLAGS_"G"
"RTN","RORX001",121,0)
 D ADDVAL^RORTSK11(RORTSK,"TYPE",SFLAGS,REPORT)
"RTN","RORX001",122,0)
 ;
"RTN","RORX001",123,0)
 ;--- Initialize constants and variables
"RTN","RORX001",124,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX001",125,0)
 S ECNT=0,XREFNODE=$NA(^RORDATA(798,"ARP",RORREG_"#"))
"RTN","RORX001",126,0)
 ;
"RTN","RORX001",127,0)
 ;--- The report header and list of patients
"RTN","RORX001",128,0)
 S RC=$$HEADER(REPORT)  Q:RC<0 RC
"RTN","RORX001",129,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX001",130,0)
 D ADDATTR^RORTSK11(RORTSK,BODY,"TABLE","PATIENTS")
"RTN","RORX001",131,0)
 Q:BODY<0 BODY
"RTN","RORX001",132,0)
 ;
"RTN","RORX001",133,0)
 ;--- Browse through the registry records
"RTN","RORX001",134,0)
 S PTNAME="",(CNT,RC)=0
"RTN","RORX001",135,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX001",136,0)
 F  S PTNAME=$O(@XREFNODE@(PTNAME))  Q:PTNAME=""  D  Q:RC<0
"RTN","RORX001",137,0)
 . S IEN=0
"RTN","RORX001",138,0)
 . F  S IEN=$O(@XREFNODE@(PTNAME,IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX001",139,0)
 . . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX001",140,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX001",141,0)
 . . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX001",142,0)
 . . ;--- Check if the patient should be skipped
"RTN","RORX001",143,0)
 . . Q:$$SKIP^RORXU005(IEN,SFLAGS)
"RTN","RORX001",144,0)
 . .;--- Check the patient against the ICD9 Filter
"RTN","RORX001",145,0)
 . . S DFN=$$PTIEN^RORUTL01(+IENS)
"RTN","RORX001",146,0)
 . . S RCC=0
"RTN","RORX001",147,0)
 . . I FLAG'="ALL" D
"RTN","RORX001",148,0)
 . . . S RCC=$$ICD^RORXU010(DFN,RORREG)
"RTN","RORX001",149,0)
 . . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX001",150,0)
 . . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX001",151,0)
 . .;--- End of filter check
"RTN","RORX001",152,0)
 . . ;--- Process the registry record
"RTN","RORX001",153,0)
 . . I $$PATIENT(IENS,BODY)<0  S ECNT=ECNT+1  Q
"RTN","RORX001",154,0)
 ;---
"RTN","RORX001",155,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX001",156,0)
 ;
"RTN","RORX001",157,0)
 ;***** ADDS THE SELECTION RULES TO THE REPORT
"RTN","RORX001",158,0)
 ;
"RTN","RORX001",159,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX001",160,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX001",161,0)
 ;
"RTN","RORX001",162,0)
 ; Return Values:
"RTN","RORX001",163,0)
 ;       <0  Error code
"RTN","RORX001",164,0)
 ;        0  Ok
"RTN","RORX001",165,0)
 ;
"RTN","RORX001",166,0)
SELRULES(IENS,PARTAG) ;
"RTN","RORX001",167,0)
 N CNT,I,RORBUF,RORMSG,RT,SRLTAG,TMP
"RTN","RORX001",168,0)
 ;--- Load the list of selection rules
"RTN","RORX001",169,0)
 K RORMSG D LIST^DIC(798.01,","_IENS,"@;.01I;1I",,,,,"B",,,"RORBUF","RORMSG")
"RTN","RORX001",170,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORX001",171,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORX001",172,0)
 ;--- The <SELRULES> ... </SELRULES> tags
"RTN","RORX001",173,0)
 S SRLTAG=$$ADDVAL^RORTSK11(RORTSK,"SELRULES",,PARTAG)
"RTN","RORX001",174,0)
 ;--- Add the selection rules to the report
"RTN","RORX001",175,0)
 S I="",CNT=0
"RTN","RORX001",176,0)
 F  S I=$O(RORBUF("DILIST","ID",I))  Q:I=""  D
"RTN","RORX001",177,0)
 . S RT=$$ADDVAL^RORTSK11(RORTSK,"RULE",,SRLTAG),CNT=CNT+1
"RTN","RORX001",178,0)
 . S TMP=$G(RORBUF("DILIST","ID",I,.01))
"RTN","RORX001",179,0)
 . K RORMSG S TMP=$$GET1^DIQ(798.2,TMP_",",4,,,"RORMSG")
"RTN","RORX001",180,0)
 . ;Q:$G(DIERR)!(TMP="")
"RTN","RORX001",181,0)
 . Q:$G(RORMSG("DIERR"))!(TMP="")
"RTN","RORX001",182,0)
 . D ADDATTR^RORTSK11(RORTSK,RT,"DESCR",TMP)
"RTN","RORX001",183,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF("DILIST","ID",I,1))\1)
"RTN","RORX001",184,0)
 . D:TMP'="" ADDATTR^RORTSK11(RORTSK,RT,"DATE",TMP)
"RTN","RORX001",185,0)
 ;--- Add the default item if no selection rules have been found
"RTN","RORX001",186,0)
 D:CNT'>0
"RTN","RORX001",187,0)
 . S RT=$$ADDVAL^RORTSK11(RORTSK,"RULE",,SRLTAG)
"RTN","RORX001",188,0)
 . D ADDATTR^RORTSK11(RORTSK,RT,"DESCR","Manual Entry")
"RTN","RORX001",189,0)
 Q 0
"RTN","RORX002")
0^7^B23097652^B20071176
"RTN","RORX002",1,0)
RORX002 ;HOIFO/SG,VAC - CURRENT INPATIENT LIST ;4/7/09 2:06pm
"RTN","RORX002",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORX002",3,0)
 ;
"RTN","RORX002",4,0)
 ; This routine uses the following IAs:
"RTN","RORX002",5,0)
 ;
"RTN","RORX002",6,0)
 ; #10061        51^VADPT (supported)
"RTN","RORX002",7,0)
 ;
"RTN","RORX002",8,0)
 ; Routine modified March 2009 for ICD9 filter for INCLUDE or EXCLUDE
"RTN","RORX002",9,0)
 ;
"RTN","RORX002",10,0)
 Q
"RTN","RORX002",11,0)
 ;
"RTN","RORX002",12,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX002",13,0)
 ;
"RTN","RORX002",14,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX002",15,0)
 ;
"RTN","RORX002",16,0)
 ; Return Values:
"RTN","RORX002",17,0)
 ;       <0  Error code
"RTN","RORX002",18,0)
 ;        0  Ok
"RTN","RORX002",19,0)
 ;
"RTN","RORX002",20,0)
HEADER(PARTAG) ;
"RTN","RORX002",21,0)
 ;;PATIENTS(#,NAME,LAST4,WARD,ROOM-BED)
"RTN","RORX002",22,0)
 ;
"RTN","RORX002",23,0)
 N HEADER,RC
"RTN","RORX002",24,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX002",25,0)
 Q:HEADER<0 HEADER
"RTN","RORX002",26,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX002",HEADER)
"RTN","RORX002",27,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX002",28,0)
 ;
"RTN","RORX002",29,0)
 ;***** COMPILES THE "CURRENT INPATIENT LIST"
"RTN","RORX002",30,0)
 ; REPORT CODE: 002
"RTN","RORX002",31,0)
 ;
"RTN","RORX002",32,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX002",33,0)
 ;
"RTN","RORX002",34,0)
 ; Return Values:
"RTN","RORX002",35,0)
 ;       <0  Error code
"RTN","RORX002",36,0)
 ;        0  Ok
"RTN","RORX002",37,0)
 ;
"RTN","RORX002",38,0)
INPTLST(RORTSK) ;
"RTN","RORX002",39,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX002",40,0)
 N RORREG        ; Registry IEN
"RTN","RORX002",41,0)
 N RORTMP        ; Closed root of the temporary buffer
"RTN","RORX002",42,0)
 ;
"RTN","RORX002",43,0)
 N BODY,ECNT,INPCNT,RC,REPORT,SFLAGS,TMP
"RTN","RORX002",44,0)
 ;--- Root node of the report
"RTN","RORX002",45,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX002",46,0)
 Q:REPORT<0 REPORT
"RTN","RORX002",47,0)
 ;
"RTN","RORX002",48,0)
 ;--- Get and prepare the report parameters
"RTN","RORX002",49,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX002",50,0)
 S RC=$$PARAMS^RORXU002(.RORTSK,REPORT,,,.SFLAGS)  Q:RC<0 RC
"RTN","RORX002",51,0)
 ;
"RTN","RORX002",52,0)
 ;--- Initialize constants and variables
"RTN","RORX002",53,0)
 S ECNT=0
"RTN","RORX002",54,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX002",55,0)
 ;
"RTN","RORX002",56,0)
 ;--- Report header
"RTN","RORX002",57,0)
 S RC=$$HEADER(REPORT)  Q:RC<0 RC
"RTN","RORX002",58,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORX002",59,0)
 D
"RTN","RORX002",60,0)
 . ;--- Query the registry
"RTN","RORX002",61,0)
 . D TPPSETUP^RORTSK01(50)
"RTN","RORX002",62,0)
 . S RC=$$QUERY(.INPCNT,SFLAGS)
"RTN","RORX002",63,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX002",64,0)
 . ;--- Generate the list of patients
"RTN","RORX002",65,0)
 . D TPPSETUP^RORTSK01(50)
"RTN","RORX002",66,0)
 . S RC=$$PTLIST(REPORT,INPCNT)
"RTN","RORX002",67,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX002",68,0)
 ;
"RTN","RORX002",69,0)
 ;--- Cleanup
"RTN","RORX002",70,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORX002",71,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX002",72,0)
 ;
"RTN","RORX002",73,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX002",74,0)
 ;
"RTN","RORX002",75,0)
 ; NODE          Closed root of the patient's node in the buffer
"RTN","RORX002",76,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX002",77,0)
 ;
"RTN","RORX002",78,0)
 ; Return Values:
"RTN","RORX002",79,0)
 ;       <0  Error code
"RTN","RORX002",80,0)
 ;        0  Ok
"RTN","RORX002",81,0)
 ;
"RTN","RORX002",82,0)
PATIENT(NODE,PARTAG) ;
"RTN","RORX002",83,0)
 N IEN,NAME,PATIEN,PTAG,PTBUF,RC,TMP
"RTN","RORX002",84,0)
 S PTBUF=@NODE,PATIEN=$P(PTBUF,U,2)
"RTN","RORX002",85,0)
 Q:PATIEN'>0 0
"RTN","RORX002",86,0)
 ;--- The <PATIENT> tag
"RTN","RORX002",87,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,PATIEN)
"RTN","RORX002",88,0)
 ;--- Patient data
"RTN","RORX002",89,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",$QS(NODE,4),PTAG,1)
"RTN","RORX002",90,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",$QS(NODE,5),PTAG,2)
"RTN","RORX002",91,0)
 S TMP=$$DATE^RORXU002($P(PTBUF,U,4)\1)
"RTN","RORX002",92,0)
 ;D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX002",93,0)
 D ADDVAL^RORTSK11(RORTSK,"WARD",$QS(NODE,3),PTAG,1)
"RTN","RORX002",94,0)
 D ADDVAL^RORTSK11(RORTSK,"ROOM-BED",$P(PTBUF,U,3),PTAG,1)
"RTN","RORX002",95,0)
 Q 0
"RTN","RORX002",96,0)
 ;
"RTN","RORX002",97,0)
 ;***** GENERATES THE LIST OF PATIENTS
"RTN","RORX002",98,0)
 ;
"RTN","RORX002",99,0)
 ; REPORT        IEN of the <REPORT> node
"RTN","RORX002",100,0)
 ; INPCNT        Number of inpatients
"RTN","RORX002",101,0)
 ;
"RTN","RORX002",102,0)
 ; Return Values:
"RTN","RORX002",103,0)
 ;       <0  Error code
"RTN","RORX002",104,0)
 ;        0  Ok
"RTN","RORX002",105,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX002",106,0)
 ;
"RTN","RORX002",107,0)
PTLIST(REPORT,INPCNT) ;
"RTN","RORX002",108,0)
 N BODY,CNT,ECNT,FLT,FLTLEN,NODE,RC,TCNT,TMP
"RTN","RORX002",109,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX002",110,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX002",111,0)
 Q:BODY<0 BODY
"RTN","RORX002",112,0)
 D ADDATTR^RORTSK11(RORTSK,BODY,"TABLE","PATIENTS")
"RTN","RORX002",113,0)
 D:$D(@RORTMP)>1
"RTN","RORX002",114,0)
 . S NODE=RORTMP
"RTN","RORX002",115,0)
 . S FLTLEN=$L(NODE)-1,FLT=$E(NODE,1,FLTLEN)
"RTN","RORX002",116,0)
 . F  S NODE=$Q(@NODE)  Q:$E(NODE,1,FLTLEN)'=FLT  D  Q:RC<0
"RTN","RORX002",117,0)
 . . S TMP=$S(INPCNT>0:CNT/INPCNT,1:"")
"RTN","RORX002",118,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX002",119,0)
 . . S CNT=CNT+1
"RTN","RORX002",120,0)
 . . I $$PATIENT(NODE,BODY)<0  S ECNT=ECNT+1  Q
"RTN","RORX002",121,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX002",122,0)
 ;
"RTN","RORX002",123,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX002",124,0)
 ;
"RTN","RORX002",125,0)
 ; .INPCNT       Number of inpatients is returned in this parameter
"RTN","RORX002",126,0)
 ; SFLAGS        Flags for $$SKIP^RORXU005
"RTN","RORX002",127,0)
 ;
"RTN","RORX002",128,0)
 ; Return Values:
"RTN","RORX002",129,0)
 ;       <0  Error code
"RTN","RORX002",130,0)
 ;        0  Ok
"RTN","RORX002",131,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX002",132,0)
 ;
"RTN","RORX002",133,0)
QUERY(INPCNT,SFLAGS) ;
"RTN","RORX002",134,0)
 N CNT,DFN,ECNT,IEN,IENS,RC,TCNT,TMP,VA,VADM,VAHOW,VAIP,VAROOT,XREFNODE,WARD
"RTN","RORX002",135,0)
 N RCC,FLAG
"RTN","RORX002",136,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX002",137,0)
 S (CNT,ECNT,INPCNT,RC)=0
"RTN","RORX002",138,0)
 ;--- Browse through the registry records
"RTN","RORX002",139,0)
 S IEN=0
"RTN","RORX002",140,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX002",141,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX002",142,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX002",143,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX002",144,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX002",145,0)
 . ;--- Skip a patient
"RTN","RORX002",146,0)
 . Q:$$SKIP^RORXU005(IEN,SFLAGS)
"RTN","RORX002",147,0)
 . ;--- Process the registry record
"RTN","RORX002",148,0)
 . S DFN=$$PTIEN^RORUTL01(IEN)  Q:DFN'>0
"RTN","RORX002",149,0)
 .; --- Check the ICD9 filter
"RTN","RORX002",150,0)
 . S RCC=0
"RTN","RORX002",151,0)
 . I FLAG'="ALL" D
"RTN","RORX002",152,0)
 . . S RCC=$$ICD^RORXU010(DFN,RORREG)
"RTN","RORX002",153,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX002",154,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX002",155,0)
 .;--- End of ICD9 Filter check
"RTN","RORX002",156,0)
 . K VA,VADM,VAIP  S VAIP("D")=DT\1  D 51^VADPT
"RTN","RORX002",157,0)
 . S WARD=$P(VAIP(5),U,2)  Q:WARD=""
"RTN","RORX002",158,0)
 . S TMP=$S($G(VA("BID"))'="":VA("BID"),1:"UNKN") ; Last 4 of SSN
"RTN","RORX002",159,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=IEN_U_DFN_U_$P(VAIP(6),U,2)_U_$P(VADM(6),U)
"RTN","RORX002",160,0)
 . S INPCNT=INPCNT+1
"RTN","RORX002",161,0)
 ;---
"RTN","RORX002",162,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX002",163,0)
 ;
"RTN","RORX002",164,0)
 ;***** CHECKS THE SUFFIX FOR VALIDITY
"RTN","RORX002",165,0)
 ;
"RTN","RORX002",166,0)
 ; SUFFIX        Suffix
"RTN","RORX002",167,0)
 ;
"RTN","RORX002",168,0)
 ; Return Values:
"RTN","RORX002",169,0)
 ;        0  Ok
"RTN","RORX002",170,0)
 ;        1  Invalid suffix
"RTN","RORX002",171,0)
VSUFFIX(SUFFIX) ;
"RTN","RORX002",172,0)
 Q '("9AA,9AB,9BB,A0,A4,A5,BU,BV,PA"[SUFFIX)
"RTN","RORX003")
0^8^B26330182^B21537399
"RTN","RORX003",1,0)
RORX003 ;HOIFO/SG,VAC - GENERAL UTILIZATION AND DEMOGRAPHICS ;4/7/09 2:06pm
"RTN","RORX003",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORX003",3,0)
 ;
"RTN","RORX003",4,0)
 ; Modified March 2009 for ICD9 Filter for INCLUDE or EXCLUDE
"RTN","RORX003",5,0)
 ;
"RTN","RORX003",6,0)
 ; This routine uses the following IAs:
"RTN","RORX003",7,0)
 ;
"RTN","RORX003",8,0)
 ; #10103  FMADD^XLFDT, FMDIFF^XLFDT, FMTE^XLFDT (supported)
"RTN","RORX003",9,0)
 ;
"RTN","RORX003",10,0)
 Q
"RTN","RORX003",11,0)
 ;
"RTN","RORX003",12,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX003",13,0)
 ;
"RTN","RORX003",14,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX003",15,0)
 ;
"RTN","RORX003",16,0)
 ; Return Values:
"RTN","RORX003",17,0)
 ;       <0  Error code
"RTN","RORX003",18,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX003",19,0)
 ;
"RTN","RORX003",20,0)
HEADER(PARTAG) ;
"RTN","RORX003",21,0)
 N COLUMNS,HEADER,NAME,NOTES,TMP
"RTN","RORX003",22,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX003",23,0)
 Q:HEADER<0 HEADER
"RTN","RORX003",24,0)
 S NOTES=$$ADDVAL^RORTSK11(RORTSK,"NOTES",,HEADER)
"RTN","RORX003",25,0)
 D ADDVAL^RORTSK11(RORTSK,"AGE_BASE_DATE",RORAGEDT,NOTES)
"RTN","RORX003",26,0)
 ;---
"RTN","RORX003",27,0)
 S COLUMNS=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORX003",28,0)
 Q:COLUMNS<0 COLUMNS
"RTN","RORX003",29,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"HEADER","1")
"RTN","RORX003",30,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"FOOTER","1")
"RTN","RORX003",31,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"NAME","PATIENTS")
"RTN","RORX003",32,0)
 S RORFL798=".01",RORFLICR=""
"RTN","RORX003",33,0)
 ;--- Required columns
"RTN","RORX003",34,0)
 F NAME="#","NAME"  D
"RTN","RORX003",35,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX003",36,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",37,0)
 ;--- SSN or LAST4
"RTN","RORX003",38,0)
 S NAME=$S($$OPTCOL^RORXU006("SSN"):"SSN",1:"LAST4")
"RTN","RORX003",39,0)
 S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)  Q:TMP<0 TMP
"RTN","RORX003",40,0)
 D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",41,0)
 ;--- Optional columns
"RTN","RORX003",42,0)
 F NAME="DOB","AGE","SEX","RACE","ETHN","RISK","SELDT","CONFDT","UTIL","DOD"  D
"RTN","RORX003",43,0)
 . Q:'$$OPTCOL^RORXU006(NAME)
"RTN","RORX003",44,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX003",45,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",46,0)
 ;---
"RTN","RORX003",47,0)
 S:$$OPTCOL^RORXU006("CONFDT") RORFL798=RORFL798_";2"
"RTN","RORX003",48,0)
 S:$$OPTCOL^RORXU006("SELDT") RORFL798=RORFL798_";3.2"
"RTN","RORX003",49,0)
 Q HEADER
"RTN","RORX003",50,0)
 ;
"RTN","RORX003",51,0)
 ;***** COMPILES THE "GENERAL UTLIZATION AND DEMOGRAPHICS" REPORT
"RTN","RORX003",52,0)
 ; REPORT CODE: 003
"RTN","RORX003",53,0)
 ;
"RTN","RORX003",54,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX003",55,0)
 ;
"RTN","RORX003",56,0)
 ; Return Values:
"RTN","RORX003",57,0)
 ;       <0  Error code
"RTN","RORX003",58,0)
 ;        0  Ok
"RTN","RORX003",59,0)
 ;
"RTN","RORX003",60,0)
UTLDMG(RORTSK) ;
"RTN","RORX003",61,0)
 N RORAGEDT      ; Base date for age calculations
"RTN","RORX003",62,0)
 N RORDTE0       ; Beginning of the Date Entered "sliding window"
"RTN","RORX003",63,0)
 N ROREDT        ; End date
"RTN","RORX003",64,0)
 N RORFL798      ; Fields to load from the file #798
"RTN","RORX003",65,0)
 N RORFLICR      ; Fields to load from the file #799.4
"RTN","RORX003",66,0)
 N RORREG        ; Registry IEN
"RTN","RORX003",67,0)
 N RORRISK       ; Risk factor counters
"RTN","RORX003",68,0)
 N RORSDT        ; Start date
"RTN","RORX003",69,0)
 N RORSUM        ; Summary data
"RTN","RORX003",70,0)
 N RORUTIL       ; Requested utilization types
"RTN","RORX003",71,0)
 N RORUCNT       ; Utilization counters
"RTN","RORX003",72,0)
 ;
"RTN","RORX003",73,0)
 N CNT,ECNT,IEN,IENS,PARAMS,PATIENTS,RC,REPORT,RORPTN,SFLAGS,TMP,XREFNODE
"RTN","RORX003",74,0)
 N RCC,FLAG,DFN
"RTN","RORX003",75,0)
 ;--- Root node of the report
"RTN","RORX003",76,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX003",77,0)
 Q:REPORT<0 REPORT
"RTN","RORX003",78,0)
 ;
"RTN","RORX003",79,0)
 ;=== Get and prepare the report parameters
"RTN","RORX003",80,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX003",81,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,REPORT,.RORSDT,.ROREDT,.SFLAGS)
"RTN","RORX003",82,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX003",83,0)
 ;--- Default set of columns for the summary-only report
"RTN","RORX003",84,0)
 S XREFNODE=$NA(RORTSK("PARAMS","OPTIONAL_COLUMNS","C"))
"RTN","RORX003",85,0)
 I $$PARAM^RORTSK01("OPTIONS","SUMMARY")  D
"RTN","RORX003",86,0)
 . F TMP="RACE","RISK","AGE","SEX","UTIL"  D
"RTN","RORX003",87,0)
 . . S @XREFNODE@(TMP)=""
"RTN","RORX003",88,0)
 S:$$OPTCOL^RORXU006("RACE") @XREFNODE@("ETHN")=""
"RTN","RORX003",89,0)
 ;--- Construct the description of utilization types
"RTN","RORX003",90,0)
 I '$$PARAM^RORTSK01("UTIL_TYPES","ALL")  D
"RTN","RORX003",91,0)
 . M RORUTIL=RORTSK("PARAMS","UTIL_TYPES","C")
"RTN","RORX003",92,0)
 E  S RORUTIL("ALL")=1
"RTN","RORX003",93,0)
 S TMP=$$OPTXT^RORXU002(.RORUTIL,7980000.019)
"RTN","RORX003",94,0)
 D ADDVAL^RORTSK11(RORTSK,"UTIL_TYPES",TMP,PARAMS)
"RTN","RORX003",95,0)
 ;
"RTN","RORX003",96,0)
 ;=== Initialize constants and variables
"RTN","RORX003",97,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX003",98,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",RORREG)),ECNT=0
"RTN","RORX003",99,0)
 S TMP=$$FMDIFF^XLFDT(ROREDT,RORSDT)
"RTN","RORX003",100,0)
 S RORAGEDT=$$FMADD^XLFDT(RORSDT,TMP\2)
"RTN","RORX003",101,0)
 S RORDTE0=$P($$FMTE^XLFDT(DT,7),"/")-10  ; 10 year "sliding window"
"RTN","RORX003",102,0)
 ;
"RTN","RORX003",103,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX003",104,0)
 D
"RTN","RORX003",105,0)
 . ;=== Report header
"RTN","RORX003",106,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX003",107,0)
 . ;---
"RTN","RORX003",108,0)
 . S PATIENTS=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX003",109,0)
 . I PATIENTS<0  S RC=+PATIENTS  Q
"RTN","RORX003",110,0)
 . D ADDATTR^RORTSK11(RORTSK,PATIENTS,"TABLE","PATIENTS")
"RTN","RORX003",111,0)
 . ;=== Browse through the registry records
"RTN","RORX003",112,0)
 . D TPPSETUP^RORTSK01(95)
"RTN","RORX003",113,0)
 . S (CNT,IEN,RC)=0
"RTN","RORX003",114,0)
 . F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX003",115,0)
 . . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX003",116,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX003",117,0)
 . . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX003",118,0)
 . . ;--- Check if the patient should be skipped
"RTN","RORX003",119,0)
 . . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORSDT,ROREDT)
"RTN","RORX003",120,0)
 . . ;--- Check if the ICD9 Filter includes or excludes the patient
"RTN","RORX003",121,0)
 . . S DFN=$$PTIEN^RORUTL01(+IENS)
"RTN","RORX003",122,0)
 . . S RCC=0
"RTN","RORX003",123,0)
 . . I FLAG'="ALL" D
"RTN","RORX003",124,0)
 . . . S RCC=$$ICD^RORXU010(DFN,RORREG)
"RTN","RORX003",125,0)
 . . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX003",126,0)
 . . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX003",127,0)
 . . ;--- End of ICD9 check.
"RTN","RORX003",128,0)
 . . ;--- Process the registry record
"RTN","RORX003",129,0)
 . . S TMP=$$PATIENT^RORX003A(IENS,PATIENTS)
"RTN","RORX003",130,0)
 . . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX003",131,0)
 . Q:RC<0
"RTN","RORX003",132,0)
 . ;
"RTN","RORX003",133,0)
 . ;=== Report summary
"RTN","RORX003",134,0)
 . D TPPSETUP^RORTSK01(5)
"RTN","RORX003",135,0)
 . S RC=$$SUMMARY^RORX003A(REPORT,PATIENTS)  Q:RC<0
"RTN","RORX003",136,0)
 . ;
"RTN","RORX003",137,0)
 . ;=== Summary only
"RTN","RORX003",138,0)
 . S TMP=$$PARAM^RORTSK01("OPTIONS","COMPLETE")
"RTN","RORX003",139,0)
 . D:'TMP UPDVAL^RORTSK11(RORTSK,PATIENTS,,,1)
"RTN","RORX003",140,0)
 ;
"RTN","RORX003",141,0)
 ;=== Cleanup
"RTN","RORX003",142,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX004")
0^9^B17581672^B15147784
"RTN","RORX004",1,0)
RORX004 ;HOIFO/BH,SG,VAC - CLINIC FOLLOW UP ;4/7/09 2:06pm
"RTN","RORX004",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX004",3,0)
 ;
"RTN","RORX004",4,0)
 ; This routine uses the following IAs:
"RTN","RORX004",5,0)
 ;
"RTN","RORX004",6,0)
 ; #10061        2^VADPT (supported)
"RTN","RORX004",7,0)
 ;
"RTN","RORX004",8,0)
 ;This routine modified in March 2009 to add panel 180 to GUI.  The
"RTN","RORX004",9,0)
 ;  function is to permit a filter on ICD9 codes to Include or Exclude
"RTN","RORX004",10,0)
 ;  specific ICD9 codes.  An extrinsic is called RORXU010 and it is
"RTN","RORX004",11,0)
 ;  evaluated on return as to whether or not to report the patient.
"RTN","RORX004",12,0)
 ;
"RTN","RORX004",13,0)
 Q
"RTN","RORX004",14,0)
 ;
"RTN","RORX004",15,0)
 ;***** COMPILES THE "CLINIC FOLLOW UP" REPORT
"RTN","RORX004",16,0)
 ; REPORT CODE: 004
"RTN","RORX004",17,0)
 ;
"RTN","RORX004",18,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX004",19,0)
 ;
"RTN","RORX004",20,0)
 ; Return Values:
"RTN","RORX004",21,0)
 ;       <0  Error code
"RTN","RORX004",22,0)
 ;        0  Ok
"RTN","RORX004",23,0)
 ;
"RTN","RORX004",24,0)
CLNFLWUP(RORTSK) ;
"RTN","RORX004",25,0)
 N ROREDT        ; End date
"RTN","RORX004",26,0)
 N RORREG        ; Registry IEN
"RTN","RORX004",27,0)
 N RORSDT        ; Start date
"RTN","RORX004",28,0)
 ;
"RTN","RORX004",29,0)
 N CNT,ECNT,IEN,IENS,PATIENTS,RC,REPORT,RORPTN,SFLAGS,TMP,XREFNODE
"RTN","RORX004",30,0)
 ;--- Root node of the report
"RTN","RORX004",31,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX004",32,0)
 Q:REPORT<0 REPORT
"RTN","RORX004",33,0)
 ;
"RTN","RORX004",34,0)
 ;--- Get and prepare the report parameters
"RTN","RORX004",35,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX004",36,0)
 S RC=$$PARAMS(REPORT,.RORSDT,.ROREDT,.SFLAGS)
"RTN","RORX004",37,0)
 Q:RC<0 RC
"RTN","RORX004",38,0)
 ;
"RTN","RORX004",39,0)
 ;--- Initialize constants and variables
"RTN","RORX004",40,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX004",41,0)
 S ECNT=0,XREFNODE=$NA(^RORDATA(798,"AC",RORREG))
"RTN","RORX004",42,0)
 ;
"RTN","RORX004",43,0)
 D
"RTN","RORX004",44,0)
 . ;--- Report header
"RTN","RORX004",45,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX004",46,0)
 . S PATIENTS=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX004",47,0)
 . I PATIENTS<0  S RC=+PATIENTS  Q
"RTN","RORX004",48,0)
 . D ADDATTR^RORTSK11(RORTSK,PATIENTS,"TABLE","PATIENTS")
"RTN","RORX004",49,0)
 . ;
"RTN","RORX004",50,0)
 . ;--- Browse through the registry records
"RTN","RORX004",51,0)
 . D TPPSETUP^RORTSK01(100)
"RTN","RORX004",52,0)
 . S (CNT,IEN,RC)=0
"RTN","RORX004",53,0)
 . F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX004",54,0)
 . . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX004",55,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX004",56,0)
 . . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX004",57,0)
 . . ;--- Check if the patient should be skipped
"RTN","RORX004",58,0)
 . . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORSDT,ROREDT)
"RTN","RORX004",59,0)
 . . ;--- Process the registry record
"RTN","RORX004",60,0)
 . . S TMP=$$PATIENT(IENS,PATIENTS)
"RTN","RORX004",61,0)
 . . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX004",62,0)
 . Q:RC<0
"RTN","RORX004",63,0)
 ;
"RTN","RORX004",64,0)
 ;--- Cleanup
"RTN","RORX004",65,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX004",66,0)
 ;
"RTN","RORX004",67,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX004",68,0)
 ;
"RTN","RORX004",69,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX004",70,0)
 ;
"RTN","RORX004",71,0)
 ; Return Values:
"RTN","RORX004",72,0)
 ;       <0  Error code
"RTN","RORX004",73,0)
 ;        0  Ok
"RTN","RORX004",74,0)
 ;
"RTN","RORX004",75,0)
HEADER(PARTAG) ;
"RTN","RORX004",76,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,SEEN,LSNDT)
"RTN","RORX004",77,0)
 ;
"RTN","RORX004",78,0)
 N HEADER,RC
"RTN","RORX004",79,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX004",80,0)
 Q:HEADER<0 HEADER
"RTN","RORX004",81,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX004",HEADER)
"RTN","RORX004",82,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX004",83,0)
 ;
"RTN","RORX004",84,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX004",85,0)
 ;
"RTN","RORX004",86,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX004",87,0)
 ;
"RTN","RORX004",88,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX004",89,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX004",90,0)
 ;
"RTN","RORX004",91,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX004",92,0)
 ;               returned via this parameter
"RTN","RORX004",93,0)
 ;
"RTN","RORX004",94,0)
 ; Return Values:
"RTN","RORX004",95,0)
 ;       <0  Error code
"RTN","RORX004",96,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX004",97,0)
 ;
"RTN","RORX004",98,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX004",99,0)
 N PARAMS,TMP
"RTN","RORX004",100,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX004",101,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX004",102,0)
 ;--- Process the list of clinics
"RTN","RORX004",103,0)
 S TMP=$$CLINLST^RORXU006(.RORTSK,PARAMS)
"RTN","RORX004",104,0)
 Q:TMP<0 TMP
"RTN","RORX004",105,0)
 ;---
"RTN","RORX004",106,0)
 Q PARAMS
"RTN","RORX004",107,0)
 ;
"RTN","RORX004",108,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX004",109,0)
 ;
"RTN","RORX004",110,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX004",111,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX004",112,0)
 ;
"RTN","RORX004",113,0)
 ; Return Values:
"RTN","RORX004",114,0)
 ;       <0  Error code
"RTN","RORX004",115,0)
 ;        0  Ok
"RTN","RORX004",116,0)
 ;       >0  Skip the patient
"RTN","RORX004",117,0)
 ;
"RTN","RORX004",118,0)
PATIENT(IENS,PARTAG) ;
"RTN","RORX004",119,0)
 N CHK,CLINAIDS,DFN,IEN,RC,RCC,RORBUF,RORMSG,SEEN,TMP,VA,VADM,VAHOW,VAROOT
"RTN","RORX004",120,0)
 S RC=0
"RTN","RORX004",121,0)
 S DFN=$$PTIEN^RORUTL01(+IENS)
"RTN","RORX004",122,0)
 ;
"RTN","RORX004",123,0)
 ;--- Evaluates patient if IDC9 filter is Include or Exclude
"RTN","RORX004",124,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER")),RCC=0
"RTN","RORX004",125,0)
 I FLAG'="ALL" D
"RTN","RORX004",126,0)
 .S RCC=$$ICD^RORXU010(DFN,RORREG)
"RTN","RORX004",127,0)
 I (FLAG="INCLUDE")&(RCC=0) Q 1
"RTN","RORX004",128,0)
 I (FLAG="EXCLUDE")&(RCC=1) Q 1
"RTN","RORX004",129,0)
 ;
"RTN","RORX004",130,0)
 ;--- Only include patients that received utilization if care is true
"RTN","RORX004",131,0)
 I $$PARAM^RORTSK01("PATIENTS","CAREONLY")  D  Q:'TMP 1
"RTN","RORX004",132,0)
 . S CHK("ALL")=""
"RTN","RORX004",133,0)
 . S TMP=$$UTIL^RORXU003(RORSDT,ROREDT,DFN,.CHK)
"RTN","RORX004",134,0)
 ;
"RTN","RORX004",135,0)
 ;--- Select Seen/NotSeen patients
"RTN","RORX004",136,0)
 S SEEN=$$SEEN^RORXU001(RORSDT,ROREDT,DFN)
"RTN","RORX004",137,0)
 Q:'$$PARAM^RORTSK01("PATIENTS",$S(SEEN:"SEEN",1:"NOTSEEN")) 1
"RTN","RORX004",138,0)
 ;
"RTN","RORX004",139,0)
 ;--- Load the demographic data
"RTN","RORX004",140,0)
 D 2^VADPT
"RTN","RORX004",141,0)
 ;
"RTN","RORX004",142,0)
 ;--- The <PATIENT> tag
"RTN","RORX004",143,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,DFN)
"RTN","RORX004",144,0)
 Q:PTAG<0 PTAG
"RTN","RORX004",145,0)
 ;
"RTN","RORX004",146,0)
 ;--- Patient Name
"RTN","RORX004",147,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX004",148,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX004",149,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX004",150,0)
 ;--- Date of Death
"RTN","RORX004",151,0)
 S TMP=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX004",152,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX004",153,0)
 ;--- Seen/Not Seen
"RTN","RORX004",154,0)
 D ADDVAL^RORTSK11(RORTSK,"SEEN",SEEN,PTAG,1)
"RTN","RORX004",155,0)
 ;--- The latest date the patient was seen at any one of
"RTN","RORX004",156,0)
 ;--- the given clinics
"RTN","RORX004",157,0)
 S TMP=$$LASTVSIT^RORXU001(DFN)\1
"RTN","RORX004",158,0)
 D ADDVAL^RORTSK11(RORTSK,"LSNDT",$$DATE^RORXU002(TMP),PTAG,1)
"RTN","RORX004",159,0)
 Q 0
"RTN","RORX005A")
0^10^B34579924^B28503229
"RTN","RORX005A",1,0)
RORX005A ;HOIFO/BH,SG - INPATIENT UTILIZATION (QUERY) ;4/21/09 2:20pm
"RTN","RORX005A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORX005A",3,0)
 ;
"RTN","RORX005A",4,0)
 ; This routine was modified March 2009 to handle ICD9 Filter to 
"RTN","RORX005A",5,0)
 ;     Include or Exclude patients
"RTN","RORX005A",6,0)
 ;
"RTN","RORX005A",7,0)
 ; This routine uses the following IAs:
"RTN","RORX005A",8,0)
 ;
"RTN","RORX005A",9,0)
 ; #92           ^DGPT(  #45.7 (controlled)
"RTN","RORX005A",10,0)
 ; #417          .01 field and "C" x-ref of file #40.8 (controlled)
"RTN","RORX005A",11,0)
 ; #2056         GET1^DIQ (supported)
"RTN","RORX005A",12,0)
 ; #2438         ^DG(40.8 (controlled)
"RTN","RORX005A",13,0)
 ; #3545         ^DGPT("AAD" (supported)
"RTN","RORX005A",14,0)
 ; #10061        IN5^VADPT (supported) 
"RTN","RORX005A",15,0)
 ; #10103        FMADD^XLFDT, FMDIFF^XLFDT (supported)
"RTN","RORX005A",16,0)
 ;
"RTN","RORX005A",17,0)
 Q
"RTN","RORX005A",18,0)
 ;
"RTN","RORX005A",19,0)
 ;***** ADDS THE INPATIENT STAY
"RTN","RORX005A",20,0)
 ;
"RTN","RORX005A",21,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX005A",22,0)
 ; PTFIEN        IEN of the PTF record
"RTN","RORX005A",23,0)
 ; LOS           Length of stay
"RTN","RORX005A",24,0)
 ; BSID          Bed section ID
"RTN","RORX005A",25,0)
 ; DATE          Movement date/time (FileMan)
"RTN","RORX005A",26,0)
 ;
"RTN","RORX005A",27,0)
ADDSTAY(DFN,PTFIEN,LOS,BSID,DATE) ;
"RTN","RORX005A",28,0)
 N DST,I,TMP
"RTN","RORX005A",29,0)
 S:$G(BSID)="" BSID=0
"RTN","RORX005A",30,0)
 ;--- Number of patients for the bedsection
"RTN","RORX005A",31,0)
 I 'BSID  S DST=$NA(@RORDST@("IP",DFN))
"RTN","RORX005A",32,0)
 E  S DST=$NA(@RORDST@("IPB",BSID))  D:'$D(@DST@("P",DFN))
"RTN","RORX005A",33,0)
 . S @DST@("P")=$G(@DST@("P"))+1,@DST@("P",DFN)=""
"RTN","RORX005A",34,0)
 ;--- No bed section ID
"RTN","RORX005A",35,0)
 S:BSID<0 @RORDST@("IPNOBS",RORPNAME,DATE,PTFIEN,DFN)=""
"RTN","RORX005A",36,0)
 ;--- Short stays (visits)
"RTN","RORX005A",37,0)
 I LOS'>0  S @DST@("V")=$G(@DST@("V"))+1  Q
"RTN","RORX005A",38,0)
 ;--- Days and stays
"RTN","RORX005A",39,0)
 S @DST@("D")=$G(@DST@("D"))+LOS
"RTN","RORX005A",40,0)
 S @DST@("S")=$G(@DST@("S"))+1
"RTN","RORX005A",41,0)
 ;--- Lengths of stay for median value calculations
"RTN","RORX005A",42,0)
 S I=$O(@RORDST@("IPMLOS",BSID,LOS,""),-1)+1
"RTN","RORX005A",43,0)
 S @RORDST@("IPMLOS",BSID,LOS,I)=""
"RTN","RORX005A",44,0)
 Q
"RTN","RORX005A",45,0)
 ;
"RTN","RORX005A",46,0)
 ;***** LOADS AND PROCESSES THE INPATIENT DATA
"RTN","RORX005A",47,0)
 ;
"RTN","RORX005A",48,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX005A",49,0)
 ;
"RTN","RORX005A",50,0)
 ; Return Values:
"RTN","RORX005A",51,0)
 ;       <0  Error code
"RTN","RORX005A",52,0)
 ;        0  Ok
"RTN","RORX005A",53,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX005A",54,0)
 ;
"RTN","RORX005A",55,0)
IPDATA(DFN) ;
"RTN","RORX005A",56,0)
 N RORDST        ; Closed reference to the category node in ^TMP
"RTN","RORX005A",57,0)
 ;
"RTN","RORX005A",58,0)
 N BSID,DATE,DISDT,ENDT,FACILITY,LOS,PTFIEN,RC,RORMSG,STDT,SUFFIX,TMP,VAHOW,VAIP,VAROOT,XDATE
"RTN","RORX005A",59,0)
 S RORDST=$NA(^TMP("RORX005",$J))
"RTN","RORX005A",60,0)
 ;---
"RTN","RORX005A",61,0)
 S XDATE=RORSDT
"RTN","RORX005A",62,0)
 F  S RC=0  D  Q:RC<2  S XDATE=$O(^DGPT("AAD",DFN,XDATE))  Q:XDATE'>0
"RTN","RORX005A",63,0)
 . I XDATE'<ROREDT1  S RC=1  Q
"RTN","RORX005A",64,0)
 . K DATE,LOS,VAIP  S VAIP(16,1)=XDATE
"RTN","RORX005A",65,0)
 . F  D  Q:RC
"RTN","RORX005A",66,0)
 . . S VAIP("D")=+$G(VAIP(16,1))
"RTN","RORX005A",67,0)
 . . I VAIP("D")'>0  S RC=2  Q
"RTN","RORX005A",68,0)
 . . D IN5^VADPT
"RTN","RORX005A",69,0)
 . . I $G(VAIP(1))'>0  S RC=2  Q
"RTN","RORX005A",70,0)
 . . S DATE=+VAIP(3)
"RTN","RORX005A",71,0)
 . . Q:+$G(VAIP(4))=3
"RTN","RORX005A",72,0)
 . . ;--- Check the movement date
"RTN","RORX005A",73,0)
 . . I DATE'<ROREDT1  S RC=1  Q
"RTN","RORX005A",74,0)
 . . S:DATE<RORSDT DATE=RORSDT
"RTN","RORX005A",75,0)
 . . ;--- Check the PTF record - Task removed April 2009
"RTN","RORX005A",76,0)
 . . S PTFIEN=+$G(VAIP(12))  Q:PTFIEN'>0
"RTN","RORX005A",77,0)
 . . I '$D(PTFIEN(PTFIEN))  D  Q:RC
"RTN","RORX005A",78,0)
 . . . S PTFIEN(PTFIEN)=0
"RTN","RORX005A",79,0)
 . . . Q:$$PTF^RORXU001(PTFIEN,"FP",,,.SUFFIX,,.FACILITY)
"RTN","RORX005A",80,0)
 . . . ;--- Check the suffix
"RTN","RORX005A",81,0)
 . . . ;I SUFFIX'=""  Q:$$VSUFFIX(SUFFIX)  ; ROR 1.5
"RTN","RORX005A",82,0)
 . . . ;--- Check the division
"RTN","RORX005A",83,0)
 . . . S TMP=$$PARAM^RORTSK01("DIVISIONS","ALL")
"RTN","RORX005A",84,0)
 . . . I 'TMP  D  Q:'$D(RORTSK("PARAMS","DIVISIONS","C",DIVIEN))
"RTN","RORX005A",85,0)
 . . . . S TMP=FACILITY_SUFFIX
"RTN","RORX005A",86,0)
 . . . . S DIVIEN=$S(TMP'="":+$O(^DG(40.8,"C",TMP,"")),1:0)
"RTN","RORX005A",87,0)
 . . . K DIVIEN ;kill statement added
"RTN","RORX005A",88,0)
 . . . S PTFIEN(PTFIEN)=1
"RTN","RORX005A",89,0)
 . . ;--- Skip the PTF record if necessary
"RTN","RORX005A",90,0)
 . . Q:'PTFIEN(PTFIEN)
"RTN","RORX005A",91,0)
 . . ;--- Process the admission (only once)
"RTN","RORX005A",92,0)
 . . I '$D(LOS)  D  Q:RC
"RTN","RORX005A",93,0)
 . . . S LOS=$$LOS(+$G(VAIP(13,1)),+$G(VAIP(17,1)))
"RTN","RORX005A",94,0)
 . . . D ADDSTAY(DFN,PTFIEN,LOS)
"RTN","RORX005A",95,0)
 . . ;--- Process the movement
"RTN","RORX005A",96,0)
 . . S ENDT=$G(VAIP(16,1))\1
"RTN","RORX005A",97,0)
 . . S:(ENDT'>0)!(ENDT'<ROREDT1) ENDT=ROREDT,RC=2
"RTN","RORX005A",98,0)
 . . Q:ENDT<RORSDT
"RTN","RORX005A",99,0)
 . . S LOS=$$FMDIFF^XLFDT(ENDT,DATE\1,1)  S:LOS'>0 LOS=0
"RTN","RORX005A",100,0)
 . . ;--- Use the IEN in the SPECIALTY file (#42.4) as the Bedsection 
"RTN","RORX005A",101,0)
 . . ;    ID if it is available (it should be). Otherwise, use the
"RTN","RORX005A",102,0)
 . . ;--- IEN in the FACILITY TREATING SPECIALTY file (#45.7).
"RTN","RORX005A",103,0)
 . . I $G(VAIP(8))>0  D
"RTN","RORX005A",104,0)
 . . . K RORMSG S TMP=$$GET1^DIQ(45.7,+VAIP(8),1,"I",,"RORMSG")
"RTN","RORX005A",105,0)
 . . . ;D:$G(DIERR) DBS^RORERR("RORMSG",-9,,DFN,45.7,+VAIP(8))
"RTN","RORX005A",106,0)
 . . . D:$G(RORMSG("DIERR")) DBS^RORERR("RORMSG",-9,,DFN,45.7,+VAIP(8))
"RTN","RORX005A",107,0)
 . . . S BSID=$S(TMP>0:TMP_";42.4",1:+VAIP(8)_";45.7")
"RTN","RORX005A",108,0)
 . . E  S BSID=-1
"RTN","RORX005A",109,0)
 . . D ADDSTAY(DFN,PTFIEN,LOS,BSID,+VAIP(3))
"RTN","RORX005A",110,0)
 . S:$G(DATE)>XDATE XDATE=DATE
"RTN","RORX005A",111,0)
 ;---
"RTN","RORX005A",112,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX005A",113,0)
 ;
"RTN","RORX005A",114,0)
 ;***** CALCULATES THE LENGTH OF STAY
"RTN","RORX005A",115,0)
LOS(STDT,ENDT) ;
"RTN","RORX005A",116,0)
 N DAYS
"RTN","RORX005A",117,0)
 S:STDT<RORSDT STDT=RORSDT
"RTN","RORX005A",118,0)
 S:(ENDT'>0)!(ENDT>ROREDT) ENDT=ROREDT
"RTN","RORX005A",119,0)
 S DAYS=$$FMDIFF^XLFDT(ENDT\1,STDT\1,1)
"RTN","RORX005A",120,0)
 Q $S(DAYS'<0:DAYS,1:0)
"RTN","RORX005A",121,0)
 ;
"RTN","RORX005A",122,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX005A",123,0)
 ;
"RTN","RORX005A",124,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX005A",125,0)
 ;
"RTN","RORX005A",126,0)
 ; Return Values:
"RTN","RORX005A",127,0)
 ;       <0  Error code
"RTN","RORX005A",128,0)
 ;        0  Ok
"RTN","RORX005A",129,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX005A",130,0)
 ;
"RTN","RORX005A",131,0)
QUERY(FLAGS) ;
"RTN","RORX005A",132,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX005A",133,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX005A",134,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX005A",135,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX005A",136,0)
 ;
"RTN","RORX005A",137,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,TMP,VA,VADM,XREFNODE
"RTN","RORX005A",138,0)
 N RCC,FLAG
"RTN","RORX005A",139,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX005A",140,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX005A",141,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT,1)
"RTN","RORX005A",142,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX005A",143,0)
 ;--- Browse through the registry records
"RTN","RORX005A",144,0)
 S IEN=0
"RTN","RORX005A",145,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX005A",146,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX005A",147,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX005A",148,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX005A",149,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX005A",150,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX005A",151,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX005A",152,0)
 . ;
"RTN","RORX005A",153,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX005A",154,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX005A",155,0)
 . ;
"RTN","RORX005A",156,0)
 . ;--- Filter patient on ICD9 codes
"RTN","RORX005A",157,0)
 . S RCC=0
"RTN","RORX005A",158,0)
 . I FLAG'="ALL" D
"RTN","RORX005A",159,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX005A",160,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX005A",161,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX005A",162,0)
 . ;--- End of filter
"RTN","RORX005A",163,0)
 . ;
"RTN","RORX005A",164,0)
 . ;--- Get the patient's data
"RTN","RORX005A",165,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX005A",166,0)
 . S RORPNAME=VADM(1),RORLAST4=VA("BID")
"RTN","RORX005A",167,0)
 . ;
"RTN","RORX005A",168,0)
 . ;--- Get the inpatient data
"RTN","RORX005A",169,0)
 . S RC=$$IPDATA(PATIEN)
"RTN","RORX005A",170,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX005A",171,0)
 . ;
"RTN","RORX005A",172,0)
 . ;--- Calculate intermediate totals
"RTN","RORX005A",173,0)
 . S RC=$$TOTALS^RORX005B(PATIEN)
"RTN","RORX005A",174,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX005A",175,0)
 ;---
"RTN","RORX005A",176,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX005A",177,0)
 ;
"RTN","RORX005A",178,0)
 ;***** CHECKS THE SUFFIX FOR VALIDITY
"RTN","RORX005A",179,0)
 ;
"RTN","RORX005A",180,0)
 ; SUFFIX        Suffix
"RTN","RORX005A",181,0)
 ;
"RTN","RORX005A",182,0)
 ; Return Values:
"RTN","RORX005A",183,0)
 ;        0  Ok
"RTN","RORX005A",184,0)
 ;        1  Invalid suffix
"RTN","RORX005A",185,0)
VSUFFIX(SUFFIX) ;
"RTN","RORX005A",186,0)
 Q '("9AA,9AB,9AC,9AD,9AE,9BB,A0,A4,A5,BU,BV,PA"[SUFFIX)
"RTN","RORX006A")
0^11^B23504467^B18261690
"RTN","RORX006A",1,0)
RORX006A ;HOIFO/BH,SG,VAC - LAB UTILIZATION (QUERY & SORT) ;4/7/09 2:07pm
"RTN","RORX006A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX006A",3,0)
 ;
"RTN","RORX006A",4,0)
 ; Routine modified March 2009 to handle ICD9 for Include or Exclude
"RTN","RORX006A",5,0)
 ; 
"RTN","RORX006A",6,0)
 ; This routine uses the following IAs:
"RTN","RORX006A",7,0)
 ;
"RTN","RORX006A",8,0)
 ; #2056         GET1^DIQ (supported)
"RTN","RORX006A",9,0)
 ; 
"RTN","RORX006A",10,0)
 Q
"RTN","RORX006A",11,0)
 ;
"RTN","RORX006A",12,0)
 ;***** LOADS AND PROCESSES THE LAB DATA
"RTN","RORX006A",13,0)
 ;
"RTN","RORX006A",14,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX006A",15,0)
 ;
"RTN","RORX006A",16,0)
 ; Return Values:
"RTN","RORX006A",17,0)
 ;       <0  Error code
"RTN","RORX006A",18,0)
 ;        0  Ok
"RTN","RORX006A",19,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX006A",20,0)
 ;
"RTN","RORX006A",21,0)
LABDATA(DFN) ;
"RTN","RORX006A",22,0)
 N DST,ENDT,NR,PTNO,PTNR,PRNT,RC,TSTIEN
"RTN","RORX006A",23,0)
 S DST=$NA(^TMP("RORX006",$J))
"RTN","RORX006A",24,0)
 ;
"RTN","RORX006A",25,0)
 ;--- Get the data
"RTN","RORX006A",26,0)
 S DST("RORCB")="$$LTSCB^RORX006A",DST("RORIDT")=""
"RTN","RORX006A",27,0)
 S RC=$$LTSEARCH^RORUTL10(DFN,RORLTST,.DST,,RORSDT,ROREDT1)
"RTN","RORX006A",28,0)
 Q:RC<0 RC  Q:$D(@DST@("PAT",DFN))<10 0
"RTN","RORX006A",29,0)
 ;
"RTN","RORX006A",30,0)
 ;--- Calculate intermediate totals of the tests
"RTN","RORX006A",31,0)
 N PTNT ;added 'new' statement
"RTN","RORX006A",32,0)
 S TSTIEN=0,(PTNR,PTNT)=0
"RTN","RORX006A",33,0)
 F  S TSTIEN=$O(@DST@("PAT",DFN,"R",TSTIEN))  Q:TSTIEN'>0  D
"RTN","RORX006A",34,0)
 . S NR=+$G(@DST@("PAT",DFN,"R",TSTIEN))
"RTN","RORX006A",35,0)
 . S PTNR=PTNR+NR  ; Number of patient's results
"RTN","RORX006A",36,0)
 . S PTNT=PTNT+1   ; Number of different tests
"RTN","RORX006A",37,0)
 . ;---
"RTN","RORX006A",38,0)
 . S @DST@("RES",TSTIEN,"P")=$G(@DST@("RES",TSTIEN,"P"))+1
"RTN","RORX006A",39,0)
 . S @DST@("RES",TSTIEN,"R")=$G(@DST@("RES",TSTIEN,"R"))+NR
"RTN","RORX006A",40,0)
 . ;---
"RTN","RORX006A",41,0)
 . S TMP=$G(@DST@("RES",TSTIEN,"M"))
"RTN","RORX006A",42,0)
 . D:NR'<TMP
"RTN","RORX006A",43,0)
 . . I NR>TMP  S @DST@("RES",TSTIEN,"M")=NR_U_1  Q
"RTN","RORX006A",44,0)
 . . S $P(@DST@("RES",TSTIEN,"M"),U,2)=$P(TMP,U,2)+1
"RTN","RORX006A",45,0)
 ;
"RTN","RORX006A",46,0)
 ;--- Orders
"RTN","RORX006A",47,0)
 S @DST@("ORD")=$G(@DST@("ORD"))+$G(@DST@("PAT",DFN,"O"))
"RTN","RORX006A",48,0)
 ;
"RTN","RORX006A",49,0)
 ;--- Results
"RTN","RORX006A",50,0)
 S @DST@("RES1",PTNR)=$G(@DST@("RES1",PTNR))+1
"RTN","RORX006A",51,0)
 S @DST@("RES1",PTNR,RORPNAME,DFN)=""
"RTN","RORX006A",52,0)
 ;
"RTN","RORX006A",53,0)
 ;--- Other totals
"RTN","RORX006A",54,0)
 S @DST@("PAT",DFN)=RORLAST4_U_RORDOD
"RTN","RORX006A",55,0)
 S @DST@("PAT",DFN,"R")=PTNR_U_PTNT
"RTN","RORX006A",56,0)
 S @DST@("PAT")=$G(@DST@("PAT"))+1
"RTN","RORX006A",57,0)
 S @DST@("RES")=$G(@DST@("RES"))+PTNR
"RTN","RORX006A",58,0)
 Q 0
"RTN","RORX006A",59,0)
 ;
"RTN","RORX006A",60,0)
 ;***** LAB SEARCH CALLBACK
"RTN","RORX006A",61,0)
 ;
"RTN","RORX006A",62,0)
 ; .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX006A",63,0)
 ;
"RTN","RORX006A",64,0)
 ; INVDT         IEN of the Lab test (inverted date)
"RTN","RORX006A",65,0)
 ;
"RTN","RORX006A",66,0)
 ; .RESULT       Reference to a local variable, which contains
"RTN","RORX006A",67,0)
 ;               the result (see the $$LTSEARCH^RORUTL10).
"RTN","RORX006A",68,0)
 ;
"RTN","RORX006A",69,0)
 ; Return Values:
"RTN","RORX006A",70,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX006A",71,0)
 ;        0  Ok
"RTN","RORX006A",72,0)
 ;        1  Skip this result
"RTN","RORX006A",73,0)
 ;        2  Skip this and all remaining results
"RTN","RORX006A",74,0)
 ;
"RTN","RORX006A",75,0)
LTSCB(ROR8DST,INVDT,RESULT) ;
"RTN","RORX006A",76,0)
 N DFN,TMP,TSTIEN
"RTN","RORX006A",77,0)
 S DFN=+ROR8DST("RORDFN"),TSTIEN=+RESULT(2)
"RTN","RORX006A",78,0)
 ;--- Number of orders
"RTN","RORX006A",79,0)
 I INVDT'=ROR8DST("RORIDT")  D  S ROR8DST("RORIDT")=INVDT
"RTN","RORX006A",80,0)
 . S @ROR8DST@("PAT",DFN,"O")=$G(@ROR8DST@("PAT",DFN,"O"))+1
"RTN","RORX006A",81,0)
 ;--- Number of results
"RTN","RORX006A",82,0)
 S TMP=$G(@ROR8DST@("PAT",DFN,"R",TSTIEN))
"RTN","RORX006A",83,0)
 S @ROR8DST@("PAT",DFN,"R",TSTIEN)=TMP+1
"RTN","RORX006A",84,0)
 Q 0
"RTN","RORX006A",85,0)
 ;
"RTN","RORX006A",86,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX006A",87,0)
 ;
"RTN","RORX006A",88,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX006A",89,0)
 ;
"RTN","RORX006A",90,0)
 ; Return Values:
"RTN","RORX006A",91,0)
 ;       <0  Error code
"RTN","RORX006A",92,0)
 ;        0  Ok
"RTN","RORX006A",93,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX006A",94,0)
 ;
"RTN","RORX006A",95,0)
QUERY(FLAGS) ;
"RTN","RORX006A",96,0)
 N RORDOD        ; Date of death of the current patient
"RTN","RORX006A",97,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX006A",98,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX006A",99,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX006A",100,0)
 ;
"RTN","RORX006A",101,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,TMP,VA,VADM,XREFNODE
"RTN","RORX006A",102,0)
 N RCC,FLAG
"RTN","RORX006A",103,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX006A",104,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX006A",105,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX006A",106,0)
 ;
"RTN","RORX006A",107,0)
 ;--- Browse through the registry records
"RTN","RORX006A",108,0)
 S IEN=0
"RTN","RORX006A",109,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX006A",110,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX006A",111,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX006A",112,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX006A",113,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX006A",114,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX006A",115,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX006A",116,0)
 . ;
"RTN","RORX006A",117,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX006A",118,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX006A",119,0)
 . ;
"RTN","RORX006A",120,0)
 . ;--- Check if ICD9 Filter Includes or Excludes Patient
"RTN","RORX006A",121,0)
 . S RCC=0
"RTN","RORX006A",122,0)
 . I FLAG'="ALL" D
"RTN","RORX006A",123,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX006A",124,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX006A",125,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX006A",126,0)
 . ;--- End of ICD9 Filter check
"RTN","RORX006A",127,0)
 . ;--- Get the patient's data
"RTN","RORX006A",128,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX006A",129,0)
 . S RORPNAME=VADM(1),RORLAST4=VA("BID")
"RTN","RORX006A",130,0)
 . S RORDOD=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX006A",131,0)
 . ;
"RTN","RORX006A",132,0)
 . ;--- Get the Lab data
"RTN","RORX006A",133,0)
 . S RC=$$LABDATA(PATIEN)
"RTN","RORX006A",134,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX006A",135,0)
 ;---
"RTN","RORX006A",136,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX006A",137,0)
 ;
"RTN","RORX006A",138,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX006A",139,0)
 ;
"RTN","RORX006A",140,0)
 ; Return Values:
"RTN","RORX006A",141,0)
 ;       <0  Error code
"RTN","RORX006A",142,0)
 ;        0  Ok
"RTN","RORX006A",143,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX006A",144,0)
 ;
"RTN","RORX006A",145,0)
SORT() ;
"RTN","RORX006A",146,0)
 N ECNT,IEN,NAME,NDLT,NODE,RC,RORMSG,TMP
"RTN","RORX006A",147,0)
 S NODE=$NA(^TMP("RORX006",$J)),(ECNT,RC)=0
"RTN","RORX006A",148,0)
 ;---
"RTN","RORX006A",149,0)
 S RC=$$LOOP^RORTSK01(0)  Q:RC<0 RC
"RTN","RORX006A",150,0)
 Q:$D(@NODE)<10 0
"RTN","RORX006A",151,0)
 ;---
"RTN","RORX006A",152,0)
 S IEN=0,NDLT=0
"RTN","RORX006A",153,0)
 F  S IEN=$O(@NODE@("RES",IEN))  Q:IEN'>0  D
"RTN","RORX006A",154,0)
 . S NDLT=NDLT+1
"RTN","RORX006A",155,0)
 . K RORMSG S NAME=$$GET1^DIQ(60,IEN,.01,,,"RORMSG")
"RTN","RORX006A",156,0)
 . ;D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,60,IEN)
"RTN","RORX006A",157,0)
 . D:$G(RORMSG("DIERR")) DBS^RORERR("RORMSG",-9,,,60,IEN)
"RTN","RORX006A",158,0)
 . S:NAME?." " NAME="Unknown ("_IEN_")"
"RTN","RORX006A",159,0)
 . S TMP=+$G(@NODE@("RES",IEN,"R"))
"RTN","RORX006A",160,0)
 . S @NODE@("RES","B",TMP,NAME,IEN)=""
"RTN","RORX006A",161,0)
 ;--- Total numbers of Lab tests
"RTN","RORX006A",162,0)
 S $P(@NODE@("RES"),U,2)=NDLT
"RTN","RORX006A",163,0)
 ;---
"RTN","RORX006A",164,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX007A")
0^12^B14789636^B11759892
"RTN","RORX007A",1,0)
RORX007A ;HOIFO/BH,SG,VAC - RADIOLOGY UTILIZATION (OVERFLOW) ;4/7/09 2:07pm
"RTN","RORX007A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORX007A",3,0)
 ;
"RTN","RORX007A",4,0)
 ;This routine modified to handle ICD9 Filter for Include or Exclude
"RTN","RORX007A",5,0)
 ;
"RTN","RORX007A",6,0)
 ; This routine uses the following IAs:
"RTN","RORX007A",7,0)
 ;
"RTN","RORX007A",8,0)
 ; #2043         EN1^RAO7PC1 (supported)
"RTN","RORX007A",9,0)
 ;
"RTN","RORX007A",10,0)
 Q
"RTN","RORX007A",11,0)
 ;
"RTN","RORX007A",12,0)
 ;***** APPENDS MODIFIERS TO THE CPT CODE
"RTN","RORX007A",13,0)
 ;
"RTN","RORX007A",14,0)
 ; CPT           CPT code
"RTN","RORX007A",15,0)
 ;
"RTN","RORX007A",16,0)
 ; NODE          Closed root of the exam data node returned
"RTN","RORX007A",17,0)
 ;               by the EN1^RAO7PC1
"RTN","RORX007A",18,0)
 ;
"RTN","RORX007A",19,0)
CPTMOD(CPT,NODE) ;
"RTN","RORX007A",20,0)
 N CPM,RORIM
"RTN","RORX007A",21,0)
 S RORIM=""
"RTN","RORX007A",22,0)
 F  S RORIM=$O(@NODE@("CMOD",RORIM))  Q:RORIM=""  D
"RTN","RORX007A",23,0)
 . S CPM=$P($G(@NODE@("CMOD",RORIM)),U)
"RTN","RORX007A",24,0)
 . S:CPM'="" CPT=CPT_"-"_CPM
"RTN","RORX007A",25,0)
 Q CPT
"RTN","RORX007A",26,0)
 ;
"RTN","RORX007A",27,0)
 ;***** LOADS AND PROCESSES THE RADILOGY DATA
"RTN","RORX007A",28,0)
 ;
"RTN","RORX007A",29,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX007A",30,0)
 ;
"RTN","RORX007A",31,0)
 ; Return Values:
"RTN","RORX007A",32,0)
 ;       <0  Error code
"RTN","RORX007A",33,0)
 ;        0  Ok
"RTN","RORX007A",34,0)
 ;
"RTN","RORX007A",35,0)
GETDATA(DFN) ;
"RTN","RORX007A",36,0)
 N CPT,EXAMID,NODE,PRNAME,RORBUF
"RTN","RORX007A",37,0)
 ;--- Get the data
"RTN","RORX007A",38,0)
 D EN1^RAO7PC1(DFN,RORSDT,ROREDT,999999)
"RTN","RORX007A",39,0)
 ;data returned from radiology/nuclear medicine API in ^TMP($J,"RAE1"
"RTN","RORX007A",40,0)
 Q:'$D(^TMP($J,"RAE1",PATIEN)) 0
"RTN","RORX007A",41,0)
 ;
"RTN","RORX007A",42,0)
 ;--- Process the data
"RTN","RORX007A",43,0)
 S EXAMID=""
"RTN","RORX007A",44,0)
 F  S EXAMID=$O(^TMP($J,"RAE1",DFN,EXAMID))  Q:EXAMID=""  D
"RTN","RORX007A",45,0)
 . S NODE=$NA(^TMP($J,"RAE1",DFN,EXAMID))
"RTN","RORX007A",46,0)
 . S RORBUF=$G(@NODE),CPT=$$CPTMOD($P(RORBUF,U,10),NODE)
"RTN","RORX007A",47,0)
 . ;--- Get Procedure Name
"RTN","RORX007A",48,0)
 . S PRNAME=$E($P(RORBUF,U),1,30)  Q:PRNAME=""
"RTN","RORX007A",49,0)
 . S PRNAME=PRNAME_U_$S(CPT'="":CPT,1:" ")
"RTN","RORX007A",50,0)
 . ;--- Increment the counters
"RTN","RORX007A",51,0)
 . S ^(DFN)=$G(^TMP("RORX007",$J,"PROC",PRNAME,DFN))+1
"RTN","RORX007A",52,0)
 . S ^(PRNAME)=$G(^TMP("RORX007",$J,"PAT",DFN,PRNAME))+1
"RTN","RORX007A",53,0)
 ;
"RTN","RORX007A",54,0)
 ;--- Cleanup
"RTN","RORX007A",55,0)
 K ^TMP($J,"RAE1")
"RTN","RORX007A",56,0)
 Q 0
"RTN","RORX007A",57,0)
 ;
"RTN","RORX007A",58,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX007A",59,0)
 ;
"RTN","RORX007A",60,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX007A",61,0)
 ;
"RTN","RORX007A",62,0)
 ; Return Values:
"RTN","RORX007A",63,0)
 ;       <0  Error code
"RTN","RORX007A",64,0)
 ;        0  Ok
"RTN","RORX007A",65,0)
 ;
"RTN","RORX007A",66,0)
HEADER(PARTAG) ;
"RTN","RORX007A",67,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,TOTAL,UNIQUE)
"RTN","RORX007A",68,0)
 ;;PROCEDURES(#,NAME,CPT,PATIENTS,TOTAL)
"RTN","RORX007A",69,0)
 ;
"RTN","RORX007A",70,0)
 N HEADER,RC
"RTN","RORX007A",71,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX007A",72,0)
 Q:HEADER<0 HEADER
"RTN","RORX007A",73,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX007A",HEADER)
"RTN","RORX007A",74,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX007A",75,0)
 ;
"RTN","RORX007A",76,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX007A",77,0)
 ;
"RTN","RORX007A",78,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX007A",79,0)
 ;
"RTN","RORX007A",80,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX007A",81,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX007A",82,0)
 ;
"RTN","RORX007A",83,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX007A",84,0)
 ;               returned via this parameter
"RTN","RORX007A",85,0)
 ;
"RTN","RORX007A",86,0)
 ; Return Values:
"RTN","RORX007A",87,0)
 ;       <0  Error code
"RTN","RORX007A",88,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX007A",89,0)
 ;
"RTN","RORX007A",90,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX007A",91,0)
 N NAME,PARAMS,TMP
"RTN","RORX007A",92,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX007A",93,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX007A",94,0)
 ;--- Additional parameters
"RTN","RORX007A",95,0)
 F NAME="MAXUTNUM","MINRPNUM"  D
"RTN","RORX007A",96,0)
 . S TMP=$$PARAM^RORTSK01(NAME)
"RTN","RORX007A",97,0)
 . D:TMP'="" ADDVAL^RORTSK11(RORTSK,NAME,TMP,PARAMS)
"RTN","RORX007A",98,0)
 ;---
"RTN","RORX007A",99,0)
 Q PARAMS
"RTN","RORX007A",100,0)
 ;
"RTN","RORX007A",101,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX007A",102,0)
 ;
"RTN","RORX007A",103,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX007A",104,0)
 ;
"RTN","RORX007A",105,0)
 ; Return Values:
"RTN","RORX007A",106,0)
 ;       <0  Error code
"RTN","RORX007A",107,0)
 ;        0  Ok
"RTN","RORX007A",108,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX007A",109,0)
 ;
"RTN","RORX007A",110,0)
QUERY(FLAGS) ;
"RTN","RORX007A",111,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,RORMSG,TMP,XREFNODE
"RTN","RORX007A",112,0)
 N RCC,FLAG
"RTN","RORX007A",113,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX007A",114,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX007A",115,0)
 ;--- Browse through the registry records
"RTN","RORX007A",116,0)
 S IEN=0
"RTN","RORX007A",117,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX007A",118,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX007A",119,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX007A",120,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX007A",121,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX007A",122,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX007A",123,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX007A",124,0)
 . ;
"RTN","RORX007A",125,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX007A",126,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX007A",127,0)
 . ;--- Check the patient against the ICD9 Filter
"RTN","RORX007A",128,0)
 . S RCC=0
"RTN","RORX007A",129,0)
 . I FLAG'="ALL" D
"RTN","RORX007A",130,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX007A",131,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX007A",132,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX007A",133,0)
 . ;--- End of ICD9 check
"RTN","RORX007A",134,0)
 . ;
"RTN","RORX007A",135,0)
 . ;--- Get the radiology data
"RTN","RORX007A",136,0)
 . S RC=$$GETDATA(PATIEN)
"RTN","RORX007A",137,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX007A",138,0)
 ;---
"RTN","RORX007A",139,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX007A",140,0)
 ;
"RTN","RORX007A",141,0)
 ;***** PLURAL/SINGULAR
"RTN","RORX007A",142,0)
SRPL(QNTY,WORD,SQ) ;
"RTN","RORX007A",143,0)
 Q $S('$G(SQ):QNTY_" ",1:"")_$P(WORD,U,$S(QNTY=1:1,1:2))
"RTN","RORX008A")
0^13^B31066416^B27604999
"RTN","RORX008A",1,0)
RORX008A ;HOIFO/BH,SG,VAC - VERA REIMBURSEMENT REPORT ;4/7/09 2:08pm
"RTN","RORX008A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX008A",3,0)
 ;
"RTN","RORX008A",4,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX008A",5,0)
 ;   or Exclude
"RTN","RORX008A",6,0)
 Q
"RTN","RORX008A",7,0)
 ;
"RTN","RORX008A",8,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX008A",9,0)
 ;
"RTN","RORX008A",10,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX008A",11,0)
 ;
"RTN","RORX008A",12,0)
 ; Return Values:
"RTN","RORX008A",13,0)
 ;       <0  Error code
"RTN","RORX008A",14,0)
 ;        0  Ok
"RTN","RORX008A",15,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX008A",16,0)
 ;
"RTN","RORX008A",17,0)
QUERY(FLAGS) ;
"RTN","RORX008A",18,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX008A",19,0)
 ;
"RTN","RORX008A",20,0)
 N CLINAIDS,CMPXCARE,CNT,CNTARV,CNTBASIC,CNTCMPX,ECNT,IEN,NAME,PATIEN,RC,RORIEN,RORXDST,TMP,UTLCHK,VA,VADM,VAERR,XREFNODE
"RTN","RORX008A",21,0)
 ;
"RTN","RORX008A",22,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX008A",23,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX008A",24,0)
 S (CNT,CNTARV,CNTBASIC,CNTCMPX,ECNT,RC)=0
"RTN","RORX008A",25,0)
 S UTLCHK("ALL")=""
"RTN","RORX008A",26,0)
 ;
"RTN","RORX008A",27,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX008A",28,0)
 S RORXDST("RORCB")="$$RXSCB^RORX008A"
"RTN","RORX008A",29,0)
 S TMP=$$PARAM^RORTSK01("OPTIONS","REGMEDSMRY")
"RTN","RORX008A",30,0)
 S RORXDST("SINGLE")='TMP!'$$PARAM^RORTSK01("PATIENTS","COMPLEX")
"RTN","RORX008A",31,0)
 ;
"RTN","RORX008A",32,0)
 ;--- Browse through the registry records
"RTN","RORX008A",33,0)
 S RORIEN=0
"RTN","RORX008A",34,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX008A",35,0)
 F  S RORIEN=$O(@XREFNODE@(RORIEN))  Q:RORIEN'>0  D  Q:RC<0
"RTN","RORX008A",36,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX008A",37,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX008A",38,0)
 . S CNT=CNT+1
"RTN","RORX008A",39,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX008A",40,0)
 . Q:$$SKIP^RORXU005(RORIEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX008A",41,0)
 . ;
"RTN","RORX008A",42,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX008A",43,0)
 . S PATIEN=$$PTIEN^RORUTL01(RORIEN)  Q:PATIEN'>0
"RTN","RORX008A",44,0)
 . ;
"RTN","RORX008A",45,0)
 . ;--- Check patient against ICD9 list
"RTN","RORX008A",46,0)
 . S RCC=0
"RTN","RORX008A",47,0)
 . I FLAG'="ALL" D
"RTN","RORX008A",48,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX008A",49,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX008A",50,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX008A",51,0)
 . ; End of check of ICD9 list
"RTN","RORX008A",52,0)
 . ;
"RTN","RORX008A",53,0)
 . ;--- Skip Clinical AIDS if Complex Care was not requested
"RTN","RORX008A",54,0)
 . S CMPXCARE=0
"RTN","RORX008A",55,0)
 . S CLINAIDS=$S($$CLINAIDS^RORHIVUT(RORIEN,ROREDT):1,1:0)
"RTN","RORX008A",56,0)
 . I CLINAIDS  Q:'$$PARAM^RORTSK01("PATIENTS","COMPLEX")  S CMPXCARE=1
"RTN","RORX008A",57,0)
 . ;
"RTN","RORX008A",58,0)
 . ;--- Skip a patient without utlilization
"RTN","RORX008A",59,0)
 . Q:'$$UTIL^RORXU003(RORSDT,ROREDT,PATIEN,.UTLCHK)
"RTN","RORX008A",60,0)
 . ;
"RTN","RORX008A",61,0)
 . ;--- Search for pharmacy data
"RTN","RORX008A",62,0)
 . K RORXDST("ARV")
"RTN","RORX008A",63,0)
 . S TMP=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RORSDT,ROREDT1)
"RTN","RORX008A",64,0)
 . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX008A",65,0)
 . I $D(RORXDST("ARV"))  Q:'$$PARAM^RORTSK01("PATIENTS","COMPLEX")  D
"RTN","RORX008A",66,0)
 . . S IEN=0
"RTN","RORX008A",67,0)
 . . F  S IEN=$O(RORXDST("ARV",IEN))  Q:IEN'>0  D
"RTN","RORX008A",68,0)
 . . . D:'$D(^TMP("RORX008",$J,"DRG",IEN))
"RTN","RORX008A",69,0)
 . . . . S ^TMP("RORX008",$J,"DRG",IEN)=RORXDST("ARV",IEN)
"RTN","RORX008A",70,0)
 . . . S ^(CLINAIDS)=$G(^TMP("RORX008",$J,"DRG",IEN,CLINAIDS))+1
"RTN","RORX008A",71,0)
 . . S CMPXCARE=1,CNTARV=CNTARV+1
"RTN","RORX008A",72,0)
 . ;
"RTN","RORX008A",73,0)
 . ;--- Skip Basic Care if it was not requested
"RTN","RORX008A",74,0)
 . I CMPXCARE  S CNTCMPX=CNTCMPX+1
"RTN","RORX008A",75,0)
 . E  Q:'$$PARAM^RORTSK01("PATIENTS","BASIC")  S CNTBASIC=CNTBASIC+1
"RTN","RORX008A",76,0)
 . ;
"RTN","RORX008A",77,0)
 . D:$$PARAM^RORTSK01("OPTIONS","PTLIST")
"RTN","RORX008A",78,0)
 . . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX008A",79,0)
 . . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX008A",80,0)
 . . S TMP=TMP_U_($D(RORXDST("ARV"))>0)_U_CMPXCARE_U_CLINAIDS
"RTN","RORX008A",81,0)
 . . S ^TMP("RORX008",$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_TMP
"RTN","RORX008A",82,0)
 ;
"RTN","RORX008A",83,0)
 ;--- Totals
"RTN","RORX008A",84,0)
 S ^TMP("RORX008",$J,"PAT")=CNTBASIC_U_CNTCMPX_U_CNTARV
"RTN","RORX008A",85,0)
 ;---
"RTN","RORX008A",86,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX008A",87,0)
 ;
"RTN","RORX008A",88,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX008A",89,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX008A",90,0)
 N CA,IEN,NAME
"RTN","RORX008A",91,0)
 S IEN=+ROR8DST("RORXGEN"),NAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX008A",92,0)
 Q:(IEN'>0)!(NAME="") 1
"RTN","RORX008A",93,0)
 ;---
"RTN","RORX008A",94,0)
 S ROR8DST("ARV")=""  Q:ROR8DST("SINGLE") 2
"RTN","RORX008A",95,0)
 ;---
"RTN","RORX008A",96,0)
 S ROR8DST("ARV",IEN)=NAME
"RTN","RORX008A",97,0)
 Q 0
"RTN","RORX008A",98,0)
 ;
"RTN","RORX008A",99,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX008A",100,0)
 ;
"RTN","RORX008A",101,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX008A",102,0)
 ;
"RTN","RORX008A",103,0)
 ; Return Values:
"RTN","RORX008A",104,0)
 ;       <0  Error code
"RTN","RORX008A",105,0)
 ;        0  Ok
"RTN","RORX008A",106,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX008A",107,0)
 ;
"RTN","RORX008A",108,0)
STORE(REPORT) ;
"RTN","RORX008A",109,0)
 N BUF,CNT,ITEM,IEN,NODE,NPAIDS,NPHIV,RC,TABLE,TMP
"RTN","RORX008A",110,0)
 S NODE=$NA(^TMP("RORX008",$J)),RC=0
"RTN","RORX008A",111,0)
 ;
"RTN","RORX008A",112,0)
 ;--- List of ARV drugs
"RTN","RORX008A",113,0)
 S TMP=$$PARAM^RORTSK01("OPTIONS","REGMEDSMRY")
"RTN","RORX008A",114,0)
 I TMP,$$PARAM^RORTSK01("PATIENTS","COMPLEX")  D  Q:RC<0 RC
"RTN","RORX008A",115,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,REPORT)
"RTN","RORX008A",116,0)
 . I TABLE<0  S RC=TABLE  Q
"RTN","RORX008A",117,0)
 . D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","DRUGS")
"RTN","RORX008A",118,0)
 . S IEN=0
"RTN","RORX008A",119,0)
 . F  S IEN=$O(@NODE@("DRG",IEN))  Q:IEN'>0  D
"RTN","RORX008A",120,0)
 . . S BUF=@NODE@("DRG",IEN)
"RTN","RORX008A",121,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,TABLE)
"RTN","RORX008A",122,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(@NODE@("DRG",IEN),U),ITEM,1)
"RTN","RORX008A",123,0)
 . . S NPHIV=+$G(@NODE@("DRG",IEN,0))
"RTN","RORX008A",124,0)
 . . S NPAIDS=+$G(@NODE@("DRG",IEN,1))
"RTN","RORX008A",125,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NP",NPHIV+NPAIDS,ITEM,3)
"RTN","RORX008A",126,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NPHIV",NPHIV,ITEM,3)
"RTN","RORX008A",127,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NPAIDS",NPAIDS,ITEM,3)
"RTN","RORX008A",128,0)
 ;
"RTN","RORX008A",129,0)
 ;--- List of patients
"RTN","RORX008A",130,0)
 I $$PARAM^RORTSK01("OPTIONS","PTLIST")  D  Q:RC<0 RC
"RTN","RORX008A",131,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX008A",132,0)
 . I TABLE<0  S RC=TABLE  Q
"RTN","RORX008A",133,0)
 . D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PATIENTS")
"RTN","RORX008A",134,0)
 . S IEN=0
"RTN","RORX008A",135,0)
 . F  S IEN=$O(@NODE@("PAT",IEN))  Q:IEN'>0  D
"RTN","RORX008A",136,0)
 . . S BUF=@NODE@("PAT",IEN)
"RTN","RORX008A",137,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,TABLE,,IEN)
"RTN","RORX008A",138,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(BUF,U,2),ITEM,1)
"RTN","RORX008A",139,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",$P(BUF,U),ITEM,2)
"RTN","RORX008A",140,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",$P(BUF,U,3),ITEM,1)
"RTN","RORX008A",141,0)
 . . D ADDVAL^RORTSK11(RORTSK,"AIDSTAT",+$P(BUF,U,6),ITEM,1)
"RTN","RORX008A",142,0)
 . . D ADDVAL^RORTSK11(RORTSK,"ARV",+$P(BUF,U,4),ITEM,1)
"RTN","RORX008A",143,0)
 . . D ADDVAL^RORTSK11(RORTSK,"COMPLEX",+$P(BUF,U,5),ITEM,1)
"RTN","RORX008A",144,0)
 ;
"RTN","RORX008A",145,0)
 ;--- Summary
"RTN","RORX008A",146,0)
 S BUF=@NODE@("PAT")
"RTN","RORX008A",147,0)
 S ITEM=$$ADDVAL^RORTSK11(RORTSK,"SUMMARY",,REPORT)
"RTN","RORX008A",148,0)
 D ADDVAL^RORTSK11(RORTSK,"NP",$P(BUF,U)+$P(BUF,U,2),ITEM)
"RTN","RORX008A",149,0)
 D ADDVAL^RORTSK11(RORTSK,"NPBASIC",+$P(BUF,U,1),ITEM)
"RTN","RORX008A",150,0)
 D ADDVAL^RORTSK11(RORTSK,"NPCOMPLEX",+$P(BUF,U,2),ITEM)
"RTN","RORX008A",151,0)
 D ADDVAL^RORTSK11(RORTSK,"NPARV",+$P(BUF,U,3),ITEM)
"RTN","RORX008A",152,0)
 Q 0
"RTN","RORX009A")
0^14^B67206272^B60001463
"RTN","RORX009A",1,0)
RORX009A ;HOIFO/SG,VAC - PRESCRIPTION UTILIZ. (QUERY & SORT) ;4/7/09 2:08pm
"RTN","RORX009A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX009A",3,0)
 ;
"RTN","RORX009A",4,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX009A",5,0)
 ;   or Exclude
"RTN","RORX009A",6,0)
 ;   
"RTN","RORX009A",7,0)
 ; This routine uses the following IAs:
"RTN","RORX009A",8,0)
 ;
"RTN","RORX009A",9,0)
 ; #10103         FMADD^XLFDT (supported)
"RTN","RORX009A",10,0)
 ;   
"RTN","RORX009A",11,0)
 Q
"RTN","RORX009A",12,0)
 ;
"RTN","RORX009A",13,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX009A",14,0)
 ;
"RTN","RORX009A",15,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX009A",16,0)
 ;
"RTN","RORX009A",17,0)
 ; Return Values:
"RTN","RORX009A",18,0)
 ;       <0  Error code
"RTN","RORX009A",19,0)
 ;        0  Ok
"RTN","RORX009A",20,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX009A",21,0)
 ;
"RTN","RORX009A",22,0)
QUERY(FLAGS) ;
"RTN","RORX009A",23,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX009A",24,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX009A",25,0)
 ;
"RTN","RORX009A",26,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,RORXDST,RXFLAGS,TMP,XREFNODE
"RTN","RORX009A",27,0)
 N RCC,FLAG
"RTN","RORX009A",28,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX009A",29,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX009A",30,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT,1)
"RTN","RORX009A",31,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX009A",32,0)
 ;
"RTN","RORX009A",33,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX009A",34,0)
 S RORXDST=$NA(^TMP("RORX009",$J))
"RTN","RORX009A",35,0)
 S RORXDST("RORCB")="$$RXSCB^RORX009A"
"RTN","RORX009A",36,0)
 S RORXDST("GENERIC")=$$PARAM^RORTSK01("DRUGS","AGGR_GENERIC")
"RTN","RORX009A",37,0)
 S RXFLAGS="E"
"RTN","RORX009A",38,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") RXFLAGS=RXFLAGS_"IV"
"RTN","RORX009A",39,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") RXFLAGS=RXFLAGS_"O"
"RTN","RORX009A",40,0)
 Q:RXFLAGS="E" 0
"RTN","RORX009A",41,0)
 ;
"RTN","RORX009A",42,0)
 ;--- Browse through the registry records
"RTN","RORX009A",43,0)
 S IEN=0
"RTN","RORX009A",44,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX009A",45,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX009A",46,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX009A",47,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX009A",48,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX009A",49,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX009A",50,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX009A",51,0)
 . ;
"RTN","RORX009A",52,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX009A",53,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX009A",54,0)
 . ;--- Check if patient filtered for ICD9 Codes
"RTN","RORX009A",55,0)
 . S RCC=0
"RTN","RORX009A",56,0)
 . I FLAG'="ALL" D
"RTN","RORX009A",57,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX009A",58,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX009A",59,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX009A",60,0)
 . ;--- End of ICD9 Filter check.
"RTN","RORX009A",61,0)
 . ;
"RTN","RORX009A",62,0)
 . ;--- Search the pharmacy data
"RTN","RORX009A",63,0)
 . M RORXDST("RORXGRP")=RORXGRP("C")
"RTN","RORX009A",64,0)
 . S TMP=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,RXFLAGS,RORSDT,ROREDT1)
"RTN","RORX009A",65,0)
 . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX009A",66,0)
 . ;--- No medications from some groups
"RTN","RORX009A",67,0)
 . Q:$D(RORXDST("RORXGRP"))>1
"RTN","RORX009A",68,0)
 . ;--- Skip the patient if no data has been found
"RTN","RORX009A",69,0)
 . I '$D(@RORXDST@("IP",PATIEN)),'$D(@RORXDST@("OP",PATIEN))  Q
"RTN","RORX009A",70,0)
 . ;
"RTN","RORX009A",71,0)
 . ;--- Calculate intermediate totals
"RTN","RORX009A",72,0)
 . S RC=$$TOTALS(PATIEN)
"RTN","RORX009A",73,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX009A",74,0)
 ;---
"RTN","RORX009A",75,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX009A",76,0)
 ;
"RTN","RORX009A",77,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX009A",78,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX009A",79,0)
 N DRUGIEN,DRUGNAME,IRP,RPS,RXCNT,SUBS,TMP
"RTN","RORX009A",80,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX009A",81,0)
 . S DRUGIEN=+ROR8DST("RORXGEN"),DRUGNAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX009A",82,0)
 E  S DRUGIEN=+DRUG,DRUGNAME=$P(DRUG,U,2)
"RTN","RORX009A",83,0)
 Q:(DRUGIEN'>0)!(DRUGNAME="") 1
"RTN","RORX009A",84,0)
 ;=== Check the drug groups
"RTN","RORX009A",85,0)
 S TMP=$$RXGRPCHK^RORXU007(.ROR8DST,+DRUG,RORXL)
"RTN","RORX009A",86,0)
 Q:TMP TMP
"RTN","RORX009A",87,0)
 ;=== Process the order
"RTN","RORX009A",88,0)
 S SUBS=$S(ORDFLG["I":"IP",ORDFLG["O":"OP",1:"")  Q:SUBS="" 1
"RTN","RORX009A",89,0)
 S RXCNT=0
"RTN","RORX009A",90,0)
 ;--- Count the original order, refills and partials
"RTN","RORX009A",91,0)
 I ORDFLG["I"  S RXCNT=RXCNT+1  ; Inpatient
"RTN","RORX009A",92,0)
 E  D                           ; Outpatient
"RTN","RORX009A",93,0)
 . S TMP=+$P($G(^TMP("PS",$J,"RXN",0)),U,6)  ; Original Fill Date
"RTN","RORX009A",94,0)
 . S:(TMP'<ROR8DST("RORSDT"))&(TMP<ROR8DST("ROREDT")) RXCNT=RXCNT+1
"RTN","RORX009A",95,0)
 F RPS="PAR","REF"  S IRP=0  D
"RTN","RORX009A",96,0)
 . F  S IRP=$O(^TMP("PS",$J,RPS,IRP))  Q:IRP'>0  S RXCNT=RXCNT+1
"RTN","RORX009A",97,0)
 ;--- Update the counters
"RTN","RORX009A",98,0)
 D:RXCNT>0
"RTN","RORX009A",99,0)
 . S TMP=$G(@ROR8DST@(SUBS,+ROR8DST("RORDFN"),"D",DRUGIEN))
"RTN","RORX009A",100,0)
 . S @ROR8DST@(SUBS,+ROR8DST("RORDFN"),"D",DRUGIEN)=TMP+RXCNT
"RTN","RORX009A",101,0)
 . S TMP=SUBS_"D"
"RTN","RORX009A",102,0)
 . S:'$D(@ROR8DST@(TMP,DRUGIEN)) @ROR8DST@(TMP,DRUGIEN)=DRUGNAME
"RTN","RORX009A",103,0)
 Q 0
"RTN","RORX009A",104,0)
 ;
"RTN","RORX009A",105,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX009A",106,0)
 ;
"RTN","RORX009A",107,0)
 ; Return Values:
"RTN","RORX009A",108,0)
 ;       <0  Error code
"RTN","RORX009A",109,0)
 ;        0  Ok
"RTN","RORX009A",110,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX009A",111,0)
 ;
"RTN","RORX009A",112,0)
SORT() ;
"RTN","RORX009A",113,0)
 N ECNT,NODE,RC
"RTN","RORX009A",114,0)
 S (ECNT,RC)=0
"RTN","RORX009A",115,0)
 S NODE=$NA(^TMP("RORX009",$J))
"RTN","RORX009A",116,0)
 Q:$D(@NODE)<10 0
"RTN","RORX009A",117,0)
 ;---
"RTN","RORX009A",118,0)
 S RC=$$LOOP^RORTSK01(0)    Q:RC<0 RC
"RTN","RORX009A",119,0)
 D SORTRX(NODE,"IPD")
"RTN","RORX009A",120,0)
 ;---
"RTN","RORX009A",121,0)
 S RC=$$LOOP^RORTSK01(.33)  Q:RC<0 RC
"RTN","RORX009A",122,0)
 D SORTRX(NODE,"OPD")
"RTN","RORX009A",123,0)
 ;---
"RTN","RORX009A",124,0)
 S RC=$$LOOP^RORTSK01(.66)  Q:RC<0 RC
"RTN","RORX009A",125,0)
 S RC=$$SUMRX(NODE)
"RTN","RORX009A",126,0)
 ;---
"RTN","RORX009A",127,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX009A",128,0)
 ;
"RTN","RORX009A",129,0)
 ;***** SORTS THE DRUG LIST
"RTN","RORX009A",130,0)
 ;
"RTN","RORX009A",131,0)
 ; NODE          Closed root of the category section
"RTN","RORX009A",132,0)
 ;               in the temporary global
"RTN","RORX009A",133,0)
 ;
"RTN","RORX009A",134,0)
 ; SUBS          Drug list subscript ("IPD" or "OPD")
"RTN","RORX009A",135,0)
 ;
"RTN","RORX009A",136,0)
SORTRX(NODE,SUBS) ;
"RTN","RORX009A",137,0)
 N IEN,NAME,NDRUGS,SUM,TMP
"RTN","RORX009A",138,0)
 S IEN=0,NDRUGS=0
"RTN","RORX009A",139,0)
 F  S IEN=$O(@NODE@(SUBS,IEN))  Q:IEN'>0  D
"RTN","RORX009A",140,0)
 . S NAME=@NODE@(SUBS,IEN),NDRUGS=NDRUGS+1
"RTN","RORX009A",141,0)
 . S TMP=+$G(@NODE@(SUBS,IEN,"D"))
"RTN","RORX009A",142,0)
 . S @NODE@(SUBS,"B",TMP,NAME,IEN)=""
"RTN","RORX009A",143,0)
 ;--- Numbers of different drugs
"RTN","RORX009A",144,0)
 S @NODE@(SUBS)=NDRUGS
"RTN","RORX009A",145,0)
 Q
"RTN","RORX009A",146,0)
 ;
"RTN","RORX009A",147,0)
 ;***** COMBINES THE INPATIENT AND OUTPATIENT DATA
"RTN","RORX009A",148,0)
 ;
"RTN","RORX009A",149,0)
 ; NODE          Closed root of the category section
"RTN","RORX009A",150,0)
 ;               in the temporary global
"RTN","RORX009A",151,0)
 ;
"RTN","RORX009A",152,0)
SUMRX(NODE) ;
"RTN","RORX009A",153,0)
 N COUNT,I,MAXUTNUM,NDRX,NRX,RC,RXIEN,SUMNRX,TMP
"RTN","RORX009A",154,0)
 Q:($D(@NODE@("IPRX"))<10)!($D(@NODE@("OPRX"))<10) 0
"RTN","RORX009A",155,0)
 S MAXUTNUM=$$PARAM^RORTSK01("MAXUTNUM")
"RTN","RORX009A",156,0)
 Q:MAXUTNUM'>0 0
"RTN","RORX009A",157,0)
 ;
"RTN","RORX009A",158,0)
 ;=== Outpatient data
"RTN","RORX009A",159,0)
 S NRX="",(COUNT,RC)=0
"RTN","RORX009A",160,0)
 F  S NRX=$O(@NODE@("OPRX",NRX),-1)  Q:NRX=""  D  Q:RC
"RTN","RORX009A",161,0)
 . S RC=$$LOOP^RORTSK01()  Q:RC<0
"RTN","RORX009A",162,0)
 . S @NODE@("SUMRX",NRX)=$G(@NODE@("OPRX",NRX))
"RTN","RORX009A",163,0)
 . S NAME=""
"RTN","RORX009A",164,0)
 . F  S NAME=$O(@NODE@("OPRX",NRX,NAME))  Q:NAME=""  D  Q:RC
"RTN","RORX009A",165,0)
 . . S DFN=""
"RTN","RORX009A",166,0)
 . . F  S DFN=$O(@NODE@("OPRX",NRX,NAME,DFN))  Q:DFN=""  D  Q:RC
"RTN","RORX009A",167,0)
 . . . ;--- Include only the patients with highest utilization
"RTN","RORX009A",168,0)
 . . . S COUNT=COUNT+1  I COUNT>MAXUTNUM  S RC=1  Q
"RTN","RORX009A",169,0)
 . . . ;--- Calculate the totals
"RTN","RORX009A",170,0)
 . . . S (NDRX,SUMNRX)=0
"RTN","RORX009A",171,0)
 . . . F I="IP","OP"  S TMP=$G(@NODE@(I,DFN))  D
"RTN","RORX009A",172,0)
 . . . . S NDRX=NDRX+$P(TMP,U,5),SUMNRX=SUMNRX+$P(TMP,U,4)
"RTN","RORX009A",173,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN,"OP")=""
"RTN","RORX009A",174,0)
 . . . S @NODE@("SUMRX",SUMNRX)=$G(@NODE@("SUMRX",SUMNRX))+1
"RTN","RORX009A",175,0)
 . . . ;--- Adjust the total number of different drugs
"RTN","RORX009A",176,0)
 . . . ;--- (some drugs could be both inpatient and outpatient)
"RTN","RORX009A",177,0)
 . . . S RXIEN=0
"RTN","RORX009A",178,0)
 . . . F  S RXIEN=$O(@NODE@("OP",DFN,"D",RXIEN))  Q:RXIEN'>0  D
"RTN","RORX009A",179,0)
 . . . . S:$D(@NODE@("IP",DFN,"D",RXIEN)) NDRX=NDRX-1
"RTN","RORX009A",180,0)
 . . . ;--- Store the number of different drugs
"RTN","RORX009A",181,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN)=NDRX
"RTN","RORX009A",182,0)
 ;
"RTN","RORX009A",183,0)
 ;=== Inpatient data
"RTN","RORX009A",184,0)
 S NRX="",(COUNT,RC)=0
"RTN","RORX009A",185,0)
 F  S NRX=$O(@NODE@("IPRX",NRX),-1)  Q:NRX=""  D  Q:RC
"RTN","RORX009A",186,0)
 . S RC=$$LOOP^RORTSK01()  Q:RC<0
"RTN","RORX009A",187,0)
 . S NAME=""
"RTN","RORX009A",188,0)
 . F  S NAME=$O(@NODE@("IPRX",NRX,NAME))  Q:NAME=""  D  Q:RC
"RTN","RORX009A",189,0)
 . . S DFN=""
"RTN","RORX009A",190,0)
 . . F  S DFN=$O(@NODE@("IPRX",NRX,NAME,DFN))  Q:DFN=""  D  Q:RC
"RTN","RORX009A",191,0)
 . . . ;--- Include only the patients with highest utilization
"RTN","RORX009A",192,0)
 . . . S COUNT=COUNT+1  I COUNT>MAXUTNUM  S RC=1  Q
"RTN","RORX009A",193,0)
 . . . ;--- Calculate the totals
"RTN","RORX009A",194,0)
 . . . S (NDRX,SUMNRX)=0
"RTN","RORX009A",195,0)
 . . . F I="IP","OP"  S TMP=$G(@NODE@(I,DFN))  D
"RTN","RORX009A",196,0)
 . . . . S NDRX=NDRX+$P(TMP,U,5),SUMNRX=SUMNRX+$P(TMP,U,4)
"RTN","RORX009A",197,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN,"IP")=""
"RTN","RORX009A",198,0)
 . . . ;--- Quit if the patient has been processed already
"RTN","RORX009A",199,0)
 . . . Q:$D(@NODE@("SUMRX",SUMNRX,NAME,DFN,"OP"))
"RTN","RORX009A",200,0)
 . . . S @NODE@("SUMRX",SUMNRX)=$G(@NODE@("SUMRX",SUMNRX))+1
"RTN","RORX009A",201,0)
 . . . ;--- Adjust the total number of different drugs
"RTN","RORX009A",202,0)
 . . . ;--- (some drugs could be both inpatient and outpatient)
"RTN","RORX009A",203,0)
 . . . S RXIEN=0
"RTN","RORX009A",204,0)
 . . . F  S RXIEN=$O(@NODE@("IP",DFN,"D",RXIEN))  Q:RXIEN'>0  D
"RTN","RORX009A",205,0)
 . . . . S:$D(@NODE@("OP",DFN,"D",RXIEN)) NDRX=NDRX-1
"RTN","RORX009A",206,0)
 . . . ;--- Store the number of different drugs
"RTN","RORX009A",207,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN)=NDRX
"RTN","RORX009A",208,0)
 ;===
"RTN","RORX009A",209,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX009A",210,0)
 ;
"RTN","RORX009A",211,0)
 ;***** CALCULATES THE INTERMEDIATE TOTALS
"RTN","RORX009A",212,0)
 ;
"RTN","RORX009A",213,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX009A",214,0)
 ;
"RTN","RORX009A",215,0)
 ; Return Values:
"RTN","RORX009A",216,0)
 ;       <0  Error code
"RTN","RORX009A",217,0)
 ;        0  Ok
"RTN","RORX009A",218,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX009A",219,0)
 ;
"RTN","RORX009A",220,0)
TOTALS(PATIEN) ;
"RTN","RORX009A",221,0)
 N DOD,IEN,LAST4,NDRUGS,NODE,NRX,PTNAME,PTNRX,RXS,SUBS,TMP,VA,VADM,VAERR
"RTN","RORX009A",222,0)
 S NODE=$NA(^TMP("RORX009",$J))
"RTN","RORX009A",223,0)
 ;--- Get the patient's data
"RTN","RORX009A",224,0)
 D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX009A",225,0)
 S PTNAME=VADM(1),LAST4=VA("BID"),DOD=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX009A",226,0)
 ;---
"RTN","RORX009A",227,0)
 F SUBS="IP","OP"  D:$D(@NODE@(SUBS,PATIEN))>1
"RTN","RORX009A",228,0)
 . S RXS=SUBS_"D"
"RTN","RORX009A",229,0)
 . S IEN=0,(NDRUGS,PTNRX)=0
"RTN","RORX009A",230,0)
 . F  S IEN=$O(@NODE@(SUBS,PATIEN,"D",IEN))  Q:IEN'>0  D
"RTN","RORX009A",231,0)
 . . S NRX=@NODE@(SUBS,PATIEN,"D",IEN)
"RTN","RORX009A",232,0)
 . . S NDRUGS=NDRUGS+1,PTNRX=PTNRX+NRX
"RTN","RORX009A",233,0)
 . . ;---
"RTN","RORX009A",234,0)
 . . S @NODE@(RXS,IEN,"D")=$G(@NODE@(RXS,IEN,"D"))+NRX
"RTN","RORX009A",235,0)
 . . S @NODE@(RXS,IEN,"P")=$G(@NODE@(RXS,IEN,"P"))+1
"RTN","RORX009A",236,0)
 . . ;---
"RTN","RORX009A",237,0)
 . . S TMP=$G(@NODE@(RXS,IEN,"M"))
"RTN","RORX009A",238,0)
 . . D:NRX'<TMP
"RTN","RORX009A",239,0)
 . . . I NRX>TMP  S @NODE@(RXS,IEN,"M")=NRX_U_1  Q
"RTN","RORX009A",240,0)
 . . . S $P(@NODE@(RXS,IEN,"M"),U,2)=$P(TMP,U,2)+1
"RTN","RORX009A",241,0)
 . ;---
"RTN","RORX009A",242,0)
 . S @NODE@(SUBS)=$G(@NODE@(SUBS))+1
"RTN","RORX009A",243,0)
 . S @NODE@(SUBS,PATIEN)=LAST4_U_PTNAME_U_DOD_U_PTNRX_U_NDRUGS
"RTN","RORX009A",244,0)
 . ;---
"RTN","RORX009A",245,0)
 . S RXS=SUBS_"RX"
"RTN","RORX009A",246,0)
 . S @NODE@(RXS)=$G(@NODE@(RXS))+PTNRX
"RTN","RORX009A",247,0)
 . S @NODE@(RXS,PTNRX)=$G(@NODE@(RXS,PTNRX))+1
"RTN","RORX009A",248,0)
 . S @NODE@(RXS,PTNRX,PTNAME,PATIEN)=""
"RTN","RORX009A",249,0)
 ;---
"RTN","RORX009A",250,0)
 Q 0
"RTN","RORX010")
0^15^B47994129^B42705985
"RTN","RORX010",1,0)
RORX010 ;HOIFO/SG,VAC - LAB TESTS BY RANGE REPORT ;4/7/09 2:08pm
"RTN","RORX010",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX010",3,0)
 ;
"RTN","RORX010",4,0)
 ; This routine uses the following IAs:
"RTN","RORX010",5,0)
 ;
"RTN","RORX010",6,0)
 ; #2056  GETS^DIQ (supported)
"RTN","RORX010",7,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX010",8,0)
 ;
"RTN","RORX010",9,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX010",10,0)
 ;    or Exclude
"RTN","RORX010",11,0)
 Q
"RTN","RORX010",12,0)
 ;
"RTN","RORX010",13,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX010",14,0)
 ;
"RTN","RORX010",15,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX010",16,0)
 ;
"RTN","RORX010",17,0)
 ; Return Values:
"RTN","RORX010",18,0)
 ;       <0  Error code
"RTN","RORX010",19,0)
 ;        0  Ok
"RTN","RORX010",20,0)
 ;
"RTN","RORX010",21,0)
HEADER(PARTAG) ;
"RTN","RORX010",22,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,PTLRL(GROUP,DATE,NAME,RESULT))
"RTN","RORX010",23,0)
 ;
"RTN","RORX010",24,0)
 N COLUMNS,HEADER,LT,NAME,TMP
"RTN","RORX010",25,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX010",26,0)
 Q:HEADER<0 HEADER
"RTN","RORX010",27,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX010",HEADER)
"RTN","RORX010",28,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX010",29,0)
 ;
"RTN","RORX010",30,0)
 ;***** COMPILES THE LAB TESTS BY RANGE REPORT
"RTN","RORX010",31,0)
 ; REPORT CODE: 010
"RTN","RORX010",32,0)
 ;
"RTN","RORX010",33,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX010",34,0)
 ;
"RTN","RORX010",35,0)
 ; The ^TMP("RORX010",$J) global node is used by this function.
"RTN","RORX010",36,0)
 ;
"RTN","RORX010",37,0)
 ; Return Values:
"RTN","RORX010",38,0)
 ;       <0  Error code
"RTN","RORX010",39,0)
 ;        0  Ok
"RTN","RORX010",40,0)
 ;
"RTN","RORX010",41,0)
LRGRANGE(RORTSK) ;
"RTN","RORX010",42,0)
 N RORDST        ; Callback descriptor
"RTN","RORX010",43,0)
 N ROREDT        ; End date
"RTN","RORX010",44,0)
 N ROREDT1       ; End date + 1 day
"RTN","RORX010",45,0)
 N RORLTL        ; Closed root of the list of lab tests to search for
"RTN","RORX010",46,0)
 N RORREG        ; Registry IEN
"RTN","RORX010",47,0)
 N RORSDT        ; Start date
"RTN","RORX010",48,0)
 ;
"RTN","RORX010",49,0)
 N BODY,CNT,ECNT,IEN,IENS,LRGLST,RC,REPORT,RORPTN,SFLAGS,TMP
"RTN","RORX010",50,0)
 N DFN,RCC,FLAG
"RTN","RORX010",51,0)
 ;--- Root node of the report
"RTN","RORX010",52,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX010",53,0)
 Q:REPORT<0 REPORT
"RTN","RORX010",54,0)
 ;
"RTN","RORX010",55,0)
 ;--- Get and prepare the report parameters
"RTN","RORX010",56,0)
 S RORREG=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORX010",57,0)
 S RC=$$PARAMS(REPORT,.SFLAGS,.LRGLST)  Q:RC<0 RC
"RTN","RORX010",58,0)
 ;
"RTN","RORX010",59,0)
 ;--- Initialize constants and variables
"RTN","RORX010",60,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX010",61,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1),ECNT=0
"RTN","RORX010",62,0)
 K ^TMP("RORX010",$J)
"RTN","RORX010",63,0)
 S RORLTL=$$ALLOC^RORTMP()
"RTN","RORX010",64,0)
 ;
"RTN","RORX010",65,0)
 ;--- Prepare the search parameters
"RTN","RORX010",66,0)
 S RORDST=$NA(^TMP("RORX010",$J))
"RTN","RORX010",67,0)
 S RORDST("RORCB")="$$LTCB^RORX010"
"RTN","RORX010",68,0)
 S RC=$$LOADTSTS^RORUTL10(RORLTL,+RORREG,LRGLST)
"RTN","RORX010",69,0)
 ;
"RTN","RORX010",70,0)
 ;--- Report header and list of patients
"RTN","RORX010",71,0)
 S RC=$$HEADER(REPORT)  G:RC<0 ERROR
"RTN","RORX010",72,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX010",73,0)
 I BODY<0  S RC=+BODY  G ERROR
"RTN","RORX010",74,0)
 D ADDATTR^RORTSK11(RORTSK,BODY,"TABLE","PATIENTS")
"RTN","RORX010",75,0)
 ;
"RTN","RORX010",76,0)
 ;--- Browse through the registry records
"RTN","RORX010",77,0)
 S (CNT,IEN,RC)=0
"RTN","RORX010",78,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX010",79,0)
 F  S IEN=$O(^RORDATA(798,"AC",RORREG,IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX010",80,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX010",81,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX010",82,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX010",83,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX010",84,0)
 . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORSDT,ROREDT)
"RTN","RORX010",85,0)
 . ;--- Check pateint against ICD9 Filter
"RTN","RORX010",86,0)
 . S DFN=$$PTIEN^RORUTL01(+IENS)
"RTN","RORX010",87,0)
 . S RCC=0
"RTN","RORX010",88,0)
 . I FLAG'="ALL" D
"RTN","RORX010",89,0)
 . . S RCC=$$ICD^RORXU010(DFN,RORREG)
"RTN","RORX010",90,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX010",91,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX010",92,0)
 . ;--- End of ICD9 Check
"RTN","RORX010",93,0)
 . ;--- Process the registry record
"RTN","RORX010",94,0)
 . I $$PATIENT(IENS,BODY)<0  S ECNT=ECNT+1  Q
"RTN","RORX010",95,0)
 ;
"RTN","RORX010",96,0)
ERROR ;--- Cleanup
"RTN","RORX010",97,0)
 D FREE^RORTMP(RORLTL)
"RTN","RORX010",98,0)
 K ^TMP("RORX010",$J)
"RTN","RORX010",99,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX010",100,0)
 ;
"RTN","RORX010",101,0)
 ;***** CALLBACK FUNCTION FOR LAB DATA SEARCH
"RTN","RORX010",102,0)
LTCB(RORDST,INVDT,RESULT) ;
"RTN","RORX010",103,0)
 N GRP,NODE,RC,VAL
"RTN","RORX010",104,0)
 S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORX010",105,0)
 S GRP=+$P($G(RESULT(2)),U,3)
"RTN","RORX010",106,0)
 ;--- Check the result range if necessary
"RTN","RORX010",107,0)
 I $D(@NODE@(GRP))>1  S RC=1  D  Q:RC RC
"RTN","RORX010",108,0)
 . S VAL=$$CLRNMVAL^RORUTL18($P($G(RESULT(1)),U,3))
"RTN","RORX010",109,0)
 . ;--- Skip a non-numeric result
"RTN","RORX010",110,0)
 . Q:'$$NUMERIC^RORUTL05(VAL)
"RTN","RORX010",111,0)
 . ;--- Check the range
"RTN","RORX010",112,0)
 . I $G(@NODE@(GRP,"L"))'=""  Q:VAL<@NODE@(GRP,"L")
"RTN","RORX010",113,0)
 . I $G(@NODE@(GRP,"H"))'=""  Q:VAL>@NODE@(GRP,"H")
"RTN","RORX010",114,0)
 . S RC=0
"RTN","RORX010",115,0)
 ;--- Store the result
"RTN","RORX010",116,0)
 K RORDST("GRP",GRP)
"RTN","RORX010",117,0)
 S RORDST("RORPTR")=$G(RORDST("RORPTR"))+1
"RTN","RORX010",118,0)
 M @RORDST@(RORDST("RORPTR"))=RESULT
"RTN","RORX010",119,0)
 Q 0
"RTN","RORX010",120,0)
 ;
"RTN","RORX010",121,0)
 ;***** OUTPUTS THE REPORT PARAMETERS
"RTN","RORX010",122,0)
 ;
"RTN","RORX010",123,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX010",124,0)
 ;
"RTN","RORX010",125,0)
 ; .FLAGS        Flags for the $$SKIP^RORXU005 are
"RTN","RORX010",126,0)
 ;               returned via this parameter
"RTN","RORX010",127,0)
 ;
"RTN","RORX010",128,0)
 ; .LRGLST       List of lab group codes for the $$LOADTSTS^RORUTL10
"RTN","RORX010",129,0)
 ;
"RTN","RORX010",130,0)
 ; Return Values:
"RTN","RORX010",131,0)
 ;       <0  Error code
"RTN","RORX010",132,0)
 ;        0  Ok
"RTN","RORX010",133,0)
 ;
"RTN","RORX010",134,0)
PARAMS(PARTAG,FLAGS,LRGLST) ;
"RTN","RORX010",135,0)
 N PARAMS,TMP
"RTN","RORX010",136,0)
 S (FLAGS,LRGLST)=""
"RTN","RORX010",137,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.RORSDT,.ROREDT,.FLAGS)
"RTN","RORX010",138,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX010",139,0)
 ;--- Lab test ranges
"RTN","RORX010",140,0)
 I $D(RORTSK("PARAMS","LRGRANGES","C"))>1  D  Q:RC<0 RC
"RTN","RORX010",141,0)
 . N GRC,ELEMENT,NODE,LRGELMTS,RANGE
"RTN","RORX010",142,0)
 . S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORX010",143,0)
 . S LRGELMTS=$$ADDVAL^RORTSK11(RORTSK,"LRGRANGES",,PARAMS)
"RTN","RORX010",144,0)
 . S (GRC,RC)=0
"RTN","RORX010",145,0)
 . F  S GRC=$O(@NODE@(GRC))  Q:GRC'>0  D  Q:RC<0
"RTN","RORX010",146,0)
 . . S RANGE=0,TMP=$$RANGE(GRC)
"RTN","RORX010",147,0)
 . . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"LRGRANGE",TMP,LRGELMTS)
"RTN","RORX010",148,0)
 . . I ELEMENT<0  S RC=ELEMENT  Q
"RTN","RORX010",149,0)
 . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"ID",GRC)
"RTN","RORX010",150,0)
 . . S LRGLST=LRGLST_$S(LRGLST'="":","_GRC,1:GRC)
"RTN","RORX010",151,0)
 . . ;--- Process the range values
"RTN","RORX010",152,0)
 . . S TMP=$G(@NODE@(GRC,"L"))
"RTN","RORX010",153,0)
 . . I TMP'=""  D  S RANGE=1
"RTN","RORX010",154,0)
 . . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"LOW",TMP)
"RTN","RORX010",155,0)
 . . S TMP=$G(@NODE@(GRC,"H"))
"RTN","RORX010",156,0)
 . . I TMP'=""  D  S RANGE=1
"RTN","RORX010",157,0)
 . . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"HIGH",TMP)
"RTN","RORX010",158,0)
 . . D:RANGE ADDATTR^RORTSK11(RORTSK,ELEMENT,"RANGE",1)
"RTN","RORX010",159,0)
 ;--- Success
"RTN","RORX010",160,0)
 Q PARAMS
"RTN","RORX010",161,0)
 ;
"RTN","RORX010",162,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX010",163,0)
 ;
"RTN","RORX010",164,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX010",165,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX010",166,0)
 ;
"RTN","RORX010",167,0)
 ; Return Values:
"RTN","RORX010",168,0)
 ;       <0  Error code
"RTN","RORX010",169,0)
 ;        0  Ok
"RTN","RORX010",170,0)
 ;
"RTN","RORX010",171,0)
PATIENT(IENS,PARTAG) ;
"RTN","RORX010",172,0)
 N DFN,I,LABTESTS,LT,NAME,RC,RORBUF,RORMSG,TMP,VA,VADM
"RTN","RORX010",173,0)
 ;--- Get the data from the ROR REGISTRY RECORD file
"RTN","RORX010",174,0)
 K RORMSG D GETS^DIQ(798,IENS,".01","I","RORBUF","RORMSG")
"RTN","RORX010",175,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX010",176,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX010",177,0)
 S DFN=$G(RORBUF(798,IENS,.01,"I"))
"RTN","RORX010",178,0)
 ;--- Search for the lab results
"RTN","RORX010",179,0)
 K @RORDST,RORDST("RORPTR")
"RTN","RORX010",180,0)
 M RORDST("GRP")=RORTSK("PARAMS","LRGRANGES","C")
"RTN","RORX010",181,0)
 S RC=$$LTSEARCH^RORUTL10(DFN,RORLTL,.RORDST,,RORSDT,ROREDT1)
"RTN","RORX010",182,0)
 Q:RC'>0 RC
"RTN","RORX010",183,0)
 ;--- Results from all groups should be present
"RTN","RORX010",184,0)
 Q:$D(RORDST("GRP"))>1 0
"RTN","RORX010",185,0)
 ;--- Load the demographic data
"RTN","RORX010",186,0)
 D VADEM^RORUTL05(DFN,1)
"RTN","RORX010",187,0)
 ;--- The <PATIENT> tag
"RTN","RORX010",188,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,DFN)
"RTN","RORX010",189,0)
 Q:PTAG<0 PTAG
"RTN","RORX010",190,0)
 ;--- Patient Name
"RTN","RORX010",191,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX010",192,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX010",193,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX010",194,0)
 ;--- Date of death
"RTN","RORX010",195,0)
 S TMP=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX010",196,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX010",197,0)
 ;--- Lab results
"RTN","RORX010",198,0)
 S LABTESTS=$$ADDVAL^RORTSK11(RORTSK,"PTLRL",,PTAG)
"RTN","RORX010",199,0)
 S I=""
"RTN","RORX010",200,0)
 F  S I=$O(@RORDST@(I))  Q:I=""  D
"RTN","RORX010",201,0)
 . S LT=$$ADDVAL^RORTSK11(RORTSK,"LT",,LABTESTS)
"RTN","RORX010",202,0)
 . D ADDVAL^RORTSK11(RORTSK,"GROUP",$P(@RORDST@(I,2),U,4),LT,1)
"RTN","RORX010",203,0)
 . D ADDVAL^RORTSK11(RORTSK,"DATE",$P(@RORDST@(I,1),U,2),LT,1)
"RTN","RORX010",204,0)
 . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(@RORDST@(I,2),U,2),LT,1)
"RTN","RORX010",205,0)
 . D ADDVAL^RORTSK11(RORTSK,"RESULT",$P(@RORDST@(I,1),U,3),LT,3)
"RTN","RORX010",206,0)
 ;---
"RTN","RORX010",207,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX010",208,0)
 ;
"RTN","RORX010",209,0)
 ;***** PROCESSES THE RESULT RANGE OPTIONS
"RTN","RORX010",210,0)
 ;
"RTN","RORX010",211,0)
 ; GRC           Code of a Lab Group
"RTN","RORX010",212,0)
 ;
"RTN","RORX010",213,0)
 ; Return Values:
"RTN","RORX010",214,0)
 ;       Description of the Lab results to be included in the report.
"RTN","RORX010",215,0)
 ;
"RTN","RORX010",216,0)
RANGE(GRC) ;
"RTN","RORX010",217,0)
 N RANGE,TMP
"RTN","RORX010",218,0)
 S RANGE=""
"RTN","RORX010",219,0)
 ;--- Range
"RTN","RORX010",220,0)
 D:$D(RORTSK("PARAMS","LRGRANGES","C",GRC))>1
"RTN","RORX010",221,0)
 . ;--- Low
"RTN","RORX010",222,0)
 . S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC,"L"))
"RTN","RORX010",223,0)
 . S:TMP'="" RANGE=RANGE_" not less than "_TMP
"RTN","RORX010",224,0)
 . ;--- High
"RTN","RORX010",225,0)
 . S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC,"H"))
"RTN","RORX010",226,0)
 . I TMP'=""  D:RANGE'=""  S RANGE=RANGE_" not greater than "_TMP
"RTN","RORX010",227,0)
 . . S RANGE=RANGE_" and"
"RTN","RORX010",228,0)
 ;--- Description
"RTN","RORX010",229,0)
 S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC))
"RTN","RORX010",230,0)
 S:TMP="" TMP="Unknown ("_GRC_")"
"RTN","RORX010",231,0)
 Q TMP_" - "_$S(RANGE'="":"numeric results"_RANGE,1:"all results")
"RTN","RORX011")
0^16^B62423011^B55424933
"RTN","RORX011",1,0)
RORX011 ;HOIFO/SG,VAC - PATIENT MEDICATION HISTORY ;4/17/09 10:45am
"RTN","RORX011",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORX011",3,0)
 ;
"RTN","RORX011",4,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX011",5,0)
 ;    or Exclude
"RTN","RORX011",6,0)
 ;
"RTN","RORX011",7,0)
 ; This routine uses the following IAs:
"RTN","RORX011",8,0)
 ;
"RTN","RORX011",9,0)
 ; #10103 DT^XLFDT, FMADD^XLFDT (supported)
"RTN","RORX011",10,0)
 ;    
"RTN","RORX011",11,0)
 Q
"RTN","RORX011",12,0)
 ;
"RTN","RORX011",13,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX011",14,0)
 ;
"RTN","RORX011",15,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX011",16,0)
 ;
"RTN","RORX011",17,0)
 ; Return Values:
"RTN","RORX011",18,0)
 ;       <0  Error code
"RTN","RORX011",19,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX011",20,0)
 ;
"RTN","RORX011",21,0)
HEADER(PARTAG) ;
"RTN","RORX011",22,0)
 ;;PATIENTS(#,NAME,LAST4,DOB,AGE,DOD)
"RTN","RORX011",23,0)
 ;;PTRXL(DATE,ORDER,TYPE,NAME,GENERIC,DAYSPLY,FILLTYPE)
"RTN","RORX011",24,0)
 ;
"RTN","RORX011",25,0)
 N HEADER,NOTES,RC
"RTN","RORX011",26,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX011",27,0)
 Q:HEADER<0 HEADER
"RTN","RORX011",28,0)
 S NOTES=$$ADDVAL^RORTSK11(RORTSK,"NOTES",,HEADER)
"RTN","RORX011",29,0)
 D ADDVAL^RORTSK11(RORTSK,"AGE",$$DT^XLFDT,NOTES)
"RTN","RORX011",30,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX011",HEADER)
"RTN","RORX011",31,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX011",32,0)
 ;
"RTN","RORX011",33,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX011",34,0)
 ;
"RTN","RORX011",35,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX011",36,0)
 ;
"RTN","RORX011",37,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX011",38,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX011",39,0)
 ;
"RTN","RORX011",40,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX011",41,0)
 ;               returned via this parameter
"RTN","RORX011",42,0)
 ;
"RTN","RORX011",43,0)
 ; Return Values:
"RTN","RORX011",44,0)
 ;       <0  Error code
"RTN","RORX011",45,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX011",46,0)
 ;
"RTN","RORX011",47,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX011",48,0)
 N PARAMS,TMP
"RTN","RORX011",49,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX011",50,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX011",51,0)
 ;--- Process the drug list and options
"RTN","RORX011",52,0)
 S TMP=$$DRUGLST^RORXU007(.RORTSK,PARAMS,.RORXL,.RORXGRP)
"RTN","RORX011",53,0)
 Q:TMP<0 TMP
"RTN","RORX011",54,0)
 ;---
"RTN","RORX011",55,0)
 Q PARAMS
"RTN","RORX011",56,0)
 ;
"RTN","RORX011",57,0)
 ;***** PROCESS THE PATIENT'S DATA
"RTN","RORX011",58,0)
 ;
"RTN","RORX011",59,0)
 ; PTLIST        Reference (IEN) to the parent tag
"RTN","RORX011",60,0)
 ; PATIEN        Patient IEN in the file #2 (DFN)
"RTN","RORX011",61,0)
 ;
"RTN","RORX011",62,0)
 ; Return Values:
"RTN","RORX011",63,0)
 ;       <0  Error code
"RTN","RORX011",64,0)
 ;        0  Ok
"RTN","RORX011",65,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX011",66,0)
 ;
"RTN","RORX011",67,0)
PATIENT(PTLIST,PATIEN) ;
"RTN","RORX011",68,0)
 N BUF,FLT,FLTL,FQL,ITEM,NODE,PTAG,QSB,RC,TABLE,VA,VADM,VAERR
"RTN","RORX011",69,0)
 S (ECNT,RC)=0
"RTN","RORX011",70,0)
 ;--- Patient data
"RTN","RORX011",71,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTLIST,,PATIEN)
"RTN","RORX011",72,0)
 Q:PTAG<0 PTAG
"RTN","RORX011",73,0)
 D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX011",74,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX011",75,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX011",76,0)
 D ADDVAL^RORTSK11(RORTSK,"DOB",$$DATE^RORXU002(VADM(3)\1),PTAG,1)
"RTN","RORX011",77,0)
 D ADDVAL^RORTSK11(RORTSK,"AGE",VADM(4),PTAG,3)
"RTN","RORX011",78,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",$$DATE^RORXU002(VADM(6)\1),PTAG,1)
"RTN","RORX011",79,0)
 ;--- List of drugs
"RTN","RORX011",80,0)
 S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PTRXL",,PTAG)
"RTN","RORX011",81,0)
 Q:TABLE<0 TABLE
"RTN","RORX011",82,0)
 D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PTRXL")
"RTN","RORX011",83,0)
 ;---
"RTN","RORX011",84,0)
 S NODE=RORXDST,FLTL=$L(NODE)-1,FLT=$E(NODE,1,FLTL)
"RTN","RORX011",85,0)
 S QSB=$QL(NODE),FQL=QSB+5
"RTN","RORX011",86,0)
 F  S NODE=$Q(@NODE)  Q:$E(NODE,1,FLTL)'=FLT  D:$QL(NODE)=FQL
"RTN","RORX011",87,0)
 . ; NODE: @RORXDST@(DATE,DRUGNAME,DRUGIEN,RXNUM,RXCNT)
"RTN","RORX011",88,0)
 . S BUF=@NODE
"RTN","RORX011",89,0)
 . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,TABLE)
"RTN","RORX011",90,0)
 . D ADDVAL^RORTSK11(RORTSK,"DATE",$QS(NODE,QSB+1)\1,ITEM,1)
"RTN","RORX011",91,0)
 . D ADDVAL^RORTSK11(RORTSK,"ORDER",$QS(NODE,QSB+4),ITEM,1)
"RTN","RORX011",92,0)
 . S TMP=$P(BUF,U)
"RTN","RORX011",93,0)
 . S TMP=$S(TMP="O":"ORIGINAL",TMP="P":"PARTIAL",TMP="R":"REFILL",1:"")
"RTN","RORX011",94,0)
 . D ADDVAL^RORTSK11(RORTSK,"TYPE",TMP,ITEM,1)
"RTN","RORX011",95,0)
 . D ADDVAL^RORTSK11(RORTSK,"NAME",$QS(NODE,QSB+2),ITEM,1)
"RTN","RORX011",96,0)
 . D ADDVAL^RORTSK11(RORTSK,"GENERIC",$P(BUF,U,4),ITEM,1)
"RTN","RORX011",97,0)
 . D ADDVAL^RORTSK11(RORTSK,"DAYSPLY",$P(BUF,U,5),ITEM,1)
"RTN","RORX011",98,0)
 . S TMP=$P(BUF,U,2)
"RTN","RORX011",99,0)
 . S TMP=$S(TMP="I":"INPATIENT",TMP="M":"MAIL",TMP="W":"WINDOW",1:"")
"RTN","RORX011",100,0)
 . D ADDVAL^RORTSK11(RORTSK,"FILLTYPE",TMP,ITEM,1)
"RTN","RORX011",101,0)
 ;---
"RTN","RORX011",102,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX011",103,0)
 ;
"RTN","RORX011",104,0)
 ;***** PROCESSES THE LIST OF PATIENTS
"RTN","RORX011",105,0)
 ;
"RTN","RORX011",106,0)
 ; REPORT        Reference (IEN) to the parent tag
"RTN","RORX011",107,0)
 ;
"RTN","RORX011",108,0)
 ; Return Values:
"RTN","RORX011",109,0)
 ;       <0  Error code
"RTN","RORX011",110,0)
 ;        0  Ok
"RTN","RORX011",111,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX011",112,0)
 ;
"RTN","RORX011",113,0)
PROCESS(REPORT,FLAGS) ;
"RTN","RORX011",114,0)
 N CNT,ECNT,IEN798,PTIEN,PTLIST,PTNODE,RC,RORPTN,RORXDST,RXFLAGS,TMP
"RTN","RORX011",115,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX011",116,0)
 N RCC,FLAG
"RTN","RORX011",117,0)
 ;
"RTN","RORX011",118,0)
 ;--- Count patients in the list
"RTN","RORX011",119,0)
 I RORALL  D  S:RORPTN<0 RORPTN=0
"RTN","RORX011",120,0)
 . S PTNODE=$NA(^RORDATA(798,"ARP",RORREG_"#"))
"RTN","RORX011",121,0)
 . S RORPTN=$$REGSIZE^RORUTL02(+RORREG)
"RTN","RORX011",122,0)
 E  S (PTIEN,RORPTN)=0  D  Q:RORPTN'>0 0
"RTN","RORX011",123,0)
 . S PTNODE=$NA(RORTSK("PARAMS","PATIENTS","C"))
"RTN","RORX011",124,0)
 . F  S PTIEN=$O(@PTNODE@(PTIEN))  Q:PTIEN'>0  S RORPTN=RORPTN+1
"RTN","RORX011",125,0)
 ;---
"RTN","RORX011",126,0)
 S PTLIST=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX011",127,0)
 Q:PTLIST<0 PTLIST
"RTN","RORX011",128,0)
 ;
"RTN","RORX011",129,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX011",130,0)
 S RORXDST=$NA(^TMP("RORX011",$J))
"RTN","RORX011",131,0)
 S RORXDST("RORCB")="$$RXSCB^RORX011"
"RTN","RORX011",132,0)
 S RXFLAGS="E"
"RTN","RORX011",133,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") RXFLAGS=RXFLAGS_"IV"
"RTN","RORX011",134,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") RXFLAGS=RXFLAGS_"O"
"RTN","RORX011",135,0)
 ;
"RTN","RORX011",136,0)
 ;--- Browse through the list of patients
"RTN","RORX011",137,0)
 S (CNT,PTIEN)=0
"RTN","RORX011",138,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX011",139,0)
 F  S PTIEN=$O(@PTNODE@(PTIEN))  Q:PTIEN'>0  D  Q:RC<0
"RTN","RORX011",140,0)
 . S RC=$$LOOP^RORTSK01(CNT/RORPTN)  Q:RC<0
"RTN","RORX011",141,0)
 . S CNT=CNT+1,IEN798=$$PRRIEN^RORUTL01(PTIEN,RORREG)  Q:IEN798'>0
"RTN","RORX011",142,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX011",143,0)
 . I RORALL  Q:$$SKIP^RORXU005(IEN798,FLAGS,RORSDT,ROREDT)
"RTN","RORX011",144,0)
 . ;--- Check the patient against the ICD9 Filter
"RTN","RORX011",145,0)
 . S RCC=0
"RTN","RORX011",146,0)
 . I FLAG'="ALL" D
"RTN","RORX011",147,0)
 . . S RCC=$$ICD^RORXU010(PTIEN,RORREG)
"RTN","RORX011",148,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX011",149,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX011",150,0)
 .; End of check for ICD9 Filter
"RTN","RORX011",151,0)
 . ;--- Search the pharmacy data
"RTN","RORX011",152,0)
 . K @RORXDST
"RTN","RORX011",153,0)
 . S TMP=$$RXSEARCH^RORUTL14(PTIEN,RORXL,.RORXDST,RXFLAGS,RORSDT,ROREDT1)
"RTN","RORX011",154,0)
 . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX011",155,0)
 . I RORALL  Q:TMP'>0
"RTN","RORX011",156,0)
 . ;--- Append the patient's data to the report
"RTN","RORX011",157,0)
 . S TMP=$$PATIENT(PTLIST,PTIEN)
"RTN","RORX011",158,0)
 . I TMP  S ECNT=ECNT+$S(TMP>0:TMP,1:1)  Q
"RTN","RORX011",159,0)
 ;
"RTN","RORX011",160,0)
 ;--- Cleanup
"RTN","RORX011",161,0)
 K @RORXDST
"RTN","RORX011",162,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX011",163,0)
 ;
"RTN","RORX011",164,0)
 ;***** COMPILES THE "PATIENT DRUG HISTORY" REPORT
"RTN","RORX011",165,0)
 ; REPORT CODE: 011
"RTN","RORX011",166,0)
 ;
"RTN","RORX011",167,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX011",168,0)
 ;
"RTN","RORX011",169,0)
 ; The ^TMP("RORX011",$J) global node is used by this function.
"RTN","RORX011",170,0)
 ;
"RTN","RORX011",171,0)
 ; Return Values:
"RTN","RORX011",172,0)
 ;       <0  Error code
"RTN","RORX011",173,0)
 ;        0  Ok
"RTN","RORX011",174,0)
 ;
"RTN","RORX011",175,0)
RXHIST(RORTSK) ;
"RTN","RORX011",176,0)
 N RORALL        ; Consider all registry patients
"RTN","RORX011",177,0)
 N ROREDT        ; End date
"RTN","RORX011",178,0)
 N ROREDT1       ; End date + 1
"RTN","RORX011",179,0)
 N RORREG        ; Registry IEN
"RTN","RORX011",180,0)
 N RORSDT        ; Start date
"RTN","RORX011",181,0)
 N RORXGRP       ; List of drug groups
"RTN","RORX011",182,0)
 N RORXL         ; Closed root of the medication list
"RTN","RORX011",183,0)
 ;
"RTN","RORX011",184,0)
 N ECNT,FLAGS,RC,REPORT,TMP
"RTN","RORX011",185,0)
 S RORXL="",(ECNT,RC)=0
"RTN","RORX011",186,0)
 K ^TMP("RORX011",$J)
"RTN","RORX011",187,0)
 ;
"RTN","RORX011",188,0)
 ;--- Root node of the report
"RTN","RORX011",189,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX011",190,0)
 Q:REPORT<0 REPORT
"RTN","RORX011",191,0)
 ;
"RTN","RORX011",192,0)
 D
"RTN","RORX011",193,0)
 . ;--- Get and prepare the report parameters
"RTN","RORX011",194,0)
 . S RORREG=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORX011",195,0)
 . S RORALL=$$PARAM^RORTSK01("PATIENTS","ALL")
"RTN","RORX011",196,0)
 . S RC=$$PARAMS(REPORT,.RORSDT,.ROREDT,.FLAGS)  Q:RC<0
"RTN","RORX011",197,0)
 . S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1)
"RTN","RORX011",198,0)
 . ;
"RTN","RORX011",199,0)
 . ;--- Report header
"RTN","RORX011",200,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX011",201,0)
 . ;
"RTN","RORX011",202,0)
 . ;--- Process the data and generate the report
"RTN","RORX011",203,0)
 . S RC=$$PROCESS(REPORT,FLAGS)  S:RC>0 ECNT=ECNT+RC
"RTN","RORX011",204,0)
 ;
"RTN","RORX011",205,0)
 ;--- Cleanup
"RTN","RORX011",206,0)
 K ^TMP("RORX011",$J)
"RTN","RORX011",207,0)
 D FREE^RORTMP(RORXL)
"RTN","RORX011",208,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX011",209,0)
 ;
"RTN","RORX011",210,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX011",211,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX011",212,0)
 N DRUGIEN,DRUGNAME,FILLTYPE,IEN,IRP,OFD,RPSUB,RXBUF,RXCNT,RXNUM,TMP
"RTN","RORX011",213,0)
 S DRUGIEN=+DRUG,DRUGNAME=$P(DRUG,U,2)
"RTN","RORX011",214,0)
 Q:(DRUGIEN'>0)!(DRUGNAME="") 1
"RTN","RORX011",215,0)
 ;--- Check the drug groups
"RTN","RORX011",216,0)
 S TMP=$$RXGRPCHK^RORXU007(.ROR8DST,+DRUG,RORXL)
"RTN","RORX011",217,0)
 Q:TMP TMP
"RTN","RORX011",218,0)
 ;--- Process the order
"RTN","RORX011",219,0)
 S:ROR8DST("RORXGEN")>0 $P(RXBUF,U,4)=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX011",220,0)
 S $P(RXBUF,U,5)=$P($G(^TMP("PS",$J,0)),U,7)  ; Days Supply
"RTN","RORX011",221,0)
 S TMP=$G(^TMP("PS",$J,"RXN",0))
"RTN","RORX011",222,0)
 S FILLTYPE=$S(ORDFLG["I":"I",1:$P(TMP,U,3))
"RTN","RORX011",223,0)
 S RXNUM=$P(TMP,U)  S:RXNUM="" RXNUM=" "
"RTN","RORX011",224,0)
 S RXCNT=0
"RTN","RORX011",225,0)
 ;--- Original prescription
"RTN","RORX011",226,0)
 I ORDFLG["I"  D  ;--- Inpatient
"RTN","RORX011",227,0)
 . S OFD=$P($G(^TMP("PS",$J,0)),U,5)         ; Start Date
"RTN","RORX011",228,0)
 . S $P(RXBUF,U,1,2)="I"_U_FILLTYPE,RXCNT=RXCNT+1
"RTN","RORX011",229,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX011",230,0)
 E  D             ;--- Outpatient
"RTN","RORX011",231,0)
 . S OFD=+$P($G(^TMP("PS",$J,"RXN",0)),U,6)  ; Original Fill Date
"RTN","RORX011",232,0)
 . Q:(OFD<ROR8DST("RORSDT"))!(OFD'<ROR8DST("ROREDT"))
"RTN","RORX011",233,0)
 . S $P(RXBUF,U,1,2)="O"_U_FILLTYPE,RXCNT=RXCNT+1
"RTN","RORX011",234,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX011",235,0)
 ;--- Refills and partials
"RTN","RORX011",236,0)
 F RPSUB="REF","PAR"  D
"RTN","RORX011",237,0)
 . S $P(RXBUF,U)=$E(RPSUB,1)
"RTN","RORX011",238,0)
 . S IRP=0
"RTN","RORX011",239,0)
 . F  S IRP=$O(^TMP("PS",$J,RPSUB,IRP))  Q:IRP'>0  D
"RTN","RORX011",240,0)
 . . S TMP=$G(^TMP("PS",$J,RPSUB,IRP,0))
"RTN","RORX011",241,0)
 . . S $P(RXBUF,U,2)=$S(ORDFLG["I":"I",1:$P(TMP,U,5))
"RTN","RORX011",242,0)
 . . S $P(RXBUF,U,5)=$P(TMP,U,2)  ; Days Supply
"RTN","RORX011",243,0)
 . . I TMP>0  S RXCNT=RXCNT+1  D
"RTN","RORX011",244,0)
 . . . S @ROR8DST@(+TMP,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX011",245,0)
 Q 0
"RTN","RORX012")
0^22^B17404871^B14019577
"RTN","RORX012",1,0)
RORX012 ;HOIFO/SG,VAC - COMBINED MEDS AND LABS REPORT ;4/9/09 9:40am
"RTN","RORX012",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX012",3,0)
 ;
"RTN","RORX012",4,0)
 ;Modified Feb 2009, to permit only the most recent test to be
"RTN","RORX012",5,0)
 ;    displayed on the report - a call to ^RORXU009
"RTN","RORX012",6,0)
 ;
"RTN","RORX012",7,0)
 ;Modified March 2009 to filter patients on Include or Exclude ICD9
"RTN","RORX012",8,0)
 ;    codes.  Call to ^RORXU010
"RTN","RORX012",9,0)
 ;
"RTN","RORX012",10,0)
 Q
"RTN","RORX012",11,0)
 ;
"RTN","RORX012",12,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX012",13,0)
 ;
"RTN","RORX012",14,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX012",15,0)
 ;
"RTN","RORX012",16,0)
 ; Return Values:
"RTN","RORX012",17,0)
 ;       <0  Error code
"RTN","RORX012",18,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX012",19,0)
 ;
"RTN","RORX012",20,0)
HEADER(PARTAG) ;
"RTN","RORX012",21,0)
 ;;DRUGS(#,NAME,LAST4,DOD,RXNAME)
"RTN","RORX012",22,0)
 ;;LABTESTS(#,NAME,LAST4,DOD,DATE,LTNAME,RESULT)
"RTN","RORX012",23,0)
 ;;PATIENTS(#,NAME,LAST4,DOD)
"RTN","RORX012",24,0)
 ;
"RTN","RORX012",25,0)
 N HEADER,RC
"RTN","RORX012",26,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX012",27,0)
 Q:HEADER<0 HEADER
"RTN","RORX012",28,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX012",HEADER)
"RTN","RORX012",29,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX012",30,0)
 ;
"RTN","RORX012",31,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX012",32,0)
 ;
"RTN","RORX012",33,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX012",34,0)
 ;
"RTN","RORX012",35,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX012",36,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX012",37,0)
 ;
"RTN","RORX012",38,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX012",39,0)
 ;               returned via this parameter
"RTN","RORX012",40,0)
 ;
"RTN","RORX012",41,0)
 ; Return Values:
"RTN","RORX012",42,0)
 ;       <0  Error code
"RTN","RORX012",43,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX012",44,0)
 ;
"RTN","RORX012",45,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX012",46,0)
 N PARAMS,TMP
"RTN","RORX012",47,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX012",48,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX012",49,0)
 ;--- Process the list of drugs and groups
"RTN","RORX012",50,0)
 I RORPHARM  D  Q:TMP<0 TMP
"RTN","RORX012",51,0)
 . S TMP=$$DRUGLST^RORXU007(.RORTSK,PARAMS,.RORXL,.RORXGRP)
"RTN","RORX012",52,0)
 ;--- Process the list of Lab tests
"RTN","RORX012",53,0)
 I RORLAB  D  Q:TMP<0 TMP
"RTN","RORX012",54,0)
 . S TMP=$$LTLST^RORXU006(.RORTSK,PARAMS,.RORLTST,"RORLTRV")
"RTN","RORX012",55,0)
 ;---
"RTN","RORX012",56,0)
 Q PARAMS
"RTN","RORX012",57,0)
 ;
"RTN","RORX012",58,0)
 ;***** DETERMINES THE REPORT MODE FOR LAB OR PHARMACY
"RTN","RORX012",59,0)
 ;
"RTN","RORX012",60,0)
 ; NAME          Base name of the attribute ("LAB" or "PHARM")
"RTN","RORX012",61,0)
 ;
"RTN","RORX012",62,0)
 ; Return Values:
"RTN","RORX012",63,0)
 ;       <0  "Did Not"
"RTN","RORX012",64,0)
 ;        0  Not selected
"RTN","RORX012",65,0)
 ;       >0  "Did"
"RTN","RORX012",66,0)
RPTMODE(NAME) ;
"RTN","RORX012",67,0)
 Q:$$PARAM^RORTSK01("PATIENTS",NAME) 1        ; "Did"
"RTN","RORX012",68,0)
 Q:$$PARAM^RORTSK01("PATIENTS","NO"_NAME) -1  ; "Did Not"
"RTN","RORX012",69,0)
 Q 0
"RTN","RORX012",70,0)
 ;
"RTN","RORX012",71,0)
 ;***** COMPILES THE "COMBINED PHARMACY AND LAB" REPORT
"RTN","RORX012",72,0)
 ; REPORT CODE: 012
"RTN","RORX012",73,0)
 ;
"RTN","RORX012",74,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX012",75,0)
 ;
"RTN","RORX012",76,0)
 ; The ^TMP("RORX012",$J) global node is used by this function.
"RTN","RORX012",77,0)
 ;
"RTN","RORX012",78,0)
 ; ^TMP("RORX012",$J,
"RTN","RORX012",79,0)
 ;   "PAT",
"RTN","RORX012",80,0)
 ;     DFN,              Patient descriptor
"RTN","RORX012",81,0)
 ;                         ^01: Last 4 digits of SSN
"RTN","RORX012",82,0)
 ;                         ^02: Patient name
"RTN","RORX012",83,0)
 ;                         ^03: Date of Death
"RTN","RORX012",84,0)
 ;       "LR",
"RTN","RORX012",85,0)
 ;         Date,
"RTN","RORX012",86,0)
 ;           TestName,
"RTN","RORX012",87,0)
 ;             TestIEN)  Result
"RTN","RORX012",88,0)
 ;       "RX",
"RTN","RORX012",89,0)
 ;         DrugName,
"RTN","RORX012",90,0)
 ;           DrugIEN)    ""
"RTN","RORX012",91,0)
 ;
"RTN","RORX012",92,0)
 ; Return Values:
"RTN","RORX012",93,0)
 ;       <0  Error code
"RTN","RORX012",94,0)
 ;        0  Ok
"RTN","RORX012",95,0)
 ;
"RTN","RORX012",96,0)
RXANDLAB(RORTSK) ;
"RTN","RORX012",97,0)
 N RORLAB        ; Labs mode (-1|0|1)
"RTN","RORX012",98,0)
 N RORLTST       ; Closed root of the list of lab tests for the
"RTN","RORX012",99,0)
 ;               ; Lab search API
"RTN","RORX012",100,0)
 N RORLTRV       ; Closed root of the list of lab tests with ranges
"RTN","RORX012",101,0)
 N RORPHARM      ; Meds mode (-1|0|1)
"RTN","RORX012",102,0)
 N RORREG        ; Registry IEN
"RTN","RORX012",103,0)
 N RORXEDT       ; Pharmacy end date
"RTN","RORX012",104,0)
 N RORXGRP       ; List of drug groups
"RTN","RORX012",105,0)
 N RORXL         ; Closed root of the drug list for the pharmacy
"RTN","RORX012",106,0)
 ;               ; search API or "*" if all drugs were selected
"RTN","RORX012",107,0)
 N RORXSDT       ; Pharmacy start date
"RTN","RORX012",108,0)
 ;
"RTN","RORX012",109,0)
 N ECNT,NSPT,RC,REPORT,SFLAGS,TMP
"RTN","RORX012",110,0)
 N RORDEL        ; Flag to determine if Most Recent is set
"RTN","RORX012",111,0)
 N RORDELTSK     ; Task number passed to delete tests
"RTN","RORX012",112,0)
 S RORDEL=$G(RORTSK("PARAMS","LABTESTS","A","MOST_RECENT"))
"RTN","RORX012",113,0)
 S RORDELTSK=RORTSK
"RTN","RORX012",114,0)
 S (RORXL,RORLTST)="",(ECNT,RC)=0
"RTN","RORX012",115,0)
 K ^TMP("RORX012",$J)
"RTN","RORX012",116,0)
 ;--- Root node of the report
"RTN","RORX012",117,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX012",118,0)
 Q:REPORT<0 REPORT
"RTN","RORX012",119,0)
 ;
"RTN","RORX012",120,0)
 D
"RTN","RORX012",121,0)
 . ;--- Get and prepare the report parameters
"RTN","RORX012",122,0)
 . S RORREG=$$PARAM^RORTSK01("REGIEN")  ; Registry IEN
"RTN","RORX012",123,0)
 . S RORLAB=$$RPTMODE("LAB")            ; Labs logic
"RTN","RORX012",124,0)
 . S RORPHARM=$$RPTMODE("PHARM")        ; Meds logic
"RTN","RORX012",125,0)
 . S RC=$$PARAMS(REPORT,.RORXSDT,.RORXEDT,.SFLAGS)  Q:RC<0
"RTN","RORX012",126,0)
 . ;--- Report header
"RTN","RORX012",127,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX012",128,0)
 . ;--- Query the registry
"RTN","RORX012",129,0)
 . D TPPSETUP^RORTSK01(80)
"RTN","RORX012",130,0)
 . S RC=$$QUERY^RORX012A(SFLAGS,.NSPT)
"RTN","RORX012",131,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX012",132,0)
 . ;--- Store the results
"RTN","RORX012",133,0)
 . D TPPSETUP^RORTSK01(20)
"RTN","RORX012",134,0)
 . S RC=$$STORE^RORX012A(REPORT,NSPT)
"RTN","RORX012",135,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX012",136,0)
 ;
"RTN","RORX012",137,0)
 ;--- Cleanup
"RTN","RORX012",138,0)
 ;--- Modify the report if only the latest test is required
"RTN","RORX012",139,0)
 ;    Inputs are Task number for File 798.8 and the flag
"RTN","RORX012",140,0)
 I RORDEL=1 D DEL^RORXU009(RORDELTSK)
"RTN","RORX012",141,0)
 K ^TMP("RORX012",$J)
"RTN","RORX012",142,0)
 D FREE^RORTMP(RORXL),FREE^RORTMP(RORLTST)
"RTN","RORX012",143,0)
 ;
"RTN","RORX012",144,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX012A")
0^23^B73606888^B65824765
"RTN","RORX012A",1,0)
RORX012A ;HOIFO/SG,VAC - COMBINED MEDS AND LABS (QUERY & STORE) ;4/7/09 2:09pm
"RTN","RORX012A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX012A",3,0)
 ;
"RTN","RORX012A",4,0)
 ; This routine was modified to handle the ICD9 filter
"RTN","RORX012A",5,0)
 ;   in March 2009
"RTN","RORX012A",6,0)
 ;   
"RTN","RORX012A",7,0)
 ; This routine uses the following IAs:
"RTN","RORX012A",8,0)
 ;
"RTN","RORX012A",9,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX012A",10,0)
 ;   
"RTN","RORX012A",11,0)
 Q
"RTN","RORX012A",12,0)
 ;
"RTN","RORX012A",13,0)
 ;***** LAB SEARCH CALLBACK
"RTN","RORX012A",14,0)
 ;
"RTN","RORX012A",15,0)
 ; .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX012A",16,0)
 ;
"RTN","RORX012A",17,0)
 ; INVDT         IEN of the Lab test (inverted date)
"RTN","RORX012A",18,0)
 ;
"RTN","RORX012A",19,0)
 ; .RESULT       Reference to a local variable, which contains
"RTN","RORX012A",20,0)
 ;               the result (see the $$LTSEARCH^RORUTL10).
"RTN","RORX012A",21,0)
 ;
"RTN","RORX012A",22,0)
 ; Return Values:
"RTN","RORX012A",23,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX012A",24,0)
 ;        0  Ok
"RTN","RORX012A",25,0)
 ;        1  Skip this result
"RTN","RORX012A",26,0)
 ;        2  Skip this and all remaining results
"RTN","RORX012A",27,0)
 ;
"RTN","RORX012A",28,0)
LTSCB(ROR8DST,INVDT,RESULT) ;
"RTN","RORX012A",29,0)
 N DATE,IEN,NAME,RC,TMP,VAL
"RTN","RORX012A",30,0)
 S IEN=+RESULT(2)           Q:IEN'>0 1   ; IEN of the Lab test
"RTN","RORX012A",31,0)
 S NAME=$P(RESULT(2),U,2)   Q:NAME="" 1  ; Name of the test
"RTN","RORX012A",32,0)
 S DATE=+$P(RESULT(1),U,2)  Q:DATE'>0 1  ; Date of the test
"RTN","RORX012A",33,0)
 S ROR8DST("RORUTIL")=1
"RTN","RORX012A",34,0)
 ;--- Check the result range if necessary
"RTN","RORX012A",35,0)
 I $D(RORLTRV(IEN))>1  S RC=1  D  Q:RC RC
"RTN","RORX012A",36,0)
 . S VAL=$$CLRNMVAL^RORUTL18($P(RESULT(1),U,3))
"RTN","RORX012A",37,0)
 . ;--- Skip a non-numeric result
"RTN","RORX012A",38,0)
 . Q:'$$NUMERIC^RORUTL05(VAL)
"RTN","RORX012A",39,0)
 . ;--- Check the range
"RTN","RORX012A",40,0)
 . I $G(RORLTRV(IEN,"L"))'=""  Q:VAL<RORLTRV(IEN,"L")
"RTN","RORX012A",41,0)
 . I $G(RORLTRV(IEN,"H"))'=""  Q:VAL>RORLTRV(IEN,"H")
"RTN","RORX012A",42,0)
 . S RC=0
"RTN","RORX012A",43,0)
 ;--- Store the result
"RTN","RORX012A",44,0)
 S @ROR8DST@(DATE,NAME,IEN)=$P(RESULT(1),U,3)
"RTN","RORX012A",45,0)
 Q 0
"RTN","RORX012A",46,0)
 ;
"RTN","RORX012A",47,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX012A",48,0)
 ;
"RTN","RORX012A",49,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX012A",50,0)
 ; .NSPT         Number of selected patients is returned here
"RTN","RORX012A",51,0)
 ;
"RTN","RORX012A",52,0)
 ; Return Values:
"RTN","RORX012A",53,0)
 ;       <0  Error code
"RTN","RORX012A",54,0)
 ;        0  Ok
"RTN","RORX012A",55,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX012A",56,0)
 ;
"RTN","RORX012A",57,0)
QUERY(FLAGS,NSPT) ;
"RTN","RORX012A",58,0)
 N RORLDST       ; Descriptor for Lab search API
"RTN","RORX012A",59,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX012A",60,0)
 N RORXDST       ; Descriptor for pharmacy search API
"RTN","RORX012A",61,0)
 ;
"RTN","RORX012A",62,0)
 N CNT,ECNT,IEN,IENS,LTEDT,LTSDT,PATIEN,RC,RXEDT,SKIP,SKIPEDT,SKIPSDT,TMP,UTEDT,UTIL,UTSDT,VA,VADM,XREFNODE
"RTN","RORX012A",63,0)
 N RCC,FLAG
"RTN","RORX012A",64,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX012A",65,0)
 S (CNT,ECNT,NSPT,RC)=0,(SKIPEDT,SKIPSDT)=0
"RTN","RORX012A",66,0)
 ;--- Utilization date range
"RTN","RORX012A",67,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX012A",68,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX012A",69,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX012A",70,0)
 . ;--- Combined date range
"RTN","RORX012A",71,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,UTSDT)
"RTN","RORX012A",72,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,UTEDT)
"RTN","RORX012A",73,0)
 ;--- Number of patients in the registry
"RTN","RORX012A",74,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX012A",75,0)
 ;
"RTN","RORX012A",76,0)
 ;--- Setup the descriptors for callback API's
"RTN","RORX012A",77,0)
 I RORLAB  D
"RTN","RORX012A",78,0)
 . I RORLTST'="*",$D(@RORLTST)<10  S RORLAB=0  Q
"RTN","RORX012A",79,0)
 . S RORLDST("RORCB")="$$LTSCB^RORX012A"
"RTN","RORX012A",80,0)
 . ;--- Labs date range
"RTN","RORX012A",81,0)
 . S LTSDT=$$PARAM^RORTSK01("DATE_RANGE_2","START")\1
"RTN","RORX012A",82,0)
 . S LTEDT=$$PARAM^RORTSK01("DATE_RANGE_2","END")\1
"RTN","RORX012A",83,0)
 . ;--- Combined date range
"RTN","RORX012A",84,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,LTSDT)
"RTN","RORX012A",85,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,LTEDT)
"RTN","RORX012A",86,0)
 . ;--- Shift the Labs end date
"RTN","RORX012A",87,0)
 . S LTEDT=$$FMADD^XLFDT(LTEDT,1)
"RTN","RORX012A",88,0)
 I RORPHARM  D
"RTN","RORX012A",89,0)
 . I RORXL'="*",$D(@RORXL)<10  S RORPHARM=0  Q
"RTN","RORX012A",90,0)
 . S RORXDST("RORCB")="$$RXSCB^RORX012A"
"RTN","RORX012A",91,0)
 . S RORXDST("GENERIC")=$$PARAM^RORTSK01("DRUGS","AGGR_GENERIC")
"RTN","RORX012A",92,0)
 . ;--- Combined date range
"RTN","RORX012A",93,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,RORXSDT)
"RTN","RORX012A",94,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,RORXEDT)
"RTN","RORX012A",95,0)
 . ;--- Shift the Meds end date
"RTN","RORX012A",96,0)
 . S RXEDT=$$FMADD^XLFDT(RORXEDT\1,1)
"RTN","RORX012A",97,0)
 Q:'(RORLAB!RORPHARM) 0
"RTN","RORX012A",98,0)
 ;
"RTN","RORX012A",99,0)
 ;--- Browse through the registry records
"RTN","RORX012A",100,0)
 S IEN=0
"RTN","RORX012A",101,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX012A",102,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX012A",103,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX012A",104,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX012A",105,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX012A",106,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX012A",107,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX012A",108,0)
 . S SKIP=1,UTIL=0
"RTN","RORX012A",109,0)
 . ;
"RTN","RORX012A",110,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX012A",111,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX012A",112,0)
 . ;
"RTN","RORX012A",113,0)
 . ;--- Check if patient should be filtered because of ICD9 codes
"RTN","RORX012A",114,0)
 . S RCC=0
"RTN","RORX012A",115,0)
 . I FLAG'="ALL" D
"RTN","RORX012A",116,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX012A",117,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX012A",118,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX012A",119,0)
 . ;
"RTN","RORX012A",120,0)
 . D  I RC<0  S ECNT=ECNT+1,RC=0  Q
"RTN","RORX012A",121,0)
 . . ;--- Search for pharmacy data
"RTN","RORX012A",122,0)
 . . I RORPHARM  D  Q:RC'>0
"RTN","RORX012A",123,0)
 . . . M RORXDST("RORXGRP")=RORXGRP("C")
"RTN","RORX012A",124,0)
 . . . S RORXDST=$NA(^TMP("RORX012",$J,"PAT",PATIEN,"RX"))
"RTN","RORX012A",125,0)
 . . . K RORXDST("RORUTIL")
"RTN","RORX012A",126,0)
 . . . S RC=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RORXSDT,RXEDT)
"RTN","RORX012A",127,0)
 . . . Q:RC<0
"RTN","RORX012A",128,0)
 . . . ;S:$G(RORXDST("RORUTIL")) UTIL=1
"RTN","RORX012A",129,0)
 . . . I RC>0  S:$D(RORXDST("RORXGRP"))>1 RC=0
"RTN","RORX012A",130,0)
 . . . ;--- Invert the result if the "Did Not" logic was selected
"RTN","RORX012A",131,0)
 . . . I RORPHARM<0  S RC='RC  K @RORXDST
"RTN","RORX012A",132,0)
 . . ;--- Search for Lab data
"RTN","RORX012A",133,0)
 . . I RORLAB  D  Q:RC'>0
"RTN","RORX012A",134,0)
 . . . S RORLDST=$NA(^TMP("RORX012",$J,"PAT",PATIEN,"LR"))
"RTN","RORX012A",135,0)
 . . . K RORLDST("RORUTIL")
"RTN","RORX012A",136,0)
 . . . S RC=$$LTSEARCH^RORUTL10(PATIEN,RORLTST,.RORLDST,,LTSDT,LTEDT)
"RTN","RORX012A",137,0)
 . . . Q:RC<0
"RTN","RORX012A",138,0)
 . . . ;S:$G(RORLDST("RORUTIL")) UTIL=1
"RTN","RORX012A",139,0)
 . . . ;--- Invert the result if the "Did Not" logic was selected
"RTN","RORX012A",140,0)
 . . . S:RORLAB<0 RC='RC
"RTN","RORX012A",141,0)
 . . ;---
"RTN","RORX012A",142,0)
 . . S SKIP=0
"RTN","RORX012A",143,0)
 . ;
"RTN","RORX012A",144,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX012A",145,0)
 . I 'SKIP  D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX012A",146,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX012A",147,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PATIEN,.TMP)
"RTN","RORX012A",148,0)
 . . S:'UTIL SKIP=1
"RTN","RORX012A",149,0)
 . ;
"RTN","RORX012A",150,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX012A",151,0)
 . I SKIP  K ^TMP("RORX012",$J,"PAT",PATIEN)  Q
"RTN","RORX012A",152,0)
 . ;
"RTN","RORX012A",153,0)
 . ;--- Get and store the patient's data
"RTN","RORX012A",154,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX012A",155,0)
 . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX012A",156,0)
 . S ^TMP("RORX012",$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_TMP
"RTN","RORX012A",157,0)
 . S NSPT=NSPT+1
"RTN","RORX012A",158,0)
 ;
"RTN","RORX012A",159,0)
 ;---
"RTN","RORX012A",160,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX012A",161,0)
 ;
"RTN","RORX012A",162,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX012A",163,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX012A",164,0)
 N GRP,IEN,NAME,TMP
"RTN","RORX012A",165,0)
 S ROR8DST("RORUTIL")=1
"RTN","RORX012A",166,0)
 ;=== Check the drug groups
"RTN","RORX012A",167,0)
 S TMP=$$RXGRPCHK^RORXU007(.ROR8DST,+DRUG,RORXL)
"RTN","RORX012A",168,0)
 Q:TMP TMP
"RTN","RORX012A",169,0)
 ;--- Get the drug data
"RTN","RORX012A",170,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX012A",171,0)
 . S IEN=+ROR8DST("RORXGEN"),NAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX012A",172,0)
 E  S IEN=+DRUG,NAME=$P(DRUG,U,2)
"RTN","RORX012A",173,0)
 Q:(IEN'>0)!(NAME="") 1
"RTN","RORX012A",174,0)
 ;--- Output the data
"RTN","RORX012A",175,0)
 S @ROR8DST@(NAME,IEN)=""
"RTN","RORX012A",176,0)
 Q 0
"RTN","RORX012A",177,0)
 ;
"RTN","RORX012A",178,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX012A",179,0)
 ;
"RTN","RORX012A",180,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX012A",181,0)
 ; NSPT          Number of selected patients
"RTN","RORX012A",182,0)
 ;
"RTN","RORX012A",183,0)
 ; Return Values:
"RTN","RORX012A",184,0)
 ;       <0  Error code
"RTN","RORX012A",185,0)
 ;        0  Ok
"RTN","RORX012A",186,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX012A",187,0)
 ;
"RTN","RORX012A",188,0)
STORE(REPORT,NSPT) ;
"RTN","RORX012A",189,0)
 N CNT,DATE,DFN,DOD,ECNT,IEN,ITEM,LAST4,LTLST,NAME,NODE,PTCNT,PTLST,PTNAME,RC,RXLST,TMP,VAL
"RTN","RORX012A",190,0)
 S (ECNT,RC)=0,(LTLST,PTLST,RXLST)=-1
"RTN","RORX012A",191,0)
 ;--- Force the "patient data" note in the output
"RTN","RORX012A",192,0)
 D ADDVAL^RORTSK11(RORTSK,"PATIENT",,REPORT)
"RTN","RORX012A",193,0)
 ;--- Create lab test list
"RTN","RORX012A",194,0)
 I RORLAB  D  Q:LTLST<0 LTLST
"RTN","RORX012A",195,0)
 . S LTLST=$$ADDVAL^RORTSK11(RORTSK,"LABTESTS",,REPORT)
"RTN","RORX012A",196,0)
 . D ADDATTR^RORTSK11(RORTSK,LTLST,"TABLE","LABTESTS")
"RTN","RORX012A",197,0)
 ;--- Create pharmacy list
"RTN","RORX012A",198,0)
 I RORPHARM>0  D  Q:RXLST<0 RXLST
"RTN","RORX012A",199,0)
 . S RXLST=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,REPORT)
"RTN","RORX012A",200,0)
 . D ADDATTR^RORTSK11(RORTSK,RXLST,"TABLE","DRUGS")
"RTN","RORX012A",201,0)
 ;--- Create patient list
"RTN","RORX012A",202,0)
 I (RORLAB<0)!(RORPHARM<0)  D  Q:PTLST<0 PTLST
"RTN","RORX012A",203,0)
 . S PTLST=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX012A",204,0)
 . D ADDATTR^RORTSK11(RORTSK,PTLST,"TABLE","PATIENTS")
"RTN","RORX012A",205,0)
 ;---
"RTN","RORX012A",206,0)
 S (CNT,DFN,PTCNT)=0
"RTN","RORX012A",207,0)
 F  S DFN=$O(^TMP("RORX012",$J,"PAT",DFN))  Q:DFN'>0  D  Q:RC<0
"RTN","RORX012A",208,0)
 . S TMP=$S(NSPT>0:CNT/NSPT,1:"")
"RTN","RORX012A",209,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX012A",210,0)
 . S CNT=CNT+1,NODE=$NA(^TMP("RORX012",$J,"PAT",DFN))
"RTN","RORX012A",211,0)
 . ;--- Patient's data
"RTN","RORX012A",212,0)
 . S TMP=$G(@NODE)
"RTN","RORX012A",213,0)
 . S LAST4=$P(TMP,U),PTNAME=$P(TMP,U,2),DOD=$P(TMP,U,3)
"RTN","RORX012A",214,0)
 . ;--- Patient list
"RTN","RORX012A",215,0)
 . S TMP=$S(LTLST<0:1,1:$D(@NODE@("LR"))<10)
"RTN","RORX012A",216,0)
 . I TMP,$S(RXLST<0:1,1:$D(@NODE@("RX"))<10)  D  Q
"RTN","RORX012A",217,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTLST,,DFN)
"RTN","RORX012A",218,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX012A",219,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX012A",220,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX012A",221,0)
 . . S PTCNT=PTCNT+1
"RTN","RORX012A",222,0)
 . ;--- List of Lab tests
"RTN","RORX012A",223,0)
 . S DATE=""
"RTN","RORX012A",224,0)
 . F  S DATE=$O(@NODE@("LR",DATE))  Q:DATE=""  D
"RTN","RORX012A",225,0)
 . . S NAME=""
"RTN","RORX012A",226,0)
 . . F  S NAME=$O(@NODE@("LR",DATE,NAME))  Q:NAME=""  D
"RTN","RORX012A",227,0)
 . . . S IEN=""
"RTN","RORX012A",228,0)
 . . . F  S IEN=$O(@NODE@("LR",DATE,NAME,IEN))  Q:IEN=""  D
"RTN","RORX012A",229,0)
 . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"LT",,LTLST,,DFN)
"RTN","RORX012A",230,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX012A",231,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX012A",232,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX012A",233,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"DATE",DATE\1,ITEM,1)
"RTN","RORX012A",234,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"LTNAME",NAME,ITEM,1)
"RTN","RORX012A",235,0)
 . . . . S VAL=$G(@NODE@("LR",DATE,NAME,IEN))
"RTN","RORX012A",236,0)
 . . . . S TMP=$S($$NUMERIC^RORUTL05(VAL):3,1:1)
"RTN","RORX012A",237,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"RESULT",VAL,ITEM,TMP)
"RTN","RORX012A",238,0)
 . ;--- List of drugs
"RTN","RORX012A",239,0)
 . S NAME=""
"RTN","RORX012A",240,0)
 . F  S NAME=$O(@NODE@("RX",NAME))  Q:NAME=""  D
"RTN","RORX012A",241,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,RXLST,,DFN)
"RTN","RORX012A",242,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX012A",243,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX012A",244,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX012A",245,0)
 . . D ADDVAL^RORTSK11(RORTSK,"RXNAME",NAME,ITEM,1)
"RTN","RORX012A",246,0)
 ;--- Inactivate the patient list tag if the list is empty
"RTN","RORX012A",247,0)
 D:PTCNT'>0 UPDVAL^RORTSK11(RORTSK,PTLST,,,1)
"RTN","RORX012A",248,0)
 ;---
"RTN","RORX012A",249,0)
 Q ECNT
"RTN","RORX014A")
0^18^B31289294^B27835424
"RTN","RORX014A",1,0)
RORX014A ;HOIFO/BH,SG,VAC - REGISTRY MEDS REPORT (QUERY & SORT) ;4/7/09 2:09pm
"RTN","RORX014A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX014A",3,0)
 ;
"RTN","RORX014A",4,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX014A",5,0)
 ;   or Exclude
"RTN","RORX014A",6,0)
 Q
"RTN","RORX014A",7,0)
 ;
"RTN","RORX014A",8,0)
 ;***** ADDS THE DRUG COMBINATION TO THE REPORT
"RTN","RORX014A",9,0)
 ;
"RTN","RORX014A",10,0)
 ; RXLST         List of drug IEN's separated by commas
"RTN","RORX014A",11,0)
 ; PATIEN        Patient IEN in file #2 (DFN)
"RTN","RORX014A",12,0)
 ;
"RTN","RORX014A",13,0)
ADD(RXLST,PATIEN) ;
"RTN","RORX014A",14,0)
 N RXCIEN,RXCNDX,TMP,VA,VADM,VAERR
"RTN","RORX014A",15,0)
 S RXCNDX=$E(RXLST,1,100)
"RTN","RORX014A",16,0)
 ;--- Search for the combination
"RTN","RORX014A",17,0)
 S RXCIEN=""
"RTN","RORX014A",18,0)
 F  D  Q:RXCIEN=""  Q:^TMP("RORX014",$J,"RXC",RXCIEN,1)=RXLST
"RTN","RORX014A",19,0)
 . S RXCIEN=$O(^TMP("RORX014",$J,"RXC","B",RXCNDX,RXCIEN))
"RTN","RORX014A",20,0)
 ;--- Add new combination
"RTN","RORX014A",21,0)
 D:RXCIEN'>0
"RTN","RORX014A",22,0)
 . S RXCIEN=$O(^TMP("RORX014",$J,"RXC"," "),-1)+1
"RTN","RORX014A",23,0)
 . S ^TMP("RORX014",$J,"RXC",RXCIEN,1)=RXLST
"RTN","RORX014A",24,0)
 . S ^TMP("RORX014",$J,"RXC","B",RXCNDX,RXCIEN)=""
"RTN","RORX014A",25,0)
 ;--- Add new patient
"RTN","RORX014A",26,0)
 S ^("P")=$G(^TMP("RORX014",$J,"RXC",RXCIEN,"P"))+1
"RTN","RORX014A",27,0)
 D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX014A",28,0)
 S TMP=VA("BID")_U_VADM(1)_U_$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX014A",29,0)
 S ^TMP("RORX014",$J,"RXC",RXCIEN,"P",PATIEN)=TMP
"RTN","RORX014A",30,0)
 Q
"RTN","RORX014A",31,0)
 ;
"RTN","RORX014A",32,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX014A",33,0)
 ;
"RTN","RORX014A",34,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX014A",35,0)
 ;
"RTN","RORX014A",36,0)
 ; Return Values:
"RTN","RORX014A",37,0)
 ;       <0  Error code
"RTN","RORX014A",38,0)
 ;        0  Ok
"RTN","RORX014A",39,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX014A",40,0)
 ;
"RTN","RORX014A",41,0)
QUERY(FLAGS) ;
"RTN","RORX014A",42,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX014A",43,0)
 N RORXDST       ; Descriptor for pharmacy search API
"RTN","RORX014A",44,0)
 ;
"RTN","RORX014A",45,0)
 N CNT,DRGIEN,ECNT,NAME,PATIEN,RC,RORIEN,RXFLAGS,STR,TMP,XREFNODE
"RTN","RORX014A",46,0)
 N RCC,FLAG
"RTN","RORX014A",47,0)
 ;
"RTN","RORX014A",48,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX014A",49,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX014A",50,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX014A",51,0)
 ;
"RTN","RORX014A",52,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX014A",53,0)
 S RORXDST=$NA(RORXDST("RORX014"))
"RTN","RORX014A",54,0)
 S RORXDST("RORCB")="$$RXSCB^RORX014A"
"RTN","RORX014A",55,0)
 S RORXDST("GENERIC")=$$PARAM^RORTSK01("DRUGS","AGGR_GENERIC")
"RTN","RORX014A",56,0)
 S RXFLAGS="E"
"RTN","RORX014A",57,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") RXFLAGS=RXFLAGS_"IV"
"RTN","RORX014A",58,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") RXFLAGS=RXFLAGS_"O"
"RTN","RORX014A",59,0)
 Q:RXFLAGS="E" 0
"RTN","RORX014A",60,0)
 ;
"RTN","RORX014A",61,0)
 ;--- Browse through the registry records
"RTN","RORX014A",62,0)
 S RORIEN=0
"RTN","RORX014A",63,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX014A",64,0)
 F  S RORIEN=$O(@XREFNODE@(RORIEN))  Q:RORIEN'>0  D  Q:RC<0
"RTN","RORX014A",65,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX014A",66,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX014A",67,0)
 . S CNT=CNT+1
"RTN","RORX014A",68,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX014A",69,0)
 . Q:$$SKIP^RORXU005(RORIEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX014A",70,0)
 . ;
"RTN","RORX014A",71,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX014A",72,0)
 . S PATIEN=$$PTIEN^RORUTL01(RORIEN)  Q:PATIEN'>0
"RTN","RORX014A",73,0)
 . ;--- Check the patient against the ICD9 Filter
"RTN","RORX014A",74,0)
 . S RCC=0
"RTN","RORX014A",75,0)
 . I FLAG'="ALL" D
"RTN","RORX014A",76,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX014A",77,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX014A",78,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX014A",79,0)
 . ;--- End of ICD9 check
"RTN","RORX014A",80,0)
 . ;
"RTN","RORX014A",81,0)
 . ;--- Search for pharmacy data
"RTN","RORX014A",82,0)
 . S TMP=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,RXFLAGS,RORSDT,ROREDT1)
"RTN","RORX014A",83,0)
 . I TMP'>0  S:TMP<0 ECNT=ECNT+1  Q:$D(@RORXDST)<10
"RTN","RORX014A",84,0)
 . ;
"RTN","RORX014A",85,0)
 . S (NAME,STR)=""
"RTN","RORX014A",86,0)
 . F  S NAME=$O(@RORXDST@(NAME))  Q:NAME=""  D
"RTN","RORX014A",87,0)
 . . S DRGIEN=0
"RTN","RORX014A",88,0)
 . . F  S DRGIEN=$O(@RORXDST@(NAME,DRGIEN))  Q:DRGIEN'>0  D
"RTN","RORX014A",89,0)
 . . . S ^TMP("RORX014",$J,"DRG",DRGIEN)=NAME
"RTN","RORX014A",90,0)
 . . . S STR=STR_","_DRGIEN
"RTN","RORX014A",91,0)
 . K @RORXDST
"RTN","RORX014A",92,0)
 . ;
"RTN","RORX014A",93,0)
 . D ADD($P(STR,",",2,999),PATIEN)
"RTN","RORX014A",94,0)
 ;
"RTN","RORX014A",95,0)
 ;---
"RTN","RORX014A",96,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX014A",97,0)
 ;
"RTN","RORX014A",98,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX014A",99,0)
RXSCB(RORDST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX014A",100,0)
 N IEN,NAME
"RTN","RORX014A",101,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX014A",102,0)
 . S IEN=+ROR8DST("RORXGEN"),NAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX014A",103,0)
 E  S IEN=+DRUG,NAME=$P(DRUG,U,2)
"RTN","RORX014A",104,0)
 Q:(IEN'>0)!(NAME="") 1
"RTN","RORX014A",105,0)
 S @RORDST@(NAME,IEN)=""
"RTN","RORX014A",106,0)
 Q 0
"RTN","RORX014A",107,0)
 ;
"RTN","RORX014A",108,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX014A",109,0)
 ;
"RTN","RORX014A",110,0)
 ; NRXC          Number of drug combinations
"RTN","RORX014A",111,0)
 ;
"RTN","RORX014A",112,0)
 ; Return Values:
"RTN","RORX014A",113,0)
 ;       <0  Error code
"RTN","RORX014A",114,0)
 ;        0  Ok
"RTN","RORX014A",115,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX014A",116,0)
 ;
"RTN","RORX014A",117,0)
SORT(NRXC) ;
"RTN","RORX014A",118,0)
 N IEN,TMP
"RTN","RORX014A",119,0)
 S (IEN,NRXC)=0
"RTN","RORX014A",120,0)
 F  S IEN=$O(^TMP("RORX014",$J,"RXC",IEN))  Q:IEN'>0  D
"RTN","RORX014A",121,0)
 . S TMP=^TMP("RORX014",$J,"RXC",IEN,"P")
"RTN","RORX014A",122,0)
 . S ^TMP("RORX014",$J,"RXC","P",TMP,IEN)="",NRXC=NRXC+1
"RTN","RORX014A",123,0)
 Q 0
"RTN","RORX014A",124,0)
 ;
"RTN","RORX014A",125,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX014A",126,0)
 ;
"RTN","RORX014A",127,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX014A",128,0)
 ; NRXC          Number of drug combinations
"RTN","RORX014A",129,0)
 ;
"RTN","RORX014A",130,0)
 ; Return Values:
"RTN","RORX014A",131,0)
 ;       <0  Error code
"RTN","RORX014A",132,0)
 ;        0  Ok
"RTN","RORX014A",133,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX014A",134,0)
 ;
"RTN","RORX014A",135,0)
STORE(REPORT,NRXC) ;
"RTN","RORX014A",136,0)
 N BUF,CNT,DRG,ITEM,NODE,PATIEN,RORI,RXCIEN,RXCNT,RXCOMB,SECTION,TABLE,VA,VADM,VAERR
"RTN","RORX014A",137,0)
 S NODE=$NA(^TMP("RORX014",$J))
"RTN","RORX014A",138,0)
 S SECTION=$$ADDVAL^RORTSK11(RORTSK,"RXCOMBLST",,REPORT)
"RTN","RORX014A",139,0)
 Q:SECTION<0 SECTION
"RTN","RORX014A",140,0)
 D ADDATTR^RORTSK11(RORTSK,SECTION,"TABLE","RXCOMBLST")
"RTN","RORX014A",141,0)
 ;---
"RTN","RORX014A",142,0)
 Q:NRXC'>0 0
"RTN","RORX014A",143,0)
 ;---
"RTN","RORX014A",144,0)
 S RXCNT="",CNT=0
"RTN","RORX014A",145,0)
 F  S RXCNT=$O(@NODE@("RXC","P",RXCNT),-1)  Q:RXCNT=""  D
"RTN","RORX014A",146,0)
 . S RC=$$LOOP^RORTSK01(CNT/NRXC),CNT=CNT+1  Q:RC<0
"RTN","RORX014A",147,0)
 . S RXCIEN=""
"RTN","RORX014A",148,0)
 . F  S RXCIEN=$O(@NODE@("RXC","P",RXCNT,RXCIEN),-1)  Q:RXCIEN=""  D
"RTN","RORX014A",149,0)
 . . S RXCOMB=$$ADDVAL^RORTSK11(RORTSK,"RXCOMB",,SECTION)
"RTN","RORX014A",150,0)
 . . ;--- List of drugs
"RTN","RORX014A",151,0)
 . . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,RXCOMB)
"RTN","RORX014A",152,0)
 . . S BUF=@NODE@("RXC",RXCIEN,1)
"RTN","RORX014A",153,0)
 . . F RORI=1:1  S DRG=$P(BUF,",",RORI)  Q:DRG=""  D
"RTN","RORX014A",154,0)
 . . . S DRG=$P(^TMP("RORX014",$J,"DRG",DRG),U)
"RTN","RORX014A",155,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"NAME",DRG,TABLE,1)
"RTN","RORX014A",156,0)
 . . ;--- Number of unique patients
"RTN","RORX014A",157,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NP",RXCNT,RXCOMB,3)
"RTN","RORX014A",158,0)
 . . ;--- List of patients
"RTN","RORX014A",159,0)
 . . Q:'$$PARAM^RORTSK01("OPTIONS","COMPLETE")
"RTN","RORX014A",160,0)
 . . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,RXCOMB)
"RTN","RORX014A",161,0)
 . . D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PATIENTS")
"RTN","RORX014A",162,0)
 . . S PATIEN=""
"RTN","RORX014A",163,0)
 . . F  S PATIEN=$O(@NODE@("RXC",RXCIEN,"P",PATIEN))  Q:PATIEN=""  D
"RTN","RORX014A",164,0)
 . . . S BUF=@NODE@("RXC",RXCIEN,"P",PATIEN)
"RTN","RORX014A",165,0)
 . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,TABLE,,PATIEN)
"RTN","RORX014A",166,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(BUF,U,2),ITEM,1)
"RTN","RORX014A",167,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",$P(BUF,U),ITEM,2)
"RTN","RORX014A",168,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"DOD",$P(BUF,U,3),ITEM,1)
"RTN","RORX014A",169,0)
 Q 0
"RTN","RORX015A")
0^19^B71344884^B62875777
"RTN","RORX015A",1,0)
RORX015A ;HOIFO/SG,VAC - OUTPATIENT PROCEDURES (QUERY & SORT) ;4/7/09 2:10pm
"RTN","RORX015A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8**;Feb 17, 2006;Build 8
"RTN","RORX015A",3,0)
 ;
"RTN","RORX015A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX015A",5,0)
 ;
"RTN","RORX015A",6,0)
 ; #1995         $$CODEN^ICPTCOD and $$CPT^ICPTCOD (supported)
"RTN","RORX015A",7,0)
 ; #2055         ROOT^DILFD
"RTN","RORX015A",8,0)
 ; #2056         GETS^DIQ
"RTN","RORX015A",9,0)
 ; #2546         GETCPT^SDOE
"RTN","RORX015A",10,0)
 ; #2548         Multiple APIs in SDQ routine (supported)
"RTN","RORX015A",11,0)
 ; #3990         $$CODEN^ICDCODE and $$ICDOP^ICDCODE (supported)
"RTN","RORX015A",12,0)
 ; #10103        FMADD^XLFDT (supported)
"RTN","RORX015A",13,0)
 ;
"RTN","RORX015A",14,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX015A",15,0)
 ;   or Exclude
"RTN","RORX015A",16,0)
 Q
"RTN","RORX015A",17,0)
 ;
"RTN","RORX015A",18,0)
 ;***** SEARCHES FOR INPATIENT PROCEDURES
"RTN","RORX015A",19,0)
 ;
"RTN","RORX015A",20,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",21,0)
 ;
"RTN","RORX015A",22,0)
 ; Return Values:
"RTN","RORX015A",23,0)
 ;       <0  Error code
"RTN","RORX015A",24,0)
 ;        0  Ok
"RTN","RORX015A",25,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",26,0)
 ;
"RTN","RORX015A",27,0)
INPAT(PTIEN) ;
"RTN","RORX015A",28,0)
 N DATE,ERRCNT,FLDLST,IEN,IEN45,IENS,NODE,RC,RORBUF,RORMSG,XREF
"RTN","RORX015A",29,0)
 S (ERRCNT,RC)=0
"RTN","RORX015A",30,0)
 S XREF=$$ROOT^DILFD(45,,1),XREF=$NA(@XREF@("B",PTIEN))
"RTN","RORX015A",31,0)
 S IEN45=0
"RTN","RORX015A",32,0)
 F  S IEN45=$O(@XREF@(IEN45))  Q:IEN45'>0  D
"RTN","RORX015A",33,0)
 . ;Q:$$GET1^DIQ(45,IEN45_",",6,"I",,"RORMSG")<1  ; Skip open records
"RTN","RORX015A",34,0)
 . ;S IENS=IEN45_","
"RTN","RORX015A",35,0)
 . ;S FLDLST="45.01;45.02;45.03;45.04;45.05"
"RTN","RORX015A",36,0)
 . ;D GETS^DIQ(45,IENS,FLDLST,"I","RORBUF","RORMSG")
"RTN","RORX015A",37,0)
 . ;I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",38,0)
 . ;. D DBS^RORERR("RORMSG",-99,,PTIEN,45,IENS)
"RTN","RORX015A",39,0)
 . ;D INP(PTIEN,$NA(RORBUF(IENS)),FLDLST,???)
"RTN","RORX015A",40,0)
 . ;--- Surgical procedures
"RTN","RORX015A",41,0)
 . S NODE=$$ROOT^DILFD(45.01,","_IEN45_",",1)
"RTN","RORX015A",42,0)
 . S IEN=0
"RTN","RORX015A",43,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D
"RTN","RORX015A",44,0)
 . . S IENS=IEN_","_IEN45_","  K RORBUF
"RTN","RORX015A",45,0)
 . . S FLDLST="8;9;10;11;12"
"RTN","RORX015A",46,0)
 . . ;--- Load the data
"RTN","RORX015A",47,0)
 . . K RORMSG D GETS^DIQ(45.01,IENS,".01;"_FLDLST,"I","RORBUF","RORMSG")
"RTN","RORX015A",48,0)
 . . ;I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",49,0)
 . . I $G(RORMSG("DIERR"))  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",50,0)
 . . . D DBS^RORERR("RORMSG",-99,,PTIEN,45.01,IENS)
"RTN","RORX015A",51,0)
 . . S DATE=$G(RORBUF(45.01,IENS,.01,"I"))
"RTN","RORX015A",52,0)
 . . Q:(DATE<RORSDT)!(DATE'<ROREDT1)
"RTN","RORX015A",53,0)
 . . ;--- Generate the output
"RTN","RORX015A",54,0)
 . . D INP(PTIEN,$NA(RORBUF(45.01,IENS)),FLDLST,DATE)
"RTN","RORX015A",55,0)
 . ;--- Other procedures
"RTN","RORX015A",56,0)
 . S NODE=$$ROOT^DILFD(45.05,","_IEN45_",",1)
"RTN","RORX015A",57,0)
 . S IEN=0
"RTN","RORX015A",58,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D
"RTN","RORX015A",59,0)
 . . S IENS=IEN_","_IEN45_","  K RORBUF
"RTN","RORX015A",60,0)
 . . S FLDLST="4;5;6;7;8"
"RTN","RORX015A",61,0)
 . . ;--- Load the data
"RTN","RORX015A",62,0)
 . . K RORMSG D GETS^DIQ(45.05,IENS,".01;"_FLDLST,"I","RORBUF","RORMSG")
"RTN","RORX015A",63,0)
 . . ;I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",64,0)
 . . I $G(RORMSG("DIERR"))  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",65,0)
 . . . D DBS^RORERR("RORMSG",-99,,PTIEN,45.05,IENS)
"RTN","RORX015A",66,0)
 . . S DATE=$G(RORBUF(45.05,IENS,.01,"I"))
"RTN","RORX015A",67,0)
 . . Q:(DATE<RORSDT)!(DATE'<ROREDT1)
"RTN","RORX015A",68,0)
 . . ;--- Generate the output
"RTN","RORX015A",69,0)
 . . D INP(PTIEN,$NA(RORBUF(45.05,IENS)),FLDLST,DATE)
"RTN","RORX015A",70,0)
 ;---
"RTN","RORX015A",71,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORX015A",72,0)
 ;
"RTN","RORX015A",73,0)
 ;****
"RTN","RORX015A",74,0)
INP(PTIEN,ROR8BUF,FLDLST,DATE) ;
"RTN","RORX015A",75,0)
 N I,ICD9IEN,FLD
"RTN","RORX015A",76,0)
 F I=1:1  S FLD=$P(FLDLST,";",I)  Q:FLD=""  D
"RTN","RORX015A",77,0)
 . S ICD9IEN=+$G(@ROR8BUF@(FLD,"I"))
"RTN","RORX015A",78,0)
 . D:ICD9IEN>0 PROCSET(PTIEN,"I",ICD9IEN,DATE)
"RTN","RORX015A",79,0)
 Q
"RTN","RORX015A",80,0)
 ;
"RTN","RORX015A",81,0)
 ;***** CALL-BACK PROCEDURE FOR THE OUTPATIENT SEARCH
"RTN","RORX015A",82,0)
 ;
"RTN","RORX015A",83,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",84,0)
 ;
"RTN","RORX015A",85,0)
OPSCAN(PTIEN) ;
"RTN","RORX015A",86,0)
 N CPTIEN,DATE,IEN,RORCPT,VDATE
"RTN","RORX015A",87,0)
 D GETCPT^SDOE(Y,"RORCPT")
"RTN","RORX015A",88,0)
 Q:$G(RORCPT)'>0
"RTN","RORX015A",89,0)
 S VDATE=+$P(Y0,U)
"RTN","RORX015A",90,0)
 ;---
"RTN","RORX015A",91,0)
 S IEN=0
"RTN","RORX015A",92,0)
 F  S IEN=$O(RORCPT(IEN))  Q:IEN'>0  D
"RTN","RORX015A",93,0)
 . S CPTIEN=+$P(RORCPT(IEN),U),DATE=+$P($G(RORCPT(IEN,12)),U)
"RTN","RORX015A",94,0)
 . D:CPTIEN>0 PROCSET(PTIEN,"O",CPTIEN,$S(DATE>0:DATE,1:VDATE))
"RTN","RORX015A",95,0)
 Q
"RTN","RORX015A",96,0)
 ;
"RTN","RORX015A",97,0)
 ;***** SEARCHES FOR OUTPATIENT PROCEDURES
"RTN","RORX015A",98,0)
 ;
"RTN","RORX015A",99,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",100,0)
 ;
"RTN","RORX015A",101,0)
 ; Return Values:
"RTN","RORX015A",102,0)
 ;       <0  Error code
"RTN","RORX015A",103,0)
 ;        0  Ok
"RTN","RORX015A",104,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",105,0)
 ;
"RTN","RORX015A",106,0)
OUTPAT(PTIEN) ;
"RTN","RORX015A",107,0)
 N QUERY
"RTN","RORX015A",108,0)
 D OPEN^SDQ(.QUERY)
"RTN","RORX015A",109,0)
 D INDEX^SDQ(.QUERY,"PATIENT/DATE","SET")
"RTN","RORX015A",110,0)
 D PAT^SDQ(.QUERY,PTIEN,"SET")
"RTN","RORX015A",111,0)
 D DATE^SDQ(.QUERY,RORSDT,ROREDT1,"SET")
"RTN","RORX015A",112,0)
 D SCANCB^SDQ(.QUERY,"D OPSCAN^RORX015A("_PTIEN_")","SET")
"RTN","RORX015A",113,0)
 D ACTIVE^SDQ(.QUERY,"TRUE","SET")
"RTN","RORX015A",114,0)
 D SCAN^SDQ(.QUERY,"FORWARD")
"RTN","RORX015A",115,0)
 D CLOSE^SDQ(.QUERY)
"RTN","RORX015A",116,0)
 Q 0
"RTN","RORX015A",117,0)
 ;
"RTN","RORX015A",118,0)
 ;**** STORES THE PROCEDURE CODE
"RTN","RORX015A",119,0)
 ;
"RTN","RORX015A",120,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",121,0)
 ; SOURCE        CPT source code ("O" or "I")
"RTN","RORX015A",122,0)
 ; [IEN]         IEN of the procedure descriptor (file #81 or #80.1)
"RTN","RORX015A",123,0)
 ; DATE          Date when the code was entered
"RTN","RORX015A",124,0)
 ; [CODE]        Procedure code (CPT or ICD-9)
"RTN","RORX015A",125,0)
 ;
"RTN","RORX015A",126,0)
 ; Either the IEN or the CODE parameter must be provided.
"RTN","RORX015A",127,0)
 ;
"RTN","RORX015A",128,0)
PROCSET(PTIEN,SOURCE,IEN,DATE,CODE) ;
"RTN","RORX015A",129,0)
 Q:DATE'>0
"RTN","RORX015A",130,0)
 N TMP
"RTN","RORX015A",131,0)
 S IEN=+$G(IEN)
"RTN","RORX015A",132,0)
 ;---
"RTN","RORX015A",133,0)
 I IEN'>0  Q:$G(CODE)=""  D  Q:IEN'>0
"RTN","RORX015A",134,0)
 . I SOURCE="O"  S IEN=+$$CODEN^ICPTCOD(CODE)       Q
"RTN","RORX015A",135,0)
 . I SOURCE="I"  S IEN=+$$CODEN^ICDCODE(CODE,80.1)  Q
"RTN","RORX015A",136,0)
 ;---
"RTN","RORX015A",137,0)
 I SOURCE="O",'$$PARAM^RORTSK01("CPTLST","ALL")  D  Q:'TMP
"RTN","RORX015A",138,0)
 . S TMP=$D(RORTSK("PARAMS","CPTLST","C",IEN))
"RTN","RORX015A",139,0)
 I SOURCE="I"  Q:$$ICDGRCHK^RORXU008(.RORPTGRP,IEN,RORICDL)
"RTN","RORX015A",140,0)
 ;---
"RTN","RORX015A",141,0)
 S TMP=+$G(@RORTMP@("PAT",PTIEN,SOURCE,IEN))
"RTN","RORX015A",142,0)
 S:'TMP!(DATE<TMP) @RORTMP@("PAT",PTIEN,SOURCE,IEN)=DATE
"RTN","RORX015A",143,0)
 S ^("C")=$G(@RORTMP@("PAT",PTIEN,SOURCE,IEN,"C"))+1
"RTN","RORX015A",144,0)
 Q
"RTN","RORX015A",145,0)
 ;
"RTN","RORX015A",146,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX015A",147,0)
 ;
"RTN","RORX015A",148,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX015A",149,0)
 ;
"RTN","RORX015A",150,0)
 ; Return Values:
"RTN","RORX015A",151,0)
 ;       <0  Error code
"RTN","RORX015A",152,0)
 ;        0  Ok
"RTN","RORX015A",153,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",154,0)
 ;
"RTN","RORX015A",155,0)
QUERY(FLAGS) ;
"RTN","RORX015A",156,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX015A",157,0)
 N RORPTGRP      ; Temporary list of ICD-9 groups
"RTN","RORX015A",158,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX015A",159,0)
 ;
"RTN","RORX015A",160,0)
 N CNT,ECNT,IEN,IENS,MODE,PTIEN,RC,SKIP,SKIPEDT,SKIPSDT,TMP,UTEDT,UTSDT,XREFNODE
"RTN","RORX015A",161,0)
 N RCC,FLAG
"RTN","RORX015A",162,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX015A",163,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1)
"RTN","RORX015A",164,0)
 S (CNT,ECNT,RC)=0,SKIPEDT=ROREDT,SKIPSDT=RORSDT
"RTN","RORX015A",165,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") MODE("I")=1
"RTN","RORX015A",166,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") MODE("O")=1
"RTN","RORX015A",167,0)
 ;--- Utilization date range
"RTN","RORX015A",168,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX015A",169,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX015A",170,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX015A",171,0)
 . ;--- Combined date range
"RTN","RORX015A",172,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,UTSDT)
"RTN","RORX015A",173,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,UTEDT)
"RTN","RORX015A",174,0)
 ;--- Number of patients in the registry
"RTN","RORX015A",175,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX015A",176,0)
 ;
"RTN","RORX015A",177,0)
 ;=== Browse through the registry records
"RTN","RORX015A",178,0)
 S IEN=0
"RTN","RORX015A",179,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX015A",180,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX015A",181,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX015A",182,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX015A",183,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX015A",184,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX015A",185,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX015A",186,0)
 . ;
"RTN","RORX015A",187,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX015A",188,0)
 . S PTIEN=$$PTIEN^RORUTL01(IEN)  Q:PTIEN'>0
"RTN","RORX015A",189,0)
 . ;--- Check if patient has passed the ICD9 Filter
"RTN","RORX015A",190,0)
 . S RCC=0
"RTN","RORX015A",191,0)
 . I FLAG'="ALL" D
"RTN","RORX015A",192,0)
 . . S RCC=$$ICD^RORXU010(PTIEN,RORREG)
"RTN","RORX015A",193,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX015A",194,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX015A",195,0)
 . ;--- End of ICD9 check
"RTN","RORX015A",196,0)
 . M RORPTGRP=RORIGRP("C")
"RTN","RORX015A",197,0)
 . ;
"RTN","RORX015A",198,0)
 . ;--- Inpatient codes (ICD-9)
"RTN","RORX015A",199,0)
 . I $G(MODE("I"))   D  I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",200,0)
 . . S RC=$$INPAT(PTIEN)
"RTN","RORX015A",201,0)
 . ;--- Outpatient codes (CPT)
"RTN","RORX015A",202,0)
 . I $G(MODE("O"))  D  I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",203,0)
 . . S RC=$$OUTPAT(PTIEN)
"RTN","RORX015A",204,0)
 . ;
"RTN","RORX015A",205,0)
 . ;--- If ICD-9 codes from some groups have not been found,
"RTN","RORX015A",206,0)
 . ;--- then do not consider inpatient procedures at all
"RTN","RORX015A",207,0)
 . K:$D(RORPTGRP)>1 @RORTMP@("PAT",PTIEN,"I")
"RTN","RORX015A",208,0)
 . ;---
"RTN","RORX015A",209,0)
 . S SKIP=($D(@RORTMP@("PAT",PTIEN))<10)
"RTN","RORX015A",210,0)
 . S:RORPROC<0 SKIP='SKIP
"RTN","RORX015A",211,0)
 . ;
"RTN","RORX015A",212,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX015A",213,0)
 . I 'SKIP  D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX015A",214,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX015A",215,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PTIEN,.TMP)
"RTN","RORX015A",216,0)
 . . S:'UTIL SKIP=1
"RTN","RORX015A",217,0)
 . ;
"RTN","RORX015A",218,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX015A",219,0)
 . I SKIP  K @RORTMP@("PAT",PTIEN)  Q
"RTN","RORX015A",220,0)
 . ;
"RTN","RORX015A",221,0)
 . ;--- Calculate the patient's totals
"RTN","RORX015A",222,0)
 . S RC=$$TOTALS(PTIEN)
"RTN","RORX015A",223,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",224,0)
 ;---
"RTN","RORX015A",225,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX015A",226,0)
 ;
"RTN","RORX015A",227,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX015A",228,0)
 ;
"RTN","RORX015A",229,0)
 ; Return Values:
"RTN","RORX015A",230,0)
 ;       <0  Error code
"RTN","RORX015A",231,0)
 ;        0  Ok
"RTN","RORX015A",232,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",233,0)
 ;
"RTN","RORX015A",234,0)
SORT() ;
"RTN","RORX015A",235,0)
 N IEN,SRC,TMP,TNC,TNDC
"RTN","RORX015A",236,0)
 ;---
"RTN","RORX015A",237,0)
 S (TNC,TNDC)=0
"RTN","RORX015A",238,0)
 F SRC="I","O"  D
"RTN","RORX015A",239,0)
 . S IEN=0
"RTN","RORX015A",240,0)
 . F  S IEN=$O(@RORTMP@("PROC",SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015A",241,0)
 . . S TMP=$P($G(@RORTMP@("PROC",SRC,IEN)),U,2)
"RTN","RORX015A",242,0)
 . . S:TMP'="" @RORTMP@("PROC","B",TMP,SRC,IEN)=""
"RTN","RORX015A",243,0)
 . . S TNC=TNC+$G(@RORTMP@("PROC",SRC,IEN,"C"))
"RTN","RORX015A",244,0)
 . . S TNDC=TNDC+1
"RTN","RORX015A",245,0)
 S @RORTMP@("PROC")=TNC_U_TNDC
"RTN","RORX015A",246,0)
 ;---
"RTN","RORX015A",247,0)
 Q 0
"RTN","RORX015A",248,0)
 ;
"RTN","RORX015A",249,0)
 ;***** CALCULATES INTERMEDIATE TOTALS
"RTN","RORX015A",250,0)
 ;
"RTN","RORX015A",251,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",252,0)
 ;
"RTN","RORX015A",253,0)
 ; Return Values:
"RTN","RORX015A",254,0)
 ;       <0  Error code
"RTN","RORX015A",255,0)
 ;        0  Ok
"RTN","RORX015A",256,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",257,0)
 ;
"RTN","RORX015A",258,0)
TOTALS(PTIEN) ;
"RTN","RORX015A",259,0)
 N CNT,CODE,IEN,NAME,PNODE,RC,SRC,TMP,VA,VADM
"RTN","RORX015A",260,0)
 S PNODE=$NA(@RORTMP@("PAT",PTIEN))
"RTN","RORX015A",261,0)
 ;--- Get and store the patient's data
"RTN","RORX015A",262,0)
 D VADEM^RORUTL05(PTIEN,1)
"RTN","RORX015A",263,0)
 S @PNODE=VA("BID")_U_VADM(1)_U_$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX015A",264,0)
 S ^("PAT")=$G(@RORTMP@("PAT"))+1
"RTN","RORX015A",265,0)
 ;
"RTN","RORX015A",266,0)
 F SRC="I","O"  D
"RTN","RORX015A",267,0)
 . S IEN=0
"RTN","RORX015A",268,0)
 . F  S IEN=$O(@PNODE@(SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015A",269,0)
 . . S CODE=$P($G(@RORTMP@("PROC",SRC,IEN)),U),NAME=""
"RTN","RORX015A",270,0)
 . . D:CODE=""
"RTN","RORX015A",271,0)
 . . . I SRC="O"  D
"RTN","RORX015A",272,0)
 . . . . S TMP=$$CPT^ICPTCOD(IEN)
"RTN","RORX015A",273,0)
 . . . . S:TMP'<0 CODE=$P(TMP,U,2),NAME=$P(TMP,U,3)
"RTN","RORX015A",274,0)
 . . . E  D
"RTN","RORX015A",275,0)
 . . . . S TMP=$$ICDOP^ICDCODE(IEN)
"RTN","RORX015A",276,0)
 . . . . S:TMP'<0 CODE=$P(TMP,U,2),NAME=$P(TMP,U,5)
"RTN","RORX015A",277,0)
 . . . S:CODE="" CODE="UNKN"
"RTN","RORX015A",278,0)
 . . . S:NAME="" NAME="Unknown ("_IEN_")"
"RTN","RORX015A",279,0)
 . . . S @RORTMP@("PROC",SRC,IEN)=CODE_U_NAME
"RTN","RORX015A",280,0)
 . . ;---
"RTN","RORX015A",281,0)
 . . S CNT=+$G(@PNODE@(SRC,IEN,"C"))
"RTN","RORX015A",282,0)
 . . S ^("C")=$G(@RORTMP@("PROC",SRC,IEN,"C"))+CNT
"RTN","RORX015A",283,0)
 . . S ^("P")=$G(@RORTMP@("PROC",SRC,IEN,"P"))+1
"RTN","RORX015A",284,0)
 Q 0
"RTN","RORX016A")
0^20^B11587383^B9199595
"RTN","RORX016A",1,0)
RORX016A ;HOIFO/BH,SG,VAC - OUTPATIENT UTILIZATION (QUERY) ;4/7/09 2:10pm
"RTN","RORX016A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORX016A",3,0)
 ;
"RTN","RORX016A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX016A",5,0)
 ;
"RTN","RORX016A",6,0)
 ; #557          Read access to the file #40.7 (controlled)
"RTN","RORX016A",7,0)
 ; #2548         APIs in routine SDQ: ACRP Interface Toolkit (supported)
"RTN","RORX016A",8,0)
 ; #10103        FMADD^XLFDT (supported)
"RTN","RORX016A",9,0)
 ;
"RTN","RORX016A",10,0)
 ; This routine modified March 2009 for ICD9 Filter for Include or
"RTN","RORX016A",11,0)
 ;    Exclude
"RTN","RORX016A",12,0)
 Q
"RTN","RORX016A",13,0)
 ;
"RTN","RORX016A",14,0)
 ;***** LOADS AND PROCESSES THE OUTPATIENT DATA
"RTN","RORX016A",15,0)
 ;
"RTN","RORX016A",16,0)
 ; RORDFN        Patient IEN (in file #2)
"RTN","RORX016A",17,0)
 ;
"RTN","RORX016A",18,0)
 ; Return Values:
"RTN","RORX016A",19,0)
 ;       <0  Error code
"RTN","RORX016A",20,0)
 ;        0  Ok
"RTN","RORX016A",21,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX016A",22,0)
 ;
"RTN","RORX016A",23,0)
OPDATA(RORDFN) ;
"RTN","RORX016A",24,0)
 N QUERY,RORDST,RORECNT
"RTN","RORX016A",25,0)
 S RORDST=$NA(^TMP("RORX016",$J))
"RTN","RORX016A",26,0)
 D OPEN^SDQ(.QUERY)
"RTN","RORX016A",27,0)
 D INDEX^SDQ(.QUERY,"PATIENT/DATE","SET")
"RTN","RORX016A",28,0)
 D PAT^SDQ(.QUERY,RORDFN,"SET")
"RTN","RORX016A",29,0)
 D DATE^SDQ(.QUERY,RORSDT,ROREDT1,"SET")
"RTN","RORX016A",30,0)
 D SCANCB^SDQ(.QUERY,"D SCAN^RORX016A(Y,Y0)","SET")
"RTN","RORX016A",31,0)
 D ACTIVE^SDQ(.QUERY,"TRUE","SET")
"RTN","RORX016A",32,0)
 D SCAN^SDQ(.QUERY,"FORWARD")
"RTN","RORX016A",33,0)
 D CLOSE^SDQ(.QUERY)
"RTN","RORX016A",34,0)
 Q +$G(RORECNT)
"RTN","RORX016A",35,0)
 ;
"RTN","RORX016A",36,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX016A",37,0)
 ;
"RTN","RORX016A",38,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX016A",39,0)
 ;
"RTN","RORX016A",40,0)
 ; Return Values:
"RTN","RORX016A",41,0)
 ;       <0  Error code
"RTN","RORX016A",42,0)
 ;        0  Ok
"RTN","RORX016A",43,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX016A",44,0)
 ;
"RTN","RORX016A",45,0)
QUERY(FLAGS) ;
"RTN","RORX016A",46,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX016A",47,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX016A",48,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX016A",49,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX016A",50,0)
 ;
"RTN","RORX016A",51,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,TMP,VA,VADM,XREFNODE
"RTN","RORX016A",52,0)
 N RCC,FLAG
"RTN","RORX016A",53,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX016A",54,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX016A",55,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT,1)
"RTN","RORX016A",56,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX016A",57,0)
 ;--- Browse through the registry records
"RTN","RORX016A",58,0)
 S IEN=0
"RTN","RORX016A",59,0)
 S FLAG=$G(RORTSK("PARAMS","ICD9FILT","A","FILTER"))
"RTN","RORX016A",60,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX016A",61,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX016A",62,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX016A",63,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX016A",64,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX016A",65,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX016A",66,0)
 . ;
"RTN","RORX016A",67,0)
 . ;--- Get the patient IEN (DFN)
"RTN","RORX016A",68,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX016A",69,0)
 . ;--- Check the patient against the ICD9 Filter
"RTN","RORX016A",70,0)
 . S RCC=0
"RTN","RORX016A",71,0)
 . I FLAG'="ALL" D
"RTN","RORX016A",72,0)
 . . S RCC=$$ICD^RORXU010(PATIEN,RORREG)
"RTN","RORX016A",73,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX016A",74,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX016A",75,0)
 . ;--- End of ICD9 Filter check
"RTN","RORX016A",76,0)
 . ;
"RTN","RORX016A",77,0)
 . ;--- Get the patient's data
"RTN","RORX016A",78,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX016A",79,0)
 . S RORPNAME=VADM(1),RORLAST4=VA("BID")
"RTN","RORX016A",80,0)
 . ;
"RTN","RORX016A",81,0)
 . ;--- Get the outpatient data
"RTN","RORX016A",82,0)
 . S RC=$$OPDATA(PATIEN)
"RTN","RORX016A",83,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX016A",84,0)
 . ;
"RTN","RORX016A",85,0)
 . ;--- Calculate intermediate totals
"RTN","RORX016A",86,0)
 . S RC=$$TOTALS^RORX016B(PATIEN)
"RTN","RORX016A",87,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX016A",88,0)
 ;---
"RTN","RORX016A",89,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX016A",90,0)
 ;
"RTN","RORX016A",91,0)
 ;***** CALLBACK ENTRY POINT FOR ACRP API
"RTN","RORX016A",92,0)
SCAN(Y,Y0) ;
"RTN","RORX016A",93,0)
 N DTX,STOP,TMP
"RTN","RORX016A",94,0)
 ;--- Check the division
"RTN","RORX016A",95,0)
 S TMP=$$PARAM^RORTSK01("DIVISIONS","ALL")
"RTN","RORX016A",96,0)
 I 'TMP  Q:'$D(RORTSK("PARAMS","DIVISIONS","C",+$P(Y0,U,11)))
"RTN","RORX016A",97,0)
 ;--- Data comes from the OUTPATIENT ENCOUNTER file (409.68)
"RTN","RORX016A",98,0)
 S STOP=$P($G(^DIC(40.7,+$P(Y0,U,3),0)),U,2),DTX=Y0\1
"RTN","RORX016A",99,0)
 S:STOP="" STOP="NSC"
"RTN","RORX016A",100,0)
 S @RORDST@("OP",RORDFN,DTX)=$G(@RORDST@("OP",RORDFN,DTX))+1
"RTN","RORX016A",101,0)
 S @RORDST@("OP",RORDFN,DTX,STOP)=$G(@RORDST@("OP",RORDFN,DTX,STOP))+1
"RTN","RORX016A",102,0)
 Q
"RTN","RORXU001")
0^25^B13481235^B13475252
"RTN","RORXU001",1,0)
RORXU001 ;HOIFO/BH,SG,VAC - REPORT UTILITIES  ;4/23/09 1:21pm
"RTN","RORXU001",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORXU001",3,0)
 ;
"RTN","RORXU001",4,0)
 ; This routine uses the following IAs:
"RTN","RORXU001",5,0)
 ;
"RTN","RORXU001",6,0)
 ; #325          ADM^VADPT2 (controlled)
"RTN","RORXU001",7,0)
 ; #2056         GET1^DIQ, GETS^DIQ (supported)
"RTN","RORXU001",8,0)
 ; #2548         APIs in routine SDQ (supported)
"RTN","RORXU001",9,0)
 ; #10103        DT^XLFDT, FMADD^XLFDT
"RTN","RORXU001",10,0)
 ;
"RTN","RORXU001",11,0)
 Q
"RTN","RORXU001",12,0)
 ;
"RTN","RORXU001",13,0)
 ;***** DOUBLE CHECKS THE ADMISSION
"RTN","RORXU001",14,0)
 ;
"RTN","RORXU001",15,0)
 ; DFN           Patient IEN
"RTN","RORXU001",16,0)
 ; VAINDT        Admission date
"RTN","RORXU001",17,0)
 ; .DISDT        Discharge date
"RTN","RORXU001",18,0)
 ;
"RTN","RORXU001",19,0)
 ; Return Values:
"RTN","RORXU001",20,0)
 ;        0  Ok
"RTN","RORXU001",21,0)
 ;        1  Invalid admission date
"RTN","RORXU001",22,0)
 ;
"RTN","RORXU001",23,0)
CHKADM(DFN,VAINDT,DISDT) ;
"RTN","RORXU001",24,0)
 N IEN,RORMSG,VADMVT,VAHOW,VAROOT
"RTN","RORXU001",25,0)
 D ADM^VADPT2  Q:'VADMVT 1
"RTN","RORXU001",26,0)
 S IEN=+$$GET1^DIQ(405,VADMVT,.17,"I",,"RORMSG")
"RTN","RORXU001",27,0)
 S:IEN>0 DISDT=$$GET1^DIQ(405,IEN_",",.01,"I",,"RORMSG")
"RTN","RORXU001",28,0)
 Q 0
"RTN","RORXU001",29,0)
 ;
"RTN","RORXU001",30,0)
 ;***** DATE OF THE MOST RECENT VISIT TO ANY OF THE SELECTED CLINICS
"RTN","RORXU001",31,0)
 ;
"RTN","RORXU001",32,0)
 ; PATIEN        Patient IEN (file #2)
"RTN","RORXU001",33,0)
 ;
"RTN","RORXU001",34,0)
 ; .RORCLIN      Reference to a local array of Clinics, the subscripts
"RTN","RORXU001",35,0)
 ;               are IEN's from file #44 or will be a single element
"RTN","RORXU001",36,0)
 ;               array with a subscript of "ALL", which will denote
"RTN","RORXU001",37,0)
 ;               all clinics (i.e. CLIN("ALL")="").
"RTN","RORXU001",38,0)
 ;
"RTN","RORXU001",39,0)
 ; Return Values:
"RTN","RORXU001",40,0)
 ;        0  The patient has never been seen at any of the given
"RTN","RORXU001",41,0)
 ;           clinics
"RTN","RORXU001",42,0)
 ;       >0  Date of the most recent visit to one of the selected
"RTN","RORXU001",43,0)
 ;           clinics
"RTN","RORXU001",44,0)
 ;
"RTN","RORXU001",45,0)
LASTVSIT(PATIEN,RORCLIN) ;
"RTN","RORXU001",46,0)
 N QUERY,RORDT,RORLAST
"RTN","RORXU001",47,0)
 S RORDT=$$FMADD^XLFDT($$DT^XLFDT,1),RORLAST=0
"RTN","RORXU001",48,0)
 ;---
"RTN","RORXU001",49,0)
 D OPEN^SDQ(.QUERY)
"RTN","RORXU001",50,0)
 D INDEX^SDQ(.QUERY,"PATIENT","SET")
"RTN","RORXU001",51,0)
 D PAT^SDQ(.QUERY,PATIEN,"SET")
"RTN","RORXU001",52,0)
 D SCANCB^SDQ(.QUERY,"D SDQSCAN2^RORXU001(Y,Y0)","SET")
"RTN","RORXU001",53,0)
 D ACTIVE^SDQ(.QUERY,"TRUE","SET")
"RTN","RORXU001",54,0)
 D SCAN^SDQ(.QUERY,"FORWARD")
"RTN","RORXU001",55,0)
 D CLOSE^SDQ(.QUERY)
"RTN","RORXU001",56,0)
 ;---
"RTN","RORXU001",57,0)
 Q RORLAST
"RTN","RORXU001",58,0)
 ;
"RTN","RORXU001",59,0)
 ;***** LOADS PTF DATA AND CHECKS IF THE RECORD SHOULD BE SKIPPED
"RTN","RORXU001",60,0)
 ;
"RTN","RORXU001",61,0)
 ; PTFIEN        IEN of the PTF record
"RTN","RORXU001",62,0)
 ;
"RTN","RORXU001",63,0)
 ; [FLAGS]       Flags to control processing
"RTN","RORXU001",64,0)
 ;                 F  Skip fee-basis records - This flag commented
"RTN","RORXU001",65,0)
 ;                         out April 2009
"RTN","RORXU001",66,0)
 ;                 P  Skip non-PTF records
"RTN","RORXU001",67,0)
 ;
"RTN","RORXU001",68,0)
 ; [.ADMDT]      Admission date is returned via this parameter
"RTN","RORXU001",69,0)
 ; [.DISDT]      Discharge date is returned via this parameter
"RTN","RORXU001",70,0)
 ; [.SUFFIX]     Suffix is returned via this parameter
"RTN","RORXU001",71,0)
 ; [.STATUS]     Status is returned via this parameter
"RTN","RORXU001",72,0)
 ; [.FACILITY]   Facility number is returned via this parameter
"RTN","RORXU001",73,0)
 ;
"RTN","RORXU001",74,0)
 ; Return Values:
"RTN","RORXU001",75,0)
 ;       <0  Error code
"RTN","RORXU001",76,0)
 ;        0  Ok
"RTN","RORXU001",77,0)
 ;        1  Skip this record
"RTN","RORXU001",78,0)
 ;
"RTN","RORXU001",79,0)
PTF(PTFIEN,FLAGS,ADMDT,DISDT,SUFFIX,STATUS,FACILITY) ;
"RTN","RORXU001",80,0)
 N FLDLST,IENS,RORBUF,RORMSG
"RTN","RORXU001",81,0)
 S FLAGS=$G(FLAGS),IENS=(+PTFIEN)_","
"RTN","RORXU001",82,0)
 S FLDLST="2;3;5;6;70"
"RTN","RORXU001",83,0)
 ;S:FLAGS["F" FLDLST=FLDLST_";4"        ; FEE BASIS- commented out
"RTN","RORXU001",84,0)
 S:FLAGS["P" FLDLST=FLDLST_";11"       ; TYPE OF RECORD
"RTN","RORXU001",85,0)
 ;--- Load the data
"RTN","RORXU001",86,0)
 K RORMSG D GETS^DIQ(45,IENS,FLDLST,"I","RORBUF","RORMSG")
"RTN","RORXU001",87,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,45,IENS)
"RTN","RORXU001",88,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,45,IENS)
"RTN","RORXU001",89,0)
 ;---
"RTN","RORXU001",90,0)
 S ADMDT=$G(RORBUF(45,IENS,2,"I"))     ; ADMISSION DATE
"RTN","RORXU001",91,0)
 S FACILITY=$G(RORBUF(45,IENS,3,"I"))  ; FACILITY
"RTN","RORXU001",92,0)
 S SUFFIX=$G(RORBUF(45,IENS,5,"I"))    ; SUFFIX
"RTN","RORXU001",93,0)
 S STATUS=$G(RORBUF(45,IENS,6,"I"))    ; STATUS
"RTN","RORXU001",94,0)
 S DISDT=$G(RORBUF(45,IENS,70,"I"))    ; DISCHARGE DATE
"RTN","RORXU001",95,0)
 Q:ADMDT'>0 1
"RTN","RORXU001",96,0)
 ;--- Skip a non-PTF record
"RTN","RORXU001",97,0)
 I FLAGS["P"  Q:$G(RORBUF(45,IENS,11,"I"))'=1 1
"RTN","RORXU001",98,0)
 ;--- Skip a fee basis record
"RTN","RORXU001",99,0)
 I FLAGS["F"  Q:$G(RORBUF(45,IENS,4,"I")) 1
"RTN","RORXU001",100,0)
 ;--- Success
"RTN","RORXU001",101,0)
 Q 0
"RTN","RORXU001",102,0)
 ;
"RTN","RORXU001",103,0)
 ;**** CALL-BACK ENTRY POINTS FOR THE SDQ API
"RTN","RORXU001",104,0)
SDQSCAN1(Y,Y0) ;
"RTN","RORXU001",105,0)
 N TMP
"RTN","RORXU001",106,0)
 ;--- Check the clinic
"RTN","RORXU001",107,0)
 I '$$PARAM^RORTSK01("CLINICS","ALL")  D  Q:'TMP
"RTN","RORXU001",108,0)
 . S TMP=$D(RORTSK("PARAMS","CLINICS","C",+$P(Y0,U,4)))
"RTN","RORXU001",109,0)
 ;--- Count the encounters
"RTN","RORXU001",110,0)
 S RORENCNT=RORENCNT+1
"RTN","RORXU001",111,0)
 Q
"RTN","RORXU001",112,0)
 ;
"RTN","RORXU001",113,0)
SDQSCAN2(Y,Y0) ;
"RTN","RORXU001",114,0)
 N DTX,TMP
"RTN","RORXU001",115,0)
 ;--- Check the clinic
"RTN","RORXU001",116,0)
 I '$$PARAM^RORTSK01("CLINICS","ALL")  D  Q:'TMP
"RTN","RORXU001",117,0)
 . S TMP=$D(RORTSK("PARAMS","CLINICS","C",+$P(Y0,U,4)))
"RTN","RORXU001",118,0)
 ;--- Date of the visit
"RTN","RORXU001",119,0)
 S DTX=+$P(Y0,U)  S:(DTX>RORLAST)&(DTX<RORDT) RORLAST=DTX
"RTN","RORXU001",120,0)
 Q
"RTN","RORXU001",121,0)
 ;
"RTN","RORXU001",122,0)
 ;***** CHECKS IF THE PATIENT WAS SEEN AT SELECTED CLINICS
"RTN","RORXU001",123,0)
 ;
"RTN","RORXU001",124,0)
 ; RORSDT        Start Date for search (FileMan).
"RTN","RORXU001",125,0)
 ;               Time is ignored and the beginning of the day is
"RTN","RORXU001",126,0)
 ;               considered as the boundary (ST\1).
"RTN","RORXU001",127,0)
 ;
"RTN","RORXU001",128,0)
 ; ROREDT        End Date for search (FileMan).
"RTN","RORXU001",129,0)
 ;               Time is ignored and the end of the day is
"RTN","RORXU001",130,0)
 ;               considered as the boundary (ED\1+1).
"RTN","RORXU001",131,0)
 ;
"RTN","RORXU001",132,0)
 ; PATIEN        Patient IEN (file #2)
"RTN","RORXU001",133,0)
 ;
"RTN","RORXU001",134,0)
 ; Return Values:
"RTN","RORXU001",135,0)
 ;        0  The patient was not seen at any of the given clinics
"RTN","RORXU001",136,0)
 ;           during the provided time frame
"RTN","RORXU001",137,0)
 ;        1  The patient was seen
"RTN","RORXU001",138,0)
 ; 
"RTN","RORXU001",139,0)
SEEN(RORSDT,ROREDT,PATIEN) ;
"RTN","RORXU001",140,0)
 N QUERY,RORENCNT
"RTN","RORXU001",141,0)
 S RORENCNT=0
"RTN","RORXU001",142,0)
 ;---
"RTN","RORXU001",143,0)
 D OPEN^SDQ(.QUERY)
"RTN","RORXU001",144,0)
 D INDEX^SDQ(.QUERY,"PATIENT/DATE","SET")
"RTN","RORXU001",145,0)
 D PAT^SDQ(.QUERY,PATIEN,"SET")
"RTN","RORXU001",146,0)
 D DATE^SDQ(.QUERY,RORSDT\1,$$FMADD^XLFDT(ROREDT\1,1),"SET")
"RTN","RORXU001",147,0)
 D SCANCB^SDQ(.QUERY,"D SDQSCAN1^RORXU001(Y,Y0)","SET")
"RTN","RORXU001",148,0)
 D ACTIVE^SDQ(.QUERY,"TRUE","SET")
"RTN","RORXU001",149,0)
 D SCAN^SDQ(.QUERY,"FORWARD")
"RTN","RORXU001",150,0)
 D CLOSE^SDQ(.QUERY)
"RTN","RORXU001",151,0)
 ;---
"RTN","RORXU001",152,0)
 Q (RORENCNT>0)
"RTN","RORXU009")
0^21^B3569628^n/a
"RTN","RORXU009",1,0)
RORXU009 ;HOIFO/VC - REPORT MODIFICATON UTILITY ;2/10/09 5:01pm
"RTN","RORXU009",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORXU009",3,0)
 ;
"RTN","RORXU009",4,0)
 Q
"RTN","RORXU009",5,0)
DEL(TSK) ;DELETES RECORDS FROM A REPORT FILE
"RTN","RORXU009",6,0)
 ;This routine will remove all except the most recent lab test
"RTN","RORXU009",7,0)
 ;Input    TASK - the task number created when the report is generated
"RTN","RORXU009",8,0)
 ;
"RTN","RORXU009",9,0)
 K ^TMP($J,"RORKILL")
"RTN","RORXU009",10,0)
 N NAMEOLD,DATENEW,TEST,DATE,BEG,CTR,END,NAME,RES,J,K,I,M,N,X
"RTN","RORXU009",11,0)
 S I=0,NAMEOLD="",DATENEW=""
"RTN","RORXU009",12,0)
 ;
"RTN","RORXU009",13,0)
 ;---  Put the test records in order by Patient,test,and date
"RTN","RORXU009",14,0)
 ;
"RTN","RORXU009",15,0)
 F X=1:1 S I=$O(^RORDATA(798.8,TSK,"RI",I)) D  Q:+I=0
"RTN","RORXU009",16,0)
 .S NAME=$G(^RORDATA(798.8,TSK,"RI",I,1))
"RTN","RORXU009",17,0)
 .Q:NAME'[","
"RTN","RORXU009",18,0)
 .S J=I+3
"RTN","RORXU009",19,0)
 .S DATENEW=$G(^RORDATA(798.8,TSK,"RI",J,1))
"RTN","RORXU009",20,0)
 .Q:DATENEW=""
"RTN","RORXU009",21,0)
 .S K=I+4
"RTN","RORXU009",22,0)
 .S TEST=$G(^RORDATA(798.8,TSK,"RI",K,1))
"RTN","RORXU009",23,0)
 .Q:TEST=""
"RTN","RORXU009",24,0)
 .S CTR=1
"RTN","RORXU009",25,0)
 .S RES=0
"RTN","RORXU009",26,0)
 .I $G(^TMP($J,"RORKILL",NAME,TEST,(DATENEW*(-1)),CTR))'="" D
"RTN","RORXU009",27,0)
 ..S CTR=CTR+1
"RTN","RORXU009",28,0)
 ..F M=1:1:10 I $G(^TMP($J,"RORKILL",NAME,TEST,(DATENEW*(-1)),CTR))'="" S CTR=CTR+1
"RTN","RORXU009",29,0)
 .S ^TMP($J,"RORKILL",NAME,TEST,(DATENEW*(-1)),CTR)=(I-1)_U_(K+1)
"RTN","RORXU009",30,0)
 ;
"RTN","RORXU009",31,0)
 ;--- Use the TMP file to kill the nodes in file 798.8
"RTN","RORXU009",32,0)
 ;
"RTN","RORXU009",33,0)
 S NAME=""
"RTN","RORXU009",34,0)
 F  S NAME=$O(^TMP($J,"RORKILL",NAME)) Q:NAME=""  D
"RTN","RORXU009",35,0)
 .S TEST=""
"RTN","RORXU009",36,0)
 .F  S TEST=$O(^TMP($J,"RORKILL",NAME,TEST)) Q:TEST=""  D
"RTN","RORXU009",37,0)
 ..S DATE=-9999999
"RTN","RORXU009",38,0)
 ..F M=1:1  S DATE=$O(^TMP($J,"RORKILL",NAME,TEST,DATE)) Q:DATE=""  D
"RTN","RORXU009",39,0)
 ...Q:M=1
"RTN","RORXU009",40,0)
 ...S CTR=0
"RTN","RORXU009",41,0)
 ...F  S CTR=$O(^TMP($J,"RORKILL",NAME,TEST,DATE,CTR)) Q:CTR=""  D
"RTN","RORXU009",42,0)
 ....S BEG=$P(^TMP($J,"RORKILL",NAME,TEST,DATE,CTR),U,1)
"RTN","RORXU009",43,0)
 ....S END=$P(^TMP($J,"RORKILL",NAME,TEST,DATE,CTR),U,2)
"RTN","RORXU009",44,0)
 ....F N=BEG:1:END K ^RORDATA(798.8,TSK,"RI",N)
"RTN","RORXU009",45,0)
 K ^TMP($J,"RORKILL")
"RTN","RORXU009",46,0)
 Q
"RTN","RORXU009",47,0)
 ;
"RTN","RORXU010")
0^24^B9497434^n/a
"RTN","RORXU010",1,0)
RORXU010 ;HCOIFO/VC - REPORT MODIFICATON UTILITY ;4/16/09 2:54pm
"RTN","RORXU010",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8**;Feb 17, 2006;Build 8
"RTN","RORXU010",3,0)
 ;
"RTN","RORXU010",4,0)
 ;This routine will build a TMP file that includes the ICD9
"RTN","RORXU010",5,0)
 ;  codes for the stated patient.
"RTN","RORXU010",6,0)
 ;Format is ^TMP($J,"RORFLTR",PATIENT IEN,ICD9 CODE)=1
"RTN","RORXU010",7,0)
 ;The inputs will be
"RTN","RORXU010",8,0)
 ;   1)  PIEN - The patient's IEN in the registry file
"RTN","RORXU010",9,0)
 ;            Specifically ^RORDATA(798.4,PIEN)
"RTN","RORXU010",10,0)
 ;       and in the patient file ^DPT(PIEN
"RTN","RORXU010",11,0)
 ;   2)  REG - Identifier for which registry is used
"RTN","RORXU010",12,0)
 ;The return code will the response to the flag in 2) above
"RTN","RORXU010",13,0)
 ;Three types of patient codes must be looked at:
"RTN","RORXU010",14,0)
 ;   Inpatient, Outpatient, and the Problem List
"RTN","RORXU010",15,0)
 ;   
"RTN","RORXU010",16,0)
 ;This routine uses the following IAs:
"RTN","RORXU010",17,0)
 ;
"RTN","RORXU010",18,0)
 ;#92       ^DGPT(  (controlled)
"RTN","RORXU010",19,0)
 ;#928      ACTIVE^GMPLUTL (controlled)
"RTN","RORXU010",20,0)
 ;#1554     POV^PXAPIIB (controlled)
"RTN","RORXU010",21,0)
 ;#1905     SELECTED^VSIT (controlled)
"RTN","RORXU010",22,0)
 ;#2977     GETFLDS^GMPLEDT3 (controlled)
"RTN","RORXU010",23,0)
 ;#3545     ^DGPT("AAD" (private)
"RTN","RORXU010",24,0)
 ;#5388     ^ICD9(  (supported)
"RTN","RORXU010",25,0)
 ;
"RTN","RORXU010",26,0)
 Q
"RTN","RORXU010",27,0)
 ;
"RTN","RORXU010",28,0)
ICD(PIEN,REG) ;
"RTN","RORXU010",29,0)
 ;
"RTN","RORXU010",30,0)
 K ^TMP($J,"RORFLTR",PIEN)
"RTN","RORXU010",31,0)
 ;INPATIENT
"RTN","RORXU010",32,0)
 N PATIEN,DATE,REF,PR1,I,VSIEN,TMP,RORVPLST,VAL,RORPLST,GMPVAMC
"RTN","RORXU010",33,0)
 N GMPROV,IEN,IS,COUNT,DAT,ICD91,ICD92
"RTN","RORXU010",34,0)
 N PR0 ;added 'new' statement
"RTN","RORXU010",35,0)
 ;
"RTN","RORXU010",36,0)
 S PATIEN=PIEN
"RTN","RORXU010",37,0)
 S DATE=0,COUNT=0
"RTN","RORXU010",38,0)
 F  S DATE=$O(^DGPT("AAD",PATIEN,DATE)) Q:DATE=""  D
"RTN","RORXU010",39,0)
 .S REF=0
"RTN","RORXU010",40,0)
 .F  S REF=$O(^DGPT("AAD",PATIEN,DATE,REF)) Q:REF=""  D
"RTN","RORXU010",41,0)
 ..S ICD91=$G(^DGPT(REF,70))
"RTN","RORXU010",42,0)
 ..S ICD92=$G(^DGPT(REF,71))
"RTN","RORXU010",43,0)
 ..I ICD91'="" D
"RTN","RORXU010",44,0)
 ...F I=10 D
"RTN","RORXU010",45,0)
 .... S PR0=$P(ICD91,U,I)
"RTN","RORXU010",46,0)
 .... I PR0'="" D
"RTN","RORXU010",47,0)
 ..... S PR1=$P($G(^ICD9(PR0,0)),U,1)
"RTN","RORXU010",48,0)
 ..... I PR1'="" S ^TMP($J,"RORFLTR",PATIEN,PR1)=1
"RTN","RORXU010",49,0)
 ...F I=16:1:25 D
"RTN","RORXU010",50,0)
 .... S PR0=$P(ICD91,U,I)
"RTN","RORXU010",51,0)
 .... I PR0'="" D
"RTN","RORXU010",52,0)
 ..... S PR1=$P($G(^ICD9(PR0,0)),U,1)
"RTN","RORXU010",53,0)
 ..... I PR1'="" S ^TMP($J,"RORFLTR",PATIEN,PR1)=1
"RTN","RORXU010",54,0)
 ..I ICD92'="" D
"RTN","RORXU010",55,0)
 ...F I=1:1:4 D
"RTN","RORXU010",56,0)
 ....S PR0=$P(ICD92,U,I)
"RTN","RORXU010",57,0)
 ....I PR0'="" D
"RTN","RORXU010",58,0)
 .....S PR1=$P($G(^ICD9(PR0,0)),U,1)
"RTN","RORXU010",59,0)
 .....I PR1'="" S ^TMP($J,"RORFLTR",PATIEN,PR1)=1
"RTN","RORXU010",60,0)
 ;
"RTN","RORXU010",61,0)
 ;OUTPATIENT
"RTN","RORXU010",62,0)
 ;Get the visits for the patients
"RTN","RORXU010",63,0)
 ;Note: the start date and end date determine which visits are
"RTN","RORXU010",64,0)
 ;      returned.  If no day is entered, then all visits are returned.
"RTN","RORXU010",65,0)
 D SELECTED^VSIT(PATIEN)
"RTN","RORXU010",66,0)
 ;- Browse through the visits
"RTN","RORXU010",67,0)
 S VSIEN=0
"RTN","RORXU010",68,0)
 F  S VSIEN=$O(^TMP("VSIT",$J,VSIEN)) Q:VSIEN=""  D
"RTN","RORXU010",69,0)
 .S TMP=+$O(^TMP("VSIT",$J,VSIEN,"")) Q:TMP'>0
"RTN","RORXU010",70,0)
 .; - Get a list of V POV records
"RTN","RORXU010",71,0)
 .D POV^PXAPIIB(VSIEN,.RORVPLST)
"RTN","RORXU010",72,0)
 .;RORVPLST array holds ICD9 data
"RTN","RORXU010",73,0)
 .S REF=""
"RTN","RORXU010",74,0)
 .F  S REF=$O(RORVPLST(REF)) Q:REF=""  D
"RTN","RORXU010",75,0)
 ..S VAL=$P(RORVPLST(REF),U,1)
"RTN","RORXU010",76,0)
 ..S PR1=$P($G(^ICD9(VAL,0)),U,1)
"RTN","RORXU010",77,0)
 ..I PR1'="" S ^TMP($J,"RORFLTR",PATIEN,PR1)=1
"RTN","RORXU010",78,0)
 K ^TMP("VSIT",$J)
"RTN","RORXU010",79,0)
 ;
"RTN","RORXU010",80,0)
 ;This will look at the Problem Lists
"RTN","RORXU010",81,0)
 D ACTIVE^GMPLUTL(PATIEN,.RORPLST)
"RTN","RORXU010",82,0)
 S (GMPVAMC,GMPROV)=0
"RTN","RORXU010",83,0)
 S IS=0
"RTN","RORXU010",84,0)
 F  S IS=$O(RORPLST(IS)) Q:IS=""  D
"RTN","RORXU010",85,0)
 .S IEN=$G(RORPLST(IS,0))
"RTN","RORXU010",86,0)
 .Q:IEN'>0
"RTN","RORXU010",87,0)
 .K GMPFLD,GMPORIG
"RTN","RORXU010",88,0)
 .D GETFLDS^GMPLEDT3(IEN)
"RTN","RORXU010",89,0)
 .S PR1=$P($G(GMPFLD(.01)),U,2)
"RTN","RORXU010",90,0)
 .I PR1'="" S ^TMP($J,"RORFLTR",PATIEN,PR1)=1
"RTN","RORXU010",91,0)
 ;
"RTN","RORXU010",92,0)
COMPARE ;NOW DETERMINE IF THE PATIENT SHOULD BE RETAINED OR NOT.
"RTN","RORXU010",93,0)
 ;This compares the RORTSK local array with the ^TMP("RORFLTR"
"RTN","RORXU010",94,0)
 ;     global array
"RTN","RORXU010",95,0)
 N A,B,STOP,X,Y
"RTN","RORXU010",96,0)
 S A="PARAMS",B="ICD9FILT",RC=0
"RTN","RORXU010",97,0)
 S X="",STOP="GO"
"RTN","RORXU010",98,0)
 F  S X=$O(RORTSK(A,B,"G",X)) Q:X=""  Q:STOP="STOP"  D
"RTN","RORXU010",99,0)
 .S Y=""
"RTN","RORXU010",100,0)
 .F  S Y=$O(RORTSK(A,B,"G",X,"C",Y)) Q:Y=""  Q:STOP="STOP"  D
"RTN","RORXU010",101,0)
 ..S DAT=$G(RORTSK(A,B,"G",X,"C",Y))
"RTN","RORXU010",102,0)
 ..I $D(^TMP($J,"RORFLTR",PATIEN,DAT))>0 D
"RTN","RORXU010",103,0)
 ...S RC=1,STOP="STOP"
"RTN","RORXU010",104,0)
 K ^TMP($J,"RORFLTR",PATIEN)
"RTN","RORXU010",105,0)
 Q RC
"SEC","^DIC",798,798,0,"AUDIT")

"SEC","^DIC",798,798,0,"DD")
@
"SEC","^DIC",798,798,0,"DEL")
@
"SEC","^DIC",798,798,0,"LAYGO")
@
"SEC","^DIC",798,798,0,"RD")

"SEC","^DIC",798,798,0,"WR")
@
"VER")
8.0^22.0
"^DD",798,798,0)
FIELD^^12^22
"^DD",798,798,0,"DDA")
N
"^DD",798,798,0,"DT")
3090105
"^DD",798,798,0,"IX","AC",798,.02)

"^DD",798,798,0,"IX","ALF",798.02,.01)

"^DD",798,798,0,"IX","AM",798,10)

"^DD",798,798,0,"IX","B",798,.01)

"^DD",798,798,0,"NM","ROR REGISTRY RECORD")

"^DD",798,798,0,"PT",799.4,.01)

"^DD",798,798,0,"SCR")
I $$ACCESS^RORDD(798,+$P($G(^(0)),U,2))
"^DD",798,798,0,"VRPK")
ROR
"^DD",798,798,0,"VRRV")
1.5^ROR 1.5
"^DD",798,798,.01,0)
PATIENT NAME^RP798.4^RORDATA(798.4,^0;1^Q
"^DD",798,798,.01,1,0)
^.1
"^DD",798,798,.01,1,1,0)
798^B
"^DD",798,798,.01,1,1,1)
S ^RORDATA(798,"B",$E(X,1,30),DA)=""
"^DD",798,798,.01,1,1,2)
K ^RORDATA(798,"B",$E(X,1,30),DA)
"^DD",798,798,.01,1,1,3)
Do not delete!
"^DD",798,798,.01,1,1,"%D",0)
^.101^2^2^3030428^^
"^DD",798,798,.01,1,1,"%D",1,0)
Patient records in all defined registries can be
"^DD",798,798,.01,1,1,"%D",2,0)
found using this cross-reference.
"^DD",798,798,.01,3)

"^DD",798,798,.01,8.5)
@
"^DD",798,798,.01,9)
@
"^DD",798,798,.01,20,0)
^.3LA^1^1
"^DD",798,798,.01,20,1,0)
ENTRY
"^DD",798,798,.01,21,0)
^^7^7^3060203^
"^DD",798,798,.01,21,1,0)
The PATIENT NAME field identifies a patient in the
"^DD",798,798,.01,21,2,0)
registry. You can select a patient either from the
"^DD",798,798,.01,21,3,0)
local registry or the ROR PATIENT file, or you can
"^DD",798,798,.01,21,4,0)
add a new patient from the PATIENT file.
"^DD",798,798,.01,21,5,0)
 
"^DD",798,798,.01,21,6,0)
You can only select records of those registries
"^DD",798,798,.01,21,7,0)
that you have appropriate security key(s) for.
"^DD",798,798,.01,23,0)
^.001^12^12^3060203^^
"^DD",798,798,.01,23,1,0)
An internal value of this field is the patient IEN in
"^DD",798,798,.01,23,2,0)
the PATIENT file (#2) because records in the ROR
"^DD",798,798,.01,23,3,0)
PATIENT file (#798.4) have the same internal entry
"^DD",798,798,.01,23,4,0)
numbers as corresponding records in the PATIENT file.
"^DD",798,798,.01,23,5,0)
Patient records in all registries can be found by
"^DD",798,798,.01,23,6,0)
traditional "B" cross-reference.
"^DD",798,798,.01,23,7,0)
 
"^DD",798,798,.01,23,8,0)
When value of this field is deleted (which means 
"^DD",798,798,.01,23,9,0)
deletion of the whole record), the logic of the ADELETE
"^DD",798,798,.01,23,10,0)
cross-reference tries to delete associated records from
"^DD",798,798,.01,23,11,0)
the ROR HIV STUDY (#799.4), ROR PATIENT (#798.4), and
"^DD",798,798,.01,23,12,0)
ROR PATIENT EVENTS (#798.3) files.
"^DD",798,798,.01,"DT")
3060123
"^DD",798,798,.02,0)
REGISTRY^RP798.1'I^ROR(798.1,^0;2^Q
"^DD",798,798,.02,1,0)
^.1
"^DD",798,798,.02,1,1,0)
798^AC
"^DD",798,798,.02,1,1,1)
S ^RORDATA(798,"AC",$E(X,1,30),DA)=""
"^DD",798,798,.02,1,1,2)
K ^RORDATA(798,"AC",$E(X,1,30),DA)
"^DD",798,798,.02,1,1,3)
Do not delete!
"^DD",798,798,.02,1,1,"%D",0)
^.101^2^2^3050804^^
"^DD",798,798,.02,1,1,"%D",1,0)
This cross-reference is used to link all records
"^DD",798,798,.02,1,1,"%D",2,0)
of the registry together.
"^DD",798,798,.02,1,1,"DT")
3000406
"^DD",798,798,.02,1,2,0)
^^TRIGGER^798^1
"^DD",798,798,.02,1,2,1)
X ^DD(798,.02,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^RORDATA(798,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100) X ^DD(798,.02,1,2,1.4)
"^DD",798,798,.02,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^RORDATA(798,D0,0)):^(0),1:"") S X='$P(Y(1),U,3)
"^DD",798,798,.02,1,2,1.4)
S DIH=$G(^RORDATA(798,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=798,DIG=1 D ^DICR
"^DD",798,798,.02,1,2,2)
Q
"^DD",798,798,.02,1,2,3)
Do not delete!
"^DD",798,798,.02,1,2,"%D",0)
^^2^2^3020402^
"^DD",798,798,.02,1,2,"%D",1,0)
This trigger populates the DATE ENTERED field 
"^DD",798,798,.02,1,2,"%D",2,0)
when the patient is added to the registry.
"^DD",798,798,.02,1,2,"CREATE CONDITION")
'DATE ENTERED
"^DD",798,798,.02,1,2,"CREATE VALUE")
NOW
"^DD",798,798,.02,1,2,"DELETE VALUE")
NO EFFECT
"^DD",798,798,.02,1,2,"DT")
3011119
"^DD",798,798,.02,1,2,"FIELD")
DATE
"^DD",798,798,.02,8.5)
@
"^DD",798,798,.02,9)
@
"^DD",798,798,.02,20,0)
^.3LA^1^1
"^DD",798,798,.02,20,1,0)
ENTRY
"^DD",798,798,.02,21,0)
^.001^2^2^3020816^^
"^DD",798,798,.02,21,1,0)
The REGISTRY field identifies the registry that 
"^DD",798,798,.02,21,2,0)
the record belongs to.
"^DD",798,798,.02,23,0)
^.001^2^2^3020816^^
"^DD",798,798,.02,23,1,0)
Traditional cross-reference "AC" is used to link all 
"^DD",798,798,.02,23,2,0)
records of the registry together.
"^DD",798,798,.02,"DT")
3050804
"^DD",798,798,1,0)
DATE ENTERED^DI^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798,1,1,0)
^.1^^0
"^DD",798,798,1,5,1,0)
798^.02^2
"^DD",798,798,1,8.5)
@
"^DD",798,798,1,9)
@
"^DD",798,798,1,20,0)
^.3LA^1^1
"^DD",798,798,1,20,1,0)
ENTRY
"^DD",798,798,1,21,0)
^.001^3^3^3050630^^^^
"^DD",798,798,1,21,1,0)
The DATE ENTERED field is automatically populated
"^DD",798,798,1,21,2,0)
by the trigger associated with the REGISTRY field
"^DD",798,798,1,21,3,0)
when the patient is added to the registry.
"^DD",798,798,1,"DT")
3031027
"^DD",798,798,2,0)
DATE CONFIRMED^D^^0;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798,2,8.5)
@
"^DD",798,798,2,9)
@
"^DD",798,798,2,20,0)
^.3LA^1^1
"^DD",798,798,2,20,1,0)
ENTRY
"^DD",798,798,2,21,0)
^.001^4^4^3050630^^
"^DD",798,798,2,21,1,0)
A trigger associated with the STATUS field 
"^DD",798,798,2,21,2,0)
automatically populates the DATE CONFIRMED field
"^DD",798,798,2,21,3,0)
with the current date and time when the patient is
"^DD",798,798,2,21,4,0)
confirmed in the registry.
"^DD",798,798,2,"DT")
3050804
"^DD",798,798,2.1,0)
CONFIRMED BY^P200'^VA(200,^0;10^Q
"^DD",798,798,2.1,8.5)
@
"^DD",798,798,2.1,9)
@
"^DD",798,798,2.1,21,0)
^^4^4^3060203^
"^DD",798,798,2.1,21,1,0)
A trigger associated with the STATUS field 
"^DD",798,798,2.1,21,2,0)
automatically populates this field with a pointer
"^DD",798,798,2.1,21,3,0)
to the record of the user who confirmed the 
"^DD",798,798,2.1,21,4,0)
patient.
"^DD",798,798,2.1,"DT")
3050427
"^DD",798,798,3,0)
STATUS^S^0:Confirmed;4:Pending;5:Deleted;^0;5^Q
"^DD",798,798,3,1,0)
^.1
"^DD",798,798,3,1,1,0)
^^TRIGGER^798^5
"^DD",798,798,3,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^RORDATA(798,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X="1" S DIH=$G(^RORDATA(798,DIV(0),0)),DIV=X S $P(^(0),U,7)=DIV,DIH=798,DIG=5 D ^DICR
"^DD",798,798,3,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^RORDATA(798,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X="1" S DIH=$G(^RORDATA(798,DIV(0),0)),DIV=X S $P(^(0),U,7)=DIV,DIH=798,DIG=5 D ^DICR
"^DD",798,798,3,1,1,3)
Do not delete!
"^DD",798,798,3,1,1,"%D",0)
^^2^2^3051129^
"^DD",798,798,3,1,1,"%D",1,0)
This trigger sets the UPDATE LOCAL REGISTRY DATA 
"^DD",798,798,3,1,1,"%D",2,0)
flag when status of the record is changed.
"^DD",798,798,3,1,1,"CREATE VALUE")
"1"
"^DD",798,798,3,1,1,"DELETE VALUE")
"1"
"^DD",798,798,3,1,1,"DT")
3051129
"^DD",798,798,3,1,1,"FIELD")
UPDATE LOCAL REGISTRY DATA
"^DD",798,798,3,8.5)
@
"^DD",798,798,3,9)
@
"^DD",798,798,3,20,0)
^.3LA^1^1
"^DD",798,798,3,20,1,0)
STATE
"^DD",798,798,3,21,0)
^^2^2^3050426^
"^DD",798,798,3,21,1,0)
The STATUS field indicates current status of the 
"^DD",798,798,3,21,2,0)
registry record.
"^DD",798,798,3,23,0)
^^6^6^3050426^
"^DD",798,798,3,23,1,0)
When a patient is deleted from the registry, the 
"^DD",798,798,3,23,2,0)
internal value of this field is changed to 5. This 
"^DD",798,798,3,23,3,0)
record will be deleted during the next run of the 
"^DD",798,798,3,23,4,0)
nightly task and the corresponding HL7 messages will 
"^DD",798,798,3,23,5,0)
instruct the national database software to delete the 
"^DD",798,798,3,23,6,0)
patient data as well.
"^DD",798,798,3,"DT")
3060123
"^DD",798,798,3.1,0)
SELECTION RULE^798.01P^^1;0
"^DD",798,798,3.1,20,0)
^.3LA^1^1
"^DD",798,798,3.1,20,1,0)
ENTRY
"^DD",798,798,3.1,21,0)
^.001^3^3^3060105^^^
"^DD",798,798,3.1,21,1,0)
The SELECTION RULE multiple contains a list of
"^DD",798,798,3.1,21,2,0)
selection rules that the patient passed when added
"^DD",798,798,3.1,21,3,0)
to the registry.
"^DD",798,798,3.1,23,0)
^^2^2^3060105^
"^DD",798,798,3.1,23,1,0)
The list is automatically populated by the registry
"^DD",798,798,3.1,23,2,0)
update.
"^DD",798,798,3.2,0)
DATE SELECTED^CD^^ ; ^S X=$$DTSEL^RORDD01(D0)
"^DD",798,798,3.2,9)
^
"^DD",798,798,3.2,9.01)

"^DD",798,798,3.2,9.1)
S X=$$DTSEL^RORDD01(D0)
"^DD",798,798,3.2,21,0)
^^5^5^3060203^
"^DD",798,798,3.2,21,1,0)
Value of this field is calculated as the earliest
"^DD",798,798,3.2,21,2,0)
date of selection rules from the SELECTION RULE
"^DD",798,798,3.2,21,3,0)
multiple (3.1). If that multiple is empty, then
"^DD",798,798,3.2,21,4,0)
the date part of the DATE ENTERED field (1) will
"^DD",798,798,3.2,21,5,0)
be used.
"^DD",798,798,3.3,0)
LOCATION SELECTED^Cp4^^ ; ^S X=$$LOCSEL^RORDD01(D0)
"^DD",798,798,3.3,9)
^
"^DD",798,798,3.3,9.01)

"^DD",798,798,3.3,9.1)
S X=$$LOCSEL^RORDD01(D0)
"^DD",798,798,3.3,21,0)
^^3^3^3060105^
"^DD",798,798,3.3,21,1,0)
Computation algorithm of this field returns the
"^DD",798,798,3.3,21,2,0)
LOCATION field (2) value of the earliest selection
"^DD",798,798,3.3,21,3,0)
rules from the SELECTION RULE multiple (3.1).
"^DD",798,798,3.3,"DT")
3050803
"^DD",798,798,4,0)
UPDATE DEMOGRAPHICS^S^0:NO;1:YES;^0;6^Q
"^DD",798,798,4,1,0)
^.1^^0
"^DD",798,798,4,20,0)
^.3LA^1^1
"^DD",798,798,4,20,1,0)
STATE
"^DD",798,798,4,21,0)
^^3^3^3060203^
"^DD",798,798,4,21,1,0)
Usually, you should not edit this field. Set the 
"^DD",798,798,4,21,2,0)
value of this field to "YES" if you want patient
"^DD",798,798,4,21,3,0)
demographic data to be sent to the AAC.
"^DD",798,798,4,23,0)
^^12^12^3060203^
"^DD",798,798,4,23,1,0)
During the registry update, demographic fields of each
"^DD",798,798,4,23,2,0)
record of the ROR PATIENT file (#798.4) are compared
"^DD",798,798,4,23,3,0)
with corresponding fields of the PATIENT file (#2).
"^DD",798,798,4,23,4,0)
 
"^DD",798,798,4,23,5,0)
If any of the fields have different values, the 
"^DD",798,798,4,23,6,0)
internal value of 1 is assigned to the UPDATE
"^DD",798,798,4,23,7,0)
DEMOGRAPHICS field of all active patient records in 
"^DD",798,798,4,23,8,0)
local registries. As a result, demographic data is
"^DD",798,798,4,23,9,0)
transmitted to the national registries.
"^DD",798,798,4,23,10,0)
 
"^DD",798,798,4,23,11,0)
After acknowledgement of the successful processing of
"^DD",798,798,4,23,12,0)
transmitted data, the value of this field is deleted.
"^DD",798,798,4,"DT")
3051129
"^DD",798,798,4.1,0)
DEMOGRAPHICS UPDATED^D^^0;8^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798,4.1,8.5)
@
"^DD",798,798,4.1,9)
@
"^DD",798,798,4.1,20,0)
^.3LA^1^1
"^DD",798,798,4.1,20,1,0)
STATE
"^DD",798,798,4.1,21,0)
^^4^4^3030428^
"^DD",798,798,4.1,21,1,0)
The DEMOGRAPHICS UPDATED field stores the 
"^DD",798,798,4.1,21,2,0)
date/time of the last change in the patient's
"^DD",798,798,4.1,21,3,0)
demographic data that was detected by the Clinical
"^DD",798,798,4.1,21,4,0)
Case Registries software.
"^DD",798,798,4.1,23,0)
^^2^2^3060105^
"^DD",798,798,4.1,23,1,0)
This field is populated by the "ADEM" index/trigger
"^DD",798,798,4.1,23,2,0)
associated with the UPDATE DEMOGRAPHICS field (4).
"^DD",798,798,4.1,"DT")
3030417
"^DD",798,798,5,0)
UPDATE LOCAL REGISTRY DATA^S^0:NO;1:YES;^0;7^Q
"^DD",798,798,5,1,0)
^.1^^0
"^DD",798,798,5,5,1,0)
798^3^1
"^DD",798,798,5,20,0)
^.3LA^1^1
"^DD",798,798,5,20,1,0)
STATE
"^DD",798,798,5,21,0)
^^4^4^3060105^
"^DD",798,798,5,21,1,0)
Usually, you should not edit this field. Set the
"^DD",798,798,5,21,2,0)
value of this field to "YES" if you have changed
"^DD",798,798,5,21,3,0)
any local registry data of the patient and want 
"^DD",798,798,5,21,4,0)
this data to be sent to the AAC.
"^DD",798,798,5,23,0)
^^8^8^3060105^
"^DD",798,798,5,23,1,0)
Any changes of local registry data result in assignment
"^DD",798,798,5,23,2,0)
of 1 as an internal value of the UPDATE LOCAL REGISTRY
"^DD",798,798,5,23,3,0)
DATA field (by registry update process or remote
"^DD",798,798,5,23,4,0)
procedures). This is the indication to transmit local
"^DD",798,798,5,23,5,0)
data to the national registry.
"^DD",798,798,5,23,6,0)
 
"^DD",798,798,5,23,7,0)
After acknowledgement of the successful processing of
"^DD",798,798,5,23,8,0)
transmitted data, the value of this field is deleted.
"^DD",798,798,5,"DT")
3051129
"^DD",798,798,5.1,0)
LOCAL DATA UPDATED^D^^0;9^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798,5.1,8.5)
@
"^DD",798,798,5.1,9)
@
"^DD",798,798,5.1,20,0)
^.3LA^1^1
"^DD",798,798,5.1,20,1,0)
STATE
"^DD",798,798,5.1,21,0)
^^3^3^3030428^
"^DD",798,798,5.1,21,1,0)
The LOCAL DATA UPDATED field stores the date/time
"^DD",798,798,5.1,21,2,0)
of the last change in the patient's local registry
"^DD",798,798,5.1,21,3,0)
data.
"^DD",798,798,5.1,23,0)
^^3^3^3060105^
"^DD",798,798,5.1,23,1,0)
This field is populated by the "ALOC" index/trigger
"^DD",798,798,5.1,23,2,0)
associated with the UPDATE LOCAL REGISTRY DATA field
"^DD",798,798,5.1,23,3,0)
(5).
"^DD",798,798,5.1,"DT")
3030417
"^DD",798,798,6,0)
DATE DELETED^D^^0;11^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798,6,8.5)
@
"^DD",798,798,6,9)
@
"^DD",798,798,6,20,0)
^.3LA^1^1
"^DD",798,798,6,20,1,0)
STATE
"^DD",798,798,6,21,0)
^^4^4^3060105^
"^DD",798,798,6,21,1,0)
Trigger associated with the STATUS field (3)
"^DD",798,798,6,21,2,0)
automatically populates this field with the
"^DD",798,798,6,21,3,0)
current date and time when the patient is deleted
"^DD",798,798,6,21,4,0)
from the registry.
"^DD",798,798,6,"DT")
3050630
"^DD",798,798,6.1,0)
DELETED BY^P200'^VA(200,^0;12^Q
"^DD",798,798,6.1,8.5)
@
"^DD",798,798,6.1,9)
@
"^DD",798,798,6.1,20,0)
^.3LA^1^1
"^DD",798,798,6.1,20,1,0)
STATE
"^DD",798,798,6.1,21,0)
^^4^4^3060203^
"^DD",798,798,6.1,21,1,0)
Trigger associated with the STATUS field (3)
"^DD",798,798,6.1,21,2,0)
automatically populates this field with a pointer
"^DD",798,798,6.1,21,3,0)
to the record of the user who deleted the patient
"^DD",798,798,6.1,21,4,0)
from the registry.
"^DD",798,798,6.1,"DT")
3050630
"^DD",798,798,8,0)
ACTIVE^CJ1,0^^ ; ^S X=$$ACTIVE^RORDD(D0)
"^DD",798,798,8,9)
^
"^DD",798,798,8,9.01)

"^DD",798,798,8,9.1)
S X=$$ACTIVE^RORDD(D0)
"^DD",798,798,8,20,0)
^.3LA^1^1
"^DD",798,798,8,20,1,0)
STATE
"^DD",798,798,8,21,0)
^.001^3^3^3050630^^^
"^DD",798,798,8,21,1,0)
This is a computed field that indicates if the 
"^DD",798,798,8,21,2,0)
patient's record in the registry is active and 
"^DD",798,798,8,21,3,0)
should be considered by the software.
"^DD",798,798,8,23,0)
^^4^4^3060203^
"^DD",798,798,8,23,1,0)
Pending records and records marked for deletion are 
"^DD",798,798,8,23,2,0)
considered inactive and are ignored (except in some 
"^DD",798,798,8,23,3,0)
special cases like confirming a pending patient, list 
"^DD",798,798,8,23,4,0)
of pending patients, etc.).
"^DD",798,798,8,"DT")
3050426
"^DD",798,798,9.1,0)
DATA ACKNOWLEDGED UNTIL^D^^2;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798,9.1,20,0)
^.3LA^1^1
"^DD",798,798,9.1,20,1,0)
STATE
"^DD",798,798,9.1,21,0)
^^3^3^3060203^
"^DD",798,798,9.1,21,1,0)
The DATA ACKNOWLEDGED UNTIL field contains a date
"^DD",798,798,9.1,21,2,0)
that the patient data has been extracted up to and
"^DD",798,798,9.1,21,3,0)
successfully transmitted.
"^DD",798,798,9.1,23,0)
^.001^10^10^3060203^^
"^DD",798,798,9.1,23,1,0)
A regular data extraction for the patient in the 
"^DD",798,798,9.1,23,2,0)
registry starts from this date.
"^DD",798,798,9.1,23,3,0)
 
"^DD",798,798,9.1,23,4,0)
This field is empty for the patients added by the 
"^DD",798,798,9.1,23,5,0)
nightly task.
"^DD",798,798,9.1,23,6,0)
 
"^DD",798,798,9.1,23,7,0)
The nightly task checks status of the last HL7 batches 
"^DD",798,798,9.1,23,8,0)
and copies the value of the DATA EXTRACTED UNTIL field
"^DD",798,798,9.1,23,9,0)
into this field for the patients whose data was
"^DD",798,798,9.1,23,10,0)
included in the successfully transmitted batches.
"^DD",798,798,9.1,"DT")
3010830
"^DD",798,798,9.2,0)
DATA EXTRACTED UNTIL^D^^2;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798,9.2,20,0)
^.3LA^1^1
"^DD",798,798,9.2,20,1,0)
STATE
"^DD",798,798,9.2,21,0)
^^3^3^3060203^
"^DD",798,798,9.2,21,1,0)
This field contains a date that registry data of 
"^DD",798,798,9.2,21,2,0)
the patient has been extracted up to. Actual
"^DD",798,798,9.2,21,3,0)
transmission of this data is not confirmed.
"^DD",798,798,9.2,23,0)
^^7^7^3060203^
"^DD",798,798,9.2,23,1,0)
The field is automatically populated by the regular
"^DD",798,798,9.2,23,2,0)
data extraction process if the data is extracted
"^DD",798,798,9.2,23,3,0)
successfully.
"^DD",798,798,9.2,23,4,0)
 
"^DD",798,798,9.2,23,5,0)
The nightly task copies the value of this field into
"^DD",798,798,9.2,23,6,0)
the DATA ACKNOWLEDGED UNTIL field upon verification of
"^DD",798,798,9.2,23,7,0)
the transmission status of the corresponding HL7 batch.
"^DD",798,798,9.2,"DT")
3010830
"^DD",798,798,10,0)
MESSAGE ID^FX^^2;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!(X'?1.E1"-"1.N) X
"^DD",798,798,10,1,0)
^.1
"^DD",798,798,10,1,1,0)
798^AM
"^DD",798,798,10,1,1,1)
S ^RORDATA(798,"AM",$E(X,1,30),DA)=""
"^DD",798,798,10,1,1,2)
K ^RORDATA(798,"AM",$E(X,1,30),DA)
"^DD",798,798,10,1,1,3)
Do not delete!
"^DD",798,798,10,1,1,"%D",0)
^^5^5^3060203^
"^DD",798,798,10,1,1,"%D",1,0)
The cross-reference allows the software to find
"^DD",798,798,10,1,1,"%D",2,0)
either a registry record (using the ID of the HL7
"^DD",798,798,10,1,1,"%D",3,0)
message sent to the national registry) or all
"^DD",798,798,10,1,1,"%D",4,0)
registry records included in the particular batch
"^DD",798,798,10,1,1,"%D",5,0)
(using partial match).
"^DD",798,798,10,1,1,"DT")
3010824
"^DD",798,798,10,3)
The unique ID of the latest HL7 message (1-20 characters).
"^DD",798,798,10,8.5)
@
"^DD",798,798,10,9)
@
"^DD",798,798,10,20,0)
^.3LA^1^1
"^DD",798,798,10,20,1,0)
HL7
"^DD",798,798,10,21,0)
^^10^10^3050503^
"^DD",798,798,10,21,1,0)
The MESSAGE ID field contains the identifier of 
"^DD",798,798,10,21,2,0)
latest individual HL7 message created for this
"^DD",798,798,10,21,3,0)
registry record.
"^DD",798,798,10,21,4,0)
 
"^DD",798,798,10,21,5,0)
Value of this field should have the following
"^DD",798,798,10,21,6,0)
format: BatchID-N, where BatchID is the identifier
"^DD",798,798,10,21,7,0)
of the HL7 batch message (see the INTERNAL BATCH
"^DD",798,798,10,21,8,0)
ID field of the LAST BATCH CONTROL ID multiple of
"^DD",798,798,10,21,9,0)
the ROR REGISTRY PARAMETERS file), and N is the
"^DD",798,798,10,21,10,0)
sequential number of the message in the batch.
"^DD",798,798,10,23,0)
^^9^9^3060105^
"^DD",798,798,10,23,1,0)
This field is automatically populated by the regular
"^DD",798,798,10,23,2,0)
data extraction process when the individual message is 
"^DD",798,798,10,23,3,0)
generated.
"^DD",798,798,10,23,4,0)
 
"^DD",798,798,10,23,5,0)
If the sequential number of the message in the batch is
"^DD",798,798,10,23,6,0)
zero, then the data for this patient was not included
"^DD",798,798,10,23,7,0)
in this batch. This "fake" message ID is assigned in 
"^DD",798,798,10,23,8,0)
order to correctly update the DATA EXTRACTED UNTIL and
"^DD",798,798,10,23,9,0)
DATA ACKNOWLEDGED UNTIL fields.
"^DD",798,798,10,"DT")
3011005
"^DD",798,798,11,0)
DON'T SEND^S^0:NO;1:YES;^2;4^Q
"^DD",798,798,11,20,0)
^.3LA^1^1
"^DD",798,798,11,20,1,0)
ENTRY
"^DD",798,798,11,21,0)
^^3^3^3060105^
"^DD",798,798,11,21,1,0)
Set this field to "YES" if you do not want any 
"^DD",798,798,11,21,2,0)
data to be sent to the national registry for this
"^DD",798,798,11,21,3,0)
record.
"^DD",798,798,11,23,0)
^^6^6^3060105^
"^DD",798,798,11,23,1,0)
Usually, this field is populated only automatically by
"^DD",798,798,11,23,2,0)
the registry update processing if a patient is defined
"^DD",798,798,11,23,3,0)
in the PATIENT file as a "test patient" (internal value
"^DD",798,798,11,23,4,0)
of the TEST PATIENT INDICATOR field equals to 1).
"^DD",798,798,11,23,5,0)
 
"^DD",798,798,11,23,6,0)
Pending registry records also have 1 in this field.
"^DD",798,798,11,"DT")
3010919
"^DD",798,798,12,0)
PENDING PATIENT COMMENT^F^^3;1^K:$L(X)>100!($L(X)<1) X
"^DD",798,798,12,3)
Answer must be 1-100 characters in length.
"^DD",798,798,12,21,0)
^^2^2^3090521^
"^DD",798,798,12,21,1,0)
This is any user input concerning
"^DD",798,798,12,21,2,0)
a patient who hasn't been confirmed into a registry.
"^DD",798,798,12,"DT")
3090521
"^DD",798,798,20,0)
LOCAL FIELD^798.02P^^20;0
"^DD",798,798,20,20,0)
^.3LA^1^1
"^DD",798,798,20,20,1,0)
ENTRY
"^DD",798,798,20,21,0)
^^3^3^3050525^
"^DD",798,798,20,21,1,0)
The LOCAL FIELD multiple contains a list of local 
"^DD",798,798,20,21,2,0)
field values for the registry patient along with
"^DD",798,798,20,21,3,0)
the corresponding dates and comments.
"^DD",798,798.01,0)
SELECTION RULE SUB-FIELD^^2^3
"^DD",798,798.01,0,"DT")
3050802
"^DD",798,798.01,0,"IX","AD",798.01,1)

"^DD",798,798.01,0,"IX","B",798.01,.01)

"^DD",798,798.01,0,"NM","SELECTION RULE")

"^DD",798,798.01,0,"UP")
798
"^DD",798,798.01,.01,0)
SELECTION RULE^MP798.2'^ROR(798.2,^0;1^Q
"^DD",798,798.01,.01,1,0)
^.1
"^DD",798,798.01,.01,1,1,0)
798.01^B
"^DD",798,798.01,.01,1,1,1)
S ^RORDATA(798,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",798,798.01,.01,1,1,2)
K ^RORDATA(798,DA(1),1,"B",$E(X,1,30),DA)
"^DD",798,798.01,.01,1,1,3)
Do not delete!
"^DD",798,798.01,.01,8.5)
@
"^DD",798,798.01,.01,9)
@
"^DD",798,798.01,.01,21,0)
^^2^2^3060203^
"^DD",798,798.01,.01,21,1,0)
This field identifies the selection rule that 
"^DD",798,798.01,.01,21,2,0)
caused addition of the patient to the registry.
"^DD",798,798.01,.01,"DT")
3011009
"^DD",798,798.01,1,0)
DATE^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",798,798.01,1,1,0)
^.1
"^DD",798,798.01,1,1,1,0)
798.01^AD
"^DD",798,798.01,1,1,1,1)
S ^RORDATA(798,DA(1),1,"AD",$E(X,1,30),DA)=""
"^DD",798,798.01,1,1,1,2)
K ^RORDATA(798,DA(1),1,"AD",$E(X,1,30),DA)
"^DD",798,798.01,1,1,1,3)
Do not delete!
"^DD",798,798.01,1,1,1,"DT")
3000426
"^DD",798,798.01,1,8.5)
@
"^DD",798,798.01,1,9)
@
"^DD",798,798.01,1,21,0)
^.001^2^2^3050802^^
"^DD",798,798.01,1,21,1,0)
The DATE field contains the date when the patient
"^DD",798,798.01,1,21,2,0)
passed the rule for the first time.
"^DD",798,798.01,1,"DT")
3000426
"^DD",798,798.01,2,0)
LOCATION^P4'^DIC(4,^0;3^Q
"^DD",798,798.01,2,8.5)
@
"^DD",798,798.01,2,9)
@
"^DD",798,798.01,2,21,0)
^^1^1^3050802^
"^DD",798,798.01,2,21,1,0)
Location where the selection rule was triggered.
"^DD",798,798.01,2,"DT")
3050802
"^DD",798,798.02,0)
LOCAL FIELD SUB-FIELD^^1^3
"^DD",798,798.02,0,"DT")
3050812
"^DD",798,798.02,0,"NM","LOCAL FIELD")

"^DD",798,798.02,0,"UP")
798
"^DD",798,798.02,.01,0)
LOCAL FIELD^M*P799.53'X^ROR(799.53,^0;1^S Y=$P($G(^RORDATA(798,DA,0)),U,2),DIC("S")=$S(Y>0:"I $P($G(^(0)),U,3)="_Y,1:"Q") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798,798.02,.01,1,0)
^.1
"^DD",798,798.02,.01,1,1,0)
798^ALF
"^DD",798,798.02,.01,1,1,1)
S ^RORDATA(798,"ALF",$E(X,1,30),DA(1),DA)=""
"^DD",798,798.02,.01,1,1,2)
K ^RORDATA(798,"ALF",$E(X,1,30),DA(1),DA)
"^DD",798,798.02,.01,1,1,3)
Do not delete!
"^DD",798,798.02,.01,1,1,"DT")
3050811
"^DD",798,798.02,.01,12)
Only registry-specific records can be selected.
"^DD",798,798.02,.01,12.1)
S DIC("S")="I $P(^(0),U,3)="_$P($G(^RORDATA(798,DA,0)),U,2)
"^DD",798,798.02,.01,21,0)
^^3^3^3060203^
"^DD",798,798.02,.01,21,1,0)
This field stores a pointer to the local field
"^DD",798,798.02,.01,21,2,0)
definition. You can only select from the local
"^DD",798,798.02,.01,21,3,0)
fields associated with the registry.
"^DD",798,798.02,.01,"DT")
3050818
"^DD",798,798.02,.02,0)
DATE^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",798,798.02,.02,21,0)
^^2^2^3050513^
"^DD",798,798.02,.02,21,1,0)
This field stores the date associated with the
"^DD",798,798.02,.02,21,2,0)
registry-specific local field value.
"^DD",798,798.02,.02,"DT")
3050513
"^DD",798,798.02,1,0)
COMMENT^F^^1;E1,250^K:$L(X)>200!($L(X)<1) X
"^DD",798,798.02,1,3)
Answer must be 1-200 characters in length.
"^DD",798,798.02,1,21,0)
^.001^2^2^3050812^^
"^DD",798,798.02,1,21,1,0)
This field stores the comment associated with the 
"^DD",798,798.02,1,21,2,0)
registry-specific local field value.
"^DD",798,798.02,1,"DT")
3050812
"^DD",799.34,799.34,0)
FIELD^^12^10
"^DD",799.34,799.34,0,"DDA")
N
"^DD",799.34,799.34,0,"DT")
3051121
"^DD",799.34,799.34,0,"IX","B",799.34,.01)

"^DD",799.34,799.34,0,"NM","ROR REPORT PARAMETERS")

"^DD",799.34,799.34,0,"PT",798.12,.01)

"^DD",799.34,799.34,0,"PT",798.8,.04)

"^DD",799.34,799.34,0,"VRPK")
ROR
"^DD",799.34,799.34,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",799.34,799.34,.01,1,0)
^.1
"^DD",799.34,799.34,.01,1,1,0)
799.34^B
"^DD",799.34,799.34,.01,1,1,1)
S ^ROR(799.34,"B",$E(X,1,30),DA)=""
"^DD",799.34,799.34,.01,1,1,2)
K ^ROR(799.34,"B",$E(X,1,30),DA)
"^DD",799.34,799.34,.01,1,1,3)
Do not delete!
"^DD",799.34,799.34,.01,3)
Enter the report name (3-60 characters).
"^DD",799.34,799.34,.01,8.5)
@
"^DD",799.34,799.34,.01,9)
@
"^DD",799.34,799.34,.01,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.01,21,3,0)
 
"^DD",799.34,799.34,.01,21,4,0)
The name of the report stored in the NAME field is
"^DD",799.34,799.34,.01,21,5,0)
displayed in the Reports sub-menu of the GUI.
"^DD",799.34,799.34,.01,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.01,"DT")
3021126
"^DD",799.34,799.34,.02,0)
BACKGROUND PROCESSING?^SX^0:NO;1:YES;^0;2^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,8.5)
@
"^DD",799.34,799.34,.02,9)
@
"^DD",799.34,799.34,.02,21,0)
^^6^6^3030506^
"^DD",799.34,799.34,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.02,21,3,0)
 
"^DD",799.34,799.34,.02,21,4,0)
If the BACKGROUND PROCESSING? field is set to
"^DD",799.34,799.34,.02,21,5,0)
'YES' then the report will be scheduled to run as
"^DD",799.34,799.34,.02,21,6,0)
a background task.
"^DD",799.34,799.34,.02,23,0)
^^1^1^3030506^
"^DD",799.34,799.34,.02,23,1,0)
Only background processing is currently implemented.
"^DD",799.34,799.34,.02,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,"DT")
3021127
"^DD",799.34,799.34,.03,0)
SHARED TEMPLATES^SX^0:NO;1:YES;^0;3^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,8.5)
@
"^DD",799.34,799.34,.03,9)
@
"^DD",799.34,799.34,.03,21,0)
^^7^7^3051121^
"^DD",799.34,799.34,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.03,21,3,0)
 
"^DD",799.34,799.34,.03,21,4,0)
If this field is set to 'YES', then report 
"^DD",799.34,799.34,.03,21,5,0)
parameter templates are shared between all 
"^DD",799.34,799.34,.03,21,6,0)
registries. Otherwise, the templates are 
"^DD",799.34,799.34,.03,21,7,0)
registry-specific.
"^DD",799.34,799.34,.03,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,"DT")
3051121
"^DD",799.34,799.34,.04,0)
CODE^RNJ3,0X^^0;4^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",799.34,799.34,.04,3)
Enter the unique report code (between 1 and 999, 0 Decimal Digits).
"^DD",799.34,799.34,.04,8.5)
@
"^DD",799.34,799.34,.04,9)
@
"^DD",799.34,799.34,.04,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.04,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.04,21,3,0)
 
"^DD",799.34,799.34,.04,21,4,0)
The CODE field stores the unique code of the
"^DD",799.34,799.34,.04,21,5,0)
report.
"^DD",799.34,799.34,.04,23,0)
^^19^19^3030507^
"^DD",799.34,799.34,.04,23,1,0)
The corresponding XSL templates for the report are 
"^DD",799.34,799.34,.04,23,2,0)
stored in the DIALOG file (#.84). The dialog number 
"^DD",799.34,799.34,.04,23,3,0)
of the template has the following structure:
"^DD",799.34,799.34,.04,23,4,0)
 
"^DD",799.34,799.34,.04,23,5,0)
 7981CCC.TTT
"^DD",799.34,799.34,.04,23,6,0)
 
"^DD",799.34,799.34,.04,23,7,0)
 'CCC' is the code of the report.
"^DD",799.34,799.34,.04,23,8,0)
 
"^DD",799.34,799.34,.04,23,9,0)
 'TTT' is the type of the template:
"^DD",799.34,799.34,.04,23,10,0)
        001 - HTML Preview,
"^DD",799.34,799.34,.04,23,11,0)
        002 - Delimited Format (CSV),
"^DD",799.34,799.34,.04,23,12,0)
        003 - Printer Output.
"^DD",799.34,799.34,.04,23,13,0)
 
"^DD",799.34,799.34,.04,23,14,0)
For example, the dialog 7981001.001 contains the HTML
"^DD",799.34,799.34,.04,23,15,0)
preview template for the List of Registry Patients
"^DD",799.34,799.34,.04,23,16,0)
(report code: 1).
"^DD",799.34,799.34,.04,23,17,0)
 
"^DD",799.34,799.34,.04,23,18,0)
If no template is defined for the report then the
"^DD",799.34,799.34,.04,23,19,0)
default template from dialog 7981000 is used.
"^DD",799.34,799.34,.04,"DT")
3030401
"^DD",799.34,799.34,.05,0)
DATE OF INACTIVATION^D^^0;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",799.34,799.34,.05,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.05,21,1,0)
If this field has a value, the report will be
"^DD",799.34,799.34,.05,21,2,0)
considered inactive after this date. Use this
"^DD",799.34,799.34,.05,21,3,0)
field to disable unnecessary reports (and hide
"^DD",799.34,799.34,.05,21,4,0)
them from the Report sub-menu of the GUI) instead
"^DD",799.34,799.34,.05,21,5,0)
of deleting them.
"^DD",799.34,799.34,.05,23,0)
^^3^3^3030505^
"^DD",799.34,799.34,.05,23,1,0)
The ROR REPORTS AVAILABLE remote procedure analyzes
"^DD",799.34,799.34,.05,23,2,0)
this field when it loads the list of available reports
"^DD",799.34,799.34,.05,23,3,0)
and skips the inactive ones.
"^DD",799.34,799.34,.05,"DT")
3021126
"^DD",799.34,799.34,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.34,,-1)
"^DD",799.34,799.34,.09,8.5)
@
"^DD",799.34,799.34,.09,9)
@
"^DD",799.34,799.34,.09,21,0)
^^7^7^3030506^
"^DD",799.34,799.34,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.34,799.34,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.34,799.34,.09,21,3,0)
 
"^DD",799.34,799.34,.09,21,4,0)
Reports distributed with the national registries
"^DD",799.34,799.34,.09,21,5,0)
must have this field set to "YES". This prevents
"^DD",799.34,799.34,.09,21,6,0)
local editing of other fields of report
"^DD",799.34,799.34,.09,21,7,0)
definitions.
"^DD",799.34,799.34,.09,"DEL",1,0)
I $$VADEL^RORDD(799.34,,,-1)
"^DD",799.34,799.34,.09,"DT")
3021126
"^DD",799.34,799.34,1,0)
PARAMETER PANELS^FX^^1;E1,250^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>250!($L(X)<1) X
"^DD",799.34,799.34,1,3)
Enter codes of dialog panels separated by commas (1-250 characters).
"^DD",799.34,799.34,1,8.5)
@
"^DD",799.34,799.34,1,9)
@
"^DD",799.34,799.34,1,21,0)
^^7^7^3030507^
"^DD",799.34,799.34,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,1,21,3,0)
 
"^DD",799.34,799.34,1,21,4,0)
The PARAMETER PANELS field stores the list of 
"^DD",799.34,799.34,1,21,5,0)
panel codes separated by commas. The panels are 
"^DD",799.34,799.34,1,21,6,0)
combined by the GUI into the dialog form that is
"^DD",799.34,799.34,1,21,7,0)
used to request values of the report parameters.
"^DD",799.34,799.34,1,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,1,"DT")
3030304
"^DD",799.34,799.34,10.01,0)
REPORT BUILDER^RFX^^10.01;E1,245^Q:$$VAEDT^RORDD(799.34,$G(DA))  Q:$$EP^RORDD(1)
"^DD",799.34,799.34,10.01,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",799.34,799.34,10.01,8.5)
@
"^DD",799.34,799.34,10.01,9)
@
"^DD",799.34,799.34,10.01,21,0)
^.001^6^6^3060106^^
"^DD",799.34,799.34,10.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,10.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,10.01,21,3,0)
 
"^DD",799.34,799.34,10.01,21,4,0)
The REPORT BUILDER field stores a reference to the
"^DD",799.34,799.34,10.01,21,5,0)
function that is used to build the report (the
"^DD",799.34,799.34,10.01,21,6,0)
report builder).
"^DD",799.34,799.34,10.01,23,0)
^^24^24^3060106^
"^DD",799.34,799.34,10.01,23,1,0)
The call-back entry point is called with a single
"^DD",799.34,799.34,10.01,23,2,0)
parameter. The parameter is a reference to a local
"^DD",799.34,799.34,10.01,23,3,0)
variable that contains values of the report parameters.
"^DD",799.34,799.34,10.01,23,4,0)
 
"^DD",799.34,799.34,10.01,23,5,0)
 RORTSK(            Task Number
"^DD",799.34,799.34,10.01,23,6,0)
 
"^DD",799.34,799.34,10.01,23,7,0)
   "EP")            Entry Point ($$TAG^ROUTINE)
"^DD",799.34,799.34,10.01,23,8,0)
 
"^DD",799.34,799.34,10.01,23,9,0)
   "PARAMS",...)    See the CCR Programmer's Reference 
"^DD",799.34,799.34,10.01,23,10,0)
                    Manual for details
"^DD",799.34,799.34,10.01,23,11,0)
 
"^DD",799.34,799.34,10.01,23,12,0)
   "REGIEN")        Registry IEN
"^DD",799.34,799.34,10.01,23,13,0)
 
"^DD",799.34,799.34,10.01,23,14,0)
   "TYPE")          Type of the Task
"^DD",799.34,799.34,10.01,23,15,0)
   "REPORT")        Code of the Report
"^DD",799.34,799.34,10.01,23,16,0)
   "SCHCODE")       Rescheduling Code
"^DD",799.34,799.34,10.01,23,17,0)
 
"^DD",799.34,799.34,10.01,23,18,0)
The function must return 0 in the case of successful
"^DD",799.34,799.34,10.01,23,19,0)
completion. Otherwise, a negative error code must be 
"^DD",799.34,799.34,10.01,23,20,0)
returned.
"^DD",799.34,799.34,10.01,23,21,0)
 
"^DD",799.34,799.34,10.01,23,22,0)
See description of the ROR REPORT SCHEDULE remote
"^DD",799.34,799.34,10.01,23,23,0)
procedure and source code of the RORTSK01 routine for
"^DD",799.34,799.34,10.01,23,24,0)
more details.
"^DD",799.34,799.34,10.01,"DT")
3021126
"^DD",799.34,799.34,11,0)
DEFAULT PARAMETERS^799.3411^^11;0
"^DD",799.34,799.34,11,9)
@
"^DD",799.34,799.34,11,21,0)
^.001^2^2^3040124^^
"^DD",799.34,799.34,11,21,1,0)
This field stores the default values for the 
"^DD",799.34,799.34,11,21,2,0)
report parameters (in the NAME=VALUE format).
"^DD",799.34,799.34,12,0)
DEFAULT SORTING^799.3412^^12;0
"^DD",799.34,799.34,12,9)
@
"^DD",799.34,799.34,12,21,0)
^^2^2^3040121^
"^DD",799.34,799.34,12,21,1,0)
This field stores the default sorting modes for
"^DD",799.34,799.34,12,21,2,0)
the report (in the TABLE=FIELD format).
"^DD",799.34,799.3411,0)
DEFAULT PARAMETERS SUB-FIELD^^.01^1
"^DD",799.34,799.3411,0,"DT")
3030918
"^DD",799.34,799.3411,0,"NM","DEFAULT PARAMETERS")

"^DD",799.34,799.3411,0,"UP")
799.34
"^DD",799.34,799.3411,.01,0)
DEFAULT PARAMETERS^WL^^0;1^Q
"^DD",799.34,799.3411,.01,8.5)
@
"^DD",799.34,799.3411,.01,9)
@
"^DD",799.34,799.3411,.01,"DT")
3030918
"^DD",799.34,799.3412,0)
DEFAULT SORTING SUB-FIELD^^.01^1
"^DD",799.34,799.3412,0,"DT")
3031103
"^DD",799.34,799.3412,0,"NM","DEFAULT SORTING")

"^DD",799.34,799.3412,0,"UP")
799.34
"^DD",799.34,799.3412,.01,0)
DEFAULT SORTING^WL^^0;1^Q
"^DD",799.34,799.3412,.01,8.5)
@
"^DD",799.34,799.3412,.01,9)
@
"^DD",799.34,799.3412,.01,"DT")
3031103
"^DIC",798,798,0)
ROR REGISTRY RECORD^798
"^DIC",798,798,0,"GL")
^RORDATA(798,
"^DIC",798,798,"%",0)
^1.005^^0
"^DIC",798,798,"%D",0)
^^32^32^3060203^
"^DIC",798,798,"%D",1,0)
The ROR REGISTRY RECORD file contains records of
"^DIC",798,798,"%D",2,0)
local registries. Each record associates a patient
"^DIC",798,798,"%D",3,0)
with a registry and contains registry-specific and
"^DIC",798,798,"%D",4,0)
additional service information (when the patient 
"^DIC",798,798,"%D",5,0)
was added to the registry, if they were confirmed,
"^DIC",798,798,"%D",6,0)
etc).
"^DIC",798,798,"%D",7,0)
 
"^DIC",798,798,"%D",8,0)
Records of the file are uniquely identified by 
"^DIC",798,798,"%D",9,0)
the patient and the registry (the "A" primary key
"^DIC",798,798,"%D",10,0)
and the uniqueness index "KEY" are used for that
"^DIC",798,798,"%D",11,0)
purpose).
"^DIC",798,798,"%D",12,0)
 
"^DIC",798,798,"%D",13,0)
When the record of this file is deleted, the logic
"^DIC",798,798,"%D",14,0)
of the ADELETE cross-reference tries to delete the
"^DIC",798,798,"%D",15,0)
associated records from the ROR HIV RECORD 
"^DIC",798,798,"%D",16,0)
(#799.4), ROR PATIENT (#798.4), and ROR PATIENT
"^DIC",798,798,"%D",17,0)
EVENTS (#798.3) files.
"^DIC",798,798,"%D",18,0)
 
"^DIC",798,798,"%D",19,0)
A permanent screen (the ^DD(798,0,"SCR") node) 
"^DIC",798,798,"%D",20,0)
restricts access to records of this file. Users
"^DIC",798,798,"%D",21,0)
can only access records of those registries that
"^DIC",798,798,"%D",22,0)
they have the security key(s) for. Users with the
"^DIC",798,798,"%D",23,0)
ROR VA IRM security key can access all records of
"^DIC",798,798,"%D",24,0)
the file.
"^DIC",798,798,"%D",25,0)
 
"^DIC",798,798,"%D",26,0)
If you want the changes in the security keys
"^DIC",798,798,"%D",27,0)
allocation to have an effect immediately, you 
"^DIC",798,798,"%D",28,0)
should rebuild the "ACL" cross-reference of the
"^DIC",798,798,"%D",29,0)
.01 field of the SECURITY KEY multiple of the ROR
"^DIC",798,798,"%D",30,0)
REGISTRY PARAMETERS file (#798.1). See the
"^DIC",798,798,"%D",31,0)
description of the cross-reference for more
"^DIC",798,798,"%D",32,0)
details.
"^DIC",798,"B","ROR REGISTRY RECORD",798)

"^DIC",799.34,799.34,0)
ROR REPORT PARAMETERS^799.34
"^DIC",799.34,799.34,0,"GL")
^ROR(799.34,
"^DIC",799.34,799.34,"%",0)
^1.005^^0
"^DIC",799.34,799.34,"%D",0)
^^7^7^3030814^^
"^DIC",799.34,799.34,"%D",1,0)
The ROR REPORT PARAMETERS file stores the report
"^DIC",799.34,799.34,"%D",2,0)
definitions that are used by the ROR REPORT 
"^DIC",799.34,799.34,"%D",3,0)
SCHEDULE remote procedure to schedule the reports.
"^DIC",799.34,799.34,"%D",4,0)
 
"^DIC",799.34,799.34,"%D",5,0)
Records of the file are uniquely identified by the
"^DIC",799.34,799.34,"%D",6,0)
report code (the "A" primary key and the
"^DIC",799.34,799.34,"%D",7,0)
uniqueness index "KEY" are used for that purpose).
"^DIC",799.34,"B","ROR REPORT PARAMETERS",799.34)

"BLD",7567,6)
^8
**END**
**END**
