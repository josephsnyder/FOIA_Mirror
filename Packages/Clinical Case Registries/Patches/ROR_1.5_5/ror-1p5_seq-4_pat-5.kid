Released ROR*1.5*5 SEQ #4
Extracted from mail message
**KIDS**:ROR*1.5*5^

**INSTALL NAME**
ROR*1.5*5
"BLD",6834,0)
ROR*1.5*5^CLINICAL CASE REGISTRIES^0^3071220^y
"BLD",6834,1,0)
^^1^1^3071206^
"BLD",6834,1,1,0)
CORRECT MISSING OUTPATIENT PROCEDURES AND ADD MEDICATIONS TO ROR DRUG FILE
"BLD",6834,4,0)
^9.64PA^799.6^1
"BLD",6834,4,799.6,0)
799.6
"BLD",6834,4,799.6,222)
n^n^f^^y^^y^m^n
"BLD",6834,4,799.6,223)

"BLD",6834,4,799.6,224)
I $E($P($G(^RORDATA(799.6,Y,0)),U),1,21)="ROR-1.5-05-OUTPATIENT"
"BLD",6834,4,"B",799.6,799.6)

"BLD",6834,6.3)
10
"BLD",6834,"ABPKG")
n
"BLD",6834,"INIT")
POST^RORP005
"BLD",6834,"KRN",0)
^9.67PA^8989.52^19
"BLD",6834,"KRN",.4,0)
.4
"BLD",6834,"KRN",.401,0)
.401
"BLD",6834,"KRN",.402,0)
.402
"BLD",6834,"KRN",.403,0)
.403
"BLD",6834,"KRN",.5,0)
.5
"BLD",6834,"KRN",.84,0)
.84
"BLD",6834,"KRN",3.6,0)
3.6
"BLD",6834,"KRN",3.8,0)
3.8
"BLD",6834,"KRN",9.2,0)
9.2
"BLD",6834,"KRN",9.8,0)
9.8
"BLD",6834,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6834,"KRN",9.8,"NM",1,0)
RORHL09^^0^B46542068
"BLD",6834,"KRN",9.8,"NM",2,0)
RORP005^^0^B70602
"BLD",6834,"KRN",9.8,"NM","B","RORHL09",1)

"BLD",6834,"KRN",9.8,"NM","B","RORP005",2)

"BLD",6834,"KRN",19,0)
19
"BLD",6834,"KRN",19.1,0)
19.1
"BLD",6834,"KRN",101,0)
101
"BLD",6834,"KRN",409.61,0)
409.61
"BLD",6834,"KRN",771,0)
771
"BLD",6834,"KRN",870,0)
870
"BLD",6834,"KRN",8989.51,0)
8989.51
"BLD",6834,"KRN",8989.52,0)
8989.52
"BLD",6834,"KRN",8994,0)
8994
"BLD",6834,"KRN","B",.4,.4)

"BLD",6834,"KRN","B",.401,.401)

"BLD",6834,"KRN","B",.402,.402)

"BLD",6834,"KRN","B",.403,.403)

"BLD",6834,"KRN","B",.5,.5)

"BLD",6834,"KRN","B",.84,.84)

"BLD",6834,"KRN","B",3.6,3.6)

"BLD",6834,"KRN","B",3.8,3.8)

"BLD",6834,"KRN","B",9.2,9.2)

"BLD",6834,"KRN","B",9.8,9.8)

"BLD",6834,"KRN","B",19,19)

"BLD",6834,"KRN","B",19.1,19.1)

"BLD",6834,"KRN","B",101,101)

"BLD",6834,"KRN","B",409.61,409.61)

"BLD",6834,"KRN","B",771,771)

"BLD",6834,"KRN","B",870,870)

"BLD",6834,"KRN","B",8989.51,8989.51)

"BLD",6834,"KRN","B",8989.52,8989.52)

"BLD",6834,"KRN","B",8994,8994)

"BLD",6834,"PRET")
PRET^RORP005
"BLD",6834,"QUES",0)
^9.62^^
"BLD",6834,"REQB",0)
^9.611^2^2
"BLD",6834,"REQB",1,0)
ROR*1.5*1^1
"BLD",6834,"REQB",2,0)
PSN*4.0*153^1
"BLD",6834,"REQB","B","PSN*4.0*153",2)

"BLD",6834,"REQB","B","ROR*1.5*1",1)

"DATA",799.6,6,0)
ROR-1.5-05-OUTPATIENT^1^2850101^^^5^3071107^^1
"DATA",799.6,6,1,0)
^799.61P^1^1
"DATA",799.6,6,1,1,0)
2
"DATA",799.6,6,3,0)
^799.63^2^2
"DATA",799.6,6,3,1,0)
VA HEPC
"DATA",799.6,6,3,2,0)
VA HIV
"FIA",799.6)
ROR HISTORICAL DATA EXTRACTION
"FIA",799.6,0)
^RORDATA(799.6,
"FIA",799.6,0,0)
799.6
"FIA",799.6,0,1)
n^n^f^^y^^y^m^n
"FIA",799.6,0,10)

"FIA",799.6,0,11)
I $E($P($G(^RORDATA(799.6,Y,0)),U),1,21)="ROR-1.5-05-OUTPATIENT"
"FIA",799.6,0,"RLRO")

"FIA",799.6,0,"VR")
1.5^ROR
"FIA",799.6,799.6)
0
"FIA",799.6,799.61)
0
"FIA",799.6,799.63)
0
"FIA",799.6,799.64)
0
"FIA",799.6,799.641)
0
"INIT")
POST^RORP005
"IX",799.6,799.6,"ADNAUTO",0)
799.6^ADNAUTO^Activation Date & Name for automatic backpulls.^R^^R^IR^I^799.6^^^^^S
"IX",799.6,799.6,"ADNAUTO",.1,0)
^^6^6^3051031^
"IX",799.6,799.6,"ADNAUTO",.1,1,0)
This index references parameters of those
"IX",799.6,799.6,"ADNAUTO",.1,2,0)
automatic historical data extractions (TYPE =
"IX",799.6,799.6,"ADNAUTO",.1,3,0)
"Auto (HL7 messages)") that are active (ACTIVATION
"IX",799.6,799.6,"ADNAUTO",.1,4,0)
DATE > 0) but have not been completed yet (some
"IX",799.6,799.6,"ADNAUTO",.1,5,0)
records of the REGISTRY NAME multiple have no
"IX",799.6,799.6,"ADNAUTO",.1,6,0)
value in the COMPLETION DATE/TIME field).
"IX",799.6,799.6,"ADNAUTO",1)
S ^RORDATA(799.6,"ADNAUTO",X(1),$E(X(2),1,30),DA)=""
"IX",799.6,799.6,"ADNAUTO",1.4)
S X=(X(3)=1)&(X(4)>0)&($D(^RORDATA(799.6,DA,3,"ANC"))>1)
"IX",799.6,799.6,"ADNAUTO",2)
K ^RORDATA(799.6,"ADNAUTO",X(1),$E(X(2),1,30),DA)
"IX",799.6,799.6,"ADNAUTO",2.5)
K ^RORDATA(799.6,"ADNAUTO")
"IX",799.6,799.6,"ADNAUTO",11.1,0)
^.114IA^4^4
"IX",799.6,799.6,"ADNAUTO",11.1,1,0)
1^F^799.6^.07^^1^F
"IX",799.6,799.6,"ADNAUTO",11.1,2,0)
2^F^799.6^.01^30^2^F
"IX",799.6,799.6,"ADNAUTO",11.1,3,0)
3^F^799.6^.02^^^F
"IX",799.6,799.6,"ADNAUTO",11.1,4,0)
4^F^799.6^.07^^^F
"IX",799.6,799.6,"B",0)
799.6^B^Uniqueness Index for Key 'A' of File #799.6^R^^F^IR^I^799.6^^^^^LS
"IX",799.6,799.6,"B",1)
S ^RORDATA(799.6,"B",X,DA)=""
"IX",799.6,799.6,"B",2)
K ^RORDATA(799.6,"B",X,DA)
"IX",799.6,799.6,"B",2.5)
K ^RORDATA(799.6,"B")
"IX",799.6,799.6,"B",11.1,0)
^.114IA^1^1
"IX",799.6,799.6,"B",11.1,1,0)
1^F^799.6^.01^^1
"IX",799.6,799.61,"B",0)
799.61^B^Uniqueness Index for Key 'A' of Subfile #799.61^R^^F^IR^I^799.61^^^^^LS
"IX",799.6,799.61,"B",1)
S ^RORDATA(799.6,DA(1),1,"B",X,DA)=""
"IX",799.6,799.61,"B",2)
K ^RORDATA(799.6,DA(1),1,"B",X,DA)
"IX",799.6,799.61,"B",2.5)
K ^RORDATA(799.6,DA(1),1,"B")
"IX",799.6,799.61,"B",11.1,0)
^.114IA^1^1
"IX",799.6,799.61,"B",11.1,1,0)
1^F^799.61^.01^^1
"IX",799.6,799.63,"ANC",0)
799.63^ANC^Not completed registries^MU^^R^IR^I^799.63^^^^^S
"IX",799.6,799.63,"ANC",1)
D ANC7996^RORDD01(.DA,X(1),1)
"IX",799.6,799.63,"ANC",1.4)
S X=(X(2)'>0)
"IX",799.6,799.63,"ANC",2)
D ANC7996^RORDD01(.DA,X(1),0)
"IX",799.6,799.63,"ANC",2.5)
K ^RORDATA(799.6,DA(1),3,"ANC")
"IX",799.6,799.63,"ANC",11.1,0)
^.114IA^2^2
"IX",799.6,799.63,"ANC",11.1,1,0)
1^F^799.63^.01^30^1^F
"IX",799.6,799.63,"ANC",11.1,2,0)
2^F^799.63^.02^^^F
"IX",799.6,799.63,"B",0)
799.63^B^Uniqueness Index for Key 'A' of Subfile #799.63^R^^F^IR^I^799.63^^^^^LS
"IX",799.6,799.63,"B",1)
S ^RORDATA(799.6,DA(1),3,"B",X,DA)=""
"IX",799.6,799.63,"B",2)
K ^RORDATA(799.6,DA(1),3,"B",X,DA)
"IX",799.6,799.63,"B",2.5)
K ^RORDATA(799.6,DA(1),3,"B")
"IX",799.6,799.63,"B",11.1,0)
^.114IA^1^1
"IX",799.6,799.63,"B",11.1,1,0)
1^F^799.63^.01^^1
"IX",799.6,799.64,"ANC",0)
799.64^ANC^Not completed tasks^R^^R^IR^I^799.64^^^^^S
"IX",799.6,799.64,"ANC",1)
S ^RORDATA(799.6,DA(1),4,"ANC",X(1),DA)=""
"IX",799.6,799.64,"ANC",1.4)
S X=(X(2)'=3)
"IX",799.6,799.64,"ANC",2)
K ^RORDATA(799.6,DA(1),4,"ANC",X(1),DA)
"IX",799.6,799.64,"ANC",2.5)
K ^RORDATA(799.6,DA(1),4,"ANC")
"IX",799.6,799.64,"ANC",11.1,0)
^.114IA^2^2
"IX",799.6,799.64,"ANC",11.1,1,0)
1^F^799.64^.01^^1^F
"IX",799.6,799.64,"ANC",11.1,1,3)

"IX",799.6,799.64,"ANC",11.1,2,0)
2^F^799.64^.03^^^F
"IX",799.6,799.64,"ANC",11.1,2,3)

"IX",799.6,799.64,"B",0)
799.64^B^Uniqueness Index for Key 'A' of Subfile #799.64^R^^F^IR^I^799.64^^^^^LS
"IX",799.6,799.64,"B",1)
S ^RORDATA(799.6,DA(1),4,"B",X,DA)=""
"IX",799.6,799.64,"B",2)
K ^RORDATA(799.6,DA(1),4,"B",X,DA)
"IX",799.6,799.64,"B",2.5)
K ^RORDATA(799.6,DA(1),4,"B")
"IX",799.6,799.64,"B",11.1,0)
^.114IA^1^1
"IX",799.6,799.64,"B",11.1,1,0)
1^F^799.64^.01^^1
"KEY",799.6,799.6,"A",0)
799.6^A^S^671
"KEY",799.6,799.6,"A",2,0)
^.312IA^1^1
"KEY",799.6,799.6,"A",2,1,0)
.01^799.6^1
"KEY",799.6,799.61,"A",0)
799.61^A^S^686
"KEY",799.6,799.61,"A",2,0)
^.312IA^1^1
"KEY",799.6,799.61,"A",2,1,0)
.01^799.61^1
"KEY",799.6,799.63,"A",0)
799.63^A^S^672
"KEY",799.6,799.63,"A",2,0)
^.312IA^1^1
"KEY",799.6,799.63,"A",2,1,0)
.01^799.63^1
"KEY",799.6,799.64,"A",0)
799.64^A^S^687
"KEY",799.6,799.64,"A",2,0)
^.312IA^1^1
"KEY",799.6,799.64,"A",2,1,0)
.01^799.64^1
"KEYPTR",799.6,799.6,"A")
799.6^B
"KEYPTR",799.6,799.61,"A")
799.61^B
"KEYPTR",799.6,799.63,"A")
799.63^B
"KEYPTR",799.6,799.64,"A")
799.64^B
"MBREQ")
0
"PKG",389,-1)
1^1
"PKG",389,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL CASE REGISTRIES
"PKG",389,20,0)
^9.402P^^
"PKG",389,22,0)
^9.49I^1^1
"PKG",389,22,1,0)
1.5^3060208^3060221^222222227
"PKG",389,22,1,"PAH",1,0)
5^3071220
"PKG",389,22,1,"PAH",1,1,0)
^^1^1^3071220
"PKG",389,22,1,"PAH",1,1,1,0)
CORRECT MISSING OUTPATIENT PROCEDURES AND ADD MEDICATIONS TO ROR DRUG FILE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RORHL09")
0^1^B46542068^B43916632
"RTN","RORHL09",1,0)
RORHL09 ;HOIFO/BH - HL7 OUTPATIENT DATA: PV1,OBR,OBX ; 3/13/06 9:24am
"RTN","RORHL09",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,5**;Feb 17, 2006;Build 10
"RTN","RORHL09",3,0)
 ;
"RTN","RORHL09",4,0)
 ; 11/29/2007 BAY/KAM ROR*1.5*5 Rem Call 218601 Correct Outpatient
"RTN","RORHL09",5,0)
 ;                              CPTs not transmitting to the AAC
"RTN","RORHL09",6,0)
 ;
"RTN","RORHL09",7,0)
 ; This routine uses the following IAs:
"RTN","RORHL09",8,0)
 ;
"RTN","RORHL09",9,0)
 ; #93       Get stop code from the file #44 (controlled)
"RTN","RORHL09",10,0)
 ; #1889     Use of the ENCEVENT^PXKENC API
"RTN","RORHL09",11,0)
 ; #1995     $$CODEC^ICPTCOD (supported)
"RTN","RORHL09",12,0)
 ; #2309     Read access to the 'AA' x-ref in VISIT file (#9000010)
"RTN","RORHL09",13,0)
 ; #3990     $$CODEC^ICDCODE (supported)
"RTN","RORHL09",14,0)
 ; #10060    Read access to the file #200 (supported)
"RTN","RORHL09",15,0)
 ; #2438     Access to the file #40.8 (field #1) (controlled)
"RTN","RORHL09",16,0)
 ;
"RTN","RORHL09",17,0)
 Q
"RTN","RORHL09",18,0)
 ;
"RTN","RORHL09",19,0)
 ;***** PROCESSES DIAGNOSIS CODES
"RTN","RORHL09",20,0)
DIAGS() ;
"RTN","RORHL09",21,0)
 N DIAG,IEN,K5,OID,REC,TMP
"RTN","RORHL09",22,0)
 S OID="OICD9"_RORCS_"Diagnosis"_RORCS_"VA080"
"RTN","RORHL09",23,0)
 S K5=""
"RTN","RORHL09",24,0)
 F  S K5=$O(^TMP("PXKENC",$J,RORIEN,"POV",K5))  Q:K5=""  D
"RTN","RORHL09",25,0)
 . S REC=^TMP("PXKENC",$J,RORIEN,"POV",K5,0)
"RTN","RORHL09",26,0)
 . S IEN=+$P(REC,U)  Q:IEN'>0
"RTN","RORHL09",27,0)
 . ;---
"RTN","RORHL09",28,0)
 . S DIAG=$$CODEC^ICDCODE(IEN)
"RTN","RORHL09",29,0)
 . D:DIAG'<0 SETOBX(OID,DIAG)
"RTN","RORHL09",30,0)
 Q 0
"RTN","RORHL09",31,0)
 ;
"RTN","RORHL09",32,0)
 ;***** OUTPATIENT DATA SEGMENT BUILDER
"RTN","RORHL09",33,0)
 ;
"RTN","RORHL09",34,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",35,0)
 ;
"RTN","RORHL09",36,0)
 ; .DXDTS        Reference to a local variable where the
"RTN","RORHL09",37,0)
 ;               data extraction time frames are stored.
"RTN","RORHL09",38,0)
 ;
"RTN","RORHL09",39,0)
 ; RORTY         Set to either "PV1" or "OBR"
"RTN","RORHL09",40,0)
 ;
"RTN","RORHL09",41,0)
 ; The ^TMP("PXKENC",$J) and ^TMP("RORHL08",$J) global nodes are
"RTN","RORHL09",42,0)
 ; used by this function.
"RTN","RORHL09",43,0)
 ;
"RTN","RORHL09",44,0)
 ; Return Values:
"RTN","RORHL09",45,0)
 ;       <0  Error Code
"RTN","RORHL09",46,0)
 ;        0  Ok
"RTN","RORHL09",47,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",48,0)
 ;
"RTN","RORHL09",49,0)
EN1(RORDFN,DXDTS,RORTY) ;
"RTN","RORHL09",50,0)
 N ERRCNT,PIEN,PV1CNT,RC
"RTN","RORHL09",51,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",52,0)
 ;
"RTN","RORHL09",53,0)
 ;--- PV1 Segments
"RTN","RORHL09",54,0)
 I RORTY="PV1"  K ^TMP("PXKENC",$J),^TMP("RORHL09",$J)  D
"RTN","RORHL09",55,0)
 . N IDX,INVDT,ROREND
"RTN","RORHL09",56,0)
 . S (IDX,PV1CNT)=0
"RTN","RORHL09",57,0)
 . F  S IDX=$O(DXDTS(2,IDX))  Q:IDX'>0  D  Q:RC<0
"RTN","RORHL09",58,0)
 . . S INVDT=9999999-$$FMADD^XLFDT($P(DXDTS(2,IDX),U)\1,-1)
"RTN","RORHL09",59,0)
 . . S ROREND=9999999-$P(DXDTS(2,IDX),U,2)
"RTN","RORHL09",60,0)
 . . F  S INVDT=$O(^AUPNVSIT("AA",RORDFN,INVDT),-1)  Q:'INVDT!(INVDT'>ROREND)  D
"RTN","RORHL09",61,0)
 . . . S PIEN=""
"RTN","RORHL09",62,0)
 . . . F  S PIEN=$O(^AUPNVSIT("AA",RORDFN,INVDT,PIEN),-1)  Q:'PIEN  D
"RTN","RORHL09",63,0)
 . . . . S TMP=$$PV1(PIEN,RORDFN)
"RTN","RORHL09",64,0)
 . . . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL09",65,0)
 . . . . ;--- Reference for the corresponding OBR segment
"RTN","RORHL09",66,0)
 . . . . S:TMP'="S" PV1CNT=PV1CNT+1,^TMP("RORHL09",$J,PV1CNT)=PIEN
"RTN","RORHL09",67,0)
 ;
"RTN","RORHL09",68,0)
 ;--- OBR and OBX Segments
"RTN","RORHL09",69,0)
 I RORTY="OBR"  D  K ^TMP("PXKENC",$J),^TMP("RORHL09",$J)
"RTN","RORHL09",70,0)
 . S PV1CNT=0
"RTN","RORHL09",71,0)
 . F  S PV1CNT=$O(^TMP("RORHL09",$J,PV1CNT))  Q:PV1CNT'>0  D
"RTN","RORHL09",72,0)
 . . S PIEN=+$G(^TMP("RORHL09",$J,PV1CNT))  Q:PIEN'>0
"RTN","RORHL09",73,0)
 . . ;---
"RTN","RORHL09",74,0)
 . . S TMP=$$OBR(PIEN,RORDFN)
"RTN","RORHL09",75,0)
 . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL09",76,0)
 . . ;---
"RTN","RORHL09",77,0)
 . . S TMP=$$OBX(PIEN,RORDFN)
"RTN","RORHL09",78,0)
 . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL09",79,0)
 ;
"RTN","RORHL09",80,0)
 ;--- Check for errors
"RTN","RORHL09",81,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL09",82,0)
 ;
"RTN","RORHL09",83,0)
 ;***** OBR SEGMENT BUILDER (OUTPATIENT)
"RTN","RORHL09",84,0)
 ;
"RTN","RORHL09",85,0)
 ; RORIEN        IEN of file #9000010
"RTN","RORHL09",86,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",87,0)
 ;
"RTN","RORHL09",88,0)
 ; Return Values:
"RTN","RORHL09",89,0)
 ;       <0  Error Code
"RTN","RORHL09",90,0)
 ;        0  Ok
"RTN","RORHL09",91,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",92,0)
 ;
"RTN","RORHL09",93,0)
OBR(RORIEN,RORDFN) ;
"RTN","RORHL09",94,0)
 N CS,ERRCNT,RC,RORSEG,STN,TMP,VST0
"RTN","RORHL09",95,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",96,0)
 D ECH^RORHL7(.CS)
"RTN","RORHL09",97,0)
 ;
"RTN","RORHL09",98,0)
 S VST0=$G(^TMP("PXKENC",$J,RORIEN,"VST",RORIEN,0))
"RTN","RORHL09",99,0)
 ;
"RTN","RORHL09",100,0)
 ;--- Initialize the segment
"RTN","RORHL09",101,0)
 S RORSEG(0)="OBR"
"RTN","RORHL09",102,0)
 ;
"RTN","RORHL09",103,0)
 ;--- OBR-3 - Order Number (IEN in the VISIT file #9000010) 
"RTN","RORHL09",104,0)
 S RORSEG(3)=RORIEN
"RTN","RORHL09",105,0)
 ;
"RTN","RORHL09",106,0)
 ;--- OBR-4 - Universal Service ID
"RTN","RORHL09",107,0)
 S RORSEG(4)="OP"_CS_"Outpatient"_CS_"C4"
"RTN","RORHL09",108,0)
 ;
"RTN","RORHL09",109,0)
 ;--- OBR-7 - Observation Date/Time (Visit Date/Time) *KEY*
"RTN","RORHL09",110,0)
 S TMP=$$FMTHL7^XLFDT($P(VST0,U))
"RTN","RORHL09",111,0)
 Q:TMP'>0 $$ERROR^RORERR(-100,,,,"No visit date","ENCEVENT^PXKENC")
"RTN","RORHL09",112,0)
 S RORSEG(7)=TMP
"RTN","RORHL09",113,0)
 ;
"RTN","RORHL09",114,0)
 ;--- OBR-24 - Diagnostic Service ID
"RTN","RORHL09",115,0)
 S RORSEG(24)="PHY"
"RTN","RORHL09",116,0)
 ;
"RTN","RORHL09",117,0)
 ;--- OBR-44 - Division
"RTN","RORHL09",118,0)
 S RORSEG(44)=$$SITE^RORUTL03(CS)
"RTN","RORHL09",119,0)
 S TMP=+$P(VST0,U,6)  ; LOC. OF ENCOUNTER (.06)
"RTN","RORHL09",120,0)
 I TMP>0  D
"RTN","RORHL09",121,0)
 . S TMP=$$NS^XUAF4(TMP),STN=$P(TMP,U,2)
"RTN","RORHL09",122,0)
 . S:STN'="" RORSEG(44)=STN_CS_$P(TMP,U)_CS_"99VA4"
"RTN","RORHL09",123,0)
 ;
"RTN","RORHL09",124,0)
 ;--- Store the segment
"RTN","RORHL09",125,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL09",126,0)
 Q ERRCNT
"RTN","RORHL09",127,0)
 ;
"RTN","RORHL09",128,0)
 ;***** OBX SEGMENT BUILDER (OUTPATIENT)
"RTN","RORHL09",129,0)
 ;
"RTN","RORHL09",130,0)
 ; RORIEN        IEN of file #9000010
"RTN","RORHL09",131,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",132,0)
 ;
"RTN","RORHL09",133,0)
 ; Return Values:
"RTN","RORHL09",134,0)
 ;       <0  Error Code
"RTN","RORHL09",135,0)
 ;        0  Ok
"RTN","RORHL09",136,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",137,0)
 ;
"RTN","RORHL09",138,0)
OBX(RORIEN,RORDFN) ;
"RTN","RORHL09",139,0)
 N ERRCNT,RC,RORCS,RORLST,RORMSG,RORSEG,TMP
"RTN","RORHL09",140,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",141,0)
 D ECH^RORHL7(.RORCS)
"RTN","RORHL09",142,0)
 ;
"RTN","RORHL09",143,0)
 ;--- Procedures
"RTN","RORHL09",144,0)
 I $D(^TMP("PXKENC",$J,RORIEN,"CPT"))>1  D  Q:RC<0 RC
"RTN","RORHL09",145,0)
 . S RC=$$PROCS()  S:RC ERRCNT=ERRCNT+1
"RTN","RORHL09",146,0)
 ;--- Diagnosis codes
"RTN","RORHL09",147,0)
 I $D(^TMP("PXKENC",$J,RORIEN,"POV"))>1  D  Q:RC<0 RC
"RTN","RORHL09",148,0)
 . S RC=$$DIAGS()  S:RC ERRCNT=ERRCNT+1
"RTN","RORHL09",149,0)
 ;
"RTN","RORHL09",150,0)
 Q ERRCNT
"RTN","RORHL09",151,0)
 ; 
"RTN","RORHL09",152,0)
 ;***** PROCESSES PROCEDURES
"RTN","RORHL09",153,0)
PROCS() ;
"RTN","RORHL09",154,0)
 N CLASS,ERRCNT,IEN,K5,OID,PROC,PRV,REC,RORMSG,TMP
"RTN","RORHL09",155,0)
 S ERRCNT=0
"RTN","RORHL09",156,0)
 S OID="OCPT"_RORCS_"Procedures"_RORCS_"VA080"
"RTN","RORHL09",157,0)
 S K5=""
"RTN","RORHL09",158,0)
 F  S K5=$O(^TMP("PXKENC",$J,RORIEN,"CPT",K5))  Q:K5=""  D
"RTN","RORHL09",159,0)
 . S REC=$G(^TMP("PXKENC",$J,RORIEN,"CPT",K5,0))
"RTN","RORHL09",160,0)
 . S IEN=+$P(REC,U)  Q:IEN'>0
"RTN","RORHL09",161,0)
 . ;---
"RTN","RORHL09",162,0)
 . S PROC=$$CODEC^ICPTCOD(IEN)
"RTN","RORHL09",163,0)
 . Q:PROC<0
"RTN","RORHL09",164,0)
 . ;---
"RTN","RORHL09",165,0)
 . S PRV=+$P($G(^TMP("PXKENC",$J,RORIEN,"CPT",K5,12)),U,4)
"RTN","RORHL09",166,0)
 . ;12/06/2007 BAY/KAM REM CALL 218601 Modified next 8 lines
"RTN","RORHL09",167,0)
 . ;---
"RTN","RORHL09",168,0)
 . I PRV>0 D
"RTN","RORHL09",169,0)
 .. S $P(PRV,RORCS,13)=$$GET1^DIQ(200,PRV_",",53.5,"E",,"RORMSG")
"RTN","RORHL09",170,0)
 .. I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL09",171,0)
 ... D DBS^RORERR("RORMSG",-99,,RORDFN,200,+PRV_",")
"RTN","RORHL09",172,0)
 . E  S PRV=""
"RTN","RORHL09",173,0)
 . ;----------> End of changes for 218601
"RTN","RORHL09",174,0)
 . ;---
"RTN","RORHL09",175,0)
 . D SETOBX(OID,PROC,PRV)
"RTN","RORHL09",176,0)
 Q ERRCNT
"RTN","RORHL09",177,0)
 ;
"RTN","RORHL09",178,0)
 ;***** PV1 SEGMENT BUILDER (OUTPATIENT)
"RTN","RORHL09",179,0)
 ;
"RTN","RORHL09",180,0)
 ; RORIEN        IEN in the file #9000010
"RTN","RORHL09",181,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",182,0)
 ;
"RTN","RORHL09",183,0)
 ; Return Values:
"RTN","RORHL09",184,0)
 ;       <0  Error Code
"RTN","RORHL09",185,0)
 ;        0  Ok
"RTN","RORHL09",186,0)
 ;      "S"  No visit data
"RTN","RORHL09",187,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",188,0)
 ;
"RTN","RORHL09",189,0)
PV1(RORIEN,RORDFN) ;
"RTN","RORHL09",190,0)
 N BUF,CLASS,CS,ERRCNT,IENS,KK4,RC,REC,REP,RORCLIN,RORMSG,PRV,TMP,TMP1,VST0
"RTN","RORHL09",191,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",192,0)
 D ECH^RORHL7(.CS,,.REP)
"RTN","RORHL09",193,0)
 ;
"RTN","RORHL09",194,0)
 ;--- Get Visit Data
"RTN","RORHL09",195,0)
 D ENCEVENT^PXKENC(RORIEN,1)
"RTN","RORHL09",196,0)
 Q:$D(^TMP("PXKENC",$J,RORIEN))<10 "S"
"RTN","RORHL09",197,0)
 S VST0=$G(^TMP("PXKENC",$J,RORIEN,"VST",RORIEN,0))
"RTN","RORHL09",198,0)
 ;
"RTN","RORHL09",199,0)
 ;--- Do not send visits with the following service categories: Daily
"RTN","RORHL09",200,0)
 ;--- Hospitalization (D), Ancillary (X), Chart (C), Not Found (N),
"RTN","RORHL09",201,0)
 ;                    (E), Event Historical, Hospitalization (H).
"RTN","RORHL09",202,0)
 Q:"HEDXNC"[$P(VST0,U,7) "S"
"RTN","RORHL09",203,0)
 ;
"RTN","RORHL09",204,0)
 ;--- Initialize the segment
"RTN","RORHL09",205,0)
 S RORSEG(0)="PV1"
"RTN","RORHL09",206,0)
 ;
"RTN","RORHL09",207,0)
 ;--- PV1-2 - Patient Class
"RTN","RORHL09",208,0)
 S RORSEG(2)="O"  ; O - Outpatient
"RTN","RORHL09",209,0)
 ;
"RTN","RORHL09",210,0)
 ;--- PV1-3 - Assigned Patient Location (Station Number and Stop Code)
"RTN","RORHL09",211,0)
 S RORCLIN=+$P(VST0,U,22),BUF=""
"RTN","RORHL09",212,0)
 I RORCLIN>0  D
"RTN","RORHL09",213,0)
 . S IENS=RORCLIN_","
"RTN","RORHL09",214,0)
 . S TMP=$$GET1^DIQ(44,IENS,3.5,"I")  Q:TMP'>0
"RTN","RORHL09",215,0)
 . S BUF=$$GET1^DIQ(40.8,TMP,1)       Q:BUF=""  ; Station Number
"RTN","RORHL09",216,0)
 . S TMP=$$STOPCODE^RORUTL18(+RORCLIN)
"RTN","RORHL09",217,0)
 . S $P(BUF,CS,6)=$S(TMP>0:TMP,1:"")            ; Stop Code
"RTN","RORHL09",218,0)
 Q:$P(BUF,CS,6)="" "S"  ; Stop Code is required
"RTN","RORHL09",219,0)
 S RORSEG(3)=BUF
"RTN","RORHL09",220,0)
 ;
"RTN","RORHL09",221,0)
 ; PV1-4  - Admission Type
"RTN","RORHL09",222,0)
 S TMP=$P($G(^TMP("PXKENC",$J,RORIEN,"VST",RORIEN,150)),U,3)
"RTN","RORHL09",223,0)
 S RORSEG(4)=TMP
"RTN","RORHL09",224,0)
 ;
"RTN","RORHL09",225,0)
 ;--- PV1-7 - Attending Physician (User IEN and Provider Class Name)
"RTN","RORHL09",226,0)
 S (KK4,BUF)=""
"RTN","RORHL09",227,0)
 F  S KK4=$O(^TMP("PXKENC",$J,RORIEN,"PRV",KK4))  Q:KK4=""  D
"RTN","RORHL09",228,0)
 . S REC=$G(^TMP("PXKENC",$J,RORIEN,"PRV",KK4,0))
"RTN","RORHL09",229,0)
 . S PRV=+$P(REC,U)  Q:(PRV'>0)!($P(REC,U,4)'="P")
"RTN","RORHL09",230,0)
 . S $P(PRV,CS,13)=$$GET1^DIQ(200,PRV_",",53.5,"E",,"RORMSG")
"RTN","RORHL09",231,0)
 . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL09",232,0)
 . . D DBS^RORERR("RORMSG",-99,,RORDFN,200,PRV_",")
"RTN","RORHL09",233,0)
 . S BUF=BUF_REP_PRV
"RTN","RORHL09",234,0)
 S RORSEG(7)=$P(BUF,REP,2,999)
"RTN","RORHL09",235,0)
 ;
"RTN","RORHL09",236,0)
 ;--- PV1-19 - Visit Number (IEN in the VISIT file #9000010) *KEY*
"RTN","RORHL09",237,0)
 S RORSEG(19)=RORIEN
"RTN","RORHL09",238,0)
 ;
"RTN","RORHL09",239,0)
 ;--- PV1-44 - Admit Date/Time (Visit Date/Time) *KEY*
"RTN","RORHL09",240,0)
 S TMP=$$FMTHL7^XLFDT($P(VST0,U))
"RTN","RORHL09",241,0)
 I TMP'>0  D  Q RC
"RTN","RORHL09",242,0)
 . S RC=$$ERROR^RORERR(-100,,,,"No admission date","ENCEVENT^PXKENC")
"RTN","RORHL09",243,0)
 S RORSEG(44)=TMP
"RTN","RORHL09",244,0)
 ;
"RTN","RORHL09",245,0)
 ;--- PV1-51 - Visit Indicator (Deleted Visit Indicator)
"RTN","RORHL09",246,0)
 S TMP=$P(VST0,U,11)
"RTN","RORHL09",247,0)
 S RORSEG(51)=$S(TMP'="":TMP,1:0)
"RTN","RORHL09",248,0)
 ;
"RTN","RORHL09",249,0)
 ;--- Store the segment
"RTN","RORHL09",250,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL09",251,0)
 Q ERRCNT
"RTN","RORHL09",252,0)
 ;
"RTN","RORHL09",253,0)
 ;***** LOW-LEVEL SEGMENT BUILDER
"RTN","RORHL09",254,0)
 ;
"RTN","RORHL09",255,0)
 ; OBX3          Observation Identifier
"RTN","RORHL09",256,0)
 ;
"RTN","RORHL09",257,0)
 ; OBX5          Observation Value
"RTN","RORHL09",258,0)
 ;
"RTN","RORHL09",259,0)
 ; [OBX16]       Procedure Provider and Provider Class Name
"RTN","RORHL09",260,0)
 ;
"RTN","RORHL09",261,0)
SETOBX(OBX3,OBX5,OBX16) ;
"RTN","RORHL09",262,0)
 N RORSEG
"RTN","RORHL09",263,0)
 S RORSEG(0)="OBX"
"RTN","RORHL09",264,0)
 ;--- OBX-2 Value Type
"RTN","RORHL09",265,0)
 S RORSEG(2)="FT"
"RTN","RORHL09",266,0)
 ;--- OBX-3 Observation Identifier
"RTN","RORHL09",267,0)
 S RORSEG(3)=OBX3
"RTN","RORHL09",268,0)
 ;--- OBX-5 Observation Value
"RTN","RORHL09",269,0)
 S RORSEG(5)=OBX5
"RTN","RORHL09",270,0)
 ;--- OBX-11 Observation Result Status
"RTN","RORHL09",271,0)
 S RORSEG(11)="F"
"RTN","RORHL09",272,0)
 ;--- OBX-16 Responsible Observer (Procedure Provider)
"RTN","RORHL09",273,0)
 S:$G(OBX16)'="" RORSEG(16)=OBX16
"RTN","RORHL09",274,0)
 ;--- Store the segment
"RTN","RORHL09",275,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL09",276,0)
 Q
"RTN","RORP005")
0^2^B70602^n/a
"RTN","RORP005",1,0)
RORP005 ;BP/KM - PATCH ROR*1.5*5 PRE-TRANS/POST-INSTALL ROUTINE ;11/26/07 1:43pm
"RTN","RORP005",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**5**;Feb 17, 2006;Build 10
"RTN","RORP005",3,0)
 ;
"RTN","RORP005",4,0)
 Q
"RTN","RORP005",5,0)
PRET ;Pre-Transportation tag for patch ROR*1.5*5
"RTN","RORP005",6,0)
 D LD79951^RORPUT02()
"RTN","RORP005",7,0)
 Q
"RTN","RORP005",8,0)
POST ;Post-install tag for patch ROR*1.5*5
"RTN","RORP005",9,0)
 S RC=$$RS79951^RORPUT02()
"RTN","RORP005",10,0)
 Q
"TEMP","ROR GENERIC DRUG",1,0)
1^ABACAVIR^VA HIV^99^3535^ABACAVIR^1
"TEMP","ROR GENERIC DRUG",2,0)
2^ABACAVIR/LAMIVUDINE/ZIDOVUDINE^VA HIV^99^3677^ABACAVIR/LAMIVUDINE/ZIDOVUDINE^1
"TEMP","ROR GENERIC DRUG",3,0)
3^AMPRENAVIR^VA HIV^99^3568^AMPRENAVIR^1
"TEMP","ROR GENERIC DRUG",4,0)
4^ATAZANAVIR^VA HIV^99^3890^ATAZANAVIR^1
"TEMP","ROR GENERIC DRUG",5,0)
33^DARUNAVIR^VA HIV^99^4140^DARUNAVIR^1
"TEMP","ROR GENERIC DRUG",6,0)
5^DELAVIRDINE^VA HIV^99^3395^DELAVIRDINE^1
"TEMP","ROR GENERIC DRUG",7,0)
6^DIDANOSINE^VA HIV^99^2576^DIDANOSINE^1
"TEMP","ROR GENERIC DRUG",8,0)
7^EFAVIRENZ^VA HIV^99^3528^EFAVIRENZ^1
"TEMP","ROR GENERIC DRUG",9,0)
34^EFAVIRENZ/EMTRICIT./TENOFOVIR^VA HIV^99^4188^EFAVIRENZ/EMTRICITABINE/TENOFOVIR^1
"TEMP","ROR GENERIC DRUG",10,0)
8^EMTRICITABINE^VA HIV^99^3888^EMTRICITABINE^1
"TEMP","ROR GENERIC DRUG",11,0)
9^ENFUVIRTIDE^VA HIV^99^3864^ENFUVIRTIDE^1
"TEMP","ROR GENERIC DRUG",12,0)
10^EPZICOM^VA HIV^99^3994^ABACAVIR/LAMIVUDINE^1
"TEMP","ROR GENERIC DRUG",13,0)
11^FOSAMPRENAVIR^VA HIV^99^3918^FOSAMPRENAVIR^1
"TEMP","ROR GENERIC DRUG",14,0)
12^INDINAVIR^VA HIV^99^3350^INDINAVIR^1
"TEMP","ROR GENERIC DRUG",15,0)
13^INTERFERON ALFA-2A^VA HEPC^99^183^INTERFERON ALFA-2A^1
"TEMP","ROR GENERIC DRUG",16,0)
14^INTERFERON ALFA-2B^VA HEPC^99^1139^INTERFERON ALFA-2B^1
"TEMP","ROR GENERIC DRUG",17,0)
15^INTERFERON ALFA-2B/RIBAVIRIN^VA HEPC^99^3510^INTERFERON ALFA-2B/RIBAVIRIN^1
"TEMP","ROR GENERIC DRUG",18,0)
16^INTERFERON ALFACON-1^VA HEPC^99^3454^INTERFERON ALFACON-1^1
"TEMP","ROR GENERIC DRUG",19,0)
17^LAMIVUDINE^VA HIV^99^3315^LAMIVUDINE^1
"TEMP","ROR GENERIC DRUG",20,0)
18^LAMIVUDINE/ZIDOVUDINE^VA HIV^99^3465^LAMIVUDINE/ZIDOVUDINE^1
"TEMP","ROR GENERIC DRUG",21,0)
19^LOPINAVIR/RITONAVIR^VA HIV^99^3660^LOPINAVIR/RITONAVIR^1
"TEMP","ROR GENERIC DRUG",22,0)
35^MARAVIROC^VA HIV^99^4297^MARAVIROC^1
"TEMP","ROR GENERIC DRUG",23,0)
20^NELFINAVIR^VA HIV^99^3394^NELFINAVIR^1
"TEMP","ROR GENERIC DRUG",24,0)
21^NEVIRAPINE^VA HIV^99^3377^NEVIRAPINE^1
"TEMP","ROR GENERIC DRUG",25,0)
22^PEGINTERFERON^VA HEPC^99^3693^PEGINTERFERON^1
"TEMP","ROR GENERIC DRUG",26,0)
23^PEGINTERFERON/RIBAVIRIN^VA HEPC^99^3835^PEGINTERFERON/RIBAVIRIN^1
"TEMP","ROR GENERIC DRUG",27,0)
24^RIBAVIRIN^VA HEPC^99^1909^RIBAVIRIN^1
"TEMP","ROR GENERIC DRUG",28,0)
25^RITONAVIR^VA HIV^99^3349^RITONAVIR^1
"TEMP","ROR GENERIC DRUG",29,0)
26^SAQUINAVIR^VA HIV^99^3316^SAQUINAVIR^1
"TEMP","ROR GENERIC DRUG",30,0)
27^STAVUDINE (dT4)^VA HIV^99^3225^STAVUDINE (dT4)^1
"TEMP","ROR GENERIC DRUG",31,0)
28^TENOFOVIR^VA HIV^99^3724^TENOFOVIR^1
"TEMP","ROR GENERIC DRUG",32,0)
32^TIPRANAVIR^VA HIV^99^4059^TIPRANAVIR^1
"TEMP","ROR GENERIC DRUG",33,0)
29^TRUVADA^VA HIV^99^3990^EMTRICITABINE/TENOFOVIR^1
"TEMP","ROR GENERIC DRUG",34,0)
30^ZALCITABINE^VA HIV^99^2270^ZALCITABINE^1
"TEMP","ROR GENERIC DRUG",35,0)
31^ZIDOVUDINE^VA HIV^99^2147^ZIDOVUDINE^1
"VER")
8.0^22.0
"^DD",799.6,799.6,0)
FIELD^^5^14
"^DD",799.6,799.6,0,"DDA")
N
"^DD",799.6,799.6,0,"DT")
3051101
"^DD",799.6,799.6,0,"NM","ROR HISTORICAL DATA EXTRACTION")

"^DD",799.6,799.6,0,"PT",798.1,21.01)

"^DD",799.6,799.6,0,"VRPK")
ROR
"^DD",799.6,799.6,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.6,$G(DA))  K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",799.6,799.6,.01,1,0)
^.1^^-1
"^DD",799.6,799.6,.01,1,2,0)
^^TRIGGER^799.6^.07
"^DD",799.6,799.6,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^RORDATA(799.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,7)'>0 I X S X=DIV S Y(1)=$S($D(^RORDATA(799.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(799.6,.01,1,2,1.4)
"^DD",799.6,799.6,.01,1,2,1.4)
S DIH=$G(^RORDATA(799.6,DIV(0),0)),DIV=X S $P(^(0),U,7)=DIV,DIH=799.6,DIG=.07 D ^DICR
"^DD",799.6,799.6,.01,1,2,2)
Q
"^DD",799.6,799.6,.01,1,2,3)
Do not delete!
"^DD",799.6,799.6,.01,1,2,"%D",0)
^^7^7^3051101^
"^DD",799.6,799.6,.01,1,2,"%D",1,0)
If the ACTIVATION DATE field (.07) is empty, then
"^DD",799.6,799.6,.01,1,2,"%D",2,0)
this trigger populates it with the current date 
"^DD",799.6,799.6,.01,1,2,"%D",3,0)
when the package is installed.
"^DD",799.6,799.6,.01,1,2,"%D",4,0)
 
"^DD",799.6,799.6,.01,1,2,"%D",5,0)
Thus the historical data extraction parameters
"^DD",799.6,799.6,.01,1,2,"%D",6,0)
become active and will be processed by the next 
"^DD",799.6,799.6,.01,1,2,"%D",7,0)
run of the nightly task.
"^DD",799.6,799.6,.01,1,2,"CREATE CONDITION")
ACTIVATION DATE'>0
"^DD",799.6,799.6,.01,1,2,"CREATE VALUE")
TODAY
"^DD",799.6,799.6,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",799.6,799.6,.01,1,2,"DT")
3051031
"^DD",799.6,799.6,.01,1,2,"FIELD")
ACTIVATION DATE
"^DD",799.6,799.6,.01,3)
Enter the unique data extraction name (3-30 characters).
"^DD",799.6,799.6,.01,8.5)
@
"^DD",799.6,799.6,.01,9)
@
"^DD",799.6,799.6,.01,20,0)
^.3LA^1^1
"^DD",799.6,799.6,.01,20,1,0)
DEFINITION
"^DD",799.6,799.6,.01,21,0)
^^7^7^3060203^
"^DD",799.6,799.6,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.6,799.6,.01,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.6,.01,21,3,0)
 
"^DD",799.6,799.6,.01,21,4,0)
This field stores the unique name of the
"^DD",799.6,799.6,.01,21,5,0)
historical data extraction. If an extraction is
"^DD",799.6,799.6,.01,21,6,0)
initiated by a patch, it is a good idea to include
"^DD",799.6,799.6,.01,21,7,0)
the patch number.
"^DD",799.6,799.6,.01,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.01,"DT")
3051101
"^DD",799.6,799.6,.02,0)
TYPE^RSX^1:Auto (HL7 messages);2:Manual (host files);^0;2^Q:$$VAEDT^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.02,8.5)
@
"^DD",799.6,799.6,.02,9)
@
"^DD",799.6,799.6,.02,20,0)
^.3LA^1^1
"^DD",799.6,799.6,.02,20,1,0)
DEFINITION
"^DD",799.6,799.6,.02,21,0)
^^15^15^3060203^
"^DD",799.6,799.6,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.6,.02,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.6,.02,21,3,0)
 
"^DD",799.6,799.6,.02,21,4,0)
This field defines the type of data extraction.
"^DD",799.6,799.6,.02,21,5,0)
 
"^DD",799.6,799.6,.02,21,6,0)
Automatic data extractions are initiated by the 
"^DD",799.6,799.6,.02,21,7,0)
CCR patches. Data is extracted by the nightly task
"^DD",799.6,799.6,.02,21,8,0)
and sent via regular batch HL7 messages.
"^DD",799.6,799.6,.02,21,9,0)
 
"^DD",799.6,799.6,.02,21,10,0)
Manual data extractions are initiated by the users
"^DD",799.6,799.6,.02,21,11,0)
using the options from the maintenance menu. They 
"^DD",799.6,799.6,.02,21,12,0)
schedule the data extraction tasks and verify 
"^DD",799.6,799.6,.02,21,13,0)
their completion. Data is written to host files, 
"^DD",799.6,799.6,.02,21,14,0)
which are transferred to the AAC via FTP or any
"^DD",799.6,799.6,.02,21,15,0)
other means.
"^DD",799.6,799.6,.02,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.02,"DT")
3051031
"^DD",799.6,799.6,.03,0)
START DATE^RDX^^0;3^Q:$$VAEDT^RORDD(799.6,$G(DA))  S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",799.6,799.6,.03,1,0)
^.1
"^DD",799.6,799.6,.03,1,1,0)
^^TRIGGER^799.6^.04
"^DD",799.6,799.6,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^RORDATA(799.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4)'>0 I X S X=DIV S Y(1)=$S($D(^RORDATA(799.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(799.6,.03,1,1,1.4)
"^DD",799.6,799.6,.03,1,1,1.4)
S DIH=$G(^RORDATA(799.6,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=799.6,DIG=.04 D ^DICR
"^DD",799.6,799.6,.03,1,1,2)
Q
"^DD",799.6,799.6,.03,1,1,3)
Do not delete!
"^DD",799.6,799.6,.03,1,1,"%D",0)
^^3^3^3051101^
"^DD",799.6,799.6,.03,1,1,"%D",1,0)
If the END DATE field (.04) is empty, then this
"^DD",799.6,799.6,.03,1,1,"%D",2,0)
trigger populates it with the current date when
"^DD",799.6,799.6,.03,1,1,"%D",3,0)
the package is installed.
"^DD",799.6,799.6,.03,1,1,"CREATE CONDITION")
END DATE'>0
"^DD",799.6,799.6,.03,1,1,"CREATE VALUE")
TODAY
"^DD",799.6,799.6,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",799.6,799.6,.03,1,1,"DT")
3051101
"^DD",799.6,799.6,.03,1,1,"FIELD")
END DATE
"^DD",799.6,799.6,.03,8.5)
@
"^DD",799.6,799.6,.03,9)
@
"^DD",799.6,799.6,.03,20,0)
^.3LA^1^1
"^DD",799.6,799.6,.03,20,1,0)
DEFINITION
"^DD",799.6,799.6,.03,21,0)
^.001^5^5^3051101^^
"^DD",799.6,799.6,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.6,.03,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.6,.03,21,3,0)
 
"^DD",799.6,799.6,.03,21,4,0)
This field indicates the start date for the 
"^DD",799.6,799.6,.03,21,5,0)
historical data extraction.
"^DD",799.6,799.6,.03,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.03,"DT")
3051101
"^DD",799.6,799.6,.04,0)
END DATE^DX^^0;4^Q:$$VAEDT^RORDD(799.6,$G(DA))  S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",799.6,799.6,.04,5,1,0)
799.6^.03^1
"^DD",799.6,799.6,.04,8.5)
@
"^DD",799.6,799.6,.04,9)
@
"^DD",799.6,799.6,.04,20,0)
^.3LA^1^1
"^DD",799.6,799.6,.04,20,1,0)
DEFINITION
"^DD",799.6,799.6,.04,21,0)
^^5^5^3051101^
"^DD",799.6,799.6,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.6,.04,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.6,.04,21,3,0)
 
"^DD",799.6,799.6,.04,21,4,0)
This field indicates the end date for the 
"^DD",799.6,799.6,.04,21,5,0)
historical data extraction.
"^DD",799.6,799.6,.04,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.04,"DT")
3051101
"^DD",799.6,799.6,.05,0)
PATIENTS PER BATCH^NJ9,0X^^0;5^Q:$$VAEDT^RORDD(799.6,$G(DA))  K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",799.6,799.6,.05,3)
Type a Number between 1 and 999999999, 0 Decimal Digits.
"^DD",799.6,799.6,.05,8.5)
@
"^DD",799.6,799.6,.05,9)
@
"^DD",799.6,799.6,.05,20,0)
^.3LA^2^2
"^DD",799.6,799.6,.05,20,1,0)
DEFINITION
"^DD",799.6,799.6,.05,20,2,0)
MANUAL
"^DD",799.6,799.6,.05,21,0)
^^6^6^3051219^
"^DD",799.6,799.6,.05,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.6,.05,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.6,.05,21,3,0)
 
"^DD",799.6,799.6,.05,21,4,0)
The PATIENTS PER BATCH field holds the maximum
"^DD",799.6,799.6,.05,21,5,0)
number of patients whose data is written into a
"^DD",799.6,799.6,.05,21,6,0)
single historical data extraction output file.
"^DD",799.6,799.6,.05,23,0)
^.001^2^2^3060203^^^^
"^DD",799.6,799.6,.05,23,1,0)
This field is used only during manual historical data
"^DD",799.6,799.6,.05,23,2,0)
extractions.
"^DD",799.6,799.6,.05,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.05,"DT")
3050725
"^DD",799.6,799.6,.06,0)
MAXIMUM MESSAGE SIZE^NJ4,1X^^0;6^Q:$$VAEDT^RORDD(799.6,$G(DA))  K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",799.6,799.6,.06,3)
Type a Number between 0 and 99, 1 Decimal Digit.
"^DD",799.6,799.6,.06,8.5)
@
"^DD",799.6,799.6,.06,9)
@
"^DD",799.6,799.6,.06,20,0)
^.3LA^2^2
"^DD",799.6,799.6,.06,20,1,0)
DEFINITION
"^DD",799.6,799.6,.06,20,2,0)
AUTO
"^DD",799.6,799.6,.06,21,0)
^.001^7^7^3051219^^
"^DD",799.6,799.6,.06,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.6,.06,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.6,.06,21,3,0)
 
"^DD",799.6,799.6,.06,21,4,0)
This field stores the maximum size (in megabytes)
"^DD",799.6,799.6,.06,21,5,0)
of a batch HL7 message that can be sent to Austin
"^DD",799.6,799.6,.06,21,6,0)
Automation Center (AAC). If this field is empty or
"^DD",799.6,799.6,.06,21,7,0)
contains 0, the size is not limited.
"^DD",799.6,799.6,.06,23,0)
^.001^11^11^3060203^^
"^DD",799.6,799.6,.06,23,1,0)
Actual size of an HL7 batch can be greater than the
"^DD",799.6,799.6,.06,23,2,0)
value of this field because the software does not break
"^DD",799.6,799.6,.06,23,3,0)
in the middle of an individual HL7 message.
"^DD",799.6,799.6,.06,23,4,0)
 
"^DD",799.6,799.6,.06,23,5,0)
For example, if the maximum size is 10Mb, the current
"^DD",799.6,799.6,.06,23,6,0)
size is 9Mb and 3Mb should be sent for the patient
"^DD",799.6,799.6,.06,23,7,0)
being processed then the actual size of the batch will
"^DD",799.6,799.6,.06,23,8,0)
be 12Mb.
"^DD",799.6,799.6,.06,23,9,0)
 
"^DD",799.6,799.6,.06,23,10,0)
This field is used only during automatic historical 
"^DD",799.6,799.6,.06,23,11,0)
data extractions.
"^DD",799.6,799.6,.06,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.06,"DT")
3051101
"^DD",799.6,799.6,.07,0)
ACTIVATION DATE^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",799.6,799.6,.07,5,1,0)
799.6^.01^2
"^DD",799.6,799.6,.07,8.5)
@
"^DD",799.6,799.6,.07,9)
@
"^DD",799.6,799.6,.07,20,0)
^.3LA^2^2
"^DD",799.6,799.6,.07,20,1,0)
STATE
"^DD",799.6,799.6,.07,20,2,0)
AUTO
"^DD",799.6,799.6,.07,21,0)
^^5^5^3051219^
"^DD",799.6,799.6,.07,21,1,0)
This field is used only for automatic data 
"^DD",799.6,799.6,.07,21,2,0)
extractions. If it is empty, then the nightly task
"^DD",799.6,799.6,.07,21,3,0)
ignores this record completely. Otherwise, the
"^DD",799.6,799.6,.07,21,4,0)
data extraction will not start before the date and
"^DD",799.6,799.6,.07,21,5,0)
time stored in this field.
"^DD",799.6,799.6,.07,"DT")
3051031
"^DD",799.6,799.6,.08,0)
BASE FILE NAME^FX^^0;8^K:$L(X)>15!($L(X)<1) X
"^DD",799.6,799.6,.08,3)
Answer must be 1-15 characters in length.
"^DD",799.6,799.6,.08,8.5)
@
"^DD",799.6,799.6,.08,9)
@
"^DD",799.6,799.6,.08,20,0)
^.3LA^2^2
"^DD",799.6,799.6,.08,20,1,0)
DEFINITION
"^DD",799.6,799.6,.08,20,2,0)
MANUAL
"^DD",799.6,799.6,.08,21,0)
^^19^19^3051219^
"^DD",799.6,799.6,.08,21,1,0)
The base part for the output file names is stored
"^DD",799.6,799.6,.08,21,2,0)
in this field. It is populated either by a patch 
"^DD",799.6,799.6,.08,21,3,0)
or by the user (if they are instructed to do so).
"^DD",799.6,799.6,.08,21,4,0)
 
"^DD",799.6,799.6,.08,21,5,0)
The output file names will have the following
"^DD",799.6,799.6,.08,21,6,0)
structure:
"^DD",799.6,799.6,.08,21,7,0)
 
"^DD",799.6,799.6,.08,21,8,0)
  BASE-SSS-TT.HDT
"^DD",799.6,799.6,.08,21,9,0)
 
"^DD",799.6,799.6,.08,21,10,0)
where 'BASE' is the value of this field, 'SSS' is
"^DD",799.6,799.6,.08,21,11,0)
the site number (3 digits), and 'TT' is the
"^DD",799.6,799.6,.08,21,12,0)
sequential number of the task (2 digits).
"^DD",799.6,799.6,.08,21,13,0)
                                                     
"^DD",799.6,799.6,.08,21,14,0)
If the task is restarted, the optional numeric
"^DD",799.6,799.6,.08,21,15,0)
modifier '##' (2 digits) will be added to the name
"^DD",799.6,799.6,.08,21,16,0)
so that the already extracted data will not be
"^DD",799.6,799.6,.08,21,17,0)
overwritten:
"^DD",799.6,799.6,.08,21,18,0)
                                                     
"^DD",799.6,799.6,.08,21,19,0)
  BASE-SSS-TT-##.HDT 
"^DD",799.6,799.6,.08,23,0)
^^2^2^3060203^
"^DD",799.6,799.6,.08,23,1,0)
This field is used only during manual historical data
"^DD",799.6,799.6,.08,23,2,0)
extractions.
"^DD",799.6,799.6,.08,"DT")
3051219
"^DD",799.6,799.6,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.6,,-1)
"^DD",799.6,799.6,.09,8.5)
@
"^DD",799.6,799.6,.09,9)
@
"^DD",799.6,799.6,.09,20,0)
^.3LA^1^1
"^DD",799.6,799.6,.09,20,1,0)
DEFINITION
"^DD",799.6,799.6,.09,21,0)
^^6^6^3060203^
"^DD",799.6,799.6,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.6,799.6,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.6,799.6,.09,21,3,0)
 
"^DD",799.6,799.6,.09,21,4,0)
National historical data extractions (backpulls)
"^DD",799.6,799.6,.09,21,5,0)
must have this field set to "YES". This prevents
"^DD",799.6,799.6,.09,21,6,0)
local editing of other fields of the definitions.
"^DD",799.6,799.6,.09,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA))
"^DD",799.6,799.6,.09,"DT")
3050725
"^DD",799.6,799.6,1,0)
DATA AREA^799.61P^^1;0
"^DD",799.6,799.6,1,9)
@
"^DD",799.6,799.6,1,20,0)
^.3LA^1^1
"^DD",799.6,799.6,1,20,1,0)
DEFINITION
"^DD",799.6,799.6,1,21,0)
^.001^7^7^3051219^^
"^DD",799.6,799.6,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.6,1,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.6,1,21,3,0)
 
"^DD",799.6,799.6,1,21,4,0)
This multiple lists all data areas in which the 
"^DD",799.6,799.6,1,21,5,0)
data extraction will be performed. It can also
"^DD",799.6,799.6,1,21,6,0)
contain additional time frames for these data
"^DD",799.6,799.6,1,21,7,0)
areas.
"^DD",799.6,799.6,2,0)
OUTPUT DIRECTORY^F^^2;E1,240^K:$L(X)>240!($L(X)<1) X
"^DD",799.6,799.6,2,3)
Enter a valid name of the output directory (1-240 characters).
"^DD",799.6,799.6,2,20,0)
^.3LA^2^2
"^DD",799.6,799.6,2,20,1,0)
PARAMETERS
"^DD",799.6,799.6,2,20,2,0)
MANUAL
"^DD",799.6,799.6,2,21,0)
^^19^19^3060203^
"^DD",799.6,799.6,2,21,1,0)
A directory must be created within the file system
"^DD",799.6,799.6,2,21,2,0)
of the host operating system (VMS, Windows,
"^DD",799.6,799.6,2,21,3,0)
etc.). Text files containing historical data in
"^DD",799.6,799.6,2,21,4,0)
the HL7 format will be created in this directory
"^DD",799.6,799.6,2,21,5,0)
by the data extraction tasks.
"^DD",799.6,799.6,2,21,6,0)
 
"^DD",799.6,799.6,2,21,7,0)
The full name of the directory must be entered as
"^DD",799.6,799.6,2,21,8,0)
a value of this field. For example, the value can
"^DD",799.6,799.6,2,21,9,0)
look something like this:
"^DD",799.6,799.6,2,21,10,0)
 
"^DD",799.6,799.6,2,21,11,0)
   VA2$:[OUTPUT] - VAX VMS 
"^DD",799.6,799.6,2,21,12,0)
   D:\Output\    - Windows, MS-DOS
"^DD",799.6,799.6,2,21,13,0)
 
"^DD",799.6,799.6,2,21,14,0)
Because a file name will be concatenated to the
"^DD",799.6,799.6,2,21,15,0)
directory name, the trailing slash in the Windows
"^DD",799.6,799.6,2,21,16,0)
directory name is required.
"^DD",799.6,799.6,2,21,17,0)
 
"^DD",799.6,799.6,2,21,18,0)
Do not forget to enable read/write access to this
"^DD",799.6,799.6,2,21,19,0)
directory for M processes!
"^DD",799.6,799.6,2,"DT")
3050722
"^DD",799.6,799.6,3,0)
REGISTRY NAME^799.63^^3;0
"^DD",799.6,799.6,3,9)
@
"^DD",799.6,799.6,3,21,0)
^^3^3^3051219^
"^DD",799.6,799.6,3,21,1,0)
This multiple references the registries that the
"^DD",799.6,799.6,3,21,2,0)
data extraction will be performed for and
"^DD",799.6,799.6,3,21,3,0)
indicates the extraction status.
"^DD",799.6,799.6,3,"DT")
3051031
"^DD",799.6,799.6,4,0)
TASK^799.64^^4;0
"^DD",799.6,799.6,4,9)
@
"^DD",799.6,799.6,4,20,0)
^.3LA^2^2
"^DD",799.6,799.6,4,20,1,0)
STATE
"^DD",799.6,799.6,4,20,2,0)
MANUAL
"^DD",799.6,799.6,5,0)
STATUS^CJ2,0^^ ; ^S X=$$HDESTAT^RORDD01(+$G(D0))
"^DD",799.6,799.6,5,9)
^
"^DD",799.6,799.6,5,9.01)

"^DD",799.6,799.6,5,9.1)
S X=$$HDESTAT^RORDD01(+$G(D0))
"^DD",799.6,799.6,5,20,0)
^.3LA^1^1
"^DD",799.6,799.6,5,20,1,0)
STATE
"^DD",799.6,799.6,5,21,0)
^^7^7^3060106^
"^DD",799.6,799.6,5,21,1,0)
This field indicates a generic status of the 
"^DD",799.6,799.6,5,21,2,0)
historical data extraction:
"^DD",799.6,799.6,5,21,3,0)
 
"^DD",799.6,799.6,5,21,4,0)
  ""  Unknown/Undefined
"^DD",799.6,799.6,5,21,5,0)
   0  Inactive
"^DD",799.6,799.6,5,21,6,0)
   1  Pending/Active
"^DD",799.6,799.6,5,21,7,0)
   2  Completed
"^DD",799.6,799.6,5,"DT")
3051114
"^DD",799.6,799.61,0)
DATA AREA SUB-FIELD^^.03^3
"^DD",799.6,799.61,0,"DT")
3050722
"^DD",799.6,799.61,0,"NM","DATA AREA")

"^DD",799.6,799.61,0,"UP")
799.6
"^DD",799.6,799.61,.01,0)
DATA AREA^MP799.33'X^ROR(799.33,^0;1^Q:$$VAEDT^RORDD(799.6,$G(DA(1)))
"^DD",799.6,799.61,.01,1,0)
^.1^^0
"^DD",799.6,799.61,.01,3)

"^DD",799.6,799.61,.01,8.5)
@
"^DD",799.6,799.61,.01,9)
@
"^DD",799.6,799.61,.01,20,0)
^.3LA^^0
"^DD",799.6,799.61,.01,21,0)
^^6^6^3051219^
"^DD",799.6,799.61,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.61,.01,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.61,.01,21,3,0)
 
"^DD",799.6,799.61,.01,21,4,0)
Select the data area where the data extraction 
"^DD",799.6,799.61,.01,21,5,0)
will be performed. Data will be extracted only 
"^DD",799.6,799.61,.01,21,6,0)
from the data areas referenced by this field.
"^DD",799.6,799.61,.01,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA(1)))
"^DD",799.6,799.61,.01,"DT")
3050725
"^DD",799.6,799.61,.02,0)
START DATE^DX^^0;2^Q:$$VAEDT^RORDD(799.6,$G(DA(1)))  S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",799.6,799.61,.02,1,0)
^.1
"^DD",799.6,799.61,.02,1,1,0)
^^TRIGGER^799.61^.03
"^DD",799.6,799.61,.02,1,1,1)
X ^DD(799.61,.02,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^RORDATA(799.6,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(799.61,.02,1,1,1.4)
"^DD",799.6,799.61,.02,1,1,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^RORDATA(799.6,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,3)'>0
"^DD",799.6,799.61,.02,1,1,1.4)
S DIH=$G(^RORDATA(799.6,DIV(0),1,DIV(1),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=799.61,DIG=.03 D ^DICR
"^DD",799.6,799.61,.02,1,1,2)
Q
"^DD",799.6,799.61,.02,1,1,3)
Do not delete!
"^DD",799.6,799.61,.02,1,1,"%D",0)
^^3^3^3060106^
"^DD",799.6,799.61,.02,1,1,"%D",1,0)
If the END DATE field (.03) is empty, then this 
"^DD",799.6,799.61,.02,1,1,"%D",2,0)
trigger populates it with the current date when
"^DD",799.6,799.61,.02,1,1,"%D",3,0)
the package is installed.
"^DD",799.6,799.61,.02,1,1,"CREATE CONDITION")
END DATE'>0
"^DD",799.6,799.61,.02,1,1,"CREATE VALUE")
TODAY
"^DD",799.6,799.61,.02,1,1,"DELETE VALUE")
NO EFFECT
"^DD",799.6,799.61,.02,1,1,"FIELD")
END DATE
"^DD",799.6,799.61,.02,8.5)
@
"^DD",799.6,799.61,.02,9)
@
"^DD",799.6,799.61,.02,20,0)
^.3LA^^0
"^DD",799.6,799.61,.02,21,0)
^^10^10^3051219^
"^DD",799.6,799.61,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.61,.02,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.61,.02,21,3,0)
 
"^DD",799.6,799.61,.02,21,4,0)
This field stores the start date of an additional 
"^DD",799.6,799.61,.02,21,5,0)
data extraction time frame for this data area.
"^DD",799.6,799.61,.02,21,6,0)
 
"^DD",799.6,799.61,.02,21,7,0)
If this field is empty, then the data is extracted
"^DD",799.6,799.61,.02,21,8,0)
only in the main time frame defined by the
"^DD",799.6,799.61,.02,21,9,0)
top-level fields START DATE (.03) and END DATE
"^DD",799.6,799.61,.02,21,10,0)
(.04).
"^DD",799.6,799.61,.02,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA(1)))
"^DD",799.6,799.61,.02,"DT")
3051101
"^DD",799.6,799.61,.03,0)
END DATE^DX^^0;3^Q:$$VAEDT^RORDD(799.6,$G(DA(1)))  S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",799.6,799.61,.03,5,1,0)
799.61^.02^1
"^DD",799.6,799.61,.03,8.5)
@
"^DD",799.6,799.61,.03,9)
@
"^DD",799.6,799.61,.03,20,0)
^.3LA^^0
"^DD",799.6,799.61,.03,21,0)
^^10^10^3051219^
"^DD",799.6,799.61,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.61,.03,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.61,.03,21,3,0)
 
"^DD",799.6,799.61,.03,21,4,0)
This field stores the end date of an additional 
"^DD",799.6,799.61,.03,21,5,0)
data extraction time frame for this data area.
"^DD",799.6,799.61,.03,21,6,0)
 
"^DD",799.6,799.61,.03,21,7,0)
If this field is empty, then the data is extracted
"^DD",799.6,799.61,.03,21,8,0)
only in the main time frame defined by the
"^DD",799.6,799.61,.03,21,9,0)
top-level fields START DATE (.03) and END DATE
"^DD",799.6,799.61,.03,21,10,0)
(.04).
"^DD",799.6,799.61,.03,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA(1)))
"^DD",799.6,799.61,.03,"DT")
3051101
"^DD",799.6,799.63,0)
REGISTRY NAME SUB-FIELD^^.02^2
"^DD",799.6,799.63,0,"DT")
3051031
"^DD",799.6,799.63,0,"NM","REGISTRY NAME")

"^DD",799.6,799.63,0,"UP")
799.6
"^DD",799.6,799.63,.01,0)
REGISTRY NAME^MRFX^^0;1^Q:$$VAEDT^RORDD(799.6,$G(DA(1)))  K:$L(X)>30!($L(X)<3) X I $D(X) K:'$D(^ROR(798.1,"B",$E(X,1,30))) X
"^DD",799.6,799.63,.01,1,0)
^.1^^0
"^DD",799.6,799.63,.01,3)
Enter the registry name (3-30 characters).
"^DD",799.6,799.63,.01,4)
I $G(X)="??" N D,DIC,DZ S DIC="^ROR(798.1,",DIC(0)="",D="B",DZ="??" D DQ^DICQ,EN^DDIOL("",,"!")
"^DD",799.6,799.63,.01,8.5)
@
"^DD",799.6,799.63,.01,9)
@
"^DD",799.6,799.63,.01,20,0)
^.3LA^1^1
"^DD",799.6,799.63,.01,20,1,0)
DEFINITION
"^DD",799.6,799.63,.01,21,0)
^^5^5^3051101^
"^DD",799.6,799.63,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A 
"^DD",799.6,799.63,.01,21,2,0)
NATIONAL HISTORICAL DATA EXTRACTION DEFINITION!
"^DD",799.6,799.63,.01,21,3,0)
 
"^DD",799.6,799.63,.01,21,4,0)
Enter a name of the registry exactly as it appears
"^DD",799.6,799.63,.01,21,5,0)
in the ROR REGISTRY PARAMETERS file (#798.1).
"^DD",799.6,799.63,.01,23,0)
^.001^3^3^3051101^^^^
"^DD",799.6,799.63,.01,23,1,0)
Names of the registries are used here instead of 
"^DD",799.6,799.63,.01,23,2,0)
pointers because the KIDS pointer resolving feature 
"^DD",799.6,799.63,.01,23,3,0)
does not work for .01 fields.
"^DD",799.6,799.63,.01,"DEL",1,0)
I $$VADEL^RORDD(799.6,$G(DA(1)))
"^DD",799.6,799.63,.01,"DT")
3051031
"^DD",799.6,799.63,.02,0)
COMPLETION DATE/TIME^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",799.6,799.63,.02,8.5)
@
"^DD",799.6,799.63,.02,9)
@
"^DD",799.6,799.63,.02,20,0)
^.3LA^1^1
"^DD",799.6,799.63,.02,20,1,0)
STATE
"^DD",799.6,799.63,.02,21,0)
^^7^7^3060203^
"^DD",799.6,799.63,.02,21,1,0)
A valid date in this field indicates that the data
"^DD",799.6,799.63,.02,21,2,0)
extraction has been successfully completed for
"^DD",799.6,799.63,.02,21,3,0)
this registry. 
"^DD",799.6,799.63,.02,21,4,0)
 
"^DD",799.6,799.63,.02,21,5,0)
If the data must be re-extracted, clear this field
"^DD",799.6,799.63,.02,21,6,0)
and the nightly task will repeat the historical
"^DD",799.6,799.63,.02,21,7,0)
data extraction for this registry.
"^DD",799.6,799.63,.02,23,0)
^^4^4^3060203^
"^DD",799.6,799.63,.02,23,1,0)
This field is populated by the $$CHECKMSG^ROR10 
"^DD",799.6,799.63,.02,23,2,0)
function after it confirms successful transmission of 
"^DD",799.6,799.63,.02,23,3,0)
the HL7 messages before the next nightly data
"^DD",799.6,799.63,.02,23,4,0)
extraction.
"^DD",799.6,799.63,.02,"DT")
3051031
"^DD",799.6,799.64,0)
TASK SUB-FIELD^^1^6
"^DD",799.6,799.64,0,"DT")
3050725
"^DD",799.6,799.64,0,"IX","T",799.64,.02)

"^DD",799.6,799.64,0,"NM","TASK")

"^DD",799.6,799.64,0,"UP")
799.6
"^DD",799.6,799.64,.01,0)
START RECORD IEN^MNJ22,9^^0;1^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."10N.N) X
"^DD",799.6,799.64,.01,1,0)
^.1^^0
"^DD",799.6,799.64,.01,3)
Enter a patient's IEN (DFN).
"^DD",799.6,799.64,.01,8.5)
@
"^DD",799.6,799.64,.01,9)
@
"^DD",799.6,799.64,.01,21,0)
^^16^16^3060203^
"^DD",799.6,799.64,.01,21,1,0)
All patients of the registries are distributed 
"^DD",799.6,799.64,.01,21,2,0)
between the data extraction tasks. Each task
"^DD",799.6,799.64,.01,21,3,0)
extracts the data of the patients whose DFNs are
"^DD",799.6,799.64,.01,21,4,0)
not less than the value of this field in the task
"^DD",799.6,799.64,.01,21,5,0)
record and are less than the value of the field in
"^DD",799.6,799.64,.01,21,6,0)
the next task record.
"^DD",799.6,799.64,.01,21,7,0)
                                                     
"^DD",799.6,799.64,.01,21,8,0)
The first task always has 1 as a value in this
"^DD",799.6,799.64,.01,21,9,0)
field (just in case).
"^DD",799.6,799.64,.01,21,10,0)
                                                     
"^DD",799.6,799.64,.01,21,11,0)
The last task extracts the data of all patients
"^DD",799.6,799.64,.01,21,12,0)
whose registry records have IENs not less than the
"^DD",799.6,799.64,.01,21,13,0)
value of this field.  
"^DD",799.6,799.64,.01,21,14,0)
                                                     
"^DD",799.6,799.64,.01,21,15,0)
Usually, this field should not be edited. It is
"^DD",799.6,799.64,.01,21,16,0)
populated automatically when the task is created.
"^DD",799.6,799.64,.01,23,0)
^^7^7^3060203^
"^DD",799.6,799.64,.01,23,1,0)
The value of this field is not a real pointer to the 
"^DD",799.6,799.64,.01,23,2,0)
ROR REGISTRY RECORD file. There can be no record in the
"^DD",799.6,799.64,.01,23,3,0)
local registry with an IEN stored in this field.
"^DD",799.6,799.64,.01,23,4,0)
 
"^DD",799.6,799.64,.01,23,5,0)
The historical data extraction task will start 
"^DD",799.6,799.64,.01,23,6,0)
processing from the registry record with an IEN that 
"^DD",799.6,799.64,.01,23,7,0)
is not less than the value of this field.
"^DD",799.6,799.64,.01,"DT")
3051114
"^DD",799.6,799.64,.02,0)
TASK NUMBER^NJ10,0I^^0;2^K:+X'=X!(X>9899999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",799.6,799.64,.02,1,0)
^.1
"^DD",799.6,799.64,.02,1,1,0)
799.64^T
"^DD",799.6,799.64,.02,1,1,1)
S ^RORDATA(799.6,DA(1),4,"T",$E(X,1,30),DA)=""
"^DD",799.6,799.64,.02,1,1,2)
K ^RORDATA(799.6,DA(1),4,"T",$E(X,1,30),DA)
"^DD",799.6,799.64,.02,1,1,3)
Do not delete!
"^DD",799.6,799.64,.02,1,1,"DT")
3050725
"^DD",799.6,799.64,.02,3)
Type a Number between 1 and 9899999999, 0 Decimal Digits.
"^DD",799.6,799.64,.02,8.5)
@
"^DD",799.6,799.64,.02,9)
@
"^DD",799.6,799.64,.02,21,0)
^^6^6^3050725^
"^DD",799.6,799.64,.02,21,1,0)
This field contains the number of the Taskman 
"^DD",799.6,799.64,.02,21,2,0)
task (scheduled or running) that does the data
"^DD",799.6,799.64,.02,21,3,0)
extraction.
"^DD",799.6,799.64,.02,21,4,0)
 
"^DD",799.6,799.64,.02,21,5,0)
This field cannot be edited. It is updated
"^DD",799.6,799.64,.02,21,6,0)
automatically by the data extraction task.
"^DD",799.6,799.64,.02,"DT")
3050725
"^DD",799.6,799.64,.03,0)
STATUS^S^0:Unknown;1:Active> Pending;2:Active> Running;3:Inactive> Finished;4:Inactive> Available;5:Inactive> Interrupted;100:Inactive> Crashed;101:Inactive> Errors;102:Active> Suspended;103:Active> Stopping;^0;3^Q
"^DD",799.6,799.64,.03,3)

"^DD",799.6,799.64,.03,8.5)
@
"^DD",799.6,799.64,.03,9)
@
"^DD",799.6,799.64,.03,21,0)
^^2^2^3050725^
"^DD",799.6,799.64,.03,21,1,0)
The STATUS field stores the last known task
"^DD",799.6,799.64,.03,21,2,0)
status.
"^DD",799.6,799.64,.03,23,0)
^^8^8^3060203^
"^DD",799.6,799.64,.03,23,1,0)
This field is populated with the value returned by the
"^DD",799.6,799.64,.03,23,2,0)
$$STATUS^RORTSK02 function. It will reflect the last 
"^DD",799.6,799.64,.03,23,3,0)
known status of the task even after the task is deleted
"^DD",799.6,799.64,.03,23,4,0)
by the Taskman and its record is deleted from the ROR
"^DD",799.6,799.64,.03,23,5,0)
TASK file (#798.8).
"^DD",799.6,799.64,.03,23,6,0)
 
"^DD",799.6,799.64,.03,23,7,0)
Please do not get value of this field directly; use the
"^DD",799.6,799.64,.03,23,8,0)
$$STATUS^RORHDTUT function instead.
"^DD",799.6,799.64,.03,"DT")
3051114
"^DD",799.6,799.64,.04,0)
NEXT PATIENT IEN^NJ22,9^^0;4^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."10N.N) X
"^DD",799.6,799.64,.04,3)
Enter the next patient IEN (1-999999999999, 9 Decimal Digits).
"^DD",799.6,799.64,.04,8.5)
@
"^DD",799.6,799.64,.04,9)
@
"^DD",799.6,799.64,.04,21,0)
^.001^10^10^3060122^^
"^DD",799.6,799.64,.04,21,1,0)
If the data extraction task is stopped, it 
"^DD",799.6,799.64,.04,21,2,0)
finishes processing the current patient and stores
"^DD",799.6,799.64,.04,21,3,0)
the IEN of the patient that should be processed
"^DD",799.6,799.64,.04,21,4,0)
next as the value of this field.
"^DD",799.6,799.64,.04,21,5,0)
 
"^DD",799.6,799.64,.04,21,6,0)
When the task is restarted, it starts from the
"^DD",799.6,799.64,.04,21,7,0)
patient IEN stored in this field.
"^DD",799.6,799.64,.04,21,8,0)
 
"^DD",799.6,799.64,.04,21,9,0)
Usually, this field should not be edited. It is
"^DD",799.6,799.64,.04,21,10,0)
updated automatically by the data extraction task.
"^DD",799.6,799.64,.04,23,0)
^^7^7^3060203^
"^DD",799.6,799.64,.04,23,1,0)
The value of this field is not a real pointer to the 
"^DD",799.6,799.64,.04,23,2,0)
ROR PATIENT file. There can be no record in the file
"^DD",799.6,799.64,.04,23,3,0)
with IEN stored in this field.
"^DD",799.6,799.64,.04,23,4,0)
 
"^DD",799.6,799.64,.04,23,5,0)
The restarted historical data extraction task will 
"^DD",799.6,799.64,.04,23,6,0)
continue processing from the patient with an IEN that
"^DD",799.6,799.64,.04,23,7,0)
is not less than the value of this field.
"^DD",799.6,799.64,.04,"DT")
3060122
"^DD",799.6,799.64,.05,0)
FILE NAME^F^^0;5^K:$L(X)>50!($L(X)<1) X
"^DD",799.6,799.64,.05,3)
Answer must be 1-50 characters in length.
"^DD",799.6,799.64,.05,8.5)
@
"^DD",799.6,799.64,.05,9)
@
"^DD",799.6,799.64,.05,21,0)
^.001^22^22^3051101^^
"^DD",799.6,799.64,.05,21,1,0)
The output file name is stored in this field. This
"^DD",799.6,799.64,.05,21,2,0)
name is generated automatically when the task is
"^DD",799.6,799.64,.05,21,3,0)
created. The name has the following structure:
"^DD",799.6,799.64,.05,21,4,0)
 
"^DD",799.6,799.64,.05,21,5,0)
   BASE-SSS-TT.HDT
"^DD",799.6,799.64,.05,21,6,0)
 
"^DD",799.6,799.64,.05,21,7,0)
where 'BASE' is the base part of the file name
"^DD",799.6,799.64,.05,21,8,0)
provided by the user during creation of the task
"^DD",799.6,799.64,.05,21,9,0)
table 'SSS' is the site number (3 digits), and
"^DD",799.6,799.64,.05,21,10,0)
'TT' is the sequential number of the task (2
"^DD",799.6,799.64,.05,21,11,0)
digits).
"^DD",799.6,799.64,.05,21,12,0)
 
"^DD",799.6,799.64,.05,21,13,0)
If the task is restarted, the optional numeric
"^DD",799.6,799.64,.05,21,14,0)
modifier '##' (2 digits) can be added to the name
"^DD",799.6,799.64,.05,21,15,0)
so that the already extracted data will not be
"^DD",799.6,799.64,.05,21,16,0)
overwritten:
"^DD",799.6,799.64,.05,21,17,0)
 
"^DD",799.6,799.64,.05,21,18,0)
   BASE-SSS-TT-##.HDT
"^DD",799.6,799.64,.05,21,19,0)
 
"^DD",799.6,799.64,.05,21,20,0)
Usually, this field should not be edited. It is
"^DD",799.6,799.64,.05,21,21,0)
populated automatically when the task is created
"^DD",799.6,799.64,.05,21,22,0)
or restarted.
"^DD",799.6,799.64,.05,"DT")
3050722
"^DD",799.6,799.64,1,0)
ERROR^799.641P^^1;0
"^DD",799.6,799.64,1,9)
@
"^DD",799.6,799.64,1,21,0)
^^11^11^3060106^
"^DD",799.6,799.64,1,21,1,0)
This multiple contains a list of registry records 
"^DD",799.6,799.64,1,21,2,0)
that were processed with errors.
"^DD",799.6,799.64,1,21,3,0)
                                 
"^DD",799.6,799.64,1,21,4,0)
When the data extraction task is restarted, it
"^DD",799.6,799.64,1,21,5,0)
tries to re-extract the data for these patients.
"^DD",799.6,799.64,1,21,6,0)
If it succeeds, it deletes the corresponding
"^DD",799.6,799.64,1,21,7,0)
records from the list.
"^DD",799.6,799.64,1,21,8,0)
                                 
"^DD",799.6,799.64,1,21,9,0)
The records of the multiple have the same IENs as
"^DD",799.6,799.64,1,21,10,0)
the corresponding registry records in the ROR
"^DD",799.6,799.64,1,21,11,0)
REGISTRY RECORD file (#798).
"^DD",799.6,799.641,0)
ERROR SUB-FIELD^^.01^1
"^DD",799.6,799.641,0,"DT")
3050722
"^DD",799.6,799.641,0,"IX","B",799.641,.01)

"^DD",799.6,799.641,0,"NM","ERROR")

"^DD",799.6,799.641,0,"UP")
799.64
"^DD",799.6,799.641,.01,0)
ERROR^MP798.4'X^RORDATA(798.4,^0;1^S:$D(X) DINUM=X
"^DD",799.6,799.641,.01,1,0)
^.1
"^DD",799.6,799.641,.01,1,1,0)
799.641^B
"^DD",799.6,799.641,.01,1,1,1)
S ^RORDATA(799.6,DA(2),4,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",799.6,799.641,.01,1,1,2)
K ^RORDATA(799.6,DA(2),4,DA(1),1,"B",$E(X,1,30),DA)
"^DD",799.6,799.641,.01,8.5)
@
"^DD",799.6,799.641,.01,9)
@
"^DD",799.6,799.641,.01,"DT")
3060122
"^DIC",799.6,799.6,0)
ROR HISTORICAL DATA EXTRACTION^799.6
"^DIC",799.6,799.6,0,"GL")
^RORDATA(799.6,
"^DIC",799.6,799.6,"%",0)
^1.005^^0
"^DIC",799.6,799.6,"%D",0)
^^9^9^3051031^
"^DIC",799.6,799.6,"%D",1,0)
Records of this file store parameters of the 
"^DIC",799.6,799.6,"%D",2,0)
historical data extractions (backpulls) performed
"^DIC",799.6,799.6,"%D",3,0)
on the registries and reflect status of these data
"^DIC",799.6,799.6,"%D",4,0)
extractions.
"^DIC",799.6,799.6,"%D",5,0)
 
"^DIC",799.6,799.6,"%D",6,0)
Records of the file are uniquely identified by the
"^DIC",799.6,799.6,"%D",7,0)
historical data extraction name (the "A" primary
"^DIC",799.6,799.6,"%D",8,0)
key and the uniqueness index "B" are used for that
"^DIC",799.6,799.6,"%D",9,0)
purpose).
"^DIC",799.6,"B","ROR HISTORICAL DATA EXTRACTION",799.6)

"BLD",6834,6)
^4
**END**
**END**
