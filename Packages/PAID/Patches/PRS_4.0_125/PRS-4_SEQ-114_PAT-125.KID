Released PRS*4*125 SEQ #114
Extracted from mail message
**KIDS**:PRS*4.0*125^

**INSTALL NAME**
PRS*4.0*125
"BLD",8105,0)
PRS*4.0*125^PAID^0^3100304^y
"BLD",8105,1,0)
^^5^5^3100303^
"BLD",8105,1,1,0)
This patch addresses 2 issues:
"BLD",8105,1,2,0)
1. Leave Without Pay (LWOP) is not being counted in the Night Differential
"BLD",8105,1,3,0)
   calculation
"BLD",8105,1,4,0)
2. Hard error occurs in Approve Signed ESRs [PRSP ESR SAP] option when
"BLD",8105,1,5,0)
   the Time & Leave (T & L) unit begins with an alpha character
"BLD",8105,4,0)
^9.64PA^^
"BLD",8105,6.3)
6
"BLD",8105,"ABPKG")
n
"BLD",8105,"KRN",0)
^9.67PA^779.2^20
"BLD",8105,"KRN",.4,0)
.4
"BLD",8105,"KRN",.401,0)
.401
"BLD",8105,"KRN",.402,0)
.402
"BLD",8105,"KRN",.403,0)
.403
"BLD",8105,"KRN",.5,0)
.5
"BLD",8105,"KRN",.84,0)
.84
"BLD",8105,"KRN",3.6,0)
3.6
"BLD",8105,"KRN",3.8,0)
3.8
"BLD",8105,"KRN",9.2,0)
9.2
"BLD",8105,"KRN",9.8,0)
9.8
"BLD",8105,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",8105,"KRN",9.8,"NM",1,0)
PRSPSAPU^^0^B39884801
"BLD",8105,"KRN",9.8,"NM",2,0)
PRS8AC^^0^B66590161
"BLD",8105,"KRN",9.8,"NM","B","PRS8AC",2)

"BLD",8105,"KRN",9.8,"NM","B","PRSPSAPU",1)

"BLD",8105,"KRN",19,0)
19
"BLD",8105,"KRN",19.1,0)
19.1
"BLD",8105,"KRN",101,0)
101
"BLD",8105,"KRN",409.61,0)
409.61
"BLD",8105,"KRN",771,0)
771
"BLD",8105,"KRN",779.2,0)
779.2
"BLD",8105,"KRN",870,0)
870
"BLD",8105,"KRN",8989.51,0)
8989.51
"BLD",8105,"KRN",8989.52,0)
8989.52
"BLD",8105,"KRN",8994,0)
8994
"BLD",8105,"KRN","B",.4,.4)

"BLD",8105,"KRN","B",.401,.401)

"BLD",8105,"KRN","B",.402,.402)

"BLD",8105,"KRN","B",.403,.403)

"BLD",8105,"KRN","B",.5,.5)

"BLD",8105,"KRN","B",.84,.84)

"BLD",8105,"KRN","B",3.6,3.6)

"BLD",8105,"KRN","B",3.8,3.8)

"BLD",8105,"KRN","B",9.2,9.2)

"BLD",8105,"KRN","B",9.8,9.8)

"BLD",8105,"KRN","B",19,19)

"BLD",8105,"KRN","B",19.1,19.1)

"BLD",8105,"KRN","B",101,101)

"BLD",8105,"KRN","B",409.61,409.61)

"BLD",8105,"KRN","B",771,771)

"BLD",8105,"KRN","B",779.2,779.2)

"BLD",8105,"KRN","B",870,870)

"BLD",8105,"KRN","B",8989.51,8989.51)

"BLD",8105,"KRN","B",8989.52,8989.52)

"BLD",8105,"KRN","B",8994,8994)

"BLD",8105,"QDEF")
^^^^^^^^^^YES
"BLD",8105,"QUES",0)
^9.62^^
"BLD",8105,"REQB",0)
^9.611^3^2
"BLD",8105,"REQB",2,0)
PRS*4.0*117^1
"BLD",8105,"REQB",3,0)
PRS*4.0*93^1
"BLD",8105,"REQB","B","PRS*4.0*117",2)

"BLD",8105,"REQB","B","PRS*4.0*93",3)

"MBREQ")
0
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
125^3100304
"PKG",408,22,1,"PAH",1,1,0)
^^5^5^3100304
"PKG",408,22,1,"PAH",1,1,1,0)
This patch addresses 2 issues:
"PKG",408,22,1,"PAH",1,1,2,0)
1. Leave Without Pay (LWOP) is not being counted in the Night Differential
"PKG",408,22,1,"PAH",1,1,3,0)
   calculation
"PKG",408,22,1,"PAH",1,1,4,0)
2. Hard error occurs in Approve Signed ESRs [PRSP ESR SAP] option when
"PKG",408,22,1,"PAH",1,1,5,0)
   the Time & Leave (T & L) unit begins with an alpha character
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","PRS8AC")
0^2^B66590161^B65735984
"RTN","PRS8AC",1,0)
PRS8AC ;HISC/MRL-DECOMPOSITION, ACTIVITY STRING ;03/26/08
"RTN","PRS8AC",2,0)
 ;;4.0;PAID;**40,45,54,52,69,75,90,96,112,117,125**;Sep 21, 1995;Build 6
"RTN","PRS8AC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8AC",4,0)
 ;
"RTN","PRS8AC",5,0)
 ;The primary purpose of this routine is to create the activity
"RTN","PRS8AC",6,0)
 ;string [the "W" node] for each day of activity.  While creating
"RTN","PRS8AC",7,0)
 ;this string certain counts will also be tallied.  These include
"RTN","PRS8AC",8,0)
 ;Standby, On-Call and the various absence categories.  Actual
"RTN","PRS8AC",9,0)
 ;Call Back hrs are also counted in this routine for the purpose
"RTN","PRS8AC",10,0)
 ;of reducing the OC later on in the process.
"RTN","PRS8AC",11,0)
 ;
"RTN","PRS8AC",12,0)
 ;Called by Routines:  PRS8EX, PRS8ST.
"RTN","PRS8AC",13,0)
 ;
"RTN","PRS8AC",14,0)
 Q:VAR=""
"RTN","PRS8AC",15,0)
 I $S($P(V,"^",1)="":1,$P(V,"^",2)="":1,1:0) Q  ;no times
"RTN","PRS8AC",16,0)
 S Q=0
"RTN","PRS8AC",17,0)
 I DY>0,DY<15 D  G END:Q
"RTN","PRS8AC",18,0)
 .I DAY(DY,"OFF"),"LSWARUHFGDrZq"[VAR S Q=1 ;exc invalid day off VAR
"RTN","PRS8AC",19,0)
 K OC,FLAG
"RTN","PRS8AC",20,0)
 ;
"RTN","PRS8AC",21,0)
 S DAYZ=DAY(DY,"W")_$G(DAY(DY,"N")),MTM=0
"RTN","PRS8AC",22,0)
 S DAYH=$G(DAY(DY,"HOL"))_$G(DAY(DY+1,"HOL")) ;holiday node
"RTN","PRS8AC",23,0)
 N DAYR
"RTN","PRS8AC",24,0)
 S DAYR=DAY(DY,"r")_$G(DAY(DY,"rN")) ; Recess
"RTN","PRS8AC",25,0)
 ;
"RTN","PRS8AC",26,0)
 ;P 45 FIREFIGHTERS F NODE TO TRACK ADDITIONAL FF HRS
"RTN","PRS8AC",27,0)
 S DAYF=$G(DAY(DY,"F"))
"RTN","PRS8AC",28,0)
 ;
"RTN","PRS8AC",29,0)
 F T=+V:1:+$P(V,"^",2) D
"RTN","PRS8AC",30,0)
 .I +VAR,$E(DAYH,T),$E(DAYZ,T)?1A Q  ;no override holiday
"RTN","PRS8AC",31,0)
 .; Don't override Recess but allow Unscheduled Regular (VAR=4)
"RTN","PRS8AC",32,0)
 .I +VAR,VAR'=4,$E(DAYR,T)="r" Q  ; don't override Recess
"RTN","PRS8AC",33,0)
 .I VAR="A"&(JURY=1) S VAR="J"
"RTN","PRS8AC",34,0)
 .S VAR1=VAR Q:VAR1=""  S DAYZ(1)=$E(DAYZ,T)
"RTN","PRS8AC",35,0)
 .I "HhJLSARWMNUnVXYTFGDZq"[VAR1,$E(DAYZ,T)="m" Q
"RTN","PRS8AC",36,0)
 .I T=+V,"12345E"[VAR1 S DAY(DY,"DWK")=1 ;count days worked
"RTN","PRS8AC",37,0)
 .I T=+V,"Vh"[VAR1,TYP["I" S DAY(DY,"DWK")=1 ;count days worked for cop
"RTN","PRS8AC",38,0)
 .I "JLSWNnARUXYFGDZq"[VAR1,T'>96,'$E(DAYZ,T) Q  ;invalid outside tour
"RTN","PRS8AC",39,0)
 .; Regular employees can't earn ct/use ot during work
"RTN","PRS8AC",40,0)
 .I +NAWS'=9,"EOPQT4"[VAR1,T'>96,$E(DAYZ,T) Q
"RTN","PRS8AC",41,0)
 .; 9mo AWS checks
"RTN","PRS8AC",42,0)
 .I +NAWS=9,"PQT"[VAR1,T'>96,$E(DAYZ,T) Q  ;can't earn ct/use ot during work
"RTN","PRS8AC",43,0)
 .; Allow CT/OT/UN/ON if posted over Recess otherwise don't allow
"RTN","PRS8AC",44,0)
 .I +NAWS=9,"4OECQ"[VAR1,T'>96,$E(DAYZ,T),$E(DAYR,T)'="r" S $E(DAYR,T)=VAR1 Q
"RTN","PRS8AC",45,0)
 .I "OE"[VAR1,"BC"[DAYZ(1),$L(DAYZ(1)) D  ; Change OT or CT to CB/SB OT
"RTN","PRS8AC",46,0)
 ..S VAR1=$C($A($E(DAYZ,T))+32)
"RTN","PRS8AC",47,0)
 ..I $E(DAYZ,T)="C",VAR="E" S VAR1="t" ; Comp time on on-call = "t"
"RTN","PRS8AC",48,0)
 .I "BC"[VAR1,DAYZ(1)="O",$L(DAYZ(1)) D  ; Change CB/SB to CB/SB OT
"RTN","PRS8AC",49,0)
 ..S VAR1=$C($A($E(VAR1))+32)
"RTN","PRS8AC",50,0)
 .I "Hh"[VAR1 D  Q:VAR1="H"
"RTN","PRS8AC",51,0)
 ..S DAYH=$E(DAYH,0,T-1)_$S(VAR1="H":1,$E(DAYZ,T)&($E(DAYZ,T)'=4)!(TYP["I")!(TYP["P"&(TYP["N"!(TYP["H")))!(VAR1="h"):2,1:0)_$E(DAYH,T+1,999) ;holiday node
"RTN","PRS8AC",52,0)
 ..I VAR1="h" S VAR1="O" ;convert HW to OT
"RTN","PRS8AC",53,0)
 ..I VAR="h",$E(DAYZ,T)=5 S FLAG=5
"RTN","PRS8AC",54,0)
 .I $E(DAYZ,T)=5,"ALSRUFGDZq"[VAR1 S VAR1=$E(DAYZ,T)
"RTN","PRS8AC",55,0)
 .I $E(DAYZ,T)="-","BbCctes"[VAR1 Q  ;unavail for oc/sb or sch ot/ct
"RTN","PRS8AC",56,0)
 .;
"RTN","PRS8AC",57,0)
 .I VAR'="r" D
"RTN","PRS8AC",58,0)
 ..S DAYZ=$E(DAYZ,0,T-1)_VAR1_$E(DAYZ,T+1,999)
"RTN","PRS8AC",59,0)
 ..I $E($G(DAY(DY-1,"N")),T)'="",VAR1'=$E($G(DAY(DY-1,"N")),T) D
"RTN","PRS8AC",60,0)
 ...S DAY(DY-1,"N")=$E(DAY(DY-1,"N"),0,T-1)_VAR1_$E(DAY(DY-1,"N"),T+1,999) ;save VAR
"RTN","PRS8AC",61,0)
 ..; When processing tour time also copy tour into DAYR
"RTN","PRS8AC",62,0)
 ..I "1235"[VAR1 D
"RTN","PRS8AC",63,0)
 ...S DAYR=$E(DAYZ,0,T-1)_VAR1_$E(DAYZ,T+1,999)
"RTN","PRS8AC",64,0)
 ...I $E($G(DAY(DY-1,"N")),T)'="",VAR1'=$E($G(DAY(DY-1,"N")),T) D
"RTN","PRS8AC",65,0)
 ....S DAY(DY-1,"rN")=$E(DAY(DY-1,"rN"),0,T-1)_VAR1_$E(DAY(DY-1,"rN"),T+1,999)
"RTN","PRS8AC",66,0)
 .;
"RTN","PRS8AC",67,0)
 .; The following check will record Recess and will then update VAR1 to 0 which
"RTN","PRS8AC",68,0)
 .; will result in the normally scheduled tour being marked as being no tour.
"RTN","PRS8AC",69,0)
 .; This will allow Unscheduled Regular, OT and CT to be posted over the tour.
"RTN","PRS8AC",70,0)
 .I VAR="r" D
"RTN","PRS8AC",71,0)
 ..S DAYR=$E(DAYR,0,T-1)_VAR1_$E(DAYR,T+1,999)
"RTN","PRS8AC",72,0)
 ..S DAYZ=$E(DAYZ,0,T-1)_0_$E(DAYZ,T+1,999) ; Overwrite tour
"RTN","PRS8AC",73,0)
 ..I $E($G(DAY(DY-1,"rN")),T)'="",VAR1'=$E($G(DAY(DY-1,"rN")),T) D
"RTN","PRS8AC",74,0)
 ...S DAY(DY-1,"rN")=$E(DAY(DY-1,"rN"),0,T-1)_VAR1_$E(DAY(DY-1,"rN"),T+1,999)
"RTN","PRS8AC",75,0)
 ...S DAY(DY-1,"N")=$E(DAY(DY-1,"N"),0,T-1)_0_$E(DAY(DY-1,"N"),T+1,999)
"RTN","PRS8AC",76,0)
 ..S Y=48 D SET ; Count Recess
"RTN","PRS8AC",77,0)
 .;
"RTN","PRS8AC",78,0)
 .I VAR1="J" S Y=5 D SET ;set authorized absence for jury duty
"RTN","PRS8AC",79,0)
 .I VAR1="M" S Y=5 D SET ; authorized absence for ML
"RTN","PRS8AC",80,0)
 .;ot on non-premium T&L
"RTN","PRS8AC",81,0)
 .I ("Eocb"[VAR1!(VAR1="O"&'$E(DAYH,T)))&("^^10^11^12^13^15^16^17^"[("^"_$P(V,"^",4)_"^"))!(VAR1=5&("ALSRUFGDZq"[VAR))!(VAR1=4&(TYP["P"!(TYP["I"&(TYP["N"!(TYP["H"!($$HYBRID^PRSAENT1($G(DFN)))))))&("^7^9^11^12^14^17^"[("^"_$P(V,"^",4)_"^"))) D
"RTN","PRS8AC",82,0)
 ..Q:$E(DAY(DY,"P"),T)=5&("ALSRUFGDZq"'[VAR)
"RTN","PRS8AC",83,0)
 ..I $D(FLAG) S FLAG=VAR1,VAR1=5
"RTN","PRS8AC",84,0)
 ..N CODE D
"RTN","PRS8AC",85,0)
 ...I "^7^8^12^"[("^"_$P(V,"^",4)_"^")&(TYP["N"!(TYP["H")!($$HYBRID^PRSAENT1($G(DFN)))) S CODE="N" Q
"RTN","PRS8AC",86,0)
 ...I "^7^8^12^"[("^"_$P(V,"^",4)_"^")&(PMP'="")&("^S^T^U^V^"[(U_PMP_U)) S CODE="N" Q
"RTN","PRS8AC",87,0)
 ...I $P(V,"^",4)=11,($$HYBRID^PRSAENT1($G(DFN))) S CODE="N" Q
"RTN","PRS8AC",88,0)
 ...I $P(V,"^",4)=11&(PMP'="")&("^S^T^U^V^"[(U_PMP_U)) S CODE="N" Q
"RTN","PRS8AC",89,0)
 ...I "^7^8^9^11^"[("^"_$P(V,"^",4)_"^")&(TYP'["N")&(TYP'["H")&('$$HYBRID^PRSAENT1($G(DFN))) S CODE="n" Q
"RTN","PRS8AC",90,0)
 ...I "^7^8^9^11^"[("^"_$P(V,"^",4)_"^")&("^S^T^U^V^"'[(U_PMP_U)) S CODE="n" Q
"RTN","PRS8AC",91,0)
 ...I $P(V,"^",4)=17 S CODE="N" Q  ; Code 17 - OT/CT with premiums 
"RTN","PRS8AC",92,0)
 ...I VAR1=5 S CODE=VAR Q
"RTN","PRS8AC",93,0)
 ...S CODE=1
"RTN","PRS8AC",94,0)
 ..S DAY(DY,"P")=$E(DAY(DY,"P"),0,T-1)_CODE_$E(DAY(DY,"P"),T+1,999)
"RTN","PRS8AC",95,0)
 .I "ALSRUFGDZq"[VAR,VAR1=5 S VAR1=VAR
"RTN","PRS8AC",96,0)
 .I $D(FLAG) S VAR1=FLAG K FLAG
"RTN","PRS8AC",97,0)
 .;
"RTN","PRS8AC",98,0)
FOPTHR .; part time hrs (PT/PH 8b codes) for CODE O firefighters
"RTN","PRS8AC",99,0)
 .I +VAR1,"Ff"[TYP,PMP="O",(NH=448!(NH>320&(NH(1)'=NH(2)))) S Y=32 D SET
"RTN","PRS8AC",100,0)
 .;
"RTN","PRS8AC",101,0)
FRCPTHR .; part time hrs (PT/PH 8b codes) for code R & C firefighters
"RTN","PRS8AC",102,0)
 .; don't include UNSCHEDULED REGULAR (var1=4)
"RTN","PRS8AC",103,0)
 .I +VAR1,VAR1'=4,"Ff"[TYP,"RC"[PMP S Y=32 D SET
"RTN","PRS8AC",104,0)
 .;
"RTN","PRS8AC",105,0)
 .;patch 45 & 54
"RTN","PRS8AC",106,0)
 .; Set non pay hrs in the basic tour for firefighters with premium
"RTN","PRS8AC",107,0)
 .;pay indicator of C.
"RTN","PRS8AC",108,0)
 .I "nW"[VAR1,"Ff"[TYP,"C"=PMP D
"RTN","PRS8AC",109,0)
 ..;
"RTN","PRS8AC",110,0)
 ..;  Y designates location in WK array where NT/NH will be stored.
"RTN","PRS8AC",111,0)
 ..;  F node was set to 1 for periods of addtl ff hrs during 1st pass 
"RTN","PRS8AC",112,0)
 ..;  thru scheduled ToD.  Count NT/NH if this is not addtl ff hrs.
"RTN","PRS8AC",113,0)
 ..;
"RTN","PRS8AC",114,0)
 ..I '$E(DAY(DY,"F"),T) S Y=47 D SET
"RTN","PRS8AC",115,0)
 .S S="LSWnAREUP HYXOVQTFGDZq" I S[VAR1&(DY>0&(DY<15)!(DY=0&(T>96))) D  ;save in WK array
"RTN","PRS8AC",116,0)
 ..S S(1)=$F(S,VAR1)-1
"RTN","PRS8AC",117,0)
 ..S S=$P("1^2^3^4^5^6^0^8^0^9^24^42^43^0^33^54^19^44^45^46^53^55","^",S(1)) ;WK location
"RTN","PRS8AC",118,0)
 ..Q:S=0
"RTN","PRS8AC",119,0)
 ..; Patch *40 removed A (authorized absence) from leave counted in LU.
"RTN","PRS8AC",120,0)
 ..; Patch *125 added LWOP as valid leave counted in LU
"RTN","PRS8AC",121,0)
 ..; LU is only used to determine if night differential granted for
"RTN","PRS8AC",122,0)
 ..; leave should be backed out.
"RTN","PRS8AC",123,0)
 ..I TYP'["D","LSWRUFGDZq"[VAR1 S LU=LU+1 ;increment leave counter
"RTN","PRS8AC",124,0)
 ..; p117 decrement total leave count for leave outside of pp
"RTN","PRS8AC",125,0)
 ..I TYP'["D","LSWRUFGDZq"[VAR1,((DY=0)&(T<97))!((DY=14)&(T>96)),LU>0 S LU=LU-1
"RTN","PRS8AC",126,0)
 ..S Y=S D SET S:TYP["D" Q=1
"RTN","PRS8AC",127,0)
 ..K S,VAR1
"RTN","PRS8AC",128,0)
 ;
"RTN","PRS8AC",129,0)
 S DAY(DY,"W")=$E(DAYZ,1,96) ;todays activity
"RTN","PRS8AC",130,0)
 S DAY(DY,"N")=$E(DAYZ,97,999) ;tomorrows activity from today/if any
"RTN","PRS8AC",131,0)
 S DAY(DY,"r")=$E(DAYR,1,96) ; Today's Recess
"RTN","PRS8AC",132,0)
 S DAY(DY,"rN")=$E(DAYR,97,999) ; Tomorrow's Recess/if any
"RTN","PRS8AC",133,0)
 S:$E(DAY(DY,"P"),97,999)'="" DAY(DY,"P1")=$E(DAY(DY,"P"),97,999) ;non-prem ot for next day
"RTN","PRS8AC",134,0)
 S DAY(DY,"P")=$E(DAY(DY,"P"),1,96) ;non-prem ot for today
"RTN","PRS8AC",135,0)
 I DAY(DY,"N")?1"0"."0",DAY(DY,"rN")'["r" S DAY(DY,"N")=""
"RTN","PRS8AC",136,0)
 S DAY(DY,"HOL")=$E(DAYH,1,96)
"RTN","PRS8AC",137,0)
 ;
"RTN","PRS8AC",138,0)
 ;P 45 FIREFIGHTER ADDITIONAL FIREFIGHTER HRS NODE FOR THIS DAY
"RTN","PRS8AC",139,0)
 I $G(PRS8AFFH) D
"RTN","PRS8AC",140,0)
 .  N PRSFFHR,PRSF1,PRSF2,PRSF3,SEG1,SEG2
"RTN","PRS8AC",141,0)
 .;
"RTN","PRS8AC",142,0)
 .;GET THE POSITIONAL START AND STOPS FOR THIS SEGMENT
"RTN","PRS8AC",143,0)
 .  S SEG1=$P(V,U,1),SEG2=$P(V,U,2)
"RTN","PRS8AC",144,0)
 .;EXISTING PORTION OF F NODE UP TO CURRENT SEGMENT
"RTN","PRS8AC",145,0)
 .  S PRSF1=$E(DAYF,1,SEG1-1)
"RTN","PRS8AC",146,0)
 .;CURRENT SEGMENT UP TO END OF DAY
"RTN","PRS8AC",147,0)
 .  S PRSF2=$E(DAYZ,SEG1,SEG2)
"RTN","PRS8AC",148,0)
 .;CURRENT F NODE PAST CURRENT SEGMENT TO END OF THE TOUR WHICH
"RTN","PRS8AC",149,0)
 .;MAY FALL IN TODAY OR NEXT DAY.
"RTN","PRS8AC",150,0)
 .S PRSF3=$E(DAYF,SEG2+1,999)
"RTN","PRS8AC",151,0)
 .;
"RTN","PRS8AC",152,0)
 .;UPDATE THE DAY ARRAY AND THE TMP GLOBAL WITH WORK STRING.
"RTN","PRS8AC",153,0)
 .;EACH CHAR THAT IS SET TO 1 REPRESENTS A 15 MIN SEGMENT THAT
"RTN","PRS8AC",154,0)
 .;THE FIREFIGHTER WAS SCHEDULED FOR ADDITIONAL FF HRS.
"RTN","PRS8AC",155,0)
 .;FOR TOURS CROSSING MIDNIGHT THIS STRING WILL BE LONGER THAN 96
"RTN","PRS8AC",156,0)
 .;CHARACTERS. CHARACTERS IN POSITIONS PAST 96 REPRESENT TIMES PAST
"RTN","PRS8AC",157,0)
 .;MIDNIGHT OF THE CURRENT DAY (TOMORROW).
"RTN","PRS8AC",158,0)
 .S PRSFFHR=PRSF1_PRSF2_PRSF3
"RTN","PRS8AC",159,0)
 .S DAY(DY,"F")=PRSFFHR
"RTN","PRS8AC",160,0)
 .S ^TMP($J,"PRS8",DY,"F")=PRSFFHR
"RTN","PRS8AC",161,0)
 ;
"RTN","PRS8AC",162,0)
 I DY<15 S X=$E(DAYH,97,999) I X'?."0" S ^TMP($J,"PRS8",DY+1,"HOL")=X_$E($G(^TMP($J,"PRS8",DY+1,"HOL")),$L(X)+1,999),DAY(DY+1,"HOL")=X
"RTN","PRS8AC",163,0)
 ;
"RTN","PRS8AC",164,0)
MOVE ; --- entry point for just moving previous days hrs to today
"RTN","PRS8AC",165,0)
 I $D(DAY(DY-1,"N")),$L(DAY(DY-1,"N")) D
"RTN","PRS8AC",166,0)
 .S X=DAY(DY-1,"N")_$E(DAY(DY,"W"),$L(DAY(DY-1,"N"))+1,96)
"RTN","PRS8AC",167,0)
 .S DAY(DY,"W")=X
"RTN","PRS8AC",168,0)
 I $D(DAY(DY-1,"P1")),$L(DAY(DY-1,"P1")) D
"RTN","PRS8AC",169,0)
 .S X=DAY(DY-1,"P1")_$E(DAY(DY,"P"),$L(DAY(DY-1,"P1"))+1,96)
"RTN","PRS8AC",170,0)
 .S DAY(DY,"P")=X
"RTN","PRS8AC",171,0)
 I $D(DAY(DY-1,"rN")),$L(DAY(DY-1,"rN")) D
"RTN","PRS8AC",172,0)
 .S X=DAY(DY-1,"rN")_$E(DAY(DY,"r"),$L(DAY(DY-1,"rN"))+1,96)
"RTN","PRS8AC",173,0)
 .S DAY(DY,"r")=X
"RTN","PRS8AC",174,0)
 ;
"RTN","PRS8AC",175,0)
END ; --- all done here
"RTN","PRS8AC",176,0)
 K CNT,OC,Q,S,SB,SL,SLP,T,VAR1,X,Y Q
"RTN","PRS8AC",177,0)
 ;
"RTN","PRS8AC",178,0)
SET ; --- set WK variable
"RTN","PRS8AC",179,0)
 I (DY=0&(T<97))!(DY=14&(T>96))!(DY>14) Q
"RTN","PRS8AC",180,0)
 S ZZ=WK,WK=$S(DY>7:2,1:1)
"RTN","PRS8AC",181,0)
 I TYP'["D",DY=7,T>96 S WK=2
"RTN","PRS8AC",182,0)
 S $P(WK(WK),"^",Y)=$P(WK(WK),"^",Y)+1
"RTN","PRS8AC",183,0)
 ;
"RTN","PRS8AC",184,0)
 ; The passing of Public Law 106-554 allows taking ML in hours.
"RTN","PRS8AC",185,0)
 ; ML will now be recorded in 15 minute segments in the WK(3) array
"RTN","PRS8AC",186,0)
 ; for employees entitled to take ML in hours.  PRS*4.0*69
"RTN","PRS8AC",187,0)
 ;
"RTN","PRS8AC",188,0)
 I VAR1="M",$$MLINHRS^PRSAENT(DFN) D
"RTN","PRS8AC",189,0)
 . S WK=3,Y=11
"RTN","PRS8AC",190,0)
 . S $P(WK(WK),"^",Y)=$P(WK(WK),"^",Y)+1
"RTN","PRS8AC",191,0)
 ;
"RTN","PRS8AC",192,0)
 ; IF a part-time employee and they have either LWOP or Non-Pay
"RTN","PRS8AC",193,0)
 ; THEN decrement total hours for the week and the pay period.
"RTN","PRS8AC",194,0)
 ; PRS*4.0*52.
"RTN","PRS8AC",195,0)
 ;
"RTN","PRS8AC",196,0)
 I "Wn"[VAR1,TYP["P" S TH=TH-1,TH(WK)=TH(WK)-1
"RTN","PRS8AC",197,0)
 S WK=ZZ Q
"RTN","PRSPSAPU")
0^1^B39884801^B39830658
"RTN","PRSPSAPU",1,0)
PRSPSAPU ;WOIFO/JAH - PT Physician, supervisor approval utils ;01/22/05
"RTN","PRSPSAPU",2,0)
 ;;4.0;PAID;**93,125**;Sep 21, 1995;Build 6
"RTN","PRSPSAPU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSPSAPU",4,0)
 Q
"RTN","PRSPSAPU",5,0)
ONEPTP(TLE) ; get one or all ptp's from a TLE
"RTN","PRSPSAPU",6,0)
 ; if the selection hasn't a memo or hasn't an ESR to be approved
"RTN","PRSPSAPU",7,0)
 ; then inform and re-ask
"RTN","PRSPSAPU",8,0)
 ; 
"RTN","PRSPSAPU",9,0)
 ; return PRSIEN for successful PTP selection
"RTN","PRSPSAPU",10,0)
 ; return 0 for all PTP's in T&L
"RTN","PRSPSAPU",11,0)
 ; return -1 for abort/timeout
"RTN","PRSPSAPU",12,0)
 ;
"RTN","PRSPSAPU",13,0)
 N ALL,PTP,OUT
"RTN","PRSPSAPU",14,0)
 S (PTP,ALL,OUT)=0
"RTN","PRSPSAPU",15,0)
 F  D  Q:(OUT!(PTP>0)!(ALL))
"RTN","PRSPSAPU",16,0)
 .  S PTP=$$ALL1PTP(TLE)
"RTN","PRSPSAPU",17,0)
 .  I PTP=0 S ALL=1 Q  ; all ptp's were selected
"RTN","PRSPSAPU",18,0)
 .  I PTP<0 S OUT=1 Q  ; user uparrow or timeout
"RTN","PRSPSAPU",19,0)
 .  I PTP>0,'$D(^PRST(458.7,"B",PTP)) W !!,"There are no Service Level Memoranda on file for ",$P(^PRSPC(PTP,0),U) S PTP=0
"RTN","PRSPSAPU",20,0)
 .  I PTP>0,'$D(^PRST(458,"ASA",PTP)) W !!,"There are no daily ESR's pending approval for ",$P(^PRSPC(PTP,0),U) S PTP=0
"RTN","PRSPSAPU",21,0)
 I ALL S PTP=0
"RTN","PRSPSAPU",22,0)
 I OUT S PTP=-1
"RTN","PRSPSAPU",23,0)
 Q PTP
"RTN","PRSPSAPU",24,0)
 ;
"RTN","PRSPSAPU",25,0)
ALL1PTP(TLE) ; ask for one part time physician from a TLE or ALL
"RTN","PRSPSAPU",26,0)
 I TLE'?1A.E,TLE'>0 Q PRSIEN
"RTN","PRSPSAPU",27,0)
 N DIC,PRSIEN,D,Y,DUOUT,DTOUT
"RTN","PRSPSAPU",28,0)
 S PRSIEN=""
"RTN","PRSPSAPU",29,0)
 S DIC("A")="Select an EMPLOYEE or press RETURN for ALL: "
"RTN","PRSPSAPU",30,0)
 S DIC(0)="AEQM"
"RTN","PRSPSAPU",31,0)
 S DIC="^PRSPC("
"RTN","PRSPSAPU",32,0)
 S DIC("S")="I $P(^(0),""^"",8)=TLE"
"RTN","PRSPSAPU",33,0)
 ; start look up with ATL xref
"RTN","PRSPSAPU",34,0)
 S D="ATL"_TLE
"RTN","PRSPSAPU",35,0)
 W !
"RTN","PRSPSAPU",36,0)
 D IX^DIC
"RTN","PRSPSAPU",37,0)
 ;
"RTN","PRSPSAPU",38,0)
 ; user hit return for all (return 0)
"RTN","PRSPSAPU",39,0)
 I Y=-1,'($D(DUOUT)!$D(DTOUT)) D
"RTN","PRSPSAPU",40,0)
 .  S PRSIEN=0
"RTN","PRSPSAPU",41,0)
 E  D
"RTN","PRSPSAPU",42,0)
 .  S PRSIEN=+Y
"RTN","PRSPSAPU",43,0)
 Q PRSIEN
"RTN","PRSPSAPU",44,0)
 ;
"RTN","PRSPSAPU",45,0)
UPESRST(PPI,PRSIEN,PRSD) ;update ESR DAILY STATUS
"RTN","PRSPSAPU",46,0)
 N DIE,DR,DA
"RTN","PRSPSAPU",47,0)
 S DA(2)=$G(PPI),DA(1)=$G(PRSIEN),DA=$G(PRSD)
"RTN","PRSPSAPU",48,0)
 S DR="146///SIGNED;149///MANUAL POST"
"RTN","PRSPSAPU",49,0)
 S DIE="^PRST(458,"_DA(2)_",""E"","_DA(1)_",""D"","
"RTN","PRSPSAPU",50,0)
 D ^DIE
"RTN","PRSPSAPU",51,0)
 Q
"RTN","PRSPSAPU",52,0)
ESRDTS(ESRDTS,PRSIEN,PPI) ; Return signed dates from PTP's ESR
"RTN","PRSPSAPU",53,0)
 ; return array ESRDTS subscripted sequentially from 1
"RTN","PRSPSAPU",54,0)
 ;    ESRDTS(1) = Tue 2-NOV-04
"RTN","PRSPSAPU",55,0)
 ;    ESRDTS(2) = Fri 5-NOV-04
"RTN","PRSPSAPU",56,0)
 N PRSD,ITEMS,PRSDTS
"RTN","PRSPSAPU",57,0)
 S PRSDTS=$G(^PRST(458,PPI,2))
"RTN","PRSPSAPU",58,0)
 S (PRSD,ITEMS)=0
"RTN","PRSPSAPU",59,0)
 F  S PRSD=$O(^TMP($J,"PRSPSAP",PRSIEN,PPI,PRSD)) Q:PRSD'>0  D
"RTN","PRSPSAPU",60,0)
 .  S ITEMS=ITEMS+1
"RTN","PRSPSAPU",61,0)
 .  S ESRDTS(ITEMS)=PRSD_U_$P(PRSDTS,U,PRSD)
"RTN","PRSPSAPU",62,0)
 Q
"RTN","PRSPSAPU",63,0)
DISPLAY(PRSIEN,PPI,CNT) ;display PPI signed esr days for super review/action
"RTN","PRSPSAPU",64,0)
 ; RETURN array CNT
"RTN","PRSPSAPU",65,0)
 ; CNT = count of days
"RTN","PRSPSAPU",66,0)
 ; CNT(1)= days w/status from supervisor during this option
"RTN","PRSPSAPU",67,0)
 ; PGLNS = lines on current page
"RTN","PRSPSAPU",68,0)
 ; DYLNS = lines in a day
"RTN","PRSPSAPU",69,0)
 ; 
"RTN","PRSPSAPU",70,0)
 N I,PRSD,ESRDTS,ESEG,ESR,PGLNS,DAYLNS,OUT
"RTN","PRSPSAPU",71,0)
 D HDRESR^PRSPSAP1(PRSIEN,PPI,.PGLNS)
"RTN","PRSPSAPU",72,0)
 ;
"RTN","PRSPSAPU",73,0)
 D ESRDTS^PRSPSAPU(.ESRDTS,PRSIEN,PPI)
"RTN","PRSPSAPU",74,0)
 S (PRSD,CNT,CNT(1),OUT)=0
"RTN","PRSPSAPU",75,0)
 F  S PRSD=$O(^TMP($J,"PRSPSAP",PRSIEN,PPI,PRSD)) Q:PRSD'>0!(OUT)  D
"RTN","PRSPSAPU",76,0)
 .  I $Y>(IOSL-6) S OUT=$$ASK^PRSLIB00() D HDRESR^PRSPSAP1(PRSIEN,PPI,.PGLNS)
"RTN","PRSPSAPU",77,0)
 .  Q:OUT
"RTN","PRSPSAPU",78,0)
 .  D GETESR^PRSPSAP1(.ESR,PPI,PRSIEN,PRSD)
"RTN","PRSPSAPU",79,0)
 .  S CNT=CNT+1
"RTN","PRSPSAPU",80,0)
 .  W !,CNT
"RTN","PRSPSAPU",81,0)
 .  D DAY(.DAYLNS,ESRDTS(CNT),.ESR,PRSIEN,PPI)
"RTN","PRSPSAPU",82,0)
 .  S PGLNS=PGLNS+DAYLNS
"RTN","PRSPSAPU",83,0)
 Q
"RTN","PRSPSAPU",84,0)
 ;
"RTN","PRSPSAPU",85,0)
DAY(LN,EXTDAY,ESR,PRSIEN,PPI) ; write a day, return # of lines.
"RTN","PRSPSAPU",86,0)
 N STE,ESEG,REMARKS,START,STOP,MEAL,HOURS,STATUSI,LCNT
"RTN","PRSPSAPU",87,0)
 S LN=0
"RTN","PRSPSAPU",88,0)
 S HOURS=""
"RTN","PRSPSAPU",89,0)
 W ?3,$P(EXTDAY,U,2)
"RTN","PRSPSAPU",90,0)
 W ?17,ESR("TODEXT")
"RTN","PRSPSAPU",91,0)
 ; if tour is too wide for column move down a line
"RTN","PRSPSAPU",92,0)
 I $L(ESR("TODEXT"))>16 W ! S LN=LN+1
"RTN","PRSPSAPU",93,0)
 ;
"RTN","PRSPSAPU",94,0)
 F ESEG=1:5:31 Q:($P(ESR("WORK"),U,ESEG)="")  D
"RTN","PRSPSAPU",95,0)
 .   I ESEG>1 W !
"RTN","PRSPSAPU",96,0)
 .;   start
"RTN","PRSPSAPU",97,0)
 .   S START=$P(ESR("WORK"),U,ESEG)
"RTN","PRSPSAPU",98,0)
 .   S STOP=$P(ESR("WORK"),U,ESEG+1)
"RTN","PRSPSAPU",99,0)
 .   S MEAL=$P(ESR("WORK"),U,ESEG+4)
"RTN","PRSPSAPU",100,0)
 .   W ?33,START
"RTN","PRSPSAPU",101,0)
 .   I START'["No work:" D
"RTN","PRSPSAPU",102,0)
 ..    W "-"
"RTN","PRSPSAPU",103,0)
 ..    S HOURS=$$ELAPSE^PRSPESR2(MEAL,START,STOP)
"RTN","PRSPSAPU",104,0)
 .;   stop
"RTN","PRSPSAPU",105,0)
 .   W STOP
"RTN","PRSPSAPU",106,0)
 .;  type of time
"RTN","PRSPSAPU",107,0)
 .   W ?49,$$TTE($P(ESR("WORK"),U,ESEG+2))
"RTN","PRSPSAPU",108,0)
 .;   remarks - use 458.02 to convert to external
"RTN","PRSPSAPU",109,0)
 .   S REMARKS=$P(ESR("WORK"),U,ESEG+3)
"RTN","PRSPSAPU",110,0)
 .   I REMARKS>0 D
"RTN","PRSPSAPU",111,0)
 ..     S LN=LN+1
"RTN","PRSPSAPU",112,0)
 ..     W !,?34,"Remarks: ",$$EXTERNAL^DILFD(458.02,44,"",REMARKS)
"RTN","PRSPSAPU",113,0)
 .;   hours and meal
"RTN","PRSPSAPU",114,0)
 .   W ?61,HOURS,?68,MEAL
"RTN","PRSPSAPU",115,0)
 ;   display PTP remarks (if any)
"RTN","PRSPSAPU",116,0)
    I ESR("RMK")]"" D
"RTN","PRSPSAPU",117,0)
 .     W !,?2,"Physician Remarks: "
"RTN","PRSPSAPU",118,0)
 .     D WRAP(.LCNT,ESR("RMK"),21,66)
"RTN","PRSPSAPU",119,0)
 .     S LN=LN+LCNT
"RTN","PRSPSAPU",120,0)
 S STATUSI=$G(^TMP($J,"PRSPSAP",PRSIEN,PPI,+EXTDAY,1))
"RTN","PRSPSAPU",121,0)
 W ?72,$$STATUSE(STATUSI)
"RTN","PRSPSAPU",122,0)
 Q
"RTN","PRSPSAPU",123,0)
GETDAY(ESRDY,ESRDTS,ESR,CNT,PRSIEN,PPI) ; RETURN write a day IN ESRDY ARRAY
"RTN","PRSPSAPU",124,0)
 N BLANKS,LN,ESEG,START
"RTN","PRSPSAPU",125,0)
 S LN=1
"RTN","PRSPSAPU",126,0)
 S BLANKS="                                       "
"RTN","PRSPSAPU",127,0)
 S ESRDY(LN)="   "_$P(ESRDTS(CNT),U,2)
"RTN","PRSPSAPU",128,0)
 S ESRDY(LN)=$E(ESRDY(LN)_BLANKS,1,18)_ESR("TODEXT")
"RTN","PRSPSAPU",129,0)
 ; if tour is too wide for the column move down a line for the work
"RTN","PRSPSAPU",130,0)
 I $L(ESR("TODEXT"))>16 S LN=LN+1,ESRDY(LN)=""
"RTN","PRSPSAPU",131,0)
 ;
"RTN","PRSPSAPU",132,0)
 F ESEG=1:5:31 Q:($P(ESR("WORK"),U,ESEG)="")  D
"RTN","PRSPSAPU",133,0)
 .   I ESEG>1 W !
"RTN","PRSPSAPU",134,0)
 .;   start
"RTN","PRSPSAPU",135,0)
 .   S START=$P(ESR("WORK"),U,ESEG)
"RTN","PRSPSAPU",136,0)
 .   S ESRDY(LN)=$E(ESRDY(LN)_BLANKS,1,35)_START
"RTN","PRSPSAPU",137,0)
 .   I START'["No work-signed by" S ESRDY(LN)=ESRDY(LN)_"-"
"RTN","PRSPSAPU",138,0)
 .;   stop
"RTN","PRSPSAPU",139,0)
 .   S ESRDY(LN)=ESRDY(LN)_$P(ESR("WORK"),U,ESEG+1)
"RTN","PRSPSAPU",140,0)
 .;  type of time
"RTN","PRSPSAPU",141,0)
 .   S ESRDY(LN)=$E(ESRDY(LN)_BLANKS,1,51)_$$TTE($P(ESR("WORK"),U,ESEG+2))
"RTN","PRSPSAPU",142,0)
 .;   remarks
"RTN","PRSPSAPU",143,0)
 .   S ESRDY(LN)=$E(ESRDY(LN)_BLANKS,1,54)_$P(ESR("WORK"),U,ESEG+3)
"RTN","PRSPSAPU",144,0)
 .;   meal
"RTN","PRSPSAPU",145,0)
 .   S ESRDY(LN)=$E(ESRDY(LN)_BLANKS,1,68)_$P(ESR("WORK"),U,ESEG+4)
"RTN","PRSPSAPU",146,0)
 .   S ST=$$STATUSE($G(^TMP($J,"PRSPSAP",PRSIEN,PPI,+ESRDTS(CNT),1)))
"RTN","PRSPSAPU",147,0)
 .   S ESRDY(LN)=$E(ESRDY(LN),1,71)_ST
"RTN","PRSPSAPU",148,0)
 .   S LN=LN+1,ESRDY(LN)=""
"RTN","PRSPSAPU",149,0)
 Q
"RTN","PRSPSAPU",150,0)
 ;
"RTN","PRSPSAPU",151,0)
TTE(CODE) ; return external type of time
"RTN","PRSPSAPU",152,0)
 N K
"RTN","PRSPSAPU",153,0)
 Q:$G(CODE)="" CODE
"RTN","PRSPSAPU",154,0)
 S K=$O(^PRST(457.3,"B",CODE,0))
"RTN","PRSPSAPU",155,0)
 Q $P($G(^PRST(457.3,+K,0)),"^",2)
"RTN","PRSPSAPU",156,0)
 ;
"RTN","PRSPSAPU",157,0)
STATUSE(ST) ; return external form of supervisor action status
"RTN","PRSPSAPU",158,0)
 S ST=$G(ST)
"RTN","PRSPSAPU",159,0)
 Q $S(ST="B":"Bypass",ST="R":"Resubmit",ST="A":"Approved",1:"")
"RTN","PRSPSAPU",160,0)
 ;
"RTN","PRSPSAPU",161,0)
CLRTCDY(PPI,PRSIEN,PRSD,EST) ;function true (1) for success otherwise 0
"RTN","PRSPSAPU",162,0)
 ;  clear a timecard day (2,3,10 nodes) if status is (T) timekeeper
"RTN","PRSPSAPU",163,0)
 ;  clear work, posting status and remove approved status from ESR day.
"RTN","PRSPSAPU",164,0)
 ; INPUT: PPI,PRSIEN,PRSD: package standard
"RTN","PRSPSAPU",165,0)
 ;        EST : optional, valid ESR DAILY STATUS internal value
"RTN","PRSPSAPU",166,0)
 ;
"RTN","PRSPSAPU",167,0)
 Q:($G(PPI)'>0)!($G(PRSIEN)'>0)!($G(PRSD)'>0) 0
"RTN","PRSPSAPU",168,0)
 Q:'$D(^PRST(458,PPI,"E",PRSIEN,"D",PRSD,0)) 0
"RTN","PRSPSAPU",169,0)
 N TCSTAT
"RTN","PRSPSAPU",170,0)
 S TCSTAT=$$TCSTAT^PRSPSAP2(PPI,PRSIEN)
"RTN","PRSPSAPU",171,0)
 Q:$G(TCSTAT)'="T" 0
"RTN","PRSPSAPU",172,0)
 ;
"RTN","PRSPSAPU",173,0)
 ; kill the timecard work nodes
"RTN","PRSPSAPU",174,0)
 K ^PRST(458,PPI,"E",PRSIEN,"D",PRSD,2),^(3),^(10)
"RTN","PRSPSAPU",175,0)
 ;
"RTN","PRSPSAPU",176,0)
 ; ONLY if a valid ESR daily status is passed then set it
"RTN","PRSPSAPU",177,0)
 N VALID
"RTN","PRSPSAPU",178,0)
 D CHK^DIE(458.02,146,"",$G(EST),.VALID)
"RTN","PRSPSAPU",179,0)
 Q:VALID["^" 1
"RTN","PRSPSAPU",180,0)
 ;
"RTN","PRSPSAPU",181,0)
 N IENS,PRSFDA
"RTN","PRSPSAPU",182,0)
 S IENS=PRSD_","_PRSIEN_","_PPI_","
"RTN","PRSPSAPU",183,0)
 S PRSFDA(458.02,IENS,146)=EST
"RTN","PRSPSAPU",184,0)
 D FILE^DIE("","PRSFDA")
"RTN","PRSPSAPU",185,0)
 D MSG^DIALOG()
"RTN","PRSPSAPU",186,0)
 Q 1
"RTN","PRSPSAPU",187,0)
 ;
"RTN","PRSPSAPU",188,0)
WRAP(LNS,STR,TAB,WID) ; format a long message string to break lines at words
"RTN","PRSPSAPU",189,0)
 ; TAB is left margin
"RTN","PRSPSAPU",190,0)
 ; WID is right margin
"RTN","PRSPSAPU",191,0)
 ; return LNS number of lines it took to write
"RTN","PRSPSAPU",192,0)
 N WORD,I,WC,COLW,W1,W2
"RTN","PRSPSAPU",193,0)
 S WC=0,WORD=""
"RTN","PRSPSAPU",194,0)
 S COLW=WID-TAB+1
"RTN","PRSPSAPU",195,0)
 W ?$G(TAB)
"RTN","PRSPSAPU",196,0)
 S LNS=1
"RTN","PRSPSAPU",197,0)
 F I=1:1:$L(STR," ") D
"RTN","PRSPSAPU",198,0)
 .  S WORD=$P(STR," ",I)
"RTN","PRSPSAPU",199,0)
 .  Q:WORD=""
"RTN","PRSPSAPU",200,0)
 .;   break words longer than the width of the column
"RTN","PRSPSAPU",201,0)
 .  F  Q:($L(WORD)<(COLW+1))  D
"RTN","PRSPSAPU",202,0)
 ..    S W1=$E(WORD,1,COLW-1)_"-"
"RTN","PRSPSAPU",203,0)
 ..    S W2=$E(WORD,COLW,$L(WORD))
"RTN","PRSPSAPU",204,0)
 ..    S WORD=W1 D WW
"RTN","PRSPSAPU",205,0)
 ..    S WORD=W2
"RTN","PRSPSAPU",206,0)
 .  D WW
"RTN","PRSPSAPU",207,0)
 Q
"RTN","PRSPSAPU",208,0)
WW ; Write Word
"RTN","PRSPSAPU",209,0)
 I ($X+$L(WORD))>WID D
"RTN","PRSPSAPU",210,0)
 .   I WC>0 W !,?$G(TAB) S LNS=LNS+1,WC=0
"RTN","PRSPSAPU",211,0)
 W WORD," " S WC=WC+1
"RTN","PRSPSAPU",212,0)
 Q
"RTN","PRSPSAPU",213,0)
 ;
"RTN","PRSPSAPU",214,0)
 ;
"RTN","PRSPSAPU",215,0)
 ;===============================================================
"RTN","PRSPSAPU",216,0)
 ;
"RTN","PRSPSAPU",217,0)
AMT(START,STOP,MEAL) ; return decimal hours between times
"RTN","PRSPSAPU",218,0)
 ; times are in PAID timecard work node format. (e.g. 04:30P )
"RTN","PRSPSAPU",219,0)
 N AMT,X
"RTN","PRSPSAPU",220,0)
 S AMT=$$ELAPSE^PRSPESR2(MEAL,START,STOP)
"RTN","PRSPSAPU",221,0)
 S X=$P(AMT,":",2) S X=$S(X=30:5,X=15:25,X=45:75,1:0)
"RTN","PRSPSAPU",222,0)
 S AMT=+$P(AMT,":",1)_"."_X
"RTN","PRSPSAPU",223,0)
 Q AMT
"VER")
8.0^22.0
"BLD",8105,6)
^114
**END**
**END**
