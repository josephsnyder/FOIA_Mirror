Released PRS*4*107 SEQ #110
Extracted from mail message
**KIDS**:PRS*4.0*107^

**INSTALL NAME**
PRS*4.0*107
"BLD",7855,0)
PRS*4.0*107^PAID^0^3081224^y
"BLD",7855,1,0)
^^6^6^3081224^^^
"BLD",7855,1,1,0)
This patch addresses three issues:
"BLD",7855,1,2,0)
1. Erroneous data entries in file #458
"BLD",7855,1,3,0)
2. The E node in file #458 is not setting 
"BLD",7855,1,4,0)
   correctly sometimes
"BLD",7855,1,5,0)
3. Part time MD's (Pay Plan Q) are getting paid more than
"BLD",7855,1,6,0)
   80 hours. 
"BLD",7855,4,0)
^9.64PA^^
"BLD",7855,6.3)
2
"BLD",7855,"ABPKG")
n
"BLD",7855,"INID")
^n
"BLD",7855,"INIT")
START^PRSXP107
"BLD",7855,"KRN",0)
^9.67PA^779.2^20
"BLD",7855,"KRN",.4,0)
.4
"BLD",7855,"KRN",.401,0)
.401
"BLD",7855,"KRN",.402,0)
.402
"BLD",7855,"KRN",.403,0)
.403
"BLD",7855,"KRN",.5,0)
.5
"BLD",7855,"KRN",.84,0)
.84
"BLD",7855,"KRN",3.6,0)
3.6
"BLD",7855,"KRN",3.8,0)
3.8
"BLD",7855,"KRN",9.2,0)
9.2
"BLD",7855,"KRN",9.8,0)
9.8
"BLD",7855,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",7855,"KRN",9.8,"NM",1,0)
PRSDSERV^^0^B47963621
"BLD",7855,"KRN",9.8,"NM",3,0)
PRS8DR^^0^B14138370
"BLD",7855,"KRN",9.8,"NM",4,0)
PRSXP107^^0^B10120114
"BLD",7855,"KRN",9.8,"NM","B","PRS8DR",3)

"BLD",7855,"KRN",9.8,"NM","B","PRSDSERV",1)

"BLD",7855,"KRN",9.8,"NM","B","PRSXP107",4)

"BLD",7855,"KRN",19,0)
19
"BLD",7855,"KRN",19.1,0)
19.1
"BLD",7855,"KRN",101,0)
101
"BLD",7855,"KRN",409.61,0)
409.61
"BLD",7855,"KRN",771,0)
771
"BLD",7855,"KRN",779.2,0)
779.2
"BLD",7855,"KRN",870,0)
870
"BLD",7855,"KRN",8989.51,0)
8989.51
"BLD",7855,"KRN",8989.52,0)
8989.52
"BLD",7855,"KRN",8994,0)
8994
"BLD",7855,"KRN","B",.4,.4)

"BLD",7855,"KRN","B",.401,.401)

"BLD",7855,"KRN","B",.402,.402)

"BLD",7855,"KRN","B",.403,.403)

"BLD",7855,"KRN","B",.5,.5)

"BLD",7855,"KRN","B",.84,.84)

"BLD",7855,"KRN","B",3.6,3.6)

"BLD",7855,"KRN","B",3.8,3.8)

"BLD",7855,"KRN","B",9.2,9.2)

"BLD",7855,"KRN","B",9.8,9.8)

"BLD",7855,"KRN","B",19,19)

"BLD",7855,"KRN","B",19.1,19.1)

"BLD",7855,"KRN","B",101,101)

"BLD",7855,"KRN","B",409.61,409.61)

"BLD",7855,"KRN","B",771,771)

"BLD",7855,"KRN","B",779.2,779.2)

"BLD",7855,"KRN","B",870,870)

"BLD",7855,"KRN","B",8989.51,8989.51)

"BLD",7855,"KRN","B",8989.52,8989.52)

"BLD",7855,"KRN","B",8994,8994)

"BLD",7855,"QDEF")
^^^^^^^^^^YES
"BLD",7855,"QUES",0)
^9.62^^
"BLD",7855,"REQB",0)
^9.611^1^1
"BLD",7855,"REQB",1,0)
PRS*4.0*116^2
"BLD",7855,"REQB","B","PRS*4.0*116",1)

"INIT")
START^PRSXP107
"MBREQ")
0
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
107^3081224
"PKG",408,22,1,"PAH",1,1,0)
^^6^6^3081224
"PKG",408,22,1,"PAH",1,1,1,0)
This patch addresses three issues:
"PKG",408,22,1,"PAH",1,1,2,0)
1. Erroneous data entries in file #458
"PKG",408,22,1,"PAH",1,1,3,0)
2. The E node in file #458 is not setting 
"PKG",408,22,1,"PAH",1,1,4,0)
   correctly sometimes
"PKG",408,22,1,"PAH",1,1,5,0)
3. Part time MD's (Pay Plan Q) are getting paid more than
"PKG",408,22,1,"PAH",1,1,6,0)
   80 hours. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PRS8DR")
0^3^B14138370^B13372030
"RTN","PRS8DR",1,0)
PRS8DR ;HISC/MRL,JAH/WCIOFO-DECOMPOSITION, DRIVER ;4/09/2007
"RTN","PRS8DR",2,0)
 ;;4.0;PAID;**22,29,56,90,111,112,107**;Sep 21, 1995;Build 2
"RTN","PRS8DR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8DR",4,0)
 ;
"RTN","PRS8DR",5,0)
 ;This routine determines whether or not the parameters necessary
"RTN","PRS8DR",6,0)
 ;to decompose time are in existence.  The majority of variables
"RTN","PRS8DR",7,0)
 ;involving processing an individual employee are defined in this
"RTN","PRS8DR",8,0)
 ;routine.
"RTN","PRS8DR",9,0)
 ;
"RTN","PRS8DR",10,0)
 ;The following lines establish variables necessary to process a
"RTN","PRS8DR",11,0)
 ;specific employees time for the specified pay period.
"RTN","PRS8DR",12,0)
 ;
"RTN","PRS8DR",13,0)
 ;Called by Routines:  PRS8, PRS8DR (tag 1)
"RTN","PRS8DR",14,0)
 ;
"RTN","PRS8DR",15,0)
 N PRVAL,RESTORE
"RTN","PRS8DR",16,0)
 ;
"RTN","PRS8DR",17,0)
 D ONE^PRS8CV ;clean up variables
"RTN","PRS8DR",18,0)
 S SAVE=+$G(SAVE),SEE=+$G(SEE)
"RTN","PRS8DR",19,0)
 S TMTD=$G(^PRST(458,+PY,"E",DFN,0)),TMTD=$S($P(TMTD,"^",2)="X":1,1:0)
"RTN","PRS8DR",20,0)
 K WK F I=1,2,3 S WK(I)="" ;weekly totals (wk3=misc data)
"RTN","PRS8DR",21,0)
 D ^PRSAENT S VAL="" ;get entitlement (ENT)
"RTN","PRS8DR",22,0)
 I PP="S" G END ;Manila citizen/don't decompose/no stub
"RTN","PRS8DR",23,0)
 I $G(PB)["$" G STUB^PRS8CR ;don't decompose stipend/create stub
"RTN","PRS8DR",24,0)
 ; Set NAWS to type of AWS
"RTN","PRS8DR",25,0)
 N NAWS
"RTN","PRS8DR",26,0)
 S NAWS=0
"RTN","PRS8DR",27,0)
 I "KM"[$E(AC,1),$E(AC,2)=1,NH=72 S NAWS="36/40 AWS"
"RTN","PRS8DR",28,0)
 I $E(AC,1)="M",$E(AC,2)=2,NH=80 S NAWS="9Mo AWS"
"RTN","PRS8DR",29,0)
 ;
"RTN","PRS8DR",30,0)
 I "^P^X^"[(U_$P($G(^PRST(458,+PY,"E",DFN,0)),"^",2)_U) S RESTORE=1
"RTN","PRS8DR",31,0)
 D AUTOPINI^PRS8(+PY,+DFN,$G(RESTORE),.PRVAL) ; remove auto-posted data
"RTN","PRS8DR",32,0)
 S DOUB=0 I $E(ENT,26),$E(ENT,29) S DOUB=1 ;count standby & oncall same
"RTN","PRS8DR",33,0)
 S FLX="" S FLX=$P($G(^PRST(458,+PY,"E",DFN,0)),"^",6)
"RTN","PRS8DR",34,0)
 I +NAWS=36 S FLX="C"
"RTN","PRS8DR",35,0)
 S (SST,TAL)="",X=$P(C0,"^",8) I X'="" D  ;T&L Unit
"RTN","PRS8DR",36,0)
 .S X=$O(^PRST(455.5,"B",X,0)) ;get ien
"RTN","PRS8DR",37,0)
 .S TAL=$G(^PRST(455.5,+X,0)),X=$P(TAL,"^",8) ;get sleep start time
"RTN","PRS8DR",38,0)
 .I $L(X) S (NDAY,LAST,Y,Y1)=0 D 15^PRS8SU
"RTN","PRS8DR",39,0)
 .S SST=$S(+X:X,1:93) K X,Y1,LAST,X ;sleep start time
"RTN","PRS8DR",40,0)
 .K SL,SB,ST ;make sure standby variable don't exist
"RTN","PRS8DR",41,0)
 S (CAMISC,CYA,CYA2806,WPCYA,LU)=0 ; << ADDED >> calendar year adjust./leave used in pp
"RTN","PRS8DR",42,0)
 S (NH(1),NH(2))=0 ;normal hrs/pp total/week(1)/week(2)
"RTN","PRS8DR",43,0)
 S (TH,TH(1),TH(2))=0 ;total hours
"RTN","PRS8DR",44,0)
 N CT S (CT(1),CT(2))=0 ; counter for compensatory time
"RTN","PRS8DR",45,0)
 K DWK S DWK=0 ;count of days worked - for intermittents
"RTN","PRS8DR",46,0)
 S NH=NH/.25 ;turn Norm hrs into 15min increments
"RTN","PRS8DR",47,0)
 K TOUR S (TOUR(1),TOUR(2))="" ;tour code for wg/week(1)/week(2)
"RTN","PRS8DR",48,0)
 K TYP S TYP="" I $E(ENT)="D"!($E(ENT,1,2)="0D") S TYP=TYP_"D" ;daily pay basis
"RTN","PRS8DR",49,0)
 I PP?1N.E!(PP="U") S TYP=TYP_"W" ;wagegrade
"RTN","PRS8DR",50,0)
 I PP'="","KM"[PP S TYP=TYP_"N" ;nurse
"RTN","PRS8DR",51,0)
 I +$E(AC,2)=1,NH=192 S TYP=TYP_"B" ;baylor plan
"RTN","PRS8DR",52,0)
 I $G(PMP)'="","EF"[PMP S TYP=TYP_"H" ;Nurse Hybrid
"RTN","PRS8DR",53,0)
 I $E($G(AC),2)=3 S TYP=TYP_"I" ;intermittent
"RTN","PRS8DR",54,0)
 I NH>320 S TYP=TYP_"F" I NH'>448 S TYP=TYP_"f" ;firefighter
"RTN","PRS8DR",55,0)
 ; Nurses on the 9month AWS will be treated as FT employees during the 9 months
"RTN","PRS8DR",56,0)
 ; that they are working.  Prevent a "P" from being added to TYP.
"RTN","PRS8DR",57,0)
 I NH,NH'>319,$E(AC,2)'=1 S TYP=TYP_"P" ;part-time
"RTN","PRS8DR",58,0)
 I PP="L",$E(AC,2)=2 S TYP=TYP_"d" ;doctor
"RTN","PRS8DR",59,0)
 I PP="L",$E(AC,2)=1 S TYP=TYP_"dR" ;doctor/resident or intern
"RTN","PRS8DR",60,0)
 I PP="Q",$E(AC,2)=2 S TYP=TYP_"d" ;doctor
"RTN","PRS8DR",61,0)
 I PP="Q",$E(AC,2)=1 S TYP=TYP_"dR" ;doctor/resident or intern
"RTN","PRS8DR",62,0)
 S (PTH,PTH(1),PTH(2))=0 ;part-time hours
"RTN","PRS8DR",63,0)
 K WKL S (WKL(1),WKL(2))=0 ;count leave used in week during ND hours
"RTN","PRS8DR",64,0)
 K MEAL S $P(MEAL,"1^",14)="",MEAL=MEAL_1 ;mealtime
"RTN","PRS8DR",65,0)
 S (MILV,WCMP)=0 ;ML and PC indicators
"RTN","PRS8DR",66,0)
 S (CBCK(1),CBCK(2))=0 ;call back hrs by week counter
"RTN","PRS8DR",67,0)
 I TYP="" S TYP="*"
"RTN","PRS8DR",68,0)
 K I,PB,PP,X,X1,X2
"RTN","PRS8DR",69,0)
 D ^PRS8SU ;set up employee variables and commence decomposing
"RTN","PRS8DR",70,0)
 D ^PRS8CR
"RTN","PRS8DR",71,0)
 D:$D(PRVAL) AUTOPRES^PRS8(+PY,+DFN,.PRVAL) ; restore auto-posted data
"RTN","PRS8DR",72,0)
 I SEE D ^PRS8VW
"RTN","PRS8DR",73,0)
 ;
"RTN","PRS8DR",74,0)
END ; --- This is where we end this process
"RTN","PRS8DR",75,0)
 G ONE^PRS8CV ;clean up
"RTN","PRS8DR",76,0)
 Q
"RTN","PRS8DR",77,0)
 ;
"RTN","PRS8DR",78,0)
1 ; --- enter here to print single entry and close device
"RTN","PRS8DR",79,0)
 D ^PRS8DR,^%ZISC Q
"RTN","PRSDSERV")
0^1^B47963621^B45205157
"RTN","PRSDSERV",1,0)
PRSDSERV ;WOIFO/MGD,PLT - PAID DOWNLOAD MESSAGE SERVER ;12/3/07
"RTN","PRSDSERV",2,0)
 ;;4.0;PAID;**6,78,82,116,107**;Sep 21, 1995;Build 2
"RTN","PRSDSERV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSDSERV",4,0)
 D NOW^%DTC S TIME=% S XMPOS=1 D REC^XMS3 G:XMER'=0 EXIT
"RTN","PRSDSERV",5,0)
 S LPE=$E(XMRG,1,7) I LPE'?1"**"2N1"PDH",LPE'="****PDH" G EXIT
"RTN","PRSDSERV",6,0)
 ; EMPCNT = # emp in this mail message
"RTN","PRSDSERV",7,0)
 ; SEQNUM = Mail message sequence number if more than one message
"RTN","PRSDSERV",8,0)
 S EMPCNT=+$E(XMRG,9,12),SEQNUM=$E(XMRG,13,16),TYPE=$E(XMRG,23)
"RTN","PRSDSERV",9,0)
 S DATE=$E(XMRG,24,31),STA="",SUB="TMP"
"RTN","PRSDSERV",10,0)
 I "IEPTD"'[TYPE G EXIT
"RTN","PRSDSERV",11,0)
 ; Check to see if the message was previously loaded
"RTN","PRSDSERV",12,0)
 I $D(^PRSD(450.12,"B",XMZ)) G EXIT
"RTN","PRSDSERV",13,0)
 S MTYPE=$S(TYPE="I":"Initial",TYPE="E":"Edit & Update",TYPE="P":"Payrun",TYPE="T":"Transfer",1:"")
"RTN","PRSDSERV",14,0)
 ; Set Lines Per Employee (LPE) for the correct interface
"RTN","PRSDSERV",15,0)
 S LPE=$E(LPE,3,4),LPE=$S(LPE?2N:+LPE,TYPE="I":20,(TYPE="E")!(TYPE="T"):15,TYPE="P":9,1:0)
"RTN","PRSDSERV",16,0)
 D REC^XMS3 G:XMER'=0 EXIT S STA=$E(XMRG,1,3) I STA'?3N G EXIT
"RTN","PRSDSERV",17,0)
 I TYPE="D" D ^PRSDDL G EXIT  ; Process Separation download
"RTN","PRSDSERV",18,0)
 ; Mark message as received.  This info is for the reports sent to the
"RTN","PRSDSERV",19,0)
 ; PAD mail group.
"RTN","PRSDSERV",20,0)
 I $D(^XTMP("PRS","MNR",TYPE,DATE,STA,SEQNUM)) D  G EXIT
"RTN","PRSDSERV",21,0)
 .S ^TMP($J,"PRSD",999)=MTYPE_" message "_SEQNUM_" received."
"RTN","PRSDSERV",22,0)
 .D SETPRS S MNR="" D PROC^PRSDPROC
"RTN","PRSDSERV",23,0)
 I $D(^PRSD(450.12,"C",TYPE_"-"_DATE_"-"_STA_"-"_SEQNUM)) G EXIT
"RTN","PRSDSERV",24,0)
 K DD,DO S DIC="^PRSD(450.12,",DIC(0)="L",X=XMZ D FILE^DICN
"RTN","PRSDSERV",25,0)
 S PRSDIEN=+Y,$P(^PRSD(450.12,+Y,0),U,2)=TYPE_"-"_DATE_"-"_STA_"-"_SEQNUM
"RTN","PRSDSERV",26,0)
 S $P(^PRSD(450.12,+Y,0),U,3)="R",$P(^PRSD(450.12,+Y,0),U,4)=TIME
"RTN","PRSDSERV",27,0)
 S ^PRSD(450.12,"C",TYPE_"-"_DATE_"-"_STA_"-"_SEQNUM,+Y)=""
"RTN","PRSDSERV",28,0)
SETPRS ;start employee record
"RTN","PRSDSERV",29,0)
 S XMPOS=2 F A=1:1:EMPCNT D SSNLOOP Q:SSN=999999999
"RTN","PRSDSERV",30,0)
 I $D(^XTMP("PRS","MNR",TYPE,DATE,STA,SEQNUM)) K ^XTMP("PRS","MNR",TYPE,DATE,STA,SEQNUM) Q
"RTN","PRSDSERV",31,0)
 S:SSN'=999999999 $P(^PRSD(450.12,PRSDIEN,0),U,3)="S"
"RTN","PRSDSERV",32,0)
EXIT K %,%H,%I,A,AA,AAA,ADDFLG,B,BB,CC,DA,DATA,DATE,DBNAME,DIC,DIK,DINUM
"RTN","PRSDSERV",33,0)
 K DLAYGO,DLID,E1,E2,EE,ECNT,ECOUNT,EMPCNT,ERRCNT,ERRFLG,ERRID,ERRIEN,SUB
"RTN","PRSDSERV",34,0)
 K ERRMSG,FLD,FLDNUM,GNUM,GRP,GRPVAL,IEN,II,LPE,LTH,MO,MFLD,MTYPE,MULT
"RTN","PRSDSERV",35,0)
 K NAME,NODE,NODE459,PIC,PIECE,PIECE459,PP,PP455,PPIEN,PRSD,PRSDIEN,RCD
"RTN","PRSDSERV",36,0)
 K RTN,RTNNUM,RTYPE,SEQNUM,SSN,SSNLINE,STA,STA450,SUM,TMPIEN,TMPLINE
"RTN","PRSDSERV",37,0)
 K TIME,TYPE,X,XCNP,XMDUZ,XMSUB,XMTEXT,XMY,Y,YR,XMPOS,XMRG,XMER,XMLOC
"RTN","PRSDSERV",38,0)
 K XMMG,MNR,PDATE,CDATE,X1,X2
"RTN","PRSDSERV",39,0)
REMSB I $D(XMZ) S XMSER="S.PRSD" D REMSBMSG^XMA1C K XMSER
"RTN","PRSDSERV",40,0)
 Q
"RTN","PRSDSERV",41,0)
SSNLOOP D REC^XMS3
"RTN","PRSDSERV",42,0)
 S SSN=$S(TYPE="I":$P(XMRG,":",2),1:$E(XMRG,4,12))
"RTN","PRSDSERV",43,0)
 S SSN=$E("000000000",$L(SSN)+1,9)_SSN
"RTN","PRSDSERV",44,0)
 ; The last employee in the last MailMan message has a SSN=999999999
"RTN","PRSDSERV",45,0)
 ; This triggers the software to begin processing the download.
"RTN","PRSDSERV",46,0)
 I SSN=999999999 D  Q
"RTN","PRSDSERV",47,0)
 .I TYPE="I" K ^XTMP("PRS","ERR")
"RTN","PRSDSERV",48,0)
 .S ^XTMP("PRS","LSN",TYPE,DATE,STA)=SEQNUM
"RTN","PRSDSERV",49,0)
 .S:$D(PRSDIEN) $P(^PRSD(450.12,PRSDIEN,0),U,3)="S" H 600
"RTN","PRSDSERV",50,0)
 .D REMSB S ECNT=0 D START,START,^PRSDERR,^PRSDSTAT S SSN=999999999
"RTN","PRSDSERV",51,0)
 S (PDATE,CDATE)=$P(TIME,".",1),X1=PDATE,X2=90 D C^%DTC S PDATE=X
"RTN","PRSDSERV",52,0)
 S ^XTMP("PRS",0)=PDATE_"^"_CDATE
"RTN","PRSDSERV",53,0)
 K KFLG S XMPOS=XMPOS-1
"RTN","PRSDSERV",54,0)
 F B=1:1:LPE D REC^XMS3 I (($L(XMRG,":")-1)'=$L(XMRG))!(TYPE="I") S TMPLINE=$E("000",$L(XMPOS)+1,3)_XMPOS,^XTMP("PRS",SUB,DATE,TYPE,STA,SSN,XMZ_"-"_TMPLINE_"-"_B)=XMRG I TYPE="T",B=6 D TRANSCK^PRSDERR
"RTN","PRSDSERV",55,0)
 I $D(KFLG) K ^XTMP("PRS",SUB,DATE,TYPE,STA,SSN),KFLG
"RTN","PRSDSERV",56,0)
 Q
"RTN","PRSDSERV",57,0)
START ; Process download
"RTN","PRSDSERV",58,0)
 ; RTYPE is used to determine which series of routines to call to
"RTN","PRSDSERV",59,0)
 ; process the download
"RTN","PRSDSERV",60,0)
 S SSN="",RTYPE=$S(TYPE="I":"LD",(TYPE="E")!(TYPE="T"):"EU",TYPE="P":"PR",1:"")
"RTN","PRSDSERV",61,0)
 F  S SSN=$O(^XTMP("PRS",SUB,DATE,TYPE,STA,SSN)) Q:SSN=""  D
"RTN","PRSDSERV",62,0)
 . L +^XTMP("PRS",SUB,DATE,TYPE,STA,SSN):0
"RTN","PRSDSERV",63,0)
 . I $T D
"RTN","PRSDSERV",64,0)
 . . S TMPIEN=$O(^XTMP("PRS",SUB,DATE,TYPE,STA,SSN,""))
"RTN","PRSDSERV",65,0)
 . . I TMPIEN'="" D
"RTN","PRSDSERV",66,0)
 . . . S RCD=^(TMPIEN),ERRFLG=""
"RTN","PRSDSERV",67,0)
 . . . D SSN
"RTN","PRSDSERV",68,0)
 . . . D:ERRFLG'="Y" LDINIT,PROC,PROC2,LDFNL,LDCMP
"RTN","PRSDSERV",69,0)
 . . . D:ERRFLG="Y" TMPERR D UNL
"RTN","PRSDSERV",70,0)
 Q
"RTN","PRSDSERV",71,0)
 ; Piece together the routine name and call the routine
"RTN","PRSDSERV",72,0)
PROC S TMPIEN="" F  S TMPIEN=$O(^XTMP("PRS",SUB,DATE,TYPE,STA,SSN,TMPIEN)) Q:TMPIEN=""  S RCD=^XTMP("PRS",SUB,DATE,TYPE,STA,SSN,TMPIEN),RTNNUM=$P(TMPIEN,"-",3) S:$L(RTNNUM)=1 RTNNUM=0_RTNNUM S RTN="^PRSD"_RTYPE_RTNNUM D:$T(@RTN)]"" @RTN
"RTN","PRSDSERV",73,0)
 Q
"RTN","PRSDSERV",74,0)
PROC2 I TYPE="P",PP'="" D ^PRSDCOMP  ;Compute calculated fields
"RTN","PRSDSERV",75,0)
 S NODE=0 F EE=1:1 S NODE=$O(^PRSPC(IEN,NODE)) Q:NODE=""  I $D(^PRSPC(IEN,NODE))#2 S DATA=^PRSPC(IEN,NODE) I $L(DATA,U)-1=$L(DATA) K ^PRSPC(IEN,NODE)
"RTN","PRSDSERV",76,0)
 K ^XTMP("PRS",SUB,DATE,TYPE,STA,SSN) Q
"RTN","PRSDSERV",77,0)
TMPERR I TYPE="P",PP="" G TMPERR1
"RTN","PRSDSERV",78,0)
 S TMPIEN="" F  S TMPIEN=$O(^XTMP("PRS",SUB,DATE,TYPE,STA,SSN,TMPIEN)) Q:TMPIEN=""  S RCD=^XTMP("PRS",SUB,DATE,TYPE,STA,SSN,TMPIEN),^XTMP("PRS","ERR",DATE,TYPE,STA,SSN,TMPIEN)=RCD
"RTN","PRSDSERV",79,0)
TMPERR1 K ^XTMP("PRS",SUB,DATE,TYPE,STA,SSN) Q
"RTN","PRSDSERV",80,0)
UNL L -^XTMP("PRS",SUB,DATE,TYPE,STA,SSN) Q
"RTN","PRSDSERV",81,0)
SSN I TYPE="P",'$D(^PRSPC("SSN",SSN)) S ERRMSG="SSN "_$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)_" not found" D ERR Q
"RTN","PRSDSERV",82,0)
 I TYPE="I" S NAME=$P(RCD,":",4)
"RTN","PRSDSERV",83,0)
 I (TYPE="E")!(TYPE="T") S NAME=$P(RCD,":",2),DATA=$E(NAME,1,27) I DATA'="" D RTS^PRSDUTIL S NAME=DATA S:TYPE="T" ^TMP($J,"PRS",NAME,SSN)=""
"RTN","PRSDSERV",84,0)
 I '$D(^PRSPC("SSN",SSN)) D ^PRSDADD K DA,DIE,DR,OLDSSN,VAIEN,VANAME Q:ERRFLG="Y"  G SSNOUT
"RTN","PRSDSERV",85,0)
 S IEN=0,IEN=$O(^PRSPC("SSN",SSN,IEN))
"RTN","PRSDSERV",86,0)
SSNOUT I TYPE="P" D ^PRSDPTYP I PP="" S ERRFLG="Y" Q
"RTN","PRSDSERV",87,0)
 S ECNT=ECNT+1
"RTN","PRSDSERV",88,0)
 Q
"RTN","PRSDSERV",89,0)
ERR K DD,DO S DIC="^PRSD(450.11,",DIC(0)="L",X=TYPE_"-"_DATE_"-"_STA D FILE^DICN I Y>0 S $P(^PRSD(450.11,+Y,0),U,3)=ERRMSG
"RTN","PRSDSERV",90,0)
 S ERRFLG="Y"
"RTN","PRSDSERV",91,0)
 Q
"RTN","PRSDSERV",92,0)
LDINIT ; Load Initial Labor Distribution Values
"RTN","PRSDSERV",93,0)
 S LDINIT=$$LDLOAD()
"RTN","PRSDSERV",94,0)
 Q
"RTN","PRSDSERV",95,0)
LDFNL ; Load Final Labor Distribution Values
"RTN","PRSDSERV",96,0)
 S LDFNL=$$LDLOAD()
"RTN","PRSDSERV",97,0)
 Q
"RTN","PRSDSERV",98,0)
LDLOAD() ; Retrieve current Labor Distribution Values from #450
"RTN","PRSDSERV",99,0)
 ;
"RTN","PRSDSERV",100,0)
 N LD,LDCC,LDCODE,LDFCP,LDPCT,PRSLD
"RTN","PRSDSERV",101,0)
 S LD=""
"RTN","PRSDSERV",102,0)
 F PRSLD=1:1:4 D
"RTN","PRSDSERV",103,0)
 . S LDCODE=$$GET1^DIQ(450.0757,PRSLD_","_IEN,1)
"RTN","PRSDSERV",104,0)
 . S LDPCT=$$GET1^DIQ(450.0757,PRSLD_","_IEN,2)
"RTN","PRSDSERV",105,0)
 . S LDCC=$$GET1^DIQ(450.0757,PRSLD_","_IEN,3)
"RTN","PRSDSERV",106,0)
 . S LDFCP=$$GET1^DIQ(450.0757,PRSLD_","_IEN,4)
"RTN","PRSDSERV",107,0)
 . S LD=LD_LDCODE_U_LDPCT_U_LDCC_U_LDFCP_U
"RTN","PRSDSERV",108,0)
 Q LD
"RTN","PRSDSERV",109,0)
 ;
"RTN","PRSDSERV",110,0)
LDCMP ; Compare Initial and Final Labor Distribution for changes
"RTN","PRSDSERV",111,0)
 ; and update audit trail in #458 if necessary.
"RTN","PRSDSERV",112,0)
 Q:LDINIT=LDFNL
"RTN","PRSDSERV",113,0)
 N PPA,I,IENS,IENS1,INDX,J,LDA,PRSFDA,TLDPER,E458IEN
"RTN","PRSDSERV",114,0)
 ; Get IEN for current Pay Period
"RTN","PRSDSERV",115,0)
 S PPA=$P($G(^PRST(458,"AD",$P(TIME,".",1))),U,1)
"RTN","PRSDSERV",116,0)
 Q:PPA=""
"RTN","PRSDSERV",117,0)
 ;
"RTN","PRSDSERV",118,0)
 ; Get next multiple number
"RTN","PRSDSERV",119,0)
 S LDA="A",LDA=$O(^PRST(458,PPA,"E",IEN,"LDAUD",LDA),-1)
"RTN","PRSDSERV",120,0)
 S LDA=$S(LDA>0:LDA+1,1:1)
"RTN","PRSDSERV",121,0)
 ;
"RTN","PRSDSERV",122,0)
 ; Set Audit information into #450
"RTN","PRSDSERV",123,0)
 S DA=IEN,DIE="^PRSPC("
"RTN","PRSDSERV",124,0)
 S DR="755///^S X=$O(^VA(200,""B"",""CENTRAL,PAID"",0))"
"RTN","PRSDSERV",125,0)
 D ^DIE
"RTN","PRSDSERV",126,0)
 S DR="755.1///^S X=TYPE"
"RTN","PRSDSERV",127,0)
 D ^DIE
"RTN","PRSDSERV",128,0)
 S DR="756///^S X=TIME"
"RTN","PRSDSERV",129,0)
 D ^DIE
"RTN","PRSDSERV",130,0)
 ;
"RTN","PRSDSERV",131,0)
 ; If there is no entry for this employee in the Pay Period, create
"RTN","PRSDSERV",132,0)
 ; a record for them
"RTN","PRSDSERV",133,0)
 I '$D(^PRST(458,PPA,"E",IEN)) D
"RTN","PRSDSERV",134,0)
 . S IENS=","_PPA_","
"RTN","PRSDSERV",135,0)
 . S E458IEN(1)=IEN
"RTN","PRSDSERV",136,0)
 . S PRSFDA(458.01,"?+1"_IENS,.01)=IEN
"RTN","PRSDSERV",137,0)
 . S PRSFDA(458.01,"?+1"_IENS,1)="T"
"RTN","PRSDSERV",138,0)
 . D UPDATE^DIE("","PRSFDA","E458IEN")
"RTN","PRSDSERV",139,0)
 ;
"RTN","PRSDSERV",140,0)
 ; PRS*107 - undefined PPA caused errors
"RTN","PRSDSERV",141,0)
 ; PRS*107 - undefined LDA caused errors
"RTN","PRSDSERV",142,0)
 ; PRS*107 - IENS not set properly 
"RTN","PRSDSERV",143,0)
 S PPA=$P($G(^PRST(458,"AD",$P(TIME,".",1))),U,1)
"RTN","PRSDSERV",144,0)
 Q:PPA=""
"RTN","PRSDSERV",145,0)
 S LDA="A",LDA=$O(^PRST(458,PPA,"E",IEN,"LDAUD",LDA),-1)
"RTN","PRSDSERV",146,0)
 S LDA=$S(LDA>0:LDA+1,1:1)
"RTN","PRSDSERV",147,0)
 S IENS=","_IEN_","_PPA_","
"RTN","PRSDSERV",148,0)
 ;
"RTN","PRSDSERV",149,0)
 ; Set LD AUDIT record into #458.1105
"RTN","PRSDSERV",150,0)
 ; S IENS=","_IEN_IENS  - PRS*107 REPLACED WITH IENS SET 3 LINES ABOVE
"RTN","PRSDSERV",151,0)
 K PRSFDA
"RTN","PRSDSERV",152,0)
 S PRSFDA(458.1105,"?+1"_IENS,.01)=LDA
"RTN","PRSDSERV",153,0)
 S PRSFDA(458.1105,"?+1"_IENS,1)=TIME
"RTN","PRSDSERV",154,0)
 S PRSFDA(458.1105,"?+1"_IENS,2)=$O(^VA(200,"B","CENTRAL PAID",0))
"RTN","PRSDSERV",155,0)
 S PRSFDA(458.1105,"?+1"_IENS,3)=TYPE
"RTN","PRSDSERV",156,0)
 D UPDATE^DIE("","PRSFDA")
"RTN","PRSDSERV",157,0)
 ;
"RTN","PRSDSERV",158,0)
 ; Central PAID only sends LD fields that have changed.  Run check on 
"RTN","PRSDSERV",159,0)
 ; percentages and delete all LD fields in #450 after 99% has been reached
"RTN","PRSDSERV",160,0)
 S TLDPER=0
"RTN","PRSDSERV",161,0)
 F I=0:1:3 S TLDPER=TLDPER+$P(LDFNL,U,I*4+2) Q:TLDPER'<.99
"RTN","PRSDSERV",162,0)
 S J=(I+1)*4+1 ; Set counter for LDINIT
"RTN","PRSDSERV",163,0)
 F J=J:1:16 S $P(LDINIT,U,J)=""
"RTN","PRSDSERV",164,0)
 S I=I+2 ; Adjust counter for deletion of multiples
"RTN","PRSDSERV",165,0)
 K PRSFDA
"RTN","PRSDSERV",166,0)
 S DA(1)=IEN
"RTN","PRSDSERV",167,0)
 F I=I:1:4 D
"RTN","PRSDSERV",168,0)
 . S DA=I,DIK="^PRSPC("_DA(1)_",""LD"","
"RTN","PRSDSERV",169,0)
 . D ^DIK
"RTN","PRSDSERV",170,0)
 ;
"RTN","PRSDSERV",171,0)
 ; Set LABOR DISTRIBUTION (Multiple-458.11054)
"RTN","PRSDSERV",172,0)
 S LD=$O(^PRST(458,PPA,"E",IEN,"LDAUD",0))
"RTN","PRSDSERV",173,0)
 F PRSLD=0:1:3 D
"RTN","PRSDSERV",174,0)
 . S J=PRSLD+1
"RTN","PRSDSERV",175,0)
 . S IENS1="+"_J_","_LD_IENS
"RTN","PRSDSERV",176,0)
 . ; Don't record empty multiples
"RTN","PRSDSERV",177,0)
 . Q:$P(LDINIT,U,PRSLD*4+2)=""  ; PERCENT
"RTN","PRSDSERV",178,0)
 . K PRSFDA
"RTN","PRSDSERV",179,0)
 . S PRSFDA(458.11054,IENS1,.01)=PRSLD+1
"RTN","PRSDSERV",180,0)
 . S PRSFDA(458.11054,IENS1,1)=$P(LDINIT,U,PRSLD*4+1) ; CODE
"RTN","PRSDSERV",181,0)
 . S PRSFDA(458.11054,IENS1,2)=$P(LDINIT,U,PRSLD*4+2) ; PERCENT
"RTN","PRSDSERV",182,0)
 . S PRSFDA(458.11054,IENS1,3)=$P(LDINIT,U,PRSLD*4+3) ; COST CENTER
"RTN","PRSDSERV",183,0)
 . S PRSFDA(458.11054,IENS1,4)=$P(LDINIT,U,PRSLD*4+4) ; FUND CTRL PT
"RTN","PRSDSERV",184,0)
 . D UPDATE^DIE("","PRSFDA")
"RTN","PRSDSERV",185,0)
 K LDINIT,LDFNL
"RTN","PRSDSERV",186,0)
 Q
"RTN","PRSXP107")
0^4^B10120114^n/a
"RTN","PRSXP107",1,0)
PRSXP107 ;WCIOFO/MGD,RRG-POST INSTALL CLEAN UP FILE 458 ;02/27/2007
"RTN","PRSXP107",2,0)
 ;;4.0;PAID;**107**;Sep 21, 1995;Build 2
"RTN","PRSXP107",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSXP107",4,0)
 ;
"RTN","PRSXP107",5,0)
 Q
"RTN","PRSXP107",6,0)
 ;
"RTN","PRSXP107",7,0)
 ;
"RTN","PRSXP107",8,0)
 ; This program will delete erroneous Zero nodes in the TIME & ATTENDANCE
"RTN","PRSXP107",9,0)
 ; (#458) file starting at Pay Period 03-19.
"RTN","PRSXP107",10,0)
 ;
"RTN","PRSXP107",11,0)
START ; Main Driver
"RTN","PRSXP107",12,0)
 ;
"RTN","PRSXP107",13,0)
 D 458
"RTN","PRSXP107",14,0)
 Q
"RTN","PRSXP107",15,0)
 ;
"RTN","PRSXP107",16,0)
 ;
"RTN","PRSXP107",17,0)
 ;
"RTN","PRSXP107",18,0)
458 ; Correct data in the TIME & ATTENDANCE (#458) file
"RTN","PRSXP107",19,0)
 ;
"RTN","PRSXP107",20,0)
 N CNT,DA,DATA,DIK,EMP,EMPX,I,LINE,LINE2,LCNT,MESS,MSG,MSG1
"RTN","PRSXP107",21,0)
 N NAME,TNAME,PPI,STANUM,STATUS,TIME,U,UCIX,PPIEN
"RTN","PRSXP107",22,0)
 S U="^",LCNT=1,$P(LINE,"-",80)="",$P(LINE2,"=",80)="",STATUS="OK"
"RTN","PRSXP107",23,0)
 K ^TMP($J)
"RTN","PRSXP107",24,0)
 S MESS="TIME & ATTENDANCE (#458)",MSG1=" beginning at "
"RTN","PRSXP107",25,0)
 D TIME
"RTN","PRSXP107",26,0)
 D STAUCI
"RTN","PRSXP107",27,0)
 S ^TMP($J,"P107",LCNT)="",LCNT=LCNT+1
"RTN","PRSXP107",28,0)
 S MESS="Deleting erroneous nodes."
"RTN","PRSXP107",29,0)
 S ^TMP($J,"P107",LCNT)=MESS,LCNT=LCNT+1
"RTN","PRSXP107",30,0)
 S ^TMP($J,"P107",LCNT)="",LCNT=LCNT+1
"RTN","PRSXP107",31,0)
 ;
"RTN","PRSXP107",32,0)
 ; Correct data in the TIME & ATTENDANCE (#458) file
"RTN","PRSXP107",33,0)
 ;
"RTN","PRSXP107",34,0)
 S PPI="03-15"
"RTN","PRSXP107",35,0)
 F  S PPIEN="",PPI=$O(^PRST(458,"B",PPI))  Q:'PPI!(PPI>"09-20")  D
"RTN","PRSXP107",36,0)
 . S PPIEN=$O(^PRST(458,"B",PPI,0)) Q:'PPIEN
"RTN","PRSXP107",37,0)
 . S ^TMP($J,"P107",LCNT)="",LCNT=LCNT+1
"RTN","PRSXP107",38,0)
 . S ^TMP($J,"P107",LCNT)="Pay Period "_PPI,LCNT=LCNT+1
"RTN","PRSXP107",39,0)
 . S ^TMP($J,"P107",LCNT)=LINE2,LCNT=LCNT+1
"RTN","PRSXP107",40,0)
 . S ^TMP($J,"P107",LCNT)="EMP IEN                 DATA",LCNT=LCNT+1
"RTN","PRSXP107",41,0)
 . S ^TMP($J,"P107",LCNT)=LINE,LCNT=LCNT+1
"RTN","PRSXP107",42,0)
 . S (CNT,EMP)=0
"RTN","PRSXP107",43,0)
 . F  S EMP=$O(^PRST(458,PPIEN,"E",EMP)) Q:'EMP  D
"RTN","PRSXP107",44,0)
 . . S DATA=$G(^PRST(458,PPIEN,"E",EMP,0))
"RTN","PRSXP107",45,0)
 . . I EMP'=$P(DATA,U,1),($P(DATA,U,2)="") D
"RTN","PRSXP107",46,0)
 . . . S EMPX="",$P(EMPX," ",21)="",$E(EMPX,1,$L(EMP))=EMP
"RTN","PRSXP107",47,0)
 . . . S ^TMP($J,"P107",LCNT)=EMPX_DATA,LCNT=LCNT+1
"RTN","PRSXP107",48,0)
 . . . S CNT=CNT+1
"RTN","PRSXP107",49,0)
 . . . ;
"RTN","PRSXP107",50,0)
 . . . ; Delete the erroneous 0 node
"RTN","PRSXP107",51,0)
 . . . ;
"RTN","PRSXP107",52,0)
 . . . S DA=EMP,DA(1)=PPIEN,DIK="^PRST(458,"_DA(1)_",""E"","
"RTN","PRSXP107",53,0)
 . . . D ^DIK
"RTN","PRSXP107",54,0)
 . S ^TMP($J,"P107",LCNT)="",LCNT=LCNT+1
"RTN","PRSXP107",55,0)
 . S MESS=$S(CNT>0:CNT_" record(s) deleted.",1:"No records to delete")
"RTN","PRSXP107",56,0)
 . S ^TMP($J,"P107",LCNT)=MESS,LCNT=LCNT+1
"RTN","PRSXP107",57,0)
 . S ^TMP($J,"P107",LCNT)="",LCNT=LCNT+1
"RTN","PRSXP107",58,0)
 S MESS="TIME & ATTENDANCE (#458)",MSG1=" ending at "
"RTN","PRSXP107",59,0)
 D TIME
"RTN","PRSXP107",60,0)
 S MSG=MSG_"458 "_STATUS
"RTN","PRSXP107",61,0)
 D XMT
"RTN","PRSXP107",62,0)
 Q
"RTN","PRSXP107",63,0)
 ;
"RTN","PRSXP107",64,0)
 ;
"RTN","PRSXP107",65,0)
XMT ; Send status via mail message
"RTN","PRSXP107",66,0)
 ;
"RTN","PRSXP107",67,0)
 I $D(^TMP($J,"P107")) D
"RTN","PRSXP107",68,0)
 . N DIFROM,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","PRSXP107",69,0)
 . S XMDUZ=.5
"RTN","PRSXP107",70,0)
 . S XMSUB=MSG
"RTN","PRSXP107",71,0)
 . S XMTEXT="^TMP($J,""P107"","
"RTN","PRSXP107",72,0)
 . S XMY(DUZ)=""
"RTN","PRSXP107",73,0)
 . S XMY("G.PAD@"_^XMB("NETNAME"))=""
"RTN","PRSXP107",74,0)
 . D ^XMD
"RTN","PRSXP107",75,0)
 ;
"RTN","PRSXP107",76,0)
 K ^TMP($J),Y,%
"RTN","PRSXP107",77,0)
 Q
"RTN","PRSXP107",78,0)
 ;
"RTN","PRSXP107",79,0)
TIME ; Get current Time
"RTN","PRSXP107",80,0)
 ;
"RTN","PRSXP107",81,0)
 D NOW^%DTC
"RTN","PRSXP107",82,0)
 S Y=%
"RTN","PRSXP107",83,0)
 D DD^%DT
"RTN","PRSXP107",84,0)
 S TIME=Y
"RTN","PRSXP107",85,0)
 S MESS=MESS_" clean up routine"_MSG1_TIME_"."
"RTN","PRSXP107",86,0)
 S ^TMP($J,"P107",LCNT)=MESS,LCNT=LCNT+1
"RTN","PRSXP107",87,0)
 Q
"RTN","PRSXP107",88,0)
 ;
"RTN","PRSXP107",89,0)
 ;
"RTN","PRSXP107",90,0)
STAUCI ;Get Station Number
"RTN","PRSXP107",91,0)
 S STANUM=$$KSP^XUPARAM("INST")_","
"RTN","PRSXP107",92,0)
 S STANUM=$$GET1^DIQ(4,STANUM,99)
"RTN","PRSXP107",93,0)
 S MSG=STANUM_" - "
"RTN","PRSXP107",94,0)
 ;
"RTN","PRSXP107",95,0)
 ; Check for UCI,VOL
"RTN","PRSXP107",96,0)
 ;
"RTN","PRSXP107",97,0)
 X ^%ZOSF("UCI")
"RTN","PRSXP107",98,0)
 S UCIX=$G(Y)
"RTN","PRSXP107",99,0)
 I UCIX="" S UCIX="??????"
"RTN","PRSXP107",100,0)
 S MSG=MSG_UCIX_" - "
"RTN","PRSXP107",101,0)
 Q
"RTN","PRSXP107",102,0)
 ;
"RTN","PRSXP107",103,0)
NAME ; Format name
"RTN","PRSXP107",104,0)
 ;
"RTN","PRSXP107",105,0)
 S NAME="",$P(NAME," ",30)=""
"RTN","PRSXP107",106,0)
 S TNAME=$$GET1^DIQ(450,EMP,.01)
"RTN","PRSXP107",107,0)
 I TNAME="" S TNAME=EMP
"RTN","PRSXP107",108,0)
 S $E(NAME,1,$L(TNAME))=TNAME
"RTN","PRSXP107",109,0)
 Q
"RTN","PRSXP107",110,0)
 ;
"VER")
8.0^22.0
"BLD",7855,6)
^110
**END**
**END**
