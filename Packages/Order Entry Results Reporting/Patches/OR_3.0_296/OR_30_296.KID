KIDS Distribution saved on May 07, 2009@11:54:07
OR*3.0*296 RELEASED
**KIDS**:OR*3.0*296^

**INSTALL NAME**
OR*3.0*296
"BLD",7069,0)
OR*3.0*296^ORDER ENTRY/RESULTS REPORTING^0^3090507^y
"BLD",7069,4,0)
^9.64PA^101.41^1
"BLD",7069,4,101.41,0)
101.41
"BLD",7069,4,101.41,222)
n^n^f^^y^^y^o^n
"BLD",7069,4,101.41,224)
I Y=130
"BLD",7069,4,"B",101.41,101.41)

"BLD",7069,6.3)
19
"BLD",7069,"ABPKG")
n
"BLD",7069,"INI")
PRE^ORY296
"BLD",7069,"INIT")
POST^ORY296
"BLD",7069,"KRN",0)
^9.67PA^8989.52^19
"BLD",7069,"KRN",.4,0)
.4
"BLD",7069,"KRN",.401,0)
.401
"BLD",7069,"KRN",.402,0)
.402
"BLD",7069,"KRN",.403,0)
.403
"BLD",7069,"KRN",.5,0)
.5
"BLD",7069,"KRN",.84,0)
.84
"BLD",7069,"KRN",3.6,0)
3.6
"BLD",7069,"KRN",3.8,0)
3.8
"BLD",7069,"KRN",9.2,0)
9.2
"BLD",7069,"KRN",9.8,0)
9.8
"BLD",7069,"KRN",9.8,"NM",0)
^9.68A^44^41
"BLD",7069,"KRN",9.8,"NM",1,0)
ORCDPSIV^^0^B96653807
"BLD",7069,"KRN",9.8,"NM",2,0)
ORWORB^^0^B69468448
"BLD",7069,"KRN",9.8,"NM",3,0)
ORB3^^0^B93373249
"BLD",7069,"KRN",9.8,"NM",4,0)
ORMARKER^^0^B978608
"BLD",7069,"KRN",9.8,"NM",6,0)
ORWDX^^0^B67409395
"BLD",7069,"KRN",9.8,"NM",7,0)
ORY243^^1^
"BLD",7069,"KRN",9.8,"NM",8,0)
ORY2430^^1^
"BLD",7069,"KRN",9.8,"NM",9,0)
ORY24301^^1^
"BLD",7069,"KRN",9.8,"NM",10,0)
ORY24302^^1^
"BLD",7069,"KRN",9.8,"NM",11,0)
ORY24303^^1^
"BLD",7069,"KRN",9.8,"NM",12,0)
ORY24304^^1^
"BLD",7069,"KRN",9.8,"NM",13,0)
ORY24305^^1^
"BLD",7069,"KRN",9.8,"NM",14,0)
ORY24306^^1^
"BLD",7069,"KRN",9.8,"NM",15,0)
ORY24307^^1^
"BLD",7069,"KRN",9.8,"NM",16,0)
ORY24308^^1^
"BLD",7069,"KRN",9.8,"NM",17,0)
ORY24309^^1^
"BLD",7069,"KRN",9.8,"NM",18,0)
ORY2431^^1^
"BLD",7069,"KRN",9.8,"NM",19,0)
ORY2432^^1^
"BLD",7069,"KRN",9.8,"NM",20,0)
ORY2433^^1^
"BLD",7069,"KRN",9.8,"NM",21,0)
ORY2434^^1^
"BLD",7069,"KRN",9.8,"NM",22,0)
ORY243A^^1^
"BLD",7069,"KRN",9.8,"NM",23,0)
ORY243ES^^1^
"BLD",7069,"KRN",9.8,"NM",24,0)
ORY243R^^1^
"BLD",7069,"KRN",9.8,"NM",25,0)
ORY296^^0^B1180350
"BLD",7069,"KRN",9.8,"NM",26,0)
ORYCHKE^^0^B2490043
"BLD",7069,"KRN",9.8,"NM",28,0)
ORWTPUA^^0^B2236253
"BLD",7069,"KRN",9.8,"NM",30,0)
ORMRA^^0^B62138554
"BLD",7069,"KRN",9.8,"NM",31,0)
ORCSEND^^0^B65578810
"BLD",7069,"KRN",9.8,"NM",32,0)
ORCDLR1^^0^B81262557
"BLD",7069,"KRN",9.8,"NM",33,0)
ORPRPM^^0^B64231033
"BLD",7069,"KRN",9.8,"NM",34,0)
ORWDX1^^0^B52053311
"BLD",7069,"KRN",9.8,"NM",35,0)
ORWDXM3^^0^B72094070
"BLD",7069,"KRN",9.8,"NM",36,0)
ORWOD^^0^B72302805
"BLD",7069,"KRN",9.8,"NM",37,0)
ORWOD1^^0^B38695937
"BLD",7069,"KRN",9.8,"NM",38,0)
OR3CONV^^0^B57296998
"BLD",7069,"KRN",9.8,"NM",39,0)
ORCMEDT0^^0^B17670670
"BLD",7069,"KRN",9.8,"NM",40,0)
ORCMEDT5^^0^B35418320
"BLD",7069,"KRN",9.8,"NM",41,0)
ORINQIV^^0^B192421660
"BLD",7069,"KRN",9.8,"NM",42,0)
ORWDXM4^^0^B32166098
"BLD",7069,"KRN",9.8,"NM",43,0)
ORCMEDT1^^0^B45036674
"BLD",7069,"KRN",9.8,"NM",44,0)
OR3CONV1^^0^B41773160
"BLD",7069,"KRN",9.8,"NM","B","OR3CONV",38)

"BLD",7069,"KRN",9.8,"NM","B","OR3CONV1",44)

"BLD",7069,"KRN",9.8,"NM","B","ORB3",3)

"BLD",7069,"KRN",9.8,"NM","B","ORCDLR1",32)

"BLD",7069,"KRN",9.8,"NM","B","ORCDPSIV",1)

"BLD",7069,"KRN",9.8,"NM","B","ORCMEDT0",39)

"BLD",7069,"KRN",9.8,"NM","B","ORCMEDT1",43)

"BLD",7069,"KRN",9.8,"NM","B","ORCMEDT5",40)

"BLD",7069,"KRN",9.8,"NM","B","ORCSEND",31)

"BLD",7069,"KRN",9.8,"NM","B","ORINQIV",41)

"BLD",7069,"KRN",9.8,"NM","B","ORMARKER",4)

"BLD",7069,"KRN",9.8,"NM","B","ORMRA",30)

"BLD",7069,"KRN",9.8,"NM","B","ORPRPM",33)

"BLD",7069,"KRN",9.8,"NM","B","ORWDX",6)

"BLD",7069,"KRN",9.8,"NM","B","ORWDX1",34)

"BLD",7069,"KRN",9.8,"NM","B","ORWDXM3",35)

"BLD",7069,"KRN",9.8,"NM","B","ORWDXM4",42)

"BLD",7069,"KRN",9.8,"NM","B","ORWOD",36)

"BLD",7069,"KRN",9.8,"NM","B","ORWOD1",37)

"BLD",7069,"KRN",9.8,"NM","B","ORWORB",2)

"BLD",7069,"KRN",9.8,"NM","B","ORWTPUA",28)

"BLD",7069,"KRN",9.8,"NM","B","ORY243",7)

"BLD",7069,"KRN",9.8,"NM","B","ORY2430",8)

"BLD",7069,"KRN",9.8,"NM","B","ORY24301",9)

"BLD",7069,"KRN",9.8,"NM","B","ORY24302",10)

"BLD",7069,"KRN",9.8,"NM","B","ORY24303",11)

"BLD",7069,"KRN",9.8,"NM","B","ORY24304",12)

"BLD",7069,"KRN",9.8,"NM","B","ORY24305",13)

"BLD",7069,"KRN",9.8,"NM","B","ORY24306",14)

"BLD",7069,"KRN",9.8,"NM","B","ORY24307",15)

"BLD",7069,"KRN",9.8,"NM","B","ORY24308",16)

"BLD",7069,"KRN",9.8,"NM","B","ORY24309",17)

"BLD",7069,"KRN",9.8,"NM","B","ORY2431",18)

"BLD",7069,"KRN",9.8,"NM","B","ORY2432",19)

"BLD",7069,"KRN",9.8,"NM","B","ORY2433",20)

"BLD",7069,"KRN",9.8,"NM","B","ORY2434",21)

"BLD",7069,"KRN",9.8,"NM","B","ORY243A",22)

"BLD",7069,"KRN",9.8,"NM","B","ORY243ES",23)

"BLD",7069,"KRN",9.8,"NM","B","ORY243R",24)

"BLD",7069,"KRN",9.8,"NM","B","ORY296",25)

"BLD",7069,"KRN",9.8,"NM","B","ORYCHKE",26)

"BLD",7069,"KRN",19,0)
19
"BLD",7069,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",7069,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",7069,"KRN",19,"NM",2,0)
OR MEDICATION QO CHECKER^^0
"BLD",7069,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",7069,"KRN",19,"NM","B","OR MEDICATION QO CHECKER",2)

"BLD",7069,"KRN",19.1,0)
19.1
"BLD",7069,"KRN",101,0)
101
"BLD",7069,"KRN",409.61,0)
409.61
"BLD",7069,"KRN",771,0)
771
"BLD",7069,"KRN",870,0)
870
"BLD",7069,"KRN",8989.51,0)
8989.51
"BLD",7069,"KRN",8989.51,"NM",0)
^9.68A^2^2
"BLD",7069,"KRN",8989.51,"NM",1,0)
ORWRP TIME/OCC LIMITS INDV^^0
"BLD",7069,"KRN",8989.51,"NM",2,0)
ORPF ACTIVE ORDERS CONTEXT HRS^^0
"BLD",7069,"KRN",8989.51,"NM","B","ORPF ACTIVE ORDERS CONTEXT HRS",2)

"BLD",7069,"KRN",8989.51,"NM","B","ORWRP TIME/OCC LIMITS INDV",1)

"BLD",7069,"KRN",8989.52,0)
8989.52
"BLD",7069,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",7069,"KRN",8994,0)
8994
"BLD",7069,"KRN",8994,"NM",0)
^9.68A^4^3
"BLD",7069,"KRN",8994,"NM",2,0)
ORWDX UNLKOTH^^0
"BLD",7069,"KRN",8994,"NM",3,0)
OR GET COMBAT VET^^0
"BLD",7069,"KRN",8994,"NM",4,0)
GMV CLOSEST READING^^0
"BLD",7069,"KRN",8994,"NM","B","GMV CLOSEST READING",4)

"BLD",7069,"KRN",8994,"NM","B","OR GET COMBAT VET",3)

"BLD",7069,"KRN",8994,"NM","B","ORWDX UNLKOTH",2)

"BLD",7069,"KRN","B",.4,.4)

"BLD",7069,"KRN","B",.401,.401)

"BLD",7069,"KRN","B",.402,.402)

"BLD",7069,"KRN","B",.403,.403)

"BLD",7069,"KRN","B",.5,.5)

"BLD",7069,"KRN","B",.84,.84)

"BLD",7069,"KRN","B",3.6,3.6)

"BLD",7069,"KRN","B",3.8,3.8)

"BLD",7069,"KRN","B",9.2,9.2)

"BLD",7069,"KRN","B",9.8,9.8)

"BLD",7069,"KRN","B",19,19)

"BLD",7069,"KRN","B",19.1,19.1)

"BLD",7069,"KRN","B",101,101)

"BLD",7069,"KRN","B",409.61,409.61)

"BLD",7069,"KRN","B",771,771)

"BLD",7069,"KRN","B",870,870)

"BLD",7069,"KRN","B",8989.51,8989.51)

"BLD",7069,"KRN","B",8989.52,8989.52)

"BLD",7069,"KRN","B",8994,8994)

"BLD",7069,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7069,"QUES",0)
^9.62^^
"BLD",7069,"REQB",0)
^9.611^6^6
"BLD",7069,"REQB",1,0)
YS*5.01*98^2
"BLD",7069,"REQB",2,0)
OR*3.0*292^2
"BLD",7069,"REQB",3,0)
OR*3.0*283^2
"BLD",7069,"REQB",4,0)
OR*3.0*301^2
"BLD",7069,"REQB",5,0)
OR*3.0*303^2
"BLD",7069,"REQB",6,0)
OR*3.0*304^2
"BLD",7069,"REQB","B","OR*3.0*283",3)

"BLD",7069,"REQB","B","OR*3.0*292",2)

"BLD",7069,"REQB","B","OR*3.0*301",4)

"BLD",7069,"REQB","B","OR*3.0*303",5)

"BLD",7069,"REQB","B","OR*3.0*304",6)

"BLD",7069,"REQB","B","YS*5.01*98",1)

"DATA",101.41,130,0)
PSJI OR PAT FLUID OE^Infusion^^D^32^2^115^1^2
"DATA",101.41,130,3)
D PROVIDER^ORCDPSIV
"DATA",101.41,130,3.1)
D:$G(ORNP) PROVIDER^ORCDPSIV
"DATA",101.41,130,4)
S:$G(ORXNP) ORNP=ORXNP K PSJNOPC,ORXNP,ORIVTYPE,ORLEAD,ORTRAIL,OROTSCH
"DATA",101.41,130,5)
^^^IV Fluids^180
"DATA",101.41,130,10,0)
^101.412IA^17^14
"DATA",101.41,130,10,1,0)
2^4^^Solution: ^^1^1^^C^S.IVB RX^^^Solutions: 
"DATA",101.41,130,10,1,1)
Enter a base solution for this order.
"DATA",101.41,130,10,1,2)
2^^^^^1
"DATA",101.41,130,10,1,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,130,10,1,5)
I $G(ORESET),ORESET'=+Y D CHANGED^ORCDPSIV("B")
"DATA",101.41,130,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,130,10,1,9)
S:FIRST MULT=0 S REQD=$S($G(ORIVTYPE)="I":0,1:1)
"DATA",101.41,130,10,1,10)
D INACTIVE^ORCDPSIV("B")
"DATA",101.41,130,10,2,0)
3^131^^Additive: ^^^1^^C^S.IVA RX^^^Additives: 
"DATA",101.41,130,10,2,1)
Enter an additive for these IV solutions.
"DATA",101.41,130,10,2,2)
1^^^^in^1
"DATA",101.41,130,10,2,3)
I '($$PREMIX^ORCDPSIV&FIRST)
"DATA",101.41,130,10,2,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,130,10,2,5)
I $G(ORESET),ORESET'=ORDIALOG(PROMPT,ORI) D CHANGED^ORCDPSIV("A")
"DATA",101.41,130,10,2,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,130,10,2,10)
D INACTIVE^ORCDPSIV("A")
"DATA",101.41,130,10,3,0)
3.1^152^^^^1^^^C^^131
"DATA",101.41,130,10,3,1)
Enter the strength of this additive, as a number.
"DATA",101.41,130,10,3,9)
D UNITS^ORCDPSIV
"DATA",101.41,130,10,5,0)
5^128^^Infusion Rate: ^^1^^^C
"DATA",101.41,130,10,5,.1)
D INF^ORCDPSIV
"DATA",101.41,130,10,5,1)
Enter the rate at which the IV is to be administered, as the number of ml/hr or Text@Number of Labels per day.
"DATA",101.41,130,10,5,2)
4^^^@ORLEAD^@ORTRAIL
"DATA",101.41,130,10,5,9)
D ENRATE^ORCDPSIV
"DATA",101.41,130,10,5,10)
S (ORLEAD,ORTRAIL)="" S:$G(ORIVTYPE)="I" ORLEAD="Infuse over",ORTRAIL="minutes"
"DATA",101.41,130,10,7,0)
9^15^^Provider Comments: ^^^^^C
"DATA",101.41,130,10,7,1)
Enter any additional comments or instructions for this order.
"DATA",101.41,130,10,7,2)
8^^^^^1
"DATA",101.41,130,10,7,3)
I '$G(PSJNOPC)!($G(ORTYPE)="Z")
"DATA",101.41,130,10,9,0)
3.2^30^^^^^^^C^^131
"DATA",101.41,130,10,9,1)
Enter the units of measurement for this additive.
"DATA",101.41,130,10,9,3)
I '$D(ORDIALOG(PROMPT,INST))
"DATA",101.41,130,10,9,6)
D SETLIST^ORCD
"DATA",101.41,130,10,10,0)
2.1^172^^Volume (in ml): ^^1^^^C^^4
"DATA",101.41,130,10,10,1)
Enter the volume to be administered, as the number of milliliters.
"DATA",101.41,130,10,10,2)
^^^^ml
"DATA",101.41,130,10,10,3)
I $G(ORDIALOG(PROMPT,"LIST"))>1
"DATA",101.41,130,10,10,6)
D LIST^ORCD
"DATA",101.41,130,10,10,7)
S Y=$O(ORDIALOG(PROMPT,"LIST",""),-1) K:'Y Y D:$G(ORDIALOG(PROMPT,"LIST"))>1 LIST^ORCD
"DATA",101.41,130,10,10,9)
D VOLUME^ORCDPSIV
"DATA",101.41,130,10,11,0)
8^7^^Priority: ^^^^^C^S.PSJ
"DATA",101.41,130,10,11,1)
Enter the urgency of this order.
"DATA",101.41,130,10,11,2)
7^^ROUTINE
"DATA",101.41,130,10,11,7)
S Y=+$$RECALL^ORCD(PROMPT) S:Y EDITONLY=1 S:'Y Y=9
"DATA",101.41,130,10,12,0)
6^170^^^^^^^C
"DATA",101.41,130,10,12,1)
Enter a standard schedule for administering this medication.
"DATA",101.41,130,10,12,2)
5
"DATA",101.41,130,10,12,3)
I $G(ORIVTYPE)="I" ;intermittent only
"DATA",101.41,130,10,12,5)
D CKSCH^ORCDPSIV
"DATA",101.41,130,10,12,6)
N DIC,D,X S DIC="^PS(51.1,",DIC(0)="EQS",D="APPSJ",X="??" D MIX^PSSDI(51.1,"PSJ",.DIC,D,.X)
"DATA",101.41,130,10,12,10)
S OROTSCH=$$ISONETIM^ORCDPSIV($G(ORDIALOG(PROMPT,INST)))
"DATA",101.41,130,10,13,0)
7^153^^Limitation:^^^^^C
"DATA",101.41,130,10,13,.1)
D IVPSI^ORCDPSIV
"DATA",101.41,130,10,13,1)
Enter the length of administrative time or total volume for IV fluid order followed by ML for milliliters, L for liters, H for hours, D for days, or DOSES.
"DATA",101.41,130,10,13,2)
6
"DATA",101.41,130,10,13,3)
I +$G(OROTSCH)=0 D IVPSI1^ORCDPSIV
"DATA",101.41,130,10,14,0)
1^15809^^^^1^^^C
"DATA",101.41,130,10,14,1)
Enter the infusion type for this order.
"DATA",101.41,130,10,14,5)
I $L($G(ORESET)),ORESET'=ORDIALOG(PROMPT,ORI) D CHANGED^ORCDPSIV("T")
"DATA",101.41,130,10,14,10)
S ORIVTYPE=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,130,10,15,0)
4^137^^^^1^^^C
"DATA",101.41,130,10,15,1)
Enter the route of administration for this infusion.
"DATA",101.41,130,10,15,2)
3^1~3
"DATA",101.41,130,10,15,4)
I $$IVRTESCR^ORCDPSIV(Y)
"DATA",101.41,130,10,15,6)
D LVROUTES^ORCDPSIV
"DATA",101.41,130,10,15,9)
D IVRTEENT^ORCDPSIV
"DATA",101.41,130,10,16,0)
6.5^15813
"DATA",101.41,130,10,16,2)
^@
"DATA",101.41,130,10,16,3)
I 0 ;from Schedule
"DATA",101.41,130,10,17,0)
10^188
"DATA",101.41,130,10,17,2)
15^^^First Dose^^1
"DATA",101.41,130,10,17,3)
I 0 ;set via Entry Action
"DATA",101.41,130,10,17,9)
D NOW^ORCDPS3
"DATA",101.41,130,99)
61271,39388
"FIA",101.41)
ORDER DIALOG
"FIA",101.41,0)
^ORD(101.41,
"FIA",101.41,0,0)
101.41I
"FIA",101.41,0,1)
n^n^f^^y^^y^o^n
"FIA",101.41,0,10)

"FIA",101.41,0,11)
I Y=130
"FIA",101.41,0,"RLRO")

"FIA",101.41,0,"VR")
3.0^OR
"FIA",101.41,101.41)
0
"FIA",101.41,101.411)
0
"FIA",101.41,101.412)
0
"FIA",101.41,101.41218)
0
"FIA",101.41,101.415)
0
"FIA",101.41,101.416)
0
"FIA",101.41,101.4162)
0
"FRV1",101.41,"130,0",5)
IV MEDICATIONS
"FRV1",101.41,"130,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"130,0",7)
INPATIENT MEDICATIONS
"FRV1",101.41,"130,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"130,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"130,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,10,0",2)
OR GTX VOLUME
"FRV1",101.41,"130,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,10,0",11)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"130,10,10,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,11,0",2)
OR GTX URGENCY
"FRV1",101.41,"130,10,11,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,12,0",2)
OR GTX SCHEDULE
"FRV1",101.41,"130,10,12,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,13,0",2)
OR GTX DURATION
"FRV1",101.41,"130,10,13,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,14,0",2)
OR GTX IV TYPE
"FRV1",101.41,"130,10,14,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,15,0",2)
OR GTX ROUTE
"FRV1",101.41,"130,10,15,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,16,0",2)
OR GTX ADMIN TIMES
"FRV1",101.41,"130,10,16,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,17,0",2)
OR GTX NOW
"FRV1",101.41,"130,10,17,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,2,0",2)
OR GTX ADDITIVE
"FRV1",101.41,"130,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,3,0",2)
OR GTX STRENGTH PSIV
"FRV1",101.41,"130,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,3,0",11)
OR GTX ADDITIVE
"FRV1",101.41,"130,10,3,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,5,0",2)
OR GTX INFUSION RATE
"FRV1",101.41,"130,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,7,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"130,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,9,0",2)
OR GTX UNITS
"FRV1",101.41,"130,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,9,0",11)
OR GTX ADDITIVE
"FRV1",101.41,"130,10,9,0",11,"F")
;ORD(101.41,
"INI")
PRE^ORY296
"INIT")
POST^ORY296
"IX",101.41,101.41,"B",0)
101.41^B^Regular B index using full field length^R^^F^IR^I^101.41^^^^^LS
"IX",101.41,101.41,"B",1)
S ^ORD(101.41,"B",$E(X,1,63),DA)=""
"IX",101.41,101.41,"B",2)
K ^ORD(101.41,"B",$E(X,1,63),DA)
"IX",101.41,101.41,"B",2.5)
K ^ORD(101.41,"B")
"IX",101.41,101.41,"B",11.1,0)
^.114IA^1^1
"IX",101.41,101.41,"B",11.1,1,0)
1^F^101.41^.01^63^1^F
"KRN",19,8812,-1)
0^1
"KRN",19,8812,0)
OR CPRS GUI CHART^CPRSChart version 1.0.27.90^^B^^^^^^^^
"KRN",19,8812,1,0)
^19.06^2^2^3080811^^^^
"KRN",19,8812,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,8812,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,8812,99)
60921,44613
"KRN",19,8812,99.1)
61487,37874
"KRN",19,8812,"RPC",0)
^19.05P^2083^2083
"KRN",19,8812,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,8812,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,8812,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,8812,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,8812,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,8812,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,8812,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,8812,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,8812,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,8812,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,8812,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,8812,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,8812,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,8812,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,8812,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,8812,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,8812,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,8812,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,8812,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,8812,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,8812,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,8812,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,8812,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,8812,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,8812,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,8812,"RPC",242,0)
TIU NOTES
"KRN",19,8812,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,8812,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,8812,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,8812,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,8812,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,8812,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,8812,"RPC",249,0)
TIU SUMMARIES
"KRN",19,8812,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,8812,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,8812,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,8812,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,8812,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,8812,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,8812,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,8812,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,8812,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,8812,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,8812,"RPC",1037,0)
ORK TRIGGER
"KRN",19,8812,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,8812,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,8812,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,8812,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,8812,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,8812,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,8812,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,8812,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,8812,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,8812,"RPC",1052,0)
ORQOR LIST
"KRN",19,8812,"RPC",1053,0)
ORQORB SORT
"KRN",19,8812,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,8812,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,8812,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,8812,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,8812,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,8812,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,8812,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,8812,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,8812,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,8812,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,8812,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,8812,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,8812,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,8812,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,8812,"RPC",1068,0)
ORQPT WARDS
"KRN",19,8812,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,8812,"RPC",1070,0)
ORQQAL LIST
"KRN",19,8812,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,8812,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,8812,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,8812,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,8812,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,8812,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,8812,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,8812,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,8812,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,8812,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,8812,"RPC",1081,0)
ORQQCN LIST
"KRN",19,8812,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,8812,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,8812,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,8812,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,8812,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,8812,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,8812,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,8812,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,8812,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,8812,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,8812,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,8812,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,8812,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,8812,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,8812,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,8812,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,8812,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,8812,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,8812,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,8812,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,8812,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,8812,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,8812,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,8812,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,8812,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,8812,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,8812,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,8812,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,8812,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,8812,"RPC",1111,0)
ORQQPL LIST
"KRN",19,8812,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,8812,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,8812,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,8812,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,8812,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,8812,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,8812,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,8812,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,8812,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,8812,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,8812,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,8812,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,8812,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,8812,"RPC",1125,0)
ORQQPP LIST
"KRN",19,8812,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,8812,"RPC",1127,0)
ORQQPS LIST
"KRN",19,8812,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,8812,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,8812,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,8812,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,8812,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,8812,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,8812,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,8812,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,8812,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,8812,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,8812,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,8812,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,8812,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,8812,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,8812,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,8812,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,8812,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,8812,"RPC",1152,0)
ORQQXQA USER
"KRN",19,8812,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,8812,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,8812,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,8812,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,8812,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,8812,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,8812,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,8812,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,8812,"RPC",1161,0)
ORWCV LAB
"KRN",19,8812,"RPC",1162,0)
ORWCV POLL
"KRN",19,8812,"RPC",1163,0)
ORWCV START
"KRN",19,8812,"RPC",1164,0)
ORWCV STOP
"KRN",19,8812,"RPC",1165,0)
ORWCV VST
"KRN",19,8812,"RPC",1166,0)
ORWD DEF
"KRN",19,8812,"RPC",1167,0)
ORWD DT
"KRN",19,8812,"RPC",1168,0)
ORWD FORMID
"KRN",19,8812,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,8812,"RPC",1170,0)
ORWD KEY
"KRN",19,8812,"RPC",1171,0)
ORWD OI
"KRN",19,8812,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,8812,"RPC",1173,0)
ORWD SAVE
"KRN",19,8812,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,8812,"RPC",1175,0)
ORWD SIGN
"KRN",19,8812,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,8812,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,8812,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,8812,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,8812,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,8812,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,8812,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,8812,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,8812,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,8812,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,8812,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,8812,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,8812,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,8812,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,8812,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,8812,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,8812,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,8812,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,8812,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,8812,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,8812,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,8812,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,8812,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,8812,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,8812,"RPC",1200,0)
ORWDFH TXT
"KRN",19,8812,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,8812,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,8812,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,8812,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,8812,"RPC",1205,0)
ORWDLR DEF
"KRN",19,8812,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,8812,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,8812,"RPC",1208,0)
ORWDLR STOP
"KRN",19,8812,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,8812,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,8812,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,8812,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,8812,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,8812,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,8812,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,8812,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,8812,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,8812,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,8812,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,8812,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,8812,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,8812,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,8812,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,8812,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,8812,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,8812,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,8812,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,8812,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,8812,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,8812,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,8812,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,8812,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,8812,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,8812,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,8812,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,8812,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,8812,"RPC",1241,0)
ORWDRA DEF
"KRN",19,8812,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,8812,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,8812,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,8812,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,8812,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,8812,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,8812,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,8812,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,8812,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,8812,"RPC",1251,0)
ORWDX DGRP
"KRN",19,8812,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,8812,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,8812,"RPC",1254,0)
ORWDX DLGID
"KRN",19,8812,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,8812,"RPC",1256,0)
ORWDX FORMID
"KRN",19,8812,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,8812,"RPC",1258,0)
ORWDX LOCK
"KRN",19,8812,"RPC",1259,0)
ORWDX MSG
"KRN",19,8812,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,8812,"RPC",1261,0)
ORWDX SAVE
"KRN",19,8812,"RPC",1262,0)
ORWDX SEND
"KRN",19,8812,"RPC",1263,0)
ORWDX SENDP
"KRN",19,8812,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,8812,"RPC",1265,0)
ORWDX WRLST
"KRN",19,8812,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,8812,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,8812,"RPC",1268,0)
ORWDXA DC
"KRN",19,8812,"RPC",1269,0)
ORWDX2 DCREASON
"KRN",19,8812,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,8812,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,8812,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,8812,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,8812,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,8812,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,8812,"RPC",1276,0)
ORWDXA VALID
"KRN",19,8812,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,8812,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,8812,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,8812,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,8812,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,8812,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,8812,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,8812,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,8812,"RPC",1285,0)
ORWDXC ON
"KRN",19,8812,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,8812,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,8812,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,8812,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,8812,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,8812,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,8812,"RPC",1292,0)
ORWDXM MENU
"KRN",19,8812,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,8812,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,8812,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,8812,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,8812,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,8812,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,8812,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,8812,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,8812,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,8812,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,8812,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,8812,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,8812,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,8812,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,8812,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,8812,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,8812,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,8812,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,8812,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,8812,"RPC",1312,0)
ORWLRR ATG
"KRN",19,8812,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,8812,"RPC",1314,0)
ORWLRR CHART
"KRN",19,8812,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,8812,"RPC",1316,0)
ORWLRR GRID
"KRN",19,8812,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,8812,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,8812,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,8812,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,8812,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,8812,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,8812,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,8812,"RPC",1324,0)
ORWLRR TG
"KRN",19,8812,"RPC",1325,0)
ORWLRR USERS
"KRN",19,8812,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,8812,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,8812,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,8812,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,8812,"RPC",1330,0)
ORWOR RESULT
"KRN",19,8812,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,8812,"RPC",1332,0)
ORWOR TSALL
"KRN",19,8812,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,8812,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,8812,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,8812,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,8812,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,8812,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,8812,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,8812,"RPC",1341,0)
ORWORDG IEN
"KRN",19,8812,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,8812,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,8812,"RPC",1344,0)
ORWORR AGET
"KRN",19,8812,"RPC",1345,0)
ORWORR GET
"KRN",19,8812,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,8812,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,8812,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,8812,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,8812,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,8812,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,8812,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,8812,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,8812,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,8812,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,8812,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,8812,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,8812,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,8812,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,8812,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,8812,"RPC",1361,0)
ORWPCE HF
"KRN",19,8812,"RPC",1362,0)
ORWPCE IMM
"KRN",19,8812,"RPC",1363,0)
ORWPCE LEX
"KRN",19,8812,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,8812,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,8812,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,8812,"RPC",1368,0)
ORWPCE PED
"KRN",19,8812,"RPC",1369,0)
ORWPCE PROC
"KRN",19,8812,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,8812,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,8812,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,8812,"RPC",1373,0)
ORWPCE SK
"KRN",19,8812,"RPC",1374,0)
ORWPCE TRT
"KRN",19,8812,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,8812,"RPC",1376,0)
ORWPCE XAM
"KRN",19,8812,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,8812,"RPC",1378,0)
ORWPS COVER
"KRN",19,8812,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,8812,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,8812,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,8812,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,8812,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,8812,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,8812,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,8812,"RPC",1386,0)
ORWPT CWAD
"KRN",19,8812,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,8812,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,8812,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,8812,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,8812,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,8812,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,8812,"RPC",1393,0)
ORWPT LAST5
"KRN",19,8812,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,8812,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,8812,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,8812,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,8812,"RPC",1398,0)
ORWPT SELECT
"KRN",19,8812,"RPC",1399,0)
ORWPT SHARE
"KRN",19,8812,"RPC",1400,0)
ORWPT TOP
"KRN",19,8812,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,8812,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,8812,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,8812,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,8812,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,8812,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,8812,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,8812,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,8812,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,8812,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,8812,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,8812,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,8812,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,8812,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,8812,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,8812,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,8812,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,8812,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,8812,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,8812,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,8812,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,8812,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,8812,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,8812,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,8812,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,8812,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,8812,"RPC",1427,0)
ORWU DEVICE
"KRN",19,8812,"RPC",1428,0)
ORWU DT
"KRN",19,8812,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,8812,"RPC",1430,0)
ORWU GBLREF
"KRN",19,8812,"RPC",1431,0)
ORWU GENERIC
"KRN",19,8812,"RPC",1432,0)
ORWU HASKEY
"KRN",19,8812,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,8812,"RPC",1434,0)
ORWU INPLOC
"KRN",19,8812,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,8812,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,8812,"RPC",1437,0)
ORWU PATCH
"KRN",19,8812,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,8812,"RPC",1439,0)
ORWU USERINFO
"KRN",19,8812,"RPC",1440,0)
ORWU VALDT
"KRN",19,8812,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,8812,"RPC",1442,0)
ORWU VERSRV
"KRN",19,8812,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,8812,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,8812,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,8812,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,8812,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,8812,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,8812,"RPC",1449,0)
ORWUH POPUP
"KRN",19,8812,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,8812,"RPC",1451,0)
ORWUXT LST
"KRN",19,8812,"RPC",1452,0)
ORWUXT REF
"KRN",19,8812,"RPC",1453,0)
ORWUXT VAL
"KRN",19,8812,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,8812,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,8812,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,8812,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,8812,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,8812,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,8812,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,8812,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,8812,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,8812,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,8812,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,8812,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,8812,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,8812,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,8812,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,8812,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,8812,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,8812,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,8812,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,8812,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,8812,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,8812,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,8812,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,8812,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,8812,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,8812,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,8812,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,8812,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,8812,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,8812,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,8812,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,8812,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,8812,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,8812,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,8812,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,8812,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,8812,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,8812,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,8812,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,8812,"RPC",1508,0)
ORWOR VWGET
"KRN",19,8812,"RPC",1509,0)
ORWOR VWSET
"KRN",19,8812,"RPC",1510,0)
ORWU PARAM
"KRN",19,8812,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,8812,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,8812,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,8812,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,8812,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,8812,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,8812,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,8812,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,8812,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,8812,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,8812,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,8812,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,8812,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,8812,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,8812,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,8812,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,8812,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,8812,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,8812,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,8812,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,8812,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,8812,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,8812,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,8812,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,8812,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,8812,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,8812,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,8812,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,8812,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,8812,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,8812,"RPC",1542,0)
ORWLRR INFO
"KRN",19,8812,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,8812,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,8812,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,8812,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,8812,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,8812,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,8812,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,8812,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,8812,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,8812,"RPC",1555,0)
YS GAF API
"KRN",19,8812,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,8812,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,8812,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,8812,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,8812,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,8812,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,8812,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,8812,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,8812,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,8812,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,8812,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,8812,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,8812,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,8812,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,8812,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,8812,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,8812,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,8812,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,8812,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,8812,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,8812,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,8812,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,8812,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,8812,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,8812,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,8812,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,8812,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,8812,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,8812,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,8812,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,8812,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,8812,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,8812,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,8812,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,8812,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,8812,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,8812,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,8812,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,8812,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,8812,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,8812,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,8812,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,8812,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,8812,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,8812,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,8812,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,8812,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,8812,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,8812,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,8812,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,8812,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,8812,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,8812,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,8812,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,8812,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,8812,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,8812,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,8812,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,8812,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,8812,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,8812,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,8812,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,8812,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,8812,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,8812,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,8812,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,8812,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,8812,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,8812,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,8812,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,8812,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,8812,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,8812,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,8812,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,8812,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,8812,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,8812,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,8812,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,8812,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,8812,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,8812,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,8812,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,8812,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,8812,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,8812,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,8812,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,8812,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,8812,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,8812,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,8812,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,8812,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,8812,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,8812,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,8812,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,8812,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,8812,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,8812,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,8812,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,8812,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,8812,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,8812,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,8812,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,8812,"RPC",1659,0)
ORWDX DGNM
"KRN",19,8812,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,8812,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,8812,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,8812,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,8812,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,8812,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,8812,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,8812,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,8812,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,8812,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,8812,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,8812,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,8812,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,8812,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,8812,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,8812,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,8812,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,8812,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,8812,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,8812,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,8812,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,8812,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,8812,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,8812,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,8812,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,8812,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,8812,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,8812,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,8812,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,8812,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,8812,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,8812,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,8812,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,8812,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,8812,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,8812,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,8812,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,8812,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,8812,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,8812,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,8812,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,8812,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,8812,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,8812,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,8812,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,8812,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,8812,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,8812,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,8812,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,8812,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,8812,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,8812,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,8812,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,8812,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,8812,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,8812,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,8812,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,8812,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,8812,"RPC",1720,0)
ORWSR LIST
"KRN",19,8812,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,8812,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,8812,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,8812,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,8812,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,8812,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,8812,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,8812,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,8812,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,8812,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,8812,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,8812,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,8812,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,8812,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,8812,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,8812,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,8812,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,8812,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,8812,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,8812,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,8812,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,8812,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,8812,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,8812,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,8812,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,8812,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,8812,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,8812,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,8812,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,8812,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,8812,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,8812,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,8812,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,8812,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,8812,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,8812,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,8812,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,8812,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,8812,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,8812,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,8812,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,8812,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,8812,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,8812,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,8812,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,8812,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,8812,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,8812,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,8812,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,8812,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,8812,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,8812,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,8812,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,8812,"RPC",1776,0)
ORWOR1 CHKDIG
"KRN",19,8812,"RPC",1777,0)
ORWOR1 GETDTEXT
"KRN",19,8812,"RPC",1778,0)
ORWOR1 GETDSIG
"KRN",19,8812,"RPC",1779,0)
ORWTPD GETIMG
"KRN",19,8812,"RPC",1780,0)
OREVNTX1 PRMPTID
"KRN",19,8812,"RPC",1781,0)
ORECS01 CHKESSO
"KRN",19,8812,"RPC",1782,0)
ORECS01 VSITID
"KRN",19,8812,"RPC",1784,0)
OREVNTX LIST
"KRN",19,8812,"RPC",1785,0)
OREVNTX PAT
"KRN",19,8812,"RPC",1786,0)
OREVNTX1 GTEVT
"KRN",19,8812,"RPC",1787,0)
OREVNTX1 CPACT
"KRN",19,8812,"RPC",1788,0)
OREVNTX1 CURSPE
"KRN",19,8812,"RPC",1789,0)
OREVNTX1 CHGEVT
"KRN",19,8812,"RPC",1790,0)
OREVNTX1 DELPTEVT
"KRN",19,8812,"RPC",1791,0)
OREVNTX1 DFLTEVT
"KRN",19,8812,"RPC",1792,0)
OREVNTX ACTIVE
"KRN",19,8812,"RPC",1793,0)
OREVNTX1 PUTEVNT
"KRN",19,8812,"RPC",1794,0)
OREVNTX1 WRLSTED
"KRN",19,8812,"RPC",1795,0)
OREVNTX1 EVT
"KRN",19,8812,"RPC",1796,0)
OREVNTX1 NAME
"KRN",19,8812,"RPC",1797,0)
OREVNTX1 MATCH
"KRN",19,8812,"RPC",1798,0)
OREVNTX1 EMPTY
"KRN",19,8812,"RPC",1799,0)
OREVNTX1 EXISTS
"KRN",19,8812,"RPC",1800,0)
OREVNTX1 GTEVT1
"KRN",19,8812,"RPC",1801,0)
OREVNTX1 DIV
"KRN",19,8812,"RPC",1802,0)
OREVNTX1 DIV1
"KRN",19,8812,"RPC",1803,0)
OREVNTX1 LOC
"KRN",19,8812,"RPC",1804,0)
OREVNTX1 LOC1
"KRN",19,8812,"RPC",1805,0)
ORWDX SENDED
"KRN",19,8812,"RPC",1806,0)
OREVNTX1 GETDLG
"KRN",19,8812,"RPC",1807,0)
ORECS01 ECPRINT
"KRN",19,8812,"RPC",1811,0)
ORECS01 ECRPT
"KRN",19,8812,"RPC",1812,0)
OREVNTX1 ISDCOD
"KRN",19,8812,"RPC",1813,0)
OREVNTX1 SETDFLT
"KRN",19,8812,"RPC",1815,0)
TIU IS THIS A CLINPROC?
"KRN",19,8812,"RPC",1816,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,8812,"RPC",1817,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,8812,"RPC",1819,0)
ORWDPS1 HASOIPI
"KRN",19,8812,"RPC",1821,0)
OREVNTX1 DEFLTS
"KRN",19,8812,"RPC",1822,0)
OREVNTX1 MULTS
"KRN",19,8812,"RPC",1823,0)
OREVNTX1 DONE
"KRN",19,8812,"RPC",1824,0)
OREVNTX1 PROMPT IDS
"KRN",19,8812,"RPC",1825,0)
ORWCIRN CHECKLINK
"KRN",19,8812,"RPC",1826,0)
XWB DIRECT RPC
"KRN",19,8812,"RPC",1827,0)
ORWDPS1 HASROUTE
"KRN",19,8812,"RPC",1828,0)
ORQQCN UNRESOLVED
"KRN",19,8812,"RPC",1829,0)
OREVNTX1 DELDFLT
"KRN",19,8812,"RPC",1830,0)
ORWCH LDFONT
"KRN",19,8812,"RPC",1831,0)
ORWU1 NAMECVT
"KRN",19,8812,"RPC",1832,0)
OREVNTX1 DFLTDLG
"KRN",19,8812,"RPC",1833,0)
ORWDPS5 LESAPI
"KRN",19,8812,"RPC",1834,0)
ORWDPS5 LESGRP
"KRN",19,8812,"RPC",1839,0)
OREVNTX1 TYPEXT
"KRN",19,8812,"RPC",1840,0)
ORWORR RGET
"KRN",19,8812,"RPC",1841,0)
OREVNTX1 AUTHMREL
"KRN",19,8812,"RPC",1842,0)
OREVNTX1 HAVEPRT
"KRN",19,8812,"RPC",1843,0)
OREVNTX1 CMEVTS
"KRN",19,8812,"RPC",1844,0)
OREVNTX1 ODPTEVID
"KRN",19,8812,"RPC",1845,0)
ORWOR PKISITE
"KRN",19,8812,"RPC",1846,0)
OREVNTX1 COMP
"KRN",19,8812,"RPC",1847,0)
OREVNTX1 ISHDORD
"KRN",19,8812,"RPC",1848,0)
ORWDXR ORCPLX
"KRN",19,8812,"RPC",1849,0)
OREVNTX1 ISPASS
"KRN",19,8812,"RPC",1850,0)
OREVNTX1 ISPASS1
"KRN",19,8812,"RPC",1851,0)
OREVNTX1 DLGIEN
"KRN",19,8812,"RPC",1852,0)
ORWDXR CANRN
"KRN",19,8812,"RPC",1853,0)
ORWDXR ISCPLX
"KRN",19,8812,"RPC",1854,0)
ORWDXA OFCPLX
"KRN",19,8812,"RPC",1855,0)
ORQQPX GET NOT PURPOSE
"KRN",19,8812,"RPC",1856,0)
ORWDPS1 IVDEA
"KRN",19,8812,"RPC",1857,0)
ORWDXR ISNOW
"KRN",19,8812,"RPC",1858,0)
ORRHCQ QRYITR
"KRN",19,8812,"RPC",1859,0)
OREVNTX1 GETSTS
"KRN",19,8812,"RPC",1860,0)
ORWU DEFAULT DIVISION
"KRN",19,8812,"RPC",1861,0)
ORWDXA ISACTOI
"KRN",19,8812,"RPC",1862,0)
ORECS01 SAVPATH
"KRN",19,8812,"RPC",1863,0)
ORWOR RESULT HISTORY
"KRN",19,8812,"RPC",1864,0)
XUS GET TOKEN
"KRN",19,8812,"RPC",1865,0)
ORQQPX IMMUN LIST
"KRN",19,8812,"RPC",1866,0)
XWB DEFERRED CLEARALL
"KRN",19,8812,"RPC",1867,0)
ORWOR1 SETDTEXT
"KRN",19,8812,"RPC",1868,0)
ORWOR1 GETDEA
"KRN",19,8812,"RPC",1869,0)
ORWOR1 GETDSCH
"KRN",19,8812,"RPC",1870,0)
ORWORB TEXT FOLLOWUP
"KRN",19,8812,"RPC",1871,0)
ORWU1 NEWLOC
"KRN",19,8812,"RPC",1872,0)
ORWPCE ACTIVE CODE
"KRN",19,8812,"RPC",1873,0)
ORQQPXRM GET WH LETTER TEXT
"KRN",19,8812,"RPC",1874,0)
ORQQPXRM GET WH LETTER TYPE
"KRN",19,8812,"RPC",1875,0)
ORQQPXRM GET WH PROC RESULT
"KRN",19,8812,"RPC",1876,0)
ORQQPXRM WOMEN HEALTH SAVE
"KRN",19,8812,"RPC",1877,0)
ORB FORWARD ALERT
"KRN",19,8812,"RPC",1878,0)
ORB RENEW ALERT
"KRN",19,8812,"RPC",1879,0)
ORPRF CLEAR
"KRN",19,8812,"RPC",1880,0)
ORPRF GETFLG
"KRN",19,8812,"RPC",1881,0)
ORPRF HASFLG
"KRN",19,8812,"RPC",1882,0)
ORWTPD GETOCM
"KRN",19,8812,"RPC",1883,0)
TIU ONE VISIT NOTE?
"KRN",19,8812,"RPC",1884,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,8812,"RPC",1885,0)
ORIMO IMOLOC
"KRN",19,8812,"RPC",1886,0)
ORIMO IMOOD
"KRN",19,8812,"RPC",1887,0)
ORWDPS4 IPOD4OP
"KRN",19,8812,"RPC",1888,0)
ORWDPS4 UPDTDG
"KRN",19,8812,"RPC",1889,0)
TIU USER INACTIVE?
"KRN",19,8812,"RPC",1890,0)
ORWTPD PUTOCM
"KRN",19,8812,"RPC",1891,0)
ORWOR ACTION TEXT
"KRN",19,8812,"RPC",1892,0)
ORQQPXRM GEC DIALOG
"KRN",19,8812,"RPC",1893,0)
ORQQPXRM GET WH REPORT TEXT
"KRN",19,8812,"RPC",1894,0)
ORWDXR01 CANCHG
"KRN",19,8812,"RPC",1895,0)
ORWDXR01 SAVCHG
"KRN",19,8812,"RPC",1896,0)
TIU HAS AUTHOR SIGNED?
"KRN",19,8812,"RPC",1897,0)
ORQQPXRM CHECK REM VERSION
"KRN",19,8812,"RPC",1898,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,8812,"RPC",1899,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,8812,"RPC",1900,0)
ORWDAL32 SEND BULLETIN
"KRN",19,8812,"RPC",1901,0)
ORWDBA1 ORPKGTYP
"KRN",19,8812,"RPC",1902,0)
ORWDXR01 ISSPLY
"KRN",19,8812,"RPC",1903,0)
ORWDBA1 RCVORCI
"KRN",19,8812,"RPC",1904,0)
ORWPS REASON
"KRN",19,8812,"RPC",1905,0)
ORQQPXRM GEC FINISHED?
"KRN",19,8812,"RPC",1906,0)
ORWDXM3 ISUDQO
"KRN",19,8812,"RPC",1908,0)
ORWDBA1 SCLST
"KRN",19,8812,"RPC",1909,0)
ORWDXR01 OXDATA
"KRN",19,8812,"RPC",1914,0)
ORWDBA1 BASTATUS
"KRN",19,8812,"RPC",1920,0)
ORWORB SETSORT
"KRN",19,8812,"RPC",1921,0)
ORWORB GETSORT
"KRN",19,8812,"RPC",1922,0)
ORWOR EXPIRED
"KRN",19,8812,"RPC",1928,0)
ORECS01 GETDIV
"KRN",19,8812,"RPC",1933,0)
ORWTPD1 GETEFDAT
"KRN",19,8812,"RPC",1934,0)
ORWTPD1 GETEDATS
"KRN",19,8812,"RPC",1935,0)
ORWTPD1 PUTEDATS
"KRN",19,8812,"RPC",1936,0)
ORWTPD1 GETCSDEF
"KRN",19,8812,"RPC",1937,0)
ORWTPD1 GETCSRNG
"KRN",19,8812,"RPC",1938,0)
ORWTPD1 PUTCSRNG
"KRN",19,8812,"RPC",1939,0)
ORWTPD1 GETEAFL
"KRN",19,8812,"RPC",1940,0)
ORWDBA1 GETORDX
"KRN",19,8812,"RPC",1941,0)
ORWDBA3 HINTS
"KRN",19,8812,"RPC",1942,0)
ORWDAL32 LOAD FOR EDIT
"KRN",19,8812,"RPC",1943,0)
ORWDAL32 SAVE ALLERGY
"KRN",19,8812,"RPC",1944,0)
ORWDAL32 SITE PARAMS
"KRN",19,8812,"RPC",1945,0)
ORWPCE CXNOSHOW
"KRN",19,8812,"RPC",1946,0)
ORWDBA2 ADDPDL
"KRN",19,8812,"RPC",1947,0)
ORWDBA2 DELPDL
"KRN",19,8812,"RPC",1948,0)
ORWDBA2 GETDUDC
"KRN",19,8812,"RPC",1949,0)
ORWDBA2 GETPDL
"KRN",19,8812,"RPC",1950,0)
ORWDBA4 GETBAUSR
"KRN",19,8812,"RPC",1951,0)
ORWDBA4 GETTFCI
"KRN",19,8812,"RPC",1952,0)
ORWNSS NSSMSG
"KRN",19,8812,"RPC",1953,0)
ORWNSS QOSCH
"KRN",19,8812,"RPC",1954,0)
ORWNSS VALSCH
"KRN",19,8812,"RPC",1955,0)
ORWNSS CHKSCH
"KRN",19,8812,"RPC",1956,0)
ORWDPS4 ISUDIV
"KRN",19,8812,"RPC",1957,0)
ORWDPS32 AUTHNVA
"KRN",19,8812,"RPC",1962,0)
ORWTIU CHKTXT
"KRN",19,8812,"RPC",1964,0)
ORWDPS5 ISVTP
"KRN",19,8812,"RPC",1965,0)
TIU IS THIS A SURGERY?
"KRN",19,8812,"RPC",1966,0)
TIU IDENTIFY SURGERY CLASS
"KRN",19,8812,"RPC",1967,0)
TIU LONG LIST SURGERY TITLES
"KRN",19,8812,"RPC",1968,0)
TIU GET DOCUMENTS FOR REQUEST
"KRN",19,8812,"RPC",1969,0)
TIU SET ADMINISTRATIVE CLOSURE
"KRN",19,8812,"RPC",1970,0)
ORBCMA5 GETUDID
"KRN",19,8812,"RPC",1973,0)
ORIMO ISCLOC
"KRN",19,8812,"RPC",1974,0)
ORIMO ISIVQO
"KRN",19,8812,"RPC",1975,0)
ORWDBA7 GETIEN9
"KRN",19,8812,"RPC",1976,0)
ORWGN GNLOC
"KRN",19,8812,"RPC",1977,0)
ORWGN AUTHUSR
"KRN",19,8812,"RPC",1978,0)
ORVAA VAA
"KRN",19,8812,"RPC",1981,0)
ORWDAL32 CLINUSER
"KRN",19,8812,"RPC",1982,0)
ORWDBA7 ISWITCH
"KRN",19,8812,"RPC",1983,0)
ORWDFH CURRENT MEALS
"KRN",19,8812,"RPC",1984,0)
ORWDFH NFSLOC READY
"KRN",19,8812,"RPC",1985,0)
ORWDFH OPDIETS
"KRN",19,8812,"RPC",1986,0)
ORWMHV MHV
"KRN",19,8812,"RPC",1987,0)
ORWPCE1 NONCOUNT
"KRN",19,8812,"RPC",1988,0)
ORWPFSS IS PFSS ACTIVE?
"KRN",19,8812,"RPC",1989,0)
GMV EXTRACT REC
"KRN",19,8812,"RPC",1990,0)
GMV MARK ERROR
"KRN",19,8812,"RPC",1991,0)
ORWDXVB COMPORD
"KRN",19,8812,"RPC",1992,0)
ORWDXVB GETALL
"KRN",19,8812,"RPC",1993,0)
ORWDXVB RAW
"KRN",19,8812,"RPC",1994,0)
ORWDXVB RESULTS
"KRN",19,8812,"RPC",1995,0)
ORWDXVB STATALOW
"KRN",19,8812,"RPC",1996,0)
ORWGRPC ALLITEMS
"KRN",19,8812,"RPC",1997,0)
ORWGRPC CLASS
"KRN",19,8812,"RPC",1998,0)
ORWGRPC DATEITEM
"KRN",19,8812,"RPC",1999,0)
ORWGRPC DELVIEWS
"KRN",19,8812,"RPC",2000,0)
ORWGRPC DETAILS
"KRN",19,8812,"RPC",2001,0)
ORWGRPC GETDATES
"KRN",19,8812,"RPC",2002,0)
ORWGRPC GETPREF
"KRN",19,8812,"RPC",2003,0)
ORWGRPC GETVIEWS
"KRN",19,8812,"RPC",2004,0)
ORWGRPC ITEMDATA
"KRN",19,8812,"RPC",2005,0)
ORWGRPC ITEMS
"KRN",19,8812,"RPC",2006,0)
ORWGRPC LOOKUP
"KRN",19,8812,"RPC",2007,0)
ORWGRPC PUBLIC
"KRN",19,8812,"RPC",2008,0)
ORWGRPC RPTPARAM
"KRN",19,8812,"RPC",2009,0)
ORWGRPC SETPREF
"KRN",19,8812,"RPC",2010,0)
ORWGRPC SETVIEWS
"KRN",19,8812,"RPC",2011,0)
ORWGRPC TESTSPEC
"KRN",19,8812,"RPC",2012,0)
ORWGRPC TYPES
"KRN",19,8812,"RPC",2013,0)
TIU GET DOCUMENT STATUS
"KRN",19,8812,"RPC",2014,0)
TIU GET PRF ACTIONS
"KRN",19,8812,"RPC",2015,0)
TIU ISPRF
"KRN",19,8812,"RPC",2016,0)
TIU LINK TO FLAG
"KRN",19,8812,"RPC",2017,0)
ORWGRPC DETAIL
"KRN",19,8812,"RPC",2018,0)
ORWU VERSION
"KRN",19,8812,"RPC",2019,0)
GMV ALLERGY
"KRN",19,8812,"RPC",2020,0)
ORWCIRN WEBADDR
"KRN",19,8812,"RPC",2023,0)
ORWGRPC TAX
"KRN",19,8812,"RPC",2024,0)
GMV DLL VERSION
"KRN",19,8812,"RPC",2025,0)
ORWDX CHANGE
"KRN",19,8812,"RPC",2026,0)
GMV ADD VM
"KRN",19,8812,"RPC",2027,0)
GMV CONVERT DATE
"KRN",19,8812,"RPC",2028,0)
GMV GET CATEGORY IEN
"KRN",19,8812,"RPC",2029,0)
GMV GET CURRENT TIME
"KRN",19,8812,"RPC",2030,0)
GMV GET VITAL TYPE IEN
"KRN",19,8812,"RPC",2031,0)
GMV LATEST VM
"KRN",19,8812,"RPC",2032,0)
GMV MANAGER
"KRN",19,8812,"RPC",2033,0)
GMV PARAMETER
"KRN",19,8812,"RPC",2034,0)
GMV USER
"KRN",19,8812,"RPC",2035,0)
GMV VITALS/CAT/QUAL
"KRN",19,8812,"RPC",2036,0)
GMV V/M ALLDATA
"KRN",19,8812,"RPC",2037,0)
TIU GET LINKED PRF NOTES
"KRN",19,8812,"RPC",2038,0)
TIU GET PRF TITLE
"KRN",19,8812,"RPC",2039,0)
ORWDX1 PATWARD
"KRN",19,8812,"RPC",2040,0)
ORWRP4 HDR MODIFY
"KRN",19,8812,"RPC",2041,0)
ORWDX1 STCHANGE
"KRN",19,8812,"RPC",2042,0)
ORWDX1 DCREN
"KRN",19,8812,"RPC",2043,0)
ORQQPXRM MHV
"KRN",19,8812,"RPC",2044,0)
ORWGRPC GETSIZE
"KRN",19,8812,"RPC",2045,0)
ORWGRPC SETSIZE
"KRN",19,8812,"RPC",2046,0)
GMV LOCATION SELECT
"KRN",19,8812,"RPC",2047,0)
ORWCIRN AUTORDV
"KRN",19,8812,"RPC",2048,0)
ORPRF TRIGGER POPUP
"KRN",19,8812,"RPC",2049,0)
ORWCIRN HDRON
"KRN",19,8812,"RPC",2051,0)
ORCDLR2 CHECK ALL LC TO WC
"KRN",19,8812,"RPC",2052,0)
ORCDLR2 CHECK ONE LC TO WC
"KRN",19,8812,"RPC",2053,0)
ORALWORD ALLWORD
"KRN",19,8812,"RPC",2054,0)
ORWDX1 ORDMATCH
"KRN",19,8812,"RPC",2055,0)
ORWDX1 DCORIG
"KRN",19,8812,"RPC",2056,0)
ORWDX1 UNDCORIG
"KRN",19,8812,"RPC",2057,0)
ORWDXVB SUBCHK
"KRN",19,8812,"RPC",2058,0)
ORDDPAPI ADMTIME
"KRN",19,8812,"RPC",2059,0)
ORWU PARAMS
"KRN",19,8812,"RPC",2060,0)
ORWDPS1 DOWSCH
"KRN",19,8812,"RPC",2061,0)
ORWDPS33 COMPLOC
"KRN",19,8812,"RPC",2062,0)
ORWGRPC FASTDATA
"KRN",19,8812,"RPC",2063,0)
ORWGRPC FASTITEM
"KRN",19,8812,"RPC",2064,0)
ORWGRPC FASTTASK
"KRN",19,8812,"RPC",2065,0)
ORWGRPC FASTLABS
"KRN",19,8812,"RPC",2066,0)
ORWDPS1 QOMEDALT
"KRN",19,8812,"RPC",2067,0)
ORWGRPC ALLVIEWS
"KRN",19,8812,"RPC",2068,0)
ORDDPAPI CLOZMSG
"KRN",19,8812,"RPC",2069,0)
ORWGRPC TESTING
"KRN",19,8812,"RPC",2070,0)
ORQQPXRM MHDLL
"KRN",19,8812,"RPC",2071,0)
ORWDLR33 LC TO WC
"KRN",19,8812,"RPC",2072,0)
ORWU2 COSIGNER
"KRN",19,8812,"RPC",2073,0)
ORWDXVB NURSADMN
"KRN",19,8812,"RPC",2074,0)
ORQQPXRM MHDLLDMS
"KRN",19,8812,"RPC",2075,0)
TIU IS USER A USR PROVIDER
"KRN",19,8812,"RPC",2076,0)
ORWDPS33 IVDOSFRM
"KRN",19,8812,"RPC",2077,0)
ORWDPS32 ALLIVRTE
"KRN",19,8812,"RPC",2078,0)
ORWDXM1 SVRPC
"KRN",19,8812,"RPC",2079,0)
ORWDXVB VBTNS
"KRN",19,8812,"RPC",2080,0)
MAG4 REMOTE IMPORT
"KRN",19,8812,"RPC",2081,0)
ORWDX UNLKOTH
"KRN",19,8812,"RPC",2082,0)
OR GET COMBAT VET
"KRN",19,8812,"RPC",2083,0)
GMV CLOSEST READING
"KRN",19,8812,"U")
CPRSCHART VERSION 1.0.27.90
"KRN",19,10328,-1)
0^2
"KRN",19,10328,0)
OR MEDICATION QO CHECKER^Medication Quick Order Report^^A^^^^^^^^ORDER ENTRY/RESULTS REPORTING^^1
"KRN",19,10328,1,0)
^19.06^6^6^3081001^^
"KRN",19,10328,1,1,0)
This option generates two reports (printed to an e-mail message sent to 
"KRN",19,10328,1,2,0)
the originator of the report) of Quick Orders that should be evaluated 
"KRN",19,10328,1,3,0)
due to the addition of three new fields in CPRS 27:  Route, IV Type and 
"KRN",19,10328,1,4,0)
Schedule.  One report includes QOs that are contained in an order menu, 
"KRN",19,10328,1,5,0)
order set or a reminder dialog.  The other report includes QOs that are 
"KRN",19,10328,1,6,0)
stand alone and not included in another entry. 
"KRN",19,10328,20)
D ATWILL^ORWOD
"KRN",19,10328,"U")
MEDICATION QUICK ORDER REPORT
"KRN",8989.5,16848,0)
110;DIC(9.4,^ORWRP TIME/OCC LIMITS INDV^1150
"KRN",8989.5,16848,1)
T-400;T;100
"KRN",8989.51,105,-1)
0^2
"KRN",8989.51,105,0)
ORPF ACTIVE ORDERS CONTEXT HRS^Active Orders Context Hours^^^ACTIVE ORDERS CONTEXT HOURS
"KRN",8989.51,105,1)
N^^Enter the number of hours to include terminated orders in the Active Orders view
"KRN",8989.51,105,20,0)
^8989.512^2^2^3090224^^^^
"KRN",8989.51,105,20,1,0)
This parameter defines the number of hours that orders remain in the
"KRN",8989.51,105,20,2,0)
"Active/Current Orders" context after they have been completed.
"KRN",8989.51,105,30,0)
^8989.513I^1^1
"KRN",8989.51,105,30,1,0)
1^4.2
"KRN",8989.51,4738,-1)
0^1
"KRN",8989.51,4738,0)
ORWRP TIME/OCC LIMITS INDV^Report time & occurrence limits^1^Report^Time & Occurrence Limits 
"KRN",8989.51,4738,1)
F^^Format: Start date;End date;Occurrence limit (T-100;T;100)
"KRN",8989.51,4738,2)
K:$L(Y,";")'=3!($E(Y)'="T")!($E($P(Y,";",2))'="T")!('$P(Y,";",3)) X
"KRN",8989.51,4738,6)
P^101.24^Enter report to specify time & occurrence
"KRN",8989.51,4738,8)
I $P($G(^ORD(101.24,+Y,0)),"^",12)'="M"
"KRN",8989.51,4738,20,0)
^8989.512^2^2^3080930^^^^
"KRN",8989.51,4738,20,1,0)
This parameter sets the default time and occurrence limits for reports
"KRN",8989.51,4738,20,2,0)
found on the Reports and Labs Tabs in CPRS.
"KRN",8989.51,4738,30,0)
^8989.513I^3^3
"KRN",8989.51,4738,30,1,0)
1^200
"KRN",8989.51,4738,30,2,0)
6^4.2
"KRN",8989.51,4738,30,3,0)
9^9.4
"KRN",8994,3052,-1)
0^3
"KRN",8994,3052,0)
OR GET COMBAT VET^CV^ORMARKER^2^R^0^^^1
"KRN",8994,3053,-1)
0^2
"KRN",8994,3053,0)
ORWDX UNLKOTH^UNLKOTH^ORWDX^1
"KRN",8994,3058,-1)
0^4
"KRN",8994,3058,0)
GMV CLOSEST READING^CLOSEST^GMVGETD^1^R^0
"KRN",8994,3058,1,0)
^^3^3^3090225^
"KRN",8994,3058,1,1,0)
This remote procedure call returns the observation date/time and reading 
"KRN",8994,3058,1,2,0)
of the record closest to the date/time specified for the patient and vital
"KRN",8994,3058,1,3,0)
type.
"KRN",8994,3058,2,0)
^8994.02A^4^4
"KRN",8994,3058,2,1,0)
GMVDFN^1^12^1^1
"KRN",8994,3058,2,1,1,0)
^^1^1^3090225^
"KRN",8994,3058,2,1,1,1,0)
A pointer to the Patient (#2) file (i.e., DFN).
"KRN",8994,3058,2,2,0)
GMVDT^1^14^0^2
"KRN",8994,3058,2,2,1,0)
^8994.021^1^1^3090225^^^
"KRN",8994,3058,2,2,1,1,0)
The date/time to search from. The default is NOW.
"KRN",8994,3058,2,3,0)
GMVT^1^5^1^3
"KRN",8994,3058,2,3,1,0)
^8994.021^2^2^3090225^^^
"KRN",8994,3058,2,3,1,1,0)
The vital type abbreviation as it appears in FILE 120.51, Field 1 (e.g., 
"KRN",8994,3058,2,3,1,2,0)
WT).
"KRN",8994,3058,2,4,0)
GMVFLAG^1^1^0^4
"KRN",8994,3058,2,4,1,0)
^8994.021^3^3^3090225^^
"KRN",8994,3058,2,4,1,1,0)
A flag to indicate if the search should look before or after the date/time
"KRN",8994,3058,2,4,1,2,0)
specified in the GMVDT value where 1 indicates before, 2 indicates after
"KRN",8994,3058,2,4,1,3,0)
and 0 indicates either direction.
"KRN",8994,3058,2,"B","GMVDFN",1)

"KRN",8994,3058,2,"B","GMVDT",2)

"KRN",8994,3058,2,"B","GMVFLAG",4)

"KRN",8994,3058,2,"B","GMVT",3)

"KRN",8994,3058,2,"PARAMSEQ",1,1)

"KRN",8994,3058,2,"PARAMSEQ",2,2)

"KRN",8994,3058,2,"PARAMSEQ",3,3)

"KRN",8994,3058,2,"PARAMSEQ",4,4)

"KRN",8994,3058,3,0)
^8994.03^11^11^3090225^^^
"KRN",8994,3058,3,1,0)
Returns a string composed of two pieces. The first piece contains the 
"KRN",8994,3058,3,2,0)
observation date/time (FILE 120.5, Field .01) of the record that was 
"KRN",8994,3058,3,3,0)
found. The second piece contains the rate (FILE 120.5, Field 1.2) of the 
"KRN",8994,3058,3,4,0)
record. If there is an error, the first piece will be -1 and the second 
"KRN",8994,3058,3,5,0)
piece will be the error text.
"KRN",8994,3058,3,6,0)
 
"KRN",8994,3058,3,7,0)
 Example:
"KRN",8994,3058,3,8,0)
 
"KRN",8994,3058,3,9,0)
 > S GMVDFN=134,GMVDT=3090225.08,GMVT="WT",GMVFLAG=0
"KRN",8994,3058,3,10,0)
 > D CLOSEST(.TEST,GMVDFN,GMVDT,GMVT,GMVFLAG) ZW TEST
"KRN",8994,3058,3,11,0)
 > TEST="3081106.142926^135"
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",101.41,0,5,5)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"PGL",101.41,0,7,7)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"PGL",101.412,0,2,2)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"PGL",101.412,0,11,1)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"PGL",101.415,0,2,2)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"PGL",101.416,0,2,.02)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"PKG",110,-1)
1^1
"PKG",110,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",110,20,0)
^9.402P^^
"PKG",110,22,0)
^9.49I^1^1
"PKG",110,22,1,0)
3.0^2971217
"PKG",110,22,1,"PAH",1,0)
296^3090507
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
41
"RTN","OR3CONV")
0^38^B57296998
"RTN","OR3CONV",1,0)
OR3CONV ;SLC/MLI-OE/RR v3 conversion entry points ;8/11/06  13:31
"RTN","OR3CONV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**14,215,260,243,296**;Dec 17, 1997;Build 19
"RTN","OR3CONV",3,0)
 ;
"RTN","OR3CONV",4,0)
 ; This routine contains the entry points to convert orders from
"RTN","OR3CONV",5,0)
 ; all package (OE/RR, pharmacy, dietetics, etc.).
"RTN","OR3CONV",6,0)
 ;
"RTN","OR3CONV",7,0)
 ; Entry points exist for:
"RTN","OR3CONV",8,0)
 ; A. background conversion of orders (steps described in tag):  (BGJ)
"RTN","OR3CONV",9,0)
 ; B. on-the-fly conversion if record is accessed before background
"RTN","OR3CONV",10,0)
 ;    conversion gets to it.                                   (OTF)
"RTN","OR3CONV",11,0)
 ;
"RTN","OR3CONV",12,0)
 ; Only OTF is a supported call.  Remaining calls in routine are
"RTN","OR3CONV",13,0)
 ; only called from within this routine (no external calls made in).
"RTN","OR3CONV",14,0)
 ;
"RTN","OR3CONV",15,0)
 ; Supporting calls exist in OR3CONV1 as follows:
"RTN","OR3CONV",16,0)
 ; A. stop conversion process cleanly once in bgj              (STOP)
"RTN","OR3CONV",17,0)
 ; B. restarting background process if it did not complete.    (RESTART)
"RTN","OR3CONV",18,0)
 ; C. check status of conversion process                       (STATUS)
"RTN","OR3CONV",19,0)
 ;
"RTN","OR3CONV",20,0)
 Q
"RTN","OR3CONV",21,0)
 ;
"RTN","OR3CONV",22,0)
QUEUE ; queue background process to run.  DO NOT CALL MANUALLY!
"RTN","OR3CONV",23,0)
 ; called from OR3POST and RESTART^OR3CONV1
"RTN","OR3CONV",24,0)
 ;
"RTN","OR3CONV",25,0)
 ; check entry...disallow calling tag once conversion has begun
"RTN","OR3CONV",26,0)
 N X
"RTN","OR3CONV",27,0)
 S X=$G(^ORD(100.99,1,"CONV"))
"RTN","OR3CONV",28,0)
 I '$D(ZTSAVE("ORESTART")),$P(X,"^",1) W !!,"Conversion already done!" Q
"RTN","OR3CONV",29,0)
 I '$D(ZTSAVE("ORESTART")),($P(X,"^",10)]"") D  Q
"RTN","OR3CONV",30,0)
 . W !,"The conversion has already started."
"RTN","OR3CONV",31,0)
 . W !,"Please call RESTART^OR3CONV1 to restart the conversion!"
"RTN","OR3CONV",32,0)
 . Q
"RTN","OR3CONV",33,0)
 ;
"RTN","OR3CONV",34,0)
 ; if restart, ZTSAVE("ORESTART") set on entry - ask time to queue
"RTN","OR3CONV",35,0)
 S ZTIO="",ZTRTN="BGJ^OR3CONV"
"RTN","OR3CONV",36,0)
 I '$D(ZTSAVE("ORESTART")) S ZTDTH=$$NOW^XLFDT()
"RTN","OR3CONV",37,0)
 S ZTDESC="OE/RR v3 orders conversion...use STATUS^OR3CONV1 to track progress"
"RTN","OR3CONV",38,0)
 ;S:$D(ZTSAVE("ORESTART")) ORESTART=ZTSAVE("ORESTART") D BGJ^OR3CONV ; *****for testing only*****
"RTN","OR3CONV",39,0)
 D ^%ZTLOAD
"RTN","OR3CONV",40,0)
 I $G(ZTSK) D
"RTN","OR3CONV",41,0)
 . D BMES^XPDUTL("Orders conversion tasked - #"_ZTSK)
"RTN","OR3CONV",42,0)
 . D SET(10,ZTSK)
"RTN","OR3CONV",43,0)
 E  D
"RTN","OR3CONV",44,0)
 . D BMES^XPDUTL("***Problem encountered queuing conversion***")
"RTN","OR3CONV",45,0)
 . D MES^XPDUTL("   D QUEUE^OR3CONV to start manually.")
"RTN","OR3CONV",46,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","OR3CONV",47,0)
 Q
"RTN","OR3CONV",48,0)
 ;
"RTN","OR3CONV",49,0)
BGJ ; process via background job in order below
"RTN","OR3CONV",50,0)
 ; if restart, set ORPROCES = to step last on, call BGJ1
"RTN","OR3CONV",51,0)
 ;   0.  initialize list of patients to convert, then convert orders for:
"RTN","OR3CONV",52,0)
 ;   1.  current inpatients
"RTN","OR3CONV",53,0)
 ;   2.  patients with future scheduled admissions
"RTN","OR3CONV",54,0)
 ;   3.  patients on waiting list
"RTN","OR3CONV",55,0)
 ;   4.  patients with discharges in last 4 weeks
"RTN","OR3CONV",56,0)
 ;   5.  patients with appointments in last 4 weeks or next 4 weeks
"RTN","OR3CONV",57,0)
 ;   6.  everyone else (loop through DPT for remaining patients)
"RTN","OR3CONV",58,0)
 ;   7.  orders associated with entities not in the PATIENT file
"RTN","OR3CONV",59,0)
 ;
"RTN","OR3CONV",60,0)
 I '$D(ZTQUEUED) W !,"Use RESTART^OR3CONV1!!!" Q  ; prevent calling tag
"RTN","OR3CONV",61,0)
 ;
"RTN","OR3CONV",62,0)
 N ORPROCES,ORSTOP
"RTN","OR3CONV",63,0)
 S ORSTOP=0 D SET(11,0) ; reset stop conversion parameter to no
"RTN","OR3CONV",64,0)
 I $D(ORESTART) D
"RTN","OR3CONV",65,0)
 . S ORPROCES=+$P(^ORD(100.99,1,"CONV"),"^",8)
"RTN","OR3CONV",66,0)
 E  D
"RTN","OR3CONV",67,0)
 . S ORPROCES=0
"RTN","OR3CONV",68,0)
 . D SET(6,$$NOW^XLFDT())
"RTN","OR3CONV",69,0)
 F  Q:ORPROCES>7  D  Q:ORSTOP
"RTN","OR3CONV",70,0)
 . D SET(8,ORPROCES) ; update process currently on
"RTN","OR3CONV",71,0)
 . D @ORPROCES Q:ORSTOP
"RTN","OR3CONV",72,0)
 . S ORPROCES=ORPROCES+1
"RTN","OR3CONV",73,0)
 I ORSTOP D SET(10,"") ; delete out task job
"RTN","OR3CONV",74,0)
 Q
"RTN","OR3CONV",75,0)
 ;
"RTN","OR3CONV",76,0)
0 ; populate list of patients to convert
"RTN","OR3CONV",77,0)
 I '$D(ORESTART) D SET(1,0)
"RTN","OR3CONV",78,0)
 D PTCONV^OR3CONV1
"RTN","OR3CONV",79,0)
 Q
"RTN","OR3CONV",80,0)
 ;
"RTN","OR3CONV",81,0)
1 ; order conversion for inpatients
"RTN","OR3CONV",82,0)
 N DFN,ORWARD,X
"RTN","OR3CONV",83,0)
 S ORWARD=$S($D(ORESTART):ORESTART,1:"") K ORESTART
"RTN","OR3CONV",84,0)
 F  S ORWARD=$O(^DPT("CN",ORWARD)) Q:ORWARD']""!ORSTOP  D
"RTN","OR3CONV",85,0)
 . D SET(4,ORWARD)
"RTN","OR3CONV",86,0)
 . F DFN=0:0 S DFN=$O(^DPT("CN",ORWARD,DFN)) Q:'DFN!ORSTOP  D
"RTN","OR3CONV",87,0)
 . . D SET(5,DFN)
"RTN","OR3CONV",88,0)
 . . S X=$$CONVERT(DFN,1)
"RTN","OR3CONV",89,0)
 . D SET(9,ORWARD)
"RTN","OR3CONV",90,0)
 D SET(3,$$NOW^XLFDT())
"RTN","OR3CONV",91,0)
 Q
"RTN","OR3CONV",92,0)
 ;
"RTN","OR3CONV",93,0)
 ;
"RTN","OR3CONV",94,0)
2 ; patients with future scheduled admissions
"RTN","OR3CONV",95,0)
 N ORDATE,ORIEN,X
"RTN","OR3CONV",96,0)
 S ORDATE=$S($G(ORESTART):ORESTART,1:$$NOW^XLFDT()) K ORESTART
"RTN","OR3CONV",97,0)
 F  S ORDATE=$O(^DGS(41.1,"C",ORDATE)) Q:'ORDATE!ORSTOP  D
"RTN","OR3CONV",98,0)
 . F ORIEN=0:0 S ORIEN=$O(^DGS(41.1,"C",ORDATE,ORIEN)) Q:'ORIEN!ORSTOP  D
"RTN","OR3CONV",99,0)
 . . S X=$G(^DGS(41.1,ORIEN,0))
"RTN","OR3CONV",100,0)
 . . I X']"" Q
"RTN","OR3CONV",101,0)
 . . S X=$$CONVERT(+X,1)
"RTN","OR3CONV",102,0)
 . . D SET(9,ORDATE)
"RTN","OR3CONV",103,0)
 Q
"RTN","OR3CONV",104,0)
 ;
"RTN","OR3CONV",105,0)
 ;
"RTN","OR3CONV",106,0)
3 ; patients on waiting list
"RTN","OR3CONV",107,0)
 N DFN,ORIEN,ORIEN1,ORFLAG,X
"RTN","OR3CONV",108,0)
 S DFN=+$G(ORESTART) K ORESTART
"RTN","OR3CONV",109,0)
 F  S DFN=$O(^DGWAIT("C",DFN)) Q:'DFN!ORSTOP  D
"RTN","OR3CONV",110,0)
 . S ORFLAG=0
"RTN","OR3CONV",111,0)
 . F ORIEN=0:0 S ORIEN=$O(^DGWAIT("C",DFN,ORIEN)) Q:'ORIEN  D  Q:ORFLAG
"RTN","OR3CONV",112,0)
 . . F ORIEN1=0:0 S ORIEN1=$O(^DGWAIT("C",DFN,ORIEN,ORIEN1)) Q:'ORIEN1  D
"RTN","OR3CONV",113,0)
 . . . I $G(^DGWAIT(ORIEN,"P",ORIEN1,"ADM")) Q  ; no longer active
"RTN","OR3CONV",114,0)
 . . . S X=$$CONVERT(DFN,1),ORFLAG=1
"RTN","OR3CONV",115,0)
 . . . D SET(9,DFN)
"RTN","OR3CONV",116,0)
 Q
"RTN","OR3CONV",117,0)
 ;
"RTN","OR3CONV",118,0)
 ;
"RTN","OR3CONV",119,0)
4 ; patients with discharges in last 4 weeks
"RTN","OR3CONV",120,0)
 N DFN,ORDISCH,X
"RTN","OR3CONV",121,0)
 S ORDISCH=$S($G(ORESTART):ORESTART,1:$$FMADD^XLFDT(DT,-29)) K ORESTART
"RTN","OR3CONV",122,0)
 F  S ORDISCH=$O(^DGPM("AMV3",ORDISCH)) Q:'ORDISCH!(ORDISCH>DT)!ORSTOP  D
"RTN","OR3CONV",123,0)
 . F DFN=0:0 S DFN=$O(^DGPM("AMV3",ORDISCH,DFN)) Q:'DFN  D
"RTN","OR3CONV",124,0)
 . . S X=$$CONVERT(DFN,1)
"RTN","OR3CONV",125,0)
 . . D SET(9,ORDISCH)
"RTN","OR3CONV",126,0)
 Q
"RTN","OR3CONV",127,0)
 ;
"RTN","OR3CONV",128,0)
 ;
"RTN","OR3CONV",129,0)
5 ; patients with appointments past 4 weeks through next 4 weeks
"RTN","OR3CONV",130,0)
 ; this call is no longer used
"RTN","OR3CONV",131,0)
 N DFN,OREND,ORERR,ORI,ORLOC,ORSTART,X
"RTN","OR3CONV",132,0)
 S ORSTART=$$FMADD^XLFDT(DT,-29),OREND=$$FMADD^XLFDT(DT,+29)
"RTN","OR3CONV",133,0)
 S ORLOC=+$G(ORESTART) K ORESTART
"RTN","OR3CONV",134,0)
 K ^TMP($J,"SDAMA202","GETPLIST")
"RTN","OR3CONV",135,0)
 F  S ORLOC=$O(^SC(ORLOC)) Q:'ORLOC!ORSTOP  D
"RTN","OR3CONV",136,0)
 . D GETPLIST^SDAMA202(ORLOC,"4","",ORSTART,OREND)
"RTN","OR3CONV",137,0)
 . S ORERR=$$CLINERR^ORQRY01
"RTN","OR3CONV",138,0)
 . I $L(ORERR) W !,ORERR S ORSTOP=1 Q
"RTN","OR3CONV",139,0)
 . S ORI=0
"RTN","OR3CONV",140,0)
 . F  S ORI=$O(^TMP($J,"SDAMA202","GETPLIST",ORI)) Q:ORI<1  D
"RTN","OR3CONV",141,0)
 .. S DFN=+$G(^TMP($J,"SDAMA202","GETPLIST",ORI,4))
"RTN","OR3CONV",142,0)
 .. I DFN S X=$$CONVERT(DFN,1)
"RTN","OR3CONV",143,0)
 . D SET(9,ORLOC)
"RTN","OR3CONV",144,0)
 K ^TMP($J,"SDAMA202","GETPLIST")
"RTN","OR3CONV",145,0)
 Q
"RTN","OR3CONV",146,0)
 ;
"RTN","OR3CONV",147,0)
 ;
"RTN","OR3CONV",148,0)
6 ; rest of patients
"RTN","OR3CONV",149,0)
 N DFN,X
"RTN","OR3CONV",150,0)
 S DFN=+$G(ORESTART) K ORESTART
"RTN","OR3CONV",151,0)
 F  S DFN=$O(^ORD(100.99,1,"PTCONV",DFN)) Q:'DFN!ORSTOP  D
"RTN","OR3CONV",152,0)
 . S X=$$CONVERT(DFN,1)
"RTN","OR3CONV",153,0)
 . D SET(9,DFN)
"RTN","OR3CONV",154,0)
 Q
"RTN","OR3CONV",155,0)
 ;
"RTN","OR3CONV",156,0)
 ;
"RTN","OR3CONV",157,0)
7 ; orders not associated with DPT entries
"RTN","OR3CONV",158,0)
 N ORVP
"RTN","OR3CONV",159,0)
 S ORVP=$S($G(ORESTART):ORESTART,1:"") K ORESTART
"RTN","OR3CONV",160,0)
 F  S ORVP=$O(^OR(100,"AO",ORVP)) Q:ORVP=""!ORSTOP  D
"RTN","OR3CONV",161,0)
 . D ORDERS^OR3C100(ORVP)
"RTN","OR3CONV",162,0)
 . D EN^LR7OV2(ORVP,0)
"RTN","OR3CONV",163,0)
 I ORSTOP Q
"RTN","OR3CONV",164,0)
 D SET(7,$$NOW^XLFDT())
"RTN","OR3CONV",165,0)
 D CLEANUP^OR3CONV1
"RTN","OR3CONV",166,0)
 Q
"RTN","OR3CONV",167,0)
 ;
"RTN","OR3CONV",168,0)
 ;
"RTN","OR3CONV",169,0)
OTF(DFN,ORQUIET) ; on-the-fly conversion
"RTN","OR3CONV",170,0)
 ;
"RTN","OR3CONV",171,0)
 ; *** Supported entry point for package to call to see if orders  ***
"RTN","OR3CONV",172,0)
 ; *** for patient have been converted and convert if not done yet ***
"RTN","OR3CONV",173,0)
 ;
"RTN","OR3CONV",174,0)
 ; Input:   DFN as IEN of PATIENT file entry to convert orders for
"RTN","OR3CONV",175,0)
 ;          ORQUIET as 1 conversion should be silent
"RTN","OR3CONV",176,0)
 ;
"RTN","OR3CONV",177,0)
 ; Output:  -1^error message if problem encountered
"RTN","OR3CONV",178,0)
 ;          0 if patient already converted prior to call
"RTN","OR3CONV",179,0)
 ;          1 if patient was successfully converted as part of call
"RTN","OR3CONV",180,0)
 ;
"RTN","OR3CONV",181,0)
 S DFN=$G(DFN),ORQUIET=+$G(ORQUIET)
"RTN","OR3CONV",182,0)
 I $$ALLDONE() Q 0                 ; conversion already complete
"RTN","OR3CONV",183,0)
 I DFN'=+DFN!'$D(^DPT(+DFN,0)) Q "-1^Error in DFN passed to OTF^OR3CONV"
"RTN","OR3CONV",184,0)
 Q $$CONVERT(DFN,ORQUIET,1)        ; convert orders for patient
"RTN","OR3CONV",185,0)
 ;
"RTN","OR3CONV",186,0)
 ;
"RTN","OR3CONV",187,0)
CONVERT(DFN,ORQUIET,OROTF) ; convert orders by patient, set flag when done
"RTN","OR3CONV",188,0)
 ;
"RTN","OR3CONV",189,0)
 ; Input  - DFN as IEN of PATIENT file
"RTN","OR3CONV",190,0)
 ;          ORQUIET as 1 if conversion to be quiet
"RTN","OR3CONV",191,0)
 ;          OROTF as 1 if conversion called on-the-fly
"RTN","OR3CONV",192,0)
 ; Output - -1^error message if problem encountered
"RTN","OR3CONV",193,0)
 ;          1 if patient successfully converted
"RTN","OR3CONV",194,0)
 ;
"RTN","OR3CONV",195,0)
 ; new variables from bgj calls to ensure not reset during conv calls
"RTN","OR3CONV",196,0)
 N ORDATE,ORDATE,ORDISCH,OREND,ORIEN,ORIEN1,ORLOC,ORPROCES,ORSTART,ORWARD
"RTN","OR3CONV",197,0)
 ;
"RTN","OR3CONV",198,0)
 N ORERRMSG,ORPTLK,ORVP
"RTN","OR3CONV",199,0)
 S ORVP=DFN_";DPT("
"RTN","OR3CONV",200,0)
 S OROTF=+$G(OROTF)
"RTN","OR3CONV",201,0)
 I 'OROTF,$$STOP() D               ; field set to request stop of bgj
"RTN","OR3CONV",202,0)
 . S ORSTOP=1
"RTN","OR3CONV",203,0)
 . D SET(10,"")
"RTN","OR3CONV",204,0)
 I $$PTDONE(DFN) Q 0               ; patient already converted
"RTN","OR3CONV",205,0)
 S ORPTLK=$$LOCK^ORX2(DFN)
"RTN","OR3CONV",206,0)
 I 'ORPTLK D  Q ORERRMSG           ; record is locked
"RTN","OR3CONV",207,0)
 . I 'ORQUIET W !!,$P(ORPTLK,U,2) H 1
"RTN","OR3CONV",208,0)
 . S ORERRMSG="-1^"_$P(ORPTLK,U,2)
"RTN","OR3CONV",209,0)
 ;
"RTN","OR3CONV",210,0)
 I $$ORCONV(ORVP) D
"RTN","OR3CONV",211,0)
 . N DFN
"RTN","OR3CONV",212,0)
 . I 'ORQUIET D WRITE(+ORVP,"OE/RR")
"RTN","OR3CONV",213,0)
 . D ORDERS^OR3C100(ORVP)
"RTN","OR3CONV",214,0)
 I $$PSCONV(DFN) D
"RTN","OR3CONV",215,0)
 . I 'ORQUIET D WRITE(DFN,"pharmacy")
"RTN","OR3CONV",216,0)
 . D EN1^PSOHLUP(+DFN,'ORQUIET)
"RTN","OR3CONV",217,0)
 I $$LRCONV() D
"RTN","OR3CONV",218,0)
 . N DFN
"RTN","OR3CONV",219,0)
 . I 'ORQUIET D WRITE(+ORVP,"lab")
"RTN","OR3CONV",220,0)
 . D EN^LR7OV2(ORVP,'ORQUIET)
"RTN","OR3CONV",221,0)
 D UNLOCK^ORX2(+DFN)
"RTN","OR3CONV",222,0)
 D DONE(DFN)
"RTN","OR3CONV",223,0)
 Q 1
"RTN","OR3CONV",224,0)
 ;
"RTN","OR3CONV",225,0)
ORCONV(ORVP) ; return 1 if OR orders need to be converted, otherwise 0
"RTN","OR3CONV",226,0)
 I $O(^OR(100,"AO",ORVP,0)) Q 1
"RTN","OR3CONV",227,0)
 Q 0
"RTN","OR3CONV",228,0)
 ;
"RTN","OR3CONV",229,0)
PSCONV(DFN) ; return 1 to convert pharmacy orders for patient, otherwise 0
"RTN","OR3CONV",230,0)
 ;I $P($G(^PS(55,DFN,0)),U,6)'=2!'$P($G(^(5.1)),U,11) Q 1
"RTN","OR3CONV",231,0)
 Q 0
"RTN","OR3CONV",232,0)
 ;
"RTN","OR3CONV",233,0)
LRCONV() ; return 1 to convert
"RTN","OR3CONV",234,0)
 Q 1
"RTN","OR3CONV",235,0)
 ;
"RTN","OR3CONV",236,0)
WRITE(DFN,TYPE) ; write converting message
"RTN","OR3CONV",237,0)
 W !,"Converting ",TYPE," orders for ",$P($G(^DPT(DFN,0)),"^",1)
"RTN","OR3CONV",238,0)
 Q
"RTN","OR3CONV",239,0)
 ;
"RTN","OR3CONV",240,0)
ALLDONE() ; return 1 if conversion done, otherwise 0
"RTN","OR3CONV",241,0)
 Q $G(^ORD(100.99,1,"CONV"))
"RTN","OR3CONV",242,0)
 ;
"RTN","OR3CONV",243,0)
PTDONE(DFN) ; return 1 if patient already converted or PTCONV mult not done
"RTN","OR3CONV",244,0)
 I $D(^ORD(100.99,1,"PTCONV",DFN)) Q 0
"RTN","OR3CONV",245,0)
 I +$P($G(^ORD(100.99,1,"CONV")),"^",8)=0 Q 0
"RTN","OR3CONV",246,0)
 Q 1
"RTN","OR3CONV",247,0)
 ;
"RTN","OR3CONV",248,0)
STOP() ; check stop conversion flag
"RTN","OR3CONV",249,0)
 Q $P($G(^ORD(100.99,1,"CONV")),"^",11)
"RTN","OR3CONV",250,0)
 ;
"RTN","OR3CONV",251,0)
SET(PIECE,VALUE) ; update order parameter file field with value
"RTN","OR3CONV",252,0)
 N X
"RTN","OR3CONV",253,0)
 S X=$G(^ORD(100.99,1,"CONV"))
"RTN","OR3CONV",254,0)
 S $P(X,"^",PIECE)=VALUE
"RTN","OR3CONV",255,0)
 I PIECE=1 S $P(X,"^",2)=$$NOW^XLFDT()
"RTN","OR3CONV",256,0)
 I PIECE=3 S $P(X,"^",4,5)="^"
"RTN","OR3CONV",257,0)
 I PIECE=7 S $P(X,"^",1)=1,$P(X,"^",8,10)="^^"
"RTN","OR3CONV",258,0)
 I PIECE=8 S $P(X,"^",9)=""
"RTN","OR3CONV",259,0)
 S ^ORD(100.99,1,"CONV")=X
"RTN","OR3CONV",260,0)
 Q
"RTN","OR3CONV",261,0)
 ;
"RTN","OR3CONV",262,0)
DONE(DFN) ; remove entry from multiple
"RTN","OR3CONV",263,0)
 N COUNT,NODE,LAST,X
"RTN","OR3CONV",264,0)
 S X=$G(^ORD(100.99,1,"PTCONV",0)) Q:X']""  ; not done step 0
"RTN","OR3CONV",265,0)
 K ^ORD(100.99,1,"PTCONV",DFN),^ORD(100.99,1,"PTCONV","B",DFN)
"RTN","OR3CONV",266,0)
LOCK L +^ORD(100.99,1,"PTCONV",0):5 I '$T G LOCK
"RTN","OR3CONV",267,0)
 S COUNT=$P(X,"^",4)-1,LAST=$O(^ORD(100.99,1,"PTCONV","A"),-1)
"RTN","OR3CONV",268,0)
 S $P(^ORD(100.99,1,"PTCONV",0),"^",3,4)=LAST_"^"_$S(COUNT>0:COUNT,1:0)
"RTN","OR3CONV",269,0)
 L -^ORD(100.99,1,"PTCONV",0)
"RTN","OR3CONV",270,0)
 S $P(^("CONV"),"^",12)=$P(^ORD(100.99,1,"CONV"),"^",12)+1
"RTN","OR3CONV",271,0)
 Q
"RTN","OR3CONV1")
0^44^B41773160
"RTN","OR3CONV1",1,0)
OR3CONV1 ;SLC/MLI-Conversion utilities and cleanup ;8/2/97 [5/25/99 9:33am]
"RTN","OR3CONV1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**14,40,296**;Dec 17, 1997;Build 19
"RTN","OR3CONV1",3,0)
 ;
"RTN","OR3CONV1",4,0)
 ; Continuation calls from OR3CONV - used by OE/RR version 3 conversion
"RTN","OR3CONV1",5,0)
 ;
"RTN","OR3CONV1",6,0)
 ; Utilities for site to call:
"RTN","OR3CONV1",7,0)
 ;   RESTART - if process stopped for any reason, this can be used
"RTN","OR3CONV1",8,0)
 ;             to restart the background portion of the conversion.
"RTN","OR3CONV1",9,0)
 ;
"RTN","OR3CONV1",10,0)
 ;   STATUS  - display the status of the conversion via TaskMan and
"RTN","OR3CONV1",11,0)
 ;             via OE/RR.
"RTN","OR3CONV1",12,0)
 ;
"RTN","OR3CONV1",13,0)
STOP ; entry point to stop conversion cleanly
"RTN","OR3CONV1",14,0)
 N X
"RTN","OR3CONV1",15,0)
 S X=$G(^ORD(100.99,1,"CONV"))
"RTN","OR3CONV1",16,0)
 I +X W !,"The conversion has already run to completion." Q
"RTN","OR3CONV1",17,0)
 I '$P(X,"^",6) W !,"The background job conversion has not yet started." Q
"RTN","OR3CONV1",18,0)
 D STATUS
"RTN","OR3CONV1",19,0)
 I $$RUSURE("stop") D SET^OR3CONV(11,1)
"RTN","OR3CONV1",20,0)
 Q
"RTN","OR3CONV1",21,0)
 ;
"RTN","OR3CONV1",22,0)
RESTART ; entry point to restart conversion
"RTN","OR3CONV1",23,0)
 N X
"RTN","OR3CONV1",24,0)
 S X=$$CHECK()
"RTN","OR3CONV1",25,0)
 I X]"" D  Q
"RTN","OR3CONV1",26,0)
 . W !,"You can not use the RESTART call at this time."
"RTN","OR3CONV1",27,0)
 . W !,X
"RTN","OR3CONV1",28,0)
 . W !!,"Call STATUS^OR3CONV1 to get current status of conversion."
"RTN","OR3CONV1",29,0)
 D STATUS
"RTN","OR3CONV1",30,0)
 I $$RUSURE("restart") D
"RTN","OR3CONV1",31,0)
 . S ZTSAVE("ORESTART")=$P(^ORD(100.99,1,"CONV"),"^",9)
"RTN","OR3CONV1",32,0)
 . D QUEUE^OR3CONV
"RTN","OR3CONV1",33,0)
 Q
"RTN","OR3CONV1",34,0)
 ;
"RTN","OR3CONV1",35,0)
CHECK() ; check status to see if restart should be allowed
"RTN","OR3CONV1",36,0)
 N X
"RTN","OR3CONV1",37,0)
 S X=$G(^ORD(100.99,1,"CONV"))
"RTN","OR3CONV1",38,0)
 I +X Q "The conversion has already run to completion."
"RTN","OR3CONV1",39,0)
 I '$P(X,"^",6) Q "The background job conversion has not yet started."
"RTN","OR3CONV1",40,0)
 S X=+$P(X,"^",10) I X S X=$$ZTSKCHK(X) I '$P(X,"^",2) Q $P(X,"^",1)
"RTN","OR3CONV1",41,0)
 Q ""
"RTN","OR3CONV1",42,0)
 ;
"RTN","OR3CONV1",43,0)
RUSURE(TEXT) ; return 1 if yes, 0 otherwise
"RTN","OR3CONV1",44,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","OR3CONV1",45,0)
 S DIR(0)="YA",DIR("B")="No"
"RTN","OR3CONV1",46,0)
 S DIR("A")="Are you sure you want to "_TEXT_" the conversion? "
"RTN","OR3CONV1",47,0)
 D ^DIR
"RTN","OR3CONV1",48,0)
 Q +Y
"RTN","OR3CONV1",49,0)
 ;
"RTN","OR3CONV1",50,0)
STATUS ; get status of conversion
"RTN","OR3CONV1",51,0)
 N STAGE,X
"RTN","OR3CONV1",52,0)
 S X=$G(^ORD(100.99,1,"CONV"))
"RTN","OR3CONV1",53,0)
 I +X W !,"The conversion has already completed!" Q
"RTN","OR3CONV1",54,0)
 I $P(X,"^",1)="" W !,"The conversion has not yet started." Q
"RTN","OR3CONV1",55,0)
 I $P(X,"^",11) W !,"The background job was requested to stop." Q
"RTN","OR3CONV1",56,0)
 I '$P(X,"^",6),'$P(X,"^",10) D  Q
"RTN","OR3CONV1",57,0)
 . W !,"The background conversion of patient orders has not"
"RTN","OR3CONV1",58,0)
 . W !,"started yet.  This process is queued to run by the post-"
"RTN","OR3CONV1",59,0)
 . W !,"installation process of CPRS.  It has not yet been queued."
"RTN","OR3CONV1",60,0)
 I $P(X,"^",10) D  Q
"RTN","OR3CONV1",61,0)
 . W !,"The background conversion of patient orders is running."
"RTN","OR3CONV1",62,0)
 . W !,"The task number assigned to the conversion was ",$P(X,"^",10),"."
"RTN","OR3CONV1",63,0)
 . W !,"The following is the status of the process according to TaskMan:"
"RTN","OR3CONV1",64,0)
 . W !?5,$P($$ZTSKCHK($P(X,"^",10)),"^",1)
"RTN","OR3CONV1",65,0)
 . W !
"RTN","OR3CONV1",66,0)
 . S STAGE=$$STAGE($P(X,"^",8))
"RTN","OR3CONV1",67,0)
 . I +STAGE=0 D  Q
"RTN","OR3CONV1",68,0)
 . . W !,"The background job is currently populating the list of"
"RTN","OR3CONV1",69,0)
 . . W !,"patients that will need to be processed by the conversion."
"RTN","OR3CONV1",70,0)
 . . W !,"Last DFN populated: ",$O(^ORD(100.99,1,"PTCONV","A"),-1)
"RTN","OR3CONV1",71,0)
 . W !,"The background conversion is currently on stage ",+STAGE,"."
"RTN","OR3CONV1",72,0)
 . W !,"This stage converts ",$S(STAGE<7:"patients who ",1:""),$P(STAGE,"^",2),"."
"RTN","OR3CONV1",73,0)
 . I $P(X,"^",9) D
"RTN","OR3CONV1",74,0)
 . . W !,"It last completed processing "
"RTN","OR3CONV1",75,0)
 . . W $P(STAGE,"^",3)," ",$P(X,"^",9),"."
"RTN","OR3CONV1",76,0)
 . W !!,"So far, orders for ",+$P(X,"^",12)," patients have converted."
"RTN","OR3CONV1",77,0)
 . W !,"There are currently ",+$P(^ORD(100.99,1,"PTCONV",0),"^",4)," patients left to process."
"RTN","OR3CONV1",78,0)
 . I +STAGE'=1 Q  ; show more info for inpatients
"RTN","OR3CONV1",79,0)
 . W !!,"Patients on ward ",$P(X,"^",4)," are currently being processed."
"RTN","OR3CONV1",80,0)
 . W !,"The last patient to be converted was DFN #",$P(X,"^",5),"."
"RTN","OR3CONV1",81,0)
 Q
"RTN","OR3CONV1",82,0)
 ;
"RTN","OR3CONV1",83,0)
ZTSKCHK(ZTSK) ; check status of task via TaskMan utilities
"RTN","OR3CONV1",84,0)
 ; return message^flag where flag is 1 to allow requeue...0 otherwise
"RTN","OR3CONV1",85,0)
 D STAT^%ZTLOAD
"RTN","OR3CONV1",86,0)
 Q $P($T(ZTSKMSG+ZTSK(1)),";;",2)
"RTN","OR3CONV1",87,0)
 ;
"RTN","OR3CONV1",88,0)
ZTSKMSG ;;Unable to find task on current volume set^1
"RTN","OR3CONV1",89,0)
 ;;Task is scheduled and waiting to run^0
"RTN","OR3CONV1",90,0)
 ;;The task is running^0
"RTN","OR3CONV1",91,0)
 ;;The task completed^1
"RTN","OR3CONV1",92,0)
 ;;The task was created without being scheduled^0
"RTN","OR3CONV1",93,0)
 ;;The process stopped for some reason^1
"RTN","OR3CONV1",94,0)
 ;;Unable to obtain status from TaskMan^1
"RTN","OR3CONV1",95,0)
 ;
"RTN","OR3CONV1",96,0)
STAGE(STAGE) ; return text of what stage does
"RTN","OR3CONV1",97,0)
 Q $P($T(STAGETXT+STAGE),";;",2)
"RTN","OR3CONV1",98,0)
 ;
"RTN","OR3CONV1",99,0)
 ; stages - number^text^up to text
"RTN","OR3CONV1",100,0)
STAGETXT ;;0^populating list of patients to convert
"RTN","OR3CONV1",101,0)
 ;;1^are current inpatients^ward
"RTN","OR3CONV1",102,0)
 ;;2^have future scheduled admissions on file^scheduled admission date
"RTN","OR3CONV1",103,0)
 ;;3^have waiting list file entries^DFN
"RTN","OR3CONV1",104,0)
 ;;4^have discharges within last 4 weeks^discharge date
"RTN","OR3CONV1",105,0)
 ;;5^have appointments in last 4 or next 4 weeks^hospital location
"RTN","OR3CONV1",106,0)
 ;;6^have not already been converted^DFN
"RTN","OR3CONV1",107,0)
 ;;7^orders not associated with PATIENT file entries^variable pointer
"RTN","OR3CONV1",108,0)
 ;
"RTN","OR3CONV1",109,0)
CLEANUP ; conversion is completed
"RTN","OR3CONV1",110,0)
 N X
"RTN","OR3CONV1",111,0)
 I '$$FINALCHK() D ERROR Q
"RTN","OR3CONV1",112,0)
 D KILL^OR3C101,REQUEUE^ORMTIME(1)
"RTN","OR3CONV1",113,0)
 D BADNAMES^PSJIPST3
"RTN","OR3CONV1",114,0)
 D MAIL
"RTN","OR3CONV1",115,0)
 Q
"RTN","OR3CONV1",116,0)
 ;
"RTN","OR3CONV1",117,0)
FINALCHK() ; check to see if every patient converted
"RTN","OR3CONV1",118,0)
 N DFN,ERROR
"RTN","OR3CONV1",119,0)
 S ERROR=1
"RTN","OR3CONV1",120,0)
 F DFN=0:0 S DFN=$O(^ORD(100.99,1,"PTCONV",DFN)) Q:'DFN  D  Q:ERROR
"RTN","OR3CONV1",121,0)
 . S ERROR=$$CONVERT^OR3CONV(DFN,1)         ; try again to convert
"RTN","OR3CONV1",122,0)
 . I '$$PTDONE^OR3CONV(DFN) S ERROR=0
"RTN","OR3CONV1",123,0)
 Q ERROR
"RTN","OR3CONV1",124,0)
 ;
"RTN","OR3CONV1",125,0)
MAIL ; send e-mail that the conversion completed
"RTN","OR3CONV1",126,0)
 N COUNT,X
"RTN","OR3CONV1",127,0)
 S COUNT=0,X=$G(^ORD(100.99,1,"CONV"))
"RTN","OR3CONV1",128,0)
 D LINE("The orders conversion has completed")
"RTN","OR3CONV1",129,0)
 D LINE(" ")
"RTN","OR3CONV1",130,0)
 D LINE("The conversion was first started:  "_$$FMTE^XLFDT($P(X,"^",6)))
"RTN","OR3CONV1",131,0)
 D LINE("It ran to completion:              "_$$FMTE^XLFDT($P(X,"^",7)))
"RTN","OR3CONV1",132,0)
 D SEND("OE/RR version 3.0 conversion complete")
"RTN","OR3CONV1",133,0)
 Q
"RTN","OR3CONV1",134,0)
 ;
"RTN","OR3CONV1",135,0)
ERROR ; create mail message if unconverted patients found
"RTN","OR3CONV1",136,0)
 N COUNT
"RTN","OR3CONV1",137,0)
 S COUNT=0
"RTN","OR3CONV1",138,0)
 D LINE("A problem was encountered in the OE/RR conversion.  After")
"RTN","OR3CONV1",139,0)
 D LINE("going through all patients, it was still unable to convert")
"RTN","OR3CONV1",140,0)
 D LINE("orders for some patients.  Please contact the national")
"RTN","OR3CONV1",141,0)
 D LINE("customer support help desk for further assistance.")
"RTN","OR3CONV1",142,0)
 D SEND("OE/RR version 3.0 conversion encountered problem")
"RTN","OR3CONV1",143,0)
 Q
"RTN","OR3CONV1",144,0)
 ;
"RTN","OR3CONV1",145,0)
LINE(TEXT) ; store data in array for mail message
"RTN","OR3CONV1",146,0)
 S COUNT=COUNT+1
"RTN","OR3CONV1",147,0)
 S ORTEXT(COUNT)=TEXT
"RTN","OR3CONV1",148,0)
 Q
"RTN","OR3CONV1",149,0)
 ;
"RTN","OR3CONV1",150,0)
SEND(SUBJECT) ; define rest of XM variables and fire message off
"RTN","OR3CONV1",151,0)
 N DIFROM,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","OR3CONV1",152,0)
 S XMSUB=SUBJECT,XMTEXT="ORTEXT("
"RTN","OR3CONV1",153,0)
 S XMDUZ="OE/RR CONVERSION"
"RTN","OR3CONV1",154,0)
 F I="G.CPRS INSTALLATION@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","OR3CONV1",155,0)
 D ^XMD
"RTN","OR3CONV1",156,0)
 Q
"RTN","OR3CONV1",157,0)
 ;
"RTN","OR3CONV1",158,0)
PTCONV ; populate OR3 PATIENTS TO CONVERT multiple...hard set for speed
"RTN","OR3CONV1",159,0)
 N COUNT,DFN,LAST
"RTN","OR3CONV1",160,0)
 S COUNT=0,LAST=""
"RTN","OR3CONV1",161,0)
 F DFN=0:0 S DFN=$O(^DPT(DFN)) Q:'DFN!(DFN'=+DFN)  I $D(^(DFN,0)) D
"RTN","OR3CONV1",162,0)
 . S LAST=DFN,COUNT=COUNT+1
"RTN","OR3CONV1",163,0)
 . I $D(^ORD(100.99,1,"PTCONV",DFN,0)) Q
"RTN","OR3CONV1",164,0)
 . S ^ORD(100.99,1,"PTCONV",DFN,0)=DFN,^ORD(100.99,1,"PTCONV","B",DFN,DFN)=""
"RTN","OR3CONV1",165,0)
 S ^ORD(100.99,1,"PTCONV",0)="^100.9903PA^"_LAST_"^"_COUNT
"RTN","OR3CONV1",166,0)
 Q
"RTN","ORB3")
0^3^B93373249
"RTN","ORB3",1,0)
ORB3 ; slc/CLA,WAT - Main routine for OE/RR 3 notifications ;6/6/01  10:46 [8/16/05 5:33am]
"RTN","ORB3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**31,74,91,105,139,190,220,253,265,296**;Dec 17, 1997;Build 19
"RTN","ORB3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORB3",4,0)
 ;
"RTN","ORB3",5,0)
 ;This routine invokes to following ICR(s):
"RTN","ORB3",6,0)
 ;ICR 4156     ;REGISTRATION, COMBAT VETERAN STATUS
"RTN","ORB3",7,0)
 ;
"RTN","ORB3",8,0)
EN(ORN,ORBDFN,ORNUM,ORBADUZ,ORBPMSG,ORBPDATA) ;
"RTN","ORB3",9,0)
 ;
"RTN","ORB3",10,0)
 N ORBENT
"RTN","ORB3",11,0)
 S ORBENT=$$ENTITY^ORB31(ORNUM)
"RTN","ORB3",12,0)
 ;
"RTN","ORB3",13,0)
 Q:$$GET^XPAR(ORBENT,"ORB SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORB3",14,0)
 Q:'$L($G(^ORD(100.9,ORN,0)))
"RTN","ORB3",15,0)
 Q:+$$ONOFF^ORB3FN(ORN)=0
"RTN","ORB3",16,0)
 ;
"RTN","ORB3",17,0)
 S ORBPMSG=$E($G(ORBPMSG),1,51)
"RTN","ORB3",18,0)
 ;
"RTN","ORB3",19,0)
 ;if msg from notif file or oc notif (#54), quit if dup w/in past 1 min:
"RTN","ORB3",20,0)
 N ORBDUP,ORBN
"RTN","ORB3",21,0)
 S ORBN=^ORD(100.9,ORN,0)
"RTN","ORB3",22,0)
 I ($P(ORBN,"^",4)="NOT")!(ORN=54) D
"RTN","ORB3",23,0)
 .S ORBDUP=$$DUP^ORB31(ORN,ORBDFN,ORBPMSG,ORNUM)
"RTN","ORB3",24,0)
 Q:+$G(ORBDUP)=1
"RTN","ORB3",25,0)
 ;
"RTN","ORB3",26,0)
 N ORBDESC
"RTN","ORB3",27,0)
 S ORBDESC=" Send Alert Notification ("_(+ORN)_") "_$P($G(^ORD(100.9,+ORN,0)),U,1)_"  "
"RTN","ORB3",28,0)
 ;
"RTN","ORB3",29,0)
 D QUEUE^ORB31(ORN,ORBDFN,$G(ORNUM),.ORBADUZ,$G(ORBPMSG),$G(ORBPDATA),$H,ORBDESC,$G(DGPMA))
"RTN","ORB3",30,0)
 Q
"RTN","ORB3",31,0)
ZTSK ;
"RTN","ORB3",32,0)
 D START
"RTN","ORB3",33,0)
 S ZTREQ="@"
"RTN","ORB3",34,0)
 Q
"RTN","ORB3",35,0)
UTL(ORBU,ORN,ORBDFN,ORNUM,ORBADUZ,ORBPMSG,ORBPDATA) ;
"RTN","ORB3",36,0)
 Q:$G(ORBU)'=1
"RTN","ORB3",37,0)
START Q:$G(ORN)=""!($G(ORBDFN)="")
"RTN","ORB3",38,0)
 Q:'$L($G(^ORD(100.9,ORN,0)))
"RTN","ORB3",39,0)
 N ORBNOW,ORBID,ORBLOCK,ORBDESC
"RTN","ORB3",40,0)
 S ORBNOW=$$NOW^XLFDT
"RTN","ORB3",41,0)
 S ORBLOCK=0
"RTN","ORB3",42,0)
 ;
"RTN","ORB3",43,0)
 ;lock to prevent concurrent processing by other resource slots:
"RTN","ORB3",44,0)
 I '$D(ORBU) D
"RTN","ORB3",45,0)
 .S ^XTMP("ORBLOCK",0)=$$FMADD^XLFDT(ORBNOW,1,"","","")_"^"_ORBNOW
"RTN","ORB3",46,0)
 .S ORBID=$P($P($G(ORBPDATA),"|",2),"@")  ;get unique data id
"RTN","ORB3",47,0)
 .I $L(ORBID) D
"RTN","ORB3",48,0)
 ..LOCK +^XTMP("ORBLOCK",ORBDFN,ORN,ORBID):60 E  D  Q
"RTN","ORB3",49,0)
 ...S ORBDESC=" Requeue Alert Notification ("_(+ORN)_") "_$P($G(^ORD(100.9,+ORN,0)),U,1)_"  "
"RTN","ORB3",50,0)
 ...D QUEUE^ORB31(ORN,ORBDFN,$G(ORNUM),.ORBADUZ,$G(ORBPMSG),$G(ORBPDATA),$$HADD^XLFDT($H,"","",5,""),ORBDESC,$G(DGPMA)) ;requeue in 5 min.
"RTN","ORB3",51,0)
 ...S ORBLOCK=1
"RTN","ORB3",52,0)
 .;
"RTN","ORB3",53,0)
 .I '$L(ORBID) D
"RTN","ORB3",54,0)
 ..LOCK +^XTMP("ORBLOCK",ORBDFN,ORN):60 E  D  Q
"RTN","ORB3",55,0)
 ...S ORBDESC=" Requeue Alert Notification ("_(+ORN)_") "_$P($G(^ORD(100.9,+ORN,0)),U,1)_"  "
"RTN","ORB3",56,0)
 ...D QUEUE^ORB31(ORN,ORBDFN,$G(ORNUM),.ORBADUZ,$G(ORBPMSG),$G(ORBPDATA),$$HADD^XLFDT($H,"","",5,""),ORBDESC,$G(DGPMA)) ;requeue in 5 min.
"RTN","ORB3",57,0)
 ...S ORBLOCK=1
"RTN","ORB3",58,0)
 .;
"RTN","ORB3",59,0)
 I ORBLOCK=1 D QUIT Q
"RTN","ORB3",60,0)
 ;
"RTN","ORB3",61,0)
DOALERT ; Entry point for alert logic outside of TaskMan
"RTN","ORB3",62,0)
 N ORBDUZ,ORBN,ORBXQAID,ORPTNAM,ORBPRIM,ORBATTD,ORBDEV,ORBENT
"RTN","ORB3",63,0)
 N ORBUI,ORBASPEC,ORBSMSG,ORBADT,ORBSDEV,ORBDEL,ORBDI,ORBTDEV,ORY
"RTN","ORB3",64,0)
 S ORBUI=1,ORBADT=0
"RTN","ORB3",65,0)
 S:'$L($G(ORBPMSG)) ORBPMSG=""
"RTN","ORB3",66,0)
 I '$L(ORBPDATA),(+$G(ORNUM)>0) S ORBPDATA=+$G(ORNUM)_"@"
"RTN","ORB3",67,0)
 S ORBN=^ORD(100.9,ORN,0)
"RTN","ORB3",68,0)
 ;
"RTN","ORB3",69,0)
 S ORBENT=$$ENTITY^ORB31(ORNUM)
"RTN","ORB3",70,0)
 ;
"RTN","ORB3",71,0)
 N DFN S DFN=ORBDFN,VA200="" D OERR^VADPT
"RTN","ORB3",72,0)
 I ('$L($G(VA("BID"))))!('$L($G(VADM(1)))) D QUIT Q
"RTN","ORB3",73,0)
 I (ORN=18)!(ORN=20)!(ORN=35) S ORBADT=1 ;A/D/T notif
"RTN","ORB3",74,0)
 ;if not an A/D/T notif, get primary & attending from OERR^VADPT:
"RTN","ORB3",75,0)
 I ORBADT=0 S ORBPRIM=+$P(VAIN(2),U),ORBATTD=+$P(VAIN(11),U)
"RTN","ORB3",76,0)
 I ORBADT=1 D ADT^ORB31(ORN,ORBDFN,.ORBPRIM,.ORBATTD,$G(ORDGPMA)) ;A/D/T notif
"RTN","ORB3",77,0)
 I $D(ORBU) D  ;create debug msg
"RTN","ORB3",78,0)
 .S ORBU(ORBUI)="Processing notification: "_$P(ORBN,U),ORBUI=ORBUI+1
"RTN","ORB3",79,0)
 .S ORBU(ORBUI)="            for patient: "_VADM(1),ORBUI=ORBUI+1
"RTN","ORB3",80,0)
 .I $G(ORNUM)>0 S ORBU(ORBUI)="              for order: "_ORNUM,ORBUI=ORBUI+1
"RTN","ORB3",81,0)
 D REGULAR^ORB3REG(ORN,.XQA,.ORBU,.ORBUI,.ORBDEV,ORBDFN)
"RTN","ORB3",82,0)
 D SPECIAL^ORB3SPEC(ORN,.ORBASPEC,.ORBU,.ORBUI,$G(ORNUM),ORBDFN,$G(ORBPDATA),.ORBSMSG,$G(ORBPMSG),.ORBSDEV,$G(ORBPRIM),$G(ORBATTD))
"RTN","ORB3",83,0)
 I $L($G(ORBSMSG)) S ORBPMSG=$E(ORBSMSG,1,51)
"RTN","ORB3",84,0)
 I $D(ORBASPEC)>1 D SPECDUZS ;special recips
"RTN","ORB3",85,0)
 I $D(ORBADUZ)>1 D PKGDUZS ;pkg-supplied recips
"RTN","ORB3",86,0)
 D TITLE ;provider recips
"RTN","ORB3",87,0)
 S ORBXQAID=$P(ORBN,"^",2)_","_ORBDFN_","_ORN
"RTN","ORB3",88,0)
 ;
"RTN","ORB3",89,0)
 I ($D(XQA)>1)!($D(ORBDEV)>1)!($D(ORBSDEV)>1) D  ;recips found
"RTN","ORB3",90,0)
 .S XQAFLG=$P(ORBN,"^",5)
"RTN","ORB3",91,0)
 .S XQADFN=ORBDFN
"RTN","ORB3",92,0)
 .I XQAFLG="R" S XQAROU=$P(ORBN,"^",6)_"^"_$P(ORBN,"^",7)
"RTN","ORB3",93,0)
 .I $G(ORBPDATA)'="" S XQADATA=ORBPDATA
"RTN","ORB3",94,0)
 .S ORPTNAM=$E(VADM(1)_"         ",1,9)
"RTN","ORB3",95,0)
 .I $G(ORN)=27 N CVMRKR,RSLT S RSLT=$$CVEDT^DGCV(DFN) I $P($G(RSLT),U)&($P($G(RSLT),U,3)) S CVMRKR=" CV "_$$FMTE^XLFDT($P($G(RSLT),U,2),"5DZ") ;WAT
"RTN","ORB3",96,0)
 .S XQAMSG=ORPTNAM_" "_"("_$E(ORPTNAM)_$E(VA("BID"),1,4)_")"_$G(CVMRKR)_": " ;WAT
"RTN","ORB3",97,0)
 .S XQAMSG=XQAMSG_$S(ORBPMSG'="":ORBPMSG,1:$P(ORBN,"^",3))
"RTN","ORB3",98,0)
 .S XQAARCH=$$GET^XPAR(ORBENT,"ORB ARCHIVE PERIOD",ORN,"I")
"RTN","ORB3",99,0)
 .S XQASUPV=$$GET^XPAR(ORBENT,"ORB FORWARD SUPERVISOR",ORN,"I")
"RTN","ORB3",100,0)
 .S XQASURO=$$GET^XPAR(ORBENT,"ORB FORWARD SURROGATES",ORN,"I")
"RTN","ORB3",101,0)
 .S XQAREVUE=$$GET^XPAR(ORBENT,"ORB FORWARD BACKUP REVIEWER",ORN,"I")
"RTN","ORB3",102,0)
 .S XQACNDEL=$$GET^XPAR(ORBENT,"ORB REMOVE",ORN,"I")
"RTN","ORB3",103,0)
 .S XQACNDEL=$S(XQACNDEL=1:1,1:"")
"RTN","ORB3",104,0)
 .I $D(ORBDEV)>1 D REGDEV^ORB31(.ORBDEV)
"RTN","ORB3",105,0)
 .I $D(ORBSDEV)>1 D REGDEV^ORB31(.ORBSDEV)
"RTN","ORB3",106,0)
 .I $D(ORBTDEV)>1 D REGDEV^ORB31(.ORBTDEV)
"RTN","ORB3",107,0)
 .S XQAID=ORBXQAID
"RTN","ORB3",108,0)
 .I $D(XQA) D SETUP^XQALERT  ;if no [new] recips don't send alert
"RTN","ORB3",109,0)
QUIT ;
"RTN","ORB3",110,0)
 K VA,VA200,VADM,VAERR,VAIN,XQA,XQADATA,XQAID,XQAFLG,XQAMSG,XQAROU,XQAARCH,XQASUPV,XQASURO,XQADFN
"RTN","ORB3",111,0)
 K ^XTMP("ORBUSER",$J)
"RTN","ORB3",112,0)
 I '$D(ORBU),$D(ORBLOCK) D
"RTN","ORB3",113,0)
 .I $G(ORBID)]"" LOCK -^XTMP("ORBLOCK",ORBDFN,ORN,ORBID)
"RTN","ORB3",114,0)
 .E  LOCK -^XTMP("ORBLOCK",ORBDFN,ORN)
"RTN","ORB3",115,0)
 Q
"RTN","ORB3",116,0)
PKGDUZS ;get DUZs from pkg-passed ORBADUZ() array
"RTN","ORB3",117,0)
 N ORBPDUZ
"RTN","ORB3",118,0)
 I $D(ORBU) D
"RTN","ORB3",119,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3",120,0)
 .I ORN=68 S ORBU(ORBUI)="Recipients with Lab Threshold Exceeded:",ORBUI=ORBUI+1
"RTN","ORB3",121,0)
 .E  S ORBU(ORBUI)="Recipients defined when notif was triggered:",ORBUI=ORBUI+1
"RTN","ORB3",122,0)
 S ORBPDUZ=""
"RTN","ORB3",123,0)
 F  S ORBPDUZ=$O(ORBADUZ(ORBPDUZ)) Q:ORBPDUZ=""  S ORBDUZ=ORBPDUZ D USER
"RTN","ORB3",124,0)
 Q
"RTN","ORB3",125,0)
SPECDUZS ;get DUZs rtn by SPECIAL^ORB3SPEC
"RTN","ORB3",126,0)
 N ORBSDUZ
"RTN","ORB3",127,0)
 I $D(ORBU) D
"RTN","ORB3",128,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3",129,0)
 .S ORBU(ORBUI)="Special recipients associated with the notification:",ORBUI=ORBUI+1
"RTN","ORB3",130,0)
 S ORBSDUZ=""
"RTN","ORB3",131,0)
 F  S ORBSDUZ=$O(ORBASPEC(ORBSDUZ)) Q:ORBSDUZ=""  S ORBDUZ=ORBSDUZ D USER
"RTN","ORB3",132,0)
 Q
"RTN","ORB3",133,0)
TITLE ;get provider recips
"RTN","ORB3",134,0)
 N TITLES
"RTN","ORB3",135,0)
 I $D(ORBU) D
"RTN","ORB3",136,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3",137,0)
 .S ORBU(ORBUI)="Recipients determined by Provider Recipient parameter:",ORBUI=ORBUI+1
"RTN","ORB3",138,0)
 ;
"RTN","ORB3",139,0)
 S TITLES=$$GET^XPAR(ORBENT,"ORB PROVIDER RECIPIENTS",ORN,"I")
"RTN","ORB3",140,0)
 I TITLES["P" D PRIMARY
"RTN","ORB3",141,0)
 I TITLES["A" D ATTEND
"RTN","ORB3",142,0)
 I TITLES["T" D TEAMS
"RTN","ORB3",143,0)
 I TITLES["O" D ORDERER
"RTN","ORB3",144,0)
 I TITLES["E" D ENTERBY
"RTN","ORB3",145,0)
 I TITLES["R" D PCMMPRIM
"RTN","ORB3",146,0)
 I TITLES["S" D PCMMASSC
"RTN","ORB3",147,0)
 I TITLES["M" D PCMMTEAM
"RTN","ORB3",148,0)
 Q
"RTN","ORB3",149,0)
PRIMARY ;
"RTN","ORB3",150,0)
 I $D(ORBU),ORBADT=0 S ORBU(ORBUI)=" Inpt primary provider:",ORBUI=ORBUI+1
"RTN","ORB3",151,0)
 I $D(ORBU),ORBADT=1 S ORBU(ORBUI)=" Inpt primary provider: option cannot determine without A/D/T event data.",ORBUI=ORBUI+1
"RTN","ORB3",152,0)
 I +$G(ORBPRIM)>0 S ORBDUZ=ORBPRIM D USER
"RTN","ORB3",153,0)
 Q
"RTN","ORB3",154,0)
ATTEND ;
"RTN","ORB3",155,0)
 I $D(ORBU),ORBADT=0 S ORBU(ORBUI)=" Attending physician:",ORBUI=ORBUI+1
"RTN","ORB3",156,0)
 I $D(ORBU),ORBADT=1 S ORBU(ORBUI)=" Attending physician: option cannot determine without A/D/T event data.",ORBUI=ORBUI+1
"RTN","ORB3",157,0)
 I +$G(ORBATTD)>0 S ORBDUZ=ORBATTD D USER
"RTN","ORB3",158,0)
 Q
"RTN","ORB3",159,0)
TEAMS ;
"RTN","ORB3",160,0)
 I $D(ORBU) S ORBU(ORBUI)=" Teams/Personal Lists related to patient:",ORBUI=ORBUI+1
"RTN","ORB3",161,0)
 N ORBLST,ORBI,ORBJ,ORBTM,ORBTNAME,ORBTTYPE,ORBTD
"RTN","ORB3",162,0)
 D TMSPT^ORQPTQ1(.ORBLST,ORBDFN)
"RTN","ORB3",163,0)
 Q:+$G(ORBLST(1))<1
"RTN","ORB3",164,0)
 S ORBI="" F  S ORBI=$O(ORBLST(ORBI)) Q:ORBI=""  D
"RTN","ORB3",165,0)
 .S ORBTM=$P(ORBLST(ORBI),U),ORBTNAME=$P(ORBLST(ORBI),U,2)
"RTN","ORB3",166,0)
 .S ORBTTYPE=$P(ORBLST(ORBI),U,3)
"RTN","ORB3",167,0)
 .I $D(ORBU) D
"RTN","ORB3",168,0)
 ..S ORBU(ORBUI)="  Patient list "_ORBTNAME_" ["_ORBTTYPE_"]:",ORBUI=ORBUI+1
"RTN","ORB3",169,0)
 .N ORBLST2 D TEAMPROV^ORQPTQ1(.ORBLST2,ORBTM)
"RTN","ORB3",170,0)
 .Q:+$G(ORBLST2(1))<1
"RTN","ORB3",171,0)
 .S ORBJ="" F  S ORBJ=$O(ORBLST2(ORBJ)) Q:ORBJ=""  D
"RTN","ORB3",172,0)
 ..S ORBDUZ=$P(ORBLST2(ORBJ),U)_U_ORBTM I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",173,0)
 .;
"RTN","ORB3",174,0)
 .S ORBTD=$P($$TMDEV^ORB31(ORBTM),U,2)  ;Team's device
"RTN","ORB3",175,0)
 .I $L(ORBTD) D
"RTN","ORB3",176,0)
 ..S ORBTDEV(ORBTD)=""
"RTN","ORB3",177,0)
 ..I $D(ORBU) D
"RTN","ORB3",178,0)
 ...S ORBU(ORBUI)="   Team's Device "_ORBTD_" is a recipient",ORBUI=ORBUI+1
"RTN","ORB3",179,0)
 Q
"RTN","ORB3",180,0)
ORDERER ;
"RTN","ORB3",181,0)
 Q:+$G(ORNUM)<1
"RTN","ORB3",182,0)
 I $D(ORBU) S ORBU(ORBUI)=" Ordering provider:",ORBUI=ORBUI+1
"RTN","ORB3",183,0)
 N ORBLST,ORBI,ORBTM,ORBJ,ORBTNAME,ORBPLST,ORBPI,ORBPTM,ORBTTYPE
"RTN","ORB3",184,0)
 S ORBDUZ=$S(ORN=12:+$$UNSIGNOR^ORQOR2(ORNUM),1:$$ORDERER^ORQOR2(ORNUM))
"RTN","ORB3",185,0)
 I +$G(ORBDUZ)>0 D
"RTN","ORB3",186,0)
 .D USER
"RTN","ORB3",187,0)
 .;if notif = Order Req E/S (#12) or Order Req Co-sign (#37) and
"RTN","ORB3",188,0)
 .;user doesn't have ES authority, send to fellow team members w/ES:
"RTN","ORB3",189,0)
 .I ((ORN=12)!(ORN=37)),('$D(^XUSEC("ORES",ORBDUZ))) D
"RTN","ORB3",190,0)
 ..I $D(ORBU) S ORBU(ORBUI)=" Orderer can't elec sign, getting teams orderer belongs to:",ORBUI=ORBUI+1
"RTN","ORB3",191,0)
 ..D TEAMPR^ORQPTQ1(.ORBLST,ORBDUZ)  ;get orderer's tms
"RTN","ORB3",192,0)
 ..Q:+$G(ORBLST(1))<1
"RTN","ORB3",193,0)
 ..D TMSPT^ORQPTQ1(.ORBPLST,ORBDFN)  ;get pt's tms
"RTN","ORB3",194,0)
 ..Q:+$G(ORBPLST(1))<1
"RTN","ORB3",195,0)
 ..S ORBI="" F  S ORBI=$O(ORBLST(ORBI)) Q:ORBI=""  D
"RTN","ORB3",196,0)
 ...S ORBPI="" F  S ORBPI=$O(ORBPLST(ORBPI)) Q:ORBPI=""  D
"RTN","ORB3",197,0)
 ....S ORBTM=$P(ORBLST(ORBI),U),ORBPTM=$P(ORBPLST(ORBPI),U)
"RTN","ORB3",198,0)
 ....I ORBTM=ORBPTM D  ;if pt is on provider's team
"RTN","ORB3",199,0)
 .....I +$G(ORBPTM)>0 D
"RTN","ORB3",200,0)
 ......S ORBTNAME=$P(ORBPLST(ORBPI),U,2)
"RTN","ORB3",201,0)
 ......S ORBTTYPE=$P(ORBPLST(ORBPI),U,3)
"RTN","ORB3",202,0)
 ......I $D(ORBU) S ORBU(ORBUI)="  Orderer's pt list "_ORBTNAME_" ["_ORBTTYPE_"] recipients: ",ORBUI=ORBUI+1
"RTN","ORB3",203,0)
 ......N ORBLST2 D TEAMPROV^ORQPTQ1(.ORBLST2,ORBPTM)
"RTN","ORB3",204,0)
 ......Q:+$G(ORBLST2(1))<1
"RTN","ORB3",205,0)
 ......S ORBJ="" F  S ORBJ=$O(ORBLST2(ORBJ)) Q:ORBJ=""  D
"RTN","ORB3",206,0)
 .......S ORBDUZ=$P(ORBLST2(ORBJ),U)_U_ORBPTM I +$G(ORBDUZ)>0,($D(^XUSEC("ORES",+ORBDUZ))) D USER
"RTN","ORB3",207,0)
 Q
"RTN","ORB3",208,0)
ENTERBY ;
"RTN","ORB3",209,0)
 I $D(ORBU) S ORBU(ORBUI)=" User entering order's most recent activity:",ORBUI=ORBUI+1
"RTN","ORB3",210,0)
 Q:+$G(ORNUM)<1
"RTN","ORB3",211,0)
 I $D(^OR(100,ORNUM,8,0)) D
"RTN","ORB3",212,0)
 .S ORBDUZ=$P(^OR(100,ORNUM,8,$P(^OR(100,ORNUM,8,0),U,3),0),U,13)
"RTN","ORB3",213,0)
 I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",214,0)
 Q
"RTN","ORB3",215,0)
PCMMPRIM ;
"RTN","ORB3",216,0)
 I $D(ORBU) S ORBU(ORBUI)=" PCMM Primary Care Practitioner:",ORBUI=ORBUI+1
"RTN","ORB3",217,0)
 S ORBDUZ=+$$OUTPTPR^SDUTL3(ORBDFN,$$NOW^XLFDT,1)  ;DBIA #1252
"RTN","ORB3",218,0)
 I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",219,0)
 Q
"RTN","ORB3",220,0)
PCMMASSC ;
"RTN","ORB3",221,0)
 I $D(ORBU) S ORBU(ORBUI)=" PCMM Associate Provider:",ORBUI=ORBUI+1
"RTN","ORB3",222,0)
 S ORBDUZ=+$$OUTPTAP^SDUTL3(ORBDFN,$$NOW^XLFDT)  ;DBIA #1252
"RTN","ORB3",223,0)
 I +$G(ORBDUZ)>0 D USER
"RTN","ORB3",224,0)
 Q
"RTN","ORB3",225,0)
PCMMTEAM ;
"RTN","ORB3",226,0)
 N ORPCMM,ORPCMMDZ
"RTN","ORB3",227,0)
 I $D(ORBU) S ORBU(ORBUI)=" PCMM Team Position Assignments:",ORBUI=ORBUI+1
"RTN","ORB3",228,0)
 S ORPCMM=$$PRPT^SCAPMC(ORBDFN,,,,,,"^TMP(""ORPCMM"",$J)",)  ;DBIA #1916
"RTN","ORB3",229,0)
 S ORPCMMDZ=0
"RTN","ORB3",230,0)
 F  S ORPCMMDZ=$O(^TMP("ORPCMM",$J,"SCPR",ORPCMMDZ)) Q:'ORPCMMDZ  D
"RTN","ORB3",231,0)
 .S ORBDUZ=ORPCMMDZ D USER
"RTN","ORB3",232,0)
 K ^TMP("ORPCMM",$J)
"RTN","ORB3",233,0)
 Q
"RTN","ORB3",234,0)
USER ;should USER (ORBDUZ) be a recip
"RTN","ORB3",235,0)
 D USER^ORB3USER(.XQA,ORBDUZ,ORN,.ORBU,.ORBUI,ORBDFN,+$G(ORNUM))
"RTN","ORB3",236,0)
 Q
"RTN","ORCDLR1")
0^32^B81262557
"RTN","ORCDLR1",1,0)
ORCDLR1 ;SLC/MKB,JFR - Utility fcns for LR dialogs cont ;8/29/02  14:45
"RTN","ORCDLR1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,29,49,61,79,141,243,296**;Dec 17, 1997;Build 19
"RTN","ORCDLR1",3,0)
 ;
"RTN","ORCDLR1",4,0)
EN ; -- Entry Action for LR OTHER LAB TESTS order dialog
"RTN","ORCDLR1",5,0)
 D GETIMES S ORMAX=0
"RTN","ORCDLR1",6,0)
 S:$G(ORL) ORMAX=$$GET^XPAR("LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORCDLR1",7,0)
 Q
"RTN","ORCDLR1",8,0)
 ;
"RTN","ORCDLR1",9,0)
EX ; -- Exit Action for order dialog
"RTN","ORCDLR1",10,0)
 K ORTIME,ORCOLLCT,ORMAX,ORTEST,ORDIV,ORIMTIME,ORSMAX,ORSTMS,ORSCH,ORCAT
"RTN","ORCDLR1",11,0)
 I $G(ORXL) S ORL=ORXL K ORXL
"RTN","ORCDLR1",12,0)
 Q
"RTN","ORCDLR1",13,0)
 ;
"RTN","ORCDLR1",14,0)
GETIMES ; -- Set list of routine collections into ORTIME($H)=FMtime
"RTN","ORCDLR1",15,0)
 N I,X,CNT,ON K ORTIME
"RTN","ORCDLR1",16,0)
 I '$D(VALIDT) D
"RTN","ORCDLR1",17,0)
 . S I=$$PTR^ORCD("OR GTX START DATE/TIME"),X=$P(ORDIALOG(I,0),U,2)
"RTN","ORCDLR1",18,0)
 . S X="T::ETX",$P(ORDIALOG(I,0),U,2)=X ; reset lower bound
"RTN","ORCDLR1",19,0)
 S ORDIV=+$P($G(^SC(+$G(ORL),0)),U,4) S:'ORDIV ORDIV=+$G(DUZ(2))
"RTN","ORCDLR1",20,0)
 I $G(OREVENT) S ORDIV=+$$DIV^OREVNTX(OREVENT),ORXL=$G(ORL),ORL=$$LOC^OREVNTX(OREVENT)
"RTN","ORCDLR1",21,0)
 D GETLST^XPAR(.ORTIME,ORDIV_";DIC(4,","LR PHLEBOTOMY COLLECTION","N")
"RTN","ORCDLR1",22,0)
 S (I,CNT)=0 F  S I=$O(ORTIME(I)) Q:I'>0  S CNT=CNT+1,X=$P(ORTIME(I),U),ORTIME(I)=X,ORTIME("B",+("."_X))=I ; ORTIME($H time)=0000 FM time, ORTIME("B",.0000)=$H time of cut-off
"RTN","ORCDLR1",23,0)
 S ORTIME=CNT,I=$O(ORTIME(0)) S:I ORTIME("AM")=ORTIME(I) ; 1st collection
"RTN","ORCDLR1",24,0)
 S I=$O(ORTIME($P($H,",",2))) S:I ORTIME("NEXT")=ORTIME(I) ;NEXT coll
"RTN","ORCDLR1",25,0)
 S ON=$$ON^LR7OV4(ORDIV) D:ON SHOW^LR7OV4(ORDIV,.ORIMTIME)
"RTN","ORCDLR1",26,0)
 I 'ON,'$D(VALIDT) S I=$$PTR^ORCD("OR GTX COLLECTION TYPE"),X=$P(ORDIALOG(I,0),U,2),$P(ORDIALOG(I,0),U,2)=$P(X,";",1,3) ;Remove Immed if '$$ON
"RTN","ORCDLR1",27,0)
 Q
"RTN","ORCDLR1",28,0)
 ;
"RTN","ORCDLR1",29,0)
DEFTIME() ; -- Returns default collection time
"RTN","ORCDLR1",30,0)
 I $L($G(LRFDATE)) S EDITONLY=1 Q LRFDATE
"RTN","ORCDLR1",31,0)
 I '$D(ORCOLLCT) Q ""
"RTN","ORCDLR1",32,0)
 N Y S Y="" I $D(^TMP("ORECALL",$J,ORDIALOG,PROMPT)) D  Q:$L(Y) Y
"RTN","ORCDLR1",33,0)
 . S Y=$$RECALL^ORCD(PROMPT)
"RTN","ORCDLR1",34,0)
 . I '$S(ORCOLLCT="LC":$$LABCOLL(Y),ORCOLLCT="I":$$IMMCOLL(Y),1:$$CKDATE(Y)) S Y="" Q
"RTN","ORCDLR1",35,0)
 . S EDITONLY=1
"RTN","ORCDLR1",36,0)
 ;I $G(ORTYPE)="Q" Q $S(ORCOLLCT="LC":"AM",1:"")
"RTN","ORCDLR1",37,0)
 D LIST^ORCD:ORCOLLCT="LC"&$G(ORDIALOG(PROMPT,"LIST"))
"RTN","ORCDLR1",38,0)
 D IMMTIMES:ORCOLLCT="I"&$O(ORIMTIME(0))
"RTN","ORCDLR1",39,0)
 Q $S(ORCOLLCT="LC":"NEXT",ORCOLLCT="I":$$IMMDEF,ORCOLLCT="WC":"NOW",1:"TODAY")
"RTN","ORCDLR1",40,0)
 ;
"RTN","ORCDLR1",41,0)
IMMDEF() ; -- Returns immediate collect default
"RTN","ORCDLR1",42,0)
 N X,Y S X=$$DEFTIME^LR7OV4(ORDIV)
"RTN","ORCDLR1",43,0)
 S Y=$S($P(X,U,3):"NOW+"_$P(X,U,3)_"'",1:$P(X,U))
"RTN","ORCDLR1",44,0)
 Q Y
"RTN","ORCDLR1",45,0)
 ;
"RTN","ORCDLR1",46,0)
COLLTIME ; -- Get list of common collection times
"RTN","ORCDLR1",47,0)
 I ORCOLLCT="I" D:'$D(ORIMTIME) SHOW^LR7OV4(ORDIV,.ORIMTIME)
"RTN","ORCDLR1",48,0)
 I ORCOLLCT'="LC" K ORDIALOG(PROMPT,"LIST") Q
"RTN","ORCDLR1",49,0)
 Q:$G(ORDIALOG(PROMPT,"LIST"))  Q:'$O(ORTIME(0))
"RTN","ORCDLR1",50,0)
 N I,X,CNT,NEXT,DAY,NOW S NOW=$P($H,",",2)
"RTN","ORCDLR1",51,0)
 S NEXT=$O(ORTIME(NOW)),DAY=$$NEXTCOLL($S(NEXT:"T",1:"T+1")) Q:DAY=""
"RTN","ORCDLR1",52,0)
 S:'NEXT!(DAY["+") NEXT=$O(ORTIME(0))
"RTN","ORCDLR1",53,0)
 S CNT=1,ORDIALOG(PROMPT,"LIST",1)="NEXT^NEXT Lab collection ("_DAY_"@"_$$TIME(ORTIME(NEXT))_")",ORDIALOG(PROMPT,"LIST","B","NEXT LAB COLLECTION")="NEXT"
"RTN","ORCDLR1",54,0)
 S ORDIALOG(PROMPT,"LIST","B","AM LAB COLLECTION")="AM"
"RTN","ORCDLR1",55,0)
 G:ORTIME'>1 CTMQ ; only NEXT
"RTN","ORCDLR1",56,0)
 S I=NEXT F  S I=$O(ORTIME(I)) Q:I'>0  S X=DAY_"@"_$$TIME(ORTIME(I)),CNT=CNT+1,ORDIALOG(PROMPT,"LIST",CNT)=X_"^Routine Lab collection ("_X_")",ORDIALOG(PROMPT,"LIST","B","ROUTINE LAB COLLECTION")=X
"RTN","ORCDLR1",57,0)
 I NEXT>$O(ORTIME(0)) D  ;add morning times before NEXT to T+1
"RTN","ORCDLR1",58,0)
 . S DAY="T+"_(+$P(DAY,"+",2)+1),DAY=$$NEXTCOLL(DAY),I=$O(ORTIME(0))
"RTN","ORCDLR1",59,0)
 . S X=DAY_"@"_$$TIME(ORTIME("AM")),CNT=CNT+1,ORDIALOG(PROMPT,"LIST",CNT)="AM^AM Lab collection ("_X_")"
"RTN","ORCDLR1",60,0)
 . F  S I=$O(ORTIME(I)) Q:(I'>0)!(I'<NEXT)  S X=DAY_"@"_$$TIME(ORTIME(I)),CNT=CNT+1,ORDIALOG(PROMPT,"LIST",CNT)=X_"^Routine Lab collection ("_X_")",ORDIALOG(PROMPT,"LIST","B","ROUTINE LAB COLLECTION")=X
"RTN","ORCDLR1",61,0)
CTMQ S ORDIALOG(PROMPT,"LIST")=CNT
"RTN","ORCDLR1",62,0)
 Q
"RTN","ORCDLR1",63,0)
 ;
"RTN","ORCDLR1",64,0)
NEXTCOLL(START) ; -- Returns the next day that routine lab collects are done
"RTN","ORCDLR1",65,0)
 N X,Y,%DT,OFFSET,ORDAYS,PARAM I '$O(ORTIME(0)) Q "" ; no Lab collect
"RTN","ORCDLR1",66,0)
 S:'$D(START) START="T" S OFFSET=+$P(START,"+",2),START=$P(START,"+")
"RTN","ORCDLR1",67,0)
 F ORDAYS=1:1:7 D  Q:$D(X)  S OFFSET=OFFSET+1 ; ck up to a week
"RTN","ORCDLR1",68,0)
 . S %DT="X",X=START_$S(OFFSET:"+"_OFFSET,1:"")
"RTN","ORCDLR1",69,0)
 . D ^%DT I Y'>0 K X Q
"RTN","ORCDLR1",70,0)
 . I $G(ORL),$$GET^XPAR("ALL^LOC.`"_+ORL,"LR EXCEPTED LOCATIONS") Q
"RTN","ORCDLR1",71,0)
 . S PARAM="LR COLLECT "_$$UP^XLFSTR($$DOW^XLFDT(Y))
"RTN","ORCDLR1",72,0)
 . I '$$GET^XPAR("ALL",PARAM) K X Q
"RTN","ORCDLR1",73,0)
 . I '$$GET^XPAR("ALL","LR IGNORE HOLIDAYS"),$D(^HOLIDAY($P(Y,"."))) K X Q
"RTN","ORCDLR1",74,0)
 S Y=$S($D(X):X,1:"")
"RTN","ORCDLR1",75,0)
 Q Y
"RTN","ORCDLR1",76,0)
 ;
"RTN","ORCDLR1",77,0)
TIME(X) ; -- Returns 00:00AM from 0000 FileMan time
"RTN","ORCDLR1",78,0)
 N HOUR,MIN,XM,Y
"RTN","ORCDLR1",79,0)
 S HOUR=$E(X,1,2),MIN=$E(X,3,4),XM="AM"
"RTN","ORCDLR1",80,0)
 I HOUR'<12 S XM="PM" S:HOUR>12 HOUR=HOUR-12
"RTN","ORCDLR1",81,0)
 S:$E(HOUR)="0" HOUR=$E(HOUR,2) ; strip leading 0
"RTN","ORCDLR1",82,0)
 S Y=HOUR_":"_MIN_XM
"RTN","ORCDLR1",83,0)
 Q Y
"RTN","ORCDLR1",84,0)
 ;
"RTN","ORCDLR1",85,0)
LISTCOLL ; -- Lists the routine collection times for ??-help
"RTN","ORCDLR1",86,0)
 I '$O(ORTIME(0)) W !,"No routine lab collection times defined." Q
"RTN","ORCDLR1",87,0)
 N I,X S I=0,X=""
"RTN","ORCDLR1",88,0)
 F  S I=$O(ORTIME(I)) Q:I'>0  S X=X_$S($L(X):", ",1:"")_$$TIME(ORTIME(I))
"RTN","ORCDLR1",89,0)
 W !,"Routine collection times are "_X_"."
"RTN","ORCDLR1",90,0)
 W !,"You may also enter AM for the morning collection, or NEXT for the next",!,"routine collection time."
"RTN","ORCDLR1",91,0)
 Q
"RTN","ORCDLR1",92,0)
 ;
"RTN","ORCDLR1",93,0)
IMMTIMES ; -- Show the valid date/times for immediate collect
"RTN","ORCDLR1",94,0)
 N I S I=0
"RTN","ORCDLR1",95,0)
 F  S I=$O(ORIMTIME(I)) Q:I'>0  W !,ORIMTIME(I)
"RTN","ORCDLR1",96,0)
 Q
"RTN","ORCDLR1",97,0)
 ;
"RTN","ORCDLR1",98,0)
CKDATE(X) ; -- Valid coll time for SP or WC?
"RTN","ORCDLR1",99,0)
 S X=$$UP^XLFSTR(X) I ("NOW"[X)!("TODAY"[X) Q 1
"RTN","ORCDLR1",100,0)
 I X?1"T+"1.3N,+$P(X,"+",2)'>370 Q 1
"RTN","ORCDLR1",101,0)
 N Y,%DT,D
"RTN","ORCDLR1",102,0)
 I X'?7N.1".".6N S %DT="TX" D ^%DT S:Y>0 X=Y I Y'>0 Q "0^Invalid date/time"
"RTN","ORCDLR1",103,0)
 S D=$P(X,".") I D<DT Q "0^Cannot order for past days"
"RTN","ORCDLR1",104,0)
 I $P(X,".",2),X<$$NOW^XLFDT,'$G(OREVENT),$G(ORTYPE)'="Z" Q "0^The requested collection time has passed"
"RTN","ORCDLR1",105,0)
 I D>$$FMADD^XLFDT(DT,370) Q "0^Cannot order more than 370 days in advance"
"RTN","ORCDLR1",106,0)
 Q 1
"RTN","ORCDLR1",107,0)
 ;
"RTN","ORCDLR1",108,0)
IMMCOLL(X) ; -- Valid immediate collection date/time?
"RTN","ORCDLR1",109,0)
 I X?1"NOW+"1.N1"'" Q 1
"RTN","ORCDLR1",110,0)
 I X'?7N.1".".6N N Y,%DT S %DT="T" D ^%DT S:Y>0 X=Y I Y'>0 Q "0^Invalid date/time"
"RTN","ORCDLR1",111,0)
 Q $$VALID^LR7OV4(ORDIV,X)
"RTN","ORCDLR1",112,0)
 ;
"RTN","ORCDLR1",113,0)
LABCOLL(ORXTIM) ; -- Valid lab collection date/time?
"RTN","ORCDLR1",114,0)
 ;    Returns valid flag of 1 or 0^message
"RTN","ORCDLR1",115,0)
 N I,X,Y,%DT,ORD,ORT,PARAM,ORDY
"RTN","ORCDLR1",116,0)
 I '$O(ORTIME(0)) Q "0^There are no lab collection times defined!"
"RTN","ORCDLR1",117,0)
 I (ORXTIM="AM")!(ORXTIM="NEXT") Q 1
"RTN","ORCDLR1",118,0)
 I ORXTIM'?7N.1".".6N S %DT="T",X=ORXTIM D ^%DT S:Y>0 ORXTIM=Y I Y'>0 Q "0^Invalid date/time"
"RTN","ORCDLR1",119,0)
 ;I ORXTIM?1"V".E S T="."_$P(ORXTIM,"@",2) G D1 ; Visit - ignore day (D ^%DT ??)
"RTN","ORCDLR1",120,0)
 S ORD=$P(ORXTIM,"."),ORT="."_$P(ORXTIM,".",2)
"RTN","ORCDLR1",121,0)
 S:ORT="." ORT=+("."_$G(ORTIME("AM")))
"RTN","ORCDLR1",122,0)
 I '$D(ORTIME("B",ORT)) Q "0^Invalid lab collection time"
"RTN","ORCDLR1",123,0)
LC1 ; -- check date
"RTN","ORCDLR1",124,0)
 I ORD<DT Q "0^Can not order for past days."
"RTN","ORCDLR1",125,0)
 I ORXTIM<$$NOW^XLFDT,'$G(OREVENT) Q "0^Cannot order in the past"
"RTN","ORCDLR1",126,0)
 I $G(ORTYPE)'="Z",'$G(OREVENT),ORD=DT,$P($H,",",2)>ORTIME("B",ORT) Q "0^The cut-off time for this collection has passed"
"RTN","ORCDLR1",127,0)
 S ORDY=7 I $D(^XTV(8989.51,"B","LR LAB COLLECT FUTURE")),$G(ORL) S ORDY=+$$GET^XPAR("ALL^DIV.`"_ORDIV_"^LOC.`"_+ORL,"LR LAB COLLECT FUTURE",1,"I")
"RTN","ORCDLR1",128,0)
 I ORXTIM>$$FMADD^XLFDT($$NOW^XLFDT,ORDY) Q "0^Cannot order a lab collection more than "_ORDY_" days in advance"
"RTN","ORCDLR1",129,0)
 I $G(ORL),$$GET^XPAR("ALL^LOC.`"_+ORL,"LR EXCEPTED LOCATIONS") Q 1
"RTN","ORCDLR1",130,0)
 S PARAM="LR COLLECT "_$$UP^XLFSTR($$DOW^XLFDT(ORD))
"RTN","ORCDLR1",131,0)
 I $G(ORTYPE)'="Z",'$$GET^XPAR("ALL",PARAM) Q "0^There are no lab collections that day"
"RTN","ORCDLR1",132,0)
 I $G(ORTYPE)'="Z",'$$GET^XPAR("ALL","LR IGNORE HOLIDAYS"),$D(^HOLIDAY(ORD)) Q "0^There are no lab collections on holidays"
"RTN","ORCDLR1",133,0)
 Q 1
"RTN","ORCDLR1",134,0)
 ;
"RTN","ORCDLR1",135,0)
LABSAMP() ; -- Lab Collect sample?
"RTN","ORCDLR1",136,0)
 N X,Y S X=+$$VAL^ORCD("COLLECTION SAMPLE"),Y=$P($G(^LAB(62,X,0)),U,7)
"RTN","ORCDLR1",137,0)
 Q Y
"RTN","ORCDLR1",138,0)
 ;
"RTN","ORCDLR1",139,0)
COLLTYPE() ; -- Returns default collection type
"RTN","ORCDLR1",140,0)
 N Y I $G(ORTYPE)="Z" S Y="" G CTQ
"RTN","ORCDLR1",141,0)
 I $L($G(LRFZX)) S Y=LRFZX,EDITONLY=1 G CTQ
"RTN","ORCDLR1",142,0)
 I $D(^TMP("ORECALL",$J,+ORDIALOG,PROMPT)) D  G CTQ
"RTN","ORCDLR1",143,0)
 . S Y=$$RECALL^ORCD(PROMPT),EDITONLY=1
"RTN","ORCDLR1",144,0)
 S:$G(ORL) Y=$$GET^XPAR("ALL^"_ORL,"LR DEFAULT TYPE QUICK")
"RTN","ORCDLR1",145,0)
 I '$L($G(Y)) S Y=$S('$$INPT^ORCD:"SP",$G(ORTYPE)="Q":"LC",1:"WC")
"RTN","ORCDLR1",146,0)
CTQ I Y="I",'$O(ORIMTIME(0))!('$G(ORTEST("Lab CollSamp"))) S Y="WC"
"RTN","ORCDLR1",147,0)
 I Y="LC",'$O(ORTIME(0))!('$G(ORTEST("Lab CollSamp"))) S Y="WC"
"RTN","ORCDLR1",148,0)
 ;S:$G(ORTYPE)="Q" EDITONLY=1
"RTN","ORCDLR1",149,0)
 I '(FIRST&EDITONLY) D HELPTYPE
"RTN","ORCDLR1",150,0)
 Q Y
"RTN","ORCDLR1",151,0)
 ;
"RTN","ORCDLR1",152,0)
CKTYPE ; -- Valid type for time, sample?
"RTN","ORCDLR1",153,0)
 I Y="LC",'$O(ORTIME(0)) W $C(7),!,"There are no lab collection times defined!" K DONE Q
"RTN","ORCDLR1",154,0)
 I Y="I",'$O(ORIMTIME(0)) W $C(7),!,"There are no immediate collection times defined!" K DONE Q
"RTN","ORCDLR1",155,0)
 I (Y="LC"!(Y="I")),'$G(ORTEST("Lab CollSamp")) W $C(7),!,"There is no lab collection sample defined for this test!",! K DONE Q
"RTN","ORCDLR1",156,0)
 I $D(ORESET),ORESET'=Y,("ILC"[ORESET)!("ILC"[Y) D CHANGED^ORCDLR("TYPE") K ORDIALOG($$PTR^ORCD("OR GTX LAB URGENCY"),"LIST")
"RTN","ORCDLR1",157,0)
 Q
"RTN","ORCDLR1",158,0)
 ;
"RTN","ORCDLR1",159,0)
HELPTYPE ; -- Xecutable help for Coll Type
"RTN","ORCDLR1",160,0)
 W !!,"SEND TO LAB - Means the patient is ambulatory and will be sent to the",!,"Laboratory draw room to have blood drawn."
"RTN","ORCDLR1",161,0)
 W !,"WARD COLLECT - Means that either the physician or a nurse will be collecting",!,"the sample on the ward."
"RTN","ORCDLR1",162,0)
 W !,"LAB BLOOD TEAM - Means the phlebotomist from Lab will draw the blood on the",!,"ward.  This method is limited to laboratory defined collection times."
"RTN","ORCDLR1",163,0)
 W:$$ON^LR7OV4(ORDIV) !,"IMMEDIATE COLLECT BY BLOOD TEAM - Means the phlebotomist from Lab is on",!,"call to draw blood on the ward.  This method is available during times",!,"defined by Laboratory." W !
"RTN","ORCDLR1",164,0)
 N DOMAIN S DOMAIN=$P(ORDIALOG(PROMPT,0),U,2) D SETLST1^ORCD
"RTN","ORCDLR1",165,0)
 Q
"RTN","ORCDLR1",166,0)
VALID(ORDER) ;check collection time on release
"RTN","ORCDLR1",167,0)
 N VALIDT,OREVENT,COLLTYPE,COLLDT,OK,ORDIV,ORTXT,ORPTLK,ORTIME,ORIMTIME,ORACT
"RTN","ORCDLR1",168,0)
 S VALIDT="" D GETIMES
"RTN","ORCDLR1",169,0)
 S COLLDT=$$VALUE^ORCSAVE2(ORDER,"START")
"RTN","ORCDLR1",170,0)
 S COLLTYPE=$$VALUE^ORCSAVE2(ORDER,"COLLECT")
"RTN","ORCDLR1",171,0)
 I $L($P(^OR(100,+ORIFN,0),U,17)) S OREVENT=$P(^(0),U,17)
"RTN","ORCDLR1",172,0)
 I "NOWAMNEXT"[COLLDT D:'$G(OREVENT) MULT Q 1 ;OK
"RTN","ORCDLR1",173,0)
 S OK=$S(COLLTYPE="LC":$$LABCOLL(COLLDT),COLLTYPE="I":$$IMMCOLL(COLLDT),1:$$CKDATE(COLLDT))
"RTN","ORCDLR1",174,0)
 I OK D:'$G(OREVENT) MULT Q 1 ;COLLDT passed checks
"RTN","ORCDLR1",175,0)
 W !!,$C(7),$P(OK,U,2)
"RTN","ORCDLR1",176,0)
 D TEXT^ORQ12(.ORTXT,ORDER) W !,$G(ORTXT(1)) K ORTXT
"RTN","ORCDLR1",177,0)
 W !,"must be edited before signing/release." K VALIDT D
"RTN","ORCDLR1",178,0)
 . N ORDIV,ORIMTIME,ORTIME,ORNP
"RTN","ORCDLR1",179,0)
 . S ORNP=$P(^OR(100,ORDER,0),U,4)
"RTN","ORCDLR1",180,0)
 . S ORACT="XX" D XX^ORCACT4 ;edit order
"RTN","ORCDLR1",181,0)
 I $$VALUE^ORCSAVE2(ORDER,"START")'=COLLDT D:'$G(OREVENT) MULT Q 1 ;OK
"RTN","ORCDLR1",182,0)
 Q 0
"RTN","ORCDLR1",183,0)
 ;
"RTN","ORCDLR1",184,0)
MULT ; -- ck child orders
"RTN","ORCDLR1",185,0)
 N CHGD S CHGD=$$MULT^ORCDLR(ORDER,COLLTYPE,COLLDT) Q:'CHGD
"RTN","ORCDLR1",186,0)
 W !!,$P(CHGD,U,2) H 2
"RTN","ORCDLR1",187,0)
 Q
"RTN","ORCDPSIV")
0^1^B96653807
"RTN","ORCDPSIV",1,0)
ORCDPSIV ;SLC/MKB-Pharmacy IV dialog utilities ;09/26/08
"RTN","ORCDPSIV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,38,48,158,195,243,296**;Dec 17, 1997;Build 19
"RTN","ORCDPSIV",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCDPSIV",4,0)
CKSCH ; -- validate schedule [Called from P-S Action]
"RTN","ORCDPSIV",5,0)
 N ORX S ORX=ORDIALOG(PROMPT,ORI) Q:ORX=$G(ORESET)  K ORSD
"RTN","ORCDPSIV",6,0)
 D EN^PSSGS0(.ORX,"I")
"RTN","ORCDPSIV",7,0)
 I $D(ORX) S ORDIALOG(PROMPT,ORI)=ORX Q
"RTN","ORCDPSIV",8,0)
 W $C(7),!,"Enter a standard schedule for administering this medication."
"RTN","ORCDPSIV",9,0)
 Q
"RTN","ORCDPSIV",10,0)
ISONETIM(SCH) ;
"RTN","ORCDPSIV",11,0)
 N DUR
"RTN","ORCDPSIV",12,0)
 I SCH="" Q 0
"RTN","ORCDPSIV",13,0)
 K ^TMP($J,"ORCDPSIV GETSCHTYP")
"RTN","ORCDPSIV",14,0)
 D ZERO^PSS51P1(,SCH,"PSJ","O","ORCDPSIV GETSCHTYP")
"RTN","ORCDPSIV",15,0)
 I +^TMP($J,"ORCDPSIV GETSCHTYP",0)>0 D  Q 1
"RTN","ORCDPSIV",16,0)
 .S DUR=$$PTR^ORCD("OR GTX DURATION")
"RTN","ORCDPSIV",17,0)
 .I $G(ORDIALOG(DUR,1))="" Q
"RTN","ORCDPSIV",18,0)
 .S ORDIALOG(DUR,1)=""
"RTN","ORCDPSIV",19,0)
 .W !,"IV Orders with a schedule type of one-time cannot have a duration."
"RTN","ORCDPSIV",20,0)
 .W !,"The duration has been deleted from this quick order." H 1
"RTN","ORCDPSIV",21,0)
 K ^TMP($J,"ORCDPSIV GETSCHTYP")
"RTN","ORCDPSIV",22,0)
 Q 0
"RTN","ORCDPSIV",23,0)
 ;
"RTN","ORCDPSIV",24,0)
PROVIDER ; -- Check provider, if authorized to write med orders
"RTN","ORCDPSIV",25,0)
 I $D(^XUSEC("OREMAS",DUZ)),'$$GET^XPAR("ALL","OR OREMAS MED ORDERS") W $C(7),!!,"OREMAS key holders may not enter medication orders." S ORQUIT=1 Q
"RTN","ORCDPSIV",26,0)
 N PS,NAME S PS=$G(^VA(200,+$G(ORNP),"PS")),NAME=$P($G(^(20)),U,2)
"RTN","ORCDPSIV",27,0)
 I '$L(NAME) S NAME=$P(^VA(200,+$G(ORNP),0),U)
"RTN","ORCDPSIV",28,0)
 I '$P(PS,U) W $C(7),!!,NAME_" is not authorized to write medication orders!" S ORQUIT=1
"RTN","ORCDPSIV",29,0)
 I $P(PS,U,4),$$NOW^XLFDT>$P(PS,U,4) W $C(7),!!,NAME_" is no longer authorized to write medication orders!" S ORQUIT=1
"RTN","ORCDPSIV",30,0)
 I $G(ORQUIT) W !,"You must select another provider to continue.",! S PS=$$MEDPROV I PS S ORXNP=ORNP,ORNP=PS K ORQUIT
"RTN","ORCDPSIV",31,0)
 Q
"RTN","ORCDPSIV",32,0)
 ;
"RTN","ORCDPSIV",33,0)
MEDPROV() ; -- Return ordering med provider
"RTN","ORCDPSIV",34,0)
 N X,Y,D,DIC
"RTN","ORCDPSIV",35,0)
 S DIC=200,DIC(0)="AEQ",DIC("A")="Select PROVIDER: ",D="AK.PROVIDER"
"RTN","ORCDPSIV",36,0)
 S DIC("S")="I $P($G(^(""PS"")),U),'$P(^(""PS""),U,4)!($P(^(""PS""),U,4)>$$NOW^XLFDT)"
"RTN","ORCDPSIV",37,0)
 D IX^DIC S:Y>0 Y=+Y I Y'>0 S Y="^"
"RTN","ORCDPSIV",38,0)
 Q Y
"RTN","ORCDPSIV",39,0)
 ;
"RTN","ORCDPSIV",40,0)
CHANGED(TYPE) ; -- Kill dependent values when OI changes
"RTN","ORCDPSIV",41,0)
 N PROMPTS,NAME,PTR,P,I
"RTN","ORCDPSIV",42,0)
 Q:'$L($G(TYPE))  S PROMPTS=""
"RTN","ORCDPSIV",43,0)
 S:TYPE="B" PROMPTS="VOLUME"
"RTN","ORCDPSIV",44,0)
 S:TYPE="A" PROMPTS="STRENGTH PSIV^UNITS"
"RTN","ORCDPSIV",45,0)
 S:TYPE="T" PROMPTS="INFUSION RATE^SCHEDULE"
"RTN","ORCDPSIV",46,0)
 F P=1:1:$L(PROMPTS,U) S NAME=$P(PROMPTS,U,P) D
"RTN","ORCDPSIV",47,0)
 . S PTR=$O(^ORD(101.41,"AB","OR GTX "_NAME,0)) Q:'PTR
"RTN","ORCDPSIV",48,0)
 . S I=0 F  S I=$O(ORDIALOG(PTR,I)) Q:I'>0  K ORDIALOG(PTR,I)
"RTN","ORCDPSIV",49,0)
 . K ORDIALOG(PTR,"LIST")
"RTN","ORCDPSIV",50,0)
 Q
"RTN","ORCDPSIV",51,0)
 ;
"RTN","ORCDPSIV",52,0)
INACTIVE(TYPE) ; -- Check OI inactive date
"RTN","ORCDPSIV",53,0)
 N OI,X,I,PSOI,DEA,EXIT S:$G(TYPE)'="A" TYPE="S"
"RTN","ORCDPSIV",54,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:OI'>0
"RTN","ORCDPSIV",55,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D  Q  ;inactive
"RTN","ORCDPSIV",56,0)
 . S X=$S(TYPE="A":"additive",1:"solution"),ORQUIT=1
"RTN","ORCDPSIV",57,0)
 . W $C(7),!,"This "_X_" may not be ordered anymore.  Please select another."
"RTN","ORCDPSIV",58,0)
 S I=$S(TYPE="A":4,1:3) I '$P($G(^ORD(101.43,OI,"PS")),U,I) D  Q
"RTN","ORCDPSIV",59,0)
 . S X=$S(TYPE="A":"an additive",1:"a solution"),ORQUIT=1
"RTN","ORCDPSIV",60,0)
 . W $C(7),!,"This item may not be ordered as "_X_"."
"RTN","ORCDPSIV",61,0)
 S EXIT=$$INPT^ORCD I EXIT=0 D ROUTECHK Q
"RTN","ORCDPSIV",62,0)
 Q:'$L($T(IVDEA^PSSUTIL1))  ;DBIA #3784
"RTN","ORCDPSIV",63,0)
 S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2)
"RTN","ORCDPSIV",64,0)
 S DEA=$$IVDEA^PSSUTIL1(PSOI,TYPE) I DEA>0 D  Q:$G(ORQUIT)
"RTN","ORCDPSIV",65,0)
 . I $G(ORNP),'$L($P($G(^VA(200,+ORNP,"PS")),U,2)),'$L($P($G(^("PS")),U,3)) W $C(7),!,$P($G(^(0)),U)_" must have a DEA# or VA# to order this drug!" S ORQUIT=1 Q
"RTN","ORCDPSIV",66,0)
 . I DEA=1 W $C(7),!,"This order will require a wet signature!"
"RTN","ORCDPSIV",67,0)
 D ROUTECHK
"RTN","ORCDPSIV",68,0)
 Q
"RTN","ORCDPSIV",69,0)
 ;
"RTN","ORCDPSIV",70,0)
VOLUME ; -- get allowable volumes for solution
"RTN","ORCDPSIV",71,0)
 N PSOI,ORY,CNT,I,XORY K ORDIALOG(PROMPT,"LIST")
"RTN","ORCDPSIV",72,0)
 S PSOI=+$P($G(^ORD(101.43,+$$VAL^ORCD("SOLUTION",INST),0)),U,2)_"B"
"RTN","ORCDPSIV",73,0)
 D ENVOL^PSJORUT2(PSOI,.ORY) Q:'ORY
"RTN","ORCDPSIV",74,0)
 ;S (I,CNT)=0 F  S I=$O(ORY(I)) Q:I'>0  S CNT=CNT+1,ORDIALOG(PROMPT,"LIST",+ORY(I))=+ORY(I)
"RTN","ORCDPSIV",75,0)
 S (I,CNT)=0 F  S I=$O(ORY(I)) Q:I'>0  D
"RTN","ORCDPSIV",76,0)
 . S CNT=CNT+1
"RTN","ORCDPSIV",77,0)
 . S XORY(I)=+ORY(I) I XORY(I)<1,$E(XORY(I),1,2)'="0." S XORY(I)=0_XORY(I)
"RTN","ORCDPSIV",78,0)
 . S ORDIALOG(PROMPT,"LIST",XORY(I))=XORY(I)
"RTN","ORCDPSIV",79,0)
 S ORDIALOG(PROMPT,"LIST")=CNT_"^1"
"RTN","ORCDPSIV",80,0)
 Q
"RTN","ORCDPSIV",81,0)
 ;
"RTN","ORCDPSIV",82,0)
UNITS ; -- get allowable units for current additive
"RTN","ORCDPSIV",83,0)
 N PSOI,ORY,I,UNITS
"RTN","ORCDPSIV",84,0)
 S PSOI=+$P(^ORD(101.43,+ORDIALOG($$PTR^ORCD("OR GTX ADDITIVE"),INST),0),U,2)_"A"
"RTN","ORCDPSIV",85,0)
 D ENVOL^PSJORUT2(PSOI,.ORY)
"RTN","ORCDPSIV",86,0)
 S I=$O(ORY(0)) Q:'I  S UNITS=$P($G(ORY(I)),U,2)
"RTN","ORCDPSIV",87,0)
 S ORDIALOG($$PTR^ORCD("OR GTX UNITS"),INST)=UNITS
"RTN","ORCDPSIV",88,0)
 W !," (Units for this additive are "_UNITS_")"
"RTN","ORCDPSIV",89,0)
 Q
"RTN","ORCDPSIV",90,0)
 ;
"RTN","ORCDPSIV",91,0)
PREMIX() ; -- Returns 1 or 0, if IV base is a premix solution
"RTN","ORCDPSIV",92,0)
 N BASE,PS,I,Y
"RTN","ORCDPSIV",93,0)
 S BASE=$$PTR^ORCD("OR GTX ORDERABLE ITEM"),Y=0
"RTN","ORCDPSIV",94,0)
 S I=0 F  S I=$O(ORDIALOG(BASE,I)) Q:I'>0  D  Q:Y
"RTN","ORCDPSIV",95,0)
 . S PS=$G(^ORD(101.43,+$G(ORDIALOG(BASE,I)),"PS"))
"RTN","ORCDPSIV",96,0)
 . I $P(PS,U,3)&($P(PS,U,4)) S Y=1
"RTN","ORCDPSIV",97,0)
 Q Y
"RTN","ORCDPSIV",98,0)
 ;
"RTN","ORCDPSIV",99,0)
IVRTEENT ;
"RTN","ORCDPSIV",100,0)
 N ARRAY,DIR,RIEN,TROUTE
"RTN","ORCDPSIV",101,0)
 I ORTYPE'="Z" Q
"RTN","ORCDPSIV",102,0)
 S RIEN=$P($G(ORDIALOG("B","ROUTE")),U,2) Q:RIEN'>0
"RTN","ORCDPSIV",103,0)
 S EXIT=0,TROUTE=$G(ORDIALOG(RIEN,1)) Q:TROUTE'>0
"RTN","ORCDPSIV",104,0)
 I $$IVRTESCR(TROUTE)=1 Q
"RTN","ORCDPSIV",105,0)
 S ORDIALOG(RIEN,1)=""
"RTN","ORCDPSIV",106,0)
 W !!,"The selected route is not a valid route for this order."
"RTN","ORCDPSIV",107,0)
 W !,"Select a new route for this order from the list of routes below."
"RTN","ORCDPSIV",108,0)
 D RTEDISP(.ARRAY)
"RTN","ORCDPSIV",109,0)
 Q
"RTN","ORCDPSIV",110,0)
 ;
"RTN","ORCDPSIV",111,0)
BIVOI(ARRAY) ;
"RTN","ORCDPSIV",112,0)
 N CNT,NUM,OIIEN,OTYPE
"RTN","ORCDPSIV",113,0)
 S CNT=0
"RTN","ORCDPSIV",114,0)
 F OTYPE="SOLUTION","ADDITIVE" D
"RTN","ORCDPSIV",115,0)
 .S OIIEN=+$P($G(ORDIALOG("B",OTYPE)),U,2) I OIIEN>0 D
"RTN","ORCDPSIV",116,0)
 ..S NUM=0 F  S NUM=$O(ORDIALOG(OIIEN,NUM)) Q:NUM'>0  I +$G(ORDIALOG(OIIEN,NUM))>0 D
"RTN","ORCDPSIV",117,0)
 ...S CNT=CNT+1,ARRAY(CNT)=ORDIALOG(OIIEN,NUM)
"RTN","ORCDPSIV",118,0)
 Q
"RTN","ORCDPSIV",119,0)
 ;
"RTN","ORCDPSIV",120,0)
LVROUTES ;
"RTN","ORCDPSIV",121,0)
 N ARRAY,ROUTES
"RTN","ORCDPSIV",122,0)
 D BIVOI(.ARRAY)
"RTN","ORCDPSIV",123,0)
 D IVDOSFRM^ORWDPS33(.ROUTES,.ARRAY,0,1)
"RTN","ORCDPSIV",124,0)
 D RTEDISP(.ROUTES)
"RTN","ORCDPSIV",125,0)
 Q
"RTN","ORCDPSIV",126,0)
 ;
"RTN","ORCDPSIV",127,0)
RTEDISP(ROUTES) ;
"RTN","ORCDPSIV",128,0)
 N CNT
"RTN","ORCDPSIV",129,0)
 S CNT="" F  S CNT=$O(ROUTES(CNT)) Q:CNT'>0  D
"RTN","ORCDPSIV",130,0)
 .W !,$P($G(ROUTES(CNT)),U,2)
"RTN","ORCDPSIV",131,0)
 Q
"RTN","ORCDPSIV",132,0)
 ;
"RTN","ORCDPSIV",133,0)
IVRTESCR(Y) ;
"RTN","ORCDPSIV",134,0)
 N ARRAY,ROUTES,VALUE
"RTN","ORCDPSIV",135,0)
 D BIVOI(.ARRAY)
"RTN","ORCDPSIV",136,0)
 S VALUE=$$IVQOVAL^ORWDPS33(.ARRAY,Y) I VALUE'="" Q 1
"RTN","ORCDPSIV",137,0)
 Q 0
"RTN","ORCDPSIV",138,0)
 ;
"RTN","ORCDPSIV",139,0)
ROUTECHK ;
"RTN","ORCDPSIV",140,0)
 N CNT,IEN,ROUTE,VALUE
"RTN","ORCDPSIV",141,0)
 S RIEN=$P($G(ORDIALOG("B","ROUTE")),U,2) Q:RIEN'>0
"RTN","ORCDPSIV",142,0)
 S TROUTE=$G(ORDIALOG(RIEN,1)) Q:TROUTE'>0
"RTN","ORCDPSIV",143,0)
 I $$IVRTESCR(TROUTE)=1 Q
"RTN","ORCDPSIV",144,0)
 S ORDIALOG(RIEN,1)=""
"RTN","ORCDPSIV",145,0)
 W !!,"The route defined for this order is an invalid route."
"RTN","ORCDPSIV",146,0)
 W !,"You will need to define a new route for this order."
"RTN","ORCDPSIV",147,0)
 Q
"RTN","ORCDPSIV",148,0)
 ;
"RTN","ORCDPSIV",149,0)
ENRATE ; -- set display text, help based on IV TYPE
"RTN","ORCDPSIV",150,0)
 N X,MSG S X=$G(ORIVTYPE),MSG=""
"RTN","ORCDPSIV",151,0)
 S ORDIALOG(PROMPT,"A")=$S(X="I":"Infuse over time (min): ",1:"Infusion Rate (ml/hr): ")
"RTN","ORCDPSIV",152,0)
 S MSG="Enter the "_$S(X="I":"number of minutes over which to infuse this medication.",1:"infusion rate, as the number of ml/hr or Text@Number of Labels per day. ")
"RTN","ORCDPSIV",153,0)
 S ORDIALOG(PROMPT,"?")=MSG
"RTN","ORCDPSIV",154,0)
 I X="I" D
"RTN","ORCDPSIV",155,0)
 .N RATEI,RATEV,TIME,UNIT
"RTN","ORCDPSIV",156,0)
 .S RATEI=$P($G(ORDIALOG("B","INFUSION RATE")),U,2) Q:RATEI'>0
"RTN","ORCDPSIV",157,0)
 .S RATEV=$G(ORDIALOG(RATEI,1)) Q:'$L(RATEV)
"RTN","ORCDPSIV",158,0)
 .I RATEV'["INFUSE OVER" Q
"RTN","ORCDPSIV",159,0)
 .S TIME=$P(RATEV," ",3)
"RTN","ORCDPSIV",160,0)
 .S UNIT=$P(RATEV," ",4)
"RTN","ORCDPSIV",161,0)
 .I TIME["." Q
"RTN","ORCDPSIV",162,0)
 .I UNIT="Hours" S TIME=TIME*60
"RTN","ORCDPSIV",163,0)
 .S ORDIALOG(RATEI,1)=TIME
"RTN","ORCDPSIV",164,0)
 Q
"RTN","ORCDPSIV",165,0)
 ;
"RTN","ORCDPSIV",166,0)
INF ; -- input transform for INFUSION RATE
"RTN","ORCDPSIV",167,0)
 N ALPHA,CNT,EXIT,FAIL,LDEC,RDEC,TEMP
"RTN","ORCDPSIV",168,0)
 I $G(ORIVTYPE)="I" D  Q
"RTN","ORCDPSIV",169,0)
 .I X["." W !,"Infuse Over Time must be a whole number." K X Q
"RTN","ORCDPSIV",170,0)
 .I $L(X)>4 W !,"Infuse Over Time cannot exceed 4 characters for minutes." K X Q
"RTN","ORCDPSIV",171,0)
 .S FAIL=0
"RTN","ORCDPSIV",172,0)
 .F CNT=1:1:$L(X) D  I FAIL=1 Q
"RTN","ORCDPSIV",173,0)
 ..I ($A($E(X,CNT))<48)!($A($E(X,CNT))>58) S FAIL=1
"RTN","ORCDPSIV",174,0)
 .I FAIL=1 W !,"Infuse Over Time must be a whole number." K X Q
"RTN","ORCDPSIV",175,0)
 K:$L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) X I '$D(X) Q
"RTN","ORCDPSIV",176,0)
 I $G(ORIVTYPE)="C" D  Q
"RTN","ORCDPSIV",177,0)
 .S TEMP=$E(X,($L(X)-5),$L(X))
"RTN","ORCDPSIV",178,0)
 .I X["@",$$UP^XLFSTR(TEMP)=" ML/HR" Q
"RTN","ORCDPSIV",179,0)
 .S ALPHA=0
"RTN","ORCDPSIV",180,0)
 .I X'["@",X'["." D  I ALPHA=1 K X Q
"RTN","ORCDPSIV",181,0)
 ..F CNT=1:1:$L(X) D  I ALPHA=1 Q
"RTN","ORCDPSIV",182,0)
 ...I ($A($E(X,CNT))<48)!($A($E(X,CNT))>58) S ALPHA=1
"RTN","ORCDPSIV",183,0)
 .S EXIT=0
"RTN","ORCDPSIV",184,0)
 .I X[".",X'["@" D  I EXIT=1 K X Q
"RTN","ORCDPSIV",185,0)
 ..S LDEC=$P(X,"."),RDEC=$P(X,".",2)
"RTN","ORCDPSIV",186,0)
 ..I LDEC="" W !,"Infusion Rate required a leading numeric value." S EXIT=1
"RTN","ORCDPSIV",187,0)
 ..I $L(RDEC)>1 W !,"Infusion Rate cannot exceed one decimal place." S EXIT=1
"RTN","ORCDPSIV",188,0)
 ..S ALPHA=0
"RTN","ORCDPSIV",189,0)
 ..F CNT=1:1:$L(LDEC) D  I ALPHA=1 S EXIT=1 Q
"RTN","ORCDPSIV",190,0)
 ...I ($A($E(LDEC,CNT))<48)!($A($E(LDEC,CNT))>58) S ALPHA=1
"RTN","ORCDPSIV",191,0)
 ..I $L(RDEC)=0 Q
"RTN","ORCDPSIV",192,0)
 ..F CNT=1:1:$L(RDEC) D  I ALPHA=1 S EXIT=1 Q
"RTN","ORCDPSIV",193,0)
 ...I ($A($E(RDEC,CNT))<48)!($A($E(RDEC,CNT))>58) S ALPHA=1
"RTN","ORCDPSIV",194,0)
 .D ORINF^PSIVSP Q
"RTN","ORCDPSIV",195,0)
 ; -- assume #minutes for now
"RTN","ORCDPSIV",196,0)
 K:(X'=+X)!(X<1)!(X>999) X ;range?
"RTN","ORCDPSIV",197,0)
 Q
"RTN","ORCDPSIV",198,0)
 ;
"RTN","ORCDPSIV",199,0)
VALIDAYS(X) ; -- Validate IV duration
"RTN","ORCDPSIV",200,0)
 N UNITS,X1,X2,Y,I
"RTN","ORCDPSIV",201,0)
 I X'?1.N." "1.A Q 0
"RTN","ORCDPSIV",202,0)
 S UNITS="^MIN^HOURS^DAYS^M^H^D^",(X1,X2)=""
"RTN","ORCDPSIV",203,0)
 F I=1:1:$L(X) S Y=$E(X,I) S:Y?1N X1=X1_Y S:Y?1A X2=X2_$$UP^XLFSTR(Y)
"RTN","ORCDPSIV",204,0)
 I 'X1 Q 0
"RTN","ORCDPSIV",205,0)
 I UNITS'[(U_X2_U) Q 0
"RTN","ORCDPSIV",206,0)
 Q 1
"RTN","ORCDPSIV",207,0)
 ;
"RTN","ORCDPSIV",208,0)
VALDURA(X) ;-- Validate IV duration/limitation
"RTN","ORCDPSIV",209,0)
 K:$L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) X I '$D(X) Q
"RTN","ORCDPSIV",210,0)
 ;
"RTN","ORCDPSIV",211,0)
IVPSI ;INPUT-TRANSFORM
"RTN","ORCDPSIV",212,0)
 I $L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) S X="" Q
"RTN","ORCDPSIV",213,0)
 I $L(X)>1,X[" " W !,"Spaces are not allow in the duration." K X Q
"RTN","ORCDPSIV",214,0)
 I $E(X)=0 W !,!,"Duration cannot start with a zero." K X Q
"RTN","ORCDPSIV",215,0)
 I X["." W !,!,"Invalid duration or total volume.",!,"Duration has to be integer value!" S X="" Q
"RTN","ORCDPSIV",216,0)
 S X=$$UP^XLFSTR(X)
"RTN","ORCDPSIV",217,0)
 I X["DOSES" D  Q
"RTN","ORCDPSIV",218,0)
 .I $G(ORIVTYPE)'="I" K X W !,"Continuous IV Orders cannot have DOSES as a duration." Q
"RTN","ORCDPSIV",219,0)
 .I +$P(X,"DOSES")<1,+$P(X,"DOSES")>200000 W !,"Invalid number of Doses.",! K X Q
"RTN","ORCDPSIV",220,0)
 I (X'?.N1.2A),(X'?.N1".".N1.2A) W !,!,"Invalid duration or total volume.",! S X="" Q
"RTN","ORCDPSIV",221,0)
 I (X?.N1A) D
"RTN","ORCDPSIV",222,0)
 . I (X["L")!(X["H")!(X["D") Q
"RTN","ORCDPSIV",223,0)
 . E  W !,!,"Invalid duration or total volume.",! S X="" Q
"RTN","ORCDPSIV",224,0)
 I (X?.N1".".N1A) D
"RTN","ORCDPSIV",225,0)
 . I X["L" Q
"RTN","ORCDPSIV",226,0)
 . E  W !,!,"Invalid duration or total volume.",!,"Duration has to be integer value!",! S X="" Q
"RTN","ORCDPSIV",227,0)
 I (X?.N2A)!(X?.N1".".N2A) D
"RTN","ORCDPSIV",228,0)
 . I (X["ML")!(X["CC") Q
"RTN","ORCDPSIV",229,0)
 . E  W !,!,"Invalid duration or total volume",! S X="" Q
"RTN","ORCDPSIV",230,0)
 I X="" K X
"RTN","ORCDPSIV",231,0)
 Q
"RTN","ORCDPSIV",232,0)
 ;
"RTN","ORCDPSIV",233,0)
IVPSI1 ; ASK ON CONDITION
"RTN","ORCDPSIV",234,0)
 N DURI,DURV
"RTN","ORCDPSIV",235,0)
 I $G(OROTSCH)=1 Q
"RTN","ORCDPSIV",236,0)
 S DURI=$P($G(ORDIALOG("B","LIMITATION")),U,2)
"RTN","ORCDPSIV",237,0)
 I DURI>0 S DURV=$G(ORDIALOG(DURI,1))
"RTN","ORCDPSIV",238,0)
 I $L(DURV)>1,$E(DURV)="f",DURV["doses" D
"RTN","ORCDPSIV",239,0)
 .S TEMPX=$P(DURV," ",5)_"DOSES"
"RTN","ORCDPSIV",240,0)
 .I TEMPX'="",TEMPX'=DURV S ORDIALOG(DURI,1)=TEMPX
"RTN","ORCDPSIV",241,0)
 N INT,IVTYPE,ONETIME,TYPE,SCH,SCHNAME
"RTN","ORCDPSIV",242,0)
 I $G(ORIVTYPE)'="I" D  G IVPS1X
"RTN","ORCDPSIV",243,0)
 .W !,!,"Enter the length of administrative time or total volume for IV fluid order followed by ML or CC for milliliters, L for liters, D for days, H for hours to set limitation."
"RTN","ORCDPSIV",244,0)
 .W !,"(Examples: 1500ML, 1000CC, 1L, 3D, or 72H)",!
"RTN","ORCDPSIV",245,0)
 W !,"This field is optional a value does not need to be entered."
"RTN","ORCDPSIV",246,0)
 W !,!,"Enter the length of administrative time or total volume for IV fluid order followed by ML or CC for milliliters, L for liters, D for days, H for hours or DOSES to set limitation."
"RTN","ORCDPSIV",247,0)
 W !,"(Examples: 1500ML, 1000CC, 1L, 3D, 72H, or 10DOSES)",!
"RTN","ORCDPSIV",248,0)
IVPS1X ;
"RTN","ORCDPSIV",249,0)
 W !,"This field is optional a value does not need to be entered."
"RTN","ORCDPSIV",250,0)
 I 1
"RTN","ORCDPSIV",251,0)
 Q
"RTN","ORCMEDT0")
0^39^B17670670
"RTN","ORCMEDT0",1,0)
ORCMEDT0 ;SLC/MKB-Dialog Utilities ;08/06/2007
"RTN","ORCMEDT0",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**46,60,190,215,243,296**;Dec 17, 1997;Build 19
"RTN","ORCMEDT0",3,0)
DIALOG(TYPE) ; -- Get Dialog file entry
"RTN","ORCMEDT0",4,0)
 N X,Y,Z,D,DIC,DIE,DIK,DA,DR,DLAYGO,ORPKG,ORDLG,ORIT,OROI,I,IDX
"RTN","ORCMEDT0",5,0)
 S ORPKG="ORDER ENTRY/RESULTS REPORTING",DIC="^ORD(101.41,",DIC(0)="AEQLZ"
"RTN","ORCMEDT0",6,0)
 S DIC("S")="I $P(^(0),U,4)="""_TYPE_"""",DLAYGO=101.41
"RTN","ORCMEDT0",7,0)
 S DIC("A")="Select "_$S(TYPE="Q":"QUICK ORDER",TYPE="O":"ORDER SET",TYPE="A":"ACTION",1:"ORDER DIALOG")_" NAME: "
"RTN","ORCMEDT0",8,0)
 S DIC("DR")="4///"_TYPE_$S(TYPE="D":";7///^S X=ORPKG",1:"")
"RTN","ORCMEDT0",9,0)
D0 S D="AB" D IX^DIC I Y'>0 S ORDLG="^" G DQ
"RTN","ORCMEDT0",10,0)
 S ORDLG=+Y,ORDG=$P(Y(0),U,5) G:'$P(Y,U,3) DQ ; not a new entry
"RTN","ORCMEDT0",11,0)
 I $O(^ORD(101.41,"AB",$P(Y,U,2),0))'=+Y W $C(7),!,"Another entry already exists by this name!",! D DEL(+Y) G D0
"RTN","ORCMEDT0",12,0)
 I TYPE="D" D  G:ORDLG="^" DQ ;new dialog
"RTN","ORCMEDT0",13,0)
 . S DA=ORDLG,DR="5R",DIE=DIC,ORIT=$P(Y,U,2) D ^DIE
"RTN","ORCMEDT0",14,0)
 . S ORDG=+$P($G(^ORD(101.41,ORDLG,0)),U,5)
"RTN","ORCMEDT0",15,0)
 . I 'ORDG W $C(7),!,"Deleting <"_ORIT_"> ..." S DA=ORDLG,DIK=DIC D ^DIK S ORDLG="^" Q
"RTN","ORCMEDT0",16,0)
 . S ORIT=$$OI^ORCMEDT3(+ORDG) S:ORIT="^" ORDLG="^"
"RTN","ORCMEDT0",17,0)
 I TYPE="Q" D  G DQ ;new quick order
"RTN","ORCMEDT0",18,0)
 . S DIC="^ORD(100.98,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U,4)"
"RTN","ORCMEDT0",19,0)
 . S DIC("A")="TYPE OF QUICK ORDER: " D ^DIC
"RTN","ORCMEDT0",20,0)
 . I Y>0 S ORDG=+Y,$P(^ORD(101.41,ORDLG,0),U,5)=+Y Q
"RTN","ORCMEDT0",21,0)
 . W !,$P(^ORD(101.41,ORDLG,0),U)_" quick order dialog DELETED!",!
"RTN","ORCMEDT0",22,0)
 . S DA=ORDLG,DIK="^ORD(101.41,",ORDLG="^" D ^DIK
"RTN","ORCMEDT0",23,0)
D1 I $$COPY^ORCMEDIT(TYPE) D  ;copy an existing dialog?
"RTN","ORCMEDT0",24,0)
 . K DLAYGO,DIC("B") S DIC(0)="AEQZ",DIC("A")="Select "_$S(TYPE="Q":"QUICK ORDER",TYPE="O":"ORDER SET",1:"ORDER DIALOG")_" TO COPY: "
"RTN","ORCMEDT0",25,0)
 . D ^DIC Q:Y'>0  W !,"Copying ..."
"RTN","ORCMEDT0",26,0)
 . F I=2,6,8,9 S $P(^ORD(101.41,ORDLG,0),U,I)=$P(Y(0),U,I)
"RTN","ORCMEDT0",27,0)
 . S:TYPE'="D" $P(^ORD(101.41,ORDLG,0),U,5)=$P(Y(0),U,5) ;skip DG if Dlg
"RTN","ORCMEDT0",28,0)
 . S:$L($P(Y(0),U,2)) ^ORD(101.41,"C",$$UP^XLFSTR($P(Y(0),U,2)),ORDLG)="" ;disp text
"RTN","ORCMEDT0",29,0)
 . F I=2,3,3.1,4,5,6,7,9,10 I $D(^ORD(101.41,+Y,I)) M ^ORD(101.41,ORDLG,I)=^ORD(101.41,+Y,I)
"RTN","ORCMEDT0",30,0)
 . I $P(Y(0),U,7) S DA=ORDLG,DIE=DIC,DR="7///"_$P(Y(0),U,7) D ^DIE
"RTN","ORCMEDT0",31,0)
 . K DA S DA(1)=ORDLG,DIK="^ORD(101.41,"_ORDLG_",10,",DIK(1)="2^AD" D ENALL^DIK
"RTN","ORCMEDT0",32,0)
D2 I TYPE="D",$G(ORIT) D  ;stuff in default OI
"RTN","ORCMEDT0",33,0)
 . S DA=ORDLG,DR="2///"_$P(ORIT,U,2),DIE="^ORD(101.41," D ^DIE
"RTN","ORCMEDT0",34,0)
 . S OROI=$$PTR^ORCD("OR GTX ORDERABLE ITEM"),DA=$O(^ORD(101.41,ORDLG,10,"D",OROI,0)) I 'DA D  Q:'DA  ;create OI prompt
"RTN","ORCMEDT0",35,0)
 .. S X=+$O(^ORD(101.41,ORDLG,10,"B",0)),X=$S(X=0:1,1:X-.1) ;get Seq#
"RTN","ORCMEDT0",36,0)
 .. K DA,DIC S DIC="^ORD(101.41,"_ORDLG_",10,",DIC(0)="L",DA(1)=ORDLG
"RTN","ORCMEDT0",37,0)
 .. D ^DIC Q:Y'>0  S DA=+Y ;S DIC("P")=$P(^DD(101.41,10,0),U,2)
"RTN","ORCMEDT0",38,0)
 .. S Z=+$O(^ORD(101.41,ORDLG,10,"ATXT",0)),Z=$S(Z=0:1,1:Z-.1) ;TxtSeq#
"RTN","ORCMEDT0",39,0)
 .. S ^ORD(101.41,ORDLG,10,DA,0)=X_U_OROI_"^^Order: ^^1",^(2)=Z
"RTN","ORCMEDT0",40,0)
 .. S ^ORD(101.41,"AD",OROI,ORDLG,DA)="",^ORD(101.41,ORDLG,10,"B",X,DA)="",^ORD(101.41,ORDLG,10,"D",OROI,DA)="",^ORD(101.41,ORDLG,10,"ATXT",X,DA)=""
"RTN","ORCMEDT0",41,0)
 . S IDX="S."_$P($G(^ORD(100.98,+ORDG,0)),U,3)
"RTN","ORCMEDT0",42,0)
 . S $P(^ORD(101.41,ORDLG,10,DA,0),U,8)=1,$P(^(0),U,10)=IDX,^(3)="I 0 ;uneditable",^(7)="S Y="_+ORIT
"RTN","ORCMEDT0",43,0)
DQ Q ORDLG
"RTN","ORCMEDT0",44,0)
 ;
"RTN","ORCMEDT0",45,0)
DEL(DA) ; -- delete bad entry in Order Dialog file
"RTN","ORCMEDT0",46,0)
 N DIK S DIK="^ORD(101.41," D:$G(DA) ^DIK
"RTN","ORCMEDT0",47,0)
 Q
"RTN","ORCMEDT0",48,0)
 ;
"RTN","ORCMEDT0",49,0)
SAVE ; -- Save ORDG, responses in ORDIALOG to dialog ORQDLG
"RTN","ORCMEDT0",50,0)
 N PROMPT,CNT,ITM,TYPE,INST,VALUE,INP,UD K ^ORD(101.41,ORQDLG,6)
"RTN","ORCMEDT0",51,0)
 S (PROMPT,CNT)=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCMEDT0",52,0)
 . S ITM=ORDIALOG(PROMPT),TYPE=$E(ORDIALOG(PROMPT,0))
"RTN","ORCMEDT0",53,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCMEDT0",54,0)
 . . S VALUE=$G(ORDIALOG(PROMPT,INST)),CNT=CNT+1
"RTN","ORCMEDT0",55,0)
 . . S ^ORD(101.41,ORQDLG,6,CNT,0)=+ITM_U_PROMPT_U_INST
"RTN","ORCMEDT0",56,0)
 . . S:TYPE'="W" ^ORD(101.41,ORQDLG,6,CNT,1)=VALUE
"RTN","ORCMEDT0",57,0)
 . . M:TYPE="W" ^ORD(101.41,ORQDLG,6,CNT,2)=@VALUE
"RTN","ORCMEDT0",58,0)
 . . S ^ORD(101.41,ORQDLG,6,"D",PROMPT,CNT)=""
"RTN","ORCMEDT0",59,0)
 S ^ORD(101.41,ORQDLG,6,0)="^101.416^"_CNT_U_CNT
"RTN","ORCMEDT0",60,0)
 S INP=+$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",""))
"RTN","ORCMEDT0",61,0)
 S UD=+$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS",""))
"RTN","ORCMEDT0",62,0)
 I +$G(ORDG)>0,ORDG=INP,UD>0 S ORDG=UD
"RTN","ORCMEDT0",63,0)
 S:$G(ORDG) $P(^ORD(101.41,ORQDLG,0),U,5)=+ORDG
"RTN","ORCMEDT0",64,0)
 Q
"RTN","ORCMEDT0",65,0)
 ;
"RTN","ORCMEDT0",66,0)
ITEM(Z) ; -- Select new item to add
"RTN","ORCMEDT0",67,0)
 N X,Y,DIC,ORDDF,ORERR,I
"RTN","ORCMEDT0",68,0)
 S DIC=101.41,DIC(0)="AEQM",DIC("A")="ITEM: "
"RTN","ORCMEDT0",69,0)
 I $G(Z) S Z=$P($G(^ORD(101.41,+Z,0)),U) S:$L(Z) DIC("B")=Z
"RTN","ORCMEDT0",70,0)
 S DIC("S")="I $P(^(0),U,4)'=""P"""
"RTN","ORCMEDT0",71,0)
IT1 D ^DIC I Y'>0 S Y=$S($D(DUOUT)!$D(DTOUT):"^",1:"") Q Y
"RTN","ORCMEDT0",72,0)
 D RECURSV^ORCMEDT5(+Y,+ORMENU,.ORERR) I $D(ORERR) D  G IT1
"RTN","ORCMEDT0",73,0)
 . W $C(7),!!,"If an item is already included on this menu, it may not be added!"
"RTN","ORCMEDT0",74,0)
 . W !,ORERR S I=0 F  S I=$O(ORERR(I)) Q:I'>0  W !?18," =>"_ORERR(I)
"RTN","ORCMEDT0",75,0)
 Q +Y
"RTN","ORCMEDT1")
0^43^B45036674
"RTN","ORCMEDT1",1,0)
ORCMEDT1 ;SLC/MKB-QO,Set editor ;02/25/08
"RTN","ORCMEDT1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**8,46,57,95,110,245,243,296**;Dec 17, 1997;Build 19
"RTN","ORCMEDT1",3,0)
OI ; -- Enter/edit generic orderable items
"RTN","ORCMEDT1",4,0)
 N X,Y,DA,DR,DIE,DIC,ID,DLAYGO,ORDG
"RTN","ORCMEDT1",5,0)
 F  S ORDG=$$DGRP Q:ORDG'>0  D  W !!
"RTN","ORCMEDT1",6,0)
 . F  S D="S."_$P(ORDG,U,4) D   Q:Y'>0  S DA=+Y,ID=DA_";99ORD",DR=".01"_$S($P(Y,U,3):";2///^S X=ID;5////"_+ORDG,1:"") D ^DIE W ! ;110
"RTN","ORCMEDT1",7,0)
 .. S DIC="^ORD(101.43,",DIC(0)="AEQL",DLAYGO=101.43,DIE=DIC D IX^DIC ;110
"RTN","ORCMEDT1",8,0)
 Q
"RTN","ORCMEDT1",9,0)
 ;
"RTN","ORCMEDT1",10,0)
DGRP() ; -- Returns sub-display group of Nursing or Other for generic OI
"RTN","ORCMEDT1",11,0)
 N X,Y,DIC,ORGRP,ORDG,ORI
"RTN","ORCMEDT1",12,0)
 F ORI="NURS","OTHER" S ORDG=+$O(^ORD(100.98,"B",ORI,0)) D DG^ORCHANG1(ORDG,"BILD",.ORGRP)
"RTN","ORCMEDT1",13,0)
 S DIC="^ORD(100.98,",DIC(0)="AEQ",DIC("S")="I $D(ORGRP(+Y))"
"RTN","ORCMEDT1",14,0)
 S DIC("A")="Type of Orderable: " D ^DIC
"RTN","ORCMEDT1",15,0)
 S:Y>0 Y=+Y_U_$G(^ORD(100.98,+Y,0))
"RTN","ORCMEDT1",16,0)
 Q Y
"RTN","ORCMEDT1",17,0)
 ;
"RTN","ORCMEDT1",18,0)
QUICK ; -- Enter/edit quick order dialogs
"RTN","ORCMEDT1",19,0)
 N ORQDLG,ORDG
"RTN","ORCMEDT1",20,0)
 F  S ORQDLG=$$DIALOG^ORCMEDT0("Q") Q:ORQDLG="^"  D QCK0(ORQDLG) W !
"RTN","ORCMEDT1",21,0)
 Q
"RTN","ORCMEDT1",22,0)
QCK0(ORQDLG) ; -- edit quick order ORQDLG
"RTN","ORCMEDT1",23,0)
 N ORDIALOG,DA,DR,DIE,DIDEL,ORQUIT,ORVP,ORL,ACTION,FIRST,ORTYPE,ORNAME,X,Y,BEFORCRC,AFTERCRC
"RTN","ORCMEDT1",24,0)
 Q:'$G(ORQDLG)  S DA=ORQDLG,(ORVP,ORL)=0,FIRST=1,ORTYPE="Z"
"RTN","ORCMEDT1",25,0)
 S ORNAME=$$NAME^ORCMEDT4(ORQDLG) Q:(ORNAME="@")!(ORNAME="^")  ;deleted,^
"RTN","ORCMEDT1",26,0)
 S BEFORCRC=$$RAWCRC^ORCMEDT8(ORQDLG)
"RTN","ORCMEDT1",27,0)
 S DR=".01///^S X=ORNAME;2;8;20"_$S(DUZ(0)="@":";30",1:""),DIE="^ORD(101.41,"
"RTN","ORCMEDT1",28,0)
 D ^DIE G:$D(Y)!$D(DTOUT) QR  D GETQDLG^ORCD(ORQDLG) G:'$G(ORDIALOG) QR
"RTN","ORCMEDT1",29,0)
 I '$P($G(^ORD(101.41,ORQDLG,0)),U,7) S X=+$P($G(^ORD(101.41,+ORDIALOG,0)),U,7) S:X $P(^ORD(101.41,ORQDLG,0),U,7)=X,^ORD(101.41,"APKG",X,ORQDLG)=""
"RTN","ORCMEDT1",30,0)
 W ! I $D(^ORD(101.41,+ORDIALOG,3.1)) X ^(3.1) G:$G(ORQUIT) QQ
"RTN","ORCMEDT1",31,0)
Q1 D DIALOG^ORCDLG G:$G(ORQUIT) QQ
"RTN","ORCMEDT1",32,0)
 D DISPLAY^ORCDLG S ACTION=$$OK G:ACTION="^" QQ
"RTN","ORCMEDT1",33,0)
 D:ACTION="P" SAVE^ORCMEDT0,AUTO(ORQDLG) I ACTION="E" S FIRST=0 G Q1 ;fall thru if "C"
"RTN","ORCMEDT1",34,0)
QQ X:$D(^ORD(101.41,+ORDIALOG,4)) ^(4)
"RTN","ORCMEDT1",35,0)
QR S AFTERCRC=$$RAWCRC^ORCMEDT8(ORQDLG)
"RTN","ORCMEDT1",36,0)
 I BEFORCRC'=AFTERCRC D UPDQNAME^ORCMEDT8(ORQDLG) ; Rename personal quick order if modified
"RTN","ORCMEDT1",37,0)
 Q
"RTN","ORCMEDT1",38,0)
 ;
"RTN","ORCMEDT1",39,0)
OK() ; -- Ready to save?
"RTN","ORCMEDT1",40,0)
 N X,Y,DIR S DIR(0)="SAM^P:PLACE;E:EDIT;C:CANCEL;",DIR("B")="PLACE"
"RTN","ORCMEDT1",41,0)
 S DIR("A")="(P)lace, (E)dit, or (C)ancel this quick order? "
"RTN","ORCMEDT1",42,0)
 S DIR("?")="Enter P to save this quick order, or E to change any of the displayed values; enter C to quit without saving these responses"
"RTN","ORCMEDT1",43,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","ORCMEDT1",44,0)
 Q Y
"RTN","ORCMEDT1",45,0)
 ;
"RTN","ORCMEDT1",46,0)
SAVE G SAVE^ORCMEDT0
"RTN","ORCMEDT1",47,0)
 ;
"RTN","ORCMEDT1",48,0)
AUTO(DLG) ; -- set AutoAccept flag for GUI
"RTN","ORCMEDT1",49,0)
 N X,Y,DIR
"RTN","ORCMEDT1",50,0)
 I $$VBQO^ORWDXM4(+DLG)=0 S $P(^ORD(101.41,+DLG,5),U,8)="" Q
"RTN","ORCMEDT1",51,0)
 I $$VALQO^ORWDXM3(+DLG)=0 S $P(^ORD(101.41,+DLG,5),U,8)="" Q
"RTN","ORCMEDT1",52,0)
 S DIR(0)="YA",DIR("A")="Auto-accept this order? "
"RTN","ORCMEDT1",53,0)
 S DIR("B")=$S($P($G(^ORD(101.41,+DLG,5)),U,8):"YES",1:"NO")
"RTN","ORCMEDT1",54,0)
 S DIR("?")="Enter YES if this order can be placed simply by selecting it, or NO if the dialog should be presented to complete the order."
"RTN","ORCMEDT1",55,0)
 D ^DIR S:Y=1!(Y=0) $P(^ORD(101.41,+DLG,5),U,8)=$S(Y:1,1:"")
"RTN","ORCMEDT1",56,0)
 I $P($G(^ORD(101.41,+DLG,0)),"^",8)'=1&($P($G(^(0)),"^",9)=2)&(Y) D EXPLAIN S $P(^ORD(101.41,+DLG,5),"^",8)="" ;Reset auto-accept to no if explanation required. 
"RTN","ORCMEDT1",57,0)
 Q
"RTN","ORCMEDT1",58,0)
 ;
"RTN","ORCMEDT1",59,0)
SET ; -- Order Sets
"RTN","ORCMEDT1",60,0)
 N ORSET,ORDG
"RTN","ORCMEDT1",61,0)
 F  S ORSET=$$DIALOG^ORCMEDT0("O") Q:ORSET="^"  D SET0(ORSET) W !
"RTN","ORCMEDT1",62,0)
 Q
"RTN","ORCMEDT1",63,0)
SET0(ORSET) ; -- edit order set ORSET
"RTN","ORCMEDT1",64,0)
 N DA,DR,DIE,DIC,DIK,X,Y,SEQ,ITM,LCNT,QUIT,ORNAME Q:'$G(ORSET)
"RTN","ORCMEDT1",65,0)
 S ORNAME=$$NAME^ORCMEDT4(ORSET) Q:(ORNAME="@")!(ORNAME="^")  ;deleted,^
"RTN","ORCMEDT1",66,0)
 S DR=".01///^S X=ORNAME;2;20"_$S(DUZ(0)="@":";30;40",1:""),DA=ORSET
"RTN","ORCMEDT1",67,0)
 S DIE="^ORD(101.41," D ^DIE Q:$D(Y)  Q:'$G(DA)
"RTN","ORCMEDT1",68,0)
S1 I $O(^ORD(101.41,+ORSET,10,0)) D  Q:QUIT  ;Show existing components
"RTN","ORCMEDT1",69,0)
 . W !,"ORDER SET COMPONENTS:" S (SEQ,LCNT,QUIT)=0
"RTN","ORCMEDT1",70,0)
 . S DIK="^ORD(101.41,"_+ORSET_",10,",DA(1)=+ORSET ;just in case
"RTN","ORCMEDT1",71,0)
 . F  S SEQ=$O(^ORD(101.41,+ORSET,10,"B",SEQ)) Q:SEQ'>0  D
"RTN","ORCMEDT1",72,0)
 . . S DA=0 F  S DA=$O(^ORD(101.41,+ORSET,10,"B",SEQ,DA)) Q:DA'>0  D
"RTN","ORCMEDT1",73,0)
 . . . S ITM=$P($G(^ORD(101.41,+ORSET,10,DA,0)),U,2) I ITM'>0 D ^DIK Q
"RTN","ORCMEDT1",74,0)
 . . . S LCNT=LCNT+1 I LCNT>(IOSL-3) R !,"Press <return> to continue ...",X:DTIME S LCNT=0 I X["^" S QUIT=1 Q
"RTN","ORCMEDT1",75,0)
 . . . W !?3,SEQ,?10,$P(^ORD(101.41,ITM,0),U)
"RTN","ORCMEDT1",76,0)
S2 S QUIT=0 F  D  Q:QUIT  W ! ;Enter/edit components
"RTN","ORCMEDT1",77,0)
 . S DIC="^ORD(101.41,"_+ORSET_",10,",DIC(0)="AEQLM",D="B^D"
"RTN","ORCMEDT1",78,0)
 . S DIC("A")="Select COMPONENT SEQUENCE#: ",DIC("P")=$P(^DD(101.41,10,0),U,2)
"RTN","ORCMEDT1",79,0)
 . K DA S DA(1)=+ORSET D MIX^DIC1 I Y'>0 S QUIT=1 Q
"RTN","ORCMEDT1",80,0)
 . S DA=+Y,DIE=DIC,DR=".01;2R" D ^DIE Q:'$G(DA)
"RTN","ORCMEDT1",81,0)
 . I $D(^ORD(101.41,+ORSET,10,DA,0)),'$P(^(0),U,2) S DIK=DIE D ^DIK
"RTN","ORCMEDT1",82,0)
 Q
"RTN","ORCMEDT1",83,0)
 ;
"RTN","ORCMEDT1",84,0)
PROTOCOL ; -- Convert additional protocols to dialogs
"RTN","ORCMEDT1",85,0)
 N X,Y,DIC,ORERR
"RTN","ORCMEDT1",86,0)
 F  S DIC="^ORD(101,",DIC(0)="AEQM" D ^DIC Q:Y'>0  D  W !
"RTN","ORCMEDT1",87,0)
 . S ORP=+Y,ORM=$$MENU Q:ORM="^"  ; What about "^^"-jumping? (ORWARD)
"RTN","ORCMEDT1",88,0)
 . W !,"Converting ..." D ONE(ORP,ORM,.ORERR) I '$G(ORERR) W " done." Q
"RTN","ORCMEDT1",89,0)
 . W " unable to convert.",!,">> "_$P(ORERR,U,2) K ORERR
"RTN","ORCMEDT1",90,0)
 Q
"RTN","ORCMEDT1",91,0)
ONE(PITEM,ORADD,ERROR) ; -- Convert single item protocol, add to menu(s)
"RTN","ORCMEDT1",92,0)
 N PMENU,DMENU,NAME,ORPOS,POS,XUTL,DA,DIK
"RTN","ORCMEDT1",93,0)
 I $D(^ORD(100.99,1,101.41,PITEM,0)) S DA=PITEM,DA(1)=1,DIK="^ORD(100.99,1,101.41," D ^DIK ; delete error entry
"RTN","ORCMEDT1",94,0)
 S NAME=$P($G(^ORD(101,PITEM,0)),U),DITEM=$$ITEM^ORCONVRT(PITEM)
"RTN","ORCMEDT1",95,0)
 I 'DITEM!$D(^ORD(100.99,1,101.41,PITEM,0)) S ERROR=$G(^(0)) Q
"RTN","ORCMEDT1",96,0)
 Q:'$G(ORADD)  ;to add, may enter here with PITEM & DITEM defined
"RTN","ORCMEDT1",97,0)
ADD S PMENU=0 F  S PMENU=$O(^ORD(101,"AD",PITEM,PMENU)) Q:PMENU'>0  D  W "."
"RTN","ORCMEDT1",98,0)
 . S DMENU=$O(^ORD(101.41,"AB",$P(^ORD(101,PMENU,0),U),0)) Q:'DMENU
"RTN","ORCMEDT1",99,0)
 . S ORPOS=$$FINDXUTL(PMENU,PITEM) Q:'ORPOS
"RTN","ORCMEDT1",100,0)
 . S XUTL=$G(^XUTL("XQORM",PMENU_";ORD(101,",ORPOS,0))
"RTN","ORCMEDT1",101,0)
 . S DA=$O(^ORD(101.41,DMENU,10,"B",ORPOS,0)) I DA Q:$P(^ORD(101.41,DMENU,10,DA,0),U,2)=DITEM  S POS=$O(^ORD(101.41,DMENU,10,"B",""),-1),ORPOS=($P(POS,".")+1)_".1",DA="" ; move to end, if collision
"RTN","ORCMEDT1",102,0)
 . S DA=$$NEXT^ORCONVRT(DMENU)
"RTN","ORCMEDT1",103,0)
 . S ^ORD(101.41,DMENU,10,DA,0)=ORPOS_U_DITEM_U_$P(XUTL,U,4)_U_$S($P(XUTL,U,3)'=$P(^ORD(101.41,DITEM,0),U,2):$P(XUTL,U,3),1:"")
"RTN","ORCMEDT1",104,0)
 . S ^ORD(101.41,DMENU,10,"B",ORPOS,DA)="",^ORD(101.41,DMENU,10,"D",DITEM,DA)=""
"RTN","ORCMEDT1",105,0)
 . S ^ORD(101.41,"AD",DITEM,DMENU,DA)="",^ORD(101.41,DMENU,99)=$H
"RTN","ORCMEDT1",106,0)
 Q
"RTN","ORCMEDT1",107,0)
 ;
"RTN","ORCMEDT1",108,0)
FINDXUTL(MENU,ITEM) ; -- Returns position of ITEM in MENU
"RTN","ORCMEDT1",109,0)
 N XQORM,POS
"RTN","ORCMEDT1",110,0)
 S XQORM=MENU_";ORD(101," D XREF^XQORM
"RTN","ORCMEDT1",111,0)
 S POS=0 F  S POS=$O(^XUTL("XQORM",XQORM,POS)) Q:POS'>0  I $P(^(POS,0),U,2)=ITEM Q
"RTN","ORCMEDT1",112,0)
 Q POS
"RTN","ORCMEDT1",113,0)
 ;
"RTN","ORCMEDT1",114,0)
MENU() ; -- Add converted item to menus?
"RTN","ORCMEDT1",115,0)
 N X,Y,DIR S DIR(0)="YA"
"RTN","ORCMEDT1",116,0)
 S DIR("A")="Add this item to the same menus again? ",DIR("B")="YES"
"RTN","ORCMEDT1",117,0)
 S DIR("?")="Enter YES to have this item placed on the same menus in the Order Dialog file as it was in the Protocol file"
"RTN","ORCMEDT1",118,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","ORCMEDT1",119,0)
 Q Y
"RTN","ORCMEDT1",120,0)
EXPLAIN ;Give reason why user can't set auto-accept to yes
"RTN","ORCMEDT1",121,0)
 W !!,"The combination of VERIFY set to NO and ASK FOR ANOTHER ORDER set to",!,"YES, DON'T ASK and AUTO-ACCEPT set to YES is not allowed."
"RTN","ORCMEDT1",122,0)
 W !!,"This combination of settings could cause CPRS to enter into an infinite loop",!,"creating the same order over and over.  If you wish to have"
"RTN","ORCMEDT1",123,0)
 W !,"AUTO-ACCEPT set to YES you must change one of the other two fields",!,"to a different value.",!!,"AUTO-ACCEPT is being set to NO for you."
"RTN","ORCMEDT1",124,0)
 Q
"RTN","ORCMEDT5")
0^40^B35418320
"RTN","ORCMEDT5",1,0)
ORCMEDT5 ;SLC/MKB-Misc menu utilities ;03:29 PM  12 Feb 1999
"RTN","ORCMEDT5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**8,46,296**;Dec 17, 1997;Build 19
"RTN","ORCMEDT5",3,0)
SEARCH ; -- Search/replace menu items
"RTN","ORCMEDT5",4,0)
 N ORDLG
"RTN","ORCMEDT5",5,0)
 F  S ORDLG=$$DIC Q:ORDLG'>0  D SR1(ORDLG) W !!
"RTN","ORCMEDT5",6,0)
 Q
"RTN","ORCMEDT5",7,0)
 ;
"RTN","ORCMEDT5",8,0)
SR1(ORX) ; -- list parents, get replacement
"RTN","ORCMEDT5",9,0)
 N DA,DR,DIE,DIK,I,J,ORDAD,ORY,ORNMBR,NUM,ORI,ORDAD,ORNM
"RTN","ORCMEDT5",10,0)
 I '$O(^ORD(101.41,"AD",+ORX,0)) W !,$P(ORX,U,2)_" has no menu items." Q
"RTN","ORCMEDT5",11,0)
 W @IOF,"Menu items of "_$P(ORX,U,2),!?4,"Name",?69,"Type",!,$$REPEAT^XLFSTR("-",79)
"RTN","ORCMEDT5",12,0)
 S (I,ORDAD)=0 F  S I=$O(^ORD(101.41,"AD",+ORX,I)) Q:I'>0  D
"RTN","ORCMEDT5",13,0)
 . S J=0 F  S J=$O(^ORD(101.41,"AD",+ORX,I,J)) Q:J'>0  D
"RTN","ORCMEDT5",14,0)
 . . S ORDAD=ORDAD+1,ORDAD(ORDAD)=I_U_J
"RTN","ORCMEDT5",15,0)
 . . W !,ORDAD,?4,$P(^ORD(101.41,I,0),U),?69,$$TYPE($P(^(0),U,4))
"RTN","ORCMEDT5",16,0)
 W !,$$REPEAT^XLFSTR("-",79)
"RTN","ORCMEDT5",17,0)
 S ORY=$$REPLWITH(ORX) Q:ORY="^"
"RTN","ORCMEDT5",18,0)
 D SELECT(ORY,ORDAD,.ORNMBR) Q:ORNMBR="^"
"RTN","ORCMEDT5",19,0)
 Q:'$$OK  W !!,$S(ORY="@":"Removing",1:"Replacing "_$P(ORX,U,2)_" with "_$P(ORY,U,2))_" in:"
"RTN","ORCMEDT5",20,0)
 F ORI=1:1:$L(ORNMBR,",") S NUM=$P(ORNMBR,",",ORI) I NUM D
"RTN","ORCMEDT5",21,0)
 . S DA(1)=+ORDAD(NUM),DA=$P(ORDAD(NUM),U,2),DIE="^ORD(101.41,"_DA(1)_",10,"
"RTN","ORCMEDT5",22,0)
 . S ORDAD=DA(1),ORNM=$P(^ORD(101.41,ORDAD,0),U) W !?3,ORNM_" ..."
"RTN","ORCMEDT5",23,0)
 . I '$$VALID(ORY,ORDAD,.ORERR) D  Q
"RTN","ORCMEDT5",24,0)
 . . W "not "_$S(ORY="@":"removed.",1:"changed."),!?3,">> "_$G(ORERR)
"RTN","ORCMEDT5",25,0)
 . . S I=0 F  S I=$O(ORERR(I)) Q:I'>0  W !?25,"=>"_ORERR(I)
"RTN","ORCMEDT5",26,0)
 . I ORY="@" S DIK=DIE D ^DIK W "done." Q
"RTN","ORCMEDT5",27,0)
 . S DR="2////"_+ORY D ^DIE W $S($P(^ORD(101.41,DA(1),10,DA,0),U,2)=+ORY:"done.",1:"error - not replaced.")
"RTN","ORCMEDT5",28,0)
 Q
"RTN","ORCMEDT5",29,0)
 ;
"RTN","ORCMEDT5",30,0)
TYPE(X) ; -- Returns name of dialog type
"RTN","ORCMEDT5",31,0)
 N Y S Y=$S(X="P":"prompt",X="D":"dialog",X="Q":"quick order",X="O":"order set",X="M":"menu",X="A":"action",1:"")
"RTN","ORCMEDT5",32,0)
 Q Y
"RTN","ORCMEDT5",33,0)
 ;
"RTN","ORCMEDT5",34,0)
DIC() ; -- ^DIC on Order Dialog file
"RTN","ORCMEDT5",35,0)
 N X,Y,DIC
"RTN","ORCMEDT5",36,0)
 S DIC=101.41,DIC(0)="AEQM",DIC("A")="Search for: "
"RTN","ORCMEDT5",37,0)
 S DIC("?")="Enter the name of the dialog component you wish to search for."
"RTN","ORCMEDT5",38,0)
 D ^DIC
"RTN","ORCMEDT5",39,0)
 Q Y
"RTN","ORCMEDT5",40,0)
 ;
"RTN","ORCMEDT5",41,0)
SELECT(ORY,MAX,Y) ; -- Select which Dlgs to replace items
"RTN","ORCMEDT5",42,0)
 N X,DIR
"RTN","ORCMEDT5",43,0)
 S DIR(0)="LA^1:"_MAX,DIR("A")=$S(ORY="@":"Remove in: ",1:"Replace in: "),DIR("B")=$S(MAX>1:"1-"_MAX,1:"1")
"RTN","ORCMEDT5",44,0)
 ; S DIR("?")
"RTN","ORCMEDT5",45,0)
 D ^DIR S:$D(DTOUT)!(X["^") Y="^"
"RTN","ORCMEDT5",46,0)
 Q
"RTN","ORCMEDT5",47,0)
 ;
"RTN","ORCMEDT5",48,0)
OK() ; -- Are you ready?
"RTN","ORCMEDT5",49,0)
 N X,Y,DIR
"RTN","ORCMEDT5",50,0)
 S DIR(0)="YA",DIR("A")="Are you ready? ",DIR("B")="NO"
"RTN","ORCMEDT5",51,0)
 W ! D ^DIR
"RTN","ORCMEDT5",52,0)
 Q +Y
"RTN","ORCMEDT5",53,0)
 ;
"RTN","ORCMEDT5",54,0)
REPLWITH(ORIT) ; -- Remove item, or select replacement
"RTN","ORCMEDT5",55,0)
 N X,Y,DIR,DIC
"RTN","ORCMEDT5",56,0)
 S DIR(0)="FAO^1:63",DIR("A")="Replace "_$P(ORIT,U,2)_" with: "
"RTN","ORCMEDT5",57,0)
 S DIR("?")="Enter the name of the item you wish to replace this one with, or @ to remove this item; to quit without changing anything, press <return>."
"RTN","ORCMEDT5",58,0)
R1 D ^DIR I X="@" Q "@"
"RTN","ORCMEDT5",59,0)
 I $D(DTOUT)!("^"[X) Q "^"
"RTN","ORCMEDT5",60,0)
 S DIC=101.41,DIC(0)="EQM" D ^DIC I Y'>0 G R1
"RTN","ORCMEDT5",61,0)
 Q Y
"RTN","ORCMEDT5",62,0)
 ;
"RTN","ORCMEDT5",63,0)
VALID(ITM,DAD,ERR) ; -- Ck if ITM may be placed on DAD
"RTN","ORCMEDT5",64,0)
 N DTYPE,ITYPE,Y S Y=0
"RTN","ORCMEDT5",65,0)
 S DTYPE=$P(^ORD(101.41,DAD,0),U,4) I DTYPE="D",$$NMSP^ORCD($P(^(0),U,7))'="OR" S ERR="Only generic ordering dialogs are editable." G VQ
"RTN","ORCMEDT5",66,0)
 I ITM="@" S Y=1 G VQ ; ok to delete
"RTN","ORCMEDT5",67,0)
 S ITYPE=$P(^ORD(101.41,+ITM,0),U,4)
"RTN","ORCMEDT5",68,0)
 I ITYPE="P",DTYPE'="D" S ERR="A prompt may not be added to a "_$$TYPE(DTYPE)_"." G VQ
"RTN","ORCMEDT5",69,0)
 I ITYPE="A","DOM"'[DTYPE S ERR="An action may not be added to a "_$$TYPE(DTYPE)_"." G VQ
"RTN","ORCMEDT5",70,0)
 I "DQOM"[ITYPE,"OM"'[DTYPE S ERR="A "_$$TYPE(ITYPE)_" may not be added to a "_$$TYPE(DTYPE)_"." G VQ
"RTN","ORCMEDT5",71,0)
 D RECURSV(+ITM,DAD,.ERR) I $D(ERR) S Y=0 G VQ
"RTN","ORCMEDT5",72,0)
 S Y=1 ; ok
"RTN","ORCMEDT5",73,0)
VQ Q Y
"RTN","ORCMEDT5",74,0)
 ;
"RTN","ORCMEDT5",75,0)
RECURSV(ITEM,MENU,MSG) ; -- Return 1 or 0, if recursive reference to ITEM
"RTN","ORCMEDT5",76,0)
 N STACK,CNT S STACK=0,CNT=0
"RTN","ORCMEDT5",77,0)
 K MSG D CHKPAR(MENU)
"RTN","ORCMEDT5",78,0)
 Q
"RTN","ORCMEDT5",79,0)
CHKPAR(MENU) ; follow tree to check parents
"RTN","ORCMEDT5",80,0)
 N PMENU,I
"RTN","ORCMEDT5",81,0)
 S STACK=STACK+1,STACK(STACK)=MENU,STACK("B",MENU)=STACK,PMENU=0
"RTN","ORCMEDT5",82,0)
 F  S PMENU=$O(^ORD(101.41,"AD",MENU,PMENU)) Q:'PMENU  D  Q:$D(MSG)
"RTN","ORCMEDT5",83,0)
 . I PMENU=ITEM D  Q
"RTN","ORCMEDT5",84,0)
 . . S MSG="Recursive Reference: "_$P(^ORD(101.41,ITEM,0),U)
"RTN","ORCMEDT5",85,0)
 . . F I=STACK:-1:1 S CNT=CNT+1,MSG(CNT)=$P(^ORD(101.41,STACK(I),0),U)
"RTN","ORCMEDT5",86,0)
 . I $D(STACK("B",PMENU)) Q
"RTN","ORCMEDT5",87,0)
 . D CHKPAR(PMENU)
"RTN","ORCMEDT5",88,0)
 K STACK(STACK),STACK("B",MENU) S STACK=STACK-1
"RTN","ORCMEDT5",89,0)
 Q
"RTN","ORCMEDT5",90,0)
 ;
"RTN","ORCMEDT5",91,0)
INUSE(MENU) ; -- Returns 1 or 0, if MENU is in use by parameter
"RTN","ORCMEDT5",92,0)
 N PARAM,ENT,Y
"RTN","ORCMEDT5",93,0)
 S PARAM=$O(^XTV(8989.51,"B","OR ADD ORDERS MENU",0)),Y=0
"RTN","ORCMEDT5",94,0)
 S ENT="" F  S ENT=$O(^XTV(8989.5,"AC",PARAM,ENT)) Q:ENT=""  I $G(^(ENT,1))=MENU S Y=1 Q
"RTN","ORCMEDT5",95,0)
 Q Y
"RTN","ORCMEDT5",96,0)
 ;
"RTN","ORCMEDT5",97,0)
ASSIGN ; -- Assign menu to user(s)
"RTN","ORCMEDT5",98,0)
 D FULL^VALM1
"RTN","ORCMEDT5",99,0)
 D EDITPAR^XPAREDIT("OR ADD ORDERS MENU")
"RTN","ORCMEDT5",100,0)
 S VALMBCK="R"
"RTN","ORCMEDT5",101,0)
 Q
"RTN","ORCMEDT5",102,0)
 ;
"RTN","ORCMEDT5",103,0)
INQ ; -- Inquire to Order Dialog file
"RTN","ORCMEDT5",104,0)
 N X,Y,DIC,DA,DR,DIQ
"RTN","ORCMEDT5",105,0)
 S DIC="^ORD(101.41,",DIC(0)="AEQM"
"RTN","ORCMEDT5",106,0)
 F  D ^DIC Q:Y'>0  S DA=+Y W ! D EN^DIQ W !
"RTN","ORCMEDT5",107,0)
 Q
"RTN","ORCMEDT5",108,0)
 ;
"RTN","ORCMEDT5",109,0)
OUTPUT(ORY) ; -- Output Xform for Value field of Response multiple
"RTN","ORCMEDT5",110,0)
 N ORDIALOG,ORP,ORZ S ORZ=ORY
"RTN","ORCMEDT5",111,0)
 S ORP=$P($G(^ORD(101.41,D0,6,D1,0)),U,2)
"RTN","ORCMEDT5",112,0)
 I ORP S ORDIALOG(ORP,0)=$P($G(^ORD(101.41,ORP,1)),U,1,2),ORDIALOG(ORP,1)=ORY,ORZ=$$EXT^ORCD(ORP,1)
"RTN","ORCMEDT5",113,0)
 Q ORZ
"RTN","ORCMEDT5",114,0)
 ;
"RTN","ORCMEDT5",115,0)
AOPAR ; -- List of add order menus assigned to users
"RTN","ORCMEDT5",116,0)
 N BY,DHD,DIC,FLDS,FR,TO
"RTN","ORCMEDT5",117,0)
 S DIC=8989.5
"RTN","ORCMEDT5",118,0)
 S FR="OR ADD ORDERS MENU,?",TO="OR ADD ORDERS MENU,?"
"RTN","ORCMEDT5",119,0)
 S BY="@.02,@1;S2;""Add order menu: """
"RTN","ORCMEDT5",120,0)
 S DHD="CPRS Add order menu list"
"RTN","ORCMEDT5",121,0)
 S FLDS="VALUE;N;""Menu"",ENTITY;""User/Location/etc."";C40"
"RTN","ORCMEDT5",122,0)
 D EN1^DIP
"RTN","ORCMEDT5",123,0)
 Q
"RTN","ORCMEDT5",124,0)
 ;
"RTN","ORCMEDT5",125,0)
DISABLE ; -- Disable order dialogs
"RTN","ORCMEDT5",126,0)
 N X,Y,DIC,DIR,ORDIS,ORI K ^TMP("ORDISABLE",$J)
"RTN","ORCMEDT5",127,0)
 S DIC=101.41,DIC(0)="AEQM",DIC("A")="Select ORDER DIALOG: ",DIC("?")="Enter the name of an order dialog you wish to disable."
"RTN","ORCMEDT5",128,0)
 S DIC("W")="I $L($P(^(0),U,3)) W !?3,"">> disabled: ""_$P(^(0),U,3)"
"RTN","ORCMEDT5",129,0)
 F  D ^DIC Q:Y'>0  S ^TMP("ORDISABLE",$J,+Y)="" S DIC("A")="ANOTHER ONE: "
"RTN","ORCMEDT5",130,0)
 Q:'$O(^TMP("ORDISABLE",$J,0))  ;none selected
"RTN","ORCMEDT5",131,0)
 W !!,"Enter a message to disable the dialog(s), or @ to enable again."
"RTN","ORCMEDT5",132,0)
 S DIR(0)="FAO^1:40",DIR("A")="MESSAGE: "
"RTN","ORCMEDT5",133,0)
 S DIR("?")="Enter up to 40 characters explaining why use of this dialog has been disabled that will display if the dialog is selected, or @ to enable the dialog again."
"RTN","ORCMEDT5",134,0)
 D ^DIR G:$D(DTOUT)!$D(DUOUT)!(X="") DQ S ORDIS=X
"RTN","ORCMEDT5",135,0)
 I '$$OK W !,"Nothing "_$S(ORDIS="@":"en",1:"dis")_"abled." H 1 G DQ
"RTN","ORCMEDT5",136,0)
 S ORI=0  F  S ORI=$O(^TMP("ORDISABLE",$J,ORI)) Q:ORI'>0  S $P(^ORD(101.41,ORI,0),U,3)=$S(ORDIS="@":"",1:ORDIS) W "."
"RTN","ORCMEDT5",137,0)
 W !,"done." H 1
"RTN","ORCMEDT5",138,0)
DQ K ^TMP("ORDISABLE",$J)
"RTN","ORCMEDT5",139,0)
 Q
"RTN","ORCSEND")
0^31^B65578810
"RTN","ORCSEND",1,0)
ORCSEND ;SLC/MKB-Release orders ; 11/8/2006
"RTN","ORCSEND",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,27,45,79,92,141,165,195,228,243,303,296**;Dec 17, 1997;Build 19
"RTN","ORCSEND",3,0)
 ;
"RTN","ORCSEND",4,0)
EN(ORIFN,ACTION,SIGSTS,RELSTS,NATURE,REASON,ORERR) ; -- Release [actions on] orders
"RTN","ORCSEND",5,0)
 N ORDA,ORNOW,SIGNREQD,SIGNED,SIGNER
"RTN","ORCSEND",6,0)
 S SIGNREQD=+$P($G(^OR(100,+ORIFN,0)),U,16),ORERR=""
"RTN","ORCSEND",7,0)
 S SIGNED=$S(SIGSTS=2:0,1:1),SIGNER=$S(SIGSTS=1:DUZ,SIGSTS=7:DUZ,1:"")
"RTN","ORCSEND",8,0)
 S ORDA=+$P(ORIFN,";",2),ORIFN=+ORIFN,ORNOW=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSEND",9,0)
 S:"ES"[$G(ACTION) ACTION=$P($G(^OR(100,ORIFN,8,ORDA,0)),U,2)
"RTN","ORCSEND",10,0)
 I SIGNREQD,ORDA,"^NW^RW^XX^RN^DC^HD^RL^"[(U_ACTION_U) D  ; sign/alert
"RTN","ORCSEND",11,0)
 . I 'SIGNED D NOTIF^ORCSIGN Q
"RTN","ORCSEND",12,0)
 . D:SIGSTS'="" SIGN^ORCSAVE2(ORIFN,SIGNER,ORNOW,SIGSTS,ORDA)
"RTN","ORCSEND",13,0)
 . D:SIGSTS=4 CHART^ORCSIGN ; not used anymore
"RTN","ORCSEND",14,0)
 I '$L(ACTION) S ORERR="1^Invalid order action" Q
"RTN","ORCSEND",15,0)
 I $$READY(ORIFN,ORDA) D:$L($T(@ACTION)) @ACTION I 'ORERR,ACTION="NW" D
"RTN","ORCSEND",16,0)
 . N OREVT S OREVT=+$P($G(^OR(100,ORIFN,0)),U,17) Q:OREVT<1
"RTN","ORCSEND",17,0)
 . I '$$EVTORDER^OREVNTX(ORIFN) D SAVE^ORMEVNT1(ORIFN,OREVT,2,"ES")
"RTN","ORCSEND",18,0)
 ; If order originated from the back door, send Dx and TxF back to ancil.
"RTN","ORCSEND",19,0)
 I SIGNED,$P($G(^OR(100,+ORIFN,3)),U,11)="P" D BDOEDIT^ORWDBA7
"RTN","ORCSEND",20,0)
 Q
"RTN","ORCSEND",21,0)
 ;
"RTN","ORCSEND",22,0)
EN1(ORDER,ORERR) ; -- Delayed Release [from RELEASE^ORMEVNT]
"RTN","ORCSEND",23,0)
 ;
"RTN","ORCSEND",24,0)
 Q:$P($G(^OR(100,+ORDER,3)),U,3)'=10
"RTN","ORCSEND",25,0)
 N ORPKG,ORA0,ORNOW,ORIFN,ORDA,ORNP,ORNATR,ORQUIT,ORDUZ,SIGSTS,RELSTS
"RTN","ORCSEND",26,0)
 S ORPKG=$P($G(^OR(100,+ORDER,0)),U,14),ORA0=$G(^(8,1,0))
"RTN","ORCSEND",27,0)
 S ORNOW=+$E($$NOW^XLFDT,1,12),ORIFN=+ORDER,ORDA=1,ORNP=$P(ORA0,U,3)
"RTN","ORCSEND",28,0)
 S SIGSTS=$P(ORA0,U,4),ORNATR=$P($G(^ORD(100.02,+$P(ORA0,U,12),0)),U,2)
"RTN","ORCSEND",29,0)
 S RELSTS=$S(SIGSTS'=2:1,"^V^P^"[(U_ORNATR_U):1,1:0)
"RTN","ORCSEND",30,0)
 I RELSTS D
"RTN","ORCSEND",31,0)
 . D STARTDT^ORCSAVE2(ORIFN),PKGSTUFF^ORCSEND1(ORPKG) Q:$G(ORQUIT)
"RTN","ORCSEND",32,0)
 . S ORDUZ=$S(SIGSTS=0:$P(ORA0,U,7),SIGSTS=1:$P(ORA0,U,5),SIGSTS=2:$P(ORA0,U,17),SIGSTS=3:$P(ORA0,U,13),1:DUZ)
"RTN","ORCSEND",33,0)
 . D EDO1^ORWPFSS1  ;PFSS Event Delayed Orders
"RTN","ORCSEND",34,0)
 . D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,ORDUZ),NEW^ORMBLD(ORIFN)
"RTN","ORCSEND",35,0)
 . I "^10^13^"[(U_$P($G(^OR(100,ORIFN,3)),U,3)_U) S ORERR=1 ;error
"RTN","ORCSEND",36,0)
 I 'RELSTS!$G(ORERR),$P($G(^OR(100,ORIFN,3)),U,3)=10 D STATUS^ORCSAVE2(ORIFN,11) S $P(^OR(100,ORIFN,8,1,0),U,15)=11
"RTN","ORCSEND",37,0)
 Q
"RTN","ORCSEND",38,0)
 ;
"RTN","ORCSEND",39,0)
EN2(ORIFN,SIGSTS,NATURE,ORERR) ; -- Manual Release [from OREVNT1,SENDED^ORWDX]
"RTN","ORCSEND",40,0)
 N ORDA,ORNOW,OREVT,ORA0,ORNP,SIGNREQD,SIGNED,RELSTS
"RTN","ORCSEND",41,0)
 S ORDA=+$P(ORIFN,";",2),ORIFN=+ORIFN S:ORDA<1 ORDA=1
"RTN","ORCSEND",42,0)
 S OREVT=+$P($G(^OR(100,ORIFN,0)),U,17),ORA0=$G(^(8,ORDA,0))
"RTN","ORCSEND",43,0)
 S ORNP=$P(ORA0,U,3),SIGNREQD=($P(ORA0,U,4)'=3),(SIGNED,RELSTS)=1
"RTN","ORCSEND",44,0)
 S ORNOW=+$E($$NOW^XLFDT,1,12),ORERR=""
"RTN","ORCSEND",45,0)
 I $P(ORA0,U,4)=2 D  ;needs ES
"RTN","ORCSEND",46,0)
 . N SIGNER S SIGNER=$S(SIGSTS=1:DUZ,1:"")
"RTN","ORCSEND",47,0)
 . I SIGSTS=2 D NOTIF^ORCSIGN S SIGNED=0 Q  ;still unsigned
"RTN","ORCSEND",48,0)
 . D:SIGSTS'="" SIGN^ORCSAVE2(ORIFN,SIGNER,ORNOW,SIGSTS,ORDA)
"RTN","ORCSEND",49,0)
 D EDO2^ORWPFSS1  ;PFSS Event Delayed Orders
"RTN","ORCSEND",50,0)
 D NW I 'ORERR D SAVE^ORMEVNT1(+ORIFN,OREVT,2,"MN")
"RTN","ORCSEND",51,0)
 Q
"RTN","ORCSEND",52,0)
 ;
"RTN","ORCSEND",53,0)
NW ; -- New order ORIFN
"RTN","ORCSEND",54,0)
RW ; -- Rewritten order ORIFN
"RTN","ORCSEND",55,0)
XX ; -- Changed order ORIFN
"RTN","ORCSEND",56,0)
RN ; -- Renewed order ORIFN
"RTN","ORCSEND",57,0)
 N ORQUIT,STS,TYPE,OR0,OR3,CODE,ORIG,ORSAVE
"RTN","ORCSEND",58,0)
 N IVDIEN,IVPKGM
"RTN","ORCSEND",59,0)
 S IVPKGM=0
"RTN","ORCSEND",60,0)
 S IVDIEN=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",""))
"RTN","ORCSEND",61,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG,OREBUILD=1 Q
"RTN","ORCSEND",62,0)
 S:'ORDA ORDA=1 S ORSAVE=ORIFN
"RTN","ORCSEND",63,0)
 S OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)) D STARTDT^ORCSAVE2(ORIFN)
"RTN","ORCSEND",64,0)
 S TYPE=$P(OR3,U,11),ORIG=+$P(OR3,U,5),CODE="NW"
"RTN","ORCSEND",65,0)
 I TYPE=1,ORIG,$D(^OR(100,ORIG,4)) S CODE="XO",^OR(100,ORIG,6)=$O(^ORD(100.02,"C","C",0))_U_DUZ_U_ORNOW
"RTN","ORCSEND",66,0)
 I $$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)="PSJ" S IVPKGM=1
"RTN","ORCSEND",67,0)
 I IVPKGM=1,$P($P(OR0,U,5),";")=IVDIEN D PSJI^ORCSEND3 Q:$G(ORQUIT)
"RTN","ORCSEND",68,0)
 I IVPKGM=0!($P($P(OR0,U,5),";")'=IVDIEN) D PKGSTUFF^ORCSEND1(+$P(OR0,U,14)) Q:$G(ORQUIT)
"RTN","ORCSEND",69,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",70,0)
 D NEW^ORMBLD(ORIFN,CODE) S ORIFN=ORSAVE,STS=$P($G(^OR(100,ORIFN,3)),U,3)
"RTN","ORCSEND",71,0)
 I (STS=1)!(STS=13) S ORERR="1^"_$$WHY(ORIFN,1) D:'SIGNED&SIGNREQD NOSIG K:ORIG ^OR(100,ORIG,6)
"RTN","ORCSEND",72,0)
 I STS=11 S ORERR="1^ERROR"
"RTN","ORCSEND",73,0)
 Q
"RTN","ORCSEND",74,0)
 ;
"RTN","ORCSEND",75,0)
DC ; -- DC order ORIFN
"RTN","ORCSEND",76,0)
 N PKG,CODE,ORCHLD,ORCHDA,STS,ORIDA,ORSAVE,OR3,OR6,DCNATURE
"RTN","ORCSEND",77,0)
 I '$G(REASON),$G(NATURE)="D" S REASON=+$O(^ORD(100.03,"C","ORDUP",0))
"RTN","ORCSEND",78,0)
 S:$G(REASON) $P(^OR(100,ORIFN,6),U,1,5)=$S($G(NATURE):NATURE,$L($G(NATURE)):$O(^ORD(100.02,"C",NATURE,0)),1:"")_"^^^"_+REASON_U_$P(^ORD(100.03,+REASON,0),U)
"RTN","ORCSEND",79,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG Q
"RTN","ORCSEND",80,0)
 S $P(^OR(100,ORIFN,6),U,2,3)=$S($G(DGPMT):"",1:DUZ)_U_ORNOW,ORSAVE=ORIFN S:'$G(REASON) REASON=$P(^(6),U,4)
"RTN","ORCSEND",81,0)
 S STS=$P($G(^OR(100,ORIFN,3)),U,3),PKG=$P($G(^(0)),U,14),PKG=$$NMSP^ORCD(PKG),CODE=$S(PKG="LR":"CA",(PKG="PS")&(STS=5):"CA",(PKG="FH")&(STS=8):"CA",1:"DC")
"RTN","ORCSEND",82,0)
 D:ORDA RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",83,0)
DC1 I $O(^OR(100,ORIFN,2,0)) D  G DC2 ; DC children
"RTN","ORCSEND",84,0)
 . S ORCHLD=0 F  S ORCHLD=$O(^OR(100,ORIFN,2,ORCHLD)) Q:ORCHLD'>0  I $$VALID^ORCACT0(ORCHLD,"DC") D  Q:$G(ORERR)
"RTN","ORCSEND",85,0)
 . . S ORCHDA=$S(ORDA:$$ACTION^ORCSAVE("DC",ORCHLD,ORNP),1:0)
"RTN","ORCSEND",86,0)
 . . D:ORCHDA SIGN^ORCSAVE2(ORCHLD,,,8,ORCHDA) ;Sig on Parent only
"RTN","ORCSEND",87,0)
 . . D MSG^ORMBLD((ORCHLD_";"_ORCHDA),CODE,$G(REASON))
"RTN","ORCSEND",88,0)
 . . I "^1^13^"'[(U_$P(^OR(100,ORCHLD,3),U,3)_U) S ORERR="1^"_$$WHY(ORCHLD,ORCHDA)
"RTN","ORCSEND",89,0)
 . ;D:'$G(ORERR) STATUS^ORCSAVE2(ORIFN,1)
"RTN","ORCSEND",90,0)
 . S:$G(ORERR) ^OR(100,ORIFN,8,ORDA,1)=$P(ORERR,U,2)
"RTN","ORCSEND",91,0)
 D MSG^ORMBLD((ORIFN_";"_ORDA),CODE,$G(REASON))
"RTN","ORCSEND",92,0)
DC2 S ORIFN=ORSAVE,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND",93,0)
 S OR6=$G(^OR(100,ORIFN,6))
"RTN","ORCSEND",94,0)
 I STS'=1,STS'=13,STS'=2 D  Q
"RTN","ORCSEND",95,0)
 . S ORERR="1^"_$S(ORDA:$$WHY(ORIFN,ORDA),1:"Unable to discontinue")
"RTN","ORCSEND",96,0)
 . I ORDA,'SIGNED&SIGNREQD D NOSIG ; sig no longer reqd
"RTN","ORCSEND",97,0)
 . K ^OR(100,ORIFN,6)
"RTN","ORCSEND",98,0)
 S DCNATURE=$S(+OR6:+OR6,1:$G(NATURE))
"RTN","ORCSEND",99,0)
 S $P(^OR(100,ORIFN,3),U,7)=$S('$$ACTV^ORX1($G(DCNATURE)):0,ORDA:ORDA,1:$P(OR3,U,7))
"RTN","ORCSEND",100,0)
 D CANCEL(ORIFN),SETALL^ORDD100(ORIFN)
"RTN","ORCSEND",101,0)
 I $P(OR3,U,11)=2 D  ; dc a renewal
"RTN","ORCSEND",102,0)
 . N ORIG,ORIG3,NATR S ORIG=$P(OR3,U,5),ORIG3=$G(^OR(100,ORIG,3)) Q:'ORIG
"RTN","ORCSEND",103,0)
 . ;I CODE="CA",+$P(OR6,U,9)'>0 S $P(^OR(100,ORIG,3),U,6)="" Q  ;pend - remove fwd ptr
"RTN","ORCSEND",104,0)
 . I +$P(OR6,U,9)'>0 S $P(^OR(100,ORIG,3),U,6)="" Q  ;pend - remove fwd ptr
"RTN","ORCSEND",105,0)
 . Q:"^1^7^12^13^"[(U_$P(ORIG3,U,3)_U)  S NATR=$O(^ORD(100.02,"C","A",0))
"RTN","ORCSEND",106,0)
 . S ^OR(100,ORIG,6)=NATR_U_DUZ_U_ORNOW_"^^Renewal cancelled"
"RTN","ORCSEND",107,0)
 . D MSG^ORMBLD(ORIG,"DC") I "^1^13^"'[$P(^OR(100,ORIG,3),U,3) K ^(6) Q
"RTN","ORCSEND",108,0)
 . S:'$$ACTV^ORX1(NATR) $P(^OR(100,ORIG,3),U,7)=0
"RTN","ORCSEND",109,0)
 Q
"RTN","ORCSEND",110,0)
 ;
"RTN","ORCSEND",111,0)
CANCEL(IFN) ; -- Cancel any outstanding actions for order IFN 
"RTN","ORCSEND",112,0)
 N I S I=0
"RTN","ORCSEND",113,0)
 F  S I=$O(^OR(100,IFN,8,I)) Q:I'>0  I $P(^(I,0),U,15)=11 S $P(^(0),U,15)=13 D:$P(^(0),U,4)=2 SIGN^ORCSAVE2(IFN,"","",5,I) ; cancelled, sig not reqd now
"RTN","ORCSEND",114,0)
 Q
"RTN","ORCSEND",115,0)
 ;
"RTN","ORCSEND",116,0)
HD ; -- Hold order ORIFN
"RTN","ORCSEND",117,0)
 N STS,ORSAVE I 'ORDA S ORERR="1^Unable to hold" Q
"RTN","ORCSEND",118,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG Q
"RTN","ORCSEND",119,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",120,0)
 S ORSAVE=ORIFN D MSG^ORMBLD((ORIFN_";"_ORDA),"HD") S ORIFN=ORSAVE
"RTN","ORCSEND",121,0)
 S STS=$P($G(^OR(100,ORIFN,3)),U,3) I STS=3 S $P(^(3),U,7)=ORDA D SET^ORDD100(ORIFN,ORDA)
"RTN","ORCSEND",122,0)
 I STS'=3 S ORERR="1^"_$$WHY(ORIFN,ORDA) D:'SIGNED&SIGNREQD NOSIG
"RTN","ORCSEND",123,0)
 Q
"RTN","ORCSEND",124,0)
 ;
"RTN","ORCSEND",125,0)
RL ; -- Release hold on order ORIFN
"RTN","ORCSEND",126,0)
 N STS,ORSAVE,ORHD I 'ORDA S ORERR="1^Unable to release hold" Q
"RTN","ORCSEND",127,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG Q
"RTN","ORCSEND",128,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",129,0)
 S ORSAVE=ORIFN D MSG^ORMBLD((ORIFN_";"_ORDA),"RL") S ORIFN=ORSAVE
"RTN","ORCSEND",130,0)
 S STS=$P($G(^OR(100,ORIFN,3)),U,3),ORHD=+$P($G(^(3)),U,7)
"RTN","ORCSEND",131,0)
 I STS'=3 S $P(^OR(100,ORIFN,3),U,7)=ORDA,$P(^(8,ORHD,2),U,1,2)=ORNOW_U_DUZ D SET^ORDD100(ORIFN,ORDA)
"RTN","ORCSEND",132,0)
 I STS=3 S ORERR="1^"_$$WHY(ORIFN,ORDA) D:'SIGNED&SIGNREQD NOSIG
"RTN","ORCSEND",133,0)
 Q
"RTN","ORCSEND",134,0)
 ;
"RTN","ORCSEND",135,0)
FL ; -- Flag order ORIFN
"RTN","ORCSEND",136,0)
 Q
"RTN","ORCSEND",137,0)
 ;
"RTN","ORCSEND",138,0)
UF ; -- Unflag order ORIFN
"RTN","ORCSEND",139,0)
 Q
"RTN","ORCSEND",140,0)
 ;
"RTN","ORCSEND",141,0)
CM ; -- Add Ward comments to order ORIFN
"RTN","ORCSEND",142,0)
 Q
"RTN","ORCSEND",143,0)
 ;
"RTN","ORCSEND",144,0)
VR ; -- Verify order ORIFN
"RTN","ORCSEND",145,0)
 I 'ORDA!(SIGSTS=2) S ORERR="1^Unable to verify" Q
"RTN","ORCSEND",146,0)
 I "^N^C^R^"'[(U_$G(ORVER)_U) S ORERR="1^Unable to verify" Q
"RTN","ORCSEND",147,0)
 D VERIFY^ORCSAVE2(ORIFN,ORDA,ORVER,DUZ,ORNOW)
"RTN","ORCSEND",148,0)
 ; -- send HL7 msg to Pharmacy if Nurse-Verified, [Sts=pending]
"RTN","ORCSEND",149,0)
 Q:ORVER'="N"  N ORSTS,ORPKG,ORX
"RTN","ORCSEND",150,0)
 S ORX=$P($G(^OR(100,ORIFN,8,ORDA,0)),U,2) Q:ORX'="NW"&(ORX'="XX")
"RTN","ORCSEND",151,0)
 S ORPKG=+$P($G(^OR(100,ORIFN,0)),U,14),ORSTS=$P($G(^(3)),U,3)
"RTN","ORCSEND",152,0)
 ;I ORSTS=5!$L($T(ZV^ORMPS)),$$NMSP^ORCD(ORPKG)="PS" D VER^ORMBLDPS(ORIFN)
"RTN","ORCSEND",153,0)
 I $$NMSP^ORCD(ORPKG)="PS" D VER^ORMBLDPS(ORIFN)
"RTN","ORCSEND",154,0)
 Q
"RTN","ORCSEND",155,0)
 ;
"RTN","ORCSEND",156,0)
NEEDSIG() ; -- Msg
"RTN","ORCSEND",157,0)
 Q "1^This order requires a signature."
"RTN","ORCSEND",158,0)
 ;
"RTN","ORCSEND",159,0)
WHY(IFN,DA) ; -- Return reason request was rejected
"RTN","ORCSEND",160,0)
 N X S X=$G(^OR(100,IFN,8,DA,1))
"RTN","ORCSEND",161,0)
 S:'$L(X) X="Unable to "_$S(ACTION="HD":"hold",ACTION="RL":"release hold",ACTION="DC":"discontinue",ACTION="XX":"change",ACTION="RN":"renew",1:"release")
"RTN","ORCSEND",162,0)
 Q X
"RTN","ORCSEND",163,0)
 ;
"RTN","ORCSEND",164,0)
NOSIG ; -- Mark order as Sig not Req'd due to cancel/reject
"RTN","ORCSEND",165,0)
 D SIGN^ORCSAVE2(ORIFN,"","",5,ORDA) S SIGNREQD=0
"RTN","ORCSEND",166,0)
 Q
"RTN","ORCSEND",167,0)
 ;
"RTN","ORCSEND",168,0)
READY(IFN,ACT) ; -- Ready to release?
"RTN","ORCSEND",169,0)
 N X,Y,OR0,OR3,ORA
"RTN","ORCSEND",170,0)
 I ACTION="VR" S Y=1 G RQ ; no action to release
"RTN","ORCSEND",171,0)
 I 'ACT,ACTION="DC" S Y=1 G RQ ; cancel a duplicate
"RTN","ORCSEND",172,0)
 S Y=0,OR0=$G(^OR(100,IFN,0)),OR3=$G(^(3)),ORA=$G(^(8,ACT,0))
"RTN","ORCSEND",173,0)
 I $P(ORA,U,15)=11 S Y=1 G RQ ; unreleased
"RTN","ORCSEND",174,0)
 I $P(ORA,U,15)=10 D  G RQ ; delayed
"RTN","ORCSEND",175,0)
 . I $G(^DPT(+ORVP,.105)),$$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)="PSO" S Y=1 Q
"RTN","ORCSEND",176,0)
 . Q:'RELSTS  N ORIG S ORIG=+$P(OR3,U,5)
"RTN","ORCSEND",177,0)
 . I 'SIGNED,$L($G(NATURE)) S $P(ORA,U,17)=DUZ,$P(ORA,U,12)=$S(NATURE:NATURE,1:+$O(^ORD(100.02,"C",NATURE,0))),^OR(100,IFN,8,ACT,0)=ORA
"RTN","ORCSEND",178,0)
 . Q:$P(OR3,U,11)'=1!('ORIG)  ;dc original if signed edit
"RTN","ORCSEND",179,0)
 . D STATUS^ORCSAVE2(ORIG,12)
"RTN","ORCSEND",180,0)
 . S ^OR(100,ORIG,6)=+$O(^ORD(100.02,"C","C",0))_U_DUZ_U_ORNOW
"RTN","ORCSEND",181,0)
 . S $P(^OR(100,ORIG,3),U,7)=0,$P(^(8,1,0),U,15)=12 D:$P($G(^(0)),U,4)=2 SIGN^ORCSAVE2(ORIG,,,5,1)
"RTN","ORCSEND",182,0)
 I $P(OR3,U,3)=11,$P(ORA,U,2)="NW" S Y=1 ; Action Sts = "" (old)
"RTN","ORCSEND",183,0)
RQ I +$$SWSTAT^IBBAPI() D:Y=1 EN^ORWPFSS4(+IFN) ; Associate PFSS Account Reference with order, Patch OR*3.0*228 IA #4663
"RTN","ORCSEND",184,0)
 Q Y
"RTN","ORINQIV")
0^41^B192421660
"RTN","ORINQIV",1,0)
ORINQIV ; SLC/AGP - Utility report for Order Dialogs ; 11/18/08
"RTN","ORINQIV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**301,296**;DEC 17, 1997;Build 19
"RTN","ORINQIV",3,0)
 ;
"RTN","ORINQIV",4,0)
 ; DBIA 5133: reading ^PXRMD file #801.41
"RTN","ORINQIV",5,0)
 ; 
"RTN","ORINQIV",6,0)
 Q
"RTN","ORINQIV",7,0)
 ;
"RTN","ORINQIV",8,0)
ASK(PROMPT,QUEST,HELP) ;
"RTN","ORINQIV",9,0)
 N DIR,STR,Y
"RTN","ORINQIV",10,0)
 S STR=QUEST_";S:SKIP THIS QUICK ORDER;Q:QUIT THE CONVERSION UTILITY"
"RTN","ORINQIV",11,0)
 S DIR("A")=PROMPT
"RTN","ORINQIV",12,0)
 S DIR(0)="S^"_STR
"RTN","ORINQIV",13,0)
 S DIR("??")="^D HELP^ORINQIV("_HELP_")"
"RTN","ORINQIV",14,0)
 D ^DIR
"RTN","ORINQIV",15,0)
 Q Y
"RTN","ORINQIV",16,0)
 ;
"RTN","ORINQIV",17,0)
AWRITE(REF) ;Write all the descendants of the array reference.
"RTN","ORINQIV",18,0)
 ;REF is the starting array reference, for example A or ^TMP("OR",$J).
"RTN","ORINQIV",19,0)
 N DONE,IND,LEN,PROOT,ROOT,START,TEMP
"RTN","ORINQIV",20,0)
 I REF="" Q
"RTN","ORINQIV",21,0)
 S PROOT=$P(REF,")",1)
"RTN","ORINQIV",22,0)
 ;Build the root so we can tell when we are done.
"RTN","ORINQIV",23,0)
 S TEMP=$NA(@REF)
"RTN","ORINQIV",24,0)
 S ROOT=$P(TEMP,")",1)
"RTN","ORINQIV",25,0)
 S REF=$Q(@REF)
"RTN","ORINQIV",26,0)
 I REF'[ROOT Q
"RTN","ORINQIV",27,0)
 S DONE=0
"RTN","ORINQIV",28,0)
 F  Q:(REF="")!(DONE)  D
"RTN","ORINQIV",29,0)
 . S START=$F(REF,ROOT)
"RTN","ORINQIV",30,0)
 . S LEN=$L(REF)
"RTN","ORINQIV",31,0)
 . S IND=$E(REF,START,LEN)
"RTN","ORINQIV",32,0)
 . W !,PROOT_IND,"=",@REF
"RTN","ORINQIV",33,0)
 . S REF=$Q(@REF)
"RTN","ORINQIV",34,0)
 . I REF'[ROOT S DONE=1
"RTN","ORINQIV",35,0)
 Q
"RTN","ORINQIV",36,0)
 ;
"RTN","ORINQIV",37,0)
BLDMSG(ARRAY) ;
"RTN","ORINQIV",38,0)
 N CNT,LC,NAME,PQO,SPACE,SUCCESS,TEMP,TEXT,USER,XMSUB,Y
"RTN","ORINQIV",39,0)
 W !
"RTN","ORINQIV",40,0)
 S CNT=1,TEXT(CNT)="Below is a list of personal QO that can be converted to the Infusion format."
"RTN","ORINQIV",41,0)
 S CNT=CNT+1,TEXT(CNT)="These items should not be converted unless the quick order is remove from"
"RTN","ORINQIV",42,0)
 S CNT=CNT+1,TEXT(CNT)="the user personal quick order menu."
"RTN","ORINQIV",43,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","ORINQIV",44,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",45,0)
 .S CNT=CNT+1,TEXT(CNT)=NAME,CNT=CNT+1,TEXT(CNT)="_"
"RTN","ORINQIV",46,0)
 .F SPACE=1:1:78 S TEXT(CNT)=TEXT(CNT)_"_"
"RTN","ORINQIV",47,0)
 .S PQO="" F  S PQO=$O(ARRAY(NAME,PQO)) Q:PQO=""  D
"RTN","ORINQIV",48,0)
 ..S CNT=CNT+1,TEXT(CNT)=$G(ARRAY(NAME,PQO))
"RTN","ORINQIV",49,0)
 S CNT=0 F  S CNT=$O(TEXT(CNT)) Q:CNT'>0  W !,TEXT(CNT)
"RTN","ORINQIV",50,0)
 ;
"RTN","ORINQIV",51,0)
 S DIR(0)="Y"
"RTN","ORINQIV",52,0)
 S DIR("A")="Send this information in a mailman message"
"RTN","ORINQIV",53,0)
 D ^DIR
"RTN","ORINQIV",54,0)
 I Y'=1 Q
"RTN","ORINQIV",55,0)
 S XMSUB="List of personal QO that can be converted to Infusion format"
"RTN","ORINQIV",56,0)
 S TEMP=$$SUBCHK^XMGAPI0(XMSUB,0)
"RTN","ORINQIV",57,0)
 I $P(TEMP,U)'="" S XMSUB=$E(XMSUB,1,65)
"RTN","ORINQIV",58,0)
RETRY ;
"RTN","ORINQIV",59,0)
 D XMZ^XMA2
"RTN","ORINQIV",60,0)
 I XMZ<1 G RETRY
"RTN","ORINQIV",61,0)
 S SUCCESS("XMZ")=XMZ
"RTN","ORINQIV",62,0)
 S SUCCESS("SUB")=XMSUB
"RTN","ORINQIV",63,0)
 S CNT=0,LC=0 F  S CNT=$O(TEXT(CNT)) Q:CNT'>0  D
"RTN","ORINQIV",64,0)
 .S LC=LC+1,^XMB(3.9,XMZ,2,LC,0)=TEXT(CNT)
"RTN","ORINQIV",65,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_LC_"^"_LC_"^"_DT
"RTN","ORINQIV",66,0)
 S $P(^XMB(3.9,XMZ,0),U,12)="Y"
"RTN","ORINQIV",67,0)
 D ENT2^XMD
"RTN","ORINQIV",68,0)
 Q
"RTN","ORINQIV",69,0)
 ;
"RTN","ORINQIV",70,0)
EDIT(IEN,PERQOAR) ;
"RTN","ORINQIV",71,0)
 N ASKADD,CNT,CONF,DA,DIE,DIK,DR,DRPSIVDG,DUR,EXIT,ERR,ERROR,FDA,FDAIEN
"RTN","ORINQIV",72,0)
 N IVTYPE,LOC,NAME,NODE,OUTPUT,PSIVDG,PSNODE,TERMIN,USER
"RTN","ORINQIV",73,0)
 S EXIT=0,ERROR=0
"RTN","ORINQIV",74,0)
 N OI,OINAME,PTR,UPDADD,UPDDSG
"RTN","ORINQIV",75,0)
 S USER=$$ISPERQO(IEN) I USER>0 D  Q EXIT
"RTN","ORINQIV",76,0)
 .S NODE=$G(^ORD(101.41,IEN,0))
"RTN","ORINQIV",77,0)
 .D GETS^DIQ(200,USER_",",".01;9.2","EI","OUTPUT","ERR")
"RTN","ORINQIV",78,0)
 .I $D(ERR) D AWRITE(ERR) Q
"RTN","ORINQIV",79,0)
 .S TERMIN=$G(OUTPUT(200,USER_",",9.2,"I"))
"RTN","ORINQIV",80,0)
 .I TERMIN>0,TERMIN<DT Q
"RTN","ORINQIV",81,0)
 .S PERQOAR(OUTPUT(200,USER_",",.01,"E"),$P(NODE,U))=$P(NODE,U,2)
"RTN","ORINQIV",82,0)
 K ^TMP($J,"OR DESC")
"RTN","ORINQIV",83,0)
 S UPDDSG="N",UPDADD="N"
"RTN","ORINQIV",84,0)
 S OI=$$GETOI(IEN) I OI="" Q 0
"RTN","ORINQIV",85,0)
 S OINAME=$P($G(^ORD(101.43,OI,0)),U) I OINAME="" Q 0
"RTN","ORINQIV",86,0)
 S PSNODE=$G(^ORD(101.43,OI,"PS"))
"RTN","ORINQIV",87,0)
 S ASKADD=$S($P(PSNODE,U,4)=1:1,1:0)
"RTN","ORINQIV",88,0)
 S DA=IEN
"RTN","ORINQIV",89,0)
 D EN^ORORDDSC(IEN,"OR DESC")
"RTN","ORINQIV",90,0)
 S CNT=0 F  S CNT=$O(^TMP($J,"OR DESC",IEN,CNT)) Q:CNT'>0  D
"RTN","ORINQIV",91,0)
 .W !,^TMP($J,"OR DESC",IEN,CNT)
"RTN","ORINQIV",92,0)
 ;
"RTN","ORINQIV",93,0)
CONVERT ;
"RTN","ORINQIV",94,0)
 W !!,"Convert the above Quick Order to an Infusion Quick Order?"
"RTN","ORINQIV",95,0)
 S UPDDSG=$$ASK("Convert?","Y:YES;N:NO",1)
"RTN","ORINQIV",96,0)
 I UPDDSG="Q"!(UPDDSG=U)!(UPDDSG="^^") S EXIT=1 G EDITX
"RTN","ORINQIV",97,0)
 I UPDDSG'="Y" G EDITX
"RTN","ORINQIV",98,0)
IVTYPE ;
"RTN","ORINQIV",99,0)
 W !!,"Select the IV Type for this Quick Order."
"RTN","ORINQIV",100,0)
 S IVTYPE=$$ASK("IV TYPE","C:CONTINUOUS;I:INTERMITTENT",2)
"RTN","ORINQIV",101,0)
 I IVTYPE=U G CONVERT
"RTN","ORINQIV",102,0)
 I IVTYPE="^^"!(IVTYPE="Q") S EXIT=1 G EDITX
"RTN","ORINQIV",103,0)
 I IVTYPE="S" G EDITX
"RTN","ORINQIV",104,0)
 ;
"RTN","ORINQIV",105,0)
ADDIT ;
"RTN","ORINQIV",106,0)
 I ASKADD=1 D
"RTN","ORINQIV",107,0)
 .I $P(PSNODE,U,3)=0 D  Q
"RTN","ORINQIV",108,0)
 ..S UPDADD="Y"
"RTN","ORINQIV",109,0)
 ..W !,"Orderable item "_OINAME_"  is not marked as a solution."
"RTN","ORINQIV",110,0)
 ..W !,"This orderable item will be moved to the additive value."
"RTN","ORINQIV",111,0)
 .W !!,"Change orderable item "_OINAME_" to an additive?"
"RTN","ORINQIV",112,0)
 .S UPDADD=$$ASK("Convert to Additive?","Y:YES;N:NO",3)
"RTN","ORINQIV",113,0)
 .I UPDADD=U G IVTYPE
"RTN","ORINQIV",114,0)
 .I UPDADD="^^"!(UPDADD="Q") S EXIT=1 G EDITX
"RTN","ORINQIV",115,0)
 .I UPDADD="S" G EDITX
"RTN","ORINQIV",116,0)
 ;
"RTN","ORINQIV",117,0)
CONFIRM ;
"RTN","ORINQIV",118,0)
 W !!,"Please confirm the selected changes below."
"RTN","ORINQIV",119,0)
 W !,"If these changes are accepted, the Quick Order will be converted to an"
"RTN","ORINQIV",120,0)
 W !,"Infusion Quick Order. This Quick Order will not be able to be converted back to"
"RTN","ORINQIV",121,0)
 W !,"an Inpatient Quick Order."
"RTN","ORINQIV",122,0)
 W !!,"Convert to Infusion Quick Order: YES"
"RTN","ORINQIV",123,0)
 W !,"IV TYPE: "_$S(IVTYPE="I":"Intermittent",1:"Continuous")
"RTN","ORINQIV",124,0)
 I UPDADD="Y" W !,"Change orderable item "_OINAME_" to an additive: YES"
"RTN","ORINQIV",125,0)
 S CONF=$$ASK("Confirm Changes?","Y:YES;N:NO",4)
"RTN","ORINQIV",126,0)
 I CONF=U G:ASKADD=1 ADDIT I ASKADD=0 G IVTYPE
"RTN","ORINQIV",127,0)
 I CONF="^^"!(CONF="Q") S EXIT=1 G EDITX
"RTN","ORINQIV",128,0)
 I CONF="S"!(CONF="N") G EDITX
"RTN","ORINQIV",129,0)
 ;
"RTN","ORINQIV",130,0)
UPDATES ;Do updates
"RTN","ORINQIV",131,0)
 W !
"RTN","ORINQIV",132,0)
 S DIE="^ORD(101.41,"
"RTN","ORINQIV",133,0)
 S PSIVDG=$O(^ORD(100.98,"B","IV MEDICATIONS","")) Q:PSIVDG'>0
"RTN","ORINQIV",134,0)
 S DR="5///^S X=PSIVDG"
"RTN","ORINQIV",135,0)
 D ^DIE
"RTN","ORINQIV",136,0)
 S PTR=$$PTR^ORMBLDPS("IV TYPE") Q:PTR'>0
"RTN","ORINQIV",137,0)
 S IENS="?+3,"_IEN_","
"RTN","ORINQIV",138,0)
 S FDA(101.416,IENS,.01)=35
"RTN","ORINQIV",139,0)
 S FDA(101.416,IENS,.02)=PTR
"RTN","ORINQIV",140,0)
 S FDA(101.416,IENS,.03)=1
"RTN","ORINQIV",141,0)
 S FDA(101.416,IENS,1)=IVTYPE
"RTN","ORINQIV",142,0)
 D UPDATE^DIE("","FDA","FDAIEN","ERR")
"RTN","ORINQIV",143,0)
 I $D(ERR) D AWRITE("ERR") S ERROR=1
"RTN","ORINQIV",144,0)
 I UPDADD="Y" D
"RTN","ORINQIV",145,0)
 .S PTR=$$PTR^ORMBLDPS("ADDITIVE") Q:PTR'>0
"RTN","ORINQIV",146,0)
 .N FDA,IENS
"RTN","ORINQIV",147,0)
 .S IENS="?+2,"_IEN_","
"RTN","ORINQIV",148,0)
 .S FDA(101.416,IENS,.01)=30
"RTN","ORINQIV",149,0)
 .S FDA(101.416,IENS,.02)=PTR
"RTN","ORINQIV",150,0)
 .S FDA(101.416,IENS,.03)=1
"RTN","ORINQIV",151,0)
 .S FDA(101.416,IENS,1)=OI
"RTN","ORINQIV",152,0)
 .D UPDATE^DIE("","FDA","FDAIEN","ERR")
"RTN","ORINQIV",153,0)
 .I $D(ERR) D AWRITE("ERR") S ERROR=1
"RTN","ORINQIV",154,0)
 .I '$D(ERR) W !!,"**CHECK THE STRENGTH ASSOCIATED WITH THE ADDITIVE VALUE IN THE EDITOR." H 1
"RTN","ORINQIV",155,0)
 .S PTR=$$PTR^ORMBLDPS("ORDERABLE ITEM") Q:PTR'>0
"RTN","ORINQIV",156,0)
 .S LOC=$O(^ORD(101.41,IEN,6,"D",PTR,"")) Q:LOC'>0
"RTN","ORINQIV",157,0)
 .S DA(1)=IEN,DA=LOC
"RTN","ORINQIV",158,0)
 .S DIK="^ORD(101.41,"_DA(1)_",6," D ^DIK
"RTN","ORINQIV",159,0)
 ;Check for duration
"RTN","ORINQIV",160,0)
 I IVTYPE="C" D
"RTN","ORINQIV",161,0)
 .S PTR=$$PTR^ORMBLDPS("SCHEDULE") Q:PTR'>0
"RTN","ORINQIV",162,0)
 .S LOC=$O(^ORD(101.41,IEN,6,"D",PTR,"")) Q:LOC'>0
"RTN","ORINQIV",163,0)
 .S DA(1)=IEN,DA=LOC
"RTN","ORINQIV",164,0)
 .S DIK="^ORD(101.41,"_DA(1)_",6," D ^DIK
"RTN","ORINQIV",165,0)
 S DUR=$$PTR^ORMBLDPS("DURATION")
"RTN","ORINQIV",166,0)
 I DUR>0,$D(^ORD(101.41,IEN,6,"D",DUR))>0 D
"RTN","ORINQIV",167,0)
 .W !!,"**CHECK THE LIMITATION VALUE ASSIGNED TO THE QUICK ORDER IN THE EDITOR." H 1
"RTN","ORINQIV",168,0)
 I ERROR=1 W !,"Due to the errors in conversion please valiate the quick order in the editor."
"RTN","ORINQIV",169,0)
 ;
"RTN","ORINQIV",170,0)
 ;Call the QO editor
"RTN","ORINQIV",171,0)
 W !
"RTN","ORINQIV",172,0)
 D QCK0^ORCMEDT1(IEN)
"RTN","ORINQIV",173,0)
EDITX ;
"RTN","ORINQIV",174,0)
 K ^TMP($J,"OR DESC")
"RTN","ORINQIV",175,0)
 Q EXIT
"RTN","ORINQIV",176,0)
 ;
"RTN","ORINQIV",177,0)
EN ;
"RTN","ORINQIV",178,0)
 K ^TMP($J,"OR REMMDLG")
"RTN","ORINQIV",179,0)
 N DIR,DSGPAR,DSGRP,EXIT,NANSC,ODIEN,PERQOAR,QOIEN,Y
"RTN","ORINQIV",180,0)
 ;
"RTN","ORINQIV",181,0)
 D HELP(6)
"RTN","ORINQIV",182,0)
 ;Build a list of Display Groups that contains the default dialog of
"RTN","ORINQIV",183,0)
 ;PSJ OR PAT OE
"RTN","ORINQIV",184,0)
 S ODIEN=$O(^ORD(101.41,"AB","PSJ OR PAT OE","")) Q:ODIEN=""
"RTN","ORINQIV",185,0)
 S DSGRP=0 F  S DSGRP=$O(^ORD(100.98,DSGRP)) Q:DSGRP'>0  D
"RTN","ORINQIV",186,0)
 .I $P(^ORD(100.98,DSGRP,0),U,4)=ODIEN S DSGPAR(DSGRP)=""
"RTN","ORINQIV",187,0)
 ;
"RTN","ORINQIV",188,0)
 S DIR(0)="S^A:QO ASSIGNED TO ORDER MENUS, ORDER SETS, OR REMINDER DIALOGS;N:QO NOT ASSIGNED TO ANY OF THESE ITEMS;S:SPECIFIC QUICK ORDER;Q:QUIT THE CONVERSION UTILITY"
"RTN","ORINQIV",189,0)
 S DIR("A")="Which QO to convert?"
"RTN","ORINQIV",190,0)
 S DIR("??")="^D HELP^ORINQIV(5)"
"RTN","ORINQIV",191,0)
 D ^DIR
"RTN","ORINQIV",192,0)
 I Y=U!(Y="^^")!(Y="Q") Q
"RTN","ORINQIV",193,0)
 I Y="S" D IND^ORINQIV(.DSGPAR) Q
"RTN","ORINQIV",194,0)
 S NANSC=Y
"RTN","ORINQIV",195,0)
 I NANSC="A" D FQOIRDLG
"RTN","ORINQIV",196,0)
 ;
"RTN","ORINQIV",197,0)
 S OIIEN=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM","")) Q:OIIEN'>0
"RTN","ORINQIV",198,0)
 S EXIT=0
"RTN","ORINQIV",199,0)
 S QOIEN=0 F  S QOIEN=$O(^ORD(101.41,QOIEN)) Q:QOIEN'>0!(EXIT=1)  D
"RTN","ORINQIV",200,0)
 .I $$ISVALID(QOIEN,NANSC,.DSGPAR)=0 Q
"RTN","ORINQIV",201,0)
 .S EXIT=$$EDIT(QOIEN,.PERQOAR)
"RTN","ORINQIV",202,0)
UTLEXIT ;
"RTN","ORINQIV",203,0)
 I $D(PERQOAR) D BLDMSG(.PERQOAR)
"RTN","ORINQIV",204,0)
 K ^TMP($J,"OR REMDLG")
"RTN","ORINQIV",205,0)
 Q
"RTN","ORINQIV",206,0)
 ;
"RTN","ORINQIV",207,0)
GETOI(IEN) ;
"RTN","ORINQIV",208,0)
 N OIIEN,OROI,POS
"RTN","ORINQIV",209,0)
 N OIIEN,OROI,POS
"RTN","ORINQIV",210,0)
 S OIIEN=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM","")) Q:OIIEN'>0 ""
"RTN","ORINQIV",211,0)
 S POS=$O(^ORD(101.41,IEN,6,"D",OIIEN,"")) Q:POS'>0 ""
"RTN","ORINQIV",212,0)
 S OROI=+$G(^ORD(101.41,IEN,6,POS,1)) Q:OROI'>0 ""
"RTN","ORINQIV",213,0)
 Q OROI
"RTN","ORINQIV",214,0)
 ;
"RTN","ORINQIV",215,0)
FQOIRDLG ;
"RTN","ORINQIV",216,0)
 N AFIND,DIEN,PTEXT,TYPE
"RTN","ORINQIV",217,0)
 F TYPE="G","E" S DIEN="" D
"RTN","ORINQIV",218,0)
 . F  S DIEN=$O(^PXRMD(801.41,"TYPE",TYPE,DIEN)) Q:DIEN'>0  D  ;DBIA 5133
"RTN","ORINQIV",219,0)
 .. ; PTEXT is 'FINDING ITEM' where 101.41 refers to ^ORD(101.41)
"RTN","ORINQIV",220,0)
 .. S PTEXT=$P($G(^PXRMD(801.41,DIEN,1)),U,5),AFIND=""
"RTN","ORINQIV",221,0)
 .. I PTEXT[101.41 S ^TMP($J,"OR REMDLG",$P(PTEXT,";"))=DIEN
"RTN","ORINQIV",222,0)
 .. F  S AFIND=$O(^PXRMD(801.41,DIEN,3,"B",AFIND)) Q:AFIND=""  D
"RTN","ORINQIV",223,0)
 ... I AFIND[101.41 S ^TMP($J,"OR REMDLG",$P(AFIND,";"))=DIEN
"RTN","ORINQIV",224,0)
 Q
"RTN","ORINQIV",225,0)
 ;
"RTN","ORINQIV",226,0)
IND(DSGPAR) ;
"RTN","ORINQIV",227,0)
 N DIC,DIR,EXIT,PERQOAR
"RTN","ORINQIV",228,0)
 S DIC="^ORD(101.41,",DIC(0)="AEMQZ"
"RTN","ORINQIV",229,0)
 S DIC("S")="I $$ISVALID^ORINQIV(Y,""S"",.DSGPAR)=1"
"RTN","ORINQIV",230,0)
 D ^DIC
"RTN","ORINQIV",231,0)
 I +$P(Y,U)'>0 Q
"RTN","ORINQIV",232,0)
 S EXIT=$$EDIT($P(Y,U),.PERQOAR)
"RTN","ORINQIV",233,0)
 I EXIT=1 Q
"RTN","ORINQIV",234,0)
 W !
"RTN","ORINQIV",235,0)
 S DIR(0)="Y"
"RTN","ORINQIV",236,0)
 S DIR("A")="Convert another Quick Order?"
"RTN","ORINQIV",237,0)
 D ^DIR
"RTN","ORINQIV",238,0)
 I Y=1 D IND(.DSGPAR)
"RTN","ORINQIV",239,0)
 I $D(PERQOAR) D BLDMSG(.PERQOAR)
"RTN","ORINQIV",240,0)
 Q
"RTN","ORINQIV",241,0)
 ;
"RTN","ORINQIV",242,0)
ISCONT(IEN) ;
"RTN","ORINQIV",243,0)
 ;This is use to determine if the Entry from file 101.41 is used in an
"RTN","ORINQIV",244,0)
 ;another entry from file 101.41 or in a reminder dialog.
"RTN","ORINQIV",245,0)
 I $O(^ORD(101.41,"AD",IEN,0)) Q 1
"RTN","ORINQIV",246,0)
 I $D(^TMP($J,"OR REMDLG",IEN))>0 Q 1
"RTN","ORINQIV",247,0)
 Q 0
"RTN","ORINQIV",248,0)
 ;
"RTN","ORINQIV",249,0)
ISIV(IEN) ;
"RTN","ORINQIV",250,0)
 ;This is use to determine if orderable item is marked as a solution or
"RTN","ORINQIV",251,0)
 ;an additive
"RTN","ORINQIV",252,0)
 N PSNODE
"RTN","ORINQIV",253,0)
 S PSNODE=$G(^ORD(101.43,IEN,"PS"))
"RTN","ORINQIV",254,0)
 I $P(PSNODE,U,3)=1 Q 1
"RTN","ORINQIV",255,0)
 I $P(PSNODE,U,4)=1 Q 1
"RTN","ORINQIV",256,0)
 Q 0
"RTN","ORINQIV",257,0)
 ;
"RTN","ORINQIV",258,0)
ISPERQO(IEN) ;
"RTN","ORINQIV",259,0)
 N NUM,RESULT,USER
"RTN","ORINQIV",260,0)
 I $D(^ORD(101.44,"C",IEN)) D  Q RESULT
"RTN","ORINQIV",261,0)
 .S NUM=$O(^ORD(101.44,"C",IEN,"")) Q:NUM'>0
"RTN","ORINQIV",262,0)
 .S USER=$P($G(^ORD(101.44,NUM,0)),U)
"RTN","ORINQIV",263,0)
 .S USER=$P(USER,"USR",2)
"RTN","ORINQIV",264,0)
 .S RESULT=+$P(USER," ")
"RTN","ORINQIV",265,0)
 Q 0
"RTN","ORINQIV",266,0)
 ;
"RTN","ORINQIV",267,0)
ISVALID(IEN,NANSC,DSGPAR) ;
"RTN","ORINQIV",268,0)
 N CONT,NODE,QODSG,PSNODE,RESULT
"RTN","ORINQIV",269,0)
 S NODE=$G(^ORD(101.41,IEN,0))
"RTN","ORINQIV",270,0)
 ;Quit if not a quick order
"RTN","ORINQIV",271,0)
 I $P(NODE,U,4)'="Q" Q 0
"RTN","ORINQIV",272,0)
 ;Disregard order dialog entry does not contain a valid display group
"RTN","ORINQIV",273,0)
 S QODSG=$P(NODE,U,5) I QODSG="" Q 1
"RTN","ORINQIV",274,0)
 I '$D(DSGPAR(QODSG)) Q 0
"RTN","ORINQIV",275,0)
 ;
"RTN","ORINQIV",276,0)
 S CONT=$S($O(^ORD(101.41,"AD",IEN,0)):1,$D(^TMP($J,"OR REMDLG",IEN)):1,1:0)
"RTN","ORINQIV",277,0)
 ;
"RTN","ORINQIV",278,0)
 ;S CONT=$$ISCONT(IEN)
"RTN","ORINQIV",279,0)
 I NANSC="A",CONT=0 Q 0
"RTN","ORINQIV",280,0)
 I NANSC="N",CONT=1 Q 0
"RTN","ORINQIV",281,0)
 S OROI=$$GETOI(IEN) I OROI="" Q 0
"RTN","ORINQIV",282,0)
 S PSNODE=$G(^ORD(101.43,OROI,"PS"))
"RTN","ORINQIV",283,0)
 I $P(PSNODE,U,3)=1 Q 1
"RTN","ORINQIV",284,0)
 I $P(PSNODE,U,4)=1 Q 1
"RTN","ORINQIV",285,0)
 Q 0
"RTN","ORINQIV",286,0)
 ;
"RTN","ORINQIV",287,0)
HELP(NUM) ;
"RTN","ORINQIV",288,0)
 N CNT,TAB,TEXT
"RTN","ORINQIV",289,0)
 S CNT=0,TAB="     "
"RTN","ORINQIV",290,0)
 I NUM=1 D
"RTN","ORINQIV",291,0)
 .S CNT=CNT+1,TEXT(CNT)="By selecting YES this quick order will be converted to a Infusion QO."
"RTN","ORINQIV",292,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",293,0)
 .S CNT=CNT+1,TEXT(CNT)="This quick order will not be able to be converted back to a unit dose quick"
"RTN","ORINQIV",294,0)
 .S CNT=CNT+1,TEXT(CNT)="order. However, you can edit the specific fields of the Infusion quick order in the"
"RTN","ORINQIV",295,0)
 .S CNT=CNT+1,TEXT(CNT)="quick order editor."
"RTN","ORINQIV",296,0)
 I NUM=2 D
"RTN","ORINQIV",297,0)
 .S CNT=CNT+1,TEXT(CNT)="This value defines the type of Infusion quick order that is being setup."
"RTN","ORINQIV",298,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",299,0)
 .S CNT=CNT+1,TEXT(CNT)=TAB_"Select INTERMITTENT to set-up a quick order that should be administered at"
"RTN","ORINQIV",300,0)
 .S CNT=CNT+1,TEXT(CNT)=TAB_"scheduled intervals (Q4H, QDay) or One-Time only, ""over a specified time"
"RTN","ORINQIV",301,0)
 .S CNT=CNT+1,TEXT(CNT)=TAB_"period"" (e.g. ""Infuse over 30 min."")."
"RTN","ORINQIV",302,0)
 .S CNT=CNT+1,TEXT(CNT)=TAB_TAB_"An example is an a IVP/IVPB order."
"RTN","ORINQIV",303,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",304,0)
 .S CNT=CNT+1,TEXT(CNT)=TAB_"Select CONTINUOUS to set-up a quick order that run at a specified ""Rate"""
"RTN","ORINQIV",305,0)
 .S CNT=CNT+1,TEXT(CNT)=TAB_"(_ml/hr, _mcg/kg/min, etc)"
"RTN","ORINQIV",306,0)
 .S CNT=CNT+1,TEXT(CNT)=TAB_TAB_"An example is an a Infusion/drip quick order."
"RTN","ORINQIV",307,0)
 I NUM=3 D
"RTN","ORINQIV",308,0)
 .S CNT=CNT+1,TEXT(CNT)="Select Yes to switch the orderable item from the solution to the additive value in the quick order."
"RTN","ORINQIV",309,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",310,0)
 .S CNT=CNT+1,TEXT(CNT)="Select No to leave the orderable item as the solution in the quick order."
"RTN","ORINQIV",311,0)
 I NUM=4 D
"RTN","ORINQIV",312,0)
 .S CNT=CNT+1,TEXT(CNT)="Select Yes to convert the quick order to an infusion quick order with the"
"RTN","ORINQIV",313,0)
 .S CNT=CNT+1,TEXT(CNT)="selected change. When the conversion is complete you will be drop into the"
"RTN","ORINQIV",314,0)
 .S CNT=CNT+1,TEXT(CNT)="quick order editor to make any changes to the quick order."
"RTN","ORINQIV",315,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",316,0)
 .S CNT=CNT+1,TEXT(CNT)="Select No to stop the conversion process for this quick order."
"RTN","ORINQIV",317,0)
 I NUM<5 D
"RTN","ORINQIV",318,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",319,0)
 .S CNT=CNT+1,TEXT(CNT)="Select SKIP THIS QUICK ORDER to leave the current quick order as an"
"RTN","ORINQIV",320,0)
 .S CNT=CNT+1,TEXT(CNT)="Inpatient quick order and select another quick order to convert."
"RTN","ORINQIV",321,0)
 I NUM=5 D
"RTN","ORINQIV",322,0)
 .S CNT=CNT+1,TEXT(CNT)="Select QO ASSIGNED TO ORDER MENUS, ORDER SETS, OR REMINDER DIALOGS to convert"
"RTN","ORINQIV",323,0)
 .S CNT=CNT+1,TEXT(CNT)="quick orders that are used in one of the following: Order Menus, Order Sets,"
"RTN","ORINQIV",324,0)
 .S CNT=CNT+1,TEXT(CNT)="or Reminder Dialogs."
"RTN","ORINQIV",325,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",326,0)
 .S CNT=CNT+1,TEXT(CNT)="Select QO NOT ASSIGNED TO ANY OF THESE ITEMS to convert quick orders that are"
"RTN","ORINQIV",327,0)
 .S CNT=CNT+1,TEXT(CNT)="not use in the following: Order Menus, Order Sets, or Reminder Dialogs."
"RTN","ORINQIV",328,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",329,0)
 .S CNT=CNT+1,TEXT(CNT)="Select SPECIFIC QUICK ORDER to convert an individual quick order."
"RTN","ORINQIV",330,0)
 I NUM=6 D
"RTN","ORINQIV",331,0)
 .S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",332,0)
 .S CNT=CNT+1,TEXT(CNT)="This conversion utility enables users to convert IV quick orders set-up as"
"RTN","ORINQIV",333,0)
 .S CNT=CNT+1,TEXT(CNT)="Inpatient quick orders to Infusion quick orders. For each quick order,"
"RTN","ORINQIV",334,0)
 .S CNT=CNT+1,TEXT(CNT)="the conversion utility asks a series of questions to populate the minimum"
"RTN","ORINQIV",335,0)
 .S CNT=CNT+1,TEXT(CNT)="prompts needed to convert the quick order. Once the conversion is"
"RTN","ORINQIV",336,0)
 .S CNT=CNT+1,TEXT(CNT)="done, the user is placed into the Infusion quick order editor to add any"
"RTN","ORINQIV",337,0)
 .S CNT=CNT+1,TEXT(CNT)="values to the additional fields in the Infusion quick order, if needed."
"RTN","ORINQIV",338,0)
 .S CNT=CNT+1,TEXT(CNT)="Possible conflicts at the time of conversion will be displayed before entering"
"RTN","ORINQIV",339,0)
 .S CNT=CNT+1,TEXT(CNT)="the editor. An example of a conflict may be that the user should review the"
"RTN","ORINQIV",340,0)
 .S CNT=CNT+1,TEXT(CNT)="strength associated with the additive in the editor."
"RTN","ORINQIV",341,0)
 S CNT=CNT+1,TEXT(CNT)=" "
"RTN","ORINQIV",342,0)
 I NUM<6 S CNT=CNT+1,TEXT(CNT)="Select QUIT THE CONVERSION UTILITY to exit this utility."
"RTN","ORINQIV",343,0)
 S CNT=0 F  S CNT=$O(TEXT(CNT)) Q:CNT'>0  W !,TEXT(CNT)
"RTN","ORINQIV",344,0)
 Q
"RTN","ORINQIV",345,0)
 ;
"RTN","ORMARKER")
0^4^B978608
"RTN","ORMARKER",1,0)
ORMARKER ; SLC/MIP,WAT - Use to get chart markers ;7/30/08  11:25
"RTN","ORMARKER",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**296**;Dec 17, 1997;Build 19
"RTN","ORMARKER",3,0)
 ;;ICRs in use: #4156 $$CVEDT^DGCV, #10061 ^VADPT API
"RTN","ORMARKER",4,0)
CV(RVAL,DFN) ;Combat Vet Marker
"RTN","ORMARKER",5,0)
 N CVE S CVE=$$CVEDT^DGCV(DFN)
"RTN","ORMARKER",6,0)
 I ($P(CVE,"^",1)'=1)!($P(CVE,"^",3)=0) S RVAL(0)="NOTCV" Q
"RTN","ORMARKER",7,0)
 N VASV
"RTN","ORMARKER",8,0)
 D SVC^VADPT
"RTN","ORMARKER",9,0)
 ;Service Branch
"RTN","ORMARKER",10,0)
 S RVAL(0)=""
"RTN","ORMARKER",11,0)
 I $D(VASV(6,1))=1 S RVAL(0)=VASV(6,1)
"RTN","ORMARKER",12,0)
 ;Status
"RTN","ORMARKER",13,0)
 S RVAL(1)=""
"RTN","ORMARKER",14,0)
 I $D(VASV(6,3))=1 S RVAL(1)=VASV(6,3)
"RTN","ORMARKER",15,0)
 ;Service Seperation Date
"RTN","ORMARKER",16,0)
 S RVAL(2)=""
"RTN","ORMARKER",17,0)
 I $D(VASV(6,5))=1 S RVAL(2)=VASV(6,5)
"RTN","ORMARKER",18,0)
 ;Combat Vet Expiration Date
"RTN","ORMARKER",19,0)
 S RVAL(3)=""
"RTN","ORMARKER",20,0)
 I $D(VASV(10,1))=1 S RVAL(3)=VASV(10,1)
"RTN","ORMARKER",21,0)
 ;OIF/OEF
"RTN","ORMARKER",22,0)
 S RVAL(4)=""
"RTN","ORMARKER",23,0)
 I (VASV(11)>0)!(VASV(12)>0)!(VASV(13)>0) S RVAL(4)="OEF/OIF"
"RTN","ORMARKER",24,0)
 ;Remove these later, put these sets for temporary backwards compatiblity
"RTN","ORMARKER",25,0)
 S RVAL(5)=""
"RTN","ORMARKER",26,0)
 S RVAL(6)=""
"RTN","ORMARKER",27,0)
 S RVAL(7)=""
"RTN","ORMARKER",28,0)
 ;Clean up VADPT variables
"RTN","ORMARKER",29,0)
 D KVA^VADPT
"RTN","ORMARKER",30,0)
 Q
"RTN","ORMRA")
0^30^B62138554
"RTN","ORMRA",1,0)
ORMRA ; SLC/MKB/RV - Process Radiology ORM msgs ;2/21/02  15:44 [05/30/06 12:30pm]
"RTN","ORMRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,53,92,110,136,153,174,195,228,243,296**;Dec 17, 1997;Build 19
"RTN","ORMRA",3,0)
 ;DBIA 2968 allows for reading ^DIC(34
"RTN","ORMRA",4,0)
EN ; -- entry point for RA messages
"RTN","ORMRA",5,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMRA",6,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZP",'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMRA",7,0)
 S OREASON=$S($P(OREASON,U,6)="99RAR":$P(OREASON,U,5),1:$P(OREASON,U,2))
"RTN","ORMRA",8,0)
 S:'ORDUZ ORDUZ=DUZ S:'ORLOG ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORMRA",9,0)
 D @ORDCNTRL
"RTN","ORMRA",10,0)
 Q
"RTN","ORMRA",11,0)
 ;
"RTN","ORMRA",12,0)
ZP ; -- Purged
"RTN","ORMRA",13,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))  K ^OR(100,+ORIFN,4)
"RTN","ORMRA",14,0)
 ; - Set status=lapsed, if still active
"RTN","ORMRA",15,0)
 I "^3^5^6^8^"[(U_$P($G(^OR(100,+ORIFN,3)),U,3)_U) D STATUS^ORCSAVE2(ORIFN,14)
"RTN","ORMRA",16,0)
 Q
"RTN","ORMRA",17,0)
 ;
"RTN","ORMRA",18,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMRA",19,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMRA",20,0)
 Q
"RTN","ORMRA",21,0)
 ;
"RTN","ORMRA",22,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMRA",23,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; update Last Activity
"RTN","ORMRA",24,0)
 Q
"RTN","ORMRA",25,0)
 ;
"RTN","ORMRA",26,0)
OK ; -- Order accepted, RA order # assigned [ack]
"RTN","ORMRA",27,0)
 N ORSTS,OBR S ^OR(100,+ORIFN,4)=PKGIFN,ORSTS=5 ; 5=pending
"RTN","ORMRA",28,0)
 ; Ck if also scheduled, else quit
"RTN","ORMRA",29,0)
 S OBR=$O(@ORMSG@(+ORC)) G:'OBR OKQ G:$E(@ORMSG@(OBR),1,3)'="OBR" OKQ
"RTN","ORMRA",30,0)
 S ORSTRT=$$FMDATE^ORM($P(@ORMSG@(OBR),"|",37))
"RTN","ORMRA",31,0)
 D:ORSTRT DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMRA",32,0)
OKQ D STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",33,0)
 ;Save the Radiology pre-certification Account Reference in the PV1
"RTN","ORMRA",34,0)
 ;segment of the HL7 message from the Radiology package to the Order
"RTN","ORMRA",35,0)
 ;File (#100). Support for Patch OR*3.0*228
"RTN","ORMRA",36,0)
 I +$$SWSTAT^IBBAPI() D PRECERT^ORWPFSS2  ;IA #4663
"RTN","ORMRA",37,0)
 Q
"RTN","ORMRA",38,0)
 ;
"RTN","ORMRA",39,0)
XX ; -- Change order
"RTN","ORMRA",40,0)
 N ORDIALOG,ORDG,ORDA,ORX,ORP S:'$L(ORNATR) ORNATR="S"
"RTN","ORMRA",41,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)  S ORIFN=+ORIFN
"RTN","ORMRA",42,0)
 S ORDA=$$ACTION^ORCSAVE("XX",ORIFN,ORNP,OREASON,ORLOG,ORDUZ)
"RTN","ORMRA",43,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMRA",44,0)
 ; -Update sts of order to active, last action to dc/edit:
"RTN","ORMRA",45,0)
 S ORX=+$P($G(^OR(100,ORIFN,3)),U,7)
"RTN","ORMRA",46,0)
 S:$P($G(^OR(100,ORIFN,8,ORX,0)),U,15)="" $P(^(0),U,15)=12
"RTN","ORMRA",47,0)
 S $P(^OR(100,ORIFN,3),U,7)=ORDA D STATUS^ORCSAVE2(ORIFN,6)
"RTN","ORMRA",48,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMRA",49,0)
 ; -If unsigned edit, leave XX unsigned & mark ORX as Sig Not Req'd
"RTN","ORMRA",50,0)
 S ORSIG=$S($P($G(^OR(100,ORIFN,8,ORX,0)),U,4)'=2:1,1:0)
"RTN","ORMRA",51,0)
 D SIGSTS^ORCSAVE2(ORIFN,ORDA):ORSIG,SIGN^ORCSAVE2(ORIFN,,,5,ORX):'ORSIG
"RTN","ORMRA",52,0)
 ; -Update responses, get/save new order text:
"RTN","ORMRA",53,0)
 K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ORDA)
"RTN","ORMRA",54,0)
 S $P(^OR(100,ORIFN,8,ORDA,0),U,14)=ORDA
"RTN","ORMRA",55,0)
 I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMRA",56,0)
 Q
"RTN","ORMRA",57,0)
 ;
"RTN","ORMRA",58,0)
SN ; -- New backdoor order: return NA msg w/ORIFN, or DE msg
"RTN","ORMRA",59,0)
 N ORDIALOG,ORDG,ORP K ^TMP("ORWORD",$J) S:'$L(ORNATR) ORNATR="W"
"RTN","ORMRA",60,0)
 I ORDUZ,'$D(^VA(200,ORDUZ,0)) S ORERR="Invalid entering person" Q
"RTN","ORMRA",61,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMRA",62,0)
 I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMRA",63,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)
"RTN","ORMRA",64,0)
SNQ D EN^ORCSAVE K ^TMP("ORWORD",$J)
"RTN","ORMRA",65,0)
 I '$G(ORIFN) S ORERR="Cannot create new order" Q
"RTN","ORMRA",66,0)
 ;Save DG1 and ZCL segments of HL7 message from backdoor orders
"RTN","ORMRA",67,0)
 D BDOSTR^ORWDBA3
"RTN","ORMRA",68,0)
 ;Save the Radiology pre-certification Account Reference in the PV1
"RTN","ORMRA",69,0)
 ;segment of the HL7 message from the Radiology package to the Order
"RTN","ORMRA",70,0)
 ;File (#100). Support for Patch OR*3.0*228
"RTN","ORMRA",71,0)
 I +$$SWSTAT^IBBAPI() D PRECERT^ORWPFSS2  ;IA #4663
"RTN","ORMRA",72,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR),SIGSTS^ORCSAVE2(ORIFN,1)
"RTN","ORMRA",73,0)
 D STATUS^ORCSAVE2(ORIFN,5) S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMRA",74,0)
 I $G(ORL) S ORP(1)=ORIFN_";1^1" D PRINTS^ORWD1(.ORP,+ORL) ; chart copy
"RTN","ORMRA",75,0)
 Q
"RTN","ORMRA",76,0)
 ;
"RTN","ORMRA",77,0)
DLG ; -- Build ORDIALOG() from msg
"RTN","ORMRA",78,0)
 N OBR,OI,MODS,J,X,Y,ILOC,MODE,CH,CHI,OBX,NTE,REASON
"RTN","ORMRA",79,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","RA OERR EXAM",0))
"RTN","ORMRA",80,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMRA",81,0)
 S ORDIALOG($$PTR("CATEGORY"),1)=$G(ORCAT)
"RTN","ORMRA",82,0)
 S ORDIALOG($$PTR("START DATE/TIME"),1)=ORSTRT
"RTN","ORMRA",83,0)
 S ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMRA",84,0)
 S:$P(ORC,"|",12) ORDIALOG($$PTR("PROVIDER"),1)=+$P(ORC,"|",12)
"RTN","ORMRA",85,0)
D1 S OBR=$O(@ORMSG@(+ORC)) I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMRA",86,0)
 S OI=$$ORDITEM^ORM($P(@ORMSG@(OBR),"|",5))
"RTN","ORMRA",87,0)
 I 'OI S ORERR="Invalid procedure" Q
"RTN","ORMRA",88,0)
 S ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORMRA",89,0)
 S ORDG=$P($G(^ORD(101.43,+OI,"RA")),U,3) S:$L(ORDG) ORDG=+$O(^ORD(100.98,"B",ORDG,0)) I 'ORDG S ORDG=$P(^ORD(101.41,+ORDIALOG,0),U,5) ; Im Type
"RTN","ORMRA",90,0)
 S MODS=$P(@ORMSG@(OBR),"|",19) I $L(MODS) D
"RTN","ORMRA",91,0)
 . F J=1:1:$L(MODS,"~") S X=$P(MODS,"~",J) I $L(X) S Y=$O(^RAMIS(71.2,"B",X,0)) S:Y ORDIALOG($$PTR("MODIFIERS"),J)=Y
"RTN","ORMRA",92,0)
 S ILOC=+$P(@ORMSG@(OBR),"|",20),MODE=$P(@ORMSG@(OBR),"|",31),REASON=$P($P(@ORMSG@(OBR),"|",32),U,2)
"RTN","ORMRA",93,0)
 S:ILOC ORDIALOG($$PTR("IMAGING LOCATION"),1)=ILOC
"RTN","ORMRA",94,0)
 S ORDIALOG($$PTR("MODE OF TRANSPORT"),1)=$S(MODE="WALK":"A",MODE="CART":"S",1:$E(MODE))
"RTN","ORMRA",95,0)
 S:$L(REASON) ORDIALOG($$PTR("STUDY REASON"),1)=REASON
"RTN","ORMRA",96,0)
 I ORDCNTRL="XX" S NTE=+$O(@ORMSG@(OBR)) I NTE,$E($G(@ORMSG@(NTE)),1,3)="NTE" S OREASON=$P(@ORMSG@(NTE),"|",4) ;Tech's Comments
"RTN","ORMRA",97,0)
D2 ; might the procedure be scheduled at this point ??  Not in spec
"RTN","ORMRA",98,0)
 S CH=$$PTR("WORD PROCESSING 1"),CHI=0
"RTN","ORMRA",99,0)
 S OBX=OBR F  S OBX=$O(@ORMSG@(OBX)) Q:OBX'>0  S J=$E(@ORMSG@(OBX),1,3) Q:J="ORC"  Q:J="MSH"  I J="OBX" D
"RTN","ORMRA",100,0)
 . N NAME,VALUE,X0 S VALUE=$P(@ORMSG@(OBX),"|",6)
"RTN","ORMRA",101,0)
 . S NAME=$$UP^XLFSTR($P($P(@ORMSG@(OBX),"|",4),U,2))
"RTN","ORMRA",102,0)
 . I NAME="CONTRACT/SHARING SOURCE" S X0=$G(^DIC(34,+VALUE,0)) S:$L(X0) ORDIALOG($$PTR(NAME),1)=+VALUE,ORDIALOG($$PTR("CATEGORY"),1)=$P(X0,U,2) Q
"RTN","ORMRA",103,0)
 . I NAME="RESEARCH SOURCE" S ORDIALOG($$PTR(NAME),1)=VALUE,ORDIALOG($$PTR("CATEGORY"),1)="R" Q
"RTN","ORMRA",104,0)
 . I NAME="PREGNANT" S ORDIALOG($$PTR(NAME),1)=VALUE Q
"RTN","ORMRA",105,0)
 . I NAME="PRE-OP SCHEDULED DATE/TIME" S ORDIALOG($$PTR(NAME),1)=$$FMDATE^ORM(VALUE) Q
"RTN","ORMRA",106,0)
 . S CHI=CHI+1,^TMP("ORWORD",$J,CH,1,CHI,0)=VALUE
"RTN","ORMRA",107,0)
 S:CHI ^TMP("ORWORD",$J,CH,1,0)="^^"_CHI_U_CHI_U_DT_U,ORDIALOG(CH,1)="^TMP(""ORWORD"",$J,"_CH_",1)"
"RTN","ORMRA",108,0)
 Q
"RTN","ORMRA",109,0)
 ;
"RTN","ORMRA",110,0)
PTR(X) ; -- Returns ptr to prompt in Order Dialog file #101.41
"RTN","ORMRA",111,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORMRA",112,0)
 ;
"RTN","ORMRA",113,0)
SC ; -- Status changed (scheduled, registered, or unverified)
"RTN","ORMRA",114,0)
 N ORSTS,OBR,OR3 ;110
"RTN","ORMRA",115,0)
 S ORSTS=$S(ORDSTS="ZR":6,ORDSTS="ZU":6,1:8),OR3=$G(^OR(100,+ORIFN,3)) ;110
"RTN","ORMRA",116,0)
 G:ORSTS=6 SCQ ;136  Done if active, else get scheduled data
"RTN","ORMRA",117,0)
 S OBR=$O(@ORMSG@(+ORC)) I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMRA",118,0)
 S ORSTRT=$$FMDATE^ORM($P(@ORMSG@(OBR),"|",37))
"RTN","ORMRA",119,0)
 D:ORSTRT DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMRA",120,0)
 I $P(OR3,U,3)=3,$P($G(^OR(100,+ORIFN,8,+$P(OR3,U,7),0)),U,2)="HD" D RL ;If status is hold and current action is hold then release.  Added with 110
"RTN","ORMRA",121,0)
SCQ D STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",122,0)
 Q
"RTN","ORMRA",123,0)
 ;
"RTN","ORMRA",124,0)
RE ; -- Completed, w/results
"RTN","ORMRA",125,0)
 N I,SEG,OBX
"RTN","ORMRA",126,0)
 D STATUS^ORCSAVE2(ORIFN,2)
"RTN","ORMRA",127,0)
 S OBX="" D  ;get Results D/T [from OBR]
"RTN","ORMRA",128,0)
 . N DA,DR,DIE,X,Y,OBR
"RTN","ORMRA",129,0)
 . S DA=+ORIFN,DIE="^OR(100,",OBR=+$O(@ORMSG@(+ORC)),X=""
"RTN","ORMRA",130,0)
 . I OBR,$E($G(@ORMSG@(OBR)),1,3)="OBR" S X=$P(@ORMSG@(OBR),"|",23)
"RTN","ORMRA",131,0)
 . S DR="71////"_$S(X:$$FMDATE^ORM(X),1:+$E($$NOW^XLFDT,1,12)) D ^DIE
"RTN","ORMRA",132,0)
 S I=+ORC F  S I=$O(@ORMSG@(I)) Q:I<1  S SEG=$G(@ORMSG@(I)) Q:$E(SEG,1,3)="ORC"  I $E(SEG,1,3)="OBX" S OBX=I_U_SEG Q  ;first one
"RTN","ORMRA",133,0)
 S $P(^OR(100,+ORIFN,7),U,2)=$S($P(OBX,"|",9)="A":1,1:"")
"RTN","ORMRA",134,0)
 S:'$G(ORNP) ORNP=+$P($G(^OR(100,+ORIFN,0)),U,4)
"RTN","ORMRA",135,0)
 I $L($T(ADD^ORRCACK)) D ADD^ORRCACK(+ORIFN,ORNP) ;Ack stub for prov
"RTN","ORMRA",136,0)
 Q
"RTN","ORMRA",137,0)
 ;
"RTN","ORMRA",138,0)
OH ; -- Held
"RTN","ORMRA",139,0)
 D UPDATE(3,"HD")
"RTN","ORMRA",140,0)
 Q
"RTN","ORMRA",141,0)
 ;
"RTN","ORMRA",142,0)
OC ; -- Cancelled/Unable to accept [ack]
"RTN","ORMRA",143,0)
UA ; -- Unable to accept [ack]
"RTN","ORMRA",144,0)
 S:'$L(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMRA",145,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_U_ORLOG_U_U_OREASON
"RTN","ORMRA",146,0)
 D STATUS^ORCSAVE2(ORIFN,13)
"RTN","ORMRA",147,0)
UD ; -- Unable to discontinue [ack]
"RTN","ORMRA",148,0)
 N DA S DA=+$P(ORIFN,";",2) I DA D
"RTN","ORMRA",149,0)
 . S $P(^OR(100,+ORIFN,8,DA,0),U,15)=13 ;Request rejected
"RTN","ORMRA",150,0)
 . S:$L(OREASON) ^OR(100,+ORIFN,8,DA,1)=OREASON
"RTN","ORMRA",151,0)
 Q
"RTN","ORMRA",152,0)
 ;
"RTN","ORMRA",153,0)
OD ; -- Discontinued
"RTN","ORMRA",154,0)
 S:$G(DGPMT) ORDUZ="" ;auto-dc on movement
"RTN","ORMRA",155,0)
 S ^OR(100,+ORIFN,6)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORDUZ_U_ORLOG_U_U_OREASON
"RTN","ORMRA",156,0)
 D UPDATE(1,"DC")
"RTN","ORMRA",157,0)
 Q
"RTN","ORMRA",158,0)
 ;
"RTN","ORMRA",159,0)
DR ; -- Discontinued [ack]
"RTN","ORMRA",160,0)
 D STATUS^ORCSAVE2(ORIFN,1)
"RTN","ORMRA",161,0)
 Q
"RTN","ORMRA",162,0)
 ;
"RTN","ORMRA",163,0)
UPDATE(ORSTS,ORACT) ; -- continue processing
"RTN","ORMRA",164,0)
 N ORX,ORDA,ORP D:$G(ORSTS) STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",165,0)
 S ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMRA",166,0)
 . S ORDA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,OREASON,ORLOG,ORDUZ)
"RTN","ORMRA",167,0)
 . I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMRA",168,0)
 . D RELEASE^ORCSAVE2(+ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMRA",169,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMRA",170,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMRA",171,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMRA",172,0)
 I 'ORX D  ;no new action created
"RTN","ORMRA",173,0)
 . ;I ORACT="DC" S:'$$ACTV^ORX1(ORNATR) $P(^OR(100,+ORIFN,3),U,7)=0 Q
"RTN","ORMRA",174,0)
 . S:ORACT="HD"&$L(OREASON) ^OR(100,+ORIFN,8,1,1)=OREASON ;pend/sch only
"RTN","ORMRA",175,0)
 I ORACT="DC" D CANCEL^ORCSEND(+ORIFN) S:'$$ACTV^ORX1(ORNATR) $P(^OR(100,+ORIFN,3),U,7)=0
"RTN","ORMRA",176,0)
 Q
"RTN","ORMRA",177,0)
 ;
"RTN","ORMRA",178,0)
RL ;Release hold --entire section added with patch 110
"RTN","ORMRA",179,0)
 S ^OR(100,+ORIFN,8,$P(OR3,U,7),2)=ORLOG_"^"_ORDUZ  ;Set release hold date/time and release hold user
"RTN","ORMRA",180,0)
 S ORNATR=$S($L(ORNATR):ORNATR,1:$P(^OR(100,+ORIFN,8,$P(OR3,U,7),0),U,12)) ;set nature of order for release equal to nature of order for hold if it doesn't exist
"RTN","ORMRA",181,0)
 I $G(ORSTS)="" S ORSTS=6
"RTN","ORMRA",182,0)
 D UPDATE(ORSTS,"RL")
"RTN","ORMRA",183,0)
 Q
"RTN","ORPRPM")
0^33^B64231033
"RTN","ORPRPM",1,0)
ORPRPM ;DAN/SLC Performance Measure; ;9/4/08  08:17
"RTN","ORPRPM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**107,114,119,196,190,225,243,296**;Dec 17, 1997;Build 19
"RTN","ORPRPM",3,0)
 ;
"RTN","ORPRPM",4,0)
 ;DBIA SECTION
"RTN","ORPRPM",5,0)
 ;4195 - EN^PSOTPCUL
"RTN","ORPRPM",6,0)
 ;3744 - $$TESTPAT^VADPT
"RTN","ORPRPM",7,0)
 ;10060- Reference to file 200
"RTN","ORPRPM",8,0)
 ;
"RTN","ORPRPM",9,0)
 ;This routine will print a report indicating the percent of
"RTN","ORPRPM",10,0)
 ;orders entered for a provider by a provider holding the ORES key.
"RTN","ORPRPM",11,0)
 ;The data for the report will be stored in ^TMP as follows:
"RTN","ORPRPM",12,0)
 ;^TMP($J,"SUM",Provider Name,Patient Status)=Total # of order (universe)^Denominator^Numerator^Verbal^Written^Telephone^Policy^Electronically entered^Student entered^Outpatient narcotic orders
"RTN","ORPRPM",13,0)
 ;Where Patient Status is I for inpatient or O for outpatient.
"RTN","ORPRPM",14,0)
 ;
"RTN","ORPRPM",15,0)
 N DIR,ORSD,ORED,ORPROV,ORTYPE,ORPT,ORREP,ORPIECE,Y,DIRUT,DUOUT,DTOUT,ZTRTN,ORDT,ORIEN,ORACT0,ORPVID,PG,REPDT,ORSTOP,ORI,ORJ,ORPAT,ORTOT,ORSTOT,X,ORPVNM,ORORD,ORPTST,ORP,ORWROTE,ORNS,ORFS,ORPFILE
"RTN","ORPRPM",16,0)
 D GETDATE K DIR Q:$D(DIRUT)  ;quit if no dates selected ;get start and end dates
"RTN","ORPRPM",17,0)
 D GETPROV K DIR Q:'$D(ORPROV)!($G(ORPROV)'="ALL"&($D(ORPROV)'=11))!($D(DUOUT))!($D(DTOUT))  ;quit if user didn't select all providers or if didn't choose individual providers or if user timed out or up-arrowed out
"RTN","ORPRPM",18,0)
 D GETOTHER Q:$D(DIRUT)  ;quit if any questions were unanswered in this section
"RTN","ORPRPM",19,0)
 S ZTRTN="DQ^ORPRPM" D QUE^ORUTL1(ZTRTN,"CPRS Performance Monitor")
"RTN","ORPRPM",20,0)
 Q
"RTN","ORPRPM",21,0)
 ;
"RTN","ORPRPM",22,0)
GETDATE ;Prompt for start and end dates
"RTN","ORPRPM",23,0)
 S DIR(0)="DO^:DT:AE",DIR("A")="Enter starting date",DIR("?")="Enter date to begin searching from" D ^DIR Q:$D(DIRUT)  S ORSD=Y
"RTN","ORPRPM",24,0)
 S DIR(0)="DOA^"_ORSD_":DT:AE",DIR("A")="Enter ending date: ",DIR("?")="Enter date to stop searching.  Must be between "_$$FMTE^XLFDT(ORSD,2)_" and "_$$FMTE^XLFDT(DT,2) D ^DIR Q:$D(DIRUT)
"RTN","ORPRPM",25,0)
 S ORED=Y_.24,ORSD=ORSD-.1 ;Set end date to end of day, start date back to include current day
"RTN","ORPRPM",26,0)
 Q  ;End GETDATE
"RTN","ORPRPM",27,0)
 ;
"RTN","ORPRPM",28,0)
GETPROV ;Allow selection of all/single/multiple providers
"RTN","ORPRPM",29,0)
 ;return ORPROV="ALL" for all providers or ORPROV array for individual providers
"RTN","ORPRPM",30,0)
 S DIR(0)="Y",DIR("A")="Do you want ALL providers to appear on this report",DIR("B")="Y",DIR("?")="Enter Yes to search for all providers.  Enter No to select individual providers"  D ^DIR Q:$D(DIRUT)  S ORPROV=$S(Y=1:"ALL",1:"") Q:ORPROV="ALL"
"RTN","ORPRPM",31,0)
 K DIR ;clear DIR variables before getting individual providers
"RTN","ORPRPM",32,0)
 F  D  Q:$D(DIRUT)  ;quit when finished selecting
"RTN","ORPRPM",33,0)
 .S DIR(0)="PO^200:AEQM",DIR("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))",DIR("A")="Select "_$S($D(ORPROV)=11:"another ",1:"")_"provider"
"RTN","ORPRPM",34,0)
 .S DIR("?")="Select providers to appear on report.  Return when finished, ^ to stop processing" D ^DIR Q:$D(DIRUT)  S ORPROV(+Y)=""
"RTN","ORPRPM",35,0)
 Q  ;End GETPROV
"RTN","ORPRPM",36,0)
 ;
"RTN","ORPRPM",37,0)
GETOTHER ;Get order type, patient type, and summary only report response
"RTN","ORPRPM",38,0)
 ;Get order type first
"RTN","ORPRPM",39,0)
 S DIR(0)="S^A:All orders;P:Pharmacy orders only",DIR("A")="Select order category",DIR("B")="P",DIR("?")="Enter P to see pharmacy orders only.  Enter A to see all orders. Enter ^ to quit" D ^DIR Q:$D(DIRUT)  S ORTYPE=Y
"RTN","ORPRPM",40,0)
 K DIR
"RTN","ORPRPM",41,0)
 ;Get patient status
"RTN","ORPRPM",42,0)
 S DIR(0)="S^I:Inpatient;O:Outpatient;B:Both",DIR("A")="Select patient status",DIR("B")="B",DIR("?")="Enter patient status at time of order.  Enter ^ to quit" D ^DIR Q:$D(DIRUT)  S ORPT=Y
"RTN","ORPRPM",43,0)
 K DIR
"RTN","ORPRPM",44,0)
 ;Ask if user desires facility subtotal, summary, detail, or both (detail and summary) reports
"RTN","ORPRPM",45,0)
 S DIR(0)="S^S:Summary (includes provider details);D:Detail (includes order details);B:Both (Summary & Detail);T:Summary Report Totals Only (no provider details)",DIR("A")="Select report",DIR("B")="S"
"RTN","ORPRPM",46,0)
 D ^DIR Q:$D(DIRUT)  S ORREP=Y,ORFS=0 I Y="T" S ORREP="S",ORFS=1
"RTN","ORPRPM",47,0)
 K DIR
"RTN","ORPRPM",48,0)
 Q  ;End GETOTHER
"RTN","ORPRPM",49,0)
 ;
"RTN","ORPRPM",50,0)
DQ ;Come here to do build and print from QUE^ORUTL either direct or tasked
"RTN","ORPRPM",51,0)
 U IO K ^TMP($J) ;clean out temp space
"RTN","ORPRPM",52,0)
 S ORDT=ORSD F  S ORDT=$O(^OR(100,"AF",ORDT)) Q:'ORDT!(ORDT>ORED)  S ORIEN="" F  S ORIEN=$O(^OR(100,"AF",ORDT,ORIEN)) Q:'ORIEN  I $O(^OR(100,"AF",ORDT,ORIEN,0))=1 I $D(^OR(100,ORIEN,8,1,0)) D CHECK
"RTN","ORPRPM",53,0)
 D PRINT^ORPRPM1
"RTN","ORPRPM",54,0)
 K ^TMP($J)
"RTN","ORPRPM",55,0)
 Q
"RTN","ORPRPM",56,0)
 ;
"RTN","ORPRPM",57,0)
CHECK ;If order matches requirements then save
"RTN","ORPRPM",58,0)
 S ORPFILE=$P($G(^OR(100,ORIEN,0)),"^",2) Q:ORPFILE=""  ;Quit if no object of order
"RTN","ORPRPM",59,0)
 I $P(ORPFILE,";",2)["DPT" Q:$$TESTPAT^VADPT(+$P($G(^OR(100,ORIEN,0)),"^",2))  ;225 Quit if test patient
"RTN","ORPRPM",60,0)
 Q:+$P($G(^OR(100,ORIEN,3)),"^",11)'=0  ;190 quit if order type not standard
"RTN","ORPRPM",61,0)
 Q:$P(^ORD(100.98,$P(^OR(100,ORIEN,0),U,11),0),U)="NON-VA MEDICATIONS"  ;225 Quit if Non-VA med entry
"RTN","ORPRPM",62,0)
 S ORPTST=$P($G(^OR(100,ORIEN,0)),"^",12) ;patient status (in/out)
"RTN","ORPRPM",63,0)
 I ORPT'="B" Q:ORPTST'=ORPT  ;Quit if patient status is not 'both' and status doesn't match selected status
"RTN","ORPRPM",64,0)
 S ORNS=$$NMSP^ORCD($P($G(^OR(100,ORIEN,0)),"^",14))
"RTN","ORPRPM",65,0)
 I ORTYPE'="A"&(ORNS'="PS") Q  ;if not getting all types of orders then quit if order is not from pharmacy
"RTN","ORPRPM",66,0)
 I ORPTST="O",ORNS="PS",$G(^OR(100,ORIEN,4))=+$G(^OR(100,ORIEN,4)),$L($T(EN^PSOTPCUL)) Q:$$EN^PSOTPCUL($G(^OR(100,ORIEN,4)))  ;196 Don't count if outpatient pharm order is a transitional pharmacy benefit order
"RTN","ORPRPM",67,0)
 S ORACT0=$G(^OR(100,ORIEN,8,1,0)),ORORD=$P(ORACT0,"^",12) ;ORORD holds nature of order ien
"RTN","ORPRPM",68,0)
 S ORPVID=$P(ORACT0,"^",3) I ORPROV'="ALL" Q:'$D(ORPROV(ORPVID))  ;quit if ordering provider doesn't match user selected provider
"RTN","ORPRPM",69,0)
 S ORPVNM=$$GET1^DIQ(200,ORPVID_",",.01) ;225 get provider name
"RTN","ORPRPM",70,0)
 Q:'$D(^XUSEC("ORES",ORPVID))  ;quit if ordering provider doesn't have ORES key DBIA # 10076 allows direct read of XUSEC
"RTN","ORPRPM",71,0)
 Q:"^1^2^3^5^8^"'[("^"_ORORD_"^")  ;quit if NATURE OF ORDER is not verbal, written, telephoned, policy, or electronically entered
"RTN","ORPRPM",72,0)
 D COUNT ;Count order
"RTN","ORPRPM",73,0)
 Q
"RTN","ORPRPM",74,0)
 ;
"RTN","ORPRPM",75,0)
COUNT ;This section determines how the order should be counted
"RTN","ORPRPM",76,0)
 N OREB,ORPIECE
"RTN","ORPRPM",77,0)
 D ADD(1) ;Add one to universe (total # of orders)
"RTN","ORPRPM",78,0)
 S OREB=$P(ORACT0,"^",13) ;Entered by
"RTN","ORPRPM",79,0)
 S ^TMP($J,"DET",ORPVNM,ORIEN)=$D(^XUSEC("ORES",OREB))&(OREB=ORPVID) ;Mark "HAS ORES" column for detailed listing if entered by = provider and has ORES key
"RTN","ORPRPM",80,0)
 I OREB=ORPVID D ADD(2),ADD(3) Q  ;if order entered by provider then add one to denominator and numerator
"RTN","ORPRPM",81,0)
 I ORNS="PS" I $$OIDEA=1 D ADD(10) Q  ;If order requires wet signature add one to narcotic group
"RTN","ORPRPM",82,0)
 I $$STUDENT D ADD(9) Q  ;If order entered by student add one to student group
"RTN","ORPRPM",83,0)
 S ORPIECE=$S(ORORD=1:4,ORORD=2:5,ORORD=3:6,ORORD=8:7,1:8) D ADD(ORPIECE) ;add to exceptions group for orders not entered by provider
"RTN","ORPRPM",84,0)
 I ORORD'=5 D ADD(2) ;Add to denominator if not policy order
"RTN","ORPRPM",85,0)
 Q
"RTN","ORPRPM",86,0)
 ;
"RTN","ORPRPM",87,0)
ADD(PIECE) ;Add one to storage
"RTN","ORPRPM",88,0)
 S $P(^TMP($J,"SUM",ORPVNM,ORPTST),"^",PIECE)=$P($G(^TMP($J,"SUM",ORPVNM,ORPTST)),"^",PIECE)+1 Q
"RTN","ORPRPM",89,0)
 ;
"RTN","ORPRPM",90,0)
OIDEA() ;Check to see if pharmacy order requires wet signature
"RTN","ORPRPM",91,0)
 ;dbia 3373 allows call to pharmacy API or dbia 221 allows direct read of ^PSDRUG if routine doesn't exist yet
"RTN","ORPRPM",92,0)
 N OI,PSOI,SIGREQ,PSSXOLP,PSSXOLPD,PSSXOLPX,PSSXNODD,PSSPKLX
"RTN","ORPRPM",93,0)
 Q:ORPTST'="O" 0 ;quit if inpatient
"RTN","ORPRPM",94,0)
 S OI=$$VALUE^ORX8(ORIEN,"ORDERABLE") ;get orderable item
"RTN","ORPRPM",95,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2) I PSOI'>0 Q 0 ;quit if no pharmacy orderable item
"RTN","ORPRPM",96,0)
 I $L($T(OIDEA^PSSUTLA1)) S SIGREQ=$$OIDEA^PSSUTLA1(PSOI,"O") Q:SIGREQ=1 1 Q 0 ;If SIGREQ = 1 then wet signature required
"RTN","ORPRPM",97,0)
 S (PSSXOLPD,PSSXNODD)=0
"RTN","ORPRPM",98,0)
 S PSSPKLX=0
"RTN","ORPRPM",99,0)
 K ^TMP($J,"ORPRPM ASP")
"RTN","ORPRPM",100,0)
 D ASP^PSS50(PSOI,,,"ORPRPM ASP")
"RTN","ORPRPM",101,0)
 F PSSXOLP=0:0 S PSSXOLP=$O(^TMP($J,"ORPRPM ASP","")) Q:'PSSXOLP!(PSSXOLPD=1)  D
"RTN","ORPRPM",102,0)
 .K ^TMP($J,"ORPRPM DATA") D DATA^PSS50(PSSXOLP,,(DT-1),,,"ORPRPM DATA") I +^TMP($J,"ORPRPM DATA",0)<0 Q
"RTN","ORPRPM",103,0)
 .I 'PSSPKLX,$G(^TMP($J,"ORPRPM DATA",63))'["O" K ^TMP($J,"ORPRPM DATA") Q
"RTN","ORPRPM",104,0)
 .I PSSPKLX I $G(^TMP($J,"ORPRPM DATA",63))'["U",$G(^TMP($J,"ORPRPM DATA",63))'["I" Q
"RTN","ORPRPM",105,0)
 .S PSSXNODD=1
"RTN","ORPRPM",106,0)
 .S PSSXOLPX=$G(^TMP($J,"ORPRPM DATA",3))
"RTN","ORPRPM",107,0)
 .I PSSXOLPX[1!(PSSXOLPX[2)!((PSSXOLPX[3)&(PSSXOLPX["A")) S PSSXOLPD=1 Q
"RTN","ORPRPM",108,0)
 .I PSSXOLPX[3!(PSSXOLPX[4)!(PSSXOLPX[5) S PSSXOLPD=2
"RTN","ORPRPM",109,0)
 I PSSXOLPD=0,'PSSXNODD S PSSXOLPD=""
"RTN","ORPRPM",110,0)
 K ^TMP($J,"ORPRPM ASP")
"RTN","ORPRPM",111,0)
 K ^TMP($J,"ORPRPM DATA")
"RTN","ORPRPM",112,0)
 Q PSSXOLPD
"RTN","ORPRPM",113,0)
 ;
"RTN","ORPRPM",114,0)
STUDENT() ;Check to see if entered by is a student
"RTN","ORPRPM",115,0)
 ;Check USER CLASS for membership in "STUDENT" CLASS - DBIA 2324
"RTN","ORPRPM",116,0)
 ;Then check PROVIDER CLASS in NEW PERSON file for "STUDENT" - DBIA 10060
"RTN","ORPRPM",117,0)
 N ORCLASS,ORSUB,EXPIRE,ORUSR
"RTN","ORPRPM",118,0)
 D WHATIS^USRLM(OREB,"ORCLASS") ;API to get user class membership
"RTN","ORPRPM",119,0)
 S ORSUB=0,ORUSR=0 F  S ORSUB=$O(ORCLASS(ORSUB)) Q:ORSUB=""!ORUSR  D
"RTN","ORPRPM",120,0)
 .I $$UP^XLFSTR(ORSUB)'["STUDENT" Q  ;User not a member of student class
"RTN","ORPRPM",121,0)
 .I ORDT'<+$P(ORCLASS(ORSUB),"^",4) S EXPIRE=$S(+$P(ORCLASS(ORSUB),"^",5):$P(ORCLASS(ORSUB),"^",5),1:9999999) I ORDT'>EXPIRE S ORUSR=1 ;member of student class and within date range for class
"RTN","ORPRPM",122,0)
 I ORUSR Q 1 ;User identified as a student
"RTN","ORPRPM",123,0)
 K ORCLASS
"RTN","ORPRPM",124,0)
 S DIC=200,DR=53.5,DA=OREB,DIQ="ORCLASS",DIQ(0)="E" D EN^DIQ1
"RTN","ORPRPM",125,0)
 I $G(ORCLASS(200,OREB,53.5,"E"))["STUDENT" Q 1 ;Provider class set to student
"RTN","ORPRPM",126,0)
 Q 0 ;User not a student
"RTN","ORWDX")
0^6^B67409395
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Order dialog utilities ;11/28/2006
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132,141,164,178,187,190,195,215,246,243,283,296**;Dec 17, 1997;Build 19
"RTN","ORWDX",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORWDX",4,0)
 ;Reference to DIC(9.4 supported by IA #2058
"RTN","ORWDX",5,0)
 ;
"RTN","ORWDX",6,0)
ORDITM(Y,FROM,DIR,XREF) ; Subset of orderable items
"RTN","ORWDX",7,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",8,0)
 N I,IEN,CNT,X,DTXT,CURTM,DEFROUTE
"RTN","ORWDX",9,0)
 S DEFROUTE=""
"RTN","ORWDX",10,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",11,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",12,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",13,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",14,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",15,0)
 . . Q:$P(X,U,5)  S I=I+1
"RTN","ORWDX",16,0)
 . . I XREF="S.IVA RX"!(XREF="S.IVB RX") S DEFROUTE=$P($G(^ORD(101.43,IEN,"PS")),U,8)
"RTN","ORWDX",17,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)_U_DEFROUTE
"RTN","ORWDX",18,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)_U_DEFROUTE
"RTN","ORWDX",19,0)
 Q
"RTN","ORWDX",20,0)
ODITMBC(Y,XREF,ODLST) ;
"RTN","ORWDX",21,0)
 N CNT,NM,XRF
"RTN","ORWDX",22,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",23,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",24,0)
 Q
"RTN","ORWDX",25,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",26,0)
 D FNDINFO^ORWDX1(.Y,.ODIEN)
"RTN","ORWDX",27,0)
 Q
"RTN","ORWDX",28,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX",29,0)
 D DLGDEF^ORWDX1(.LST,.DLG)
"RTN","ORWDX",30,0)
 Q
"RTN","ORWDX",31,0)
DLGQUIK(LST,QO) ;(NOT USED)
"RTN","ORWDX",32,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",33,0)
 Q
"RTN","ORWDX",34,0)
LOADRSP(LST,RSPID,TRANS)      ; Load responses from 101.41 or 100
"RTN","ORWDX",35,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",36,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",37,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT,ORLOC S ROOT=""
"RTN","ORWDX",38,0)
 I RSPID["-" S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT^ORWDX2
"RTN","ORWDX",39,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT^ORWDX2
"RTN","ORWDX",40,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)" G XROOT^ORWDX2
"RTN","ORWDX",41,0)
 Q:ROOT=""
"RTN","ORWDX",42,0)
 G XROOT^ORWDX2
"RTN","ORWDX",43,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC,OREVTDF) ;
"RTN","ORWDX",44,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",45,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog, ORAPPT=Appointment
"RTN","ORWDX",46,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN,OREVTYPE,ONPASS
"RTN","ORWDX",47,0)
 N XCNT,XCOMM,XDONE,XX  ;SBR
"RTN","ORWDX",48,0)
 S (XCOMM,XCNT)=""  ;SBR
"RTN","ORWDX",49,0)
 I $G(ORIFN)'="" D  ;SBR problem only occurs on change or renew orders
"RTN","ORWDX",50,0)
 . S XCNT=$O(^OR(100,+ORIFN,4.5,"ID","COMMENT",XCNT))  ;SBR
"RTN","ORWDX",51,0)
 . I XCNT'="" S XCOMM=$P($G(^OR(100,+ORIFN,4.5,XCNT,0)),"^",2)  ;SBR
"RTN","ORWDX",52,0)
 . I XCOMM'="" S XDONE=0,XX="" F  S XX=$O(ORDIALOG("WP",XCOMM,1,XX)) Q:XX=""  D  ;SBR
"RTN","ORWDX",53,0)
 . . I ORDIALOG("WP",XCOMM,1,XX,0)'="" S XDONE=1 Q  ;SBR
"RTN","ORWDX",54,0)
 . I XCOMM'="",'$G(XDONE),$D(ORDIALOG("WP",XCOMM)) K ORDIALOG("WP",XCOMM)  ;SBR
"RTN","ORWDX",55,0)
 S ORCATFN="" I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",56,0)
 ;Remove treating facility if inpatient and IMO order 26.42
"RTN","ORWDX",57,0)
 I $G(^DPT(ORVP,.1))'="",$P($G(^ORD(100.98,ORDG,0)),U)="CLINIC ORDERS" K ORDIALOG("ORTS")
"RTN","ORWDX",58,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",59,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",60,0)
 I $D(ORDIALOG("OREVENT")) S OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",61,0)
 ;=====================================================
"RTN","ORWDX",62,0)
 ; Changed for v26.27 (RV)
"RTN","ORWDX",63,0)
 S ORCAT=$$INPT^ORCD,ORCAT=$S(ORCAT=1:"I",1:"O")
"RTN","ORWDX",64,0)
 ;I $L($G(OREVENT)) D
"RTN","ORWDX",65,0)
 ;. S ONPASS=0
"RTN","ORWDX",66,0)
 ;. S OREVTYPE=$$TYPE^OREVNTX(OREVENT)
"RTN","ORWDX",67,0)
 ;. I OREVTYPE="T" D ISPASS^OREVNTX1(.ONPASS,+OREVENT,"T")
"RTN","ORWDX",68,0)
 ;. S ORCAT=$S(OREVTYPE="A":"I",OREVTYPE="T":"I",ONPASS=1:"O",1:"O")
"RTN","ORWDX",69,0)
 ;E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",70,0)
 ;=====================================================
"RTN","ORWDX",71,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",72,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",73,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",74,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",75,0)
 I DLG="PSO OERR" S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",76,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",77,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",78,0)
 S:DLG="FHW1" ORCAT="I" S:DLG?1"FHW "2.7U1" MEAL" ORCAT="O"
"RTN","ORWDX",79,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",80,0)
 I ORDG=$O(^ORD(100.98,"B","LAB",0)) D  ;use section
"RTN","ORWDX",81,0)
 . N OI,SUB S OI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDX",82,0)
 . S SUB=$P($G(^ORD(101.43,OI,"LR")),U,6),ORDG=$$DGRP^ORMLR(SUB)
"RTN","ORWDX",83,0)
 K:'ORDG ORDG K:'ORIT ORIT ; Dgrp & Quick must be non-zero
"RTN","ORWDX",84,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",85,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",86,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",87,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",88,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",89,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",90,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",91,0)
 I $G(ORWP94) D
"RTN","ORWDX",92,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",93,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",94,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",95,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",96,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",97,0)
 S ORSRC=$G(ORSRC)
"RTN","ORWDX",98,0)
 D DELPI^ORWDX1 ;delete empty PI
"RTN","ORWDX",99,0)
 I $G(ORIFN)="" D  ; new order
"RTN","ORWDX",100,0)
 . D EN^ORCSAVE
"RTN","ORWDX",101,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",102,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",103,0)
 E  D
"RTN","ORWDX",104,0)
 . N OR0
"RTN","ORWDX",105,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",106,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",107,0)
 . D XX^ORCSAVE ; edit order
"RTN","ORWDX",108,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",109,0)
 Q
"RTN","ORWDX",110,0)
SENDED(ORWLST,ORIENS,TS,LOC) ; Release EDOs to svc
"RTN","ORWDX",111,0)
 N OK,ORVP,ORWERR,ORSIGST,ORDA,ORNATURE,ORIX,X,PTEVT,ORIFN,J,EVENT,LOCK,OR3
"RTN","ORWDX",112,0)
 S ORWERR="",ORIX=0,LOC=LOC_";SC("
"RTN","ORWDX",113,0)
 F  S ORIX=$O(ORIENS(ORIX)) Q:'ORIX  D  Q:ORWERR]""
"RTN","ORWDX",114,0)
 . S (ORIFN,ORWLST(ORIX))=ORIENS(ORIX)
"RTN","ORWDX",115,0)
 . S PTEVT=$P(^OR(100,+ORIFN,0),U,17)
"RTN","ORWDX",116,0)
 . I PTEVT D
"RTN","ORWDX",117,0)
 .. I $D(EVENT(PTEVT)) S LOCK=1 Q
"RTN","ORWDX",118,0)
 .. S LOCK=$$LCKEVT^ORX2(PTEVT) S:LOCK EVENT(PTEVT)=""
"RTN","ORWDX",119,0)
 . I 'LOCK S ORWERR="1^delayed event is locked - another user is processing orders for this event" S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",120,0)
 . S ORDA=$P(ORIFN,";",2) S:'ORDA ORDA=1
"RTN","ORWDX",121,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORWDX",122,0)
 . I $D(^OR(100,+ORIFN,8,ORDA,0)) D
"RTN","ORWDX",123,0)
 .. S ORSIGST=$P($G(^(0)),U,4),ORNATURE=$P($G(^(0)),U,12) ;naked references refer to OR(100,+ORIFN,8,ORDA on line above
"RTN","ORWDX",124,0)
 . S OK=$$LOCK1^ORX2(ORIFN) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",125,0)
 . I OK,$G(LOCK) D
"RTN","ORWDX",126,0)
 .. S OR3=$G(^OR(100,+ORIFN,3)) I $P(OR3,"^",3)'=10!($P(OR3,"^",9)]"") D UNLK1^ORX2(ORIENS(ORIX)) Q  ;order already released or has a parent
"RTN","ORWDX",127,0)
 .. S:$G(LOC) $P(^OR(100,+ORIFN,0),U,10)=LOC ;set location
"RTN","ORWDX",128,0)
 .. S:$G(TS) $P(^OR(100,+ORIFN,0),U,13)=TS ;set specialty 
"RTN","ORWDX",129,0)
 .. D EN2^ORCSEND(ORIENS(ORIX),ORSIGST,ORNATURE,.ORWERR),UNLK1^ORX2(ORIENS(ORIX)) ;add ,LOCK to if statement for 195
"RTN","ORWDX",130,0)
 . I $L(ORWERR) S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",131,0)
 . E  D
"RTN","ORWDX",132,0)
 .. S PTEVT=$P($G(^OR(100,+ORIENS(ORIX),0)),U,17)
"RTN","ORWDX",133,0)
 .. D:$$TYPE^OREVNTX(PTEVT)="M" SAVE^ORMEVNT1(ORIENS(ORIX),PTEVT,2)
"RTN","ORWDX",134,0)
 . S X="RS"
"RTN","ORWDX",135,0)
 . S $P(ORWLST(ORIX),U,2)=X
"RTN","ORWDX",136,0)
 S J=0 F  S J=$O(EVENT(J)) Q:'+J  D UNLEVT^ORX2(J) ;195
"RTN","ORWDX",137,0)
 Q
"RTN","ORWDX",138,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign
"RTN","ORWDX",139,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code
"RTN","ORWDX",140,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",141,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X,I
"RTN","ORWDX",142,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",143,0)
 F I="LR","VBEC" S X=+$O(^DIC(9.4,"C",I,0)) S:X ORLR(X)=1
"RTN","ORWDX",144,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",145,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",146,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",147,0)
 . S ORBEF=0
"RTN","ORWDX",148,0)
 . I '$D(^OR(100,+ORDERID,0)) Q
"RTN","ORWDX",149,0)
 . I $D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",150,0)
 . S:$D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) ORWNATR=$S($P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),"^",4)=3:"",1:ORWNATR)
"RTN","ORWDX",151,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",152,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",153,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",154,0)
 .. I $G(ORLR(+$P(^OR(100,+ORDERID,0),U,14))),'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",155,0)
 ... I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",156,0)
 .. N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",157,0)
 .. I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",158,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",159,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",160,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",161,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",162,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",163,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",164,0)
 Q
"RTN","ORWDX",165,0)
DLGID(VAL,ORIFN) ; return dlg IEN for order
"RTN","ORWDX",166,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",167,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",168,0)
 Q
"RTN","ORWDX",169,0)
FORMID(VAL,ORIFN)  ; Base dlg FormID for an order
"RTN","ORWDX",170,0)
 N DLG
"RTN","ORWDX",171,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",172,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",173,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",174,0)
 Q
"RTN","ORWDX",175,0)
AGAIN(VAL,DLG)  ; return true to keep dlg for another order
"RTN","ORWDX",176,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",177,0)
 Q
"RTN","ORWDX",178,0)
DGRP(VAL,DLG)   ; Display grp pointer for a dlg
"RTN","ORWDX",179,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",180,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",181,0)
 Q
"RTN","ORWDX",182,0)
DGNM(VAL,NM) ; Display grp pointer for name
"RTN","ORWDX",183,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",184,0)
 Q
"RTN","ORWDX",185,0)
WRLST(LST,LOC) ; List of dlgs for writing orders
"RTN","ORWDX",186,0)
 G WRLST1^ORWDX1
"RTN","ORWDX",187,0)
MSG(LST,IEN) ; Msg text for orderable item
"RTN","ORWDX",188,0)
 N I
"RTN","ORWDX",189,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",190,0)
 Q
"RTN","ORWDX",191,0)
DISMSG(VAL,IEN) ; Disabled mge for ordering dlg
"RTN","ORWDX",192,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",193,0)
 Q
"RTN","ORWDX",194,0)
LOCK(OK,DFN) ; Attempt to lock pt for ordering
"RTN","ORWDX",195,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",196,0)
 Q
"RTN","ORWDX",197,0)
UNLOCK(OK,DFN) ; Unlock pt for ordering
"RTN","ORWDX",198,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",199,0)
 Q
"RTN","ORWDX",200,0)
LOCKORD(OK,ORIFN) ; Attempt to lock order
"RTN","ORWDX",201,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",202,0)
 Q
"RTN","ORWDX",203,0)
UNLKORD(OK,ORIFN) ; Unlock order
"RTN","ORWDX",204,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",205,0)
 Q
"RTN","ORWDX",206,0)
UNLKOTH(OK,ORIFN) ; Unlock pt not by this session
"RTN","ORWDX",207,0)
 K ^XTMP("ORPTLK-"_ORIFN) S OK=1
"RTN","ORWDX",208,0)
 Q
"RTN","ORWDX1")
0^34^B52053311
"RTN","ORWDX1",1,0)
ORWDX1 ; SLC/KCM/REV - Utilities for Order Dialogs ;09/09/2008
"RTN","ORWDX1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,187,195,215,243,296**;Dec 17, 1997;Build 19
"RTN","ORWDX1",3,0)
 ;
"RTN","ORWDX1",4,0)
WRLST(LST,LOC) ; Return list of dialogs for writing orders
"RTN","ORWDX1",5,0)
 ; .Y(n): DlgName^ListBox Text
"RTN","ORWDX1",6,0)
WRLST1 N ANENT
"RTN","ORWDX1",7,0)
 S LOC=+$G(LOC)_";SC(" I 'LOC S LOC=""
"RTN","ORWDX1",8,0)
 S ANENT="ALL^"_LOC_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","ORWDX1",9,0)
 D WRLSTB(.LST) Q:$D(LST)>1  ; check ORWDX WRITE ORDERS first
"RTN","ORWDX1",10,0)
 N ORX,X0,X5,ORERR,I,SEQ,IEN,DGRP,FID,TXT,TYP
"RTN","ORWDX1",11,0)
 D GETLST^XPAR(.ORX,ANENT,"ORWOR WRITE ORDERS LIST","Q",.ORERR) Q:ORERR
"RTN","ORWDX1",12,0)
 S I=0 F  S I=$O(ORX(I)) Q:'I  D
"RTN","ORWDX1",13,0)
 . S SEQ=+ORX(I),IEN=$P(ORX(I),U,2),X0=$G(^ORD(101.41,+IEN,0)),X5=$G(^(5))
"RTN","ORWDX1",14,0)
 . S DGRP=+$P(X0,U,5),FID=+$P(X5,U,5),TXT=$P(X5,U,4),TYP=$P(X0,U,4)
"RTN","ORWDX1",15,0)
 . S:'$L(TXT) TXT=$P(X0,U,2)
"RTN","ORWDX1",16,0)
 . I $P(X0,U,4)="M" S:'FID FID=1001
"RTN","ORWDX1",17,0)
 . S LST(SEQ)=IEN_";"_FID_";"_DGRP_";"_TYP_U_TXT
"RTN","ORWDX1",18,0)
 Q
"RTN","ORWDX1",19,0)
WRLSTB(LST)     ; return menu from which Write Orders list is built
"RTN","ORWDX1",20,0)
 N MNU,SEQ,IEN,ITM,TXT,FID,DGRP,X,TYP
"RTN","ORWDX1",21,0)
 S MNU=$$GET^XPAR(ANENT,"ORWDX WRITE ORDERS LIST",1,"I") Q:'MNU
"RTN","ORWDX1",22,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,MNU,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDX1",23,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.41,MNU,10,"B",SEQ,IEN)) Q:'IEN  D
"RTN","ORWDX1",24,0)
 . . S X=$G(^ORD(101.41,MNU,10,IEN,0)),ITM=+$P(X,U,2),TXT=$P(X,U,4)
"RTN","ORWDX1",25,0)
 . . S X=$G(^ORD(101.41,ITM,5)),FID=+$P(X,U,5)
"RTN","ORWDX1",26,0)
 . . S X=$G(^ORD(101.41,ITM,0)),TYP=$P(X,U,4),DGRP=+$P(X,U,5)
"RTN","ORWDX1",27,0)
 . . S:'$L(TXT) TXT=$P(X,U,2)
"RTN","ORWDX1",28,0)
 . . I TYP="M" S:'FID FID=1001
"RTN","ORWDX1",29,0)
 . . S LST(SEQ)=ITM_";"_FID_";"_DGRP_";"_TYP_U_TXT
"RTN","ORWDX1",30,0)
 Q
"RTN","ORWDX1",31,0)
DELPI ; delete PI from ORDIALOG if PI = ""
"RTN","ORWDX1",32,0)
 ;Called from SAVE^ORWDX
"RTN","ORWDX1",33,0)
 N ORPI S ORPI=0
"RTN","ORWDX1",34,0)
 S ORPI=$O(^ORD(101.41,"B","OR GTX PATIENT INSTRUCTIONS",ORPI))
"RTN","ORWDX1",35,0)
 Q:'$D(ORDIALOG(ORPI))
"RTN","ORWDX1",36,0)
 I '$D(ORDIALOG(ORPI,1)) K ORDIALOG(ORPI),ORDIALOG("WP",ORPI) Q
"RTN","ORWDX1",37,0)
 N PINODE,PITX
"RTN","ORWDX1",38,0)
 S PITX="",PINODE=$G(ORDIALOG(ORPI,1))
"RTN","ORWDX1",39,0)
 S PITX=$G(@PINODE@(1,0))
"RTN","ORWDX1",40,0)
 S PITX=$TR(PITX," ","")
"RTN","ORWDX1",41,0)
 I '$L(PITX) K ORDIALOG(ORPI),ORDIALOG("WP",ORPI) Q
"RTN","ORWDX1",42,0)
 N ORSIG S ORSIG=+$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX1",43,0)
 I $$STR^ORWDXR(ORSIG)[$$STR^ORWDXR(ORPI) S ORDIALOG(ORPI,"FORMAT")="@"
"RTN","ORWDX1",44,0)
 Q
"RTN","ORWDX1",45,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX1",46,0)
 N ODI,CRTM,FRM,XX
"RTN","ORWDX1",47,0)
 S FRM="",CRTM=$$NOW^XLFDT
"RTN","ORWDX1",48,0)
 F  S FRM=$O(^ORD(101.43,XRF,FRM)) Q:FRM=""  D
"RTN","ORWDX1",49,0)
 . S ODI=0 F  S ODI=$O(^ORD(101.43,XRF,FRM,ODI)) Q:'ODI  D
"RTN","ORWDX1",50,0)
 .. S XX=^ORD(101.43,XRF,FRM,ODI)
"RTN","ORWDX1",51,0)
 .. I +$P(XX,U,3),$P(XX,U,3)<CRTM Q
"RTN","ORWDX1",52,0)
 .. I ODI=ODIEN D
"RTN","ORWDX1",53,0)
 ... S NM=NM+1
"RTN","ORWDX1",54,0)
 ... I 'XX S Y(NM)=ODIEN_U_$P(XX,U,2)_U_$P(XX,U,2)
"RTN","ORWDX1",55,0)
 ... E  S Y(NM)=ODIEN_U_$P(XX,U,2)_$C(9)_"<"_$P(XX,U,4)_">"_U_$P(XX,U,4)
"RTN","ORWDX1",56,0)
 Q
"RTN","ORWDX1",57,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX1",58,0)
 N I,IEN,ILST,X0,X2,XW  S ILST=0
"RTN","ORWDX1",59,0)
 I $O(^ORD(101.41,"AB",DLG,0))>0 S DLG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX1",60,0)
 E  S DLG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX1",61,0)
 Q:'DLG
"RTN","ORWDX1",62,0)
 S I=0 F  S I=$O(^ORD(101.41,DLG,10,I)) Q:I'>0  D
"RTN","ORWDX1",63,0)
 . S X0=$G(^ORD(101.41,DLG,10,I,0)),X2=$G(^(2)),IEN=+$P(X0,U,2)
"RTN","ORWDX1",64,0)
 . S ILST=ILST+1,LST(ILST)=U_IEN_U_$P(X2,U,1,7)
"RTN","ORWDX1",65,0)
 . I $P(X0,U,11) S $P(LST(ILST),U,11)=1
"RTN","ORWDX1",66,0)
 . S $P(LST(ILST),U)=$P($G(^ORD(101.41,IEN,1)),U,3)
"RTN","ORWDX1",67,0)
 . I $P($G(^ORD(101.41,IEN,0)),U)="OR GTX ADDITIVE" S $P(LST(ILST),U)="ADDITIVE"
"RTN","ORWDX1",68,0)
 . I $P($G(^ORD(101.41,IEN,0)),U)="OR GTX ADDL DIETS" S $P(LST(ILST),U)="ADDLDIETS"
"RTN","ORWDX1",69,0)
 . I $L($P(LST(ILST),U))=0 S $P(LST(ILST),U)="ID"_IEN
"RTN","ORWDX1",70,0)
 . I $D(^ORD(101.41,DLG,10,"DAD",IEN)) D
"RTN","ORWDX1",71,0)
 .. N SEQ,DA,CHILD S CHILD=""
"RTN","ORWDX1",72,0)
 .. S SEQ=0 F  S SEQ=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ)) Q:'SEQ  D
"RTN","ORWDX1",73,0)
 ... S DA=0 F  S DA=$O(^ORD(101.41,DLG,10,"DAD",IEN,SEQ,DA)) Q:'DA  D
"RTN","ORWDX1",74,0)
 .... S CHILD=CHILD_+$P($G(^ORD(101.41,DLG,10,DA,0)),U,2)_"~"
"RTN","ORWDX1",75,0)
 .. S $P(LST(ILST),U,10)=CHILD
"RTN","ORWDX1",76,0)
 Q
"RTN","ORWDX1",77,0)
 ;
"RTN","ORWDX1",78,0)
CHANGE(ORLST,ORCLST,DFN,ISIMO) ;
"RTN","ORWDX1",79,0)
 N CATCH,CHANGE,CNT,INP,INPDIEN,IVM,IVMDIEN,ORIEN,ORLOC,OR3,ORDG
"RTN","ORWDX1",80,0)
 N CIEN,DIAL,TDIAL,TDIEN,UDIEN,QORDDG,PACKIEN
"RTN","ORWDX1",81,0)
 S (INP,IVM,INPDIEN,IVMDIEN,UDIEN)=0
"RTN","ORWDX1",82,0)
 S (TDIAL,TDIEN)=0
"RTN","ORWDX1",83,0)
 S INP=$O(^ORD(101.41,"B","PSJ OR PAT OE","")) Q:INP'>0
"RTN","ORWDX1",84,0)
 S IVM=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE","")) Q:IVM'>0
"RTN","ORWDX1",85,0)
 S TDIAL=$O(^ORD(101.41,"B","OR GXTEXT WORD PROCESSING ORDER","")) Q:TDIAL'>0
"RTN","ORWDX1",86,0)
 S INPDIEN=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS","")) Q:INPDIEN'>0
"RTN","ORWDX1",87,0)
 S IVMDIEN=$O(^ORD(100.98,"B","IV MEDICATIONS","")) Q:IVMDIEN'>0
"RTN","ORWDX1",88,0)
 S UDIEN=$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS","")) Q:UDIEN'>0
"RTN","ORWDX1",89,0)
 S TIEN=$O(^ORD(100.98,"B","NURSING","")) Q:TIEN'>0
"RTN","ORWDX1",90,0)
 S CIEN=$O(^ORD(100.98,"B","CLINIC ORDERS","")) Q:CIEN'>0
"RTN","ORWDX1",91,0)
 S CNT=0 F  S CNT=$O(ORCLST(CNT)) Q:CNT'>0  D
"RTN","ORWDX1",92,0)
 .S CHANGE=0
"RTN","ORWDX1",93,0)
 .S ORIEN=$P($G(ORCLST(CNT)),U),ORIEN=$P(ORIEN,";")
"RTN","ORWDX1",94,0)
 .S ORDG=$P($G(^OR(100,ORIEN,0)),U,11)
"RTN","ORWDX1",95,0)
 .S ORLOC=$P($G(ORCLST(CNT)),U,2)
"RTN","ORWDX1",96,0)
 .S OR3=$G(^OR(100,ORIEN,3))
"RTN","ORWDX1",97,0)
 .S DIAL=$P(OR3,U,4)
"RTN","ORWDX1",98,0)
 .;Remove Treating Speciality if the order location is the clinic
"RTN","ORWDX1",99,0)
 .I $P($G(^OR(100,ORIEN,0)),U,10)=(ORLOC_";SC("),$P($G(^SC(ORLOC,0)),U,3)="C" D  Q
"RTN","ORWDX1",100,0)
 ..S $P(^OR(100,ORIEN,0),U,13)=""
"RTN","ORWDX1",101,0)
 .;
"RTN","ORWDX1",102,0)
 .;CHANGE PATIENT LOCATION AND PATIENT STATUS.
"RTN","ORWDX1",103,0)
 .S $P(^OR(100,ORIEN,0),U,10)=ORLOC_";SC("
"RTN","ORWDX1",104,0)
 .S PACKIEN=$P(^OR(100,ORIEN,0),U,14)
"RTN","ORWDX1",105,0)
 .I $$GET1^DIQ(9.4,PACKIEN_",",1)'="PSO" S $P(^OR(100,ORIEN,0),U,12)="I"
"RTN","ORWDX1",106,0)
 .;
"RTN","ORWDX1",107,0)
 .;Check for IMO orders Nursing Dialog problem
"RTN","ORWDX1",108,0)
 .S CATCH=$P($G(^OR(100,ORIEN,0)),U,11)
"RTN","ORWDX1",109,0)
 .;
"RTN","ORWDX1",110,0)
 .S $P(^OR(100,ORIEN,0),U,11)=$S(DIAL=(IVM_";ORD(101.41,"):IVMDIEN,DIAL=(INP_";ORD(101.41,"):INPDIEN,DIAL=(TDIAL_";ORD(101.41,"):TIEN,1:CATCH)
"RTN","ORWDX1",111,0)
 .;
"RTN","ORWDX1",112,0)
 .;Check for Quick Order Dialog
"RTN","ORWDX1",113,0)
 .I CATCH=$P($G(^OR(100,ORIEN,0)),U,11),ISIMO=1 D
"RTN","ORWDX1",114,0)
 ..S QORDDG=$P($G(^ORD(101.41,+DIAL,0)),U,5)
"RTN","ORWDX1",115,0)
 ..I QORDDG=UDIEN!(QORDDG=INPDIEN) S $P(^OR(100,ORIEN,0),U,11)=INPDIEN,DIAL=(INP_";ORD(101.41,") Q
"RTN","ORWDX1",116,0)
 ..I QORDDG=IVMDIEN S $P(^OR(100,ORIEN,0),U,11)=IVMDIEN,DIAL=(IVM_";ORD(101.41,") Q
"RTN","ORWDX1",117,0)
 ..I QORDDG=TIEN S $P(^OR(100,ORIEN,0),U,11)=TIEN,DIAL=(TDIAL_";ORD(101.41,") Q
"RTN","ORWDX1",118,0)
 .;
"RTN","ORWDX1",119,0)
 .;Add treating spec if Inpatient order
"RTN","ORWDX1",120,0)
 .;I (ISIMO=1)&(DIAL=(IVM_";ORD(101.41,"))!(DIAL=(INP_";ORD(101.41,")) D
"RTN","ORWDX1",121,0)
 .;.S $P(^OR(100,ORIEN,0),U,13)=+$G(^DPT(DFN,.103))
"RTN","ORWDX1",122,0)
 .I ISIMO=0 S $P(^OR(100,ORIEN,0),U,13)=+$G(^DPT(DFN,.103))
"RTN","ORWDX1",123,0)
 Q
"RTN","ORWDX1",124,0)
 ;
"RTN","ORWDX1",125,0)
STCHANGE(ORY,DFN,ORYARR) ;
"RTN","ORWDX1",126,0)
 N CNT,DONE,NODE,PHARMID,STR,STATUS
"RTN","ORWDX1",127,0)
 S ORY=0,DONE=0
"RTN","ORWDX1",128,0)
 I '$$PATCH^XPDUTL("PSS*1.0*93") Q
"RTN","ORWDX1",129,0)
 S CNT=0 F  S CNT=$O(ORYARR(CNT)) Q:CNT'>0!(DONE>0)  D
"RTN","ORWDX1",130,0)
 . S NODE=$G(ORYARR(CNT))
"RTN","ORWDX1",131,0)
 . S PHARMID=$P(NODE,U),STATUS=$P(NODE,U,2)
"RTN","ORWDX1",132,0)
 . I $$UP^XLFSTR(STATUS)'=$$STATUS^PSSORUTE(DFN,PHARMID) S ORY=1,DONE=1
"RTN","ORWDX1",133,0)
 Q
"RTN","ORWDX1",134,0)
ORDMATCH(ORY,DFN,ORYARR) ;
"RTN","ORWDX1",135,0)
 N ACTION,CNT,IEN,MATCH,ORDERID,STATUS
"RTN","ORWDX1",136,0)
 S CNT=0,MATCH=1
"RTN","ORWDX1",137,0)
 F  S CNT=$O(ORYARR(CNT)) Q:CNT'>0!(MATCH=0)  D
"RTN","ORWDX1",138,0)
 . S ORDERID=$P(ORYARR(CNT),U),STATUS=$P(ORYARR(CNT),U,2)
"RTN","ORWDX1",139,0)
 . I ORDERID=0,$G(ACTION)="" Q
"RTN","ORWDX1",140,0)
 . S IEN=$P(ORDERID,";"),ACTION=$P(ORDERID,";",2)
"RTN","ORWDX1",141,0)
 . I STATUS=$P($G(^OR(100,IEN,3)),U,3) Q
"RTN","ORWDX1",142,0)
 . I $P($G(^ORD(100.01,STATUS,0)),U)="DISCONTINUED/EDIT" Q
"RTN","ORWDX1",143,0)
 . ;S MATCH=0
"RTN","ORWDX1",144,0)
 . I $P($G(^OR(100,IEN,8,ACTION,0)),U,15)'=STATUS S MATCH=0
"RTN","ORWDX1",145,0)
 S ORY=MATCH
"RTN","ORWDX1",146,0)
 Q
"RTN","ORWDX1",147,0)
 ;
"RTN","ORWDX1",148,0)
DCREN(ORY,ORYARR) ;
"RTN","ORWDX1",149,0)
 N ACT,CNT,CNT1,I,OR3,ORG,ORGID,ORID,TEXT,STATUS
"RTN","ORWDX1",150,0)
 S CNT1=0
"RTN","ORWDX1",151,0)
 S CNT=0 F  S CNT=$O(ORYARR(CNT)) Q:CNT'>0  D
"RTN","ORWDX1",152,0)
 .S ORGID=ORYARR(CNT)
"RTN","ORWDX1",153,0)
 .S ORID=+ORGID,ACT=$P(ORGID,";",2),TEXT=""
"RTN","ORWDX1",154,0)
 .S OR3=$G(^OR(100,ORID,3))
"RTN","ORWDX1",155,0)
 .;Make sure current order status is pending
"RTN","ORWDX1",156,0)
 .I $P($G(^ORD(100.01,$P(OR3,U,3),0)),U)'="PENDING" Q
"RTN","ORWDX1",157,0)
 .S ORG=$P($G(OR3),U,5) Q:ORG'>0
"RTN","ORWDX1",158,0)
 .;do not add original order if it is expired
"RTN","ORWDX1",159,0)
 .S STATUS=$P(^OR(100,ORG,3),U,3)
"RTN","ORWDX1",160,0)
 .I $P($G(^ORD(100.01,STATUS,0)),U)="EXPIRED" Q
"RTN","ORWDX1",161,0)
 .;Do not add original order if Stop date has pass
"RTN","ORWDX1",162,0)
 .I $P(^OR(100,ORG,0),U,9)'>$$NOW^XLFDT Q
"RTN","ORWDX1",163,0)
 .;make sure current order is a renewed order
"RTN","ORWDX1",164,0)
 .I $P(OR3,U,11)'=2 Q
"RTN","ORWDX1",165,0)
 .S ACT=+$P($G(^OR(100,ORG,3)),U,7)
"RTN","ORWDX1",166,0)
 .S CNT1=CNT1+1,ORY(CNT1)=ORGID_U_$P(OR3,U,5)_";"_ACT_U_TEXT
"RTN","ORWDX1",167,0)
 Q
"RTN","ORWDX1",168,0)
DCORIG(ORY,ORIEN) ;
"RTN","ORWDX1",169,0)
 S $P(^OR(100,+ORIEN,6),U,9)=1
"RTN","ORWDX1",170,0)
 Q
"RTN","ORWDX1",171,0)
UNDCORIG(ORY,ORYARR) ;
"RTN","ORWDX1",172,0)
 N CNT
"RTN","ORWDX1",173,0)
 S CNT=0 F  S CNT=$O(ORYARR(CNT)) Q:CNT'>0  S $P(^OR(100,+ORYARR(CNT),6),U,9)=0
"RTN","ORWDX1",174,0)
 Q
"RTN","ORWDX1",175,0)
PATWARD(ORY,DFN) ;
"RTN","ORWDX1",176,0)
 N TEMP
"RTN","ORWDX1",177,0)
 S ORY=""
"RTN","ORWDX1",178,0)
 I $G(^DPT(DFN,.1))="" Q
"RTN","ORWDX1",179,0)
 S TEMP=^DPT(DFN,.1)
"RTN","ORWDX1",180,0)
 S ORY=TEMP_U_+$G(^DIC(42,+$O(^DIC(42,"B",TEMP,0)),44))
"RTN","ORWDX1",181,0)
 Q
"RTN","ORWDX1",182,0)
 ;
"RTN","ORWDX1",183,0)
ISPEND(ORIFN) ;Is the order's status pending?
"RTN","ORWDX1",184,0)
 N ISPEND,PENDST,N3 S ISPEND=0
"RTN","ORWDX1",185,0)
 Q:'$D(^OR(100,+ORIFN,3))
"RTN","ORWDX1",186,0)
 S PENDST=$O(^ORD(100.01,"B","PENDING",0))
"RTN","ORWDX1",187,0)
 S N3=$G(^OR(100,+ORIFN,3))
"RTN","ORWDX1",188,0)
 I $P(N3,U,3)=PENDST S ISPEND=1
"RTN","ORWDX1",189,0)
 Q ISPEND
"RTN","ORWDXM3")
0^35^B72094070
"RTN","ORWDXM3",1,0)
ORWDXM3 ; SLC/KCM/JLI - Quick Orders ;10/27/2008
"RTN","ORWDXM3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,185,187,190,195,215,243,303,296**;Dec 17, 1997;Build 19
"RTN","ORWDXM3",3,0)
 ;
"RTN","ORWDXM3",4,0)
VALCOUNT(NAME,ORDIALOG) ;
"RTN","ORWDXM3",5,0)
 N COUNT,IEN,NUM
"RTN","ORWDXM3",6,0)
 S NUM=0,COUNT=0
"RTN","ORWDXM3",7,0)
 S IEN=$P($G(ORDIALOG("B",NAME)),U,2) Q:IEN'>0
"RTN","ORWDXM3",8,0)
 F  S NUM=$O(ORDIALOG(IEN,NUM)) Q:+NUM'>0  S COUNT=COUNT+1
"RTN","ORWDXM3",9,0)
 Q COUNT
"RTN","ORWDXM3",10,0)
 ;
"RTN","ORWDXM3",11,0)
ISMISSFL(ORDIALOG,IVTYPE) ;
"RTN","ORWDXM3",12,0)
 N ADDCNT,RESULT,SOLCNT,STRCNT
"RTN","ORWDXM3",13,0)
 S RESULT=0
"RTN","ORWDXM3",14,0)
 S ADDCNT=$$VALCOUNT("ADDITIVE",.ORDIALOG)
"RTN","ORWDXM3",15,0)
 S STRCNT=$$VALCOUNT("STRENGTH",.ORDIALOG)
"RTN","ORWDXM3",16,0)
 S SOLCNT=$$VALCOUNT("SOLUTION",.ORDIALOG)
"RTN","ORWDXM3",17,0)
 I IVTYPE'="I",ADDCNT'=STRCNT S RESULT=1
"RTN","ORWDXM3",18,0)
 I IVTYPE="I" D
"RTN","ORWDXM3",19,0)
 .I ADDCNT=0,SOLCNT>0 Q
"RTN","ORWDXM3",20,0)
 .I ADDCNT=0 S RESULT=1 Q
"RTN","ORWDXM3",21,0)
 .I ADDCNT'=STRCNT S RESULT=1 Q
"RTN","ORWDXM3",22,0)
 Q RESULT
"RTN","ORWDXM3",23,0)
 ;
"RTN","ORWDXM3",24,0)
KEYVAR(DLG)  ; Parse entry action for key variables & return in string
"RTN","ORWDXM3",25,0)
 ; RV=CollTp^Samp^Spec^CollDt^Urg^Sched^NoComm^NoDiag^NoProv^NoRsn
"RTN","ORWDXM3",26,0)
 N XCODE,RV,POS,Z
"RTN","ORWDXM3",27,0)
 S XCODE=$G(^ORD(101.41,DLG,3)),RV=""
"RTN","ORWDXM3",28,0)
 I '$L(XCODE) Q ""
"RTN","ORWDXM3",29,0)
 S POS=$F(XCODE,"LRFZX=")    I POS S $P(RV,U,1)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",30,0)
 S POS=$F(XCODE,"LRFSAMP=")  I POS S $P(RV,U,2)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",31,0)
 S POS=$F(XCODE,"LRFSPEC=")  I POS S $P(RV,U,3)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",32,0)
 S POS=$F(XCODE,"LRFDATE=")  I POS S $P(RV,U,4)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",33,0)
 S POS=$F(XCODE,"LRFURG=")   I POS S $P(RV,U,5)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",34,0)
 S POS=$F(XCODE,"LRFSCH=")   I POS S $P(RV,U,6)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",35,0)
 S POS=$F(XCODE,"PSJNOPC=")  I POS S $P(RV,U,7)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",36,0)
 S POS=$F(XCODE,"GMRCNOPD=") I POS S $P(RV,U,8)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",37,0)
 S POS=$F(XCODE,"GMRCNOAT=") I POS S $P(RV,U,9)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",38,0)
 S POS=$F(XCODE,"GMRCREAF=") I POS S $P(RV,U,10)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",39,0)
 S POS=$F(XCODE,"ORFORGET=") I POS D
"RTN","ORWDXM3",40,0)
 . ; need to change this so that it is executed in SETKEYV so
"RTN","ORWDXM3",41,0)
 . ; that it is executed each time menu is revisited
"RTN","ORWDXM3",42,0)
 . N ORFORGET S ORFORGET=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",43,0)
 . I ORFORGET K ^TMP("ORECALL",$J,+ORFORGET)
"RTN","ORWDXM3",44,0)
 . E  K ^TMP("ORECALL",$J)
"RTN","ORWDXM3",45,0)
 Q RV
"RTN","ORWDXM3",46,0)
VALUE(STR,BEG) ; Return value of "var=" (copied from ORCONVRT)
"RTN","ORWDXM3",47,0)
 N X,Y,I S X=$E(STR,BEG,999),Y=""
"RTN","ORWDXM3",48,0)
 S:$E(X)="""" X=$E(X,2,999) ; strip leading "
"RTN","ORWDXM3",49,0)
 F I=1:1:$L(X) S Z=$E(X,I) Q:(Z=",")!(Z=" ")!(Z="""")  S Y=Y_Z
"RTN","ORWDXM3",50,0)
 Q $TR(Y,U,"")
"RTN","ORWDXM3",51,0)
 ;
"RTN","ORWDXM3",52,0)
SETKEYV(X)      ; Set the key variables based on contents of X
"RTN","ORWDXM3",53,0)
 I $L($P(X,U,1))  S LRFZX=$P(X,U,1)
"RTN","ORWDXM3",54,0)
 I $L($P(X,U,2))  S LRFSAMP=$P(X,U,2)
"RTN","ORWDXM3",55,0)
 I $L($P(X,U,3))  S LRFSPEC=$P(X,U,3)
"RTN","ORWDXM3",56,0)
 I $L($P(X,U,4))  S LRFDATE=$P(X,U,4)
"RTN","ORWDXM3",57,0)
 I $L($P(X,U,5))  S LRFURG=$P(X,U,5)
"RTN","ORWDXM3",58,0)
 I $L($P(X,U,6))  S LRFSCH=$P(X,U,6)
"RTN","ORWDXM3",59,0)
 I $L($P(X,U,7))  S PSJNOPC=$P(X,U,7)
"RTN","ORWDXM3",60,0)
 I $L($P(X,U,8))  S GMRCNOPD=$P(X,U,8)
"RTN","ORWDXM3",61,0)
 I $L($P(X,U,9))  S GMRCNOAT=$P(X,U,9)
"RTN","ORWDXM3",62,0)
 I $L($P(X,U,10)) S GMRCREAF=$P(X,U,10)
"RTN","ORWDXM3",63,0)
 Q
"RTN","ORWDXM3",64,0)
DLGINFO(IEN,MODE)    ; return information about a dialog
"RTN","ORWDXM3",65,0)
 ; IEN=DlgIEN or ORIFN, MODE=0:Dlg,1:Copy,2:Change
"RTN","ORWDXM3",66,0)
 ; RESULT=DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",67,0)
 ; If MODE="1;T",don't check "PS MEDS" for transfer order
"RTN","ORWDXM3",68,0)
 ; PSMDGP=1: Unit/Dose  Group
"RTN","ORWDXM3",69,0)
 ; PSMDGP=2: OutPatient Group
"RTN","ORWDXM3",70,0)
 N X0,DLGIEN,TYP,FID,DGRP,PSMDGP,ISXF
"RTN","ORWDXM3",71,0)
 S PSMDGP=0,ISXF=""
"RTN","ORWDXM3",72,0)
 S ISXF=$P(MODE,";",2)
"RTN","ORWDXM3",73,0)
 S MODE=+MODE
"RTN","ORWDXM3",74,0)
 S DLGIEN=IEN I MODE,(ISXF'="T") D
"RTN","ORWDXM3",75,0)
 . S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",76,0)
 . I $P(^ORD(101.41,DLGIEN,0),U)="PS MEDS" D
"RTN","ORWDXM3",77,0)
 . . N PTCAT S PTCAT=$P($G(^OR(100,+IEN,0)),U,12)
"RTN","ORWDXM3",78,0)
 . . I PTCAT="I" S DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)),PSMDGP=1
"RTN","ORWDXM3",79,0)
 . . I PTCAT="O" S DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)),PSMDGP=2
"RTN","ORWDXM3",80,0)
 I MODE,(ISXF="T") S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",81,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),TYP=$P(X0,U,4),DGRP=$P(X0,U,5)
"RTN","ORWDXM3",82,0)
 I MODE S DGRP=+$P($G(^OR(100,+IEN,0)),U,11)
"RTN","ORWDXM3",83,0)
 ;JD NEW START 11/13/02
"RTN","ORWDXM3",84,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) S PSMDGP=1
"RTN","ORWDXM3",85,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)) S PSMDGP=2
"RTN","ORWDXM3",86,0)
 ;JD NEW END 11/13/02
"RTN","ORWDXM3",87,0)
 ; for copy or change, if the base dialog has changed, use it's info 
"RTN","ORWDXM3",88,0)
 I MODE,$G(ORDIALOG),(+DLGIEN'=+ORDIALOG),(PSMDGP=0) D
"RTN","ORWDXM3",89,0)
 . S DLGIEN=+ORDIALOG,DGRP=$P(^ORD(101.41,+ORDIALOG,0),U,5)
"RTN","ORWDXM3",90,0)
 D FORMID^ORWDXM(.FID,DLGIEN)
"RTN","ORWDXM3",91,0)
 Q DLGIEN_U_TYP_U_FID_U_DGRP
"RTN","ORWDXM3",92,0)
 ;
"RTN","ORWDXM3",93,0)
CHKDSBL(LST,ID,MODE)  ; return message if dialog disabled
"RTN","ORWDXM3",94,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",95,0)
 ; LST=QL_REJECT + disabled message or unchanged
"RTN","ORWDXM3",96,0)
 S DLGIEN=+ID I MODE S DLGIEN=+$P($G(^OR(100,+ID,0)),U,5)
"RTN","ORWDXM3",97,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),X=$P(X0,U,3)
"RTN","ORWDXM3",98,0)
 I '$L(X),($P(X0,U,4)="Q") D  ; check default dialog
"RTN","ORWDXM3",99,0)
 . S DLGIEN=+$$DEFDLG^ORWDXQ($P(X0,U,5))
"RTN","ORWDXM3",100,0)
 . S X=$P($G(^ORD(101.41,DLGIEN,0)),U,3)
"RTN","ORWDXM3",101,0)
 I $L(X) D
"RTN","ORWDXM3",102,0)
 . I MODE D GETTXT^ORWORR(.LST,ID) S LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",103,0)
 . S LST(0)="8^0",LST(.5)="Dialog Disabled:  "_X
"RTN","ORWDXM3",104,0)
 Q
"RTN","ORWDXM3",105,0)
CHKVACT(LST,ID,MODE,ORNP)  ; return message if action not valid
"RTN","ORWDXM3",106,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",107,0)
 ; LST=QL_REJECT + invalid action message or unchanged
"RTN","ORWDXM3",108,0)
 Q:'MODE  ; not an action on an order
"RTN","ORWDXM3",109,0)
 N X,ACT S ACT=$S(MODE=1:"RW",MODE=2:"XX",1:"")
"RTN","ORWDXM3",110,0)
 D VALID^ORWDXA(.X,ID,ACT,ORNP)
"RTN","ORWDXM3",111,0)
 I $L(X) D GETTXT^ORWORR(.LST,ID) D
"RTN","ORWDXM3",112,0)
 . S LST(0)="8^0",LST(.5)=X,LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",113,0)
 Q
"RTN","ORWDXM3",114,0)
CHKCOPY(LST,ID,FLDS)  ; return message if can't copy this order
"RTN","ORWDXM3",115,0)
 ; ID=ORIFN;ACT FLDS=EventType in 7th piece
"RTN","ORWDXM3",116,0)
 ; LST=QL_REJECT + cannot copy message or unchanged
"RTN","ORWDXM3",117,0)
 I "^A^D^T^"'[(U_$E($P(FLDS,U,7))_U) Q             ; not event delayed
"RTN","ORWDXM3",118,0)
 N PKG S PKG=$P($G(^OR(100,+ID,0)),U,14)
"RTN","ORWDXM3",119,0)
 S PKG=$$NMSP^ORCD(PKG) I PKG="OR"!(PKG="PS") Q    ; xfer meds, generics
"RTN","ORWDXM3",120,0)
 N ORWCAT S ORWCAT=$P($G(^OR(100,+ID,0)),U,12)
"RTN","ORWDXM3",121,0)
 I ORWCAT="I",("^A^T^"[(U_$E($P(FLDS,U,7))_U)) Q   ; admit, xfer inpt
"RTN","ORWDXM3",122,0)
 I ORWCAT="O",$E($P(FLDS,U,7))="D" Q               ; discharge outpt
"RTN","ORWDXM3",123,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM3",124,0)
 I ORWCAT="I" S LST(.5)="inpatient order to outpatient -"
"RTN","ORWDXM3",125,0)
 I ORWCAT="O" S LST(.5)="outpatient order to inpatient -"
"RTN","ORWDXM3",126,0)
 S:$D(LST(.5)) LST(.5)="Cannot copy the following "_LST(.5)
"RTN","ORWDXM3",127,0)
 S LST(0)="8^0",LST(.7)=""
"RTN","ORWDXM3",128,0)
 Q
"RTN","ORWDXM3",129,0)
BLD4CHG(LST,ID,FLDS)  ; build responses for an edit
"RTN","ORWDXM3",130,0)
 ; ID=ORIFN;ACT FLDS=unused right now
"RTN","ORWDXM3",131,0)
 ; LST(0)=Qlvl^RespID(XOrderID)^DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",132,0)
 N OIDX,OI,CNT
"RTN","ORWDXM3",133,0)
 S (OI,OIDX,CNT)=0
"RTN","ORWDXM3",134,0)
 S:$D(^OR(100,+ID,4.5,"ID","ORDERABLE")) OIDX=$O(^OR(100,+ID,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXM3",135,0)
 I $D(^OR(100,+ID,4.5,OIDX)) D
"RTN","ORWDXM3",136,0)
 . F  S CNT=$O(^OR(100,+ID,4.5,OIDX,CNT)) Q:'CNT  D
"RTN","ORWDXM3",137,0)
 . . S OI=^(CNT) D VALDOI
"RTN","ORWDXM3",138,0)
 I +LST(0)=8 S LST(.5)="You can not change this order." Q
"RTN","ORWDXM3",139,0)
 S LST(0)="0^X"_ID_U_$$DLGINFO(+ID,2)
"RTN","ORWDXM3",140,0)
 S $P(LST(0),U,4)="X"
"RTN","ORWDXM3",141,0)
 Q
"RTN","ORWDXM3",142,0)
GETIVTYP() ;
"RTN","ORWDXM3",143,0)
 N RESULT,TYPEIEN
"RTN","ORWDXM3",144,0)
 S RESULT=""
"RTN","ORWDXM3",145,0)
 S TYPEIEN=$O(^ORD(101.41,"B","OR GTX IV TYPE","")) I TYPEIEN'>0 Q RESULT
"RTN","ORWDXM3",146,0)
 S RESULT=$G(ORDIALOG(TYPEIEN,1))
"RTN","ORWDXM3",147,0)
 Q RESULT
"RTN","ORWDXM3",148,0)
 ;
"RTN","ORWDXM3",149,0)
VALDOI ; Validate the Orderable Items
"RTN","ORWDXM3",150,0)
 N ORQUIT,ORPS
"RTN","ORWDXM3",151,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXM3",152,0)
 . S ORQUIT=1
"RTN","ORWDXM3",153,0)
 . S LST(0)="8^0"
"RTN","ORWDXM3",154,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDXM3",155,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS"))
"RTN","ORWDXM3",156,0)
 I $P(ORPS,U,1,4)="0^0^0^0",($P(ORPS,U,7)=0) S LST(0)="8^0"
"RTN","ORWDXM3",157,0)
 Q
"RTN","ORWDXM3",158,0)
VERORD() ;
"RTN","ORWDXM3",159,0)
 N INFUSE,INFUID,PASSIV,SUCC,TYPE
"RTN","ORWDXM3",160,0)
 S SUCC=0
"RTN","ORWDXM3",161,0)
 S TYPE=$$GETIVTYP
"RTN","ORWDXM3",162,0)
 I TYPE="" Q SUCC
"RTN","ORWDXM3",163,0)
 S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",164,0)
 I PASSIV=0 Q SUCC
"RTN","ORWDXM3",165,0)
 S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",166,0)
 S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",167,0)
 S SUCC=$$VALINF(TYPE,INFUSE)
"RTN","ORWDXM3",168,0)
 Q SUCC
"RTN","ORWDXM3",169,0)
 ;
"RTN","ORWDXM3",170,0)
VALINF(TYPE,INFUSE) ;
"RTN","ORWDXM3",171,0)
 N SUCC
"RTN","ORWDXM3",172,0)
 S SUCC=0
"RTN","ORWDXM3",173,0)
 I TYPE="I" D  Q SUCC
"RTN","ORWDXM3",174,0)
 .I INFUSE="" S SUCC=1 Q
"RTN","ORWDXM3",175,0)
 .I $TR(INFUSE,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",176,0)
 .I $L(INFUSE)>4 Q
"RTN","ORWDXM3",177,0)
 Q 1
"RTN","ORWDXM3",178,0)
 ;
"RTN","ORWDXM3",179,0)
VALQO(IFN) ;Check to see if it's a good QO med
"RTN","ORWDXM3",180,0)
 ;If it's an IV QO: check if infusion rate entered
"RTN","ORWDXM3",181,0)
 ;If it's an UD QO: check if dosage entered
"RTN","ORWDXM3",182,0)
 ;regular order treated as good QO
"RTN","ORWDXM3",183,0)
 ;
"RTN","ORWDXM3",184,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM3",185,0)
 N ODP,ODG,INFUID,INFUSE,DSAGEID,SUCC,PASSIV,TYPE
"RTN","ORWDXM3",186,0)
 S SUCC=0
"RTN","ORWDXM3",187,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",188,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",189,0)
 I ODP'["PS" Q 1
"RTN","ORWDXM3",190,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",191,0)
 I ODG="IV RX"!(ODG="TPN") D
"RTN","ORWDXM3",192,0)
 . S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",193,0)
 . S TYPE=$$GETIVTYP
"RTN","ORWDXM3",194,0)
 . I TYPE="" Q
"RTN","ORWDXM3",195,0)
 . I TYPE="I" D  I SUCC=0 Q
"RTN","ORWDXM3",196,0)
 . . N SCHIEN
"RTN","ORWDXM3",197,0)
 . . S SCHIEN=$O(^ORD(101.41,"B","OR GTX SCHEDULE",0))
"RTN","ORWDXM3",198,0)
 . . I $G(ORDIALOG(SCHIEN,1))="" Q
"RTN","ORWDXM3",199,0)
 . . I $D(ORDIALOG(INFUID,1)) D  Q
"RTN","ORWDXM3",200,0)
 . . . S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",201,0)
 . . . I INFUSE="" Q
"RTN","ORWDXM3",202,0)
 . . . I INFUSE["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",203,0)
 . . . I $L(INFUSE)>4 Q
"RTN","ORWDXM3",204,0)
 . . . I +INFUSE>0 S INFUSE="INFUSE OVER "_INFUSE_" Minutes"
"RTN","ORWDXM3",205,0)
 . . . S ORDIALOG(INFUID,1)=INFUSE,SUCC=1
"RTN","ORWDXM3",206,0)
 . . . S SUCC=1
"RTN","ORWDXM3",207,0)
 . . I '$D(ORDIALOG(INFUID,1)) S SUCC=1 Q
"RTN","ORWDXM3",208,0)
 . I TYPE="C" D  I SUCC=0 Q
"RTN","ORWDXM3",209,0)
 . . I $D(ORDIALOG(INFUID,1)) S SUCC=1
"RTN","ORWDXM3",210,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",211,0)
 . S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",212,0)
 . I PASSIV=0 S SUCC=0
"RTN","ORWDXM3",213,0)
 . I SUCC=1,$$ISMISSFL(.ORDIALOG,TYPE)=1 S SUCC=0
"RTN","ORWDXM3",214,0)
 ;check dosage for UD QO
"RTN","ORWDXM3",215,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" D
"RTN","ORWDXM3",216,0)
 . S DSAGEID=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDXM3",217,0)
 . I $D(ORDIALOG(DSAGEID,1)) S SUCC=1
"RTN","ORWDXM3",218,0)
 Q SUCC
"RTN","ORWDXM3",219,0)
 ;
"RTN","ORWDXM3",220,0)
IVRTECHK() ;
"RTN","ORWDXM3",221,0)
 N RTIEN,RTVALUE,RESULT
"RTN","ORWDXM3",222,0)
 N CNT,NUM,ORDERIDS,OIIEN,OTYPE,ROUTE
"RTN","ORWDXM3",223,0)
 S CNT=0,RESULT=0
"RTN","ORWDXM3",224,0)
 S RTIEN=+$P($G(ORDIALOG("B","ROUTE")),U,2) I RTIEN'>0 Q RESULT
"RTN","ORWDXM3",225,0)
 S RTVALUE=+$G(ORDIALOG(RTIEN,1)) I RTVALUE'>0 Q RESULT
"RTN","ORWDXM3",226,0)
 F OTYPE="SOLUTION","ADDITIVE" D
"RTN","ORWDXM3",227,0)
 .S OIIEN=+$P($G(ORDIALOG("B",OTYPE)),U,2) I OIIEN>0 D
"RTN","ORWDXM3",228,0)
 ..S NUM=0 F  S NUM=$O(ORDIALOG(OIIEN,NUM)) Q:NUM'>0  I +$G(ORDIALOG(OIIEN,NUM))>0 D
"RTN","ORWDXM3",229,0)
 ...S CNT=CNT+1,ORDERIDS(CNT)=ORDIALOG(OIIEN,NUM)
"RTN","ORWDXM3",230,0)
 I $D(ORDERIDS)=0 Q
"RTN","ORWDXM3",231,0)
 S ROUTE=$$IVQOVAL^ORWDPS33(.ORDERIDS,RTVALUE)
"RTN","ORWDXM3",232,0)
 I ROUTE="" S ORDIALOG(RTIEN,1)=ROUTE
"RTN","ORWDXM3",233,0)
 I ROUTE'="" S RESULT=1
"RTN","ORWDXM3",234,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",235,0)
 ;D ALL^PSS51P2(RTVALUE,,,,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",236,0)
 ;I +^TMP($J,"ORWDXM3 IVRTECHK",RTVALUE,6)'=1 S ORDIALOG(RTIEN,1)="",RESULT=0
"RTN","ORWDXM3",237,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",238,0)
 Q RESULT
"RTN","ORWDXM3",239,0)
 ;
"RTN","ORWDXM3",240,0)
ISUDQO(ORY,DLGID) ;True: is unit dose quick order
"RTN","ORWDXM3",241,0)
 S ORY=0
"RTN","ORWDXM3",242,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXM3",243,0)
 N CLODGRP,UDGRP1,UDGRP2,DLGTYP,DLGGRP
"RTN","ORWDXM3",244,0)
 S UDGRP1=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXM3",245,0)
 S UDGRP2=$O(^ORD(100.98,"B","I RX",0))
"RTN","ORWDXM3",246,0)
 S CLODGRP=$O(^ORD(100.98,"B","CLINIC ORDERS",""))
"RTN","ORWDXM3",247,0)
 S DLGTYP=$P($G(^ORD(101.41,DLGID,0)),U,4)
"RTN","ORWDXM3",248,0)
 S DLGGRP=$P($G(^ORD(101.41,DLGID,0)),U,5)
"RTN","ORWDXM3",249,0)
 I (DLGTYP="Q"),((DLGGRP=UDGRP1)!(DLGGRP=UDGRP2)!(DLGGRP=CLODGRP)) S ORY=1
"RTN","ORWDXM3",250,0)
 Q
"RTN","ORWDXM4")
0^42^B32166098
"RTN","ORWDXM4",1,0)
ORWDXM4 ; SLC/KCM - Order Dialogs, Menus;10:42 AM  6 Sep 1998
"RTN","ORWDXM4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,215,296**;Dec 17, 1997;Build 19
"RTN","ORWDXM4",3,0)
 ;
"RTN","ORWDXM4",4,0)
SETUP ; -- setup dialog (continued from ORWDXM1)
"RTN","ORWDXM4",5,0)
 ;    if xfer med order, setup ORDIALOG differently
"RTN","ORWDXM4",6,0)
 I ORWMODE,$$ISMED(ORIT),$$CHGSTS(ORCAT,ORIT) D MEDXFER Q
"RTN","ORWDXM4",7,0)
 ;    get base dialog (based on display group) & location of responses
"RTN","ORWDXM4",8,0)
 I ORWMODE D
"RTN","ORWDXM4",9,0)
 . S ORDG=$P(^OR(100,+ORIT,0),U,11),ORDIALOG=+$P(^(0),U,5)
"RTN","ORWDXM4",10,0)
 . S RSPREF="^OR(100,"_+ORIT_",4.5)"
"RTN","ORWDXM4",11,0)
 E  D
"RTN","ORWDXM4",12,0)
 . N X0 S X0=$G(^ORD(101.41,ORIT,0))
"RTN","ORWDXM4",13,0)
 . S ORDIALOG=$S($P(X0,U,4)="D":ORIT,1:0)
"RTN","ORWDXM4",14,0)
 . S ORDG=$P(X0,U,5) Q:'ORDG
"RTN","ORWDXM4",15,0)
 . I 'ORDIALOG S ORDIALOG=+$$DEFDLG^ORWDXQ(ORDG)
"RTN","ORWDXM4",16,0)
 . S RSPREF="^ORD(101.41,"_ORIT_",6)"
"RTN","ORWDXM4",17,0)
 ;    setup the ORDIALOG array
"RTN","ORWDXM4",18,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",19,0)
 D GETORDER^ORCD(RSPREF)
"RTN","ORWDXM4",20,0)
 Q
"RTN","ORWDXM4",21,0)
SETUPS ; -- setup for specific types of dialogs (continued from ORWDXM1)
"RTN","ORWDXM4",22,0)
 ; pharmacy uses ORCAT to know order package
"RTN","ORWDXM4",23,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0)) S ORCAT="O"
"RTN","ORWDXM4",24,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) D
"RTN","ORWDXM4",25,0)
 . I ORCAT="O",'ORIMO S ORWPSWRG="" ; not auto-ack, pt not inpt
"RTN","ORWDXM4",26,0)
 . S ORCAT="I"
"RTN","ORWDXM4",27,0)
 I ORCAT="O",$D(OREVENT("EFFECTIVE")),(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D
"RTN","ORWDXM4",28,0)
 . S ORDIALOG($O(^ORD(101.41,"B",X,0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDXM4",29,0)
 I ORDIALOG=$O(^ORD(101.41,"B","RA OERR EXAM",0))         D RA^ORWDXM2 G XENV
"RTN","ORWDXM4",30,0)
 I ORDIALOG=$O(^ORD(101.41,"B","LR OTHER LAB TESTS",0))   D LR^ORWDXM2 G XENV
"RTN","ORWDXM4",31,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW1",0))                 D DO^ORWDXM2 G XENV
"RTN","ORWDXM4",32,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW2",0))                 D EL^ORWDXM2 G XENV
"RTN","ORWDXM4",33,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0))        D UD^ORWDXM2 G XENV
"RTN","ORWDXM4",34,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)) D IV^ORWDXM2 G XENV
"RTN","ORWDXM4",35,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0))             D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",36,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO SUPPLY",0))           D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",37,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PS MEDS",0))              D PS^ORWDPS3 G XENV
"RTN","ORWDXM4",38,0)
 I ORDIALOG=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0))      D VB^ORWDXM4 G XENV
"RTN","ORWDXM4",39,0)
 I ORDIALOG=$O(^ORD(101.41,"B","GMRAOR ALLERGY ENTER/EDIT",0)) S ORQUIT=1
"RTN","ORWDXM4",40,0)
XENV ;    end case
"RTN","ORWDXM4",41,0)
 Q
"RTN","ORWDXM4",42,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP)
"RTN","ORWDXM4",43,0)
 ;
"RTN","ORWDXM4",44,0)
 ; use ORWDPS3 if OR*3*94 installed
"RTN","ORWDXM4",45,0)
 I ORWP94 G MEDXFER^ORWDPS3
"RTN","ORWDXM4",46,0)
 ;
"RTN","ORWDXM4",47,0)
 N UDLG,FDLG,ODLG,DLG,OI K ^TMP("PS",$J)
"RTN","ORWDXM4",48,0)
 S UDLG=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORWDXM4",49,0)
 S FDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM4",50,0)
 S ODLG=$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORWDXM4",51,0)
 S DLG=$P($G(^OR(100,+ORIT,0)),U,5)
"RTN","ORWDXM4",52,0)
 S ORDIALOG=$S(+DLG=UDLG:ODLG,+DLG=ODLG:UDLG,+DLG=FDLG:FDLG,1:0)
"RTN","ORWDXM4",53,0)
 I 'ORDIALOG D SETERR(ORIT,"Incomplete Order Record") Q
"RTN","ORWDXM4",54,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDXM4",55,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",56,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDXM4",57,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDXM4",58,0)
 I '$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDXM4",59,0)
 I $G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDXM4",60,0)
 K ORDIALOG($$PTR("DISPENSE DRUG"),1)
"RTN","ORWDXM4",61,0)
 K ORDIALOG($$PTR("WORD PROCESSING 1"),1)
"RTN","ORWDXM4",62,0)
 I ORDIALOG=ODLG D IN2OUT  ; could call  IN^ORCMED except for writes
"RTN","ORWDXM4",63,0)
 I ORDIALOG=UDLG D OUT2IN  ; could call OUT^ORCMED except for writes
"RTN","ORWDXM4",64,0)
 Q
"RTN","ORWDXM4",65,0)
IN2OUT ; -- make inpatient responses into outpatient
"RTN","ORWDXM4",66,0)
 N I,DDRUG,PKGID,DOSE
"RTN","ORWDXM4",67,0)
 S DOSE=$G(ORDIALOG($$PTR("INSTRUCTIONS"),1))
"RTN","ORWDXM4",68,0)
 F I="INSTRUCTIONS","UNITS/DOSE","FREE TEXT","DISPENSE DRUG" K ORDIALOG($$PTR(I),1)
"RTN","ORWDXM4",69,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",70,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",71,0)
 I $P(DDRUG,U,3) S ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",72,0)
 ;    keep instructions if IV med, otherwise use units returned
"RTN","ORWDXM4",73,0)
 I $P($G(^ORD(101.43,OI,"PS")),U)=2 S ORDIALOG($$PTR("INSTRUCTIONS"),1)=DOSE
"RTN","ORWDXM4",74,0)
 E  S:$P(DDRUG,U,2) ORDIALOG($$PTR("INSTRUCTIONS"),1)=$P(DDRUG,U,2)
"RTN","ORWDXM4",75,0)
 ;    change orderable item if new orderable item returned
"RTN","ORWDXM4",76,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,OI,0)),U,2) D
"RTN","ORWDXM4",77,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",78,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",79,0)
 Q
"RTN","ORWDXM4",80,0)
OUT2IN ; make outpatient responses into inpatient
"RTN","ORWDXM4",81,0)
 N ORP,ORI,PROMPT,PKGID,DDRUG,ONE
"RTN","ORWDXM4",82,0)
 D CHANGED^ORCDPS("XFR") ; Kill extra values not in inpt dialog
"RTN","ORWDXM4",83,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",84,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",85,0)
 S:$P(DDRUG,U,3) ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",86,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,+OI,0)),U,2) D
"RTN","ORWDXM4",87,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",88,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",89,0)
 S ONE=$O(ORDIALOG($$PTR("INSTRUCTIONS"),0)) ; first inst
"RTN","ORWDXM4",90,0)
 F ORP="ROUTE","SCHEDULE" D
"RTN","ORWDXM4",91,0)
 . S ORI=0,PROMPT=$$PTR(ORP)
"RTN","ORWDXM4",92,0)
 . F  S ORI=$O(ORDIALOG(PROMPT,ORI)) Q:ORI'>0  I ORDIALOG(PROMPT,ORI)=""!(ORI>ONE) K ORDIALOG(PROMPT,ORI)
"RTN","ORWDXM4",93,0)
 Q
"RTN","ORWDXM4",94,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME (copied from ORCMED)
"RTN","ORWDXM4",95,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM4",96,0)
 ;
"RTN","ORWDXM4",97,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDXM4",98,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDXM4",99,0)
 Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDXM4",100,0)
 ;
"RTN","ORWDXM4",101,0)
CHGSTS(ECAT,IFN)        ; return 1 if out to in or in to out
"RTN","ORWDXM4",102,0)
 N OCAT
"RTN","ORWDXM4",103,0)
 S OCAT=$P($G(^OR(100,+IFN,0)),U,12)
"RTN","ORWDXM4",104,0)
 Q OCAT'=ECAT
"RTN","ORWDXM4",105,0)
 ;
"RTN","ORWDXM4",106,0)
ISMED(IFN)      ; return 1 if this is a pharmacy order
"RTN","ORWDXM4",107,0)
 N PKG S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM4",108,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM4",109,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDXM4",110,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM4",111,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDXM4",112,0)
 Q
"RTN","ORWDXM4",113,0)
VB ; setup environment for VBECS
"RTN","ORWDXM4",114,0)
 ; -- setup ORTIME, ORIMTIME arrays
"RTN","ORWDXM4",115,0)
 D GETIMES^ORCDLR1
"RTN","ORWDXM4",116,0)
 ; -- setup ORCOMP, ORTEST, and ORTAS
"RTN","ORWDXM4",117,0)
 S (ORCOMP,ORTEST,ORTAS)=""
"RTN","ORWDXM4",118,0)
 N P,I,X,X0 S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",119,0)
 S I=0 F  S I=$O(ORDIALOG(P,I)) Q:I<1  S X=+$G(ORDIALOG(P,I)) D
"RTN","ORWDXM4",120,0)
 . S X0=$G(^ORD(101.43,X,"VB")),X=+$P($G(^(0)),U,2)
"RTN","ORWDXM4",121,0)
 . I $P(X0,U) S ORCOMP=ORCOMP_$S($L(ORCOMP):U,1:"")_X Q
"RTN","ORWDXM4",122,0)
 . S ORTEST=ORTEST_$S($L(ORTEST):U,1:"")_X
"RTN","ORWDXM4",123,0)
 . I X=2 S ORTAS=1
"RTN","ORWDXM4",124,0)
 Q
"RTN","ORWDXM4",125,0)
VBASK(I) ; set the ORASK variable for child component prompts in VBECS order
"RTN","ORWDXM4",126,0)
 I ORDIALOG'=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0)) Q
"RTN","ORWDXM4",127,0)
 N P S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",128,0)
 N OI S OI=+$G(ORDIALOG(P,I))
"RTN","ORWDXM4",129,0)
 I +$G(^ORD(101.43,+$G(OI),"VB")) S ORASK=1
"RTN","ORWDXM4",130,0)
 Q
"RTN","ORWDXM4",131,0)
VBQO(IFN) ;Check to see if it's a good VBECS QO
"RTN","ORWDXM4",132,0)
 ;regular order treated as good QO
"RTN","ORWDXM4",133,0)
 ;
"RTN","ORWDXM4",134,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM4",135,0)
 N ODP,ODG,RESULT,P,TNS,I
"RTN","ORWDXM4",136,0)
 S RESULT=0
"RTN","ORWDXM4",137,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM4",138,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM4",139,0)
 I ODP'["VBEC" Q 1
"RTN","ORWDXM4",140,0)
 Q RESULT
"RTN","ORWOD")
0^36^B72302805
"RTN","ORWOD",1,0)
ORWOD ; SLC/GSS - Utility for Order Dialogs ; 7/24/07 9:55am
"RTN","ORWOD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,296**;DEC 17, 1997;Build 19
"RTN","ORWOD",3,0)
 ;
"RTN","ORWOD",4,0)
 ; DBIA 5133: reading ^PXRMD file #801.41
"RTN","ORWOD",5,0)
 ; 
"RTN","ORWOD",6,0)
 Q
"RTN","ORWOD",7,0)
 ;
"RTN","ORWOD",8,0)
INSTALL ;Post-install entry point for OR*3*243
"RTN","ORWOD",9,0)
 D MAIN
"RTN","ORWOD",10,0)
 Q
"RTN","ORWOD",11,0)
 ;
"RTN","ORWOD",12,0)
ATWILL ;Entry point for ORDER MENU MANAGEMENT menu - ORCM MGMT opt MR
"RTN","ORWOD",13,0)
 W !,"This option generates two Quick Order (QO) reports to assist in the"
"RTN","ORWOD",14,0)
 W !,"evaluation of Med QOs that may need to be updated to accommodate the"
"RTN","ORWOD",15,0)
 W !,"three new fields exported in CPRS GUI v27:  Route, IV Type and Schedule."
"RTN","ORWOD",16,0)
 W !,"One report lists Med QOs that are contained in another entry such as an"
"RTN","ORWOD",17,0)
 W !,"order menu, order set or reminder dialog. The other report lists Med QOs"
"RTN","ORWOD",18,0)
 W !,"that are stand alone and are not included in another entry. These reports"
"RTN","ORWOD",19,0)
 W !,"will be sent to you via Mailman.",!
"RTN","ORWOD",20,0)
 S DIR(0)="FAO",DIR("A")="Do you wish to continue? " D ^DIR Q:X=""!(X="^")
"RTN","ORWOD",21,0)
 S ORCDD=$TR(X,"yn","YN") I ORCDD'="Y",ORCDD'="N" W "  Enter Y or N",! G ATWILL
"RTN","ORWOD",22,0)
 I X="N" W "...report not compiled" Q
"RTN","ORWOD",23,0)
 W !,"Compiling Med Quick Order check report..."
"RTN","ORWOD",24,0)
 D MAIN
"RTN","ORWOD",25,0)
 W !,"...QO check report compiled and mailed to ",$P(^VA(200,DUZ,0),U)
"RTN","ORWOD",26,0)
 Q
"RTN","ORWOD",27,0)
 ;
"RTN","ORWOD",28,0)
MAIN ;Main calls for QO Reports
"RTN","ORWOD",29,0)
 N ANCSTR,I,PSJNOPC,XMDUN,XMSUB
"RTN","ORWOD",30,0)
 D NTRY
"RTN","ORWOD",31,0)
 ; ANCSTR='ancestors', i.e., QO being used on a menu/Reminder Dialogs
"RTN","ORWOD",32,0)
 F ANCSTR="Y","N" D
"RTN","ORWOD",33,0)
 . D MAILSU
"RTN","ORWOD",34,0)
 . D SEND(XMSUB,DUZ)
"RTN","ORWOD",35,0)
 D CLEANUP
"RTN","ORWOD",36,0)
 Q
"RTN","ORWOD",37,0)
 ;
"RTN","ORWOD",38,0)
ANCSTR ;Determine QO usage - called by XSET and MM
"RTN","ORWOD",39,0)
 S ANCSTR="N"
"RTN","ORWOD",40,0)
 I $O(^ORD(101.41,"AD",ODIENXT,0))!($D(^TMP("OR",$J,"RD",ODIENXT))=0) S ANCSTR="Y"
"RTN","ORWOD",41,0)
 Q
"RTN","ORWOD",42,0)
 ;
"RTN","ORWOD",43,0)
XSET ;Set QO record for display
"RTN","ORWOD",44,0)
 D ANCSTR
"RTN","ORWOD",45,0)
 S RC=ODIENXT_U_$P(REC,U)_U_$P(REC,U,2)_U_$G(ODATYPE)_U_$G(ODAROUTE)_U_$G(ODASCHD)_U_$G(ODARATE)_U_$G(ODALIMIT)
"RTN","ORWOD",46,0)
 Q
"RTN","ORWOD",47,0)
 ;
"RTN","ORWOD",48,0)
NTRY ;Compiling report
"RTN","ORWOD",49,0)
 N AFIND,DIEN,DOSE,DSPLGRP,DSPLGPTR,GETXT,HIT,NODE3,ODALIMIT,ODARATE,ODAROUTE,ODASCHD,ODATYPE,ODIEN,ODIENXT,ORDIALOG,PTEXT,PTYPE,RC,REC,TYPE,XSET
"RTN","ORWOD",50,0)
 K ^TMP("OR",$J)
"RTN","ORWOD",51,0)
 S (DSPLGRP,DSPLGPTR,ODIEN,ODIENXT,TYPE)=""
"RTN","ORWOD",52,0)
 S XSET="S RC=ODIENXT_U_$P(REC,U)_U_$P(REC,U,2)_U_$G(ODATYPE)_U_$G(ODAROUTE)_U_$G(ODASCHD)_U_$G(ODARATE)_U_$G(ODALIMIT)"
"RTN","ORWOD",53,0)
 S DOSE=+$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))  ;use for MM tag
"RTN","ORWOD",54,0)
 ;
"RTN","ORWOD",55,0)
 ; Order Dialogs Structure, Menus - orig code by A.Puleo
"RTN","ORWOD",56,0)
 ; Reminder Dialog Type: (PTYPE) E=Dialog Element, G=Dialog Group
"RTN","ORWOD",57,0)
 F PTYPE="G","E" S DIEN="" D
"RTN","ORWOD",58,0)
 . F  S DIEN=$O(^PXRMD(801.41,"TYPE",PTYPE,DIEN)) Q:DIEN'>0  D  ;DBIA 5133
"RTN","ORWOD",59,0)
 .. ; PTEXT is 'FINDING ITEM' where 101.41 refers to ^ORD(101.41)
"RTN","ORWOD",60,0)
 .. ; Example: ^PXRMD(801.41,2515,1)="^^3^^51;ORD(101.41,"
"RTN","ORWOD",61,0)
 .. S PTEXT=$P($G(^PXRMD(801.41,DIEN,1)),U,5),AFIND=""
"RTN","ORWOD",62,0)
 .. I PTEXT[101.41 S ^TMP("OR",$J,"RD",$P(PTEXT,";"))=DIEN
"RTN","ORWOD",63,0)
 .. F  S AFIND=$O(^PXRMD(801.41,DIEN,3,"B",AFIND)) Q:AFIND=""  D
"RTN","ORWOD",64,0)
 ... I AFIND[101.41 S ^TMP("OR",$J,"RD",$P(AFIND,";"))=DIEN
"RTN","ORWOD",65,0)
 ;
"RTN","ORWOD",66,0)
 ; find IEN for the 'PSJI OR PAT FLUID OE' entry in Order Dialog File
"RTN","ORWOD",67,0)
 S ODIEN=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWOD",68,0)
 ; 
"RTN","ORWOD",69,0)
 ; loop thru Display Group File, file # 100.98 & store all
"RTN","ORWOD",70,0)
 ; Display Group entries that have a pointer to 'PSJI OR PAT FLUID OE'
"RTN","ORWOD",71,0)
 ; in field # 4 or Default Dialog field
"RTN","ORWOD",72,0)
 F  S DSPLGRP=$O(^ORD(100.98,DSPLGRP)) Q:DSPLGRP'?1N.N  D
"RTN","ORWOD",73,0)
 . I ODIEN=$P($G(^ORD(100.98,DSPLGRP,0)),U,4) S ^TMP("OR",$J,"DG",DSPLGRP)=ODIEN
"RTN","ORWOD",74,0)
 ;
"RTN","ORWOD",75,0)
 ; loop though Order Dialog file to
"RTN","ORWOD",76,0)
 ; find each entry that is an IV Quick Order. Do this by checking
"RTN","ORWOD",77,0)
 ; field #4 or TYPE field for a 'Q' & then check field #5 or
"RTN","ORWOD",78,0)
 ; DISPLAY GROUP field for a pointer to one of the display groups found
"RTN","ORWOD",79,0)
 ; above. If both conditions are true then continue to next step,
"RTN","ORWOD",80,0)
 ; if not, continue looping.
"RTN","ORWOD",81,0)
 F  S ODIENXT=$O(^ORD(101.41,ODIENXT)) Q:ODIENXT'?1N.N  D
"RTN","ORWOD",82,0)
 . D MM
"RTN","ORWOD",83,0)
 . S TYPE=$P($G(^ORD(101.41,ODIENXT,0)),U,4) Q:TYPE'="Q"
"RTN","ORWOD",84,0)
 . S DSPLGPTR=$P($G(^ORD(101.41,ODIENXT,0)),U,5) Q:$G(DSPLGPTR)=""  ;no display group pointer in QO
"RTN","ORWOD",85,0)
 . Q:'$G(^TMP("OR",$J,"DG",DSPLGPTR))  ;no such display group in compiled data
"RTN","ORWOD",86,0)
 . S REC=^ORD(101.41,ODIENXT,0)
"RTN","ORWOD",87,0)
 . ;
"RTN","ORWOD",88,0)
 . K ORDIALOG
"RTN","ORWOD",89,0)
 . ; call GETQDLG^ORCD to build the Order dialog array (ORDIALOG())
"RTN","ORWOD",90,0)
 . D GETQDLG^ORCD(ODIENXT) S (HIT)=0
"RTN","ORWOD",91,0)
 . ;
"RTN","ORWOD",92,0)
 . ;ZW ORDIALOG("B")  ;ORDIALOG() listing
"RTN","ORWOD",93,0)
 . ; set variables for 'TYPE' (IV TYPE), 'ROUTE', 'SCHEDULE', 'RATE', 'LIMITATION'
"RTN","ORWOD",94,0)
 . F I=1:1:5 S @($P("ODATYPE,ODAROUTE,ODASCHD,ODARATE,ODALIMIT",",",I))=$G(ORDIALOG($P($G(ORDIALOG("B",$P("TYPE,ROUTE,SCHEDULE,INFUSION RATE,LIMITATION",",",I))),U,2),1))
"RTN","ORWOD",95,0)
 . ;
"RTN","ORWOD",96,0)
 . ; Quick Orders to be displayed to end user in First List Message follow:
"RTN","ORWOD",97,0)
 . ;
"RTN","ORWOD",98,0)
 . ; IV TYPE is null or ROUTE is null
"RTN","ORWOD",99,0)
 . I (ODATYPE=""!(ODAROUTE="")) D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),1,1,0)=RC,HIT=1
"RTN","ORWOD",100,0)
 . ;
"RTN","ORWOD",101,0)
 . ; IV TYPE is 'I' and SCHEDULE is null
"RTN","ORWOD",102,0)
 . I ODATYPE="I"&(ODASCHD="") D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),2,1,0)=RC,HIT=1
"RTN","ORWOD",103,0)
 . ;
"RTN","ORWOD",104,0)
 . ; IV TYPE is not 'C' or null or RATE is not 1-4#.1#, integer or '@'
"RTN","ORWOD",105,0)
 . I ODATYPE="C"!(ODATYPE="") D
"RTN","ORWOD",106,0)
 .. Q:ODARATE["@"
"RTN","ORWOD",107,0)
 .. Q:ODARATE?1.4N!(ODARATE?1.4N1".".1N)  ;integers alone OK
"RTN","ORWOD",108,0)
 .. S GETXT=$$GETXT(ODARATE," ml/hr")
"RTN","ORWOD",109,0)
 .. Q:GETXT?1.4N!(GETXT?1.4N1".".1N)  ;# ml/hr & #.# ml/hr Rate OK
"RTN","ORWOD",110,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),3,1,0)=RC,HIT=1
"RTN","ORWOD",111,0)
 . ;
"RTN","ORWOD",112,0)
 . ; IV TYPE is 'I' but RATE not an integer minute or hour or null
"RTN","ORWOD",113,0)
 . I ODATYPE="I"&(ODARATE'?1.N)&(ODARATE'="") D  ;integer alone OK
"RTN","ORWOD",114,0)
 .. S GETXT=$$GETXT(ODARATE," Minutes| Hours")
"RTN","ORWOD",115,0)
 .. Q:GETXT?1.3N  ;integer # Minutes & # Hours Rate OK
"RTN","ORWOD",116,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),4,1,0)=RC,HIT=1
"RTN","ORWOD",117,0)
 . ;
"RTN","ORWOD",118,0)
 . ; IV LIMIT or Duration (LIMITATION) was not integer or null
"RTN","ORWOD",119,0)
 . I ODALIMIT'?.N,ODALIMIT'="" D
"RTN","ORWOD",120,0)
 .. Q:ODALIMIT?1.2N1"D"!(ODALIMIT?1.3N1"H")!(ODALIMIT?1.4N1"ML")!(ODALIMIT?1.4N1" ML")!(ODALIMIT?1.2N1"L")!(ODALIMIT?1.4N1"CC")!(ODALIMIT?1.4N1" CC")  ;#D, #H, #ML, #L, #CC Limit OK
"RTN","ORWOD",121,0)
 .. Q:ODALIMIT?1.2N1"d"!(ODALIMIT?1.3N1"h")!(ODALIMIT?1.4N1"ml")!(ODALIMIT?1.4n1" ml")!(ODALIMIT?1.2N1"l")!(ODALIMIT?1.4N1"cc")!(ODALIMIT?1.4N1" cc")  ;#d, #h, #ml, #l, #cc Limit OK
"RTN","ORWOD",122,0)
 .. Q:ODALIMIT?1"for "1.2N1" days"  ;for # days OK
"RTN","ORWOD",123,0)
 .. Q:ODALIMIT?1.5N1"DOSES"!(ODALIMIT?1"for a total of "1.5N1" doses")  ;for a total of # doses OK
"RTN","ORWOD",124,0)
 .. Q:ODALIMIT?1"with total volume "1.2N1"L"!(ODALIMIT?1"with total volume "1.4N1"ml")
"RTN","ORWOD",125,0)
 .. Q:ODALIMIT?1"for "1.2N1" hours"
"RTN","ORWOD",126,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),5,1,0)=RC,HIT=1
"RTN","ORWOD",127,0)
 . ;
"RTN","ORWOD",128,0)
 . ; Go get next Order Dialog entry if no problems
"RTN","ORWOD",129,0)
 . I 'HIT Q
"RTN","ORWOD",130,0)
 . ;
"RTN","ORWOD",131,0)
 . ; If Quick Order is in First List message then check
"RTN","ORWOD",132,0)
 . ; the Order Dialog file #101.41, field #58 or AUTO-ACCEPT QUICK ORDER
"RTN","ORWOD",133,0)
 . ; field.  If field #58 is set to 'Y'es then set the field to 'N'o and
"RTN","ORWOD",134,0)
 . ; then display this Quick Order in the Second List.
"RTN","ORWOD",135,0)
 . I +$P($G(^ORD(101.41,ODIENXT,5)),U,8) D
"RTN","ORWOD",136,0)
 .. S $P(^ORD(101.41,ODIENXT,5),U,8)=""  ;uncommented, sets AUTO-ACCEPT QUICK ORDER field
"RTN","ORWOD",137,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),7,1,0)=RC
"RTN","ORWOD",138,0)
 Q
"RTN","ORWOD",139,0)
 ;
"RTN","ORWOD",140,0)
GETXT(LOOKIN,SUFFIX) ;Return text occuring prior to suffix
"RTN","ORWOD",141,0)
 ; e.g. LOOKIN="INFUSE OVER 30 MINUTES",SUFFIX=" MINUTES" returns '30'
"RTN","ORWOD",142,0)
 N I,ISUFFIX,RSTRG,RTXT,STRG
"RTN","ORWOD",143,0)
 S I=0,RTXT=""
"RTN","ORWOD",144,0)
 F  S I=I+1,ISUFFIX=$P(SUFFIX,"|",I) Q:ISUFFIX=""  D:$F(LOOKIN,ISUFFIX)  Q:$G(RTXT)'=""
"RTN","ORWOD",145,0)
 . S RSTRG=$RE($E(LOOKIN,1,$F(LOOKIN,ISUFFIX)-$L(ISUFFIX)-1))
"RTN","ORWOD",146,0)
 . S RTXT=$P(RSTRG," ")
"RTN","ORWOD",147,0)
 Q $RE(RTXT)
"RTN","ORWOD",148,0)
 ;
"RTN","ORWOD",149,0)
MM ;Looks for 'MM' in Order Dialog / original code logic by James Hartin
"RTN","ORWOD",150,0)
 N ANCSTR,MMREC,NEXT,NODE3,PROMPT,VALUE
"RTN","ORWOD",151,0)
 S NEXT=1,VALUE=""
"RTN","ORWOD",152,0)
 F  S NEXT=$O(^ORD(101.41,ODIENXT,6,NEXT))  Q:NEXT'?1N.N  D
"RTN","ORWOD",153,0)
 . S VALUE=$G(^ORD(101.41,ODIENXT,6,NEXT,1)),PROMPT=+$P($G(^(0)),U,2)
"RTN","ORWOD",154,0)
 . S MMREC=^ORD(101.41,ODIENXT,0)
"RTN","ORWOD",155,0)
 . ; ODIEN^NAME^DISPLAY TEXT^VALUE
"RTN","ORWOD",156,0)
 . I PROMPT=DOSE,(VALUE["MM ") D
"RTN","ORWOD",157,0)
 .. D ANCSTR
"RTN","ORWOD",158,0)
 .. S ^TMP("OR",$J,"QO",ANCSTR,$P(MMREC,U),6,1,0)=ODIENXT_U_$P(MMREC,U)_U_$P(MMREC,U,2)_U_VALUE
"RTN","ORWOD",159,0)
 Q
"RTN","ORWOD",160,0)
 ;
"RTN","ORWOD",161,0)
MAILSU ;Set-up MAILMAN variables and format ^TMP("OR",$J,"MAIL")
"RTN","ORWOD",162,0)
 N DASH,DISPNAME,HDRLINE,LEGEND,LEGENDS,NEXT,NUM,NXTLINE,ODIENXT,ODQONAME,ORLEGEND,OROUT,QONAM,QOTOT,QORECORD,SPC
"RTN","ORWOD",163,0)
 K ^TMP("OR",$J,"MAIL")
"RTN","ORWOD",164,0)
 ;
"RTN","ORWOD",165,0)
 ;Title of emails
"RTN","ORWOD",166,0)
 S:ANCSTR="Y" XMSUB="QOs ON ORDER MENUS/SETS OR REMINDER DIALOGS: "
"RTN","ORWOD",167,0)
 S:ANCSTR="N" XMSUB="QOs NOT ON ORDER MENUS/SETS OR REMINDER DIALOGS: "
"RTN","ORWOD",168,0)
 S XMSUB=XMSUB_$$HTE^XLFDT($H)
"RTN","ORWOD",169,0)
 ;
"RTN","ORWOD",170,0)
 ;Group 1/A="IV TYPE IS NULL OR ROUTE IS NULL"
"RTN","ORWOD",171,0)
 ;Group 2/B="IV TYPE IS 'I' AND SCHEDULE IS NULL"
"RTN","ORWOD",172,0)
 ;Group 3/C="IV TYPE IS NOT 'C' OR NULL OR RATE IS NOT 1-4#.1#, INTERGER OR '@'"
"RTN","ORWOD",173,0)
 ;Group 4/D="IV TYPE IS 'I' BUT RATE NOT AN INTEGER MINUTE OR HOUR"
"RTN","ORWOD",174,0)
 ;Group 5/E="IV LIMIT OR DURATION (LIMITATION) WAS NOT NULL OR INTEGER"
"RTN","ORWOD",175,0)
 ;Group 6/F="ORDER DIALOGS WITH 'MM' IN THE DISPLAY TEXT"
"RTN","ORWOD",176,0)
 ;Group 7/G="AUTO-ACCEPT QUICK ORDER WAS 'Y'es, NOW SET TO 'N'o"
"RTN","ORWOD",177,0)
 ;
"RTN","ORWOD",178,0)
 D NTRY^ORWOD1
"RTN","ORWOD",179,0)
 S ODQONAME="@",SPC="                            ",QOTOT=0
"RTN","ORWOD",180,0)
 F  S ODQONAME=$O(^TMP("OR",$J,"QO",ANCSTR,ODQONAME)) Q:ODQONAME=""  D
"RTN","ORWOD",181,0)
 . S (LEGENDS,ORLEGEND,QORECORD)=""
"RTN","ORWOD",182,0)
 . F  S ORLEGEND=$O(^TMP("OR",$J,"QO",ANCSTR,ODQONAME,ORLEGEND)) D  Q:ORLEGEND=""
"RTN","ORWOD",183,0)
 .. I ORLEGEND'="" S LEGENDS=LEGENDS_$C(ORLEGEND+64) S:$G(QORECORD)="" QORECORD=^TMP("OR",$J,"QO",ANCSTR,ODQONAME,ORLEGEND,1,0) Q
"RTN","ORWOD",184,0)
 .. S NXTLINE=NXTLINE+1,QONAM=$P(QORECORD,U,2),DISPNAME=$P(QORECORD,U,3) S:DISPNAME="" DISPNAME=SPC
"RTN","ORWOD",185,0)
 .. S OROUT=$J($P(QORECORD,U,1),5)_" "_$E(QONAM,1,30)_$E(SPC,1,30-$L(QONAM))_" "_$E(DISPNAME,1,30)_$E(SPC,1,30-$L(DISPNAME))_" "_$J(LEGENDS,6)
"RTN","ORWOD",186,0)
 .. S ^TMP("OR",$J,"MAIL",NXTLINE,0)=OROUT,QOTOT=QOTOT+1
"RTN","ORWOD",187,0)
 S NXTLINE=NXTLINE+1,^TMP("OR",$J,"MAIL",NXTLINE,0)=""
"RTN","ORWOD",188,0)
 S NXTLINE=NXTLINE+1,^TMP("OR",$J,"MAIL",NXTLINE,0)=QOTOT_" = Med Quick Orders"
"RTN","ORWOD",189,0)
 Q
"RTN","ORWOD",190,0)
 ;
"RTN","ORWOD",191,0)
SEND(XMSUB,USER) ;Send MailMan message to USER
"RTN","ORWOD",192,0)
 ; Text of message is located in ^TMP("OR",$J,"MAIL",LineNumbers0-n)
"RTN","ORWOD",193,0)
 ; Subject is the string XMSUB.
"RTN","ORWOD",194,0)
 N MGIEN,MGROUP,NL,REF,XMDUZ,XMY,XMZ
"RTN","ORWOD",195,0)
 ;
"RTN","ORWOD",196,0)
 ;Subject '> 64 characters.
"RTN","ORWOD",197,0)
 S XMSUB=$E(XMSUB,1,64)
"RTN","ORWOD",198,0)
 ;Sender is Postmaster.
"RTN","ORWOD",199,0)
 S XMDUZ=0.5
"RTN","ORWOD",200,0)
 ;
"RTN","ORWOD",201,0)
RETRY ;Get message number.
"RTN","ORWOD",202,0)
 D XMZ^XMA2
"RTN","ORWOD",203,0)
 I XMZ<1 G RETRY
"RTN","ORWOD",204,0)
 ;
"RTN","ORWOD",205,0)
 ;Load message
"RTN","ORWOD",206,0)
 M ^XMB(3.9,XMZ,2)=^TMP("OR",$J,"MAIL")
"RTN","ORWOD",207,0)
 S NL=$O(^XMB(3.9,XMZ,2,""),-1)
"RTN","ORWOD",208,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","ORWOD",209,0)
 ;
"RTN","ORWOD",210,0)
 ;Send message to USER
"RTN","ORWOD",211,0)
 I $G(USER)'="" S XMY(DUZ)="" D ENT1^XMD Q
"RTN","ORWOD",212,0)
 W !,"Error: No USER defined..message not sent!"
"RTN","ORWOD",213,0)
 Q
"RTN","ORWOD",214,0)
 ;
"RTN","ORWOD",215,0)
CLEANUP ; Clean-up
"RTN","ORWOD",216,0)
 K ^TMP("OR",$J)
"RTN","ORWOD",217,0)
 Q
"RTN","ORWOD1")
0^37^B38695937
"RTN","ORWOD1",1,0)
ORWOD1 ; SLC/GSS - Utility for Order Dialogs ; 11/07/07 11:28am
"RTN","ORWOD1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,296**;DEC 17, 1997;Build 19
"RTN","ORWOD1",3,0)
 ;
"RTN","ORWOD1",4,0)
NTRY ;Entry point
"RTN","ORWOD1",5,0)
 N TXT
"RTN","ORWOD1",6,0)
 F NXTLINE=1:1 S TXT=$P($T(TXT+NXTLINE),";;",2) Q:TXT="Q"  S ^TMP("OR",$J,"MAIL",NXTLINE,0)=TXT
"RTN","ORWOD1",7,0)
 Q
"RTN","ORWOD1",8,0)
TXT ;Text for report follows
"RTN","ORWOD1",9,0)
 ;;         Quick Orders Which Should be Considered for Editing
"RTN","ORWOD1",10,0)
 ;;
"RTN","ORWOD1",11,0)
 ;;CPRS 27 has added three new fields (Route, IV Type, and Schedule) to the
"RTN","ORWOD1",12,0)
 ;;IV Order Dialog. For all IV orders the Route and IV Type must be defined.
"RTN","ORWOD1",13,0)
 ;;For Intermittent IV Type orders the schedule field must be defined. CPRS
"RTN","ORWOD1",14,0)
 ;;will not process the orders unless these fields are defined.
"RTN","ORWOD1",15,0)
 ;;
"RTN","ORWOD1",16,0)
 ;;The following table of Quick Orders (QO) was compiled by examining the
"RTN","ORWOD1",17,0)
 ;;QOs and whether or not they were contained in another entry of the Order
"RTN","ORWOD1",18,0)
 ;;Dialog file, e.g., Order Menu, Order Set and/or the Reminder Dialog
"RTN","ORWOD1",19,0)
 ;;file. QOs which are contained in those files should be edited ASAP after
"RTN","ORWOD1",20,0)
 ;;CPRS v27 is installed. QOs not contained in those files are less critical
"RTN","ORWOD1",21,0)
 ;;but should still be edited. Note that if the ORCM SEARCH/REPLACE option
"RTN","ORWOD1",22,0)
 ;;is used, it does not look for usage in the Reminder Dialog file and thus
"RTN","ORWOD1",23,0)
 ;;may give different results than the table below.
"RTN","ORWOD1",24,0)
 ;;
"RTN","ORWOD1",25,0)
 ;;The Quick Orders are listed in alphabetical order by QO name and include
"RTN","ORWOD1",26,0)
 ;;the QO's IEN (internal reference number), display name, and Legend code.
"RTN","ORWOD1",27,0)
 ;;The Legend code corresponds to a letter or letters in the Legend (see
"RTN","ORWOD1",28,0)
 ;;below.) You will need to evaluate each quick order and update it based on
"RTN","ORWOD1",29,0)
 ;;the Legend code(s).
"RTN","ORWOD1",30,0)
 ;;
"RTN","ORWOD1",31,0)
 ;;A Quick Order can be edited by using the "Enter/edit quick orders" option
"RTN","ORWOD1",32,0)
 ;;on the Order Menu Management menu in VistA (roll and scroll). At the
"RTN","ORWOD1",33,0)
 ;;prompt, "Select QUICK ORDER NAME:", enter the name of the Quick Order.
"RTN","ORWOD1",34,0)
 ;;The QO will then be displayed for your editing.  The "Enter/edit quick
"RTN","ORWOD1",35,0)
 ;;orders" option can also be used to edit a Personal Quick Order.
"RTN","ORWOD1",36,0)
 ;;
"RTN","ORWOD1",37,0)
 ;;Additionally, when OR*3.0*301 is released, it will include a new option
"RTN","ORWOD1",38,0)
 ;;entitled, Convert IV Inpatient QO to Infusion QO [OR CONVERT INP TO QO].
"RTN","ORWOD1",39,0)
 ;;This option will be on the ORDER MENU MANAGEMENT [ORCM MENU] menu. This
"RTN","ORWOD1",40,0)
 ;;option enables CACs at sites to convert an IV quick order that is set-up
"RTN","ORWOD1",41,0)
 ;;as an Inpatient quick order to the new Infusion quick order format. 
"RTN","ORWOD1",42,0)
 ;;
"RTN","ORWOD1",43,0)
 ;;QO Edit Hint:
"RTN","ORWOD1",44,0)
 ;;In addition to entering the QO name, users may also edit a Quick Order by
"RTN","ORWOD1",45,0)
 ;;entering the back tick (`) and the IEN at the "Select QUICK ORDER NAME:"
"RTN","ORWOD1",46,0)
 ;;prompt. For example, if the Quick Order name is PSI SICU CAM DOBUTAMINE 500
"RTN","ORWOD1",47,0)
 ;;MG and the IEN is 6200, a user may enter "`6200" at the "Select QUICK ORDER
"RTN","ORWOD1",48,0)
 ;;NAME:" prompt. This will save the time required to type the name of the Quick
"RTN","ORWOD1",49,0)
 ;;Order in at the "Select QUICK ORDER NAME:" prompt.
"RTN","ORWOD1",50,0)
 ;;
"RTN","ORWOD1",51,0)
 ;;Note: The term 'null', as used below, can be viewed as meaning 'not defined'.
"RTN","ORWOD1",52,0)
 ;;
"RTN","ORWOD1",53,0)
 ;;Legend:
"RTN","ORWOD1",54,0)
 ;;A...Problem: The IV type is null or the route is null.
"RTN","ORWOD1",55,0)
 ;;    Action:  Please edit the IV Type or route fields with the appropriate
"RTN","ORWOD1",56,0)
 ;;      information.
"RTN","ORWOD1",57,0)
 ;;B...Problem: The IV type is 'I' and the schedule is null.
"RTN","ORWOD1",58,0)
 ;;    Action:  For Intermittent IV Orders a schedule is needed to process the
"RTN","ORWOD1",59,0)
 ;;      order.  Enter a schedule which denotes the Intermittent IV dose.
"RTN","ORWOD1",60,0)
 ;;C...Problem: Continuous IV Type does not have a rate defined. When accepting
"RTN","ORWOD1",61,0)
 ;;      the order in CPRS, rate is required and must be between 1 and 9999.9,
"RTN","ORWOD1",62,0)
 ;;      a whole number, or text that contains an '@'. Some continuous IV Type
"RTN","ORWOD1",63,0)
 ;;      Quick Orders may not include a rate to allow provider to define at
"RTN","ORWOD1",64,0)
 ;;      time of order.
"RTN","ORWOD1",65,0)
 ;;    Action:  Evaluate need for rate default and assign in Quick Order if
"RTN","ORWOD1",66,0)
 ;;      appropriate. The infusion rate must be a number up to four digits and
"RTN","ORWOD1",67,0)
 ;;      it will allow up to one decimal place. If IV Type is not defined in
"RTN","ORWOD1",68,0)
 ;;      the Quick Order, then an IV Type must be defined in the Quick Order
"RTN","ORWOD1",69,0)
 ;;      set-up.
"RTN","ORWOD1",70,0)
 ;;D...Problem:  The IV type is 'I' but the rate is not a whole number minute
"RTN","ORWOD1",71,0)
 ;;      or hour yet not null.
"RTN","ORWOD1",72,0)
 ;;    Action:  A valid "Infuse Over" value must be assigned to the Quick
"RTN","ORWOD1",73,0)
 ;;      Order. Using the Quick Order Editor, add an "Infuse Over" value in
"RTN","ORWOD1",74,0)
 ;;      the number of minutes (maximum of 9999).
"RTN","ORWOD1",75,0)
 ;;E...Problem:  The IV limit or duration (limitation) value was other than
"RTN","ORWOD1",76,0)
 ;;      null or a whole number.
"RTN","ORWOD1",77,0)
 ;;    Action:  This field is not required but if it exists, it must be a
"RTN","ORWOD1",78,0)
 ;;      whole number. To correct this, follow the Help Text for the Limitation
"RTN","ORWOD1",79,0)
 ;;      Prompt in the Quick Order editor for this Quick Order.
"RTN","ORWOD1",80,0)
 ;;F...Problem:  The Order Dialogs with 'MM' in the display text
"RTN","ORWOD1",81,0)
 ;;    Action:  MMOL (millimole) has been added as a unit of measure.  Please 
"RTN","ORWOD1",82,0)
 ;;      replace 'MM' with MMOL.
"RTN","ORWOD1",83,0)
 ;;G...Problem:  Auto Accept Quick Order which was 'Y'es and now set to 'N'o.
"RTN","ORWOD1",84,0)
 ;;    Action:  These Quick Orders were converted from an Auto Accept Quick
"RTN","ORWOD1",85,0)
 ;;      Order to a non-Auto Accept Quick because they have at least one
"RTN","ORWOD1",86,0)
 ;;      invalid field. Please correct the problems identified by the Legend
"RTN","ORWOD1",87,0)
 ;;      code(s) for the Quick Order before setting the Quick Order back to
"RTN","ORWOD1",88,0)
 ;;      an Auto-Accept Quick Order.
"RTN","ORWOD1",89,0)
 ;;
"RTN","ORWOD1",90,0)
 ;;Note: QO Names and QO Display Names over 30 characters are truncated at 30
"RTN","ORWOD1",91,0)
 ;;      characters.  If in doubt on the Name you can use the IEN to edit the
"RTN","ORWOD1",92,0)
 ;;      Quick Order (see above).
"RTN","ORWOD1",93,0)
 ;;
"RTN","ORWOD1",94,0)
 ;;                            -----------------------
"RTN","ORWOD1",95,0)
 ;;                            
"RTN","ORWOD1",96,0)
 ;;  IEN Name                           Display Name                   Legend
"RTN","ORWOD1",97,0)
 ;;===== ============================== ============================== ======
"RTN","ORWOD1",98,0)
 ;;Q
"RTN","ORWORB")
0^2^B69468448
"RTN","ORWORB",1,0)
ORWORB ; slc/dee/REV/CLA,WAT - RPC functions which return user alert ;10:12 am JAN 31, 2001
"RTN","ORWORB",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,148,173,190,215,243,296**;Dec 17, 1997;Build 19
"RTN","ORWORB",3,0)
 ;
"RTN","ORWORB",4,0)
 ;This routine invokes to following ICR(s):
"RTN","ORWORB",5,0)
 ;ICR 4156     ;REGISTRATION, COMBAT VETERAN STATUS
"RTN","ORWORB",6,0)
 ;
"RTN","ORWORB",7,0)
URGENLST(ORY) ;return array of the  urgency for the notification
"RTN","ORWORB",8,0)
 N ORSRV,ORERROR
"RTN","ORWORB",9,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWORB",10,0)
 D GETLST^XPAR(.ORY,"USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY","I",.ORERROR)
"RTN","ORWORB",11,0)
 Q
"RTN","ORWORB",12,0)
 ;
"RTN","ORWORB",13,0)
FASTUSER(ORY) ;return current user's notifications across all patients
"RTN","ORWORB",14,0)
 N STRTDATE,STOPDATE,ORTOT,I,ORURG,URG,ORN,SORT,ORN0,URGLIST,REMLIST,REM,NONORLST,NONOR
"RTN","ORWORB",15,0)
 N ALRT,ALRTDT,ALRTPT,ALRTMSG,ALRTI,ALRTLOC,ALRTXQA,J,FWDBY,PRE,ALRTDFN
"RTN","ORWORB",16,0)
 K ^TMP("ORBG",$J)
"RTN","ORWORB",17,0)
 S STRTDATE="",STOPDATE="",FWDBY="Forwarded by: "
"RTN","ORWORB",18,0)
 D GETUSER1^XQALDATA("^TMP(""ORB"",$J)",DUZ,STRTDATE,STOPDATE)
"RTN","ORWORB",19,0)
 S ORTOT=^TMP("ORB",$J)
"RTN","ORWORB",20,0)
 D URGLIST^ORQORB(.URGLIST)
"RTN","ORWORB",21,0)
 D REMLIST^ORQORB(.REMLIST)
"RTN","ORWORB",22,0)
 D REMNONOR^ORQORB(.NONORLST)
"RTN","ORWORB",23,0)
 S J=0
"RTN","ORWORB",24,0)
 F I=1:1:ORTOT D
"RTN","ORWORB",25,0)
 .S ALRTDFN=""
"RTN","ORWORB",26,0)
 .S ALRT=^TMP("ORB",$J,I)
"RTN","ORWORB",27,0)
 .S PRE=$E(ALRT,1,1)
"RTN","ORWORB",28,0)
 .S ALRTXQA=$P(ALRT,U,2)  ;XQAID
"RTN","ORWORB",29,0)
 .S NONOR="" F  S NONOR=$O(NONORLST(NONOR)) Q:NONOR=""  D
"RTN","ORWORB",30,0)
 ..I ALRTXQA[NONOR S REM=1  ;allow this type of alert to be Removed
"RTN","ORWORB",31,0)
 .S ALRTMSG=$P($P(ALRT,U),PRE_"  ",2)
"RTN","ORWORB",32,0)
 .I $E(ALRT,4,8)'="-----" D  ;not forwarded alert info/comment
"RTN","ORWORB",33,0)
 ..S ORURG="n/a"
"RTN","ORWORB",34,0)
 ..S ALRTI=$P(ALRT,"  ")
"RTN","ORWORB",35,0)
 ..S ALRTPT=""
"RTN","ORWORB",36,0)
 ..S ALRTLOC=""
"RTN","ORWORB",37,0)
 ..I $E($P(ALRTXQA,";"),1,3)="TIU" S ORURG="Moderate"
"RTN","ORWORB",38,0)
 ..I $P(ALRTXQA,",")="OR" D
"RTN","ORWORB",39,0)
 ...S ORN=$P($P(ALRTXQA,";"),",",3)
"RTN","ORWORB",40,0)
 ...S URG=$G(URGLIST(ORN))
"RTN","ORWORB",41,0)
 ...S ORURG=$S(URG=1:"HIGH",URG=2:"Moderate",1:"low")
"RTN","ORWORB",42,0)
 ...S REM=$G(REMLIST(ORN))
"RTN","ORWORB",43,0)
 ...S ORN0=^ORD(100.9,ORN,0)
"RTN","ORWORB",44,0)
 ...S ALRTI=$S($P(ORN0,U,6)="INFODEL":"I",1:"")
"RTN","ORWORB",45,0)
 ...S ALRTDFN=$P(ALRTXQA,",",2)
"RTN","ORWORB",46,0)
 ...S ALRTLOC=$G(^DPT(+$G(ALRTDFN),.1))
"RTN","ORWORB",47,0)
 ..S ALRTI=$S(ALRTI="I":"I",1:"")
"RTN","ORWORB",48,0)
 ..I (ALRT["): ")!($G(ORN)=27&(ALRT[") CV")) D  ;WAT
"RTN","ORWORB",49,0)
 ...S ALRTPT=$P(ALRT,": ")
"RTN","ORWORB",50,0)
 ...S ALRTPT=$E(ALRTPT,4,$L(ALRTPT))
"RTN","ORWORB",51,0)
 ...I $G(ORN)=27&(ALRT[") CV") S ALRTMSG=$P($P(ALRT,U),": ",2) ;WAT
"RTN","ORWORB",52,0)
 ...E  S ALRTMSG=$P($P(ALRT,U),"): ",2) ;WAT
"RTN","ORWORB",53,0)
 ...I $E(ALRTMSG,1,1)="[" D
"RTN","ORWORB",54,0)
 ....S:'$L(ALRTLOC) ALRTLOC=$P($P(ALRTMSG,"]"),"[",2)
"RTN","ORWORB",55,0)
 ....S ALRTMSG=$P(ALRTMSG,"] ",2)
"RTN","ORWORB",56,0)
 ..I '$L($G(ALRTPT)) S ALRTPT="no patient"
"RTN","ORWORB",57,0)
 ..S ALRTDT=$P(ALRTXQA,";",3)
"RTN","ORWORB",58,0)
 ..S ALRTDT=$P(ALRTDT,".")_"."_$E($P(ALRTDT,".",2)_"0000",1,4)
"RTN","ORWORB",59,0)
 ..S ALRTDT=$E(ALRTDT,4,5)_"/"_$E(ALRTDT,6,7)_"/"_($E(ALRTDT,1,3)+1700)_"@"_$E($P(ALRTDT,".",2),1,2)_":"_$E($P(ALRTDT,".",2),3,4)
"RTN","ORWORB",60,0)
 ..;S ALRTDT=($E(ALRTDT,1,3)+1700)_"/"_$E(ALRTDT,4,5)_"/"_$E(ALRTDT,6,7)_"@"_$E($P(ALRTDT,".",2),1,2)_":"_$E($P(ALRTDT,".",2),3,4)
"RTN","ORWORB",61,0)
 ..S J=J+1,^TMP("ORBG",$J,J)=ALRTI_U_ALRTPT_U_ALRTLOC_U_ORURG_U_ALRTDT_U
"RTN","ORWORB",62,0)
 ..S ^TMP("ORBG",$J,J)=^TMP("ORBG",$J,J)_ALRTMSG_U_U_ALRTXQA_U_$G(REM)_U
"RTN","ORWORB",63,0)
 .;
"RTN","ORWORB",64,0)
 .;if alert forward info/comment:
"RTN","ORWORB",65,0)
 .I $E(ALRTMSG,1,5)="-----" D
"RTN","ORWORB",66,0)
 ..S ALRTMSG=$P(ALRTMSG,"-----",2)
"RTN","ORWORB",67,0)
 ..I $E(ALRTMSG,1,14)=FWDBY D
"RTN","ORWORB",68,0)
 ...S J=J+1,^TMP("ORBG",$J,J)=FWDBY_U_$P($P(ALRTMSG,FWDBY,2),"Generated: ")_$P($P(ALRTMSG,FWDBY,2),"Generated: ",2)
"RTN","ORWORB",69,0)
 ..E  S ^TMP("ORBG",$J,J)=^TMP("ORBG",$J,J)_U_""""_ALRTMSG_""""
"RTN","ORWORB",70,0)
 S ^TMP("ORBG",$J)=""
"RTN","ORWORB",71,0)
 S ORY=$NA(^TMP("ORBG",$J))
"RTN","ORWORB",72,0)
 Q
"RTN","ORWORB",73,0)
 ;
"RTN","ORWORB",74,0)
GETDATA(ORY,XQAID) ; return XQADATA for an alert
"RTN","ORWORB",75,0)
 N SHOWADD
"RTN","ORWORB",76,0)
 S ORY=""
"RTN","ORWORB",77,0)
 Q:$G(XQAID)=""!('$D(^XTV(8992,"AXQA",XQAID)))
"RTN","ORWORB",78,0)
 D GETACT^XQALERT(XQAID)
"RTN","ORWORB",79,0)
 S ORY=XQADATA
"RTN","ORWORB",80,0)
 I ($E(XQAID,1,3)="TIU"),(+ORY>0) D
"RTN","ORWORB",81,0)
 . S SHOWADD=1
"RTN","ORWORB",82,0)
 . S ORY=ORY_$$RESOLVE^TIUSRVLO(+ORY)
"RTN","ORWORB",83,0)
 K XQAID,XQADATA,XQAOPT,XQAROU
"RTN","ORWORB",84,0)
 Q
"RTN","ORWORB",85,0)
 ;
"RTN","ORWORB",86,0)
KILUNSNO(Y,ORVP) ; Delete unsigned order alerts if no unsigned orders remaining
"RTN","ORWORB",87,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWORB",88,0)
 D UNOTIF^ORCSIGN
"RTN","ORWORB",89,0)
 Q
"RTN","ORWORB",90,0)
 ;
"RTN","ORWORB",91,0)
UNFLORD(ORY,DFN,XQAID) ; -- auto-unflag orders?/delete alert
"RTN","ORWORB",92,0)
 Q:'$L(DFN)!('$L(XQAID))
"RTN","ORWORB",93,0)
 N ORI,ORIFN,ORA,XQAKILL,ORN,ORBY,ORAUTO,ORUNF
"RTN","ORWORB",94,0)
 S ORN=+$O(^ORD(100.9,"B","FLAGGED ORDERS",0))
"RTN","ORWORB",95,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORN)
"RTN","ORWORB",96,0)
 D LIST^ORQOR1(.ORBY,DFN,"ALL",12,"","")
"RTN","ORWORB",97,0)
 S ORAUTO=+$$GET^XPAR("ALL","ORPF AUTO UNFLAG")
"RTN","ORWORB",98,0)
 S ORI=0 F  S ORI=$O(ORBY(ORI)) Q:ORI'>0  D
"RTN","ORWORB",99,0)
 . I ORAUTO D  ; unflag
"RTN","ORWORB",100,0)
 . . S ORUNF=+$E($$NOW^XLFDT,1,12)_U_DUZ_"^Auto-Unflagged"
"RTN","ORWORB",101,0)
 . . S ORIFN=$P(ORBY(ORI),U),ORA=+$P(ORIFN,";",2)
"RTN","ORWORB",102,0)
 . . I ORIFN,$D(^OR(100,+ORIFN,0)) S $P(^(8,ORA,3),U)=0,$P(^(3),U,6,8)=ORUNF D MSG^ORCFLAG(ORIFN) ; unflag
"RTN","ORWORB",103,0)
 I ORAUTO!(+$G(ORBY(1))=0) D DELETE^XQALERT
"RTN","ORWORB",104,0)
 Q
"RTN","ORWORB",105,0)
KILEXMED(Y,ORDFN)  ; -- Delete expiring meds notification if no expiring meds remaining
"RTN","ORWORB",106,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",107,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",108,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",109,0)
 N XQAKILL,ORNIFN,ORVP,ORIO S OROI=""
"RTN","ORWORB",110,0)
 F OROI="INPT","OUTPT" D
"RTN","ORWORB",111,0)
 .S ORNIFN=$O(^ORD(100.9,"B","MEDICATIONS EXPIRING - "_OROI,0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",112,0)
 .Q:'$L($G(ORNIFN))
"RTN","ORWORB",113,0)
 .S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; expiring meds notif
"RTN","ORWORB",114,0)
 .I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",115,0)
 .I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",116,0)
 Q
"RTN","ORWORB",117,0)
KILEXOI(Y,ORDFN,ORNIFN)  ; -- Delete expiring flagged OI notification if no flagged expiring OI remaining
"RTN","ORWORB",118,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",119,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",120,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",121,0)
 N XQAKILL,ORVP
"RTN","ORWORB",122,0)
 S ORVP=ORDFN_";DPT("
"RTN","ORWORB",123,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; flagged expiring OI notifications
"RTN","ORWORB",124,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",125,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",126,0)
 Q
"RTN","ORWORB",127,0)
KILUNVOR(Y,ORDFN)  ; -- Delete UNVERIFIED ORDER notification if none remaining within current admission/30 days
"RTN","ORWORB",128,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT,ORDDT S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",129,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",130,0)
 S ORDDT=$$FMADD^XLFDT(OREDT,"-90")
"RTN","ORWORB",131,0)
 ;get current admission date/time:
"RTN","ORWORB",132,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",133,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",134,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",135,0)
 S ORBDT=$S(ORDDT>ORBDT:ORDDT,1:ORBDT)  ;max past days to use is 90 days
"RTN","ORWORB",136,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",137,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",138,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",139,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",140,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",141,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",142,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",143,0)
 Q
"RTN","ORWORB",144,0)
KILUNVMD(Y,ORDFN)  ; -- Delete UNVERIFIED MEDS notification if none remaining within current admission/30 days
"RTN","ORWORB",145,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT,ORDDT S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",146,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",147,0)
 S ORDDT=$$FMADD^XLFDT(OREDT,"-90")
"RTN","ORWORB",148,0)
 ;get current admission date/time:
"RTN","ORWORB",149,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",150,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",151,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",152,0)
 S ORBDT=$S(ORDDT>ORBDT:ORDDT,1:ORBDT)  ;max past days to use is 90 days
"RTN","ORWORB",153,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",154,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",155,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",156,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED MEDICATION ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",157,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",158,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",159,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",160,0)
 Q
"RTN","ORWORB",161,0)
ESORD(ORY,XQAID)   ;order(s) requiring electronic signature follow-up
"RTN","ORWORB",162,0)
 K XQAKILL
"RTN","ORWORB",163,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORX,ORZ,ORDERS,ORDNUM,ORQUIT,ORBLMDEL
"RTN","ORWORB",164,0)
 S ORBXQAID=XQAID,ORDERS=0,ORQUIT=0
"RTN","ORWORB",165,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORWORB",166,0)
 S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",167,0)
 ;the FLG code for UNSIGNED orders in ORQ1 is '11'
"RTN","ORWORB",168,0)
 ;get unsigned orders - if none exist, delete alert then quit:
"RTN","ORWORB",169,0)
 D EN^ORQ1(ORPT_";DPT(",ORDG,11,"","","",0,0)
"RTN","ORWORB",170,0)
 S ORX="",ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""  I +$G(^TMP("ORR",$J,ORX,"TOT"))<1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",171,0)
 ;
"RTN","ORWORB",172,0)
 ;user does not have ORES key, delete user's alert:
"RTN","ORWORB",173,0)
 I '$D(^XUSEC("ORES",DUZ)) S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",174,0)
 ;
"RTN","ORWORB",175,0)
 ;if prov is NOT linked to pt via attending, primary or teams:
"RTN","ORWORB",176,0)
 I $$PPLINK^ORQPTQ1(DUZ,ORPT)=0 D
"RTN","ORWORB",177,0)
 .S ORX="" F  S ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""!(ORDERS=1)  D
"RTN","ORWORB",178,0)
 ..S ORZ="" F  S ORZ=$O(^TMP("ORR",$J,ORX,ORZ)) Q:+ORZ=0!(ORDERS=1)  D
"RTN","ORWORB",179,0)
 ...S ORDNUM=^TMP("ORR",$J,ORX,ORZ)
"RTN","ORWORB",180,0)
 ...;quit if this unsigned order's last action was made by the user
"RTN","ORWORB",181,0)
 ...I DUZ=+$$UNSIGNOR^ORQOR2(ORDNUM) S ORDERS=1
"RTN","ORWORB",182,0)
 .I ORDERS'=1 D  ;provider has no outstanding unsigned orders for pt
"RTN","ORWORB",183,0)
 ..S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID)  ;delete alert for this user
"RTN","ORWORB",184,0)
 K ^TMP("ORR",$J)
"RTN","ORWORB",185,0)
 Q
"RTN","ORWORB",186,0)
 ;
"RTN","ORWORB",187,0)
TXTFUP(ROOT,DFN,NOTIF,XQADATA) ; Follow-up for text messages
"RTN","ORWORB",188,0)
 ;
"RTN","ORWORB",189,0)
 I NOTIF=67 D CHGRAD
"RTN","ORWORB",190,0)
 Q
"RTN","ORWORB",191,0)
 ;
"RTN","ORWORB",192,0)
CHGRAD ;GUI follow-up for Imaging Request Changed (#67)
"RTN","ORWORB",193,0)
 S ROOT=$NA(^TMP($J,"RAE4"))
"RTN","ORWORB",194,0)
 K @ROOT
"RTN","ORWORB",195,0)
 D SET1^RAO7PC4  ;DBIA #3563
"RTN","ORWORB",196,0)
 Q
"RTN","ORWORB",197,0)
 ;
"RTN","ORWORB",198,0)
GETSORT(ORY) ;return notification sort method^direction for user/division/system/pkg
"RTN","ORWORB",199,0)
 S ORY=$$GET^XPAR("ALL","ORB SORT METHOD",1,"I")_U_$$GET^XPAR("ALL","ORB SORT DIRECTION",1,"I")
"RTN","ORWORB",200,0)
 Q
"RTN","ORWORB",201,0)
 ;
"RTN","ORWORB",202,0)
SETSORT(ORERR,SORT,DIR) ;set notification sort method^direction for user
"RTN","ORWORB",203,0)
 D EN^XPAR(DUZ_";VA(200,","ORB SORT METHOD",1,SORT,.ORERR)
"RTN","ORWORB",204,0)
 I $L($G(DIR)) D EN^XPAR(DUZ_";VA(200,","ORB SORT DIRECTION",1,DIR,.ORERR)
"RTN","ORWORB",205,0)
 Q
"RTN","ORWTPUA")
0^28^B2236253
"RTN","ORWTPUA",1,0)
ORWTPUA ; SLC/STAFF Personal Preference - Utility Alerts ; 4/20/07 10:01am
"RTN","ORWTPUA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,243,296**;Oct 24, 2000;Build 19
"RTN","ORWTPUA",3,0)
 ;
"RTN","ORWTPUA",4,0)
START(USER) ; $$(user) -> user's surrogate start date/time
"RTN","ORWTPUA",5,0)
 Q $P($G(^XTV(8992,+$G(USER),0)),U,3)
"RTN","ORWTPUA",6,0)
 ;
"RTN","ORWTPUA",7,0)
STOP(USER) ; $$(user) -> user's surrogate stop date/time
"RTN","ORWTPUA",8,0)
 Q $P($G(^XTV(8992,+$G(USER),0)),U,4)
"RTN","ORWTPUA",9,0)
 ;
"RTN","ORWTPUA",10,0)
CHKSURR(USER,SURR) ; $$(user,surrogate) -> 1 if ok else 0^reason for reject
"RTN","ORWTPUA",11,0)
 N OK,START
"RTN","ORWTPUA",12,0)
 S USER=+$G(USER),SURR=+$G(SURR)
"RTN","ORWTPUA",13,0)
 I USER=SURR Q "0^You cannot specify yourself as your own surrogate!"
"RTN","ORWTPUA",14,0)
 S START=$$GET1^DIQ(8992,(SURR_","),.02,"I")
"RTN","ORWTPUA",15,0)
 I START<.5 Q 1
"RTN","ORWTPUA",16,0)
 I START=USER Q "0^You are designated as the surrogate for this user - can't do it!"
"RTN","ORWTPUA",17,0)
 S OK=1 F  S START=$$GET1^DIQ(8992,(START_","),.02,"I") Q:START'>0  I START=USER S OK=0 Q
"RTN","ORWTPUA",18,0)
 I 'OK Q "0^This forms a circle which leads back to you - can't do it!"
"RTN","ORWTPUA",19,0)
 Q 1
"RTN","ORWTPUA",20,0)
 ;
"RTN","ORWTPUA",21,0)
GETSURR(USER) ; $$(user ien) -> surrogate ien
"RTN","ORWTPUA",22,0)
 Q $$CURRSURO^XQALSURO(+$G(USER))
"RTN","ORWTPUA",23,0)
 ;
"RTN","ORWTPUA",24,0)
SAVESURR(USER,SURR,START,STOP) ; save user's surrogate info
"RTN","ORWTPUA",25,0)
 N RET
"RTN","ORWTPUA",26,0)
 D REMVSURO^XQALSURO(USER) Q:SURR=-1 1
"RTN","ORWTPUA",27,0)
 S RET=$$SETSURO1^XQALSURO(USER,SURR,START,STOP)
"RTN","ORWTPUA",28,0)
 Q RET
"RTN","ORY243")
1^7
"RTN","ORY2430")
1^8
"RTN","ORY24301")
1^9
"RTN","ORY24302")
1^10
"RTN","ORY24303")
1^11
"RTN","ORY24304")
1^12
"RTN","ORY24305")
1^13
"RTN","ORY24306")
1^14
"RTN","ORY24307")
1^15
"RTN","ORY24308")
1^16
"RTN","ORY24309")
1^17
"RTN","ORY2431")
1^18
"RTN","ORY2432")
1^19
"RTN","ORY2433")
1^20
"RTN","ORY2434")
1^21
"RTN","ORY243A")
1^22
"RTN","ORY243ES")
1^23
"RTN","ORY243R")
1^24
"RTN","ORY296")
0^25^B1180350
"RTN","ORY296",1,0)
ORY296 ;SLCOIFO - Pre and Post-init for patch OR*3*296 ; 6/30/08 5:58am
"RTN","ORY296",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**296**;Dec 17, 1997;Build 19
"RTN","ORY296",3,0)
 ;
"RTN","ORY296",4,0)
PRE ; initiate pre-init processes
"RTN","ORY296",5,0)
 Q
"RTN","ORY296",6,0)
 ;
"RTN","ORY296",7,0)
POST ; initiate post-init processes
"RTN","ORY296",8,0)
 ;
"RTN","ORY296",9,0)
 D MAIL
"RTN","ORY296",10,0)
 Q
"RTN","ORY296",11,0)
 ;
"RTN","ORY296",12,0)
MAIL ; send bulletin of installation time
"RTN","ORY296",13,0)
 N COUNT,DIFROM,I,START,TEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ORY296",14,0)
 S COUNT=0,XMDUZ="CPRS PACKAGE",XMTEXT="TEXT("
"RTN","ORY296",15,0)
 S XMSUB="Version "_$P($T(VERSION),";;",2)_" Installed"
"RTN","ORY296",16,0)
 F I="G.CPRS GUI INSTALL@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","ORY296",17,0)
 S X=$P($T(VERSION),";;",2)
"RTN","ORY296",18,0)
 D LINE("Version "_X_" has been installed.")
"RTN","ORY296",19,0)
 D LINE(" ")
"RTN","ORY296",20,0)
 D LINE("Install complete:  "_$$FMTE^XLFDT($$NOW^XLFDT()))
"RTN","ORY296",21,0)
 D ^XMD
"RTN","ORY296",22,0)
 Q
"RTN","ORY296",23,0)
 ;
"RTN","ORY296",24,0)
LINE(DATA) ; set text into array
"RTN","ORY296",25,0)
 S COUNT=COUNT+1
"RTN","ORY296",26,0)
 S TEXT(COUNT)=DATA
"RTN","ORY296",27,0)
 Q
"RTN","ORY296",28,0)
 ;
"RTN","ORY296",29,0)
VERSION ;;27.90
"RTN","ORY296",30,0)
 ;
"RTN","ORYCHKE")
0^26^B2490043
"RTN","ORYCHKE",1,0)
ORYCHKE ;SLC/DAN Environmental check for installations ;8/10/008  13:18
"RTN","ORYCHKE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**296**;Dec 17, 1997;Build 19
"RTN","ORYCHKE",3,0)
 ;This routine will check to see if the user is in a production account
"RTN","ORYCHKE",4,0)
 ;if they are then the user will not be allowed to install this
"RTN","ORYCHKE",5,0)
 ;patch/build/bundle
"RTN","ORYCHKE",6,0)
 ;
"RTN","ORYCHKE",7,0)
 I $$PROD^XUPROD D
"RTN","ORYCHKE",8,0)
 .W !,"You are attempting to install this software into your production account.",!,"At this time, this software is not ready for a production install."
"RTN","ORYCHKE",9,0)
 .W !!,"Please verify the account you're attempting to install into and",!,"if you believe you're correct, contact Ron Massey or Tana Defa.",!!,"INSTALLATION ABORTED!"
"RTN","ORYCHKE",10,0)
 .S XPDABORT=1
"RTN","ORYCHKE",11,0)
 Q
"VER")
8.0^22.0
"^DD",101.41,101.41,0)
FIELD^^99^30
"^DD",101.41,101.41,0,"DDA")
N
"^DD",101.41,101.41,0,"DT")
3040505
"^DD",101.41,101.41,0,"IX","AB",101.41,.01)

"^DD",101.41,101.41,0,"IX","AD",101.412,2)

"^DD",101.41,101.41,0,"IX","AM",101.41,99)

"^DD",101.41,101.41,0,"IX","AM2",101.41,2)

"^DD",101.41,101.41,0,"IX","AM51",101.41,51)

"^DD",101.41,101.41,0,"IX","AM52",101.41,52)

"^DD",101.41,101.41,0,"IX","AMM",101.412,.01)

"^DD",101.41,101.41,0,"IX","AMM2",101.412,2)

"^DD",101.41,101.41,0,"IX","AMM3",101.412,3)

"^DD",101.41,101.41,0,"IX","AMM4",101.412,4)

"^DD",101.41,101.41,0,"IX","AMM5",101.412,5)

"^DD",101.41,101.41,0,"IX","APKG",101.41,7)

"^DD",101.41,101.41,0,"IX","C",101.41,2)

"^DD",101.41,101.41,0,"NM","ORDER DIALOG")

"^DD",101.41,101.41,0,"PT",100,2)

"^DD",101.41,101.41,0,"PT",100,7)

"^DD",101.41,101.41,0,"PT",100.045,.02)

"^DD",101.41,101.41,0,"PT",100.5,4)

"^DD",101.41,101.41,0,"PT",100.5,5)

"^DD",101.41,101.41,0,"PT",100.98,4)

"^DD",101.41,101.41,0,"PT",101.412,1)

"^DD",101.41,101.41,0,"PT",101.412,2)

"^DD",101.41,101.41,0,"PT",101.415,2)

"^DD",101.41,101.41,0,"PT",101.416,.02)

"^DD",101.41,101.41,0,"PT",101.441,.01)

"^DD",101.41,101.41,0,"PT",801.41,15)

"^DD",101.41,101.41,0,"PT",801.41,18)

"^DD",101.41,101.41,0,"PT",801.4118,.01)

"^DD",101.41,101.41,0,"VRPK")
ORDER ENTRY/RESULTS REPORTING
"^DD",101.41,101.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",101.41,101.41,.01,1,0)
^.1^^-1
"^DD",101.41,101.41,.01,1,2,0)
101.41^AB
"^DD",101.41,101.41,.01,1,2,1)
S ^ORD(101.41,"AB",$E(X,1,63),DA)=""
"^DD",101.41,101.41,.01,1,2,2)
K ^ORD(101.41,"AB",$E(X,1,63),DA)
"^DD",101.41,101.41,.01,1,2,"%D",0)
^^1^1^2971020^
"^DD",101.41,101.41,.01,1,2,"%D",1,0)
This is a regular index on the full 63 characters of the Name field.
"^DD",101.41,101.41,.01,1,2,"DT")
2971020
"^DD",101.41,101.41,.01,3)
Answer must be 3-63 characters in length.
"^DD",101.41,101.41,.01,21,0)
^.001^3^3^3020110^^^^
"^DD",101.41,101.41,.01,21,1,0)
This is the name of the dialog; entries that were converted from the
"^DD",101.41,101.41,.01,21,2,0)
Protocol file will retain the same name.  Namespacing is not required,
"^DD",101.41,101.41,.01,21,3,0)
but still encouraged.
"^DD",101.41,101.41,.01,"DT")
2971020
"^DD",101.41,101.41,2,0)
DISPLAY TEXT^FX^^0;2^K:$L(X)>80!($L(X)<3)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.41,2,1,0)
^.1
"^DD",101.41,101.41,2,1,1,0)
101.41^C
"^DD",101.41,101.41,2,1,1,1)
S ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)=""
"^DD",101.41,101.41,2,1,1,2)
K ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)
"^DD",101.41,101.41,2,1,1,"DT")
2950112
"^DD",101.41,101.41,2,1,2,0)
101.41^AM2^MUMPS
"^DD",101.41,101.41,2,1,2,1)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,2)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,2,1,2,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.41,2,1,2,"DT")
2990210
"^DD",101.41,101.41,2,3)
Answer must be 3-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=). 
"^DD",101.41,101.41,2,21,0)
^.001^1^1^3010913^^^^
"^DD",101.41,101.41,2,21,1,0)
The text of this dialog's name as it appears on a menu or subheader.
"^DD",101.41,101.41,2,"DT")
3000823
"^DD",101.41,101.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",101.41,101.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",101.41,101.41,3,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",101.41,101.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",101.41,101.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",101.41,101.41,3,"DT")
2950112
"^DD",101.41,101.41,4,0)
TYPE^RS^P:prompt;D:dialog;Q:quick order;O:order set;M:menu;A:action;^0;4^Q
"^DD",101.41,101.41,4,3)
Specify a type for this dialog.
"^DD",101.41,101.41,4,21,0)
^.001^5^5^3080424^^^^
"^DD",101.41,101.41,4,21,1,0)
This field defines the type of order dialog to be processed.  Control
"^DD",101.41,101.41,4,21,2,0)
will be passed to the OE/RR Dialog Processor for dialog items; menu types
"^DD",101.41,101.41,4,21,3,0)
are used for displaying and selecting dialog items.  Action types will only
"^DD",101.41,101.41,4,21,4,0)
execute the entry and exit actions, ignoring any items that may exist; these
"^DD",101.41,101.41,4,21,5,0)
dialogs should not create entries in the Orders file.
"^DD",101.41,101.41,4,"DT")
2950716
"^DD",101.41,101.41,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.41,101.41,5,3)
Enter the display group containing orderable items defined by this dialog.
"^DD",101.41,101.41,5,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,5,21,1,0)
This field determines what display group this dialog has been defined for.
"^DD",101.41,101.41,5,21,2,0)
It will define which orderable items are selectable with this dialog,
"^DD",101.41,101.41,5,21,3,0)
as well as what service to send the order to when it is complete.
"^DD",101.41,101.41,5,"DT")
2950112
"^DD",101.41,101.41,6,0)
SIGNATURE REQUIRED^SX^0:NONE;1:ORELSE;2:ORES;^0;6^Q
"^DD",101.41,101.41,6,3)
Enter the OR key required to sign orders created by this dialog
"^DD",101.41,101.41,6,21,0)
^.001^6^6^3040602^^^^
"^DD",101.41,101.41,6,21,1,0)
This field indicates what signature will be required for orders created by
"^DD",101.41,101.41,6,21,2,0)
this dialog, to be considered complete and ready to release to the service
"^DD",101.41,101.41,6,21,3,0)
for action.  If this flag is set to NO and the dialog contains a prompt
"^DD",101.41,101.41,6,21,4,0)
for item(s) from the Orderable Item file, the order created may still
"^DD",101.41,101.41,6,21,5,0)
require a signature if any of the items ordered are individually flagged
"^DD",101.41,101.41,6,21,6,0)
as requiring a signature.
"^DD",101.41,101.41,6,"DT")
3040806
"^DD",101.41,101.41,7,0)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"^DD",101.41,101.41,7,1,0)
^.1
"^DD",101.41,101.41,7,1,1,0)
101.41^APKG
"^DD",101.41,101.41,7,1,1,1)
S ^ORD(101.41,"APKG",$E(X,1,30),DA)=""
"^DD",101.41,101.41,7,1,1,2)
K ^ORD(101.41,"APKG",$E(X,1,30),DA)
"^DD",101.41,101.41,7,1,1,"DT")
2970325
"^DD",101.41,101.41,7,3)
Enter the VISTA package that is to receive orders created by this dialog.
"^DD",101.41,101.41,7,21,0)
^^3^3^2950208^
"^DD",101.41,101.41,7,21,1,0)
This is the VISTA package that is intended to receive orders created by
"^DD",101.41,101.41,7,21,2,0)
this dialog; this is required for creating the HL7 messages to pass the
"^DD",101.41,101.41,7,21,3,0)
order.
"^DD",101.41,101.41,7,"DT")
2970325
"^DD",101.41,101.41,8,0)
VERIFY ORDER^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.41,8,3)
Enter YES to have orders created by this dialog presented to the user before saving, with the opportunity to edit.
"^DD",101.41,101.41,8,21,0)
^^3^3^2950623^
"^DD",101.41,101.41,8,21,1,0)
This field is a flag, which determines if the order created by this dialog
"^DD",101.41,101.41,8,21,2,0)
will be presented to the user for verification before saving in the Orders
"^DD",101.41,101.41,8,21,3,0)
file; for most quick orders, this flag should be set to 0 (no).
"^DD",101.41,101.41,8,"DT")
2950623
"^DD",101.41,101.41,9,0)
ASK FOR ANOTHER ORDER^S^0:NO;1:YES;2:YES-DON'T ASK;^0;9^Q
"^DD",101.41,101.41,9,3)
Enter YES to have the user asked to enter another order from this dialog before exiting.
"^DD",101.41,101.41,9,21,0)
^^6^6^2970616^^^
"^DD",101.41,101.41,9,21,1,0)
This field allows the user to add another order from this dialog, when the
"^DD",101.41,101.41,9,21,2,0)
initial order is accepted and placed; if set to YES, the user will be
"^DD",101.41,101.41,9,21,3,0)
asked "Add another <dialog display text> order?" to allow for either
"^DD",101.41,101.41,9,21,4,0)
exiting the processor or adding an additional order of the same type.
"^DD",101.41,101.41,9,21,5,0)
This field can also be set to YES-DON'T ASK to force the processor to
"^DD",101.41,101.41,9,21,6,0)
automatically drop into prompting for another order without asking first.
"^DD",101.41,101.41,9,"DT")
2970616
"^DD",101.41,101.41,10,0)
ITEMS^101.412IA^^10;0
"^DD",101.41,101.41,10,21,0)
^.001^5^5^3000822^^^^
"^DD",101.41,101.41,10,21,1,0)
This field contains the components for dialogs:
"^DD",101.41,101.41,10,21,2,0)
     Dialogs      -> prompts
"^DD",101.41,101.41,10,21,3,0)
     Quick orders -> prompts (completed)
"^DD",101.41,101.41,10,21,4,0)
     Order sets   -> dialogs or quick orders
"^DD",101.41,101.41,10,21,5,0)
     Menus        -> dialogs, quick orders, or order sets
"^DD",101.41,101.41,11,0)
DATA TYPE^S^D:date/time;R:free text date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;^1;1^Q
"^DD",101.41,101.41,11,3)
Enter the type of data to be collected at this prompt.
"^DD",101.41,101.41,11,21,0)
^^2^2^2950823^^
"^DD",101.41,101.41,11,21,1,0)
This is the type of data being prompted for; this field is used to define
"^DD",101.41,101.41,11,21,2,0)
a call to the reader (^DIR) in most cases.
"^DD",101.41,101.41,11,23,0)
^^1^1^2950823^^
"^DD",101.41,101.41,11,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,11,"DT")
2950407
"^DD",101.41,101.41,12,0)
DOMAIN^F^^1;2^K:$L(X)>235!($L(X)<1) X
"^DD",101.41,101.41,12,3)
Answer must be 1-235 characters in length.
"^DD",101.41,101.41,12,21,0)
^^3^3^2990225^^^^
"^DD",101.41,101.41,12,21,1,0)
This is a parameter that may be used to further specify the data type.
"^DD",101.41,101.41,12,21,2,0)
The string stored here should be appropriate for the second ^-piece of
"^DD",101.41,101.41,12,21,3,0)
DIR(0) when used with the data type field.
"^DD",101.41,101.41,12,23,0)
^^1^1^2990225^^^^
"^DD",101.41,101.41,12,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,12,"DT")
2990225
"^DD",101.41,101.41,13,0)
ID^F^^1;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.41,101.41,13,3)
Answer must be 2-10 characters in length.
"^DD",101.41,101.41,13,21,0)
^.001^20^20^3010727^^
"^DD",101.41,101.41,13,21,1,0)
This field may contain a single word identifier which will be
"^DD",101.41,101.41,13,21,2,0)
stored with the user response in the Orders file #100, where it
"^DD",101.41,101.41,13,21,3,0)
will be indexed for quick reference to certain values in the
"^DD",101.41,101.41,13,21,4,0)
order dialog.  The following are some examples of values
"^DD",101.41,101.41,13,21,5,0)
currently in use:
"^DD",101.41,101.41,13,21,6,0)
 
"^DD",101.41,101.41,13,21,7,0)
   START      -> Start date/time
"^DD",101.41,101.41,13,21,8,0)
   STOP       -> Stop date/time
"^DD",101.41,101.41,13,21,9,0)
   SCHEDULE   -> Administration Schedule
"^DD",101.41,101.41,13,21,10,0)
   ORDERABLE  -> Orderable Item
"^DD",101.41,101.41,13,21,11,0)
   DRUG       -> Dispense Drug
"^DD",101.41,101.41,13,21,12,0)
   CANCEL     -> Cancel Future Orders flag
"^DD",101.41,101.41,13,21,13,0)
   COMMENT    -> Word processing comments
"^DD",101.41,101.41,13,21,14,0)
 
"^DD",101.41,101.41,13,21,15,0)
These values must be unique among entries within an order dialog
"^DD",101.41,101.41,13,21,16,0)
but do not need to be unique across the entire file.  Be sure to
"^DD",101.41,101.41,13,21,17,0)
check the IDs assigned to generic text entries to make sure that
"^DD",101.41,101.41,13,21,18,0)
all IDs are unique.  In order to avoid potential problems it's
"^DD",101.41,101.41,13,21,19,0)
recommended that you use unique IDs for any local entries that you
"^DD",101.41,101.41,13,21,20,0)
create.
"^DD",101.41,101.41,13,"DT")
2960215
"^DD",101.41,101.41,17,0)
VALIDATION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,17,9)
@
"^DD",101.41,101.41,17,21,0)
^^3^3^2960912^
"^DD",101.41,101.41,17,21,1,0)
This is MUMPS code that will be executed at the time of releasing an
"^DD",101.41,101.41,17,21,2,0)
order created with this dialog; dialog responses may be checked again
"^DD",101.41,101.41,17,21,3,0)
here before releasing the order to the service.
"^DD",101.41,101.41,17,"DT")
2960912
"^DD",101.41,101.41,19,0)
ADDITIONAL TEXT^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,19,9)
@
"^DD",101.41,101.41,19,21,0)
^^3^3^2960405^^
"^DD",101.41,101.41,19,21,1,0)
This is MUMPS code that will be executed when order ORIFN created by this
"^DD",101.41,101.41,19,21,2,0)
dialog is about to be displayed; any string that should be appended to the
"^DD",101.41,101.41,19,21,3,0)
order text should be returned in Y.
"^DD",101.41,101.41,19,"DT")
2960405
"^DD",101.41,101.41,20,0)
DESCRIPTION^101.411^^2;0
"^DD",101.41,101.41,20,21,0)
^^1^1^2990726^^
"^DD",101.41,101.41,20,21,1,0)
This is a description of the dialog and its uses.
"^DD",101.41,101.41,21,0)
RESPONSES^101.416^^6;0
"^DD",101.41,101.41,21,21,0)
^^2^2^2971219^
"^DD",101.41,101.41,21,21,1,0)
This multiple contains any responses to prompts that have been pre-answered
"^DD",101.41,101.41,21,21,2,0)
to create a quick order.
"^DD",101.41,101.41,30,0)
ENTRY ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,30,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,30,9)
@
"^DD",101.41,101.41,30,21,0)
^^4^4^2950425^
"^DD",101.41,101.41,30,21,1,0)
This is MUMPS code that will be executed at the top of a dialog, prior to
"^DD",101.41,101.41,30,21,2,0)
the execution of any prompts; it may perform functions such as listing
"^DD",101.41,101.41,30,21,3,0)
the recent Radiology exams before ordering a new one, or alerting the
"^DD",101.41,101.41,30,21,4,0)
user to an existing diet order before making a change.
"^DD",101.41,101.41,30,"DT")
2950425
"^DD",101.41,101.41,31,0)
QUICK SETUP^K^^3.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,31,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,31,9)
@
"^DD",101.41,101.41,31,21,0)
^^3^3^2970113^
"^DD",101.41,101.41,31,21,1,0)
This is MUMPS code that will be executed in the place of the Entry Action
"^DD",101.41,101.41,31,21,2,0)
when creating quick orders for this dialog; variables may be set here
"^DD",101.41,101.41,31,21,3,0)
instead to bypass the usual dependence on specific patient values.
"^DD",101.41,101.41,31,"DT")
2970113
"^DD",101.41,101.41,40,0)
EXIT ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,40,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,40,9)
@
"^DD",101.41,101.41,40,21,0)
^^2^2^2950622^
"^DD",101.41,101.41,40,21,1,0)
This is MUMPS code that will be executed upon completion of processing the
"^DD",101.41,101.41,40,21,2,0)
dialog; it is currently used only with dialog-type entries.
"^DD",101.41,101.41,40,"DT")
2950622
"^DD",101.41,101.41,50,0)
CONTROLS^101.415A^^50;0
"^DD",101.41,101.41,51,0)
COLUMN WIDTH^NJ3,0^^5;1^K:+X'=X!(X>240)!(X<20)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,51,1,0)
^.1
"^DD",101.41,101.41,51,1,1,0)
101.41^AM51^MUMPS
"^DD",101.41,101.41,51,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,51,1,1,"%D",1,0)
Update TIMESTAMP whenever COLUMN WIDTH is changed.
"^DD",101.41,101.41,51,1,1,"DT")
2990210
"^DD",101.41,101.41,51,3)
Type a Number between 20 and 240, 0 Decimal Digits
"^DD",101.41,101.41,51,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,51,21,1,0)
This is the width, in characters, for each column in a menu.  For example,
"^DD",101.41,101.41,51,21,2,0)
to have 3 columns on an 80 character device, enter a width of 26.
"^DD",101.41,101.41,51,"DT")
2990210
"^DD",101.41,101.41,52,0)
MNEMONIC WIDTH^NJ1,0^^5;2^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,52,1,0)
^.1
"^DD",101.41,101.41,52,1,1,0)
101.41^AM52^MUMPS
"^DD",101.41,101.41,52,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,52,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC WIDTH is changed.
"^DD",101.41,101.41,52,1,1,"DT")
2990210
"^DD",101.41,101.41,52,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",101.41,101.41,52,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,52,21,1,0)
This field allows the width of item mnemonics to be varied; the default
"^DD",101.41,101.41,52,21,2,0)
value is 5.
"^DD",101.41,101.41,52,"DT")
2990210
"^DD",101.41,101.41,53,0)
PATH SWITCH^S^1:YES;0:NO;^5;3^Q
"^DD",101.41,101.41,53,3)
Enter YES if this menu should be redisplayed when traversing back up the menu tree.
"^DD",101.41,101.41,53,21,0)
^^5^5^2950623^
"^DD",101.41,101.41,53,21,1,0)
This switch allows the user, when traversing back UP the tree of menus and
"^DD",101.41,101.41,53,21,2,0)
items, to select a new path back down the tree.  In other words, the menu
"^DD",101.41,101.41,53,21,3,0)
is redisplayed when returning to that menu's level in the tree and
"^DD",101.41,101.41,53,21,4,0)
processing back down the tree is possible from that point.  If nothing is
"^DD",101.41,101.41,53,21,5,0)
selected from the menu, the path continues back up the tree.
"^DD",101.41,101.41,53,"DT")
2950623
"^DD",101.41,101.41,54,0)
LISTBOX TEXT^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.41,54,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.41,54,"DT")
2960524
"^DD",101.41,101.41,55,0)
WINDOW FORM ID^NJ4,0^^5;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,55,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",101.41,101.41,55,21,0)
^.001^23^23^3010727^^
"^DD",101.41,101.41,55,21,1,0)
This field tells the GUI DELPHI code which form to use to process the
"^DD",101.41,101.41,55,21,2,0)
order dialog.  Each number represents a unique form.  Following are some
"^DD",101.41,101.41,55,21,3,0)
of the more common codes and their corresponding form in DELPHI.
"^DD",101.41,101.41,55,21,4,0)
 
"^DD",101.41,101.41,55,21,5,0)
    Form Name     Windows Form ID
"^DD",101.41,101.41,55,21,6,0)
    ---------     ---------------
"^DD",101.41,101.41,55,21,7,0)
  OD_ACTIVITY           100
"^DD",101.41,101.41,55,21,8,0)
  OD_ALLERGY            105
"^DD",101.41,101.41,55,21,9,0)
  OD_CONSULT            110
"^DD",101.41,101.41,55,21,10,0)
  OD_PROCEDURE          112
"^DD",101.41,101.41,55,21,11,0)
  OD_DIET_TXT           115
"^DD",101.41,101.41,55,21,12,0)
  OD_DIET               117
"^DD",101.41,101.41,55,21,13,0)
  OD_LAB                120
"^DD",101.41,101.41,55,21,14,0)
  OD_MEDINPT            130
"^DD",101.41,101.41,55,21,15,0)
  OD_MEDS               135
"^DD",101.41,101.41,55,21,16,0)
  OD_MEDOUTPT           140
"^DD",101.41,101.41,55,21,17,0)
  OD_NURSING            150
"^DD",101.41,101.41,55,21,18,0)
  OD_MISC               151
"^DD",101.41,101.41,55,21,19,0)
  OD_GENERIC            152
"^DD",101.41,101.41,55,21,20,0)
  OD_IMAGING            160
"^DD",101.41,101.41,55,21,21,0)
  OD_VITALS             171 
"^DD",101.41,101.41,55,21,22,0)
  OD_MEDIV              180
"^DD",101.41,101.41,55,21,23,0)
  OD_TEXTONLY           999
"^DD",101.41,101.41,55,"DT")
2960804
"^DD",101.41,101.41,56,0)
CREATE PARENT ORDER^S^1:YES;0:NO;^5;6^Q
"^DD",101.41,101.41,56,3)
Enter YES if a parent order should be created for this order set
"^DD",101.41,101.41,56,21,0)
^^6^6^2970227^
"^DD",101.41,101.41,56,21,1,0)
This flag indicates whether a parent order should be created to group
"^DD",101.41,101.41,56,21,2,0)
together all the orders created by this order set; this flag is only
"^DD",101.41,101.41,56,21,3,0)
valid with SET type order dialogs.  If this value is YES, a parent
"^DD",101.41,101.41,56,21,4,0)
order will be created, and only the parent will be presented on the
"^DD",101.41,101.41,56,21,5,0)
orders list for display and action; NO will prevent a parent from being
"^DD",101.41,101.41,56,21,6,0)
created and all orders will be created and displayed independently.
"^DD",101.41,101.41,56,"DT")
2970227
"^DD",101.41,101.41,57,0)
DISPLAY SUBHEADER^S^1:YES;0:NO;^5;7^Q
"^DD",101.41,101.41,57,3)
Enter YES if a subheader should be displayed as each order in this set is processed
"^DD",101.41,101.41,57,21,0)
^^3^3^2970227^
"^DD",101.41,101.41,57,21,1,0)
This flag indicates whether a subheader is to be displayed for each order
"^DD",101.41,101.41,57,21,2,0)
in this set as it is processed and placed; this flag is only valid with
"^DD",101.41,101.41,57,21,3,0)
SET type order dialogs.
"^DD",101.41,101.41,57,"DT")
2970227
"^DD",101.41,101.41,58,0)
AUTO-ACCEPT QUICK ORDER^S^1:YES;^5;8^Q
"^DD",101.41,101.41,58,3)
Enter 'Yes' if the order should be placed without displaying the dialog window.
"^DD",101.41,101.41,58,21,0)
^^2^2^2980902^
"^DD",101.41,101.41,58,21,1,0)
This can be set to yes for a quick order so that it can be placed simply
"^DD",101.41,101.41,58,21,2,0)
by clicking on it in the GUI (no ordering dialog is displayed).
"^DD",101.41,101.41,58,"DT")
2980902
"^DD",101.41,101.41,99,0)
TIMESTAMP^F^^99;1^K:$L(X)>15!($L(X)<1) X
"^DD",101.41,101.41,99,1,0)
^.1
"^DD",101.41,101.41,99,1,1,0)
101.41^AM^MUMPS
"^DD",101.41,101.41,99,1,1,1)
D SET^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,2)
D KILL^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,"%D",0)
^^2^2^2990210^
"^DD",101.41,101.41,99,1,1,"%D",1,0)
Recompiles order dialog menus in ^XUTL("XQORM",<dialog#>_";ORD(101.41,")
"^DD",101.41,101.41,99,1,1,"%D",2,0)
whenever fields necessary to displaying the menu are changed.
"^DD",101.41,101.41,99,1,1,"DT")
2990210
"^DD",101.41,101.41,99,3)
Answer must be 1-15 characters in length.
"^DD",101.41,101.41,99,21,0)
^^2^2^2980501^
"^DD",101.41,101.41,99,21,1,0)
For menus, this contains the $H time the menu was last compiled for use
"^DD",101.41,101.41,99,21,2,0)
with the Unwinder utility (^XQOR).
"^DD",101.41,101.41,99,"DT")
2990210
"^DD",101.41,101.411,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",101.41,101.411,0,"DT")
2950407
"^DD",101.41,101.411,0,"NM","DESCRIPTION")

"^DD",101.41,101.411,0,"UP")
101.41
"^DD",101.41,101.411,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",101.41,101.411,.01,3)
Enter a description of this dialog.
"^DD",101.41,101.411,.01,21,0)
^^1^1^2950425^^
"^DD",101.41,101.411,.01,21,1,0)
This field contains a description of the content and use of this dialog.
"^DD",101.41,101.411,.01,"DT")
2950407
"^DD",101.41,101.412,0)
ITEMS SUB-FIELD^^117^37
"^DD",101.41,101.412,0,"DT")
2971117
"^DD",101.41,101.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^ORD(101.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",101.41,101.412,0,"IX","ATXT",101.412,21)

"^DD",101.41,101.412,0,"IX","B",101.412,.01)

"^DD",101.41,101.412,0,"IX","D",101.412,2)

"^DD",101.41,101.412,0,"IX","DAD",101.412,1)

"^DD",101.41,101.412,0,"IX","DAD1",101.412,.01)

"^DD",101.41,101.412,0,"NM","ITEMS")

"^DD",101.41,101.412,0,"UP")
101.41
"^DD",101.41,101.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.41,101.412,.01,1,0)
^.1
"^DD",101.41,101.412,.01,1,1,0)
101.412^B
"^DD",101.41,101.412,.01,1,1,1)
S ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.412,.01,1,1,2)
K ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.41,101.412,.01,1,2,0)
101.412^DAD1^MUMPS
"^DD",101.41,101.412,.01,1,2,1)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) S:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)=""
"^DD",101.41,101.412,.01,1,2,2)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) K:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)
"^DD",101.41,101.412,.01,1,2,"%D",0)
^^1^1^2950511^
"^DD",101.41,101.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,.01,1,2,"DT")
2950511
"^DD",101.41,101.412,.01,1,3,0)
101.41^AMM^MUMPS
"^DD",101.41,101.412,.01,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",101.41,101.412,.01,1,3,"DT")
2990210
"^DD",101.41,101.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",101.41,101.412,.01,21,0)
^^2^2^2971117^^^^
"^DD",101.41,101.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",101.41,101.412,.01,21,2,0)
processed.
"^DD",101.41,101.412,.01,"DT")
2990210
"^DD",101.41,101.412,.1,0)
INPUT TRANSFORM^K^^.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,.1,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,.1,9)
@
"^DD",101.41,101.412,.1,21,0)
^^2^2^2950816^
"^DD",101.41,101.412,.1,21,1,0)
This is code that will be used as the third piece of DIR(0) when asking
"^DD",101.41,101.412,.1,21,2,0)
this prompt.
"^DD",101.41,101.412,.1,"DT")
2950816
"^DD",101.41,101.412,1,0)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"^DD",101.41,101.412,1,1,0)
^.1
"^DD",101.41,101.412,1,1,1,0)
101.412^DAD^MUMPS
"^DD",101.41,101.412,1,1,1,1)
S ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)=""
"^DD",101.41,101.412,1,1,1,2)
K ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)
"^DD",101.41,101.412,1,1,1,"%D",0)
^^1^1^2950511^^
"^DD",101.41,101.412,1,1,1,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,1,1,1,"DT")
2950511
"^DD",101.41,101.412,1,3)
If this prompt is subordinate to another in this dialog, enter the parent prompt here
"^DD",101.41,101.412,1,21,0)
^^4^4^2950511^
"^DD",101.41,101.412,1,21,1,0)
This field controls the behavior of this prompt.  If a parent is defined
"^DD",101.41,101.412,1,21,2,0)
here, this prompt will be asked from within the parent's dialog; when it
"^DD",101.41,101.412,1,21,3,0)
is invoked independently based on its position sequence number, the child
"^DD",101.41,101.412,1,21,4,0)
prompt will be ignored.
"^DD",101.41,101.412,1,"DT")
2950511
"^DD",101.41,101.412,2,0)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"^DD",101.41,101.412,2,1,0)
^.1
"^DD",101.41,101.412,2,1,1,0)
101.41^AD
"^DD",101.41,101.412,2,1,1,1)
S ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",101.41,101.412,2,1,1,2)
K ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",101.41,101.412,2,1,1,"DT")
2950123
"^DD",101.41,101.412,2,1,2,0)
101.412^D
"^DD",101.41,101.412,2,1,2,1)
S ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.412,2,1,2,2)
K ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",101.41,101.412,2,1,2,"DT")
2950411
"^DD",101.41,101.412,2,1,3,0)
101.41^AMM2^MUMPS
"^DD",101.41,101.412,2,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",101.41,101.412,2,1,3,"DT")
2990210
"^DD",101.41,101.412,2,3)
Enter an order dialog; a dialog that is an ancestor may not also be a sub-item.
"^DD",101.41,101.412,2,21,0)
^^3^3^2950123^
"^DD",101.41,101.412,2,21,1,0)
This field points to an order dialog which is subordinate to this dialog.
"^DD",101.41,101.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",101.41,101.412,2,21,3,0)
as an item.
"^DD",101.41,101.412,2,"DT")
2990217
"^DD",101.41,101.412,3,0)
MNEMONIC^FX^^0;3^K:$L(X)>4!($L(X)<1)!(+X=X&($L(X,".")>1))!($$CHKMNE^ORUTL(X)) X
"^DD",101.41,101.412,3,1,0)
^.1
"^DD",101.41,101.412,3,1,1,0)
101.41^AMM3^MUMPS
"^DD",101.41,101.412,3,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,3,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC is changed.
"^DD",101.41,101.412,3,1,1,"DT")
2990210
"^DD",101.41,101.412,3,3)
Enter a mnemonic to be used when this dialog is displayed for selection, 1-4 characters in length with no decimal places if numeric. Standard list manager mnemonics may not be used.
"^DD",101.41,101.412,3,21,0)
^.001^2^2^3010727^^^^
"^DD",101.41,101.412,3,21,1,0)
This is a short abbreviation for this item dialog to be used when this
"^DD",101.41,101.412,3,21,2,0)
dialog is displayed for selection.
"^DD",101.41,101.412,3,"DT")
3000822
"^DD",101.41,101.412,4,0)
DISPLAY TEXT^FX^^0;4^K:$L(X)>80!($L(X)<1)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.412,4,1,0)
^.1
"^DD",101.41,101.412,4,1,1,0)
101.41^AMM4^MUMPS
"^DD",101.41,101.412,4,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,4,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.412,4,1,1,"DT")
2990210
"^DD",101.41,101.412,4,3)
Answer must be 1-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=).
"^DD",101.41,101.412,4,21,0)
^.001^2^2^3010419^^^^
"^DD",101.41,101.412,4,21,1,0)
This field allows the text that normally appears for this item to be
"^DD",101.41,101.412,4,21,2,0)
replaced with alternate text for use in this dialog or menu.
"^DD",101.41,101.412,4,"DT")
3000823
"^DD",101.41,101.412,5,0)
DISPLAY ONLY?^S^0:NO;1:YES;2:YES-HEADER;^0;5^Q
"^DD",101.41,101.412,5,1,0)
^.1
"^DD",101.41,101.412,5,1,1,0)
101.41^AMM5^MUMPS
"^DD",101.41,101.412,5,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,5,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY ONLY? is changed.
"^DD",101.41,101.412,5,1,1,"DT")
2990210
"^DD",101.41,101.412,5,3)
Enter YES if this item is text for display only and not a selectable item.
"^DD",101.41,101.412,5,21,0)
^^3^3^2970409^^^^
"^DD",101.41,101.412,5,21,1,0)
This field identifies an item as being free text for display purposes
"^DD",101.41,101.412,5,21,2,0)
only.  The text in the Display Text field will be displayed, but it
"^DD",101.41,101.412,5,21,3,0)
is not selectable; if designated as a header, the text will be underlined.
"^DD",101.41,101.412,5,"DT")
2990210
"^DD",101.41,101.412,6,0)
REQUIRED^S^1:YES;0:NO;^0;6^Q
"^DD",101.41,101.412,6,3)
Enter YES if a response to this prompt is mandatory.
"^DD",101.41,101.412,6,21,0)
^^1^1^2950407^
"^DD",101.41,101.412,6,21,1,0)
This field indicates that the user must enter a response to this prompt.
"^DD",101.41,101.412,6,"DT")
2950407
"^DD",101.41,101.412,7,0)
MULTIPLE VALUED^S^1:YES;0:NO;^0;7^Q
"^DD",101.41,101.412,7,3)
Enter YES if this prompt is to be asked multiple times.
"^DD",101.41,101.412,7,21,0)
^^3^3^2950407^
"^DD",101.41,101.412,7,21,1,0)
This field determines if this prompt will be allowed to have multiple
"^DD",101.41,101.412,7,21,2,0)
values, or be prompted for only once; if this prompt is a sub-dialog,
"^DD",101.41,101.412,7,21,3,0)
the entire dialog will be asked once or many times, as a group.
"^DD",101.41,101.412,7,"DT")
2950407
"^DD",101.41,101.412,7.1,0)
MAX NUMBER OF MULTIPLES^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<2)!(X?.E1"."1N.N) X
"^DD",101.41,101.412,7.1,3)
Type a Number between 2 and 99, 0 Decimal Digits
"^DD",101.41,101.412,7.1,21,0)
^^4^4^2950815^
"^DD",101.41,101.412,7.1,21,1,0)
This is the maximum number of values that may be entered for this prompt,
"^DD",101.41,101.412,7.1,21,2,0)
if it is flagged as being multiple-valued.  For example, a diet order may
"^DD",101.41,101.412,7.1,21,3,0)
have up to 5 diet modifications entered, where 5 is the maximum allowed
"^DD",101.41,101.412,7.1,21,4,0)
that would be entered here.
"^DD",101.41,101.412,7.1,"DT")
2950815
"^DD",101.41,101.412,7.2,0)
TITLE^F^^0;13^K:$L(X)>30!($L(X)<3) X
"^DD",101.41,101.412,7.2,3)
Answer must be 3-30 characters in length.
"^DD",101.41,101.412,7.2,21,0)
^^8^8^2970430^^
"^DD",101.41,101.412,7.2,21,1,0)
This is text that will be used in place of the prompt when the order is
"^DD",101.41,101.412,7.2,21,2,0)
displayed for place, edit, or cancel, or at the top of a multiple-valued
"^DD",101.41,101.412,7.2,21,3,0)
prompt.  The Display Text for the prompt will be used together with the
"^DD",101.41,101.412,7.2,21,4,0)
instance number to prompt for user input; for example if Title="Lab Tests:"
"^DD",101.41,101.412,7.2,21,5,0)
and Display Text="Test:" the user would see
"^DD",101.41,101.412,7.2,21,6,0)
  Lab Tests:
"^DD",101.41,101.412,7.2,21,7,0)
  1. Test:
"^DD",101.41,101.412,7.2,21,8,0)
  2. Test:
"^DD",101.41,101.412,7.2,"DT")
2950815
"^DD",101.41,101.412,7.3,0)
PROMPT^F^^0;14^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,7.3,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,7.3,21,0)
^^3^3^2970618^
"^DD",101.41,101.412,7.3,21,1,0)
This field contains text that will be appended to the beginning of the
"^DD",101.41,101.412,7.3,21,2,0)
display text when prompting for additional values; if this field is
"^DD",101.41,101.412,7.3,21,3,0)
empty, then "Another " will be used.
"^DD",101.41,101.412,7.3,"DT")
2970618
"^DD",101.41,101.412,8,0)
ASK ON EDIT ONLY^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.412,8,3)
Enter YES if this prompt should not be asked initially when creating this order, only if the user chooses to edit the order.
"^DD",101.41,101.412,8,21,0)
^.001^4^4^3000621^^^^
"^DD",101.41,101.412,8,21,1,0)
This field determines the behavior of the dialog driver for this prompt;
"^DD",101.41,101.412,8,21,2,0)
if no value or the defined default is usually correct for this prompt,
"^DD",101.41,101.412,8,21,3,0)
enter YES here to have this prompt skipped on the first pass through this
"^DD",101.41,101.412,8,21,4,0)
dialog when creating an order.
"^DD",101.41,101.412,8,"DT")
2950407
"^DD",101.41,101.412,9,0)
ASK ON ACTION^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",101.41,101.412,9,3)
Answer must be 1-3 characters in length.
"^DD",101.41,101.412,9,21,0)
^.001^6^6^3000621^^^^
"^DD",101.41,101.412,9,21,1,0)
This field determines the behavior of the dialog driver for this prompt
"^DD",101.41,101.412,9,21,2,0)
when taking a particular action on an order created by this dialog.  If
"^DD",101.41,101.412,9,21,3,0)
this string contains "R", this prompt will be asked when renewing an order;
"^DD",101.41,101.412,9,21,4,0)
if this string contains "C", this prompt will be asked when changing an
"^DD",101.41,101.412,9,21,5,0)
order; if this string contains "W", this prompt will be asked when
"^DD",101.41,101.412,9,21,6,0)
rewriting an order.
"^DD",101.41,101.412,9,"DT")
2970708
"^DD",101.41,101.412,10,0)
INDEX^F^^0;10^K:$L(X)>25!($L(X)<1) X
"^DD",101.41,101.412,10,3)
Answer must be 1-25 characters in length.
"^DD",101.41,101.412,10,21,0)
^^3^3^2950713^^^
"^DD",101.41,101.412,10,21,1,0)
For pointer-type prompts, this is the index to use when searching the file;
"^DD",101.41,101.412,10,21,2,0)
it must be in the form of a regular cross-reference.  To search on multiple
"^DD",101.41,101.412,10,21,3,0)
indices, enter a string of index names separated by semi-colons, i.e. "B;C".
"^DD",101.41,101.412,10,"DT")
2950713
"^DD",101.41,101.412,11,0)
HELP MESSAGE^F^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",101.41,101.412,11,3)
Answer must be 1-160 characters in length.
"^DD",101.41,101.412,11,21,0)
^^2^2^2970609^^
"^DD",101.41,101.412,11,21,1,0)
This field contains the help message to be presented when the user enters
"^DD",101.41,101.412,11,21,2,0)
a question mark at this prompt.
"^DD",101.41,101.412,11,"DT")
2970609
"^DD",101.41,101.412,12,0)
SPECIAL LOOKUP ROUTINE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",101.41,101.412,12,3)
Enter the routine to use instead of DIC to do this lookup, as [TAG;]ROUTINE
"^DD",101.41,101.412,12,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,12,21,1,0)
This field contains a routine to execute that will replace the standard
"^DD",101.41,101.412,12,21,2,0)
DIC lookup for this prompt; it must be entered here as LINETAG;ROUTINE
"^DD",101.41,101.412,12,21,3,0)
using a ; instead of ^ and where LINETAG is optional.
"^DD",101.41,101.412,12,"DT")
2970609
"^DD",101.41,101.412,13,0)
ASK ON CONDITION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,13,3)
This is MUMPS code that sets $T to determine if this prompt should be asked, or given a default value and bypassed.
"^DD",101.41,101.412,13,9)
@
"^DD",101.41,101.412,13,21,0)
^^5^5^2950407^
"^DD",101.41,101.412,13,21,1,0)
This is MUMPS code that sets $T to determine if this prompt should be asked
"^DD",101.41,101.412,13,21,2,0)
or simply given a default value and presented to the user for acceptance
"^DD",101.41,101.412,13,21,3,0)
or editing.  For example, the prompt "Pregnant: " may have code here to
"^DD",101.41,101.412,13,21,4,0)
check the sex of the current patient, i.e. I ORSEX="F" will allow it to be
"^DD",101.41,101.412,13,21,5,0)
asked only for female patients.
"^DD",101.41,101.412,13,"DT")
2950407
"^DD",101.41,101.412,14,0)
SCREEN^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,14,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,14,9)
@
"^DD",101.41,101.412,14,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,14,21,1,0)
For pointer-type prompts, this field may contain MUMPS code that will be
"^DD",101.41,101.412,14,21,2,0)
set into DIC("S") to screen the possible choices in the pointed-to file.
"^DD",101.41,101.412,14,"DT")
2950407
"^DD",101.41,101.412,15,0)
POST-SELECTION ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,15,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,15,9)
@
"^DD",101.41,101.412,15,21,0)
^^3^3^2970923^^^^
"^DD",101.41,101.412,15,21,1,0)
This is code that will be executed after a response is entered to this
"^DD",101.41,101.412,15,21,2,0)
prompt; if this prompt should be re-asked, kill the variable DONE.
"^DD",101.41,101.412,15,21,3,0)
If execution of the ordering dialog should be stopped, set ORQUIT=1.
"^DD",101.41,101.412,15,"DT")
2970923
"^DD",101.41,101.412,16,0)
XECUTABLE HELP^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,16,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,16,9)
@
"^DD",101.41,101.412,16,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,16,21,1,0)
This is code that is to be executed when the user enters two or more
"^DD",101.41,101.412,16,21,2,0)
question marks at this prompt.
"^DD",101.41,101.412,16,"DT")
2950407
"^DD",101.41,101.412,17,0)
DEFAULT^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,17,9)
@
"^DD",101.41,101.412,17,21,0)
^^2^2^2971219^^^^
"^DD",101.41,101.412,17,21,1,0)
This is code that is to be executed to determine the appropriate default
"^DD",101.41,101.412,17,21,2,0)
value for this prompt, setting Y=internal form of this value.
"^DD",101.41,101.412,17,"DT")
2950519
"^DD",101.41,101.412,18,0)
DEFAULT WORD-PROCESSING TEXT^101.41218^^8;0
"^DD",101.41,101.412,18,21,0)
^^1^1^2971219^
"^DD",101.41,101.412,18,21,1,0)
This is default text to be stuffed into this word-processing prompt.
"^DD",101.41,101.412,19,0)
ENTRY ACTION^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,19,9)
@
"^DD",101.41,101.412,19,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,19,21,1,0)
This is code that will be executed at the beginning of the processing of
"^DD",101.41,101.412,19,21,2,0)
this prompt, before the Default and Ask on Condition fields are executed;
"^DD",101.41,101.412,19,21,3,0)
any special setup required for this field should be done here.
"^DD",101.41,101.412,19,"DT")
2970609
"^DD",101.41,101.412,20,0)
EXIT ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,20,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,20,9)
@
"^DD",101.41,101.412,20,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,20,21,1,0)
This is code that will be executed at the very end of the processing of
"^DD",101.41,101.412,20,21,2,0)
this prompt, after prompting and the Validation field is executed;
"^DD",101.41,101.412,20,21,3,0)
any special cleanup should be done here.
"^DD",101.41,101.412,20,"DT")
2970609
"^DD",101.41,101.412,21,0)
ORDER TEXT SEQUENCE^NJ5,2^^2;1^K:+X'=X!(X>99.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",101.41,101.412,21,1,0)
^.1
"^DD",101.41,101.412,21,1,1,0)
101.412^ATXT
"^DD",101.41,101.412,21,1,1,1)
S ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)=""
"^DD",101.41,101.412,21,1,1,2)
K ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)
"^DD",101.41,101.412,21,1,1,"%D",0)
^^1^1^2960226^
"^DD",101.41,101.412,21,1,1,"%D",1,0)
Used to build order text.
"^DD",101.41,101.412,21,1,1,"DT")
2960226
"^DD",101.41,101.412,21,3)
Enter the order in which this value should be added to the order text, as a number between 1 and 99.99; leave this field blank to prevent this value from being included
"^DD",101.41,101.412,21,21,0)
^^3^3^2970607^^^
"^DD",101.41,101.412,21,21,1,0)
This field indicates the order in which values will be concatenated
"^DD",101.41,101.412,21,21,2,0)
together to build the order text; this may differ from the prompting
"^DD",101.41,101.412,21,21,3,0)
order defined in the .01 Sequence field.
"^DD",101.41,101.412,21,"DT")
2960226
"^DD",101.41,101.412,22,0)
FORMAT^F^^2;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,22,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,22,21,0)
^^15^15^2971207^^^^
"^DD",101.41,101.412,22,21,1,0)
This is a string of characters that will define any exceptions to how
"^DD",101.41,101.412,22,21,2,0)
the external form of this value is generated.  Possible values include:
"^DD",101.41,101.412,22,21,3,0)
  Pointer         -> <field #>~<piece in RPC list of field #>, default =.01
"^DD",101.41,101.412,22,21,4,0)
  Set of Codes    -> 1~<piece in RPC list of code> to use code for name
"^DD",101.41,101.412,22,21,5,0)
  Date/Time       -> Format string to pass $$FMTE^XLFDT (default = 2)
"^DD",101.41,101.412,22,21,6,0)
  
"^DD",101.41,101.412,22,21,7,0)
  Suppress value  -> @
"^DD",101.41,101.412,22,21,8,0)
  Replace value   -> @<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,9,0)
                      whose value, when present, supersedes this value
"^DD",101.41,101.412,22,21,10,0)
  Required value  -> *<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,11,0)
                      whose value is required to be present to include
"^DD",101.41,101.412,22,21,12,0)
                      this value
"^DD",101.41,101.412,22,21,13,0)
  Ignore if same  -> =<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,14,0)
                      whose value, if the external form is the same,
"^DD",101.41,101.412,22,21,15,0)
                      supersedes this value
"^DD",101.41,101.412,22,"DT")
2960226
"^DD",101.41,101.412,23,0)
OMIT TEXT^F^^2;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,23,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,23,21,0)
^^3^3^2970829^^^^
"^DD",101.41,101.412,23,21,1,0)
This is the external form of a value that is not to be included when building
"^DD",101.41,101.412,23,21,2,0)
the order text.  E.g. to include the urgency in the order text unless it
"^DD",101.41,101.412,23,21,3,0)
is routine, enter "ROUTINE" here.
"^DD",101.41,101.412,23,"DT")
2970829
"^DD",101.41,101.412,24,0)
LEADING TEXT^F^^2;4^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,24,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,24,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,24,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,24,21,2,0)
immediately in front of this value, e.g. "Instructions:".  If this text
"^DD",101.41,101.412,24,21,3,0)
is contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,24,"DT")
2970724
"^DD",101.41,101.412,25,0)
TRAILING TEXT^F^^2;5^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,25,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,25,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,25,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,25,21,2,0)
immediately following this value, e.g. "refills".  If this text is
"^DD",101.41,101.412,25,21,3,0)
contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,25,"DT")
2970724
"^DD",101.41,101.412,26,0)
START NEW LINE^S^1:YES;0:NO;^2;6^Q
"^DD",101.41,101.412,26,3)
Enter YES if this value should begin on a new line in the order text.
"^DD",101.41,101.412,26,21,0)
0^^2^2^2970911^
"^DD",101.41,101.412,26,21,1,0)
This field determines if this value is concatenated onto the current line
"^DD",101.41,101.412,26,21,2,0)
when building the order text, or if a new line is started with this value.
"^DD",101.41,101.412,26,"DT")
2970911
"^DD",101.41,101.412,27,0)
WORD-WRAP^S^1:DON'T WRAP;0:WRAP;^2;7^Q
"^DD",101.41,101.412,27,3)
Enter 'Don't Wrap' to have the text be added line-by-line as it is stored; the default formatting is 'Wrap'.
"^DD",101.41,101.412,27,21,0)
^^3^3^2970926^^^
"^DD",101.41,101.412,27,21,1,0)
This field determines if this text should be wrapped when added to the
"^DD",101.41,101.412,27,21,2,0)
order text, or appended line by line as stored in the file; this is only
"^DD",101.41,101.412,27,21,3,0)
used for word-processing type prompts.
"^DD",101.41,101.412,27,"DT")
2970926
"^DD",101.41,101.412,101,0)
WINDOWS CONTROL^F^^W;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,101,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,101,21,0)
^^2^2^2990726^^
"^DD",101.41,101.412,101,21,1,0)
Stores the type of Windows control necessary to get the data for this
"^DD",101.41,101.412,101,21,2,0)
prompt.
"^DD",101.41,101.412,101,"DT")
2960517
"^DD",101.41,101.412,102,0)
API NAME^F^^W;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,102,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,102,21,0)
^.001^3^3^3000621^^
"^DD",101.41,101.412,102,21,1,0)
This is the API that should be called when the control is used.  How the API
"^DD",101.41,101.412,102,21,2,0)
is used varies with the control.  Examples are: filling list boxes, getting
"^DD",101.41,101.412,102,21,3,0)
boilerplate text, etc.
"^DD",101.41,101.412,102,"DT")
2951002
"^DD",101.41,101.412,103,0)
API PARAMETER #1^F^^W;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,103,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,103,21,0)
^^1^1^2950715^
"^DD",101.41,101.412,103,21,1,0)
A parameter that is used by the API call may be stored here.
"^DD",101.41,101.412,103,"DT")
2950715
"^DD",101.41,101.412,113,0)
WINDOWS CONDITION^K^^W3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,113,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,113,9)
@
"^DD",101.41,101.412,113,21,0)
^^3^3^2990726^^
"^DD",101.41,101.412,113,21,1,0)
This is silent code that is executed when building the dialog for windows.
"^DD",101.41,101.412,113,21,2,0)
It identifies which prompts should be included in the dialog.  The condition
"^DD",101.41,101.412,113,21,3,0)
should leave $T false if the prompt should not be asked.
"^DD",101.41,101.412,113,"DT")
2950715
"^DD",101.41,101.412,117,0)
WINDOWS DEFAULT^K^^W7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,117,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,117,9)
@
"^DD",101.41,101.412,117,21,0)
^^2^2^2990726^^
"^DD",101.41,101.412,117,21,1,0)
This code should silently set the default value of a prompt when it is 
"^DD",101.41,101.412,117,21,2,0)
selected.
"^DD",101.41,101.412,117,"DT")
2950715
"^DD",101.41,101.41218,0)
DEFAULT WORD-PROCESSING TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.41218,0,"DT")
2950407
"^DD",101.41,101.41218,0,"NM","DEFAULT WORD-PROCESSING TEXT")

"^DD",101.41,101.41218,0,"UP")
101.412
"^DD",101.41,101.41218,.01,0)
DEFAULT WORD-PROCESSING TEXT^W^^0;1^Q
"^DD",101.41,101.41218,.01,3)
Enter the default response for a word-processing type prompt.
"^DD",101.41,101.41218,.01,21,0)
^^2^2^2950407^
"^DD",101.41,101.41218,.01,21,1,0)
This field contains the text to be presented as the default for this prompt,
"^DD",101.41,101.41218,.01,21,2,0)
for word-processing type prompts.
"^DD",101.41,101.41218,.01,"DT")
2950407
"^DD",101.41,101.415,0)
CONTROLS SUB-FIELD^^14^14
"^DD",101.41,101.415,0,"DT")
2960202
"^DD",101.41,101.415,0,"IX","AC",101.415,3)

"^DD",101.41,101.415,0,"IX","B",101.415,.01)

"^DD",101.41,101.415,0,"NM","CONTROLS")

"^DD",101.41,101.415,0,"UP")
101.41
"^DD",101.41,101.415,.01,0)
LOGICAL NAME^MF^^0;1^K:$L(X)>8!($L(X)<1)!'(X?1.8U) X
"^DD",101.41,101.415,.01,1,0)
^.1
"^DD",101.41,101.415,.01,1,1,0)
101.415^B
"^DD",101.41,101.415,.01,1,1,1)
S ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.415,.01,1,1,2)
K ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)
"^DD",101.41,101.415,.01,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,.01,21,0)
^^1^1^2960202^
"^DD",101.41,101.415,.01,21,1,0)
This is the name by which controls can refer to each other.
"^DD",101.41,101.415,.01,"DT")
2960202
"^DD",101.41,101.415,2,0)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.415,2,"DT")
2960202
"^DD",101.41,101.415,3,0)
CREATE SEQUENCE^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,3,1,0)
^.1
"^DD",101.41,101.415,3,1,1,0)
101.415^AC
"^DD",101.41,101.415,3,1,1,1)
S ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)=""
"^DD",101.41,101.415,3,1,1,2)
K ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)
"^DD",101.41,101.415,3,1,1,"%D",0)
^^2^2^2960202^
"^DD",101.41,101.415,3,1,1,"%D",1,0)
The 'AC' cross-reference puts in window controls in order by creation 
"^DD",101.41,101.415,3,1,1,"%D",2,0)
sequence.
"^DD",101.41,101.415,3,1,1,"DT")
2960202
"^DD",101.41,101.415,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.41,101.415,3,"DT")
2960202
"^DD",101.41,101.415,4,0)
CONTROL TYPE^S^0:Label;1:Button;2:Edit;3:Memo;4:ListBox;5:SimpleCombo;6:DropDownList;7:LongCombo;^0;4^Q
"^DD",101.41,101.415,4,"DT")
2960202
"^DD",101.41,101.415,5,0)
LABEL^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.415,5,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.415,5,"DT")
2960202
"^DD",101.41,101.415,6,0)
BESIDE^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,6,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,6,"DT")
2960202
"^DD",101.41,101.415,7,0)
BELOW^F^^0;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,7,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,7,"DT")
2960202
"^DD",101.41,101.415,8,0)
WIDTH^NJ6,4^^0;8^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5N.N) X
"^DD",101.41,101.415,8,3)
Type a Number between 0 and 1, 4 Decimal Digits
"^DD",101.41,101.415,8,"DT")
2960202
"^DD",101.41,101.415,9,0)
LEFT CONTROL^F^^0;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,9,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,9,"DT")
2960202
"^DD",101.41,101.415,10,0)
RIGHT CONTROL^F^^0;10^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,10,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,10,"DT")
2960202
"^DD",101.41,101.415,11,0)
HEIGHT^NJ2,0^^0;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,11,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.41,101.415,11,"DT")
2960202
"^DD",101.41,101.415,12,0)
UPPER CONTROL^F^^0;12^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,12,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,12,"DT")
2960202
"^DD",101.41,101.415,13,0)
LOWER CONTROL^F^^0;13^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,13,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,13,"DT")
2960202
"^DD",101.41,101.415,14,0)
TAB SEQUENCE^NJ2,0^^0;14^K:+X'=X!(X>89)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,14,3)
Type a Number between 0 and 89, 0 Decimal Digits
"^DD",101.41,101.415,14,"DT")
2960202
"^DD",101.41,101.416,0)
RESPONSES SUB-FIELD^^2^5
"^DD",101.41,101.416,0,"DT")
2960717
"^DD",101.41,101.416,0,"IX","D",101.416,.02)

"^DD",101.41,101.416,0,"NM","RESPONSES")

"^DD",101.41,101.416,0,"UP")
101.41
"^DD",101.41,101.416,.01,0)
ITEM ENTRY^MNJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.01,1,0)
^.1^^0
"^DD",101.41,101.416,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.01,21,0)
^^2^2^2971219^^^
"^DD",101.41,101.416,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",101.41,101.416,.01,21,2,0)
by which this response was obtained.
"^DD",101.41,101.416,.01,"DT")
2961118
"^DD",101.41,101.416,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.416,.02,1,0)
^.1
"^DD",101.41,101.416,.02,1,1,0)
101.416^D
"^DD",101.41,101.416,.02,1,1,1)
S ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.416,.02,1,1,2)
K ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)
"^DD",101.41,101.416,.02,1,1,"DT")
2961118
"^DD",101.41,101.416,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",101.41,101.416,.02,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",101.41,101.416,.02,21,2,0)
as type prompt.
"^DD",101.41,101.416,.02,"DT")
2961118
"^DD",101.41,101.416,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.03,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",101.41,101.416,.03,21,2,0)
individual instance.
"^DD",101.41,101.416,.03,"DT")
2960717
"^DD",101.41,101.416,1,0)
VALUE^FO^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",101.41,101.416,1,2)
S Y(0)=Y S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,2.1)
S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,3)
Answer must be 1-245 characters in length.
"^DD",101.41,101.416,1,21,0)
^^2^2^2971219^^
"^DD",101.41,101.416,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",101.41,101.416,1,21,2,0)
type.
"^DD",101.41,101.416,1,"DT")
2980717
"^DD",101.41,101.416,2,0)
TEXT^101.4162^^2;0
"^DD",101.41,101.416,2,21,0)
^^1^1^2971219^
"^DD",101.41,101.416,2,21,1,0)
This contains the actual response, for word-processing type prompts.
"^DD",101.41,101.416,2,"DT")
2960717
"^DD",101.41,101.4162,0)
TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.4162,0,"DT")
2960717
"^DD",101.41,101.4162,0,"NM","TEXT")

"^DD",101.41,101.4162,0,"UP")
101.416
"^DD",101.41,101.4162,.01,0)
TEXT^WL^^0;1^Q
"^DD",101.41,101.4162,.01,21,0)
^^1^1^2960717^^
"^DD",101.41,101.4162,.01,21,1,0)
This contains responses to items that are a word processing type.
"^DD",101.41,101.4162,.01,"DT")
2960717
"^DIC",101.41,101.41,0)
ORDER DIALOG^101.41
"^DIC",101.41,101.41,0,"GL")
^ORD(101.41,
"^DIC",101.41,101.41,"%",0)
^1.005^^0
"^DIC",101.41,101.41,"%D",0)
^^2^2^2960819^^
"^DIC",101.41,101.41,"%D",1,0)
This file contains the information needed to define how to prompt for each
"^DIC",101.41,101.41,"%D",2,0)
order, what values are acceptable, etc.
"^DIC",101.41,"B","ORDER DIALOG",101.41)

**END**
**END**
