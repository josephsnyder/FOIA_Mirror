Released OR*3*282 SEQ #269
Extracted from mail message
**KIDS**:OR*3.0*282^

**INSTALL NAME**
OR*3.0*282
"BLD",7489,0)
OR*3.0*282^ORDER ENTRY/RESULTS REPORTING^0^3081217^y
"BLD",7489,1,0)
^^37^37^3081217^
"BLD",7489,1,1,0)
1. A site reported that the parameter ORQQLR DATE RANGE INPT does not
"BLD",7489,1,2,0)
honor the value at the location level. Routine ORWCV has been modified to
"BLD",7489,1,3,0)
include the patient's location when an inpatient is selected. 
"BLD",7489,1,4,0)
HD0000000069279
"BLD",7489,1,5,0)
 
"BLD",7489,1,6,0)
2. When entering continuous lab orders with schedules that have a 'once
"BLD",7489,1,7,0)
daily' frequency, a response to 'How Long?' of n or xn should calculate
"BLD",7489,1,8,0)
the same stop date/time. Routine ORCSEND1 has been modified to use the
"BLD",7489,1,9,0)
collection date and time of the last child order created as the stop date
"BLD",7489,1,10,0)
and time of the parent order. when an inpatient is selected. 
"BLD",7489,1,11,0)
HD0000000069365, HD0000000069851
"BLD",7489,1,12,0)
 
"BLD",7489,1,13,0)
3. When entering a continuous lab order, with a response to 'How Long?'
"BLD",7489,1,14,0)
that exceeds one day, the stop date is displaying incorrectly. The change
"BLD",7489,1,15,0)
in item #2 for ORCSEND1 corrects this issue, as well, The collection date
"BLD",7489,1,16,0)
and time of the last child order created will be used as the stop date and
"BLD",7489,1,17,0)
time of the parent order. HD0000000070009
"BLD",7489,1,18,0)
 
"BLD",7489,1,19,0)
4. A provider accidentally selected both a parent lab order as well as
"BLD",7489,1,20,0)
multiple child orders and then chose the action of 'discontinue'. Upon 
"BLD",7489,1,21,0)
signature, an error box displayed indicating the order had already been
"BLD",7489,1,22,0)
signed. Two changes have been made to address this issue. 
"BLD",7489,1,23,0)
 
"BLD",7489,1,24,0)
First, lab orders will no longer display the parent order. Only the child
"BLD",7489,1,25,0)
orders will be displayed once the parent order is signed and released to
"BLD",7489,1,26,0)
service. Routine ORCSEND1 has been modified to 'veil' the parent order
"BLD",7489,1,27,0)
once the child orders are all created.
"BLD",7489,1,28,0)
 
"BLD",7489,1,29,0)
Second, routine ORQ2 was modified to include the parent's stop date and
"BLD",7489,1,30,0)
time in the detail display of the child order. This refers to the detail
"BLD",7489,1,31,0)
display from the Orders tab. HD0000000070670
"BLD",7489,1,32,0)
 
"BLD",7489,1,33,0)
5. When troubleshooting an alert problem, it appears that the child orders
"BLD",7489,1,34,0)
for a lab order do not show all the needed information. Routine ORCSEND3
"BLD",7489,1,35,0)
was modified to treat child orders exactly as parent orders or a single
"BLD",7489,1,36,0)
lab order. All the available information, such as signature, order checks,
"BLD",7489,1,37,0)
etc. will now be found in the detailed display of each child order.
"BLD",7489,4,0)
^9.64PA^^
"BLD",7489,6)
1^
"BLD",7489,6.3)
6
"BLD",7489,"ABPKG")
n
"BLD",7489,"KRN",0)
^9.67PA^8989.52^19
"BLD",7489,"KRN",.4,0)
.4
"BLD",7489,"KRN",.401,0)
.401
"BLD",7489,"KRN",.402,0)
.402
"BLD",7489,"KRN",.403,0)
.403
"BLD",7489,"KRN",.5,0)
.5
"BLD",7489,"KRN",.84,0)
.84
"BLD",7489,"KRN",3.6,0)
3.6
"BLD",7489,"KRN",3.8,0)
3.8
"BLD",7489,"KRN",9.2,0)
9.2
"BLD",7489,"KRN",9.8,0)
9.8
"BLD",7489,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",7489,"KRN",9.8,"NM",1,0)
ORWCV^^0^B78811826
"BLD",7489,"KRN",9.8,"NM",2,0)
ORQ2^^0^B44237971
"BLD",7489,"KRN",9.8,"NM",3,0)
ORCSEND1^^0^B65175146
"BLD",7489,"KRN",9.8,"NM",4,0)
ORCSEND3^^0^B25867937
"BLD",7489,"KRN",9.8,"NM","B","ORCSEND1",3)

"BLD",7489,"KRN",9.8,"NM","B","ORCSEND3",4)

"BLD",7489,"KRN",9.8,"NM","B","ORQ2",2)

"BLD",7489,"KRN",9.8,"NM","B","ORWCV",1)

"BLD",7489,"KRN",19,0)
19
"BLD",7489,"KRN",19.1,0)
19.1
"BLD",7489,"KRN",101,0)
101
"BLD",7489,"KRN",409.61,0)
409.61
"BLD",7489,"KRN",771,0)
771
"BLD",7489,"KRN",870,0)
870
"BLD",7489,"KRN",8989.51,0)
8989.51
"BLD",7489,"KRN",8989.52,0)
8989.52
"BLD",7489,"KRN",8994,0)
8994
"BLD",7489,"KRN","B",.4,.4)

"BLD",7489,"KRN","B",.401,.401)

"BLD",7489,"KRN","B",.402,.402)

"BLD",7489,"KRN","B",.403,.403)

"BLD",7489,"KRN","B",.5,.5)

"BLD",7489,"KRN","B",.84,.84)

"BLD",7489,"KRN","B",3.6,3.6)

"BLD",7489,"KRN","B",3.8,3.8)

"BLD",7489,"KRN","B",9.2,9.2)

"BLD",7489,"KRN","B",9.8,9.8)

"BLD",7489,"KRN","B",19,19)

"BLD",7489,"KRN","B",19.1,19.1)

"BLD",7489,"KRN","B",101,101)

"BLD",7489,"KRN","B",409.61,409.61)

"BLD",7489,"KRN","B",771,771)

"BLD",7489,"KRN","B",870,870)

"BLD",7489,"KRN","B",8989.51,8989.51)

"BLD",7489,"KRN","B",8989.52,8989.52)

"BLD",7489,"KRN","B",8994,8994)

"BLD",7489,"QUES",0)
^9.62^^
"BLD",7489,"REQB",0)
^9.611^1^1
"BLD",7489,"REQB",1,0)
OR*3.0*243^2
"BLD",7489,"REQB","B","OR*3.0*243",1)

"MBREQ")
0
"PKG",188,-1)
1^1
"PKG",188,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",188,20,0)
^9.402P^^
"PKG",188,22,0)
^9.49I^1^1
"PKG",188,22,1,0)
3.0^2971217^2981113^1
"PKG",188,22,1,"PAH",1,0)
282^3081217^520665221
"PKG",188,22,1,"PAH",1,1,0)
^^37^37^3081217
"PKG",188,22,1,"PAH",1,1,1,0)
1. A site reported that the parameter ORQQLR DATE RANGE INPT does not
"PKG",188,22,1,"PAH",1,1,2,0)
honor the value at the location level. Routine ORWCV has been modified to
"PKG",188,22,1,"PAH",1,1,3,0)
include the patient's location when an inpatient is selected. 
"PKG",188,22,1,"PAH",1,1,4,0)
HD0000000069279
"PKG",188,22,1,"PAH",1,1,5,0)
 
"PKG",188,22,1,"PAH",1,1,6,0)
2. When entering continuous lab orders with schedules that have a 'once
"PKG",188,22,1,"PAH",1,1,7,0)
daily' frequency, a response to 'How Long?' of n or xn should calculate
"PKG",188,22,1,"PAH",1,1,8,0)
the same stop date/time. Routine ORCSEND1 has been modified to use the
"PKG",188,22,1,"PAH",1,1,9,0)
collection date and time of the last child order created as the stop date
"PKG",188,22,1,"PAH",1,1,10,0)
and time of the parent order. when an inpatient is selected. 
"PKG",188,22,1,"PAH",1,1,11,0)
HD0000000069365, HD0000000069851
"PKG",188,22,1,"PAH",1,1,12,0)
 
"PKG",188,22,1,"PAH",1,1,13,0)
3. When entering a continuous lab order, with a response to 'How Long?'
"PKG",188,22,1,"PAH",1,1,14,0)
that exceeds one day, the stop date is displaying incorrectly. The change
"PKG",188,22,1,"PAH",1,1,15,0)
in item #2 for ORCSEND1 corrects this issue, as well, The collection date
"PKG",188,22,1,"PAH",1,1,16,0)
and time of the last child order created will be used as the stop date and
"PKG",188,22,1,"PAH",1,1,17,0)
time of the parent order. HD0000000070009
"PKG",188,22,1,"PAH",1,1,18,0)
 
"PKG",188,22,1,"PAH",1,1,19,0)
4. A provider accidentally selected both a parent lab order as well as
"PKG",188,22,1,"PAH",1,1,20,0)
multiple child orders and then chose the action of 'discontinue'. Upon 
"PKG",188,22,1,"PAH",1,1,21,0)
signature, an error box displayed indicating the order had already been
"PKG",188,22,1,"PAH",1,1,22,0)
signed. Two changes have been made to address this issue. 
"PKG",188,22,1,"PAH",1,1,23,0)
 
"PKG",188,22,1,"PAH",1,1,24,0)
First, lab orders will no longer display the parent order. Only the child
"PKG",188,22,1,"PAH",1,1,25,0)
orders will be displayed once the parent order is signed and released to
"PKG",188,22,1,"PAH",1,1,26,0)
service. Routine ORCSEND1 has been modified to 'veil' the parent order
"PKG",188,22,1,"PAH",1,1,27,0)
once the child orders are all created.
"PKG",188,22,1,"PAH",1,1,28,0)
 
"PKG",188,22,1,"PAH",1,1,29,0)
Second, routine ORQ2 was modified to include the parent's stop date and
"PKG",188,22,1,"PAH",1,1,30,0)
time in the detail display of the child order. This refers to the detail
"PKG",188,22,1,"PAH",1,1,31,0)
display from the Orders tab. HD0000000070670
"PKG",188,22,1,"PAH",1,1,32,0)
 
"PKG",188,22,1,"PAH",1,1,33,0)
5. When troubleshooting an alert problem, it appears that the child orders
"PKG",188,22,1,"PAH",1,1,34,0)
for a lab order do not show all the needed information. Routine ORCSEND3
"PKG",188,22,1,"PAH",1,1,35,0)
was modified to treat child orders exactly as parent orders or a single
"PKG",188,22,1,"PAH",1,1,36,0)
lab order. All the available information, such as signature, order checks,
"PKG",188,22,1,"PAH",1,1,37,0)
etc. will now be found in the detailed display of each child order.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","ORCSEND1")
0^3^B65175146^B61198784
"RTN","ORCSEND1",1,0)
ORCSEND1 ;SLC/MKB-Release cont ;11/22/06
"RTN","ORCSEND1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,29,45,61,79,94,116,138,158,149,187,215,243,282**;Dec 17, 1997;Build 6
"RTN","ORCSEND1",3,0)
 ;
"RTN","ORCSEND1",4,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCSEND1",5,0)
 ;
"RTN","ORCSEND1",6,0)
 ;Reference to PSJEEU supported by IA #486
"RTN","ORCSEND1",7,0)
 ;Reference to PSJORPOE supported by IA #3167
"RTN","ORCSEND1",8,0)
 ;
"RTN","ORCSEND1",9,0)
PKGSTUFF(PKG) ; Package code
"RTN","ORCSEND1",10,0)
 S PKG=$$GET1^DIQ(9.4,+PKG_",",1) Q:'$L(PKG)
"RTN","ORCSEND1",11,0)
 D:$L($T(@PKG)) @PKG
"RTN","ORCSEND1",12,0)
 Q
"RTN","ORCSEND1",13,0)
LR ; Spawn child orders if continuous schedule
"RTN","ORCSEND1",14,0)
 N ORSTRT,ORPARENT,OR0,ORNP,ORDIALOG,ORL,ORX,ORTIME,ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE,ORPCOLL,ORS1,ORS2,P,ORCHLD,ORDG,ORLAST,ORDUZ,ORLOG,ORCOLLCT,STS
"RTN","ORCSEND1",15,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),ORL=$P(OR0,U,10)
"RTN","ORCSEND1",16,0)
 D SCHEDULE(ORIFN,"LR",.ORSTRT) I ORSTRT'>1 D  Q
"RTN","ORCSEND1",17,0)
 . N START S START=$O(ORSTRT(0)) Q:START=$P($G(^OR(100,+ORIFN,0)),U,8)
"RTN","ORCSEND1",18,0)
 . D DATES^ORCSAVE2(+ORIFN,START) ;update start date from schedule
"RTN","ORCSEND1",19,0)
 S ORNP=+$P(OR0,U,4),ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7),ORDG=+$P(OR0,U,11)
"RTN","ORCSEND1",20,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORIFN),GETIMES^ORCDLR1
"RTN","ORCSEND1",21,0)
 K ORDIALOG($$PTR^ORCD("OR GTX ADMIN SCHEDULE"),1),ORDIALOG($$PTR^ORCD("OR GTX DURATION"),1)
"RTN","ORCSEND1",22,0)
 S ORPITEM=$$PTR^ORCD("OR GTX ORDERABLE ITEM")
"RTN","ORCSEND1",23,0)
 S ORPSAMP=$$PTR^ORCD("OR GTX COLLECTION SAMPLE")
"RTN","ORCSEND1",24,0)
 S ORPSPEC=$$PTR^ORCD("OR GTX SPECIMEN")
"RTN","ORCSEND1",25,0)
 S ORPURG=$$PTR^ORCD("OR GTX LAB URGENCY")
"RTN","ORCSEND1",26,0)
 S ORPCOMM=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORCSEND1",27,0)
 S ORPTYPE=$$PTR^ORCD("OR GTX COLLECTION TYPE")
"RTN","ORCSEND1",28,0)
 S ORPCOLL=$$PTR^ORCD("OR GTX START DATE/TIME")
"RTN","ORCSEND1",29,0)
LR1 N ORLASTC  S ORS1=0 F  S ORS1=$O(ORX(ORS1)) Q:ORS1'>0  D
"RTN","ORCSEND1",30,0)
 . F P=ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE S ORDIALOG(P,1)=$G(ORX(ORS1,P)) ;set values to next instance
"RTN","ORCSEND1",31,0)
 . S ORCOLLCT=$G(ORDIALOG(ORPTYPE,1))
"RTN","ORCSEND1",32,0)
 . S ORS2=0 F  S ORS2=$O(ORSTRT(ORS2)) Q:ORS2'>0  D
"RTN","ORCSEND1",33,0)
 .. S ORDIALOG(ORPCOLL,1)=ORS2 ;,ORDUZ=DUZ,ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSEND1",34,0)
 .. I ORCOLLCT="LC" S ORDIALOG(ORPTYPE,1)=$S($$LABCOLL^ORCDLR1(ORS2):"LC",1:"WC")
"RTN","ORCSEND1",35,0)
 .. I ORCOLLCT="I" S ORDIALOG(ORPTYPE,1)=$S($$IMMCOLL^ORCDLR1(ORS2):"I",1:"WC")
"RTN","ORCSEND1",36,0)
 .. D CHILD^ORCSEND3()
"RTN","ORCSEND1",37,0)
 .. S ORLASTC=$P(^OR(100,ORIFN,0),"^",8)
"RTN","ORCSEND1",38,0)
 . D DATES^ORCSAVE2(ORPARENT,,ORLASTC) S $P(^OR(100,ORPARENT,3),"^",8)=1
"RTN","ORCSEND1",39,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",40,0)
 S ORIFN=ORPARENT,ORQUIT=1,STS=$P(^OR(100,ORIFN,3),U,3)
"RTN","ORCSEND1",41,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",42,0)
 D RELEASE^ORCSAVE2(ORPARENT,1,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND1",43,0)
 Q
"RTN","ORCSEND1",44,0)
SCHEDULE(IFN,PKG,ORY,STRT) ; Returns list of start time(s) from schedule
"RTN","ORCSEND1",45,0)
 N I,X,PSJSD,PSJFD,PSJW,PSJNE,PSJPP,PSJX,PSJAT,PSJM,PSJTS,PSJY,PSJAX,PSJSCH,PSJOSD,PSJOFD,PSJC,ORDUR
"RTN","ORCSEND1",46,0)
 S PSJSD=$S(+$G(STRT):STRT,1:$P($G(^OR(100,+IFN,0)),U,8)) I 'PSJSD S ORY=-1 Q
"RTN","ORCSEND1",47,0)
 S ORY=1,ORY(PSJSD)="" ;1st occurrance
"RTN","ORCSEND1",48,0)
 S I=$O(^OR(100,+IFN,4.5,"ID","SCHEDULE",0)) Q:'I  Q:'$L($G(PKG))
"RTN","ORCSEND1",49,0)
 S X=$G(^OR(100,+IFN,4.5,I,1)),PSJX=$S(X:$$GET1^DIQ(51.1,+X_",",.01),1:X)
"RTN","ORCSEND1",50,0)
 S PSJW=+$G(ORL),PSJNE="",PSJPP=PKG D ENSV^PSJEEU Q:'$L($G(PSJX))
"RTN","ORCSEND1",51,0)
 I $G(PSJTS)'="C",$G(PSJTS)'="D" Q  ;not continuous or day-of-week
"RTN","ORCSEND1",52,0)
 S PSJSCH=PSJX,I=$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) Q:'I
"RTN","ORCSEND1",53,0)
 S ORDUR=$G(^OR(100,+IFN,4.5,+I,1))
"RTN","ORCSEND1",54,0)
 S:ORDUR PSJFD=$$FMADD^XLFDT(PSJSD,+ORDUR,,-1)
"RTN","ORCSEND1",55,0)
 I 'ORDUR S X=+$E(ORDUR,2,9) D
"RTN","ORCSEND1",56,0)
 . I PSJM S PSJFD=$$FMADD^XLFDT(PSJSD,,,(PSJM*X)-1) ;X_#times
"RTN","ORCSEND1",57,0)
 . E  D  ;no freq in minutes --> day of week
"RTN","ORCSEND1",58,0)
 .. N DAYS,LOCMX,SCHMX
"RTN","ORCSEND1",59,0)
 .. S LOCMX=$$GET^XPAR("ALL^LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORCSEND1",60,0)
 .. K ^TMP($J,"ORCSEND1 SCHEDULE")
"RTN","ORCSEND1",61,0)
 .. D ZERO^PSS51P1(PSJY,,,,"ORCSEND1 SCHEDULE")
"RTN","ORCSEND1",62,0)
 .. S SCHMX=+$G(^TMP($J,"ORCSEND1 SCHEDULE",PSJY,2.5))
"RTN","ORCSEND1",63,0)
 .. K ^TMP($J,"ORCSEND1 SCHEDULE")
"RTN","ORCSEND1",64,0)
 .. ;S SCHMX=$P(^PS(51.1,PSJY,0),U,7)
"RTN","ORCSEND1",65,0)
 .. S DAYS=$S('SCHMX:LOCMX,LOCMX<SCHMX:LOCMX,1:SCHMX)
"RTN","ORCSEND1",66,0)
 .. S PSJFD=$$FMADD^XLFDT(PSJSD,DAYS,,-1)
"RTN","ORCSEND1",67,0)
 D ENSPU^PSJEEU K ORY
"RTN","ORCSEND1",68,0)
 I ORDUR M ORY=PSJC Q
"RTN","ORCSEND1",69,0)
 S ORY=$S(PSJC<$E(ORDUR,2,9):PSJC,1:$E(ORDUR,2,9))
"RTN","ORCSEND1",70,0)
 N NXT
"RTN","ORCSEND1",71,0)
 S NXT=0 F I=1:1:ORY S NXT=$O(PSJC(NXT)) Q:'NXT  S ORY(NXT)=PSJC(NXT)
"RTN","ORCSEND1",72,0)
 Q
"RTN","ORCSEND1",73,0)
GETORDER(IFN) ; Set ORX(Inst,Ptr)=Value
"RTN","ORCSEND1",74,0)
 N I,X,Y,PTR,INST,TYPE
"RTN","ORCSEND1",75,0)
 S I=0 F  S I=$O(^OR(100,IFN,4.5,I)) Q:I'>0  S X=$G(^(I,0)),Y=$G(^(1)) D
"RTN","ORCSEND1",76,0)
 . S PTR=+$P(X,U,2),INST=+$P(X,U,3),TYPE=$P($G(^ORD(101.41,PTR,1)),U)
"RTN","ORCSEND1",77,0)
 . I TYPE'="W" S ORX(INST,PTR)=Y Q
"RTN","ORCSEND1",78,0)
 . S ORX(INST,PTR)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND1",79,0)
 Q
"RTN","ORCSEND1",80,0)
PTR(X) ; Returns ptr of prompt X in Order Dialog file
"RTN","ORCSEND1",81,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORCSEND1",82,0)
PS ; spawn child orders if multiple doses
"RTN","ORCSEND1",83,0)
PSJ ; (Inpt only)
"RTN","ORCSEND1",84,0)
PSS ;
"RTN","ORCSEND1",85,0)
 N ORPARENT,OR0,ORNP,ORDIALOG,ORDUZ,ORLOG,ORL,ORDG,ORCAT,ORX,ORP,ORI,STS
"RTN","ORCSEND1",86,0)
 N ORDOSE,ORT,ORSCH,ORDUR,ORSTRT,ORFRST,ORCONJ,ORID,ORDD,ORSTR,ORDGNM
"RTN","ORCSEND1",87,0)
 N ORSTART,ORCHLD,ORLAST,ORSIG,OROI,ID,OR3,ORIG,CODE,ORPKG,ORENEW,I,ORADMIN
"RTN","ORCSEND1",88,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORPARENT,0)),OR3=$G(^(3))
"RTN","ORCSEND1",89,0)
 Q:$P(OR0,U,12)'="I"  S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND1",90,0)
 S ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7)
"RTN","ORCSEND1",91,0)
 S ORL=$P(OR0,U,10),ORDG=+$P(OR0,U,11),ORPKG=+$P(OR0,U,14)
"RTN","ORCSEND1",92,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORPARENT)
"RTN","ORCSEND1",93,0)
 S ORDOSE=$$PTR("INSTRUCTIONS"),ORT=$$PTR("ROUTE")
"RTN","ORCSEND1",94,0)
 S ORSCH=$$PTR("SCHEDULE"),ORDUR=$$PTR("DURATION")
"RTN","ORCSEND1",95,0)
 S ORCONJ=$$PTR("AND/THEN") D STRT S ORSTART=$G(ORSTRT("BEG"))
"RTN","ORCSEND1",96,0)
 S ORADMIN=$$PTR("ADMIN TIMES")
"RTN","ORCSEND1",97,0)
 D DATES^ORCSAVE2(ORPARENT,ORSTART) Q:$$DOSES(ORPARENT)'>1
"RTN","ORCSEND1",98,0)
 S ORFRST=$$PTR("NOW"),ORSIG=$$PTR("SIG")
"RTN","ORCSEND1",99,0)
 S ORID=$$PTR("DOSE"),ORDD=$$PTR("DISPENSE DRUG")
"RTN","ORCSEND1",100,0)
 S ORSTR=$$PTR("STRENGTH"),ORDGNM=$$PTR("DRUG NAME")
"RTN","ORCSEND1",101,0)
 I $P(OR3,U,11)=2,$O(^OR(100,+$P(OR3,U,5),2,0)) D
"RTN","ORCSEND1",102,0)
 . S ORENEW=+$P(OR3,U,5),I=0
"RTN","ORCSEND1",103,0)
 . I $$VALUE^ORX8(ORENEW,"NOW") S I=$O(^OR(100,ORENEW,2,0))
"RTN","ORCSEND1",104,0)
 . F  S I=$O(^OR(100,ORENEW,2,I)) Q:I<1  S ORENEW(I)=""
"RTN","ORCSEND1",105,0)
PS1 F ORP="ORDERABLE ITEM","URGENCY","WORD PROCESSING 1" D
"RTN","ORCSEND1",106,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(1,PTR))
"RTN","ORCSEND1",107,0)
 . S ORDIALOG(PTR,1)=ORX(1,PTR) S:$E(ORP)="O" OROI=ORX(1,PTR)
"RTN","ORCSEND1",108,0)
 S ORI=$$FRSTDOSE I $G(ORX(1,ORFRST)) D
"RTN","ORCSEND1",109,0)
 . F ORP=ORDOSE,ORT,ORID S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP)
"RTN","ORCSEND1",110,0)
 . S ID=$G(ORX(ORI,ORID)) S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",111,0)
 . S ORDIALOG(ORSCH,1)="NOW",ORSTART=$$NOW^XLFDT
"RTN","ORCSEND1",112,0)
 . D SIG,CHILD^ORCSEND3(ORSTART)
"RTN","ORCSEND1",113,0)
 F  D  S ORI=$O(ORX(ORI)) Q:ORI'>0
"RTN","ORCSEND1",114,0)
 . F ORP=ORDOSE,ORT,ORSCH,ORDUR,ORID,ORADMIN S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP) K:'$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)
"RTN","ORCSEND1",115,0)
 . K ORDIALOG(ORDD,1) S ID=$G(ORX(ORI,ORID))
"RTN","ORCSEND1",116,0)
 . S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",117,0)
 . S ORSTART=$G(ORSTRT(ORI))
"RTN","ORCSEND1",118,0)
 . D SIG,CHILD^ORCSEND3(ORSTART)
"RTN","ORCSEND1",119,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",120,0)
 S ORIFN=ORPARENT,ORQUIT=1,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND1",121,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",122,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)) K ^TMP("ORWORD",$J)
"RTN","ORCSEND1",123,0)
 S $P(^OR(100,ORIFN,3),U,8)=1 ;veil parent order - set stop date/time?
"RTN","ORCSEND1",124,0)
 Q:(STS=1)!(STS=13)!(STS=11)  ;unsuccessful
"RTN","ORCSEND1",125,0)
PS2 ; ck if parent is unsigned or edit
"RTN","ORCSEND1",126,0)
 I $P($G(^OR(100,ORIFN,8,1,0)),U,4)=2 S $P(^(0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;clear ES
"RTN","ORCSEND1",127,0)
 Q:$P(OR3,U,11)'=1  S ORIG=$P(OR3,U,5) Q:ORIG'>0
"RTN","ORCSEND1",128,0)
 S CODE=$S($P($G(^OR(100,ORIG,3)),U,3)=5:"CA",1:"DC")
"RTN","ORCSEND1",129,0)
 D MSG^ORMBLD(ORIG,CODE) I "^1^13^"[(U_$P($G(^OR(100,ORIG,3)),U,3)_U) D
"RTN","ORCSEND1",130,0)
 . N NATR S NATR=+$O(^ORD(100.02,"C","C",0))
"RTN","ORCSEND1",131,0)
 . S $P(^OR(100,ORIG,3),U,3)=12,$P(^(3),U,7)=0,^(6)=NATR_U_DUZ_U_ORNOW
"RTN","ORCSEND1",132,0)
 . D CANCEL^ORCSEND(ORIG) ;ck for unrel actions
"RTN","ORCSEND1",133,0)
 Q
"RTN","ORCSEND1",134,0)
DOSES(IFN) ; count number of doses in order
"RTN","ORCSEND1",135,0)
 N I,CNT S CNT=0
"RTN","ORCSEND1",136,0)
 S I=0 F  S I=$O(^OR(100,+$G(IFN),4.5,"ID","INSTR",I)) Q:I'>0  I $L($G(^OR(100,+$G(IFN),4.5,I,1))) S CNT=CNT+1
"RTN","ORCSEND1",137,0)
 S I=+$O(^OR(100,+$G(IFN),4.5,"ID","NOW",0)) I I,$G(^OR(100,+$G(IFN),4.5,I,1)) S CNT=CNT+1
"RTN","ORCSEND1",138,0)
 Q CNT
"RTN","ORCSEND1",139,0)
FRSTDOSE() ; Return instance of first dose
"RTN","ORCSEND1",140,0)
 N I,Y S I=0,Y=1
"RTN","ORCSEND1",141,0)
 F  S I=$O(ORX(I)) Q:I'>0  I $D(ORX(I,ORDOSE)) S Y=I Q
"RTN","ORCSEND1",142,0)
 Q Y
"RTN","ORCSEND1",143,0)
SIG ; Build text of instructions
"RTN","ORCSEND1",144,0)
 N ORDRUG,ID,DOSE,ORI,ORX K ^TMP("ORWORD",$J,ORSIG,1)
"RTN","ORCSEND1",145,0)
 S ORDRUG=$G(ORDIALOG(ORDD,1)),ID=$G(ORDIALOG(ORID,1))
"RTN","ORCSEND1",146,0)
 S DOSE=$G(ORDIALOG(ORDOSE,1)),ORI=1
"RTN","ORCSEND1",147,0)
 S ORX=$$DOSE^ORCDPS2_$$RTE^ORCDPS2_$$SCH^ORCDPS2_$$DUR^ORCDPS2
"RTN","ORCSEND1",148,0)
 S ^TMP("ORWORD",$J,ORSIG,1,0)="^^1^1^"_DT_U,^(1,0)=ORX
"RTN","ORCSEND1",149,0)
 S ORDIALOG(ORSIG,1)=$NA(^TMP("ORWORD",$J,ORSIG,1))
"RTN","ORCSEND1",150,0)
 S ORDIALOG(ORDOSE,"FORMAT")="@"
"RTN","ORCSEND1",151,0)
 K ORDIALOG(ORSTR,1),ORDIALOG(ORDGNM,1)
"RTN","ORCSEND1",152,0)
 I ORDRUG,'ID D  ;set strength or drug name
"RTN","ORCSEND1",153,0)
 . N STR,ITM S STR=$P(ID,"&",7)_$P(ID,"&",8)
"RTN","ORCSEND1",154,0)
 . I STR'>0 S ORDIALOG(ORDGNM,1)=$$GET1^DIQ(50,+ORDRUG_",",.01) Q
"RTN","ORCSEND1",155,0)
 . S ITM=$P($G(^ORD(101.43,+$G(OROI),0)),U)
"RTN","ORCSEND1",156,0)
 . S:ITM'[STR ORDIALOG(ORSTR,1)=STR
"RTN","ORCSEND1",157,0)
 Q
"RTN","ORCSEND1",158,0)
STRT ; Build ORSTRT(inst)=date.time array of start times by dose
"RTN","ORCSEND1",159,0)
 N OI,PSOI,XD,XH,XM,XS,ORWD,ORI,SCH,ORSD,X,ORD K ORSTRT
"RTN","ORCSEND1",160,0)
 S OI=$G(ORX(1,$$PTR^ORCD("OR GTX ORDERABLE ITEM")))
"RTN","ORCSEND1",161,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2),(XD,XH,XM,XS)=0
"RTN","ORCSEND1",162,0)
 S ORWD=+$G(^SC(+$G(ORL),42)) ;ward
"RTN","ORCSEND1",163,0)
 S ORI=0 F  S ORI=$O(ORX(ORI)) Q:ORI<1  D
"RTN","ORCSEND1",164,0)
 . S SCH=$G(ORX(ORI,ORSCH)),ORSD="" S:'$L(SCH) X=$$NOW^XLFDT
"RTN","ORCSEND1",165,0)
 . S:$L(SCH) ORSD=$$STARTSTP^PSJORPOE(+ORVP,SCH,PSOI,ORWD),X=$P(ORSD,U,4)
"RTN","ORCSEND1",166,0)
 . S ORSTRT(ORI)=$$FMADD^XLFDT(X,XD,XH,XM,XS) ;START+OFFSET
"RTN","ORCSEND1",167,0)
 . ; update OFFSET for next THEN dose
"RTN","ORCSEND1",168,0)
 . D DUR(ORI) I $G(ORX(ORI,ORCONJ))="T" D
"RTN","ORCSEND1",169,0)
 .. I $G(ORD("XD"))<1,$G(ORD("XH"))<1,$G(ORD("XM"))<1,$G(ORD("XS"))<1 S ORD("XD")=+$P(ORSD,U,3) ;default duration
"RTN","ORCSEND1",170,0)
 .. N I,Y F I="XD","XH","XM","XS" S Y=@I,@I=Y+$G(ORD(I))
"RTN","ORCSEND1",171,0)
 .. K ORD
"RTN","ORCSEND1",172,0)
 ; find beginning date.time for parent
"RTN","ORCSEND1",173,0)
 S ORI=0,X=9999999 F  S ORI=$O(ORSTRT(ORI)) Q:ORI<1  I ORSTRT(ORI)<X S X=ORSTRT(ORI)
"RTN","ORCSEND1",174,0)
 S ORSTRT("BEG")=X
"RTN","ORCSEND1",175,0)
 Q
"RTN","ORCSEND1",176,0)
DUR(I) ; Accumulate duration in ORD("Xt") for offsetting next THEN dose
"RTN","ORCSEND1",177,0)
 N X,Y S X=$$FMDUR^ORCDPS3($G(ORX(I,ORDUR)))
"RTN","ORCSEND1",178,0)
 I X["S",+X>$G(ORD("XS")) S ORD("XS")=+X
"RTN","ORCSEND1",179,0)
 I X["'",+X>$G(ORD("XM")) S ORD("XM")=+X
"RTN","ORCSEND1",180,0)
 I X["H",+X>$G(ORD("XH")) S ORD("XH")=+X
"RTN","ORCSEND1",181,0)
 S Y=$S(X["D":+X,X["W":+X*7,X["M":+X*30,1:0)
"RTN","ORCSEND1",182,0)
 I Y,Y>$G(ORD("XD")) S ORD("XD")=Y
"RTN","ORCSEND1",183,0)
 Q
"RTN","ORCSEND1",184,0)
VBEC ; Spawn VBECS children
"RTN","ORCSEND1",185,0)
 D:$L($T(EN^ORCSEND2)) EN^ORCSEND2
"RTN","ORCSEND1",186,0)
 Q
"RTN","ORCSEND3")
0^4^B25867937^B25727603
"RTN","ORCSEND3",1,0)
ORCSEND3 ;SLC/MKB,AGP-Release cont ;05/20/2008
"RTN","ORCSEND3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,282**;Dec 17, 1997;Build 6
"RTN","ORCSEND3",3,0)
 ;
"RTN","ORCSEND3",4,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCSEND3",5,0)
 ;
"RTN","ORCSEND3",6,0)
 ;Reference to PSJORPOE supported by IA #3167
"RTN","ORCSEND3",7,0)
 ;
"RTN","ORCSEND3",8,0)
CHILD(STRT) ; Create child order, send to package
"RTN","ORCSEND3",9,0)
 N ORAPPT,ORPTS,A
"RTN","ORCSEND3",10,0)
 K ORIFN D EN^ORCSAVE Q:'$G(ORIFN)  D STARTDT^ORCSAVE2(ORIFN)
"RTN","ORCSEND3",11,0)
 I $G(STRT) D DATES^ORCSAVE2(ORIFN,STRT)
"RTN","ORCSEND3",12,0)
 S ORCHLD=+$G(ORCHLD)+1,^OR(100,ORPARENT,2,ORIFN,0)=ORIFN,ORLAST=ORIFN
"RTN","ORCSEND3",13,0)
 S A=$G(^OR(100,ORPARENT,0)),ORAPPT=$P(A,U,18),ORPTS=$P(A,"^",13)
"RTN","ORCSEND3",14,0)
 S $P(^OR(100,ORIFN,0),U,18)=ORAPPT,$P(^(3),U,9)=ORPARENT
"RTN","ORCSEND3",15,0)
 I PKG="LR" I $P(^OR(100,ORIFN,0),U,13)="" S $P(^(0),"^",13)=ORPTS
"RTN","ORCSEND3",16,0)
 N X0 S X0=$G(^OR(100,ORPARENT,8,1,0))
"RTN","ORCSEND3",17,0)
 I $P(X0,U,4)'=2 D SIGN^ORCSAVE2(ORIFN,+$P(X0,U,5),ORNOW,$P(X0,U,4),1)
"RTN","ORCSEND3",18,0)
 I $D(^OR(100,ORPARENT,9)) M ^OR(100,ORIFN,9)=^OR(100,ORPARENT,9)
"RTN","ORCSEND3",19,0)
 I $G(ORENEW) S OLD=$O(ORENEW(0)) I OLD S $P(^OR(100,OLD,3),U,6)=ORIFN,$P(^OR(100,ORIFN,3),U,5)=OLD,$P(^(3),U,11)=2 K ORENEW(OLD)
"RTN","ORCSEND3",20,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)),NEW^ORMBLD(ORIFN)
"RTN","ORCSEND3",21,0)
 Q
"RTN","ORCSEND3",22,0)
 ;
"RTN","ORCSEND3",23,0)
DOSES(IFN) ;
"RTN","ORCSEND3",24,0)
 N I,CNT S CNT=0
"RTN","ORCSEND3",25,0)
 S I=+$O(^OR(100,+$G(IFN),4.5,"ID","NOW",0)) I I,$G(^OR(100,+$G(IFN),4.5,I,1)) S CNT=CNT+1
"RTN","ORCSEND3",26,0)
 Q CNT
"RTN","ORCSEND3",27,0)
 ;
"RTN","ORCSEND3",28,0)
GETORDER(IFN) ; Set ORX(Inst,Ptr)=Value
"RTN","ORCSEND3",29,0)
 N I,X,Y,PTR,INST,TYPE,SOLCNT,ADDCNT
"RTN","ORCSEND3",30,0)
 S (SOLCNT,ADDCNT)=0
"RTN","ORCSEND3",31,0)
 S I=0 F  S I=$O(^OR(100,IFN,4.5,I)) Q:I'>0  S X=$G(^(I,0)),Y=$G(^(1)) D
"RTN","ORCSEND3",32,0)
 . S PTR=+$P(X,U,2),INST=+$P(X,U,3),TYPE=$P($G(^ORD(101.41,PTR,1)),U)
"RTN","ORCSEND3",33,0)
 . I TYPE'="W" S ORX(PTR,INST)=Y Q
"RTN","ORCSEND3",34,0)
 . ;S ORX(INST,PTR)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND3",35,0)
 . S ORX(PTR,INST)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND3",36,0)
 Q
"RTN","ORCSEND3",37,0)
PSJI ;
"RTN","ORCSEND3",38,0)
 ;IV dialog
"RTN","ORCSEND3",39,0)
 N ORPARENT,OR0,ORNP,ORDIALOG,ORDUZ,ORLOG,ORL,ORDG,ORCAT,ORX,ORP,ORI,STS
"RTN","ORCSEND3",40,0)
 N ORDOSE,ORT,ORSCH,ORDUR,ORSTRT,ORFRST,ORCONJ,ORID,ORDD,ORSTR,ORDGNM
"RTN","ORCSEND3",41,0)
 N ORSTART,ORCHLD,ORLAST,ORSIG,OROI,ID,OR3,ORIG,CODE,PKG,ORENEW,I,ORADMIN
"RTN","ORCSEND3",42,0)
 N ORDUR
"RTN","ORCSEND3",43,0)
 N CNT
"RTN","ORCSEND3",44,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORPARENT,0)),OR3=$G(^OR(100,ORPARENT,3))
"RTN","ORCSEND3",45,0)
 S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND3",46,0)
 ;Q:$P(OR0,U,12)'="I"  S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND3",47,0)
 S ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7)
"RTN","ORCSEND3",48,0)
 S ORL=$P(OR0,U,10),ORDG=+$P(OR0,U,11),PKG=$$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)
"RTN","ORCSEND3",49,0)
 ;Build ORDIALOG Array and ORX local array
"RTN","ORCSEND3",50,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORPARENT)
"RTN","ORCSEND3",51,0)
 ;
"RTN","ORCSEND3",52,0)
 S ORSCH=$$PTR("SCHEDULE"),ORDUR=$$PTR("DURATION")
"RTN","ORCSEND3",53,0)
 D STRT S ORSTART=$G(ORSTRT("BEG"))
"RTN","ORCSEND3",54,0)
 S ORADMIN=$$PTR("ADMIN TIMES")
"RTN","ORCSEND3",55,0)
 D DATES^ORCSAVE2(ORPARENT,ORSTART) Q:$$DOSES(ORPARENT)<1
"RTN","ORCSEND3",56,0)
 S ORFRST=$$PTR("NOW"),ORSIG=$$PTR("SIG")
"RTN","ORCSEND3",57,0)
 ;
"RTN","ORCSEND3",58,0)
 I $P(OR3,U,11)=2,$O(^OR(100,+$P(OR3,U,5),2,0)) D
"RTN","ORCSEND3",59,0)
 . S ORENEW=+$P(OR3,U,5),I=0
"RTN","ORCSEND3",60,0)
 . I $$VALUE^ORX8(ORENEW,"NOW") S I=$O(^OR(100,ORENEW,2,0))
"RTN","ORCSEND3",61,0)
 . F  S I=$O(^OR(100,ORENEW,2,I)) Q:I<1  S ORENEW(I)=""
"RTN","ORCSEND3",62,0)
 ;
"RTN","ORCSEND3",63,0)
PSJI1 ;
"RTN","ORCSEND3",64,0)
 ;Build Order Dialog Prompts that can have Multiple Responses
"RTN","ORCSEND3",65,0)
 F ORP="ADDITIVE","ORDERABLE ITEM","STRENGTH PSIV","UNITS","VOLUME" D
"RTN","ORCSEND3",66,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(PTR,1))
"RTN","ORCSEND3",67,0)
 . S CNT=0 F  S CNT=$O(ORX(PTR,CNT)) Q:CNT'>0  S ORDIALOG(PTR,CNT)=ORX(PTR,CNT)
"RTN","ORCSEND3",68,0)
 ;
"RTN","ORCSEND3",69,0)
 ;Build Order Dialog Responses that should be in both Child Orders
"RTN","ORCSEND3",70,0)
 F ORP="INFUSION RATE","IV TYPE","ROUTE","URGENCY","WORD PROCESSING 1" D
"RTN","ORCSEND3",71,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(PTR,1))
"RTN","ORCSEND3",72,0)
 . S ORDIALOG(PTR,1)=ORX(PTR,1) S:$E(ORP)="O" OROI=ORX(PTR,1) Q
"RTN","ORCSEND3",73,0)
 ;
"RTN","ORCSEND3",74,0)
 ;If NOW order create NOW Child Order
"RTN","ORCSEND3",75,0)
 I $G(ORX(ORFRST,1)) D
"RTN","ORCSEND3",76,0)
 . S:$D(ORX(ORP,1)) ORDIALOG(ORP,1)=ORX(ORP,1)
"RTN","ORCSEND3",77,0)
 . ;S ID=$G(ORX(ORI,ORID)) S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND3",78,0)
 . S ORDIALOG(ORSCH,1)="NOW",ORSTART=$$NOW^XLFDT
"RTN","ORCSEND3",79,0)
 . D CHILD(ORSTART)
"RTN","ORCSEND3",80,0)
 ;
"RTN","ORCSEND3",81,0)
 ;Build Order Fields for non-NOW Child Order
"RTN","ORCSEND3",82,0)
 F ORP=ORSCH,ORADMIN,ORDUR S:$D(ORX(ORP,1)) ORDIALOG(ORP,1)=ORX(ORP,1) K:'$D(ORX(ORP,1)) ORDIALOG(ORP,1)
"RTN","ORCSEND3",83,0)
 S ORSTART=$G(ORSTRT(1))
"RTN","ORCSEND3",84,0)
 D CHILD(ORSTART)
"RTN","ORCSEND3",85,0)
 ;
"RTN","ORCSEND3",86,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND3",87,0)
 S ORIFN=ORPARENT,ORQUIT=1,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND3",88,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND3",89,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)) K ^TMP("ORWORD",$J)
"RTN","ORCSEND3",90,0)
 S $P(^OR(100,ORIFN,3),U,8)=1 ;veil parent order - set stop date/time?
"RTN","ORCSEND3",91,0)
 Q:(STS=1)!(STS=13)!(STS=11)  ;unsuccessful
"RTN","ORCSEND3",92,0)
PSJI2 ; ck if parent is unsigned or edit
"RTN","ORCSEND3",93,0)
 I $P($G(^OR(100,ORIFN,8,1,0)),U,4)=2 S $P(^(0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;clear ES
"RTN","ORCSEND3",94,0)
 Q:$P(OR3,U,11)'=1  S ORIG=$P(OR3,U,5) Q:ORIG'>0
"RTN","ORCSEND3",95,0)
 S CODE=$S($P($G(^OR(100,ORIG,3)),U,3)=5:"CA",1:"DC")
"RTN","ORCSEND3",96,0)
 D MSG^ORMBLD(ORIG,CODE) I "^1^13^"[(U_$P($G(^OR(100,ORIG,3)),U,3)_U) D
"RTN","ORCSEND3",97,0)
 . N NATR S NATR=+$O(^ORD(100.02,"C","C",0))
"RTN","ORCSEND3",98,0)
 . S $P(^OR(100,ORIG,3),U,3)=12,$P(^(3),U,7)=0,^(6)=NATR_U_DUZ_U_ORNOW
"RTN","ORCSEND3",99,0)
 . D CANCEL^ORCSEND(ORIG) ;ck for unrel actions
"RTN","ORCSEND3",100,0)
 Q
"RTN","ORCSEND3",101,0)
PTR(X) ; Returns ptr of prompt X in Order Dialog file
"RTN","ORCSEND3",102,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORCSEND3",103,0)
 ;
"RTN","ORCSEND3",104,0)
STRT ; Build ORSTRT(inst)=date.time array of start times by dose
"RTN","ORCSEND3",105,0)
 N OI,PSOI,XD,XH,XM,XS,ORWD,ORI,SCH,ORSD,X,ORD K ORSTRT
"RTN","ORCSEND3",106,0)
 S OI=$G(ORX($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORCSEND3",107,0)
 ;if OI is null assume Intermittent IV order this does not required a 
"RTN","ORCSEND3",108,0)
 ;solution check for an additive only value
"RTN","ORCSEND3",109,0)
 I OI="" S OI=$G(ORX($$PTR^ORCD("OR GTX ADDITIVE"),1))
"RTN","ORCSEND3",110,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2),(XD,XH,XM,XS)=0
"RTN","ORCSEND3",111,0)
 S ORWD=+$G(^SC(+$G(ORL),42)) ;ward
"RTN","ORCSEND3",112,0)
 ;S ORI=0 F  S ORI=$O(ORX(ORI)) Q:ORI<1  D
"RTN","ORCSEND3",113,0)
 S SCH=$G(ORX(ORSCH,1)),ORSD="" S:'$L(SCH) X=$$NOW^XLFDT
"RTN","ORCSEND3",114,0)
 S:$L(SCH) ORSD=$$STARTSTP^PSJORPOE(+ORVP,SCH,PSOI,ORWD),X=$P(ORSD,U,4)
"RTN","ORCSEND3",115,0)
 S ORSTRT(1)=$$FMADD^XLFDT(X,XD,XH,XM,XS) ;START+OFFSET
"RTN","ORCSEND3",116,0)
 ; find beginning date.time for parent
"RTN","ORCSEND3",117,0)
 S ORI=0,X=9999999 F  S ORI=$O(ORSTRT(ORI)) Q:ORI<1  I ORSTRT(ORI)<X S X=ORSTRT(ORI)
"RTN","ORCSEND3",118,0)
 S ORSTRT("BEG")=X
"RTN","ORCSEND3",119,0)
 Q
"RTN","ORQ2")
0^2^B44237971^B39956511
"RTN","ORQ2",1,0)
ORQ2 ; SLC/MKB/GSS - Detailed Order Report ;10/10/2006
"RTN","ORQ2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**12,56,75,94,141,213,195,243,282**;Dec 17, 1997;Build 6
"RTN","ORQ2",3,0)
 ;
"RTN","ORQ2",4,0)
 ;
"RTN","ORQ2",5,0)
 ;Reference to ^DIC(45.7 supported by IA #519
"RTN","ORQ2",6,0)
 ;Reference to OERR^VADPT supported by IA #4325
"RTN","ORQ2",7,0)
 ;
"RTN","ORQ2",8,0)
DETAIL(ORY,ORIFN) ; -- Returns details of order ORIFN in ORY(#)
"RTN","ORQ2",9,0)
 N X,X2,I,CNT,ORDIALOG,OR0,OR3,OR6,SEQ,ITEM,PRMT,MULT,FIRST,TITLE,INST,DIWL,DIWR,DIWF,ACTION,VAIN,ORIGVIEW,ORNMSP,ORYT
"RTN","ORQ2",10,0)
 S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))
"RTN","ORQ2",11,0)
 S ORNMSP=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORQ2",12,0)
 K @ORY,ORYT S ORIGVIEW=1 D TEXT^ORQ12(.ORYT,+ORIFN_";"_+$P(OR3,U,7),80) ;CurrTx
"RTN","ORQ2",13,0)
 M @ORY=ORYT ;Move text to global
"RTN","ORQ2",14,0)
 S I=0 F CNT=1:1 S I=$O(ORYT(I)) Q:I'>0  D:$D(IORVON) SETVIDEO(I,1,$L(ORYT(I)),IORVON,IORVOFF)
"RTN","ORQ2",15,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",16,0)
D1 I $O(^OR(100,+ORIFN,2,0)) D
"RTN","ORQ2",17,0)
 . S CNT=CNT+1,@ORY@(CNT)="Sub Orders:"
"RTN","ORQ2",18,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,11,IOUON,IOUOFF)
"RTN","ORQ2",19,0)
 . N IFN S IFN=0
"RTN","ORQ2",20,0)
 . F  S IFN=+$O(^OR(100,+ORIFN,2,IFN)) Q:IFN<1  I $D(^OR(100,IFN,0)) D SUB(IFN)
"RTN","ORQ2",21,0)
 . S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",22,0)
 I $P(OR3,U,9),$D(^OR(100,+$P(OR3,U,9),0)) D
"RTN","ORQ2",23,0)
 . S CNT=CNT+1,@ORY@(CNT)="Parent Order:"
"RTN","ORQ2",24,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,12,IOUON,IOUOFF)
"RTN","ORQ2",25,0)
 . D SUB(+$P(OR3,U,9))
"RTN","ORQ2",26,0)
 . S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",27,0)
 I $P(OR3,U,11)=1,$P(OR3,U,5) D  ;Changed - show previous order
"RTN","ORQ2",28,0)
 . S CNT=CNT+1,@ORY@(CNT)="Previous Order:"
"RTN","ORQ2",29,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,15,IOUON,IOUOFF) ;prev order original text
"RTN","ORQ2",30,0)
 . N ORZ,I,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.ORZ,+$P(OR3,U,5),55)
"RTN","ORQ2",31,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Order Text:        "_$G(ORZ(1))
"RTN","ORQ2",32,0)
 . S I=1 F  S I=$O(ORZ(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORZ(I))
"RTN","ORQ2",33,0)
D2 S CNT=CNT+1,@ORY@(CNT)="Activity:"
"RTN","ORQ2",34,0)
 D:$D(IOUON) SETVIDEO(CNT,1,9,IOUON,IOUOFF)
"RTN","ORQ2",35,0)
 S DIWL=1,DIWR=64,DIWF="C64",ORI=0 K ^UTILITY($J,"W")
"RTN","ORQ2",36,0)
 F  S ORI=$O(^OR(100,ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20
"RTN","ORQ2",37,0)
 I "^1^12^13^"[(U_$P(OR3,U,3)_U),$L(OR6),$P(ACTION,U,2)'="DC" D DC^ORQ20
"RTN","ORQ2",38,0)
 I $P(OR3,U,3)=2,$P(OR6,U,6) S CNT=CNT+1,@ORY@(CNT)=$$DATE^ORQ20($P(OR6,U,6))_"  Completed"_$S($P(OR6,U,7):" by "_$$USER^ORQ20($P(OR6,U,7)),1:"")
"RTN","ORQ2",39,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",40,0)
D3 S CNT=CNT+1,@ORY@(CNT)="Current Data:"
"RTN","ORQ2",41,0)
 D:$D(IOUON) SETVIDEO(CNT,1,13,IOUON,IOUOFF)
"RTN","ORQ2",42,0)
 D VA I $G(VAIN(2)) S CNT=CNT+1,@ORY@(CNT)="Current Primary Provider:     "_$P(VAIN(2),"^",2)
"RTN","ORQ2",43,0)
 I $G(VAIN(11)) S CNT=CNT+1,@ORY@(CNT)="Current Attending Physician:  "_$P(VAIN(11),"^",2)
"RTN","ORQ2",44,0)
 S CNT=CNT+1,@ORY@(CNT)="Treating Specialty:           "_$P($G(^DIC(45.7,+$P(OR0,U,13),0)),U)
"RTN","ORQ2",45,0)
 S CNT=CNT+1,@ORY@(CNT)="Ordering Location:            "_$P($G(^SC(+$P(OR0,U,10),0)),U)
"RTN","ORQ2",46,0)
 S CNT=CNT+1,@ORY@(CNT)="Start Date/Time:              "_$S($P(OR0,U,8):$$DATE^ORQ20($P(OR0,U,8)),1:"")
"RTN","ORQ2",47,0)
 I $P(OR3,U,5),$P(OR3,U,11)=2 S X=$$ORIG(ORIFN),@ORY@(CNT)=@ORY@(CNT)_" (originally "_$$DATE^ORQ20(X)_")"
"RTN","ORQ2",48,0)
 S CNT=CNT+1,@ORY@(CNT)="Stop Date/Time:               "_$S($P(OR0,U,9):$$DATE^ORQ20($P(OR0,U,9)),1:"")
"RTN","ORQ2",49,0)
 I $P(OR3,U,3)=1,$P(OR6,U,6) S @ORY@(CNT)=@ORY@(CNT)_"  (expired "_$$DATE^ORQ20($P(OR6,U,6))_")"
"RTN","ORQ2",50,0)
 S CNT=CNT+1,@ORY@(CNT)="Current Status:               "_$S($D(^ORD(100.01,+$P(OR3,U,3),0)):$P(^(0),"^"),1:"-")
"RTN","ORQ2",51,0)
 I $$GET^XPAR("ALL","ORPF SHOW STATUS DESCRIPTION",1,"I"),$P(OR3,U,3),$D(^ORD(100.01,$P(OR3,U,3),0)) N J S J=0 F  S J=$O(^ORD(100.01,$P(OR3,U,3),1,J)) Q:J<1  S CNT=CNT+1,@ORY@(CNT)="  "_^(J,0)
"RTN","ORQ2",52,0)
 S CNT=CNT+1,@ORY@(CNT)="Order #"_ORIFN
"RTN","ORQ2",53,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",54,0)
D4 S CNT=CNT+1,@ORY@(CNT)="Order:" D:$D(IOUON) SETVIDEO(CNT,1,6,IOUON,IOUOFF)
"RTN","ORQ2",55,0)
 I '$O(^OR(100,ORIFN,4.5,0)),ORNMSP="RA" D RAD^ORQ21("") Q
"RTN","ORQ2",56,0)
 S ORDIALOG=$P(OR0,U,5) Q:$P(ORDIALOG,";",2)="ORD(101,"  ; 2.5 order
"RTN","ORQ2",57,0)
 D GETDLG^ORCD(+ORDIALOG),GETORDER^ORCD(ORIFN)
"RTN","ORQ2",58,0)
 S DIWL=1,DIWR=50,DIWF="C50"
"RTN","ORQ2",59,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:SEQ'>0  S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORQ2",60,0)
 . S ITEM=$G(^ORD(101.41,+ORDIALOG,10,DA,0)) Q:$P(ITEM,U,11)  ; child
"RTN","ORQ2",61,0)
 . S PRMT=$P(ITEM,U,2),MULT=$P(ITEM,U,7) Q:$P(ITEM,U,9)["*"  ;hide
"RTN","ORQ2",62,0)
 . S FIRST=$O(ORDIALOG(PRMT,0)) Q:'FIRST  ; no values
"RTN","ORQ2",63,0)
 . S TITLE=$S(MULT&$L($G(ORDIALOG(PRMT,"TTL"))):ORDIALOG(PRMT,"TTL"),1:ORDIALOG(PRMT,"A"))
"RTN","ORQ2",64,0)
 . S TITLE=TITLE_$$REPEAT^XLFSTR(" ",30-$L(TITLE))
"RTN","ORQ2",65,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PRMT,INST)) Q:INST'>0  D
"RTN","ORQ2",66,0)
 . . I $E(ORDIALOG(PRMT,0))="W" D WP Q
"RTN","ORQ2",67,0)
 . . K ^UTILITY($J,"W") S X=$$EXT^ORCD(PRMT,INST) I TITLE["Infusion Rate"&(X'="")&(X'["ml/hr") S TITLE="Infuse Over Time:",TITLE=TITLE_$$REPEAT^XLFSTR(" ",30-$L(TITLE))
"RTN","ORQ2",68,0)
 . . D ^DIWP
"RTN","ORQ2",69,0)
 . . D:$D(^ORD(101.41,+ORDIALOG,10,"DAD",PRMT)) CHILDREN(PRMT)
"RTN","ORQ2",70,0)
 . . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$S((INST=FIRST)&(I=1):TITLE,1:$$REPEAT^XLFSTR(" ",30))_^(I,0)
"RTN","ORQ2",71,0)
 I ORNMSP="GMRC",$G(^OR(100,ORIFN,4)) S CNT=CNT+1,@ORY@(CNT)="Consult No.:                  "_+^(4)
"RTN","ORQ2",72,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",73,0)
 D RAD^ORQ21(1):ORNMSP="RA",MED^ORQ21:ORNMSP="PS" ;add'l data
"RTN","ORQ2",74,0)
 D BA^ORQ21 ;call for CIDC data
"RTN","ORQ2",75,0)
D5 I $O(^OR(100,+ORIFN,9,0)) D
"RTN","ORQ2",76,0)
 . N CK,OK,X0,X,CDL,I S CNT=CNT+1,@ORY@(CNT)="Order Checks:"
"RTN","ORQ2",77,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,13,IOUON,IOUOFF)
"RTN","ORQ2",78,0)
 . S CK=0 F  S CK=$O(^OR(100,+ORIFN,9,CK)) Q:CK'>0  S X0=$G(^(CK,0)),X=$G(^(1)) D
"RTN","ORQ2",79,0)
 .. S CDL=$$CDL($P(X0,U,2)) I $P(X0,U,6),'$D(OK) S OK=$P(X0,U,4,6)
"RTN","ORQ2",80,0)
 .. I $L(X)'>68 S CNT=CNT+1,@ORY@(CNT)=CDL_X Q
"RTN","ORQ2",81,0)
 .. S DIWL=1,DIWR=68,DIWF="C68" K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",82,0)
 .. S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=CDL_^(I,0),CDL="            "
"RTN","ORQ2",83,0)
 . Q:'$L($G(OK))  S CNT=CNT+1,@ORY@(CNT)="Override:   "_$S($P(OK,U,2):$$USER^ORQ20($P(OK,U,2))_" on ",1:"")_$$DATE^ORQ20($P(OK,U,3))
"RTN","ORQ2",84,0)
 . I $L($P(OK,U))'>68 S CNT=CNT+1,@ORY@(CNT)="            "_$P(OK,U) Q
"RTN","ORQ2",85,0)
 . S DIWL=1,DIWR=68,DIWF="C68",X=$P(OK,U) K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",86,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)="            "_^(I,0)
"RTN","ORQ2",87,0)
 K ^TMP("ORWORD",$J),^UTILITY($J,"W")
"RTN","ORQ2",88,0)
 Q
"RTN","ORQ2",89,0)
 ;
"RTN","ORQ2",90,0)
SUB(IFN) ; -- add suborder or parent
"RTN","ORQ2",91,0)
 N ORCY,STS,STRT,IG,A,STOP,SCHED D TEXT^ORQ12(.ORCY,IFN,58)
"RTN","ORQ2",92,0)
 S STS=$G(^ORD(100.01,+$P($G(^OR(100,IFN,3)),U,3),.1))
"RTN","ORQ2",93,0)
 S A=^OR(100,IFN,0),STRT=$P(A,U,8),STOP=$P(A,U,9)
"RTN","ORQ2",94,0)
 S SCHED=$$VALUE^ORX8(IFN,"SCHEDULE",1,"E")
"RTN","ORQ2",95,0)
 S:STRT'="" STRT=$$DATE^ORQ20(STRT) I ORNMSP="LR" S:STOP]"" STOP=$$DATE^ORQ20(STOP)
"RTN","ORQ2",96,0)
 S IG=0 F  S IG=$O(ORCY(IG)) Q:IG<1  S CNT=CNT+1,@ORY@(CNT)=$J(STS,4)_" "_ORCY(IG)_" "_STRT,(STS,STRT)=" "
"RTN","ORQ2",97,0)
 I ORNMSP="LR",STOP]"" S CNT=CNT+1,@ORY@(CNT)=$J("How often: ",16)_SCHED_"   Stops:  "_STOP
"RTN","ORQ2",98,0)
 Q
"RTN","ORQ2",99,0)
 ;
"RTN","ORQ2",100,0)
WP ; -- add word-processing
"RTN","ORQ2",101,0)
 N WP,ORI,X M WP=@ORDIALOG(PRMT,INST)
"RTN","ORQ2",102,0)
 S CNT=CNT+1,@ORY@(CNT)=TITLE
"RTN","ORQ2",103,0)
 S ORI=0 F  S ORI=$O(WP(ORI)) Q:ORI'>0  S X=WP(ORI,0) S:X'="" CNT=CNT+1,@ORY@(CNT)="  "_X
"RTN","ORQ2",104,0)
 Q
"RTN","ORQ2",105,0)
 ;
"RTN","ORQ2",106,0)
CHILDREN(PARENT) ; -- add children
"RTN","ORQ2",107,0)
 N SEQ,DA,ITM,PRMT,TYPE,X
"RTN","ORQ2",108,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PARENT,SEQ)) Q:SEQ'>0  S DA=$O(^(SEQ,0)) D
"RTN","ORQ2",109,0)
 . S ITM=$G(^ORD(101.41,+ORDIALOG,10,DA,0)),PRMT=$P(ITM,U,2)
"RTN","ORQ2",110,0)
 . Q:$G(ORDIALOG(PRMT,INST))=""  Q:$P(ITM,U,9)["*"  ;no value or hide
"RTN","ORQ2",111,0)
 . S TYPE=$E(ORDIALOG(PRMT,0)) D:TYPE="W" WP
"RTN","ORQ2",112,0)
 . I TYPE'="W" D
"RTN","ORQ2",113,0)
 . . S X=$$EXT^ORCD(PRMT,INST)
"RTN","ORQ2",114,0)
 . . I $L(X,"|")=2 S X=$$REPLACE^ORHLESC(X,"|","||")
"RTN","ORQ2",115,0)
 . . D ^DIWP
"RTN","ORQ2",116,0)
 Q
"RTN","ORQ2",117,0)
 ;
"RTN","ORQ2",118,0)
SETVIDEO(LINE,COL,WIDTH,ON,OFF) ; -- set video attributes
"RTN","ORQ2",119,0)
 S ORY("VIDEO",LINE,COL,WIDTH)=ON
"RTN","ORQ2",120,0)
 S ORY("VIDEO",LINE,COL+WIDTH,0)=OFF
"RTN","ORQ2",121,0)
 Q
"RTN","ORQ2",122,0)
 ;
"RTN","ORQ2",123,0)
VA ; -- Call VADPT
"RTN","ORQ2",124,0)
 N ORY,DFN,Y S DFN=+$P(OR0,"^",2) D OERR^VADPT
"RTN","ORQ2",125,0)
 Q
"RTN","ORQ2",126,0)
 ;
"RTN","ORQ2",127,0)
CDL(X) ; -- Returns Clinical Danger Level X
"RTN","ORQ2",128,0)
 N Y S Y=$S(X=1:"HIGH:",X=2:"MODERATE:",X=3:"LOW:",1:"NONE:")
"RTN","ORQ2",129,0)
 S Y=$E(Y_"        ",1,12)
"RTN","ORQ2",130,0)
 Q Y
"RTN","ORQ2",131,0)
 ;
"RTN","ORQ2",132,0)
ORIG(IFN) ; -- Return original start date of [renewal] order
"RTN","ORQ2",133,0)
 N I,Y,X3,DONE
"RTN","ORQ2",134,0)
 S I=IFN,Y=$P($G(^OR(100,IFN,0)),U,8),DONE=0
"RTN","ORQ2",135,0)
 F  S X3=$G(^OR(100,I,3)) D  Q:DONE
"RTN","ORQ2",136,0)
 . I $P(X3,U,11)=2,$P(X3,U,5) S I=$P(X3,U,5) Q  ;loop
"RTN","ORQ2",137,0)
 . S Y=$P($G(^OR(100,I,0)),U,8),DONE=1
"RTN","ORQ2",138,0)
 Q Y
"RTN","ORWCV")
0^1^B78811826^B73405381
"RTN","ORWCV",1,0)
ORWCV ; SLC/KCM - Background Cover Sheet Load; ; 3/6/08 6:34am
"RTN","ORWCV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,132,209,214,195,215,260,243,282**;Dec 17, 1997;Build 6
"RTN","ORWCV",3,0)
 ;
"RTN","ORWCV",4,0)
 ;
"RTN","ORWCV",5,0)
 ; DBIA 1096    Reference to ^DGPM("ATID1"
"RTN","ORWCV",6,0)
 ; DBIA 1894    Reference to GETENC^PXAPI
"RTN","ORWCV",7,0)
 ; DBIA 1895    Reference to APPT2VST^PXAPI
"RTN","ORWCV",8,0)
 ; DBIA 2096    Reference to ^SD(409.63
"RTN","ORWCV",9,0)
 ; DBIA 2437    Reference to ^DGPM(
"RTN","ORWCV",10,0)
 ; DBIA 2965    Reference to ^DIC(405.1
"RTN","ORWCV",11,0)
 ; DBIA 4011    Access ^XWB(8994)
"RTN","ORWCV",12,0)
 ; DBIA 4313    Direct R/W permission to capacity mgmt global ^KMPTMP("KMPDT")
"RTN","ORWCV",13,0)
 ; DBIA 4325    References to AWCMCPR1
"RTN","ORWCV",14,0)
 ; DBIA 10061   Reference to ^UTILITY
"RTN","ORWCV",15,0)
 ; CPRS has a SACC exemption for usage of the variable $ZE
"RTN","ORWCV",16,0)
 ; 
"RTN","ORWCV",17,0)
START(VAL,DFN,IP,HWND,LOC,NODO,NEWREM) ; start cover sheet build in background
"RTN","ORWCV",18,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,SECT,BACK,X,I,ORLIST,STR,FILE,NODE,ORHTIME,ORX
"RTN","ORWCV",19,0)
 ; Capacity planning timing code uses ORHTIME
"RTN","ORWCV",20,0)
 S ORHTIME=$H
"RTN","ORWCV",21,0)
 S LOC=$G(LOC),NODO=";"_$G(NODO),NEWREM=+$G(NEWREM)
"RTN","ORWCV",22,0)
 D GETLST^XPAR(.ORX,"SYS^PKG","ORWOR COVER RETRIEVAL NEW","Q")
"RTN","ORWCV",23,0)
 S I=0 F  S I=$O(ORX(I)) Q:'I  I $D(^ORD(101.24,+ORX(I),0)) S SECT(+$P(^(0),"^",2))=$P(ORX(I),"^",2)
"RTN","ORWCV",24,0)
 D GETLST^XPAR(.ORLIST,"ALL","ORWCV1 COVERSHEET LIST")
"RTN","ORWCV",25,0)
 S (VAL,BACK,STR,FILE)=""
"RTN","ORWCV",26,0)
 F  S I=$O(ORLIST(I)) Q:'I  I $D(^ORD(101.24,$P(ORLIST(I),"^",2),0))  S X0=^(0) D
"RTN","ORWCV",27,0)
 . Q:$P(X0,"^",8)'="C"
"RTN","ORWCV",28,0)
 . S X=$P(X0,"^",2)
"RTN","ORWCV",29,0)
 . I NODO[(";"_X_";") Q                                  ; if in NODO, dont do section
"RTN","ORWCV",30,0)
 . S STR=STR_X_";"
"RTN","ORWCV",31,0)
 . I '$G(SECT(X)) S VAL=VAL_X_";"                        ; load section in foreground
"RTN","ORWCV",32,0)
 . E  S BACK=BACK_X_";",FILE=FILE_$P(ORLIST(I),"^",2)_";"  ; load section in background
"RTN","ORWCV",33,0)
 Q:BACK=""
"RTN","ORWCV",34,0)
 S ZTIO="ORW THREAD RESOURCE",ZTRTN="BUILD^ORWCV",ZTDTH=$H
"RTN","ORWCV",35,0)
 S (ZTSAVE("DFN"),ZTSAVE("IP"),ZTSAVE("HWND"),ZTSAVE("NEWREM"),ZTSAVE("LOC"),ZTSAVE("BACK"),ZTSAVE("FILE"))=""
"RTN","ORWCV",36,0)
 S ZTDESC="CPRS GUI Background Data Retrieval"
"RTN","ORWCV",37,0)
 D ^%ZTLOAD I '$D(ZTSK) S VAL=STR Q
"RTN","ORWCV",38,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",39,0)
 K ^XTMP(NODE)
"RTN","ORWCV",40,0)
 S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Background CPRS "_ZTSK
"RTN","ORWCV",41,0)
 ; Start capacity planning timing clock - will be stopped in POLL code
"RTN","ORWCV",42,0)
 I +$G(^KMPTMP("KMPD-CPRS")) S ^KMPTMP("KMPDT","ORWCV",NODE)=$G(ORHTIME)_"^^"_$G(DUZ)_"^"_$G(IO("CLNM"))
"RTN","ORWCV",43,0)
 Q
"RTN","ORWCV",44,0)
BUILD ; called in background by task manager, expects DFN, JobID 
"RTN","ORWCV",45,0)
 N NODE,IFLE,ORFNUM,ID,ENT,RTN,INODE,PARAM1,PARAM2,DETAIL,X0,X2
"RTN","ORWCV",46,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",47,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWCV",48,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE) Q  ; client no longer polling
"RTN","ORWCV",49,0)
 I '$D(^XTMP(NODE,0)) Q                    ; XTMP node has been purged
"RTN","ORWCV",50,0)
 L +^XTMP(NODE)
"RTN","ORWCV",51,0)
 S ^XTMP(NODE,"DFN")=DFN
"RTN","ORWCV",52,0)
 ;N $ETRAP,$ESTACK
"RTN","ORWCV",53,0)
 ;S $ETRAP="D ERR^ORWCV Q"
"RTN","ORWCV",54,0)
 I $L($G(FILE),";")>0 F IFLE=1:1:$L(FILE,";") S ORFNUM=$P(FILE,";",IFLE)  Q:'$D(^ORD(101.24,+ORFNUM,0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWCV",55,0)
 . S ID=$P(X0,"^",2),ENT=$P(X0,"^",6),RTN=$P(X0,"^",5),PARAM1=$P(X2,"^"),PARAM2=$P(X2,"^",2),INODE=$P(X2,"^",5),DETAIL=""
"RTN","ORWCV",56,0)
 . I $P(X0,"^",18) S DETAIL=$P($G(^ORD(101.24,+$P(X0,"^",18),0)),"^",13),DETAIL=$P($G(^XWB(8994,+DETAIL,0)),"^")  ;DBIA 4011
"RTN","ORWCV",57,0)
 . I '$L(INODE) Q
"RTN","ORWCV",58,0)
 . I '$L(ENT) S LST(IFLE)="0^ERROR: Missing ENTRY POINT field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",59,0)
 . I '$L(RTN) S LST(IFLE)="0^ERROR: Missing ROUTINE field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",60,0)
 . I '$L($T(@(ENT_"^"_RTN))) S LST(IFLE)="0^ERROR: "_ENT_"~"_RTN_" does not exist. See file 101.24 entry: "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",61,0)
 . I ID=50 D:$L($T(STRT3^AWCMCPR1)) STRT3^AWCMCPR1 D  D:$L($T(END^AWCMCPR1)) END^AWCMCPR1 Q  ;Special case for reminders
"RTN","ORWCV",62,0)
 .. I $G(NEWREM) D APPL^ORQQPXRM(.LST,DFN,LOC) I 1
"RTN","ORWCV",63,0)
 .. E  D @(ENT_"^"_RTN_"(.LST,DFN)")
"RTN","ORWCV",64,0)
 .. D LST2XTMP(INODE)
"RTN","ORWCV",65,0)
 . I $L(PARAM1),$L(PARAM2) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1,PARAM2)"),LST2XTMP(INODE) Q
"RTN","ORWCV",66,0)
 . I $L(PARAM1) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1)"),LST2XTMP(INODE) Q
"RTN","ORWCV",67,0)
 . D @(ENT_"^"_RTN_"(.LST,DFN)"),LST2XTMP(INODE)
"RTN","ORWCV",68,0)
 S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",69,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE)
"RTN","ORWCV",70,0)
 L -^XTMP(NODE)
"RTN","ORWCV",71,0)
 Q
"RTN","ORWCV",72,0)
ERR ;Error trap
"RTN","ORWCV",73,0)
 S $ETRAP="D UNWIND^ORWCV Q"
"RTN","ORWCV",74,0)
 I $D(NODE) D
"RTN","ORWCV",75,0)
 . I $D(INODE) S LST(0)="",LST(1)="0^ERROR DURING COVER SHEET BUILD:"_$ZERROR D LST2XTMP(INODE)
"RTN","ORWCV",76,0)
 . S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",77,0)
 . L -^XTMP(NODE)
"RTN","ORWCV",78,0)
 D @^%ZOSF("ERRTN") ;file error
"RTN","ORWCV",79,0)
 S $ECODE=",UOR70 error during Cover Sheet build,"
"RTN","ORWCV",80,0)
 Q
"RTN","ORWCV",81,0)
UNWIND ;Unwind Error stack
"RTN","ORWCV",82,0)
 Q:$ESTACK>1  ;pop the stack
"RTN","ORWCV",83,0)
 ;add additional code here, if needed
"RTN","ORWCV",84,0)
 Q
"RTN","ORWCV",85,0)
LST2XTMP(ID) ; put the list in ^XTMP(NODE,ID)
"RTN","ORWCV",86,0)
 I $G(^XTMP(NODE,"STOP")) Q
"RTN","ORWCV",87,0)
 N I
"RTN","ORWCV",88,0)
 I $L($G(DETAIL)) S I=0 F  S I=$O(LST(I)) Q:'I  S $P(LST(I),"^",12)=DETAIL
"RTN","ORWCV",89,0)
 K ^XTMP(NODE,ID) M ^XTMP(NODE,ID)=LST S ^XTMP(NODE,ID)=1 K LST
"RTN","ORWCV",90,0)
 Q
"RTN","ORWCV",91,0)
POLL(LST,DFN,IP,HWND) ; poll for completed cover sheet parts
"RTN","ORWCV",92,0)
 N I,ILST,ID,NODE,DONE
"RTN","ORWCV",93,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",94,0)
 I '$D(^XTMP(NODE,"DFN")) Q
"RTN","ORWCV",95,0)
 I ^XTMP(NODE,"DFN")'=DFN S LST(1)="~DONE=1" Q
"RTN","ORWCV",96,0)
 I $G(^XTMP(NODE,"DONE")) S ILST=ILST+1,LST(ILST)="~DONE=1",DONE=1
"RTN","ORWCV",97,0)
 F ID="PROB","CWAD","MEDS","RMND","LABS","VITL","VSIT" D
"RTN","ORWCV",98,0)
 . I '$G(^XTMP(NODE,ID)) Q
"RTN","ORWCV",99,0)
 . S ILST=ILST+1,LST(ILST)="~"_ID
"RTN","ORWCV",100,0)
 . S I=0 F  S I=$O(^XTMP(NODE,ID,I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_^(I)
"RTN","ORWCV",101,0)
 . K ^XTMP(NODE,ID)
"RTN","ORWCV",102,0)
 ; Stop capacity planning timing clock - was started in START code
"RTN","ORWCV",103,0)
 I DONE K ^XTMP(NODE) I +$G(^KMPTMP("KMPD-CPRS")) S $P(^KMPTMP("KMPDT","ORWCV",NODE),"^",2)=$H
"RTN","ORWCV",104,0)
 Q
"RTN","ORWCV",105,0)
STOP(OK,DFN,IP,HWND) ; stop cover sheet data retrieval
"RTN","ORWCV",106,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",107,0)
 S ^XTMP(NODE,"STOP")=1,OK=1
"RTN","ORWCV",108,0)
 L +^XTMP(NODE)
"RTN","ORWCV",109,0)
 I $G(^XTMP(NODE,"DONE")) K ^XTMP(NODE)
"RTN","ORWCV",110,0)
 L -^XTMP(NODE)
"RTN","ORWCV",111,0)
 Q
"RTN","ORWCV",112,0)
CLEAN ; clean up ^XTMP nodes
"RTN","ORWCV",113,0)
 S X="ORWCV"
"RTN","ORWCV",114,0)
 F  S X=$O(^XTMP(X)) Q:$E(X,1,5)'="ORWCV"  W !,X K ^XTMP(X)
"RTN","ORWCV",115,0)
 Q
"RTN","ORWCV",116,0)
LAB(LST,DFN) ; return labs for patient
"RTN","ORWCV",117,0)
 D:$L($T(STRT2^AWCMCPR1)) STRT2^AWCMCPR1
"RTN","ORWCV",118,0)
 D LIST^ORQOR1(.LST,DFN,"LAB",4,"T-"_$$RNGLAB(DFN),"T","AW",1)
"RTN","ORWCV",119,0)
 D:$L($T(END^AWCMCPR1)) END^AWCMCPR1
"RTN","ORWCV",120,0)
 Q
"RTN","ORWCV",121,0)
 ;
"RTN","ORWCV",122,0)
VST1(ORVISIT,DFN,BEG,END,SKIP) ;
"RTN","ORWCV",123,0)
 N ERR,ERRMSG
"RTN","ORWCV",124,0)
 S ERR=0 ; kludge to return errors
"RTN","ORWCV",125,0)
 Q:'$G(DFN)
"RTN","ORWCV",126,0)
 D VST(.ORVISIT,DFN,.BEG,.END,$G(SKIP),.ERR,.ERRMSG)
"RTN","ORWCV",127,0)
 I ERR K ORVISIT S ORVISIT(1)=ERRMSG
"RTN","ORWCV",128,0)
 Q
"RTN","ORWCV",129,0)
 ;
"RTN","ORWCV",130,0)
TEST ;D VST(.ZZZ,76,2950101,3050401,777,1,1)
"RTN","ORWCV",131,0)
 Q
"RTN","ORWCV",132,0)
VST(ORVISIT,DFN,BEG,END,SKIP,ERR,ERRMSG) ; return appts/admissions for patient
"RTN","ORWCV",133,0)
 N CHECKERR,VAERR,VASD,BDT,COUNT,DTM,EDT,LOC,NOW,ORQUERY,ORLST,STI,STS,TODAY,I,J,K,XI,XE,X
"RTN","ORWCV",134,0)
 S CHECKERR=($G(ERR)=0) ; kludge to check for errors
"RTN","ORWCV",135,0)
 S NOW=$$NOW^XLFDT(),TODAY=$P(NOW,".",1)
"RTN","ORWCV",136,0)
 I '$G(BEG) S BEG=$$X2FM($$RNGVBEG)
"RTN","ORWCV",137,0)
 I '$G(END) S END=$$X2FM($$RNGVEND)+0.2359
"RTN","ORWCV",138,0)
 S COUNT=0
"RTN","ORWCV",139,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",140,0)
 S VAERR=0
"RTN","ORWCV",141,0)
 I END>NOW D   Q:VAERR  ; get future encounters, past cancels/no-shows from VADPT
"RTN","ORWCV",142,0)
 . S VASD("F")=BEG
"RTN","ORWCV",143,0)
 . S VASD("T")=END
"RTN","ORWCV",144,0)
 . S VASD("W")="123456789"
"RTN","ORWCV",145,0)
 . D SDA^ORQRY01(.ERR,.ERRMSG)
"RTN","ORWCV",146,0)
 . I CHECKERR,ERR K ^UTILITY("VASD",$J) S ORVISIT(1)=ERRMSG Q  ;IA 10061
"RTN","ORWCV",147,0)
 . S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWCV",148,0)
 . . S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","ORWCV",149,0)
 . . S DTM=$P(XI,U),IEN=$P(XI,U,2),STI=$P(XI,U,3)
"RTN","ORWCV",150,0)
 . . S LOC=$P(XE,U,2),STS=$P(XE,U,3)
"RTN","ORWCV",151,0)
 . . I DTM<TODAY,(STI=""!(STI["I")!(STI="NT")) Q  ; no prior kept appts
"RTN","ORWCV",152,0)
 . . S ^TMP("ORVSTLIST",$J,DTM,"A",1)="A;"_DTM_";"_IEN_U_DTM_U_LOC_U_STS
"RTN","ORWCV",153,0)
 . K ^UTILITY("VASD",$J)
"RTN","ORWCV",154,0)
 I BEG'>NOW D  ;past encounters from ACRP Toolkit - set in CALLBACK
"RTN","ORWCV",155,0)
 . S BDT=BEG
"RTN","ORWCV",156,0)
 . S EDT=$S(END<NOW:END,1:NOW)
"RTN","ORWCV",157,0)
 . D OPEN^SDQ(.ORQUERY)
"RTN","ORWCV",158,0)
 . I '$$ERRCHK^SDQUT() D INDEX^SDQ(.ORQUERY,"PATIENT/DATE","SET")
"RTN","ORWCV",159,0)
 . I '$$ERRCHK^SDQUT() D PAT^SDQ(.ORQUERY,DFN,"SET")
"RTN","ORWCV",160,0)
 . I '$$ERRCHK^SDQUT() D DATE^SDQ(.ORQUERY,BDT,EDT,"SET")
"RTN","ORWCV",161,0)
 . I '$$ERRCHK^SDQUT() D
"RTN","ORWCV",162,0)
 . . S ORLST=$NA(^TMP("ORVSTLIST",$J))
"RTN","ORWCV",163,0)
 . . D SCANCB^SDQ(.ORQUERY,"D CALLBACK^ORWCV(Y,Y0,.ORLST,.ORSTOP)","SET")
"RTN","ORWCV",164,0)
 . I '$$ERRCHK^SDQUT() D ACTIVE^SDQ(.ORQUERY,"TRUE","SET")
"RTN","ORWCV",165,0)
 . I '$$ERRCHK^SDQUT() D SCAN^SDQ(.ORQUERY,"FORWARD")
"RTN","ORWCV",166,0)
 . D CLOSE^SDQ(.ORQUERY)
"RTN","ORWCV",167,0)
 ;
"RTN","ORWCV",168,0)
 I '$G(SKIP) D
"RTN","ORWCV",169,0)
 . N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,EARLY,DONE                ; admits
"RTN","ORWCV",170,0)
 . S EARLY=$$X2FM($$RNGVBEG),DONE=0
"RTN","ORWCV",171,0)
 . S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","ORWCV",172,0)
 . . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","ORWCV",173,0)
 . . . S X0=^DGPM(MOV,0),MTIM=$P(X0,U)
"RTN","ORWCV",174,0)
 . . . I MTIM<EARLY S DONE=1 Q
"RTN","ORWCV",175,0)
 . . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWCV",176,0)
 . . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWCV",177,0)
 . . . S ^TMP("ORVSTLIST",$J,MTIM,"I",1)="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","ORWCV",178,0)
 ;
"RTN","ORWCV",179,0)
 S COUNT=0
"RTN","ORWCV",180,0)
 S I=0 F  S I=$O(^TMP("ORVSTLIST",$J,I)) Q:'I  D
"RTN","ORWCV",181,0)
 . S J="" F  S J=$O(^TMP("ORVSTLIST",$J,I,J)) Q:J=""  D
"RTN","ORWCV",182,0)
 . . S K=0 F  S K=$O(^TMP("ORVSTLIST",$J,I,J,K)) Q:'K  D
"RTN","ORWCV",183,0)
 . . . S COUNT=COUNT+1
"RTN","ORWCV",184,0)
 . . . S ORVISIT(COUNT)=^TMP("ORVSTLIST",$J,I,J,K)
"RTN","ORWCV",185,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",186,0)
 Q
"RTN","ORWCV",187,0)
CALLBACK(IEN,NODE0,ARRAY,STOP) ; called back from ACRP Toolkit for encounters
"RTN","ORWCV",188,0)
 ;
"RTN","ORWCV",189,0)
 ; IEN and NODE0 relate to Outpatient Encounter File
"RTN","ORWCV",190,0)
 ; set STOP to 1 if need to quit
"RTN","ORWCV",191,0)
 ;
"RTN","ORWCV",192,0)
 N COUNT,DTM,LOC,OOS,TYPE,XSTAT,XLOC
"RTN","ORWCV",193,0)
 S DTM=+NODE0,COUNT=1
"RTN","ORWCV",194,0)
 S LOC=$P(NODE0,"^",4)
"RTN","ORWCV",195,0)
 S XLOC=$P($G(^SC(+LOC,0)),U),OOS=$G(^("OOS"))
"RTN","ORWCV",196,0)
 I OOS Q              ; ignore OOS locations
"RTN","ORWCV",197,0)
 I $P(NODE0,"^",6) Q  ; not parent encounter
"RTN","ORWCV",198,0)
 S XSTAT=$P($G(^SD(409.63,+$P(NODE0,"^",12),0)),"^")
"RTN","ORWCV",199,0)
 S TYPE=$S($P(NODE0,"^",8)=1:"A",1:"V")
"RTN","ORWCV",200,0)
 I TYPE="V",$D(@ARRAY@(DTM,"V")) S COUNT=$O(@ARRAY@(DTM,"V","A"),-1)+1 ; same d/t
"RTN","ORWCV",201,0)
 S @ARRAY@(DTM,TYPE,COUNT)=TYPE_";"_DTM_";"_LOC_U_DTM_U_XLOC_U_XSTAT
"RTN","ORWCV",202,0)
 Q
"RTN","ORWCV",203,0)
DTLVST(RPT,DFN,IEN,APPTINFO) ; return progress notes / discharge summary
"RTN","ORWCV",204,0)
 N VISIT
"RTN","ORWCV",205,0)
 I $P(APPTINFO,";")="A" D  Q
"RTN","ORWCV",206,0)
 . S VISIT=$$APPT2VST^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",207,0)
 . I VISIT=0 S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",208,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",209,0)
 I $P(APPTINFO,";")="V" D  Q
"RTN","ORWCV",210,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",211,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",212,0)
 I $P(APPTINFO,";")="I" D  Q
"RTN","ORWCV",213,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",214,0)
 . D DETSUM^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",215,0)
 . K ^TMP("PXKENC",$J)
"RTN","ORWCV",216,0)
 Q
"RTN","ORWCV",217,0)
X2FM(X) ; return FM date given relative date
"RTN","ORWCV",218,0)
 N %DT S %DT="TS" D ^%DT
"RTN","ORWCV",219,0)
 Q Y
"RTN","ORWCV",220,0)
RNGLAB(DFN) ; return days back for patient
"RTN","ORWCV",221,0)
 N INPT,PAR,LOC
"RTN","ORWCV",222,0)
 S INPT=0 I $L($G(^DPT(DFN,.1))) S INPT=1,LOC=^(.1)
"RTN","ORWCV",223,0)
 S PAR="ORQQLR DATE RANGE "_$S(INPT:"INPT",1:"OUTPT")
"RTN","ORWCV",224,0)
 Q $$GET^XPAR("ALL"_$S(INPT:"^LOC."_LOC,1:""),PAR,1,"I")
"RTN","ORWCV",225,0)
 ;
"RTN","ORWCV",226,0)
RNGVBEG() ; return start date for encounters
"RTN","ORWCV",227,0)
 Q $$GET^XPAR("ALL","ORQQCSDR CS RANGE START",1,"I")
"RTN","ORWCV",228,0)
 ;
"RTN","ORWCV",229,0)
RNGVEND() ; return stop date for encounters
"RTN","ORWCV",230,0)
 Q $$GET^XPAR("ALL","ORQQCSDR CS RANGE STOP",1,"I")
"RTN","ORWCV",231,0)
 ;
"RTN","ORWCV",232,0)
RANGES(REC,DFN) ; return ranges given a patient
"RTN","ORWCV",233,0)
 N REC
"RTN","ORWCV",234,0)
 S REC=$$RNGLAB(DFN)_U_$$RNGVBEG_U_$$RNGVEND
"RTN","ORWCV",235,0)
 Q
"VER")
8.0^22.0
"BLD",7489,6)
^269
**END**
**END**
