Released LEX*2*41 SEQ #53
Extracted from mail message
**KIDS**:LEX*2.0*41^

**INSTALL NAME**
LEX*2.0*41
"BLD",7223,0)
LEX*2.0*41^LEXICON UTILITY^0^3080422^y
"BLD",7223,1,0)
^^2^2^3060920^
"BLD",7223,1,1,0)
Please see the National Patch Module for details of the enhancements
"BLD",7223,1,2,0)
included in this patch
"BLD",7223,4,0)
^9.64PA^757.01^3
"BLD",7223,4,757.01,0)
757.01
"BLD",7223,4,757.01,2,0)
^9.641^757.01^1
"BLD",7223,4,757.01,2,757.01,0)
EXPRESSIONS  (File-top level)
"BLD",7223,4,757.01,2,757.01,1,0)
^9.6411^.01^1
"BLD",7223,4,757.01,2,757.01,1,.01,0)
DISPLAYABLE TEXT
"BLD",7223,4,757.01,222)
y^y^p^^^^n^^n
"BLD",7223,4,757.01,224)

"BLD",7223,4,757.02,0)
757.02
"BLD",7223,4,757.02,2,0)
^9.641^757.02^1
"BLD",7223,4,757.02,2,757.02,0)
CODES  (File-top level)
"BLD",7223,4,757.02,2,757.02,1,0)
^9.6411^13^1
"BLD",7223,4,757.02,2,757.02,1,13,0)
LEGACY CODE
"BLD",7223,4,757.02,222)
y^y^p^^^^n^^n
"BLD",7223,4,757.02,224)

"BLD",7223,4,757.03,0)
757.03
"BLD",7223,4,757.03,2,0)
^9.641^757.08^2
"BLD",7223,4,757.03,2,757.03,0)
CODING SYSTEMS  (File-top level)
"BLD",7223,4,757.03,2,757.03,1,0)
^9.6411^^
"BLD",7223,4,757.03,2,757.08,0)
SDO VERSION  (sub-file)
"BLD",7223,4,757.03,2,757.08,1,0)
^9.6411^1^2
"BLD",7223,4,757.03,2,757.08,1,.01,0)
SDO VERSION EFFECTIVE DATE
"BLD",7223,4,757.03,2,757.08,1,1,0)
SDO VERSION IDENTIFIER
"BLD",7223,4,757.03,222)
y^y^p^^^^n^^n
"BLD",7223,4,757.03,224)

"BLD",7223,4,"APDD",757.01,757.01)

"BLD",7223,4,"APDD",757.01,757.01,.01)

"BLD",7223,4,"APDD",757.02,757.02)

"BLD",7223,4,"APDD",757.02,757.02,13)

"BLD",7223,4,"APDD",757.03,757.03)

"BLD",7223,4,"APDD",757.03,757.08)

"BLD",7223,4,"APDD",757.03,757.08,.01)

"BLD",7223,4,"APDD",757.03,757.08,1)

"BLD",7223,4,"B",757.01,757.01)

"BLD",7223,4,"B",757.02,757.02)

"BLD",7223,4,"B",757.03,757.03)

"BLD",7223,6)
7^
"BLD",7223,6.3)
34
"BLD",7223,"ABNS",0)
^9.66A^^
"BLD",7223,"ABPKG")
n^n
"BLD",7223,"INID")
n^n
"BLD",7223,"INIT")
POST^LEX2041P
"BLD",7223,"KRN",0)
^9.67PA^8989.52^19
"BLD",7223,"KRN",.4,0)
.4
"BLD",7223,"KRN",.401,0)
.401
"BLD",7223,"KRN",.402,0)
.402
"BLD",7223,"KRN",.403,0)
.403
"BLD",7223,"KRN",.5,0)
.5
"BLD",7223,"KRN",.84,0)
.84
"BLD",7223,"KRN",3.6,0)
3.6
"BLD",7223,"KRN",3.8,0)
3.8
"BLD",7223,"KRN",9.2,0)
9.2
"BLD",7223,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",7223,"KRN",9.8,0)
9.8
"BLD",7223,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",7223,"KRN",9.8,"NM",1,0)
LEX2041^^0^B73919192
"BLD",7223,"KRN",9.8,"NM",2,0)
LEX2041P^^0^B5226744
"BLD",7223,"KRN",9.8,"NM",3,0)
LEXTRAN^^0^B59640556
"BLD",7223,"KRN",9.8,"NM",4,0)
LEXAS6^^0^B6676230
"BLD",7223,"KRN",9.8,"NM",5,0)
LEXXFI^^0^B52571781
"BLD",7223,"KRN",9.8,"NM",6,0)
LEXXGI^^0^B74289713
"BLD",7223,"KRN",9.8,"NM",7,0)
LEXXII^^0^B34625513
"BLD",7223,"KRN",9.8,"NM","B","LEX2041",1)

"BLD",7223,"KRN",9.8,"NM","B","LEX2041P",2)

"BLD",7223,"KRN",9.8,"NM","B","LEXAS6",4)

"BLD",7223,"KRN",9.8,"NM","B","LEXTRAN",3)

"BLD",7223,"KRN",9.8,"NM","B","LEXXFI",5)

"BLD",7223,"KRN",9.8,"NM","B","LEXXGI",6)

"BLD",7223,"KRN",9.8,"NM","B","LEXXII",7)

"BLD",7223,"KRN",19,0)
19
"BLD",7223,"KRN",19,"NM",0)
^9.68A^^
"BLD",7223,"KRN",19.1,0)
19.1
"BLD",7223,"KRN",101,0)
101
"BLD",7223,"KRN",409.61,0)
409.61
"BLD",7223,"KRN",771,0)
771
"BLD",7223,"KRN",870,0)
870
"BLD",7223,"KRN",8989.51,0)
8989.51
"BLD",7223,"KRN",8989.52,0)
8989.52
"BLD",7223,"KRN",8994,0)
8994
"BLD",7223,"KRN","B",.4,.4)

"BLD",7223,"KRN","B",.401,.401)

"BLD",7223,"KRN","B",.402,.402)

"BLD",7223,"KRN","B",.403,.403)

"BLD",7223,"KRN","B",.5,.5)

"BLD",7223,"KRN","B",.84,.84)

"BLD",7223,"KRN","B",3.6,3.6)

"BLD",7223,"KRN","B",3.8,3.8)

"BLD",7223,"KRN","B",9.2,9.2)

"BLD",7223,"KRN","B",9.8,9.8)

"BLD",7223,"KRN","B",19,19)

"BLD",7223,"KRN","B",19.1,19.1)

"BLD",7223,"KRN","B",101,101)

"BLD",7223,"KRN","B",409.61,409.61)

"BLD",7223,"KRN","B",771,771)

"BLD",7223,"KRN","B",870,870)

"BLD",7223,"KRN","B",8989.51,8989.51)

"BLD",7223,"KRN","B",8989.52,8989.52)

"BLD",7223,"KRN","B",8994,8994)

"BLD",7223,"PRE")
LEX2041
"BLD",7223,"QUES",0)
^9.62^^
"BLD",7223,"REQB",0)
^9.611^1^1
"BLD",7223,"REQB",1,0)
LEX*2.0*50^1
"BLD",7223,"REQB","B","LEX*2.0*50",1)

"FIA",757.01)
EXPRESSIONS
"FIA",757.01,0)
^LEX(757.01,
"FIA",757.01,0,0)
757.01
"FIA",757.01,0,1)
y^y^p^^^^n^^n
"FIA",757.01,0,10)

"FIA",757.01,0,11)

"FIA",757.01,0,"RLRO")

"FIA",757.01,0,"VR")
2.0^LEX
"FIA",757.01,757.01)
1
"FIA",757.01,757.01,.01)

"FIA",757.02)
CODES
"FIA",757.02,0)
^LEX(757.02,
"FIA",757.02,0,0)
757.02IP
"FIA",757.02,0,1)
y^y^p^^^^n^^n
"FIA",757.02,0,10)

"FIA",757.02,0,11)

"FIA",757.02,0,"RLRO")

"FIA",757.02,0,"VR")
2.0^LEX
"FIA",757.02,757.02)
1
"FIA",757.02,757.02,13)

"FIA",757.03)
CODING SYSTEMS
"FIA",757.03,0)
^LEX(757.03,
"FIA",757.03,0,0)
757.03I
"FIA",757.03,0,1)
y^y^f^^^^n^^n
"FIA",757.03,0,10)

"FIA",757.03,0,11)

"FIA",757.03,0,"RLRO")

"FIA",757.03,0,"VR")
2.0^LEX
"FIA",757.03,757.03)
0
"FIA",757.03,757.08)
0
"FIA",757.03,757.08,.01)

"FIA",757.03,757.08,1)

"INIT")
POST^LEX2041P
"MBREQ")
0
"PKG",574,-1)
1^1
"PKG",574,0)
LEXICON UTILITY^LEX^Medical and Biomedical Terminology System.
"PKG",574,20,0)
^9.402P^^
"PKG",574,22,0)
^9.49I^1^1
"PKG",574,22,1,0)
2.0^2960915^2970127^1
"PKG",574,22,1,"PAH",1,0)
41^3080422^520665219
"PKG",574,22,1,"PAH",1,1,0)
^^2^2^3080422
"PKG",574,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements
"PKG",574,22,1,"PAH",1,1,2,0)
included in this patch
"PRE")
LEX2041
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","LEX2041")
0^1^B73919192^n/a
"RTN","LEX2041",1,0)
LEX2041 ; ISL/FJF - Environment Check/Pre/Post Install ; 22 Apr 2008  6:37 PM
"RTN","LEX2041",2,0)
 ;;2.0;LEXICON UTILITY;**41**;Sep 23, 1996;Build 34
"RTN","LEX2041",3,0)
 ;                     
"RTN","LEX2041",4,0)
 ; External References
"RTN","LEX2041",5,0)
 ;   DBIA 10015  EN^DIQ1
"RTN","LEX2041",6,0)
 ;   DBIA 10141  $$PATCH^XPDUTL
"RTN","LEX2041",7,0)
 ;   DBIA 10141  $$VERSION^XPDUTL
"RTN","LEX2041",8,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2041",9,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2041",10,0)
 ;                            
"RTN","LEX2041",11,0)
ENV ; LEX*2.0*41 Environment Check
"RTN","LEX2041",12,0)
 ;                    
"RTN","LEX2041",13,0)
 ;   General
"RTN","LEX2041",14,0)
 W !," SNOMED CT release in support of LDSI",!
"RTN","LEX2041",15,0)
 ;
"RTN","LEX2041",16,0)
 N LEXBUILD,LEXIGHF,LEXREQP,LEXLREV,LEXG,LEXE
"RTN","LEX2041",17,0)
 D IMP
"RTN","LEX2041",18,0)
 S U="^"
"RTN","LEX2041",19,0)
 ;     No user
"RTN","LEX2041",20,0)
 D:+$$UR'>0 ET("User not defined (DUZ)")
"RTN","LEX2041",21,0)
 ;     No IO
"RTN","LEX2041",22,0)
 D:+$$SY'>0 ET("Undefined IO variable(s)")
"RTN","LEX2041",23,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2041",24,0)
 ;                    
"RTN","LEX2041",25,0)
 ;   Load Distribution
"RTN","LEX2041",26,0)
 ;
"RTN","LEX2041",27,0)
 ;     XPDENV = 0 Environment Check during Load
"RTN","LEX2041",28,0)
 ;
"RTN","LEX2041",29,0)
 ;       Check Version (2.0)
"RTN","LEX2041",30,0)
 I $$VERSION^XPDUTL("LEX")'="2.0" D  D ABRT Q
"RTN","LEX2041",31,0)
 . D ET("Version 2.0 not found.  Please install Lexicon Utility v 2.0")
"RTN","LEX2041",32,0)
 ;
"RTN","LEX2041",33,0)
 ;       Check Required Patches
"RTN","LEX2041",34,0)
 D:'$L($G(LEXREQP)) IMP I $L(LEXREQP) D
"RTN","LEX2041",35,0)
 .N LEXPAT,LEXI,LEXPN
"RTN","LEX2041",36,0)
 .F LEXI=1:1 Q:'$L($P(LEXREQP,";",LEXI))  S LEXPAT=$P(LEXREQP,";",LEXI) D
"RTN","LEX2041",37,0)
 ..S LEXPN=$$PATCH^XPDUTL(LEXPAT)
"RTN","LEX2041",38,0)
 ..W !,"   Checking for ",LEXPAT I +LEXPN>0 H 1 W " - installed"
"RTN","LEX2041",39,0)
 ..I +LEXPN'>0 D ET((LEXPAT_" not found, please install "_LEXPAT_" before continuing"))
"RTN","LEX2041",40,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2041",41,0)
 S LEXG=$$RGBL
"RTN","LEX2041",42,0)
 I $D(LEXE)&(+LEXG=0) D ABRT Q
"RTN","LEX2041",43,0)
 I $D(LEXE)&(+LEXG<0) D ABRT Q
"RTN","LEX2041",44,0)
 I '$D(LEXFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","LEX2041",45,0)
 ;                    
"RTN","LEX2041",46,0)
 ;   Install Package(s)
"RTN","LEX2041",47,0)
 ;
"RTN","LEX2041",48,0)
 ;     XPDENV = 1 Environment Check during Install
"RTN","LEX2041",49,0)
 ;
"RTN","LEX2041",50,0)
 ;       Check Data "is installed" or "is translated"
"RTN","LEX2041",51,0)
 N LEXIT S LEXIT=+$$CPD
"RTN","LEX2041",52,0)
 I '$D(LEXFULL)&(LEXIT)
"RTN","LEX2041",53,0)
 D QUIT
"RTN","LEX2041",54,0)
 Q
"RTN","LEX2041",55,0)
 ;       Checking Global "Write" Protection 
"RTN","LEX2041",56,0)
 D:+($G(XPDENV))=1 GBLS I $D(LEXE) D ABRT Q
"RTN","LEX2041",57,0)
 ;       Check Import Global Checksum 
"RTN","LEX2041",58,0)
 D:+($G(XPDENV))=1 CS I $D(LEXE) D ABRT Q
"RTN","LEX2041",59,0)
 ;                    
"RTN","LEX2041",60,0)
 ;   Quit, Exit or Abort
"RTN","LEX2041",61,0)
 ;
"RTN","LEX2041",62,0)
QUIT ;     Quit   Passed Environment Check
"RTN","LEX2041",63,0)
 K LEXFULL D OK
"RTN","LEX2041",64,0)
 Q
"RTN","LEX2041",65,0)
EXIT ;     Exit   Failed Environment Check
"RTN","LEX2041",66,0)
 D:$D(LEXE) ED S XPDQUIT=2 K LEXE,LEXFULL Q
"RTN","LEX2041",67,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","LEX2041",68,0)
 D:$D(LEXE) ED
"RTN","LEX2041",69,0)
 S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*41")=1
"RTN","LEX2041",70,0)
 K LEXE,LEXFULL
"RTN","LEX2041",71,0)
 Q
"RTN","LEX2041",72,0)
 ;               
"RTN","LEX2041",73,0)
 ; Checks
"RTN","LEX2041",74,0)
 ;
"RTN","LEX2041",75,0)
GBLS ;   Check Write access on globals
"RTN","LEX2041",76,0)
 N LEXE,LEXGBL,LEXRT,LEXT,LEXF,LEXI,LEXX,LEXOK,LEXCPD,LEXS,X S LEXOK=1
"RTN","LEX2041",77,0)
 D BM("   I will now check the protection on ^LEX, ^ICPT, ^ICD and ^DIC Globals.")
"RTN","LEX2041",78,0)
 D M("   If you get an ERROR, you will need to change the protection on these")
"RTN","LEX2041",79,0)
 D M("   globals to allow read/write as indicated:")
"RTN","LEX2041",80,0)
 D BM("                        Owner     Group    World   Network")
"RTN","LEX2041",81,0)
 D M("      Cache systems      RWD       RW       RW      RWD")
"RTN","LEX2041",82,0)
 D BM("   Checking:"),M(" ")
"RTN","LEX2041",83,0)
 S LEXCPD=$$CPD,LEXS="",X=1 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2041",84,0)
 .S LEXX=""
"RTN","LEX2041",85,0)
 .S LEXE="S LEXX=$T(GD+"_LEXI_")"
"RTN","LEX2041",86,0)
 .X LEXE
"RTN","LEX2041",87,0)
 .S LEXX=$$TRIM(LEXX)
"RTN","LEX2041",88,0)
 .Q:'$L(LEXX)
"RTN","LEX2041",89,0)
 .Q:'$L($TR(LEXX,";",""))
"RTN","LEX2041",90,0)
 .S LEXGBL=$P(LEXX,";",3)
"RTN","LEX2041",91,0)
 .Q:+LEXCPD>0&(LEXGBL="^LEXM(0)")
"RTN","LEX2041",92,0)
 .S LEXRT=$P(LEXX,";",4),LEXT=$P(LEXX,";",5),LEXF=$P(LEXX,";",6)
"RTN","LEX2041",93,0)
 .S (LEXB1,LEXB2)=""
"RTN","LEX2041",94,0)
 .S $P(LEXB1," ",(19-$L(LEXRT)))="",$P(LEXB2," ",(28-$L(LEXT)))=""
"RTN","LEX2041",95,0)
 .I '$D(@LEXGBL) D RGNF S LEXOK=0 D M(("      <"_LEXRT_" not found>")) Q
"RTN","LEX2041",96,0)
 .D M(("      "_LEXRT_LEXB1_LEXT_LEXB2_LEXF))
"RTN","LEX2041",97,0)
 .S @LEXGBL=$G(@LEXGBL) H 1
"RTN","LEX2041",98,0)
 D:LEXOK M("    --> ok") D:'LEXOK M("    ??") D M(" ")
"RTN","LEX2041",99,0)
 Q
"RTN","LEX2041",100,0)
RGBL(X) ;   Check Write access on globals
"RTN","LEX2041",101,0)
 N LEXCPD,LEXS,LEXI,LEXX,LEXEC,LEXGBL,LEXRT,LEXT,LEXF,LEXB1,LEXB2
"RTN","LEX2041",102,0)
 S LEXCPD=$$CPD,LEXS="",X=1
"RTN","LEX2041",103,0)
 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2041",104,0)
 .S LEXX=""
"RTN","LEX2041",105,0)
 .S LEXEC="S LEXX=$T(GD+"_LEXI_")"
"RTN","LEX2041",106,0)
 .X LEXEC
"RTN","LEX2041",107,0)
 .S LEXX=$$TRIM(LEXX)
"RTN","LEX2041",108,0)
 .Q:'$L(LEXX)
"RTN","LEX2041",109,0)
 .Q:'$L($TR(LEXX,";",""))
"RTN","LEX2041",110,0)
 .S LEXGBL=$P(LEXX,";",3)
"RTN","LEX2041",111,0)
 .I +LEXCPD>0,LEXGBL="^LEXM(0)" Q
"RTN","LEX2041",112,0)
 .S LEXRT=$P(LEXX,";",4),LEXT=$P(LEXX,";",5),LEXF=$P(LEXX,";",6)
"RTN","LEX2041",113,0)
 .S (LEXB1,LEXB2)="",$P(LEXB1," ",(15-$L(LEXRT)))="",$P(LEXB2," ",(28-$L(LEXT)))=""
"RTN","LEX2041",114,0)
 .I '$D(@LEXGBL) S:LEXS'[LEXRT LEXS=LEXS_", "_LEXRT S X=-1 S:LEXGBL["LEXM("&(X=1) X=0
"RTN","LEX2041",115,0)
 I $L(LEXS),X'>0 D
"RTN","LEX2041",116,0)
 .S:LEXS[", " LEXS=$P(LEXS,", ",1,($L(LEXS,", ")-1))_" and "_$P(LEXS,", ",$L(LEXS,", "))
"RTN","LEX2041",117,0)
 .S:$E(LEXS,1,2)=", " LEXS=$E(LEXS,3,$L(LEXS)) S:$E(LEXS,1,7)[" and " LEXS=$P(LEXS," and ",2)
"RTN","LEX2041",118,0)
 .D:X=-1 ET(("Global"_$S(LEXS[", "!(LEXS[" and "):"s",1:"")_" "_LEXS_" either not found or incomplete."))
"RTN","LEX2041",119,0)
 .D:X=0 CM
"RTN","LEX2041",120,0)
 Q X
"RTN","LEX2041",121,0)
RGNF ;   Required global not found
"RTN","LEX2041",122,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF D IMP
"RTN","LEX2041",123,0)
 I $G(LEXGL)["^LEX",$G(LEXGL)'["^LEXM" D
"RTN","LEX2041",124,0)
 .D ET("")
"RTN","LEX2041",125,0)
 .D ET("Required global "_$P($G(LEXGL),"(",1)_" not found.")
"RTN","LEX2041",126,0)
 I $G(LEXGL)["^LEX",$G(LEXGL)["^LEXM" D CM
"RTN","LEX2041",127,0)
 Q
"RTN","LEX2041",128,0)
CHK ;   Check the Checksum
"RTN","LEX2041",129,0)
 D CS I $D(LEXE) D ED Q
"RTN","LEX2041",130,0)
 D BM("  OK"),M(" ")
"RTN","LEX2041",131,0)
 Q
"RTN","LEX2041",132,0)
CS ;   Checksum for import global
"RTN","LEX2041",133,0)
 K LEXE
"RTN","LEX2041",134,0)
 D BM("   Running checksum routine on the ^LEXM import global, please wait")
"RTN","LEX2041",135,0)
 N LEXCHK,LEXNDS,LEXVER
"RTN","LEX2041",136,0)
 S LEXCHK=+$G(^LEXM(0,"CHECKSUM"))
"RTN","LEX2041",137,0)
 S LEXNDS=+$G(^LEXM(0,"NODES"))
"RTN","LEX2041",138,0)
 S LEXVER=+$$VC(LEXCHK,LEXNDS)
"RTN","LEX2041",139,0)
 D M(" ") D:LEXVER>0 M("     Checksum is ok"),M(" ")
"RTN","LEX2041",140,0)
 S LEXVER=1 ; <======
"RTN","LEX2041",141,0)
 D:LEXVER=0 CM
"RTN","LEX2041",142,0)
 D:LEXVER=-1 CW
"RTN","LEX2041",143,0)
 D:LEXVER=-2 CU
"RTN","LEX2041",144,0)
 D:LEXVER=-3 CF
"RTN","LEX2041",145,0)
 Q
"RTN","LEX2041",146,0)
VC(X,Y) ;   Verify Checksum for import global
"RTN","LEX2041",147,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF Q:'$D(^LEXM) 0
"RTN","LEX2041",148,0)
 D IMP
"RTN","LEX2041",149,0)
 I $G(^LEXM(0,"BUILD"))'=$G(LEXBUILD) Q -1
"RTN","LEX2041",150,0)
 N LEXCHK,LEXNDS,LEXCNT,LEXLC,LEXL,LEXS,LEXNC,LEXD,LEXN,LEXC,LEXGCS,LEXP,LEXT
"RTN","LEX2041",151,0)
 S LEXCHK=+$G(X),LEXNDS=+$G(Y)
"RTN","LEX2041",152,0)
 Q:LEXCHK'>0!(LEXNDS'>0) -2
"RTN","LEX2041",153,0)
 S LEXL=64,(LEXCNT,LEXLC)=0,LEXS=+(LEXNDS\LEXL)
"RTN","LEX2041",154,0)
 S:LEXS=0 LEXS=1
"RTN","LEX2041",155,0)
 D:+$O(^LEXM(0))>0 M("")
"RTN","LEX2041",156,0)
 S (LEXC,LEXN)="^LEXM",(LEXNC,LEXGCS)=0
"RTN","LEX2041",157,0)
 W "   "
"RTN","LEX2041",158,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEX2041",159,0)
 .Q:LEXN="^LEXM(0,""CHECKSUM"")"
"RTN","LEX2041",160,0)
 .Q:LEXN="^LEXM(0,""NODES"")"
"RTN","LEX2041",161,0)
 .S LEXCNT=LEXCNT+1
"RTN","LEX2041",162,0)
 .I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEX2041",163,0)
 .S LEXNC=LEXNC+1,LEXD=@LEXN,LEXT=LEXN_"="_LEXD
"RTN","LEX2041",164,0)
 .F LEXP=1:1:$L(LEXT) S LEXGCS=$A(LEXT,LEXP)*LEXP+LEXGCS
"RTN","LEX2041",165,0)
 Q:LEXNC'=LEXNDS -3
"RTN","LEX2041",166,0)
 Q:LEXGCS'=LEXCHK -3
"RTN","LEX2041",167,0)
 Q 1
"RTN","LEX2041",168,0)
SY(X) ;   Check System variables
"RTN","LEX2041",169,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","LEX2041",170,0)
 Q 1
"RTN","LEX2041",171,0)
UR(X) ;   Check User variables
"RTN","LEX2041",172,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","LEX2041",173,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","LEX2041",174,0)
 Q 1
"RTN","LEX2041",175,0)
CPD(X) ;   Check Current Patched Data is installed
"RTN","LEX2041",176,0)
 N INS S INS=1
"RTN","LEX2041",177,0)
 Q 0
"RTN","LEX2041",178,0)
 ;               
"RTN","LEX2041",179,0)
 ; Error messages
"RTN","LEX2041",180,0)
 ;
"RTN","LEX2041",181,0)
CM ;   Missing ^LEXM
"RTN","LEX2041",182,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF D IMP D ET(""),ET("Missing import global ^LEXM.") D CO
"RTN","LEX2041",183,0)
 Q
"RTN","LEX2041",184,0)
CW ;   Wrong ^LEXM
"RTN","LEX2041",185,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXB D IMP S LEXB=$G(^LEXM(0,"BUILD")) D ET("")
"RTN","LEX2041",186,0)
 I $L(LEXBUILD),$L(LEXB),LEXBUILD'=LEXB D  Q
"RTN","LEX2041",187,0)
 .D ET(("Incorrect import global ^LEXM found ("_LEXB_" global)."))
"RTN","LEX2041",188,0)
 .D CKO
"RTN","LEX2041",189,0)
 D ET("Incorrect import global ^LEXM found.") D CKO
"RTN","LEX2041",190,0)
 Q
"RTN","LEX2041",191,0)
CU ;   Unable to verify
"RTN","LEX2041",192,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2041",193,0)
 D IMP
"RTN","LEX2041",194,0)
 D ET("")
"RTN","LEX2041",195,0)
 D ET("Unable to verify checksum for import global ^LEXM (possibly corrupt).")
"RTN","LEX2041",196,0)
 D CKO
"RTN","LEX2041",197,0)
 Q
"RTN","LEX2041",198,0)
CF ;   Failed checksum
"RTN","LEX2041",199,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2041",200,0)
 D IMP
"RTN","LEX2041",201,0)
 D ET("")
"RTN","LEX2041",202,0)
 D ET("Import global ^LEXM failed checksum.")
"RTN","LEX2041",203,0)
 D CKO
"RTN","LEX2041",204,0)
 Q
"RTN","LEX2041",205,0)
CO ;   Obtain new global
"RTN","LEX2041",206,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2041",207,0)
 D IMP
"RTN","LEX2041",208,0)
 D ET("")
"RTN","LEX2041",209,0)
 D ET("    Please obtain a copy of the import global ^LEXM contained in the ")
"RTN","LEX2041",210,0)
 D ET(("    global host file "_LEXIGHF_" before continuing with the "_LEXBUILD))
"RTN","LEX2041",211,0)
 D ET(("    installation."))
"RTN","LEX2041",212,0)
 Q
"RTN","LEX2041",213,0)
CKO ;   Kill and Obtain new global
"RTN","LEX2041",214,0)
 N LEXLREV,LEXREQP,LEXBUILD,LEXIGHF
"RTN","LEX2041",215,0)
 D IMP
"RTN","LEX2041",216,0)
 D ET(""),ET("    Please KILL the existing import global ^LEXM from your system")
"RTN","LEX2041",217,0)
 D ET(("    and obtain a new copy of ^LEXM contained in the global host file"))
"RTN","LEX2041",218,0)
 D ET(("    "_LEXIGHF_" before continuing with the "_LEXBUILD_" installation."))
"RTN","LEX2041",219,0)
 Q
"RTN","LEX2041",220,0)
ET(X) ;   Error Text
"RTN","LEX2041",221,0)
 N LEXI S LEXI=+($G(LEXE(0))),LEXI=LEXI+1,LEXE(LEXI)="    "_$G(X),LEXE(0)=LEXI
"RTN","LEX2041",222,0)
 Q
"RTN","LEX2041",223,0)
ED ;   Error Display
"RTN","LEX2041",224,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  D M(LEXE(LEXI))
"RTN","LEX2041",225,0)
 D M(" ") K LEXE Q
"RTN","LEX2041",226,0)
 ;                   
"RTN","LEX2041",227,0)
 ; Miscellaneous
"RTN","LEX2041",228,0)
 ;
"RTN","LEX2041",229,0)
IMP ;   Import names
"RTN","LEX2041",230,0)
 S LEXLREV=41,LEXREQP="LEX*2.0*50",LEXBUILD="LEX*2.0*41"
"RTN","LEX2041",231,0)
 S LEXIGHF="LEX_2_41.GBL"
"RTN","LEX2041",232,0)
 Q
"RTN","LEX2041",233,0)
NOTDEF(IEN) ;   Check to see if user is defined
"RTN","LEX2041",234,0)
 N DA,DR,DIQ,LEX,DIC
"RTN","LEX2041",235,0)
 S DA=IEN,DR=.01,DIC=200,DIQ="LEX"
"RTN","LEX2041",236,0)
 D EN^DIQ1
"RTN","LEX2041",237,0)
 Q '$D(LEX)
"RTN","LEX2041",238,0)
OK ;   Environment is OK
"RTN","LEX2041",239,0)
 N LEXBUILD,LEXIGHF,LEXREQP,LEXLREV,LEXT
"RTN","LEX2041",240,0)
 D IMP S LEXT="  Environment "_$S($L(LEXBUILD):("for patch/build "_LEXBUILD_" "),1:"")_"is ok"
"RTN","LEX2041",241,0)
 D BM(LEXT),M(" ")
"RTN","LEX2041",242,0)
 Q
"RTN","LEX2041",243,0)
BM(X) ;   Blank Line with Message
"RTN","LEX2041",244,0)
 D BMES^XPDUTL($G(X)) Q
"RTN","LEX2041",245,0)
M(X) ;   Message
"RTN","LEX2041",246,0)
 D MES^XPDUTL($G(X)) Q
"RTN","LEX2041",247,0)
TRIM(X) ;   Trim Spaces
"RTN","LEX2041",248,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEX2041",249,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEX2041",250,0)
 Q X
"RTN","LEX2041",251,0)
EF ;   Exported Files
"RTN","LEX2041",252,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2041",253,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2041",254,0)
 ;;^LEXT(757.2);^LEXT(757.2);Lexicon Subsets/Defaults;757.2
"RTN","LEX2041",255,0)
 ;;^LEXM(0);^LEXM(*;Lexicon Export/Import;No File #
"RTN","LEX2041",256,0)
GD ;   Global Data
"RTN","LEX2041",257,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2041",258,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2041",259,0)
 ;;^LEXT(757.2);^LEXT(757.2);Lexicon Subsets/Defaults;757.2
"RTN","LEX2041",260,0)
 ;;^LEXM(0);^LEXM(*;Lexicon Export/Import;No File #
"RTN","LEX2041P")
0^2^B5226744^n/a
"RTN","LEX2041P",1,0)
LEX2041P ; ISL/FJF - Pre/Post Install ; 09/09/2006
"RTN","LEX2041P",2,0)
 ;;2.0;LEXICON UTILITY;**41**;Sep 23, 1996;Build 34
"RTN","LEX2041P",3,0)
 ;
"RTN","LEX2041P",4,0)
 ; External References
"RTN","LEX2041P",5,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEX2041P",6,0)
 ;   DBIA  2052  $$GET1^DID
"RTN","LEX2041P",7,0)
 ;   DBIA  2055  PRD^DILFD
"RTN","LEX2041P",8,0)
 ;   DBIA 10014  EN^DIU2
"RTN","LEX2041P",9,0)
 ;   DBIA 10141  BMES^XPDUTL
"RTN","LEX2041P",10,0)
 ;   DBIA 10141  MES^XPDUTL
"RTN","LEX2041P",11,0)
 ;                      
"RTN","LEX2041P",12,0)
 Q
"RTN","LEX2041P",13,0)
 ;
"RTN","LEX2041P",14,0)
POST ; LEX*2.0*41 Post-Install
"RTN","LEX2041P",15,0)
 N LEXEDT,LEXMUMPS
"RTN","LEX2041P",16,0)
 S LEXEDT=$G(^LEXM(0,"CREATED"))
"RTN","LEX2041P",17,0)
 ;
"RTN","LEX2041P",18,0)
 ;-----------------------------
"RTN","LEX2041P",19,0)
 ;   Save Changes
"RTN","LEX2041P",20,0)
 D SCHG
"RTN","LEX2041P",21,0)
 ;
"RTN","LEX2041P",22,0)
 ;-----------------------------
"RTN","LEX2041P",23,0)
 ;   Load Data into Files
"RTN","LEX2041P",24,0)
 D LOAD
"RTN","LEX2041P",25,0)
 ;
"RTN","LEX2041P",26,0)
 ;-----------------------------
"RTN","LEX2041P",27,0)
 ;   Data Conversion
"RTN","LEX2041P",28,0)
 D CON
"RTN","LEX2041P",29,0)
 ;
"RTN","LEX2041P",30,0)
 ;-----------------------------
"RTN","LEX2041P",31,0)
 ;   Re-Index Files - N/A for LEX*2.0*41
"RTN","LEX2041P",32,0)
 ;   
"RTN","LEX2041P",33,0)
 ;
"RTN","LEX2041P",34,0)
 ;-----------------------------
"RTN","LEX2041P",35,0)
 ;   Send a Install Message
"RTN","LEX2041P",36,0)
 D MSG
"RTN","LEX2041P",37,0)
 ;
"RTN","LEX2041P",38,0)
 Q
"RTN","LEX2041P",39,0)
 ;-----------------------------
"RTN","LEX2041P",40,0)
 ;
"RTN","LEX2041P",41,0)
LOAD ; Load Data from ^LEXM into LEX Files
"RTN","LEX2041P",42,0)
 N LEXB,LEXBUILD,LEXCD,LEXIGHF,LEXLAST,LEXLREV,LEXSHORT,LEXMSG
"RTN","LEX2041P",43,0)
 D IMP^LEX2041
"RTN","LEX2041P",44,0)
 S U="^",LEXB=$G(^LEXM(0,"BUILD"))
"RTN","LEX2041P",45,0)
 Q:LEXB=""  Q:LEXBUILD=""
"RTN","LEX2041P",46,0)
 S LEXCD=+$$CPD^LEX2041
"RTN","LEX2041P",47,0)
 I LEXCD,LEXB=LEXBUILD D  D KLEXM Q
"RTN","LEX2041P",48,0)
 .S X="Data for patch "_LEXBUILD_" has already been installed"
"RTN","LEX2041P",49,0)
 .W:'$D(XPDNM) !!,X
"RTN","LEX2041P",50,0)
 .D:$D(XPDNM) BMES^XPDUTL(X)
"RTN","LEX2041P",51,0)
 .S X=""
"RTN","LEX2041P",52,0)
 .W:'$D(XPDNM) !
"RTN","LEX2041P",53,0)
 .D:$D(XPDNM) MES^XPDUTL(X)
"RTN","LEX2041P",54,0)
 I 'LEXCD,LEXB=LEXBUILD D
"RTN","LEX2041P",55,0)
 .S LEXSHORT=1,LEXMSG=1
"RTN","LEX2041P",56,0)
 .D TASK^LEXXGI
"RTN","LEX2041P",57,0)
 Q
"RTN","LEX2041P",58,0)
 ;
"RTN","LEX2041P",59,0)
MSG ; Send Installation Message to G.LEXICON
"RTN","LEX2041P",60,0)
 Q:+($G(DUZ))=0!($$NOTDEF^LEX2041($G(DUZ)))
"RTN","LEX2041P",61,0)
 D HOME^%ZIS
"RTN","LEX2041P",62,0)
 N DIFROM,LEXLREV,LEXLAST,LEXBUILD,LEXIGHF,LEXSHORT
"RTN","LEX2041P",63,0)
 S LEXSHORT=1
"RTN","LEX2041P",64,0)
 D IMP^LEX2041 ;,POST^LEXXFI
"RTN","LEX2041P",65,0)
 Q
"RTN","LEX2041P",66,0)
 ;
"RTN","LEX2041P",67,0)
SCHG ; Save Change File Changes
"RTN","LEX2041P",68,0)
 N LEXI,LEXFI,LEXFIL,LEXRT
"RTN","LEX2041P",69,0)
 S LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI=0  D
"RTN","LEX2041P",70,0)
 .S LEXI=0 F  S LEXI=$O(^LEXM(LEXFI,LEXI)) Q:+LEXI=0  D
"RTN","LEX2041P",71,0)
 ..N LEXCF,LEXIEN,LEXMUMPS
"RTN","LEX2041P",72,0)
 ..S LEXMUMPS=$G(^LEXM(LEXFI,LEXI)),LEXRT=$P(LEXMUMPS,"^",2)
"RTN","LEX2041P",73,0)
 ..S:LEXMUMPS["^LEX("!(LEXMUMPS["^LEXT(") LEXFIL=+($P(LEXRT,"(",2))
"RTN","LEX2041P",74,0)
 Q
"RTN","LEX2041P",75,0)
 ;
"RTN","LEX2041P",76,0)
KLEXM ; Subscripted Kill of ^LEXM
"RTN","LEX2041P",77,0)
 N DA S DA=0 F  S DA=$O(^LEXM(DA)) Q:+DA=0  K ^LEXM(DA)
"RTN","LEX2041P",78,0)
 K ^LEXM(0)
"RTN","LEX2041P",79,0)
 Q
"RTN","LEX2041P",80,0)
PRE ; LEX*2.0*41 Pre-Install   (N/A for patch 41)
"RTN","LEX2041P",81,0)
 Q
"RTN","LEX2041P",82,0)
 ;
"RTN","LEX2041P",83,0)
CON ; Conversion of data       (N/A for patch 41)
"RTN","LEX2041P",84,0)
 Q
"RTN","LEXAS6")
0^4^B6676230^B6565185
"RTN","LEXAS6",1,0)
LEXAS6 ; ISL/FJF Look-up Check Input (TRIM,EXP,TP,SCH); 12/07/2006
"RTN","LEXAS6",2,0)
 ;;2.0;LEXICON UTILITY;**41**;Sep 23, 1996;Build 34
"RTN","LEXAS6",3,0)
 ;
"RTN","LEXAS6",4,0)
TRIM(LEXX) ; Trim string
"RTN","LEXAS6",5,0)
 ;
"RTN","LEXAS6",6,0)
 ; LEXOK   Flag - string is OK
"RTN","LEXAS6",7,0)
 ; LEXF    Frequency
"RTN","LEXAS6",8,0)
 ; LEXI    Incremental counter
"RTN","LEXAS6",9,0)
 ; LEXT    Temporary string
"RTN","LEXAS6",10,0)
 ; LEXX    Return string
"RTN","LEXAS6",11,0)
 ;
"RTN","LEXAS6",12,0)
 N LEXI,LEXOK,LEXT,LEXF S LEXF=1,LEXOK=0,LEXT=LEXX
"RTN","LEXAS6",13,0)
 F  Q:$E(LEXX,1)'=" "  S LEXX=$E(LEXX,2,$L(LEXX))
"RTN","LEXAS6",14,0)
 F LEXI=$L(LEXX):-1:1 Q:LEXOK  D  Q:LEXOK
"RTN","LEXAS6",15,0)
 . S LEXT=$E(LEXT,1,($L(LEXT)-1))
"RTN","LEXAS6",16,0)
 . I $L(LEXT)<3 S LEXOK=1 Q
"RTN","LEXAS6",17,0)
 . I $D(^LEX(757.01,"ASL",LEXT)) S LEXF=$O(^LEX(757.01,"ASL",LEXT,0)) I +(LEXF)>1 S LEXOK=1
"RTN","LEXAS6",18,0)
 S LEXX=LEXT
"RTN","LEXAS6",19,0)
 Q LEXX
"RTN","LEXAS6",20,0)
 ;
"RTN","LEXAS6",21,0)
EXP3(LEXX) ; Expand string up to 3 characters
"RTN","LEXAS6",22,0)
 N LEXT S LEXT=LEXX
"RTN","LEXAS6",23,0)
 S LEXT=$$EXP(LEXT)
"RTN","LEXAS6",24,0)
 I $L(LEXT)-$L(LEXX)'>3 S LEXX=LEXT
"RTN","LEXAS6",25,0)
 Q LEXX
"RTN","LEXAS6",26,0)
EXP(LEXX) ; Expand string
"RTN","LEXAS6",27,0)
 ;
"RTN","LEXAS6",28,0)
 ; LEXF    String found
"RTN","LEXAS6",29,0)
 ; LEXC    Control string
"RTN","LEXAS6",30,0)
 ; LEXCK   Check for string
"RTN","LEXAS6",31,0)
 ; LEXI    Character position
"RTN","LEXAS6",32,0)
 ; LEXLTR  Letter at character position
"RTN","LEXAS6",33,0)
 ; LEXNT   Altered tolken
"RTN","LEXAS6",34,0)
 ; LEXOK   Flag - 1 quit 0 keep checking
"RTN","LEXAS6",35,0)
 ; LEXOKL  Flag - 1 add letter 0 do not add letter
"RTN","LEXAS6",36,0)
 ; LEXX    Return expanded string
"RTN","LEXAS6",37,0)
 ;
"RTN","LEXAS6",38,0)
 Q:$D(^LEX(757.01,"AWRD",LEXX)) LEXX
"RTN","LEXAS6",39,0)
 N LEXF,LEXC,LEXCK,LEXI,LEXLTR,LEXNT,LEXOK,LEXOKL
"RTN","LEXAS6",40,0)
 S (LEXF,LEXC)=LEXX,LEXOK=0
"RTN","LEXAS6",41,0)
 S LEXNT=$O(^LEX(757.01,"ASL",$$SCH(LEXF)))
"RTN","LEXAS6",42,0)
 F LEXI=1:1:63 Q:LEXOK  D  Q:LEXOK!(LEXNT'[LEXC)
"RTN","LEXAS6",43,0)
 . Q:LEXI'>$L(LEXC)
"RTN","LEXAS6",44,0)
 . S LEXNT=$O(^LEX(757.01,"ASL",LEXNT)) Q:LEXNT=LEXF
"RTN","LEXAS6",45,0)
 . S LEXLTR=$E(LEXNT,LEXI) Q:LEXLTR=""
"RTN","LEXAS6",46,0)
 . S LEXOKL=1,LEXCK=$$SCH(LEXNT)
"RTN","LEXAS6",47,0)
 . F  S LEXCK=$O(^LEX(757.01,"ASL",LEXCK)) Q:LEXCK=""!('LEXOKL)  D
"RTN","LEXAS6",48,0)
 . . I $E(LEXCK,LEXI)'="",$E(LEXCK,LEXI)'=LEXLTR S LEXOKL=0 Q
"RTN","LEXAS6",49,0)
 . . I LEXCK'[LEXC,$E(LEXCK,LEXI)'=LEXLTR S LEXCK="~~~~~~~~~~~" Q
"RTN","LEXAS6",50,0)
 . S:LEXOKL LEXF=LEXF_LEXLTR S:'LEXOKL LEXOK=1
"RTN","LEXAS6",51,0)
 . S:$D(^LEX(757.01,"AWRD",LEXF)) LEXOK=1
"RTN","LEXAS6",52,0)
 S LEXX=LEXF Q LEXX
"RTN","LEXAS6",53,0)
 ;
"RTN","LEXAS6",54,0)
TP(LEXX) ; Transposed letters
"RTN","LEXAS6",55,0)
 ;
"RTN","LEXAS6",56,0)
 ; LEXF    Tolken found
"RTN","LEXAS6",57,0)
 ; LEXO    Original tolken
"RTN","LEXAS6",58,0)
 ; LEXN    Concatenated tolken
"RTN","LEXAS6",59,0)
 ; LEXT    Temporary tolken
"RTN","LEXAS6",60,0)
 ; LEXI    Character position
"RTN","LEXAS6",61,0)
 ; LEXX    Return string
"RTN","LEXAS6",62,0)
 ;
"RTN","LEXAS6",63,0)
 N LEXO,LEXN,LEXI,LEXF,LEXT S (LEXF,LEXN)="",LEXO=LEXX
"RTN","LEXAS6",64,0)
 F LEXI=2:1:$L(LEXX) Q:LEXF'=""  D  Q:LEXF'=""
"RTN","LEXAS6",65,0)
 . S LEXN=$E(LEXX,1,(LEXI-1))_$E(LEXX,(LEXI+1))_$E(LEXX,LEXI)_$E(LEXX,(LEXI+2),$L(LEXX))
"RTN","LEXAS6",66,0)
 . I $D(^LEX(757.01,"ASL",LEXN)) S LEXF=LEXN
"RTN","LEXAS6",67,0)
 . S LEXT=$$ONE^LEXAS2(LEXN)
"RTN","LEXAS6",68,0)
 . I $L(LEXT)=$L(LEXN),$D(^LEX(757.01,"ASL",LEXT)) S LEXF=LEXT
"RTN","LEXAS6",69,0)
 S:LEXF'="" LEXX=LEXF
"RTN","LEXAS6",70,0)
 S:LEXF="" LEXX=LEXO
"RTN","LEXAS6",71,0)
 Q LEXX
"RTN","LEXAS6",72,0)
SCH(LEXX) ; Create $O variable
"RTN","LEXAS6",73,0)
 ;
"RTN","LEXAS6",74,0)
 ; LEXX    Return $O variable
"RTN","LEXAS6",75,0)
 ;
"RTN","LEXAS6",76,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~"
"RTN","LEXAS6",77,0)
 Q LEXX
"RTN","LEXTRAN")
0^3^B59640556^n/a
"RTN","LEXTRAN",1,0)
LEXTRAN ; ISL/FJF - Lexicon code and text wrapper API's ; 01/31/2006
"RTN","LEXTRAN",2,0)
 ;;2.0;LEXICON UTILITY;**41**;Sep 23, 1996;Build 34
"RTN","LEXTRAN",3,0)
 ; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","LEXTRAN",4,0)
 ;
"RTN","LEXTRAN",5,0)
CODE(LEXCODE,LEXSRC,LEXVDT,LEXRAY) ;
"RTN","LEXTRAN",6,0)
 ; Lexicon wrapper application to obtain concept data for a given code
"RTN","LEXTRAN",7,0)
 ; and source
"RTN","LEXTRAN",8,0)
 ; 
"RTN","LEXTRAN",9,0)
 ; Input
"RTN","LEXTRAN",10,0)
 ; 
"RTN","LEXTRAN",11,0)
 ;   LEXCODE  code - mandatory
"RTN","LEXTRAN",12,0)
 ;   LEXSRC   code system source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN",13,0)
 ;            - mandatory
"RTN","LEXTRAN",14,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN",15,0)
 ;   LEXRAY   output array (defaults to 'LEX') optionaL
"RTN","LEXTRAN",16,0)
 ;   
"RTN","LEXTRAN",17,0)
 ; Output
"RTN","LEXTRAN",18,0)
 ; 
"RTN","LEXTRAN",19,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN",20,0)
 ;     "1^LEXCODE"
"RTN","LEXTRAN",21,0)
 ;     LEX     -   an array containing information about the code
"RTN","LEXTRAN",22,0)
 ;     LEX(0)  -   a five piece string:
"RTN","LEXTRAN",23,0)
 ;                 1. code
"RTN","LEXTRAN",24,0)
 ;                 2. hierarchy
"RTN","LEXTRAN",25,0)
 ;                 3. version
"RTN","LEXTRAN",26,0)
 ;                 4. legacy code
"RTN","LEXTRAN",27,0)
 ;                 5. code status
"RTN","LEXTRAN",28,0)
 ;     LEX("F")    fully specified name
"RTN","LEXTRAN",29,0)
 ;     LEX("P")    preferred term
"RTN","LEXTRAN",30,0)
 ;     LEX("S",n)  synonyms (n is the nth synonym)
"RTN","LEXTRAN",31,0)
 ;     
"RTN","LEXTRAN",32,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN",33,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN",34,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN",35,0)
 ;           LEXCODE is the code
"RTN","LEXTRAN",36,0)
 ;                 
"RTN","LEXTRAN",37,0)
 ;   if call finds an inactive code for the source
"RTN","LEXTRAN",38,0)
 ;     "-4^"_LEXSCNM_" code "_LEXCODE_" not active for "_LEXVDT
"RTN","LEXTRAN",39,0)
 ;     LEX    - an array containing information about the code
"RTN","LEXTRAN",40,0)
 ;     LEX(0) -  a five piece string:
"RTN","LEXTRAN",41,0)
 ;               1. code
"RTN","LEXTRAN",42,0)
 ;               2. hierarchy
"RTN","LEXTRAN",43,0)
 ;               3. version
"RTN","LEXTRAN",44,0)
 ;               4. legacy code
"RTN","LEXTRAN",45,0)
 ;               5. code status
"RTN","LEXTRAN",46,0)
 ;     
"RTN","LEXTRAN",47,0)
 ;   otherwise
"RTN","LEXTRAN",48,0)
 ;     "-1^error text" 
"RTN","LEXTRAN",49,0)
 ; 
"RTN","LEXTRAN",50,0)
 ;   example of LEX array:
"RTN","LEXTRAN",51,0)
 ;     LEX(0)="67922002^Substance^20050701^T-C2500^1"
"RTN","LEXTRAN",52,0)
 ;     LEX("F")="Serum (Substance)"
"RTN","LEXTRAN",53,0)
 ;     LEX("P")="Serum"
"RTN","LEXTRAN",54,0)
 ;                        
"RTN","LEXTRAN",55,0)
 ; check passed parameter arguments
"RTN","LEXTRAN",56,0)
 ;
"RTN","LEXTRAN",57,0)
 I $G(LEXCODE)="" Q "-1^no code specified"
"RTN","LEXTRAN",58,0)
 I $G(LEXSRC)="" Q "-1^no source specified"
"RTN","LEXTRAN",59,0)
 I '$D(^LEX(757.03,"B",LEXSRC)) Q "-1^source not recognized"
"RTN","LEXTRAN",60,0)
 I $D(^TMP("LEXSCH",$J,"VDT",0)) S LEXVDT=^(0)
"RTN","LEXTRAN",61,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",62,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",63,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",64,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",65,0)
 ;
"RTN","LEXTRAN",66,0)
 ; obtain source mnemonic and ASAB
"RTN","LEXTRAN",67,0)
 ;
"RTN","LEXTRAN",68,0)
 N LEXSCNM,LEXSIEN,LEXASAB,LEXCIEN,VALCODE,LEXSTAT,LEXPIEN,T
"RTN","LEXTRAN",69,0)
 ;
"RTN","LEXTRAN",70,0)
 S LEXSIEN=$O(^LEX(757.03,"B",LEXSRC,""))
"RTN","LEXTRAN",71,0)
 S T=^LEX(757.03,LEXSIEN,0)
"RTN","LEXTRAN",72,0)
 S LEXSCNM=$P(T,U,2)
"RTN","LEXTRAN",73,0)
 S LEXASAB=$E($P(T,U),1,3)
"RTN","LEXTRAN",74,0)
 ;
"RTN","LEXTRAN",75,0)
 ; check for code existence for source
"RTN","LEXTRAN",76,0)
 ; 
"RTN","LEXTRAN",77,0)
 S LEXCIEN="",VALCODE=0
"RTN","LEXTRAN",78,0)
 F  Q:VALCODE=1  D  Q:LEXCIEN=""
"RTN","LEXTRAN",79,0)
 .S LEXCIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",LEXCIEN)) Q:LEXCIEN=""  D
"RTN","LEXTRAN",80,0)
 .I $D(^LEX(757.02,"ASRC",LEXASAB,LEXCIEN)) S VALCODE=1 Q
"RTN","LEXTRAN",81,0)
 I 'VALCODE Q "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN",82,0)
 ;
"RTN","LEXTRAN",83,0)
 ; now we know that the code belongs to the source and that it is known
"RTN","LEXTRAN",84,0)
 ; in our files
"RTN","LEXTRAN",85,0)
 ; check that code is valid for date
"RTN","LEXTRAN",86,0)
 ;
"RTN","LEXTRAN",87,0)
 K LEXSTAT,LEX
"RTN","LEXTRAN",88,0)
 K ^TMP("LEXSCH",$J)
"RTN","LEXTRAN",89,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT)
"RTN","LEXTRAN",90,0)
 I +LEXSTAT=0 D  Q "-4^"_LEXSCNM_" code "_LEXCODE_" not active for "_LEXVDT
"RTN","LEXTRAN",91,0)
 .S LEXPIEN=$P(LEXSTAT(1),U)
"RTN","LEXTRAN",92,0)
 .D INFO^LEXA(LEXPIEN)
"RTN","LEXTRAN",93,0)
 .D GETINFO
"RTN","LEXTRAN",94,0)
 .I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",95,0)
 ;
"RTN","LEXTRAN",96,0)
 ; if we've got this far we have a good code that is active
"RTN","LEXTRAN",97,0)
 S LEXPIEN=$P(LEXSTAT(1),U)
"RTN","LEXTRAN",98,0)
 ;Q "1^"_LEXCODE
"RTN","LEXTRAN",99,0)
 D INFO^LEXA(LEXPIEN)
"RTN","LEXTRAN",100,0)
 D GETINFO
"RTN","LEXTRAN",101,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",102,0)
 ; 
"RTN","LEXTRAN",103,0)
 Q "1^"_LEXCODE
"RTN","LEXTRAN",104,0)
 ;
"RTN","LEXTRAN",105,0)
GETINFO ; obtain information for code and populate LEX array
"RTN","LEXTRAN",106,0)
 ;
"RTN","LEXTRAN",107,0)
 N LEXFSN,LEXHIER,LEXLGY,LEXVER,N,LEXSEP,I
"RTN","LEXTRAN",108,0)
 I $D(LEX("SEL","EXP","C","FUL")) D
"RTN","LEXTRAN",109,0)
 .S LEXFSN=LEX("SEL","EXP",$O(LEX("SEL","EXP","C","FUL","")))
"RTN","LEXTRAN",110,0)
 .S LEXHIER=$P($P(LEXFSN,"(",$L(LEXFSN,"(")),")")
"RTN","LEXTRAN",111,0)
 ; legacy code
"RTN","LEXTRAN",112,0)
 S LEXLGY=$$GET1^DIQ(757.02,LEXCIEN_",",13)
"RTN","LEXTRAN",113,0)
 ; version
"RTN","LEXTRAN",114,0)
 S LEXVER=$$VERSION(LEXSRC,LEXCODE,LEXVDT)
"RTN","LEXTRAN",115,0)
 ; create return array
"RTN","LEXTRAN",116,0)
 ;S LEXSEP=" ["_LEXCODE_"]"
"RTN","LEXTRAN",117,0)
 S LEX(0)=LEXCODE_U_$G(LEXHIER)_U_$S(+LEXVER=-1:"",1:$P(LEXVER,U,3))
"RTN","LEXTRAN",118,0)
 S LEX(0)=LEX(0)_U_LEXLGY_U_+LEXSTAT
"RTN","LEXTRAN",119,0)
 S LEX("P")=$P(LEX("SEL","EXP",$O(LEX("SEL","EXP","C","MAJ",""))),U,2)
"RTN","LEXTRAN",120,0)
 I $D(LEXFSN) S LEX("F")=$P(LEXFSN,"^",2)
"RTN","LEXTRAN",121,0)
 S N=""
"RTN","LEXTRAN",122,0)
 F I=1:1 S N=$O(LEX("SEL","EXP","C","SYN",N)) Q:N=""  D
"RTN","LEXTRAN",123,0)
 .S LEX("S",I)=$P(LEX("SEL","EXP",N),U,2)
"RTN","LEXTRAN",124,0)
 K LEX("SEL")
"RTN","LEXTRAN",125,0)
 Q
"RTN","LEXTRAN",126,0)
 ;
"RTN","LEXTRAN",127,0)
TEXT(LEXTEXT,LEXVDT,LEXSUB,LEXSRC,LEXRAY) ;
"RTN","LEXTRAN",128,0)
 ;
"RTN","LEXTRAN",129,0)
 ; Lexicon wrapper application to obtain concept data for a given text
"RTN","LEXTRAN",130,0)
 ; and source
"RTN","LEXTRAN",131,0)
 ; 
"RTN","LEXTRAN",132,0)
 ; Input
"RTN","LEXTRAN",133,0)
 ;   
"RTN","LEXTRAN",134,0)
 ;   LEXTEXT  the search string - mandatory
"RTN","LEXTRAN",135,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN",136,0)
 ;   LEXSUB   subset or 'hierarchy' - optional
"RTN","LEXTRAN",137,0)
 ;   LEXSRC   code system source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN",138,0)
 ;            - optional
"RTN","LEXTRAN",139,0)
 ;   LEXRAY   output array  (defaults to 'LEX')- optional
"RTN","LEXTRAN",140,0)
 ;   
"RTN","LEXTRAN",141,0)
 ; Output
"RTN","LEXTRAN",142,0)
 ;    
"RTN","LEXTRAN",143,0)
 ;   LEX or passed array name    - an array containing information
"RTN","LEXTRAN",144,0)
 ;                                 about the code
"RTN","LEXTRAN",145,0)
 ;     LEX(0) -  a five piece string:
"RTN","LEXTRAN",146,0)
 ;               1. code
"RTN","LEXTRAN",147,0)
 ;               2. hierarchy
"RTN","LEXTRAN",148,0)
 ;               3. version
"RTN","LEXTRAN",149,0)
 ;               4. legacy code
"RTN","LEXTRAN",150,0)
 ;               5. code status
"RTN","LEXTRAN",151,0)
 ;     
"RTN","LEXTRAN",152,0)
 ;   otherwise
"RTN","LEXTRAN",153,0)
 ;     "-1^error text" 
"RTN","LEXTRAN",154,0)
 ; 
"RTN","LEXTRAN",155,0)
 ;   example of LEX array:
"RTN","LEXTRAN",156,0)
 ;     LEX(0)="67922002^Substance^20050701^T-C2500^1"
"RTN","LEXTRAN",157,0)
 ;     LEX("F")="Serum (Substance)"
"RTN","LEXTRAN",158,0)
 ;     LEX("P")="Serum"
"RTN","LEXTRAN",159,0)
 ;     
"RTN","LEXTRAN",160,0)
 I $G(LEXTEXT)="" Q "-1^no search string specified"
"RTN","LEXTRAN",161,0)
 S LEXSRC=$G(LEXSRC)
"RTN","LEXTRAN",162,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",163,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",164,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",165,0)
 S LEXSRC=$G(LEXSRC)
"RTN","LEXTRAN",166,0)
 S LEXSUB=$G(LEXSUB) I LEXSUB="" S LEXSUB=LEXSRC
"RTN","LEXTRAN",167,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",168,0)
 ;
"RTN","LEXTRAN",169,0)
 N X,LEXPIEN,LEXCODE,LEXSTAT,LEXCIEN,Y
"RTN","LEXTRAN",170,0)
 K ^TMP("LEXSCH",$J),LEX
"RTN","LEXTRAN",171,0)
 S X=LEXTEXT
"RTN","LEXTRAN",172,0)
 D CONFIG^LEXSET(LEXSRC,LEXSUB,LEXVDT)
"RTN","LEXTRAN",173,0)
 D EN^LEXA1
"RTN","LEXTRAN",174,0)
 I +Y=-1 Q "-1^search could not find term"
"RTN","LEXTRAN",175,0)
 ;
"RTN","LEXTRAN",176,0)
 S LEXPIEN=+Y
"RTN","LEXTRAN",177,0)
 D INFO^LEXA(LEXPIEN)
"RTN","LEXTRAN",178,0)
 S LEXCODE=$O(LEX("SEL","SRC","C",""))
"RTN","LEXTRAN",179,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT)
"RTN","LEXTRAN",180,0)
 S LEXCIEN=$P(LEXSTAT,U,2)
"RTN","LEXTRAN",181,0)
 S LEXSRC=$P(LEXSTAT(2),U,2)
"RTN","LEXTRAN",182,0)
 D GETINFO
"RTN","LEXTRAN",183,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",184,0)
 Q "1^"_LEXPIEN
"RTN","LEXTRAN",185,0)
 ;
"RTN","LEXTRAN",186,0)
VERSION(LEXSRC,LEXCODE,LEXVDT) ;
"RTN","LEXTRAN",187,0)
 ; infer version of code
"RTN","LEXTRAN",188,0)
 ; Input
"RTN","LEXTRAN",189,0)
 ;   
"RTN","LEXTRAN",190,0)
 ;   LEXSRC   code system source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN",191,0)
 ;   LEXCODE  code - mandatory
"RTN","LEXTRAN",192,0)
 ;   LEXVDT   effective date (defaults to current date) - optional
"RTN","LEXTRAN",193,0)
 ;            - optional
"RTN","LEXTRAN",194,0)
 ;   
"RTN","LEXTRAN",195,0)
 ; Output
"RTN","LEXTRAN",196,0)
 ; 
"RTN","LEXTRAN",197,0)
 ;   1^Version
"RTN","LEXTRAN",198,0)
 ;     or
"RTN","LEXTRAN",199,0)
 ;   -1^error message
"RTN","LEXTRAN",200,0)
 ;      
"RTN","LEXTRAN",201,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",202,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",203,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",204,0)
 N SIEN,VIEN,VDAT,LEXSTAT
"RTN","LEXTRAN",205,0)
 S SIEN=$O(^LEX(757.03,"B",LEXSRC,""))
"RTN","LEXTRAN",206,0)
 I '$D(^LEX(757.03,SIEN,1)) Q "-1^No source version data available"
"RTN","LEXTRAN",207,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT)
"RTN","LEXTRAN",208,0)
 I +LEXSTAT=0 Q "-1^Code not active for date specified"
"RTN","LEXTRAN",209,0)
 S VDAT=$O(^LEX(757.03,SIEN,1,"B",LEXVDT+1),-1)
"RTN","LEXTRAN",210,0)
 S VIEN=$O(^LEX(757.03,SIEN,1,"B",VDAT,""))
"RTN","LEXTRAN",211,0)
 Q "1^"_^LEX(757.03,SIEN,1,VIEN,0)
"RTN","LEXTRAN",212,0)
 ;
"RTN","LEXTRAN",213,0)
 ;
"RTN","LEXTRAN",214,0)
TXT4CS(LEXTEXT,LEXSRC,LEXRAY,LEXSUB) ; Is text valid for an SCT code
"RTN","LEXTRAN",215,0)
 ;
"RTN","LEXTRAN",216,0)
 ; Input
"RTN","LEXTRAN",217,0)
 ; 
"RTN","LEXTRAN",218,0)
 ;   LEXTEXT is term being checked
"RTN","LEXTRAN",219,0)
 ;   LEXSRC is code system mnemonic or IEN
"RTN","LEXTRAN",220,0)
 ;   LEXRAY   output array (defaults to 'LEX') optional
"RTN","LEXTRAN",221,0)
 ;   LEXSUB   subset or 'hierarchy' - optional
"RTN","LEXTRAN",222,0)
 ;   
"RTN","LEXTRAN",223,0)
 ; Output
"RTN","LEXTRAN",224,0)
 ; 
"RTN","LEXTRAN",225,0)
 ;   1^no of finds
"RTN","LEXTRAN",226,0)
 ;     plus
"RTN","LEXTRAN",227,0)
 ;     LEX or passed array name    - an array containing discovered
"RTN","LEXTRAN",228,0)
 ;                                   concept IDs and expression type
"RTN","LEXTRAN",229,0)
 ;                                   for finds                              
"RTN","LEXTRAN",230,0)
 ;     e.g. LEX(113912006)="MAJOR CONCEPT"
"RTN","LEXTRAN",231,0)
 ;     
"RTN","LEXTRAN",232,0)
 ;      or
"RTN","LEXTRAN",233,0)
 ;      
"RTN","LEXTRAN",234,0)
 ;   -1^error message
"RTN","LEXTRAN",235,0)
 ;   
"RTN","LEXTRAN",236,0)
 N EXP,EXIEN,MCIEN,FOUND,CIEN,CODE,EXPTYP,FINDS,LAR,HIER,HIERNAM,LEXW
"RTN","LEXTRAN",237,0)
 I $G(LEXTEXT)="" Q "-1^text not specified"
"RTN","LEXTRAN",238,0)
 I $G(LEXSRC)="" Q "-1^code system not specified"
"RTN","LEXTRAN",239,0)
 I $$CSYSIEN(LEXSRC)+$$CSYSMNEM(LEXSRC)=-2 Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",240,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",241,0)
 S LEXSUB=$G(LEXSUB)
"RTN","LEXTRAN",242,0)
 I LEXSUB'="",'$D(^LEXT(757.2,"AA",LEXSUB)) Q "-1^hierarchy unknown in Lexicon"
"RTN","LEXTRAN",243,0)
 S:LEXSRC?.N LEXSRC=$P($$CSYSMNEM(LEXSRC),"^",2)
"RTN","LEXTRAN",244,0)
 ; text IEN's in 757.01
"RTN","LEXTRAN",245,0)
 I '$D(^LEX(757.01,"B",$E($$UP^XLFSTR(LEXTEXT),1,63))) Q "-1^expression unknown in Lexicon"
"RTN","LEXTRAN",246,0)
 ; build an array of expression IENs for text
"RTN","LEXTRAN",247,0)
 S EXIEN=""
"RTN","LEXTRAN",248,0)
 F  S EXIEN=$O(^LEX(757.01,"B",$$UP^XLFSTR(LEXTEXT),EXIEN)) Q:EXIEN=""  D
"RTN","LEXTRAN",249,0)
 .S EXP(EXIEN)=""
"RTN","LEXTRAN",250,0)
 ; scan array to find code for expression (LEXTEXT) for code system (LEXSRC)
"RTN","LEXTRAN",251,0)
 S EXIEN=""
"RTN","LEXTRAN",252,0)
 K LEXW
"RTN","LEXTRAN",253,0)
 S (FOUND,FINDS)=0
"RTN","LEXTRAN",254,0)
 F  S EXIEN=$O(EXP(EXIEN)) Q:EXIEN=""  D
"RTN","LEXTRAN",255,0)
 .S MCIEN=$P(^LEX(757.01,EXIEN,1),U)
"RTN","LEXTRAN",256,0)
 .S EXPTYP=$P(^LEX(757.011,$P(^LEX(757.01,EXIEN,1),U,2),0),U)
"RTN","LEXTRAN",257,0)
 .S CIEN=""
"RTN","LEXTRAN",258,0)
 .F  S CIEN=$O(^LEX(757.02,"AMC",MCIEN,CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN",259,0)
 ..I $P($$CSYSMNEM($P(^LEX(757.02,CIEN,0),U,3)),U,2)=LEXSRC D
"RTN","LEXTRAN",260,0)
 ...S CODE=$P(^LEX(757.02,CIEN,0),U,2)
"RTN","LEXTRAN",261,0)
 ...S (HIER,HIERNAM)=""
"RTN","LEXTRAN",262,0)
 ...I LEXSUB'="" D
"RTN","LEXTRAN",263,0)
 ....K LAR
"RTN","LEXTRAN",264,0)
 ....S LAR=$$CODE(CODE,"SCT",,"LAR")
"RTN","LEXTRAN",265,0)
 ....S HIER=$P(LAR(0),U,2)
"RTN","LEXTRAN",266,0)
 ....S HIERNAM=$P(^LEXT(757.2,$O(^LEXT(757.2,"AA",LEXSUB,"")),0),U)
"RTN","LEXTRAN",267,0)
 ...I LEXSUB'="",HIER'=HIERNAM Q
"RTN","LEXTRAN",268,0)
 ...S FOUND=1
"RTN","LEXTRAN",269,0)
 ...S FINDS=FINDS+1
"RTN","LEXTRAN",270,0)
 ...S LEXW(CODE)=EXPTYP
"RTN","LEXTRAN",271,0)
 M LEX=LEXW
"RTN","LEXTRAN",272,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",273,0)
 Q FOUND_"^"_FINDS
"RTN","LEXTRAN",274,0)
 ;
"RTN","LEXTRAN",275,0)
CSYSIEN(MNEM) ; return code system IEN for mnemonic
"RTN","LEXTRAN",276,0)
 I '$D(^LEX(757.03,"B",MNEM)) Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",277,0)
 Q "1^"_$O(^LEX(757.03,"B",MNEM,""))
"RTN","LEXTRAN",278,0)
 ;
"RTN","LEXTRAN",279,0)
CSYSMNEM(SIEN) ; return code system mnemonic for IEN
"RTN","LEXTRAN",280,0)
 I '$D(^LEX(757.03,SIEN)) Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",281,0)
 Q "1^"_$P(^LEX(757.03,SIEN,0),"^")
"RTN","LEXTRAN",282,0)
 ;
"RTN","LEXTRAN",283,0)
INTDAT(X) ; convert date from external format to VA internal format
"RTN","LEXTRAN",284,0)
 N Y
"RTN","LEXTRAN",285,0)
 D ^%DT
"RTN","LEXTRAN",286,0)
 Q Y
"RTN","LEXXFI")
0^5^B52571781^B48947190
"RTN","LEXXFI",1,0)
LEXXFI ; ISL/KER - File Info                     ; 04/22/2008
"RTN","LEXXFI",2,0)
 ;;2.0;LEXICON UTILITY;**32,46,49,41**;Sep 23, 1996;Build 34
"RTN","LEXXFI",3,0)
 Q
"RTN","LEXXFI",4,0)
 ;
"RTN","LEXXFI",5,0)
 ; Global Variables
"RTN","LEXXFI",6,0)
 ;   ^LEXM(0
"RTN","LEXXFI",7,0)
 ;   ^TMP("LEX*",$J    SACC 2.3.2.5.1
"RTN","LEXXFI",8,0)
 ;
"RTN","LEXXFI",9,0)
 ; External References
"RTN","LEXXFI",10,0)
 ;   DBIA 10086  HOME^%ZIS
"RTN","LEXXFI",11,0)
 ;   DBIA 10089  ^%ZISC
"RTN","LEXXFI",12,0)
 ;   DBIA 10063  ^%ZTLOAD
"RTN","LEXXFI",13,0)
 ;   DBIA  2056  $$GET1^DIQ (file #200)
"RTN","LEXXFI",14,0)
 ;   DBIA 10103  $$DT^XLFDT
"RTN","LEXXFI",15,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","LEXXFI",16,0)
 ;   DBIA 10103  $$NOW^XLFDT
"RTN","LEXXFI",17,0)
 ;   DBIA 10070  ^XMD
"RTN","LEXXFI",18,0)
 ;   DBIA  4409  $$DTIME^XUP
"RTN","LEXXFI",19,0)
 ;
"RTN","LEXXFI",20,0)
 ; Newed by Post-Install LEX20nnP
"RTN","LEXXFI",21,0)
 ;   LEXBUILD  Build
"RTN","LEXXFI",22,0)
 ;   LEXCRE    Import Global Creation Date
"RTN","LEXXFI",23,0)
 ;   LEXIGHF   Import Global Host File
"RTN","LEXXFI",24,0)
 ;   LEXLREV   Revision
"RTN","LEXXFI",25,0)
 ;   LEXREQP   Required Patches
"RTN","LEXXFI",26,0)
 ;   LEXSHORT  Flag for Summary Install Message
"RTN","LEXXFI",27,0)
 ;
"RTN","LEXXFI",28,0)
 ; XPDA        Newed by KIDS during Install
"RTN","LEXXFI",29,0)
 ; LEXCOUNT    Flag Checked $D() and not used
"RTN","LEXXFI",30,0)
 ;
"RTN","LEXXFI",31,0)
 ; Checksums/Counts
"RTN","LEXXFI",32,0)
EN ;   For One or More File(s)
"RTN","LEXXFI",33,0)
 N LEXENV,LEXMET,LEXID
"RTN","LEXXFI",34,0)
 S LEXENV=$$ENV
"RTN","LEXXFI",35,0)
 Q:+LEXENV'>0
"RTN","LEXXFI",36,0)
 S LEXMET=$$MT^LEXXFI7
"RTN","LEXXFI",37,0)
 I '$L(LEXMET) W !!," Checksum Files (One or All) not Selected" Q
"RTN","LEXXFI",38,0)
 I $L($T(@(LEXMET_"^LEXXFI")))>0 W ! D @LEXMET
"RTN","LEXXFI",39,0)
 Q
"RTN","LEXXFI",40,0)
ONE ;   For ONE file
"RTN","LEXXFI",41,0)
 K ^TMP("LEXCS",$J),^TMP("LEXCNT",$J),^TMP("LEXI",$J),^TMP("LEXMSG",$J)
"RTN","LEXXFI",42,0)
 N LEXBEG,LEXELP,LEXEND,LEXFC,LEXFI,LEXLDR,LEXMOD,LEXMUL,LEXNM,LEXTCS
"RTN","LEXXFI",43,0)
 N LEXTND,LEXTT,LEXTXT
"RTN","LEXXFI",44,0)
 S LEXBEG=$$TIC^LEXXFI8,LEXMUL=0,LEXMOD=0
"RTN","LEXXFI",45,0)
 S LEXFI=$$FI^LEXXFI7 I +LEXFI'>0 W !!," Checksum File not Selected" Q
"RTN","LEXXFI",46,0)
 S LEXLDR=$$LDR^LEXXFI8(LEXFI),LEXMOD=LEXMOD+($$MOD^LEXXFI8(LEXFI))
"RTN","LEXXFI",47,0)
 S LEXNM=$$FN^LEXXFI8(LEXFI),LEXTT=" "
"RTN","LEXXFI",48,0)
 W !
"RTN","LEXXFI",49,0)
 D ONE^LEXXFI2(LEXFI),ONE^LEXXFI3(LEXFI),ONE^LEXXFI5(LEXFI)
"RTN","LEXXFI",50,0)
 S LEXEND=$$TIC^LEXXFI8,LEXELP=$$ELAP^LEXXFI8(LEXBEG,LEXEND)
"RTN","LEXXFI",51,0)
 S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXFI",52,0)
 I +LEXBEG>0,LEXEND>0,$L(LEXELP) D TIM
"RTN","LEXXFI",53,0)
 K ^TMP("LEXCS",$J),^TMP("LEXCNT",$J),^TMP("LEXI",$J),^TMP("LEXMSG",$J)
"RTN","LEXXFI",54,0)
 Q
"RTN","LEXXFI",55,0)
ALL ;   For ALL files
"RTN","LEXXFI",56,0)
 K ^TMP("LEXCS",$J),^TMP("LEXCNT",$J),^TMP("LEXI",$J),^TMP("LEXMSG",$J)
"RTN","LEXXFI",57,0)
 K ^TMP("LEXINS",$J),^TMP("LEXKID",$J) S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXFI",58,0)
 N LEXBEG,LEXELP,LEXEND,LEXFC,LEXMOD,LEXMUL,LEXTCS,LEXTND,LEXID
"RTN","LEXXFI",59,0)
 S LEXID="LEXKID",LEXBEG=$$TIC^LEXXFI8,LEXMUL=1,(LEXTND,LEXTCS,LEXMOD,LEXFC)=0
"RTN","LEXXFI",60,0)
 D:'$D(LEXPOST) HDR
"RTN","LEXXFI",61,0)
 I '$D(LEXSHORT) D ALL^LEXXFI5,ALL^LEXXFI2,ALL^LEXXFI3
"RTN","LEXXFI",62,0)
 S LEXEND=$$TIC^LEXXFI8 S LEXELP=$$ELAP^LEXXFI8(LEXBEG,LEXEND)
"RTN","LEXXFI",63,0)
 S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXFI",64,0)
 I +LEXBEG>0,LEXEND>0,$L(LEXELP) D TIM
"RTN","LEXXFI",65,0)
 D:$D(LEXSEND)!($D(LEXPOST)) EN^LEXXII K ^LEXM(0,"PRO") D:$D(ZTQUEUED) MAIL
"RTN","LEXXFI",66,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXFI",67,0)
 . N LEXI S LEXI=0 F  S LEXI=$O(^TMP("LEXKID",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXXFI",68,0)
 . . W !,$E($G(^TMP("LEXKID",$J,LEXI)),1,79)
"RTN","LEXXFI",69,0)
 D KILL
"RTN","LEXXFI",70,0)
 Q
"RTN","LEXXFI",71,0)
 ;
"RTN","LEXXFI",72,0)
POST ; Entry Point for Post-Install Message
"RTN","LEXXFI",73,0)
 N LEXPOST S LEXPOST=""
"RTN","LEXXFI",74,0)
 ;
"RTN","LEXXFI",75,0)
SEND ; Send Message
"RTN","LEXXFI",76,0)
 N LEXDESC,LEXENV,LEXP,LEXACCT,LEXPRO,LEXPRON,LEXSEND,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTQUEUED,ZTREQ
"RTN","LEXXFI",77,0)
 S LEXP=0,LEXENV=$$ENV
"RTN","LEXXFI",78,0)
 Q:+LEXENV'>0
"RTN","LEXXFI",79,0)
 S LEXSEND="",LEXPRON="LEXICAL SERVICES UPDATE",LEXPRO=$G(^LEXM(0,"PRO"))
"RTN","LEXXFI",80,0)
 S:+LEXPRO>0 LEXPRO=$$FMTE^XLFDT(LEXPRO,"1"),LEXP=1
"RTN","LEXXFI",81,0)
 S LEXACCT=$$U^LEXXFI7 S ZTSAVE("LEXACCT")=""
"RTN","LEXXFI",82,0)
 S ZTRTN="ALL^LEXXFI",ZTSAVE("LEXSEND")="",ZTSAVE("LEXPOST")=""
"RTN","LEXXFI",83,0)
 S:$D(LEXCOUNT) ZTSAVE("LEXCOUNT")=""
"RTN","LEXXFI",84,0)
 I $L($G(LEXPRO)),$L($G(LEXPRON)),+$G(LEXP)>0 S ZTSAVE("LEXPRO")="",ZTSAVE("LEXPRON")=""
"RTN","LEXXFI",85,0)
 S:$D(LEXLREV) ZTSAVE("LEXLREV")=""
"RTN","LEXXFI",86,0)
 S:$D(LEXREQP) ZTSAVE("LEXREQP")=""
"RTN","LEXXFI",87,0)
 S:$D(LEXBUILD) ZTSAVE("LEXBUILD")=""
"RTN","LEXXFI",88,0)
 S:$D(LEXSHORT) ZTSAVE("LEXSHORT")=""
"RTN","LEXXFI",89,0)
 S:$D(LEXIGHF) ZTSAVE("LEXIGHF")=""
"RTN","LEXXFI",90,0)
 S:$D(LEXCRE) ZTSAVE("LEXCRE")=""
"RTN","LEXXFI",91,0)
 S:$D(LEXID) ZTSAVE("LEXID")=""
"RTN","LEXXFI",92,0)
 S:$D(XPDA) ZTSAVE("XPDA")=""
"RTN","LEXXFI",93,0)
 S (LEXDESC,ZTDESC)="Post-Install File Counts "
"RTN","LEXXFI",94,0)
 S:$D(LEXSHORT) (LEXDESC,ZTDESC)="Post-Install Summary"
"RTN","LEXXFI",95,0)
 S ZTDTH=$H
"RTN","LEXXFI",96,0)
 S ZTIO=""
"RTN","LEXXFI",97,0)
 D ^%ZTLOAD
"RTN","LEXXFI",98,0)
 W:+($G(ZTSK))>0 !!,"  ",LEXDESC,!,"  Queued Task #",+($G(ZTSK)) W !
"RTN","LEXXFI",99,0)
 D ^%ZISC
"RTN","LEXXFI",100,0)
 Q
"RTN","LEXXFI",101,0)
MAIL ; Mail global array in message
"RTN","LEXXFI",102,0)
 N DIFROM,LEXPRI,LEXADR,LEXI,LEXM,LEXSUB,XCNP,XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ
"RTN","LEXXFI",103,0)
 I '$D(LEXSHORT),+$G(^TMP("LEXCS",$J,0))'>0 G MAILQ
"RTN","LEXXFI",104,0)
 K ^TMP("LEXMSG",$J)
"RTN","LEXXFI",105,0)
 S LEXSUB="Lexicon/ICD/CPT Installation"
"RTN","LEXXFI",106,0)
 S:$L($G(LEXBUILD)) LEXSUB=$G(LEXBUILD)_" Installation"
"RTN","LEXXFI",107,0)
 S LEXPRI=$$ADR^LEXXFI8
"RTN","LEXXFI",108,0)
 G:'$L(LEXPRI) MAILQ
"RTN","LEXXFI",109,0)
 S LEXPRI="G.LEXINS@"_LEXPRI
"RTN","LEXXFI",110,0)
 S LEXADR=$$GET1^DIQ(200,+($G(DUZ)),.01)
"RTN","LEXXFI",111,0)
 G:'$L(LEXADR) MAILQ
"RTN","LEXXFI",112,0)
 S U="^",XMSUB="LEX/ICD/CPT File Checksums - "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","LEXXFI",113,0)
 S:$D(LEXCOUNT) XMSUB="LEX/ICD/CPT File Checksums/Counts - "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","LEXXFI",114,0)
 S:$L($G(LEXBUILD)) XMSUB=$G(LEXBUILD)_" File Checksums"
"RTN","LEXXFI",115,0)
 I $L($G(LEXBUILD)),$D(LEXCOUNT) S XMSUB=$G(LEXBUILD)_" File Checksums/Counts"
"RTN","LEXXFI",116,0)
 S:$D(LEXPOST) XMSUB=LEXSUB
"RTN","LEXXFI",117,0)
 S LEXI=0 F  S LEXI=$O(^TMP("LEXKID",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXXFI",118,0)
 . S LEXM=+($O(^TMP("LEXMSG",$J," "),-1))+1
"RTN","LEXXFI",119,0)
 . S ^TMP("LEXMSG",$J,LEXM,0)=$E($G(^TMP("LEXKID",$J,LEXI)),1,79)
"RTN","LEXXFI",120,0)
 . S ^TMP("LEXMSG",$J,0)=LEXM
"RTN","LEXXFI",121,0)
 K ^TMP("LEXKID",$J)
"RTN","LEXXFI",122,0)
 I '$D(LEXSHORT) S LEXI=0 F  S LEXI=$O(^TMP("LEXCS",$J,LEXI)) Q:+LEXI=0  D
"RTN","LEXXFI",123,0)
 . S LEXM=+($O(^TMP("LEXMSG",$J," "),-1))+1
"RTN","LEXXFI",124,0)
 . S ^TMP("LEXMSG",$J,LEXM,0)=$E($G(^TMP("LEXCS",$J,LEXI)),1,79)
"RTN","LEXXFI",125,0)
 . S ^TMP("LEXMSG",$J,0)=LEXM
"RTN","LEXXFI",126,0)
 K ^TMP("LEXCS",$J) G:'$D(^TMP("LEXMSG",$J)) MAILQ G:+($G(^TMP("LEXMSG",$J,0)))'>0 MAILQ
"RTN","LEXXFI",127,0)
 S XMY(LEXPRI)="",XMY(LEXADR)="",XMTEXT="^TMP(""LEXMSG"",$J,",XMDUZ=.5 D ^XMD
"RTN","LEXXFI",128,0)
MAILQ ; Quit Mail
"RTN","LEXXFI",129,0)
 D KILL K XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","LEXXFI",130,0)
 Q
"RTN","LEXXFI",131,0)
 ;
"RTN","LEXXFI",132,0)
 ; Miscellaneous
"RTN","LEXXFI",133,0)
HDR ;   Header
"RTN","LEXXFI",134,0)
 N LEXD,LEXP,LEXN,LEXT,LEXU,LEXA,LEXACT,LEXI,LEXF,LEXMUL S LEXF=0 S LEXACT=$G(LEXACCT),LEXA=""
"RTN","LEXXFI",135,0)
 S:$L($P(LEXACT,"^",1))&($L($P(LEXACT,"^",1))) LEXA=LEXACT
"RTN","LEXXFI",136,0)
 S:'$L($G(LEXA)) LEXA=$$U^LEXXFI7 S LEXU=$$P^LEXXFI7,LEXD=$$A^LEXXFI7 D TT^LEXXFI8("","Status")
"RTN","LEXXFI",137,0)
 S LEXT="" S:$L(LEXD) LEXT="   As of:       "_LEXD
"RTN","LEXXFI",138,0)
 I $L(LEXD) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",139,0)
 S LEXT="",LEXI=$S($L($P(LEXA,"^",1)):"[",1:"")_$P(LEXA,"^",1)_$S($L($P(LEXA,"^",2)):"]",1:"")
"RTN","LEXXFI",140,0)
 S:$L(LEXI)&($L($P(LEXA,"^",2))) LEXI=LEXI_"  "_$P(LEXA,"^",2)
"RTN","LEXXFI",141,0)
 S LEXT="" S:$L(LEXI) LEXT="   In Account:  "_LEXI
"RTN","LEXXFI",142,0)
 I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",143,0)
 S LEXN=$P(LEXU,"^",1),LEXP=$P(LEXU,"^",2)
"RTN","LEXXFI",144,0)
 S LEXT="" S:$L(LEXN) LEXT="   Maint By:    "
"RTN","LEXXFI",145,0)
 S:$L(LEXN) LEXT=LEXT_LEXN S:$L(LEXP)&($L(LEXN)) LEXT=LEXT_"   "_LEXP
"RTN","LEXXFI",146,0)
 I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",147,0)
 S LEXT="" S:$L($G(LEXBUILD)) LEXT="   Build:       "_$G(LEXBUILD)
"RTN","LEXXFI",148,0)
 I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",149,0)
 S LEXT="" I $L($G(LEXPRO))&($L($G(LEXPRON))) D
"RTN","LEXXFI",150,0)
 . S LEXT="   Protocol:    "_LEXPRON_" invoked "_LEXPRO
"RTN","LEXXFI",151,0)
 . I $L(LEXT) D:+LEXF'>0 BL^LEXXFI8 D TL^LEXXFI8(LEXT) S LEXF=1
"RTN","LEXXFI",152,0)
 D BL^LEXXFI8
"RTN","LEXXFI",153,0)
 Q
"RTN","LEXXFI",154,0)
TIM ;   Time
"RTN","LEXXFI",155,0)
 Q:$D(LEXPOST)  Q:+($G(LEXBEG))'>0  Q:+($G(LEXEND))'>0  Q:'$L($G(LEXELP))
"RTN","LEXXFI",156,0)
 D BL^LEXXFI8,TL^LEXXFI8(("   Started:   "_$TR($$FMTE^XLFDT(LEXBEG),"@"," ")))
"RTN","LEXXFI",157,0)
 D TL^LEXXFI8(("   Finished:  "_$TR($$FMTE^XLFDT(LEXEND),"@"," ")))
"RTN","LEXXFI",158,0)
 D TL^LEXXFI8(("   Elapsed:   "_LEXELP)),BL^LEXXFI8
"RTN","LEXXFI",159,0)
 Q
"RTN","LEXXFI",160,0)
ENV(X) ;   Environment check
"RTN","LEXXFI",161,0)
 N LEXNM D HOME^%ZIS S U="^",DT=$$DT^XLFDT
"RTN","LEXXFI",162,0)
 I +($G(DUZ))'>0 W !!,"    User (DUZ) not defined",! Q 0
"RTN","LEXXFI",163,0)
 S LEXNM=$$GET1^DIQ(200,+($G(DUZ)),.01)
"RTN","LEXXFI",164,0)
 I '$L(LEXNM) W !!,"    Invalid User (DUZ) defined",! Q 0
"RTN","LEXXFI",165,0)
 S DTIME=$$DTIME^XUP(+($G(DUZ)))
"RTN","LEXXFI",166,0)
 Q 1
"RTN","LEXXFI",167,0)
CLR ;   Clear ^TMP("LEXCS",$J)
"RTN","LEXXFI",168,0)
 K ^TMP("LEXCS",$J) Q
"RTN","LEXXFI",169,0)
KILL ;   Kill all ^TMP("LEX**"
"RTN","LEXXFI",170,0)
 K ^TMP("LEXCNT",$J),^TMP("LEXCS",$J),^TMP("LEXI",$J)
"RTN","LEXXFI",171,0)
 K ^TMP("LEXINS",$J),^TMP("LEXMSG",$J),^TMP("LEXKID",$J)
"RTN","LEXXFI",172,0)
 Q
"RTN","LEXXFI",173,0)
 ;;
"RTN","LEXXFI",174,0)
 ;;
"RTN","LEXXFI",175,0)
FILES ;;
"RTN","LEXXFI",176,0)
 ;;;;757
"RTN","LEXXFI",177,0)
 ;;1;;757.001
"RTN","LEXXFI",178,0)
 ;;1;;757.01
"RTN","LEXXFI",179,0)
 ;;;;757.011
"RTN","LEXXFI",180,0)
 ;;;;757.014
"RTN","LEXXFI",181,0)
 ;;;;757.02
"RTN","LEXXFI",182,0)
 ;;;;757.03
"RTN","LEXXFI",183,0)
 ;;1;;757.04
"RTN","LEXXFI",184,0)
 ;;1;;757.05
"RTN","LEXXFI",185,0)
 ;;1;;757.06
"RTN","LEXXFI",186,0)
 ;;;;757.1
"RTN","LEXXFI",187,0)
 ;;;;757.11
"RTN","LEXXFI",188,0)
 ;;;;757.12
"RTN","LEXXFI",189,0)
 ;;;;757.13
"RTN","LEXXFI",190,0)
 ;;;;757.14
"RTN","LEXXFI",191,0)
 ;;1;;757.2
"RTN","LEXXFI",192,0)
 ;;1;;757.21
"RTN","LEXXFI",193,0)
 ;;;;757.3
"RTN","LEXXFI",194,0)
 ;;;;757.31
"RTN","LEXXFI",195,0)
 ;;1;;757.4
"RTN","LEXXFI",196,0)
 ;;1;;757.41
"RTN","LEXXFI",197,0)
 ;;;;80
"RTN","LEXXFI",198,0)
 ;;;;80.1
"RTN","LEXXFI",199,0)
 ;;;;80.3
"RTN","LEXXFI",200,0)
 ;;;;81
"RTN","LEXXFI",201,0)
 ;;;;81.1
"RTN","LEXXFI",202,0)
 ;;1;;81.2
"RTN","LEXXFI",203,0)
 ;;;;81.3
"RTN","LEXXFI",204,0)
 ;;
"RTN","LEXXFI",205,0)
 ;;
"RTN","LEXXFI",206,0)
 ;;
"RTN","LEXXFI",207,0)
 Q
"RTN","LEXXGI")
0^6^B74289713^B64603303
"RTN","LEXXGI",1,0)
LEXXGI ;ISL/KER/FJF - Global Import (Needs ^LEXM) ;04/22/2008
"RTN","LEXXGI",2,0)
 ;;2.0;LEXICON UTILITY;**4,25,26,27,28,29,46,49,50,41**;Sep 23, 1996;Build 34
"RTN","LEXXGI",3,0)
 ;              
"RTN","LEXXGI",4,0)
 ; NEWed by Lexicon Environment Check routine LEX20nn
"RTN","LEXXGI",5,0)
 ;    LEXBUILD
"RTN","LEXXGI",6,0)
 ;    LEXFY
"RTN","LEXXGI",7,0)
 ;    LEXIGHF
"RTN","LEXXGI",8,0)
 ;    LEXLREV
"RTN","LEXXGI",9,0)
 ;    LEXPTYPE
"RTN","LEXXGI",10,0)
 ;    LEXQTR
"RTN","LEXXGI",11,0)
 ;    LEXREQP
"RTN","LEXXGI",12,0)
 ;              
"RTN","LEXXGI",13,0)
 ; NEWed by KIDS during the Install of a patch/build
"RTN","LEXXGI",14,0)
 ;    XPDNM
"RTN","LEXXGI",15,0)
 ;              
"RTN","LEXXGI",16,0)
 ; Global Variables
"RTN","LEXXGI",17,0)
 ;    ^LEXM
"RTN","LEXXGI",18,0)
 ;              
"RTN","LEXXGI",19,0)
 ; External References
"RTN","LEXXGI",20,0)
 ;    DBIA 10086  HOME^%ZIS
"RTN","LEXXGI",21,0)
 ;    DBIA 10016  ^DIM
"RTN","LEXXGI",22,0)
 ;    DBIA  2056  $$GET1^DIQ (file 200)
"RTN","LEXXGI",23,0)
 ;    DBIA 10103  $$DT^XLFDT
"RTN","LEXXGI",24,0)
 ;    DBIA 10103  $$FMTE^XLFDT
"RTN","LEXXGI",25,0)
 ;    DBIA 10141  BMES^XPDUTL 
"RTN","LEXXGI",26,0)
 ;    DBIA 10141  MES^XPDUTL
"RTN","LEXXGI",27,0)
 ;              
"RTN","LEXXGI",28,0)
EN ; Main Entry Point for Installing LEXM in Post-Installs
"RTN","LEXXGI",29,0)
 ;                
"RTN","LEXXGI",30,0)
 ; Requires 
"RTN","LEXXGI",31,0)
 ;                
"RTN","LEXXGI",32,0)
 ;   LEXBUILD - the name of the patch/build being installed
"RTN","LEXXGI",33,0)
 ;                
"RTN","LEXXGI",34,0)
 ; Uses
"RTN","LEXXGI",35,0)
 ;                
"RTN","LEXXGI",36,0)
 ;   LEXMSG   - If this variable exist, then an install message
"RTN","LEXXGI",37,0)
 ;              message will be set to G.LEXICON
"RTN","LEXXGI",38,0)
 ;              
"RTN","LEXXGI",39,0)
 ;   LEXSHORT - If this variable exist, the install message
"RTN","LEXXGI",40,0)
 ;              will be an abbreviated message, without the 
"RTN","LEXXGI",41,0)
 ;              file totals and checksums
"RTN","LEXXGI",42,0)
 ;               
"RTN","LEXXGI",43,0)
 ;              Abbreviated Install Message
"RTN","LEXXGI",44,0)
 ;               
"RTN","LEXXGI",45,0)
 ;                Date and Time Installed
"RTN","LEXXGI",46,0)
 ;                Account where the Data was Installed
"RTN","LEXXGI",47,0)
 ;                Who Installed the Data
"RTN","LEXXGI",48,0)
 ;                The Name of the Build Installed
"RTN","LEXXGI",49,0)
 ;                The Name of the Global Host File
"RTN","LEXXGI",50,0)
 ;                Protocol Invoked
"RTN","LEXXGI",51,0)
 ;                Date and time Protocol was Invoked
"RTN","LEXXGI",52,0)
 ;                Install Start Date/Time
"RTN","LEXXGI",53,0)
 ;                Install Complete Date/Time
"RTN","LEXXGI",54,0)
 ;                Install Elapsed Time
"RTN","LEXXGI",55,0)
 ;               
"RTN","LEXXGI",56,0)
 ;              Long Install Message
"RTN","LEXXGI",57,0)
 ;               
"RTN","LEXXGI",58,0)
 ;                All of the elements above plus:
"RTN","LEXXGI",59,0)
 ;               
"RTN","LEXXGI",60,0)
 ;                   File Versions/Revisions
"RTN","LEXXGI",61,0)
 ;                   File Checksums
"RTN","LEXXGI",62,0)
 ;                   File Record Counts
"RTN","LEXXGI",63,0)
 ;              
"RTN","LEXXGI",64,0)
 ;   LEXPTYPE - Patch Type
"RTN","LEXXGI",65,0)
 ;   LEXLREV  - Revision
"RTN","LEXXGI",66,0)
 ;   LEXREQP  - Required Patches/Builds
"RTN","LEXXGI",67,0)
 ;   LEXIGHF  - The patch Export Global Host Filename
"RTN","LEXXGI",68,0)
 ;   LEXFY    - Fiscal Year
"RTN","LEXXGI",69,0)
 ;   LEXQTR   - Quarter
"RTN","LEXXGI",70,0)
 ;   LEXCRE   - Import Global Creation Date
"RTN","LEXXGI",71,0)
 ;                
"RTN","LEXXGI",72,0)
 D IMPORT D KALL^LEXXGI2
"RTN","LEXXGI",73,0)
 Q
"RTN","LEXXGI",74,0)
TASK ; Queue Lexicon Update with Taskman
"RTN","LEXXGI",75,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSK,ZTSAVE,ZTQUEUED
"RTN","LEXXGI",76,0)
 S:$D(LEXBUILD) ZTSAVE("LEXBUILD")=""
"RTN","LEXXGI",77,0)
 S:$D(LEXMSG) ZTSAVE("LEXMSG")=""
"RTN","LEXXGI",78,0)
 S:$D(LEXSHORT) ZTSAVE("LEXSHORT")=""
"RTN","LEXXGI",79,0)
 S:$D(LEXPTYPE) ZTSAVE("LEXPTYPE")=""
"RTN","LEXXGI",80,0)
 S:$D(LEXLREV) ZTSAVE("LEXLREV")=""
"RTN","LEXXGI",81,0)
 S:$D(LEXREQP) ZTSAVE("LEXREQP")=""
"RTN","LEXXGI",82,0)
 S:$D(LEXIGHF) ZTSAVE("LEXIGHF")=""
"RTN","LEXXGI",83,0)
 S:$D(LEXFY) ZTSAVE("LEXFY")=""
"RTN","LEXXGI",84,0)
 S:$D(LEXQTR) ZTSAVE("LEXQTR")=""
"RTN","LEXXGI",85,0)
 S:$D(LEXCRE) ZTSAVE("LEXCRE")=""
"RTN","LEXXGI",86,0)
 S ZTRTN="EN^LEXXGI",ZTDESC="Importing Updated Lexicon Data"
"RTN","LEXXGI",87,0)
 S ZTIO="",ZTDTH=$H
"RTN","LEXXGI",88,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","LEXXGI",89,0)
 Q
"RTN","LEXXGI",90,0)
IMPORT ; Import Data during a Patch Installation
"RTN","LEXXGI",91,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI",92,0)
 S:$L($G(LEXPTYPE)) LEXPTYPE=$G(LEXPTYPE) S:$L($G(LEXLREV)) LEXLREV=$G(LEXLREV) S:$L($G(LEXREQP)) LEXREQP=$G(LEXREQP)
"RTN","LEXXGI",93,0)
 S:$L($G(LEXBUILD)) LEXBUILD=$G(LEXBUILD) S:$L($G(LEXIGHF)) LEXIGHF=$G(LEXIGHF) S:$L($G(LEXFY)) LEXFY=$G(LEXFY)
"RTN","LEXXGI",94,0)
 S:$L($G(LEXQTR)) LEXQTR=$G(LEXQTR) K LEXSCHG,LEXCHG
"RTN","LEXXGI",95,0)
 N LEXB,LEXCD,LEXSTR,LEXLAST,%,%DT,C,D,D0,D1,D2,DG,DIC,DICR,DILOCKTM,DIW,IREC,J,XMDUN,XMZ,ZTSK
"RTN","LEXXGI",96,0)
 S U="^",LEXSTR=$G(LEXPTYPE),LEXB=$G(^LEXM(0,"BUILD"))
"RTN","LEXXGI",97,0)
 S:$L($G(LEXFY))&($L($G(LEXQTR)))&($L(LEXSTR)) LEXSTR=LEXSTR_" for "_$G(LEXFY)_" "_$G(LEXQTR)_" Quarter"
"RTN","LEXXGI",98,0)
 S:$L(LEXB) LEXBLD=LEXB S:'$L(LEXBLD)&($L(LEXBUILD)) LEXBLD=LEXBUILD
"RTN","LEXXGI",99,0)
 I '$L(LEXB)!(LEXB'=LEXBUILD) D
"RTN","LEXXGI",100,0)
 . N X,LEXBLD I '$L(LEXB) D  Q
"RTN","LEXXGI",101,0)
 . . S X=" Invalid export global, aborting data install" W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(" ")
"RTN","LEXXGI",102,0)
 . I '$L(LEXBUILD) D  Q
"RTN","LEXXGI",103,0)
 . . S X=" Undefined KIDS Build, aborting data install" W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(" ")
"RTN","LEXXGI",104,0)
 I $L(LEXB)&(LEXB=LEXBUILD) D
"RTN","LEXXGI",105,0)
 . N LEXFI,LEXID S X="Installing Data for patch "_LEXB W:'$D(XPDNM) !!,X D:$D(XPDNM) BMES^XPDUTL(X) W:'$D(XPDNM) ! D:$D(XPDNM) MES^XPDUTL(" ")
"RTN","LEXXGI",106,0)
 . K LEXSCHG S LEXCHG=0,LEXFI=0 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI'>0  D
"RTN","LEXXGI",107,0)
 . . S LEXID=$S(LEXFI=80!(LEXFI=80.1):"ICD",LEXFI=81!(LEXFI=81.1)!(LEXFI=81.2)!(LEXFI=81.3):"CPT",$P(LEXFI,".",1)=757:"LEX",1:"UNK")
"RTN","LEXXGI",108,0)
 . . S LEXSCHG(LEXFI,0)=+($G(^LEXM(LEXFI,0))),LEXSCHG("B",LEXFI)="" S LEXSCHG("C",LEXID,LEXFI)=""
"RTN","LEXXGI",109,0)
 . S:$D(LEXSCHG("C","CPT"))!($D(LEXSCHG("C","ICD"))) LEXSCHG("D","PRO")="",LEXCHG=1,LEXSCHG(0)=1
"RTN","LEXXGI",110,0)
 . D LOAD,NOTIFY^LEXXGI2 I +($G(DUZ))>0,$L($$GET1^DIQ(200,(+($G(DUZ))_","),.01)) D
"RTN","LEXXGI",111,0)
 . . D HOME^%ZIS N DIFROM,LEXPRO,LEXPRON,LEXLAST S LEXPRON="LEXICAL SERVICES UPDATE",LEXPRO=$G(^LEXM(0,"PRO")) D:$D(LEXMSG) POST^LEXXFI
"RTN","LEXXGI",112,0)
 Q
"RTN","LEXXGI",113,0)
LOAD ; Load Data from ^LEXM into IC*/LEX Files
"RTN","LEXXGI",114,0)
 Q:'$L($G(LEXB))  S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGI",115,0)
 N LEXBEG,LEXELP,LEXEND,LEXMSG,LEXOK,LEXFL
"RTN","LEXXGI",116,0)
 D:'$D(^LEXM) NF^LEXXGI2 Q:'$D(^LEXM)
"RTN","LEXXGI",117,0)
 S LEXOK=0 S:$O(^LEXM(0))>0 LEXOK=1 D:'LEXOK IG^LEXXGI2 Q:'LEXOK
"RTN","LEXXGI",118,0)
 S LEXBEG=$$HACK^LEXXGI2 D FILES S LEXEND=$$HACK^LEXXGI2,LEXELP=$$ELAP^LEXXGI2(LEXBEG,LEXEND)
"RTN","LEXXGI",119,0)
 S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXGI",120,0)
 D PB^LEXXGI2("  Data Updated ")
"RTN","LEXXGI",121,0)
 D PB^LEXXGI2(("     Started:   "_$TR($$FMTE^XLFDT(LEXBEG),"@"," ")))
"RTN","LEXXGI",122,0)
 D TL^LEXXGI2(("     Finished:  "_$TR($$FMTE^XLFDT(LEXEND),"@"," ")))
"RTN","LEXXGI",123,0)
 D TL^LEXXGI2(("     Elapsed:   "_LEXELP))
"RTN","LEXXGI",124,0)
 Q
"RTN","LEXXGI",125,0)
FILES ;   Load Data for all files
"RTN","LEXXGI",126,0)
 Q:'$L($G(LEXB))  N LEXHDR,LEXBLD,LEXDAT,LEXFI,LEXFIC,LEXHDRS,LEXLOG,LEXINS
"RTN","LEXXGI",127,0)
 S (LEXFI,LEXFIC)=0,LEXHDR=0,LEXBLD=LEXB
"RTN","LEXXGI",128,0)
 S LEXDAT=$P($G(^LEXM(0,"VRRVDT")),"^",1),LEXINS=1
"RTN","LEXXGI",129,0)
 S:+LEXDAT'>0 LEXDAT=$$DT^XLFDT I LEXOK D
"RTN","LEXXGI",130,0)
 . N LEXCRE,LEXL1 S LEXL1="" S LEXCRE=$G(^LEXM(0,"CREATED")) S LEXCRE=$S(+LEXCRE>0:($$MIX^LEXXGI2($$FMTE^XLFDT(LEXCRE))),1:"")
"RTN","LEXXGI",131,0)
 . S:$L($P(LEXCRE,"@",2)) LEXCRE=$P(LEXCRE,"@",1)_" at "_$P(LEXCRE,"@",2) S LEXL1=" Updating files "
"RTN","LEXXGI",132,0)
 . S:$L($G(LEXCRE))&($L($G(LEXL1))) LEXL1=$G(LEXL1)_"using export global created "_$G(LEXCRE)
"RTN","LEXXGI",133,0)
 . D PB^LEXXGI2(LEXL1)
"RTN","LEXXGI",134,0)
 F  S LEXFI=$O(^LEXM(LEXFI)) Q:+LEXFI=0  D FILE
"RTN","LEXXGI",135,0)
 Q
"RTN","LEXXGI",136,0)
FILE ;     Load Data for one file
"RTN","LEXXGI",137,0)
 N LEXCF,LEXCHG,LEXCHGS,LEXCNT,LEXFIL,LEXI,LEXID,LEXIEN,LEXL,LEXLC
"RTN","LEXXGI",138,0)
 N LEXMUMPS,LEXNM,LEXRT,LEXS,LEXTOT,LEXTXT,LEXIGL,LEXIGI,LEXIGF,LEXIGT
"RTN","LEXXGI",139,0)
 N LEXIGD,LEXIGO,LEXBEG,LEXEND,LEXELP,LEXFB
"RTN","LEXXGI",140,0)
 S LEXFB=$G(^LEXM(+LEXFI,0,"BUILD")),LEXIGO=0,LEXBEG=$$HACK^LEXXGI2
"RTN","LEXXGI",141,0)
 S (LEXCNT,LEXLC,LEXI)=0,LEXL=68,LEXFIC=LEXFIC+1 I LEXOK D
"RTN","LEXXGI",142,0)
 . N LEXB,LEXFID,LEXNM,LEXVR,LEXRV,LEXDT,LEXL1,LEXL2 S (LEXL1,LEXL2)="",LEXFID=$P(LEXFI,".",1)
"RTN","LEXXGI",143,0)
 . Q:+LEXFID'>0  Q:$D(LEXHDRS(+LEXFID))  S LEXHDRS(LEXFID)="" S:+LEXFI=81!(+LEXFI=81.3) LEXHDRS(81)="",LEXHDRS(81.3)=""
"RTN","LEXXGI",144,0)
 . S:LEXFID=80 LEXNM="ICD-9-CM" S:LEXFID=81 LEXNM="CPT-4/HCPCS" S:LEXFID=757 LEXNM="Lexicon" S LEXB=$G(^LEXM(LEXFI,0,"BUILD"))
"RTN","LEXXGI",145,0)
 . S LEXVR=$G(^LEXM(LEXFI,0,"VR")),LEXRV=$G(^LEXM(LEXFI,0,"VRRV")),LEXDT=$$MIX^LEXXGI2($$FMTE^XLFDT($P(LEXRV,"^",2))),LEXRV=$P(LEXRV,"^",1)
"RTN","LEXXGI",146,0)
 . S LEXL1="Updating "_LEXNM S:$L(LEXB) LEXL1=LEXL1_" with patch/build "_LEXB S:$L(LEXVR) LEXL2=" To version "_LEXVR
"RTN","LEXXGI",147,0)
 . S:$L(LEXVR)&($L(LEXRV)) LEXL2=LEXL2_" revision "_LEXRV S:$L(LEXVR)&($L(LEXRV))&($L(LEXDT)) LEXL2=LEXL2_" dated "_LEXDT
"RTN","LEXXGI",148,0)
 . S:$L(LEXL1) LEXL1=" "_LEXL1 S:$L(LEXL2) LEXL2=" "_LEXL2 D BL^LEXXGI2 D:$L(LEXL1) TL^LEXXGI2(LEXL1) D:$L(LEXL2) TL^LEXXGI2(LEXL2),BL^LEXXGI2
"RTN","LEXXGI",149,0)
 S LEXTOT=+($G(^LEXM(LEXFI,0))) G:LEXTOT=0 FILEQ
"RTN","LEXXGI",150,0)
 S LEXNM=$G(^LEXM(LEXFI,0,"NM"))
"RTN","LEXXGI",151,0)
 I $L(LEXNM),$$UP^LEXXGI2(LEXNM)'["FILE" S LEXNM=LEXNM_" FILE"
"RTN","LEXXGI",152,0)
 S:$L(LEXNM) LEXNM=$$MIX^LEXXGI2(LEXNM) S LEXCHG=$G(^LEXM(LEXFI,0))
"RTN","LEXXGI",153,0)
 S LEXTXT="   "_LEXNM,LEXTXT=LEXTXT_$J("",(40-$L(LEXTXT)))_LEXFI
"RTN","LEXXGI",154,0)
 D:LEXFIC=1 PB^LEXXGI2(LEXTXT) D:LEXFIC'=1 TL^LEXXGI2(LEXTXT)
"RTN","LEXXGI",155,0)
 S LEXS=+(LEXTOT\LEXL) S:LEXS=0 LEXS=1 W:+($O(^LEXM(LEXFI,0)))>0 !,"   "
"RTN","LEXXGI",156,0)
 D UPCHG^LEXXGI2 F  S LEXI=$O(^LEXM(LEXFI,LEXI)) Q:+LEXI=0  D
"RTN","LEXXGI",157,0)
 . S LEXCNT=LEXCNT+1,LEXMUMPS=$G(^LEXM(LEXFI,LEXI))
"RTN","LEXXGI",158,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEXXGI",159,0)
 . S LEXRT=$P(LEXMUMPS,"^",2),LEXFIL=""
"RTN","LEXXGI",160,0)
 . S:LEXMUMPS["^LEX("!(LEXMUMPS["^LEXT(")!(LEXMUMPS["^LEXC(") LEXFIL=+($P(LEXRT,"(",2)),LEXFL(+($P(LEXRT,"(",2)))=""
"RTN","LEXXGI",161,0)
 . S:LEXMUMPS["^ICD9(" LEXFIL=80,LEXFL(80)=""
"RTN","LEXXGI",162,0)
 . S:LEXMUMPS["^ICD0(" LEXFIL=80.1,LEXFL(80.1)=""
"RTN","LEXXGI",163,0)
 . S:LEXMUMPS["^ICPT(" LEXFIL=81,LEXFL(81)=""
"RTN","LEXXGI",164,0)
 . S:LEXMUMPS["^DIC(81.3" LEXFIL=81.3,LEXFL(81.3)=""
"RTN","LEXXGI",165,0)
 . S:LEXMUMPS["^DIC(81.2" LEXFIL=81.2,LEXFL(81.2)=""
"RTN","LEXXGI",166,0)
 . S:LEXMUMPS["^LEX("!(LEXMUMPS["^LEXT(")!(LEXMUMPS["^LEXC(") LEXFIL=+($P(LEXRT,"(",2))
"RTN","LEXXGI",167,0)
 . S:LEXMUMPS["^ICD9(" LEXFIL=80 S:LEXMUMPS["^ICD0(" LEXFIL=80.1
"RTN","LEXXGI",168,0)
 . S:LEXMUMPS["^ICPT(" LEXFIL=81 S:LEXMUMPS["^DIC(81.3" LEXFIL=81.3
"RTN","LEXXGI",169,0)
 . S:+LEXFIL>0 LEXSCHG(+LEXFIL,0)=""
"RTN","LEXXGI",170,0)
 . I $L(LEXMUMPS) D
"RTN","LEXXGI",171,0)
 . . N X S X=LEXMUMPS D ^DIM Q:'$D(X)  X LEXMUMPS S LEXIGO=1
"RTN","LEXXGI",172,0)
 I +($G(LEXIGO))>0 D
"RTN","LEXXGI",173,0)
 . S LEXEND=$$HACK^LEXXGI2 S LEXELP=$$ELAP^LEXXGI2(LEXBEG,LEXEND) S:LEXELP="" LEXELP="00:00:00"
"RTN","LEXXGI",174,0)
FILEQ ;     Load Data for one file - QUIT
"RTN","LEXXGI",175,0)
 K ^LEXM(+LEXFI)
"RTN","LEXXGI",176,0)
 Q
"RTN","LEXXGI",177,0)
 ;                     
"RTN","LEXXGI",178,0)
NOTIFY ; Notify by Protocol - LEXICAL SERVICES UPDATE
"RTN","LEXXGI",179,0)
 D NOTIFY^LEXXGI2,KALL^LEXXGI2
"RTN","LEXXGI",180,0)
 Q
"RTN","LEXXGI",181,0)
SCHG ;   Save Change File Changes (for NOTIFY)
"RTN","LEXXGI",182,0)
 N FI,ID K LEXSCHG S LEXCHG=0
"RTN","LEXXGI",183,0)
 N FI S FI=0 F  S FI=$O(^LEXM(FI)) Q:+FI'>0  D
"RTN","LEXXGI",184,0)
 . S ID=$S(FI=80!(FI=80.1):"ICD",FI=81!(FI=81.1)!(FI=81.2)!(FI=81.3):"CPT",$P(FI,".",1)=757:"LEX",1:"UNK")
"RTN","LEXXGI",185,0)
 . S LEXSCHG(FI,0)=+($G(^LEXM(FI,0))),LEXSCHG("B",FI)="" S LEXSCHG("C",ID,FI)=""
"RTN","LEXXGI",186,0)
 S:$D(LEXSCHG("C","CPT"))!($D(LEXSCHG("C","ICD"))) LEXSCHG("D","PRO")=""
"RTN","LEXXGI",187,0)
 S:$D(^LEXM(80))!($D(^LEXM(80.1)))!($D(^LEXM(81)))!($D(^LEXM(81.2)))!($D(^LEXM(81.3)))!($D(LEXSCHG("D","PRO"))) LEXCHG=1,LEXSCHG(0)=1
"RTN","LEXXGI",188,0)
 Q
"RTN","LEXXGI",189,0)
ZTQ ; Taskman Quit
"RTN","LEXXGI",190,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGI",191,0)
 Q
"RTN","LEXXGI",192,0)
CHECKSUM ; Check ^LEXM Checksum
"RTN","LEXXGI",193,0)
 D CS^LEXXGI2
"RTN","LEXXGI",194,0)
 Q
"RTN","LEXXII")
0^7^B34625513^B35261547
"RTN","LEXXII",1,0)
LEXXII ;ISL/KER - Lexicon Status (Install Info) ;06/06/2007
"RTN","LEXXII",2,0)
 ;;2.0;LEXICON UTILITY;**32,46,49,50,41**;Sep 23, 1996;Build 34
"RTN","LEXXII",3,0)
 ;              
"RTN","LEXXII",4,0)
 ; Variables NEWed or KILLed Elsewhere
"RTN","LEXXII",5,0)
 ;   LEXACCT  NEWed by LEXXFI sending message
"RTN","LEXXII",6,0)
 ;   LEXID    NEWed by LEXXFI sending message
"RTN","LEXXII",7,0)
 ;   LEXCRE   NEWed by LEXXGI loading data
"RTN","LEXXII",8,0)
 ;   LEXIGHF  NEWed by Post Install routine LEX20nnP
"RTN","LEXXII",9,0)
 ;   XPDA     NEWed by KIDS during Install
"RTN","LEXXII",10,0)
 ;              
"RTN","LEXXII",11,0)
 ; Global Variables
"RTN","LEXXII",12,0)
 ;   DBIA 10096  ^%ZOSF("PROD"
"RTN","LEXXII",13,0)
 ;   DBIA 10096  ^%ZOSF("UCI"
"RTN","LEXXII",14,0)
 ;   DBIA 10060  ^VA(200
"RTN","LEXXII",15,0)
 ;   ^LEXM(0
"RTN","LEXXII",16,0)
 ;   ^TMP("LEX*",$J    SACC 2.3.2.5.1
"RTN","LEXXII",17,0)
 ;              
"RTN","LEXXII",18,0)
 ; External References
"RTN","LEXXII",19,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","LEXXII",20,0)
 ;   DBIA 10103  $$NOW^XLFDT
"RTN","LEXXII",21,0)
 ;   DBIA 10103  $$FMDIFF^XLFDT
"RTN","LEXXII",22,0)
 ;   DBIA  2056  $$GET1^DIQ (file #200)
"RTN","LEXXII",23,0)
 ;   DBIA  2051  FIND^DIC
"RTN","LEXXII",24,0)
 ;   DBIA  2056  GETS^DIQ
"RTN","LEXXII",25,0)
 ;              
"RTN","LEXXII",26,0)
EN ; Main Entry
"RTN","LEXXII",27,0)
 N LEXSUB S LEXSUB=$G(LEXID) S:LEXSUB="" LEXSUB="LEXXII" K ^TMP(LEXSUB,$J) D II
"RTN","LEXXII",28,0)
 Q
"RTN","LEXXII",29,0)
 ;                               
"RTN","LEXXII",30,0)
II ; Install Information
"RTN","LEXXII",31,0)
 N LEXT,LEXA,LEXACT,LEXB,LEXD,LEXE,LEXL,LEXU,LEXN,LEXP,LEXPROF,LEXDA H 2
"RTN","LEXXII",32,0)
 S LEXA="",LEXACT=$G(LEXACCT),LEXPRO=$G(LEXPRO),LEXPRON=$G(LEXPRON)
"RTN","LEXXII",33,0)
 S:'$L(LEXPRON) LEXPRON="LEXICAL SERVICES UPDATE" S:'$L(LEXPRO) LEXPRO=$G(^LEXM(0,"PRO")) S:+LEXPRO>0 LEXPRO=$$ED(LEXPRO)
"RTN","LEXXII",34,0)
 S LEXT="Lexicon/ICD/CPT Installation" D TL(LEXT)
"RTN","LEXXII",35,0)
 S LEXT="============================" D TL(LEXT),BL
"RTN","LEXXII",36,0)
 S LEXD=$$ASOF,LEXA=$$UCI,LEXU=$$USR,LEXN=$P(LEXU,"^",1)
"RTN","LEXXII",37,0)
 S:$L($P(LEXACT,"^",1))&($L($P(LEXACT,"^",1))) LEXA=LEXACT
"RTN","LEXXII",38,0)
 S LEXP=$P(LEXU,"^",2),LEXN=$$PM^LEXXFI7(LEXN)
"RTN","LEXXII",39,0)
 S:$L(LEXD) LEXT="  As of:       "_LEXD
"RTN","LEXXII",40,0)
 D:$L(LEXD) TL(LEXT)
"RTN","LEXXII",41,0)
 S LEXT="" S:$L(LEXA) LEXT="  In Account:  "_$S($L($P(LEXA,"^",1)):"[",1:"")_$P(LEXA,"^",1)_$S($L($P(LEXA,"^",2)):"]",1:"")
"RTN","LEXXII",42,0)
 S:$L(LEXT)&($L($P(LEXA,"^",2))) LEXT=LEXT_"  "_$P(LEXA,"^",2)
"RTN","LEXXII",43,0)
 D:$L(LEXA) TL(LEXT)
"RTN","LEXXII",44,0)
 S LEXT="" S:$L(LEXU) LEXT="  Maint By:    "
"RTN","LEXXII",45,0)
 S:$L(LEXN) LEXT=LEXT_LEXN
"RTN","LEXXII",46,0)
 S:$L(LEXP)&($L(LEXN)) LEXT=LEXT_"   "_LEXP
"RTN","LEXXII",47,0)
 D:$L(LEXT)&(LEXT'["UNKNOWN") TL(LEXT)
"RTN","LEXXII",48,0)
 S LEXT="" S:$L($G(LEXBUILD)) LEXT="  Build:       "_$G(LEXBUILD)
"RTN","LEXXII",49,0)
 D:$L(LEXT) TL(LEXT)
"RTN","LEXXII",50,0)
 S LEXT="" S:$L($G(LEXIGHF)) LEXT="  Host File:   "_$G(LEXIGHF)
"RTN","LEXXII",51,0)
 S:$L(LEXT)&($L($G(LEXCRE)))&($P($G(LEXCRE),".",1)?7N) LEXT=LEXT_" (Created "_$$ED($G(LEXCRE))_")"
"RTN","LEXXII",52,0)
 S:'$L(LEXT)&($L($G(LEXCRE)))&($P($G(LEXCRE),".",1)?7N) LEXT="  Created:     "_$$ED($G(LEXCRE))
"RTN","LEXXII",53,0)
 D:$L(LEXT) TL(LEXT)
"RTN","LEXXII",54,0)
 S LEXT="" I $L($G(LEXPRO))&($L($G(LEXPRON))) D
"RTN","LEXXII",55,0)
 . S LEXT="  Protocol:    "_LEXPRON D BL,TL(LEXT)
"RTN","LEXXII",56,0)
 . S LEXT="  Invoked:     "_LEXPRO D TL(LEXT)
"RTN","LEXXII",57,0)
 . K LEXPRO,LEXPRON,^LEXM(0,"PRO")
"RTN","LEXXII",58,0)
 S LEXB=$$SS($G(LEXBUILD)),LEXE=$P(LEXB,"^",2),LEXL=$P(LEXB,"^",3),LEXB=$P(LEXB,"^",1)
"RTN","LEXXII",59,0)
 I $P(LEXB,".",1)?7N!($P(LEXB,".",2)?7N)!($P(LEXB,".",3)[":") D
"RTN","LEXXII",60,0)
 . D BL
"RTN","LEXXII",61,0)
 . I $P(LEXB,".",1)?7N D
"RTN","LEXXII",62,0)
 . . S LEXT="" S LEXT="  Started:     "_$$ED($G(LEXB)) D TL(LEXT)
"RTN","LEXXII",63,0)
 . I $P(LEXE,".",1)?7N D
"RTN","LEXXII",64,0)
 . . S LEXT="" S LEXT="  Finished:    "_$$ED($G(LEXE)) D TL(LEXT)
"RTN","LEXXII",65,0)
 . I $L(LEXL) D
"RTN","LEXXII",66,0)
 . . S LEXT="" S LEXT="  Elapsed:     "_$$ED($G(LEXL)) D TL(LEXT)
"RTN","LEXXII",67,0)
 D BL
"RTN","LEXXII",68,0)
 Q
"RTN","LEXXII",69,0)
 ;                             
"RTN","LEXXII",70,0)
 ; Miscellaneous
"RTN","LEXXII",71,0)
UCI(X) ;   UCI where Lexicon is installed
"RTN","LEXXII",72,0)
 N LEXU,LEXP,LEXT,Y X ^%ZOSF("UCI") S LEXU=Y,LEXP="" S:LEXU=^%ZOSF("PROD")!($P(LEXU,",",1)=^%ZOSF("PROD")) LEXP=" (Production)"
"RTN","LEXXII",73,0)
 S:LEXU'=^%ZOSF("PROD")&($P(LEXU,",",1)'=^%ZOSF("PROD")) LEXP=" (Test)" S X="",$P(X,"^",1)=LEXU,$P(X,"^",2)=LEXP
"RTN","LEXXII",74,0)
 Q X
"RTN","LEXXII",75,0)
USR(LEX) ;   User/Person
"RTN","LEXXII",76,0)
 N LEXDUZ,LEXPH,LEXNM
"RTN","LEXXII",77,0)
 S LEX=+($G(DUZ)),LEXNM=$$GET1^DIQ(200,+LEX,.01) Q:'$L(LEXNM) "UNKNOWN^"
"RTN","LEXXII",78,0)
 S LEXDUZ=LEX S LEXPH=$$GET1^DIQ(200,+LEXDUZ,.132) S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXDUZ,.131)
"RTN","LEXXII",79,0)
 S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXDUZ,.133) S:LEXPH="" LEXPH=$$GET1^DIQ(200,+LEXDUZ,.134)
"RTN","LEXXII",80,0)
 S LEXDUZ=$$GET1^DIQ(200,+LEX,.01),LEX=LEXDUZ_"^"_LEXPH Q LEX
"RTN","LEXXII",81,0)
SS(LEX) ;   Start/Stop Times
"RTN","LEXXII",82,0)
 N LEXDA,LEXOUT,LEXIENS,LEXB,LEXBUILD,LEXB,LEXE,LEXL
"RTN","LEXXII",83,0)
 S LEXBUILD=$G(LEX),LEXD=0 S:$L(LEXBUILD) LEXD=$$DDA(LEXBUILD)
"RTN","LEXXII",84,0)
 S LEXDA=+($G(XPDA))
"RTN","LEXXII",85,0)
 I +LEXDA>0 D
"RTN","LEXXII",86,0)
 . S LEXIENS=LEXDA_","
"RTN","LEXXII",87,0)
 . D GETS^DIQ(9.7,LEXIENS,"11;17","I","LEXOUT")
"RTN","LEXXII",88,0)
 . S LEXL=0,LEXB=$G(LEXOUT(9.7,LEXIENS,11,"I"))
"RTN","LEXXII",89,0)
 . S LEXE=$$NOW^XLFDT
"RTN","LEXXII",90,0)
 . S:+LEXB>0&(+LEXE>0) LEXL=$$EP(LEXB,LEXE)
"RTN","LEXXII",91,0)
 . S LEX=LEXB_"^"_LEXE S:$L(LEXL) $P(LEX,"^",3)=LEXL
"RTN","LEXXII",92,0)
 I +LEXDA=0 D
"RTN","LEXXII",93,0)
 . S LEX="" S LEXDA=+($G(LEXD)) Q:+LEXDA'>0
"RTN","LEXXII",94,0)
 . S LEXL="",LEXB=$P($G(LEXD),"^",2) Q:$P(LEXB,".",1)'?7N
"RTN","LEXXII",95,0)
 . S LEXE=$$NOW^XLFDT
"RTN","LEXXII",96,0)
 . S:+LEXB>0&(+LEXE>0) LEXL=$$EP(LEXB,LEXE)
"RTN","LEXXII",97,0)
 . S LEX=LEXB_"^"_LEXE S:$L(LEXL) $P(LEX,"^",3)=LEXL
"RTN","LEXXII",98,0)
 Q LEX
"RTN","LEXXII",99,0)
DDA(LEX) ;   Get Default DA of Build LEX
"RTN","LEXXII",100,0)
 N LEXB,LEXE,LEXOUT,LEXMSG,LEXI S LEXB=$G(LEX) Q:'$L(LEXB) ""
"RTN","LEXXII",101,0)
 D FIND^DIC(9.7,,"11I;17I","BP",LEXB,,"B",,,"LEXOUT","LEXMSG")
"RTN","LEXXII",102,0)
 S LEXI=+($O(LEXOUT("DILIST"," "),-1))
"RTN","LEXXII",103,0)
 S LEXB=$G(LEXOUT("DILIST",+LEXI,0))
"RTN","LEXXII",104,0)
 S LEXI=$P(LEXB,"^",1),LEXE=$P(LEXB,"^",4),LEXB=$P(LEXB,"^",3)
"RTN","LEXXII",105,0)
 Q:+($G(LEXI))'>0 ""  Q:+($G(LEXB))'>0 ""  S:+LEXE'>0 LEXE=$$NOW^XLFDT
"RTN","LEXXII",106,0)
 S LEX=LEXI_"^"_LEXB_"^"_LEXE
"RTN","LEXXII",107,0)
 Q LEX
"RTN","LEXXII",108,0)
ASOF(LEX) ;   As of date/time
"RTN","LEXXII",109,0)
 S X=$$ED($$NOW^XLFDT) Q X
"RTN","LEXXII",110,0)
ED(LEX) ;   External Date MM/DD/YYYY TT:TT
"RTN","LEXXII",111,0)
 S LEX=$$FMTE^XLFDT($G(LEX),"1Z")
"RTN","LEXXII",112,0)
 S:LEX["@" LEX=$P(LEX,"@",1)_"  "_$P(LEX,"@",2,299) Q LEX
"RTN","LEXXII",113,0)
 Q LEX
"RTN","LEXXII",114,0)
EP(X,Y) ;   Elapsed Time (Begin, End)
"RTN","LEXXII",115,0)
 N LEXTIM,LEXBEG,LEXEND
"RTN","LEXXII",116,0)
 S LEXBEG=$G(X),LEXEND=$G(Y) Q:+LEXBEG'>0 ""  Q:+LEXEND'>0 ""
"RTN","LEXXII",117,0)
 S LEXTIM=$$FMDIFF^XLFDT(LEXEND,LEXBEG,2) Q:+LEXTIM'>0 "00:00:00"
"RTN","LEXXII",118,0)
 S LEXTIM=$$TIM(LEXTIM)
"RTN","LEXXII",119,0)
 Q LEXTIM
"RTN","LEXXII",120,0)
TIM(X) ;   Format Time Elapsed
"RTN","LEXXII",121,0)
 N LEXD,LEXH,LEXM,LEXS,LEXT,LEXV S X=+($G(X)) Q:X'>0 "00:00:00"
"RTN","LEXXII",122,0)
 S LEXD=X\86400 S LEXV=LEXD*86400 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXII",123,0)
 S LEXH=X\3600 S LEXV=LEXH*3600 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXII",124,0)
 S:$L(LEXH)<2 LEXH="0"_LEXH S:$L(LEXH)<2 LEXH="0"_LEXH
"RTN","LEXXII",125,0)
 S LEXM=X\60 S LEXV=LEXM*60 S:+LEXV>0&(LEXV<X) X=X-LEXV
"RTN","LEXXII",126,0)
 S:$L(LEXM)<2 LEXM="0"_LEXM S:$L(LEXM)<2 LEXM="0"_LEXM
"RTN","LEXXII",127,0)
 S LEXS=X S:$L(LEXS)<2 LEXS="0"_LEXS S:$L(LEXS)<2 LEXS="0"_LEXS
"RTN","LEXXII",128,0)
 S LEXT="" S:+LEXD>0 LEXT=+LEXD_" day"_$S(+LEXD>1:"s",1:"")_" "
"RTN","LEXXII",129,0)
 S LEXT=LEXT_LEXH_":"_LEXM_":"_LEXS,X=LEXT
"RTN","LEXXII",130,0)
 Q X
"RTN","LEXXII",131,0)
BL ;   Blank Line
"RTN","LEXXII",132,0)
 D TL("") Q
"RTN","LEXXII",133,0)
TL(LEXX) ;   Text Line
"RTN","LEXXII",134,0)
 S LEXSUB=$G(LEXSUB) S:'$L(LEXSUB) LEXSUB="LEXXII"
"RTN","LEXXII",135,0)
 I '$D(^TMP(LEXSUB,$J,1)) S ^TMP(LEXSUB,$J,1)=" ",^TMP(LEXSUB,$J,0)=1
"RTN","LEXXII",136,0)
 N LEXNX S LEXNX=$O(^TMP(LEXSUB,$J," "),-1),LEXNX=LEXNX+1
"RTN","LEXXII",137,0)
 S ^TMP(LEXSUB,$J,LEXNX)=" "_$G(LEXX),^TMP(LEXSUB,$J,0)=LEXNX
"RTN","LEXXII",138,0)
 Q
"RTN","LEXXII",139,0)
ST ;   Show Temp Array
"RTN","LEXXII",140,0)
 S LEXSUB=$G(LEXSUB) S:'$L(LEXSUB) LEXSUB="LEXXII"
"RTN","LEXXII",141,0)
 N LEXN,LEXC S LEXN="^TMP("""_LEXSUB_""","_$J_")",LEXC="^TMP("""_LEXSUB_""","_$J_","
"RTN","LEXXII",142,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEXXII",143,0)
 . Q:LEXN[",0)"  W !,@LEXN
"RTN","LEXXII",144,0)
 Q
"SEC","^DIC",757.03,757.03,0,"AUDIT")
@
"SEC","^DIC",757.03,757.03,0,"DD")
@
"SEC","^DIC",757.03,757.03,0,"DEL")
@
"SEC","^DIC",757.03,757.03,0,"LAYGO")
@
"SEC","^DIC",757.03,757.03,0,"RD")
@
"SEC","^DIC",757.03,757.03,0,"WR")
@
"VER")
8.0^22.0
"^DD",757.01,757.01,.01,0)
DISPLAYABLE TEXT^RFX^^0;1^K:$A(X)=45 X I $D(X) K:$L(X)>240!($L(X)<1) X
"^DD",757.01,757.01,.01,1,0)
^.1
"^DD",757.01,757.01,.01,1,1,0)
757.01^B
"^DD",757.01,757.01,.01,1,1,1)
S ^LEX(757.01,"B",$E($$UP^XLFSTR(X),1,63),DA)=""
"^DD",757.01,757.01,.01,1,1,2)
K ^LEX(757.01,"B",$E($$UP^XLFSTR(X),1,63),DA)
"^DD",757.01,757.01,.01,1,1,"%D",0)
^^4^4^2940902^
"^DD",757.01,757.01,.01,1,1,"%D",1,0)
^LEX(757.01,"B",EXP,IEN) - where EXP is the expression (either a Major Concept,
"^DD",757.01,757.01,.01,1,1,"%D",2,0)
Synonym or a Lexical Variant) in the Expression file #757.01 and IEN is the
"^DD",757.01,757.01,.01,1,1,"%D",3,0)
Internal Entry Number in the Expression file #757.01 where this expression is
"^DD",757.01,757.01,.01,1,1,"%D",4,0)
located.
"^DD",757.01,757.01,.01,1,2,0)
757.01^ASL^MUMPS
"^DD",757.01,757.01,.01,1,2,1)
D SSF^LEXNDX6
"^DD",757.01,757.01,.01,1,2,2)
D KSF^LEXNDX6
"^DD",757.01,757.01,.01,1,2,"%D",0)
^^3^3^2950212^
"^DD",757.01,757.01,.01,1,2,"%D",1,0)
^LEX(757.01,"ASL",STR,FREQ) - Where STR is a string found in the Clinical
"^DD",757.01,757.01,.01,1,2,"%D",2,0)
Lexicon and FREQ is the number of times (frequency) it occurrs.  This is not
"^DD",757.01,757.01,.01,1,2,"%D",3,0)
an index.
"^DD",757.01,757.01,.01,1,2,"DT")
2950212
"^DD",757.01,757.01,.01,3)
Displayable Text must be 1-240 characters in length.
"^DD",757.01,757.01,.01,21,0)
^.001^2^2^3061011^^^^
"^DD",757.01,757.01,.01,21,1,0)
This is the text which will be used to represent the expression (Major Concept,
"^DD",757.01,757.01,.01,21,2,0)
Synonym or Lexical Variant).
"^DD",757.01,757.01,.01,"DT")
3061011
"^DD",757.01,757.01,.01,"LAYGO",1,0)
I 0
"^DD",757.02,757.02,13,0)
LEGACY CODE^F^^6;2^K:$L(X)>20!($L(X)<1) X
"^DD",757.02,757.02,13,3)
Answer must be 1-20 characters in length
"^DD",757.02,757.02,13,21,0)
^^4^4^3060127^
"^DD",757.02,757.02,13,21,1,0)
This field stores a code that under a different version of the coding 
"^DD",757.02,757.02,13,21,2,0)
system represents the same concept as the code in the current coding 
"^DD",757.02,757.02,13,21,3,0)
system. E.g. SNOMED CT (the current SNOMED code system) code 123456789 
"^DD",757.02,757.02,13,21,4,0)
might have a SNOMED 2 (legacy code system) legacy code of F-12345.
"^DD",757.02,757.02,13,"DT")
3060127
"^DD",757.03,757.03,0)
FIELD^^10^9
"^DD",757.03,757.03,0,"DDA")
N
"^DD",757.03,757.03,0,"DT")
3061018
"^DD",757.03,757.03,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",757.03,757.03,0,"ID",2)
W "   ",$P(^(0),U,3)
"^DD",757.03,757.03,0,"IX","ASAB",757.03,.01)

"^DD",757.03,757.03,0,"IX","B",757.03,.01)

"^DD",757.03,757.03,0,"IX","C",757.03,1)

"^DD",757.03,757.03,0,"IX","D",757.03,7)

"^DD",757.03,757.03,0,"NM","CODING SYSTEMS")

"^DD",757.03,757.03,0,"PK")
LEX
"^DD",757.03,757.03,0,"PT",757.02,2)

"^DD",757.03,757.03,0,"VRPK")
LEX
"^DD",757.03,757.03,0,"VRRV")
41^3061001
"^DD",757.03,757.03,.01,0)
SOURCE ABBREVIATION^RF^^0;1^K:$L(X)>7!($L(X)<3) X
"^DD",757.03,757.03,.01,.1)
SAB
"^DD",757.03,757.03,.01,1,0)
^.1
"^DD",757.03,757.03,.01,1,1,0)
757.03^B
"^DD",757.03,757.03,.01,1,1,1)
S ^LEX(757.03,"B",$E(X,1,30),DA)=""
"^DD",757.03,757.03,.01,1,1,2)
K ^LEX(757.03,"B",$E(X,1,30),DA)
"^DD",757.03,757.03,.01,1,1,"%D",0)
^^3^3^2950922^^
"^DD",757.03,757.03,.01,1,1,"%D",1,0)
^LEX(757.03,"B",SAB,IEN) - where SAB is the Source Abbreviation and IEN is the
"^DD",757.03,757.03,.01,1,1,"%D",2,0)
Internal Entry Number in the Coding Systems file #757.03 where the Source is
"^DD",757.03,757.03,.01,1,1,"%D",3,0)
located.
"^DD",757.03,757.03,.01,1,2,0)
757.03^ASAB^MUMPS
"^DD",757.03,757.03,.01,1,2,1)
S ^LEX(757.03,"ASAB",$E(X,1,3),DA)=""
"^DD",757.03,757.03,.01,1,2,2)
K ^LEX(757.03,"ASAB",$E(X,1,3),DA)
"^DD",757.03,757.03,.01,1,2,"%D",0)
^^4^4^2960215^
"^DD",757.03,757.03,.01,1,2,"%D",1,0)
^LEX(757.03,"ASAB",SAB,IEN) - where SAB is a three representation of the 
"^DD",757.03,757.03,.01,1,2,"%D",2,0)
Source Abbreviation as used in the search filter DIC("S"), and IEN is the
"^DD",757.03,757.03,.01,1,2,"%D",3,0)
Internal Entry Number in the Coding Systems file #757.03 where the Source is
"^DD",757.03,757.03,.01,1,2,"%D",4,0)
located.
"^DD",757.03,757.03,.01,1,2,"DT")
2960215
"^DD",757.03,757.03,.01,3)
Answer must be 3-7 characters in length.
"^DD",757.03,757.03,.01,21,0)
^^4^4^2950110^^^^
"^DD",757.03,757.03,.01,21,1,0)
Three to six character identifier for the source of the classification
"^DD",757.03,757.03,.01,21,2,0)
code located in the Codes file (#757.02).  The normal format is a three
"^DD",757.03,757.03,.01,21,3,0)
character mnemonic for the classification source, appended with the year
"^DD",757.03,757.03,.01,21,4,0)
of publication of the source (i.e., ICD89).
"^DD",757.03,757.03,.01,"DT")
3080128
"^DD",757.03,757.03,1,0)
NOMENCLATURE^RF^^0;2^K:$L(X)>11!($L(X)<2) X
"^DD",757.03,757.03,1,1,0)
^.1
"^DD",757.03,757.03,1,1,1,0)
757.03^C
"^DD",757.03,757.03,1,1,1,1)
S ^LEX(757.03,"C",$E(X,1,30),DA)=""
"^DD",757.03,757.03,1,1,1,2)
K ^LEX(757.03,"C",$E(X,1,30),DA)
"^DD",757.03,757.03,1,1,1,"%D",1,0)
^LEX(757.03,"C",NOM,IEN) - Where NOM is the abbreviated nomenclature for a
"^DD",757.03,757.03,1,1,1,"%D",2,0)
specified coding or classification system and IEN is the Internal Entry Number
"^DD",757.03,757.03,1,1,1,"%D",3,0)
where the nomenclature is located.
"^DD",757.03,757.03,1,1,1,"DT")
2950922
"^DD",757.03,757.03,1,3)
Answer must be 2-11 characters in length.
"^DD",757.03,757.03,1,21,0)
^^2^2^2950919^^^^
"^DD",757.03,757.03,1,21,1,0)
Short title for the classification source.  This is the name normally used
"^DD",757.03,757.03,1,21,2,0)
to refer to the source (i.e., ICD-9, CPT-4, DSM-IIIR, SNOMED etc.)
"^DD",757.03,757.03,1,"DT")
2970430
"^DD",757.03,757.03,2,0)
SOURCE TITLE^RF^^0;3^K:$L(X)>52!($L(X)<2) X
"^DD",757.03,757.03,2,3)
Answer must be 2-52 characters in length.
"^DD",757.03,757.03,2,21,0)
^^2^2^2950920^^^
"^DD",757.03,757.03,2,21,1,0)
Full title of source.  Also includes edition/revision and year of
"^DD",757.03,757.03,2,21,2,0)
publication when available.
"^DD",757.03,757.03,2,"DT")
2950920
"^DD",757.03,757.03,3,0)
SOURCE^F^^0;4^K:$L(X)>50!($L(X)<2) X
"^DD",757.03,757.03,3,3)
Answer must be 2-50 characters in length.
"^DD",757.03,757.03,3,21,0)
^^1^1^2950919^
"^DD",757.03,757.03,3,21,1,0)
This is source of the named coding system.
"^DD",757.03,757.03,3,"DT")
2950919
"^DD",757.03,757.03,4,0)
ENTRIES^NJ10,0^^0;5^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.03,757.03,4,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.03,757.03,4,21,0)
^^3^3^2950919^
"^DD",757.03,757.03,4,21,1,0)
This is the number of coded entries found in the Lexicon (by classification
"^DD",757.03,757.03,4,21,2,0)
system) at the time of export.  NOTE:  This does not include deactivated
"^DD",757.03,757.03,4,21,3,0)
entries.
"^DD",757.03,757.03,4,"DT")
2950919
"^DD",757.03,757.03,5,0)
UNIQUE ENTRIES^NJ10,0^^0;6^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",757.03,757.03,5,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",757.03,757.03,5,21,0)
^^3^3^2950919^
"^DD",757.03,757.03,5,21,1,0)
This is the number of unique coded entries found in the Lexicon (by
"^DD",757.03,757.03,5,21,2,0)
classification system) at the time of export.  NOTE:  This does not include
"^DD",757.03,757.03,5,21,3,0)
deactivated entries.
"^DD",757.03,757.03,5,"DT")
2950919
"^DD",757.03,757.03,6,0)
INACTIVE VERSION^F^^0;7^K:$L(X)>20!($L(X)<1) X
"^DD",757.03,757.03,6,3)
Answer must be 1-20 characters in length.
"^DD",757.03,757.03,6,21,0)
^^2^2^2960415^
"^DD",757.03,757.03,6,21,1,0)
This represents the version number of the source file for which inactivated
"^DD",757.03,757.03,6,21,2,0)
codes are derived.
"^DD",757.03,757.03,6,"DT")
2960415
"^DD",757.03,757.03,7,0)
HL7 CODING SYSTEM^F^^0;8^K:$L(X)>40!($L(X)<2) X
"^DD",757.03,757.03,7,.1)
HL7 CODE SYSTEM
"^DD",757.03,757.03,7,1,0)
^.1
"^DD",757.03,757.03,7,1,1,0)
757.03^D
"^DD",757.03,757.03,7,1,1,1)
S ^LEX(757.03,"D",$E(X,1,30),DA)=""
"^DD",757.03,757.03,7,1,1,2)
K ^LEX(757.03,"D",$E(X,1,30),DA)
"^DD",757.03,757.03,7,1,1,"%D",0)
^^1^1^3020118^
"^DD",757.03,757.03,7,1,1,"%D",1,0)
HL7 Coding System cross reference
"^DD",757.03,757.03,7,1,1,"DT")
3020118
"^DD",757.03,757.03,7,3)
Answer must be 2-40 characters in length
"^DD",757.03,757.03,7,21,0)
^^1^1^3020118^
"^DD",757.03,757.03,7,21,1,0)
This is the HL7 coding system mnemonic for the Lexicon coding system
"^DD",757.03,757.03,7,"DT")
3020118
"^DD",757.03,757.03,10,0)
SDO VERSION^757.08D^^1;0
"^DD",757.03,757.03,10,21,0)
^^4^4^3061018^^^
"^DD",757.03,757.03,10,21,1,0)
This multiple stores the Standards Development Organization's (SDO) 
"^DD",757.03,757.03,10,21,2,0)
nomenclature that identifies the versions of their code systems and their
"^DD",757.03,757.03,10,21,3,0)
associated dates. This information will be essential to applications that
"^DD",757.03,757.03,10,21,4,0)
share code systems data with external agencies.
"^DD",757.03,757.03,10,"DT")
3061018
"^DD",757.03,757.08,0)
SDO VERSION SUB-FIELD^^1^2
"^DD",757.03,757.08,0,"DT")
3061018
"^DD",757.03,757.08,0,"IX","B",757.08,.01)

"^DD",757.03,757.08,0,"NM","SDO VERSION")

"^DD",757.03,757.08,0,"UP")
757.03
"^DD",757.03,757.08,.01,0)
SDO VERSION EFFECTIVE DATE^D^^0;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",757.03,757.08,.01,1,0)
^.1
"^DD",757.03,757.08,.01,1,1,0)
757.08^B
"^DD",757.03,757.08,.01,1,1,1)
S ^LEX(757.03,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",757.03,757.08,.01,1,1,2)
K ^LEX(757.03,DA(1),1,"B",$E(X,1,30),DA)
"^DD",757.03,757.08,.01,3)
(No range limit on date)
"^DD",757.03,757.08,.01,"DT")
3061018
"^DD",757.03,757.08,1,0)
SDO VERSION IDENTIFIER^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",757.03,757.08,1,3)
Answer must be 1-40 characters in length.
"^DD",757.03,757.08,1,21,0)
^^2^2^3060125^^
"^DD",757.03,757.08,1,21,1,0)
This is the Standards Development Organization's (SDO) nomenclature for 
"^DD",757.03,757.08,1,21,2,0)
referencing a specific version of a code system.
"^DD",757.03,757.08,1,"DT")
3061018
"^DIC",757.03,757.03,0)
CODING SYSTEMS^757.03I
"^DIC",757.03,757.03,0,"GL")
^LEX(757.03,
"^DIC",757.03,757.03,"%D",0)
^^2^2^2970704^^^^
"^DIC",757.03,757.03,"%D",1,0)
This file contains the descriptive titles for medical terminology and
"^DIC",757.03,757.03,"%D",2,0)
diagnosis and classification systems.
"^DIC",757.03,"B","CODING SYSTEMS",757.03)

"BLD",7223,6)
^53
**END**
**END**
