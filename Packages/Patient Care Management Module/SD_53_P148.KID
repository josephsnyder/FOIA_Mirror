KIDS Distribution saved on Sep 17, 1998@13:00:01This is the KIDs distribution for patch 148.**KIDS**:SD*5.3*148^**INSTALL NAME**SD*5.3*148"BLD",528,0)SD*5.3*148^SCHEDULING^0^^y"BLD",528,1,0)^^11^11^2980916^^^"BLD",528,1,1,0)As a result of Practice Profiling the need to track Primary Care Provider"BLD",528,1,2,0)is now manditory.  PCMM has been chosen to collect and track this"BLD",528,1,3,0)information.  Patch SD*5.3*148 has been developed to help address some of"BLD",528,1,4,0)the current usability issues of PCMM. "BLD",528,1,5,0)                                             "BLD",528,1,6,0)This build will only hold the changes to the server/VISTA software."BLD",528,1,7,0)Additional changes are being made to the client side and are being"BLD",528,1,8,0)distributed in another mechanism."BLD",528,1,9,0)"BLD",528,1,10,0)Please refer to the patch description, release notes and user guide for a"BLD",528,1,11,0)detailed explination of the changes."BLD",528,4,0)^9.64PA^2^1"BLD",528,4,2,0)2"BLD",528,4,2,2,0)^9.641^2^1"BLD",528,4,2,2,2,0)PATIENT  (File-top level)"BLD",528,4,2,2,2,1,0)^9.6411^404.02^2"BLD",528,4,2,2,2,1,404.01,0)*CURRENT PC PRACTITIONER"BLD",528,4,2,2,2,1,404.02,0)*CURRENT PC TEAM"BLD",528,4,2,222)y^n^p^^^^n"BLD",528,4,"APDD",2,2)"BLD",528,4,"APDD",2,2,404.01)"BLD",528,4,"APDD",2,2,404.02)"BLD",528,4,"B",2,2)"BLD",528,"ABNS",0)^9.66A^^0"BLD",528,"ABPKG")^y^G.SCHEDULING PROGRAMMERS@ISC-ALBANY.VA.GOV"BLD",528,"INIT")EN^SD148PT"BLD",528,"KRN",0)^9.67PA^19^18"BLD",528,"KRN",.4,0).4"BLD",528,"KRN",.401,0).401"BLD",528,"KRN",.402,0).402"BLD",528,"KRN",.403,0).403"BLD",528,"KRN",.5,0).5"BLD",528,"KRN",.84,0).84"BLD",528,"KRN",3.6,0)3.6"BLD",528,"KRN",3.8,0)3.8"BLD",528,"KRN",9.2,0)9.2"BLD",528,"KRN",9.8,0)9.8"BLD",528,"KRN",9.8,"NM",0)^9.68A^46^40"BLD",528,"KRN",9.8,"NM",1,0)SDUTL3^^0^B5561693"BLD",528,"KRN",9.8,"NM",2,0)SCRPTA2^^0^B24621196"BLD",528,"KRN",9.8,"NM",3,0)SCRPPAT3^^0^B25394573"BLD",528,"KRN",9.8,"NM",4,0)SCAPMC21^^0^B17060792"BLD",528,"KRN",9.8,"NM",5,0)SCAPMC18^^0^B7230204"BLD",528,"KRN",9.8,"NM",6,0)SCAPMC22^^0^B5974027"BLD",528,"KRN",9.8,"NM",7,0)SCAPMC7^^0^B9122856"BLD",528,"KRN",9.8,"NM",8,0)SCMCTMU2^^0^B7792258"BLD",528,"KRN",9.8,"NM",9,0)SCMCTPU2^^0^B7320597"BLD",528,"KRN",9.8,"NM",10,0)SCMCQK^^0^B13039243"BLD",528,"KRN",9.8,"NM",12,0)SCMCMU^^0^B16631470"BLD",528,"KRN",9.8,"NM",13,0)SCMCMU1^^0^B37357567"BLD",528,"KRN",9.8,"NM",14,0)SCMCMU2^^0^B68914281"BLD",528,"KRN",9.8,"NM",15,0)SCMCMU3^^0^B4875743"BLD",528,"KRN",9.8,"NM",16,0)SCMCMU4^^0^B37545936"BLD",528,"KRN",9.8,"NM",17,0)SDCD^^0^B9650048"BLD",528,"KRN",9.8,"NM",22,0)SCUTBK4^^0^B3479872"BLD",528,"KRN",9.8,"NM",23,0)SD148PT^^0^B18726773"BLD",528,"KRN",9.8,"NM",24,0)SCMCQK1^^0^B58186664"BLD",528,"KRN",9.8,"NM",25,0)SCMCMU11^^0^B14541369"BLD",528,"KRN",9.8,"NM",26,0)SCMCBK^^0^B50521462"BLD",528,"KRN",9.8,"NM",28,0)SCMCBK4^^0^B8180242"BLD",528,"KRN",9.8,"NM",29,0)SCMCBK5^^0^B9050999"BLD",528,"KRN",9.8,"NM",30,0)SCMCBK6^^0^B3899556"BLD",528,"KRN",9.8,"NM",31,0)SCMCBK7^^0^B14840496"BLD",528,"KRN",9.8,"NM",32,0)SCMCBK8^^0^B16392980"BLD",528,"KRN",9.8,"NM",33,0)SCMCBK9^^0^B8431416"BLD",528,"KRN",9.8,"NM",34,0)SCAPMR6^^0^B4178067"BLD",528,"KRN",9.8,"NM",35,0)SCMRBK^^0^B77742260"BLD",528,"KRN",9.8,"NM",36,0)SCMRTMM^^0^B15022517"BLD",528,"KRN",9.8,"NM",37,0)SCAPMR21^^0^B2928736"BLD",528,"KRN",9.8,"NM",38,0)SCMRTPM^^0^B14251469"BLD",528,"KRN",9.8,"NM",39,0)SCUTBK11^^0^B29593111"BLD",528,"KRN",9.8,"NM",40,0)SCAPMC23^^0^B18108399"BLD",528,"KRN",9.8,"NM",41,0)SCAPMC24^^0^B12281584"BLD",528,"KRN",9.8,"NM",42,0)SCRPM21U^^0^B63452196"BLD",528,"KRN",9.8,"NM",43,0)SCRPMPSP^^0^B76646743"BLD",528,"KRN",9.8,"NM",44,0)SCRPMTA^^0^B59723617"BLD",528,"KRN",9.8,"NM",45,0)SCMCTPU3^^0^B18143552"BLD",528,"KRN",9.8,"NM",46,0)SCMCTPU4^^0^B18591989"BLD",528,"KRN",9.8,"NM","B","SCAPMC18",5)"BLD",528,"KRN",9.8,"NM","B","SCAPMC21",4)"BLD",528,"KRN",9.8,"NM","B","SCAPMC22",6)"BLD",528,"KRN",9.8,"NM","B","SCAPMC23",40)"BLD",528,"KRN",9.8,"NM","B","SCAPMC24",41)"BLD",528,"KRN",9.8,"NM","B","SCAPMC7",7)"BLD",528,"KRN",9.8,"NM","B","SCAPMR21",37)"BLD",528,"KRN",9.8,"NM","B","SCAPMR6",34)"BLD",528,"KRN",9.8,"NM","B","SCMCBK",26)"BLD",528,"KRN",9.8,"NM","B","SCMCBK4",28)"BLD",528,"KRN",9.8,"NM","B","SCMCBK5",29)"BLD",528,"KRN",9.8,"NM","B","SCMCBK6",30)"BLD",528,"KRN",9.8,"NM","B","SCMCBK7",31)"BLD",528,"KRN",9.8,"NM","B","SCMCBK8",32)"BLD",528,"KRN",9.8,"NM","B","SCMCBK9",33)"BLD",528,"KRN",9.8,"NM","B","SCMCMU",12)"BLD",528,"KRN",9.8,"NM","B","SCMCMU1",13)"BLD",528,"KRN",9.8,"NM","B","SCMCMU11",25)"BLD",528,"KRN",9.8,"NM","B","SCMCMU2",14)"BLD",528,"KRN",9.8,"NM","B","SCMCMU3",15)"BLD",528,"KRN",9.8,"NM","B","SCMCMU4",16)"BLD",528,"KRN",9.8,"NM","B","SCMCQK",10)"BLD",528,"KRN",9.8,"NM","B","SCMCQK1",24)"BLD",528,"KRN",9.8,"NM","B","SCMCTMU2",8)"BLD",528,"KRN",9.8,"NM","B","SCMCTPU2",9)"BLD",528,"KRN",9.8,"NM","B","SCMCTPU3",45)"BLD",528,"KRN",9.8,"NM","B","SCMCTPU4",46)"BLD",528,"KRN",9.8,"NM","B","SCMRBK",35)"BLD",528,"KRN",9.8,"NM","B","SCMRTMM",36)"BLD",528,"KRN",9.8,"NM","B","SCMRTPM",38)"BLD",528,"KRN",9.8,"NM","B","SCRPM21U",42)"BLD",528,"KRN",9.8,"NM","B","SCRPMPSP",43)"BLD",528,"KRN",9.8,"NM","B","SCRPMTA",44)"BLD",528,"KRN",9.8,"NM","B","SCRPPAT3",3)"BLD",528,"KRN",9.8,"NM","B","SCRPTA2",2)"BLD",528,"KRN",9.8,"NM","B","SCUTBK11",39)"BLD",528,"KRN",9.8,"NM","B","SCUTBK4",22)"BLD",528,"KRN",9.8,"NM","B","SD148PT",23)"BLD",528,"KRN",9.8,"NM","B","SDCD",17)"BLD",528,"KRN",9.8,"NM","B","SDUTL3",1)"BLD",528,"KRN",19,0)19"BLD",528,"KRN",19,"NM",0)^9.68A^7^5"BLD",528,"KRN",19,"NM",3,0)SC PCMM GUI WORKSTATION^^0"BLD",528,"KRN",19,"NM",4,0)SDAPP^^2"BLD",528,"KRN",19,"NM",5,0)SCMC MU MASS TEAM UNASSIGNMENT^^0"BLD",528,"KRN",19,"NM",6,0)SCMC PATIENT ASSIGN/UNASSIGN^^0"BLD",528,"KRN",19,"NM",7,0)SC PCMM POSITION ASSIGN REVIEW^^0"BLD",528,"KRN",19,"NM","B","SC PCMM GUI WORKSTATION",3)"BLD",528,"KRN",19,"NM","B","SC PCMM POSITION ASSIGN REVIEW",7)"BLD",528,"KRN",19,"NM","B","SCMC MU MASS TEAM UNASSIGNMENT",5)"BLD",528,"KRN",19,"NM","B","SCMC PATIENT ASSIGN/UNASSIGN",6)"BLD",528,"KRN",19,"NM","B","SDAPP",4)"BLD",528,"KRN",19.1,0)19.1"BLD",528,"KRN",19.1,"NM",0)^9.68A^1^1"BLD",528,"KRN",19.1,"NM",1,0)SC PCMM ROLL^^0"BLD",528,"KRN",19.1,"NM","B","SC PCMM ROLL",1)"BLD",528,"KRN",101,0)101"BLD",528,"KRN",101,"NM",0)^9.68A^12^12"BLD",528,"KRN",101,"NM",1,0)SC PC PATIENT ASSIGN/UNASSIGN^^0"BLD",528,"KRN",101,"NM",2,0)SDAM MENU^^2"BLD",528,"KRN",101,"NM",3,0)SCMC MU DESELECT ALL^^0"BLD",528,"KRN",101,"NM",4,0)SCMC MU DESELECT SOME^^0"BLD",528,"KRN",101,"NM",5,0)SCMC MU MASS TEAM UNASSIGNMENT^^0"BLD",528,"KRN",101,"NM",6,0)SCMC MU QUIT^^0"BLD",528,"KRN",101,"NM",7,0)SCMC MU SELECT ALL^^0"BLD",528,"KRN",101,"NM",8,0)SCMC MU SELECT SOME^^0"BLD",528,"KRN",101,"NM",9,0)SCMC MU UNASSIGN PATIENTS^^0"BLD",528,"KRN",101,"NM",10,0)SCMC MU VIEW ALL^^0"BLD",528,"KRN",101,"NM",11,0)SCMC MU VIEW DESELECTED^^0"BLD",528,"KRN",101,"NM",12,0)SCMC MU VIEW SELECTED^^0"BLD",528,"KRN",101,"NM","B","SC PC PATIENT ASSIGN/UNASSIGN",1)"BLD",528,"KRN",101,"NM","B","SCMC MU DESELECT ALL",3)"BLD",528,"KRN",101,"NM","B","SCMC MU DESELECT SOME",4)"BLD",528,"KRN",101,"NM","B","SCMC MU MASS TEAM UNASSIGNMENT",5)"BLD",528,"KRN",101,"NM","B","SCMC MU QUIT",6)"BLD",528,"KRN",101,"NM","B","SCMC MU SELECT ALL",7)"BLD",528,"KRN",101,"NM","B","SCMC MU SELECT SOME",8)"BLD",528,"KRN",101,"NM","B","SCMC MU UNASSIGN PATIENTS",9)"BLD",528,"KRN",101,"NM","B","SCMC MU VIEW ALL",10)"BLD",528,"KRN",101,"NM","B","SCMC MU VIEW DESELECTED",11)"BLD",528,"KRN",101,"NM","B","SCMC MU VIEW SELECTED",12)"BLD",528,"KRN",101,"NM","B","SDAM MENU",2)"BLD",528,"KRN",409.61,0)409.61"BLD",528,"KRN",409.61,"NM",0)^9.68A^1^1"BLD",528,"KRN",409.61,"NM",1,0)SCMC MU MASS TEAM UNASSIGNMENT^^0"BLD",528,"KRN",409.61,"NM","B","SCMC MU MASS TEAM UNASSIGNMENT",1)"BLD",528,"KRN",771,0)771"BLD",528,"KRN",869.2,0)869.2"BLD",528,"KRN",870,0)870"BLD",528,"KRN",8994,0)8994"BLD",528,"KRN",8994,"NM",0)^9.68A^8^8"BLD",528,"KRN",8994,"NM",1,0)SC ACTIVE POSITION ASSIGNMENTS^^0"BLD",528,"KRN",8994,"NM",2,0)SCMC BLD REASSIGN PAT LIST^^0"BLD",528,"KRN",8994,"NM",3,0)SCMC BLD TEAM PAT LIST^^0"BLD",528,"KRN",8994,"NM",4,0)SCMC DIS TEAM POS^^0"BLD",528,"KRN",8994,"NM",5,0)SCMC FILE PAT POS REASGN^^0"BLD",528,"KRN",8994,"NM",6,0)SCMC FILE PAT TM REASGN^^0"BLD",528,"KRN",8994,"NM",7,0)SCMC BLD POS PAT LIST^^0"BLD",528,"KRN",8994,"NM",8,0)SCMC POSITION ASSIGN LIST^^0"BLD",528,"KRN",8994,"NM","B","SC ACTIVE POSITION ASSIGNMENTS",1)"BLD",528,"KRN",8994,"NM","B","SCMC BLD POS PAT LIST",7)"BLD",528,"KRN",8994,"NM","B","SCMC BLD REASSIGN PAT LIST",2)"BLD",528,"KRN",8994,"NM","B","SCMC BLD TEAM PAT LIST",3)"BLD",528,"KRN",8994,"NM","B","SCMC DIS TEAM POS",4)"BLD",528,"KRN",8994,"NM","B","SCMC FILE PAT POS REASGN",5)"BLD",528,"KRN",8994,"NM","B","SCMC FILE PAT TM REASGN",6)"BLD",528,"KRN",8994,"NM","B","SCMC POSITION ASSIGN LIST",8)"BLD",528,"KRN","B",.4,.4)"BLD",528,"KRN","B",.401,.401)"BLD",528,"KRN","B",.402,.402)"BLD",528,"KRN","B",.403,.403)"BLD",528,"KRN","B",.5,.5)"BLD",528,"KRN","B",.84,.84)"BLD",528,"KRN","B",3.6,3.6)"BLD",528,"KRN","B",3.8,3.8)"BLD",528,"KRN","B",9.2,9.2)"BLD",528,"KRN","B",9.8,9.8)"BLD",528,"KRN","B",19,19)"BLD",528,"KRN","B",19.1,19.1)"BLD",528,"KRN","B",101,101)"BLD",528,"KRN","B",409.61,409.61)"BLD",528,"KRN","B",771,771)"BLD",528,"KRN","B",869.2,869.2)"BLD",528,"KRN","B",870,870)"BLD",528,"KRN","B",8994,8994)"BLD",528,"QUES",0)^9.62^^"BLD",528,"REQB",0)^9.611^3^3"BLD",528,"REQB",1,0)XWB*1.1*1^0"BLD",528,"REQB",2,0)DI*21.0*34^2"BLD",528,"REQB",3,0)SD*5.3*51^2"BLD",528,"REQB","B","DI*21.0*34",2)"BLD",528,"REQB","B","SD*5.3*51",3)"BLD",528,"REQB","B","XWB*1.1*1",1)"FIA",2)PATIENT"FIA",2,0)^DPT("FIA",2,0,0)2I"FIA",2,0,1)y^n^p^^^^n"FIA",2,0,10)"FIA",2,0,11)"FIA",2,0,"RLRO")"FIA",2,0,"VR")5.3^SD"FIA",2,2)1"FIA",2,2,404.01)"FIA",2,2,404.02)"INIT")EN^SD148PT"KRN",19,232,-1)2^4"KRN",19,232,0)SDAPP^Appointment Menu^^M^.5^^^^^^^16^^^1"KRN",19,232,10,0)^19.01PI^25^25"KRN",19,232,10,25,0)6320"KRN",19,232,10,25,"^")SCMC PATIENT ASSIGN/UNASSIGN"KRN",19,232,"U")APPOINTMENT MENU"KRN",19,5211,-1)0^3"KRN",19,5211,0)SC PCMM GUI WORKSTATION^PCMM GUI Workstation^^B^^^^^^^^SCHEDULING"KRN",19,5211,1,0)^^5^5^2980827^^^^"KRN",19,5211,1,1,0)This is a new 'B' type of option.  For users to be able to use the"KRN",19,5211,1,2,0)Primary Care Management Module's GUI front-end, this option must"KRN",19,5211,1,3,0)be on either their primary or secondary menu options.  Putting this"KRN",19,5211,1,4,0)option on a menu will give users who have access to that menu, access"KRN",19,5211,1,5,0)to PCMM.  Note: 'B' type options are not visible to roll & scroll users."KRN",19,5211,99.1)56720,37422"KRN",19,5211,"RPC",0)^19.05P^79^78"KRN",19,5211,"RPC",2,0)SC BLD PAT CLN LIST"KRN",19,5211,"RPC",3,0)SC BLD PAT LIST"KRN",19,5211,"RPC",6,0)SC CHANGE HISTORY OK"KRN",19,5211,"RPC",7,0)SC DELETE ENTRY"KRN",19,5211,"RPC",8,0)SC DELETE HISTORY"KRN",19,5211,"RPC",9,0)SC FILE NUMBER"KRN",19,5211,"RPC",10,0)SC FILE PAT TM ASGN"KRN",19,5211,"RPC",12,0)SC FILE SINGLE VALUE"KRN",19,5211,"RPC",13,0)SC FILER"KRN",19,5211,"RPC",14,0)SC FIND"KRN",19,5211,"RPC",15,0)SC GET PAT BLOCK"KRN",19,5211,"RPC",18,0)SC GETS ENTRY DATA"KRN",19,5211,"RPC",19,0)SC GLOBAL NODE"KRN",19,5211,"RPC",20,0)SC GLOBAL NODE COUNT"KRN",19,5211,"RPC",21,0)SC HISTORY STATUS OK"KRN",19,5211,"RPC",22,0)SC INACTIVATE ENTRY"KRN",19,5211,"RPC",23,0)SC LISTER"KRN",19,5211,"RPC",24,0)SC LOCK/UNLOCK NODE"KRN",19,5211,"RPC",25,0)SC MAILMAN"KRN",19,5211,"RPC",26,0)SC MEAN TEST"KRN",19,5211,"RPC",27,0)SC NEW HISTORY OK"KRN",19,5211,"RPC",28,0)SC PATIENT LOOKUP"KRN",19,5211,"RPC",29,0)SC POSITION MEMBERS"KRN",19,5211,"RPC",30,0)SC PRIMARY CARE TEAM"KRN",19,5211,"RPC",31,0)SC PRTP"KRN",19,5211,"RPC",32,0)SC STAFF LOOKUP"KRN",19,5211,"RPC",33,0)SC TEAM LIST"KRN",19,5211,"RPC",34,0)SC USER CLASS STATUS"KRN",19,5211,"RPC",35,0)SC VALIDATOR"KRN",19,5211,"RPC",36,0)SCRP DEFINITION GETRECORD"KRN",19,5211,"RPC",37,0)SCRP FILE ENTRY GETSELECTION"KRN",19,5211,"RPC",38,0)SCRP QUERY CHECK NAME"KRN",19,5211,"RPC",39,0)SCRP QUERY DELETE"KRN",19,5211,"RPC",40,0)SCRP QUERY GETRECORD"KRN",19,5211,"RPC",41,0)SCRP QUERY SAVE"KRN",19,5211,"RPC",42,0)SCRP QUERY VALIDATE"KRN",19,5211,"RPC",43,0)SCRP REPORT PRINT"KRN",19,5211,"RPC",44,0)SCRP SELECTION SOURCE"KRN",19,5211,"RPC",45,0)SCTM AUTOLINK GETLINK"KRN",19,5211,"RPC",46,0)SCTM AUTOLINK GETRECORD"KRN",19,5211,"RPC",47,0)SCTM AUTOLINK SETRECORD"KRN",19,5211,"RPC",48,0)SCUT GET USER RECORD"KRN",19,5211,"RPC",49,0)SCUT SET USER QUERY DEFAULT"KRN",19,5211,"RPC",50,0)SC KEY CHECK"KRN",19,5211,"RPC",51,0)SC BLD PAT SCDE LIST"KRN",19,5211,"RPC",52,0)SC BLD PAT TM LIST"KRN",19,5211,"RPC",53,0)SC FILE PAT POS ASGN"KRN",19,5211,"RPC",54,0)SC BLD PAT POS LIST"KRN",19,5211,"RPC",55,0)SC PAT ENROLL CLN"KRN",19,5211,"RPC",56,0)SC CHECK FOR PC POS"KRN",19,5211,"RPC",57,0)SC FILE ALL PAT TM ASGN"KRN",19,5211,"RPC",58,0)SC BLD PAT APT LIST"KRN",19,5211,"RPC",59,0)SC FILE ALL PAT POS ASGN"KRN",19,5211,"RPC",60,0)SC BLD NOPC TM LIST"KRN",19,5211,"RPC",61,0)SC PAT ASGN MAILMAN"KRN",19,5211,"RPC",62,0)DDR FILER"KRN",19,5211,"RPC",63,0)DDR FIND1"KRN",19,5211,"RPC",64,0)DDR FINDER"KRN",19,5211,"RPC",65,0)DDR GET DD HELP"KRN",19,5211,"RPC",66,0)DDR DELETE ENTRY"KRN",19,5211,"RPC",67,0)DDR GETS ENTRY DATA"KRN",19,5211,"RPC",68,0)DDR LISTER"KRN",19,5211,"RPC",69,0)DDR LOCK/UNLOCK NODE"KRN",19,5211,"RPC",70,0)DDR VALIDATOR"KRN",19,5211,"RPC",71,0)SC ACTIVE POSITION ASSIGNMENTS"KRN",19,5211,"RPC",72,0)SCMC DIS TEAM POS"KRN",19,5211,"RPC",73,0)SCMC BLD TEAM PAT LIST"KRN",19,5211,"RPC",75,0)SCMC BLD REASSIGN PAT LIST"KRN",19,5211,"RPC",76,0)SCMC FILE PAT POS REASGN"KRN",19,5211,"RPC",77,0)SCMC FILE PAT TM REASGN"KRN",19,5211,"RPC",78,0)SCMC BLD POS PAT LIST"KRN",19,5211,"RPC",79,0)SCMC POSITION ASSIGN LIST"KRN",19,5211,"U")PCMM GUI WORKSTATION"KRN",19,6320,-1)0^6"KRN",19,6320,0)SCMC PATIENT ASSIGN/UNASSIGN^Primary Care Team/Posn Assign or Unassign^^A^^SC PCMM ROLL^^^^^^SCHEDULING^^1"KRN",19,6320,1,0)^^27^27^2980915^^^^"KRN",19,6320,1,1,0)Determines patient's Primary Care status.  Based on status it will prompt"KRN",19,6320,1,2,0)the user to select from the following choices:"KRN",19,6320,1,3,0) "KRN",19,6320,1,4,0)  o  Assign patient to Primary Care team (if not currently assigned)"KRN",19,6320,1,5,0)  o  Assign patient to PC Practitioner position (if assigned to a team,"KRN",19,6320,1,6,0)     but not PC practitioner).  User can look-up by either position name"KRN",19,6320,1,7,0)     or the current practitioner assigned to the position."KRN",19,6320,1,8,0)  o  Unassign from team (if assigned to a PC team).  If patient is"KRN",19,6320,1,9,0)     assigned to PC position, both the PC position and PC team will be"KRN",19,6320,1,10,0)     unassigned."KRN",19,6320,1,11,0)     If the patient is assigned to a non-PC position, the PCMM GUI"KRN",19,6320,1,12,0)     interface must be used."KRN",19,6320,1,13,0)  o  Unassign from position (if assigned to a PC Practitioner position)."KRN",19,6320,1,14,0) "KRN",19,6320,1,15,0)While assigning/unassigning from a position: If the position has an"KRN",19,6320,1,16,0)Associated Clinic, the user will be prompted to enroll/discharge the"KRN",19,6320,1,17,0)patient from that Associated Clinic."KRN",19,6320,1,18,0) "KRN",19,6320,1,19,0)Limitations:"KRN",19,6320,1,20,0)  o  Does not provide edit or delete functionality.  "KRN",19,6320,1,21,0)  o  Does not allow for re-assignment for patients with future PC"KRN",19,6320,1,22,0)     assignments."KRN",19,6320,1,23,0)  o  Requires that position has a practitioner currently assigned to it."KRN",19,6320,1,24,0)  o  Will not assign or unassign patients to non-primary care teams or"KRN",19,6320,1,25,0)     to non PC Practitioner positions."KRN",19,6320,1,26,0) "KRN",19,6320,1,27,0)To overcome the above limitations, the PCMM GUI must be used."KRN",19,6320,20)D EN^SCMCQK"KRN",19,6320,99)57544,58472"KRN",19,6320,"U")PRIMARY CARE TEAM/POSN ASSIGN "KRN",19,6348,-1)0^5"KRN",19,6348,0)SCMC MU MASS TEAM UNASSIGNMENT^Mass Team/Position Unassignment^^A^^^^^^^^SCHEDULING^^1"KRN",19,6348,1,0)^^16^16^2980915^^^^"KRN",19,6348,1,1,0) The Mass Team/Position Unassignment option can be used to unassign a large"KRN",19,6348,1,2,0) number of patients from an active team or an active position using the List"KRN",19,6348,1,3,0) Manager functionality.  It is recommended that distribution of this option be"KRN",19,6348,1,4,0) limited."KRN",19,6348,1,5,0) "KRN",19,6348,1,6,0) The effective date you choose for the unassignment may be in the past, today,"KRN",19,6348,1,7,0) or in the future.  The list of patients displayed contains all patients with"KRN",19,6348,1,8,0) assignments to the selected team/position, as of the selected effective date"KRN",19,6348,1,9,0) or after the effective date.  Those with assignment dates in the future will"KRN",19,6348,1,10,0) show an asterisk (*) next to the assigned date. "KRN",19,6348,1,11,0) "KRN",19,6348,1,12,0) When patients are unassigned from the team, they are also automatically"KRN",19,6348,1,13,0) unassigned from any associated position.  If a position is associated with"KRN",19,6348,1,14,0) a clinic, you are given the opportunity to also discharge patients from"KRN",19,6348,1,15,0) the clinic."KRN",19,6348,1,16,0) "KRN",19,6348,20)D EN^SCMCMU"KRN",19,6348,99.1)57559,45868"KRN",19,6348,"U")MASS TEAM/POSITION UNASSIGNMEN"KRN",19,6356,-1)0^7"KRN",19,6356,0)SC PCMM POSITION ASSIGN REVIEW^Patient Team Position Assignment Review^^R^^^^^^^^SCHEDULING"KRN",19,6356,1,0)^^31^31^2980916^^^^"KRN",19,6356,1,1,0)This option compares all PATIENT TEAM POSITION ASSIGNMENT (#404.43) file"KRN",19,6356,1,2,0)entries with the corresponding PATIENT TEAM ASSIGNMENT (#404.42) file entries."KRN",19,6356,1,3,0)The comparison checks to make sure that the position assignment active "KRN",19,6356,1,4,0)timeframe is within the team assignment active timeframe."KRN",19,6356,1,5,0) "KRN",19,6356,1,6,0)This report lists those position assignments that fall outside the team"KRN",19,6356,1,7,0)assignment active timeframe."KRN",19,6356,1,8,0) "KRN",19,6356,1,9,0)For example, the following situation would be listed on the report since"KRN",19,6356,1,10,0)the team assignment is inactive but the position assignment is still"KRN",19,6356,1,11,0)active."KRN",19,6356,1,12,0) "KRN",19,6356,1,13,0)                         Assigned              Unassigned"KRN",19,6356,1,14,0)                           Date                   Date"KRN",19,6356,1,15,0)                         --------              ----------"KRN",19,6356,1,16,0)   Team Assignment      01/01/1997             10/31/1997"KRN",19,6356,1,17,0)   Position Assignment  02/15/1997               <none>"KRN",19,6356,1,18,0) "KRN",19,6356,1,19,0) "KRN",19,6356,1,20,0) "KRN",19,6356,1,21,0)Note: The PCMM software has been changed to prevent this and similar"KRN",19,6356,1,22,0)      situations from occurring. However, older versions of PCMM did"KRN",19,6356,1,23,0)      allow these assignment timeframe problems to occur. This report"KRN",19,6356,1,24,0)      should help the site correct these problem assignments."KRN",19,6356,1,25,0) "KRN",19,6356,1,26,0) "KRN",19,6356,1,27,0)Note: Currently, this report can only be run in a 'diagnostic' mode."KRN",19,6356,1,28,0)      In the future, the report maybe enhanced to run in a 'fix' mode."KRN",19,6356,1,29,0)      The 'fix' mode option would also correct the problem assignments"KRN",19,6356,1,30,0)      based on criteria the user specifies."KRN",19,6356,1,31,0)      "KRN",19,6356,25)EN^SCMCTPU3"KRN",19,6356,99.1)57589,82830"KRN",19,6356,"U")PATIENT TEAM POSITION ASSIGNME"KRN",19.1,246,-1)0^1"KRN",19.1,246,0)SC PCMM ROLL^PRIMARY CARE ASSIGN/UN-ASSIGN"KRN",19.1,246,1,0)^^1^1^2980720^"KRN",19.1,246,1,1,0)Allows access to the Primary Care Team/Posn Assign or Discharge option."KRN",101,121,-1)2^2"KRN",101,121,0)SDAM MENU^Appointment Management^^M^3^^^^^^^16"KRN",101,121,1,0)^^2^2^2980720^^^^"KRN",101,121,1,1,0)This menu contains all the activities for the appointment"KRN",101,121,1,2,0)management option."KRN",101,121,4)26^4"KRN",101,121,10,0)^101.01PA^34^34"KRN",101,121,10,34,0)1978^PC^^"KRN",101,121,10,34,"^")SC PC PATIENT ASSIGN/UNASSIGN"KRN",101,121,10,"B",122,1)"KRN",101,121,10,"B",124,11)"KRN",101,121,10,"B",126,3)"KRN",101,121,10,"B",132,4)"KRN",101,121,10,"B",133,5)"KRN",101,121,10,"B",134,6)"KRN",101,121,10,"B",135,7)"KRN",101,121,10,"B",449,22)"KRN",101,121,10,"B",561,17)"KRN",101,121,10,"B",645,19)"KRN",101,121,10,"B",684,23)"KRN",101,121,10,"B",695,24)"KRN",101,121,10,"B",714,26)"KRN",101,121,10,"B",715,27)"KRN",101,121,10,"B",716,28)"KRN",101,121,10,"B",717,29)"KRN",101,121,10,"B",718,30)"KRN",101,121,10,"B",782,31)"KRN",101,121,10,"B",851,25)"KRN",101,121,10,"B",1632,32)"KRN",101,121,10,"B",1667,33)"KRN",101,121,10,"B",1978,34)"KRN",101,121,15)"KRN",101,121,20)"KRN",101,121,24)I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^",1),24)) ^(24)"KRN",101,121,26)D SHOW^VALM"KRN",101,121,27)"KRN",101,121,28)Select Action: "KRN",101,121,29)"KRN",101,121,99)57552,26695"KRN",101,1952,-1)0^5"KRN",101,1952,0)SCMC MU MASS TEAM UNASSIGNMENT^Mass Team Unassignment^^M^^^^^^^^SCHEDULING"KRN",101,1952,1,0)^^1^1^2980812^"KRN",101,1952,1,1,0) "KRN",101,1952,4)26^4"KRN",101,1952,10,0)^101.01PA^13^12"KRN",101,1952,10,2,0)1961^QU^12^"KRN",101,1952,10,2,"^")SCMC MU QUIT"KRN",101,1952,10,3,0)1953^SA^1^"KRN",101,1952,10,3,"^")SCMC MU SELECT ALL"KRN",101,1952,10,4,0)1954^DA^2^"KRN",101,1952,10,4,"^")SCMC MU DESELECT ALL"KRN",101,1952,10,5,0)1955^SP^3^"KRN",101,1952,10,5,"^")SCMC MU SELECT SOME"KRN",101,1952,10,6,0)1956^DP^4^"KRN",101,1952,10,6,"^")SCMC MU DESELECT SOME"KRN",101,1952,10,7,0)1957^VA^5^"KRN",101,1952,10,7,"^")SCMC MU VIEW ALL"KRN",101,1952,10,8,0)1958^VS^6^"KRN",101,1952,10,8,"^")SCMC MU VIEW SELECTED"KRN",101,1952,10,9,0)1959^VD^7^"KRN",101,1952,10,9,"^")SCMC MU VIEW DESELECTED"KRN",101,1952,10,10,0)1960^UN^9^"KRN",101,1952,10,10,"^")SCMC MU UNASSIGN PATIENTS"KRN",101,1952,26)DO SHOW^VALM"KRN",101,1952,28)Select Action: "KRN",101,1952,99)57565,57004"KRN",101,1953,-1)0^7"KRN",101,1953,0)SCMC MU SELECT ALL^Select All^^A^^^^^^^^SCHEDULING"KRN",101,1953,4)^^^ALL"KRN",101,1953,20)D ALL^SCMCMU1("SELECT")"KRN",101,1953,99)57537,58686"KRN",101,1954,-1)0^3"KRN",101,1954,0)SCMC MU DESELECT ALL^DeSelect All^^A^^^^^^^^SCHEDULING"KRN",101,1954,20)D ALL^SCMCMU1("DE-SELECT")"KRN",101,1954,99)57538,37175"KRN",101,1955,-1)0^8"KRN",101,1955,0)SCMC MU SELECT SOME^Select Patients^^A^^^^^^^^SCHEDULING"KRN",101,1955,20)D SOME^SCMCMU1("SELECT")"KRN",101,1955,99)57538,37013"KRN",101,1956,-1)0^4"KRN",101,1956,0)SCMC MU DESELECT SOME^DeSelect Patients^^A^^^^^^^^SCHEDULING"KRN",101,1956,20)D SOME^SCMCMU1("DE-SELECT")"KRN",101,1956,99)57538,37129"KRN",101,1957,-1)0^10"KRN",101,1957,0)SCMC MU VIEW ALL^View All^^A^^^^^^^^SCHEDULING"KRN",101,1957,20)D VIEW^SCMCMU1("ALL")"KRN",101,1957,99)57538,38811"KRN",101,1958,-1)0^12"KRN",101,1958,0)SCMC MU VIEW SELECTED^View Selected^^A^^^^^^^^SCHEDULING"KRN",101,1958,20)D VIEW^SCMCMU1("SELECT")"KRN",101,1958,99)57538,38873"KRN",101,1959,-1)0^11"KRN",101,1959,0)SCMC MU VIEW DESELECTED^View DeSelected^^A^^^^^^^^SCHEDULING"KRN",101,1959,20)D VIEW^SCMCMU1("DE-SELECT")"KRN",101,1959,99)57538,38930"KRN",101,1960,-1)0^9"KRN",101,1960,0)SCMC MU UNASSIGN PATIENTS^Unassign Patients^^A^^^^^^^^SCHEDULING"KRN",101,1960,1,0)^^3^3^2980915^^"KRN",101,1960,1,1,0) "KRN",101,1960,1,2,0) "KRN",101,1960,1,3,0) "KRN",101,1960,20)D UNASSIGN^SCMCMU11"KRN",101,1960,99)57538,46771"KRN",101,1961,-1)0^6"KRN",101,1961,0)SCMC MU QUIT^Quit^^A^^^^^^^^SCHEDULING"KRN",101,1961,20)DO QUIT^SCMCMU11"KRN",101,1961,99)57541,48389"KRN",101,1978,-1)0^1"KRN",101,1978,0)SC PC PATIENT ASSIGN/UNASSIGN^PC Assign or Unassign^^A^^SC PCMM ROLL^^^^^^SCHEDULING"KRN",101,1978,1,0)^^2^2^2980728^"KRN",101,1978,1,1,0)Used to assign/unassign patient to primary care team and/or primary"KRN",101,1978,1,2,0)care practitioner position."KRN",101,1978,15)S VALMBCK="R" D HOME^%ZIS"KRN",101,1978,20)D FULL^VALM1 D:$G(DFN) PAT^SCMCQK D:'$G(DFN) EN^SCMCQK"KRN",101,1978,26)"KRN",101,1978,99)57548,62456"KRN",409.61,635,-1)0^1"KRN",409.61,635,0)SCMC MU MASS TEAM UNASSIGNMENT^1^^80^6^18^0^1^Patient^SCMC MU MASS TEAM UNASSIGNMENT^Mass Team Unassignment^1^^1"KRN",409.61,635,1)^VALM HIDDEN ACTIONS"KRN",409.61,635,"ARRAY") ^TMP("SCMU LM ARRAY",$J)"KRN",409.61,635,"COL",0)^409.621^5^5"KRN",409.61,635,"COL",1,0)NAME^15^25^Patient Name^"KRN",409.61,635,"COL",2,0)ID^42^12^ID^"KRN",409.61,635,"COL",3,0)SELECTED^5^8^Selected^"KRN",409.61,635,"COL",4,0)ASSIGNED DATE^56^8^Assigned"KRN",409.61,635,"COL",5,0)UNASSIGNED DATE^69^10^Unassigned"KRN",409.61,635,"COL","B","ASSIGNED DATE",4)"KRN",409.61,635,"COL","B","ID",2)"KRN",409.61,635,"COL","B","NAME",1)"KRN",409.61,635,"COL","B","SELECTED",3)"KRN",409.61,635,"COL","B","UNASSIGNED DATE",5)"KRN",409.61,635,"FNL")D EXIT^SCMCMU1"KRN",409.61,635,"HDR")D HDR^SCMCMU1"KRN",409.61,635,"HLP")D HELP^SCMCMU1"KRN",409.61,635,"INIT")D INIT^SCMCMU1"KRN",8994,279,-1)0^3"KRN",8994,279,0)SCMC BLD TEAM PAT LIST^PTTMLST^SCMRBK^1^P"KRN",8994,279,2,0)^8994.02A^1^1"KRN",8994,279,2,1,0)LIST ATTRIBUTES^2^512^1"KRN",8994,279,2,"B","LIST ATTRIBUTES",1)"KRN",8994,280,-1)0^1"KRN",8994,280,0)SC ACTIVE POSITION ASSIGNMENTS^ACTPOS^SCUTBK4^4^A^^^1"KRN",8994,280,1,0)^^2^2^2980804^^^^"KRN",8994,280,1,1,0)This RPC is used to obtain the active positions associated with a patient"KRN",8994,280,1,2,0)team assignment."KRN",8994,280,2,0)^8994.02A^1^1"KRN",8994,280,2,1,0)INPU^2^512^1"KRN",8994,280,2,1,1,0)^^1^1^2980722^^"KRN",8994,280,2,1,1,1,0)The parameters are DFN, Beginning date range, Ending date range, and Team"KRN",8994,280,2,"B","INPU",1)"KRN",8994,280,3,0)^^11^11^2980722^^^"KRN",8994,280,3,1,0)The results parameter will contain a global reference that will contain the"KRN",8994,280,3,2,0)following information:"KRN",8994,280,3,3,0)IEN of Team Position file"KRN",8994,280,3,4,0)Name of position"KRN",8994,280,3,5,0)Current effective date"KRN",8994,280,3,6,0)Pointer to role"KRN",8994,280,3,7,0)Name of role"KRN",8994,280,3,8,0)Pointer to user class"KRN",8994,280,3,9,0)Name of user class"KRN",8994,280,3,10,0)Refer to the routine for details"KRN",8994,280,3,11,0) "KRN",8994,281,-1)0^6"KRN",8994,281,0)SCMC FILE PAT TM REASGN^PTFILE^SCMRBK^2"KRN",8994,281,2,0)^8994.02A^1^1"KRN",8994,281,2,1,0)LIST ATTRIBUTES^2^512^1"KRN",8994,281,2,"B","LIST ATTRIBUTES",1)"KRN",8994,282,-1)0^2"KRN",8994,282,0)SCMC BLD REASSIGN PAT LIST^PTLSTBLD^SCMRBK^1"KRN",8994,282,2,0)^8994.02A^1^1"KRN",8994,282,2,1,0)SCVAL^1^512^1"KRN",8994,282,2,"B","SCVAL",1)"KRN",8994,283,-1)0^4"KRN",8994,283,0)SCMC DIS TEAM POS^DISCHPOS^SCMRBK^1"KRN",8994,283,2,0)^8994.02A^1^1"KRN",8994,283,2,1,0)LIST ATTRIBUTES^2^512"KRN",8994,283,2,"B","LIST ATTRIBUTES",1)"KRN",8994,284,-1)0^5"KRN",8994,284,0)SCMC FILE PAT POS REASGN^POSFILE^SCMRBK^2"KRN",8994,284,2,0)^8994.02A^1^1"KRN",8994,284,2,1,0)LIST ATTRIBUTES^2^512^1"KRN",8994,284,2,"B","LIST ATTRIBUTES",1)"KRN",8994,286,-1)0^7"KRN",8994,286,0)SCMC BLD POS PAT LIST^PTPOSLST^SCMRBK^1^P"KRN",8994,286,2,0)^8994.02A^3^3"KRN",8994,286,2,1,0)LIS"KRN",8994,286,2,2,0)LIST^2^512^1"KRN",8994,286,2,3,0)LIST ATTRIBUTES^2^512^1"KRN",8994,286,2,"B","LIS",1)"KRN",8994,286,2,"B","LIST",2)"KRN",8994,286,2,"B","LIST ATTRIBUTES",3)"KRN",8994,288,-1)0^8"KRN",8994,288,0)SCMC POSITION ASSIGN LIST^PSALST^SCUTBK11^2"KRN",8994,288,1,0)^^1^1^2980910^^^"KRN",8994,288,1,1,0) "KRN",8994,288,2,0)^8994.02A^1^1"KRN",8994,288,2,1,0)LIST ATTRIBUTES^2^512^1"KRN",8994,288,2,"B","LIST ATTRIBUTES",1)"KRN",8994,288,3,0)^^1^1^2980910^^"KRN",8994,288,3,1,0) "OER",16,0)16^SD^^M.A.S.^"OER",16,1,0)^100.9951PA^2^2"OER",16,1,1,0)103"OER",16,1,1,1,0)^100.99511PA^1^1"OER",16,1,1,1,1,0)101"OER",16,1,2,0)645"OER",16,1,2,1,0)^100.99511PA^1^1"OER",16,1,2,1,1,0)121"ORD",3,19.1)19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1"ORD",3,19.1,0)SECURITY KEY"ORD",15,101)101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA"ORD",15,101,0)PROTOCOL"ORD",16,8994)8994;16;1;;;;;;;RPCDEL^XPDIA1"ORD",16,8994,0)REMOTE PROCEDURE"ORD",17,409.61)409.61;17;1;;;;;;;LMDEL^XPDIA1"ORD",17,409.61,0)LIST TEMPLATE"ORD",18,19)19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA"ORD",18,19,0)OPTION"PKG",16,-1)1^1"PKG",16,0)SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS"PKG",16,20,0)^9.402P^^"PKG",16,22,0)^9.49I^1^1"PKG",16,22,1,0)5.3^2941102"PKG",16,22,1,"PAH",1,0)148"PKG",16,22,1,"PAH",1,1,0)^^11^11^2980917"PKG",16,22,1,"PAH",1,1,1,0)As a result of Practice Profiling the need to track Primary Care Provider"PKG",16,22,1,"PAH",1,1,2,0)is now manditory.  PCMM has been chosen to collect and track this"PKG",16,22,1,"PAH",1,1,3,0)information.  Patch SD*5.3*148 has been developed to help address some of"PKG",16,22,1,"PAH",1,1,4,0)the current usability issues of PCMM. "PKG",16,22,1,"PAH",1,1,5,0)                                             "PKG",16,22,1,"PAH",1,1,6,0)This build will only hold the changes to the server/VISTA software."PKG",16,22,1,"PAH",1,1,7,0)Additional changes are being made to the client side and are being"PKG",16,22,1,"PAH",1,1,8,0)distributed in another mechanism."PKG",16,22,1,"PAH",1,1,9,0)"PKG",16,22,1,"PAH",1,1,10,0)Please refer to the patch description, release notes and user guide for a"PKG",16,22,1,"PAH",1,1,11,0)detailed explination of the changes."QUES","XPF1",0)Y"QUES","XPF1","??")^D REP^XPDH"QUES","XPF1","A")Shall I write over your |FLAG| File"QUES","XPF1","B")YES"QUES","XPF1","M")D XPF1^XPDIQ"QUES","XPF2",0)Y"QUES","XPF2","??")^D DTA^XPDH"QUES","XPF2","A")Want my data |FLAG| yours"QUES","XPF2","B")YES"QUES","XPF2","M")D XPF2^XPDIQ"QUES","XPM1",0)PO^VA(200,:EM"QUES","XPM1","??")^D MG^XPDH"QUES","XPM1","A")Enter the Coordinator for Mail Group '|FLAG|'"QUES","XPM1","B")"QUES","XPM1","M")D XPM1^XPDIQ"QUES","XPZ1",0)Y"QUES","XPZ1","??")^D OPT^XPDH"QUES","XPZ1","A")Want to DISABLE Scheduled Options, Menu Options, and Protocols"QUES","XPZ1","B")YES"QUES","XPZ1","M")D XPZ1^XPDIQ"QUES","XPZ2",0)Y"QUES","XPZ2","??")^D RTN^XPDH"QUES","XPZ2","A")Want to MOVE routines to other CPUs"QUES","XPZ2","B")NO"QUES","XPZ2","M")D XPZ2^XPDIQ"RTN")40"RTN","SCAPMC18")0^5^B7230204"RTN","SCAPMC18",1,0)SCAPMC18 ;ALB/REW - Team APIs:ACPTCL ; 5 Jul 1995"RTN","SCAPMC18",2,0) ;;5.3;Scheduling;**41,45,50,130,148**;AUG 13, 1993"RTN","SCAPMC18",3,0) ;;1.0"RTN","SCAPMC18",4,0)ACPTCL(DFN,SCCL,SCFIELDA,SCACT,SCERR) ;add a patient to a clinic (enrollment)"RTN","SCAPMC18",5,0) ; input:"RTN","SCAPMC18",6,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCAPMC18",7,0) ;  SCCL    = pointer to HOSPITAL LOCATION file (#44)"RTN","SCAPMC18",8,0) ;  SCFIELDA= array of additional fields to be added"RTN","SCAPMC18",9,0) ;  SCACT   = date to activate [default=DT]"RTN","SCAPMC18",10,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC18",11,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC18",12,0) ;"RTN","SCAPMC18",13,0) ; Output:"RTN","SCAPMC18",14,0) ;  Returned = ien of enrollment multiple - 0 if none after^new?"RTN","SCAPMC18",15,0) ;  SCERR() = Array of DIALOG file messages(errors)."RTN","SCAPMC18",16,0) ;             Foramt:"RTN","SCAPMC18",17,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC18",18,0) ;               Piece     Description"RTN","SCAPMC18",19,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC18",20,0) N SCPTCL,SCESEQ,SCPARM,SCIEN,SC,SCFLD,SCNEWCL,DIC,X,SCX,DLAYGO"RTN","SCAPMC18",21,0) G:'$$OKDATA APTCLQ ;check/setup variables"RTN","SCAPMC18",22,0) S SCPTCL=$$PTCLACT(DFN,SCCL,SCACT,.SCERR)"RTN","SCAPMC18",23,0) IF SCPTCL G APTCLQ"RTN","SCAPMC18",24,0) ELSE  D"RTN","SCAPMC18",25,0) .D BEFORE^SCMCEV3(DFN)  ;invoke clinic enrollment event driver"RTN","SCAPMC18",26,0) .S DIC="^DPT("_DFN_",""DE"",""RTN","SCAPMC18",27,0) .S SCX=DIC_"0)""RTN","SCAPMC18",28,0) .L +@(SCX):5"RTN","SCAPMC18",29,0) .IF '$T D:'$G(DGQUIET) EN^DDIOL("Enrollment being edited") Q"RTN","SCAPMC18",30,0) .S DIC(0)="L""RTN","SCAPMC18",31,0) .S DIC("P")="2.001P""RTN","SCAPMC18",32,0) .S DA(1)=DFN"RTN","SCAPMC18",33,0) .S X=SCCL"RTN","SCAPMC18",34,0) .S DLAYGO=2"RTN","SCAPMC18",35,0) .D FILE^DICN"RTN","SCAPMC18",36,0) .IF (Y'>0) L -@(SCX)"RTN","SCAPMC18",37,0) .S DIC=DIC_+Y_",1,""RTN","SCAPMC18",38,0) .S DIC("P")="2.011D""RTN","SCAPMC18",39,0) .S DA(1)=+Y"RTN","SCAPMC18",40,0) .S DA(2)=DFN"RTN","SCAPMC18",41,0) .S X=SCACT"RTN","SCAPMC18",42,0) .IF $D(SCFIELDA) D"RTN","SCAPMC18",43,0) ..K DIC("DR")"RTN","SCAPMC18",44,0) ..S SCFLD=0"RTN","SCAPMC18",45,0) ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCAPMC18",46,0) ...S:'$D(DIC("DR")) DIC("DR")=SCFLD_"////"_@SCFIELDA@(SCFLD)"RTN","SCAPMC18",47,0) ...S:$D(DIC("DR")) DIC("DR")=DIC("DR")_";"_SCFLD_"////"_@SCFIELDA@(SCFLD)"RTN","SCAPMC18",48,0) .D FILE^DICN"RTN","SCAPMC18",49,0) .S SCPTCL=$P(Y,U,2)"RTN","SCAPMC18",50,0) .S SCNEWCL=$P(Y,U,3)"RTN","SCAPMC18",51,0) .L -@(SCX)"RTN","SCAPMC18",52,0) .D AFTER^SCMCEV3(DFN),INVOKE^SCMCEV3(DFN)"RTN","SCAPMC18",53,0)APTCLQ Q +$G(SCPTCL)_U_+$G(SCNEWCL)"RTN","SCAPMC18",54,0) ;"RTN","SCAPMC18",55,0)PTCLACT(DFN,SCCL,SCDT,SCERR) ;what is patient/clinic enrollment date on a given date-time? Return date or 0"RTN","SCAPMC18",56,0) N SCDATES,SCCLLST,SCOK,SCDATES"RTN","SCAPMC18",57,0) S SCOK=0"RTN","SCAPMC18",58,0) S (SCDATES("BEGIN"),SCDATES("END"))=SCDT"RTN","SCAPMC18",59,0) IF $$CLPT^SCAPMC(DFN,"SCDATES","","SCCLLST",.SCERR) S:$D(SCCLLST("SCCL",SCCL)) SCOK=$O(SCCLLST("SCCL",SCCL,0))"RTN","SCAPMC18",60,0) Q SCOK"RTN","SCAPMC18",61,0) ;"RTN","SCAPMC18",62,0)OKDATA() ;setup/check variables"RTN","SCAPMC18",63,0) N SCOK"RTN","SCAPMC18",64,0) S SCOK=1"RTN","SCAPMC18",65,0) D INIT^SCAPMCU1(.SCOK)"RTN","SCAPMC18",66,0) IF +$G(SCCL)'=$G(SCCL) D  S SCOK=0"RTN","SCAPMC18",67,0) . S SCPARM("CLINIC")=$G(SCCL,"Undefined")"RTN","SCAPMC18",68,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC18",69,0) IF '$D(^SC(+$G(SCCL),0)) D  S SCOK=0"RTN","SCAPMC18",70,0) . S SCPARM("CLINIC")=$G(SCCL,"Undefined")"RTN","SCAPMC18",71,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC18",72,0) IF '$D(^DPT(DFN,0)) D  S SCOK=0"RTN","SCAPMC18",73,0) . S SCPARM("PATIENT")=DFN"RTN","SCAPMC18",74,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC18",75,0) S:'$G(SCACT) SCACT=DT"RTN","SCAPMC18",76,0) Q SCOK"RTN","SCAPMC21")0^4^B17060792"RTN","SCAPMC21",1,0)SCAPMC21 ;ALB/REW - Team APIs:ACPTTP ; 5 Jul 1995"RTN","SCAPMC21",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCAPMC21",3,0) ;;1.0"RTN","SCAPMC21",4,0)ACPTTP(DFN,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA) ;add/edit a patient to a position (pt TP assgn - #404.43"RTN","SCAPMC21",5,0) ; input:"RTN","SCAPMC21",6,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCAPMC21",7,0) ;  SCTP    = pointer to TEAM POSTION file (#404.57)"RTN","SCAPMC21",8,0) ;  SCFIELDA= array of extra field entries - scfielda('fld#')=value"RTN","SCAPMC21",9,0) ;  SCACT   = date to activate [default=DT]"RTN","SCAPMC21",10,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC21",11,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC21",12,0) ;  SCYESTM = Should team assignment be made, if none active now?[1=YES]"RTN","SCAPMC21",13,0) ;  SCMAINA= array of extra field entries for 404.42 (only if scyestm=1)"RTN","SCAPMC21",14,0) ;"RTN","SCAPMC21",15,0) ; Output:"RTN","SCAPMC21",16,0) ;  Returned = ien of 404.43^new?^404.42 ien (new entries only)^new?^Message"RTN","SCAPMC21",17,0) ;  SCERR()  = Array of DIALOG file messages(errors) ."RTN","SCAPMC21",18,0) ;             Foramt:"RTN","SCAPMC21",19,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC21",20,0) ;               Piece     Description"RTN","SCAPMC21",21,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC21",22,0) N SCESEQ,SCPARM,SCIEN,SC,HISTPTTP,SCFLD,SCTM,SCPTTMA,SCPTTPA,SCTMFLDA,SCNEWTP,SCNEWTM,SCAPTDT,SCAPTTPO,SCAPTTPE,SCMESS"RTN","SCAPMC21",23,0) G:'$$OKDATA APTTPQ ;check/setup variables"RTN","SCAPMC21",24,0) S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)"RTN","SCAPMC21",25,0) ;S SCPTTPA=$$HISTPTTP^SCAPMCU2(DFN,SCTP,SCACT)"RTN","SCAPMC21",26,0) S SCAPTDT("BEGIN")=SCACT"RTN","SCAPMC21",27,0) S SCAPTDT("END")=3990101"RTN","SCAPMC21",28,0) S SCAPTDT("INCL")=0"RTN","SCAPMC21",29,0) IF $S('$D(SCFIELDA):0,'$D(@SCFIELDA@(.05)):0,($G(@SCFIELDA@(.05))=1):1,($G(@SCFIELDA@(.05))=2):1,1:0) IF '$$CHKPC(DFN) D  G APTTPQ"RTN","SCAPMC21",30,0) .S SCMESS=4044300.001"RTN","SCAPMC21",31,0) G:'$$TPPT^SCAPMC(DFN,"SCAPTDT",,,,,0,"SCAPTTPO","SCAPTTPE") APTTPQ"RTN","SCAPMC21",32,0) S SCPTTPA=$O(SCAPTTPO("SCTP",SCTM,SCTP,0))"RTN","SCAPMC21",33,0) ;to edit existing entry"RTN","SCAPMC21",34,0) IF SCPTTPA D  G APTTPQ"RTN","SCAPMC21",35,0) .S SC($J,404.43,(+SCPTTPA)_",",.03)=SCACT"RTN","SCAPMC21",36,0) .IF $D(SCFIELDA) D"RTN","SCAPMC21",37,0) ..S SCFLD=0"RTN","SCAPMC21",38,0) ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCAPMC21",39,0) ...S SC($J,404.43,(+SCPTTPA)_",",SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCAPMC21",40,0) .D FILE^DIE("","SC($J)",SCERR)"RTN","SCAPMC21",41,0) ;needed: patient team assignment for date"RTN","SCAPMC21",42,0) S SCPTTMA=+$$HISTPTTM^SCAPMCU2(DFN,SCTM,SCACT)"RTN","SCAPMC21",43,0) ; if flag is set to add patient to team & no pt tm assignment exists"RTN","SCAPMC21",44,0) ;"RTN","SCAPMC21",45,0) IF ('SCPTTMA)&($G(SCYESTM))&($D(SCFIELDA)) D"RTN","SCAPMC21",46,0) .S:$D(@SCFIELDA@(.05)) @SCMAINA@(.08)=$G(@SCMAINA@(.08),$S(@SCFIELDA@(.05):1,1:99))"RTN","SCAPMC21",47,0) .S:$D(@SCFIELDA@(.06)) @SCMAINA@(.11)=$G(@SCMAINA@(.11),@SCFIELDA@(.06))"RTN","SCAPMC21",48,0) .S:$D(@SCFIELDA@(.07)) @SCMAINA@(.12)=$G(@SCMAINA@(.12),@SCFIELDA@(.07))"RTN","SCAPMC21",49,0) .S:$D(@SCFIELDA@(.08)) @SCMAINA@(.13)=$G(@SCMAINA@(.13),@SCFIELDA@(.08))"RTN","SCAPMC21",50,0) .S:$D(@SCFIELDA@(.09)) @SCMAINA@(.14)=$G(@SCMAINA@(.14),@SCFIELDA@(.09))"RTN","SCAPMC21",51,0) .S SCPTTMA=+$$ACPTTM^SCAPMC(DFN,SCTM,.SCMAINA,SCACT,SCERR)"RTN","SCAPMC21",52,0)TM IF 'SCPTTMA G APTTPQ"RTN","SCAPMC21",53,0) ELSE  D"RTN","SCAPMC21",54,0) .IF $D(SCFIELDA) D"RTN","SCAPMC21",55,0) ..S SCFLD=0"RTN","SCAPMC21",56,0) ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCAPMC21",57,0) ...S SC($J,404.43,"+1,",SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCAPMC21",58,0) .S SC($J,404.43,"+1,",.01)=SCPTTMA"RTN","SCAPMC21",59,0) .S SC($J,404.43,"+1,",.02)=SCTP"RTN","SCAPMC21",60,0) .S SC($J,404.43,"+1,",.03)=SCACT"RTN","SCAPMC21",61,0) .D UPDATE^DIE("","SC($J)","SCIEN",SCERR)"RTN","SCAPMC21",62,0) .IF $D(@SCERR) K SCIEN"RTN","SCAPMC21",63,0) .ELSE  D"RTN","SCAPMC21",64,0) ..S SCPTTPA=+$G(SCIEN(1))"RTN","SCAPMC21",65,0) ..S SCNEWTP=1"RTN","SCAPMC21",66,0) ..D AFTERTP^SCMCDD1(SCPTTPA)"RTN","SCAPMC21",67,0)APTTPQ Q +$G(SCPTTPA)_U_+$G(SCNEWTP)_U_+$G(SCPTTMA)_U_+$P($G(SCPTTMA),U,2)_U_$G(SCMESS)"RTN","SCAPMC21",68,0) ;"RTN","SCAPMC21",69,0)ACPTATP(DFNA,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA,SCNEWTP,SCNEWTM,SCOLDTP,SCBADTP) ;list of patients to a position (pt TP assgn - #404.43 and possibly #404.42"RTN","SCAPMC21",70,0) ; input: as per ACPTTP (above with the following change:)"RTN","SCAPMC21",71,0) ;    DFNA    = is the literal value of a patient array (e.g. "scpt""RTN","SCAPMC21",72,0) ;              there is at least one scpt(dfn)="" defined"RTN","SCAPMC21",73,0) ;    SCNEWTP = Subset of DFNA that was NEWLY assigned to a Position"RTN","SCAPMC21",74,0) ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to a Team"RTN","SCAPMC21",75,0) ;    SCOLDTP = Subset of DFNA that was already assigned to Position"RTN","SCAPMC21",76,0) ;    SCBADTP = Subset of DFNA that was NOT assigned to Position"RTN","SCAPMC21",77,0) ; output: Count of Patients (New or Old) assigned to Position"RTN","SCAPMC21",78,0) N DFN,SCCNT,SCX,SCNOMAIL"RTN","SCAPMC21",79,0) S SCNOMAIL=1"RTN","SCAPMC21",80,0) S SCCNT=0"RTN","SCAPMC21",81,0) S DFN=0 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D"RTN","SCAPMC21",82,0) .S SCX=$$ACPTTP(.DFN,.SCTP,.SCFIELDA,.SCACT,.SCERR,.SCYESTM)"RTN","SCAPMC21",83,0) .;  SCX = ien of 404.43^new?^404.42 ien (new entries only)^new?"RTN","SCAPMC21",84,0) .IF $P(SCX,U,2) D  ;newly assigned"RTN","SCAPMC21",85,0) ..S SCCNT=SCCNT+1"RTN","SCAPMC21",86,0) ..S @SCNEWTP@(DFN)=+SCX   ;scnewtp"RTN","SCAPMC21",87,0) ..S:$P(SCX,U,4) @SCNEWTM@(DFN)=$P(SCX,U,3)  ;scnewtm"RTN","SCAPMC21",88,0) .IF $P(SCX,U,1)&('$P(SCX,U,2)) D  ;old"RTN","SCAPMC21",89,0) ..S SCCNT=SCCNT+1"RTN","SCAPMC21",90,0) ..S @SCOLDTP@(DFN)=+SCX"RTN","SCAPMC21",91,0) .IF 'SCX D"RTN","SCAPMC21",92,0) ..S @SCBADTP@(DFN)=$P(SCX,U,5)"RTN","SCAPMC21",93,0) K SCNOMAIL"RTN","SCAPMC21",94,0) D MAILLST^SCMCTPM(SCTP,.SCADDFLD,DT,.SCNEWTP,.SCOLDTP,.SCBADTP)"RTN","SCAPMC21",95,0) Q SCCNT"RTN","SCAPMC21",96,0) ;"RTN","SCAPMC21",97,0)OKDATA() ;setup/check variables"RTN","SCAPMC21",98,0) N SCOK"RTN","SCAPMC21",99,0) S SCOK=1"RTN","SCAPMC21",100,0) D INIT^SCAPMCU1(.SCOK)"RTN","SCAPMC21",101,0) IF '$D(^DPT(DFN,0))!('$D(^SCTM(404.57,SCTP,0))) D  S SCOK=0"RTN","SCAPMC21",102,0) . S SCPARM("PATIENT")=DFN"RTN","SCAPMC21",103,0) . S SCPARM("POSITION")=SCTP"RTN","SCAPMC21",104,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC21",105,0) S:'$G(SCACT) SCACT=DT"RTN","SCAPMC21",106,0) S:'$D(SCMAINA) SCMAINA="SC40443A""RTN","SCAPMC21",107,0) Q SCOK"RTN","SCAPMC21",108,0)CHKPC(DFN) ;not stand-alone"RTN","SCAPMC21",109,0) N SCOK,SCX"RTN","SCAPMC21",110,0) S SCOK=1"RTN","SCAPMC21",111,0) G:@SCFIELDA@(.05)=0 QTCKPC  ;ignore if no pc role"RTN","SCAPMC21",112,0) S SCX=$$PCRLPTTP^SCMCTPU2(DFN,SCTP,SCACT)"RTN","SCAPMC21",113,0) IF @SCFIELDA@(.05)=1 D"RTN","SCAPMC21",114,0) .S:'SCX SCOK=0"RTN","SCAPMC21",115,0) IF @SCFIELDA@(.05)=2 D"RTN","SCAPMC21",116,0) .S:'$P(SCX,U,2) SCOK=0"RTN","SCAPMC21",117,0)QTCKPC Q SCOK"RTN","SCAPMC22")0^6^B5974027"RTN","SCAPMC22",1,0)SCAPMC22 ;ALB/REW - Team API's ; December 1, 1995"RTN","SCAPMC22",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCAPMC22",3,0) ;;1.0"RTN","SCAPMC22",4,0)INPTTP(DFN,SCPTTPA,SCINACT,SCERR) ;inactivate patient from a position (pt tm pos assgn - #404.43"RTN","SCAPMC22",5,0) ; input:"RTN","SCAPMC22",6,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCAPMC22",7,0) ;  SCPTTPA   = pointer to pt team assign file (#404.43)"RTN","SCAPMC22",8,0) ;  SCINACT = date to inactivate [default=DT]"RTN","SCAPMC22",9,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC22",10,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC22",11,0) ;"RTN","SCAPMC22",12,0) ; Output:"RTN","SCAPMC22",13,0) ;  SCOK    = 1 if inactivation entry made to file 404.43, 0 ow"RTN","SCAPMC22",14,0) ;  SCERR() = Array of DIALOG file messages(errors) ."RTN","SCAPMC22",15,0) ;             Foramt:"RTN","SCAPMC22",16,0) ;  @SCERR@(0)=Number of erros, undefined if none"RTN","SCAPMC22",17,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC22",18,0) ;               Piece     Description"RTN","SCAPMC22",19,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC22",20,0) N SCTP,SC,SCPARM,SCESEQ,SCLSEQ,SCOK,SCND"RTN","SCAPMC22",21,0) S SCOK=0"RTN","SCAPMC22",22,0) G:'$$OKDATA APTTPQ ;setup/check variables"RTN","SCAPMC22",23,0) S SCND=$G(^SCPT(404.43,SCPTTPA,0))"RTN","SCAPMC22",24,0) G:SCINACT<$P(SCND,U,3) APTTPQ"RTN","SCAPMC22",25,0) S SCTP=+$P(SCND,U,2)"RTN","SCAPMC22",26,0) IF '$$PTTPACT(DFN,SCTP,SCINACT,.SCERR) D  G APTTPQ"RTN","SCAPMC22",27,0) .S SCOK=0"RTN","SCAPMC22",28,0) .S SCPARM("INACTIVE DATE")=SCINACT"RTN","SCAPMC22",29,0) .S SCPARM("MESSAGE")="Patient not assigned to position on date""RTN","SCAPMC22",30,0) .D ERR^SCAPMCU1(SCESEQ,4044201,.SCPARM,"",.SCERR)"RTN","SCAPMC22",31,0) ELSE  D"RTN","SCAPMC22",32,0) .S SCOK=1"RTN","SCAPMC22",33,0) .S SC($J,404.43,SCPTTPA_",",.04)=SCINACT"RTN","SCAPMC22",34,0) .S SC($J,404.43,SCPTTPA_",",.08)=$G(DUZ,.5)"RTN","SCAPMC22",35,0) .D NOW^%DTC"RTN","SCAPMC22",36,0) .S SC($J,404.43,SCPTTPA_",",.09)=%"RTN","SCAPMC22",37,0) .D UPDATE^DIE("","SC($J)","SCIEN",.SCERR)"RTN","SCAPMC22",38,0) .I $D(@SCERR@("DIERR")) S SCOK=0"RTN","SCAPMC22",39,0)APTTPQ Q SCOK"RTN","SCAPMC22",40,0) ;"RTN","SCAPMC22",41,0)PTTPACT(DFN,SCTP,SCDT,SCERR) ;is patient assigned to a position on a given date-time?"RTN","SCAPMC22",42,0) N SCPTDTS,SCTPLST,SCOK,SCTM"RTN","SCAPMC22",43,0) S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)"RTN","SCAPMC22",44,0) S SCOK=0"RTN","SCAPMC22",45,0) S (SCPTDTS("BEGIN"),SCPTDTS("END"))=SCDT"RTN","SCAPMC22",46,0) IF $$TPPT^SCAPMC23(DFN,"SCPTDTS",,,,,0,"SCTPLST",.SCERR) S:$D(SCTPLST("SCTP",SCTM,SCTP)) SCOK=1"RTN","SCAPMC22",47,0) Q SCOK"RTN","SCAPMC22",48,0) ;"RTN","SCAPMC22",49,0)OKDATA() ;check/setup variables - return 1 if ok/0 if error"RTN","SCAPMC22",50,0) N SCOK"RTN","SCAPMC22",51,0) S SCOK=1"RTN","SCAPMC22",52,0) D INIT^SCAPMCU1(.SCOK)"RTN","SCAPMC22",53,0) IF '$D(^DPT(DFN,0))!('$D(^SCPT(404.43,SCPTTPA,0))) D  S SCOK=0"RTN","SCAPMC22",54,0) . S SCPARM("PATIENT")=$G(DFN,"Undefined")"RTN","SCAPMC22",55,0) . S SCPARM("Pt POSITION Asnt")=$G(SCPTTPA,"Undefined")"RTN","SCAPMC22",56,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC22",57,0) S:'$G(SCACT) SCACT=DT"RTN","SCAPMC22",58,0) S:'$G(SCINACT) SCINACT=DT"RTN","SCAPMC22",59,0) Q SCOK"RTN","SCAPMC22",60,0) ;"RTN","SCAPMC22",61,0)INPTSCTP(DFN,SCTP,SCINACT,SCERR) ;inactivate patient from a position - using last pt position assignment - Note: This uses pointer to 404.57 (position) not 404.43 as input"RTN","SCAPMC22",62,0) ; input:"RTN","SCAPMC22",63,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCAPMC22",64,0) ;  SCTP    = pointer to POSITION file (#404.57)"RTN","SCAPMC22",65,0) ;  SCINACT = date to inactivate [default=DT]"RTN","SCAPMC22",66,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC22",67,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC22",68,0) ;"RTN","SCAPMC22",69,0) ; Output:"RTN","SCAPMC22",70,0) ;  SCOK    = 1 if inactivation entry made to file 404.42, 0 ow"RTN","SCAPMC22",71,0) ;  SCERR() = Array of DIALOG file messages(errors) ."RTN","SCAPMC22",72,0) ;             Foramt:"RTN","SCAPMC22",73,0) ;  @SCERR@(0)=Number of erros, undefined if none"RTN","SCAPMC22",74,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC22",75,0) ;               Piece     Description"RTN","SCAPMC22",76,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC22",77,0) ;"RTN","SCAPMC22",78,0) N SCACT"RTN","SCAPMC22",79,0) S SCACT=+$O(^SCPT(404.43,"ADFN",DFN,SCTP,""),-1)"RTN","SCAPMC22",80,0) S SCPTTP=+$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCACT,0))"RTN","SCAPMC22",81,0) Q $$INPTTP(.DFN,.SCPTTP,.SCINACT,.SCERR)"RTN","SCAPMC23")0^40^B18108399"RTN","SCAPMC23",1,0)SCAPMC23 ;ALB/REW - Team API's:TPPT ; JUN 30, 1995"RTN","SCAPMC23",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCAPMC23",3,0) ;;1.0"RTN","SCAPMC23",4,0)TPPT(DFN,SCDATES,SCPOSA,SCUSRA,SCPURPA,SCROLEA,SCYESCL,SCLIST,SCERR) ; -- positions for a patient "RTN","SCAPMC23",5,0) ; input:"RTN","SCAPMC23",6,0) ; DFN = ien of PATIENT file(#2) [required]"RTN","SCAPMC23",7,0) ; SCDATES("BEGIN") = begin date to search (inclusive)"RTN","SCAPMC23",8,0) ;                      [default: TODAY]"RTN","SCAPMC23",9,0) ;        ("END")   = end date to search (inclusive)"RTN","SCAPMC23",10,0) ;                      [default: TODAY]"RTN","SCAPMC23",11,0) ;        ("INCL")  = 1: only use patients who were assigned to"RTN","SCAPMC23",12,0) ;                       team for entire date range"RTN","SCAPMC23",13,0) ;                    0: anytime in date range"RTN","SCAPMC23",14,0) ;                      [default: 1] "RTN","SCAPMC23",15,0) ;  SCPOSA -array of pointers to team position - 404.57 (per SCPURPA)"RTN","SCAPMC23",16,0) ;  SCUSRA -array of pointers to user file - 8930 (per SCPURPA array)"RTN","SCAPMC23",17,0) ;  SCPURPA -array of pointers to team purpose file 403.47"RTN","SCAPMC23",18,0) ;          if none are defined - returns all teams"RTN","SCAPMC23",19,0) ;          if @SCPURPA@('exclude') is defined - exclude listed teams"RTN","SCAPMC23",20,0) ;  SCROLEA - array of pointers to std position file 403.46 (per SCPURPA)"RTN","SCAPMC23",21,0) ; SCYESCL -boolean[0-NO(default)/1-YES] Include pts asc. via enrollment?"RTN","SCAPMC23",22,0) ;  SCLIST -array name to store list"RTN","SCAPMC23",23,0) ;          [ex. ^TMP("SCPT",$J)]"RTN","SCAPMC23",24,0) ;        "RTN","SCAPMC23",25,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC23",26,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC23",27,0) ;"RTN","SCAPMC23",28,0) ; Output:"RTN","SCAPMC23",29,0) ;  SCLIST() = array of positions (includes SCTP xref)"RTN","SCAPMC23",30,0) ;             Format:"RTN","SCAPMC23",31,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC23",32,0) ;               Piece     Description"RTN","SCAPMC23",33,0) ;                 1       IEN of TEAM POSITION File (#404.57)"RTN","SCAPMC23",34,0) ;                 2       Name of Position"RTN","SCAPMC23",35,0) ;                 3       IEN of Team #404.51"RTN","SCAPMC23",36,0) ;                 4       IEN of file #404.43 (Pt Tm Pos Assign -404.43)"RTN","SCAPMC23",37,0) ;                 5       current effective date"RTN","SCAPMC23",38,0) ;                 6       current inactivate date (if any)"RTN","SCAPMC23",39,0) ;                 7       pointer to 403.46 (role)"RTN","SCAPMC23",40,0) ;                 8       Name of Standard Role"RTN","SCAPMC23",41,0) ;                 9       pointer to User Class (#8930)"RTN","SCAPMC23",42,0) ;                10       Name of User Class"RTN","SCAPMC23",43,0) ;                11       Pointer to patient team assignment (404.42)JLU"RTN","SCAPMC23",44,0) ;                Subscript: "SCTP",SCTM,IEN ="""RTN","SCAPMC23",45,0) ;"RTN","SCAPMC23",46,0) ;  SCERR() = Array of DIALOG file messages(errors) ."RTN","SCAPMC23",47,0) ;  @SCERR@(0) = number of errors, undefined if none"RTN","SCAPMC23",48,0) ;             Format:"RTN","SCAPMC23",49,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC23",50,0) ;               Piece     Description"RTN","SCAPMC23",51,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC23",52,0) ;  Returned: 1 if ok, 0 if error"RTN","SCAPMC23",53,0) ; Other:"RTN","SCAPMC23",54,0) ;  SCACTHIS =  status (-1:err|0:inact|1:act)^404.59 ien ^actdt^inacdt"RTN","SCAPMC23",55,0) ;"RTN","SCAPMC23",56,0) ;"RTN","SCAPMC23",57,0)ST N SCPTTP,SCPTTP0,SCTP,SCR,SCACTHIS,SCTM,SCND,SCU,SCPTTPI,SCTPA,SCPTBEG,SCPTEND,SCTPPT,SCTEAMA,SCENROLL"RTN","SCAPMC23",58,0) N SCLSEQ,SCN,SCESEQ,SCPARM,SCBEGIN,SCEND,SCINCL,SCDTS,SCPTPA"RTN","SCAPMC23",59,0) ; -- initialize control variables"RTN","SCAPMC23",60,0) G:'$$OKDATA PRACQ"RTN","SCAPMC23",61,0) ; -- loop through patient team position assignment history"RTN","SCAPMC23",62,0) S (SCTP,SCTPA)=0"RTN","SCAPMC23",63,0) F  S SCTP=$O(^SCPT(404.43,"ADFN",DFN,SCTP)) Q:'SCTP  D"RTN","SCAPMC23",64,0) .F SCPTTP=0:0 S SCPTTP=$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCPTTP)) Q:'SCPTTP  D"RTN","SCAPMC23",65,0) .. ; S SCPTTPI=$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCPTTP,0))"RTN","SCAPMC23",66,0) .. ; replaced line above with FOR LOOP and new dot level below. Now loops thru all assignments"RTN","SCAPMC23",67,0) .. ; made on a given day - PDR 9/98"RTN","SCAPMC23",68,0) .. S SCPTPA="" ; position assignment IEN"RTN","SCAPMC23",69,0) .. F  S SCPTPA=$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCPTTP,SCPTPA)) Q:'SCPTPA  D"RTN","SCAPMC23",70,0) ... S SCPTTP0=$G(^SCPT(404.43,SCPTPA,0))"RTN","SCAPMC23",71,0) ... S SCPTBEG=$P(SCPTTP0,U,3)"RTN","SCAPMC23",72,0) ... S SCPTEND=$P(SCPTTP0,U,4)"RTN","SCAPMC23",73,0) ... Q:1>$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,SCPTBEG,SCPTEND)"RTN","SCAPMC23",74,0) ... S SCACTHIS=$$ACTHIST^SCAPMCU2(404.59,SCTP,SCDATES,SCERR,"SCTPPT")"RTN","SCAPMC23",75,0) ... ; --- below changes scacthis to send 404.43 data"RTN","SCAPMC23",76,0) ... S:SCPTBEG>$P(SCACTHIS,U,3) $P(SCACTHIS,U,3)=SCPTBEG"RTN","SCAPMC23",77,0) ... S:SCPTEND&((SCPTEND<$P(SCACTHIS,U,4))!('$P(SCACTHIS,U,4))) $P(SCACTHIS,U,4)=SCPTEND"RTN","SCAPMC23",78,0) ... S $P(SCACTHIS,U,2)=SCPTPA ; SCPTTPI"RTN","SCAPMC23",79,0) ... Q:'SCACTHIS"RTN","SCAPMC23",80,0) ... Q:'$$OKARRAY^SCAPU1(.SCPOSA,.SCTP)"RTN","SCAPMC23",81,0) ... S SCND=$G(^SCTM(404.57,SCTP,0)) ;the team position 0 node"RTN","SCAPMC23",82,0) ... S SCU=$P(SCND,U,13)"RTN","SCAPMC23",83,0) ... Q:'$$OKUSRCL^SCAPU1(.SCUSRA,.SCU)"RTN","SCAPMC23",84,0) ... S SCTM=$P(SCND,U,2)"RTN","SCAPMC23",85,0) ... S SCP=$P(^SCTM(404.51,+SCTM,0),U,3)"RTN","SCAPMC23",86,0) ... Q:'$$OKARRAY^SCAPU1(.SCPURPA,.SCP)"RTN","SCAPMC23",87,0) ... S SCPTA=0"RTN","SCAPMC23",88,0) ... S SCR=+$P(SCND,U,3)"RTN","SCAPMC23",89,0) ... Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)"RTN","SCAPMC23",90,0) ... D BLD^SCAPMC24(.SCLIST,SCTM,SCTP,SCACTHIS,SCR)"RTN","SCAPMC23",91,0) ; - if scyescl=1 get enrolled clinics & find positions associated w clinc for teams that the pt is in"RTN","SCAPMC23",92,0) G:'SCYESCL PRACQ"RTN","SCAPMC23",93,0) IF '$$TMPT^SCAPMC(DFN,SCDATES,.SCPURPA,"SCTEAMA",.SCERR) G PRACQ"RTN","SCAPMC23",94,0) IF '$$CLPT^SCAPMC29(DFN,SCDATES,"SCTEAMA","SCENROLL",.SCERR) G PRACQ"RTN","SCAPMC23",95,0) IF '$G(SCENROLL(0)) G PRACQ"RTN","SCAPMC23",96,0) S INDX=0"RTN","SCAPMC23",97,0) F INDX=1:1:$G(SCENROLL(0)) S SCX=$G(SCENROLL(INDX)) D"RTN","SCAPMC23",98,0) .IF 'SCX D  Q"RTN","SCAPMC23",99,0) ..S SCPARM("Enroll Xref")=$G(SCX)"RTN","SCAPMC23",100,0) ..D ERR^SCAPMCU1(.SCESEQ,,SCPARM,"",.SCERR)"RTN","SCAPMC23",101,0) .S SC44=$P(SCX,U,1)"RTN","SCAPMC23",102,0) .S ENR("BEGIN")=$S(SCBEGIN>$P(SCX,U,3):SCBEGIN,1:$P(SCX,U,3))"RTN","SCAPMC23",103,0) .S ENR("END")=$S('$P(SCX,U,4):SCEND,(SCEND<$P(SCX,U,4)):SCEND,1:$P(SCX,U,4))"RTN","SCAPMC23",104,0) .S ENR("INCL")=SCINCL"RTN","SCAPMC23",105,0) .Q:'$$TPCL^SCAPMC(SC44,"ENR",.SCPOSA,.SCUSRA,.SCPURPA,.SCROLEA,.SCLIST,.SCERR)"RTN","SCAPMC23",106,0)PRACQ Q $G(@SCERR@(0))<1"RTN","SCAPMC23",107,0) ;"RTN","SCAPMC23",108,0)OKDATA() ;setup/check variables"RTN","SCAPMC23",109,0) N SCOK"RTN","SCAPMC23",110,0) S SCOK=1"RTN","SCAPMC23",111,0) D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)"RTN","SCAPMC23",112,0) S SCYESCL=+$G(SCYESCL,0)"RTN","SCAPMC23",113,0) IF '$D(^DPT(+$G(DFN),0)) D  S SCOK=0"RTN","SCAPMC23",114,0) . S SCPARM("Patient")=$G(DFN,"Undefined")"RTN","SCAPMC23",115,0) . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC23",116,0) ;"RTN","SCAPMC23",117,0) Q SCOK"RTN","SCAPMC23",118,0) ;"RTN","SCAPMC24")0^41^B12281584"RTN","SCAPMC24",1,0)SCAPMC24 ;ALB/REW - Team API's:TPTM ; JUN 30, 1995"RTN","SCAPMC24",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCAPMC24",3,0) ;;1.0"RTN","SCAPMC24",4,0)TPTM(SCTM,SCDATES,SCUSRA,SCROLEA,SCLIST,SCERR) ; -- positions for a pract"RTN","SCAPMC24",5,0) ; input:"RTN","SCAPMC24",6,0) ; SCTM = ien of TEAM File (#404.51) [required]"RTN","SCAPMC24",7,0) ; SCDATES("BEGIN") = begin date to search (inclusive)"RTN","SCAPMC24",8,0) ;                      [default: TODAY]"RTN","SCAPMC24",9,0) ;        ("END")   = end date to search (inclusive)"RTN","SCAPMC24",10,0) ;                      [default: TODAY]"RTN","SCAPMC24",11,0) ;        ("INCL")  = 1: only use patients who were assigned to"RTN","SCAPMC24",12,0) ;                       team for entire date range"RTN","SCAPMC24",13,0) ;                    0: anytime in date range"RTN","SCAPMC24",14,0) ;                      [default: 1] "RTN","SCAPMC24",15,0) ;  SCUSRA -array of pointers to user file - 8930"RTN","SCAPMC24",16,0) ;          if none are defined - returns all usr classes"RTN","SCAPMC24",17,0) ;          if @SCPURPA@('exclude') is defined - exclude listed usr class"RTN","SCAPMC24",18,0) ;  SCROLEA - array of pointers to std position file 403.46 (per scusra)"RTN","SCAPMC24",19,0) ;  SCLIST -array name to store list"RTN","SCAPMC24",20,0) ;          [ex. ^TMP("SCPT",$J)]"RTN","SCAPMC24",21,0) ;        "RTN","SCAPMC24",22,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC24",23,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC24",24,0) ;"RTN","SCAPMC24",25,0) ; Output:"RTN","SCAPMC24",26,0) ;  SCLIST() = array of positions (includes SCTP xref)"RTN","SCAPMC24",27,0) ;             Format:"RTN","SCAPMC24",28,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC24",29,0) ;               Piece     Description"RTN","SCAPMC24",30,0) ;                 1       IEN of TEAM POSITION File (#404.57)"RTN","SCAPMC24",31,0) ;                 2       Name of Position"RTN","SCAPMC24",32,0) ;                 3       IEN of Team #404.51"RTN","SCAPMC24",33,0) ;                 4       IEN of file #404.59 (Tm Pos History)"RTN","SCAPMC24",34,0) ;                 5       current effective date"RTN","SCAPMC24",35,0) ;                 6       current inactivate date (if any)"RTN","SCAPMC24",36,0) ;                 7       pointer to 403.46 (role)"RTN","SCAPMC24",37,0) ;                 8       Name of Standard Role"RTN","SCAPMC24",38,0) ;                 9       pointer to User Class (#8930)"RTN","SCAPMC24",39,0) ;                10       Name of User Class"RTN","SCAPMC24",40,0) ;                Subscript: "SCTP",SCTM,IEN ="""RTN","SCAPMC24",41,0) ;"RTN","SCAPMC24",42,0) ;  SCERR() = Array of DIALOG file messages(errors) ."RTN","SCAPMC24",43,0) ;  @SCERR@(0) = number of errors, undefined if none"RTN","SCAPMC24",44,0) ;             Format:"RTN","SCAPMC24",45,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC24",46,0) ;               Piece     Description"RTN","SCAPMC24",47,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC24",48,0) ;  Returned: 1 if ok, 0 if error"RTN","SCAPMC24",49,0) ; Other:"RTN","SCAPMC24",50,0) ;  SCACTHIS =  status (-1:err|0:inact|1:act)^404.59 ien ^actdt^inacdt"RTN","SCAPMC24",51,0) ;"RTN","SCAPMC24",52,0) ;"RTN","SCAPMC24",53,0)ST N SCPTTP,SCPTTP0,SCTP,SCR,SCACTHIS,SCND,SCTPTM,SCTPA"RTN","SCAPMC24",54,0) N SCLSEQ,SCN,SCESEQ,SCPARM,SCBEGIN,SCEND,SCINCL,SCDTS"RTN","SCAPMC24",55,0) ; -- initialize control variables"RTN","SCAPMC24",56,0) G:'$$OKDATA PRACQ"RTN","SCAPMC24",57,0) ; -- loop through team positionS"RTN","SCAPMC24",58,0) S (SCTP,SCTPA)=0"RTN","SCAPMC24",59,0) F  S SCTP=$O(^SCTM(404.57,"C",SCTM,SCTP)) Q:'SCTP  Q:'$$TPVALBLD(SCTP,.SCDATES,.SCPOSA,.SCUSA,.SCPURPA,.SCROLEA,.SCLIST,.SCERR)"RTN","SCAPMC24",60,0)PRACQ Q $G(@SCERR@(0))<1"RTN","SCAPMC24",61,0) ;"RTN","SCAPMC24",62,0)TPVALBLD(SCTP,SCDATES,SCPOSA,SCUSA,SCPURPA,SCROLEA,SCLIST,SCERR) ;"RTN","SCAPMC24",63,0) ; this validates a team position & builds sclist array"RTN","SCAPMC24",64,0) ; returns 1 if ok, 0 if error"RTN","SCAPMC24",65,0) N SCTPDT,SCDDDD,SCTP0,SCU,SCR,SCTM"RTN","SCAPMC24",66,0) M SCDDDD=@SCDATES"RTN","SCAPMC24",67,0) S SCTP0=$G(^SCTM(404.57,SCTP,0))"RTN","SCAPMC24",68,0) S SCTPDT=-9999999 F  S SCTPDT=$O(^SCTM(404.59,"AIDT",SCTP,1,SCTPDT)) Q:'SCTPDT  D"RTN","SCAPMC24",69,0) .S SCACTHIS=$$ACTHIST^SCAPMCU2(404.59,SCTP,"SCDDDD",.SCERR,"SCTPTM")"RTN","SCAPMC24",70,0) .Q:'SCACTHIS"RTN","SCAPMC24",71,0) .S SCND=$G(^SCTM(404.57,SCTP,0))"RTN","SCAPMC24",72,0) .S SCU=$P(SCND,U,13)"RTN","SCAPMC24",73,0) .Q:'$$OKUSRCL^SCAPU1(.SCUSRA,.SCU)"RTN","SCAPMC24",74,0) .S SCR=+$P(SCND,U,3)"RTN","SCAPMC24",75,0) .Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)"RTN","SCAPMC24",76,0) .D BLD(.SCLIST,$P(SCTP0,U,2),SCTP,SCACTHIS,SCR)"RTN","SCAPMC24",77,0) .S SCDDDD("END")=$P(SCACTHIS,U,3)-.00001"RTN","SCAPMC24",78,0)QTVALBLD Q $G(@SCERR@(0))<1"RTN","SCAPMC24",79,0) ;"RTN","SCAPMC24",80,0)BLD(SCLIST,SCTM,SCTP,SCACTHIS,SCR) ; -- build list of positions"RTN","SCAPMC24",81,0) ;"RTN","SCAPMC24",82,0) ; SCLIST  - output array"RTN","SCAPMC24",83,0) ; SCTM  - pointer to 404.51"RTN","SCAPMC24",84,0) ; SCTP    - pointer to 404.57"RTN","SCAPMC24",85,0) ; SCACTHIS- per $$acthis^scapmcu2(file,ien)"RTN","SCAPMC24",86,0) ; SCPTA   - ien of pt team assignment"RTN","SCAPMC24",87,0) ; SCR     - role"RTN","SCAPMC24",88,0) ; "RTN","SCAPMC24",89,0) ; this builds the array:"RTN","SCAPMC24",90,0) ;   sclist(1->n)=SCTP^positionname^sctm^histien^effdt^inactdt^scr^rolename^scusr^usrname"RTN","SCAPMC24",91,0) ;  "RTN","SCAPMC24",92,0) ;    for each scpta zero node passed to it"RTN","SCAPMC24",93,0) ;    AND a xref  sclist('SCTP',SCTM,scpt,histien,scn)="""RTN","SCAPMC24",94,0) N SCEFFDT,SCCNT,SCN,SCUSR"RTN","SCAPMC24",95,0) S:'$G(SCTM) SCTM=$P($G(^SCTM(404.57,+$G(SCTP),0)),U,2)"RTN","SCAPMC24",96,0) Q:$D(@SCLIST@("SCTP",SCTM,SCTP,$P(SCACTHIS,U,2)))"RTN","SCAPMC24",97,0) S SCN=$G(@SCLIST@(0),0)+1"RTN","SCAPMC24",98,0) S @SCLIST@(0)=SCN"RTN","SCAPMC24",99,0) S SCUSR=+$P(^SCTM(404.57,SCTP,0),U,13)"RTN","SCAPMC24",100,0) ;               1    ^              2                   ^  3    ^  4"RTN","SCAPMC24",101,0) S @SCLIST@(SCN)=SCTP_U_$P($G(^SCTM(404.57,SCTP,0)),U,1)_U_SCTM_U_$P(SCACTHIS,U,2,4)_U_SCR_U_$P($G(^SD(403.46,SCR,0)),U,1)_U_SCUSR_U_$P($G(^USR(8930,SCUSR,0)),U,1)_U_$P($G(SCPTTP0),U,1)"RTN","SCAPMC24",102,0) ;THE LAST $P WAS ADDED BY JLU"RTN","SCAPMC24",103,0) S @SCLIST@("SCTP",SCTM,SCTP,$P(SCACTHIS,U,2),SCN)="""RTN","SCAPMC24",104,0) Q"RTN","SCAPMC24",105,0)OKDATA() ;setup/check variables"RTN","SCAPMC24",106,0) N SCOK"RTN","SCAPMC24",107,0) S SCOK=1"RTN","SCAPMC24",108,0) D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)"RTN","SCAPMC24",109,0) IF '$D(^SCTM(404.51,+$G(SCTM),0)) D  S SCOK=0"RTN","SCAPMC24",110,0) . S SCPARM("Team")=$G(SCTM,"Undefined")"RTN","SCAPMC24",111,0) . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC24",112,0) Q SCOK"RTN","SCAPMC24",113,0) ;"RTN","SCAPMC7")0^7^B9122856"RTN","SCAPMC7",1,0)SCAPMC7 ;ALB/REW - Team APIs:INPTTM ; 5 Jul 1995"RTN","SCAPMC7",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCAPMC7",3,0) ;;1.0"RTN","SCAPMC7",4,0)INPTTM(DFN,SCPTTM,SCINACT,SCERR) ;inactivate patient from a team (pt tm assgn - #404.42"RTN","SCAPMC7",5,0) ; input:"RTN","SCAPMC7",6,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCAPMC7",7,0) ;  SCPTTM  = pointer to pt team assign file (#404.42)"RTN","SCAPMC7",8,0) ;  SCINACT = date to inactivate [default=DT]"RTN","SCAPMC7",9,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC7",10,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC7",11,0) ;"RTN","SCAPMC7",12,0) ; Output:"RTN","SCAPMC7",13,0) ;  SCOK    = 1 if inactivation entry made to file 404.42, 0 ow"RTN","SCAPMC7",14,0) ;  SCERR() = Array of DIALOG file messages(errors) ."RTN","SCAPMC7",15,0) ;             Foramt:"RTN","SCAPMC7",16,0) ;  @SCERR@(0)=Number of erros, undefined if none"RTN","SCAPMC7",17,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC7",18,0) ;               Piece     Description"RTN","SCAPMC7",19,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC7",20,0) N SCTM,SC,SCPARM,SCESEQ,SCLSEQ,SCOK"RTN","SCAPMC7",21,0) S SCOK=0"RTN","SCAPMC7",22,0) G:'$$OKDATA APTTMQ ;setup/check variables"RTN","SCAPMC7",23,0) S SCTM=+$P($G(^SCPT(404.42,SCPTTM,0)),U,3)"RTN","SCAPMC7",24,0) IF '$$PTTMACT(DFN,SCTM,SCINACT,.SCERR) D  G APTTMQ"RTN","SCAPMC7",25,0) .S SCOK=0"RTN","SCAPMC7",26,0) .S SCPARM("INACTIVE DATE")=SCINACT"RTN","SCAPMC7",27,0) .D ERR^SCAPMCU1(SCESEQ,4044201,.SCPARM,"",.SCERR)"RTN","SCAPMC7",28,0) ELSE  D"RTN","SCAPMC7",29,0) .S SCOK=1"RTN","SCAPMC7",30,0) .S SC($J,404.42,SCPTTM_",",.09)=SCINACT"RTN","SCAPMC7",31,0) .S SC($J,404.42,SCPTTM_",",.13)=$G(DUZ,.5)"RTN","SCAPMC7",32,0) .D NOW^%DTC"RTN","SCAPMC7",33,0) .S SC($J,404.42,SCPTTM_",",.14)=%"RTN","SCAPMC7",34,0) .D UPDATE^DIE("","SC($J)","SCIEN",.SCERR)"RTN","SCAPMC7",35,0) .I $D(@SCERR@("DIERR")) S SCOK=0"RTN","SCAPMC7",36,0)APTTMQ Q SCOK"RTN","SCAPMC7",37,0) ;"RTN","SCAPMC7",38,0)PTTMACT(DFN,SCTM,SCDT,SCERR) ;is patient assigned to a team on a given date-time?"RTN","SCAPMC7",39,0) N SCTMDTS,SCTMLST,SCOK"RTN","SCAPMC7",40,0) S SCOK=0"RTN","SCAPMC7",41,0) S (SCTMDTS("BEGIN"),SCTMDTS("END"))=SCDT"RTN","SCAPMC7",42,0) IF $$TMPT^SCAPMC3(DFN,"SCTMDTS","","SCTMLST",.SCERR) S:$D(SCTMLST("SCTM",SCTM)) SCOK=1"RTN","SCAPMC7",43,0) Q SCOK"RTN","SCAPMC7",44,0)OKDATA() ;check/setup variables - return 1 if ok/0 if error"RTN","SCAPMC7",45,0) N SCOK"RTN","SCAPMC7",46,0) S SCOK=1"RTN","SCAPMC7",47,0) D INIT^SCAPMCU1(.SCOK)"RTN","SCAPMC7",48,0) IF '$D(^DPT(DFN,0))!('$D(^SCPT(404.42,SCPTTM,0))) D  S SCOK=0"RTN","SCAPMC7",49,0) . S SCPARM("PATIENT")=$G(DFN,"Undefined")"RTN","SCAPMC7",50,0) . S SCPARM("Pt TEAM Asnt")=$G(SCPTTM,"Undefined")"RTN","SCAPMC7",51,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCAPMC7",52,0) S:'$G(SCACT) SCACT=DT"RTN","SCAPMC7",53,0) S:'$G(SCINACT) SCINACT=DT"RTN","SCAPMC7",54,0) Q SCOK"RTN","SCAPMC7",55,0) ;"RTN","SCAPMC7",56,0)INPTATM(DFNA,SCTM,SCFIELDA,SCACT,SCERR,SCNEWTM,SCOLDTM,SCBADTM) ;list of patients assigned to a team (404.42)"RTN","SCAPMC7",57,0) ; input: as per ACPTTM (above with the following change:)"RTN","SCAPMC7",58,0) ;    DFNA    = is the literal value of a patient array (e.g. "scpt""RTN","SCAPMC7",59,0) ;              there is at least one scpt(dfn)="" defined"RTN","SCAPMC7",60,0) ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to Team [returned]"RTN","SCAPMC7",61,0) ;    SCOLDTM = Subset of DFNA that was already assigned -Team [returned]"RTN","SCAPMC7",62,0) ;    SCBADTP = Subset of DFNA that was NOT assigned to Team  [returned]"RTN","SCAPMC7",63,0) ;    Note: The above three arrays return data in a user determined array"RTN","SCAPMC7",64,0) ; output: Count of Patients: "RTN","SCAPMC7",65,0) ;           1             2            3               4"RTN","SCAPMC7",66,0) ;    total assigned^newly assigned^assigned prior^not assigned"RTN","SCAPMC7",67,0) N DFN,SCNEWCNT,SCOLDCNT,SCBADCNT,SCX"RTN","SCAPMC7",68,0) S (SCNEWCNT,SCOLDCNT,SCBADCNT)=0"RTN","SCAPMC7",69,0) S DFN=0 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D"RTN","SCAPMC7",70,0) .S SCPTTM=$$HISTPTTM^SCAPMCU2(DFN,.SCTM,.SCACT)"RTN","SCAPMC7",71,0) .S SCX=$S(SCPTTM:$$INPTTM(.DFN,.SCPTTM,.SCFIELDA,.SCACT,.SCERR),1:0)"RTN","SCAPMC7",72,0) .;  SCX = ien of 404.42^new?"RTN","SCAPMC7",73,0) .IF $P(SCX,U,2) D  ;newly assigned"RTN","SCAPMC7",74,0) ..S SCNEWCNT=SCNEWCNT+1"RTN","SCAPMC7",75,0) ..S @SCNEWTM@(DFN)=+SCX   ;scnewtm"RTN","SCAPMC7",76,0) .IF $P(SCX,U,1)&('$P($G(SCX),U,2)) D  ;old"RTN","SCAPMC7",77,0) ..S SCOLDCNT=SCOLDCNT+1"RTN","SCAPMC7",78,0) ..S @SCOLDTM@(DFN)=+SCX"RTN","SCAPMC7",79,0) .IF 'SCX D"RTN","SCAPMC7",80,0) ..S @SCBADTM@(DFN)="""RTN","SCAPMC7",81,0) ..S SCBADCNT=SCBADCNT+1"RTN","SCAPMC7",82,0) Q (SCNEWCNT+SCOLDCNT)_U_SCNEWCNT_U_SCOLDCNT_U_SCBADCNT"RTN","SCAPMC7",83,0) ;"RTN","SCAPMC7",84,0)INPTSCTM(DFN,SCTM,SCINACT,SCERR) ;inactivate patient from a team - using last pt team assignment - Note: This uses pointer to 404.51 (team) not 404.42 as input"RTN","SCAPMC7",85,0) ; input:"RTN","SCAPMC7",86,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCAPMC7",87,0) ;  SCTM    = pointer to TEAM file (#404.51)"RTN","SCAPMC7",88,0) ;  SCINACT = date to inactivate [default=DT]"RTN","SCAPMC7",89,0) ;  SCERR = array NAME to store error messages."RTN","SCAPMC7",90,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCAPMC7",91,0) ;"RTN","SCAPMC7",92,0) ; Output:"RTN","SCAPMC7",93,0) ;  SCOK    = 1 if inactivation entry made to file 404.42, 0 ow"RTN","SCAPMC7",94,0) ;  SCERR() = Array of DIALOG file messages(errors) ."RTN","SCAPMC7",95,0) ;             Foramt:"RTN","SCAPMC7",96,0) ;  @SCERR@(0)=Number of erros, undefined if none"RTN","SCAPMC7",97,0) ;               Subscript: Sequential # from 1 to n"RTN","SCAPMC7",98,0) ;               Piece     Description"RTN","SCAPMC7",99,0) ;                 1       IEN of DIALOG file"RTN","SCAPMC7",100,0) ;"RTN","SCAPMC7",101,0) N SCACT"RTN","SCAPMC7",102,0) S SCACT=+$O(^SCPT(404.42,"AIDT",DFN,SCTM,""))"RTN","SCAPMC7",103,0) S SCPTTM=+$O(^SCPT(404.42,"AIDT",DFN,SCTM,SCACT,0))"RTN","SCAPMC7",104,0) Q $$INPTTM(.DFN,.SCPTTM,.SCINACT,.SCERR)"RTN","SCAPMR21")0^37^B2928736"RTN","SCAPMR21",1,0)SCAPMR21        ;ALB/REW/PDR - Position Reasignment ; AUG 1998"RTN","SCAPMR21",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCAPMR21",3,0) ;;1.0"RTN","SCAPMR21",4,0) ;"RTN","SCAPMR21",5,0)ACPTATP(DFNA,SCTPTO,SCTPFRM,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA,SCNEWTP,SCNEWTM,SCOLDTP,SCBADTP) ;list of patients to a position (pt TP assgn - #404.43 and possibly #404.42"RTN","SCAPMR21",6,0) ; input: "RTN","SCAPMR21",7,0) ;    DFNA    = is the literal value of a patient array (e.g. "scpt""RTN","SCAPMR21",8,0) ;              there is at least one scpt(dfn)="" defined"RTN","SCAPMR21",9,0) ;    SCTPTO  = IEN of Position reasigned "to" ptr to 404.57"RTN","SCAPMR21",10,0) ;    SCTPFRM = IEN of position reasigned "from" ptr to 404.57"RTN","SCAPMR21",11,0) ;    SCNEWTP = Subset of DFNA that was NEWLY assigned to a Position"RTN","SCAPMR21",12,0) ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to a Team"RTN","SCAPMR21",13,0) ;    SCOLDTP = Subset of DFNA that was already assigned to Position"RTN","SCAPMR21",14,0) ;    SCBADTP = Subset of DFNA that was NOT assigned to Position"RTN","SCAPMR21",15,0) ; output: Count of Patients (New or Old) assigned to Position"RTN","SCAPMR21",16,0) N DFN,SCCNT,SCX,SCNOMAIL,FASIEN"RTN","SCAPMR21",17,0) S SCNOMAIL=1"RTN","SCAPMR21",18,0) S SCCNT=0"RTN","SCAPMR21",19,0) S DFN=0"RTN","SCAPMR21",20,0) F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D"RTN","SCAPMR21",21,0) . S FASIEN=@DFNA@(DFN) ; get the "FROM" position Assignment"RTN","SCAPMR21",22,0) . S SCX=$$ACPTTP^SCRPMPSP(.DFN,.SCTPTO,.SCFIELDA,.SCACT,FASIEN,SCERR,.SCYESTM,"SCMAIN")"RTN","SCAPMR21",23,0) . ;  SCX = ien of 404.43^new?^404.42 ien (new entries only)^new?"RTN","SCAPMR21",24,0) . IF $P(SCX,U,2) D  ;newly assigned"RTN","SCAPMR21",25,0) .. S SCCNT=SCCNT+1"RTN","SCAPMR21",26,0) .. S @SCNEWTP@(DFN)=+SCX   ;scnewtp"RTN","SCAPMR21",27,0) .. S:$P(SCX,U,4) @SCNEWTM@(DFN)=$P(SCX,U,3)  ;scnewtm"RTN","SCAPMR21",28,0) . IF $P(SCX,U,1)&('$P(SCX,U,2)) D  ;old"RTN","SCAPMR21",29,0) .. S SCCNT=SCCNT+1"RTN","SCAPMR21",30,0) .. S @SCOLDTP@(DFN)=+SCX"RTN","SCAPMR21",31,0) . IF 'SCX D"RTN","SCAPMR21",32,0) .. S @SCBADTP@(DFN)=$P(SCX,U,5)"RTN","SCAPMR21",33,0) K SCNOMAIL"RTN","SCAPMR21",34,0) ;D MAILLST^SCMCTPM(SCTPTO,.SCADDFLD,DT,.SCNEWTP,.SCOLDTP,.SCBADTP)"RTN","SCAPMR21",35,0) D MAILLST^SCMRTPM(SCTPTO,.SCADDFLD,DT,.SCBADTP) ; report errors only"RTN","SCAPMR21",36,0) Q SCCNT"RTN","SCAPMR6")0^34^B4178067"RTN","SCAPMR6",1,0)SCAPMR6 ;ALB/REW/PDR - Team Reassignment APIs:APPTTM ; 5 Jul 1995"RTN","SCAPMR6",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCAPMR6",3,0) ;;1.0"RTN","SCAPMR6",4,0) ;"RTN","SCAPMR6",5,0) ; --------------------------- MAIN -------------------------------------"RTN","SCAPMR6",6,0)ACPTRATM(DFNA,SCTMTO,SCTMFRM,SCOTH,SCFIELDA,SCACT,SCERR,SCNEWTM,SCOLDTM,SCBADTM) ; list of patients RE-assigned to a team (404.42)"RTN","SCAPMR6",7,0) ; input: as per ACPTTM (above with the following change:)"RTN","SCAPMR6",8,0) ;     DFNA    = is the name of a patient array (e.g. $N(^TMP(SCJOB,"SC PATIENT LIST")))"RTN","SCAPMR6",9,0) ;              there is at least one scpt(dfn)="" defined"RTN","SCAPMR6",10,0) ;     SCTMTO   = pointer to "TO" team file"RTN","SCAPMR6",11,0) ;     SCTMFRM  = pointer to "FROM" team file - PDR 7/98"RTN","SCAPMR6",12,0) ;     SCOTH    = array of other parameters e.g. SCOTH("SIZELIM")"RTN","SCAPMR6",13,0) ;     SCFIELDA = List of array of fields and values in 404.42"RTN","SCAPMR6",14,0) ;     SCACT  = Date filed (NOW)"RTN","SCAPMR6",15,0) ;     SCERR  = Name of error message var"RTN","SCAPMR6",16,0) ;     SCNEWTM = Subset of DFNA that was NEWLY assigned to Team [returned]"RTN","SCAPMR6",17,0) ;     SCOLDTM = Subset of DFNA that was already assigned -Team [returned]"RTN","SCAPMR6",18,0) ;     SCBADTP = Subset of DFNA that was NOT assigned to Team  [returned]"RTN","SCAPMR6",19,0) ;    Note: The above three arrays return data in a user determined array"RTN","SCAPMR6",20,0) ; output: Count of Patients: "RTN","SCAPMR6",21,0) ;           1             2            3               4"RTN","SCAPMR6",22,0) ;    total assigned^newly assigned^assigned prior^not assigned"RTN","SCAPMR6",23,0) N DFN,SCNEWCNT,SCOLDCNT,SCBADCNT,SCX,SCNOMAIL,SCERR,FASIEN"RTN","SCAPMR6",24,0) S SCNOMAIL=1"RTN","SCAPMR6",25,0) S (SCNEWCNT,SCOLDCNT,SCBADCNT)=0"RTN","SCAPMR6",26,0) S DFN=0"RTN","SCAPMR6",27,0) F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D"RTN","SCAPMR6",28,0) . S FASIEN=@DFNA@(DFN) ; get the "FROM" team assignment"RTN","SCAPMR6",29,0) . S SCX=$$ACPTTM^SCRPMTA(DFN,SCTMTO,.SCFIELDA,.SCACT,FASIEN,.SCERR)"RTN","SCAPMR6",30,0) . ;  SCX = ien of 404.42^new?"RTN","SCAPMR6",31,0) . IF $P(SCX,U,2) D  ;newly assigned to TO Team"RTN","SCAPMR6",32,0) .. ;S ^TMP("PDR",$J,"NEW",DFN)="""RTN","SCAPMR6",33,0) .. S SCNEWCNT=SCNEWCNT+1"RTN","SCAPMR6",34,0) .. S @SCNEWTM@(DFN)=+SCX   ;scnewtm"RTN","SCAPMR6",35,0) . IF $P(SCX,U,1)&('$P(SCX,U,2)) D  ;already assigned to TO team"RTN","SCAPMR6",36,0) .. ;S ^TMP("PDR",$J,"OLD",DFN)="""RTN","SCAPMR6",37,0) .. S SCOLDCNT=SCOLDCNT+1"RTN","SCAPMR6",38,0) .. S @SCOLDTM@(DFN)=+SCX"RTN","SCAPMR6",39,0) . IF 'SCX D  ; Unable to reassign to new team, so don't discharge from old team"RTN","SCAPMR6",40,0) .. ;S ^TMP("PDR",$J,"BAD",DFN)="""RTN","SCAPMR6",41,0) .. S @SCBADTM@(DFN)=$P(SCX,U,3)"RTN","SCAPMR6",42,0) .. S SCBADCNT=SCBADCNT+1"RTN","SCAPMR6",43,0) K SCNOMAIL"RTN","SCAPMR6",44,0) ; Send out mail notices only if there are failures to reassign"RTN","SCAPMR6",45,0) I SCBADCNT D MAILLST^SCMRTMM(SCTMTO,.SCADDFLD,DT,.SCBADTM) ; report only on unable to assign"RTN","SCAPMR6",46,0) Q (SCNEWCNT+SCOLDCNT)_U_SCBADCNT"RTN","SCAPMR6",47,0) ;"RTN","SCMCBK")0^26^B50521462"RTN","SCMCBK",1,0)SCMCBK ;ALB/SCK - Broker Utilities for multiple patient assignments; 4/8/96"RTN","SCMCBK",2,0) ;;5.3;Scheduling;**41,51,148**;AUG 13, 1993"RTN","SCMCBK",3,0) ;;1T1;"RTN","SCMCBK",4,0) ;"RTN","SCMCBK",5,0) Q"RTN","SCMCBK",6,0) ;"RTN","SCMCBK",7,0)PTCLBLD(SCOK,SC) ; Build patient list for a selected clinic"RTN","SCMCBK",8,0) ;  'SC BLD PAT CLN LIST'"RTN","SCMCBK",9,0) ;"RTN","SCMCBK",10,0) D NEWVAR^SCMCBK1"RTN","SCMCBK",11,0) D CHK^SCUTBK"RTN","SCMCBK",12,0) D TMP^SCUTBK"RTN","SCMCBK",13,0) ;"RTN","SCMCBK",14,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",15,0) ;"RTN","SCMCBK",16,0) ;  Build exclude list"RTN","SCMCBK",17,0) S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")"RTN","SCMCBK",18,0) S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)"RTN","SCMCBK",19,0) D @BLOCK"RTN","SCMCBK",20,0) ;"RTN","SCMCBK",21,0) S SCOK=$$PTCLBR^SCAPMC26(.SCCLN,.SCTEAM,"SCDTRNG")"RTN","SCMCBK",22,0) K ^TMP("SCMC",$J,"EXCLUDE PT")"RTN","SCMCBK",23,0) G:SCOK=0 PTCLNQ"RTN","SCMCBK",24,0) ;"RTN","SCMCBK",25,0) M ^TMP($J,"SC PCMM IN")=^TMP(SCOK,"SCCLPT")"RTN","SCMCBK",26,0) K ^TMP(SCOK,"SCCLPT")"RTN","SCMCBK",27,0) ;"RTN","SCMCBK",28,0) D ALPHA^SCAPMCU2("^TMP($J,""SC PCMM IN"")","^TMP($J,""SCCLPT"")")"RTN","SCMCBK",29,0) ;"RTN","SCMCBK",30,0) S SCOK=$J_U_^TMP($J,"SC PCMM IN",0)"RTN","SCMCBK",31,0) ;"RTN","SCMCBK",32,0)PTCLNQ D CLRVAR^SCMCBK1"RTN","SCMCBK",33,0) Q"RTN","SCMCBK",34,0) ;"RTN","SCMCBK",35,0)PTSCBLD(SCOK,SC) ; Build patient list for selected stop code"RTN","SCMCBK",36,0) ;  'SC BLD PAT SCDE LIST'"RTN","SCMCBK",37,0) ;"RTN","SCMCBK",38,0) D NEWVAR^SCMCBK1"RTN","SCMCBK",39,0) ;"RTN","SCMCBK",40,0) D CHK^SCUTBK"RTN","SCMCBK",41,0) D TMP^SCUTBK"RTN","SCMCBK",42,0) ;"RTN","SCMCBK",43,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",44,0) ;"RTN","SCMCBK",45,0) K ^TMP($J,"SCSCDE")"RTN","SCMCBK",46,0) ;"RTN","SCMCBK",47,0) ;  Build exclude list"RTN","SCMCBK",48,0) S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")"RTN","SCMCBK",49,0) S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)"RTN","SCMCBK",50,0) D @BLOCK"RTN","SCMCBK",51,0) ;"RTN","SCMCBK",52,0) IF 'SCOK1 S SCOK="0^0^0^0" G PTSCQ"RTN","SCMCBK",53,0) ;"RTN","SCMCBK",54,0) S SCOK=0"RTN","SCMCBK",55,0) S SCOK=$$PTST^SCAPMC27(SCSCDE,"SCDTRNG",SCNUM,.SCLOC,"SCERMSG",SCMORE)"RTN","SCMCBK",56,0) K ^TMP("SCMC",$J,"EXCLUDE PT")"RTN","SCMCBK",57,0) ;"RTN","SCMCBK",58,0) M ^TMP($J,"SC PCMM IN")=@SCLOC"RTN","SCMCBK",59,0) S I1=$G(^TMP($J,"SC PCMM IN",0))"RTN","SCMCBK",60,0) F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))"RTN","SCMCBK",61,0) ;"RTN","SCMCBK",62,0) D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCSCDE"")")"RTN","SCMCBK",63,0) S SCOK=$J_U_+I1_U_SCOK"RTN","SCMCBK",64,0) ;"RTN","SCMCBK",65,0)PTSCQ D CLRVAR^SCMCBK1"RTN","SCMCBK",66,0) Q"RTN","SCMCBK",67,0) ;"RTN","SCMCBK",68,0)PTTMBLD(SCOK,SC) ; Build a list of patients for a selected team and return the $J of the TMP globall"RTN","SCMCBK",69,0) ;  where the list is stored."RTN","SCMCBK",70,0) ;  ' SC BLD PAT TM LIST ' "RTN","SCMCBK",71,0) ;"RTN","SCMCBK",72,0) D NEWVAR^SCMCBK1"RTN","SCMCBK",73,0) D CHK^SCUTBK"RTN","SCMCBK",74,0) D TMP^SCUTBK"RTN","SCMCBK",75,0) ;"RTN","SCMCBK",76,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",77,0) K ^TMP($J,"SCTEAM")"RTN","SCMCBK",78,0) ;"RTN","SCMCBK",79,0) ;   Build exclude list"RTN","SCMCBK",80,0) S SCOK=0"RTN","SCMCBK",81,0) S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")"RTN","SCMCBK",82,0) S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)"RTN","SCMCBK",83,0) D @BLOCK"RTN","SCMCBK",84,0) ;"RTN","SCMCBK",85,0) S SCOK=$$PTTM^SCAPMC2(SCFRMTM,"SCDTRNG",.SCLOC,"SCERMSG")"RTN","SCMCBK",86,0) K ^TMP("SCMC",$J,"EXCLUDE PT")"RTN","SCMCBK",87,0) M ^TMP($J,"SC PCMM IN")=@SCLOC"RTN","SCMCBK",88,0) ;"RTN","SCMCBK",89,0) S I="" F  S I=$O(^TMP($J,"SC PCMM IN",I)) Q:'I  D"RTN","SCMCBK",90,0) . S ^TMP($J,"PCMM TMP",I)=^TMP($J,"SC PCMM IN",I)"RTN","SCMCBK",91,0) ;"RTN","SCMCBK",92,0) D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCTEAM"")")"RTN","SCMCBK",93,0) S I1="" F  S I1=$O(^TMP($J,"SCTEAM",I1)) Q:'I1  S I=I1"RTN","SCMCBK",94,0) ;"RTN","SCMCBK",95,0) S SCOK=$J_U_+I_U_SCOK"RTN","SCMCBK",96,0) ;"RTN","SCMCBK",97,0) D CLRVAR^SCMCBK1"RTN","SCMCBK",98,0) Q"RTN","SCMCBK",99,0) ;"RTN","SCMCBK",100,0)PTPSBLD(SCOK,SC) ;"RTN","SCMCBK",101,0) ;  ' SC BLD PAT POS LIST '"RTN","SCMCBK",102,0) ;"RTN","SCMCBK",103,0) D NEWVAR^SCMCBK1"RTN","SCMCBK",104,0) D CHK^SCUTBK"RTN","SCMCBK",105,0) D TMP^SCUTBK"RTN","SCMCBK",106,0) ;"RTN","SCMCBK",107,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",108,0) ;"RTN","SCMCBK",109,0) K ^TMP($J,"SCPOS")"RTN","SCMCBK",110,0) ;"RTN","SCMCBK",111,0) ;   Build exclude list"RTN","SCMCBK",112,0) S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")"RTN","SCMCBK",113,0) S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)"RTN","SCMCBK",114,0) D @BLOCK"RTN","SCMCBK",115,0) ;"RTN","SCMCBK",116,0) S SCOK=0"RTN","SCMCBK",117,0) ;"RTN","SCMCBK",118,0) S SCOK=$$PTTP^SCAPMC11(SCFRMPOS,"SCDTRNG",.SCLOC,.SCERMSG)"RTN","SCMCBK",119,0) K ^TMP("SCMC",$J,"EXCLUDE PT")"RTN","SCMCBK",120,0) M ^TMP($J,"SC PCMM IN")=@SCLOC"RTN","SCMCBK",121,0) ;"RTN","SCMCBK",122,0) S I1=$G(^TMP($J,"SC PCMM IN",0))"RTN","SCMCBK",123,0) F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))"RTN","SCMCBK",124,0) D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCPOS"")")"RTN","SCMCBK",125,0) S SCOK=$J_U_+I1_U_SCOK"RTN","SCMCBK",126,0) ;"RTN","SCMCBK",127,0) ;IF '+$G(^TMP($J,"SCPOS",0)) D  S SCOK=$J_U_SCOK"RTN","SCMCBK",128,0) ;. S I="" F  S I=$O(^TMP($J,"SCPOS",I)) Q:'I  S SCOK=I"RTN","SCMCBK",129,0) ;"RTN","SCMCBK",130,0) D CLRVAR^SCMCBK1"RTN","SCMCBK",131,0) Q"RTN","SCMCBK",132,0) ;"RTN","SCMCBK",133,0)PTAPBLD(SCOK,SC) ;  Build patient list for selected appointment range."RTN","SCMCBK",134,0) ;     '  SC BLD PAT APT LIST '"RTN","SCMCBK",135,0) ;"RTN","SCMCBK",136,0) ;N SCCLN,SCTEAM,SCDTRNG,SCLOC,SCERMSG,SCNUM,SCCOUNT,SCMORE,SCOK1,SCER2,SCOUT,SCBLOCK"RTN","SCMCBK",137,0) ;"RTN","SCMCBK",138,0) D NEWVAR^SCMCBK1"RTN","SCMCBK",139,0) D CHK^SCUTBK"RTN","SCMCBK",140,0) D TMP^SCUTBK"RTN","SCMCBK",141,0) ;"RTN","SCMCBK",142,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",143,0) ;"RTN","SCMCBK",144,0) K ^TMP($J,"SCCLN")"RTN","SCMCBK",145,0) ;"RTN","SCMCBK",146,0) ;   Build exclude list"RTN","SCMCBK",147,0) S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")"RTN","SCMCBK",148,0) S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)"RTN","SCMCBK",149,0) D @BLOCK"RTN","SCMCBK",150,0) ;"RTN","SCMCBK",151,0) IF 'SCOK1 S SCOK="0^0^0^0" G PTAPQ"RTN","SCMCBK",152,0) S SCOK=0"RTN","SCMCBK",153,0) S SCOK=$$PTAP^SCAPMC28(SCCLN,"SCDTRNG",SCNUM,.SCLOC,"SCERMSG",SCMORE)"RTN","SCMCBK",154,0) K ^TMP("SCMC",$J,"EXCLUDE PT")"RTN","SCMCBK",155,0) ;"RTN","SCMCBK",156,0) M ^TMP($J,"SC PCMM IN")=@SCLOC"RTN","SCMCBK",157,0) ;"RTN","SCMCBK",158,0) S I1=$G(^TMP($J,"SC PCMM IN",0))"RTN","SCMCBK",159,0) F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))"RTN","SCMCBK",160,0) ;"RTN","SCMCBK",161,0) D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCAPP"")")"RTN","SCMCBK",162,0) S SCOK=$J_U_I1_U_SCOK"RTN","SCMCBK",163,0) ;"RTN","SCMCBK",164,0) D CLRVAR^SCMCBK1"RTN","SCMCBK",165,0)PTAPQ Q"RTN","SCMCBK",166,0) ;"RTN","SCMCBK",167,0)PTGET(SCDATA,SC) ;  Return a block of patients to the client"RTN","SCMCBK",168,0) ;     'SC GET PAT BLOCK'"RTN","SCMCBK",169,0) ;"RTN","SCMCBK",170,0) ;     SCJOB   = $J for the ^TMP global"RTN","SCMCBK",171,0) ;     SCJOBID = The second subscript id for the ^TMP global"RTN","SCMCBK",172,0) ;     SCSTART = Beginning entry number for the block retrieval in the ^TMP global"RTN","SCMCBK",173,0) ;     SCEND   = The ending entry number for the block retrieval"RTN","SCMCBK",174,0) ;     SCLAST  = The last entry number in the ^TMP global"RTN","SCMCBK",175,0) ;"RTN","SCMCBK",176,0) N SCJOB,SCSTART,SCEND,I,SCLAST,SCJOBID"RTN","SCMCBK",177,0) ;"RTN","SCMCBK",178,0) D CHK^SCUTBK"RTN","SCMCBK",179,0) D TMP^SCUTBK"RTN","SCMCBK",180,0) ;"RTN","SCMCBK",181,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",182,0) ;"RTN","SCMCBK",183,0) F I=SCSTART:1:SCEND Q:'$G(^TMP(SCJOB,SCJOBID,I),0)  D"RTN","SCMCBK",184,0) . S SCDATA(I)=^TMP(SCJOB,SCJOBID,I)"RTN","SCMCBK",185,0) I SCEND>SCLAST K ^TMP(SCJOB,SCJOBID)"RTN","SCMCBK",186,0) ;"RTN","SCMCBK",187,0) D CLRVAR^SCMCBK1"RTN","SCMCBK",188,0) Q"RTN","SCMCBK",189,0) ;"RTN","SCMCBK",190,0)PTLSTBLD(SCOK,SCVAL) ;  Build the list of patients to be assigned in the ^TMP($J,"SC PATIENT LIST",DFN) global"RTN","SCMCBK",191,0) ;  'SC BLD PAT LIST'"RTN","SCMCBK",192,0) ;"RTN","SCMCBK",193,0) N SCJOB,SCDFN"RTN","SCMCBK",194,0) ;"RTN","SCMCBK",195,0) D CHK^SCUTBK"RTN","SCMCBK",196,0) D TMP^SCUTBK"RTN","SCMCBK",197,0) ;"RTN","SCMCBK",198,0) S SCOK=0"RTN","SCMCBK",199,0) I SCVAL["Start" D  G PTBLDQ"RTN","SCMCBK",200,0) .S SCOK=$J"RTN","SCMCBK",201,0) .K ^TMP(SCOK,"SC PATIENT LIST")"RTN","SCMCBK",202,0) ;"RTN","SCMCBK",203,0) S SCJOB=$P(SCVAL,U,1)"RTN","SCMCBK",204,0) S SCDFN=$P(SCVAL,U,2)"RTN","SCMCBK",205,0) S ^TMP(SCJOB,"SC PATIENT LIST",SCDFN)="""RTN","SCMCBK",206,0) S SCOK=1"RTN","SCMCBK",207,0)PTBLDQ Q"RTN","SCMCBK",208,0) ;"RTN","SCMCBK",209,0)PTFILE(SCOK,SC) ;  File the patient assignments in the ^TMP($J,"SC TEAM ASSIGN",SCDFN) global"RTN","SCMCBK",210,0) ;    'SC FILE PAT TM ASGN'"RTN","SCMCBK",211,0) ;"RTN","SCMCBK",212,0) I XWBAPVER=1 D QUEUED^SCMCBK4(1) Q"RTN","SCMCBK",213,0) ;"RTN","SCMCBK",214,0) N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCDTVAR"RTN","SCMCBK",215,0) ;"RTN","SCMCBK",216,0) D CHK^SCUTBK"RTN","SCMCBK",217,0) D TMP^SCUTBK"RTN","SCMCBK",218,0) ;"RTN","SCMCBK",219,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",220,0) G:+$G(SCJOB)=0 FILEQ"RTN","SCMCBK",221,0) ;"RTN","SCMCBK",222,0) ;"RTN","SCMCBK",223,0) S SCADDFLD(.08)=$G(SC("TYPE"),99)"RTN","SCMCBK",224,0) S SCADDFLD(.1)=$G(SC("RESTRICT"),0)"RTN","SCMCBK",225,0) S SCADDFLD(.11)=DUZ"RTN","SCMCBK",226,0) S SCADDFLD(.12)=DT"RTN","SCMCBK",227,0) ;"RTN","SCMCBK",228,0) S SCX=$$ACPTATM^SCAPMC6("^TMP(SCJOB,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")"RTN","SCMCBK",229,0) D BAD^SCMCBK1(.SCBAD,.SCOLD,.SCOK)"RTN","SCMCBK",230,0) S SCOK(.1)=SCX"RTN","SCMCBK",231,0) ;"RTN","SCMCBK",232,0) K ^TMP(SCJOB,"SC PATIENT LIST")"RTN","SCMCBK",233,0) ;"RTN","SCMCBK",234,0) D CLRVAR^SCMCBK1"RTN","SCMCBK",235,0)FILEQ Q"RTN","SCMCBK",236,0) ;"RTN","SCMCBK",237,0)POSFILE(SCOK,SC) ;  File the patient assignments in the ^TMP($J,"SC PATIENT LIST") global "RTN","SCMCBK",238,0) ;   ' SC FILE PAT POS ASGN '"RTN","SCMCBK",239,0) ;"RTN","SCMCBK",240,0) I XWBAPVER=1 D QUEUED^SCMCBK4(2) Q"RTN","SCMCBK",241,0) ;"RTN","SCMCBK",242,0) N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCPOS,SCDTVAR,SCMAFLD,SCADTM,SCNEW1"RTN","SCMCBK",243,0) ;"RTN","SCMCBK",244,0) D CHK^SCUTBK"RTN","SCMCBK",245,0) D TMP^SCUTBK"RTN","SCMCBK",246,0) ;"RTN","SCMCBK",247,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK",248,0) G:+$G(SCJOB)=0 FILEQ"RTN","SCMCBK",249,0) S SCADTM=1"RTN","SCMCBK",250,0) ;"RTN","SCMCBK",251,0) S SCADDFLD(.05)=$G(SC("TYPE"),0)"RTN","SCMCBK",252,0) S SCADDFLD(.06)=DUZ"RTN","SCMCBK",253,0) S SCADDFLD(.07)=DT"RTN","SCMCBK",254,0) ;"RTN","SCMCBK",255,0) S SCX=$$ACPTATP^SCAPMC21("^TMP(SCJOB,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERMSG",SCADTM,"","SCNEW","SCNEW1","SCOLD","SCBAD")"RTN","SCMCBK",256,0) ;"RTN","SCMCBK",257,0) D BAD2^SCMCBK1(.SCBAD,.SCOLD,.SCOK)"RTN","SCMCBK",258,0) S SCOK(.1)=SCX"RTN","SCMCBK",259,0) K ^TMP(SCJOB,"SC PATIENT LIST")"RTN","SCMCBK",260,0) ;"RTN","SCMCBK",261,0) D CLRVAR^SCMCBK1"RTN","SCMCBK",262,0) Q"RTN","SCMCBK",263,0) ;"RTN","SCMCBK",264,0)BLKPOS ;"RTN","SCMCBK",265,0) N SCX"RTN","SCMCBK",266,0) S SCX=$G(SCDTRNG("END"))"RTN","SCMCBK",267,0) S SCDTRNG("END")=3990101 ;check forever"RTN","SCMCBK",268,0) S SCOK1=$$PTTP^SCAPMC(SCBLOCK,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")"RTN","SCMCBK",269,0) S SCDTRNG("END")=SCX"RTN","SCMCBK",270,0) Q"RTN","SCMCBK",271,0) ;"RTN","SCMCBK",272,0)BLKTM ;"RTN","SCMCBK",273,0) N SCX"RTN","SCMCBK",274,0) S SCX=$G(SCDTRNG("END"))"RTN","SCMCBK",275,0) S SCDTRNG("END")=3990101 ;check forever"RTN","SCMCBK",276,0) S SCOK1=$$PTTM^SCAPMC(SCBLOCK,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")"RTN","SCMCBK",277,0) S SCDTRNG("END")=SCX"RTN","SCMCBK",278,0) Q"RTN","SCMCBK4")0^28^B8180242"RTN","SCMCBK4",1,0)SCMCBK4 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1; AUG 5, 1998"RTN","SCMCBK4",2,0) ;;5.3;Scheduling;**148T4**;AUG 13, 1993"RTN","SCMCBK4",3,0) Q"RTN","SCMCBK4",4,0) ;"RTN","SCMCBK4",5,0) ;"RTN","SCMCBK4",6,0)QUEUED(SCX) ;if XWBAPVER=1"RTN","SCMCBK4",7,0) ;       ;SCX=1: called from ptfile^scmcbk"RTN","SCMCBK4",8,0) ;       ;SCX=2: called from posfile^scmcbk"RTN","SCMCBK4",9,0) ;"RTN","SCMCBK4",10,0) S SCOK("Result")=0"RTN","SCMCBK4",11,0) S SC("DUZ")=DUZ"RTN","SCMCBK4",12,0) S ZTDTH=$H"RTN","SCMCBK4",13,0) S SCX=$$S(SCX)"RTN","SCMCBK4",14,0) S ZTRTN=$P(SCX,"::")"RTN","SCMCBK4",15,0) S ZTDESC=$P(SCX,"::",2)"RTN","SCMCBK4",16,0) S ZTSAVE("SC(")="""RTN","SCMCBK4",17,0) ;;;S ZTSAVE("^TMP("_SC("JOB")_",")="""RTN","SCMCBK4",18,0) S ZTSAVE("^TMP($J,")="""RTN","SCMCBK4",19,0) D ^%ZTLOAD"RTN","SCMCBK4",20,0) I $D(ZTSK) S SCOK("Result")=1"RTN","SCMCBK4",21,0) D EXIT1^SCRPTM"RTN","SCMCBK4",22,0) ;;;K SCX,^TMP(SC("JOB"))"RTN","SCMCBK4",23,0) K SCX,^TMP($J)"RTN","SCMCBK4",24,0) Q"RTN","SCMCBK4",25,0) ;"RTN","SCMCBK4",26,0)QMPTTM ; process patient team assignments"RTN","SCMCBK4",27,0) N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCDTVAR"RTN","SCMCBK4",28,0) ;"RTN","SCMCBK4",29,0) D SETUP"RTN","SCMCBK4",30,0) ;"RTN","SCMCBK4",31,0) S SCADDFLD(.08)=$G(SC("TYPE"),99)"RTN","SCMCBK4",32,0) S SCADDFLD(.1)=$G(SC("RESTRICT"),0)"RTN","SCMCBK4",33,0) S SCADDFLD(.11)=$G(SC("DUZ"),.5)"RTN","SCMCBK4",34,0) S SCADDFLD(.12)=DT"RTN","SCMCBK4",35,0) ;"RTN","SCMCBK4",36,0) ;       ;like $$ACPTATM^SCAPMC6(..."RTN","SCMCBK4",37,0) ;;;S SCX=$$ACPTATM^SCMCBK5("^TMP(SCJOB,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")"RTN","SCMCBK4",38,0) S SCX=$$ACPTATM^SCMCBK5("^TMP($J,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")"RTN","SCMCBK4",39,0) ;"RTN","SCMCBK4",40,0) D CLEANUP"RTN","SCMCBK4",41,0)FILEQ Q"RTN","SCMCBK4",42,0) ;"RTN","SCMCBK4",43,0) ;"RTN","SCMCBK4",44,0)QMPTPO ;process patient position assignments"RTN","SCMCBK4",45,0) N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG"RTN","SCMCBK4",46,0) N SCX,SCPOS,SCDTVAR,SCMAFLD,SCADTM,SCNEW1"RTN","SCMCBK4",47,0) ;"RTN","SCMCBK4",48,0) D SETUP"RTN","SCMCBK4",49,0) S SCADTM=1"RTN","SCMCBK4",50,0) ;"RTN","SCMCBK4",51,0) S SCADDFLD(.05)=$G(SC("TYPE"),0)"RTN","SCMCBK4",52,0) S SCADDFLD(.06)=$G(SC("DUZ"),.5)"RTN","SCMCBK4",53,0) S SCADDFLD(.07)=DT"RTN","SCMCBK4",54,0) ;"RTN","SCMCBK4",55,0) ;       ;like $$ACPTATP^SCAPMC21(..."RTN","SCMCBK4",56,0) ;;;S SCX=$$ACPTATP^SCMCBK8("^TMP(SCJOB,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERMSG",SCADTM,"","SCNEW","SCNEW1","SCOLD","SCBAD")"RTN","SCMCBK4",57,0) S SCX=$$ACPTATP^SCMCBK8("^TMP($J,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERMSG",SCADTM,"","SCNEW","SCNEW1","SCOLD","SCBAD")"RTN","SCMCBK4",58,0) ;"RTN","SCMCBK4",59,0) D CLEANUP"RTN","SCMCBK4",60,0) Q"RTN","SCMCBK4",61,0) ;"RTN","SCMCBK4",62,0)SETUP D CHK^SCUTBK"RTN","SCMCBK4",63,0) D TMP^SCUTBK"RTN","SCMCBK4",64,0) D PARSE^SCMCBK1(.SC)"RTN","SCMCBK4",65,0) S SCMAIL1=$G(SC("DUZ"),.5)"RTN","SCMCBK4",66,0) S SCJOB=$J"RTN","SCMCBK4",67,0) ;;;G:+$G(SCJOB)=0 FILEQ"RTN","SCMCBK4",68,0) Q"RTN","SCMCBK4",69,0) ;"RTN","SCMCBK4",70,0)CLEANUP ;;;K ^TMP(SCJOB,"SC PATIENT LIST")"RTN","SCMCBK4",71,0) K ^TMP($J,"SC PATIENT LIST")"RTN","SCMCBK4",72,0) D CLRVAR^SCMCBK1"RTN","SCMCBK4",73,0) Q"RTN","SCMCBK4",74,0) ;"RTN","SCMCBK4",75,0)S(SCX) ;return text string"RTN","SCMCBK4",76,0) Q $P($T(T+SCX),";;",2)"RTN","SCMCBK4",77,0) ;"RTN","SCMCBK4",78,0)T ;;"RTN","SCMCBK4",79,0) ;;QMPTTM^SCMCBK4::PCMM Multiple Patient Team Assignment"RTN","SCMCBK4",80,0) ;;QMPTPO^SCMCBK4::PCMM Multiple Patient Position Assignment"RTN","SCMCBK4",81,0) ;"RTN","SCMCBK5")0^29^B9050999"RTN","SCMCBK5",1,0)SCMCBK5 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1 ;;Aug 7, 1998"RTN","SCMCBK5",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCBK5",3,0) Q"RTN","SCMCBK5",4,0) ;"RTN","SCMCBK5",5,0)ACPTTM(DFN,SCTM,SCFIELDA,SCACT,SCERR) ;add a patient to a team (pt tm assgn - #404.42"RTN","SCMCBK5",6,0) ; input:"RTN","SCMCBK5",7,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCMCBK5",8,0) ;  SCTM    = pointer to TEAM file (#404.51)"RTN","SCMCBK5",9,0) ;  SCFIELDA= array of additional fields to be added"RTN","SCMCBK5",10,0) ;  SCACT   = date to activate [default=DT]"RTN","SCMCBK5",11,0) ;  SCERR = array NAME to store error messages."RTN","SCMCBK5",12,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCMCBK5",13,0) ;"RTN","SCMCBK5",14,0) ; Output:"RTN","SCMCBK5",15,0) ;  Returned = ien of 404.42 - 0 if none after^new?^Message"RTN","SCMCBK5",16,0) ;"RTN","SCMCBK5",17,0) N SCPTTM,SCESEQ,SCPARM,SCIEN,SC,SCFLD,SCNEWTM,SCMESS,SCX"RTN","SCMCBK5",18,0) ;"RTN","SCMCBK5",19,0) ;check/setup variables"RTN","SCMCBK5",20,0) G:'$$OKDATA^SCAPMC6() APTTMQ"RTN","SCMCBK5",21,0) ; "RTN","SCMCBK5",22,0) ;is patient deceased?"RTN","SCMCBK5",23,0) I $$DP^SCMCBK6(DFN) S SCMESS=$$S^SCMCBK6(1) G APTTMQ"RTN","SCMCBK5",24,0) ;"RTN","SCMCBK5",25,0) ;can PC assignment be made?"RTN","SCMCBK5",26,0) I $$T1() D  I 'SCX S SCMESS=$P(SCX,U,2) G APTTMQ"RTN","SCMCBK5",27,0) .S SCX=$$OKPTTMPC^SCMCBK6(DFN,SCTM,SCACT)"RTN","SCMCBK5",28,0) .;      ;like $$OKPTTMPC^SCMCTMU2(..."RTN","SCMCBK5",29,0) .Q"RTN","SCMCBK5",30,0) ;"RTN","SCMCBK5",31,0) ;is pt already assignmed to team?"RTN","SCMCBK5",32,0) S SCPTTM=$$PTTMACT^SCAPMC6(DFN,SCTM,SCACT,.SCERR)"RTN","SCMCBK5",33,0) I SCPTTM G APTTMQ"RTN","SCMCBK5",34,0) ;"RTN","SCMCBK5",35,0) I $D(SCFIELDA) D"RTN","SCMCBK5",36,0) .S SCFLD=0"RTN","SCMCBK5",37,0) .F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCMCBK5",38,0) ..S SC($J,404.42,"+1,",SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCMCBK5",39,0) ..Q"RTN","SCMCBK5",40,0) .Q"RTN","SCMCBK5",41,0) ;"RTN","SCMCBK5",42,0) S SC($J,404.42,"+1,",.01)=DFN"RTN","SCMCBK5",43,0) S SC($J,404.42,"+1,",.02)=SCACT"RTN","SCMCBK5",44,0) S SC($J,404.42,"+1,",.03)=SCTM"RTN","SCMCBK5",45,0) D UPDATE^DIE("","SC($J)","SCIEN","SCERR")"RTN","SCMCBK5",46,0) ;"RTN","SCMCBK5",47,0) I $D(@SCERR) K SCIEN"RTN","SCMCBK5",48,0) E  D"RTN","SCMCBK5",49,0) .S SCPTTM=$G(SCIEN(1))"RTN","SCMCBK5",50,0) .S SCNEWTM=1"RTN","SCMCBK5",51,0) .D AFTERTM^SCMCDD1(SCPTTM)"RTN","SCMCBK5",52,0) .Q"RTN","SCMCBK5",53,0) ;"RTN","SCMCBK5",54,0)APTTMQ Q +$G(SCPTTM)_U_+$G(SCNEWTM)_U_$G(SCMESS)"RTN","SCMCBK5",55,0) ;"RTN","SCMCBK5",56,0)T1() Q $S('$D(SCFIELDA):0,('($D(@SCFIELDA@(.08))#2)):0,($G(@SCFIELDA@(.08))=1):1,1:0)"RTN","SCMCBK5",57,0) ;"RTN","SCMCBK5",58,0)ACPTATM(DFNA,SCTM,SCFIELDA,SCACT,SCERR,SCNEWTM,SCOLDTM,SCBADTM) ;list of patients assigned to a team (404.42)"RTN","SCMCBK5",59,0) ; input: as per ACPTTM (above with the following change:)"RTN","SCMCBK5",60,0) ;    DFNA    = is the literal value of a patient array (e.g. "scpt""RTN","SCMCBK5",61,0) ;              there is at least one scpt(dfn)="" defined"RTN","SCMCBK5",62,0) ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to Team [returned]"RTN","SCMCBK5",63,0) ;    SCOLDTM = Subset of DFNA that was already assigned -Team [returned]"RTN","SCMCBK5",64,0) ;    SCBADTP = Subset of DFNA that was NOT assigned to Team  [returned]"RTN","SCMCBK5",65,0) ;    Note: The above three arrays return data in a user determined array"RTN","SCMCBK5",66,0) ;"RTN","SCMCBK5",67,0) ; output: Count of Patients: "RTN","SCMCBK5",68,0) ;           1             2            3               4"RTN","SCMCBK5",69,0) ;    total assigned^newly assigned^assigned prior^not assigned"RTN","SCMCBK5",70,0) ;"RTN","SCMCBK5",71,0) N DFN,SCNEWCNT,SCOLDCNT,SCBADCNT,SCTOTCNT,SCX,SCNOMAIL"RTN","SCMCBK5",72,0) S SCNOMAIL=1"RTN","SCMCBK5",73,0) S (SCNEWCNT,SCOLDCNT,SCBADCNT)=0"RTN","SCMCBK5",74,0) S SCTOTCNT=$$PASSCNT(DFNA)"RTN","SCMCBK5",75,0) I SCTOTCNT=0 G MAIL"RTN","SCMCBK5",76,0) ;"RTN","SCMCBK5",77,0) S DFN=0"RTN","SCMCBK5",78,0) F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D"RTN","SCMCBK5",79,0) .S SCX=$$ACPTTM(.DFN,.SCTM,.SCFIELDA,.SCACT,.SCERR)"RTN","SCMCBK5",80,0) .;"RTN","SCMCBK5",81,0) .;newly assigned"RTN","SCMCBK5",82,0) .I $P(SCX,U,2)=1 D  Q"RTN","SCMCBK5",83,0) ..S SCNEWCNT=SCNEWCNT+1"RTN","SCMCBK5",84,0) ..S @SCNEWTM@(DFN)=+SCX"RTN","SCMCBK5",85,0) ..Q"RTN","SCMCBK5",86,0) .;"RTN","SCMCBK5",87,0) .;already assigned"RTN","SCMCBK5",88,0) .I +SCX D  Q"RTN","SCMCBK5",89,0) ..;;;I $P(SCX,U,1)&('$P(SCX,U,2)) D  Q"RTN","SCMCBK5",90,0) ..S SCOLDCNT=SCOLDCNT+1"RTN","SCMCBK5",91,0) ..S @SCOLDTM@(DFN)=+SCX"RTN","SCMCBK5",92,0) ..Q"RTN","SCMCBK5",93,0) .;"RTN","SCMCBK5",94,0) .;not assigned ;;;I 'SCX D"RTN","SCMCBK5",95,0) .S @SCBADTM@(DFN)=$P(SCX,U,3)"RTN","SCMCBK5",96,0) .S SCBADCNT=SCBADCNT+1"RTN","SCMCBK5",97,0) .Q"RTN","SCMCBK5",98,0) ;"RTN","SCMCBK5",99,0)MAIL K SCNOMAIL"RTN","SCMCBK5",100,0) D MAILLST^SCMCBK7(SCTM,.SCADDFLD,DT,.SCNEWTM,.SCOLDTM,.SCBADTM,SCTOTCNT)"RTN","SCMCBK5",101,0) Q (SCNEWCNT+SCOLDCNT)_U_SCNEWCNT_U_SCOLDCNT_U_SCBADCNT"RTN","SCMCBK5",102,0) ;"RTN","SCMCBK5",103,0)PASSCNT(DFNA) ;count total patients passed to queue"RTN","SCMCBK5",104,0) ;input:  DFNA=tmp array location"RTN","SCMCBK5",105,0) ;output: count"RTN","SCMCBK5",106,0) ;"RTN","SCMCBK5",107,0) N SCX,DFN"RTN","SCMCBK5",108,0) S (SCX,DFN)=0"RTN","SCMCBK5",109,0) F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  S SCX=SCX+1"RTN","SCMCBK5",110,0) Q SCX"RTN","SCMCBK5",111,0) ;"RTN","SCMCBK6")0^30^B3899556"RTN","SCMCBK6",1,0)SCMCBK6 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1 ;;Aug 7, 1998"RTN","SCMCBK6",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCBK6",3,0) Q"RTN","SCMCBK6",4,0) ;"RTN","SCMCBK6",5,0)YSPTTMPC(DFN,SCACT) ;is it ok to give patient a new pc team?"RTN","SCMCBK6",6,0) ;  Return [OK:1,Not OK: 0^Message]"RTN","SCMCBK6",7,0) N SCOK,SCX,SCTM"RTN","SCMCBK6",8,0) ;"RTN","SCMCBK6",9,0) ;does pt have a current pc team?"RTN","SCMCBK6",10,0) S SCTM=$$GETPCTM^SCAPMCU2(DFN,DT,1)"RTN","SCMCBK6",11,0) IF SCTM>0 S SCOK="0^Pt has current PC Team Assignment"_U_SCTM G QTOKPC"RTN","SCMCBK6",12,0) ;;;I SCTM>0 D SCOK(2) G QTOKPC"RTN","SCMCBK6",13,0) ;"RTN","SCMCBK6",14,0) ;does pt have a future pc team?"RTN","SCMCBK6",15,0) S SCX=$O(^SCPT(404.42,"APCTM",DFN,1,SCACT))"RTN","SCMCBK6",16,0) IF SCX D  G QTOKPC"RTN","SCMCBK6",17,0) .S SCTM=$O(^SCPT(404.42,"APCTM",DFN,1,+SCX,0))"RTN","SCMCBK6",18,0) .S SCOK="0^Patient has future PC Assignment to the "_$P($G(^SCTM(404.51,+SCTM,0)),U,1)_" team."_U_SCTM"RTN","SCMCBK6",19,0) ;;;.D SCOK(3)"RTN","SCMCBK6",20,0) ;"RTN","SCMCBK6",21,0) S SCOK=1"RTN","SCMCBK6",22,0)QTOKPC Q SCOK"RTN","SCMCBK6",23,0) ;"RTN","SCMCBK6",24,0)OKPTTMPC(DFN,SCTM,DATE) ; like OKPTTMPC^SCMCTMU2"RTN","SCMCBK6",25,0) ;               ;;; supports meaningful reject messages"RTN","SCMCBK6",26,0) ;               ;;; for PHASE II enhancement??"RTN","SCMCBK6",27,0) ;  Return [OK:1,Not OK: 0^Message]"RTN","SCMCBK6",28,0) N SCOK,SCPCTM,SCL"RTN","SCMCBK6",29,0) S SCOK=1"RTN","SCMCBK6",30,0) ;"RTN","SCMCBK6",31,0) ;is this a possible pc team?"RTN","SCMCBK6",32,0) I '$P($G(^SCTM(404.51,+$G(SCTM),0)),U,5) S SCOK=0 G QTOKTM"RTN","SCMCBK6",33,0) ;;;I '$P($G(^SCTM(404.51,+$G(SCTM),0)),U,5) D SCOK(5) G QTOKTM"RTN","SCMCBK6",34,0) S SCPCTM=$$GETPCTM^SCAPMCU2(DFN,DATE,1)"RTN","SCMCBK6",35,0) I SCPCTM D  G QTOKTM"RTN","SCMCBK6",36,0) .I SCPCTM'=SCTM D"RTN","SCMCBK6",37,0) ..S SCOK=0"RTN","SCMCBK6",38,0) ;;;..D SCOK(7)"RTN","SCMCBK6",39,0) E  D"RTN","SCMCBK6",40,0) .S SCOK=$$YSPTTMPC(DFN,DATE)"RTN","SCMCBK6",41,0)QTOKTM Q SCOK"RTN","SCMCBK6",42,0) ;"RTN","SCMCBK6",43,0)DP(DFN) ;output: boolean, is patient(DFN) dead?"RTN","SCMCBK6",44,0) Q $P($G(^DPT(DFN,.35)),U)'="""RTN","SCMCBK6",45,0) ;"RTN","SCMCBK6",46,0)SCOK(SCL) ;"RTN","SCMCBK6",47,0) ;input SCL = Text Line"RTN","SCMCBK6",48,0) ;output = SCOK"RTN","SCMCBK6",49,0) S SCOK="0^"_$$S(SCL)_U_$G(SCTM)"RTN","SCMCBK6",50,0) Q"RTN","SCMCBK6",51,0) ;"RTN","SCMCBK6",52,0)S(SCL) ;output: text string"RTN","SCMCBK6",53,0) Q $P($T(T+SCL),";;",2)"RTN","SCMCBK6",54,0) ;"RTN","SCMCBK6",55,0)T ;;"RTN","SCMCBK6",56,0)1 ;;Pt is deceased"RTN","SCMCBK6",57,0)2 ;;Pt has current PC assignment"RTN","SCMCBK6",58,0)3 ;;Pt has future PC assignment"RTN","SCMCBK6",59,0)4 ;;Pt has future team assignment"RTN","SCMCBK6",60,0)5 ;;Not PC team"RTN","SCMCBK6",61,0)6 ;;Team inactive"RTN","SCMCBK6",62,0)7 ;;Not correct assignment type"RTN","SCMCBK6",63,0) ;;"RTN","SCMCBK7")0^31^B14840496"RTN","SCMCBK7",1,0)SCMCBK7 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1 ;;Aug 6, 1998"RTN","SCMCBK7",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCBK7",3,0) Q"RTN","SCMCBK7",4,0) ;"RTN","SCMCBK7",5,0)MAILLST(SCTM,SCFIELDA,SCDATE,SCNEWTM,SCOLDTM,SCBADTM,SCTOTCNT) ;"RTN","SCMCBK7",6,0) ;       ;like MAILLIST^SCMCTMM(..."RTN","SCMCBK7",7,0) ; Input:"RTN","SCMCBK7",8,0) ;    SCTM     - Pointer to Team File (#404.51)"RTN","SCMCBK7",9,0) ;    SCFIELDA - Field array with internal values"RTN","SCMCBK7",10,0) ;    SCDATE   - Effective Date"RTN","SCMCBK7",11,0) ;    SCNEWTM  - DFN array of newly assigned to team"RTN","SCMCBK7",12,0) ;    SCOLDTM  - DFN array of previously assigned to team"RTN","SCMCBK7",13,0) ;    SCBADTM  - DFN array of patients unassignable to team"RTN","SCMCBK7",14,0) ;    SCTOTCNT - Count of DFN array passed to process"RTN","SCMCBK7",15,0) ;"RTN","SCMCBK7",16,0) N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,ZTQUEUED"RTN","SCMCBK7",17,0) N SCTMNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE"RTN","SCMCBK7",18,0) N SCE,SCB,SCDELTEM,SCJ,SCL,SCDETAIL"RTN","SCMCBK7",19,0) ;"RTN","SCMCBK7",20,0) D PREP1"RTN","SCMCBK7",21,0) S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)"RTN","SCMCBK7",22,0) S XMSUB=$$S(4)_SCTMNM"RTN","SCMCBK7",23,0) S XMTEXT="^TMP($J,""SCTMXM"",""RTN","SCMCBK7",24,0) ;"RTN","SCMCBK7",25,0) S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)"RTN","SCMCBK7",26,0) D SETLN($$S(5)_SCTMNM)"RTN","SCMCBK7",27,0) D SETLN($$S(6)_$$FMTE^XLFDT(SCDATE))"RTN","SCMCBK7",28,0) D SETLN($$S(7)_SCTOTCNT)"RTN","SCMCBK7",29,0) D SETLN(" ")"RTN","SCMCBK7",30,0) ;"RTN","SCMCBK7",31,0) I $D(SCFIELDA) D"RTN","SCMCBK7",32,0) .F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D"RTN","SCMCBK7",33,0) ..S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)"RTN","SCMCBK7",34,0) ..D SETLN($$TEXT^SCMCTMM(404.42,SCNODE,SCNDX,SCSPACE,1))"RTN","SCMCBK7",35,0) ;"RTN","SCMCBK7",36,0) I SCTOTCNT=0 G MAIL"RTN","SCMCBK7",37,0) ;"RTN","SCMCBK7",38,0)NEW I $S('$D(SCNEWTM):0,1:$O(@SCNEWTM@(0))) D BLDLST(1)"RTN","SCMCBK7",39,0) ;"RTN","SCMCBK7",40,0)BAD I $S('$D(SCBADTM):0,1:$O(@SCBADTM@(0))) D BLDLST(2)"RTN","SCMCBK7",41,0) ;"RTN","SCMCBK7",42,0)OLD I $S('$D(SCOLDTM):0,1:$O(@SCOLDTM@(0))) D BLDLST(3)"RTN","SCMCBK7",43,0) ;"RTN","SCMCBK7",44,0)MAIL D SEND(8)"RTN","SCMCBK7",45,0) ;"RTN","SCMCBK7",46,0)QTMULT K:$G(SCDELTEM) ^TMP("SCTM MAIL LST",$J,SCTM)"RTN","SCMCBK7",47,0) K ^TMP($J,"SCTMXM")"RTN","SCMCBK7",48,0) Q"RTN","SCMCBK7",49,0) ;"RTN","SCMCBK7",50,0)PREP1 S ZTQUEUED=1"RTN","SCMCBK7",51,0) S SCDELTEM=1 ;ok to delete tmp global"RTN","SCMCBK7",52,0) S $P(SCSPACE," ",80)="""RTN","SCMCBK7",53,0) S SCLNCNT=0"RTN","SCMCBK7",54,0) S SCOK=1"RTN","SCMCBK7",55,0) Q"RTN","SCMCBK7",56,0) ;"RTN","SCMCBK7",57,0) ;"RTN","SCMCBK7",58,0)SETLN(TEXT) ;"RTN","SCMCBK7",59,0) D SETLN^SCMCTMM(TEXT)"RTN","SCMCBK7",60,0) Q"RTN","SCMCBK7",61,0) ;"RTN","SCMCBK7",62,0)SEND(SCX) ;input SCX=points to string to use as sender"RTN","SCMCBK7",63,0) ;"RTN","SCMCBK7",64,0) S XMY(SCMAIL1)="""RTN","SCMCBK7",65,0) S XMDUZ=$$S(SCX)"RTN","SCMCBK7",66,0) ;S XMDUZ=.5"RTN","SCMCBK7",67,0) D ^XMD"RTN","SCMCBK7",68,0) Q"RTN","SCMCBK7",69,0) ;"RTN","SCMCBK7",70,0)BLDLST(SCL) ;create text by new/bad/old"RTN","SCMCBK7",71,0) ;input SCL = for header line, ^tmp, $o"RTN","SCMCBK7",72,0) N SCJ"RTN","SCMCBK7",73,0) D SETLN(" ")"RTN","SCMCBK7",74,0) D SETLN($$S(SCL))"RTN","SCMCBK7",75,0) S SCJ="^TMP(""SCTM MAIL LST"","_$J_","_SCTM_","_SCL_")""RTN","SCMCBK7",76,0) S DFN=0"RTN","SCMCBK7",77,0) F  S DFN=$$O(SCL) Q:'DFN  D DTLLST"RTN","SCMCBK7",78,0) D SETLST(0)"RTN","SCMCBK7",79,0) Q"RTN","SCMCBK7",80,0) ;"RTN","SCMCBK7",81,0)DTLLST ;detail the list"RTN","SCMCBK7",82,0) S SCPTNM=$P(^DPT(DFN,0),U,1)"RTN","SCMCBK7",83,0) D PID^VADPT6"RTN","SCMCBK7",84,0) S SCDETAIL="    "_SCPTNM_" ("_$G(VA("PID"))_")""RTN","SCMCBK7",85,0) I SCL=2 D DOD"RTN","SCMCBK7",86,0) S @SCJ@(DFN)=SCDETAIL"RTN","SCMCBK7",87,0) S @SCJ@("B",SCPTNM,DFN)="""RTN","SCMCBK7",88,0) Q"RTN","SCMCBK7",89,0) ;"RTN","SCMCBK7",90,0)SETLST(SCX) ;set the list into message"RTN","SCMCBK7",91,0) ;input: SCX: 0=team assignment, 1=position assignment"RTN","SCMCBK7",92,0) S SCPTNM="""RTN","SCMCBK7",93,0) F  S SCPTNM=$O(@SCJ@("B",SCPTNM)) Q:SCPTNM']""  D"RTN","SCMCBK7",94,0) .S DFN=0"RTN","SCMCBK7",95,0) .F  S DFN=$O(@SCJ@("B",SCPTNM,DFN)) Q:'DFN  D"RTN","SCMCBK7",96,0) ..S SCDETAIL=$G(@SCJ@(DFN))"RTN","SCMCBK7",97,0) ..I SCX=0 D SETLN(SCDETAIL) Q"RTN","SCMCBK7",98,0) ..D SETLN^SCMCTPM(SCDETAIL)"RTN","SCMCBK7",99,0) ..Q"RTN","SCMCBK7",100,0) .Q"RTN","SCMCBK7",101,0) Q"RTN","SCMCBK7",102,0) ;"RTN","SCMCBK7",103,0)DOD ;include death notification when that is reason for bad"RTN","SCMCBK7",104,0) ;only necessary because SRS does not call to return detailed"RTN","SCMCBK7",105,0) ;reject message for all failures, only date of death failures"RTN","SCMCBK7",106,0) ;"RTN","SCMCBK7",107,0) ;if Phase II enhancement calls for detailed reject message"RTN","SCMCBK7",108,0) ;DOD won't be an exception, so this code won't be necessary"RTN","SCMCBK7",109,0) ; "RTN","SCMCBK7",110,0) N SCX"RTN","SCMCBK7",111,0) I $D(SCBADTM) S SCX=$P(@SCBADTM@(DFN),U)"RTN","SCMCBK7",112,0) E  S SCX=$P(@SCBADTP@(DFN),U)"RTN","SCMCBK7",113,0) I SCX=$$S^SCMCBK6(1) S SCDETAIL=SCDETAIL_" ["_SCX_"]""RTN","SCMCBK7",114,0) Q"RTN","SCMCBK7",115,0) ;"RTN","SCMCBK7",116,0)O(SCL) ;returns next patient in array"RTN","SCMCBK7",117,0) Q $S(SCL=1:$O(@SCNEWTM@(DFN)),SCL=2:$O(@SCBADTM@(DFN)),1:$O(@SCOLDTM@(DFN)))"RTN","SCMCBK7",118,0) ;"RTN","SCMCBK7",119,0)S(SCL) ;returns line of text "RTN","SCMCBK7",120,0) Q $P($T(T+SCL),";;",2)"RTN","SCMCBK7",121,0) ;"RTN","SCMCBK7",122,0)T ;;"RTN","SCMCBK7",123,0)1 ;;There has been a new team assignment for the following patients:"RTN","SCMCBK7",124,0)2 ;;There has been NO new team assignment for the following patients:"RTN","SCMCBK7",125,0)3 ;;The following patients were already assigned to the target team:"RTN","SCMCBK7",126,0)4 ;;Multiple PATIENT-TEAM ASSIGNMENT for ;;"RTN","SCMCBK7",127,0)5 ;;Team:                  ;;"RTN","SCMCBK7",128,0)6 ;;Effective Date:        ;;"RTN","SCMCBK7",129,0)7 ;;Processed:             ;;"RTN","SCMCBK7",130,0)8 ;;PCMM - Multiple Patient-Team Assignment"RTN","SCMCBK7",131,0)9 ;;PCMM - Multiple Patient-Position Assignment"RTN","SCMCBK8")0^32^B16392980"RTN","SCMCBK8",1,0)SCMCBK8 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1;;Aug 7, 1998"RTN","SCMCBK8",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCBK8",3,0) Q"RTN","SCMCBK8",4,0) ;"RTN","SCMCBK8",5,0)ACPTTP(DFN,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA) ;add/edit a patient to a position (pt TP assgn - #404.43"RTN","SCMCBK8",6,0) ; input:"RTN","SCMCBK8",7,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCMCBK8",8,0) ;  SCTP    = pointer to TEAM POSTION file (#404.57)"RTN","SCMCBK8",9,0) ;  SCFIELDA= array of extra field entries - scfielda('fld#')=value"RTN","SCMCBK8",10,0) ;  SCACT   = date to activate [default=DT]"RTN","SCMCBK8",11,0) ;  SCERR = array NAME to store error messages."RTN","SCMCBK8",12,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCMCBK8",13,0) ;  SCYESTM = Should team assignment be made, if none active now?[1=YES]"RTN","SCMCBK8",14,0) ;  SCMAINA= array of extra field entries for 404.42 (only if scyestm=1)"RTN","SCMCBK8",15,0) ;"RTN","SCMCBK8",16,0) ; Output:"RTN","SCMCBK8",17,0) ;  Returned = ien of 404.43^new?^404.42 ien (new entries only)^new?^Message"RTN","SCMCBK8",18,0) ;  SCERR()  = Array of DIALOG file messages(errors) ."RTN","SCMCBK8",19,0) ;             Foramt:"RTN","SCMCBK8",20,0) ;               Subscript: Sequential # from 1 to n"RTN","SCMCBK8",21,0) ;               Piece     Description"RTN","SCMCBK8",22,0) ;                 1       IEN of DIALOG file"RTN","SCMCBK8",23,0) ;"RTN","SCMCBK8",24,0) N SCESEQ,SCPARM,SCIEN,SC,HISTPTTP,SCFLD,SCTM,SCPTTMA,SCPTTPA,SCTMFLDA"RTN","SCMCBK8",25,0) N SCNEWTP,SCNEWTM,SCAPTDT,SCAPTTPO,SCAPTTPE,SCMESS"RTN","SCMCBK8",26,0) ;"RTN","SCMCBK8",27,0) ;check/setup variables"RTN","SCMCBK8",28,0) G:'$$OKDATA^SCAPMC21 APTTPQ"RTN","SCMCBK8",29,0) ;"RTN","SCMCBK8",30,0) S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)"RTN","SCMCBK8",31,0) ;S SCPTTPA=$$HISTPTTP^SCAPMCU2(DFN,SCTP,SCACT)"RTN","SCMCBK8",32,0) S SCAPTDT("BEGIN")=SCACT"RTN","SCMCBK8",33,0) S SCAPTDT("END")=3990101"RTN","SCMCBK8",34,0) S SCAPTDT("INCL")=0"RTN","SCMCBK8",35,0) ;"RTN","SCMCBK8",36,0) ;is patient alive?"RTN","SCMCBK8",37,0) I $$DP^SCMCBK6(DFN) S SCMESS=$$S^SCMCBK6(1) G APTTPQ"RTN","SCMCBK8",38,0) ;"RTN","SCMCBK8",39,0) ;is PC role assignable?"RTN","SCMCBK8",40,0) I $$T1(),'$$CHKPC^SCAPMC21(DFN) S SCMESS=4044300.001 G APTTPQ"RTN","SCMCBK8",41,0) ;"RTN","SCMCBK8",42,0) G:'$$TPPT^SCAPMC(DFN,"SCAPTDT",,,,,0,"SCAPTTPO","SCAPTTPE") APTTPQ"RTN","SCMCBK8",43,0) S SCPTTPA=$O(SCAPTTPO("SCTP",SCTM,SCTP,0))"RTN","SCMCBK8",44,0) ;"RTN","SCMCBK8",45,0) ;to edit existing entry"RTN","SCMCBK8",46,0) I SCPTTPA D  G APTTPQ"RTN","SCMCBK8",47,0) .S SC($J,404.43,(+SCPTTPA)_",",.03)=SCACT"RTN","SCMCBK8",48,0) .I $D(SCFIELDA) D"RTN","SCMCBK8",49,0) ..S SCFLD=0"RTN","SCMCBK8",50,0) ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCMCBK8",51,0) ...S SC($J,404.43,(+SCPTTPA)_",",SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCMCBK8",52,0) ...Q"RTN","SCMCBK8",53,0) ..Q"RTN","SCMCBK8",54,0) .D FILE^DIE("","SC($J)",SCERR)"RTN","SCMCBK8",55,0) .Q"RTN","SCMCBK8",56,0) ;"RTN","SCMCBK8",57,0) ;needed: patient team assignment for date"RTN","SCMCBK8",58,0) S SCPTTMA=+$$HISTPTTM^SCAPMCU2(DFN,SCTM,SCACT)"RTN","SCMCBK8",59,0) ;"RTN","SCMCBK8",60,0) ; if flag is set to add patient to team & no pt tm assignment exists"RTN","SCMCBK8",61,0) I ('SCPTTMA)&($G(SCYESTM))&($D(SCFIELDA)) D"RTN","SCMCBK8",62,0) .S:$D(@SCFIELDA@(.05)) @SCMAINA@(.08)=$G(@SCMAINA@(.08),$S(@SCFIELDA@(.05):1,1:99))"RTN","SCMCBK8",63,0) .S:$D(@SCFIELDA@(.06)) @SCMAINA@(.11)=$G(@SCMAINA@(.11),@SCFIELDA@(.06))"RTN","SCMCBK8",64,0) .S:$D(@SCFIELDA@(.07)) @SCMAINA@(.12)=$G(@SCMAINA@(.12),@SCFIELDA@(.07))"RTN","SCMCBK8",65,0) .S:$D(@SCFIELDA@(.08)) @SCMAINA@(.13)=$G(@SCMAINA@(.13),@SCFIELDA@(.08))"RTN","SCMCBK8",66,0) .S:$D(@SCFIELDA@(.09)) @SCMAINA@(.14)=$G(@SCMAINA@(.14),@SCFIELDA@(.09))"RTN","SCMCBK8",67,0) .S SCPTTMA=+$$ACPTTM^SCAPMC(DFN,SCTM,.SCMAINA,SCACT,SCERR)"RTN","SCMCBK8",68,0) .Q"RTN","SCMCBK8",69,0) ;"RTN","SCMCBK8",70,0)TM I 'SCPTTMA G APTTPQ"RTN","SCMCBK8",71,0) ;"RTN","SCMCBK8",72,0) I $D(SCFIELDA) D"RTN","SCMCBK8",73,0) .S SCFLD=0"RTN","SCMCBK8",74,0) .F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCMCBK8",75,0) ..S SC($J,404.43,"+1,",SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCMCBK8",76,0) ..Q"RTN","SCMCBK8",77,0) .Q"RTN","SCMCBK8",78,0) ;"RTN","SCMCBK8",79,0) S SC($J,404.43,"+1,",.01)=SCPTTMA"RTN","SCMCBK8",80,0) S SC($J,404.43,"+1,",.02)=SCTP"RTN","SCMCBK8",81,0) S SC($J,404.43,"+1,",.03)=SCACT"RTN","SCMCBK8",82,0) D UPDATE^DIE("","SC($J)","SCIEN",SCERR)"RTN","SCMCBK8",83,0) ;"RTN","SCMCBK8",84,0) I $D(@SCERR) K SCIEN"RTN","SCMCBK8",85,0) E  D"RTN","SCMCBK8",86,0) .S SCPTTPA=+$G(SCIEN(1))"RTN","SCMCBK8",87,0) .S SCNEWTP=1"RTN","SCMCBK8",88,0) .D AFTERTP^SCMCDD1(SCPTTPA)"RTN","SCMCBK8",89,0) .Q"RTN","SCMCBK8",90,0) ;"RTN","SCMCBK8",91,0)APTTPQ Q +$G(SCPTTPA)_U_+$G(SCNEWTP)_U_+$G(SCPTTMA)_U_+$P($G(SCPTTMA),U,2)_U_$G(SCMESS)"RTN","SCMCBK8",92,0) ;"RTN","SCMCBK8",93,0)T1() Q $S('$D(SCFIELDA):0,'$D(@SCFIELDA@(.05)):0,($G(@SCFIELDA@(.05))=1):1,($G(@SCFIELDA@(.05))=2):1,1:0)"RTN","SCMCBK8",94,0) ;"RTN","SCMCBK8",95,0)ACPTATP(DFNA,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA,SCNEWTP,SCNEWTM,SCOLDTP,SCBADTP) ;list of patients to a position (pt TP assgn - #404.43 and possibly #404.42"RTN","SCMCBK8",96,0) ; input: as per ACPTTP (above with the following change:)"RTN","SCMCBK8",97,0) ;    DFNA    = is the literal value of a patient array (e.g. "scpt""RTN","SCMCBK8",98,0) ;              there is at least one scpt(dfn)="" defined"RTN","SCMCBK8",99,0) ;    SCNEWTP = Subset of DFNA that was NEWLY assigned to a Position"RTN","SCMCBK8",100,0) ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to a Team"RTN","SCMCBK8",101,0) ;    SCOLDTP = Subset of DFNA that was already assigned to Position"RTN","SCMCBK8",102,0) ;    SCBADTP = Subset of DFNA that was NOT assigned to Position"RTN","SCMCBK8",103,0) ; output: Count of Patients (New or Old) assigned to Position"RTN","SCMCBK8",104,0) ;"RTN","SCMCBK8",105,0) N DFN,SCCNT,SCX,SCNOMAIL,SCTOTCNT"RTN","SCMCBK8",106,0) S SCNOMAIL=1"RTN","SCMCBK8",107,0) S SCCNT=0"RTN","SCMCBK8",108,0) S SCTOTCNT=$$PASSCNT^SCMCBK5(DFNA)"RTN","SCMCBK8",109,0) I SCTOTCNT=0 G MAIL"RTN","SCMCBK8",110,0) S DFN=0"RTN","SCMCBK8",111,0) F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D"RTN","SCMCBK8",112,0) .S SCX=$$ACPTTP(.DFN,.SCTP,.SCFIELDA,.SCACT,.SCERR,.SCYESTM)"RTN","SCMCBK8",113,0) .;"RTN","SCMCBK8",114,0) .;newly assigned"RTN","SCMCBK8",115,0) .I $P(SCX,U,2)=1 D  Q"RTN","SCMCBK8",116,0) ..S SCCNT=SCCNT+1"RTN","SCMCBK8",117,0) ..S @SCNEWTP@(DFN)=+SCX"RTN","SCMCBK8",118,0) ..S:$P(SCX,U,4) @SCNEWTM@(DFN)=$P(SCX,U,3)"RTN","SCMCBK8",119,0) ..Q"RTN","SCMCBK8",120,0) .;"RTN","SCMCBK8",121,0) .;already assigned"RTN","SCMCBK8",122,0) .;I $P(SCX,U,1)&('$P(SCX,U,2)) D"RTN","SCMCBK8",123,0) .I +SCX D  Q "RTN","SCMCBK8",124,0) ..S SCCNT=SCCNT+1"RTN","SCMCBK8",125,0) ..S @SCOLDTP@(DFN)=+SCX"RTN","SCMCBK8",126,0) ..Q"RTN","SCMCBK8",127,0) .;"RTN","SCMCBK8",128,0) .;not assigned;;I 'SCX D "RTN","SCMCBK8",129,0) .S @SCBADTP@(DFN)=$P(SCX,U,5)"RTN","SCMCBK8",130,0) .Q"RTN","SCMCBK8",131,0) ;"RTN","SCMCBK8",132,0)MAIL K SCNOMAIL"RTN","SCMCBK8",133,0) D MAILLST^SCMCBK9(SCTP,.SCADDFLD,DT,.SCNEWTP,.SCOLDTP,.SCBADTP,SCTOTCNT)"RTN","SCMCBK8",134,0) Q SCCNT"RTN","SCMCBK8",135,0) ;"RTN","SCMCBK9")0^33^B8431416"RTN","SCMCBK9",1,0)SCMCBK9 ;bp/cmf - multiple patient assignments mail queue - RPCVersion = 1;;Aug 7, 1998"RTN","SCMCBK9",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCBK9",3,0) Q"RTN","SCMCBK9",4,0) ;"RTN","SCMCBK9",5,0)MAILLST(SCTP,SCFIELDA,SCDATE,SCNEWTP,SCOLDTP,SCBADTP,SCTOTCNT) ;"RTN","SCMCBK9",6,0) ;      ;like MAILLIST^SCMCTPM(..."RTN","SCMCBK9",7,0) ; Input:"RTN","SCMCBK9",8,0) ;    SCTP     - Pointer to Team Position File (#404.57)"RTN","SCMCBK9",9,0) ;    SCFIELDA - Field array with internal values"RTN","SCMCBK9",10,0) ;    SCDATE   - Effective Date"RTN","SCMCBK9",11,0) ;    SCNEWTP  - DFN array of newly assigned to position"RTN","SCMCBK9",12,0) ;    SCOLDTP  - DFN array of previously assigned to position"RTN","SCMCBK9",13,0) ;    SCBADTP  - DFN array of patients unassignable to position"RTN","SCMCBK9",14,0) ;    SCTOTCNT - Count of DFN array passed to process"RTN","SCMCBK9",15,0) ;"RTN","SCMCBK9",16,0) N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,SCTPDT,ZTQUEUED"RTN","SCMCBK9",17,0) N SCTPNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE"RTN","SCMCBK9",18,0) N SCE,SCB,SCTMNM,SCDELTEM,SCDETAIL,SCJ,SCL"RTN","SCMCBK9",19,0) ;"RTN","SCMCBK9",20,0) D PREP1^SCMCBK7"RTN","SCMCBK9",21,0) ;"RTN","SCMCBK9",22,0) S SCTPNM=$P($G(^SCTM(404.57,+SCTP,0)),U,1)"RTN","SCMCBK9",23,0) S XMSUB=$$S(4)_SCTPNM"RTN","SCMCBK9",24,0) S XMTEXT="^TMP($J,""SCTPXM"",""RTN","SCMCBK9",25,0) S SCTMNM=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+SCTP,0)),U,2),0)),U,1)"RTN","SCMCBK9",26,0) ;"RTN","SCMCBK9",27,0) D SETLN($$S(5)_SCTMNM)"RTN","SCMCBK9",28,0) D SETLN($$S(6)_SCTPNM)"RTN","SCMCBK9",29,0) D SETLN($$S(7)_$$FMTE^XLFDT(SCDATE))"RTN","SCMCBK9",30,0) D SETLN($$S(8)_SCTOTCNT)"RTN","SCMCBK9",31,0) D SETLN(" ")"RTN","SCMCBK9",32,0) ;"RTN","SCMCBK9",33,0) IF $D(SCFIELDA) D"RTN","SCMCBK9",34,0) .F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D"RTN","SCMCBK9",35,0) ..S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)"RTN","SCMCBK9",36,0) ..D SETLN($$TEXT^SCMCTPM(404.43,SCNODE,SCNDX,SCSPACE,1))"RTN","SCMCBK9",37,0) ;"RTN","SCMCBK9",38,0) I SCTOTCNT=0 G MAIL"RTN","SCMCBK9",39,0) ;"RTN","SCMCBK9",40,0)NEW I $S('$D(SCNEWTP):0,1:$O(@SCNEWTP@(0))) D BLDLST(1)"RTN","SCMCBK9",41,0) ;"RTN","SCMCBK9",42,0)BAD I $S('$D(SCBADTP):0,1:$O(@SCBADTP@(0))) D BLDLST(2)"RTN","SCMCBK9",43,0) ;"RTN","SCMCBK9",44,0)OLD I $S('$D(SCOLDTP):0,1:$O(@SCOLDTP@(0))) D BLDLST(3)"RTN","SCMCBK9",45,0) ;"RTN","SCMCBK9",46,0)MAIL D SEND^SCMCBK7(9)"RTN","SCMCBK9",47,0) ;"RTN","SCMCBK9",48,0)QTMULT K:$G(SCDELTEM) ^TMP("SCTP MAIL LST",$J,SCTP)"RTN","SCMCBK9",49,0) K ^TMP($J,"SCTPXM")"RTN","SCMCBK9",50,0) Q"RTN","SCMCBK9",51,0) ;"RTN","SCMCBK9",52,0)SETLN(TEXT) ;"RTN","SCMCBK9",53,0) D SETLN^SCMCTPM(TEXT)"RTN","SCMCBK9",54,0) Q"RTN","SCMCBK9",55,0) ;"RTN","SCMCBK9",56,0)BLDLST(SCL)     ;create text by new/bad/old"RTN","SCMCBK9",57,0) ;input SCL = for header line, ^tmp, $o"RTN","SCMCBK9",58,0) N SCJ"RTN","SCMCBK9",59,0) D SETLN(" ")"RTN","SCMCBK9",60,0) D SETLN($$S(SCL))"RTN","SCMCBK9",61,0) S SCJ="^TMP(""SCTP MAIL LST"","_$J_","_SCTP_","_SCL_")""RTN","SCMCBK9",62,0) S DFN=0"RTN","SCMCBK9",63,0) F  S DFN=$$O(SCL) Q:'DFN  D DTLLST^SCMCBK7"RTN","SCMCBK9",64,0) D SETLST^SCMCBK7(1)"RTN","SCMCBK9",65,0) Q"RTN","SCMCBK9",66,0) ;"RTN","SCMCBK9",67,0)O(SCL) ;returns next patient in array"RTN","SCMCBK9",68,0) Q $S(SCL=1:$O(@SCNEWTP@(DFN)),SCL=2:$O(@SCBADTP@(DFN)),1:$O(@SCOLDTP@(DFN)))"RTN","SCMCBK9",69,0) ;"RTN","SCMCBK9",70,0)S(SCL) ;return text string"RTN","SCMCBK9",71,0) Q $P($T(T+SCL),";;",2)"RTN","SCMCBK9",72,0) ;"RTN","SCMCBK9",73,0)T ;;"RTN","SCMCBK9",74,0) ;;There has been a new position assignment for the following patients:"RTN","SCMCBK9",75,0) ;;There has been NO new position assignment for the following patients:"RTN","SCMCBK9",76,0) ;;The following patients were already assigned to the target position:"RTN","SCMCBK9",77,0) ;;Multiple PATIENT-POSITION ASSIGNMENT for ;;"RTN","SCMCBK9",78,0) ;;Team:                  ;;"RTN","SCMCBK9",79,0) ;;Position:              ;;"RTN","SCMCBK9",80,0) ;;Effective Date:        ;;"RTN","SCMCBK9",81,0) ;;Processed:             ;;"RTN","SCMCBK9",82,0) ;                          "RTN","SCMCMU")0^12^B16631470"RTN","SCMCMU",1,0)SCMCMU ;ALB/MJK - PCMM Mass Team/Position Unassignment Utility ; 10 Jul 98"RTN","SCMCMU",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCMU",3,0) ;"RTN","SCMCMU",4,0)EN ; -- entry point for mass unassignment (mu)"RTN","SCMCMU",5,0) ;"RTN","SCMCMU",6,0) N SCMUTYPE,SCTEAM,SCPOS,SCABORT,SCDATE,SCDIS,SCTPDIS"RTN","SCMCMU",7,0) ;"RTN","SCMCMU",8,0) S (SCTEAM,SCPOS,SCDIS)=0"RTN","SCMCMU",9,0) S SCABORT=-1"RTN","SCMCMU",10,0) ;"RTN","SCMCMU",11,0) ; -- get type of md (team or position)"RTN","SCMCMU",12,0) S SCMUTYPE=$$TYPE()"RTN","SCMCMU",13,0) IF SCMUTYPE=SCABORT G ENQ"RTN","SCMCMU",14,0) ;"RTN","SCMCMU",15,0) ; -- get effective date"RTN","SCMCMU",16,0) S SCDATE=$$DATE()"RTN","SCMCMU",17,0) IF SCDATE=SCABORT G ENQ"RTN","SCMCMU",18,0) ;"RTN","SCMCMU",19,0) ; -- get team"RTN","SCMCMU",20,0) S SCTEAM=$$TEAM(SCDATE)"RTN","SCMCMU",21,0) IF SCTEAM=SCABORT G ENQ"RTN","SCMCMU",22,0) ;"RTN","SCMCMU",23,0) ; -- get position if position md"RTN","SCMCMU",24,0) IF SCMUTYPE="T" D  IF SCDIS=SCABORT G ENQ"RTN","SCMCMU",25,0) . S SCDIS=$$TMDIS(SCTEAM,SCDATE,.SCTPDIS)"RTN","SCMCMU",26,0) ;"RTN","SCMCMU",27,0) ; -- get position if position md"RTN","SCMCMU",28,0) IF SCMUTYPE="P" D  IF SCPOS=SCABORT!(SCDIS=SCABORT) G ENQ"RTN","SCMCMU",29,0) . S SCPOS=$$POS(SCTEAM,SCDATE)"RTN","SCMCMU",30,0) . S SCDIS=$$TPDIS(SCPOS,.SCTPDIS)"RTN","SCMCMU",31,0) ;"RTN","SCMCMU",32,0) ; -- call lm routine"RTN","SCMCMU",33,0) D EN^SCMCMU1(SCTEAM,SCPOS,.SCTPDIS,SCMUTYPE,SCDATE)"RTN","SCMCMU",34,0) ;"RTN","SCMCMU",35,0)ENQ Q"RTN","SCMCMU",36,0) ;"RTN","SCMCMU",37,0)TYPE() ; -- get type of mu"RTN","SCMCMU",38,0) N DIR,DIRUT,Y"RTN","SCMCMU",39,0) S DIR(0)="SABM^T:Team;P:Position""RTN","SCMCMU",40,0) S DIR("A")="Select Type of Mass Unassignment: ""RTN","SCMCMU",41,0) S DIR("B")="Team""RTN","SCMCMU",42,0) D ^DIR"RTN","SCMCMU",43,0) Q $S($D(DIRUT):-1,1:Y)"RTN","SCMCMU",44,0) ;"RTN","SCMCMU",45,0)DATE() ; -- get effective date"RTN","SCMCMU",46,0) N DIR,DIRUT,Y"RTN","SCMCMU",47,0) S DIR(0)="DA^::EX""RTN","SCMCMU",48,0) S DIR("A")="Effective Date: ""RTN","SCMCMU",49,0) S DIR("B")="T-1""RTN","SCMCMU",50,0) D ^DIR"RTN","SCMCMU",51,0) Q $S($D(DIRUT):-1,1:Y)"RTN","SCMCMU",52,0) ;"RTN","SCMCMU",53,0)TEAM(SCDATE) ; -- get team"RTN","SCMCMU",54,0) N DIC,Y,SCDTE"RTN","SCMCMU",55,0) D DATE^SCMCMU1(SCDATE,.SCDTE)"RTN","SCMCMU",56,0) S DIC("S")="IF +$$ACTHIST^SCAPMCU2(404.58,+Y,SCDTE)=1""RTN","SCMCMU",57,0) S DIC="^SCTM(404.51,",DIC(0)="AEQM""RTN","SCMCMU",58,0) D ^DIC"RTN","SCMCMU",59,0) Q +Y"RTN","SCMCMU",60,0) ;"RTN","SCMCMU",61,0)POS(SCTEAM,SCDATE) ; -- get position for team"RTN","SCMCMU",62,0) N DIC,Y,SCDTE,SCPOS,SCPOSI,I"RTN","SCMCMU",63,0) D DATE^SCMCMU1(SCDATE,.SCDTE)"RTN","SCMCMU",64,0) S SCPOS=$NA(^TMP("SCMU",$J,"POSITION"))"RTN","SCMCMU",65,0) K @SCPOS"RTN","SCMCMU",66,0) IF '$$TPTM^SCAPMC24(SCTEAM,SCDTE,"","",SCPOS) S Y=-1 G POSQ"RTN","SCMCMU",67,0) S I=0 F  S I=$O(@SCPOS@(I)) Q:'I  S SCPOSI(+@SCPOS@(I))="""RTN","SCMCMU",68,0) S DIC="^SCTM(404.57,""RTN","SCMCMU",69,0) S DIC(0)="AEQM""RTN","SCMCMU",70,0) S DIC("S")="IF $D(SCPOSI(+Y)),$P(^(0),U,2)=+SCTEAM,+$$ACTHIST^SCAPMCU2(404.59,+Y,SCDTE)=1""RTN","SCMCMU",71,0) D ^DIC"RTN","SCMCMU",72,0)POSQ K @SCPOS"RTN","SCMCMU",73,0) Q +Y"RTN","SCMCMU",74,0) ;"RTN","SCMCMU",75,0)TMDIS(SCTEAM,SCDATE,SCTPDIS) ; -- discharge patient from clinics"RTN","SCMCMU",76,0) N DIR,Y,SCDTE,SCPOS,SCPOSI,I,SCOK,SCCL,SCCLNM,SCPOS0,SCTEAMNM"RTN","SCMCMU",77,0) S SCOK=1"RTN","SCMCMU",78,0) D DATE^SCMCMU1(SCDATE,.SCDTE)"RTN","SCMCMU",79,0) W !!,">>> Checking to see if any team positions are associated with clinics...""RTN","SCMCMU",80,0) S SCPOS=$NA(^TMP("SCMU",$J,"POSITION"))"RTN","SCMCMU",81,0) K @SCPOS"RTN","SCMCMU",82,0) IF '$$TPTM^SCAPMC24(SCTEAM,SCDTE,"","",SCPOS) S Y=-1 G TMDISQ"RTN","SCMCMU",83,0) S I=0 F  S I=$O(@SCPOS@(I)) Q:'I  S SCPOSI(+@SCPOS@(I))="""RTN","SCMCMU",84,0) K @SCPOS"RTN","SCMCMU",85,0) S SCPOS=0"RTN","SCMCMU",86,0) F  S SCPOS=$O(SCPOSI(SCPOS)) Q:'SCPOS  D  Q:SCOK=SCABORT"RTN","SCMCMU",87,0) . S SCPOS0=$G(^SCTM(404.57,+SCPOS,0))"RTN","SCMCMU",88,0) . S SCCL=+$P(SCPOS0,U,9)"RTN","SCMCMU",89,0) . IF 'SCCL Q"RTN","SCMCMU",90,0) . S SCCLNM=$P($G(^SC(SCCL,0)),U)"RTN","SCMCMU",91,0) . S SCTEAMNM=$P($G(^SCTM(404.51,SCTEAM,0),"Unknown"),U)"RTN","SCMCMU",92,0) . S DIR(0)="YA""RTN","SCMCMU",93,0) . S DIR("A",1)="----------------------------------------------------------------------------""RTN","SCMCMU",94,0) . S DIR("A",2)="             Team             : "_SCTEAMNM"RTN","SCMCMU",95,0) . S DIR("A",3)="             Position         : "_$P(SCPOS0,U)"RTN","SCMCMU",96,0) . S DIR("A",4)="             Associated Clinic: "_SCCLNM"RTN","SCMCMU",97,0) . S DIR("A",5)=" ""RTN","SCMCMU",98,0) . S DIR("A")=">>> Do you want to discharge patients from this clinic? (Yes/No) ""RTN","SCMCMU",99,0) . D ^DIR"RTN","SCMCMU",100,0) . IF $D(DIRUT) S SCOK=SCABORT Q"RTN","SCMCMU",101,0) . IF Y=1 S SCTPDIS(SCPOS)=1"RTN","SCMCMU",102,0) . Q"RTN","SCMCMU",103,0)TMDISQ Q SCOK"RTN","SCMCMU",104,0) ;"RTN","SCMCMU",105,0)TPDIS(SCPOS,SCTPDIS) ; -- discharge patient from clinic"RTN","SCMCMU",106,0) N SCPOS0,SCCL,SCCL0,DIR,DIRUT,Y,SCOK"RTN","SCMCMU",107,0) S SCOK=1"RTN","SCMCMU",108,0) S SCPOS0=$G(^SCTM(404.57,+SCPOS,0))"RTN","SCMCMU",109,0) S SCCL=+$P(SCPOS0,U,9)"RTN","SCMCMU",110,0) IF 'SCCL S Y=0 G TPDISQ"RTN","SCMCMU",111,0) S SCCLNM=$P($G(^SC(SCCL,0)),U)"RTN","SCMCMU",112,0) S DIR(0)="YA""RTN","SCMCMU",113,0) S DIR("A",1)=" ""RTN","SCMCMU",114,0) S DIR("A")="Also discharge patients from the '"_SCCLNM_"' clinic? (Yes/No) ""RTN","SCMCMU",115,0) D ^DIR"RTN","SCMCMU",116,0) IF $D(DIRUT) S SCOK=SCABORT"RTN","SCMCMU",117,0) IF Y=1 S SCTPDIS(+SCPOS)=1"RTN","SCMCMU",118,0)TPDISQ Q SCOK"RTN","SCMCMU",119,0) ;"RTN","SCMCMU1")0^13^B37357567"RTN","SCMCMU1",1,0)SCMCMU1 ;ALB/MJK - PCMM Mass Team/Position List Manager ; 10-JUL-1998"RTN","SCMCMU1",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCMU1",3,0) ;"RTN","SCMCMU1",4,0)EN(SCTEAM,SCPOS,SCTPDIS,SCMUTYPE,SCDATE) ; -- main entry point for SCMC MU MASS TEAM UNASSIGNMENT"RTN","SCMCMU1",5,0) D EN^VALM("SCMC MU MASS TEAM UNASSIGNMENT")"RTN","SCMCMU1",6,0) Q"RTN","SCMCMU1",7,0) ;"RTN","SCMCMU1",8,0)HDR ; -- header code"RTN","SCMCMU1",9,0) N X,SCTEAM0"RTN","SCMCMU1",10,0) S SCTEAM0=$G(^SCTM(404.51,+SCTEAM,0),"Unknown")"RTN","SCMCMU1",11,0) S X=$E("    Team: "_$P(SCTEAM0,U),1,40)"RTN","SCMCMU1",12,0) S X=$$SETSTR^VALM1(" Total: "_+$G(SCALLCNT)_"  Selected: "_+$G(SCSELCNT),X,45,35)"RTN","SCMCMU1",13,0) S VALMHDR(1)=X"RTN","SCMCMU1",14,0) ;"RTN","SCMCMU1",15,0) S X="""RTN","SCMCMU1",16,0) IF SCMUTYPE="P" D"RTN","SCMCMU1",17,0) . S SCPOS0=$G(^SCTM(404.57,+SCPOS,0),"Unknown")"RTN","SCMCMU1",18,0) . S X=$E("Position: "_$P(SCPOS0,U),1,40)"RTN","SCMCMU1",19,0) . IF '$G(SCTPDIS(+SCPOS)) Q"RTN","SCMCMU1",20,0) . S X=$$SETSTR^VALM1("Clinic: "_$P($G(^SC(+$P(SCPOS0,U,9),0),"Unknown"),U),X,45,35)"RTN","SCMCMU1",21,0) .Q"RTN","SCMCMU1",22,0) ;"RTN","SCMCMU1",23,0) S VALMHDR(2)=X"RTN","SCMCMU1",24,0) S X="Proposed Effective Date: "_$$FMTE^XLFDT($E(SCDATE,1,7),"5Z")"RTN","SCMCMU1",25,0) S X=$$SETSTR^VALM1("  View: "_SCVIEW_$S(SCVIEW="ALL":"",1:"ED"),X,45,35)"RTN","SCMCMU1",26,0) S VALMHDR(3)=X"RTN","SCMCMU1",27,0) Q"RTN","SCMCMU1",28,0) ;"RTN","SCMCMU1",29,0)INIT ; -- init variables and list array"RTN","SCMCMU1",30,0) N SCPATS,SCI,SCALPHA,SCX,SCDTE"RTN","SCMCMU1",31,0) S SCPATS=$NA(^TMP("SCMU",$J,"PATIENTS"))"RTN","SCMCMU1",32,0) S SCALPHA=$NA(^TMP("SCMU",$J,"PATS ALPHA"))"RTN","SCMCMU1",33,0) K @SCPATS,@SCALPHA"RTN","SCMCMU1",34,0) ;"RTN","SCMCMU1",35,0) ; -- set up persistent structures"RTN","SCMCMU1",36,0) S SCPTINFO=$NA(^TMP("SCMU",$J,"PATIENT INFO"))    ; useful patient data"RTN","SCMCMU1",37,0) S SCPTSEL=$NA(^TMP("SCMU",$J,"SELECTED"))         ; patients selected"RTN","SCMCMU1",38,0) S SCPTALL=$NA(^TMP("SCMU",$J,"PATIENT ALL"))      ; listman data"RTN","SCMCMU1",39,0) ;"RTN","SCMCMU1",40,0) K @SCPTINFO,@SCPTSEL,@SCPTALL"RTN","SCMCMU1",41,0) S (SCALLCNT,SCSELCNT,SCMSG)=0"RTN","SCMCMU1",42,0) S SCVIEW="ALL""RTN","SCMCMU1",43,0) ;"RTN","SCMCMU1",44,0) W ! D WAIT^DICD"RTN","SCMCMU1",45,0) ;"RTN","SCMCMU1",46,0) ; -- change title is appropriate"RTN","SCMCMU1",47,0) IF SCMUTYPE="P" S VALM("TITLE")="Mass Position Unassignment""RTN","SCMCMU1",48,0) ;"RTN","SCMCMU1",49,0) ; -- get patients"RTN","SCMCMU1",50,0) D DATE(SCDATE,.SCDTE)"RTN","SCMCMU1",51,0) IF SCMUTYPE="T",'$$PTTM^SCAPMC(SCTEAM,SCDTE,SCPATS) G INITQ"RTN","SCMCMU1",52,0) IF SCMUTYPE="P",'$$PTTP^SCAPMC(SCPOS,SCDTE,SCPATS) G INITQ"RTN","SCMCMU1",53,0) ;"RTN","SCMCMU1",54,0) ; -- build list for display"RTN","SCMCMU1",55,0) S SCI=0"RTN","SCMCMU1",56,0) F  S SCI=$O(@SCPATS@(SCI)) Q:'SCI  D"RTN","SCMCMU1",57,0) . S SCX=@SCPATS@(SCI)"RTN","SCMCMU1",58,0) . S @SCALPHA@($P(SCX,U,2)_SCI)=SCI"RTN","SCMCMU1",59,0) . Q"RTN","SCMCMU1",60,0) ;"RTN","SCMCMU1",61,0) S SCNT=0"RTN","SCMCMU1",62,0) S SCI="""RTN","SCMCMU1",63,0) F  S SCI=$O(@SCALPHA@(SCI)) Q:SCI=""  D"RTN","SCMCMU1",64,0) . S SCX=$G(@SCPATS@(+@SCALPHA@(SCI)))"RTN","SCMCMU1",65,0) . IF '$$FILTER(SCX,SCDATE) Q"RTN","SCMCMU1",66,0) . S SCNT=SCNT+1"RTN","SCMCMU1",67,0) . S Y=$$SETSTR^VALM1(SCNT,"",1,4)                          ; number"RTN","SCMCMU1",68,0) . S Y=$$SETSTR^VALM1($P(SCX,U,2),Y,15,25)                    ; pt name"RTN","SCMCMU1",69,0) . S Y=$$SETSTR^VALM1($P(SCX,U,6),Y,42,12)                    ; pt id"RTN","SCMCMU1",70,0) . S Y=$$SETSTR^VALM1($$FMTE^XLFDT($P(SCX,U,4),"5Z"),Y,56,10) ; assigned"RTN","SCMCMU1",71,0) . S Y=$$SETSTR^VALM1($$FMTE^XLFDT($P(SCX,U,5),"5Z"),Y,69,10) ; unassigned"RTN","SCMCMU1",72,0) . ;"RTN","SCMCMU1",73,0) . ; -- flag if this is a future assignment"RTN","SCMCMU1",74,0) . IF $P(SCX,U,4)>DT D"RTN","SCMCMU1",75,0) . . S Y=$$SETSTR^VALM1("*",Y,55,1)"RTN","SCMCMU1",76,0) . . IF 'SCMSG S SCMSG=1 D MSG"RTN","SCMCMU1",77,0) . ;"RTN","SCMCMU1",78,0) . ; -- flag if this is a future unassignment"RTN","SCMCMU1",79,0) . IF $P(SCX,U,5)>DT D"RTN","SCMCMU1",80,0) . . S Y=$$SETSTR^VALM1("*",Y,68,1)"RTN","SCMCMU1",81,0) . . IF 'SCMSG S SCMSG=1 D MSG"RTN","SCMCMU1",82,0) . ;"RTN","SCMCMU1",83,0) . S @SCPTALL@(SCNT,0)=Y"RTN","SCMCMU1",84,0) . S @SCPTALL@("IDX",SCNT,SCNT)=SCNT"RTN","SCMCMU1",85,0) . S @SCPTINFO@(SCNT)=SCX"RTN","SCMCMU1",86,0) . Q"RTN","SCMCMU1",87,0) K @SCPATS,@SCALPHA"RTN","SCMCMU1",88,0) S SCALLCNT=SCNT"RTN","SCMCMU1",89,0) ;"RTN","SCMCMU1",90,0) ; -- set up lm array"RTN","SCMCMU1",91,0) D BLD"RTN","SCMCMU1",92,0) ;"RTN","SCMCMU1",93,0)INITQ Q"RTN","SCMCMU1",94,0) ;"RTN","SCMCMU1",95,0)FILTER(SCX,SCDATE) ; -- apply filter criteria"RTN","SCMCMU1",96,0) N SCOK"RTN","SCMCMU1",97,0) S SCOK=1"RTN","SCMCMU1",98,0) ; -- if inactivation date is =< effective then don't use"RTN","SCMCMU1",99,0) IF $P(SCX,U,5),$P(SCX,U,5)'>SCDATE S SCOK=0"RTN","SCMCMU1",100,0) Q SCOK"RTN","SCMCMU1",101,0) ;"RTN","SCMCMU1",102,0)BLD ; -- build VALMAR"RTN","SCMCMU1",103,0) K @VALMAR"RTN","SCMCMU1",104,0) ;"RTN","SCMCMU1",105,0) IF SCVIEW="ALL" D"RTN","SCMCMU1",106,0) . M @VALMAR=@SCPTALL"RTN","SCMCMU1",107,0) . S VALMCNT=SCALLCNT"RTN","SCMCMU1",108,0) . Q"RTN","SCMCMU1",109,0) ;"RTN","SCMCMU1",110,0) ELSE  D"RTN","SCMCMU1",111,0) . N SCNT"RTN","SCMCMU1",112,0) . S (SCNT,VALMCNT)=0"RTN","SCMCMU1",113,0) . F  S SCNT=$O(@SCPTALL@(SCNT)) Q:'SCNT  D"RTN","SCMCMU1",114,0) . . ; -- if in select view and patient not selected then don't use"RTN","SCMCMU1",115,0) . . IF SCVIEW="SELECT",'$D(@SCPTSEL@(SCNT)) Q"RTN","SCMCMU1",116,0) . . ; -- if in de-select view and patient selected then don't use"RTN","SCMCMU1",117,0) . . IF SCVIEW="DE-SELECT",$D(@SCPTSEL@(SCNT)) Q"RTN","SCMCMU1",118,0) . . ;"RTN","SCMCMU1",119,0) . . S VALMCNT=VALMCNT+1"RTN","SCMCMU1",120,0) . . S Y=@SCPTALL@(SCNT,0)"RTN","SCMCMU1",121,0) . . S @VALMAR@(VALMCNT,0)=$$SETSTR^VALM1(VALMCNT,Y,1,4)"RTN","SCMCMU1",122,0) . . ;"RTN","SCMCMU1",123,0) . . ; -- set idx to pointer back to SCPTALL (this is key!)"RTN","SCMCMU1",124,0) . . S @VALMAR@("IDX",VALMCNT,VALMCNT)=SCNT"RTN","SCMCMU1",125,0) . . Q"RTN","SCMCMU1",126,0) . Q"RTN","SCMCMU1",127,0) ;"RTN","SCMCMU1",128,0) IF '$O(@VALMAR@(0)) D"RTN","SCMCMU1",129,0) . S @VALMAR@(1,0)=" ""RTN","SCMCMU1",130,0) . S @VALMAR@(2,0)=" ""RTN","SCMCMU1",131,0) . S @VALMAR@(3,0)="         No patients to list.""RTN","SCMCMU1",132,0) . Q"RTN","SCMCMU1",133,0) IF $G(VALMBG),'$D(@VALMAR@(VALMBG,0)) S VALMBG=1"RTN","SCMCMU1",134,0) K VALMHDR"RTN","SCMCMU1",135,0) D BACK("R")"RTN","SCMCMU1",136,0) Q"RTN","SCMCMU1",137,0) ;"RTN","SCMCMU1",138,0)SETSEL(FLAG,SCNT) ; -- set selected flag indicator"RTN","SCMCMU1",139,0) N Y,SCPTCNT"RTN","SCMCMU1",140,0) ;"RTN","SCMCMU1",141,0) ; -- get pointer back to SCPTALL"RTN","SCMCMU1",142,0) S SCPTCNT=+$G(@VALMAR@("IDX",SCNT,SCNT))"RTN","SCMCMU1",143,0) IF FLAG="DE-SELECT",$D(@SCPTSEL@(SCPTCNT)) D"RTN","SCMCMU1",144,0) . K @SCPTSEL@(SCPTCNT)"RTN","SCMCMU1",145,0) . S SCSELCNT=$S(SCSELCNT=0:0,1:SCSELCNT-1)"RTN","SCMCMU1",146,0) ;"RTN","SCMCMU1",147,0) IF FLAG="SELECT",'$D(@SCPTSEL@(SCPTCNT)) D"RTN","SCMCMU1",148,0) . S @SCPTSEL@(SCPTCNT)="""RTN","SCMCMU1",149,0) . S SCSELCNT=$S(SCSELCNT=SCALLCNT:SCALLCNT,1:SCSELCNT+1)"RTN","SCMCMU1",150,0) ;"RTN","SCMCMU1",151,0) S Y=$G(@VALMAR@(SCNT,0))"RTN","SCMCMU1",152,0) S Y=$$SETSTR^VALM1($S(FLAG="SELECT":"Yes",1:""),Y,8,3)"RTN","SCMCMU1",153,0) S @VALMAR@(SCNT,0)=Y"RTN","SCMCMU1",154,0) ;"RTN","SCMCMU1",155,0) ; -- need to do SCPTALL separately because of potential for differnt #'s"RTN","SCMCMU1",156,0) S Y=$G(@SCPTALL@(SCPTCNT,0))"RTN","SCMCMU1",157,0) S Y=$$SETSTR^VALM1($S(FLAG="SELECT":"Yes",1:""),Y,8,3)"RTN","SCMCMU1",158,0) S @SCPTALL@(SCPTCNT,0)=Y"RTN","SCMCMU1",159,0) Q"RTN","SCMCMU1",160,0) ;"RTN","SCMCMU1",161,0)HELP ; -- help code"RTN","SCMCMU1",162,0) S X="?" D DISP^XQORM1 W !!"RTN","SCMCMU1",163,0) Q"RTN","SCMCMU1",164,0) ;"RTN","SCMCMU1",165,0)EXIT ; -- exit code"RTN","SCMCMU1",166,0) D CLEAR^VALM1"RTN","SCMCMU1",167,0) K @VALMAR,SCSELCNT,SCVIEW,SCALLCNT,SCMSG"RTN","SCMCMU1",168,0) K @SCPTALL,@SCPTSEL,@SCPTINFO"RTN","SCMCMU1",169,0) K SCPTALL,SCPTSEL,SCPTINFO"RTN","SCMCMU1",170,0) Q"RTN","SCMCMU1",171,0) ;"RTN","SCMCMU1",172,0)EXPND ; -- expand code"RTN","SCMCMU1",173,0) Q"RTN","SCMCMU1",174,0) ;"RTN","SCMCMU1",175,0)ALL(SCACT) ;  -- entry point for SCMC SELECT ALL & SCMC DESELECT ALL protocols"RTN","SCMCMU1",176,0) IF SCVIEW=SCACT D  Q"RTN","SCMCMU1",177,0) . W !!,"All patients in current view are already '"_SCACT_"ED'.""RTN","SCMCMU1",178,0) . D PAUSE"RTN","SCMCMU1",179,0) . D BACK("")"RTN","SCMCMU1",180,0) . Q"RTN","SCMCMU1",181,0) D ACT(SCACT,SCPTALL)"RTN","SCMCMU1",182,0) Q"RTN","SCMCMU1",183,0) ;"RTN","SCMCMU1",184,0)SOME(SCACT) ; -- entry point for SCMC SELECT SOME & SCMC DESELECT SOME protocols"RTN","SCMCMU1",185,0) IF SCVIEW=SCACT D  Q"RTN","SCMCMU1",186,0) . W !!,"All patients in current view are already '"_SCACT_"ED'.""RTN","SCMCMU1",187,0) . D PAUSE"RTN","SCMCMU1",188,0) . D BACK("")"RTN","SCMCMU1",189,0) . Q"RTN","SCMCMU1",190,0) D EN^VALM2(XQORNOD(0),"O")"RTN","SCMCMU1",191,0) D ACT(SCACT,"VALMY")"RTN","SCMCMU1",192,0) Q"RTN","SCMCMU1",193,0) ;"RTN","SCMCMU1",194,0)ACT(SCACT,SCLIST) ; -- change select flag"RTN","SCMCMU1",195,0) N SCNT"RTN","SCMCMU1",196,0) S SCNT=0"RTN","SCMCMU1",197,0) F  S SCNT=$O(@SCLIST@(SCNT)) Q:'SCNT  D SETSEL(SCACT,SCNT)"RTN","SCMCMU1",198,0) W !"RTN","SCMCMU1",199,0) D WAIT^DICD,BLD"RTN","SCMCMU1",200,0) Q"RTN","SCMCMU1",201,0) ;"RTN","SCMCMU1",202,0)VIEW(SCVW) ; -- change view"RTN","SCMCMU1",203,0) S SCVIEW=SCVW"RTN","SCMCMU1",204,0) W !"RTN","SCMCMU1",205,0) D WAIT^DICD,BLD"RTN","SCMCMU1",206,0) Q"RTN","SCMCMU1",207,0) ;"RTN","SCMCMU1",208,0)BACK(ACTION) ; -- return to lm processing"RTN","SCMCMU1",209,0) IF $G(SCMSG) D MSG"RTN","SCMCMU1",210,0) S VALMBCK=ACTION"RTN","SCMCMU1",211,0) Q"RTN","SCMCMU1",212,0) ;"RTN","SCMCMU1",213,0)MSG ; -- set message var"RTN","SCMCMU1",214,0) S VALMSG="* Future date""RTN","SCMCMU1",215,0) Q"RTN","SCMCMU1",216,0) ;"RTN","SCMCMU1",217,0)DATE(SCDATE,SCDTE) ; -- setup date array"RTN","SCMCMU1",218,0) S SCDTE="SCDTE""RTN","SCMCMU1",219,0) S SCDTE("BEGIN")=SCDATE"RTN","SCMCMU1",220,0) S SCDTE("END")=9999999"RTN","SCMCMU1",221,0) S SCDTE("INCL")=0"RTN","SCMCMU1",222,0) Q"RTN","SCMCMU1",223,0) ;"RTN","SCMCMU1",224,0)PAUSE ; -- pause"RTN","SCMCMU1",225,0) N DIR,Y"RTN","SCMCMU1",226,0) S DIR(0)="EA""RTN","SCMCMU1",227,0) S DIR("A")="Enter RETURN to continue:""RTN","SCMCMU1",228,0) D ^DIR"RTN","SCMCMU1",229,0) Q"RTN","SCMCMU11")0^25^B14541369"RTN","SCMCMU11",1,0)SCMCMU11 ;ALB/MJK - PCMM Mass Team/Position Unassignment ; 10-JUL-1998"RTN","SCMCMU11",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCMU11",3,0) ;"RTN","SCMCMU11",4,0) ;"RTN","SCMCMU11",5,0)PTTPLST(SCTEAM,SCDATE,SCPTTP) ; -- create list of patients assigned to team positions"RTN","SCMCMU11",6,0) ; -- sort list by dfn and position ien"RTN","SCMCMU11",7,0) N SCPOS,SCDTE,SCPR,SCPRX"RTN","SCMCMU11",8,0) ;"RTN","SCMCMU11",9,0) ; -- check for patient-position assignments"RTN","SCMCMU11",10,0) D DATE^SCMCMU1(SCDATE,.SCDTE)"RTN","SCMCMU11",11,0) S SCPOS=$NA(^TMP("SCMU",$J,"POSITION"))"RTN","SCMCMU11",12,0) ;"RTN","SCMCMU11",13,0) ; -- get list of positions for team"RTN","SCMCMU11",14,0) K @SCPOS"RTN","SCMCMU11",15,0) IF '$$TPTM^SCAPMC24(SCTEAM,SCDTE,"","",SCPOS) S Y=-1 G PTTPLSTQ"RTN","SCMCMU11",16,0) S SCPR=0"RTN","SCMCMU11",17,0) F  S SCPR=$O(@SCPOS@(SCPR)) Q:'SCPR  D"RTN","SCMCMU11",18,0) . S SCPRX=@SCPOS@(SCPR)"RTN","SCMCMU11",19,0) . ; -- create sorted list of dfn by position ien"RTN","SCMCMU11",20,0) . D PTTP(+SCPRX,SCDATE,SCPTTP)"RTN","SCMCMU11",21,0) . Q"RTN","SCMCMU11",22,0)PTTPLSTQ K @SCPOS"RTN","SCMCMU11",23,0) Q"RTN","SCMCMU11",24,0) ;"RTN","SCMCMU11",25,0)PTTP(SCPOS,SCDATE,SCPTTP) ; -- create list of pats assigned to position sort by dfn, position"RTN","SCMCMU11",26,0) N SCPAT,SCPATX,SCPATS,SCDTE"RTN","SCMCMU11",27,0) D DATE^SCMCMU1(SCDATE,.SCDTE)"RTN","SCMCMU11",28,0) S SCPATS=$NA(^TMP("SCMU",$J,"PATIENT"))"RTN","SCMCMU11",29,0) K @SCPATS"RTN","SCMCMU11",30,0) IF '$$PTTP^SCAPMC(SCPOS,SCDTE,SCPATS) S SCOK=0 G PTTPQ"RTN","SCMCMU11",31,0) S SCPAT=0"RTN","SCMCMU11",32,0) F  S SCPAT=$O(@SCPATS@(SCPAT)) Q:'SCPAT  D"RTN","SCMCMU11",33,0) . S SCPATX=@SCPATS@(SCPAT)"RTN","SCMCMU11",34,0) . ; -- store by dfn / pos data"RTN","SCMCMU11",35,0) . S @SCPTTP@(+SCPATX,SCPOS)=SCPATX"RTN","SCMCMU11",36,0) . Q"RTN","SCMCMU11",37,0)PTTPQ K @SCPATS"RTN","SCMCMU11",38,0) Q"RTN","SCMCMU11",39,0) ;"RTN","SCMCMU11",40,0)UNASSIGN ; -- unassign selected"RTN","SCMCMU11",41,0) ;    protocol: SCMC MU UNASSIGN PATIENTS"RTN","SCMCMU11",42,0) N DIR,Y"RTN","SCMCMU11",43,0) IF 'SCSELCNT D  G UNQ"RTN","SCMCMU11",44,0) . W !!,"No patients have been selected.",!"RTN","SCMCMU11",45,0) . D PAUSE^SCMCMU1"RTN","SCMCMU11",46,0) . D BACK^SCMCMU1("")"RTN","SCMCMU11",47,0) . Q"RTN","SCMCMU11",48,0) ELSE  D"RTN","SCMCMU11",49,0) . D FULL^VALM1"RTN","SCMCMU11",50,0) . W @IOF"RTN","SCMCMU11",51,0) . S DIR(0)="YA""RTN","SCMCMU11",52,0) . D SET("----------------------------------------------------------------------------")"RTN","SCMCMU11",53,0) . D SET("                      Team"_$S(SCMUTYPE="P":" Position",1:"")_" Unassignment Definition")"RTN","SCMCMU11",54,0) . D SET("----------------------------------------------------------------------------")"RTN","SCMCMU11",55,0) . D SET("    Team             : "_$P($G(^SCTM(404.51,SCTEAM,0),"Unknown"),U))"RTN","SCMCMU11",56,0) . IF SCMUTYPE="P" D SET("    Position         : "_$P($G(^SCTM(404.57,SCPOS,0),"Unknown"),U))"RTN","SCMCMU11",57,0) . D SET("    Effective Date   : "_$$FMTE^XLFDT($E(SCDATE,1,7),"5Z"))"RTN","SCMCMU11",58,0) . D SET("    # of Patients    : "_SCSELCNT)"RTN","SCMCMU11",59,0) . D CLINIC"RTN","SCMCMU11",60,0) . D SET(" ")"RTN","SCMCMU11",61,0) . S DIR("A")="Are you sure you want to continue? ""RTN","SCMCMU11",62,0) . S DIR("B")="No""RTN","SCMCMU11",63,0) . D ^DIR"RTN","SCMCMU11",64,0) . IF Y=1 D"RTN","SCMCMU11",65,0) . . N DIR,SCTSK"RTN","SCMCMU11",66,0) . . S SCTSK=$$QUE^SCMCMU2()"RTN","SCMCMU11",67,0) . . IF SCTSK="" D"RTN","SCMCMU11",68,0) . . . D BACK^SCMCMU1("R")"RTN","SCMCMU11",69,0) . . ELSE  D"RTN","SCMCMU11",70,0) . . . W !!,"Task#: ",SCTSK,!"RTN","SCMCMU11",71,0) . . D PAUSE^SCMCMU1"RTN","SCMCMU11",72,0) . . Q"RTN","SCMCMU11",73,0) . ELSE  D"RTN","SCMCMU11",74,0) . . D BACK^SCMCMU1("R")"RTN","SCMCMU11",75,0) . . Q"RTN","SCMCMU11",76,0) . Q"RTN","SCMCMU11",77,0)UNQ Q"RTN","SCMCMU11",78,0) ;"RTN","SCMCMU11",79,0)CLINIC ; -- display clinic to be discharged from"RTN","SCMCMU11",80,0) N SCPOS,SCX,Y"RTN","SCMCMU11",81,0) D SET(" ")"RTN","SCMCMU11",82,0) IF '$O(SCTPDIS(0)) D  G CLINICQ"RTN","SCMCMU11",83,0) . D SET("    Clinic Discharges:  None")"RTN","SCMCMU11",84,0) ;"RTN","SCMCMU11",85,0) S Y="""RTN","SCMCMU11",86,0) S Y=$$SETSTR^VALM1("Clinic Discharges:",Y,5,20)"RTN","SCMCMU11",87,0) S Y=$$SETSTR^VALM1("Position",Y,25,25)"RTN","SCMCMU11",88,0) S Y=$$SETSTR^VALM1("Associated Clinic",Y,55,25)"RTN","SCMCMU11",89,0) D SET(Y)"RTN","SCMCMU11",90,0) S Y="""RTN","SCMCMU11",91,0) S Y=$$SETSTR^VALM1("--------",Y,25,25)"RTN","SCMCMU11",92,0) S Y=$$SETSTR^VALM1("-----------------",Y,55,25)"RTN","SCMCMU11",93,0) D SET(Y)"RTN","SCMCMU11",94,0) ;"RTN","SCMCMU11",95,0) S SCPOS=0"RTN","SCMCMU11",96,0) F  S SCPOS=$O(SCTPDIS(SCPOS)) Q:'SCPOS  D"RTN","SCMCMU11",97,0) . S SCX=$G(^SCTM(404.57,SCPOS,0),"Unknown")"RTN","SCMCMU11",98,0) . S Y="""RTN","SCMCMU11",99,0) . S Y=$$SETSTR^VALM1($E($P(SCX,U),1,25),Y,25,25)"RTN","SCMCMU11",100,0) . S Y=$$SETSTR^VALM1($E($P($G(^SC(+$P(SCX,U,9),0),"Unknown"),U),1,25),Y,55,25)"RTN","SCMCMU11",101,0) . D SET(Y)"RTN","SCMCMU11",102,0) . Q"RTN","SCMCMU11",103,0) ;"RTN","SCMCMU11",104,0)CLINICQ Q"RTN","SCMCMU11",105,0) ;"RTN","SCMCMU11",106,0)SET(X) ; -- set DIR text"RTN","SCMCMU11",107,0) S DIR("A",$O(DIR("A",""),-1)+1)=X"RTN","SCMCMU11",108,0) Q"RTN","SCMCMU11",109,0) ;"RTN","SCMCMU11",110,0)QUIT ; -- quit logic"RTN","SCMCMU11",111,0) ;    protocol: SCMC MU QUIT"RTN","SCMCMU11",112,0) N DIR,Y"RTN","SCMCMU11",113,0) S Y=0"RTN","SCMCMU11",114,0) IF SCSELCNT D"RTN","SCMCMU11",115,0) . W !"RTN","SCMCMU11",116,0) . S DIR(0)="YA""RTN","SCMCMU11",117,0) . S DIR("A",1)="You have "_SCSELCNT_" patient"_$S(SCSELCNT=1:"",1:"s")_" selected.""RTN","SCMCMU11",118,0) . S DIR("A",2)=" ""RTN","SCMCMU11",119,0) . S DIR("A")="Are you sure you want to quit? ""RTN","SCMCMU11",120,0) . S DIR("B")="No""RTN","SCMCMU11",121,0) . D ^DIR"RTN","SCMCMU11",122,0) . IF Y'=1 D BACK^SCMCMU1("")"RTN","SCMCMU11",123,0) . Q"RTN","SCMCMU11",124,0) Q"RTN","SCMCMU11",125,0) ;"RTN","SCMCMU2")0^14^B68914281"RTN","SCMCMU2",1,0)SCMCMU2 ;ALB/MJK - PCMM Mass Team/Position Unassignment Processing ; 10-JUL-1998"RTN","SCMCMU2",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCMU2",3,0) ;"RTN","SCMCMU2",4,0)QUE() ; -- queue mass unassignment"RTN","SCMCMU2",5,0) ;D START Q 99999 ; -- for interactive testing"RTN","SCMCMU2",6,0) N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTSK"RTN","SCMCMU2",7,0) S ZTRTN="START^SCMCMU2""RTN","SCMCMU2",8,0) S ZTDESC=VALM("TITLE")"RTN","SCMCMU2",9,0) S ZTDTH=$H"RTN","SCMCMU2",10,0) S ZTIO="""RTN","SCMCMU2",11,0) F X="SCTEAM","SCPOS","SCTPDIS(","SCMUTYPE","SCDATE","SCSELCNT" S ZTSAVE(X)="""RTN","SCMCMU2",12,0) F X="^TMP(""SCMU"",$J,""SELECTED"",","^TMP(""SCMU"",$J,""PATIENT INFO""," S ZTSAVE(X)="""RTN","SCMCMU2",13,0) D ^%ZTLOAD"RTN","SCMCMU2",14,0) Q $G(ZTSK)"RTN","SCMCMU2",15,0) ;"RTN","SCMCMU2",16,0)START ; -- entry point for task"RTN","SCMCMU2",17,0) ; -- defined from task SCTEAM,SCPOS,SCTPDIS,SCMUTYPE,SCDATE,SCSELCNT"RTN","SCMCMU2",18,0) ;"RTN","SCMCMU2",19,0) N SCTOP,SCUNCNT,SCASCNT,SCOK"RTN","SCMCMU2",20,0) S SCUNCNT=0"RTN","SCMCMU2",21,0) S SCASCNT=SCSELCNT"RTN","SCMCMU2",22,0) ;"RTN","SCMCMU2",23,0) ; -- lock top node"RTN","SCMCMU2",24,0) IF SCMUTYPE="T" D"RTN","SCMCMU2",25,0) . S SCTOP=$NA(^SCTM(404.51,+SCTEAM,0))"RTN","SCMCMU2",26,0) ELSE  IF SCMUTYPE="P" D"RTN","SCMCMU2",27,0) . S SCTOP=$NA(^SCTM(404.57,+SCPOS,0))"RTN","SCMCMU2",28,0) D LOCK(SCTOP)"RTN","SCMCMU2",29,0) ;"RTN","SCMCMU2",30,0) ; -- use tmp data brought in by TaskMan"RTN","SCMCMU2",31,0) N SCPTSEL,SCPTINFO"RTN","SCMCMU2",32,0) S SCPTSEL=$NA(^TMP("SCMU",$J,"SELECTED"))"RTN","SCMCMU2",33,0) S SCPTINFO=$NA(^TMP("SCMU",$J,"PATIENT INFO"))"RTN","SCMCMU2",34,0) ;"RTN","SCMCMU2",35,0) N SCOKAR,SCBADAR,SCERRAR,SCPTTP"RTN","SCMCMU2",36,0) S SCOKAR=$NA(^TMP("SCMU",$J,"OK"))"RTN","SCMCMU2",37,0) S SCBADAR=$NA(^TMP("SCMU",$J,"BAD"))"RTN","SCMCMU2",38,0) S SCERRAR=$NA(^TMP("SCMU",$J,"ERROR"))"RTN","SCMCMU2",39,0) S SCPTTP=$NA(^TMP("SCMU",$J,"PATIENT-POSITION"))"RTN","SCMCMU2",40,0) K @SCOKAR,@SCBADAR,@SCERRAR,@SCPTTP"RTN","SCMCMU2",41,0) ;"RTN","SCMCMU2",42,0) N SCNT,SCNODE,SCPTX"RTN","SCMCMU2",43,0) ;"RTN","SCMCMU2",44,0) ; -- create patient-position array for team processing"RTN","SCMCMU2",45,0) IF SCMUTYPE="T" D PTTPLST^SCMCMU11(SCTEAM,SCDATE,SCPTTP)"RTN","SCMCMU2",46,0) ;"RTN","SCMCMU2",47,0) S SCNT=0"RTN","SCMCMU2",48,0) F  S SCNT=$O(@SCPTSEL@(SCNT)) Q:'SCNT  D"RTN","SCMCMU2",49,0) . ;N SCDATE S SCDATE=2700101 ; -- use to force error/testing "RTN","SCMCMU2",50,0) . S SCPTX=$G(@SCPTINFO@(SCNT))"RTN","SCMCMU2",51,0) . IF SCPTX="" Q"RTN","SCMCMU2",52,0) . IF SCMUTYPE="T" S SCOK=$$TMDIS(SCDATE,SCTEAM,SCNT,SCPTX)"RTN","SCMCMU2",53,0) . ;"RTN","SCMCMU2",54,0) . IF SCMUTYPE="P" S SCOK=$$TPDIS(SCDATE,SCPOS,SCNT,SCPTX)"RTN","SCMCMU2",55,0) . ;"RTN","SCMCMU2",56,0) . ; -- if successful"RTN","SCMCMU2",57,0) . IF SCOK D"RTN","SCMCMU2",58,0) . . S @SCOKAR@(SCNT)="""RTN","SCMCMU2",59,0) . . S SCUNCNT=SCUNCNT+1"RTN","SCMCMU2",60,0) . . S SCASCNT=SCASCNT-1"RTN","SCMCMU2",61,0) . ;"RTN","SCMCMU2",62,0) . ; -- if not sucessful"RTN","SCMCMU2",63,0) . ELSE  D"RTN","SCMCMU2",64,0) . . S @SCBADAR@(SCNT)="""RTN","SCMCMU2",65,0) ;"RTN","SCMCMU2",66,0) ; -- unlock top node"RTN","SCMCMU2",67,0) D UNLOCK(SCTOP)"RTN","SCMCMU2",68,0) ;"RTN","SCMCMU2",69,0) ; -- send results"RTN","SCMCMU2",70,0) D BULL^SCMCMU4"RTN","SCMCMU2",71,0) ;"RTN","SCMCMU2",72,0) K @SCOKAR,@SCBADAR,@SCERRAR,@SCPTTP"RTN","SCMCMU2",73,0) K @SCPTSEL,@SCPTINFO"RTN","SCMCMU2",74,0) Q"RTN","SCMCMU2",75,0) ;"RTN","SCMCMU2",76,0) ; **** May want to eventually combine TMDIS & TPDIS tags ****"RTN","SCMCMU2",77,0) ;"RTN","SCMCMU2",78,0)TMDIS(SCDATE,SCTEAM,SCNT,SCPTX) ; -- team unassignment for patient"RTN","SCMCMU2",79,0) ; input:   SCDATE := effective date"RTN","SCMCMU2",80,0) ;          SCTEAM := ien of TEAM entry (404.51)"RTN","SCMCMU2",81,0) ;          SCNT   := entry in @SCPTINFO@ & @SCPTALL@ arrays"RTN","SCMCMU2",82,0) ;          SCPTX  := format defined by output of $$PTTM^SCAPMC2"RTN","SCMCMU2",83,0) ;"RTN","SCMCMU2",84,0) N SCNODE,SCPOS,SCPOSI,SCOK,SCERRS,DFN,SCIEN,SCASDT,SCUNDT"RTN","SCMCMU2",85,0) ;"RTN","SCMCMU2",86,0) S SCOK=1"RTN","SCMCMU2",87,0) S SCERRS="SCERRLST""RTN","SCMCMU2",88,0) ;"RTN","SCMCMU2",89,0) S DFN=+SCPTX"RTN","SCMCMU2",90,0) S SCIEN=+$P(SCPTX,U,3)"RTN","SCMCMU2",91,0) S SCNODE=$NA(^SCPT(404.42,SCIEN,0))"RTN","SCMCMU2",92,0) S SCASDT=+$P(SCPTX,U,4)"RTN","SCMCMU2",93,0) S SCUNDT=+$P(SCPTX,U,5)"RTN","SCMCMU2",94,0) ;"RTN","SCMCMU2",95,0) ; -- unassign from positions first"RTN","SCMCMU2",96,0) S SCPOS=0"RTN","SCMCMU2",97,0) F  S SCPOS=$O(@SCPTTP@(DFN,SCPOS)) Q:'SCPOS  D  Q:'SCOK"RTN","SCMCMU2",98,0) . S SCOK=$$TPDIS(SCDATE,SCPOS,SCNT,$G(@SCPTTP@(DFN,SCPOS)))"RTN","SCMCMU2",99,0) ;"RTN","SCMCMU2",100,0) IF 'SCOK D"RTN","SCMCMU2",101,0) . S @SCERRAR@(SCNT,"TEAM",SCTEAM,1)="Team still assigned to patient.""RTN","SCMCMU2",102,0) . S @SCERRAR@(SCNT,"TEAM",SCTEAM,2)="Not able to unassign at least one position.""RTN","SCMCMU2",103,0) ;"RTN","SCMCMU2",104,0) IF SCOK D"RTN","SCMCMU2",105,0) . ; -- if assignment date is in future then delete"RTN","SCMCMU2",106,0) . IF SCASDT>DT,SCASDT>SCDATE D  Q"RTN","SCMCMU2",107,0) . . N DA,DIK"RTN","SCMCMU2",108,0) . . S DA=SCIEN,DIK="^SCPT(404.42,""RTN","SCMCMU2",109,0) . . D LOCK(SCNODE)"RTN","SCMCMU2",110,0) . . D ^DIK"RTN","SCMCMU2",111,0) . . D UNLOCK(SCNODE)"RTN","SCMCMU2",112,0) . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,1)=">>> Future team assignment deleted.""RTN","SCMCMU2",113,0) . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,2)="    Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN"RTN","SCMCMU2",114,0) . . Q"RTN","SCMCMU2",115,0) . ;"RTN","SCMCMU2",116,0) . ; -- if assignment date is after effective date but before today"RTN","SCMCMU2",117,0) . IF SCASDT>SCDATE,SCASDT<DT D  Q"RTN","SCMCMU2",118,0) . . S SCOK=0"RTN","SCMCMU2",119,0) . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,1)="Patient is still assigned to team.""RTN","SCMCMU2",120,0) . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,2)="Assignment date is after effective date but before today.""RTN","SCMCMU2",121,0) . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,3)="Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN"RTN","SCMCMU2",122,0) . . Q"RTN","SCMCMU2",123,0) . ;"RTN","SCMCMU2",124,0) . ; -- if unassignment date is after effective date but before today"RTN","SCMCMU2",125,0) . IF SCUNDT>SCDATE,SCUNDT<DT D  Q"RTN","SCMCMU2",126,0) . . S SCOK=0"RTN","SCMCMU2",127,0) . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,1)="Patient is still assigned to team.""RTN","SCMCMU2",128,0) . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,2)="Unassignment date is after effective date but before today.""RTN","SCMCMU2",129,0) . . S @SCERRAR@(SCNT,"TEAM",SCTEAM,3)="Unassignment Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_"   Entry#: "_SCIEN"RTN","SCMCMU2",130,0) . . Q"RTN","SCMCMU2",131,0) . ;"RTN","SCMCMU2",132,0) . ; -- make change"RTN","SCMCMU2",133,0) . K @SCERRS"RTN","SCMCMU2",134,0) . S SCOK=$$INPTTM^SCAPMC(DFN,SCIEN,SCDATE,.SCERRS)"RTN","SCMCMU2",135,0) . D UNLOCK(SCNODE)"RTN","SCMCMU2",136,0) . M @SCERRAR@(SCNT,"TEAM",SCTEAM)=SCERRLST"RTN","SCMCMU2",137,0) . K @SCERRS"RTN","SCMCMU2",138,0) . IF SCOK D"RTN","SCMCMU2",139,0) . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,1)="""RTN","SCMCMU2",140,0) . ;"RTN","SCMCMU2",141,0) . ; -- set message if unassigned date changed"RTN","SCMCMU2",142,0) . IF SCOK,SCUNDT>SCDATE D"RTN","SCMCMU2",143,0) . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,1)=">>> Future team unassignment date was changed.""RTN","SCMCMU2",144,0) . . S @SCOKAR@(SCNT,"TEAM",SCTEAM,2)="    Old Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_"   New Date: "_$$FMTE^XLFDT(SCDATE,"5Z")_"   Entry#: "_SCIEN_")""RTN","SCMCMU2",145,0) ;"RTN","SCMCMU2",146,0) Q SCOK"RTN","SCMCMU2",147,0) ;"RTN","SCMCMU2",148,0)TPDIS(SCDATE,SCPOS,SCNT,SCPTX) ; -- position unassignment for patient"RTN","SCMCMU2",149,0) ; input:   SCDATE := effective date"RTN","SCMCMU2",150,0) ;          SCTEAM := ien of TEAM POSITION entry (404.57)"RTN","SCMCMU2",151,0) ;          SCNT   := entry in @SCPTINFO@ & @SCPTALL@ arrays"RTN","SCMCMU2",152,0) ;          SCPTX  := format defined by output of $$PTTP^SCAPMC2"RTN","SCMCMU2",153,0) ;"RTN","SCMCMU2",154,0) N SCNODE,SCOK,SCERRS,DFN,SCIEN,SCASDT,SCUNDT"RTN","SCMCMU2",155,0) S SCASDT=+$P(SCPTX,U,4)"RTN","SCMCMU2",156,0) S SCUNDT=+$P(SCPTX,U,5)"RTN","SCMCMU2",157,0) ;"RTN","SCMCMU2",158,0) S SCOK=1"RTN","SCMCMU2",159,0) S SCERRS="SCERRLST""RTN","SCMCMU2",160,0) ;"RTN","SCMCMU2",161,0) S DFN=+SCPTX"RTN","SCMCMU2",162,0) S SCIEN=+$P(SCPTX,U,3)"RTN","SCMCMU2",163,0) S SCNODE=$NA(^SCPT(404.43,SCIEN,0))"RTN","SCMCMU2",164,0) S SCASDT=+$P(SCPTX,U,4)"RTN","SCMCMU2",165,0) S SCUNDT=+$P(SCPTX,U,5)"RTN","SCMCMU2",166,0) ;"RTN","SCMCMU2",167,0) ; if assignment date is in future then delete"RTN","SCMCMU2",168,0) IF SCOK D"RTN","SCMCMU2",169,0) . ; -- if assignment date is in future then delete"RTN","SCMCMU2",170,0) . IF SCASDT>DT,SCASDT>SCDATE D  Q"RTN","SCMCMU2",171,0) . . N DA,DIK"RTN","SCMCMU2",172,0) . . S DA=SCIEN,DIK="^SCPT(404.43,""RTN","SCMCMU2",173,0) . . D LOCK(SCNODE)"RTN","SCMCMU2",174,0) . . D ^DIK"RTN","SCMCMU2",175,0) . . D UNLOCK(SCNODE)"RTN","SCMCMU2",176,0) . . S @SCOKAR@(SCNT,"POS",SCPOS,1)="    >>> Future position assignment deleted.""RTN","SCMCMU2",177,0) . . S @SCOKAR@(SCNT,"POS",SCPOS,2)="        Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN"RTN","SCMCMU2",178,0) . . Q"RTN","SCMCMU2",179,0) . ;"RTN","SCMCMU2",180,0) . ; -- if assignment date is after effective date but before today"RTN","SCMCMU2",181,0) . IF SCASDT>SCDATE,SCASDT<DT D  Q"RTN","SCMCMU2",182,0) . . S SCOK=0"RTN","SCMCMU2",183,0) . . S @SCERRAR@(SCNT,"POS",SCPOS,1)="Patient is still assigned to position.""RTN","SCMCMU2",184,0) . . S @SCERRAR@(SCNT,"POS",SCPOS,2)="Assignment date is after effective date but before today.""RTN","SCMCMU2",185,0) . . S @SCERRAR@(SCNT,"POS",SCPOS,3)="Assignment Date: "_$$FMTE^XLFDT(SCASDT,"5Z")_"   Entry#: "_SCIEN"RTN","SCMCMU2",186,0) . . Q"RTN","SCMCMU2",187,0) . ;"RTN","SCMCMU2",188,0) . ; -- if unassignment date is after effective date but before today"RTN","SCMCMU2",189,0) . IF SCUNDT>SCDATE,SCUNDT<DT D  Q"RTN","SCMCMU2",190,0) . . S SCOK=0"RTN","SCMCMU2",191,0) . . S @SCERRAR@(SCNT,"POS",SCPOS,1)="Patient is still assigned to position.""RTN","SCMCMU2",192,0) . . S @SCERRAR@(SCNT,"POS",SCPOS,2)="Unassignment date is after effective date but before today.""RTN","SCMCMU2",193,0) . . S @SCERRAR@(SCNT,"POS",SCPSO,3)="Unassignment Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_" ("_SCIEN_")""RTN","SCMCMU2",194,0) . . Q"RTN","SCMCMU2",195,0) . ;"RTN","SCMCMU2",196,0) . K @SCERRS"RTN","SCMCMU2",197,0) . D LOCK(SCNODE)"RTN","SCMCMU2",198,0) . S SCOK=$$INPTTP^SCAPMC(DFN,SCIEN,SCDATE,.SCERRS)"RTN","SCMCMU2",199,0) . D UNLOCK(SCNODE)"RTN","SCMCMU2",200,0) . M @SCERRAR@(SCNT,"POS",SCPOS)=SCERRLST"RTN","SCMCMU2",201,0) . K @SCERRS"RTN","SCMCMU2",202,0) . IF SCOK D"RTN","SCMCMU2",203,0) . . S @SCOKAR@(SCNT,"POS",SCPOS,1)="""RTN","SCMCMU2",204,0) . ;"RTN","SCMCMU2",205,0) . ; -- set message if unassigned date changed"RTN","SCMCMU2",206,0) . IF SCOK,SCUNDT>SCDATE D"RTN","SCMCMU2",207,0) . . S @SCOKAR@(SCNT,"POS",SCPOS,1)="    >>> Future position unassignment date was changed.""RTN","SCMCMU2",208,0) . . S @SCOKAR@(SCNT,"POS",SCPOS,2)="        Old Date: "_$$FMTE^XLFDT(SCUNDT,"5Z")_"   New Date: "_$$FMTE^XLFDT(SCDATE,"5Z")_"   Entry#: "_SCIEN_")""RTN","SCMCMU2",209,0) . . Q"RTN","SCMCMU2",210,0) ;"RTN","SCMCMU2",211,0) IF SCOK D"RTN","SCMCMU2",212,0) . S @SCOKAR@(SCNT,"CLINIC",SCPOS,1)=$$CLDIS(SCPOS)"RTN","SCMCMU2",213,0) . Q"RTN","SCMCMU2",214,0) ;"RTN","SCMCMU2",215,0)TPDISQ Q SCOK"RTN","SCMCMU2",216,0) ;"RTN","SCMCMU2",217,0)CLDIS(SCPOS) ; -- discharge from clinic"RTN","SCMCMU2",218,0) N SCPOS0,SCCLN,SCREA,SCRET"RTN","SCMCMU2",219,0) S SCRET="""RTN","SCMCMU2",220,0) ;"RTN","SCMCMU2",221,0) ; -- if user did not request clinic discharge, quit"RTN","SCMCMU2",222,0) IF '$G(SCTPDIS(+SCPOS)) G CLDISQ"RTN","SCMCMU2",223,0) ;"RTN","SCMCMU2",224,0) S SCPOS0=$G(^SCTM(404.57,SCPOS,0))"RTN","SCMCMU2",225,0) S SCCLN=$P(SCPOS0,U,9)"RTN","SCMCMU2",226,0) IF SCCLN D"RTN","SCMCMU2",227,0) . S SCREA="Team position mass discharge""RTN","SCMCMU2",228,0) . S SCRET=$$EN^SCMCMU3(DFN,SCCLN,SCDATE,SCREA)"RTN","SCMCMU2",229,0) . Q"RTN","SCMCMU2",230,0) ELSE  D"RTN","SCMCMU2",231,0) . S SCRET="0^No clinic assignment to position""RTN","SCMCMU2",232,0) . Q"RTN","SCMCMU2",233,0) ;"RTN","SCMCMU2",234,0)CLDISQ Q SCRET"RTN","SCMCMU2",235,0) ;"RTN","SCMCMU2",236,0)LOCK(NODE) ; -- lock node"RTN","SCMCMU2",237,0) F  L +@NODE:5 IF $T Q"RTN","SCMCMU2",238,0) Q"RTN","SCMCMU2",239,0) ;"RTN","SCMCMU2",240,0)UNLOCK(NODE) ; -- unlock node"RTN","SCMCMU2",241,0) L -@NODE"RTN","SCMCMU2",242,0) Q"RTN","SCMCMU2",243,0) ;"RTN","SCMCMU3")0^15^B4875743"RTN","SCMCMU3",1,0)SCMCMU3 ;ALB/MJK - Discharge Patient from Clinic ;7/20/98  11:24 ;"RTN","SCMCMU3",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCMCMU3",3,0) ;"RTN","SCMCMU3",4,0)EN(DFN,SCCLN,SCDATE,SCREA) ; -- main entry point"RTN","SCMCMU3",5,0) N SCENR,SCENR0,SCRET"RTN","SCMCMU3",6,0) S SCENR=+$O(^DPT(DFN,"DE","B",+SCCLN,0))"RTN","SCMCMU3",7,0) ;"RTN","SCMCMU3",8,0) ; -- quit pateint never enrolled in clinic"RTN","SCMCMU3",9,0) IF 'SCENR G ENQ"RTN","SCMCMU3",10,0) ;"RTN","SCMCMU3",11,0) S SCENR0=$G(^DPT(DFN,"DE",SCENR,0))"RTN","SCMCMU3",12,0) ;"RTN","SCMCMU3",13,0) ; -- quit if enrollment is currently inactive"RTN","SCMCMU3",14,0) IF $P(SCENR0,U,2)'="" G ENQ"RTN","SCMCMU3",15,0) ;"RTN","SCMCMU3",16,0) D BEFORE^SCMCEV3(DFN) ;setup before values"RTN","SCMCMU3",17,0) ;"RTN","SCMCMU3",18,0) S SCRET=$$DISCH(DFN,SCCLN,SCDATE,SCENR,SCREA)"RTN","SCMCMU3",19,0) IF SCRET=1 D"RTN","SCMCMU3",20,0) . D AFTER^SCMCEV3(DFN) ;setup after values"RTN","SCMCMU3",21,0) . D INVOKE^SCMCEV3(DFN) ; call event driver"RTN","SCMCMU3",22,0)ENQ Q $G(SCRET,$$ERR(3))"RTN","SCMCMU3",23,0) ;"RTN","SCMCMU3",24,0)DISCH(DFN,SCCLN,SCDATE,SCENR,SCREA) ; -- discharge from clinic"RTN","SCMCMU3",25,0) N SCDT,SCDT0,SCDAT,SCDAT0,DIE,DA,DR,Y,SCNODE,SCRET"RTN","SCMCMU3",26,0) ; "RTN","SCMCMU3",27,0) ; -- check for future apps"RTN","SCMCMU3",28,0) S SCDT=DT+.24"RTN","SCMCMU3",29,0) F  S SCDT=$O(^DPT(DFN,"S",SCDT)) Q:'SCDT  D  IF $G(SCRET) G DISCHQ"RTN","SCMCMU3",30,0) . S SCDT0=$G(^DPT(DFN,"S",SCDT,0))"RTN","SCMCMU3",31,0) . I +SCDT0=SCCLN,$P(SCDT0,"^",2)=""!($P(SCDT0,"^",2)="I") S SCRET=2"RTN","SCMCMU3",32,0) ;"RTN","SCMCMU3",33,0) S SCDAT=0"RTN","SCMCMU3",34,0) F  S SCDAT=$O(^DPT(DFN,"DE",SCENR,1,SCDAT)) Q:'SCDAT  D"RTN","SCMCMU3",35,0) . S SCDAT0=$G(^DPT(DFN,"DE",SCENR,1,SCDAT,0))"RTN","SCMCMU3",36,0) . I $P(SCDAT0,U,3)]"" Q"RTN","SCMCMU3",37,0) . S SCNODE=$NA(^DPT(DFN,"DE",SCENR,1,SCDAT))"RTN","SCMCMU3",38,0) . D LOCK(SCNODE)"RTN","SCMCMU3",39,0) . S DA(2)=DFN,DA(1)=SCENR"RTN","SCMCMU3",40,0) . S DIE="^DPT("_DFN_",""DE"","_SCENR_",1,",DA=SCDAT"RTN","SCMCMU3",41,0) . S DR="3////"_SCDATE_";4////"_SCREA"RTN","SCMCMU3",42,0) . D ^DIE"RTN","SCMCMU3",43,0) . D UNLOCK(SCNODE)"RTN","SCMCMU3",44,0) . S SCRET=1"RTN","SCMCMU3",45,0) ;"RTN","SCMCMU3",46,0)DISCHQ Q $$ERR($G(SCRET,3))"RTN","SCMCMU3",47,0) ;"RTN","SCMCMU3",48,0)LOCK(NODE) ; -- lock node"RTN","SCMCMU3",49,0) F  L +@NODE:5 IF $T Q"RTN","SCMCMU3",50,0) Q"RTN","SCMCMU3",51,0) ;"RTN","SCMCMU3",52,0)UNLOCK(NODE) ; -- unlock node"RTN","SCMCMU3",53,0) L -@NODE"RTN","SCMCMU3",54,0) Q"RTN","SCMCMU3",55,0) ;"RTN","SCMCMU3",56,0)ERR(CODE) ;"RTN","SCMCMU3",57,0) Q $P($TEXT(RET+CODE),";;",2)"RTN","SCMCMU3",58,0) ;"RTN","SCMCMU3",59,0) ;"RTN","SCMCMU3",60,0) ; piece [ return code ^ error text ]"RTN","SCMCMU3",61,0)RET ; -- return values  "RTN","SCMCMU3",62,0) ;;1^Patient successfully discharged from clinic"RTN","SCMCMU3",63,0) ;;2^Patient has future appointments in clinic"RTN","SCMCMU3",64,0) ;;3^No active enrollment data for clinic"RTN","SCMCMU3",65,0) ;"RTN","SCMCMU3",66,0)TEST ;"RTN","SCMCMU3",67,0) W !!,$$EN(7170643,446,DT,"TEST FROM SCMCMU3")"RTN","SCMCMU3",68,0) Q"RTN","SCMCMU4")0^16^B37545936"RTN","SCMCMU4",1,0)SCMCMU4 ;ALB/MJK - PCMM Mass Team/Position Unassignment Bulletin ; 10-JUL-1998"RTN","SCMCMU4",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCMU4",3,0) ;"RTN","SCMCMU4",4,0)BULL ; -- send bulletin"RTN","SCMCMU4",5,0) N SCLCNT,XMY,XMTEXT,XMSUB,XMDUZ,SCINFO"RTN","SCMCMU4",6,0) D INIT"RTN","SCMCMU4",7,0) D TEXT"RTN","SCMCMU4",8,0) D ^XMD"RTN","SCMCMU4",9,0) D FINAL"RTN","SCMCMU4",10,0) Q"RTN","SCMCMU4",11,0) ;"RTN","SCMCMU4",12,0)INIT ; -- set vars for bulletin"RTN","SCMCMU4",13,0) N SCCLN"RTN","SCMCMU4",14,0) S XMDUZ=.5"RTN","SCMCMU4",15,0) S XMY($S($G(DUZ):DUZ,1:XMDUZ))="""RTN","SCMCMU4",16,0) S XMSUB="Mass Team"_$S(SCMUTYPE="P":"Position",1:"")_" Unassignment Information""RTN","SCMCMU4",17,0) K ^TMP("SCMUTEXT",$J) S XMTEXT="^TMP(""SCMUTEXT"",$J,",SCLCNT=0"RTN","SCMCMU4",18,0) ;"RTN","SCMCMU4",19,0) S SCINFO("NAME","TEAM")=$P($G(^SCTM(404.51,+$G(SCTEAM),0),"Unknown"),U)"RTN","SCMCMU4",20,0) ;"RTN","SCMCMU4",21,0) IF SCMUTYPE="P" D"RTN","SCMCMU4",22,0) . S SCPOS0=$G(^SCTM(404.57,+$G(SCPOS),0),"Unknown")"RTN","SCMCMU4",23,0) . S SCINFO("NAME","POSITION")=$P(SCPOS0,U)"RTN","SCMCMU4",24,0) . S SCCLN=+$P(SCPOS0,U,9)"RTN","SCMCMU4",25,0) . IF SCCLN S SCINFO("NAME","CLINIC")=$P($G(^SC(SCCLN,0),""),U)"RTN","SCMCMU4",26,0) . Q"RTN","SCMCMU4",27,0) ;"RTN","SCMCMU4",28,0) S SCINFO("NAME","USER")=$P($G(^VA(200,XMDUZ,0),"Unknown"),U)"RTN","SCMCMU4",29,0) S SCINFO("DATE","EFFECTIVE")=$$FMTE^XLFDT($E(SCDATE,1,7),"5Z")"RTN","SCMCMU4",30,0) ;"RTN","SCMCMU4",31,0) Q"RTN","SCMCMU4",32,0) ;"RTN","SCMCMU4",33,0)FINAL ; -- clean up"RTN","SCMCMU4",34,0) K ^TMP("SCMUTEXT",$J)"RTN","SCMCMU4",35,0) Q"RTN","SCMCMU4",36,0) ;"RTN","SCMCMU4",37,0)TEXT ; -- set of mm array"RTN","SCMCMU4",38,0) D SET("Mass Team"_$S(SCMUTYPE="P":"-Position",1:"")_" Unassignment has been completed.")"RTN","SCMCMU4",39,0) D SET("")"RTN","SCMCMU4",40,0) D SET("             Team: "_SCINFO("NAME","TEAM"))"RTN","SCMCMU4",41,0) ;"RTN","SCMCMU4",42,0) IF SCMUTYPE="P" D"RTN","SCMCMU4",43,0) . D SET("         Position: "_SCINFO("NAME","POSITION"))"RTN","SCMCMU4",44,0) . IF $G(SCINFO("NAME","CLINIC"))]"" D SET("           Clinic: "_SCINFO("NAME","CLINIC"))"RTN","SCMCMU4",45,0) . Q"RTN","SCMCMU4",46,0) ;"RTN","SCMCMU4",47,0) D SET("             User: "_SCINFO("NAME","USER"))"RTN","SCMCMU4",48,0) D SET("   Effective Date: "_SCINFO("DATE","EFFECTIVE"))"RTN","SCMCMU4",49,0) ;"RTN","SCMCMU4",50,0) D SET("")"RTN","SCMCMU4",51,0) D SET(" Patients Processed")"RTN","SCMCMU4",52,0) D SET("   Unassigned     : "_SCUNCNT)"RTN","SCMCMU4",53,0) D SET("   Errors/Warnings: "_SCASCNT_"    (still assigned)")"RTN","SCMCMU4",54,0) D SET("   Total          : "_SCSELCNT)"RTN","SCMCMU4",55,0) ;"RTN","SCMCMU4",56,0) D CLINIC"RTN","SCMCMU4",57,0) D SET("")"RTN","SCMCMU4",58,0) ;"RTN","SCMCMU4",59,0) ; -- list pats that remain assigned"RTN","SCMCMU4",60,0) D ERRARY"RTN","SCMCMU4",61,0) ;"RTN","SCMCMU4",62,0) D SET("")"RTN","SCMCMU4",63,0) D SET("")"RTN","SCMCMU4",64,0) ;"RTN","SCMCMU4",65,0) ; -- list pats unassigned"RTN","SCMCMU4",66,0) D OKARY"RTN","SCMCMU4",67,0) Q"RTN","SCMCMU4",68,0) ;"RTN","SCMCMU4",69,0)SET(X) ;"RTN","SCMCMU4",70,0) S SCLCNT=SCLCNT+1,^TMP("SCMUTEXT",$J,SCLCNT,0)=X"RTN","SCMCMU4",71,0) Q"RTN","SCMCMU4",72,0) ;"RTN","SCMCMU4",73,0)ERRARY ; -- process error array"RTN","SCMCMU4",74,0) N SCNT,SCX,SCER,SCERI"RTN","SCMCMU4",75,0) ;"RTN","SCMCMU4",76,0) D SET(" Error List:")"RTN","SCMCMU4",77,0) D SET(" ===========")"RTN","SCMCMU4",78,0) ;"RTN","SCMCMU4",79,0) IF '$O(@SCBADAR@(0)) D  Q"RTN","SCMCMU4",80,0) . D SET("     No errors to report.")"RTN","SCMCMU4",81,0) . Q"RTN","SCMCMU4",82,0) ;"RTN","SCMCMU4",83,0) D HDR"RTN","SCMCMU4",84,0) ;"RTN","SCMCMU4",85,0) S SCNT=0"RTN","SCMCMU4",86,0) F  S SCNT=$O(@SCBADAR@(SCNT)) Q:'SCNT  D"RTN","SCMCMU4",87,0) . S SCX=@SCBADAR@(SCNT)"RTN","SCMCMU4",88,0) . D PT(SCNT)"RTN","SCMCMU4",89,0) . ;"RTN","SCMCMU4",90,0) . IF '$D(@SCERRAR@(SCNT)) Q"RTN","SCMCMU4",91,0) . S SCERI=0"RTN","SCMCMU4",92,0) . F  S SCERI=$O(@SCERRAR@(SCNT,"TEAM",SCTEAM,SCERI)) Q:'SCERI  D"RTN","SCMCMU4",93,0) . . S SCER=$G(@SCERRAR@(SCNT,"TEAM",SCTEAM,SCERI))"RTN","SCMCMU4",94,0) . . D SET("     >>> "_SCER)"RTN","SCMCMU4",95,0) . . Q"RTN","SCMCMU4",96,0) . ;"RTN","SCMCMU4",97,0) . IF '$O(@SCERRAR@(SCNT,"POS",0)) Q"RTN","SCMCMU4",98,0) . S SCPOS=0"RTN","SCMCMU4",99,0) . F  S SCPOS=$O(@SCERRAR@(SCNT,"POS",SCPOS)) Q:'SCPOS  D"RTN","SCMCMU4",100,0) . . IF SCMUTYPE="T" D SET("     >>> Position: "_$P($G(^SCTM(404.57,SCPOS,0),"Unknown"),U))"RTN","SCMCMU4",101,0) . . S SCERI=0"RTN","SCMCMU4",102,0) . . F  S SCERI=$O(@SCERRAR@(SCNT,"POS",SCPOS,SCERI)) Q:'SCERI  D"RTN","SCMCMU4",103,0) . . . S SCER=$G(@SCERRAR@(SCNT,"POS",SCPOS,SCERI))"RTN","SCMCMU4",104,0) . . . D SET("         >>>> "_SCER)"RTN","SCMCMU4",105,0) . . . Q"RTN","SCMCMU4",106,0) . . Q"RTN","SCMCMU4",107,0) . D SET("")"RTN","SCMCMU4",108,0) . Q"RTN","SCMCMU4",109,0) Q"RTN","SCMCMU4",110,0) ;"RTN","SCMCMU4",111,0)OKARY ; -- process ok array"RTN","SCMCMU4",112,0) N SCNT,SCPT,SCX"RTN","SCMCMU4",113,0) D SET(" Unassigned List:")"RTN","SCMCMU4",114,0) D SET(" ================")"RTN","SCMCMU4",115,0) ;"RTN","SCMCMU4",116,0) IF '$O(@SCOKAR@(0)) D  Q"RTN","SCMCMU4",117,0) . D SET("     No patients unassigned.")"RTN","SCMCMU4",118,0) . Q"RTN","SCMCMU4",119,0) ;"RTN","SCMCMU4",120,0) D HDR"RTN","SCMCMU4",121,0) ;"RTN","SCMCMU4",122,0) S SCNT=0"RTN","SCMCMU4",123,0) F  S SCNT=$O(@SCOKAR@(SCNT)) Q:'SCNT  D"RTN","SCMCMU4",124,0) . D PT(SCNT)"RTN","SCMCMU4",125,0) . D TM(SCNT)"RTN","SCMCMU4",126,0) . D POS(SCNT)"RTN","SCMCMU4",127,0) . Q"RTN","SCMCMU4",128,0) Q"RTN","SCMCMU4",129,0) ;"RTN","SCMCMU4",130,0)HDR ; -- send patient info header"RTN","SCMCMU4",131,0) S X="""RTN","SCMCMU4",132,0) S X=$$SETSTR^VALM1("Patient",X,2,7)"RTN","SCMCMU4",133,0) S X=$$SETSTR^VALM1("ID",X,40,2)"RTN","SCMCMU4",134,0) D SET(X)"RTN","SCMCMU4",135,0) ;"RTN","SCMCMU4",136,0) S X="""RTN","SCMCMU4",137,0) S X=$$SETSTR^VALM1("-------",X,2,7)"RTN","SCMCMU4",138,0) S X=$$SETSTR^VALM1("--",X,40,2)"RTN","SCMCMU4",139,0) D SET(X)"RTN","SCMCMU4",140,0) Q"RTN","SCMCMU4",141,0) ;"RTN","SCMCMU4",142,0)PT(SCNT) ; -- send patient info"RTN","SCMCMU4",143,0) N NAME,ID,X,SCPT,SCX"RTN","SCMCMU4",144,0) S SCPT=$G(@SCPTINFO@(SCNT))"RTN","SCMCMU4",145,0) S NAME=$P(SCPT,U,2)"RTN","SCMCMU4",146,0) S ID=$P(SCPT,U,6)"RTN","SCMCMU4",147,0) S X="""RTN","SCMCMU4",148,0) S X=$$SETSTR^VALM1(NAME,X,2,30)"RTN","SCMCMU4",149,0) S X=$$SETSTR^VALM1(ID,X,40,15)"RTN","SCMCMU4",150,0) D SET(X)"RTN","SCMCMU4",151,0) Q"RTN","SCMCMU4",152,0) ;"RTN","SCMCMU4",153,0)TM(SCNT) ; -- show any team info for patient"RTN","SCMCMU4",154,0) N SCTMMSG"RTN","SCMCMU4",155,0) S SCTMMSG=$G(@SCOKAR@(SCNT,"TEAM",SCTEAM,1))"RTN","SCMCMU4",156,0) D INFO("TEAM",SCTEAM)"RTN","SCMCMU4",157,0) Q"RTN","SCMCMU4",158,0) ;"RTN","SCMCMU4",159,0)POS(SCNT) ; -- send position (for team unassignment) & clinic discharge info"RTN","SCMCMU4",160,0) N SCPOS,SCTPMSG,SCCLNM,SCPOS0,SCLNX,SCI"RTN","SCMCMU4",161,0) S SCPOS=0"RTN","SCMCMU4",162,0) F  S SCPOS=$O(@SCOKAR@(SCNT,"POS",SCPOS)) Q:'SCPOS  D"RTN","SCMCMU4",163,0) . S SCTPMSG=$G(@SCOKAR@(SCNT,"POS",SCPOS,1))"RTN","SCMCMU4",164,0) . S SCLNX=$G(@SCOKAR@(SCNT,"CLINIC",SCPOS,1))"RTN","SCMCMU4",165,0) . S SCPOS0=$G(^SCTM(404.57,SCPOS,0))"RTN","SCMCMU4",166,0) . ;"RTN","SCMCMU4",167,0) . IF SCMUTYPE="T" D"RTN","SCMCMU4",168,0) . . D SET("     >>> Position assignment to "_$P(SCPOS0,U)_$S(SCTPMSG="":" was unassigned.",1:":"))"RTN","SCMCMU4",169,0) . D INFO("POS",SCPOS)"RTN","SCMCMU4",170,0) . ;"RTN","SCMCMU4",171,0) . IF SCLNX]"",$D(SCTPDIS(SCPOS)) D"RTN","SCMCMU4",172,0) . . S SCCLNM=$P($G(^SC(+$P(SCPOS0,U,9),0),"Unkown"),U)"RTN","SCMCMU4",173,0) . . IF +SCLNX=1 D SET("          >>> Discharged from '"_SCCLNM_"' clinic")"RTN","SCMCMU4",174,0) . . IF +SCLNX=2 D"RTN","SCMCMU4",175,0) . . . D SET("              Still enrolled in '"_SCCLNM_"' clinic")"RTN","SCMCMU4",176,0) . . . D SET("              Reason: "_$P(SCLNX,U,2))"RTN","SCMCMU4",177,0) . . Q"RTN","SCMCMU4",178,0) . Q"RTN","SCMCMU4",179,0) Q"RTN","SCMCMU4",180,0) ;"RTN","SCMCMU4",181,0)CLINIC ; -- display clinic to be discharged from"RTN","SCMCMU4",182,0) N SCPOS,SCX,Y"RTN","SCMCMU4",183,0) D SET(" ")"RTN","SCMCMU4",184,0) IF '$O(SCTPDIS(0)) D  G CLINICQ"RTN","SCMCMU4",185,0) . D SET(" Clinic Discharges:  None")"RTN","SCMCMU4",186,0) . Q"RTN","SCMCMU4",187,0) ;"RTN","SCMCMU4",188,0) S Y="""RTN","SCMCMU4",189,0) S Y=$$SETSTR^VALM1("Clinic Discharges:",Y,2,20)"RTN","SCMCMU4",190,0) S Y=$$SETSTR^VALM1("Position",Y,25,25)"RTN","SCMCMU4",191,0) S Y=$$SETSTR^VALM1("Associated Clinic",Y,55,25)"RTN","SCMCMU4",192,0) D SET(Y)"RTN","SCMCMU4",193,0) S Y="""RTN","SCMCMU4",194,0) S Y=$$SETSTR^VALM1("--------",Y,25,25)"RTN","SCMCMU4",195,0) S Y=$$SETSTR^VALM1("-----------------",Y,55,25)"RTN","SCMCMU4",196,0) D SET(Y)"RTN","SCMCMU4",197,0) ;"RTN","SCMCMU4",198,0) S SCPOS=0"RTN","SCMCMU4",199,0) F  S SCPOS=$O(SCTPDIS(SCPOS)) Q:'SCPOS  D"RTN","SCMCMU4",200,0) . S SCX=$G(^SCTM(404.57,SCPOS,0),"Unknown")"RTN","SCMCMU4",201,0) . S Y="""RTN","SCMCMU4",202,0) . S Y=$$SETSTR^VALM1($E($P(SCX,U),1,25),Y,25,25)"RTN","SCMCMU4",203,0) . S Y=$$SETSTR^VALM1($E($P($G(^SC(+$P(SCX,U,9),0),"Unknown"),U),1,25),Y,55,25)"RTN","SCMCMU4",204,0) . D SET(Y)"RTN","SCMCMU4",205,0) . Q"RTN","SCMCMU4",206,0) ;"RTN","SCMCMU4",207,0)CLINICQ Q"RTN","SCMCMU4",208,0) ;"RTN","SCMCMU4",209,0)INFO(TYPE,SCIEN) ; -- load ok info text"RTN","SCMCMU4",210,0) N SCI"RTN","SCMCMU4",211,0) S SCI=0"RTN","SCMCMU4",212,0) F  S SCI=$O(@SCOKAR@(SCNT,TYPE,SCIEN,SCI)) Q:'SCI  D"RTN","SCMCMU4",213,0) . S X=$G(@SCOKAR@(SCNT,TYPE,SCIEN,SCI))"RTN","SCMCMU4",214,0) . IF X]"" D SET("     "_X)"RTN","SCMCMU4",215,0) . Q"RTN","SCMCMU4",216,0) Q"RTN","SCMCMU4",217,0) ;"RTN","SCMCQK")0^10^B13039243"RTN","SCMCQK",1,0)SCMCQK ;ALB/REW - Single Pt Tm/Pt Tm Pos Assign and Discharge ; 1 Jul 1998"RTN","SCMCQK",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCQK",3,0) ;"RTN","SCMCQK",4,0)EN ; - main call"RTN","SCMCQK",5,0) W !,"Primary Care Team/PC Practitioner Assignment/Unassignment",!"RTN","SCMCQK",6,0) W !,?6,"Prior to using this option, PCMM's Graphical User Interface (GUI)""RTN","SCMCQK",7,0) W !,?6,"must be used to:""RTN","SCMCQK",8,0) W !,?10,"1) Setup active primary care team(s)""RTN","SCMCQK",9,0) W !,?10,"2) Setup active PC Practitioner position(s)""RTN","SCMCQK",10,0) W !,?10,"3) Assign practitioner to position(s)""RTN","SCMCQK",11,0) W !!?6,"A patient can be assigned to only one PC team and one""RTN","SCMCQK",12,0) W !?6,"PC Practitioner Position on a given day.  The patient must be""RTN","SCMCQK",13,0) W !?6,"assigned to a position's team to be assigned to the position.""RTN","SCMCQK",14,0) W !!?6,"Note: You must the use the PCMM GUI if the patient was:""RTN","SCMCQK",15,0) W !?10,"o unassigned from PC Practitioner today or in the future""RTN","SCMCQK",16,0) W !?10,"o assigned to a future PC assignment.""RTN","SCMCQK",17,0) N DFN"RTN","SCMCQK",18,0) F  S DFN=$$PATIENT() Q:DFN<0  D PAT"RTN","SCMCQK",19,0) Q"RTN","SCMCQK",20,0) ;"RTN","SCMCQK",21,0)PAT ;process patient"RTN","SCMCQK",22,0) Q:'$G(DFN)"RTN","SCMCQK",23,0) N SCTPSTAT,SCTMSTAT,SCSTAT,SCTM,SCTP"RTN","SCMCQK",24,0) W !,"Checking PC Team and Position Status...",!"RTN","SCMCQK",25,0) ;display PC info, check if patient has a current PC team"RTN","SCMCQK",26,0) D PCMM^SCRPU4(DFN,DT)"RTN","SCMCQK",27,0) ;below functions return status^message^pointer"RTN","SCMCQK",28,0) S SCTMSTAT=$$YSPTTMPC^SCMCTMU2(DFN,DT)  ;ok to assign new PC team?"RTN","SCMCQK",29,0) S SCTPSTAT=$$YSPTTPPC^SCMCTPU2(DFN,DT,1)  ;ok to assign new PC prac?"RTN","SCMCQK",30,0) ;what is current/future PC assignment status?"RTN","SCMCQK",31,0) S SCSTAT=$S((SCTMSTAT&SCTPSTAT):"NONE",('SCTMSTAT&SCTPSTAT):"TEAM",('SCTMSTAT&'SCTPSTAT):"BOTH",1:"ERROR")  ;error if PC pract w/o PC team assignment"RTN","SCMCQK",32,0) W:SCSTAT="NONE" !,"No current PC Team/PC Practitioner Assignments""RTN","SCMCQK",33,0) IF $S(SCTMSTAT:0,(SCTMSTAT["future"):1,1:0) W !,$P(SCTMSTAT,U,2) S SCSTAT="FUTURE""RTN","SCMCQK",34,0) IF $S(SCTPSTAT:0,(SCTPSTAT["future"):1,1:0) W !,$P(SCTPSTAT,U,2) S SCSTAT="FUTURE""RTN","SCMCQK",35,0) S SCTM=$P(SCTMSTAT,U,3)"RTN","SCMCQK",36,0) S SCTP=$P(SCTPSTAT,U,3)"RTN","SCMCQK",37,0) D @SCSTAT"RTN","SCMCQK",38,0) D BREAK"RTN","SCMCQK",39,0) Q"RTN","SCMCQK",40,0) ;"RTN","SCMCQK",41,0)BREAK ;"RTN","SCMCQK",42,0) N DIR,X,Y"RTN","SCMCQK",43,0) S DIR(0)="EA",DIR("A",1)="",DIR("A")="Press enter to continue.""RTN","SCMCQK",44,0) D ^DIR"RTN","SCMCQK",45,0) Q"RTN","SCMCQK",46,0) ;"RTN","SCMCQK",47,0)NONE ;"RTN","SCMCQK",48,0) N SCASSDT"RTN","SCMCQK",49,0) D ASTM^SCMCQK1"RTN","SCMCQK",50,0) Q"RTN","SCMCQK",51,0)TEAM ;"RTN","SCMCQK",52,0) N DIR,X,Y,SCDISCH,SCASSDT,SCSELECT"RTN","SCMCQK",53,0) S DIR(0)="SO^1:POSITION ASSIGNMENT - BY PRACTITIONER NAME;2:POSITION ASSIGNMENT - BY POSITION NAME;3:TEAM UNASSIGNMENT""RTN","SCMCQK",54,0) D ^DIR"RTN","SCMCQK",55,0) IF $P(Y,U,1)=1!($P(Y,U,1)=2) D"RTN","SCMCQK",56,0) .S SCSELECT=$S($P(Y,U,1)=1:"PRACT",1:"POSIT")"RTN","SCMCQK",57,0) .D ASTP^SCMCQK1"RTN","SCMCQK",58,0) ELSE  D:$P(Y,U,1)=3 UNTM^SCMCQK1"RTN","SCMCQK",59,0) Q"RTN","SCMCQK",60,0) ;"RTN","SCMCQK",61,0)BOTH ;"RTN","SCMCQK",62,0) N DIR,X,Y,SCDISCH"RTN","SCMCQK",63,0) S DIR(0)="SO^1:PRACTITIONER UNASSIGNMENT;2:TEAM UNASSIGNMENT""RTN","SCMCQK",64,0) D ^DIR"RTN","SCMCQK",65,0) IF $P(Y,U,1)=1 D"RTN","SCMCQK",66,0) .D UNTP^SCMCQK1"RTN","SCMCQK",67,0) ELSE  D:$P(Y,U,1)=2 UNTM^SCMCQK1"RTN","SCMCQK",68,0) Q"RTN","SCMCQK",69,0) ;"RTN","SCMCQK",70,0)FUTURE ;"RTN","SCMCQK",71,0) W !,"This patient has future assignments for Primary Care""RTN","SCMCQK",72,0) W !,"Team and/or Practitioner""RTN","SCMCQK",73,0) W !!!,"You must use PCMM's Graphical User Interface to change""RTN","SCMCQK",74,0) Q"RTN","SCMCQK",75,0) ;"RTN","SCMCQK",76,0)ERROR ;"RTN","SCMCQK",77,0) W !,"This patient has NO active Primary Care Team, but does have""RTN","SCMCQK",78,0) W !,"an active PC Practitioner Position""RTN","SCMCQK",79,0) W !!!,"You must use PCMM's Graphical User Interface to correct""RTN","SCMCQK",80,0) Q"RTN","SCMCQK",81,0) ;"RTN","SCMCQK",82,0)PATIENT() ;Return Patient DFN or -1"RTN","SCMCQK",83,0) ;"RTN","SCMCQK",84,0) N DIC,X,Y"RTN","SCMCQK",85,0) W !!!"RTN","SCMCQK",86,0) S DIC=2"RTN","SCMCQK",87,0) S DIC(0)="AEMQZ""RTN","SCMCQK",88,0) D ^DIC"RTN","SCMCQK",89,0) Q $S($D(DTOUT):-1,$D(DUOUT):-1,(Y<0):-1,1:+Y)"RTN","SCMCQK1")0^24^B58186664"RTN","SCMCQK1",1,0)SCMCQK1 ;ALB/REW - Single Pt Tm/Pt Tm Pos Assign and Discharge ; 1 Jul 1998"RTN","SCMCQK1",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCQK1",3,0) ;"RTN","SCMCQK1",4,0)UNTP ;unassign patient from pc prac position"RTN","SCMCQK1",5,0) IF '$G(SCTP) W !,"No position defined" Q"RTN","SCMCQK1",6,0) N OK,SCER,SCCL,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS"RTN","SCMCQK1",7,0) S OK=0"RTN","SCMCQK1",8,0) W !,"About to Unassign "_$$NAME(DFN)_" from: ",!,?8,$$POSITION(SCTP)_" position   ["_$P($$GETPRTP^SCAPMCU2(SCTP,DT),U,2)_"]""RTN","SCMCQK1",9,0) S SCDISCH=$$DATE("D")"RTN","SCMCQK1",10,0) G:SCDISCH<1 QTUNTP"RTN","SCMCQK1",11,0) G:'$$CONFIRM() QTUNTP"RTN","SCMCQK1",12,0) S OK=$$INPTSCTP^SCAPMC22(DFN,SCTP,SCDISCH,.SCER)"RTN","SCMCQK1",13,0) G:OK'>0 QTUNTP"RTN","SCMCQK1",14,0) S SCCL=$P($G(^SCTM(404.57,+$G(SCTP),0)),U,9)"RTN","SCMCQK1",15,0) IF SCCL D DISCL"RTN","SCMCQK1",16,0)QTUNTP W !,"Position Unassignment "_$S(OK:"made.",1:"NOT made.")"RTN","SCMCQK1",17,0) Q"RTN","SCMCQK1",18,0) ;"RTN","SCMCQK1",19,0)ENRCL ;"RTN","SCMCQK1",20,0) N SCRESTA,SCREST,SCCLNM,SCTM"RTN","SCMCQK1",21,0) G:$$ACTCL(DFN,SCCL) QTECL"RTN","SCMCQK1",22,0) W !!!,"The "_$$POSITION(SCTP)_" is associated with the ",$$CLINIC(SCCL)_" clinic.""RTN","SCMCQK1",23,0) ; SCRESTA = Array of pt's teams causing restricted consults"RTN","SCMCQK1",24,0) N SCRESTA"RTN","SCMCQK1",25,0) S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")"RTN","SCMCQK1",26,0) IF SCREST D"RTN","SCMCQK1",27,0) .N SCTM"RTN","SCMCQK1",28,0) . S SCCLNM=Y"RTN","SCMCQK1",29,0) . W !,?5,"Patient has restricted consults due to team assignment(s):""RTN","SCMCQK1",30,0) .S SCTM=0"RTN","SCMCQK1",31,0) .F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)"RTN","SCMCQK1",32,0) IF SCREST&'$G(SCOKCONS) D  G QTECL"RTN","SCMCQK1",33,0) .W !,?5,"This patient may only be enrolled in clinics via""RTN","SCMCQK1",34,0) .W !,?15,"Edit Clinic Enrollment Data option""RTN","SCMCQK1",35,0) W !,"Do you wish to enroll the patient from this clinic on ""RTN","SCMCQK1",36,0) S Y=SCASSDT X ^DD("DD") W Y,"?""RTN","SCMCQK1",37,0) IF $$YESNO() D"RTN","SCMCQK1",38,0) .W !,"Clinic Enrollment""RTN","SCMCQK1",39,0) .IF $$ACPTCL^SCAPMC18(DFN,SCCL,,SCASSDT,"SCENER") W " made""RTN","SCMCQK1",40,0) .ELSE  W "NOT made""RTN","SCMCQK1",41,0)QTECL Q"RTN","SCMCQK1",42,0) ;"RTN","SCMCQK1",43,0)DISCL ;"RTN","SCMCQK1",44,0) G:'$$ACTCL(DFN,SCCL) QTDCL"RTN","SCMCQK1",45,0) W !,$$NAME(DFN)," is enrolled in the associated "_$$CLINIC(SCCL)_" clinic.""RTN","SCMCQK1",46,0) W !,"Do you wish to discharge the patient from this clinic on ""RTN","SCMCQK1",47,0) S Y=SCDISCH X ^DD("DD") W Y,"?""RTN","SCMCQK1",48,0) G:'$$YESNO() QTDCL"RTN","SCMCQK1",49,0) N SDFN,SDCLN S SDFN=DFN,SDCLN=SCCL"RTN","SCMCQK1",50,0) N DFN D ^SDCD"RTN","SCMCQK1",51,0)QTDCL Q"RTN","SCMCQK1",52,0) ;"RTN","SCMCQK1",53,0)UNTM ;"RTN","SCMCQK1",54,0) ;assign patient from pc team (and pc position if possible)"RTN","SCMCQK1",55,0) N OK,SCER,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS,OK2,OK3"RTN","SCMCQK1",56,0) S OK=0"RTN","SCMCQK1",57,0) W !!,"About to Unassign "_$$NAME(DFN)_" from "_$$TEAMNM(SCTM)_" team""RTN","SCMCQK1",58,0) W:'SCTPSTAT !,?5,"AND from "_$$POSITION(SCTP)_" position  ["_$$WRITETP^SCMCDD1(SCTP)_"]""RTN","SCMCQK1",59,0) S SCDISCH=$$DATE("D")"RTN","SCMCQK1",60,0) G:SCDISCH<1 QTUNTM"RTN","SCMCQK1",61,0) G:'$$CONFIRM() QTUNTM"RTN","SCMCQK1",62,0) IF 'SCTPSTAT D  G:OK2'>0 QTUNTM"RTN","SCMCQK1",63,0) .W !,"PC Practitioner Unassignment ""RTN","SCMCQK1",64,0) .S OK2=$$INPTSCTP^SCAPMC22(DFN,SCTP,SCDISCH,.SCER)"RTN","SCMCQK1",65,0) .IF OK2>0 D"RTN","SCMCQK1",66,0) ..W "made.""RTN","SCMCQK1",67,0) ..S SCCL=$P(^SCTM(404.57,SCTP,0),U,9)"RTN","SCMCQK1",68,0) ..D:SCCL DISCL"RTN","SCMCQK1",69,0) S OK3=$$ALLPOS()"RTN","SCMCQK1",70,0) IF $$OKINPTTM^SCMCTMU2(DFN,SCTM,SCDISCH) D"RTN","SCMCQK1",71,0) .S OK=$$INPTSCTM^SCAPMC7(DFN,SCTM,SCDISCH,.SCER)"RTN","SCMCQK1",72,0) ELSE  D"RTN","SCMCQK1",73,0) . W !,"Future/Current Patient-Position Assignment exists""RTN","SCMCQK1",74,0)QTUNTM W !,"Team Unassignment "_$S(OK:"made",1:"NOT made.")"RTN","SCMCQK1",75,0) Q"RTN","SCMCQK1",76,0) ;"RTN","SCMCQK1",77,0)ALLPOS() ;unassign all patient-positions for team"RTN","SCMCQK1",78,0) ; not stand-alone - needs dfn,sctm"RTN","SCMCQK1",79,0) ;   return 1=No positions left assigned|0=At least 1 position assigned"RTN","SCMCQK1",80,0) N OK,SCDT1,SCPTTPX,SCERRR,SCTP,SCCNT,SCPTTPI,SCLOC,SCNODE,SCPTTP2"RTN","SCMCQK1",81,0) S SCDT1("BEGIN")=SCDISCH+1"RTN","SCMCQK1",82,0) S SCDT1("END")=3990101"RTN","SCMCQK1",83,0) S SCDT1("INCL")=0  ;anytime from now to future"RTN","SCMCQK1",84,0) S OK=$$TPPT^SCAPMC23(DFN,"SCDT1",,,,,,"SCPTTPX",.SCERRR)"RTN","SCMCQK1",85,0) S (SCTP,SCCNT)=0"RTN","SCMCQK1",86,0) W !,"Checking for other position assignments to team...""RTN","SCMCQK1",87,0) F  S SCTP=$O(SCPTTPX("SCTP",SCTM,SCTP)) Q:'SCTP  S SCCNT=SCCNT+1 D"RTN","SCMCQK1",88,0) .S SCPTTPI=$O(SCPTTPX("SCTP",SCTM,SCTP,9999999),-1)"RTN","SCMCQK1",89,0) .S SCLOC=$O(SCPTTPX("SCTP",SCTM,SCTP,SCPTTPI,0))"RTN","SCMCQK1",90,0) .S SCNODE=SCPTTPX(SCLOC)"RTN","SCMCQK1",91,0) .S SCPTTP2(SCTP)="""RTN","SCMCQK1",92,0) .W !,?3,$P(SCNODE,U,2),"   ",$P(SCNODE,U,8)"RTN","SCMCQK1",93,0) .IF $P(SCNODE,U,6)!(SCDISCH'>$P(SCNODE,U,5)) D"RTN","SCMCQK1",94,0) ..W !,?5,"Unassignment date already exists or unassignment after assignment date""RTN","SCMCQK1",95,0) ..W !,?15,"- Correct via PCMM GUI""RTN","SCMCQK1",96,0) ..S OK=0"RTN","SCMCQK1",97,0) W !,?5,$S(SCCNT:SCCNT,1:"No")_" current/future position assignment(s)""RTN","SCMCQK1",98,0) G:'OK!('SCCNT) QTALL"RTN","SCMCQK1",99,0) W !!,"About to unassign the above patient-position assignments""RTN","SCMCQK1",100,0) IF '$$CONFIRM S OK=0 G QTALL"RTN","SCMCQK1",101,0) S SCTP=0"RTN","SCMCQK1",102,0) F  S SCTP=$O(SCPTTP2(SCTP)) Q:'SCTP  D  Q:'OK"RTN","SCMCQK1",103,0) .S OK=$$INPTSCTP^SCAPMC22(DFN,SCTP,SCDISCH,.SCER)"RTN","SCMCQK1",104,0) .W:'OK !,?10,"Problem with unassignment, correct via PCMM GUI""RTN","SCMCQK1",105,0)QTALL Q OK"RTN","SCMCQK1",106,0) ;"RTN","SCMCQK1",107,0)ASTM ;assign patient to PC team"RTN","SCMCQK1",108,0) N DIC,Y,OK,SCTM,SCTMFLDS,SCER,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS"RTN","SCMCQK1",109,0) S OK=0"RTN","SCMCQK1",110,0) W !!,"About to Assign "_$$NAME(DFN)_" to a primary care team""RTN","SCMCQK1",111,0) S DIC="^SCTM(404.51,""RTN","SCMCQK1",112,0) S DIC(0)="AEMQZ""RTN","SCMCQK1",113,0) S DIC("S")="IF $$ACTTM^SCMCTMU(Y,DT)&($P($G(^SCTM(404.51,Y,0)),U,5))""RTN","SCMCQK1",114,0) ;  - select from active teams that can be PC Teams"RTN","SCMCQK1",115,0) D ^DIC"RTN","SCMCQK1",116,0) G:Y<1 QTASTM"RTN","SCMCQK1",117,0) S SCTM=+Y"RTN","SCMCQK1",118,0) S SCASSDT=$$DATE("A")"RTN","SCMCQK1",119,0) G:SCASSDT<1 QTASTM"RTN","SCMCQK1",120,0) G:'$$CONFIRM() QTASTM"RTN","SCMCQK1",121,0) S SCTM=+Y"RTN","SCMCQK1",122,0) ;setup fields"RTN","SCMCQK1",123,0) S SCTMFLDS(.08)=1 ;primary care assignment"RTN","SCMCQK1",124,0) S SCTMFLDS(.11)=$G(DUZ,.5)"RTN","SCMCQK1",125,0) D NOW^%DTC S SCTMFLDS(.12)=%"RTN","SCMCQK1",126,0) IF $$ACPTTM^SCAPMC(DFN,SCTM,"SCTMFLDS",SCASSDT,"SCTPTME") D"RTN","SCMCQK1",127,0) .S SCSELECT=$$SELPOS()"RTN","SCMCQK1",128,0) .D:$L(SCSELECT) ASTP ;prompt for position prompt"RTN","SCMCQK1",129,0) .S OK=1"RTN","SCMCQK1",130,0)QTASTM W !,"Team Assignment "_$S(OK:"made",1:"NOT made.")"RTN","SCMCQK1",131,0) Q"RTN","SCMCQK1",132,0)ASTP ;assign patient to PC practitioner"RTN","SCMCQK1",133,0) N DIC,Y,OK,SCCL,X,SCTPFLDS,SCER,SCBEGIN,SCN,SCLIST,SCEND,SCINCL,SCLSEQ,SCDATES,SCDTS"RTN","SCMCQK1",134,0) S OK=0"RTN","SCMCQK1",135,0) W !!,"About to Assign "_$$NAME(DFN)_" to PC Practitioner Position""RTN","SCMCQK1",136,0) ;lookup to display only position and [practitioner]"RTN","SCMCQK1",137,0) IF SCSELECT="PRACT" D"RTN","SCMCQK1",138,0) .S DIC("W")="N SCP1 S SCP1=$G(^SCTM(404.52,Y,0)) W ""    ["",$P($G(^VA(200,+$P(SCP1,U,3),0)),U,1),""]""""RTN","SCMCQK1",139,0) .S DIC("A")="POSITION's Current PRACTITIONER: ""RTN","SCMCQK1",140,0) .S DIC="^SCTM(404.52,""RTN","SCMCQK1",141,0) .;Must be from team, must be activation,must not have future inactivation"RTN","SCMCQK1",142,0) .S DIC("S")="I $$PRACSCR^SCMCQK1(Y)""RTN","SCMCQK1",143,0) .S D="C""RTN","SCMCQK1",144,0) ELSE  D"RTN","SCMCQK1",145,0) .S DIC="^SCTM(404.57,""RTN","SCMCQK1",146,0) .S D="B""RTN","SCMCQK1",147,0) .S DIC("A")="POSITION's Name: ""RTN","SCMCQK1",148,0) .S DIC("S")="I $$POSSCR^SCMCQK1(Y)""RTN","SCMCQK1",149,0) S DIC(0)="AEMQZ""RTN","SCMCQK1",150,0) D MIX^DIC1"RTN","SCMCQK1",151,0) G:Y<1 QTASTP"RTN","SCMCQK1",152,0) IF SCSELECT="PRACT" D"RTN","SCMCQK1",153,0) .S SCTP=$P(Y,U,2)"RTN","SCMCQK1",154,0) ELSE  D"RTN","SCMCQK1",155,0) .S SCTP=$P(Y,U,1)"RTN","SCMCQK1",156,0) S SCASSDT=$$DATE("A")"RTN","SCMCQK1",157,0) G:SCASSDT<1 QTASTP"RTN","SCMCQK1",158,0) G:'$$CONFIRM() QTASTP"RTN","SCMCQK1",159,0) ;setup fields"RTN","SCMCQK1",160,0) S SCTPFLDS(.03)=SCASSDT"RTN","SCMCQK1",161,0) S SCTPFLDS(.05)=1 ;pc pract role"RTN","SCMCQK1",162,0) S SCTPFLDS(.06)=$G(DUZ,.5)"RTN","SCMCQK1",163,0) D NOW^%DTC S SCTPFLDS(.07)=%"RTN","SCMCQK1",164,0) IF $$ACPTTP^SCAPMC21(DFN,SCTP,"SCTPFLDS",SCASSDT,"SCTPTME",0) D"RTN","SCMCQK1",165,0) .S OK=1"RTN","SCMCQK1",166,0) .S SCCL=$P(^SCTM(404.57,SCTP,0),U,9)"RTN","SCMCQK1",167,0) .D:SCCL ENRCL"RTN","SCMCQK1",168,0)QTASTP W !,"Position Assignment "_$S(OK:"made",1:"NOT made.")"RTN","SCMCQK1",169,0) Q"RTN","SCMCQK1",170,0)NAME(DFN) ;return patient name"RTN","SCMCQK1",171,0) Q $P($G(^DPT(DFN,0)),U,1)"RTN","SCMCQK1",172,0) ;"RTN","SCMCQK1",173,0)POSITION(SCTP) ;return position name"RTN","SCMCQK1",174,0) Q $P($G(^SCTM(404.57,SCTP,0)),U,1)"RTN","SCMCQK1",175,0) ;"RTN","SCMCQK1",176,0)TEAMNM(SCTM) ;return team name"RTN","SCMCQK1",177,0) Q $P($G(^SCTM(404.51,SCTM,0)),U,1)"RTN","SCMCQK1",178,0) ;"RTN","SCMCQK1",179,0)CLINIC(SCCL) ;return clinic name"RTN","SCMCQK1",180,0) Q $P($G(^SC(+SCCL,0)),U,1)"RTN","SCMCQK1",181,0) ;"RTN","SCMCQK1",182,0)YESNO() ;"RTN","SCMCQK1",183,0) N DIR,X,Y"RTN","SCMCQK1",184,0) S DIR(0)="Y",DIR("B")="YES""RTN","SCMCQK1",185,0) D ^DIR"RTN","SCMCQK1",186,0) Q Y>0"RTN","SCMCQK1",187,0) ;"RTN","SCMCQK1",188,0)CONFIRM() ;confirmation call"RTN","SCMCQK1",189,0) N DIR,X,Y"RTN","SCMCQK1",190,0) S DIR("A")="Are you sure (Yes/No)""RTN","SCMCQK1",191,0) S DIR(0)="Y""RTN","SCMCQK1",192,0) D ^DIR"RTN","SCMCQK1",193,0) Q +Y=1"RTN","SCMCQK1",194,0) ;"RTN","SCMCQK1",195,0)SELPOS() ;return way to select position: 1=PRACT,2=POSIT,3=NONE"RTN","SCMCQK1",196,0) N DIR,X,Y"RTN","SCMCQK1",197,0) W !,"Choose way to select PC Practitioner POSITION: ""RTN","SCMCQK1",198,0) S DIR(0)="SO^0:NONE;1:BY PRACTITIONER ASSIGNMENT;2:BY POSITION ASSIGNMENT""RTN","SCMCQK1",199,0) S DIR("B")=1"RTN","SCMCQK1",200,0) D ^DIR"RTN","SCMCQK1",201,0) Q $S(Y'>0:"",+Y=1:"PRACT",1:"POSIT")"RTN","SCMCQK1",202,0) ;"RTN","SCMCQK1",203,0)DATE(TYPE) ;return date type=A or D"RTN","SCMCQK1",204,0) N DIR,X,Y"RTN","SCMCQK1",205,0) S DIR("A")=$S(TYPE="A":"Assignment",1:"Unassignment")_" date: ""RTN","SCMCQK1",206,0) S DIR(0)="DA^::EXP""RTN","SCMCQK1",207,0) S Y=$S($D(SCDISCH):SCDISCH,$D(SCASSDT):SCASSDT,(TYPE="A"):"TODAY",1:"TODAY-1")"RTN","SCMCQK1",208,0) X ^DD("DD")"RTN","SCMCQK1",209,0) S DIR("B")=Y"RTN","SCMCQK1",210,0) D ^DIR"RTN","SCMCQK1",211,0) Q Y"RTN","SCMCQK1",212,0)ACTCL(DFN,SCCL) ;is patient enrolled in clinic?"RTN","SCMCQK1",213,0) N SCXX"RTN","SCMCQK1",214,0) S SCXX=$O(^DPT(DFN,"DE","B",SCCL,9999),-1)"RTN","SCMCQK1",215,0) Q $S('SCXX:0,($P(^DPT(DFN,"DE",+SCXX,0),U,2)="I"):0,1:1)"RTN","SCMCQK1",216,0) ;"RTN","SCMCQK1",217,0)PRACSCR(SC40452) ;screen for for file 404.52"RTN","SCMCQK1",218,0) N SCP,SCNODE,OK"RTN","SCMCQK1",219,0) S SCP=$G(^SCTM(404.52,SC40452,0))"RTN","SCMCQK1",220,0) S OK=0"RTN","SCMCQK1",221,0) G:'SCP QTPP"RTN","SCMCQK1",222,0) S SCNODE=$G(^SCTM(404.57,+SCP,0))"RTN","SCMCQK1",223,0) S OK=$S($P(SCNODE,U,2)'=SCTM:0,'$P(SCNODE,U,4):0,($O(^SCTM(404.52,"AIDT",+SCP,1,""))'=-$P(SCP,U,2)):0,($O(^SCTM(404.52,"AIDT",+SCP,0,-$P(SCP,U,2)),-1)):0,($$ACTTP^SCMCTPU(+SCP)>0):1,1:0)"RTN","SCMCQK1",224,0)QTPP Q OK"RTN","SCMCQK1",225,0) ;"RTN","SCMCQK1",226,0)POSSCR(SCTP) ;screen for file 404.57"RTN","SCMCQK1",227,0) N SCNODE"RTN","SCMCQK1",228,0) S SCNODE=$G(^SCTM(404.57,SCTP,0))"RTN","SCMCQK1",229,0) Q $S($P(SCNODE,U,2)'=SCTM:0,'$P(SCNODE,U,4):0,($$ACTTP^SCMCTPU(SCTP)>0):1,1:0)"RTN","SCMCTMU2")0^8^B7792258"RTN","SCMCTMU2",1,0)SCMCTMU2 ;ALB/REW - Team-Patient Utilities ; 1 Apr 96"RTN","SCMCTMU2",2,0) ;;5.3;Scheduling;**41,51,148**;AUG 13, 1993"RTN","SCMCTMU2",3,0) ;1"RTN","SCMCTMU2",4,0)RESTENR ;call when pt is set to 'restrict consults' & he is enrolled in clinic"RTN","SCMCTMU2",5,0) G:'$G(DFN) END"RTN","SCMCTMU2",6,0) S SCCL=0"RTN","SCMCTMU2",7,0) F  S SCCL=$O(^TMP($J,"SC CED","AFTER","B",SCCL)) Q:'SCCL  D"RTN","SCMCTMU2",8,0) .W !,SCCL"RTN","SCMCTMU2",9,0)END Q"RTN","SCMCTMU2",10,0) ;"RTN","SCMCTMU2",11,0)YSPTTMPC(DFN,SCACT) ;is it ok to give patient a new pc team?"RTN","SCMCTMU2",12,0) ;  Return [OK:1,Not OK: 0^Message]"RTN","SCMCTMU2",13,0) N SCOK,SCX,SCTM"RTN","SCMCTMU2",14,0) ;does pt have a current pc team?"RTN","SCMCTMU2",15,0) S SCTM=$$GETPCTM^SCAPMCU2(DFN,DT,1)"RTN","SCMCTMU2",16,0) IF SCTM>0 S SCOK="0^Pt has current PC Team Assignment"_U_SCTM G QTOKPC"RTN","SCMCTMU2",17,0) ;does pt have a future pc team?"RTN","SCMCTMU2",18,0) S SCX=$O(^SCPT(404.42,"APCTM",DFN,1,SCACT))"RTN","SCMCTMU2",19,0) IF SCX D  G QTOKPC"RTN","SCMCTMU2",20,0) .S SCTM=$O(^SCPT(404.42,"APCTM",DFN,1,+SCX,0))"RTN","SCMCTMU2",21,0) .S SCOK="0^Patient has future PC Assignment to the "_$P($G(^SCTM(404.51,+SCTM,0)),U,1)_" team."_U_SCTM"RTN","SCMCTMU2",22,0) S SCOK=1"RTN","SCMCTMU2",23,0)QTOKPC Q SCOK"RTN","SCMCTMU2",24,0) ;"RTN","SCMCTMU2",25,0)OKACPTTM(DFN,SCTM,SCDATE,SCACTIVE) ;is patient active from now till forever?"RTN","SCMCTMU2",26,0) ; Returned: 1: Not active from now till forever, 0 = Active sometime"RTN","SCMCTMU2",27,0) ;   DFN     - Pointer to Patient File"RTN","SCMCTMU2",28,0) ;   SCTM    - Team File ien of interest"RTN","SCMCTMU2",29,0) ;   SCDATE  - Start Date"RTN","SCMCTMU2",30,0) ;   SCACTIVE- Must Team be active on date or just sometime in future?"RTN","SCMCTMU2",31,0) N SCTMDT,SCOK,SCACERR,SCACLST"RTN","SCMCTMU2",32,0) S SCOK=1"RTN","SCMCTMU2",33,0) S SCTMDT("BEGIN")=$G(SCDATE,DT)"RTN","SCMCTMU2",34,0) S SCTMDT("END")=3990101 ;forever"RTN","SCMCTMU2",35,0) S SCTMDT("INCL")=0"RTN","SCMCTMU2",36,0) S SCACTIVE=$G(SCACTIVE,1)"RTN","SCMCTMU2",37,0) ; if checking for active teams"RTN","SCMCTMU2",38,0) IF SCACTIVE&('$$ACTHIST^SCAPMCU2(404.58,.SCTM,.SCTMDT,"SCACERR","SCACLST")) S SCOK=0 G ENDOKTM"RTN","SCMCTMU2",39,0) S SCOK=$$TMPT^SCAPMC(DFN,"SCTMDT",,"SCACLST","SCACERR")"RTN","SCMCTMU2",40,0) S:SCOK>0&($D(SCACLST("SCTM",SCTM))) SCOK=0"RTN","SCMCTMU2",41,0)ENDOKTM Q SCOK"RTN","SCMCTMU2",42,0) ;"RTN","SCMCTMU2",43,0)OKPTTMPC(DFN,SCTM,DATE) ;"RTN","SCMCTMU2",44,0) N SCOK,SCPCTM"RTN","SCMCTMU2",45,0) S SCOK=1"RTN","SCMCTMU2",46,0) ;is this a possible pc team?"RTN","SCMCTMU2",47,0) IF '$P($G(^SCTM(404.51,+$G(SCTM),0)),U,5) S SCOK=0 G QTOKTM"RTN","SCMCTMU2",48,0) S SCPCTM=$$GETPCTM^SCAPMCU2(DFN,DATE,1)"RTN","SCMCTMU2",49,0) IF SCPCTM D  G QTOKTM"RTN","SCMCTMU2",50,0) .IF SCPCTM'=SCTM D"RTN","SCMCTMU2",51,0) ..S SCOK=0"RTN","SCMCTMU2",52,0) ELSE  D"RTN","SCMCTMU2",53,0) .S SCOK=$$YSPTTMPC(DFN,DATE)"RTN","SCMCTMU2",54,0)QTOKTM Q SCOK"RTN","SCMCTMU2",55,0) ;"RTN","SCMCTMU2",56,0)OKINPTTM(DFN,SCTM,SCINACT) ;no future pt-position assignments?"RTN","SCMCTMU2",57,0) Q:'($G(DFN)&($G(SCTM))&($G(SCINACT))) 0"RTN","SCMCTMU2",58,0) N SCTP,SCPTTPDT,SCPTTPI,SCPTTP0,OK"RTN","SCMCTMU2",59,0) S SCTP=0,OK=1"RTN","SCMCTMU2",60,0) F  S SCTP=$O(^SCPT(404.43,"ADFN",DFN,SCTP)) Q:'SCTP  D  Q:'OK"RTN","SCMCTMU2",61,0) .F SCPTTPDT=0:0 S SCPTTPDT=$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCPTTPDT)) Q:'SCPTTPDT  D"RTN","SCMCTMU2",62,0) ..S SCPTTPI=$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCPTTPDT,0))"RTN","SCMCTMU2",63,0) ..S SCPTTP0=$G(^SCPT(404.43,SCPTTPI,0))"RTN","SCMCTMU2",64,0) ..Q:$P($G(^SCTM(404.57,+$P(SCPTTP0,U,2),0)),U,2)'=SCTM  ;ignore other teams"RTN","SCMCTMU2",65,0) ..S:'$P(SCPTTP0,U,4) OK=0  ;all ptpos assignments must have inact date"RTN","SCMCTMU2",66,0) ..S:$P(SCPTTP0,U,4)>SCINACT OK=0  ;all ptpos inact dates after tm inact"RTN","SCMCTMU2",67,0) Q OK"RTN","SCMCTPU2")0^9^B7320597"RTN","SCMCTPU2",1,0)SCMCTPU2 ;ALB/REW - Team Position Utilities ; 9 Jun 1995"RTN","SCMCTPU2",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SCMCTPU2",3,0) ;1"RTN","SCMCTPU2",4,0)YSPTTPPC(DFN,SCACT,SCROLE) ;is it ok to give patient a new pc position"RTN","SCMCTPU2",5,0) ;  "RTN","SCMCTPU2",6,0) ;  Return [OK:1,Not OK: 0^Message]"RTN","SCMCTPU2",7,0) Q:"2^1"'[$G(SCROLE) "0^Bad PC Role""RTN","SCMCTPU2",8,0) N SCOK,SCX,SCTP,SCROLETX"RTN","SCMCTPU2",9,0) S SCROLETX=$S(SCROLE=1:"Practitioner",(SCROLE=2):"Attending",1:"Error")"RTN","SCMCTPU2",10,0) ;does pt have a current pc position?"RTN","SCMCTPU2",11,0) S SCTP=$$GETPCTP^SCAPMCU2(DFN,DT,SCROLE)"RTN","SCMCTPU2",12,0) IF SCTP>0 S SCOK="0^Pt has current PC "_SCROLETX_" Position Assignment"_U_SCTP G QTOKPC"RTN","SCMCTPU2",13,0) ;does pt have a future pc position?"RTN","SCMCTPU2",14,0) S SCX=$O(^SCPT(404.43,"APCPOS",DFN,SCROLE,SCACT))"RTN","SCMCTPU2",15,0) IF SCX D  G QTOKPC"RTN","SCMCTPU2",16,0) .S SCTP=$O(^SCPT(404.43,"APCPOS",DFN,SCROLE,+SCX,0))"RTN","SCMCTPU2",17,0) .S SCOK="0^Patient has future PC Assignment to the "_$P($G(^SCTM(404.57,+SCTP,0)),U,1)_" position."_U_SCTP"RTN","SCMCTPU2",18,0) S SCOK=1"RTN","SCMCTPU2",19,0)QTOKPC Q SCOK"RTN","SCMCTPU2",20,0) ;"RTN","SCMCTPU2",21,0)OKACPTTP(DFN,SCTP,DATE,ACTIVE) ;is it ok to activate pt pos assignment?"RTN","SCMCTPU2",22,0) N SCOK,SCDT,SCNODE,SCINACT"RTN","SCMCTPU2",23,0) S SCOK=1"RTN","SCMCTPU2",24,0) G:'$D(^SCPT(404.43,"ADFN",DFN)) ENDOK  ;quick check"RTN","SCMCTPU2",25,0) ;is position active now(if checking)?"RTN","SCMCTPU2",26,0) IF $G(ACTIVE) D  G:'SCOK ENDOK"RTN","SCMCTPU2",27,0) . S SCOK=+$$ACTTP^SCMCTPU(SCTP,DATE)"RTN","SCMCTPU2",28,0) ;is the patient assigned to this position either now or in future?"RTN","SCMCTPU2",29,0) S SCDT=$O(^SCPT(404.43,"ADFN",DFN,SCTP,3990101),-1)"RTN","SCMCTPU2",30,0) S SCPTTP=$O(^SCPT(404.43,"ADFN",DFN,SCTP,+SCDT,0))"RTN","SCMCTPU2",31,0) IF SCPTTP D"RTN","SCMCTPU2",32,0) .S SCNODE=$G(^SCPT(404.43,SCPTTP,0))"RTN","SCMCTPU2",33,0) .S SCINACT=$P(SCNODE,U,4)"RTN","SCMCTPU2",34,0) .IF ('SCINACT)!(SCINACT>DATE) D"RTN","SCMCTPU2",35,0) ..S SCOK=0   ;no inactive date or inact after date"RTN","SCMCTPU2",36,0)ENDOK Q SCOK"RTN","SCMCTPU2",37,0) ;"RTN","SCMCTPU2",38,0)PCRLPTTP(DFN,SCTP,DATE) ; can position be pc practitioner or pc attending"RTN","SCMCTPU2",39,0) ; return yes pract^yes attend"RTN","SCMCTPU2",40,0) Q $$CHKROLE(DFN,SCTP,DATE,1)_U_$$CHKROLE(DFN,SCTP,DATE,2)"RTN","SCMCTPU2",41,0) ;"RTN","SCMCTPU2",42,0)CHKROLE(DFN,SCTP,DATE,ROLE) ;can position file role for patient?"RTN","SCMCTPU2",43,0) ;this is not a stand-alone function"RTN","SCMCTPU2",44,0) N SCCUR,SCDT,SCTPRL,SCPTTP,SCOK,SCNODE,SCINACT,SCACT"RTN","SCMCTPU2",45,0) S SCOK=1"RTN","SCMCTPU2",46,0) IF $G(ROLE)&('$P($G(^SCTM(404.57,+$G(SCTP),0)),U,4)) S SCOK=0 G QTCHKRL"RTN","SCMCTPU2",47,0) S SCDT=$O(^SCPT(404.43,"APCPOS",DFN,ROLE,3990101),-1)"RTN","SCMCTPU2",48,0) S SCTPRL=$O(^SCPT(404.43,"APCPOS",DFN,ROLE,+SCDT,0))"RTN","SCMCTPU2",49,0) S SCPTTP=$O(^SCPT(404.43,"APCPOS",DFN,ROLE,+SCDT,+SCTPRL,0))"RTN","SCMCTPU2",50,0) ;check if active"RTN","SCMCTPU2",51,0) IF SCPTTP D"RTN","SCMCTPU2",52,0) .S SCNODE=$G(^SCPT(404.43,SCPTTP,0))"RTN","SCMCTPU2",53,0) .S SCACT=$P(SCNODE,U,3)"RTN","SCMCTPU2",54,0) .Q:(DATE=SCACT)&(SCTP=SCTPRL)  ;if this date & position (editing current"RTN","SCMCTPU2",55,0) .S SCINACT=$P(SCNODE,U,4)"RTN","SCMCTPU2",56,0) .IF SCINACT D"RTN","SCMCTPU2",57,0) ..IF SCINACT>DATE D"RTN","SCMCTPU2",58,0) ...S SCOK=0  ;no making pc role before currently defined"RTN","SCMCTPU2",59,0) .ELSE  D"RTN","SCMCTPU2",60,0) ..S SCOK=0   ;no making pc role without inactivating current"RTN","SCMCTPU2",61,0)QTCHKRL Q SCOK"RTN","SCMCTPU3")0^45^B18143552"RTN","SCMCTPU3",1,0)SCMCTPU3 ;ALB/MJK - Team Position Utility ; 1 SEP 98"RTN","SCMCTPU3",2,0) ;;5.3;Scheduling;**148**;AUG 13,1993"RTN","SCMCTPU3",3,0) ;"RTN","SCMCTPU3",4,0)EN ; -- main entry point to find pat position assignments w/o team assignment"RTN","SCMCTPU3",5,0) N SCMODE,SCTMLST,SCTSK"RTN","SCMCTPU3",6,0) ;"RTN","SCMCTPU3",7,0) ; -- ask user which mode (diagnosis vs. fix)"RTN","SCMCTPU3",8,0) S SCMODE=$$MODE()"RTN","SCMCTPU3",9,0) IF 'SCMODE G ENQ"RTN","SCMCTPU3",10,0) ;"RTN","SCMCTPU3",11,0) ; -- ask user for teams"RTN","SCMCTPU3",12,0) IF '$$TEAM() G ENQ"RTN","SCMCTPU3",13,0) ;"RTN","SCMCTPU3",14,0) ; -- queue job to run"RTN","SCMCTPU3",15,0) S SCTSK=$$QUE()"RTN","SCMCTPU3",16,0) IF SCTSK'="" D"RTN","SCMCTPU3",17,0) . W !!,">>> Task#: ",SCTSK"RTN","SCMCTPU3",18,0) . W !!,"    This task will send a MailMan message to you containing""RTN","SCMCTPU3",19,0) . W !,"    the results of the position assignment review.",!"RTN","SCMCTPU3",20,0) D PAUSE"RTN","SCMCTPU3",21,0)ENQ Q"RTN","SCMCTPU3",22,0) ;"RTN","SCMCTPU3",23,0)MODE() ; -- get mode from user (1 - diagnostic  2 - fix  0 - abort)"RTN","SCMCTPU3",24,0) Q 1  ; -- fix mode (2) is a future"RTN","SCMCTPU3",25,0) ;"RTN","SCMCTPU3",26,0)TEAM() ; -- get teams from user"RTN","SCMCTPU3",27,0) N Y,DIC,VAUTVB,VAUTSTR,VAUTINI"RTN","SCMCTPU3",28,0) S VAUTVB="SCTMLST""RTN","SCMCTPU3",29,0) S VAUTSTR="Team""RTN","SCMCTPU3",30,0) S VAUTNI=2"RTN","SCMCTPU3",31,0) S DIC="^SCTM(404.51,""RTN","SCMCTPU3",32,0) D FIRST^VAUTOMA"RTN","SCMCTPU3",33,0) Q $S(Y=-1:0,1:1)"RTN","SCMCTPU3",34,0) ;"RTN","SCMCTPU3",35,0)QUE() ; -- setup task and queue job to run"RTN","SCMCTPU3",36,0) ;D START Q 99999 ; -- for interactive testing"RTN","SCMCTPU3",37,0) N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTSK"RTN","SCMCTPU3",38,0) S ZTRTN="START^SCMCTPU3""RTN","SCMCTPU3",39,0) S ZTDESC="Patient Team Position Assignment Review""RTN","SCMCTPU3",40,0) S ZTDTH=$H"RTN","SCMCTPU3",41,0) S ZTIO="""RTN","SCMCTPU3",42,0) F X="SCTMLST(","SCTMLST","SCMODE" S ZTSAVE(X)="""RTN","SCMCTPU3",43,0) D ^%ZTLOAD"RTN","SCMCTPU3",44,0) Q $G(ZTSK)"RTN","SCMCTPU3",45,0) ;"RTN","SCMCTPU3",46,0)START ; -- entry point for queued job"RTN","SCMCTPU3",47,0) ;"RTN","SCMCTPU3",48,0) N SCSTOP,SCER,SCERTMP,SCNT"RTN","SCMCTPU3",49,0) N SCTP,SCTP0,SCTPNM"RTN","SCMCTPU3",50,0) N SCTM,SCTM0,SCTMNM"RTN","SCMCTPU3",51,0) N SCPT,SCPT0,SCPTNM,SCPTID"RTN","SCMCTPU3",52,0) N SCTPA,SCTPA0,SCTPASDT,SCTPUNDT"RTN","SCMCTPU3",53,0) N SCTMA,SCTMA0,SCTMASDT,SCTMUNDT"RTN","SCMCTPU3",54,0) ;"RTN","SCMCTPU3",55,0) S SCERTMP=$NA(^TMP("SCTP DANGLERS",$J))"RTN","SCMCTPU3",56,0) K @SCERTMP"RTN","SCMCTPU3",57,0) ;"RTN","SCMCTPU3",58,0) ; -- is 'all' teams selected build array"RTN","SCMCTPU3",59,0) IF SCTMLST=1 D"RTN","SCMCTPU3",60,0) . S SCTM=0"RTN","SCMCTPU3",61,0) . F  S SCTM=$O(^SCTM(404.51,SCTM)) Q:'SCTM  S X=$G(^SCTM(404.51,SCTM,0))  S SCTMLST(SCTM)=$P(X,U)"RTN","SCMCTPU3",62,0) ;"RTN","SCMCTPU3",63,0) ; -- loop through entire team position assignment file"RTN","SCMCTPU3",64,0) S (SCSTOP,SCTPA)=0"RTN","SCMCTPU3",65,0) F  S SCTPA=$O(^SCPT(404.43,SCTPA)) Q:'SCTPA  D  Q:SCSTOP"RTN","SCMCTPU3",66,0) . IF $$S^%ZTLOAD() S (SCSTOP,ZTSTOP)=1 Q"RTN","SCMCTPU3",67,0) . N SCERAR"RTN","SCMCTPU3",68,0) . ;"RTN","SCMCTPU3",69,0) . ; -- get data"RTN","SCMCTPU3",70,0) . D DATA(SCTPA)"RTN","SCMCTPU3",71,0) . ;"RTN","SCMCTPU3",72,0) . ; -- quit if team not selected by user"RTN","SCMCTPU3",73,0) . IF '$D(SCTMLST(SCTM)) Q"RTN","SCMCTPU3",74,0) . ;"RTN","SCMCTPU3",75,0) . D CNT("TOTAL")"RTN","SCMCTPU3",76,0) . ;"RTN","SCMCTPU3",77,0) . ; -- if postion assigned date    >= team assigned date"RTN","SCMCTPU3",78,0) . ;                    and"RTN","SCMCTPU3",79,0) . ;       position unassigned date <= team unassigned date"RTN","SCMCTPU3",80,0) . ;    then entry is good"RTN","SCMCTPU3",81,0) . ;"RTN","SCMCTPU3",82,0) . ;    else"RTN","SCMCTPU3",83,0) . ;        process error "RTN","SCMCTPU3",84,0) . ;"RTN","SCMCTPU3",85,0) . IF SCTPASDT>SCTMASDT!(SCTPASDT=SCTMASDT) D"RTN","SCMCTPU3",86,0) . . IF SCTPUNDT<SCTMUNDT!(SCTPUNDT=SCTMUNDT) D"RTN","SCMCTPU3",87,0) . . . D CNT("OK")"RTN","SCMCTPU3",88,0) . . . Q"RTN","SCMCTPU3",89,0) . . ; -- position unassign date > team unassign date"RTN","SCMCTPU3",90,0) . . ELSE  D"RTN","SCMCTPU3",91,0) . . . D ERR(2)"RTN","SCMCTPU3",92,0) . . . Q"RTN","SCMCTPU3",93,0) . . Q"RTN","SCMCTPU3",94,0) . ; -- position assign date < team assign date"RTN","SCMCTPU3",95,0) . ELSE  D "RTN","SCMCTPU3",96,0) . . D ERR(1)"RTN","SCMCTPU3",97,0) . . Q"RTN","SCMCTPU3",98,0) . ;"RTN","SCMCTPU3",99,0) . IF $O(SCERAR(0)) D CNT("BAD"),SET"RTN","SCMCTPU3",100,0) . ; -- check if user asked job to stop"RTN","SCMCTPU3",101,0) . Q"RTN","SCMCTPU3",102,0) ;"RTN","SCMCTPU3",103,0) IF 'SCSTOP D BULL^SCMCTPU4"RTN","SCMCTPU3",104,0) ;"RTN","SCMCTPU3",105,0) K @SCERTMP"RTN","SCMCTPU3",106,0) Q"RTN","SCMCTPU3",107,0) ;"RTN","SCMCTPU3",108,0)CNT(TYPE) ; -- set counter"RTN","SCMCTPU3",109,0) S SCNT(TYPE)=$G(SCNT(TYPE))+1"RTN","SCMCTPU3",110,0) Q"RTN","SCMCTPU3",111,0) ;"RTN","SCMCTPU3",112,0)ERR(NUMBER) ; -- set error array"RTN","SCMCTPU3",113,0) S SCERAR(NUMBER)="""RTN","SCMCTPU3",114,0) Q"RTN","SCMCTPU3",115,0) ;"RTN","SCMCTPU3",116,0)SET ; -- set tmp for report"RTN","SCMCTPU3",117,0) N SCER"RTN","SCMCTPU3",118,0) S SCER=0"RTN","SCMCTPU3",119,0) F  S SCER=$O(SCERAR(SCER)) Q:'SCER  D"RTN","SCMCTPU3",120,0) . S @SCERTMP@(SCTMNM_SCTM,SCTPNM_SCTP,SCPTNM_SCPT,SCTPASDT,SCTPA,SCER)="""RTN","SCMCTPU3",121,0) Q"RTN","SCMCTPU3",122,0) ;"RTN","SCMCTPU3",123,0)DATA(SCTPA) ; -- get team, position, tm pos assign, tm assignment & patient data"RTN","SCMCTPU3",124,0) ; input: SCPTA := ien to patient team position assignment (404.43)"RTN","SCMCTPU3",125,0) ;"RTN","SCMCTPU3",126,0) ; -- Team Position Assignment (TPA) data"RTN","SCMCTPU3",127,0) S SCTPA0=$G(^SCPT(404.43,SCTPA,0))"RTN","SCMCTPU3",128,0) S SCTPASDT=+$P(SCTPA0,U,3)"RTN","SCMCTPU3",129,0) S SCTPUNDT=$S($P(SCTPA0,U,4):$P(SCTPA0,U,4),1:9999999)"RTN","SCMCTPU3",130,0) ;"RTN","SCMCTPU3",131,0) ; -- Team Position (TP) data"RTN","SCMCTPU3",132,0) S SCTP=+$P(SCTPA0,U,2)"RTN","SCMCTPU3",133,0) S SCTP0=$G(^SCTM(404.57,SCTP,0))"RTN","SCMCTPU3",134,0) S SCTPNM=$P(SCTP0,U)"RTN","SCMCTPU3",135,0) ;"RTN","SCMCTPU3",136,0) ; -- TeaM Assignment (TMA) data"RTN","SCMCTPU3",137,0) S SCTMA=+SCTPA0"RTN","SCMCTPU3",138,0) S SCTMA0=$G(^SCPT(404.42,SCTMA,0))"RTN","SCMCTPU3",139,0) S SCTMASDT=+$P(SCTMA0,U,2)"RTN","SCMCTPU3",140,0) S SCTMUNDT=$S($P(SCTMA0,U,9):$P(SCTMA0,U,9),1:9999999)"RTN","SCMCTPU3",141,0) ;"RTN","SCMCTPU3",142,0) ; -- TeaM (TM) data"RTN","SCMCTPU3",143,0) S SCTM=+$P(SCTMA0,U,3)"RTN","SCMCTPU3",144,0) S SCTM0=$G(^SCTM(404.51,SCTM,0))"RTN","SCMCTPU3",145,0) S SCTMNM=$P(SCTM0,U)"RTN","SCMCTPU3",146,0) ;"RTN","SCMCTPU3",147,0) ; -- PaTient (PT) data"RTN","SCMCTPU3",148,0) S SCPT=+SCTMA0"RTN","SCMCTPU3",149,0) S SCPT0=$G(^DPT(SCPT,0))"RTN","SCMCTPU3",150,0) S SCPTNM=$P(SCPT0,U)"RTN","SCMCTPU3",151,0) N DFN,VA"RTN","SCMCTPU3",152,0) S DFN=SCPT D PID^VADPT6"RTN","SCMCTPU3",153,0) S SCPTID=VA("BID")"RTN","SCMCTPU3",154,0) Q"RTN","SCMCTPU3",155,0) ;"RTN","SCMCTPU3",156,0)PAUSE ; -- pause"RTN","SCMCTPU3",157,0) N DIR,Y"RTN","SCMCTPU3",158,0) S DIR(0)="EA""RTN","SCMCTPU3",159,0) S DIR("A")=">>> Press RETURN to continue: ""RTN","SCMCTPU3",160,0) D ^DIR"RTN","SCMCTPU3",161,0) Q"RTN","SCMCTPU4")0^46^B18591989"RTN","SCMCTPU4",1,0)SCMCTPU4 ;ALB/MJK - Team Position Dangler Bulletin ; 10-JUL-1998"RTN","SCMCTPU4",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCMCTPU4",3,0) ;"RTN","SCMCTPU4",4,0)BULL ; -- send bulletin (called from SCMCTPU3)"RTN","SCMCTPU4",5,0) N XMY,XMTEXT,XMSUB,XMDUZ,SCLCNT"RTN","SCMCTPU4",6,0) D INIT"RTN","SCMCTPU4",7,0) D TEXT"RTN","SCMCTPU4",8,0) IF 'SCSTOP D ^XMD"RTN","SCMCTPU4",9,0) D FINAL"RTN","SCMCTPU4",10,0) Q"RTN","SCMCTPU4",11,0) ;"RTN","SCMCTPU4",12,0)INIT ; -- set vars for bulletin"RTN","SCMCTPU4",13,0) N SCPCT"RTN","SCMCTPU4",14,0) S XMDUZ=.5"RTN","SCMCTPU4",15,0) S XMY($S($G(DUZ):DUZ,1:XMDUZ))="""RTN","SCMCTPU4",16,0) S XMSUB="Patient Team Position Assignment Review""RTN","SCMCTPU4",17,0) K ^TMP("SCTPTEXT",$J)"RTN","SCMCTPU4",18,0) S XMTEXT="^TMP(""SCTPTEXT"",$J,""RTN","SCMCTPU4",19,0) S SCLCNT=0"RTN","SCMCTPU4",20,0) S SCPCT="0.00""RTN","SCMCTPU4",21,0) IF $G(SCNT("TOTAL")) S SCPCT=(+$G(SCNT("BAD"))/+$G(SCNT("TOTAL")))*100"RTN","SCMCTPU4",22,0) ;"RTN","SCMCTPU4",23,0) ; -- summary info"RTN","SCMCTPU4",24,0) ;"RTN","SCMCTPU4",25,0) D SET("  In order to correct the following active positions with discharged team")"RTN","SCMCTPU4",26,0) D SET("assignments, please refer to the documentation for the Patient Team")"RTN","SCMCTPU4",27,0) D SET("Position Assignment Review option found in the Stand-alone Option")"RTN","SCMCTPU4",28,0) D SET("Section of the Scheduling User Manual PCMM Appendix.")"RTN","SCMCTPU4",29,0) D SET(" ")"RTN","SCMCTPU4",30,0) ;"RTN","SCMCTPU4",31,0) ;D SET(" ")"RTN","SCMCTPU4",32,0) ;D SET(" Mode: "_$S(SCMODE=1:"Diagnostic Only",1:"Fix"))"RTN","SCMCTPU4",33,0) ;"RTN","SCMCTPU4",34,0) ; -- show teams"RTN","SCMCTPU4",35,0) D SET("   Teams Reviewed: "_$S(SCTMLST=1:"All",1:""))"RTN","SCMCTPU4",36,0) IF SCTMLST=0 D"RTN","SCMCTPU4",37,0) . ; -- sort and set"RTN","SCMCTPU4",38,0) . N SCTMI,X"RTN","SCMCTPU4",39,0) . S SCTMI=0"RTN","SCMCTPU4",40,0) . F  S SCTMI=$O(SCTMLST(SCTMI)) Q:'SCTMI  S X(SCTMLST(SCTMI)_SCTMI)=SCTMLST(SCTMI)"RTN","SCMCTPU4",41,0) . S SCTMI="""RTN","SCMCTPU4",42,0) . F  S SCTMI=$O(X(SCTMI)) Q:SCTMI=""  D SET("       "_X(SCTMI))"RTN","SCMCTPU4",43,0) . D SET(" ")"RTN","SCMCTPU4",44,0) . Q"RTN","SCMCTPU4",45,0) ;"RTN","SCMCTPU4",46,0) D SET(" ")"RTN","SCMCTPU4",47,0) D SET("   Patient Team Position Assignments Reviewed: "_$J(+$G(SCNT("TOTAL")),6))"RTN","SCMCTPU4",48,0) D SET("   Number of Assignments with Problems       : "_$J(+$G(SCNT("BAD")),6)_"  ("_$J(SCPCT,6,2)_"%)")"RTN","SCMCTPU4",49,0) D SET(" ")"RTN","SCMCTPU4",50,0) D DASH("=")"RTN","SCMCTPU4",51,0) Q"RTN","SCMCTPU4",52,0) ;"RTN","SCMCTPU4",53,0)FINAL ; -- clean up"RTN","SCMCTPU4",54,0) K ^TMP("SCTPTEXT",$J)"RTN","SCMCTPU4",55,0) Q"RTN","SCMCTPU4",56,0) ;"RTN","SCMCTPU4",57,0)TEXT ; -- set of mm array"RTN","SCMCTPU4",58,0) N SCTMI,SCTPI,SCPTI,SCASDTI,SCPTAI"RTN","SCMCTPU4",59,0) ; "RTN","SCMCTPU4",60,0) ; -- sort is by team, position, patient, assign date, position assignment ien"RTN","SCMCTPU4",61,0) ;"RTN","SCMCTPU4",62,0) S SCSTOP=0"RTN","SCMCTPU4",63,0) S SCTMI="""RTN","SCMCTPU4",64,0) F  S SCTMI=$O(@SCERTMP@(SCTMI)) Q:SCTMI=""  D  Q:SCSTOP"RTN","SCMCTPU4",65,0) . S SCTPI="" F  S SCTPI=$O(@SCERTMP@(SCTMI,SCTPI)) Q:SCTPI=""  D"RTN","SCMCTPU4",66,0) . . S SCPTI="" F  S SCPTI=$O(@SCERTMP@(SCTMI,SCTPI,SCPTI)) Q:SCPTI=""  D"RTN","SCMCTPU4",67,0) . . . S SCASDTI=0 F  S SCASDTI=$O(@SCERTMP@(SCTMI,SCTPI,SCPTI,SCASDTI)) Q:'SCASDTI  D"RTN","SCMCTPU4",68,0) . . . . S SCTPAI=0 F  S SCTPAI=$O(@SCERTMP@(SCTMI,SCTPI,SCPTI,SCASDTI,SCTPAI)) Q:'SCTPAI  D PTA"RTN","SCMCTPU4",69,0) . ;"RTN","SCMCTPU4",70,0) . ; -- check if user asked job to stop"RTN","SCMCTPU4",71,0) . IF $$S^%ZTLOAD() S (SCSTOP,ZTSTOP)=1"RTN","SCMCTPU4",72,0) Q"RTN","SCMCTPU4",73,0) ;"RTN","SCMCTPU4",74,0)PTA ; -- process errors for team position assignment"RTN","SCMCTPU4",75,0) N SCTP,SCTP0,SCTPNM"RTN","SCMCTPU4",76,0) N SCTM,SCTM0,SCTMNM"RTN","SCMCTPU4",77,0) N SCPT,SCPT0,SCPTNM,SCPTID"RTN","SCMCTPU4",78,0) N SCTPA,SCTPA0,SCTPASDT,SCTPUNDT"RTN","SCMCTPU4",79,0) N SCTMA,SCTMA0,SCTMASDT,SCTMUNDT"RTN","SCMCTPU4",80,0) N SCER"RTN","SCMCTPU4",81,0) ; -- get data"RTN","SCMCTPU4",82,0) D DATA^SCMCTPU3(SCTPAI)"RTN","SCMCTPU4",83,0) ;"RTN","SCMCTPU4",84,0) ; -- set mm text"RTN","SCMCTPU4",85,0) D SET(" Team: "_SCTMNM_"              Position: "_SCTPNM)"RTN","SCMCTPU4",86,0) D SET("         Patient: "_SCPTNM_" ("_SCPTID_")")"RTN","SCMCTPU4",87,0) S SCER=0"RTN","SCMCTPU4",88,0) F  S SCER=$O(@SCERTMP@(SCTMI,SCTPI,SCPTI,SCASDTI,SCTPAI,SCER)) Q:'SCER  D"RTN","SCMCTPU4",89,0) . IF SCER=1 D"RTN","SCMCTPU4",90,0) . . D SET("           Error: Position Assigned Date is BEFORE Team Assigned Date")"RTN","SCMCTPU4",91,0) . . D SET("                    Position Assigned Date: "_$$FMTE^XLFDT($E(SCTPASDT,1,7),"5Z"))"RTN","SCMCTPU4",92,0) . . D SET("                        Team Assigned Date: "_$$FMTE^XLFDT($E(SCTMASDT,1,7),"5Z"))"RTN","SCMCTPU4",93,0) . ; "RTN","SCMCTPU4",94,0) . IF SCER=2 D"RTN","SCMCTPU4",95,0) . . D SET("           Error: Position Unassigned Date is AFTER Team Unassigned Date")"RTN","SCMCTPU4",96,0) . . D SET("                         Team Unassigned Date: "_$S(SCTMUNDT=9999999:"<none>",1:$$FMTE^XLFDT($E(SCTMUNDT,1,7),"5Z")))"RTN","SCMCTPU4",97,0) . . D SET("                     Position Unassigned Date: "_$S(SCTPUNDT=9999999:"<none>",1:$$FMTE^XLFDT($E(SCTPUNDT,1,7),"5Z")))"RTN","SCMCTPU4",98,0) . ; -- do fix if selected"RTN","SCMCTPU4",99,0) . IF SCMODE=2 D FIX"RTN","SCMCTPU4",100,0) D DASH()"RTN","SCMCTPU4",101,0) Q"RTN","SCMCTPU4",102,0) ;"RTN","SCMCTPU4",103,0)FIX ; -- fix team position assignment entry (future)"RTN","SCMCTPU4",104,0) Q"RTN","SCMCTPU4",105,0) ;"RTN","SCMCTPU4",106,0)SET(X) ;"RTN","SCMCTPU4",107,0) S SCLCNT=SCLCNT+1,^TMP("SCTPTEXT",$J,SCLCNT,0)=X"RTN","SCMCTPU4",108,0) Q"RTN","SCMCTPU4",109,0) ;"RTN","SCMCTPU4",110,0)DASH(CHAR) ; -- send line of CHAR"RTN","SCMCTPU4",111,0) N X"RTN","SCMCTPU4",112,0) S $P(X,$E($G(CHAR,"-")),78)="""RTN","SCMCTPU4",113,0) D SET(" "_X)"RTN","SCMCTPU4",114,0) Q"RTN","SCMCTPU4",115,0) ;"RTN","SCMRBK")0^35^B77742260"RTN","SCMRBK",1,0)SCMRBK  ;ALB/SCK - Broker Utilities for multiple patient reassignments; 4/8/96"RTN","SCMRBK",2,0) ;;5.3;Scheduling;**41,51,148**;AUG 13, 1993"RTN","SCMRBK",3,0) ;;1T1;"RTN","SCMRBK",4,0) ;"RTN","SCMRBK",5,0) Q"RTN","SCMRBK",6,0) ;"RTN","SCMRBK",7,0)PTGET(SCDATA,SC)        ;  Return a block of patients to the client"RTN","SCMRBK",8,0) ;     'SC GET PAT BLOCK'"RTN","SCMRBK",9,0) ;"RTN","SCMRBK",10,0) ;     SCJOB   = $J for the ^TMP global"RTN","SCMRBK",11,0) ;     SCJOBID = The second subscript id for the ^TMP global"RTN","SCMRBK",12,0) ;     SCSTART = Beginning entry number for the block retrieval in the ^TMP global"RTN","SCMRBK",13,0) ;     SCEND   = The ending entry number for the block retrieval"RTN","SCMRBK",14,0) ;     SCLAST  = The last entry number in the ^TMP global"RTN","SCMRBK",15,0) ;"RTN","SCMRBK",16,0) ; This RPC returns a list of patients from the temp global that was built by"RTN","SCMRBK",17,0) ; by the call to either SCMC BLD POS PAT LIST or SCMC BLD TEAM PAT LIST"RTN","SCMRBK",18,0) ;"RTN","SCMRBK",19,0) N SCJOB,SCSTART,SCEND,I,SCLAST,SCJOBID"RTN","SCMRBK",20,0) ;"RTN","SCMRBK",21,0) D CHK^SCUTBK"RTN","SCMRBK",22,0) D TMP^SCUTBK"RTN","SCMRBK",23,0) ;"RTN","SCMRBK",24,0) D PARSE^SCMCBK1(.SC)"RTN","SCMRBK",25,0) ;"RTN","SCMRBK",26,0) F I=SCSTART:1:SCEND Q:'$G(^TMP(SCJOB,SCJOBID,I),0)  D"RTN","SCMRBK",27,0) . S SCDATA(I)=^TMP(SCJOB,SCJOBID,I)"RTN","SCMRBK",28,0) I SCEND>SCLAST K ^TMP(SCJOB,SCJOBID)"RTN","SCMRBK",29,0) ;"RTN","SCMRBK",30,0) D CLRVAR^SCMCBK1"RTN","SCMRBK",31,0) Q"RTN","SCMRBK",32,0) ;"RTN","SCMRBK",33,0) ; This is invoked after the Save button is clicked in Patient reasignment-both team and pos"RTN","SCMRBK",34,0) ; RPC - SC BLD REASSIGN PAT LST"RTN","SCMRBK",35,0)PTLSTBLD(SCOK,SCVAL) ;  Build the list of patients to be assigned in the ^TMP($J,"SCPATIENT LIST",DFN) global"RTN","SCMRBK",36,0) ;  'SC BLD PAT LIST'"RTN","SCMRBK",37,0) ;"RTN","SCMRBK",38,0) N SCJOB,SCDFN"RTN","SCMRBK",39,0) ;"RTN","SCMRBK",40,0) D CHK^SCUTBK"RTN","SCMRBK",41,0) D TMP^SCUTBK"RTN","SCMRBK",42,0) ;"RTN","SCMRBK",43,0) S SCOK=0"RTN","SCMRBK",44,0) I SCVAL["Start" D  G PTBLDQ"RTN","SCMRBK",45,0) . S SCOK=$J"RTN","SCMRBK",46,0) . K ^TMP(SCOK,"SC PATIENT LIST")"RTN","SCMRBK",47,0) ; "RTN","SCMRBK",48,0) S SCJOB=$P(SCVAL,U,1)"RTN","SCMRBK",49,0) S SCDFN=$P(SCVAL,U,2)"RTN","SCMRBK",50,0) S ^TMP(SCJOB,"SC PATIENT LIST",SCDFN)=$P(SCVAL,U,3) ; equals assignment IEN (PDR)"RTN","SCMRBK",51,0) S SCOK=1"RTN","SCMRBK",52,0)PTBLDQ  ;"RTN","SCMRBK",53,0) Q"RTN","SCMRBK",54,0) ;"RTN","SCMRBK",55,0) ; This is invoked by RPC (SC FILE PAT TM REASGN) for team reasignment"RTN","SCMRBK",56,0) ;"RTN","SCMRBK",57,0)PTFILE(SCOK,SC) ;  File the patient assignments in the ^TMP($J,"SC TEAM ASSIGN",SCDFN) global"RTN","SCMRBK",58,0) ;    'SCMC FILE PAT TM REASGN'"RTN","SCMRBK",59,0) ;"RTN","SCMRBK",60,0) N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCDTVAR,SCOTH"RTN","SCMRBK",61,0) N ZTPRI,ZTRTN,ZTDESC,ZTDTH,SCNOW"RTN","SCMRBK",62,0) ;"RTN","SCMRBK",63,0) D CHK^SCUTBK"RTN","SCMRBK",64,0) D TMP^SCUTBK ; this sets up a DUZ=.5 and a DT of the current date"RTN","SCMRBK",65,0) D NOW^%DTC"RTN","SCMRBK",66,0) S SCNOW=% ; get actual FM date/time for enter/edit documentation"RTN","SCMRBK",67,0) ;"RTN","SCMRBK",68,0) D PARSE^SCMCBK1(.SC)"RTN","SCMRBK",69,0) G:+$G(SCJOB)=0 FILEQ"RTN","SCMRBK",70,0) ;"RTN","SCMRBK",71,0) ; Additional fields for 404.42 PATIENT TEAM ASSIGNMENT FILE"RTN","SCMRBK",72,0) S SCADDFLD(.08)=$G(SC("TYPE"),99)"RTN","SCMRBK",73,0) S SCADDFLD(.1)=$G(SC("RESTRICT"),0)"RTN","SCMRBK",74,0) ; note, the fields below are not appropriate if team is being activated or modified. Be sure"RTN","SCMRBK",75,0) ; to kill as necessary before filing, and to add edit by and edit D/T where necessary - PDR"RTN","SCMRBK",76,0) S SCADDFLD(.11)=DUZ ; user entering"RTN","SCMRBK",77,0) S SCADDFLD(.12)=SCNOW ; entry date/time (changed from =DT - PDR)"RTN","SCMRBK",78,0) ;"RTN","SCMRBK",79,0) I $G(SC("BKG"))="1" D  Q  ;Bail out to run in background"RTN","SCMRBK",80,0) . S ZTPRI=10"RTN","SCMRBK",81,0) . S ZTRTN="BKGTM^SCMRBK""RTN","SCMRBK",82,0) . S ZTDESC="PCMM TEAM REASIGN BKG""RTN","SCMRBK",83,0) . S ZTDTH=$H ; S $P(ZTDTH,",",2)=$P(ZTDTH,",",2)  ; schedule 5 min ahead for test"RTN","SCMRBK",84,0) . S ZTSAVE("SC*")="""RTN","SCMRBK",85,0) . S ZTSAVE("^TMP($J,")="""RTN","SCMRBK",86,0) . I '$G(SC("NOP")) D ^%ZTLOAD ; define NOP on GUI side if don't want BKG to run"RTN","SCMRBK",87,0) . S SCOK(0)=1_U_"BKG""RTN","SCMRBK",88,0) . S SCOK(.1)=$D(ZTSK)_U_"BKG"_U_$S($G(SC("NOP")):"NOP",1:"")"RTN","SCMRBK",89,0) ; "RTN","SCMRBK",90,0)BKGTM   ; Run Team Reassignment Filer in BKG"RTN","SCMRBK",91,0) I $D(ZTQUEUED) S SCJOB=$J  ; want to use Task Manager assigned $J if BKG"RTN","SCMRBK",92,0) S SCX=$$ACPTRATM^SCAPMR6("^TMP(SCJOB,""SC PATIENT LIST"")",SCTEAM,SCFRMTM,.SCOTH,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")"RTN","SCMRBK",93,0) I '$D(ZTQUEUED) D"RTN","SCMRBK",94,0) . D BAD^SCMCBK1(.SCBAD,.SCOLD,.SCOK) ; this sets up RPC return var SCOK for error report dialog"RTN","SCMRBK",95,0) . S SCOK(.1)=SCX_U_"FORE""RTN","SCMRBK",96,0) ;"RTN","SCMRBK",97,0) K ^TMP(SCJOB,"SC PATIENT LIST")"RTN","SCMRBK",98,0) D CLRVAR^SCMCBK1"RTN","SCMRBK",99,0) ;"RTN","SCMRBK",100,0)FILEQ   Q"RTN","SCMRBK",101,0) ;"RTN","SCMRBK",102,0) ; This is invoked by RPC ('SC FILE PAT POS REASGN') for position reasignment"RTN","SCMRBK",103,0)POSFILE(SCOK,SC)        ;  File the patient assignments in the ^TMP($J,"SC PATIENT LIST") global "RTN","SCMRBK",104,0) ;   ' SCMC FILE PAT POS REASGN '"RTN","SCMRBK",105,0) ;"RTN","SCMRBK",106,0) N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX"RTN","SCMRBK",107,0) N SCPOSTO,SCPOSFRM,SCDTVAR,SCMAFLD,SCADTM,SCNEW1,SCNOW"RTN","SCMRBK",108,0) ;"RTN","SCMRBK",109,0) D CHK^SCUTBK"RTN","SCMRBK",110,0) D TMP^SCUTBK"RTN","SCMRBK",111,0) D NOW^%DTC"RTN","SCMRBK",112,0) S SCNOW=% ; get current date/time for enter/edit documentation"RTN","SCMRBK",113,0) ;"RTN","SCMRBK",114,0) D PARSE^SCMCBK1(.SC)"RTN","SCMRBK",115,0) S SCPOSTO=SC("POSITION")"RTN","SCMRBK",116,0) S SCPOSFRM=SC("FROMPOSITION")"RTN","SCMRBK",117,0) G:+$G(SCJOB)=0 FILEQ"RTN","SCMRBK",118,0) S SCADTM=1"RTN","SCMRBK",119,0) ;"RTN","SCMRBK",120,0) S SCADDFLD(.05)=$G(SC("TYPE"),0)"RTN","SCMRBK",121,0) ; note, fields below are not appropriate for edits to existing positions. Be sure to remove"RTN","SCMRBK",122,0) ; where update or activation of future positions is done and to add edit user and edit D/T. - PDR"RTN","SCMRBK",123,0) S SCADDFLD(.06)=DUZ ; user entering"RTN","SCMRBK",124,0) S SCADDFLD(.07)=SCNOW ; date time entered (changed from = DT - pdr)"RTN","SCMRBK",125,0) ;"RTN","SCMRBK",126,0) I $G(SC("BKG"))="1" D  Q  ;Bail out to run in background"RTN","SCMRBK",127,0) . ;S ^TMP("PDR",$J,"BKG",$H)=SCJOB"RTN","SCMRBK",128,0) . S ZTPRI=10"RTN","SCMRBK",129,0) . S ZTRTN="BKGPOS^SCMRBK""RTN","SCMRBK",130,0) . S ZTDESC="PCMM POSITION REASIGN BKG""RTN","SCMRBK",131,0) . S ZTDTH=$H"RTN","SCMRBK",132,0) . S ZTSAVE("SC*")="""RTN","SCMRBK",133,0) . S ZTSAVE("^TMP($J,")="""RTN","SCMRBK",134,0) . I '$G(SC("NOP")) D ^%ZTLOAD ; define NOP on GUI side if don't want BKG to run"RTN","SCMRBK",135,0) . ;S ^TMP("PDR",$J,"TASK")=$G(ZTSK)"RTN","SCMRBK",136,0) . S SCOK(0)=1_U_"BKG""RTN","SCMRBK",137,0) . S SCOK(.1)=$G(ZTSK)_U_"BKG"_U_$S($G(SC("NOP")):"NOP",1:"")"RTN","SCMRBK",138,0)BKGPOS  ;   BACKGROUND JOB ENTRY POINT"RTN","SCMRBK",139,0) I $D(ZTQUEUED) S SCJOB=$J  ;  want to use Task Manager assigned $J if BKG"RTN","SCMRBK",140,0) S SCX=$$ACPTATP^SCAPMR21("^TMP(SCJOB,""SC PATIENT LIST"")",SCPOSTO,SCPOSFRM,"SCADDFLD",SCDTVAR,"SCERMSG",SCADTM,"","SCNEW","SCNEW1","SCOLD","SCBAD")"RTN","SCMRBK",141,0) ;"RTN","SCMRBK",142,0) ;S ^TMP("PDR",$J,"IN BKG")=SCX"RTN","SCMRBK",143,0) I '$D(ZTQUEUED) D"RTN","SCMRBK",144,0) . D BAD2^SCMCBK1(.SCBAD,.SCOLD,.SCOK) ; this sets up RPC return var SCOK for error report dialog"RTN","SCMRBK",145,0) . S SCOK(.1)=SCX_U_"FORE""RTN","SCMRBK",146,0) ;"RTN","SCMRBK",147,0) K ^TMP(SCJOB,"SC PATIENT LIST")"RTN","SCMRBK",148,0) D CLRVAR^SCMCBK1"RTN","SCMRBK",149,0) Q"RTN","SCMRBK",150,0) ;"RTN","SCMRBK",151,0)BLKPOS  ;"RTN","SCMRBK",152,0) N SCX"RTN","SCMRBK",153,0) S SCX=$G(SCDTRNG("END"))"RTN","SCMRBK",154,0) S SCDTRNG("END")=3990101 ;check forever"RTN","SCMRBK",155,0) S SCOK1=$$PTTP^SCAPMC(SCBLOCK,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")"RTN","SCMRBK",156,0) S SCDTRNG("END")=SCX"RTN","SCMRBK",157,0) Q"RTN","SCMRBK",158,0) ;"RTN","SCMRBK",159,0)BLKTM   ;"RTN","SCMRBK",160,0) N SCX"RTN","SCMRBK",161,0) S SCX=$G(SCDTRNG("END"))"RTN","SCMRBK",162,0) S SCDTRNG("END")=3990101 ;check forever"RTN","SCMRBK",163,0) S SCOK1=$$PTTM^SCAPMC(SCBLOCK,"SCDTRNG","^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")"RTN","SCMRBK",164,0) S SCDTRNG("END")=SCX"RTN","SCMRBK",165,0) Q"RTN","SCMRBK",166,0) ;"RTN","SCMRBK",167,0) ; This is used to get the patient list to fill the list box after team and position selection"RTN","SCMRBK",168,0) ;"RTN","SCMRBK",169,0)PTPOSLST(SCOK,SC)       ; Get a list of of patients for a team position"RTN","SCMRBK",170,0) ;  ' SC BLD PAT POS LIST '"RTN","SCMRBK",171,0) ;"RTN","SCMRBK",172,0) N PD,FD,TD,ASNST,FC"RTN","SCMRBK",173,0) D NEWVAR^SCMCBK1"RTN","SCMRBK",174,0) D CHK^SCUTBK"RTN","SCMRBK",175,0) D TMP^SCUTBK"RTN","SCMRBK",176,0) S FD=SC("FROMDATE")"RTN","SCMRBK",177,0) S TD=SC("TODATE")"RTN","SCMRBK",178,0) S ASNSTAT=SC("ASSIGNSTAT") ; 0=assigned only, 1=Discharged only, 2=both"RTN","SCMRBK",179,0) ;"RTN","SCMRBK",180,0) D PARSE^SCMCBK1(.SC)"RTN","SCMRBK",181,0) ;"RTN","SCMRBK",182,0) K ^TMP($J,"SCPOS")"RTN","SCMRBK",183,0) ;"RTN","SCMRBK",184,0) S SCOK=0"RTN","SCMRBK",185,0) ; This date setting could be accomplished on GUI using the .MULT[] broker array, and"RTN","SCMRBK",186,0) ; loaded into SCDTRNG via the call to parse. I've opted to set the array explicitly"RTN","SCMRBK",187,0) ; here."RTN","SCMRBK",188,0) S SCDTRNG("BEGIN")=FD"RTN","SCMRBK",189,0) S SCDTRNG("END")=TD"RTN","SCMRBK",190,0) S SCDTRNG("INCL")=0"RTN","SCMRBK",191,0) ; get list of pt active for time period specified"RTN","SCMRBK",192,0) ; future discharges included"RTN","SCMRBK",193,0) S SCOK=$$PTTP^SCAPMC11(SCFRMPOS,"SCDTRNG",.SCLOC,.SCERMSG)"RTN","SCMRBK",194,0) K ^TMP("SCMC",$J,"EXCLUDE PT")"RTN","SCMRBK",195,0) M ^TMP($J,"SC PCMM IN")=@SCLOC"RTN","SCMRBK",196,0) ;"RTN","SCMRBK",197,0) S I1=$G(^TMP($J,"SC PCMM IN",0))"RTN","SCMRBK",198,0) S FC=0 ; initialize filtered count of patients"RTN","SCMRBK",199,0) F I=1:1:I1 D"RTN","SCMRBK",200,0) . S PD=$G(^TMP($J,"SC PCMM IN",I)) ; get the discharge date"RTN","SCMRBK",201,0) . Q:$$FILTOUT(+$P(PD,U,5),+$P(PD,U,4))"RTN","SCMRBK",202,0) . S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))"RTN","SCMRBK",203,0) . S FC=FC+1"RTN","SCMRBK",204,0) D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCPOS"")")"RTN","SCMRBK",205,0) S SCOK=$J_U_FC_U_SCOK"RTN","SCMRBK",206,0) ;"RTN","SCMRBK",207,0) D CLRVAR^SCMCBK1"RTN","SCMRBK",208,0) Q"RTN","SCMRBK",209,0) ;"RTN","SCMRBK",210,0)FILTOUT(DD,AD)  ; FILTER OUT CANDIDATE PATIENTS"RTN","SCMRBK",211,0) ; Want actives only"RTN","SCMRBK",212,0) Q:ASNSTAT=0 ((DD)&(DD'>DT))!(AD>DT)  ; disch date before tomorrow, or assign date greater than today "RTN","SCMRBK",213,0) ; Want discharges between dates only"RTN","SCMRBK",214,0) Q:ASNSTAT=1 (DD>TD)!(DD<FD)  ; disch date is after TO date, or discharge date is before FROM date"RTN","SCMRBK",215,0) ; Want discharges and actives from date"RTN","SCMRBK",216,0) Q:ASNSTAT=2 (DD&(DD<FD))!(AD>DT)  ; disch date less than FROM date, or assign date > today"RTN","SCMRBK",217,0) Q 0  ; problem if get here"RTN","SCMRBK",218,0) ;"RTN","SCMRBK",219,0) ; "RTN","SCMRBK",220,0) ; This is used to get the patient list to fill the lsit box after a team selection"RTN","SCMRBK",221,0) ;"RTN","SCMRBK",222,0)PTTMLST(SCOK,SC)        ; ; Get a list of of patients for a team - FILTER FOR ACTIVE"RTN","SCMRBK",223,0) ;  ' SC BLD PAT TM LIST ' "RTN","SCMRBK",224,0) ;"RTN","SCMRBK",225,0) ;S ^TMP("PDR",$J)="HERE""RTN","SCMRBK",226,0) N TD,SCDD"RTN","SCMRBK",227,0) D NEWVAR^SCMCBK1"RTN","SCMRBK",228,0) D CHK^SCUTBK"RTN","SCMRBK",229,0) D TMP^SCUTBK"RTN","SCMRBK",230,0) ;"RTN","SCMRBK",231,0) D PARSE^SCMCBK1(.SC)"RTN","SCMRBK",232,0) K ^TMP($J,"SCTEAM")"RTN","SCMRBK",233,0) ;"RTN","SCMRBK",234,0) ;   Build exclude list"RTN","SCMRBK",235,0) S SCOK=0"RTN","SCMRBK",236,0) ;B  ;"RTN","SCMRBK",237,0) ; get list of patient team assignments ordered by q"RTN","SCMRBK",238,0) S SCOK=$$PTTM^SCAPMC2(SCFRMTM,"SCDTRNG",.SCLOC,"SCERMSG")  ; SCLOC = ^TMP("SCTMP LIST",$J)"RTN","SCMRBK",239,0) K ^TMP("SCMC",$J,"EXCLUDE PT")"RTN","SCMRBK",240,0) M ^TMP($J,"SC PCMM IN")=@SCLOC"RTN","SCMRBK",241,0) ;"RTN","SCMRBK",242,0) S I="""RTN","SCMRBK",243,0) F  S I=$O(^TMP($J,"SC PCMM IN",I)) Q:'I  D"RTN","SCMRBK",244,0) . S TD=^TMP($J,"SC PCMM IN",I)"RTN","SCMRBK",245,0) . S SCDD=$P(TD,U,5)"RTN","SCMRBK",246,0) . Q:(SCDD'="")&(SCDD'>DT)  ; filter discharged assignments"RTN","SCMRBK",247,0) . Q:$P(TD,U,4)>DT  ; filter future assignments"RTN","SCMRBK",248,0) . S ^TMP($J,"PCMM TMP",I)=^TMP($J,"SC PCMM IN",I)"RTN","SCMRBK",249,0) ;"RTN","SCMRBK",250,0) ; this apparently alphabetizes the list on the patient name, but still subscripted by queue "RTN","SCMRBK",251,0) D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCTEAM"")")"RTN","SCMRBK",252,0) ;"RTN","SCMRBK",253,0) S SCOK=$J_U_+$O(^TMP($J,"SCTEAM",""),-1)_U_SCOK"RTN","SCMRBK",254,0) ;"RTN","SCMRBK",255,0) D CLRVAR^SCMCBK1"RTN","SCMRBK",256,0) Q"RTN","SCMRBK",257,0) ;"RTN","SCMRBK",258,0)DISCHPOS(SCOK,SC)       ; DISCHARGE POSITIONS FOR A TEAM - RPC: PDR SC DIS TEAM POS"RTN","SCMRBK",259,0) ; SC("DFN") = ptr to patient file"RTN","SCMRBK",260,0) ; SC("TMASGN") = ptr to team assignment file 404.42"RTN","SCMRBK",261,0) ; SC("DATE") = file date (date selected on client)"RTN","SCMRBK",262,0) N SCBEGIN,SCEND,SCINCL,SCDATES,SCERR"RTN","SCMRBK",263,0) D CHK^SCUTBK"RTN","SCMRBK",264,0) D TMP^SCUTBK"RTN","SCMRBK",265,0) S SCOK=1"RTN","SCMRBK",266,0) S SCERR="SCERRMSG""RTN","SCMRBK",267,0) D DISCHPOS^SCRPMTA(SC("DFN"),SC("TMASGN"),SC("DATE"),SCERR)"RTN","SCMRBK",268,0) S SCOK='$D(@SCERR)"RTN","SCMRBK",269,0) Q"RTN","SCMRBK",270,0) ;"RTN","SCMRBK",271,0)CLRVAR  ;  Clear all parsing variables        "RTN","SCMRBK",272,0) ; Note: The call to CLRVAR^SCMCBK1 used $J to Kill temp globals. The value"RTN","SCMRBK",273,0) ;       of $J under %ZTLOAD is different than the $J under"RTN","SCMRBK",274,0) ;       which the temp globals were initially indexed. Also,"RTN","SCMRBK",275,0) ;       because this may be run in bkg, $J is nolonger sufficient to ensure"RTN","SCMRBK",276,0) ;       unique key for ^TMP"RTN","SCMRBK",277,0) K ^TMP(SCJOB,"SC PCMM IN")"RTN","SCMRBK",278,0) K ^TMP(SCJOB,"PCMM TMP")"RTN","SCMRBK",279,0) K ^TMP("SC TMP LIST",SCJOB)"RTN","SCMRBK",280,0) K ^TMP(SCJOB,"SC PATIENT LIST")"RTN","SCMRBK",281,0) ;"RTN","SCMRBK",282,0) K SCNUM,SCSCDE,SCCLN,SCJOBID,SCFILE,SCLAST,SCEND,SCSTART,SCJOB,SCDTRNG"RTN","SCMRBK",283,0) K SCDTVAR,SCPOS,SCTEAM,SCFRMTM,SCFRMPOS,SCDFN,BLOCK,SCBLOCK,SCX,SUBRTN"RTN","SCMRBK",284,0) K SCTMP,SCBAD,SCOLD,SCNEW"RTN","SCMRBK",285,0) Q"RTN","SCMRTMM")0^36^B15022517"RTN","SCMRTMM",1,0)SCMRTMM ;ALB/REW/PDR - Patient Team Multiple Reasssignment MailMessages ; 17 JUL 98"RTN","SCMRTMM",2,0) ;;5.3;Scheduling;**41,45,87,100,130,148**;AUG 13, 1993"RTN","SCMRTMM",3,0) ;1"RTN","SCMRTMM",4,0)SETLN(TEXT) ;"RTN","SCMRTMM",5,0) Q:$G(TEXT)="""RTN","SCMRTMM",6,0) ; increments SCLNCNT, adds text to sctmxm(sclncnt)"RTN","SCMRTMM",7,0) S SCLNCNT=SCLNCNT+1"RTN","SCMRTMM",8,0) S ^TMP($J,"SCTMXM",SCLNCNT)=TEXT"RTN","SCMRTMM",9,0) Q"RTN","SCMRTMM",10,0) ;"RTN","SCMRTMM",11,0)TEXT(SCFILE,SCNODE,SCPC,SCSPACE,SCLAB) ;returns fldname & external value"RTN","SCMRTMM",12,0) ;returns fldname & external value"RTN","SCMRTMM",13,0) ;   Note- Only works for non wp fields of standard numbering conventions"RTN","SCMRTMM",14,0) ;   SCFLILE =FILENUM"RTN","SCMRTMM",15,0) ;   SCNODE  = 0 NODE"RTN","SCMRTMM",16,0) ;   SCPC    = piece of node"RTN","SCMRTMM",17,0) ;   SCSPACE = 80 SPACES"RTN","SCMRTMM",18,0) ;   SCLAB = 1 if print field name"RTN","SCMRTMM",19,0) N SCX,SCINT,SCFLD"RTN","SCMRTMM",20,0) S SCX="""RTN","SCMRTMM",21,0) S SCINT=$P(SCNODE,U,SCPC)"RTN","SCMRTMM",22,0) G:SCINT="" QTTXT"RTN","SCMRTMM",23,0) S SCFLD=SCPC*.01"RTN","SCMRTMM",24,0) ;;;"RTN","SCMRTMM",25,0) IF $G(SCLAB) D"RTN","SCMRTMM",26,0) . S SCX=$$DDNAME(SCFILE,SCFLD)_":""RTN","SCMRTMM",27,0) . S:$G(SCLAB)=1 SCX=SCX_$E(SCSPACE,1,(23-$L(SCX)))"RTN","SCMRTMM",28,0) . S:$G(SCLAB)=2 SCX=SCX_$E(SCSPACE,1,(50-$L(SCX)))"RTN","SCMRTMM",29,0) S:SCINT]"" SCX=SCX_$$EXTERNAL^DILFD(SCFILE,SCFLD,"",SCINT)"RTN","SCMRTMM",30,0)QTTXT Q SCX"RTN","SCMRTMM",31,0) ;"RTN","SCMRTMM",32,0)DDNAME(FILE,FIELD) ;return the fieldname"RTN","SCMRTMM",33,0) N SCX"RTN","SCMRTMM",34,0) D FIELD^DID(FILE,FIELD,"","LABEL","SCX")"RTN","SCMRTMM",35,0) Q $G(SCX("LABEL"))"RTN","SCMRTMM",36,0) ;"RTN","SCMRTMM",37,0)MAILLST(SCTM,SCFIELDA,SCDATE,SCBADTM) ; Reports only reassignment failures"RTN","SCMRTMM",38,0) ; Input:"RTN","SCMRTMM",39,0) ;    SCTM     - Pointer to Team File (#404.51)"RTN","SCMRTMM",40,0) ;    SCFIELDA - Field array with internal values"RTN","SCMRTMM",41,0) ;    SCDATE   - Effective Date"RTN","SCMRTMM",42,0) ;    SCBADTM  - DFN array of patients unassignable to team"RTN","SCMRTMM",43,0) ;"RTN","SCMRTMM",44,0) G:$G(SCNOMAIL) QTMULT  ;- flag can be set to stop message generation"RTN","SCMRTMM",45,0) G:'$S('$D(SCBADTM):0,1:$O(@SCBADTM@(0))) QTMULT  ; bail out if nothing to print"RTN","SCMRTMM",46,0) N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,ZTQUEUED"RTN","SCMRTMM",47,0) N SCTMNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE,SCE,SCB,SCTMDT,SCDELTEM"RTN","SCMRTMM",48,0) S ZTQUEUED=1"RTN","SCMRTMM",49,0) S SCDELTEM=1 ;ok to delete tmp global"RTN","SCMRTMM",50,0) IF $D(SCFIELDA) D"RTN","SCMRTMM",51,0) . IF $D(SCFIELDA(.02)) S SCB=SCFIELDA(.02)"RTN","SCMRTMM",52,0) . IF $D(SCFIELDA(.09)) S SCE=SCFIELDA(.09)"RTN","SCMRTMM",53,0) S SCB=$G(SCB,DT)"RTN","SCMRTMM",54,0) S SCE=$G(SCE,DT)"RTN","SCMRTMM",55,0) S $P(SCSPACE," ",80)="""RTN","SCMRTMM",56,0) S SCTMDT("BEGIN")=$S(SCB<SCDATE:SCB,1:SCDATE)"RTN","SCMRTMM",57,0) S SCTMDT("END")=$S(SCE>SCDATE:SCE,1:SCDATE)"RTN","SCMRTMM",58,0) S SCTMDT("INCL")=0"RTN","SCMRTMM",59,0) S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)"RTN","SCMRTMM",60,0) S XMSUB="Multiple PATIENT-TEAM REASSIGNMENT FAILURES for "_SCTMNM,XMTEXT="^TMP($J,""SCTMXM"",",SCLNCNT=0"RTN","SCMRTMM",61,0) D:'$G(DGQUIET) EN^DDIOL("Sending Multiple Patient-Team Reassignment Failures Message")"RTN","SCMRTMM",62,0) S SCOK=1"RTN","SCMRTMM",63,0) S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)"RTN","SCMRTMM",64,0) D SETLN("Team:                  "_SCTMNM)"RTN","SCMRTMM",65,0) S Y=SCDATE X ^DD("DD")"RTN","SCMRTMM",66,0) D SETLN("Effective Date:        "_Y)"RTN","SCMRTMM",67,0) D SETLN(" ")"RTN","SCMRTMM",68,0) IF $D(SCFIELDA) D"RTN","SCMRTMM",69,0) . F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D"RTN","SCMRTMM",70,0) .. S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)"RTN","SCMRTMM",71,0) .. D SETLN($$TEXT(404.42,SCNODE,SCNDX,SCSPACE,1))"RTN","SCMRTMM",72,0) D SETLN(" ")"RTN","SCMRTMM",73,0)BAD ; Guts of message"RTN","SCMRTMM",74,0) D SETLN(" ")"RTN","SCMRTMM",75,0) D SETLN("There has been NO new team reassignment for the following patients:")"RTN","SCMRTMM",76,0) S DFN=0"RTN","SCMRTMM",77,0) F  S DFN=$O(@SCBADTM@(DFN)) Q:'DFN  D"RTN","SCMRTMM",78,0) . ;;;S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTMDT",0) SCOK=0"RTN","SCMRTMM",79,0) . S SCPTNM=$P(^DPT(DFN,0),U,1)"RTN","SCMRTMM",80,0) . D PID^VADPT6"RTN","SCMRTMM",81,0) . S ^TMP("SCTM MAIL LST",$J,SCTM,2,DFN)=(" "_SCPTNM_" ("_$G(VA("PID"))_")")_":""RTN","SCMRTMM",82,0) . S ^TMP("SCTM MAIL LST",$J,SCTM,3,DFN)=" "_@SCBADTM@(DFN)"RTN","SCMRTMM",83,0) . S ^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM,DFN)="""RTN","SCMRTMM",84,0) S SCPTNM="""RTN","SCMRTMM",85,0) F  S SCPTNM=$O(^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM)) Q:SCPTNM']""  D"RTN","SCMRTMM",86,0) . S DFN=0"RTN","SCMRTMM",87,0) . F  S DFN=$O(^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM,DFN)) Q:'DFN  D"RTN","SCMRTMM",88,0) .. S SCDETAIL=$G(^TMP("SCTM MAIL LST",$J,SCTM,2,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)"RTN","SCMRTMM",89,0) .. S SCDETAIL=$G(^TMP("SCTM MAIL LST",$J,SCTM,3,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)"RTN","SCMRTMM",90,0) S XMDUZ="PCMM Reassignment""RTN","SCMRTMM",91,0) K XMY S XMY(DUZ)="""RTN","SCMRTMM",92,0) D ^XMD"RTN","SCMRTMM",93,0)QTMULT ;"RTN","SCMRTMM",94,0) K:$G(SCDELTEM) ^TMP("SCTM MAIL LST",$J,SCTM)"RTN","SCMRTMM",95,0) K ^TMP($J,"SCTMXM")"RTN","SCMRTMM",96,0) Q"RTN","SCMRTPM")0^38^B14251469"RTN","SCMRTPM",1,0)SCMRTPM ;ALB/REW/PDR - Patient Position Changes MailMessages ; 26 Mar 1996"RTN","SCMRTPM",2,0) ;;5.3;Scheduling;**41,45,48,87,100,130,148**;AUG 13, 1993"RTN","SCMRTPM",3,0) ;1"RTN","SCMRTPM",4,0) ;"RTN","SCMRTPM",5,0)MAILLST(SCTP,SCFIELDA,SCDATE,SCBADTP)   ;"RTN","SCMRTPM",6,0) ; Input:"RTN","SCMRTPM",7,0) ;    SCTP     - Pointer to Team Position File (#404.57)"RTN","SCMRTPM",8,0) ;    SCFIELDA - Field array with internal values"RTN","SCMRTPM",9,0) ;    SCDATE   - Effective Date"RTN","SCMRTPM",10,0) ;    SCBADTP  - DFN array of patients unassignable to position"RTN","SCMRTPM",11,0) ;"RTN","SCMRTPM",12,0) G:$G(SCNOMAIL) QTMULT  ;- flag can be set to stop message generation"RTN","SCMRTPM",13,0) G:'$D(SCBADTP) QTMULT"RTN","SCMRTPM",14,0) G:'$O(@SCBADTP@(0)) QTMULT  ;if no BAD REassignments"RTN","SCMRTPM",15,0) N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,SCTPDT,ZTQUEUED"RTN","SCMRTPM",16,0) N SCTPNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE,SCE,SCB,SCTMNM,SCDELTEM,SCDETAIL"RTN","SCMRTPM",17,0) S ZTQUEUED=1"RTN","SCMRTPM",18,0) S SCDELTEM=1 ;ok to delete tmp global"RTN","SCMRTPM",19,0) IF $D(SCFIELDA) D"RTN","SCMRTPM",20,0) .IF $D(SCFIELDA(.03)) S SCB=SCFIELDA(.03)"RTN","SCMRTPM",21,0) .IF $D(SCFIELDA(.04)) S SCE=SCFIELDA(.04)"RTN","SCMRTPM",22,0) S SCB=$G(SCB,DT)"RTN","SCMRTPM",23,0) S SCE=$G(SCE,DT)"RTN","SCMRTPM",24,0) S $P(SCSPACE," ",80)="""RTN","SCMRTPM",25,0) S SCTPDT("BEGIN")=$S(SCB<SCDATE:SCB,1:SCDATE)"RTN","SCMRTPM",26,0) S SCTPDT("END")=$S(SCE>SCDATE:SCE,1:SCDATE)"RTN","SCMRTPM",27,0) S SCTPDT("INCL")=0"RTN","SCMRTPM",28,0) S SCTPNM=$P($G(^SCTM(404.57,+SCTP,0)),U,1)"RTN","SCMRTPM",29,0) S XMSUB="Multiple PATIENT-POSITION REASSIGNMENT for "_SCTPNM,XMTEXT="^TMP($J,""SCTPXM"",",SCLNCNT=0"RTN","SCMRTPM",30,0) D:'$G(DGQUIET) EN^DDIOL("Sending Multiple Patient-Position Reassignment Message")"RTN","SCMRTPM",31,0) S SCOK=1"RTN","SCMRTPM",32,0) S SCTPNM=$P($G(^SCTM(404.57,+SCTP,0)),U,1)"RTN","SCMRTPM",33,0) S SCTMNM=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+SCTP,0)),U,2),0)),U,1)"RTN","SCMRTPM",34,0) D SETLN("Team:                  "_SCTMNM)"RTN","SCMRTPM",35,0) D SETLN("Position:              "_SCTPNM)"RTN","SCMRTPM",36,0) S Y=SCDATE X ^DD("DD")"RTN","SCMRTPM",37,0) D SETLN("Effective Date:        "_Y)"RTN","SCMRTPM",38,0) D SETLN(" ")"RTN","SCMRTPM",39,0) IF $D(SCFIELDA) D"RTN","SCMRTPM",40,0) .F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D"RTN","SCMRTPM",41,0) ..S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)"RTN","SCMRTPM",42,0) ..D SETLN($$TEXT(404.43,SCNODE,SCNDX,SCSPACE,1))"RTN","SCMRTPM",43,0) D SETLN(" ")"RTN","SCMRTPM",44,0)BAD IF $O(@SCBADTP@(0)) D"RTN","SCMRTPM",45,0) .D SETLN(" ")"RTN","SCMRTPM",46,0) .D SETLN("There has been NO new position reassignment for the following patients:")"RTN","SCMRTPM",47,0) .S DFN=0"RTN","SCMRTPM",48,0) .F  S DFN=$O(@SCBADTP@(DFN)) Q:'DFN  D"RTN","SCMRTPM",49,0) ..;;;S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTPDT",0) SCOK=0"RTN","SCMRTPM",50,0) ..S SCPTNM=$P(^DPT(DFN,0),U,1)"RTN","SCMRTPM",51,0) ..D PID^VADPT6"RTN","SCMRTPM",52,0) ..S ^TMP("SCTP MAIL LST",$J,SCTP,2,DFN)=(" "_SCPTNM_" ("_$G(VA("PID"))_")")"RTN","SCMRTPM",53,0) ..S ^TMP("SCTP MAIL LST",$J,SCTP,3,DFN)=" "_@SCBADTP@(DFN)"RTN","SCMRTPM",54,0) ..S ^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM,DFN)="""RTN","SCMRTPM",55,0) .S SCPTNM="""RTN","SCMRTPM",56,0) .F  S SCPTNM=$O(^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM)) Q:SCPTNM']""  D"RTN","SCMRTPM",57,0) ..S DFN=0"RTN","SCMRTPM",58,0) ..F  S DFN=$O(^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM,DFN)) Q:'DFN  D"RTN","SCMRTPM",59,0) ...S SCDETAIL=$G(^TMP("SCTP MAIL LST",$J,SCTP,2,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)"RTN","SCMRTPM",60,0) ...S SCDETAIL=$G(^TMP("SCTP MAIL LST",$J,SCTP,3,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)"RTN","SCMRTPM",61,0) S XMDUZ="PCMM Reassignment""RTN","SCMRTPM",62,0) K XMY S XMY(DUZ)="""RTN","SCMRTPM",63,0) D ^XMD"RTN","SCMRTPM",64,0)QTMULT  K:$G(SCDELTEM) ^TMP("SCTP MAIL LST",$J,SCTP)"RTN","SCMRTPM",65,0) K ^TMP($J,"SCTPXM")"RTN","SCMRTPM",66,0) Q"RTN","SCMRTPM",67,0) ;"RTN","SCMRTPM",68,0) ;----------------------------- subs ------------------------------------"RTN","SCMRTPM",69,0) ;"RTN","SCMRTPM",70,0)SETLN(TEXT)     ;"RTN","SCMRTPM",71,0) Q:$G(TEXT)="""RTN","SCMRTPM",72,0) ; increments SCLNCNT, adds text to scTPxm(sclncnt)"RTN","SCMRTPM",73,0) S SCLNCNT=SCLNCNT+1"RTN","SCMRTPM",74,0) S ^TMP($J,"SCTPXM",SCLNCNT)=TEXT"RTN","SCMRTPM",75,0) Q"RTN","SCMRTPM",76,0) ;"RTN","SCMRTPM",77,0)TEXT(SCFILE,SCNODE,SCPC,SCSPACE,SCLAB)  ;returns fldname & external value"RTN","SCMRTPM",78,0) ;returns fldname & external value"RTN","SCMRTPM",79,0) ;   Note- Only works for non wp fields of standard numbering conventions"RTN","SCMRTPM",80,0) ;   SCFLILE =FILENUM"RTN","SCMRTPM",81,0) ;   SCNODE  = 0 NODE"RTN","SCMRTPM",82,0) ;   SCPC    = piece of node"RTN","SCMRTPM",83,0) ;   SCSPACE = 80 SPACES"RTN","SCMRTPM",84,0) ;   SCLAB = 1 if print field name"RTN","SCMRTPM",85,0) N SCX,SCINT,SCFLD"RTN","SCMRTPM",86,0) S SCX="""RTN","SCMRTPM",87,0) S SCINT=$P(SCNODE,U,SCPC)"RTN","SCMRTPM",88,0) G:SCINT="" QTTXT"RTN","SCMRTPM",89,0) S SCFLD=SCPC*.01"RTN","SCMRTPM",90,0) ;;;"RTN","SCMRTPM",91,0) IF $G(SCLAB) D"RTN","SCMRTPM",92,0) .S SCX=$$DDNAME^SCMCRU(SCFILE,SCFLD)_":""RTN","SCMRTPM",93,0) .S:$G(SCLAB)=1 SCX=SCX_$E(SCSPACE,1,(27-$L(SCX)))"RTN","SCMRTPM",94,0) .S:$G(SCLAB)=2 SCX=SCX_$E(SCSPACE,1,(52-$L(SCX)))"RTN","SCMRTPM",95,0) S:SCINT]"" SCX=SCX_$$EXTERNAL^DILFD(SCFILE,SCFLD,"",SCINT)"RTN","SCMRTPM",96,0)QTTXT   Q SCX"RTN","SCMRTPM",97,0) ;"RTN","SCMRTPM",98,0)DDNAME(FILE,FIELD)      ;return the fieldname"RTN","SCMRTPM",99,0) N SCX"RTN","SCMRTPM",100,0) D FIELD^DID(FILE,FIELD,"","LABEL","SCX")"RTN","SCMRTPM",101,0) Q $G(SCX("LABEL"))"RTN","SCRPM21U")0^42^B63452196"RTN","SCRPM21U",1,0)SCRPM21U        ;ALB/PDR - POSITION REASSIGNMENT UTILITIES ; AUG 1998"RTN","SCRPM21U",2,0) ;;5.3;**148**;Scheduling;Aug 13, 1993"RTN","SCRPM21U",3,0) ;;1.0"RTN","SCRPM21U",4,0) ; SUBROUTINES FOR POSITION REASIGNMENT"RTN","SCRPM21U",5,0) ;"RTN","SCRPM21U",6,0)PREVDAY(DAY)    ; GET PREVIOUS DAY"RTN","SCRPM21U",7,0) ; DAY = DATE IN FILEMAN FORMAT"RTN","SCRPM21U",8,0) N X,X1,X2"RTN","SCRPM21U",9,0) S X1=DAY,X2=-1"RTN","SCRPM21U",10,0) D C^%DTC"RTN","SCRPM21U",11,0) Q X"RTN","SCRPM21U",12,0) ;"RTN","SCRPM21U",13,0)PCPCASN(FASIEN,SCTP)    ; IS THIS A PRIMARY CARE to PRIMARY CARE ASSIGNMENT?"RTN","SCRPM21U",14,0) ; FASIEN = Pointer to source Position assignment SCPT(404.43)"RTN","SCRPM21U",15,0) ; SCTP   = Destination position pointer to Position DEF file SCTM(404.57)"RTN","SCRPM21U",16,0) N SPPC,DPPC,STPC,SCST"RTN","SCRPM21U",17,0) ; Exclude the case where source and destination teams for the assignment are"RTN","SCRPM21U",18,0) ; the same. If the teams are the same, don't have to worry about multiple"RTN","SCRPM21U",19,0) ; PC assignemnts for the patient; thus no need to use the scorched earth tactic"RTN","SCRPM21U",20,0) ; of discharging all position assignments on the source PC team."RTN","SCRPM21U",21,0) ;"RTN","SCRPM21U",22,0) S SCST=$P($G(^SCPT(404.43,FASIEN,0)),U,2) ; pointer to position DEF file"RTN","SCRPM21U",23,0) S SCST=$P($G(^SCTM(404.57,SCST,0)),U,2) ; pointer to team DEF file"RTN","SCRPM21U",24,0) I SCST="" Q 0  ; this is really an error condition"RTN","SCRPM21U",25,0) I SCST=$P($G(^SCTM(404.57,SCTP,0)),U,2) Q 0  ; source and dest teams are the same"RTN","SCRPM21U",26,0) ;"RTN","SCRPM21U",27,0) ; Both source and destination positions are (or will be) primary care."RTN","SCRPM21U",28,0) ; This is an exceptional reassignment condition. It requires discharging all positions"RTN","SCRPM21U",29,0) ; from the source team, and discharging the team. This is to prevent the  occurence of"RTN","SCRPM21U",30,0) ; more than 1 PC team for a patient"RTN","SCRPM21U",31,0) ;"RTN","SCRPM21U",32,0) ; test source position is a pc position, and the new position is too"RTN","SCRPM21U",33,0) S SPPC=$P($G(^SCPT(404.43,FASIEN,0)),U,5)>0 ; source position is primary care"RTN","SCRPM21U",34,0) S DPPC=@SCFIELDA@(.05)>0 ; destination position is primary care"RTN","SCRPM21U",35,0) S STPC=$$GETPOSTM(FASIEN)"RTN","SCRPM21U",36,0) S STPC=$P($G(^SCPT(404.42,STPC,0)),U,8)=1 ; source team is primary care"RTN","SCRPM21U",37,0) ; if source pos and dest pos are PC OR source team and dest pos are PC then is a pc to pc assignment"RTN","SCRPM21U",38,0) ; (theoretically could just perform the latter test)"RTN","SCRPM21U",39,0) Q (SPPC&DPPC)!(STPC&DPPC)"RTN","SCRPM21U",40,0) ;"RTN","SCRPM21U",41,0)UPDATPOS(POSAIEN,SCERR) ; UPDATE EXISTING POSITION ASSIGNMENT PARAMETERS, AND ENSURE NO FUTURE DISCHARGE"RTN","SCRPM21U",42,0) N SC,SCFLD,ENTFLD"RTN","SCRPM21U",43,0) S ENTFLD=",.06,.07,""RTN","SCRPM21U",44,0) S SC($J,404.43,(+POSAIEN)_",",.08)=DUZ ; last edited by"RTN","SCRPM21U",45,0) S SC($J,404.43,(+POSAIEN)_",",.09)=SCNOW ; last edit date/time"RTN","SCRPM21U",46,0) S SC($J,404.43,(+POSAIEN)_",",.03)=SCACT ; set new activity date for existing position assgn"RTN","SCRPM21U",47,0) S SC($J,404.43,(+POSAIEN)_",",.04)="" ; ensure no future discharge"RTN","SCRPM21U",48,0) IF $D(SCFIELDA) D"RTN","SCRPM21U",49,0) . S SCFLD=0"RTN","SCRPM21U",50,0) . F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCRPM21U",51,0) .. Q:ENTFLD[","_SCFLD_","  ; don't want ENTRY user and ENTRY date time for edit"RTN","SCRPM21U",52,0) .. S SC($J,404.43,(+POSAIEN)_",",SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCRPM21U",53,0) D FILE^DIE("","SC($J)",SCERR) ; update position assignment paramaeters"RTN","SCRPM21U",54,0) I $D(@SCERR) S POSAIEN=0_U_POSAIEN"RTN","SCRPM21U",55,0) Q"RTN","SCRPM21U",56,0) ;"RTN","SCRPM21U",57,0)TMEXIST(DFN,SCTM,SCSD,TMAIEN) ; IS THERE AN EXISTING TEAM ASSIGNMENT FOR THE DESTINATION TEAM?"RTN","SCRPM21U",58,0) ; conserve the IEN of the destination team assignment if it already exists"RTN","SCRPM21U",59,0) ; This will find current or future assignments, and future discharges"RTN","SCRPM21U",60,0) N SCACT,SCINACT,SCDT,SCVAL,DUN"RTN","SCRPM21U",61,0) S (SCACT,DUN)="""RTN","SCRPM21U",62,0) ; find the first active or future assignment"RTN","SCRPM21U",63,0) S TMAIEN=0"RTN","SCRPM21U",64,0) F  S SCACT=$O(^SCPT(404.42,"AIDT",DFN,SCTM,SCACT)) Q:SCACT=""  D  Q:DUN"RTN","SCRPM21U",65,0) . S TMAIEN="""RTN","SCRPM21U",66,0) . F  S TMAIEN=$O(^SCPT(404.42,"AIDT",DFN,SCTM,SCACT,TMAIEN)) Q:TMAIEN=""  D  Q:DUN"RTN","SCRPM21U",67,0) .. S SCVAL=$G(^SCPT(404.42,TMAIEN,0))"RTN","SCRPM21U",68,0) .. S SCINACT=$P(SCVAL,U,9)"RTN","SCRPM21U",69,0) .. I (SCINACT="")!(SCINACT>-SCACT) S DUN=1  ; 1st active or future discharge"RTN","SCRPM21U",70,0) S TMAIEN=+TMAIEN"RTN","SCRPM21U",71,0) Q +DUN"RTN","SCRPM21U",72,0) ;"RTN","SCRPM21U",73,0)DELPOS(DISIEN,POSAIEN)  ; DELETE a position"RTN","SCRPM21U",74,0) ; DISIEN = SOURCE POSITION TO DISCHARGE"RTN","SCRPM21U",75,0) ; POSAIEN = CURRENT DESTINATION POSITION IEN - USED JUST AS AN ERROR INDICATOR HERE"RTN","SCRPM21U",76,0) S DIK="^SCPT(404.43,""RTN","SCRPM21U",77,0) S DA=DISIEN"RTN","SCRPM21U",78,0) ;"RTN","SCRPM21U",79,0) IF DIK]"",$D(@(DIK_DA_",0)")) D ^DIK"RTN","SCRPM21U",80,0) E  S POSAIEN=0_U_POSAIEN"RTN","SCRPM21U",81,0) Q"RTN","SCRPM21U",82,0) ;"RTN","SCRPM21U",83,0)DISPOS(DISIEN,POSAIEN)  ; DISCHARGE a position"RTN","SCRPM21U",84,0) ; DISIEN = SOURCE POSITION TO DISCHARGE"RTN","SCRPM21U",85,0) ; POSAIEN = CURRENT DESTINATION POSITION IEN - USED JUST AS AN ERROR INDICATOR HERE"RTN","SCRPM21U",86,0) N DISDAT"RTN","SCRPM21U",87,0) S DISDAT=SCACT  ; init discharge date"RTN","SCRPM21U",88,0) ; discharge for previous day if assignment date prior to today"RTN","SCRPM21U",89,0) I $P($G(^SCPT(404.43,DISIEN,0)),U,3)'>$$PREVDAY(SCACT) S DISDAT=$$PREVDAY(SCACT)"RTN","SCRPM21U",90,0) S STEC=$$INPTTP^SCAPMC(DFN,DISIEN,DISDAT,SCERR)"RTN","SCRPM21U",91,0) I 'STEC S POSAIEN=0_U_POSAIEN"RTN","SCRPM21U",92,0) Q"RTN","SCRPM21U",93,0) ;"RTN","SCRPM21U",94,0)CREATPOS(POSAIEN,TMAIEN)        ; CREATE A POSITION"RTN","SCRPM21U",95,0) S POSAIEN="" ; initialize position IEN"RTN","SCRPM21U",96,0) IF $D(SCFIELDA) D"RTN","SCRPM21U",97,0) . S SCFLD=0"RTN","SCRPM21U",98,0) . F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCRPM21U",99,0) .. S SC($J,404.43,"+1,",SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCRPM21U",100,0) S SC($J,404.43,"+1,",.01)=TMAIEN"RTN","SCRPM21U",101,0) S SC($J,404.43,"+1,",.02)=SCTP"RTN","SCRPM21U",102,0) S SC($J,404.43,"+1,",.03)=SCACT"RTN","SCRPM21U",103,0) D UPDATE^DIE("","SC($J)","SCIEN",SCERR) ; create new position"RTN","SCRPM21U",104,0) IF $D(@SCERR) K SCIEN"RTN","SCRPM21U",105,0) ELSE  D"RTN","SCRPM21U",106,0) . S POSAIEN=+$G(SCIEN(1))"RTN","SCRPM21U",107,0) . S SCNEWTP=1"RTN","SCRPM21U",108,0) . D AFTERTP^SCMCDD1(POSAIEN)"RTN","SCRPM21U",109,0) Q"RTN","SCRPM21U",110,0) ;"RTN","SCRPM21U",111,0)DELTEAM(TMAIEN) ; DELETE A TEAM ASSIGNMENT"RTN","SCRPM21U",112,0) S DIK="^SCPT(404.42,""RTN","SCRPM21U",113,0) S DA=TMAIEN"RTN","SCRPM21U",114,0) ;"RTN","SCRPM21U",115,0) IF DIK]"",$D(@(DIK_DA_",0)")) D ^DIK"RTN","SCRPM21U",116,0) E  S TMAIEN=0_U_TMAIEN"RTN","SCRPM21U",117,0) Q"RTN","SCRPM21U",118,0) ;"RTN","SCRPM21U",119,0)DISTEAM(TMAIEN) ; DISCHARGE A TEAM ASSIGNMENT"RTN","SCRPM21U",120,0) ; TMAIEN = SOURCE TEAM IEN"RTN","SCRPM21U",121,0) N DISDAT"RTN","SCRPM21U",122,0) S DISDAT=SCACT  ; init discharge date"RTN","SCRPM21U",123,0) ; discharge for previous day if assignment date prior to today"RTN","SCRPM21U",124,0) I $P($G(^SCPT(404.43,TMAIEN,0)),U,3)'>$$PREVDAY(SCACT) S DISDAT=$$PREVDAY(SCACT)"RTN","SCRPM21U",125,0) N SCTEC"RTN","SCRPM21U",126,0) S SCTEC=$$INPTTM^SCAPMC(DFN,TMAIEN,DISDAT,SCERR) ; Discharge from team Assignments"RTN","SCRPM21U",127,0) I 'SCTEC S TMAIEN=0_U_TMAIEN"RTN","SCRPM21U",128,0) Q"RTN","SCRPM21U",129,0) ;"RTN","SCRPM21U",130,0)CREATETM(DFN,SCTMTO,SCACT,TMAIEN)       ; CREATE A TEAM ASSIGNMENT"RTN","SCRPM21U",131,0) N SCTM"RTN","SCRPM21U",132,0) S TMAIEN="+1,""RTN","SCRPM21U",133,0) ; set team assignment type (i.e PC (1) or non-PC (99))"RTN","SCRPM21U",134,0) S:$D(@SCFIELDA@(.05)) SCTM($J,404.42,TMAIEN,.08)=$G(@SCMAINA@(.08),$S(@SCFIELDA@(.05):1,1:99))"RTN","SCRPM21U",135,0) ; set team user entering"RTN","SCRPM21U",136,0) S:$D(@SCFIELDA@(.06)) SCTM($J,404.42,TMAIEN,.11)=$G(@SCMAINA@(.11),@SCFIELDA@(.06))"RTN","SCRPM21U",137,0) ; set team Date/time entered"RTN","SCRPM21U",138,0) S:$D(@SCFIELDA@(.07)) SCTM($J,404.42,TMAIEN,.12)=$G(@SCMAINA@(.12),@SCFIELDA@(.07))"RTN","SCRPM21U",139,0) ; set team last edited by"RTN","SCRPM21U",140,0) ;S:$D(@SCFIELDA@(.08)) SCTM($J,404.42,TMAIEN,.13)=$G(@SCMAINA@(.13),@SCFIELDA@(.08))"RTN","SCRPM21U",141,0) ; set team date/time last edited"RTN","SCRPM21U",142,0) ;S:$D(@SCFIELDA@(.09)) SCTM($J,404.42,TMAIEN,.14)=$G(@SCMAINA@(.14),@SCFIELDA@(.09))"RTN","SCRPM21U",143,0) S SCTM($J,404.42,TMAIEN,.01)=DFN"RTN","SCRPM21U",144,0) S SCTM($J,404.42,TMAIEN,.02)=SCACT"RTN","SCRPM21U",145,0) S SCTM($J,404.42,TMAIEN,.03)=SCTMTO"RTN","SCRPM21U",146,0) D UPDATE^DIE("","SCTM($J)","SCIEN","SCERR") ; new entry"RTN","SCRPM21U",147,0) IF $D(@SCERR) D"RTN","SCRPM21U",148,0) . K SCIEN"RTN","SCRPM21U",149,0) . S TMAIEN="""RTN","SCRPM21U",150,0) ELSE  D"RTN","SCRPM21U",151,0) . S TMAIEN=$G(SCIEN(1))  ; new assignment record set up"RTN","SCRPM21U",152,0) . S SCNEWTM=1"RTN","SCRPM21U",153,0) . D AFTERTM^SCMCDD1(TMAIEN)"RTN","SCRPM21U",154,0) Q"RTN","SCRPM21U",155,0) ;"RTN","SCRPM21U",156,0)TMACTIV(TMAIEN,PCPOS)   ; CHANGE FUTURE ACTIVE DATE TO CURRENT DATE"RTN","SCRPM21U",157,0) ; PCPOS - flag that indicates whether or not team should be activated as a PC Team"RTN","SCRPM21U",158,0) ;  the team definition is assumed to support PC service at this point"RTN","SCRPM21U",159,0) ; also remove future discharge date if present"RTN","SCRPM21U",160,0) S SC($J,404.42,(+TMAIEN)_",",.14)=SCNOW ; date time last edited"RTN","SCRPM21U",161,0) S SC($J,404.42,(+TMAIEN)_",",.13)=DUZ ; last edited by"RTN","SCRPM21U",162,0) S SC($J,404.42,(+TMAIEN)_",",.02)=SCACT  ; assigned date"RTN","SCRPM21U",163,0) S SC($J,404.42,(+TMAIEN)_",",.09)=""     ; discharge date"RTN","SCRPM21U",164,0) I PCPOS S SC($J,404.42,(+TMAIEN)_",",.08)=1 ;"RTN","SCRPM21U",165,0) D FILE^DIE("","SC($J)",SCERR) ; update TEAM assignment"RTN","SCRPM21U",166,0) I $D(@SCERR) S TMAIEN=0_U_TMAIEN"RTN","SCRPM21U",167,0) Q"RTN","SCRPM21U",168,0) ;"RTN","SCRPM21U",169,0)XALLPOS(FASIEN,POSAIEN) ; DISCHARGE ALL POSITIONS FROM THE "from" TEAM"RTN","SCRPM21U",170,0) ; FASIEN = source position assignment IEN"RTN","SCRPM21U",171,0) ; POSAIEN = destination position assignment IEN, used just for error reporting here"RTN","SCRPM21U",172,0) ; this only occurs when the "from" pos and "to" pos are both Primary care,"RTN","SCRPM21U",173,0) ; or the "from" team is PC and the "to" pos is PC."RTN","SCRPM21U",174,0) ; Rational is that a patient can't have more than one PC team"RTN","SCRPM21U",175,0) ;"RTN","SCRPM21U",176,0) ; use FASIEN to get team assignment, then find all positions for this team assignment,"RTN","SCRPM21U",177,0) ; and discharge them"RTN","SCRPM21U",178,0) N POSASGN,TMASGN,DISDAT"RTN","SCRPM21U",179,0) S DISDAT=SCACT  ; init discharge date"RTN","SCRPM21U",180,0) ; discharge for previous day if assignment date prior to today"RTN","SCRPM21U",181,0) I $P($G(^SCPT(404.43,DISIEN,0)),U,3)'>$$PREVDAY(SCACT) S DISDAT=$$PREVDAY(SCACT)"RTN","SCRPM21U",182,0) S TMASGN=$P($G(^SCPT(404.43,FASIEN,0)),U,1)"RTN","SCRPM21U",183,0) S POSASGN=0"RTN","SCRPM21U",184,0) F  S POSASGN=$O(^SCPT(404.43,"B",TMASGN,POSASGN)) Q:POSASGN=""  D"RTN","SCRPM21U",185,0) .  S STEC=$$INPTTP^SCAPMC(DFN,POSASGN,DISDAT,SCERR) ; discharge position"RTN","SCRPM21U",186,0) I (TMASGN="")!$D(@SCERR) S POSAIEN=0_U_POSAIEN"RTN","SCRPM21U",187,0) Q"RTN","SCRPM21U",188,0) ;"RTN","SCRPM21U",189,0)GETPOSTM(POSAIEN)       ; RETURN THE TEAM ASSIGNMENT FOR A POSITION"RTN","SCRPM21U",190,0) Q $P($G(^SCPT(404.43,POSAIEN,0)),U,1)"RTN","SCRPM21U",191,0) ;"RTN","SCRPM21U",192,0)FUPOSASN(POSAIEN,SCACT) ; IS THIS A FUTURE POSITION ASSIGNMENT?"RTN","SCRPM21U",193,0) Q $P($G(^SCPT(404.43,POSAIEN,0)),U,3)>SCACT"RTN","SCRPM21U",194,0) ;"RTN","SCRPM21U",195,0)FUTMASN(TMAIEN,SCACT)   ; IS THIS A FUTURE TEAM ASSIGNMENT?"RTN","SCRPM21U",196,0) Q $P($G(^SCPT(404.42,TMAIEN,0)),U,2)>SCACT"RTN","SCRPM21U",197,0) ;"RTN","SCRPM21U",198,0)FUTTMDIS(TMAIEN,SCACT)  ; IS THERE A FUTURE TEAM DISCHARGE?"RTN","SCRPM21U",199,0) Q $P($G(^SCPT(404.42,TMAIEN,0)),U,9)>SCACT"RTN","SCRPM21U",200,0) ;"RTN","SCRPM21U",201,0)DPOSPROB(SCPTTPA,SCACT) ; handle disposition of existing destination POSITION"RTN","SCRPM21U",202,0) I $$FUPOSASN(.SCPTTPA,SCACT) D  Q:'SCPTTPA  ; BAIL OUT"RTN","SCRPM21U",203,0) . D DELPOS(SCPTTPA,.SCPTTPA) ; DELETE future non-PC position assignment"RTN","SCRPM21U",204,0) . I 'SCPTTPA D ERROR^SCRPMPSP("Unable to DELETE non-PC position assignment for existing dest team",SCPTTPA,20) Q   ; BAIL OUT"RTN","SCRPM21U",205,0) ELSE  D"RTN","SCRPM21U",206,0) . D DISPOS(SCPTTPA,.SCPTTPA)  ; else if current non-pc assignment discharge it"RTN","SCRPM21U",207,0) . I 'SCPTTPA D ERROR^SCRPMPSP("Unable to discharge non-PC position assignment with existing dest team",SCPTTPA,25) Q   ; BAIL OUT"RTN","SCRPM21U",208,0) Q 'SCPTTPA"RTN","SCRPM21U",209,0) ;"RTN","SCRPM21U",210,0)DTMPROB(SCPTTMA,SCACT)  ; HANDLE DISPOSITION OF EXISTING DESTINATION TEAM"RTN","SCRPM21U",211,0) I $$FUTMASN(.SCPTTMA,SCACT) D  Q:'SCPTTMA  ; BAIL OUT"RTN","SCRPM21U",212,0) . D DELTEAM(.SCPTTMA) ; DELETE future dest NON-PC team assign"RTN","SCRPM21U",213,0) . I 'SCPTTMA D ERROR^SCRPMPSP("Unable to DELETE non-PC team assignment for existing dest team",SCPTTMA,30)"RTN","SCRPM21U",214,0) ELSE  D "RTN","SCRPM21U",215,0) . D DISTEAM(.SCPTTMA)  ; discharge current non-pc team assignment"RTN","SCRPM21U",216,0) . I 'SCPTTMA D ERROR^SCRPMPSP("Unable to discharge non-PC team assignment for existing dest team",SCPTTMA,35) Q   ; BAIL OUT"RTN","SCRPM21U",217,0) Q 'SCPTTMA"RTN","SCRPMPSP")0^43^B76646743"RTN","SCRPMPSP",1,0)SCRPMPSP        ;ALB/PDR - Team APIs:ACPTTP ; AUG 1998"RTN","SCRPMPSP",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCRPMPSP",3,0) ;;1.0"RTN","SCRPMPSP",4,0) ;"RTN","SCRPMPSP",5,0) ; PROCESS SINGLE PATIENT POSITION REASSIGNMENT"RTN","SCRPMPSP",6,0) ;"RTN","SCRPMPSP",7,0)ACPTTP(DFN,SCTP,SCFIELDA,SCACT,FASIEN,SCERR,SCYESTM,SCMAINA) ;add/edit a patient to a position (pt TP assgn - #404.43"RTN","SCRPMPSP",8,0) ; input:"RTN","SCRPMPSP",9,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCRPMPSP",10,0) ;  SCTP    = pointer to TEAM POSTION file (#404.57) (DESTINATION POSITION)"RTN","SCRPMPSP",11,0) ;  SCFIELDA= array of extra field entries - scfielda('fld#')=value for 404.43"RTN","SCRPMPSP",12,0) ;  SCACT   = date to activate [default=DT]"RTN","SCRPMPSP",13,0) ;  FASIEN  = "FROM" position assignment IEN"RTN","SCRPMPSP",14,0) ;  SCERR = array NAME to store error messages."RTN","SCRPMPSP",15,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCRPMPSP",16,0) ;  SCYESTM = Should team assignment be made, if none active now?[1=YES]"RTN","SCRPMPSP",17,0) ;  SCMAINA= array of extra field entries for 404.42"RTN","SCRPMPSP",18,0) ;"RTN","SCRPMPSP",19,0) ; Output:"RTN","SCRPMPSP",20,0) ;  Returned = ien of 404.43^new?^404.42 ien (new entries only)^new?^Message"RTN","SCRPMPSP",21,0) ;  SCERR()  = Array of DIALOG file messages(errors) ."RTN","SCRPMPSP",22,0) ;             Foramt:"RTN","SCRPMPSP",23,0) ;               Subscript: Sequential # from 1 to n"RTN","SCRPMPSP",24,0) ;               Piece     Description"RTN","SCRPMPSP",25,0) ;                 1       IEN of DIALOG file"RTN","SCRPMPSP",26,0) N SCESEQ,SCPARM,SCIEN,SC,HISTPTTP,SCFLD,SCTM,SCPTTMA,SCST,PATH"RTN","SCRPMPSP",27,0) N SCPTTPA,SCTMFLDA,SCNEWTP,SCNEWTM,SCAPTDT,SCAPTTPO,SCAPTTPE,SCMESS"RTN","SCRPMPSP",28,0) ;"RTN","SCRPMPSP",29,0) ;"RTN","SCRPMPSP",30,0) I '$$OKDATA D ERROR("Data Integrity error",FASIEN,5) G APTTPQ  ; BAIL OUT check/setup variables BAIL OUT on error"RTN","SCRPMPSP",31,0) D INITVARS ; initialize local variables"RTN","SCRPMPSP",32,0) I '$$GETPLST D ERROR("Unable to get positions list",FASIEN,10) G APTTPQ"RTN","SCRPMPSP",33,0) ; BAIL OUT if error trying to get position list"RTN","SCRPMPSP",34,0) ;"RTN","SCRPMPSP",35,0) ; Business rule processing"RTN","SCRPMPSP",36,0) I $$POSEXIST(.SCTM,SCTP,.SCPTTPA,.SCPTTMA) D  D SETP(1) G APTTPQ"RTN","SCRPMPSP",37,0) . ; Have existing destination position assignment"RTN","SCRPMPSP",38,0) . ; destination position assignment exists, implies destination team assignment exists "RTN","SCRPMPSP",39,0) . I '$$PCPCASN^SCRPM21U(FASIEN,SCTP) D  D SETP(1.1) Q"RTN","SCRPMPSP",40,0) .. ; not a PC to PC assignment, preexisiting position assignment"RTN","SCRPMPSP",41,0) .. D UPDATPOS^SCRPM21U(.SCPTTPA,SCERR) ; make sure dest position reflects new assign date, remove future disch etc"RTN","SCRPMPSP",42,0) .. I 'SCPTTPA D  Q  ; BAIL OUT"RTN","SCRPMPSP",43,0) ... D ERROR("Unable to update PC position",SCPTTPA,12)"RTN","SCRPMPSP",44,0) .. I $$FUTMASN^SCRPM21U(SCPTTMA,SCACT) D  Q:'SCPTTMA  ; BAIL OUT if can't activate team"RTN","SCRPMPSP",45,0) ... D TMACTIV^SCRPM21U(.SCPTTMA,$$PCPOS) ; activate future team assignment"RTN","SCRPMPSP",46,0) ... I 'SCPTTMA D ERROR("Unable to activate future team assignment",SCPTTMA,20)"RTN","SCRPMPSP",47,0) .. D DISPOS^SCRPM21U(FASIEN,.SCPTTPA) ; discharge source position"RTN","SCRPMPSP",48,0) .. I 'SCPTTPA D ERROR("Unable to discharge source position for non-PC assignment",SCPTTPA,30)"RTN","SCRPMPSP",49,0) . ; this is a PC to PC position reassignment with preexisting position assignment"RTN","SCRPMPSP",50,0) . Q:$$DPOSPROB^SCRPM21U(SCPTTPA,SCACT)  ; BAIL OUT if can't delete or discharge existing dest pos"RTN","SCRPMPSP",51,0) . Q:$$DTMPROB^SCRPM21U(SCPTTMA,SCACT)  ; BAIL OUT if can't delete or discharge existing dest team"RTN","SCRPMPSP",52,0) . D CREATETM^SCRPM21U(DFN,$$DSTTEAM,SCACT,.SCPTTMA) ; create a new PC team assigment to take place of dest team assign"RTN","SCRPMPSP",53,0) . I 'SCPTTMA D ERROR("unable to create new PC team",SCPTTMA,40) Q   ; BAIL OUT "RTN","SCRPMPSP",54,0) . D CREATPOS^SCRPM21U(.SCPTTPA,SCPTTMA)  ; create the new PC position"RTN","SCRPMPSP",55,0) . I 'SCPTTPA D ERROR("Unable to create PC position",SCPTTPA,50) Q  ; BAIL OUT "RTN","SCRPMPSP",56,0) . ; take care of source bookkeeping"RTN","SCRPMPSP",57,0) . D XALLPOS^SCRPM21U(FASIEN,.SCPTTPA)  ; discharge all positions from source team"RTN","SCRPMPSP",58,0) . I 'SCPTTMA D ERROR("Unable to discharge all positions for PC source team",SCPTTMA,70) Q   ; BAIL OUT"RTN","SCRPMPSP",59,0) . D DISTEAM^SCRPM21U($$SRCTEAM)  ; Discharge the source team (swapped position with XALLPOS 9/9)"RTN","SCRPMPSP",60,0) . I 'SCPTTPA D ERROR("unable to discharge PC source team ",SCST,60) Q  ; BAIL OUT "RTN","SCRPMPSP",61,0) ;"RTN","SCRPMPSP",62,0) ; no preexisting position assignment"RTN","SCRPMPSP",63,0) I $$TMEXIST^SCRPM21U(DFN,SCTM,SCACT,.SCPTTMA) D  D SETP(2) G APTTPQ"RTN","SCRPMPSP",64,0) . ; existing destination team assignment for this patient"RTN","SCRPMPSP",65,0) . I $$PCPCASN^SCRPM21U(FASIEN,SCTP) D  D SETP(2.1) Q"RTN","SCRPMPSP",66,0) .. ; PC to PC team reasignment with an existing dest team assignment"RTN","SCRPMPSP",67,0) .. Q:$$DTMPROB^SCRPM21U(SCPTTMA,SCACT)  ; BAIL OUT if can't delete or discharge existing dest team"RTN","SCRPMPSP",68,0) .. D CREATETM^SCRPM21U(DFN,$$DSTTEAM,SCACT,.SCPTTMA) ; create new dest team assignment"RTN","SCRPMPSP",69,0) .. I 'SCPTTMA D ERROR("Unable to create PC destination team",SCPTTMA,80) Q   ; BAIL OUT"RTN","SCRPMPSP",70,0) .. D CREATPOS^SCRPM21U(.SCPTTPA,.SCPTTMA)  ; create PC position"RTN","SCRPMPSP",71,0) .. I 'SCPTTPA D ERROR("Unable to create PC destination position",SCPTTPA,100) Q  ; BAIL OUT"RTN","SCRPMPSP",72,0) .. D XALLPOS^SCRPM21U(FASIEN,.SCPTTPA)  ; discharge all positions from source team  9/9"RTN","SCRPMPSP",73,0) .. I 'SCPTTMA D ERROR("Unable to discharge all positions for PC source team",SCPTTMA,105) Q   ; BAIL OUT  9/9"RTN","SCRPMPSP",74,0) .. D DISTEAM^SCRPM21U($$SRCTEAM)  ; Discharge the source team"RTN","SCRPMPSP",75,0) .. I 'SCPTTPA D ERROR("unable to discharge PC source team ",SCST,107) Q  ; BAIL OUT  9/9"RTN","SCRPMPSP",76,0) . ; non-PC team reassignment to existing dest team assignment"RTN","SCRPMPSP",77,0) . I $$FUTMASN^SCRPM21U(.SCPTTMA,SCACT)!$$FUTTMDIS^SCRPM21U(.SCPTTMA,SCACT) D  Q:'SCPTTMA  ; BAIL OUT if can't activate team"RTN","SCRPMPSP",78,0) .. D TMACTIV^SCRPM21U(.SCPTTMA,$$PCPOS) ; activate team assignment"RTN","SCRPMPSP",79,0) .. I 'SCPTTMA D ERROR("Unable to activate future team assignment",SCPTTMA,120)"RTN","SCRPMPSP",80,0) . D CREATPOS^SCRPM21U(.SCPTTPA,.SCPTTMA) ; Create the new position for existing team"RTN","SCRPMPSP",81,0) . I 'SCPTTPA D ERROR("Unable to create destination position for non-PC assignment",SCPTTPA,130)"RTN","SCRPMPSP",82,0) . D DISPOS^SCRPM21U(FASIEN,.SCPTTPA) ; discharge source position"RTN","SCRPMPSP",83,0) . I 'SCPTTPA D ERROR("Unable to discharge source position for non-PC assignment",SCPTTPA,135)"RTN","SCRPMPSP",84,0) ; "RTN","SCRPMPSP",85,0) ; no prexisting destination team or position assignment"RTN","SCRPMPSP",86,0) I $$PCPCASN^SCRPM21U(FASIEN,SCTP) D  D SETP(3.1) G APTTPQ"RTN","SCRPMPSP",87,0) . ; PC to PC team reassignment"RTN","SCRPMPSP",88,0) . D CREATETM^SCRPM21U(DFN,$$DSTTEAM,SCACT,.SCPTTMA) ; create the new destination team, SCPTTMA will be assigned"RTN","SCRPMPSP",89,0) . I 'SCPTTMA D ERROR("Unable to create new PC destination team",SCPTTMA,140) Q   ; BAIL OUT"RTN","SCRPMPSP",90,0) . D CREATPOS^SCRPM21U(.SCPTTPA,SCPTTMA) ; create new destination position, SCPTTPA assigned"RTN","SCRPMPSP",91,0) . I 'SCPTTPA D ERROR("Unable to create new PC destination position",SCPTTPA,160)  Q  ; BAIL OUT "RTN","SCRPMPSP",92,0) . D XALLPOS^SCRPM21U(FASIEN,.SCPTTPA)  ; discharge all positions from source team"RTN","SCRPMPSP",93,0) . I 'SCPTTPA D ERROR("Unable to discharge all positions for PC source team",SCPTTMA,180) G APTTPQ   ; BAIL OUT"RTN","SCRPMPSP",94,0) . D DISTEAM^SCRPM21U($$SRCTEAM)  ; Discharge the source team"RTN","SCRPMPSP",95,0) . I 'SCPTTPA D ERROR("unable to discharge PC source team ",SCST,185) Q  ; BAIL OUT 9/9"RTN","SCRPMPSP",96,0) D SETP(3)"RTN","SCRPMPSP",97,0) D CREATETM^SCRPM21U(DFN,$$DSTTEAM,SCACT,.SCPTTMA) ; create new dest team assignment 9/9"RTN","SCRPMPSP",98,0) I 'SCPTTMA D ERROR("Unable to create destination team",SCPTTMA,187) Q   ; BAIL OUT 9/9"RTN","SCRPMPSP",99,0) D CREATPOS^SCRPM21U(.SCPTTPA,SCPTTMA)"RTN","SCRPMPSP",100,0) I 'SCPTTPA D ERROR("Unable to create new non-PC destination position",SCPTTPA,190) G APTTPQ   ; BAIL OUT"RTN","SCRPMPSP",101,0) D DISPOS^SCRPM21U(FASIEN,.SCPTTPA) ; discharge source position"RTN","SCRPMPSP",102,0) I 'SCPTTPA D ERROR("Unable to discharge source position for non-PC assignment",SCPTTPA,200)"RTN","SCRPMPSP",103,0) ;"RTN","SCRPMPSP",104,0)APTTPQ  ; All done"RTN","SCRPMPSP",105,0) D SAVPARMS"RTN","SCRPMPSP",106,0) Q +$G(SCPTTPA)_U_+$G(SCNEWTP)_U_+$G(SCPTTMA)_U_+$P($G(SCPTTMA),U,2)_U_$G(SCMESS)"RTN","SCRPMPSP",107,0) ;"RTN","SCRPMPSP",108,0) ;------------------------- SUBROUTINES ---------------------------------"RTN","SCRPMPSP",109,0) ;"RTN","SCRPMPSP",110,0)OKDATA()        ;setup/check variables"RTN","SCRPMPSP",111,0) N SCOK"RTN","SCRPMPSP",112,0) S SCOK=1"RTN","SCRPMPSP",113,0) D INIT^SCAPMCU1(.SCOK)"RTN","SCRPMPSP",114,0) IF '$D(^DPT(DFN,0))!('$D(^SCTM(404.57,SCTPTO,0))) D  S SCOK=0"RTN","SCRPMPSP",115,0) . S SCPARM("PATIENT")=DFN"RTN","SCRPMPSP",116,0) . S SCPARM("POSITION")=SCTPTO"RTN","SCRPMPSP",117,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",SCERR)"RTN","SCRPMPSP",118,0) S:'$G(SCACT) SCACT=DT"RTN","SCRPMPSP",119,0) S:'$D(SCMAINA) SCMAINA="SC40443A""RTN","SCRPMPSP",120,0) Q SCOK"RTN","SCRPMPSP",121,0) ;"RTN","SCRPMPSP",122,0)INITVARS        ; INITIALIZE LOCAL VARIABLES"RTN","SCRPMPSP",123,0) S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2) ; DESTINATION TEAM IEN"RTN","SCRPMPSP",124,0) S SCAPTDT("BEGIN")=SCACT"RTN","SCRPMPSP",125,0) S SCAPTDT("END")=3990101"RTN","SCRPMPSP",126,0) S SCAPTDT("INCL")=0"RTN","SCRPMPSP",127,0) S SCST=$$GETPOSTM^SCRPM21U(FASIEN) ; get team assignment IEN for source position"RTN","SCRPMPSP",128,0) S SCPTTMA="" ; initialize destination team assignment IEN  "RTN","SCRPMPSP",129,0) Q"RTN","SCRPMPSP",130,0) ;"RTN","SCRPMPSP",131,0)GETPLST()       ; GET LIST OF POSITIONS FOR PATIENT - ERROR IF"RTN","SCRPMPSP",132,0) Q $$TPPT^SCAPMC(DFN,"SCAPTDT",,,,,0,"SCAPTTPO","SCAPTTPE")"RTN","SCRPMPSP",133,0) ;"RTN","SCRPMPSP",134,0)POSEXIST(SCTM,SCTP,POSAIEN,TMIEN)       ; RETURN POSITION ASSIGNMENT FOR TEAM IF IT EXISTS, NULL OTHERWISE"RTN","SCRPMPSP",135,0) N DISDT"RTN","SCRPMPSP",136,0) S TMIEN="" ; initialize destination team assignment IEN"RTN","SCRPMPSP",137,0) S SCTM=+$P($G(^SCTM(404.57,SCTP,0)),U,2)  ; get ptr to 404.51"RTN","SCRPMPSP",138,0) S POSAIEN=$O(SCAPTTPO("SCTP",SCTM,SCTP,0)) ; array was set up in call to GETPLST"RTN","SCRPMPSP",139,0) I POSAIEN D  ; double check to be sure an active team assignment exists"RTN","SCRPMPSP",140,0) . S TMIEN=$$GETPOSTM^SCRPM21U(POSAIEN) ; need to get team Assignment IEN anyway"RTN","SCRPMPSP",141,0) . ; check for team discharge date before today"RTN","SCRPMPSP",142,0) . S DISDT=$P($G(^SCPT(404.42,TMIEN,0)),U,9)"RTN","SCRPMPSP",143,0) . I DISDT,DISDT'>SCACT S POSAIEN=0_U_POSAIEN ; team is discharged"RTN","SCRPMPSP",144,0) Q POSAIEN"RTN","SCRPMPSP",145,0) ;"RTN","SCRPMPSP",146,0)ERROR(TXT,IEN,ENUM)     ; HANDLE ERRORS FOR REPORTING"RTN","SCRPMPSP",147,0) ; DO SOMETHING WITH THIS TEXT"RTN","SCRPMPSP",148,0) I $P(IEN,U,1)=0 S IEN=$P(IEN,U,2)"RTN","SCRPMPSP",149,0) S SCMESS=TXT_" [(IEN="_IEN_") E#"_ENUM_" PTH:"_$G(PATH)_"]""RTN","SCRPMPSP",150,0) ;S ^TMP("PDR",$J,"POSREASGN",$H,DFN)=SCMESS"RTN","SCRPMPSP",151,0) Q"RTN","SCRPMPSP",152,0) ;"RTN","SCRPMPSP",153,0)SAVPARMS ; save params for debugging"RTN","SCRPMPSP",154,0) N S,F,NVP"RTN","SCRPMPSP",155,0) S S="""RTN","SCRPMPSP",156,0) S S=$O(^TMP("PDR",S),-1)+1 ; get next occurence"RTN","SCRPMPSP",157,0) S ^TMP("PDR",S,$J,"INIT")=DFN_U_SCTP_U_SCACT_U_FASIEN_U_SCYESTM ; initial params passed in"RTN","SCRPMPSP",158,0) S F="",NVP="""RTN","SCRPMPSP",159,0) F  S F=$O(@SCFIELDA@(F)) Q:F=""  S NVP=NVP_F_"="_@SCFIELDA@(F)_U  ; Get the params passed in for new pos"RTN","SCRPMPSP",160,0) S ^TMP("PDR",S,$J,"NPOS")=NVP"RTN","SCRPMPSP",161,0) S F="",NVP="""RTN","SCRPMPSP",162,0) F  S F=$O(@SCMAINA@(F)) Q:F=""  S NVP=NVP_F_"="_@SCFIELDA@(F)_U  ; Get the params passed in for new TEAM"RTN","SCRPMPSP",163,0) S ^TMP("PDR",S,$J,"NTEAM")=NVP"RTN","SCRPMPSP",164,0) S ^TMP("PDR",S,$J,"NASSGN")=$G(SCPTTPA)_U_$G(SCPTTMA)_U_$G(PATH)_U_$G(SCMESS)_U_$H ; conserve new pos and team assigns if present"RTN","SCRPMPSP",165,0) Q"RTN","SCRPMPSP",166,0) ;"RTN","SCRPMPSP",167,0)SETP(BR) ; SET PATH INDICATOR FOR DEBUGGING"RTN","SCRPMPSP",168,0) S PATH=$G(PATH)_BR_"-""RTN","SCRPMPSP",169,0) Q"RTN","SCRPMPSP",170,0) ;"RTN","SCRPMPSP",171,0)SRCTEAM()       ; return the source team IEN for the source position"RTN","SCRPMPSP",172,0) ; value set in INITVARS"RTN","SCRPMPSP",173,0) Q SCST"RTN","SCRPMPSP",174,0) ;"RTN","SCRPMPSP",175,0)DSTTEAM()       ; RETURN THE DESTINATION TEAM IEN (NOT TEAM ASSIGNMENT)"RTN","SCRPMPSP",176,0) Q SCTM"RTN","SCRPMPSP",177,0) ;"RTN","SCRPMPSP",178,0)PCPOS() ; IS THIS A PC POSITION?"RTN","SCRPMPSP",179,0) Q $G(@SCFIELDA@(.05),0)"RTN","SCRPMTA")0^44^B59723617"RTN","SCRPMTA",1,0)SCRPMTA ;ALB/REW/PDR - Team Reassignment APIs:APPTTM ; AUG 1998"RTN","SCRPMTA",2,0) ;;5.3;**148**;Scheduling;aug 13, 1993"RTN","SCRPMTA",3,0) ; Reassign patient Team, called from RPC ='SC FILE PAT TM REASGN' (PTFILE^SCMRBK - PTFILE^SCMRBK)"RTN","SCRPMTA",4,0) ;"RTN","SCRPMTA",5,0) ;;1.0"RTN","SCRPMTA",6,0) ; MAKE A SINGLE PATIENT TEAM REASSIGNMENT"RTN","SCRPMTA",7,0)ACPTTM(DFN,SCTMTO,SCFIELDA,SCACT,FASIEN,SCERR) ;add a patient to a team (pt tmassgn - #404.42)"RTN","SCRPMTA",8,0) ; input:"RTN","SCRPMTA",9,0) ;  DFN     = pointer to PATIENT file (#2)"RTN","SCRPMTA",10,0) ;  SCTMTO  = pointer to TEAM file (#404.51) "TO" Team"RTN","SCRPMTA",11,0) ;  SCFIELDA= array of additional fields to be added for 404.42"RTN","SCRPMTA",12,0) ;  SCACT   = date to activate [default=DT]"RTN","SCRPMTA",13,0) ;  FASIEN  = IEN of source team assignment"RTN","SCRPMTA",14,0) ;  SCERR = array NAME to store error messages."RTN","SCRPMTA",15,0) ;          [ex. ^TMP("ORXX",$J)]"RTN","SCRPMTA",16,0) ;"RTN","SCRPMTA",17,0) ; Output:"RTN","SCRPMTA",18,0) ;  Returned = ien of 404.42 - 0 if none after^new?^Message"RTN","SCRPMTA",19,0) ;  SCERR() = Array of DIALOG file messages(errors) ."RTN","SCRPMTA",20,0) ;             Foramt:"RTN","SCRPMTA",21,0) ;               Subscript: Sequential # from 1 to n"RTN","SCRPMTA",22,0) ;               Piece     Description"RTN","SCRPMTA",23,0) ;                 1       IEN of DIALOG file"RTN","SCRPMTA",24,0) N SCPTTM,SCESEQ,SCPARM,SCIEN,SC,SCFLD,SCNEWTM,SCDTPAR,SCMESS"RTN","SCRPMTA",25,0) ;"RTN","SCRPMTA",26,0) ;"RTN","SCRPMTA",27,0) I '$$OKDATA D  G APTTMQ ;check/setup variables"RTN","SCRPMTA",28,0) . D ERROR("Failed initial data check","",10)"RTN","SCRPMTA",29,0) ; "RTN","SCRPMTA",30,0) ; PROCESS REASSIGNMENT"RTN","SCRPMTA",31,0) ; get destination team assignment parameters if already existing assignment"RTN","SCRPMTA",32,0) I '$$GETTMPAR(DFN,SCTMTO,SCACT,.SCERR,.SCDTPAR,.SCPTTM) D  G APTTMQ ; BAIL if error "RTN","SCRPMTA",33,0) . D ERROR("Unable to get list of team assignments for patient",FASIEN,20)"RTN","SCRPMTA",34,0) ; Make sure this reassignment doesn't set up more than 1 primary care team for PT"RTN","SCRPMTA",35,0) I $$INVALMOV(SCPTTM,FASIEN,SCDTPAR) D  G APTTMQ ; BAIL if error "RTN","SCRPMTA",36,0) . D ERROR("Patient already has a primary care assignment",FASIEN,30)"RTN","SCRPMTA",37,0) ;"RTN","SCRPMTA",38,0) ; check for currently active destination assignment and discharge if so"RTN","SCRPMTA",39,0) I $$ACTIVDES(SCDTPAR,SCACT) D  G:SCPTTM APTTMQ ; BAIL OUT if discharge unsuccessfull"RTN","SCRPMTA",40,0) . I $$DISTMOK(DFN,SCPTTM,SCACT,DUZ) S SCPTTM="" Q  ; going to create a new team"RTN","SCRPMTA",41,0) . D ERROR("Unable to discharge current destination assignment",SCPTTM,40)"RTN","SCRPMTA",42,0) ;"RTN","SCRPMTA",43,0) ; Move the patient to destination team and create destination team if necessary"RTN","SCRPMTA",44,0) I '$$MOVPATOK(DFN,SCACT,SCTMTO,SCFIELDA,SCDTPAR,.SCPTTM,DUZ) D  G APTTMQ"RTN","SCRPMTA",45,0) . D ERROR("Unable to move patient to destination team",FASIEN,50)"RTN","SCRPMTA",46,0) ;"RTN","SCRPMTA",47,0) ; discharge source team"RTN","SCRPMTA",48,0) I '$$DISTMOK(DFN,FASIEN,SCACT,DUZ) D"RTN","SCRPMTA",49,0) . ; error messages setup within call to DISTMOK"RTN","SCRPMTA",50,0) . S SCPTTM="""RTN","SCRPMTA",51,0)APTTMQ ;"RTN","SCRPMTA",52,0) ;B"RTN","SCRPMTA",53,0) Q +$G(SCPTTM)_U_+$G(SCNEWTM)_U_$G(SCMESS)"RTN","SCRPMTA",54,0) ;"RTN","SCRPMTA",55,0) ;-------------------- SUBS -------------------------------"RTN","SCRPMTA",56,0) ;"RTN","SCRPMTA",57,0)PTTMACT(DFN,SCTMTO,SCDT,SCERR) ;what is patient/team assignment on a given date-time into the future? Return 404.42 ien or 0"RTN","SCRPMTA",58,0) N SCTMLST,SCOK,SCPTTMDT"RTN","SCRPMTA",59,0) S SCOK=0"RTN","SCRPMTA",60,0) S SCPTTMDT("BEGIN")=SCDT,SCPTTMDT("END")=3990101,SCPTTMDT("INCL")=0"RTN","SCRPMTA",61,0) IF $$TMPT^SCAPMC3(DFN,"SCPTTMDT","","SCTMLST",.SCERR) S:$D(SCTMLST("SCTM",SCTMTO)) SCOK=$O(SCTMLST("SCTM",SCTMTO,0))"RTN","SCRPMTA",62,0) Q SCOK"RTN","SCRPMTA",63,0) ;"RTN","SCRPMTA",64,0)OKDATA()        ;setup/check variables"RTN","SCRPMTA",65,0) N SCOK"RTN","SCRPMTA",66,0) S SCOK=1"RTN","SCRPMTA",67,0) D INIT^SCAPMCU1(.SCOK)"RTN","SCRPMTA",68,0) IF '$D(^DPT(DFN,0))!('$D(^SCTM(404.51,SCTMTO,0))) D  S SCOK=0"RTN","SCRPMTA",69,0) . S SCPARM("PATIENT")=DFN"RTN","SCRPMTA",70,0) . S SCPARM("TEAM")=SCTMTO"RTN","SCRPMTA",71,0) . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)"RTN","SCRPMTA",72,0) S:'$G(SCACT) SCACT=DT"RTN","SCRPMTA",73,0) Q SCOK"RTN","SCRPMTA",74,0) ;"RTN","SCRPMTA",75,0)DISTMOK(DFN,TMIEN,SCACT,SCDUZ) ; Discharge patient from FROMTEAM"RTN","SCRPMTA",76,0) ; DFN = pointer to patient"RTN","SCRPMTA",77,0) ; TMIEN = Ptr to Team Assignment File 404.42 for Team being reassigned from"RTN","SCRPMTA",78,0) ; SCAT = Discharge Date"RTN","SCRPMTA",79,0) ; SCDUZ = DUZ of user making reassignment"RTN","SCRPMTA",80,0) N SC,SCTEC,DISDAT"RTN","SCRPMTA",81,0) ;"RTN","SCRPMTA",82,0) Q:TMIEN="" TMIEN  ; Don't try to update this record if don't get IEN"RTN","SCRPMTA",83,0) S DISDAT=SCACT  ; init discharge date"RTN","SCRPMTA",84,0) ; discharge for previous day if assignment date prior to today"RTN","SCRPMTA",85,0) I $P($G(^SCPT(404.42,TMIEN,0)),U,2)'>$$PREVDAY(SCACT) S DISDAT=$$PREVDAY(SCACT)"RTN","SCRPMTA",86,0) S SCTEC=$$INPTTM^SCAPMC(DFN,TMIEN,DISDAT,SCERR) ; Discharge from team Assignments"RTN","SCRPMTA",87,0) I 'SCTEC D ERROR("Unable to discharge source team",FASIEN,500) Q 0 ; BAIL OUT"RTN","SCRPMTA",88,0) I SCTEC D DISCHPOS(DFN,TMIEN,DISDAT,SCERR,.SCTEC) ; Discharge from any position Assignments on this team"RTN","SCRPMTA",89,0) Q SCTEC"RTN","SCRPMTA",90,0) ;"RTN","SCRPMTA",91,0)DISCHPOS(DFN,TMASGN,SCAT,SCERR,SCTEC) ;Discharge positition assignments"RTN","SCRPMTA",92,0) ; DFN = ptr to patient"RTN","SCRPMTA",93,0) ; TMASGN = ptr to team assignment"RTN","SCRPMTA",94,0) ; SCAT = discharge date"RTN","SCRPMTA",95,0) N POSASGN,EM,GD,OK"RTN","SCRPMTA",96,0) S (EM,GD)="""RTN","SCRPMTA",97,0) S OK=1"RTN","SCRPMTA",98,0) S POSASGN=0"RTN","SCRPMTA",99,0) F  S POSASGN=$O(^SCPT(404.43,"B",TMASGN,POSASGN)) Q:POSASGN=""  D"RTN","SCRPMTA",100,0) . S SCTEC=$$INPTTP^SCAPMC(DFN,POSASGN,SCAT,SCERR) ; discharge position"RTN","SCRPMTA",101,0) . I SCTEC S GD=GD_POSASGN_",""RTN","SCRPMTA",102,0) . I 'SCTEC D"RTN","SCRPMTA",103,0) .. S EM=EM_POSASGN_",""RTN","SCRPMTA",104,0) .. S OK=0"RTN","SCRPMTA",105,0) I 'OK D"RTN","SCRPMTA",106,0) . I GD'="" D ERROR("able to discharge these source positions: "_GD_" unable to discharge these: "_EM,POSASGN,300) Q"RTN","SCRPMTA",107,0) . D ERROR("unable to discharge any of the team positions: "_EM,POSASGN,400)"RTN","SCRPMTA",108,0) Q"RTN","SCRPMTA",109,0) ;"RTN","SCRPMTA",110,0)PREVDAY(DAY) ; GET PREVIOUS DAY"RTN","SCRPMTA",111,0) ; DAY = DATE IN FILEMAN FORMAT"RTN","SCRPMTA",112,0) N X,X1,X2"RTN","SCRPMTA",113,0) S X1=DAY,X2=-1"RTN","SCRPMTA",114,0) D C^%DTC"RTN","SCRPMTA",115,0) Q X"RTN","SCRPMTA",116,0) ;"RTN","SCRPMTA",117,0)GETTMPAR(DFN,SCTMTO,SCDT,SCERR,SCTMPAR,SCPTTM) ; RETURN team parameters"RTN","SCRPMTA",118,0) ; SCTMPAR is returned as:"RTN","SCRPMTA",119,0) ;               Piece     Description"RTN","SCRPMTA",120,0) ;                 1       IEN of TEAM file entry"RTN","SCRPMTA",121,0) ;                 2       Name of team"RTN","SCRPMTA",122,0) ;                 3       IEN of file #404.42 (Pt Tm Assignment)"RTN","SCRPMTA",123,0) ;                 4       current effective date"RTN","SCRPMTA",124,0) ;                 5       current inactivate date (if any)"RTN","SCRPMTA",125,0) ;                 6       pointer to 403.47 (purpose)"RTN","SCRPMTA",126,0) ;                 7       Name of Purpose"RTN","SCRPMTA",127,0) ;                 8       Is this the pt's PC Team?"RTN","SCRPMTA",128,0) ;                 9       IEN of PC team assignment - added to record -PDR"RTN","SCRPMTA",129,0) N SCTMLST,SCPTTMDT,PCTM"RTN","SCRPMTA",130,0) S (SCPTTM,SCTMPAR,PCTM)="" ; initialize dest team IEN and dest team parameters"RTN","SCRPMTA",131,0) ; get a list of active or future active teams for this patient"RTN","SCRPMTA",132,0) S SCPTTMDT("BEGIN")=SCDT,SCPTTMDT("END")=3990101,SCPTTMDT("INCL")=0"RTN","SCRPMTA",133,0) I $$TMPT^SCAPMC3(DFN,"SCPTTMDT","","SCTMLST",.SCERR) D"RTN","SCRPMTA",134,0) . S PCTM=$$GETPCTM(.SCTMLST)  ; get the PC team if any for this patient"RTN","SCRPMTA",135,0) . S:$D(SCTMLST("SCTM",SCTMTO)) SCPTTM=$O(SCTMLST("SCTM",SCTMTO,0))"RTN","SCRPMTA",136,0) . I SCPTTM D  ; get the team parameters"RTN","SCRPMTA",137,0) .. S SCN=$O(SCTMLST("SCTM",SCTMTO,SCPTTM,"")) ; ordered list"RTN","SCRPMTA",138,0) .. S SCTMPAR=$G(SCTMLST(SCN)) ; basic team parameters"RTN","SCRPMTA",139,0) S $P(SCTMPAR,U,9)=+PCTM ; add ien of PC team as 9th piece"RTN","SCRPMTA",140,0) Q '$D(@SCERR)"RTN","SCRPMTA",141,0) ;"RTN","SCRPMTA",142,0)GETPCTM(TMLIST) ; FIND THE PC TEAM FOR THIS PATIENT"RTN","SCRPMTA",143,0) N SN,PT"RTN","SCRPMTA",144,0) S (PT,SN)=0"RTN","SCRPMTA",145,0) F  S SN=$O(TMLIST(SN)) Q:'SN  D  Q:PT"RTN","SCRPMTA",146,0) . I $P(TMLIST(SN),U,8) S PT=$P(TMLIST(SN),U,3)"RTN","SCRPMTA",147,0) Q PT"RTN","SCRPMTA",148,0) ;"RTN","SCRPMTA",149,0)FUASSN(SCDTPAR,SCDT) ; is there a future assignment?"RTN","SCRPMTA",150,0) Q $P(SCTMPAR,U,4)>SCDT"RTN","SCRPMTA",151,0) ;"RTN","SCRPMTA",152,0)FUDISCHG(SCTMPAR,SCDT) ;IS THERE A FUTURE DISCHARGE?"RTN","SCRPMTA",153,0) Q $P(SCTMPAR,U,5)>SCDT"RTN","SCRPMTA",154,0) ;"RTN","SCRPMTA",155,0)MOVPATOK(DFN,SCACT,SCTMTO,SCFIELDA,SCTMPAR,SCPTTM,SCDUZ) ; DID MOVE GO OK?"RTN","SCRPMTA",156,0) N SCFLD,SCED"RTN","SCRPMTA",157,0) S SCED=0"RTN","SCRPMTA",158,0) I SCPTTM D  ; setup for edit of existing dest assignment record"RTN","SCRPMTA",159,0) . S SCPTTM=SCPTTM_","  ; IENS format"RTN","SCRPMTA",160,0) . I $$FUASSN(SCTMPAR,SCACT) S SCED=1 ; the new assign date wil be entered below"RTN","SCRPMTA",161,0) . I $$FUDISCHG(SCTMPAR,SCACT) D  ; is there a future discharge for the dest team?"RTN","SCRPMTA",162,0) .. S SCED=1"RTN","SCRPMTA",163,0) .. S SC($J,404.42,SCPTTM,.09)="" ; remove discharge date"RTN","SCRPMTA",164,0) . I SCED D  ; editing the existing assignment - setup edit documentation fields"RTN","SCRPMTA",165,0) .. S SC($J,404.42,SCPTTM,.13)=@SCFIELDA@(.11) ; last edited by set to entered by"RTN","SCRPMTA",166,0) .. S SC($J,404.42,SCPTTM,.14)=@SCFIELDA@(.12) ; last edit time set to enter date/time"RTN","SCRPMTA",167,0) .. K @SCFIELDA@(.11) ; dispose of entered by (SCFIELDA array is set in SCMRBK)"RTN","SCRPMTA",168,0) .. K @SCFIELDA@(.12) ; dispose of entry date/time"RTN","SCRPMTA",169,0) ; "RTN","SCRPMTA",170,0) I '(+SCPTTM) S SCPTTM="+1," ; setup for new team"RTN","SCRPMTA",171,0) ;"RTN","SCRPMTA",172,0) S SCFLD=0 ; add additional fields from workstation if any"RTN","SCRPMTA",173,0) F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D"RTN","SCRPMTA",174,0) . S SC($J,404.42,SCPTTM,SCFLD)=@SCFIELDA@(SCFLD)"RTN","SCRPMTA",175,0) ; core fields for new team assignment"RTN","SCRPMTA",176,0) S SC($J,404.42,SCPTTM,.01)=DFN"RTN","SCRPMTA",177,0) S SC($J,404.42,SCPTTM,.02)=SCACT"RTN","SCRPMTA",178,0) S SC($J,404.42,SCPTTM,.03)=SCTMTO"RTN","SCRPMTA",179,0) ;"RTN","SCRPMTA",180,0) I 'SCED D UPDATE^DIE("","SC($J)","SCIEN","SCERR") ; new entry"RTN","SCRPMTA",181,0) I SCED D FILE^DIE("","SC($J)","SCERR") ; edit existing entry"RTN","SCRPMTA",182,0) ;"RTN","SCRPMTA",183,0) IF $D(@SCERR) D"RTN","SCRPMTA",184,0) . K SCIEN"RTN","SCRPMTA",185,0) . S SCPTTM="""RTN","SCRPMTA",186,0) ELSE  D"RTN","SCRPMTA",187,0) . I SCPTTM'="+1," Q  ; BAIL OUT - was edit to existing assignement record"RTN","SCRPMTA",188,0) . S SCPTTM=$G(SCIEN(1))  ; new assignment record set up"RTN","SCRPMTA",189,0) . S SCNEWTM=1"RTN","SCRPMTA",190,0) . D AFTERTM^SCMCDD1(SCPTTM)"RTN","SCRPMTA",191,0) Q '$D(@SCERR)"RTN","SCRPMTA",192,0) ;"RTN","SCRPMTA",193,0)INVALMOV(DTMIEN,STMIEN,TMPAR) ; IS THIS A VALID REASSIGNMENT?"RTN","SCRPMTA",194,0) ; can't have a pc team reassignment if patient has an existing PC team assignment"RTN","SCRPMTA",195,0) ; and it is not "RTN","SCRPMTA",196,0) ; 1: the src team (move from src to dest discharges src, result only 1 pc team) OR "RTN","SCRPMTA",197,0) ; 2: the destination team (already existing assignment)"RTN","SCRPMTA",198,0) I $$PCASSGN,$$OTHPCTM(DTMIEN,STMIEN,TMPAR) Q 1"RTN","SCRPMTA",199,0) Q 0"RTN","SCRPMTA",200,0) ;"RTN","SCRPMTA",201,0)PCASSGN() ; IS THE REASSIGNMENT DESTINATION TO BE PC?"RTN","SCRPMTA",202,0) Q @SCFIELDA@(.08)=1"RTN","SCRPMTA",203,0) ;"RTN","SCRPMTA",204,0)OTHPCTM(DTMIEN,STMIEN,TMPAR) ; IS THERE ALREADY PC TEAM ASSIGNMENT?"RTN","SCRPMTA",205,0) I $P(TMPAR,U,9)=0 Q 0  ; no other primary care assignments"RTN","SCRPMTA",206,0) I 'DTMIEN Q $P(TMPAR,U,9)'=STMIEN  ; true if PC team is not source team"RTN","SCRPMTA",207,0) Q $P(TMPAR,U,9)'=DTMIEN  ; true if existing dest team assign is not pc team"RTN","SCRPMTA",208,0) ;"RTN","SCRPMTA",209,0)ACTIVDES(SCDTPAR,SCACT) ; IS THE DESTINATION ASSIGNMENT ACTIVE?"RTN","SCRPMTA",210,0) ; SCDTPAR = Destination Team assignment parameter string"RTN","SCRPMTA",211,0) N DISDT,ASNDT"RTN","SCRPMTA",212,0) S DISDT=$P(SCDTPAR,U,5)"RTN","SCRPMTA",213,0) I DISDT="" S DISDT=9999999"RTN","SCRPMTA",214,0) S ASNDT=$P(SCDTPAR,U,4)"RTN","SCRPMTA",215,0) ; ACTIVE if assign date is not in future and "RTN","SCRPMTA",216,0) ; there is no discharge date, or the discharge date is in the future "RTN","SCRPMTA",217,0) I (ASNDT'>SCACT)&(DISDT>SCACT) Q 1"RTN","SCRPMTA",218,0) Q 0"RTN","SCRPMTA",219,0) ;"RTN","SCRPMTA",220,0)ERROR(TXT,ID,ERN) ; ERROR PROCESSOR"RTN","SCRPMTA",221,0) S SCMESS=TXT_" IEN="_ID_" (ER#="_ERN_")""RTN","SCRPMTA",222,0) S SCPTTM=0 ; return no assignment ien"RTN","SCRPMTA",223,0) ;S ^TMP("PDR",$J,$H,DFN)=SCMESS"RTN","SCRPMTA",224,0) Q"RTN","SCRPPAT3")0^3^B25394573"RTN","SCRPPAT3",1,0)SCRPPAT3 ;ALB/CMM - Practitioner's Patients ;02/20/96"RTN","SCRPPAT3",2,0) ;;5.3;Scheduling;**41,52,148**;AUG 13, 1993"RTN","SCRPPAT3",3,0) ;"RTN","SCRPPAT3",4,0) ;Listing of Practitioner's Patients"RTN","SCRPPAT3",5,0) ;"RTN","SCRPPAT3",6,0)PAT(INS,SEC,TRD,SEC3,ST3,ST4,POS) ;"RTN","SCRPPAT3",7,0) ;writes patients for position/practitioner"RTN","SCRPPAT3",8,0) N PTN,PT,FIRST"RTN","SCRPPAT3",9,0) S PTN="",FIRST=1"RTN","SCRPPAT3",10,0) I SUMM D TOTAL1^SCRPPAT3(INS,SEC,TRD,POS) Q  ;Summary only"RTN","SCRPPAT3",11,0) F  S PTN=$O(@STORE@("PT",INS,SEC,TRD,POS,PTN)) Q:PTN=""!(STOP)  D"RTN","SCRPPAT3",12,0) .S PT=0"RTN","SCRPPAT3",13,0) .F  S PT=$O(@STORE@("PT",INS,SEC,TRD,POS,PTN,PT)) Q:'PT!(STOP)  D"RTN","SCRPPAT3",14,0) ..I (IOST'?1"C-".E),$Y>(IOSL-10) D NEWP1^SCRPU3(.PAGE,TITL) D:'STOP HEAD2(INS,SEC,TRD,SEC3,ST3,ST4,POS) D:'FIRST HEADER"RTN","SCRPPAT3",15,0) ..I (IOST?1"C-".E),$Y>(IOSL-10) D HOLD^SCRPU3(.PAGE,TITL) D:'STOP HEAD2(INS,SEC,TRD,SEC3,ST3,ST4,POS) D:'FIRST HEADER"RTN","SCRPPAT3",16,0) ..Q:STOP"RTN","SCRPPAT3",17,0) ..I FIRST D HEADER S FIRST=0"RTN","SCRPPAT3",18,0) ..W !,$G(@STORE@(INS,SEC,TRD,POS,PT)) ;print patient detail line"RTN","SCRPPAT3",19,0) ..Q"RTN","SCRPPAT3",20,0) .Q"RTN","SCRPPAT3",21,0) Q"RTN","SCRPPAT3",22,0) ;"RTN","SCRPPAT3",23,0)SPRINT(STORE,IOP,TITL,SORT) ; Summary Print Only"RTN","SCRPPAT3",24,0) ;STORE - global location of data"RTN","SCRPPAT3",25,0) ;IOP - device to print to"RTN","SCRPPAT3",26,0) ;TITL - title of report"RTN","SCRPPAT3",27,0) ;SORT - sort order 1-div,team,pract/2-div,pract,team"RTN","SCRPPAT3",28,0) ;"RTN","SCRPPAT3",29,0) N PAGE"RTN","SCRPPAT3",30,0) S PAGE=1,STOP=0"RTN","SCRPPAT3",31,0) D OPEN^SCRPU3"RTN","SCRPPAT3",32,0) Q:$G(POP)"RTN","SCRPPAT3",33,0) D TITLE^SCRPU3(.PAGE,TITL)"RTN","SCRPPAT3",34,0) D CLOSE^SCRPU3"RTN","SCRPPAT3",35,0) Q"RTN","SCRPPAT3",36,0) ;"RTN","SCRPPAT3",37,0)TOTAL1(INS,SEC,TRD,POS) ;"RTN","SCRPPAT3",38,0) ;print team/practitioner total"RTN","SCRPPAT3",39,0) N TEM,PRC"RTN","SCRPPAT3",40,0) I SORT=1 S TEM=SEC,PRC=TRD"RTN","SCRPPAT3",41,0) I SORT=2 S TEM=TRD,PRC=SEC"RTN","SCRPPAT3",42,0) W !!,$G(@STORE@("TH",INS,PRC,TEM,POS)),$G(@STORE@("TOTAL",INS,PRC,TEM,POS))"RTN","SCRPPAT3",43,0) W !!"RTN","SCRPPAT3",44,0) Q"RTN","SCRPPAT3",45,0) ;"RTN","SCRPPAT3",46,0)TOTAL2(INS) ;"RTN","SCRPPAT3",47,0) ;print practitioners' totals"RTN","SCRPPAT3",48,0) N PRC,FIRST"RTN","SCRPPAT3",49,0) S PRC="",FIRST=1"RTN","SCRPPAT3",50,0) F  S PRC=$O(@STORE@("TH",INS,PRC)) Q:PRC=""!(STOP)  D"RTN","SCRPPAT3",51,0) .I (IOST'?1"C-".E),$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL)"RTN","SCRPPAT3",52,0) .I (IOST?1"C-".E),$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL)"RTN","SCRPPAT3",53,0) .Q:STOP"RTN","SCRPPAT3",54,0) .I FIRST W !,"Practitioner Patient Panel Totals:",! S FIRST=0"RTN","SCRPPAT3",55,0) .W !!,$G(@STORE@("TH",INS,PRC)),$G(@STORE@("TOTAL",INS,PRC,0))"RTN","SCRPPAT3",56,0) I 'STOP W !!,$G(@STORE@("TH",INS)),!"RTN","SCRPPAT3",57,0) Q"RTN","SCRPPAT3",58,0) ;"RTN","SCRPPAT3",59,0)HEAD2(INS,SEC,TRD,SEC3,ST3,ST4,POS) ;"RTN","SCRPPAT3",60,0) I (SEC3="""TN""")&($D(@ST4@(INS,TRD,SEC))) D"RTN","SCRPPAT3",61,0) .W !,$G(@ST3@(INS,SEC)) ;write team (sort 1)"RTN","SCRPPAT3",62,0) .W !,$G(@ST4@(INS,TRD,SEC,POS)) ;write practitioner (sort 2)"RTN","SCRPPAT3",63,0) I (SEC3="""PN""")&($D(@ST3@(INS,SEC,TRD))) D"RTN","SCRPPAT3",64,0) .W !,$G(@ST3@(INS,SEC,TRD,POS)) ;write practitioner (sort 1)"RTN","SCRPPAT3",65,0) .W !,$G(@ST4@(INS,TRD)) ;write team (sort 2)"RTN","SCRPPAT3",66,0) Q"RTN","SCRPPAT3",67,0) ;"RTN","SCRPPAT3",68,0)HEADER ;"RTN","SCRPPAT3",69,0) N NXT"RTN","SCRPPAT3",70,0) W !"RTN","SCRPPAT3",71,0) F NXT="H1","H2","H3" W !,$G(@STORE@(NXT))"RTN","SCRPPAT3",72,0) W !"RTN","SCRPPAT3",73,0) Q"RTN","SCRPPAT3",74,0) ;"RTN","SCRPPAT3",75,0)SHEAD ;"RTN","SCRPPAT3",76,0) S @STORE@("H2")="Pt Name""RTN","SCRPPAT3",77,0) S $E(@STORE@("H2"),18)="Pt ID""RTN","SCRPPAT3",78,0) S $E(@STORE@("H1"),24)="M.T.""RTN","SCRPPAT3",79,0) S $E(@STORE@("H2"),24)="Stat""RTN","SCRPPAT3",80,0) S $E(@STORE@("H2"),31)="Elig""RTN","SCRPPAT3",81,0) S $E(@STORE@("H1"),39)="Pat""RTN","SCRPPAT3",82,0) S $E(@STORE@("H2"),39)="Stat""RTN","SCRPPAT3",83,0) S $E(@STORE@("H1"),47)="Last""RTN","SCRPPAT3",84,0) S $E(@STORE@("H2"),47)="Appt""RTN","SCRPPAT3",85,0) S $E(@STORE@("H1"),57)="Nxt""RTN","SCRPPAT3",86,0) S $E(@STORE@("H2"),57)="Appt""RTN","SCRPPAT3",87,0) S $E(@STORE@("H2"),67)="Clinic""RTN","SCRPPAT3",88,0) S $P(@STORE@("H3"),"=",81)="""RTN","SCRPPAT3",89,0) Q"RTN","SCRPPAT3",90,0)ALL ;"RTN","SCRPPAT3",91,0) ;get all practitioners for all teams selected"RTN","SCRPPAT3",92,0) I TEAM=1 D TALL ;all teams selected"RTN","SCRPPAT3",93,0) N TPRC,TIEN,OKAY"RTN","SCRPPAT3",94,0) S TIEN="""RTN","SCRPPAT3",95,0) F  S TIEN=$O(TEAM(TIEN)) Q:TIEN=""!(TIEN'?.N)  D"RTN","SCRPPAT3",96,0) .I $D(TEAM(TIEN)) D"RTN","SCRPPAT3",97,0) ..S TPRC="PRACT""RTN","SCRPPAT3",98,0) ..S OKAY=$$PRTM^SCAPMC1(TIEN,"","","",.TPRC,"ERROR")"RTN","SCRPPAT3",99,0) Q"RTN","SCRPPAT3",100,0) ;"RTN","SCRPPAT3",101,0)TALL ;"RTN","SCRPPAT3",102,0) ;get all active team for divisions selected"RTN","SCRPPAT3",103,0) N NXT,IIEN,NODE"RTN","SCRPPAT3",104,0) S NXT=0,IIEN="""RTN","SCRPPAT3",105,0) ;$O through team file and find all active teams for selected divisions"RTN","SCRPPAT3",106,0) F  S IIEN=$O(^SCTM(404.51,"AINST",IIEN)) Q:IIEN=""  D"RTN","SCRPPAT3",107,0) .I INST=1!$D(INST(IIEN)) D"RTN","SCRPPAT3",108,0) ..S TIEN=0"RTN","SCRPPAT3",109,0) ..F  S TIEN=$O(^SCTM(404.51,"AINST",IIEN,TIEN)) Q:TIEN=""  D"RTN","SCRPPAT3",110,0) ...I $$ACTTM^SCMCTMU(TIEN) S TEAM(TIEN)="""RTN","SCRPPAT3",111,0) Q"RTN","SCRPPAT3",112,0) ;"RTN","SCRPPAT3",113,0)SETUP(IIEN,INAME,TIEN,TNAME,PRAC,PNAME,POSN,TPI) ;"RTN","SCRPPAT3",114,0) ;setup data"RTN","SCRPPAT3",115,0) S IIEN=+$P($G(^SCTM(404.51,TIEN,0)),"^",7) ;institution ien"RTN","SCRPPAT3",116,0) S INAME=$P($G(^DIC(4,IIEN,0)),"^") ;institution name"RTN","SCRPPAT3",117,0) I INAME="" S INAME="[BAD DATA]""RTN","SCRPPAT3",118,0) ;"RTN","SCRPPAT3",119,0) I PNAME="" S PNAME="[BAD DATA]""RTN","SCRPPAT3",120,0) I TNAME="" S TNAME="[BAD DATA]""RTN","SCRPPAT3",121,0) I '$D(@STORE@("PN",IIEN,PRAC,TIEN,TPI)) S @STORE@("PN",IIEN,PRAC,TIEN,TPI)="Practitioner: "_PNAME_" ("_POSN_")""RTN","SCRPPAT3",122,0) I '$D(@STORE@("TN",IIEN,TIEN)) S @STORE@("TN",IIEN,TIEN)="Team: "_TNAME"RTN","SCRPPAT3",123,0) ;"RTN","SCRPPAT3",124,0) I '$D(@STORE@("I",INAME,IIEN)) S @STORE@("I",INAME,IIEN)="",@STORE@(IIEN)="Division: "_INAME"RTN","SCRPPAT3",125,0) I '$D(@STORE@("T",IIEN,TNAME,TIEN)) S @STORE@("T",IIEN,TNAME,TIEN)="""RTN","SCRPPAT3",126,0) I '$D(@STORE@("P",IIEN,PNAME,PRAC,TPI)) S @STORE@("P",IIEN,PNAME,PRAC,TPI)="""RTN","SCRPPAT3",127,0) I '$D(@STORE@("TOTAL",IIEN,PRAC,0)) S @STORE@("TOTAL",IIEN,PRAC,0)=0"RTN","SCRPPAT3",128,0) I '$D(@STORE@("TOTAL",IIEN,PRAC,TIEN)) S @STORE@("TOTAL",IIEN,PRAC,TIEN)=0"RTN","SCRPPAT3",129,0) ;"RTN","SCRPPAT3",130,0) S @STORE@("TH",IIEN,PRAC)="Patient Panel Count for "_PNAME_": ""RTN","SCRPPAT3",131,0) S @STORE@("TH",IIEN,PRAC,TIEN,TPI)="Patient Count for "_PNAME_" ("_POSN_") on Team "_TNAME_": ""RTN","SCRPPAT3",132,0) ;"RTN","SCRPPAT3",133,0) S @STORE@("TH",IIEN)="** Note: Patient Panel Count is a count of unique patients for each practitioner""RTN","SCRPPAT3",134,0) Q 0"RTN","SCRPPAT3",135,0) ;"RTN","SCRPTA2")0^2^B24621196"RTN","SCRPTA2",1,0)SCRPTA2 ;ALB/CMM - Patient Listing w/Team Assignment Data ;02/22/96"RTN","SCRPTA2",2,0) ;;5.3;Scheduling;**41,88,140,148**;AUG 13, 1993"RTN","SCRPTA2",3,0) ;"RTN","SCRPTA2",4,0) ;Patient Listing w/Team Assignment Data Report continued"RTN","SCRPTA2",5,0) ;"RTN","SCRPTA2",6,0)CHK(PTIEN,PIEN) ;assigned to a position"RTN","SCRPTA2",7,0) ;PTIEN - ien of 404.42 Patient Team Assignment file"RTN","SCRPTA2",8,0) ;PIEN - ien of patient file #2"RTN","SCRPTA2",9,0) ;"RTN","SCRPTA2",10,0) N NODE,START,TPIEN,TPNODE,ROL,PRAC"RTN","SCRPTA2",11,0) S START="""RTN","SCRPTA2",12,0) Q:'$D(^SCPT(404.43,"B",PTIEN))&(PRACT'="")"RTN","SCRPTA2",13,0) I '$D(^SCPT(404.43,"B",PTIEN))&(PRACT="") D NOTA(PTIEN,PIEN) Q"RTN","SCRPTA2",14,0) F  S START=$O(^SCPT(404.43,"B",PTIEN,START)) Q:START=""  D"RTN","SCRPTA2",15,0) .S NODE=$G(^SCPT(404.43,START,0))"RTN","SCRPTA2",16,0) .Q:NODE="""RTN","SCRPTA2",17,0) .Q:($P(NODE,"^",4)'="")&($P(NODE,"^",4)<DT)"RTN","SCRPTA2",18,0) .; ^ not assigned currently"RTN","SCRPTA2",19,0) .S TPIEN=+$P(NODE,"^",2) ;team position ien (404.57)"RTN","SCRPTA2",20,0) .I '$D(^SCTM(404.57,TPIEN,0)) D NOTA(PTIEN,PIEN) Q"RTN","SCRPTA2",21,0) .S TPNODE=$G(^SCTM(404.57,TPIEN,0))"RTN","SCRPTA2",22,0) .I TPNODE="" D NOTA(PTIEN,PIEN) Q"RTN","SCRPTA2",23,0) .;"RTN","SCRPTA2",24,0) .S ROL=+$P(TPNODE,"^",3) ;role for position (ien)"RTN","SCRPTA2",25,0) .Q:'$D(ROLE(ROL))&(ROLE'=1)"RTN","SCRPTA2",26,0) .; ^ not a selected role"RTN","SCRPTA2",27,0) .;"RTN","SCRPTA2",28,0) .S PRAC=$$PRACI(TPIEN) ;practitioner information"RTN","SCRPTA2",29,0) .I +PRAC=-1 D NOTA(PTIEN,PIEN) Q"RTN","SCRPTA2",30,0) .I (PRACT'=1)&('$D(PRACT(+PRAC)))&(+PRAC'=0) Q"RTN","SCRPTA2",31,0) .; ^ not a selected practitioner"RTN","SCRPTA2",32,0) .;"RTN","SCRPTA2",33,0) .S POS=$P($G(^SCTM(404.57,TPIEN,0)),"^")"RTN","SCRPTA2",34,0) .D FOUND2(START,NODE,TPIEN,POS,TPNODE,PRAC,PIEN)"RTN","SCRPTA2",35,0) Q"RTN","SCRPTA2",36,0)PRACI(TPIEN) ;"RTN","SCRPTA2",37,0) ;TPIEN - team position ien (404.57)"RTN","SCRPTA2",38,0) ;"RTN","SCRPTA2",39,0) N EN,TPLIST,TPERR,NAME,POS,ERR,NPIEN,NODE,POSIEN"RTN","SCRPTA2",40,0) S TPLIST="TPLST",TPERR="ERR2""RTN","SCRPTA2",41,0) K @TPLIST,@TPERR"RTN","SCRPTA2",42,0) S ERR=$$PRTP^SCAPMC8(TPIEN,,.TPLIST,.TPERR)"RTN","SCRPTA2",43,0) Q:ERR=0!($D(@TPERR)) -1"RTN","SCRPTA2",44,0) S NODE=$G(@TPLIST@(1))"RTN","SCRPTA2",45,0) Q:NODE="" "0^[Not Assigned]""RTN","SCRPTA2",46,0) S NAME=$P(NODE,"^",2) ;practitioner name"RTN","SCRPTA2",47,0) S NPIEN=+$P(NODE,"^") ;practitioner ien"RTN","SCRPTA2",48,0) S POS=$P(NODE,"^",4) ;position name"RTN","SCRPTA2",49,0) S POSIEN=+$P(NODE,"^",3) ;position ien"RTN","SCRPTA2",50,0) I POS="" S POS="[Not Assigned]",POSIEN=0"RTN","SCRPTA2",51,0) I NAME="" S NAME="[Not Assigned]",NPIEN=0"RTN","SCRPTA2",52,0) K @TPLIST,@TPERR"RTN","SCRPTA2",53,0) Q NPIEN_"^"_NAME_"^"_POS_"^"_POSIEN"RTN","SCRPTA2",54,0) ;"RTN","SCRPTA2",55,0)FOUND2(START,NODE,TPIEN,POS,TPNODE,PRAC,PIEN) ;"RTN","SCRPTA2",56,0) ;START - patient team assignment position ien"RTN","SCRPTA2",57,0) ;NODE - patient team position assignment node"RTN","SCRPTA2",58,0) ;TPIEN - team position ien (404.57)"RTN","SCRPTA2",59,0) ;POS - team position"RTN","SCRPTA2",60,0) ;TPNODE - team position node (404.57)"RTN","SCRPTA2",61,0) ;PRAC - practitioner info. NAME IEN^NAME^POS^POSIEN"RTN","SCRPTA2",62,0) ;PIEN - patient ien"RTN","SCRPTA2",63,0) ;"RTN","SCRPTA2",64,0) N PTNAME,PID,ADATE"RTN","SCRPTA2",65,0) S PTNAME=$E($P($G(^DPT(PIEN,0)),"^"),1,20) ;patient name"RTN","SCRPTA2",66,0) S PID=$P($G(^DPT(PIEN,.36)),"^",3),PID=$TR(PID,"-","")"RTN","SCRPTA2",67,0) S PID=$E(PID,6,10) ;last four pid include 5th for pseudo notation"RTN","SCRPTA2",68,0) ;"RTN","SCRPTA2",69,0) S ADATE=$P(NODE,"^",3) ;position assignment date - fm format"RTN","SCRPTA2",70,0) ;convert to external format"RTN","SCRPTA2",71,0) I ADATE'="" S ADATE=$TR($$FMTE^XLFDT(ADATE,"5DF")," ","0")"RTN","SCRPTA2",72,0) ;"RTN","SCRPTA2",73,0) S PNAME=$P(PRAC,"^",2) ;practitioner name"RTN","SCRPTA2",74,0) S PNIEN=$P(PRAC,"^") ;practitioner ien"RTN","SCRPTA2",75,0) ;"RTN","SCRPTA2",76,0) S TIEN=+$P(TPNODE,"^",2) ;ien team file 404.51"RTN","SCRPTA2",77,0) S TMN=$G(^SCTM(404.51,TIEN,0))"RTN","SCRPTA2",78,0) Q:TMN="""RTN","SCRPTA2",79,0) S TNAME=$P(TMN,"^") ;team name"RTN","SCRPTA2",80,0) S PC=$P(TMN,"^",5) ;primary care team 1/0"RTN","SCRPTA2",81,0) S IIEN=+$P(TMN,"^",7) ;institution ien"RTN","SCRPTA2",82,0) S INAME=$P($G(^DIC(4,IIEN,0)),"^") ;institution"RTN","SCRPTA2",83,0) ;"RTN","SCRPTA2",84,0) D FORMAT(IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PNIEN,POS,TPIEN,ADATE,PIEN)"RTN","SCRPTA2",85,0) Q"RTN","SCRPTA2",86,0) ;"RTN","SCRPTA2",87,0)FORMAT(IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PIEN,POS,TPIEN,ADATE,PTIEN) ;"RTN","SCRPTA2",88,0) ;IIEN - institution ien"RTN","SCRPTA2",89,0) ;INAME - institution name"RTN","SCRPTA2",90,0) ;TNAME - team name"RTN","SCRPTA2",91,0) ;TIEN - team ien"RTN","SCRPTA2",92,0) ;PC - primary care 1/0"RTN","SCRPTA2",93,0) ;PTNAME - patient name"RTN","SCRPTA2",94,0) ;PID - last 4 pid plus 5th pseudo"RTN","SCRPTA2",95,0) ;PNAME - practitioner name"RTN","SCRPTA2",96,0) ;PIEN - practitioner ien"RTN","SCRPTA2",97,0) ;POS - position name"RTN","SCRPTA2",98,0) ;TPIEN - position ien"RTN","SCRPTA2",99,0) ;ADATE - assignment date"RTN","SCRPTA2",100,0) ;PTIEN - patient ien"RTN","SCRPTA2",101,0) ;"RTN","SCRPTA2",102,0) I INAME="" S INAME="[BAD DATA]""RTN","SCRPTA2",103,0) I TNAME="" S TNAME="[BAD DATA]""RTN","SCRPTA2",104,0) I PNAME="" S PNAME="[BAD DATA]""RTN","SCRPTA2",105,0) I '$D(@STORE@("I",INAME,IIEN)) S @STORE@("I",INAME,IIEN)="""RTN","SCRPTA2",106,0) I '$D(@STORE@("T",IIEN,TNAME,TIEN)) S @STORE@("T",IIEN,TNAME,TIEN)="""RTN","SCRPTA2",107,0) I '$D(@STORE@("P",IIEN,TIEN,PNAME,PIEN,TPIEN)) S @STORE@("P",IIEN,TIEN,PNAME,PIEN,TPIEN)="""RTN","SCRPTA2",108,0) S @STORE@(IIEN)="Division: "_INAME"RTN","SCRPTA2",109,0) S @STORE@(IIEN,TIEN)="Team:  "_TNAME"RTN","SCRPTA2",110,0) S $E(@STORE@(IIEN,TIEN),40)="Primary Care Team: "_$S(PC=1:"YES",1:"NO")"RTN","SCRPTA2",111,0) ;"RTN","SCRPTA2",112,0) S @STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN)=PTNAME"RTN","SCRPTA2",113,0) S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),23)=PID"RTN","SCRPTA2",114,0) S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),30)=PNAME"RTN","SCRPTA2",115,0) S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),52)=$E(POS,1,16)"RTN","SCRPTA2",116,0) S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),70)=ADATE"RTN","SCRPTA2",117,0) Q"RTN","SCRPTA2",118,0) ;"RTN","SCRPTA2",119,0)NOTA(PTIEN,PIEN) ;"RTN","SCRPTA2",120,0) ;PTIEN - patient team assignment (#404.42)"RTN","SCRPTA2",121,0) ;PIEN - patient ien"RTN","SCRPTA2",122,0) N IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PNIEN,POSIEN,POS,TPIEN,ADATE"RTN","SCRPTA2",123,0) S POS="[Not Assigned]",POSIEN=0"RTN","SCRPTA2",124,0) S PNAME="[Not Assigned]",PNIEN=0"RTN","SCRPTA2",125,0) S ADATE="""RTN","SCRPTA2",126,0) ;"RTN","SCRPTA2",127,0) S PTNAME=$E($P($G(^DPT(PIEN,0)),"^"),1,20) ;patient name"RTN","SCRPTA2",128,0) S PID=$P($G(^DPT(PIEN,.36)),"^",3),PID=$TR(PID,"-","")"RTN","SCRPTA2",129,0) S PID=$E(PID,6,10) ;last 4 plus 5th for psuedo"RTN","SCRPTA2",130,0) ;"RTN","SCRPTA2",131,0) S TIEN=+$P($G(^SCPT(404.42,PTIEN,0)),"^",3) ;team ien"RTN","SCRPTA2",132,0) S TMN=$G(^SCTM(404.51,TIEN,0))"RTN","SCRPTA2",133,0) Q:TMN="""RTN","SCRPTA2",134,0) S TNAME=$P(TMN,"^") ;team name"RTN","SCRPTA2",135,0) S PC=$P(TMN,"^",5) ;primary care team 1/0"RTN","SCRPTA2",136,0) S IIEN=+$P(TMN,"^",7) ;institution ien"RTN","SCRPTA2",137,0) S INAME=$P($G(^DIC(4,IIEN,0)),"^") ;institution name"RTN","SCRPTA2",138,0) ;"RTN","SCRPTA2",139,0) D FORMAT(IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PNIEN,POS,POSIEN,ADATE,PIEN)"RTN","SCRPTA2",140,0) Q"RTN","SCUTBK11")0^39^B29593111"RTN","SCUTBK11",1,0)SCUTBK11 ;ALB/SCK - Scheduling Broker Utilities; 2/2/96 ;9/7/96  17:28"RTN","SCUTBK11",2,0) ;;5.3;Scheduling;**41,54,86,148**;AUG 13, 1993"RTN","SCUTBK11",3,0) ;;1T1;"RTN","SCUTBK11",4,0) ;"RTN","SCUTBK11",5,0) Q"RTN","SCUTBK11",6,0)PARSE(SC) ;"RTN","SCUTBK11",7,0) S SCDFN=$G(SC("DFN"),"")"RTN","SCUTBK11",8,0) S SCPIEN=$G(SC("PIEN"),"")"RTN","SCUTBK11",9,0) S:$D(SC("TEAM")) SCTM=$G(SC("TEAM"))"RTN","SCUTBK11",10,0) S:$D(SC("BEGIN")) SCDT("BEGIN")=$G(SC("BEGIN"))"RTN","SCUTBK11",11,0) S:$D(SC("END")) SCDT("END")=$G(SC("END"))"RTN","SCUTBK11",12,0) I $D(SC("END")) S SCDT("INCL")=0"RTN","SCUTBK11",13,0) S SCFILE=$G(SC("FILE"))"RTN","SCUTBK11",14,0) S SCIEN=$G(SC("IEN"))"RTN","SCUTBK11",15,0) S SCFIELD=$G(SC("FIELD"))"RTN","SCUTBK11",16,0) S SCVAL=$G(SC("VALUE"))"RTN","SCUTBK11",17,0) Q"RTN","SCUTBK11",18,0) ;"RTN","SCUTBK11",19,0)TMLST(SCDATA,SC) ;"RTN","SCUTBK11",20,0) ;  -- Return a list of teams for a patient.  Pass in the DFN and"RTN","SCUTBK11",21,0) ;     optionally a date range and/or a team purpose to restrict the"RTN","SCUTBK11",22,0) ;     team look up.  Return only the team entry, strip out any other"RTN","SCUTBK11",23,0) ;     array items."RTN","SCUTBK11",24,0) ;"RTN","SCUTBK11",25,0) N DFN,SCDT,SCPURP,SCLIST,SCER1,SCOK,SCD"RTN","SCUTBK11",26,0) ;"RTN","SCUTBK11",27,0) D CHK^SCUTBK"RTN","SCUTBK11",28,0) D TMP^SCUTBK"RTN","SCUTBK11",29,0) ;"RTN","SCUTBK11",30,0) S DFN=$G(SC("DFN"))"RTN","SCUTBK11",31,0) S SCDT("BEGIN")=$G(SC("BEGIN"),"")"RTN","SCUTBK11",32,0) I $L(SCDT("BEGIN"))>2 S SCDT("INCL")=$G(SC("INCL"),0)"RTN","SCUTBK11",33,0) S SCDT("END")=$G(SC("END"),"")"RTN","SCUTBK11",34,0) S SCPURP=$G(SC("PURP"),"")"RTN","SCUTBK11",35,0) ;"RTN","SCUTBK11",36,0) S SCOK=$$TMPT^SCAPMC3(DFN,"SCDT","","SCD","SCER1")"RTN","SCUTBK11",37,0) ;"RTN","SCUTBK11",38,0) S I=0 F  S I=$O(SCD(I)) Q:'I  S SCDATA(I)=SCD(I)"RTN","SCUTBK11",39,0)TMQ Q"RTN","SCUTBK11",40,0) ;"RTN","SCUTBK11",41,0)FINDP(SCOUT,SCIN) ; patient lookup used by SC PATIENT LOOKUP rpc"RTN","SCUTBK11",42,0) ;  -from SF/TOAD's modifications using ^TMP instead of SC"RTN","SCUTBK11",43,0) ; input:"RTN","SCUTBK11",44,0) ;   SCIN("VALUE") = value to lookup"RTN","SCUTBK11",45,0) ;     Lookup uses multiple index lookup of File #2"RTN","SCUTBK11",46,0) ; output:"RTN","SCUTBK11",47,0) ;   SCOUT = location of data = ^TMP("DILIST",$J,i,0)"RTN","SCUTBK11",48,0) ;   for i=1:number of records returned: "RTN","SCUTBK11",49,0) ;    DFN^patient name^DOB^PID"RTN","SCUTBK11",50,0) ;     1        2       3   4"RTN","SCUTBK11",51,0) ;"RTN","SCUTBK11",52,0) D FIND^DIC(2,,".01;.03;.363;.09","MPS",SCIN("VALUE"),500)"RTN","SCUTBK11",53,0) I $G(DIERR) D CLEAN^DILF Q"RTN","SCUTBK11",54,0) N SCOUNT S SCOUNT=+^TMP("DILIST",$J,0)"RTN","SCUTBK11",55,0) N SC F SC=1:1:SCOUNT D"RTN","SCUTBK11",56,0) . N NODE"RTN","SCUTBK11",57,0) . S NODE=^TMP("DILIST",$J,SC,0)"RTN","SCUTBK11",58,0) . IF $L($P(NODE,U,4))>5 D"RTN","SCUTBK11",59,0) . . S ^TMP("DILIST",$J,SC,0)=$P(NODE,U,1,4)"RTN","SCUTBK11",60,0) . ELSE  D"RTN","SCUTBK11",61,0) . . N SSN"RTN","SCUTBK11",62,0) . . S SSN=$P(NODE,U,5),SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,11)"RTN","SCUTBK11",63,0) . . S ^TMP("DILIST",$J,SC,0)=$P(NODE,U,1,3)_U_SSN"RTN","SCUTBK11",64,0) K ^TMP("DILIST",$J,0)"RTN","SCUTBK11",65,0) K SCOUT S SCOUT="^TMP(""DILIST"","_$J_")""RTN","SCUTBK11",66,0) Q"RTN","SCUTBK11",67,0)PSLST(SCDATA,SC) ;"RTN","SCUTBK11",68,0) ;"RTN","SCUTBK11",69,0) ;  - Returns a array of positions that show the person currently"RTN","SCUTBK11",70,0) ;    assigned to the position, the preceptor for that position,"RTN","SCUTBK11",71,0) ;    for the patient is assigned to."RTN","SCUTBK11",72,0) ;"RTN","SCUTBK11",73,0) ;    Pass in the Patient's DFN"RTN","SCUTBK11",74,0) ;    To restrict to specific entries, pass in the following:"RTN","SCUTBK11",75,0) ;      Beginning and Ending Date Range "RTN","SCUTBK11",76,0) ;      A specific Team Position"RTN","SCUTBK11",77,0) ;      A Specific User entry (8930)"RTN","SCUTBK11",78,0) ;      A specific Team Purpose.  (Read SCAPMC23 for how it exclude"RTN","SCUTBK11",79,0) ;        a specific team purpose."RTN","SCUTBK11",80,0) ;      A specific role"RTN","SCUTBK11",81,0) ;      Flag whether to include patients associated by enrollement"RTN","SCUTBK11",82,0) ;    "RTN","SCUTBK11",83,0) N SCDT,SCD,SCER1,SCDFN,SCPRP,SCPST,SCRLE,SCIND,SCUSR,SCTM,SCDTE"RTN","SCUTBK11",84,0) ;"RTN","SCUTBK11",85,0) D CHK^SCUTBK"RTN","SCUTBK11",86,0) D TMP^SCUTBK"RTN","SCUTBK11",87,0) ;"RTN","SCUTBK11",88,0) D PARSE(.SC)"RTN","SCUTBK11",89,0) S SCDTE=$G(SCDT("BEGIN"))"RTN","SCUTBK11",90,0) ;"RTN","SCUTBK11",91,0) S CNT=0"RTN","SCUTBK11",92,0) K ^TMP($J,"PSLST")"RTN","SCUTBK11",93,0) S SCOK=$$TPPT^SCAPMC(SCDFN,.SCDT,"","","","","","SCD","SCER1")"RTN","SCUTBK11",94,0) S I=0 F  S I=$O(SCD(I)) Q:'I  D"RTN","SCUTBK11",95,0) . I $D(SCTM) D"RTN","SCUTBK11",96,0) .. Q:$P(SCD(I),U,3)'=SCTM"RTN","SCUTBK11",97,0) .. S ^TMP($J,"PSLST",I)=$P($G(SCD(I)),U,3)_U_$P($G(SCD(I)),U,4)_U_$P($G(SCD(I)),U,1,2)_U_$P($G(SCD(I)),U,7,8)"RTN","SCUTBK11",98,0) . ;"RTN","SCUTBK11",99,0) . I '$D(SCTM) D"RTN","SCUTBK11",100,0) .. S ^TMP($J,"PSLST",I)=$P($G(SCD(I)),U,3)_U_$P($G(SCD(I)),U,4)_U_$P($G(SCD(I)),U,1,2)_U_$P($G(SCD(I)),U,7,8)"RTN","SCUTBK11",101,0) ;"RTN","SCUTBK11",102,0) S CNT=0"RTN","SCUTBK11",103,0) S I="""RTN","SCUTBK11",104,0) F  S I=$O(^TMP($J,"PSLST",I)) Q:'I  D"RTN","SCUTBK11",105,0) . S:'$D(SCDTE) SCDTE=DT"RTN","SCUTBK11",106,0) . S SCPIEN=$P($G(^TMP($J,"PSLST",I)),U,3)"RTN","SCUTBK11",107,0) . S SCDATA(CNT)=^TMP($J,"PSLST",I)_U_$$PSMBR(SCPIEN,SCDTE)_U_+$P($G(^SCPT(404.43,$P($G(^TMP($J,"PSLST",I)),U,2),0)),U,5)_U_+$P($G(^SCTM(404.57,SCPIEN,0)),U,4)"RTN","SCUTBK11",108,0) . S CNT=CNT+1"RTN","SCUTBK11",109,0) K ^TMP($J,"PSLST")"RTN","SCUTBK11",110,0) ;"RTN","SCUTBK11",111,0)PSLTQ Q"RTN","SCUTBK11",112,0) ;"RTN","SCUTBK11",113,0)PSMBR(SCPIEN,SCPDT) ;"RTN","SCUTBK11",114,0) ;"RTN","SCUTBK11",115,0) N SCPRCP,SCMBR,SCPP"RTN","SCUTBK11",116,0) ;"RTN","SCUTBK11",117,0) S SCMBR=$$GETPRTP^SCAPMCU2(SCPIEN,SCPDT)"RTN","SCUTBK11",118,0) ;"RTN","SCUTBK11",119,0) S SCPP=+$P($G(^SCTM(404.57,SCPIEN,0)),U,10)"RTN","SCUTBK11",120,0) S SCPRCP=$S(SCPP>0:$$GETPRTP^SCAPMCU2(SCPP,SCPDT),1:"^")"RTN","SCUTBK11",121,0) Q SCMBR_U_SCPRCP"RTN","SCUTBK11",122,0) ;"RTN","SCUTBK11",123,0)VFILE(SCOK,SC) ;"RTN","SCUTBK11",124,0) N SCFILE,SCIEN,SCFIELD,SCVAL,SCFDA,SCMSG"RTN","SCUTBK11",125,0) ;"RTN","SCUTBK11",126,0) D CHK^SCUTBK"RTN","SCUTBK11",127,0) D TMP^SCUTBK"RTN","SCUTBK11",128,0) ;"RTN","SCUTBK11",129,0) S SCOK=1"RTN","SCUTBK11",130,0) D PARSE(.SC)"RTN","SCUTBK11",131,0) S SCFDA(SCFILE,""_SCIEN_","_"",SCFIELD)=SCVAL"RTN","SCUTBK11",132,0) ;"RTN","SCUTBK11",133,0) D FILE^DIE("K","SCFDA","SCMSG")"RTN","SCUTBK11",134,0) ;"RTN","SCUTBK11",135,0) I $D(SCMSG("DIERR")) D"RTN","SCUTBK11",136,0) . S SCOK=0"RTN","SCUTBK11",137,0) Q"RTN","SCUTBK11",138,0) ;"RTN","SCUTBK11",139,0)SECKEY(SCOK,SCKEY) ;"RTN","SCUTBK11",140,0) ;"RTN","SCUTBK11",141,0) D CHK^SCUTBK"RTN","SCUTBK11",142,0) ;"RTN","SCUTBK11",143,0) S SCOK=$D(^XUSEC(SCKEY,DUZ))"RTN","SCUTBK11",144,0) Q"RTN","SCUTBK11",145,0) ;"RTN","SCUTBK11",146,0)PSALST(SCDATA,SC) ;"RTN","SCUTBK11",147,0) ;"RTN","SCUTBK11",148,0) ;  - Returns a array of positions that show the person currently"RTN","SCUTBK11",149,0) ;    assigned to the position, the preceptor for that position,"RTN","SCUTBK11",150,0) ;    for the patient is assigned to."RTN","SCUTBK11",151,0) ;"RTN","SCUTBK11",152,0) ;    Pass in the Patient's DFN"RTN","SCUTBK11",153,0) ;    To restrict to specific entries, pass in the following:"RTN","SCUTBK11",154,0) ;      Beginning and Ending Date Range "RTN","SCUTBK11",155,0) ;      A specific Team Position"RTN","SCUTBK11",156,0) ;      A Specific User entry (8930)"RTN","SCUTBK11",157,0) ;      A specific Team Purpose.  (Read SCAPMC23 for how it exclude"RTN","SCUTBK11",158,0) ;        a specific team purpose."RTN","SCUTBK11",159,0) ;      A specific role"RTN","SCUTBK11",160,0) ;      Flag whether to include patients associated by enrollement"RTN","SCUTBK11",161,0) ;    "RTN","SCUTBK11",162,0) N SCDT,SCD,SCER1,SCDFN,SCPRP,SCPST,SCRLE,SCIND,SCUSR,SCTM,SCDTE,SCPTTMA"RTN","SCUTBK11",163,0) ;"RTN","SCUTBK11",164,0) D CHK^SCUTBK"RTN","SCUTBK11",165,0) D TMP^SCUTBK"RTN","SCUTBK11",166,0) ;"RTN","SCUTBK11",167,0) D PARSE(.SC)"RTN","SCUTBK11",168,0) S SCPTTMA=$G(SC("TEAMASSIGN")) ;NEW JLU"RTN","SCUTBK11",169,0) S SCDTE=$G(SCDT("BEGIN"))"RTN","SCUTBK11",170,0) ;"RTN","SCUTBK11",171,0) S CNT=0"RTN","SCUTBK11",172,0) K ^TMP($J,"PSLST")"RTN","SCUTBK11",173,0) S SCOK=$$TPPT^SCAPMC(SCDFN,.SCDT,"","","","","","SCD","SCER1")"RTN","SCUTBK11",174,0) S I=0 F  S I=$O(SCD(I)) Q:'I  D"RTN","SCUTBK11",175,0) .Q:$P(SCD(I),U,11)'=SCPTTMA"RTN","SCUTBK11",176,0) .S ^TMP($J,"PSLST",I)=$P($G(SCD(I)),U,3)_U_$P($G(SCD(I)),U,4)_U_$P($G(SCD(I)),U,1,2)_U_$P($G(SCD(I)),U,7,8)"RTN","SCUTBK11",177,0) ;"RTN","SCUTBK11",178,0) ;"RTN","SCUTBK11",179,0) ;;;. I $D(SCTM) D"RTN","SCUTBK11",180,0) ;;;.. Q:$P(SCD(I),U,3)'=SCTM"RTN","SCUTBK11",181,0) ;;;.. S ^TMP($J,"PSLST",I)=$P($G(SCD(I)),U,3)_U_$P($G(SCD(I)),U,4)_U_$P($G(SCD(I)),U,1,2)_U_$P($G(SCD(I)),U,7,8)"RTN","SCUTBK11",182,0) ;;;. ;"RTN","SCUTBK11",183,0) ;;;. I '$D(SCTM) D"RTN","SCUTBK11",184,0) ;;;.. S ^TMP($J,"PSLST",I)=$P($G(SCD(I)),U,3)_U_$P($G(SCD(I)),U,4)_U_$P($G(SCD(I)),U,1,2)_U_$P($G(SCD(I)),U,7,8)"RTN","SCUTBK11",185,0) ;"RTN","SCUTBK11",186,0) ;"RTN","SCUTBK11",187,0) S CNT=0"RTN","SCUTBK11",188,0) S I="""RTN","SCUTBK11",189,0) F  S I=$O(^TMP($J,"PSLST",I)) Q:'I  D"RTN","SCUTBK11",190,0) . S:'$D(SCDTE) SCDTE=DT"RTN","SCUTBK11",191,0) . S SCPIEN=$P($G(^TMP($J,"PSLST",I)),U,3)"RTN","SCUTBK11",192,0) . S SCDATA(CNT)=^TMP($J,"PSLST",I)_U_$$PSMBR(SCPIEN,SCDTE)_U_+$P($G(^SCPT(404.43,$P($G(^TMP($J,"PSLST",I)),U,2),0)),U,5)_U_+$P($G(^SCTM(404.57,SCPIEN,0)),U,4)"RTN","SCUTBK11",193,0) . S CNT=CNT+1"RTN","SCUTBK11",194,0) K ^TMP($J,"PSLST")"RTN","SCUTBK11",195,0) ;"RTN","SCUTBK11",196,0)PSALSTQ Q"RTN","SCUTBK4")0^22^B3479872"RTN","SCUTBK4",1,0)SCUTBK4 ;ALB/JLU;BROKER UTILITIES"RTN","SCUTBK4",2,0) ;;5.3;Scheduling;**148**;AUG 13, 1993"RTN","SCUTBK4",3,0)ACTPOS(RESULTS,SCARY) ;"RTN","SCUTBK4",4,0) ;"RTN","SCUTBK4",5,0) ;This broker entry point returns an array of active positions for a"RTN","SCUTBK4",6,0) ;patient on a specific team."RTN","SCUTBK4",7,0) ;"RTN","SCUTBK4",8,0) ;INPUTS         SCARY - Contains the following subscripted elements"RTN","SCUTBK4",9,0) ;               DFN - DFN of the patient."RTN","SCUTBK4",10,0) ;               BEGIN - The beginning date range."RTN","SCUTBK4",11,0) ;               END - The ending date range."RTN","SCUTBK4",12,0) ;               TEAM - The team associated with the patient."RTN","SCUTBK4",13,0) ;"RTN","SCUTBK4",14,0) ;OUTPUTS        RESULTS - The array of active positions.  The following"RTN","SCUTBK4",15,0) ;               is a description of the piece structure."RTN","SCUTBK4",16,0) ;               PIECE - Description"RTN","SCUTBK4",17,0) ;                 1     IEN of TEAM POSITION FILE(#404.57)"RTN","SCUTBK4",18,0) ;                 2     NAME of Position"RTN","SCUTBK4",19,0) ;                 3     Current effective date"RTN","SCUTBK4",20,0) ;                 4     Pointer to role (403.46)"RTN","SCUTBK4",21,0) ;                 5     Name of Standard role"RTN","SCUTBK4",22,0) ;                 6     Pointer to User Class"RTN","SCUTBK4",23,0) ;                 7     Name of User Class"RTN","SCUTBK4",24,0) ;                 8     IEN of 404.43"RTN","SCUTBK4",25,0) ;"RTN","SCUTBK4",26,0) N SCOK,SCDT,SCDFN,SCTEAM,SCPOS,LP,CNT,SCERR"RTN","SCUTBK4",27,0) ;"RTN","SCUTBK4",28,0) D CHK^SCUTBK"RTN","SCUTBK4",29,0) D TMP^SCUTBK"RTN","SCUTBK4",30,0) ;"RTN","SCUTBK4",31,0) D PARSE(.SCARY) ;parse array for inputs"RTN","SCUTBK4",32,0) K ^TMP($J,"ACTLST")"RTN","SCUTBK4",33,0) ;gets a list o positions for this patient"RTN","SCUTBK4",34,0) S SCOK=$$TPPT^SCAPMC(SCDFN,.SCDT,"","","","","","SCPOS","SCBKERR")"RTN","SCUTBK4",35,0) I 'SCOK G EXIT"RTN","SCUTBK4",36,0) S CNT=1"RTN","SCUTBK4",37,0) ;"RTN","SCUTBK4",38,0) ;loop through positions only getting the ones associated with the team"RTN","SCUTBK4",39,0) ;and that are active."RTN","SCUTBK4",40,0) ;"RTN","SCUTBK4",41,0) F LP=0:0 S LP=$O(SCPOS(LP)) Q:'LP  DO"RTN","SCUTBK4",42,0) .I $P(SCPOS(LP),U,3)'=SCTEAM Q"RTN","SCUTBK4",43,0) .I $P(SCPOS(LP),U,6)]"" Q"RTN","SCUTBK4",44,0) .S ^TMP($J,"ACTLST",CNT)=$P(SCPOS(LP),U,1)_U_$P(SCPOS(LP),U,2)_U_$P(SCPOS(LP),U,5)_U_$P(SCPOS(LP),U,7)_U_$P(SCPOS(LP),U,8)_U_$P(SCPOS(LP),U,9)_U_$P(SCPOS(LP),U,10)_U_$P(SCPOS(LP),U,4)"RTN","SCUTBK4",45,0) .S CNT=CNT+1"RTN","SCUTBK4",46,0) .Q"RTN","SCUTBK4",47,0) ;"RTN","SCUTBK4",48,0)EXIT S RESULTS=$NA(^TMP($J,"ACTLST"))"RTN","SCUTBK4",49,0) Q"RTN","SCUTBK4",50,0) ;"RTN","SCUTBK4",51,0)PARSE(ARY) ;parses the input parameters from the broker."RTN","SCUTBK4",52,0) ;"RTN","SCUTBK4",53,0) S SCDFN=$G(ARY("DFN"))"RTN","SCUTBK4",54,0) S SCDT("BEGIN")=$G(ARY("BEGIN"))"RTN","SCUTBK4",55,0) S SCDT("END")=$G(ARY("END"))"RTN","SCUTBK4",56,0) S SCTEAM=$G(ARY("TEAM"))"RTN","SCUTBK4",57,0) Q"RTN","SD148PT")0^23^B18726773"RTN","SD148PT",1,0)SD148PT ;BP/CMF - UPDATE STANDARD POSTION FILE ;7/17/98@09:30"RTN","SD148PT",2,0) ;;5.3;Scheduling;**148T4**;AUG 13, 1993"RTN","SD148PT",3,0) ;"RTN","SD148PT",4,0) ;;SDA = Fileman Data Array (FDA)"RTN","SD148PT",5,0) ;;SDL = Line Reference"RTN","SD148PT",6,0) ;;SDERR = Error Message Array"RTN","SD148PT",7,0) ;;SDX = Scratch"RTN","SD148PT",8,0) ;;SDY = Scratch"RTN","SD148PT",9,0) ;"RTN","SD148PT",10,0)EN N SDA,SDL,SDX,SDY"RTN","SD148PT",11,0) ;find out if entry exists"RTN","SD148PT",12,0) S SDX=$$FIND1^DIC(403.46,"","X",$$S(1))"RTN","SD148PT",13,0) D W(),W(1)"RTN","SD148PT",14,0) I SDX=0 D GOOD G ENQ"RTN","SD148PT",15,0) I +SDX D OK G ENQ"RTN","SD148PT",16,0) D BAD"RTN","SD148PT",17,0)ENQ Q"RTN","SD148PT",18,0) ;"RTN","SD148PT",19,0)GOOD ;if no entry, create it"RTN","SD148PT",20,0) K SDX"RTN","SD148PT",21,0) D FDA(1)"RTN","SD148PT",22,0) D UPDATE^DIE("","SDA(1)")"RTN","SD148PT",23,0) I '$D(DIERR) D W(25),W(26) Q"RTN","SD148PT",24,0) D W(37)"RTN","SD148PT",25,0) Q"RTN","SD148PT",26,0) ;"RTN","SD148PT",27,0)OK ;if single entry, update/complete it"RTN","SD148PT",28,0) D FDA(,SDX)"RTN","SD148PT",29,0) D FILE^DIE("","SDA(1)")"RTN","SD148PT",30,0) I '$D(DIERR) D W(28),W(29),W(30),W(26) Q"RTN","SD148PT",31,0) D W(37)"RTN","SD148PT",32,0) Q"RTN","SD148PT",33,0) ;"RTN","SD148PT",34,0)BAD ;if many entries, don't update it"RTN","SD148PT",35,0) D W(32),W(25),W(33),W(34),W(35),W(30)"RTN","SD148PT",36,0) Q"RTN","SD148PT",37,0) ;"RTN","SD148PT",38,0)FDA(SDY,SDX) ;"RTN","SD148PT",39,0) ;input: SDY = .01 field?"RTN","SD148PT",40,0) ;input: SDX = filer ien"RTN","SD148PT",41,0) ;output: FDA"RTN","SD148PT",42,0) I $D(SDY) D"RTN","SD148PT",43,0) .S SDX=$$S(4)_$$S(5)"RTN","SD148PT",44,0) .S @SDX@(.01)=$$S(1)"RTN","SD148PT",45,0) E  S SDX=$$S(4)_""""_SDX_","_""""_")""RTN","SD148PT",46,0) S @SDX@(.02)=274  ;hard set pointer field because USR CLASS"RTN","SD148PT",47,0) ;                 ;file may not yet exist on system"RTN","SD148PT",48,0) S SDY=$$S(3)"RTN","SD148PT",49,0) S @SDX@(1)=SDY"RTN","SD148PT",50,0) F SDX=7:1:23 S @SDY@(SDX-6)=$$S(SDX)"RTN","SD148PT",51,0) Q"RTN","SD148PT",52,0) ;"RTN","SD148PT",53,0)W(SDX) ;input: SDX=Line reference"RTN","SD148PT",54,0) ;output: KIDS Message"RTN","SD148PT",55,0) S SDX=$G(SDX,0)"RTN","SD148PT",56,0) D MES^XPDUTL($$S(SDX))"RTN","SD148PT",57,0) Q"RTN","SD148PT",58,0) ;"RTN","SD148PT",59,0)S(SDL) Q $P($T(T+SDL),";;",2)"RTN","SD148PT",60,0) ;"RTN","SD148PT",61,0)T ;; ;;"RTN","SD148PT",62,0)1 ;;CLINICAL NURSE SPECIALIST"RTN","SD148PT",63,0) ;;NURSE CLINICAL SPECIALIST"RTN","SD148PT",64,0) ;;SDA("TEXT")"RTN","SD148PT",65,0)4 ;;SDA(1,403.46,"RTN","SD148PT",66,0) ;;"+1,")"RTN","SD148PT",67,0) ;;"RTN","SD148PT",68,0)7 ;;Masters Degree-prepared, registered nurses with nationally "RTN","SD148PT",69,0) ;;recognized clinical advanced practice certification, accountable for"RTN","SD148PT",70,0) ;;the delivery of comprehensive health and preventive care services "RTN","SD148PT",71,0) ;;across the spectrum of clinical settings.  Uses an analytical"RTN","SD148PT",72,0) ;;framework, such as nursing process, to create an environment "RTN","SD148PT",73,0) ;;that facilitates the delivery of care.  Coordinates and evaluates"RTN","SD148PT",74,0) ;;integrated programs, and provides leadership in improving and"RTN","SD148PT",75,0) ;;sustaining the quality and effectiveness of care in diverse or"RTN","SD148PT",76,0) ;;complex programs. Function as licensed independent practitioners "RTN","SD148PT",77,0) ;;that do not require "supervision" by a physician, physician "RTN","SD148PT",78,0) ;;countersignature of orders or the care they provide. Function "RTN","SD148PT",79,0) ;;autonomously within a defined scope of practice in "RTN","SD148PT",80,0) ;;collaboration with physicians and other health care providers. "RTN","SD148PT",81,0) ;;[REF: IL 10-97-024, dated July 7, 1997: entitled "Under "RTN","SD148PT",82,0) ;;Secretary for Health's Information Letter - Utilization of Nurse "RTN","SD148PT",83,0) ;;Practitioners and Clinical Nurse Specialists" and Nursing"RTN","SD148PT",84,0)23 ;;Qualifications Standards - Nurse Level IV]"RTN","SD148PT",85,0) ;;"RTN","SD148PT",86,0)25 ;;added to Standard Position file."RTN","SD148PT",87,0)26 ;;You may delete the routine "SD148PT" from your system."RTN","SD148PT",88,0) ;;"RTN","SD148PT",89,0)28 ;;in your Standard Position file has been updated."RTN","SD148PT",90,0) ;;The user class and description fields have been modified."RTN","SD148PT",91,0)30 ;;There should be no local entries in this file!"RTN","SD148PT",92,0) ;;"RTN","SD148PT",93,0)32 ;;has not been"RTN","SD148PT",94,0) ;;There are multiple entries of this standard position."RTN","SD148PT",95,0) ;;Clean up the multiple entries, and then run "EN^SD148PT""RTN","SD148PT",96,0)35 ;;to add the supported position."RTN","SD148PT",97,0) ;;"RTN","SD148PT",98,0)37 ;;Error during processing!  Standard Position file not updated!"RTN","SDCD")0^17^B9650048"RTN","SDCD",1,0)SDCD ;BSN/GRR - DISCHARGE PATIENT FROM CLINIC ;3/15/91  11:24 ;"RTN","SDCD",2,0) ;;5.3;Scheduling;**41,148**;AUG 13, 1993"RTN","SDCD",3,0)15 D:'$D(DT) DT^SDUTL I '$G(SDFN) S DIC="^DPT(",DIC(0)="AEQM" D ^DIC G:Y=-1 QUIT"RTN","SDCD",4,0) S:$G(SDFN) Y=+SDFN S DA(2)=+Y"RTN","SDCD",5,0) I '$G(SDCLN) G:'$D(^DPT(+Y,"DE")) NOPE S DIC="^DPT("_DA(2)_",""DE"",",DIC("S")="I $P(^(0),""^"",2)']""""",VAUTSTR="clinic",VAUTNI=2,VAUTVB="VAUTC" D FIRST^VAUTOMA K DIC("S") Q:Y<0"RTN","SDCD",6,0) I $G(SDCLN) D  G QUIT:'$O(VAUTC(0))"RTN","SDCD",7,0) .S VAUTC=0,VAUTC(+$O(^DPT(DA(2),"DE","B",+SDCLN,99999),-1))=+SDCLN"RTN","SDCD",8,0) .I '$O(VAUTC(0)) W !!,*7,">>> Patient not enrolled in '",$S($D(^SC(+SDCLN,0)):$P(^(0),"^"),1:"Unknown"),"' clinic." S SDAMERR=1"RTN","SDCD",9,0) I VAUTC=1 F I=0:0 S I=$O(^DPT(DA(2),"DE",I)) Q:'I  S CLINIC=^DPT(DA(2),"DE",I,0) I $P(CLINIC,U,2)']"" S VAUTC(I)=+CLINIC"RTN","SDCD",10,0) D BEFORE^SCMCEV3(DA(2)) ;setup before values"RTN","SDCD",11,0) F I=0:0 S I=$O(VAUTC(I)) Q:'I  S DA(1)=I,SC=VAUTC(I) D DIS"RTN","SDCD",12,0) I '$O(VAUTC(0)) W !!,*7,">>> Patient is not actively enrolled in any clinics." S SDAMERR=1"RTN","SDCD",13,0) I '$D(SDAMERR) D AFTER^SCMCEV3(DA(2)) ;setup after values"RTN","SDCD",14,0) ;call team event driver"RTN","SDCD",15,0) I '$D(SDAMERR) D INVOKE^SCMCEV3(DA(2))"RTN","SDCD",16,0) G 15:'$G(SDFN)"RTN","SDCD",17,0)QUIT ;"RTN","SDCD",18,0) K CLINIC,DFN,SC,SDF,SDST,VAUTC,VAUTD,VAUTNI,VAUSTR,VAUTVB,DIC"RTN","SDCD",19,0) Q"RTN","SDCD",20,0)DIS ;"RTN","SDCD",21,0) S SDF=0"RTN","SDCD",22,0) I $P(^DPT(DA(2),"DE",DA(1),0),"^",2)]"" W *7,*7,!,"PATIENT ALREADY DISCHARGED FROM '",$S($D(^SC(SC,0)):$P(^(0),U),1:"UNKNOWN"),"' CLINIC",*7,*7 S SDAMERR=1 Q"RTN","SDCD",23,0) W !!,"***Discharging patient from ",$S($D(^SC(SC,0)):$P(^(0),U),1:"UNKNOWN")," Clinic***",!"RTN","SDCD",24,0) F XX=DT_.2359:0 S XX=$O(^DPT(DA(2),"S",XX)) Q:XX'>0  I $P(^(XX,0),"^",1)=SC,$P(^(0),"^",2)=""!($P(^(0),"^",2)="I") W !?10,*7,"PATIENT HAS FUTURE APPOINTMENT(S) IN THIS CLINIC" S SDF=1"RTN","SDCD",25,0) I 'SDF F XX=0:0 S XX=$O(^DPT(DA(2),"DE",DA(1),1,XX)) Q:XX=""  D STAT I SDST']"" S DIE="^DPT("_DA(2)_",""DE"","_DA(1)_",1,",DA=XX,DR="3"_$S($G(SCDISCH):"///"_SCDISCH,1:"")_";I 'X S Y=0;I X S XD=1;4" D ^DIE"RTN","SDCD",26,0) W !,*7,"Patient ",$S('$D(XD):"NOT ",XD=2:"ALREADY ",1:""),"Discharged from clinic !!",! S:SDF SDF=0,SDAMERR=1 K XD"RTN","SDCD",27,0) Q"RTN","SDCD",28,0)NOPE W !,*7,"PATIENT NOT ENROLLED IN ANY CLINICS!!" G QUIT:$G(SDFN),15"RTN","SDCD",29,0)STAT ;ck if already discharged"RTN","SDCD",30,0) S SDST=$P(^DPT(DA(2),"DE",DA(1),1,XX,0),U,3) Q:SDST']"""RTN","SDCD",31,0) S DIE="^DPT("_DA(2)_",""DE"","_DA(1)_",1,",DA=XX,DR="3////^S X=SDST""RTN","SDCD",32,0) L @(DIE_XX_")"):2 G:'$T STAT D ^DIE L  S:'$D(XD) XD=2 Q"RTN","SDUTL3")0^1^B5561693"RTN","SDUTL3",1,0)SDUTL3 ;ALB/REW - Primary Care API Calls ; 15-May-1995"RTN","SDUTL3",2,0) ;;5.3;Scheduling;**30,39,41,148**;Aug 13, 1993"RTN","SDUTL3",3,0) ;"RTN","SDUTL3",4,0)OUTPTPR(DFN,SCDATE,SCPCROLE) ;given patient, return internal^external of the pc practitioner"RTN","SDUTL3",5,0) ; Input: DFN - ien of patient file (#2)"RTN","SDUTL3",6,0) ;     SCDATE - Relevant Date (Default=DT)"RTN","SDUTL3",7,0) ;   SCPCROLE - Type of PC Role (Default =1 (PC Practitioner),2=Attending"RTN","SDUTL3",8,0) ; Returned: pointer to file #200^external value of name "RTN","SDUTL3",9,0) ;           or, if error or none defined, returns a 0 or null"RTN","SDUTL3",10,0) ; Note: This call will continue to be supported with the PCMM release"RTN","SDUTL3",11,0) ;       additional, optional parameters may be added (e.g. effective dt)"RTN","SDUTL3",12,0) ;"RTN","SDUTL3",13,0) Q:'$G(DFN) 0"RTN","SDUTL3",14,0) S SCDATE=$G(SCDATE,DT)"RTN","SDUTL3",15,0) S SCPCROLE=$G(SCPCROLE,1)"RTN","SDUTL3",16,0) Q $$NMPCPR^SCAPMCU2(.DFN,.SCDATE,.SCPCROLE)"RTN","SDUTL3",17,0) ;"RTN","SDUTL3",18,0)OUTPTTM(DFN,SCDATE,ASSTYPE) ;given patient, return internal^external of the pc team"RTN","SDUTL3",19,0) ;Input: DFN - ien of patient file (#2)"RTN","SDUTL3",20,0) ;    SCDATE - Date of interest (Default=dt)"RTN","SDUTL3",21,0) ;   ASSTYPE - Assignment Type (Default=1: PC Team)"RTN","SDUTL3",22,0) ;  "RTN","SDUTL3",23,0) ; Returned: pointer to team file (#404.51)"RTN","SDUTL3",24,0) ;           or, if error or none defined, returns 0 or null"RTN","SDUTL3",25,0) ; Note: This call will continue to be supported with the PCMM release"RTN","SDUTL3",26,0) ;       additional, optional parameters may be added (e.g. effective dt)"RTN","SDUTL3",27,0) ;"RTN","SDUTL3",28,0) Q:'$G(DFN) 0"RTN","SDUTL3",29,0) S SCDATE=$G(SCDATE,DT)"RTN","SDUTL3",30,0) S ASSTYPE=$G(ASSTYPE,1)"RTN","SDUTL3",31,0) Q $$NMPCTM^SCAPMCU2(.DFN,.SCDATE,.ASSTYPE)"RTN","SDUTL3",32,0) ;"RTN","SDUTL3",33,0)INPTPR(DFN,PRACT) ;store current PC practitioner; return SDOKS=1, if OK"RTN","SDUTL3",34,0) ; Input: DFN:    ien of patient file (#2)"RTN","SDUTL3",35,0) ;        PRACT:  ien of file #200 if adding,changing field"RTN","SDUTL3",36,0) ;                null or '@' if deleting field"RTN","SDUTL3",37,0) ; Output:SDOKS:  0, if fails to store, 1 otherwise"RTN","SDUTL3",38,0) ;"RTN","SDUTL3",39,0) ; Note: For now this data is stored in field #404.01 of the patient file"RTN","SDUTL3",40,0) ; with the PCMM release this data will be stored in a time-sensitive"RTN","SDUTL3",41,0) ; fashion in another file."RTN","SDUTL3",42,0) ; ** Many programmers will choose to do a simple DIE call or add these"RTN","SDUTL3",43,0) ;    two fields to a local Registration template.  If this is done,"RTN","SDUTL3",44,0) ;    the Registration template or code must be revised after the "RTN","SDUTL3",45,0) ;    PCMM release."RTN","SDUTL3",46,0) ; "RTN","SDUTL3",47,0) ; Selected NEW PERSON entry must be active and must hold provider key"RTN","SDUTL3",48,0) I '$G(DFN)!('$D(PRACT)#2)!('$D(^DPT(+DFN,0))) S SDOKS=0 Q"RTN","SDUTL3",49,0) D EN^DDIOL("Note: This is NOT automatically added to PCMM Files")"RTN","SDUTL3",50,0) D EN^DDIOL("This data should now be entered via PCMM Input Screens")"RTN","SDUTL3",51,0) S SDOKS=1"RTN","SDUTL3",52,0) N DIE,DIC,DR,DA,X"RTN","SDUTL3",53,0) I PRACT=""!(PRACT="@") D  G QTIPR"RTN","SDUTL3",54,0) .S DIE="^DPT(""RTN","SDUTL3",55,0) .S DR="404.01////^S X=""@""""RTN","SDUTL3",56,0) .S DA=DFN"RTN","SDUTL3",57,0) .D ^DIE"RTN","SDUTL3",58,0) I '$$SCREEN^DGPMDD(PRACT) S SDOKS=0 Q"RTN","SDUTL3",59,0) I $D(^VA(200,+PRACT,0)) D"RTN","SDUTL3",60,0) .S DIE="^DPT(""RTN","SDUTL3",61,0) .S DR="404.01////^S X=+PRACT""RTN","SDUTL3",62,0) .S DA=DFN"RTN","SDUTL3",63,0) .D ^DIE"RTN","SDUTL3",64,0) E  D"RTN","SDUTL3",65,0) .S SDOKS=0"RTN","SDUTL3",66,0)QTIPR Q"RTN","SDUTL3",67,0)INPTTM(DFN,TEAM) ;store current PC team; return SDOKS=0, if fails"RTN","SDUTL3",68,0) ; Input: DFN:   ien of patient file (#2)"RTN","SDUTL3",69,0) ;        TEAM:  ien of file #404.51 if adding,changing field"RTN","SDUTL3",70,0) ;               null or '@' if deleting field"RTN","SDUTL3",71,0) ; Output:SDOKS: 0, if fails to store, 1 otherwise"RTN","SDUTL3",72,0) ;"RTN","SDUTL3",73,0) ; Currently this data is stored in field #404.02 of the patient file"RTN","SDUTL3",74,0) ; with the PCMM release this data will be stored in a time-sensitive"RTN","SDUTL3",75,0) ; fashion in another file."RTN","SDUTL3",76,0) ; this call will continue to be useable after the PCMM release where"RTN","SDUTL3",77,0) ; it will use DT as the effective date-time"RTN","SDUTL3",78,0) ; ** Many programmers will choose to do a simple DIE call or add these"RTN","SDUTL3",79,0) ;    two fields to a local Registration template.  If this is done,"RTN","SDUTL3",80,0) ;    the Registration template or code must be revised after the "RTN","SDUTL3",81,0) ;    PCMM release."RTN","SDUTL3",82,0) ; "RTN","SDUTL3",83,0) I '$G(DFN)!('$D(TEAM)#2)!('$D(^DPT(+DFN,0))) S SDOKS=0 Q"RTN","SDUTL3",84,0) D EN^DDIOL("This data should now be entered via PCMM Input Screens")"RTN","SDUTL3",85,0) N DIE,DIC,DR,DA,X"RTN","SDUTL3",86,0) S SDOKS=1"RTN","SDUTL3",87,0) I TEAM=""!(TEAM="@") D  G QTITM"RTN","SDUTL3",88,0) .S DIE="^DPT(""RTN","SDUTL3",89,0) .S DR="404.02////^S X=""@""""RTN","SDUTL3",90,0) .S DA=DFN"RTN","SDUTL3",91,0) .D ^DIE"RTN","SDUTL3",92,0) I $D(^SCTM(404.51,+TEAM,0)) D"RTN","SDUTL3",93,0) .S DIE="^DPT(""RTN","SDUTL3",94,0) .S DR="404.02////^S X=+TEAM""RTN","SDUTL3",95,0) .S DA=DFN"RTN","SDUTL3",96,0) .D ^DIE"RTN","SDUTL3",97,0) E  D"RTN","SDUTL3",98,0) .S SDOKS=0"RTN","SDUTL3",99,0)QTITM Q"VER")8.0^21.0"^DD",2,2,404.01,0)*CURRENT PC PRACTITIONER^*P200'^VA(200,^PC;1^S DIC("S")="I $$SCREEN^DGPMDD(Y,DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X"^DD",2,2,404.01,3)This is the patient's Primary Care Practitioner."^DD",2,2,404.01,4)D HELP^DGPMDD(DA)"^DD",2,2,404.01,12)Select active providers only."^DD",2,2,404.01,12.1)S DIC("S")="I $$SCREEN^DGPMDD(Y,DA)""^DD",2,2,404.01,21,0)^^1^1^2950607^^^^"^DD",2,2,404.01,21,1,0)This field stores the patient's Current Primary Care Practitioner."^DD",2,2,404.01,23,0)^^3^3^2950607^^^"^DD",2,2,404.01,23,1,0)Programmers should use the input & output APIs for this field in order"^DD",2,2,404.01,23,2,0)to be compatible with changes in the Primary Care Management Module"^DD",2,2,404.01,23,3,0)Release in winter of 1995-1996."^DD",2,2,404.01,"DT")2980812"^DD",2,2,404.02,0)*CURRENT PC TEAM^P404.51'^SCTM(404.51,^PC;2^Q"^DD",2,2,404.02,3)This is the patient's Primary Care Team."^DD",2,2,404.02,21,0)^^1^1^2950602^^^"^DD",2,2,404.02,21,1,0)This field contains the patients's Primary Care Team."^DD",2,2,404.02,23,0)^^4^4^2950602^^"^DD",2,2,404.02,23,1,0)This field points to the TEAM (#404.51) File (distributed with SD*5.3*30)."^DD",2,2,404.02,23,2,0)Programmers should use the input & output APIs for this field in order"^DD",2,2,404.02,23,3,0)to be compatible with changes in the Primary Care Management Module"^DD",2,2,404.02,23,4,0)Release in winter of 1995-1996."^DD",2,2,404.02,"DT")2980812**END****END**