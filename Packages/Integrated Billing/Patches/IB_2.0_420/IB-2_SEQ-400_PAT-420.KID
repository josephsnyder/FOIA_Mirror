Released IB*2*420 SEQ #400
Extracted from mail message
**KIDS**:IB*2.0*420^

**INSTALL NAME**
IB*2.0*420
"BLD",8112,0)
IB*2.0*420^INTEGRATED BILLING^0^3090810^y
"BLD",8112,1,0)
^^3^3^3090805^
"BLD",8112,1,1,0)
This patch addressed two issues. The first issue is to change the
"BLD",8112,1,2,0)
assignment benefits code for Tricare claims. The second issue concerns a
"BLD",8112,1,3,0)
prescription charge attaching to a wrong patient.
"BLD",8112,4,0)
^9.64PA^364.7^1
"BLD",8112,4,364.7,0)
364.7
"BLD",8112,4,364.7,222)
n^n^f^^n^^y^o^n
"BLD",8112,4,364.7,224)
I Y=193
"BLD",8112,4,"B",364.7,364.7)

"BLD",8112,6.3)
6
"BLD",8112,"ABPKG")
n
"BLD",8112,"KRN",0)
^9.67PA^779.2^20
"BLD",8112,"KRN",.4,0)
.4
"BLD",8112,"KRN",.401,0)
.401
"BLD",8112,"KRN",.402,0)
.402
"BLD",8112,"KRN",.403,0)
.403
"BLD",8112,"KRN",.5,0)
.5
"BLD",8112,"KRN",.84,0)
.84
"BLD",8112,"KRN",3.6,0)
3.6
"BLD",8112,"KRN",3.8,0)
3.8
"BLD",8112,"KRN",9.2,0)
9.2
"BLD",8112,"KRN",9.8,0)
9.8
"BLD",8112,"KRN",9.8,"NM",0)
^9.68A^7^2
"BLD",8112,"KRN",9.8,"NM",6,0)
IBEFUNC^^0^B52318807
"BLD",8112,"KRN",9.8,"NM",7,0)
IBOLK^^0^B17698535
"BLD",8112,"KRN",9.8,"NM","B","IBEFUNC",6)

"BLD",8112,"KRN",9.8,"NM","B","IBOLK",7)

"BLD",8112,"KRN",19,0)
19
"BLD",8112,"KRN",19.1,0)
19.1
"BLD",8112,"KRN",101,0)
101
"BLD",8112,"KRN",409.61,0)
409.61
"BLD",8112,"KRN",771,0)
771
"BLD",8112,"KRN",779.2,0)
779.2
"BLD",8112,"KRN",870,0)
870
"BLD",8112,"KRN",8989.51,0)
8989.51
"BLD",8112,"KRN",8989.52,0)
8989.52
"BLD",8112,"KRN",8994,0)
8994
"BLD",8112,"KRN","B",.4,.4)

"BLD",8112,"KRN","B",.401,.401)

"BLD",8112,"KRN","B",.402,.402)

"BLD",8112,"KRN","B",.403,.403)

"BLD",8112,"KRN","B",.5,.5)

"BLD",8112,"KRN","B",.84,.84)

"BLD",8112,"KRN","B",3.6,3.6)

"BLD",8112,"KRN","B",3.8,3.8)

"BLD",8112,"KRN","B",9.2,9.2)

"BLD",8112,"KRN","B",9.8,9.8)

"BLD",8112,"KRN","B",19,19)

"BLD",8112,"KRN","B",19.1,19.1)

"BLD",8112,"KRN","B",101,101)

"BLD",8112,"KRN","B",409.61,409.61)

"BLD",8112,"KRN","B",771,771)

"BLD",8112,"KRN","B",779.2,779.2)

"BLD",8112,"KRN","B",870,870)

"BLD",8112,"KRN","B",8989.51,8989.51)

"BLD",8112,"KRN","B",8989.52,8989.52)

"BLD",8112,"KRN","B",8994,8994)

"BLD",8112,"QUES",0)
^9.62^^
"BLD",8112,"REQB",0)
^9.611^2^2
"BLD",8112,"REQB",1,0)
IB*2.0*199^2
"BLD",8112,"REQB",2,0)
IB*2.0*327^2
"BLD",8112,"REQB","B","IB*2.0*199",1)

"BLD",8112,"REQB","B","IB*2.0*327",2)

"DATA",364.7,193,0)
1035^N^5^^^^N^0
"DATA",364.7,193,1)
K IBXDATA S IBIFN=IBXIEN N IBZZ S IBZZ=$$MCRONBIL^IBEFUNC(IBIFN,"",1) S IBXDATA=$S(IBZZ:"A",IBZZ=0:"C",1:"")
"DATA",364.7,193,3,0)
^^1^1^3030723^^^^
"DATA",364.7,193,3,1,0)
MEDICARE ASSIGNMENT CODE: A = ASSIGNED and C = Not Assigned.
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^n^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I Y=193
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
420^3090810
"PKG",200,22,1,"PAH",1,1,0)
^^3^3^3090810
"PKG",200,22,1,"PAH",1,1,1,0)
This patch addressed two issues. The first issue is to change the
"PKG",200,22,1,"PAH",1,1,2,0)
assignment benefits code for Tricare claims. The second issue concerns a
"PKG",200,22,1,"PAH",1,1,3,0)
prescription charge attaching to a wrong patient.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBEFUNC")
0^6^B52318807^B47438335
"RTN","IBEFUNC",1,0)
IBEFUNC ;ALB/RLW - EXTRINSIC FUNCTIONS ;12-JUN-92
"RTN","IBEFUNC",2,0)
 ;;2.0;INTEGRATED BILLING;**55,91,106,139,51,153,232,155,249,327,420**;21-MAR-94;Build 6
"RTN","IBEFUNC",3,0)
 ;
"RTN","IBEFUNC",4,0)
ETXT(X) ; -- output error text from 350.8
"RTN","IBEFUNC",5,0)
 ; -- input error code
"RTN","IBEFUNC",6,0)
 N Y S Y=X
"RTN","IBEFUNC",7,0)
 I X="" G ETXTQ
"RTN","IBEFUNC",8,0)
 S Y=$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)),U,2)
"RTN","IBEFUNC",9,0)
ETXTQ Q Y
"RTN","IBEFUNC",10,0)
 ;
"RTN","IBEFUNC",11,0)
IGN(X,Y) ; ignore means test? for appt type on dates
"RTN","IBEFUNC",12,0)
 ; -- input x = mas appt type
"RTN","IBEFUNC",13,0)
 ;          y = appt date
"RTN","IBEFUNC",14,0)
 ;    output  = true if this appt type should not be billed for
"RTN","IBEFUNC",15,0)
 ;              Means Test billing (352.1,.04) for given date
"RTN","IBEFUNC",16,0)
 ;
"RTN","IBEFUNC",17,0)
 I '$G(X)!('$G(Y)) Q 1
"RTN","IBEFUNC",18,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,4)
"RTN","IBEFUNC",19,0)
 ;
"RTN","IBEFUNC",20,0)
DSP(X,Y) ; display on input screen?
"RTN","IBEFUNC",21,0)
 ; --    input X = mas appt type (P409.1)
"RTN","IBEFUNC",22,0)
 ;             Y = date
"RTN","IBEFUNC",23,0)
 ;       output  = true if appt type X (352.1,.02) should be displayed as
"RTN","IBEFUNC",24,0)
 ;          a potential billable visit (352.1,.06) on given date Y (352.1,.03)
"RTN","IBEFUNC",25,0)
 ;
"RTN","IBEFUNC",26,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",27,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",28,0)
 ;
"RTN","IBEFUNC",29,0)
RPT(X,Y) ; print on report?
"RTN","IBEFUNC",30,0)
 ; -- input X = mas appt type (P409.1)
"RTN","IBEFUNC",31,0)
 ;          Y = date
"RTN","IBEFUNC",32,0)
 ;    output  = true if appt type X (352.1,.02) should be printed on 'Vets w/ Ins and Opt
"RTN","IBEFUNC",33,0)
 ;               Visits' report (352.1,.05) on given date Y (352.1,.06)
"RTN","IBEFUNC",34,0)
 ;
"RTN","IBEFUNC",35,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",36,0)
 Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",37,0)
 ;
"RTN","IBEFUNC",38,0)
NBDIS(X,Y) ; Is disposition non-billable?
"RTN","IBEFUNC",39,0)
 ; -- input X = disposition (P37)
"RTN","IBEFUNC",40,0)
 ;          Y = date of appt
"RTN","IBEFUNC",41,0)
 ;    output  = true (1) if disposition should be ignored for
"RTN","IBEFUNC",42,0)
 ;              Means test billing (352.2,.03) for given date
"RTN","IBEFUNC",43,0)
 ;
"RTN","IBEFUNC",44,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",45,0)
 Q +$P($G(^IBE(352.2,+$O(^(+$O(^IBE(352.2,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",46,0)
 ;
"RTN","IBEFUNC",47,0)
NBCSC(X,Y) ; Is clinic stop code non-billable?
"RTN","IBEFUNC",48,0)
 ; -- input X = clinic stop code (P40.7)
"RTN","IBEFUNC",49,0)
 ;          Y = date of appt
"RTN","IBEFUNC",50,0)
 ;    output  = true (1) if clinic stop code should be ignored for
"RTN","IBEFUNC",51,0)
 ;              Means test billing (352.3,.03) for given date
"RTN","IBEFUNC",52,0)
 ;
"RTN","IBEFUNC",53,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",54,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",55,0)
 ;
"RTN","IBEFUNC",56,0)
NBCL(X,Y) ; Is clinic non-billable?
"RTN","IBEFUNC",57,0)
 ; -- input X = clinic (P44)
"RTN","IBEFUNC",58,0)
 ;          Y = date of appt
"RTN","IBEFUNC",59,0)
 ;    output  = true (1) if clinic should be ignored for
"RTN","IBEFUNC",60,0)
 ;              Means test billing (352.4,.03) for given date
"RTN","IBEFUNC",61,0)
 ;
"RTN","IBEFUNC",62,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",63,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDT",+X,-(Y+.1))),0)),0)),U,3)
"RTN","IBEFUNC",64,0)
 ;
"RTN","IBEFUNC",65,0)
NBST(X,Y) ; Is clinic stop code non-billable for Third Party?
"RTN","IBEFUNC",66,0)
 ; -- input X = clinic stop code (P40.7), Y = appt date
"RTN","IBEFUNC",67,0)
 ;    output  = true (1) if stop non-billable for Third Party (352.3,.05) for given dt
"RTN","IBEFUNC",68,0)
 ;
"RTN","IBEFUNC",69,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",70,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",71,0)
 ;
"RTN","IBEFUNC",72,0)
NBCT(X,Y) ; Is clinic non-billable for Third Party?
"RTN","IBEFUNC",73,0)
 ; -- input X = clinic (P44), Y = appt dt
"RTN","IBEFUNC",74,0)
 ;    output  = true (1) if clinic non-billable for Third Party (352.4,.05) for given date
"RTN","IBEFUNC",75,0)
 ;
"RTN","IBEFUNC",76,0)
 I '$G(X)!('$G(Y)) Q 0
"RTN","IBEFUNC",77,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,5)
"RTN","IBEFUNC",78,0)
 ;
"RTN","IBEFUNC",79,0)
NABST(X,Y) ; Returns true (1) if stop code flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",80,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",81,0)
 Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",82,0)
 ;
"RTN","IBEFUNC",83,0)
NABCT(X,Y) ; Returns true (1) if clinic is flagged to be ignored by Third Party auto biller (use DT)
"RTN","IBEFUNC",84,0)
 S:'$G(Y) Y=DT I '$G(X) Q 0
"RTN","IBEFUNC",85,0)
 Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDTT2",+X,-(Y+.1))),0)),0)),U,6)
"RTN","IBEFUNC",86,0)
 ;
"RTN","IBEFUNC",87,0)
PT(DFN) ;returns (patient name^long pat id^short pat id) or null if not found
"RTN","IBEFUNC",88,0)
 N X,IBX S X="" I $D(DFN) S X=$G(^DPT(+DFN,0)) I X'="" S X=$P(X,U,1)_U_$P($G(^DPT(DFN,.36)),U,3,4) D
"RTN","IBEFUNC",89,0)
 . S IBX=$P(^DPT(+DFN,0),U,9)
"RTN","IBEFUNC",90,0)
 . I $P(X,U,2)="" S $P(X,U,2)=$E(IBX,1,3)_"-"_$E(IBX,4,5)_"-"_$E(IBX,6,10)
"RTN","IBEFUNC",91,0)
 . I $P(X,U,3)="" S $P(X,U,3)=$E(IBX,6,10)
"RTN","IBEFUNC",92,0)
 Q X
"RTN","IBEFUNC",93,0)
 ;
"RTN","IBEFUNC",94,0)
EXSET(X,D0,D1) ;returns external value of a set in file D0, field D1
"RTN","IBEFUNC",95,0)
 Q $$EXPAND^IBTRE($G(D0),$G(D1),$G(X))
"RTN","IBEFUNC",96,0)
 ;
"RTN","IBEFUNC",97,0)
BABCSC(DFN,IBDT) ; -- any billable Third Party visits in encounter file for patient
"RTN","IBEFUNC",98,0)
 ;  -- Input  dfn = patient,  ibdt = date
"RTN","IBEFUNC",99,0)
 ;     output     = 1 if any billable stop on date OR 0 if none
"RTN","IBEFUNC",100,0)
 ;
"RTN","IBEFUNC",101,0)
 N IBX,IBVAL,IBCBK,IBFILTER
"RTN","IBEFUNC",102,0)
 S IBX=0
"RTN","IBEFUNC",103,0)
 I '$G(DFN)!('$G(IBDT)) G BABQ
"RTN","IBEFUNC",104,0)
 ;
"RTN","IBEFUNC",105,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT\1,IBVAL("EDT")=IBDT\1+.24
"RTN","IBEFUNC",106,0)
 ;Ignore if not chkd out, no stop, non-billable stop, non-billable clinic
"RTN","IBEFUNC",107,0)
 S IBFILTER=""
"RTN","IBEFUNC",108,0)
 S IBCBK="I $P(Y0,U,12)=2,$P(Y0,U,3),'$$NBST^IBEFUNC($P(Y0,U,3),+Y0),'$$NBCT^IBEFUNC(+$P(Y0,U,4),+Y0) S (IBX,SDSTOP)=1"
"RTN","IBEFUNC",109,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBEFUNC",110,0)
 ;
"RTN","IBEFUNC",111,0)
BABQ Q IBX
"RTN","IBEFUNC",112,0)
 ;
"RTN","IBEFUNC",113,0)
APPTCT(IBOE0) ; Determine if appt encounter/appt has valid status for billing
"RTN","IBEFUNC",114,0)
 ; Returns 1 if valid, 0 if not
"RTN","IBEFUNC",115,0)
 ; IBOE0 = the encounter's 0-node (input)
"RTN","IBEFUNC",116,0)
 N STAT
"RTN","IBEFUNC",117,0)
 S STAT=$P(IBOE0,U,12) ;Encounter stat
"RTN","IBEFUNC",118,0)
 I STAT=14 S STAT=2
"RTN","IBEFUNC",119,0)
 ; Assume 1,2 (and 14 sometimes) are valid, 8 = INPATIENT
"RTN","IBEFUNC",120,0)
 Q STAT<3
"RTN","IBEFUNC",121,0)
 ;
"RTN","IBEFUNC",122,0)
NCTCL(IBOE0) ; Determine if a clinic for an outpt encounter is non-count
"RTN","IBEFUNC",123,0)
 ; IBOE0 = the 0-node of the encounter
"RTN","IBEFUNC",124,0)
 Q ($P($G(^SC(+$P(IBOE0,U,4),0)),U,17)="Y")
"RTN","IBEFUNC",125,0)
 ;
"RTN","IBEFUNC",126,0)
DISCT(IBOE,IBOE0) ; Determine if disposition has valid status for billing
"RTN","IBEFUNC",127,0)
 ; Returns 1 if valid, 0 if not valid
"RTN","IBEFUNC",128,0)
 ; IBOE = encounter ien
"RTN","IBEFUNC",129,0)
 ; IBOE0 = 0-node of encounter (optional)
"RTN","IBEFUNC",130,0)
 N IBX
"RTN","IBEFUNC",131,0)
 S IBX=$$DISND^IBSDU(IBOE,$G(IBOE0),2)
"RTN","IBEFUNC",132,0)
 Q (IBX<2)
"RTN","IBEFUNC",133,0)
 ;
"RTN","IBEFUNC",134,0)
NEEDMRA(IBIFN) ; Returns MRA NEEDED STATUS for bill
"RTN","IBEFUNC",135,0)
 Q $P($G(^DGCR(399,+IBIFN,"TX")),U,5)
"RTN","IBEFUNC",136,0)
 ;
"RTN","IBEFUNC",137,0)
REQMRA(IBIFN) ; Determine from site parameter, ins assigned to bill and txmn
"RTN","IBEFUNC",138,0)
 ;   rules if request for MRA is needed (MCRWNR must be current ins co)
"RTN","IBEFUNC",139,0)
 ; "R" = not needed due to next carrier not requiring it (txmn rules),
"RTN","IBEFUNC",140,0)
 ; "R1" = not needed due to MRA turned off at site
"RTN","IBEFUNC",141,0)
 ;  0 = not needed,  1 = needed
"RTN","IBEFUNC",142,0)
 N IB0,COBINS,COBSEQ,IBOK,Z1,Z0,IBDA,IB00,IB0
"RTN","IBEFUNC",143,0)
 ;
"RTN","IBEFUNC",144,0)
 I $$COB^IBCEF(IBIFN)="A" S IBOK=0 G REQMRAQ    ; payer sequence = patient not allowed for MRA
"RTN","IBEFUNC",145,0)
 S COBSEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",146,0)
 S COBINS=$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ)
"RTN","IBEFUNC",147,0)
 ;Curr ins must = MEDICARE WNR
"RTN","IBEFUNC",148,0)
 S IBOK=+$$MCRWNR(COBINS)
"RTN","IBEFUNC",149,0)
 I 'IBOK G REQMRAQ
"RTN","IBEFUNC",150,0)
 ;
"RTN","IBEFUNC",151,0)
 I '$$EDIACTV^IBCEF4(2) S IBOK="R1" G REQMRAQ ; Site param=NO
"RTN","IBEFUNC",152,0)
 ;
"RTN","IBEFUNC",153,0)
 ; Check next ins for MRA needed
"RTN","IBEFUNC",154,0)
 I COBSEQ'<3 S IBOK=0 G REQMRAQ
"RTN","IBEFUNC",155,0)
 ;
"RTN","IBEFUNC",156,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBEFUNC",157,0)
 S COBINS=+$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ+1)
"RTN","IBEFUNC",158,0)
 I 'COBINS S IBOK=0 G REQMRAQ ;No next ins
"RTN","IBEFUNC",159,0)
 I $$COB^IBCEF(IBIFN)="S" D  I IBOK="R2" G REQMRAQ
"RTN","IBEFUNC",160,0)
 . S COBINS=$P($G(^DGCR(399,IBIFN,"M")),U,COBSEQ)
"RTN","IBEFUNC",161,0)
 . I +$$MCRWNR(COBINS)=1 S IBOK="R2"
"RTN","IBEFUNC",162,0)
 ;
"RTN","IBEFUNC",163,0)
 ; Check only rules with rule type = 2 (MRA REQUEST RESTRICTIONS)
"RTN","IBEFUNC",164,0)
 S IBDA=0 F  S IBDA=$O(^IBE(364.4,"AC",2,IBDA)) Q:'IBDA  S IB00=$G(^IBE(364.4,IBDA,0)) D  Q:'IBOK
"RTN","IBEFUNC",165,0)
 . I $P(IB00,U,2)>DT Q  ; Inactive
"RTN","IBEFUNC",166,0)
 . I $P(IB00,U,6),$P(IB00,U,6)'>DT Q  ; Expired
"RTN","IBEFUNC",167,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),Z0=$S(Z0=1:2,1:1)
"RTN","IBEFUNC",168,0)
 . S Z1=$$FT^IBCEF(IBIFN),Z1=$S(Z1=3:1,1:2)
"RTN","IBEFUNC",169,0)
 . I $S($P(IB00,U,4)=3:1,1:$P(IB00,U,4)=Z0),$S($P(IB00,U,5)=3:1,1:$P(IB00,U,5)=Z1) S Z0=$D(^IBE(364.4,IBDA,3,"B",COBINS)) I Z0>0 S IBOK="R"
"RTN","IBEFUNC",170,0)
 ;
"RTN","IBEFUNC",171,0)
REQMRAQ Q IBOK
"RTN","IBEFUNC",172,0)
 ;
"RTN","IBEFUNC",173,0)
MCRWNR(IBINS) ;Returns whether the ins co IBINS is MEDICARE WNR (Will
"RTN","IBEFUNC",174,0)
 ;           NOT Reimburse) 0=NO, 1=YES
"RTN","IBEFUNC",175,0)
 N Z,Z0
"RTN","IBEFUNC",176,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",177,0)
 I $P(Z0,U,2)="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",178,0)
 Q Z
"RTN","IBEFUNC",179,0)
 ;
"RTN","IBEFUNC",180,0)
WNRBILL(IBIFN,IBCOB) ; Returns whether the ins for COB seq IBCOB
"RTN","IBEFUNC",181,0)
 ;  is MEDICARE will not reimburse
"RTN","IBEFUNC",182,0)
 ;
"RTN","IBEFUNC",183,0)
 I $G(IBCOB)="" S IBCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",184,0)
 S IBCOB=$TR(IBCOB,"PST","123")
"RTN","IBEFUNC",185,0)
 Q $$MCRWNR(+$G(^DGCR(399,IBIFN,"I"_IBCOB)))
"RTN","IBEFUNC",186,0)
 ;
"RTN","IBEFUNC",187,0)
MCR(IBINS) ;Returns whether the ins co IBINS is MCR Will Reimburse
"RTN","IBEFUNC",188,0)
 ;          0=NO , 1=YES
"RTN","IBEFUNC",189,0)
 N Z,Z0
"RTN","IBEFUNC",190,0)
 S Z=0,Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",191,0)
 I $P(Z0,U,2)'="N",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="MEDICARE" S Z=1
"RTN","IBEFUNC",192,0)
 Q Z
"RTN","IBEFUNC",193,0)
 ;
"RTN","IBEFUNC",194,0)
MRATYPE(IBIEN,IBVAR) ; Returns: A = MEDICARE A   B = MEDICARE B
"RTN","IBEFUNC",195,0)
 ;  C = MEDICARE OTHER    null = NOT MEDICARE
"RTN","IBEFUNC",196,0)
 ; for the plan associated with bill ien IBIEN OR grp plan IBIEN
"RTN","IBEFUNC",197,0)
 ; If IBVAR = "" or 'C', the data is from bill ien in IBIEN
"RTN","IBEFUNC",198,0)
 ;          = 'P', the data is from grp policy ien in IBIEN
"RTN","IBEFUNC",199,0)
 ; 
"RTN","IBEFUNC",200,0)
 N IBPLAN
"RTN","IBEFUNC",201,0)
 S IBPLAN=$S($G(IBVAR)'="P":+$$POLICY^IBCEF(IBIEN,18),1:IBIEN)
"RTN","IBEFUNC",202,0)
 Q $P($G(^IBA(355.3,+IBPLAN,0)),U,14)
"RTN","IBEFUNC",203,0)
 ;
"RTN","IBEFUNC",204,0)
MCRONBIL(IBIFN,IBFLG,IBTRBIL) ; Returns 0 if MCR WNR not on bill IBIFN
"RTN","IBEFUNC",205,0)
 ;  1 if on bill, is on or before current ins
"RTN","IBEFUNC",206,0)
 ;  2 if on bill, but after current ins
"RTN","IBEFUNC",207,0)
 ; IBFLG = a COB number if second "^" piece of return data should be
"RTN","IBEFUNC",208,0)
 ;         1 if MCRWNR is the insurance at that COB sequence (optional)
"RTN","IBEFUNC",209,0)
 ; IBTRBIL = tricare for CL1A-5 
"RTN","IBEFUNC",210,0)
 ;
"RTN","IBEFUNC",211,0)
 N Z,IBON,Q
"RTN","IBEFUNC",212,0)
 S IBON=0,Q=$$COBN^IBCEF(IBIFN)
"RTN","IBEFUNC",213,0)
 F Z=1:1:3 I $$WNRBILL(IBIFN,Z)!$$TRI(IBIFN,Z) S IBON=$S(Q'<Z:1,1:2)_$S('$G(IBFLG):"",Z'=IBFLG:"",1:"^1") Q
"RTN","IBEFUNC",214,0)
 Q IBON
"RTN","IBEFUNC",215,0)
 ;
"RTN","IBEFUNC",216,0)
TRI(IBIFN,Z) ;return 1 if rate type & coverage type-Tricare
"RTN","IBEFUNC",217,0)
 N Z0,Z1,IBINS,IBRTY
"RTN","IBEFUNC",218,0)
 S Z1=0
"RTN","IBEFUNC",219,0)
 I '$G(IBTRBIL) Q Z1
"RTN","IBEFUNC",220,0)
 S IBINS=+$G(^DGCR(399,IBIFN,"I"_Z))
"RTN","IBEFUNC",221,0)
 S IBRTY=$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U)
"RTN","IBEFUNC",222,0)
 S Z0=$G(^DIC(36,+IBINS,0))
"RTN","IBEFUNC",223,0)
 I IBRTY["TRICARE",$P($G(^IBE(355.2,+$P(Z0,U,13),0)),U)="TRICARE" S Z1=1
"RTN","IBEFUNC",224,0)
 Q Z1
"RTN","IBEFUNC",225,0)
 ;
"RTN","IBEFUNC",226,0)
PROFEE(IBIFN) ; Returns whether any rev codes for prof fees
"RTN","IBEFUNC",227,0)
 ;  included on bill IBIFN  0 = not included,  1 = included,
"RTN","IBEFUNC",228,0)
 ;  2 = both inst and prof are included
"RTN","IBEFUNC",229,0)
 ;
"RTN","IBEFUNC",230,0)
 N IBPRO,Z
"RTN","IBEFUNC",231,0)
 S IBPRO=0,Z=$O(^DGCR(399,IBIFN,"RC","B",959)) ; Rev cds 960-989 are prof
"RTN","IBEFUNC",232,0)
 I Z,Z<990 D
"RTN","IBEFUNC",233,0)
 . S IBPRO=1
"RTN","IBEFUNC",234,0)
 . S Z=$O(^DGCR(399,IBIFN,"RC","B",0))
"RTN","IBEFUNC",235,0)
 . I $S(Z:Z<960,1:0)!($O(^DGCR(399,IBIFN,"RC","B",1000),-1)'<990) S IBPRO=2
"RTN","IBEFUNC",236,0)
 Q IBPRO
"RTN","IBEFUNC",237,0)
 ;
"RTN","IBEFUNC",238,0)
GETMOD(IBIFN,IBCPT,EXT) ; Returns 'list' of modifiers for file 399
"RTN","IBEFUNC",239,0)
 ;   procedure for bill IBIFN and proc ien IBCPT
"RTN","IBEFUNC",240,0)
 ;   in modifier seq order, separated by ','
"RTN","IBEFUNC",241,0)
 ;  If EXT = 1, return the actual modifier, not the ptr
"RTN","IBEFUNC",242,0)
 N IBMOD,IBZ,IBZ0,IB0,Z
"RTN","IBEFUNC",243,0)
 S IBZ=0,IBMOD=""
"RTN","IBEFUNC",244,0)
 F  S IBZ=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ)) Q:'IBZ  S IBZ0=0 F  S IBZ0=$O(^DGCR(399,IBIFN,"CP",IBCPT,"MOD","B",IBZ,IBZ0)) Q:'IBZ0  I $D(^DGCR(399,IBIFN,"CP",IBCPT,"MOD",IBZ0,0)) S IB0=$G(^(0)) D
"RTN","IBEFUNC",245,0)
 . I '$G(EXT) S Z=$P(IB0,U,2)
"RTN","IBEFUNC",246,0)
 . I $G(EXT) S Z=$$MOD^ICPTMOD($P(IB0,U,2),"I"),Z=$S($P(Z,U)=-1:"",1:$P(Z,U,2))
"RTN","IBEFUNC",247,0)
 . Q:Z=""
"RTN","IBEFUNC",248,0)
 . S IBMOD=IBMOD_$S(IBMOD="":"",1:",")_Z
"RTN","IBEFUNC",249,0)
 Q IBMOD
"RTN","IBEFUNC",250,0)
 ;
"RTN","IBEFUNC",251,0)
MODLST(MODS,DESC,IBMOD) ; Returns string of actual mods
"RTN","IBEFUNC",252,0)
 ; MOVED
"RTN","IBEFUNC",253,0)
 Q $$MODLST^IBEFUNC2(MODS,$G(DESC),.IBMOD)
"RTN","IBEFUNC",254,0)
 ;
"RTN","IBEFUNC",255,0)
GETSPEC(FILE,FIELD) ; Get fld specifier for FIELD # in FILE
"RTN","IBEFUNC",256,0)
 ; Use to set DIC("P") for FILE^DICN
"RTN","IBEFUNC",257,0)
 N IBZ
"RTN","IBEFUNC",258,0)
 D FIELD^DID(FILE,FIELD,"","SPECIFIER","IBZ")
"RTN","IBEFUNC",259,0)
 Q $G(IBZ("SPECIFIER"))
"RTN","IBEFUNC",260,0)
 ;
"RTN","IBOLK")
0^7^B17698535^B17475445
"RTN","IBOLK",1,0)
IBOLK ;ALB/AAS - INTEGRATED BILLING - DISPLAY BY BILL NUMBER ; 6-MAR-91
"RTN","IBOLK",2,0)
 ;;2.0; INTEGRATED BILLING ;**199,420**; 21-MAR-94;Build 6
"RTN","IBOLK",3,0)
 ;
"RTN","IBOLK",4,0)
% ;
"RTN","IBOLK",5,0)
 ;***
"RTN","IBOLK",6,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
"RTN","IBOLK",7,0)
 ;S XRTL=$ZU(0),XRTN="IBOLK-1" D T0^%ZOSV ;start rt clock
"RTN","IBOLK",8,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBOLK",9,0)
 S DIC("A")="Select CHARGE ID or PATIENT NAME: ",DIC="^PRCA(430,",DIC(0)="AEQM" D ^DIC K DIC G END1:+Y<1 S IBIL=$P(Y,"^",2)
"RTN","IBOLK",10,0)
 S IBIFN=$O(^DGCR(399,"B",$P(IBIL,"-",2),0))
"RTN","IBOLK",11,0)
 I '$D(^IB("ABIL",IBIL)),'IBIFN W !!,"Billing has no Record of this Charge ID.",! G %
"RTN","IBOLK",12,0)
 ;
"RTN","IBOLK",13,0)
BRIEF R !,"(B)rief or (F)ull Inquiry: B// ",X:DTIME G:X="^"!('$T) END1 S:X="" X="B" S X=$E(X)
"RTN","IBOLK",14,0)
 I "BFbf"'[X D  G BRIEF
"RTN","IBOLK",15,0)
 . W !!?5,"Enter: '<CR>'  -  To select the Brief Inquiry."
"RTN","IBOLK",16,0)
 . W !?12,"'F'     -  To select the Full Inquiry.  This option will"
"RTN","IBOLK",17,0)
 . W !?23,"include the Address Inquiry, and more detailed"
"RTN","IBOLK",18,0)
 . W !?23,"information for Pharmacy Co-Pay bills."
"RTN","IBOLK",19,0)
 . W !?12,"'^'     -  To quit this option.",!
"RTN","IBOLK",20,0)
 W $S("Bb"[X:"   BRIEF",1:"   FULL") S IBFULL="Ff"[X
"RTN","IBOLK",21,0)
 I IBIFN S IBAC=8,IBQUIT=0
"RTN","IBOLK",22,0)
 ;
"RTN","IBOLK",23,0)
DEV W ! S %ZIS="QM",%ZIS("A")="Output Device: " D ^%ZIS G:POP END
"RTN","IBOLK",24,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q") D HOME^%ZIS W ! G %
"RTN","IBOLK",25,0)
 . S ZTDESC="IB Print Actions by Bill Number"
"RTN","IBOLK",26,0)
 . S ZTRTN=$S(IBIFN:"VIEW^IBCNQ",1:"EN^IBOLK")
"RTN","IBOLK",27,0)
 . S ZTSAVE("IBFULL")="",ZTSAVE("IBIL")="",ZTSAVE("IBIFN")=""
"RTN","IBOLK",28,0)
 . I IBIFN F I="IBAC","IBQUIT" S ZTSAVE(I)=""
"RTN","IBOLK",29,0)
 ;
"RTN","IBOLK",30,0)
 U IO
"RTN","IBOLK",31,0)
 ;***
"RTN","IBOLK",32,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
"RTN","IBOLK",33,0)
 I 'IBIFN D EN G %
"RTN","IBOLK",34,0)
 D VIEW^IBCNQ,Q^IBCNQ,END1 G %
"RTN","IBOLK",35,0)
 ;
"RTN","IBOLK",36,0)
EN ;  -Entry to display IB Action data for an AR Bill number
"RTN","IBOLK",37,0)
 ;  -Input   IBIL = external form of bill number, ie 500-K10001
"RTN","IBOLK",38,0)
 ;           IBFULL = 1 for full profile logic, 0 for brief description
"RTN","IBOLK",39,0)
 ;***
"RTN","IBOLK",40,0)
 ;S XRTL=$ZU(0),XRTN="IBOLK-2" D T0^%ZOSV ;start rt clock
"RTN","IBOLK",41,0)
 S IBN=$O(^IB("ABIL",IBIL,"")) G:'$D(^IB(IBN,0)) ENQ
"RTN","IBOLK",42,0)
 S IBTOTL=0,IBQUIT="",IBPAG=0 D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12)) D HDR
"RTN","IBOLK",43,0)
 ;
"RTN","IBOLK",44,0)
 S IBN="" F IBI=0:0 S IBN=$O(^IB("ABIL",IBIL,IBN)) Q:'IBN  I $D(^IB(IBN,0)) D LINE Q:IBQUIT
"RTN","IBOLK",45,0)
 I 'IBQUIT D TOTAL,PAUSE,^IBOLK1:IBFULL&('IBQUIT)
"RTN","IBOLK",46,0)
ENQ D END Q
"RTN","IBOLK",47,0)
 ;
"RTN","IBOLK",48,0)
LINE ;  -find data for one line, write line, accumulate totals
"RTN","IBOLK",49,0)
 I '$D(IBTRAN),$Y>(IOSL-5) D PAUSE Q:IBQUIT  D HDR1
"RTN","IBOLK",50,0)
 S IBND=^IB(IBN,0),IBND1=$G(^(1))
"RTN","IBOLK",51,0)
 I IBFULL,$D(^IBE(350.1,+$P(IBND,"^",3),30)),+$P(IBND,"^",4)=52 W ! S X1=$P($P($P(IBND,"^",4),";",1),":",2),X2=$P($P($P(IBND,"^",4),";",2),":",2),X=X1_"^"_$S(X2:X2,1:0) X ^(30)
"RTN","IBOLK",52,0)
 S IBTYP=$G(^IBE(350.1,+$P(IBND,"^",3),0)),IBSEQNO=$P(IBTYP,"^",5)
"RTN","IBOLK",53,0)
 W ! S Y=$P($P(IBND1,"^",2),".",1) D DT^DIQ
"RTN","IBOLK",54,0)
 W ?15,$E($P($P(IBTYP,"^")," ",2,99),1,20),?37,$E($P(IBND,"^",8),1,20),?60,$J($P(IBND,"^",6),5)
"RTN","IBOLK",55,0)
 S IBCHRG=$P(IBND,"^",7) I IBSEQNO=2 S IBCHRG=(-IBCHRG) ;cancel types are decrease adjustments
"RTN","IBOLK",56,0)
 S X=IBCHRG,X2="2$",X3=10 D COMMA^%DTC W ?69,X
"RTN","IBOLK",57,0)
 S IBTOTL=IBTOTL+IBCHRG
"RTN","IBOLK",58,0)
 I $P(IBND,"^",10),IBSEQNO=2 W !,?5,"Charge Removal Reason: ",$S($D(^IBE(350.3,$P(IBND,"^",10),0)):$P(^(0),"^"),1:"UNKNOWN")
"RTN","IBOLK",59,0)
 Q
"RTN","IBOLK",60,0)
 ;
"RTN","IBOLK",61,0)
HDR S IBND=^IB(IBN,0),DFN=+$P(IBND,"^",2),IBNAME=$$PT^IBEFUNC(DFN)
"RTN","IBOLK",62,0)
HDR1 S IBPAG=IBPAG+1 I $E(IOST,1,2)["C-"!(IBPAG>1) W @IOF,*13
"RTN","IBOLK",63,0)
 W $E($P(IBNAME,"^"),1,20),"   ",$P(IBNAME,"^",2),?38,IBIL,?51,IBHDT,?72,"PAGE: ",IBPAG
"RTN","IBOLK",64,0)
 D DISP^IBARXEU(DFN,DT,2) W !
"RTN","IBOLK",65,0)
 W:'IBFULL !,"DATE",?15,"CHARGE TYPE",?37,"BRIEF DESCRIPTION",?62,"UNITS",?73,"CHARGE"
"RTN","IBOLK",66,0)
 S IBLINE="",$P(IBLINE,"=",IOM)="" W !,IBLINE K IBLINE
"RTN","IBOLK",67,0)
 Q
"RTN","IBOLK",68,0)
 ;
"RTN","IBOLK",69,0)
TOTAL W !?67,"------------" S X=IBTOTL,X2="2$",X3=12 D COMMA^%DTC
"RTN","IBOLK",70,0)
 W !,?67,X
"RTN","IBOLK",71,0)
 Q
"RTN","IBOLK",72,0)
 ;
"RTN","IBOLK",73,0)
PAUSE Q:$E(IOST,1,2)'["C-"
"RTN","IBOLK",74,0)
 F IBJ=$Y:1:(IOSL-4) W !
"RTN","IBOLK",75,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBOLK",76,0)
 Q
"RTN","IBOLK",77,0)
 ;
"RTN","IBOLK",78,0)
END1 K IBFULL
"RTN","IBOLK",79,0)
END W !
"RTN","IBOLK",80,0)
 ;***
"RTN","IBOLK",81,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
"RTN","IBOLK",82,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOLK",83,0)
 K X,X2,X3,Y,DFN,IBIFN,IBAC,I,IB,IBIL,IBI,IBJ,IBNAME,IBLINE,IBN,IBND,IBND1,IBCHRG,IBSEQNO,IBTYP,IBTOTL,ZTSK,IBHDT,IBPAG,IBQUIT,DN,D0,DUOUT,DTOUT,VA,VADM,VAERR
"RTN","IBOLK",84,0)
 D ^%ZISC
"RTN","IBOLK",85,0)
 Q
"RTN","IBOLK",86,0)
 ;
"RTN","IBOLK",87,0)
ENF ;  -entry point for AR to print full profile for IB actions for
"RTN","IBOLK",88,0)
 ;   an ar transaction number.
"RTN","IBOLK",89,0)
 ;  -input   x = ar transaction number ($p(^ib(ibn,0),u,12)
"RTN","IBOLK",90,0)
 ;
"RTN","IBOLK",91,0)
 S IBFULL=1
"RTN","IBOLK",92,0)
 ;
"RTN","IBOLK",93,0)
ENB ;  -entry point for AR to print brief profile for IB actions for
"RTN","IBOLK",94,0)
 ;   an ar transaction number.
"RTN","IBOLK",95,0)
 ;  -input   x = ar transaction number
"RTN","IBOLK",96,0)
 ;
"RTN","IBOLK",97,0)
 S IBTOTL=0,IBPAG=0,IBQUIT="" S:'$D(IBFULL) IBFULL=0
"RTN","IBOLK",98,0)
 S IBTRAN=X
"RTN","IBOLK",99,0)
 S IBN="" F  S IBN=$O(^IB("AT",IBTRAN,IBN)) Q:IBN=""  D LINE
"RTN","IBOLK",100,0)
 K D0,DN,X,X2,X3,Y,IBFULL,IBTOTL,IBPAG,IBQUIT,IBTRAN,IBN,IBND,IBND1,IBSEQNO,IBTYP,IBCHRG
"RTN","IBOLK",101,0)
 Q
"VER")
8.0^22.0
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,1,0)
^.1^^0
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",8112,6)
^400
**END**
**END**
