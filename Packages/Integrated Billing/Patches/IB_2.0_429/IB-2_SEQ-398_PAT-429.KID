Released IB*2*429 SEQ #398
Extracted from mail message
**KIDS**:IB*2.0*429^

**INSTALL NAME**
IB*2.0*429
"BLD",1427,0)
IB*2.0*429^INTEGRATED BILLING^0^3100120^y
"BLD",1427,1,0)
^^1^1^3100119^
"BLD",1427,1,1,0)
RX COPAY PRIORITY GROUP 7&8 INCREASE
"BLD",1427,4,0)
^9.64PA^350.2^1
"BLD",1427,4,350.2,0)
350.2
"BLD",1427,4,350.2,2,0)
^9.641^350.2^1
"BLD",1427,4,350.2,2,350.2,0)
IB ACTION CHARGE  (File-top level)
"BLD",1427,4,350.2,2,350.2,1,0)
^9.6411^20^1
"BLD",1427,4,350.2,2,350.2,1,20,0)
ADDITIONAL AMOUNT LOGIC
"BLD",1427,4,350.2,222)
y^n^p^^^^n^^n
"BLD",1427,4,350.2,224)

"BLD",1427,4,"APDD",350.2,350.2)

"BLD",1427,4,"APDD",350.2,350.2,20)

"BLD",1427,4,"B",350.2,350.2)

"BLD",1427,6.3)
62
"BLD",1427,"ABPKG")
n
"BLD",1427,"INID")
^
"BLD",1427,"INIT")
POST^IB20P429
"BLD",1427,"KRN",0)
^9.67PA^8989.52^19
"BLD",1427,"KRN",.4,0)
.4
"BLD",1427,"KRN",.401,0)
.401
"BLD",1427,"KRN",.402,0)
.402
"BLD",1427,"KRN",.402,"NM",0)
^9.68A^^
"BLD",1427,"KRN",.403,0)
.403
"BLD",1427,"KRN",.5,0)
.5
"BLD",1427,"KRN",.84,0)
.84
"BLD",1427,"KRN",3.6,0)
3.6
"BLD",1427,"KRN",3.8,0)
3.8
"BLD",1427,"KRN",9.2,0)
9.2
"BLD",1427,"KRN",9.8,0)
9.8
"BLD",1427,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",1427,"KRN",9.8,"NM",1,0)
IBAUTL^^0^B18551480
"BLD",1427,"KRN",9.8,"NM",2,0)
IBEBR^^0^B22111673
"BLD",1427,"KRN",9.8,"NM",3,0)
IB20P429^^0^B3064448
"BLD",1427,"KRN",9.8,"NM","B","IB20P429",3)

"BLD",1427,"KRN",9.8,"NM","B","IBAUTL",1)

"BLD",1427,"KRN",9.8,"NM","B","IBEBR",2)

"BLD",1427,"KRN",19,0)
19
"BLD",1427,"KRN",19,"NM",0)
^9.68A^^0
"BLD",1427,"KRN",19.1,0)
19.1
"BLD",1427,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",1427,"KRN",101,0)
101
"BLD",1427,"KRN",101,"NM",0)
^9.68A^^0
"BLD",1427,"KRN",409.61,0)
409.61
"BLD",1427,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",1427,"KRN",771,0)
771
"BLD",1427,"KRN",771,"NM",0)
^9.68A^^
"BLD",1427,"KRN",870,0)
870
"BLD",1427,"KRN",8989.51,0)
8989.51
"BLD",1427,"KRN",8989.52,0)
8989.52
"BLD",1427,"KRN",8994,0)
8994
"BLD",1427,"KRN","B",.4,.4)

"BLD",1427,"KRN","B",.401,.401)

"BLD",1427,"KRN","B",.402,.402)

"BLD",1427,"KRN","B",.403,.403)

"BLD",1427,"KRN","B",.5,.5)

"BLD",1427,"KRN","B",.84,.84)

"BLD",1427,"KRN","B",3.6,3.6)

"BLD",1427,"KRN","B",3.8,3.8)

"BLD",1427,"KRN","B",9.2,9.2)

"BLD",1427,"KRN","B",9.8,9.8)

"BLD",1427,"KRN","B",19,19)

"BLD",1427,"KRN","B",19.1,19.1)

"BLD",1427,"KRN","B",101,101)

"BLD",1427,"KRN","B",409.61,409.61)

"BLD",1427,"KRN","B",771,771)

"BLD",1427,"KRN","B",870,870)

"BLD",1427,"KRN","B",8989.51,8989.51)

"BLD",1427,"KRN","B",8989.52,8989.52)

"BLD",1427,"KRN","B",8994,8994)

"BLD",1427,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",1427,"QUES",0)
^9.62^^
"BLD",1427,"REQB",0)
^9.611^2^2
"BLD",1427,"REQB",1,0)
IB*2.0*52^2
"BLD",1427,"REQB",2,0)
IB*2.0*347^2
"BLD",1427,"REQB","B","IB*2.0*347",2)

"BLD",1427,"REQB","B","IB*2.0*52",1)

"FIA",350.2)
IB ACTION CHARGE
"FIA",350.2,0)
^IBE(350.2,
"FIA",350.2,0,0)
350.2I
"FIA",350.2,0,1)
y^n^p^^^^n^^n
"FIA",350.2,0,10)

"FIA",350.2,0,11)

"FIA",350.2,0,"RLRO")

"FIA",350.2,0,"VR")
2.0^IB
"FIA",350.2,350.2)
1
"FIA",350.2,350.2,20)

"INIT")
POST^IB20P429
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
429^3100120
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3100120
"PKG",200,22,1,"PAH",1,1,1,0)
RX COPAY PRIORITY GROUP 7&8 INCREASE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IB20P429")
0^3^B3064448^n/a
"RTN","IB20P429",1,0)
IB20P429 ;ELZ/OAK - POST INIT FOR PATCH;11/10/09
"RTN","IB20P429",2,0)
 ;;2.0;INTEGRATED BILLING;**429**;21-MAR-94;Build 62
"RTN","IB20P429",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB20P429",4,0)
 ;
"RTN","IB20P429",5,0)
 ;
"RTN","IB20P429",6,0)
POST ; loop through and populate entries in 350.2 if not there
"RTN","IB20P429",7,0)
 ;
"RTN","IB20P429",8,0)
 N IBX,IBZ,IBC,DO,IBE,X,Y,DIC,IBY,DIK,DA
"RTN","IB20P429",9,0)
 S IBC=0
"RTN","IB20P429",10,0)
 F IBX=1:1 S IBZ=$P($T(3502+IBX),";",3) Q:IBZ=""  D
"RTN","IB20P429",11,0)
 . S IBE=$O(^IBE(350.1,"B",$P(IBZ,"^",3),0))
"RTN","IB20P429",12,0)
 . I 'IBE D MES^XPDUTL("ERROR: Unable to find IB ACTION TYPE: "_$P(IBZ,"^",3)) Q
"RTN","IB20P429",13,0)
 . S $P(IBZ,"^",3)=IBE
"RTN","IB20P429",14,0)
 . I $D(^IBE(350.2,"AIVDT",$P(IBZ,"^",3),-$P(IBZ,"^",2))) Q
"RTN","IB20P429",15,0)
 . S X=$P(IBZ,"^"),DIC="^IBE(350.2,",DIC(0)="" D FILE^DICN
"RTN","IB20P429",16,0)
 . S IBY=+Y I Y<1 D MES^XPDUTL("ERROR: Unable to add IB ACTION CHARGE: "_$P(IBZ,"^")) Q
"RTN","IB20P429",17,0)
 . S ^IBE(350.2,IBY,0)=IBZ
"RTN","IB20P429",18,0)
 . S DIK="^IBE(350.2,",DA=IBY D IX^DIK
"RTN","IB20P429",19,0)
 . ; set additional amount IF logic
"RTN","IB20P429",20,0)
 . S ^IBE(350.2,IBY,20)="I $G(DFN)>0,$$PRIORITY^DGENA(DFN)>6"
"RTN","IB20P429",21,0)
 . S IBC=IBC+1
"RTN","IB20P429",22,0)
 ;
"RTN","IB20P429",23,0)
 D MES^XPDUTL(IBC_" entries added to IB ACTION CHARGE (#350.2) file.")
"RTN","IB20P429",24,0)
 ;
"RTN","IB20P429",25,0)
 Q
"RTN","IB20P429",26,0)
 ;
"RTN","IB20P429",27,0)
3502 ; data for 350.2 entries to be added
"RTN","IB20P429",28,0)
 ;;RX1^3100701^PSO NSC RX COPAY NEW^8^^1
"RTN","IB20P429",29,0)
 ;;RX2^3100701^PSO SC RX COPAY NEW^8^^1
"RTN","IB20P429",30,0)
 ;;RX3^3100701^PSO NSC RX COPAY CANCEL^8^^1
"RTN","IB20P429",31,0)
 ;;RX4^3100701^PSO NSC RX COPAY UPDATE^8^^1
"RTN","IB20P429",32,0)
 ;;RX5^3100701^PSO SC RX COPAY CANCEL^8^^1
"RTN","IB20P429",33,0)
 ;;RX6^3100701^PSO SC RX COPAY UPDATE^8^^1
"RTN","IB20P429",34,0)
 ;;
"RTN","IB20P429",35,0)
 ;
"RTN","IBAUTL")
0^1^B18551480^B18186387
"RTN","IBAUTL",1,0)
IBAUTL ;ALB/AAS - INTEGRATED BILLING APPLICATION UTILITIES ; 14-FEB-91
"RTN","IBAUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**93,156,347,429**;21-MAR-94;Build 62
"RTN","IBAUTL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAUTL",4,0)
 ;
"RTN","IBAUTL",5,0)
 ;
"RTN","IBAUTL",6,0)
COST ;  - find charges for transaction type, when only one
"RTN","IBAUTL",7,0)
 N IBD,IBN,IB K X1
"RTN","IBAUTL",8,0)
 S IBD=-(DT+.9) F  S IBD=$O(^IBE(350.2,"AIVDT",DA,IBD)) Q:'IBD  S IBN=0 F  S IBN=$O(^IBE(350.2,"AIVDT",DA,IBD,IBN)) Q:'IBN  S IB=$G(^IBE(350.2,IBN,0)) I IB]"",'$P(IB,"^",5)!($P(IB,"^",5)>DT) S X1=$P(IB,"^",4) G COSTQ
"RTN","IBAUTL",9,0)
COSTQ S X1=+$G(X1)
"RTN","IBAUTL",10,0)
 I $L($G(^IBE(350.2,IBN,20))) X ^(20) I  S X1=X1+$P($G(^IBE(350.2,IBN,0)),"^",6)
"RTN","IBAUTL",11,0)
 Q
"RTN","IBAUTL",12,0)
 ;
"RTN","IBAUTL",13,0)
FY I $D(X) S IBAFY=$$FY^IBOUTL(X)
"RTN","IBAUTL",14,0)
 Q
"RTN","IBAUTL",15,0)
 ;
"RTN","IBAUTL",16,0)
PTL ;  - parent trace logic
"RTN","IBAUTL",17,0)
 ;  - input in x resulting from field from file 350
"RTN","IBAUTL",18,0)
 ;  - output in y=1 if found, -1^error message if not found
"RTN","IBAUTL",19,0)
 ;  -           y(0) = zeroth node of top level
"RTN","IBAUTL",20,0)
 ;  -           y(1) = zeroth node of second level
"RTN","IBAUTL",21,0)
 ;  -           y(n) = zeroth node of nth level
"RTN","IBAUTL",22,0)
 ;
"RTN","IBAUTL",23,0)
 K Y
"RTN","IBAUTL",24,0)
 S Y=1 I '+X!'($D(^DIC(+X,0,"GL"))) S Y="-1^IB004" G PTLQ
"RTN","IBAUTL",25,0)
 I +X=52 G PHAPI
"RTN","IBAUTL",26,0)
 S IBAGL=^DIC(+X,0,"GL")
"RTN","IBAUTL",27,0)
 I '$D(@(IBAGL_$P($P(X,";",1),":",2)_",0)")) S Y="-1^IB005" G PTLQ
"RTN","IBAUTL",28,0)
 ;
"RTN","IBAUTL",29,0)
 ; This naked reference should be set to the original data source that
"RTN","IBAUTL",30,0)
 ; is causing this charge to be created.  The data source will be one of
"RTN","IBAUTL",31,0)
 ; many different data sources that will generate patient charges.
"RTN","IBAUTL",32,0)
 S Y(0)=^(0)
"RTN","IBAUTL",33,0)
 ;
"RTN","IBAUTL",34,0)
 F IBJJ=2:1 S IBII=$P(X,";",IBJJ) Q:IBII=""  D PTL1
"RTN","IBAUTL",35,0)
PTLQ K IBAGL,IBII,IBJJ,IBMIN
"RTN","IBAUTL",36,0)
 Q
"RTN","IBAUTL",37,0)
 ;
"RTN","IBAUTL",38,0)
PTL1 ;  - find y(n) of sublevels
"RTN","IBAUTL",39,0)
 ; Call in here with a FOR loop to go each level deeper.  This will
"RTN","IBAUTL",40,0)
 ; setup the subsripts in Y for all the data elements that go into
"RTN","IBAUTL",41,0)
 ; causing this charge to be created.  It looks in the original data
"RTN","IBAUTL",42,0)
 ; source file as approprite to obtain the information.  The naked
"RTN","IBAUTL",43,0)
 ; reference should be the last data level in the data source appropriate
"RTN","IBAUTL",44,0)
 ; data source file last looked up.
"RTN","IBAUTL",45,0)
 ;
"RTN","IBAUTL",46,0)
 S IBMIN=$P(IBII,":") I IBMIN="" S Y="-1^IB006" Q
"RTN","IBAUTL",47,0)
 I '$D(^(IBMIN,$P(IBII,":",2),0)) S Y="-1^IB006" Q
"RTN","IBAUTL",48,0)
 ;I '$D(^(+IBII,$P(IBII,":",2),0)) S Y="-1^IB006" Q
"RTN","IBAUTL",49,0)
 S Y(IBJJ-1)=^(0)
"RTN","IBAUTL",50,0)
 Q
"RTN","IBAUTL",51,0)
 ;
"RTN","IBAUTL",52,0)
CHKX ;  - check input x
"RTN","IBAUTL",53,0)
 ;  -  piece 1 = service and exists
"RTN","IBAUTL",54,0)
 ;  -  peice 2 = patient and exists
"RTN","IBAUTL",55,0)
 ;  -  piece 3 = action type
"RTN","IBAUTL",56,0)
 ;  -  piece 4 = user duz
"RTN","IBAUTL",57,0)
 S DFN=$P(X,"^",2),IBSERV=+IBSAVX
"RTN","IBAUTL",58,0)
 I $S('DFN:1,'$D(^DPT(DFN,0)):1,1:0) S Y="-1^IB002" G CHKXQ ;patient pointer bad
"RTN","IBAUTL",59,0)
 I $S('IBSERV:1,'$D(^DIC(49,IBSERV,0)):1,1:0) S Y="-1^IB003" G CHKXQ ;service pointer bad
"RTN","IBAUTL",60,0)
 I IBTAG=1 G CHKXQ
"RTN","IBAUTL",61,0)
 S IBDUZ=$P(IBSAVX,"^",4) I $S('IBDUZ:1,'$D(^VA(200,IBDUZ,0)):1,1:0) S Y="-1^IB007" G CHKXQ
"RTN","IBAUTL",62,0)
 I IBTAG=3 G CHKXQ
"RTN","IBAUTL",63,0)
 S IBATYP=$P(IBSAVX,"^",3) I $S('IBATYP:1,'$D(^IBE(350.1,IBATYP,0)):1,1:0) S Y="-1^IB008"
"RTN","IBAUTL",64,0)
CHKXQ Q
"RTN","IBAUTL",65,0)
 ;
"RTN","IBAUTL",66,0)
SITE ;  - calculate site from site parameters
"RTN","IBAUTL",67,0)
 ;  -  output ibsite = station number
"RTN","IBAUTL",68,0)
 ;  =         ibfac  = pointer to institution file
"RTN","IBAUTL",69,0)
 I '$D(^IBE(350.9,1,0)) S Y="-1^IB016" Q
"RTN","IBAUTL",70,0)
 S IBFAC=$P(^IBE(350.9,1,0),"^",2),IBSITE=$S('$D(^DIC(4,IBFAC,99)):"",1:+^(99)) I IBSITE<1 S Y="-1^IB009"
"RTN","IBAUTL",71,0)
 Q
"RTN","IBAUTL",72,0)
 ;
"RTN","IBAUTL",73,0)
ADD ;  - add new entry to ^ib
"RTN","IBAUTL",74,0)
 ;
"RTN","IBAUTL",75,0)
 N %DT,IBYCHK
"RTN","IBAUTL",76,0)
 L +^IB(0):10 I '$T S Y="-1^IB014" G ADDQ
"RTN","IBAUTL",77,0)
 S X=$P($S($D(^IB(0)):^(0),1:"^^-1"),"^",3)+1 L -^IB(0) I 'X S Y="-1^IB015" G ADDQ
"RTN","IBAUTL",78,0)
 K DD,DO,DIC,DR S DIC="^IB(",DIC(0)="L",DLAYGO=350
"RTN","IBAUTL",79,0)
 F X=X:1 L:$D(IBN1) -^IB(IBN1) I X>0,'$D(^IB(X)) S IBN1=X L +^IB(IBN1):1 I $T,'$D(^IB(X)) S DINUM=X,X=+IBSITE_X D FILE^DICN I +Y>0 Q
"RTN","IBAUTL",80,0)
 S IBN=+Y,DIE="^IB(",DA=IBN,DR=".02////"_$S($D(DFN):DFN,1:"")_";.03////"_$S($D(IBATYP):IBATYP,1:"")_";.05////1;12///NOW" D
"RTN","IBAUTL",81,0)
 . N Y D ^DIE K DA,DR,DIE I $D(Y) S IBYCHK=Y
"RTN","IBAUTL",82,0)
 L -^IB(IBN1)
"RTN","IBAUTL",83,0)
 S Y=$S('$D(IBYCHK):1,1:"-1^IB028")
"RTN","IBAUTL",84,0)
 ;
"RTN","IBAUTL",85,0)
ADDQ K DO,DD,DINUM,DIC,IBN1 Q
"RTN","IBAUTL",86,0)
 ;
"RTN","IBAUTL",87,0)
ARPARM N X S X=DT
"RTN","IBAUTL",88,0)
 D SITE,FY,NOW^%DTC S IBNOW=%
"RTN","IBAUTL",89,0)
 Q
"RTN","IBAUTL",90,0)
BILLNO ;  -get open bill number
"RTN","IBAUTL",91,0)
 I '$G(IBTOTL) S (IBIL,IBTRAN)="" G BILLQ
"RTN","IBAUTL",92,0)
 S IBARTYP=$S($D(^IBE(350.1,+IBATYP,0)):$P(^(0),"^",3),1:"")
"RTN","IBAUTL",93,0)
 S X=IBSITE_"^"_IBSERV_"^"_IBARTYP_"^"_DFN_";DPT("_"^"_IBAFY_"^"_$S($D(IBTOTL):IBTOTL,1:0)_"^"_$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:0)_"^"_$P(IBNOW,".",1) D ^PRCASER I +Y<1 G BILLQ
"RTN","IBAUTL",94,0)
 S IBIL=$P(Y,"^",2),IBTRAN=$P(Y,"^",3) I IBIL="" S Y="-1^IB011" G BILLQ
"RTN","IBAUTL",95,0)
 S IBTRAN=$S(IBTRAN>0:IBTRAN,1:"")
"RTN","IBAUTL",96,0)
BILLQ Q
"RTN","IBAUTL",97,0)
 ;
"RTN","IBAUTL",98,0)
PHAPI ;
"RTN","IBAUTL",99,0)
 ;This is alternate code for Parent Trace Logic
"RTN","IBAUTL",100,0)
 ; to deal with the Pharmacy Encapsulation of Prescription File (#52)
"RTN","IBAUTL",101,0)
 ;
"RTN","IBAUTL",102,0)
 N IBRFL,IBXX,IBPT,IBRX,IBY
"RTN","IBAUTL",103,0)
 S IBXX=X,IBY=1
"RTN","IBAUTL",104,0)
 S IBRX=$P($P(IBXX,";"),":",2)
"RTN","IBAUTL",105,0)
 S IBPT=$$FILE^IBRXUTL(IBRX,2),IBY(0)=$$RXZERO^IBRXUTL(IBPT,IBRX) I IBY(0)="" S IBY="-1^IB005" G PHAPIQ
"RTN","IBAUTL",106,0)
 I $P(IBXX,";",2)="" G PHAPIQ ; original fill being billed
"RTN","IBAUTL",107,0)
 S IBRFL=$P($P(IBXX,";",2),":",2),IBY(1)=$$ZEROSUB^IBRXUTL(IBPT,IBRX,IBRFL)
"RTN","IBAUTL",108,0)
 I IBY(1)="" S IBY="-1^IB006" G PHAPIQ
"RTN","IBAUTL",109,0)
 ;
"RTN","IBAUTL",110,0)
PHAPIQ ;
"RTN","IBAUTL",111,0)
 S:$G(IBY)]"" Y=IBY
"RTN","IBAUTL",112,0)
 S:$G(IBY(0))]"" Y(0)=IBY(0)
"RTN","IBAUTL",113,0)
 S:$G(IBY(1))]"" Y(1)=IBY(1)
"RTN","IBAUTL",114,0)
 Q
"RTN","IBAUTL",115,0)
 ;
"RTN","IBEBR")
0^2^B22111673^B20650875
"RTN","IBEBR",1,0)
IBEBR ;ALB/AAS - Add/Edit IB ACTION CHARGE FILE ;3-MAR-92
"RTN","IBEBR",2,0)
 ;;2.0;INTEGRATED BILLING;**34,52,429**;21-MAR-94;Build 62
"RTN","IBEBR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBEBR",4,0)
 ;
"RTN","IBEBR",5,0)
% ; entry point
"RTN","IBEBR",6,0)
 D HOME^%ZIS W @IOF
"RTN","IBEBR",7,0)
EN W !!,?28,"Enter/Edit Billing Rates",!!
"RTN","IBEBR",8,0)
 S IBX="MAIN" D CHOOSE I $D(DIRUT)!('Y) G END
"RTN","IBEBR",9,0)
 I Y>0,Y<7 D @Y
"RTN","IBEBR",10,0)
 G EN
"RTN","IBEBR",11,0)
 Q
"RTN","IBEBR",12,0)
1 ;enter edit revenue code rates
"RTN","IBEBR",13,0)
 ;D EN1^IBCBR
"RTN","IBEBR",14,0)
 ;D ENR^IBEMTO ; bill MT OPT charges awaiting the new copay rate
"RTN","IBEBR",15,0)
 ;D END
"RTN","IBEBR",16,0)
 W !!,"  ******* This option is no longer active.",!,?10,"Please use the Enter/Edit Charge Master option.",!
"RTN","IBEBR",17,0)
 Q
"RTN","IBEBR",18,0)
 ;
"RTN","IBEBR",19,0)
2 ;enter per diem rate
"RTN","IBEBR",20,0)
 S IBX="PERDIEM" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",21,0)
 D EFFDT,END
"RTN","IBEBR",22,0)
 G 2
"RTN","IBEBR",23,0)
 ;
"RTN","IBEBR",24,0)
3 ;enter medicare deductable
"RTN","IBEBR",25,0)
 S IBX="MEDIC",IBPD="MEDICARE DEDUCTIBLE" ;D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",26,0)
 D EFFDT,END Q:$G(Y)<1
"RTN","IBEBR",27,0)
 G 3
"RTN","IBEBR",28,0)
 ;
"RTN","IBEBR",29,0)
4 ;enter hcfa amb. surg. rates
"RTN","IBEBR",30,0)
 S IBX="HCFA" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",31,0)
 D EFFDT,END
"RTN","IBEBR",32,0)
 G 4
"RTN","IBEBR",33,0)
 ;
"RTN","IBEBR",34,0)
5 ;enter rx copay rates
"RTN","IBEBR",35,0)
 S IBX="COPAY" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",36,0)
 D EFFDT,END
"RTN","IBEBR",37,0)
 G 5
"RTN","IBEBR",38,0)
 ;
"RTN","IBEBR",39,0)
6 ;enter champva subsistence rates
"RTN","IBEBR",40,0)
 S IBX="CHMPVA" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",41,0)
 D EFFDT,END
"RTN","IBEBR",42,0)
 G 6
"RTN","IBEBR",43,0)
 ;
"RTN","IBEBR",44,0)
CHOOSE S IBSEL=$P($T(@IBX),";;",2,99),IB=""
"RTN","IBEBR",45,0)
 F I=1:1 Q:$P($T(@IBX+I),";;",2,99)=""  S IB=IB_I_":"_$P($P($T(@IBX+I),";;",2,99),"^",$S($P($P($T(@IBX+1),";;",2,99),"^",5)="":1,1:5))_";"
"RTN","IBEBR",46,0)
 W !!,"CHOOSE FROM:"
"RTN","IBEBR",47,0)
 F I=1:1 S X=$P(IB,";",I) Q:'X  W !?4,+X,?20,$P(X,":",2)
"RTN","IBEBR",48,0)
 S DIR("?")="^D 1^IBEBRH",DIR("??")="^D 2^IBEBRH"
"RTN","IBEBR",49,0)
 W !! S DIR(0)="SOA^"_IB,DIR("A")="Select "_IBSEL_": " D ^DIR K DIR I $D(DIRUT) G CHOOSEQ
"RTN","IBEBR",50,0)
 S IBP=$P($T(@IBX+Y),";;",2,99) S IBPD=$P(IBP,"^",1) F I=2:1 Q:$P(IBP,"^",I)=""  S IBPD(I)=$P(IBP,"^",I)
"RTN","IBEBR",51,0)
CHOOSEQ Q
"RTN","IBEBR",52,0)
 ;
"RTN","IBEBR",53,0)
EFFDT S %DT="EX"
"RTN","IBEBR",54,0)
 R !!,"   Select Effective Date: ",X:DTIME Q:X=""  D:X["?" 3^IBEBRH I X=" ",$D(IBEFDT) S X=IBEFDT
"RTN","IBEBR",55,0)
 D ^%DT K %DT G:X["?" EFFDT Q:Y<1  S IBEFDT=+Y
"RTN","IBEBR",56,0)
 D FILE G EFFDT
"RTN","IBEBR",57,0)
 Q
"RTN","IBEBR",58,0)
 ;
"RTN","IBEBR",59,0)
FILE ;  -add new entries in 350.2 and edit
"RTN","IBEBR",60,0)
 S DLAYGO=350.2,X=IBPD,DIC="^IBE(350.2,",DIC(0)="ELMQ",DIC("S")="I $P(^(0),U,2)=IBEFDT",DIC("DR")=".02///"_IBEFDT D ^DIC K DIC G:+Y<0 FILEQ
"RTN","IBEBR",61,0)
 ;
"RTN","IBEBR",62,0)
 ;  -if a new entry
"RTN","IBEBR",63,0)
 S IBNEW=$P(Y,"^",3)
"RTN","IBEBR",64,0)
 K DR S DR="" S IBORIG=$O(^IBE(350.2,"B",IBPD,0)),IBLAST=$O(^IBE(350.2,"B",IBPD,+Y),-1) I IBNEW S DR=".02///"_IBEFDT_";.03///"_$P($G(^IBE(350.2,+IBORIG,0)),"^",3)_";"
"RTN","IBEBR",65,0)
 ;
"RTN","IBEBR",66,0)
 S DIE="^IBE(350.2,",DA=+Y,DR=DR_".04;.06;.05;" D ^DIE K DIE
"RTN","IBEBR",67,0)
 ;
"RTN","IBEBR",68,0)
 ;  -delete if no charge or not inactive
"RTN","IBEBR",69,0)
 S X=$G(^IBE(350.2,DA,0)) I '$P(X,"^",4)&('$P(X,"^",5)) W !!,*7,"Deleting - no charge, not inactive" S DIK="^IBE(350.2," D ^DIK Q
"RTN","IBEBR",70,0)
 ;
"RTN","IBEBR",71,0)
 ;  -set computed logic for new entry if needed
"RTN","IBEBR",72,0)
 S IB10=$G(^IBE(350.2,+IBORIG,10)) I IB10]"" S ^IBE(350.2,DA,10)=IB10
"RTN","IBEBR",73,0)
 ;  -set additional amount logic if needed (from last one)
"RTN","IBEBR",74,0)
 S IB20=$G(^IBE(350.2,+IBLAST,20)) I IB20]"" S ^IBE(350.2,DA,20)=IB20
"RTN","IBEBR",75,0)
 ;
"RTN","IBEBR",76,0)
 ;  -logic for rx3-rx6
"RTN","IBEBR",77,0)
 S IB=0,IB0=$G(^IBE(350.2,DA,0)) F  S IB=$O(IBPD(IB)) Q:'IB  D
"RTN","IBEBR",78,0)
 . S IBORIG=$O(^IBE(350.2,"B",IBPD(IB),0)),IBATYP=+$P($G(^IBE(350.2,+IBORIG,0)),"^",3)
"RTN","IBEBR",79,0)
 . I 'IBNEW S DA=$O(^IBE(350.2,"AIVDT",IBATYP,-IBEFDT,0)) Q:'DA
"RTN","IBEBR",80,0)
 . I IBNEW S X=IBPD(IB),DIC="^IBE(350.2,",DIC(0)="L" K DD,DO D FILE^DICN Q:Y<0  S DA=+Y
"RTN","IBEBR",81,0)
 . S DIE="^IBE(350.2,",DR=".02////"_IBEFDT_";.03////"_IBATYP_";.04////"_$P(IB0,"^",4)_";.05////"_$S($P(IB0,"^",5)]"":$P(IB0,"^",5),1:"@")_";.06////"_$S($P(IB0,"^",6)]"":$P(IB0,"^",6),1:"@") D ^DIE
"RTN","IBEBR",82,0)
 . I IB20]"" S ^IBE(350.2,DA,20)=IB20
"RTN","IBEBR",83,0)
 ;
"RTN","IBEBR",84,0)
FILEQ K IB10,DIC,DIE,DR,DA,IBNEW,IBORIG,DIK Q
"RTN","IBEBR",85,0)
 ;
"RTN","IBEBR",86,0)
END ;Kill vars
"RTN","IBEBR",87,0)
 K I,X,Y,IBNOD,IBPD,DIR,DIC,DIE,DIK,DA,DR,DA,IB10,IBORIG,IB,IB0,IBP,IBEFDT,IBSEL,IBX,IBRUN,IB20,IBLAST
"RTN","IBEBR",88,0)
 Q
"RTN","IBEBR",89,0)
 ;
"RTN","IBEBR",90,0)
 ;;
"RTN","IBEBR",91,0)
COPAY ;;Co-pay Type
"RTN","IBEBR",92,0)
NSC ;;RX1^RX3^RX4^^NSC RX CO-PAY (RX1)
"RTN","IBEBR",93,0)
SC ;;RX2^RX5^RX6^^SC RX CO-PAY (RX2)
"RTN","IBEBR",94,0)
 ;;
"RTN","IBEBR",95,0)
PERDIEM ;;Per Diem
"RTN","IBEBR",96,0)
 ;;INPT PER DIEM
"RTN","IBEBR",97,0)
 ;;NHCU PER DIEM
"RTN","IBEBR",98,0)
 ;;
"RTN","IBEBR",99,0)
HCFA ;;HCFA Amb. Surg. Rate
"RTN","IBEBR",100,0)
 ;;MEDICARE 1^^^^AMB SURG RATE 1
"RTN","IBEBR",101,0)
 ;;MEDICARE 2^^^^AMB SURG RATE 2
"RTN","IBEBR",102,0)
 ;;MEDICARE 3^^^^AMB SURG RATE 3
"RTN","IBEBR",103,0)
 ;;MEDICARE 4^^^^AMB SURG RATE 4
"RTN","IBEBR",104,0)
 ;;MEDICARE 5^^^^AMB SURG RATE 5
"RTN","IBEBR",105,0)
 ;;MEDICARE 6^^^^AMB SURG RATE 6
"RTN","IBEBR",106,0)
 ;;MEDICARE 7^^^^AMB SURG RATE 7
"RTN","IBEBR",107,0)
 ;;MEDICARE 8^^^^AMB SURG RATE 8
"RTN","IBEBR",108,0)
 ;;MEDICARE 9^^^^AMB SURG RATE 9
"RTN","IBEBR",109,0)
 ;;
"RTN","IBEBR",110,0)
CHMPVA ;;CHAMPVA Rate Type
"RTN","IBEBR",111,0)
 ;;CHAMPVA PER DIEM
"RTN","IBEBR",112,0)
 ;;CHAMPVA SUBSISTENCE LIMIT
"RTN","IBEBR",113,0)
 ;;
"RTN","IBEBR",114,0)
MEDIC ;;Medicare Deductible
"RTN","IBEBR",115,0)
 ;;MEDICARE DEDUCTIBLE
"RTN","IBEBR",116,0)
 ;;
"RTN","IBEBR",117,0)
MAIN ;;Billing Rate Type
"RTN","IBEBR",118,0)
 ;;REVENUE CODE RATES
"RTN","IBEBR",119,0)
 ;;PER DIEM RATES
"RTN","IBEBR",120,0)
 ;;MEDICARE DEDUCTIBLE
"RTN","IBEBR",121,0)
 ;;HCFA AMB. SURG. RATES
"RTN","IBEBR",122,0)
 ;;RX CO-PAYMENT
"RTN","IBEBR",123,0)
 ;;CHAMPVA SUBSISTENCE RATES
"VER")
8.0^22.0
"^DD",350.2,350.2,20,0)
ADDITIONAL AMOUNT LOGIC^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",350.2,350.2,20,3)
M code to determine if additional amount should be added.
"^DD",350.2,350.2,20,9)
@
"^DD",350.2,350.2,20,21,0)
^^2^2^3100113^
"^DD",350.2,350.2,20,21,1,0)
This is M code to be executed which returns the $T value to determine if
"^DD",350.2,350.2,20,21,2,0)
the Additional Amount (#.06) field should be added to the charge value.
"^DD",350.2,350.2,20,"DT")
3100113
"BLD",1427,6)
^398
**END**
**END**
