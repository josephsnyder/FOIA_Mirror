Released IB*2*517 SEQ #523
Extracted from mail message
**KIDS**:IB*2.0*517^

**INSTALL NAME**
IB*2.0*517
"BLD",8615,0)
IB*2.0*517^INTEGRATED BILLING^0^3160523^y
"BLD",8615,4,0)
^9.64PA^356.023^34
"BLD",8615,4,350.9,0)
350.9
"BLD",8615,4,350.9,2,0)
^9.641^350.966^6
"BLD",8615,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",8615,4,350.9,2,350.9,1,0)
^9.6411^62.13^11
"BLD",8615,4,350.9,2,350.9,1,62.02,0)
CPAC ADM FUTURE DAYS
"BLD",8615,4,350.9,2,350.9,1,62.03,0)
CPAC APPT PAST DAYS
"BLD",8615,4,350.9,2,350.9,1,62.04,0)
CPAC ADM PAST DAYS
"BLD",8615,4,350.9,2,350.9,1,62.05,0)
TRICARE APPT FUTURE DAYS
"BLD",8615,4,350.9,2,350.9,1,62.06,0)
TRICARE ADM FUTURE DAYS
"BLD",8615,4,350.9,2,350.9,1,62.07,0)
TRICARE APPT PAST DAYS
"BLD",8615,4,350.9,2,350.9,1,62.08,0)
TRICARE ADM PAST DAYS
"BLD",8615,4,350.9,2,350.9,1,62.09,0)
PURGE DAYS
"BLD",8615,4,350.9,2,350.9,1,62.1,0)
INQUIRY TRIGGER APPT
"BLD",8615,4,350.9,2,350.9,1,62.11,0)
INQUIRY TRIGGER ADM
"BLD",8615,4,350.9,2,350.9,1,62.12,0)
HSCR RESPONSE PURGE DAYS
"BLD",8615,4,350.9,2,350.9,1,62.13,0)
CPAC APPT FUTURE DAYS
"BLD",8615,4,350.9,2,350.963,0)
HCSR CLINIC LIST  (sub-file)
"BLD",8615,4,350.9,2,350.963,1,0)
^9.6411^^
"BLD",8615,4,350.9,2,350.9631,0)
INCLUDE CLINIC FOR PAYERS  (sub-file)
"BLD",8615,4,350.9,2,350.9631,1,0)
^9.6411^^
"BLD",8615,4,350.9,2,350.964,0)
HCSR WARD LIST  (sub-file)
"BLD",8615,4,350.9,2,350.964,1,0)
^9.6411^^
"BLD",8615,4,350.9,2,350.9641,0)
INCLUDE WARD FOR PAYERS  (sub-file)
"BLD",8615,4,350.9,2,350.9641,1,0)
^9.6411^^
"BLD",8615,4,350.9,2,350.965,0)
HCSR INSCO APPT LIST  (sub-file)
"BLD",8615,4,350.9,2,350.965,1,0)
^9.6411^^
"BLD",8615,4,350.9,2,350.966,0)
HCSR INSCO ADM LIST  (sub-file)
"BLD",8615,4,350.9,2,350.966,1,0)
^9.6411^^
"BLD",8615,4,350.9,222)
y^y^p^^^^n^^n
"BLD",8615,4,350.9,224)

"BLD",8615,4,356.001,0)
356.001
"BLD",8615,4,356.001,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.002,0)
356.002
"BLD",8615,4,356.002,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.003,0)
356.003
"BLD",8615,4,356.003,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.004,0)
356.004
"BLD",8615,4,356.004,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.005,0)
356.005
"BLD",8615,4,356.005,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.006,0)
356.006
"BLD",8615,4,356.006,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.007,0)
356.007
"BLD",8615,4,356.007,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.008,0)
356.008
"BLD",8615,4,356.008,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.009,0)
356.009
"BLD",8615,4,356.009,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.01,0)
356.01
"BLD",8615,4,356.01,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.011,0)
356.011
"BLD",8615,4,356.011,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.012,0)
356.012
"BLD",8615,4,356.012,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.013,0)
356.013
"BLD",8615,4,356.013,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.014,0)
356.014
"BLD",8615,4,356.014,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.015,0)
356.015
"BLD",8615,4,356.015,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.016,0)
356.016
"BLD",8615,4,356.016,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.017,0)
356.017
"BLD",8615,4,356.017,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.018,0)
356.018
"BLD",8615,4,356.018,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.019,0)
356.019
"BLD",8615,4,356.019,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.02,0)
356.02
"BLD",8615,4,356.02,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.021,0)
356.021
"BLD",8615,4,356.021,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.022,0)
356.022
"BLD",8615,4,356.022,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.023,0)
356.023
"BLD",8615,4,356.023,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,356.22,0)
356.22
"BLD",8615,4,356.22,222)
y^y^f^^^^n
"BLD",8615,4,365.013,0)
365.013
"BLD",8615,4,365.013,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,365.015,0)
365.015
"BLD",8615,4,365.015,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,365.016,0)
365.016
"BLD",8615,4,365.016,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,365.017,0)
365.017
"BLD",8615,4,365.017,222)
n^y^f^^n^^y^o^n
"BLD",8615,4,365.021,0)
365.021
"BLD",8615,4,365.021,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,365.022,0)
365.022
"BLD",8615,4,365.022,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,365.025,0)
365.025
"BLD",8615,4,365.025,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,365.027,0)
365.027
"BLD",8615,4,365.027,222)
y^y^f^^n^^y^o^n
"BLD",8615,4,399,0)
399
"BLD",8615,4,399,2,0)
^9.641^399^1
"BLD",8615,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",8615,4,399,2,399,1,0)
^9.6411^^
"BLD",8615,4,399,2,399,1,112,0)
PRIMARY INSURANCE POLICY
"BLD",8615,4,399,2,399,1,113,0)
SECONDARY INSURANCE POLICY
"BLD",8615,4,399,2,399,1,114,0)
TERTIARY INSURANCE POLICY
"BLD",8615,4,399,222)
y^y^p^^^^n^^n
"BLD",8615,4,399,224)

"BLD",8615,4,"APDD",350.9,350.9)

"BLD",8615,4,"APDD",350.9,350.9,62.02)

"BLD",8615,4,"APDD",350.9,350.9,62.03)

"BLD",8615,4,"APDD",350.9,350.9,62.04)

"BLD",8615,4,"APDD",350.9,350.9,62.05)

"BLD",8615,4,"APDD",350.9,350.9,62.06)

"BLD",8615,4,"APDD",350.9,350.9,62.07)

"BLD",8615,4,"APDD",350.9,350.9,62.08)

"BLD",8615,4,"APDD",350.9,350.9,62.09)

"BLD",8615,4,"APDD",350.9,350.9,62.1)

"BLD",8615,4,"APDD",350.9,350.9,62.11)

"BLD",8615,4,"APDD",350.9,350.9,62.12)

"BLD",8615,4,"APDD",350.9,350.9,62.13)

"BLD",8615,4,"APDD",350.9,350.963)

"BLD",8615,4,"APDD",350.9,350.9631)

"BLD",8615,4,"APDD",350.9,350.964)

"BLD",8615,4,"APDD",350.9,350.9641)

"BLD",8615,4,"APDD",350.9,350.965)

"BLD",8615,4,"APDD",350.9,350.966)

"BLD",8615,4,"APDD",399,399)

"BLD",8615,4,"APDD",399,399,112)

"BLD",8615,4,"APDD",399,399,113)

"BLD",8615,4,"APDD",399,399,114)

"BLD",8615,4,"B",350.9,350.9)

"BLD",8615,4,"B",356.001,356.001)

"BLD",8615,4,"B",356.002,356.002)

"BLD",8615,4,"B",356.003,356.003)

"BLD",8615,4,"B",356.004,356.004)

"BLD",8615,4,"B",356.005,356.005)

"BLD",8615,4,"B",356.006,356.006)

"BLD",8615,4,"B",356.007,356.007)

"BLD",8615,4,"B",356.008,356.008)

"BLD",8615,4,"B",356.009,356.009)

"BLD",8615,4,"B",356.01,356.01)

"BLD",8615,4,"B",356.011,356.011)

"BLD",8615,4,"B",356.012,356.012)

"BLD",8615,4,"B",356.013,356.013)

"BLD",8615,4,"B",356.014,356.014)

"BLD",8615,4,"B",356.015,356.015)

"BLD",8615,4,"B",356.016,356.016)

"BLD",8615,4,"B",356.017,356.017)

"BLD",8615,4,"B",356.018,356.018)

"BLD",8615,4,"B",356.019,356.019)

"BLD",8615,4,"B",356.02,356.02)

"BLD",8615,4,"B",356.021,356.021)

"BLD",8615,4,"B",356.022,356.022)

"BLD",8615,4,"B",356.023,356.023)

"BLD",8615,4,"B",356.22,356.22)

"BLD",8615,4,"B",365.013,365.013)

"BLD",8615,4,"B",365.015,365.015)

"BLD",8615,4,"B",365.016,365.016)

"BLD",8615,4,"B",365.017,365.017)

"BLD",8615,4,"B",365.021,365.021)

"BLD",8615,4,"B",365.022,365.022)

"BLD",8615,4,"B",365.025,365.025)

"BLD",8615,4,"B",365.027,365.027)

"BLD",8615,4,"B",399,399)

"BLD",8615,6.3)
240
"BLD",8615,"ABPKG")
n
"BLD",8615,"INI")
IBY517PR
"BLD",8615,"INID")
^n^n
"BLD",8615,"INIT")
IBY517PO
"BLD",8615,"KRN",0)
^9.67PA^779.2^20
"BLD",8615,"KRN",.4,0)
.4
"BLD",8615,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8615,"KRN",.401,0)
.401
"BLD",8615,"KRN",.402,0)
.402
"BLD",8615,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",8615,"KRN",.402,"NM",1,0)
IB CREATE 278 REQUEST    FILE #356.22^356.22^0
"BLD",8615,"KRN",.402,"NM",2,0)
IB CREATE 278 REQUEST SHORT    FILE #356.22^356.22^0
"BLD",8615,"KRN",.402,"NM",3,0)
IB ADD/EDIT 278    FILE #356.22^356.22^0
"BLD",8615,"KRN",.402,"NM","B","IB ADD/EDIT 278    FILE #356.22",3)

"BLD",8615,"KRN",.402,"NM","B","IB CREATE 278 REQUEST    FILE #356.22",1)

"BLD",8615,"KRN",.402,"NM","B","IB CREATE 278 REQUEST SHORT    FILE #356.22",2)

"BLD",8615,"KRN",.403,0)
.403
"BLD",8615,"KRN",.5,0)
.5
"BLD",8615,"KRN",.84,0)
.84
"BLD",8615,"KRN",3.6,0)
3.6
"BLD",8615,"KRN",3.8,0)
3.8
"BLD",8615,"KRN",3.8,"NM",0)
^9.68A^2^2
"BLD",8615,"KRN",3.8,"NM",1,0)
IBTR 278 MESSAGE^^0
"BLD",8615,"KRN",3.8,"NM",2,0)
IBTUPD MESSAGE^^0
"BLD",8615,"KRN",3.8,"NM","B","IBTR 278 MESSAGE",1)

"BLD",8615,"KRN",3.8,"NM","B","IBTUPD MESSAGE",2)

"BLD",8615,"KRN",9.2,0)
9.2
"BLD",8615,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",8615,"KRN",9.8,0)
9.8
"BLD",8615,"KRN",9.8,"NM",0)
^9.68A^52^50
"BLD",8615,"KRN",9.8,"NM",1,0)
IBJPC^^0^B34128004
"BLD",8615,"KRN",9.8,"NM",2,0)
IBJPC1^^0^B109463109
"BLD",8615,"KRN",9.8,"NM",3,0)
IBY517PO^^0^B30255307
"BLD",8615,"KRN",9.8,"NM",4,0)
IBTRHDE^^0^B135940675
"BLD",8615,"KRN",9.8,"NM",5,0)
IBTRHLO1^^0^B184271063
"BLD",8615,"KRN",9.8,"NM",6,0)
IBTRHLO^^0^B150899426
"BLD",8615,"KRN",9.8,"NM",7,0)
IBTRH1^^0^B195054371
"BLD",8615,"KRN",9.8,"NM",8,0)
IBTRHLO2^^0^B22869624
"BLD",8615,"KRN",9.8,"NM",9,0)
IBTRH2^^0^B142856464
"BLD",8615,"KRN",9.8,"NM",10,0)
IBJPC2^^0^B18114113
"BLD",8615,"KRN",9.8,"NM",11,0)
IBTRH5^^0^B229496459
"BLD",8615,"KRN",9.8,"NM",12,0)
IBTRHLI^^0^B2260238
"BLD",8615,"KRN",9.8,"NM",13,0)
IBTRHLI1^^0^B11775197
"BLD",8615,"KRN",9.8,"NM",14,0)
IBTRHLI2^^0^B196116381
"BLD",8615,"KRN",9.8,"NM",15,0)
IBTRHLU^^0^B3594614
"BLD",8615,"KRN",9.8,"NM",16,0)
IBTRH3^^0^B110798316
"BLD",8615,"KRN",9.8,"NM",17,0)
IBTRH3A^^0^B156802114
"BLD",8615,"KRN",9.8,"NM",18,0)
IBTRH1A^^0^B221868988
"BLD",8615,"KRN",9.8,"NM",19,0)
IBTRH5A^^0^B142025931
"BLD",8615,"KRN",9.8,"NM",20,0)
IBTRHLI3^^0^B185121370
"BLD",8615,"KRN",9.8,"NM",22,0)
IBTRH5B^^0^B121449376
"BLD",8615,"KRN",9.8,"NM",23,0)
IBCNS4^^0^B3702577
"BLD",8615,"KRN",9.8,"NM",24,0)
IBTRH5C^^0^B109276107
"BLD",8615,"KRN",9.8,"NM",25,0)
IBTRH1B^^0^B30643582
"BLD",8615,"KRN",9.8,"NM",26,0)
IBTRH3B^^0^B148426620
"BLD",8615,"KRN",9.8,"NM",27,0)
IBTRH2A^^0^B101621694
"BLD",8615,"KRN",9.8,"NM",28,0)
IBTRH5D^^0^B177666961
"BLD",8615,"KRN",9.8,"NM",29,0)
IBTRH5E^^0^B137475866
"BLD",8615,"KRN",9.8,"NM",30,0)
IBTRH5F^^0^B134425924
"BLD",8615,"KRN",9.8,"NM",31,0)
IBJPM^^0^B11156673
"BLD",8615,"KRN",9.8,"NM",32,0)
IBTRH5G^^0^B92609469
"BLD",8615,"KRN",9.8,"NM",33,0)
IBTRHDE1^^0^B5388716
"BLD",8615,"KRN",9.8,"NM",34,0)
IBTRH5H^^0^B25009378
"BLD",8615,"KRN",9.8,"NM",36,0)
IBTRH2B^^0^B4869140
"BLD",8615,"KRN",9.8,"NM",37,0)
IBTRP^^0^B8798598
"BLD",8615,"KRN",9.8,"NM",38,0)
IBTRH6^^0^B163678664
"BLD",8615,"KRN",9.8,"NM",39,0)
IBTRH5I^^0^B233667896
"BLD",8615,"KRN",9.8,"NM",40,0)
IBTRH5J^^0^B115879805
"BLD",8615,"KRN",9.8,"NM",41,0)
IBTRH5K^^0^B41363452
"BLD",8615,"KRN",9.8,"NM",42,0)
IBY517PR^^0^B911220
"BLD",8615,"KRN",9.8,"NM",43,0)
IBJPC3^^0^B14208611
"BLD",8615,"KRN",9.8,"NM",44,0)
IBTUTL^^0^B52307998
"BLD",8615,"KRN",9.8,"NM",45,0)
IBTUTL1^^0^B61280810
"BLD",8615,"KRN",9.8,"NM",46,0)
IBMFNHLI^^0^B107548431
"BLD",8615,"KRN",9.8,"NM",47,0)
IBTRH7^^0^B41208064
"BLD",8615,"KRN",9.8,"NM",48,0)
IBTRH8^^0^B196836390
"BLD",8615,"KRN",9.8,"NM",49,0)
IBTRH8A^^0^B120085680
"BLD",8615,"KRN",9.8,"NM",50,0)
IBTRHRC^^0^B203075385
"BLD",8615,"KRN",9.8,"NM",51,0)
IBTRHRD^^0^B116950528
"BLD",8615,"KRN",9.8,"NM",52,0)
IBTRHRS^^0^B158405913
"BLD",8615,"KRN",9.8,"NM","B","IBCNS4",23)

"BLD",8615,"KRN",9.8,"NM","B","IBJPC",1)

"BLD",8615,"KRN",9.8,"NM","B","IBJPC1",2)

"BLD",8615,"KRN",9.8,"NM","B","IBJPC2",10)

"BLD",8615,"KRN",9.8,"NM","B","IBJPC3",43)

"BLD",8615,"KRN",9.8,"NM","B","IBJPM",31)

"BLD",8615,"KRN",9.8,"NM","B","IBMFNHLI",46)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH1",7)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH1A",18)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH1B",25)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH2",9)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH2A",27)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH2B",36)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH3",16)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH3A",17)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH3B",26)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5",11)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5A",19)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5B",22)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5C",24)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5D",28)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5E",29)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5F",30)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5G",32)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5H",34)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5I",39)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5J",40)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH5K",41)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH6",38)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH7",47)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH8",48)

"BLD",8615,"KRN",9.8,"NM","B","IBTRH8A",49)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHDE",4)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHDE1",33)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLI",12)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLI1",13)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLI2",14)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLI3",20)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLO",6)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLO1",5)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLO2",8)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHLU",15)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHRC",50)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHRD",51)

"BLD",8615,"KRN",9.8,"NM","B","IBTRHRS",52)

"BLD",8615,"KRN",9.8,"NM","B","IBTRP",37)

"BLD",8615,"KRN",9.8,"NM","B","IBTUTL",44)

"BLD",8615,"KRN",9.8,"NM","B","IBTUTL1",45)

"BLD",8615,"KRN",9.8,"NM","B","IBY517PO",3)

"BLD",8615,"KRN",9.8,"NM","B","IBY517PR",42)

"BLD",8615,"KRN",19,0)
19
"BLD",8615,"KRN",19,"NM",0)
^9.68A^22^10
"BLD",8615,"KRN",19,"NM",1,0)
IBT HCSR NIGHTLY PROCESS^^0
"BLD",8615,"KRN",19,"NM",2,0)
ZTMQUEUABLE OPTIONS^^2
"BLD",8615,"KRN",19,"NM",3,0)
IBT HCSR WORKLIST^^0
"BLD",8615,"KRN",19,"NM",4,0)
IBT USER MENU (IR)^^2
"BLD",8615,"KRN",19,"NM",5,0)
IBT HCSR RESPONSE VIEW^^0
"BLD",8615,"KRN",19,"NM",6,0)
IBT USER COMBINED MCCR/UR MENU^^2
"BLD",8615,"KRN",19,"NM",14,0)
IBT OUTPUT MENU^^2^
"BLD",8615,"KRN",19,"NM",20,0)
IBT 278 STATISTICAL REPORT^^0
"BLD",8615,"KRN",19,"NM",21,0)
IBT 278 CERTIFICATION REPORT^^0
"BLD",8615,"KRN",19,"NM",22,0)
IBT 278 DISPOSITION REPORT^^0
"BLD",8615,"KRN",19,"NM","B","IBT 278 CERTIFICATION REPORT",21)

"BLD",8615,"KRN",19,"NM","B","IBT 278 DISPOSITION REPORT",22)

"BLD",8615,"KRN",19,"NM","B","IBT 278 STATISTICAL REPORT",20)

"BLD",8615,"KRN",19,"NM","B","IBT HCSR NIGHTLY PROCESS",1)

"BLD",8615,"KRN",19,"NM","B","IBT HCSR RESPONSE VIEW",5)

"BLD",8615,"KRN",19,"NM","B","IBT HCSR WORKLIST",3)

"BLD",8615,"KRN",19,"NM","B","IBT OUTPUT MENU",14)

"BLD",8615,"KRN",19,"NM","B","IBT USER COMBINED MCCR/UR MENU",6)

"BLD",8615,"KRN",19,"NM","B","IBT USER MENU (IR)",4)

"BLD",8615,"KRN",19,"NM","B","ZTMQUEUABLE OPTIONS",2)

"BLD",8615,"KRN",19.1,0)
19.1
"BLD",8615,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8615,"KRN",19.1,"NM",1,0)
IB HCSR PARAM EDIT^^0
"BLD",8615,"KRN",19.1,"NM","B","IB HCSR PARAM EDIT",1)

"BLD",8615,"KRN",101,0)
101
"BLD",8615,"KRN",101,"NM",0)
^9.68A^86^73
"BLD",8615,"KRN",101,"NM",1,0)
IBJP HCSR CLINICS EDIT^^0
"BLD",8615,"KRN",101,"NM",2,0)
IBJP HCSR WARDS EDIT^^0
"BLD",8615,"KRN",101,"NM",3,0)
IBJP HCSR ADM INSCO EDIT^^0
"BLD",8615,"KRN",101,"NM",4,0)
IBJP HCSR APPT INSCO EDIT^^0
"BLD",8615,"KRN",101,"NM",5,0)
IBJP HCSR CLINIC ADD^^0
"BLD",8615,"KRN",101,"NM",6,0)
IBJP HCSR CLINIC DEL^^0
"BLD",8615,"KRN",101,"NM",7,0)
IBJP HCSR WARD ADD^^0
"BLD",8615,"KRN",101,"NM",8,0)
IBJP HCSR WARD DEL^^0
"BLD",8615,"KRN",101,"NM",9,0)
IBJP HCSR CLINICS MENU^^0
"BLD",8615,"KRN",101,"NM",10,0)
IBJP HCSR WARDS MENU^^0
"BLD",8615,"KRN",101,"NM",11,0)
IBJP HCSR ADM INSCO MENU^^0
"BLD",8615,"KRN",101,"NM",12,0)
IBJP HCSR APPT INSCO MENU^^0
"BLD",8615,"KRN",101,"NM",13,0)
IBT HCSR WORKLIST MENU^^0
"BLD",8615,"KRN",101,"NM",14,0)
IBT HCSR LIST SORT^^0
"BLD",8615,"KRN",101,"NM",15,0)
IBT HCSR LIST DEL^^0
"BLD",8615,"KRN",101,"NM",16,0)
IBT HCSR EXPAND ENTRY^^0
"BLD",8615,"KRN",101,"NM",17,0)
IBT HCSR ENTRY MENU^^0
"BLD",8615,"KRN",101,"NM",18,0)
IBT HCSR SEND 278 REQUEST^^0
"BLD",8615,"KRN",101,"NM",20,0)
IBT HCSR ADD COMMENT^^0
"BLD",8615,"KRN",101,"NM",22,0)
IBT HCSR IN PROGRESS SET^^0
"BLD",8615,"KRN",101,"NM",23,0)
IBT HCSR IN PROGRESS REM^^0
"BLD",8615,"KRN",101,"NM",26,0)
IBTR HCSR INQUIRY^^0
"BLD",8615,"KRN",101,"NM",27,0)
IBTR HCSR RESPONSE^^0
"BLD",8615,"KRN",101,"NM",28,0)
IBJP CLAIMS TRACKING MENU^^0
"BLD",8615,"KRN",101,"NM",29,0)
IBJP HCSR PARAMETERS EDIT^^0
"BLD",8615,"KRN",101,"NM",30,0)
IBJP HCSR PARAMETERS MENU^^0
"BLD",8615,"KRN",101,"NM",31,0)
IBJP HCSR OTHER EDIT^^0
"BLD",8615,"KRN",101,"NM",32,0)
IBJP HCSR ADM INSCO ADD^^0
"BLD",8615,"KRN",101,"NM",33,0)
IBJP HCSR ADM INSCO DEL^^0
"BLD",8615,"KRN",101,"NM",34,0)
IBJP HCSR APPT INSCO ADD^^0
"BLD",8615,"KRN",101,"NM",35,0)
IBJP HCSR APPT INSCO DEL^^0
"BLD",8615,"KRN",101,"NM",36,0)
IBJ EXIT^^0
"BLD",8615,"KRN",101,"NM",37,0)
IBT HCSR RESPONSE EDIT^^0
"BLD",8615,"KRN",101,"NM",38,0)
IBT HCSR RESPONSE LIST SORT^^0
"BLD",8615,"KRN",101,"NM",39,0)
IBT HCSR RESPONSE EXPAND ENTRY^^0
"BLD",8615,"KRN",101,"NM",44,0)
IBT HCSR RESPONSE MENU^^0
"BLD",8615,"KRN",101,"NM",47,0)
IBT HCSR REFRESH^^0
"BLD",8615,"KRN",101,"NM",49,0)
VALM BLANK 1^^0
"BLD",8615,"KRN",101,"NM",50,0)
IBT HCSR NEXT REVIEW^^0
"BLD",8615,"KRN",101,"NM",51,0)
IBT HCSR RESPONSE REFRESH^^0
"BLD",8615,"KRN",101,"NM",53,0)
IBT HCSR ADD COMMENT WORKLIST^^0
"BLD",8615,"KRN",101,"NM",54,0)
IBT HCSR RESPONSE NEXT REVIEW^^0
"BLD",8615,"KRN",101,"NM",55,0)
IBT HCSR IN PROGRESS EE REM^^0
"BLD",8615,"KRN",101,"NM",56,0)
IBT HCSR IN PROGRESS EE SET^^0
"BLD",8615,"KRN",101,"NM",58,0)
IBT HCSR SEND 278 INQUIRY^^0
"BLD",8615,"KRN",101,"NM",59,0)
IBT HCSR SEND 278 ADD DATA^^0
"BLD",8615,"KRN",101,"NM",60,0)
IBT HCSR SEND 278 SHORT^^0
"BLD",8615,"KRN",101,"NM",61,0)
IBT HCSR SEND 278 SHORT MENU^^0
"BLD",8615,"KRN",101,"NM",62,0)
IBT HCSR RESPONSE VIEW MENU^^0
"BLD",8615,"KRN",101,"NM",63,0)
IBT HCSR VIEW PENDING RESPONSE^^0
"BLD",8615,"KRN",101,"NM",64,0)
IBT HCSR SEND 278 REQUEST SHORT^^0
"BLD",8615,"KRN",101,"NM",65,0)
IBTR HCSR IN^^0
"BLD",8615,"KRN",101,"NM",66,0)
IBTR HCSR OUT^^0
"BLD",8615,"KRN",101,"NM",67,0)
IBT HCSR RESPONSE IN PROGRESS REM^^0
"BLD",8615,"KRN",101,"NM",68,0)
IBT HCSR RESPONSE IN PROGRESS SET^^0
"BLD",8615,"KRN",101,"NM",69,0)
IBT HCSR RESPONSE IN PROGRESS EE REM^^0
"BLD",8615,"KRN",101,"NM",70,0)
IBT HCSR RESPONSE IN PROGRESS EE SET^^0
"BLD",8615,"KRN",101,"NM",71,0)
IBT HCSR RESPONSE EE SEND278^^0
"BLD",8615,"KRN",101,"NM",72,0)
IBT HCSR RESPONSE LIST DEL^^0
"BLD",8615,"KRN",101,"NM",73,0)
IBT HCSR COPY 278 REQUEST^^0
"BLD",8615,"KRN",101,"NM",74,0)
IBJP HCSR CLINIC ADD PAYER^^0
"BLD",8615,"KRN",101,"NM",75,0)
IBJP HCSR CLINIC DEL PAYER^^0
"BLD",8615,"KRN",101,"NM",76,0)
IBJP HCSR WARD ADD PAYER^^0
"BLD",8615,"KRN",101,"NM",77,0)
IBJP HCSR WARD DEL PAYER^^0
"BLD",8615,"KRN",101,"NM",78,0)
IB TBLUPD IN^^0
"BLD",8615,"KRN",101,"NM",79,0)
IB TABLE UPDATE^^0
"BLD",8615,"KRN",101,"NM",80,0)
IBT HCSR MANUAL 278 REQUEST^^0
"BLD",8615,"KRN",101,"NM",81,0)
IBT HCSR VIEW X12 MESSAGE^^0
"BLD",8615,"KRN",101,"NM",82,0)
VALM BLANK 2^^0
"BLD",8615,"KRN",101,"NM",83,0)
IBJP CT GENERAL EDIT^^0
"BLD",8615,"KRN",101,"NM",84,0)
IBJP CT RANDOM SAMPLE EDIT^^0
"BLD",8615,"KRN",101,"NM",85,0)
IBJP CT TRACKING EDIT^^0
"BLD",8615,"KRN",101,"NM",86,0)
IBJP CT EDIT ALL^^0
"BLD",8615,"KRN",101,"NM","B","IB TABLE UPDATE",79)

"BLD",8615,"KRN",101,"NM","B","IB TBLUPD IN",78)

"BLD",8615,"KRN",101,"NM","B","IBJ EXIT",36)

"BLD",8615,"KRN",101,"NM","B","IBJP CLAIMS TRACKING MENU",28)

"BLD",8615,"KRN",101,"NM","B","IBJP CT EDIT ALL",86)

"BLD",8615,"KRN",101,"NM","B","IBJP CT GENERAL EDIT",83)

"BLD",8615,"KRN",101,"NM","B","IBJP CT RANDOM SAMPLE EDIT",84)

"BLD",8615,"KRN",101,"NM","B","IBJP CT TRACKING EDIT",85)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR ADM INSCO ADD",32)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR ADM INSCO DEL",33)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR ADM INSCO EDIT",3)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR ADM INSCO MENU",11)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR APPT INSCO ADD",34)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR APPT INSCO DEL",35)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR APPT INSCO EDIT",4)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR APPT INSCO MENU",12)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR CLINIC ADD",5)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR CLINIC ADD PAYER",74)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR CLINIC DEL",6)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR CLINIC DEL PAYER",75)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR CLINICS EDIT",1)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR CLINICS MENU",9)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR OTHER EDIT",31)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR PARAMETERS EDIT",29)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR PARAMETERS MENU",30)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR WARD ADD",7)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR WARD ADD PAYER",76)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR WARD DEL",8)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR WARD DEL PAYER",77)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR WARDS EDIT",2)

"BLD",8615,"KRN",101,"NM","B","IBJP HCSR WARDS MENU",10)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR ADD COMMENT",20)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR ADD COMMENT WORKLIST",53)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR COPY 278 REQUEST",73)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR ENTRY MENU",17)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR EXPAND ENTRY",16)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR IN PROGRESS EE REM",55)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR IN PROGRESS EE SET",56)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR IN PROGRESS REM",23)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR IN PROGRESS SET",22)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR LIST DEL",15)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR LIST SORT",14)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR MANUAL 278 REQUEST",80)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR NEXT REVIEW",50)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR REFRESH",47)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE EDIT",37)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE EE SEND278",71)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE EXPAND ENTRY",39)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE IN PROGRESS EE REM",69)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE IN PROGRESS EE SET",70)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE IN PROGRESS REM",67)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE IN PROGRESS SET",68)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE LIST DEL",72)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE LIST SORT",38)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE MENU",44)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE NEXT REVIEW",54)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE REFRESH",51)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR RESPONSE VIEW MENU",62)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR SEND 278 ADD DATA",59)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR SEND 278 INQUIRY",58)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR SEND 278 REQUEST",18)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR SEND 278 REQUEST SHORT",64)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR SEND 278 SHORT",60)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR SEND 278 SHORT MENU",61)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR VIEW PENDING RESPONSE",63)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR VIEW X12 MESSAGE",81)

"BLD",8615,"KRN",101,"NM","B","IBT HCSR WORKLIST MENU",13)

"BLD",8615,"KRN",101,"NM","B","IBTR HCSR IN",65)

"BLD",8615,"KRN",101,"NM","B","IBTR HCSR INQUIRY",26)

"BLD",8615,"KRN",101,"NM","B","IBTR HCSR OUT",66)

"BLD",8615,"KRN",101,"NM","B","IBTR HCSR RESPONSE",27)

"BLD",8615,"KRN",101,"NM","B","VALM BLANK 1",49)

"BLD",8615,"KRN",101,"NM","B","VALM BLANK 2",82)

"BLD",8615,"KRN",409.61,0)
409.61
"BLD",8615,"KRN",409.61,"NM",0)
^9.68A^13^13
"BLD",8615,"KRN",409.61,"NM",1,0)
IBJP CLAIMS TRACKING^^0
"BLD",8615,"KRN",409.61,"NM",2,0)
IBJP HCSR CLINICS^^0
"BLD",8615,"KRN",409.61,"NM",3,0)
IBJP HCSR WARDS^^0
"BLD",8615,"KRN",409.61,"NM",4,0)
IBJP HCSR ADM INSCO^^0
"BLD",8615,"KRN",409.61,"NM",5,0)
IBJP HCSR APPT INSCO^^0
"BLD",8615,"KRN",409.61,"NM",6,0)
IBT HCSR WORKLIST^^0
"BLD",8615,"KRN",409.61,"NM",7,0)
IBT HCSR ENTRY^^0
"BLD",8615,"KRN",409.61,"NM",8,0)
IBJP HCSR PARAMETERS^^0
"BLD",8615,"KRN",409.61,"NM",9,0)
IBT HCSR RESPONSE WORKLIST^^0
"BLD",8615,"KRN",409.61,"NM",10,0)
IBT CLAIMS TRACKING EDITOR^^0
"BLD",8615,"KRN",409.61,"NM",11,0)
IBT COMMUNICATIONS EDITOR^^0
"BLD",8615,"KRN",409.61,"NM",12,0)
IBT HCSR RESPONSE VIEW^^0
"BLD",8615,"KRN",409.61,"NM",13,0)
IBT HCSR SEND 278 SHORT^^0
"BLD",8615,"KRN",409.61,"NM","B","IBJP CLAIMS TRACKING",1)

"BLD",8615,"KRN",409.61,"NM","B","IBJP HCSR ADM INSCO",4)

"BLD",8615,"KRN",409.61,"NM","B","IBJP HCSR APPT INSCO",5)

"BLD",8615,"KRN",409.61,"NM","B","IBJP HCSR CLINICS",2)

"BLD",8615,"KRN",409.61,"NM","B","IBJP HCSR PARAMETERS",8)

"BLD",8615,"KRN",409.61,"NM","B","IBJP HCSR WARDS",3)

"BLD",8615,"KRN",409.61,"NM","B","IBT CLAIMS TRACKING EDITOR",10)

"BLD",8615,"KRN",409.61,"NM","B","IBT COMMUNICATIONS EDITOR",11)

"BLD",8615,"KRN",409.61,"NM","B","IBT HCSR ENTRY",7)

"BLD",8615,"KRN",409.61,"NM","B","IBT HCSR RESPONSE VIEW",12)

"BLD",8615,"KRN",409.61,"NM","B","IBT HCSR RESPONSE WORKLIST",9)

"BLD",8615,"KRN",409.61,"NM","B","IBT HCSR SEND 278 SHORT",13)

"BLD",8615,"KRN",409.61,"NM","B","IBT HCSR WORKLIST",6)

"BLD",8615,"KRN",771,0)
771
"BLD",8615,"KRN",771,"NM",0)
^9.68A^4^4
"BLD",8615,"KRN",771,"NM",1,0)
IB HCSR VISTA^^0
"BLD",8615,"KRN",771,"NM",2,0)
IB HCSR EC^^0
"BLD",8615,"KRN",771,"NM",3,0)
IB TABLE UPDATE FSC^^0
"BLD",8615,"KRN",771,"NM",4,0)
IB TABLE UPDATE VISTA^^0
"BLD",8615,"KRN",771,"NM","B","IB HCSR EC",2)

"BLD",8615,"KRN",771,"NM","B","IB HCSR VISTA",1)

"BLD",8615,"KRN",771,"NM","B","IB TABLE UPDATE FSC",3)

"BLD",8615,"KRN",771,"NM","B","IB TABLE UPDATE VISTA",4)

"BLD",8615,"KRN",779.2,0)
779.2
"BLD",8615,"KRN",870,0)
870
"BLD",8615,"KRN",870,"NM",0)
^9.68A^2^2
"BLD",8615,"KRN",870,"NM",1,0)
HCSR OUT^^0
"BLD",8615,"KRN",870,"NM",2,0)
IBTUPD OUT^^0
"BLD",8615,"KRN",870,"NM","B","HCSR OUT",1)

"BLD",8615,"KRN",870,"NM","B","IBTUPD OUT",2)

"BLD",8615,"KRN",8989.51,0)
8989.51
"BLD",8615,"KRN",8989.52,0)
8989.52
"BLD",8615,"KRN",8994,0)
8994
"BLD",8615,"KRN","B",.4,.4)

"BLD",8615,"KRN","B",.401,.401)

"BLD",8615,"KRN","B",.402,.402)

"BLD",8615,"KRN","B",.403,.403)

"BLD",8615,"KRN","B",.5,.5)

"BLD",8615,"KRN","B",.84,.84)

"BLD",8615,"KRN","B",3.6,3.6)

"BLD",8615,"KRN","B",3.8,3.8)

"BLD",8615,"KRN","B",9.2,9.2)

"BLD",8615,"KRN","B",9.8,9.8)

"BLD",8615,"KRN","B",19,19)

"BLD",8615,"KRN","B",19.1,19.1)

"BLD",8615,"KRN","B",101,101)

"BLD",8615,"KRN","B",409.61,409.61)

"BLD",8615,"KRN","B",771,771)

"BLD",8615,"KRN","B",779.2,779.2)

"BLD",8615,"KRN","B",870,870)

"BLD",8615,"KRN","B",8989.51,8989.51)

"BLD",8615,"KRN","B",8989.52,8989.52)

"BLD",8615,"KRN","B",8994,8994)

"BLD",8615,"PRET")

"BLD",8615,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",8615,"QUES",0)
^9.62^^
"BLD",8615,"REQB",0)
^9.611^4^4
"BLD",8615,"REQB",1,0)
IB*2.0*438^2
"BLD",8615,"REQB",2,0)
IB*2.0*384^2
"BLD",8615,"REQB",3,0)
IB*2.0*62^2
"BLD",8615,"REQB",4,0)
IB*2.0*519^2
"BLD",8615,"REQB","B","IB*2.0*384",2)

"BLD",8615,"REQB","B","IB*2.0*438",1)

"BLD",8615,"REQB","B","IB*2.0*519",4)

"BLD",8615,"REQB","B","IB*2.0*62",3)

"DATA",356.001,1,0)
AR^Admission Review
"DATA",356.001,2,0)
HS^Health Services Review
"DATA",356.001,3,0)
IN^Individual
"DATA",356.001,4,0)
SC^Specialty Care Review
"DATA",356.002,1,0)
1^Immediate Appeal^0
"DATA",356.002,2,0)
2^Standard Appeal
"DATA",356.002,3,0)
3^Cancel
"DATA",356.002,4,0)
4^Extension
"DATA",356.002,5,0)
I^Initial
"DATA",356.002,6,0)
N^Reconsideration
"DATA",356.002,7,0)
R^Renewal
"DATA",356.002,8,0)
S^Revised
"DATA",356.003,1,0)
1^Acute
"DATA",356.003,2,0)
2^Stable
"DATA",356.003,3,0)
3^Chronic
"DATA",356.003,4,0)
4^Systemic
"DATA",356.003,5,0)
5^Localized
"DATA",356.003,6,0)
6^Mild Disease
"DATA",356.003,7,0)
7^Normal, Healthy
"DATA",356.003,8,0)
8^Severe Systemic Disease
"DATA",356.003,9,0)
9^Severe Systemic Disease that is a Constant Threat to Life
"DATA",356.003,10,0)
E^Excellent
"DATA",356.003,11,0)
F^Fair
"DATA",356.003,12,0)
G^Good
"DATA",356.003,13,0)
P^Poor
"DATA",356.004,1,0)
1^Poor
"DATA",356.004,2,0)
2^Guarded
"DATA",356.004,3,0)
3^Fair
"DATA",356.004,4,0)
4^Good
"DATA",356.004,5,0)
5^Very Good
"DATA",356.004,6,0)
6^Excellent
"DATA",356.004,7,0)
7^Less than 6 Months to Live
"DATA",356.004,8,0)
8^Terminal
"DATA",356.005,1,0)
1^Proof of Eligibility Unknown or Unavailable
"DATA",356.005,2,0)
2^Litigation
"DATA",356.005,3,0)
3^Authorization Delays
"DATA",356.005,4,0)
4^Delay in Certifying Provider
"DATA",356.005,5,0)
7^Third Party Processing Delay
"DATA",356.005,6,0)
8^Delay in Eligibility Determination
"DATA",356.005,7,0)
10^Administration Delay in the Prior Approval Process
"DATA",356.005,8,0)
11^Other
"DATA",356.005,9,0)
15^Natural Disaster
"DATA",356.005,10,0)
16^Lack of Information
"DATA",356.005,11,0)
17^No response to initial request
"DATA",356.006,1,0)
ABF^ICD-10 Diagnosis
"DATA",356.006,2,0)
ABJ^ICD-10 Admitting Diagnosis
"DATA",356.006,3,0)
ABK^ICD-10 Principal Diagnosis
"DATA",356.006,4,0)
APR^ICD-10 Patient's Reason for Visit
"DATA",356.006,5,0)
BF^ICD-9 Diagnosis
"DATA",356.006,6,0)
BJ^ICD-9 Admitting Diagnosis
"DATA",356.006,7,0)
BK^ICD-9 Principal Diagnosis
"DATA",356.006,8,0)
PR^ICD-9 Patient's Reason for Visit
"DATA",356.006,9,0)
DR^Diagnosis Related Group (DRG)
"DATA",356.006,10,0)
LOI^Logical Observation Identifier Codes
"DATA",356.007,1,0)
A^1st Shift (Normal Working Hours)
"DATA",356.007,2,0)
B^2nd Shift
"DATA",356.007,3,0)
C^3rd Shift
"DATA",356.007,4,0)
D^A.M.
"DATA",356.007,5,0)
E^P.M.
"DATA",356.007,6,0)
F^As Directed
"DATA",356.007,7,0)
G^Any Shift
"DATA",356.007,8,0)
Y^None (Also Used to Cancel or Override a Previous Pattern)
"DATA",356.008,1,0)
01^Patient was admitted to a hospital
"DATA",356.008,2,0)
02^Patient was bed confined before the ambulance service
"DATA",356.008,3,0)
03^Patient was bed confined after the ambulance service
"DATA",356.008,4,0)
04^Patient was moved by stretcher
"DATA",356.008,5,0)
05^Patient was unconscious or in shock
"DATA",356.008,6,0)
06^Patient was transported in an emergency situation
"DATA",356.008,7,0)
07^Patient had to be physically restrained
"DATA",356.008,8,0)
08^Patient had visible hemorrhaging
"DATA",356.008,9,0)
09^Ambulance service was medically necessary
"DATA",356.008,10,0)
10^Patient is ambulatory
"DATA",356.008,11,0)
11^Ambulation is impaired and walking aid is used for therapy or mobility
"DATA",356.008,12,0)
12^Patient is confined to a bed or chair
"DATA",356.008,13,0)
13^Patient is confined to a room or an area without bathroom facilities
"DATA",356.008,14,0)
14^Ambulation is impaired and walking aid is used for mobility
"DATA",356.008,15,0)
15^Patient condition requires positioning of the body or attachments which would not be feasible with the use of an ordinary bed
"DATA",356.008,16,0)
16^Patient needs a trapeze bar to sit up due to respiratory condition or change body positions for other medical reasons
"DATA",356.008,17,0)
17^Patient's ability to breathe is severely impaired
"DATA",356.008,18,0)
18^Patient condition requires frequent and/or immediate changes in body positions
"DATA",356.008,19,0)
19^Patient can operate controls
"DATA",356.008,20,0)
20^Side rails are to be attached to a hospital bed owned by the beneficiary
"DATA",356.008,21,0)
21^Patient owns equipment
"DATA",356.008,22,0)
22^Mattress or side rails are being used with prescribed medically necessary hospital bed owned by the beneficiary
"DATA",356.008,23,0)
23^Patient needs lift to get in or out of bed or to assist in transfer from bed to wheelchair
"DATA",356.008,24,0)
24^Patient has an orthopedic impairment requiring traction equipment which prevents ambulation during period of use
"DATA",356.008,25,0)
25^Item has been prescribed as part of a planned regimen of treatment in patient home
"DATA",356.008,26,0)
26^Patient is highly susceptible to decubitus ulcers
"DATA",356.008,27,0)
27^Patient or a care-giver has been instructed in use of equipment
"DATA",356.008,28,0)
28^Patient has poor diabetic control
"DATA",356.008,29,0)
29^A 6-7 hour nocturnal study documents 30 episodes of apnea each lasting more than 10 seconds
"DATA",356.008,30,0)
30^Without the equipment, the patient would require surgery
"DATA",356.008,31,0)
31^Patient has had a total knee replacement
"DATA",356.008,32,0)
32^Patient has intractable lymphedema of the extremities
"DATA",356.008,33,0)
33^Patient is in a nursing home
"DATA",356.008,34,0)
34^Patient is conscious
"DATA",356.008,35,0)
35^This feeding is the only form of nutritional intake for this patient
"DATA",356.008,36,0)
37^Oxygen delivery equipment is stationary
"DATA",356.008,37,0)
38^Certification signed by the physician is on file at the supplier's office
"DATA",356.008,38,0)
39^Patient has mobilizing respiratory tract secretions
"DATA",356.008,39,0)
40^Patient or caregiver is capable of using the equipment without technical or professional supervision
"DATA",356.008,40,0)
41^Patient or caregiver is unable to propel or lift a standard weight wheelchair
"DATA",356.008,41,0)
42^Patient requires leg elevation for edema or body alignment
"DATA",356.008,42,0)
43^Patient weight or usage needs necessitate a heavy duty wheelchair
"DATA",356.008,43,0)
44^Patient requires reclining function of a wheelchair
"DATA",356.008,44,0)
45^Patient is unable to operate a wheelchair manually
"DATA",356.008,45,0)
46^Patient or caregiver requires side transfer into wheelchair, commode or other
"DATA",356.008,46,0)
58^Durable Medical Equipment (DME) purchased new
"DATA",356.008,47,0)
59^Durable Medical Equipment (DME) Is under warranty
"DATA",356.008,48,0)
5A^Treatment is rendered related to the terminal illness
"DATA",356.008,49,0)
60^Transportation was to the nearest facility
"DATA",356.008,50,0)
68^Severe
"DATA",356.008,51,0)
69^Moderate
"DATA",356.008,52,0)
9D^Lack of appropriate facility within reasonable distance to treat patient in the event of complications
"DATA",356.008,53,0)
9E^Sudden onset of disorientation
"DATA",356.008,54,0)
9F^Sudden onset of severe, incapacitating pain
"DATA",356.008,55,0)
9H^Patient requires intensive IV therapy
"DATA",356.008,56,0)
9J^Patient requires protective isolation
"DATA",356.008,57,0)
9K^Patient requires frequent monitoring
"DATA",356.008,58,0)
AA^Amputation
"DATA",356.008,59,0)
AG^Agitated
"DATA",356.008,60,0)
AL^Ambulation limitations
"DATA",356.008,61,0)
BL^Bowel limitations, bladder limitations, or both (Incontinence)
"DATA",356.008,62,0)
BPD^Beneficiary is partially dependent
"DATA",356.008,63,0)
BR^Bed rest BRP (Bathroom Privileges)
"DATA",356.008,64,0)
BTD^Beneficiary is totally dependent
"DATA",356.008,65,0)
CA^Cane required
"DATA",356.008,66,0)
CB^Complete bed rest
"DATA",356.008,67,0)
CM^Comatose
"DATA",356.008,68,0)
CNJ^Cumulative injury
"DATA",356.008,69,0)
CO^Contracture
"DATA",356.008,70,0)
CR^Crutches required
"DATA",356.008,71,0)
DI^Disoriented
"DATA",356.008,72,0)
DP^Depressed
"DATA",356.008,73,0)
DY^Dyspnea with minimal exertion
"DATA",356.008,74,0)
EL^Endurance limitations
"DATA",356.008,75,0)
EP^Exercises prescribed
"DATA",356.008,76,0)
FO^Forgetful
"DATA",356.008,77,0)
HO^Hostile
"DATA",356.008,78,0)
HL^Hearing limitations
"DATA",356.008,79,0)
IH^Independent at home
"DATA",356.008,80,0)
LB^Legally blind
"DATA",356.008,81,0)
LE^Lethargic
"DATA",356.008,82,0)
MC^Other mental condition
"DATA",356.008,83,0)
NR^No restrictions
"DATA",356.008,84,0)
OL^Other limitation
"DATA",356.008,85,0)
OT^Oriented
"DATA",356.008,86,0)
PA^Paralysis
"DATA",356.008,87,0)
PW^Partial weight bearing
"DATA",356.008,88,0)
SL^Speech limitations
"DATA",356.008,89,0)
TNJ^Traumatic injury
"DATA",356.008,90,0)
TR^Transfer to bed, or chair, or both
"DATA",356.008,91,0)
UN^Uncooperative
"DATA",356.008,92,0)
UT^Up as tolerated
"DATA",356.008,93,0)
WA^Walker required
"DATA",356.008,94,0)
WR^Wheelchair required
"DATA",356.009,1,0)
1^Physician referral
"DATA",356.009,2,0)
2^Clinic referral
"DATA",356.009,3,0)
3^HMO referral
"DATA",356.009,4,0)
4^Transfer from hospital
"DATA",356.009,5,0)
5^Transfer from skilled nursing facility
"DATA",356.009,6,0)
6^Transfer from other healthcare facility
"DATA",356.009,7,0)
7^Emergency room
"DATA",356.009,8,0)
8^Court / law enforcement
"DATA",356.009,9,0)
9^Information not available
"DATA",356.01,1,0)
01^Discharged to home or self care
"DATA",356.01,2,0)
02^Discharged to another short-term general hospital
"DATA",356.01,3,0)
03^Discharged to skilled nursing facility
"DATA",356.01,4,0)
04^Discharged to intermediate care facility
"DATA",356.01,5,0)
05^Discharged to another type of facility
"DATA",356.01,6,0)
06^Discharged to home under care of home healthcare service
"DATA",356.01,7,0)
07^Left against medical advice
"DATA",356.01,8,0)
08^Discharged to home under care of a home IV provider
"DATA",356.01,9,0)
09^Admitted as an inpatient to this hospital
"DATA",356.01,10,0)
20^Expired
"DATA",356.01,11,0)
30^Still patient
"DATA",356.01,12,0)
40^Expired at home
"DATA",356.01,13,0)
41^Expired in a medical facility
"DATA",356.01,14,0)
42^Expired - place unknown
"DATA",356.01,15,0)
50^Hospice - home
"DATA",356.01,16,0)
51^Hospice - medical facility
"DATA",356.01,17,0)
61^Discharged within facility to Medicare approved swing bed
"DATA",356.01,18,0)
71^Discharged to another facility for opt sv per discharge plan
"DATA",356.01,19,0)
72^Discharged to this facility for opt sv per discharge plan
"DATA",356.011,1,0)
1^Transferred to intermediate care facility - mentally retarded (ICF-MR)
"DATA",356.011,2,0)
2^Newly admitted
"DATA",356.011,3,0)
3^Newly eligible
"DATA",356.011,4,0)
4^No longer eligible
"DATA",356.011,5,0)
5^Still a resident
"DATA",356.011,6,0)
6^Temporary absence - hospital
"DATA",356.011,7,0)
7^Temporary absence - other
"DATA",356.011,8,0)
8^Transferred to intermediate care facility - level II (ICF II)
"DATA",356.011,9,0)
9^Other
"DATA",356.012,1,0)
C1^Cervical 1
"DATA",356.012,2,0)
C2^Cervical 2
"DATA",356.012,3,0)
C3^Cervical 3
"DATA",356.012,4,0)
C4^Cervical 4
"DATA",356.012,5,0)
C5^Cervical 5
"DATA",356.012,6,0)
C6^Cervical 6
"DATA",356.012,7,0)
C7^Cervical 7
"DATA",356.012,8,0)
CO^Coccyx
"DATA",356.012,9,0)
IL^Ilium
"DATA",356.012,10,0)
L1^Lumbar 1
"DATA",356.012,11,0)
L2^Lumbar 2
"DATA",356.012,12,0)
L3^Lumbar 3
"DATA",356.012,13,0)
L4^Lumbar 4
"DATA",356.012,14,0)
L5^Lumbar 5
"DATA",356.012,15,0)
OC^Occiput
"DATA",356.012,16,0)
SA^Sacrum
"DATA",356.012,17,0)
T1^Thoracic 1
"DATA",356.012,18,0)
T2^Thoracic 2
"DATA",356.012,19,0)
T3^Thoracic 3
"DATA",356.012,20,0)
T4^Thoracic 4
"DATA",356.012,21,0)
T5^Thoracic 5
"DATA",356.012,22,0)
T6^Thoracic 6
"DATA",356.012,23,0)
T7^Thoracic 7
"DATA",356.012,24,0)
T8^Thoracic 8
"DATA",356.012,25,0)
T9^Thoracic 9
"DATA",356.012,26,0)
T10^Thoracic 10
"DATA",356.012,27,0)
T11^Thoracic 11
"DATA",356.012,28,0)
T12^Thoracic 12
"DATA",356.013,1,0)
A^Concentrator
"DATA",356.013,2,0)
B^Liquid Stationary
"DATA",356.013,3,0)
C^Gaseous Stationary
"DATA",356.013,4,0)
D^Liquid Portable
"DATA",356.013,5,0)
E^Gaseous Portable
"DATA",356.013,6,0)
O^Other
"DATA",356.014,1,0)
E^Exercising
"DATA",356.014,2,0)
N^No special conditions
"DATA",356.014,3,0)
O^On oxygen
"DATA",356.014,4,0)
R^At rest on room air
"DATA",356.014,5,0)
S^Sleeping
"DATA",356.014,6,0)
W^Walking
"DATA",356.014,7,0)
X^Other
"DATA",356.015,1,0)
1^Dependent edema suggesting congestive heart failure
"DATA",356.015,2,0)
2^"P" Pulmonale on electrocardiogram (EKG)
"DATA",356.015,3,0)
3^Erythrocythemia with a hematocrit greater than 56 percent
"DATA",356.016,1,0)
A^Nasal cannula
"DATA",356.016,2,0)
B^Oxygen conserving device
"DATA",356.016,3,0)
C^Oxygen conserving device with oxygen pulse system
"DATA",356.016,4,0)
D^Oxygen conserving device with reservoir system
"DATA",356.016,5,0)
E^Transtracheal catheter
"DATA",356.017,1,0)
A^Acute care facility
"DATA",356.017,2,0)
B^Boarding home
"DATA",356.017,3,0)
C^Hospice
"DATA",356.017,4,0)
D^Intermediate care facility
"DATA",356.017,5,0)
E^Long-term or extended care facility
"DATA",356.017,6,0)
F^Not specified
"DATA",356.017,7,0)
G^Nursing home
"DATA",356.017,8,0)
H^Sub-acute care facility
"DATA",356.017,9,0)
L^Other location
"DATA",356.017,10,0)
M^Rehabilitation facility
"DATA",356.017,11,0)
O^Outpatient facility
"DATA",356.017,12,0)
P^Private home
"DATA",356.017,13,0)
R^Residential treatment facility
"DATA",356.017,14,0)
S^Skilled nursing home
"DATA",356.017,15,0)
T^Rest home
"DATA",356.018,1,0)
03^Report justifying treatment beyond utilization guidelines
"DATA",356.018,2,0)
04^Drugs administered
"DATA",356.018,3,0)
05^Treatment diagnosis
"DATA",356.018,4,0)
06^Initial assessment
"DATA",356.018,5,0)
07^Functional goals
"DATA",356.018,6,0)
08^Plan of treatment
"DATA",356.018,7,0)
09^Progress report
"DATA",356.018,8,0)
10^Continued treatment
"DATA",356.018,9,0)
11^Chemical analysis
"DATA",356.018,10,0)
13^Certified test report
"DATA",356.018,11,0)
15^Justification for admission
"DATA",356.018,12,0)
21^Recovery plan
"DATA",356.018,13,0)
48^Social security benefit letter
"DATA",356.018,14,0)
55^Rental agreement
"DATA",356.018,15,0)
59^Benefit letter
"DATA",356.018,16,0)
77^Support data for verification
"DATA",356.018,17,0)
A3^Allergies / sensitivities document
"DATA",356.018,18,0)
A4^Autopsy report
"DATA",356.018,19,0)
AM^Ambulance certification
"DATA",356.018,20,0)
AS^Admission summary
"DATA",356.018,21,0)
AT^Purchase order attachment
"DATA",356.018,22,0)
B2^Prescription
"DATA",356.018,23,0)
B3^Physician order
"DATA",356.018,24,0)
BR^Benchmark testing results
"DATA",356.018,25,0)
BS^Baseline
"DATA",356.018,26,0)
BT^Blanket test results
"DATA",356.018,27,0)
CB^Chiropractic justification
"DATA",356.018,28,0)
CK^Consent form(s)
"DATA",356.018,29,0)
D2^Drug profile document
"DATA",356.018,30,0)
DA^Dental models
"DATA",356.018,31,0)
DB^Durable medical equipment prescription
"DATA",356.018,32,0)
DG^Diagnostic report
"DATA",356.018,33,0)
DJ^Discharge monitoring report
"DATA",356.018,34,0)
DS^Discharge summary
"DATA",356.018,35,0)
FM^Family medical history document
"DATA",356.018,36,0)
HC^Health certificate
"DATA",356.018,37,0)
HR^Health clinic records
"DATA",356.018,38,0)
I5^Immunization record
"DATA",356.018,39,0)
IR^State school immunization records
"DATA",356.018,40,0)
LA^Laboratory results
"DATA",356.018,41,0)
M1^Medical record attachment
"DATA",356.018,42,0)
NN^Nursing notes
"DATA",356.018,43,0)
OB^Operative note
"DATA",356.018,44,0)
OC^Oxygen content averaging report
"DATA",356.018,45,0)
OD^Orders and treatments document
"DATA",356.018,46,0)
OE^Objective physical examination (including vital signs) document
"DATA",356.018,47,0)
OX^Oxygen therapy certification
"DATA",356.018,48,0)
P4^Pathology report
"DATA",356.018,49,0)
P5^Patient medical history document
"DATA",356.018,50,0)
P6^Periodontal charts
"DATA",356.018,51,0)
P7^Periodontal reports
"DATA",356.018,52,0)
PE^Parenteral or enteral certification
"DATA",356.018,53,0)
PN^Physical therapy notes
"DATA",356.018,54,0)
PO^Prosthetics or orthotic certification
"DATA",356.018,55,0)
PQ^Paramedical results
"DATA",356.018,56,0)
PY^Physician's report
"DATA",356.018,57,0)
PZ^Physical therapy certification
"DATA",356.018,58,0)
QC^Cause and corrective action report
"DATA",356.018,59,0)
QR^Quality report
"DATA",356.018,60,0)
RB^Radiology films
"DATA",356.018,61,0)
RR^Radiology reports
"DATA",356.018,62,0)
RT^Report of tests and analysis report
"DATA",356.018,63,0)
RX^Renewable oxygen content averaging report
"DATA",356.018,64,0)
SG^Symptoms document
"DATA",356.018,65,0)
V5^Death notification
"DATA",356.018,66,0)
XP^Photographs
"DATA",356.019,1,0)
1^Skilled nursing facility (SNF)
"DATA",356.019,2,0)
2^Intermediate care facility (ICF)
"DATA",356.019,3,0)
3^Intermediate care facility - mentally retarded (ICFMR)
"DATA",356.019,4,0)
4^Chronic disease hospital (CD)
"DATA",356.019,5,0)
5^Intermediate care facility (ICF) level II
"DATA",356.019,6,0)
6^Special skilled nursing facility (SNF)
"DATA",356.019,7,0)
7^Nursing facility (NF)
"DATA",356.019,8,0)
8^Hospice
"DATA",356.02,1,0)
A1^CERTIFIED TOTAL
"DATA",356.02,2,0)
A2^CERTIFIED PARTIAL
"DATA",356.02,3,0)
A3^NOT CERTIFIED
"DATA",356.02,4,0)
A4^PENDED
"DATA",356.02,5,0)
A6^MODIFIED
"DATA",356.02,6,0)
C^CANCELLED
"DATA",356.02,7,0)
CT^CONTACT PAYER
"DATA",356.02,8,0)
NA^NO ACTION REQUIRED
"DATA",356.021,1,0)
01^PRICE AUTHORIZATION EXPIRED
"DATA",356.021,2,0)
02^PRICE AUTHORIZATION NO LONGER REQUIRED
"DATA",356.021,3,0)
03^PRODUCT NOT ON THE PRICE AUTHORIZATION
"DATA",356.021,4,0)
04^AUTHORIZED QUANTITY EXCEEDED
"DATA",356.021,5,0)
05^SPECIAL COST INCORRECT
"DATA",356.021,6,0)
06^NO CREDIT ALLOWED
"DATA",356.021,7,0)
07^ADMINISTRATIVE CANCELLATION
"DATA",356.021,8,0)
08^UNIT RESALE HIGHER THAN AUTHORIZED
"DATA",356.021,9,0)
09^OUT OF NETWORK
"DATA",356.021,10,0)
0A^TESTING NOT INCLUDED
"DATA",356.021,11,0)
0B^REQUEST FORWARDED TO AND DECISION RESPONSE FORTHCOMING FROM AN EXTERNAL REVIEW ORGANIZATION
"DATA",356.021,12,0)
0C^AUTHORIZATION/ACCESS RESTRICTIONS
"DATA",356.021,13,0)
0D^REQUIRES PCP AUTHORIZATION
"DATA",356.021,14,0)
0E^PROVIDER IS NOT PRIMARY CARE PHYSICIAN
"DATA",356.021,15,0)
0F^NOT MEDICALLY NECESSARY
"DATA",356.021,16,0)
0G^LEVEL OF CARE NOT APPROPRIATE
"DATA",356.021,17,0)
0H^CERTIFICATION NOT REQUIRED FOR THIS SERVICE
"DATA",356.021,18,0)
0J^CERTIFICATION RESPONSIBILITY OF EXTERNAL REVIEW ORGANIZATION
"DATA",356.021,19,0)
0K^PRIMARY CARE SERVICE
"DATA",356.021,20,0)
0L^EXCEEDS PLAN MAXIMUMS
"DATA",356.021,21,0)
0M^NON-COVERED SERVICE
"DATA",356.021,22,0)
0N^NO PRIOR APPROVAL
"DATA",356.021,23,0)
0P^REQUESTED INFORMATION NOT RECEIVED
"DATA",356.021,24,0)
0Q^DUPLICATE REQUEST
"DATA",356.021,25,0)
0R^SERVICE INCONSISTENT WITH DIAGNOSIS
"DATA",356.021,26,0)
0S^PRE-EXISTING CONDITION
"DATA",356.021,27,0)
0T^EXPERIMENTAL SERVICE OR PROCEDURE
"DATA",356.021,28,0)
0U^ADDITIONAL PATIENT INFORMATION REQUIRED
"DATA",356.021,29,0)
0V^REQUIRES MEDICAL REVIEW
"DATA",356.021,30,0)
0W^DISPOSITION PENDING REVIEW
"DATA",356.021,31,0)
0X^SERVICE INCONSISTENT WITH PROVIDER TYPE
"DATA",356.021,32,0)
0Y^SERVICE INCONSISTENT WITH PATIENT'S AGE
"DATA",356.021,33,0)
0Z^SERVICE INCONSISTENT WITH PATIENT'S GENDER
"DATA",356.021,34,0)
10^PRODUCT/SERVICE/PROCEDURE DELIVERY PATTERN (e.g., UNITS, DAYS, VISITS, WEEKS, HOURS, MONTHS)
"DATA",356.021,35,0)
11^PRICING
"DATA",356.021,36,0)
12^PATIENT IS RESTRICTED TO SPECIFIC PROVIDER
"DATA",356.021,37,0)
13^SERVICE AUTHORIZED FOR ANOTHER PROVIDER
"DATA",356.021,38,0)
14^PLAN/CONTRACTUAL GUIDELINES NOT FOLLOWED
"DATA",356.021,39,0)
15^PLAN/CONTRACTUAL GEOGRAPHIC RESTRICTION
"DATA",356.021,40,0)
16^INAPPROPRIATE FACILITY TYPE
"DATA",356.021,41,0)
17^TIME LIMITS NOT MET
"DATA",356.021,42,0)
18^NOTIFICATION RECEIVED
"DATA",356.021,43,0)
19^COSMETIC
"DATA",356.021,44,0)
20^ONCE IN A LIFETIME RESTRICTION APPLIES
"DATA",356.021,45,0)
21^TRANSPORT REQUEST DENIED
"DATA",356.021,46,0)
22^AMBULANCE CERTIFICATION SEGMENT INFORMATION DOESN'T CORRESPOND TO TRANSPORT ADDRESS SEGMENT
"DATA",356.021,47,0)
23^MILEAGE CANNOT BE COMPUTED BASED ON DATA SUBMITTED
"DATA",356.021,48,0)
24^COMPUTED MILEAGE IS INCONSISTENT WITH TRANSPORT INFORMATION OR SERVICE UNITS SUBMITTED
"DATA",356.021,49,0)
25^SERVICES WERE NOT CONSIDERED DUE TO OTHER ERRORS IN THE REQUEST
"DATA",356.021,50,0)
26^MISSING PROVIDER ROLE
"DATA",356.022,1,0)
1^UPPER RIGHT PERMANENT DENTITION - 1
"DATA",356.022,2,0)
2^UPPER RIGHT PERMANENT DENTITION - 2
"DATA",356.022,3,0)
3^UPPER RIGHT PERMANENT DENTITION - 3
"DATA",356.022,4,0)
4^UPPER RIGHT PERMANENT DENTITION - 4
"DATA",356.022,5,0)
5^UPPER RIGHT PERMANENT DENTITION - 5
"DATA",356.022,6,0)
6^UPPER RIGHT PERMANENT DENTITION - 6
"DATA",356.022,7,0)
7^UPPER RIGHT PERMANENT DENTITION - 7
"DATA",356.022,8,0)
8^UPPER RIGHT PERMANENT DENTITION - 8
"DATA",356.022,9,0)
9^UPPER LEFT PERMANENT DENTITION - 9
"DATA",356.022,10,0)
10^UPPER LEFT PERMANENT DENTITION - 10
"DATA",356.022,11,0)
11^UPPER LEFT PERMANENT DENTITION - 11
"DATA",356.022,12,0)
12^UPPER LEFT PERMANENT DENTITION - 12
"DATA",356.022,13,0)
13^UPPER LEFT PERMANENT DENTITION - 13
"DATA",356.022,14,0)
14^UPPER LEFT PERMANENT DENTITION - 14
"DATA",356.022,15,0)
15^UPPER LEFT PERMANENT DENTITION - 15
"DATA",356.022,16,0)
16^UPPER LEFT PERMANENT DENTITION - 16
"DATA",356.022,17,0)
17^LOWER LEFT PERMANENT DENTITION - 17
"DATA",356.022,18,0)
18^LOWER LEFT PERMANENT DENTITION - 18
"DATA",356.022,19,0)
19^LOWER LEFT PERMANENT DENTITION - 19
"DATA",356.022,20,0)
20^LOWER LEFT PERMANENT DENTITION - 20
"DATA",356.022,21,0)
21^LOWER LEFT PERMANENT DENTITION - 21
"DATA",356.022,22,0)
22^LOWER LEFT PERMANENT DENTITION - 22
"DATA",356.022,23,0)
23^LOWER LEFT PERMANENT DENTITION - 23
"DATA",356.022,24,0)
24^LOWER LEFT PERMANENT DENTITION - 24
"DATA",356.022,25,0)
25^LOWER RIGHT PERMANENT DENTITION - 25
"DATA",356.022,26,0)
26^LOWER RIGHT PERMANENT DENTITION - 26
"DATA",356.022,27,0)
27^LOWER RIGHT PERMANENT DENTITION - 27
"DATA",356.022,28,0)
28^LOWER RIGHT PERMANENT DENTITION - 28
"DATA",356.022,29,0)
29^LOWER RIGHT PERMANENT DENTITION - 29
"DATA",356.022,30,0)
30^LOWER RIGHT PERMANENT DENTITION - 30
"DATA",356.022,31,0)
31^LOWER RIGHT PERMANENT DENTITION - 31
"DATA",356.022,32,0)
32^LOWER RIGHT PERMANENT DENTITION - 32
"DATA",356.022,33,0)
A^UPPER RIGHT PRIMARY DENTITION - A
"DATA",356.022,34,0)
B^UPPER RIGHT PRIMARY DENTITION - B
"DATA",356.022,35,0)
C^UPPER RIGHT PRIMARY DENTITION - C
"DATA",356.022,36,0)
D^UPPER RIGHT PRIMARY DENTITION - D
"DATA",356.022,37,0)
E^UPPER RIGHT PRIMARY DENTITION - E
"DATA",356.022,38,0)
F^UPPER LEFT PRIMARY DENTITION - F
"DATA",356.022,39,0)
G^UPPER LEFT PRIMARY DENTITION - G
"DATA",356.022,40,0)
H^UPPER LEFT PRIMARY DENTITION - H
"DATA",356.022,41,0)
I^UPPER LEFT PRIMARY DENTITION - I
"DATA",356.022,42,0)
J^UPPER LEFT PRIMARY DENTITION - J
"DATA",356.022,43,0)
K^LOWER LEFT PRIMARY DENTITION - K
"DATA",356.022,44,0)
L^LOWER LEFT PRIMARY DENTITION - L
"DATA",356.022,45,0)
M^LOWER LEFT PRIMARY DENTITION - M
"DATA",356.022,46,0)
N^LOWER LEFT PRIMARY DENTITION - N
"DATA",356.022,47,0)
O^LOWER LEFT PRIMARY DENTITION - O
"DATA",356.022,48,0)
P^LOWER RIGHT PRIMARY DENTITION - P
"DATA",356.022,49,0)
Q^LOWER RIGHT PRIMARY DENTITION - Q
"DATA",356.022,50,0)
R^LOWER RIGHT PRIMARY DENTITION - R
"DATA",356.022,51,0)
S^LOWER RIGHT PRIMARY DENTITION - S
"DATA",356.022,52,0)
T^LOWER RIGHT PRIMARY DENTITION - T
"DATA",356.023,1,0)
1^Will Not Reimburse VA
"DATA",356.023,2,0)
2^Service Not Covered
"DATA",356.023,3,0)
3^No Precert Required
"DATA",356.023,4,0)
4^No ROI on File
"DATA",356.023,5,0)
5^Medical Records Not Available
"DATA",356.023,6,0)
6^Cancelled Appointment
"DATA",356.023,7,0)
7^SC
"DATA",356.023,8,0)
8^SA
"DATA",356.023,9,0)
9^Insurance Termed
"DATA",356.023,10,0)
10^217 Submitted without Electronic Case Disposition
"DATA",356.023,11,0)
11^215 Submitted without Electronic Case Disposition
"DATA",356.023,12,0)
12^Requires UMO Follow-up
"DATA",365.013,1,0)
1^Medical Care
"DATA",365.013,2,0)
2^Surgical
"DATA",365.013,3,0)
3^Consultation
"DATA",365.013,4,0)
4^Diagnostic X-Ray
"DATA",365.013,5,0)
5^Diagnostic Lab
"DATA",365.013,6,0)
6^Radiation Therapy
"DATA",365.013,7,0)
7^Anesthesia
"DATA",365.013,8,0)
8^Surgical Assistance
"DATA",365.013,9,0)
9^Other Medical
"DATA",365.013,10,0)
10^Blood Charges
"DATA",365.013,11,0)
11^Used DME
"DATA",365.013,12,0)
12^DME Purchase
"DATA",365.013,13,0)
13^Ambulatory SC Facility
"DATA",365.013,14,0)
14^Renal Supplies/Home
"DATA",365.013,15,0)
15^Alt. Method Dialysis
"DATA",365.013,16,0)
16^CRD Equipment
"DATA",365.013,17,0)
17^Pre-Admission Testing
"DATA",365.013,18,0)
18^DME Rental
"DATA",365.013,19,0)
19^Pneumonia Vaccine
"DATA",365.013,20,0)
20^2nd Surgical Opinion
"DATA",365.013,21,0)
21^3rd Surgical Opinion
"DATA",365.013,22,0)
22^Social Work
"DATA",365.013,23,0)
23^Diagnostic Dental
"DATA",365.013,24,0)
24^Periodontics
"DATA",365.013,25,0)
25^Restorative
"DATA",365.013,26,0)
26^Endodontics
"DATA",365.013,27,0)
27^Maxillofacial Prosth.
"DATA",365.013,28,0)
28^Adjunctive Dental Serv
"DATA",365.013,29,0)
30^Health Benefit Plan Cov
"DATA",365.013,30,0)
32^Plan Waiting Period
"DATA",365.013,31,0)
33^Chiropractic
"DATA",365.013,32,0)
34^Chiropractic Office Vst
"DATA",365.013,33,0)
35^Dental Care
"DATA",365.013,34,0)
36^Dental Crowns
"DATA",365.013,35,0)
37^Dental Accident
"DATA",365.013,36,0)
38^Orthodontics
"DATA",365.013,37,0)
39^Prosthodontics
"DATA",365.013,38,0)
40^Oral Surgery
"DATA",365.013,39,0)
41^Rout/Preventive Dental
"DATA",365.013,40,0)
42^Home Health Care
"DATA",365.013,41,0)
43^Home Health RX
"DATA",365.013,42,0)
44^Home Health Vst
"DATA",365.013,43,0)
45^Hospice
"DATA",365.013,44,0)
46^Respite Care
"DATA",365.013,45,0)
47^Hospital
"DATA",365.013,46,0)
48^Hosp/Inpatient
"DATA",365.013,47,0)
49^Hosp/R & B
"DATA",365.013,48,0)
50^Hosp/Outpatient
"DATA",365.013,49,0)
51^Hosp/Emergency Accident
"DATA",365.013,50,0)
52^Hosp/Emergency Medical
"DATA",365.013,51,0)
53^Hosp/Ambulatory Surg
"DATA",365.013,52,0)
54^Long Term Care
"DATA",365.013,53,0)
55^Major Medical
"DATA",365.013,54,0)
56^Med Related Transport
"DATA",365.013,55,0)
57^Air Transportation
"DATA",365.013,56,0)
58^Cabulance
"DATA",365.013,57,0)
59^Licensed Ambulance
"DATA",365.013,58,0)
60^General Benefits
"DATA",365.013,59,0)
61^In-vitro Fertilization
"DATA",365.013,60,0)
62^MRI/CAT Scan
"DATA",365.013,61,0)
63^Donor Procedures
"DATA",365.013,62,0)
64^Acupuncture
"DATA",365.013,63,0)
65^Newborn Care
"DATA",365.013,64,0)
66^Pathology
"DATA",365.013,65,0)
67^Smoking Cessation
"DATA",365.013,66,0)
68^Well Baby Care
"DATA",365.013,67,0)
69^Maternity
"DATA",365.013,68,0)
70^Transplants
"DATA",365.013,69,0)
71^Audiology Exams
"DATA",365.013,70,0)
72^Inhalation Therapy
"DATA",365.013,71,0)
73^Diagnostic Medical
"DATA",365.013,72,0)
74^Private Duty Nursing
"DATA",365.013,73,0)
75^Prosthetic Device
"DATA",365.013,74,0)
76^Dialysis
"DATA",365.013,75,0)
77^Otological Exam
"DATA",365.013,76,0)
78^Chemotherapy
"DATA",365.013,77,0)
79^Allergy Testing
"DATA",365.013,78,0)
80^Immunizations
"DATA",365.013,79,0)
81^Routine Physical
"DATA",365.013,80,0)
82^Family Planning
"DATA",365.013,81,0)
83^Infertility
"DATA",365.013,82,0)
84^Abortion
"DATA",365.013,83,0)
85^AIDS
"DATA",365.013,84,0)
86^Emergency Services
"DATA",365.013,85,0)
87^Cancer
"DATA",365.013,86,0)
88^Pharmacy
"DATA",365.013,87,0)
89^Free Standing RX Drug
"DATA",365.013,88,0)
90^Mail Order RX Drug
"DATA",365.013,89,0)
91^Brand Name RX Drug
"DATA",365.013,90,0)
92^Generic RX Drug
"DATA",365.013,91,0)
93^Podiatry
"DATA",365.013,92,0)
94^Podiatry/Office Visits
"DATA",365.013,93,0)
95^Podiatry/Nurs Home Vst
"DATA",365.013,94,0)
96^Professional (Phy)
"DATA",365.013,95,0)
97^Anesthesiologist
"DATA",365.013,96,0)
98^Prof(Phy) Visit/Office
"DATA",365.013,97,0)
99^Prof(Phy) Visit/Inpt
"DATA",365.013,98,0)
A0^Prof(Phy) Visit/Outpt
"DATA",365.013,99,0)
A1^Prof(Phy) Visit/NH
"DATA",365.013,100,0)
A2^Prof(Phy) Vst/Skilled Nrs Fac
"DATA",365.013,101,0)
A3^Prof(Phy) Visit/Home
"DATA",365.013,102,0)
A4^Psychiatric
"DATA",365.013,103,0)
A5^Psychiatric/R & B
"DATA",365.013,104,0)
A6^Psychotherapy
"DATA",365.013,105,0)
A7^Psychiatric/Inpt
"DATA",365.013,106,0)
A8^Psychiatric/Outpt
"DATA",365.013,107,0)
A9^Rehabilitation
"DATA",365.013,108,0)
AA^Rehab/R & B
"DATA",365.013,109,0)
AB^Rehab/Inpt
"DATA",365.013,110,0)
AC^Rehab/Outpt
"DATA",365.013,111,0)
AD^Occupational Therapy
"DATA",365.013,112,0)
AE^Physical Medicine
"DATA",365.013,113,0)
AF^Speech Therapy
"DATA",365.013,114,0)
AG^SNC
"DATA",365.013,115,0)
AH^SNC/R & B
"DATA",365.013,116,0)
AI^Substance Abuse
"DATA",365.013,117,0)
AJ^Alcoholism
"DATA",365.013,118,0)
AK^Drug Addiction
"DATA",365.013,119,0)
AL^Vision (Optometry)
"DATA",365.013,120,0)
AM^Frames
"DATA",365.013,121,0)
AN^Routine Exam
"DATA",365.013,122,0)
AO^Lenses
"DATA",365.013,123,0)
AQ^N/Medically Nec Physical
"DATA",365.013,124,0)
AR^Experimental Drug Therapy
"DATA",365.013,125,0)
BA^Independent Medical Eval
"DATA",365.013,126,0)
BB^Partial Hosp (Psych)
"DATA",365.013,127,0)
BC^Day Care (Psych)
"DATA",365.013,128,0)
BD^Cognitive Therapy
"DATA",365.013,129,0)
BE^Massage Therapy
"DATA",365.013,130,0)
BF^Pulmonary Rehab
"DATA",365.013,131,0)
BG^Cardiac Rehab
"DATA",365.013,132,0)
BH^Pediatric
"DATA",365.013,133,0)
BI^Nursery
"DATA",365.013,134,0)
BJ^Skin
"DATA",365.013,135,0)
BK^Orthopedic
"DATA",365.013,136,0)
BL^Cardiac
"DATA",365.013,137,0)
BM^Lymphatic
"DATA",365.013,138,0)
BN^Gastrointestinal
"DATA",365.013,139,0)
BP^Endocrine
"DATA",365.013,140,0)
BQ^Neurology
"DATA",365.013,141,0)
BR^Eye
"DATA",365.013,142,0)
BS^Invasive Procedures
"DATA",365.013,143,0)
B1^Burn Care
"DATA",365.013,144,0)
B2^Brand Name Rx Drug - Formulary
"DATA",365.013,145,0)
B3^Brand Name Rx Drug - Non-Formulary
"DATA",365.013,146,0)
BT^Gynecological
"DATA",365.013,147,0)
BU^Obstetrical
"DATA",365.013,148,0)
BV^Obstetrical/Gynecological
"DATA",365.013,149,0)
BW^Mail Order Prescription Drug: Brand Name
"DATA",365.013,150,0)
BX^Mail Order Prescription Drug: Generic
"DATA",365.013,151,0)
BY^Physician Visit - Office: Sick
"DATA",365.013,152,0)
BZ^Physician Visit - Office: Well
"DATA",365.013,153,0)
C1^Coronary Care
"DATA",365.013,154,0)
CA^Private Duty Nursing - Inpatient
"DATA",365.013,155,0)
CB^Private Duty Nursing - Home
"DATA",365.013,156,0)
CC^Surgical Benefits - Professional (Physician)
"DATA",365.013,157,0)
CD^Surgical Benefits - Facility
"DATA",365.013,158,0)
CE^Mental Health Provider - Inpatient
"DATA",365.013,159,0)
CF^Mental Health Provider - Outpatient
"DATA",365.013,160,0)
CG^Mental Health Facility - Inpatient
"DATA",365.013,161,0)
CH^Mental Health Facility - Outpatient
"DATA",365.013,162,0)
CI^Substance Abuse Facility - Inpatient
"DATA",365.013,163,0)
CJ^Substance Abuse Facility - Outpatient
"DATA",365.013,164,0)
CK^Screening X-ray
"DATA",365.013,165,0)
CL^Screening Laboratory
"DATA",365.013,166,0)
CM^Mammogram, High Risk Patient
"DATA",365.013,167,0)
CN^Mammogram, Low Risk Patient
"DATA",365.013,168,0)
CO^Flu Vaccination
"DATA",365.013,169,0)
CP^Eyewear and Eyewear Accessories
"DATA",365.013,170,0)
CQ^Case Management
"DATA",365.013,171,0)
DG^Dermatology
"DATA",365.013,172,0)
DM^Durable Medical Equipment
"DATA",365.013,173,0)
DS^Diabetic Supplies
"DATA",365.013,174,0)
GF^Generic Prescription Drug - Formulary
"DATA",365.013,175,0)
GN^Generic Prescription Drug - Non-Formulary
"DATA",365.013,176,0)
GY^Allergy
"DATA",365.013,177,0)
IC^Intensive Care
"DATA",365.013,178,0)
MH^Mental Health
"DATA",365.013,179,0)
NI^Neonatal Intensive Care
"DATA",365.013,180,0)
ON^Oncology
"DATA",365.013,181,0)
PT^Physical Therapy
"DATA",365.013,182,0)
PU^Pulmonary
"DATA",365.013,183,0)
RN^Renal
"DATA",365.013,184,0)
RT^Residential Psychiatric Treatment
"DATA",365.013,185,0)
TC^Transitional Care
"DATA",365.013,186,0)
TN^Transitional Nursery Care
"DATA",365.013,187,0)
UC^Urgent Care
"DATA",365.015,1,0)
6^Hour
"DATA",365.015,2,0)
7^Day
"DATA",365.015,3,0)
13^24 Hours
"DATA",365.015,4,0)
21^Years
"DATA",365.015,5,0)
22^Service Year
"DATA",365.015,6,0)
23^Calendar Year
"DATA",365.015,7,0)
24^Year to Date
"DATA",365.015,8,0)
25^Contract
"DATA",365.015,9,0)
26^Episode
"DATA",365.015,10,0)
27^Visit
"DATA",365.015,11,0)
28^Outlier
"DATA",365.015,12,0)
29^Remaining
"DATA",365.015,13,0)
30^Exceeded
"DATA",365.015,14,0)
31^Not Exceeded
"DATA",365.015,15,0)
32^Lifetime
"DATA",365.015,16,0)
33^Lifetime Remaining
"DATA",365.015,17,0)
34^Month
"DATA",365.015,18,0)
35^Week
"DATA",365.015,19,0)
36^Admission
"DATA",365.016,1,0)
99^Quantity Used
"DATA",365.016,2,0)
CA^Covered/Actual
"DATA",365.016,3,0)
CE^Covered/Estimated
"DATA",365.016,4,0)
DB^Deduct. Blood Units
"DATA",365.016,5,0)
DY^Days
"DATA",365.016,6,0)
HS^Hours
"DATA",365.016,7,0)
LA^Lifetime Reserve/Actual
"DATA",365.016,8,0)
LE^Lifetime Reserve/Est
"DATA",365.016,9,0)
MN^Month
"DATA",365.016,10,0)
P6^Number of Serv/Proc
"DATA",365.016,11,0)
QA^Quantity Approved
"DATA",365.016,12,0)
S7^Age/High Value
"DATA",365.016,13,0)
S8^Age/Low Value
"DATA",365.016,14,0)
VS^Visits
"DATA",365.016,15,0)
YY^Years
"DATA",365.016,16,0)
FL^Units
"DATA",365.016,17,0)
8H^Minimum
"DATA",365.016,18,0)
D3^Number Of Co-insurance Days
"DATA",365.016,19,0)
M2^Maximum
"DATA",365.017,1,0)
04^Authorized Quantity Exceeded
"DATA",365.017,2,0)
15^Required Application Data Missing
"DATA",365.017,3,0)
41^Authorization/Access Restrictions
"DATA",365.017,4,0)
42^Unable to Respond at Current Time
"DATA",365.017,5,0)
43^Invalid/Missing Provider Identification
"DATA",365.017,6,0)
44^Invalid/Missing Provider Name
"DATA",365.017,7,0)
45^Invalid/Missing Provider Specialty
"DATA",365.017,8,0)
46^Invalid/Missing Provider Phone Number
"DATA",365.017,9,0)
47^Invalid/Missing Provider State
"DATA",365.017,10,0)
48^Invalid/Missing Referring Provider Identification Number
"DATA",365.017,11,0)
49^Provider is Not Primary Care Physician
"DATA",365.017,12,0)
50^Provider Ineligible for Inquiries
"DATA",365.017,13,0)
51^Provider Not on File
"DATA",365.017,14,0)
52^Service Dates Not Within Provider Plan Enrollment
"DATA",365.017,15,0)
53^Inquired Benefit Inconsistent with Provider Type
"DATA",365.017,16,0)
54^Inappropriate Product/Service ID Qualifier
"DATA",365.017,17,0)
55^Inappropriate Product/Service ID
"DATA",365.017,18,0)
56^Inappropriate Date
"DATA",365.017,19,0)
57^Invalid/Missing Date(s) of Service
"DATA",365.017,20,0)
58^Invalid/Missing Date-of-Birth
"DATA",365.017,21,0)
60^Date of Birth Follows Date(s) of Service
"DATA",365.017,22,0)
61^Date of Death Precedes Date(s) of Service
"DATA",365.017,23,0)
62^Date of Service Not Within Allowable Inquiry Period
"DATA",365.017,24,0)
63^Date of Service in Future
"DATA",365.017,25,0)
64^Invalid/Missing Patient ID
"DATA",365.017,26,0)
65^Invalid/Missing Patient Name
"DATA",365.017,27,0)
66^Invalid/Missing Patient Gender Code
"DATA",365.017,28,0)
67^Patient Not Found
"DATA",365.017,29,0)
68^Duplicate Patient ID Number
"DATA",365.017,30,0)
69^Inconsistent with Patient"s Age
"DATA",365.017,31,0)
70^Inconsistent with Patient"s Gender
"DATA",365.017,32,0)
71^Patient Birth Date Does Not Match that for the Patient on the Database
"DATA",365.017,33,0)
72^Invalid/Missing Subscriber/Insured ID
"DATA",365.017,34,0)
73^Invalid/Missing Subscriber/Insured Name
"DATA",365.017,35,0)
74^Invalid/Missing Subscriber/Insured Gender Code
"DATA",365.017,36,0)
75^Subscriber/Insured Not Found
"DATA",365.017,37,0)
76^Duplicate Subscriber/Insured ID Number
"DATA",365.017,38,0)
77^Subscriber Found, Patient Not Found
"DATA",365.017,39,0)
78^Subscriber/Insured Not in Group/Plan Identified
"DATA",365.017,40,0)
79^Invalid Participant Identification
"DATA",365.017,41,0)
80^No Response received - Transaction Terminated
"DATA",365.017,42,0)
T4^Payer Name or Identifier Missing
"DATA",365.017,43,0)
33^Input Errors
"DATA",365.017,44,0)
35^Out of Network
"DATA",365.017,45,0)
98^Experimental Service or Procedure
"DATA",365.017,46,0)
AA^Authorization Number Not Found
"DATA",365.017,47,0)
AE^Requires Primary Care Physician Authorization
"DATA",365.017,48,0)
AF^Invalid/Missing Diagnosis Code(s)
"DATA",365.017,49,0)
AG^Invalid/Missing Procedure Code(s)
"DATA",365.017,50,0)
AO^Additional Patient Condition Information Required
"DATA",365.017,51,0)
CI^Certification Information Does Not Match Patient
"DATA",365.017,52,0)
E8^Requires Medical Review
"DATA",365.017,53,0)
IA^Invalid Authorization Number Format
"DATA",365.017,54,0)
MA^Missing Authorization Number
"DATA",365.017,55,0)
97^Invalid or Missing Provider Address^0
"DATA",365.017,56,0)
95^Patient Not Eligible^0
"DATA",365.017,57,0)
AH^Invalid/Missing Onset of Current Condition or Illness Date^0
"DATA",365.017,58,0)
AI^Invalid/Missing Accident Date^0
"DATA",365.017,59,0)
AJ^Invalid/Missing Last Menstrual Period Date^0
"DATA",365.017,60,0)
AK^Invalid/Missing Expected Date of Birth^0
"DATA",365.017,61,0)
AM^Invalid/Missing Admission Date^0
"DATA",365.017,62,0)
AN^Invalid/Missing Discharge Date^0
"DATA",365.017,63,0)
T5^Certification Information Missing^0
"DATA",365.017,64,0)
IP^Inappropriate Provider Role^0
"DATA",365.017,65,0)
NC^No Certification Information Found^0
"DATA",365.017,66,0)
ZZ^Mutually Defined^0
"DATA",365.021,1,0)
ED
"DATA",365.021,2,0)
EM^Electronic Mail
"DATA",365.021,3,0)
FX^Facsimile
"DATA",365.021,4,0)
TE^Telephone
"DATA",365.021,5,0)
EX^Telephone Extension
"DATA",365.021,6,0)
HP^Home Phone Number
"DATA",365.021,7,0)
WP^Work Phone Number
"DATA",365.021,8,0)
UR^Uniform Resource Locator (URL)
"DATA",365.022,1,0)
13^Contracted Serv Prov
"DATA",365.022,2,0)
1P^Provider
"DATA",365.022,3,0)
2B^Third Party Admin
"DATA",365.022,4,0)
36^Employer
"DATA",365.022,5,0)
73^Other Physician
"DATA",365.022,6,0)
FA^Facility
"DATA",365.022,7,0)
GP^Gateway Prov
"DATA",365.022,8,0)
IL^Insured/Subscriber
"DATA",365.022,9,0)
LR^Legal Rep
"DATA",365.022,10,0)
P3^PCP
"DATA",365.022,11,0)
P4^Prior Ins Carrier
"DATA",365.022,12,0)
P5^Plan Sponsor
"DATA",365.022,13,0)
PR^Payer
"DATA",365.022,14,0)
PRP^Primary Payer
"DATA",365.022,15,0)
SEP^Secondary Payer
"DATA",365.022,16,0)
TTP^Tertiary Payer
"DATA",365.022,17,0)
VN^Vendor
"DATA",365.022,18,0)
X3^UM Organization
"DATA",365.022,19,0)
71^Attending Physician
"DATA",365.022,20,0)
72^Operating Physician
"DATA",365.022,21,0)
77^Service Location
"DATA",365.022,22,0)
AAJ^Admitting Services
"DATA",365.022,23,0)
DD^Assistant Surgeon
"DATA",365.022,24,0)
DK^Ordering Physician
"DATA",365.022,25,0)
DN^Referring Provider
"DATA",365.022,26,0)
G3^Clinic
"DATA",365.022,27,0)
QB^Purchase Service Provider
"DATA",365.022,28,0)
QV^Group Practice
"DATA",365.022,29,0)
SJ^Service Provider
"DATA",365.022,30,0)
1T^Physician, Clinic or Group Practice
"DATA",365.022,31,0)
DQ^Supervising Physician
"DATA",365.022,32,0)
L5^Contact
"DATA",365.025,1,0)
1^1st Wk of Month
"DATA",365.025,2,0)
2^2nd Wk of the Month
"DATA",365.025,3,0)
3^3rd Wk of Month
"DATA",365.025,4,0)
4^4th Wk of Month
"DATA",365.025,5,0)
5^5th Wk of Month
"DATA",365.025,6,0)
6^1st & 3rd Wk of Month
"DATA",365.025,7,0)
7^2nd & 4th Wk of Month
"DATA",365.025,8,0)
8^1st Working Day of Period
"DATA",365.025,9,0)
9^Last Working Day of Period
"DATA",365.025,10,0)
A^Mon. through Fri.
"DATA",365.025,11,0)
B^Mon. through Sat.
"DATA",365.025,12,0)
C^Mon. through Sun.
"DATA",365.025,13,0)
D^Mon.
"DATA",365.025,14,0)
E^Tues.
"DATA",365.025,15,0)
F^Wed.
"DATA",365.025,16,0)
G^Thurs.
"DATA",365.025,17,0)
H^Fri.
"DATA",365.025,18,0)
J^Sat.
"DATA",365.025,19,0)
K^Sun.
"DATA",365.025,20,0)
L^Mon. through Thurs.
"DATA",365.025,21,0)
M^Immediately
"DATA",365.025,22,0)
N^As Directed
"DATA",365.025,23,0)
O^Daily Mon. through Fri.
"DATA",365.025,24,0)
P^1/2 Mon., 1/2 Thurs.
"DATA",365.025,25,0)
Q^1/2 Tues., 1/2 Thurs.
"DATA",365.025,26,0)
R^1/2 Wed., 1/2 Fri.
"DATA",365.025,27,0)
S^Once Anytime Mon. through Fri.
"DATA",365.025,28,0)
SG^Tues. through Fri.
"DATA",365.025,29,0)
SL^Mon., Tues., Thurs.
"DATA",365.025,30,0)
SP^Mon., Tues., Fri.
"DATA",365.025,31,0)
SX^Wed., Thurs.
"DATA",365.025,32,0)
SY^Mon., Wed., Thurs.
"DATA",365.025,33,0)
SZ^Tues., Thurs., Fri.
"DATA",365.025,34,0)
T^1/2 Tue., 1/2 Fri.
"DATA",365.025,35,0)
U^1/2 Mon., 1/2 Wed.
"DATA",365.025,36,0)
V^1/3 Mon., 1/3 Wed., 1/3 Fri.
"DATA",365.025,37,0)
W^Whenever Necessary
"DATA",365.025,38,0)
X^1/2 By Wed., Bal. By Fri.
"DATA",365.025,39,0)
Y^None
"DATA",365.025,40,0)
SA^Sun., Mon., Thurs., Fri., Sat.
"DATA",365.025,41,0)
SB^Tue., through Sat.
"DATA",365.025,42,0)
SC^Sun., Wed., Thurs., Fri., Sat.
"DATA",365.025,43,0)
SD^Mon., Wed., Thurs., Fri., Sat.
"DATA",365.025,44,0)
WE^Weekend
"DATA",365.027,1,0)
2000C^Subscriber Level
"DATA",365.027,2,0)
2100C^Subscriber Name
"DATA",365.027,3,0)
2110C^Subscriber E/B Info
"DATA",365.027,4,0)
2115C^Subscriber E/B Adtl Info
"DATA",365.027,5,0)
2120C^Subscriber E/B Entity Name
"DATA",365.027,6,0)
2000D^Dependent Level
"DATA",365.027,7,0)
2100D^Dependent Name
"DATA",365.027,8,0)
2110D^Dependent E/B Info
"DATA",365.027,9,0)
2115D^Dependent E/B Adtl Info
"DATA",365.027,10,0)
2120D^Dependent E/B Entity Name
"DATA",365.027,11,0)
2000A^Information Source Level
"DATA",365.027,12,0)
2100A^Information Source Name
"DATA",365.027,13,0)
2000B^Information Receiver Level
"DATA",365.027,14,0)
2100B^Information Receiver Name
"DATA",365.027,15,0)
2010A^UMO Name
"DATA",365.027,16,0)
2010B^Requester Name
"DATA",365.027,17,0)
2010C^Subscriber Name
"DATA",365.027,18,0)
2010D^Dependent Name
"DATA",365.027,19,0)
2000E^Patient Event Level
"DATA",365.027,20,0)
2010EA^Patient Event Provider Name
"DATA",365.027,21,0)
2010EB^Add. Patient Info Contact
"DATA",365.027,22,0)
2010EC^Patient Event Transport Info
"DATA",365.027,23,0)
2000F^Service Level
"DATA",365.027,24,0)
2010F^Service Provider Name
"DATA",365.027,25,0)
2010FA^Service Provider Name
"DATA",365.027,26,0)
2010FB^Add. Service Info Contact Name
"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^y^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,62.02)

"FIA",350.9,350.9,62.03)

"FIA",350.9,350.9,62.04)

"FIA",350.9,350.9,62.05)

"FIA",350.9,350.9,62.06)

"FIA",350.9,350.9,62.07)

"FIA",350.9,350.9,62.08)

"FIA",350.9,350.9,62.09)

"FIA",350.9,350.9,62.1)

"FIA",350.9,350.9,62.11)

"FIA",350.9,350.9,62.12)

"FIA",350.9,350.9,62.13)

"FIA",350.9,350.9,63)

"FIA",350.9,350.9,64)

"FIA",350.9,350.9,65)

"FIA",350.9,350.9,66)

"FIA",350.9,350.963)
0
"FIA",350.9,350.9631)
0
"FIA",350.9,350.964)
0
"FIA",350.9,350.9641)
0
"FIA",350.9,350.965)
0
"FIA",350.9,350.966)
0
"FIA",356.001)
X12 278 REQUEST CATEGORY
"FIA",356.001,0)
^IBT(356.001,
"FIA",356.001,0,0)
356.001I
"FIA",356.001,0,1)
y^y^f^^n^^y^o^n
"FIA",356.001,0,10)

"FIA",356.001,0,11)

"FIA",356.001,0,"RLRO")

"FIA",356.001,0,"VR")
2.0^IB
"FIA",356.001,356.001)
0
"FIA",356.002)
X12 278 CERTIFICATION TYPE CODE
"FIA",356.002,0)
^IBT(356.002,
"FIA",356.002,0,0)
356.002I
"FIA",356.002,0,1)
y^y^f^^n^^y^o^n
"FIA",356.002,0,10)

"FIA",356.002,0,11)

"FIA",356.002,0,"RLRO")

"FIA",356.002,0,"VR")
2.0^IB
"FIA",356.002,356.002)
0
"FIA",356.003)
X12 278 CURRENT HEALTH CONDITION CODE
"FIA",356.003,0)
^IBT(356.003,
"FIA",356.003,0,0)
356.003I
"FIA",356.003,0,1)
y^y^f^^n^^y^o^n
"FIA",356.003,0,10)

"FIA",356.003,0,11)

"FIA",356.003,0,"RLRO")

"FIA",356.003,0,"VR")
2.0^IB
"FIA",356.003,356.003)
0
"FIA",356.004)
X12 278 PROGNOSIS CODE
"FIA",356.004,0)
^IBT(356.004,
"FIA",356.004,0,0)
356.004I
"FIA",356.004,0,1)
y^y^f^^n^^y^o^n
"FIA",356.004,0,10)

"FIA",356.004,0,11)

"FIA",356.004,0,"RLRO")

"FIA",356.004,0,"VR")
2.0^IB
"FIA",356.004,356.004)
0
"FIA",356.005)
X12 278 DELAY REASON CODE
"FIA",356.005,0)
^IBT(356.005,
"FIA",356.005,0,0)
356.005I
"FIA",356.005,0,1)
y^y^f^^n^^y^o^n
"FIA",356.005,0,10)

"FIA",356.005,0,11)

"FIA",356.005,0,"RLRO")

"FIA",356.005,0,"VR")
2.0^IB
"FIA",356.005,356.005)
0
"FIA",356.006)
X12 278 DIAGNOSIS TYPE
"FIA",356.006,0)
^IBT(356.006,
"FIA",356.006,0,0)
356.006I
"FIA",356.006,0,1)
y^y^f^^n^^y^o^n
"FIA",356.006,0,10)

"FIA",356.006,0,11)

"FIA",356.006,0,"RLRO")

"FIA",356.006,0,"VR")
2.0^IB
"FIA",356.006,356.006)
0
"FIA",356.007)
X12 278 DELIVERY PATTERN TIME CODE
"FIA",356.007,0)
^IBT(356.007,
"FIA",356.007,0,0)
356.007I
"FIA",356.007,0,1)
y^y^f^^n^^y^o^n
"FIA",356.007,0,10)

"FIA",356.007,0,11)

"FIA",356.007,0,"RLRO")

"FIA",356.007,0,"VR")
2.0^IB
"FIA",356.007,356.007)
0
"FIA",356.008)
X12 278 CONDITION CODE
"FIA",356.008,0)
^IBT(356.008,
"FIA",356.008,0,0)
356.008I
"FIA",356.008,0,1)
y^y^f^^n^^y^o^n
"FIA",356.008,0,10)

"FIA",356.008,0,11)

"FIA",356.008,0,"RLRO")

"FIA",356.008,0,"VR")
2.0^IB
"FIA",356.008,356.008)
0
"FIA",356.009)
X12 278 ADMISSION SOURCE
"FIA",356.009,0)
^IBT(356.009,
"FIA",356.009,0,0)
356.009I
"FIA",356.009,0,1)
y^y^f^^n^^y^o^n
"FIA",356.009,0,10)

"FIA",356.009,0,11)

"FIA",356.009,0,"RLRO")

"FIA",356.009,0,"VR")
2.0^IB
"FIA",356.009,356.009)
0
"FIA",356.01)
X12 278 PATIENT STATUS
"FIA",356.01,0)
^IBT(356.01,
"FIA",356.01,0,0)
356.01I
"FIA",356.01,0,1)
y^y^f^^n^^y^o^n
"FIA",356.01,0,10)

"FIA",356.01,0,11)

"FIA",356.01,0,"RLRO")

"FIA",356.01,0,"VR")
2.0^IB
"FIA",356.01,356.01)
0
"FIA",356.011)
X12 278 NURSING HOME RESIDENTIAL STATUS
"FIA",356.011,0)
^IBT(356.011,
"FIA",356.011,0,0)
356.011I
"FIA",356.011,0,1)
y^y^f^^n^^y^o^n
"FIA",356.011,0,10)

"FIA",356.011,0,11)

"FIA",356.011,0,"RLRO")

"FIA",356.011,0,"VR")
2.0^IB
"FIA",356.011,356.011)
0
"FIA",356.012)
X12 278 SUBLUXATION LEVEL CODE
"FIA",356.012,0)
^IBT(356.012,
"FIA",356.012,0,0)
356.012I
"FIA",356.012,0,1)
y^y^f^^n^^y^o^n
"FIA",356.012,0,10)

"FIA",356.012,0,11)

"FIA",356.012,0,"RLRO")

"FIA",356.012,0,"VR")
2.0^IB
"FIA",356.012,356.012)
0
"FIA",356.013)
X12 278 OXYGEN EQUIPMENT TYPE
"FIA",356.013,0)
^IBT(356.013,
"FIA",356.013,0,0)
356.013I
"FIA",356.013,0,1)
y^y^f^^n^^y^o^n
"FIA",356.013,0,10)

"FIA",356.013,0,11)

"FIA",356.013,0,"RLRO")

"FIA",356.013,0,"VR")
2.0^IB
"FIA",356.013,356.013)
0
"FIA",356.014)
X12 278 OXYGEN TEST CONDITION
"FIA",356.014,0)
^IBT(356.014,
"FIA",356.014,0,0)
356.014I
"FIA",356.014,0,1)
y^y^f^^n^^y^o^n
"FIA",356.014,0,10)

"FIA",356.014,0,11)

"FIA",356.014,0,"RLRO")

"FIA",356.014,0,"VR")
2.0^IB
"FIA",356.014,356.014)
0
"FIA",356.015)
X12 278 OXYGEN TEST FINDINGS
"FIA",356.015,0)
^IBT(356.015,
"FIA",356.015,0,0)
356.015I
"FIA",356.015,0,1)
y^y^f^^n^^y^o^n
"FIA",356.015,0,10)

"FIA",356.015,0,11)

"FIA",356.015,0,"RLRO")

"FIA",356.015,0,"VR")
2.0^IB
"FIA",356.015,356.015)
0
"FIA",356.016)
X12 278 OXYGEN DELIVERY SYSTEM CODE
"FIA",356.016,0)
^IBT(356.016,
"FIA",356.016,0,0)
356.016I
"FIA",356.016,0,1)
y^y^f^^n^^y^o^n
"FIA",356.016,0,10)

"FIA",356.016,0,11)

"FIA",356.016,0,"RLRO")

"FIA",356.016,0,"VR")
2.0^IB
"FIA",356.016,356.016)
0
"FIA",356.017)
X12 278 PATIENT LOCATION
"FIA",356.017,0)
^IBT(356.017,
"FIA",356.017,0,0)
356.017I
"FIA",356.017,0,1)
y^y^f^^n^^y^o^n
"FIA",356.017,0,10)

"FIA",356.017,0,11)

"FIA",356.017,0,"RLRO")

"FIA",356.017,0,"VR")
2.0^IB
"FIA",356.017,356.017)
0
"FIA",356.018)
X12 278 REPORT TYPE CODE
"FIA",356.018,0)
^IBT(356.018,
"FIA",356.018,0,0)
356.018I
"FIA",356.018,0,1)
y^y^f^^n^^y^o^n
"FIA",356.018,0,10)

"FIA",356.018,0,11)

"FIA",356.018,0,"RLRO")

"FIA",356.018,0,"VR")
2.0^IB
"FIA",356.018,356.018)
0
"FIA",356.019)
X12 278 NURSING HOME LEVEL OF CARE
"FIA",356.019,0)
^IBT(356.019,
"FIA",356.019,0,0)
356.019I
"FIA",356.019,0,1)
y^y^f^^n^^y^o^n
"FIA",356.019,0,10)

"FIA",356.019,0,11)

"FIA",356.019,0,"RLRO")

"FIA",356.019,0,"VR")
2.0^IB
"FIA",356.019,356.019)
0
"FIA",356.02)
X12 278 CERTIFICATION ACTION CODES
"FIA",356.02,0)
^IBT(356.02,
"FIA",356.02,0,0)
356.02I
"FIA",356.02,0,1)
y^y^f^^n^^y^o^n
"FIA",356.02,0,10)

"FIA",356.02,0,11)

"FIA",356.02,0,"RLRO")

"FIA",356.02,0,"VR")
2.0^IB
"FIA",356.02,356.02)
0
"FIA",356.021)
X12 278 HCS DECISION REASON CODES
"FIA",356.021,0)
^IBT(356.021,
"FIA",356.021,0,0)
356.021I
"FIA",356.021,0,1)
y^y^f^^n^^y^o^n
"FIA",356.021,0,10)

"FIA",356.021,0,11)

"FIA",356.021,0,"RLRO")

"FIA",356.021,0,"VR")
2.0^IB
"FIA",356.021,356.021)
0
"FIA",356.022)
X12 278 DENTAL NUMBERING SYSTEM
"FIA",356.022,0)
^IBT(356.022,
"FIA",356.022,0,0)
356.022I
"FIA",356.022,0,1)
y^y^f^^n^^y^o^n
"FIA",356.022,0,10)

"FIA",356.022,0,11)

"FIA",356.022,0,"RLRO")

"FIA",356.022,0,"VR")
2.0^IB
"FIA",356.022,356.022)
0
"FIA",356.023)
HCSR WORKLIST DELETE REASON CODE
"FIA",356.023,0)
^IBT(356.023,
"FIA",356.023,0,0)
356.023I
"FIA",356.023,0,1)
y^y^f^^n^^y^o^n
"FIA",356.023,0,10)

"FIA",356.023,0,11)

"FIA",356.023,0,"RLRO")

"FIA",356.023,0,"VR")
2.0^IB
"FIA",356.023,356.023)
0
"FIA",356.22)
HCS REVIEW TRANSMISSION
"FIA",356.22,0)
^IBT(356.22,
"FIA",356.22,0,0)
356.22D
"FIA",356.22,0,1)
y^y^f^^^^n
"FIA",356.22,0,10)

"FIA",356.22,0,11)

"FIA",356.22,0,"RLRO")

"FIA",356.22,0,"VR")
2.0^IB
"FIA",356.22,356.22)
0
"FIA",356.22,356.221)
0
"FIA",356.22,356.22101)
0
"FIA",356.22,356.22105)
0
"FIA",356.22,356.22107)
0
"FIA",356.22,356.2211)
0
"FIA",356.22,356.2212)
0
"FIA",356.22,356.2213)
0
"FIA",356.22,356.2214)
0
"FIA",356.22,356.2215)
0
"FIA",356.22,356.2216)
0
"FIA",356.22,356.22164)
0
"FIA",356.22,356.22166)
0
"FIA",356.22,356.22167)
0
"FIA",356.22,356.22168)
0
"FIA",356.22,356.2223)
0
"FIA",356.22,356.223)
0
"FIA",356.22,356.231)
0
"FIA",356.22,356.2316)
0
"FIA",365.013)
X12 271 SERVICE TYPE
"FIA",365.013,0)
^IBE(365.013,
"FIA",365.013,0,0)
365.013I
"FIA",365.013,0,1)
y^y^f^^n^^y^o^n
"FIA",365.013,0,10)

"FIA",365.013,0,11)

"FIA",365.013,0,"RLRO")

"FIA",365.013,0,"VR")
2.0^IB
"FIA",365.013,365.013)
0
"FIA",365.015)
X12 271 TIME PERIOD QUALIFIER
"FIA",365.015,0)
^IBE(365.015,
"FIA",365.015,0,0)
365.015I
"FIA",365.015,0,1)
y^y^f^^n^^y^o^n
"FIA",365.015,0,10)

"FIA",365.015,0,11)

"FIA",365.015,0,"RLRO")

"FIA",365.015,0,"VR")
2.0^IB
"FIA",365.015,365.015)
0
"FIA",365.016)
X12 271 QUANTITY QUALIFIER
"FIA",365.016,0)
^IBE(365.016,
"FIA",365.016,0,0)
365.016I
"FIA",365.016,0,1)
y^y^f^^n^^y^o^n
"FIA",365.016,0,10)

"FIA",365.016,0,11)

"FIA",365.016,0,"RLRO")

"FIA",365.016,0,"VR")
2.0^IB
"FIA",365.016,365.016)
0
"FIA",365.017)
X12 271 ERROR CONDITION
"FIA",365.017,0)
^IBE(365.017,
"FIA",365.017,0,0)
365.017I
"FIA",365.017,0,1)
n^y^f^^n^^y^o^n
"FIA",365.017,0,10)

"FIA",365.017,0,11)

"FIA",365.017,0,"RLRO")

"FIA",365.017,0,"VR")
2.0^IB
"FIA",365.017,365.017)
0
"FIA",365.021)
X12 271 CONTACT QUALIFIER
"FIA",365.021,0)
^IBE(365.021,
"FIA",365.021,0,0)
365.021I
"FIA",365.021,0,1)
y^y^f^^n^^y^o^n
"FIA",365.021,0,10)

"FIA",365.021,0,11)

"FIA",365.021,0,"RLRO")

"FIA",365.021,0,"VR")
2.0^IB
"FIA",365.021,365.021)
0
"FIA",365.022)
X12 271 ENTITY IDENTIFIER CODE
"FIA",365.022,0)
^IBE(365.022,
"FIA",365.022,0,0)
365.022I
"FIA",365.022,0,1)
y^y^f^^n^^y^o^n
"FIA",365.022,0,10)

"FIA",365.022,0,11)

"FIA",365.022,0,"RLRO")

"FIA",365.022,0,"VR")
2.0^IB
"FIA",365.022,365.022)
0
"FIA",365.025)
X12 271 DELIVERY FREQUENCY CODE
"FIA",365.025,0)
^IBE(365.025,
"FIA",365.025,0,0)
365.025I
"FIA",365.025,0,1)
y^y^f^^n^^y^o^n
"FIA",365.025,0,10)

"FIA",365.025,0,11)

"FIA",365.025,0,"RLRO")

"FIA",365.025,0,"VR")
2.0^IB
"FIA",365.025,365.025)
0
"FIA",365.027)
X12 271 LOOP ID
"FIA",365.027,0)
^IBE(365.027,
"FIA",365.027,0,0)
365.027I
"FIA",365.027,0,1)
y^y^f^^n^^y^o^n
"FIA",365.027,0,10)

"FIA",365.027,0,11)

"FIA",365.027,0,"RLRO")

"FIA",365.027,0,"VR")
2.0^IB
"FIA",365.027,365.027)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^y^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,112)

"FIA",399,399,113)

"FIA",399,399,114)

"INI")
IBY517PR
"INIT")
IBY517PO
"IX",356.001,356.001,"C",0)
356.001^C^Convert to Upper Case for lookups^R^^F^IR^I^356.001^^^^^LS
"IX",356.001,356.001,"C",1)
S ^IBT(356.001,"C",$E(X,1,30),DA)=""
"IX",356.001,356.001,"C",2)
K ^IBT(356.001,"C",$E(X,1,30),DA)
"IX",356.001,356.001,"C",2.5)
K ^IBT(356.001,"C")
"IX",356.001,356.001,"C",11.1,0)
^.114IA^1^1
"IX",356.001,356.001,"C",11.1,1,0)
1^F^356.001^.02^30^1^F
"IX",356.001,356.001,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.002,356.002,"C",0)
356.002^C^Convert to Upper Case for lookups^R^^F^IR^I^356.002^^^^^LS
"IX",356.002,356.002,"C",1)
S ^IBT(356.002,"C",$E(X,1,30),DA)=""
"IX",356.002,356.002,"C",2)
K ^IBT(356.002,"C",$E(X,1,30),DA)
"IX",356.002,356.002,"C",2.5)
K ^IBT(356.002,"C")
"IX",356.002,356.002,"C",11.1,0)
^.114IA^1^1
"IX",356.002,356.002,"C",11.1,1,0)
1^F^356.002^.02^30^1^F
"IX",356.002,356.002,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.003,356.003,"C",0)
356.003^C^Conver to Upper Case for lookups^R^^F^IR^I^356.003^^^^^LS
"IX",356.003,356.003,"C",1)
S ^IBT(356.003,"C",$E(X,1,30),DA)=""
"IX",356.003,356.003,"C",2)
K ^IBT(356.003,"C",$E(X,1,30),DA)
"IX",356.003,356.003,"C",2.5)
K ^IBT(356.003,"C")
"IX",356.003,356.003,"C",11.1,0)
^.114IA^1^1
"IX",356.003,356.003,"C",11.1,1,0)
1^F^356.003^.02^30^1^F
"IX",356.003,356.003,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.003,356.003,"C",11.1,1,3)

"IX",356.004,356.004,"C",0)
356.004^C^Convert to Upper Case for lookups^R^^F^IR^I^356.004^^^^^LS
"IX",356.004,356.004,"C",1)
S ^IBT(356.004,"C",$E(X,1,30),DA)=""
"IX",356.004,356.004,"C",2)
K ^IBT(356.004,"C",$E(X,1,30),DA)
"IX",356.004,356.004,"C",2.5)
K ^IBT(356.004,"C")
"IX",356.004,356.004,"C",11.1,0)
^.114IA^1^1
"IX",356.004,356.004,"C",11.1,1,0)
1^F^356.004^.02^30^1^F
"IX",356.004,356.004,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.005,356.005,"C",0)
356.005^C^Convert to Upper Case for lookups^R^^F^IR^I^356.005^^^^^LS
"IX",356.005,356.005,"C",1)
S ^IBT(356.005,"C",$E(X,1,30),DA)=""
"IX",356.005,356.005,"C",2)
K ^IBT(356.005,"C",$E(X,1,30),DA)
"IX",356.005,356.005,"C",2.5)
K ^IBT(356.005,"C")
"IX",356.005,356.005,"C",11.1,0)
^.114IA^1^1
"IX",356.005,356.005,"C",11.1,1,0)
1^F^356.005^.02^30^1^F
"IX",356.005,356.005,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.005,356.005,"C",11.1,1,3)

"IX",356.006,356.006,"C",0)
356.006^C^Convert to Upper Case for lookups^R^^F^IR^I^356.006^^^^^LS
"IX",356.006,356.006,"C",1)
S ^IBT(356.006,"C",$E(X,1,30),DA)=""
"IX",356.006,356.006,"C",2)
K ^IBT(356.006,"C",$E(X,1,30),DA)
"IX",356.006,356.006,"C",2.5)
K ^IBT(356.006,"C")
"IX",356.006,356.006,"C",11.1,0)
^.114IA^1^1
"IX",356.006,356.006,"C",11.1,1,0)
1^F^356.006^.02^30^1^F
"IX",356.006,356.006,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.006,356.006,"C",11.1,1,3)

"IX",356.007,356.007,"C",0)
356.007^C^Convert to Upper Case for lookups^R^^F^IR^I^356.007^^^^^LS
"IX",356.007,356.007,"C",1)
S ^IBT(356.007,"C",$E(X,1,30),DA)=""
"IX",356.007,356.007,"C",2)
K ^IBT(356.007,"C",$E(X,1,30),DA)
"IX",356.007,356.007,"C",2.5)
K ^IBT(356.007,"C")
"IX",356.007,356.007,"C",11.1,0)
^.114IA^1^1
"IX",356.007,356.007,"C",11.1,1,0)
1^F^356.007^.02^30^1^F
"IX",356.007,356.007,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.007,356.007,"C",11.1,1,3)

"IX",356.008,356.008,"C",0)
356.008^C^Convert to Upper Case for lookups^R^^F^IR^I^356.008^^^^^LS
"IX",356.008,356.008,"C",1)
S ^IBT(356.008,"C",$E(X,1,30),DA)=""
"IX",356.008,356.008,"C",2)
K ^IBT(356.008,"C",$E(X,1,30),DA)
"IX",356.008,356.008,"C",2.5)
K ^IBT(356.008,"C")
"IX",356.008,356.008,"C",11.1,0)
^.114IA^1^1
"IX",356.008,356.008,"C",11.1,1,0)
1^F^356.008^.02^30^1^F
"IX",356.008,356.008,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.008,356.008,"C",11.1,1,3)

"IX",356.009,356.009,"C",0)
356.009^C^Convert to Upper Case for lookups^R^^F^IR^I^356.009^^^^^LS
"IX",356.009,356.009,"C",1)
S ^IBT(356.009,"C",$E(X,1,30),DA)=""
"IX",356.009,356.009,"C",2)
K ^IBT(356.009,"C",$E(X,1,30),DA)
"IX",356.009,356.009,"C",2.5)
K ^IBT(356.009,"C")
"IX",356.009,356.009,"C",11.1,0)
^.114IA^1^1
"IX",356.009,356.009,"C",11.1,1,0)
1^F^356.009^.02^30^1^F
"IX",356.009,356.009,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.009,356.009,"C",11.1,1,3)

"IX",356.01,356.01,"D",0)
356.01^D^Convert to Upper Case for lookups^R^^F^IR^I^356.01^^^^^LS
"IX",356.01,356.01,"D",1)
S ^IBT(356.01,"D",$E(X,1,30),DA)=""
"IX",356.01,356.01,"D",2)
K ^IBT(356.01,"D",$E(X,1,30),DA)
"IX",356.01,356.01,"D",2.5)
K ^IBT(356.01,"D")
"IX",356.01,356.01,"D",11.1,0)
^.114IA^1^1
"IX",356.01,356.01,"D",11.1,1,0)
1^F^356.01^.02^30^1^F
"IX",356.01,356.01,"D",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.01,356.01,"D",11.1,1,3)

"IX",356.011,356.011,"C",0)
356.011^C^Convert to Upper Case for lookups^R^^F^IR^I^356.011^^^^^LS
"IX",356.011,356.011,"C",1)
S ^IBT(356.011,"C",$E(X,1,30),DA)=""
"IX",356.011,356.011,"C",2)
K ^IBT(356.011,"C",$E(X,1,30),DA)
"IX",356.011,356.011,"C",2.5)
K ^IBT(356.011,"C")
"IX",356.011,356.011,"C",11.1,0)
^.114IA^1^1
"IX",356.011,356.011,"C",11.1,1,0)
1^F^356.011^.02^30^1^F
"IX",356.011,356.011,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.011,356.011,"C",11.1,1,3)

"IX",356.012,356.012,"C",0)
356.012^C^Convert to Upper Case for lookups^R^^F^IR^I^356.012^^^^^LS
"IX",356.012,356.012,"C",1)
S ^IBT(356.012,"C",$E(X,1,20),DA)=""
"IX",356.012,356.012,"C",2)
K ^IBT(356.012,"C",$E(X,1,20),DA)
"IX",356.012,356.012,"C",2.5)
K ^IBT(356.012,"C")
"IX",356.012,356.012,"C",11.1,0)
^.114IA^1^1
"IX",356.012,356.012,"C",11.1,1,0)
1^F^356.012^.02^20^1^F
"IX",356.012,356.012,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,20))
"IX",356.012,356.012,"C",11.1,1,3)

"IX",356.013,356.013,"C",0)
356.013^C^Convert to Upper Case for lookups^R^^F^IR^I^356.013^^^^^LS
"IX",356.013,356.013,"C",1)
S ^IBT(356.013,"C",$E(X,1,30),DA)=""
"IX",356.013,356.013,"C",2)
K ^IBT(356.013,"C",$E(X,1,30),DA)
"IX",356.013,356.013,"C",2.5)
K ^IBT(356.013,"C")
"IX",356.013,356.013,"C",11.1,0)
^.114IA^1^1
"IX",356.013,356.013,"C",11.1,1,0)
1^F^356.013^.02^30^1^F
"IX",356.013,356.013,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.013,356.013,"C",11.1,1,3)

"IX",356.014,356.014,"C",0)
356.014^C^Convert to Upper Case for lookups^R^^F^IR^I^356.014^^^^^LS
"IX",356.014,356.014,"C",1)
S ^IBT(356.014,"C",$E(X,1,30),DA)=""
"IX",356.014,356.014,"C",2)
K ^IBT(356.014,"C",$E(X,1,30),DA)
"IX",356.014,356.014,"C",2.5)
K ^IBT(356.014,"C")
"IX",356.014,356.014,"C",11.1,0)
^.114IA^1^1
"IX",356.014,356.014,"C",11.1,1,0)
1^F^356.014^.02^30^1^F
"IX",356.014,356.014,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.014,356.014,"C",11.1,1,3)

"IX",356.015,356.015,"C",0)
356.015^C^Convert to Upper Case for lookups^R^^F^IR^I^356.015^^^^^LS
"IX",356.015,356.015,"C",1)
S ^IBT(356.015,"C",$E(X,1,30),DA)=""
"IX",356.015,356.015,"C",2)
K ^IBT(356.015,"C",$E(X,1,30),DA)
"IX",356.015,356.015,"C",2.5)
K ^IBT(356.015,"C")
"IX",356.015,356.015,"C",11.1,0)
^.114IA^1^1
"IX",356.015,356.015,"C",11.1,1,0)
1^F^356.015^.02^30^1^F
"IX",356.015,356.015,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.015,356.015,"C",11.1,1,3)

"IX",356.016,356.016,"C",0)
356.016^C^Convert to Upper Case for lookups^R^^F^IR^I^356.016^^^^^LS
"IX",356.016,356.016,"C",1)
S ^IBT(356.016,"C",$E(X,1,30),DA)=""
"IX",356.016,356.016,"C",2)
K ^IBT(356.016,"C",$E(X,1,30),DA)
"IX",356.016,356.016,"C",2.5)
K ^IBT(356.016,"C")
"IX",356.016,356.016,"C",11.1,0)
^.114IA^1^1
"IX",356.016,356.016,"C",11.1,1,0)
1^F^356.016^.02^30^1^F
"IX",356.016,356.016,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.016,356.016,"C",11.1,1,3)

"IX",356.017,356.017,"C",0)
356.017^C^Convert to Upper Case for lookups^R^^F^IR^I^356.017^^^^^LS
"IX",356.017,356.017,"C",1)
S ^IBT(356.017,"C",$E(X,1,30),DA)=""
"IX",356.017,356.017,"C",2)
K ^IBT(356.017,"C",$E(X,1,30),DA)
"IX",356.017,356.017,"C",2.5)
K ^IBT(356.017,"C")
"IX",356.017,356.017,"C",11.1,0)
^.114IA^1^1
"IX",356.017,356.017,"C",11.1,1,0)
1^F^356.017^.02^30^1^F
"IX",356.017,356.017,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.017,356.017,"C",11.1,1,3)

"IX",356.018,356.018,"C",0)
356.018^C^Convert to Upper Case for lookups^R^^F^IR^I^356.018^^^^^LS
"IX",356.018,356.018,"C",1)
S ^IBT(356.018,"C",$E(X,1,30),DA)=""
"IX",356.018,356.018,"C",2)
K ^IBT(356.018,"C",$E(X,1,30),DA)
"IX",356.018,356.018,"C",2.5)
K ^IBT(356.018,"C")
"IX",356.018,356.018,"C",11.1,0)
^.114IA^1^1
"IX",356.018,356.018,"C",11.1,1,0)
1^F^356.018^.02^30^1^F
"IX",356.018,356.018,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.018,356.018,"C",11.1,1,3)

"IX",356.019,356.019,"C",0)
356.019^C^Convert to Upper Case for lookups^R^^F^IR^I^356.019^^^^^LS
"IX",356.019,356.019,"C",1)
S ^IBT(356.019,"C",$E(X,1,30),DA)=""
"IX",356.019,356.019,"C",2)
K ^IBT(356.019,"C",$E(X,1,30),DA)
"IX",356.019,356.019,"C",2.5)
K ^IBT(356.019,"C")
"IX",356.019,356.019,"C",11.1,0)
^.114IA^1^1
"IX",356.019,356.019,"C",11.1,1,0)
1^F^356.019^.02^30^1^F
"IX",356.019,356.019,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.019,356.019,"C",11.1,1,3)

"IX",356.02,356.02,"C",0)
356.02^C^Convert to Upper Case for lookups^R^^F^IR^I^356.02^^^^^LS
"IX",356.02,356.02,"C",1)
S ^IBT(356.02,"C",$E(X,1,30),DA)=""
"IX",356.02,356.02,"C",2)
K ^IBT(356.02,"C",$E(X,1,30),DA)
"IX",356.02,356.02,"C",2.5)
K ^IBT(356.02,"C")
"IX",356.02,356.02,"C",11.1,0)
^.114IA^1^1
"IX",356.02,356.02,"C",11.1,1,0)
1^F^356.02^.02^30^1^F
"IX",356.02,356.02,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.02,356.02,"C",11.1,1,3)

"IX",356.021,356.021,"C",0)
356.021^C^Convert to Upper Case for lookups^R^^F^IR^I^356.021^^^^^LS
"IX",356.021,356.021,"C",1)
S ^IBT(356.021,"C",$E(X,1,30),DA)=""
"IX",356.021,356.021,"C",2)
K ^IBT(356.021,"C",$E(X,1,30),DA)
"IX",356.021,356.021,"C",2.5)
K ^IBT(356.021,"C")
"IX",356.021,356.021,"C",11.1,0)
^.114IA^1^1
"IX",356.021,356.021,"C",11.1,1,0)
1^F^356.021^.02^30^1^F
"IX",356.021,356.021,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.021,356.021,"C",11.1,1,3)

"IX",356.022,356.022,"C",0)
356.022^C^Convert to Upper Case for lookups^R^^F^IR^I^356.022^^^^^LS
"IX",356.022,356.022,"C",1)
S ^IBT(356.022,"C",$E(X,1,30),DA)=""
"IX",356.022,356.022,"C",2)
K ^IBT(356.022,"C",$E(X,1,30),DA)
"IX",356.022,356.022,"C",2.5)
K ^IBT(356.022,"C")
"IX",356.022,356.022,"C",11.1,0)
^.114IA^1^1
"IX",356.022,356.022,"C",11.1,1,0)
1^F^356.022^.02^30^1^F
"IX",356.022,356.022,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",356.022,356.022,"C",11.1,1,3)

"IX",356.023,356.023,"C",0)
356.023^C^Convert to upper case^R^^F^IR^I^356.023^^^^^LS
"IX",356.023,356.023,"C",.1,0)
^^2^2^3150922^
"IX",356.023,356.023,"C",.1,1,0)
Used to lookup by description field up to 50 characters.
"IX",356.023,356.023,"C",.1,2,0)
Also, convert to upper case to allow for lower or upper case lookup.
"IX",356.023,356.023,"C",1)
S ^IBT(356.023,"C",$E(X,1,50),DA)=""
"IX",356.023,356.023,"C",2)
K ^IBT(356.023,"C",$E(X,1,50),DA)
"IX",356.023,356.023,"C",2.5)
K ^IBT(356.023,"C")
"IX",356.023,356.023,"C",11.1,0)
^.114IA^1^1
"IX",356.023,356.023,"C",11.1,1,0)
1^F^356.023^.02^50^1^F
"IX",356.023,356.023,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,60))
"IX",356.22,356.22,"AD",0)
356.22^AD^Used to populate entries into the HCSR Worklist in a timely fashion^MU^^R^IR^I^356.22^^^^^S
"IX",356.22,356.22,"AD",1)
S ^IBT(356.22,"AD",+$E(X(1),1,2),$E(X(2),1,30),DA)=""
"IX",356.22,356.22,"AD",2)
K ^IBT(356.22,"AD",+$E(X(1),1,2),$E(X(2),1,30),DA)
"IX",356.22,356.22,"AD",2.5)
K ^IBT(356.22,"AD")
"IX",356.22,356.22,"AD",11.1,0)
^.114IA^2^2
"IX",356.22,356.22,"AD",11.1,1,0)
1^F^356.22^.08^2^1^F
"IX",356.22,356.22,"AD",11.1,1,1)

"IX",356.22,356.22,"AD",11.1,1,1.5)

"IX",356.22,356.22,"AD",11.1,1,3)

"IX",356.22,356.22,"AD",11.1,2,0)
2^F^356.22^.01^30^2^F
"IX",356.22,356.22,"AD",11.1,2,3)

"IX",356.22,356.22,"D",0)
356.22^D^Patient and Admission Date Range^R^^R^IR^I^356.22^^^^^LS
"IX",356.22,356.22,"D",.1,0)
^^1^1^3140620^
"IX",356.22,356.22,"D",.1,1,0)
Cross-reference index of Patient and Admission Date Range.
"IX",356.22,356.22,"D",1)
S ^IBT(356.22,"D",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",356.22,356.22,"D",2)
K ^IBT(356.22,"D",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",356.22,356.22,"D",2.5)
K ^IBT(356.22,"D")
"IX",356.22,356.22,"D",11.1,0)
^.114IA^2^2
"IX",356.22,356.22,"D",11.1,1,0)
1^F^356.22^.02^30^1^F^PATIENT NAME
"IX",356.22,356.22,"D",11.1,1,3)

"IX",356.22,356.22,"D",11.1,2,0)
2^F^356.22^.07^30^2^F^Appt/Adm
"IX",356.22,356.22,"D",11.1,2,3)

"IX",356.22,356.22,"E",0)
356.22^E^Used to prevent creation of multiple events for the same source^R^^R^IR^I^356.22^^^^^LS
"IX",356.22,356.22,"E",1)
S ^IBT(356.22,"E",$E(X(4),1,16),$E(X(1),1,1),$E(X(2),1,7),$E(X(3),1,16),DA)=""
"IX",356.22,356.22,"E",2)
K ^IBT(356.22,"E",$E(X(4),1,16),$E(X(1),1,1),$E(X(2),1,7),$E(X(3),1,16),DA)
"IX",356.22,356.22,"E",2.5)
K ^IBT(356.22,"E")
"IX",356.22,356.22,"E",11.1,0)
^.114IA^4^4
"IX",356.22,356.22,"E",11.1,1,0)
1^F^356.22^.04^1^2^F
"IX",356.22,356.22,"E",11.1,1,3)

"IX",356.22,356.22,"E",11.1,2,0)
2^F^356.22^.03^7^3^F
"IX",356.22,356.22,"E",11.1,2,3)

"IX",356.22,356.22,"E",11.1,3,0)
3^F^356.22^.16^16^4^F
"IX",356.22,356.22,"E",11.1,3,3)

"IX",356.22,356.22,"E",11.1,4,0)
4^F^356.22^.02^16^1^F
"IX",356.22,356.22,"E",11.1,4,3)

"IX",399,399,"AUPDID",0)
399^AUPDID^UPDATE PROVIDER ID WHEN DATA FIELDS CHANGE AT TOP LEVEL OF FILE^MU^^R^IR^I^399^^^^^A
"IX",399,399,"AUPDID",.1,0)
^^5^5^3010109^
"IX",399,399,"AUPDID",.1,1,0)
This cross reference maintains the integrity of the rendering or attending
"IX",399,399,"AUPDID",.1,2,0)
provider id whenever an insurance company is added, deleted or changed
"IX",399,399,"AUPDID",.1,3,0)
on the claim.  If either of these provider functions exist on the bill,
"IX",399,399,"AUPDID",.1,4,0)
this cross reference sets the default id data based on the insurance co's
"IX",399,399,"AUPDID",.1,5,0)
parameters.
"IX",399,399,"AUPDID",1)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) SETID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) SETID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) SETID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",1.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",2)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) DELID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) DELID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) DELID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",2.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",11.1,0)
^.114IA^6^6
"IX",399,399,"AUPDID",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AUPDID",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AUPDID",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AUPDID",11.1,4,0)
4^F^399^113^^^F
"IX",399,399,"AUPDID",11.1,5,0)
5^F^399^112^^^F
"IX",399,399,"AUPDID",11.1,5,3)
 
"IX",399,399,"AUPDID",11.1,6,0)
6^F^399^114^^^F
"IX",399,399,"AUPDID",11.1,6,3)
 
"KRN",.402,2704,-1)
0^1
"KRN",.402,2704,0)
IB CREATE 278 REQUEST^3141201.1107^^356.22^^^3141211
"KRN",.402,2704,"%D",0)
^.4021^1^1^3141129^^^^
"KRN",.402,2704,"%D",1,0)
Used to create/Edit a 278 request for a selected HCSR Worklist event
"KRN",.402,2704,"DIAB",1,0,356.22,3)
2.09;"Related Causes #2"
"KRN",.402,2704,"DIAB",1,0,356.22,6)
17.01;"Previous Review Authorization #"
"KRN",.402,2704,"DIAB",1,0,356.22,12)
4.05;"Period Count Qualifier"
"KRN",.402,2704,"DIAB",1,0,356.22,14)
4.11;"Ambulance Cert. Condition #2"
"KRN",.402,2704,"DIAB",1,0,356.22,17)
5.05;"Chiropractic Cert. Condition #4"
"KRN",.402,2704,"DIAB",1,0,356.22,19)
5.11;"DME Cert. Condition #4"
"KRN",.402,2704,"DIAB",1,0,356.22,21)
5.17;"Oxygen Cert. Condition #4"
"KRN",.402,2704,"DIAB",1,0,356.22,24)
6.07//Y;REQ;"Activities Cert. Condition Indicator"
"KRN",.402,2704,"DIAB",1,0,356.22,25)
6.1;"Activities Cert. Condition #3"
"KRN",.402,2704,"DIAB",1,0,356.22,26)
6.13//Y;REQ;"Mental Status Cert. Condition Indicator"
"KRN",.402,2704,"DIAB",1,0,356.22,27)
6.16;"Mental Status Cert. Condition #3"
"KRN",.402,2704,"DIAB",1,0,356.22,30)
18.02;"Patient Weight"
"KRN",.402,2704,"DIAB",1,0,356.22,32)
18.09;REQ;"Round Trip Purpose Description"
"KRN",.402,2704,"DIAB",1,0,356.22,33)
14///^S X="`"_+IBMLN;"Entity Identifier"
"KRN",.402,2704,"DIAB",1,0,356.22,35)
7.1//N;REQ;"Complication Indicator"
"KRN",.402,2704,"DIAB",1,0,356.22,36)
7.08;"Subluxation Level #2"
"KRN",.402,2704,"DIAB",1,0,356.22,37)
7.13//N;"X-Ray Availability Indicator"
"KRN",.402,2704,"DIAB",1,0,356.22,39)
8.01;REQ;"Oxygen Equipment Type #1"
"KRN",.402,2704,"DIAB",1,0,356.22,40)
8.04;"Equipment Reason Description"
"KRN",.402,2704,"DIAB",1,0,356.22,41)
9.03;"Oxygen Test Condition"
"KRN",.402,2704,"DIAB",1,0,356.22,46)
10.1;"Physician Contact Date"
"KRN",.402,2704,"DIAB",1,0,356.22,47)
11///^S X="`"_+IBMLN;"Report Type"
"KRN",.402,2704,"DIAB",1,1,356.2211,0)
.01;"Report Type"
"KRN",.402,2704,"DIAB",1,1,356.2213,0)
.01;"Provider Type"
"KRN",.402,2704,"DIAB",1,1,356.2214,0)
.01;"Entity Identifier"
"KRN",.402,2704,"DIAB",1,1,356.2215,0)
.01;"Entity Identifier"
"KRN",.402,2704,"DIAB",1,1,356.2215,1)
.06;"Other UMO Denial Reason #4"
"KRN",.402,2704,"DIAB",1,1,356.2216,3)
.05;"Place of Service"
"KRN",.402,2704,"DIAB",1,1,356.2216,4)
1.05;"Procedure Modifier #2"
"KRN",.402,2704,"DIAB",1,1,356.2216,5)
1.09;"Service Line Amount"
"KRN",.402,2704,"DIAB",1,1,356.2216,7)
2.09;"Nursing Home Level of Care"
"KRN",.402,2704,"DIAB",1,1,356.2216,10)
.05;"Place of Service"
"KRN",.402,2704,"DIAB",1,1,356.2216,14)
2.08;"Nursing Home Residential Status"
"KRN",.402,2704,"DIAB",1,1,356.2216,17)
.05;"Place of Service"
"KRN",.402,2704,"DIAB",1,1,356.2216,19)
1.08;"Procedure Description"
"KRN",.402,2704,"DIAB",1,1,356.2216,21)
3.02;"Oral Cavity Designation #2"
"KRN",.402,2704,"DIAB",1,1,356.2216,28)
6///^S X="`"_+IBMLN;"Report Type"
"KRN",.402,2704,"DIAB",1,1,356.223,0)
.01;"Patient Event Diagnosis Type"
"KRN",.402,2704,"DIAB",1,2,356.22164,0)
.01;"Tooth Code"
"KRN",.402,2704,"DIAB",1,2,356.22166,0)
.01;"Report Type"
"KRN",.402,2704,"DIAB",1,2,356.22168,0)
.01;"Entity Identifier"
"KRN",.402,2704,"DIAB",2,0,356.22,2)
2.05;REQ;"Patient Event Place of Service"
"KRN",.402,2704,"DIAB",2,0,356.22,4)
2.13;"Level of Service"
"KRN",.402,2704,"DIAB",2,0,356.22,6)
17.02;"Previous Review Administrative Reference #"
"KRN",.402,2704,"DIAB",2,0,356.22,7)
2.22//^S X=IBDISDT;"Discharge Date"
"KRN",.402,2704,"DIAB",2,0,356.22,8)
PATIENT DIAGNOSIS///^S X="`"_+IBMLN;"Patient Event Diagnosis Type"
"KRN",.402,2704,"DIAB",2,0,356.22,10)
4.01;"Service Unit Count Qualifier"
"KRN",.402,2704,"DIAB",2,0,356.22,11)
4.03;"Sample Selection Modulus Units"
"KRN",.402,2704,"DIAB",2,0,356.22,12)
4.06;"Period Count"
"KRN",.402,2704,"DIAB",2,0,356.22,15)
4.14;"Ambulance Cert. Condition #5"
"KRN",.402,2704,"DIAB",2,0,356.22,16)
5.03;"Chiropractic Cert. Condition #2"
"KRN",.402,2704,"DIAB",2,0,356.22,18)
5.09;"DME Cert. Condition #2"
"KRN",.402,2704,"DIAB",2,0,356.22,20)
5.15;"Oxygen Cert. Condition #2"
"KRN",.402,2704,"DIAB",2,0,356.22,22)
6.03;"Functional Limit Cert. Condition #2"
"KRN",.402,2704,"DIAB",2,0,356.22,23)
6.05;"Functional Limit Cert. Condition #4"
"KRN",.402,2704,"DIAB",2,0,356.22,24)
6.08;REQ;"Activities Cert. Condition #1"
"KRN",.402,2704,"DIAB",2,0,356.22,26)
6.14;REQ;"Mental Status Cert. Condition #1"
"KRN",.402,2704,"DIAB",2,0,356.22,31)
18.05;REQ;"Transport Distance Units"
"KRN",.402,2704,"DIAB",2,0,356.22,35)
7.05;"Treatment Series #"
"KRN",.402,2704,"DIAB",2,0,356.22,40)
8.05;REQ;"Oxygen Flow Rate"
"KRN",.402,2704,"DIAB",2,0,356.22,41)
9.04;"Oxygen Test Findings #1"
"KRN",.402,2704,"DIAB",2,0,356.22,46)
10.11;"Last Admission Start Date"
"KRN",.402,2704,"DIAB",2,1,356.2211,0)
.02;REQ;"Report Transmission"
"KRN",.402,2704,"DIAB",2,1,356.2213,0)
.02;REQ;"Person/Non-Person"
"KRN",.402,2704,"DIAB",2,1,356.2214,0)
.02;"Transport Location Name"
"KRN",.402,2704,"DIAB",2,1,356.2215,0)
.02;"Other UMO Name"
"KRN",.402,2704,"DIAB",2,1,356.2216,2)
.02;"Service Certification Type"
"KRN",.402,2704,"DIAB",2,1,356.2216,5)
1.1;"Unit or Basis for Measurement"
"KRN",.402,2704,"DIAB",2,1,356.2216,6)
2.04;"Diagnosis #4"
"KRN",.402,2704,"DIAB",2,1,356.2216,9)
.02;"Service Certification Type"
"KRN",.402,2704,"DIAB",2,1,356.2216,12)
1.02;REQ;"Procedure"
"KRN",.402,2704,"DIAB",2,1,356.2216,13)
1.07;"Procedure Modifier #4"
"KRN",.402,2704,"DIAB",2,1,356.2216,14)
2.09;"Nursing Home Level of Care"
"KRN",.402,2704,"DIAB",2,1,356.2216,16)
.02;"Service Certification Type"
"KRN",.402,2704,"DIAB",2,1,356.2216,18)
1.05;"Procedure Modifier #2"
"KRN",.402,2704,"DIAB",2,1,356.2216,19)
1.03;"Procedure"
"KRN",.402,2704,"DIAB",2,1,356.2216,22)
3.05;"Oral Cavity Designation #5"
"KRN",.402,2704,"DIAB",2,1,356.2216,23)
4///^S X="`"_+IBMLN;"Tooth Code"
"KRN",.402,2704,"DIAB",2,1,356.2216,25)
5.01;"Service Unit Count Qualifier"
"KRN",.402,2704,"DIAB",2,1,356.2216,26)
5.03;"Sample Selection Modulus Units"
"KRN",.402,2704,"DIAB",2,1,356.2216,27)
5.05;"Period Count Qualifier"
"KRN",.402,2704,"DIAB",2,1,356.223,0)
.02;REQ;"Patient Event Diagnosis"
"KRN",.402,2704,"DIAB",2,2,356.22164,0)
.02;REQ;"Tooth Surface #1"
"KRN",.402,2704,"DIAB",2,2,356.22164,1)
.06;"Tooth Surface #5"
"KRN",.402,2704,"DIAB",2,2,356.22166,0)
.02;REQ;"Report Transmission"
"KRN",.402,2704,"DIAB",2,2,356.22168,0)
.02;"Entity Type Qualifier"
"KRN",.402,2704,"DIAB",3,0,356.22,3)
2.1;"Related Causes #3"
"KRN",.402,2704,"DIAB",3,0,356.22,12)
4.07;"Delivery Frequency Code"
"KRN",.402,2704,"DIAB",3,0,356.22,14)
4.12;"Ambulance Cert. Condition #3"
"KRN",.402,2704,"DIAB",3,0,356.22,17)
5.06;"Chiropractic Cert. Condition #5"
"KRN",.402,2704,"DIAB",3,0,356.22,19)
5.12;"DME Cert. Condition #5"
"KRN",.402,2704,"DIAB",3,0,356.22,21)
5.18;"Oxygen Cert. Condition #5"
"KRN",.402,2704,"DIAB",3,0,356.22,25)
6.11;"Activities Cert. Condition #4"
"KRN",.402,2704,"DIAB",3,0,356.22,27)
6.17;"Mental Status Cert. Condition #4"
"KRN",.402,2704,"DIAB",3,0,356.22,32)
18.1;"Stretcher Purpose Description"
"KRN",.402,2704,"DIAB",3,0,356.22,35)
7.06;"Treatment Count"
"KRN",.402,2704,"DIAB",3,0,356.22,36)
7.11;"Patient Condition Description Line 1"
"KRN",.402,2704,"DIAB",3,0,356.22,39)
8.02;"Oxygen Equipment Type #2"
"KRN",.402,2704,"DIAB",3,0,356.22,40)
8.06;"Daily Oxygen Use Count"
"KRN",.402,2704,"DIAB",3,0,356.22,42)
9.07;"Portable Oxygen System Flow Rate"
"KRN",.402,2704,"DIAB",3,0,356.22,45)
10.05;"Surgery Date"
"KRN",.402,2704,"DIAB",3,1,356.2213,0)
.03;REQ;"Provider"
"KRN",.402,2704,"DIAB",3,1,356.2214,0)
.03;REQ;"Transport Location Address Line 1"
"KRN",.402,2704,"DIAB",3,1,356.2214,1)
.07;"Transport Location Postal Zone or Zip Code"
"KRN",.402,2704,"DIAB",3,1,356.2215,0)
.03;REQ;"Other UMO Denial Reason #1"
"KRN",.402,2704,"DIAB",3,1,356.2215,1)
.07;REQ;"Other UMO Denial Date"
"KRN",.402,2704,"DIAB",3,1,356.2216,0)
.01;"Service Line #"
"KRN",.402,2704,"DIAB",3,1,356.2216,2)
.03;"Service Type"
"KRN",.402,2704,"DIAB",3,1,356.2216,4)
1.06;"Procedure Modifier #3"
"KRN",.402,2704,"DIAB",3,1,356.2216,5)
1.11;"Service Unit Count"
"KRN",.402,2704,"DIAB",3,1,356.2216,9)
.03;"Service Type"
"KRN",.402,2704,"DIAB",3,1,356.2216,12)
1.04;"Procedure Modifier #1"
"KRN",.402,2704,"DIAB",3,1,356.2216,16)
.03;"Service Type"
"KRN",.402,2704,"DIAB",3,1,356.2216,19)
1.09;"Service Line Amount"
"KRN",.402,2704,"DIAB",3,1,356.2216,27)
5.06;"Period Count"
"KRN",.402,2704,"DIAB",3,1,356.223,0)
.03;"Patient Event Diagnosis Date"
"KRN",.402,2704,"DIAB",3,2,356.22166,0)
.03;"Attachment Control #"
"KRN",.402,2704,"DIAB",3,2,356.22168,0)
.03;"Service Provider Name"
"KRN",.402,2704,"DIAB",4,0,356.22,7)
7.01;"Admission Type"
"KRN",.402,2704,"DIAB",4,0,356.22,12)
4.08;"Delivery Pattern Time Code"
"KRN",.402,2704,"DIAB",4,0,356.22,16)
5.04;"Chiropractic Cert. Condition #3"
"KRN",.402,2704,"DIAB",4,0,356.22,18)
5.1;"DME Cert. Condition #3"
"KRN",.402,2704,"DIAB",4,0,356.22,20)
5.16;"Oxygen Cert. Condition #3"
"KRN",.402,2704,"DIAB",4,0,356.22,22)
6.04;"Functional Limit Cert. Condition #3"
"KRN",.402,2704,"DIAB",4,0,356.22,23)
6.06;"Functional Limit Cert. Condition #5"
"KRN",.402,2704,"DIAB",4,0,356.22,24)
6.09;"Activities Cert. Condition #2"
"KRN",.402,2704,"DIAB",4,0,356.22,26)
6.15;"Mental Status Cert. Condition #2"
"KRN",.402,2704,"DIAB",4,0,356.22,30)
18.03;REQ;"Ambulance Transport"
"KRN",.402,2704,"DIAB",4,0,356.22,31)
18.06;"Transport Distance"
"KRN",.402,2704,"DIAB",4,0,356.22,35)
7.07;"Subluxation Level #1"
"KRN",.402,2704,"DIAB",4,0,356.22,40)
8.07;"Oxygen User Period Hour Count"
"KRN",.402,2704,"DIAB",4,0,356.22,41)
9.05;"Oxygen Test Findings #2"
"KRN",.402,2704,"DIAB",4,0,356.22,44)
2.15;REQ;"Prognosis"
"KRN",.402,2704,"DIAB",4,0,356.22,45)
10.06;"Product or Service ID Qualifier"
"KRN",.402,2704,"DIAB",4,0,356.22,46)
10.12;REQ;"Last Admistion End Date"
"KRN",.402,2704,"DIAB",4,0,356.22,48)
13///^S X="`"_+IBMLN;"Provider Type"
"KRN",.402,2704,"DIAB",4,1,356.2211,0)
.03;"Attachment Control #"
"KRN",.402,2704,"DIAB",4,1,356.2214,0)
.04;"Transport Location Address Line 2"
"KRN",.402,2704,"DIAB",4,1,356.2215,0)
.04;"Other UMO Denial Reason #2"
"KRN",.402,2704,"DIAB",4,1,356.2216,3)
.11;"Proposed or Actual Service Date"
"KRN",.402,2704,"DIAB",4,1,356.2216,5)
2.01;"Diagnosis #1"
"KRN",.402,2704,"DIAB",4,1,356.2216,7)
.01;"Service Line #"
"KRN",.402,2704,"DIAB",4,1,356.2216,10)
.11;"Proposed or Actual Service Date"
"KRN",.402,2704,"DIAB",4,1,356.2216,13)
1.08;"Procedure Description"
"KRN",.402,2704,"DIAB",4,1,356.2216,17)
.11;"Proposed or Actual Service Date"
"KRN",.402,2704,"DIAB",4,1,356.2216,18)
1.06;"Procedure Modifier #3"
"KRN",.402,2704,"DIAB",4,1,356.2216,21)
3.03;"Oral Cavity Designation #3"
"KRN",.402,2704,"DIAB",4,1,356.2216,27)
5.07;"Delivery Frequency Code"
"KRN",.402,2704,"DIAB",4,2,356.22164,0)
.03;"Tooth Surface #2"
"KRN",.402,2704,"DIAB",4,2,356.22166,0)
.04;"Attachment Description"
"KRN",.402,2704,"DIAB",5,0,356.22,2)
2.06;REQ;"Patient Event Location of Care"
"KRN",.402,2704,"DIAB",5,0,356.22,4)
2.13;REQ;"Level of Service"
"KRN",.402,2704,"DIAB",5,0,356.22,7)
7.02;"Admission Source"
"KRN",.402,2704,"DIAB",5,0,356.22,10)
4.01;REQ;"Service Unit Count Qualifier"
"KRN",.402,2704,"DIAB",5,0,356.22,11)
4.03;REQ;"Sample Selection Modulus Units"
"KRN",.402,2704,"DIAB",5,0,356.22,14)
4.13;"Ambulance Cert. Condition #4"
"KRN",.402,2704,"DIAB",5,0,356.22,15)
5.01//Y;REQ;"Chiropractic Cert. Condition Indicator"
"KRN",.402,2704,"DIAB",5,0,356.22,25)
6.12;"Activities Cert. Condition #5"
"KRN",.402,2704,"DIAB",5,0,356.22,27)
6.18;"Mental Status Cert. Condition #5"
"KRN",.402,2704,"DIAB",5,0,356.22,29)
18.01;"Patient Weight Units"
"KRN",.402,2704,"DIAB",5,0,356.22,34)
7.09;REQ;"Patient Condition"
"KRN",.402,2704,"DIAB",5,0,356.22,36)
7.12;"Patient Condition Description Line 2"
"KRN",.402,2704,"DIAB",5,0,356.22,40)
8.08;"Respiratory Therapist Order Text"
"KRN",.402,2704,"DIAB",5,0,356.22,44)
10.01;REQ;"Home Health Start Date"
"KRN",.402,2704,"DIAB",5,0,356.22,47)
12;"Message Text"
"KRN",.402,2704,"DIAB",5,1,356.2214,0)
.05;"Transport Location City"
"KRN",.402,2704,"DIAB",5,1,356.2216,0)
1.12///S X="P"
"KRN",.402,2704,"DIAB",5,1,356.2216,4)
1.07;"Procedure Modifier #4"
"KRN",.402,2704,"DIAB",5,1,356.2216,11)
1.01;REQ;"Product or Service ID Qualifier"
"KRN",.402,2704,"DIAB",5,1,356.2216,12)
1.05;"Procedure Modifier #2"
"KRN",.402,2704,"DIAB",5,1,356.2216,13)
1.03;"Procedure"
"KRN",.402,2704,"DIAB",5,1,356.2216,14)
.01;"Service Line #"
"KRN",.402,2704,"DIAB",5,1,356.2216,20)
3.01;REQ;"Oral Cavity Designation #1"
"KRN",.402,2704,"DIAB",5,1,356.2216,22)
3.06;"Prosthesis, Crown or Inlay Status"
"KRN",.402,2704,"DIAB",5,1,356.2216,25)
5.01;REQ;"Service Unit Count Qualifier"
"KRN",.402,2704,"DIAB",5,1,356.2216,26)
5.03;REQ;"Sample Selection Modulus Units"
"KRN",.402,2704,"DIAB",5,1,356.2216,27)
5.08;"Delivery Pattern Time Code"
"KRN",.402,2704,"DIAB",5,1,356.2216,28)
7;"Message Text"
"KRN",.402,2704,"DIAB",6,0,356.22,1)
2.02;REQ;"Patient Certification Type"
"KRN",.402,2704,"DIAB",6,0,356.22,2)
2.07;REQ;"Patient Event Bill Classification"
"KRN",.402,2704,"DIAB",6,0,356.22,3)
2.11;"State or Province"
"KRN",.402,2704,"DIAB",6,0,356.22,7)
7.03;"Patient Status"
"KRN",.402,2704,"DIAB",6,0,356.22,12)
2.18;"Accident Date"
"KRN",.402,2704,"DIAB",6,0,356.22,15)
5.02;REQ;"Chiropractic Cert. Condition #1"
"KRN",.402,2704,"DIAB",6,0,356.22,17)
5.07//Y;REQ;"DME Cert. Condtion"
"KRN",.402,2704,"DIAB",6,0,356.22,19)
5.13//Y;REQ;"Oxygen Cert. Condition Indicator"
"KRN",.402,2704,"DIAB",6,0,356.22,21)
6.01//Y;REQ;"Functional Limit Cert. Condition Indicator"
"KRN",.402,2704,"DIAB",6,0,356.22,30)
18.04;"Ambulance Transport Reason"
"KRN",.402,2704,"DIAB",6,0,356.22,39)
8.03;"Oxygen Equipment Type #3"
"KRN",.402,2704,"DIAB",6,0,356.22,40)
9.01;"Arterial Blood Gas Quantity"
"KRN",.402,2704,"DIAB",6,0,356.22,41)
9.06;"Oxygen Test Findings #3"
"KRN",.402,2704,"DIAB",6,0,356.22,42)
9.07;REQ;"Portable Oxygen System Flow Rate"
"KRN",.402,2704,"DIAB",6,0,356.22,44)
10.02;"Home Health Cert. Start Date"
"KRN",.402,2704,"DIAB",6,0,356.22,45)
10.07;"Surgical Procedure"
"KRN",.402,2704,"DIAB",6,0,356.22,46)
10.13;"Patient Location"
"KRN",.402,2704,"DIAB",6,1,356.2214,0)
.06;"Transport Location State or Province"
"KRN",.402,2704,"DIAB",6,1,356.2214,1)
.07;REQ;"Transport Location Postal Zone or Zip Code"
"KRN",.402,2704,"DIAB",6,1,356.2215,0)
.05;"Other UMO Denial Reason #3"
"KRN",.402,2704,"DIAB",6,1,356.2216,3)
1.01;REQ;"Product or Service ID Qualifier"
"KRN",.402,2704,"DIAB",6,1,356.2216,5)
2.02;"Diagnosis #2"
"KRN",.402,2704,"DIAB",6,1,356.2216,6)
2.05//N;"EPSDT Indicator"
"KRN",.402,2704,"DIAB",6,1,356.2216,7)
1.12///S X="I"
"KRN",.402,2704,"DIAB",6,1,356.2216,10)
2.06;"Service Line Revenue"
"KRN",.402,2704,"DIAB",6,1,356.2216,18)
1.07;"Procedure Modifier #4"
"KRN",.402,2704,"DIAB",6,1,356.2216,21)
3.04;"Oral Cavity Designation #4"
"KRN",.402,2704,"DIAB",6,1,356.2216,22)
1.11;"Service Unit Count"
"KRN",.402,2704,"DIAB",6,2,356.22164,0)
.04;"Tooth Surface #3"
"KRN",.402,2704,"DIAB",7,0,356.22,4)
2.14;"Current Health Condition"
"KRN",.402,2704,"DIAB",7,0,356.22,7)
7.04;"Nursing Home Residential Status"
"KRN",.402,2704,"DIAB",7,0,356.22,10)
4.02;"Service Unit Count"
"KRN",.402,2704,"DIAB",7,0,356.22,11)
4.04;"Sample Selection Modulus Frequency"
"KRN",.402,2704,"DIAB",7,0,356.22,12)
2.19;"Last Menstrual Date"
"KRN",.402,2704,"DIAB",7,0,356.22,13)
4.09//Y;REQ;"Ambulance Cert. Condition Indicator"
"KRN",.402,2704,"DIAB",7,0,356.22,17)
5.08;REQ;"DME Cert. Condition #1"
"KRN",.402,2704,"DIAB",7,0,356.22,19)
5.14;REQ;"Oxygen Cert. Condition #1"
"KRN",.402,2704,"DIAB",7,0,356.22,21)
6.02;REQ;"Functional Limit Cert. Condition #1"
"KRN",.402,2704,"DIAB",7,0,356.22,40)
9.02;"Oxygen Saturation Quantity"
"KRN",.402,2704,"DIAB",7,0,356.22,45)
10.08;"Physician Order Date"
"KRN",.402,2704,"DIAB",7,0,356.22,47)
.11//^S X=$P($G(^VA(200,DUZ,0)),"^",1);"Requester Contact Name"
"KRN",.402,2704,"DIAB",7,0,356.22,49)
16///S X="`"_IBMLN;"Service Line Number"
"KRN",.402,2704,"DIAB",7,1,356.2211,0)
.03;REQ;"Attachment Control #"
"KRN",.402,2704,"DIAB",7,1,356.2216,2)
.06;"Service Location of Care"
"KRN",.402,2704,"DIAB",7,1,356.2216,4)
1.08;"Procedure Description"
"KRN",.402,2704,"DIAB",7,1,356.2216,9)
.06;"Service Location of Care"
"KRN",.402,2704,"DIAB",7,1,356.2216,12)
1.06;"Procedure Modifier #3"
"KRN",.402,2704,"DIAB",7,1,356.2216,14)
1.12///S X="D"
"KRN",.402,2704,"DIAB",7,1,356.2216,16)
.06;"Service Location of Care"
"KRN",.402,2704,"DIAB",7,1,356.2216,22)
3.07;"Description"
"KRN",.402,2704,"DIAB",7,1,356.2216,25)
5.02;"Service Unit Count"
"KRN",.402,2704,"DIAB",7,1,356.2216,26)
5.04;"Sample Selection Modulus"
"KRN",.402,2704,"DIAB",8,0,356.22,0)
2.01;REQ;"Patient Event Request Category"
"KRN",.402,2704,"DIAB",8,0,356.22,2)
2.08;"Related Causes #1"
"KRN",.402,2704,"DIAB",8,0,356.22,4)
2.15;"Prognosis"
"KRN",.402,2704,"DIAB",8,0,356.22,12)
2.2;"Estimated Date of Birth"
"KRN",.402,2704,"DIAB",8,0,356.22,13)
4.1;REQ;"Ambulance Cert. Condition #1"
"KRN",.402,2704,"DIAB",8,0,356.22,29)
18.01;REQ;"Patient Weight Units"
"KRN",.402,2704,"DIAB",8,0,356.22,30)
18.05;"Transport Distance Units"
"KRN",.402,2704,"DIAB",8,0,356.22,42)
9.08;REQ;"Oxygen Delivery System"
"KRN",.402,2704,"DIAB",8,0,356.22,44)
10.03;REQ;"Home Health Cert. End Date"
"KRN",.402,2704,"DIAB",8,0,356.22,45)
10.09;"Last Visit Date"
"KRN",.402,2704,"DIAB",8,1,356.2216,2)
.07;REQ;"Service Bill Classification"
"KRN",.402,2704,"DIAB",8,1,356.2216,3)
1.02;REQ;"Procedure"
"KRN",.402,2704,"DIAB",8,1,356.2216,4)
1.03;"Procedure"
"KRN",.402,2704,"DIAB",8,1,356.2216,5)
2.03;"Diagnosis #3"
"KRN",.402,2704,"DIAB",8,1,356.2216,9)
.07;REQ;"Service Bill Classification"
"KRN",.402,2704,"DIAB",8,1,356.2216,13)
1.09;"Service Line Amount"
"KRN",.402,2704,"DIAB",8,1,356.2216,16)
.07;REQ;"Service Bill Classification"
"KRN",.402,2704,"DIAB",8,2,356.22164,0)
.05;"Tooth Surface #4"
"KRN",.402,2704,"DIAB",9,0,356.22,1)
2.03;"Patient Event Service Type"
"KRN",.402,2704,"DIAB",9,0,356.22,3)
2.12;"Country"
"KRN",.402,2704,"DIAB",9,0,356.22,4)
2.16//Y;"Release of Info"
"KRN",.402,2704,"DIAB",9,0,356.22,12)
2.21;"Onset of Current Symptoms or Illness Date"
"KRN",.402,2704,"DIAB",9,0,356.22,31)
18.09;"Round Trip Purpose Description"
"KRN",.402,2704,"DIAB",9,1,356.2211,0)
.04;"Attachment Description"
"KRN",.402,2704,"DIAB",9,1,356.2216,3)
1.04;"Procedure Modifier #1"
"KRN",.402,2704,"DIAB",9,1,356.2216,13)
1.1;"Unit or Basis For Measurement"
"KRN",.402,2704,"DIAB",9,1,356.2216,17)
1.02;REQ;"Procedure"
"KRN",.402,2704,"DIAB",10,0,356.22,4)
2.17;"Delay Reason"
"KRN",.402,2704,"DIAB",10,0,356.22,48)
15///^S X="`"_+IBMLN;"Entity Identifier"
"KRN",.402,2704,"DIAB",10,1,356.2216,13)
1.11;"Service Unit Count"
"KRN",.402,2704,"DIAB",10,1,356.2216,17)
1.04;"Procedure Modifier #1"
"KRN",.402,2704,"DIAB",10,1,356.2216,28)
8///^S X="`"_+IBMLN;"Entity Identifier"
"KRN",.402,2704,"DR",1,356.22)
W !,?30,"PATIENT EVENT DETAIL";I IBPSTAT="O" S Y="@90001";2.01///^S X="AR";S IBREQCAT=1;W !,"Patient Event Request Category: AR";S Y="@90002";@90001;2.01Patient Event Request Category~R~;S IBREQCAT=X;@90002;S IBCERTCD=5;
"KRN",.402,2704,"DR",1,356.22,1)
I IBRESP=1 S Y="@101";2.02///^S X="I";W !,"Patient Certification Type: I";S Y="@102";@101;2.02Patient Certification Type~R~;S IBCERTCD=X;@102;2.03Patient Event Service Type~;2.04///^S X=$S(IBPSTAT="I":"A",1:"B");
"KRN",.402,2704,"DR",1,356.22,2)
I IBPSTAT="I" S Y="@1";2.05Patient Event Place of Service~R~;S Y="@2";@1;2.06Patient Event Location of Care~R~;2.07Patient Event Bill Classification~R~;@2;2.08Related Causes #1~;I X="",'$$RCAUSEP^IBTRH5A(2.08) S Y="@3";
"KRN",.402,2704,"DR",1,356.22,3)
2.09Related Causes #2~;I '$$RCAUSEP^IBTRH5A(2.09) S Y="@3";2.1Related Causes #3~;@3;I '$$RCAUSEP^IBTRH5A("ALL") S Y="@30001";2.11State or Province~;S XX=X;I +$$GET1^DIQ(5,XX_",",2.2,"I") S Y="@30001";2.12Country~;@30001;
"KRN",.402,2704,"DR",1,356.22,4)
I IBCERTCD=1 S Y="@4";2.13Level of Service~;S Y="@5";@4;2.13Level of Service~R~;@5;2.14Current Health Condition~;2.15Prognosis~;2.16Release of Info~//Y;2.17Delay Reason~;I (IBCERTCD=5)!(IBCERTCD=8) S Y="@6";W !;
"KRN",.402,2704,"DR",1,356.22,5)
I 'IBRESP S Y="@111222";W !,"Previous Review Authorization #: ",$$GET1^DIQ(356.22,IBTRIEN_",",17.01);W !,"Previous Review Administrative Reference #: ",$$GET1^DIQ(356.22,IBTRIEN_",",17.02);S Y="@6";@111222;
"KRN",.402,2704,"DR",1,356.22,6)
17.01Previous Review Authorization #~;17.02Previous Review Administrative Reference #~;@6;S Y=$S((IBREQCAT=2)!(IBREQCAT=3)!(IBREQCAT=4):"@7",IBREQCAT=1:"@8",1:"@9");@7;W !!,"Proposed or Actual Event Date: ",IBEVDT;S Y="@9";@8;
"KRN",.402,2704,"DR",1,356.22,7)
W !!,"Admission Date: ",IBEVDT;2.22Discharge Date~//^S X=IBDISDT;W !;7.01Admission Type~;7.02Admission Source~;7.03Patient Status~;7.04Nursing Home Residential Status~;@9;S IBMLN=$$SELDX^IBTRH5D(IBTRIEN);S:IBMLN=-2 Y=0;
"KRN",.402,2704,"DR",1,356.22,8)
S:IBMLN=-1 Y="@11";3Patient Event Diagnosis Type~///^S X="`"_+IBMLN;S Y="@9";@11;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","HCSD","Health Care Services Delivery",1);W !;@1100001;K DUOUT;
"KRN",.402,2704,"DR",1,356.22,9)
N Y S DIR(0)="Y",DIR("A")="Health Care Services Delivery",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@1100001";S Y=$S($D(DUOUT):0,XX=0:"@90",1:"@12");@12;
"KRN",.402,2704,"DR",1,356.22,10)
I $$GET1^DIQ(356.22,DA_",",4.02,"I")'="" S Y="@1201";4.01Service Unit Count Qualifier~;S XX=X,Y="@1202";@1201;4.01Service Unit Count Qualifier~R~;@1202;4.02Service Unit Count~;I X'="",XX="" S Y="@1201";@1203;
"KRN",.402,2704,"DR",1,356.22,11)
I $$GET1^DIQ(356.22,DA_",",4.03,"I")'="" S Y="@1204";4.03Sample Selection Modulus Units~;S XX=X,Y="@1205";@1204;4.03Sample Selection Modulus Units~R~;@1205;4.04Sample Selection Modulus Frequency~;I X'="",XX="" S Y="@1204";
"KRN",.402,2704,"DR",1,356.22,12)
4.05Period Count Qualifier~;4.06Period Count~;4.07Delivery Frequency Code~;4.08Delivery Pattern Time Code~;W !;2.18Accident Date~;2.19Last Menstrual Date~;2.2Estimated Date of Birth~;2.21Onset of Current Symptoms or Illness Date~;
"KRN",.402,2704,"DR",1,356.22,13)
@90;D CERTDATA^IBTRH5G(IBTRIEN);@91;W !;S Y=$$CERTCAT^IBTRH5A(IBPSTAT);@92;4.09Ambulance Cert. Condition Indicator~R~//Y;4.1Ambulance Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.1) S Y="@91";
"KRN",.402,2704,"DR",1,356.22,14)
4.11Ambulance Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.11) S Y="@91";4.12Ambulance Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.12) S Y="@91";4.13Ambulance Cert. Condition #4~;
"KRN",.402,2704,"DR",1,356.22,15)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.13) S Y="@91";4.14Ambulance Cert. Condition #5~;S Y="@91";@93;5.01Chiropractic Cert. Condition Indicator~R~//Y;5.02Chiropractic Cert. Condition #1~R~;
"KRN",.402,2704,"DR",1,356.22,16)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.02) S Y="@91";5.03Chiropractic Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.03) S Y="@91";5.04Chiropractic Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.04) S Y="@91";
"KRN",.402,2704,"DR",1,356.22,17)
5.05Chiropractic Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.05) S Y="@91";5.06Chiropractic Cert. Condition #5~;S Y="@91";@94;5.07DME Cert. Condtion~R~//Y;5.08DME Cert. Condition #1~R~;
"KRN",.402,2704,"DR",1,356.22,18)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.08) S Y="@91";5.09DME Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.09) S Y="@91";5.1DME Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.1) S Y="@91";
"KRN",.402,2704,"DR",1,356.22,19)
5.11DME Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.11) S Y="@91";5.12DME Cert. Condition #5~;S Y="@91";@95;5.13Oxygen Cert. Condition Indicator~R~//Y;5.14Oxygen Cert. Condition #1~R~;
"KRN",.402,2704,"DR",1,356.22,20)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.14) S Y="@91";5.15Oxygen Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.15) S Y="@91";5.16Oxygen Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.16) S Y="@91";
"KRN",.402,2704,"DR",1,356.22,21)
5.17Oxygen Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.17) S Y="@91";5.18Oxygen Cert. Condition #5~;S Y="@91";@96;6.01Functional Limit Cert. Condition Indicator~R~//Y;6.02Functional Limit Cert. Condition #1~R~;
"KRN",.402,2704,"DR",1,356.22,22)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.02) S Y="@91";6.03Functional Limit Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.03) S Y="@91";6.04Functional Limit Cert. Condition #3~;
"KRN",.402,2704,"DR",1,356.22,23)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.04) S Y="@91";6.05Functional Limit Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.05) S Y="@91";6.06Functional Limit Cert. Condition #5~;S Y="@91";@97;
"KRN",.402,2704,"DR",1,356.22,24)
6.07Activities Cert. Condition Indicator~R~//Y;6.08Activities Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.08) S Y="@91";6.09Activities Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.09) S Y="@91";
"KRN",.402,2704,"DR",1,356.22,25)
6.1Activities Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.1) S Y="@91";6.11Activities Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.11) S Y="@91";6.12Activities Cert. Condition #5~;S Y="@91";@98;
"KRN",.402,2704,"DR",1,356.22,26)
6.13Mental Status Cert. Condition Indicator~R~//Y;6.14Mental Status Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.14) S Y="@91";6.15Mental Status Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.15) S Y="@91";
"KRN",.402,2704,"DR",1,356.22,27)
6.16Mental Status Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.16) S Y="@91";6.17Mental Status Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.17) S Y="@91";6.18Mental Status Cert. Condition #5~;S Y="@91";@13;
"KRN",.402,2704,"DR",1,356.22,28)
S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","AMBTI","Ambulance Transport Information",1);W !;@1300001;K DUOUT;N Y S DIR(0)="Y",DIR("A")="Ambulance Transport Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;
"KRN",.402,2704,"DR",1,356.22,29)
I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@1300001";S Y=$S($D(DUOUT):0,XX=0:"@15",1:"@14");@14;I $$GET1^DIQ(356.22,DA_",",18.02,"I")'="" S Y="@1401";18.01Patient Weight Units~;S XX=X,Y="@1402";@1401;18.01Patient Weight Units~R~;@1402;
"KRN",.402,2704,"DR",1,356.22,30)
18.02Patient Weight~;I X'="",XX="" S Y="@1401";@1403;18.03Ambulance Transport~R~;S IBAMBTR=X;18.04Ambulance Transport Reason~;I $$GET1^DIQ(356.22,DA_",",18.06,"I")'="" S Y="@1405";18.05Transport Distance Units~;S XX=X,Y="@1406";
"KRN",.402,2704,"DR",1,356.22,31)
@1405;18.05Transport Distance Units~R~;@1406;18.06Transport Distance~;I X'="",XX="" S Y="@1405";@1504;S Y=$S($G(IBAMBTR)="X":"@1506",1:"@1505");@1505;18.09Round Trip Purpose Description~;S Y="@1507";@1506;
"KRN",.402,2704,"DR",1,356.22,32)
18.09Round Trip Purpose Description~R~;@1507;18.1Stretcher Purpose Description~;@15;S Y=$S('$$AMBTI^IBTRH5C(IBTRIEN):"@26",1:"@25");@25;S IBMLN=$$SELPT^IBTRH5F(IBTRIEN);S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@26";
"KRN",.402,2704,"DR",1,356.22,33)
14Entity Identifier~///^S X="`"_+IBMLN;S Y="@25";@26;I IBREQCAT=1 S Y="@21";S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","SPMSI","Spinal Manipulation Service Information",1);W !;@2600001;K DUOUT;
"KRN",.402,2704,"DR",1,356.22,34)
N Y S DIR(0)="Y",DIR("A")="Spinal Manipulation Service Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@2600001";S Y=$S($D(DUOUT):0,XX=0:"@17",1:"@16");@16;7.09Patient Condition~R~;Q;
"KRN",.402,2704,"DR",1,356.22,35)
7.1Complication Indicator~R~//^N DIERR S X(1)=$S($D(^IBT(356.22,D0,7)):^(7),1:"") S X=$$EXTERNAL^DIDU(356.22,7.04,"",$P(X(1),U,4));7.05Treatment Series #~;7.06Treatment Count~;7.07Subluxation Level #1~;I X="" S Y="@1601";
"KRN",.402,2704,"DR",1,356.22,36)
7.08Subluxation Level #2~;@1601;7.11Patient Condition Description Line 1~;I X=""!($L(X)<80) S Y="@1602";7.12Patient Condition Description Line 2~;@1602;Q;
"KRN",.402,2704,"DR",1,356.22,37)
7.13X-Ray Availability Indicator~//^N DIERR S X(1)=$S($D(^IBT(356.22,D0,7)):^(7),1:"") S X=$$EXTERNAL^DIDU(356.22,7.04,"",$P(X(1),U,4));@17;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","HOTI","Home Oxygen Therapy Information",1);W !;
"KRN",.402,2704,"DR",1,356.22,38)
@1700001;K DUOUT;N Y S DIR(0)="Y",DIR("A")="Home Oxygen Therapy Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@1700001";S Y=$S($D(DUOUT):0,XX=0:"@19",1:"@18");@18;
"KRN",.402,2704,"DR",1,356.22,39)
8.01Oxygen Equipment Type #1~R~;S IBOXYET=$$OXYET^IBTRH5C(IBTRIEN);8.02Oxygen Equipment Type #2~;S IBOXYET=$$OXYET^IBTRH5C(IBTRIEN);I X="" S Y="@1801";8.03Oxygen Equipment Type #3~;S IBOXYET=$$OXYET^IBTRH5C(IBTRIEN);@1801;
"KRN",.402,2704,"DR",1,356.22,40)
8.04Equipment Reason Description~;8.05Oxygen Flow Rate~R~;8.06Daily Oxygen Use Count~;8.07Oxygen User Period Hour Count~;8.08Respiratory Therapist Order Text~;9.01Arterial Blood Gas Quantity~;9.02Oxygen Saturation Quantity~;
"KRN",.402,2704,"DR",1,356.22,41)
9.03Oxygen Test Condition~;9.04Oxygen Test Findings #1~;I X="",'$$OXYTFNDP^IBTRH5B(IBTRIEN,9.04) S Y="@1802";9.05Oxygen Test Findings #2~;I X="",'$$OXYTFNDP^IBTRH5B(IBTRIEN,9.05) S Y="@1802";9.06Oxygen Test Findings #3~;@1802;
"KRN",.402,2704,"DR",1,356.22,42)
S Y=$S($G(IBOXYET)'=1:"@1803",1:"@1804");@1803;9.07Portable Oxygen System Flow Rate~;S Y="@1805";@1804;9.07Portable Oxygen System Flow Rate~R~;@1805;9.08Oxygen Delivery System~R~;@19;
"KRN",.402,2704,"DR",1,356.22,43)
S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","HHCI","Home Health Care Information",1);W !;@1900001;K DUOUT;N Y S DIR(0)="Y",DIR("A")="Home Health Care Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;
"KRN",.402,2704,"DR",1,356.22,44)
I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@1900001";S Y=$S($D(DUOUT):0,XX=0:"@21",1:"@20");@20;2.15Prognosis~R~;10.01Home Health Start Date~R~;10.02Home Health Cert. Start Date~;I X="" S Y="@2001";10.03Home Health Cert. End Date~R~;
"KRN",.402,2704,"DR",1,356.22,45)
@2001;W !,"Certification Type: ",$P(^IBT(356.002,IBCERTCD,0),"^",1);10.05Surgery Date~;10.06Product or Service ID Qualifier~;S IBSTYTP=X;10.07Surgical Procedure~;10.08Physician Order Date~;10.09Last Visit Date~;
"KRN",.402,2704,"DR",1,356.22,46)
10.1Physician Contact Date~;10.11Last Admission Start Date~;I X="" S Y="@2002";10.12Last Admistion End Date~R~;@2002;10.13Patient Location~;@21;S IBMLN=$$SELAPI^IBTRH5D(IBTRIEN);S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@23";
"KRN",.402,2704,"DR",1,356.22,47)
11Report Type~///^S X="`"_+IBMLN;S Y="@21";@23;W !;12Message Text~;W !;.11Requester Contact Name~//^S X=$P($G(^VA(200,DUZ,0)),"^",1);W !!,"Patient Event Provider Data";S XX=$$ONEPD^IBTRH5H(IBTRIEN);@24;
"KRN",.402,2704,"DR",1,356.22,48)
S IBMLN=$$SELPD^IBTRH5D(IBTRIEN);S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@241010";13Provider Type~///^S X="`"_+IBMLN;S Y="@24";@241010;S IBMLN=$$SELOU^IBTRH5E(IBTRIEN);S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@28";15Entity Identifier~///^S X="`"_+IBMLN;
"KRN",.402,2704,"DR",1,356.22,49)
S Y="@241010";@28;S IBMLN=$$SELSL^IBTRH5E(IBTRIEN);S:IBMLN=-2 Y=0;S:IBMLN=-1 Y=0;Q;16Service Line Number~///^S X="`"_IBMLN;S Y="@28";
"KRN",.402,2704,"DR",2,356.2211)
.01Report Type~;.02Report Transmission~R~;I (X="BM")!(X="EL")!(X="EM")!(X="FX") S Y="@2201";.03Attachment Control #~;S Y="@2202";@2201;.03Attachment Control #~R~;@2202;.04Attachment Description~;
"KRN",.402,2704,"DR",2,356.2213)
.01Provider Type~;.02Person/Non-Person~R~;.03Provider~R~;
"KRN",.402,2704,"DR",2,356.2214)
.01Entity Identifier~;.02Transport Location Name~;.03Transport Location Address Line 1~R~;.04Transport Location Address Line 2~;.05Transport Location City~;.06Transport Location State or Province~;
"KRN",.402,2704,"DR",2,356.2214,1)
S XX=$G(^IBT(356.22,DA(1),14,DA,0));I $P(XX,"^",5)=""!($P(XX,"^",6)="") S Y="@2502";.07Transport Location Postal Zone or Zip Code~;S Y="@2503";@2502;.07Transport Location Postal Zone or Zip Code~R~;@2503;
"KRN",.402,2704,"DR",2,356.2215)
.01Entity Identifier~;.02Other UMO Name~;.03Other UMO Denial Reason #1~R~;.04Other UMO Denial Reason #2~;I X="",'$$OUDREASP^IBTRH5B(.04) S Y="@2701";.05Other UMO Denial Reason #3~;I X="",'$$OUDREASP^IBTRH5B(.05) S Y="@2701";
"KRN",.402,2704,"DR",2,356.2215,1)
.06Other UMO Denial Reason #4~;@2701;.07Other UMO Denial Date~R~;
"KRN",.402,2704,"DR",2,356.2216)
S Y=$$PITSL^IBTRH5B(IBREQCAT);@30;.01Service Line #~;Q;1.12///^S X="P";S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"SHCRSI","  Service HCRS Information",1);@3000001;K DUOUT;
"KRN",.402,2704,"DR",2,356.2216,1)
N Y S DIR(0)="Y",DIR("A")="  Service HCRS Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@3000001";S Y=$S($D(DUOUT):0,XX=0:"@3015",1:"@3001");@3001;S XX=$S(IBREQCAT=1:2,IBREQCAT=4:4,1:2);
"KRN",.402,2704,"DR",2,356.2216,2)
.15////^S X=XX;.02Service Certification Type~;.03Service Type~;.04///^S X=$S(IBPSTAT="I":"A",1:"B");S Y=$S(IBPSTAT="I":"@3003",1:"@3004");@3003;.06Service Location of Care~;.07Service Bill Classification~R~;S Y="@3015";@3004;
"KRN",.402,2704,"DR",2,356.2216,3)
.05Place of Service~;@3015;W !;.11Proposed or Actual Service Date~;@3002;1.01Product or Service ID Qualifier~R~;S IBSSTYP=X;1.02Procedure~R~;1.04Procedure Modifier #1~;I X="",'$$PROCMODP^IBTRH5B(1.04) S Y="@3014";
"KRN",.402,2704,"DR",2,356.2216,4)
1.05Procedure Modifier #2~;I X="",'$$PROCMODP^IBTRH5B(1.05) S Y="@3014";1.06Procedure Modifier #3~;I X="",'$$PROCMODP^IBTRH5B(1.06) S Y="@3014";1.07Procedure Modifier #4~;@3014;1.08Procedure Description~;1.03Procedure~;
"KRN",.402,2704,"DR",2,356.2216,5)
1.09Service Line Amount~;1.1Unit or Basis for Measurement~;1.11Service Unit Count~;2.01Diagnosis #1~;I X="",'$$SLDXP^IBTRH5B(2.01) S Y="@3005";2.02Diagnosis #2~;I X="",'$$SLDXP^IBTRH5B(2.02) S Y="@3005";2.03Diagnosis #3~;
"KRN",.402,2704,"DR",2,356.2216,6)
I X="",'$$SLDXP^IBTRH5B(2.03) S Y="@3005";2.04Diagnosis #4~;K IBSSTYP;@3005;Q;2.05EPSDT Indicator~//^N DIERR S X(1)=$S($D(^IBT(356.22,D0,7)):^(7),1:"") S X=$$EXTERNAL^DIDU(356.22,7.04,"",$P(X(1),U,4));
"KRN",.402,2704,"DR",2,356.2216,7)
2.09Nursing Home Level of Care~;S Y="@399";@31;.01Service Line #~;Q;1.12///^S X="I";S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"SHCRSI","  Service HCRS Information",1);@3100001;K DUOUT;
"KRN",.402,2704,"DR",2,356.2216,8)
N Y S DIR(0)="Y",DIR("A")="  Service HCRS Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@3100001";S Y=$S($D(DUOUT):0,XX=0:"@3115",1:"@3101");@3101;S XX=$S(IBREQCAT=1:2,IBREQCAT=4:4,1:2);
"KRN",.402,2704,"DR",2,356.2216,9)
.15////^S X=XX;.02Service Certification Type~;.03Service Type~;.04///^S X=$S(IBPSTAT="I":"A",1:"B");S Y=$S(IBPSTAT="I":"@3103",1:"@3104");@3103;.06Service Location of Care~;.07Service Bill Classification~R~;S Y="@3115";@3104;
"KRN",.402,2704,"DR",2,356.2216,10)
.05Place of Service~;@3115;W !;.11Proposed or Actual Service Date~;@3104;2.06Service Line Revenue~;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"CMPI","  Composite Medical Procedure",1);@310401;K DUOUT;
"KRN",.402,2704,"DR",2,356.2216,11)
N Y S DIR(0)="Y",DIR("A")="  Composite Medical Procedure",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@310401";S Y=$S($D(DUOUT):0,XX=0:"@3106",1:"@3105");@3105;1.01Product or Service ID Qualifier~R~;
"KRN",.402,2704,"DR",2,356.2216,12)
S IBSSTYP=X;1.02Procedure~R~;1.04Procedure Modifier #1~;I X="",'$$PROCMODP^IBTRH5B(1.04) S Y="@3107";1.05Procedure Modifier #2~;I X="",'$$PROCMODP^IBTRH5B(1.05) S Y="@3107";1.06Procedure Modifier #3~;
"KRN",.402,2704,"DR",2,356.2216,13)
I X="",'$$PROCMODP^IBTRH5B(1.06) S Y="@3107";1.07Procedure Modifier #4~;@3107;1.08Procedure Description~;1.03Procedure~;@3106;W !;1.09Service Line Amount~;1.1Unit or Basis For Measurement~;1.11Service Unit Count~;
"KRN",.402,2704,"DR",2,356.2216,14)
2.08Nursing Home Residential Status~;2.09Nursing Home Level of Care~;S Y="@399";@32;.01Service Line #~;Q;1.12///^S X="D";S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"SHCRSI","  Service HCRS Information",1);@3200001;K DUOUT;
"KRN",.402,2704,"DR",2,356.2216,15)
N Y S DIR(0)="Y",DIR("A")="  Service HCRS Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@3200001";S Y=$S($D(DUOUT):0,XX=0:"@3215",1:"@3201");@3201;S XX=$S(IBREQCAT=1:2,IBREQCAT=4:4,1:2);
"KRN",.402,2704,"DR",2,356.2216,16)
.15////^S X=XX;.02Service Certification Type~;.03Service Type~;.04///^S X=$S(IBPSTAT="I":"A",1:"B");S Y=$S(IBPSTAT="I":"@3203",1:"@3204");@3203;.06Service Location of Care~;.07Service Bill Classification~R~;S Y="@3215";@3204;
"KRN",.402,2704,"DR",2,356.2216,17)
.05Place of Service~;@3215;W !;.11Proposed or Actual Service Date~;@3204;1.01///^S X="AD";W !,"  Product or Service ID Qualifier: AD";S IBSSTYP=X;1.02Procedure~R~;1.04Procedure Modifier #1~;
"KRN",.402,2704,"DR",2,356.2216,18)
I X="",'$$PROCMODP^IBTRH5B(1.04) S Y="@3205";1.05Procedure Modifier #2~;I X="",'$$PROCMODP^IBTRH5B(1.05) S Y="@3205";1.06Procedure Modifier #3~;I X="",'$$PROCMODP^IBTRH5B(1.06) S Y="@3205";1.07Procedure Modifier #4~;@3205;
"KRN",.402,2704,"DR",2,356.2216,19)
1.08Procedure Description~;1.03Procedure~;1.09Service Line Amount~;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"OCDI","  Oral Cavity Designation",1);@320501;K DUOUT;
"KRN",.402,2704,"DR",2,356.2216,20)
N Y S DIR(0)="Y",DIR("A")="  Oral Cavity Designation",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@320501";S Y=$S($D(DUOUT):0,XX=0:"@3208",1:"@3206");@3206;3.01Oral Cavity Designation #1~R~;
"KRN",.402,2704,"DR",2,356.2216,21)
3.02Oral Cavity Designation #2~;S IBSSTYP=X;I X="",'$$ORALCAVP^IBTRH5B(3.02) S Y="@3208";3.03Oral Cavity Designation #3~;I X="",'$$ORALCAVP^IBTRH5B(3.03) S Y="@3208";3.04Oral Cavity Designation #4~;
"KRN",.402,2704,"DR",2,356.2216,22)
I X="",'$$ORALCAVP^IBTRH5B(3.04) S Y="@3208";3.05Oral Cavity Designation #5~;@3208;W !;3.06Prosthesis, Crown or Inlay Status~;1.11Service Unit Count~;3.07Description~;@3209;S IBMLN=$$SELSTI^IBTRH5F(IBTRIEN,DA);S:IBMLN=-2 Y=0;
"KRN",.402,2704,"DR",2,356.2216,23)
S:IBMLN=-1 Y="@399";4Tooth Code~///^S X="`"_+IBMLN;S Y="@3209";@399;W !;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"SHCSD","  Service Health Care Services Delivery",1);@399001;K DUOUT;
"KRN",.402,2704,"DR",2,356.2216,24)
N Y S DIR(0)="Y",DIR("A")="  Service Health Care Services Delivery",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@399001";S Y=$S($D(DUOUT):0,XX=0:"@401",1:"@400");@400;
"KRN",.402,2704,"DR",2,356.2216,25)
I $$GET1^DIQ(356.22,DA_","_DA(1)_",",5.02,"I")'="" S Y="@400001";5.01Service Unit Count Qualifier~;S XX=X,Y="@400002";@400001;5.01Service Unit Count Qualifier~R~;@400002;5.02Service Unit Count~;I X'="",XX="" S Y="@400001";
"KRN",.402,2704,"DR",2,356.2216,26)
I $$GET1^DIQ(356.22,DA_","_DA(1)_",",5.04,"I")'="" S Y="@400003";5.03Sample Selection Modulus Units~;S XX=X,Y="@400004";@400003;5.03Sample Selection Modulus Units~R~;@400004;5.04Sample Selection Modulus~;
"KRN",.402,2704,"DR",2,356.2216,27)
I X'="",XX="" S Y="@400003";5.05Period Count Qualifier~;5.06Period Count~;5.07Delivery Frequency Code~;5.08Delivery Pattern Time Code~;@401;W !;S IBMLN=$$SELSAPI^IBTRH5F(IBTRIEN,DA);S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@403";
"KRN",.402,2704,"DR",2,356.2216,28)
6Report Type~///^S X="`"_+IBMLN;S Y="@401";@403;W !;7Message Text~;@405;S IBMLN=$$SELSPD^IBTRH5E(IBTRIEN,DA);S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@99999";8Entity Identifier~///^S X="`"_+IBMLN;S Y="@405";@99999;
"KRN",.402,2704,"DR",2,356.223)
.01Patient Event Diagnosis Type~;.02Patient Event Diagnosis~R~;.03Patient Event Diagnosis Date~;
"KRN",.402,2704,"DR",3,356.22164)
.01Tooth Code~;.02Tooth Surface #1~R~;I X="",'$$TOOTHSP^IBTRH5C(.02) S Y="@325";.03Tooth Surface #2~;I X="",'$$TOOTHSP^IBTRH5C(.03) S Y="@325";.04Tooth Surface #3~;I X="",'$$TOOTHSP^IBTRH5C(.04) S Y="@325";.05Tooth Surface #4~;
"KRN",.402,2704,"DR",3,356.22164,1)
I X="",'$$TOOTHSP^IBTRH5C(.05) S Y="@325";.06Tooth Surface #5~;@325;
"KRN",.402,2704,"DR",3,356.22166)
.01Report Type~;.02Report Transmission~R~;.03Attachment Control #~;.04Attachment Description~;
"KRN",.402,2704,"DR",3,356.22168)
.01Entity Identifier~;.02Entity Type Qualifier~;.03Service Provider Name~;
"KRN",.402,2707,-1)
0^3
"KRN",.402,2707,0)
IB ADD/EDIT 278^3160302.1249^^356.22^^^3160331
"KRN",.402,2707,"DIAB",1,0,356.22,3)
2.13;"Level of Service"
"KRN",.402,2707,"DIAB",1,0,356.22,5)
7.02;"Admission Source"
"KRN",.402,2707,"DIAB",1,0,356.22,6)
2.06;REQ;"Patient Event Location of Care"
"KRN",.402,2707,"DIAB",1,0,356.22,10)
17.01;"Previous Review Authorization Number"
"KRN",.402,2707,"DIAB",1,0,356.22,13)
2.08;REQ;"Related Causes #1"
"KRN",.402,2707,"DIAB",1,0,356.22,17)
2.14;"Current Health Condition"
"KRN",.402,2707,"DIAB",1,0,356.22,20)
19.01//TE;"Requester Contact Qualifier #1"
"KRN",.402,2707,"DIAB",1,0,356.22,30)
4.01;REQ;"Service Quantity Qualifier"
"KRN",.402,2707,"DIAB",1,0,356.22,33)
4.06;"Period Count"
"KRN",.402,2707,"DIAB",1,0,356.22,35)
4.11;"Ambulance Cert. Condition #2"
"KRN",.402,2707,"DIAB",1,0,356.22,41)
18.1;"Stretcher Purpose Description"
"KRN",.402,2707,"DIAB",1,0,356.22,42)
14///^S X="`"_+IBMLN;"Ambulance Location Qualifier"
"KRN",.402,2707,"DIAB",1,0,356.22,44)
5.05;"Chiropractic Cert. Condition #4"
"KRN",.402,2707,"DIAB",1,0,356.22,47)
7.05;"Treatment Series Number"
"KRN",.402,2707,"DIAB",1,0,356.22,51)
5.11;"DME Cert. Condition #4"
"KRN",.402,2707,"DIAB",1,0,356.22,52)
5.13;REQ;"Oxygen Cert. Condition Indicator"
"KRN",.402,2707,"DIAB",1,0,356.22,53)
5.16;"Oxygen Cert. Condition #3"
"KRN",.402,2707,"DIAB",1,0,356.22,56)
8.01;REQ;"Oxygen Equipment Type #1"
"KRN",.402,2707,"DIAB",1,0,356.22,57)
8.04;"Equipment Reason Description"
"KRN",.402,2707,"DIAB",1,0,356.22,58)
9.03;"Oxygen Test Condition"
"KRN",.402,2707,"DIAB",1,0,356.22,61)
6.03;"Functional Limits Cert. Condition #2"
"KRN",.402,2707,"DIAB",1,0,356.22,63)
6.07;REQ;"Activities Cert. Condition Indicator"
"KRN",.402,2707,"DIAB",1,0,356.22,64)
6.1;"Activities Cert. Condition #3"
"KRN",.402,2707,"DIAB",1,0,356.22,66)
6.15;"Mental Status Cert. Condition #2"
"KRN",.402,2707,"DIAB",1,0,356.22,70)
10.01;REQ;"Home Health Start Date"
"KRN",.402,2707,"DIAB",1,0,356.22,72)
10.12;REQ;"End Date of Last Admission"
"KRN",.402,2707,"DIAB",1,1,356.2215,1)
.05;"Other UMO Denial Reason #3"
"KRN",.402,2707,"DIAB",1,1,356.2216,8)
2.01;"Diagnosis Pointer #1"
"KRN",.402,2707,"DIAB",1,1,356.2216,10)
1.12///S X="I"
"KRN",.402,2707,"DIAB",1,1,356.2216,13)
1.08;"Procedure Description"
"KRN",.402,2707,"DIAB",1,1,356.2216,16)
1.05;"Procedure Modifier #2"
"KRN",.402,2707,"DIAB",1,1,356.2216,19)
3.02;"Oral Cavity Designation #2"
"KRN",.402,2707,"DIAB",1,1,356.2216,26)
5.03;"Sample Selection Units of Measurement"
"KRN",.402,2707,"DIAB",1,1,356.2216,29)
6///^S X="`"_+IBMLN;"Report Type"
"KRN",.402,2707,"DIAB",2,0,356.22,6)
2.07;REQ;"Patient Event Bill Classification"
"KRN",.402,2707,"DIAB",2,0,356.22,10)
17.02;"Previous Admin. Reference Number"
"KRN",.402,2707,"DIAB",2,0,356.22,17)
2.15;"Prognosis"
"KRN",.402,2707,"DIAB",2,0,356.22,21)
20;"Requester Contact Number 1"
"KRN",.402,2707,"DIAB",2,0,356.22,24)
22;"Requester Contact Number 3"
"KRN",.402,2707,"DIAB",2,0,356.22,31)
4.03;"Sample Selection Units of Measurement"
"KRN",.402,2707,"DIAB",2,0,356.22,36)
4.14;"Ambulance Cert. Condition #5"
"KRN",.402,2707,"DIAB",2,0,356.22,43)
5.03;"Chiropractic Cert. Condition #2"
"KRN",.402,2707,"DIAB",2,0,356.22,47)
7.06;"Treatment Count"
"KRN",.402,2707,"DIAB",2,0,356.22,50)
5.09;"DME Cert. Condition #2"
"KRN",.402,2707,"DIAB",2,0,356.22,52)
5.14;REQ;"Oxygen Cert. Condition #1"
"KRN",.402,2707,"DIAB",2,0,356.22,57)
8.05;REQ;"Oxygen Flow Rate"
"KRN",.402,2707,"DIAB",2,0,356.22,58)
9.04;"Oxygen Test Findings #1"
"KRN",.402,2707,"DIAB",2,0,356.22,62)
6.06;"Functional Limits Cert. Condition #5"
"KRN",.402,2707,"DIAB",2,0,356.22,63)
6.08;REQ;"Activities Cert. Condition #1"
"KRN",.402,2707,"DIAB",2,0,356.22,67)
6.18;"Mental Status Cert. Condition #5"
"KRN",.402,2707,"DIAB",2,0,356.22,70)
10.02;"Home Health Cert. Start Date"
"KRN",.402,2707,"DIAB",2,0,356.22,71)
10.06;"Procedure Coding Method"
"KRN",.402,2707,"DIAB",2,1,356.2211,0)
.01;"Report Type"
"KRN",.402,2707,"DIAB",2,1,356.2213,0)
.01;"Provider Type"
"KRN",.402,2707,"DIAB",2,1,356.2214,0)
.01;"Ambulance Location Qualifier"
"KRN",.402,2707,"DIAB",2,1,356.2215,0)
.01;"Other UMO Qualifier"
"KRN",.402,2707,"DIAB",2,1,356.2216,6)
1.06;"Procedure Modifier #3"
"KRN",.402,2707,"DIAB",2,1,356.2216,10)
2.06;"Revenue Code (Institutional)"
"KRN",.402,2707,"DIAB",2,1,356.2216,12)
1.05;"Procedure Modifier #2"
"KRN",.402,2707,"DIAB",2,1,356.2216,13)
1.09;"Service Line Amount "
"KRN",.402,2707,"DIAB",2,1,356.2216,20)
3.05;"Oral Cavity Designation #5"
"KRN",.402,2707,"DIAB",2,1,356.2216,24)
5.01;"Service Quantity Qualifier"
"KRN",.402,2707,"DIAB",2,1,356.2216,27)
5.05;"Time Period Qualifier"
"KRN",.402,2707,"DIAB",2,1,356.223,0)
.01;"Diagnosis Qualifier"
"KRN",.402,2707,"DIAB",2,2,356.22164,0)
.01;"Tooth Code"
"KRN",.402,2707,"DIAB",2,2,356.22164,1)
.05;"Tooth Surface #4"
"KRN",.402,2707,"DIAB",2,2,356.22166,0)
.01;"Report Type"
"KRN",.402,2707,"DIAB",2,2,356.22168,0)
.01;"Provider Type"
"KRN",.402,2707,"DIAB",3,0,356.22,5)
7.03;"Patient Status"
"KRN",.402,2707,"DIAB",3,0,356.22,16)
2.19;"Date of LMP"
"KRN",.402,2707,"DIAB",3,0,356.22,17)
2.17;"Delay Reason"
"KRN",.402,2707,"DIAB",3,0,356.22,25)
11///^S X="`"_+IBMLN;"Report Type"
"KRN",.402,2707,"DIAB",3,0,356.22,35)
4.12;"Ambulance Cert. Condition #3"
"KRN",.402,2707,"DIAB",3,0,356.22,44)
5.06;"Chiropractic Cert. Condition #5"
"KRN",.402,2707,"DIAB",3,0,356.22,47)
7.07;"Subluxation Level #1"
"KRN",.402,2707,"DIAB",3,0,356.22,51)
5.12;"DME Cert. Condition #5"
"KRN",.402,2707,"DIAB",3,0,356.22,53)
5.17;"Oxygen Cert. Condition #4"
"KRN",.402,2707,"DIAB",3,0,356.22,56)
8.02;"Oxygen Equipment Type #2"
"KRN",.402,2707,"DIAB",3,0,356.22,57)
8.06;"Daily Oxygen Use Count"
"KRN",.402,2707,"DIAB",3,0,356.22,59)
9.07;"Portable Oxygen System Flow Rate"
"KRN",.402,2707,"DIAB",3,0,356.22,61)
6.04;"Functional Limits Cert. Condition #3"
"KRN",.402,2707,"DIAB",3,0,356.22,64)
6.11;"Activities Cert. Condition #4"
"KRN",.402,2707,"DIAB",3,0,356.22,66)
6.16;"Mental Status Cert. Condition #3"
"KRN",.402,2707,"DIAB",3,1,356.2215,1)
.06;"Other UMO Denial Reason #4"
"KRN",.402,2707,"DIAB",3,1,356.2216,8)
2.02;"Diagnosis Pointer #2"
"KRN",.402,2707,"DIAB",3,1,356.2216,10)
2.07;"Service Line Rate (Inpt)"
"KRN",.402,2707,"DIAB",3,1,356.2216,15)
1.12///S X="D"
"KRN",.402,2707,"DIAB",3,1,356.2216,16)
1.06;"Procedure Modifier #3"
"KRN",.402,2707,"DIAB",3,1,356.2216,21)
4///^S X="`"_+IBMLN;"Tooth Code"
"KRN",.402,2707,"DIAB",3,1,356.2216,28)
5.07;"Delivery Frequency Code"
"KRN",.402,2707,"DIAB",4,0,356.22,2)
2.02;REQ;"Certification Type Code"
"KRN",.402,2707,"DIAB",4,0,356.22,3)
2.13;REQ;"Level of Service"
"KRN",.402,2707,"DIAB",4,0,356.22,14)
2.11;"Auto Accident State"
"KRN",.402,2707,"DIAB",4,0,356.22,15)
2.18;"Accident Date"
"KRN",.402,2707,"DIAB",4,0,356.22,16)
2.2;"Estimated Date Of Birth"
"KRN",.402,2707,"DIAB",4,0,356.22,18)
.11;"Requester Contact Name"
"KRN",.402,2707,"DIAB",4,0,356.22,20)
19.01;"Requester Contact Qualifier #1"
"KRN",.402,2707,"DIAB",4,0,356.22,22)
19.02;REQ;"Requester Contact Qualifier #2"
"KRN",.402,2707,"DIAB",4,0,356.22,23)
19.03;"Requester Contact Qualifier #3"
"KRN",.402,2707,"DIAB",4,0,356.22,33)
4.07;"Delivery Frequency Code"
"KRN",.402,2707,"DIAB",4,0,356.22,40)
18.04;"Transport Reason Code"
"KRN",.402,2707,"DIAB",4,0,356.22,43)
5.04;"Chiropractic Cert. Condition #3"
"KRN",.402,2707,"DIAB",4,0,356.22,48)
7.1;REQ;"Complication Indicator"
"KRN",.402,2707,"DIAB",4,0,356.22,49)
7.13;"X-Ray Availability Indicator"
"KRN",.402,2707,"DIAB",4,0,356.22,50)
5.1;"DME Cert. Condition #3"
"KRN",.402,2707,"DIAB",4,0,356.22,52)
5.15;"Oxygen Cert. Condition #2"
"KRN",.402,2707,"DIAB",4,0,356.22,57)
8.07;"Oxygen User Period Hour Count"
"KRN",.402,2707,"DIAB",4,0,356.22,58)
9.05;"Oxygen Test Findings #2"
"KRN",.402,2707,"DIAB",4,0,356.22,63)
6.09;"Activities Cert. Condition #2"
"KRN",.402,2707,"DIAB",4,0,356.22,70)
10.03;REQ;"Home Health Cert. End Date"
"KRN",.402,2707,"DIAB",4,0,356.22,71)
10.07;"Surgical Procedure"
"KRN",.402,2707,"DIAB",4,1,356.2211,0)
.02;REQ;"Delivery Method"
"KRN",.402,2707,"DIAB",4,1,356.2213,0)
.03;REQ;"Provider"
"KRN",.402,2707,"DIAB",4,1,356.2214,0)
.02;"Ambulance Location"
"KRN",.402,2707,"DIAB",4,1,356.2215,0)
.02;"Other UMO Name (Denials)"
"KRN",.402,2707,"DIAB",4,1,356.2216,2)
.15;"Request Category"
"KRN",.402,2707,"DIAB",4,1,356.2216,6)
1.07;"Procedure Modifier #4"
"KRN",.402,2707,"DIAB",4,1,356.2216,11)
1.02;REQ;"Procedure Code"
"KRN",.402,2707,"DIAB",4,1,356.2216,12)
1.06;"Procedure Modifier #3"
"KRN",.402,2707,"DIAB",4,1,356.2216,19)
3.03;"Oral Cavity Designation #3"
"KRN",.402,2707,"DIAB",4,1,356.2216,26)
5.03;REQ;"Sample Selection Units of Measurement"
"KRN",.402,2707,"DIAB",4,1,356.2216,28)
5.08;"Delivery Pattern Time"
"KRN",.402,2707,"DIAB",4,1,356.223,0)
.02;REQ;"Event Diagnosis"
"KRN",.402,2707,"DIAB",4,2,356.22164,0)
.02;REQ;"Tooth Surface #1"
"KRN",.402,2707,"DIAB",4,2,356.22164,1)
.06;"Tooth Surface #5"
"KRN",.402,2707,"DIAB",4,2,356.22166,0)
.02;REQ;"Delivery Method"
"KRN",.402,2707,"DIAB",4,2,356.22168,0)
.03;REQ;"Service Provider"
"KRN",.402,2707,"DIAB",5,0,356.22,13)
2.09;"Related Causes #2"
"KRN",.402,2707,"DIAB",5,0,356.22,16)
2.21;"Onset of Current Symptoms/Illness Date"
"KRN",.402,2707,"DIAB",5,0,356.22,30)
4.02;"Service Unit Count"
"KRN",.402,2707,"DIAB",5,0,356.22,31)
4.03;REQ;"Sample Selection Units of Measurement"
"KRN",.402,2707,"DIAB",5,0,356.22,32)
4.05;"Time Period Qualifier"
"KRN",.402,2707,"DIAB",5,0,356.22,33)
4.08;"Delivery Pattern Time"
"KRN",.402,2707,"DIAB",5,0,356.22,34)
4.09;REQ;"Ambulance Cert. Condition Indicator"
"KRN",.402,2707,"DIAB",5,0,356.22,35)
4.13;"Ambulance Cert. Condition #4"
"KRN",.402,2707,"DIAB",5,0,356.22,38)
18.02;"Patient Weight"
"KRN",.402,2707,"DIAB",5,0,356.22,40)
18.06;"Transport Distance"
"KRN",.402,2707,"DIAB",5,0,356.22,48)
7.11;"Patient Condition Description Line 1"
"KRN",.402,2707,"DIAB",5,0,356.22,53)
5.18;"Oxygen Cert. Condition #5"
"KRN",.402,2707,"DIAB",5,0,356.22,57)
8.08;"Respiratory Therapist Order Text"
"KRN",.402,2707,"DIAB",5,0,356.22,60)
6.01;REQ;"Functional Limit Cert. Condition Indicator"
"KRN",.402,2707,"DIAB",5,0,356.22,61)
6.05;"Functional Limits Cert. Condition #4"
"KRN",.402,2707,"DIAB",5,0,356.22,64)
6.12;"Activities Cert. Condition #5"
"KRN",.402,2707,"DIAB",5,0,356.22,65)
6.13;REQ;"Mental Status Cert. Condition Indicator"
"KRN",.402,2707,"DIAB",5,0,356.22,66)
6.17;"Mental Status Cert. Condition #4"
"KRN",.402,2707,"DIAB",5,0,356.22,71)
10.08;"Physician Verbal Order Date"
"KRN",.402,2707,"DIAB",5,1,356.2214,0)
.03;REQ;"Address Line 1"
"KRN",.402,2707,"DIAB",5,1,356.2215,0)
.07;REQ;"Other UMO Denial Date"
"KRN",.402,2707,"DIAB",5,1,356.2216,0)
1.12///S X="P"
"KRN",.402,2707,"DIAB",5,1,356.2216,2)
.02;"Service Certification Type"
"KRN",.402,2707,"DIAB",5,1,356.2216,3)
.06;"Service Location"
"KRN",.402,2707,"DIAB",5,1,356.2216,4)
1.01;REQ;"Procedure Coding Method"
"KRN",.402,2707,"DIAB",5,1,356.2216,5)
12.01;REQ;"Procedure Code"
"KRN",.402,2707,"DIAB",5,1,356.2216,7)
1.1;"Unit or Basis for Measurement"
"KRN",.402,2707,"DIAB",5,1,356.2216,8)
2.03;"Diagnosis Pointer #3"
"KRN",.402,2707,"DIAB",5,1,356.2216,11)
1.03;"Ending Procedure Code"
"KRN",.402,2707,"DIAB",5,1,356.2216,14)
2.08;"Nursing Home Residential Status"
"KRN",.402,2707,"DIAB",5,1,356.2216,16)
1.07;"Procedure Modifier #4"
"KRN",.402,2707,"DIAB",5,1,356.2216,18)
3.01;REQ;"Oral Cavity Designation #1"
"KRN",.402,2707,"DIAB",5,1,356.2216,20)
3.06;"Prosthesis, Crown or Inlay Code"
"KRN",.402,2707,"DIAB",5,1,356.2216,24)
5.01;REQ;"Service Quantity Qualifier"
"KRN",.402,2707,"DIAB",5,1,356.2216,29)
7;"Message Text"
"KRN",.402,2707,"DIAB",5,1,356.223,0)
.03;"Date Diagnosis Known"
"KRN",.402,2707,"DIAB",6,0,356.22,24)
12;"Additional Request Comments"
"KRN",.402,2707,"DIAB",6,0,356.22,34)
4.1;REQ;"Ambulance Cert. Condition #1"
"KRN",.402,2707,"DIAB",6,0,356.22,47)
7.08;"Subluxation Level #2"
"KRN",.402,2707,"DIAB",6,0,356.22,56)
8.03;"Oxygen Equipment Type #3"
"KRN",.402,2707,"DIAB",6,0,356.22,57)
9.01;"Arterial Blood Gas Quantity"
"KRN",.402,2707,"DIAB",6,0,356.22,58)
9.06;"Oxygen Test Findings #3"
"KRN",.402,2707,"DIAB",6,0,356.22,59)
9.07;REQ;"Portable Oxygen System Flow Rate"
"KRN",.402,2707,"DIAB",6,0,356.22,60)
6.02;REQ;"Functional Limits Cert. Condition #1"
"KRN",.402,2707,"DIAB",6,0,356.22,65)
6.14;REQ;"Mental Status Cert. Condition #1"
"KRN",.402,2707,"DIAB",6,0,356.22,70)
10.05;"Surgery Date"
"KRN",.402,2707,"DIAB",6,0,356.22,71)
10.09;"Last Visit Date"
"KRN",.402,2707,"DIAB",6,1,356.2211,0)
.03;"Attachment Control #"
"KRN",.402,2707,"DIAB",6,1,356.2214,0)
.04;"Address Line 2"
"KRN",.402,2707,"DIAB",6,1,356.2215,0)
.03;REQ;"Other UMO Denial Reason #1"
"KRN",.402,2707,"DIAB",6,1,356.2216,2)
.03;"Service Type"
"KRN",.402,2707,"DIAB",6,1,356.2216,5)
12.02;"Ending Procedure Code"
"KRN",.402,2707,"DIAB",6,1,356.2216,6)
1.08;"Procedure Description"
"KRN",.402,2707,"DIAB",6,1,356.2216,12)
1.07;"Procedure Modifier #4"
"KRN",.402,2707,"DIAB",6,1,356.2216,14)
2.09;"Nursing Home Level of Care"
"KRN",.402,2707,"DIAB",6,1,356.2216,19)
3.04;"Oral Cavity Designation #4"
"KRN",.402,2707,"DIAB",6,1,356.2216,20)
1.11;"Number of Procedures"
"KRN",.402,2707,"DIAB",6,1,356.2216,27)
5.05;REQ;"Time Period Qualifier"
"KRN",.402,2707,"DIAB",6,2,356.22164,0)
.03;"Tooth Surface #2"
"KRN",.402,2707,"DIAB",6,2,356.22166,0)
.03;"Attachment Control #"
"KRN",.402,2707,"DIAB",7,0,356.22,1)
2.01;REQ;"Request Category"
"KRN",.402,2707,"DIAB",7,0,356.22,4)
7.01;"Admission Type"
"KRN",.402,2707,"DIAB",7,0,356.22,14)
2.12;"Auto Accident Country"
"KRN",.402,2707,"DIAB",7,0,356.22,21)
19.02;"Requester Contact Qualifier #2"
"KRN",.402,2707,"DIAB",7,0,356.22,29)
4.01;"Service Quantity Qualifier"
"KRN",.402,2707,"DIAB",7,0,356.22,48)
7.12;"Patient Condition Description Line 2"
"KRN",.402,2707,"DIAB",7,0,356.22,57)
9.02;"Oxygen Saturation Quantity"
"KRN",.402,2707,"DIAB",7,0,356.22,71)
10.1;"Physician/Home Health Contact Date"
"KRN",.402,2707,"DIAB",7,0,356.22,72)
10.13;"Last Admission Facility Type"
"KRN",.402,2707,"DIAB",7,0,356.22,73)
16///S X="`"_IBMLN;"Service Line Number"
"KRN",.402,2707,"DIAB",7,1,356.2214,0)
.07;"Zip Code"
"KRN",.402,2707,"DIAB",7,1,356.2216,3)
.11;"Proposed or Actual Service Date"
"KRN",.402,2707,"DIAB",7,1,356.2216,6)
1.09;"Service Line Amount"
"KRN",.402,2707,"DIAB",7,1,356.2216,7)
1.11//1;"Service Unit Count"
"KRN",.402,2707,"DIAB",7,1,356.2216,8)
2.04;"Diagnosis Pointer #4"
"KRN",.402,2707,"DIAB",7,1,356.2216,9)
2.05;"ESPDT Indicator"
"KRN",.402,2707,"DIAB",7,1,356.2216,15)
1.02;REQ;"Procedure Code"
"KRN",.402,2707,"DIAB",7,1,356.2216,16)
1.08;"Procedure Description"
"KRN",.402,2707,"DIAB",7,1,356.2216,20)
3.07;"Description"
"KRN",.402,2707,"DIAB",7,1,356.2216,26)
5.04;"Sample Selection Modulus"
"KRN",.402,2707,"DIAB",8,0,356.22,7)
7.04;"Nursing Home Residential Status"
"KRN",.402,2707,"DIAB",8,0,356.22,23)
19.03;REQ;"Requester Contact Qualifier #3"
"KRN",.402,2707,"DIAB",8,0,356.22,42)
5.01;REQ;"Chiropractic Cert. Condition Indicator"
"KRN",.402,2707,"DIAB",8,0,356.22,59)
9.08;REQ;"Oxygen Delivery System"
"KRN",.402,2707,"DIAB",8,0,356.22,71)
10.11;"Start Date of Last Admission"
"KRN",.402,2707,"DIAB",8,1,356.2215,0)
.04;"Other UMO Denial Reason #2"
"KRN",.402,2707,"DIAB",8,1,356.2216,5)
1.04;"Procedure Modifier #1"
"KRN",.402,2707,"DIAB",8,1,356.2216,9)
2.09;"Nursing Home Level of Care"
"KRN",.402,2707,"DIAB",8,1,356.2216,15)
1.03;"Ending Procedure Code"
"KRN",.402,2707,"DIAB",8,1,356.2216,16)
1.09;"Service Line Amount"
"KRN",.402,2707,"DIAB",8,2,356.22164,0)
.04;"Tooth Surface #3"
"KRN",.402,2707,"DIAB",9,0,356.22,5)
2.03;"Service Type"
"KRN",.402,2707,"DIAB",9,0,356.22,6)
2.05;"Service Location"
"KRN",.402,2707,"DIAB",9,0,356.22,13)
2.1;"Related Causes #3"
"KRN",.402,2707,"DIAB",9,0,356.22,20)
19.01;REQ;"Requester Contact Qualifier #1"
"KRN",.402,2707,"DIAB",9,0,356.22,22)
21;"Requester Contact Number 2"
"KRN",.402,2707,"DIAB",9,0,356.22,31)
4.04;"Sample Selection Modulus"
"KRN",.402,2707,"DIAB",9,0,356.22,32)
4.05;REQ;"Time Period Qualifier"
"KRN",.402,2707,"DIAB",9,0,356.22,39)
18.03;REQ;"Transport Code"
"KRN",.402,2707,"DIAB",9,0,356.22,42)
5.02;REQ;"Chiropractic Cert. Condition #1"
"KRN",.402,2707,"DIAB",9,0,356.22,47)
7.09;REQ;"Patient Condition"
"KRN",.402,2707,"DIAB",9,0,356.22,69)
2.15;REQ;"Prognosis"
"KRN",.402,2707,"DIAB",9,1,356.2211,0)
.03;REQ;"Attachment Control Number"
"KRN",.402,2707,"DIAB",9,1,356.2214,0)
.05;"City"
"KRN",.402,2707,"DIAB",9,1,356.2216,10)
1.01;REQ;"Procedure Coding Method"
"KRN",.402,2707,"DIAB",9,1,356.2216,13)
1.1;"Unit or Basis For Measurement"
"KRN",.402,2707,"DIAB",9,1,356.2216,15)
1.04;"Procedure Modifier #1"
"KRN",.402,2707,"DIAB",9,1,356.2216,24)
5.02;"Service Unit Count"
"KRN",.402,2707,"DIAB",9,2,356.22166,0)
.03;REQ;"Attachment Control #"
"KRN",.402,2707,"DIAB",10,0,356.22,8)
13///^S X="`"_+IBMLN;"Provider Type"
"KRN",.402,2707,"DIAB",10,0,356.22,16)
2.16;"Release of Information"
"KRN",.402,2707,"DIAB",10,0,356.22,17)
15///^S X="`"_+IBMLN;"Other UMO Qualifier"
"KRN",.402,2707,"DIAB",10,1,356.2216,4)
1.02;REQ;"Procedure Code"
"KRN",.402,2707,"DIAB",10,1,356.2216,5)
1.05;"Procedure Modifier #2"
"KRN",.402,2707,"DIAB",10,1,356.2216,7)
1.11;"Service Unit Count"
"KRN",.402,2707,"DIAB",10,1,356.2216,11)
12.01;REQ;"Procedure Code"
"KRN",.402,2707,"DIAB",10,1,356.2216,13)
1.11//1;"Service Unit Count"
"KRN",.402,2707,"DIAB",10,1,356.2216,14)
1.12///S X="D"
"KRN",.402,2707,"DIAB",10,1,356.2216,27)
5.06;"Period Count"
"KRN",.402,2707,"DIAB",11,0,356.22,15)
PATIENT DIAGNOSIS///^S X="`"_+IBMLN;"Diagnosis Qualifier"
"KRN",.402,2707,"DIAB",11,0,356.22,40)
18.09;REQ;"Round Trip Purpose Description"
"KRN",.402,2707,"DIAB",11,0,356.22,49)
5.07;REQ;"DME Cert. Condition"
"KRN",.402,2707,"DIAB",11,1,356.2211,0)
.04;"Attachment Description"
"KRN",.402,2707,"DIAB",11,1,356.2216,4)
1.03;"Ending Procedure Code"
"KRN",.402,2707,"DIAB",11,1,356.2216,11)
12.02;"Ending Procedure Code"
"KRN",.402,2707,"DIAB",11,1,356.2216,29)
8///^S X="`"_+IBMLN;"Provider Type"
"KRN",.402,2707,"DIAB",11,2,356.22166,0)
.04;"Attachment Description"
"KRN",.402,2707,"DIAB",12,0,356.22,49)
5.08;REQ;"DME Cert. Condition #1"
"KRN",.402,2707,"DIAB",12,1,356.2214,0)
.05;REQ;"City"
"KRN",.402,2707,"DIAB",13,1,356.2216,11)
1.04;"Procedure Modifier #1"
"KRN",.402,2707,"DIAB",14,1,356.2214,0)
.06;"State"
"KRN",.402,2707,"DR",1,356.22)
K IBTRBRF;W !,PATLINE;W !!,?20,IORVON,"Patient Event Detail - Required and Common Section",IORVOFF,!;S IBREQCAT=$$GET1^DIQ(356.22,IBTRIEN_",",2.01,"I");S:IBREQCAT'="" Y="@5";2.01///^S X=$S(IBPSTAT="I":"AR",1:"HS");
"KRN",.402,2707,"DR",1,356.22,1)
S IBREQCAT=$S(IBPSTAT="I":1,1:2);@5;I IBPSTAT="O" S Y="@10";W !,"Request Category: Admission Review";S Y="@20";@10;2.01Request Category~R~;S IBREQCAT=X;@20;I IBRESP=1 S Y="@30";2.02///I;S IBCERTCD=5;
"KRN",.402,2707,"DR",1,356.22,2)
W !,"Certification Type Code: Initial";S Y="@40";@30;2.02Certification Type Code~R~;S IBCERTCD=X;@40;I $$GET1^DIQ(356.22,IBTRIEN_",",2.13,"I")'="" S Y="@41";2.13///E;@41;I (IBCERTCD'=1)!(IBCERTCD'=2) S Y="@50";
"KRN",.402,2707,"DR",1,356.22,3)
2.13Level of Service~;S Y="@60";@50;2.13Level of Service~R~;@60;I IBPSTAT="I" W !,"Admission Date: ",IBEVDT;I IBPSTAT="O" W !,"Appointment Date: ",IBEVDT S Y="@950001";I IBDISDT="" S Y="@85";@80;2.22///^S X=IBDISDT;
"KRN",.402,2707,"DR",1,356.22,4)
W !,"Discharge Date: ",IBDISDT;@85;I $$GET1^DIQ(356.22,IBTRIEN_",",7.01,"I")'="" S Y="@86";7.01///2;S IBTEMP=X;@86;7.01Admission Type~;I $$GET1^DIQ(356.22,IBTRIEN_",",7.02,"I")'="" S Y="@87";7.02///2;S IBTEMP=X;@87;
"KRN",.402,2707,"DR",1,356.22,5)
7.02Admission Source~;@90;7.03Patient Status~;I $$GET1^DIQ(356.22,IBTRIEN_",",2.03,"I")'="" S Y="@96";@950001;2.03///^S X=1;S IBTEMP=X;@96;2.03Service Type~;2.04///^S X=$S(IBPSTAT="I":"A",1:"B");I IBPSTAT="O" S Y="@961";
"KRN",.402,2707,"DR",1,356.22,6)
2.06Patient Event Location of Care~R~;2.07Patient Event Bill Classification~R~;S Y="@100";@961;I $$GET1^DIQ(356.22,IBTRIEN_",",2.05,"I")'="" S Y="@97";2.05///^S X=$S(IBPSTAT="I":3,1:4);S IBTEMP=X;@97;2.05Service Location~;
"KRN",.402,2707,"DR",1,356.22,7)
S XX=$$GET1^DIQ(356.22,IBTRIEN_",",2.05,"I");I (XX'=9),(XX'=38) S Y="@99";I $$GET1^DIQ(356.22,IBTRIEN_",",7.04,"I")'="" S Y="@98";S:IBPSTAT="O" Y="@100";7.04///^S X=5;S IBTEMP=X;@98;7.04Nursing Home Residential Status~;S Y="@100";
"KRN",.402,2707,"DR",1,356.22,8)
@99;7.04///^S X="@";@100;S XX=$$ONEPD^IBTRH5H(IBTRIEN);@110;S IBMLN=$$SELPD^IBTRH5D(IBTRIEN);S:IBMLN=-3 Y="@110";S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@120";13Provider Type~///^S X="`"_+IBMLN;S Y="@110";@120;I 'IBRESP S Y="@130";
"KRN",.402,2707,"DR",1,356.22,9)
W !,"Previous Review Authorization Number: ",$$GET1^DIQ(356.22,IBTRIEN_",",17.01);W !,"Previous Admin. Reference Number: ",$$GET1^DIQ(356.22,IBTRIEN_",",17.02);S Y="@140";@130;I (IBCERTCD=5)!(IBCERTCD=8) S Y="@140";
"KRN",.402,2707,"DR",1,356.22,10)
17.01Previous Review Authorization Number~;17.02Previous Admin. Reference Number~;@140;W !;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","AEREL","Accident or Employment Related Section",1);W !;@149;K DUOUT;
"KRN",.402,2707,"DR",1,356.22,11)
S DIR("?")="Select YES to answer accident or related causes information. Select NO to skip.";N Y S DIR(0)="Y",DIR("A")="Is this event related to an accident or employment",DIR("B")="NO" D ^DIR S XX=Y K DIR;
"KRN",.402,2707,"DR",1,356.22,12)
I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@149";S:$D(DUOUT) IBUPOUT=1;S Y=$S($D(DUOUT):0,XX=0:"@210",1:"@150");@150;S IBBACK="";I $$GET1^DIQ(356.22,IBTRIEN_",",2.08,"I")'="" S Y="@151";2.08///^S X="AA";S IBTEMP=X;@151;
"KRN",.402,2707,"DR",1,356.22,13)
2.08Related Causes #1~R~;I X="AA" S IBBACK="@155",Y="@160";@155;I X="",'$$RCAUSEP^IBTRH5A(2.08) S Y="@180";2.09Related Causes #2~;I X="AA" S IBBACK="@156",Y="@160";@156;I '$$RCAUSEP^IBTRH5A(2.09) S Y="@180";2.1Related Causes #3~;
"KRN",.402,2707,"DR",1,356.22,14)
S IBBACK="";I X'="AA" S Y="@180";@160;2.11Auto Accident State~;S XX=X;I +$$GET1^DIQ(5,XX_",",2.2,"I") S Y="@165";2.12Auto Accident Country~;@165;S:IBBACK'="" Y=IBBACK;@180;I $$GET1^DIQ(356.22,IBTRIEN_",",2.18,"I")'="" S Y="@181";
"KRN",.402,2707,"DR",1,356.22,15)
2.18///^S X=$P($$NOW^XLFDT(),".",1);S IBTEMP=X;@181;2.18Accident Date~;@210;W !;S IBMLN=$$SELDX^IBTRH5D(IBTRIEN);S:IBMLN=-3 Y="@210";S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@220";3Diagnosis Qualifier~///^S X="`"_+IBMLN;S Y="@210";
"KRN",.402,2707,"DR",1,356.22,16)
@220;W !;2.19Date of LMP~;2.2Estimated Date Of Birth~;2.21Onset of Current Symptoms/Illness Date~;I $$GET1^DIQ(356.22,IBTRIEN_",",2.16,"I")'="" S Y="@221";2.16///Y;S XX=X;@221;2.16Release of Information~;
"KRN",.402,2707,"DR",1,356.22,17)
2.14Current Health Condition~;2.15Prognosis~;2.17Delay Reason~;@225;W !;S IBMLN=$$SELOU^IBTRH5E(IBTRIEN);S:IBMLN=-3 Y="@225";S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@230";15Other UMO Qualifier~///^S X="`"_+IBMLN;S Y="@225";@230;
"KRN",.402,2707,"DR",1,356.22,18)
S OLDREQ=$P($G(^IBT(356.22,IBTRIEN,0)),U,11);.11///^S X=$P($G(^VA(200,DUZ,0)),U,1);W !;.11Requester Contact Name~;S NEWREQ=$P($G(^IBT(356.22,IBTRIEN,0)),U,11);
"KRN",.402,2707,"DR",1,356.22,19)
I OLDREQ'=NEWREQ D CLRCNUM^IBTRH6(IBTRIEN),WRTCNUM^IBTRH6 S OLDREQ=NEWREQ,Y="@235";@235;S IBBACK="";I $P($G(^IBT(356.22,IBTRIEN,19)),U,2)'="" S Y="@2351";S DIE("PTRIX",356.22,19.01,365.021)="B";
"KRN",.402,2707,"DR",1,356.22,20)
19.01Requester Contact Qualifier #1~//TE;S Y="@2352";@2351;19.01Requester Contact Qualifier #1~;@2352;S XX=X;S Y="@238";@237;19.01Requester Contact Qualifier #1~R~;S:IBBACK'="" Y=IBBACK;@238;
"KRN",.402,2707,"DR",1,356.22,21)
I $P($G(^IBT(356.22,IBTRIEN,19)),U,2)="" S Y="@244";20Requester Contact Number 1~;I X="",'$$CONTINFO^IBTRH5G(IBTRIEN,20) S Y="@244";I X'="",XX="" S IBBACK="@240",Y="@237";@240;S IBBACK="";19.02Requester Contact Qualifier #2~;
"KRN",.402,2707,"DR",1,356.22,22)
S XX=X;S Y="@2415";@241;19.02Requester Contact Qualifier #2~R~;S XX=X;S:IBBACK'="" Y=IBBACK;@2415;I $P($G(^IBT(356.22,IBTRIEN,19)),U,3)="" S Y="@244";21Requester Contact Number 2~;I X="",'$$CONTINFO^IBTRH5G(IBTRIEN,21) S Y="@244";
"KRN",.402,2707,"DR",1,356.22,23)
I X'="",XX="" S IBBACK="@242",Y="@241";@242;S IBBACK="";19.03Requester Contact Qualifier #3~;S XX=X;S Y="@2435";@243;19.03Requester Contact Qualifier #3~R~;S XX=X;S:IBBACK'="" Y=IBBACK;@2435;
"KRN",.402,2707,"DR",1,356.22,24)
I $P($G(^IBT(356.22,IBTRIEN,19)),U,4)="" S Y="@244";22Requester Contact Number 3~;I X'="",XX="" S IBBACK="@244",Y="@243";@244;W !;12Additional Request Comments~;W !;@250;S IBMLN=$$SELAPI^IBTRH5D(IBTRIEN);S:IBMLN=-3 Y="@250";
"KRN",.402,2707,"DR",1,356.22,25)
S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@260";11Report Type~///^S X="`"_+IBMLN;S Y="@250";@260;S Y=$$SEND278^IBTRH5I();@270;W !!,?20,IORVON,"Patient Event Detail - Additional Sections",IORVOFF,!;@280;W !;
"KRN",.402,2707,"DR",1,356.22,26)
S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","HCSD","Health Care Services Delivery",1);W !;@290;K DUOUT;
"KRN",.402,2707,"DR",1,356.22,27)
S DIR("?")="Select NO to skip this section. Select YES to enter REQUIRED data for any services with specific patterns of delivery or usage.";
"KRN",.402,2707,"DR",1,356.22,28)
N Y S DIR(0)="Y",DIR("A")="Health Care Services Delivery",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@290";S:$D(DUOUT) IBUPOUT=1;S Y=$S($D(DUOUT):0,XX=0:"@350",1:"@300");@300;
"KRN",.402,2707,"DR",1,356.22,29)
I $$GET1^DIQ(356.22,IBTRIEN_",",4.01,"I")'="" S Y="@301";4.01///^S X=$S(IBPSTAT="O":14,1:5);S XX=X;@301;S IBTEMP="";I $$GET1^DIQ(356.22,DA_",",4.02,"I")'="" S Y="@310";4.01Service Quantity Qualifier~;S XX=X,Y="@320";@310;
"KRN",.402,2707,"DR",1,356.22,30)
4.01Service Quantity Qualifier~R~;S XX=X;S:IBTEMP'="" Y=IBTEMP;@320;4.02Service Unit Count~;I X'="",XX="" S Y="@310",IBTEMP="@325";@325;I $$GET1^DIQ(356.22,IBTRIEN_",",4.03,"I")'="" S Y="@326";4.03///^S X="DA";@326;S IBTEMP="";
"KRN",.402,2707,"DR",1,356.22,31)
I $$GET1^DIQ(356.22,DA_",",4.04,"I")'="" S Y="@330";4.03Sample Selection Units of Measurement~;S XX=X,Y="@340";@330;4.03Sample Selection Units of Measurement~R~;S XX=X;S:IBTEMP'="" Y=IBTEMP;@340;4.04Sample Selection Modulus~;
"KRN",.402,2707,"DR",1,356.22,32)
I X'="",XX="" S Y="@330",IBTEMP="@341";@341;S IBTEMP="";I $$GET1^DIQ(356.22,DA_",",4.06,"I")'="" S Y="@343";4.05Time Period Qualifier~;S XX=X;S Y="@34300";@343;4.05Time Period Qualifier~R~;S XX=X;S:IBTEMP'="" Y=IBTEMP;@34300;
"KRN",.402,2707,"DR",1,356.22,33)
4.06Period Count~;I X'="",XX="" S Y="@343",IBTEMP="@344";@344;4.07Delivery Frequency Code~;4.08Delivery Pattern Time~;@350;W !;D CERTDATA^IBTRH5G(IBTRIEN);@360;W !;S Y=$$CERTCAT^IBTRH5A(IBPSTAT);@370;
"KRN",.402,2707,"DR",1,356.22,34)
I $$GET1^DIQ(356.22,IBTRIEN_",",4.09,"I")'="" S Y="@371";4.09///Y;S XX=X;@371;4.09Ambulance Cert. Condition Indicator~R~;4.1Ambulance Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.1) S Y="@410";
"KRN",.402,2707,"DR",1,356.22,35)
4.11Ambulance Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.11) S Y="@410";4.12Ambulance Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.12) S Y="@410";4.13Ambulance Cert. Condition #4~;
"KRN",.402,2707,"DR",1,356.22,36)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,4.13) S Y="@410";4.14Ambulance Cert. Condition #5~;@410;W !;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","AMBTI","Ambulance Transport Information",1);@415;K DUOUT;
"KRN",.402,2707,"DR",1,356.22,37)
S DIR("?")="Select NO to skip this section. Select YES to enter REQUIRED data for any ambulance services";N Y S DIR(0)="Y",DIR("A")="Ambulance Transport Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;
"KRN",.402,2707,"DR",1,356.22,38)
I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@415";S:$D(DUOUT) IBUPOUT=1;S Y=$S($D(DUOUT):0,XX=0:"@360",1:"@420");@420;18.02Patient Weight~;S XX=X;I XX="",$$GET1^DIQ(356.22,IBTRIEN_",",18.01,"I")'="" S Y="@429";S Y="@430";@429;18.01///@;
"KRN",.402,2707,"DR",1,356.22,39)
S Y="@43005";@430;18.01///^S X="LB";@43005;I $$GET1^DIQ(356.22,IBTRIEN_",",18.03,"I")'="" S Y="@431";18.03///^S X="I";S XX=X;@431;18.03Transport Code~R~;S IBAMBTR=X;I $$GET1^DIQ(356.22,IBTRIEN_",",18.04,"I")'="" S Y="@432";
"KRN",.402,2707,"DR",1,356.22,40)
18.04///^S X="A";S XX=X;@432;18.04Transport Reason Code~;18.06Transport Distance~;I X="" S Y="@440";18.05///DH;@440;S Y=$S($G(IBAMBTR)="X":"@450",1:"@460");@450;18.09Round Trip Purpose Description~R~;S Y="@470";@460;18.09///@;@470;
"KRN",.402,2707,"DR",1,356.22,41)
18.1Stretcher Purpose Description~;@15;S Y=$S('$$AMBTI^IBTRH5C(IBTRIEN):"@550",1:"@500");@500;W !;S IBMLN=$$SELPT^IBTRH5F(IBTRIEN);S:IBMLN=-3 Y="@500";S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@360";
"KRN",.402,2707,"DR",1,356.22,42)
14Ambulance Location Qualifier~///^S X="`"_+IBMLN;S Y="@500";@600;I $$GET1^DIQ(356.22,IBTRIEN_",",5.01,"I")'="" S Y="@601";5.01///Y;S XX=X;@601;5.01Chiropractic Cert. Condition Indicator~R~;5.02Chiropractic Cert. Condition #1~R~;
"KRN",.402,2707,"DR",1,356.22,43)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.02) S Y="@610";5.03Chiropractic Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.03) S Y="@610";5.04Chiropractic Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.04) S Y="@610";
"KRN",.402,2707,"DR",1,356.22,44)
5.05Chiropractic Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.05) S Y="@610";5.06Chiropractic Cert. Condition #5~;@610;I IBPSTAT="I" S Y="@360";
"KRN",.402,2707,"DR",1,356.22,45)
S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","SPMSI","Spinal Manipulation Service Information",1);W !;@620;K DUOUT;S DIR("?")="Select NO to skip this section. Select YES to enter REQUIRED data for any Spinal Manipulation Services.";
"KRN",.402,2707,"DR",1,356.22,46)
N Y S DIR(0)="Y",DIR("A")="Spinal Manipulation Service Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@620";S:$D(DUOUT) IBUPOUT=1;S Y=$S($D(DUOUT):0,XX=0:"@360",1:"@630");@630;
"KRN",.402,2707,"DR",1,356.22,47)
7.05Treatment Series Number~;7.06Treatment Count~;7.07Subluxation Level #1~;S XX=X;I X="" S Y="@640";7.08Subluxation Level #2~;S XX=X;@640;7.09Patient Condition~R~;I $$GET1^DIQ(356.22,IBTRIEN_",",7.1,"I")'="" S Y="@641";
"KRN",.402,2707,"DR",1,356.22,48)
7.1///^S X="N";S XX=X;@641;7.1Complication Indicator~R~;7.11Patient Condition Description Line 1~;I X=""!($L(X)<80) S Y="@650";7.12Patient Condition Description Line 2~;@650;I $$GET1^DIQ(356.22,IBTRIEN_",",7.13,"I")'="" S Y="@651";
"KRN",.402,2707,"DR",1,356.22,49)
7.13///^S X="Y";S XX=X;@651;7.13X-Ray Availability Indicator~;S Y="@360";@700;I $$GET1^DIQ(356.22,IBTRIEN_",",5.07,"I")'="" S Y="@701";5.07///Y;S XX=X;@701;5.07DME Cert. Condition~R~;5.08DME Cert. Condition #1~R~;
"KRN",.402,2707,"DR",1,356.22,50)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.08) S Y="@360";5.09DME Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.09) S Y="@360";5.1DME Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.1) S Y="@360";
"KRN",.402,2707,"DR",1,356.22,51)
5.11DME Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.11) S Y="@360";5.12DME Cert. Condition #5~;S Y="@360";@800;I $$GET1^DIQ(356.22,IBTRIEN_",",5.13,"I")'="" S Y="@801";5.13///^S X="Y";S XX=X;@801;
"KRN",.402,2707,"DR",1,356.22,52)
5.13Oxygen Cert. Condition Indicator~R~;5.14Oxygen Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.14) S Y="@810";5.15Oxygen Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.15) S Y="@810";
"KRN",.402,2707,"DR",1,356.22,53)
5.16Oxygen Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.16) S Y="@810";5.17Oxygen Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,5.17) S Y="@810";5.18Oxygen Cert. Condition #5~;@810;
"KRN",.402,2707,"DR",1,356.22,54)
S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","HOTI","Home Oxygen Therapy Information",1);W !;@815;K DUOUT;S DIR("?")="Select NO to skip this section. Select YES to enter REQUIRED data for any Home Oxygen Therapy Services.";
"KRN",.402,2707,"DR",1,356.22,55)
N Y S DIR(0)="Y",DIR("A")="Home Oxygen Therapy Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@815";S:$D(DUOUT) IBUPOUT=1;S Y=$S($D(DUOUT):0,XX=0:"@360",1:"@820");@820;
"KRN",.402,2707,"DR",1,356.22,56)
8.01Oxygen Equipment Type #1~R~;S IBOXYET=$$OXYET^IBTRH5C(IBTRIEN);8.02Oxygen Equipment Type #2~;S IBOXYET=$$OXYET^IBTRH5C(IBTRIEN);I X="" S Y="@830";8.03Oxygen Equipment Type #3~;S IBOXYET=$$OXYET^IBTRH5C(IBTRIEN);@830;
"KRN",.402,2707,"DR",1,356.22,57)
8.04Equipment Reason Description~;8.05Oxygen Flow Rate~R~;8.06Daily Oxygen Use Count~;8.07Oxygen User Period Hour Count~;8.08Respiratory Therapist Order Text~;9.01Arterial Blood Gas Quantity~;9.02Oxygen Saturation Quantity~;
"KRN",.402,2707,"DR",1,356.22,58)
9.03Oxygen Test Condition~;9.04Oxygen Test Findings #1~;I X="",'$$OXYTFNDP^IBTRH5B(IBTRIEN,9.04) S Y="@840";9.05Oxygen Test Findings #2~;I X="",'$$OXYTFNDP^IBTRH5B(IBTRIEN,9.05) S Y="@8400";9.06Oxygen Test Findings #3~;@840;
"KRN",.402,2707,"DR",1,356.22,59)
S Y=$S($G(IBOXYET)'=1:"@850",1:"@860");@850;9.07Portable Oxygen System Flow Rate~;S Y="@870";@860;9.07Portable Oxygen System Flow Rate~R~;@870;9.08Oxygen Delivery System~R~;S Y="@360";@900;
"KRN",.402,2707,"DR",1,356.22,60)
I $$GET1^DIQ(356.22,IBTRIEN_",",6.01,"I")'="" S Y="@901";6.01///Y;S XX=X;@901;6.01Functional Limit Cert. Condition Indicator~R~;6.02Functional Limits Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.02) S Y="@360";
"KRN",.402,2707,"DR",1,356.22,61)
6.03Functional Limits Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.03) S Y="@360";6.04Functional Limits Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.04) S Y="@360";6.05Functional Limits Cert. Condition #4~;
"KRN",.402,2707,"DR",1,356.22,62)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.05) S Y="@360";6.06Functional Limits Cert. Condition #5~;S Y="@360";@1000;I $$GET1^DIQ(356.22,IBTRIEN_",",6.07,"I")'="" S Y="@1001";6.07///^S X="Y";S XX=X;@1001;
"KRN",.402,2707,"DR",1,356.22,63)
6.07Activities Cert. Condition Indicator~R~;6.08Activities Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.08) S Y="@360";6.09Activities Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.09) S Y="@360";
"KRN",.402,2707,"DR",1,356.22,64)
6.1Activities Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.1) S Y="@360";6.11Activities Cert. Condition #4~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.11) S Y="@360";6.12Activities Cert. Condition #5~;S Y="@360";@1100;
"KRN",.402,2707,"DR",1,356.22,65)
I $$GET1^DIQ(356.22,IBTRIEN_",",6.13,"I")'="" S Y="@1101";6.13///Y;S XX=X;@1101;6.13Mental Status Cert. Condition Indicator~R~;6.14Mental Status Cert. Condition #1~R~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.14) S Y="@360";
"KRN",.402,2707,"DR",1,356.22,66)
6.15Mental Status Cert. Condition #2~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.15) S Y="@360";6.16Mental Status Cert. Condition #3~;I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.16) S Y="@360";6.17Mental Status Cert. Condition #4~;
"KRN",.402,2707,"DR",1,356.22,67)
I X="",'$$CERTCNDP^IBTRH5A(IBTRIEN,6.17) S Y="@360";6.18Mental Status Cert. Condition #5~;S Y="@360";@1300;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,"","HHCI","Home Health Care Information",1);W !;@1310;K DUOUT;
"KRN",.402,2707,"DR",1,356.22,68)
S DIR("?")="Select NO to skip this section. Select YES to enter REQUIRED data for any Home Health Care Information.";N Y S DIR(0)="Y",DIR("A")="Home Health Care Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;
"KRN",.402,2707,"DR",1,356.22,69)
I XX?1"^"1.E D JUMPERR^IBTRH5H S Y="@1310";S:$D(DUOUT) IBUPOUT=1;S Y=$S($D(DUOUT):0,XX=0:"@1400",1:"@1320");@1320;I $$GET1^DIQ(356.22,IBTRIEN_",",2.15,"I")'="" S Y="@1321";2.15///4;S XX=X;@1321;2.15Prognosis~R~;
"KRN",.402,2707,"DR",1,356.22,70)
10.01Home Health Start Date~R~;10.02Home Health Cert. Start Date~;I X="" S Y="@1330";10.03Home Health Cert. End Date~R~;@1330;10.05Surgery Date~;I $$GET1^DIQ(356.22,IBTRIEN_",",10.06,"I")'="" S Y="@1331";10.06///^S X="HC";S XX=X;
"KRN",.402,2707,"DR",1,356.22,71)
@1331;10.06Procedure Coding Method~;S IBSTYTP=X;10.07Surgical Procedure~;10.08Physician Verbal Order Date~;10.09Last Visit Date~;10.1Physician/Home Health Contact Date~;10.11Start Date of Last Admission~;I X="" S Y="@1340";
"KRN",.402,2707,"DR",1,356.22,72)
10.12End Date of Last Admission~R~;@1340;I $$GET1^DIQ(356.22,IBTRIEN_",",10.13,"I")'="" S Y="@1341";10.13///A;S XX=X;@1341;10.13Last Admission Facility Type~;W !;@1400;W !!,?20,IORVON,"Service Level Details",IORVOFF,!;@1410;
"KRN",.402,2707,"DR",1,356.22,73)
S IBEXIT=0;S IBMLN=$$SELSL^IBTRH5E(IBTRIEN);S:IBMLN=-3 Y="@1410";S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y=0;Q;16Service Line Number~///^S X="`"_IBMLN;S:IBEXIT Y=0;S Y="@1410";
"KRN",.402,2707,"DR",2,356.2211)
S:IBNEW Y="@251";.01Report Type~;@251;.02Delivery Method~R~;I (X="BM")!(X="EL")!(X="EM")!(X="FX") S Y="@255";.03Attachment Control #~;S Y="@256";@255;.03Attachment Control Number~R~;@256;.04Attachment Description~;
"KRN",.402,2707,"DR",2,356.2213)
S:IBNEW Y="@111";.01Provider Type~;@111;.03Provider~R~;S XX=$$GET1^DIQ(356.2213,DA_","_IBTRIEN_",",.03,"I");.02///^S X=$$PERSON^IBTRH5I(XX);S ZZ=$$PDATA^IBTRH5I(X);W !,"   Provider NPI: ",$P(ZZ,"^",1);
"KRN",.402,2707,"DR",2,356.2213,1)
W !,"   Provider Taxonomy Code: ",$P(ZZ,"^",2);
"KRN",.402,2707,"DR",2,356.2214)
S:IBNEW Y="@501";.01Ambulance Location Qualifier~;@501;.02Ambulance Location~;.03Address Line 1~R~;.04Address Line 2~;.07Zip Code~;I X="" S Y="@510";.05City~;S Y="@520";@510;.05City~R~;@520;.06State~;
"KRN",.402,2707,"DR",2,356.2215)
S:IBNEW Y="@226";.01Other UMO Qualifier~;@226;.02Other UMO Name (Denials)~;.07Other UMO Denial Date~R~;.03Other UMO Denial Reason #1~R~;S XX=X;.04Other UMO Denial Reason #2~;I X="",'$$OUDREASP^IBTRH5B(.04) S Y="@229";
"KRN",.402,2707,"DR",2,356.2215,1)
.05Other UMO Denial Reason #3~;I X="",'$$OUDREASP^IBTRH5B(.05) S Y="@229";.06Other UMO Denial Reason #4~;@229;
"KRN",.402,2707,"DR",2,356.2216)
S Y=$$PITSL^IBTRH5B(IBREQCAT);@1500;S IBBACK="";Q;1.12///^S X="P";@1505;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"SHCRSI","  Service HCRS Information",1);@1510;K DUOUT;
"KRN",.402,2707,"DR",2,356.2216,1)
S DIR("?")="Select NO to skip this section. Select YES to enter Service Line data ONLY if it differs from the Patient Event data.";N Y S DIR(0)="Y",DIR("A")="  Service HCRS Information",DIR("B")="NO" D ^DIR S XX=Y K DIR;
"KRN",.402,2707,"DR",2,356.2216,2)
I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@1510";S Y=$S($D(DUOUT):0,XX=0:"@1560",1:"@1520");@1520;.15Request Category~;.02Service Certification Type~;.03Service Type~;.04///^S X=$S(IBPSTAT="I":"A",1:"B");@1530;
"KRN",.402,2707,"DR",2,356.2216,3)
I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",.06,"I")'="" S Y="@1550";.06///1;S XX=X;@1550;.06Service Location~;W !;.11Proposed or Actual Service Date~;@1560;S:IBBACK'="" Y=IBBACK;
"KRN",.402,2707,"DR",2,356.2216,4)
I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",1.01,"I")'="" S Y="@1561";1.01///HC;S XX=X;@1561;1.01Procedure Coding Method~R~;S IBSSTYP=X;I IBSSTYP="N4" S Y="@1564";12.01///@;12.02///@;1.02Procedure Code~R~;1.03Ending Procedure Code~;
"KRN",.402,2707,"DR",2,356.2216,5)
S Y="@1565";@1564;1.02///@;1.03///@;12.01Procedure Code~R~;12.02Ending Procedure Code~;@1565;1.04Procedure Modifier #1~;I X="",'$$PROCMODP^IBTRH5B(1.04) S Y="@1570";1.05Procedure Modifier #2~;
"KRN",.402,2707,"DR",2,356.2216,6)
I X="",'$$PROCMODP^IBTRH5B(1.05) S Y="@1570";1.06Procedure Modifier #3~;I X="",'$$PROCMODP^IBTRH5B(1.06) S Y="@1570";1.07Procedure Modifier #4~;@1570;1.08Procedure Description~;1.09Service Line Amount~;
"KRN",.402,2707,"DR",2,356.2216,7)
I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",1.1,"I")'="" S Y="@1571";1.1///UN;S XX=X;@1571;1.1Unit or Basis for Measurement~;I IBPSTAT="I" S Y="@1572";1.11Service Unit Count~//1;S Y="@1575";@1572;1.11Service Unit Count~;@1575;
"KRN",.402,2707,"DR",2,356.2216,8)
2.01Diagnosis Pointer #1~;I X="",'$$SLDXP^IBTRH5B(2.01) S Y="@1580";2.02Diagnosis Pointer #2~;I X="",'$$SLDXP^IBTRH5B(2.02) S Y="@1580";2.03Diagnosis Pointer #3~;I X="",'$$SLDXP^IBTRH5B(2.03) S Y="@1580";2.04Diagnosis Pointer #4~;
"KRN",.402,2707,"DR",2,356.2216,9)
K IBSSTYP;@1580;I $$GET1^DIQ(356.2216,DA(1)_","_IBTRIEN_",",2.05,"I")'="" S Y="@1581";2.05///^S X="N";S XX=X;@1581;2.05ESPDT Indicator~;2.09Nursing Home Level of Care~;S Y="@1800";@1600;S IBBACK="@1610",Y="@1505";@1610;Q;
"KRN",.402,2707,"DR",2,356.2216,10)
1.12///^S X="I";2.06Revenue Code (Institutional)~;2.07Service Line Rate (Inpt)~;@1630;I $$GET1^DIQ(356.22,DA(1)_","_IBTRIEN_",",1.01,"I")'="" S Y="@1631";1.01///^S X="HC";S XX=X;@1631;1.01Procedure Coding Method~R~;S IBSSTYP=X;
"KRN",.402,2707,"DR",2,356.2216,11)
I IBSSTYP="N4" S Y="@1634";12.01///@;12.02///@;1.02Procedure Code~R~;1.03Ending Procedure Code~;S Y="@1635";@1634;1.02///@;1.03///@;12.01Procedure Code~R~;12.02Ending Procedure Code~;@1635;1.04Procedure Modifier #1~;
"KRN",.402,2707,"DR",2,356.2216,12)
I X="",'$$PROCMODP^IBTRH5B(1.04) S Y="@1640";1.05Procedure Modifier #2~;I X="",'$$PROCMODP^IBTRH5B(1.05) S Y="@1640";1.06Procedure Modifier #3~;I X="",'$$PROCMODP^IBTRH5B(1.06) S Y="@1640";1.07Procedure Modifier #4~;@1640;
"KRN",.402,2707,"DR",2,356.2216,13)
1.08Procedure Description~;1.09Service Line Amount ~;@1690;W !;I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",1.1,"I")'="" S Y="@1691";1.1///DA;S XX=X;@1691;1.1Unit or Basis For Measurement~;1.11Service Unit Count~//1;
"KRN",.402,2707,"DR",2,356.2216,14)
I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",2.08,"I")'="" S Y="@1692";2.08///^S X=5;S XX=X;@1692;2.08Nursing Home Residential Status~;2.09Nursing Home Level of Care~;S Y="@1800";@1700;Q;1.12///^S X="D";S IBBACK="@1710",Y="@1505";
"KRN",.402,2707,"DR",2,356.2216,15)
@1710;Q;1.12///^S X="D";1.01///AD;W !,"  Procedure Coding Method: CPT/HCPCS Dental Code";S IBSSTYP=X;1.02Procedure Code~R~;1.03Ending Procedure Code~;1.04Procedure Modifier #1~;I X="",'$$PROCMODP^IBTRH5B(1.04) S Y="@1720";
"KRN",.402,2707,"DR",2,356.2216,16)
1.05Procedure Modifier #2~;I X="",'$$PROCMODP^IBTRH5B(1.05) S Y="@1720";1.06Procedure Modifier #3~;I X="",'$$PROCMODP^IBTRH5B(1.06) S Y="@1720";1.07Procedure Modifier #4~;@1720;1.08Procedure Description~;1.09Service Line Amount~;
"KRN",.402,2707,"DR",2,356.2216,17)
S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"OCDI","  Oral Cavity Designation",1);@1730;K DUOUT;S DIR("?")="Select NO to skip this section. Select YES to enter Oral Cavity Designation Information.";
"KRN",.402,2707,"DR",2,356.2216,18)
N Y S DIR(0)="Y",DIR("A")="  Oral Cavity Designation",DIR("B")="NO" D ^DIR S XX=Y K DIR;I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@1730";S Y=$S($D(DUOUT):0,XX=0:"@1750",1:"@1740");@1740;3.01Oral Cavity Designation #1~R~;S XX=X;
"KRN",.402,2707,"DR",2,356.2216,19)
3.02Oral Cavity Designation #2~;S IBSSTYP=X;I X="",'$$ORALCAVP^IBTRH5B(3.02) S Y="@1750";3.03Oral Cavity Designation #3~;I X="",'$$ORALCAVP^IBTRH5B(3.03) S Y="@1750";3.04Oral Cavity Designation #4~;
"KRN",.402,2707,"DR",2,356.2216,20)
I X="",'$$ORALCAVP^IBTRH5B(3.04) S Y="@1750";3.05Oral Cavity Designation #5~;@1750;W !;3.06Prosthesis, Crown or Inlay Code~;1.11Number of Procedures~;3.07Description~;@1760;S IBMLN=$$SELSTI^IBTRH5F(IBTRIEN,DA);S:IBMLN=-3 Y="@1760";
"KRN",.402,2707,"DR",2,356.2216,21)
S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@1800";4Tooth Code~///^S X="`"_+IBMLN;S Y="@1760";@1800;W !;S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"SHCSD","  Service Health Care Services Delivery",1);@1810;K DUOUT;
"KRN",.402,2707,"DR",2,356.2216,22)
S DIR("?")="Select NO to skip this section. Select YES to enter Service Health Care Services Delivery Information.";N Y S DIR(0)="Y",DIR("A")="  Service Health Care Services Delivery",DIR("B")="NO" D ^DIR S XX=Y K DIR;
"KRN",.402,2707,"DR",2,356.2216,23)
I XX?1"^"1.E D JUMPERR^IBTRH5H(2) S Y="@1810";S Y=$S($D(DUOUT):0,XX=0:"@1900",1:"@1815");@1815;I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",5.01,"I")'="" S Y="@1816";5.01///^S X=$S(IBPSTAT="O":14,1:5);S XX=X;@1816;S IBTEMP="";
"KRN",.402,2707,"DR",2,356.2216,24)
I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",5.02,"I")'="" S Y="@1820";5.01Service Quantity Qualifier~;S XX=X,Y="@1830";@1820;5.01Service Quantity Qualifier~R~;S XX=X;S:IBTEMP'="" Y=IBTEMP;@1830;5.02Service Unit Count~;
"KRN",.402,2707,"DR",2,356.2216,25)
I X'="",XX="" S Y="@1820",IBTEMP="@1835";@1835;I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",5.03,"I")'="" S Y="@1836";5.03///^S X="DA";S XX=X;@1836;S IBTEMP="";I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",5.04,"I")'="" S Y="@1840";
"KRN",.402,2707,"DR",2,356.2216,26)
5.03Sample Selection Units of Measurement~;S XX=X,Y="@1850";@1840;5.03Sample Selection Units of Measurement~R~;S:IBTEMP'="" Y=IBTEMP;@1850;5.04Sample Selection Modulus~;I X'="",XX="" S Y="@1840",IBTEMP="@1860";@1860;S IBTEMP="";
"KRN",.402,2707,"DR",2,356.2216,27)
I $$GET1^DIQ(356.2216,DA_","_IBTRIEN_",",5.06,"I")'="" S Y="@1870";5.05Time Period Qualifier~;S XX=X;S Y="@1871";@1870;5.05Time Period Qualifier~R~;S XX=X;S:IBTEMP'="" Y=IBTEMP;@1871;5.06Period Count~;
"KRN",.402,2707,"DR",2,356.2216,28)
I X'="",XX="" S Y="@1870",IBTEMP="@1880";@1880;5.07Delivery Frequency Code~;5.08Delivery Pattern Time~;@1900;W !;S IBMLN=$$SELSAPI^IBTRH5F(IBTRIEN,DA);S:IBMLN=-3 Y="@1900";S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@2000";
"KRN",.402,2707,"DR",2,356.2216,29)
6Report Type~///^S X="`"_+IBMLN;S Y="@1900";@2000;W !;7Message Text~;@2010;S IBMLN=$$SELSPD^IBTRH5E(IBTRIEN,DA);S:IBMLN=-3 Y="@2010";S:IBMLN=-2 Y=0;S:IBMLN=-1 Y="@2100";8Provider Type~///^S X="`"_+IBMLN;S Y="@2010";@2100;
"KRN",.402,2707,"DR",2,356.223)
S:IBNEW Y="@211";.01Diagnosis Qualifier~;@211;.02Event Diagnosis~R~;.03Date Diagnosis Known~;
"KRN",.402,2707,"DR",3,356.22164)
S:IBNEW Y="@1761";.01Tooth Code~;@1761;.02Tooth Surface #1~R~;I X="",'$$TOOTHSP^IBTRH5C(.02) S Y="@1770";.03Tooth Surface #2~;I X="",'$$TOOTHSP^IBTRH5C(.03) S Y="@1770";.04Tooth Surface #3~;
"KRN",.402,2707,"DR",3,356.22164,1)
I X="",'$$TOOTHSP^IBTRH5C(.04) S Y="@1770";.05Tooth Surface #4~;I X="",'$$TOOTHSP^IBTRH5C(.05) S Y="@1770";.06Tooth Surface #5~;@1770;
"KRN",.402,2707,"DR",3,356.22166)
S:IBNEW Y="@1901";.01Report Type~;@1901;.02Delivery Method~R~;I (X="BM")!(X="EL")!(X="EM")!(X="FX") S Y="@1910";.03Attachment Control #~;S Y="@1920";@1910;.03Attachment Control #~R~;@1920;.04Attachment Description~;
"KRN",.402,2707,"DR",3,356.22168)
S:IBNEW Y="@2011";.01Provider Type~;@2011;.03Service Provider~R~;S XX=$$GET1^DIQ(356.22168,DA_","_DA(1)_","_IBTRIEN_",",.03,"I");.02///^S X=$$PERSON^IBTRH5I(XX);S ZZ=$$PDATA^IBTRH5I(X);W !,"   Provider NPI: ",$P(ZZ,"^",1);
"KRN",.402,2707,"DR",3,356.22168,1)
W !,"   Provider Taxonomy Code: ",$P(ZZ,"^",2);
"KRN",.402,2709,-1)
0^2
"KRN",.402,2709,0)
IB CREATE 278 REQUEST SHORT^3160314.1747^@^356.22^^@^3160411
"KRN",.402,2709,"DIAB",1,0,356.22,6)
20;REQ;"Requester Contact Number #1"
"KRN",.402,2709,"DIAB",2,0,356.22,4)
12;"Message Text"
"KRN",.402,2709,"DIAB",2,0,356.22,6)
19.02;"Type of Requester Contact Number #2"
"KRN",.402,2709,"DIAB",2,1,356.2211,0)
.01;"Report Type"
"KRN",.402,2709,"DIAB",2,1,356.2213,0)
.01;"Provider Type"
"KRN",.402,2709,"DIAB",2,1,356.223,0)
.01;"Patient Event Diagnosis Type"
"KRN",.402,2709,"DIAB",3,0,356.22,1)
PATIENT DIAGNOSIS///^S X="`"_+IBMLN;"Patient Event Diagnosis Type"
"KRN",.402,2709,"DIAB",3,0,356.22,3)
13///^S X="`"_+IBMLN;"Provider Type"
"KRN",.402,2709,"DIAB",3,0,356.22,5)
19.01//TE;"Type of Requester Contact Number #1"
"KRN",.402,2709,"DIAB",3,1,356.2216,2)
12.01;REQ;"NDC Code #1"
"KRN",.402,2709,"DIAB",4,0,356.22,0)
2.03;"Patient Event Service Type"
"KRN",.402,2709,"DIAB",4,0,356.22,2)
16///S X="`"_IBMLN;"Service Line Number"
"KRN",.402,2709,"DIAB",4,0,356.22,4)
.11;"Requester Contact Name"
"KRN",.402,2709,"DIAB",4,0,356.22,6)
21;REQ;"Requester Contact Number #2"
"KRN",.402,2709,"DIAB",4,1,356.2211,0)
.02;"Report Transmission"
"KRN",.402,2709,"DIAB",4,1,356.2213,0)
.03;REQ;"Provider"
"KRN",.402,2709,"DIAB",4,1,356.2216,1)
1.01//HC;REQ;"Product or Service ID Qualifier"
"KRN",.402,2709,"DIAB",4,1,356.223,0)
.02;REQ;"Patient Event Diagnosis"
"KRN",.402,2709,"DIAB",5,0,356.22,6)
19.03;"Type of Requester Contact Number #3"
"KRN",.402,2709,"DIAB",6,0,356.22,0)
7.01;"Admission Type"
"KRN",.402,2709,"DIAB",6,0,356.22,5)
19.01;"Type of Requester Contact Number #1"
"KRN",.402,2709,"DIAB",6,1,356.2211,0)
.03;"Attachment Control #"
"KRN",.402,2709,"DIAB",7,0,356.22,6)
22;REQ;"Requester Contact Number #3"
"KRN",.402,2709,"DIAB",8,1,356.2216,1)
1.01//HC;"Product or Service ID Qualifier"
"KRN",.402,2709,"DIAB",9,1,356.2211,0)
.03;REQ;"Attachment Control #"
"KRN",.402,2709,"DIAB",10,0,356.22,3)
11///^S X="`"_+IBMLN;"Report Type"
"KRN",.402,2709,"DIAB",12,1,356.2216,1)
1.02;REQ;"Procedure"
"KRN",.402,2709,"DR",1,356.22)
S IBTRBRF=1;S IBREQCAT=$$GET1^DIQ(356.22,IBTRIEN_",",2.01);W !!,?30,"PATIENT EVENT DETAIL";2.03Patient Event Service Type~;I IBPSTAT'="I" S Y="@1";7.01Admission Type~;@1;S IBMLN=$$SELDX^IBTRH5D(IBTRIEN);S:IBMLN=-3 Y="@1";
"KRN",.402,2709,"DR",1,356.22,1)
S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@105";3Patient Event Diagnosis Type~///^S X="`"_+IBMLN;S Y="@1";@105;S IBSLVAL=1;@2;I 'IBSLVAL D DELSL^IBTRH5E(IBTRIEN) S Y="@3";S IBEXIT=0;S IBMLN=$$SELSL^IBTRH5E(IBTRIEN);S:IBMLN=-3 Y="@2";
"KRN",.402,2709,"DR",1,356.22,2)
S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@3";Q;16Service Line Number~///^S X="`"_IBMLN;S Y="@2";@3;W !!,"Patient Event Provider Data";S XX=$$ONEPD^IBTRH5H(IBTRIEN);@4;S IBMLN=$$SELPD^IBTRH5D(IBTRIEN);S:IBMLN=-3 Y="@4";
"KRN",.402,2709,"DR",1,356.22,3)
S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@5";13Provider Type~///^S X="`"_+IBMLN;S Y="@4";@5;S IBMLN=$$SELAPI^IBTRH5D(IBTRIEN);S:IBMLN=-3 Y="@5";S:IBMLN=-2 Y=0,IBUPOUT=1;S:IBMLN=-1 Y="@6";11Report Type~///^S X="`"_+IBMLN;S Y="@5";@6;
"KRN",.402,2709,"DR",1,356.22,4)
W !;12Message Text~;S OLDREQ=$P($G(^IBT(356.22,IBTRIEN,0)),U,11);.11Requester Contact Name~;W !;S NEWREQ=$P($G(^IBT(356.22,IBTRIEN,0)),U,11);I OLDREQ'=NEWREQ D CLRCNUM^IBTRH6(IBTRIEN),WRTCNUM^IBTRH6 S OLDREQ=NEWREQ,Y="@602";@602;
"KRN",.402,2709,"DR",1,356.22,5)
I $P($G(^IBT(356.22,IBTRIEN,19)),U,2)'="" S Y="@603";S DIE("PTRIX",356.22,19.01,365.021)="B";19.01Type of Requester Contact Number #1~//TE;S Y="@604";@603;19.01Type of Requester Contact Number #1~;@604;I X="" S Y="@7";
"KRN",.402,2709,"DR",1,356.22,6)
20Requester Contact Number #1~R~;19.02Type of Requester Contact Number #2~;I X="" S Y="@7";21Requester Contact Number #2~R~;19.03Type of Requester Contact Number #3~;I X="" S Y="@7";22Requester Contact Number #3~R~;@7;
"KRN",.402,2709,"DR",2,356.2211)
S:IBNEW Y="@501";.01Report Type~;@501;.02Report Transmission~;I (X="BM")!(X="EL")!(X="EM")!(X="FX") S Y="@502";.03Attachment Control #~;S Y="@503";@502;.03Attachment Control #~R~;@503;
"KRN",.402,2709,"DR",2,356.2213)
S:IBNEW Y="@401";.01Provider Type~;@401;.03Provider~R~;S XX=$$GET1^DIQ(356.2213,DA_","_IBTRIEN_",",.03,"I");.02///^S X=$$PERSON^IBTRH5I(XX);
"KRN",.402,2709,"DR",2,356.2216)
1.12///^S X=$S(IBPSTAT="I":"I",1:"P");S XX=$$SECTDATA^IBTRH5G(IBTRIEN,DA,"SHCRSI","  Service HCRS Information",1);.11////^S X=$P($$GET1^DIQ(356.22,IBTRIEN_",",.07),"-");I $G(WHICH)'=3 S Y="@201";1.01///N4;1.02///@;1.03///@;
"KRN",.402,2709,"DR",2,356.2216,1)
S Y="@202";@201;I $G(INPAT)=1,$G(WHICH)=1 S Y="@2011";1.01Product or Service ID Qualifier~R~//HC;S Y="@2012";@2011;S IBSLVAL=0;1.01Product or Service ID Qualifier~//HC;S IBSLVAL=1;@2012;I X="N4" S Y="@202";1.02Procedure~R~;
"KRN",.402,2709,"DR",2,356.2216,2)
S Y="@203";@202;12.01NDC Code #1~R~;@203;
"KRN",.402,2709,"DR",2,356.223)
S:IBNEW Y="@101";.01Patient Event Diagnosis Type~;@101;.02Patient Event Diagnosis~R~;
"KRN",3.8,435,-1)
0^1
"KRN",3.8,435,0)
IBTR 278 MESSAGE^PU^^^^^
"KRN",3.8,435,2,0)
^3.801^2^2^3151028^^^
"KRN",3.8,435,2,1,0)
This mail group is used to deliver notifications for Healthcare Services 
"KRN",3.8,435,2,2,0)
Review (HCSR) process.
"KRN",3.8,435,3)

"KRN",3.8,447,-1)
0^2
"KRN",3.8,447,0)
IBTUPD MESSAGE^PU^^^^^
"KRN",3.8,447,2,0)
^^2^2^3150917^
"KRN",3.8,447,2,1,0)
This mail group is used to deliver notifications for table/payer update 
"KRN",3.8,447,2,2,0)
HL7 messages.
"KRN",3.8,447,3)

"KRN",19,2568,-1)
2^2
"KRN",19,2568,0)
ZTMQUEUABLE OPTIONS^Parent of Queuable Options^^M^11416^^^^^^^^^
"KRN",19,2568,10,0)
^19.01IP^22^22
"KRN",19,2568,10,22,0)
13562
"KRN",19,2568,10,22,"^")
IBT HCSR NIGHTLY PROCESS
"KRN",19,2568,"U")
PARENT OF QUEUABLE OPTIONS
"KRN",19,4135,-1)
2^6
"KRN",19,4135,0)
IBT USER COMBINED MCCR/UR MENU^Claims Tracking Menu (Combined Functions)^^M^.5^^^^^^^200
"KRN",19,4135,10,0)
^19.01IP^15^11
"KRN",19,4135,10,9,0)
4141^RM^96
"KRN",19,4135,10,9,"^")
IBT OUTPUT MENU
"KRN",19,4135,10,14,0)
13567^HC^99
"KRN",19,4135,10,14,"^")
IBT HCSR RESPONSE VIEW
"KRN",19,4135,10,15,0)
13563^HW^98
"KRN",19,4135,10,15,"^")
IBT HCSR WORKLIST
"KRN",19,4135,"U")
CLAIMS TRACKING MENU (COMBINED
"KRN",19,4141,-1)
2^14
"KRN",19,4141,0)
IBT OUTPUT MENU^Reports Menu (Claims Tracking)^^M^.5^^^^^^^200
"KRN",19,4141,10,0)
^19.01IP^14^14
"KRN",19,4141,10,12,0)
13679^SR^97
"KRN",19,4141,10,12,"^")
IBT 278 STATISTICAL REPORT
"KRN",19,4141,10,13,0)
13680^CR^98
"KRN",19,4141,10,13,"^")
IBT 278 CERTIFICATION REPORT
"KRN",19,4141,10,14,0)
13681^DR^99
"KRN",19,4141,10,14,"^")
IBT 278 DISPOSITION REPORT
"KRN",19,4141,"U")
REPORTS MENU (CLAIMS TRACKING)
"KRN",19,4154,-1)
2^4
"KRN",19,4154,0)
IBT USER MENU (IR)^Claims Tracking Menu (Insurance Reviews)^^M^.5^^^^^^^200
"KRN",19,4154,10,0)
^19.01IP^15^11
"KRN",19,4154,10,8,0)
4141^RM
"KRN",19,4154,10,8,"^")
IBT OUTPUT MENU
"KRN",19,4154,10,14,0)
13563^HW
"KRN",19,4154,10,14,"^")
IBT HCSR WORKLIST
"KRN",19,4154,10,15,0)
13567^HC
"KRN",19,4154,10,15,"^")
IBT HCSR RESPONSE VIEW
"KRN",19,4154,"U")
CLAIMS TRACKING MENU (INSURANC
"KRN",19,13562,-1)
0^1
"KRN",19,13562,0)
IBT HCSR NIGHTLY PROCESS^HCSR NIGHTLY PROCESS^^R^^^^^^^n^INTEGRATED BILLING
"KRN",19,13562,1,0)
^^5^5^3140313^
"KRN",19,13562,1,1,0)
This option should not be placed on any menu or run by any user, it is 
"KRN",19,13562,1,2,0)
designed to be scheduled in TaskMan to be executed once a day during 
"KRN",19,13562,1,3,0)
off-peak hours. This option is nightly task that gathers data for 
"KRN",19,13562,1,4,0)
Healthcare Services Review worklist and stores it in HCS REVIEW 
"KRN",19,13562,1,5,0)
TRANSMISSION file.
"KRN",19,13562,25)
EN^IBTRHDE
"KRN",19,13562,200.9)
y
"KRN",19,13562,"U")
HCSR NIGHTLY PROCESS
"KRN",19,13563,-1)
0^3
"KRN",19,13563,0)
IBT HCSR WORKLIST^Health Care Services Review (HCSR) Worklist^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13563,1,0)
^^1^1^3140319^
"KRN",19,13563,1,1,0)
Healthcare Services Review worklist.
"KRN",19,13563,25)
EN^IBTRH1
"KRN",19,13563,"U")
HEALTH CARE SERVICES REVIEW (H
"KRN",19,13567,-1)
0^5
"KRN",19,13567,0)
IBT HCSR RESPONSE VIEW^Health Care Services Review (HCSR) 278 Response^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13567,1,0)
^19.06^1^1^3150824^^^^
"KRN",19,13567,1,1,0)
Healthcare Services Review 278 response view.
"KRN",19,13567,25)
EN^IBTRH3
"KRN",19,13567,"U")
HEALTH CARE SERVICES REVIEW (H
"KRN",19,13679,-1)
0^20
"KRN",19,13679,0)
IBT 278 STATISTICAL REPORT^278 Statistical Volume Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13679,1,0)
^19.06^16^16^3160414^^^^
"KRN",19,13679,1,1,0)
This report will display a 278 Authorization Certification Report that 
"KRN",19,13679,1,2,0)
includes the following fields:
"KRN",19,13679,1,3,0)
Name of the Payer, UR Nurse who submitted the 278 request or the name of 
"KRN",19,13679,1,4,0)
the patient.
"KRN",19,13679,1,5,0)
Number of 278x217 and 278x215 transactions submitted.
"KRN",19,13679,1,6,0)
Number of Certification Action Code of A1 (Certified in total) received.
"KRN",19,13679,1,7,0)
Number of Certification Action Code of A2 (Certified - partial) received.
"KRN",19,13679,1,8,0)
Number of Certification Action Code of A3 (Not Certified) received.
"KRN",19,13679,1,9,0)
Number of Certification Action Code of A4 (Pended) received.
"KRN",19,13679,1,10,0)
Number of Certification Action Code of A6 (Modified) received.
"KRN",19,13679,1,11,0)
Number of Certification Action Code of C (Cancelled) received.
"KRN",19,13679,1,12,0)
Number of Certification Action Code of CT (Contact Payer) received.
"KRN",19,13679,1,13,0)
Number of Certification Action Code of NA (No Action Required) received.
"KRN",19,13679,1,14,0)
Total numbers of Certification Action Codes.
"KRN",19,13679,1,15,0)
Review Decision Reason Code (Patient Event).
"KRN",19,13679,1,16,0)
Certification Action Code (Patient Event).
"KRN",19,13679,25)
IBTRHRS
"KRN",19,13679,"U")
278 STATISTICAL VOLUME REPORT
"KRN",19,13680,-1)
0^21
"KRN",19,13680,0)
IBT 278 CERTIFICATION REPORT^278 Certification Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13680,25)
IBTRHRC
"KRN",19,13680,"U")
278 CERTIFICATION REPORT
"KRN",19,13681,-1)
0^22
"KRN",19,13681,0)
IBT 278 DISPOSITION REPORT^278 Deletion Disposition Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13681,25)
IBTRHRD
"KRN",19,13681,"U")
278 DELETION DISPOSITION REPOR
"KRN",19.1,599,-1)
0^1
"KRN",19.1,599,0)
IB HCSR PARAM EDIT^EDIT IB HCSR SITE PARAMETERS^^n
"KRN",19.1,599,1,0)
^19.11^2^2^3140307^
"KRN",19.1,599,1,1,0)
This key should be allocated to individuals who may change site 
"KRN",19.1,599,1,2,0)
parameters related to Healthcare Services Review in Claims Tracking.
"KRN",101,647,-1)
0^49
"KRN",101,647,0)
VALM BLANK 1^^^A^^^^^^^^LIST MANAGER
"KRN",101,647,1,0)
^^1^1^2920203^
"KRN",101,647,1,1,0)
This protocol is used to format spaces in menu lists.
"KRN",101,647,10,0)
^101.01PA^0^0
"KRN",101,1143,-1)
0^28
"KRN",101,1143,0)
IBJP CLAIMS TRACKING MENU^Claims Tracking Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,1143,4)
26^4
"KRN",101,1143,10,0)
^101.01PA^7^6
"KRN",101,1143,10,1,0)
1147^TP^1^
"KRN",101,1143,10,1,"^")
IBJP CT TRACKING EDIT
"KRN",101,1143,10,2,0)
1146^RS^3^
"KRN",101,1143,10,2,"^")
IBJP CT RANDOM SAMPLE EDIT
"KRN",101,1143,10,3,0)
1145^GP^5^
"KRN",101,1143,10,3,"^")
IBJP CT GENERAL EDIT
"KRN",101,1143,10,4,0)
1150^EA^2^
"KRN",101,1143,10,4,"^")
IBJP CT EDIT ALL
"KRN",101,1143,10,5,0)
1207^EX^6^
"KRN",101,1143,10,5,"^")
IBJ EXIT
"KRN",101,1143,10,7,0)
4965^HS^4^
"KRN",101,1143,10,7,"^")
IBJP HCSR PARAMETERS EDIT
"KRN",101,1143,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,1143,20)
K IBFASTXT
"KRN",101,1143,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
"KRN",101,1143,26)
D SHOW^VALM
"KRN",101,1143,28)
Select Action: 
"KRN",101,1143,99)
63439,41978
"KRN",101,1145,-1)
0^83
"KRN",101,1145,0)
IBJP CT GENERAL EDIT^General^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1145,4)
^^^
"KRN",101,1145,15)

"KRN",101,1145,20)
D CTEDIT^IBJPC(3)
"KRN",101,1145,24)
I $D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ))
"KRN",101,1145,99)
56383,55898
"KRN",101,1146,-1)
0^84
"KRN",101,1146,0)
IBJP CT RANDOM SAMPLE EDIT^Random Sample^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1146,4)
^^^
"KRN",101,1146,15)

"KRN",101,1146,20)
D CTEDIT^IBJPC(2)
"KRN",101,1146,24)
I $D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ))
"KRN",101,1146,99)
56383,55851
"KRN",101,1147,-1)
0^85
"KRN",101,1147,0)
IBJP CT TRACKING EDIT^Tracking^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1147,4)
^^^
"KRN",101,1147,15)

"KRN",101,1147,20)
D CTEDIT^IBJPC(1)
"KRN",101,1147,24)
I $D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ))
"KRN",101,1147,99)
56383,55874
"KRN",101,1150,-1)
0^86
"KRN",101,1150,0)
IBJP CT EDIT ALL^Edit All^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1150,4)
^^^
"KRN",101,1150,15)

"KRN",101,1150,20)
D CTEDIT^IBJPC(0)
"KRN",101,1150,24)
I $D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ))
"KRN",101,1150,99)
56385,58892
"KRN",101,1207,-1)
0^36
"KRN",101,1207,0)
IBJ EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1207,20)
D FASTEXIT^IBJU1
"KRN",101,1207,99)
63008,40681
"KRN",101,4926,-1)
0^1
"KRN",101,4926,0)
IBJP HCSR CLINICS EDIT^Clinics^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4926,1,0)
^101.06^1^1^3140716^^^^
"KRN",101,4926,1,1,0)
Edit list of clinics for HCS Review.
"KRN",101,4926,15)
D INIT^IBJPC2
"KRN",101,4926,20)
D EN^IBJPC1(1)
"KRN",101,4926,24)
I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ))
"KRN",101,4926,99)
63343,35337
"KRN",101,4927,-1)
0^2
"KRN",101,4927,0)
IBJP HCSR WARDS EDIT^Wards^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4927,1,0)
^101.06^1^1^3140716^^^^
"KRN",101,4927,1,1,0)
Edit list of wards for HCS Review.
"KRN",101,4927,15)
D INIT^IBJPC2
"KRN",101,4927,20)
D EN^IBJPC1(2)
"KRN",101,4927,24)
I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ))
"KRN",101,4927,99)
63343,35358
"KRN",101,4928,-1)
0^3
"KRN",101,4928,0)
IBJP HCSR ADM INSCO EDIT^Adm Ins^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4928,1,0)
^101.06^1^1^3150107^^^^
"KRN",101,4928,1,1,0)
Edit list of insurance companies for HCS Review Admissions search.
"KRN",101,4928,2,0)
^101.02A^^0
"KRN",101,4928,10,0)
^101.01PA^^0
"KRN",101,4928,15)
D INIT^IBJPC2
"KRN",101,4928,20)
D EN^IBJPC1(3)
"KRN",101,4928,24)
I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ))
"KRN",101,4928,99)
63343,35266
"KRN",101,4929,-1)
0^4
"KRN",101,4929,0)
IBJP HCSR APPT INSCO EDIT^Appt Ins^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4929,1,0)
^101.06^1^1^3140716^^^
"KRN",101,4929,1,1,0)
Edit list of insurance companies for HCS Review Appointments search.
"KRN",101,4929,15)
D INIT^IBJPC2
"KRN",101,4929,20)
D EN^IBJPC1(4)
"KRN",101,4929,24)
I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ))
"KRN",101,4929,99)
63343,35311
"KRN",101,4930,-1)
0^5
"KRN",101,4930,0)
IBJP HCSR CLINIC ADD^Add Clinic^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4930,1,0)
^101.06^1^1^3140605^^^
"KRN",101,4930,1,1,0)
Add clinic to HCSR list.
"KRN",101,4930,20)
D ADD^IBJPC1(1)
"KRN",101,4930,99)
63253,54507
"KRN",101,4931,-1)
0^6
"KRN",101,4931,0)
IBJP HCSR CLINIC DEL^Delete Clinic^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4931,1,0)
^101.06^1^1^3140605^^^
"KRN",101,4931,1,1,0)
Delete clinic from HCSR list.
"KRN",101,4931,20)
D DEL^IBJPC1(1)
"KRN",101,4931,99)
63253,54593
"KRN",101,4932,-1)
0^7
"KRN",101,4932,0)
IBJP HCSR WARD ADD^Add Ward^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4932,1,0)
^101.06^1^1^3140605^^^^
"KRN",101,4932,1,1,0)
Add ward to HCSR list.
"KRN",101,4932,20)
D ADD^IBJPC1(2)
"KRN",101,4932,99)
63255,48684
"KRN",101,4933,-1)
0^8
"KRN",101,4933,0)
IBJP HCSR WARD DEL^Delete Ward^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4933,1,0)
^101.06^1^1^3140605^^^
"KRN",101,4933,1,1,0)
Delete ward from HCSR list.
"KRN",101,4933,20)
D DEL^IBJPC1(2)
"KRN",101,4933,99)
63255,48763
"KRN",101,4934,-1)
0^32
"KRN",101,4934,0)
IBJP HCSR ADM INSCO ADD^Add Ins^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4934,1,0)
^101.06^1^1^3150107^^^
"KRN",101,4934,1,1,0)
Add insurance company to HCSR Admissions Search list.
"KRN",101,4934,20)
D ADD^IBJPC1(3)
"KRN",101,4934,99)
63344,24765
"KRN",101,4935,-1)
0^33
"KRN",101,4935,0)
IBJP HCSR ADM INSCO DEL^Delete Ins^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4935,1,0)
^101.06^1^1^3140605^^
"KRN",101,4935,1,1,0)
Delete insurance company from HCSR Admissions Search list.
"KRN",101,4935,20)
D DEL^IBJPC1(3)
"KRN",101,4935,99)
63344,24794
"KRN",101,4936,-1)
0^34
"KRN",101,4936,0)
IBJP HCSR APPT INSCO ADD^Add Ins^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4936,1,0)
^101.06^1^1^3140605^^^
"KRN",101,4936,1,1,0)
Add insurance company to HCSR Appointments Search list.
"KRN",101,4936,20)
D ADD^IBJPC1(4)
"KRN",101,4936,99)
63344,24815
"KRN",101,4937,-1)
0^35
"KRN",101,4937,0)
IBJP HCSR APPT INSCO DEL^Delete Ins^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4937,1,0)
^101.06^1^1^3140605^^
"KRN",101,4937,1,1,0)
Delete insurance company from HCSR Appointments Search list.
"KRN",101,4937,20)
D DEL^IBJPC1(4)
"KRN",101,4937,99)
63344,24846
"KRN",101,4938,-1)
0^9
"KRN",101,4938,0)
IBJP HCSR CLINICS MENU^HCSR Clinics Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4938,4)
26^4
"KRN",101,4938,10,0)
^101.01PA^5^5
"KRN",101,4938,10,1,0)
4930^AC^1^
"KRN",101,4938,10,1,"^")
IBJP HCSR CLINIC ADD
"KRN",101,4938,10,2,0)
4931^DL^2^
"KRN",101,4938,10,2,"^")
IBJP HCSR CLINIC DEL
"KRN",101,4938,10,3,0)
1207^EX^5^
"KRN",101,4938,10,3,"^")
IBJ EXIT
"KRN",101,4938,10,4,0)
5090^AP^3^
"KRN",101,4938,10,4,"^")
IBJP HCSR CLINIC ADD PAYER
"KRN",101,4938,10,5,0)
5091^DP^4^
"KRN",101,4938,10,5,"^")
IBJP HCSR CLINIC DEL PAYER
"KRN",101,4938,26)
D SHOW^VALM
"KRN",101,4938,28)
Select Action: 
"KRN",101,4938,99)
63718,55073
"KRN",101,4939,-1)
0^10
"KRN",101,4939,0)
IBJP HCSR WARDS MENU^HCSR Wards Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4939,4)
26^4
"KRN",101,4939,10,0)
^101.01PA^5^5
"KRN",101,4939,10,1,0)
4932^AW^1^
"KRN",101,4939,10,1,"^")
IBJP HCSR WARD ADD
"KRN",101,4939,10,2,0)
4933^DW^2^
"KRN",101,4939,10,2,"^")
IBJP HCSR WARD DEL
"KRN",101,4939,10,3,0)
1207^EX^5^
"KRN",101,4939,10,3,"^")
IBJ EXIT
"KRN",101,4939,10,4,0)
5092^AP^3^
"KRN",101,4939,10,4,"^")
IBJP HCSR WARD ADD PAYER
"KRN",101,4939,10,5,0)
5093^DP^4^
"KRN",101,4939,10,5,"^")
IBJP HCSR WARD DEL PAYER
"KRN",101,4939,26)
D SHOW^VALM
"KRN",101,4939,28)
 Select Action: 
"KRN",101,4939,99)
63718,58458
"KRN",101,4940,-1)
0^11
"KRN",101,4940,0)
IBJP HCSR ADM INSCO MENU^HCSR Admissions Ins. Co. Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4940,4)
26^4
"KRN",101,4940,10,0)
^101.01PA^3^3
"KRN",101,4940,10,1,0)
4934^AI^1^
"KRN",101,4940,10,1,"^")
IBJP HCSR ADM INSCO ADD
"KRN",101,4940,10,2,0)
4935^DI^2^
"KRN",101,4940,10,2,"^")
IBJP HCSR ADM INSCO DEL
"KRN",101,4940,10,3,0)
1207^EX^3^
"KRN",101,4940,10,3,"^")
IBJ EXIT
"KRN",101,4940,26)
D SHOW^VALM
"KRN",101,4940,28)
Select Action: 
"KRN",101,4940,99)
63792,62216
"KRN",101,4941,-1)
0^12
"KRN",101,4941,0)
IBJP HCSR APPT INSCO MENU^HCSR Appointments Ins. Co. Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4941,4)
26^4
"KRN",101,4941,10,0)
^101.01PA^3^3
"KRN",101,4941,10,1,0)
4936^AI^1^
"KRN",101,4941,10,1,"^")
IBJP HCSR APPT INSCO ADD
"KRN",101,4941,10,2,0)
4937^DI^2^
"KRN",101,4941,10,2,"^")
IBJP HCSR APPT INSCO DEL
"KRN",101,4941,10,3,0)
1207^EX^3^
"KRN",101,4941,10,3,"^")
IBJ EXIT
"KRN",101,4941,26)
D SHOW^VALM
"KRN",101,4941,28)
Select Action: 
"KRN",101,4941,99)
63344,25103
"KRN",101,4942,-1)
0^13
"KRN",101,4942,0)
IBT HCSR WORKLIST MENU^HCSR Worklist Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4942,4)
25^3
"KRN",101,4942,10,0)
^101.01PA^15^12
"KRN",101,4942,10,1,0)
4943^ST^60^^^
"KRN",101,4942,10,1,"^")
IBT HCSR LIST SORT
"KRN",101,4942,10,2,0)
4945^EE^20^
"KRN",101,4942,10,2,"^")
IBT HCSR EXPAND ENTRY
"KRN",101,4942,10,3,0)
4944^DE^10^
"KRN",101,4942,10,3,"^")
IBT HCSR LIST DEL
"KRN",101,4942,10,4,0)
1207^EX^80^
"KRN",101,4942,10,4,"^")
IBJ EXIT
"KRN",101,4942,10,5,0)
4974^AC^50^
"KRN",101,4942,10,5,"^")
IBT HCSR ADD COMMENT WORKLIST
"KRN",101,4942,10,7,0)
4950^SP^90^
"KRN",101,4942,10,7,"^")
IBT HCSR IN PROGRESS SET
"KRN",101,4942,10,8,0)
4951^RP^100^
"KRN",101,4942,10,8,"^")
IBT HCSR IN PROGRESS REM
"KRN",101,4942,10,10,0)
4966^PR^110^
"KRN",101,4942,10,10,"^")
IBT HCSR RESPONSE EDIT
"KRN",101,4942,10,11,0)
4970^RL^40^
"KRN",101,4942,10,11,"^")
IBT HCSR REFRESH
"KRN",101,4942,10,12,0)
4971^NR^70^
"KRN",101,4942,10,12,"^")
IBT HCSR NEXT REVIEW
"KRN",101,4942,10,14,0)
5127^AE^30^
"KRN",101,4942,10,14,"^")
IBT HCSR MANUAL 278 REQUEST
"KRN",101,4942,10,15,0)
647^^120^
"KRN",101,4942,10,15,"^")
VALM BLANK 1
"KRN",101,4942,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4942,20)
K IBFASTXT
"KRN",101,4942,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
"KRN",101,4942,26)
D SHOW^VALM
"KRN",101,4942,28)
Select Action: 
"KRN",101,4942,29)

"KRN",101,4942,99)
63812,1503
"KRN",101,4943,-1)
0^14
"KRN",101,4943,0)
IBT HCSR LIST SORT^Sort^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4943,20)
D SORT^IBTRH1
"KRN",101,4943,99)
63497,42477
"KRN",101,4944,-1)
0^15
"KRN",101,4944,0)
IBT HCSR LIST DEL^Remove Entry^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4944,15)
D INIT^IBTRH1
"KRN",101,4944,20)
D DEL^IBTRH1
"KRN",101,4944,99)
63265,64012
"KRN",101,4945,-1)
0^16
"KRN",101,4945,0)
IBT HCSR EXPAND ENTRY^Expand Entry^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4945,15)
D INIT^IBTRH1
"KRN",101,4945,20)
D EN^IBTRH2
"KRN",101,4945,99)
63265,64123
"KRN",101,4946,-1)
0^17
"KRN",101,4946,0)
IBT HCSR ENTRY MENU^HCSR Expanded Entry Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4946,4)
26^3
"KRN",101,4946,10,0)
^101.01PA^13^12
"KRN",101,4946,10,1,0)
4947^SR^10^^^(Send 278 Req Full)
"KRN",101,4946,10,1,"^")
IBT HCSR SEND 278 REQUEST
"KRN",101,4946,10,2,0)
4948^CR^30^^^(Copy 278 Request)
"KRN",101,4946,10,2,"^")
IBT HCSR COPY 278 REQUEST
"KRN",101,4946,10,3,0)
4949^AC^60^
"KRN",101,4946,10,3,"^")
IBT HCSR ADD COMMENT
"KRN",101,4946,10,4,0)
4977^SP^90^^^Set 'In Progress'
"KRN",101,4946,10,4,"^")
IBT HCSR IN PROGRESS EE SET
"KRN",101,4946,10,5,0)
4976^RP^100^^^Remove 'In Progress'
"KRN",101,4946,10,5,"^")
IBT HCSR IN PROGRESS EE REM
"KRN",101,4946,10,6,0)
4979^SI^70^
"KRN",101,4946,10,6,"^")
IBT HCSR SEND 278 INQUIRY
"KRN",101,4946,10,7,0)
1207^EX^40^
"KRN",101,4946,10,7,"^")
IBJ EXIT
"KRN",101,4946,10,9,0)
4984^DP^50^^^View Pending Resp
"KRN",101,4946,10,9,"^")
IBT HCSR VIEW PENDING RESPONSE
"KRN",101,4946,10,10,0)
5008^SS^20^^^Send 278 Req Brief
"KRN",101,4946,10,10,"^")
IBT HCSR SEND 278 REQUEST SHORT
"KRN",101,4946,10,11,0)
5131^VR^110^^^View Sent Request
"KRN",101,4946,10,11,"^")
IBT HCSR VIEW X12 MESSAGE
"KRN",101,4946,10,12,0)
647^^80^
"KRN",101,4946,10,12,"^")
VALM BLANK 1
"KRN",101,4946,10,13,0)
5048^^120^
"KRN",101,4946,10,13,"^")
VALM BLANK 2
"KRN",101,4946,26)
D SHOW^VALM
"KRN",101,4946,28)
Select Action: 
"KRN",101,4946,99)
64013,47486
"KRN",101,4947,-1)
0^18
"KRN",101,4947,0)
IBT HCSR SEND 278 REQUEST^Send 278 Request^This action is not currently available.^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4947,20)
D SEND278^IBTRH2
"KRN",101,4947,99)
63265,64725
"KRN",101,4948,-1)
0^73
"KRN",101,4948,0)
IBT HCSR COPY 278 REQUEST^Copy 278 Request^This action is not currently available.^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4948,20)
D COPY278^IBTRH2A
"KRN",101,4948,99)
63265,64828
"KRN",101,4949,-1)
0^20
"KRN",101,4949,0)
IBT HCSR ADD COMMENT^Add Comment^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4949,20)
D ADDCMT^IBTRH2
"KRN",101,4949,99)
63265,64890
"KRN",101,4950,-1)
0^22
"KRN",101,4950,0)
IBT HCSR IN PROGRESS SET^Set 'In Progress'^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4950,10,0)
^101.01PA
"KRN",101,4950,20)
D PRMARK^IBTRH1(1)
"KRN",101,4950,99)
63538,31374
"KRN",101,4951,-1)
0^23
"KRN",101,4951,0)
IBT HCSR IN PROGRESS REM^Remove 'In Progress'^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4951,20)
D PRMARK^IBTRH1(0)
"KRN",101,4951,99)
63538,31342
"KRN",101,4959,-1)
0^66
"KRN",101,4959,0)
IBTR HCSR OUT^HCSR client^^E^^^^^^^^
"KRN",101,4959,1,0)
^101.06^1^1^3150520^^^^
"KRN",101,4959,1,1,0)
This is event driver protocol for HCSR requests.
"KRN",101,4959,99)
63322,47578
"KRN",101,4959,770)
IB HCSR VISTA^^RQA^I08^^P^^AL^NE^2.5^
"KRN",101,4959,772)
D EN^IBTRHLI
"KRN",101,4959,775,0)
^101.0775PA^1^1
"KRN",101,4959,775,1,0)
4960
"KRN",101,4959,775,1,"^")
IBTR HCSR INQUIRY
"KRN",101,4960,-1)
0^26
"KRN",101,4960,0)
IBTR HCSR INQUIRY^HCSR inquiry^^S^^^^^^^^
"KRN",101,4960,1,0)
^101.06^1^1^3151008^^^^
"KRN",101,4960,1,1,0)
This is subscriber protocol for HCSR requests.
"KRN",101,4960,99)
63322,47955
"KRN",101,4960,770)
^IB HCSR EC^RQA^I08^^^HCSR OUT^^^2.5^ACK
"KRN",101,4960,771)
Q
"KRN",101,4960,773)
1^1^0
"KRN",101,4961,-1)
0^65
"KRN",101,4961,0)
IBTR HCSR IN^HCSR Server^^E^^^^^^^^
"KRN",101,4961,1,0)
^101.06^1^1^3151207^^^^
"KRN",101,4961,1,1,0)
This is event driver protocol for incoming HCSR messages.
"KRN",101,4961,99)
63322,49786
"KRN",101,4961,770)
IB HCSR EC^IB HCSR VISTA^RPA^I08^^P^^^^2.5^
"KRN",101,4961,772)
D EN^IBTRHLI
"KRN",101,4961,775,0)
^101.0775PA^1^1
"KRN",101,4961,775,1,0)
4962
"KRN",101,4961,775,1,"^")
IBTR HCSR RESPONSE
"KRN",101,4962,-1)
0^27
"KRN",101,4962,0)
IBTR HCSR RESPONSE^HCSR response message^^S^^^^^^^^
"KRN",101,4962,1,0)
^101.06^1^1^3151208^^^^
"KRN",101,4962,1,1,0)
This is subscriber protocol for HCSR responses.
"KRN",101,4962,99)
63322,49917
"KRN",101,4962,770)
IB HCSR EC^IB HCSR VISTA^RPA^I08^^^HCSR OUT^^^2.5^RPA
"KRN",101,4962,771)
D EN^IBTRHLI
"KRN",101,4962,773)
1^1^0
"KRN",101,4963,-1)
0^30
"KRN",101,4963,0)
IBJP HCSR PARAMETERS MENU^IBJP HCSR PARAMETERS MENU^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4963,4)
26^4
"KRN",101,4963,10,0)
^101.01PA^6^6
"KRN",101,4963,10,1,0)
4926^HC^1^
"KRN",101,4963,10,1,"^")
IBJP HCSR CLINICS EDIT
"KRN",101,4963,10,2,0)
4927^HW^3^
"KRN",101,4963,10,2,"^")
IBJP HCSR WARDS EDIT
"KRN",101,4963,10,3,0)
4964^OP^5^
"KRN",101,4963,10,3,"^")
IBJP HCSR OTHER EDIT
"KRN",101,4963,10,4,0)
4928^HA^2^
"KRN",101,4963,10,4,"^")
IBJP HCSR ADM INSCO EDIT
"KRN",101,4963,10,5,0)
4929^HI^4^
"KRN",101,4963,10,5,"^")
IBJP HCSR APPT INSCO EDIT
"KRN",101,4963,10,6,0)
1207^EX^6^
"KRN",101,4963,10,6,"^")
IBJ EXIT
"KRN",101,4963,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4963,20)
K IBFASTXT
"KRN",101,4963,24)
I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ))
"KRN",101,4963,26)
D SHOW^VALM
"KRN",101,4963,28)
Select Action: 
"KRN",101,4963,99)
63664,35286
"KRN",101,4964,-1)
0^31
"KRN",101,4964,0)
IBJP HCSR OTHER EDIT^Other^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4964,1,0)
^101.06^1^1^3140716^^
"KRN",101,4964,1,1,0)
Edit HCSR Parameters
"KRN",101,4964,15)
D INIT^IBJPC2
"KRN",101,4964,20)
D OP^IBJPC2
"KRN",101,4964,24)
I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ))
"KRN",101,4964,99)
63384,36512
"KRN",101,4965,-1)
0^29
"KRN",101,4965,0)
IBJP HCSR PARAMETERS EDIT^HCSR^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4965,15)
D INIT^IBJPC
"KRN",101,4965,20)
D EN^IBJPC2
"KRN",101,4965,24)
I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ))
"KRN",101,4965,99)
63384,38311
"KRN",101,4966,-1)
0^37
"KRN",101,4966,0)
IBT HCSR RESPONSE EDIT^HCSR Response WL^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4966,15)
D INIT^IBTRH1
"KRN",101,4966,20)
D RESPWR^IBTRH1B
"KRN",101,4966,99)
63509,23304
"KRN",101,4967,-1)
0^39
"KRN",101,4967,0)
IBT HCSR RESPONSE EXPAND ENTRY^Expand Entry^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4967,10,0)
^101.01PA
"KRN",101,4967,15)
D INIT^IBTRH5
"KRN",101,4967,20)
D EN2^IBTRH3
"KRN",101,4967,99)
63386,29700
"KRN",101,4968,-1)
0^38
"KRN",101,4968,0)
IBT HCSR RESPONSE LIST SORT^Sort^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4968,20)
D SORT^IBTRH5
"KRN",101,4968,99)
63497,42558
"KRN",101,4969,-1)
0^44
"KRN",101,4969,0)
IBT HCSR RESPONSE MENU^HCSR Response Worklist Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4969,2,0)
^101.02A^^0
"KRN",101,4969,4)
26^4
"KRN",101,4969,10,0)
^101.01PA^14^9
"KRN",101,4969,10,1,0)
4967^EE^2^
"KRN",101,4969,10,1,"^")
IBT HCSR RESPONSE EXPAND ENTRY
"KRN",101,4969,10,2,0)
4968^ST^4^
"KRN",101,4969,10,2,"^")
IBT HCSR RESPONSE LIST SORT
"KRN",101,4969,10,3,0)
4972^RL^5^
"KRN",101,4969,10,3,"^")
IBT HCSR RESPONSE REFRESH
"KRN",101,4969,10,4,0)
1207^EX^8^
"KRN",101,4969,10,4,"^")
IBJ EXIT
"KRN",101,4969,10,7,0)
4975^NR^3^
"KRN",101,4969,10,7,"^")
IBT HCSR RESPONSE NEXT REVIEW
"KRN",101,4969,10,12,0)
5050^SP^6^
"KRN",101,4969,10,12,"^")
IBT HCSR RESPONSE IN PROGRESS SET
"KRN",101,4969,10,13,0)
5049^RP^7^
"KRN",101,4969,10,13,"^")
IBT HCSR RESPONSE IN PROGRESS REM
"KRN",101,4969,10,14,0)
5058^DE^1^
"KRN",101,4969,10,14,"^")
IBT HCSR RESPONSE LIST DEL
"KRN",101,4969,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4969,20)
K IBFASTXT
"KRN",101,4969,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
"KRN",101,4969,26)
D SHOW^VALM
"KRN",101,4969,28)
Select Action: 
"KRN",101,4969,29)

"KRN",101,4969,99)
63614,57072
"KRN",101,4970,-1)
0^47
"KRN",101,4970,0)
IBT HCSR REFRESH^Refresh^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4970,15)

"KRN",101,4970,20)
D REFRESH^IBTRH1A
"KRN",101,4970,99)
63411,30981
"KRN",101,4971,-1)
0^50
"KRN",101,4971,0)
IBT HCSR NEXT REVIEW^Next Review Date^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4971,15)
D INIT^IBTRH1
"KRN",101,4971,20)
D DELAY^IBTRH1B
"KRN",101,4971,99)
63442,23102
"KRN",101,4972,-1)
0^51
"KRN",101,4972,0)
IBT HCSR RESPONSE REFRESH^Refresh^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4972,20)
D REFRESH^IBTRH5
"KRN",101,4972,99)
63438,25815
"KRN",101,4974,-1)
0^53
"KRN",101,4974,0)
IBT HCSR ADD COMMENT WORKLIST^Add Comment^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4974,20)
D ADDCMT^IBTRH1
"KRN",101,4974,99)
63448,46040
"KRN",101,4975,-1)
0^54
"KRN",101,4975,0)
IBT HCSR RESPONSE NEXT REVIEW^Next Review Date^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4975,20)
D DELAY^IBTRH5
"KRN",101,4975,99)
63449,24195
"KRN",101,4976,-1)
0^55
"KRN",101,4976,0)
IBT HCSR IN PROGRESS EE REM^Remove 'In Progress' Mark^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4976,20)
D PRMARK^IBTRH2(0)
"KRN",101,4976,99)
63455,29951
"KRN",101,4977,-1)
0^56
"KRN",101,4977,0)
IBT HCSR IN PROGRESS EE SET^Set 'In Progress' Mark^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4977,20)
D PRMARK^IBTRH2(1)
"KRN",101,4977,99)
63455,30082
"KRN",101,4979,-1)
0^58
"KRN",101,4979,0)
IBT HCSR SEND 278 INQUIRY^Send 278 Inquiry^^A^^^^^^^^
"KRN",101,4979,20)
D SEND215^IBTRH2B
"KRN",101,4979,99)
63504,45346
"KRN",101,4980,-1)
0^60
"KRN",101,4980,0)
IBT HCSR SEND 278 SHORT^Send 278 Request^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4980,20)
D SEND278^IBTRH6
"KRN",101,4980,99)
63496,51396
"KRN",101,4981,-1)
0^59
"KRN",101,4981,0)
IBT HCSR SEND 278 ADD DATA^Add Data^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4981,20)
D DATA^IBTRH6
"KRN",101,4981,99)
63496,51487
"KRN",101,4982,-1)
0^61
"KRN",101,4982,0)
IBT HCSR SEND 278 SHORT MENU^Send 278 Short Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4982,4)
26^4
"KRN",101,4982,10,0)
^101.01PA^3^3
"KRN",101,4982,10,1,0)
4980^SR^1^
"KRN",101,4982,10,1,"^")
IBT HCSR SEND 278 SHORT
"KRN",101,4982,10,2,0)
4981^AD^2^
"KRN",101,4982,10,2,"^")
IBT HCSR SEND 278 ADD DATA
"KRN",101,4982,10,3,0)
1207^EX^3^
"KRN",101,4982,10,3,"^")
IBJ EXIT
"KRN",101,4982,15)

"KRN",101,4982,20)

"KRN",101,4982,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
"KRN",101,4982,26)
D SHOW^VALM
"KRN",101,4982,28)
Select Action: 
"KRN",101,4982,99)
63497,38327
"KRN",101,4983,-1)
0^62
"KRN",101,4983,0)
IBT HCSR RESPONSE VIEW MENU^HCSR Response View Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4983,.1)
 
"KRN",101,4983,2,0)
^101.02A^1^1
"KRN",101,4983,2,1,0)
EX
"KRN",101,4983,2,"B","EX",1)

"KRN",101,4983,4)
26^4
"KRN",101,4983,10,0)
^101.01PA^8^6
"KRN",101,4983,10,1,0)
1207^EX^60^
"KRN",101,4983,10,1,"^")
IBJ EXIT
"KRN",101,4983,10,4,0)
5057^SR^10^^^(Send 278 Request)
"KRN",101,4983,10,4,"^")
IBT HCSR RESPONSE EE SEND278
"KRN",101,4983,10,5,0)
5051^RP^30^
"KRN",101,4983,10,5,"^")
IBT HCSR RESPONSE IN PROGRESS EE REM
"KRN",101,4983,10,6,0)
5052^SP^20^
"KRN",101,4983,10,6,"^")
IBT HCSR RESPONSE IN PROGRESS EE SET
"KRN",101,4983,10,7,0)
5131^VR^40^^^View Sent Request
"KRN",101,4983,10,7,"^")
IBT HCSR VIEW X12 MESSAGE
"KRN",101,4983,10,8,0)
647^^50^
"KRN",101,4983,10,8,"^")
VALM BLANK 1
"KRN",101,4983,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4983,20)
K IBFASTXT
"KRN",101,4983,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
"KRN",101,4983,26)
D SHOW^VALM
"KRN",101,4983,28)
Select Action: 
"KRN",101,4983,99)
64013,59854
"KRN",101,4984,-1)
0^63
"KRN",101,4984,0)
IBT HCSR VIEW PENDING RESPONSE^View Pending Response^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4984,10,0)
^101.01PA^^0
"KRN",101,4984,15)

"KRN",101,4984,20)
D EN3^IBTRH3
"KRN",101,4984,99)
63508,47069
"KRN",101,5008,-1)
0^64
"KRN",101,5008,0)
IBT HCSR SEND 278 REQUEST SHORT^Send 278 Request Short^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5008,20)
D EN^IBTRH6
"KRN",101,5008,99)
63520,48167
"KRN",101,5048,-1)
0^82
"KRN",101,5048,0)
VALM BLANK 2^^^A^^^^^^^^LIST MANAGER
"KRN",101,5048,1,0)
^^1^1^3141217^
"KRN",101,5048,1,1,0)
This protocol is used to format spaces in menu lists.
"KRN",101,5049,-1)
0^67
"KRN",101,5049,0)
IBT HCSR RESPONSE IN PROGRESS REM^Remove 'In Progress'^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5049,20)
D PRMARK^IBTRH1(0,"","IBTRH5IX")
"KRN",101,5049,99)
63538,47508
"KRN",101,5050,-1)
0^68
"KRN",101,5050,0)
IBT HCSR RESPONSE IN PROGRESS SET^Set 'In Progress'^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5050,20)
D PRMARK^IBTRH1(1,"","IBTRH5IX")
"KRN",101,5050,99)
63538,47473
"KRN",101,5051,-1)
0^69
"KRN",101,5051,0)
IBT HCSR RESPONSE IN PROGRESS EE REM^Remove 'In Progress'^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5051,20)
D PRMARK^IBTRH3(0)
"KRN",101,5051,99)
63538,47528
"KRN",101,5052,-1)
0^70
"KRN",101,5052,0)
IBT HCSR RESPONSE IN PROGRESS EE SET^Set 'In Progress'^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5052,20)
D PRMARK^IBTRH3(1)
"KRN",101,5052,99)
63538,47545
"KRN",101,5057,-1)
0^71
"KRN",101,5057,0)
IBT HCSR RESPONSE EE SEND278^Send 278 Request^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5057,20)
D SEND278^IBTRH5(IBTRIEN)
"KRN",101,5057,99)
63565,37382
"KRN",101,5058,-1)
0^72
"KRN",101,5058,0)
IBT HCSR RESPONSE LIST DEL^Remove Entry^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5058,15)
D INIT^IBTRH5
"KRN",101,5058,20)
D DEL^IBTRH5
"KRN",101,5058,99)
63601,27666
"KRN",101,5090,-1)
0^74
"KRN",101,5090,0)
IBJP HCSR CLINIC ADD PAYER^Add Payer to Clinic^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5090,1,0)
^^1^1^3150516^
"KRN",101,5090,1,1,0)
Add payer to clinic for inclusion in HCSR search.
"KRN",101,5090,20)
D ADDPYR^IBJPC3(1)
"KRN",101,5090,99)
63688,55149
"KRN",101,5091,-1)
0^75
"KRN",101,5091,0)
IBJP HCSR CLINIC DEL PAYER^Delete Payer from Clinic^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5091,1,0)
^101.06^1^1^3150516^^
"KRN",101,5091,1,1,0)
Delete payer from clinic for inclusion in HCSR search.
"KRN",101,5091,20)
D DELPYR^IBJPC3(1)
"KRN",101,5091,99)
63688,55307
"KRN",101,5092,-1)
0^76
"KRN",101,5092,0)
IBJP HCSR WARD ADD PAYER^Add Payer to Ward^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5092,1,0)
^^1^1^3150516^
"KRN",101,5092,1,1,0)
Add payer to ward for exclusion from HCSR search.
"KRN",101,5092,20)
D ADDPYR^IBJPC3(2)
"KRN",101,5092,99)
63688,55474
"KRN",101,5093,-1)
0^77
"KRN",101,5093,0)
IBJP HCSR WARD DEL PAYER^Delete Payer from Ward^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5093,1,0)
^^1^1^3150516^
"KRN",101,5093,1,1,0)
Delete payer from ward for exclusion from HCSR search.
"KRN",101,5093,20)
D DELPYR^IBJPC3(2)
"KRN",101,5093,99)
63688,55593
"KRN",101,5127,-1)
0^80
"KRN",101,5127,0)
IBT HCSR MANUAL 278 REQUEST^Add Entry^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,5127,4)
^^^
"KRN",101,5127,15)

"KRN",101,5127,20)
D EN^IBTRH7
"KRN",101,5127,99)
63783,53921
"KRN",101,5131,-1)
0^81
"KRN",101,5131,0)
IBT HCSR VIEW X12 MESSAGE^View X12 Message^^A^^^^^^^^
"KRN",101,5131,20)
D EN^IBTRH8
"KRN",101,5131,99)
63811,66073
"KRN",101,5132,-1)
0^79
"KRN",101,5132,0)
IB TABLE UPDATE^Table update message^^S^^^^^^^^
"KRN",101,5132,1,0)
^^1^1^3150917^
"KRN",101,5132,1,1,0)
This is subscriber protocol for table updates.
"KRN",101,5132,99)
63812,65466
"KRN",101,5132,770)
^IB TABLE UPDATE VISTA^MFN^M01^^^IBTUPD OUT^^^2.4^ACK
"KRN",101,5132,771)
D ^IBMFNHLI
"KRN",101,5133,-1)
0^78
"KRN",101,5133,0)
IB TBLUPD IN^Table update server^^E^^^^^^^^
"KRN",101,5133,1,0)
^^1^1^3150917^
"KRN",101,5133,1,1,0)
This is event driver protocol for incoming table update messages.
"KRN",101,5133,99)
63812,65584
"KRN",101,5133,770)
IB TABLE UPDATE FSC^^MFN^M01^^^^^^2.4^
"KRN",101,5133,772)
D ^IBMFNHLI
"KRN",101,5133,775,0)
^101.0775PA^1^1
"KRN",101,5133,775,1,0)
5132
"KRN",101,5133,775,1,"^")
IB TABLE UPDATE
"KRN",409.61,95,-1)
0^10
"KRN",409.61,95,0)
IBT CLAIMS TRACKING EDITOR^1^^138^5^16^1^1^Visit^IBTRE  MENU^Claims Tracking Editor^2^999^1
"KRN",409.61,95,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,95,"ARRAY")
 ^TMP("IBTRE",$J)
"KRN",409.61,95,"COL",0)
^409.621^14^14
"KRN",409.61,95,"COL",1,0)
NUMBER^1^4
"KRN",409.61,95,"COL",2,0)
TYPE^5^8^Type
"KRN",409.61,95,"COL",3,0)
DATE^23^16^Date^^1
"KRN",409.61,95,"COL",4,0)
INSUR^40^5^Ins.
"KRN",409.61,95,"COL",5,0)
UR^46^5^UR
"KRN",409.61,95,"COL",6,0)
BILLABLE^66^5^Bill
"KRN",409.61,95,"COL",7,0)
SPECIAL^125^11^Spec. Bill
"KRN",409.61,95,"COL",8,0)
DIAGNOSIS^81^8^Diag.
"KRN",409.61,95,"COL",9,0)
PRECERT^90^12^Auth. No.
"KRN",409.61,95,"COL",10,0)
DAYS^104^10^Days Apprv
"KRN",409.61,95,"COL",11,0)
INITIAL^116^7^Bill No.
"KRN",409.61,95,"COL",12,0)
URGENT^15^7^Urgent
"KRN",409.61,95,"COL",13,0)
ROI^52^12^ROI
"KRN",409.61,95,"COL",14,0)
WARD^72^8^Ward
"KRN",409.61,95,"COL","AIDENT",1,3)

"KRN",409.61,95,"COL","B","BILLABLE",6)

"KRN",409.61,95,"COL","B","DATE",3)

"KRN",409.61,95,"COL","B","DAYS",10)

"KRN",409.61,95,"COL","B","DIAGNOSIS",8)

"KRN",409.61,95,"COL","B","INITIAL",11)

"KRN",409.61,95,"COL","B","INSUR",4)

"KRN",409.61,95,"COL","B","NUMBER",1)

"KRN",409.61,95,"COL","B","PRECERT",9)

"KRN",409.61,95,"COL","B","ROI",13)

"KRN",409.61,95,"COL","B","SPECIAL",7)

"KRN",409.61,95,"COL","B","TYPE",2)

"KRN",409.61,95,"COL","B","UR",5)

"KRN",409.61,95,"COL","B","URGENT",12)

"KRN",409.61,95,"COL","B","WARD",14)

"KRN",409.61,95,"FNL")
D EXIT^IBTRE
"KRN",409.61,95,"HDR")
D HDR^IBTRE
"KRN",409.61,95,"HLP")
D HELP^IBTRE
"KRN",409.61,95,"INIT")
D INIT^IBTRE
"KRN",409.61,96,-1)
0^11
"KRN",409.61,96,0)
IBT COMMUNICATIONS EDITOR^1^^132^5^17^1^1^Review^IBTRC  MENU^Insurance Reviews/Contacts^1^^1
"KRN",409.61,96,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,96,"ARRAY")
 ^TMP("IBTRC",$J)
"KRN",409.61,96,"COL",0)
^409.621^11^11
"KRN",409.61,96,"COL",1,0)
NUMBER^1^4
"KRN",409.61,96,"COL",2,0)
DATE^5^17^Date
"KRN",409.61,96,"COL",3,0)
INS CO^16^18^Ins. Co.^^1
"KRN",409.61,96,"COL",4,0)
GROUP^140^11^Group No.
"KRN",409.61,96,"COL",5,0)
ACTION^55^9^Action
"KRN",409.61,96,"COL",6,0)
PRE-CERT^65^10^Auth. No.
"KRN",409.61,96,"COL",7,0)
DAYS^76^5^Days
"KRN",409.61,96,"COL",8,0)
CONTACT^81^20^Person Contacted
"KRN",409.61,96,"COL",9,0)
PHONE^103^14^Phone
"KRN",409.61,96,"COL",10,0)
REF NO^119^12^Call Ref. No
"KRN",409.61,96,"COL",11,0)
TYPE^36^17^Type Contact
"KRN",409.61,96,"COL","AIDENT",1,3)

"KRN",409.61,96,"COL","B","ACTION",5)

"KRN",409.61,96,"COL","B","CONTACT",8)

"KRN",409.61,96,"COL","B","DATE",2)

"KRN",409.61,96,"COL","B","DAYS",7)

"KRN",409.61,96,"COL","B","GROUP",4)

"KRN",409.61,96,"COL","B","INS CO",3)

"KRN",409.61,96,"COL","B","NUMBER",1)

"KRN",409.61,96,"COL","B","PHONE",9)

"KRN",409.61,96,"COL","B","PRE-CERT",6)

"KRN",409.61,96,"COL","B","REF NO",10)

"KRN",409.61,96,"COL","B","TYPE",11)

"KRN",409.61,96,"FNL")
D EXIT^IBTRC
"KRN",409.61,96,"HDR")
D HDR^IBTRC
"KRN",409.61,96,"HLP")
D HELP^IBTRC
"KRN",409.61,96,"INIT")
D INIT^IBTRC
"KRN",409.61,199,-1)
0^1
"KRN",409.61,199,0)
IBJP CLAIMS TRACKING^1^^80^4^19^1^1^Tracking Parameter^IBJP CLAIMS TRACKING MENU^Claims Tracking Parameters^1^^1
"KRN",409.61,199,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,199,"ARRAY")
 ^TMP("IBJPC",$J)
"KRN",409.61,199,"FNL")
D EXIT^IBJPC
"KRN",409.61,199,"HDR")
D HDR^IBJPC
"KRN",409.61,199,"HLP")
D HELP^IBJPC
"KRN",409.61,199,"INIT")
D INIT^IBJPC
"KRN",409.61,856,-1)
0^2
"KRN",409.61,856,0)
IBJP HCSR CLINICS^1^^80^5^20^1^1^HCSR Clinic^IBJP HCSR CLINICS MENU^HCSR Clinic Inclusions^1^^1
"KRN",409.61,856,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,856,"ARRAY")
 ^TMP("IBJPC1",$J)
"KRN",409.61,856,"FNL")
D EXIT^IBJPC1(1)
"KRN",409.61,856,"HDR")
D HDR^IBJPC1(1)
"KRN",409.61,856,"HLP")
D HELP^IBJPC1(1)
"KRN",409.61,856,"INIT")
D INIT^IBJPC1(1)
"KRN",409.61,857,-1)
0^3
"KRN",409.61,857,0)
IBJP HCSR WARDS^1^^80^5^20^1^1^HCSR Ward^IBJP HCSR WARDS MENU^HCSR Ward Inclusions^1^^1
"KRN",409.61,857,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,857,"ARRAY")
 ^TMP("IBJPC1",$J)
"KRN",409.61,857,"FNL")
D EXIT^IBJPC1(2)
"KRN",409.61,857,"HDR")
D HDR^IBJPC1(2)
"KRN",409.61,857,"HLP")
D HELP^IBJPC1(2)
"KRN",409.61,857,"INIT")
D INIT^IBJPC1(2)
"KRN",409.61,859,-1)
0^5
"KRN",409.61,859,0)
IBJP HCSR APPT INSCO^1^^80^5^21^1^1^HCSR Appointment Inclusion^IBJP HCSR APPT INSCO MENU^HCSR Insurance Inclusions^1^^1
"KRN",409.61,859,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,859,"ARRAY")
 ^TMP("IBJPC1",$J)
"KRN",409.61,859,"COL",0)
^409.621^4^4
"KRN",409.61,859,"COL",1,0)
NUMBER^1^4
"KRN",409.61,859,"COL",2,0)
INS NAME^6^30^Insurance Company Name
"KRN",409.61,859,"COL",3,0)
INS ADDR LINE 1^39^35^Address Line 1
"KRN",409.61,859,"COL",4,0)
INS STATE^77^2^ST
"KRN",409.61,859,"COL","B","INS ADDR LINE 1",3)

"KRN",409.61,859,"COL","B","INS NAME",2)

"KRN",409.61,859,"COL","B","INS STATE",4)

"KRN",409.61,859,"COL","B","NUMBER",1)

"KRN",409.61,859,"FNL")
D EXIT^IBJPC1(4)
"KRN",409.61,859,"HDR")
D HDR^IBJPC1(4)
"KRN",409.61,859,"HLP")
D HELP^IBJPC1(4)
"KRN",409.61,859,"INIT")
D INIT^IBJPC1(4)
"KRN",409.61,860,-1)
0^4
"KRN",409.61,860,0)
IBJP HCSR ADM INSCO^1^^80^5^21^1^1^HCSR Admission Inclusion^IBJP HCSR ADM INSCO MENU^HCSR Insurance Inclusions^1^^1
"KRN",409.61,860,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,860,"ARRAY")
 ^TMP("IBJPC1",$J)
"KRN",409.61,860,"COL",0)
^409.621^4^4
"KRN",409.61,860,"COL",1,0)
NUMBER^1^4
"KRN",409.61,860,"COL",2,0)
INS NAME^6^30^Insurance Company Name
"KRN",409.61,860,"COL",3,0)
INS ADDR LINE 1^39^35^Address Line 1
"KRN",409.61,860,"COL",4,0)
INS STATE^77^2^ST
"KRN",409.61,860,"COL","B","INS ADDR LINE 1",3)

"KRN",409.61,860,"COL","B","INS NAME",2)

"KRN",409.61,860,"COL","B","INS STATE",4)

"KRN",409.61,860,"COL","B","NUMBER",1)

"KRN",409.61,860,"FNL")
D EXIT^IBJPC1(3)
"KRN",409.61,860,"HDR")
D HDR^IBJPC1(3)
"KRN",409.61,860,"HLP")
D HELP^IBJPC1(3)
"KRN",409.61,860,"INIT")
D INIT^IBJPC1(3)
"KRN",409.61,861,-1)
0^6
"KRN",409.61,861,0)
IBT HCSR WORKLIST^1^^80^5^18^1^1^Event Entry^IBT HCSR WORKLIST MENU^HCSR Worklist^1^^1
"KRN",409.61,861,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,861,"ARRAY")
 ^TMP("IBTRH1",$J)
"KRN",409.61,861,"COL",0)
^409.621^10^10
"KRN",409.61,861,"COL",1,0)
NUMBER^1^4
"KRN",409.61,861,"COL",2,0)
PAT NAME^6^17^ Patient Name
"KRN",409.61,861,"COL",3,0)
PAT STATUS^30^1^S
"KRN",409.61,861,"COL",4,0)
APT DATE^32^8^Apt Date
"KRN",409.61,861,"COL",5,0)
WARD/CLINIC^41^10^Ward/Clnc
"KRN",409.61,861,"COL",6,0)
COB^51^3^COB
"KRN",409.61,861,"COL",7,0)
INSURANCE NAME^55^14^Insurance Comp
"KRN",409.61,861,"COL",8,0)
UR REQ^70^2^U/
"KRN",409.61,861,"COL",9,0)
PRE-CERT REQ^72^1^P
"KRN",409.61,861,"COL",10,0)
SC REASONS^74^5^SC Reas
"KRN",409.61,861,"COL","B","APT DATE",4)

"KRN",409.61,861,"COL","B","COB",6)

"KRN",409.61,861,"COL","B","INSURANCE NAME",7)

"KRN",409.61,861,"COL","B","NUMBER",1)

"KRN",409.61,861,"COL","B","PAT NAME",2)

"KRN",409.61,861,"COL","B","PAT STATUS",3)

"KRN",409.61,861,"COL","B","PRE-CERT REQ",9)

"KRN",409.61,861,"COL","B","SC REASONS",10)

"KRN",409.61,861,"COL","B","UR REQ",8)

"KRN",409.61,861,"COL","B","WARD/CLINIC",5)

"KRN",409.61,861,"FNL")
D EXIT^IBTRH1
"KRN",409.61,861,"HDR")
D HDR^IBTRH1
"KRN",409.61,861,"HLP")
D HELP^IBTRH1
"KRN",409.61,861,"INIT")
D INIT^IBTRH1
"KRN",409.61,862,-1)
0^7
"KRN",409.61,862,0)
IBT HCSR ENTRY^1^^80^5^18^1^1^HCSR expanded entry view^IBT HCSR ENTRY MENU^HCSR Expanded Entry^1^^1
"KRN",409.61,862,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,862,"ARRAY")
 ^TMP("IBTRH2",$J)
"KRN",409.61,862,"FNL")
D EXIT^IBTRH2
"KRN",409.61,862,"HDR")
D HDR^IBTRH2
"KRN",409.61,862,"HLP")
D HELP^IBTRH2
"KRN",409.61,862,"INIT")
D INIT^IBTRH2
"KRN",409.61,863,-1)
0^8
"KRN",409.61,863,0)
IBJP HCSR PARAMETERS^1^^80^4^20^1^1^^IBJP HCSR PARAMETERS MENU^HCSR Parameters^1^^1
"KRN",409.61,863,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,863,"ARRAY")
 ^TMP("IBJPC2",$J)
"KRN",409.61,863,"FNL")
D EXIT^IBJPC2
"KRN",409.61,863,"HDR")
D HDR^IBJPC2
"KRN",409.61,863,"HLP")
D HELP^IBJPC2
"KRN",409.61,863,"INIT")
D INIT^IBJPC2
"KRN",409.61,864,-1)
0^9
"KRN",409.61,864,0)
IBT HCSR RESPONSE WORKLIST^1^^80^5^19^1^1^Event Entry^IBT HCSR RESPONSE MENU^HCSR Response Worklist^1^^1
"KRN",409.61,864,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,864,"ARRAY")
 ^TMP("IBTRH5",$J)
"KRN",409.61,864,"COL",0)
^409.621^8^8
"KRN",409.61,864,"COL",1,0)
NUMBER^1^4
"KRN",409.61,864,"COL",2,0)
PAT NAME^6^17^Patient Name
"KRN",409.61,864,"COL",3,0)
PAT STATUS^30^1^S
"KRN",409.61,864,"COL",4,0)
APPT DATE^32^8^Apt Date
"KRN",409.61,864,"COL",5,0)
WARD/CLINIC^41^10^Ward/Clnc
"KRN",409.61,864,"COL",6,0)
COB^51^3^COB
"KRN",409.61,864,"COL",7,0)
INSURANCE^55^14^Insurance Comp
"KRN",409.61,864,"COL",8,0)
CERT CODE^70^10^CertAct
"KRN",409.61,864,"COL","B","APPT DATE",4)

"KRN",409.61,864,"COL","B","CERT CODE",8)

"KRN",409.61,864,"COL","B","COB",6)

"KRN",409.61,864,"COL","B","INSURANCE",7)

"KRN",409.61,864,"COL","B","NUMBER",1)

"KRN",409.61,864,"COL","B","PAT NAME",2)

"KRN",409.61,864,"COL","B","PAT STATUS",3)

"KRN",409.61,864,"COL","B","WARD/CLINIC",5)

"KRN",409.61,864,"FNL")
D EXIT^IBTRH5
"KRN",409.61,864,"HDR")
D HDR^IBTRH5
"KRN",409.61,864,"HLP")
D HELP^IBTRH5
"KRN",409.61,864,"INIT")
D INIT^IBTRH5
"KRN",409.61,865,-1)
0^12
"KRN",409.61,865,0)
IBT HCSR RESPONSE VIEW^1^^80^4^20^1^1^HCSR Response View^IBT HCSR RESPONSE VIEW MENU^HCSR Response View^1^^1
"KRN",409.61,865,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,865,"ARRAY")
 ^TMP("IBTRH3",$J)
"KRN",409.61,865,"FNL")
D EXIT^IBTRH3
"KRN",409.61,865,"HDR")
D HDR^IBTRH3
"KRN",409.61,865,"HLP")
D HELP^IBTRH3
"KRN",409.61,865,"INIT")
D INIT^IBTRH3
"KRN",409.61,866,-1)
0^13
"KRN",409.61,866,0)
IBT HCSR SEND 278 SHORT^1^^80^4^19^1^1^Send 278 Request^IBT HCSR SEND 278 SHORT MENU^IBT HCSR SEND 278 SHORT^1^^1
"KRN",409.61,866,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,866,"ARRAY")
 ^TMP("IBTRH6",$J)
"KRN",409.61,866,"FNL")
D EXIT^IBTRH6
"KRN",409.61,866,"HDR")
D HDR^IBTRH6
"KRN",409.61,866,"HLP")
D HELP^IBTRH6
"KRN",409.61,866,"INIT")
D INIT^IBTRH6
"KRN",771,262,-1)
0^1
"KRN",771,262,0)
IB HCSR VISTA^a^^IBTR 278 MESSAGE^^^USA
"KRN",771,262,"EC")
^~\&
"KRN",771,262,"FS")
|
"KRN",771,263,-1)
0^2
"KRN",771,263,0)
IB HCSR EC^a^FSC^IBTR 278 MESSAGE^^^USA
"KRN",771,263,"EC")
^~\&
"KRN",771,263,"FS")
|
"KRN",771,271,-1)
0^4
"KRN",771,271,0)
IB TABLE UPDATE VISTA^a^^IBTUPD MESSAGE^^^USA
"KRN",771,271,"EC")
^~\&
"KRN",771,271,"FS")
|
"KRN",771,272,-1)
0^3
"KRN",771,272,0)
IB TABLE UPDATE FSC^a^^IBTUPD MESSAGE^^^USA
"KRN",771,272,"EC")
^~\&
"KRN",771,272,"FS")
|
"KRN",870,278,-1)
0^1
"KRN",870,278,0)
HCSR OUT^^TCP^^^^^ECOMMLLPTST.FSC.DOMAIN.EXT^^^^^^^^^^^^^10
"KRN",870,278,200)
^^^60^60^^^^^R
"KRN",870,278,400)
127.0.0.1^54469^C^N^60^^^^
"KRN",870,283,-1)
0^2
"KRN",870,283,0)
IBTUPD OUT^^TCP^^^^^Revenue.FSC-EDI.X12CODESUPDATES.DOMAIN.EXT^^^^^^^^^^^^^10
"KRN",870,283,200)
^^^60^60^^^^^R
"KRN",870,283,400)
^^C^N^60^^^^
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
517^3160523
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
50
"RTN","IBCNS4")
0^23^B3702577^n/a
"RTN","IBCNS4",1,0)
IBCNS4 ;ALB/JWS - Trigger Logic for fields 112, 113, 114 of file 399 ;03-SEP-2014
"RTN","IBCNS4",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBCNS4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNS4",4,0)
 ;
"RTN","IBCNS4",5,0)
 Q
"RTN","IBCNS4",6,0)
 ;Trigger logic to obtain the authorization number / referral number from the 278 transaction file, 356.22
"RTN","IBCNS4",7,0)
 ; 399 (Bill/Claims file, fields 112, 113, 114 trigger fields 163 & 253, 230 & 254, 231 & 255 respectively
"RTN","IBCNS4",8,0)
AUTH(BIEN,INS) ;
"RTN","IBCNS4",9,0)
 I $G(INS)="" Q
"RTN","IBCNS4",10,0)
 N AUTH,PAT,LOC,DATE,HCSRIEN,RCAT,DATE1
"RTN","IBCNS4",11,0)
 S AUTH=""
"RTN","IBCNS4",12,0)
 S PAT=$P($G(^DGCR(399,BIEN,0)),"^",2) I PAT="" Q ""
"RTN","IBCNS4",13,0)
 S LOC=$S($$INPAT^IBCEF(BIEN)=1:"I",1:"O")
"RTN","IBCNS4",14,0)
 S DATE=$P($G(^DGCR(399,BIEN,0)),"^",3) I DATE="" Q ""
"RTN","IBCNS4",15,0)
 S (DATE,DATE1)=$P(DATE,"."),DATE=DATE-1
"RTN","IBCNS4",16,0)
 F  S DATE=$O(^IBT(356.22,"E",PAT,LOC,INS,DATE)) Q:DATE=""  Q:$P(DATE,".")'=DATE1  D  I AUTH'="" Q
"RTN","IBCNS4",17,0)
 . S HCSRIEN="" F  S HCSRIEN=$O(^IBT(356.22,"E",PAT,LOC,INS,DATE,HCSRIEN)) Q:HCSRIEN=""  D  I AUTH'="" Q
"RTN","IBCNS4",18,0)
 .. S AUTH=$P($G(^IBT(356.22,HCSRIEN,103)),"^",2),RCAT=$P($G(^(2)),"^")
"RTN","IBCNS4",19,0)
 .. I RCAT=4 S AUTH=""
"RTN","IBCNS4",20,0)
 Q AUTH
"RTN","IBCNS4",21,0)
 ;
"RTN","IBCNS4",22,0)
REF(BIEN,INS) ;
"RTN","IBCNS4",23,0)
 N REF,PAT,LOC,DATE,HCSRIEN,RCAT,DATE1
"RTN","IBCNS4",24,0)
 S REF=""
"RTN","IBCNS4",25,0)
 S PAT=$P($G(^DGCR(399,BIEN,0)),"^",2) I PAT="" Q ""
"RTN","IBCNS4",26,0)
 S LOC=$S($$INPAT^IBCEF(BIEN)=1:"I",1:"O")
"RTN","IBCNS4",27,0)
 S DATE=$P($G(^DGCR(399,BIEN,0)),"^",3) I DATE="" Q ""
"RTN","IBCNS4",28,0)
 S (DATE,DATE1)=$P(DATE,"."),DATE=DATE-1
"RTN","IBCNS4",29,0)
 F  S DATE=$O(^IBT(356.22,"E",PAT,LOC,INS,DATE)) Q:DATE=""  Q:$P(DATE,".")'=DATE1  D  I REF'="" Q
"RTN","IBCNS4",30,0)
 . S HCSRIEN="" F  S HCSRIEN=$O(^IBT(356.22,"E",PAT,LOC,INS,DATE,HCSRIEN)) Q:HCSRIEN=""  D  I REF'="" Q
"RTN","IBCNS4",31,0)
 .. S REF=$P($G(^IBT(356.22,HCSRIEN,103)),"^",2),RCAT=$P($G(^(2)),"^")
"RTN","IBCNS4",32,0)
 .. I RCAT'=4 S REF=""
"RTN","IBCNS4",33,0)
 Q REF
"RTN","IBJPC")
0^1^B34128004^B14718227
"RTN","IBJPC",1,0)
IBJPC ;ALB/MAF - IBSP CLAIMS TRACKING PARAMETER SCREEN ;23-OCT-2014
"RTN","IBJPC",2,0)
 ;;2.0;INTEGRATED BILLING;**39,517**;21-MAR-94;Build 240
"RTN","IBJPC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPC",4,0)
 ;
"RTN","IBJPC",5,0)
EN ; -- main entry point for IBJP CLAIMS TRACKING
"RTN","IBJPC",6,0)
 D EN^VALM("IBJP CLAIMS TRACKING")
"RTN","IBJPC",7,0)
 Q
"RTN","IBJPC",8,0)
HDR ; -- header code
"RTN","IBJPC",9,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPC",10,0)
 Q
"RTN","IBJPC",11,0)
 ;
"RTN","IBJPC",12,0)
INIT ; -- Display tracking parameters
"RTN","IBJPC",13,0)
 K ^TMP("IBJPC",$J)
"RTN","IBJPC",14,0)
 D BLD
"RTN","IBJPC",15,0)
 Q
"RTN","IBJPC",16,0)
 ;
"RTN","IBJPC",17,0)
HELP ; -- help code
"RTN","IBJPC",18,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPC",19,0)
 Q
"RTN","IBJPC",20,0)
 ;
"RTN","IBJPC",21,0)
EXIT ; -- exit code
"RTN","IBJPC",22,0)
 K ^TMP("IBJPC",$J)
"RTN","IBJPC",23,0)
 D CLEAR^VALM1
"RTN","IBJPC",24,0)
 Q
"RTN","IBJPC",25,0)
 ;
"RTN","IBJPC",26,0)
BLD ; -- build screen array, no variables required for input
"RTN","IBJPC",27,0)
 N IBGRPB,IBGRPE,IBLN,IBLR,IBNC,IBTRKR,IBTRKR5,IBTRKR62,IBTC,IBSW,IBTW  ; IB*2.0*517 added IBTRKR62
"RTN","IBJPC",28,0)
 S IBNC(3)=11,IBSW(3)=9,IBTC(3)=2,IBTW(3)=57    ; IB*2.0*517 added line
"RTN","IBJPC",29,0)
 S IBNC(1)=11,IBTW(1)=21,IBTC(1)=2,IBSW(1)=19,IBNC(2)=48,IBTW(2)=21,IBTC(2)=45,IBSW(2)=10
"RTN","IBJPC",30,0)
 S IBTRKR=$G(^IBE(350.9,1,6)),IBTRKR5=$G(^IBE(350.9,1,5))
"RTN","IBJPC",31,0)
 S IBTRKR62=$G(^IBE(350.9,1,62))                ; IB*2.0*517 added line
"RTN","IBJPC",32,0)
 ;
"RTN","IBJPC",33,0)
 S (VALMCNT,IBLN)=1,IBLR=1,IBLN=$$SET("","",IBLN,IBLR),IBGRPB=IBLN
"RTN","IBJPC",34,0)
 ;
"RTN","IBJPC",35,0)
 ; - claim tracking parameters
"RTN","IBJPC",36,0)
 S IBLN=$$SETN("Tracking Parameters",IBLN,IBLR,1)
"RTN","IBJPC",37,0)
 S IBLN=$$SET("Track Inpatient: ",$$EXSET^IBJU1($P(IBTRKR,U,2),350.9,6.02),IBLN,IBLR)
"RTN","IBJPC",38,0)
 S IBLN=$$SET("Track Outpatient: ",$$EXSET^IBJU1($P(IBTRKR,U,3),350.9,6.03),IBLN,IBLR)
"RTN","IBJPC",39,0)
 S IBLN=$$SET("Track Rx: ",$$EXSET^IBJU1($P(IBTRKR,U,4),350.9,6.04),IBLN,IBLR)
"RTN","IBJPC",40,0)
 S IBLN=$$SET("Track Prosthetics: ",$$EXSET^IBJU1($P(IBTRKR,U,5),350.9,6.05),IBLN,IBLR)
"RTN","IBJPC",41,0)
 S IBLN=$$SET("Reports Can Add CT: ",$S(+$P(IBTRKR,U,23):"YES",1:"NO"),IBLN,IBLR)
"RTN","IBJPC",42,0)
 ;
"RTN","IBJPC",43,0)
 S IBGRPE=IBLN,IBLN=IBGRPB,IBLR=2
"RTN","IBJPC",44,0)
 ;
"RTN","IBJPC",45,0)
 ; - random sample parameters
"RTN","IBJPC",46,0)
 S IBLN=$$SETN("Random Sample Parameters",IBLN,IBLR,1)
"RTN","IBJPC",47,0)
 S IBLN=$$SET("Medicine Sample: ",$P(IBTRKR,U,8),IBLN,IBLR)
"RTN","IBJPC",48,0)
 S IBLN=$$SET("Medicine Admissions: ",$P(IBTRKR,U,9),IBLN,IBLR)
"RTN","IBJPC",49,0)
 S IBLN=$$SET("Surgery Sample: ",$P(IBTRKR,U,13),IBLN,IBLR)
"RTN","IBJPC",50,0)
 S IBLN=$$SET("Surgery Admissions: ",$P(IBTRKR,U,14),IBLN,IBLR)
"RTN","IBJPC",51,0)
 S IBLN=$$SET("Psych Sample: ",$P(IBTRKR,U,18),IBLN,IBLR)
"RTN","IBJPC",52,0)
 S IBLN=$$SET("Psych Admissions: ",$P(IBTRKR,U,19),IBLN,IBLR)
"RTN","IBJPC",53,0)
 ;
"RTN","IBJPC",54,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE),IBLN=$$SET("","",IBLN,IBLR)
"RTN","IBJPC",55,0)
 S IBGRPB=IBLN,IBLR=1,IBSW(1)=55
"RTN","IBJPC",56,0)
 ;
"RTN","IBJPC",57,0)
 ; - general parameters
"RTN","IBJPC",58,0)
 S IBLN=$$SETN("General Parameters",IBLN,IBLR,1)
"RTN","IBJPC",59,0)
 S IBLN=$$SET("Initialization Date: ",$$DATE^IBJU1($P(IBTRKR,U,1)),IBLN,IBLR)
"RTN","IBJPC",60,0)
 S IBLN=$$SET("Use Admission Sheet: ",$S(+$P(IBTRKR,U,6):"YES",1:"NO"),IBLN,IBLR)
"RTN","IBJPC",61,0)
 S IBLN=$$SET("Header Line 1: ",$P(IBTRKR5,U,1),IBLN,IBLR)
"RTN","IBJPC",62,0)
 S IBLN=$$SET("Header Line 2: ",$P(IBTRKR5,U,2),IBLN,IBLR)
"RTN","IBJPC",63,0)
 S IBLN=$$SET("Header Line 3: ",$P(IBTRKR5,U,3),IBLN,IBLR)
"RTN","IBJPC",64,0)
 ;
"RTN","IBJPC",65,0)
 ; IB*2.0*517 added new section - HCSR Parameters
"RTN","IBJPC",66,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE),IBLN=$$SET("","",IBLN,IBLR)
"RTN","IBJPC",67,0)
 S IBGRPB=IBLN,IBLR=3
"RTN","IBJPC",68,0)
 S IBLN=$$SETN("Health Care Services Review (HCSR) Parameters",IBLN,IBLR,1)
"RTN","IBJPC",69,0)
 S IBLN=$$SET("CPAC Future Appointments Search: ",$J($P(IBTRKR62,U,13),4)_" days",IBLN,IBLR)  ;14 days
"RTN","IBJPC",70,0)
 S IBLN=$$SET("CPAC Future Admissions Search: ",$J($P(IBTRKR62,U,2),4)_" days",IBLN,IBLR)
"RTN","IBJPC",71,0)
 S IBLN=$$SET("CPAC Past Appointments Search: ",$J($P(IBTRKR62,U,3),4)_" days",IBLN,IBLR)
"RTN","IBJPC",72,0)
 S IBLN=$$SET("CPAC Past Admissions Search: ",$J($P(IBTRKR62,U,4),4)_" days",IBLN,IBLR)
"RTN","IBJPC",73,0)
 S IBLN=$$SET("TRICARE/CHAMPVA Future Appointments Search: ",$J($P(IBTRKR62,U,5),4)_" days",IBLN,IBLR)
"RTN","IBJPC",74,0)
 S IBLN=$$SET("TRICARE/CHAMPVA Future Admissions Search: ",$J($P(IBTRKR62,U,6),4)_" days",IBLN,IBLR)
"RTN","IBJPC",75,0)
 S IBLN=$$SET("TRICARE/CHAMPVA Past Appointments Search: ",$J($P(IBTRKR62,U,7),4)_" days",IBLN,IBLR)
"RTN","IBJPC",76,0)
 S IBLN=$$SET("TRICARE/CHAMPVA Past Admissions Search: ",$J($P(IBTRKR62,U,8),4)_" days",IBLN,IBLR)
"RTN","IBJPC",77,0)
 S IBLN=$$SET("Inquiry can be Triggered for Appointment: ",$J($P(IBTRKR62,U,10),4)_" days",IBLN,IBLR)
"RTN","IBJPC",78,0)
 S IBLN=$$SET("Inquiry can be Triggered for Admission: ",$J($P(IBTRKR62,U,11),4)_" days",IBLN,IBLR)
"RTN","IBJPC",79,0)
 S IBLN=$$SET("Days to wait to purge entry on HCSR Response: ",$J($P(IBTRKR62,U,12),4)_" days",IBLN,IBLR)
"RTN","IBJPC",80,0)
 S IBLN=$$SET("Clinics Included In the Search: ",$J(+$P($G(^IBE(350.9,1,63,0)),U,4),4),IBLN,IBLR)
"RTN","IBJPC",81,0)
 S IBLN=$$SET("Wards Included In the Search: ",$J(+$P($G(^IBE(350.9,1,64,0)),U,4),4),IBLN,IBLR)
"RTN","IBJPC",82,0)
 S IBLN=$$SET("Insurance Companies Included In the Appointments Search: ",$J(+$P($G(^IBE(350.9,1,65,0)),U,4),4),IBLN,IBLR)
"RTN","IBJPC",83,0)
 S IBLN=$$SET("Insurance Companies Included In the Admissions Search: ",$J(+$P($G(^IBE(350.9,1,66,0)),U,4),4),IBLN,IBLR)
"RTN","IBJPC",84,0)
 ;
"RTN","IBJPC",85,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE)-1
"RTN","IBJPC",86,0)
 Q
"RTN","IBJPC",87,0)
 ;
"RTN","IBJPC",88,0)
SET(TTL,DATA,LN,LR) ;
"RTN","IBJPC",89,0)
 N IBY
"RTN","IBJPC",90,0)
 S IBY=$J(TTL,IBTW(LR))_DATA D SET1(IBY,LN,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPC",91,0)
 S LN=LN+1
"RTN","IBJPC",92,0)
 Q LN
"RTN","IBJPC",93,0)
 ;
"RTN","IBJPC",94,0)
SETN(TTL,LN,LR,RV) ;
"RTN","IBJPC",95,0)
 N IBY
"RTN","IBJPC",96,0)
 S IBY=" "_TTL_" " D SET1(IBY,LN,IBNC(LR),$L(IBY),$G(RV))
"RTN","IBJPC",97,0)
 S LN=LN+1
"RTN","IBJPC",98,0)
 Q LN
"RTN","IBJPC",99,0)
 ;
"RTN","IBJPC",100,0)
SET1(STR,LN,COL,WD,RV) ; set up TMP array with screen data
"RTN","IBJPC",101,0)
 N IBX S IBX=$G(^TMP("IBJPC",$J,LN,0))
"RTN","IBJPC",102,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJPC",103,0)
 D SET^VALM10(LN,IBX) I $G(RV)'="" D CNTRL^VALM10(LN,COL,WD,IORVON,IORVOFF)
"RTN","IBJPC",104,0)
 Q
"RTN","IBJPC",105,0)
 ;
"RTN","IBJPC",106,0)
CTEDIT(IBJDR) ; -- IBJP CT EDIT ACTIONS (TP,RS,GP,EA): Edit Claims Tracking Parameters
"RTN","IBJPC",107,0)
 ; flag indicating which set of parameters to edit passed in
"RTN","IBJPC",108,0)
 D FULL^VALM1
"RTN","IBJPC",109,0)
 I IBJDR'="" S DR=$P($T(@IBJDR),";;",2,999)
"RTN","IBJPC",110,0)
 ;
"RTN","IBJPC",111,0)
 ; IB*2.0*517 from ;62.1 added If statement below
"RTN","IBJPC",112,0)
 I IBJDR=0,$D(^XUSEC("IB HCSR PARAM EDIT",DUZ)) D
"RTN","IBJPC",113,0)
 . S DR=DR_";62.1Inquiry can be Triggered for Appointment"
"RTN","IBJPC",114,0)
 . S DR=DR_";62.11Inquiry can be Triggered for Admission;"
"RTN","IBJPC",115,0)
 . S DR=DR_"62.12Days to wait to purge entry on HCSR Response"
"RTN","IBJPC",116,0)
 ;
"RTN","IBJPC",117,0)
 I DR'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPC",118,0)
 D INIT^IBJPC S VALMBCK="R"
"RTN","IBJPC",119,0)
 Q
"RTN","IBJPC",120,0)
 ;
"RTN","IBJPC",121,0)
0 ;;6.02;6.03;6.04;6.05;6.23;6.08;6.09;6.13;6.14;6.18;6.19;4.01;6.01;6.06;I 'X S Y="@50";5.01;5.02;5.03;@50
"RTN","IBJPC",122,0)
1 ;;6.02;6.03;6.04;6.05;6.23
"RTN","IBJPC",123,0)
2 ;;6.08;6.09;6.13;6.14;6.18;6.19
"RTN","IBJPC",124,0)
3 ;;4.01;6.01;6.06;I 'X S Y="@50";5.01;5.02;5.03;@50
"RTN","IBJPC1")
0^2^B109463109^n/a
"RTN","IBJPC1",1,0)
IBJPC1 ;ALB/FA - Site Parameter HCSR Screens, Nodes 63-66 ;03-JUN-2014
"RTN","IBJPC1",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBJPC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPC1",4,0)
 ;;
"RTN","IBJPC1",5,0)
 ;
"RTN","IBJPC1",6,0)
EN(WHICH) ;EP
"RTN","IBJPC1",7,0)
 ; Main entry point for HCSR Site Parameters, nodes 63-66
"RTN","IBJPC1",8,0)
 ; Input: WHICH     - 1 - Using template IBJP HCSR CLINICS
"RTN","IBJPC1",9,0)
 ;                    2 - Using template IBJP HCSR WARDS
"RTN","IBJPC1",10,0)
 ;                    3 - Using template IBJP HCSR ADM INSCO
"RTN","IBJPC1",11,0)
 ;                    4 - Using template IBJP HCSR APPT INSCO
"RTN","IBJPC1",12,0)
 N TEMPLATE
"RTN","IBJPC1",13,0)
 S TEMPLATE=$S(WHICH=1:"IBJP HCSR CLINICS",WHICH=2:"IBJP HCSR WARDS",1:"")
"RTN","IBJPC1",14,0)
 S:TEMPLATE="" TEMPLATE=$S(WHICH=3:"IBJP HCSR ADM INSCO",1:"IBJP HCSR APPT INSCO")
"RTN","IBJPC1",15,0)
 D EN^VALM(TEMPLATE)
"RTN","IBJPC1",16,0)
 Q
"RTN","IBJPC1",17,0)
 ;
"RTN","IBJPC1",18,0)
HDR(WHICH) ;EP
"RTN","IBJPC1",19,0)
 ; Header code for HCSR Site Parameters, nodes 63-66
"RTN","IBJPC1",20,0)
 ; Input: WHICH     - 1 - Using template IBJP HCSR CLINICS
"RTN","IBJPC1",21,0)
 ;                    2 - Using template IBJP HCSR WARDS
"RTN","IBJPC1",22,0)
 ;                    3 - Using template IBJP HCSR ADM INSCO
"RTN","IBJPC1",23,0)
 ;                    4 - Using template IBJP HCSR APPT INSCO
"RTN","IBJPC1",24,0)
 ;
"RTN","IBJPC1",25,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPC1",26,0)
 S:WHICH=1 VALMHDR(2)="Clinics Included in the Search:"
"RTN","IBJPC1",27,0)
 S:WHICH=2 VALMHDR(2)="Wards Included in the Search:"
"RTN","IBJPC1",28,0)
 S:WHICH=3 VALMHDR(2)="Insurance Companies Included in the Admissions Search:"
"RTN","IBJPC1",29,0)
 S:WHICH=4 VALMHDR(2)="Insurance Companies Included in the Appointment Search:"
"RTN","IBJPC1",30,0)
 Q
"RTN","IBJPC1",31,0)
 ;
"RTN","IBJPC1",32,0)
INIT(WHICH) ;EP
"RTN","IBJPC1",33,0)
 ; Initialize variables and list array
"RTN","IBJPC1",34,0)
 ; Input:   WHICH               - 1 - Using template IBJP HCSR CLINICS
"RTN","IBJPC1",35,0)
 ;                                2 - Using template IBJP HCSR WARDS
"RTN","IBJPC1",36,0)
 ;                                3 - Using template IBJP HCSR ADM INSCO
"RTN","IBJPC1",37,0)
 ;                                4 - Using template IBJP HCSR APPT INSCO
"RTN","IBJPC1",38,0)
 ; Output:  ^TMP("IBJPC1",$J)   - Body lines to display for specified template
"RTN","IBJPC1",39,0)
 K ^TMP("IBJPC1",$J),^TMP($J,"IBJPC1IX")
"RTN","IBJPC1",40,0)
 D BLD(WHICH)
"RTN","IBJPC1",41,0)
 Q
"RTN","IBJPC1",42,0)
 ;
"RTN","IBJPC1",43,0)
BLD(WHICH) ; Build screen array, no variables required for input
"RTN","IBJPC1",44,0)
 ; Input:   WHICH               - 1 - Using template IBJP HCSR CLINICS
"RTN","IBJPC1",45,0)
 ;                                2 - Using template IBJP HCSR WARDS
"RTN","IBJPC1",46,0)
 ;                                3 - Using template IBJP HCSR ADM INSCO
"RTN","IBJPC1",47,0)
 ;                                4 - Using template IBJP HCSR APPT INSCO
"RTN","IBJPC1",48,0)
 ; Output:  ^TMP("IBJPC1",$J)   - Body lines to display for specified template
"RTN","IBJPC1",49,0)
 ;
"RTN","IBJPC1",50,0)
 N ALLPYR,CNT,ENTRIES,LINE,NAME,NAMEIEN,NODE,NODE0,TOTPYR,Z
"RTN","IBJPC1",51,0)
 S VALMCNT=0
"RTN","IBJPC1",52,0)
 S NODE=$S(WHICH=1:63,WHICH=2:64,WHICH=3:66,1:65)
"RTN","IBJPC1",53,0)
 S (Z,CNT)=0
"RTN","IBJPC1",54,0)
 F  D  Q:+Z=0
"RTN","IBJPC1",55,0)
 . S Z=$O(^IBE(350.9,1,NODE,Z))
"RTN","IBJPC1",56,0)
 . Q:+Z=0
"RTN","IBJPC1",57,0)
 . S NODE0=$G(^IBE(350.9,1,NODE,Z,0)),NAMEIEN=+$P(NODE0,"^",1)
"RTN","IBJPC1",58,0)
 . I NAMEIEN>0 D
"RTN","IBJPC1",59,0)
 . . S CNT=CNT+1,NAME=$$EXTERNAL^DILFD(350.9_NODE,.01,"",NAMEIEN)
"RTN","IBJPC1",60,0)
 . . I NAME'="" D
"RTN","IBJPC1",61,0)
 . . . S ENTRIES(NAME,CNT)=NAMEIEN,ENTRIES(NAME,CNT,"IEN")=Z
"RTN","IBJPC1",62,0)
 I '$D(ENTRIES) D  Q
"RTN","IBJPC1",63,0)
 . S LINE=$$SETL("","","** No entries found **",29,22)
"RTN","IBJPC1",64,0)
 . S ^TMP("IBJPC1",$J,1,0)=LINE
"RTN","IBJPC1",65,0)
 S NAME=""
"RTN","IBJPC1",66,0)
 F  D  Q:NAME=""
"RTN","IBJPC1",67,0)
 .S NAME=$O(ENTRIES(NAME)) Q:NAME=""
"RTN","IBJPC1",68,0)
 .S Z=0 F  D  Q:Z=""
"RTN","IBJPC1",69,0)
 ..S Z=$O(ENTRIES(NAME,Z)) Q:Z=""
"RTN","IBJPC1",70,0)
 ..S VALMCNT=VALMCNT+1
"RTN","IBJPC1",71,0)
 ..;
"RTN","IBJPC1",72,0)
 ..; Build the display line - Insurances have multi-columns
"RTN","IBJPC1",73,0)
 ..I WHICH<3 D
"RTN","IBJPC1",74,0)
 ...S LINE=$$SETL("",VALMCNT,"",1,4)
"RTN","IBJPC1",75,0)
 ...S LINE=$$SETL(LINE,NAME,"",6,30)
"RTN","IBJPC1",76,0)
 ...S ALLPYR=$$ISALL^IBJPC3(NODE,ENTRIES(NAME,Z,"IEN"))
"RTN","IBJPC1",77,0)
 ...I ALLPYR S LINE=$$SETL(LINE,"- for all payers","",37,42)
"RTN","IBJPC1",78,0)
 ...I 'ALLPYR D
"RTN","IBJPC1",79,0)
 ....S TOTPYR=$$GETTOT^IBJPC3(NODE,ENTRIES(NAME,Z,"IEN"))
"RTN","IBJPC1",80,0)
 ....I 'TOTPYR S LINE=$$SETL(LINE,"- for no payers","",37,42) Q
"RTN","IBJPC1",81,0)
 ....S LINE=$$SETL(LINE,"- for "_TOTPYR_" payer"_$S(TOTPYR>1:"s",1:""),"",37,42)
"RTN","IBJPC1",82,0)
 ....Q
"RTN","IBJPC1",83,0)
 ...Q
"RTN","IBJPC1",84,0)
 ..E  S LINE=$$BLDLN(VALMCNT,NAME,ENTRIES(NAME,Z))
"RTN","IBJPC1",85,0)
 ..D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBJPC1",86,0)
 ..S ^TMP($J,"IBJPC1IX",VALMCNT)=ENTRIES(NAME,Z,"IEN")
"RTN","IBJPC1",87,0)
 ..Q
"RTN","IBJPC1",88,0)
 .Q
"RTN","IBJPC1",89,0)
 Q
"RTN","IBJPC1",90,0)
 ;
"RTN","IBJPC1",91,0)
BLDLN(CTR,NAME,IEN) ; Builds a line to display and insurance
"RTN","IBJPC1",92,0)
 ; Input:   CTR     - Current Line Counter
"RTN","IBJPC1",93,0)
 ;          NAME    - Insurance Company Name
"RTN","IBJPC1",94,0)
 ;          IEN     - IEN of the insurance to be displayed
"RTN","IBJPC1",95,0)
 ; Output:  LINE    - Formatted for setting into the list display
"RTN","IBJPC1",96,0)
 N LINE,XX
"RTN","IBJPC1",97,0)
 S LINE=$$SETSTR^VALM1(CTR,"",1,4)                  ; Entry #
"RTN","IBJPC1",98,0)
 S LINE=$$SETSTR^VALM1(NAME,LINE,6,30)              ; Insurance Name
"RTN","IBJPC1",99,0)
 S XX=$$GET1^DIQ(36,IEN_",",.111)
"RTN","IBJPC1",100,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,39,35)               ; Address line1
"RTN","IBJPC1",101,0)
 S XX=$$GET1^DIQ(36,IEN_",",.115,"I")
"RTN","IBJPC1",102,0)
 S XX=$$GET1^DIQ(5,XX_",",1)                        ; State Abbreviation
"RTN","IBJPC1",103,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,77,2)                ; State
"RTN","IBJPC1",104,0)
 Q LINE
"RTN","IBJPC1",105,0)
 ;
"RTN","IBJPC1",106,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBJPC1",107,0)
 ; of the worklist
"RTN","IBJPC1",108,0)
 ; Input:   LINE    - Current line being created
"RTN","IBJPC1",109,0)
 ;          DATA    - Information to be added to the end of the current line
"RTN","IBJPC1",110,0)
 ;          LABEL   - Label to describe the information being added
"RTN","IBJPC1",111,0)
 ;          COL     - Column position in line to add information add
"RTN","IBJPC1",112,0)
 ;          LNG     - Maximum length of data information to include on the line
"RTN","IBJPC1",113,0)
 ; Returns: Line updated with added information
"RTN","IBJPC1",114,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBJPC1",115,0)
 Q LINE
"RTN","IBJPC1",116,0)
 ;
"RTN","IBJPC1",117,0)
HELP(WHICH) ;EP
"RTN","IBJPC1",118,0)
 ; Help code
"RTN","IBJPC1",119,0)
 ; Input: WHICH     - 1 - Using template IBJP HCSR CLINICS
"RTN","IBJPC1",120,0)
 ;                    2 - Using template IBJP HCSR WARDS
"RTN","IBJPC1",121,0)
 ;                    3 - Using template IBJP HCSR ADM INSCO
"RTN","IBJPC1",122,0)
 ;                    4 - Using template IBJP HCSR APPT INSCO
"RTN","IBJPC1",123,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPC1",124,0)
 Q
"RTN","IBJPC1",125,0)
 ;
"RTN","IBJPC1",126,0)
EXIT(WHICH) ;EP
"RTN","IBJPC1",127,0)
 ; Exit code
"RTN","IBJPC1",128,0)
 ; Input: WHICH     - 1 - Using template IBJP HCSR CLINICS
"RTN","IBJPC1",129,0)
 ;                    2 - Using template IBJP HCSR WARDS
"RTN","IBJPC1",130,0)
 ;                    3 - Using template IBJP HCSR ADM INSCO
"RTN","IBJPC1",131,0)
 ;                    4 - Using template IBJP HCSR APPT INSCO
"RTN","IBJPC1",132,0)
 K ^TMP("IBJPC1",$J),^TMP($J,"IBJPC1IX")
"RTN","IBJPC1",133,0)
 D CLEAR^VALM1
"RTN","IBJPC1",134,0)
 Q
"RTN","IBJPC1",135,0)
 ;
"RTN","IBJPC1",136,0)
ADD(WHICH) ;EP
"RTN","IBJPC1",137,0)
 ; Listman Protocol Action to add an entry to the specified Site Parameter node
"RTN","IBJPC1",138,0)
 ; Input:   WHICH   - 1 - Adding to the Clinic Search inclusion list
"RTN","IBJPC1",139,0)
 ;                    2 - Adding to the Ward Search inclusion list
"RTN","IBJPC1",140,0)
 ;                    3 - Adding to the Admission Search inclusion list
"RTN","IBJPC1",141,0)
 ;                    4 - Adding to the Appointment Search inclusion list
"RTN","IBJPC1",142,0)
 N DA,DIK,DIR
"RTN","IBJPC1",143,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FDA,IEN,IENS,INSM,INSMC
"RTN","IBJPC1",144,0)
 N NODE,NAME,NAMEU,NODE0,TYPE,X,XX,Y,Z,Z1,CNT
"RTN","IBJPC1",145,0)
 S NODE=$S(WHICH=1:63,WHICH=2:64,WHICH=3:66,1:65)
"RTN","IBJPC1",146,0)
 S TYPE=$S(WHICH=1:"Clinic",WHICH=2:"Ward",1:"Insurance Company")
"RTN","IBJPC1",147,0)
 S VALMBCK="R"       ; Refresh screen on return
"RTN","IBJPC1",148,0)
 Q:'$$LOCK(NODE)     ; Couldn't lock for adding
"RTN","IBJPC1",149,0)
 D FULL^VALM1
"RTN","IBJPC1",150,0)
 D WARNMSG           ; Display warning message
"RTN","IBJPC1",151,0)
 ;
"RTN","IBJPC1",152,0)
 I '$$ENTSEL(NODE,.IENS,WHICH) D  Q  ; Select entry(s) to be added
"RTN","IBJPC1",153,0)
 . S VALMSG="No "_TYPE_" selected"
"RTN","IBJPC1",154,0)
 . D UNLOCK(NODE)
"RTN","IBJPC1",155,0)
 I ($O(IENS(""))'=$O(IENS(""),-1)) D
"RTN","IBJPC1",156,0)
 . I NODE>64 S TYPE="Insurance Companies" Q
"RTN","IBJPC1",157,0)
 . S TYPE=TYPE_"s"
"RTN","IBJPC1",158,0)
 ;
"RTN","IBJPC1",159,0)
 ; check for 'MEDICARE/MEDICAID' insurance companies
"RTN","IBJPC1",160,0)
 I WHICH>2 D
"RTN","IBJPC1",161,0)
 .S INSMC=0,IEN=0 F  D  Q:'IEN
"RTN","IBJPC1",162,0)
 ..S IEN=$O(IENS(IEN)) Q:'IEN
"RTN","IBJPC1",163,0)
 ..S NAME=$$EXTERNAL^DILFD(350.9_NODE,.01,"",+IEN)
"RTN","IBJPC1",164,0)
 ..S NAMEU=$$UP^XLFSTR(NAME)
"RTN","IBJPC1",165,0)
 ..I (NAMEU["MEDICAID")!(NAMEU["MEDICARE") S INSMC=INSMC+1,INSM(INSMC)=NAME
"RTN","IBJPC1",166,0)
 ..Q
"RTN","IBJPC1",167,0)
 .I $D(INSM) D
"RTN","IBJPC1",168,0)
 ..S:INSMC=1 XX="The following Insurance Company record"
"RTN","IBJPC1",169,0)
 ..S:INSMC>1 XX="The following "_INSMC_" Insurance Company records"
"RTN","IBJPC1",170,0)
 ..S XX=XX_$S(INSMC>1:" are ",1:" is ")_"for MEDICARE or MEDICAID:"
"RTN","IBJPC1",171,0)
 ..S DIR(0)="EA",DIR("A",1)=XX
"RTN","IBJPC1",172,0)
 ..S Z1=0,Z=1 F  D  Q:'Z1
"RTN","IBJPC1",173,0)
 ...S Z1=$O(INSM(Z1)) Q:'Z1
"RTN","IBJPC1",174,0)
 ...S Z=Z+1,DIR("A",Z)=INSM(Z1)
"RTN","IBJPC1",175,0)
 ...Q
"RTN","IBJPC1",176,0)
 ..S DIR("A")="Press RETURN to continue "
"RTN","IBJPC1",177,0)
 ..D ^DIR
"RTN","IBJPC1",178,0)
 ..Q
"RTN","IBJPC1",179,0)
 .; Add the selected entries into the list for ins. companies
"RTN","IBJPC1",180,0)
 .S IEN="",CNT=0 F  D  Q:IEN=""
"RTN","IBJPC1",181,0)
 ..S IEN=$O(IENS(IEN)) Q:IEN=""
"RTN","IBJPC1",182,0)
 ..S CNT=CNT+1
"RTN","IBJPC1",183,0)
 ..S FDA("350.9"_NODE,"+1,1,",.01)=IEN
"RTN","IBJPC1",184,0)
 ..S FDA("350.9"_NODE,"+1,1,",.02)=0
"RTN","IBJPC1",185,0)
 ..D UPDATE^DIE("","FDA")
"RTN","IBJPC1",186,0)
 ..Q
"RTN","IBJPC1",187,0)
 .Q
"RTN","IBJPC1",188,0)
 D UNLOCK(NODE) ; Unlock the Node
"RTN","IBJPC1",189,0)
 ;
"RTN","IBJPC1",190,0)
 I WHICH>2,$D(IENS) D
"RTN","IBJPC1",191,0)
 . S DIR(0)="EA",Z=1
"RTN","IBJPC1",192,0)
 . S DIR("A",Z)=" ",Z=Z+1
"RTN","IBJPC1",193,0)
 . S DIR("A",Z)="The following "_CNT_" "_TYPE_" record"_$S(CNT>1:"s",1:"")_" added:",Z=Z+1
"RTN","IBJPC1",194,0)
 . S Z1=0
"RTN","IBJPC1",195,0)
 . F  S Z1=$O(IENS(Z1)) Q:'Z1  D
"RTN","IBJPC1",196,0)
 .. S NAME=$$EXTERNAL^DILFD(350.9_NODE,.01,"",+Z1)
"RTN","IBJPC1",197,0)
 .. S IENS(Z1)=NAME,DIR("A",Z)=NAME,Z=Z+1
"RTN","IBJPC1",198,0)
 .. Q
"RTN","IBJPC1",199,0)
 . S DIR("A",Z)=" ",Z=Z+1
"RTN","IBJPC1",200,0)
 . S DIR("A")="Press RETURN to continue "
"RTN","IBJPC1",201,0)
 . D ^DIR
"RTN","IBJPC1",202,0)
 ;
"RTN","IBJPC1",203,0)
 D INIT(WHICH) ; Rebuild list body
"RTN","IBJPC1",204,0)
 S VALMSG="Added "_TYPE
"RTN","IBJPC1",205,0)
 Q
"RTN","IBJPC1",206,0)
 ;
"RTN","IBJPC1",207,0)
DEL(WHICH) ;EP
"RTN","IBJPC1",208,0)
 ; Listman Protocol Action to delete an entry from the specified Site Parameter
"RTN","IBJPC1",209,0)
 ; node
"RTN","IBJPC1",210,0)
 ; Input:   WHICH   - 1 - Deleting from the Clinic Search inclusion list
"RTN","IBJPC1",211,0)
 ;                    2 - Deleting from the Ward Search inclusion list
"RTN","IBJPC1",212,0)
 ;                    3 - Deleting from the Admission Search inclusion list
"RTN","IBJPC1",213,0)
 ;                    4 - Deleting from to the Appt Search exclusion list
"RTN","IBJPC1",214,0)
 ;
"RTN","IBJPC1",215,0)
 N CNT,DA,DIK,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LIST,NAME
"RTN","IBJPC1",216,0)
 N NODE,NODE0,SELSTR,STR,TYPE,X,XX,Y,Z,Z1
"RTN","IBJPC1",217,0)
 S NODE=$S(WHICH=1:63,WHICH=2:64,WHICH=3:66,1:65)
"RTN","IBJPC1",218,0)
 S TYPE=$S(WHICH=1:"Clinic",WHICH=2:"Ward",1:"Insurance Company")
"RTN","IBJPC1",219,0)
 S VALMBCK="R"    ; Refresh screen on return
"RTN","IBJPC1",220,0)
 Q:'$$LOCK(NODE)  ; Couldn't lock for deletion
"RTN","IBJPC1",221,0)
 D FULL^VALM1
"RTN","IBJPC1",222,0)
 D WARNMSG       ; Display warning message
"RTN","IBJPC1",223,0)
 S STR=$$SELEVENT^IBTRH1(0,"",.SELSTR,1,"IBJPC1IX")
"RTN","IBJPC1",224,0)
 ;
"RTN","IBJPC1",225,0)
 ; Check for 'MEDICARE/MEDICAID' entries (ins. companies only)
"RTN","IBJPC1",226,0)
 I STR'="" D
"RTN","IBJPC1",227,0)
 . F Z=1:1:$L(STR,",") D
"RTN","IBJPC1",228,0)
 . . S Z1=$P(STR,",",Z),NODE0=$G(^IBE(350.9,1,NODE,Z1,0))
"RTN","IBJPC1",229,0)
 . . S NAME=$$EXTERNAL^DILFD(350.9_NODE,.01,"",+$P(NODE0,"^",1))
"RTN","IBJPC1",230,0)
 . . S LIST(Z1)=NAME
"RTN","IBJPC1",231,0)
 ;
"RTN","IBJPC1",232,0)
 ; Delete the selected entries from the list
"RTN","IBJPC1",233,0)
 S DA(1)=1,(CNT,DA)=0
"RTN","IBJPC1",234,0)
 F  S DA=$O(LIST(DA)) Q:'DA  D
"RTN","IBJPC1",235,0)
 . S CNT=CNT+1,DIK="^IBE(350.9,"_DA(1)_","_NODE_","
"RTN","IBJPC1",236,0)
 . D ^DIK
"RTN","IBJPC1",237,0)
 S DIR(0)="EA",Z=1
"RTN","IBJPC1",238,0)
 S DIR("A",Z)=" ",Z=Z+1
"RTN","IBJPC1",239,0)
 I STR="" S DIR("A",Z)="No "_TYPE_" records selected",Z=Z+1
"RTN","IBJPC1",240,0)
 I STR'="" D
"RTN","IBJPC1",241,0)
 . I $D(LIST) D 
"RTN","IBJPC1",242,0)
 . . S DIR("A",Z)="The following "_CNT_" "_TYPE_" record"_$S(CNT>1:"s",1:"")_" deleted:",Z=Z+1
"RTN","IBJPC1",243,0)
 . . S Z1=0
"RTN","IBJPC1",244,0)
 . . F  S Z1=$O(LIST(Z1)) Q:'Z1  S DIR("A",Z)=LIST(Z1),Z=Z+1
"RTN","IBJPC1",245,0)
 S DIR("A",Z)=" ",Z=Z+1
"RTN","IBJPC1",246,0)
 S DIR("A")="Press RETURN to continue "
"RTN","IBJPC1",247,0)
 D ^DIR
"RTN","IBJPC1",248,0)
 D UNLOCK(NODE)          ; Unlock Site Parameter node
"RTN","IBJPC1",249,0)
 I STR'="" D INIT(WHICH) ; Rebuild list body
"RTN","IBJPC1",250,0)
 Q
"RTN","IBJPC1",251,0)
 ;
"RTN","IBJPC1",252,0)
WARNMSG ;EP
"RTN","IBJPC1",253,0)
 ; Displays a warning message to the user when they modify site parameters
"RTN","IBJPC1",254,0)
 ; Input:   None
"RTN","IBJPC1",255,0)
 ; Output:  Warning message displayed
"RTN","IBJPC1",256,0)
 W !!,"**Warning**"
"RTN","IBJPC1",257,0)
 W !,"Changing the value in CPAC/TRICARE/CHAMPVA parameters will affect the Health"
"RTN","IBJPC1",258,0)
 W !,"Care Services Review Worklist.",!!
"RTN","IBJPC1",259,0)
 Q
"RTN","IBJPC1",260,0)
 ;
"RTN","IBJPC1",261,0)
ENTSEL(NODE,IENS,WHICHF)   ; Selects an entry to be added to the specified Site Parameter Node
"RTN","IBJPC1",262,0)
 ; Input:
"RTN","IBJPC1",263,0)
 ;      NODE        - Site Parameter node where the data resides
"RTN","IBJPC1",264,0)
 ;      WHICHF      - 1 - Adding/Deleting to the Clinic Search 
"RTN","IBJPC1",265,0)
 ;                        inclusion list
"RTN","IBJPC1",266,0)
 ;                    2 - Adding/Deleting to the Ward Search inclusion
"RTN","IBJPC1",267,0)
 ;                        list
"RTN","IBJPC1",268,0)
 ;                    3 - Adding/Deleting to the Admission Search
"RTN","IBJPC1",269,0)
 ;                        exclusion list
"RTN","IBJPC1",270,0)
 ;                    4 - Adding/Deleting to the Appointment Search
"RTN","IBJPC1",271,0)
 ;                        exclusion list
"RTN","IBJPC1",272,0)
 ; Output:   IENS       - Array of selected IEN(s), "" if not selected
"RTN","IBJPC1",273,0)
 ; Returns:  1          - At least one IEN selected, 0 otherwise
"RTN","IBJPC1",274,0)
 N DA,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FDA,IENARY,IX,STOP,STOP2,TYPE,X,XX,Y,Z
"RTN","IBJPC1",275,0)
 K IENS
"RTN","IBJPC1",276,0)
 S STOP=0
"RTN","IBJPC1",277,0)
 S TYPE=$S(NODE=63:"a Clinic",NODE=64:"a Ward",1:"an Insurance Company")
"RTN","IBJPC1",278,0)
 S DIC=$S(NODE=63:44,NODE=64:42,1:36)
"RTN","IBJPC1",279,0)
 S DIC(0)="AEQM"
"RTN","IBJPC1",280,0)
 S DIC("A")="Select "_TYPE_" to be added: "
"RTN","IBJPC1",281,0)
 ;
"RTN","IBJPC1",282,0)
 ; Set the Add filter
"RTN","IBJPC1",283,0)
 S XX="I '$D(^IBE(350.9,1,"_NODE_",""B"",Y))"
"RTN","IBJPC1",284,0)
 S XX=XX_"&'$D(IENS(+Y))"
"RTN","IBJPC1",285,0)
 S DIC("S")=XX
"RTN","IBJPC1",286,0)
 F  D  Q:STOP
"RTN","IBJPC1",287,0)
 .D ^DIC
"RTN","IBJPC1",288,0)
 .I Y'>0 S STOP=1 Q
"RTN","IBJPC1",289,0)
 .S IENS(+Y)=""
"RTN","IBJPC1",290,0)
 .D:WHICHF>2 ADDBYEID(+Y,.IENS)
"RTN","IBJPC1",291,0)
 .; create entry for clinic / ward - need to do it here for payer assoc.
"RTN","IBJPC1",292,0)
 .I WHICHF'>2 D
"RTN","IBJPC1",293,0)
 ..K FDA,IENARY
"RTN","IBJPC1",294,0)
 ..S FDA("350.9"_NODE,"+1,1,",.01)=+Y
"RTN","IBJPC1",295,0)
 ..S FDA("350.9"_NODE,"+1,1,",.02)=0
"RTN","IBJPC1",296,0)
 ..D UPDATE^DIE("","FDA","IENARY")
"RTN","IBJPC1",297,0)
 ..I +$G(IENARY(1)) D ADDPYR1^IBJPC3(NODE,IENARY(1))
"RTN","IBJPC1",298,0)
 ..Q
"RTN","IBJPC1",299,0)
 .Q
"RTN","IBJPC1",300,0)
 ;
"RTN","IBJPC1",301,0)
 I '$D(IENS) Q 0  ; No IENS selected
"RTN","IBJPC1",302,0)
 Q 1
"RTN","IBJPC1",303,0)
 ;
"RTN","IBJPC1",304,0)
ADDBYEID(IEN,IENS)   ; Asks the user if they also want to add all Insurance
"RTN","IBJPC1",305,0)
 ; companies with the same electronic payer ID.
"RTN","IBJPC1",306,0)
 ; Input:   IEN     - IEN of the insurance company to be added
"RTN","IBJPC1",307,0)
 ;          IENS()  - Current array of insurance companies to be added
"RTN","IBJPC1",308,0)
 ; Output:  IENS()  - Updated array of insurance companies to be added
"RTN","IBJPC1",309,0)
 N DA,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,PAYID,SPAYIEN,X,XX,Y
"RTN","IBJPC1",310,0)
 S XX="Select YES to also add every insurance company with the same "
"RTN","IBJPC1",311,0)
 S XX=XX_"electronic Payer ID."
"RTN","IBJPC1",312,0)
 S DIR("?")=XX
"RTN","IBJPC1",313,0)
 S DIR(0)="Y"
"RTN","IBJPC1",314,0)
 S DIR("A")="Include all payers with the same electronic Payer ID?"
"RTN","IBJPC1",315,0)
 S DIR("B")="NO"
"RTN","IBJPC1",316,0)
 D ^DIR
"RTN","IBJPC1",317,0)
 Q:Y=0
"RTN","IBJPC1",318,0)
 S PAYID=$$GET1^DIQ(36,IEN_",",3.1,"I")
"RTN","IBJPC1",319,0)
 Q:PAYID=""
"RTN","IBJPC1",320,0)
 S SPAYIEN=""
"RTN","IBJPC1",321,0)
 F  D  Q:SPAYIEN=""
"RTN","IBJPC1",322,0)
 . S SPAYIEN=$O(^DIC(36,"AC",PAYID,SPAYIEN))
"RTN","IBJPC1",323,0)
 . Q:SPAYIEN=""
"RTN","IBJPC1",324,0)
 . I $D(^IBE(350.9,1,NODE,"B",SPAYIEN)) Q  ;eliminate duplicates
"RTN","IBJPC1",325,0)
 . S IENS(SPAYIEN)=""
"RTN","IBJPC1",326,0)
 Q
"RTN","IBJPC1",327,0)
 ;
"RTN","IBJPC1",328,0)
LOCK(NODE)  ;EP
"RTN","IBJPC1",329,0)
 ; Attempt to lock the Site Parameter node that is being worked
"RTN","IBJPC1",330,0)
 ; Input:   NODE        - Site Parameter node where the data resides
"RTN","IBJPC1",331,0)
 ; Returns: 1           - Successfully locked
"RTN","IBJPC1",332,0)
 ;          0           - Not successfully locked and an error message is
"RTN","IBJPC1",333,0)
 ;                        displayed
"RTN","IBJPC1",334,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,TEXT,X,Y
"RTN","IBJPC1",335,0)
 L +^IBE(350.9,1,NODE):1
"RTN","IBJPC1",336,0)
 I '$T D  Q 0
"RTN","IBJPC1",337,0)
 . S:NODE=62 TEXT="Other Parameters."
"RTN","IBJPC1",338,0)
 . S:NODE=63 TEXT="Clinics Included in the Search List."
"RTN","IBJPC1",339,0)
 . S:NODE=64 TEXT="Ward Included in the Search List."
"RTN","IBJPC1",340,0)
 . S:NODE=65 TEXT="Insurances Included in the Appointment Search List."
"RTN","IBJPC1",341,0)
 . S:NODE=66 TEXT="Insurances Included in the Admissions Search List."
"RTN","IBJPC1",342,0)
 . W @IOF,"Someone else is editing the "_TEXT
"RTN","IBJPC1",343,0)
 . W !,"Please Try again later"
"RTN","IBJPC1",344,0)
 . D PAUSE^VALM1
"RTN","IBJPC1",345,0)
 Q 1
"RTN","IBJPC1",346,0)
 ;
"RTN","IBJPC1",347,0)
UNLOCK(NODE) ;EP
"RTN","IBJPC1",348,0)
 ; Unlocks the Site Parameter node that is being worked
"RTN","IBJPC1",349,0)
 ; Input:   NODE        - Site Parameter node where the data resides
"RTN","IBJPC1",350,0)
 L -^IBE(350.9,1,NODE)
"RTN","IBJPC1",351,0)
 Q
"RTN","IBJPC1",352,0)
 ;
"RTN","IBJPC2")
0^10^B18114113^n/a
"RTN","IBJPC2",1,0)
IBJPC2 ;ALB/FA - IBJP HCSR Wards Parameter Screen ;17-JUL-2014
"RTN","IBJPC2",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBJPC2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPC2",4,0)
 ;;
"RTN","IBJPC2",5,0)
 ;
"RTN","IBJPC2",6,0)
EN ;EP
"RTN","IBJPC2",7,0)
 ; Main entry point for IBJP HCSR PARAMETERS
"RTN","IBJPC2",8,0)
 D EN^VALM("IBJP HCSR PARAMETERS")
"RTN","IBJPC2",9,0)
 Q
"RTN","IBJPC2",10,0)
 ;
"RTN","IBJPC2",11,0)
HDR ;EP
"RTN","IBJPC2",12,0)
 ; Header code
"RTN","IBJPC2",13,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPC2",14,0)
 Q
"RTN","IBJPC2",15,0)
 ;
"RTN","IBJPC2",16,0)
INIT ;EP
"RTN","IBJPC2",17,0)
 ; Initialize variables and list array
"RTN","IBJPC2",18,0)
 K ^TMP("IBJPC2",$J)
"RTN","IBJPC2",19,0)
 D BLD
"RTN","IBJPC2",20,0)
 Q
"RTN","IBJPC2",21,0)
 ;
"RTN","IBJPC2",22,0)
BLD ; Build screen array, no variables required for input
"RTN","IBJPC2",23,0)
 N IBLN,IBTRKR62,TEXT
"RTN","IBJPC2",24,0)
 S IBTRKR62=$G(^IBE(350.9,1,62))                ; IB*2.0*517 added line
"RTN","IBJPC2",25,0)
 S IBLN=$$SETTEXT("",1,1)
"RTN","IBJPC2",26,0)
 S TEXT="Health Care Services Review (HCSR) Parameters"
"RTN","IBJPC2",27,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,17,1)
"RTN","IBJPC2",28,0)
 S TEXT=$J("CPAC Future Appointments Search: ",57)_$J($P(IBTRKR62,U,13),4)_" days"
"RTN","IBJPC2",29,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",30,0)
 S TEXT=$J("CPAC Future Admissions Search: ",57)_$J($P(IBTRKR62,U,2),4)_" days"
"RTN","IBJPC2",31,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",32,0)
 S TEXT=$J("CPAC Past Appointments Search: ",57)_$J($P(IBTRKR62,U,3),4)_" days"
"RTN","IBJPC2",33,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",34,0)
 S TEXT=$J("CPAC Past Admissions Search: ",57)_$J($P(IBTRKR62,U,4),4)_" days"
"RTN","IBJPC2",35,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",36,0)
 S TEXT=$J("TRICARE/CHAMPVA Future Appointments Search: ",57)_$J($P(IBTRKR62,U,5),4)_" days"
"RTN","IBJPC2",37,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",38,0)
 S TEXT=$J("TRICARE/CHAMPVA Future Admissions Search: ",57)_$J($P(IBTRKR62,U,6),4)_" days"
"RTN","IBJPC2",39,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",40,0)
 S TEXT=$J("TRICARE/CHAMPVA Past Appointments Search: ",57)_$J($P(IBTRKR62,U,7),4)_" days"
"RTN","IBJPC2",41,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",42,0)
 S TEXT=$J("TRICARE/CHAMPVA Past Admissions Search: ",57)_$J($P(IBTRKR62,U,8),4)_" days"
"RTN","IBJPC2",43,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",44,0)
 S TEXT=$J("Inquiry can be Triggered for Appointment: ",57)_$J($P(IBTRKR62,U,10),4)_" days"
"RTN","IBJPC2",45,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",46,0)
 S TEXT=$J("Inquiry can be Triggered for Admission: ",57)_$J($P(IBTRKR62,U,11),4)_" days"
"RTN","IBJPC2",47,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",48,0)
 S TEXT=$J("Days to wait to purge entry on HCSR Response: ",57)_$J($P(IBTRKR62,U,12),4)_" days"
"RTN","IBJPC2",49,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",50,0)
 S TEXT=$J("Clinics Included In the Search: ",57)_$J(+$P($G(^IBE(350.9,1,63,0)),U,4),4)
"RTN","IBJPC2",51,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",52,0)
 S TEXT=$J("Wards Included In the Search: ",57)_$J(+$P($G(^IBE(350.9,1,64,0)),U,4),4)
"RTN","IBJPC2",53,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",54,0)
 S TEXT=$J("Insurance Companies Included In the Appointments Search: ",57)_$J(+$P($G(^IBE(350.9,1,65,0)),U,4),4)
"RTN","IBJPC2",55,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",56,0)
 S TEXT=$J("Insurance Companies Included In the Admissions Search: ",57)_$J(+$P($G(^IBE(350.9,1,66,0)),U,4),4)
"RTN","IBJPC2",57,0)
 S IBLN=$$SETTEXT(TEXT,IBLN,1)
"RTN","IBJPC2",58,0)
 S (IBLN,VALMCNT)=IBLN-1
"RTN","IBJPC2",59,0)
 Q
"RTN","IBJPC2",60,0)
 ;
"RTN","IBJPC2",61,0)
SETTEXT(TEXT,LN,COL,RV) ; Sets a line of text into the body of the template
"RTN","IBJPC2",62,0)
 ; Input:   TEXT            - Text to be displayed
"RTN","IBJPC2",63,0)
 ;          LN              - Body line to display text on
"RTN","IBJPC2",64,0)
 ;          COL             - Column to begin display the text in
"RTN","IBJPC2",65,0)
 ;          RV              - 1 - Set Video Control Characters. Null Otherwise
"RTN","IBJPC2",66,0)
 ;          ^TMP("IBJPC2")  - Current global array of body display lines
"RTN","IBJPC2",67,0)
 ; Output:  ^TMP("IBJPC2")  - Updated global array of body display lines
"RTN","IBJPC2",68,0)
 ; Returns: LN              - Next body line after the one just set
"RTN","IBJPC2",69,0)
 N IBY
"RTN","IBJPC2",70,0)
 S IBY=" "_TEXT_" "
"RTN","IBJPC2",71,0)
 D SET1(IBY,LN,COL,$L(IBY),$G(RV))
"RTN","IBJPC2",72,0)
 S LN=LN+1
"RTN","IBJPC2",73,0)
 Q LN
"RTN","IBJPC2",74,0)
 ;
"RTN","IBJPC2",75,0)
SET1(STR,LN,COL,WD,RV) ; Sets up TMP array with screen data
"RTN","IBJPC2",76,0)
 ; Input:   STR             - Text to be set into the line of the body
"RTN","IBJPC2",77,0)
 ;          LN              - Line of the body to be set
"RTN","IBJPC2",78,0)
 ;          COL             - Column to begin displaying text in
"RTN","IBJPC2",79,0)
 ;          WD              - Width of the text to be displayed
"RTN","IBJPC2",80,0)
 ;          RV              - 1 - Set Video Control Characters. Null Otherwise
"RTN","IBJPC2",81,0)
 ;          ^TMP("IBJPC2")  - Current global array of body display lines
"RTN","IBJPC2",82,0)
 ; Output:  ^TMP("IBJPC2")  - Updated global array of body display lines
"RTN","IBJPC2",83,0)
 N IBX
"RTN","IBJPC2",84,0)
 S IBX=$G(^TMP("IBJPC2",$J,LN,0))
"RTN","IBJPC2",85,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJPC2",86,0)
 D SET^VALM10(LN,IBX)
"RTN","IBJPC2",87,0)
 I $G(RV)'="" D CNTRL^VALM10(LN,COL,WD,IORVON,IORVOFF)
"RTN","IBJPC2",88,0)
 Q
"RTN","IBJPC2",89,0)
 ;
"RTN","IBJPC2",90,0)
HELP ;EP
"RTN","IBJPC2",91,0)
 ; Help code
"RTN","IBJPC2",92,0)
 S X="?"
"RTN","IBJPC2",93,0)
 D DISP^XQORM1
"RTN","IBJPC2",94,0)
 W !!
"RTN","IBJPC2",95,0)
 Q
"RTN","IBJPC2",96,0)
 ;
"RTN","IBJPC2",97,0)
OP ;EP
"RTN","IBJPC2",98,0)
 ; Listman Protocol Action to Edit 'Other' HBCSR Site Parameters in node 62
"RTN","IBJPC2",99,0)
 N DA,DR,DIE,DTOUT
"RTN","IBJPC2",100,0)
 S DIE=350.9,DA=1
"RTN","IBJPC2",101,0)
 S DR="62.1Inquiry can be Triggered for Appointment"
"RTN","IBJPC2",102,0)
 S DR=DR_";62.11Inquiry can be Triggered for Admission"
"RTN","IBJPC2",103,0)
 S DR=DR_";62.12Days to wait to purge entry on HCSR Response"
"RTN","IBJPC2",104,0)
 S VALMBCK="R"                                  ; Refresh screen on return
"RTN","IBJPC2",105,0)
 Q:'$$LOCK^IBJPC1(62)                           ; Lock node 62 for editing
"RTN","IBJPC2",106,0)
 ;
"RTN","IBJPC2",107,0)
 D FULL^VALM1
"RTN","IBJPC2",108,0)
 D WARNMSG^IBJPC1                               ; Display warning message
"RTN","IBJPC2",109,0)
 ;
"RTN","IBJPC2",110,0)
 D ^DIE
"RTN","IBJPC2",111,0)
 D UNLOCK^IBJPC1(62)
"RTN","IBJPC2",112,0)
 Q
"RTN","IBJPC2",113,0)
 ;
"RTN","IBJPC2",114,0)
EXIT ;EP
"RTN","IBJPC2",115,0)
 ; Exit code
"RTN","IBJPC2",116,0)
 K ^TMP("IBJPC2",$J)
"RTN","IBJPC2",117,0)
 D CLEAR^VALM1
"RTN","IBJPC2",118,0)
 Q
"RTN","IBJPC2",119,0)
 ;
"RTN","IBJPC2",120,0)
EXPND ;EP
"RTN","IBJPC2",121,0)
 ; Expand code
"RTN","IBJPC2",122,0)
 Q
"RTN","IBJPC2",123,0)
 ;
"RTN","IBJPC3")
0^43^B14208611^n/a
"RTN","IBJPC3",1,0)
IBJPC3 ;ALB/YMG - IBJP HCSR Wards/Clinics association with Payer ;10-JUN-2015
"RTN","IBJPC3",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBJPC3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPC3",4,0)
 ;;
"RTN","IBJPC3",5,0)
 ;
"RTN","IBJPC3",6,0)
 Q
"RTN","IBJPC3",7,0)
 ;
"RTN","IBJPC3",8,0)
ADDPYR(WHICH) ; Add payer association
"RTN","IBJPC3",9,0)
 ; WHICH = 1 - use Clinic Search inclusion list
"RTN","IBJPC3",10,0)
 ;         2 - use Ward Search inclusion list
"RTN","IBJPC3",11,0)
 ;
"RTN","IBJPC3",12,0)
 N ANOTHER,DA,DIC,DLAYGO,DO,DTOUT,DUOUT,IEN,NODE,REFRESH,X,Y
"RTN","IBJPC3",13,0)
 S VALMBCK="R"
"RTN","IBJPC3",14,0)
 D FULL^VALM1
"RTN","IBJPC3",15,0)
 S IEN=$$SELEVENT^IBTRH1(0,"","",0,"IBJPC1IX") I '+IEN Q
"RTN","IBJPC3",16,0)
 S NODE=$S(WHICH=1:63,1:64)
"RTN","IBJPC3",17,0)
 S REFRESH=$$ADDPYR1(NODE,IEN)
"RTN","IBJPC3",18,0)
 I REFRESH D INIT^IBJPC1(WHICH)
"RTN","IBJPC3",19,0)
 Q
"RTN","IBJPC3",20,0)
 ;
"RTN","IBJPC3",21,0)
ADDPYR1(NODE,IEN) ; Add payer association to a given clinic / ward
"RTN","IBJPC3",22,0)
 ; NODE = 63 - for Clinic Search inclusion list
"RTN","IBJPC3",23,0)
 ;        64 - for Ward Search inclusion list
"RTN","IBJPC3",24,0)
 ;
"RTN","IBJPC3",25,0)
 ; IEN - IEN in sub-file 350.963 for clinics or 350.964 for wards
"RTN","IBJPC3",26,0)
 ;
"RTN","IBJPC3",27,0)
 ; returns 1 if screen refresh is necessary, 0 otherwise
"RTN","IBJPC3",28,0)
 ;
"RTN","IBJPC3",29,0)
 N ANOTHER,DA,DIC,DLAYGO,DO,DTOUT,DUOUT,REFRESH,X,Y
"RTN","IBJPC3",30,0)
 I NODE'>0!(IEN'>0) Q
"RTN","IBJPC3",31,0)
 D DISPPYR(NODE,IEN)
"RTN","IBJPC3",32,0)
 S REFRESH=0 S:$$ASKALL(NODE,IEN,"YES") REFRESH=1
"RTN","IBJPC3",33,0)
 ;
"RTN","IBJPC3",34,0)
 I '$$ISALL(NODE,IEN) D:REFRESH DISPPYR(NODE,IEN) S ANOTHER=1 F  D  Q:$G(DTOUT)!($G(DUOUT))  Q:'ANOTHER
"RTN","IBJPC3",35,0)
 .S DIC=365.12,DIC(0)="AOEMQ",DIC("A")="Select Payer: "
"RTN","IBJPC3",36,0)
 .S DIC("S")="I '$O(^IBE(350.9,1,"_NODE_","_IEN_",1,""B"",Y,""""))"
"RTN","IBJPC3",37,0)
 .D ^DIC I +Y'>0 S ANOTHER=0 Q
"RTN","IBJPC3",38,0)
 .S DIC="^IBE(350.9,1,"_NODE_","_IEN_",1,"
"RTN","IBJPC3",39,0)
 .S DIC(0)="L",DA(1)=IEN,DA(2)=1,X=+Y,DLAYGO=$S(WHICH=1:350.9631,1:350.9641)
"RTN","IBJPC3",40,0)
 .K DO D FILE^DICN
"RTN","IBJPC3",41,0)
 .I '$G(DTOUT)&('$G(DUOUT)) S:+Y>0 REFRESH=1 W !,$S(+Y>0:"Payer added to the list.",1:"Unable to add payer.")
"RTN","IBJPC3",42,0)
 .Q 
"RTN","IBJPC3",43,0)
 Q REFRESH
"RTN","IBJPC3",44,0)
 ;
"RTN","IBJPC3",45,0)
DELPYR(WHICH) ; Delete payer association
"RTN","IBJPC3",46,0)
 ; WHICH = 1 - use Clinic Search inclusion list
"RTN","IBJPC3",47,0)
 ;         2 - use Ward Search inclusion list
"RTN","IBJPC3",48,0)
 ;
"RTN","IBJPC3",49,0)
 N ANOTHER,DA,DIC,DIK,DTOUT,DUOUT,IEN,NODE,REFRESH,X,Y
"RTN","IBJPC3",50,0)
 N IEN,NODE
"RTN","IBJPC3",51,0)
 S VALMBCK="R",REFRESH=0
"RTN","IBJPC3",52,0)
 D FULL^VALM1
"RTN","IBJPC3",53,0)
 S IEN=$$SELEVENT^IBTRH1(0,"","",0,"IBJPC1IX") I '+IEN Q
"RTN","IBJPC3",54,0)
 S NODE=$S(WHICH=1:63,1:64)
"RTN","IBJPC3",55,0)
 D DISPPYR(NODE,IEN)
"RTN","IBJPC3",56,0)
 S:$$ASKALL(NODE,IEN,"NO") REFRESH=1
"RTN","IBJPC3",57,0)
 ;
"RTN","IBJPC3",58,0)
 I '$$ISALL(NODE,IEN),$$GETTOT(NODE,IEN)>0 D
"RTN","IBJPC3",59,0)
 .S ANOTHER=1 D:REFRESH DISPPYR(NODE,IEN) F  D  Q:$G(DTOUT)!($G(DUOUT))!($$GETTOT(NODE,IEN)'>0)  Q:'ANOTHER
"RTN","IBJPC3",60,0)
 ..S (DIC,DIK)="^IBE(350.9,1,"_NODE_","_IEN_",1,",DIC(0)="AOEMQ",DIC("A")="Select Payer: " D ^DIC
"RTN","IBJPC3",61,0)
 ..I +Y'>0 S ANOTHER=0 Q
"RTN","IBJPC3",62,0)
 ..S DA(1)=IEN,DA(2)=1,DA=+Y D ^DIK W !,"Payer deleted from the list." S REFRESH=1
"RTN","IBJPC3",63,0)
 ..Q
"RTN","IBJPC3",64,0)
 .Q
"RTN","IBJPC3",65,0)
 I REFRESH D INIT^IBJPC1(WHICH)
"RTN","IBJPC3",66,0)
 Q
"RTN","IBJPC3",67,0)
 ;
"RTN","IBJPC3",68,0)
DISPPYR(NODE,IEN) ; Display payer association
"RTN","IBJPC3",69,0)
 ; NODE = 63 - for Clinic Search inclusion list
"RTN","IBJPC3",70,0)
 ;        64 - for Ward Search inclusion list
"RTN","IBJPC3",71,0)
 ;
"RTN","IBJPC3",72,0)
 ; IEN - IEN in sub-file 350.963 for clinics or 350.964 for wards
"RTN","IBJPC3",73,0)
 ;
"RTN","IBJPC3",74,0)
 N ISALL,PYRNAME,PYRPTR,TOTAL,Z
"RTN","IBJPC3",75,0)
 I '+$G(IEN)!('+$G(NODE)) Q
"RTN","IBJPC3",76,0)
 S ISALL=$$ISALL(NODE,IEN),TOTAL=$$GETTOT(NODE,IEN)
"RTN","IBJPC3",77,0)
 W !!,$S(WHICH=1:"Clinic",1:"Ward")," is currently included in the list for ",$S(ISALL:"all payers.",'ISALL&('TOTAL):"no payers",1:"the following "_TOTAL_" payers:"),!
"RTN","IBJPC3",78,0)
 I 'ISALL S Z=0 F  S Z=$O(^IBE(350.9,1,NODE,IEN,1,Z)) Q:'Z  D
"RTN","IBJPC3",79,0)
 .S PYRPTR=+$P(^IBE(350.9,1,NODE,IEN,1,Z,0),U) I PYRPTR W !,$P(^IBE(365.12,PYRPTR,0),U)
"RTN","IBJPC3",80,0)
 .Q
"RTN","IBJPC3",81,0)
 W !
"RTN","IBJPC3",82,0)
 Q
"RTN","IBJPC3",83,0)
 ;
"RTN","IBJPC3",84,0)
ASKALL(NODE,IEN,DEF) ; Prompt for association with all payers
"RTN","IBJPC3",85,0)
 ; NODE = 63 - for Clinic Search inclusion list
"RTN","IBJPC3",86,0)
 ;        64 - for Ward Search inclusion list
"RTN","IBJPC3",87,0)
 ;
"RTN","IBJPC3",88,0)
 ; IEN - IEN in sub-file 350.963 for clinics or 350.964 for wards
"RTN","IBJPC3",89,0)
 ; DEF - default for the prompt ("YES" or "NO")
"RTN","IBJPC3",90,0)
 ;
"RTN","IBJPC3",91,0)
 ; returns 1 if value of .02 field has changed, 0 otherwise
"RTN","IBJPC3",92,0)
 ;
"RTN","IBJPC3",93,0)
 N DA,DIE,DR,DTOUT,VAL,X,Y
"RTN","IBJPC3",94,0)
 S VAL=$$ISALL(NODE,IEN)
"RTN","IBJPC3",95,0)
 S DIE="^IBE(350.9,1,"_NODE_",",DA=IEN,DR=".02//"_DEF D ^DIE
"RTN","IBJPC3",96,0)
 Q $S(VAL=$$ISALL(NODE,IEN):0,1:1)
"RTN","IBJPC3",97,0)
 ;
"RTN","IBJPC3",98,0)
ISALL(NODE,IEN) ; Check association with all payers
"RTN","IBJPC3",99,0)
 ; NODE = 63 - for Clinic Search inclusion list
"RTN","IBJPC3",100,0)
 ;        64 - for Ward Search inclusion list
"RTN","IBJPC3",101,0)
 ;
"RTN","IBJPC3",102,0)
 ; IEN - IEN in sub-file 350.963 for clinics or 350.964 for wards
"RTN","IBJPC3",103,0)
 ;
"RTN","IBJPC3",104,0)
 ; Returns 1 if clinic/ward is associated with all payers, 0 otherwise
"RTN","IBJPC3",105,0)
 N RES
"RTN","IBJPC3",106,0)
 S RES=0 I +$G(IEN)&(+$G(NODE)) S RES=+$P($G(^IBE(350.9,1,NODE,IEN,0)),U,2)
"RTN","IBJPC3",107,0)
 Q RES
"RTN","IBJPC3",108,0)
 ;
"RTN","IBJPC3",109,0)
GETTOT(NODE,IEN) ; Returns total number of payers associated with clinic/ward.
"RTN","IBJPC3",110,0)
 ; NODE = 63 - for Clinic Search inclusion list
"RTN","IBJPC3",111,0)
 ;        64 - for Ward Search inclusion list
"RTN","IBJPC3",112,0)
 ;
"RTN","IBJPC3",113,0)
 ; IEN - IEN in sub-file 350.963 for clinics or 350.964 for wards
"RTN","IBJPC3",114,0)
 ;
"RTN","IBJPC3",115,0)
 N RES
"RTN","IBJPC3",116,0)
 S RES=0 I +$G(IEN)&(+$G(NODE)) S RES=+$P($G(^IBE(350.9,1,NODE,IEN,1,0)),U,4)
"RTN","IBJPC3",117,0)
 Q RES
"RTN","IBJPM")
0^31^B11156673^B10881232
"RTN","IBJPM",1,0)
IBJPM ;ALB/MAF,ARH - IBSP MCCR PARAMETERS SCREEN ;14-DEC-1995
"RTN","IBJPM",2,0)
 ;;2.0;INTEGRATED BILLING;**39,137,184,271,316,416,438,517**;21-MAR-94;Build 240
"RTN","IBJPM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPM",4,0)
 ;
"RTN","IBJPM",5,0)
EN ; -- main entry point for JOINT INQUIRY PARAMETERS option
"RTN","IBJPM",6,0)
 D EN^VALM("IBJP MCCR PARAMETERS")
"RTN","IBJPM",7,0)
 Q
"RTN","IBJPM",8,0)
 ;
"RTN","IBJPM",9,0)
HDR ; -- header code
"RTN","IBJPM",10,0)
 S VALMHDR(1)="Display/Edit MCCR Site Parameters."
"RTN","IBJPM",11,0)
 S VALMHDR(2)="Only authorized persons may edit this data."
"RTN","IBJPM",12,0)
 Q
"RTN","IBJPM",13,0)
 ;
"RTN","IBJPM",14,0)
INIT ; -- init variables and list array
"RTN","IBJPM",15,0)
 K ^TMP("IBJPM",$J)
"RTN","IBJPM",16,0)
 D BLD
"RTN","IBJPM",17,0)
 Q
"RTN","IBJPM",18,0)
 ;
"RTN","IBJPM",19,0)
HELP ; -- help code
"RTN","IBJPM",20,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPM",21,0)
 Q
"RTN","IBJPM",22,0)
 ;
"RTN","IBJPM",23,0)
EXIT ; -- exit code
"RTN","IBJPM",24,0)
 K ^TMP("IBJPM",$J),IBFASTXT,VALMBCK
"RTN","IBJPM",25,0)
 D CLEAR^VALM1
"RTN","IBJPM",26,0)
 Q
"RTN","IBJPM",27,0)
 ;
"RTN","IBJPM",28,0)
BLD ; -- build screen array, no variables required for input
"RTN","IBJPM",29,0)
 N IBNC,IBTC,IBTW,IBSW,IBLN,IBGRPB,IBGRPE,IBLR
"RTN","IBJPM",30,0)
 S IBNC(1)=1,IBTW(1)=0,IBTC(1)=5,IBSW(1)=30,IBNC(2)=43,IBTW(2)=0,IBTC(2)=47,IBSW(2)=30
"RTN","IBJPM",31,0)
 ;
"RTN","IBJPM",32,0)
 S (VALMCNT,IBLN)=1,IBLR=1,IBLN=$$SET("","",IBLN,IBLR),IBGRPB=IBLN
"RTN","IBJPM",33,0)
 ;
"RTN","IBJPM",34,0)
 ; - IB Site Parameters
"RTN","IBJPM",35,0)
 S IBLN=$$SETN("IB Site Parameters",IBLN,IBLR,1)
"RTN","IBJPM",36,0)
 S IBLN=$$SET("","Facility Definition",IBLN,IBLR)
"RTN","IBJPM",37,0)
 S IBLN=$$SET("","Mail Groups",IBLN,IBLR)
"RTN","IBJPM",38,0)
 S IBLN=$$SET("","Patient Billing",IBLN,IBLR)
"RTN","IBJPM",39,0)
 S IBLN=$$SET("","Third Party Billing",IBLN,IBLR)
"RTN","IBJPM",40,0)
 S IBLN=$$SET("","Provider Id",IBLN,IBLR)
"RTN","IBJPM",41,0)
 S IBLN=$$SET("","EDI Transmission",IBLN,IBLR)
"RTN","IBJPM",42,0)
 ;
"RTN","IBJPM",43,0)
 S IBLR=2,IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPM",44,0)
 ;
"RTN","IBJPM",45,0)
 ; - Claim Tracking Parameters
"RTN","IBJPM",46,0)
 S IBLN=$$SETN("Claims Tracking Parameters",IBLN,IBLR,1)
"RTN","IBJPM",47,0)
 S IBLN=$$SET("","General Parameters",IBLN,IBLR)
"RTN","IBJPM",48,0)
 S IBLN=$$SET("","Tracking Parameters",IBLN,IBLR)
"RTN","IBJPM",49,0)
 S IBLN=$$SET("","Random Sampling",IBLN,IBLR)
"RTN","IBJPM",50,0)
 S IBLN=$$SET("","HCSR Parameters",IBLN,IBLR)
"RTN","IBJPM",51,0)
 ;
"RTN","IBJPM",52,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE),IBLR=1,IBLN=$$SET("","",IBLN,IBLR),IBGRPB=IBLN
"RTN","IBJPM",53,0)
 ;
"RTN","IBJPM",54,0)
 ; - Automated Billing Parameters
"RTN","IBJPM",55,0)
 S IBLN=$$SETN("Third Party Auto Billing Parameters",IBLN,IBLR,1)
"RTN","IBJPM",56,0)
 S IBLN=$$SET("","General Parameters",IBLN,IBLR)
"RTN","IBJPM",57,0)
 S IBLN=$$SET("","Inpatient Admission",IBLN,IBLR)
"RTN","IBJPM",58,0)
 S IBLN=$$SET("","Outpatient Visit",IBLN,IBLR)
"RTN","IBJPM",59,0)
 S IBLN=$$SET("","Prescription Refill",IBLN,IBLR)
"RTN","IBJPM",60,0)
 ;
"RTN","IBJPM",61,0)
 ; DAOU/BHS - Added 13-JUN-2002
"RTN","IBJPM",62,0)
 S IBLR=2,IBLN=IBGRPB
"RTN","IBJPM",63,0)
 ;
"RTN","IBJPM",64,0)
 ; DAOU/BHS - Added 13-JUN-2002
"RTN","IBJPM",65,0)
 ; - eIV Parameters
"RTN","IBJPM",66,0)
 S IBLN=$$SETN("Insurance Verification",IBLN,IBLR,1)
"RTN","IBJPM",67,0)
 S IBLN=$$SET("","General Parameters",IBLN,IBLR)
"RTN","IBJPM",68,0)
 S IBLN=$$SET("","Batch Extracts Parameters",IBLN,IBLR)
"RTN","IBJPM",69,0)
 S IBLN=$$SET("","Service Type Codes",IBLN,IBLR)
"RTN","IBJPM",70,0)
 ;
"RTN","IBJPM",71,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE)-1
"RTN","IBJPM",72,0)
 Q
"RTN","IBJPM",73,0)
 ;
"RTN","IBJPM",74,0)
SET(TTL,DATA,LN,LR) ;
"RTN","IBJPM",75,0)
 N IBY
"RTN","IBJPM",76,0)
 S IBY=$J(TTL,IBTW(LR))_DATA D SET1(IBY,LN,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPM",77,0)
 S LN=LN+1
"RTN","IBJPM",78,0)
 Q LN
"RTN","IBJPM",79,0)
 ;
"RTN","IBJPM",80,0)
SETN(TTL,LN,LR,RV) ;
"RTN","IBJPM",81,0)
 N IBY
"RTN","IBJPM",82,0)
 S IBY=" "_TTL_" " D SET1(IBY,LN,IBNC(LR),$L(IBY),$G(RV))
"RTN","IBJPM",83,0)
 S LN=LN+1
"RTN","IBJPM",84,0)
 Q LN
"RTN","IBJPM",85,0)
 ;
"RTN","IBJPM",86,0)
SET1(STR,LN,COL,WD,RV) ; set up TMP array with screen data
"RTN","IBJPM",87,0)
 N IBX S IBX=$G(^TMP("IBJPM",$J,LN,0))
"RTN","IBJPM",88,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJPM",89,0)
 D SET^VALM10(LN,IBX) I $G(RV)'="" D CNTRL^VALM10(LN,COL,WD,IOINHI,IOINORM)
"RTN","IBJPM",90,0)
 Q
"RTN","IBMFNHLI")
0^46^B107548431^n/a
"RTN","IBMFNHLI",1,0)
IBMFNHLI ;ALB/YMG - HL7 Process Incoming MFN Messages ;14-SEP-2015
"RTN","IBMFNHLI",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBMFNHLI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBMFNHLI",4,0)
 ;
"RTN","IBMFNHLI",5,0)
EN ; entry point
"RTN","IBMFNHLI",6,0)
 N APP,CNT,DATA,DATAMFK,DESC,FLN,FSVDY,HCT,HEDI,HLECH,HLFS,HLREP,IBCNACT,IBCNADT,IBSEG,ID,MSG,MSGID,NAFLG
"RTN","IBMFNHLI",7,0)
 N NEWID,NPFLG,PEDI,PSVDY,REQSUB,SEG,SEGCNT,STAT,STOPFLG,SUBJ,TRUSTED,TSSN,X12TABLE,Z
"RTN","IBMFNHLI",8,0)
 ;
"RTN","IBMFNHLI",9,0)
 K ^TMP("IBMFNHLI",$J)
"RTN","IBMFNHLI",10,0)
 S SUBJ="Incoming table update HL7 message problem" ; subject line for mailman error messages
"RTN","IBMFNHLI",11,0)
 ;  Initialize the HL7 variables
"RTN","IBMFNHLI",12,0)
 D INIT^HLFNC2("IB TBLUPD IN",.HL)
"RTN","IBMFNHLI",13,0)
 S HLFS=HL("FS"),HLECH=$E(HL("ECH"),1),HLREP=$E(HL("ECH"),2)
"RTN","IBMFNHLI",14,0)
 ; put message into a TMP global
"RTN","IBMFNHLI",15,0)
 F SEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","IBMFNHLI",16,0)
 .S CNT=0,^TMP("IBMFNHLI",$J,SEGCNT,CNT)=HLNODE
"RTN","IBMFNHLI",17,0)
 .F  S CNT=$O(HLNODE(CNT)) Q:'CNT  S ^TMP("IBMFNHLI",$J,SEGCNT,CNT)=HLNODE(CNT)
"RTN","IBMFNHLI",18,0)
 .Q
"RTN","IBMFNHLI",19,0)
 S SEG=$G(^TMP("IBMFNHLI",$J,1,0))
"RTN","IBMFNHLI",20,0)
 I $E(SEG,1,3)'="MSH" D  G ENX
"RTN","IBMFNHLI",21,0)
 .S MSG(1)="MSH Segment is not the first segment found"
"RTN","IBMFNHLI",22,0)
 .S MSG(2)="Please call the Help Desk and report this problem."
"RTN","IBMFNHLI",23,0)
 .D MSG(SUBJ,"MSG(")
"RTN","IBMFNHLI",24,0)
 .Q
"RTN","IBMFNHLI",25,0)
 S MSGID=$P(SEG,HLFS,10) ; HL7 message control id
"RTN","IBMFNHLI",26,0)
 ; build list of dictionary file numbers that can be updated (table updates)
"RTN","IBMFNHLI",27,0)
 F Z=1,11:1:19,2,21:1:23 S X12TABLE("356.0"_Z)=""
"RTN","IBMFNHLI",28,0)
 F Z=11:1:18 S X12TABLE("365.0"_Z)=""
"RTN","IBMFNHLI",29,0)
 F Z=21:1:28 S X12TABLE("365.0"_Z)=""
"RTN","IBMFNHLI",30,0)
 S X12TABLE(350.9)=""
"RTN","IBMFNHLI",31,0)
 ; Decide if message belongs to "E-Pharm", "eIV", or "HCSR"
"RTN","IBMFNHLI",32,0)
 S APP="",HCT=0,FLN=""
"RTN","IBMFNHLI",33,0)
 F  S HCT=$O(^TMP("IBMFNHLI",$J,HCT)) Q:HCT=""  D SPAR I $G(IBSEG(1))="MFI" S FLN=$P($G(IBSEG(2)),$E(HLECH,1),1) Q
"RTN","IBMFNHLI",34,0)
 I ",366.01,366.02,366.03,365.12,355.3,"[(","_FLN_",") S APP="E-PHARM"
"RTN","IBMFNHLI",35,0)
 I $E(FLN,1,5)="356.0" S APP="HCSR"
"RTN","IBMFNHLI",36,0)
 I $E(FLN,1,5)="365.0" S APP="IIV"
"RTN","IBMFNHLI",37,0)
 I FLN=365.12 S (STOPFLG,HCT)=0 F  S HCT=$O(^TMP("IBMFNHLI",$J,HCT)) Q:HCT=""  D  Q:STOPFLG
"RTN","IBMFNHLI",38,0)
 .D SPAR I $G(IBSEG(1))="ZPA" S APP=$G(IBSEG(3)) S:APP'="" STOPFLG=1
"RTN","IBMFNHLI",39,0)
 .Q
"RTN","IBMFNHLI",40,0)
 ; If unable to determine application, then quit
"RTN","IBMFNHLI",41,0)
 I APP="" D  G ENX
"RTN","IBMFNHLI",42,0)
 .S MSG(1)="Unable to determine application this message is for"
"RTN","IBMFNHLI",43,0)
 .S MSG(2)="Message control id: "_MSGID
"RTN","IBMFNHLI",44,0)
 .D MSG(SUBJ,"MSG(")
"RTN","IBMFNHLI",45,0)
 .Q
"RTN","IBMFNHLI",46,0)
 ;
"RTN","IBMFNHLI",47,0)
 S HCT=1,(NAFLG,NPFLG,STOPFLG)=0,Z=""
"RTN","IBMFNHLI",48,0)
 F  S HCT=$O(^TMP("IBMFNHLI",$J,HCT)) Q:HCT=""  D  Q:STOPFLG
"RTN","IBMFNHLI",49,0)
 .D SPAR S SEG=$G(IBSEG(1))
"RTN","IBMFNHLI",50,0)
 .I SEG="MFI" D
"RTN","IBMFNHLI",51,0)
 ..S FLN=$P($G(IBSEG(2)),$E(HLECH,1),1)
"RTN","IBMFNHLI",52,0)
 ..I APP="E-PHARM" D
"RTN","IBMFNHLI",53,0)
 ...; Initialize MFK Message (Application Acknowledgement) variables
"RTN","IBMFNHLI",54,0)
 ...S DATAMFK("MFI-1")=$G(IBSEG(2)) ; Master File Identifier
"RTN","IBMFNHLI",55,0)
 ...S DATAMFK("MFI-3")=$G(IBSEG(4)) ; File-Level Event Code
"RTN","IBMFNHLI",56,0)
 ...Q
"RTN","IBMFNHLI",57,0)
 ..Q
"RTN","IBMFNHLI",58,0)
 .I SEG="MFE" D
"RTN","IBMFNHLI",59,0)
 ..I $G(FLN)="" S STOPFLG=1 D  Q
"RTN","IBMFNHLI",60,0)
 ...S MSG(1)="File Number not found in MFN message"
"RTN","IBMFNHLI",61,0)
 ...S MSG(2)="Message control id: "_MSGID
"RTN","IBMFNHLI",62,0)
 ...D MSG(SUBJ,"MSG(")
"RTN","IBMFNHLI",63,0)
 ...Q
"RTN","IBMFNHLI",64,0)
 ..I '$$VFILE^DILFD(FLN) S STOPFLG=1 D  Q
"RTN","IBMFNHLI",65,0)
 ...S MSG(1)="File "_FLN_" not found in the Data Dictionary"
"RTN","IBMFNHLI",66,0)
 ...S MSG(2)="Message control id: "_MSGID
"RTN","IBMFNHLI",67,0)
 ...D MSG(SUBJ,"MSG(")
"RTN","IBMFNHLI",68,0)
 ...Q
"RTN","IBMFNHLI",69,0)
 ..I APP="E-PHARM" D
"RTN","IBMFNHLI",70,0)
 ...; Initialize MFK Message (Application Acknowledgement) variables
"RTN","IBMFNHLI",71,0)
 ...S DATAMFK("MFE-1")=$G(IBSEG(2)) ; Record-Level Event Code
"RTN","IBMFNHLI",72,0)
 ...S DATAMFK("MFE-4")=$G(IBSEG(5)) ; Primary Key Value
"RTN","IBMFNHLI",73,0)
 ...S DATAMFK("MFE-5")=$G(IBSEG(6)) ; Primary Key Value Type
"RTN","IBMFNHLI",74,0)
 ...; Transfer control to e-Pharmacy
"RTN","IBMFNHLI",75,0)
 ...D ^IBCNRHLT
"RTN","IBMFNHLI",76,0)
 ...Q
"RTN","IBMFNHLI",77,0)
 ..I APP="IIV"!(APP="HCSR") D
"RTN","IBMFNHLI",78,0)
 ...I FLN'=365.12 D  Q
"RTN","IBMFNHLI",79,0)
 ....S DATA=$G(IBSEG(5))
"RTN","IBMFNHLI",80,0)
 ....S ID=$$DECHL7^IBCNEHL2($P(DATA,$E(HLECH,1),1)),DESC=$$DECHL7^IBCNEHL2($P(DATA,$E(HLECH,1),2))
"RTN","IBMFNHLI",81,0)
 ....D TFIL
"RTN","IBMFNHLI",82,0)
 ....Q
"RTN","IBMFNHLI",83,0)
 ...S IBCNACT=$G(IBSEG(2)) ; Pull the action code
"RTN","IBMFNHLI",84,0)
 ...S IBCNADT=$G(IBSEG(4)) ; Effective Date
"RTN","IBMFNHLI",85,0)
 ...Q
"RTN","IBMFNHLI",86,0)
 ..Q
"RTN","IBMFNHLI",87,0)
 .I SEG="ZP0" D
"RTN","IBMFNHLI",88,0)
 ..I APP="IIV"!(APP="HCSR") D
"RTN","IBMFNHLI",89,0)
 ...S ID=$$DECHL7^IBCNEHL2(IBSEG(3)),NEWID=$$DECHL7^IBCNEHL2(IBSEG(4))
"RTN","IBMFNHLI",90,0)
 ...S DESC=$$DECHL7^IBCNEHL2(IBSEG(5)),HEDI=$$DECHL7^IBCNEHL2(IBSEG(6)),PEDI=$$DECHL7^IBCNEHL2(IBSEG(7))
"RTN","IBMFNHLI",91,0)
 ...Q
"RTN","IBMFNHLI",92,0)
 ..I APP="E-PHARM" D ^IBCNRHLT
"RTN","IBMFNHLI",93,0)
 ..Q
"RTN","IBMFNHLI",94,0)
 .I SEG="ZPA" D
"RTN","IBMFNHLI",95,0)
 ..I APP="IIV"!(APP="HCSR") D
"RTN","IBMFNHLI",96,0)
 ...S STAT=$S(IBSEG(4)="Y":1,1:0),TSSN=IBSEG(5),REQSUB=IBSEG(7)
"RTN","IBMFNHLI",97,0)
 ...S FSVDY=IBSEG(8),PSVDY=IBSEG(9),TRUSTED=$S(IBSEG(10)="N":0,1:1)
"RTN","IBMFNHLI",98,0)
 ...D PFIL
"RTN","IBMFNHLI",99,0)
 ...Q
"RTN","IBMFNHLI",100,0)
 ..Q
"RTN","IBMFNHLI",101,0)
 .; Transfer control to e-Pharmacy on other segments
"RTN","IBMFNHLI",102,0)
 .I ",ZCM,ZPB,ZPL,ZPT,ZRX,"[(","_SEG_","),APP="E-PHARM" D ^IBCNRHLT
"RTN","IBMFNHLI",103,0)
 .Q
"RTN","IBMFNHLI",104,0)
 ;
"RTN","IBMFNHLI",105,0)
 ; Send MFK Message (Application Acknowledgement)?
"RTN","IBMFNHLI",106,0)
 I HL("APAT")="AL",$G(EPHARM),'STOPFLG D ^IBCNRMFK
"RTN","IBMFNHLI",107,0)
 ;
"RTN","IBMFNHLI",108,0)
ENX ; exit point
"RTN","IBMFNHLI",109,0)
 K ^TMP("IBMFNHLI",$J),HL,HLNEXT,HLNODE,HLQUIT
"RTN","IBMFNHLI",110,0)
 Q
"RTN","IBMFNHLI",111,0)
 ;
"RTN","IBMFNHLI",112,0)
PFIL ;  Payer Table Filer
"RTN","IBMFNHLI",113,0)
 ;  Set the action:
"RTN","IBMFNHLI",114,0)
 ;     MAD=Add, MUP=Update, MDC=Deactivate, MAC=Reactivate
"RTN","IBMFNHLI",115,0)
 N AIEN,APIEN,IBAPP,IBCNTYPE,IBDESC,IBID,IBNOK,IBSTR,IEN,OLDAF,OLDTF
"RTN","IBMFNHLI",116,0)
 N DA,DD,DIC,DIE,DLAYGO,DO,DR,X,Y
"RTN","IBMFNHLI",117,0)
 ;
"RTN","IBMFNHLI",118,0)
 S IBNOK=0,IBAPP=($TR(APP," ")="")
"RTN","IBMFNHLI",119,0)
 S IBCNADT=$$FMDATE^HLFNC(IBCNADT)
"RTN","IBMFNHLI",120,0)
 I IBCNADT="" S IBCNADT=$$NOW^XLFDT()
"RTN","IBMFNHLI",121,0)
 ;  If the action is MAD - Add the payer as new
"RTN","IBMFNHLI",122,0)
 I IBCNACT="MAD" D  I IBNOK G PFILX
"RTN","IBMFNHLI",123,0)
 .; Check certain required fields: Application, VA National & Payer Name
"RTN","IBMFNHLI",124,0)
 .; If not populated, send MailMan message.
"RTN","IBMFNHLI",125,0)
 .S IBID=($TR(ID," ")=""),IBDESC=($TR(DESC," ")="")
"RTN","IBMFNHLI",126,0)
 .S IBNOK=IBAPP!IBID!IBDESC
"RTN","IBMFNHLI",127,0)
 .I 'IBNOK D MAD(DESC) Q
"RTN","IBMFNHLI",128,0)
 .S IBSTR="" I IBAPP S IBSTR="Application"
"RTN","IBMFNHLI",129,0)
 .I IBID S:IBSTR]"" IBSTR=IBSTR_", " S IBSTR=IBSTR_"VA National"
"RTN","IBMFNHLI",130,0)
 .I IBDESC S:IBSTR]"" IBSTR=IBSTR_", " S IBSTR=IBSTR_"Payer Name"
"RTN","IBMFNHLI",131,0)
 .S MSG(1)="MAD action received.  "_IBSTR_" unknown."
"RTN","IBMFNHLI",132,0)
 .S MSG(2)="Message control id: "_MSGID
"RTN","IBMFNHLI",133,0)
 .D MSG(SUBJ,"MSG(")
"RTN","IBMFNHLI",134,0)
 .Q
"RTN","IBMFNHLI",135,0)
 I IBCNACT'="MAD" D FND
"RTN","IBMFNHLI",136,0)
 I IEN<1!IBAPP D  G PFILX
"RTN","IBMFNHLI",137,0)
 .S IBCNTYPE=$S(IBCNACT="MAD":"Add",IBCNACT="MUP":"Update",IBCNACT="MDC":"Deactivate",IBCNACT="MAC":"Reactivate",1:"Unknown")
"RTN","IBMFNHLI",138,0)
 .S MSG(1)=IBCNTYPE_" ("_IBCNACT_") action received. Payer and/or Application may be unknown."
"RTN","IBMFNHLI",139,0)
 .S MSG(2)="Message control id: "_MSGID
"RTN","IBMFNHLI",140,0)
 .S MSG(3)="VA National : "_ID
"RTN","IBMFNHLI",141,0)
 .S MSG(4)="Payer Name  : "_DESC
"RTN","IBMFNHLI",142,0)
 .S MSG(5)="Application : "_APP
"RTN","IBMFNHLI",143,0)
 .S MSG(6)=""
"RTN","IBMFNHLI",144,0)
 .S MSG(7)="Log a Remedy Ticket for this issue."
"RTN","IBMFNHLI",145,0)
 .S MSG(8)=""
"RTN","IBMFNHLI",146,0)
 .S MSG(9)="Please include in the Remedy Ticket that VISTA did not receive the required"
"RTN","IBMFNHLI",147,0)
 .S MSG(10)="information or the accurate information to add/update this Payer."
"RTN","IBMFNHLI",148,0)
 .D MSG(SUBJ,"MSG(")
"RTN","IBMFNHLI",149,0)
 .Q
"RTN","IBMFNHLI",150,0)
 ;
"RTN","IBMFNHLI",151,0)
 S DESC=$E(DESC,1,80)    ;restriction of the field in the DD
"RTN","IBMFNHLI",152,0)
 S DIC=$$ROOT^DILFD(FLN)
"RTN","IBMFNHLI",153,0)
 S DR=".01///^S X=DESC;.02////^S X=NEWID;.05////^S X=PEDI;.06////^S X=HEDI"
"RTN","IBMFNHLI",154,0)
 ; If new payer, add the Date/Time created
"RTN","IBMFNHLI",155,0)
 I NPFLG S DR=DR_";.04///^S X=$$NOW^XLFDT()"
"RTN","IBMFNHLI",156,0)
 S DIE=DIC,DA=IEN D ^DIE
"RTN","IBMFNHLI",157,0)
 ; currently there's nothing to file on application level for HCSR, so we can bail if HCSR application
"RTN","IBMFNHLI",158,0)
 I APP="HCSR" G PFILX
"RTN","IBMFNHLI",159,0)
 ;
"RTN","IBMFNHLI",160,0)
 ;  Check for application
"RTN","IBMFNHLI",161,0)
 S DIC="^IBE(365.13,",DIC(0)="X",X=APP D ^DIC
"RTN","IBMFNHLI",162,0)
 S AIEN=+Y I AIEN<1 D
"RTN","IBMFNHLI",163,0)
 .S DLAYGO=365.13,DIC(0)="L",DIC("P")=DLAYGO
"RTN","IBMFNHLI",164,0)
 .S DIE=DIC,X=APP
"RTN","IBMFNHLI",165,0)
 .K DD,DO D FILE^DICN K DO
"RTN","IBMFNHLI",166,0)
 .S AIEN=+Y
"RTN","IBMFNHLI",167,0)
 .Q
"RTN","IBMFNHLI",168,0)
 ;
"RTN","IBMFNHLI",169,0)
 S APIEN=$O(^IBE(365.12,IEN,1,"B",AIEN,""))
"RTN","IBMFNHLI",170,0)
 I APIEN="" D
"RTN","IBMFNHLI",171,0)
 .S DLAYGO=365.121,DIC(0)="L",DIC("P")=DLAYGO,DA(1)=IEN,X=AIEN
"RTN","IBMFNHLI",172,0)
 .S DIC="^IBE(365.12,"_DA(1)_",1,",DIE=DIC
"RTN","IBMFNHLI",173,0)
 .K DD,DO D FILE^DICN K DO
"RTN","IBMFNHLI",174,0)
 .S APIEN=+Y,NAFLG=1
"RTN","IBMFNHLI",175,0)
 ; get current values for Active and Trusted flags
"RTN","IBMFNHLI",176,0)
 S OLDAF=$P(^IBE(365.12,IEN,1,APIEN,0),U,2),OLDTF=$P(^IBE(365.12,IEN,1,APIEN,0),U,7)
"RTN","IBMFNHLI",177,0)
 S DA(1)=IEN,DA=APIEN,DIC="^IBE(365.12,"_DA(1)_",1,",DR=""
"RTN","IBMFNHLI",178,0)
 ;
"RTN","IBMFNHLI",179,0)
 I IBCNACT="MDC" S DR=DR_".11///^S X=1;.12////^S X=IBCNADT;",STAT=0
"RTN","IBMFNHLI",180,0)
 I IBCNACT="MAC" S DR=DR_".11///^S X=0;.12///@;"
"RTN","IBMFNHLI",181,0)
 S DR=DR_".02///^S X=STAT;.06///^S X=$$NOW^XLFDT()"
"RTN","IBMFNHLI",182,0)
 I APP="IIV" D
"RTN","IBMFNHLI",183,0)
 .S DR=DR_";.07///^S X=TRUSTED"
"RTN","IBMFNHLI",184,0)
 .I IBCNACT'="MDC" S DR=DR_";.08///^S X=REQSUB;.1///^S X=TSSN;.14///^S X=FSVDY;.15///^S X=PSVDY"
"RTN","IBMFNHLI",185,0)
 .Q
"RTN","IBMFNHLI",186,0)
 ; if new application, add the Date/Time created
"RTN","IBMFNHLI",187,0)
 I NAFLG S DR=DR_";.13///^S X=$$NOW^XLFDT()"
"RTN","IBMFNHLI",188,0)
 ;
"RTN","IBMFNHLI",189,0)
 S DIE=DIC D ^DIE
"RTN","IBMFNHLI",190,0)
 ; Update flag logs
"RTN","IBMFNHLI",191,0)
 I APP="IIV" D
"RTN","IBMFNHLI",192,0)
 .I STAT'=OLDAF D UPDLOG("A",STAT,IEN,APIEN)
"RTN","IBMFNHLI",193,0)
 .I TRUSTED'=OLDTF D UPDLOG("T",TRUSTED,IEN,APIEN)
"RTN","IBMFNHLI",194,0)
 .Q
"RTN","IBMFNHLI",195,0)
 I IBCNACT="MDC" D MDC Q
"RTN","IBMFNHLI",196,0)
PFILX ;
"RTN","IBMFNHLI",197,0)
 Q
"RTN","IBMFNHLI",198,0)
 ;
"RTN","IBMFNHLI",199,0)
TFIL ;  Non Payer Tables Filer
"RTN","IBMFNHLI",200,0)
 N DA,DIC,DIE,DLAYGO,IEN,MAX,X,Y
"RTN","IBMFNHLI",201,0)
 ;
"RTN","IBMFNHLI",202,0)
 ; store the FILENAME, FIELDNAME and VALUE if the APP is IIV and FLN is 350.9.
"RTN","IBMFNHLI",203,0)
 ; For file #350.9, DESC represents the FIELD NUMBER and ID represents the VALUE.
"RTN","IBMFNHLI",204,0)
 I APP="IIV",FLN=350.9 D  Q
"RTN","IBMFNHLI",205,0)
 .S DIE=FLN,DA=1,DR=DESC_"///"_ID
"RTN","IBMFNHLI",206,0)
 .D ^DIE
"RTN","IBMFNHLI",207,0)
 .Q
"RTN","IBMFNHLI",208,0)
 ;
"RTN","IBMFNHLI",209,0)
 S DIC(0)="X",X=ID,DIC=$$ROOT^DILFD(FLN)
"RTN","IBMFNHLI",210,0)
 D ^DIC S IEN=+Y
"RTN","IBMFNHLI",211,0)
 ; don't update existing entries
"RTN","IBMFNHLI",212,0)
 I IEN>0 Q
"RTN","IBMFNHLI",213,0)
 ;
"RTN","IBMFNHLI",214,0)
 D FIELD^DID(FLN,.02,,"FIELD LENGTH","MAX")
"RTN","IBMFNHLI",215,0)
 I MAX("FIELD LENGTH")>0 S DESC=$E(DESC,1,MAX("FIELD LENGTH")) ; restriction of the field in the DD
"RTN","IBMFNHLI",216,0)
 ; add new entry to the table
"RTN","IBMFNHLI",217,0)
 S DLAYGO=FLN,DIC(0)="L",DIC("DR")=".02///^S X=DESC"
"RTN","IBMFNHLI",218,0)
 K DD,DO D FILE^DICN K DO
"RTN","IBMFNHLI",219,0)
 Q
"RTN","IBMFNHLI",220,0)
 ;
"RTN","IBMFNHLI",221,0)
MAD(X) ;  Add an entry
"RTN","IBMFNHLI",222,0)
 D FND
"RTN","IBMFNHLI",223,0)
 I IEN>0 G MADX
"RTN","IBMFNHLI",224,0)
 N DD,DIC,DIE,DLAYGO,DO,Y
"RTN","IBMFNHLI",225,0)
 S DIC=$$ROOT^DILFD(FLN)
"RTN","IBMFNHLI",226,0)
 S DLAYGO=FLN,DIC(0)="L",DIC("P")=DLAYGO,DIE=DIC
"RTN","IBMFNHLI",227,0)
 K DD,DO D FILE^DICN K DO
"RTN","IBMFNHLI",228,0)
 S IEN=+Y,NPFLG=1
"RTN","IBMFNHLI",229,0)
MADX ;
"RTN","IBMFNHLI",230,0)
 Q
"RTN","IBMFNHLI",231,0)
 ;
"RTN","IBMFNHLI",232,0)
FND ;  Find an existing Payer entry
"RTN","IBMFNHLI",233,0)
 N D,DIC,X,Y
"RTN","IBMFNHLI",234,0)
 S X=ID,DIC(0)="X",D="C",DIC=$$ROOT^DILFD(FLN)
"RTN","IBMFNHLI",235,0)
 ; do a lookup with the "C" cross-reference
"RTN","IBMFNHLI",236,0)
 D IX^DIC S IEN=+Y
"RTN","IBMFNHLI",237,0)
 Q
"RTN","IBMFNHLI",238,0)
 ;
"RTN","IBMFNHLI",239,0)
MDC ;  Check for active transmissions and cancel
"RTN","IBMFNHLI",240,0)
 N BUFF,HIEN,RIEN,STA,TQIEN
"RTN","IBMFNHLI",241,0)
 F STA=1,2,4,6 S TQIEN="" D
"RTN","IBMFNHLI",242,0)
 .F  S TQIEN=$O(^IBCN(365.1,"AC",STA,TQIEN)) Q:TQIEN=""  D
"RTN","IBMFNHLI",243,0)
 ..;  If the record doesn't match the payer, quit
"RTN","IBMFNHLI",244,0)
 ..I $P(^IBCN(365.1,TQIEN,0),U,3)'=IEN Q
"RTN","IBMFNHLI",245,0)
 ..;  Set the status to 'Cancelled'
"RTN","IBMFNHLI",246,0)
 ..D SST^IBCNEUT2(TQIEN,7)
"RTN","IBMFNHLI",247,0)
 ..;  If a buffer entry, set to ! (bang)
"RTN","IBMFNHLI",248,0)
 ..S BUFF=$P(^IBCN(365.1,TQIEN,0),U,5)
"RTN","IBMFNHLI",249,0)
 ..I BUFF'="" D BUFF^IBCNEUT2(BUFF,17)
"RTN","IBMFNHLI",250,0)
 ..;  Change any responses status also
"RTN","IBMFNHLI",251,0)
 ..S HIEN=0 F  S HIEN=$O(^IBCN(365.1,TQIEN,2,HIEN)) Q:'HIEN  D
"RTN","IBMFNHLI",252,0)
 ...S RIEN=$P(^IBCN(365.1,TQIEN,2,HIEN,0),U,3)
"RTN","IBMFNHLI",253,0)
 ...;  If the Response status is 'Response Received', don't change it
"RTN","IBMFNHLI",254,0)
 ...I $P(^IBCN(365,RIEN,0),U,6)=3 Q
"RTN","IBMFNHLI",255,0)
 ...D RSP^IBCNEUT2(RIEN,7)
"RTN","IBMFNHLI",256,0)
 ..Q
"RTN","IBMFNHLI",257,0)
 .Q
"RTN","IBMFNHLI",258,0)
 Q
"RTN","IBMFNHLI",259,0)
 ;
"RTN","IBMFNHLI",260,0)
UPDLOG(FLAG,VALUE,PIEN,APIEN) ; Update active/trusted flag logs
"RTN","IBMFNHLI",261,0)
 ; FLAG - "A" for Active flag, "T" for Trusted flag
"RTN","IBMFNHLI",262,0)
 ; VALUE - new flag value (0 or 1)
"RTN","IBMFNHLI",263,0)
 ; PIEN - ien in PAYER file (365.12)
"RTN","IBMFNHLI",264,0)
 ; APIEN - ien in APPLICATION sub-file (365.121)
"RTN","IBMFNHLI",265,0)
 ;
"RTN","IBMFNHLI",266,0)
 N FILE,IENSTR,UPDT
"RTN","IBMFNHLI",267,0)
 I $G(FLAG)=""!($G(VALUE)="") Q
"RTN","IBMFNHLI",268,0)
 I +$G(PIEN)=0!(+$G(APIEN)=0) Q
"RTN","IBMFNHLI",269,0)
 S FILE=$S(FLAG="A":"365.1212",FLAG="T":"365.1213",1:"") I FILE="" Q
"RTN","IBMFNHLI",270,0)
 S IENSTR="+1,"_APIEN_","_PIEN_","
"RTN","IBMFNHLI",271,0)
 S UPDT(FILE,IENSTR,.01)=$$NOW^XLFDT()
"RTN","IBMFNHLI",272,0)
 S UPDT(FILE,IENSTR,.02)=VALUE
"RTN","IBMFNHLI",273,0)
 D UPDATE^DIE("E","UPDT")
"RTN","IBMFNHLI",274,0)
 Q
"RTN","IBMFNHLI",275,0)
 ;
"RTN","IBMFNHLI",276,0)
MSG(XMSUB,XMTEXT) ;  Send a MailMan Message related to table update HL7 interface
"RTN","IBMFNHLI",277,0)
 ;
"RTN","IBMFNHLI",278,0)
 ;  Input Parameters
"RTN","IBMFNHLI",279,0)
 ;   XMSUB = Subject Line (required)
"RTN","IBMFNHLI",280,0)
 ;   XMTEXT = Message Text Array Name in open format:  "MSG(" (required)
"RTN","IBMFNHLI",281,0)
 ;
"RTN","IBMFNHLI",282,0)
 ; New MailMan variables and also some FileMan variables.  The FileMan
"RTN","IBMFNHLI",283,0)
 ; variables are used and not cleaned up when sending to external
"RTN","IBMFNHLI",284,0)
 ; internet addresses.
"RTN","IBMFNHLI",285,0)
 N DIFROM,XMDUZ,XMDUN,XMZ,XMMG,XMSTRIP,XMROU,XMY,XMYBLOB
"RTN","IBMFNHLI",286,0)
 N D0,D1,D2,DG,DIC,DICR,DISYS,DIW
"RTN","IBMFNHLI",287,0)
 N MGRP,TMPSUB,TMPTEXT,TMPY,XX
"RTN","IBMFNHLI",288,0)
 ;
"RTN","IBMFNHLI",289,0)
 S XMDUZ=.5 ; send from postmaster DUZ
"RTN","IBMFNHLI",290,0)
 ; mail group to send message to
"RTN","IBMFNHLI",291,0)
 S MGRP="IBTUPD MESSAGE" I $G(MGRP)'="" S XMY("G."_MGRP)=""
"RTN","IBMFNHLI",292,0)
 ; Store off subject, array reference and array of recipients
"RTN","IBMFNHLI",293,0)
 S TMPSUB=XMSUB,TMPTEXT=XMTEXT
"RTN","IBMFNHLI",294,0)
 M TMPY=XMY
"RTN","IBMFNHLI",295,0)
 D ^XMD
"RTN","IBMFNHLI",296,0)
 ;
"RTN","IBMFNHLI",297,0)
 ; Error logic
"RTN","IBMFNHLI",298,0)
 ; If there's an error message and the message was not originally sent
"RTN","IBMFNHLI",299,0)
 ; to the postmaster, then send a message to the postmaster with this
"RTN","IBMFNHLI",300,0)
 ; error message.
"RTN","IBMFNHLI",301,0)
 ;
"RTN","IBMFNHLI",302,0)
 I $D(XMMG),'$D(TMPY(.5)) D
"RTN","IBMFNHLI",303,0)
 .S XMY(.5)="",XMTEXT=TMPTEXT,XMSUB="MailMan Error"
"RTN","IBMFNHLI",304,0)
 .; Add XMMG error message as the first line of the message
"RTN","IBMFNHLI",305,0)
 .S XX=999999
"RTN","IBMFNHLI",306,0)
 .F  S XX=$O(@(XMTEXT_"XX)"),-1) Q:'XX  S @(XMTEXT_"XX+3)")=@(XMTEXT_"XX)")
"RTN","IBMFNHLI",307,0)
 .S @(XMTEXT_"1)")="   MailMan Error:  "_XMMG
"RTN","IBMFNHLI",308,0)
 .S @(XMTEXT_"2)")="Original Subject:  "_TMPSUB
"RTN","IBMFNHLI",309,0)
 .S @(XMTEXT_"3)")="------Original Message------"
"RTN","IBMFNHLI",310,0)
 .D ^XMD
"RTN","IBMFNHLI",311,0)
 .Q
"RTN","IBMFNHLI",312,0)
 Q
"RTN","IBMFNHLI",313,0)
 ;
"RTN","IBMFNHLI",314,0)
SPAR ;  Segment Parsing
"RTN","IBMFNHLI",315,0)
 ;
"RTN","IBMFNHLI",316,0)
 ; This tag will parse the current segment referenced by the HCT index
"RTN","IBMFNHLI",317,0)
 ; and place the results in the IBSEG array.
"RTN","IBMFNHLI",318,0)
 ;
"RTN","IBMFNHLI",319,0)
 ; Input Variables
"RTN","IBMFNHLI",320,0)
 ; HCT
"RTN","IBMFNHLI",321,0)
 ;
"RTN","IBMFNHLI",322,0)
 ; Output Variables
"RTN","IBMFNHLI",323,0)
 ; IBSEG (ARRAY of fields in segment)
"RTN","IBMFNHLI",324,0)
 ;
"RTN","IBMFNHLI",325,0)
 N II,IJ,IK,IM,IS,ISBEG,ISCT,ISDATA,ISEND,ISPEC,LSDATA,NPC
"RTN","IBMFNHLI",326,0)
 K IBSEG
"RTN","IBMFNHLI",327,0)
 S ISCT="",II=0,IS=0 F  S ISCT=$O(^TMP("IBMFNHLI",$J,HCT,ISCT)) Q:ISCT=""  D
"RTN","IBMFNHLI",328,0)
 .S IS=IS+1,ISDATA(IS)=$G(^TMP("IBMFNHLI",$J,HCT,ISCT))
"RTN","IBMFNHLI",329,0)
 .I $O(^TMP("IBMFNHLI",$J,HCT,ISCT))="" S ISDATA(IS)=ISDATA(IS)_HLFS
"RTN","IBMFNHLI",330,0)
 .S ISPEC(IS)=$L(ISDATA(IS),HLFS)
"RTN","IBMFNHLI",331,0)
 .Q
"RTN","IBMFNHLI",332,0)
 ;
"RTN","IBMFNHLI",333,0)
 S IM=0,LSDATA=""
"RTN","IBMFNHLI",334,0)
 F  S IM=IM+1 Q:IM>IS  D
"RTN","IBMFNHLI",335,0)
 .S LSDATA=LSDATA_ISDATA(IM),NPC=ISPEC(IM)
"RTN","IBMFNHLI",336,0)
 .F IJ=1:1:NPC-1 D
"RTN","IBMFNHLI",337,0)
 ..S II=II+1,IBSEG(II)=$$CLNSTR^IBCNEHLU($P(LSDATA,HLFS,IJ),$E(HL("ECH"),1,2)_$E(HL("ECH"),4),$E(HL("ECH")))
"RTN","IBMFNHLI",338,0)
 ..Q
"RTN","IBMFNHLI",339,0)
 .S LSDATA=$P(LSDATA,HLFS,NPC)
"RTN","IBMFNHLI",340,0)
 .Q
"RTN","IBMFNHLI",341,0)
 Q
"RTN","IBTRH1")
0^7^B195054371^n/a
"RTN","IBTRH1",1,0)
IBTRH1 ;ALB/FA - HCSR Worklist ;01-JUL-2014
"RTN","IBTRH1",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH1",4,0)
 ;;
"RTN","IBTRH1",5,0)
 ;
"RTN","IBTRH1",6,0)
EN ;EP
"RTN","IBTRH1",7,0)
 ; Main entry point for HCSR Worklist
"RTN","IBTRH1",8,0)
 ; Input: None
"RTN","IBTRH1",9,0)
 N HCSRSORT,IBFILTS
"RTN","IBTRH1",10,0)
 Q:'$$FILTERS^IBTRH1A(.IBFILTS)  ; Returns an array of filter settings
"RTN","IBTRH1",11,0)
 D SORT(1) ; Sort the entries
"RTN","IBTRH1",12,0)
 D EN^VALM("IBT HCSR WORKLIST")
"RTN","IBTRH1",13,0)
 Q
"RTN","IBTRH1",14,0)
 ;
"RTN","IBTRH1",15,0)
HDR ;EP
"RTN","IBTRH1",16,0)
 ; Header code for HCSR Worklist
"RTN","IBTRH1",17,0)
 ; Input:   HCSRSORT        - Current sort selection
"RTN","IBTRH1",18,0)
 ;          IBFILTS()       - Array of filter criteria
"RTN","IBTRH1",19,0)
 ; Output:  VALMHDR         - Header information to display
"RTN","IBTRH1",20,0)
 ;          VALM("TITLE")   - HCSR Worklist Title
"RTN","IBTRH1",21,0)
 ;          VALMSG          - Initial Error line display
"RTN","IBTRH1",22,0)
 N XX
"RTN","IBTRH1",23,0)
 S:$G(HCSRSORT)="" HCSRSORT="1^Oldest Entries First"
"RTN","IBTRH1",24,0)
 S VALMHDR(1)=$$FILTBY(.IBFILTS)
"RTN","IBTRH1",25,0)
 S VALMHDR(2)="Sorted By:   "_$P(HCSRSORT,"^",2)
"RTN","IBTRH1",26,0)
 S VALM("TITLE")="HCSR Worklist"
"RTN","IBTRH1",27,0)
 D VALMSGH    ; Set flag legend
"RTN","IBTRH1",28,0)
 Q
"RTN","IBTRH1",29,0)
 ;
"RTN","IBTRH1",30,0)
VALMSGH(INP) ;EP
"RTN","IBTRH1",31,0)
 ; Sets the legend into variable VALMSG
"RTN","IBTRH1",32,0)
 ; Input:   INP     - 1 - Only display #In-Prog, 0 - Display all
"RTN","IBTRH1",33,0)
 ;                    Optional, defaults to 0
"RTN","IBTRH1",34,0)
 ; Output:  VALMSG is set
"RTN","IBTRH1",35,0)
 S:'$D(INP) INP=0
"RTN","IBTRH1",36,0)
 I INP  S VALMSG="#In-Prog" Q
"RTN","IBTRH1",37,0)
 S VALMSG="?Await #In-Prog -RespErr !Unable +Pend *NextRev"
"RTN","IBTRH1",38,0)
 Q
"RTN","IBTRH1",39,0)
 ;
"RTN","IBTRH1",40,0)
FILTBY(IBFILTS) ;EP
"RTN","IBTRH1",41,0)
 ; Creates the 'Filtered By' line of the worklist header
"RTN","IBTRH1",42,0)
 ; Input:   IBFILT  - Array of current filter settings
"RTN","IBTRH1",43,0)
 ; Returns: Filtered By line
"RTN","IBTRH1",44,0)
 N XX
"RTN","IBTRH1",45,0)
 I $P(IBFILTS(0),"^",2)=0 S XX="CPAC, "
"RTN","IBTRH1",46,0)
 I $P(IBFILTS(0),"^",2)=1 S XX="CHAMPVA/TRICARE, "
"RTN","IBTRH1",47,0)
 I $P(IBFILTS(0),"^",2)=2 S XX="Both CPAC and CHAMPVA/TRICARE, "
"RTN","IBTRH1",48,0)
 S XX=XX_$S($G(IBFILTS(3))'="":"Sel Div, ",1:"All Div, ")
"RTN","IBTRH1",49,0)
 I $P(IBFILTS(0),"^",1)=0 D
"RTN","IBTRH1",50,0)
 . S XX=XX_$S($G(IBFILTS(1))'="":"Sel Outpt",1:"All Outpt")
"RTN","IBTRH1",51,0)
 I $P(IBFILTS(0),"^",1)=1 D
"RTN","IBTRH1",52,0)
 . S XX=XX_$S($G(IBFILTS(2))'="":"Sel Inpt",1:"All Inpt")
"RTN","IBTRH1",53,0)
 I $P(IBFILTS(0),"^",1)=2 D
"RTN","IBTRH1",54,0)
 . S XX=XX_$S($G(IBFILTS(1))'="":"Sel Outpt, ",1:"All Outpt, ")
"RTN","IBTRH1",55,0)
 . S XX=XX_$S($G(IBFILTS(2))'="":"Sel Inpt",1:"All Inpt")
"RTN","IBTRH1",56,0)
 Q "Filtered By: "_XX
"RTN","IBTRH1",57,0)
 ;
"RTN","IBTRH1",58,0)
INIT ;EP
"RTN","IBTRH1",59,0)
 ; Initialize variables and list array
"RTN","IBTRH1",60,0)
 ; Input: None
"RTN","IBTRH1",61,0)
 ; Output:  HCSRSORT            - Initial worklist sort if not yet defined
"RTN","IBTRH1",62,0)
 ;          IBFILTS()           - Array of filter criteria
"RTN","IBTRH1",63,0)
 ;          ^TMP("IBTRH1",$J)   - Body lines to display
"RTN","IBTRH1",64,0)
 K ^TMP("IBTRH1",$J),^TMP($J,"IBTRH1IX")
"RTN","IBTRH1",65,0)
 S:$G(HCSRSORT)="" HCSRSORT="1^Oldest Entries First"
"RTN","IBTRH1",66,0)
 D BLD
"RTN","IBTRH1",67,0)
 Q
"RTN","IBTRH1",68,0)
 ;
"RTN","IBTRH1",69,0)
BLD ; Build screen array, no variables required for input
"RTN","IBTRH1",70,0)
 ; Input:   HCSRSORT            - Current select sort type
"RTN","IBTRH1",71,0)
 ;          IBFILTS()           - Array of filter criteria
"RTN","IBTRH1",72,0)
 ; Output:  ^TMP("IBTRH1",$J)   - Body lines to display
"RTN","IBTRH1",73,0)
 ;          ^TMP($J,"IBTRH1S")  - Sorted Body lines to display
"RTN","IBTRH1",74,0)
 ;          ^TMP($J,"IBTRH1IX") - Index of Entry IENs by display line
"RTN","IBTRH1",75,0)
 N DA,ECTR,LINE,S1,S2,S3,XSELCNT,XDA1,XRESP,XREJDA,XREJDA1
"RTN","IBTRH1",76,0)
 ; Build the sorted list of lines to display
"RTN","IBTRH1",77,0)
 D SORT1^IBTRH1A
"RTN","IBTRH1",78,0)
 S (ECTR,VALMCNT)=0,S1=""
"RTN","IBTRH1",79,0)
 F  S S1=$O(^TMP($J,"IBTRH1S",S1)) Q:S1=""  D
"RTN","IBTRH1",80,0)
 .S S2="" F  S S2=$O(^TMP($J,"IBTRH1S",S1,S2)) Q:S2=""  D
"RTN","IBTRH1",81,0)
 ..S S3="" F  S S3=$O(^TMP($J,"IBTRH1S",S1,S2,S3)) Q:S3=""  D
"RTN","IBTRH1",82,0)
 ...S DA="" F  S DA=$O(^TMP($J,"IBTRH1S",S1,S2,S3,DA)) Q:DA=""  D
"RTN","IBTRH1",83,0)
 ....S ECTR=ECTR+1
"RTN","IBTRH1",84,0)
 ....S LINE=^TMP($J,"IBTRH1S",S1,S2,S3,DA)
"RTN","IBTRH1",85,0)
 ....S LINE=$$BLDLN(ECTR,LINE)
"RTN","IBTRH1",86,0)
 ....S VALMCNT=VALMCNT+1,XSELCNT=$G(XSELCNT)+1
"RTN","IBTRH1",87,0)
 ....D SET^VALM10(VALMCNT,LINE,XSELCNT),BLD1
"RTN","IBTRH1",88,0)
 ....S ^TMP($J,"IBTRH1IX",XSELCNT)=DA
"RTN","IBTRH1",89,0)
 ....S XRESP=$P(^IBT(356.22,DA,0),U,14)
"RTN","IBTRH1",90,0)
 ....I XRESP'="" S XDA1=$G(^IBT(356.22,XRESP,103))
"RTN","IBTRH1",91,0)
 ....I $P($G(XDA1),U,3)'="" D
"RTN","IBTRH1",92,0)
 .....N XREVDA1
"RTN","IBTRH1",93,0)
 .....D GETS^DIQ(356.021,$P(XDA1,U,3),".01:.02",,"XREVDA1")
"RTN","IBTRH1",94,0)
 .....S VALMCNT=VALMCNT+1
"RTN","IBTRH1",95,0)
 .....D SET^VALM10(VALMCNT,"       Review Decision: "_XREVDA1(356.021,$P(XDA1,U,3)_",",".01")_" - "_XREVDA1(356.021,$P(XDA1,U,3)_",",".02"),XSELCNT)
"RTN","IBTRH1",96,0)
 .....D BLD1
"RTN","IBTRH1",97,0)
 ....I XRESP'="" S XDA1=0 F  S XDA1=$O(^IBT(356.22,XRESP,101,XDA1)) Q:'XDA1  D
"RTN","IBTRH1",98,0)
 .....S XREJDA=+$P($G(^IBT(356.22,XRESP,101,XDA1,0)),U,4) I 'XREJDA Q
"RTN","IBTRH1",99,0)
 .....D GETS^DIQ(365.017,XREJDA,".01:.02",,"XREJDA1")
"RTN","IBTRH1",100,0)
 .....S VALMCNT=VALMCNT+1
"RTN","IBTRH1",101,0)
 .....D SET^VALM10(VALMCNT,"       Rejection: "_XREJDA1(365.017,XREJDA_",",".01")_" - "_XREJDA1(365.017,XREJDA_",",".02"),XSELCNT)
"RTN","IBTRH1",102,0)
 .....D BLD1
"RTN","IBTRH1",103,0)
 .....S XDA1=""
"RTN","IBTRH1",104,0)
 .....Q
"RTN","IBTRH1",105,0)
 ....Q
"RTN","IBTRH1",106,0)
 ...Q
"RTN","IBTRH1",107,0)
 ..Q
"RTN","IBTRH1",108,0)
 .Q
"RTN","IBTRH1",109,0)
 I VALMCNT=0 D
"RTN","IBTRH1",110,0)
 .S ^TMP("IBTRH1",$J,1,0)="There are no entries to display."
"RTN","IBTRH1",111,0)
 Q
"RTN","IBTRH1",112,0)
 ;
"RTN","IBTRH1",113,0)
BLD1 ;
"RTN","IBTRH1",114,0)
 S ^TMP("IBTRH1",$J,"IDXX",XSELCNT,VALMCNT)=""
"RTN","IBTRH1",115,0)
 Q
"RTN","IBTRH1",116,0)
 ;
"RTN","IBTRH1",117,0)
BLDLN(ECTR,LINED) ; Builds a line to display on List screen for one entry
"RTN","IBTRH1",118,0)
 ; Input:   ECTR    - Entry counter
"RTN","IBTRH1",119,0)
 ;          LINED   - A1^A2^...A9 Where:
"RTN","IBTRH1",120,0)
 ;                      A1  - Patient Name
"RTN","IBTRH1",121,0)
 ;                      A2  - Patient Status ('I' or 'O')
"RTN","IBTRH1",122,0)
 ;                      A3  - External Appt or Admission date
"RTN","IBTRH1",123,0)
 ;                      A4  - Clinic or Ward name
"RTN","IBTRH1",124,0)
 ;                      A5  - COB ('P' or 'S')
"RTN","IBTRH1",125,0)
 ;                      A6  - Insurance Company Name
"RTN","IBTRH1",126,0)
 ;                      A7  - Utilization Review required
"RTN","IBTRH1",127,0)
 ;                      A8  - Pre-Certification required
"RTN","IBTRH1",128,0)
 ;                      A9  - Service Connection flags
"RTN","IBTRH1",129,0)
 ; Output:  LINE    - Formatted for setting into the list display
"RTN","IBTRH1",130,0)
 N LINE,LINEI
"RTN","IBTRH1",131,0)
 S LINE=$$SETSTR^VALM1(ECTR,"",1,4)               ; Entry #
"RTN","IBTRH1",132,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",1),LINE,6,23) ; Patient Name
"RTN","IBTRH1",133,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",2),LINE,30,1) ; Patient Status
"RTN","IBTRH1",134,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",3),LINE,32,8) ; Appt/Adm Date
"RTN","IBTRH1",135,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",4),LINE,41,10)  ; Clinic or Ward
"RTN","IBTRH1",136,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",5),LINE,52,1) ; COB
"RTN","IBTRH1",137,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",6),LINE,55,14)  ; Insurance Name
"RTN","IBTRH1",138,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",7),LINE,70,1) ; UR required
"RTN","IBTRH1",139,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",8),LINE,72,1) ; Pre-Cert Required
"RTN","IBTRH1",140,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",9),LINE,74,5) ; Service Connections
"RTN","IBTRH1",141,0)
 Q LINE
"RTN","IBTRH1",142,0)
 ;
"RTN","IBTRH1",143,0)
HELP ;EP
"RTN","IBTRH1",144,0)
 ; Help code
"RTN","IBTRH1",145,0)
 ; Input: None
"RTN","IBTRH1",146,0)
 D FULL^VALM1
"RTN","IBTRH1",147,0)
 S VALMBCK="R"
"RTN","IBTRH1",148,0)
 W @IOF,"Flags displayed on screen for SC Reas (Service Connected Reason):"
"RTN","IBTRH1",149,0)
 W !,"  A - Agent Orange"
"RTN","IBTRH1",150,0)
 W !,"  I - Ionizing Radiation"
"RTN","IBTRH1",151,0)
 W !,"  S - Southwest Asia"
"RTN","IBTRH1",152,0)
 W !,"  N - Nose/Throat Radium"
"RTN","IBTRH1",153,0)
 W !,"  C - Combat Veteran"
"RTN","IBTRH1",154,0)
 W !,"  M - Military Sexual Trauma (MST)"
"RTN","IBTRH1",155,0)
 W !,"  L - Camp Lejeune"
"RTN","IBTRH1",156,0)
 W !,"Flags displayed on screen for U (UR Required) or P (Pre-certification Required):"
"RTN","IBTRH1",157,0)
 W !,"  Y - Yes,  N - No"
"RTN","IBTRH1",158,0)
 W !,"Flags displayed on screen for S (Patient Status):"
"RTN","IBTRH1",159,0)
 W !,"  O - Outpatient, I - Inpatient"
"RTN","IBTRH1",160,0)
 W !,"The following Status indicators may appear to the left of the patient name:"
"RTN","IBTRH1",161,0)
 W !,"  #       - 278 has been not been initiated, entry is in-progress"
"RTN","IBTRH1",162,0)
 W !,"  ?       - 278 has been sent and waiting for response"
"RTN","IBTRH1",163,0)
 W !,"  +       - 278 is pending"
"RTN","IBTRH1",164,0)
 W !,"  *       - Flagged for Next Review"
"RTN","IBTRH1",165,0)
 W !,"  !       - Unable to send 278"
"RTN","IBTRH1",166,0)
 W !,"  <Blank> - Entry added through scheduled task"
"RTN","IBTRH1",167,0)
 W !,"  -       - 278 has been sent and negative response received "
"RTN","IBTRH1",168,0)
 W !,"            (error AAA condition  in AAA segment(s))"
"RTN","IBTRH1",169,0)
 S VALMSG="?Await #In-Prog -RespErr !Unable +Pend *NextRev"
"RTN","IBTRH1",170,0)
 Q
"RTN","IBTRH1",171,0)
 ;
"RTN","IBTRH1",172,0)
EXIT ;EP
"RTN","IBTRH1",173,0)
 ; Exit code
"RTN","IBTRH1",174,0)
 ; Input: None
"RTN","IBTRH1",175,0)
 K ^TMP("IBTRH1",$J),^TMP($J,"IBTRH1IX"),^TMP($J,"IBTRH1S")
"RTN","IBTRH1",176,0)
 K HCSRSORT
"RTN","IBTRH1",177,0)
 D CLEAR^VALM1
"RTN","IBTRH1",178,0)
 Q
"RTN","IBTRH1",179,0)
 ;
"RTN","IBTRH1",180,0)
SORT(FIRST) ;EP
"RTN","IBTRH1",181,0)
 ; Listman Protocol Action to sort the worklist
"RTN","IBTRH1",182,0)
 ; Input:   FIRST    - 1 - Called for the first time before the Worklist is displayed
"RTN","IBTRH1",183,0)
 ;                     2 - Called from Refresh action (REFRESH^IBTRH1A)
"RTN","IBTRH1",184,0)
 ;                     0 - Called as an action from within the Worklist, Optional, defaults to 0
"RTN","IBTRH1",185,0)
 ;          HCSRSORT - Current sort selection (null if FIRST=1)
"RTN","IBTRH1",186,0)
 ;          IBFILTS()- Array of filter criteria
"RTN","IBTRH1",187,0)
 ; Output:  HCSRSORT - New sort selection and list is sorted
"RTN","IBTRH1",188,0)
 N CTR,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ST,STDES,X,XX,Y
"RTN","IBTRH1",189,0)
 D VALMSGH  ; Set flag legend
"RTN","IBTRH1",190,0)
 S CTR=1
"RTN","IBTRH1",191,0)
 S:'$D(FIRST) FIRST=0
"RTN","IBTRH1",192,0)
 S:FIRST=1 HCSRSORT="1^Oldest Entries First"
"RTN","IBTRH1",193,0)
 I 'FIRST!(FIRST=2) D
"RTN","IBTRH1",194,0)
 . D:'FIRST FULL^VALM1
"RTN","IBTRH1",195,0)
 . W:'FIRST @IOF
"RTN","IBTRH1",196,0)
 . W !,"Select the item to sort the records on the HCSR Worklist screen."
"RTN","IBTRH1",197,0)
 S XX="SO^"_CTR_":Oldest Entries First",CTR=CTR+1
"RTN","IBTRH1",198,0)
 S XX=XX_";"_CTR_":Newest Entries First",CTR=CTR+1
"RTN","IBTRH1",199,0)
 S:+IBFILTS(0)=2 XX=XX_";"_CTR_":Outpatient Appointments First",CTR=CTR+1
"RTN","IBTRH1",200,0)
 S:+IBFILTS(0)=2 XX=XX_";"_CTR_":Inpatient Admissions First",CTR=CTR+1
"RTN","IBTRH1",201,0)
 S XX=XX_";"_CTR_":Insurance Company Name"
"RTN","IBTRH1",202,0)
 S DIR(0)=XX
"RTN","IBTRH1",203,0)
 S DIR("A")="Sort the list by",DIR("B")=$P($G(HCSRSORT),"^",2)
"RTN","IBTRH1",204,0)
 D ^DIR K DIR
"RTN","IBTRH1",205,0)
 I 'Y S VALMBCK="R" Q  ; User quit or timed out
"RTN","IBTRH1",206,0)
 S XX=$S(+IBFILTS(0)=2:Y,Y<3:Y,1:5)
"RTN","IBTRH1",207,0)
 S HCSRSORT=XX_"^"_Y(0) ; Sort selection
"RTN","IBTRH1",208,0)
 Q:FIRST
"RTN","IBTRH1",209,0)
 ; Rebuild and resort the list and update the list header
"RTN","IBTRH1",210,0)
 D INIT,HDR
"RTN","IBTRH1",211,0)
 S VALMBCK="R",VALMBG=1
"RTN","IBTRH1",212,0)
 Q
"RTN","IBTRH1",213,0)
 ;
"RTN","IBTRH1",214,0)
DEL ;EP
"RTN","IBTRH1",215,0)
 ; Protocol Action to select an entry to be manually removed from the worklist
"RTN","IBTRH1",216,0)
 ; Input:   ^TMP("IBTRH1",$J)   - Current Array of displayed entries
"RTN","IBTRH1",217,0)
 ;          ^TMP($J,"IBTRHIX")  - Current Index of displayed entries
"RTN","IBTRH1",218,0)
 ; Output:  Selected Entry is removed from the worklist 
"RTN","IBTRH1",219,0)
 ;          Error messages display (potentially)
"RTN","IBTRH1",220,0)
 ;          ^TMP("IBTRH1",$J)   - Updated Array of displayed entries
"RTN","IBTRH1",221,0)
 ;          ^TMP($J,"IBTRHIX")  - Updated Index of displayed entries
"RTN","IBTRH1",222,0)
 N DIR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,EIEN,EIENS,ERROR,IEN,IX,LINE,MSG
"RTN","IBTRH1",223,0)
 N PROMPT,SDATA,DELRCODE,XCOM,COM,DIWETXT
"RTN","IBTRH1",224,0)
 D VALMSGH  ; Set flag legend
"RTN","IBTRH1",225,0)
 S VALMBCK="R",ERROR=0
"RTN","IBTRH1",226,0)
 ; First select the entry(s) to be removed from the worklist
"RTN","IBTRH1",227,0)
 S PROMPT="Select the worklist entry(s) to be deleted"
"RTN","IBTRH1",228,0)
 S MSG="Are you sure you want to delete "
"RTN","IBTRH1",229,0)
 S EIENS=$$SELEVENT(1,PROMPT,.DLINE,1)   ; Select the entry to be deleted
"RTN","IBTRH1",230,0)
 I EIENS="" S VALMBCK="R" Q
"RTN","IBTRH1",231,0)
D1 ;
"RTN","IBTRH1",232,0)
 S DIC(0)="AEQM",DIC="^IBT(356.023,"
"RTN","IBTRH1",233,0)
 S DIC("A")="Select a Delete Reason Code: "
"RTN","IBTRH1",234,0)
 D ^DIC
"RTN","IBTRH1",235,0)
 I Y<0 Q:X="^"  W !,*7,">>>> A Delete Reason Code must be selected, or '^' to exit." G D1
"RTN","IBTRH1",236,0)
 S DELRCODE=$P(Y,"^")
"RTN","IBTRH1",237,0)
 Q:'$$ASKSURE(DLINE,MSG)    ; Final warning
"RTN","IBTRH1",238,0)
 F IX=1:1:$L(EIENS,",") D  Q:$G(ERROR)
"RTN","IBTRH1",239,0)
 . S EIEN=$P(EIENS,",",IX)
"RTN","IBTRH1",240,0)
 . S LINE=$P(DLINE,",",IX)
"RTN","IBTRH1",241,0)
 . ; Don't allow deletion of entries with a pending response (status '02')
"RTN","IBTRH1",242,0)
 . I +$P(^IBT(356.22,EIEN,0),"^",8)=2 D  Q
"RTN","IBTRH1",243,0)
 .. W !,*7,">>>> Entry ",LINE," has been sent and is awaiting a response. It cannot be deleted."
"RTN","IBTRH1",244,0)
 .. N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH1",245,0)
 .. S DIR(0)="EA"
"RTN","IBTRH1",246,0)
 .. S DIR("A",1)=" "
"RTN","IBTRH1",247,0)
 .. S DIR("A")="Press RETURN to continue " D ^DIR
"RTN","IBTRH1",248,0)
 .. S ERROR=1
"RTN","IBTRH1",249,0)
 .. Q
"RTN","IBTRH1",250,0)
 . ; Next update the status to be manually removed
"RTN","IBTRH1",251,0)
 . I '$$LOCKEV(EIEN) D  Q
"RTN","IBTRH1",252,0)
 .. W !,*7,">>>> Someone else is editing entry ",LINE,". Try again later."
"RTN","IBTRH1",253,0)
 .. S ERROR=1
"RTN","IBTRH1",254,0)
 . K SDATA
"RTN","IBTRH1",255,0)
 . S IEN=EIEN_","
"RTN","IBTRH1",256,0)
 . S SDATA(356.22,IEN,.08)="06"  ; Set Status manual remove flag
"RTN","IBTRH1",257,0)
 . S SDATA(356.22,IEN,.23)=$$NOW^XLFDT() ; Set Manually Removed Date/Time
"RTN","IBTRH1",258,0)
 . S SDATA(356.22,IEN,.24)=DUZ   ; Set Manually Removed By User
"RTN","IBTRH1",259,0)
 . S SDATA(356.22,IEN,.25)=DELRCODE  ; Set Delete Reason code pointer
"RTN","IBTRH1",260,0)
 . I $P(^IBT(356.22,EIEN,0),"^",11)="" S SDATA(356.22,IEN,.11)=DUZ  ; 517-T14: if REQUESTED BY is blank, set it to user deleting
"RTN","IBTRH1",261,0)
 . D FILE^DIE("","SDATA")
"RTN","IBTRH1",262,0)
 . D UNLOCKEV(EIEN)
"RTN","IBTRH1",263,0)
 I $G(ERROR) Q
"RTN","IBTRH1",264,0)
 K DIR
"RTN","IBTRH1",265,0)
 Q
"RTN","IBTRH1",266,0)
 ;
"RTN","IBTRH1",267,0)
ASKSURE(DLINE,MSG,ENTIRE)   ;EP
"RTN","IBTRH1",268,0)
 ; Make sure the user wants to proceed with the selected action
"RTN","IBTRH1",269,0)
 ; Input:   DLINE   - Comma delimited list of valid selected lines
"RTN","IBTRH1",270,0)
 ;          MSG     - Message to be displayed to the user
"RTN","IBTRH1",271,0)
 ;          ENTIRE  - 1 - MSG is the entire prompt do not append
"RTN","IBTRH1",272,0)
 ;                    0 - MSG is not the entire prompt append
"RTN","IBTRH1",273,0)
 ;                    Optional, defaults to 0
"RTN","IBTRH1",274,0)
 ; Returns: 1 - Proceed with action, 0 otherwise
"RTN","IBTRH1",275,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","IBTRH1",276,0)
 S:'$D(ENTIRE) ENTIRE=0
"RTN","IBTRH1",277,0)
 S XX=$S(DLINE[",":"entries ",1:"entry ")
"RTN","IBTRH1",278,0)
 S DIR(0)="YO",DIR("B")="N"
"RTN","IBTRH1",279,0)
 S:'ENTIRE MSG=MSG_XX_DLINE
"RTN","IBTRH1",280,0)
 S DIR("A")=MSG
"RTN","IBTRH1",281,0)
 D ^DIR K DIR
"RTN","IBTRH1",282,0)
 Q:'Y 0
"RTN","IBTRH1",283,0)
 Q 1
"RTN","IBTRH1",284,0)
 ;
"RTN","IBTRH1",285,0)
PRMARK(WHICH,EIENIN,WLIST)   ;EP
"RTN","IBTRH1",286,0)
 ; Listman Protocol Action to Mark/Remove 'In-Progress' from a selected entry
"RTN","IBTRH1",287,0)
 ; Called from HSCR Worklist and HSCR Response Worklist
"RTN","IBTRH1",288,0)
 ; Input:   WHICH   - 0 - Remove 'In-Progress' mark
"RTN","IBTRH1",289,0)
 ;                    1 - Set 'In-Progress' mark
"RTN","IBTRH1",290,0)
 ;          EIENIN  - IEN of the entry to Mark/Remove 'In-Progress'
"RTN","IBTRH1",291,0)
 ;                    Only passed when called from Mark/Remove protocol actions
"RTN","IBTRH1",292,0)
 ;                    from the Expand Entry Worklist.
"RTN","IBTRH1",293,0)
 ;                    Optional, defaults to "-1"
"RTN","IBTRH1",294,0)
 ;          WLIST   - Worklist, the user is selecting from. Set to 'IBTRH5IX'
"RTN","IBTRH1",295,0)
 ;                    when called from the response worklist.
"RTN","IBTRH1",296,0)
 ;                    Optional, defaults to 'IBTRH1IX' 
"RTN","IBTRH1",297,0)
 ;          ^TMP($J,"IBTRH1IX") - Index of displayed lines of the HCSR Worklist
"RTN","IBTRH1",298,0)
 ;                                Only used if WLIST is not 'IBTRH5IX"
"RTN","IBTRH1",299,0)
 ;          ^TMP($J,"IBTRH5IX") - Index of displayed lines of the HCSR Response
"RTN","IBTRH1",300,0)
 ;                                Worklist. Only used if WLIST is 'IBTRH5IX"
"RTN","IBTRH1",301,0)
 ;          ^TMP("IBTRH1",$J)   - Current Array of displayed entries
"RTN","IBTRH1",302,0)
 ;          ^TMP($J,"IBTRHIX")  - Current Index of displayed lines
"RTN","IBTRH1",303,0)
 ; Output:  Selected Entry is marked in progress or remove marked in progress 
"RTN","IBTRH1",304,0)
 ;          or VALMSG is displayed with an error message
"RTN","IBTRH1",305,0)
 ;          ^TMP("IBTRH1",$J)   - Updated Array of displayed entries
"RTN","IBTRH1",306,0)
 ;          ^TMP($J,"IBTRHIX")  - Updated Index of displayed lines
"RTN","IBTRH1",307,0)
 ;      
"RTN","IBTRH1",308,0)
 N CSTAT,DIR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,EIEN,EIENS,ERROR,EVENT,FIELD,FLG
"RTN","IBTRH1",309,0)
 N IX,LINE,PROMPT,REST,STATUS,STATUSDT,STATUSU,XX
"RTN","IBTRH1",310,0)
 S:$G(EIENIN)="" EIENIN=-1
"RTN","IBTRH1",311,0)
 S:'$D(WLIST) WLIST="IBTRH1IX"
"RTN","IBTRH1",312,0)
 S XX=$S(WLIST="IBTRH5IX":1,1:0)
"RTN","IBTRH1",313,0)
 D VALMSGH(XX) ; Set flag legend
"RTN","IBTRH1",314,0)
 S EIENS=$S(EIENIN'=-1:EIENIN,1:"")
"RTN","IBTRH1",315,0)
 S VALMBCK="R"
"RTN","IBTRH1",316,0)
 S ERROR=0
"RTN","IBTRH1",317,0)
 I WHICH=0 S REST=" remove 'In-Progress' mark",STATUS="0",STATUSDT="@",STATUSU="@"
"RTN","IBTRH1",318,0)
 E  S REST="Set 'In-Progress' mark",STATUS="01",STATUSDT=DT,STATUSU=DUZ
"RTN","IBTRH1",319,0)
 I WLIST="IBTRH5IX",STATUS="01" S STATUS=1
"RTN","IBTRH1",320,0)
 ; First select the entry to be removed from the worklist
"RTN","IBTRH1",321,0)
 S PROMPT="Select the entry(s) to "_REST
"RTN","IBTRH1",322,0)
 S:EIENS="" EIENS=$$SELEVENT(1,PROMPT,.DLINE,1,WLIST)  ; Select the entry(s) to update
"RTN","IBTRH1",323,0)
 I EIENS="" S VALMBCK="R" Q
"RTN","IBTRH1",324,0)
 F IX=1:1:$L(EIENS,",") D
"RTN","IBTRH1",325,0)
 . S EIEN=$P(EIENS,",",IX)
"RTN","IBTRH1",326,0)
 . S LINE=$S(EIENIN'=-1:"",1:$P(DLINE,",",IX))
"RTN","IBTRH1",327,0)
 . ; Get the current status of the entry
"RTN","IBTRH1",328,0)
 . S:WLIST="IBTRH5IX" CSTAT=+$$GET1^DIQ(356.22,EIEN_",",.21,"I")
"RTN","IBTRH1",329,0)
 . S:WLIST'="IBTRH5IX" CSTAT=+$$GET1^DIQ(356.22,EIEN_",",.08,"I")
"RTN","IBTRH1",330,0)
 . ; Make sure the entry can be changed to in-progress, quit otherwise
"RTN","IBTRH1",331,0)
 . I (CSTAT'=0),(CSTAT'=1) D  Q                 ; Invalid to be changed
"RTN","IBTRH1",332,0)
 .. W !,*7,">>>> Entry ",LINE," - Invalid Status, action not performed"
"RTN","IBTRH1",333,0)
 .. S ERROR=1
"RTN","IBTRH1",334,0)
 . ; Next update the status to be manually updated
"RTN","IBTRH1",335,0)
 . I '$$LOCKEV(EIEN) D  Q
"RTN","IBTRH1",336,0)
 .. W !,*7,">>>> Some else is editing the entry ",LINE,". Try again later."
"RTN","IBTRH1",337,0)
 .. S ERROR=1
"RTN","IBTRH1",338,0)
 . S XX=$S(WLIST="IBTRH5IX":1,1:0)
"RTN","IBTRH1",339,0)
 . D PRMARK1(EIEN,STATUS,STATUSU,STATUSDT,XX)
"RTN","IBTRH1",340,0)
 . D UNLOCKEV(EIEN)
"RTN","IBTRH1",341,0)
 . Q:EIENIN'=-1
"RTN","IBTRH1",342,0)
 . ; Finally, update the line and redisplay it
"RTN","IBTRH1",343,0)
 . S EVENT=^IBT(356.22,EIEN,0)
"RTN","IBTRH1",344,0)
 . I WLIST="IBTRH1IX" D
"RTN","IBTRH1",345,0)
 .. S FLG=$S($P(EVENT,"^",8)="01":"#",1:" ")
"RTN","IBTRH1",346,0)
 .. S LINE=$O(^TMP("IBTRH1",$J,"IDXX",LINE,0))
"RTN","IBTRH1",347,0)
 .. S FIELD=FLG_$E($G(^TMP("IBTRH1",$J,LINE,0)),7,23)
"RTN","IBTRH1",348,0)
 . I WLIST="IBTRH5IX" D
"RTN","IBTRH1",349,0)
 .. S FLG=$S($P(EVENT,"^",21)=1:"#",1:" ")
"RTN","IBTRH1",350,0)
 .. S FIELD=FLG_$E($G(^TMP("IBTRH5",$J,LINE,0)),7,23)
"RTN","IBTRH1",351,0)
 . D FLDTEXT^VALM10(LINE,"PAT NAME",FIELD)      ; Update flag display
"RTN","IBTRH1",352,0)
 . D WRITE^VALM10(LINE)                         ; Redisplay line
"RTN","IBTRH1",353,0)
 K DIR
"RTN","IBTRH1",354,0)
 Q:EIENIN'=-1
"RTN","IBTRH1",355,0)
 D:ERROR PAUSE^VALM1
"RTN","IBTRH1",356,0)
 Q
"RTN","IBTRH1",357,0)
 ;
"RTN","IBTRH1",358,0)
PRMARK1(IEN,STATUS,USER,TSTAMP,RESP) ; Change 'In-Progress' status of a given entry
"RTN","IBTRH1",359,0)
 ; Input:   IEN     - IEN of file 356.22 entry to use
"RTN","IBTRH1",360,0)
 ;          STATUS  - New status to set: '01' - Set 'In-Progress', 
"RTN","IBTRH1",361,0)
 ;                                       '0'  - Remove 'In-Progress'
"RTN","IBTRH1",362,0)
 ;          USER    - File 200 ien of a user changing the status, defaults
"RTN","IBTRH1",363,0)
 ;                    to DUZ
"RTN","IBTRH1",364,0)
 ;          TSTAMP  - Timestamp of the status change, defaults to current
"RTN","IBTRH1",365,0)
 ;                    date/time
"RTN","IBTRH1",366,0)
 ;          RESP    - 1 - Setting field .21 instead of field .08
"RTN","IBTRH1",367,0)
 ;                    Optional, defaults to 0
"RTN","IBTRH1",368,0)
 N IENS,SDATA
"RTN","IBTRH1",369,0)
 Q:'+$G(IEN)                           ; Invalid ien
"RTN","IBTRH1",370,0)
 S:'$D(RESP) RESP=0
"RTN","IBTRH1",371,0)
 I 'RESP,"^01^0^"'[(U_$G(STATUS)_U) Q  ; Invalid status for Main Worklist
"RTN","IBTRH1",372,0)
 I RESP,"^1^0^"'[(U_$G(STATUS)_U) Q  ; Invalid status for Response Worklist
"RTN","IBTRH1",373,0)
 S:$G(USER)="" USER=DUZ
"RTN","IBTRH1",374,0)
 S:$G(TSTAMP)="" TSTAMP=$$NOW^XLFDT()
"RTN","IBTRH1",375,0)
 S IENS=+IEN_","
"RTN","IBTRH1",376,0)
 S:'RESP SDATA(356.22,IENS,.08)=STATUS ; Update status
"RTN","IBTRH1",377,0)
 S:RESP SDATA(356.22,IENS,.21)=STATUS  ; Update Response Status
"RTN","IBTRH1",378,0)
 S SDATA(356.22,IENS,.09)=USER ; Update status entered by
"RTN","IBTRH1",379,0)
 S SDATA(356.22,IENS,.1)=TSTAMP  ; Update status entered date
"RTN","IBTRH1",380,0)
 D FILE^DIE("","SDATA")
"RTN","IBTRH1",381,0)
 Q
"RTN","IBTRH1",382,0)
 ;
"RTN","IBTRH1",383,0)
SELEVENT(FULL,PROMPT,DLINE,MULT,WLIST)    ;EP
"RTN","IBTRH1",384,0)
 ; Select Entry(s) to perform an action upon
"RTN","IBTRH1",385,0)
 ; Input:   FULL                - 1 - full screen mode, 0 otherwise
"RTN","IBTRH1",386,0)
 ;          PROMPT              - Prompt to be displayed to the user
"RTN","IBTRH1",387,0)
 ;          MULT                - 1 to allow multiple entry selection
"RTN","IBTRH1",388,0)
 ;                                0 to only allow single entry selection
"RTN","IBTRH1",389,0)
 ;                                Optional, defaults to 0
"RTN","IBTRH1",390,0)
 ;          WLIST               - Worklist, the user is selecting from
"RTN","IBTRH1",391,0)
 ;                                Set to 'IBTRH5IX' when called from the
"RTN","IBTRH1",392,0)
 ;                                response worklist.
"RTN","IBTRH1",393,0)
 ;                                Optional, defaults to 'IBTRH1IX' 
"RTN","IBTRH1",394,0)
 ;          ^TMP($J,"IBTRH1IX") - Index of displayed lines of the HCSR Worklist
"RTN","IBTRH1",395,0)
 ;                                Only used if WLIST is not 'IBTRH5IX"
"RTN","IBTRH1",396,0)
 ;          ^TMP($J,"IBTRH5IX") - Index of displayed lines of the HCSR Response
"RTN","IBTRH1",397,0)
 ;                                Worklist. Only used if WLIST is 'IBTRH5IX"
"RTN","IBTRH1",398,0)
 ; Output:  DLINE               - Comma delimited list of Line #(s) of the 
"RTN","IBTRH1",399,0)
 ;                                selected entries
"RTN","IBTRH1",400,0)
 ; Returns: EIN(s) - Comma delimited string or IENS for the selected entry(s)
"RTN","IBTRH1",401,0)
 ;          Error message and "" IENS if multi-selection and not allowed
"RTN","IBTRH1",402,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,EIEN,EIENS,IX,VALMY,X,Y
"RTN","IBTRH1",403,0)
 S:'$D(MULT) MULT=0
"RTN","IBTRH1",404,0)
 S:'$D(WLIST) WLIST="IBTRH1IX"
"RTN","IBTRH1",405,0)
 D:FULL FULL^VALM1
"RTN","IBTRH1",406,0)
 S DLINE=$P($P($G(XQORNOD(0)),"^",4),"=",2) ; User selection with action
"RTN","IBTRH1",407,0)
 S DLINE=$TR(DLINE,"/\; .",",,,,,") ; Check for multi-selection
"RTN","IBTRH1",408,0)
 S EIENS=""
"RTN","IBTRH1",409,0)
 I 'MULT,DLINE["," D  Q ""   ; Invalid multi-selection
"RTN","IBTRH1",410,0)
 . W !,*7,">>>> Only single entry selection is allowed"
"RTN","IBTRH1",411,0)
 . S DLINE=""
"RTN","IBTRH1",412,0)
 . K DIR
"RTN","IBTRH1",413,0)
 . D PAUSE^VALM1
"RTN","IBTRH1",414,0)
 ; Check the user enter their selection(s)
"RTN","IBTRH1",415,0)
 D EN^VALM2($G(XQORNOD(0)),"O") ; ListMan generic selector
"RTN","IBTRH1",416,0)
 I '$D(VALMY) Q ""
"RTN","IBTRH1",417,0)
 S IX="",DLINE=""
"RTN","IBTRH1",418,0)
 F  D  Q:IX=""
"RTN","IBTRH1",419,0)
 . S IX=$O(VALMY(IX))
"RTN","IBTRH1",420,0)
 . Q:IX=""
"RTN","IBTRH1",421,0)
 . S DLINE=$S(DLINE="":IX,1:DLINE_","_IX)
"RTN","IBTRH1",422,0)
 . S EIEN=$G(^TMP($J,WLIST,IX))
"RTN","IBTRH1",423,0)
 . S EIENS=$S(EIENS="":EIEN,1:EIENS_","_EIEN)
"RTN","IBTRH1",424,0)
 Q EIENS
"RTN","IBTRH1",425,0)
 ;
"RTN","IBTRH1",426,0)
ADDCMT  ;EP
"RTN","IBTRH1",427,0)
 ; Listman Protocol Action to add a comment to a selected entry
"RTN","IBTRH1",428,0)
 ; Input:   ^TMP("IBTRH1",$J)   - Current Array of displayed entries
"RTN","IBTRH1",429,0)
 ;          ^TMP($J,"IBTRHIX")  - Current Index of displayed lines
"RTN","IBTRH1",430,0)
 ; Output:  Comment is added (Potentially) to the selected entry
"RTN","IBTRH1",431,0)
 N DLINE,IBTRIEN,PROMPT
"RTN","IBTRH1",432,0)
 S VALMBCK="R"
"RTN","IBTRH1",433,0)
 D VALMSGH ; Set flag legend
"RTN","IBTRH1",434,0)
 ; First select the entry to add a comment to
"RTN","IBTRH1",435,0)
 S PROMPT="Select the entry to add a comment to"
"RTN","IBTRH1",436,0)
 S IBTRIEN=$$SELEVENT(1,PROMPT,.DLINE) ; Select the entry to add comment to
"RTN","IBTRH1",437,0)
 I IBTRIEN="" S VALMBCK="R" Q
"RTN","IBTRH1",438,0)
 D ADDCMT^IBTRH2(1)
"RTN","IBTRH1",439,0)
 Q
"RTN","IBTRH1",440,0)
 ;
"RTN","IBTRH1",441,0)
LOCKEV(IEN) ;EP
"RTN","IBTRH1",442,0)
 ; Locks the specified entry for editing
"RTN","IBTRH1",443,0)
 ; Input:   IEN     - IEN of the entry to locked
"RTN","IBTRH1",444,0)
 ; Output:  Entry is locked (potentially)
"RTN","IBTRH1",445,0)
 ; Returns: 1       - Entry was locked
"RTN","IBTRH1",446,0)
 ;          0       - Entry couldn't be locked
"RTN","IBTRH1",447,0)
 L +^IBT(356.22,IEN):1
"RTN","IBTRH1",448,0)
 Q:$T 1
"RTN","IBTRH1",449,0)
 Q 0
"RTN","IBTRH1",450,0)
 ;
"RTN","IBTRH1",451,0)
UNLOCKEV(IEN)   ;EP
"RTN","IBTRH1",452,0)
 ; Unlocks the specified entry
"RTN","IBTRH1",453,0)
 ; Input:   IEN     - IEN of the entry to be unlocked
"RTN","IBTRH1",454,0)
 ; Output:  Entry is unlocked
"RTN","IBTRH1",455,0)
 L -^IBT(356.22,IEN)
"RTN","IBTRH1",456,0)
 Q
"RTN","IBTRH1",457,0)
 ;
"RTN","IBTRH1",458,0)
COMMENT(COM)    ; Enter the comment
"RTN","IBTRH1",459,0)
 ; Input:   None
"RTN","IBTRH1",460,0)
 ; Output:  COM   - Array of Comment text to be entered
"RTN","IBTRH1",461,0)
 ; Returns: 1     - 1 - Text entered, 0 otherwise
"RTN","IBTRH1",462,0)
 N DIC,DWPK
"RTN","IBTRH1",463,0)
 K ^TMP($J,"COMMENT")
"RTN","IBTRH1",464,0)
 S DWPK=1,DIC="^TMP($J,""COMMENT"","
"RTN","IBTRH1",465,0)
 D EN^DIWE
"RTN","IBTRH1",466,0)
 Q:'$D(^TMP($J,"COMMENT")) 0
"RTN","IBTRH1",467,0)
 M COM=^TMP($J,"COMMENT")
"RTN","IBTRH1",468,0)
 K ^TMP($J,"COMMENT")
"RTN","IBTRH1",469,0)
 Q 1
"RTN","IBTRH1A")
0^18^B221868988^n/a
"RTN","IBTRH1A",1,0)
IBTRH1A ;ALB/FA - HCSR Worklist ;12-AUG-2014
"RTN","IBTRH1A",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH1A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH1A",4,0)
 ;;
"RTN","IBTRH1A",5,0)
 ;
"RTN","IBTRH1A",6,0)
 ; Contains Entry points and functions used in filtering/displaying the 
"RTN","IBTRH1A",7,0)
 ; HCSR Worklist
"RTN","IBTRH1A",8,0)
 ;
"RTN","IBTRH1A",9,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH1A",10,0)
 ;    FILTERS   - Used to set filtering criteria for what entries should be
"RTN","IBTRH1A",11,0)
 ;                displayed in the worklist
"RTN","IBTRH1A",12,0)
 ;    PATLOC    - Formats the Clinic or Ward name for display on the HCSR 
"RTN","IBTRH1A",13,0)
 ;                Worklist and the HCSR Response Worklist
"RTN","IBTRH1A",14,0)
 ;    PNAME     - Formats the patient name for display on the HCSR Worklist
"RTN","IBTRH1A",15,0)
 ;                and the HCSR Response Worklist
"RTN","IBTRH1A",16,0)
 ;    REFRESH   - Protocol action that allows the user to check for recent
"RTN","IBTRH1A",17,0)
 ;                appointments and admissions, re-select filter options and
"RTN","IBTRH1A",18,0)
 ;                redisplays the HCSR Worklist
"RTN","IBTRH1A",19,0)
 ;    SORT1     - Used to sort the entries in the worklist per user selected
"RTN","IBTRH1A",20,0)
 ;                option
"RTN","IBTRH1A",21,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH1A",22,0)
 ;
"RTN","IBTRH1A",23,0)
REFRESH ;EP
"RTN","IBTRH1A",24,0)
 ; Protocol action to search for new appointments/admission, reset filter
"RTN","IBTRH1A",25,0)
 ; and redisplay the HCSR Worklist
"RTN","IBTRH1A",26,0)
 ; Input:   HCSSORT             - Current sort selection
"RTN","IBTRH1A",27,0)
 ; Output:  IBFILTS()           - Array of filter criteria
"RTN","IBTRH1A",28,0)
 ;          ^TMP("IBTRH1",$J)   - Body lines to display
"RTN","IBTRH1A",29,0)
 ;          ^TMP($J,"IBTRH1S")  - Sorted Body lines to display
"RTN","IBTRH1A",30,0)
 ;          ^TMP($J,"IBTRH1IX") - Index of Event IENs by display line
"RTN","IBTRH1A",31,0)
 ;
"RTN","IBTRH1A",32,0)
 ; First check to see if we can create more event entries
"RTN","IBTRH1A",33,0)
 ;;D EN^IBTRHDE(1)   ;JWS 3/21/16 - remove this.  don't want to create more entries this way
"RTN","IBTRH1A",34,0)
 D VALMSGH^IBTRH1                               ; Set flag legend
"RTN","IBTRH1A",35,0)
 D FULL^VALM1
"RTN","IBTRH1A",36,0)
 S VALMBCK="R"
"RTN","IBTRH1A",37,0)
 Q:'$$FILTERS(.IBFILTS)                         ; Reset Filter criteria
"RTN","IBTRH1A",38,0)
 D CLEAN^VALM10
"RTN","IBTRH1A",39,0)
 S VALMBG=1
"RTN","IBTRH1A",40,0)
 D SORT^IBTRH1(2)                               ; Sort the entries
"RTN","IBTRH1A",41,0)
 D INIT^IBTRH1                                  ; Rebuild the worklist
"RTN","IBTRH1A",42,0)
 D HDR^IBTRH1                                   ; Redisplay the header
"RTN","IBTRH1A",43,0)
 Q
"RTN","IBTRH1A",44,0)
 ;
"RTN","IBTRH1A",45,0)
FILTERS(FILTERS)    ;EP
"RTN","IBTRH1A",46,0)
 ; Sets an array of filters to determine which entries in HCSR Transmission
"RTN","IBTRH1A",47,0)
 ; file should be displayed to the user
"RTN","IBTRH1A",48,0)
 ; Input:   None
"RTN","IBTRH1A",49,0)
 ; Output:  FILTERS(0)  - A1^A2 Where:
"RTN","IBTRH1A",50,0)
 ;                          A1 - 0 - 'Output' entries only
"RTN","IBTRH1A",51,0)
 ;                               1 - 'Input' entries only
"RTN","IBTRH1A",52,0)
 ;                               2 - Both Output and Input entries
"RTN","IBTRH1A",53,0)
 ;                          A2 - O - CPAC entries only
"RTN","IBTRH1A",54,0)
 ;                               1 - Champva/Tricare entries only
"RTN","IBTRH1A",55,0)
 ;                               2 - Both CPAC and Champva/Tricare entries
"RTN","IBTRH1A",56,0)
 ;                          A3 - 0 - No Division filter
"RTN","IBTRH1A",57,0)
 ;                               1 - Selected Division filter
"RTN","IBTRH1A",58,0)
 ;          FILTERS(1)  - '^' delimited list of included Clinic IENs
"RTN","IBTRH1A",59,0)
 ;                        Null if all clinics are included
"RTN","IBTRH1A",60,0)
 ;                        Only set if FILTERS(0)= 0 OR 2
"RTN","IBTRH1A",61,0)
 ;          FILTERS(2)  - '^' delimited list of included WARD IENs
"RTN","IBTRH1A",62,0)
 ;                        Null if all wards are included
"RTN","IBTRH1A",63,0)
 ;                        Only set if FILTERS(0)= 1 OR 2
"RTN","IBTRH1A",64,0)
 ;          FILTERS(3)  - '^' delimited list of included Division IENs
"RTN","IBTRH1A",65,0)
 ;                        Null if all Divisions are included
"RTN","IBTRH1A",66,0)
 ; Returns: 0 if the user entered '^' or timed out, 1 otherwise
"RTN","IBTRH1A",67,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","IBTRH1A",68,0)
 K FILTERS
"RTN","IBTRH1A",69,0)
 ;
"RTN","IBTRH1A",70,0)
 ; ChampVA/Tricare filter
"RTN","IBTRH1A",71,0)
 S DIR(0)="S",DIR("A")="Show CHAMPVA/TRICARE entries, CPAC entries or Both",DIR("B")="B"
"RTN","IBTRH1A",72,0)
 S DIR("?",1)="Enter 'T' to only view entries created for CHAMPVA/TRICARE"
"RTN","IBTRH1A",73,0)
 S DIR("?",2)="Enter 'C' to only view entries created for CPAC"
"RTN","IBTRH1A",74,0)
 S DIR("?")="Enter 'B' to view entries both CHAMPVA/TRICARE and CPAC entries"
"RTN","IBTRH1A",75,0)
 S $P(DIR(0),"^",2)="T:CHAMPVA/TRICARE;C:CPAC;B:Both"
"RTN","IBTRH1A",76,0)
 W !! D ^DIR K DIR
"RTN","IBTRH1A",77,0)
 I $G(DIRUT) Q 0
"RTN","IBTRH1A",78,0)
 ;
"RTN","IBTRH1A",79,0)
 ; Inpatient/Outpatient filter
"RTN","IBTRH1A",80,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRH1A",81,0)
 S $P(FILTERS(0),"^",2)=$S(X="C":0,X="T":1,1:2)
"RTN","IBTRH1A",82,0)
 S DIR(0)="S",DIR("A")="Show Inpatient entries, Outpatient entries or Both",DIR("B")="B"
"RTN","IBTRH1A",83,0)
 S DIR("?",1)="Enter 'I' to only view entries created for inpatients"
"RTN","IBTRH1A",84,0)
 S DIR("?",2)="Enter 'O' to only view entries created for outpatients"
"RTN","IBTRH1A",85,0)
 S DIR("?")="Enter 'B' to view entries both inpatient and outpatient entries"
"RTN","IBTRH1A",86,0)
 S $P(DIR(0),"^",2)="O:Outpatient;I:Inpatient;B:Both"
"RTN","IBTRH1A",87,0)
 W ! D ^DIR K DIR
"RTN","IBTRH1A",88,0)
 I $G(DIRUT) Q 0
"RTN","IBTRH1A",89,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRH1A",90,0)
 S $P(FILTERS(0),"^",1)=$S(X="O":0,X="I":1,1:2)
"RTN","IBTRH1A",91,0)
 ;
"RTN","IBTRH1A",92,0)
 ; Division filter
"RTN","IBTRH1A",93,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRH1A",94,0)
 S $P(FILTERS(0),"^",3)=$S(X="A":0,1:1)
"RTN","IBTRH1A",95,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Divisions",DIR("B")="All"
"RTN","IBTRH1A",96,0)
 S DIR("?",1)="Enter 'A' to not filter by division."
"RTN","IBTRH1A",97,0)
 S DIR("?")="Enter 'S' to view entries for selected division(s)."
"RTN","IBTRH1A",98,0)
 S $P(DIR(0),"^",2)="A:All;S:Selected"
"RTN","IBTRH1A",99,0)
 W ! D ^DIR K DIR
"RTN","IBTRH1A",100,0)
 I $G(DIRUT) Q 0
"RTN","IBTRH1A",101,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRH1A",102,0)
 S $P(FILTERS(0),"^",3)=$S(Y="A":0,1:1)
"RTN","IBTRH1A",103,0)
 ;
"RTN","IBTRH1A",104,0)
 ; Set Division inclusion filter
"RTN","IBTRH1A",105,0)
 I $P(FILTERS(0),"^",3)=1 D ASKDIV(.FILTERS)
"RTN","IBTRH1A",106,0)
 ;
"RTN","IBTRH1A",107,0)
 ; Set Ward inclusion filter
"RTN","IBTRH1A",108,0)
 I $P(FILTERS(0),"^",1)>0 D ASKWORC(0,.FILTERS)
"RTN","IBTRH1A",109,0)
 ;
"RTN","IBTRH1A",110,0)
 ; Set Clinic inclusion filter
"RTN","IBTRH1A",111,0)
 I ($P(FILTERS(0),"^",1)=0)!($P(FILTERS(0),"^",1)=2) D ASKWORC(1,.FILTERS)
"RTN","IBTRH1A",112,0)
 ;
"RTN","IBTRH1A",113,0)
 ; If any Division, Clinic or Ward inclusion filters were set, display the final results
"RTN","IBTRH1A",114,0)
 I ($G(FILTERS(1))'="")!($G(FILTERS(2))'="")!($G(FILTERS(3))'="") D
"RTN","IBTRH1A",115,0)
 . D SHOWFILT^IBTRH1B(.FILTERS)
"RTN","IBTRH1A",116,0)
 Q 1
"RTN","IBTRH1A",117,0)
 ;
"RTN","IBTRH1A",118,0)
ASKDIV(FILTERS)   ; Sets a list of Division to be displayed in the HSCR Worklist
"RTN","IBTRH1A",119,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRH1A",120,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRH1A",121,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,FIRST,IBIENS,IBIENS2,IEN,N,X,XX,Y
"RTN","IBTRH1A",122,0)
 S DIC=40.8,DIC(0)="AE",FIRST=1
"RTN","IBTRH1A",123,0)
 F  D  Q:+IEN<1
"RTN","IBTRH1A",124,0)
 . D ONEDIV(.DIC,.IEN,.FIRST)                   ; One Division prompt
"RTN","IBTRH1A",125,0)
 . Q:+IEN<1
"RTN","IBTRH1A",126,0)
 . S IBIENS($P(IEN,"^",2))=$P(IEN,"^",1)
"RTN","IBTRH1A",127,0)
 . S IBIENS2($P(IEN,"^",1))=$P(IEN,"^",2)
"RTN","IBTRH1A",128,0)
 I '$D(IBIENS) S $P(FILTERS(0),"^",3)=0 Q
"RTN","IBTRH1A",129,0)
 ;
"RTN","IBTRH1A",130,0)
 ; Set the filter node responses in alphabetical order
"RTN","IBTRH1A",131,0)
 S XX=""
"RTN","IBTRH1A",132,0)
 F  D  Q:XX=""
"RTN","IBTRH1A",133,0)
 . S XX=$O(IBIENS(XX))
"RTN","IBTRH1A",134,0)
 . Q:XX=""
"RTN","IBTRH1A",135,0)
 . S N=IBIENS(XX)
"RTN","IBTRH1A",136,0)
 . S FILTERS(3)=$S($G(FILTERS(3))'="":FILTERS(3)_"^"_N,1:N)
"RTN","IBTRH1A",137,0)
 Q
"RTN","IBTRH1A",138,0)
 ;
"RTN","IBTRH1A",139,0)
ONEDIV(DIC,IEN,FIRST)  ; Prompts the user for a division
"RTN","IBTRH1A",140,0)
 ; Input:   DIC     - Variable/Array of settings needed for ^DIC call
"RTN","IBTRH1A",141,0)
 ;          FIRST   - Set to 1 initially and then 0 for subsequent calls
"RTN","IBTRH1A",142,0)
 ; Output:  FIRST   - Set to 0
"RTN","IBTRH1A",143,0)
 ;          IEN     - IEN of the selected Division
"RTN","IBTRH1A",144,0)
 ;                    null of no selection was made
"RTN","IBTRH1A",145,0)
 S DIC("A")=$S(FIRST:"Select a Division: ",1:"Select Another Division: ")
"RTN","IBTRH1A",146,0)
 D ^DIC
"RTN","IBTRH1A",147,0)
 S FIRST=0,IEN=Y
"RTN","IBTRH1A",148,0)
 Q
"RTN","IBTRH1A",149,0)
 ;
"RTN","IBTRH1A",150,0)
ASKWORC(WHICH,FILTERS)   ; Sets a list of wards or clinics to be displayed in
"RTN","IBTRH1A",151,0)
 ; the HCSR Worklist
"RTN","IBTRH1A",152,0)
 ; Input:   WHICH   - 0 Ward selection, 1 - Clinic Selection
"RTN","IBTRH1A",153,0)
 ;          FILTERS - Current Array of filter settings
"RTN","IBTRH1A",154,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRH1A",155,0)
 N CLINS,DIC,DIR,DIRUT,DIVS,DUOUT,FIRST,IBIENS,IBIENS2,IEN,N,NM,NODE,WARDS,X,XX,Y
"RTN","IBTRH1A",156,0)
 S DIC=$S(WHICH=0:42,1:44),DIC(0)="AE",FIRST=1
"RTN","IBTRH1A",157,0)
 S NODE=$S(WHICH=0:2,1:1)
"RTN","IBTRH1A",158,0)
 F N=1:1:$L($G(FILTERS(3)),"^") D 
"RTN","IBTRH1A",159,0)
 . S XX=$P($G(FILTERS(3)),"^",N)
"RTN","IBTRH1A",160,0)
 . Q:XX=""
"RTN","IBTRH1A",161,0)
 . S DIVS(XX)=""
"RTN","IBTRH1A",162,0)
 ;
"RTN","IBTRH1A",163,0)
 I WHICH=0 D
"RTN","IBTRH1A",164,0)
 . S N=0,NM="Ward"
"RTN","IBTRH1A",165,0)
 . F  D  Q:+N=0
"RTN","IBTRH1A",166,0)
 . . S N=$O(^IBE(350.9,1,64,N))
"RTN","IBTRH1A",167,0)
 . . Q:+N=0
"RTN","IBTRH1A",168,0)
 . . S IEN=$P(^IBE(350.9,1,64,N,0),"^",1)
"RTN","IBTRH1A",169,0)
 . . S WARDS(IEN)=""
"RTN","IBTRH1A",170,0)
 . I $D(WARDS)!$D(FILTERS(3)) D
"RTN","IBTRH1A",171,0)
 . . S DIC("S")="I $$WCFILT^IBTRH1A(1,Y,.DIVS,"""",.WARDS)"
"RTN","IBTRH1A",172,0)
 I WHICH=1 D
"RTN","IBTRH1A",173,0)
 . S N=0,NM="Clinic"
"RTN","IBTRH1A",174,0)
 . F  D  Q:+N=0
"RTN","IBTRH1A",175,0)
 . . S N=$O(^IBE(350.9,1,63,N))
"RTN","IBTRH1A",176,0)
 . . Q:+N=0
"RTN","IBTRH1A",177,0)
 . . S IEN=$P(^IBE(350.9,1,63,N,0),"^",1)
"RTN","IBTRH1A",178,0)
 . . S CLINS(IEN)=""
"RTN","IBTRH1A",179,0)
 . I $D(CLINS)!$D(FILTERS(3)) D
"RTN","IBTRH1A",180,0)
 . . S DIC("S")="I $$WCFILT^IBTRH1A(0,Y,.DIVS,.CLINS,"""")"
"RTN","IBTRH1A",181,0)
 F  D  Q:+IEN<1
"RTN","IBTRH1A",182,0)
 . D ONEWORC(.DIC,NM,.IEN,.FIRST)               ; One Clinic or Ward prompt
"RTN","IBTRH1A",183,0)
 . Q:+IEN<1
"RTN","IBTRH1A",184,0)
 . S IBIENS($P(IEN,"^",2))=$P(IEN,"^",1)
"RTN","IBTRH1A",185,0)
 . S IBIENS2($P(IEN,"^",1))=$P(IEN,"^",2)
"RTN","IBTRH1A",186,0)
 I '$D(IBIENS) S FILTERS(NODE)="" Q
"RTN","IBTRH1A",187,0)
 ;
"RTN","IBTRH1A",188,0)
 ; Set the filter node responses in alphabetical order
"RTN","IBTRH1A",189,0)
 S XX=""
"RTN","IBTRH1A",190,0)
 F  D  Q:XX=""
"RTN","IBTRH1A",191,0)
 . S XX=$O(IBIENS(XX))
"RTN","IBTRH1A",192,0)
 . Q:XX=""
"RTN","IBTRH1A",193,0)
 . S N=IBIENS(XX)
"RTN","IBTRH1A",194,0)
 . S FILTERS(NODE)=$S($G(FILTERS(NODE))'="":FILTERS(NODE)_"^"_N,1:N)
"RTN","IBTRH1A",195,0)
 Q
"RTN","IBTRH1A",196,0)
 ;
"RTN","IBTRH1A",197,0)
ONEWORC(DIC,WHICH,IEN,FIRST)  ; Prompts the user for a clinic or ward
"RTN","IBTRH1A",198,0)
 ; Input:   DIC     - Variable/Array of settings needed for ^DIC call
"RTN","IBTRH1A",199,0)
 ;          WHICH   - 'Ward' or 'Clinic'
"RTN","IBTRH1A",200,0)
 ;          FIRST   - Set to 1 initially and then 0 for subsequent calls
"RTN","IBTRH1A",201,0)
 ; Output:  FIRST   - Set to 0
"RTN","IBTRH1A",202,0)
 ;          IEN     - IEN of the selected Ward or clinic Entry
"RTN","IBTRH1A",203,0)
 ;                    null of no selection was made
"RTN","IBTRH1A",204,0)
 S DIC("A")=$S(FIRST:"Select "_WHICH_": ",1:"Select Another "_WHICH_": ")
"RTN","IBTRH1A",205,0)
 D ^DIC
"RTN","IBTRH1A",206,0)
 S FIRST=0,IEN=Y
"RTN","IBTRH1A",207,0)
 Q
"RTN","IBTRH1A",208,0)
 ;
"RTN","IBTRH1A",209,0)
WCFILT(WHICH,IEN,DIVS,CLINS,WARDS)   ; Used as a dictionary screen when doing
"RTN","IBTRH1A",210,0)
 ; Clinic or Ward inclusion filter lookups.
"RTN","IBTRH1A",211,0)
 ; Input:   WHICH   - 0 - Clinic Lookup
"RTN","IBTRH1A",212,0)
 ;                    1 - Ward lookup
"RTN","IBTRH1A",213,0)
 ;          IEN     - IEN of the Clinic or Ward being looked up
"RTN","IBTRH1A",214,0)
 ;          DIVS    - Array of Included Divisions (if any)
"RTN","IBTRH1A",215,0)
 ;          CLINS   - Array of Site Parameter included Clinics (if any)
"RTN","IBTRH1A",216,0)
 ;          WARDS   - Array of Site Parameter included Wards (if any) 
"RTN","IBTRH1A",217,0)
 ; Returns: 1 - Clinic or Ward is valid, 0 otherwise
"RTN","IBTRH1A",218,0)
 N IDIVS,RETURN,SDIV
"RTN","IBTRH1A",219,0)
 S IDIVS=$S($O(DIVS(""))'="":1,1:0)
"RTN","IBTRH1A",220,0)
 S RETURN=1
"RTN","IBTRH1A",221,0)
 ;
"RTN","IBTRH1A",222,0)
 ; Clinic filter check
"RTN","IBTRH1A",223,0)
 I WHICH=0 D  Q RETURN
"RTN","IBTRH1A",224,0)
 . I $D(CLINS),'$D(CLINS(IEN)) S RETURN=0 Q     ; Not on Site param inc list
"RTN","IBTRH1A",225,0)
 . ;
"RTN","IBTRH1A",226,0)
 . ; If we have included divisions make sure clinic is for the division
"RTN","IBTRH1A",227,0)
 . I IDIVS D  Q
"RTN","IBTRH1A",228,0)
 . . S SDIV=$$GET1^DIQ(44,IEN_",",3.5,"I")      ; Division of the Clinic
"RTN","IBTRH1A",229,0)
 . . Q:SDIV=""
"RTN","IBTRH1A",230,0)
 . . S:'$D(DIVS(SDIV)) RETURN=0                 ; Division not in list
"RTN","IBTRH1A",231,0)
 ;
"RTN","IBTRH1A",232,0)
 ; Ward filter check
"RTN","IBTRH1A",233,0)
 I $D(WARDS),'$D(WARDS(IEN)) Q 0                ; On Site param exclusion list
"RTN","IBTRH1A",234,0)
 ;
"RTN","IBTRH1A",235,0)
 ; If we have included divisions make sure ward is for the division
"RTN","IBTRH1A",236,0)
 I IDIVS D
"RTN","IBTRH1A",237,0)
 . S SDIV=$$GET1^DIQ(42,IEN_",",.015,"I")       ; Division of the Ward
"RTN","IBTRH1A",238,0)
 . Q:SDIV=""
"RTN","IBTRH1A",239,0)
 . S:'$D(DIVS(SDIV)) RETURN=0                   ; Division not in list
"RTN","IBTRH1A",240,0)
 Q RETURN
"RTN","IBTRH1A",241,0)
 ;
"RTN","IBTRH1A",242,0)
SORT1    ;EP
"RTN","IBTRH1A",243,0)
 ; Builds the sorted list of HCSR entries to be displayed on the HCSR Worklist
"RTN","IBTRH1A",244,0)
 ; Input:   HCSRSORT            - Current sort selection
"RTN","IBTRH1A",245,0)
 ;          IBFILTS()           - Array of filter settings. See FILTERS for a
"RTN","IBTRH1A",246,0)
 ;                                detailed explanation of the FILTERS array
"RTN","IBTRH1A",247,0)
 ; Output:  ^TMP("IBTRH1S",$J)  - Sorted Event Entries to display 
"RTN","IBTRH1A",248,0)
 ; 
"RTN","IBTRH1A",249,0)
 N DFN,CSTAT,ECTR,EIEN,EVDT,EVENT
"RTN","IBTRH1A",250,0)
 K ^TMP($J,"IBTRH1S")
"RTN","IBTRH1A",251,0)
 S ECTR=0
"RTN","IBTRH1A",252,0)
 ;
"RTN","IBTRH1A",253,0)
 ; Loop through all the statuses that are shown on the worklist
"RTN","IBTRH1A",254,0)
 F CSTAT=0,1,2,3,4,7,8 D
"RTN","IBTRH1A",255,0)
 . S EVDT=""
"RTN","IBTRH1A",256,0)
 . F  D  Q:EVDT=""
"RTN","IBTRH1A",257,0)
 . . S EVDT=$O(^IBT(356.22,"AD",CSTAT,EVDT))
"RTN","IBTRH1A",258,0)
 . . Q:EVDT=""
"RTN","IBTRH1A",259,0)
 . . S EIEN=""
"RTN","IBTRH1A",260,0)
 . . F  D  Q:EIEN=""
"RTN","IBTRH1A",261,0)
 . . . S EIEN=$O(^IBT(356.22,"AD",CSTAT,EVDT,EIEN))
"RTN","IBTRH1A",262,0)
 . . . Q:EIEN=""
"RTN","IBTRH1A",263,0)
 . . . S EVENT=$G(^IBT(356.22,EIEN,0))
"RTN","IBTRH1A",264,0)
 . . . Q:$P(EVENT,"^",13)'=""                   ; Response entry - skip
"RTN","IBTRH1A",265,0)
 . . . Q:$$SKIP(EVENT)                          ; Entry is filtered out
"RTN","IBTRH1A",266,0)
 . . . S ECTR=ECTR+1
"RTN","IBTRH1A",267,0)
 . . . I '$D(ZTQUEUED),'(ECTR#15) W "."
"RTN","IBTRH1A",268,0)
 . . . D ONEEVENT(CSTAT,EIEN,EVENT)             ; Add one event to sort array
"RTN","IBTRH1A",269,0)
 Q
"RTN","IBTRH1A",270,0)
 ;
"RTN","IBTRH1A",271,0)
SKIP(EVENT) ; Checks to see if the specified event entry should display on the
"RTN","IBTRH1A",272,0)
 ; list
"RTN","IBTRH1A",273,0)
 ; Input:   EVENT       - Event Entry being checked
"RTN","IBTRH1A",274,0)
 ;          IBFILTS()   - Array of filter settings. See FILTERS for a
"RTN","IBTRH1A",275,0)
 ;                        detailed explanation of the FILTERS array
"RTN","IBTRH1A",276,0)
 ; Returns: 1 - Don't display the entry on the list, 0 - Display entry on list
"RTN","IBTRH1A",277,0)
 N DELAY,IEN,IORO,SKIP,TRICARE,NOW,XX,YY,ZZ
"RTN","IBTRH1A",278,0)
 I $P(EVENT,"^",19)=1 Q 1                       ; Skip if a 215 was triggered
"RTN","IBTRH1A",279,0)
 S IORO=$P(EVENT,"^",4)                         ; 'I' Inpatient, 'O' Outpatient
"RTN","IBTRH1A",280,0)
 S NOW=$$DT^XLFDT()                             ; Today's Internal Fileman date
"RTN","IBTRH1A",281,0)
 S DELAY=0
"RTN","IBTRH1A",282,0)
 S:+$P(EVENT,"^",8)=8 DELAY=$P(EVENT,"^",17)    ; Delay Date (if any)
"RTN","IBTRH1A",283,0)
 I IORO="I",$P(IBFILTS(0),"^",1)=0 Q 1          ; Only show outpatients, skip
"RTN","IBTRH1A",284,0)
 I IORO="O",$P(IBFILTS(0),"^",1)=1 Q 1          ; Only show inpatients, skip
"RTN","IBTRH1A",285,0)
 S TRICARE=$$TRICARE(EVENT)                     ; Is event for Tricare?
"RTN","IBTRH1A",286,0)
 I $P(IBFILTS(0),"^",2)=0,TRICARE Q 1           ; Only show CPAC, Skip
"RTN","IBTRH1A",287,0)
 I $P(IBFILTS(0),"^",2)=1,'TRICARE Q 1          ; Only show Champ/Tricare, Skip
"RTN","IBTRH1A",288,0)
 S SKIP=0
"RTN","IBTRH1A",289,0)
 ;
"RTN","IBTRH1A",290,0)
 ; Check Division filter
"RTN","IBTRH1A",291,0)
 I $D(IBFILTS(3)) D  Q:SKIP 1
"RTN","IBTRH1A",292,0)
 . S XX="^"_IBFILTS(3)_"^",Y=1
"RTN","IBTRH1A",293,0)
 . S IEN=$P(EVENT,"^",5)                        ; Ward IEN
"RTN","IBTRH1A",294,0)
 . S:IEN="" IEN=$P(EVENT,"^",6),Y=0             ; Clinic IEN
"RTN","IBTRH1A",295,0)
 . I Y S ZZ=$$GET1^DIQ(42,IEN_",",.015,"I")
"RTN","IBTRH1A",296,0)
 . E  S ZZ=$$GET1^DIQ(44,IEN_",",3.5,"I")
"RTN","IBTRH1A",297,0)
 . S ZZ="^"_ZZ_"^"
"RTN","IBTRH1A",298,0)
 . I XX'[ZZ S SKIP=1                            ; Wrong division
"RTN","IBTRH1A",299,0)
 ;
"RTN","IBTRH1A",300,0)
 ; Check Inpatient entry
"RTN","IBTRH1A",301,0)
 I IORO="I" D  Q:SKIP 1
"RTN","IBTRH1A",302,0)
 . Q:$G(IBFILTS(2))=""                          ; No Ward filters display
"RTN","IBTRH1A",303,0)
 . S IEN=$P(EVENT,"^",5)                        ; Ward IEN
"RTN","IBTRH1A",304,0)
 . S XX="^"_IBFILTS(2)_"^"
"RTN","IBTRH1A",305,0)
 . Q:XX[("^"_IEN_"^")                           ; On inclusion list display
"RTN","IBTRH1A",306,0)
 . S SKIP=1                                     ; Not on inclusion list skip
"RTN","IBTRH1A",307,0)
 ;
"RTN","IBTRH1A",308,0)
 ; Check Outpatient entry
"RTN","IBTRH1A",309,0)
 I IORO="O" D  Q:SKIP 1
"RTN","IBTRH1A",310,0)
 . Q:$G(IBFILTS(1))=""                          ; No Clinic filters display
"RTN","IBTRH1A",311,0)
 . S IEN=$P(EVENT,"^",6)                        ; Clinic IEN
"RTN","IBTRH1A",312,0)
 . S XX="^"_IBFILTS(1)_"^"
"RTN","IBTRH1A",313,0)
 . Q:XX[("^"_IEN_"^")                           ; On inclusion list display
"RTN","IBTRH1A",314,0)
 . S SKIP=1
"RTN","IBTRH1A",315,0)
 ;
"RTN","IBTRH1A",316,0)
 ; Skip entries that haven't reached their delay date yet
"RTN","IBTRH1A",317,0)
 I DELAY D  Q:SKIP 1
"RTN","IBTRH1A",318,0)
 . I DELAY'="D" D  Q
"RTN","IBTRH1A",319,0)
 . . S:DELAY>NOW SKIP=1                         ; Delay date not met, skip
"RTN","IBTRH1A",320,0)
 . S:'$$DISCH(EVENT) SKIP=1                     ; Not Discharge yet, skip
"RTN","IBTRH1A",321,0)
 Q 0                                            ; Display this entry
"RTN","IBTRH1A",322,0)
 ;
"RTN","IBTRH1A",323,0)
TRICARE(EVENT)  ;EP
"RTN","IBTRH1A",324,0)
 ; Checks to see if the entry is for a ChampVA/Tricare insurance
"RTN","IBTRH1A",325,0)
 ; Input:   EVENT   - Node 0 of the Event Entry being checked
"RTN","IBTRH1A",326,0)
 ; Returns: 1 if the entry is for ChampVA/Tricare Insurance, 0 otherwise
"RTN","IBTRH1A",327,0)
 N COVTYPE,DFN,IENS,IIEN,IMIEN,INSNAME,GRPLAN,GRPLANTP
"RTN","IBTRH1A",328,0)
 S DFN=$P(EVENT,U,2)                                    ; Patient IEN
"RTN","IBTRH1A",329,0)
 S IMIEN=$P(EVENT,U,3),IENS=IMIEN_","_DFN_","           ; Insurance Multiple IEN
"RTN","IBTRH1A",330,0)
 S IIEN=$$GET1^DIQ(2.312,IENS,.01,"I")                  ; Insurance Company IEN
"RTN","IBTRH1A",331,0)
 S GRPLAN=$$GET1^DIQ(2.312,IENS,.18,"I")   ;GROUP PLAN 355.3 PTR
"RTN","IBTRH1A",332,0)
 S GRPLANTP=$$GET1^DIQ(355.3,GRPLAN_",",.09)
"RTN","IBTRH1A",333,0)
 S COVTYPE=$$UP^XLFSTR($$GET1^DIQ(36,IIEN_",",.13,"E")) ; Type of Coverage (36/.13)
"RTN","IBTRH1A",334,0)
 S INSNAME=$$UP^XLFSTR($$GET1^DIQ(36,IIEN_",",.01))     ; Insurance Company Name
"RTN","IBTRH1A",335,0)
 S TRICARE=0
"RTN","IBTRH1A",336,0)
 S:(COVTYPE["TRICARE")!(COVTYPE["CHAMPVA")!(INSNAME["TRICARE")!(INSNAME["CHAMPVA")!(GRPLANTP["CHAMPVA")!(GRPLANTP["TRICARE") TRICARE=1
"RTN","IBTRH1A",337,0)
 Q TRICARE
"RTN","IBTRH1A",338,0)
 ;
"RTN","IBTRH1A",339,0)
DISCH(EVENT) ; Checks to see if the admission of the entry has been discharged
"RTN","IBTRH1A",340,0)
 ; Input:   EVENT   - Node 0 of the Event Entry being checked
"RTN","IBTRH1A",341,0)
 ; Returns: 1 if the admission has been discharged, 0 otherwise
"RTN","IBTRH1A",342,0)
 N ADATE,DA,DFN,DT,FOUND,IADATE,REC
"RTN","IBTRH1A",343,0)
 S DFN=$P(EVENT,"^",2)                          ; DFN of the patient
"RTN","IBTRH1A",344,0)
 S ADATE=$P(EVENT,"^",7)                        ; Internal Admit date
"RTN","IBTRH1A",345,0)
 I ADATE["-" Q 0                                ; Admission is already discharged
"RTN","IBTRH1A",346,0)
 S IADATE=9999999.9999999-ADATE
"RTN","IBTRH1A",347,0)
 S DA=$O(^DGPM("ATID1",DFN,IADATE,""))          ; DBIA419
"RTN","IBTRH1A",348,0)
 Q:DA="" -1                                     ; No Patient Movement admission record
"RTN","IBTRH1A",349,0)
 I $$GET1^DIQ(405,DA_",",.17,"I")'="" Q 1       ; Patient has been discharged
"RTN","IBTRH1A",350,0)
 Q 0                                            ; Admission is still active
"RTN","IBTRH1A",351,0)
 ;
"RTN","IBTRH1A",352,0)
ONEEVENT(CSTAT,EIEN,EVENT)  ; Adds one event to the sorted list
"RTN","IBTRH1A",353,0)
 ; Input:   HCSRSORT            - Current sort selection
"RTN","IBTRH1A",354,0)
 ;          CSTAT               - Status of the event to be added
"RTN","IBTRH1A",355,0)
 ;          EIEN                - Internal IEN of the event being added
"RTN","IBTRH1A",356,0)
 ;          EVENT               - ^IBT(356.22,EIEN,0)
"RTN","IBTRH1A",357,0)
 ; Output:  ^TMP("IBTRH1S",$J)  - Sorted Event entries to display 
"RTN","IBTRH1A",358,0)
 N ADATE,DFN,ESTATUS,HS1,HS2,HS3,ICOB,IENS,IGROUP,IIEN,IMIEN,INAME,ISTATUS
"RTN","IBTRH1A",359,0)
 N LINE,PCREQ,PNAME,RFLG,URREQ,XX
"RTN","IBTRH1A",360,0)
 S (INAME,LINE,PCREQ,URREQ)=""
"RTN","IBTRH1A",361,0)
 ;
"RTN","IBTRH1A",362,0)
 ; Symbol to display in front of the patient name (if any)
"RTN","IBTRH1A",363,0)
 S RFLG=$S(CSTAT=1:"#",CSTAT=2:"?",CSTAT=3:"!",CSTAT=4:"-",CSTAT=7:"+",CSTAT=8:"*",1:" ")
"RTN","IBTRH1A",364,0)
 S DFN=$P(EVENT,"^",2),PNAME=""                 ; Patient IEN
"RTN","IBTRH1A",365,0)
 S ESTATUS=$P(EVENT,"^",4)                      ; Patient Status 'I' or 'O'
"RTN","IBTRH1A",366,0)
 S $P(LINE,"^",2)=ESTATUS
"RTN","IBTRH1A",367,0)
 S ADATE=$P($P(EVENT,"^",7),"-",1)              ; Internal Appt/Adm Date/Tm
"RTN","IBTRH1A",368,0)
 S $P(LINE,"^",3)=$$FMTE^XLFDT(ADATE,"2DZ")
"RTN","IBTRH1A",369,0)
 S ISTATUS=1
"RTN","IBTRH1A",370,0)
 I ESTATUS="O",+HCSRSORT=3 S ISTATUS=0          ; Appointment sort
"RTN","IBTRH1A",371,0)
 I ESTATUS="I",+HCSRSORT=4 S ISTATUS=0          ; Admissions sort
"RTN","IBTRH1A",372,0)
 S $P(LINE,"^",1)=$$PNAME(DFN,RFLG,.PNAME)      ; Set 'PAT NAME' column
"RTN","IBTRH1A",373,0)
 S $P(LINE,"^",4)=$$PATLOC(EVENT)               ; Ward or Clinic
"RTN","IBTRH1A",374,0)
 S IMIEN=$P(EVENT,"^",3),IENS=IMIEN_","_DFN_"," ; Insurance Multiple IEN
"RTN","IBTRH1A",375,0)
 S IIEN=$$GET1^DIQ(2.312,IENS,.01,"I")          ; Insurance Company IEN
"RTN","IBTRH1A",376,0)
 S IGROUP=$$GET1^DIQ(2.312,IENS,.18,"I")        ; Insurance Group IEN
"RTN","IBTRH1A",377,0)
 S:+IIEN INAME=$$GET1^DIQ(36,IIEN_",",.01)      ; Insurance Company Name
"RTN","IBTRH1A",378,0)
 S:INAME="" INAME="**DELETED**"
"RTN","IBTRH1A",379,0)
 S ICOB=$$GET1^DIQ(2.312,IENS,.2,"I")           ; Level of COB External Display
"RTN","IBTRH1A",380,0)
 S:ICOB="" ICOB=1
"RTN","IBTRH1A",381,0)
 S $P(LINE,"^",5)=$S(ICOB=1:"P",ICOB=2:"S",1:"T") ; Level of COB External Display
"RTN","IBTRH1A",382,0)
 S $P(LINE,"^",6)=$E(INAME,1,14)
"RTN","IBTRH1A",383,0)
 ;
"RTN","IBTRH1A",384,0)
 I +HCSRSORT=1 S HS1=ADATE,HS2=PNAME,HS3=ICOB       ; Oldest event first
"RTN","IBTRH1A",385,0)
 I +HCSRSORT=2 S HS1=ADATE*-1,HS2=PNAME,HS3=ICOB    ; Newest event first
"RTN","IBTRH1A",386,0)
 I +HCSRSORT=3 S HS1=ISTATUS,HS2=PNAME,HS3=ICOB     ; Appointments first
"RTN","IBTRH1A",387,0)
 I +HCSRSORT=4 S HS1=ISTATUS,HS2=PNAME,HS3=ICOB     ; Admissions sort
"RTN","IBTRH1A",388,0)
 I +HCSRSORT=5 D                                    ; Insurance name sort
"RTN","IBTRH1A",389,0)
 . S HS1=$$UP^XLFSTR(INAME),HS2=PNAME,HS3=ICOB
"RTN","IBTRH1A",390,0)
 S XX=$P($G(^IBA(355.3,+IGROUP,0)),"^",6)       ; Pre-Certification Req
"RTN","IBTRH1A",391,0)
 S PCREQ=$S(XX=1:"Y",XX=0:"N",1:"")
"RTN","IBTRH1A",392,0)
 S XX=$P($G(^IBA(355.3,+IGROUP,0)),"^",5)       ; Utilization Review Req 
"RTN","IBTRH1A",393,0)
 S URREQ=$S(XX=1:"Y",XX=0:"N",1:"")
"RTN","IBTRH1A",394,0)
 S $P(LINE,"^",7)=URREQ
"RTN","IBTRH1A",395,0)
 S $P(LINE,"^",8)=PCREQ
"RTN","IBTRH1A",396,0)
 S $P(LINE,"^",9)=$$GETSCR(DFN)                 ; Service Connected Reasons
"RTN","IBTRH1A",397,0)
 S ^TMP($J,"IBTRH1S",HS1,HS2,HS3,EIEN)=LINE
"RTN","IBTRH1A",398,0)
 Q
"RTN","IBTRH1A",399,0)
 ;
"RTN","IBTRH1A",400,0)
PNAME(DFN,RFLG,PNAME) ;EP
"RTN","IBTRH1A",401,0)
 ; Format the patient name column for display in the worklist
"RTN","IBTRH1A",402,0)
 ; Input:   DFN     - Internal IEN of the patient
"RTN","IBTRH1A",403,0)
 ;          RFLG    - Symbol to display in front of the name (if any)
"RTN","IBTRH1A",404,0)
 ; Output:  PNAME   - $P(^DPT(DFN,0),"^",1)
"RTN","IBTRH1A",405,0)
 ; Returns: Formatted patient name
"RTN","IBTRH1A",406,0)
 N PNM,SSN4
"RTN","IBTRH1A",407,0)
 Q:+DFN=0 ""
"RTN","IBTRH1A",408,0)
 S PNAME=$$GET1^DIQ(2,DFN_",",.01)              ; Patient Name
"RTN","IBTRH1A",409,0)
 S PNM=RFLG_PNAME,PNM=$E(PNM,1,18)
"RTN","IBTRH1A",410,0)
 S:$L(PNM)<18 PNM=PNM_$J("",18-$L(PNM))
"RTN","IBTRH1A",411,0)
 S SSN4=$E($$GET1^DIQ(2,DFN_",",.09),6,9)       ; Last 4 of SSN
"RTN","IBTRH1A",412,0)
 Q PNM_" "_SSN4
"RTN","IBTRH1A",413,0)
 ;
"RTN","IBTRH1A",414,0)
PATLOC(EVENT) ;EP
"RTN","IBTRH1A",415,0)
 ; Returns the Clinic or Ward associated with the event
"RTN","IBTRH1A",416,0)
 ; Input:   EVENT   - ^IBT(356.22,EIEN,0)
"RTN","IBTRH1A",417,0)
 ; Returns: Formatted Clinic or location name
"RTN","IBTRH1A",418,0)
 N ELOC
"RTN","IBTRH1A",419,0)
 S ELOC=$P(EVENT,"^",5)
"RTN","IBTRH1A",420,0)
 I ELOC'="" D                                   ; Ward Name 
"RTN","IBTRH1A",421,0)
 . S ELOC=$$GET1^DIQ(42,ELOC_",",.01)
"RTN","IBTRH1A",422,0)
 E  D                                           ; Clinic Name
"RTN","IBTRH1A",423,0)
 . S ELOC=$P(EVENT,"^",6)
"RTN","IBTRH1A",424,0)
 . S:ELOC'="" ELOC=$$GET1^DIQ(44,ELOC_",",.01)
"RTN","IBTRH1A",425,0)
 Q $E(ELOC,1,10)
"RTN","IBTRH1A",426,0)
 ;
"RTN","IBTRH1A",427,0)
GETSCR(DFN) ; Retrieves all of the services connected reasons to be displayed
"RTN","IBTRH1A",428,0)
 ; Input:   DFN     - Internal IEN of the patient of the event
"RTN","IBTRH1A",429,0)
 ; Returns: SCR     - String of Service Connected reasons to be displayed
"RTN","IBTRH1A",430,0)
 N DGNTARR,SCR,VAERR,VASV,XX
"RTN","IBTRH1A",431,0)
 S SCR=""
"RTN","IBTRH1A",432,0)
 ; DBIA #10061
"RTN","IBTRH1A",433,0)
 D SVC^VADPT I 'VAERR D
"RTN","IBTRH1A",434,0)
 .I VASV(2) S SCR="A"       ; Agent Orange Exposure
"RTN","IBTRH1A",435,0)
 .I VASV(3) S SCR=SCR_"I"   ; Ionizing Radiation
"RTN","IBTRH1A",436,0)
 .I VASV(1) S SCR=SCR_"S"   ; Southwest Asia
"RTN","IBTRH1A",437,0)
 .I VASV(5) S SCR=SCR_"C"   ; Combat Veteran
"RTN","IBTRH1A",438,0)
 .I $G(VASV(15)) S SCR=SCR_"L"  ; Camp Lejeune
"RTN","IBTRH1A",439,0)
 .Q
"RTN","IBTRH1A",440,0)
 S XX=$$GETCUR^DGNTAPI(DFN,"DGNTARR") ; Nose/Throat Radium, DBIA3457
"RTN","IBTRH1A",441,0)
 S XX=$S(XX>0:DGNTARR("INTRP"),1:"")
"RTN","IBTRH1A",442,0)
 I +XX S SCR=SCR_"N"
"RTN","IBTRH1A",443,0)
 S XX=$P($$GETSTAT^DGMSTAPI(DFN),"^",2) ; Military Sexual Trauma, DBIA2716
"RTN","IBTRH1A",444,0)
 I XX="Y" S SCR=SCR_"M"
"RTN","IBTRH1A",445,0)
 Q SCR
"RTN","IBTRH1B")
0^25^B30643582^n/a
"RTN","IBTRH1B",1,0)
IBTRH1B ;ALB/FA - HCSR Worklist ;11-SEP-2014
"RTN","IBTRH1B",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH1B",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH1B",4,0)
 ;;
"RTN","IBTRH1B",5,0)
 ;
"RTN","IBTRH1B",6,0)
 ; Contains Entry points and functions used in filtering/displaying the 
"RTN","IBTRH1B",7,0)
 ; HCSR Worklist
"RTN","IBTRH1B",8,0)
 ;
"RTN","IBTRH1B",9,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH1B",10,0)
 ;    DELAY     - Protocol Action that allows the user to select multiple
"RTN","IBTRH1B",11,0)
 ;                entries and remove them until a future date or until time
"RTN","IBTRH1B",12,0)
 ;                of discharge.
"RTN","IBTRH1B",13,0)
 ;    GETDDATE  - Returns the delay date for an entry being delayed
"RTN","IBTRH1B",14,0)
 ;    RESPWR    - Protocol Action that allows the user to view the Response
"RTN","IBTRH1B",15,0)
 ;                Worklist.
"RTN","IBTRH1B",16,0)
 ;    SHOWFILT  - Displays the currently selected filter selections for the
"RTN","IBTRH1B",17,0)
 ;                HCSR Worklist
"RTN","IBTRH1B",18,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH1B",19,0)
 ;
"RTN","IBTRH1B",20,0)
DELAY ;EP
"RTN","IBTRH1B",21,0)
 ; Protocol action to remove selected HCSR Worklist entry(s) until a
"RTN","IBTRH1B",22,0)
 ; selected date or until time of discharge
"RTN","IBTRH1B",23,0)
 ; Input:   ^TMP("IBTRH1",$J)   - Current Array of displayed entries
"RTN","IBTRH1B",24,0)
 ;          ^TMP($J,"IBTRHIX")  - Current Index of displayed entries
"RTN","IBTRH1B",25,0)
 ; Output:  Selected Entry is removed from the worklist 
"RTN","IBTRH1B",26,0)
 ;          Error messages display (potentially)
"RTN","IBTRH1B",27,0)
 ;          ^TMP("IBTRH1",$J)   - Updated Array of displayed entries
"RTN","IBTRH1B",28,0)
 ;          ^TMP($J,"IBTRHIX")  - Updated Index of displayed entries
"RTN","IBTRH1B",29,0)
 N DDATE,DIR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,EIEN,EIENS,ERROR,FIELD,IEN,IX,LINE,MSG
"RTN","IBTRH1B",30,0)
 N PROMPT,SDATA
"RTN","IBTRH1B",31,0)
 D VALMSGH^IBTRH1                               ; Set flag legend
"RTN","IBTRH1B",32,0)
 S VALMBCK="R",ERROR=0
"RTN","IBTRH1B",33,0)
 S MSG="Are you sure you want to delay "
"RTN","IBTRH1B",34,0)
 S PROMPT="Select the worklist entry(s) to be delayed"
"RTN","IBTRH1B",35,0)
 ; 
"RTN","IBTRH1B",36,0)
 ; First select the entry(s) to be delay review from the worklist
"RTN","IBTRH1B",37,0)
 S EIENS=$$SELEVENT^IBTRH1(1,PROMPT,.DLINE,1)   ; Select the entry to be delayed
"RTN","IBTRH1B",38,0)
 I EIENS="" S VALMBCK="R" Q
"RTN","IBTRH1B",39,0)
 S DDATE=$$GETDDATE(DLINE)                      ; Get the selected delay date
"RTN","IBTRH1B",40,0)
 Q:DDATE=""
"RTN","IBTRH1B",41,0)
 S MSG=MSG_$S(DLINE[",":"Entries ",1:"Entry ")_DLINE_" until "
"RTN","IBTRH1B",42,0)
 S MSG=MSG_$S(DDATE="D":"Discharge",1:$$FMTE^XLFDT(DDATE,"2Z"))
"RTN","IBTRH1B",43,0)
 Q:'$$ASKSURE^IBTRH1(DLINE,MSG,1)               ; Final warning
"RTN","IBTRH1B",44,0)
 F IX=1:1:$L(EIENS,",") D
"RTN","IBTRH1B",45,0)
 . S EIEN=$P(EIENS,",",IX)
"RTN","IBTRH1B",46,0)
 . S LINE=$P(DLINE,",",IX)
"RTN","IBTRH1B",47,0)
 . ;
"RTN","IBTRH1B",48,0)
 . ; Only allow delay of events for Inpatients
"RTN","IBTRH1B",49,0)
 . I $P(^IBT(356.22,EIEN,0),"^",4)="O" D  Q
"RTN","IBTRH1B",50,0)
 . . W !,*7,">>>> Entry ",LINE," is for an Outpatient and cannot be delayed"
"RTN","IBTRH1B",51,0)
 . . S ERROR=1
"RTN","IBTRH1B",52,0)
 . ;
"RTN","IBTRH1B",53,0)
 . ; Only allow delay of events with no current status
"RTN","IBTRH1B",54,0)
 . I +$P(^IBT(356.22,EIEN,0),"^",8)'=0 D  Q
"RTN","IBTRH1B",55,0)
 . . W !,*7,">>>> Entry ",LINE," is being worked and cannot be delayed"
"RTN","IBTRH1B",56,0)
 . . S ERROR=1
"RTN","IBTRH1B",57,0)
 . ;
"RTN","IBTRH1B",58,0)
 . ; Next set the delay date of the entry
"RTN","IBTRH1B",59,0)
 . I '$$LOCKEV^IBTRH1(EIEN) D  Q
"RTN","IBTRH1B",60,0)
 . . W !,*7,">>>> Someone else is editing entry ",LINE,". Try again later."
"RTN","IBTRH1B",61,0)
 . . S ERROR=1
"RTN","IBTRH1B",62,0)
 . ;
"RTN","IBTRH1B",63,0)
 . K SDATA
"RTN","IBTRH1B",64,0)
 . S IEN=EIEN_","
"RTN","IBTRH1B",65,0)
 . S SDATA(356.22,IEN,.08)="08"                 ; Change Status
"RTN","IBTRH1B",66,0)
 . S SDATA(356.22,IEN,.17)=DDATE                ; Set Status manual remove flag
"RTN","IBTRH1B",67,0)
 . D FILE^DIE("","SDATA")
"RTN","IBTRH1B",68,0)
 . D UNLOCKEV^IBTRH1(EIEN)
"RTN","IBTRH1B",69,0)
 . ;
"RTN","IBTRH1B",70,0)
 . ; Finally, flag the entry for next review
"RTN","IBTRH1B",71,0)
 . S FIELD="*"_$E($G(^TMP("IBTRH1",$J,LINE,0)),7,23)
"RTN","IBTRH1B",72,0)
 . D FLDTEXT^VALM10(LINE,"PAT NAME",FIELD)      ; Update flag display
"RTN","IBTRH1B",73,0)
 . D WRITE^VALM10(LINE)                         ; Redisplay line
"RTN","IBTRH1B",74,0)
 K DIR
"RTN","IBTRH1B",75,0)
 D:ERROR PAUSE^VALM1
"RTN","IBTRH1B",76,0)
 Q
"RTN","IBTRH1B",77,0)
 ;
"RTN","IBTRH1B",78,0)
GETDDATE(DLINE) ;EP
"RTN","IBTRH1B",79,0)
 ; Allows the user to select a delay date which is used to remove
"RTN","IBTRH1B",80,0)
 ; entries from the HCSR Worklist until the delay date has been met
"RTN","IBTRH1B",81,0)
 ; Input:   DLINE   - Comma delimited list of entries to be delayed
"RTN","IBTRH1B",82,0)
 ; Returns: DDATE   - 'D' to delay until admission has been discharged
"RTN","IBTRH1B",83,0)
 ;                    Fileman internal date of when the entry will re-appear
"RTN","IBTRH1B",84,0)
 ;                    null, if nothing selected
"RTN","IBTRH1B",85,0)
 N CODE,DIR,DIROUT,DIRUT,DTOUT,DUOUT,NOW,PROMPT,X,XX,Y
"RTN","IBTRH1B",86,0)
 S PROMPT="Enter 'D' or Future Date for "
"RTN","IBTRH1B",87,0)
 S XX=$S(DLINE[",":"Entries ",1:"Entry ")
"RTN","IBTRH1B",88,0)
 S NOW=$$DT^XLFDT()
"RTN","IBTRH1B",89,0)
 S CODE="I ((X'=""D"")&(X'=""d"")),X'="""" S XX=X,NOW=$$DT^XLFDT,X=XX D ^%DT K:Y'>NOW X"
"RTN","IBTRH1B",90,0)
 S DIR(0)="FO^^"_CODE
"RTN","IBTRH1B",91,0)
 S DIR("A")=PROMPT_XX_DLINE
"RTN","IBTRH1B",92,0)
 S DIR("?",1)="Entry a future date or 'D' to delay until discharge.  A 'D' will remove the"
"RTN","IBTRH1B",93,0)
 S DIR("?",2)="selected entries from the worklist until the patients have been discharged."
"RTN","IBTRH1B",94,0)
 S DIR("?",3)="Entering a Date will remove the selected entries from the worklist until the"
"RTN","IBTRH1B",95,0)
 S DIR("?")="selected date."
"RTN","IBTRH1B",96,0)
 D ^DIR K DIR
"RTN","IBTRH1B",97,0)
 Q:$G(DIRUT) ""
"RTN","IBTRH1B",98,0)
 Q $$UP^XLFSTR(Y)
"RTN","IBTRH1B",99,0)
 ;
"RTN","IBTRH1B",100,0)
RESPWR ;EP
"RTN","IBTRH1B",101,0)
 ; Protocol action to display the Response Worklist to show all Entries with
"RTN","IBTRH1B",102,0)
 ; completed responses.
"RTN","IBTRH1B",103,0)
 ; Input:   IBFILTS - Array of filter options currently set on the
"RTN","IBTRH1B",104,0)
 ;                    HCSR Worklist
"RTN","IBTRH1B",105,0)
 ; Output:  Response Worklist is shown with the current filter settings
"RTN","IBTRH1B",106,0)
 N IBFILTSR
"RTN","IBTRH1B",107,0)
 M IBFILTSR=IBFILTS
"RTN","IBTRH1B",108,0)
 D EN^IBTRH5(.IBFILTSR)
"RTN","IBTRH1B",109,0)
 Q
"RTN","IBTRH1B",110,0)
 ;
"RTN","IBTRH1B",111,0)
SHOWFILT(FILTERS)   ;EP
"RTN","IBTRH1B",112,0)
 ; Displays the currently selected filter selections for the
"RTN","IBTRH1B",113,0)
 ; HCSR Worklist
"RTN","IBTRH1B",114,0)
 ; Input:   FILTERS()   - Array of filter settings. See FILTERS for a detailed
"RTN","IBTRH1B",115,0)
 ;                        explanation of the FILTERS array
"RTN","IBTRH1B",116,0)
 ; Output:  Current Filter settings are displayed
"RTN","IBTRH1B",117,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,IEN,IX,LEN,XX
"RTN","IBTRH1B",118,0)
 W !!,"Show ChampVA/Tricare entries, CPAC entries or Both: "
"RTN","IBTRH1B",119,0)
 W $S($P(FILTERS(0),"^",2)=0:"C",FILTERS(0)=1:"T",1:"B")
"RTN","IBTRH1B",120,0)
 W !,"Show Inpatient entries, Outpatient entries or Both: "
"RTN","IBTRH1B",121,0)
 W $S($P(FILTERS(0),"^",1)=0:"O",$P(FILTERS(0),"^",1)=1:"I",1:"B")
"RTN","IBTRH1B",122,0)
 W !,"Show All Divisions or Selected Divisions: "
"RTN","IBTRH1B",123,0)
 W $S($P(FILTERS(0),"^",3)=0:"All",1:"Selected")
"RTN","IBTRH1B",124,0)
 ;
"RTN","IBTRH1B",125,0)
 ; Division list (if any)
"RTN","IBTRH1B",126,0)
 I ($P(FILTERS(0),"^",3)=1) D
"RTN","IBTRH1B",127,0)
 . W !,"Divisions to Display: "
"RTN","IBTRH1B",128,0)
 . S LEN=20
"RTN","IBTRH1B",129,0)
 . F IX=1:1:$L(FILTERS(3),"^") D
"RTN","IBTRH1B",130,0)
 . . S IEN=$P(FILTERS(3),"^",IX),XX=$$GET1^DIQ(40.8,IEN_",",.01)
"RTN","IBTRH1B",131,0)
 . . S LEN=LEN+$L(XX)
"RTN","IBTRH1B",132,0)
 . . I LEN+2<80 D  Q
"RTN","IBTRH1B",133,0)
 . . . W XX
"RTN","IBTRH1B",134,0)
 . . . I $P(FILTERS(3),"^",IX+1)'="" D
"RTN","IBTRH1B",135,0)
 . . . . S LEN=LEN+2
"RTN","IBTRH1B",136,0)
 . . . . W ", "
"RTN","IBTRH1B",137,0)
 . . S LEN=20
"RTN","IBTRH1B",138,0)
 . . W !,"                    ",XX
"RTN","IBTRH1B",139,0)
 ;
"RTN","IBTRH1B",140,0)
 ; Clinic Inclusion list (if any)
"RTN","IBTRH1B",141,0)
 I ($P(FILTERS(0),"^",1)=0)!($P(FILTERS(0),"^",1)=2) D
"RTN","IBTRH1B",142,0)
 . W !,"Clinics to Display: "
"RTN","IBTRH1B",143,0)
 . I $G(FILTERS(1))="" W "ALL" Q
"RTN","IBTRH1B",144,0)
 . S LEN=20
"RTN","IBTRH1B",145,0)
 . F IX=1:1:$L(FILTERS(1),"^") D
"RTN","IBTRH1B",146,0)
 . . S IEN=$P(FILTERS(1),"^",IX),XX=$$GET1^DIQ(44,IEN_",",.01)
"RTN","IBTRH1B",147,0)
 . . S LEN=LEN+$L(XX)
"RTN","IBTRH1B",148,0)
 . . I LEN+2<80 D  Q
"RTN","IBTRH1B",149,0)
 . . . W XX
"RTN","IBTRH1B",150,0)
 . . . I $P(FILTERS(1),"^",IX+1)'="" D
"RTN","IBTRH1B",151,0)
 . . . . S LEN=LEN+2
"RTN","IBTRH1B",152,0)
 . . . . W ", "
"RTN","IBTRH1B",153,0)
 . . S LEN=20
"RTN","IBTRH1B",154,0)
 . . W !,"                    ",XX
"RTN","IBTRH1B",155,0)
 ;
"RTN","IBTRH1B",156,0)
 ; Ward Inclusion list (if any)
"RTN","IBTRH1B",157,0)
 I $P(FILTERS(0),"^",1)>0 D
"RTN","IBTRH1B",158,0)
 . W !,"Wards to Display:   "
"RTN","IBTRH1B",159,0)
 . I $G(FILTERS(2))="" W "ALL" Q
"RTN","IBTRH1B",160,0)
 . S LEN=20
"RTN","IBTRH1B",161,0)
 . F IX=1:1:$L(FILTERS(2),"^") D
"RTN","IBTRH1B",162,0)
 . . S IEN=$P(FILTERS(2),"^",IX),XX=$$GET1^DIQ(42,IEN_",",.01)
"RTN","IBTRH1B",163,0)
 . . S LEN=LEN+$L(XX)
"RTN","IBTRH1B",164,0)
 . . I LEN+2<80 D  Q
"RTN","IBTRH1B",165,0)
 . . . W XX
"RTN","IBTRH1B",166,0)
 . . . W:$P(FILTERS(2),"^",IX+1)'="" ", "
"RTN","IBTRH1B",167,0)
 . . W !,"                    ",XX
"RTN","IBTRH1B",168,0)
 K DIR
"RTN","IBTRH1B",169,0)
 D PAUSE^VALM1
"RTN","IBTRH1B",170,0)
 Q
"RTN","IBTRH1B",171,0)
 ;
"RTN","IBTRH2")
0^9^B142856464^n/a
"RTN","IBTRH2",1,0)
IBTRH2 ;ALB/YMG - HCSR worklist expand entry ;18-JUN-2014
"RTN","IBTRH2",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH2",4,0)
 ;
"RTN","IBTRH2",5,0)
 Q
"RTN","IBTRH2",6,0)
 ;
"RTN","IBTRH2",7,0)
EN ; main entry point for IBT HCSR ENTRY
"RTN","IBTRH2",8,0)
 N DFN,DLINE,EVENTDT,IEN312,IEN36,INSNODE0,NODE0,IBTRNM,IBTRENT
"RTN","IBTRH2",9,0)
 S VALMBCK="R"
"RTN","IBTRH2",10,0)
 S IBTRNM="IBTRH2",IBTRENT=0
"RTN","IBTRH2",11,0)
 S IBTRIEN=+$$SELEVENT^IBTRH1(0,"Select entry",.DLINE) ; select entry to expand
"RTN","IBTRH2",12,0)
 I IBTRIEN'>0 Q
"RTN","IBTRH2",13,0)
 ; try to lock the entry
"RTN","IBTRH2",14,0)
 I '$$LOCKEV^IBTRH1(IBTRIEN) D LOCKERR^IBTRH2A S VALMSG="?Await #In-Prog -RespErr !Unable +Pend *NextRev" D MSG^VALM10(VALMSG) Q
"RTN","IBTRH2",15,0)
 D EN^VALM("IBT HCSR ENTRY")
"RTN","IBTRH2",16,0)
 ; unlock entry
"RTN","IBTRH2",17,0)
 D UNLOCKEV^IBTRH1(IBTRIEN)
"RTN","IBTRH2",18,0)
 Q
"RTN","IBTRH2",19,0)
 ;
"RTN","IBTRH2",20,0)
EN2(IBTRNM,IBTRIEN) ; Secondary entry point.
"RTN","IBTRH2",21,0)
 ; IBTRNM is the calling routine name.
"RTN","IBTRH2",22,0)
 ; IBTRIEN is the internal id for ^IBT(356.22)
"RTN","IBTRH2",23,0)
 I $G(IBTRNM)="" S VALMQUIT="" Q
"RTN","IBTRH2",24,0)
 I '$G(IBTRIEN) S VALMQUIT="" Q
"RTN","IBTRH2",25,0)
 N DFN,EVENTDT,IEN312,INSNODE0,NODE0
"RTN","IBTRH2",26,0)
 D INIT
"RTN","IBTRH2",27,0)
 Q
"RTN","IBTRH2",28,0)
 ;
"RTN","IBTRH2",29,0)
HDR ; header code
"RTN","IBTRH2",30,0)
 N VADM,VA,VAERR,Z
"RTN","IBTRH2",31,0)
 S Z=""
"RTN","IBTRH2",32,0)
 I +$G(DFN) D DEM^VADPT S Z=$E(VADM(1),1,28),Z=Z_$J("",35-$L(Z))_$P(VADM(2),U,2)_"    DOB: "_$P(VADM(3),U,2)_"    AGE: "_VADM(4)
"RTN","IBTRH2",33,0)
 S VALMHDR(1)=Z
"RTN","IBTRH2",34,0)
 Q
"RTN","IBTRH2",35,0)
 ;
"RTN","IBTRH2",36,0)
INIT ; init variables and list array
"RTN","IBTRH2",37,0)
 K ^TMP(IBTRNM,$J)
"RTN","IBTRH2",38,0)
 I '$G(IBTRIEN) S VALMQUIT="" Q
"RTN","IBTRH2",39,0)
 S NODE0=$G(^IBT(356.22,IBTRIEN,0))
"RTN","IBTRH2",40,0)
 S DFN=+$P(NODE0,U,2)
"RTN","IBTRH2",41,0)
 S IEN312=+$P(NODE0,U,3)
"RTN","IBTRH2",42,0)
 S INSNODE0="" S:IEN312>0 INSNODE0=$G(^DPT(DFN,.312,IEN312,0)) ; 0-node in file 2.312
"RTN","IBTRH2",43,0)
 S IEN36=+$P(INSNODE0,U)
"RTN","IBTRH2",44,0)
 S EVENTDT=$P(NODE0,U,7)
"RTN","IBTRH2",45,0)
 D BLD
"RTN","IBTRH2",46,0)
 Q
"RTN","IBTRH2",47,0)
 ;
"RTN","IBTRH2",48,0)
HELP ; help code
"RTN","IBTRH2",49,0)
 D FULL^VALM1
"RTN","IBTRH2",50,0)
 W !!,"This screen displays an expanded view of a Healthcare Services Review Worklist entry."
"RTN","IBTRH2",51,0)
 W !!,"The actions allow editing of data and transmission of HCSR inquiry."
"RTN","IBTRH2",52,0)
 D PAUSE^VALM1 S VALMBCK="R"
"RTN","IBTRH2",53,0)
 Q
"RTN","IBTRH2",54,0)
 ;
"RTN","IBTRH2",55,0)
EXIT ; exit code
"RTN","IBTRH2",56,0)
 K ^TMP(IBTRNM,$J)
"RTN","IBTRH2",57,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBTRH2",58,0)
 Q
"RTN","IBTRH2",59,0)
 ;
"RTN","IBTRH2",60,0)
BLD ; build screen array
"RTN","IBTRH2",61,0)
 N AAADATA,ADDR,CMTDATA,DATA36,DATA3553,IBL,IBLINE,IBY,IEN3553,IENS,PNDDATA,RESPONSE,STATUS,TMPARY,Z,Z0,Z1,Z2
"RTN","IBTRH2",62,0)
 S IEN3553=+$P(INSNODE0,U,18),STATUS=$$STATUS(IBTRIEN),RESPONSE=+$P($G(^IBT(356.22,IBTRIEN,0)),U,14)
"RTN","IBTRH2",63,0)
 I $P($G(^IBT(356.22,IBTRIEN,0)),U,20)=2 S RESPONSE=IBTRIEN
"RTN","IBTRH2",64,0)
 S VALMCNT=0
"RTN","IBTRH2",65,0)
 ;
"RTN","IBTRH2",66,0)
 S IENS=IEN36_","
"RTN","IBTRH2",67,0)
 D GETS^DIQ(36,IENS,".01;1;.131:.133","EI","DATA36")
"RTN","IBTRH2",68,0)
 D SET(" ") S IBY=$J("",26)_"Insurance Company Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBTRH2",69,0)
 S IBL="Name: ",IBY=$G(DATA36(36,IENS,.01,"E")),IBLINE=$$SETL("",IBY,IBL,10,30)
"RTN","IBTRH2",70,0)
 S IBL="Reimburse?: ",IBY=$G(DATA36(36,IENS,1,"E")),IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBTRH2",71,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",72,0)
 S IBL="Phone: ",IBY=$G(DATA36(36,IENS,.131,"E")),IBLINE=$$SETL(IBLINE,IBY,IBL,10,20)
"RTN","IBTRH2",73,0)
 S IBL="Billing Phone: ",IBY=$G(DATA36(36,IENS,.132,"E")),IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBTRH2",74,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",75,0)
 S IBL="Precert Phone: ",IBY=$G(DATA36(36,IENS,.133,"E")),IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBTRH2",76,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",77,0)
 D ADDR^IBTRH2A(36,IEN36,.111,.112,.113,.114,.115,.116,.ADDR)
"RTN","IBTRH2",78,0)
 S IBL="Address: ",IBY=ADDR(1),IBLINE=$$SETL(IBLINE,IBY,IBL,10,69)
"RTN","IBTRH2",79,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",80,0)
 F Z=2:1:9 S IBL="",IBY=$G(ADDR(Z)) Q:IBY=""  S IBLINE=$$SETL(IBLINE,IBY,IBL,10,69) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",81,0)
 ;
"RTN","IBTRH2",82,0)
 S IENS=IEN3553_","
"RTN","IBTRH2",83,0)
 D GETS^DIQ(355.3,IENS,".02:.09;.12;6.02;6.03;11",,"DATA3553")
"RTN","IBTRH2",84,0)
 D SET(" ") S IBY=$J("",29)_"Group/Plan Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBTRH2",85,0)
 S IBL="Type Of Plan: ",IBY=$G(DATA3553(355.3,IENS,.09)),IBLINE=$$SETL("",IBY,IBL,16,40)
"RTN","IBTRH2",86,0)
 S IBL="Require UR: ",IBY=$G(DATA3553(355.3,IENS,.05)),IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBTRH2",87,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",88,0)
 S IBL="Group?: ",IBY=$G(DATA3553(355.3,IENS,.02)),IBLINE=$$SETL("",IBY,IBL,16,3)
"RTN","IBTRH2",89,0)
 S IBL="Require Amb Cert: ",IBY=$G(DATA3553(355.3,IENS,.12)),IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBTRH2",90,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",91,0)
 S IBL="Group Name: ",IBY=$G(DATA3553(355.3,IENS,.03)),IBLINE=$$SETL("",IBY,IBL,16,20)
"RTN","IBTRH2",92,0)
 S IBL="Require Pre-Cert: ",IBY=$G(DATA3553(355.3,IENS,.06)),IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBTRH2",93,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",94,0)
 S IBL="Group Number: ",IBY=$G(DATA3553(355.3,IENS,.04)),IBLINE=$$SETL("",IBY,IBL,16,17)
"RTN","IBTRH2",95,0)
 S IBL="Exclude Pre-Cond: ",IBY=$G(DATA3553(355.3,IENS,.07)),IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBTRH2",96,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",97,0)
 S IBL="BIN: ",IBY=$G(DATA3553(355.3,IENS,6.02)),IBLINE=$$SETL("",IBY,IBL,16,10)
"RTN","IBTRH2",98,0)
 S IBL="Benefits Assignable: ",IBY=$G(DATA3553(355.3,IENS,.08)),IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBTRH2",99,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",100,0)
 S IBL="PCN: ",IBY=$G(DATA3553(355.3,IENS,6.03)),IBLINE=$$SETL("",IBY,IBL,16,20)
"RTN","IBTRH2",101,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",102,0)
 D SET(" ")
"RTN","IBTRH2",103,0)
 S IBL="Plan Comments: ",IBY="",IBLINE=$$SETL("",IBY,IBL,10,69)
"RTN","IBTRH2",104,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",105,0)
 S IBL="",Z0=0 F  S Z0=$O(DATA3553(355.3,IENS,11,Z0)) Q:'Z0  D
"RTN","IBTRH2",106,0)
 .S IBY=$G(DATA3553(355.3,IENS,11,Z0)),IBLINE=$$SETL("",IBY,IBL,10,69) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",107,0)
 .Q
"RTN","IBTRH2",108,0)
 D SET(" ") S IBY=$J("",26)_"Policy/Subscriber Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBTRH2",109,0)
 S IBL="Insured's Name: ",IBY=$P(INSNODE0,U,17),IBLINE=$$SETL("",IBY,IBL,18,30)
"RTN","IBTRH2",110,0)
 S IBL="Effective: ",IBY=$$FMTE^XLFDT($P(INSNODE0,U,8),5),IBLINE=$$SETL(IBLINE,IBY,IBL,62,10)
"RTN","IBTRH2",111,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",112,0)
 S IBL="Subscriber Id: ",IBY=$P(INSNODE0,U,2),IBLINE=$$SETL("",IBY,IBL,18,20)
"RTN","IBTRH2",113,0)
 S IBL="Expiration: ",IBY=$$FMTE^XLFDT($P(INSNODE0,U,4),5),IBLINE=$$SETL(IBLINE,IBY,IBL,62,13)
"RTN","IBTRH2",114,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",115,0)
 S IBL="Relationship: ",IBY=$$EXPAND^IBTRE(2.312,4.03,$P($G(^DPT(DFN,.312,IEN312,4)),U,3)),IBLINE=$$SETL("",IBY,IBL,18,16)
"RTN","IBTRH2",116,0)
 S IBL="Coord of Benefits: ",IBY=$$EXPAND^IBTRE(2.312,.2,$P(INSNODE0,U,20)),IBLINE=$$SETL(IBLINE,IBY,IBL,62,16)
"RTN","IBTRH2",117,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",118,0)
 S IBL="Insured's DOB: ",IBY=$$FMTE^XLFDT($P($G(^DPT(DFN,.312,IEN312,3)),U),5),IBLINE=$$SETL("",IBY,IBL,18,10)
"RTN","IBTRH2",119,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",120,0)
 S IBL="Employer Sponsored Group Health Plan?: ",IBY=$$EXPAND^IBTRE(2.312,2.1,$P($G(^DPT(DFN,.312,IEN312,2)),U))
"RTN","IBTRH2",121,0)
 S IBLINE=$$SETL("",IBY,IBL,40,3)
"RTN","IBTRH2",122,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",123,0)
 D SET(" ") S IBY=$J("",23)_"User Added Comments for This Entry" D SET(IBY,"B") S IBLINE=""
"RTN","IBTRH2",124,0)
 S IENS=IBTRIEN_"," D GETS^DIQ(356.22,IENS,"1*","IE","CMTDATA")
"RTN","IBTRH2",125,0)
 S Z0="" F  S Z0=$O(CMTDATA(356.221,Z0)) Q:Z0=""  D
"RTN","IBTRH2",126,0)
 .I $G(CMTDATA(356.221,Z0,.01,"I"))="" Q
"RTN","IBTRH2",127,0)
 .S IBL="User's Name: ",IBY=$G(CMTDATA(356.221,Z0,.02,"E")),IBLINE=$$SETL("",IBY,IBL,10,30)
"RTN","IBTRH2",128,0)
 .S IBL="Date Comment Entered: ",IBY=$$FMTE^XLFDT(CMTDATA(356.221,Z0,.01,"I"),5),IBLINE=$$SETL(IBLINE,IBY,IBL,60,19)
"RTN","IBTRH2",129,0)
 .D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",130,0)
 .S IBL="Comment: ",IBY="",IBLINE=$$SETL("",IBY,IBL,10,69) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",131,0)
 .K TMPARY D FSTRNG^IBJU1($$WP2STR^IBTRHLO2(356.221,.03,Z0),75,.TMPARY)
"RTN","IBTRH2",132,0)
 .S IBL="  " F Z1=1:1:TMPARY S IBY=TMPARY(Z1),IBLINE=$$SETL("",IBY,IBL,1,75) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",133,0)
 .D SET(" ")
"RTN","IBTRH2",134,0)
 .Q
"RTN","IBTRH2",135,0)
 ; STATUS = "03" - unable to send, STATUS = "04" - negative response received
"RTN","IBTRH2",136,0)
 I STATUS="03"!(STATUS="04") D
"RTN","IBTRH2",137,0)
 .I STATUS="04",RESPONSE'>0 Q  ; no response pointer
"RTN","IBTRH2",138,0)
 .S IENS=$S(STATUS="04":RESPONSE,1:IBTRIEN)_","
"RTN","IBTRH2",139,0)
 .D SET(" ")
"RTN","IBTRH2",140,0)
 .S IBY=$S(STATUS="03":$J("",16)_"Unable to send request for the following reasons",1:$J("",26)_"278 response error condition")
"RTN","IBTRH2",141,0)
 .D SET(IBY,"B") S IBLINE=""
"RTN","IBTRH2",142,0)
 .D GETS^DIQ(356.22,IENS,"101*","IE","AAADATA")
"RTN","IBTRH2",143,0)
 .S Z0="" F  S Z0=$O(AAADATA(356.22101,Z0)) Q:Z0=""  D
"RTN","IBTRH2",144,0)
 ..I STATUS="04" D
"RTN","IBTRH2",145,0)
 ...S Z1=+$G(AAADATA(356.22101,Z0,.02,"I")) I Z1>0 D
"RTN","IBTRH2",146,0)
 ....S IBL="Error Source: ",IBY=$P($G(^IBE(365.027,Z1,0)),U,2)_" (Loop "_$G(AAADATA(356.22101,Z0,.02,"E"))_")"
"RTN","IBTRH2",147,0)
 ....S IBLINE=$$SETL("",IBY,IBL,10,69) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",148,0)
 ...S IBL="Reject Reason Code: ",IBY=$G(AAADATA(356.22101,Z0,.04,"E"))
"RTN","IBTRH2",149,0)
 ...I IBY'="" S IBLINE=$$SETL("",IBY,IBL,20,59) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",150,0)
 ...S Z1=+$G(AAADATA(356.22101,Z0,.04,"I"))
"RTN","IBTRH2",151,0)
 ...I Z1>0 S IBL="Reject Reason Text: ",IBY=$P($G(^IBE(365.017,Z1,0)),U,2),IBLINE=$$SETL("",IBY,IBL,20,59) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",152,0)
 ...S IBL="Action Code: ",IBY=$G(AAADATA(356.22101,Z0,.05,"E"))
"RTN","IBTRH2",153,0)
 ...I IBY'="" S IBLINE=$$SETL("",IBY,IBL,20,59) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",154,0)
 ...S Z1=+$G(AAADATA(356.22101,Z0,.05,"I"))
"RTN","IBTRH2",155,0)
 ...I Z1>0 S IBL="Action Text: ",IBY=$P($G(^IBE(365.018,Z1,0)),U,2),IBLINE=$$SETL("",IBY,IBL,20,59) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",156,0)
 ...Q
"RTN","IBTRH2",157,0)
 ..S Z1=$G(AAADATA(356.22101,Z0,1,"E")) I Z1'="" D
"RTN","IBTRH2",158,0)
 ...;D SET(" ")
"RTN","IBTRH2",159,0)
 ...S IBL=$S(STATUS="04":"Error message:",1:""),IBY="",IBLINE=$$SETL("",IBY,IBL,10,69) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",160,0)
 ...K TMPARY D FSTRNG^IBJU1(Z1,75,.TMPARY)
"RTN","IBTRH2",161,0)
 ...S IBL="" F Z2=1:1:TMPARY S IBY=TMPARY(Z2),IBLINE=$$SETL("",IBY,IBL,1,79) D SET(IBLINE)
"RTN","IBTRH2",162,0)
 ...Q
"RTN","IBTRH2",163,0)
 ..D SET(" ")
"RTN","IBTRH2",164,0)
 ..Q
"RTN","IBTRH2",165,0)
 .Q
"RTN","IBTRH2",166,0)
 ; "Pending" response received
"RTN","IBTRH2",167,0)
 I RESPONSE>0 D
"RTN","IBTRH2",168,0)
 .S IENS=RESPONSE_","
"RTN","IBTRH2",169,0)
 .D GETS^DIQ(356.22,IENS,"11*;12;17.02;103.01;103.03","IE","PNDDATA")
"RTN","IBTRH2",170,0)
 .I $G(PNDDATA(356.22,IENS,103.01,"E"))'="A4" Q  ; only display this section if Certification Action Code = A4
"RTN","IBTRH2",171,0)
 .D SET(" ")  S IBY=$J("",23)_"278 Response with 'Pending' status" D SET(IBY,"B") S IBLINE=""
"RTN","IBTRH2",172,0)
 .D SET(" ")
"RTN","IBTRH2",173,0)
 .S IBL="Admin Reference #: ",IBY=$G(PNDDATA(356.22,IENS,17.02,"E")),IBLINE=$$SETL("",IBY,IBL,10,69)
"RTN","IBTRH2",174,0)
 .D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",175,0)
 .S IBL="Review Decision Reason Code: ",IBY=$G(PNDDATA(356.22,IENS,103.03,"E")),IBLINE=$$SETL("",IBY,IBL,10,69)
"RTN","IBTRH2",176,0)
 .D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",177,0)
 .S IBL="Review Decision Reason Text: ",IBY=$P($G(^IBT(356.021,+$G(PNDDATA(356.22,IENS,103.03,"I")),0)),U,2)
"RTN","IBTRH2",178,0)
 .S IBLINE=$$SETL("",IBY,IBL,10,69)
"RTN","IBTRH2",179,0)
 .D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",180,0)
 .I $D(PNDDATA(356.22,IENS,12)) D
"RTN","IBTRH2",181,0)
 ..S IBL="Message: ",IBY="",IBLINE=$$SETL("",IBY,IBL,1,79)
"RTN","IBTRH2",182,0)
 ..D SET(IBLINE) S IBLINE="",IBL=""
"RTN","IBTRH2",183,0)
 ..S Z0=0 F  S Z0=$O(PNDDATA(356.22,IENS,12,Z0)) Q:Z0'=+Z0  D
"RTN","IBTRH2",184,0)
 ...S Z1=$G(PNDDATA(356.22,IENS,12,Z0))
"RTN","IBTRH2",185,0)
 ...K TMPARY D FSTRNG^IBJU1(Z1,75,.TMPARY)
"RTN","IBTRH2",186,0)
 ...S IBL="" F Z2=1:1:TMPARY S IBY=TMPARY(Z2),IBLINE=$$SETL("",IBY,IBL,1,79) D SET(IBLINE)
"RTN","IBTRH2",187,0)
 ...S IBLINE=""
"RTN","IBTRH2",188,0)
 ...Q
"RTN","IBTRH2",189,0)
 ..Q
"RTN","IBTRH2",190,0)
 .I $D(PNDDATA(356.2211)) D
"RTN","IBTRH2",191,0)
 ..D SET(" ")
"RTN","IBTRH2",192,0)
 ..S IBL="Reports: ",IBY="",IBLINE=$$SETL("",IBY,IBL,40,9)
"RTN","IBTRH2",193,0)
 ..D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",194,0)
 ..D SET(" ")
"RTN","IBTRH2",195,0)
 ..S Z="" F  S Z=$O(PNDDATA(356.2211,Z)) Q:Z=""  D
"RTN","IBTRH2",196,0)
 ...S IBL="Attachment Report Type Code: ",IBY=$P($G(^IBT(356.018,+$G(PNDDATA(356.2211,Z,.01,"I")),0)),U)
"RTN","IBTRH2",197,0)
 ...S IBLINE=$$SETL("",IBY,IBL,1,79) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",198,0)
 ...S IBL="Attachment Report Type Text: ",IBY=$G(PNDDATA(356.2211,Z,.01,"E"))
"RTN","IBTRH2",199,0)
 ...S IBLINE=$$SETL("",IBY,IBL,1,79) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",200,0)
 ...S IBL="Report Transmission Code: ",IBY=$G(PNDDATA(356.2211,Z,.02,"I"))
"RTN","IBTRH2",201,0)
 ...S IBLINE=$$SETL("",IBY,IBL,1,79) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",202,0)
 ...S IBL="Report Transmission Text: ",IBY=$G(PNDDATA(356.2211,Z,.02,"E"))
"RTN","IBTRH2",203,0)
 ...S IBLINE=$$SETL("",IBY,IBL,1,79) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",204,0)
 ...S IBL="Report Control #: ",IBY=$G(PNDDATA(356.2211,Z,.03,"E"))
"RTN","IBTRH2",205,0)
 ...S IBLINE=$$SETL("",IBY,IBL,1,79) D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",206,0)
 ...S IBL="Attachment Description: ",IBY="",IBLINE=$$SETL("",IBY,IBL,1,79)
"RTN","IBTRH2",207,0)
 ...D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",208,0)
 ...S IBL="",IBY=$G(PNDDATA(356.2211,Z,.04,"E")),IBLINE=$$SETL("",IBY,IBL,1,79)
"RTN","IBTRH2",209,0)
 ...D SET(IBLINE) S IBLINE=""
"RTN","IBTRH2",210,0)
 ...D SET(" ")
"RTN","IBTRH2",211,0)
 ...Q
"RTN","IBTRH2",212,0)
 ..Q
"RTN","IBTRH2",213,0)
 .Q
"RTN","IBTRH2",214,0)
 S Z=+$O(^TMP(IBTRNM,$J,""),-1) I Z,$G(^TMP(IBTRNM,$J,Z,0))=" " K ^TMP(IBTRNM,$J,Z) S VALMCNT=VALMCNT-1
"RTN","IBTRH2",215,0)
 Q
"RTN","IBTRH2",216,0)
 ;
"RTN","IBTRH2",217,0)
SETL(LINE,DATA,LABEL,COL,LNG) ;
"RTN","IBTRH2",218,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBTRH2",219,0)
 Q LINE
"RTN","IBTRH2",220,0)
 ;
"RTN","IBTRH2",221,0)
SET(LINE,SPEC) ;
"RTN","IBTRH2",222,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRH2",223,0)
 S ^TMP(IBTRNM,$J,VALMCNT,0)=LINE
"RTN","IBTRH2",224,0)
 I $G(SPEC)="B" D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM)
"RTN","IBTRH2",225,0)
 Q
"RTN","IBTRH2",226,0)
 ;
"RTN","IBTRH2",227,0)
ADDCMT(FROMWL) ; add entry comment
"RTN","IBTRH2",228,0)
 ; called from action protocol IBT HCSR ADD COMMENT
"RTN","IBTRH2",229,0)
 ; Input:   FROMWL  - Optional, only sent when adding a comment to entry
"RTN","IBTRH2",230,0)
 ;                    directly from the main worklist.
"RTN","IBTRH2",231,0)
 ;                    Defaults to 0
"RTN","IBTRH2",232,0)
 N CMTIEN,DA,DD,DIC,DIE,DIK,DINUM,DLAYGO,DO,DR,DTOUT,DUOUT,DIRUT,X,Y
"RTN","IBTRH2",233,0)
 S:'$D(FROMWL) FROMWL=0
"RTN","IBTRH2",234,0)
 S VALMBCK="R"
"RTN","IBTRH2",235,0)
 ; create new entry in the comments multiple (356.221)
"RTN","IBTRH2",236,0)
 S DA(1)=IBTRIEN,DLAYGO=356.221,DIC(0)="L",DIC="^IBT(356.22,"_DA(1)_",1,",X=$$NOW^XLFDT()
"RTN","IBTRH2",237,0)
 D FILE^DICN K DD,DO S (CMTIEN,DA)=+Y I DA<1 Q
"RTN","IBTRH2",238,0)
 ; prompt for the comment
"RTN","IBTRH2",239,0)
 S DIE="^IBT(356.22,"_DA(1)_",1,",DR=".02////"_DUZ_";.03" D ^DIE
"RTN","IBTRH2",240,0)
 ; if no comment was added, delete the entry in 356.221 we just created
"RTN","IBTRH2",241,0)
 I $G(^IBT(356.22,IBTRIEN,1,CMTIEN,1,1,0))="" S DIK=DIE,DA(1)=IBTRIEN,DA=CMTIEN D ^DIK Q
"RTN","IBTRH2",242,0)
 ;
"RTN","IBTRH2",243,0)
 ; If called from the main worklist, skip the next line
"RTN","IBTRH2",244,0)
 Q:FROMWL
"RTN","IBTRH2",245,0)
 ;
"RTN","IBTRH2",246,0)
 ; rebuild the listman screen in order to show the newly added comment
"RTN","IBTRH2",247,0)
 D INIT^IBTRH2,HDR^IBTRH2
"RTN","IBTRH2",248,0)
 Q
"RTN","IBTRH2",249,0)
 ;
"RTN","IBTRH2",250,0)
SEND278 ; send 278 request
"RTN","IBTRH2",251,0)
 N ADMIEN,DDT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,EDT,DISIEN,IBEXIT,IENS,STATUS,X,Y
"RTN","IBTRH2",252,0)
 ; IBTRENT - where this action is called from:
"RTN","IBTRH2",253,0)
 ;  0 = from HCSR Worklist (full view)
"RTN","IBTRH2",254,0)
 ;  1 = from HCSR Worklist (short view)
"RTN","IBTRH2",255,0)
 ;  2 = from HCSR Response Worklist
"RTN","IBTRH2",256,0)
 ;  3 = from Insurance Review Editor or Claims Tracking Editor
"RTN","IBTRH2",257,0)
 S IBTRENT=+$G(IBTRENT)
"RTN","IBTRH2",258,0)
 S:'$D(IBRESP) IBRESP=0
"RTN","IBTRH2",259,0)
 S VALMBCK="R"
"RTN","IBTRH2",260,0)
 D FULL^VALM1
"RTN","IBTRH2",261,0)
 I $G(IBTRIEN)="" S IBTRENT=3 D  ; coming from either Insurance Review Editor or Claims Tracking Editor
"RTN","IBTRH2",262,0)
 .I $G(IBTRN)'="" D
"RTN","IBTRH2",263,0)
 ..S IENS=IBTRN_",",DDT=""
"RTN","IBTRH2",264,0)
 ..S EDT=$$GET1^DIQ(356,IENS,.06,"I") ; get event date from file 356
"RTN","IBTRH2",265,0)
 ..S ADMIEN=+$$GET1^DIQ(356,IENS,.05,"I") ; get admission (ptr to file 405) from file 356
"RTN","IBTRH2",266,0)
 ..I ADMIEN>0 D
"RTN","IBTRH2",267,0)
 ...S DISIEN=+$$GET1^DIQ(405,ADMIEN_",",.17,"I") ; get discharge (ptr to file 405) from file 405
"RTN","IBTRH2",268,0)
 ...I DISIEN>0 S DDT=$$GET1^DIQ(405,DISIEN_",",.01,"I") ; get discharge date from file 405
"RTN","IBTRH2",269,0)
 ...Q
"RTN","IBTRH2",270,0)
 ..S IBTRIEN=$O(^IBT(356.22,"D",DFN,EDT_$S(DDT'="":"-"_DDT,1:""),""))
"RTN","IBTRH2",271,0)
 .Q
"RTN","IBTRH2",272,0)
 ; if no valid 356.22 ien, complain and bail out
"RTN","IBTRH2",273,0)
 I +$G(IBTRIEN)'>0 D STATMSG^IBTRH2A(1) Q
"RTN","IBTRH2",274,0)
 ;
"RTN","IBTRH2",275,0)
 S STATUS=$$STATUS(IBTRIEN)
"RTN","IBTRH2",276,0)
 ; don't send a new request if we're waiting for response
"RTN","IBTRH2",277,0)
 I STATUS="02" D STATMSG^IBTRH2A(3) Q
"RTN","IBTRH2",278,0)
 ; if status is pending, still waiting on payer
"RTN","IBTRH2",279,0)
 I STATUS="07" D STATMSG^IBTRH2A(4) Q
"RTN","IBTRH2",280,0)
 ; Create the 278 request to be sent
"RTN","IBTRH2",281,0)
 I IBTRENT'=1 S IBEXIT=$$CRT278^IBTRH5I(IBTRIEN)
"RTN","IBTRH2",282,0)
 I IBTRENT=1 S IBEXIT=1
"RTN","IBTRH2",283,0)
 ;
"RTN","IBTRH2",284,0)
 ; Quit if the user '^' exited the template or if there is missing required fields
"RTN","IBTRH2",285,0)
 I $$REQMISS^IBTRH5I(IBTRIEN,IBEXIT) D  Q
"RTN","IBTRH2",286,0)
 . D PAUSE^VALM1
"RTN","IBTRH2",287,0)
 . ; Refresh display
"RTN","IBTRH2",288,0)
 . I IBTRENT=0 D INIT^IBTRH2
"RTN","IBTRH2",289,0)
 ;
"RTN","IBTRH2",290,0)
 S DIR("A")="Send Request? (Y/N): ",DIR("B")="N",DIR(0)="YAO" D ^DIR K DIR
"RTN","IBTRH2",291,0)
 I $G(DTOUT)!$G(DUOUT)!$G(DIROUT)!($G(Y)'=1) Q
"RTN","IBTRH2",292,0)
 D EN^IBTRHLO(IBTRIEN,0)
"RTN","IBTRH2",293,0)
 ; check if message id got populated and display appropriate message
"RTN","IBTRH2",294,0)
 D STATMSG^IBTRH2A($S($P($G(^IBT(356.22,IBTRIEN,0)),U,12)="":2,1:0))
"RTN","IBTRH2",295,0)
 ; refresh display
"RTN","IBTRH2",296,0)
 I IBTRENT=0 D INIT^IBTRH2
"RTN","IBTRH2",297,0)
 Q
"RTN","IBTRH2",298,0)
 ;
"RTN","IBTRH2",299,0)
STATUS(IBTRIEN) ; returns 356.22 entry status
"RTN","IBTRH2",300,0)
 ; IBTRIEN - file 356.22 ien
"RTN","IBTRH2",301,0)
 ;
"RTN","IBTRH2",302,0)
 N RES
"RTN","IBTRH2",303,0)
 S RES=""
"RTN","IBTRH2",304,0)
 I +$G(IBTRIEN)>0 S RES=$P($G(^IBT(356.22,IBTRIEN,0)),U,8)
"RTN","IBTRH2",305,0)
 Q RES
"RTN","IBTRH2",306,0)
 ;
"RTN","IBTRH2",307,0)
PRMARK(WHICH)   ;EP
"RTN","IBTRH2",308,0)
 ; Listman Protocol Action to Mark/Remove 'In-Progress' from a selected entry
"RTN","IBTRH2",309,0)
 ; from the expand entry worklist
"RTN","IBTRH2",310,0)
 ; Input:   WHICH   - 0 - Remove 'In-Progress' mark
"RTN","IBTRH2",311,0)
 ;                    1 - Set 'In-Progress' mark
"RTN","IBTRH2",312,0)
 ;          IBTRIEN - IEN of the Expanded Entry being marked/removed
"RTN","IBTRH2",313,0)
 D PRMARK^IBTRH1(WHICH,IBTRIEN)
"RTN","IBTRH2",314,0)
 I WHICH=1 D  Q
"RTN","IBTRH2",315,0)
 . I +$$STATUS^IBTRH2(IBTRIEN)=1 S VALMSG="Entry has been Marked" Q
"RTN","IBTRH2",316,0)
 . S VALMSG="Nothing Done"
"RTN","IBTRH2",317,0)
 ;
"RTN","IBTRH2",318,0)
 I +$$STATUS^IBTRH2(IBTRIEN)=0 S VALMSG="Entry has been Unmarked" Q
"RTN","IBTRH2",319,0)
 S VALMSG="Nothing Done"
"RTN","IBTRH2",320,0)
 Q
"RTN","IBTRH2A")
0^27^B101621694^n/a
"RTN","IBTRH2A",1,0)
IBTRH2A ;ALB/YMG - HCSR worklist expand entry cont. ;18-JUN-2014
"RTN","IBTRH2A",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH2A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH2A",4,0)
 ;
"RTN","IBTRH2A",5,0)
 Q
"RTN","IBTRH2A",6,0)
 ;
"RTN","IBTRH2A",7,0)
LOCKERR ; display a lock error message
"RTN","IBTRH2A",8,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH2A",9,0)
 W *7,!!,"Some else is editing the event. Try again later."
"RTN","IBTRH2A",10,0)
 S DIR(0)="EA",DIR("A")="Press RETURN to continue " D ^DIR
"RTN","IBTRH2A",11,0)
 Q
"RTN","IBTRH2A",12,0)
 ;
"RTN","IBTRH2A",13,0)
COPYERR(TYPE) ; display the error encountered while copying a request
"RTN","IBTRH2A",14,0)
 ; TYPE = 0 - error while reading data, TYPE = 1 - error while filing data
"RTN","IBTRH2A",15,0)
 ; ERROR - array used for FM error reporting, populated in the calling tag
"RTN","IBTRH2A",16,0)
 ;
"RTN","IBTRH2A",17,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,STR,X,Y,Z,Z1
"RTN","IBTRH2A",18,0)
 I $D(ERROR) D
"RTN","IBTRH2A",19,0)
 .W !,"Unable to copy - the following error was encountered while "
"RTN","IBTRH2A",20,0)
 .W $S(TYPE:"filing",1:"retrieving")," the data:"
"RTN","IBTRH2A",21,0)
 .S Z=0 F  S Z=$O(ERROR("DIERR",Z)) Q:'Z  D
"RTN","IBTRH2A",22,0)
 ..S STR=$G(ERROR("DIERR",Z)) I STR'="" W !,"Error code: "_STR
"RTN","IBTRH2A",23,0)
 ..S STR=$G(ERROR("DIERR",Z,"PARAM","FILE")) I STR'="" W !,"File number: "_STR
"RTN","IBTRH2A",24,0)
 ..S STR=$G(ERROR("DIERR",Z,"PARAM","FIELD")) I STR'="" W !,"Field number: "_STR
"RTN","IBTRH2A",25,0)
 ..W !,"Error text:" S Z1=0 F  S Z1=$O(ERROR("DIERR",1,"TEXT",Z1)) Q:'Z1  W !,ERROR("DIERR",1,"TEXT",Z1)
"RTN","IBTRH2A",26,0)
 ..Q
"RTN","IBTRH2A",27,0)
 .S DIR(0)="EA",DIR("A")="Press RETURN to continue " D ^DIR
"RTN","IBTRH2A",28,0)
 .Q
"RTN","IBTRH2A",29,0)
 Q
"RTN","IBTRH2A",30,0)
 ;
"RTN","IBTRH2A",31,0)
MLTCPY(SFNUM,NEWIENS) ; copy a multiple 
"RTN","IBTRH2A",32,0)
 ; SFNUM - sub-file number of a multiple to copy
"RTN","IBTRH2A",33,0)
 ; NEWIENS - iens of a new entry (copied to)
"RTN","IBTRH2A",34,0)
 ; OLDENTRY - FDA array to get data from (defined in the calling tag)
"RTN","IBTRH2A",35,0)
 ;
"RTN","IBTRH2A",36,0)
 ; returns 1 on successful copy, 0 on failure
"RTN","IBTRH2A",37,0)
 ;
"RTN","IBTRH2A",38,0)
 N ERROR,NEWENTRY,RES,STOPFLG,Z
"RTN","IBTRH2A",39,0)
 S RES=1,STOPFLG=0
"RTN","IBTRH2A",40,0)
 S Z=0 F  S Z=$O(OLDENTRY(SFNUM,Z)) Q:'Z  D  Q:STOPFLG
"RTN","IBTRH2A",41,0)
 .K NEWENTRY D FDACPY(SFNUM,Z,"+1,"_NEWIENS,.OLDENTRY,.NEWENTRY)
"RTN","IBTRH2A",42,0)
 .D UPDATE^DIE(,"NEWENTRY",,"ERROR")
"RTN","IBTRH2A",43,0)
 .I $D(ERROR) D COPYERR(1) S STOPFLG=1,RES=0
"RTN","IBTRH2A",44,0)
 .Q
"RTN","IBTRH2A",45,0)
 Q RES
"RTN","IBTRH2A",46,0)
 ;
"RTN","IBTRH2A",47,0)
FDACPY(FN,OLDIENS,NEWIENS,OLDENTRY,NEWENTRY) ; copy FDA array, move data from "I" nodes to regular ones
"RTN","IBTRH2A",48,0)
 ; FN - file or subfile #
"RTN","IBTRH2A",49,0)
 ; OLDIENS - IENS for the OLDENTRY array
"RTN","IBTRH2A",50,0)
 ; NEWIENS - IENS for the NEWENTRY array
"RTN","IBTRH2A",51,0)
 ; OLDENTRY - array to copy from (passed by reference)
"RTN","IBTRH2A",52,0)
 ; NEWENTRY - array to copy into (passed by reference)
"RTN","IBTRH2A",53,0)
 ;
"RTN","IBTRH2A",54,0)
 N FLD,VALUE
"RTN","IBTRH2A",55,0)
 S FLD="" F  S FLD=$O(OLDENTRY(FN,OLDIENS,FLD)) Q:FLD=""  D
"RTN","IBTRH2A",56,0)
 .S VALUE=$G(OLDENTRY(FN,OLDIENS,FLD,"I"))
"RTN","IBTRH2A",57,0)
 .I VALUE'="" S NEWENTRY(FN,NEWIENS,FLD)=VALUE
"RTN","IBTRH2A",58,0)
 .Q
"RTN","IBTRH2A",59,0)
 Q
"RTN","IBTRH2A",60,0)
 ;
"RTN","IBTRH2A",61,0)
MLTCLEAR(IBTRIEN) ; delete entries from multiples in file 356.22
"RTN","IBTRH2A",62,0)
 ; IBTRIEN -  file 356.22 ien
"RTN","IBTRH2A",63,0)
 N DA,DIK,FLD,Z
"RTN","IBTRH2A",64,0)
 I +$G(IBTRIEN)'>0 Q
"RTN","IBTRH2A",65,0)
 F FLD=3,11,13,14,15,16 D
"RTN","IBTRH2A",66,0)
 .S DIK="^IBT(356.22,"_IBTRIEN_","_FLD_",",DA(1)=IBTRIEN
"RTN","IBTRH2A",67,0)
 .S DA=0 F  S DA=$O(^IBT(356.22,IBTRIEN,FLD,DA)) Q:'DA!(DA?1.A)  D ^DIK
"RTN","IBTRH2A",68,0)
 .Q
"RTN","IBTRH2A",69,0)
 Q
"RTN","IBTRH2A",70,0)
 ;
"RTN","IBTRH2A",71,0)
ADDR(FILE,IEN,LN1FLD,LN2FLD,LN3FLD,CITFLD,STFLD,ZIPFLD,RES) ; format address for output
"RTN","IBTRH2A",72,0)
 ; FILE - file number to get address from
"RTN","IBTRH2A",73,0)
 ; IEN - ien in FILE
"RTN","IBTRH2A",74,0)
 ; LN1FLD - field # for addr. line 1
"RTN","IBTRH2A",75,0)
 ; LN2FLD - field # for addr. line 2
"RTN","IBTRH2A",76,0)
 ; LN3FLD - field # for addr. line 3
"RTN","IBTRH2A",77,0)
 ; CITFLD - field # for city
"RTN","IBTRH2A",78,0)
 ; STFLD - field # for state
"RTN","IBTRH2A",79,0)
 ; ZIPFLD - field # for zip
"RTN","IBTRH2A",80,0)
 ; RES - array of formatted address lines this function returns
"RTN","IBTRH2A",81,0)
 ;
"RTN","IBTRH2A",82,0)
 N ADDRDATA,DRSTR,CNT,CSSTR,IENS,LN1STR,LN2STR,LN3STR,STATE,TMP,Z,Z1,Z2,ZIP
"RTN","IBTRH2A",83,0)
 K RES S RES(1)=""
"RTN","IBTRH2A",84,0)
 S IENS=IEN_","
"RTN","IBTRH2A",85,0)
 S DRSTR=LN1FLD_";"_LN2FLD_";"_LN3FLD_";"_CITFLD_";"_STFLD_";"_ZIPFLD
"RTN","IBTRH2A",86,0)
 D GETS^DIQ(FILE,IENS,DRSTR,"EI","ADDRDATA")
"RTN","IBTRH2A",87,0)
 S CSSTR=$G(ADDRDATA(FILE,IENS,CITFLD,"E"))
"RTN","IBTRH2A",88,0)
 S STATE=$$GET1^DIQ(5,$G(ADDRDATA(FILE,IENS,STFLD,"I"))_",",1)
"RTN","IBTRH2A",89,0)
 S ZIP=$G(ADDRDATA(FILE,IENS,ZIPFLD,"E"))
"RTN","IBTRH2A",90,0)
 S TMP=$E(ZIP,6,9),ZIP=$E(ZIP,1,5)_$S(TMP'="":"-"_TMP,1:"")
"RTN","IBTRH2A",91,0)
 S STATE=STATE_$S(STATE=""!(ZIP=""):"",1:"  ")_ZIP
"RTN","IBTRH2A",92,0)
 S CSSTR=CSSTR_$S(CSSTR=""!(STATE=""):"",1:", ")_STATE
"RTN","IBTRH2A",93,0)
 S LN1STR=$G(ADDRDATA(FILE,IENS,LN1FLD,"E")),LN2STR=$G(ADDRDATA(FILE,IENS,LN2FLD,"E")),LN3STR=$G(ADDRDATA(FILE,IENS,LN3FLD,"E"))
"RTN","IBTRH2A",94,0)
 S CNT=1 F Z=LN1STR,LN2STR,LN3STR,CSSTR I Z'="" S Z1=$G(RES(CNT)),Z2=", " D
"RTN","IBTRH2A",95,0)
 .S:Z1="" Z2="" S:($L(Z1)+2+$L(Z))>64 Z2="",CNT=CNT+1 S RES(CNT)=$G(RES(CNT))_Z2_Z
"RTN","IBTRH2A",96,0)
 .Q
"RTN","IBTRH2A",97,0)
 Q
"RTN","IBTRH2A",98,0)
 ;
"RTN","IBTRH2A",99,0)
STATMSG(TYPE) ; display transmission status message
"RTN","IBTRH2A",100,0)
 ; TYPE - 1 if transmission successful, 0 otherwise
"RTN","IBTRH2A",101,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH2A",102,0)
 S DIR(0)="EA"
"RTN","IBTRH2A",103,0)
 S DIR("A",1)=" "
"RTN","IBTRH2A",104,0)
 I TYPE=0 S DIR("A",2)="278 request has been sent successfully."
"RTN","IBTRH2A",105,0)
 I TYPE=1 S DIR("A",2)="Unable to send 278 request, can't find an entry in file 356.22."
"RTN","IBTRH2A",106,0)
 I TYPE=2 S DIR("A",2)="Unable to send 278 request, check HCSR worklist entry for errors."
"RTN","IBTRH2A",107,0)
 I TYPE=3 S DIR("A",2)="Unable to send 278 request, there's already a 278 request awaiting a response."
"RTN","IBTRH2A",108,0)
 I TYPE=4 S DIR("A",2)="This 278 request has a pending response from the payer. Please use SI action to send Inquiry if needed."
"RTN","IBTRH2A",109,0)
 S DIR("A")="Press RETURN to continue " D ^DIR
"RTN","IBTRH2A",110,0)
 Q
"RTN","IBTRH2A",111,0)
 ;
"RTN","IBTRH2A",112,0)
MSG215(TYPE,TTYPE) ; display transmission status message
"RTN","IBTRH2A",113,0)
 ; TYPE - 1 if transmission successful, 0 otherwise
"RTN","IBTRH2A",114,0)
 ; TTYPE - 'C' for 278x215 cancel transaction
"RTN","IBTRH2A",115,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH2A",116,0)
 S DIR(0)="EA"
"RTN","IBTRH2A",117,0)
 S DIR("A",1)=" "
"RTN","IBTRH2A",118,0)
 I TYPE=0 S DIR("A",2)="278 "_$S($G(TTYPE)="C":"Cancellation",1:"Inquiry")_" has been sent successfully."
"RTN","IBTRH2A",119,0)
 I TYPE=1 S DIR("A",2)="Unable to send 278 Inquiry, can't find an entry in file 356.22."
"RTN","IBTRH2A",120,0)
 I TYPE=2 S DIR("A",2)="Unable to send 278 "_$S($G(TTYPE)="C":"Cancellation",1:"Inquiry")_", check HCSR worklist entry for errors."
"RTN","IBTRH2A",121,0)
 I TYPE=3 S DIR("A",2)="Unable to send 278 Inquiry, HCSR worklist entry is NOT in a 'Pending' status."
"RTN","IBTRH2A",122,0)
 I TYPE=4 S DIR("A",2)="Unable to generate 278 Inquiry, copy of existing entry failed"
"RTN","IBTRH2A",123,0)
 I TYPE=5 S DIR("A",2)="278x215 Inquiry has already been generated for this HCSR worklist entry."
"RTN","IBTRH2A",124,0)
 S DIR("A")="Press RETURN to continue " D ^DIR
"RTN","IBTRH2A",125,0)
 Q
"RTN","IBTRH2A",126,0)
 ;
"RTN","IBTRH2A",127,0)
COPY278 ; copy 278 request
"RTN","IBTRH2A",128,0)
 ; requires IBTRIEN to be defined and contain ien of the 356.22 entry being copied
"RTN","IBTRH2A",129,0)
 ;
"RTN","IBTRH2A",130,0)
 N COB,COBSTR,CURCOB,DFN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ERROR,EVENTDT,IEN312,IENARRY,IENS,INSNODE0,INSDATA,LIST,NODE0
"RTN","IBTRH2A",131,0)
 N NEWENTRY,NIENS,NIENS16,OLDENTRY,OLDWP,SAVEIEN,STOPFLG,TMP,X,Y,Z,Z1,IBRESP,IBTRENT,NEWIEN,PAYIEN,STOP
"RTN","IBTRH2A",132,0)
 S VALMBCK="R"
"RTN","IBTRH2A",133,0)
 I +$G(IBTRIEN)'>0 Q
"RTN","IBTRH2A",134,0)
 S NODE0=$G(^IBT(356.22,IBTRIEN,0))
"RTN","IBTRH2A",135,0)
 S DFN=+$P(NODE0,U,2),IEN312=+$P(NODE0,U,3)
"RTN","IBTRH2A",136,0)
 S INSNODE0="" S:IEN312>0 INSNODE0=$G(^DPT(DFN,.312,IEN312,0)) ; 0-node in file 2.312
"RTN","IBTRH2A",137,0)
 S CURCOB=$P(INSNODE0,U,20) ; COB for the 356.22 entry we're working on
"RTN","IBTRH2A",138,0)
 S EVENTDT=$P(NODE0,U,7)
"RTN","IBTRH2A",139,0)
 ; build a list of existing entries for this patient and event date
"RTN","IBTRH2A",140,0)
 S Z="" F  S Z=$O(^IBT(356.22,"D",DFN,EVENTDT,Z)) Q:'Z  D
"RTN","IBTRH2A",141,0)
 .S NODE0=$G(^IBT(356.22,Z,0))
"RTN","IBTRH2A",142,0)
 .I +$P(NODE0,U,13)>0 Q  ; inquiry pointer exists - this is a response entry
"RTN","IBTRH2A",143,0)
 .S IEN312=+$P(NODE0,U,3) I IEN312>0,$G(LIST(IEN312))="" S LIST(IEN312)=Z_U_$$STATUS^IBTRH2(Z)
"RTN","IBTRH2A",144,0)
 .Q
"RTN","IBTRH2A",145,0)
 D ALL^IBCNS1(DFN,"INSDATA",1,$P(EVENTDT,"-"),1)
"RTN","IBTRH2A",146,0)
 I INSDATA(0)<2 D MSG(1) Q  ; need at least 2 insurance policies to be available
"RTN","IBTRH2A",147,0)
 S STOPFLG=0
"RTN","IBTRH2A",148,0)
 F COB=1:1:3 S IEN312=$O(INSDATA("S",COB,"")) I IEN312'="",COB'=CURCOB D  Q:STOPFLG
"RTN","IBTRH2A",149,0)
 .S PAYIEN=$P($G(^DPT(DFN,.312,IEN312,0)),"^") I PAYIEN="" S STOPFLG=1 Q
"RTN","IBTRH2A",150,0)
 .I '$D(^IBE(350.9,1,$S($P(NODE0,"^",4):66,1:65),"B",PAYIEN)) S STOP=2 Q
"RTN","IBTRH2A",151,0)
 .I +$P($G(LIST(IEN312)),U,2)>1 S STOP=3 Q  ; already sent request for this entry
"RTN","IBTRH2A",152,0)
 .S COBSTR=$S(COB=1:"primary",COB=2:"secondary",1:"tertiary")
"RTN","IBTRH2A",153,0)
 .S DIR("A")="Copy 278 request to "_COBSTR_" insurance? (Y/N): ",DIR("B")="Y",DIR(0)="YAO" D ^DIR K DIR
"RTN","IBTRH2A",154,0)
 .I $G(DTOUT)!$G(DUOUT)!$G(DIROUT)!($G(Y)'=1) Q
"RTN","IBTRH2A",155,0)
 .; copy the entry in 356.22
"RTN","IBTRH2A",156,0)
 .S STOP=4
"RTN","IBTRH2A",157,0)
 .S IENS=IBTRIEN_","
"RTN","IBTRH2A",158,0)
 .D GETS^DIQ(356.22,IENS,".02;.04:.07;.16;2.01:2.25;3*;4.01:4.14;5.01:5.18;6.01:6.18;7.01:7.13;8.01:8.08;9.01:9.08;10.01:10.13;11*;14*;15*;18.01:18.1","IN","OLDENTRY","ERROR")
"RTN","IBTRH2A",159,0)
 .I $D(ERROR) D COPYERR(0) S STOPFLG=1 Q
"RTN","IBTRH2A",160,0)
 .S NIENS=+$G(LIST(IEN312))_"," ; iens of the new entry in 356.22 (top level)
"RTN","IBTRH2A",161,0)
 .I NIENS="0," S NIENS="+1,",NEWENTRY(356.22,NIENS,.01)=$$NOW^XLFDT()
"RTN","IBTRH2A",162,0)
 .D FDACPY(356.22,IENS,NIENS,.OLDENTRY,.NEWENTRY)
"RTN","IBTRH2A",163,0)
 .S NEWENTRY(356.22,NIENS,.03)=IEN312
"RTN","IBTRH2A",164,0)
 .S NEWENTRY(356.22,NIENS,.11)=DUZ
"RTN","IBTRH2A",165,0)
 .; WP field 356.22/12
"RTN","IBTRH2A",166,0)
 .D GETS^DIQ(356.22,IENS,"12","N","OLDWP","ERROR") I $D(ERROR) D COPYERR(0) S STOPFLG=1 Q
"RTN","IBTRH2A",167,0)
 .M NEWENTRY(356.22,NIENS,12)=OLDWP(356.22,IENS,12)
"RTN","IBTRH2A",168,0)
 .I NIENS="+1," D UPDATE^DIE(,"NEWENTRY","NEWIEN","ERROR")
"RTN","IBTRH2A",169,0)
 .I NIENS'="+1," D FILE^DIE(,"NEWENTRY","ERROR")
"RTN","IBTRH2A",170,0)
 .I $D(ERROR) D COPYERR(1) S STOPFLG=1 Q
"RTN","IBTRH2A",171,0)
 .I $D(NEWIEN(1)) S NIENS=NEWIEN(1)_",",LIST(IEN312)=NEWIEN(1)
"RTN","IBTRH2A",172,0)
 .D MLTCLEAR($P(NIENS,","))
"RTN","IBTRH2A",173,0)
 .; multiple 356.223
"RTN","IBTRH2A",174,0)
 .I '$$MLTCPY(356.223,NIENS) S STOPFLG=1 Q
"RTN","IBTRH2A",175,0)
 .; multiple 356.2211
"RTN","IBTRH2A",176,0)
 .I '$$MLTCPY(356.2211,NIENS) S STOPFLG=1 Q
"RTN","IBTRH2A",177,0)
 .; multiple 356.2214
"RTN","IBTRH2A",178,0)
 .I '$$MLTCPY(356.2214,NIENS) S STOPFLG=1 Q
"RTN","IBTRH2A",179,0)
 .; multiple 356.2215
"RTN","IBTRH2A",180,0)
 .I '$$MLTCPY(356.2215,NIENS) S STOPFLG=1 Q
"RTN","IBTRH2A",181,0)
 .; multiple 356.2213 - not all fields are being copied, each entry needs to be handled separately
"RTN","IBTRH2A",182,0)
 .S Z=0 F  S Z=$O(^IBT(356.22,IBTRIEN,13,Z)) Q:'Z  D  Q:STOPFLG
"RTN","IBTRH2A",183,0)
 ..S IENS=Z_","_IBTRIEN_"," K NEWENTRY,OLDENTRY
"RTN","IBTRH2A",184,0)
 ..D GETS^DIQ(356.2213,IENS,".01:.03","IN","OLDENTRY","ERROR")
"RTN","IBTRH2A",185,0)
 ..I $D(ERROR) D COPYERR(0) S STOPFLG=1 Q
"RTN","IBTRH2A",186,0)
 ..D FDACPY(356.2213,IENS,"+1,"_NIENS,.OLDENTRY,.NEWENTRY)
"RTN","IBTRH2A",187,0)
 ..D UPDATE^DIE(,"NEWENTRY",,"ERROR")
"RTN","IBTRH2A",188,0)
 ..I $D(ERROR) D COPYERR(1) S STOPFLG=1
"RTN","IBTRH2A",189,0)
 ..Q
"RTN","IBTRH2A",190,0)
 .; multiple 356.2216 - not all fields are being copied, each entry needs to be handled separately
"RTN","IBTRH2A",191,0)
 .S Z=0 F  S Z=$O(^IBT(356.22,IBTRIEN,16,Z)) Q:'Z  D  Q:STOPFLG
"RTN","IBTRH2A",192,0)
 ..S IENS=Z_","_IBTRIEN_"," K OLDENTRY
"RTN","IBTRH2A",193,0)
 ..D GETS^DIQ(356.2216,IENS,".01:.14;1.01:1.12;2.01:2.09;3.01:3.07;4*;5.01:5.08;6*","IN","OLDENTRY","ERROR")
"RTN","IBTRH2A",194,0)
 ..I $D(ERROR) D COPYERR(0) S STOPFLG=1 Q
"RTN","IBTRH2A",195,0)
 ..K NEWENTRY D FDACPY(356.2216,IENS,"+1,"_NIENS,.OLDENTRY,.NEWENTRY)
"RTN","IBTRH2A",196,0)
 ..; WP field 356.2216/7
"RTN","IBTRH2A",197,0)
 ..K OLDWP D GETS^DIQ(356.2216,IENS,"7","N","OLDWP","ERROR") I $D(ERROR) D COPYERR(0) S STOPFLG=1 Q
"RTN","IBTRH2A",198,0)
 ..M NEWENTRY(356.2216,"+1,"_NIENS,7)=OLDWP(356.2216,IENS,7)
"RTN","IBTRH2A",199,0)
 ..K IENARRY D UPDATE^DIE(,"NEWENTRY","IENARRY","ERROR")
"RTN","IBTRH2A",200,0)
 ..I $D(ERROR) D COPYERR(1) S STOPFLG=1 Q
"RTN","IBTRH2A",201,0)
 ..S NIENS16=IENARRY(1)_","_NIENS ; iens of the new entry in 356.2216
"RTN","IBTRH2A",202,0)
 ..; multiple 356.22164
"RTN","IBTRH2A",203,0)
 ..I '$$MLTCPY(356.22164,NIENS16) S STOPFLG=1 Q
"RTN","IBTRH2A",204,0)
 ..; multiple 356.22166
"RTN","IBTRH2A",205,0)
 ..I '$$MLTCPY(356.22166,NIENS16) S STOPFLG=1 Q
"RTN","IBTRH2A",206,0)
 ..; multiple 356.22167
"RTN","IBTRH2A",207,0)
 ..I '$$MLTCPY(356.22166,NIENS16) S STOPFLG=1 Q
"RTN","IBTRH2A",208,0)
 ..; multiple 356.22168 - not all fields are being copied, each entry needs to be handled separately
"RTN","IBTRH2A",209,0)
 ..S Z1=0 F  S Z1=$O(^IBT(356.22,IBTRIEN,16,Z,8,Z1)) Q:'Z1  D  Q:STOPFLG
"RTN","IBTRH2A",210,0)
 ...S IENS=Z1_","_Z_","_IBTRIEN_"," K NEWENTRY,OLDENTRY
"RTN","IBTRH2A",211,0)
 ...D GETS^DIQ(356.22168,IENS,".01:.03","IN","OLDENTRY","ERROR")
"RTN","IBTRH2A",212,0)
 ...I $D(ERROR) D COPYERR(0) S STOPFLG=1 Q
"RTN","IBTRH2A",213,0)
 ...D FDACPY(356.22168,IENS,"+1,"_NIENS16,.OLDENTRY,.NEWENTRY)
"RTN","IBTRH2A",214,0)
 ...D UPDATE^DIE(,"NEWENTRY",,"ERROR")
"RTN","IBTRH2A",215,0)
 ...I $D(ERROR) D COPYERR(1) S STOPFLG=1
"RTN","IBTRH2A",216,0)
 ...Q
"RTN","IBTRH2A",217,0)
 ..Q
"RTN","IBTRH2A",218,0)
 .; ask if new 278 request should be sent right away
"RTN","IBTRH2A",219,0)
 .S SAVEIEN=IBTRIEN,IBTRIEN=+$G(LIST(IEN312)),IBTRENT=0 D SEND278^IBTRH2 S IBTRIEN=SAVEIEN
"RTN","IBTRH2A",220,0)
 .Q
"RTN","IBTRH2A",221,0)
 I +$G(STOP)>0,+$G(STOP)<4 D MSG(STOP)
"RTN","IBTRH2A",222,0)
 Q
"RTN","IBTRH2A",223,0)
 ;
"RTN","IBTRH2A",224,0)
MSG(TYPE) ;display status message
"RTN","IBTRH2A",225,0)
 ;  TYPE = 1 No alternate insurance available for this patient
"RTN","IBTRH2A",226,0)
 ;       = 2 alternate insurance not setup for 278 submission
"RTN","IBTRH2A",227,0)
 ;       = 3 278 already created for alternate insurance
"RTN","IBTRH2A",228,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH2A",229,0)
 S DIR(0)="EA"
"RTN","IBTRH2A",230,0)
 S DIR("A",1)=" "
"RTN","IBTRH2A",231,0)
 I TYPE=1 S DIR("A",2)="No alternate insurance available for this patient."
"RTN","IBTRH2A",232,0)
 I TYPE=2 S DIR("A",2)="Alternate insurance is not enabled for 278 submission."
"RTN","IBTRH2A",233,0)
 I TYPE=3 S DIR("A",2)="A 278 is already submitted for the alternate insurance."
"RTN","IBTRH2A",234,0)
 S DIR("A")="Press RETURN to continue " D ^DIR
"RTN","IBTRH2A",235,0)
 Q
"RTN","IBTRH2B")
0^36^B4869140^n/a
"RTN","IBTRH2B",1,0)
IBTRH2B ;ALB/JWS - HCSR worklist expand entry, send 215 ;18-JUN-2014
"RTN","IBTRH2B",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH2B",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH2B",4,0)
 ;
"RTN","IBTRH2B",5,0)
 Q
"RTN","IBTRH2B",6,0)
 ;
"RTN","IBTRH2B",7,0)
SEND215 ; send 278X215 inquiry ; JWS 10/17/14 add ability to manually submit a 278x215 Inquiry
"RTN","IBTRH2B",8,0)
 N ADMIEN,DDT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,EDT,DISIEN,IENS,STATUS,X,Y,NEWIEN
"RTN","IBTRH2B",9,0)
 N IBRESP,ERROR,IBFDA,TTYPE
"RTN","IBTRH2B",10,0)
 S IBRESP=0
"RTN","IBTRH2B",11,0)
 S VALMBCK="R"
"RTN","IBTRH2B",12,0)
 ; if no valid 356.22 ien, complain and bail out
"RTN","IBTRH2B",13,0)
 I +$G(IBTRIEN)'>0 D MSG215^IBTRH2A(1) Q
"RTN","IBTRH2B",14,0)
 I $P(^IBT(356.22,IBTRIEN,0),"^",19) D MSG215^IBTRH2A(5) Q
"RTN","IBTRH2B",15,0)
 S STATUS=$$STATUS^IBTRH2(IBTRIEN)
"RTN","IBTRH2B",16,0)
 ; don't send an inquiry if status of 217 is not 07 Pending
"RTN","IBTRH2B",17,0)
 I STATUS'="07" D MSG215^IBTRH2A(3) Q
"RTN","IBTRH2B",18,0)
 ; Create the 278 request to be sent
"RTN","IBTRH2B",19,0)
 ; S DIR("A")="Send Inquiry? (Y/N): ",DIR("B")="Y",DIR(0)="YAO" D ^DIR K DIR
"RTN","IBTRH2B",20,0)
 S DIR("A")="Send (I)nquiry or (C)ancel? ",DIR("B")="I",DIR(0)="SAO^I:Inquiry;C:Cancel" D ^DIR K DIR
"RTN","IBTRH2B",21,0)
 ;I $G(DTOUT)!$G(DUOUT)!$G(DIROUT)!($G(Y)'=1) Q
"RTN","IBTRH2B",22,0)
 I $G(DTOUT)!$G(DUOUT)!$G(DIROUT) Q
"RTN","IBTRH2B",23,0)
 S TTYPE=Y,NEWIEN=$$CRTENTRY^IBTRH5C(IBTRIEN,$P(^IBT(356.22,IBTRIEN,0),"^",14),$P(^IBT(356.22,IBTRIEN,0),"^",3),"",0,"",1,Y)  ;create 215 entry from original 217
"RTN","IBTRH2B",24,0)
 I 'NEWIEN D MSG215^IBTRH2A(4) Q
"RTN","IBTRH2B",25,0)
 S IBFDA(356.22,NEWIEN_",",.2)=1
"RTN","IBTRH2B",26,0)
 S IBFDA(356.22,NEWIEN_",",.26)=1  ;flag indicating manual 215
"RTN","IBTRH2B",27,0)
 D FILE^DIE(,"IBFDA","ERROR")
"RTN","IBTRH2B",28,0)
 D EN^IBTRHLO(NEWIEN,1)
"RTN","IBTRH2B",29,0)
 S IBFDA(356.22,IBTRIEN_",",.19)=1  ;flag request/inquiry as having already had a 215 generated
"RTN","IBTRH2B",30,0)
 S IBFDA(356.22,IBTRIEN_",",.08)="09"  ;set status to 215 inquiry sent, so skipped by worklist
"RTN","IBTRH2B",31,0)
 D FILE^DIE(,"IBFDA","ERROR") Q:$D(ERROR)
"RTN","IBTRH2B",32,0)
 ; check if message id got populated and display appropriate message
"RTN","IBTRH2B",33,0)
 H 2
"RTN","IBTRH2B",34,0)
 D MSG215^IBTRH2A($S($P($G(^IBT(356.22,NEWIEN,0)),U,12)="":2,1:0),TTYPE)
"RTN","IBTRH2B",35,0)
 ;I $P($G(^IBT(356.22,NEWIEN,0)),"^",12)'="" D
"RTN","IBTRH2B",36,0)
 ;. S IBFDA(356.22,IBTRIEN_",",.19)=1  ;flag request/inquiry as having already had a 215 generated
"RTN","IBTRH2B",37,0)
 ;. S IBFDA(356.22,IBTRIEN_",",.08)="09"  ;set status to 215 inquiry sent, so skipped by worklist
"RTN","IBTRH2B",38,0)
 ;. D FILE^DIE(,"IBFDA","ERROR") Q:$D(ERROR)
"RTN","IBTRH2B",39,0)
 ; refresh display
"RTN","IBTRH2B",40,0)
 D INIT^IBTRH2
"RTN","IBTRH2B",41,0)
 Q
"RTN","IBTRH3")
0^16^B110798316^n/a
"RTN","IBTRH3",1,0)
IBTRH3 ;ALB/VAD - IBT HCSR RESPONSE VIEW ;02-JUN-2014
"RTN","IBTRH3",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH3",4,0)
 ;
"RTN","IBTRH3",5,0)
EN ; -- main entry point for IBT HCSR Response View
"RTN","IBTRH3",6,0)
 N IBPTNO,IBTRIEN,IBOK,DATA,IBTRNM,IBTRSPEC
"RTN","IBTRH3",7,0)
 N DFN,NODE0,IEN312,INSNODE0,VALMCNT
"RTN","IBTRH3",8,0)
 S IBTRNM="IBTRH3"
"RTN","IBTRH3",9,0)
 ;
"RTN","IBTRH3",10,0)
 D EN^VALM("IBT HCSR RESPONSE VIEW")
"RTN","IBTRH3",11,0)
 I $G(IBPTNO)'=-1,'$D(IBFASTXT) K IBTNO,IBTRIEN,IBOK,DATA,IBTRN,IBTRSPEC,DFN,NODE0,IEN312,INSNODE0,VALMCNT G EN
"RTN","IBTRH3",12,0)
 Q
"RTN","IBTRH3",13,0)
 ;
"RTN","IBTRH3",14,0)
EN2 ;JWS;alternate entry point when IBTRIEN is selected from
"RTN","IBTRH3",15,0)
 ; a response list view, so IBTRIEN is known
"RTN","IBTRH3",16,0)
 N DLINE,IBPTNO,IBTRIEN,IBOK,DATA,IBTRNM,IBTRSPEC
"RTN","IBTRH3",17,0)
 N DFN,NODE0,IEN312,INSNODE0,VALMCNT
"RTN","IBTRH3",18,0)
 S IBTRNM="IBTRH3"
"RTN","IBTRH3",19,0)
 S IBTRIEN=+$$SELEVENT^IBTRH5(0,"Select entry",.DLINE) ; select entry to expand
"RTN","IBTRH3",20,0)
 I IBTRIEN'>0 Q
"RTN","IBTRH3",21,0)
 D EN^VALM("IBT HCSR RESPONSE VIEW")
"RTN","IBTRH3",22,0)
 Q
"RTN","IBTRH3",23,0)
 ;
"RTN","IBTRH3",24,0)
EN3 ;alternate entry point when IBTRIEN is selected from
"RTN","IBTRH3",25,0)
 ; a response list view to display response pending entry,
"RTN","IBTRH3",26,0)
 ; so IBTRIEN is known for the current entry and we need
"RTN","IBTRH3",27,0)
 ; to figure out the pending response.
"RTN","IBTRH3",28,0)
 N CURIEN,CURNODE0
"RTN","IBTRH3",29,0)
 S CURIEN=IBTRIEN
"RTN","IBTRH3",30,0)
 S CURNODE0=NODE0
"RTN","IBTRH3",31,0)
 ;
"RTN","IBTRH3",32,0)
 N DLINE,IBPTNO,IBTRIEN,IBOK,DATA,IBTRNM,IBTRSPEC
"RTN","IBTRH3",33,0)
 N DFN,NODE0,IEN312,INSNODE0,VALMCNT
"RTN","IBTRH3",34,0)
 S IBTRNM="IBTRH3"
"RTN","IBTRH3",35,0)
 I $P(CURNODE0,U,8)'="07" D NODP Q
"RTN","IBTRH3",36,0)
 S IBTRIEN=$P(CURNODE0,U,14)
"RTN","IBTRH3",37,0)
 I IBTRIEN'>0 D NODP Q
"RTN","IBTRH3",38,0)
 D EN^VALM("IBT HCSR RESPONSE VIEW")
"RTN","IBTRH3",39,0)
 Q
"RTN","IBTRH3",40,0)
 ;
"RTN","IBTRH3",41,0)
HDR ; -- header code
"RTN","IBTRH3",42,0)
 N VADM,Z
"RTN","IBTRH3",43,0)
 S Z=""
"RTN","IBTRH3",44,0)
 I +$G(DFN) D DEM^VADPT S Z=$E(VADM(1),1,28),Z=Z_$J("",35-$L(Z))_$P(VADM(2),U,2)_"    DOB: "_$P(VADM(3),U,2)_"    AGE: "_VADM(4)
"RTN","IBTRH3",45,0)
 S VALMHDR(1)=Z
"RTN","IBTRH3",46,0)
 S VALMSG="#In-Prog"
"RTN","IBTRH3",47,0)
 Q
"RTN","IBTRH3",48,0)
 ;
"RTN","IBTRH3",49,0)
INIT ; -- init variables and list array
"RTN","IBTRH3",50,0)
 ;JWS 9/9/14 - added conditions based on IBTRIEN already selected
"RTN","IBTRH3",51,0)
 K ^TMP(IBTRNM,$J)
"RTN","IBTRH3",52,0)
 ;
"RTN","IBTRH3",53,0)
 ; May need a switch or 2 to call INIT^IBTRH2 one to not display comments and
"RTN","IBTRH3",54,0)
 ; maybe another to change the primary subscript from "IBTRH2" to something else
"RTN","IBTRH3",55,0)
 ;
"RTN","IBTRH3",56,0)
 ; JWS 9/9/14 - if response IEN has value, set PATIENT variable and skip forward
"RTN","IBTRH3",57,0)
 I +$G(IBTRIEN) S IBPTNO=$P($G(^IBT(356.22,IBTRIEN,0)),U,2) G INIT1
"RTN","IBTRH3",58,0)
 ; Get the Patient.
"RTN","IBTRH3",59,0)
 S IBPTNO=$$ASKPAT() I IBPTNO=-1 S VALMQUIT="" G INITQ
"RTN","IBTRH3",60,0)
 I '$D(^IBT(356.22,"D",IBPTNO)) D  G INIT
"RTN","IBTRH3",61,0)
 . W !,"No HCSR Response data for this Patient.",!
"RTN","IBTRH3",62,0)
 ;
"RTN","IBTRH3",63,0)
 ; Get the Appointment/Admission Date.
"RTN","IBTRH3",64,0)
 S IBTRIEN=$$ASKEVT(IBPTNO)
"RTN","IBTRH3",65,0)
 I IBTRIEN=-1 S VALMQUIT="" G INITQ
"RTN","IBTRH3",66,0)
 I '$G(IBTRIEN) S VALMQUIT="" G INITQ
"RTN","IBTRH3",67,0)
INIT1 ;
"RTN","IBTRH3",68,0)
 S IBTRSPEC("IBTPATID")=IBPTNO
"RTN","IBTRH3",69,0)
 S IBTRSPEC("IBTEVENT")=IBTRIEN
"RTN","IBTRH3",70,0)
 ;
"RTN","IBTRH3",71,0)
 S NODE0=$G(^IBT(356.22,IBTRIEN,0))
"RTN","IBTRH3",72,0)
 S DFN=+$P(NODE0,U,2)
"RTN","IBTRH3",73,0)
 S IEN312=+$P(NODE0,U,3)
"RTN","IBTRH3",74,0)
 S INSNODE0="" S:IEN312>0 INSNODE0=$G(^DPT(DFN,.312,IEN312,0)) ; 0-node in file 2.312
"RTN","IBTRH3",75,0)
 ;
"RTN","IBTRH3",76,0)
 ; Compile the data for the display.
"RTN","IBTRH3",77,0)
 D COMPILE(IBTRNM,.IBTRSPEC)
"RTN","IBTRH3",78,0)
INITQ Q
"RTN","IBTRH3",79,0)
 ;
"RTN","IBTRH3",80,0)
ASKPAT()    ; Get the Patient Name
"RTN","IBTRH3",81,0)
 ; Init vars
"RTN","IBTRH3",82,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","IBTRH3",83,0)
 ; Patient lookup
"RTN","IBTRH3",84,0)
 W !
"RTN","IBTRH3",85,0)
 S DIC(0)="AEQM",DIC("S")="I $D(^IBT(356.22,""D"",Y))"
"RTN","IBTRH3",86,0)
 S DIC("A")=$$FO^IBCNEUT1("Select PATIENT NAME: ",21,"R")
"RTN","IBTRH3",87,0)
 S DIC="^DPT("
"RTN","IBTRH3",88,0)
 D ^DIC
"RTN","IBTRH3",89,0)
 Q +Y
"RTN","IBTRH3",90,0)
 ;
"RTN","IBTRH3",91,0)
ASKEVT(IBTRIEN) ; Get the Appointment/Admission
"RTN","IBTRH3",92,0)
 N A1,A2,MX,SEL,YY,XIEN,XREQ,XREQDATA
"RTN","IBTRH3",93,0)
 S YY=$$GTLIST(IBTRIEN) I YY=-1 D NODP G ASKEVTX  ; If no Appts Quit.
"RTN","IBTRH3",94,0)
ASKEVT1 ;
"RTN","IBTRH3",95,0)
 S A1="",MX=0
"RTN","IBTRH3",96,0)
 W !!!,"Select Appt/Adm:",!
"RTN","IBTRH3",97,0)
 ; Loop through the list if Appointments/Admissions and display each one.
"RTN","IBTRH3",98,0)
 F  S A1=$O(^TMP("IBTRH3E",$J,"XLISTNO",A1)) Q:A1=""  S A2=$P(^(A1),"^",3) D
"RTN","IBTRH3",99,0)
 . S XIEN=+$G(^TMP("IBTRH3E",$J,"DILIST",2,A2))
"RTN","IBTRH3",100,0)
 . S XREQ=+$P($G(^IBT(356.22,XIEN,0)),"^",13),XREQDATA=$G(^IBT(356.22,XREQ,0))
"RTN","IBTRH3",101,0)
 . W !?5,A1,".  ",$S($P(XREQDATA,"^",4)="I":"Adm: ",1:"App: ")
"RTN","IBTRH3",102,0)
 . W $$FMTE^XLFDT($P(^TMP("IBTRH3E",$J,"XLISTNO",A1),U,1)),"    "
"RTN","IBTRH3",103,0)
 . W $S($P(XREQDATA,"^",20)=1:"215:",1:"217:") S MX=A1
"RTN","IBTRH3",104,0)
 . W " ",$$FMTE^XLFDT($P($P(XREQDATA,U,15),".")),"  "
"RTN","IBTRH3",105,0)
 . I $P($G(^IBT(356.22,XIEN,103)),"^") W $$GET1^DIQ(356.22,XIEN_",",103.01)
"RTN","IBTRH3",106,0)
 . E  I $D(^IBT(356.22,XIEN,101)) W "AAA"
"RTN","IBTRH3",107,0)
 R !,"Enter Selection: ",SEL:DTIME I SEL=""!(SEL="^") S YY=-1 G ASKEVTX ; Nothing selected.
"RTN","IBTRH3",108,0)
 I SEL<1!(SEL>MX) W !?5,"INVALID SELECTION.",! G ASKEVT1
"RTN","IBTRH3",109,0)
 S YY=$P($G(^TMP("IBTRH3E",$J,"XLISTNO",SEL)),U,3)
"RTN","IBTRH3",110,0)
 S YY=+$G(^TMP("IBTRH3E",$J,"DILIST",2,YY))
"RTN","IBTRH3",111,0)
 I YY=0 S YY=-1
"RTN","IBTRH3",112,0)
ASKEVTX Q YY
"RTN","IBTRH3",113,0)
 ;
"RTN","IBTRH3",114,0)
GTLIST(IBTRIEN) ; Create list of Appointments/Admission Dates.
"RTN","IBTRH3",115,0)
 ; This will create a ^TMP global that will look similar to the following:
"RTN","IBTRH3",116,0)
 ;    ^TMP("IBTRH3E",$J,"DILIST",0)="1^*^0^"
"RTN","IBTRH3",117,0)
 ;    ^TMP("IBTRH3E",$J,"DILIST",0,"MAP")=.07
"RTN","IBTRH3",118,0)
 ;    ^TMP("IBTRH3E",$J,"DILIST",I1,J)="JUN 19, 2014@11:00"
"RTN","IBTRH3",119,0)
 ;    ^TMP("IBTRH3E",$J,"DILIST",I2,J)=IBTRNO
"RTN","IBTRH3",120,0)
 ;    ^TMP("IBTRH3E",$J,"DILIST","ID",J,.07)=IBTEVNT
"RTN","IBTRH3",121,0)
 ; where:
"RTN","IBTRH3",122,0)
 ;    I1 = The first cross-reference index which has the external event date values to display.
"RTN","IBTRH3",123,0)
 ;    I2 = The second cross-reference index which has the pointers to the IBT(356.22,...) Record no.
"RTN","IBTRH3",124,0)
 ;    J = Is just the internal counter of events for the selected patient.
"RTN","IBTRH3",125,0)
 ;    And ^IBT(356.22,"D",IBTRIEN,IBTEVNT,IBTRNO) is the actual Cross-reference record.
"RTN","IBTRH3",126,0)
 ;
"RTN","IBTRH3",127,0)
 N A,B,X,Z,Z1
"RTN","IBTRH3",128,0)
 S X=-1
"RTN","IBTRH3",129,0)
 K ^TMP("IBTRH3E",$J)
"RTN","IBTRH3",130,0)
 ; Only want Responses for the selected Patient.
"RTN","IBTRH3",131,0)
 D LIST^DIC(356.22,,".07",,,,,,"I $P(^(0),U,2)=IBTRIEN,$P(^(0),U,20)=2",,"^TMP(""IBTRH3E"",$J)")
"RTN","IBTRH3",132,0)
 I +$P($G(^TMP("IBTRH3E",$J,"DILIST",0)),U,1) D
"RTN","IBTRH3",133,0)
 . S A=""
"RTN","IBTRH3",134,0)
 . F  S A=$O(^TMP("IBTRH3E",$J,"DILIST","ID",A)) Q:A=""  D
"RTN","IBTRH3",135,0)
 . . S B=^(A,.07) S ^TMP("IBTRH3E",$J,"XLIST",B,$G(^TMP("IBTRH3E",$J,"DILIST",1,A)))=A
"RTN","IBTRH3",136,0)
 . S Z=0,(A,B)=""
"RTN","IBTRH3",137,0)
 . F  S A=$O(^TMP("IBTRH3E",$J,"XLIST",A)) Q:A=""  D   ; Appt/Adm
"RTN","IBTRH3",138,0)
 . . S B=""
"RTN","IBTRH3",139,0)
 . . F  S B=$O(^TMP("IBTRH3E",$J,"XLIST",A,B)) Q:B=""  S Z1=$G(^(B)) D    ; Date Entered
"RTN","IBTRH3",140,0)
 . . . S Z=Z+1
"RTN","IBTRH3",141,0)
 . . . S ^TMP("IBTRH3E",$J,"XLISTNO",Z)=A_U_B_U_Z1
"RTN","IBTRH3",142,0)
 . S X=1
"RTN","IBTRH3",143,0)
 Q X
"RTN","IBTRH3",144,0)
 ;
"RTN","IBTRH3",145,0)
COMPILE(IBTRNM,IBTRSPEC)    ; -- Compile the data
"RTN","IBTRH3",146,0)
 K ^TMP(IBTRNM,$J)
"RTN","IBTRH3",147,0)
 ;
"RTN","IBTRH3",148,0)
 ; Compile Data
"RTN","IBTRH3",149,0)
 D SETDATA,BLD
"RTN","IBTRH3",150,0)
 Q
"RTN","IBTRH3",151,0)
 ;
"RTN","IBTRH3",152,0)
SETDATA ; -- Set up the data
"RTN","IBTRH3",153,0)
 N SQ,SQ1,SQ2,SQ3,SQ4,X,IBTRNO
"RTN","IBTRH3",154,0)
 S IBTRNO=IBTRSPEC("IBTEVENT")
"RTN","IBTRH3",155,0)
 S DATA(0)=$G(^IBT(356.22,IBTRNO,0))
"RTN","IBTRH3",156,0)
 ;
"RTN","IBTRH3",157,0)
 I $D(^IBT(356.22,IBTRNO,1)) D    ; Comments Multiple.
"RTN","IBTRH3",158,0)
 . S SQ="" F  S SQ=$O(^IBT(356.22,IBTRNO,1,SQ)) Q:SQ=""  S DATA(1,SQ,0)=$G(^IBT(356.22,IBTRNO,1,SQ,0))
"RTN","IBTRH3",159,0)
 ;
"RTN","IBTRH3",160,0)
 S DATA(2)=$G(^IBT(356.22,IBTRNO,2))
"RTN","IBTRH3",161,0)
 ;
"RTN","IBTRH3",162,0)
 I $D(^IBT(356.22,IBTRNO,3)) D    ; Patient Diagnosis Multiple.
"RTN","IBTRH3",163,0)
 . S SQ=0 F  S SQ=$O(^IBT(356.22,IBTRNO,3,SQ)) Q:SQ=""  S DATA(3,SQ,0)=$G(^IBT(356.22,IBTRNO,3,SQ,0))
"RTN","IBTRH3",164,0)
 ;
"RTN","IBTRH3",165,0)
 S DATA(4)=$G(^IBT(356.22,IBTRNO,4))
"RTN","IBTRH3",166,0)
 S DATA(7)=$G(^IBT(356.22,IBTRNO,7))
"RTN","IBTRH3",167,0)
 S DATA(8)=$G(^IBT(356.22,IBTRNO,8))
"RTN","IBTRH3",168,0)
 S DATA(9)=$G(^IBT(356.22,IBTRNO,9))
"RTN","IBTRH3",169,0)
 S DATA(10)=$G(^IBT(356.22,IBTRNO,10))
"RTN","IBTRH3",170,0)
 ;
"RTN","IBTRH3",171,0)
 I $D(^IBT(356.22,IBTRNO,11)) D    ; Attachments Multiple.
"RTN","IBTRH3",172,0)
 . S SQ=0 F  S SQ=$O(^IBT(356.22,IBTRNO,11,SQ)) Q:(SQ="")!('+SQ)  S DATA(11,SQ,0)=$G(^IBT(356.22,IBTRNO,11,SQ,0))
"RTN","IBTRH3",173,0)
 ;
"RTN","IBTRH3",174,0)
 I $D(^IBT(356.22,IBTRNO,12)) D
"RTN","IBTRH3",175,0)
 . N SQ1,TEXT
"RTN","IBTRH3",176,0)
 . S SQ=0 F  S SQ=$O(^IBT(356.22,IBTRNO,12,SQ)) Q:SQ=""  D
"RTN","IBTRH3",177,0)
 . . S TEXT=$G(^IBT(356.22,IBTRNO,12,SQ,0))
"RTN","IBTRH3",178,0)
 . . I $L(TEXT)>80 D  Q
"RTN","IBTRH3",179,0)
 . . . N SAV,X1,END
"RTN","IBTRH3",180,0)
 . . . S END=$L(TEXT," ")
"RTN","IBTRH3",181,0)
 . . . F I=1:1:END S X1=$P(TEXT," ",I) D
"RTN","IBTRH3",182,0)
 . . . . I X1="",$G(SAV)="" Q
"RTN","IBTRH3",183,0)
 . . . . I X1="" S X1=" "
"RTN","IBTRH3",184,0)
 . . . . I $L(X1)+$L($G(SAV))<78 S:$G(SAV)'="" SAV=SAV_" " S SAV=$G(SAV)_X1 Q
"RTN","IBTRH3",185,0)
 . . . . S SQ1=$G(SQ1)+1,DATA(12,SQ1)=SAV,SAV=X1
"RTN","IBTRH3",186,0)
 . . . I $G(SAV)'="" S SQ1=$G(SQ1)+1,DATA(12,SQ1)=SAV
"RTN","IBTRH3",187,0)
 . . . S DATA(12,0)=SQ1
"RTN","IBTRH3",188,0)
 . . S SQ1=$G(SQ1)+1,DATA(12,SQ1)=TEXT
"RTN","IBTRH3",189,0)
 . . S DATA(12,0)=+SQ1
"RTN","IBTRH3",190,0)
 ;
"RTN","IBTRH3",191,0)
 I $D(^IBT(356.22,IBTRNO,13)) D    ; Patient Event Provider Multiple.
"RTN","IBTRH3",192,0)
 . S SQ1=0 F  S SQ1=$O(^IBT(356.22,IBTRNO,13,SQ1)) Q:SQ1=""  D
"RTN","IBTRH3",193,0)
 . . I SQ1'?.N Q
"RTN","IBTRH3",194,0)
 . . S SQ2="" F SQ2=0:1:5 S DATA(13,SQ1,SQ2)=$G(^IBT(356.22,IBTRNO,13,SQ1,SQ2))
"RTN","IBTRH3",195,0)
 ;
"RTN","IBTRH3",196,0)
 I $D(^IBT(356.22,IBTRNO,14)) D    ; Patient Event Transport Multiple.
"RTN","IBTRH3",197,0)
 . S SQ="" F  S SQ=$O(^IBT(356.22,IBTRNO,14,SQ)) Q:SQ=""  S DATA(14,SQ,0)=$G(^IBT(356.22,IBTRNO,14,SQ,0))
"RTN","IBTRH3",198,0)
 ;
"RTN","IBTRH3",199,0)
 I $D(^IBT(356.22,IBTRNO,15)) D    ; Other UMO Multiple.
"RTN","IBTRH3",200,0)
 . S SQ="" F  S SQ=$O(^IBT(356.22,IBTRNO,15,SQ)) Q:SQ=""  S DATA(15,SQ,0)=$G(^IBT(356.22,IBTRNO,15,SQ,0))
"RTN","IBTRH3",201,0)
 ;
"RTN","IBTRH3",202,0)
 ;
"RTN","IBTRH3",203,0)
 I $D(^IBT(356.22,IBTRNO,16)) D    ; Service Line Multiple.
"RTN","IBTRH3",204,0)
 . S SQ1=0 S DATA(16,0)=$G(^IBT(356.22,IBTRNO,16,0))
"RTN","IBTRH3",205,0)
 . F  S SQ1=$O(^IBT(356.22,IBTRNO,16,SQ1)) Q:SQ1=""  D      ; Service Line Item.
"RTN","IBTRH3",206,0)
 . . I SQ1'?.N Q
"RTN","IBTRH3",207,0)
 . . S DATA(16,SQ1,0)=$G(^IBT(356.22,IBTRNO,16,SQ1,0))
"RTN","IBTRH3",208,0)
 . . S SQ2=0 F  S SQ2=$O(^IBT(356.22,IBTRNO,16,SQ1,SQ2)) Q:SQ2=""  D     ; Service Line Item sub-record.
"RTN","IBTRH3",209,0)
 . . . I SQ2'?.N Q
"RTN","IBTRH3",210,0)
 . . . I "^4^6^7^8^10^"[(U_SQ2_U) D  Q  ; Service Line Item sub-record is a multiple.
"RTN","IBTRH3",211,0)
 . . . . ; (i.e.,  ^IBT(356.22,IBTRNO,16,1,6,0))
"RTN","IBTRH3",212,0)
 . . . . S DATA(16,SQ1,SQ2,0)=$G(^IBT(356.22,IBTRNO,SQ1,SQ2,0))
"RTN","IBTRH3",213,0)
 . . . . S SQ3=0 F  S SQ3=$O(^IBT(356.22,IBTRNO,16,SQ1,SQ2,SQ3)) Q:SQ3=""  D
"RTN","IBTRH3",214,0)
 . . . . . I SQ3'?.N Q
"RTN","IBTRH3",215,0)
 . . . . . ; (i.e.,  ^IBT(356.22,IBTRNO,16,1,6,1,0))
"RTN","IBTRH3",216,0)
 . . . . . S DATA(16,SQ1,SQ2,SQ3,0)=$G(^IBT(356.22,IBTRNO,16,SQ1,SQ2,SQ3,0))
"RTN","IBTRH3",217,0)
 . . . . . S SQ4="" F  S SQ4=$O(^IBT(356.22,IBTRNO,16,SQ1,SQ2,SQ3,SQ4)) Q:SQ4=""  D
"RTN","IBTRH3",218,0)
 . . . . . . I SQ4'?.N Q
"RTN","IBTRH3",219,0)
 . . . . . . ; (ie., ^IBT(356.22,IBTRNO,16,1,8,1,0-5,0))
"RTN","IBTRH3",220,0)
 . . . . . . S DATA(16,SQ1,SQ2,SQ3,SQ4,0)=$G(^IBT(356.22,IBTRNO,16,SQ1,SQ2,SQ3,SQ4,0))
"RTN","IBTRH3",221,0)
 . . . . Q
"RTN","IBTRH3",222,0)
 . . . ; These sub-records are not multiples.
"RTN","IBTRH3",223,0)
 . . . S DATA(16,SQ1,SQ2)=$G(^IBT(356.22,IBTRNO,16,SQ1,SQ2))   ; This is true of sub-records 0,1,2,3,5,7,9,11.
"RTN","IBTRH3",224,0)
 ;
"RTN","IBTRH3",225,0)
 ;
"RTN","IBTRH3",226,0)
 S DATA(17)=$G(^IBT(356.22,IBTRNO,17))
"RTN","IBTRH3",227,0)
 S DATA(18)=$G(^IBT(356.22,IBTRNO,18))
"RTN","IBTRH3",228,0)
 S DATA(19)=$G(^IBT(356.22,IBTRNO,19))
"RTN","IBTRH3",229,0)
 S DATA(20)=$G(^IBT(356.22,IBTRNO,20))
"RTN","IBTRH3",230,0)
 S DATA(21)=$G(^IBT(356.22,IBTRNO,21))
"RTN","IBTRH3",231,0)
 S DATA(22)=$G(^IBT(356.22,IBTRNO,22))
"RTN","IBTRH3",232,0)
 ;
"RTN","IBTRH3",233,0)
 I $D(^IBT(356.22,IBTRNO,101)) D    ; AAA Segment Multiple.
"RTN","IBTRH3",234,0)
 . S SQ=0 S DATA(101,0)=$G(^IBT(356.22,IBTRNO,101,0))
"RTN","IBTRH3",235,0)
 . F  S SQ=$O(^IBT(356.22,IBTRNO,101,SQ)) Q:SQ=""  S DATA(101,SQ,0)=$G(^IBT(356.22,IBTRNO,101,SQ,0))
"RTN","IBTRH3",236,0)
 ;
"RTN","IBTRH3",237,0)
 S DATA(103,0)=$G(^IBT(356.22,IBTRNO,103))
"RTN","IBTRH3",238,0)
 ;
"RTN","IBTRH3",239,0)
 I $D(^IBT(356.22,IBTRNO,105)) D    ; TRN Segment Multiple.
"RTN","IBTRH3",240,0)
 . S SQ=0 S DATA(105,0)=$G(^IBT(356.22,IBTRNO,105,0))
"RTN","IBTRH3",241,0)
 . F  S SQ=$O(^IBT(356.22,IBTRNO,105,SQ)) Q:SQ=""  S DATA(105,SQ,0)=$G(^IBT(356.22,IBTRNO,105,SQ,0))
"RTN","IBTRH3",242,0)
 ;
"RTN","IBTRH3",243,0)
 I $D(^IBT(356.22,IBTRNO,107)) D    ; HI Segment Multiple.
"RTN","IBTRH3",244,0)
 . S SQ=0 S DATA(107,0)=$G(^IBT(356.22,IBTRNO,107,0))
"RTN","IBTRH3",245,0)
 . F  S SQ=$O(^IBT(356.22,IBTRNO,107,SQ)) Q:SQ=""  S DATA(107,SQ,0)=$G(^IBT(356.22,IBTRNO,107,SQ,0))
"RTN","IBTRH3",246,0)
 Q
"RTN","IBTRH3",247,0)
 ;
"RTN","IBTRH3",248,0)
BLD ; charges, as they would display on the bill
"RTN","IBTRH3",249,0)
 S VALMCNT=0
"RTN","IBTRH3",250,0)
 D EN2^IBTRH2(IBTRNM,IBTRIEN)   ; Get the Group Insurance information.
"RTN","IBTRH3",251,0)
 D GETINFO^IBTRH3A(IBTRNM,IBTRIEN)
"RTN","IBTRH3",252,0)
 Q
"RTN","IBTRH3",253,0)
 ;
"RTN","IBTRH3",254,0)
NODP ; No Response Pending for this selection.
"RTN","IBTRH3",255,0)
 D FULL^VALM1
"RTN","IBTRH3",256,0)
 W !!,"  No Response Pending to view."
"RTN","IBTRH3",257,0)
 D PAUSE^VALM1 S VALMBCK="R"
"RTN","IBTRH3",258,0)
 Q
"RTN","IBTRH3",259,0)
 ;
"RTN","IBTRH3",260,0)
SETDLN(DLN,SPEC) ; Add Display Line to ^TMP global.
"RTN","IBTRH3",261,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRH3",262,0)
 S ^TMP(IBTRNM,$J,VALMCNT,0)=DLN
"RTN","IBTRH3",263,0)
 I $G(SPEC)="B" D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM)
"RTN","IBTRH3",264,0)
 Q
"RTN","IBTRH3",265,0)
 ;
"RTN","IBTRH3",266,0)
GTXNMY(VARPTR) ; API to obtain a Provider's Taxonomy Code and Person Class.
"RTN","IBTRH3",267,0)
 ; INPUT:  VARPTR is the variable pointer to the Provider.
"RTN","IBTRH3",268,0)
 ;   It can point to 1 of the 3 following globals:
"RTN","IBTRH3",269,0)
 ;     "ien;VA(200"      points to the VA Individual Provider global
"RTN","IBTRH3",270,0)
 ;     "ien;DIC(4"       points to the VA Institutional Provider global
"RTN","IBTRH3",271,0)
 ;     "ien;IBA(355.93"  points to the non-VA Provider global
"RTN","IBTRH3",272,0)
 ;   where the ien is the internal identifier to the specified global.
"RTN","IBTRH3",273,0)
 ;
"RTN","IBTRH3",274,0)
 ; OUTPUT:  TAXNMY will contain Taxonomy Results in 2 pieces:
"RTN","IBTRH3",275,0)
 ;     Piece 1:  will contain the Taxonomy Code
"RTN","IBTRH3",276,0)
 ;     Piece 2:  will contain the Person Class Description.
"RTN","IBTRH3",277,0)
 N RESULTS,TAXNMY,PC1,PC2
"RTN","IBTRH3",278,0)
 S (RESULTS,TAXNMY)=""
"RTN","IBTRH3",279,0)
 S PC1=$P(VARPTR,";",1),PC2=$P(VARPTR,";",2)
"RTN","IBTRH3",280,0)
 I PC2["VA(200" S RESULTS=$$TAXIND^XUSTAX(PC1)  ; Get Taxonomy for VA Individual Provider
"RTN","IBTRH3",281,0)
 I PC2["DIC(4" S RESULTS=$$TAXORG^XUSTAX(PC1)   ; Get Taxonomy for VA Institutional Provider
"RTN","IBTRH3",282,0)
 I PC2["IBA(355.93" S RESULTS=$$TAXGET^IBCEP81(PC1)  ; Get Taxonomy for Non-VA Provider
"RTN","IBTRH3",283,0)
 I '+$P(RESULTS,U,2) Q TAXNMY
"RTN","IBTRH3",284,0)
 S TAXNMY=$P(RESULTS,U,1)   ; Taxonomy Code
"RTN","IBTRH3",285,0)
 S $P(TAXNMY,U,2)=$$GET1^DIQ(8932.1,+$P(RESULTS,U,2),.01)  ; Person Class description
"RTN","IBTRH3",286,0)
 Q TAXNMY
"RTN","IBTRH3",287,0)
 ;
"RTN","IBTRH3",288,0)
HELP ; -- help code
"RTN","IBTRH3",289,0)
 D FULL^VALM1
"RTN","IBTRH3",290,0)
 W !!,"This option displays the view of a Healthcare Services Review Response."
"RTN","IBTRH3",291,0)
 D PAUSE^VALM1 S VALMBCK="R"
"RTN","IBTRH3",292,0)
 Q
"RTN","IBTRH3",293,0)
 ;
"RTN","IBTRH3",294,0)
EXIT ; -- exit code
"RTN","IBTRH3",295,0)
 K ^TMP("IBTRH3",$J)
"RTN","IBTRH3",296,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBTRH3",297,0)
 Q
"RTN","IBTRH3",298,0)
 ;
"RTN","IBTRH3",299,0)
PRMARK(WHICH)   ;EP
"RTN","IBTRH3",300,0)
 ; Listman Protocol Action to Mark/Remove 'In-Progress' from a selected entry
"RTN","IBTRH3",301,0)
 ; from the expand entry worklist
"RTN","IBTRH3",302,0)
 ; Input:   WHICH   - 0 - Remove 'In-Progress' mark
"RTN","IBTRH3",303,0)
 ;                    1 - Set 'In-Progress' mark
"RTN","IBTRH3",304,0)
 ;          IBTRIEN - IEN of the Expanded Entry being marked/removed
"RTN","IBTRH3",305,0)
 N STATUS
"RTN","IBTRH3",306,0)
 D PRMARK^IBTRH1(WHICH,IBTRIEN,"IBTRH5IX")
"RTN","IBTRH3",307,0)
 S STATUS=$$GET1^DIQ(356.22,IBTRIEN_",",.21,"I")
"RTN","IBTRH3",308,0)
 I WHICH=1 D  Q
"RTN","IBTRH3",309,0)
 . I +STATUS=1 S VALMSG="Entry has been Marked" Q
"RTN","IBTRH3",310,0)
 . S VALMSG="Nothing Done"
"RTN","IBTRH3",311,0)
 ;
"RTN","IBTRH3",312,0)
 I +STATUS=0 S VALMSG="Entry has been Unmarked" Q
"RTN","IBTRH3",313,0)
 S VALMSG="Nothing Done"
"RTN","IBTRH3",314,0)
 Q
"RTN","IBTRH3",315,0)
 ;
"RTN","IBTRH3A")
0^17^B156802114^n/a
"RTN","IBTRH3A",1,0)
IBTRH3A ;ALB/VAD - IBT HCSR RESPONSE VIEW - Display set up ;02-JUN-2014
"RTN","IBTRH3A",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH3A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH3A",4,0)
 ;
"RTN","IBTRH3A",5,0)
 Q
"RTN","IBTRH3A",6,0)
 ;
"RTN","IBTRH3A",7,0)
GETINFO(IBTRNM,IBTRIEN) ; Get data items, as they would display on the bill
"RTN","IBTRH3A",8,0)
 N DLN
"RTN","IBTRH3A",9,0)
 D GETUMO(),GETPAT(),GETSVC^IBTRH3B()
"RTN","IBTRH3A",10,0)
 Q
"RTN","IBTRH3A",11,0)
 ;
"RTN","IBTRH3A",12,0)
GETUMO() ; Get the UMO Contact Information
"RTN","IBTRH3A",13,0)
 N GOTONE,SQ,X
"RTN","IBTRH3A",14,0)
 Q:'$G(IBTRIEN)
"RTN","IBTRH3A",15,0)
 D SETDLN("")
"RTN","IBTRH3A",16,0)
 S DLN="  UMO Contact Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",17,0)
 I $TR($G(DATA(19)),"^","")'="" D
"RTN","IBTRH3A",18,0)
 . S DLN="  UMO Name:  "_$P($G(DATA(19)),U,1) D SETDLN(DLN)  ;[356.2219,.01]
"RTN","IBTRH3A",19,0)
 . S DLN="  UMO Contact #:  "
"RTN","IBTRH3A",20,0)
 . I $P($G(DATA(19)),U,2)'=""!($L($G(DATA(20)))) D   ;[356.2219,2]
"RTN","IBTRH3A",21,0)
 . . S DLN=DLN_$$EXTERNAL^DILFD(356.22,19.01,,+$P($G(DATA(19)),U,2))
"RTN","IBTRH3A",22,0)
 . . S DLN=DLN_": "_$G(DATA(20)) D SETDLN(DLN)
"RTN","IBTRH3A",23,0)
 . F X=2,3 I $L($G(DATA(19+X))) D   ;[356.22,21-22]
"RTN","IBTRH3A",24,0)
 . . S DLN="",$E(DLN,19)=$$EXTERNAL^DILFD(356.22,(19+(X*.01)),,+$P($G(DATA(19)),U,X))
"RTN","IBTRH3A",25,0)
 . . S DLN=DLN_": "_$G(DATA(20+X)) D SETDLN(DLN)
"RTN","IBTRH3A",26,0)
 . D SETDLN("")
"RTN","IBTRH3A",27,0)
 I $TR($G(DATA(19)),"^","")="" S DLN="  No UMO Contact Information" D SETDLN(DLN)
"RTN","IBTRH3A",28,0)
 Q
"RTN","IBTRH3A",29,0)
 ;
"RTN","IBTRH3A",30,0)
GETPAT() ; Get the Patient Event Detail
"RTN","IBTRH3A",31,0)
 N DLN,GOTONE,PRVPTR,PRVDATA,SQ,SQCNT,TAXNMY,VAL1,VAL3
"RTN","IBTRH3A",32,0)
 Q:'$G(IBTRIEN)
"RTN","IBTRH3A",33,0)
 S $E(DLN,32)="PATIENT EVENT DETAIL" D SETDLN(DLN)
"RTN","IBTRH3A",34,0)
 I $G(DATA(105))'="" D
"RTN","IBTRH3A",35,0)
 . S DLN="  Patient Event Trace Number:  "
"RTN","IBTRH3A",36,0)
 . S SQ=0 F  S SQ=$O(DATA(105,SQ)) Q:SQ=""  D
"RTN","IBTRH3A",37,0)
 . . S $E(DLN,32)=$P(DATA(105,SQ,0),U,4) D SETDLN(DLN) S DLN=""  ;[356.22105,.04]
"RTN","IBTRH3A",38,0)
 D SETDLN("")
"RTN","IBTRH3A",39,0)
 ; - Health Care Services Review info -
"RTN","IBTRH3A",40,0)
 S DLN="  Health Care Services Review" D SETDLN(DLN,"B")
"RTN","IBTRH3A",41,0)
 I $TR($G(DATA(103,0)),"^","")'="" D
"RTN","IBTRH3A",42,0)
 . S VAL1=$P($G(DATA(103,0)),U,1)_",",VAL3=$P($G(DATA(103,0)),U,3)_","
"RTN","IBTRH3A",43,0)
 . S DLN="  Certification Action:  "
"RTN","IBTRH3A",44,0)
 . I $L($$GET1^DIQ(356.02,VAL1,.01)) S DLN=DLN_$$GET1^DIQ(356.02,VAL1,.01)_" - "_$$GET1^DIQ(356.02,VAL1,.02)  ;[356.22,103.01]
"RTN","IBTRH3A",45,0)
 . D SETDLN(DLN)
"RTN","IBTRH3A",46,0)
 . S DLN="  Certification/Authorization #:  " S DLN=DLN_$P($G(DATA(103,0)),U,2) D SETDLN(DLN)  ;[356.22,103.02]
"RTN","IBTRH3A",47,0)
 . S DLN="  Review Decision Reason:  "
"RTN","IBTRH3A",48,0)
 . I $L($$GET1^DIQ(356.021,VAL3,.01)) S DLN=DLN_$$GET1^DIQ(356.021,VAL3,.01)_" - "_$E($$GET1^DIQ(356.021,VAL3,.02),1,45)  ;[356.22,103.03]
"RTN","IBTRH3A",49,0)
 . D SETDLN(DLN)
"RTN","IBTRH3A",50,0)
 . S DLN="  Second Surgical Opinion Ind:  " S DLN=DLN_$P($G(DATA(103,0)),U,4) D SETDLN(DLN)  ;[356.22,103.04]
"RTN","IBTRH3A",51,0)
 . D SETDLN("")
"RTN","IBTRH3A",52,0)
 S DLN="  Previous Admin Ref #:  " S DLN=DLN_$P($G(DATA(17)),U,2) D SETDLN(DLN)  ;[356.22,17.02]
"RTN","IBTRH3A",53,0)
 S DLN="  Previous Review Autho #:  " S DLN=DLN_$P($G(DATA(17)),U,1) D SETDLN(DLN)  ;[356.22,17.01]
"RTN","IBTRH3A",54,0)
 S DLN="  Proposed/Actual "_$S($P($G(DATA(0)),U,4)="I":"Admission",1:"Appointment")_" Date:  "   ;[356.22,.04]
"RTN","IBTRH3A",55,0)
 S DLN=DLN_$$FMTE^XLFDT($P($G(DATA(0)),U,7)) D SETDLN(DLN)  ;[356.22,.07]
"RTN","IBTRH3A",56,0)
 S DLN="  Proposed or Discharge Date:  " S DLN=DLN_$$FMTE^XLFDT($P($G(DATA(2)),U,22)) D SETDLN(DLN)  ;[356.22,2.22]
"RTN","IBTRH3A",57,0)
 S DLN="  Cert. Effective Date:  " S DLN=DLN_$$FMTE^XLFDT($P($G(DATA(2)),U,25))
"RTN","IBTRH3A",58,0)
 I $P($G(DATA(2)),U,26)'="" S DLN=DLN_" - "_$$FMTE^XLFDT($P($G(DATA(2)),U,26))
"RTN","IBTRH3A",59,0)
 D SETDLN(DLN)  ;[356.22,2.25] - [356.22,2.26]
"RTN","IBTRH3A",60,0)
 S DLN="  Cert. Issue Date:  " S DLN=DLN_$$FMTE^XLFDT($P($G(DATA(2)),U,23))  ;[356.22,2.23]
"RTN","IBTRH3A",61,0)
 S $E(DLN,44)="Cert. Expiration Date:  " S DLN=DLN_$$FMTE^XLFDT($P($G(DATA(2)),U,24)) D SETDLN(DLN)  ;[356.22,2.24]
"RTN","IBTRH3A",62,0)
 D SETDLN("")
"RTN","IBTRH3A",63,0)
 ; - Health Care Services Delivery info -
"RTN","IBTRH3A",64,0)
 S DLN="  Health Care Services Delivery" D SETDLN(DLN,"B")
"RTN","IBTRH3A",65,0)
 I $TR($G(DATA(4)),"^","")'="" D
"RTN","IBTRH3A",66,0)
 . S DLN="  Quantity Qualifier:  " S DLN=DLN_$$GET1^DIQ(365.016,+$P($G(DATA(4)),U,1),.02)  ;[356.22,4.01]
"RTN","IBTRH3A",67,0)
 . S $E(DLN,44)="Service Unit Count:  " S DLN=DLN_$P($G(DATA(4)),U,2) D SETDLN(DLN)  ;[356.22,4.02]
"RTN","IBTRH3A",68,0)
 . S DLN="  Unit/Basis for Measure Code:  " S DLN=DLN_$$EXTERNAL^DILFD(356.22,4.03,,$P($G(DATA(4)),U,3))  ;[356.22,4.03]
"RTN","IBTRH3A",69,0)
 . S $E(DLN,44)="Sample Selection Modulus:  " S DLN=DLN_$P($G(DATA(4)),U,4) D SETDLN(DLN)  ;[356.22,4.04]
"RTN","IBTRH3A",70,0)
 . S DLN="  Time Period Qualifier:  " S DLN=DLN_$$GET1^DIQ(365.015,+$P($G(DATA(4)),U,5),.02)  ;[356.22,4.05]
"RTN","IBTRH3A",71,0)
 . S $E(DLN,44)="  Period Count:  " S DLN=DLN_$P($G(DATA(4)),U,6) D SETDLN(DLN)  ;[356.22,4.06]
"RTN","IBTRH3A",72,0)
 . S DLN="  Delivery Frequency:  " S DLN=DLN_$$GET1^DIQ(365.025,+$P($G(DATA(4)),U,7),.02) D SETDLN(DLN)  ;[356.22,4.07]
"RTN","IBTRH3A",73,0)
 . S DLN="  Delivery Pattern:  " S DLN=DLN_$$GET1^DIQ(356.007,+$P($G(DATA(4)),U,8),.02) D SETDLN(DLN)  ;[356.22,4.08]
"RTN","IBTRH3A",74,0)
 I $G(DATA(4))="" S DLN="  No Health Care Services Delivery Information" D SETDLN(DLN)
"RTN","IBTRH3A",75,0)
 D SETDLN("")
"RTN","IBTRH3A",76,0)
 ; - Patient Diagnosis info -
"RTN","IBTRH3A",77,0)
 S DLN="  Patient Diagnosis Information" D SETDLN(DLN,"B")   ; Up to 12 Dx Code(s) & Date(s)
"RTN","IBTRH3A",78,0)
 S GOTONE=0
"RTN","IBTRH3A",79,0)
 S SQ="" F  S SQ=$O(DATA(3,SQ)) Q:SQ=""  D
"RTN","IBTRH3A",80,0)
 . I '+SQ Q
"RTN","IBTRH3A",81,0)
 . S GOTONE=1
"RTN","IBTRH3A",82,0)
 . S DLN="  Diagnosis Type:  "_$$GET1^DIQ(356.006,+$P($G(DATA(3,SQ,0)),U,1),.02) D SETDLN(DLN)  ;[356.223,.01]
"RTN","IBTRH3A",83,0)
 . S DLN="  Diagnosis Code:  "_$$EXTERNAL^DILFD(356.223,.02,,$P($G(DATA(3,SQ,0)),U,2)) D SETDLN(DLN)  ;[356.223,.02]
"RTN","IBTRH3A",84,0)
 . S DLN="  Diagnosis Date:  "_$$FMTE^XLFDT($P($G(DATA(3,SQ,0)),U,3)) D SETDLN(DLN)  ;[356.223,.03]
"RTN","IBTRH3A",85,0)
 . D SETDLN("")
"RTN","IBTRH3A",86,0)
 I 'GOTONE S DLN="  No Diagnosis Information" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3A",87,0)
 ; 
"RTN","IBTRH3A",88,0)
 ; - Institutional Claim Code info -
"RTN","IBTRH3A",89,0)
 I $P($G(DATA(7)),U,3)'="" D
"RTN","IBTRH3A",90,0)
 . S DLN="  Institutional Claim Code" D SETDLN(DLN,"B")
"RTN","IBTRH3A",91,0)
 . S DLN="  Admission Type Code:" S DLN=DLN_$$EXTERNAL^DILFD(356.22,7.01,,$P($G(DATA(7)),U,1))  ;[356.22,7.01]
"RTN","IBTRH3A",92,0)
 . S $E(DLN,44)="  Admission Source Code:  " S DLN=DLN_$$GET1^DIQ(356.009,+$P($G(DATA(7)),U,1),.02) D SETDLN(DLN)  ;[356.22,7.02]
"RTN","IBTRH3A",93,0)
 . S DLN="  Patient Status Code:  " S DLN=DLN_$$EXTERNAL^DILFD(356.22,.04,,$P($G(DATA(0)),U,4)) D SETDLN(DLN)  ;[356.22,.04]
"RTN","IBTRH3A",94,0)
 . D SETDLN("")
"RTN","IBTRH3A",95,0)
 ;
"RTN","IBTRH3A",96,0)
 ; - Ambulance Transport info -
"RTN","IBTRH3A",97,0)
 S DLN="  Ambulance Transport Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",98,0)
 I $TR($G(DATA(18)),"^","")'=""!($P($G(DATA(4)),U,3)'="") D
"RTN","IBTRH3A",99,0)
 . S DLN="  Ambulance Transport Code:  " S DLN=DLN_$$EXTERNAL^DILFD(356.22,18.03,,$P($G(DATA(18)),U,3))  ;[356.22,18.03]
"RTN","IBTRH3A",100,0)
 . S $E(DLN,44)="Unit/Basis for Measure Code:  " S DLN=DLN_$$EXTERNAL^DILFD(356.22,18.01,,$P($G(DATA(4)),U,3)) D SETDLN(DLN)  ;[356.22,18.01]
"RTN","IBTRH3A",101,0)
 . S DLN="  Transport Distance:  " S DLN=DLN_$P($G(DATA(18)),U,6) D SETDLN(DLN)  ;[356.22,18.06]
"RTN","IBTRH3A",102,0)
 I $TR($G(DATA(18)),"^","")="",$P($G(DATA(4)),U,3)="" S DLN="  No Ambulance Transport Information" D SETDLN(DLN)
"RTN","IBTRH3A",103,0)
 D SETDLN("")
"RTN","IBTRH3A",104,0)
 ; - Spinal Manipulation Service info -
"RTN","IBTRH3A",105,0)
 S DLN="  Spinal Manipulation Service Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",106,0)
 I $TR($G(DATA(7)),"^","")'="" D
"RTN","IBTRH3A",107,0)
 . S DLN="  Treatment Series Number:  "_$P(DATA(7),U,5)  ;[356.22,7.05]
"RTN","IBTRH3A",108,0)
 . S $E(DLN,44)="Treatment Count:  "_$P(DATA(7),U,6) D SETDLN(DLN)  ;[356.22,7.06]
"RTN","IBTRH3A",109,0)
 . S DLN="  Subluxation Level Code 1:  "_$$GET1^DIQ(356.012,+$P(DATA(7),U,7),.02) D SETDLN(DLN)  ;[356.22,7.07]
"RTN","IBTRH3A",110,0)
 . S DLN="  Subluxation Level Code 2:  "_$$GET1^DIQ(356.012,+$P(DATA(7),U,8),.02) D SETDLN(DLN)  ;[356.22,7.08]
"RTN","IBTRH3A",111,0)
 I $TR($G(DATA(7)),"^","")="" S DLN="  No Spinal Manipulation Service Information" D SETDLN(DLN)
"RTN","IBTRH3A",112,0)
 D SETDLN("")
"RTN","IBTRH3A",113,0)
 ; - Home Oxygen Therapy info -
"RTN","IBTRH3A",114,0)
 S DLN="  Home Oxygen Therapy Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",115,0)
 I $TR($G(DATA(8)),"^","")'=""!($TR($G(DATA(9)),"^","")'="") D
"RTN","IBTRH3A",116,0)
 . S DLN="  Oxygen Equipment Type Code 1:  "_$$GET1^DIQ(356.013,+$P($G(DATA(8)),U,1),.02) D SETDLN(DLN)  ;[356.22,8.01]
"RTN","IBTRH3A",117,0)
 . S DLN="  Oxygen Equipment Type Code 2:  "_$$GET1^DIQ(356.013,+$P($G(DATA(8)),U,2),.02) D SETDLN(DLN)  ;[356.22,8.02]
"RTN","IBTRH3A",118,0)
 . S DLN="  Oxygen Equipment Type Code 3:  "_$$GET1^DIQ(356.013,+$P($G(DATA(8)),U,3),.02) D SETDLN(DLN)  ;[356.22,8.03]
"RTN","IBTRH3A",119,0)
 . S DLN="  Oxygen Flow Rate:  "_$P($G(DATA(8)),U,5)  ;[356.22,8.05]
"RTN","IBTRH3A",120,0)
 . S $E(DLN,44)="Daily Oxygen Use Count:  "_$P($G(DATA(8)),U,6) D SETDLN(DLN)  ;[356.22,8.06]
"RTN","IBTRH3A",121,0)
 . S DLN="  Oxygen Use Period Hour Count:  "_$P($G(DATA(8)),U,7) D SETDLN(DLN)  ;[356.22,8.07]
"RTN","IBTRH3A",122,0)
 . S DLN="  Respiratory Therapist Order Text:  "_$P($G(DATA(8)),U,8) D SETDLN(DLN)  ;[356.22,8.08]
"RTN","IBTRH3A",123,0)
 . S DLN="  Arterial Blood Gas Quantity:  "_$P($G(DATA(9)),U,1) D SETDLN(DLN)  ;[356.22,9.01]
"RTN","IBTRH3A",124,0)
 . S DLN="  Oxygen Saturation Quantity:  "_$P($G(DATA(9)),U,2) D SETDLN(DLN)  ;[356.22,9.02]
"RTN","IBTRH3A",125,0)
 . S DLN="  Oxygen Test Condition:  "_$$GET1^DIQ(356.014,+$P($G(DATA(9)),U,3),.02) D SETDLN(DLN)  ;[356.22,9.03]
"RTN","IBTRH3A",126,0)
 . S DLN="  Oxygen Test Findings #1:  "_$E($$GET1^DIQ(356.015,+$P($G(DATA(9)),U,4),.02),1,50) D SETDLN(DLN)  ;[356.22,9.04]
"RTN","IBTRH3A",127,0)
 . S DLN="  Oxygen Test Findings #2:  "_$E($$GET1^DIQ(356.015,+$P($G(DATA(9)),U,5),.02),1,50) D SETDLN(DLN)  ;[356.22,9.05]
"RTN","IBTRH3A",128,0)
 . S DLN="  Oxygen Test Findings #3:  "_$E($$GET1^DIQ(356.015,+$P($G(DATA(9)),U,6),.02),1,50) D SETDLN(DLN)  ;[356.22,9.06]
"RTN","IBTRH3A",129,0)
 . S DLN="  Portable Oxygen System Flow Rate:  "_$P($G(DATA(9)),U,7) D SETDLN(DLN)  ;[356.22,9.07]
"RTN","IBTRH3A",130,0)
 . S DLN="  Oxygen Delivery System Code:  "_$E($$GET1^DIQ(356.016,+$P($G(DATA(9)),U,8),.02),1,40) D SETDLN(DLN)  ;[356.22,9.08]
"RTN","IBTRH3A",131,0)
 I $TR($G(DATA(8)),"^","")="",$TR($G(DATA(9)),"^","")="" S DLN="  No Home Oxygen Therapy Information" D SETDLN(DLN)
"RTN","IBTRH3A",132,0)
 D SETDLN("")
"RTN","IBTRH3A",133,0)
 ; - Home Health Care info -
"RTN","IBTRH3A",134,0)
 S DLN="  Home Health Care Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",135,0)
 I $P($G(DATA(2)),U,15)'=""!($TR($P($G(DATA(10)),U,1,3),"^","")'="") D
"RTN","IBTRH3A",136,0)
 . S DLN="  Prognosis Code:  "_$$GET1^DIQ(356.004,+$P($G(DATA(2)),U,15),.02) D SETDLN(DLN)  ;[356.22,2.15]
"RTN","IBTRH3A",137,0)
 . S DLN="  Home Health Start Date:  "_$$FMTE^XLFDT($P($G(DATA(10)),U,1)) D SETDLN(DLN)  ;[356.22,10.01]
"RTN","IBTRH3A",138,0)
 . S DLN="  Home Health Certification Period:   "
"RTN","IBTRH3A",139,0)
 . I $L($P($G(DATA(10)),U,2))!($L($P($G(DATA(10)),U,3))) D
"RTN","IBTRH3A",140,0)
 . . S DLN=DLN_$$FMTE^XLFDT($P($G(DATA(10)),U,2))  ;[356.22,10.02]
"RTN","IBTRH3A",141,0)
 . . S DLN=DLN_"  -  "_$$FMTE^XLFDT($P($G(DATA(10)),U,3))  ;[356.22,10.03]
"RTN","IBTRH3A",142,0)
 . D SETDLN(DLN)
"RTN","IBTRH3A",143,0)
 . S DLN="  Medicare Coverage Indicator:  "_$$EXTERNAL^DILFD(356.22,10.04,,$P($G(DATA(10)),U,4)) D SETDLN(DLN)  ;[356.22,10.04]
"RTN","IBTRH3A",144,0)
 . S DLN="  Certification Type Code:  "_$$GET1^DIQ(356.002,+$P($G(DATA(2)),U,2),.02) D SETDLN(DLN)  ;[356.22,2.02]
"RTN","IBTRH3A",145,0)
 I $P($G(DATA(2)),U,15)="",$TR($P($G(DATA(10)),U,1,3),"^","")="" S DLN="  No Home Health Care Information" D SETDLN(DLN)
"RTN","IBTRH3A",146,0)
 D SETDLN("")
"RTN","IBTRH3A",147,0)
 ; - Additional Patient info -
"RTN","IBTRH3A",148,0)
 S DLN="  Additional Patient Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",149,0)
 I $D(DATA(11)) D
"RTN","IBTRH3A",150,0)
 . S SQ=0
"RTN","IBTRH3A",151,0)
 . F  S SQ=$O(DATA(11,SQ)) Q:SQ=""  D
"RTN","IBTRH3A",152,0)
 . . S DLN="  Report Type:  "_$P($G(^IBT(356.018,+$P($G(DATA(11,SQ,0)),U,1),0)),U,2) D SETDLN(DLN)  ;[356.22,11.01] ptr to ^IBT(356.018)]
"RTN","IBTRH3A",153,0)
 . . S DLN="  Report Transmission Code:  "_$P($G(DATA(11,SQ,0)),U,2) D SETDLN(DLN)  ;[356.22,11.02]
"RTN","IBTRH3A",154,0)
 . . S DLN="  Attachment Control #:  "_$E($P($G(DATA(11,SQ,0)),U,3),1,50) D SETDLN(DLN)  ;[356.22,11.03]
"RTN","IBTRH3A",155,0)
 . . S DLN="  Attachment Description:  "_$E($P($G(DATA(11,SQ,0)),U,4),1,50) D SETDLN(DLN)  ;[356.22,11.04]
"RTN","IBTRH3A",156,0)
 . . D SETDLN("")
"RTN","IBTRH3A",157,0)
 I '$D(DATA(11)) S DLN="  No Additional Patient Information" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3A",158,0)
 ; - Message Text -
"RTN","IBTRH3A",159,0)
 S DLN="  Message Text:  " D SETDLN(DLN,"B")
"RTN","IBTRH3A",160,0)
 I +$G(DATA(12,0)) D
"RTN","IBTRH3A",161,0)
 . S SQCNT=+$G(DATA(12,0))
"RTN","IBTRH3A",162,0)
 . F SQ=1:1:SQCNT S DLN="  "_$G(DATA(12,SQ)) D SETDLN(DLN)  ;[356.22,12]
"RTN","IBTRH3A",163,0)
 I '+$G(DATA(12,0)) S DLN="  No Message Text" D SETDLN(DLN)
"RTN","IBTRH3A",164,0)
 D SETDLN("")
"RTN","IBTRH3A",165,0)
 ; - Additional Patient Information Contact Data -
"RTN","IBTRH3A",166,0)
 S DLN="  Additional Patient Information Contact Data" D SETDLN(DLN,"B")
"RTN","IBTRH3A",167,0)
 S GOTONE=0
"RTN","IBTRH3A",168,0)
 I $D(DATA(13)) D
"RTN","IBTRH3A",169,0)
 .S SQ="" F  S SQ=$O(DATA(13,SQ)) Q:SQ=""  D
"RTN","IBTRH3A",170,0)
 ..I $G(DATA(13,SQ,4))="",$G(DATA(13,SQ,5))="" Q
"RTN","IBTRH3A",171,0)
 ..S GOTONE=1
"RTN","IBTRH3A",172,0)
 ..S DLN="  Response Contact Name:  "_$P($G(DATA(13,SQ,4)),U,4)  ;Last Name-[356.2213,4.04]
"RTN","IBTRH3A",173,0)
 ..S DLN=DLN_", "_$P($G(DATA(13,SQ,4)),U,5)  ;First Name-[356.2213,4.05]
"RTN","IBTRH3A",174,0)
 ..S DLN=DLN_" "_$P($G(DATA(13,SQ,4)),U,6)  ;Middle Name-[356.2213,4.06]
"RTN","IBTRH3A",175,0)
 ..S DLN=DLN_" "_$P($G(DATA(13,SQ,4)),U,7) D SETDLN(DLN)  ;Suffix-[356.2213,4.07]
"RTN","IBTRH3A",176,0)
 ..S DLN="  Identification Code Qualifier:  "_$$GET1^DIQ(365.023,+$P($G(DATA(13,SQ,4)),U,8),.02) D SETDLN(DLN)  ;[356.2213,4.08]
"RTN","IBTRH3A",177,0)
 ..S DLN="  Response Contact Identifier:  "_$P($G(DATA(13,SQ,4)),U,9) D SETDLN(DLN)  ;[356.2213,4.09]
"RTN","IBTRH3A",178,0)
 ..S DLN="  Response Contact Address:"
"RTN","IBTRH3A",179,0)
 ..S DLN=DLN_"  "_$P($G(DATA(13,SQ,5)),U,1) D SETDLN(DLN)  ;[356.2213,5]
"RTN","IBTRH3A",180,0)
 ..I $L($P($G(DATA(13,SQ,5)),U,2)) S DLN="",$E(DLN,30)=$P(DATA(13,SQ,5),U,2) D SETDLN(DLN)  ;[356.2213,5.01]
"RTN","IBTRH3A",181,0)
 ..S DLN="",$E(DLN,30)=$P($G(DATA(13,SQ,5)),U,3)  ;[356.2213,5.02]
"RTN","IBTRH3A",182,0)
 ..S DLN=DLN_",  " I +$P($G(DATA(13,SQ,5)),U,4) S DLN=DLN_$$GET1^DIQ(5,$P(^DIC(5,+$P($G(DATA(13,SQ,5)),U,4),0),U,2)_",",1)  ;[356.2213,5.03]
"RTN","IBTRH3A",183,0)
 ..S DLN=DLN_"  "_$P($G(DATA(13,SQ,5)),U,5) D SETDLN(DLN)  ;[356.2213,5.04]
"RTN","IBTRH3A",184,0)
 ..I +$P($G(DATA(13,SQ,5)),U,6) S DLN="",$E(DLN,30)=$$GET1^DIQ(779.004,$P($G(DATA(13,SQ,5)),U,6),.01)  ;[356.2213,5.05]
"RTN","IBTRH3A",185,0)
 ..S DLN=DLN_"   "_$P($G(DATA(13,SQ,5)),U,7) D SETDLN(DLN)  ;[356.2213,5.06]
"RTN","IBTRH3A",186,0)
 ..D SETDLN("")
"RTN","IBTRH3A",187,0)
 ..S DLN="  Response Contact Name:  "_$P($G(DATA(13,SQ,0)),U,6) D SETDLN(DLN)  ;[356.2213,.06]
"RTN","IBTRH3A",188,0)
 ..S DLN="  Response Contact #:  "
"RTN","IBTRH3A",189,0)
 ..I $P($G(DATA(13,SQ,0)),U,7)'=""!($L($G(DATA(13,SQ,1)))) D   ;[356.2213,1]
"RTN","IBTRH3A",190,0)
 ...S DLN=DLN_$$EXTERNAL^DILFD(356.2213,.07,,+$P($G(DATA(13,SQ,0)),U,7))
"RTN","IBTRH3A",191,0)
 ...S DLN=DLN_": "_$G(DATA(13,SQ,1)) D SETDLN(DLN)
"RTN","IBTRH3A",192,0)
 ..F X=2,3 I $L($G(DATA(13,SQ,X))) D  ;[356.2213,2-3]
"RTN","IBTRH3A",193,0)
 ...S DLN="",$E(DLN,19)=$$EXTERNAL^DILFD(356.2213,(.06+(X*.01)),,+$P($G(DATA(13,SQ,0)),U,(6+X)))
"RTN","IBTRH3A",194,0)
 ...S DLN=DLN_": "_$G(DATA(13,SQ,X)) D SETDLN(DLN)
"RTN","IBTRH3A",195,0)
 ..D SETDLN("")
"RTN","IBTRH3A",196,0)
 I '+GOTONE S DLN="  No Additional Patient Information Contact" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3A",197,0)
 ; - Pat Event Prov Info (repeats up to 14 times)-[356.2213]
"RTN","IBTRH3A",198,0)
 S DLN="  Patient Event Provider Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",199,0)
 S GOTONE=0
"RTN","IBTRH3A",200,0)
 I $D(DATA(13)) D
"RTN","IBTRH3A",201,0)
 .S SQ="" F  S SQ=$O(DATA(13,SQ)) Q:SQ=""  D
"RTN","IBTRH3A",202,0)
 ..I $G(DATA(13,SQ,0))="" Q
"RTN","IBTRH3A",203,0)
 ..S GOTONE=1,TAXNMY=""
"RTN","IBTRH3A",204,0)
 ..S DLN="   Entity Provider Code:  "_$$GET1^DIQ(365.022,+$P($G(DATA(13,SQ,0)),U,1),.02) D SETDLN(DLN)  ;[356.2213,.01]
"RTN","IBTRH3A",205,0)
 ..S PRVPTR=$P($G(DATA(13,SQ,0)),U,3)
"RTN","IBTRH3A",206,0)
 ..S PRVDATA=$$PRVDATA^IBTRHLO2(+$P(PRVPTR,";"),$P($P(PRVPTR,"(",2),","))
"RTN","IBTRH3A",207,0)
 ..; PRVDATA = name ^ line 1 ^ line 2 ^ city ^ state ^ zip ^ NPI
"RTN","IBTRH3A",208,0)
 ..S DLN="   Provider ID:  "_$P(PRVDATA,U,7)  ;[356.2213,.03] ptr to Provider File ^VA(200), ^IBA(355.93) or ^DIC(4)]
"RTN","IBTRH3A",209,0)
 ..S TAXNMY=$$GTXNMY^IBTRH3(PRVPTR)   ; Get the Taxonomy Code and Person Class Description.
"RTN","IBTRH3A",210,0)
 ..S $E(DLN,44)="Provider Taxonomy:  "_$P(TAXNMY,U,1) D SETDLN(DLN)  ; Taxonomy code.
"RTN","IBTRH3A",211,0)
 ..S DLN="   Person Class:  "_$P(TAXNMY,U,2)    ; Person Class Description.
"RTN","IBTRH3A",212,0)
 ..S DLN="   Provider Name:  "_$P(PRVDATA,U,1) D SETDLN(DLN)  ;[^VA(200,.01), ^IBA(355.93,.01), or ^DIC(4,.01)]
"RTN","IBTRH3A",213,0)
 ..S DLN="   Provider Address: "_$P(PRVDATA,U,2) D SETDLN(DLN)  ;[^IBA(355.93,.05) or ^VA(200,.111)]
"RTN","IBTRH3A",214,0)
 ..I $L($P(PRVDATA,U,3)) S DLN="",$E(DLN,22)=$P(PRVDATA,U,3) D SETDLN(DLN)  ;[^IBA(355.93,.06) or ^VA(200,.112)]
"RTN","IBTRH3A",215,0)
 ..S DLN="",$E(DLN,22)=$P(PRVDATA,U,4)_$S($P(PRVDATA,U,4)'="":", ",1:"")_$$GET1^DIQ(5,$P(PRVDATA,U,5)_",",1)_"  "_$P(PRVDATA,U,6) D SETDLN(DLN)  ;[^IBA(355.93,.07-.09) or ^VA(200,.113-.115)]
"RTN","IBTRH3A",216,0)
 ..D SETDLN("")
"RTN","IBTRH3A",217,0)
 I '+GOTONE S DLN="   No Patient Event Provider Information" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3A",218,0)
 S DLN="  Patient Event Transport Information" D SETDLN(DLN,"B")
"RTN","IBTRH3A",219,0)
 S GOTONE=0
"RTN","IBTRH3A",220,0)
 I $D(DATA(14)) D
"RTN","IBTRH3A",221,0)
 .S SQ="" F  S SQ=$O(DATA(14,SQ)) Q:SQ=""  D
"RTN","IBTRH3A",222,0)
 ..I $G(DATA(14,SQ,0))="" Q
"RTN","IBTRH3A",223,0)
 ..S GOTONE=1
"RTN","IBTRH3A",224,0)
 ..S DLN="   Entity Identifier Code:  "_$P($G(DATA(14,SQ,0)),U,1) D SETDLN(DLN)  ;[356.2214,.01]
"RTN","IBTRH3A",225,0)
 ..S DLN="   Transport Location Name:  "_$P($G(DATA(14,SQ,0)),U,2) D SETDLN(DLN)  ;[356.2214,.02]
"RTN","IBTRH3A",226,0)
 ..S DLN="   Transport Location Address:  "_$P($G(DATA(14,SQ,0)),U,3) D SETDLN(DLN)  ;[356.2214,.03]
"RTN","IBTRH3A",227,0)
 ..I $L($P($G(DATA(14,SQ,0)),U,4)) S DLN="",$E(DLN,33)=$P(DATA(14,SQ,0),U,4) D SETDLN(DLN)  ;[356.2214,.04]
"RTN","IBTRH3A",228,0)
 ..S DLN="",$E(DLN,33)=$P($G(DATA(14,SQ,0)),U,5)  ;[356.2214,.05]
"RTN","IBTRH3A",229,0)
 ..S DLN=DLN_", " I +$P($G(DATA(14,SQ,0)),U,6) S DLN=DLN_$$GET1^DIQ(5,$P(^DIC(5,+$P($G(DATA(14,SQ,0)),U,6),0),U,2)_",",1)  ;[356.2214,5.03]
"RTN","IBTRH3A",230,0)
 ..S DLN=DLN_"  "_$P($G(DATA(14,SQ,0)),U,7) D SETDLN(DLN)  ;[356.2214,.07]
"RTN","IBTRH3A",231,0)
 ..D SETDLN("")
"RTN","IBTRH3A",232,0)
 I '+GOTONE S DLN="   No Patient Event Transport Information" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3A",233,0)
 Q
"RTN","IBTRH3A",234,0)
 ;
"RTN","IBTRH3A",235,0)
SETDLN(DLN,SPEC) ; Add Display Line to ^TMP global.
"RTN","IBTRH3A",236,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRH3A",237,0)
 S ^TMP(IBTRNM,$J,VALMCNT,0)=DLN
"RTN","IBTRH3A",238,0)
 I $G(SPEC)="B" D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM)
"RTN","IBTRH3A",239,0)
 Q
"RTN","IBTRH3A",240,0)
 ;
"RTN","IBTRH3B")
0^26^B148426620^n/a
"RTN","IBTRH3B",1,0)
IBTRH3B ;ALB/VAD - IBT HCSR RESPONSE VIEW - Display set up ;02-JUN-2014
"RTN","IBTRH3B",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH3B",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH3B",4,0)
 ;
"RTN","IBTRH3B",5,0)
 Q
"RTN","IBTRH3B",6,0)
 ;
"RTN","IBTRH3B",7,0)
GETSVC()    ; Get the Service Detail
"RTN","IBTRH3B",8,0)
 N DLN,I
"RTN","IBTRH3B",9,0)
 Q:'$G(IBTRIEN)
"RTN","IBTRH3B",10,0)
 I '$D(DATA(16)) D  Q
"RTN","IBTRH3B",11,0)
 . S DLN="",$E(DLN,36)="SERVICE DETAIL" D SETDLN(DLN)
"RTN","IBTRH3B",12,0)
 . S DLN="",DLN="  No Service Detail Lines available" D SETDLN(DLN)
"RTN","IBTRH3B",13,0)
 S I=0 F  S I=$O(DATA(16,I)) Q:I=""  D
"RTN","IBTRH3B",14,0)
 . S DLN="",$E(DLN,36)="SERVICE DETAIL - Line # "_I D SETDLN(DLN)
"RTN","IBTRH3B",15,0)
 . D GETSVCL(I)
"RTN","IBTRH3B",16,0)
 D SETDLN("")
"RTN","IBTRH3B",17,0)
 Q
"RTN","IBTRH3B",18,0)
 ;
"RTN","IBTRH3B",19,0)
GETSVCL(LN) ; Get the Service Detail
"RTN","IBTRH3B",20,0)
 N DLN,HCTR,I,SQ,VAL1,VAL3,TMPARY,Z1
"RTN","IBTRH3B",21,0)
 ;
"RTN","IBTRH3B",22,0)
 ; - Health Care Services Review info -
"RTN","IBTRH3B",23,0)
 S DLN="  Health Care Services Review" D SETDLN(DLN,"B")
"RTN","IBTRH3B",24,0)
 I $TR($G(DATA(16,LN,11)),"^","")'="" D
"RTN","IBTRH3B",25,0)
 . S VAL1=$P($G(DATA(16,LN,11)),U,1)_",",VAL3=$P($G(DATA(16,LN,11)),U,3)_","
"RTN","IBTRH3B",26,0)
 . S DLN="  Certification Action:  "
"RTN","IBTRH3B",27,0)
 . I $L($$GET1^DIQ(356.02,VAL1,.01)) S DLN=DLN_$$GET1^DIQ(356.02,VAL1,.01)_" - "_$$GET1^DIQ(356.02,VAL1,.02)  ;[356.2216,11.01]
"RTN","IBTRH3B",28,0)
 . D SETDLN(DLN)
"RTN","IBTRH3B",29,0)
 . S DLN="  Review Identification #:  "_$P($G(DATA(16,LN,11)),U,2) D SETDLN(DLN)  ;[356.2216,11.02]
"RTN","IBTRH3B",30,0)
 . S DLN="  Review Decision Reason:  "
"RTN","IBTRH3B",31,0)
 . I $L($$GET1^DIQ(356.021,VAL3,.01)) S DLN=DLN_$$GET1^DIQ(356.021,VAL3,.01)_" - "_$E($$GET1^DIQ(356.021,VAL3,.02),1,45)  ;[356.22,11.03]
"RTN","IBTRH3B",32,0)
 . D SETDLN(DLN)
"RTN","IBTRH3B",33,0)
 . S DLN="  Second Surgical Opinion Ind:  "_$$EXTERNAL^DILFD(356.2216,11.04,,$P($G(DATA(16,LN,11)),U,4)) D SETDLN(DLN)  ;[356.2216,11.04]
"RTN","IBTRH3B",34,0)
 I $TR($G(DATA(16,LN,11)),"^","")="" S DLN="  No Health Care Services Review Information"
"RTN","IBTRH3B",35,0)
 D SETDLN("")
"RTN","IBTRH3B",36,0)
 ;
"RTN","IBTRH3B",37,0)
 S DLN="  Admin Ref #:  "_$P($G(DATA(16,LN,9)),U,2) D SETDLN(DLN)  ;[356.2216,9.02]
"RTN","IBTRH3B",38,0)
 S DLN="  Previous Review Autho #:  "_$P($G(DATA(16,LN,9)),U,1) D SETDLN(DLN)  ;[356.2216,9.01]
"RTN","IBTRH3B",39,0)
 D SETDLN("")
"RTN","IBTRH3B",40,0)
 ;
"RTN","IBTRH3B",41,0)
 S DLN="  Proposed/Actual Service Date:  "_$$FMTE^XLFDT($P($G(DATA(16,LN,0)),U,11))
"RTN","IBTRH3B",42,0)
 I $P($G(DATA(16,LN,0)),U,17)'="" S DLN=DLN_" - "_$$FMTE^XLFDT($P($G(DATA(16,LN,0)),U,17))
"RTN","IBTRH3B",43,0)
 D SETDLN(DLN)  ;[356.2216,.11] - [356.2216,.17]
"RTN","IBTRH3B",44,0)
 S DLN="  Cert. Effective Date:  "_$$FMTE^XLFDT($P($G(DATA(16,LN,0)),U,14))
"RTN","IBTRH3B",45,0)
 I $P($G(DATA(16,LN,0)),U,16)'="" S DLN=DLN_" - "_$$FMTE^XLFDT($P($G(DATA(16,LN,0)),U,16))
"RTN","IBTRH3B",46,0)
 D SETDLN(DLN)  ;[356.2216,.14] - [356.2216,.16)
"RTN","IBTRH3B",47,0)
 S DLN="  Cert. Issue Date:  "_$$FMTE^XLFDT($P($G(DATA(16,LN,0)),U,12))  ;[356.2216,.12]
"RTN","IBTRH3B",48,0)
 S $E(DLN,44)="Cert. Expiration Date:  "_$$FMTE^XLFDT($P($G(DATA(16,LN,0)),U,13)) D SETDLN(DLN)  ;[356.2216,.13]
"RTN","IBTRH3B",49,0)
 D SETDLN("")
"RTN","IBTRH3B",50,0)
 ;
"RTN","IBTRH3B",51,0)
 ; - Request for Additional Information -
"RTN","IBTRH3B",52,0)
 ;    > Up to 12 LOINC codes
"RTN","IBTRH3B",53,0)
 S DLN="  Request for Additional Information" D SETDLN(DLN,"B")
"RTN","IBTRH3B",54,0)
 S HCTR=+$P($G(DATA(16,LN,10,0)),U,4)
"RTN","IBTRH3B",55,0)
 I +HCTR F SQ=1:1:HCTR D
"RTN","IBTRH3B",56,0)
 . S DLN="    LOINC: "_+I D SETDLN(DLN)
"RTN","IBTRH3B",57,0)
 . S DLN="    Code List Qualifier Code:  "_$$GET1^DIQ(365.023,+$P($G(DATA(16,LN,10,SQ)),U,2),.02) D SETDLN(DLN)  ;[356.2216,10.02 ptr to #356.006]
"RTN","IBTRH3B",58,0)
 . S DLN="    Industry Code:  "_$P($G(DATA(16,LN,10,SQ)),U,3) D SETDLN(DLN)  ;[356.2216,10.03]
"RTN","IBTRH3B",59,0)
 . D SETDLN("")
"RTN","IBTRH3B",60,0)
 I '+HCTR S DLN="    No Request for Additional Information" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3B",61,0)
 ;
"RTN","IBTRH3B",62,0)
 ; - Professional Service info if #356.2216,1.12 = "P"
"RTN","IBTRH3B",63,0)
 I $P($G(DATA(16,LN,1)),U,12)="P" D
"RTN","IBTRH3B",64,0)
 . S DLN="  Professional Service" D SETDLN(DLN,"B")
"RTN","IBTRH3B",65,0)
 . S DLN="  Product or Service ID Qualifier:  "_$$EXTERNAL^DILFD(356.2216,1.01,,$P(DATA(16,LN,1),U,1)) D SETDLN(DLN)  ;[356.2216,1.01]
"RTN","IBTRH3B",66,0)
 . S DLN="  Procedure Code:  "_$$EXTERNAL^DILFD(356.2216,1.02,,$P(DATA(16,LN,1),U,2)) D SETDLN(DLN)  ;[356.2216,1.02]
"RTN","IBTRH3B",67,0)
 . I $P($P(DATA(16,LN,1),U,3),";",1)'="" S DLN="  Procedure Code:  "_$$EXTERNAL^DILFD(356.2216,1.03,,$P(DATA(16,LN,1),U,3)) D SETDLN(DLN)  ;[356.2216,1.03]
"RTN","IBTRH3B",68,0)
 . S DLN="  Procedure Modifier:  "_$P($G(^DIC(81.3,+$P(DATA(16,LN,1),U,4),0)),U,1)  ;[356.2216,1.04-1.07] ==> DBIA#3026
"RTN","IBTRH3B",69,0)
 . F SQ=5,6,7 I $L($P(DATA(16,LN,1),U,SQ)) S DLN=DLN_", "_$P($G(^DIC(81.3,+$P(DATA(16,LN,1),U,SQ),0)),U,1)  ; DBIA#3026
"RTN","IBTRH3B",70,0)
 . D SETDLN(DLN)
"RTN","IBTRH3B",71,0)
 . S DLN="  Procedure Code Description:  "_$P(DATA(16,LN,1),U,8) D SETDLN(DLN)  ;[356.2216,1.08]
"RTN","IBTRH3B",72,0)
 . S DLN="  Procedure Code (range of procedure code. This is ending):  "_$$EXTERNAL^DILFD(356.2216,1.03,,$P(DATA(16,LN,1),U,3)) D SETDLN(DLN)  ;[356.2216,1.03]
"RTN","IBTRH3B",73,0)
 . S DLN="  Service Line Amount:  "_$S(+$P(DATA(16,LN,1),U,9):"$",1:"")_$P(DATA(16,LN,1),U,9) D SETDLN(DLN)  ;[356.2216,1.09]
"RTN","IBTRH3B",74,0)
 . S DLN="  Unit or Basis for Measurement Code:  "_$$EXTERNAL^DILFD(356.2216,1.1,,$P(DATA(16,LN,1),U,10)) D SETDLN(DLN)  ;[356.2216,1.1]
"RTN","IBTRH3B",75,0)
 . S DLN="  Service Unit Count:  "_$P(DATA(16,LN,1),U,11) D SETDLN(DLN)  ;[356.2216,1.11]
"RTN","IBTRH3B",76,0)
 . S DLN="  Diagnosis Code Pointer:  "_$$EXTERNAL^DILFD(356.2216,2.01,,$P($G(DATA(16,LN,2)),U,1)) D SETDLN(DLN)  ;[356.2216,2.01-2.04]
"RTN","IBTRH3B",77,0)
 . F SQ=2,3,4 I $L($P($G(DATA(16,LN,2)),U,SQ)) S DLN="",$E(DLN,28)=$$EXTERNAL^DILFD(356.2216,(2+(.01*SQ)),,$P($G(DATA(16,LN,2)),U,SQ)) D SETDLN(DLN)
"RTN","IBTRH3B",78,0)
 . S DLN="  EPSDT Indicator:  "_$$EXTERNAL^DILFD(356.2216,2.05,,$P($G(DATA(16,LN,2)),U,5)) D SETDLN(DLN)  ;[356.2216,2.05]
"RTN","IBTRH3B",79,0)
 . S DLN="  Nursing Home Level of Care:  "_$$GET1^DIQ(356.019,+$P($G(DATA(16,LN,2)),U,9),.02) D SETDLN(DLN)  ;[356.2216,2.09 ptr to #356.019]
"RTN","IBTRH3B",80,0)
 . D SETDLN("")
"RTN","IBTRH3B",81,0)
 ;
"RTN","IBTRH3B",82,0)
 ; - Institutional Service Line info if #356.2216,1.12 = "I"
"RTN","IBTRH3B",83,0)
 I $P($G(DATA(16,LN,1)),U,12)="I" D
"RTN","IBTRH3B",84,0)
 . S DLN="  Institutional Service Line" D SETDLN(DLN,"B")
"RTN","IBTRH3B",85,0)
 . S DLN="  Service Line Revenue Code:  "_$$GET1^DIQ(399.2,+$P($G(DATA(16,LN,2)),U,6),.02) D SETDLN(DLN)   ; [[356.2216,2.06 ptr to #399.2]
"RTN","IBTRH3B",86,0)
 . S DLN="  Product or Service ID Qualifier:  "_$$EXTERNAL^DILFD(356.2216,1.01,,$P(DATA(16,LN,1),U,1)) D SETDLN(DLN)  ;[356.2216,1.01]
"RTN","IBTRH3B",87,0)
 . S DLN="  Procedure Code:  "_$$EXTERNAL^DILFD(356.2216,1.02,,$P(DATA(16,LN,1),U,2)) D SETDLN(DLN)  ;[356.2216,1.02]
"RTN","IBTRH3B",88,0)
 . I $P($P(DATA(16,LN,1),U,3),";",1)'="" S DLN="  Procedure Code:  "_$$EXTERNAL^DILFD(356.2216,1.03,,$P(DATA(16,LN,1),U,3)) D SETDLN(DLN)  ;[356.2216,1.03]
"RTN","IBTRH3B",89,0)
 . S DLN="  Procedure Modifier:  "_$P($G(^DIC(81.3,+$P(DATA(16,LN,1),U,4),0)),U,1)  ;[356.2216,1.04-1.07] ==> DBIA#3026
"RTN","IBTRH3B",90,0)
 . F SQ=5,6,7 I $L($P(DATA(16,LN,1),U,SQ)) S DLN=DLN_", "_$P($G(^DIC(81.3,+$P(DATA(16,LN,1),U,SQ),0)),U,1)  ; DBIA#3026
"RTN","IBTRH3B",91,0)
 . D SETDLN(DLN)
"RTN","IBTRH3B",92,0)
 . S DLN="  Procedure Code Description:  "_$P(DATA(16,LN,1),U,8) D SETDLN(DLN)  ;[356.2216,1.08]
"RTN","IBTRH3B",93,0)
 . S DLN="  Procedure Code (range of procedure code. This is ending):  "_$$EXTERNAL^DILFD(356.2216,1.03,,$P(DATA(16,LN,1),U,3)) D SETDLN(DLN)  ;[356.2216,1.03]
"RTN","IBTRH3B",94,0)
 . S DLN="  Service Line Amount:  $"_$P(DATA(16,LN,1),U,9) D SETDLN(DLN)  ;[356.2216,1.09]
"RTN","IBTRH3B",95,0)
 . S DLN="  Unit or Basis for Measurement Code:  "_$P(DATA(16,LN,1),U,10) D SETDLN(DLN)  ;[356.2216,1.1]
"RTN","IBTRH3B",96,0)
 . S DLN="  Service Unit Count:  "_$P(DATA(16,LN,1),U,11) D SETDLN(DLN)  ;[356.2216,1.11]
"RTN","IBTRH3B",97,0)
 . S DLN="  Service Line Rate:  "_$P($G(DATA(16,LN,2)),U,7) D SETDLN(DLN)  ;[356.2216,2.07]
"RTN","IBTRH3B",98,0)
 . S DLN="  Nursing Home Residential Status Code:  "_$$GET1^DIQ(356.011,+$P($G(DATA(16,LN,2)),U,8),.02) D SETDLN(DLN)  ;[356.2216,2.08 ptr to #356.011]
"RTN","IBTRH3B",99,0)
 . S DLN="  Nursing Home Level of Care:  "_$$GET1^DIQ(356.019,+$P($G(DATA(16,LN,2)),U,9),.02) D SETDLN(DLN)  ;[356.2216,2.09 ptr to #356.019]
"RTN","IBTRH3B",100,0)
 . D SETDLN("")
"RTN","IBTRH3B",101,0)
 ;
"RTN","IBTRH3B",102,0)
 ; - Dental Services info if #356.2216,1.12 = "D"
"RTN","IBTRH3B",103,0)
 I $P($G(DATA(16,LN,1)),U,12)="D" D
"RTN","IBTRH3B",104,0)
 . S DLN="  Dental Service" D SETDLN(DLN,"B")
"RTN","IBTRH3B",105,0)
 . S DLN="  Procedure Code:  "_$$EXTERNAL^DILFD(356.2216,1.02,,$P(DATA(16,LN,1),U,2)) D SETDLN(DLN)  ;[356.2216,1.02]
"RTN","IBTRH3B",106,0)
 . I $P($P(DATA(16,LN,1),U,3),";",1)'="" S DLN="  Procedure Code:  "_$$EXTERNAL^DILFD(356.2216,1.03,,$P(DATA(16,LN,1),U,3)) D SETDLN(DLN)  ;[356.2216,1.03]
"RTN","IBTRH3B",107,0)
 . S DLN="  Procedure Modifier:  "_$P($G(^DIC(81.3,+$P(DATA(16,LN,1),U,4),0)),U,1)  ;[356.2216,1.04-1.07] ==> DBIA#3026
"RTN","IBTRH3B",108,0)
 . F SQ=5,6,7 I $L($P(DATA(16,LN,1),U,SQ)) S DLN=DLN_", "_$P($G(^DIC(81.3,+$P(DATA(16,LN,1),U,SQ),0)),U,1)  ; DBIA#3026
"RTN","IBTRH3B",109,0)
 . D SETDLN(DLN)
"RTN","IBTRH3B",110,0)
 . S DLN="  Procedure Code Description:  "_$P(DATA(16,LN,1),U,8) D SETDLN(DLN)  ;[356.2216,1.08]
"RTN","IBTRH3B",111,0)
 . S DLN="  Procedure Code (range of procedure code. This is ending):  "_$$EXTERNAL^DILFD(356.2216,1.03,,$P(DATA(16,LN,1),U,3)) D SETDLN(DLN)  ;[356.2216,1.03]
"RTN","IBTRH3B",112,0)
 . S DLN="  Service Line Amount:  $"_$P(DATA(16,LN,1),U,9) D SETDLN(DLN)  ;[356.2216,1.09]
"RTN","IBTRH3B",113,0)
 . F SQ=1:1:5 I $L($P($G(DATA(16,LN,3)),U,SQ)) S DLN="  Oral Cavity Designation Code #"_+SQ_":  "_$P($G(DATA(16,LN,3)),U,SQ) D SETDLN(DLN)  ;[356.2216,3.01-3.05 ptr to #81]
"RTN","IBTRH3B",114,0)
 . S DLN="  Prosthesis, Crown or Inlay:  "_$$EXTERNAL^DILFD(356.2216,3.06,,$P($G(DATA(16,LN,3)),U,6)) D SETDLN(DLN)  ;[356.2216,3.06]
"RTN","IBTRH3B",115,0)
 . S DLN="  Service Unit Count:  "_$P(DATA(16,LN,1),U,11) D SETDLN(DLN)  ;[356.2216,1.11]
"RTN","IBTRH3B",116,0)
 . D SETDLN("")
"RTN","IBTRH3B",117,0)
 . ;
"RTN","IBTRH3B",118,0)
 . ; - Tooth Information if #356.2216,1.12 = "D"
"RTN","IBTRH3B",119,0)
 . S DLN="  Tooth Information" D SETDLN(DLN,"B")
"RTN","IBTRH3B",120,0)
 . I $D(DATA(16,LN,4)) D
"RTN","IBTRH3B",121,0)
 . . S SQ="" F  S SQ=$O(DATA(16,LN,4,SQ)) Q:SQ=""  D
"RTN","IBTRH3B",122,0)
 . . . I '$D(DATA(16,LN,4,SQ,0)) Q
"RTN","IBTRH3B",123,0)
 . . . S DLN="  Tooth Code:  "_$$GET1^DIQ(356.022,+$P($G(DATA(16,LN,4,SQ,0)),U,1),.02) D SETDLN(DLN)  ;[356.2216,4.01 ptr to #81]
"RTN","IBTRH3B",124,0)
 . . . F I=1:1:5 I $L($P($G(DATA(16,LN,4,SQ,0)),U,(I+1))) S DLN="  Tooth Surface #"_+I_":  "_$$EXTERNAL^DILFD(356.22164,((I+1)*.01),,$P($G(DATA(16,LN,4,SQ,0)),U,(I+1))) D SETDLN(DLN)  ;[356.2216,4.02]
"RTN","IBTRH3B",125,0)
 . . . D SETDLN("")
"RTN","IBTRH3B",126,0)
 . I '$D(DATA(16,LN,4)) S DLN="No Tooth Information" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3B",127,0)
 ;
"RTN","IBTRH3B",128,0)
 ; - Health Care Services Delivery info
"RTN","IBTRH3B",129,0)
 S DLN="  Health Care Services Delivery" D SETDLN(DLN,"B")
"RTN","IBTRH3B",130,0)
 I $TR($G(DATA(16,LN,5)),"^","")'="" D
"RTN","IBTRH3B",131,0)
 . S DLN="  Quantity Qualifier:  "_$$GET1^DIQ(365.016,+$P($G(DATA(16,LN,5)),U,1),.02)  ;[356.2216,5.01 ptr to #365.016]
"RTN","IBTRH3B",132,0)
 . S $E(DLN,44)="Service Unit Count:  "_$P(DATA(16,LN,5),U,2) D SETDLN(DLN)  ;[356.2216,5.02]
"RTN","IBTRH3B",133,0)
 . S DLN="  Unit/Basis for Measure Code:  "_$$EXTERNAL^DILFD(356.2216,5.03,,$P(DATA(16,LN,5),U,3))  ;[356.2216,5.03]
"RTN","IBTRH3B",134,0)
 . S $E(DLN,44)="Sample Selection Modulus:  "_$P(DATA(16,LN,5),U,4) D SETDLN(DLN)  ;[356.2216,5.04]
"RTN","IBTRH3B",135,0)
 . S DLN="  Time Period Qualifier:  "_$$GET1^DIQ(365.015,+$P($G(DATA(16,LN,5)),U,5),.02)  ;[356.2216,5.05 ptr to #365.015]
"RTN","IBTRH3B",136,0)
 . S $E(DLN,44)="Period Count:  "_$P(DATA(16,LN,5),U,6) D SETDLN(DLN)  ;[356.2216,5.06]
"RTN","IBTRH3B",137,0)
 . S DLN="  Delivery Frequency:  "_$$GET1^DIQ(365.025,+$P($G(DATA(16,LN,5)),U,7),.02) D SETDLN(DLN)  ;[356.2216,5.07 ptr to #365.025]
"RTN","IBTRH3B",138,0)
 . S DLN="  Delivery Pattern:  "_$$GET1^DIQ(356.007,+$P($G(DATA(16,LN,5)),U,8),.02) D SETDLN(DLN)  ;[356.2216,5.08 ptr to #356.007]
"RTN","IBTRH3B",139,0)
 I $TR($G(DATA(16,LN,5)),"^","")="" S DLN="  No Health Care Services Delivery" D SETDLN(DLN)
"RTN","IBTRH3B",140,0)
 D SETDLN("")
"RTN","IBTRH3B",141,0)
 ;
"RTN","IBTRH3B",142,0)
 ; - Additional Service Information
"RTN","IBTRH3B",143,0)
 I $D(DATA(16,LN,6)) S DLN="  Additional Service Information" D SETDLN(DLN,"B")
"RTN","IBTRH3B",144,0)
 S SQ="" F  S SQ=$O(DATA(16,LN,6,SQ)) Q:SQ=""  D
"RTN","IBTRH3B",145,0)
 . S DLN="  Report Type:  "_$$GET1^DIQ(356.018,+$P($G(DATA(16,LN,6,SQ,0)),U,2),.02) D SETDLN(DLN)  ;[356.22166,.01 ptr to #356.018]
"RTN","IBTRH3B",146,0)
 . S DLN="  Report Transmission Code:  "_$P($G(DATA(16,LN,6,SQ,0)),U,2) D SETDLN(DLN)  ;[356.22166,.02]
"RTN","IBTRH3B",147,0)
 . S DLN="  Attachment Control #:  "_$P($G(DATA(16,LN,6,SQ,0)),U,3) D SETDLN(DLN)  ;[356.22166,.03]
"RTN","IBTRH3B",148,0)
 . S DLN="  Attachment Description:  "_$P($G(DATA(16,LN,6,SQ,0)),U,4) D SETDLN(DLN)  ;[356.22166,.04]
"RTN","IBTRH3B",149,0)
 . D SETDLN("")
"RTN","IBTRH3B",150,0)
 ;
"RTN","IBTRH3B",151,0)
 ; - Service Message Text
"RTN","IBTRH3B",152,0)
 S DLN="  Service Message Text:" D SETDLN(DLN,"B")
"RTN","IBTRH3B",153,0)
 I $D(DATA(16,LN,7)) D
"RTN","IBTRH3B",154,0)
 . S SQ="" F  S SQ=$O(DATA(16,LN,7,SQ)) Q:SQ=""  D
"RTN","IBTRH3B",155,0)
 .. K TMPARY D FSTRNG^IBJU1($G(DATA(16,LN,7,SQ,0)),75,.TMPARY)
"RTN","IBTRH3B",156,0)
 .. F Z1=1:1:TMPARY S DLN="  "_TMPARY(Z1) D SETDLN(DLN)
"RTN","IBTRH3B",157,0)
 .. ;;S DLN="  "_$G(DATA(16,LN,7,SQ,0)) D SETDLN(DLN)  ;[356.2216,7]
"RTN","IBTRH3B",158,0)
 I '$D(DATA(16,LN,7)) S DLN="  No Service Message Text" D SETDLN(DLN)
"RTN","IBTRH3B",159,0)
 D SETDLN("")
"RTN","IBTRH3B",160,0)
 ; - Service Provider Information (can repeat up to 12 times)
"RTN","IBTRH3B",161,0)
 S DLN="  Service Provider Information" D SETDLN(DLN,"B")
"RTN","IBTRH3B",162,0)
 I $D(DATA(16,LN,8,0)) D
"RTN","IBTRH3B",163,0)
 . S SQ=0 F  S SQ=$O(DATA(16,LN,8,SQ)) Q:SQ=""  D
"RTN","IBTRH3B",164,0)
 . . N PRVPTR,PRVDATA,TAXNMY
"RTN","IBTRH3B",165,0)
 . . S DLN="   Entity Provider Code:  "_$P($G(DATA(16,LN,8,SQ,0)),U,1) D SETDLN(DLN)  ;[356.22168,.01]
"RTN","IBTRH3B",166,0)
 . . S PRVPTR=$P($G(DATA(16,LN,8,SQ,0)),U,3)
"RTN","IBTRH3B",167,0)
 . . S PRVDATA=$$PRVDATA^IBTRHLO2(+$P(PRVPTR,";"),$P($P(PRVPTR,"(",2),","))
"RTN","IBTRH3B",168,0)
 . . S DLN="   Provider ID:  "_$P(PRVDATA,U,7)  ;[356.22168,.03 ptr to Provider ^VA(200), ^IBA(355.93) or ^DIC(4)]
"RTN","IBTRH3B",169,0)
 . . S TAXNMY=$$GTXNMY^IBTRH3(PRVPTR)  ; Get the Taxonomy Code and Person Class Description.
"RTN","IBTRH3B",170,0)
 . . S $E(DLN,44)="Provider Taxonomy:  "_$P(TAXNMY,U,1) D SETDLN(DLN)  ; Taxonomy code.
"RTN","IBTRH3B",171,0)
 . . S DLN="   Person Class:  "_$P(TAXNMY,U,2)  ; Person Class Description.
"RTN","IBTRH3B",172,0)
 . . S DLN="   Provider Name (Full):  "_$P(PRVDATA,U,1) D SETDLN(DLN)  ;[^VA(200,.01), ^IBA(355.93,.01), or ^DIC(4,.01)]
"RTN","IBTRH3B",173,0)
 . . S DLN="   Provider Address (Full): "_$P(PRVDATA,U,2) D SETDLN(DLN)  ;[^IBA(355.93,.05) or ^VA(200,.111)]
"RTN","IBTRH3B",174,0)
 . . I $L($P(PRVDATA,U,3)) S DLN="",$E(DLN,29)=$P(PRVDATA,U,3) D SETDLN(DLN)  ;[^IBA(355.93,.06) or ^VA(200,.112)]
"RTN","IBTRH3B",175,0)
 . . S DLN="",$E(DLN,29)=$P(PRVDATA,U,4)_", "_$$GET1^DIQ(5,$P(PRVDATA,U,5)_",",1)_"  "_$P(PRVDATA,U,6) D SETDLN(DLN)  ;[^IBA(355.93,.07-.09) or ^VA(200,.113-.115)]
"RTN","IBTRH3B",176,0)
 . . D SETDLN("")
"RTN","IBTRH3B",177,0)
 . . ; - Additional Service Information Contact
"RTN","IBTRH3B",178,0)
 . . S DLN="  Additional Service Information Contact" D SETDLN(DLN,"B")
"RTN","IBTRH3B",179,0)
 . . I $D(DATA(16,LN,8,SQ,4,0))!$D(DATA(16,LN,8,SQ,5,0)) D
"RTN","IBTRH3B",180,0)
 . . . S DLN="  Response Contact Name:  "_$P($G(DATA(16,LN,8,SQ,4,0)),U,4)  ;Last Name - [356.22168,4.04]
"RTN","IBTRH3B",181,0)
 . . . S DLN=DLN_", "_$P($G(DATA(16,LN,8,SQ,4,0)),U,5)  ;First Name - [356.22168,4.05]
"RTN","IBTRH3B",182,0)
 . . . S DLN=DLN_" "_$P($G(DATA(16,LN,8,SQ,4,0)),U,6)  ;Middle Name - [356.22168,4.06]
"RTN","IBTRH3B",183,0)
 . . . S DLN=DLN_" "_$P($G(DATA(16,LN,8,SQ,4,0)),U,7) D SETDLN(DLN)  ;Suffix - [356.22168,4.07]
"RTN","IBTRH3B",184,0)
 . . . S DLN="  Identification Code Qualifier:  "_$P($G(^IBE(365.023,+$P($G(DATA(16,LN,8,SQ,4,0)),U,8))),U,2) D SETDLN(DLN)  ;[356.22168,4.08 ptr to #365.023]
"RTN","IBTRH3B",185,0)
 . . . S DLN="  Response Contact Identifier:  "_$P($G(DATA(16,LN,8,SQ,4,0)),U,9) D SETDLN(DLN)  ;[356.22168,4.09]
"RTN","IBTRH3B",186,0)
 . . . S DLN="  Response Contact Address:  "
"RTN","IBTRH3B",187,0)
 . . . S DLN=DLN_"  "_$P($G(DATA(16,LN,8,SQ,5,0)),U,1) D SETDLN(DLN)  ;[356.22168,5]
"RTN","IBTRH3B",188,0)
 . . . I $L($P($G(DATA(16,LN,8,SQ,5,0)),U,2)) S DLN="",$E(DLN,30)=$P(DATA(16,LN,8,SQ,5,0),U,2) D SETDLN(DLN)  ;[356.22168,5.01]
"RTN","IBTRH3B",189,0)
 . . . S DLN="",$E(DLN,30)=$P($G(DATA(16,LN,8,SQ,5,0)),U,3)  ;[356.22168,5.02]
"RTN","IBTRH3B",190,0)
 . . . S DLN=DLN_",  " I +$P($G(DATA(16,LN,8,SQ,5,0)),U,4) S DLN=DLN_$$GET1^DIQ(5,$P(^DIC(5,+$P($G(DATA(16,LN,8,SQ,5,0)),U,4),0),U,2)_",",1)  ;[356.22168,5.03 ptr to File #5]
"RTN","IBTRH3B",191,0)
 . . . S DLN=DLN_"  "_+$P($G(DATA(16,LN,8,SQ,5,0)),U,5) D SETDLN(DLN)  ;[356.22168,5.04]
"RTN","IBTRH3B",192,0)
 . . . I +$P($G(DATA(16,LN,8,SQ,5,0)),U,6) S DLN="",$E(DLN,30)=$$GET1^DIQ(779.004,$P($G(DATA(16,LN,8,SQ,5,0)),U,6),.01)  ;[356.22168,5.06 ptr to #779.004]
"RTN","IBTRH3B",193,0)
 . . . S DLN=DLN_"   "_$P($G(DATA(16,LN,8,SQ,5,0)),U,7) D SETDLN(DLN)  ;[356.22168,5.06]
"RTN","IBTRH3B",194,0)
 . . . D SETDLN("")
"RTN","IBTRH3B",195,0)
 . . . S DLN="  Response Contact Name:  "_$P($G(DATA(16,LN,8,SQ,0)),U,6) D SETDLN(DLN)  ;[356.22168,.06]
"RTN","IBTRH3B",196,0)
 . . . S DLN="  Response Contact #:  "
"RTN","IBTRH3B",197,0)
 . . . I $P($G(DATA(16,LN,8,SQ,0)),U,7)'=""!($L($G(DATA(16,LN,8,SQ,1)))) D  ;[356.22168,1]
"RTN","IBTRH3B",198,0)
 . . . . S DLN=DLN_$$EXTERNAL^DILFD(356.22168,.07,,+$P($G(DATA(16,LN,8,SQ,0)),U,7))
"RTN","IBTRH3B",199,0)
 . . . . S DLN=DLN_": "_$G(DATA(16,LN,8,SQ,1)) D SETDLN(DLN)
"RTN","IBTRH3B",200,0)
 . . . F I=2,3 I $L($G(DATA(16,LN,8,SQ,I))) D  ;[356.22168,2-3]
"RTN","IBTRH3B",201,0)
 . . . . S DLN="",$E(DLN,19)=$$EXTERNAL^DILFD(356.22168,(.06+(I*.01)),,+$P($G(DATA(16,LN,8,SQ,0)),U,(6+I)))
"RTN","IBTRH3B",202,0)
 . . . . S DLN=DLN_": "_$G(DATA(16,LN,8,SQ,I)) D SETDLN(DLN)
"RTN","IBTRH3B",203,0)
 . . I '$D(DATA(16,LN,8,SQ,4,0)),'$D(DATA(16,LN,8,SQ,5,0)) S DLN="  No Additional Service Information Contact Data" D SETDLN(DLN)
"RTN","IBTRH3B",204,0)
 . . D SETDLN("")
"RTN","IBTRH3B",205,0)
 I '$D(DATA(16,LN,8,0)) S DLN="  No Service Provider Information" D SETDLN(DLN),SETDLN("")
"RTN","IBTRH3B",206,0)
 Q
"RTN","IBTRH3B",207,0)
 ;
"RTN","IBTRH3B",208,0)
SETDLN(DLN,SPEC) ; Add Display Line to ^TMP global.
"RTN","IBTRH3B",209,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRH3B",210,0)
 S ^TMP(IBTRNM,$J,VALMCNT,0)=DLN
"RTN","IBTRH3B",211,0)
 I $G(SPEC)="B" D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM)
"RTN","IBTRH3B",212,0)
 Q
"RTN","IBTRH5")
0^11^B229496459^n/a
"RTN","IBTRH5",1,0)
IBTRH5 ;ALB/FA - HCSR Response Worklist ;18-JUL-2014
"RTN","IBTRH5",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5",4,0)
 ;;
"RTN","IBTRH5",5,0)
 ;
"RTN","IBTRH5",6,0)
EN(IBFILTSR) ;EP
"RTN","IBTRH5",7,0)
 ; Main entry point for HCSR Response Worklist
"RTN","IBTRH5",8,0)
 ; Input: IBFILTSR  - Array of filter options from the HCSR Worklist
"RTN","IBTRH5",9,0)
 ;                    NOTE: Any modifications done to these filters in the 
"RTN","IBTRH5",10,0)
 ;                          REFRESH menu action are not returned back to
"RTN","IBTRH5",11,0)
 ;                          HCSR Worklist
"RTN","IBTRH5",12,0)
 N HCSRSRTR
"RTN","IBTRH5",13,0)
 D EN^VALM("IBT HCSR RESPONSE WORKLIST")
"RTN","IBTRH5",14,0)
 Q
"RTN","IBTRH5",15,0)
 ;
"RTN","IBTRH5",16,0)
HDR ;EP
"RTN","IBTRH5",17,0)
 ; Header code for HCSR Response Worklist
"RTN","IBTRH5",18,0)
 ; Input:   HCSSRTR         - Current sort selection
"RTN","IBTRH5",19,0)
 ; Output:  VALMHDR         - Header information to display
"RTN","IBTRH5",20,0)
 ;          VALM("TITLE")   - HCSR Response Worklist Title
"RTN","IBTRH5",21,0)
 ;          VALMSG          - Initial Error line display
"RTN","IBTRH5",22,0)
 N SORT
"RTN","IBTRH5",23,0)
 S:$G(HCSRSRTR)="" HCSRSRTR="1^Oldest Entries First"
"RTN","IBTRH5",24,0)
 S SORT=$P(HCSRSRTR,"^",2)
"RTN","IBTRH5",25,0)
 S VALMHDR(1)=$$FILTBY^IBTRH1(.IBFILTSR)
"RTN","IBTRH5",26,0)
 S VALMHDR(2)="Sorted By:   "_SORT
"RTN","IBTRH5",27,0)
 S VALM("TITLE")="HCSR Response Worklist"
"RTN","IBTRH5",28,0)
 S VALMSG="#In-Prog"
"RTN","IBTRH5",29,0)
 Q
"RTN","IBTRH5",30,0)
 ;
"RTN","IBTRH5",31,0)
INIT ;EP
"RTN","IBTRH5",32,0)
 ; Initialize variables and list array
"RTN","IBTRH5",33,0)
 ; Input: None
"RTN","IBTRH5",34,0)
 ; Output:  HCSRSRTR            - Initial worklist sort if not yet defined
"RTN","IBTRH5",35,0)
 ;          ^TMP("IBTRH5",$J)   - Body lines to display
"RTN","IBTRH5",36,0)
 K ^TMP("IBTRH5",$J),^TMP($J,"IBTRH5IX")
"RTN","IBTRH5",37,0)
 S:$G(HCSRSRTR)="" HCSRSRTR="1^Oldest Entries First"
"RTN","IBTRH5",38,0)
 D BLD
"RTN","IBTRH5",39,0)
 Q
"RTN","IBTRH5",40,0)
 ;
"RTN","IBTRH5",41,0)
BLD ; Build screen array, no variables required for input
"RTN","IBTRH5",42,0)
 ; Input: HCSRSRTR              - Current select sort type
"RTN","IBTRH5",43,0)
 ; Output:  ^TMP("IBTRH5",$J)   - Body lines to display
"RTN","IBTRH5",44,0)
 ;          ^TMP($J,"IBTRH5S")  - Sorted Body lines to display
"RTN","IBTRH5",45,0)
 ;          ^TMP($J,"IBTRH5IX") - Index of Event IENs by display line
"RTN","IBTRH5",46,0)
 N DA,ECTR,LINE,S1,S2,S3,XSELCNT,XDA1
"RTN","IBTRH5",47,0)
 D SORT1   ; Build the sorted list of lines to display
"RTN","IBTRH5",48,0)
 S (ECTR,VALMCNT)=0,S1=""
"RTN","IBTRH5",49,0)
 F  S S1=$O(^TMP($J,"IBTRH5S",S1)) Q:S1=""  D
"RTN","IBTRH5",50,0)
 .S S2="" F  S S2=$O(^TMP($J,"IBTRH5S",S1,S2)) Q:S2=""  D
"RTN","IBTRH5",51,0)
 .. S S3="" F  S S3=$O(^TMP($J,"IBTRH5S",S1,S2,S3)) Q:S3=""  D
"RTN","IBTRH5",52,0)
 ... S DA="" F  S DA=$O(^TMP($J,"IBTRH5S",S1,S2,S3,DA)) Q:DA=""  D
"RTN","IBTRH5",53,0)
 .... S ECTR=ECTR+1
"RTN","IBTRH5",54,0)
 .... S LINE=^TMP($J,"IBTRH5S",S1,S2,S3,DA)
"RTN","IBTRH5",55,0)
 .... S LINE=$$BLDLN(ECTR,LINE)
"RTN","IBTRH5",56,0)
 .... S VALMCNT=VALMCNT+1,XSELCNT=$G(XSELCNT)+1
"RTN","IBTRH5",57,0)
 .... D SET^VALM10(VALMCNT,LINE,XSELCNT)
"RTN","IBTRH5",58,0)
 .... S ^TMP($J,"IBTRH5IX",XSELCNT)=DA
"RTN","IBTRH5",59,0)
 .... S XDA1=$G(^IBT(356.22,DA,103))
"RTN","IBTRH5",60,0)
 .... I $P(XDA1,"^",3)'="" D
"RTN","IBTRH5",61,0)
 ..... N XREVDA1
"RTN","IBTRH5",62,0)
 ..... D GETS^DIQ(356.021,$P(XDA1,"^",3),".01:.02",,"XREVDA1")
"RTN","IBTRH5",63,0)
 ..... S VALMCNT=VALMCNT+1
"RTN","IBTRH5",64,0)
 ..... D SET^VALM10(VALMCNT,"      Review Decision: "_XREVDA1(356.021,$P(XDA1,"^",3)_",",".01")_" - "_XREVDA1(356.021,$P(XDA1,"^",3)_",",".02"),XSELCNT)
"RTN","IBTRH5",65,0)
 I VALMCNT=0 D
"RTN","IBTRH5",66,0)
 . S ^TMP("IBTRH5",$J,1,0)="There are no events to display."
"RTN","IBTRH5",67,0)
 Q
"RTN","IBTRH5",68,0)
 ;
"RTN","IBTRH5",69,0)
BLDLN(ECTR,LINED) ; Builds a line to display on List screen for one event
"RTN","IBTRH5",70,0)
 ; Input:   ECTR    - Event counter
"RTN","IBTRH5",71,0)
 ;          LINED   - A1^A2^...A9 Where:
"RTN","IBTRH5",72,0)
 ;                      A1  - Patient Name
"RTN","IBTRH5",73,0)
 ;                      A2  - Patient Status ('I' or 'O')
"RTN","IBTRH5",74,0)
 ;                      A3  - External Appt or Admission date
"RTN","IBTRH5",75,0)
 ;                      A4  - Clinic or Ward name
"RTN","IBTRH5",76,0)
 ;                      A5  - COB ('P', 'S' or 'T')
"RTN","IBTRH5",77,0)
 ;                      A6  - Insurance Company Name
"RTN","IBTRH5",78,0)
 ;                      A7  - Certification Action Code
"RTN","IBTRH5",79,0)
 ; Output:  LINE    - Formatted for setting into the list display
"RTN","IBTRH5",80,0)
 N LINE
"RTN","IBTRH5",81,0)
 S LINE=$$SETSTR^VALM1(ECTR,"",1,4)                 ; Event #
"RTN","IBTRH5",82,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",1),LINE,6,23)   ; Patient Name
"RTN","IBTRH5",83,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",2),LINE,30,1)   ; Patient Status
"RTN","IBTRH5",84,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",3),LINE,32,8)   ; Appt/Adm Date
"RTN","IBTRH5",85,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",4),LINE,41,10)  ; Clinic or Ward
"RTN","IBTRH5",86,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",5),LINE,52,1)   ; COB
"RTN","IBTRH5",87,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",6),LINE,55,14)  ; Insurance Name
"RTN","IBTRH5",88,0)
 S LINE=$$SETSTR^VALM1($P(LINED,"^",7),LINE,70,5)   ; Certification Action Code
"RTN","IBTRH5",89,0)
 Q LINE
"RTN","IBTRH5",90,0)
 ;
"RTN","IBTRH5",91,0)
HELP ;EP
"RTN","IBTRH5",92,0)
 ; Display HCSR Response worklist Help
"RTN","IBTRH5",93,0)
 ; Input: None
"RTN","IBTRH5",94,0)
 D FULL^VALM1
"RTN","IBTRH5",95,0)
 S VALMBCK="R"
"RTN","IBTRH5",96,0)
 W @IOF,"Flags displayed on screen for S (Patient Status):"
"RTN","IBTRH5",97,0)
 W !,"  O - Outpatient"
"RTN","IBTRH5",98,0)
 W !,"  I - Inpatient"
"RTN","IBTRH5",99,0)
 W !!,"Flags displayed on screen for COB:"
"RTN","IBTRH5",100,0)
 W !,"  P - Primary Insurance"
"RTN","IBTRH5",101,0)
 W !,"  S - Secondary Insurance"
"RTN","IBTRH5",102,0)
 W !,"  T - Tertiary"
"RTN","IBTRH5",103,0)
 W !!,"Flags displayed for Cert Type (Certification Action):"
"RTN","IBTRH5",104,0)
 W !,"  A1 - Certified in Total"
"RTN","IBTRH5",105,0)
 W !,"  A2 - Certified in Partial"
"RTN","IBTRH5",106,0)
 W !,"  A3 - Not Certified"
"RTN","IBTRH5",107,0)
 W !,"  A6 - Modified "
"RTN","IBTRH5",108,0)
 W !,"  C  - Cancelled"
"RTN","IBTRH5",109,0)
 W !,"  CT - Contact Payer"
"RTN","IBTRH5",110,0)
 W !,"  NA - No Action Required"
"RTN","IBTRH5",111,0)
 W !,"  51 - Complete"
"RTN","IBTRH5",112,0)
 W !,"  71 - Term Expired"
"RTN","IBTRH5",113,0)
 W !,"The following Status indicator may appear to the left of the patient name:"
"RTN","IBTRH5",114,0)
 W !,"  #  - 278 has been not been initiated, entry is in-progress"
"RTN","IBTRH5",115,0)
 D PAUSE^VALM1
"RTN","IBTRH5",116,0)
 Q
"RTN","IBTRH5",117,0)
 ;
"RTN","IBTRH5",118,0)
DEL ;EP
"RTN","IBTRH5",119,0)
 ; Protocol Action to select an entry to be manually removed from the
"RTN","IBTRH5",120,0)
 ; Response Worklist
"RTN","IBTRH5",121,0)
 ; Input:   ^TMP("IBTRH5",$J)   - Current Array of displayed entries
"RTN","IBTRH5",122,0)
 ;          ^TMP($J,"IBTRH5IX") - Current Index of displayed entries
"RTN","IBTRH5",123,0)
 ; Output:  Selected Entry is removed from the worklist 
"RTN","IBTRH5",124,0)
 ;          Error messages display (potentially)
"RTN","IBTRH5",125,0)
 ;          ^TMP("IBTRH5",$J)   - Updated Array of displayed entries
"RTN","IBTRH5",126,0)
 ;          ^TMP($J,"IBTRH5IX") - Updated Index of displayed entries
"RTN","IBTRH5",127,0)
 N DIR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,EIEN,EIENS,ERROR,IEN,IX,LINE,MSG
"RTN","IBTRH5",128,0)
 N PROMPT,SDATA,DELRCODE,XCOM,COM,DIWETXT
"RTN","IBTRH5",129,0)
 S VALMBCK="R",ERROR=0
"RTN","IBTRH5",130,0)
 S VALMSG="#In-Prog"
"RTN","IBTRH5",131,0)
 ; First select the entry(s) to be removed from the worklist
"RTN","IBTRH5",132,0)
 S PROMPT="Select the worklist entry(s) to be deleted"
"RTN","IBTRH5",133,0)
 S MSG="Are you sure you want to delete "
"RTN","IBTRH5",134,0)
 ; Select the entry to be deleted
"RTN","IBTRH5",135,0)
 S EIENS=$$SELEVENT^IBTRH1(1,PROMPT,.DLINE,1,"IBTRH5IX")
"RTN","IBTRH5",136,0)
 I EIENS="" S VALMBCK="R" Q
"RTN","IBTRH5",137,0)
 ;; 1/19/16 comment out delete reason code entry
"RTN","IBTRH5",138,0)
 ;; enter a delete reason code
"RTN","IBTRH5",139,0)
D1 ;;
"RTN","IBTRH5",140,0)
 ;;S DIC(0)="AEQM",DIC="^IBT(356.023,"
"RTN","IBTRH5",141,0)
 ;;S DIC("A")="Select a Delete Reason Code: "
"RTN","IBTRH5",142,0)
 ;;D ^DIC
"RTN","IBTRH5",143,0)
 ;;I Y<0 Q:X="^"  W !,*7,">>>> A Delete Reason Code must be selected, or '^' to exit." G D1
"RTN","IBTRH5",144,0)
 ;;S DELRCODE=$P(Y,"^")
"RTN","IBTRH5",145,0)
 ;; 1/19/16 commented out code above to enter delete reason code
"RTN","IBTRH5",146,0)
 ;
"RTN","IBTRH5",147,0)
 Q:'$$ASKSURE^IBTRH1(DLINE,MSG)                 ; Final warning
"RTN","IBTRH5",148,0)
 F IX=1:1:$L(EIENS,",") D
"RTN","IBTRH5",149,0)
 . S EIEN=$P(EIENS,",",IX)
"RTN","IBTRH5",150,0)
 . S LINE=$P(DLINE,",",IX)
"RTN","IBTRH5",151,0)
 . ; Next update the status to be manually removed
"RTN","IBTRH5",152,0)
 . I '$$LOCKEV^IBTRH1(EIEN) D  Q
"RTN","IBTRH5",153,0)
 . . W !,*7,">>>> Someone else is editing entry ",LINE,". Try again later."
"RTN","IBTRH5",154,0)
 . . S ERROR=1
"RTN","IBTRH5",155,0)
 . K SDATA
"RTN","IBTRH5",156,0)
 . S IEN=EIEN_","
"RTN","IBTRH5",157,0)
 . S SDATA(356.22,IEN,.22)=1             ; Set Response manual remove flag
"RTN","IBTRH5",158,0)
 . S SDATA(356.22,IEN,.23)=$$NOW^XLFDT() ; Set Manually Removed Date/Time
"RTN","IBTRH5",159,0)
 . S SDATA(356.22,IEN,.24)=DUZ           ; Set Manually Removed By User
"RTN","IBTRH5",160,0)
 . ;;S SDATA(356.22,IEN,.25)=DELRCODE      ; Set Delete Reason code pointer
"RTN","IBTRH5",161,0)
 . I $P(^IBT(356.22,EIEN,0),"^",11)="" S SDATA(356.22,IEN,.11)=DUZ  ; 517-T14: if REQUESTED BY is blank, set it to user deleting
"RTN","IBTRH5",162,0)
 . D FILE^DIE("","SDATA")
"RTN","IBTRH5",163,0)
 . D UNLOCKEV^IBTRH1(EIEN)
"RTN","IBTRH5",164,0)
 K DIR
"RTN","IBTRH5",165,0)
 Q
"RTN","IBTRH5",166,0)
 ;
"RTN","IBTRH5",167,0)
EXIT ;EP
"RTN","IBTRH5",168,0)
 ; Exit the HCSR Response worklist
"RTN","IBTRH5",169,0)
 ; Input: None
"RTN","IBTRH5",170,0)
 K ^TMP("IBTRH5",$J),^TMP($J,"IBTRH5IX"),^TMP($J,"IBTRH5S")
"RTN","IBTRH5",171,0)
 K HCSRSRTR
"RTN","IBTRH5",172,0)
 D CLEAR^VALM1
"RTN","IBTRH5",173,0)
 Q
"RTN","IBTRH5",174,0)
 ;
"RTN","IBTRH5",175,0)
SORT(NOIOF) ;EP
"RTN","IBTRH5",176,0)
 ; Listman Protocol Action to sort the worklist
"RTN","IBTRH5",177,0)
 ; Input:   NOIOF       - 1 to not write @IOF, 0 otherwise
"RTN","IBTRH5",178,0)
 ;                        Optional, defaults to 0
"RTN","IBTRH5",179,0)
 ;          HCSRSRTR    - Current sort selection
"RTN","IBTRH5",180,0)
 ; Output:  HCSRSRTR    - New sort selection
"RTN","IBTRH5",181,0)
 N CTR,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","IBTRH5",182,0)
 S:'$D(NOIOF) NOIOF=0
"RTN","IBTRH5",183,0)
 D FULL^VALM1
"RTN","IBTRH5",184,0)
 S CTR=1
"RTN","IBTRH5",185,0)
 W:'NOIOF @IOF
"RTN","IBTRH5",186,0)
 W !,"Select the item to sort the records on the HCSR Response Worklist screen."
"RTN","IBTRH5",187,0)
 S XX="SO^"_CTR_":Oldest Entries First",CTR=CTR+1
"RTN","IBTRH5",188,0)
 S XX=XX_";"_CTR_":Newest Entries First",CTR=CTR+1
"RTN","IBTRH5",189,0)
 S:+IBFILTSR(0)=2 XX=XX_";"_CTR_":Outpatient Appointments First",CTR=CTR+1
"RTN","IBTRH5",190,0)
 S:+IBFILTSR(0)=2 XX=XX_";"_CTR_":Inpatient Admissions First",CTR=CTR+1
"RTN","IBTRH5",191,0)
 S XX=XX_";"_CTR_":Insurance Company Name",CTR=CTR+1
"RTN","IBTRH5",192,0)
 S XX=XX_";"_CTR_":Certification Type"
"RTN","IBTRH5",193,0)
 S DIR(0)=XX
"RTN","IBTRH5",194,0)
 S DIR("A")="Sort the list by",DIR("B")=$P($G(HCSRSRTR),"^",2)
"RTN","IBTRH5",195,0)
 D ^DIR K DIR
"RTN","IBTRH5",196,0)
 I 'Y S VALMBCK="R" Q                           ; User quit or timed out
"RTN","IBTRH5",197,0)
 S HCSRSRTR=Y_"^"_Y(0)                          ; Sort selection
"RTN","IBTRH5",198,0)
 ; Rebuild and resort the list and update the list header
"RTN","IBTRH5",199,0)
 D INIT,HDR
"RTN","IBTRH5",200,0)
 S VALMBCK="R",VALMBG=1
"RTN","IBTRH5",201,0)
 Q
"RTN","IBTRH5",202,0)
 ;
"RTN","IBTRH5",203,0)
SORT1    ; Builds the sorted list of HCSR Responses to be displayed
"RTN","IBTRH5",204,0)
 ; Input:   HCSRSRTR            - Current sort selection
"RTN","IBTRH5",205,0)
 ; Output:  ^TMP("IBTRH5S",$J)  - Sorted Event entries to display 
"RTN","IBTRH5",206,0)
 ; 
"RTN","IBTRH5",207,0)
 N CSTAT,DISPDT,ECTR,EIEN,EVDT,EVENT,XX
"RTN","IBTRH5",208,0)
 K ^TMP($J,"IBTRH5S")
"RTN","IBTRH5",209,0)
 S XX=$P(^IBE(350.9,1,62),"^",12)*-1   ; # of days to display
"RTN","IBTRH5",210,0)
 S CSTAT=5                             ; Event status for responses
"RTN","IBTRH5",211,0)
 S DISPDT=$$FMADD^XLFDT(DT,XX)
"RTN","IBTRH5",212,0)
 S EVDT=DISPDT,ECTR=0
"RTN","IBTRH5",213,0)
 F  D  Q:EVDT=""
"RTN","IBTRH5",214,0)
 . S EVDT=$O(^IBT(356.22,"AD",CSTAT,EVDT))
"RTN","IBTRH5",215,0)
 . Q:EVDT=""
"RTN","IBTRH5",216,0)
 . S EIEN=""
"RTN","IBTRH5",217,0)
 . F  D  Q:EIEN=""
"RTN","IBTRH5",218,0)
 .. S EIEN=$O(^IBT(356.22,"AD",CSTAT,EVDT,EIEN))
"RTN","IBTRH5",219,0)
 .. Q:EIEN=""
"RTN","IBTRH5",220,0)
 .. S EVENT=$G(^IBT(356.22,EIEN,0))
"RTN","IBTRH5",221,0)
 .. Q:$P(EVENT,"^",13)=""        ; Not a Response entry - skip
"RTN","IBTRH5",222,0)
 .. Q:$P(EVENT,"^",22)=1         ; Manually Removed - skip
"RTN","IBTRH5",223,0)
 .. Q:$$SKIP(EIEN,EVENT)         ; Entry is filtered out
"RTN","IBTRH5",224,0)
 .. S ECTR=ECTR+1
"RTN","IBTRH5",225,0)
 .. I '$D(ZTQUEUED),'(ECTR#15) W "."
"RTN","IBTRH5",226,0)
 .. D ONEEVENT(CSTAT,EIEN,EVENT) ; Add one event to sort array
"RTN","IBTRH5",227,0)
 Q
"RTN","IBTRH5",228,0)
 ;
"RTN","IBTRH5",229,0)
SKIP(EIEN,EVENT) ; Checks to see if the specified event entry should display on
"RTN","IBTRH5",230,0)
 ; the list
"RTN","IBTRH5",231,0)
 ; Input:   EIEN        - IEN of the Event entry
"RTN","IBTRH5",232,0)
 ;          EVENT       - Node0 of the Event Entry being checked
"RTN","IBTRH5",233,0)
 ;          IBFILTSR()  - Array of filter settings. See FILTERS for a
"RTN","IBTRH5",234,0)
 ;                        detailed explanation of the FILTERS array
"RTN","IBTRH5",235,0)
 ; Returns: 1 - Don't display the entry on the list, 0 - Display entry on list
"RTN","IBTRH5",236,0)
 N IEN,IORO,SKIP,TRICARE,NOW,XX,ZZ
"RTN","IBTRH5",237,0)
 S IORO=$P(EVENT,"^",4)                         ; 'I' Inpatient, 'O' Outpatient
"RTN","IBTRH5",238,0)
 S NOW=$$DT^XLFDT()                             ; Today's Internal Fileman date
"RTN","IBTRH5",239,0)
 I IORO="I",$P(IBFILTSR(0),"^",1)=0 Q 1         ; Only show outpatients, skip
"RTN","IBTRH5",240,0)
 I IORO="O",$P(IBFILTSR(0),"^",1)=1 Q 1         ; Only show inpatients, skip
"RTN","IBTRH5",241,0)
 S TRICARE=$$TRICARE^IBTRH1A(EVENT)             ; Is event for Tricare?
"RTN","IBTRH5",242,0)
 I $P(IBFILTSR(0),"^",2)=0,TRICARE Q 1          ; Only show CPAC, Skip
"RTN","IBTRH5",243,0)
 I $P(IBFILTSR(0),"^",2)=1,'TRICARE Q 1         ; Only show Champ/Tricare, Skip
"RTN","IBTRH5",244,0)
 S SKIP=0
"RTN","IBTRH5",245,0)
 ; Check Division filter
"RTN","IBTRH5",246,0)
 I $D(IBFILTSR(3)) D  Q:SKIP 1
"RTN","IBTRH5",247,0)
 . S XX="^"_IBFILTSR(3)_"^",Y=1
"RTN","IBTRH5",248,0)
 . S IEN=$P(EVENT,"^",5)                        ; Ward IEN
"RTN","IBTRH5",249,0)
 . S:IEN="" IEN=$P(EVENT,"^",6),Y=0             ; Clinic IEN
"RTN","IBTRH5",250,0)
 . I Y S ZZ=$$GET1^DIQ(42,IEN_",",.015,"I")
"RTN","IBTRH5",251,0)
 . E  S ZZ=$$GET1^DIQ(44,IEN_",",3.5,"I")
"RTN","IBTRH5",252,0)
 . S ZZ="^"_ZZ_"^"
"RTN","IBTRH5",253,0)
 . I XX'[ZZ S SKIP=1                            ; Wrong division
"RTN","IBTRH5",254,0)
 ; Check Inpatient entry
"RTN","IBTRH5",255,0)
 I IORO="I" D  Q:SKIP 1
"RTN","IBTRH5",256,0)
 . Q:$G(IBFILTSR(2))=""                         ; No Ward filters display
"RTN","IBTRH5",257,0)
 . S IEN=$P(EVENT,"^",5)                        ; Ward IEN
"RTN","IBTRH5",258,0)
 . S XX="^"_IBFILTSR(2)_"^"
"RTN","IBTRH5",259,0)
 . Q:XX[("^"_IEN_"^")                           ; On inclusion list display
"RTN","IBTRH5",260,0)
 . S SKIP=1                                     ; Not on inclusion list skip
"RTN","IBTRH5",261,0)
 ; Check Outpatient entry
"RTN","IBTRH5",262,0)
 I IORO="O" D  Q:SKIP 1
"RTN","IBTRH5",263,0)
 . Q:$G(IBFILTSR(1))=""                         ; No Clinic filters display
"RTN","IBTRH5",264,0)
 . S IEN=$P(EVENT,"^",6)                        ; Clinic IEN
"RTN","IBTRH5",265,0)
 . S XX="^"_IBFILTSR(1)_"^"
"RTN","IBTRH5",266,0)
 . Q:XX[("^"_IEN_"^")                           ; On inclusion list display
"RTN","IBTRH5",267,0)
 . S SKIP=1
"RTN","IBTRH5",268,0)
 Q 0                                            ; Display this entry
"RTN","IBTRH5",269,0)
 ;
"RTN","IBTRH5",270,0)
ONEEVENT(CSTAT,EIEN,EVENT)  ; Adds one event to the sorted list
"RTN","IBTRH5",271,0)
 ; Input:   HCSRSORT            - Current sort selection
"RTN","IBTRH5",272,0)
 ;          CSTAT               - Status of the event to be added
"RTN","IBTRH5",273,0)
 ;          EIEN                - Internal IEN of the event being added
"RTN","IBTRH5",274,0)
 ;          EVENT               - ^IBT(356.22,EIEN,0)
"RTN","IBTRH5",275,0)
 ; Output:  ^TMP("IBTRH5S",$J)  - Sorted Event entries to display 
"RTN","IBTRH5",276,0)
 N ADATE,CERTCDE,DFN,ESTATUS,HS1,HS2,HS3,ICOB,IENS,IGROUP,IIEN,INAME,ISTATUS
"RTN","IBTRH5",277,0)
 N LINE,PNAME,RFLG,IMIEN
"RTN","IBTRH5",278,0)
 S (INAME,LINE)=""
"RTN","IBTRH5",279,0)
 ; Symbol to display in front of the patient name (if any)
"RTN","IBTRH5",280,0)
 S RFLG=$S($$GET1^DIQ(356.22,EIEN_",",.21,"I")=1:"#",1:" ")
"RTN","IBTRH5",281,0)
 S DFN=$P(EVENT,"^",2),PNAME=""                 ; Patient IEN
"RTN","IBTRH5",282,0)
 S ESTATUS=$P(EVENT,"^",4)                      ; Patient Status
"RTN","IBTRH5",283,0)
 S $P(LINE,"^",2)=ESTATUS
"RTN","IBTRH5",284,0)
 S ADATE=$P(EVENT,"^",7)                        ; Internal Appt/Adm Date/Tm
"RTN","IBTRH5",285,0)
 S $P(LINE,"^",3)=$$FMTE^XLFDT(ADATE,"2DZ")
"RTN","IBTRH5",286,0)
 S ISTATUS=1
"RTN","IBTRH5",287,0)
 I ESTATUS="O",+HCSRSRTR=3 S ISTATUS=0           ; Appointment sort
"RTN","IBTRH5",288,0)
 I ESTATUS="I",+HCSRSRTR=4 S ISTATUS=0           ; Admissions sort
"RTN","IBTRH5",289,0)
 S $P(LINE,"^",1)=$$PNAME^IBTRH1A(DFN,RFLG,.PNAME) ; Set 'PAT NAME' column
"RTN","IBTRH5",290,0)
 S $P(LINE,"^",4)=$$PATLOC^IBTRH1A(EVENT)        ; Ward or Clinic
"RTN","IBTRH5",291,0)
 S IMIEN=$P(EVENT,"^",3),IENS=IMIEN_","_DFN_"," ; Insurance Multiple IEN
"RTN","IBTRH5",292,0)
 S IIEN=$$GET1^DIQ(2.312,IENS,.01,"I")          ; Insurance Company IEN
"RTN","IBTRH5",293,0)
 S IGROUP=$$GET1^DIQ(2.312,IENS,.18,"I")        ; Insurance Group IEN
"RTN","IBTRH5",294,0)
 S:+IIEN INAME=$$GET1^DIQ(36,IIEN_",",.01)      ; Insurance Company Name
"RTN","IBTRH5",295,0)
 S:INAME="" INAME="**DELETED**"
"RTN","IBTRH5",296,0)
 S ICOB=$$GET1^DIQ(2.312,IENS,.2,"I")           ; Level of COB External Display
"RTN","IBTRH5",297,0)
 S:ICOB="" ICOB=1
"RTN","IBTRH5",298,0)
 S $P(LINE,"^",5)=$S(ICOB=1:"P",ICOB=2:"S",1:"T") ; Level of COB External Display
"RTN","IBTRH5",299,0)
 S CERTCDE=$$GET1^DIQ(356.22,EIEN_",",103.01)
"RTN","IBTRH5",300,0)
 S $P(LINE,"^",6)=$E(INAME,1,14)
"RTN","IBTRH5",301,0)
 I +HCSRSRTR=1 S HS1=ADATE,HS2=PNAME,HS3=ICOB    ; Oldest event first
"RTN","IBTRH5",302,0)
 I +HCSRSRTR=2 S HS1=ADATE*-1,HS2=PNAME,HS3=ICOB ; Newest event first
"RTN","IBTRH5",303,0)
 I +HCSRSRTR=3 S HS1=ISTATUS,HS2=PNAME,HS3=ICOB  ; Appointments first
"RTN","IBTRH5",304,0)
 I +HCSRSRTR=4 S HS1=ISTATUS,HS2=PNAME,HS3=ICOB  ; Admissions sort
"RTN","IBTRH5",305,0)
 I +HCSRSRTR=5 D                                 ; Insurance name sort
"RTN","IBTRH5",306,0)
 . S HS1=$$UP^XLFSTR(INAME),HS2=PNAME,HS3=ICOB
"RTN","IBTRH5",307,0)
 I +HCSRSRTR=6 S HS1=CERTCDE,HS2=PNAME,HS3=ADATE ; Certification Action sort
"RTN","IBTRH5",308,0)
 S $P(LINE,"^",7)=CERTCDE
"RTN","IBTRH5",309,0)
 S ^TMP($J,"IBTRH5S",HS1,HS2,HS3,EIEN)=LINE
"RTN","IBTRH5",310,0)
 Q
"RTN","IBTRH5",311,0)
 ;
"RTN","IBTRH5",312,0)
SELEVENT(FULL,PROMPT,DLINE)    ;EP
"RTN","IBTRH5",313,0)
 ; Select an Event to perform an action upon
"RTN","IBTRH5",314,0)
 ; upon
"RTN","IBTRH5",315,0)
 ; Input:   FULL                - 1 - full screen mode, 0 otherwise
"RTN","IBTRH5",316,0)
 ;          PROMPT              - Prompt to be displayed to the user
"RTN","IBTRH5",317,0)
 ;          ^TMP("IBTRH5",$J)   - Array of displayed events
"RTN","IBTRH5",318,0)
 ;          ^TMP($J,"IBTRH5IX") - Index of displayed lines
"RTN","IBTRH5",319,0)
 ; Output:  DLINE               - Line # of the selected event
"RTN","IBTRH5",320,0)
 ; Returns: EIN                 - IEN of the selected event or 
"RTN","IBTRH5",321,0)
 ;                                0 if none selected
"RTN","IBTRH5",322,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,EIEN,X,Y
"RTN","IBTRH5",323,0)
 D:FULL FULL^VALM1
"RTN","IBTRH5",324,0)
 S DLINE=$P($P($G(XQORNOD(0)),"^",4),"=",2)     ; User selection with action
"RTN","IBTRH5",325,0)
 I $D(^TMP($J,"IBTRH5IX",+DLINE)) D  Q EIEN
"RTN","IBTRH5",326,0)
 . S EIEN=^TMP($J,"IBTRH5IX",DLINE)
"RTN","IBTRH5",327,0)
 S DIR(0)="NO^"_VALMBG_":"_VALMLST_":0"         ; Select an event from screen
"RTN","IBTRH5",328,0)
 S DIR("A")=PROMPT
"RTN","IBTRH5",329,0)
 D ^DIR K DIR
"RTN","IBTRH5",330,0)
 Q:'Y 0
"RTN","IBTRH5",331,0)
 S DLINE=Y,EIEN=^TMP($J,"IBTRH5IX",DLINE)
"RTN","IBTRH5",332,0)
 Q EIEN
"RTN","IBTRH5",333,0)
 ;
"RTN","IBTRH5",334,0)
REFRESH ;EP
"RTN","IBTRH5",335,0)
 ; Protocol action to search for new Responses, reset filter
"RTN","IBTRH5",336,0)
 ; and redisplay the HCSR Response Worklist
"RTN","IBTRH5",337,0)
 ; Input:   HCSSORTR            - Current sort selection
"RTN","IBTRH5",338,0)
 ; Output:  IBFILTSR()          - Array of filter criteria
"RTN","IBTRH5",339,0)
 ;                                NOTE: Any modifications done to these filters
"RTN","IBTRH5",340,0)
 ;                                      are not returned back to HCSR Worklist.
"RTN","IBTRH5",341,0)
 ;          ^TMP("IBTRH5",$J)   - Body lines to display
"RTN","IBTRH5",342,0)
 ;          ^TMP($J,"IBTRH5S")  - Sorted Body lines to display
"RTN","IBTRH5",343,0)
 ;          ^TMP($J,"IBTRH5IX") - Index of Event IENs by display line
"RTN","IBTRH5",344,0)
 ;
"RTN","IBTRH5",345,0)
 ; First check to see if we can create more event entries
"RTN","IBTRH5",346,0)
 D FULL^VALM1
"RTN","IBTRH5",347,0)
 S VALMBCK="R"
"RTN","IBTRH5",348,0)
 Q:'$$FILTERS^IBTRH1A(.IBFILTSR)                ; Reset Filter criteria
"RTN","IBTRH5",349,0)
 D SORT(1)
"RTN","IBTRH5",350,0)
 ;;3/21/16 JWS don't need to D HDR,INIT - already done in SORT(1) above
"RTN","IBTRH5",351,0)
 ;D HDR                                          ; Redisplay the header
"RTN","IBTRH5",352,0)
 ;D INIT                                         ; Rebuild the worklist
"RTN","IBTRH5",353,0)
 Q
"RTN","IBTRH5",354,0)
 ;
"RTN","IBTRH5",355,0)
SEND278(EIEN) ;EP
"RTN","IBTRH5",356,0)
 ; Protocol action to create a new 278 request from a response. Copies the
"RTN","IBTRH5",357,0)
 ; Request data from the response's original request and then allows the
"RTN","IBTRH5",358,0)
 ; user to edit it before sending the request
"RTN","IBTRH5",359,0)
 ; Input:   EIEN    - IEN of the Response Entry to create a new worklist
"RTN","IBTRH5",360,0)
 ;                    entry from. Optional, only set when called from
"RTN","IBTRH5",361,0)
 ;                    Protocol IBT HCSR RESPONSE EE SEND278 - SR from
"RTN","IBTRH5",362,0)
 ;                    the EE action off of the Response Worklist.
"RTN","IBTRH5",363,0)
 N DLINE,IBTRENT,IBTRIEN,PROMPT,REIEN,SEIEN,IBRESP
"RTN","IBTRH5",364,0)
 S SEIEN=$S($D(EIEN):EIEN,1:"")
"RTN","IBTRH5",365,0)
 ; 
"RTN","IBTRH5",366,0)
 ; First select the entry to create a request for from the worklist
"RTN","IBTRH5",367,0)
 S PROMPT="Select the worklist entry"
"RTN","IBTRH5",368,0)
 S:SEIEN="" SEIEN=$$SELEVENT^IBTRH1(1,PROMPT,.DLINE,0,"IBTRH5IX")
"RTN","IBTRH5",369,0)
 I SEIEN="" S VALMBCK="R" Q
"RTN","IBTRH5",370,0)
 ; do not allow multiple 278s to be created from the same response
"RTN","IBTRH5",371,0)
 I $P(^IBT(356.22,SEIEN,0),"^",27) D  Q
"RTN","IBTRH5",372,0)
 . W !,*7,">>>> A 278 request has already been created from this response message."
"RTN","IBTRH5",373,0)
 . D PAUSE^VALM1
"RTN","IBTRH5",374,0)
 ;
"RTN","IBTRH5",375,0)
 ; Next Lock the response entry 
"RTN","IBTRH5",376,0)
 I '$$LOCKEV^IBTRH1(SEIEN) D  Q
"RTN","IBTRH5",377,0)
 . W !,*7,">>>> Someone else is editing this entry. Try again later."
"RTN","IBTRH5",378,0)
 . D PAUSE^VALM1
"RTN","IBTRH5",379,0)
 ; Copy the request
"RTN","IBTRH5",380,0)
 S REIEN=$P(^IBT(356.22,SEIEN,0),"^",13)            ; Original Request entry
"RTN","IBTRH5",381,0)
 S IBTRIEN=$$CRTENTRY^IBTRH5C(REIEN,SEIEN,"","",1)  ; Copy the original request
"RTN","IBTRH5",382,0)
 D UNLOCKEV^IBTRH1(SEIEN)                           ; Unlock the response entry
"RTN","IBTRH5",383,0)
 Q:IBTRIEN=0                                        ; Copy was unsuccessful
"RTN","IBTRH5",384,0)
 ; Next Lock the new request entry 
"RTN","IBTRH5",385,0)
 I '$$LOCKEV^IBTRH1(IBTRIEN) D  Q
"RTN","IBTRH5",386,0)
 . W !,*7,">>>> Someone else is editing entry. Try again later."
"RTN","IBTRH5",387,0)
 . D PAUSE^VALM1
"RTN","IBTRH5",388,0)
 S IBTRENT=2                                    ; Flag to indicate origin from here
"RTN","IBTRH5",389,0)
 D SEND278^IBTRH2                               ; Create and Send the request
"RTN","IBTRH5",390,0)
 D UNLOCKEV^IBTRH1(IBTRIEN)                     ; Unlock the request entry
"RTN","IBTRH5",391,0)
 W !,"A new HCSR Worklist entry has been created for Response."
"RTN","IBTRH5",392,0)
 D PAUSE^VALM1
"RTN","IBTRH5",393,0)
 Q
"RTN","IBTRH5",394,0)
 ;
"RTN","IBTRH5",395,0)
DELAY ;EP
"RTN","IBTRH5",396,0)
 ; Protocol action to create a new request from the response but delay its
"RTN","IBTRH5",397,0)
 ; viewing on the HCSR Worklist until admission of the entry has been 
"RTN","IBTRH5",398,0)
 ; discharged.
"RTN","IBTRH5",399,0)
 ; Input:   ^TMP("IBTRH5",$J)   - Current Array of displayed entries
"RTN","IBTRH5",400,0)
 ;          ^TMP($J,"IBTRH5IX") - Current Index of displayed entries
"RTN","IBTRH5",401,0)
 ; Output:  A new Request is created from the Selected Entry (potentially)
"RTN","IBTRH5",402,0)
 N DDATE,DIR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,EIEN,EIENS,FIELD,GOOD
"RTN","IBTRH5",403,0)
 N IX,LINE,MSG,PROMPT,REIEN,SDATA
"RTN","IBTRH5",404,0)
 S VALMBCK="R",GOOD=0
"RTN","IBTRH5",405,0)
 S MSG="Are you sure you want to delay "
"RTN","IBTRH5",406,0)
 S PROMPT="Select the worklist entry(s) to be delayed"
"RTN","IBTRH5",407,0)
 ; First select the entry(s) to be delay review from the worklist
"RTN","IBTRH5",408,0)
 S EIENS=$$SELEVENT^IBTRH1(1,PROMPT,.DLINE,1,"IBTRH5IX")
"RTN","IBTRH5",409,0)
 I EIENS="" S VALMBCK="R" Q
"RTN","IBTRH5",410,0)
 S DDATE=$$GETDDATE^IBTRH1B(DLINE)              ; Get delay date
"RTN","IBTRH5",411,0)
 Q:DDATE=""
"RTN","IBTRH5",412,0)
 S MSG=MSG_$S(DLINE[",":"Entries ",1:"Entry ")_DLINE_" until "
"RTN","IBTRH5",413,0)
 S MSG=MSG_$S(DDATE="D":"Discharge",1:$$FMTE^XLFDT(DDATE,"2Z"))
"RTN","IBTRH5",414,0)
 Q:'$$ASKSURE^IBTRH1(DLINE,MSG,1)               ; Final warning
"RTN","IBTRH5",415,0)
 F IX=1:1:$L(EIENS,",") D
"RTN","IBTRH5",416,0)
 . S EIEN=$P(EIENS,",",IX)
"RTN","IBTRH5",417,0)
 . S LINE=$P(DLINE,",",IX)
"RTN","IBTRH5",418,0)
 . ; do not allow multiple 278s to be created from the same response
"RTN","IBTRH5",419,0)
 . I $P(^IBT(356.22,EIEN,0),"^",27) D  Q
"RTN","IBTRH5",420,0)
 .. W !,*7,">>>> A 278 request has already been created from this response message."
"RTN","IBTRH5",421,0)
 . ; Only allow delay of events for Inpatients
"RTN","IBTRH5",422,0)
 . I $P(^IBT(356.22,EIEN,0),"^",4)="O" D  Q
"RTN","IBTRH5",423,0)
 .. W !,*7,">>>> Entry ",LINE," is for an Outpatient and cannot be delayed"
"RTN","IBTRH5",424,0)
 . ; Next set the delay date of the entry
"RTN","IBTRH5",425,0)
 . I '$$LOCKEV^IBTRH1(EIEN) D  Q
"RTN","IBTRH5",426,0)
 .. W !,*7,">>>> Someone else is editing entry ",LINE,". Try again later."
"RTN","IBTRH5",427,0)
 . ; Copy the request
"RTN","IBTRH5",428,0)
 . S GOOD=1
"RTN","IBTRH5",429,0)
 . S REIEN=$P(^IBT(356.22,EIEN,0),"^",13)                 ; Original Request entry
"RTN","IBTRH5",430,0)
 . S IBTRIEN=$$CRTENTRY^IBTRH5C(EIEN,REIEN,"","",1,DDATE) ; Copy original request
"RTN","IBTRH5",431,0)
 . D UNLOCKEV^IBTRH1(EIEN)
"RTN","IBTRH5",432,0)
 K DIR
"RTN","IBTRH5",433,0)
 I GOOD D
"RTN","IBTRH5",434,0)
 . W !!,$S(DLINE[",":"Entries ",1:"Entry ")_DLINE
"RTN","IBTRH5",435,0)
 . W $S(DLINE[",":" have_",1:" has ")_"been delayed"
"RTN","IBTRH5",436,0)
 D PAUSE^VALM1
"RTN","IBTRH5",437,0)
 Q
"RTN","IBTRH5",438,0)
 ;
"RTN","IBTRH5A")
0^19^B142025931^n/a
"RTN","IBTRH5A",1,0)
IBTRH5A ;ALB/FA - HCSR Create 278 Request ;12-AUG-2014
"RTN","IBTRH5A",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5A",4,0)
 ;;
"RTN","IBTRH5A",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5A",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5A",7,0)
 ;
"RTN","IBTRH5A",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5A",9,0)
 ;    CERTCAT   - Function called from within Input Template: IB CREATE 278 REQUEST
"RTN","IBTRH5A",10,0)
 ;                to allow the user to enter Certification information for a
"RTN","IBTRH5A",11,0)
 ;                selected Certification Code Category.
"RTN","IBTRH5A",12,0)
 ;    CERTCOND  - Dictionary Screen function for Certification Conditions. 
"RTN","IBTRH5A",13,0)
 ;                Prevents duplicate Certification Conditions from being entered.
"RTN","IBTRH5A",14,0)
 ;    CERTCNDP  - Function to check for subsequent Certification Conditions 
"RTN","IBTRH5A",15,0)
 ;                values for the specified field
"RTN","IBTRH5A",16,0)
 ;    DXCODE    - Dictionary Screen function for Diagnosis Code field 356.22,3.02
"RTN","IBTRH5A",17,0)
 ;    RCAUSEP   - Function to check for subsequent Related Causes values for
"RTN","IBTRH5A",18,0)
 ;                the specified field
"RTN","IBTRH5A",19,0)
 ;    RCAUSE    - Dictionary Screen function for Related Causes fields.
"RTN","IBTRH5A",20,0)
 ;                (356.22,2.8,356.22,2.9,356.22,2.1)
"RTN","IBTRH5A",21,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5A",22,0)
 ;
"RTN","IBTRH5A",23,0)
RCAUSE(FIELD) ;EP
"RTN","IBTRH5A",24,0)
 ; Dictionary Screen function called from the following fields: 2.08,2.09,2.1
"RTN","IBTRH5A",25,0)
 ; Prevents the same Related Cause from being entered in more than one field.
"RTN","IBTRH5A",26,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5A",27,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",28,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5A",29,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5A",30,0)
 N NDE,RETURN
"RTN","IBTRH5A",31,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5A",32,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5A",33,0)
 S NDE=$G(^IBT(356.22,DA,2))
"RTN","IBTRH5A",34,0)
 ;
"RTN","IBTRH5A",35,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5A",36,0)
 I FIELD=2.08 D  Q RETURN
"RTN","IBTRH5A",37,0)
 . I $P(NDE,"^",9)=Y S RETURN=0 Q
"RTN","IBTRH5A",38,0)
 . I $P(NDE,"^",10)=Y S RETURN=0 Q
"RTN","IBTRH5A",39,0)
 I FIELD=2.09 D  Q RETURN
"RTN","IBTRH5A",40,0)
 . I $P(NDE,"^",8)=Y S RETURN=0 Q
"RTN","IBTRH5A",41,0)
 . I $P(NDE,"^",10)=Y S RETURN=0 Q
"RTN","IBTRH5A",42,0)
 . I Y'="AP",Y'="EM" S RETURN=0 Q
"RTN","IBTRH5A",43,0)
 I FIELD=2.1 D  Q RETURN
"RTN","IBTRH5A",44,0)
 . I Y'="AP" S RETURN=0 Q
"RTN","IBTRH5A",45,0)
 Q RETURN
"RTN","IBTRH5A",46,0)
 ;
"RTN","IBTRH5A",47,0)
RCAUSEP(FIELD) ;EP
"RTN","IBTRH5A",48,0)
 ; Called from Input Template IB CREATE 278 REQUEST for fields: 2.08, 2.09
"RTN","IBTRH5A",49,0)
 ; Checks to see if subsequent Related Causes entries have values.
"RTN","IBTRH5A",50,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5A",51,0)
 ;                    Set to 'ALL' to see if any of the 3 have a value
"RTN","IBTRH5A",52,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",53,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5A",54,0)
 N NDE,RETURN
"RTN","IBTRH5A",55,0)
 S NDE=$G(^IBT(356.22,DA,2))
"RTN","IBTRH5A",56,0)
 S RETURN=0
"RTN","IBTRH5A",57,0)
 ;
"RTN","IBTRH5A",58,0)
 I FIELD="ALL" D  Q RETURN
"RTN","IBTRH5A",59,0)
 . I $P(NDE,"^",8)'="" S RETURN=1 Q
"RTN","IBTRH5A",60,0)
 . I $P(NDE,"^",9)'="" S RETURN=1 Q
"RTN","IBTRH5A",61,0)
 . I $P(NDE,"^",10)'="" S RETURN=1 Q
"RTN","IBTRH5A",62,0)
 I FIELD=2.08 D  Q RETURN
"RTN","IBTRH5A",63,0)
 . I $P(NDE,"^",9)'="" S RETURN=1 Q
"RTN","IBTRH5A",64,0)
 . I $P(NDE,"^",10)'="" S RETURN=1 Q
"RTN","IBTRH5A",65,0)
 I FIELD=2.09 D  Q RETURN
"RTN","IBTRH5A",66,0)
 . I ($P(NDE,"^",8)="AP")!($P(NDE,"^",9)="AP") S RETURN=0 Q
"RTN","IBTRH5A",67,0)
 . I $P(NDE,"^",10)="AP" S RETURN=1 Q
"RTN","IBTRH5A",68,0)
 . I $P(NDE,"^",9)="",$P(NDE,"^",10)="" S RETURN=0 Q
"RTN","IBTRH5A",69,0)
 . S RETURN=1
"RTN","IBTRH5A",70,0)
 Q RETURN
"RTN","IBTRH5A",71,0)
 ;
"RTN","IBTRH5A",72,0)
DXCODE() ;EP
"RTN","IBTRH5A",73,0)
 ; Dictionary Screen function called from field: 3.02
"RTN","IBTRH5A",74,0)
 ; Prevents a duplicate ICD-9/ICD-10 or DRG Diagnosis from being entered
"RTN","IBTRH5A",75,0)
 ; Input:   DA      - IEN of Diagnosis multiple being entered/edited 95.3
"RTN","IBTRH5A",76,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",77,0)
 ;          DIC     - Contains the global ref of dictionary being checked
"RTN","IBTRH5A",78,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5A",79,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5A",80,0)
 N CTYPE,DXCD,DXCDS,DXTYPE,IX,XX
"RTN","IBTRH5A",81,0)
 Q:Y="" 1
"RTN","IBTRH5A",82,0)
 S DXTYPE=$P($G(^IBT(356.22,DA(1),3,DA,0)),"^",1)
"RTN","IBTRH5A",83,0)
 Q:DXTYPE="" 1
"RTN","IBTRH5A",84,0)
 ;
"RTN","IBTRH5A",85,0)
 ; Diagnosis Code must be from file 80.2 for a Diagnosis Type of
"RTN","IBTRH5A",86,0)
 ; Diagnosis Related Group (DRG)
"RTN","IBTRH5A",87,0)
 I DXTYPE=9,$P(DIC,"^",2)'="ICD(" Q 0
"RTN","IBTRH5A",88,0)
 ;
"RTN","IBTRH5A",89,0)
 ; Check for LOI - Logical Observation Identifier Codes
"RTN","IBTRH5A",90,0)
 I DXTYPE=10,$P(DIC,"^",2)'="LAB(95.3," Q 0
"RTN","IBTRH5A",91,0)
 ;
"RTN","IBTRH5A",92,0)
 ; Diagnosis Code must be from file 80 for all other Diagnosis Types
"RTN","IBTRH5A",93,0)
 I DXTYPE'=9,$P(DIC,"^",2)'="ICD9(" Q 0
"RTN","IBTRH5A",94,0)
 ;
"RTN","IBTRH5A",95,0)
 S CTYPE=$$GET1^DIQ(80,Y_",",1.1)                      ; Coding System
"RTN","IBTRH5A",96,0)
 I CTYPE'="",DXTYPE'<1,DXTYPE'>4,CTYPE'["ICD-10-" Q 0  ; Not an ICD-10 Code
"RTN","IBTRH5A",97,0)
 I CTYPE'="",DXTYPE'<5,DXTYPE'>8,CTYPE'["ICD-9-" Q 0   ; Not an ICD-9 Code
"RTN","IBTRH5A",98,0)
 ;
"RTN","IBTRH5A",99,0)
 S IX=0,DXCDS=""
"RTN","IBTRH5A",100,0)
 F  D  Q:+IX=0
"RTN","IBTRH5A",101,0)
 . S IX=$O(^IBT(356.22,DA(1),3,IX))
"RTN","IBTRH5A",102,0)
 . Q:+IX=0
"RTN","IBTRH5A",103,0)
 . Q:IX=DA                                      ; Skip Diagnosis being edited
"RTN","IBTRH5A",104,0)
 . S DXCD=$P(^IBT(356.22,DA(1),3,IX,0),"^",2)
"RTN","IBTRH5A",105,0)
 . S DXCDS=$S(DXCDS="":DXCD,1:DXCDS_"^"_DXCD)
"RTN","IBTRH5A",106,0)
 ;
"RTN","IBTRH5A",107,0)
 ; Diagnosis already exists in a different multiple
"RTN","IBTRH5A",108,0)
 S XX=$S(DXTYPE=10:Y_";LAB(95.3,",DXTYPE=9:Y_";ICD(",1:Y_";ICD9(")
"RTN","IBTRH5A",109,0)
 I ("^"_DXCDS_"^")[("^"_XX_"^") Q 0
"RTN","IBTRH5A",110,0)
 Q 1
"RTN","IBTRH5A",111,0)
 ;
"RTN","IBTRH5A",112,0)
CERTCAT(IBPSTAT)    ;EP
"RTN","IBTRH5A",113,0)
 ; Called from Input Template: IB CREATE 278 REQUEST
"RTN","IBTRH5A",114,0)
 ; Used to ask the user if they want to add/edit information for a specified 
"RTN","IBTRH5A",115,0)
 ; Certification Code Category.  Prompts for a category and then returns the
"RTN","IBTRH5A",116,0)
 ; 'Branch To' Label for the specified category to be added edited
"RTN","IBTRH5A",117,0)
 ; Input:   IBPSTAT - 'I' - Entry is for an In-Patient
"RTN","IBTRH5A",118,0)
 ;                    'O' - Entry is for an Out-Patient
"RTN","IBTRH5A",119,0)
 ; Output:  IHUPOUT - Defined and set to 1 if user entered '^'
"RTN","IBTRH5A",120,0)
 ; Returns: 'Branch To' Label in the input template
"RTN","IBTRH5A",121,0)
 ;          0 if User pressed ^ to exit the template
"RTN","IBTRH5A",122,0)
 ; NOTE: if 0 is returned, IBUPOUT=1 is also returned
"RTN","IBTRH5A",123,0)
 N DIR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,SEL,XX
"RTN","IBTRH5A",124,0)
 S SEL="07:Ambulance Certification;08:Chiropractic Certification"
"RTN","IBTRH5A",125,0)
 S SEL=SEL_";09:Durable Medical Equipment Certification;11:Oxygen Therapy Certification"
"RTN","IBTRH5A",126,0)
 S SEL=SEL_";75:Functional Limitations;76:Activities Permitted"
"RTN","IBTRH5A",127,0)
 S SEL=SEL_";77:Mental Status"
"RTN","IBTRH5A",128,0)
 S XX="Select a Certification Condition Code Category for which you want to "
"RTN","IBTRH5A",129,0)
 S XX=XX_"additional certification information."
"RTN","IBTRH5A",130,0)
 S DIR("?")=XX
"RTN","IBTRH5A",131,0)
 S DIR(0)="SAO^"_SEL
"RTN","IBTRH5A",132,0)
 S DIR("A")="Additional Certification Information: "
"RTN","IBTRH5A",133,0)
 D ^DIR K DIR
"RTN","IBTRH5A",134,0)
 I $D(DUOUT) S IBUPOUT=1 Q 0                    ; User pressed ^
"RTN","IBTRH5A",135,0)
 I $D(DTOUT) Q "@1300"                          ; User timed out
"RTN","IBTRH5A",136,0)
 Q:Y="" "@1300"
"RTN","IBTRH5A",137,0)
 Q:+Y=7 "@370"
"RTN","IBTRH5A",138,0)
 Q:+Y=8 "@600"
"RTN","IBTRH5A",139,0)
 Q:+Y=9 "@700"
"RTN","IBTRH5A",140,0)
 Q:+Y=11 "@800"
"RTN","IBTRH5A",141,0)
 Q:+Y=75 "@900"
"RTN","IBTRH5A",142,0)
 Q:+Y=76 "@1000"
"RTN","IBTRH5A",143,0)
 Q:+Y=77 "@1100"
"RTN","IBTRH5A",144,0)
 ;
"RTN","IBTRH5A",145,0)
CERTCOND(FIELD) ;EP
"RTN","IBTRH5A",146,0)
 ; Dictionary Screen function called from the following Certification Condition
"RTN","IBTRH5A",147,0)
 ; fields in file 356.22: 4.1,4.11,4.12,4.13,4.14  (Ambulance Cert Conditions)
"RTN","IBTRH5A",148,0)
 ;                        5.02,5.03,5.04,5.05,5.06 (Chiropractic Cert Conds)
"RTN","IBTRH5A",149,0)
 ;                        5.08,5.09,5.1,5.11,5.12  (DME Cert Conditions)
"RTN","IBTRH5A",150,0)
 ;                        5.14,5.15,5.16,5.17,5.18 (Oxygen Cert Conditions)
"RTN","IBTRH5A",151,0)
 ;                        6.02,6.03,6.04,6.05,6.06 (Functional Limit Cert Cond)
"RTN","IBTRH5A",152,0)
 ;                        6.08,6.09,6.1,6.11,6.12  (Activities Cert Conditions)
"RTN","IBTRH5A",153,0)
 ;                        6.14,6.15,6.16,6.17,6.18 (Mental Health Cert Conds)
"RTN","IBTRH5A",154,0)
 ; Prevents the same Certification Condition from being answered in the 
"RTN","IBTRH5A",155,0)
 ; specified Certification Condition Category (e.g. Ambulance, Chiropractic, 
"RTN","IBTRH5A",156,0)
 ; etc.). Also restricts user selection to a specified list by Certification
"RTN","IBTRH5A",157,0)
 ; Condition Category. Finally, also prevents the user from deleting any EXCEPT
"RTN","IBTRH5A",158,0)
 ; the last entered Certification Condition in any category.
"RTN","IBTRH5A",159,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5A",160,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",161,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5A",162,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5A",163,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5A",164,0)
 ;
"RTN","IBTRH5A",165,0)
 ; Otherwise, make sure there are no duplicate entries in a specified Condition
"RTN","IBTRH5A",166,0)
 ; Category and that only specified entries in 356.008 are selected for a 
"RTN","IBTRH5A",167,0)
 ; specified Condition Category
"RTN","IBTRH5A",168,0)
 I FIELD>4.09,FIELD<4.15 Q $$CONDAMB(DA,FIELD,Y)
"RTN","IBTRH5A",169,0)
 I FIELD>5.01,FIELD<5.07 Q $$CONDCHR(DA,FIELD,Y)
"RTN","IBTRH5A",170,0)
 I FIELD>5.07,FIELD<5.13 Q $$CONDDME(DA,FIELD,Y)
"RTN","IBTRH5A",171,0)
 I FIELD>5.13,FIELD<5.19 Q $$CONDOXY(DA,FIELD,Y)
"RTN","IBTRH5A",172,0)
 I FIELD>6.01,FIELD<6.07 Q $$CONDFL(DA,FIELD,Y)
"RTN","IBTRH5A",173,0)
 I FIELD>6.07,FIELD<6.13 Q $$CONDA(DA,FIELD,Y)
"RTN","IBTRH5A",174,0)
 I FIELD>6.13,FIELD<6.19 Q $$CONDMS(DA,FIELD,Y)
"RTN","IBTRH5A",175,0)
 Q 1
"RTN","IBTRH5A",176,0)
 ;
"RTN","IBTRH5A",177,0)
CERTCNDP(IBTRIEN,FIELD) ;EP
"RTN","IBTRH5A",178,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Certification Condition
"RTN","IBTRH5A",179,0)
 ; fields. Checks to see if subsequent Certification Condition entries have
"RTN","IBTRH5A",180,0)
 ; values.
"RTN","IBTRH5A",181,0)
 ; Input:   IBTRIEN   - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",182,0)
 ;          FIELD     - Field number of the field the being checked
"RTN","IBTRH5A",183,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5A",184,0)
 N NDE,RETURN
"RTN","IBTRH5A",185,0)
 S RETURN=0
"RTN","IBTRH5A",186,0)
 ;
"RTN","IBTRH5A",187,0)
 ; Ambulance Cert Conditions
"RTN","IBTRH5A",188,0)
 S NDE=$G(^IBT(356.22,IBTRIEN,4))
"RTN","IBTRH5A",189,0)
 I FIELD=4.1 D  Q RETURN
"RTN","IBTRH5A",190,0)
 . I $P(NDE,"^",11)'="" S RETURN=1 Q
"RTN","IBTRH5A",191,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",192,0)
 . I $P(NDE,"^",13)'="" S RETURN=1 Q
"RTN","IBTRH5A",193,0)
 . I $P(NDE,"^",14)'="" S RETURN=1 Q
"RTN","IBTRH5A",194,0)
 . S RETURN=0
"RTN","IBTRH5A",195,0)
 I FIELD=4.11 D  Q RETURN
"RTN","IBTRH5A",196,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",197,0)
 . I $P(NDE,"^",13)'="" S RETURN=1 Q
"RTN","IBTRH5A",198,0)
 . I $P(NDE,"^",14)'="" S RETURN=1 Q
"RTN","IBTRH5A",199,0)
 I FIELD=4.12 D  Q RETURN
"RTN","IBTRH5A",200,0)
 . I $P(NDE,"^",13)'="" S RETURN=1 Q
"RTN","IBTRH5A",201,0)
 . I $P(NDE,"^",14)'="" S RETURN=1 Q
"RTN","IBTRH5A",202,0)
 . S RETURN=0
"RTN","IBTRH5A",203,0)
 I FIELD=4.13,($P(NDE,"^",14)'="") Q 1
"RTN","IBTRH5A",204,0)
 ;
"RTN","IBTRH5A",205,0)
 ; Chiropractic Cert Conditions
"RTN","IBTRH5A",206,0)
 S NDE=$G(^IBT(356.22,IBTRIEN,5))
"RTN","IBTRH5A",207,0)
 I FIELD=5.02 D  Q RETURN
"RTN","IBTRH5A",208,0)
 . I $P(NDE,"^",3)'="" S RETURN=1 Q
"RTN","IBTRH5A",209,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5A",210,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5A",211,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5A",212,0)
 . S RETURN=0
"RTN","IBTRH5A",213,0)
 I FIELD=5.03 D  Q RETURN
"RTN","IBTRH5A",214,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5A",215,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5A",216,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5A",217,0)
 . S RETURN=0
"RTN","IBTRH5A",218,0)
 I FIELD=5.04 D  Q RETURN
"RTN","IBTRH5A",219,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5A",220,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5A",221,0)
 I FIELD=5.05,($P(NDE,"^",6)'="") Q 1
"RTN","IBTRH5A",222,0)
 ;
"RTN","IBTRH5A",223,0)
 ; DME Cert Conditions
"RTN","IBTRH5A",224,0)
 I FIELD=5.08 D  Q RETURN
"RTN","IBTRH5A",225,0)
 . I $P(NDE,"^",9)'="" S RETURN=1 Q
"RTN","IBTRH5A",226,0)
 . I $P(NDE,"^",10)'="" S RETURN=1 Q
"RTN","IBTRH5A",227,0)
 . I $P(NDE,"^",11)'="" S RETURN=1 Q
"RTN","IBTRH5A",228,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",229,0)
 . S RETURN=0
"RTN","IBTRH5A",230,0)
 I FIELD=5.09 D  Q RETURN
"RTN","IBTRH5A",231,0)
 . I $P(NDE,"^",10)'="" S RETURN=1 Q
"RTN","IBTRH5A",232,0)
 . I $P(NDE,"^",11)'="" S RETURN=1 Q
"RTN","IBTRH5A",233,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",234,0)
 . S RETURN=0
"RTN","IBTRH5A",235,0)
 I FIELD=5.1 D  Q RETURN
"RTN","IBTRH5A",236,0)
 . I $P(NDE,"^",11)'="" S RETURN=1 Q
"RTN","IBTRH5A",237,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",238,0)
 . S RETURN=0
"RTN","IBTRH5A",239,0)
 I FIELD=5.11,($P(NDE,"^",12)'="") Q 1
"RTN","IBTRH5A",240,0)
 ;
"RTN","IBTRH5A",241,0)
 ; Oxygen Cert Conditions
"RTN","IBTRH5A",242,0)
 I FIELD=5.14 D  Q RETURN
"RTN","IBTRH5A",243,0)
 . I $P(NDE,"^",15)'="" S RETURN=1 Q
"RTN","IBTRH5A",244,0)
 . I $P(NDE,"^",16)'="" S RETURN=1 Q
"RTN","IBTRH5A",245,0)
 . I $P(NDE,"^",17)'="" S RETURN=1 Q
"RTN","IBTRH5A",246,0)
 . I $P(NDE,"^",18)'="" S RETURN=1 Q
"RTN","IBTRH5A",247,0)
 . S RETURN=0
"RTN","IBTRH5A",248,0)
 I FIELD=5.15 D  Q RETURN
"RTN","IBTRH5A",249,0)
 . I $P(NDE,"^",16)'="" S RETURN=1 Q
"RTN","IBTRH5A",250,0)
 . I $P(NDE,"^",17)'="" S RETURN=1 Q
"RTN","IBTRH5A",251,0)
 . I $P(NDE,"^",18)'="" S RETURN=1 Q
"RTN","IBTRH5A",252,0)
 . S RETURN=0
"RTN","IBTRH5A",253,0)
 I FIELD=5.16 D  Q RETURN
"RTN","IBTRH5A",254,0)
 . I $P(NDE,"^",17)'="" S RETURN=1 Q
"RTN","IBTRH5A",255,0)
 . I $P(NDE,"^",18)'="" S RETURN=1 Q
"RTN","IBTRH5A",256,0)
 . S RETURN=0
"RTN","IBTRH5A",257,0)
 I FIELD=5.17,($P(NDE,"^",18)'="") Q 1
"RTN","IBTRH5A",258,0)
 ;
"RTN","IBTRH5A",259,0)
 ; Functional Limits Cert Conditions
"RTN","IBTRH5A",260,0)
 S NDE=$G(^IBT(356.22,IBTRIEN,6))
"RTN","IBTRH5A",261,0)
 I FIELD=6.02 D  Q RETURN
"RTN","IBTRH5A",262,0)
 . I $P(NDE,"^",3)'="" S RETURN=1 Q
"RTN","IBTRH5A",263,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5A",264,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5A",265,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5A",266,0)
 . S RETURN=0
"RTN","IBTRH5A",267,0)
 I FIELD=6.03 D  Q RETURN
"RTN","IBTRH5A",268,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5A",269,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5A",270,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5A",271,0)
 . S RETURN=0
"RTN","IBTRH5A",272,0)
 I FIELD=6.04 D  Q RETURN
"RTN","IBTRH5A",273,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5A",274,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5A",275,0)
 . S RETURN=0
"RTN","IBTRH5A",276,0)
 I FIELD=6.05,($P(NDE,"^",6)'="") Q 1
"RTN","IBTRH5A",277,0)
 ;
"RTN","IBTRH5A",278,0)
 ; Activities Cert Conditions
"RTN","IBTRH5A",279,0)
 I FIELD=6.08 D  Q RETURN
"RTN","IBTRH5A",280,0)
 . I $P(NDE,"^",9)'="" S RETURN=1 Q
"RTN","IBTRH5A",281,0)
 . I $P(NDE,"^",10)'="" S RETURN=1 Q
"RTN","IBTRH5A",282,0)
 . I $P(NDE,"^",11)'="" S RETURN=1 Q
"RTN","IBTRH5A",283,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",284,0)
 . S RETURN=0
"RTN","IBTRH5A",285,0)
 I FIELD=6.09 D  Q RETURN
"RTN","IBTRH5A",286,0)
 . I $P(NDE,"^",10)'="" S RETURN=1 Q
"RTN","IBTRH5A",287,0)
 . I $P(NDE,"^",11)'="" S RETURN=1 Q
"RTN","IBTRH5A",288,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",289,0)
 . S RETURN=0
"RTN","IBTRH5A",290,0)
 I FIELD=6.1 D  Q RETURN
"RTN","IBTRH5A",291,0)
 . I $P(NDE,"^",11)'="" S RETURN=1 Q
"RTN","IBTRH5A",292,0)
 . I $P(NDE,"^",12)'="" S RETURN=1 Q
"RTN","IBTRH5A",293,0)
 . S RETURN=0
"RTN","IBTRH5A",294,0)
 I FIELD=6.11,($P(NDE,"^",12)'="") Q 1
"RTN","IBTRH5A",295,0)
 ;
"RTN","IBTRH5A",296,0)
 ; Mental Status Cert Conditions
"RTN","IBTRH5A",297,0)
 I FIELD=6.14 D  Q RETURN
"RTN","IBTRH5A",298,0)
 . I $P(NDE,"^",15)'="" S RETURN=1 Q
"RTN","IBTRH5A",299,0)
 . I $P(NDE,"^",16)'="" S RETURN=1 Q
"RTN","IBTRH5A",300,0)
 . I $P(NDE,"^",17)'="" S RETURN=1 Q
"RTN","IBTRH5A",301,0)
 . I $P(NDE,"^",18)'="" S RETURN=1 Q
"RTN","IBTRH5A",302,0)
 . S RETURN=0
"RTN","IBTRH5A",303,0)
 I FIELD=6.15 D  Q RETURN
"RTN","IBTRH5A",304,0)
 . I $P(NDE,"^",16)'="" S RETURN=1 Q
"RTN","IBTRH5A",305,0)
 . I $P(NDE,"^",17)'="" S RETURN=1 Q
"RTN","IBTRH5A",306,0)
 . I $P(NDE,"^",18)'="" S RETURN=1 Q
"RTN","IBTRH5A",307,0)
 . S RETURN=0
"RTN","IBTRH5A",308,0)
 I FIELD=6.16 D  Q RETURN
"RTN","IBTRH5A",309,0)
 . I $P(NDE,"^",17)'="" S RETURN=1 Q
"RTN","IBTRH5A",310,0)
 . I $P(NDE,"^",18)'="" S RETURN=1 Q
"RTN","IBTRH5A",311,0)
 . S RETURN=0
"RTN","IBTRH5A",312,0)
 I FIELD=6.17,($P(NDE,"^",18)'="") Q 1
"RTN","IBTRH5A",313,0)
 Q 0
"RTN","IBTRH5A",314,0)
 ;
"RTN","IBTRH5A",315,0)
CONDAMB(IBTRIEN,FIELD,VALUE) ; Makes sure the user entry for a Certification
"RTN","IBTRH5A",316,0)
 ; Condition is valid for Ambulance Certification Conditions and it's not a
"RTN","IBTRH5A",317,0)
 ; duplicate
"RTN","IBTRH5A",318,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",319,0)
 ;          FIELD       - Field number of the field value being checked
"RTN","IBTRH5A",320,0)
 ;          VALUE       - Internal value being validated
"RTN","IBTRH5A",321,0)
 ; Returns: 1 if the field value is valid, 0 otherwise
"RTN","IBTRH5A",322,0)
 N CCONDS,NDE,PCE,PCES,XX
"RTN","IBTRH5A",323,0)
 S CCONDS="",NDE=$G(^IBT(356.22,IBTRIEN,4))
"RTN","IBTRH5A",324,0)
 ;
"RTN","IBTRH5A",325,0)
 ; First, set an array of valid entries of valid Ambulance Conditions
"RTN","IBTRH5A",326,0)
 F XX=1:1:9,40,42,48,49,52 S CCONDS(XX)=""
"RTN","IBTRH5A",327,0)
 ;
"RTN","IBTRH5A",328,0)
 ; Value is not valid for Ambulance Certification Conditions
"RTN","IBTRH5A",329,0)
 I '$D(CCONDS(VALUE)) Q 0
"RTN","IBTRH5A",330,0)
 ;
"RTN","IBTRH5A",331,0)
 ; Next, check for duplicate values
"RTN","IBTRH5A",332,0)
 S PCES="10^11^12^13^14"
"RTN","IBTRH5A",333,0)
 S PCE=$S(FIELD=4.1:10,FIELD=4.11:11,FIELD=4.12:12,FIELD=4.13:13,1:14)
"RTN","IBTRH5A",334,0)
 Q $$CHKDUPS(PCE,VALUE,NDE,PCES)
"RTN","IBTRH5A",335,0)
 ;
"RTN","IBTRH5A",336,0)
CONDCHR(IBTRIEN,FIELD,VALUE) ; Makes sure the user entry for a Certification
"RTN","IBTRH5A",337,0)
 ; Condition is valid for Chiropractic Certification Conditions and it's not a
"RTN","IBTRH5A",338,0)
 ; duplicate
"RTN","IBTRH5A",339,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",340,0)
 ;          FIELD       - Field number of the field value being checked
"RTN","IBTRH5A",341,0)
 ;          VALUE       - Internal value being validated
"RTN","IBTRH5A",342,0)
 ; Returns: 1 if the field value is valid, 0 otherwise
"RTN","IBTRH5A",343,0)
 N CCONDS,NDE,PCE,PCES,XX
"RTN","IBTRH5A",344,0)
 S CCONDS="",NDE=$G(^IBT(356.22,IBTRIEN,5))
"RTN","IBTRH5A",345,0)
 ;
"RTN","IBTRH5A",346,0)
 ; First, set an array of valid entries of valid Chiropractic Conditions
"RTN","IBTRH5A",347,0)
 F XX=11,12,14,24,25,27,30 S CCONDS(XX)=""
"RTN","IBTRH5A",348,0)
 ;
"RTN","IBTRH5A",349,0)
 ; Value is not valid for Chiropractic Certification Conditions
"RTN","IBTRH5A",350,0)
 I '$D(CCONDS(VALUE)) Q 0
"RTN","IBTRH5A",351,0)
 ;
"RTN","IBTRH5A",352,0)
 ; Next, check for duplicate values
"RTN","IBTRH5A",353,0)
 S PCES="2^3^4^5^6"
"RTN","IBTRH5A",354,0)
 S PCE=$S(FIELD=5.02:2,FIELD=5.03:3,FIELD=5.04:4,FIELD=5.05:5,1:6)
"RTN","IBTRH5A",355,0)
 Q $$CHKDUPS(PCE,VALUE,NDE,PCES)
"RTN","IBTRH5A",356,0)
 ;
"RTN","IBTRH5A",357,0)
CONDDME(IBTRIEN,FIELD,VALUE) ; Makes sure the user entry for a Certification
"RTN","IBTRH5A",358,0)
 ; Condition is valid for DME Certification Conditions and it's not a
"RTN","IBTRH5A",359,0)
 ; duplicate
"RTN","IBTRH5A",360,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",361,0)
 ;          FIELD       - Field number of the field value being checked
"RTN","IBTRH5A",362,0)
 ;          VALUE       - Internal value being validated
"RTN","IBTRH5A",363,0)
 ; Returns: 1 if the field value is valid, 0 otherwise
"RTN","IBTRH5A",364,0)
 N CCONDS,NDE,PCE,PCES,XX
"RTN","IBTRH5A",365,0)
 S CCONDS="",NDE=$G(^IBT(356.22,IBTRIEN,5))
"RTN","IBTRH5A",366,0)
 ;
"RTN","IBTRH5A",367,0)
 ; First, set an array of valid entries of valid DME Conditions
"RTN","IBTRH5A",368,0)
 F XX=1:1:27,29:1:33,35,36,37,39:1:47,49,52,55,56,57,79,80,88 D
"RTN","IBTRH5A",369,0)
 . S CCONDS(XX)=""
"RTN","IBTRH5A",370,0)
 ;
"RTN","IBTRH5A",371,0)
 ; Value is not valid for DME Certification Conditions
"RTN","IBTRH5A",372,0)
 I '$D(CCONDS(VALUE)) Q 0
"RTN","IBTRH5A",373,0)
 ;
"RTN","IBTRH5A",374,0)
 ; Next, check for duplicate values
"RTN","IBTRH5A",375,0)
 S PCES="8^9^10^11^12"
"RTN","IBTRH5A",376,0)
 S PCE=$S(FIELD=5.08:8,FIELD=5.09:9,FIELD=5.1:10,FIELD=5.11:11,1:12)
"RTN","IBTRH5A",377,0)
 Q $$CHKDUPS(PCE,VALUE,NDE,PCES)
"RTN","IBTRH5A",378,0)
 ;
"RTN","IBTRH5A",379,0)
CONDOXY(IBTRIEN,FIELD,VALUE) ; Makes sure the user entry for a Certification
"RTN","IBTRH5A",380,0)
 ; Condition is valid for Oxygen Certification Conditions and it's not a
"RTN","IBTRH5A",381,0)
 ; duplicate
"RTN","IBTRH5A",382,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",383,0)
 ;          FIELD       - Field number of the field value being checked
"RTN","IBTRH5A",384,0)
 ;          VALUE       - Internal value being validated
"RTN","IBTRH5A",385,0)
 ; Returns: 1 if the field value is valid, 0 otherwise
"RTN","IBTRH5A",386,0)
 N CCONDS,NDE,PCE,PCES,XX
"RTN","IBTRH5A",387,0)
 S CCONDS="",NDE=$G(^IBT(356.22,IBTRIEN,5))
"RTN","IBTRH5A",388,0)
 ;
"RTN","IBTRH5A",389,0)
 ; First, set an array of valid entries of valid Oxygen Conditions
"RTN","IBTRH5A",390,0)
 F XX=6,16,17,25,33,36,38,48,56,57,73 S CCONDS(XX)=""
"RTN","IBTRH5A",391,0)
 ;
"RTN","IBTRH5A",392,0)
 ; Value is not valid for Oxygen Certification Conditions
"RTN","IBTRH5A",393,0)
 I '$D(CCONDS(VALUE)) Q 0
"RTN","IBTRH5A",394,0)
 ;
"RTN","IBTRH5A",395,0)
 ; Next, check for duplicate values
"RTN","IBTRH5A",396,0)
 S PCES="14^15^16^17^18"
"RTN","IBTRH5A",397,0)
 S PCE=$S(FIELD=5.14:14,FIELD=5.15:15,FIELD=5.16:16,FIELD=5.17:17,1:18)
"RTN","IBTRH5A",398,0)
 Q $$CHKDUPS(PCE,VALUE,NDE,PCES)
"RTN","IBTRH5A",399,0)
 ;
"RTN","IBTRH5A",400,0)
CONDFL(IBTRIEN,FIELD,VALUE) ; Makes sure the user entry for a Certification
"RTN","IBTRH5A",401,0)
 ; Condition is valid for Functional Limitations Certification Conditions and
"RTN","IBTRH5A",402,0)
 ; it's not a duplicate
"RTN","IBTRH5A",403,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",404,0)
 ;          FIELD       - Field number of the field value being checked
"RTN","IBTRH5A",405,0)
 ;          VALUE       - Internal value being validated
"RTN","IBTRH5A",406,0)
 ; Returns: 1 if the field value is valid, 0 otherwise
"RTN","IBTRH5A",407,0)
 N CCONDS,NDE,PCE,PCES,XX
"RTN","IBTRH5A",408,0)
 S CCONDS="",NDE=$G(^IBT(356.22,IBTRIEN,6))
"RTN","IBTRH5A",409,0)
 ;
"RTN","IBTRH5A",410,0)
 ; First, set an array of valid entries of valid Functional Limitations
"RTN","IBTRH5A",411,0)
 ; Conditions
"RTN","IBTRH5A",412,0)
 F XX=2:1:6,11,12,14:1:28,30,31,32,35,36,38:1:45,48 D
"RTN","IBTRH5A",413,0)
 . S CCONDS(XX)=""
"RTN","IBTRH5A",414,0)
 F XX=50,51,53,54,55,58,60,61,62,64,65,66,68,69,73,74,75,78,80,81,84,86:1:89,93,94 D
"RTN","IBTRH5A",415,0)
 . S CCONDS(XX)=""
"RTN","IBTRH5A",416,0)
 ;
"RTN","IBTRH5A",417,0)
 ; Value is not valid for Functional Limitations Certification Conditions
"RTN","IBTRH5A",418,0)
 I '$D(CCONDS(VALUE)) Q 0
"RTN","IBTRH5A",419,0)
 ;
"RTN","IBTRH5A",420,0)
 ; Next, check for duplicate values
"RTN","IBTRH5A",421,0)
 S PCES="2^3^4^5^6"
"RTN","IBTRH5A",422,0)
 S PCE=$S(FIELD=6.02:2,FIELD=6.03:3,FIELD=6.04:4,FIELD=6.05:5,1:6)
"RTN","IBTRH5A",423,0)
 Q $$CHKDUPS(PCE,VALUE,NDE,PCES)
"RTN","IBTRH5A",424,0)
 ;
"RTN","IBTRH5A",425,0)
CONDA(IBTRIEN,FIELD,VALUE) ; Makes sure the user entry for a Certification
"RTN","IBTRH5A",426,0)
 ; Condition is valid for Activities Certification Conditions and
"RTN","IBTRH5A",427,0)
 ; it's not a duplicate
"RTN","IBTRH5A",428,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",429,0)
 ;          FIELD       - Field number of the field value being checked
"RTN","IBTRH5A",430,0)
 ;          VALUE       - Internal value being validated
"RTN","IBTRH5A",431,0)
 ; Returns: 1 if the field value is valid, 0 otherwise
"RTN","IBTRH5A",432,0)
 N CCONDS,NDE,PCE,PCES,XX
"RTN","IBTRH5A",433,0)
 S CCONDS="",NDE=$G(^IBT(356.22,IBTRIEN,6))
"RTN","IBTRH5A",434,0)
 ;
"RTN","IBTRH5A",435,0)
 ; First, set an array of valid entries of valid Activities Conditions
"RTN","IBTRH5A",436,0)
 F XX=10,13,19,21,22,27,31,39,63,65,66,70,74,75,79,83,86,87,90,92,93,94 D
"RTN","IBTRH5A",437,0)
 . S CCONDS(XX)=""
"RTN","IBTRH5A",438,0)
 ;
"RTN","IBTRH5A",439,0)
 ; Value is not valid for Activities Certification Conditions
"RTN","IBTRH5A",440,0)
 I '$D(CCONDS(VALUE)) Q 0
"RTN","IBTRH5A",441,0)
 ;
"RTN","IBTRH5A",442,0)
 ; Next, check for duplicate values
"RTN","IBTRH5A",443,0)
 S PCES="8^9^10^11^12"
"RTN","IBTRH5A",444,0)
 S PCE=$S(FIELD=6.08:8,FIELD=6.09:9,FIELD=6.1:10,FIELD=6.11:11,1:12)
"RTN","IBTRH5A",445,0)
 Q $$CHKDUPS(PCE,VALUE,NDE,PCES)
"RTN","IBTRH5A",446,0)
 ;
"RTN","IBTRH5A",447,0)
CONDMS(IBTRIEN,FIELD,VALUE) ; Makes sure the user entry for a Certification
"RTN","IBTRH5A",448,0)
 ; Condition is valid for Mental Status Certification Conditions and
"RTN","IBTRH5A",449,0)
 ; it's not a duplicate
"RTN","IBTRH5A",450,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5A",451,0)
 ;          FIELD       - Field number of the field value being checked
"RTN","IBTRH5A",452,0)
 ;          VALUE       - Internal value being validated
"RTN","IBTRH5A",453,0)
 ; Returns: 1 if the field value is valid, 0 otherwise
"RTN","IBTRH5A",454,0)
 N CCONDS,NDE,PCE,PCES,XX
"RTN","IBTRH5A",455,0)
 S CCONDS="",NDE=$G(^IBT(356.22,IBTRIEN,6))
"RTN","IBTRH5A",456,0)
 ;
"RTN","IBTRH5A",457,0)
 ; First, set an array of valid entries of valid Mental Status Conditions
"RTN","IBTRH5A",458,0)
 F XX=1,5,7,13,20,22,23,26,33,34,48,50,51,53,54,56,57,59,62,64,66,67,71,72,76,77,81,82,85,91  D
"RTN","IBTRH5A",459,0)
 . S CCONDS(XX)=""
"RTN","IBTRH5A",460,0)
 ;
"RTN","IBTRH5A",461,0)
 ; Value is not valid for Functional Limitations Certification Conditions
"RTN","IBTRH5A",462,0)
 I '$D(CCONDS(VALUE)) Q 0
"RTN","IBTRH5A",463,0)
 ;
"RTN","IBTRH5A",464,0)
 ; Next, check for duplicate values
"RTN","IBTRH5A",465,0)
 S PCES="14^15^16^17^18"
"RTN","IBTRH5A",466,0)
 S PCE=$S(FIELD=6.14:14,FIELD=6.15:15,FIELD=6.16:16,FIELD=6.17:17,1:18)
"RTN","IBTRH5A",467,0)
 Q $$CHKDUPS(PCE,VALUE,NDE,PCES)
"RTN","IBTRH5A",468,0)
 ;
"RTN","IBTRH5A",469,0)
CHKDUPS(FPCE,VALUE,NDE,PCES) ;EP
"RTN","IBTRH5A",470,0)
 ; Generic duplicate field checker.  Checks for a duplicate value in a list of
"RTN","IBTRH5A",471,0)
 ; fields to prevent the same value from being entered in more than field in
"RTN","IBTRH5A",472,0)
 ; the list
"RTN","IBTRH5A",473,0)
 ; Input:   FPCE    - Piece # of the field being checked
"RTN","IBTRH5A",474,0)
 ;          VALUE   - Internal Value of the user response
"RTN","IBTRH5A",475,0)
 ;          NDE     - HCSR Transmission file node that contains the fields
"RTN","IBTRH5A",476,0)
 ;          PCES    - '^' delimited list of storage locations for above fields
"RTN","IBTRH5A",477,0)
 ; Returns: 1 - No duplicates found, 0 otherwise
"RTN","IBTRH5A",478,0)
 N IX,PCE,RETURN
"RTN","IBTRH5A",479,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5A",480,0)
 Q:VALUE="" 1                                   ; No value entered
"RTN","IBTRH5A",481,0)
 ;
"RTN","IBTRH5A",482,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5A",483,0)
 F IX=1:1:$L(PCES,"^") D  Q:RETURN=0
"RTN","IBTRH5A",484,0)
 . S PCE=$P(PCES,"^",IX)
"RTN","IBTRH5A",485,0)
 . Q:PCE=FPCE
"RTN","IBTRH5A",486,0)
 . I $P(NDE,"^",PCE)=VALUE S RETURN=0 Q
"RTN","IBTRH5A",487,0)
 Q RETURN
"RTN","IBTRH5A",488,0)
 ;
"RTN","IBTRH5B")
0^22^B121449376^n/a
"RTN","IBTRH5B",1,0)
IBTRH5B ;ALB/FA - HCSR Create 278 Request ;12-AUG-2014
"RTN","IBTRH5B",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5B",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5B",4,0)
 ;;
"RTN","IBTRH5B",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5B",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5B",7,0)
 ;
"RTN","IBTRH5B",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5B",9,0)
 ;    OXYTTYPE  - Dictionary Screen function for Oxygen Equipment Type Fields
"RTN","IBTRH5B",10,0)
 ;                (8.01,8.02,8.03)
"RTN","IBTRH5B",11,0)
 ;    OXYTTYPP  - Called from within the Input Template to check if subsequent
"RTN","IBTRH5B",12,0)
 ;                Equipment Types have values (8.01,8.02)
"RTN","IBTRH5B",13,0)
 ;    OXYTFIND  - Dictionary Screen function for Oxygen Test Finding Fields
"RTN","IBTRH5B",14,0)
 ;                9.04,9.05,9.06)
"RTN","IBTRH5B",15,0)
 ;    OXYTFNDP  - Called from within the Input Template to check if subsequent
"RTN","IBTRH5B",16,0)
 ;                Test Findings have values (9.04,9.05)
"RTN","IBTRH5B",17,0)
 ;    OUDREASP  - Called from within the Input Template to check if subsequent
"RTN","IBTRH5B",18,0)
 ;                Other UMO Denial Reasons have values
"RTN","IBTRH5B",19,0)
 ;    ONESL     - Used to create a new Professional, Institutional or Dental
"RTN","IBTRH5B",20,0)
 ;                Service Line
"RTN","IBTRH5B",21,0)
 ;    ORALCAV   - Dictionary Screen function for Oral Cavity Fields
"RTN","IBTRH5B",22,0)
 ;                2216,3.01,2216,3.02,2216,3.03,2216,3.04,2216,3.05)
"RTN","IBTRH5B",23,0)
 ;    ORALCAVP  - Called from within the Input Template to check if subsequent
"RTN","IBTRH5B",24,0)
 ;                Oral Cavity fields have values
"RTN","IBTRH5B",25,0)
 ;    PITSL     - Called from the Input Template.
"RTN","IBTRH5B",26,0)
 ;                Asks the user the type of Service Line being created:
"RTN","IBTRH5B",27,0)
 ;                Professional, Institutional or Dental.  Files the Service
"RTN","IBTRH5B",28,0)
 ;                Line Type, Service Request Category and Service Certification
"RTN","IBTRH5B",29,0)
 ;                Type fields
"RTN","IBTRH5B",30,0)
 ;    PROC      - Dictionary Screen function for Procedure fields in 356.22
"RTN","IBTRH5B",31,0)
 ;                (10.07, 16,1.02, 16,1.03)
"RTN","IBTRH5B",32,0)
 ;    PROCTYPE  - Dictionary Screen function for Proc Type (356.2216, 1.01)
"RTN","IBTRH5B",33,0)
 ;    PROCMOD   - Dictionary Screen function for Procedure Modifier Fields
"RTN","IBTRH5B",34,0)
 ;                (2216,1.04,2216,1.05,2216,1.06,2216,1.07)
"RTN","IBTRH5B",35,0)
 ;    PROCMODP  - Called from within the Input Template to check if subsequent
"RTN","IBTRH5B",36,0)
 ;                Service Line Procedure Modifiers have values
"RTN","IBTRH5B",37,0)
 ;    SLDXP     - Called from within the Input Template to check if subsequent
"RTN","IBTRH5B",38,0)
 ;                Service Line Procedure Diagnoses have values
"RTN","IBTRH5B",39,0)
 ;    TOOTHS    - Dictionary Screen function for Dental Service Lines Tooth Fields
"RTN","IBTRH5B",40,0)
 ;                (22164/.02, 22614/.03, 22614/.04, 22614/.05, 22614/.06)
"RTN","IBTRH5B",41,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5B",42,0)
 ;
"RTN","IBTRH5B",43,0)
OXYTTYPE(FIELD) ;EP
"RTN","IBTRH5B",44,0)
 ; Dictionary Screen function called from Home Oxygen Therapy Information fields:
"RTN","IBTRH5B",45,0)
 ; 8.01,8.02,8.03. Prevents the same Oxygen Equipment Type from being selected
"RTN","IBTRH5B",46,0)
 ; more than once.
"RTN","IBTRH5B",47,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5B",48,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",49,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5B",50,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5B",51,0)
 N NDE,RETURN
"RTN","IBTRH5B",52,0)
 S NDE=$G(^IBT(356.22,DA,8))
"RTN","IBTRH5B",53,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5B",54,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5B",55,0)
 ;
"RTN","IBTRH5B",56,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5B",57,0)
 I FIELD=8.01 D  Q RETURN
"RTN","IBTRH5B",58,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",59,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",60,0)
 I FIELD=8.02 D  Q RETURN
"RTN","IBTRH5B",61,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5B",62,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",63,0)
 I FIELD=8.03 D  Q RETURN
"RTN","IBTRH5B",64,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5B",65,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",66,0)
 Q RETURN
"RTN","IBTRH5B",67,0)
 ;
"RTN","IBTRH5B",68,0)
OXYTTYPP(IBTRIEN,FIELD) ;EP
"RTN","IBTRH5B",69,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Oxygen Equipment Type
"RTN","IBTRH5B",70,0)
 ; fields. Checks to see if subsequent Oxygen Entry Equipment Type entries have
"RTN","IBTRH5B",71,0)
 ; values.
"RTN","IBTRH5B",72,0)
 ; Input:   IBTRIEN   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",73,0)
 ;          FIELD     - Field number of the field being checked
"RTN","IBTRH5B",74,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5B",75,0)
 N NDE
"RTN","IBTRH5B",76,0)
 S NDE=$G(^IBT(356.22,IBTRIEN,8))
"RTN","IBTRH5B",77,0)
 I FIELD=8.01,(($P(NDE,"^",2)'="")!($P(NDE,"^",3)'="")) Q 1
"RTN","IBTRH5B",78,0)
 I FIELD=8.02,($P(NDE,"^",3)'="") Q 1
"RTN","IBTRH5B",79,0)
 Q 0
"RTN","IBTRH5B",80,0)
 ;
"RTN","IBTRH5B",81,0)
OXYTFIND(FIELD) ;EP
"RTN","IBTRH5B",82,0)
 ; Dictionary Screen function called from Home Oxygen Therapy Information fields:
"RTN","IBTRH5B",83,0)
 ; 9.04,9.05,9.06. Prevents the same Oxygen Equipment Test finding from being
"RTN","IBTRH5B",84,0)
 ; selected more than once.
"RTN","IBTRH5B",85,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5B",86,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",87,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5B",88,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5B",89,0)
 N NDE,RETURN
"RTN","IBTRH5B",90,0)
 S NDE=$G(^IBT(356.22,DA,9))
"RTN","IBTRH5B",91,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5B",92,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5B",93,0)
 ;
"RTN","IBTRH5B",94,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5B",95,0)
 I FIELD=9.04 D  Q RETURN
"RTN","IBTRH5B",96,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",97,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",98,0)
 I FIELD=9.05 D  Q RETURN
"RTN","IBTRH5B",99,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",100,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",101,0)
 I FIELD=9.06 D  Q RETURN
"RTN","IBTRH5B",102,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",103,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",104,0)
 Q RETURN
"RTN","IBTRH5B",105,0)
 ;
"RTN","IBTRH5B",106,0)
OXYTFNDP(IBTRIEN,FIELD) ;EP
"RTN","IBTRH5B",107,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Oxygen Test Finding
"RTN","IBTRH5B",108,0)
 ; fields. Checks to see if subsequent Oxygen Test Findings entries have
"RTN","IBTRH5B",109,0)
 ; values.
"RTN","IBTRH5B",110,0)
 ; Input:   IBTRIEN   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",111,0)
 ;          FIELD     - Field number of the field being checked
"RTN","IBTRH5B",112,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5B",113,0)
 N NDE
"RTN","IBTRH5B",114,0)
 S NDE=$G(^IBT(356.22,IBTRIEN,9))
"RTN","IBTRH5B",115,0)
 I FIELD=9.04,(($P(NDE,"^",5)'="")!($P(NDE,"^",6)'="")) Q 1
"RTN","IBTRH5B",116,0)
 I FIELD=9.05,($P(NDE,"^",6)'="") Q 1
"RTN","IBTRH5B",117,0)
 Q 0
"RTN","IBTRH5B",118,0)
 ;
"RTN","IBTRH5B",119,0)
OUDREASP(FIELD) ;EP
"RTN","IBTRH5B",120,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Other UMO Denial Reasons
"RTN","IBTRH5B",121,0)
 ; fields. Checks to see if subsequent Denial Reasons have values.
"RTN","IBTRH5B",122,0)
 ; Input:   FIELD   - Field number of the field being checked
"RTN","IBTRH5B",123,0)
 ;          DA      - IEN of the 356.2215 multiple entry being edited
"RTN","IBTRH5B",124,0)
 ;          DA(1)   - IEN of the Patient Event Entry
"RTN","IBTRH5B",125,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5B",126,0)
 N NDE,RETURN
"RTN","IBTRH5B",127,0)
 S NDE=$G(^IBT(356.22,DA(1),15,DA,0))           ; Other UMO Info node
"RTN","IBTRH5B",128,0)
 I FIELD=.03 D  Q RETURN
"RTN","IBTRH5B",129,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5B",130,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5B",131,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5B",132,0)
 . S RETURN=0
"RTN","IBTRH5B",133,0)
 I FIELD=.04 D  Q RETURN
"RTN","IBTRH5B",134,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5B",135,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5B",136,0)
 . S RETURN=0
"RTN","IBTRH5B",137,0)
 I FIELD=.05,($P(NDE,"^",6)'="") Q 1
"RTN","IBTRH5B",138,0)
 Q 0
"RTN","IBTRH5B",139,0)
 ;
"RTN","IBTRH5B",140,0)
ONESL(IBTRIEN,REQCAT,CERTCD,SLTYPE,IBSLCTR) ;EP
"RTN","IBTRH5B",141,0)
 ; Called from Input Template: IB CREATE 278 REQUEST
"RTN","IBTRH5B",142,0)
 ; Auto Files a new Profession, Institutional or Dental Service Line multiple
"RTN","IBTRH5B",143,0)
 ; into 356.22. Only auto files the .02, .03 and 1.12 field. Other specified 
"RTN","IBTRH5B",144,0)
 ; fields are asked within the Input Template according to the Service Line
"RTN","IBTRH5B",145,0)
 ; Type. 
"RTN","IBTRH5B",146,0)
 ; Input:   IBTRIEN - IEN of the selected entry
"RTN","IBTRH5B",147,0)
 ;          REQCAT  - IEN of the Request Category to file in .01
"RTN","IBTRH5B",148,0)
 ;          CERTCD  - IEN of the Certification Code to file in .02
"RTN","IBTRH5B",149,0)
 ;          SLTYPE  - 'P' - Professional Service Line
"RTN","IBTRH5B",150,0)
 ;                    'I' - Institutional Service Line
"RTN","IBTRH5B",151,0)
 ;                    'D' - Dental Service Line
"RTN","IBTRH5B",152,0)
 ;          IBSLCTR - Current number of Service Line multiples
"RTN","IBTRH5B",153,0)
 ; Output:  Service Line multiple is filed into 356.2216
"RTN","IBTRH5B",154,0)
 ;          IBSLCTR - Updated number of Service Line multiples
"RTN","IBTRH5B",155,0)
 ; Returns: 1 if a Provider Data multiple was filed, 0 otherwise
"RTN","IBTRH5B",156,0)
 N FDA
"RTN","IBTRH5B",157,0)
 S IBSLCTR=IBSLCTR+1
"RTN","IBTRH5B",158,0)
 ;
"RTN","IBTRH5B",159,0)
 ; File Service Line Multiple
"RTN","IBTRH5B",160,0)
 S FDA(356.2216,"+1,"_IBTRIEN_",",.01)=REQCAT   ; Request Category
"RTN","IBTRH5B",161,0)
 S FDA(356.2216,"+1,"_IBTRIEN_",",.02)=CERTCD   ; Certification Code
"RTN","IBTRH5B",162,0)
 S FDA(356.2216,"+1,"_IBTRIEN_",",1.12)=SLTYPE  ; Service Line Type
"RTN","IBTRH5B",163,0)
 D UPDATE^DIE("","FDA")
"RTN","IBTRH5B",164,0)
 Q 1
"RTN","IBTRH5B",165,0)
 ;
"RTN","IBTRH5B",166,0)
PITSL(IBREQCAT) ;EP
"RTN","IBTRH5B",167,0)
 ; Called from Input Template: IB CREATE 278 REQUEST
"RTN","IBTRH5B",168,0)
 ; Called when creating a new Service Line to determine the type of Service
"RTN","IBTRH5B",169,0)
 ; Line to be created
"RTN","IBTRH5B",170,0)
 ; Input:   IBREQCAT    - IEN of the Patient Event Request Category
"RTN","IBTRH5B",171,0)
 ;          DA(1)       - IEN of the selected entry
"RTN","IBTRH5B",172,0)
 ;          DA          - IEN of the Service Line Multiple
"RTN","IBTRH5B",173,0)
 ; Output:  IBEXIT      - 1 if user entered ^, timed out or answered E
"RTN","IBTRH5B",174,0)
 ;                        0 otherwise. 
"RTN","IBTRH5B",175,0)
 ;                        if 1 NO service line multiple is filed
"RTN","IBTRH5B",176,0)
 ;          Service Line multiple is filed into 356.2216
"RTN","IBTRH5B",177,0)
 ; Returns: Label to jump to based upon the type of line selected
"RTN","IBTRH5B",178,0)
 ;          Returns '0' to exit multiple if not entered
"RTN","IBTRH5B",179,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ERROR,FDA,SLTYPE,X,XX,Y
"RTN","IBTRH5B",180,0)
 ;
"RTN","IBTRH5B",181,0)
 ; Get the Service Line Type of the first line. If present, all other Service
"RTN","IBTRH5B",182,0)
 ; Lines for this entry must be of the same type. If not present AND the 
"RTN","IBTRH5B",183,0)
 ; Request Category is 'AR' it's an Institutional line. If not present and
"RTN","IBTRH5B",184,0)
 ; the Request Category is not 'AR', then ask for service line type as we
"RTN","IBTRH5B",185,0)
 ; are creating the first service line
"RTN","IBTRH5B",186,0)
 S SLTYPE=$$GET1^DIQ(356.2216,DA_","_DA(1)_",",1.12,"I")
"RTN","IBTRH5B",187,0)
 Q:SLTYPE'="" $S(SLTYPE="P":"@1500",SLTYPE="I":"@1600",1:"@1700")
"RTN","IBTRH5B",188,0)
 S DIR(0)="SA^I:Institutional;P:Professional;D:Dental;E:Exit"
"RTN","IBTRH5B",189,0)
 S XX="Enter the type of Service line you wish to create. Select E if you don't"
"RTN","IBTRH5B",190,0)
 S XX=XX_" want to create a new service line."
"RTN","IBTRH5B",191,0)
 S DIR("?")=XX
"RTN","IBTRH5B",192,0)
 S DIR("A")="Service Line Type: "
"RTN","IBTRH5B",193,0)
PITSL1 ; Looping Tag
"RTN","IBTRH5B",194,0)
 D ^DIR
"RTN","IBTRH5B",195,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="E") S IBEXIT=1 Q 0
"RTN","IBTRH5B",196,0)
 S SLTYPE=Y
"RTN","IBTRH5B",197,0)
 ;
"RTN","IBTRH5B",198,0)
 ; File Service Line Type
"RTN","IBTRH5B",199,0)
 S FDA(356.2216,DA_","_DA(1)_",",1.12)=SLTYPE ; Service Line Type
"RTN","IBTRH5B",200,0)
 D FILE^DIE("","FDA","ERROR")
"RTN","IBTRH5B",201,0)
 Q $S(SLTYPE="P":"@1500",SLTYPE="I":"@1600",1:"@1700")
"RTN","IBTRH5B",202,0)
 ;
"RTN","IBTRH5B",203,0)
PROC(FIELD) ;EP
"RTN","IBTRH5B",204,0)
 ; Dictionary Screen function called from the following fields in file 356.22:
"RTN","IBTRH5B",205,0)
 ; 10.07, 16,1.02, 16,1.03
"RTN","IBTRH5B",206,0)
 ; Prevents dictionary lookup into the wrong dictionary of the variable pointer
"RTN","IBTRH5B",207,0)
 ; field.
"RTN","IBTRH5B",208,0)
 ; Input:   FIELD   - Field # of the field being screened
"RTN","IBTRH5B",209,0)
 ;          DA      - IEN of the 356.22 entry if FIELD=10.07. Otherwise, IEN of
"RTN","IBTRH5B",210,0)
 ;                    the service line multiple
"RTN","IBTRH5B",211,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited if FIELD'=10.07
"RTN","IBTRH5B",212,0)
 ;          DIC     - Contains the global ref of dictionary being checked
"RTN","IBTRH5B",213,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5B",214,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5B",215,0)
 ; NOTE: Dental search disabled for now
"RTN","IBTRH5B",216,0)
 N DENTAL,PXTYPE
"RTN","IBTRH5B",217,0)
 Q:Y="" 1
"RTN","IBTRH5B",218,0)
 S DENTAL=""
"RTN","IBTRH5B",219,0)
 I FIELD=10.07 S PXTYPE=$$GET1^DIQ(356.22,DA_",",10.06,"I")
"RTN","IBTRH5B",220,0)
 E  D
"RTN","IBTRH5B",221,0)
 . S PXTYPE=$$GET1^DIQ(356.2216,DA_","_DA(1)_",",1.01,"I")
"RTN","IBTRH5B",222,0)
 . S DENTAL=$S($$GET1^DIQ(356.2216,DA_","_DA(1)_",",1.12,"I")="D":1,1:0)
"RTN","IBTRH5B",223,0)
 Q:PXTYPE="" 1
"RTN","IBTRH5B",224,0)
 ;
"RTN","IBTRH5B",225,0)
 ; Dental Procedure Code must be from file 81 and have right CPT CATEGORY
"RTN","IBTRH5B",226,0)
 I DENTAL,($P(DIC,"^",2)'="ICPT(")!($P($$CPT^ICPTCOD(Y),"^",4)'=185) Q 0  ;DBIA1995
"RTN","IBTRH5B",227,0)
 ;
"RTN","IBTRH5B",228,0)
 ; Procedure Code must be from file 81 for a Type of 'HC'
"RTN","IBTRH5B",229,0)
 I PXTYPE="HC",$P(DIC,"^",2)'="ICPT(" Q 0
"RTN","IBTRH5B",230,0)
 ;
"RTN","IBTRH5B",231,0)
 ; Procedure Code must be from file 80.1 for a Type of 'ID' or 'ZZ'
"RTN","IBTRH5B",232,0)
 ; for fields 10.07, 1.02 and 1.03.
"RTN","IBTRH5B",233,0)
 ; NOTE: 'ZZ' not valid for 10.07
"RTN","IBTRH5B",234,0)
 I ((PXTYPE="ID")!(PXTYPE="ZZ")),$P(DIC,"^",2)'="ICD0(" Q 0
"RTN","IBTRH5B",235,0)
 Q 1
"RTN","IBTRH5B",236,0)
 ;
"RTN","IBTRH5B",237,0)
PROCTYPE() ;EP
"RTN","IBTRH5B",238,0)
 ; Dictionary Screen function called from field in file 356.2216, 1.01
"RTN","IBTRH5B",239,0)
 ; Prevents selection of 'ID' or 'ZZ' if entry is not for an inpatient
"RTN","IBTRH5B",240,0)
 ; Input:   DA      - IEN of the 356.22 entry if FIELD=10.07. Otherwise, IEN of
"RTN","IBTRH5B",241,0)
 ;                    the service line multiple
"RTN","IBTRH5B",242,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited if FIELD'=10.07
"RTN","IBTRH5B",243,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5B",244,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5B",245,0)
 N DENTAL,IBPSTAT,SLTYPE
"RTN","IBTRH5B",246,0)
 Q:Y="" 1
"RTN","IBTRH5B",247,0)
 S DENTAL=$S($P($G(^IBT(356.22,DA(1),16,DA,1)),"^",12)="D":1,1:0)
"RTN","IBTRH5B",248,0)
 S SLTYPE=$$GET1^DIQ(356.2216,DA_","_DA(1)_",",1.12,"I")
"RTN","IBTRH5B",249,0)
 I DENTAL,Y'="AD" Q 0
"RTN","IBTRH5B",250,0)
 I 'DENTAL,Y="AD" Q 0
"RTN","IBTRH5B",251,0)
 S IBPSTAT=$P($G(^IBT(356.22,DA(1),0)),"^",4)
"RTN","IBTRH5B",252,0)
 I SLTYPE'="I",((Y="ID")!(Y="ZZ")) Q 0
"RTN","IBTRH5B",253,0)
 I SLTYPE="I",IBPSTAT="O",((Y="ID")!(Y="ZZ")) Q 0
"RTN","IBTRH5B",254,0)
 Q 1
"RTN","IBTRH5B",255,0)
 ;
"RTN","IBTRH5B",256,0)
PROCMOD(FIELD) ;EP
"RTN","IBTRH5B",257,0)
 ; Dictionary Screen function called from Service Line Procedure Modifier Fields:
"RTN","IBTRH5B",258,0)
 ; 32216,1.04, 32216,1.05, 32216,1.06, 32216,1.07. 
"RTN","IBTRH5B",259,0)
 ; Prevents the same Procedure Modifier from being selected more than once.
"RTN","IBTRH5B",260,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5B",261,0)
 ;          DA      - IEN of the Service Line Multiple being edited
"RTN","IBTRH5B",262,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",263,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5B",264,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5B",265,0)
 N NDE,RETURN
"RTN","IBTRH5B",266,0)
 S NDE=$G(^IBT(356.22,DA(1),16,DA,1))
"RTN","IBTRH5B",267,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5B",268,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5B",269,0)
 ;
"RTN","IBTRH5B",270,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5B",271,0)
 I FIELD=1.04 D  Q RETURN
"RTN","IBTRH5B",272,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",273,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",274,0)
 . I $P(NDE,"^",7)=Y S RETURN=0 Q
"RTN","IBTRH5B",275,0)
 I FIELD=1.05 D  Q RETURN
"RTN","IBTRH5B",276,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",277,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",278,0)
 . I $P(NDE,"^",7)=Y S RETURN=0 Q
"RTN","IBTRH5B",279,0)
 I FIELD=1.06 D  Q RETURN
"RTN","IBTRH5B",280,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",281,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",282,0)
 . I $P(NDE,"^",7)=Y S RETURN=0 Q
"RTN","IBTRH5B",283,0)
 I FIELD=1.07 D  Q RETURN
"RTN","IBTRH5B",284,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",285,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",286,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",287,0)
 Q RETURN
"RTN","IBTRH5B",288,0)
 ;
"RTN","IBTRH5B",289,0)
PROCMODP(FIELD) ;EP
"RTN","IBTRH5B",290,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Service Line Procedure
"RTN","IBTRH5B",291,0)
 ; Modifier fields. Checks to see if subsequent Procedure Modifier entries have
"RTN","IBTRH5B",292,0)
 ; values.
"RTN","IBTRH5B",293,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5B",294,0)
 ;          DA      - IEN of the Service Line Multiple being edited
"RTN","IBTRH5B",295,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",296,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5B",297,0)
 N NDE,RETURN
"RTN","IBTRH5B",298,0)
 S NDE=$G(^IBT(356.22,DA(1),16,DA,1))
"RTN","IBTRH5B",299,0)
 I FIELD=1.04 D  Q RETURN
"RTN","IBTRH5B",300,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5B",301,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5B",302,0)
 . I $P(NDE,"^",7)'="" S RETURN=1 Q
"RTN","IBTRH5B",303,0)
 . S RETURN=0
"RTN","IBTRH5B",304,0)
 I FIELD=1.05 D  Q RETURN
"RTN","IBTRH5B",305,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5B",306,0)
 . I $P(NDE,"^",7)'="" S RETURN=1 Q
"RTN","IBTRH5B",307,0)
 . S RETURN=0
"RTN","IBTRH5B",308,0)
 I FIELD=1.06,$P(NDE,"^",7)'="" Q 1
"RTN","IBTRH5B",309,0)
 Q 0
"RTN","IBTRH5B",310,0)
 ;
"RTN","IBTRH5B",311,0)
SLDXP(FIELD) ;EP
"RTN","IBTRH5B",312,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Service Line Procedure
"RTN","IBTRH5B",313,0)
 ; Diagnosis fields. Checks to see if subsequent Procedure Diagnosis entries
"RTN","IBTRH5B",314,0)
 ; have values.
"RTN","IBTRH5B",315,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5B",316,0)
 ;          DA      - IEN of the Service Line Multiple being edited
"RTN","IBTRH5B",317,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",318,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5B",319,0)
 N NDE,RETURN
"RTN","IBTRH5B",320,0)
 S NDE=$G(^IBT(356.22,DA(1),16,DA,2))
"RTN","IBTRH5B",321,0)
 I FIELD=2.01 D  Q RETURN
"RTN","IBTRH5B",322,0)
 . I $P(NDE,"^",2)'="" S RETURN=1 Q
"RTN","IBTRH5B",323,0)
 . I $P(NDE,"^",3)'="" S RETURN=1 Q
"RTN","IBTRH5B",324,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5B",325,0)
 . S RETURN=0
"RTN","IBTRH5B",326,0)
 I FIELD=2.02 D  Q RETURN
"RTN","IBTRH5B",327,0)
 . I $P(NDE,"^",3)'="" S RETURN=1 Q
"RTN","IBTRH5B",328,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5B",329,0)
 . S RETURN=0
"RTN","IBTRH5B",330,0)
 I FIELD=2.03,$P(NDE,"^",4)'="" Q 1
"RTN","IBTRH5B",331,0)
 Q 0
"RTN","IBTRH5B",332,0)
 ;
"RTN","IBTRH5B",333,0)
ORALCAV(FIELD) ;EP
"RTN","IBTRH5B",334,0)
 ; Dictionary Screen function called from Service Line Oral Cavity Fields:
"RTN","IBTRH5B",335,0)
 ; 32216,3.01, 32216,3.02, 32216,3.03, 32216,3.04, 32216,3.05. 
"RTN","IBTRH5B",336,0)
 ; Prevents the same Oral Cavity from being selected more than once.
"RTN","IBTRH5B",337,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5B",338,0)
 ;          DA      - IEN of the Service Line Multiple being edited
"RTN","IBTRH5B",339,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",340,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5B",341,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5B",342,0)
 N NDE,RETURN
"RTN","IBTRH5B",343,0)
 S NDE=$G(^IBT(356.22,DA(1),16,DA,3))
"RTN","IBTRH5B",344,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5B",345,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5B",346,0)
 ;
"RTN","IBTRH5B",347,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5B",348,0)
 I FIELD=3.01 D  Q RETURN
"RTN","IBTRH5B",349,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",350,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",351,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",352,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",353,0)
 I FIELD=3.02 D  Q RETURN
"RTN","IBTRH5B",354,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5B",355,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",356,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",357,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",358,0)
 I FIELD=3.03 D  Q RETURN
"RTN","IBTRH5B",359,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5B",360,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",361,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",362,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",363,0)
 I FIELD=3.04 D  Q RETURN
"RTN","IBTRH5B",364,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5B",365,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",366,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",367,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",368,0)
 I FIELD=3.05 D  Q RETURN
"RTN","IBTRH5B",369,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5B",370,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",371,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",372,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",373,0)
 Q RETURN
"RTN","IBTRH5B",374,0)
 ;
"RTN","IBTRH5B",375,0)
ORALCAVP(FIELD) ;EP
"RTN","IBTRH5B",376,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Service Line Oral Cavity
"RTN","IBTRH5B",377,0)
 ; fields. Checks to see if subsequent Oral Cavity entries have values.
"RTN","IBTRH5B",378,0)
 ; Input:   DA      - IEN of the Service Line Multiple being edited
"RTN","IBTRH5B",379,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",380,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5B",381,0)
 N NDE,RETURN
"RTN","IBTRH5B",382,0)
 S NDE=$G(^IBT(356.22,DA(1),16,DA,3))
"RTN","IBTRH5B",383,0)
 I FIELD=3.01 D  Q RETURN
"RTN","IBTRH5B",384,0)
 . I $P(NDE,"^",2)'="" S RETURN=1 Q
"RTN","IBTRH5B",385,0)
 . I $P(NDE,"^",3)'="" S RETURN=1 Q
"RTN","IBTRH5B",386,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5B",387,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5B",388,0)
 . S RETURN=0
"RTN","IBTRH5B",389,0)
 I FIELD=3.02 D  Q RETURN
"RTN","IBTRH5B",390,0)
 . I $P(NDE,"^",3)'="" S RETURN=1 Q
"RTN","IBTRH5B",391,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5B",392,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5B",393,0)
 . S RETURN=0
"RTN","IBTRH5B",394,0)
 I FIELD=3.03 D  Q RETURN
"RTN","IBTRH5B",395,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5B",396,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5B",397,0)
 . S RETURN=0
"RTN","IBTRH5B",398,0)
 I FIELD=3.04,$P(NDE,"^",5)'="" Q 1
"RTN","IBTRH5B",399,0)
 Q 0
"RTN","IBTRH5B",400,0)
 ;
"RTN","IBTRH5B",401,0)
TOOTHS(FIELD) ;EP
"RTN","IBTRH5B",402,0)
 ; Dictionary Screen function called from Dental Service Line Tooth fields:
"RTN","IBTRH5B",403,0)
 ; 22164,.02, 22614,.03, 22614,.04, 22614,.05, 22614,.06. Prevents the 
"RTN","IBTRH5B",404,0)
 ; same Tooth Surface from being selected
"RTN","IBTRH5B",405,0)
 ; more than once.
"RTN","IBTRH5B",406,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5B",407,0)
 ;          DA      - Tooth Surface multiple IEN
"RTN","IBTRH5B",408,0)
 ;          DA(1)   - Service Line multiple IEN
"RTN","IBTRH5B",409,0)
 ;          DA(2)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5B",410,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5B",411,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5B",412,0)
 N NDE,RETURN
"RTN","IBTRH5B",413,0)
 S NDE=$G(^IBT(356.22,DA(2),16,DA(1),4,DA,0))
"RTN","IBTRH5B",414,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5B",415,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5B",416,0)
 ;
"RTN","IBTRH5B",417,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5B",418,0)
 I FIELD=.02 D  Q RETURN
"RTN","IBTRH5B",419,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",420,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",421,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",422,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",423,0)
 I FIELD=.03 D  Q RETURN
"RTN","IBTRH5B",424,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",425,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",426,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",427,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",428,0)
 I FIELD=.04 D  Q RETURN
"RTN","IBTRH5B",429,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",430,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",431,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",432,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",433,0)
 I FIELD=.05 D  Q RETURN
"RTN","IBTRH5B",434,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",435,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",436,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",437,0)
 . I $P(NDE,"^",6)=Y S RETURN=0 Q
"RTN","IBTRH5B",438,0)
 I FIELD=.06 D  Q RETURN
"RTN","IBTRH5B",439,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5B",440,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5B",441,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5B",442,0)
 . I $P(NDE,"^",5)=Y S RETURN=0 Q
"RTN","IBTRH5B",443,0)
 Q RETURN
"RTN","IBTRH5B",444,0)
 ;
"RTN","IBTRH5C")
0^24^B109276107^n/a
"RTN","IBTRH5C",1,0)
IBTRH5C ;ALB/FA - HCSR Create 278 Request ;12-AUG-2014
"RTN","IBTRH5C",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5C",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5C",4,0)
 ;;
"RTN","IBTRH5C",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5C",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5C",7,0)
 ;
"RTN","IBTRH5C",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5C",9,0)
 ; AMBTI        - Called from within the input template to see if any of the 
"RTN","IBTRH5C",10,0)
 ;                Ambulance Transport Information fields have a value
"RTN","IBTRH5C",11,0)
 ;                Fields: 18.01, 18.02, 18.03, 18.04, 18.05, 18.06, 18.09, 18.1 
"RTN","IBTRH5C",12,0)
 ; ATTPHY       - Returns the Attending Physician of the entry
"RTN","IBTRH5C",13,0)
 ; CERTCD       - Dictionary Screen function for Certification Type Code (2.02)
"RTN","IBTRH5C",14,0)
 ; CONTPH       - Input Validation method for fields 20, 21, 22
"RTN","IBTRH5C",15,0)
 ; CRTENTRY     - Creates a new worklist entry from a specified worklist entry.
"RTN","IBTRH5C",16,0)
 ;                Copies all the request data from the specified entry into the
"RTN","IBTRH5C",17,0)
 ;                new entry
"RTN","IBTRH5C",18,0)
 ; OXYET        - Called from within the input template to determine if one of
"RTN","IBTRH5C",19,0)
 ;                Oxygen Equipment Type fields = 'D' or 'E'. Fields 8.01, 8.02
"RTN","IBTRH5C",20,0)
 ;                8.03
"RTN","IBTRH5C",21,0)
 ; REQCAT       - Dictionary Screen function for Request Category Field 2.01
"RTN","IBTRH5C",22,0)
 ;                and field 356.2216/.15
"RTN","IBTRH5C",23,0)
 ; SLDXDUP      - Dictionary Screen function for Service Line Diagnosis fields
"RTN","IBTRH5C",24,0)
 ;                Checks to insure the diagnosis is NOT a duplicate entry AND 
"RTN","IBTRH5C",25,0)
 ;                points to a valid diagnosis multiple.
"RTN","IBTRH5C",26,0)
 ;                Fields: 2216,2.01, 2216,2.02, 2216,2.03, 2216,2.04 
"RTN","IBTRH5C",27,0)
 ; TOOTHSP      - Called from within the Input Template to check if subsequent
"RTN","IBTRH5C",28,0)
 ;                Tooth Surfaces have values
"RTN","IBTRH5C",29,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5C",30,0)
 ;
"RTN","IBTRH5C",31,0)
CONTPH(FIELD)   ;EP
"RTN","IBTRH5C",32,0)
 ; Input validation method for Requester Contact Numbers 1,2 and 3 (fields 20,
"RTN","IBTRH5C",33,0)
 ; 21 and 22)
"RTN","IBTRH5C",34,0)
 ; Input:   FIELD   - Requester Contact Number field being validated
"RTN","IBTRH5C",35,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5C",36,0)
 ;          X       - Internal Value of the user response
"RTN","IBTRH5C",37,0)
 ; Output:  None
"RTN","IBTRH5C",38,0)
 ; Returns: 1 - Answer is valid, 0 - Otherwise
"RTN","IBTRH5C",39,0)
 N RETURN,TYPE,XX
"RTN","IBTRH5C",40,0)
 S XX=$S(FIELD=20:19.01,FIELD=21:19.02,FIELD=22:19.03,1:0)
"RTN","IBTRH5C",41,0)
 Q:XX=0 0                                       ; Invalid FIELD
"RTN","IBTRH5C",42,0)
 S RETURN=1                                     ; Assume valid
"RTN","IBTRH5C",43,0)
 S TYPE=$$GET1^DIQ(356.22,DA_",",XX,"I")        ; Requester Contact Qualifier
"RTN","IBTRH5C",44,0)
 S TYPE=$$GET1^DIQ(365.021,TYPE_",",.01)        ; Requester Contact Qualifier Code
"RTN","IBTRH5C",45,0)
 ;
"RTN","IBTRH5C",46,0)
 I (TYPE="ED")!(TYPE="EM")!(TYPE="UR")!(TYPE="EX") D  Q RETURN
"RTN","IBTRH5C",47,0)
 . S RETURN=$S($L(X)'>250:1,1:0)
"RTN","IBTRH5C",48,0)
 S XX=$TR(X,"-","")                             ; Remove dashes
"RTN","IBTRH5C",49,0)
 I XX'?10N S RETURN=0
"RTN","IBTRH5C",50,0)
 Q RETURN
"RTN","IBTRH5C",51,0)
 ;
"RTN","IBTRH5C",52,0)
CRTENTRY(IBTRIEN,RIEN,IEN312,REQBY,DELCCDE,DELAY,NOOUTPUT,TTYPE)   ;EP
"RTN","IBTRH5C",53,0)
 ; Creates a new entry in 356.22 by copying fields from an existing entry. Used
"RTN","IBTRH5C",54,0)
 ; to create a request from a Response by copying the request entry pointed to
"RTN","IBTRH5C",55,0)
 ; from the response entry
"RTN","IBTRH5C",56,0)
 ; Input:   IBTRIEN - IEN of the entry to be copied
"RTN","IBTRH5C",57,0)
 ;          RIEN    - IEN of the response entry
"RTN","IBTRH5C",58,0)
 ;          IEN312  - IEN of the insurance multiple to set into field .03
"RTN","IBTRH5C",59,0)
 ;                    Optional, if not passed, this field is copied from the
"RTN","IBTRH5C",60,0)
 ;                    existing entry
"RTN","IBTRH5C",61,0)
 ;          REQBY   - DUZ of the Requested By user to set into field .11
"RTN","IBTRH5C",62,0)
 ;                    Optional, if not passed, this field is copied from the
"RTN","IBTRH5C",63,0)
 ;                    existing entry
"RTN","IBTRH5C",64,0)
 ;          DELCCDE - 1 to clear the value for Certification Type (field 2.02)
"RTN","IBTRH5C",65,0)
 ;                    Optional, if not passed, defaults to 0
"RTN","IBTRH5C",66,0)
 ;          DELAY   - 'D' or a future date to set a next review date and status
"RTN","IBTRH5C",67,0)
 ;                    to '08'
"RTN","IBTRH5C",68,0)
 ;                    Optional, if not passed, defaults to ""
"RTN","IBTRH5C",69,0)
 ;          NOOUTPUT - suppress error message output, if not passed, defaults to 0 (false)
"RTN","IBTRH5C",70,0)
 ;          TTYPE   - UM02 value for 278x215 if cancel
"RTN","IBTRH5C",71,0)
 ;
"RTN","IBTRH5C",72,0)
 ; Output:  New entry created in 356.22
"RTN","IBTRH5C",73,0)
 ; Returns: 0 - Copy was NOT successful and error messages were displayed
"RTN","IBTRH5C",74,0)
 ;          Otherwise, IEN of the new entry in 356.22 is returned
"RTN","IBTRH5C",75,0)
 N ERROR,FLDS,IENARRY,IENS,NEWENTRY,NIENS,NIENS16,OLDENTRY,STOPFLG,XX,Z,Z1,XX1
"RTN","IBTRH5C",76,0)
 S:'$D(NOOUTPUT) NOOUTPUT=0
"RTN","IBTRH5C",77,0)
 S:'$D(IEN312) IEN312=""
"RTN","IBTRH5C",78,0)
 S:'$D(REQBY) REQBY=""
"RTN","IBTRH5C",79,0)
 S:'$D(DELCCDE) DELCCDE=0
"RTN","IBTRH5C",80,0)
 S:'$D(DELAY) DELAY=""
"RTN","IBTRH5C",81,0)
 S IENS=IBTRIEN_","
"RTN","IBTRH5C",82,0)
 S FLDS=".02;.03:.07;.11;.16;2.01:2.25;3*;4.01:4.14;5.01:5.18;6.01:6.18"
"RTN","IBTRH5C",83,0)
 S FLDS=FLDS_";7.01:7.13;8.01:8.08;9.01:9.08;10.01:10.13;11*;12;14*;15*;18.01:18.1;19.01:19.03;20:22"
"RTN","IBTRH5C",84,0)
 D GETS^DIQ(356.22,IENS,FLDS,"NI","OLDENTRY","ERROR")
"RTN","IBTRH5C",85,0)
 I $D(ERROR) D COPYERR(0,.ERROR) Q 0            ; Unsuccessful read of initial entry
"RTN","IBTRH5C",86,0)
 ;
"RTN","IBTRH5C",87,0)
 ; Copy internal data from the specified entry to a new array
"RTN","IBTRH5C",88,0)
 M NEWENTRY(356.22,"+1,")=OLDENTRY(356.22,IENS)
"RTN","IBTRH5C",89,0)
 D COPYINT(.NEWENTRY)
"RTN","IBTRH5C",90,0)
 ;
"RTN","IBTRH5C",91,0)
 ; Set the Event Date to 'NOW'
"RTN","IBTRH5C",92,0)
 S NEWENTRY(356.22,"+1,",.01)=$$NOW^XLFDT()
"RTN","IBTRH5C",93,0)
 S:IEN312'="" NEWENTRY(356.22,"+1,",.03)=IEN312  ; Set Insurance Multiple IEN
"RTN","IBTRH5C",94,0)
 S NEWENTRY(356.22,"+1,",.08)=$S(DELAY'="":"08",1:0) ; Initialize status to 0
"RTN","IBTRH5C",95,0)
 S:REQBY'="" NEWENTRY(356.22,"+1,",.11)=REQBY
"RTN","IBTRH5C",96,0)
 I DELCCDE D
"RTN","IBTRH5C",97,0)
 . S NEWENTRY(356.22,"+1,",2.02)=""  ; Clear Certification Type field
"RTN","IBTRH5C",98,0)
 . S NEWENTRY(356.22,"+1,",.18)=1    ; Flag creation from Response
"RTN","IBTRH5C",99,0)
 I $G(TTYPE)="C" S NEWENTRY(356.22,"+1,",2.02)=3
"RTN","IBTRH5C",100,0)
 S:DELAY'="" NEWENTRY(356.22,"+1,",.17)=DELAY   ; Delayed until DELAY
"RTN","IBTRH5C",101,0)
 S XX=$$GET1^DIQ(356.22,RIEN_",",103.02) ; Auth. or Ref. number from response
"RTN","IBTRH5C",102,0)
 S XX1=$$GET1^DIQ(356.22,RIEN_",",103.01) ; CERT ACT CODE
"RTN","IBTRH5C",103,0)
 I $F(",A1,A2,A6,",","_XX1_",") S NEWENTRY(356.22,"+1,",17.01)=XX
"RTN","IBTRH5C",104,0)
 I $F(",A3,A4,C,CT,NA,",","_XX1_",") D
"RTN","IBTRH5C",105,0)
 . I XX="" S XX=$$GET1^DIQ(356.22,RIEN_",",17.02)
"RTN","IBTRH5C",106,0)
 . S NEWENTRY(356.22,"+1,",17.02)=XX
"RTN","IBTRH5C",107,0)
 K IENARRY
"RTN","IBTRH5C",108,0)
 D UPDATE^DIE(,"NEWENTRY","IENARRY","ERROR")    ; File the initial data
"RTN","IBTRH5C",109,0)
 I $D(ERROR) D COPYERR(1,.ERROR) Q 0            ; Unsuccessful copy of initial data
"RTN","IBTRH5C",110,0)
 ; update field .27 of response message
"RTN","IBTRH5C",111,0)
 I DELCCDE D  I $D(ERROR) D COPYERR(1,.ERROR) Q 0
"RTN","IBTRH5C",112,0)
 . N UPDRSP
"RTN","IBTRH5C",113,0)
 . S UPDRSP(356.22,RIEN_",",.27)=1
"RTN","IBTRH5C",114,0)
 . D FILE^DIE("I","UPDRSP","ERROR")
"RTN","IBTRH5C",115,0)
 . Q
"RTN","IBTRH5C",116,0)
 ;
"RTN","IBTRH5C",117,0)
 ; Next copy multiples IENs of the new entry in 356.22 (top level)
"RTN","IBTRH5C",118,0)
 S NIENS=IENARRY(1)_","
"RTN","IBTRH5C",119,0)
 ;
"RTN","IBTRH5C",120,0)
 ; File Diagnosis multiples (356.223)
"RTN","IBTRH5C",121,0)
 I '$$MLTCPY(356.223,NIENS) Q 0
"RTN","IBTRH5C",122,0)
 ;
"RTN","IBTRH5C",123,0)
 ; File Attachment multiples (356.2211)
"RTN","IBTRH5C",124,0)
 I '$$MLTCPY(356.2211,NIENS) Q 0
"RTN","IBTRH5C",125,0)
 ;
"RTN","IBTRH5C",126,0)
 ; File Patient Event Transport multiples (356.2214)
"RTN","IBTRH5C",127,0)
 I '$$MLTCPY(356.2214,NIENS) Q 0
"RTN","IBTRH5C",128,0)
 ;
"RTN","IBTRH5C",129,0)
 ; File Other UMO multiples (356.2215)
"RTN","IBTRH5C",130,0)
 I '$$MLTCPY(356.2215,NIENS) Q 0
"RTN","IBTRH5C",131,0)
 ;
"RTN","IBTRH5C",132,0)
 ; File Provider multiples (356.2213)
"RTN","IBTRH5C",133,0)
 ; NOTE: not all fields are being copied, each entry needs to be handled separately
"RTN","IBTRH5C",134,0)
 S Z=0,STOPFLG=0
"RTN","IBTRH5C",135,0)
 F  D  Q:'Z!STOPFLG
"RTN","IBTRH5C",136,0)
 . S Z=$O(^IBT(356.22,IBTRIEN,13,Z))
"RTN","IBTRH5C",137,0)
 . Q:'Z
"RTN","IBTRH5C",138,0)
 . S IENS=Z_","_IBTRIEN_","
"RTN","IBTRH5C",139,0)
 . K NEWENTRY,OLDENTRY
"RTN","IBTRH5C",140,0)
 . D GETS^DIQ(356.2213,IENS,".01:.03","NI","OLDENTRY","ERROR")
"RTN","IBTRH5C",141,0)
 . I $D(ERROR) D COPYERR(0,.ERROR) S STOPFLG=1 Q
"RTN","IBTRH5C",142,0)
 . M NEWENTRY(356.2213,"+1,"_NIENS)=OLDENTRY(356.2213,IENS)
"RTN","IBTRH5C",143,0)
 . D COPYINT(.NEWENTRY)
"RTN","IBTRH5C",144,0)
 . D UPDATE^DIE(,"NEWENTRY",,"ERROR")
"RTN","IBTRH5C",145,0)
 . I $D(ERROR) D COPYERR(1,.ERROR) S STOPFLG=1
"RTN","IBTRH5C",146,0)
 Q:STOPFLG 0
"RTN","IBTRH5C",147,0)
 ;
"RTN","IBTRH5C",148,0)
 ; File Service Line multiples (356.2216)
"RTN","IBTRH5C",149,0)
 ; NOTE: not all fields are being copied, each entry needs to be handled separately
"RTN","IBTRH5C",150,0)
 S Z=0,STOPFLG=0
"RTN","IBTRH5C",151,0)
 F  D  Q:'Z!STOPFLG
"RTN","IBTRH5C",152,0)
 . S Z=$O(^IBT(356.22,IBTRIEN,16,Z))
"RTN","IBTRH5C",153,0)
 . Q:'Z
"RTN","IBTRH5C",154,0)
 . S IENS=Z_","_IBTRIEN_","
"RTN","IBTRH5C",155,0)
 . K OLDENTRY
"RTN","IBTRH5C",156,0)
 . S FLDS=".01:.14;1.01:1.12;2.01:2.09;3.01:3.07;4*;5.01:5.08;6*;7"
"RTN","IBTRH5C",157,0)
 . D GETS^DIQ(356.2216,IENS,FLDS,"NI","OLDENTRY","ERROR")
"RTN","IBTRH5C",158,0)
 . I $D(ERROR) D COPYERR(0,.ERROR) S STOPFLG=1 Q
"RTN","IBTRH5C",159,0)
 . K NEWENTRY
"RTN","IBTRH5C",160,0)
 . M NEWENTRY(356.2216,"+1,"_NIENS)=OLDENTRY(356.2216,IENS)
"RTN","IBTRH5C",161,0)
 . D COPYINT(.NEWENTRY)
"RTN","IBTRH5C",162,0)
 . K IENARRY
"RTN","IBTRH5C",163,0)
 . D UPDATE^DIE(,"NEWENTRY","IENARRY","ERROR")
"RTN","IBTRH5C",164,0)
 . I $D(ERROR) D COPYERR(1,.ERROR) S STOPFLG=1
"RTN","IBTRH5C",165,0)
 . S NIENS16=IENARRY(1)_","_NIENS               ; IENs of the new Service Line in 356.2216
"RTN","IBTRH5C",166,0)
 . ;
"RTN","IBTRH5C",167,0)
 . ; File Service Line Tooth Information multiples (356.22164)
"RTN","IBTRH5C",168,0)
 . I '$$MLTCPY(356.22164,NIENS16) S STOPFLG=1 Q
"RTN","IBTRH5C",169,0)
 . ;
"RTN","IBTRH5C",170,0)
 . ; File Service Line Attachment multiple (356.22166)
"RTN","IBTRH5C",171,0)
 . I '$$MLTCPY(356.22166,NIENS16) S STOPFLG=1 Q
"RTN","IBTRH5C",172,0)
 . ;
"RTN","IBTRH5C",173,0)
 . ; File Service Line Provider Data multiples (356.22168)
"RTN","IBTRH5C",174,0)
 . ; NOTE - not all fields are being copied, each entry needs to be handled separately
"RTN","IBTRH5C",175,0)
 . S Z1=0
"RTN","IBTRH5C",176,0)
 . F  D  Q:'Z1!STOPFLG
"RTN","IBTRH5C",177,0)
 . . S Z1=$O(^IBT(356.22,IBTRIEN,16,Z,8,Z1))
"RTN","IBTRH5C",178,0)
 . . Q:'Z1
"RTN","IBTRH5C",179,0)
 . . S IENS=Z1_","_Z_","_IBTRIEN_","
"RTN","IBTRH5C",180,0)
 . . K NEWENTRY,OLDENTRY
"RTN","IBTRH5C",181,0)
 . . D GETS^DIQ(356.22168,IENS,".01:.03","NI","OLDENTRY","ERROR")
"RTN","IBTRH5C",182,0)
 . . I $D(ERROR) D COPYERR(0,.ERROR) S STOPFLG=1 Q
"RTN","IBTRH5C",183,0)
 . . M NEWENTRY(356.22168,"+1,"_NIENS16)=OLDENTRY(356.22168,IENS)
"RTN","IBTRH5C",184,0)
 . . D COPYINT(.NEWENTRY)
"RTN","IBTRH5C",185,0)
 . . D UPDATE^DIE(,"NEWENTRY",,"ERROR")
"RTN","IBTRH5C",186,0)
 . . I $D(ERROR) D COPYERR(1,.ERROR) S STOPFLG=1
"RTN","IBTRH5C",187,0)
 I STOPFLG Q 0
"RTN","IBTRH5C",188,0)
 Q $P(NIENS,",",1)
"RTN","IBTRH5C",189,0)
 ;
"RTN","IBTRH5C",190,0)
COPYERR(TYPE,ERROR) ; Displays any errors encountered while copying a request
"RTN","IBTRH5C",191,0)
 ; Input:   TYPE    - 0 - Error while reading data
"RTN","IBTRH5C",192,0)
 ;                  - 1 - Error while filing data
"RTN","IBTRH5C",193,0)
 ;          ERROR   - Array used for FM error reporting
"RTN","IBTRH5C",194,0)
 ; Output:  Error(s) are displayed
"RTN","IBTRH5C",195,0)
 I '$G(NOOUTPUT) Q  ;IF NOT TO DISPLAY OUTPUT, for background job
"RTN","IBTRH5C",196,0)
 N STR,Z,Z1
"RTN","IBTRH5C",197,0)
 Q:'$D(ERROR)
"RTN","IBTRH5C",198,0)
 W !,"Unable to copy - the following error was encountered while "
"RTN","IBTRH5C",199,0)
 W $S(TYPE:"filing",1:"retrieving")," the data:"
"RTN","IBTRH5C",200,0)
 S Z=0
"RTN","IBTRH5C",201,0)
 F  D  Q:'Z
"RTN","IBTRH5C",202,0)
 . S Z=$O(ERROR("DIERR",Z))
"RTN","IBTRH5C",203,0)
 . Q:'Z
"RTN","IBTRH5C",204,0)
 . S STR=$G(ERROR("DIERR",Z))
"RTN","IBTRH5C",205,0)
 . W:STR'="" !,"Error code: "_STR
"RTN","IBTRH5C",206,0)
 . S STR=$G(ERROR("DIERR",Z,"PARAM","FILE"))
"RTN","IBTRH5C",207,0)
 . W:STR'="" !,"File number: "_STR
"RTN","IBTRH5C",208,0)
 . S STR=$G(ERROR("DIERR",Z,"PARAM","FIELD"))
"RTN","IBTRH5C",209,0)
 . W:STR'="" !,"Field number: "_STR
"RTN","IBTRH5C",210,0)
 . W !,"Error text:"
"RTN","IBTRH5C",211,0)
 . S Z1=0
"RTN","IBTRH5C",212,0)
 . F  D  Q:'Z1
"RTN","IBTRH5C",213,0)
 . . S Z1=$O(ERROR("DIERR",1,"TEXT",Z1))
"RTN","IBTRH5C",214,0)
 . . Q:'Z1
"RTN","IBTRH5C",215,0)
 . . W !,ERROR("DIERR",1,"TEXT",Z1)
"RTN","IBTRH5C",216,0)
 Q
"RTN","IBTRH5C",217,0)
 ;
"RTN","IBTRH5C",218,0)
MLTCPY(SFNUM,NEWIENS) ; Copies the specified multiple 
"RTN","IBTRH5C",219,0)
 ; Input:   SFNUM       - Sub-file number of the multiple to copy
"RTN","IBTRH5C",220,0)
 ;          NIENS       - IENs of the new entry (copied to)
"RTN","IBTRH5C",221,0)
 ;          OLDENTRY    - FDA array to get data from (defined in the calling tag)
"RTN","IBTRH5C",222,0)
 ; Returns: 1 on successful copy, 0 on failure
"RTN","IBTRH5C",223,0)
 ;
"RTN","IBTRH5C",224,0)
 N ERROR,NEWENTRY,RES,STOPFLG,Z
"RTN","IBTRH5C",225,0)
 S RES=1,STOPFLG=0
"RTN","IBTRH5C",226,0)
 S Z=0
"RTN","IBTRH5C",227,0)
 F  D  Q:'Z!STOPFLG
"RTN","IBTRH5C",228,0)
 . S Z=$O(OLDENTRY(SFNUM,Z))
"RTN","IBTRH5C",229,0)
 . Q:'Z
"RTN","IBTRH5C",230,0)
 . K NEWENTRY
"RTN","IBTRH5C",231,0)
 . M NEWENTRY(SFNUM,"+1,"_NEWIENS)=OLDENTRY(SFNUM,Z)
"RTN","IBTRH5C",232,0)
 . D COPYINT(.NEWENTRY)
"RTN","IBTRH5C",233,0)
 . D UPDATE^DIE(,"NEWENTRY",,"ERROR")
"RTN","IBTRH5C",234,0)
 . I $D(ERROR) D COPYERR(1) S STOPFLG=1,RES=0
"RTN","IBTRH5C",235,0)
 Q RES
"RTN","IBTRH5C",236,0)
 ;
"RTN","IBTRH5C",237,0)
COPYINT(NEW) ; Copies an array of internal values to a new array
"RTN","IBTRH5C",238,0)
 ; Input:   NEW     - Current Array of internal values
"RTN","IBTRH5C",239,0)
 ;                    Retrieved using D GETS^DIQ(356.22,IENS,FLDS,"NI","OLD","ERROR")
"RTN","IBTRH5C",240,0)
 ;                    e.g. NEW(356.223,"+1,19,",.02,"I")=7209320
"RTN","IBTRH5C",241,0)
 ; Output:  NEW     - Updated array of internal values, stripping off the "I" subscript
"RTN","IBTRH5C",242,0)
 ;                    e.g. NEW(356.223,"+1,19,",.02)=7209320
"RTN","IBTRH5C",243,0)
 N ARRAY,NEW2,YY
"RTN","IBTRH5C",244,0)
 S ARRAY="NEW("""")"
"RTN","IBTRH5C",245,0)
 F  D  Q:ARRAY=""
"RTN","IBTRH5C",246,0)
 . S ARRAY=$Q(@ARRAY)
"RTN","IBTRH5C",247,0)
 . Q:ARRAY=""
"RTN","IBTRH5C",248,0)
 . I ARRAY[",""I"")" D  Q
"RTN","IBTRH5C",249,0)
 . . S YY=$P(ARRAY,",""I"")",1)_")"
"RTN","IBTRH5C",250,0)
 . . S YY="NEW2("_$P(YY,"(",2)
"RTN","IBTRH5C",251,0)
 . . S @YY=@ARRAY
"RTN","IBTRH5C",252,0)
 . S YY="NEW2("_$P(ARRAY,"(",2)
"RTN","IBTRH5C",253,0)
 . S @YY=@ARRAY
"RTN","IBTRH5C",254,0)
 K NEW
"RTN","IBTRH5C",255,0)
 M NEW=NEW2
"RTN","IBTRH5C",256,0)
 Q
"RTN","IBTRH5C",257,0)
 ;
"RTN","IBTRH5C",258,0)
OXYET(IBTRIEN)  ;EP
"RTN","IBTRH5C",259,0)
 ; Called from within the input template
"RTN","IBTRH5C",260,0)
 ; Checks to see if any of the currently filed Oxygen Equipment
"RTN","IBTRH5C",261,0)
 ; Types have a value of 'D' or 'E'
"RTN","IBTRH5C",262,0)
 ; Input:   IBTRIEN - IEN of the Patient Event
"RTN","IBTRH5C",263,0)
 ; Returns: 1 - at least one of the Oxygen Equipment Types is 'D' or 'E'
"RTN","IBTRH5C",264,0)
 ;          0 Otherwise
"RTN","IBTRH5C",265,0)
 N NDE
"RTN","IBTRH5C",266,0)
 S NDE=$G(^IBT(356.22,IBTRIEN,8))
"RTN","IBTRH5C",267,0)
 I ($P(NDE,"^",1)=4)!($P(NDE,"^",1)=5) Q 1
"RTN","IBTRH5C",268,0)
 I ($P(NDE,"^",2)=4)!($P(NDE,"^",2)=5) Q 1
"RTN","IBTRH5C",269,0)
 I ($P(NDE,"^",3)=4)!($P(NDE,"^",3)=5) Q 1
"RTN","IBTRH5C",270,0)
 Q 0
"RTN","IBTRH5C",271,0)
 ;
"RTN","IBTRH5C",272,0)
ATTPHY(IBTRIEN) ;EP
"RTN","IBTRH5C",273,0)
 ; Returns the Attending Physician for the admission of the
"RTN","IBTRH5C",274,0)
 ; specified Inpatient event
"RTN","IBTRH5C",275,0)
 ; Input:   IBTRIEN - IEN of the Inpatient Event
"RTN","IBTRH5C",276,0)
 ; Returns: IEN in file 200 of the Attending Physician or ""
"RTN","IBTRH5C",277,0)
 N ADATE,DA,DFN,DT,EVENT,FOUND,IADATE
"RTN","IBTRH5C",278,0)
 S EVENT=$G(^IBT(356.22,IBTRIEN,0))
"RTN","IBTRH5C",279,0)
 S DFN=$P(EVENT,"^",2)                          ; DFN of the patient
"RTN","IBTRH5C",280,0)
 S ADATE=$P($P(EVENT,"^",7),"-",1)              ; Internal Admit date
"RTN","IBTRH5C",281,0)
 S IADATE=9999999.9999999-ADATE
"RTN","IBTRH5C",282,0)
 S DA=$O(^DGPM("ATID1",DFN,IADATE,""))          ; DBIA419
"RTN","IBTRH5C",283,0)
 Q:DA="" ""                                     ; No Patient Movement admission record
"RTN","IBTRH5C",284,0)
 Q $$GET1^DIQ(405,DA_",",.19,"I")
"RTN","IBTRH5C",285,0)
 ;
"RTN","IBTRH5C",286,0)
REQCAT(FIELD)    ;EP
"RTN","IBTRH5C",287,0)
 ; Dictionary Screen for Request Category (2.01) 
"RTN","IBTRH5C",288,0)
 ; Checks the Request Category (2.01 OR 356.2216/.15) to make sure the answer
"RTN","IBTRH5C",289,0)
 ; is valid for the event type 
"RTN","IBTRH5C",290,0)
 ; Input:   FIELD   - Only passed when called from 356.2216/.15
"RTN","IBTRH5C",291,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5C",292,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5C",293,0)
 ; Output:  None
"RTN","IBTRH5C",294,0)
 ; Returns: 1 - Answer is valid, 0 - Otherwise
"RTN","IBTRH5C",295,0)
 N RETURN,STAT
"RTN","IBTRH5C",296,0)
 I $D(FIELD) D  Q RETURN
"RTN","IBTRH5C",297,0)
 . S RETURN=1
"RTN","IBTRH5C",298,0)
 . I Y'=2,Y'=4 S RETURN=0
"RTN","IBTRH5C",299,0)
 ;
"RTN","IBTRH5C",300,0)
 S STAT=$P($G(^IBT(356.22,DA,0)),"^",4)
"RTN","IBTRH5C",301,0)
 I STAT="I",Y'=1 Q 0
"RTN","IBTRH5C",302,0)
 I STAT="O",Y=1 Q 0
"RTN","IBTRH5C",303,0)
 Q 1
"RTN","IBTRH5C",304,0)
 ;
"RTN","IBTRH5C",305,0)
CERTCD()    ;EP
"RTN","IBTRH5C",306,0)
 ; Dictionary screen for field Certification Type Code 2.02
"RTN","IBTRH5C",307,0)
 ; Checks the code to make sure the answer is valid for the event type 
"RTN","IBTRH5C",308,0)
 ; Input:   DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5C",309,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5C",310,0)
 ; Output:  None
"RTN","IBTRH5C",311,0)
 ; Returns: 1 - Answer is valid, 0 - Otherwise
"RTN","IBTRH5C",312,0)
 N FREP
"RTN","IBTRH5C",313,0)
 I '$F(",3,5,",","_Y_",") Q 0
"RTN","IBTRH5C",314,0)
 S FREP=$P($G(^IBT(356.22,DA,0)),"^",18)
"RTN","IBTRH5C",315,0)
 I FREP=1,Y=5 Q 0
"RTN","IBTRH5C",316,0)
 Q 1
"RTN","IBTRH5C",317,0)
 ;
"RTN","IBTRH5C",318,0)
AMBTI(IBTRIEN) ;EP
"RTN","IBTRH5C",319,0)
 ; Called from Input Template IB CREATE 278 REQUEST to check if any of the
"RTN","IBTRH5C",320,0)
 ; Ambulance Transport Information fields has a value. Used to potentially
"RTN","IBTRH5C",321,0)
 ; skip to potentially skip the Patient Event Transport Information questions
"RTN","IBTRH5C",322,0)
 ; Input:   IBTRIEN     - IEN of the 356.22 entry being edited
"RTN","IBTRH5C",323,0)
 ; Returns: 1 - At least one field has a value, 0 otherwise
"RTN","IBTRH5C",324,0)
 N NDE
"RTN","IBTRH5C",325,0)
 S NDE=$G(^IBT(356.22,IBTRIEN,18))
"RTN","IBTRH5C",326,0)
 I $P(NDE,"^",1)'="" Q 1
"RTN","IBTRH5C",327,0)
 I $P(NDE,"^",2)'="" Q 1
"RTN","IBTRH5C",328,0)
 I $P(NDE,"^",3)'="" Q 1
"RTN","IBTRH5C",329,0)
 I $P(NDE,"^",4)'="" Q 1
"RTN","IBTRH5C",330,0)
 I $P(NDE,"^",5)'="" Q 1
"RTN","IBTRH5C",331,0)
 I $P(NDE,"^",6)'="" Q 1
"RTN","IBTRH5C",332,0)
 I $P(NDE,"^",9)'="" Q 1
"RTN","IBTRH5C",333,0)
 I $P(NDE,"^",10)'="" Q 1
"RTN","IBTRH5C",334,0)
 Q 0
"RTN","IBTRH5C",335,0)
 ;
"RTN","IBTRH5C",336,0)
SLDXDUP(FIELD)    ;EP
"RTN","IBTRH5C",337,0)
 ; Dictionary Screen Function
"RTN","IBTRH5C",338,0)
 ; Checks to see if the specified Service Line Diagnosis is a duplicate entry
"RTN","IBTRH5C",339,0)
 ; AND points to valid Diagnosis multiple.
"RTN","IBTRH5C",340,0)
 ; Fields: 2216,2.01, 2216,2.02, 2216,2.03, 2216,2.04 
"RTN","IBTRH5C",341,0)
 ; Input:   FIELD   - Field number of the field being checked
"RTN","IBTRH5C",342,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5C",343,0)
 ;          DA      - IEN of the service line multiple
"RTN","IBTRH5C",344,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5C",345,0)
 ; Output:  None
"RTN","IBTRH5C",346,0)
 ; Returns: 1 - Answer is valid, 0 - Otherwise
"RTN","IBTRH5C",347,0)
 N NDE,RETURN
"RTN","IBTRH5C",348,0)
 S RETURN=1                                     ; Assume Valid Input
"RTN","IBTRH5C",349,0)
 Q:Y="" 1                                       ; No value entered
"RTN","IBTRH5C",350,0)
 ;
"RTN","IBTRH5C",351,0)
 ; Not a valid service line multiple
"RTN","IBTRH5C",352,0)
 I '$D(^IBT(356.22,DA(1),3,Y,0)) Q 0
"RTN","IBTRH5C",353,0)
 ;
"RTN","IBTRH5C",354,0)
 ; Check for duplicates
"RTN","IBTRH5C",355,0)
 S NDE=$G(^IBT(356.22,DA(1),16,DA,2))
"RTN","IBTRH5C",356,0)
 I FIELD="2.01" D  Q RETURN
"RTN","IBTRH5C",357,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5C",358,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5C",359,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5C",360,0)
 I FIELD="2.02" D  Q RETURN
"RTN","IBTRH5C",361,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5C",362,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5C",363,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5C",364,0)
 I FIELD="2.03" D  Q RETURN
"RTN","IBTRH5C",365,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5C",366,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5C",367,0)
 . I $P(NDE,"^",4)=Y S RETURN=0 Q
"RTN","IBTRH5C",368,0)
 I FIELD="2.04" D  Q RETURN
"RTN","IBTRH5C",369,0)
 . I $P(NDE,"^",1)=Y S RETURN=0 Q
"RTN","IBTRH5C",370,0)
 . I $P(NDE,"^",2)=Y S RETURN=0 Q
"RTN","IBTRH5C",371,0)
 . I $P(NDE,"^",3)=Y S RETURN=0 Q
"RTN","IBTRH5C",372,0)
 Q 1
"RTN","IBTRH5C",373,0)
 ;
"RTN","IBTRH5C",374,0)
TOOTHSP(FIELD) ;EP
"RTN","IBTRH5C",375,0)
 ; Called from Input Template IB CREATE 278 REQUEST for Service Line Tooth
"RTN","IBTRH5C",376,0)
 ; Surface fields. Checks to see if subsequent Tooth Surfaces have values.
"RTN","IBTRH5C",377,0)
 ; Input:   FIELD   - Field # of the field being checked
"RTN","IBTRH5C",378,0)
 ;          DA      - IEN of the Tooth multiple being edited
"RTN","IBTRH5C",379,0)
 ;          DA(1)   - IEN of the Service Line Multiple being edited
"RTN","IBTRH5C",380,0)
 ;          DA(2)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5C",381,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5C",382,0)
 N NDE,RETURN
"RTN","IBTRH5C",383,0)
 S NDE=$G(^IBT(356.22,DA(2),16,DA(1),4,DA,0))
"RTN","IBTRH5C",384,0)
 I FIELD=.02 D  Q RETURN
"RTN","IBTRH5C",385,0)
 . I $P(NDE,"^",2)'="" S RETURN=1 Q
"RTN","IBTRH5C",386,0)
 . I $P(NDE,"^",3)'="" S RETURN=1 Q
"RTN","IBTRH5C",387,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5C",388,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5C",389,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5C",390,0)
 . S RETURN=0
"RTN","IBTRH5C",391,0)
 I FIELD=.03 D  Q RETURN
"RTN","IBTRH5C",392,0)
 . I $P(NDE,"^",4)'="" S RETURN=1 Q
"RTN","IBTRH5C",393,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5C",394,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5C",395,0)
 . S RETURN=0
"RTN","IBTRH5C",396,0)
 I FIELD=.04 D  Q RETURN
"RTN","IBTRH5C",397,0)
 . I $P(NDE,"^",5)'="" S RETURN=1 Q
"RTN","IBTRH5C",398,0)
 . I $P(NDE,"^",6)'="" S RETURN=1 Q
"RTN","IBTRH5C",399,0)
 . S RETURN=0
"RTN","IBTRH5C",400,0)
 I FIELD=.05,$P(NDE,"^",6)'="" Q 1
"RTN","IBTRH5C",401,0)
 Q 0
"RTN","IBTRH5C",402,0)
 ;
"RTN","IBTRH5D")
0^28^B177666961^n/a
"RTN","IBTRH5D",1,0)
IBTRH5D ;ALB/FA - HCSR Create 278 Request ;12-AUG-2014
"RTN","IBTRH5D",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5D",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5D",4,0)
 ;;
"RTN","IBTRH5D",5,0)
 ; Contains Functions used in creating a 278 request from a
"RTN","IBTRH5D",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5D",7,0)
 ;
"RTN","IBTRH5D",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5D",9,0)
 ; SELAPI       - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5D",10,0)
 ;                Additional Patient Information lines and either pick one to 
"RTN","IBTRH5D",11,0)
 ;                edit, enter a new one or skip.
"RTN","IBTRH5D",12,0)
 ; SELDX        - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5D",13,0)
 ;                Diagnoses and either pick one to edit, enter a new one or
"RTN","IBTRH5D",14,0)
 ;                skip.
"RTN","IBTRH5D",15,0)
 ; SELPD        - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5D",16,0)
 ;                Patient Event Provider Data Lines and either pick one to 
"RTN","IBTRH5D",17,0)
 ;                edit, enter a new one or skip.
"RTN","IBTRH5D",18,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5D",19,0)
 ;
"RTN","IBTRH5D",20,0)
SELAPI(IBTRIEN) ;EP
"RTN","IBTRH5D",21,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5D",22,0)
 ; Provides the user with a quick view of currently entered Additional Patient
"RTN","IBTRH5D",23,0)
 ; Information multiples and allows them to select one to edit or enter a new 
"RTN","IBTRH5D",24,0)
 ; one.
"RTN","IBTRH5D",25,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",26,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5D",27,0)
 ;          "" if creating a new multiple, -2 to exit template
"RTN","IBTRH5D",28,0)
 ;          IBNEW - 1 if creating a new entry
"RTN","IBTRH5D",29,0)
 N AIDATA,CNT,ENTNUM,FDA,IEN,H1,H2,L1,L2,MAX,RETIEN,RTYPE,SECT,X,XX,Y,YY
"RTN","IBTRH5D",30,0)
 S IBNEW=0,SECT="Additional Patient Information"
"RTN","IBTRH5D",31,0)
 ;
"RTN","IBTRH5D",32,0)
 ; First check for an empty Additional Patient Information Line to delete
"RTN","IBTRH5D",33,0)
 D DELAPI(IBTRIEN)
"RTN","IBTRH5D",34,0)
 ;
"RTN","IBTRH5D",35,0)
 ; Next create an array of all current Additional Patient Information lines to
"RTN","IBTRH5D",36,0)
 ; display
"RTN","IBTRH5D",37,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,11,0)),"^",4)  ; Total # of API Lines
"RTN","IBTRH5D",38,0)
 S MAX=$S(XX<10:"",1:"Additional Patient Information Lines")
"RTN","IBTRH5D",39,0)
 S IEN=0,CNT=0
"RTN","IBTRH5D",40,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5D",41,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,11,IEN))
"RTN","IBTRH5D",42,0)
 . Q:+IEN=0
"RTN","IBTRH5D",43,0)
 . S CNT=CNT+1
"RTN","IBTRH5D",44,0)
 . S XX=$$LJ^XLFSTR(CNT,4)                      ; Selection #
"RTN","IBTRH5D",45,0)
 . S YY=$$GET1^DIQ(356.2211,IEN_","_DA_",",.01) ; Report Type Desc
"RTN","IBTRH5D",46,0)
 . S YY=$E(YY,1,28)_"  "
"RTN","IBTRH5D",47,0)
 . S XX=XX_$$LJ^XLFSTR(YY,30)
"RTN","IBTRH5D",48,0)
 . S YY=$$GET1^DIQ(356.2211,IEN_","_DA_",",.02) ; Delivery Method
"RTN","IBTRH5D",49,0)
 . S YY=$E(YY,1,20)_"  "
"RTN","IBTRH5D",50,0)
 . S XX=XX_$$LJ^XLFSTR(YY,23)
"RTN","IBTRH5D",51,0)
 . S YY=$$GET1^DIQ(356.2211,IEN_","_DA_",",.03) ; Attachment #
"RTN","IBTRH5D",52,0)
 . S YY=$E(YY,1,22)
"RTN","IBTRH5D",53,0)
 . S XX=XX_$$LJ^XLFSTR(YY,22)
"RTN","IBTRH5D",54,0)
 . S AIDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5D",55,0)
 ;
"RTN","IBTRH5D",56,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5D",57,0)
 . W !!,"No Additional Patient Information is currently on file.",!
"RTN","IBTRH5D",58,0)
 . S XX=$$ASKNEW("Add Additional Patient Information","NO")
"RTN","IBTRH5D",59,0)
 . Q:XX<0
"RTN","IBTRH5D",60,0)
 . S RTYPE=$$RTYPE(IBTRIEN)                     ; Get the .01 value
"RTN","IBTRH5D",61,0)
 . I RTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5D",62,0)
 . S IBNEW=1,XX=RTYPE
"RTN","IBTRH5D",63,0)
 . S FDA(356.2211,"+1,"_IBTRIEN_",",.01)=RTYPE
"RTN","IBTRH5D",64,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5D",65,0)
 ;
"RTN","IBTRH5D",66,0)
 ; Next display all of the current Additional Patient Information
"RTN","IBTRH5D",67,0)
 S H1="#   Report Type                   Delivery Method        Attachment Control #"
"RTN","IBTRH5D",68,0)
 S H2="--  ----------------------------  ---------------------  ----------------------"
"RTN","IBTRH5D",69,0)
 S L1="The following Additional Patient Information is currently on file."
"RTN","IBTRH5D",70,0)
 S L2="Enter the # of an entry to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5D",71,0)
 S XX=$$SELENT(.AIDATA,H1,H2,L1,L2,MAX,"",SECT)
"RTN","IBTRH5D",72,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5D",73,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5D",74,0)
 . S XX=$P(AIDATA(XX),U)
"RTN","IBTRH5D",75,0)
 . D DELAPI(IBTRIEN,XX)
"RTN","IBTRH5D",76,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5D",77,0)
 I XX<0 Q XX
"RTN","IBTRH5D",78,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5D",79,0)
 . S RTYPE=$$RTYPE(IBTRIEN)                     ; Get the .01 value
"RTN","IBTRH5D",80,0)
 . I RTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5D",81,0)
 . S IBNEW=1
"RTN","IBTRH5D",82,0)
 . S XX=RTYPE
"RTN","IBTRH5D",83,0)
 . S FDA(356.2211,"+1,"_IBTRIEN_",",.01)=RTYPE
"RTN","IBTRH5D",84,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5D",85,0)
 Q $P(AIDATA(XX),"^",1)
"RTN","IBTRH5D",86,0)
 ;
"RTN","IBTRH5D",87,0)
DELAPI(IBTRIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5D",88,0)
 ; Additional Patient Information Line and didn't enter any data for it. Also
"RTN","IBTRH5D",89,0)
 ; checks to see if user selected to delete a specified line. If so, the 
"RTN","IBTRH5D",90,0)
 ; Additional Patient Information line with no data (or selected) is deleted
"RTN","IBTRH5D",91,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",92,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5D",93,0)
 ;                    defaults to ""
"RTN","IBTRH5D",94,0)
 ; Output:  Empty or selected Additional Patient Information line is deleted (Potentially)
"RTN","IBTRH5D",95,0)
 N APIIEN,DA,DIK,X,XX,Y
"RTN","IBTRH5D",96,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5D",97,0)
 I IEN'="" D  Q
"RTN","IBTRH5D",98,0)
 . S DA(1)=IBTRIEN,DA=IEN
"RTN","IBTRH5D",99,0)
 . S DIK="^IBT(356.22,DA(1),11,"
"RTN","IBTRH5D",100,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5D",101,0)
 ;
"RTN","IBTRH5D",102,0)
 S APIIEN=+$P($G(^IBT(356.22,IBTRIEN,11,0)),"^",3)  ; Last Multiple IEN
"RTN","IBTRH5D",103,0)
 Q:'APIIEN
"RTN","IBTRH5D",104,0)
 S XX=$G(^IBT(356.22,IBTRIEN,11,APIIEN,0))
"RTN","IBTRH5D",105,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5D",106,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5D",107,0)
 S DA(1)=IBTRIEN,DA=APIIEN
"RTN","IBTRH5D",108,0)
 S DIK="^IBT(356.22,DA(1),11,"
"RTN","IBTRH5D",109,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5D",110,0)
 Q
"RTN","IBTRH5D",111,0)
 ;
"RTN","IBTRH5D",112,0)
RTYPE(IBTRIEN) ; Prompts the user to enter the .01 (Report Type) field of the
"RTN","IBTRH5D",113,0)
 ; Additional Patient Information multiple
"RTN","IBTRH5D",114,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",115,0)
 ; Returns: IEN of the selected Report Type or "" of not entered
"RTN","IBTRH5D",116,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH5D",117,0)
 S DA(1)=IBTRIEN
"RTN","IBTRH5D",118,0)
 S DIR(0)="356.2211,.01",DIR("A")="  Report Type"
"RTN","IBTRH5D",119,0)
 D ^DIR
"RTN","IBTRH5D",120,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5D",121,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5D",122,0)
 ;
"RTN","IBTRH5D",123,0)
SELPD(IBTRIEN) ;EP
"RTN","IBTRH5D",124,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5D",125,0)
 ; Provides the user with a quick view of currently entered Provider Data
"RTN","IBTRH5D",126,0)
 ; multiples and allows them to select one to edit or enter a new one.
"RTN","IBTRH5D",127,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",128,0)
 ;          IBTRBRF - 1 if this display is being used from the brief template
"RTN","IBTRH5D",129,0)
 ;                    0 or undefined otherwise
"RTN","IBTRH5D",130,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5D",131,0)
 ;          "" if creating a new multiple, -2 to exit template
"RTN","IBTRH5D",132,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5D",133,0)
 N CNT,ENTNUM,FDA,IEN,H1,H2,L1,L2,MAX,PDDATA,PTYPE,RETIEN,SECT,X,XX,Y,YY
"RTN","IBTRH5D",134,0)
 S IBNEW=0,SECT="Provider Data Information"
"RTN","IBTRH5D",135,0)
 ;
"RTN","IBTRH5D",136,0)
 ; First check for an empty Provider Data Line to delete
"RTN","IBTRH5D",137,0)
 D DELPD(IBTRIEN)
"RTN","IBTRH5D",138,0)
 ;
"RTN","IBTRH5D",139,0)
 ; Next create an array of all current Provider Data Information lines
"RTN","IBTRH5D",140,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,13,0)),"^",4)          ; # of Multiples
"RTN","IBTRH5D",141,0)
 S MAX=$S(XX<14:"",1:"Provider Data Lines")
"RTN","IBTRH5D",142,0)
 S IEN=0,CNT=0
"RTN","IBTRH5D",143,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5D",144,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,13,IEN))
"RTN","IBTRH5D",145,0)
 . Q:+IEN=0
"RTN","IBTRH5D",146,0)
 . S CNT=CNT+1
"RTN","IBTRH5D",147,0)
 . S XX=$$LJ^XLFSTR(CNT,4)                              ; Selection #
"RTN","IBTRH5D",148,0)
 . S YY=$$GET1^DIQ(356.2213,IEN_","_DA_",",.01)         ; Prov Type Desc
"RTN","IBTRH5D",149,0)
 . S YY=$E(YY,1,30)_"  "
"RTN","IBTRH5D",150,0)
 . S XX=XX_$$LJ^XLFSTR(YY,32)
"RTN","IBTRH5D",151,0)
 . ;
"RTN","IBTRH5D",152,0)
 . ; IBTRBRF is defined in IB CREATE 278 REQUEST SHORT input template
"RTN","IBTRH5D",153,0)
 . I $G(IBTRBRF)'=1 D
"RTN","IBTRH5D",154,0)
 . . S YY=$$GET1^DIQ(356.2213,IEN_","_DA_",",.02)       ; Person/Non-Person
"RTN","IBTRH5D",155,0)
 . . S XX=XX_$$LJ^XLFSTR(YY,12)
"RTN","IBTRH5D",156,0)
 . S YY=$$GET1^DIQ(356.2213,IEN_","_DA_",",.03)
"RTN","IBTRH5D",157,0)
 . S XX=XX_$$LJ^XLFSTR(YY,"28T")
"RTN","IBTRH5D",158,0)
 . S PDDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5D",159,0)
 ; 
"RTN","IBTRH5D",160,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5D",161,0)
 .I $G(IBTRBRF)'=1 D
"RTN","IBTRH5D",162,0)
 ..W !!,"No Provider Data Information is currently on file.",!
"RTN","IBTRH5D",163,0)
 ..S XX=$$ASKNEW("Add Provider Data Information")
"RTN","IBTRH5D",164,0)
 ..Q
"RTN","IBTRH5D",165,0)
 .I $G(IBTRBRF)=1 S XX=0
"RTN","IBTRH5D",166,0)
 .Q:XX<0
"RTN","IBTRH5D",167,0)
 .S PTYPE=$$PTYPE(IBTRIEN)                     ; Get the .01 value
"RTN","IBTRH5D",168,0)
 .I PTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5D",169,0)
 .S IBNEW=1,XX=PTYPE
"RTN","IBTRH5D",170,0)
 .S FDA(356.2213,"+1,"_IBTRIEN_",",.01)=PTYPE
"RTN","IBTRH5D",171,0)
 .D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5D",172,0)
 .Q
"RTN","IBTRH5D",173,0)
 ;
"RTN","IBTRH5D",174,0)
 ; Next display all of the current Provider Data lines
"RTN","IBTRH5D",175,0)
 S H1="#   Provider Type                 "
"RTN","IBTRH5D",176,0)
 I $G(IBTRBRF)'=1 S H1=H1_"  Per/Non"
"RTN","IBTRH5D",177,0)
 S H1=H1_"     Provider"
"RTN","IBTRH5D",178,0)
 S H2="--  ------------------------------"
"RTN","IBTRH5D",179,0)
 I $G(IBTRBRF)'=1 S H2=H2_"  ----------"
"RTN","IBTRH5D",180,0)
 S H2=H2_"  ------------------------------"
"RTN","IBTRH5D",181,0)
 S L1="The following Provider Data Information is currently on file."
"RTN","IBTRH5D",182,0)
 S L2="Enter the # of an entry to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5D",183,0)
 S XX=$$SELENT(.PDDATA,H1,H2,L1,L2,MAX,"",SECT)
"RTN","IBTRH5D",184,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5D",185,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5D",186,0)
 . S XX=$P(PDDATA(XX),U)
"RTN","IBTRH5D",187,0)
 . D DELPD(IBTRIEN,XX)
"RTN","IBTRH5D",188,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5D",189,0)
 I XX<0 Q XX
"RTN","IBTRH5D",190,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5D",191,0)
 . S PTYPE=$$PTYPE(IBTRIEN)                     ; Get the .01 value
"RTN","IBTRH5D",192,0)
 . I PTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5D",193,0)
 . S XX=PTYPE
"RTN","IBTRH5D",194,0)
 . S IBNEW=1
"RTN","IBTRH5D",195,0)
 . S FDA(356.2213,"+1,"_IBTRIEN_",",.01)=PTYPE
"RTN","IBTRH5D",196,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5D",197,0)
 Q $P(PDDATA(XX),"^",1)
"RTN","IBTRH5D",198,0)
 ;
"RTN","IBTRH5D",199,0)
DELPD(IBTRIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5D",200,0)
 ; Provider Data Line and didn't enter any data for it or selected a line to 
"RTN","IBTRH5D",201,0)
 ; be deleted.  If so, the empty or selected Provider Data line is deleted
"RTN","IBTRH5D",202,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",203,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5D",204,0)
 ;                    defaults to ""
"RTN","IBTRH5D",205,0)
 ; Output:  Empty or selected Provider Data line is deleted (Potentially)
"RTN","IBTRH5D",206,0)
 N PDIEN,DA,DIK,X,XX,Y
"RTN","IBTRH5D",207,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5D",208,0)
 I IEN'="" D  Q
"RTN","IBTRH5D",209,0)
 . S DA(1)=IBTRIEN,DA=IEN
"RTN","IBTRH5D",210,0)
 . S DIK="^IBT(356.22,DA(1),13,"
"RTN","IBTRH5D",211,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5D",212,0)
 ;
"RTN","IBTRH5D",213,0)
 S PDIEN=+$P($G(^IBT(356.22,IBTRIEN,13,0)),"^",3)   ; Last Multiple IEN
"RTN","IBTRH5D",214,0)
 Q:'PDIEN
"RTN","IBTRH5D",215,0)
 S XX=$G(^IBT(356.22,IBTRIEN,13,PDIEN,0))
"RTN","IBTRH5D",216,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5D",217,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5D",218,0)
 S DA(1)=IBTRIEN,DA=PDIEN
"RTN","IBTRH5D",219,0)
 S DIK="^IBT(356.22,DA(1),13,"
"RTN","IBTRH5D",220,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5D",221,0)
 Q
"RTN","IBTRH5D",222,0)
 ;
"RTN","IBTRH5D",223,0)
PTYPE(IBTRIEN) ; Prompts the user to enter the .01 (Provider Type) field of the
"RTN","IBTRH5D",224,0)
 ; Provider Data multiple
"RTN","IBTRH5D",225,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",226,0)
 ; Returns: IEN of the selected Provider Type or "" of not entered
"RTN","IBTRH5D",227,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH5D",228,0)
 S DA(1)=IBTRIEN
"RTN","IBTRH5D",229,0)
 S DIR(0)="356.2213,.01",DIR("A")="  Provider Type"
"RTN","IBTRH5D",230,0)
 D ^DIR
"RTN","IBTRH5D",231,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5D",232,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5D",233,0)
 ;
"RTN","IBTRH5D",234,0)
SELDX(IBTRIEN) ;EP
"RTN","IBTRH5D",235,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5D",236,0)
 ; Provides the user with a quick view of currently entered Diagnoses and
"RTN","IBTRH5D",237,0)
 ; allows them to select one to edit or enter a new diagnosis.
"RTN","IBTRH5D",238,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",239,0)
 ;          IBTRBRF - 1 if this display is being used from the brief template
"RTN","IBTRH5D",240,0)
 ;                    0 or undefined other otherwise
"RTN","IBTRH5D",241,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5D",242,0)
 ;          "" if creating a new multiple, -2 to exit template
"RTN","IBTRH5D",243,0)
 ;          -3 if a if a line was deleted
"RTN","IBTRH5D",244,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5D",245,0)
 N CNT,DXDATA,DXTYPE,ENTNUM,FDA,IEN,H1,H2,L1,L2,MAX,RETIEN,SECT,X,XX,Y,YY
"RTN","IBTRH5D",246,0)
 S IBNEW=0,SECT="Diagnosis Information"
"RTN","IBTRH5D",247,0)
 ;
"RTN","IBTRH5D",248,0)
 ; First check for an empty Diagnosis Line to delete
"RTN","IBTRH5D",249,0)
 D DELDX(IBTRIEN)
"RTN","IBTRH5D",250,0)
 ;
"RTN","IBTRH5D",251,0)
 ; Next create an array of all current Diagnoses lines
"RTN","IBTRH5D",252,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,3,0)),"^",4)   ; Total # of Dx Lines
"RTN","IBTRH5D",253,0)
 S MAX=$S(XX<12:"",1:"Diagnosis Lines")
"RTN","IBTRH5D",254,0)
 S IEN=0,CNT=0
"RTN","IBTRH5D",255,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5D",256,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,3,IEN))
"RTN","IBTRH5D",257,0)
 . Q:+IEN=0
"RTN","IBTRH5D",258,0)
 . S CNT=CNT+1
"RTN","IBTRH5D",259,0)
 . S XX=$$LJ^XLFSTR(CNT,4)                              ; Selection #
"RTN","IBTRH5D",260,0)
 . S YY=$$GET1^DIQ(356.223,IEN_","_DA_",",.01,"I")      ; Diagnosis Type
"RTN","IBTRH5D",261,0)
 . S YY=$$GET1^DIQ(356.006,YY_",",.01)
"RTN","IBTRH5D",262,0)
 . S XX=XX_$$LJ^XLFSTR(YY,7)
"RTN","IBTRH5D",263,0)
 . S YY=$$GET1^DIQ(356.223,IEN_","_DA_",",.02)          ; Diagnosis
"RTN","IBTRH5D",264,0)
 . S XX=XX_$$LJ^XLFSTR(YY,11)
"RTN","IBTRH5D",265,0)
 . I $G(IBTRBRF)'=1 D
"RTN","IBTRH5D",266,0)
 . . S YY=$$GET1^DIQ(356.223,IEN_","_DA_",",.03)        ; Date Known
"RTN","IBTRH5D",267,0)
 . . S XX=XX_$$LJ^XLFSTR(YY,14)
"RTN","IBTRH5D",268,0)
 . S DXDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5D",269,0)
 ;
"RTN","IBTRH5D",270,0)
 ; Creating 1st Diagnosis Line?
"RTN","IBTRH5D",271,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5D",272,0)
 .I $G(IBTRBRF)'=1 D
"RTN","IBTRH5D",273,0)
 ..W !!,"No Diagnosis Information is currently on file.",!
"RTN","IBTRH5D",274,0)
 ..S XX=$$ASKNEW("Add a new Diagnosis")
"RTN","IBTRH5D",275,0)
 ..Q
"RTN","IBTRH5D",276,0)
 .I $G(IBTRBRF)=1 S XX=0
"RTN","IBTRH5D",277,0)
 .Q:XX<0
"RTN","IBTRH5D",278,0)
 .S DXTYPE=$$DXTYPE(IBTRIEN)                   ; Get the .01 value
"RTN","IBTRH5D",279,0)
 .I DXTYPE="" S XX=-1 Q                        ; None entered
"RTN","IBTRH5D",280,0)
 .S IBNEW=1,XX=DXTYPE
"RTN","IBTRH5D",281,0)
 .S FDA(356.223,"+1,"_IBTRIEN_",",.01)=DXTYPE
"RTN","IBTRH5D",282,0)
 .D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5D",283,0)
 .Q
"RTN","IBTRH5D",284,0)
 ;
"RTN","IBTRH5D",285,0)
 ; Next display all of the current Diagnoses and let the user select one
"RTN","IBTRH5D",286,0)
 S H1="#   Type   Diagnosis"
"RTN","IBTRH5D",287,0)
 I $G(IBTRBRF)'=1 S H1=H1_"  Date DX Known"
"RTN","IBTRH5D",288,0)
 S H2="--  -----  ---------"
"RTN","IBTRH5D",289,0)
 I $G(IBTRBRF)'=1 S H2=H2_"  -------------"
"RTN","IBTRH5D",290,0)
 S L1="The following Diagnoses are currently on file."
"RTN","IBTRH5D",291,0)
 S L2="Enter the # of a Diagnosis to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5D",292,0)
 S XX=$$SELENT(.DXDATA,H1,H2,L1,L2,MAX,"",SECT)
"RTN","IBTRH5D",293,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5D",294,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5D",295,0)
 . S XX=$P(DXDATA(XX),U)
"RTN","IBTRH5D",296,0)
 . D DELDX(IBTRIEN,XX)
"RTN","IBTRH5D",297,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5D",298,0)
 I XX<0 Q XX
"RTN","IBTRH5D",299,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5D",300,0)
 . S DXTYPE=$$DXTYPE(IBTRIEN)                   ; Get the .01 value
"RTN","IBTRH5D",301,0)
 . I DXTYPE="" S XX=-1 Q                        ; None entered
"RTN","IBTRH5D",302,0)
 . S XX=DXTYPE
"RTN","IBTRH5D",303,0)
 . S IBNEW=1
"RTN","IBTRH5D",304,0)
 . S FDA(356.223,"+1,"_IBTRIEN_",",.01)=DXTYPE
"RTN","IBTRH5D",305,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5D",306,0)
 Q $P(DXDATA(XX),"^",1)
"RTN","IBTRH5D",307,0)
 ;
"RTN","IBTRH5D",308,0)
DXTYPE(IBTRIEN) ; Prompts the user to enter the .01 (Diagnosis Type) field of
"RTN","IBTRH5D",309,0)
 ; the diagnosis multiple
"RTN","IBTRH5D",310,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",311,0)
 ; Returns: IEN of the selected Diagnosis Type or "" of not entered
"RTN","IBTRH5D",312,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH5D",313,0)
 S DA(1)=IBTRIEN,DA=$P($G(^IBT(356.22,IBTRIEN,3,0)),"^",3)+1
"RTN","IBTRH5D",314,0)
 S DIR(0)="356.223,.01",DIR("A")="  Diagnosis Qualifier"
"RTN","IBTRH5D",315,0)
 D ^DIR
"RTN","IBTRH5D",316,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5D",317,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5D",318,0)
 ;
"RTN","IBTRH5D",319,0)
DELDX(IBTRIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5D",320,0)
 ; Diagnosis Line and didn't enter any data for it or selected a multiple to
"RTN","IBTRH5D",321,0)
 ; to be deleted.  If so, the empty or selected multiple is deleted
"RTN","IBTRH5D",322,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5D",323,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5D",324,0)
 ;                    defaults to ""
"RTN","IBTRH5D",325,0)
 ; Output:  Empty or selected Diagnosis line is deleted (Potentially)
"RTN","IBTRH5D",326,0)
 N DA,DIK,DXIEN,X,XX,Y
"RTN","IBTRH5D",327,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5D",328,0)
 I IEN'="" D  Q
"RTN","IBTRH5D",329,0)
 . S DA(1)=IBTRIEN,DA=IEN
"RTN","IBTRH5D",330,0)
 . S DIK="^IBT(356.22,DA(1),3,"
"RTN","IBTRH5D",331,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5D",332,0)
 ;
"RTN","IBTRH5D",333,0)
 S DXIEN=+$P($G(^IBT(356.22,IBTRIEN,3,0)),"^",3)    ; Last Multiple IEN
"RTN","IBTRH5D",334,0)
 Q:'DXIEN
"RTN","IBTRH5D",335,0)
 S XX=$G(^IBT(356.22,IBTRIEN,3,DXIEN,0))
"RTN","IBTRH5D",336,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5D",337,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5D",338,0)
 S DA(1)=IBTRIEN,DA=DXIEN
"RTN","IBTRH5D",339,0)
 S DIK="^IBT(356.22,DA(1),3,"
"RTN","IBTRH5D",340,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5D",341,0)
 Q
"RTN","IBTRH5D",342,0)
 ;
"RTN","IBTRH5D",343,0)
ASKNEW(PROMPT,DEFAULT) ;EP
"RTN","IBTRH5D",344,0)
 ; Ask if user wants to create a new entry
"RTN","IBTRH5D",345,0)
 ; Input:   PROMPT      - Yes/No question to ask the user
"RTN","IBTRH5D",346,0)
 ;          DEFALT      - Default Answer
"RTN","IBTRH5D",347,0)
 ;                        Optional, if not passed, set to 'YES'
"RTN","IBTRH5D",348,0)
 ; Returns: 0 - User wants to add a new Entry
"RTN","IBTRH5D",349,0)
 ;         -1 - User doesn't want to add a new entry
"RTN","IBTRH5D",350,0)
 ;         -2 - User wants to exit template
"RTN","IBTRH5D",351,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","IBTRH5D",352,0)
 S:'$D(DEFAULT) DEFAULT="YES"
"RTN","IBTRH5D",353,0)
 S XX=$P(PROMPT,"Add ",2)
"RTN","IBTRH5D",354,0)
 S DIR("?")="Select NO to skip this section. Select YES to enter "_XX_"."
"RTN","IBTRH5D",355,0)
 S DIR(0)="Y",DIR("A")=PROMPT,DIR("B")=DEFAULT
"RTN","IBTRH5D",356,0)
A1 ;
"RTN","IBTRH5D",357,0)
 D ^DIR
"RTN","IBTRH5D",358,0)
 I Y?1"^"1.E D JUMPERR^IBTRH5H G A1
"RTN","IBTRH5D",359,0)
 Q:$D(DUOUT) -2                                 ; User Pressed ^
"RTN","IBTRH5D",360,0)
 Q:$D(DTOUT) -1                                 ; User timed out
"RTN","IBTRH5D",361,0)
 I Y=0 Q -1
"RTN","IBTRH5D",362,0)
 Q 1
"RTN","IBTRH5D",363,0)
 ;
"RTN","IBTRH5D",364,0)
SELENT(ARRAY,H1,H2,L1,L2,MAX,INDENT,SECT) ; Select an entry to add/edit from a list
"RTN","IBTRH5D",365,0)
 ; Input:   ARRAY()     - Array of multiple lines to be displayed
"RTN","IBTRH5D",366,0)
 ;          H1          - 1st line of Header Information
"RTN","IBTRH5D",367,0)
 ;          H2          - 2nd line of Header Information
"RTN","IBTRH5D",368,0)
 ;          L1          - 1st line of DIR display
"RTN","IBTRH5D",369,0)
 ;          L2          - Selection line text
"RTN","IBTRH5D",370,0)
 ;          MAX         - Multiple Description
"RTN","IBTRH5D",371,0)
 ;                        If passed, entering a new line is not allowed
"RTN","IBTRH5D",372,0)
 ;                        Optional, defaults to "" if not passed
"RTN","IBTRH5D",373,0)
 ;          INDENT      - 1 to indent 2 spaces
"RTN","IBTRH5D",374,0)
 ;                        Optional, defaults to 0
"RTN","IBTRH5D",375,0)
 ;          SECT        - Section Header
"RTN","IBTRH5D",376,0)
 ; Returns: # - User wants to edit Entry #
"RTN","IBTRH5D",377,0)
 ;          0 - User wants to Add a new Entry
"RTN","IBTRH5D",378,0)
 ;         -1 - User wants to skip this section
"RTN","IBTRH5D",379,0)
 ;         -2 - User wants to exit template
"RTN","IBTRH5D",380,0)
 N DEL,DIR,DIROUT,DIRUT,DOK,DTOUT,DUOUT,IX,LN,X,XX,Y,YY
"RTN","IBTRH5D",381,0)
 S:'$D(MAX) MAX=""
"RTN","IBTRH5D",382,0)
 S:'$D(INDENT) INDENT=0
"RTN","IBTRH5D",383,0)
 S:'$D(SECT) SECT=""
"RTN","IBTRH5D",384,0)
 S DIR(0)="FO",LN=0
"RTN","IBTRH5D",385,0)
 S LN=LN+1,DIR("A",LN)=L1
"RTN","IBTRH5D",386,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","IBTRH5D",387,0)
 S LN=LN+1,DIR("A",LN)=H1
"RTN","IBTRH5D",388,0)
 S LN=LN+1,DIR("A",LN)=H2
"RTN","IBTRH5D",389,0)
 S IX=""
"RTN","IBTRH5D",390,0)
 F  D  Q:IX=""
"RTN","IBTRH5D",391,0)
 . S IX=$O(ARRAY(IX))
"RTN","IBTRH5D",392,0)
 . Q:IX=""
"RTN","IBTRH5D",393,0)
 . S LN=LN+1,DIR("A",LN)=$P(ARRAY(IX),"^",2)
"RTN","IBTRH5D",394,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","IBTRH5D",395,0)
 S LN=LN+1,DIR("A",LN)=L2
"RTN","IBTRH5D",396,0)
 S DIR("A")=$S(INDENT:"  ",1:"")_"Selection #"
"RTN","IBTRH5D",397,0)
 W !!
"RTN","IBTRH5D",398,0)
SELE1 ;
"RTN","IBTRH5D",399,0)
 S XX="Select NO to skip this section. Select YES to enter "_SECT_"."
"RTN","IBTRH5D",400,0)
 S XX=XX_"  To delete an entry from the list, select D followed by the "
"RTN","IBTRH5D",401,0)
 S XX=XX_"number of the entry you wish to delete."
"RTN","IBTRH5D",402,0)
 S DIR("?")=XX
"RTN","IBTRH5D",403,0)
 D ^DIR
"RTN","IBTRH5D",404,0)
 S DOK=1
"RTN","IBTRH5D",405,0)
 S Y=$$UP^XLFSTR(Y)                             ; Convert to Upper
"RTN","IBTRH5D",406,0)
 I Y?1"D".N D  Q:DOK Y
"RTN","IBTRH5D",407,0)
 . S XX=$P(Y,"D",2)
"RTN","IBTRH5D",408,0)
 . I XX>0,XX'>CNT,XX?.N Q                       ; Selected Entry to delete
"RTN","IBTRH5D",409,0)
 . S DOK=0
"RTN","IBTRH5D",410,0)
 . D SELERR(INDENT)
"RTN","IBTRH5D",411,0)
 G:'DOK SELE1
"RTN","IBTRH5D",412,0)
 I Y?1"^"1.E D JUMPERR^IBTRH5H G SELE1
"RTN","IBTRH5D",413,0)
 I $D(DUOUT) Q -2                               ; User pressed ^
"RTN","IBTRH5D",414,0)
 I $D(DTOUT) Q -1                               ; User timed out
"RTN","IBTRH5D",415,0)
 I Y="" Q -1                                    ; User pressed return
"RTN","IBTRH5D",416,0)
 S XX=$$UP^XLFSTR(Y)
"RTN","IBTRH5D",417,0)
 S YY=$S((XX="NEW")!(XX="N")!(XX="NE"):1,1:0)   ; User wants to enter a new one
"RTN","IBTRH5D",418,0)
 I MAX'="",YY D  G SELE1
"RTN","IBTRH5D",419,0)
 . W *7,!!,$S(INDENT:"  ",1:"")
"RTN","IBTRH5D",420,0)
 . W "The maximum Number of "_MAX_" have already been entered.",!
"RTN","IBTRH5D",421,0)
 Q:YY 0                                         ; Creating a new one
"RTN","IBTRH5D",422,0)
 I XX>0,XX'>CNT,XX?.N Q XX                      ; Selected Entry
"RTN","IBTRH5D",423,0)
 D SELERR(INDENT)
"RTN","IBTRH5D",424,0)
 G SELE1
"RTN","IBTRH5D",425,0)
 ;
"RTN","IBTRH5D",426,0)
SELERR(INDENT)  ; Multiple Selection error
"RTN","IBTRH5D",427,0)
 ; Input:   INDENT  - 1 to indent error message display
"RTN","IBTRH5D",428,0)
 W !!,*7,$S(INDENT:"  ",1:"")
"RTN","IBTRH5D",429,0)
 W "Enter a number from 1-",CNT,".  Enter NEW to enter a new entry."
"RTN","IBTRH5D",430,0)
 W !,$S(INDENT:"  ",1:"")
"RTN","IBTRH5D",431,0)
 W "To delete an entry from the list, select D followed by the "
"RTN","IBTRH5D",432,0)
 W !,$S(INDENT:"  ",1:"")
"RTN","IBTRH5D",433,0)
 W "number of the entry you wish to remove. Press return to skip selection."
"RTN","IBTRH5D",434,0)
 W !!
"RTN","IBTRH5D",435,0)
 Q
"RTN","IBTRH5E")
0^29^B137475866^n/a
"RTN","IBTRH5E",1,0)
IBTRH5E ;ALB/FA - HCSR Create 278 Request ;12-AUG-2014
"RTN","IBTRH5E",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5E",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5E",4,0)
 ;;
"RTN","IBTRH5E",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5E",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5E",7,0)
 ;
"RTN","IBTRH5E",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5E",9,0)
 ; SELSL        - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5E",10,0)
 ;                Service Lines and either pick one to edit, enter a new one or
"RTN","IBTRH5E",11,0)
 ;                skip.
"RTN","IBTRH5E",12,0)
 ; SELOU        - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5E",13,0)
 ;                Other UMO Information and either pick one to edit, enter a 
"RTN","IBTRH5E",14,0)
 ;                new one or skip.
"RTN","IBTRH5E",15,0)
 ; SELSPD       - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5E",16,0)
 ;                Service Line Provider Data Lines and either pick one to edit,
"RTN","IBTRH5E",17,0)
 ;                enter a new one or skip.
"RTN","IBTRH5E",18,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5E",19,0)
 ;
"RTN","IBTRH5E",20,0)
SELOU(IBTRIEN) ;EP
"RTN","IBTRH5E",21,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5E",22,0)
 ; Provides the user with a quick view of currently entered Other UMO
"RTN","IBTRH5E",23,0)
 ; Information multiples and allows them to select one to edit or enter a new 
"RTN","IBTRH5E",24,0)
 ; one.
"RTN","IBTRH5E",25,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",26,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5E",27,0)
 ;          "" if creating a new multiple, -2 to exit template
"RTN","IBTRH5E",28,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5E",29,0)
 N CNT,ENTNUM,FDA,IEN,H1,H2,L1,L2,OUDATA,OUTYPE,MAX,RETIEN,SECT,X,XX,Y,YY
"RTN","IBTRH5E",30,0)
 S IBNEW=0,SECT="Other UMO Information"
"RTN","IBTRH5E",31,0)
 ;
"RTN","IBTRH5E",32,0)
 ; First check for an empty Other UMO Information Lines to delete
"RTN","IBTRH5E",33,0)
 D DELOU(IBTRIEN)
"RTN","IBTRH5E",34,0)
 ;
"RTN","IBTRH5E",35,0)
 ; Next create an array of all current Other UMO Information lines
"RTN","IBTRH5E",36,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,15,0)),"^",4)  ; Total # of multiples
"RTN","IBTRH5E",37,0)
 S MAX=$S(XX<3:"",1:"Other UMO Information Lines")
"RTN","IBTRH5E",38,0)
 S IEN=0,CNT=0
"RTN","IBTRH5E",39,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5E",40,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,15,IEN))
"RTN","IBTRH5E",41,0)
 . Q:+IEN=0
"RTN","IBTRH5E",42,0)
 . S CNT=CNT+1
"RTN","IBTRH5E",43,0)
 . S XX=$$LJ^XLFSTR(CNT,4)                              ; Selection #
"RTN","IBTRH5E",44,0)
 . S YY=$$GET1^DIQ(356.2215,IEN_","_DA_",",.01)         ; UMO Type
"RTN","IBTRH5E",45,0)
 . S YY=$E(YY,1,30)_"  "
"RTN","IBTRH5E",46,0)
 . S XX=XX_$$LJ^XLFSTR(YY,32)
"RTN","IBTRH5E",47,0)
 . S YY=$$GET1^DIQ(356.2215,IEN_","_DA_",",.02)         ; UMO Name
"RTN","IBTRH5E",48,0)
 . S XX=XX_$$LJ^XLFSTR(YY,"44T")
"RTN","IBTRH5E",49,0)
 . S OUDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5E",50,0)
 ;
"RTN","IBTRH5E",51,0)
 ; Creating 1st Other UMO Information Line?
"RTN","IBTRH5E",52,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5E",53,0)
 . W !!,"No Other UMO Information is currently on file.",!
"RTN","IBTRH5E",54,0)
 . S XX=$$ASKNEW^IBTRH5D("Add Other UMO Information","NO")
"RTN","IBTRH5E",55,0)
 . Q:XX<0
"RTN","IBTRH5E",56,0)
 . S OUTYPE=$$OUTYPE(IBTRIEN)                   ; Get the .01 value
"RTN","IBTRH5E",57,0)
 . I OUTYPE="" S XX=-1 Q                        ; None entered
"RTN","IBTRH5E",58,0)
 . S IBNEW=1,XX=OUTYPE
"RTN","IBTRH5E",59,0)
 . S FDA(356.2215,"+1,"_IBTRIEN_",",.01)=OUTYPE
"RTN","IBTRH5E",60,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5E",61,0)
 ;
"RTN","IBTRH5E",62,0)
 ; Next display all of the current Other UMO Information
"RTN","IBTRH5E",63,0)
 S H1="#   Type                            UMO Name"
"RTN","IBTRH5E",64,0)
 S H2="--  ------------------------------  ------------------------------"
"RTN","IBTRH5E",65,0)
 S L1="The following Other UMO Information is currently on file."
"RTN","IBTRH5E",66,0)
 S L2="Enter the # of an entry to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5E",67,0)
 S XX=$$SELENT^IBTRH5D(.OUDATA,H1,H2,L1,L2,MAX,"",SECT)
"RTN","IBTRH5E",68,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5E",69,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5E",70,0)
 . S XX=$P(OUDATA(XX),U)
"RTN","IBTRH5E",71,0)
 . D DELOU(IBTRIEN,XX)
"RTN","IBTRH5E",72,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5E",73,0)
 ;
"RTN","IBTRH5E",74,0)
 I XX<0 Q XX
"RTN","IBTRH5E",75,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5E",76,0)
 . S OUTYPE=$$OUTYPE(IBTRIEN)                   ; Get the .01 value
"RTN","IBTRH5E",77,0)
 . I OUTYPE="" S XX=-1 Q                        ; None entered
"RTN","IBTRH5E",78,0)
 . S IBNEW=1
"RTN","IBTRH5E",79,0)
 . S XX=OUTYPE
"RTN","IBTRH5E",80,0)
 . S FDA(356.2215,"+1,"_IBTRIEN_",",.01)=OUTYPE
"RTN","IBTRH5E",81,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5E",82,0)
 Q $P(OUDATA(XX),"^",1)
"RTN","IBTRH5E",83,0)
 ;
"RTN","IBTRH5E",84,0)
OUTYPE(IBTRIEN) ; Prompts the user to enter the .01 (Entity Identifier) field
"RTN","IBTRH5E",85,0)
 ; of the Other UMO Information Multiple
"RTN","IBTRH5E",86,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",87,0)
 ; Returns: Selected Entity Identifier or "" of not entered
"RTN","IBTRH5E",88,0)
 N ARR,DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,EIS,ERR,IX,X,XX,YY
"RTN","IBTRH5E",89,0)
 S EIS="",IX=0
"RTN","IBTRH5E",90,0)
 F  D  Q:'+IX
"RTN","IBTRH5E",91,0)
 . S IX=$O(^IBT(356.22,IBTRIEN,15,IX))
"RTN","IBTRH5E",92,0)
 . Q:+IX=0
"RTN","IBTRH5E",93,0)
 . S XX=$P(^IBT(356.22,IBTRIEN,15,IX,0),"^",1)
"RTN","IBTRH5E",94,0)
 . S EIS=$S(EIS="":XX,1:EIS_"^"_XX)
"RTN","IBTRH5E",95,0)
 S DA(1)=IBTRIEN
"RTN","IBTRH5E",96,0)
 S:EIS'="" EIS="^"_EIS_"^"
"RTN","IBTRH5E",97,0)
 D FIELD^DID(356.2215,.01,,"POINTER","ARR","ERR")
"RTN","IBTRH5E",98,0)
 S DIR("A")="  Other UMO Qualifier: "
"RTN","IBTRH5E",99,0)
 S XX=""
"RTN","IBTRH5E",100,0)
 F IX=1:1:$L(ARR("POINTER"),";") D
"RTN","IBTRH5E",101,0)
 . S YY=$P(ARR("POINTER"),";",IX)
"RTN","IBTRH5E",102,0)
 . Q:EIS[("^"_$P(YY,":",1)_"^")
"RTN","IBTRH5E",103,0)
 . S XX=$S(XX="":YY,1:XX_";"_YY)
"RTN","IBTRH5E",104,0)
 S DIR(0)="SOA^"_XX
"RTN","IBTRH5E",105,0)
 D ^DIR
"RTN","IBTRH5E",106,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5E",107,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5E",108,0)
 ;
"RTN","IBTRH5E",109,0)
DELOU(IBTRIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5E",110,0)
 ; Other UMO Information Line and didn't enter any data for it OR selected a
"RTN","IBTRH5E",111,0)
 ; line to be deleted. If so, the Other Information Line with no data (or'
"RTN","IBTRH5E",112,0)
 ; selected) is deleted
"RTN","IBTRH5E",113,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",114,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5E",115,0)
 ;                    defaults to ""
"RTN","IBTRH5E",116,0)
 ; Output:  Empty or selected Other UMO Information line is deleted (Potentially)
"RTN","IBTRH5E",117,0)
 N DA,DIK,OUIEN,X,XX,Y
"RTN","IBTRH5E",118,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5E",119,0)
 I IEN'="" D  Q
"RTN","IBTRH5E",120,0)
 . S DA(1)=IBTRIEN,DA=IEN
"RTN","IBTRH5E",121,0)
 . S DIK="^IBT(356.22,DA(1),15,"
"RTN","IBTRH5E",122,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5E",123,0)
 ;
"RTN","IBTRH5E",124,0)
 S OUIEN=+$P($G(^IBT(356.22,IBTRIEN,15,0)),"^",3)   ; Last Multiple IEN
"RTN","IBTRH5E",125,0)
 Q:'OUIEN
"RTN","IBTRH5E",126,0)
 S XX=$G(^IBT(356.22,IBTRIEN,15,OUIEN,0))
"RTN","IBTRH5E",127,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5E",128,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5E",129,0)
 S DA(1)=IBTRIEN,DA=OUIEN
"RTN","IBTRH5E",130,0)
 S DIK="^IBT(356.22,DA(1),15,"
"RTN","IBTRH5E",131,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5E",132,0)
 Q
"RTN","IBTRH5E",133,0)
 ;
"RTN","IBTRH5E",134,0)
SELSL(IBTRIEN) ;EP
"RTN","IBTRH5E",135,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5E",136,0)
 ; Provides the user with a quick view of currently entered Service Lines and
"RTN","IBTRH5E",137,0)
 ; allows them to select one to edit or enter a new Service Line.
"RTN","IBTRH5E",138,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",139,0)
 ;          IBTRF   - 1 - Being called from the brief form
"RTN","IBTRH5E",140,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5E",141,0)
 ;          "" if creating a new multiple
"RTN","IBTRH5E",142,0)
 ;          -1 if skipping altogether
"RTN","IBTRH5E",143,0)
 ;          -2 to exit template
"RTN","IBTRH5E",144,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5E",145,0)
 N CNT,ENTNUM,FDA,H1,H2,IEN,L1,L2,NIEN,RETIEN,SECT,SLDATA,X,XX,Y
"RTN","IBTRH5E",146,0)
 S IBNEW=0,SECT="Service Line Detail"
"RTN","IBTRH5E",147,0)
 ;
"RTN","IBTRH5E",148,0)
 ; First check for an empty Service Line to delete
"RTN","IBTRH5E",149,0)
 D DELSL(IBTRIEN)
"RTN","IBTRH5E",150,0)
 ;
"RTN","IBTRH5E",151,0)
 ; Next create an array of all current Service Lines
"RTN","IBTRH5E",152,0)
 S NIEN=+$P($G(^IBT(356.22,IBTRIEN,16,0)),"^",3)+1    ; Next Multiple IEN
"RTN","IBTRH5E",153,0)
 S IEN=0,CNT=0
"RTN","IBTRH5E",154,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5E",155,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,16,IEN))
"RTN","IBTRH5E",156,0)
 . Q:+IEN=0
"RTN","IBTRH5E",157,0)
 . S CNT=CNT+1
"RTN","IBTRH5E",158,0)
 . S XX=$$GETSELLN(CNT,IBTRIEN,IEN,.H1,.H2)           ; Format Service line for display
"RTN","IBTRH5E",159,0)
 . S SLDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5E",160,0)
 ;
"RTN","IBTRH5E",161,0)
 ; Creating 1st Service Line? 
"RTN","IBTRH5E",162,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5E",163,0)
 .I $G(IBTRBRF)'=1 D
"RTN","IBTRH5E",164,0)
 ..W !!,"No Service Line Detail is currently on file.",!
"RTN","IBTRH5E",165,0)
 ..S XX=$$ASKNEW^IBTRH5D("Add a new Service Line")
"RTN","IBTRH5E",166,0)
 ..Q
"RTN","IBTRH5E",167,0)
 .I $G(IBTRBRF)=1 S XX=0
"RTN","IBTRH5E",168,0)
 .Q:XX<0
"RTN","IBTRH5E",169,0)
 .S IBNEW=1,XX=NIEN
"RTN","IBTRH5E",170,0)
 .S FDA(356.2216,"+1,"_IBTRIEN_",",.01)=NIEN
"RTN","IBTRH5E",171,0)
 .D UPDATE^DIE("","FDA","RETIEN")                  ; File the new line
"RTN","IBTRH5E",172,0)
 .Q
"RTN","IBTRH5E",173,0)
 ;
"RTN","IBTRH5E",174,0)
 ; Next display all of the current Service Lines and let the user select one
"RTN","IBTRH5E",175,0)
 S L1="The following Service Lines are currently on file."
"RTN","IBTRH5E",176,0)
 S L2="Enter the # of a line to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5E",177,0)
 S XX=$$SELENT^IBTRH5D(.SLDATA,H1,H2,L1,L2,"",SECT)
"RTN","IBTRH5E",178,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5E",179,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5E",180,0)
 . S XX=$P(SLDATA(XX),"^",1)
"RTN","IBTRH5E",181,0)
 . D DELSL(IBTRIEN,XX)
"RTN","IBTRH5E",182,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5E",183,0)
 I XX<0 Q XX
"RTN","IBTRH5E",184,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5E",185,0)
 . S XX=NIEN
"RTN","IBTRH5E",186,0)
 . S IBNEW=1
"RTN","IBTRH5E",187,0)
 . S FDA(356.2216,"+1,"_IBTRIEN_",",.01)=NIEN
"RTN","IBTRH5E",188,0)
 . D UPDATE^DIE("","FDA","RETIEN")                  ; File the new line
"RTN","IBTRH5E",189,0)
 Q $P(SLDATA(XX),"^",1)
"RTN","IBTRH5E",190,0)
 ;
"RTN","IBTRH5E",191,0)
GETSELLN(CNT,IBTRIEN,IEN,H1,H2) ; Gets a line of information to display a 
"RTN","IBTRH5E",192,0)
 ; Service Line
"RTN","IBTRH5E",193,0)
 ; Input:   CNT         - Current line Count
"RTN","IBTRH5E",194,0)
 ;          IBTRIEN     - IEN of the entry
"RTN","IBTRH5E",195,0)
 ;          IEN         - IEN of the Service Line
"RTN","IBTRH5E",196,0)
 ;          IBTRF       - 1 - Being called from the brief form
"RTN","IBTRH5E",197,0)
 ; Output:  H1          - 1st Header display line
"RTN","IBTRH5E",198,0)
 ;          H2          - 2nd Header display line
"RTN","IBTRH5E",199,0)
 ; Returns: Service line display
"RTN","IBTRH5E",200,0)
 N FILE,N4,XX,YY,ZZ
"RTN","IBTRH5E",201,0)
 ; IBTRBRF is defined in IB CREATE 278 REQUEST SHORT input template
"RTN","IBTRH5E",202,0)
 I $G(IBTRBRF)'=1 D
"RTN","IBTRH5E",203,0)
 . S H1="#   Type    Proc Code             Revenue  Code         Units/# of Procedures"
"RTN","IBTRH5E",204,0)
 . S H2="--  ------  --------------------  -------------------   ---------------------"
"RTN","IBTRH5E",205,0)
 I $G(IBTRBRF)=1 D
"RTN","IBTRH5E",206,0)
 . S H1="#   Proc Code             "
"RTN","IBTRH5E",207,0)
 . S H2="--  --------------------  "
"RTN","IBTRH5E",208,0)
 S XX=$$LJ^XLFSTR(CNT,4)                                    ; Selection #
"RTN","IBTRH5E",209,0)
 I $G(IBTRBRF)'=1 D
"RTN","IBTRH5E",210,0)
 . S YY=$$GET1^DIQ(356.2216,IEN_","_IBTRIEN_",",1.12,"I")
"RTN","IBTRH5E",211,0)
 . S YY=$S(YY="P":"Prof",YY="I":"Inst",YY="D":"Dental",1:"")
"RTN","IBTRH5E",212,0)
 . S XX=XX_$$LJ^XLFSTR(YY,6)_"  "
"RTN","IBTRH5E",213,0)
 S ZZ=$$GET1^DIQ(356.2216,IEN_","_IBTRIEN_",",1.01,"I")     ; Procedure Coding Method
"RTN","IBTRH5E",214,0)
 S N4=$S(ZZ="N4":1,1:0)
"RTN","IBTRH5E",215,0)
 S:'N4 YY=$$GET1^DIQ(356.2216,IEN_","_IBTRIEN_",",1.02)     ; Procedure Code
"RTN","IBTRH5E",216,0)
 S:N4 YY=$$GET1^DIQ(356.2216,IEN_","_IBTRIEN_",",12.01)     ; N4 Procedure Code
"RTN","IBTRH5E",217,0)
 S XX=XX_$$LJ^XLFSTR(YY,"20T")_"  "
"RTN","IBTRH5E",218,0)
 I $G(IBTRBRF)'=1 D
"RTN","IBTRH5E",219,0)
 . S YY=$$GET1^DIQ(356.2216,IEN_","_IBTRIEN_",",2.06,"I")    ; Revenue Code IEN
"RTN","IBTRH5E",220,0)
 . S YY=$$GET1^DIQ(399.2,YY_",",.01,"I")                     ; Revenue Code
"RTN","IBTRH5E",221,0)
 . S XX=XX_$$LJ^XLFSTR(YY,"20T")_"  "
"RTN","IBTRH5E",222,0)
 . S YY=$$GET1^DIQ(356.2216,IEN_","_IBTRIEN_",",1.1)         ; Units
"RTN","IBTRH5E",223,0)
 . S ZZ=$$GET1^DIQ(356.2216,IEN_","_IBTRIEN_",",1.11)        ; Unit Count
"RTN","IBTRH5E",224,0)
 . S YY=ZZ_" "_YY
"RTN","IBTRH5E",225,0)
 . S XX=XX_$$LJ^XLFSTR(YY,"21")
"RTN","IBTRH5E",226,0)
 Q XX
"RTN","IBTRH5E",227,0)
 ;
"RTN","IBTRH5E",228,0)
DELSL(IBTRIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5E",229,0)
 ; Service Line and didn't enter any data for it OR selected a service line
"RTN","IBTRH5E",230,0)
 ; to be deleted.  If so, the Service Line with no data (or selected) is deleted
"RTN","IBTRH5E",231,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",232,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5E",233,0)
 ;                    defaults to ""
"RTN","IBTRH5E",234,0)
 ; Output:  Empty or selected Service line is deleted (Potentially)
"RTN","IBTRH5E",235,0)
 N DA,DATA,DIK,LIEN,X,XX,Y,YY
"RTN","IBTRH5E",236,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5E",237,0)
 I IEN'="" D  Q
"RTN","IBTRH5E",238,0)
 . S DA(1)=IBTRIEN,DA=IEN
"RTN","IBTRH5E",239,0)
 . S DIK="^IBT(356.22,DA(1),16,"
"RTN","IBTRH5E",240,0)
 . D ^DIK                                         ; Delete the multiple
"RTN","IBTRH5E",241,0)
 ;
"RTN","IBTRH5E",242,0)
 S LIEN=+$P($G(^IBT(356.22,IBTRIEN,16,0)),U,3)    ; Last Multiple IEN
"RTN","IBTRH5E",243,0)
 Q:'LIEN
"RTN","IBTRH5E",244,0)
 S XX=$G(^IBT(356.22,IBTRIEN,16,LIEN,0))
"RTN","IBTRH5E",245,0)
 S ($P(XX,U),$P(XX,U,11))=""                      ; Remove fields .01 and .11
"RTN","IBTRH5E",246,0)
 Q:$TR(XX,U,"")'=""                               ; 0 node data exists
"RTN","IBTRH5E",247,0)
 S XX=$G(^IBT(356.22,IBTRIEN,16,LIEN,1))
"RTN","IBTRH5E",248,0)
 S $P(XX,U,12)=""                                 ; Remove Service Line Type
"RTN","IBTRH5E",249,0)
 S $P(XX,U)=""                                    ; Remove Procedure Code Type
"RTN","IBTRH5E",250,0)
 Q:$TR(XX,U,"")'=""                               ; 1 node data exists
"RTN","IBTRH5E",251,0)
 S DATA=0
"RTN","IBTRH5E",252,0)
 F YY=2:1:9 D  Q:DATA
"RTN","IBTRH5E",253,0)
 . S XX=$G(^IBT(356.22,IBTRIEN,16,LIEN,YY))
"RTN","IBTRH5E",254,0)
 . S:$TR(XX,U,"")'="" DATA=1                      ; 2-9 node data exists
"RTN","IBTRH5E",255,0)
 Q:DATA
"RTN","IBTRH5E",256,0)
 S DA(1)=IBTRIEN,DA=LIEN
"RTN","IBTRH5E",257,0)
 S DIK="^IBT(356.22,DA(1),16,"
"RTN","IBTRH5E",258,0)
 D ^DIK                                             ; Delete the line
"RTN","IBTRH5E",259,0)
 Q
"RTN","IBTRH5E",260,0)
 ;
"RTN","IBTRH5E",261,0)
SELSPD(IBTRIEN,SIEN) ;EP
"RTN","IBTRH5E",262,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5E",263,0)
 ; Provides the user with a quick view of currently entered Service Line 
"RTN","IBTRH5E",264,0)
 ; Provider Data multiples and allows them to select one to edit or enter a 
"RTN","IBTRH5E",265,0)
 ; new one.
"RTN","IBTRH5E",266,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",267,0)
 ;          SIEN   - Service Line Multiple IEN
"RTN","IBTRH5E",268,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5E",269,0)
 ;          "" if creating a new multiple, -2 to exit multiple
"RTN","IBTRH5E",270,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5E",271,0)
 N CNT,ENTNUM,FDA,H1,H2,IEN,IENS,L1,L2,MAX,PDDATA,PTYPE,RETIEN,SECT,X,XX,Y,YY
"RTN","IBTRH5E",272,0)
 S IBNEW=0,SECT="Service Provider Data Information"
"RTN","IBTRH5E",273,0)
 ;
"RTN","IBTRH5E",274,0)
 ; First check for an empty Provider Data Line to delete
"RTN","IBTRH5E",275,0)
 D DELSPD(IBTRIEN,SIEN)
"RTN","IBTRH5E",276,0)
 ;
"RTN","IBTRH5E",277,0)
 ; Next create an array of all current Service Line Provider Data Information lines
"RTN","IBTRH5E",278,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,16,SIEN,8,0)),"^",4)  ; Total # of multiples
"RTN","IBTRH5E",279,0)
 S MAX=$S(XX<10:"",1:"Provider Data Lines")
"RTN","IBTRH5E",280,0)
 S IEN=0,CNT=0
"RTN","IBTRH5E",281,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5E",282,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,16,SIEN,8,IEN))
"RTN","IBTRH5E",283,0)
 . Q:+IEN=0
"RTN","IBTRH5E",284,0)
 . S CNT=CNT+1
"RTN","IBTRH5E",285,0)
 . S XX="  "_$$LJ^XLFSTR(CNT,4)                 ; Selection #
"RTN","IBTRH5E",286,0)
 . S IENS=IEN_","_SIEN_","_IBTRIEN_","
"RTN","IBTRH5E",287,0)
 . S YY=$$GET1^DIQ(356.22168,IENS,.01)          ; Prov Type Desc
"RTN","IBTRH5E",288,0)
 . S XX=XX_$$LJ^XLFSTR(YY,"32T")
"RTN","IBTRH5E",289,0)
 . S YY=$$GET1^DIQ(356.22168,IENS,.02)          ; Person/Non-Person
"RTN","IBTRH5E",290,0)
 . S XX=XX_$$LJ^XLFSTR(YY,12)
"RTN","IBTRH5E",291,0)
 . S YY=$$GET1^DIQ(356.22168,IENS,.03)          ; Provider Name
"RTN","IBTRH5E",292,0)
 . S XX=XX_$$LJ^XLFSTR(YY,"30T")
"RTN","IBTRH5E",293,0)
 . S PDDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5E",294,0)
 ;
"RTN","IBTRH5E",295,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5E",296,0)
 . W !!,"  No Service Provider Data is currently on file.",!
"RTN","IBTRH5E",297,0)
 . S XX=$$ASKNEW^IBTRH5D("  Add Service Provider Data Information","NO")
"RTN","IBTRH5E",298,0)
 . Q:XX<0
"RTN","IBTRH5E",299,0)
 . S PTYPE=$$PTYPE(IBTRIEN,SIEN)                ; Get the .01 value
"RTN","IBTRH5E",300,0)
 . I PTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5E",301,0)
 . S IBNEW=1,XX=PTYPE
"RTN","IBTRH5E",302,0)
 . S FDA(356.22168,"+1,"_SIEN_","_IBTRIEN_",",.01)=PTYPE
"RTN","IBTRH5E",303,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5E",304,0)
 ;
"RTN","IBTRH5E",305,0)
 ; Next display all of the current Service Line Provider Data lines
"RTN","IBTRH5E",306,0)
 S H1="  #   Provider Type                   Per/Non     Provider"
"RTN","IBTRH5E",307,0)
 S H2="  --  ------------------------------  ----------  ------------------------------"
"RTN","IBTRH5E",308,0)
 S L1="  The following Provider Data Information is currently on file."
"RTN","IBTRH5E",309,0)
 S L2="  Enter the # of an entry to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5E",310,0)
 S XX=$$SELENT^IBTRH5D(.PDDATA,H1,H2,L1,L2,MAX,1,SECT)
"RTN","IBTRH5E",311,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5E",312,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5E",313,0)
 . S XX=$P(PDDATA(XX),"^",1)
"RTN","IBTRH5E",314,0)
 . D DELSPD(IBTRIEN,SIEN,XX)
"RTN","IBTRH5E",315,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5E",316,0)
 I XX<0 Q XX
"RTN","IBTRH5E",317,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5E",318,0)
 . S PTYPE=$$PTYPE(IBTRIEN,SIEN)                ; Get the .01 value
"RTN","IBTRH5E",319,0)
 . I PTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5E",320,0)
 . S XX=PTYPE
"RTN","IBTRH5E",321,0)
 . S IBNEW=1
"RTN","IBTRH5E",322,0)
 . ;
"RTN","IBTRH5E",323,0)
 . ; NOTE: the code below had "+1," which doesn't work, don't change back
"RTN","IBTRH5E",324,0)
 . S FDA(356.22168,"+2,"_SIEN_","_IBTRIEN_",",.01)=PTYPE
"RTN","IBTRH5E",325,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5E",326,0)
 Q $P(PDDATA(XX),"^",1)
"RTN","IBTRH5E",327,0)
 ;
"RTN","IBTRH5E",328,0)
DELSPD(IBTRIEN,SIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new
"RTN","IBTRH5E",329,0)
 ; Service Provider Data Line and didn't enter any data for it or selected a line
"RTN","IBTRH5E",330,0)
 ; to delete .  If so, the Service Provider Data line with no data (or selectd) is deleted
"RTN","IBTRH5E",331,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",332,0)
 ;          SIEN    - IEN of the Service Line
"RTN","IBTRH5E",333,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5E",334,0)
 ;                    defaults to ""
"RTN","IBTRH5E",335,0)
 ; Output:  Empty OR selected Service Provider Data Line is deleted (Potentially)
"RTN","IBTRH5E",336,0)
 N PDIEN,DA,DIK,X,XX,Y
"RTN","IBTRH5E",337,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5E",338,0)
 I IEN'="" D  Q
"RTN","IBTRH5E",339,0)
 . S DA(2)=IBTRIEN,DA(1)=SIEN,DA=IEN
"RTN","IBTRH5E",340,0)
 . S DIK="^IBT(356.22,DA(2),16,DA(1),8,"
"RTN","IBTRH5E",341,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5E",342,0)
 S PDIEN=+$P($G(^IBT(356.22,IBTRIEN,16,SIEN,8,0)),"^",3)   ; Last Multiple IEN
"RTN","IBTRH5E",343,0)
 Q:'PDIEN
"RTN","IBTRH5E",344,0)
 S XX=$G(^IBT(356.22,IBTRIEN,16,SIEN,8,PDIEN,0))
"RTN","IBTRH5E",345,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5E",346,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5E",347,0)
 S DA(2)=IBTRIEN,DA(1)=SIEN,DA=PDIEN
"RTN","IBTRH5E",348,0)
 S DIK="^IBT(356.22,DA(2),16,DA(1),8,"
"RTN","IBTRH5E",349,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5E",350,0)
 Q
"RTN","IBTRH5E",351,0)
 ;
"RTN","IBTRH5E",352,0)
PTYPE(IBTRIEN,SIEN) ; Prompts the user to enter the .01 (Provider Type) field
"RTN","IBTRH5E",353,0)
 ; of the Provider Data multiple
"RTN","IBTRH5E",354,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5E",355,0)
 ;          SIEN    - IEN of the Service Line
"RTN","IBTRH5E",356,0)
 ; Returns: IEN of the selected Provider Type or "" of not entered
"RTN","IBTRH5E",357,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH5E",358,0)
 S DA(1)=IBTRIEN
"RTN","IBTRH5E",359,0)
 S DIR(0)="356.22168,.01",DIR("A")="    Provider Type"
"RTN","IBTRH5E",360,0)
 D ^DIR
"RTN","IBTRH5E",361,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5E",362,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5E",363,0)
 ;
"RTN","IBTRH5F")
0^30^B134425924^n/a
"RTN","IBTRH5F",1,0)
IBTRH5F ;ALB/FA - HCSR Create 278 Request ;15-SEP-2014
"RTN","IBTRH5F",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5F",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5F",4,0)
 ;;
"RTN","IBTRH5F",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5F",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5F",7,0)
 ;
"RTN","IBTRH5F",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5F",9,0)
 ; SELSAPI      - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5F",10,0)
 ;                Service Line Additional Information Lines and either pick one
"RTN","IBTRH5F",11,0)
 ;                to edit, enter a new one or skip.
"RTN","IBTRH5F",12,0)
 ; SELPT        - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5F",13,0)
 ;                Patient Event Transport Lines and either pick one to edit, 
"RTN","IBTRH5F",14,0)
 ;                enter a new one or skip.
"RTN","IBTRH5F",15,0)
 ; SELSTI       - Allows the user to see a quick view of the currently entered
"RTN","IBTRH5F",16,0)
 ;                Service Line Tooth Information Lines and either pick one to 
"RTN","IBTRH5F",17,0)
 ;                edit, enter a new one or skip.
"RTN","IBTRH5F",18,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5F",19,0)
 ;
"RTN","IBTRH5F",20,0)
SELPT(IBTRIEN) ;EP
"RTN","IBTRH5F",21,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5F",22,0)
 ; Provides the user with a quick view of currently entered Patient Transport
"RTN","IBTRH5F",23,0)
 ; multiples and allows them to select one to edit or enter a new one.
"RTN","IBTRH5F",24,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",25,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5F",26,0)
 ;          "" if creating a new multiple, -2 to exit template
"RTN","IBTRH5F",27,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5F",28,0)
 N CNT,ENTNUM,FDA,IEN,H1,H2,L1,L2,MAX,PT,PTDATA,PTTYPE,RETIEN,SECT,X,XX,Y,YY
"RTN","IBTRH5F",29,0)
 S IBNEW=0,SECT="Patient Transport Information"
"RTN","IBTRH5F",30,0)
 ;
"RTN","IBTRH5F",31,0)
 ; First check for an empty Patient Transport Information Lines to delete
"RTN","IBTRH5F",32,0)
 D DELPT(IBTRIEN)
"RTN","IBTRH5F",33,0)
 ;
"RTN","IBTRH5F",34,0)
 ; Next create an array of all current Patient Transport Information lines
"RTN","IBTRH5F",35,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,14,0)),"^",4)      ; Total # of lines
"RTN","IBTRH5F",36,0)
 S MAX=$S(XX<5:"",1:"Patient Transport Information Lines")
"RTN","IBTRH5F",37,0)
 S SECT="Patient Transport Information"
"RTN","IBTRH5F",38,0)
 S IEN=0,CNT=0
"RTN","IBTRH5F",39,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5F",40,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,14,IEN))
"RTN","IBTRH5F",41,0)
 . Q:+IEN=0
"RTN","IBTRH5F",42,0)
 . S CNT=CNT+1
"RTN","IBTRH5F",43,0)
 . S PT=$G(^IBT(356.22,IBTRIEN,14,IEN,0))
"RTN","IBTRH5F",44,0)
 . S XX=$$LJ^XLFSTR(CNT,4)                              ; Selection #
"RTN","IBTRH5F",45,0)
 . S YY=$$GET1^DIQ(356.2214,IEN_","_DA_",",.01)
"RTN","IBTRH5F",46,0)
 . S YY=$E(YY,1,20)_"  "
"RTN","IBTRH5F",47,0)
 . S XX=XX_$$LJ^XLFSTR(YY,22)
"RTN","IBTRH5F",48,0)
 . S YY=$$GET1^DIQ(356.2214,IEN_","_DA_",",.02)
"RTN","IBTRH5F",49,0)
 . S XX=XX_$$LJ^XLFSTR(YY,"54T")
"RTN","IBTRH5F",50,0)
 . S PTDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5F",51,0)
 ;
"RTN","IBTRH5F",52,0)
 S H1="#   Type                  Location Name"
"RTN","IBTRH5F",53,0)
 S H2="--  --------------------  ------------------------------------------------------"
"RTN","IBTRH5F",54,0)
 S L1="The following Patient Transport Information is currently on file."
"RTN","IBTRH5F",55,0)
 S L2="Enter the # of an entry to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5F",56,0)
 ;
"RTN","IBTRH5F",57,0)
 ; Creating 1st Patient Transport Information Line
"RTN","IBTRH5F",58,0)
 I CNT=0 D  Q $O(RETIEN(0))
"RTN","IBTRH5F",59,0)
 . W !!,"Two Patient Transport Information lines are required.",!
"RTN","IBTRH5F",60,0)
 . S PTTYPE=$$PTTYPE(IBTRIEN,1)                 ; Get the .01 value
"RTN","IBTRH5F",61,0)
 . S FDA(356.2214,"+1,"_IBTRIEN_",",.01)=PTTYPE
"RTN","IBTRH5F",62,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5F",63,0)
 ;
"RTN","IBTRH5F",64,0)
 ; Creating 2nd  Patient Transport Information Line
"RTN","IBTRH5F",65,0)
 I CNT=1 D  Q $O(RETIEN(0))
"RTN","IBTRH5F",66,0)
 . W !!,"Two Patient Transport Information lines are required.",!!
"RTN","IBTRH5F",67,0)
 . W !,L1,!,H1,!,H2,!,$P(PTDATA(1),"^",2),!!
"RTN","IBTRH5F",68,0)
 . S PTTYPE=$$PTTYPE(IBTRIEN,1)                 ; Get the .01 value
"RTN","IBTRH5F",69,0)
 . S FDA(356.2214,"+2,"_IBTRIEN_",",.01)=PTTYPE
"RTN","IBTRH5F",70,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5F",71,0)
 ;
"RTN","IBTRH5F",72,0)
 ; Next display all of the current Patient Transport Lines
"RTN","IBTRH5F",73,0)
 S XX=$$SELENT^IBTRH5D(.PTDATA,H1,H2,L1,L2,MAX,"",SECT)
"RTN","IBTRH5F",74,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5F",75,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5F",76,0)
 . S XX=$P(PTDATA(XX),"^",1)
"RTN","IBTRH5F",77,0)
 . D DELPT(IBTRIEN,XX)
"RTN","IBTRH5F",78,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5F",79,0)
 I XX<0 Q XX
"RTN","IBTRH5F",80,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5F",81,0)
 . S PTTYPE=$$PTTYPE(IBTRIEN)                   ; Get the .01 value
"RTN","IBTRH5F",82,0)
 . I PTTYPE="" S XX=-1 Q                        ; None entered
"RTN","IBTRH5F",83,0)
 . S IBNEW=1
"RTN","IBTRH5F",84,0)
 . S XX=PTTYPE
"RTN","IBTRH5F",85,0)
 . S FDA(356.2214,"+1,"_IBTRIEN_",",.01)=PTTYPE
"RTN","IBTRH5F",86,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5F",87,0)
 Q $P(PTDATA(XX),"^",1)
"RTN","IBTRH5F",88,0)
 ;
"RTN","IBTRH5F",89,0)
PTTYPE(IBTRIEN,REQ) ; Prompts the user to enter the .01 (Entity Identifier) field
"RTN","IBTRH5F",90,0)
 ; of the Patient Transport Information Multiple
"RTN","IBTRH5F",91,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",92,0)
 ;          REQ     - 1 if field is required
"RTN","IBTRH5F",93,0)
 ;                    Optional, defaults to 0
"RTN","IBTRH5F",94,0)
 ; Returns: Selected Entity Identifier or "" of not entered
"RTN","IBTRH5F",95,0)
 N ARR,DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,EIS,ERR,IX,X,XX,YY
"RTN","IBTRH5F",96,0)
PTTYPE1 ; Looping tag
"RTN","IBTRH5F",97,0)
 S:'$D(REQ) REQ=0
"RTN","IBTRH5F",98,0)
 S EIS="",IX=0
"RTN","IBTRH5F",99,0)
 F  D  Q:'+IX
"RTN","IBTRH5F",100,0)
 . S IX=$O(^IBT(356.22,IBTRIEN,14,IX))
"RTN","IBTRH5F",101,0)
 . Q:+IX=0
"RTN","IBTRH5F",102,0)
 . S XX=$P(^IBT(356.22,IBTRIEN,14,IX,0),"^",1)
"RTN","IBTRH5F",103,0)
 . S EIS=$S(EIS="":XX,1:EIS_"^"_XX)
"RTN","IBTRH5F",104,0)
 S DA(1)=IBTRIEN
"RTN","IBTRH5F",105,0)
 S:EIS'="" EIS="^"_EIS_"^"
"RTN","IBTRH5F",106,0)
 D FIELD^DID(356.2214,.01,,"POINTER","ARR","ERR")
"RTN","IBTRH5F",107,0)
 S DIR("A")="  Ambulance Location Qualifier: "
"RTN","IBTRH5F",108,0)
 S XX=""
"RTN","IBTRH5F",109,0)
 F IX=1:1:$L(ARR("POINTER"),";") D
"RTN","IBTRH5F",110,0)
 . S YY=$P(ARR("POINTER"),";",IX)
"RTN","IBTRH5F",111,0)
 . Q:EIS[("^"_$P(YY,":",1)_"^")
"RTN","IBTRH5F",112,0)
 . S XX=$S(XX="":YY,1:XX_";"_YY)
"RTN","IBTRH5F",113,0)
 S DIR(0)=$S(REQ:"SA^",1:"SOA^")_XX
"RTN","IBTRH5F",114,0)
 D ^DIR
"RTN","IBTRH5F",115,0)
 I REQ,$D(DIRUT) D  G PTTYPE1
"RTN","IBTRH5F",116,0)
 . W !,*7," Entity Identifier is required.",!!
"RTN","IBTRH5F",117,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5F",118,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5F",119,0)
 ;
"RTN","IBTRH5F",120,0)
DELPT(IBTRIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5F",121,0)
 ; Patient Transport Information Line and didn't enter any data for it OR 
"RTN","IBTRH5F",122,0)
 ; selected a line to delete. If so, the Patient Transport Information Line with
"RTN","IBTRH5F",123,0)
 ; no data (or selected) is deleted
"RTN","IBTRH5F",124,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",125,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5F",126,0)
 ;                    defaults to ""
"RTN","IBTRH5F",127,0)
 ; Output:  Empty (or selected) Patient Transport Information line is deleted (Potentially)
"RTN","IBTRH5F",128,0)
 N DA,DIK,PTIEN,X,XX,Y
"RTN","IBTRH5F",129,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5F",130,0)
 I IEN'="" D  Q
"RTN","IBTRH5F",131,0)
 . S DA(1)=IBTRIEN,DA=IEN
"RTN","IBTRH5F",132,0)
 . S DIK="^IBT(356.22,DA(1),14,"
"RTN","IBTRH5F",133,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5F",134,0)
 ;
"RTN","IBTRH5F",135,0)
 S PTIEN=+$P($G(^IBT(356.22,IBTRIEN,14,0)),"^",3)   ; Last Multiple IEN
"RTN","IBTRH5F",136,0)
 Q:'PTIEN
"RTN","IBTRH5F",137,0)
 S XX=$G(^IBT(356.22,IBTRIEN,14,PTIEN,0))
"RTN","IBTRH5F",138,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5F",139,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5F",140,0)
 S DA(1)=IBTRIEN,DA=PTIEN
"RTN","IBTRH5F",141,0)
 S DIK="^IBT(356.22,DA(1),14,"
"RTN","IBTRH5F",142,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5F",143,0)
 Q
"RTN","IBTRH5F",144,0)
 ;
"RTN","IBTRH5F",145,0)
SELSAPI(IBTRIEN,SIEN) ;EP
"RTN","IBTRH5F",146,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5F",147,0)
 ; Provides the user with a quick view of currently entered Service Line 
"RTN","IBTRH5F",148,0)
 ; Additional Patient Information multiples and allows them to select one to 
"RTN","IBTRH5F",149,0)
 ; edit or enter a new  one.
"RTN","IBTRH5F",150,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",151,0)
 ;          SIEN    - IEN of the service line multiple being edited
"RTN","IBTRH5F",152,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5F",153,0)
 ;          "" if creating a new multiple, -2 to exit multiple
"RTN","IBTRH5F",154,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5F",155,0)
 N AIDATA,CNT,ENTNUM,FDA,IEN,IENS,H1,H2,L1,L2,MAX,RETIEN,RTYPE,SECT,X,XX,Y,YY
"RTN","IBTRH5F",156,0)
 S IBNEW=0,SECT="Service Additional Patient Information"
"RTN","IBTRH5F",157,0)
 ;
"RTN","IBTRH5F",158,0)
 ; First check for an empty Additional Patient Information Line to delete
"RTN","IBTRH5F",159,0)
 D DELSAPI(IBTRIEN,SIEN)
"RTN","IBTRH5F",160,0)
 ;
"RTN","IBTRH5F",161,0)
 ; Next create an array of all current Additional Patient 
"RTN","IBTRH5F",162,0)
 ; Information lines to display
"RTN","IBTRH5F",163,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,16,SIEN,6,0)),"^",4)  ; Total # of API Lines
"RTN","IBTRH5F",164,0)
 S MAX=$S(XX<10:"",1:"Additional Patient Information Lines")
"RTN","IBTRH5F",165,0)
 S IEN=0,CNT=0
"RTN","IBTRH5F",166,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5F",167,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,16,SIEN,6,IEN))
"RTN","IBTRH5F",168,0)
 . Q:+IEN=0
"RTN","IBTRH5F",169,0)
 . S CNT=CNT+1
"RTN","IBTRH5F",170,0)
 . S XX="  "_$$LJ^XLFSTR(CNT,4)                 ; Selection #
"RTN","IBTRH5F",171,0)
 . S IENS=IEN_","_SIEN_","_IBTRIEN_","
"RTN","IBTRH5F",172,0)
 . S YY=$$GET1^DIQ(356.22166,IENS,.01)          ; Report Type Desc
"RTN","IBTRH5F",173,0)
 . S YY=$E(YY,1,26)_"  "
"RTN","IBTRH5F",174,0)
 . S XX=XX_$$LJ^XLFSTR(YY,28)
"RTN","IBTRH5F",175,0)
 . S YY=$$GET1^DIQ(356.22166,IENS,.02)          ; Delivery Method
"RTN","IBTRH5F",176,0)
 . S YY=$E(YY,1,20)_"  "
"RTN","IBTRH5F",177,0)
 . S XX=XX_$$LJ^XLFSTR(YY,23)
"RTN","IBTRH5F",178,0)
 . S YY=$$GET1^DIQ(356.22166,IENS,.03)          ; Attachment Ctrl #
"RTN","IBTRH5F",179,0)
 . S YY=$E(YY,1,22)
"RTN","IBTRH5F",180,0)
 . S XX=XX_$$LJ^XLFSTR(YY,22)
"RTN","IBTRH5F",181,0)
 . S AIDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5F",182,0)
 ;
"RTN","IBTRH5F",183,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5F",184,0)
 . W !!,"  No Additional Patient Information is currently on file.",!
"RTN","IBTRH5F",185,0)
 . S XX=$$ASKNEW^IBTRH5D("  Add Additional Patient Information","NO")
"RTN","IBTRH5F",186,0)
 . Q:XX<0
"RTN","IBTRH5F",187,0)
 . S RTYPE=$$RTYPE(IBTRIEN,SIEN)                ; Get the .01 value
"RTN","IBTRH5F",188,0)
 . I RTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5F",189,0)
 . S IBNEW=1,XX=RTYPE
"RTN","IBTRH5F",190,0)
 . S FDA(356.22166,"+1,"_SIEN_","_IBTRIEN_",",.01)=RTYPE
"RTN","IBTRH5F",191,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5F",192,0)
 ;
"RTN","IBTRH5F",193,0)
 ; Next display all of the current Additional Patient Information
"RTN","IBTRH5F",194,0)
 S H1="  #   Report Type                 Delivery Method        Attachment Control #"
"RTN","IBTRH5F",195,0)
 S H2="  --  --------------------------  ---------------------  ----------------------"
"RTN","IBTRH5F",196,0)
 S L1="  The following Additional Patient Information is currently on file."
"RTN","IBTRH5F",197,0)
 S L2="  Enter the # of an entry to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5F",198,0)
 S XX=$$SELENT^IBTRH5D(.AIDATA,H1,H2,L1,L2,MAX,1,SECT)
"RTN","IBTRH5F",199,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5F",200,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5F",201,0)
 . S XX=$P(AIDATA(XX),"^",1)
"RTN","IBTRH5F",202,0)
 . D DELSAPI(IBTRIEN,SIEN,XX)
"RTN","IBTRH5F",203,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5F",204,0)
 I XX<0 Q XX
"RTN","IBTRH5F",205,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5F",206,0)
 . S RTYPE=$$RTYPE(IBTRIEN,SIEN)                ; Get the .01 value
"RTN","IBTRH5F",207,0)
 . I RTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5F",208,0)
 . S XX=RTYPE
"RTN","IBTRH5F",209,0)
 . S IBNEW=1
"RTN","IBTRH5F",210,0)
 . S FDA(356.22166,"+1,"_SIEN_","_IBTRIEN_",",.01)=RTYPE
"RTN","IBTRH5F",211,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5F",212,0)
 Q $P(AIDATA(XX),"^",1)
"RTN","IBTRH5F",213,0)
 ;
"RTN","IBTRH5F",214,0)
DELSAPI(IBTRIEN,SIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5F",215,0)
 ; Additional Patient Information Line and didn't enter any data for it or selected
"RTN","IBTRH5F",216,0)
 ; a line to be deleted.  If so, the empty or selected Additional Patient Information
"RTN","IBTRH5F",217,0)
 ; line is deleted
"RTN","IBTRH5F",218,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",219,0)
 ;          SIEN    - IEN of the Service Line being edited
"RTN","IBTRH5F",220,0)
 ;          IEN     - Optional, IEN of the multiple to be deleted if passed
"RTN","IBTRH5F",221,0)
 ;                    defaults to ""
"RTN","IBTRH5F",222,0)
 ; Output:  Empty or selected Additional Patient Information line is deleted (Potentially)
"RTN","IBTRH5F",223,0)
 N APIIEN,DA,DIK,X,XX,Y
"RTN","IBTRH5F",224,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5F",225,0)
 I IEN'="" D  Q
"RTN","IBTRH5F",226,0)
 . S DA(2)=IBTRIEN,DA(1)=SIEN,DA=IEN
"RTN","IBTRH5F",227,0)
 . S DIK="^IBT(356.22,DA(2),16,DA(1),6,"
"RTN","IBTRH5F",228,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5F",229,0)
 ;
"RTN","IBTRH5F",230,0)
 S APIIEN=+$P($G(^IBT(356.22,IBTRIEN,16,SIEN,11,0)),"^",3)  ; Last Multiple IEN
"RTN","IBTRH5F",231,0)
 Q:'APIIEN
"RTN","IBTRH5F",232,0)
 S XX=$G(^IBT(356.22,IBTRIEN,16,SIEN,6,APIIEN,0))
"RTN","IBTRH5F",233,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5F",234,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5F",235,0)
 S DA(2)=IBTRIEN,DA(1)=SIEN,DA=APIIEN
"RTN","IBTRH5F",236,0)
 S DIK="^IBT(356.22,DA(2),16,DA(1),6,"
"RTN","IBTRH5F",237,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5F",238,0)
 Q
"RTN","IBTRH5F",239,0)
 ;
"RTN","IBTRH5F",240,0)
RTYPE(IBTRIEN,SIEN) ; Prompts the user to enter the .01 (Report Type) field of the
"RTN","IBTRH5F",241,0)
 ; Additional Patient Information multiple
"RTN","IBTRH5F",242,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",243,0)
 ;          SIEN    - IEN of the Service Line
"RTN","IBTRH5F",244,0)
 ; Returns: IEN of the selected Report Type or "" of not entered
"RTN","IBTRH5F",245,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH5F",246,0)
 S DA(2)=IBTRIEN,DA(1)=SIEN
"RTN","IBTRH5F",247,0)
 S DIR(0)="356.22166,.01",DIR("A")="    Report Type"
"RTN","IBTRH5F",248,0)
 D ^DIR
"RTN","IBTRH5F",249,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5F",250,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5F",251,0)
 ;
"RTN","IBTRH5F",252,0)
SELSTI(IBTRIEN,SIEN) ;EP
"RTN","IBTRH5F",253,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5F",254,0)
 ; Provides the user with a quick view of currently entered Service Line Tooth
"RTN","IBTRH5F",255,0)
 ; Information multiples and allows them to select one to edit or enter a new
"RTN","IBTRH5F",256,0)
 ; one.
"RTN","IBTRH5F",257,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",258,0)
 ;          SIEN   - Service Line Multiple IEN
"RTN","IBTRH5F",259,0)
 ; Returns: Value of the .01 field of the multiple to edit
"RTN","IBTRH5F",260,0)
 ;          "" if creating a new multiple, -2 to exit multiple
"RTN","IBTRH5F",261,0)
 ;          IBNEW=1 when creating a new entry
"RTN","IBTRH5F",262,0)
 N CNT,ENTNUM,TDATA,IEN,H1,H2,IEN,IENS,L1,L2,MAX,RETIEN,SECT,TIDATA,TTYPE,X,XX,Y,YY
"RTN","IBTRH5F",263,0)
 S IBNEW=0,SECT="Tooth Information"
"RTN","IBTRH5F",264,0)
 ;
"RTN","IBTRH5F",265,0)
 ; First check for an empty Additional Patient Information Line to delete
"RTN","IBTRH5F",266,0)
 D DELSTI(IBTRIEN,SIEN)
"RTN","IBTRH5F",267,0)
 ;
"RTN","IBTRH5F",268,0)
 ; Next create an array of all current Service Line Tooth Information Lines
"RTN","IBTRH5F",269,0)
 S XX=+$P($G(^IBT(356.22,IBTRIEN,16,SIEN,4,0)),"^",4)  ; Total # of multiples
"RTN","IBTRH5F",270,0)
 S MAX=$S(XX<32:"",1:"Tooth Information Lines")
"RTN","IBTRH5F",271,0)
 S IEN=0,CNT=0
"RTN","IBTRH5F",272,0)
 F  D  Q:+IEN=0
"RTN","IBTRH5F",273,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,16,SIEN,4,IEN))
"RTN","IBTRH5F",274,0)
 . Q:+IEN=0
"RTN","IBTRH5F",275,0)
 . S CNT=CNT+1
"RTN","IBTRH5F",276,0)
 . S XX="  "_$$LJ^XLFSTR(CNT,4)                 ; Selection #
"RTN","IBTRH5F",277,0)
 . S IENS=IEN_","_SIEN_","_IBTRIEN_","
"RTN","IBTRH5F",278,0)
 . S YY=$$GET1^DIQ(356.22164,IENS,.01,"I")      ; Tooth Code (External)
"RTN","IBTRH5F",279,0)
 . S YY=$$GET1^DIQ(356.022,YY_",",.01)          ; Tooth Code
"RTN","IBTRH5F",280,0)
 . S XX=XX_$$LJ^XLFSTR(YY,7)
"RTN","IBTRH5F",281,0)
 . S YY=$$GET1^DIQ(356.22164,IENS,.02)          ; Tooth Surface #1
"RTN","IBTRH5F",282,0)
 . S XX=XX_$$LJ^XLFSTR(YY,12)
"RTN","IBTRH5F",283,0)
 . S YY=$$GET1^DIQ(356.22164,IENS,.03)          ; Tooth Surface #2
"RTN","IBTRH5F",284,0)
 . S XX=XX_$$LJ^XLFSTR(YY,12)
"RTN","IBTRH5F",285,0)
 . S YY=$$GET1^DIQ(356.22164,IENS,.04)          ; Tooth Surface #3
"RTN","IBTRH5F",286,0)
 . S XX=XX_$$LJ^XLFSTR(YY,12)
"RTN","IBTRH5F",287,0)
 . S YY=$$GET1^DIQ(356.22164,IENS,.05)          ; Tooth Surface #4
"RTN","IBTRH5F",288,0)
 . S XX=XX_$$LJ^XLFSTR(YY,12)
"RTN","IBTRH5F",289,0)
 . S TIDATA(CNT)=IEN_"^"_XX
"RTN","IBTRH5F",290,0)
 ;
"RTN","IBTRH5F",291,0)
 I 'CNT D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5F",292,0)
 . W !!,"  No Additional Patient Information is currently on file.",!
"RTN","IBTRH5F",293,0)
 . S XX=$$ASKNEW^IBTRH5D("  Add Tooth Information")
"RTN","IBTRH5F",294,0)
 . Q:XX<0
"RTN","IBTRH5F",295,0)
 . S TTYPE=$$TTYPE(IBTRIEN,SIEN)                ; Get the .01 value
"RTN","IBTRH5F",296,0)
 . I TTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5F",297,0)
 . S IBNEW=1,XX=TTYPE
"RTN","IBTRH5F",298,0)
 . S FDA(356.22164,"+1,"_SIEN_","_IBTRIEN_",",.01)=TTYPE
"RTN","IBTRH5F",299,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5F",300,0)
 ;
"RTN","IBTRH5F",301,0)
 ; Next display all of the current Tooth Information lines and let the user select one
"RTN","IBTRH5F",302,0)
 S H1="  #   Tooth  Surface #1  Surface #2  Surface #3  Surface #4"
"RTN","IBTRH5F",303,0)
 S H2="  --  -----  ----------  ----------  ----------  ----------"
"RTN","IBTRH5F",304,0)
 S L1="  The following Tooth Information Lines are currently on file."
"RTN","IBTRH5F",305,0)
 S L2="  Enter the # of a Line to edit, 'NEW' to add one or press Return to skip."
"RTN","IBTRH5F",306,0)
 S XX=$$SELENT^IBTRH5D(.TIDATA,H1,H2,L1,L2,MAX,1,SECT)
"RTN","IBTRH5F",307,0)
 I XX?1"D".N D  Q -3
"RTN","IBTRH5F",308,0)
 . S (XX,ENTNUM)=$P(XX,"D",2)
"RTN","IBTRH5F",309,0)
 . S XX=$P(TIDATA(XX),"^",1)
"RTN","IBTRH5F",310,0)
 . D DELSTI(IBTRIEN,SIEN,XX)
"RTN","IBTRH5F",311,0)
 . W !,"Entry #",ENTNUM," has been deleted."
"RTN","IBTRH5F",312,0)
 I XX<0 Q XX
"RTN","IBTRH5F",313,0)
 I XX=0 D  Q $S($O(RETIEN(0)):RETIEN($O(RETIEN(0))),1:XX)
"RTN","IBTRH5F",314,0)
 . S TTYPE=$$TTYPE(IBTRIEN,SIEN)                ; Get the .01 value
"RTN","IBTRH5F",315,0)
 . I TTYPE="" S XX=-1 Q                         ; None entered
"RTN","IBTRH5F",316,0)
 . S IBNEW=1
"RTN","IBTRH5F",317,0)
 . S XX=TTYPE
"RTN","IBTRH5F",318,0)
 . S FDA(356.22164,"+1,"_SIEN_","_IBTRIEN_",",.01)=TTYPE
"RTN","IBTRH5F",319,0)
 . D UPDATE^DIE("","FDA","RETIEN")              ; File the new line
"RTN","IBTRH5F",320,0)
 Q $P(TIDATA(XX),"^",1)
"RTN","IBTRH5F",321,0)
 ;
"RTN","IBTRH5F",322,0)
DELSTI(IBTRIEN,SIEN,IEN) ; Checks to see if the user entered 'NEW' to create a new 
"RTN","IBTRH5F",323,0)
 ; Tooth Information Line and didn't enter any data for it OR selected a line
"RTN","IBTRH5F",324,0)
 ; to be deleted.  If so, the Additional Tooth Information line with no data 
"RTN","IBTRH5F",325,0)
 ; (or selected) is deleted
"RTN","IBTRH5F",326,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",327,0)
 ;          SIEN    - IEN of the Service Line being edited
"RTN","IBTRH5F",328,0)
 ; Output:  Empty (or selected) Tooth Information line is deleted (Potentially)
"RTN","IBTRH5F",329,0)
 N DA,DIK,TIIEN,X,XX,Y
"RTN","IBTRH5F",330,0)
 S:'$D(IEN) IEN=""
"RTN","IBTRH5F",331,0)
 I IEN'="" D  Q
"RTN","IBTRH5F",332,0)
 . S DA(2)=IBTRIEN,DA(1)=SIEN,DA=IEN
"RTN","IBTRH5F",333,0)
 . S DIK="^IBT(356.22,DA(2),16,DA(1),4,"
"RTN","IBTRH5F",334,0)
 . D ^DIK                                           ; Delete the multiple
"RTN","IBTRH5F",335,0)
 ;
"RTN","IBTRH5F",336,0)
 S TIIEN=+$P($G(^IBT(356.22,IBTRIEN,16,SIEN,4,0)),"^",3)  ; Last Multiple IEN
"RTN","IBTRH5F",337,0)
 Q:'TIIEN
"RTN","IBTRH5F",338,0)
 S XX=$G(^IBT(356.22,IBTRIEN,16,SIEN,4,TIIEN,0))
"RTN","IBTRH5F",339,0)
 S $P(XX,"^",1)=""                                  ; Remove .01 field
"RTN","IBTRH5F",340,0)
 Q:$TR(XX,"^","")'=""                               ; 0 node data exists
"RTN","IBTRH5F",341,0)
 S DA(2)=IBTRIEN,DA(1)=SIEN,DA=TIIEN
"RTN","IBTRH5F",342,0)
 S DIK="^IBT(356.22,DA(2),16,DA(1),4,"
"RTN","IBTRH5F",343,0)
 D ^DIK                                             ; Delete the multiple
"RTN","IBTRH5F",344,0)
 Q
"RTN","IBTRH5F",345,0)
 ;
"RTN","IBTRH5F",346,0)
TTYPE(IBTRIEN,SIEN) ; Prompts the user to enter the .01 (Tooth) field of the
"RTN","IBTRH5F",347,0)
 ; Tooth Information multiple
"RTN","IBTRH5F",348,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5F",349,0)
 ;          SIEN    - IEN of the Service Line
"RTN","IBTRH5F",350,0)
 ; Returns: IEN of the selected Tooth Type or "" of not entered
"RTN","IBTRH5F",351,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH5F",352,0)
 S DA(2)=IBTRIEN,DA(1)=SIEN
"RTN","IBTRH5F",353,0)
 S DIR(0)="356.22164,.01",DIR("A")="    Tooth Code"
"RTN","IBTRH5F",354,0)
 D ^DIR
"RTN","IBTRH5F",355,0)
 Q:$D(DIRUT) ""
"RTN","IBTRH5F",356,0)
 Q $P(Y,"^",1)
"RTN","IBTRH5F",357,0)
 ;
"RTN","IBTRH5G")
0^32^B92609469^n/a
"RTN","IBTRH5G",1,0)
IBTRH5G ;ALB/FA - HCSR Create 278 Request ;01-OCT-2014
"RTN","IBTRH5G",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5G",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5G",4,0)
 ;;
"RTN","IBTRH5G",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5G",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5G",7,0)
 ;
"RTN","IBTRH5G",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5G",9,0)
 ; CERTDATA     - Determines which (if any) Certification Condition Categories
"RTN","IBTRH5G",10,0)
 ;                contain data
"RTN","IBTRH5G",11,0)
 ; CONTINFO     - Checks for contact number data for subsequent numbers
"RTN","IBTRH5G",12,0)
 ; SECTDATA     - Determines if a specified section contains any fields with
"RTN","IBTRH5G",13,0)
 ;                values and (optionally) displays the all the section's fields
"RTN","IBTRH5G",14,0)
 ;                and their values
"RTN","IBTRH5G",15,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5G",16,0)
 ;
"RTN","IBTRH5G",17,0)
CONTINFO(IBTRIEN,FIELD) ;EP
"RTN","IBTRH5G",18,0)
 ; Called from Input Template IB CREATE 278 REQUEST for fields: 20, 21
"RTN","IBTRH5G",19,0)
 ; Checks to see if subsequent Contact number entries have values.
"RTN","IBTRH5G",20,0)
 ; Input:   IBTRIEN - IEN of entry being processed
"RTN","IBTRH5G",21,0)
 ;          FIELD   - Field # of the field being checked
"RTN","IBTRH5G",22,0)
 ;                    Set to 'ALL' to see if any of the 3 have a value
"RTN","IBTRH5G",23,0)
 ;          DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5G",24,0)
 ; Returns: 1 - Subsequent entries have values, 0 otherwise
"RTN","IBTRH5G",25,0)
 N RETURN,XX,ZZ
"RTN","IBTRH5G",26,0)
 S RETURN=0
"RTN","IBTRH5G",27,0)
 ;
"RTN","IBTRH5G",28,0)
 I FIELD=20 D  Q RETURN
"RTN","IBTRH5G",29,0)
 . S XX=$$GET1^DIQ(356.22,IBTRIEN_",",21,"I")
"RTN","IBTRH5G",30,0)
 . S ZZ=$$GET1^DIQ(356.22,IBTRIEN_",",22,"I")
"RTN","IBTRH5G",31,0)
 . I (XX'="")!(ZZ'="") S RETURN=1 Q
"RTN","IBTRH5G",32,0)
 I FIELD=21 D  Q RETURN
"RTN","IBTRH5G",33,0)
 . I $$GET1^DIQ(356.22,IBTRIEN_",",22,"I")'="" S RETURN=1 Q
"RTN","IBTRH5G",34,0)
 Q RETURN
"RTN","IBTRH5G",35,0)
 ;
"RTN","IBTRH5G",36,0)
CERTDATA(IBTRIEN) ;EP
"RTN","IBTRH5G",37,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5G",38,0)
 ; Determines which Certification Condition Categories contains any fields with
"RTN","IBTRH5G",39,0)
 ; values and then displays a list of Categories that Contain data.
"RTN","IBTRH5G",40,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being examined
"RTN","IBTRH5G",41,0)
 ; Output:  Displays a list of Certification Condition Categories that have at 
"RTN","IBTRH5G",42,0)
 ;          least one field with a value. If no Certification Condition
"RTN","IBTRH5G",43,0)
 ;          Categories have a value then nothing is displayed.
"RTN","IBTRH5G",44,0)
 N CATS,CTR,IX,LEN,DISP,FIRST,XX
"RTN","IBTRH5G",45,0)
 S CATS="",CTR=1
"RTN","IBTRH5G",46,0)
 I $$CHKFLDS(356.22,IBTRIEN_",","4.09^4.1^4.11^4.12^4.13^4.14") D
"RTN","IBTRH5G",47,0)
 . S CATS(CTR)="Ambulance"
"RTN","IBTRH5G",48,0)
 . I $$CHKFLDS(356.22,IBTRIEN_",","18.01^18.02^18.03^18.04^18.05^18.06^18.09^18.1") D
"RTN","IBTRH5G",49,0)
 . . S CATS(CTR)=CATS(CTR)_" W/Amb Trans Info"
"RTN","IBTRH5G",50,0)
 . I $$CHKFLDSM(356.22,IBTRIEN,14,".01^.02^.03^.04^.05^.07") D
"RTN","IBTRH5G",51,0)
 . . S XX="Pat Trans Info"
"RTN","IBTRH5G",52,0)
 . . S CATS(CTR)=CATS(CTR)_$S(CATS(CTR)["Amb Trans Info":",",1:"")_" "_XX
"RTN","IBTRH5G",53,0)
 . S CTR=CTR+1
"RTN","IBTRH5G",54,0)
 I $$CHKFLDS(356.22,IBTRIEN_",","5.01^5.02^5.03^5.04^5.05^5.06") D
"RTN","IBTRH5G",55,0)
 . S CATS(CTR)="Chiropractic"
"RTN","IBTRH5G",56,0)
 . I $$CHKFLDS(356.22,IBTRIEN_",","7.05^7.06^7.07^7.08^7.09^7.1^7.11^7.12^7.13") D
"RTN","IBTRH5G",57,0)
 . . S CATS(CTR)=CATS(CTR)_" W/Spinal Service Info"
"RTN","IBTRH5G",58,0)
 . S CTR=CTR+1
"RTN","IBTRH5G",59,0)
 I $$CHKFLDS(356.22,IBTRIEN_",","5.07^5.08^5.09^5.1^5.11^5.12") D
"RTN","IBTRH5G",60,0)
 . S CATS(CTR)="DME",CTR=CTR+1
"RTN","IBTRH5G",61,0)
 I $$CHKFLDS(356.22,IBTRIEN_",","5.13^5.14^5.15^5.16^5.17^5.18") D
"RTN","IBTRH5G",62,0)
 . S CATS(CTR)="Oxygen"
"RTN","IBTRH5G",63,0)
 . S XX="8.01^8.02^8.03^8.04^8.05^8.06^8.07^8.08^9.01^9.02^9.03^9.04^9.05^9.06^9.07^9.08"
"RTN","IBTRH5G",64,0)
 . I $$CHKFLDS(356.22,IBTRIEN_",",XX) D
"RTN","IBTRH5G",65,0)
 . . S CATS(CTR)=CATS(CTR)_" W/Home Oxygen Therapy Info"
"RTN","IBTRH5G",66,0)
 . S CTR=CTR+1
"RTN","IBTRH5G",67,0)
 I $$CHKFLDS(356.22,IBTRIEN_",","6.01^6.02^6.03^6.04^6.05^6.06") D
"RTN","IBTRH5G",68,0)
 . S CATS(CTR)="Functional Limits",CTR=CTR+1
"RTN","IBTRH5G",69,0)
 I $$CHKFLDS(356.22,IBTRIEN_",","6.07^6.08^6.09^6.1^6.11^6.12") D
"RTN","IBTRH5G",70,0)
 . S CATS(CTR)="Activities",CTR=CTR+1
"RTN","IBTRH5G",71,0)
 I $$CHKFLDS(356.22,IBTRIEN_",","6.13^6.14^6.15^6.16^6.17^6.18") D
"RTN","IBTRH5G",72,0)
 . S CATS(CTR)="Mental Status",CTR=CTR+1
"RTN","IBTRH5G",73,0)
 ;
"RTN","IBTRH5G",74,0)
 ; No Certification Condition Categories contain data
"RTN","IBTRH5G",75,0)
 Q:CTR=1
"RTN","IBTRH5G",76,0)
 ;
"RTN","IBTRH5G",77,0)
 W !!,"The following Certification Condition Categories contain data:"
"RTN","IBTRH5G",78,0)
 S IX="",DISP="   ",FIRST=1
"RTN","IBTRH5G",79,0)
 F  D  Q:IX=""
"RTN","IBTRH5G",80,0)
 . S IX=$O(CATS(IX))
"RTN","IBTRH5G",81,0)
 . Q:IX=""
"RTN","IBTRH5G",82,0)
 . I 'FIRST,($L(DISP)+$L(CATS(IX))+2)>79 D  Q
"RTN","IBTRH5G",83,0)
 . . W !,DISP,","
"RTN","IBTRH5G",84,0)
 . . S DISP="   "_CATS(IX)
"RTN","IBTRH5G",85,0)
 . I FIRST S DISP=DISP_CATS(IX),FIRST=0 Q
"RTN","IBTRH5G",86,0)
 . S DISP=DISP_", "_CATS(IX)
"RTN","IBTRH5G",87,0)
 W:$TR(DISP," ","")'="" !,DISP
"RTN","IBTRH5G",88,0)
 W !
"RTN","IBTRH5G",89,0)
 Q
"RTN","IBTRH5G",90,0)
 ;
"RTN","IBTRH5G",91,0)
CHKFLDSM(FILE,IBTRIEN,NDE,FIELDS) ; Checks all multiples for a specified node to see if
"RTN","IBTRH5G",92,0)
 ; any of the specified fields are non-null
"RTN","IBTRH5G",93,0)
 ; Input:   FILE    - # of file being checked
"RTN","IBTRH5G",94,0)
 ;          IBTRIEN - IEN of the entry being checked
"RTN","IBTRH5G",95,0)
 ;          NDE     - Multiple node to check for data
"RTN","IBTRH5G",96,0)
 ;          FIELDS  - '^' delimited list of fields to be examined
"RTN","IBTRH5G",97,0)
 ; Returns: 1 - At least one field of one multiple is non-null, 0 otherwise
"RTN","IBTRH5G",98,0)
 N FOUND,IEN,IENS,SFILE
"RTN","IBTRH5G",99,0)
 S (FOUND,IEN)=0,SFILE=FILE_NDE
"RTN","IBTRH5G",100,0)
 F  D  Q:+IEN=0!FOUND
"RTN","IBTRH5G",101,0)
 . S IEN=$O(^IBT(FILE,IBTRIEN,NDE,IEN))
"RTN","IBTRH5G",102,0)
 . Q:+IEN=0
"RTN","IBTRH5G",103,0)
 . S IENS=IEN_","_IBTRIEN_","
"RTN","IBTRH5G",104,0)
 . S:$$CHKFLDS(SFILE,IENS,FIELDS) FOUND=1
"RTN","IBTRH5G",105,0)
 Q FOUND
"RTN","IBTRH5G",106,0)
 ;
"RTN","IBTRH5G",107,0)
CHKFLDS(FILE,IENS,FIELDS) ; Checks to see if any of the specified pieces of the
"RTN","IBTRH5G",108,0)
 ; specified node are non-null
"RTN","IBTRH5G",109,0)
 ; Input:   FILE    - # of file being checked
"RTN","IBTRH5G",110,0)
 ;          IENS    - IEN list of the 356.22 entry being examined
"RTN","IBTRH5G",111,0)
 ;          FIELDS  - '^' delimited list of fields to be examined
"RTN","IBTRH5G",112,0)
 ; Returns: 1 - At least one field is non-null, 0 otherwise
"RTN","IBTRH5G",113,0)
 N FIELD,FOUND,IX
"RTN","IBTRH5G",114,0)
 S FOUND=0
"RTN","IBTRH5G",115,0)
 F IX=1:1:$L(FIELDS,"^") D  Q:FOUND
"RTN","IBTRH5G",116,0)
 . S FIELD=$P(FIELDS,"^",IX)
"RTN","IBTRH5G",117,0)
 . S:$$GET1^DIQ(FILE,IENS_",",FIELD,"I")'="" FOUND=1
"RTN","IBTRH5G",118,0)
 Q:FOUND 1
"RTN","IBTRH5G",119,0)
 Q 0
"RTN","IBTRH5G",120,0)
 ;
"RTN","IBTRH5G",121,0)
SECTDATA(IBTRIEN,SIEN,SECTION,HEADER,DISPLAY) ;EP
"RTN","IBTRH5G",122,0)
 ; Called from within Input template IB CREATE 278 REQUEST
"RTN","IBTRH5G",123,0)
 ; Determines if the specified section contains any fields with values and
"RTN","IBTRH5G",124,0)
 ; (optionally) displays all of the section's fields and their values.
"RTN","IBTRH5G",125,0)
 ; Input:   IBTRIEN - IEN of the 356.22 entry being edited
"RTN","IBTRH5G",126,0)
 ;          SIEN    - IEN of the service line multiple being examined
"RTN","IBTRH5G",127,0)
 ;                    NOTE: Only passed if examinng a service line section.
"RTN","IBTRH5G",128,0)
 ;          SECTION - Identifier for the section to be examined
"RTN","IBTRH5G",129,0)
 ;                      HCSD   -  Health Care Services Delivery Section
"RTN","IBTRH5G",130,0)
 ;                      AMBTI  -  Ambulance Transport Information Section
"RTN","IBTRH5G",131,0)
 ;                      SPMSI  -  Spinal Manipulation Service Info Section
"RTN","IBTRH5G",132,0)
 ;                      HOTI   -  Home Oxygen Therapy Info Section
"RTN","IBTRH5G",133,0)
 ;                      HHCI   -  Home Health Care Info Section
"RTN","IBTRH5G",134,0)
 ;                      SHCRSI -  Service Line HCRS Information Section
"RTN","IBTRH5G",135,0)
 ;                      CMPI   -  Service Line Composite Medical Procedure Info
"RTN","IBTRH5G",136,0)
 ;                                Section
"RTN","IBTRH5G",137,0)
 ;                      OCDI   -  Service Line Oral Cavity Designation Info
"RTN","IBTRH5G",138,0)
 ;                                Section
"RTN","IBTRH5G",139,0)
 ;                      SHCSD  -  Service Line Health Care Services Delivery
"RTN","IBTRH5G",140,0)
 ;          HEADER  - Header text to show when displaying a section's field
"RTN","IBTRH5G",141,0)
 ;          DISPLAY - 1 to display all of the section's field if at least one
"RTN","IBTRH5G",142,0)
 ;                      field has a value.  0 otherwise
"RTN","IBTRH5G",143,0)
 ; Output:  Displays a section's fields and their values if DISPLAY=1 and the
"RTN","IBTRH5G",144,0)
 ;          specified section has at least one field with a value
"RTN","IBTRH5G",145,0)
 ; Returns: '*' - At least one field in the section contains a value
"RTN","IBTRH5G",146,0)
 ;          ""  - Otherwise
"RTN","IBTRH5G",147,0)
 N DATA,FIELD,FILE,FLDS,FNUM,FPROMPT,IX,LINE,MAXL,NDE,NODE,PCE,VAL
"RTN","IBTRH5G",148,0)
 S:'$D(SIEN) SIEN=""
"RTN","IBTRH5G",149,0)
 S MAXL=0
"RTN","IBTRH5G",150,0)
 ;
"RTN","IBTRH5G",151,0)
 ; First get and array of the fields in the section
"RTN","IBTRH5G",152,0)
 F IX=1:1 D  Q:$P(LINE,";",3)="%END%"
"RTN","IBTRH5G",153,0)
 . S LINE=SECTION_"+"_IX_"^IBTRH5G"
"RTN","IBTRH5G",154,0)
 . S LINE=$T(@LINE)
"RTN","IBTRH5G",155,0)
 . Q:$P(LINE,";",3)="%END%"
"RTN","IBTRH5G",156,0)
 . S FNUM=$P(LINE,";",3),FPROMPT=$P(LINE,";",4)
"RTN","IBTRH5G",157,0)
 . S:$L(FPROMPT)>MAXL MAXL=$L(FPROMPT)
"RTN","IBTRH5G",158,0)
 . S FLDS(IX)=FNUM_"^"_FPROMPT
"RTN","IBTRH5G",159,0)
 ;
"RTN","IBTRH5G",160,0)
 ; Next determine if any of the section's fields contain data
"RTN","IBTRH5G",161,0)
 S DATA="",IX=""
"RTN","IBTRH5G",162,0)
 F  D  Q:(DATA="*")!(IX="")
"RTN","IBTRH5G",163,0)
 . S IX=$O(FLDS(IX))
"RTN","IBTRH5G",164,0)
 . Q:IX=""
"RTN","IBTRH5G",165,0)
 . S FIELD=$P(FLDS(IX),"^",1),NDE=+$P(FIELD,".",1),PCE=$P(FIELD,".",2)
"RTN","IBTRH5G",166,0)
 . S PCE=$S(PCE="1":10,PCE="2":20,PCE="3":30,1:+PCE)
"RTN","IBTRH5G",167,0)
 . I SIEN="" S:$P($G(^IBT(356.22,IBTRIEN,NDE)),"^",PCE)'="" DATA="*"
"RTN","IBTRH5G",168,0)
 . I SIEN'="" S:$P($G(^IBT(356.22,IBTRIEN,16,SIEN,NDE)),"^",PCE)'="" DATA="*"
"RTN","IBTRH5G",169,0)
 Q:DATA="" ""
"RTN","IBTRH5G",170,0)
 I 'DISPLAY Q "*"
"RTN","IBTRH5G",171,0)
 ;
"RTN","IBTRH5G",172,0)
 ; Next display the section and it's values
"RTN","IBTRH5G",173,0)
 W !!,HEADER," contains the following values:",!
"RTN","IBTRH5G",174,0)
 S FILE=$S(SIEN="":356.22,1:356.2216),MAXL=MAXL+3
"RTN","IBTRH5G",175,0)
 S IX=""
"RTN","IBTRH5G",176,0)
 F  D  Q:IX=""
"RTN","IBTRH5G",177,0)
 . S IX=$O(FLDS(IX))
"RTN","IBTRH5G",178,0)
 . Q:IX=""
"RTN","IBTRH5G",179,0)
 . S FIELD=$P(FLDS(IX),"^",1),NDE=+$P(FIELD,".",1)
"RTN","IBTRH5G",180,0)
 . S PCE=$P(FIELD,".",2),PCE=$S(PCE="1":10,PCE="2":20,PCE="3":30,1:+PCE)
"RTN","IBTRH5G",181,0)
 . W !,$P(FLDS(IX),"^",2),": "
"RTN","IBTRH5G",182,0)
 . I SIEN="" S VAL=$P($G(^IBT(356.22,IBTRIEN,NDE)),"^",PCE)
"RTN","IBTRH5G",183,0)
 . I SIEN'="" S VAL=$P($G(^IBT(356.22,IBTRIEN,16,SIEN,NDE)),"^",PCE)
"RTN","IBTRH5G",184,0)
 . W ?MAXL,$$EXTERNAL^DILFD(FILE,FIELD,"",VAL)
"RTN","IBTRH5G",185,0)
 W !
"RTN","IBTRH5G",186,0)
 I (SECTION="SHCRSI")!(SECTION="CMPI")!(SECTION="OCDI")!(SECTION="SHCSD") W !
"RTN","IBTRH5G",187,0)
 Q "*"
"RTN","IBTRH5G",188,0)
 ;
"RTN","IBTRH5G",189,0)
 ; --------------------------   IB CREATE 278 REQUEST Fields   ----------------
"RTN","IBTRH5G",190,0)
 ; Below is a listing of all of the fields in the template that are in 
"RTN","IBTRH5G",191,0)
 ; 'skipable' sections. The comment line of each section = ;;A1;A2;A3;A4 Where:
"RTN","IBTRH5G",192,0)
 ;    A1 - Field number of the section field (1st '.' piece is the storage node
"RTN","IBTRH5G",193,0)
 ;                                            2nd '.' piece is stoarge piece)
"RTN","IBTRH5G",194,0)
 ;    A2 - Prompt used in the Input Template
"RTN","IBTRH5G",195,0)
 ;         NOTE: If this prompt is changed in the Input Template, it must be
"RTN","IBTRH5G",196,0)
 ;               updated here
"RTN","IBTRH5G",197,0)
 ;    A3 - REQ - If field is unconditionally required. "" otherwise
"RTN","IBTRH5G",198,0)
 ;    A4 - Default value (if any)
"RTN","IBTRH5G",199,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5G",200,0)
 ;
"RTN","IBTRH5G",201,0)
HCSD ; Health Care Services Delivery Section fields
"RTN","IBTRH5G",202,0)
 ;;4.01;Service Quantity Qualifier
"RTN","IBTRH5G",203,0)
 ;;4.02;Service Unit Count
"RTN","IBTRH5G",204,0)
 ;;4.03;Sample Selection Units of Measurement
"RTN","IBTRH5G",205,0)
 ;;4.04;Sample Selection Modulus
"RTN","IBTRH5G",206,0)
 ;;4.05;Time Period Qualifier
"RTN","IBTRH5G",207,0)
 ;;4.06;Period Count
"RTN","IBTRH5G",208,0)
 ;;4.07;Delivery Frequency Code
"RTN","IBTRH5G",209,0)
 ;;4.08;Delivery Pattern Time
"RTN","IBTRH5G",210,0)
 ;;%END%
"RTN","IBTRH5G",211,0)
AMBTI ; Ambulance Transport Information fields
"RTN","IBTRH5G",212,0)
 ;;18.02;Patient Weight
"RTN","IBTRH5G",213,0)
 ;;18.01;Patient Weight Units
"RTN","IBTRH5G",214,0)
 ;;18.03;Transport Code;REQ
"RTN","IBTRH5G",215,0)
 ;;18.04;Transport Reason Code
"RTN","IBTRH5G",216,0)
 ;;18.06;Transport Distance
"RTN","IBTRH5G",217,0)
 ;;18.09;Round Trip Purpose Description
"RTN","IBTRH5G",218,0)
 ;;18.1;Stretcher Purpose Description
"RTN","IBTRH5G",219,0)
 ;;%END%
"RTN","IBTRH5G",220,0)
SPMSI ; Spinal Manipulation Service Information
"RTN","IBTRH5G",221,0)
 ;;7.05;Treatment Series #
"RTN","IBTRH5G",222,0)
 ;;7.06;Treatment Count
"RTN","IBTRH5G",223,0)
 ;;7.07;Subluxation Level #1
"RTN","IBTRH5G",224,0)
 ;;7.08;Subluxation Level #2
"RTN","IBTRH5G",225,0)
 ;;7.09;Patient Condition;REQ
"RTN","IBTRH5G",226,0)
 ;;7.1;Complication Indicator;REQ;N
"RTN","IBTRH5G",227,0)
 ;;7.11;Patient Condition Description Line 1
"RTN","IBTRH5G",228,0)
 ;;7.12;Patient Condition Description Line 2
"RTN","IBTRH5G",229,0)
 ;;7.13;X-Ray Availability Indicator;;N
"RTN","IBTRH5G",230,0)
 ;;%END%
"RTN","IBTRH5G",231,0)
HOTI ; Home Oxygen Therapy Information
"RTN","IBTRH5G",232,0)
 ;;8.01;Oxygen Equipment Type #1;REQ
"RTN","IBTRH5G",233,0)
 ;;8.02;Oxygen Equipment Type #2
"RTN","IBTRH5G",234,0)
 ;;8.03;Oxygen Equipment Type #3
"RTN","IBTRH5G",235,0)
 ;;8.04;Equipment Reason Description
"RTN","IBTRH5G",236,0)
 ;;8.05;Oxygen Flow Rate;REQ
"RTN","IBTRH5G",237,0)
 ;;8.06;Daily Oxygen Use Count
"RTN","IBTRH5G",238,0)
 ;;8.07;Oxygen User Period Hour Count
"RTN","IBTRH5G",239,0)
 ;;8.08;Repiratory Therapist Order Text
"RTN","IBTRH5G",240,0)
 ;;9.01;Arterial Blood Gas Quantity
"RTN","IBTRH5G",241,0)
 ;;9.02;Oxygen Saturation Quantity
"RTN","IBTRH5G",242,0)
 ;;9.03;Oxygen Test Condition
"RTN","IBTRH5G",243,0)
 ;;9.04;Oxygen Test Findings #1
"RTN","IBTRH5G",244,0)
 ;;9.05;Oxygen Test Findings #2
"RTN","IBTRH5G",245,0)
 ;;9.06;Oxygen Test Findings #3
"RTN","IBTRH5G",246,0)
 ;;9.07;Portable Oxygen System Flow Rate
"RTN","IBTRH5G",247,0)
 ;;9.08;Oxygen Delivery System;REQ
"RTN","IBTRH5G",248,0)
 ;;%END%
"RTN","IBTRH5G",249,0)
HHCI ; Home Health Care Information
"RTN","IBTRH5G",250,0)
 ;;2.15;Prognosis
"RTN","IBTRH5G",251,0)
 ;;10.01;Home Health Start Date;REQ
"RTN","IBTRH5G",252,0)
 ;;10.02;Home Health Cert. Start Date
"RTN","IBTRH5G",253,0)
 ;;10.03;Home Health Cert. End Date;REQ
"RTN","IBTRH5G",254,0)
 ;;10.05;Surgery Date
"RTN","IBTRH5G",255,0)
 ;;10.06;Procedure Coding Method
"RTN","IBTRH5G",256,0)
 ;;10.07;Surgical Procedure
"RTN","IBTRH5G",257,0)
 ;;10.08;Physician Verbal Order Date
"RTN","IBTRH5G",258,0)
 ;;10.09;Last Visit Date
"RTN","IBTRH5G",259,0)
 ;;10.1;Physician/Home Health Contact Date
"RTN","IBTRH5G",260,0)
 ;;10.11;Start Date of Last Admission
"RTN","IBTRH5G",261,0)
 ;;10.12;End Date of Last Admission
"RTN","IBTRH5G",262,0)
 ;;10.13;Last Admission Facility
"RTN","IBTRH5G",263,0)
 ;;%END%
"RTN","IBTRH5G",264,0)
SHCRSI ; Service HCRS Information
"RTN","IBTRH5G",265,0)
 ;;.15;  Request Category
"RTN","IBTRH5G",266,0)
 ;;.02;  Service Certification Type
"RTN","IBTRH5G",267,0)
 ;;.03;  Service Type
"RTN","IBTRH5G",268,0)
 ;;.06;  Service Location of Care
"RTN","IBTRH5G",269,0)
 ;;.07;  Service Bill Classification;REQ
"RTN","IBTRH5G",270,0)
 ;;.05;  Place of Service
"RTN","IBTRH5G",271,0)
 ;;%END%
"RTN","IBTRH5G",272,0)
CMPI ; Composite Medical Procedure Information
"RTN","IBTRH5G",273,0)
 ;;1.01;  Procedure Coding Method;REQ
"RTN","IBTRH5G",274,0)
 ;;1.02;  Procedure Code;REQ
"RTN","IBTRH5G",275,0)
 ;;1.03;  Ending Procedure Code
"RTN","IBTRH5G",276,0)
 ;;1.04;  Procedure Modifier #1
"RTN","IBTRH5G",277,0)
 ;;1.05;  Procedure Modifier #2
"RTN","IBTRH5G",278,0)
 ;;1.06;  Procedure Modifier #3
"RTN","IBTRH5G",279,0)
 ;;1.07;  Procedure Modifier #4
"RTN","IBTRH5G",280,0)
 ;;1.08;  Procedure Description
"RTN","IBTRH5G",281,0)
 ;;%END%
"RTN","IBTRH5G",282,0)
OCDI ; Oral Cavity Designation Information
"RTN","IBTRH5G",283,0)
 ;;3.01;  Oral Cavity Designation #1;REQ
"RTN","IBTRH5G",284,0)
 ;;3.02;  Oral Cavity Designation #2
"RTN","IBTRH5G",285,0)
 ;;3.03;  Oral Cavity Designation #3
"RTN","IBTRH5G",286,0)
 ;;3.04;  Oral Cavity Designation #4
"RTN","IBTRH5G",287,0)
 ;;3.05;  Oral Cavity Designation #5
"RTN","IBTRH5G",288,0)
 ;;%END%
"RTN","IBTRH5G",289,0)
SHCSD ; Service Line Health Care Services Delivery
"RTN","IBTRH5G",290,0)
 ;;5.01;  Service Quantity Qualifier
"RTN","IBTRH5G",291,0)
 ;;5.02;  Service Unit Count
"RTN","IBTRH5G",292,0)
 ;;5.03;  Sample Selection Units of Measurement
"RTN","IBTRH5G",293,0)
 ;;5.04;  Sample Selection Modulus
"RTN","IBTRH5G",294,0)
 ;;5.05;  Time Period Qualifier
"RTN","IBTRH5G",295,0)
 ;;5.06;  Period Count
"RTN","IBTRH5G",296,0)
 ;;5.07;  Delivery Frequency Code
"RTN","IBTRH5G",297,0)
 ;;5.08;  Delivery Pattern Time
"RTN","IBTRH5G",298,0)
 ;;%END%
"RTN","IBTRH5G",299,0)
AEREL  ; Accident Relation Information
"RTN","IBTRH5G",300,0)
 ;;2.08;Related Causes #1
"RTN","IBTRH5G",301,0)
 ;;2.09;Related Causes #2
"RTN","IBTRH5G",302,0)
 ;;2.1;Related Causes #3
"RTN","IBTRH5G",303,0)
 ;;2.11;Auto Accident State
"RTN","IBTRH5G",304,0)
 ;;2.12;Auto Accident Country
"RTN","IBTRH5G",305,0)
 ;;2.18;Accident Date
"RTN","IBTRH5G",306,0)
 ;;%END%
"RTN","IBTRH5H")
0^34^B25009378^n/a
"RTN","IBTRH5H",1,0)
IBTRH5H ;ALB/FA - HCSR Create 278 Request ;14-OCT-2014
"RTN","IBTRH5H",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5H",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5H",4,0)
 ;;
"RTN","IBTRH5H",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5H",6,0)
 ; selected entry in the HCSR worklist
"RTN","IBTRH5H",7,0)
 ;
"RTN","IBTRH5H",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5H",9,0)
 ; DXTYPE   - Dictionary Screen function for Diagnosis Type field 356.223/.01
"RTN","IBTRH5H",10,0)
 ; HCSDFC   - Dictionary Screen function for Health Care Services Delivery
"RTN","IBTRH5H",11,0)
 ;            Frequency Code fields 4.07 2216/5.07
"RTN","IBTRH5H",12,0)
 ; HCSDQQ   - Dictionary Screen function for Health Care Services Delivery
"RTN","IBTRH5H",13,0)
 ;            Quantity Qualifier fields 4.01, 2216/5.01
"RTN","IBTRH5H",14,0)
 ; JUMPERR  - Displays an error message if the user tried to ^Field jump from
"RTN","IBTRH5H",15,0)
 ;            a Section or Quick View prompt
"RTN","IBTRH5H",16,0)
 ; NHOME    - Nursing home filter for Service line field 2216/2.08
"RTN","IBTRH5H",17,0)
 ; ONEPD    - Used to auto-file the first Provider Data file for facility
"RTN","IBTRH5H",18,0)
 ; PROVTYPE - Dictionary Screen function for Provider Type field 356.2213/.01
"RTN","IBTRH5H",19,0)
 ; SPROVTYP - Dictionary Screen function for Provider Type field 356.22168/.01
"RTN","IBTRH5H",20,0)
 ; UNITS    - Dictionary Screen function for field 356.2216/1.1
"RTN","IBTRH5H",21,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5H",22,0)
 ;
"RTN","IBTRH5H",23,0)
NHOME() ;EP
"RTN","IBTRH5H",24,0)
 ; Screen for the 'Nursing Home Residential Status' Dictionary field (356.2216/2.08)
"RTN","IBTRH5H",25,0)
 ; to exclude 'DA' for a Professional Service Line and 'MJ' for an Institutional
"RTN","IBTRH5H",26,0)
 ; Service Line. Always exclude 'F2"
"RTN","IBTRH5H",27,0)
 ; Input: DA(1)     - IEN of the 356.22 entry being edited
"RTN","IBTRH5H",28,0)
 ;        DA        - IEN of the Service Line multiple being edited
"RTN","IBTRH5H",29,0)
 ;        Y         - Internal Value of the user response
"RTN","IBTRH5H",30,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5H",31,0)
 I Y=9 Q 0  ; Other not allowed for Service line
"RTN","IBTRH5H",32,0)
 Q 1
"RTN","IBTRH5H",33,0)
 ;
"RTN","IBTRH5H",34,0)
UNITS() ;EP
"RTN","IBTRH5H",35,0)
 ; Screen for the 'Unit or Basis For Measurement' Dictionary field (356.2216/1.1)
"RTN","IBTRH5H",36,0)
 ; to exclude 'DA' for a Professional Service Line and 'MJ' for an Institutional
"RTN","IBTRH5H",37,0)
 ; Service Line. Always exclude 'F2"
"RTN","IBTRH5H",38,0)
 ; Input: DA(1)     - IEN of the 356.22 entry being edited
"RTN","IBTRH5H",39,0)
 ;        DA        - IEN of the Service Line multiple being edited
"RTN","IBTRH5H",40,0)
 ;        Y         - Internal Value of the user response
"RTN","IBTRH5H",41,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5H",42,0)
 N SLTYPE
"RTN","IBTRH5H",43,0)
 S SLTYPE=$$GET1^DIQ(356.2216,DA_","_DA(1)_",",1.12,"I")
"RTN","IBTRH5H",44,0)
 I SLTYPE="P",Y="DA" Q 0
"RTN","IBTRH5H",45,0)
 I SLTYPE="I",Y="MJ" Q 0
"RTN","IBTRH5H",46,0)
 Q 1
"RTN","IBTRH5H",47,0)
 ;
"RTN","IBTRH5H",48,0)
JUMPERR(INDENT)   ;EP
"RTN","IBTRH5H",49,0)
 ; Input:   INDENT  - # of spaces to indent
"RTN","IBTRH5H",50,0)
 ;                    Optional, defaults to 0
"RTN","IBTRH5H",51,0)
 N SPACES
"RTN","IBTRH5H",52,0)
 S:'$D(INDENT) INDENT=0
"RTN","IBTRH5H",53,0)
 S SPACES=$J("",80)
"RTN","IBTRH5H",54,0)
 W !,*7,$S(INDENT:$J(SPACES,INDENT),1:"")
"RTN","IBTRH5H",55,0)
 W "^Field jumping is not allowed from this prompt",!
"RTN","IBTRH5H",56,0)
 Q
"RTN","IBTRH5H",57,0)
 ;
"RTN","IBTRH5H",58,0)
ONEPD(IBTRIEN) ;EP
"RTN","IBTRH5H",59,0)
 ; Called from Input Template: IB ADD/EDIT 278
"RTN","IBTRH5H",60,0)
 ; Attempts to an Attending Physician Provider Data multiple into 356.22 for
"RTN","IBTRH5H",61,0)
 ; entries with a Inpatient/Outpatient Status of 'I'
"RTN","IBTRH5H",62,0)
 ; Only called if there are currently no Provider Data multiples
"RTN","IBTRH5H",63,0)
 ; Input:   IBTRIEN - IEN of the selected entry
"RTN","IBTRH5H",64,0)
 ; Output:  Attending Physician Provider Data multiple is filed into 356.2213
"RTN","IBTRH5H",65,0)
 ;          (Potentially)
"RTN","IBTRH5H",66,0)
 ; Returns: 1 if one or more lines were added, 0 otherwise
"RTN","IBTRH5H",67,0)
 N DFN,EVDT,FDA,IEN,PROV
"RTN","IBTRH5H",68,0)
 Q:$D(^IBT(356.22,IBTRIEN,13)) 0
"RTN","IBTRH5H",69,0)
 ;
"RTN","IBTRH5H",70,0)
 Q:$$GET1^DIQ(356.22,IBTRIEN_",",.04,"I")="O" 1 ; Entry is for an appointment
"RTN","IBTRH5H",71,0)
 S DFN=$$GET1^DIQ(356.22,IBTRIEN_",",.02,"I")   ; Patient DFN
"RTN","IBTRH5H",72,0)
 S EVDT=$$GET1^DIQ(356.22,IBTRIEN_",",.07,"I")  ; Patient Event Date
"RTN","IBTRH5H",73,0)
 S PROV=$$ADMDFN(EVDT,DFN)
"RTN","IBTRH5H",74,0)
 Q:PROV="" 0
"RTN","IBTRH5H",75,0)
 ;
"RTN","IBTRH5H",76,0)
 ; File Attending Physician Data Multiple
"RTN","IBTRH5H",77,0)
 S PROV=PROV_";VA(200,"
"RTN","IBTRH5H",78,0)
 K FDA
"RTN","IBTRH5H",79,0)
 S FDA(356.2213,"+1,"_IBTRIEN_",",.01)=19       ; 'Attending Phys' Prov Type
"RTN","IBTRH5H",80,0)
 S FDA(356.2213,"+1,"_IBTRIEN_",",.02)=1        ; Person
"RTN","IBTRH5H",81,0)
 S FDA(356.2213,"+1,"_IBTRIEN_",",.03)=PROV     ; Provider IEN
"RTN","IBTRH5H",82,0)
 D UPDATE^DIE("","FDA")
"RTN","IBTRH5H",83,0)
 Q 1
"RTN","IBTRH5H",84,0)
 ;
"RTN","IBTRH5H",85,0)
ADMDFN(EVDT,DFN) ; Checks to see if the specified event date is for
"RTN","IBTRH5H",86,0)
 ; an admission, a scheduled admission or neither
"RTN","IBTRH5H",87,0)
 ; Input:   EVDT    - Fileman date/time of the admission being searched for
"RTN","IBTRH5H",88,0)
 ;          DFN     - IEN of the patient of the admission being searched for
"RTN","IBTRH5H",89,0)
 ; Returns: IEN of the found Attending Physician or "" if not found
"RTN","IBTRH5H",90,0)
 N FOUND,PROV,TDFN,VAIN,VAINDT,XX
"RTN","IBTRH5H",91,0)
 ;
"RTN","IBTRH5H",92,0)
 S XX=$$NOW^XLFDT(),FOUND=0,PROV=""
"RTN","IBTRH5H",93,0)
 ;
"RTN","IBTRH5H",94,0)
 ; Direct admission check
"RTN","IBTRH5H",95,0)
 I EVDT'>XX D  Q PROV
"RTN","IBTRH5H",96,0)
 . S VAINDT=EVDT
"RTN","IBTRH5H",97,0)
 . D INP^VADPT
"RTN","IBTRH5H",98,0)
 . S PROV=$P($G(VAIN(11)),"^",1)
"RTN","IBTRH5H",99,0)
 ;
"RTN","IBTRH5H",100,0)
 ; Next check for a scheduled admission
"RTN","IBTRH5H",101,0)
 S IEN=""
"RTN","IBTRH5H",102,0)
 F  D  Q:FOUND!(IEN="")
"RTN","IBTRH5H",103,0)
 . S IEN=$O(^DGS(41.1,"C",EVDT,IEN))            ; DBIA429
"RTN","IBTRH5H",104,0)
 . Q:IEN=""
"RTN","IBTRH5H",105,0)
 . S:$P($G(^DGS(41.1,IEN,0)),"^",1)=DFN FOUND=1
"RTN","IBTRH5H",106,0)
 S:FOUND PROV=$$GET1^DIQ(41.1,IEN_",",5,"I")
"RTN","IBTRH5H",107,0)
 Q PROV
"RTN","IBTRH5H",108,0)
 Q ""
"RTN","IBTRH5H",109,0)
 ;
"RTN","IBTRH5H",110,0)
DXTYPE() ;EP
"RTN","IBTRH5H",111,0)
 ; Called from within Input template IB ADD/EDIT 278
"RTN","IBTRH5H",112,0)
 ; Screens Diagnosis Type values based upon the Diagnosis multiple being 
"RTN","IBTRH5H",113,0)
 ; added/edit 
"RTN","IBTRH5H",114,0)
 ; Called from field: 356.223/.01
"RTN","IBTRH5H",115,0)
 ; Input:   DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5H",116,0)
 ;          DA      - IEN of the diagnosis multiple being edited
"RTN","IBTRH5H",117,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5H",118,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5H",119,0)
 N CNT,DTDIFF,ICDDT,IX,RETURN,WHICH
"RTN","IBTRH5H",120,0)
 ;
"RTN","IBTRH5H",121,0)
 S ICDDT=3151001 ; ICD-9 cut-off date
"RTN","IBTRH5H",122,0)
 S DTDIFF=$$FMDIFF^XLFDT(DT,ICDDT)
"RTN","IBTRH5H",123,0)
 I DTDIFF<0,Y<5 Q 0  ; date is prior to cut-off, only ICD-9 is allowed
"RTN","IBTRH5H",124,0)
 I DTDIFF'<0,Y>4,Y<9 Q 0  ; date is not prior to cut-off, only ICD-10 is allowed
"RTN","IBTRH5H",125,0)
 ;
"RTN","IBTRH5H",126,0)
 I Y=10 Q $S($P($G(^IBT(356.22,DA(1),0)),"^",20)=2:1,1:0)  ; LOI diagnosis codes are not allowed
"RTN","IBTRH5H",127,0)
 ; Determine which multiple is being added/edited
"RTN","IBTRH5H",128,0)
 S WHICH=""
"RTN","IBTRH5H",129,0)
 I '$D(^IBT(356.22,DA(1),3,DA)) D               ; New multiple being created
"RTN","IBTRH5H",130,0)
 . S WHICH=$P($G(^IBT(356.22,DA(1),3,0)),"^",3)+1
"RTN","IBTRH5H",131,0)
 I WHICH="" D                                   ; Existing multiple being edited
"RTN","IBTRH5H",132,0)
 . S IX=0,CNT=0
"RTN","IBTRH5H",133,0)
 . F  D  Q:(+IX=0)!(IX=DA)
"RTN","IBTRH5H",134,0)
 . . S IX=$O(^IBT(356.22,DA(1),3,IX))
"RTN","IBTRH5H",135,0)
 . . Q:+IX=0
"RTN","IBTRH5H",136,0)
 . . S CNT=CNT+1
"RTN","IBTRH5H",137,0)
 . . I IX=DA S WHICH=CNT Q                      ; Skip multiple being edited
"RTN","IBTRH5H",138,0)
 I WHICH=1 Q 1                                  ; All entries allowed
"RTN","IBTRH5H",139,0)
 I WHICH=2 D  Q RETURN                          ; 2nd multiple
"RTN","IBTRH5H",140,0)
 . I (Y=3)!(Y=7) S RETURN=0 Q
"RTN","IBTRH5H",141,0)
 . S RETURN=1
"RTN","IBTRH5H",142,0)
 ;
"RTN","IBTRH5H",143,0)
 ; 3rd-12th multiple
"RTN","IBTRH5H",144,0)
 I (Y=3)!(Y=7)!(Y=2)!(Y=6) Q 0
"RTN","IBTRH5H",145,0)
 Q 1
"RTN","IBTRH5H",146,0)
 ;
"RTN","IBTRH5H",147,0)
HCSDFC() ;EP
"RTN","IBTRH5H",148,0)
 ; Called from within Input template IB ADD/EDIT 278
"RTN","IBTRH5H",149,0)
 ; Dictionary Screen for Health Care Services Delivery Frequency Code
"RTN","IBTRH5H",150,0)
 ; fields 4.07, 2216/5.07
"RTN","IBTRH5H",151,0)
 ; Input:   Y       - Internal Value of the user response
"RTN","IBTRH5H",152,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5H",153,0)
 ;
"RTN","IBTRH5H",154,0)
 ; Check for invalid Frequency Code
"RTN","IBTRH5H",155,0)
 N IEN
"RTN","IBTRH5H",156,0)
 S IEN=$O(^IBE(365.025,"B","WE",""))
"RTN","IBTRH5H",157,0)
 I Y=IEN Q 0
"RTN","IBTRH5H",158,0)
 Q 1
"RTN","IBTRH5H",159,0)
 ;
"RTN","IBTRH5H",160,0)
HCSDQQ() ;EP
"RTN","IBTRH5H",161,0)
 ; Called from within Input template IB ADD/EDIT 278
"RTN","IBTRH5H",162,0)
 ; Dictionary Screen for Health Care Services Delivery Quantity Qualifier
"RTN","IBTRH5H",163,0)
 ; fields 4.01, 2216/5.01
"RTN","IBTRH5H",164,0)
 ; Input:   Y       - Internal Value of the user response
"RTN","IBTRH5H",165,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5H",166,0)
 N CDE,IEN,IENS
"RTN","IBTRH5H",167,0)
 ;
"RTN","IBTRH5H",168,0)
 ; First Get all of IENS that we want to display
"RTN","IBTRH5H",169,0)
 F CDE="DY","FL","HS","MN","VS" D
"RTN","IBTRH5H",170,0)
 . S IEN=$O(^IBE(365.016,"B",CDE,""))
"RTN","IBTRH5H",171,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5H",172,0)
 Q:'$D(IENS(Y)) 0
"RTN","IBTRH5H",173,0)
 Q 1
"RTN","IBTRH5H",174,0)
 ;
"RTN","IBTRH5H",175,0)
PROVTYPE() ;EP
"RTN","IBTRH5H",176,0)
 ; Called from within Input template IB ADD/EDIT 278
"RTN","IBTRH5H",177,0)
 ; Dictionary Screen for allowable Provider Types.
"RTN","IBTRH5H",178,0)
 ; Called from field screens 356.2213/.01
"RTN","IBTRH5H",179,0)
 ; NOTE: Duplicate entries are allowed
"RTN","IBTRH5H",180,0)
 ; Input:   X - External Value of the user response
"RTN","IBTRH5H",181,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5H",182,0)
 ;
"RTN","IBTRH5H",183,0)
 N CDE,IENS
"RTN","IBTRH5H",184,0)
 ; Check external values that are not allowed for 278
"RTN","IBTRH5H",185,0)
 F CDE=13,36,"1I","1P","1T","2B","DQ","GP","GW","I3","IL","L5","LR","OC","P4","P5","PR","PRP","SEP","TTP","VER","VN","X3","Y2" D
"RTN","IBTRH5H",186,0)
 . S IENS(CDE)=""
"RTN","IBTRH5H",187,0)
 Q:$D(IENS(X)) 0
"RTN","IBTRH5H",188,0)
 Q 1
"RTN","IBTRH5H",189,0)
 ;
"RTN","IBTRH5H",190,0)
SPROVTYP() ;EP
"RTN","IBTRH5H",191,0)
 ; Called from within Input template IB ADD/EDIT 278
"RTN","IBTRH5H",192,0)
 ; Dictionary Screen for allowable Provider Types for Service Lines.
"RTN","IBTRH5H",193,0)
 ; Called from field screens 356.22168/.01
"RTN","IBTRH5H",194,0)
 ; NOTE: Duplicate entries are allowed
"RTN","IBTRH5H",195,0)
 ; Input:   X       - External Value of the user response
"RTN","IBTRH5H",196,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5H",197,0)
 ;
"RTN","IBTRH5H",198,0)
 N CDE,IENS
"RTN","IBTRH5H",199,0)
 ; Check external values for service line 278
"RTN","IBTRH5H",200,0)
 F CDE=13,36,71,"1I","1P","2B","AAJ","DN","GP","GW","I3","IL","L5","LR","OC","P4","P5","PR","PRP","SEP","TTP","VER","VN","X3","Y2" D
"RTN","IBTRH5H",201,0)
 . S IENS(CDE)=""
"RTN","IBTRH5H",202,0)
 Q:$D(IENS(X)) 0
"RTN","IBTRH5H",203,0)
 Q 1
"RTN","IBTRH5I")
0^39^B233667896^n/a
"RTN","IBTRH5I",1,0)
IBTRH5I ;ALB/FA - HCSR Create 278 Request ;18-NOV-2014
"RTN","IBTRH5I",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5I",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5I",4,0)
 ;;
"RTN","IBTRH5I",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5I",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5I",7,0)
 ;
"RTN","IBTRH5I",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5I",9,0)
 ; COMQUAL      - Dictionary screen for Requester Contact Qualifier fields
"RTN","IBTRH5I",10,0)
 ; CONTINFO     - Retrieves Contact related information
"RTN","IBTRH5I",11,0)
 ; CRT278       - Allows the user to create a new 278 request for the selected
"RTN","IBTRH5I",12,0)
 ;                entry in the HCSR Response worklist
"RTN","IBTRH5I",13,0)
 ; PERSON       - Determines if the specified Provider is a Person or Non/Person
"RTN","IBTRH5I",14,0)
 ; PDATA        - Retrieves the specified Provider's NPI and taxonomy numbers
"RTN","IBTRH5I",15,0)
 ; REFDATA      - Retrieves the Previous Authorization and Reference Numbers for
"RTN","IBTRH5I",16,0)
 ;                the specified entry.
"RTN","IBTRH5I",17,0)
 ; REQMISS      - Checks for missing required fields in a request 
"RTN","IBTRH5I",18,0)
 ; SEND278      - Prompts the user to send a brief 278 transmission
"RTN","IBTRH5I",19,0)
 ; SVCTYPE      - Dictionary Screen for Service Type 2.03 and 356.2216,.03
"RTN","IBTRH5I",20,0)
 ; TIMEPDQ      - Dictionary Screen for Time Period Qualifier, 4.05
"RTN","IBTRH5I",21,0)
 ; UDREASN      - Dictionary Screen for UMO Denial Reasons
"RTN","IBTRH5I",22,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5I",23,0)
 ;
"RTN","IBTRH5I",24,0)
CONTINFO(IBTRIEN,CNARY) ;EP
"RTN","IBTRH5I",25,0)
 ; Retrieves Contact related information for the specified entry
"RTN","IBTRH5I",26,0)
 ; Input:   IBTRIEN - IEN of the entry to retrieve information from
"RTN","IBTRH5I",27,0)
 ; Output:  CNARY   - Array of populated information
"RTN","IBTRH5I",28,0)
 N NODE19,QUAL,Z
"RTN","IBTRH5I",29,0)
 S NODE19=$G(^IBT(356.22,IBTRIEN,19))
"RTN","IBTRH5I",30,0)
 F Z="19.01^2^20","19.02^3^21","19.03^4^22" D
"RTN","IBTRH5I",31,0)
 . S QUAL=$$EXTERNAL^DILFD(356.22,$P(Z,"^",1),,$P(NODE19,"^",$P(Z,"^",2)))
"RTN","IBTRH5I",32,0)
 . I QUAL'="" S CNARY(QUAL)=$G(^IBT(356.22,IBTRIEN,$P(Z,"^",3)))
"RTN","IBTRH5I",33,0)
 Q
"RTN","IBTRH5I",34,0)
 ;
"RTN","IBTRH5I",35,0)
SEND278() ;EP
"RTN","IBTRH5I",36,0)
 ; Called from the input template to allow the user to send a brief 278 request
"RTN","IBTRH5I",37,0)
 ; transmission, continue answering all questions in the template or skip to 
"RTN","IBTRH5I",38,0)
 ; Service level information
"RTN","IBTRH5I",39,0)
 ; Input: None
"RTN","IBTRH5I",40,0)
 ; Returns: 0       - User either wants to send a brief 278 or exit the input
"RTN","IBTRH5I",41,0)
 ;                    template
"RTN","IBTRH5I",42,0)
 ;          255     - User tried to field jump
"RTN","IBTRH5I",43,0)
 ;          1       - User wants to continue entering info
"RTN","IBTRH5I",44,0)
 ;          1400    - User wants to skip to Service Detail Information
"RTN","IBTRH5I",45,0)
 I +$P($G(^IBT(356.22,DA,16,0)),U,4) Q 1  ; data already entered for service lines.  don't let them use short cut to send.
"RTN","IBTRH5I",46,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,SEL,XX
"RTN","IBTRH5I",47,0)
 S XX="^Y:YES;N:NO;S:SKIP"
"RTN","IBTRH5I",48,0)
 S DIR(0)="SAO"_XX,DIR("A")="Send 278 Request w/o Additional Info? "
"RTN","IBTRH5I",49,0)
 S XX="Select YES to transmit a basic 278 Request now.  Select No to enter"
"RTN","IBTRH5I",50,0)
 S XX=XX_" additional data before transmitting the 278 Request. Enter S to"
"RTN","IBTRH5I",51,0)
 S XX=XX_" skip to Service Line Detail."
"RTN","IBTRH5I",52,0)
 S DIR("?")=XX
"RTN","IBTRH5I",53,0)
 D ^DIR
"RTN","IBTRH5I",54,0)
 I X?1"^"1.E D JUMPERR^IBTRH5H Q "@260"
"RTN","IBTRH5I",55,0)
 S Y=$S($D(DUOUT):0,Y="Y":0,Y="N":"@270",Y="S":"@1400",1:"@270")
"RTN","IBTRH5I",56,0)
 Q Y
"RTN","IBTRH5I",57,0)
 ;
"RTN","IBTRH5I",58,0)
SVCTYPE()   ;EP
"RTN","IBTRH5I",59,0)
 ; Dictionary Screen function called from fields: 2.03 and 356.2216,.03
"RTN","IBTRH5I",60,0)
 ; Screens some specific entries from 365.013
"RTN","IBTRH5I",61,0)
 ; Input:   DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5I",62,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5I",63,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5I",64,0)
 N CDE,IEN,IENS
"RTN","IBTRH5I",65,0)
 ; First Get all of IENS that we want to filter out
"RTN","IBTRH5I",66,0)
 F CDE=9,10,13,19,22,30,32,34,41,43,47,48,49,50,51,52,53,55,57,58,59,60,81,89 D
"RTN","IBTRH5I",67,0)
 . S IEN=$O(^IBE(365.013,"B",CDE,""))
"RTN","IBTRH5I",68,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5I",69,0)
 F CDE=90,81,91,92,94,95,96,97,98,99,"A0","A1","A2","A3","A5","A7","A8","AA","AB" D
"RTN","IBTRH5I",70,0)
 . S IEN=$O(^IBE(365.013,"B",CDE,""))
"RTN","IBTRH5I",71,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5I",72,0)
 F CDE="AC","AH","AM","AN","AO","AQ","B2","B3","BA","BH","BI","BJ","BK","BM","BR" D
"RTN","IBTRH5I",73,0)
 . S IEN=$O(^IBE(365.013,"B",CDE,""))
"RTN","IBTRH5I",74,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5I",75,0)
 F CDE="BT","BU","BV","BW","BX","CA","CB","CC","CD","CE","CF","CG","CH","CI" D
"RTN","IBTRH5I",76,0)
 . S IEN=$O(^IBE(365.013,"B",CDE,""))
"RTN","IBTRH5I",77,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5I",78,0)
 F CDE="CJ","CK","CL","CM","CN","CO","CP","DG","DM","DS","GF","GN","UC" D
"RTN","IBTRH5I",79,0)
 . S IEN=$O(^IBE(365.013,"B",CDE,""))
"RTN","IBTRH5I",80,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5I",81,0)
 Q:$D(IENS(Y)) 0
"RTN","IBTRH5I",82,0)
 Q 1
"RTN","IBTRH5I",83,0)
 ;
"RTN","IBTRH5I",84,0)
UDREASN(FIELD)   ;EP
"RTN","IBTRH5I",85,0)
 ; Dictionary Screen function called from fields: 356.2215,.03, 356.2215,.04
"RTN","IBTRH5I",86,0)
 ; 356.2215,.05, 356.2215,.06.
"RTN","IBTRH5I",87,0)
 ; Prevents Duplicate UMO Denial Reasons
"RTN","IBTRH5I",88,0)
 ; Input:   FIELD   - Field being checked
"RTN","IBTRH5I",89,0)
 ;          DA(1)   - IEN of the 356.22 entry being edited
"RTN","IBTRH5I",90,0)
 ;          DA      - IEN of the UMO multiple
"RTN","IBTRH5I",91,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5I",92,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5I",93,0)
 N NDE,RET,Z
"RTN","IBTRH5I",94,0)
 S RET=1     ; Assume Valid Input
"RTN","IBTRH5I",95,0)
 Q:Y="" 1    ; No value entered
"RTN","IBTRH5I",96,0)
 S NDE=$G(^IBT(356.22,DA(1),15,DA,0))
"RTN","IBTRH5I",97,0)
 ; Make sure there are no duplicates
"RTN","IBTRH5I",98,0)
 I FIELD=.03 D  Q RET
"RTN","IBTRH5I",99,0)
 . F Z=4,5,6 D CHK(Z)
"RTN","IBTRH5I",100,0)
 I FIELD=.04 D  Q RET
"RTN","IBTRH5I",101,0)
 . F Z=3,5,6 D CHK(Z)
"RTN","IBTRH5I",102,0)
 I FIELD=.05 D  Q RET
"RTN","IBTRH5I",103,0)
 . F Z=3,4,6 D CHK(Z)
"RTN","IBTRH5I",104,0)
 I FIELD=.06 D  Q RET
"RTN","IBTRH5I",105,0)
 . F Z=3,4,5 D CHK(Z)
"RTN","IBTRH5I",106,0)
 Q RET
"RTN","IBTRH5I",107,0)
 ;
"RTN","IBTRH5I",108,0)
CHK(NUM) ;
"RTN","IBTRH5I",109,0)
 I $P(NDE,"^",NUM)=Y S RET=0 Q 
"RTN","IBTRH5I",110,0)
 Q
"RTN","IBTRH5I",111,0)
 ;
"RTN","IBTRH5I",112,0)
TIMEPDQ()   ;EP
"RTN","IBTRH5I",113,0)
 ; Dictionary Screen function called from Time Period Qualifier, fields: 4.05,
"RTN","IBTRH5I",114,0)
 ; 356.2216/5.05
"RTN","IBTRH5I",115,0)
 ; Screens some specific entries from 365.015
"RTN","IBTRH5I",116,0)
 ; Input:   DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5I",117,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5I",118,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5I",119,0)
 N CDE,IEN,IENS
"RTN","IBTRH5I",120,0)
 ; First Get all of IENS that we want to filter out
"RTN","IBTRH5I",121,0)
 F CDE=13,22,23,24,25,28,30,31,32,33,36 D
"RTN","IBTRH5I",122,0)
 . S IEN=$O(^IBE(365.015,"B",CDE,""))
"RTN","IBTRH5I",123,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5I",124,0)
 Q:$D(IENS(Y)) 0
"RTN","IBTRH5I",125,0)
 Q 1
"RTN","IBTRH5I",126,0)
 ;
"RTN","IBTRH5I",127,0)
PDATA(PROV) ; EP
"RTN","IBTRH5I",128,0)
 ; Retrieves the NPI and Taxonomy codes for the requested Provider
"RTN","IBTRH5I",129,0)
 ; PROV     - Provider to retrieve codes for
"RTN","IBTRH5I",130,0)
 ; Output:  NPI^Taxonomy number
"RTN","IBTRH5I",131,0)
 N XX,ZZ
"RTN","IBTRH5I",132,0)
 S ZZ=$$PRVDATA^IBTRHLO2(+$P(PROV,";",1),$P($P(PROV,"(",2),",",1))
"RTN","IBTRH5I",133,0)
 S XX=$$GTXNMY^IBTRH3(PROV)
"RTN","IBTRH5I",134,0)
 S XX=$P(XX,"^",1)_"^"_$P(ZZ,"^",7)
"RTN","IBTRH5I",135,0)
 Q XX
"RTN","IBTRH5I",136,0)
 ;
"RTN","IBTRH5I",137,0)
REFDATA(IBTRIEN)    ;EP
"RTN","IBTRH5I",138,0)
 ; Input:   IBTRIEN - IEN of the entry being checked
"RTN","IBTRH5I",139,0)
 N REFINFO,RIEN,XX
"RTN","IBTRH5I",140,0)
 S XX=$G(^IBT(356.22,IBTRIEN,0)),REFINFO=""
"RTN","IBTRH5I",141,0)
 S RIEN=$P(XX,"^",19)
"RTN","IBTRH5I",142,0)
 Q REFINFO
"RTN","IBTRH5I",143,0)
 ;
"RTN","IBTRH5I",144,0)
REQMISS(IBTRIEN,IBEXIT) ;EP
"RTN","IBTRH5I",145,0)
 ; Checks to see if all required fields in the request
"RTN","IBTRH5I",146,0)
 ; been answered and the user did not '^' the input template
"RTN","IBTRH5I",147,0)
 ; Input:   IBTRIEN - IEN of the entry being checked
"RTN","IBTRH5I",148,0)
 ;          IBEXIT  - 0 if user '^' exited the template, 1 otherwise
"RTN","IBTRH5I",149,0)
 ; Returns: 0 if all required fields have been entered and no '^' exit
"RTN","IBTRH5I",150,0)
 ;          1 if missing required fields and/or '^' exit.  All missing fields
"RTN","IBTRH5I",151,0)
 ;            will be displayed in a warnings message.
"RTN","IBTRH5I",152,0)
 N CTC,IENS,MISSING,XX,YY,YY1,YY2,TYPE
"RTN","IBTRH5I",153,0)
 S MISSING=0,IENS=IBTRIEN_","
"RTN","IBTRH5I",154,0)
 I $$GET1^DIQ(356.22,IENS,2.01,"I")="" D
"RTN","IBTRH5I",155,0)
 . D MISSING("Request Category","Request Category is required and does not have a value entered.")
"RTN","IBTRH5I",156,0)
 S CTC=$$GET1^DIQ(356.22,IENS,2.02,"I") I CTC="" D
"RTN","IBTRH5I",157,0)
 . D MISSING("Certification Type Code","Certification Type Code is required and does not have a value entered.")
"RTN","IBTRH5I",158,0)
 S XX=$O(^IBT(356.22,IBTRIEN,16,0))  ; Check for a service line
"RTN","IBTRH5I",159,0)
 I XX="" D
"RTN","IBTRH5I",160,0)
 . I $$GET1^DIQ(356.22,IENS,2.03,"I")="" D  ; No Service Line and No Service Type
"RTN","IBTRH5I",161,0)
 .. D MISSING(2.03,"Service Type is required if no Service Lines were entered.")
"RTN","IBTRH5I",162,0)
 . S TYPE=$$GET1^DIQ(356.22,IENS,2.04,"I") I TYPE="" D  ; No Service Line(s) and no Facility Type Qualifier
"RTN","IBTRH5I",163,0)
 .. D MISSING(2.04,"Service Location Qualifier is required if no Service Lines are entered.")
"RTN","IBTRH5I",164,0)
 . I TYPE'="A",$$GET1^DIQ(356.22,IENS,2.05,"I")="" D  ; No Service Line(s) and no Facility Type
"RTN","IBTRH5I",165,0)
 .. D MISSING(2.05,"Service Location is required if no Service Lines are entered.")
"RTN","IBTRH5I",166,0)
 . I TYPE="A" D
"RTN","IBTRH5I",167,0)
 .. I $$GET1^DIQ(356.22,IENS,2.06,"I")="" D MISSING(2.06,"Location of Care is required if no Service Lines are entered and Facility Type is 'A'")
"RTN","IBTRH5I",168,0)
 .. I $$GET1^DIQ(356.22,IENS,2.07,"I")="" D MISSING(2.07,"Bill Classification is required if no Service Lines are entered and Facility Type is 'A'")
"RTN","IBTRH5I",169,0)
 ;
"RTN","IBTRH5I",170,0)
 D REQMISS^IBTRH5J ;additional required fields checking 12/11/14 JWS
"RTN","IBTRH5I",171,0)
 ;
"RTN","IBTRH5I",172,0)
 ; If Home Health Care Information Home Health Start date is entered, then
"RTN","IBTRH5I",173,0)
 ; Prognosis must be defined and we must have a Principal Diagnosis and Date.
"RTN","IBTRH5I",174,0)
 I $$GET1^DIQ(356.22,IENS,10.01,"I")'="" D
"RTN","IBTRH5I",175,0)
 . I $$GET1^DIQ(356.22,IENS,2.15,"I")="" D
"RTN","IBTRH5I",176,0)
 .. S MISSING=MISSING+1
"RTN","IBTRH5I",177,0)
 .. S XX="Prognosis is required if Home Health Start Date is defined."
"RTN","IBTRH5I",178,0)
 .. S MISSING("Prognosis")=XX
"RTN","IBTRH5I",179,0)
 . I '$D(^IBT(356.22,IBTRIEN,3)) D MISSING("Diagnosis","A Principal Diagnosis and Date must be entered for Home Health Care service.")
"RTN","IBTRH5I",180,0)
 ; Check for Diagnosis values
"RTN","IBTRH5I",181,0)
 I $D(^IBT(356.22,IBTRIEN,3)) D DIAGMISS(IBTRIEN,.MISSING)
"RTN","IBTRH5I",182,0)
 ; Check for a Procedure on every Service line
"RTN","IBTRH5I",183,0)
 I $D(^IBT(356.22,IBTRIEN,16)) D SVCMISS(IBTRIEN,.MISSING)
"RTN","IBTRH5I",184,0)
 ; Check for Attending Physician line for Inpatient entries
"RTN","IBTRH5I",185,0)
 D ATTMISS(IBTRIEN,.MISSING)
"RTN","IBTRH5I",186,0)
 ; User completed the entire template and no require fields are missing
"RTN","IBTRH5I",187,0)
 I IBEXIT,'MISSING Q 0
"RTN","IBTRH5I",188,0)
 W !!
"RTN","IBTRH5I",189,0)
 I 'IBEXIT D
"RTN","IBTRH5I",190,0)
 . W !,*7,"'^' exit from the template has been detected. You must complete"
"RTN","IBTRH5I",191,0)
 . W !,"the entire 278 request before sending it. Currently entered information"
"RTN","IBTRH5I",192,0)
 . W !,"has been saved. Use the SR action to finish entering data to send the request."
"RTN","IBTRH5I",193,0)
 I MISSING D
"RTN","IBTRH5I",194,0)
 . W !!,*7,"The following required fields are missing or incorrect:"
"RTN","IBTRH5I",195,0)
 . S XX=""
"RTN","IBTRH5I",196,0)
 . F  D  Q:XX=""
"RTN","IBTRH5I",197,0)
 .. S XX=$O(MISSING(XX))
"RTN","IBTRH5I",198,0)
 .. Q:XX=""
"RTN","IBTRH5I",199,0)
 .. I MISSING(XX)="" W !,XX Q
"RTN","IBTRH5I",200,0)
 .. N TEXT,XX1
"RTN","IBTRH5I",201,0)
 .. D FSTRNG^IBJU1(MISSING(XX),76,.TEXT)
"RTN","IBTRH5I",202,0)
 .. S XX1="" F  S XX1=$O(TEXT(XX1)) Q:XX1=""  W !,TEXT(XX1)
"RTN","IBTRH5I",203,0)
 .. ;W !,MISSING(XX)
"RTN","IBTRH5I",204,0)
 . I IBEXIT D
"RTN","IBTRH5I",205,0)
 .. W !!,"A 278 request cannot be sent with missing required fields."
"RTN","IBTRH5I",206,0)
 .. I $G(IBTRENT)=1 W !,"Use the AD action to enter required data" Q
"RTN","IBTRH5I",207,0)
 .. W !,"Currently entered information has been saved. Use the SR action to finish"
"RTN","IBTRH5I",208,0)
 .. W !,"entering data to send the request."
"RTN","IBTRH5I",209,0)
 Q 1
"RTN","IBTRH5I",210,0)
 ;
"RTN","IBTRH5I",211,0)
DIAGMISS(IBTRIEN,MISSING)   ; Checks for Diagnosis information when Home Health
"RTN","IBTRH5I",212,0)
 ; Start Date been defined
"RTN","IBTRH5I",213,0)
 ; Input:   IBTRIEN - IEN of the entry being checked
"RTN","IBTRH5I",214,0)
 ;          MISSING - Current array and count of missing required fields
"RTN","IBTRH5I",215,0)
 ; Output:  MISSING - Updated array and count of missing required fields
"RTN","IBTRH5I",216,0)
 ; Note:    Only called if the Prognosis code (2.03) has a value
"RTN","IBTRH5I",217,0)
 N DXCODE,DXDATE,DXTYPE,XX,YY,XX1,START
"RTN","IBTRH5I",218,0)
 S XX=0,START=$O(^IBT(356.22,IBTRIEN,3,0))
"RTN","IBTRH5I",219,0)
 F  S XX=$O(^IBT(356.22,IBTRIEN,3,XX)) Q:XX'=+XX  D
"RTN","IBTRH5I",220,0)
 . S DXTYPE=$$GET1^DIQ(356.223,XX_","_IBTRIEN_",",.01,"I")
"RTN","IBTRH5I",221,0)
 . S DXCODE=$$GET1^DIQ(356.223,XX_","_IBTRIEN_",",.02,"I")
"RTN","IBTRH5I",222,0)
 . S DXDATE=$$GET1^DIQ(356.223,XX_","_IBTRIEN_",",.03,"I")
"RTN","IBTRH5I",223,0)
 . I DXTYPE="" D
"RTN","IBTRH5I",224,0)
 .. I XX=START,$$GET1^DIQ(356.22,IENS,10.01,"I")'="" S XX1="Diagnosis entry number "_XX_" Diagnosis Type must be defined if Home Health Start Date is defined."
"RTN","IBTRH5I",225,0)
 .. E  S XX1="Diagnosis entry number "_XX_" Diagnosis Type is required."
"RTN","IBTRH5I",226,0)
 .. S MISSING=MISSING+1,MISSING("Diagnosis Type "_XX)=XX1
"RTN","IBTRH5I",227,0)
 . I DXCODE="" D
"RTN","IBTRH5I",228,0)
 .. I XX=START,$$GET1^DIQ(356.22,IENS,10.01,"I")'="" S XX1="Diagnosis entry number "_XX_" Diagnosis Code must be defined if Home Health Start Date is defined."
"RTN","IBTRH5I",229,0)
 .. E  S XX1="Diagnosis entry number "_XX_" Diagnosis Code is required."
"RTN","IBTRH5I",230,0)
 .. S MISSING=MISSING+1,MISSING("Diagnosis Code "_XX)=XX1
"RTN","IBTRH5I",231,0)
 . I DXDATE="",XX=START,$$GET1^DIQ(356.22,IENS,10.01,"I")'="" D
"RTN","IBTRH5I",232,0)
 .. S XX1="Diagnosis Date Known must be defined if Home Health Start Date is defined."
"RTN","IBTRH5I",233,0)
 .. S MISSING=MISSING+1,MISSING("Diagnosis Date Known "_XX)=XX1
"RTN","IBTRH5I",234,0)
 . I DXTYPE'="",DXTYPE'=3,DXTYPE'=7,XX=START,$$GET1^DIQ(356.22,IENS,10.01,"I")'="" D
"RTN","IBTRH5I",235,0)
 .. S YY=$$GET1^DIQ(356.223,XX_","_IBTRIEN_",",.01)
"RTN","IBTRH5I",236,0)
 .. S XX="Diagnosis Type: '"_YY_"' must be 'Principal Diagnosis'"
"RTN","IBTRH5I",237,0)
 .. S MISSING=MISSING+1,MISSING("Diagnosis Type")=XX
"RTN","IBTRH5I",238,0)
 Q
"RTN","IBTRH5I",239,0)
 ;
"RTN","IBTRH5I",240,0)
SVCMISS(IBTRIEN,MISSING)    ; Checks for a Procedure code on every Service Line
"RTN","IBTRH5I",241,0)
 ; Input:   IBTRIEN - IEN of the entry being checked
"RTN","IBTRH5I",242,0)
 ;          MISSING - Current array and count of missing required fields
"RTN","IBTRH5I",243,0)
 ; Output:  MISSING - Updated array and count of missing required fields
"RTN","IBTRH5I",244,0)
 N PCODE,PTYP,SIEN,XX,YY,TYPE,REV,UNIT,COUNT
"RTN","IBTRH5I",245,0)
 S SIEN=0
"RTN","IBTRH5I",246,0)
 F  D  Q:+SIEN=0
"RTN","IBTRH5I",247,0)
 . S SIEN=$O(^IBT(356.22,IBTRIEN,16,SIEN))
"RTN","IBTRH5I",248,0)
 . Q:+SIEN=0
"RTN","IBTRH5I",249,0)
 . S YY="Service Line #"_$$SLINE(IBTRIEN,SIEN)
"RTN","IBTRH5I",250,0)
 . S PTYPE=$$GET1^DIQ(356.2216,SIEN_","_IBTRIEN_",",1.01,"I")
"RTN","IBTRH5I",251,0)
 . I PTYPE="N4" S PCODE=$$GET1^DIQ(356.2216,SIEN_","_IBTRIEN_",",12.01,"I")
"RTN","IBTRH5I",252,0)
 . E  S PCODE=$$GET1^DIQ(356.2216,SIEN_","_IBTRIEN_",",1.02,"I")
"RTN","IBTRH5I",253,0)
 . S TYPE=$$GET1^DIQ(356.2216,SIEN_","_IBTRIEN_",",1.12,"I")
"RTN","IBTRH5I",254,0)
 . S REV=$$GET1^DIQ(356.2216,SIEN_","_IBTRIEN_",",2.06,"I")
"RTN","IBTRH5I",255,0)
 . I PTYPE="" D
"RTN","IBTRH5I",256,0)
 .. I TYPE="I",REV'="" Q  ; for Institutional Lines, Service Line Revenue Code may be used instead of Proc Code
"RTN","IBTRH5I",257,0)
 .. S XX=YY_" is missing the Procedure Coding Method"
"RTN","IBTRH5I",258,0)
 .. S MISSING=MISSING+1,MISSING(YY_" A")=XX
"RTN","IBTRH5I",259,0)
 . I PCODE="" D
"RTN","IBTRH5I",260,0)
 .. I TYPE="I",REV'="" Q  ; for Institutional Lines, Service Line Revenue Code may be used instead of Proc Code
"RTN","IBTRH5I",261,0)
 .. S XX=YY_" is missing the Procedure Code"
"RTN","IBTRH5I",262,0)
 .. S MISSING=MISSING+1,MISSING(YY_" B")=XX
"RTN","IBTRH5I",263,0)
 . I TYPE'="D" D  ;Dental lines do not have Unit Count or Unit Measurement Indicator
"RTN","IBTRH5I",264,0)
 .. S UNIT=$$GET1^DIQ(356.2216,SIEN_","_IENS,1.1),COUNT=$$GET1^DIQ(356.2216,SIEN_","_IENS,1.11)
"RTN","IBTRH5I",265,0)
 .. I (UNIT=""&(COUNT'=""))!(UNIT'=""&(COUNT="")) D  ;If either Unit Measurement Code or Service Unit Count exist, both are required
"RTN","IBTRH5I",266,0)
 ... I UNIT="" D MISSING(YY_" C",YY_" is missing the Units Count measurement indicator.") Q
"RTN","IBTRH5I",267,0)
 ... D MISSING(YY_" D",YY_" is missing the Unit Count for the service.")
"RTN","IBTRH5I",268,0)
 . S UNIT=$$GET1^DIQ(356.2216,SIEN_","_IENS,5.01),COUNT=$$GET1^DIQ(356.2216,SIEN_","_IENS,5.02)
"RTN","IBTRH5I",269,0)
 . I (UNIT=""&(COUNT'=""))!(UNIT'=""&(COUNT="")) D  ;If either HCSD Quant Qual or HCSD Serv Unit Count exits, both are required
"RTN","IBTRH5I",270,0)
 .. I UNIT="" D MISSING(YY_" E",YY_" is missing the HCSD Quantity Qualifier for this service line.") Q
"RTN","IBTRH5I",271,0)
 .. D MISSING(YY_" F",YY_" is missing the HCSD Service Unit Count for this service line.")
"RTN","IBTRH5I",272,0)
 . I $$GET1^DIQ(356.2216,SIEN_","_IENS,5.05)="",$$GET1^DIQ(356.2216,SIEN_","_IENS,5.06)'="" D
"RTN","IBTRH5I",273,0)
 .. D MISSING(YY_" G",YY_" is missing the HCSD Time Period Qualifier value that describes the HCSD Perdio Count.")
"RTN","IBTRH5I",274,0)
 . I $D(^IBT(356.22,IBTRIEN,16,SIEN,4)) D
"RTN","IBTRH5I",275,0)
 .. N TOO
"RTN","IBTRH5I",276,0)
 .. S TOO=0 F  S TOO=$O(^IBT(356.22,IBTRIEN,16,SIEN,4,TOO)) Q:TOO'=+TOO  D
"RTN","IBTRH5I",277,0)
 ... I $$GET1^DIQ(356.22164,TOO_","_SIEN_","_IENS,.01)="" D MISSING(YY_" Tooth "_TOO,YY_" Tooth multiple "_TOO_" is missing the required Tooth Code.")
"RTN","IBTRH5I",278,0)
 . I $D(^IBT(356.22,IBTRIEN,16,SIEN,6)) D
"RTN","IBTRH5I",279,0)
 .. N AT
"RTN","IBTRH5I",280,0)
 .. S AT=0 F  S AT=$O(^IBT(356.22,IBTRIEN,16,SIEN,6,AT)) Q:AT'=+AT  D
"RTN","IBTRH5I",281,0)
 ... I $$GET1^DIQ(356.22166,AT_","_SIEN_","_IENS,.01)="" D MISSING(YY_" Attachments .01"_AT,YY_" Attachment multiple "_AT_" is missing the required Report Type Code.")
"RTN","IBTRH5I",282,0)
 ... I $$GET1^DIQ(356.22166,AT_","_SIEN_","_IENS,.02)="" D MISSING(YY_" Attachments .02"_AT,YY_" Attachment multiple "_AT_" is missing the required Report Transmission Code.")
"RTN","IBTRH5I",283,0)
 Q
"RTN","IBTRH5I",284,0)
 ;
"RTN","IBTRH5I",285,0)
SLINE(IBTRIEN,SIEN) ; Returns the Service line number for a line
"RTN","IBTRH5I",286,0)
 ; Input:   IBTRIEN - IEN of the entry being checked
"RTN","IBTRH5I",287,0)
 ;          SIEN    - IEN of the service line being checked
"RTN","IBTRH5I",288,0)
 ; Returns: Service line number
"RTN","IBTRH5I",289,0)
 N CNT,IEN
"RTN","IBTRH5I",290,0)
 S (CNT,IEN)=0
"RTN","IBTRH5I",291,0)
 F  D  Q:+IEN=0!(SIEN=IEN)
"RTN","IBTRH5I",292,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,16,IEN))
"RTN","IBTRH5I",293,0)
 . Q:+IEN=0
"RTN","IBTRH5I",294,0)
 . S CNT=CNT+1
"RTN","IBTRH5I",295,0)
 Q CNT
"RTN","IBTRH5I",296,0)
 ;
"RTN","IBTRH5I",297,0)
ATTMISS(IBTRIEN,MISSING)   ; Checks for an Attending Physician multiple for
"RTN","IBTRH5I",298,0)
 ; inpatient entries
"RTN","IBTRH5I",299,0)
 ; Input:   IBTRIEN - IEN of the entry being checked
"RTN","IBTRH5I",300,0)
 ;          MISSING - Current array and count of missing required fields
"RTN","IBTRH5I",301,0)
 ; Output:  MISSING - Updated array and count of missing required fields
"RTN","IBTRH5I",302,0)
 N DXCODE,DXDATE,DXTYPE,FOUND,IEN,XX,YY
"RTN","IBTRH5I",303,0)
 Q:$$GET1^DIQ(356.22,IBTRIEN_",",.04,"I")="O"   ; Outpatient entry
"RTN","IBTRH5I",304,0)
 S (FOUND,IEN)=0
"RTN","IBTRH5I",305,0)
 F  D  Q:+IEN=0!FOUND
"RTN","IBTRH5I",306,0)
 . S IEN=$O(^IBT(356.22,IBTRIEN,13,IEN))
"RTN","IBTRH5I",307,0)
 . Q:+IEN=0
"RTN","IBTRH5I",308,0)
 . S XX=$$GET1^DIQ(356.2213,IEN_","_IBTRIEN_",",.01,"I")
"RTN","IBTRH5I",309,0)
 . S XX=$$GET1^DIQ(365.022,XX_",",.01,"I")
"RTN","IBTRH5I",310,0)
 . Q:XX'=71
"RTN","IBTRH5I",311,0)
 . S:$$GET1^DIQ(356.2213,IEN_","_IBTRIEN_",",.03,"I")'="" FOUND=1
"RTN","IBTRH5I",312,0)
 Q:FOUND
"RTN","IBTRH5I",313,0)
 ;
"RTN","IBTRH5I",314,0)
 S XX="Attending Physician must be defined for inpatient entries"
"RTN","IBTRH5I",315,0)
 S MISSING=MISSING+1,MISSING("Attending Physician")=XX
"RTN","IBTRH5I",316,0)
 Q
"RTN","IBTRH5I",317,0)
 ;
"RTN","IBTRH5I",318,0)
PERSON(PROV)   ;EP
"RTN","IBTRH5I",319,0)
 ; Checks to see if the specified Provider Type PTYPE is a Person or Non-Person
"RTN","IBTRH5I",320,0)
 ; Input:   PROV    - IEN of the Provider
"RTN","IBTRH5I",321,0)
 ; Output:  1 if PROV is a Person, 2 - Otherwise
"RTN","IBTRH5I",322,0)
 N PTYPE,XX
"RTN","IBTRH5I",323,0)
 S XX=$P(PROV,";",2)                            ; What file is it filed in?
"RTN","IBTRH5I",324,0)
 I XX="VA(200," Q 1
"RTN","IBTRH5I",325,0)
 I XX="DIC(4," Q 2
"RTN","IBTRH5I",326,0)
 S XX=$P(PROV,";",1)
"RTN","IBTRH5I",327,0)
 S PTYPE=$$GET1^DIQ(355.93,XX_",",.02,"I")
"RTN","IBTRH5I",328,0)
 Q:PTYPE=2 1
"RTN","IBTRH5I",329,0)
 Q 2
"RTN","IBTRH5I",330,0)
 ;
"RTN","IBTRH5I",331,0)
CRT278(IBTRIEN) ;EP
"RTN","IBTRH5I",332,0)
 ; Creates a 278 Request for the selected worklist event
"RTN","IBTRH5I",333,0)
 ; Input:   IBTRIEN     - Internal IEN of the selected event
"RTN","IBTRH5I",334,0)
 ; Output:  278 Request created for the selected worklist event.
"RTN","IBTRH5I",335,0)
 ; Returns: 1 - if the user exited 'normally', 0 if user '^' exited
"RTN","IBTRH5I",336,0)
 N CNARY,DA,DIE,DFN,DR,DTOUT,IBBACK,IBCCAT,IBCERTCD,IBDISDT,IBDXCTR,IBEVDT
"RTN","IBTRH5I",337,0)
 N IBEXIT,IBFILT,IBMLN,IBNEW,IBOXYET,IBREQCAT,IBRESP,IBPSTAT,IBSSTYP,IBSTYP,IBTEMP
"RTN","IBTRH5I",338,0)
 N IBUPOUT,NODE19,PATLINE,VADM,X,XX,XX2,Y,YY,Z
"RTN","IBTRH5I",339,0)
 ; New special effects characters
"RTN","IBTRH5I",340,0)
 N IOHTS,IOHUP,IOICH,IOIND,IOINH,IOINLOW,IOINORM,IOINSERT,IOIRM0,IOIRM1
"RTN","IBTRH5I",341,0)
 N IOKP0,IOKP1,IOPK2,IOPK3,IOKP4,IOKP5,IOREMOVE,IORESET,IORLF,IORVOFF,IORVON
"RTN","IBTRH5I",342,0)
 N IOSC,IOSELECT,IOSGR0,IOSMPLX,IOSTBM,IOSWL,IOTBC,IOTBCALL,IOUOFF,IOUON,IOUPAR
"RTN","IBTRH5I",343,0)
 S DA=IBTRIEN,DIE=356.22,DR="[IB ADD/EDIT 278]",IBUPOUT=0
"RTN","IBTRH5I",344,0)
 S NODE19=$G(^IBT(356.22,IBTRIEN,19))
"RTN","IBTRH5I",345,0)
 ; Set-up special effects characters (next 3 lines)
"RTN","IBTRH5I",346,0)
 D HOME^%ZIS
"RTN","IBTRH5I",347,0)
 S X="IORVON;IORVOFF"
"RTN","IBTRH5I",348,0)
 D ENS^%ZISS
"RTN","IBTRH5I",349,0)
 D FULL^VALM1
"RTN","IBTRH5I",350,0)
 ; Set up Patient Data line
"RTN","IBTRH5I",351,0)
 S DFN=$$GET1^DIQ(356.22,IBTRIEN_",",.02,"I")
"RTN","IBTRH5I",352,0)
 S Z=""
"RTN","IBTRH5I",353,0)
 I +$G(DFN) D
"RTN","IBTRH5I",354,0)
 . D DEM^VADPT
"RTN","IBTRH5I",355,0)
 . S PATLINE="Patient: "_$E(VADM(1),1,28),Z=Z_$J("",35-$L(Z))_$P(VADM(2),"^",2)
"RTN","IBTRH5I",356,0)
 . S PATLINE=PATLINE_"    DOB: "_$P(VADM(3),"^",2)_"    AGE: "_VADM(4)
"RTN","IBTRH5I",357,0)
 W @IOF
"RTN","IBTRH5I",358,0)
 ; Set 'in-progress mark'
"RTN","IBTRH5I",359,0)
 I $$STATUS^IBTRH2(IBTRIEN)="0" D PRMARK1^IBTRH1(IBTRIEN,"01")
"RTN","IBTRH5I",360,0)
 ; Set Initial Values
"RTN","IBTRH5I",361,0)
 S IBRESP=$P($G(^IBT(356.22,IBTRIEN,0)),"^",18)         ; 1 - Created from Response
"RTN","IBTRH5I",362,0)
 S IBOXYET=$$OXYET^IBTRH5C(IBTRIEN)                     ; Oxygen Equip Type 'D' or 'E'
"RTN","IBTRH5I",363,0)
 S IBPSTAT=$$GET1^DIQ(356.22,IBTRIEN_",",.04,"I")       ; Patient Status of the entry
"RTN","IBTRH5I",364,0)
 S IBEVDT=$$GET1^DIQ(356.22,IBTRIEN_",",.07,"I")        ; Internal Event Date, which may be a range.
"RTN","IBTRH5I",365,0)
 S IBDISDT=$P(IBEVDT,"-",2)                             ; Grab second "-" piece for Discharge Date.
"RTN","IBTRH5I",366,0)
 S IBEVDT=$P(IBEVDT,"-",1)                              ; Grab first "-" piece for Event Date.
"RTN","IBTRH5I",367,0)
 I IBPSTAT="I" D
"RTN","IBTRH5I",368,0)
 . I IBDISDT'="" S IBDISDT=$$FMTE^XLFDT(IBDISDT,"5Z") Q
"RTN","IBTRH5I",369,0)
 . S IBDISDT=$$GET1^DIQ(356.22,IBTRIEN_",",2.22,"I")
"RTN","IBTRH5I",370,0)
 . I IBDISDT'="" S IBDISDT=$$FMTE^XLFDT(IBDISDT,"5Z") Q
"RTN","IBTRH5I",371,0)
 . ; Attempt to pull discharge date from Patient Movement file.
"RTN","IBTRH5I",372,0)
 . N VAIP
"RTN","IBTRH5I",373,0)
 . S VAIP("D")=IBEVDT
"RTN","IBTRH5I",374,0)
 . D IN5^VADPT
"RTN","IBTRH5I",375,0)
 . S IBDISDT=$G(VAIP(17,1))
"RTN","IBTRH5I",376,0)
 . I IBDISDT="" Q
"RTN","IBTRH5I",377,0)
 . S IBDISDT=$$FMTE^XLFDT(IBDISDT,"5Z")
"RTN","IBTRH5I",378,0)
 S IBEVDT=$$FMTE^XLFDT(IBEVDT,"5Z")                     ; Format Event Date
"RTN","IBTRH5I",379,0)
 K DUOUT
"RTN","IBTRH5I",380,0)
 D ^DIE
"RTN","IBTRH5I",381,0)
 S XX=$S(IBUPOUT:0,$D(Y):0,1:1)                         ; Detect '^' exit
"RTN","IBTRH5I",382,0)
 I 'XX,"^01^03^"[(U_$$STATUS^IBTRH2(IBTRIEN)_U) D:$$CLRASK^IBTRH5K() CLRENTRY^IBTRH5K(IBTRIEN)
"RTN","IBTRH5I",383,0)
 Q XX
"RTN","IBTRH5I",384,0)
 ;
"RTN","IBTRH5I",385,0)
COMQUAL()   ;Function EP for Screening Communication Qualifier fields
"RTN","IBTRH5I",386,0)
 ; This Function is called from the 356.22 Dictionary Communication Qualifier fields.
"RTN","IBTRH5I",387,0)
 ; These fields include the following:
"RTN","IBTRH5I",388,0)
 ;              356.22 - 19.01, 19.02, 19.03
"RTN","IBTRH5I",389,0)
 ;              356.2213 - .07, .08, .09
"RTN","IBTRH5I",390,0)
 ;              356.22168 - .07, .08, .09              
"RTN","IBTRH5I",391,0)
 ; Screens some specific entries from 365.021
"RTN","IBTRH5I",392,0)
 ; Input:   DA      - IEN of the 356.22 entry being edited
"RTN","IBTRH5I",393,0)
 ;          Y       - Internal Value of the user response
"RTN","IBTRH5I",394,0)
 ; Returns: 1 - Data input by the user is valid, 0 otherwise
"RTN","IBTRH5I",395,0)
 N CDE,IEN,IENS
"RTN","IBTRH5I",396,0)
 ; First Get all of IENS that we want to filter out
"RTN","IBTRH5I",397,0)
 F CDE="ED","HP","WP" D
"RTN","IBTRH5I",398,0)
 . S IEN=$O(^IBE(365.021,"B",CDE,""))
"RTN","IBTRH5I",399,0)
 . S:IEN'="" IENS(IEN)=""
"RTN","IBTRH5I",400,0)
 Q:$D(IENS(Y)) 0
"RTN","IBTRH5I",401,0)
 Q 1
"RTN","IBTRH5I",402,0)
 ;
"RTN","IBTRH5I",403,0)
MISSING(SUB,DESC) ; Function to generate MISSING array
"RTN","IBTRH5I",404,0)
 ; Input: SUB - subscript of MISSING array
"RTN","IBTRH5I",405,0)
 ;        DESC - description of error condition
"RTN","IBTRH5I",406,0)
 ; Returns: MISSING  array
"RTN","IBTRH5I",407,0)
 ;
"RTN","IBTRH5I",408,0)
 S MISSING=MISSING+1
"RTN","IBTRH5I",409,0)
 S MISSING(SUB)=DESC
"RTN","IBTRH5I",410,0)
 Q
"RTN","IBTRH5J")
0^40^B115879805^n/a
"RTN","IBTRH5J",1,0)
IBTRH5J ;ALB/JWS - HCSR Create 278 Request ;11-DEC-2014
"RTN","IBTRH5J",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5J",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5J",4,0)
 ;;
"RTN","IBTRH5J",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5J",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5J",7,0)
 ;
"RTN","IBTRH5J",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5J",9,0)
 ; REQMISS      - Checks for missing required fields in a request 
"RTN","IBTRH5J",10,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5J",11,0)
 Q
"RTN","IBTRH5J",12,0)
 ;
"RTN","IBTRH5J",13,0)
REQMISS ; Additional required field checking for 278 transaction
"RTN","IBTRH5J",14,0)
 ; Input:   CTC         - Certification Type Code IEN
"RTN","IBTRH5J",15,0)
 ;          IENS        - IEN_"," of the entry being checked
"RTN","IBTRH5J",16,0)
 ;          IBTRIEN     - IEN of the entry being checked
"RTN","IBTRH5J",17,0)
 ;          MISSING()   - Current array of missing fields
"RTN","IBTRH5J",18,0)
 ; Output:  MISSING()   - Updated array of missing fields
"RTN","IBTRH5J",19,0)
 N ACERT,ACOND,ADMIT,AMBCERT,AMBCOND,CHCERT,CHCOND
"RTN","IBTRH5J",20,0)
 N DIR,DIROUT,DIRUT,DMECERT,DMECOND,DTOUT,DUOUT,ED,FLCERT,FLCOND,HCSDQ,HCSDCT
"RTN","IBTRH5J",21,0)
 N I,MCERT,MCOND,OE1,OE2,OE3,OXYCERT,OXYCOND,PL,PW,SD,SPC,SPCT,TC,TD,TSN,TUM
"RTN","IBTRH5J",22,0)
 N WU,X,XX,Y,YY
"RTN","IBTRH5J",23,0)
 ;
"RTN","IBTRH5J",24,0)
 I $$GET1^DIQ(356.22,IENS,2.08)="",$$GET1^DIQ(356.22,IENS,2.09)'="" D  ; Related Causes Code #1 is required if #2 has value
"RTN","IBTRH5J",25,0)
 . D MISSING(2.08,"Related Causes #1 is required if Related Causes #2 has a value.")
"RTN","IBTRH5J",26,0)
 ;
"RTN","IBTRH5J",27,0)
 I $$GET1^DIQ(356.22,IENS,2.09)="",$$GET1^DIQ(356.22,IENS,2.1)'="" D  ; Related Causes Code #2 is required if #3 has value
"RTN","IBTRH5J",28,0)
 . D MISSING(2.09,"Related Causes #2 is required if Related Causes #3 has a value.")
"RTN","IBTRH5J",29,0)
 ;
"RTN","IBTRH5J",30,0)
 I CTC=1,$$GET1^DIQ(356.22,IENS,2.13)="" D  ; Level of Service is required if Cert Type Code = 1 Immediate Appeal
"RTN","IBTRH5J",31,0)
 . D MISSING(2.13,"Level of Service is required if Certification Type Code is Appeal - Immediate.")
"RTN","IBTRH5J",32,0)
 ;
"RTN","IBTRH5J",33,0)
 S HCSDQ=$$GET1^DIQ(356.22,IENS,4.01),HCSDCT=$$GET1^DIQ(356.22,IENS,4.02)
"RTN","IBTRH5J",34,0)
 I HCSDQ="",HCSDCT'="" D  ; HCSD Quantity Qualifier is required if HCSD Service Unit Count
"RTN","IBTRH5J",35,0)
 . D MISSING(4.01,"HCSD Quantity Qualifier is required if HCSD Service Unit Count has a value.")
"RTN","IBTRH5J",36,0)
 I HCSDQ'="",HCSDCT="" D  ; HCSD Service Unit Count is required if Qualifer exists
"RTN","IBTRH5J",37,0)
 . D MISSING(4.02,"HCSD Service Unit Count is required if the HCSD Quantity Qualifier has a value.")
"RTN","IBTRH5J",38,0)
 ;
"RTN","IBTRH5J",39,0)
 I $$GET1^DIQ(356.22,IENS,4.03)="",$$GET1^DIQ(356.22,IENS,4.04)'="" D  ;HCSD Units of Measure is required if Modulus has value
"RTN","IBTRH5J",40,0)
 . D MISSING(4.03,"HCSD Units of Measurement Code is required if the HCSD Sample Selection Modulus has a value.")
"RTN","IBTRH5J",41,0)
 ;
"RTN","IBTRH5J",42,0)
 I $$GET1^DIQ(356.22,IENS,4.05)="",$$GET1^DIQ(356.22,IENS,4.06)'="" D  ;HCSD Time Period Qual is required if Period Count exists
"RTN","IBTRH5J",43,0)
 . D MISSING(4.05,"HCSD Time Period Qualifier is required of HCSD Period Count has a value.")
"RTN","IBTRH5J",44,0)
 ;
"RTN","IBTRH5J",45,0)
 S AMBCERT=$$GET1^DIQ(356.22,IENS,4.09),AMBCOND=$$GET1^DIQ(356.22,IENS,4.1)
"RTN","IBTRH5J",46,0)
 I (AMBCERT=""&(AMBCOND'=""))!(AMBCERT'=""&(AMBCOND="")) D  ;if either AMBULANCE CERT COND or Cond #1 are present, both are required
"RTN","IBTRH5J",47,0)
 . I AMBCERT="" D MISSING(4.09,"Ambulance Certification Condition Indicator is required if Ambulance Condition Indicator has a value.") Q
"RTN","IBTRH5J",48,0)
 . D MISSING(4.1,"Ambulance Condition Indicator is required if the Ambulance Certification Condition Indicator has a value.")
"RTN","IBTRH5J",49,0)
 ;
"RTN","IBTRH5J",50,0)
 S CHCERT=$$GET1^DIQ(356.22,IENS,5.01),CHCOND=$$GET1^DIQ(356.22,IENS,5.02)
"RTN","IBTRH5J",51,0)
 I (CHCERT=""&(CHCOND'=""))!(CHCERT'=""&(CHCOND="")) D  ;if either Chiropractic cert or Cond #1 are present, both are required
"RTN","IBTRH5J",52,0)
 . I CHCERT="" D MISSING(5.01,"Chiropractic Certification Condition is required if the Condition Indicator has a value.") Q
"RTN","IBTRH5J",53,0)
 . D MISSING(5.02,"Chiropractic Condition #1 is required if the Chiropractic Certification Condition indicator has a value.")
"RTN","IBTRH5J",54,0)
 ;
"RTN","IBTRH5J",55,0)
 S DMECERT=$$GET1^DIQ(356.22,IENS,5.07),DMECOND=$$GET1^DIQ(356.22,IENS,5.08)
"RTN","IBTRH5J",56,0)
 I (DMECERT=""&(DMECOND'=""))!(DMECERT'=""&(DMECOND="")) D  ;if either DME Cert or DME Cond are present, both are required
"RTN","IBTRH5J",57,0)
 . I DMECERT="" D MISSING(5.07,"DME Certification Condition Indicator is required if DME Condition Indicator has a value.") Q
"RTN","IBTRH5J",58,0)
 . D MISSING(5.08,"DME Condition #1 is required if DME Certification Condition Indicator has a value.")
"RTN","IBTRH5J",59,0)
 ;
"RTN","IBTRH5J",60,0)
 S OXYCERT=$$GET1^DIQ(356.22,IENS,5.13),OXYCOND=$$GET1^DIQ(356.22,IENS,5.14)
"RTN","IBTRH5J",61,0)
 I (OXYCERT=""&(OXYCOND'=""))!(OXYCERT'=""&(OXYCOND="")) D  ;if either Oxygen Cert or Oxygen Cond are present, both are required
"RTN","IBTRH5J",62,0)
 . I OXYCERT="" D MISSING(5.13,"Oxygen Certification Condition Indicator is required if Oxygen Condition #1 has a value.") Q
"RTN","IBTRH5J",63,0)
 . D MISSING(5.14,"Oxygen Condition #1 is required if Oxygen Certification Indicator has a value.")
"RTN","IBTRH5J",64,0)
 ;
"RTN","IBTRH5J",65,0)
 S FLCERT=$$GET1^DIQ(356.22,IENS,6.01),FLCOND=$$GET1^DIQ(356.22,IENS,6.02)
"RTN","IBTRH5J",66,0)
 I (FLCERT=""&(FLCOND'=""))!(FLCERT'=""&(FLCOND="")) D  ;if either Funct. Limit Cert or Condition #1 are present, both are required
"RTN","IBTRH5J",67,0)
 . I FLCERT="" D MISSING(6.01,"Functional Limitations Certification Indicator is required if Functional Limitations Condition #1 has a value.") Q
"RTN","IBTRH5J",68,0)
 . D MISSING(6.02,"Function Limitations Condition #1 is required if Functional Limitations Certification Indicator has a value.")
"RTN","IBTRH5J",69,0)
 ;
"RTN","IBTRH5J",70,0)
 S ACERT=$$GET1^DIQ(356.22,IENS,6.07),ACOND=$$GET1^DIQ(356.22,IENS,6.08)
"RTN","IBTRH5J",71,0)
 I (ACERT=""&(ACOND'=""))!(ACERT'=""&(ACOND="")) D  ;if either Activities Cert or Condition #1 are present, both are required
"RTN","IBTRH5J",72,0)
 . I ACERT="" D MISSING(6.07,"Activities Certification Condition is required if Activities Condition #1 has a value.") Q
"RTN","IBTRH5J",73,0)
 . D MISSING(6.08,"Activities Condition #1 is required if Activities Certification Condition Indicator has a value.")
"RTN","IBTRH5J",74,0)
 ;
"RTN","IBTRH5J",75,0)
 S MCERT=$$GET1^DIQ(356.22,IENS,6.13),MCOND=$$GET1^DIQ(356.22,IENS,6.14)
"RTN","IBTRH5J",76,0)
 I (MCERT=""&(MCOND'=""))!(MCERT'=""&(MCOND="")) D  ;if either Mental Cert of Mental Condition #1 are present, both are required
"RTN","IBTRH5J",77,0)
 . I MCERT="" D MISSING(6.13,"Mental Status Certification Condition is required if Mental Status Condition #1 has a value.") Q
"RTN","IBTRH5J",78,0)
 . D MISSING(6.14,"Mental Status Condition #1 is required if Mental Status Certification Condition has a value.")
"RTN","IBTRH5J",79,0)
 ;
"RTN","IBTRH5J",80,0)
 S ADMIT=$$GET1^DIQ(356.22,IENS,2.01,"I") I ADMIT S ADMIT=$P($G(^IBT(356.001,ADMIT,0)),"^")
"RTN","IBTRH5J",81,0)
 I ADMIT="AR",$$GET1^DIQ(356.22,IENS,7.01)="" D  ;Admission Type is required if Request Category = 'AR'
"RTN","IBTRH5J",82,0)
 . D MISSING(7.01,"Admission Type is required if the Request Category is 'AR' for Admission Review.")
"RTN","IBTRH5J",83,0)
 ;
"RTN","IBTRH5J",84,0)
 S WU=$$GET1^DIQ(356.22,IENS,18.01),PW=$$GET1^DIQ(356.22,IENS,18.02)
"RTN","IBTRH5J",85,0)
 I (WU=""&(PW'=""))!(WU'=""&(PW="")) D  ;if either Unit of Measurement or Patient Weight have value, then both are required
"RTN","IBTRH5J",86,0)
 . I WU="" D MISSING(18.01,"The Unit or Basis of Measurement Code for Patient Weight is required if a Patient Weight exists.") Q
"RTN","IBTRH5J",87,0)
 . D MISSING(18.02,"If a Unit or Basis of Measurement Code exists for Patient Weight, then a Patient Weight amount is required.")
"RTN","IBTRH5J",88,0)
 ;
"RTN","IBTRH5J",89,0)
 I $$GET1^DIQ(356.22,IENS,18.03)="" D
"RTN","IBTRH5J",90,0)
 . S XX=$G(^IBT(356.22,IBTRIEN,18)) F I=1,2,4:1:10 I $P(XX,"^",I)'="" S XX="BAD" Q
"RTN","IBTRH5J",91,0)
 . I $G(XX)'="BAD" Q
"RTN","IBTRH5J",92,0)
 . D MISSING(18.03,"The Ambulance Transport Code is required if any Ambulance Transport information is to be sent via this 278 Request.")
"RTN","IBTRH5J",93,0)
 ;
"RTN","IBTRH5J",94,0)
 S TUM=$$GET1^DIQ(356.22,IENS,18.05),TD=$$GET1^DIQ(356.22,IENS,18.06)
"RTN","IBTRH5J",95,0)
 I (TUM=""&(TD'=""))!(TUM'=""&(TD="")) D  ;If either Ambulance Distance Unit of Measure or Transport Distance exists, both are required
"RTN","IBTRH5J",96,0)
 . I TUM="" D MISSING(18.05,"Ambulance Distance Unit of Measurement Code is required if a Transport Distance has been entered.") Q
"RTN","IBTRH5J",97,0)
 . D MISSING(18.06,"Ambulance Transport Distance is required if an Ambulance Distance Unit of Measure has been entered.")
"RTN","IBTRH5J",98,0)
 ;
"RTN","IBTRH5J",99,0)
 S TSN=$$GET1^DIQ(356.22,IENS,7.05),TC=$$GET1^DIQ(356.22,IENS,7.06)
"RTN","IBTRH5J",100,0)
 I (TSN=""&(TC'=""))!(TSN'=""&(TC="")) D  ;if either Treatment Series Number or Treatment Count have value, both are required
"RTN","IBTRH5J",101,0)
 . I TSN="" D MISSING(7.05,"Treatment Series Number is required if Treatment Count has a value.") Q
"RTN","IBTRH5J",102,0)
 . D MISSING(7.06,"Treatment Count is required if Treatment Series Number has a value.")
"RTN","IBTRH5J",103,0)
 ;
"RTN","IBTRH5J",104,0)
 I $$GET1^DIQ(356.22,IENS,7.08)'="",$$GET1^DIQ(356.22,IENS,7.07)="" D  ;subluxation level code#1 must have value if code#2 exists
"RTN","IBTRH5J",105,0)
 . D MISSING(7.07,"Subluxation Level Code #1 is required if Subluxation Level Code #2 has a value.")
"RTN","IBTRH5J",106,0)
 ;
"RTN","IBTRH5J",107,0)
 I $$GET1^DIQ(356.22,IENS,7.09)="" D
"RTN","IBTRH5J",108,0)
 . S XX=$G(^IBT(356.22,IBTRIEN,7)) F I=5:1:8,11:1:13 I $P(XX,"^",I)'="" S XX="BAD" Q
"RTN","IBTRH5J",109,0)
 . I XX'="BAD" Q
"RTN","IBTRH5J",110,0)
 . D MISSING(7.09,"Patient Condition Code is required if any Spinal Manipulation Service Information is to be sent via this 278 Request.")
"RTN","IBTRH5J",111,0)
 ;
"RTN","IBTRH5J",112,0)
 I $$GET1^DIQ(356.22,IENS,7.1)="" D
"RTN","IBTRH5J",113,0)
 . S XX=$G(^IBT(356.22,IBTRIEN,7)) F I=5:1:8,11:1:13 I $P(XX,"^",I)'="" S XX="BAD" Q
"RTN","IBTRH5J",114,0)
 . I XX'="BAD" Q
"RTN","IBTRH5J",115,0)
 . D MISSING(7.1,"Complication Indicator is required if any Spinal Manipulation Service Information is to be sent via this 278 Request.")
"RTN","IBTRH5J",116,0)
 ;
"RTN","IBTRH5J",117,0)
 S OE1=$$GET1^DIQ(356.22,IENS,8.01),OE2=$$GET1^DIQ(356.22,IENS,8.02),OE3=$$GET1^DIQ(356.22,IENS,8.03)
"RTN","IBTRH5J",118,0)
 I OE1="",($$GET1^DIQ(356.22,IENS,8.05)'=""!($$GET1^DIQ(356.22,IENS,9.08)'="")!(OE2'="")) D
"RTN","IBTRH5J",119,0)
 . D MISSING(8.01,"Oxygen Equipment Type Code #1 is required if Home Oxygen Therapy information is included in this 278 Request.")
"RTN","IBTRH5J",120,0)
 ;
"RTN","IBTRH5J",121,0)
 I OE2="",OE3'="" D
"RTN","IBTRH5J",122,0)
 . D MISSING(8.02,"Oxygen Equipment Type Code #2 is required if Oxygen Equipment Type Code #3 has a value.")
"RTN","IBTRH5J",123,0)
 ;
"RTN","IBTRH5J",124,0)
 I $$GET1^DIQ(356.22,IENS,8.05)="",(OE1'=""!($$GET1^DIQ(356.22,IENS,9.08)'="")) D
"RTN","IBTRH5J",125,0)
 . D MISSING(8.05,"Oxygen Flow Rate is required if Home Oxygen Therapy information is included in this 278 Request.")
"RTN","IBTRH5J",126,0)
 ;
"RTN","IBTRH5J",127,0)
 I OE1'="",$$GET1^DIQ(356.22,IENS,9.01)="",$$GET1^DIQ(356.22,IENS,9.02)="" D
"RTN","IBTRH5J",128,0)
 . D MISSING(8.01,"If Home Oxygen Therapy information is included in this 278 Request, then either Arterial Blood Gas Quantity or Oxygen Saturation Quantity is required.")
"RTN","IBTRH5J",129,0)
 ;
"RTN","IBTRH5J",130,0)
 I $$GET1^DIQ(356.22,IENS,9.08)="",(OE1'=""!($$GET1^DIQ(356.22,IENS,8.05)'="")) D
"RTN","IBTRH5J",131,0)
 . D MISSING(9.08,"If Home Oxygen Therapy information is included in this 278 Request, then the Oxygen Delivery System Code is required.")
"RTN","IBTRH5J",132,0)
 ;
"RTN","IBTRH5J",133,0)
 I $$GET1^DIQ(356.22,IENS,9.07)="" D
"RTN","IBTRH5J",134,0)
 . I OE1=4!(OE2=4)!(OE3=4)!(OE1=5)!(OE2=5)!(OE3=5) D MISSING(9.07,"Portable Oxygen System Flow is required if Oxygen Equipment Code used is either Liquid Portable or Gaseous Portable.")
"RTN","IBTRH5J",135,0)
 ;
"RTN","IBTRH5J",136,0)
 S ED=$$GET1^DIQ(356.22,IENS,10.03),SD=$$GET1^DIQ(356.22,IENS,10.02)
"RTN","IBTRH5J",137,0)
 I ED'="",SD="" D
"RTN","IBTRH5J",138,0)
 . D MISSING(10.02,"Home Health Certification Period Start Date is required if a Home Health Certification Period End Data is entered.")
"RTN","IBTRH5J",139,0)
 I ED="",SD'="" D
"RTN","IBTRH5J",140,0)
 . D MISSING(10.03,"Home Health Certification Period End Date is required if a Home Health Certification Period Start Date is entered.")
"RTN","IBTRH5J",141,0)
 ;
"RTN","IBTRH5J",142,0)
 S SD=$$GET1^DIQ(356.22,IENS,10.05),SPCT=$$GET1^DIQ(356.22,IENS,10.06),SPC=$$GET1^DIQ(356.22,IENS,10.07)
"RTN","IBTRH5J",143,0)
 I SD="",(SPCT'=""!(SPC'="")) D
"RTN","IBTRH5J",144,0)
 . D MISSING(10.05,"Surgery Date is required if a Surgical Procedure Code or Code Type have a value.")
"RTN","IBTRH5J",145,0)
 I SPCT="",(SD'=""!(SPC'="")) D
"RTN","IBTRH5J",146,0)
 . D MISSING(10.06,"Surgery Procedure Code Type is required if a Surgery Date or Surgery Procedure Code have a value.")
"RTN","IBTRH5J",147,0)
 I SPC="",(SD'=""!(SPCT'="")) D
"RTN","IBTRH5J",148,0)
 . D MISSING(10.07,"Surgery Procedure Code is required if a Surgery Date or Surgery Procedure Code Type have a value.")
"RTN","IBTRH5J",149,0)
 ;
"RTN","IBTRH5J",150,0)
 S SD=$$GET1^DIQ(356.22,IENS,10.11),ED=$$GET1^DIQ(356.22,IENS,10.12),PL=$$GET1^DIQ(356.22,IENS,10.13)
"RTN","IBTRH5J",151,0)
 I SD="",(ED'=""!(PL'="")) D
"RTN","IBTRH5J",152,0)
 . D MISSING(10.11,"Last Admission Start Date is required if the Last Admission End Date is specified or the Patient Location Code has a value.")
"RTN","IBTRH5J",153,0)
 I ED="",SD'="" D
"RTN","IBTRH5J",154,0)
 . D MISSING(10.12,"Last Admission End Date is required if the Last Admission Start Date is specified.")
"RTN","IBTRH5J",155,0)
 I PL="",(ED'=""!(SD'="")) D
"RTN","IBTRH5J",156,0)
 . D MISSING(10.13,"Patient Location Code is required if the Last Admission Start or End Dates are entered.")
"RTN","IBTRH5J",157,0)
 ;
"RTN","IBTRH5J",158,0)
 D REQMISS^IBTRH5K ; Checking Multiples, new routine due to routine size 01/06/15 FA
"RTN","IBTRH5J",159,0)
 Q
"RTN","IBTRH5J",160,0)
 ;
"RTN","IBTRH5J",161,0)
 ;
"RTN","IBTRH5J",162,0)
MISSING(SUB,DESC) ; Function to generate MISSING array
"RTN","IBTRH5J",163,0)
 ; Input: SUB - subscript of MISSING array
"RTN","IBTRH5J",164,0)
 ;        DESC - description of error condition
"RTN","IBTRH5J",165,0)
 ; Returns: MISSING  array
"RTN","IBTRH5J",166,0)
 ;
"RTN","IBTRH5J",167,0)
 S MISSING=MISSING+1
"RTN","IBTRH5J",168,0)
 S MISSING(SUB)=DESC
"RTN","IBTRH5J",169,0)
 Q
"RTN","IBTRH5K")
0^41^B41363452^n/a
"RTN","IBTRH5K",1,0)
IBTRH5K ;ALB/JWS - HCSR Create 278 Request ;11-DEC-2014
"RTN","IBTRH5K",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH5K",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH5K",4,0)
 ;;
"RTN","IBTRH5K",5,0)
 ; Contains Entry points and functions used in creating a 278 request from a
"RTN","IBTRH5K",6,0)
 ; selected entry in the HCSR Response worklist
"RTN","IBTRH5K",7,0)
 ;
"RTN","IBTRH5K",8,0)
 ; --------------------------   Entry Points   --------------------------------
"RTN","IBTRH5K",9,0)
 ; REQMISS      - Checks for missing required fields in a request 
"RTN","IBTRH5K",10,0)
 ;-----------------------------------------------------------------------------
"RTN","IBTRH5K",11,0)
 Q
"RTN","IBTRH5K",12,0)
 ;
"RTN","IBTRH5K",13,0)
REQMISS ; Additional required field checking for 278 transaction
"RTN","IBTRH5K",14,0)
 ; Input:   CTC         - Certification Type Code IEN
"RTN","IBTRH5K",15,0)
 ;          IENS        - IEN_"," of the entry being checked
"RTN","IBTRH5K",16,0)
 ;          IBTRIEN     - IEN of the entry being checked
"RTN","IBTRH5K",17,0)
 ;          MISSING()   - Current array of missing fields
"RTN","IBTRH5K",18,0)
 ; Output:  MISSING()   - Updated array of missing fields
"RTN","IBTRH5K",19,0)
 ;
"RTN","IBTRH5K",20,0)
 ; Check Attachments multiple 356.2211
"RTN","IBTRH5K",21,0)
 N CNT,COMN,COMQ,RTC,ZZ
"RTN","IBTRH5K",22,0)
 S XX=$O(^IBT(356.22,IBTRIEN,11,0))
"RTN","IBTRH5K",23,0)
 I XX D
"RTN","IBTRH5K",24,0)
 . S (XX,CNT)=0
"RTN","IBTRH5K",25,0)
 . F  S XX=$O(^IBT(356.22,IBTRIEN,11,XX)) Q:XX'=+XX  D
"RTN","IBTRH5K",26,0)
 . . S CNT=CNT+1
"RTN","IBTRH5K",27,0)
 . . I $$GET1^DIQ(356.2211,XX_","_IENS,.01)="" D
"RTN","IBTRH5K",28,0)
 . . . S ZZ="The Report Type Code is required for all Attachment entries"
"RTN","IBTRH5K",29,0)
 . . . D MISSING("Attachment Multiple "_CNT_" Report Type Code",ZZ)
"RTN","IBTRH5K",30,0)
 . . S RTC=$$GET1^DIQ(356.2211,XX_","_IENS,.02,"I")
"RTN","IBTRH5K",31,0)
 . . I RTC="" D
"RTN","IBTRH5K",32,0)
 . . . S ZZ="The Report Transmission Code is required for all Attachment entries"
"RTN","IBTRH5K",33,0)
 . . . D MISSING("Attachment Multiple "_XX_" Report Trans Code",ZZ)
"RTN","IBTRH5K",34,0)
 . . I $$GET1^DIQ(356.2211,XX_","_IENS,.03)="" D
"RTN","IBTRH5K",35,0)
 . . . I $F(",BM,EL,EM,FX,",","_RTC_",") D
"RTN","IBTRH5K",36,0)
 . . . . S ZZ="The Attachment Control Number is required for any Attachment "
"RTN","IBTRH5K",37,0)
 . . . . S ZZ=ZZ_"entries with a Transmission Code of 'By Mail', 'Electronically Only', 'E-mail', or 'Fax'."
"RTN","IBTRH5K",38,0)
 . . . . D MISSING("Attachment Multiple "_XX_" CTL #",ZZ)
"RTN","IBTRH5K",39,0)
 ;
"RTN","IBTRH5K",40,0)
 ; Check Patient Event Provider multiple
"RTN","IBTRH5K",41,0)
 I '$D(^IBT(356.22,IBTRIEN,13)) D
"RTN","IBTRH5K",42,0)
 . I $$GET1^DIQ(356.22,IENS,2.01,"I")=1!('$O(^IBT(356.22,IBTRIEN,16,0))) D  Q
"RTN","IBTRH5K",43,0)
 . . S ZZ="There must be at least one Patient Event Service Provider included "
"RTN","IBTRH5K",44,0)
 . . S ZZ=ZZ_"in a 278 Request with Request Category equal to Admission Review "
"RTN","IBTRH5K",45,0)
 . . S ZZ=ZZ_"or with no Service Line detail entered."
"RTN","IBTRH5K",46,0)
 . . D MISSING("Patient Event Provider Multiple",ZZ)
"RTN","IBTRH5K",47,0)
 . S XX=0
"RTN","IBTRH5K",48,0)
 . F  S XX=$O(^IBT(356.22,IBTRIEN,16,XX)) Q:XX'=+XX  I '$O(^IBT(356.22,IBTRIEN,16,XX,8,0)) S XX="BAD" Q
"RTN","IBTRH5K",49,0)
 . S ZZ="There must be at least one Patient Event Service Provider included in "
"RTN","IBTRH5K",50,0)
 . S ZZ=ZZ_"a 278 Request if a Service Detail Line does not have a Service Provider entered."
"RTN","IBTRH5K",51,0)
 . I XX="BAD" D MISSING("Patient Event Provider Multiple",ZZ)
"RTN","IBTRH5K",52,0)
 ;
"RTN","IBTRH5K",53,0)
 ; Check Patient Event Transport multiple
"RTN","IBTRH5K",54,0)
 I $D(^IBT(356.22,IBTRIEN,14)) D
"RTN","IBTRH5K",55,0)
 . N CNT,CT,ZZ
"RTN","IBTRH5K",56,0)
 . S (CNT,XX,CT)=0
"RTN","IBTRH5K",57,0)
 . F  S XX=$O(^IBT(356.22,IBTRIEN,14,XX)) Q:XX'=+XX  D
"RTN","IBTRH5K",58,0)
 . . S CNT=CNT+1
"RTN","IBTRH5K",59,0)
 . . S CT=$G(CT)+1,CT(CT)=$$GET1^DIQ(356.2214,XX_","_IENS,.01,"I"),CT(CT(CT))=CT
"RTN","IBTRH5K",60,0)
 . . I CT(CT)="" D
"RTN","IBTRH5K",61,0)
 . . . S ZZ="Patient Event Transport multiple entry "_CNT_" is missing a required Location Type."
"RTN","IBTRH5K",62,0)
 . . . D MISSING("Patient Event Trans "_CNT_" .01",ZZ)
"RTN","IBTRH5K",63,0)
 . . I $$GET1^DIQ(356.2214,XX_","_IENS,.03)="" D
"RTN","IBTRH5K",64,0)
 . . . S ZZ="Patient Event Transport multiple entry "_CNT_" is missing a required Address Line."
"RTN","IBTRH5K",65,0)
 . . . D MISSING("Patient Event Trans "_CNT_" .03",ZZ)
"RTN","IBTRH5K",66,0)
 . . I $$GET1^DIQ(356.2214,XX_","_IENS,.07)="" D
"RTN","IBTRH5K",67,0)
 . . . N CITY,ST
"RTN","IBTRH5K",68,0)
 . . . S CITY=$$GET1^DIQ(356.2214,XX_","_IENS,.05)
"RTN","IBTRH5K",69,0)
 . . . I CITY="" D
"RTN","IBTRH5K",70,0)
 . . . . S ZZ="Patient Event Transport multiple entry "_CNT_" is missing a required City."
"RTN","IBTRH5K",71,0)
 . . . . D MISSING("Patient Event Trans "_CNT_" .05",ZZ)
"RTN","IBTRH5K",72,0)
 . . . S ST=$$GET1^DIQ(356.2214,XX_","_IENS,.06)
"RTN","IBTRH5K",73,0)
 . . . I ST="" D
"RTN","IBTRH5K",74,0)
 . . . . S ZZ="Patient Event Transport multiple entry "_CNT_" is missing a required State/Province Code."
"RTN","IBTRH5K",75,0)
 . . . . D MISSING("Patient Event Trans "_CNT_" .06",ZZ)
"RTN","IBTRH5K",76,0)
 . . . I ST="",CITY="" D
"RTN","IBTRH5K",77,0)
 . . . . S ZZ="Patient Event Transport multiple "_CNT_" must have a Zip code entered if no City "
"RTN","IBTRH5K",78,0)
 . . . . S ZZ=ZZ_"and State are entered."
"RTN","IBTRH5K",79,0)
 . . . . D MISSING("Patient Event Trans "_CNT_" .07",ZZ)
"RTN","IBTRH5K",80,0)
 . I CT=1 D
"RTN","IBTRH5K",81,0)
 . . S ZZ="There must be at least 2 entries in the Patient Event Transport multiple "
"RTN","IBTRH5K",82,0)
 . . S ZZ=ZZ_"indicating the pickup address and the final destination address."
"RTN","IBTRH5K",83,0)
 . . D MISSING("Patient Event Transport Multiple",ZZ)
"RTN","IBTRH5K",84,0)
 . I CT=2,'$D(CT("PW")),'$D(CT("FS")) D
"RTN","IBTRH5K",85,0)
 . . S ZZ="For the Patient Event Transport multiple, if there are 2 entries, one "
"RTN","IBTRH5K",86,0)
 . . S ZZ=ZZ_"must be for the Pickup address and the other must be the Final scheduled destination."
"RTN","IBTRH5K",87,0)
 . . D MISSING("Patient Event Transport Multiple",ZZ)
"RTN","IBTRH5K",88,0)
 ;
"RTN","IBTRH5K",89,0)
 ; Check OTHER UMO multiple
"RTN","IBTRH5K",90,0)
 I $D(^IBT(356.22,IBTRIEN,15)) D
"RTN","IBTRH5K",91,0)
 . N CNT,ZZ
"RTN","IBTRH5K",92,0)
 . S (CNT,XX)=0
"RTN","IBTRH5K",93,0)
 . F  S XX=$O(^IBT(356.22,IBTRIEN,15,XX)) Q:XX'=+XX  D
"RTN","IBTRH5K",94,0)
 . . S CNT=CNT+1
"RTN","IBTRH5K",95,0)
 . . I $$GET1^DIQ(356.2215,XX_","_IENS,.01)="" D
"RTN","IBTRH5K",96,0)
 . . . S ZZ="Other UMO entry "_CNT_" must have a UMO Entity Identifier code."
"RTN","IBTRH5K",97,0)
 . . . D MISSING("Other UMO multiple entry "_CNT_" .01",ZZ)
"RTN","IBTRH5K",98,0)
 . . I $$GET1^DIQ(356.2215,XX_","_IENS,.03)="" D
"RTN","IBTRH5K",99,0)
 . . . S ZZ="Other UMO entry "_CNT_" must have an Other UMO Denial Reason."
"RTN","IBTRH5K",100,0)
 . . . D MISSING("Other UMO multiple entry "_CNT_" .03",ZZ)
"RTN","IBTRH5K",101,0)
 . . I $$GET1^DIQ(356.2215,XX_","_IENS,.07)="" D
"RTN","IBTRH5K",102,0)
 . . . S ZZ="Other UMO entry "_CNT_" must have a UMO Denial Date entered."
"RTN","IBTRH5K",103,0)
 . . . D MISSING("Other UMO multiple entry "_CNT_" .07",ZZ)
"RTN","IBTRH5K",104,0)
 ;
"RTN","IBTRH5K",105,0)
 ; Check Service Line multiples
"RTN","IBTRH5K",106,0)
 I $D(^IBT(356.22,IBTRIEN,16)) D
"RTN","IBTRH5K",107,0)
 . N CNT,XX,YY,ZZ,I
"RTN","IBTRH5K",108,0)
 . S (CNT,YY,XX)=0
"RTN","IBTRH5K",109,0)
 . F  S XX=$O(^IBT(356.22,IBTRIEN,16,XX)) Q:XX'=+XX  D
"RTN","IBTRH5K",110,0)
 . . S CNT=CNT+1
"RTN","IBTRH5K",111,0)
 . . I $$GET1^DIQ(356.2216,XX_","_IENS,.15)="" D
"RTN","IBTRH5K",112,0)
 . . . F I=.02,.03,.04,.05 I $$GET1^DIQ(356.2216,XX_","_IENS,I)'="" S YY=1 Q
"RTN","IBTRH5K",113,0)
 . . . S ZZ="Service Line "_CNT_" requires the UMO Type to be included with service line information."
"RTN","IBTRH5K",114,0)
 . . . I YY D MISSING("Service Line "_CNT_" .15",ZZ)
"RTN","IBTRH5K",115,0)
 Q
"RTN","IBTRH5K",116,0)
 ;
"RTN","IBTRH5K",117,0)
 ;
"RTN","IBTRH5K",118,0)
MISSING(SUB,DESC) ; Function to generate MISSING array
"RTN","IBTRH5K",119,0)
 ; Input: SUB - subscript of MISSING array
"RTN","IBTRH5K",120,0)
 ;        DESC - description of error condition
"RTN","IBTRH5K",121,0)
 ; Returns: MISSING  array
"RTN","IBTRH5K",122,0)
 ;
"RTN","IBTRH5K",123,0)
 S MISSING=MISSING+1
"RTN","IBTRH5K",124,0)
 S MISSING(SUB)=DESC
"RTN","IBTRH5K",125,0)
 Q
"RTN","IBTRH5K",126,0)
 ;
"RTN","IBTRH5K",127,0)
CLRENTRY(IBTRIEN) ; clear an entry in file 356.22
"RTN","IBTRH5K",128,0)
 ; clears all fields except for .01 - .11, .16, and 4.01 - 4.02 at the top level
"RTN","IBTRH5K",129,0)
 ; IBTRIEN - file 356.22 ien
"RTN","IBTRH5K",130,0)
 ;
"RTN","IBTRH5K",131,0)
 N FDA,Z,Z1
"RTN","IBTRH5K",132,0)
 ; top level
"RTN","IBTRH5K",133,0)
 F Z=.12:.01:.15,.17:.01:.25,2.01:.01:2.26,4.03:.01:4.14,5.01:.01:5.18 S FDA(356.22,IBTRIEN_",",Z)="@"
"RTN","IBTRH5K",134,0)
 F Z=6.01:.01:6.18,7.01:.01:7.13,8.01:.01:8.08,9.01:.01:9.08,10.01:.01:10.13 S FDA(356.22,IBTRIEN_",",Z)="@"
"RTN","IBTRH5K",135,0)
 F Z=12,17.01,17.02,18.01:.01:18.1,19:.01:19.03,20:1:23,103.01:.01:103.04 S FDA(356.22,IBTRIEN_",",Z)="@"
"RTN","IBTRH5K",136,0)
 ; multiples
"RTN","IBTRH5K",137,0)
 F Z=1,3,11,13,14,15,16,101,105,107 D
"RTN","IBTRH5K",138,0)
 .S Z1=0 F  S Z1=$O(^IBT(356.22,IBTRIEN,Z,Z1)) Q:'Z1  S FDA(356.22_Z,Z1_","_IBTRIEN_",",.01)="@"
"RTN","IBTRH5K",139,0)
 .Q
"RTN","IBTRH5K",140,0)
 D FILE^DIE(,"FDA")
"RTN","IBTRH5K",141,0)
 Q
"RTN","IBTRH5K",142,0)
 ;
"RTN","IBTRH5K",143,0)
CLRASK() ; prompt user for clearing the entry in file 356.22
"RTN","IBTRH5K",144,0)
 ; returns 1 if entry should be cleared, 0 otherwise
"RTN","IBTRH5K",145,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH5K",146,0)
 S DIR("A")="Clear existing data? (Y/N): ",DIR("B")="Y",DIR(0)="YAO" D ^DIR
"RTN","IBTRH5K",147,0)
 I $G(DTOUT)!$G(DUOUT)!$G(DIROUT)!($G(Y)'=1) Q 0
"RTN","IBTRH5K",148,0)
 Q 1
"RTN","IBTRH6")
0^38^B163678664^n/a
"RTN","IBTRH6",1,0)
IBTRH6 ;ALB/FA - HCSR Send 278 Short Worklist ;11-NOV-2014
"RTN","IBTRH6",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH6",4,0)
 ;;
"RTN","IBTRH6",5,0)
 ;
"RTN","IBTRH6",6,0)
EN ; Main entry point for the IBT HCSR SEND 278 SHORT worklist
"RTN","IBTRH6",7,0)
 ; Displays the selected 278 short form for sending 278 requests
"RTN","IBTRH6",8,0)
 ; Input:   IBTRIEN - IEN of the selected entry to send a request for
"RTN","IBTRH6",9,0)
 N FROMDATA,IBTRENT,INPAT,NODE2,NODE7,NODE19,VADM,WHICH
"RTN","IBTRH6",10,0)
 ;;12/9/14 JWS - prevent entry if status is PENDING a response
"RTN","IBTRH6",11,0)
 I $$STATUS^IBTRH2(IBTRIEN)="07" D STATMSG^IBTRH2A(4) Q
"RTN","IBTRH6",12,0)
 S VALMBCK="R"
"RTN","IBTRH6",13,0)
 S FROMDATA=0
"RTN","IBTRH6",14,0)
 S INPAT=$S($P(NODE0,U,4)="I":1,1:0) ; 1 if inpatient, 0 if outpatient
"RTN","IBTRH6",15,0)
 S WHICH=$$SELSHORT(INPAT)           ; type of request
"RTN","IBTRH6",16,0)
 I WHICH'="" D EN^VALM("IBT HCSR SEND 278 SHORT")
"RTN","IBTRH6",17,0)
 I $D(IBFASTXT) S VALMBCK="Q"
"RTN","IBTRH6",18,0)
 Q
"RTN","IBTRH6",19,0)
 ;
"RTN","IBTRH6",20,0)
SELSHORT(INPAT) ; User selection of which 278 request to send
"RTN","IBTRH6",21,0)
 ; Input: INPAT=1 if inpatient, 0 otherwise
"RTN","IBTRH6",22,0)
 ; Returns: Selected Input Type or "" if none selected
"RTN","IBTRH6",23,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","IBTRH6",24,0)
 D FULL^VALM1
"RTN","IBTRH6",25,0)
 I INPAT S XX="1:Admission (initial);2:Mental Health Inpatient (initial)"
"RTN","IBTRH6",26,0)
 I 'INPAT S XX="1:Appointment (initial);2:Mental Health Outpatient (initial)"
"RTN","IBTRH6",27,0)
 S XX=XX_";3:Prescription (initial)"
"RTN","IBTRH6",28,0)
 S DIR(0)="S^"_XX,DIR("A")="Select Input Type"
"RTN","IBTRH6",29,0)
 D ^DIR
"RTN","IBTRH6",30,0)
 Q:$D(DIRUT) ""                                 ; User Pressed ^ or timed out
"RTN","IBTRH6",31,0)
 I Y'=1 D  S Y=""
"RTN","IBTRH6",32,0)
 . W !,"Mental Health and Prescription options are not currently available."
"RTN","IBTRH6",33,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRH6",34,0)
 . S DIR(0)="EA"
"RTN","IBTRH6",35,0)
 . S DIR("A",1)=" "
"RTN","IBTRH6",36,0)
 . S DIR("A")="Press RETURN to continue " D ^DIR
"RTN","IBTRH6",37,0)
 Q Y
"RTN","IBTRH6",38,0)
 ;
"RTN","IBTRH6",39,0)
HDR ;EP
"RTN","IBTRH6",40,0)
 ; Protocol action to display Worklist Patient header information
"RTN","IBTRH6",41,0)
 ; Input:   IBTRIEN - IEN of the selected entry to send a request for
"RTN","IBTRH6",42,0)
 ; Output:  Header information for the patient of the selected entry is set
"RTN","IBTRH6",43,0)
 ;
"RTN","IBTRH6",44,0)
 N Z
"RTN","IBTRH6",45,0)
 S Z=$E(VADM(1),1,28),Z=Z_$J("",35-$L(Z))_$P(VADM(2),U,2)_"    DOB: "_$P(VADM(3),U,2)_"    AGE: "_VADM(4)
"RTN","IBTRH6",46,0)
 S VALMHDR(1)=Z
"RTN","IBTRH6",47,0)
 S VALMSG="*/Required"
"RTN","IBTRH6",48,0)
 Q
"RTN","IBTRH6",49,0)
 ;
"RTN","IBTRH6",50,0)
INIT ;EP
"RTN","IBTRH6",51,0)
 ;
"RTN","IBTRH6",52,0)
 K ^TMP("IBTRH6",$J)
"RTN","IBTRH6",53,0)
 S VALMBG=1
"RTN","IBTRH6",54,0)
 D DEM^VADPT ; get patient demographics
"RTN","IBTRH6",55,0)
 S NODE0=$G(^IBT(356.22,IBTRIEN,0))
"RTN","IBTRH6",56,0)
 S NODE2=$G(^IBT(356.22,IBTRIEN,2))
"RTN","IBTRH6",57,0)
 S NODE7=$G(^IBT(356.22,IBTRIEN,7))
"RTN","IBTRH6",58,0)
 S NODE19=$G(^IBT(356.22,IBTRIEN,19))
"RTN","IBTRH6",59,0)
 D WRTFLDS D:'FROMDATA WRTCNUM ; auto populate fields
"RTN","IBTRH6",60,0)
 ; re-read nodes to get auto-populated values
"RTN","IBTRH6",61,0)
 S NODE0=$G(^IBT(356.22,IBTRIEN,0))
"RTN","IBTRH6",62,0)
 S NODE2=$G(^IBT(356.22,IBTRIEN,2))
"RTN","IBTRH6",63,0)
 S NODE7=$G(^IBT(356.22,IBTRIEN,7))
"RTN","IBTRH6",64,0)
 S NODE19=$G(^IBT(356.22,IBTRIEN,19))
"RTN","IBTRH6",65,0)
 D BLD
"RTN","IBTRH6",66,0)
 I WHICH=1 S VALM("TITLE")="HCSR 278 "_$S(INPAT:"Admission",1:"Appointment")_" - Brief"
"RTN","IBTRH6",67,0)
 I WHICH=2 S VALM("TITLE")="HCSR 278 Mental - Brief"
"RTN","IBTRH6",68,0)
 I WHICH=3 S VALM("TITLE")="HCSR 278 Prescription - Brief"
"RTN","IBTRH6",69,0)
 Q
"RTN","IBTRH6",70,0)
 ;
"RTN","IBTRH6",71,0)
BLD ; Creates the body of the worklist
"RTN","IBTRH6",72,0)
 ;
"RTN","IBTRH6",73,0)
 N ELINEL,ELINER,SLINE
"RTN","IBTRH6",74,0)
 S SLINE=1
"RTN","IBTRH6",75,0)
 D BLDUMO(SLINE,.ELINEL)                ; Build UMO Field section
"RTN","IBTRH6",76,0)
 D BLDSUB(ELINEL,.ELINEL)               ; Build Subscriber Field section
"RTN","IBTRH6",77,0)
 D BLDREQ(SLINE,.ELINER)                ; Build Requester Field section
"RTN","IBTRH6",78,0)
 S SLINE=$S(ELINEL>ELINER:ELINEL,1:ELINER)
"RTN","IBTRH6",79,0)
 D BLDDEP(SLINE,.ELINEL)                ; Build Dependent Field section
"RTN","IBTRH6",80,0)
 D BLDDIAG(SLINE,.ELINER)               ; Build Diagnoses Field section
"RTN","IBTRH6",81,0)
 S SLINE=$S(ELINEL>ELINER:ELINEL,1:ELINER)
"RTN","IBTRH6",82,0)
 D BLDHCSR(SLINE,.ELINEL)               ; Build Health Care Services Field section
"RTN","IBTRH6",83,0)
 D BLDPROV(SLINE,.ELINER)               ; Build Provider Field section
"RTN","IBTRH6",84,0)
 S SLINE=$S(ELINEL>ELINER:ELINEL,1:ELINER)
"RTN","IBTRH6",85,0)
 D BLDSVC(SLINE,.ELINEL)                ; Build Service Line Field section
"RTN","IBTRH6",86,0)
 D BLDAPI(SLINE,.ELINER)                ; Build API Line Field section
"RTN","IBTRH6",87,0)
 S SLINE=$S(ELINEL>ELINER:ELINEL,1:ELINER)
"RTN","IBTRH6",88,0)
 D BLDCOM(SLINE,.ELINEL)                ; Build Comment Field section
"RTN","IBTRH6",89,0)
 S VALMCNT=ELINEL-1
"RTN","IBTRH6",90,0)
 Q
"RTN","IBTRH6",91,0)
 ;
"RTN","IBTRH6",92,0)
BLDUMO(SLINE,ELINE) ; Build the UMO Field Section
"RTN","IBTRH6",93,0)
 ; Input:
"RTN","IBTRH6",94,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",95,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",96,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",97,0)
 ;
"RTN","IBTRH6",98,0)
 N PAYER,PAYID
"RTN","IBTRH6",99,0)
 S ELINE=$$SET("",$J("",40),SLINE,1)            ; Spacing Blank Line
"RTN","IBTRH6",100,0)
 S ELINE=$$SETN("UM Organization",ELINE,1,1)
"RTN","IBTRH6",101,0)
 S ELINE=$$SET("Name*: ",$$GET1^DIQ(36,IEN36_",",.01),ELINE,1)
"RTN","IBTRH6",102,0)
 S PAYER=+$$GET1^DIQ(36,IEN36_",",3.1,"I") ; file 365.12 ien
"RTN","IBTRH6",103,0)
 S PAYID="" I PAYER>0 S PAYID=$P($G(^IBE(365.12,PAYER,0)),U,2) ; VA national id
"RTN","IBTRH6",104,0)
 S ELINE=$$SET("National Payer ID: ",PAYID,ELINE,1)
"RTN","IBTRH6",105,0)
 S ELINE=$$SET("HPID: ",$$HPD^IBCNHUT1(IEN36),ELINE,1)
"RTN","IBTRH6",106,0)
 Q
"RTN","IBTRH6",107,0)
 ;
"RTN","IBTRH6",108,0)
BLDSUB(SLINE,ELINE) ; Build the Subscriber Fields
"RTN","IBTRH6",109,0)
 ; Input:
"RTN","IBTRH6",110,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",111,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",112,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",113,0)
 ;
"RTN","IBTRH6",114,0)
 N INSNODE3,ZIP
"RTN","IBTRH6",115,0)
 S INSNODE3=$G(^DPT(DFN,.312,IEN312,3))
"RTN","IBTRH6",116,0)
 S ELINE=$$SET("",$J("",40),SLINE,1)            ; Spacing Blank Line
"RTN","IBTRH6",117,0)
 S ELINE=$$SETN("Subscriber",ELINE,1,1)
"RTN","IBTRH6",118,0)
 S ELINE=$$SET("Name*: ",$P(INSNODE0,U,17),ELINE,1)
"RTN","IBTRH6",119,0)
 S ELINE=$$SET("Primary ID*: ",$P(INSNODE0,U,2),ELINE,1)
"RTN","IBTRH6",120,0)
 S ELINE=$$SET("Address Line 1: ",$P(INSNODE3,U,6),ELINE,1)
"RTN","IBTRH6",121,0)
 S ELINE=$$SET("Address Line 2: ",$P(INSNODE3,U,7),ELINE,1)
"RTN","IBTRH6",122,0)
 S ELINE=$$SET("City: ",$P(INSNODE3,U,8),ELINE,1)
"RTN","IBTRH6",123,0)
 S ELINE=$$SET("State: ",$$GET1^DIQ(5,$P(INSNODE3,U,9)_",",1),ELINE,1)
"RTN","IBTRH6",124,0)
 S ZIP=$P(INSNODE3,U,10) I $L(ZIP)>5,$E(ZIP,6)'="-" S ZIP=$E(ZIP,1,5)_"-"_$E(ZIP,6,99)
"RTN","IBTRH6",125,0)
 S ELINE=$$SET("Zip Code: ",ZIP,ELINE,1)
"RTN","IBTRH6",126,0)
 Q
"RTN","IBTRH6",127,0)
 ;
"RTN","IBTRH6",128,0)
BLDREQ(SLINE,ELINE) ; Build the Requester fields
"RTN","IBTRH6",129,0)
 ; Input:
"RTN","IBTRH6",130,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",131,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",132,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",133,0)
 ;
"RTN","IBTRH6",134,0)
 N CNARY,REQIEN,REQSTR,REQDATA,ZIP
"RTN","IBTRH6",135,0)
 S REQIEN=$P($$SITE^VASITE(),U),REQSTR=$$PRVDATA^IBTRHLO2(REQIEN,4)
"RTN","IBTRH6",136,0)
 D GETCNUM(.CNARY)
"RTN","IBTRH6",137,0)
 S ELINE=$$SET("",$J("",40),SLINE,41)           ; Spacing Blank Line
"RTN","IBTRH6",138,0)
 S ELINE=$$SETN("Requester",ELINE,41,1)
"RTN","IBTRH6",139,0)
 S ELINE=$$SET("Name*: ",$P(REQSTR,U),ELINE,41)
"RTN","IBTRH6",140,0)
 S ELINE=$$SET("NPI*: ",$P(REQSTR,U,7),ELINE,41)
"RTN","IBTRH6",141,0)
 S ELINE=$$SET("Taxonomy Code: ",$P($$TAXORG^XUSTAX(REQIEN),U),ELINE,41)
"RTN","IBTRH6",142,0)
 S ELINE=$$SET("Address Line 1*: ",$P(REQSTR,U,2),ELINE,41)
"RTN","IBTRH6",143,0)
 S ELINE=$$SET("Address Line 2: ",$P(REQSTR,U,3),ELINE,41)
"RTN","IBTRH6",144,0)
 S ELINE=$$SET("City*: ",$P(REQSTR,U,4),ELINE,41)
"RTN","IBTRH6",145,0)
 S ELINE=$$SET("State*: ",$$GET1^DIQ(5,$P(REQSTR,U,5)_",",1),ELINE,41)
"RTN","IBTRH6",146,0)
 S ZIP=$P(REQSTR,U,6) I $L(ZIP)>5,$E(ZIP,6)'="-" S ZIP=$E(ZIP,1,5)_"-"_$E(ZIP,6,99)
"RTN","IBTRH6",147,0)
 S ELINE=$$SET("Zip Code*: ",ZIP,ELINE,41)
"RTN","IBTRH6",148,0)
 S ELINE=$$SET("Contact Name*: ",$$EXTERNAL^DILFD(356.22,.11,,$P(NODE0,U,11)),ELINE,41)
"RTN","IBTRH6",149,0)
 S ELINE=$$SET("Contact Phone: ",$G(CNARY("TE")),ELINE,41)
"RTN","IBTRH6",150,0)
 S ELINE=$$SET("Contact Phone Ext.: ",$G(CNARY("EX")),ELINE,41)
"RTN","IBTRH6",151,0)
 S ELINE=$$SET("Contact Fax: ",$G(CNARY("FX")),ELINE,41)
"RTN","IBTRH6",152,0)
 Q
"RTN","IBTRH6",153,0)
 ;
"RTN","IBTRH6",154,0)
BLDDEP(SLINE,ELINE) ; Build the Dependent fields
"RTN","IBTRH6",155,0)
 ; Input:
"RTN","IBTRH6",156,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",157,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",158,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",159,0)
 ;
"RTN","IBTRH6",160,0)
 N INSNODE4
"RTN","IBTRH6",161,0)
 S INSNODE4=$G(^DPT(DFN,.312,IEN312,4))
"RTN","IBTRH6",162,0)
 I $P(INSNODE4,U,3)="18" Q  ; pat. relationship is "self"
"RTN","IBTRH6",163,0)
 S ELINE=$$SET("",$J("",40),SLINE,1)
"RTN","IBTRH6",164,0)
 S ELINE=$$SETN("Dependent",ELINE,1,1)
"RTN","IBTRH6",165,0)
 S ELINE=$$SET("Name*: ",VADM(1),ELINE,1)
"RTN","IBTRH6",166,0)
 Q
"RTN","IBTRH6",167,0)
 ;
"RTN","IBTRH6",168,0)
BLDDIAG(SLINE,ELINE) ; Build the Diagnosis fields
"RTN","IBTRH6",169,0)
 ; Input:
"RTN","IBTRH6",170,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",171,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",172,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",173,0)
 ;
"RTN","IBTRH6",174,0)
 N DATA,DPTR,QPTR,Z
"RTN","IBTRH6",175,0)
 S ELINE=$$SET("",$J("",40),ELINE,41)
"RTN","IBTRH6",176,0)
 S ELINE=$$SETN("Diagnoses",ELINE,41,1)
"RTN","IBTRH6",177,0)
 S Z=0 F  S Z=$O(^IBT(356.22,IBTRIEN,3,Z)) Q:'Z!(Z?1.A)  D
"RTN","IBTRH6",178,0)
 .S DATA=$G(^IBT(356.22,IBTRIEN,3,Z,0)) I DATA'="" D
"RTN","IBTRH6",179,0)
 ..S QPTR=+$P(DATA,U),DPTR=$P(DATA,U,2)
"RTN","IBTRH6",180,0)
 ..S ELINE=$$SET("Qualifier: ",$$GET1^DIQ(356.006,QPTR_",",.02),ELINE,41)
"RTN","IBTRH6",181,0)
 ..S ELINE=$$SET("Diagnosis: ",$$EXTERNAL^DILFD(356.223,.02,,DPTR),ELINE,41)
"RTN","IBTRH6",182,0)
 ..Q
"RTN","IBTRH6",183,0)
 .Q
"RTN","IBTRH6",184,0)
 Q
"RTN","IBTRH6",185,0)
 ;
"RTN","IBTRH6",186,0)
BLDHCSR(SLINE,ELINE) ; Build the Health Care Service Review Fields
"RTN","IBTRH6",187,0)
 ; Input:
"RTN","IBTRH6",188,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",189,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",190,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",191,0)
 ;
"RTN","IBTRH6",192,0)
 N Z
"RTN","IBTRH6",193,0)
 S ELINE=$$SET("",$J("",40),SLINE,1)
"RTN","IBTRH6",194,0)
 S ELINE=$$SETN("Health Care Service Review",ELINE,1,1)
"RTN","IBTRH6",195,0)
 S ELINE=$$SET("Category*: ",$$GET1^DIQ(356.001,+$P(NODE2,U)_",",.02),ELINE,1)
"RTN","IBTRH6",196,0)
 S ELINE=$$SET("Certification Type*: ",$$GET1^DIQ(356.002,+$P(NODE2,U,2)_",",.02),ELINE,1)
"RTN","IBTRH6",197,0)
 S ELINE=$$SET("Service Type*: ",$$GET1^DIQ(365.013,+$P(NODE2,U,3)_",",.02),ELINE,1)
"RTN","IBTRH6",198,0)
 I 'INPAT S ELINE=$$SET("Facility Type*: ",$$GET1^DIQ(353.1,+$P(NODE2,U,5)_",",.02),ELINE,1)
"RTN","IBTRH6",199,0)
 I INPAT D
"RTN","IBTRH6",200,0)
 .S Z=$P(NODE2,U,6)_$P(NODE2,U,7)
"RTN","IBTRH6",201,0)
 .I Z="11" S ELINE=$$SET("Bill Type*: ","HOSPITAL/INPATIENT",ELINE,1)
"RTN","IBTRH6",202,0)
 .S ELINE=$$SET("Adm Type: ",$$EXTERNAL^DILFD(356.22,7.01,,$P(NODE7,U)),ELINE,1)
"RTN","IBTRH6",203,0)
 .Q
"RTN","IBTRH6",204,0)
 Q
"RTN","IBTRH6",205,0)
 ;
"RTN","IBTRH6",206,0)
BLDPROV(SLINE,ELINE) ; Build the Provider Information Fields 
"RTN","IBTRH6",207,0)
 ; Input:
"RTN","IBTRH6",208,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",209,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",210,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",211,0)
 ;
"RTN","IBTRH6",212,0)
 N DATA,PRVDATA,PRVPTR,Z
"RTN","IBTRH6",213,0)
 S ELINE=$$SET("",$J("",40),ELINE,41)
"RTN","IBTRH6",214,0)
 S ELINE=$$SETN("Provider Information",ELINE,41,1)
"RTN","IBTRH6",215,0)
 S Z=0 F  S Z=$O(^IBT(356.22,IBTRIEN,13,Z)) Q:'Z!(Z?1.A)  D
"RTN","IBTRH6",216,0)
 .S DATA=$G(^IBT(356.22,IBTRIEN,13,Z,0)) I DATA'="" D
"RTN","IBTRH6",217,0)
 ..S PRVPTR=$P(DATA,U,3),PRVDATA=$$PRVDATA^IBTRHLO2(+$P(PRVPTR,";"),$P($P(PRVPTR,"(",2),","))
"RTN","IBTRH6",218,0)
 ..S ELINE=$$SET("Provider Type: ",$$GET1^DIQ(365.022,$P(DATA,U)_",",.02),ELINE,41)
"RTN","IBTRH6",219,0)
 ..S ELINE=$$SET("Provider Name: ",$P(PRVDATA,U),ELINE,41)
"RTN","IBTRH6",220,0)
 ..S ELINE=$$SET("Provider NPI: ",$P(PRVDATA,U,7),ELINE,41)
"RTN","IBTRH6",221,0)
 ..Q
"RTN","IBTRH6",222,0)
 .Q
"RTN","IBTRH6",223,0)
 Q
"RTN","IBTRH6",224,0)
 ;
"RTN","IBTRH6",225,0)
BLDSVC(SLINE,ELINE) ; Build the Service Line Fields
"RTN","IBTRH6",226,0)
 ; Input:
"RTN","IBTRH6",227,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",228,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",229,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",230,0)
 ;
"RTN","IBTRH6",231,0)
 N CNT,PRCODE,PRTYPE,SNODE0,SNODE1,SNODE12,Z
"RTN","IBTRH6",232,0)
 S ELINE=$$SET("",$J("",40),SLINE,1)
"RTN","IBTRH6",233,0)
 S ELINE=$$SETN("Service Lines",ELINE,1,1)
"RTN","IBTRH6",234,0)
 S (CNT,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,16,Z)) Q:'Z!(Z?1.A)  D
"RTN","IBTRH6",235,0)
 .S SNODE0=$G(^IBT(356.22,IBTRIEN,16,Z,0)),SNODE1=$G(^IBT(356.22,IBTRIEN,16,Z,1)),CNT=CNT+1
"RTN","IBTRH6",236,0)
 .S SNODE12=$G(^IBT(356.22,IBTRIEN,16,Z,12))
"RTN","IBTRH6",237,0)
 .S ELINE=$$SET("Service Line #: ",CNT,ELINE,1)
"RTN","IBTRH6",238,0)
 .S ELINE=$$SET("Date of Service: ",$$FMTE^XLFDT($P(SNODE0,U,11),5),ELINE,1)
"RTN","IBTRH6",239,0)
 .S PRTYPE=$P(SNODE1,U)
"RTN","IBTRH6",240,0)
 .S PRCODE=$S(PRTYPE="N4":$P(SNODE12,U),1:$$EXTERNAL^DILFD(356.2216,1.02,,$P(SNODE1,U,2)))
"RTN","IBTRH6",241,0)
 .S ELINE=$$SET("Procedure Code*: ",PRCODE,ELINE,1)
"RTN","IBTRH6",242,0)
 .Q
"RTN","IBTRH6",243,0)
 Q
"RTN","IBTRH6",244,0)
 ;
"RTN","IBTRH6",245,0)
BLDAPI(SLINE,ELINE) ; Build the Additional Patient Information Fields
"RTN","IBTRH6",246,0)
 ; Input:
"RTN","IBTRH6",247,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",248,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",249,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",250,0)
 ;
"RTN","IBTRH6",251,0)
 N ANODE0,Z
"RTN","IBTRH6",252,0)
 S ELINE=$$SET("",$J("",40),SLINE,41)
"RTN","IBTRH6",253,0)
 S ELINE=$$SETN("Paperwork Attachments",ELINE,41,1)
"RTN","IBTRH6",254,0)
 S Z=0 F  S Z=$O(^IBT(356.22,IBTRIEN,11,Z)) Q:'Z!(Z?1.A)  D
"RTN","IBTRH6",255,0)
 .S ANODE0=$G(^IBT(356.22,IBTRIEN,11,Z,0))
"RTN","IBTRH6",256,0)
 .S ELINE=$$SET("Report Type: ",$$GET1^DIQ(356.018,+$P(ANODE0,U)_",",.02),ELINE,41)
"RTN","IBTRH6",257,0)
 .S ELINE=$$SET("Transmission Method: ",$$EXTERNAL^DILFD(356.2211,.02,,$P(ANODE0,U,2)),ELINE,41)
"RTN","IBTRH6",258,0)
 .S ELINE=$$SET("Attachment Control Number: ",$P(ANODE0,U,3),ELINE,41)
"RTN","IBTRH6",259,0)
 .Q
"RTN","IBTRH6",260,0)
 Q
"RTN","IBTRH6",261,0)
 ;
"RTN","IBTRH6",262,0)
BLDCOM(SLINE,ELINE) ; Build the Comment Fields
"RTN","IBTRH6",263,0)
 ; Input:
"RTN","IBTRH6",264,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBTRH6",265,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBTRH6",266,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBTRH6",267,0)
 ;
"RTN","IBTRH6",268,0)
 N XX
"RTN","IBTRH6",269,0)
 S ELINE=$$SET("",$J("",40),SLINE,1)
"RTN","IBTRH6",270,0)
 S ELINE=$$SETN("Request Comments",ELINE,1,1)
"RTN","IBTRH6",271,0)
 K ^UTILITY($J,"W")
"RTN","IBTRH6",272,0)
 D FORMAT^IBDFU6("^IBT(356.22,IBTRIEN,12)",80,"Message: ")
"RTN","IBTRH6",273,0)
 S XX=0 F  S XX=$O(^UTILITY($J,"W",1,XX)) Q:XX=""  S ELINE=$$SET("",$G(^UTILITY($J,"W",1,XX,0)),ELINE,1)
"RTN","IBTRH6",274,0)
 K ^UTILITY($J,"W")
"RTN","IBTRH6",275,0)
 Q
"RTN","IBTRH6",276,0)
 ;
"RTN","IBTRH6",277,0)
SET(LABEL,DATA,LINE,COL) ; Sets text into the body of the worklist
"RTN","IBTRH6",278,0)
 ; Input:   LABEL   - Label text to set into the line
"RTN","IBTRH6",279,0)
 ;          DATA    - Field Data to set into the line
"RTN","IBTRH6",280,0)
 ;          LINE    - Line to set LABEL and DATA into
"RTN","IBTRH6",281,0)
 ;          COL     - Starting column position in LINE to insert
"RTN","IBTRH6",282,0)
 ;                    LABEL_DATA text
"RTN","IBTRH6",283,0)
 ; Returns: LINE    - Updated Line by 1
"RTN","IBTRH6",284,0)
 ;
"RTN","IBTRH6",285,0)
 N IBY
"RTN","IBTRH6",286,0)
 S IBY=LABEL_DATA
"RTN","IBTRH6",287,0)
 D SET1(IBY,LINE,COL,$L(IBY))
"RTN","IBTRH6",288,0)
 S LINE=LINE+1
"RTN","IBTRH6",289,0)
 Q LINE
"RTN","IBTRH6",290,0)
 ;
"RTN","IBTRH6",291,0)
SETN(TITLE,LINE,COL,RV) ; Sets a field Section title into the body of the worklist
"RTN","IBTRH6",292,0)
 ; Input:   TITLE   - Text to be used for the field Section Title
"RTN","IBTRH6",293,0)
 ;          LINE    - Line number in the body to insert the field section title
"RTN","IBTRH6",294,0)
 ;          COL     - Starting Column position to set Section Title into
"RTN","IBTRH6",295,0)
 ;          RV      - 1 - Set Reverse Video, 0 or null don't use Reverse Video
"RTN","IBTRH6",296,0)
 ;                        Optional, defaults to ""
"RTN","IBTRH6",297,0)
 ; Returns: LINE    - Line number increased by 1
"RTN","IBTRH6",298,0)
 ;
"RTN","IBTRH6",299,0)
 N IBY
"RTN","IBTRH6",300,0)
 S IBY=" "_TITLE_" "
"RTN","IBTRH6",301,0)
 D SET1(IBY,LINE,COL,$L(IBY),$G(RV))
"RTN","IBTRH6",302,0)
 S LINE=LINE+1
"RTN","IBTRH6",303,0)
 Q LINE
"RTN","IBTRH6",304,0)
 ;
"RTN","IBTRH6",305,0)
SET1(TEXT,LINE,COL,WIDTH,RV) ; Sets the TMP array with body data
"RTN","IBTRH6",306,0)
 ; Input:   TEXT                - Text to be set into the specified line
"RTN","IBTRH6",307,0)
 ;          LINE                - Line to set TEXT into
"RTN","IBTRH6",308,0)
 ;          COL                 - Column of LINE to set TEXT into
"RTN","IBTRH6",309,0)
 ;          WIDTH               - Width of the TEXT being set into line
"RTN","IBTRH6",310,0)
 ;          RV                  - 1 - Set Reverse Video, 0 or null don't use
"RTN","IBTRH6",311,0)
 ;                                    Reverse Video
"RTN","IBTRH6",312,0)
 ;                                Optional, defaults to ""
"RTN","IBTRH6",313,0)
 ;          ^TMP("IBTRH6",$J)   - Current ^TMP array
"RTN","IBTRH6",314,0)
 ; Output:  ^TMP("IBTRH6",$J)   - Updated ^TMP array
"RTN","IBTRH6",315,0)
 ;
"RTN","IBTRH6",316,0)
 N IBX
"RTN","IBTRH6",317,0)
 S IBX=$G(^TMP("IBTRH6",$J,LINE,0))
"RTN","IBTRH6",318,0)
 S IBX=$$SETSTR^VALM1(TEXT,IBX,COL,WIDTH)
"RTN","IBTRH6",319,0)
 D SET^VALM10(LINE,IBX)
"RTN","IBTRH6",320,0)
 D:$G(RV)'="" CNTRL^VALM10(LINE,COL,WIDTH,IORVON,IORVOFF)
"RTN","IBTRH6",321,0)
 Q
"RTN","IBTRH6",322,0)
 ;
"RTN","IBTRH6",323,0)
DATA ;EP
"RTN","IBTRH6",324,0)
 ; Protocol action to add/edit fields for the brief 278 request fields
"RTN","IBTRH6",325,0)
 N DA,DIE,DR,DTOUT,IBPSTAT,IBUPOUT,X,Y
"RTN","IBTRH6",326,0)
 S VALMBCK="R"
"RTN","IBTRH6",327,0)
 S FROMDATA=1
"RTN","IBTRH6",328,0)
 D FULL^VALM1
"RTN","IBTRH6",329,0)
 I $$STATUS^IBTRH2(IBTRIEN)="0" D PRMARK1^IBTRH1(IBTRIEN,"01") ; Set 'in-progress mark'
"RTN","IBTRH6",330,0)
 ; Set Initial Values
"RTN","IBTRH6",331,0)
 S IBPSTAT=$P(NODE0,U,4)         ; Patient Status of the entry
"RTN","IBTRH6",332,0)
 ;
"RTN","IBTRH6",333,0)
 S DA=IBTRIEN,DIE=356.22,DR="[IB CREATE 278 REQUEST SHORT]",IBUPOUT=0
"RTN","IBTRH6",334,0)
 D ^DIE
"RTN","IBTRH6",335,0)
 I +$G(IBUPOUT)!$D(Y) I "^01^03^"[(U_$$STATUS^IBTRH2(IBTRIEN)_U) D:$$CLRASK^IBTRH5K() CLRENTRY^IBTRH5K(IBTRIEN)
"RTN","IBTRH6",336,0)
 D CLEAN^VALM10,INIT^IBTRH6
"RTN","IBTRH6",337,0)
 Q
"RTN","IBTRH6",338,0)
 ;
"RTN","IBTRH6",339,0)
SEND278 ;EP
"RTN","IBTRH6",340,0)
 ; Protocol action to send the completed brief 278 request
"RTN","IBTRH6",341,0)
 N IBRESP
"RTN","IBTRH6",342,0)
 S IBTRENT=1
"RTN","IBTRH6",343,0)
 S VALMBCK="R"
"RTN","IBTRH6",344,0)
 D SEND278^IBTRH2
"RTN","IBTRH6",345,0)
 Q
"RTN","IBTRH6",346,0)
 ;
"RTN","IBTRH6",347,0)
HELP ;EP
"RTN","IBTRH6",348,0)
 ; Protocol Action to display help information
"RTN","IBTRH6",349,0)
 S X="?"
"RTN","IBTRH6",350,0)
 D DISP^XQORM1
"RTN","IBTRH6",351,0)
 W !!
"RTN","IBTRH6",352,0)
 Q
"RTN","IBTRH6",353,0)
 ;
"RTN","IBTRH6",354,0)
EXIT ;EP
"RTN","IBTRH6",355,0)
 ; Protocol action to exit the worklist
"RTN","IBTRH6",356,0)
 K ^TMP("IBTRH6",$J)
"RTN","IBTRH6",357,0)
 D CLEAR^VALM1
"RTN","IBTRH6",358,0)
 Q
"RTN","IBTRH6",359,0)
 ;
"RTN","IBTRH6",360,0)
WRTFLDS ; auto populate some fields in 356.22
"RTN","IBTRH6",361,0)
 N DA,DIE,DR,DTOUT,DUOUT,DIRUT,RIEN,X,Y
"RTN","IBTRH6",362,0)
 S RIEN=+$P(NODE0,U,11) I 'RIEN S RIEN=DUZ D CLRCNUM(IBTRIEN)
"RTN","IBTRH6",363,0)
 S DIE=356.22,DA=IBTRIEN,DR="",DR=".11////"_RIEN
"RTN","IBTRH6",364,0)
 I $P(NODE2,U)="" D
"RTN","IBTRH6",365,0)
 .I INPAT,WHICH<3 S DR=DR_";2.01///AR" Q
"RTN","IBTRH6",366,0)
 .S DR=DR_";2.01///HS"
"RTN","IBTRH6",367,0)
 .Q
"RTN","IBTRH6",368,0)
 I $P(NODE2,U,3)="" S DR=DR_";2.03///"_$S(WHICH=1:"1",WHICH=2:"MH",1:"88")
"RTN","IBTRH6",369,0)
 I 'INPAT S DR=DR_";2.04////B" S:$P(NODE2,U,5)="" DR=DR_";2.05///22;2.06///@;2.07///@"
"RTN","IBTRH6",370,0)
 I INPAT S DR=DR_";2.04////A" S:$P(NODE2,U,6)="" DR=DR_";2.05///@;2.06////1;2.07////1"
"RTN","IBTRH6",371,0)
 I $P(NODE2,U,2)="" S DR=DR_";2.02///I"
"RTN","IBTRH6",372,0)
 I $P(NODE7,U)="" S DR=DR_";7.01///Urgent"
"RTN","IBTRH6",373,0)
 D ^DIE
"RTN","IBTRH6",374,0)
 Q
"RTN","IBTRH6",375,0)
 ;
"RTN","IBTRH6",376,0)
CLRCNUM(IBTRIEN) ; clear contact numbers in file 356.22
"RTN","IBTRH6",377,0)
 N FDA,FLD,IENS
"RTN","IBTRH6",378,0)
 S IENS=IBTRIEN_","
"RTN","IBTRH6",379,0)
 F FLD=19.01,19.02,19.03,20,21,22 S FDA(356.22,IENS,FLD)="@"
"RTN","IBTRH6",380,0)
 D FILE^DIE("ET","FDA")
"RTN","IBTRH6",381,0)
 Q
"RTN","IBTRH6",382,0)
 ;
"RTN","IBTRH6",383,0)
WRTCNUM ; auto populate contact numbers in file 356.22
"RTN","IBTRH6",384,0)
 N CNARY,FDA,FLD,IENS,IENS200,QUAL,RDATA,RIEN,STOPFLG,VALUE,Z
"RTN","IBTRH6",385,0)
 S RIEN=+$P($G(^IBT(356.22,IBTRIEN,0)),U,11) I 'RIEN Q
"RTN","IBTRH6",386,0)
 S IENS200=RIEN_"," D GETS^DIQ(200,IENS200,".131;.132;.135;.136",,"RDATA"),GETCNUM(.CNARY)
"RTN","IBTRH6",387,0)
 ; loop through contact #s in file 200
"RTN","IBTRH6",388,0)
 S IENS=IBTRIEN_",",STOPFLG=0 F FLD=.135,.132,.136,.131 D  Q:STOPFLG
"RTN","IBTRH6",389,0)
 .I '$D(CNARY("EMPTY")) S STOPFLG=1 Q  ; no more empty comm. # fields in 356.22
"RTN","IBTRH6",390,0)
 .S VALUE=$$NOPUNCT^IBCEF($G(RDATA(200,IENS200,FLD)),1) I VALUE=""!($L(VALUE)>10) Q  ; no value to file or value is too long
"RTN","IBTRH6",391,0)
 .S QUAL=$S(FLD=.136:"FX",1:"TE")
"RTN","IBTRH6",392,0)
 .I $G(CNARY(QUAL))'="" Q  ; this type of comm # already exists in 356.22
"RTN","IBTRH6",393,0)
 .S Z=$O(CNARY("EMPTY",""))
"RTN","IBTRH6",394,0)
 .K FDA S FDA(356.22,IENS,$P(Z,U))=QUAL D FILE^DIE("E","FDA")
"RTN","IBTRH6",395,0)
 .K FDA S FDA(356.22,IENS,$P(Z,U,3))=VALUE D FILE^DIE("E","FDA")
"RTN","IBTRH6",396,0)
 .K CNARY("EMPTY",Z) S CNARY(QUAL)=VALUE
"RTN","IBTRH6",397,0)
 .Q
"RTN","IBTRH6",398,0)
 Q
"RTN","IBTRH6",399,0)
 ;
"RTN","IBTRH6",400,0)
GETCNUM(CNARY) ; get contact numbers from file 356.22
"RTN","IBTRH6",401,0)
 ; CNARY - array of results, passed by reference
"RTN","IBTRH6",402,0)
 ;
"RTN","IBTRH6",403,0)
 N QUAL,VALUE,Z
"RTN","IBTRH6",404,0)
 S CNARY=0 F Z="19.01^2^20","19.02^3^21","19.03^4^22" D
"RTN","IBTRH6",405,0)
 .S QUAL=$$EXTERNAL^DILFD(356.22,$P(Z,U),,$P(NODE19,U,$P(Z,U,2)))
"RTN","IBTRH6",406,0)
 .S VALUE=$G(^IBT(356.22,IBTRIEN,$P(Z,U,3)))
"RTN","IBTRH6",407,0)
 .I QUAL'="",VALUE'="" S CNARY(QUAL)=VALUE Q
"RTN","IBTRH6",408,0)
 .S CNARY("EMPTY",Z)=""
"RTN","IBTRH6",409,0)
 .Q
"RTN","IBTRH6",410,0)
 Q
"RTN","IBTRH6",411,0)
 ;
"RTN","IBTRH6",412,0)
NEWSL(IBTRIEN) ; create new entry in service line multiple (356.2216) if no entries are there
"RTN","IBTRH6",413,0)
 ; IBTRIEN - ien of the entry in file 356.22
"RTN","IBTRH6",414,0)
 ;
"RTN","IBTRH6",415,0)
 N DA,DD,DIC,DO,DINUM,DLAYGO,DTOUT,DUOUT,RES,X,Y
"RTN","IBTRH6",416,0)
 S RES=0 I '+$G(IBTRIEN) G NEWSLX
"RTN","IBTRH6",417,0)
 S RES=1 I '$D(^IBT(356.22,IBTRIEN,16,1)) D
"RTN","IBTRH6",418,0)
 .S DA(1)=IBTRIEN,DLAYGO=356.2216,DIC(0)="L",DIC="^IBT(356.22,"_DA(1)_",1,",X=1
"RTN","IBTRH6",419,0)
 .D FILE^DICN S RES=+Y K DD,DO
"RTN","IBTRH6",420,0)
 .Q
"RTN","IBTRH6",421,0)
NEWSLX ;
"RTN","IBTRH6",422,0)
 Q RES
"RTN","IBTRH7")
0^47^B41208064^n/a
"RTN","IBTRH7",1,0)
IBTRH7 ;ALB/JWS - HCSR Manually Create 278 Request ;15-MAY-2015
"RTN","IBTRH7",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH7",4,0)
 ;;
"RTN","IBTRH7",5,0)
 Q
"RTN","IBTRH7",6,0)
EN ;EP
"RTN","IBTRH7",7,0)
 ; Main entry point for IBT HCSR MANUAL 278 ADD protocol
"RTN","IBTRH7",8,0)
 ; Input: None
"RTN","IBTRH7",9,0)
 K ^TMP($J,"IBTRH7")
"RTN","IBTRH7",10,0)
 N PATIEN,HCSR,SDATE1,SDATE2,FRDATE
"RTN","IBTRH7",11,0)
 D FULL^VALM1
"RTN","IBTRH7",12,0)
 S VALMBCK="R"
"RTN","IBTRH7",13,0)
 S PATIEN=$$ASKPAT()
"RTN","IBTRH7",14,0)
 I PATIEN<0 Q
"RTN","IBTRH7",15,0)
 S HCSR=$G(^IBE(350.9,1,62))               ; HCSR Site Parameters
"RTN","IBTRH7",16,0)
 ;
"RTN","IBTRH7",17,0)
 D DT^DILF("E","T-"_$P(HCSR,"^",3),.SDATE1)
"RTN","IBTRH7",18,0)
 D DT^DILF("E","T+"_$P(HCSR,"^",13),.SDATE2)
"RTN","IBTRH7",19,0)
 S FRDATE=$$ASKDATE("Date",SDATE1(0),SDATE2(0)) Q:FRDATE=""
"RTN","IBTRH7",20,0)
 ;
"RTN","IBTRH7",21,0)
 ; First find all of the scheduled appointments that match the filter criteria
"RTN","IBTRH7",22,0)
 N ADATE,AINS,AINSIX,CLINIC,SDCOUNT,SFILT,NODE0
"RTN","IBTRH7",23,0)
 K ^TMP($J,"SDAMA301")
"RTN","IBTRH7",24,0)
 D SETFILTS^IBTRHDE(HCSR,.SFILT)           ; Set Appointment filters
"RTN","IBTRH7",25,0)
 S SFILT(1)=$TR(FRDATE,"^",";")
"RTN","IBTRH7",26,0)
 S SFILT(4)=PATIEN
"RTN","IBTRH7",27,0)
 S SDCOUNT=$$SDAPI^SDAMA301(.SFILT)        ; Find the appointments, DBIA4433
"RTN","IBTRH7",28,0)
 ;Q:SDCOUNT<1                               ; No appointments returned
"RTN","IBTRH7",29,0)
 ;
"RTN","IBTRH7",30,0)
 ; Check the active insurance for every found filter against the HCSR Site 
"RTN","IBTRH7",31,0)
 ; parameter list of insurance companies to exclude
"RTN","IBTRH7",32,0)
 ; loop through Appointment Date/time
"RTN","IBTRH7",33,0)
 S ADATE=$P(FRDATE,"^")-1
"RTN","IBTRH7",34,0)
 F  S ADATE=$O(^TMP($J,"SDAMA301",PATIEN,ADATE)) Q:ADATE=""  Q:$P(ADATE,".")>$P(FRDATE,"^",2)  D
"RTN","IBTRH7",35,0)
 . D CKAFINS^IBTRHDE(HCSR,PATIEN,$P(ADATE,"."),65,.AINS,1) ; Check for valid Insurance(s)
"RTN","IBTRH7",36,0)
 . S AINSIX="" F  S AINSIX=$O(AINS(AINSIX)) Q:AINSIX=""  D
"RTN","IBTRH7",37,0)
 .. S CLINIC=$P($P(^TMP($J,"SDAMA301",PATIEN,ADATE),U,2),";",1)
"RTN","IBTRH7",38,0)
 .. ; check for clinic inclusion
"RTN","IBTRH7",39,0)
 .. ;I $O(^IBE(350.9,1,63,"B",CLINIC,""))="" Q
"RTN","IBTRH7",40,0)
 .. ;I '$$CHKLIST^IBTRHDE(63,$O(^IBE(350.9,1,63,"B",CLINIC,"")),$P(AINS(AINSIX),U)) Q
"RTN","IBTRH7",41,0)
 .. ; File the event
"RTN","IBTRH7",42,0)
 .. ; Appointment Date/Time is the 'IEN' of the appointment
"RTN","IBTRH7",43,0)
 .. S NODE0="Appointment^"_$$NOW^XLFDT()_U_PATIEN_U_AINSIX_"^O^^"_CLINIC_U_ADATE_U_ADATE_"^"_$P(AINS(AINSIX),"^")
"RTN","IBTRH7",44,0)
 .. ;save off NODE0 by entry in list
"RTN","IBTRH7",45,0)
 .. D SAVE(NODE0)
"RTN","IBTRH7",46,0)
 .. Q
"RTN","IBTRH7",47,0)
 . Q
"RTN","IBTRH7",48,0)
 ; Finds all admissions that match the filter criteria. Each found
"RTN","IBTRH7",49,0)
 ; admission is then further filtered using the HCSR Site Parameters. 
"RTN","IBTRH7",50,0)
 ; Admissions that match the filter criteria are then filed into the HCS 
"RTN","IBTRH7",51,0)
 ; Review Transmission file (356.22)
"RTN","IBTRH7",52,0)
 ; Input:   HSCR    - HCSR Site Parameter filters
"RTN","IBTRH7",53,0)
 ; Output:  Filtered admissions filed into 356.22
"RTN","IBTRH7",54,0)
 N DA,DATEC,DATEE,DATES,DFN,IBWARD,XX,YY
"RTN","IBTRH7",55,0)
 K AINS,AINSIX,NODE0
"RTN","IBTRH7",56,0)
 ;D GETDAYS2^IBTRHDE(HCSR,.DATES,.DATEE)
"RTN","IBTRH7",57,0)
 ;D DT^DILF("","T-"_(DATES-1),.DATEC)             ; Past Admission Search date
"RTN","IBTRH7",58,0)
 ;D DT^DILF("","T+"_DATEE,.DATEE)                 ; Future Admission Search date
"RTN","IBTRH7",59,0)
 ;
"RTN","IBTRH7",60,0)
 ; First check past/present admissions
"RTN","IBTRH7",61,0)
 S DATEC=$P(FRDATE,"^")-1
"RTN","IBTRH7",62,0)
 F  S DATEC=$O(^DGPM("AMV1",DATEC)) Q:(DATEC="")!($P(DATEC,".")>$P(FRDATE,"^",2))  D  ; DBIA419
"RTN","IBTRH7",63,0)
 . S DA="" F  S DA=$O(^DGPM("AMV1",DATEC,PATIEN,DA)) Q:DA=""  D
"RTN","IBTRH7",64,0)
 .. S IBWARD=$$GET1^DIQ(405,DA_",",.06,"I")
"RTN","IBTRH7",65,0)
 .. D CKAFINS^IBTRHDE(HCSR,PATIEN,$P(DATEC,"."),66,.AINS,1)  ; Check for valid Insurance(s)
"RTN","IBTRH7",66,0)
 .. S AINSIX="" F  S AINSIX=$O(AINS(AINSIX)) Q:AINSIX=""  D
"RTN","IBTRH7",67,0)
 ... ; check for ward exclusion
"RTN","IBTRH7",68,0)
 ... ;I '$$CHKLIST^IBTRHDE(64,$O(^IBE(350.9,1,64,"B",IBWARD,"")),$P(AINS(AINSIX),U)) Q
"RTN","IBTRH7",69,0)
 ... ; File the event
"RTN","IBTRH7",70,0)
 ... S XX=DATEC
"RTN","IBTRH7",71,0)
 ... S YY=$$GET1^DIQ(405,DA_",",.17,"I")    ; Is there a Discharge
"RTN","IBTRH7",72,0)
 ... I YY'="" D                             ; Get External Discharge Date
"RTN","IBTRH7",73,0)
 .... S YY=$$GET1^DIQ(405,DA_",",.01,"I")   ; Discharge Date/Time
"RTN","IBTRH7",74,0)
 .... S XX=XX_"-"_YY
"RTN","IBTRH7",75,0)
 .... Q
"RTN","IBTRH7",76,0)
 ... S NODE0="Admission^"_$$NOW^XLFDT()_U_PATIEN_U_AINSIX_"^I^"_IBWARD_"^^"_XX_U_$P(DATEC,".",1)_"^"_$P(AINS(AINSIX),"^")
"RTN","IBTRH7",77,0)
 ... D SAVE(NODE0)
"RTN","IBTRH7",78,0)
 ... Q
"RTN","IBTRH7",79,0)
 .. Q
"RTN","IBTRH7",80,0)
 . Q
"RTN","IBTRH7",81,0)
 ;
"RTN","IBTRH7",82,0)
 ; Next check future admissions
"RTN","IBTRH7",83,0)
 ;D DT^DILF("","T-"_(DATES-1),.DATEC)             ; Past Admission Search date
"RTN","IBTRH7",84,0)
 S DATEC=$P(FRDATE,"^")-1
"RTN","IBTRH7",85,0)
 F  S DATEC=$O(^DGS(41.1,"C",DATEC)) Q:(DATEC="")!($P(DATEC,".")>$P(FRDATE,"^",2))  D  ; DBIA429
"RTN","IBTRH7",86,0)
 . S DA="" F  S DA=$O(^DGS(41.1,"C",DATEC,DA)) Q:DA=""  D
"RTN","IBTRH7",87,0)
 .. Q:$P($G(^DGS(41.1,DA,0)),U,13)'=""            ; Future Admission was cancelled
"RTN","IBTRH7",88,0)
 .. S IBWARD=$$GET1^DIQ(41.1,DA_",",8,"I")
"RTN","IBTRH7",89,0)
 .. S DFN=$$GET1^DIQ(41.1,DA_",",.01,"I")         ; Patient DFN
"RTN","IBTRH7",90,0)
 .. I DFN'=PATIEN Q  ;filter based on what patient user selected
"RTN","IBTRH7",91,0)
 .. D CKAFINS^IBTRHDE(HCSR,DFN,$P(DATEC,"."),66,.AINS,1)    ; Check for valid Insurance(s)
"RTN","IBTRH7",92,0)
 .. S AINSIX="" F  S AINSIX=$O(AINS(AINSIX)) Q:AINSIX=""  D
"RTN","IBTRH7",93,0)
 ... ; check for ward exclusion
"RTN","IBTRH7",94,0)
 ... ;I '$$CHKLIST^IBTRHDE(64,$O(^IBE(350.9,1,64,"B",IBWARD)),$P(AINS(AINSIX),U)) Q
"RTN","IBTRH7",95,0)
 ... ; File the event
"RTN","IBTRH7",96,0)
 ... S NODE0="Admission^"_$$NOW^XLFDT()_U_DFN_U_AINSIX_"^I^"_IBWARD_"^^"_DATEC_U_$P(DATEC,".",1)_"^"_$P(AINS(AINSIX),"^")
"RTN","IBTRH7",97,0)
 ... D SAVE(NODE0)
"RTN","IBTRH7",98,0)
 ... Q
"RTN","IBTRH7",99,0)
 .. Q
"RTN","IBTRH7",100,0)
 . Q
"RTN","IBTRH7",101,0)
 I '$O(^TMP($J,"IBTRH7","")) W !,"No open appointments or admissions found for that patient",! D PAUSE^VALM1 Q
"RTN","IBTRH7",102,0)
 ;
"RTN","IBTRH7",103,0)
 ; display list of options and then add entry to 356.22
"RTN","IBTRH7",104,0)
 N CNT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,TMP,X
"RTN","IBTRH7",105,0)
 S CNT=+$G(^TMP($J,"IBTRH7"))
"RTN","IBTRH7",106,0)
 S X="" F  S X=$O(^TMP($J,"IBTRH7",X)) Q:X=""  D
"RTN","IBTRH7",107,0)
 . N X1,X2
"RTN","IBTRH7",108,0)
 . S X1=^TMP($J,"IBTRH7",X)
"RTN","IBTRH7",109,0)
 . S Y=$P(X1,"^",8) X ^DD("DD")
"RTN","IBTRH7",110,0)
 . S X2=$E(X_"    ",1,4)_$E($P(X1,"^"),1,3)_"  "_Y_"    "
"RTN","IBTRH7",111,0)
 . I $P(X1,"^",7) S X2=X2_$$GET1^DIQ(44,$P(X1,"^",7),.01)
"RTN","IBTRH7",112,0)
 . I $P(X1,"^",6) S X2=X2_$$GET1^DIQ(42,$P(X1,"^",6),.01)
"RTN","IBTRH7",113,0)
 . S X2=X2_$J(" ",40-$L(X2))
"RTN","IBTRH7",114,0)
 . S X2=X2_" "_$E($$GET1^DIQ(2.312,$P(X1,"^",4)_","_$P(X1,"^",3)_",",.2),1,3)_": "_$E($$GET1^DIQ(36,$P(X1,"^",10)_",",.01),1,26)
"RTN","IBTRH7",115,0)
 . ;S LINE=$G(LINE)+1
"RTN","IBTRH7",116,0)
 . S TMP("DIMSG",X)=X2
"RTN","IBTRH7",117,0)
 D MSG^DIALOG("WM",,,,"TMP")
"RTN","IBTRH7",118,0)
 S DIR(0)="NA^1:"_CNT_":0"
"RTN","IBTRH7",119,0)
 S DIR("A")="Select a scheduled Admission or Appointment for the selected Patient: "
"RTN","IBTRH7",120,0)
 S DIR("?",1)="Choose an admission or appointment."
"RTN","IBTRH7",121,0)
 S DIR("?")="Valid responses are 1 thru "_CNT_" or ^ to exit."
"RTN","IBTRH7",122,0)
 D ^DIR
"RTN","IBTRH7",123,0)
 I ($G(DTOUT))!($G(DUOUT))!($G(DIRUT))!($G(DIROUT)) Q
"RTN","IBTRH7",124,0)
 I +$G(Y)<1 Q
"RTN","IBTRH7",125,0)
 ; add entry to 356.22 file
"RTN","IBTRH7",126,0)
 S NODE0=$P(^TMP($J,"IBTRH7",Y),"^",2,9)
"RTN","IBTRH7",127,0)
 D SETEVENT^IBTRHDE(NODE0)
"RTN","IBTRH7",128,0)
 ;D SORT^IBTRH1(1)
"RTN","IBTRH7",129,0)
 D INIT^IBTRH1
"RTN","IBTRH7",130,0)
 D HDR^IBTRH1
"RTN","IBTRH7",131,0)
 Q
"RTN","IBTRH7",132,0)
 ;
"RTN","IBTRH7",133,0)
ASKPAT()    ; Get the Patient Name
"RTN","IBTRH7",134,0)
 ; Init vars
"RTN","IBTRH7",135,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","IBTRH7",136,0)
 ; Patient lookup
"RTN","IBTRH7",137,0)
 W !
"RTN","IBTRH7",138,0)
 S DIC(0)="AEQM"  ;,DIC("S")="I $D(^IBT(356.22,""D"",Y))"
"RTN","IBTRH7",139,0)
 S DIC("A")=$$FO^IBCNEUT1("Select PATIENT NAME: ",21,"R")
"RTN","IBTRH7",140,0)
 S DIC="^DPT("
"RTN","IBTRH7",141,0)
 D ^DIC
"RTN","IBTRH7",142,0)
 Q +Y
"RTN","IBTRH7",143,0)
 ;
"RTN","IBTRH7",144,0)
ASKDATE(PROMPT,DEFAULT1,DEFAULT2) ; get the from and thru dates
"RTN","IBTRH7",145,0)
 N %DT,X,Y,DT1,DT2,IB1,IB2
"RTN","IBTRH7",146,0)
 S DT1="",IB1="Start Date: ",IB2="End Date: "
"RTN","IBTRH7",147,0)
 I $G(PROMPT)'="" S IB1="Start with "_PROMPT_": ",IB2="Go to "_PROMPT_": "
"RTN","IBTRH7",148,0)
FM1 ;
"RTN","IBTRH7",149,0)
 S %DT="AEX",%DT("A")=IB1,%DT("B")=DEFAULT1
"RTN","IBTRH7",150,0)
 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM1E:(Y<0&(X="")),FMDQ
"RTN","IBTRH7",151,0)
 S (%DT(0),DT2)=$P(Y,".",1) I DT2'>SDATE2 S %DT("B")=DEFAULT2
"RTN","IBTRH7",152,0)
FM2 ;
"RTN","IBTRH7",153,0)
 S %DT="AEX",%DT("A")=IB2 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM2E:(Y<0&(X="")),FMDQ
"RTN","IBTRH7",154,0)
 S DT1=DT2_"^"_$P(Y,".",1)
"RTN","IBTRH7",155,0)
FMDQ ;
"RTN","IBTRH7",156,0)
 Q DT1
"RTN","IBTRH7",157,0)
FM1E ;
"RTN","IBTRH7",158,0)
 W !,"A date must be entered." G FM1
"RTN","IBTRH7",159,0)
FM2E ;
"RTN","IBTRH7",160,0)
 W !,"A date must be entered." G FM2
"RTN","IBTRH7",161,0)
 Q
"RTN","IBTRH7",162,0)
 Q X
"RTN","IBTRH7",163,0)
 ;
"RTN","IBTRH7",164,0)
SAVE(NODE0) ; save entry in temporary ^TMP($J) global for list display
"RTN","IBTRH7",165,0)
 N VAL,ERR,XCT
"RTN","IBTRH7",166,0)
 S VAL(1)=$P(NODE0,"^",3)
"RTN","IBTRH7",167,0)
 S VAL(2)=$P(NODE0,"^",5)
"RTN","IBTRH7",168,0)
 S VAL(3)=$P(NODE0,"^",4)
"RTN","IBTRH7",169,0)
 S VAL(4)=$P(NODE0,"^",9)
"RTN","IBTRH7",170,0)
 I $$FIND1^DIC(356.22,,"Q",.VAL,"E","","ERR") Q
"RTN","IBTRH7",171,0)
 I $D(ERR) Q
"RTN","IBTRH7",172,0)
 S XCT=$G(^TMP($J,"IBTRH7")),XCT=XCT+1,^TMP($J,"IBTRH7")=XCT,^("IBTRH7",XCT)=NODE0
"RTN","IBTRH7",173,0)
 Q
"RTN","IBTRH7",174,0)
 ;
"RTN","IBTRH7",175,0)
FILE ; save selected entry into 356.22 file
"RTN","IBTRH7",176,0)
 D SETEVENT^IBTRHDE(NODE0)
"RTN","IBTRH7",177,0)
 Q 
"RTN","IBTRH8")
0^48^B196836390^n/a
"RTN","IBTRH8",1,0)
IBTRH8 ;ALB/JWS - HCSR Worklist - view 278 message in X12 format ;24-AUG-2015
"RTN","IBTRH8",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH8",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH8",4,0)
 ;;
"RTN","IBTRH8",5,0)
 Q
"RTN","IBTRH8",6,0)
EN ; display message in X12 format
"RTN","IBTRH8",7,0)
 ; IBTRIEN = ien of file 356.22
"RTN","IBTRH8",8,0)
 ; MSGTYPE = 217 or 215
"RTN","IBTRH8",9,0)
 ; RR = 0 for request / inquiry, 1 for response
"RTN","IBTRH8",10,0)
 N X,MSGTYPE,RR,TD,TT,HL1,HL2,ADDR1,ADDR2,ADDR3,REQDATA,SITEIEN
"RTN","IBTRH8",11,0)
 N NODE0,OMSG,DFN,IEN312,INSNODE0,INSNODE3,IEN3553,IEN36,GNUM,PREL
"RTN","IBTRH8",12,0)
 N NODE2,NODE4,NODE5,NODE6,NODE7,NODE8,NODE9,NODE10,NODE17,NODE18,NODE19
"RTN","IBTRH8",13,0)
 N REQCAT,CERT,INPAT,EVNT,HL1,HL2,PAYID,PAYER,PNODE0,IDTYPE,RELINFO
"RTN","IBTRH8",14,0)
 N REQIEN,RMSH10,HLECH,HLFS,HLQ
"RTN","IBTRH8",15,0)
 K ^TMP($J,"IBTRH8")
"RTN","IBTRH8",16,0)
 S SITEIEN=$P($$SITE^VASITE(),U) I SITEIEN'>0 D ERROR Q
"RTN","IBTRH8",17,0)
 S NODE0=$G(^IBT(356.22,IBTRIEN,0)) I NODE0="" D ERROR Q
"RTN","IBTRH8",18,0)
 I $P(NODE0,U,12)="" D ERROR Q
"RTN","IBTRH8",19,0)
 S MSGTYPE=+$P(NODE0,"^",20),RR=0
"RTN","IBTRH8",20,0)
 I MSGTYPE=2 D  I +OMSG=0 D ERROR Q
"RTN","IBTRH8",21,0)
 . S RR=1
"RTN","IBTRH8",22,0)
 . S OMSG=$P(NODE0,U,13)
"RTN","IBTRH8",23,0)
 . I OMSG D
"RTN","IBTRH8",24,0)
 .. S REQIEN=IBTRIEN,IBTRIEN=OMSG
"RTN","IBTRH8",25,0)
 .. S NODE0=$G(^IBT(356.22,OMSG,0))
"RTN","IBTRH8",26,0)
 .. S MSGTYPE=+$P(NODE0,U,20),RR=0,RMSH10=$P(NODE0,"^",12)
"RTN","IBTRH8",27,0)
 . Q
"RTN","IBTRH8",28,0)
 S DFN=+$P(NODE0,U,2)
"RTN","IBTRH8",29,0)
 I DFN'>0 D ERROR Q
"RTN","IBTRH8",30,0)
 S IEN312=+$P(NODE0,U,3)
"RTN","IBTRH8",31,0)
 I IEN312'>0 D ERROR Q
"RTN","IBTRH8",32,0)
 S INSNODE0=$G(^DPT(DFN,.312,IEN312,0)) ; 0-node in file 2.312
"RTN","IBTRH8",33,0)
 S INSNODE3=$G(^DPT(DFN,.312,IEN312,3)) ; 3-node in file 2.312
"RTN","IBTRH8",34,0)
 S IEN3553=+$P(INSNODE0,U,18) ; file 355.3 ien
"RTN","IBTRH8",35,0)
 S IEN36=+$P(INSNODE0,U)
"RTN","IBTRH8",36,0)
 I IEN36'>0 D ERROR Q
"RTN","IBTRH8",37,0)
 S GNUM=$S(IEN3553>0:$$GET1^DIQ(355.3,IEN3553_",",.04),1:"") ; group number
"RTN","IBTRH8",38,0)
 S PREL=$P($G(^DPT(DFN,.312,IEN312,4)),U,3) ; pat. relationship to insured
"RTN","IBTRH8",39,0)
 S NODE2=$G(^IBT(356.22,IBTRIEN,2))
"RTN","IBTRH8",40,0)
 S NODE4=$G(^IBT(356.22,IBTRIEN,4))
"RTN","IBTRH8",41,0)
 S NODE5=$G(^IBT(356.22,IBTRIEN,5))
"RTN","IBTRH8",42,0)
 S NODE6=$G(^IBT(356.22,IBTRIEN,6))
"RTN","IBTRH8",43,0)
 S NODE7=$G(^IBT(356.22,IBTRIEN,7))
"RTN","IBTRH8",44,0)
 S NODE8=$G(^IBT(356.22,IBTRIEN,8))
"RTN","IBTRH8",45,0)
 S NODE9=$G(^IBT(356.22,IBTRIEN,9))
"RTN","IBTRH8",46,0)
 S NODE10=$G(^IBT(356.22,IBTRIEN,10))
"RTN","IBTRH8",47,0)
 S NODE17=$G(^IBT(356.22,IBTRIEN,17))
"RTN","IBTRH8",48,0)
 S NODE18=$G(^IBT(356.22,IBTRIEN,18))
"RTN","IBTRH8",49,0)
 S NODE19=$G(^IBT(356.22,IBTRIEN,19))
"RTN","IBTRH8",50,0)
 S HLECH="^~\&",HLFS="|",HLQ=""""
"RTN","IBTRH8",51,0)
 S X="ST*278*0001*005010X"_$S(MSGTYPE=0:217,1:215) D SAVE(X)
"RTN","IBTRH8",52,0)
 S REQCAT=$$GET1^DIQ(356.001,+$P(NODE2,U)_",",.01) ; request category
"RTN","IBTRH8",53,0)
 S CERT=$$GET1^DIQ(356.002,+$P(NODE2,U,2)_",",.01) ; certification type code
"RTN","IBTRH8",54,0)
 S INPAT=$S($P(NODE0,U,4)="I":1,1:0) ; 1 if inpatient, 0 if outpatient
"RTN","IBTRH8",55,0)
 ; determine event reason code
"RTN","IBTRH8",56,0)
 I 'MSGTYPE D
"RTN","IBTRH8",57,0)
 . I REQCAT'="IN" S EVNT="13" Q  ; request category = "HS" (Health Services), "AR" (Admission), or "SC" (Specialty Care) -> event code = 13 (Request)
"RTN","IBTRH8",58,0)
 . I CERT=3 S EVNT="01" Q  ; request category = "IN" (Individual) and certification type = 3 (Cancel) -> event code = 01 (Cancel)
"RTN","IBTRH8",59,0)
 . S EVNT=36 ; request category = "IN" (Individual) and certification type '= 3 (other than Cancel) -> event code = 36 (Authority To Deduct)
"RTN","IBTRH8",60,0)
 . Q
"RTN","IBTRH8",61,0)
 I MSGTYPE=1 S EVNT=28 ; 28 for 215 message
"RTN","IBTRH8",62,0)
 I RR=1 S EVNT=11 ; 11 for response messages
"RTN","IBTRH8",63,0)
 S X=$P(NODE0,U,15),(TD,TT)=""
"RTN","IBTRH8",64,0)
 I X'="" D H^%DTC I %H D YX^%DTC S TD=$S($E(X)=3:20,1:19)_$E(X,2,7),Y=$P(NODE0,U,15) D DD^%DT S TT=$TR($P(Y,"@",2),":","")
"RTN","IBTRH8",65,0)
 S X="BHT*0007*"_EVNT_"*"_$S(RR=1:$G(RMSH10),1:$P(NODE0,U,12))_"*"_TD_"*"_TT_$S(EVNT=36:"*RU",1:"") D SAVE(X)
"RTN","IBTRH8",66,0)
 S HL1=$G(HL1)+1
"RTN","IBTRH8",67,0)
 S X="HL*"_HL1_"**20*1" D SAVE(X)
"RTN","IBTRH8",68,0)
 I RR=1 D AAA^IBTRH8A("2000A")
"RTN","IBTRH8",69,0)
 S PAYID=""
"RTN","IBTRH8",70,0)
 S PAYER=+$$GET1^DIQ(36,IEN36_",",3.1,"I") ; file 365.12 ien
"RTN","IBTRH8",71,0)
 I PAYER'>0 D ERROR Q
"RTN","IBTRH8",72,0)
 S PNODE0=$G(^IBE(365.12,PAYER,0)),IDTYPE="PI"
"RTN","IBTRH8",73,0)
 S PAYID=$P(PNODE0,U,2) ; VA national id
"RTN","IBTRH8",74,0)
 ; if no VA national id, try to get CMS national id
"RTN","IBTRH8",75,0)
 I PAYID="" S PAYID=$P(PNODE0,U,3),IDTYPE="XV"
"RTN","IBTRH8",76,0)
 ; if still no id, bail out
"RTN","IBTRH8",77,0)
 I PAYID="" D ERROR Q
"RTN","IBTRH8",78,0)
 S RELINFO=$P(NODE2,U,16)  ;UM09 Release of Information Code
"RTN","IBTRH8",79,0)
 ; get HPID, relies on patch IB*2.0*519
"RTN","IBTRH8",80,0)
 ; S $P(TMP,HLECH,3)=$$HPD^IBCNHUT1(IEN36)
"RTN","IBTRH8",81,0)
 ; 
"RTN","IBTRH8",82,0)
 S X="NM1*X3*2*"_$$GET1^DIQ(36,IEN36_",",.01)_"*****"_IDTYPE_"*"_PAYID D SAVE(X)
"RTN","IBTRH8",83,0)
 I RR=1 D PERR,AAA^IBTRH8A("2010A")
"RTN","IBTRH8",84,0)
 ; HL - Requester Level Loop 2000B
"RTN","IBTRH8",85,0)
 S HL2=HL1,HL1=HL1+1
"RTN","IBTRH8",86,0)
 S X="HL*"_HL1_"*"_HL2_"*21*1" D SAVE(X)
"RTN","IBTRH8",87,0)
 S REQDATA=$$PRVDATA^IBTRHLO2(SITEIEN,4)
"RTN","IBTRH8",88,0)
 I $TR(REQDATA,U)="" D ERROR Q
"RTN","IBTRH8",89,0)
 S X="NM1*FA*2*"_$P(REQDATA,U)_"*****XX*"_$P(REQDATA,U,7) D SAVE(X)
"RTN","IBTRH8",90,0)
 I RR=1 D AAA^IBTRH8A("2010B")
"RTN","IBTRH8",91,0)
 S ADDR1=$P(REQDATA,U,2,3),ADDR2=$P(REQDATA,U,4,6)
"RTN","IBTRH8",92,0)
 S ADDR3=$P($$HLADDR^HLFNC(ADDR1,ADDR2),U,1,5)
"RTN","IBTRH8",93,0)
 I 'RR S X="N3*"_$P(ADDR3,"^") S:$P(ADDR3,"^",2)'="" X=X_"*"_$P(ADDR3,"^",2) D SAVE(X)
"RTN","IBTRH8",94,0)
 I 'RR S X="N4*"_$P(ADDR3,"^",3)_"*"_$P(ADDR3,"^",4)_"*"_$P(ADDR3,"^",5) D SAVE(X)
"RTN","IBTRH8",95,0)
 I 'RR D PER
"RTN","IBTRH8",96,0)
 D PRV
"RTN","IBTRH8",97,0)
 S HL2=HL1,HL1=HL1+1
"RTN","IBTRH8",98,0)
 S X="HL*"_HL1_"*"_HL2_"*22*1" D SAVE(X)
"RTN","IBTRH8",99,0)
 D NM1
"RTN","IBTRH8",100,0)
 I PREL'="18" D
"RTN","IBTRH8",101,0)
 .S HL2=HL1,HL1=HL1+1
"RTN","IBTRH8",102,0)
 .S X="HL*"_HL1_"*"_HL2_"*23*1" D SAVE(X)
"RTN","IBTRH8",103,0)
 .D NM12010D
"RTN","IBTRH8",104,0)
 .Q
"RTN","IBTRH8",105,0)
 S HL2=HL1,HL1=HL1+1
"RTN","IBTRH8",106,0)
 S X="HL*"_HL1_"*"_HL2_"*EV*"_$S($O(^IBT(356.22,IBTRIEN,16,0)):1,1:0) D SAVE(X)  ; if line level procedure code sub HL seg, otherwise 0
"RTN","IBTRH8",107,0)
 D EVENT
"RTN","IBTRH8",108,0)
 D DISPLAY^IBTRH8A
"RTN","IBTRH8",109,0)
 I $D(REQIEN) S IBTRIEN=REQIEN
"RTN","IBTRH8",110,0)
 Q
"RTN","IBTRH8",111,0)
 ;
"RTN","IBTRH8",112,0)
PER ; create PER segment in loop 2010B
"RTN","IBTRH8",113,0)
 N CTD,COMMSTR,IEN200,NAME,NODE19,QUAL,TMP,VALUE,Z
"RTN","IBTRH8",114,0)
 S IEN200=+$P(NODE0,U,11) I IEN200'>0 Q
"RTN","IBTRH8",115,0)
 S NAME=$$GET1^DIQ(200,IEN200_",",.01) I NAME="" Q
"RTN","IBTRH8",116,0)
 S NODE19=$G(^IBT(356.22,IBTRIEN,19))
"RTN","IBTRH8",117,0)
 S COMMSTR="" F Z="20^2^19.01","21^3^19.02","22^4^19.03" D
"RTN","IBTRH8",118,0)
 . S QUAL=$P(NODE19,U,$P(Z,U,2)) I QUAL="" Q
"RTN","IBTRH8",119,0)
 . S QUAL=$$EXTERNAL^DILFD(356.22,$P(Z,U,3),,QUAL)
"RTN","IBTRH8",120,0)
 . S VALUE=$G(^IBT(356.22,IBTRIEN,$P(Z,U))) I VALUE="" Q
"RTN","IBTRH8",121,0)
 . I "^FX^HP^TE^WP^"[(U_QUAL_U) S VALUE=$$NOPUNCT^IBCEF(VALUE,1) ; strip punctuation if phone #
"RTN","IBTRH8",122,0)
 . S $P(TMP,U)=QUAL,$P(TMP,U,2)=VALUE
"RTN","IBTRH8",123,0)
 . S COMMSTR=$S(COMMSTR="":TMP,1:COMMSTR_U_TMP)
"RTN","IBTRH8",124,0)
 . Q
"RTN","IBTRH8",125,0)
 S X="PER*IC*"_NAME_"*"_$P(COMMSTR,U)_"*"_$P(COMMSTR,U,2)
"RTN","IBTRH8",126,0)
 I $P(COMMSTR,U,3)'="" S X=X_"*"_$P(COMMSTR,U,3)_"*"_$P(COMMSTR,U,4)
"RTN","IBTRH8",127,0)
 I $P(COMMSTR,U,5)'="" S X=X_"*"_$P(COMMSTR,U,5)_"*"_$P(COMMSTR,U,6)
"RTN","IBTRH8",128,0)
 D SAVE(X)
"RTN","IBTRH8",129,0)
 Q
"RTN","IBTRH8",130,0)
 ;
"RTN","IBTRH8",131,0)
PRV ; create PRV segment (X12: PRV, 2010B)
"RTN","IBTRH8",132,0)
 N PRD,TXNM
"RTN","IBTRH8",133,0)
 S TXNM=$P($$TAXORG^XUSTAX(SITEIEN),U) I TXNM="" Q
"RTN","IBTRH8",134,0)
 S X="PRV*PE*PXC*"_TXNM D SAVE(X)
"RTN","IBTRH8",135,0)
 Q
"RTN","IBTRH8",136,0)
 ;
"RTN","IBTRH8",137,0)
NM1 ; create NM1 segment (X12: NM1, 2010C)
"RTN","IBTRH8",138,0)
 N ADDR1,ADDR2,GT1,SID1,SIDSTR,NAME
"RTN","IBTRH8",139,0)
 S SID1=$P(INSNODE0,U,2) I SID1=""  Q
"RTN","IBTRH8",140,0)
 S NAME=$P(INSNODE0,U,17) I NAME="" Q
"RTN","IBTRH8",141,0)
 ;;S SID2=GNUM ; secondary subscriber id is a group number
"RTN","IBTRH8",142,0)
 S NAME=$$HLNAME^HLFNC(NAME)
"RTN","IBTRH8",143,0)
 S X="NM1*IL*1*"_$P(NAME,"^")_"*"_$P(NAME,"^",2)_"*"_$P(NAME,"^",3)_"**"_$P(NAME,"^",4)_"*MI*"_SID1 D SAVE(X)
"RTN","IBTRH8",144,0)
 I GNUM'="" S X="REF*6P*"_GNUM D SAVE(X)
"RTN","IBTRH8",145,0)
 I 'MSGTYPE,$P(INSNODE3,U,6)'="",$P(INSNODE3,U,8)'="" D
"RTN","IBTRH8",146,0)
 . S ADDR1=$P(INSNODE3,U,6,7),ADDR2=$P(INSNODE3,U,8,10)
"RTN","IBTRH8",147,0)
 . S ADDR3=$$HLADDR^HLFNC(ADDR1,ADDR2) ; subscriber address
"RTN","IBTRH8",148,0)
 . S X="N3*"_$P(ADDR3,"^") S:$P(ADDR3,"^",2)'="" X=X_"*"_$P(ADDR3,"^",2) D SAVE(X)
"RTN","IBTRH8",149,0)
 . S X="N4*"_$P(ADDR3,"^",3)_"*"_$P(ADDR3,"^",4)_"*"_$P(ADDR3,"^",5) D SAVE(X)
"RTN","IBTRH8",150,0)
 . Q
"RTN","IBTRH8",151,0)
 I RR D AAA^IBTRH8A("2010C")
"RTN","IBTRH8",152,0)
 S X="DMG*D8*"_$$HLDATE^HLFNC($P(INSNODE3,U)) ; subscriber dob
"RTN","IBTRH8",153,0)
 I 'MSGTYPE S X=X_"*"_$P(INSNODE3,U,12) ; subscriber sex
"RTN","IBTRH8",154,0)
 D SAVE(X)
"RTN","IBTRH8",155,0)
 I MSGTYPE Q
"RTN","IBTRH8",156,0)
 I PREL'="18" S PREL=$S(PREL="01":"01",PREL=19:19,1:"G8") ; relationship to insured
"RTN","IBTRH8",157,0)
 S X="INS*Y*18" D SAVE(X)
"RTN","IBTRH8",158,0)
 Q
"RTN","IBTRH8",159,0)
 ;
"RTN","IBTRH8",160,0)
NM12010D ; create NM1 segment, loop 2010D
"RTN","IBTRH8",161,0)
 N IDSTR,PID,TMP,VAFSTR
"RTN","IBTRH8",162,0)
 I GNUM="" Q
"RTN","IBTRH8",163,0)
 S VAFSTR="7,8,11,"
"RTN","IBTRH8",164,0)
 S PID=$$EN^VAFHLPID(DFN,VAFSTR)
"RTN","IBTRH8",165,0)
 S TMP=$P(PID,"|",12)
"RTN","IBTRH8",166,0)
 I $P(TMP,U,2)="""""" S $P(TMP,U,2)="",$P(PID,"|",12)=TMP
"RTN","IBTRH8",167,0)
 S X="NM1*QC*1*"_$P($P(PID,"|",6),"^")_"*"_$P($P(PID,"|",6),"^",2) S:$P($P(PID,"|",6),"^",3)'="" X=X_"*"_$P($P(PID,"|",6),"^",3) D SAVE(X)
"RTN","IBTRH8",168,0)
 S X="REF*EJ*"_GNUM D SAVE(X)
"RTN","IBTRH8",169,0)
 I 'MSGTYPE!RR D
"RTN","IBTRH8",170,0)
 . S X="N3*"_$P(TMP,"^") S:$P(TMP,"^",2)'="" X=X_"*"_$P(TMP,"^",2) D SAVE(X)
"RTN","IBTRH8",171,0)
 . S X="N4*"_$P(TMP,"^",3)_"*"_$P(TMP,"^",4)_"*"_$P(TMP,"^",5) D SAVE(X)
"RTN","IBTRH8",172,0)
 . Q
"RTN","IBTRH8",173,0)
 I RR D AAA^IBTRH8A("2010D")
"RTN","IBTRH8",174,0)
 S X="DMG*D8*"_$P(PID,"|",8) S:'MSGTYPE X=X_"*"_$P(PID,"|",9) D SAVE(X)
"RTN","IBTRH8",175,0)
 I MSGTYPE Q
"RTN","IBTRH8",176,0)
 S X="INS*N*"_PREL D SAVE(X)
"RTN","IBTRH8",177,0)
 Q
"RTN","IBTRH8",178,0)
 ;
"RTN","IBTRH8",179,0)
EVENT ; 2000E loop
"RTN","IBTRH8",180,0)
 ; create G2R.PRB segment (G2R segment group)
"RTN","IBTRH8",181,0)
 N PRB,Z,TOT
"RTN","IBTRH8",182,0)
 I RR D AAA^IBTRH8A("2000E")
"RTN","IBTRH8",183,0)
 I CERT="" Q  ; missing certification type code
"RTN","IBTRH8",184,0)
 S X="UM*"_REQCAT_"*"_CERT_"*"_$$GET1^DIQ(365.013,+$P(NODE2,U,3)_",",.01)
"RTN","IBTRH8",185,0)
 I $P(NODE2,U,4)'="" S X=X_"*"_$S($P(NODE2,U,4)="A":($P(NODE2,U,6)_$P(NODE2,U,7)),1:$$GET1^DIQ(353.1,+$P(NODE2,U,5)_",",.01))_":"_$P(NODE2,U,4)
"RTN","IBTRH8",186,0)
 E  D  I MSGTYPE Q
"RTN","IBTRH8",187,0)
 . I MSGTYPE D SAVE(X) Q
"RTN","IBTRH8",188,0)
 . S X=X_"*"
"RTN","IBTRH8",189,0)
 S X=X_"*"_$P(NODE2,U,8)_":"_$P(NODE2,U,9)_":"_$P(NODE2,U,10)_":"_$$GET1^DIQ(5,+$P(NODE2,U,11)_",",1)
"RTN","IBTRH8",190,0)
 S Z=$$GET1^DIQ(779.004,+$P(NODE2,U,12)_",",.01) I Z'="",Z'="USA" S X=X_":"_Z
"RTN","IBTRH8",191,0)
 S X=X_"*"_$P(NODE2,U,13)_"*"_$$GET1^DIQ(356.003,+$P(NODE2,U,14)_",",.01)_"*"_$$GET1^DIQ(356.004,+$P(NODE2,U,15)_",",.01)_"*"_$P(NODE2,U,16)_"*"_$$GET1^DIQ(356.005,+$P(NODE2,U,17)_",",.01) D SAVE(X)
"RTN","IBTRH8",192,0)
 I RR D HCR
"RTN","IBTRH8",193,0)
 D REF
"RTN","IBTRH8",194,0)
 D DTP
"RTN","IBTRH8",195,0)
 D HI
"RTN","IBTRH8",196,0)
 ; for 217 request only
"RTN","IBTRH8",197,0)
 I 'MSGTYPE D 
"RTN","IBTRH8",198,0)
 . D HSD,CRC
"RTN","IBTRH8",199,0)
 . I $TR(NODE18,U)'="" D CR1
"RTN","IBTRH8",200,0)
 . D CR2,CR5^IBTRH8A,CR6^IBTRH8A,PWK,MSG
"RTN","IBTRH8",201,0)
 D NM1^IBTRH8A
"RTN","IBTRH8",202,0)
 ;
"RTN","IBTRH8",203,0)
 I '$O(^IBT(356.22,IBTRIEN,16,0)) Q
"RTN","IBTRH8",204,0)
 S HL2=HL1,HL1=HL1+1
"RTN","IBTRH8",205,0)
 S X="HL*"_HL1_"*"_HL2_"*SS*0" D SAVE(X)
"RTN","IBTRH8",206,0)
 D DETAIL^IBTRH8A
"RTN","IBTRH8",207,0)
 S TOT=$G(^TMP($J,"IBTRH8"))+1
"RTN","IBTRH8",208,0)
 S X="SE*"_TOT_"*0001" D SAVE(X)
"RTN","IBTRH8",209,0)
 Q
"RTN","IBTRH8",210,0)
 ;
"RTN","IBTRH8",211,0)
REF ; REF segment
"RTN","IBTRH8",212,0)
 I $P(NODE17,U)'="" S X="REF*BB*"_$P(NODE17,U) D SAVE(X) Q
"RTN","IBTRH8",213,0)
 I $P(NODE17,U,2)'="" S X="REF*NT*"_$P(NODE17,U,2) D SAVE(X) Q
"RTN","IBTRH8",214,0)
 Q
"RTN","IBTRH8",215,0)
 ;
"RTN","IBTRH8",216,0)
DTP ; create DTP segments
"RTN","IBTRH8",217,0)
 N DATA,Z,Z1
"RTN","IBTRH8",218,0)
 S Z=$P(NODE0,U,7) I Z'="" D
"RTN","IBTRH8",219,0)
 . S Z1="AAH" I INPAT,REQCAT="AR" S Z1="435"
"RTN","IBTRH8",220,0)
 . S DATA(Z1)=$S(Z["-":$$HLDATE^HLFNC($P($P(Z,"-"),"."))_"-"_$$HLDATE^HLFNC($P($P(Z,"-",2),".")),1:$$HLDATE^HLFNC($P(Z,"."))) ; admission / appointment date
"RTN","IBTRH8",221,0)
 . Q
"RTN","IBTRH8",222,0)
 S Z=$P(NODE2,U,18) I Z'="" S DATA("439")=$$HLDATE^HLFNC($P(Z,".")) ; accident date
"RTN","IBTRH8",223,0)
 I 'MSGTYPE D
"RTN","IBTRH8",224,0)
 . S Z=$P(NODE2,U,19) I Z'="" S DATA("484")=$$HLDATE^HLFNC($P(Z,".")) ; last menstrual period date
"RTN","IBTRH8",225,0)
 . S Z=$P(NODE2,U,20) I Z'="" S DATA("ABC")=$$HLDATE^HLFNC(Z) ; estimated DOB
"RTN","IBTRH8",226,0)
 . S Z=$P(NODE2,U,21) I Z'="" S DATA("431")=$$HLDATE^HLFNC(Z) ; illness date
"RTN","IBTRH8",227,0)
 . Q
"RTN","IBTRH8",228,0)
 ; the following date is for "Admission Review" request category only
"RTN","IBTRH8",229,0)
 I INPAT,REQCAT="AR" S Z=$P(NODE2,U,22) S:Z'="" DATA("096")=$$HLDATE^HLFNC($P(Z,".")) ; discharge date
"RTN","IBTRH8",230,0)
 S Z="" F  S Z=$O(DATA(Z)) Q:Z=""  D
"RTN","IBTRH8",231,0)
 . S X="DTP*"_Z_"*D8*"_DATA(Z) D SAVE(X)
"RTN","IBTRH8",232,0)
 . Q
"RTN","IBTRH8",233,0)
 Q 
"RTN","IBTRH8",234,0)
 ;
"RTN","IBTRH8",235,0)
HI ; create HI segments
"RTN","IBTRH8",236,0)
 N DG1,DIAG,NODE0,SEQ,Z
"RTN","IBTRH8",237,0)
 S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,3,Z)) Q:Z'=+Z  D
"RTN","IBTRH8",238,0)
 . S NODE0=$G(^IBT(356.22,IBTRIEN,3,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.223
"RTN","IBTRH8",239,0)
 . S SEQ=SEQ+1 I SEQ>12 Q  ; only allow up to 12 DG1 segments
"RTN","IBTRH8",240,0)
 . I MSGTYPE,SEQ>1 Q  ; only allow 1 DG1 segment in 215 message
"RTN","IBTRH8",241,0)
 . S DIAG=$TR($$EXTERNAL^DILFD(356.223,.02,,$P(NODE0,U,2)),".") I DIAG="" Q  ; invalid diagnosis code
"RTN","IBTRH8",242,0)
 . S DG1(SEQ)="*"_$$GET1^DIQ(356.006,+$P(NODE0,U)_",",.01)_":"_DIAG I 'MSGTYPE,$P(NODE0,U,3)'="" S DG1(SEQ)=DG1(SEQ)_":D8:"_$$HLDATE^HLFNC($P(NODE0,U,3))
"RTN","IBTRH8",243,0)
 . ;S DG1="DG1"_HLFS_SEQ_HLFS_HLFS_$$ENCHL7^IBCNEHLQ(DIAG)_HLFS_HLFS_$S('MSGTYPE:$$HLDATE^HLFNC($P(NODE0,U,3)),1:"")_HLFS_"W"
"RTN","IBTRH8",244,0)
 . Q
"RTN","IBTRH8",245,0)
 I '$O(DG1("")) Q
"RTN","IBTRH8",246,0)
 S X="HI"
"RTN","IBTRH8",247,0)
 S Z=0 F  S Z=$O(DG1(Z)) Q:Z=""  S X=X_DG1(Z)
"RTN","IBTRH8",248,0)
 D SAVE(X)
"RTN","IBTRH8",249,0)
 Q
"RTN","IBTRH8",250,0)
 ;
"RTN","IBTRH8",251,0)
HSD ; create HSD segment
"RTN","IBTRH8",252,0)
 N QUAL,VALUE,HSD,I
"RTN","IBTRH8",253,0)
 S QUAL=$$GET1^DIQ(365.016,+$P(NODE4,U)_",",.01)
"RTN","IBTRH8",254,0)
 S VALUE=$P(NODE4,U,2)
"RTN","IBTRH8",255,0)
 I QUAL'="",VALUE'="" S HSD(1)=QUAL,HSD(2)=VALUE  ;ZHS.2=4.01, ZHS.3=4.02 
"RTN","IBTRH8",256,0)
 S QUAL=$P(NODE4,U,3)
"RTN","IBTRH8",257,0)
 S VALUE=$P(NODE4,U,4)
"RTN","IBTRH8",258,0)
 I QUAL'="",VALUE'="" S HSD(3)=QUAL  ;ZHS.4=4.03
"RTN","IBTRH8",259,0)
 I VALUE'="" S HSD(4)=VALUE  ;ZHS.5=4.04
"RTN","IBTRH8",260,0)
 S QUAL=$$GET1^DIQ(365.015,+$P(NODE4,U,5)_",",.01)
"RTN","IBTRH8",261,0)
 S VALUE=$P(NODE4,U,6)
"RTN","IBTRH8",262,0)
 I QUAL'="",VALUE'="" S HSD(5)=QUAL,HSD(6)=VALUE ;ZHS.6=4.05, ZHS.7=4.06
"RTN","IBTRH8",263,0)
 I +$P(NODE4,U,7) S HSD(7)=$$GET1^DIQ(365.025,+$P(NODE4,U,7)_",",.01) ;ZHS.8=4.07
"RTN","IBTRH8",264,0)
 I +$P(NODE4,U,8) S HSD(8)=$$GET1^DIQ(356.007,+$P(NODE4,U,8)_",",.01) ;ZHS.9=4.08
"RTN","IBTRH8",265,0)
 I '$D(HSD) Q
"RTN","IBTRH8",266,0)
 S X="HSD" F I=1:1:8 S X=X_"*"_$G(HSD(I))
"RTN","IBTRH8",267,0)
 D SAVE(X)
"RTN","IBTRH8",268,0)
 Q
"RTN","IBTRH8",269,0)
 ;
"RTN","IBTRH8",270,0)
CRC ; create CRC and CL1 segments in loop 2000E
"RTN","IBTRH8",271,0)
 N PC,Z
"RTN","IBTRH8",272,0)
 I +$P(NODE4,U,10) D  ; at least one ambulance cert. condition exists
"RTN","IBTRH8",273,0)
 . S X="CRC*07*"_$P(NODE4,U,9)
"RTN","IBTRH8",274,0)
 . F PC=10:1:14 S Z=+$P(NODE4,U,PC) I Z S X=X_"*"_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRH8",275,0)
 . D SAVE(X)
"RTN","IBTRH8",276,0)
 . Q
"RTN","IBTRH8",277,0)
 I +$P(NODE5,U,2) D  ; at least one chiropractic cert. condition exists
"RTN","IBTRH8",278,0)
 . S X="CRC*08*"_$P(NODE5,U)
"RTN","IBTRH8",279,0)
 . F PC=2:1:6 S Z=+$P(NODE5,U,PC) I Z S X=X_"*"_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRH8",280,0)
 . D SAVE(X)
"RTN","IBTRH8",281,0)
 . Q
"RTN","IBTRH8",282,0)
 I +$P(NODE5,U,8) D  ; at least one DME cert. condition exists
"RTN","IBTRH8",283,0)
 . S X="CRC*09*"_$P(NODE5,U,7)
"RTN","IBTRH8",284,0)
 . F PC=8:1:12 S Z=+$P(NODE5,U,PC) I Z S X=X_"*"_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRH8",285,0)
 . D SAVE(X)
"RTN","IBTRH8",286,0)
 . Q
"RTN","IBTRH8",287,0)
 I +$P(NODE5,U,14) D  ; at least one oxygen cert. condition exists
"RTN","IBTRH8",288,0)
 . S X="CRC*11*"_$P(NODE5,U,13)
"RTN","IBTRH8",289,0)
 . F PC=14:1:18 S Z=+$P(NODE5,U,PC) I Z S X=X_"*"_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRH8",290,0)
 . D SAVE(X)
"RTN","IBTRH8",291,0)
 . Q
"RTN","IBTRH8",292,0)
 I +$P(NODE6,U,2) D  ; at least one functional limit cert. condition exists
"RTN","IBTRH8",293,0)
 . S X="CRC*75*"_$P(NODE6,U)
"RTN","IBTRH8",294,0)
 . F PC=2:1:6 S Z=+$P(NODE6,U,PC) I Z S X=X_"*"_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRH8",295,0)
 . D SAVE(X)
"RTN","IBTRH8",296,0)
 . Q
"RTN","IBTRH8",297,0)
 I +$P(NODE6,U,8) D  ; at least one activities cert. condition exists
"RTN","IBTRH8",298,0)
 . S X="CRC*76*"_$P(NODE6,U,7)
"RTN","IBTRH8",299,0)
 . F PC=8:1:12 S Z=+$P(NODE6,U,PC) I Z S X=X_"*"_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRH8",300,0)
 . D SAVE(X)
"RTN","IBTRH8",301,0)
 . Q
"RTN","IBTRH8",302,0)
 I +$P(NODE6,U,14) D  ; at least one mental status cert. condition exists
"RTN","IBTRH8",303,0)
 . S X="CRC*77*"_$P(NODE6,U,13)
"RTN","IBTRH8",304,0)
 . F PC=14:1:18 S Z=+$P(NODE6,U,PC) I Z S X=X_"*"_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRH8",305,0)
 . D SAVE(X)
"RTN","IBTRH8",306,0)
 . Q
"RTN","IBTRH8",307,0)
 I INPAT,$TR($P(NODE7,U,1,4),U)'="" D  ; inpatient, admission data exists
"RTN","IBTRH8",308,0)
 . S X="CL1*"_$P(NODE7,U)
"RTN","IBTRH8",309,0)
 . S Z=+$P(NODE7,U,2) I Z S $P(X,"*",3)=$$GET1^DIQ(356.009,Z_",",.01)
"RTN","IBTRH8",310,0)
 . S Z=+$P(NODE7,U,3) I Z S $P(X,"*",4)=$$GET1^DIQ(356.01,Z_",",.01)
"RTN","IBTRH8",311,0)
 . S Z=+$P(NODE7,U,4) I Z S $P(X,"*",5)=$$GET1^DIQ(356.011,Z_",",.01)
"RTN","IBTRH8",312,0)
 . D SAVE(X)
"RTN","IBTRH8",313,0)
 . Q
"RTN","IBTRH8",314,0)
 Q
"RTN","IBTRH8",315,0)
 ;
"RTN","IBTRH8",316,0)
CR1 ; create CR1 segment
"RTN","IBTRH8",317,0)
 N Z,Z1
"RTN","IBTRH8",318,0)
 S X="CR1*"
"RTN","IBTRH8",319,0)
 S $P(X,"*",5)=$P(NODE18,U,4)
"RTN","IBTRH8",320,0)
 S $P(X,"*",10)=$P(NODE18,U,9)
"RTN","IBTRH8",321,0)
 S $P(X,"*",11)=$P(NODE18,U,10)
"RTN","IBTRH8",322,0)
 S Z=$P(NODE18,U,2) I Z'="" S $P(X,"*",2)=$P(NODE18,U),$P(X,"*",3)=Z
"RTN","IBTRH8",323,0)
 S Z=$P(NODE18,U,6) I Z'="" S $P(X,"*",6)=$P(NODE18,U,5),$P(X,"*",7)=Z
"RTN","IBTRH8",324,0)
 S $P(X,"*",4)=$P(NODE18,U,3)
"RTN","IBTRH8",325,0)
 D SAVE(X)
"RTN","IBTRH8",326,0)
 Q
"RTN","IBTRH8",327,0)
 ;
"RTN","IBTRH8",328,0)
CR2 ; create CR2 segment
"RTN","IBTRH8",329,0)
 N TXNUM,TXCNT,Z
"RTN","IBTRH8",330,0)
 S TXNUM=$P(NODE7,U,5) I TXNUM="" Q  ; missing treatment series number
"RTN","IBTRH8",331,0)
 S TXCNT=$P(NODE7,U,6) I TXCNT="" Q  ; missing treatment count
"RTN","IBTRH8",332,0)
 S TXNUM=+TXNUM,TXCNT=+TXCNT
"RTN","IBTRH8",333,0)
 S X="CR2*"_TXNUM_"*"_TXCNT
"RTN","IBTRH8",334,0)
 S Z=+$P(NODE7,U,7) I Z>0 S $P(X,"*",4)=$$GET1^DIQ(356.012,Z_",",.01)
"RTN","IBTRH8",335,0)
 S Z=+$P(NODE7,U,8) I Z>0 S $P(X,"*",5)=$$GET1^DIQ(356.012,Z_",",.01)
"RTN","IBTRH8",336,0)
 S $P(X,"*",9)=$P(NODE7,U,9)
"RTN","IBTRH8",337,0)
 I $P(NODE7,U,10)'="" S $P(X,"*",10)=$P(NODE7,U,10)
"RTN","IBTRH8",338,0)
 S $P(X,"*",13)=$P(NODE7,U,13)
"RTN","IBTRH8",339,0)
 S $P(X,"*",11)=$P(NODE7,U,11)
"RTN","IBTRH8",340,0)
 S $P(X,"*",12)=$P(NODE7,U,12)
"RTN","IBTRH8",341,0)
 D SAVE(X)
"RTN","IBTRH8",342,0)
 Q
"RTN","IBTRH8",343,0)
 ;
"RTN","IBTRH8",344,0)
PWK ; create the PWK segment loop 2000E
"RTN","IBTRH8",345,0)
 N NODE0,SEQ,Z,Z1
"RTN","IBTRH8",346,0)
 S SEQ=0,Z="" F  S Z=$O(^IBT(356.22,IBTRIEN,11,"B",Z)) Q:Z=""  D
"RTN","IBTRH8",347,0)
 . S Z1=+$O(^IBT(356.22,IBTRIEN,11,"B",Z,"")) I 'Z1 Q
"RTN","IBTRH8",348,0)
 . S NODE0=$G(^IBT(356.22,IBTRIEN,11,Z1,0)) I NODE0="" Q  ; 0-node of sub-file 356.2211
"RTN","IBTRH8",349,0)
 . S SEQ=SEQ+1 I SEQ>10 Q
"RTN","IBTRH8",350,0)
 . S X="PWK*"
"RTN","IBTRH8",351,0)
 . S $P(X,"*",2)=$$GET1^DIQ(356.018,+$P(NODE0,U)_",",.01)
"RTN","IBTRH8",352,0)
 . I $P(NODE0,U,3)'="" S $P(X,"*",7)=$P(NODE0,U,3),$P(X,"*",6)="AC"
"RTN","IBTRH8",353,0)
 . S $P(X,"*",8)=$P(NODE0,U,4)
"RTN","IBTRH8",354,0)
 . S $P(X,"*",3)=$P(NODE0,U,2)
"RTN","IBTRH8",355,0)
 . D SAVE(X)
"RTN","IBTRH8",356,0)
 . Q
"RTN","IBTRH8",357,0)
 Q
"RTN","IBTRH8",358,0)
 ;
"RTN","IBTRH8",359,0)
MSG ; create the MSG segment loop 2000E
"RTN","IBTRH8",360,0)
 N MSG,NTE
"RTN","IBTRH8",361,0)
 S MSG=$$WP2STR^IBTRHLO2(356.22,12,IBTRIEN_",",264)
"RTN","IBTRH8",362,0)
 I MSG="" Q
"RTN","IBTRH8",363,0)
 S X="MSG*"_MSG
"RTN","IBTRH8",364,0)
 D SAVE(X)
"RTN","IBTRH8",365,0)
 Q
"RTN","IBTRH8",366,0)
 ;
"RTN","IBTRH8",367,0)
SAVE(X) ;
"RTN","IBTRH8",368,0)
 N XCT
"RTN","IBTRH8",369,0)
 S (^TMP($J,"IBTRH8"),XCT)=$G(^TMP($J,"IBTRH8"))+1
"RTN","IBTRH8",370,0)
 S ^TMP($J,"IBTRH8",XCT)=X
"RTN","IBTRH8",371,0)
 Q
"RTN","IBTRH8",372,0)
 ;
"RTN","IBTRH8",373,0)
ERROR ;
"RTN","IBTRH8",374,0)
 D CLEAR^VALM1
"RTN","IBTRH8",375,0)
 I $P(NODE0,"^",12)="" W !!,"Unable to display the 278 request. The request for this entry has not been sent.",!!
"RTN","IBTRH8",376,0)
 I $P(NODE0,"^",12)'="" W !!,"INSUFFICIENT DATA TO DISPLAY X12 TRANSACTION.",!!
"RTN","IBTRH8",377,0)
 D PAUSE^VALM1
"RTN","IBTRH8",378,0)
 S VALMBCK="R"
"RTN","IBTRH8",379,0)
 D RE^VALM4
"RTN","IBTRH8",380,0)
 I $D(REQIEN) S IBTRIEN=REQIEN
"RTN","IBTRH8",381,0)
 Q 
"RTN","IBTRH8",382,0)
 ;
"RTN","IBTRH8",383,0)
PERR ; PER segment for response loop 2010A
"RTN","IBTRH8",384,0)
 N X
"RTN","IBTRH8",385,0)
 S X="PER*IC"
"RTN","IBTRH8",386,0)
 S $P(X,"*",3)=$P(NODE19,"^")
"RTN","IBTRH8",387,0)
 S $P(X,"*",4)=$P(NODE19,"^",2)
"RTN","IBTRH8",388,0)
 S $P(X,"*",5)=$$NOPUNCT^IBCEF($P($G(^IBT(356.22,IBTRIEN,20)),"^"),1)
"RTN","IBTRH8",389,0)
 S $P(X,"*",6)=$P(NODE19,"^",3)
"RTN","IBTRH8",390,0)
 S $P(X,"*",7)=$$NOPUNCT^IBCEF($P($G(^IBT(356.22,IBTRIEN,21)),"^"),1)
"RTN","IBTRH8",391,0)
 S $P(X,"*",8)=$P(NODE19,"^",4)
"RTN","IBTRH8",392,0)
 S $P(X,"*",9)=$$NOPUNCT^IBCEF($P($G(^IBT(356.22,IBTRIEN,22)),"^"),1)
"RTN","IBTRH8",393,0)
 D SAVE(X)
"RTN","IBTRH8",394,0)
 Q
"RTN","IBTRH8",395,0)
 ;
"RTN","IBTRH8",396,0)
HCR ; HCR segment for response loop 2000E
"RTN","IBTRH8",397,0)
 N X,NODE103
"RTN","IBTRH8",398,0)
 I '$D(^IBT(356.22,IBTRIEN,103)) Q
"RTN","IBTRH8",399,0)
 S NODE103=$G(^IBT(356.22,IBTRIEN,103))
"RTN","IBTRH8",400,0)
 S X="HCR*"
"RTN","IBTRH8",401,0)
 S $P(X,"*",2)=$$GET1^DIQ(356.02,$P(NODE103,"^")_",",.01)
"RTN","IBTRH8",402,0)
 S $P(X,"*",3)=$P(NODE103,"^",2)
"RTN","IBTRH8",403,0)
 S $P(X,"*",4)=$$GET1^DIQ(356.021,$P(NODE103,"^",3)_",",.01)
"RTN","IBTRH8",404,0)
 S $P(X,"*",5)=$P(NODE103,"^",4)
"RTN","IBTRH8",405,0)
 D SAVE(X)
"RTN","IBTRH8",406,0)
 Q
"RTN","IBTRH8A")
0^49^B120085680^n/a
"RTN","IBTRH8A",1,0)
IBTRH8A ;ALB/JWS - HCSR Worklist - view 278 message in X12 format ;24-AUG-2015
"RTN","IBTRH8A",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRH8A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRH8A",4,0)
 ;;
"RTN","IBTRH8A",5,0)
 Q
"RTN","IBTRH8A",6,0)
NM1 ; create NM1 segment in loop 2010EA
"RTN","IBTRH8A",7,0)
 N R1,R2,R3,R4
"RTN","IBTRH8A",8,0)
 N SEQ,Z,NODE0,PRVPTR,PERSON,PRVDATA,ADDR1,ADDR2,NAME,ADDR3,ENTITY,PCODEPRV,TAXONOMY
"RTN","IBTRH8A",9,0)
 ; create NM1 segments for patient event providers
"RTN","IBTRH8A",10,0)
 S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,13,Z)) Q:Z'=+Z  D
"RTN","IBTRH8A",11,0)
 . S NODE0=$G(^IBT(356.22,IBTRIEN,13,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.2213
"RTN","IBTRH8A",12,0)
 . S SEQ=SEQ+1 I SEQ>14 Q  ; only allow up to 14 providers
"RTN","IBTRH8A",13,0)
 . S PRVPTR=$P(NODE0,U,3) I PRVPTR="" Q  ; missing provider pointer
"RTN","IBTRH8A",14,0)
 . S PERSON=$P(NODE0,U,2) I 'PERSON Q  ; missing person / non-person indicator
"RTN","IBTRH8A",15,0)
 . S PRVDATA=$$PRVDATA^IBTRHLO2(+$P(PRVPTR,";"),$P($P(PRVPTR,"(",2),","))
"RTN","IBTRH8A",16,0)
 . S ADDR1=$P(PRVDATA,U,2,3),ADDR2=$P(PRVDATA,U,4,6)
"RTN","IBTRH8A",17,0)
 . S NAME=$$HLNAME^HLFNC($P(PRVDATA,U))
"RTN","IBTRH8A",18,0)
 . S ENTITY=$$GET1^DIQ(365.022,+$P(NODE0,U)_",",.01)
"RTN","IBTRH8A",19,0)
 . S X="NM1*"_ENTITY_"*"_PERSON_"*"_$P(NAME,"^")_"*"_$P(NAME,"^",2)_"*"_$P(NAME,"^",3)_"**"_$P(NAME,"^",4)_"*XX*"_$P(PRVDATA,U,7)
"RTN","IBTRH8A",20,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",21,0)
 . S ADDR3=$P($$HLADDR^HLFNC(ADDR1,ADDR2),U,1,5)
"RTN","IBTRH8A",22,0)
 . S X="N3*"_$P(ADDR3,U)_"*"_$P(ADDR3,U,2)
"RTN","IBTRH8A",23,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",24,0)
 . S X="N4*"_$P(ADDR3,U,3)_"*"_$P(ADDR3,U,4)_"*"_$P(ADDR3,U,5)
"RTN","IBTRH8A",25,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",26,0)
 . ; add PRV segment info for Patient Event Provider Loop 2010EA
"RTN","IBTRH8A",27,0)
 . S PCODEPRV=$$PCODECNV^IBTRHLO2(ENTITY) I PCODEPRV'="" D
"RTN","IBTRH8A",28,0)
 .. S TAXONOMY=$P($$GTXNMY^IBTRH3(PRVPTR),U) I TAXONOMY="" Q
"RTN","IBTRH8A",29,0)
 .. S X="PRV*"_PCODEPRV_"*PXC*"_TAXONOMY
"RTN","IBTRH8A",30,0)
 .. D SAVE^IBTRH8(X)
"RTN","IBTRH8A",31,0)
 .. Q
"RTN","IBTRH8A",32,0)
 . Q
"RTN","IBTRH8A",33,0)
 ; create NM1, N3, N4 for Patient Event Transport Loop 2010EB
"RTN","IBTRH8A",34,0)
 I 'MSGTYPE S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,14,Z)) Q:Z'=+Z  D
"RTN","IBTRH8A",35,0)
 . S NODE0=$G(^IBT(356.22,IBTRIEN,14,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.2214
"RTN","IBTRH8A",36,0)
 . S SEQ=SEQ+1 I SEQ>5 Q  ; only allow up to 5 transports
"RTN","IBTRH8A",37,0)
 . S X="NM1*"_$P(NODE0,U)_"*2*"_$P(NODE0,U,2) D SAVE^IBTRH8(X)
"RTN","IBTRH8A",38,0)
 . S (ADDR1,ADDR2,ADDR3)=""
"RTN","IBTRH8A",39,0)
 . I $P(NODE0,U,3)'="",$P(NODE0,U,5)'="" S ADDR1=$P(NODE0,U,3,4),ADDR2=$P(NODE0,U,5,7)
"RTN","IBTRH8A",40,0)
 . S X="N3*"_$P(NODE0,U,3)_"*"_$P(NODE0,U,4) D SAVE^IBTRH8(X)
"RTN","IBTRH8A",41,0)
 . S ADDR3=$P($$HLADDR^HLFNC(ADDR1,ADDR2),"^",1,5)
"RTN","IBTRH8A",42,0)
 . S X="N4*"_$P(ADDR3,U,3)_"*"_$P(ADDR3,U,4)_"*"_$P(ADDR3,U,5) D SAVE^IBTRH8(X)
"RTN","IBTRH8A",43,0)
 . Q
"RTN","IBTRH8A",44,0)
 ; create NM1 segment for Patient Event Other UMO Name loop 2010EC
"RTN","IBTRH8A",45,0)
 I 'MSGTYPE S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,15,Z)) Q:Z'=+Z  D
"RTN","IBTRH8A",46,0)
 . S NODE0=$G(^IBT(356.22,IBTRIEN,15,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.2215
"RTN","IBTRH8A",47,0)
 . S SEQ=SEQ+1 I SEQ>3 Q  ; only allow up to 3 other UMOs
"RTN","IBTRH8A",48,0)
 . S X="NM1*"_$P(NODE0,U)_"*2*"_$$EXTERNAL^DILFD(356.2215,.02,,+$P(NODE0,U,2))
"RTN","IBTRH8A",49,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",50,0)
 . S R1=$P(NODE0,U,3),R2=$P(NODE0,U,4),R3=$P(NODE0,U,5),R4=$P(NODE0,U,6)
"RTN","IBTRH8A",51,0)
 . I R1="",R2="",R3="",R4="" Q  ; no UMO denial reasons to send
"RTN","IBTRH8A",52,0)
 . S X="REF*ZZ*"_R1_"**"_$S(R2'="":"ZZ",1:"")_":"_R2_":"_$S(R3'="":"ZZ",1:"")_":"_R3_":"_$S(R4'="":"ZZ",1:"")_":"_R4 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",53,0)
 . I $P(NODE0,U,7)="" Q
"RTN","IBTRH8A",54,0)
 . S X="DTP*598*D8*"_$$HLDATE^HLFNC($P(NODE0,U,7)) D SAVE^IBTRH8(X)
"RTN","IBTRH8A",55,0)
 . Q
"RTN","IBTRH8A",56,0)
 Q
"RTN","IBTRH8A",57,0)
 ;
"RTN","IBTRH8A",58,0)
DETAIL ; generate service line detail X12 segments
"RTN","IBTRH8A",59,0)
 N FQUAL,FTYPE,NODE160,PRB,REQCAT,Z1
"RTN","IBTRH8A",60,0)
 S Z1="" F  S Z1=$O(^IBT(356.22,IBTRIEN,16,Z1)) Q:Z1'=+Z1  D
"RTN","IBTRH8A",61,0)
 . S NODE160=$G(^IBT(356.22,IBTRIEN,16,Z1,0)) I NODE160="" Q  ; 0-node of sub-file 356.2216
"RTN","IBTRH8A",62,0)
 . S REQCAT=$$GET1^DIQ(356.001,+$P(NODE160,U,15)_",",.01)
"RTN","IBTRH8A",63,0)
 . I REQCAT'="" D
"RTN","IBTRH8A",64,0)
 .. S X="UM*"_REQCAT_"*"_$$GET1^DIQ(356.002,+$P(NODE160,U,2)_",",.01)_"*"_$$GET1^DIQ(365.013,+$P(NODE160,U,3)_",",.01)
"RTN","IBTRH8A",65,0)
 .. S FQUAL=$P(NODE160,U,4) I FQUAL'="" D
"RTN","IBTRH8A",66,0)
 ... S FTYPE=$S(FQUAL="A":$P(NODE160,U,6)_$P(NODE160,U,7),1:$$EXTERNAL^DILFD(356.2216,.05,,+$P(NODE160,U,5)))
"RTN","IBTRH8A",67,0)
 ... I FTYPE'="" S $P(X,"*",5)=FTYPE_":"_$P(NODE160,U,4)
"RTN","IBTRH8A",68,0)
 .. D SAVE^IBTRH8(X)
"RTN","IBTRH8A",69,0)
 .. Q
"RTN","IBTRH8A",70,0)
 . D DREF,DDTP,DSV
"RTN","IBTRH8A",71,0)
 . I 'MSGTYPE D HSD,PWK,NTE
"RTN","IBTRH8A",72,0)
 . D NM1F
"RTN","IBTRH8A",73,0)
 . Q
"RTN","IBTRH8A",74,0)
 Q
"RTN","IBTRH8A",75,0)
 ;
"RTN","IBTRH8A",76,0)
DREF ; create service level REF segment
"RTN","IBTRH8A",77,0)
 N NODE169
"RTN","IBTRH8A",78,0)
 S NODE169=$G(^IBT(356.22,IBTRIEN,16,Z1,9)) ; 9-node of sub-file 356.2216
"RTN","IBTRH8A",79,0)
 S X=""
"RTN","IBTRH8A",80,0)
 I $P(NODE169,U)'="" S X="REF*BB*"_$P(NODE169,U)
"RTN","IBTRH8A",81,0)
 I X="",$P(NODE169,U,2)'="" S X="REF*NT*"_$P(NODE169,U,2)
"RTN","IBTRH8A",82,0)
 I X="" Q
"RTN","IBTRH8A",83,0)
 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",84,0)
 Q
"RTN","IBTRH8A",85,0)
 ;
"RTN","IBTRH8A",86,0)
DDTP ; create service level DTP Service Date segment
"RTN","IBTRH8A",87,0)
 N SRVDATE
"RTN","IBTRH8A",88,0)
 S SRVDATE=$P(NODE160,U,11) I SRVDATE="" Q
"RTN","IBTRH8A",89,0)
 S X="DTP*472*"_$S($F(SRVDATE,"-"):"RD8",1:"D8")_"*"_$$HLDATE^HLFNC($P(SRVDATE,"."))
"RTN","IBTRH8A",90,0)
 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",91,0)
 Q
"RTN","IBTRH8A",92,0)
 ;
"RTN","IBTRH8A",93,0)
DSV ; create service level SV segments
"RTN","IBTRH8A",94,0)
 N NODE161,NODE162,NODE163,NODE1640,NODE1612,SEQ,SRVTYPE,TMP,Z2
"RTN","IBTRH8A",95,0)
 N EXT161U2,EXT161U3
"RTN","IBTRH8A",96,0)
 S NODE161=$G(^IBT(356.22,IBTRIEN,16,Z1,1)) I NODE161="" Q  ; 1-node of sub-file 356.2216
"RTN","IBTRH8A",97,0)
 S NODE162=$G(^IBT(356.22,IBTRIEN,16,Z1,2)) ; 2-node of sub-file 356.2216
"RTN","IBTRH8A",98,0)
 S NODE163=$G(^IBT(356.22,IBTRIEN,16,Z1,3)) ; 3-node of sub-file 356.2216
"RTN","IBTRH8A",99,0)
 S NODE1612=$G(^IBT(356.22,IBTRIEN,16,Z1,12)) ; 12-node of sub-file 356.2216
"RTN","IBTRH8A",100,0)
 S SRVTYPE=$P(NODE161,U,12)
"RTN","IBTRH8A",101,0)
 S TMP=$S(SRVTYPE="D":"AD",1:$P(NODE161,U))
"RTN","IBTRH8A",102,0)
 S EXT161U2=$$EXTERNAL^DILFD(356.2216,1.02,,$P(NODE161,U,2))
"RTN","IBTRH8A",103,0)
 S $P(TMP,":",2)=$S(TMP="N4":$P(NODE1612,U),1:EXT161U2)
"RTN","IBTRH8A",104,0)
 S EXT161U3=$$EXTERNAL^DILFD(356.2216,1.03,,$P(NODE161,U,3))
"RTN","IBTRH8A",105,0)
 S $P(TMP,":",8)=$S(TMP="N4":$P(NODE1612,U,2),1:EXT161U3)
"RTN","IBTRH8A",106,0)
 I 'MSGTYPE D
"RTN","IBTRH8A",107,0)
 . S $P(TMP,":",3)=$$EXTERNAL^DILFD(356.2216,1.04,,$P(NODE161,U,4))
"RTN","IBTRH8A",108,0)
 . S $P(TMP,":",4)=$$EXTERNAL^DILFD(356.2216,1.05,,$P(NODE161,U,5))
"RTN","IBTRH8A",109,0)
 . S $P(TMP,":",5)=$$EXTERNAL^DILFD(356.2216,1.06,,$P(NODE161,U,6))
"RTN","IBTRH8A",110,0)
 . S $P(TMP,":",6)=$$EXTERNAL^DILFD(356.2216,1.07,,$P(NODE161,U,7))
"RTN","IBTRH8A",111,0)
 . S $P(TMP,":",7)=$P(NODE161,U,8)
"RTN","IBTRH8A",112,0)
 . Q
"RTN","IBTRH8A",113,0)
 I SRVTYPE'="D" S $P(TMP,"*",4)=$P(NODE161,U,11),$P(TMP,"*",3)=$P(NODE161,U,10)
"RTN","IBTRH8A",114,0)
 I 'MSGTYPE S $P(TMP,"*",2)=$P(NODE161,U,9)
"RTN","IBTRH8A",115,0)
 I SRVTYPE="I" D
"RTN","IBTRH8A",116,0)
 . S X="SV2**"_TMP
"RTN","IBTRH8A",117,0)
 . S $P(X,"*",2)=$$GET1^DIQ(399.2,+$P(NODE162,U,6)_",",.01)
"RTN","IBTRH8A",118,0)
 . I 'MSGTYPE D
"RTN","IBTRH8A",119,0)
 .. S $P(X,"*",7)=$P(NODE162,U,7)
"RTN","IBTRH8A",120,0)
 .. S $P(X,"*",10)=$$GET1^DIQ(356.011,+$P(NODE162,U,8)_",",.01)
"RTN","IBTRH8A",121,0)
 .. S $P(X,"*",11)=$$GET1^DIQ(356.019,+$P(NODE162,U,9)_",",.01)
"RTN","IBTRH8A",122,0)
 .. Q
"RTN","IBTRH8A",123,0)
 . Q
"RTN","IBTRH8A",124,0)
 I SRVTYPE="P" D
"RTN","IBTRH8A",125,0)
 . S X="SV1*"_TMP
"RTN","IBTRH8A",126,0)
 . I 'MSGTYPE D
"RTN","IBTRH8A",127,0)
 .. S TMP=$P(NODE162,U)_":"_$P(NODE162,U,2)_":"_$P(NODE162,U,3)_":"_$P(NODE162,U,4)
"RTN","IBTRH8A",128,0)
 .. S $P(X,"*",8)=TMP
"RTN","IBTRH8A",129,0)
 .. S $P(X,"*",12)=$P(NODE162,U,5)
"RTN","IBTRH8A",130,0)
 .. S $P(X,"*",21)=$$GET1^DIQ(356.019,+$P(NODE162,U,9)_",",.01)
"RTN","IBTRH8A",131,0)
 .. Q
"RTN","IBTRH8A",132,0)
 . Q
"RTN","IBTRH8A",133,0)
 I SRVTYPE="D",$TR(NODE163,U)'="" D
"RTN","IBTRH8A",134,0)
 . S X="SV3*"_TMP
"RTN","IBTRH8A",135,0)
 . S $P(X,"*",6)=$P(NODE163,U,6)
"RTN","IBTRH8A",136,0)
 . S $P(X,"*",7)=$P(NODE161,U,11)
"RTN","IBTRH8A",137,0)
 . I 'MSGTYPE D
"RTN","IBTRH8A",138,0)
 .. S $P(X,"*",8)=$P(NODE163,U,7)
"RTN","IBTRH8A",139,0)
 .. Q
"RTN","IBTRH8A",140,0)
 . S TMP=$P(NODE163,U)_":"_$P(NODE163,U,2)_":"_$P(NODE163,U,3)_":"_$P(NODE163,U,4)_":"_$P(NODE163,U,5)
"RTN","IBTRH8A",141,0)
 . S $P(X,"*",5)=TMP
"RTN","IBTRH8A",142,0)
 . Q
"RTN","IBTRH8A",143,0)
 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",144,0)
 I SRVTYPE'="D" Q
"RTN","IBTRH8A",145,0)
 ; additional TOO segments for tooth information
"RTN","IBTRH8A",146,0)
 S Z2="" F  S Z2=$O(^IBT(356.22,IBTRIEN,16,Z1,4,Z2)) Q:Z2'=+Z2  D
"RTN","IBTRH8A",147,0)
 . S NODE1640=$G(^IBT(356.22,IBTRIEN,16,Z1,4,Z2,0)) I NODE1640="" Q  ; 0-node of sub-file 356.22164
"RTN","IBTRH8A",148,0)
 . S X="TOO*JP*"_$$GET1^DIQ(356.022,+$P(NODE1640,U)_",",.01)
"RTN","IBTRH8A",149,0)
 . S TMP=$P(NODE1640,U,2)
"RTN","IBTRH8A",150,0)
 . I 'MSGTYPE D
"RTN","IBTRH8A",151,0)
 .. S TMP=TMP_":"_$P(NODE1640,U,3)_":"_$P(NODE1640,U,4)_":"_$P(NODE1640,U,5)_":"_$P(NODE1640,U,6)
"RTN","IBTRH8A",152,0)
 .. Q
"RTN","IBTRH8A",153,0)
 . S $P(X,"*",4)=TMP
"RTN","IBTRH8A",154,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",155,0)
 . Q
"RTN","IBTRH8A",156,0)
 Q
"RTN","IBTRH8A",157,0)
 ;
"RTN","IBTRH8A",158,0)
HSD ; create HSD loop 2000F segment
"RTN","IBTRH8A",159,0)
 N NODE165,ZHS
"RTN","IBTRH8A",160,0)
 S NODE165=$G(^IBT(356.22,IBTRIEN,16,Z1,5)) I NODE165="" Q  ; 5-node of sub-file 356.2216
"RTN","IBTRH8A",161,0)
 S X="HSD*"_$$GET1^DIQ(365.016,+$P(NODE165,U)_",",.01)_"*"
"RTN","IBTRH8A",162,0)
 S X=X_$P(NODE165,U,2)_"*"_$P(NODE165,U,3)_"*"_$P(NODE165,U,4)_"*"
"RTN","IBTRH8A",163,0)
 S X=X_$$GET1^DIQ(365.015,+$P(NODE165,U,5)_",",.01)_"*"_$P(NODE165,U,6)_"*"
"RTN","IBTRH8A",164,0)
 S X=X_$$GET1^DIQ(365.025,+$P(NODE165,U,7)_",",.01)_"*"_$$GET1^DIQ(356.007,+$P(NODE165,U,8)_",",.01)
"RTN","IBTRH8A",165,0)
 I $TR($P(X,"*",3,99),"*")="" Q
"RTN","IBTRH8A",166,0)
 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",167,0)
 Q
"RTN","IBTRH8A",168,0)
 ;
"RTN","IBTRH8A",169,0)
PWK ; create PWK segment loop 2000F
"RTN","IBTRH8A",170,0)
 N NODE1660,PSL,SEQ,Z2,Z3
"RTN","IBTRH8A",171,0)
 S (SEQ,Z2)=0 F  S Z2=$O(^IBT(356.22,IBTRIEN,16,Z1,6,Z2)) Q:Z2'=+Z2  D
"RTN","IBTRH8A",172,0)
 . S NODE1660=$G(^IBT(356.22,IBTRIEN,16,Z1,6,Z2,0)) I NODE1660="" Q  ; 0-node of sub-file 356.22166
"RTN","IBTRH8A",173,0)
 . S SEQ=SEQ+1 I SEQ>10 Q
"RTN","IBTRH8A",174,0)
 . S X="PWK*"
"RTN","IBTRH8A",175,0)
 . S $P(X,"*",2)=$$GET1^DIQ(356.018,+$P(NODE1660,U)_",",.01)
"RTN","IBTRH8A",176,0)
 . S $P(X,"*",3)=$P(NODE1660,U,2)
"RTN","IBTRH8A",177,0)
 . S $P(X,"*",6)="AC"
"RTN","IBTRH8A",178,0)
 . S $P(X,"*",7)=$P(NODE1660,U,3)
"RTN","IBTRH8A",179,0)
 . S $P(X,"*",8)=$P(NODE1660,U,4)
"RTN","IBTRH8A",180,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",181,0)
 . Q
"RTN","IBTRH8A",182,0)
 Q
"RTN","IBTRH8A",183,0)
 ;
"RTN","IBTRH8A",184,0)
NTE ; create MSG segment loop 2000F
"RTN","IBTRH8A",185,0)
 N MSG,NTE
"RTN","IBTRH8A",186,0)
 S MSG=$$WP2STR^IBTRHLO2(356.2216,7,Z1_","_IBTRIEN_",",264)
"RTN","IBTRH8A",187,0)
 I MSG="" Q
"RTN","IBTRH8A",188,0)
 S X="MSG*"_MSG
"RTN","IBTRH8A",189,0)
 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",190,0)
 Q
"RTN","IBTRH8A",191,0)
 ;
"RTN","IBTRH8A",192,0)
NM1F ; create NM1, N3, N4 Service Provider segments loop 2000F
"RTN","IBTRH8A",193,0)
 N ADDR1,ADDR2,NODE1680,PERSON,PRD,PRVDATA,PRVPTR,SEQ,TMP,Z2,PCODEPRV,ENTITY,TAXONOMY
"RTN","IBTRH8A",194,0)
 S (SEQ,Z2)=0 F  S Z2=$O(^IBT(356.22,IBTRIEN,16,Z1,8,Z2)) Q:Z2'=+Z2  D
"RTN","IBTRH8A",195,0)
 . S NODE1680=$G(^IBT(356.22,IBTRIEN,16,Z1,8,Z2,0)) I NODE1680="" Q  ; 0-node of sub-file 356.22168
"RTN","IBTRH8A",196,0)
 . S SEQ=SEQ+1 I SEQ>14 Q  ; only allow up to 14 providers
"RTN","IBTRH8A",197,0)
 . S PRVPTR=$P(NODE1680,U,3) I PRVPTR="" Q  ; missing provider pointer
"RTN","IBTRH8A",198,0)
 . S PERSON=$P(NODE1680,U,2) I 'PERSON Q  ; missing person / non-person indicator
"RTN","IBTRH8A",199,0)
 . S PRVDATA=$$PRVDATA^IBTRHLO2(+$P(PRVPTR,";"),$P($P(PRVPTR,"(",2),","))
"RTN","IBTRH8A",200,0)
 . S ADDR1=$P(PRVDATA,U,2,3),ADDR2=$P(PRVDATA,U,4,6)
"RTN","IBTRH8A",201,0)
 . S NAME=$$HLNAME^HLFNC($P(PRVDATA,U))
"RTN","IBTRH8A",202,0)
 . S X="NM1*"
"RTN","IBTRH8A",203,0)
 . S ENTITY=$$GET1^DIQ(365.022,+$P(NODE1680,U)_",",.01)
"RTN","IBTRH8A",204,0)
 . S $P(X,"*",2)=ENTITY
"RTN","IBTRH8A",205,0)
 . S $P(X,"*",3)=PERSON
"RTN","IBTRH8A",206,0)
 . S $P(X,"*",4)=$P(NAME,"^")
"RTN","IBTRH8A",207,0)
 . S $P(X,"*",5)=$P(NAME,"^",2)
"RTN","IBTRH8A",208,0)
 . S $P(X,"*",6)=$P(NAME,"^",3)
"RTN","IBTRH8A",209,0)
 . S $P(X,"*",8)=$P(NAME,"^",4)
"RTN","IBTRH8A",210,0)
 . S $P(X,"*",9)="XX"
"RTN","IBTRH8A",211,0)
 . S $P(X,"*",10)=$P(PRVDATA,U,7)
"RTN","IBTRH8A",212,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",213,0)
 . S ADDR3=$P($$HLADDR^HLFNC(ADDR1,ADDR2),U,1,5)
"RTN","IBTRH8A",214,0)
 . S X="N3*"_$P(ADDR3,U)_"*"_$P(ADDR3,U,2)
"RTN","IBTRH8A",215,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",216,0)
 . S X="N4*"_$P(ADDR3,U,3)_"*"_$P(ADDR3,U,4)_"*"_$P(ADDR3,U,5)
"RTN","IBTRH8A",217,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",218,0)
 . ; create PRV segment info for service level loop 2000F
"RTN","IBTRH8A",219,0)
 . S PCODEPRV=$$PCODECNV^IBTRHLO2(ENTITY) I PCODEPRV'="" D
"RTN","IBTRH8A",220,0)
 .. I '$F(",AS,OP,OR,OT,PC,PE",","_PCODEPRV) Q
"RTN","IBTRH8A",221,0)
 .. S TAXONOMY=$P($$GTXNMY^IBTRH3(PRVPTR),U) I TAXONOMY="" Q
"RTN","IBTRH8A",222,0)
 .. S X="PRV*"_PCODEPRV_"*PXC*"_TAXONOMY
"RTN","IBTRH8A",223,0)
 .. D SAVE^IBTRH8(X)
"RTN","IBTRH8A",224,0)
 .. Q
"RTN","IBTRH8A",225,0)
 . Q
"RTN","IBTRH8A",226,0)
 Q
"RTN","IBTRH8A",227,0)
 ;
"RTN","IBTRH8A",228,0)
CR5 ; create CR5 segment
"RTN","IBTRH8A",229,0)
 N BGAS,RXE,OXYTST,Z
"RTN","IBTRH8A",230,0)
 S BGAS=+$P(NODE9,U) I 'BGAS Q  ; missing arterial blood gas quantity
"RTN","IBTRH8A",231,0)
 S X="CR5***"
"RTN","IBTRH8A",232,0)
 S $P(X,"*",9)=$P(NODE8,U,7)
"RTN","IBTRH8A",233,0)
 S $P(X,"*",10)=$P(NODE8,U,8)
"RTN","IBTRH8A",234,0)
 S $P(X,"*",11)=BGAS
"RTN","IBTRH8A",235,0)
 S $P(X,"*",6)=$P(NODE8,U,4)
"RTN","IBTRH8A",236,0)
 S $P(X,"*",12)=$P(NODE9,U,2)
"RTN","IBTRH8A",237,0)
 S $P(X,"*",4)=$$GET1^DIQ(356.013,+$P(NODE8,U)_",",.01)
"RTN","IBTRH8A",238,0)
 S $P(X,"*",5)=$$GET1^DIQ(356.013,+$P(NODE8,U,2)_",",.01)
"RTN","IBTRH8A",239,0)
 S $P(X,"*",17)=$P(NODE9,U,7)
"RTN","IBTRH8A",240,0)
 S $P(X,"*",8)=$P(NODE8,U,6)
"RTN","IBTRH8A",241,0)
 S $P(X,"*",7)=$P(NODE8,U,5)
"RTN","IBTRH8A",242,0)
 S Z=+$P(NODE9,U,4) I Z>0 S $P(X,"*",14)=$$GET1^DIQ(356.015,Z_",",.01)
"RTN","IBTRH8A",243,0)
 S Z=+$P(NODE9,U,5) I Z>0 S $P(X,"*",15)=$$GET1^DIQ(356.015,Z_",",.01)
"RTN","IBTRH8A",244,0)
 S Z=+$P(NODE9,U,6) I Z>0 S $P(X,"*",16)=$$GET1^DIQ(356.015,Z_",",.01)
"RTN","IBTRH8A",245,0)
 S $P(X,"*",13)=$$GET1^DIQ(356.014,+$P(NODE9,U,3)_",",.01)
"RTN","IBTRH8A",246,0)
 S $P(X,"*",18)=$$GET1^DIQ(356.016,+$P(NODE9,U,8)_",",.01)
"RTN","IBTRH8A",247,0)
 S $P(X,"*",19)=$$GET1^DIQ(356.013,+$P(NODE8,U,3)_",",.01)
"RTN","IBTRH8A",248,0)
 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",249,0)
 Q
"RTN","IBTRH8A",250,0)
 ;
"RTN","IBTRH8A",251,0)
CR6 ; generate CR6 segment
"RTN","IBTRH8A",252,0)
 N DATESTR,PRB,PROCSTR,Z
"RTN","IBTRH8A",253,0)
 I $TR(NODE10,U)=""!(CERT="") Q
"RTN","IBTRH8A",254,0)
 S X="CR6*"
"RTN","IBTRH8A",255,0)
 S $P(X,"*",9)=CERT,$P(X,"*",8)="W"
"RTN","IBTRH8A",256,0)
 S Z=$P(NODE10,U,6) I Z'="" S $P(X,"*",11)=$$EXTERNAL^DILFD(356.22,10.06,,Z)
"RTN","IBTRH8A",257,0)
 S Z=$P(NODE10,U,7) I Z'="" S $P(X,"*",12)=$$EXTERNAL^DILFD(356.22,10.07,,Z)
"RTN","IBTRH8A",258,0)
 S $P(X,"*",13)=$$HLDATE^HLFNC($P(NODE10,U,8))
"RTN","IBTRH8A",259,0)
 S $P(X,"*",10)=$$HLDATE^HLFNC($P(NODE10,U,5))
"RTN","IBTRH8A",260,0)
 S $P(X,"*",14)=$$HLDATE^HLFNC($P(NODE10,U,9))
"RTN","IBTRH8A",261,0)
 S $P(X,"*",18)=$$GET1^DIQ(356.017,+$P(NODE10,U,13)_",",.01)
"RTN","IBTRH8A",262,0)
 S DATESTR="",Z=$P(NODE10,U,11) I Z'="" S DATESTR=$$HLDATE^HLFNC(Z)
"RTN","IBTRH8A",263,0)
 I DATESTR'="" S Z=$P(NODE10,U,12) S:Z'="" DATESTR=DATESTR_"-"_$$HLDATE^HLFNC(Z) S $P(X,"*",16)="RD8",$P(X,"*",17)=DATESTR ; last admission date range
"RTN","IBTRH8A",264,0)
 S $P(X,"*",15)=$$HLDATE^HLFNC($P(NODE10,U,10))
"RTN","IBTRH8A",265,0)
 S $P(X,"*",3)=$$HLDATE^HLFNC($P(NODE10,U))
"RTN","IBTRH8A",266,0)
 S DATESTR="",Z=$P(NODE10,U,2) I Z'="" S DATESTR=$$HLDATE^HLFNC(Z)
"RTN","IBTRH8A",267,0)
 I DATESTR'="" S Z=$P(NODE10,U,3) S:Z'="" DATESTR=DATESTR_"-"_$$HLDATE^HLFNC(Z) S $P(X,"*",4)="RD8",$P(X,"*",5)=DATESTR ; home health cert. date range
"RTN","IBTRH8A",268,0)
 S $P(X,"*",2)=$$GET1^DIQ(356.004,+$P(NODE2,U,15)_",",.01)
"RTN","IBTRH8A",269,0)
 D SAVE^IBTRH8(X)
"RTN","IBTRH8A",270,0)
 Q
"RTN","IBTRH8A",271,0)
 ;
"RTN","IBTRH8A",272,0)
AAA(LP) ; AAA segment info
"RTN","IBTRH8A",273,0)
 N X,X1,LOOP,AAA03,AAA04,DATA
"RTN","IBTRH8A",274,0)
 S X1=0
"RTN","IBTRH8A",275,0)
 F  S X1=$O(^IBT(356.22,IBTRIEN,101,X1)) Q:X1'=+X1  S DATA=$G(^(X1,0)),LOOP=$P(DATA,"^",2) I LOOP D
"RTN","IBTRH8A",276,0)
 . S LOOP=$$GET1^DIQ(365.027,LOOP_",",.01)
"RTN","IBTRH8A",277,0)
 . I LP'=LOOP Q
"RTN","IBTRH8A",278,0)
 . S X="AAA*"_$P(^IBT(356.22,IBTRIEN,101,X1,0),"^",3)
"RTN","IBTRH8A",279,0)
 . S AAA03=$P(DATA,"^",4)
"RTN","IBTRH8A",280,0)
 . S $P(X,"*",4)=$$GET1^DIQ(365.017,AAA03_",",.01)
"RTN","IBTRH8A",281,0)
 . S AAA04=$P(DATA,"^",5)
"RTN","IBTRH8A",282,0)
 . S $P(X,"*",5)=$$GET1^DIQ(365.018,AAA04_",",.01)
"RTN","IBTRH8A",283,0)
 . D SAVE^IBTRH8(X)
"RTN","IBTRH8A",284,0)
 . Q
"RTN","IBTRH8A",285,0)
 Q
"RTN","IBTRH8A",286,0)
 ;
"RTN","IBTRH8A",287,0)
DISPLAY ;
"RTN","IBTRH8A",288,0)
 N X1,X2,CNT,DATA,I
"RTN","IBTRH8A",289,0)
 D CLEAR^VALM1
"RTN","IBTRH8A",290,0)
 S X1="" F  S X1=$O(^TMP($J,"IBTRH8",X1)) Q:X1=""  S DATA=^(X1) D  Q:X="^"
"RTN","IBTRH8A",291,0)
 . ;;S DATA=$P(DATA,"~")
"RTN","IBTRH8A",292,0)
 . S X2=$L(DATA,"*") F I=2:1:X2 I $P(DATA,"*",I)'="" Q
"RTN","IBTRH8A",293,0)
 . I I=X2,$P(DATA,"*",I)="" Q
"RTN","IBTRH8A",294,0)
 . F I=$L(DATA):-1:1 Q:$E(DATA,I)'="*"
"RTN","IBTRH8A",295,0)
 . I I'=$L(DATA) S DATA=$E(DATA,1,I)
"RTN","IBTRH8A",296,0)
 . F I=$L(DATA):-1:1 Q:$E(DATA,I)'=":"
"RTN","IBTRH8A",297,0)
 . I I'=$L(DATA) S DATA=$E(DATA,1,I)
"RTN","IBTRH8A",298,0)
 . W !,DATA S CNT=$G(CNT)+1 I CNT#21=0 D PAUSE^VALM1 Q:X="^"
"RTN","IBTRH8A",299,0)
 I X'="^" D PAUSE^VALM1
"RTN","IBTRH8A",300,0)
 S VALMBCK="R"
"RTN","IBTRH8A",301,0)
 D RE^VALM4
"RTN","IBTRH8A",302,0)
 Q
"RTN","IBTRHDE")
0^4^B135940675^n/a
"RTN","IBTRHDE",1,0)
IBTRHDE ;ALB/FA - HCSR Patient Events Search ;06-JUN-2014
"RTN","IBTRHDE",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHDE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHDE",4,0)
 ;
"RTN","IBTRHDE",5,0)
EN(NOMSG) ;EP
"RTN","IBTRHDE",6,0)
 ; Called from menu option: IBT HCSR NIGHTLY PROCESS designed to be scheduled
"RTN","IBTRHDE",7,0)
 ; in TaskMan to be executed once a day during off-peak hours
"RTN","IBTRHDE",8,0)
 ; Use HCSR Site Parameters to set appointment search criteria and filter
"RTN","IBTRHDE",9,0)
 ; appointments.  File any appointments that match the criteria into 356.22,
"RTN","IBTRHDE",10,0)
 ; the HCS Review Transmission file
"RTN","IBTRHDE",11,0)
 ; Input:   NOMSG       - 1 to not display locked message. Only set to 1 when
"RTN","IBTRHDE",12,0)
 ;                          called from REFRESH^IBTRH1A to refresh the worklist
"RTN","IBTRHDE",13,0)
 ;                          screen.
"RTN","IBTRHDE",14,0)
 ;                          Optional, defaults to 0
"RTN","IBTRHDE",15,0)
 N $ES,$ET,HCSR
"RTN","IBTRHDE",16,0)
 S:'$D(NOMSG) NOMSG=0
"RTN","IBTRHDE",17,0)
 S $ET="D ER^IBTRHDE"
"RTN","IBTRHDE",18,0)
 ;
"RTN","IBTRHDE",19,0)
 ; Check lock
"RTN","IBTRHDE",20,0)
 L +^TMP("IBTRHDE"):1
"RTN","IBTRHDE",21,0)
 I '$T D  Q
"RTN","IBTRHDE",22,0)
 . I '$D(ZTSK),'NOMSG D
"RTN","IBTRHDE",23,0)
 . . W !!,"The IBT HCSR Nightly Process is already running, please retry later."
"RTN","IBTRHDE",24,0)
 . . D PAUSE^VALM1
"RTN","IBTRHDE",25,0)
 . D ENX
"RTN","IBTRHDE",26,0)
 ;
"RTN","IBTRHDE",27,0)
 ; Check to see if background process has been stopped, if so quit.
"RTN","IBTRHDE",28,0)
 I $G(ZTSTOP) D ENX Q
"RTN","IBTRHDE",29,0)
 S HCSR=$G(^IBE(350.9,1,62))                    ; HCSR Site Parameters
"RTN","IBTRHDE",30,0)
 ; First find all of the scheduled appointments that match the filter criteria
"RTN","IBTRHDE",31,0)
 ;;D FAPPTS(HCSR) ;3/21/16 JWS commented out background job creation of worklist entries
"RTN","IBTRHDE",32,0)
 ;
"RTN","IBTRHDE",33,0)
 ; Check to see if background process has been stopped, if so quit.
"RTN","IBTRHDE",34,0)
 I $G(ZTSTOP) D ENX Q
"RTN","IBTRHDE",35,0)
 ;
"RTN","IBTRHDE",36,0)
 ; Next find all of the admissions that match the filter criteria
"RTN","IBTRHDE",37,0)
 ;;D FADMS(HCSR)  ;3/21/16 JWS commented out background job creation of worklist entries
"RTN","IBTRHDE",38,0)
 ;
"RTN","IBTRHDE",39,0)
 ; Check to see if background process has been stopped, if so quit.
"RTN","IBTRHDE",40,0)
 I $G(ZTSTOP) D ENX Q
"RTN","IBTRHDE",41,0)
 ; JWS 10/13/14 add 278x215 auto create
"RTN","IBTRHDE",42,0)
 ; perform auto 278x215 Inquiry generation
"RTN","IBTRHDE",43,0)
 ;;I $P(HCSR,"^",10)!($P(HCSR,"^",11)) D TRIG278^IBTRHDE1  ;3/21/16 JWS commented out auto-generated 278x215s
"RTN","IBTRHDE",44,0)
 ; Check to see if background process has been stopped, if so quit.
"RTN","IBTRHDE",45,0)
 I $G(ZTSTOP) D ENX Q
"RTN","IBTRHDE",46,0)
 ;
"RTN","IBTRHDE",47,0)
 ; Finally automatically purge events
"RTN","IBTRHDE",48,0)
 D PURGE(HCSR)
"RTN","IBTRHDE",49,0)
 D ENX
"RTN","IBTRHDE",50,0)
 Q
"RTN","IBTRHDE",51,0)
 ;
"RTN","IBTRHDE",52,0)
ENX ; Purge task record - if queued
"RTN","IBTRHDE",53,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRHDE",54,0)
 L -^TMP("IBTRHDE")
"RTN","IBTRHDE",55,0)
 Q
"RTN","IBTRHDE",56,0)
 ;
"RTN","IBTRHDE",57,0)
FAPPTS(HCSR)    ; Finds all appointments that match the filter criteria. Each
"RTN","IBTRHDE",58,0)
 ; found appointment is then further filtered using the HCSR Site Parameters.
"RTN","IBTRHDE",59,0)
 ; Appointments that match the filter criteria are then filed into the HCS 
"RTN","IBTRHDE",60,0)
 ; Review Transmission file (356.22)
"RTN","IBTRHDE",61,0)
 ; Input:   HSCR    - HCSR Site Parameter filters
"RTN","IBTRHDE",62,0)
 ; Output:  Filtered appointments filed into 356.22
"RTN","IBTRHDE",63,0)
 N ADATE,AINS,AINSIX,CLINIC,DFN,INSIEN,SDATE,SDCOUNT,SFILT,XX,NODE0
"RTN","IBTRHDE",64,0)
 K ^TMP($J,"SDAMA301")
"RTN","IBTRHDE",65,0)
 D SETFILTS(HCSR,.SFILT)                        ; Set Appointment filters
"RTN","IBTRHDE",66,0)
 S SDCOUNT=$$SDAPI^SDAMA301(.SFILT)             ; Find the appointments, DBIA4433
"RTN","IBTRHDE",67,0)
 Q:SDCOUNT<1                                    ; No appointments returned
"RTN","IBTRHDE",68,0)
 ;
"RTN","IBTRHDE",69,0)
 ; Check the active insurance for every found filter against the HCSR Site 
"RTN","IBTRHDE",70,0)
 ; parameter list of insurance companies to exclude
"RTN","IBTRHDE",71,0)
 S DFN="" F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN=""  D
"RTN","IBTRHDE",72,0)
 .; loop through Appointment Date/time
"RTN","IBTRHDE",73,0)
 .S ADATE="" F  S ADATE=$O(^TMP($J,"SDAMA301",DFN,ADATE)) Q:ADATE=""  D
"RTN","IBTRHDE",74,0)
 ..D CKAFINS(HCSR,DFN,ADATE,65,.AINS)         ; Check for valid Insurance(s)
"RTN","IBTRHDE",75,0)
 ..S AINSIX="" F  S AINSIX=$O(AINS(AINSIX)) Q:AINSIX=""  D
"RTN","IBTRHDE",76,0)
 ...S CLINIC=$P($P(^TMP($J,"SDAMA301",DFN,ADATE),U,2),";",1)
"RTN","IBTRHDE",77,0)
 ...; check for clinic inclusion
"RTN","IBTRHDE",78,0)
 ...; 8/20/15 jws - if clinic is not defined
"RTN","IBTRHDE",79,0)
 ...I '$O(^IBE(350.9,1,63,"B",CLINIC,"")) Q
"RTN","IBTRHDE",80,0)
 ...I '$$CHKLIST(63,$O(^IBE(350.9,1,63,"B",CLINIC,"")),$P(AINS(AINSIX),U)) Q
"RTN","IBTRHDE",81,0)
 ...; File the event
"RTN","IBTRHDE",82,0)
 ...; Appointment Date/Time is the 'IEN' of the appointment
"RTN","IBTRHDE",83,0)
 ...S NODE0=$$NOW^XLFDT()_U_DFN_U_AINSIX_"^O^^"_CLINIC_U_ADATE_U_ADATE
"RTN","IBTRHDE",84,0)
 ...D SETEVENT(NODE0)
"RTN","IBTRHDE",85,0)
 ...Q
"RTN","IBTRHDE",86,0)
 ..Q
"RTN","IBTRHDE",87,0)
 .Q
"RTN","IBTRHDE",88,0)
 K ^TMP($J,"SDAMA301")
"RTN","IBTRHDE",89,0)
 Q
"RTN","IBTRHDE",90,0)
 ;
"RTN","IBTRHDE",91,0)
FADMS(HCSR)    ; Finds all admissions that match the filter criteria. Each found
"RTN","IBTRHDE",92,0)
 ; admission is then further filtered using the HCSR Site Parameters. 
"RTN","IBTRHDE",93,0)
 ; Admissions that match the filter criteria are then filed into the HCS 
"RTN","IBTRHDE",94,0)
 ; Review Transmission file (356.22)
"RTN","IBTRHDE",95,0)
 ; Input:   HSCR    - HCSR Site Parameter filters
"RTN","IBTRHDE",96,0)
 ; Output:  Filtered admissions filed into 356.22
"RTN","IBTRHDE",97,0)
 N AINS,AINSIX,DA,DATEC,DATEE,DATES,DFN,IBWARD,NODE0,XX,YY
"RTN","IBTRHDE",98,0)
 D GETDAYS2(HCSR,.DATES,.DATEE)
"RTN","IBTRHDE",99,0)
 D DT^DILF("","T-"_(DATES-1),.DATEC)             ; Past Admission Search date
"RTN","IBTRHDE",100,0)
 D DT^DILF("","T+"_DATEE,.DATEE)                 ; Future Admission Search date
"RTN","IBTRHDE",101,0)
 ;
"RTN","IBTRHDE",102,0)
 ; First check past/present admissions
"RTN","IBTRHDE",103,0)
 F  S DATEC=$O(^DGPM("AMV1",DATEC)) Q:(DATEC="")!($P(DATEC,".")>DATEE)  D  ; DBIA419
"RTN","IBTRHDE",104,0)
 .S DFN="" F  S DFN=$O(^DGPM("AMV1",DATEC,DFN)) Q:DFN=""  D
"RTN","IBTRHDE",105,0)
 ..S DA="" F  S DA=$O(^DGPM("AMV1",DATEC,DFN,DA)) Q:DA=""  D
"RTN","IBTRHDE",106,0)
 ...S IBWARD=$$GET1^DIQ(405,DA_",",.06,"I")
"RTN","IBTRHDE",107,0)
 ...D CKAFINS(HCSR,DFN,DATEC,66,.AINS)       ; Check for valid Insurance(s)
"RTN","IBTRHDE",108,0)
 ...S AINSIX="" F  S AINSIX=$O(AINS(AINSIX)) Q:AINSIX=""  D
"RTN","IBTRHDE",109,0)
 ....; check for ward inclusion
"RTN","IBTRHDE",110,0)
 ....; 8/20/15 jws - if ward is not defined
"RTN","IBTRHDE",111,0)
 ....I '$O(^IBE(350.9,1,64,"B",IBWARD,"")) Q
"RTN","IBTRHDE",112,0)
 ....I '$$CHKLIST(64,$O(^IBE(350.9,1,64,"B",IBWARD,"")),$P(AINS(AINSIX),U)) Q
"RTN","IBTRHDE",113,0)
 ....; File the event
"RTN","IBTRHDE",114,0)
 ....S XX=DATEC
"RTN","IBTRHDE",115,0)
 ....S YY=$$GET1^DIQ(405,DA_",",.17,"I")    ; Is there a Discharge
"RTN","IBTRHDE",116,0)
 ....I YY'="" D                             ; Get External Discharge Date
"RTN","IBTRHDE",117,0)
 .....S YY=$$GET1^DIQ(405,DA_",",.01,"I")   ; Discharge Date/Time
"RTN","IBTRHDE",118,0)
 .....S XX=XX_"-"_YY
"RTN","IBTRHDE",119,0)
 .....Q
"RTN","IBTRHDE",120,0)
 ....S NODE0=$$NOW^XLFDT()_U_DFN_U_AINSIX_"^I^"_IBWARD_"^^"_XX_U_$P(DATEC,".",1)
"RTN","IBTRHDE",121,0)
 ....D SETEVENT(NODE0)
"RTN","IBTRHDE",122,0)
 ....Q
"RTN","IBTRHDE",123,0)
 ...Q
"RTN","IBTRHDE",124,0)
 ..Q
"RTN","IBTRHDE",125,0)
 .Q
"RTN","IBTRHDE",126,0)
 ;
"RTN","IBTRHDE",127,0)
 ; Next check future admissions
"RTN","IBTRHDE",128,0)
 D DT^DILF("","T-"_(DATES-1),.DATEC)             ; Past Admission Search date
"RTN","IBTRHDE",129,0)
 F  S DATEC=$O(^DGS(41.1,"C",DATEC)) Q:(DATEC="")!($P(DATEC,".")>DATEE)  D  ; DBIA429
"RTN","IBTRHDE",130,0)
 .S DA="" F  S DA=$O(^DGS(41.1,"C",DATEC,DA)) Q:DA=""  D
"RTN","IBTRHDE",131,0)
 ..Q:$P($G(^DGS(41.1,DA,0)),U,13)'=""            ; Future Admission was cancelled
"RTN","IBTRHDE",132,0)
 ..S IBWARD=$$GET1^DIQ(41.1,DA_",",8,"I")
"RTN","IBTRHDE",133,0)
 ..S DFN=$$GET1^DIQ(41.1,DA_",",.01,"I")         ; Patient DFN
"RTN","IBTRHDE",134,0)
 ..D CKAFINS(HCSR,DFN,DATEC,66,.AINS)            ; Check for valid Insurance(s)
"RTN","IBTRHDE",135,0)
 ..S AINSIX="" F  S AINSIX=$O(AINS(AINSIX)) Q:AINSIX=""  D
"RTN","IBTRHDE",136,0)
 ...; check for ward inclusion
"RTN","IBTRHDE",137,0)
 ...I '$$CHKLIST(64,$O(^IBE(350.9,1,64,"B",IBWARD,"")),$P(AINS(AINSIX),U)) Q
"RTN","IBTRHDE",138,0)
 ...; File the event
"RTN","IBTRHDE",139,0)
 ...S NODE0=$$NOW^XLFDT()_U_DFN_U_AINSIX_"^I^"_IBWARD_"^^"_DATEC_U_$P(DATEC,".",1)
"RTN","IBTRHDE",140,0)
 ...D SETEVENT(NODE0)
"RTN","IBTRHDE",141,0)
 ...Q
"RTN","IBTRHDE",142,0)
 ..Q
"RTN","IBTRHDE",143,0)
 .Q
"RTN","IBTRHDE",144,0)
 Q
"RTN","IBTRHDE",145,0)
 ;
"RTN","IBTRHDE",146,0)
PURGE(HCSR)    ; Purge events that were created based upon the HCSR purge
"RTN","IBTRHDE",147,0)
 ; parameter
"RTN","IBTRHDE",148,0)
 ; Input:   HSCR    - HCSR Site Parameter filters
"RTN","IBTRHDE",149,0)
 ; Output:  Events are deleted from into 356.22
"RTN","IBTRHDE",150,0)
 N DA,DIK,PDATE,PDAYS,TDATE
"RTN","IBTRHDE",151,0)
 S PDAYS=$P(HCSR,"^",9)                         ; Purge Days Parameter
"RTN","IBTRHDE",152,0)
 D DT^DILF("","T-"_PDAYS,.PDATE)                ; Purge events up to PDATE
"RTN","IBTRHDE",153,0)
 S DIK="^IBT(356.22,"
"RTN","IBTRHDE",154,0)
 S TDATE=PDATE
"RTN","IBTRHDE",155,0)
 F  D  Q:(TDATE="")!(TDATE'<PDATE)
"RTN","IBTRHDE",156,0)
 . S TDATE=$O(^IBT(356.22,"B",TDATE),-1)
"RTN","IBTRHDE",157,0)
 . Q:(TDATE="")!(TDATE'<PDATE)
"RTN","IBTRHDE",158,0)
 . S DA=""
"RTN","IBTRHDE",159,0)
 . F  D  Q:DA=""
"RTN","IBTRHDE",160,0)
 . . S DA=$O(^IBT(356.22,"B",TDATE,DA))
"RTN","IBTRHDE",161,0)
 . . Q:DA=""
"RTN","IBTRHDE",162,0)
 . . D ^DIK
"RTN","IBTRHDE",163,0)
 Q
"RTN","IBTRHDE",164,0)
 ;
"RTN","IBTRHDE",165,0)
SETFILTS(HCSR,SFILT) ; Set the Appointment Search filters
"RTN","IBTRHDE",166,0)
 ; Input:   HCSR    - HCSR Site Parameters
"RTN","IBTRHDE",167,0)
 ; Output:  SFILT() - Array of Appointment Search filters
"RTN","IBTRHDE",168,0)
 N DATEE,DATES,SDATE,IX,IEN
"RTN","IBTRHDE",169,0)
 ;
"RTN","IBTRHDE",170,0)
 ; Determine the maximum date range to be searched
"RTN","IBTRHDE",171,0)
 D GETDAYS1(HCSR,.DATES,.DATEE)
"RTN","IBTRHDE",172,0)
 D DT^DILF("","T-"_DATES,.SDATE)                ; Past Appt Search date
"RTN","IBTRHDE",173,0)
 S SFILT(1)=SDATE
"RTN","IBTRHDE",174,0)
 D DT^DILF("","T+"_DATEE,.SDATE)                ; Future Appt Search date
"RTN","IBTRHDE",175,0)
 S $P(SFILT(1),";",2)=SDATE
"RTN","IBTRHDE",176,0)
 S SFILT(3)="R;I;NT"                            ; Schedule/Kept Appointment filter
"RTN","IBTRHDE",177,0)
 S SFILT("FLDS")="1;2;3;4;10;12"                ; list of fields to return
"RTN","IBTRHDE",178,0)
 S SFILT("SORT")="P"                            ; Sort by Patient DFN only
"RTN","IBTRHDE",179,0)
 Q
"RTN","IBTRHDE",180,0)
 ;
"RTN","IBTRHDE",181,0)
GETDAYS1(HCSR,DATES,DATEE)    ; Checks the HCSR Site Parameters to get the 
"RTN","IBTRHDE",182,0)
 ; maximum date range to be use when search for appointments
"RTN","IBTRHDE",183,0)
 ; Input:       HCSR    - HCSR Site Parameters
"RTN","IBTRHDE",184,0)
 ; Output:      DATES   - Internal fileman date to begin start search on
"RTN","IBTRHDE",185,0)
 ;              DATEE   - Internal fileman date to end search after
"RTN","IBTRHDE",186,0)
 ;
"RTN","IBTRHDE",187,0)
 ; Find the site parameter with the greatest number of days
"RTN","IBTRHDE",188,0)
 S DATES=$P(HCSR,"^",3)                         ; Past Appointment Search Days
"RTN","IBTRHDE",189,0)
 S:$P(HCSR,"^",7)>DATES DATES=$P(HCSR,"^",7)    ; TRICARE Past Appt Search Days
"RTN","IBTRHDE",190,0)
 ;
"RTN","IBTRHDE",191,0)
 ; Find the site parameter with the greatest number of days
"RTN","IBTRHDE",192,0)
 S DATEE=$P(HCSR,"^",13)                        ; Future Appointment Search Days
"RTN","IBTRHDE",193,0)
 S:$P(HCSR,"^",5)>DATEE DATEE=$P(HCSR,"^",5)    ; TRICARE Future Appt Search Days
"RTN","IBTRHDE",194,0)
 Q
"RTN","IBTRHDE",195,0)
 ;
"RTN","IBTRHDE",196,0)
GETDAYS2(HCSR,DATES,DATEE)    ; Checks the HCSR Site Parameters to get the 
"RTN","IBTRHDE",197,0)
 ; maximum date range to use when searching for admissions
"RTN","IBTRHDE",198,0)
 ; Input:       HCSR    - HCSR Site Parameters
"RTN","IBTRHDE",199,0)
 ; Output:      DATES   - Internal fileman date to begin start search on
"RTN","IBTRHDE",200,0)
 ;              DATEE   - Internal fileman date to end search after
"RTN","IBTRHDE",201,0)
 ;
"RTN","IBTRHDE",202,0)
 ; Find the site parameter with the greatest number of days
"RTN","IBTRHDE",203,0)
 S DATES=$P(HCSR,"^",4)                         ; Past Admission Search Days
"RTN","IBTRHDE",204,0)
 S:$P(HCSR,"^",8)>DATES DATES=$P(HCSR,"^",8)    ; TRICARE Past Admission Search Days
"RTN","IBTRHDE",205,0)
 ;
"RTN","IBTRHDE",206,0)
 ; Find the site parameter with the greatest number of days
"RTN","IBTRHDE",207,0)
 S DATEE=$P(HCSR,"^",2)                         ; Future Admission Search Days
"RTN","IBTRHDE",208,0)
 S:$P(HCSR,"^",6)>DATEE DATEE=$P(HCSR,"^",6)    ; TRICARE future Admission Search Days
"RTN","IBTRHDE",209,0)
 Q
"RTN","IBTRHDE",210,0)
 ;
"RTN","IBTRHDE",211,0)
CKAFINS(HCSR,DFN,ADATE,WHICH,AINS,DATECHK)    ; Checks to see if the selected patient
"RTN","IBTRHDE",212,0)
 ; has active insurance(S) that are valid for HCSR Site Parameter filter 
"RTN","IBTRHDE",213,0)
 ; criteria
"RTN","IBTRHDE",214,0)
 ; Input:       HCSR    - HCSR Site Parameters
"RTN","IBTRHDE",215,0)
 ;              DFN     - Internal Patient IEN
"RTN","IBTRHDE",216,0)
 ;              ADATE   - Internal Fileman date to check for 'active'
"RTN","IBTRHDE",217,0)
 ;              WHICH   - 65 - Checking for an appointment
"RTN","IBTRHDE",218,0)
 ;                        66 - Checking for an admission
"RTN","IBTRHDE",219,0)
 ; Output:      AINS()  - Array of all of the active insurances that are valid
"RTN","IBTRHDE",220,0)
 N COB,IBWARD,INSDATA,INSIEN,INSIX,INSNAME,STOP,TDATE,TRICARE,XX
"RTN","IBTRHDE",221,0)
 K AINS
"RTN","IBTRHDE",222,0)
 D ALL^IBCNS1(DFN,"INSDATA",1,ADATE)
"RTN","IBTRHDE",223,0)
 ;
"RTN","IBTRHDE",224,0)
 ; No active insurance for specified date
"RTN","IBTRHDE",225,0)
 I '$G(INSDATA(0)) Q 0
"RTN","IBTRHDE",226,0)
 S INSIX=0
"RTN","IBTRHDE",227,0)
 F  D  Q:+INSIX=0
"RTN","IBTRHDE",228,0)
 . S INSIX=$O(INSDATA(INSIX))
"RTN","IBTRHDE",229,0)
 . Q:+INSIX=0
"RTN","IBTRHDE",230,0)
 . S TRICARE=0,STOP=0
"RTN","IBTRHDE",231,0)
 . S INSIEN=$P(INSDATA(INSIX,0),"^",1)
"RTN","IBTRHDE",232,0)
 . S COB=$P(INSDATA(INSIX,0),"^",20)
"RTN","IBTRHDE",233,0)
 . S INSNAME=$$GET1^DIQ(36,INSIEN_",",.01)      ; Insurance Company Name
"RTN","IBTRHDE",234,0)
 . S INSNAME=$$UP^XLFSTR(INSNAME)
"RTN","IBTRHDE",235,0)
 . I (INSNAME["TRICARE")!(INSNAME["CHAMPVA") D
"RTN","IBTRHDE",236,0)
 . . S TRICARE=1
"RTN","IBTRHDE",237,0)
 . ; 
"RTN","IBTRHDE",238,0)
 . ; Check if the Insurance is TRICARE or CHAMPVA and then make sure that the
"RTN","IBTRHDE",239,0)
 . ; date being checked is valid for the type of insurance
"RTN","IBTRHDE",240,0)
 . I WHICH=65,'+$G(DATECHK) D  Q:STOP
"RTN","IBTRHDE",241,0)
 . . I 'TRICARE D  Q
"RTN","IBTRHDE",242,0)
 . . . S XX=$P(HCSR,"^",3)                      ; Past Appt Days
"RTN","IBTRHDE",243,0)
 . . . D DT^DILF("","T-"_XX,.TDATE)             ; Past Appt Search date
"RTN","IBTRHDE",244,0)
 . . . I ADATE<TDATE S STOP=1 Q                 ; Date<Past Appt Date
"RTN","IBTRHDE",245,0)
 . . . S XX=$P(HCSR,"^",13)                     ; Future Appt Days
"RTN","IBTRHDE",246,0)
 . . . D DT^DILF("","T+"_XX,.TDATE)             ; Future Appt Search date
"RTN","IBTRHDE",247,0)
 . . . I ADATE>TDATE S STOP=1 Q                 ; Date>Future Appt Date
"RTN","IBTRHDE",248,0)
 . . S XX=$P(HCSR,"^",7)                        ; TRICARE Past Appt Days
"RTN","IBTRHDE",249,0)
 . . D DT^DILF("","T-"_XX,.TDATE)               ; TRICARE Past Appt Search date
"RTN","IBTRHDE",250,0)
 . . I ADATE<TDATE S STOP=1 Q                   ; Date<Past TRICARE Appt Date
"RTN","IBTRHDE",251,0)
 . . S XX=$P(HCSR,"^",5)                        ; TRICARE Future Appt Days
"RTN","IBTRHDE",252,0)
 . . D DT^DILF("","T+"_XX,.TDATE)               ; TRICARE Future Appt Search date
"RTN","IBTRHDE",253,0)
 . . I ADATE>TDATE S STOP=1 Q                   ; Date>Future TRICARE Appt Date
"RTN","IBTRHDE",254,0)
 . ;
"RTN","IBTRHDE",255,0)
 . I WHICH=66,'+$G(DATECHK) D  Q:STOP
"RTN","IBTRHDE",256,0)
 . . I 'TRICARE D  Q
"RTN","IBTRHDE",257,0)
 . . . S XX=$P(HCSR,"^",4)                      ; Past Admission Days
"RTN","IBTRHDE",258,0)
 . . . D DT^DILF("","T-"_XX,.TDATE)             ; Past Admission Search date
"RTN","IBTRHDE",259,0)
 . . . I ADATE<TDATE S STOP=1 Q                 ; Date<Past Admission Date
"RTN","IBTRHDE",260,0)
 . . . S XX=$P(HCSR,"^",2)                      ; Future Admission Days
"RTN","IBTRHDE",261,0)
 . . . D DT^DILF("","T+"_XX,.TDATE)             ; Future Admission Search date
"RTN","IBTRHDE",262,0)
 . . . I ADATE>TDATE S STOP=1 Q                 ; Date>Future Admission Date
"RTN","IBTRHDE",263,0)
 . . S XX=$P(HCSR,"^",8)                        ; TRICARE Past Admission Days
"RTN","IBTRHDE",264,0)
 . . D DT^DILF("","T-"_XX,.TDATE)               ; TRICARE Past Admission Search date
"RTN","IBTRHDE",265,0)
 . . I ADATE<TDATE S STOP=1 Q                   ; Date<Past TRICARE Admission Date
"RTN","IBTRHDE",266,0)
 . . S XX=$P(HCSR,"^",6)                        ; TRICARE Future Admission Days
"RTN","IBTRHDE",267,0)
 . . D DT^DILF("","T+"_XX,.TDATE)               ; TRICARE Future Admission Search date
"RTN","IBTRHDE",268,0)
 . . I ADATE>TDATE S STOP=1 Q                   ; Date>Future TRICARE Admission Date
"RTN","IBTRHDE",269,0)
 . ;
"RTN","IBTRHDE",270,0)
 . I $D(^IBE(350.9,1,WHICH,"B",INSIEN)) D       ; On the inclusion list
"RTN","IBTRHDE",271,0)
 . . S AINS(INSIX)=INSIEN_"^"_COB
"RTN","IBTRHDE",272,0)
 Q
"RTN","IBTRHDE",273,0)
 ;
"RTN","IBTRHDE",274,0)
SETEVENT(NODE0) ; Set Events into the HCS Review Transmission file (356.22)
"RTN","IBTRHDE",275,0)
 ; Input:   NODE0 - A1^A2^...^An Where:
"RTN","IBTRHDE",276,0)
 ;                    A1  - External date of when event was filed
"RTN","IBTRHDE",277,0)
 ;                    A2  - Internal Patient DFN event is for
"RTN","IBTRHDE",278,0)
 ;                    A3  - Insurance multiple IEN
"RTN","IBTRHDE",279,0)
 ;                    A4  - Status. 'I' for Admission, 'O' for appointment
"RTN","IBTRHDE",280,0)
 ;                    A5  - Internal Ward IEN (file 42) if event is an 
"RTN","IBTRHDE",281,0)
 ;                          admission, null otherwise
"RTN","IBTRHDE",282,0)
 ;                    A6  - Internal Clinic IEN (file 44) if event is an 
"RTN","IBTRHDE",283,0)
 ;                          appointment, null otherwise
"RTN","IBTRHDE",284,0)
 ;                    A7  - Internal fileman date (or date range) of the event
"RTN","IBTRHDE",285,0)
 ;                          (appointment or admission date)
"RTN","IBTRHDE",286,0)
 ;                          NOTE: if admission, this is B1-B2 Where:
"RTN","IBTRHDE",287,0)
 ;                                  B1 - Internal Admission Start Date
"RTN","IBTRHDE",288,0)
 ;                                  B2 - Internal Admission Discharge Date
"RTN","IBTRHDE",289,0)
 ;                    A8  - Source identifier - Internal fileman date/time of
"RTN","IBTRHDE",290,0)
 ;                          the appointment or the Internal fileman date of the
"RTN","IBTRHDE",291,0)
 ;                          admission that caused the event creation.  Used in
"RTN","IBTRHDE",292,0)
 ;                          Conjunction with the patient's DFN and Insurance IEN
"RTN","IBTRHDE",293,0)
 ;                          to prevent the creation of 'duplicate' entries
"RTN","IBTRHDE",294,0)
 ; Output:  Event is filed into the HCS Review Transmission file (356.22)
"RTN","IBTRHDE",295,0)
 N DFN,FDA,IEN,INSMIEN,SOURCE,STATUS
"RTN","IBTRHDE",296,0)
 S DFN=$P(NODE0,"^",2)
"RTN","IBTRHDE",297,0)
 S STATUS=$P(NODE0,"^",4)
"RTN","IBTRHDE",298,0)
 S SOURCE=$P(NODE0,"^",8)
"RTN","IBTRHDE",299,0)
 S INSMIEN=$P(NODE0,"^",3)
"RTN","IBTRHDE",300,0)
 ;
"RTN","IBTRHDE",301,0)
 ; Quit if we already have an event for this Status, Ins IEN and Source IEN
"RTN","IBTRHDE",302,0)
 Q:$D(^IBT(356.22,"E",DFN,STATUS,INSMIEN,SOURCE))
"RTN","IBTRHDE",303,0)
 ;
"RTN","IBTRHDE",304,0)
 S FDA(356.22,"+1,",.01)=$P(NODE0,"^",1)
"RTN","IBTRHDE",305,0)
 S FDA(356.22,"+1,",.02)=DFN
"RTN","IBTRHDE",306,0)
 S FDA(356.22,"+1,",.03)=INSMIEN
"RTN","IBTRHDE",307,0)
 S FDA(356.22,"+1,",.04)=STATUS
"RTN","IBTRHDE",308,0)
 S FDA(356.22,"+1,",.05)=$P(NODE0,"^",5)
"RTN","IBTRHDE",309,0)
 S FDA(356.22,"+1,",.06)=$P(NODE0,"^",6)
"RTN","IBTRHDE",310,0)
 S FDA(356.22,"+1,",.08)=0   ; Set initial status to 0
"RTN","IBTRHDE",311,0)
 S FDA(356.22,"+1,",.07)=$P($P(NODE0,U,7),"-")  ; force single date
"RTN","IBTRHDE",312,0)
 ; IF $P($P(NODE0,"^",7),"-",2)'="" S FDA(356.22,"+1,",2.22)=$P($P($P(NODE0,"^",7),"-",2),".")
"RTN","IBTRHDE",313,0)
 S FDA(356.22,"+1,",.16)=SOURCE
"RTN","IBTRHDE",314,0)
 ; JWS 4/2/15 added check for service line data, then if HSD 01 and HSD 02 values do not exist for 2000E loop, default
"RTN","IBTRHDE",315,0)
 ; them to HSD01='VS' and HSD02=1 for outpatient, HSD01='DY' and HSD02=1 for inpatient
"RTN","IBTRHDE",316,0)
 S FDA(356.22,"+1,",4.01)=$$FIND1^DIC(365.016,,,$S(STATUS="I":"DY",1:"VS"))  ; quantity qualifier
"RTN","IBTRHDE",317,0)
 S FDA(356.22,"+1,",4.02)=1  ; unit count
"RTN","IBTRHDE",318,0)
 D UPDATE^DIE("","FDA")
"RTN","IBTRHDE",319,0)
 Q
"RTN","IBTRHDE",320,0)
 ;
"RTN","IBTRHDE",321,0)
ER ; Unlock the IBT HCSR Nightly Process and return to log error
"RTN","IBTRHDE",322,0)
 L -^TMP("IBTRHDE")
"RTN","IBTRHDE",323,0)
 D ^%ZTER
"RTN","IBTRHDE",324,0)
 D UNWIND^%ZTER
"RTN","IBTRHDE",325,0)
 Q
"RTN","IBTRHDE",326,0)
 ;
"RTN","IBTRHDE",327,0)
CHKLIST(NODE,LISTIEN,INSIEN) ; check site parameters and determine if clinic/ward + payer combination is on the list
"RTN","IBTRHDE",328,0)
 ;
"RTN","IBTRHDE",329,0)
 ; NODE = 63 - for Clinic Search inclusion list
"RTN","IBTRHDE",330,0)
 ;        64 - for Ward Search inclusion list
"RTN","IBTRHDE",331,0)
 ;
"RTN","IBTRHDE",332,0)
 ; LISTIEN - IEN in sub-file 350.963 for clinics or 350.964 for wards
"RTN","IBTRHDE",333,0)
 ;
"RTN","IBTRHDE",334,0)
 ; INSIEN - IEN in file 36
"RTN","IBTRHDE",335,0)
 ;
"RTN","IBTRHDE",336,0)
 ; returns 1 if clinic + payer or ward + payer should be included, 0 otherwise
"RTN","IBTRHDE",337,0)
 ;
"RTN","IBTRHDE",338,0)
 N PYRIEN,RES,Z
"RTN","IBTRHDE",339,0)
 S RES=0
"RTN","IBTRHDE",340,0)
 I +$G(LISTIEN),+$G(INSIEN) D
"RTN","IBTRHDE",341,0)
 .; file event if clinic / ward is associated with all payers
"RTN","IBTRHDE",342,0)
 .I $$ISALL^IBJPC3(NODE,LISTIEN) S RES=1 Q
"RTN","IBTRHDE",343,0)
 .; don't file event if clinic / ward is associated with zero payers
"RTN","IBTRHDE",344,0)
 .I $$GETTOT^IBJPC3(NODE,LISTIEN)'>0 S RES=0 Q
"RTN","IBTRHDE",345,0)
 .S PYRIEN=+$$GET1^DIQ(36,INSIEN_",",3.1,"I") I PYRIEN'>0 Q
"RTN","IBTRHDE",346,0)
 .; if payer associated with this ins. co. is on the list - file event
"RTN","IBTRHDE",347,0)
 .I +$O(^IBE(350.9,1,NODE,LISTIEN,1,"B",PYRIEN,""))>0 S RES=1
"RTN","IBTRHDE",348,0)
 .Q
"RTN","IBTRHDE",349,0)
 Q RES
"RTN","IBTRHDE1")
0^33^B5388716^n/a
"RTN","IBTRHDE1",1,0)
IBTRHDE1 ;ALB/JWS - HCSR Auto Trigger of 278x215 Inquiry ;15-OCT-2014
"RTN","IBTRHDE1",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHDE1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHDE1",4,0)
 ;
"RTN","IBTRHDE1",5,0)
 Q
"RTN","IBTRHDE1",6,0)
 ;
"RTN","IBTRHDE1",7,0)
TRIG278 ; Perform 278x215 Inquiry Trigger for Appointments and Admissions
"RTN","IBTRHDE1",8,0)
 ; loop through ^IBT(356.22,"AC") index, from today minus (-) HCSR100[1] and [2]
"RTN","IBTRHDE1",9,0)
 ; check for only previous requests and/or inquiries that have received a 'pending' response
"RTN","IBTRHDE1",10,0)
 ; added field .19 to 356.22 file to indicate that a 215 had been generated for the request/inquiry in order to
"RTN","IBTRHDE1",11,0)
 ; prevent duplicates
"RTN","IBTRHDE1",12,0)
 ; once entry found, perform copy of request data into new 356.22 entry (use version of IBTRH5C)
"RTN","IBTRHDE1",13,0)
 ; need to suppress output of any error results during copy
"RTN","IBTRHDE1",14,0)
 ; perform  D EN^IBTRHLO(ien#, 1) to transmit 278x215
"RTN","IBTRHDE1",15,0)
 ; 
"RTN","IBTRHDE1",16,0)
 N APPTDATE,ADMDATE,IEN,DATA0,IBTRIEN,TDATE,IBFDA
"RTN","IBTRHDE1",17,0)
 I $P(HCSR,"^",10) D DT^DILF("","T-"_$P(HCSR,"^",10),.APPTDATE)
"RTN","IBTRHDE1",18,0)
 I $P(HCSR,"^",11) D DT^DILF("","T-"_$P(HCSR,"^",11),.ADMDATE)
"RTN","IBTRHDE1",19,0)
 I '$G(APPTDATE),'$G(ADMDATE) Q
"RTN","IBTRHDE1",20,0)
 I $G(APPTDATE),'$G(ADMDATE) S TDATE=APPTDATE G 1
"RTN","IBTRHDE1",21,0)
 I $G(ADMDATE),'$G(APPTDATE) S TDATE=ADMDATE G 1
"RTN","IBTRHDE1",22,0)
 S TDATE=$S(APPTDATE<ADMDATE:APPTDATE,1:ADMDATE)
"RTN","IBTRHDE1",23,0)
1 ;begin SEARCH and copy and transmit 215 version of 278 authorization message
"RTN","IBTRHDE1",24,0)
 S TDATE=TDATE_".999999"
"RTN","IBTRHDE1",25,0)
 F  S TDATE=$O(^IBT(356.22,"AC",TDATE),-1) Q:TDATE=""  D
"RTN","IBTRHDE1",26,0)
 . S IEN="" F  S IEN=$O(^IBT(356.22,"AC",TDATE,IEN)) Q:IEN=""  S DATA0=$G(^IBT(356.22,IEN,0)) I '$P(DATA0,"^",19) D
"RTN","IBTRHDE1",27,0)
 .. I $P(DATA0,"^",13) Q  ;THIS IS A RESPONSE MESSAGE ENTRY
"RTN","IBTRHDE1",28,0)
 .. I '$P(DATA0,"^",14) Q  ;NO RESPONSE RECEIVED YET FOR THIS REQUEST/INQUIRY
"RTN","IBTRHDE1",29,0)
 .. I $P(DATA0,"^",8)'="07" Q  ;ONLY AUTO-GENERATE 215 FOR PENDING ENTRIES
"RTN","IBTRHDE1",30,0)
 .. I $P(DATA0,"^",4)="O",+TDATE>APPTDATE Q
"RTN","IBTRHDE1",31,0)
 .. I $P(DATA0,"^",4)="I",+TDATE>ADMDATE Q   ; Perform Inquiry Trigger for Admissions
"RTN","IBTRHDE1",32,0)
 .. S IBTRIEN=$$CRTENTRY^IBTRH5C(IEN,$P(DATA0,"^",14),$P(DATA0,"^",3),"",0,"",1) ; create new 356.22 entry for 215 inquiry
"RTN","IBTRHDE1",33,0)
 .. I 'IBTRIEN Q  ;COPY FAILED
"RTN","IBTRHDE1",34,0)
 .. S IBFDA(356.22,IBTRIEN_",",.2)=1
"RTN","IBTRHDE1",35,0)
 .. D FILE^DIE("I","IBFDA","ERROR")
"RTN","IBTRHDE1",36,0)
 .. S IBFDA(356.22,IEN_",",.19)=1  ;flag request/inquiry that we have generated a 215
"RTN","IBTRHDE1",37,0)
 .. D FILE^DIE("I","IBFDA","ERROR")
"RTN","IBTRHDE1",38,0)
 .. D EN^IBTRHLO(IBTRIEN,1)  ;transmit 215
"RTN","IBTRHDE1",39,0)
 . Q
"RTN","IBTRHDE1",40,0)
 Q
"RTN","IBTRHLI")
0^12^B2260238^n/a
"RTN","IBTRHLI",1,0)
IBTRHLI ;ALB/JWS - Receive and store 278 Response message ;05-JUN-2014
"RTN","IBTRHLI",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLI",4,0)
 ;
"RTN","IBTRHLI",5,0)
 Q
"RTN","IBTRHLI",6,0)
 ;
"RTN","IBTRHLI",7,0)
EN ; This is the entry point for receiving a 278 Response Message
"RTN","IBTRHLI",8,0)
 ; Starting point - put message into a TMP global
"RTN","IBTRHLI",9,0)
 N EVENT,HLFS,IBPRTCL,SEGMT,TAG,CNT,SEGCNT,HLNODE
"RTN","IBTRHLI",10,0)
 ; EXPECTS HLMTIEN=entry in file 772 ^HL(772) HL7 MESSAGE TEXT
"RTN","IBTRHLI",11,0)
 ; ALSO HLNEXT = "D HLNEXT^HLCSUTL"
"RTN","IBTRHLI",12,0)
 ; ALSO HLQUIT = "" OR 0
"RTN","IBTRHLI",13,0)
 ; ALSO HLNODE is = data string of HL7 segment, set in HLNEXT^HLCSUTL
"RTN","IBTRHLI",14,0)
 K ^TMP($J,"IBTRHLI")
"RTN","IBTRHLI",15,0)
 F SEGCNT=1:1 X HLNEXT Q:'HLQUIT  D
"RTN","IBTRHLI",16,0)
 . S CNT=0
"RTN","IBTRHLI",17,0)
 . S ^TMP($J,"IBTRHLI",SEGCNT,CNT)=HLNODE
"RTN","IBTRHLI",18,0)
 . I SEGCNT=1 S SEGMT=HLNODE
"RTN","IBTRHLI",19,0)
 . F  S CNT=$O(HLNODE(CNT)) Q:'CNT  D
"RTN","IBTRHLI",20,0)
 .. S ^TMP($J,"IBTRHLI",SEGCNT,CNT)=HLNODE(CNT)
"RTN","IBTRHLI",21,0)
 .. I SEGCNT=1 S SEGMT=$G(SEGMT)_HLNODE(CNT)
"RTN","IBTRHLI",22,0)
 . Q 
"RTN","IBTRHLI",23,0)
 S HLFS=$E(SEGMT,4)
"RTN","IBTRHLI",24,0)
 S EVENT=$P(SEGMT,HLFS,9),IBPRTCL=""
"RTN","IBTRHLI",25,0)
 ;  Determine which protocol to use
"RTN","IBTRHLI",26,0)
 ;  The event type determines protocol
"RTN","IBTRHLI",27,0)
 I EVENT="RPA^I08" S TAG="RSP",IBPRTCL="IBTR HCSR IN"
"RTN","IBTRHLI",28,0)
 I IBPRTCL="" G XIT
"RTN","IBTRHLI",29,0)
 ;  Initialize the HL7 variables
"RTN","IBTRHLI",30,0)
 D INIT^HLFNC2(IBPRTCL,.HL)
"RTN","IBTRHLI",31,0)
 ;  Call the event tag
"RTN","IBTRHLI",32,0)
 D @TAG
"RTN","IBTRHLI",33,0)
 ;
"RTN","IBTRHLI",34,0)
XIT ;
"RTN","IBTRHLI",35,0)
 K ^TMP($J,"IBTRHLI"),HL,HLNEXT,HLNODE,HLQUIT
"RTN","IBTRHLI",36,0)
 Q
"RTN","IBTRHLI",37,0)
 ;
"RTN","IBTRHLI",38,0)
RSP ;  Response Processing
"RTN","IBTRHLI",39,0)
 D EN^IBTRHLI1
"RTN","IBTRHLI",40,0)
 K ^TMP($J,"IBTRHLI"),HL,HLNEXT,HLNODE,HLQUIT
"RTN","IBTRHLI",41,0)
 Q
"RTN","IBTRHLI",42,0)
 ;
"RTN","IBTRHLI",43,0)
TEST ;
"RTN","IBTRHLI",44,0)
 S $ET="D ^%ZTER"
"RTN","IBTRHLI",45,0)
 R !,"HLMTIEN= ",HLMTIEN:120 Q:HLMTIEN=""
"RTN","IBTRHLI",46,0)
 S HLQUIT=0
"RTN","IBTRHLI",47,0)
 S HLNEXT="D HLNEXT^HLCSUTL"
"RTN","IBTRHLI",48,0)
 G EN
"RTN","IBTRHLI1")
0^13^B11775197^n/a
"RTN","IBTRHLI1",1,0)
IBTRHLI1 ;ALB/JWS - Receive and store 278 Response message ;05-JUN-2014
"RTN","IBTRHLI1",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLI1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLI1",4,0)
 ;
"RTN","IBTRHLI1",5,0)
 ;**Program Description**
"RTN","IBTRHLI1",6,0)
 ;  This program will process incoming HCS REVIEW TRANSMISSION FILE (356.22) ^IBT(356.22).
"RTN","IBTRHLI1",7,0)
 ;  This includes updating the record in the HCSR IIV Response File
"RTN","IBTRHLI1",8,0)
 ;
"RTN","IBTRHLI1",9,0)
 ;  Variables
"RTN","IBTRHLI1",10,0)
 ;    SEG = HL7 Segment Name
"RTN","IBTRHLI1",11,0)
 ;    RESIEN = Response Record IEN
"RTN","IBTRHLI1",12,0)
 ;    ERROR = processing error condition flag
"RTN","IBTRHLI1",13,0)
 ;    IBSEG = array of segment field data values
"RTN","IBTRHLI1",14,0)
EN ; Entry Point
"RTN","IBTRHLI1",15,0)
 N ERROR,HLCMP,HLREP,HLSCMP,RESIEN,SEG,SLIEN,PEIEN,SLPIEN,REQIEN,HCT,IBSEG,BADERROR,STATUS
"RTN","IBTRHLI1",16,0)
 K ^TMP($J,"IBTRHLI2")
"RTN","IBTRHLI1",17,0)
 S HCT=0
"RTN","IBTRHLI1",18,0)
 S HLCMP=$E(HL("ECH")) ; HL7 component separator
"RTN","IBTRHLI1",19,0)
 S HLSCMP=$E(HL("ECH"),4) ; HL7 subcomponent separator
"RTN","IBTRHLI1",20,0)
 S HLREP=$E(HL("ECH"),2) ; HL7 repetition separator
"RTN","IBTRHLI1",21,0)
 ;  Loop through the message and find each segment for processing
"RTN","IBTRHLI1",22,0)
 F  S HCT=$O(^TMP($J,"IBTRHLI",HCT)) Q:HCT=""  D  Q:$D(BADERROR)
"RTN","IBTRHLI1",23,0)
 . D SPAR^IBTRHLU  ; returns all segment fields in IBSEG(field#) array
"RTN","IBTRHLI1",24,0)
 . S SEG=$G(IBSEG(0))
"RTN","IBTRHLI1",25,0)
 . I SEG="MSH" D MSH^IBTRHLI2(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",26,0)
 . I SEG="EVN" Q
"RTN","IBTRHLI1",27,0)
 . I SEG="MSA" D MSA^IBTRHLI2(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",28,0)
 . I SEG="IN1" D IN1^IBTRHLI2(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",29,0)
 . I SEG="PV1" D PV1^IBTRHLI2(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",30,0)
 . I SEG="PRD" D  Q
"RTN","IBTRHLI1",31,0)
 .. I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010B" Q
"RTN","IBTRHLI1",32,0)
 .. I $P($G(IBSEG(1)),HLCMP,4)="PRV 2010B" Q
"RTN","IBTRHLI1",33,0)
 .. I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010EA" D PRD^IBTRHLI2(.IBSEG,.RESIEN,.ERROR,.PEIEN,.SLIEN,.SLPIEN) Q
"RTN","IBTRHLI1",34,0)
 .. I $P($G(IBSEG(1)),HLCMP,4)="PRV 2010EA" Q
"RTN","IBTRHLI1",35,0)
 .. I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010EC" D PRD^IBTRHLI2(.IBSEG,.RESIEN,.ERROR,.PEIEN,.SLIEN,.SLPIEN) Q
"RTN","IBTRHLI1",36,0)
 .. I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010FA" D PRD^IBTRHLI2(.IBSEG,.RESIEN,.ERROR,.PEIEN,.SLIEN,.SLPIEN) Q
"RTN","IBTRHLI1",37,0)
 .. I $P($G(IBSEG(1)),HLCMP,4)="PRV 2010FA" Q
"RTN","IBTRHLI1",38,0)
 . I SEG="CTD",$G(IBSEG(1))="PER 2010EB" D CTD^IBTRHLI3(.IBSEG,.RESIEN,.ERROR,.PEIEN,.SLIEN,.SLPIEN) Q
"RTN","IBTRHLI1",39,0)
 . I SEG="GT1" Q
"RTN","IBTRHLI1",40,0)
 . I SEG="PID" Q
"RTN","IBTRHLI1",41,0)
 . I SEG="PRB" D PRB^IBTRHLI2(.IBSEG,.RESIEN,.ERROR,.SLIEN) Q
"RTN","IBTRHLI1",42,0)
 . I SEG="AUT" D AUT^IBTRHLI2(.IBSEG,.RESIEN,.ERROR,.SLIEN) Q
"RTN","IBTRHLI1",43,0)
 . I SEG="ZTP" D ZTP^IBTRHLI3(.IBSEG,.RESIEN,.ERROR,.SLIEN) Q
"RTN","IBTRHLI1",44,0)
 . I SEG="DG1" D DG1^IBTRHLI3(.IBSEG,.RESIEN,.ERROR,.SLIEN) Q
"RTN","IBTRHLI1",45,0)
 . I SEG="ZHS" D ZHS^IBTRHLI3(.IBSEG,.RESIEN,.ERROR,.SLIEN) Q
"RTN","IBTRHLI1",46,0)
 . I SEG="OBR" D OBR^IBTRHLI2(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",47,0)
 . I SEG="RXA" D RXA^IBTRHLI3(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",48,0)
 . I SEG="RXE" D RXE^IBTRHLI3(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",49,0)
 . I SEG="PSL" D PSL^IBTRHLI3(.IBSEG,.RESIEN,.ERROR,.SLIEN) Q
"RTN","IBTRHLI1",50,0)
 . I SEG="NTE" D NTE^IBTRHLI3(.IBSEG,.RESIEN,.ERROR) Q
"RTN","IBTRHLI1",51,0)
 . I SEG="NK1" D NK1^IBTRHLI3(.IBSEG,.RESIEN,.ERROR,.PEIEN) Q
"RTN","IBTRHLI1",52,0)
 ; set final status of message
"RTN","IBTRHLI1",53,0)
 I $G(RESIEN) S IBFDA(356.22,RESIEN_",",.08)=$G(STATUS) K ERROR D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI1",54,0)
 I $G(REQIEN) S IBFDA(356.22,REQIEN_",",.08)=$G(STATUS) K ERROR D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI1",55,0)
 Q
"RTN","IBTRHLI1",56,0)
 ;
"RTN","IBTRHLI1",57,0)
SLCHECK ; check what service line is being processed
"RTN","IBTRHLI1",58,0)
 I '$G(SLIEN) G SLCHECK1
"RTN","IBTRHLI1",59,0)
 I $P($G(^IBT(356.22,RESIEN,16,SLIEN,1)),"^")="",$P($G(^(1)),"^",2)="" S LEV1=$G(SLIEN)_","_RESIEN_"," Q
"RTN","IBTRHLI1",60,0)
SLCHECK1 ; if not already defined, set new service line entry
"RTN","IBTRHLI1",61,0)
 S CT=$O(^IBT(356.22,RESIEN,16,"A"),-1)+1
"RTN","IBTRHLI1",62,0)
 S LEV1="+2,"_RESIEN_","
"RTN","IBTRHLI1",63,0)
 S IBFDA(356.2216,LEV1,.01)=CT ;SEQ
"RTN","IBTRHLI1",64,0)
 D UP^IBTRHLI2("SL","2000F") S SLIEN=$G(RIEN(2)) ;SERVICE LINE IEN
"RTN","IBTRHLI1",65,0)
 S LEV1=SLIEN_","_RESIEN_","
"RTN","IBTRHLI1",66,0)
 Q
"RTN","IBTRHLI1",67,0)
 ; =================================================================
"RTN","IBTRHLI2")
0^14^B196116381^n/a
"RTN","IBTRHLI2",1,0)
IBTRHLI2 ;ALB/JWS - Receive and store 278 Response message ;05-JUN-2014
"RTN","IBTRHLI2",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLI2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLI2",4,0)
 ;
"RTN","IBTRHLI2",5,0)
 ;**Program Description**
"RTN","IBTRHLI2",6,0)
 ;  This pgm will process the indiv segments of the
"RTN","IBTRHLI2",7,0)
 ;  incoming 278 response msgs.
"RTN","IBTRHLI2",8,0)
 ;
"RTN","IBTRHLI2",9,0)
 ; * Each of these tags are called by IBTRHL2.
"RTN","IBTRHLI2",10,0)
 ; 
"RTN","IBTRHLI2",11,0)
 ;  This routine is based on IBCNEHL2 which was introduced with patch 300, and subsequently
"RTN","IBTRHLI2",12,0)
 ;  patched with patches 345, 416, and 438.
"RTN","IBTRHLI2",13,0)
 ;
"RTN","IBTRHLI2",14,0)
 ;  Variables
"RTN","IBTRHLI2",15,0)
 ;    SEG = HL7 Seg Name
"RTN","IBTRHLI2",16,0)
 ;    IBSEG = Array of the segment
"RTN","IBTRHLI2",17,0)
 ;
"RTN","IBTRHLI2",18,0)
 Q  ; No direct calls
"RTN","IBTRHLI2",19,0)
 ;
"RTN","IBTRHLI2",20,0)
MSH(IBSEG,RESIEN,ERROR) ;MSH seg (x12 BHT seg)
"RTN","IBTRHLI2",21,0)
 ;  Input:
"RTN","IBTRHLI2",22,0)
 ;  IBSEG
"RTN","IBTRHLI2",23,0)
 ;
"RTN","IBTRHLI2",24,0)
 ;  Output:
"RTN","IBTRHLI2",25,0)
 ;  RESIEN,ERROR
"RTN","IBTRHLI2",26,0)
 ;  RESIEN = Response IEN value for file 356.22
"RTN","IBTRHLI2",27,0)
 N IBFDA,RIEN,DATA0
"RTN","IBTRHLI2",28,0)
 S DATA0=""
"RTN","IBTRHLI2",29,0)
 S REQIEN=$P($G(IBSEG(19)),HLCMP) ;REQUEST MESSAGE CONTROL ID
"RTN","IBTRHLI2",30,0)
 I REQIEN S REQIEN=$$FIND1^DIC(356.22,,"PQX",REQIEN,"C")
"RTN","IBTRHLI2",31,0)
 I 'REQIEN D ERR("Cannot locate associated 278 Request message","") S BADERROR=1 Q
"RTN","IBTRHLI2",32,0)
 S DATA0=$G(^IBT(356.22,REQIEN,0))
"RTN","IBTRHLI2",33,0)
 ; If there is a previous response linked to this request, save only the latest
"RTN","IBTRHLI2",34,0)
 ; delete previous 'pending' response
"RTN","IBTRHLI2",35,0)
 I $P(DATA0,U,14) S DIK="^IBT(356.22,",DA=$P(DATA0,U,14) D ^DIK
"RTN","IBTRHLI2",36,0)
 S RIEN=1
"RTN","IBTRHLI2",37,0)
 D NOW^%DTC
"RTN","IBTRHLI2",38,0)
 S IBFDA(356.22,"+1,",.01)=%
"RTN","IBTRHLI2",39,0)
 S IBFDA(356.22,"+1,",.1)=%
"RTN","IBTRHLI2",40,0)
 S IBFDA(356.22,"+1,",.12)=$G(IBSEG(10)) ; MESSAGE CONTROL ID
"RTN","IBTRHLI2",41,0)
 S IBFDA(356.22,"+1,",.15)=%
"RTN","IBTRHLI2",42,0)
 S IBFDA(356.22,"+1,",.13)=REQIEN ;REQUEST IEN
"RTN","IBTRHLI2",43,0)
 S IBFDA(356.22,"+1,",.02)=$P(DATA0,U,2) ;PATIENT IEN
"RTN","IBTRHLI2",44,0)
 S IBFDA(356.22,"+1,",.03)=$P(DATA0,U,3) ;INSURANCE IEN
"RTN","IBTRHLI2",45,0)
 S IBFDA(356.22,"+1,",.04)=$P(DATA0,U,4) ;INPATIENT / OUTPATIENT
"RTN","IBTRHLI2",46,0)
 S IBFDA(356.22,"+1,",.05)=$P(DATA0,U,5) ;WARD
"RTN","IBTRHLI2",47,0)
 S IBFDA(356.22,"+1,",.06)=$P(DATA0,U,6) ;CLINIC
"RTN","IBTRHLI2",48,0)
 S IBFDA(356.22,"+1,",.07)=$P(DATA0,U,7) ;EVENT DATE
"RTN","IBTRHLI2",49,0)
 S IBFDA(356.22,"+1,",.16)=$P(DATA0,U,16) ;SOURCE - date of appointment or admission, used for "E" index
"RTN","IBTRHLI2",50,0)
 S IBFDA(356.22,"+1,",.2)=2
"RTN","IBTRHLI2",51,0)
 ;M ^TMP($J,"IBTRHLI2",356.22)=IBFDA(356.22,"+1,")
"RTN","IBTRHLI2",52,0)
 K ERROR
"RTN","IBTRHLI2",53,0)
 D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",54,0)
 I $D(ERROR) D ERR("Problem filing MSH segment data","") Q
"RTN","IBTRHLI2",55,0)
 S RESIEN=$G(RIEN(1))
"RTN","IBTRHLI2",56,0)
 S IBFDA(356.22,REQIEN_",",.14)=RESIEN  ;UPDATE REQUEST WITH RESPONSE IEN
"RTN","IBTRHLI2",57,0)
 K ERROR
"RTN","IBTRHLI2",58,0)
 D FILE^DIE("I","IBFDA","ERROR")
"RTN","IBTRHLI2",59,0)
 I $D(ERROR) D ERR("Problem linking original request message with response message","")
"RTN","IBTRHLI2",60,0)
 Q
"RTN","IBTRHLI2",61,0)
 ;
"RTN","IBTRHLI2",62,0)
MSA(IBSEG,RESIEN,ERROR) ;MSA seg (x12 AAA and TRN segs)
"RTN","IBTRHLI2",63,0)
 ;  Input:
"RTN","IBTRHLI2",64,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI2",65,0)
 ;
"RTN","IBTRHLI2",66,0)
 ;  Output:
"RTN","IBTRHLI2",67,0)
 ;  ERROR
"RTN","IBTRHLI2",68,0)
 N CT,LEV,IBFDA,RIEN
"RTN","IBTRHLI2",69,0)
 I $E($G(IBSEG(2)),1,3)'="TRN",$P($G(^IBT(356.22,RESIEN,0)),"^",8)'="04" D
"RTN","IBTRHLI2",70,0)
 .S STATUS="04"
"RTN","IBTRHLI2",71,0)
 .;S IBFDA(356.22,RESIEN_",",.08)="04" ;STATUS - negative response received
"RTN","IBTRHLI2",72,0)
 .;S ^TMP($J,"IBTRHLI2",356.22,.08)="04"
"RTN","IBTRHLI2",73,0)
 .;K ERROR
"RTN","IBTRHLI2",74,0)
 .;D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",75,0)
 .;K ERROR
"RTN","IBTRHLI2",76,0)
 .;I REQIEN S IBFDA(356.22,REQIEN_",",.08)="04" D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI2",77,0)
 S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI2",78,0)
 I $E($G(IBSEG(2)),1,3)="TRN" D  D UP("TRN",$E($G(IBSEG(2)),5,10)) Q
"RTN","IBTRHLI2",79,0)
 .S CT=$O(^IBT(356.22,RESIEN,105,"A"),-1),CT=CT+1
"RTN","IBTRHLI2",80,0)
 .S IBFDA(356.22105,LEV,.01)=CT
"RTN","IBTRHLI2",81,0)
 .S IBFDA(356.22105,LEV,.02)=$E($G(IBSEG(2)),5,10) ;LOOP IDENTIFIER
"RTN","IBTRHLI2",82,0)
 .S IBFDA(356.22105,LEV,.03)=$G(IBSEG(7))  ;TRACE TYPE CODE
"RTN","IBTRHLI2",83,0)
 .S IBFDA(356.22105,LEV,.04)=$G(IBSEG(3))  ;TRACE NUMBER
"RTN","IBTRHLI2",84,0)
 .S IBFDA(356.22105,LEV,.05)=$P($G(IBSEG(6)),HLCMP)  ;ENTITY IDENTIFIER
"RTN","IBTRHLI2",85,0)
 .S IBFDA(356.22105,LEV,.06)=$P($G(IBSEG(6)),HLCMP,2)  ;ENTITY ADD ID
"RTN","IBTRHLI2",86,0)
 .;S ^TMP($J,"IBTRHLI2",356.22105,.01)=CT,^(.02)=$E($G(IBSEG(2)),5,10)
"RTN","IBTRHLI2",87,0)
 .;S ^TMP($J,"IBTRHLI2",356.22105,.03)=$G(IBSEG(7)),^(.04)=$G(IBSEG(3))
"RTN","IBTRHLI2",88,0)
 .;S ^TMP($J,"IBTRHLI2",356.22105,.05)=$P($G(IBSEG(6)),HLCMP),^(.06)=$P($G(IBSEG(6)),HLCMP,2)
"RTN","IBTRHLI2",89,0)
 .Q
"RTN","IBTRHLI2",90,0)
 S CT=$O(^IBT(356.22,RESIEN,101,"A"),-1),CT=CT+1
"RTN","IBTRHLI2",91,0)
 S IBFDA(356.22101,LEV,.01)=CT
"RTN","IBTRHLI2",92,0)
 S IBFDA(356.22101,LEV,.02)=$E($G(IBSEG(3)),5,10) ;LOOP IDENTIFIER
"RTN","IBTRHLI2",93,0)
 S IBFDA(356.22101,LEV,.05)=$G(IBSEG(5)) ;FOLLOW-UP ACTION CODE
"RTN","IBTRHLI2",94,0)
 S IBFDA(356.22101,LEV,.04)=$P($G(IBSEG(6)),HLCMP) ;REJECT REASON CODE
"RTN","IBTRHLI2",95,0)
 S IBFDA(356.22101,LEV,1)=$P($G(IBSEG(6)),HLCMP,2) ;FSC ERROR TEXT
"RTN","IBTRHLI2",96,0)
 S IBFDA(356.22101,LEV,.03)=$S($P($G(IBSEG(6)),HLCMP,4)'="":"Y",1:"N") ;VALID REQUEST INDICATOR
"RTN","IBTRHLI2",97,0)
 ;S ^TMP($J,"IBTRHLI2",356.22101,.01)=CT,^(.02)=$E($G(IBSEG(3)),5,10)
"RTN","IBTRHLI2",98,0)
 ;S ^TMP($J,"IBTRHLI2",356.22101,.05)=$G(IBSEG(5)),^(.04)=$P($G(IBSEG(6)),HLCMP)
"RTN","IBTRHLI2",99,0)
 ;S ^TMP($J,"IBTRHLI2",356.22101,1)=$P($G(IBSEG(6)),HLCMP,2),^(.03)=IBFDA(356.22101,LEV,.03)
"RTN","IBTRHLI2",100,0)
 D UP("AAA",$E($G(IBSEG(3)),5,10))
"RTN","IBTRHLI2",101,0)
 Q
"RTN","IBTRHLI2",102,0)
IN1(IBSEG,RESIEN,ERROR) ;IN1 Insurance seg (X12 NM1 and PER seg(s) loop 2010A)
"RTN","IBTRHLI2",103,0)
 ;  Input:
"RTN","IBTRHLI2",104,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI2",105,0)
 ;
"RTN","IBTRHLI2",106,0)
 ;  Output:
"RTN","IBTRHLI2",107,0)
 ;  ERROR
"RTN","IBTRHLI2",108,0)
 N X1,LEV,IBFDA,RIEN
"RTN","IBTRHLI2",109,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI2",110,0)
 S IBFDA(356.22,LEV,19)=$P($P($G(IBSEG(6)),HLCMP),HLSCMP)
"RTN","IBTRHLI2",111,0)
 S X1=$P($P($G(IBSEG(7)),HLREP),HLCMP,2)
"RTN","IBTRHLI2",112,0)
 I X1="X.400"!(X1="Internet") D
"RTN","IBTRHLI2",113,0)
 .S IBFDA(356.22,LEV,19.01)=$S(X1="X.400":"EM",1:"UR")
"RTN","IBTRHLI2",114,0)
 .S IBFDA(356.22,LEV,20)=$P($P($G(IBSEG(7)),HLREP),HLCMP,3)
"RTN","IBTRHLI2",115,0)
 I X1="FX"!(X1="PH") D
"RTN","IBTRHLI2",116,0)
 .S IBFDA(356.22,LEV,19.01)=$S(X1="FX":"FX",1:"TE")
"RTN","IBTRHLI2",117,0)
 .S IBFDA(356.22,LEV,20)=$P($P($G(IBSEG(7)),HLREP),HLCMP,11)
"RTN","IBTRHLI2",118,0)
 S X1=$P($P($G(IBSEG(7)),HLREP,2),HLCMP,2)
"RTN","IBTRHLI2",119,0)
 I X1="X.400"!(X1="Internet") D
"RTN","IBTRHLI2",120,0)
 .S IBFDA(356.22,LEV,19.02)=$S(X1="X.400":"EM",1:"UR")
"RTN","IBTRHLI2",121,0)
 .S IBFDA(356.22,LEV,21)=$P($P($G(IBSEG(7)),HLREP,2),HLCMP,3)
"RTN","IBTRHLI2",122,0)
 I X1="FX"!(X1="PH") D
"RTN","IBTRHLI2",123,0)
 .S IBFDA(356.22,LEV,19.02)=$S(X1="FX":"FX",1:"TE")
"RTN","IBTRHLI2",124,0)
 .S IBFDA(356.22,LEV,21)=$P($P($G(IBSEG(7)),HLREP,2),HLCMP,11)
"RTN","IBTRHLI2",125,0)
 I X1="MD" S IBFDA(356.22,LEV,19.02)="EX",IBFDA(356.22,LEV,21)=$P($P($G(IBSEG(7)),HLREP,2),HLCMP,7)
"RTN","IBTRHLI2",126,0)
 S X1=$P($P($G(IBSEG(7)),HLREP,3),HLCMP,2)
"RTN","IBTRHLI2",127,0)
 I X1="X.400"!(X1="Internet") D
"RTN","IBTRHLI2",128,0)
 .S IBFDA(356.22,LEV,19.03)=$S(X1="X.400":"EM",1:"UR")
"RTN","IBTRHLI2",129,0)
 .S IBFDA(356.22,LEV,22)=$P($P($G(IBSEG(7)),HLREP,3),HLCMP,3)
"RTN","IBTRHLI2",130,0)
 I X1="FX"!(X1="PH") D
"RTN","IBTRHLI2",131,0)
 .S IBFDA(356.22,LEV,19.03)=$S(X1="FX":"FX",1:"TE")
"RTN","IBTRHLI2",132,0)
 .S IBFDA(356.22,LEV,22)=$P($P($G(IBSEG(7)),HLREP,3),HLCMP,11)
"RTN","IBTRHLI2",133,0)
 I X1="MD" S IBFDA(356.22,LEV,19.03)="EX",IBFDA(356.22,LEV,22)=$P($P($G(IBSEG(7)),HLREP,3),HLCMP,7)
"RTN","IBTRHLI2",134,0)
 ;M ^TMP($J,"IBTRHLI2",356.22)=IBFDA(356.22,LEV)
"RTN","IBTRHLI2",135,0)
 D UP("PER","2010A")
"RTN","IBTRHLI2",136,0)
 Q
"RTN","IBTRHLI2",137,0)
PRB(IBSEG,RESIEN,ERROR,SLIEN) ;PRB Problem Detail seg (x12 UM loop 2000E, UM 2000F)
"RTN","IBTRHLI2",138,0)
 ;  Input:
"RTN","IBTRHLI2",139,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI2",140,0)
 ;
"RTN","IBTRHLI2",141,0)
 ;  Output:
"RTN","IBTRHLI2",142,0)
 ;  ERROR,SLIEN
"RTN","IBTRHLI2",143,0)
 N LEV,IBFDA,RIEN,PTR
"RTN","IBTRHLI2",144,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI2",145,0)
 I $G(IBSEG(5))="UM 2000E" D  Q
"RTN","IBTRHLI2",146,0)
 .;NOT NEEDED - NEVER HAVE 2 EVENTS
"RTN","IBTRHLI2",147,0)
 .;I $P($G(^IBT(356.22,RESIEN,2)),U)'="" D  I $D(ERROR) Q
"RTN","IBTRHLI2",148,0)
 .;.; NEED TO HANDLE MULTIPLE PATIENT EVENTS, create 2nd resp entry
"RTN","IBTRHLI2",149,0)
 .;.I '$D(^TMP($J,"IBTRHLI2")) Q
"RTN","IBTRHLI2",150,0)
 .;.M IBFDA(356.22,"+1,")=^TMP($J,"IBTRHLI2",356.22)
"RTN","IBTRHLI2",151,0)
 .;.S IBFDA(356.22,"+1,",.13)=REQIEN  ;UPDATE 2ND RESPONSE WITH REQUEST IEN
"RTN","IBTRHLI2",152,0)
 .;.K ERROR
"RTN","IBTRHLI2",153,0)
 .;.D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",154,0)
 .;.I $D(ERROR) D ERR("Problem filing 2ND Patient Event data","") Q
"RTN","IBTRHLI2",155,0)
 .;.S IBFDA(356.22,RESIEN_",",.14)=RIEN(1) ;UPDATE 1ST RESPONSE WITH 2ND RESPONSE IEN
"RTN","IBTRHLI2",156,0)
 .;.K ERROR
"RTN","IBTRHLI2",157,0)
 .;.D FILE^DIE("I","IBFDA","ERROR")
"RTN","IBTRHLI2",158,0)
 .;.S RESIEN=RIEN(1),LEV=RESIEN_","
"RTN","IBTRHLI2",159,0)
 .;.M IBFDA(356.22101,"+2,"_RESIEN_",")=^TMP($J,"IBTRHLI2",356.22101)
"RTN","IBTRHLI2",160,0)
 .;.K RIEN,ERROR
"RTN","IBTRHLI2",161,0)
 .;.D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",162,0)
 .;.I $D(ERROR) D ERR("Problem filing 2nd Patient Event data","") Q
"RTN","IBTRHLI2",163,0)
 .;.M IBFDA(356.22105,"+2,"_RESIEN_",")=^TMP($J,"IBTRHLI2",356.22105)
"RTN","IBTRHLI2",164,0)
 .;.I $D(ERROR) D ERR("Problem filing 2nd Patient Event data","") Q
"RTN","IBTRHLI2",165,0)
 .;.K ^TMP($J,"IBTRHLI2")
"RTN","IBTRHLI2",166,0)
 .;.Q
"RTN","IBTRHLI2",167,0)
 .S PTR=$$FIND1^DIC(356.001,,"P",$P($P($G(IBSEG(11)),HLREP),HLCMP),"B")
"RTN","IBTRHLI2",168,0)
 .S IBFDA(356.22,LEV,2.01)=PTR ;REQEST CAT
"RTN","IBTRHLI2",169,0)
 .K ERROR
"RTN","IBTRHLI2",170,0)
 .D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",171,0)
 .I $D(ERROR) D ERR("Problem loading UM Loop 2000E segment data","2000E")
"RTN","IBTRHLI2",172,0)
 .S IBFDA(356.22,LEV,2.02)=$P($G(IBSEG(3)),HLCMP) ;CERT TYPE CODE
"RTN","IBTRHLI2",173,0)
 .S IBFDA(356.22,LEV,2.03)=$P($P($G(IBSEG(11)),HLREP,2),HLCMP) ;SERVICE TYPE
"RTN","IBTRHLI2",174,0)
 .S IBFDA(356.22,LEV,2.13)=$P($G(IBSEG(18)),HLCMP) ;LEVEL OF SERVICE
"RTN","IBTRHLI2",175,0)
 .I IBFDA(356.22,LEV,2.13)=3 S IBFDA(356.22,LEV,2.13)="03"
"RTN","IBTRHLI2",176,0)
 .D UP("UM","2000E")
"RTN","IBTRHLI2",177,0)
 .Q
"RTN","IBTRHLI2",178,0)
 I $G(IBSEG(5))="CR6 2000E" D  D UP("CR6","2000E") Q
"RTN","IBTRHLI2",179,0)
 .S IBFDA(356.22,LEV,2.15)=$P($G(IBSEG(22)),HLCMP) ;PROGNOSIS CODE
"RTN","IBTRHLI2",180,0)
 .S IBFDA(356.22,LEV,10.01)=$G(IBSEG(16)) ;HOME HEALTH START DATE
"RTN","IBTRHLI2",181,0)
 .S IBFDA(356.22,LEV,10.02)=$P($G(IBSEG(17)),"-") ;HOME HEALTH CERT START DATE
"RTN","IBTRHLI2",182,0)
 .S IBFDA(356.22,LEV,10.03)=$P($G(IBSEG(17)),"-",2)  ;HOME HEALTH CERT END DATE
"RTN","IBTRHLI2",183,0)
 .Q
"RTN","IBTRHLI2",184,0)
 I $G(IBSEG(5))="UM 2000F" D  Q
"RTN","IBTRHLI2",185,0)
 .S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI2",186,0)
 .S CT=$O(^IBT(356.22,RESIEN,16,"A"),-1)+1
"RTN","IBTRHLI2",187,0)
 .S IBFDA(356.2216,LEV,.01)=CT ;SEQ
"RTN","IBTRHLI2",188,0)
 .S IBFDA(356.2216,LEV,.15)=$G(IBSEG(1)) ;REQ CAT
"RTN","IBTRHLI2",189,0)
 .S IBFDA(356.2216,LEV,.02)=$P($G(IBSEG(3)),HLCMP) ;CERT TYPE CODE
"RTN","IBTRHLI2",190,0)
 .S IBFDA(356.2216,LEV,.03)=$P($G(IBSEG(3)),HLCMP,2) ;SERVICE TYPE
"RTN","IBTRHLI2",191,0)
 .S IBFDA(356.2216,LEV,.05)=$P($G(IBSEG(10)),HLCMP) ;FACILITY TYPE
"RTN","IBTRHLI2",192,0)
 .S IBFDA(356.2216,LEV,.04)=$P($G(IBSEG(10)),HLCMP,2) ;FACILITY TYPE QUAL
"RTN","IBTRHLI2",193,0)
 .D UP("UM","2000F")
"RTN","IBTRHLI2",194,0)
 .I $D(ERROR) Q
"RTN","IBTRHLI2",195,0)
 .S SLIEN=$G(RIEN(2)) ;SERVICE LINE IEN
"RTN","IBTRHLI2",196,0)
 .Q
"RTN","IBTRHLI2",197,0)
 Q
"RTN","IBTRHLI2",198,0)
PV1(IBSEG,RESIEN,ERROR) ;PV1 Patient Visit seg (x12 
"RTN","IBTRHLI2",199,0)
 ;  Input:
"RTN","IBTRHLI2",200,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI2",201,0)
 ;
"RTN","IBTRHLI2",202,0)
 ;  Output:
"RTN","IBTRHLI2",203,0)
 ;  ERROR
"RTN","IBTRHLI2",204,0)
 N LEV,IBFDA,RIEN
"RTN","IBTRHLI2",205,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI2",206,0)
 I $P($G(IBSEG(3)),HLCMP)="CL1 2000E" D  D UP("CL1","2000E") Q
"RTN","IBTRHLI2",207,0)
 .S IBFDA(356.22,LEV,7.01)=$G(IBSEG(4)) ;admission type
"RTN","IBTRHLI2",208,0)
 .S IBFDA(356.22,LEV,7.02)=$G(IBSEG(14)) ;admission source
"RTN","IBTRHLI2",209,0)
 .S IBFDA(356.22,LEV,7.03)=$G(IBSEG(36)) ;patient status
"RTN","IBTRHLI2",210,0)
 .Q
"RTN","IBTRHLI2",211,0)
 S IBFDA(356.22,LEV,2.04)=$P($G(IBSEG(3)),HLCMP,6) ;facility type qualifier
"RTN","IBTRHLI2",212,0)
 S IBFDA(356.22,LEV,2.05)=$P($G(IBSEG(3)),HLCMP) ;facility type
"RTN","IBTRHLI2",213,0)
 D UP("UM 2","2000E")
"RTN","IBTRHLI2",214,0)
 Q
"RTN","IBTRHLI2",215,0)
AUT(IBSEG,RESIEN,ERROR,SLIEN) ;
"RTN","IBTRHLI2",216,0)
 ;  Input:
"RTN","IBTRHLI2",217,0)
 ;  IBSEG,RESIEN,SLIEN
"RTN","IBTRHLI2",218,0)
 ;
"RTN","IBTRHLI2",219,0)
 ;  Output:
"RTN","IBTRHLI2",220,0)
 ;  ERROR
"RTN","IBTRHLI2",221,0)
 N CTIEN,LEV,LEV1,NODE0,IBFDA,ACTION,RIEN
"RTN","IBTRHLI2",222,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI2",223,0)
 I $P($G(IBSEG(2)),HLCMP)="REF 2000E" D  D UP("REF","2000E") Q
"RTN","IBTRHLI2",224,0)
 .I $P($G(IBSEG(2)),HLCMP,5)="BB" S IBFDA(356.22,LEV,17.01)=$P($G(IBSEG(2)),HLCMP,2) ;PREV. AUTH
"RTN","IBTRHLI2",225,0)
 .I $P($G(IBSEG(2)),HLCMP,5)="NT" S IBFDA(356.22,LEV,17.02)=$P($G(IBSEG(2)),HLCMP,2) ;PREV. ADMIN REF#
"RTN","IBTRHLI2",226,0)
 .Q
"RTN","IBTRHLI2",227,0)
 I $P($G(IBSEG(2)),HLCMP)="REF 2000F" D  D UP("REF","2000F") Q
"RTN","IBTRHLI2",228,0)
 .D SLCHECK^IBTRHLI1
"RTN","IBTRHLI2",229,0)
 .I $P($G(IBSEG(2)),HLCMP,5)="BB" S IBFDA(356.2216,LEV1,9.01)=$P($G(IBSEG(2)),HLCMP,2) ;PREV. AUTH
"RTN","IBTRHLI2",230,0)
 .I $P($G(IBSEG(2)),HLCMP,5)="NT" S IBFDA(356.2216,LEV1,9.02)=$P($G(IBSEG(2)),HLCMP,2) ;PREV. ADMIN REF#
"RTN","IBTRHLI2",231,0)
 .Q
"RTN","IBTRHLI2",232,0)
 I $P($G(IBSEG(2)),HLCMP)="HCR 2000F" D  D UP("HCR","2000F") Q
"RTN","IBTRHLI2",233,0)
 .D SLCHECK^IBTRHLI1
"RTN","IBTRHLI2",234,0)
 .S IBFDA(356.2216,LEV1,11.01)=$P($G(IBSEG(6)),HLCMP,3) ;CERT ACTION CODE
"RTN","IBTRHLI2",235,0)
 .S IBFDA(356.2216,LEV1,11.02)=$P($G(IBSEG(6)),HLCMP) ;REVIEW IDENT #
"RTN","IBTRHLI2",236,0)
 .S IBFDA(356.2216,LEV1,11.03)=$P($G(IBSEG(2)),HLCMP,2) ;REVIEW DES REASONE CODE
"RTN","IBTRHLI2",237,0)
 .S IBFDA(356.2216,LEV1,11.04)=$P($G(IBSEG(2)),HLCMP,5) ;2ND SURG OPINION CODE
"RTN","IBTRHLI2",238,0)
 .Q
"RTN","IBTRHLI2",239,0)
 S ACTION=$P($G(IBSEG(6)),HLCMP,3)  ;CERT ACTION CODE
"RTN","IBTRHLI2",240,0)
 I $F(",A1,A2,A3,A6,C,CT,NA,",","_ACTION_","),$G(STATUS)'="04" D
"RTN","IBTRHLI2",241,0)
 .S STATUS="05"
"RTN","IBTRHLI2",242,0)
 .;S IBFDA(356.22,RESIEN_",",.08)="05" ;STATUS - positive resp received
"RTN","IBTRHLI2",243,0)
 .;K ERROR
"RTN","IBTRHLI2",244,0)
 .;D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",245,0)
 .;K ERROR
"RTN","IBTRHLI2",246,0)
 .;S IBFDA(356.22,REQIEN_",",.08)="05" ;STATUS - positive resp received
"RTN","IBTRHLI2",247,0)
 .;D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",248,0)
 I ACTION="A4",$G(STATUS)'="04" D
"RTN","IBTRHLI2",249,0)
 .S STATUS="07"
"RTN","IBTRHLI2",250,0)
 .;S IBFDA(356.22,RESIEN_",",.08)="07" ;STATUS - pending resp received
"RTN","IBTRHLI2",251,0)
 .;K ERROR
"RTN","IBTRHLI2",252,0)
 .;D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",253,0)
 .;S IBFDA(356.22,REQIEN_",",.08)="07" ;STATUS - pending resp received
"RTN","IBTRHLI2",254,0)
 .;K ERROR
"RTN","IBTRHLI2",255,0)
 .;D UPDATE^DIE(,"IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",256,0)
 S IBFDA(356.22,LEV,103.01)=$P($G(IBSEG(6)),HLCMP,3) ;CERT ACTION CODE
"RTN","IBTRHLI2",257,0)
 S IBFDA(356.22,LEV,103.02)=$P($G(IBSEG(6)),HLCMP) ;REVIEW IDENT #
"RTN","IBTRHLI2",258,0)
 S IBFDA(356.22,LEV,103.03)=$P($G(IBSEG(2)),HLCMP,2) ;REVIEW DES REASON CODE
"RTN","IBTRHLI2",259,0)
 S IBFDA(356.22,LEV,103.04)=$P($G(IBSEG(2)),HLCMP,5) ;2ND SURG OPINION CODE
"RTN","IBTRHLI2",260,0)
 D UP("HCR","2000E")
"RTN","IBTRHLI2",261,0)
 ;
"RTN","IBTRHLI2",262,0)
 S NODE0=^IBT(356.22,RESIEN,0)
"RTN","IBTRHLI2",263,0)
 S CTIEN=+$$FNDCT^IBTRHLI3($P(NODE0,U,2),$P(NODE0,U,7),RESIEN)
"RTN","IBTRHLI2",264,0)
 ;I CTIEN D HCSRCPY^IBTUTL(RESIEN,CTIEN)
"RTN","IBTRHLI2",265,0)
 I CTIEN D HCSRCPY^IBTUTL(RESIEN,CTIEN,$P(NODE0,U,2),$P(NODE0,U,7))
"RTN","IBTRHLI2",266,0)
 ;
"RTN","IBTRHLI2",267,0)
 Q
"RTN","IBTRHLI2",268,0)
 ;
"RTN","IBTRHLI2",269,0)
OBR(IBSEG,RESIEN,ERROR) ;OBR Observation Request seg
"RTN","IBTRHLI2",270,0)
 ;  Input:
"RTN","IBTRHLI2",271,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI2",272,0)
 ;
"RTN","IBTRHLI2",273,0)
 ;  Output:
"RTN","IBTRHLI2",274,0)
 ;  ERROR 
"RTN","IBTRHLI2",275,0)
 N LEV,IBFDA,RIEN
"RTN","IBTRHLI2",276,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI2",277,0)
 S IBFDA(356.22,LEV,18.03)=$P($G(IBSEG(46)),HLCMP) ;AMBULANCE TRANS CODE
"RTN","IBTRHLI2",278,0)
 S IBFDA(356.22,LEV,18.05)=$P($P($G(IBSEG(27)),HLCMP),HLSCMP,2) ;DIST UNITS
"RTN","IBTRHLI2",279,0)
 S IBFDA(356.22,LEV,18.06)=$P($P($G(IBSEG(27)),HLCMP),HLSCMP) ;TRANS DIST
"RTN","IBTRHLI2",280,0)
 D UP("CR1","2000E")
"RTN","IBTRHLI2",281,0)
 Q
"RTN","IBTRHLI2",282,0)
 ;
"RTN","IBTRHLI2",283,0)
PRD(IBSEG,RESIEN,ERROR,PEIEN,SLIEN,SLPIEN) ; PRD Provider Data seg
"RTN","IBTRHLI2",284,0)
 ;  Input:
"RTN","IBTRHLI2",285,0)
 ;  IBSEG,RESIEN,SLIEN
"RTN","IBTRHLI2",286,0)
 ;
"RTN","IBTRHLI2",287,0)
 ;  Output:
"RTN","IBTRHLI2",288,0)
 ;  ERROR,SLPIEN,PEIEN
"RTN","IBTRHLI2",289,0)
 N LEV,IBFDA,NPI,SCRN,PTR,FLD,RIEN
"RTN","IBTRHLI2",290,0)
 I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010EA" D  G PRD1
"RTN","IBTRHLI2",291,0)
 .S NPI=$P($G(IBSEG(7)),HLCMP),SCRN=""
"RTN","IBTRHLI2",292,0)
 .I NPI="" D  Q
"RTN","IBTRHLI2",293,0)
 ..I $P($G(IBSEG(1)),HLCMP)="" Q
"RTN","IBTRHLI2",294,0)
 ..S PTR=$$GET1^DIQ(365.022,$$FIND1^DIC(365.022,,,$P($G(IBSEG(1)),HLCMP),"B"),.02)
"RTN","IBTRHLI2",295,0)
 ..D ERR("Missing "_PTR_" in NM1 2010EA segment","2010EA") Q
"RTN","IBTRHLI2",296,0)
 .S PTR=$$FPRD($G(IBSEG(1)),NPI)
"RTN","IBTRHLI2",297,0)
 .S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI2",298,0)
 .S FLD=356.2213
"RTN","IBTRHLI2",299,0)
 .S IBFDA(FLD,LEV,.01)=$P($G(IBSEG(1)),HLCMP) ;PROVIDER TYPE
"RTN","IBTRHLI2",300,0)
 .S IBFDA(FLD,LEV,.02)=$P($G(IBSEG(1)),HLCMP,2) ;PERSON/NON-PERSON
"RTN","IBTRHLI2",301,0)
 .S IBFDA(FLD,LEV,.04)=$E($P($G(IBSEG(1)),HLCMP,4),5,10) ;PER LOOP
"RTN","IBTRHLI2",302,0)
 .Q
"RTN","IBTRHLI2",303,0)
 I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010EC" D  D UP("NM1","2010EC") Q
"RTN","IBTRHLI2",304,0)
 .S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI2",305,0)
 .S FLD=356.2214
"RTN","IBTRHLI2",306,0)
 .S IBFDA(FLD,LEV,.01)=$P($G(IBSEG(1)),HLCMP) ;LOCATION TYPE
"RTN","IBTRHLI2",307,0)
 .S IBFDA(FLD,LEV,.02)=$P($G(IBSEG(2)),HLCMP) ;LOCATION NAME
"RTN","IBTRHLI2",308,0)
 .S IBFDA(FLD,LEV,.03)=$P($G(IBSEG(3)),HLCMP) ;ADDR LINE 1
"RTN","IBTRHLI2",309,0)
 .S IBFDA(FLD,LEV,.04)=$P($G(IBSEG(3)),HLCMP,2) ;ADDR LINE 2
"RTN","IBTRHLI2",310,0)
 .S IBFDA(FLD,LEV,.05)=$P($G(IBSEG(3)),HLCMP,3) ;CITY
"RTN","IBTRHLI2",311,0)
 .S IBFDA(FLD,LEV,.06)=$P($G(IBSEG(3)),HLCMP,4) ;STATE
"RTN","IBTRHLI2",312,0)
 .S IBFDA(FLD,LEV,.07)=$P($G(IBSEG(3)),HLCMP,5) ;ZIP
"RTN","IBTRHLI2",313,0)
 .Q
"RTN","IBTRHLI2",314,0)
 I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010FA" D  G PRD2
"RTN","IBTRHLI2",315,0)
 .S NPI=$P($G(IBSEG(7)),HLCMP),SCRN=""
"RTN","IBTRHLI2",316,0)
 .I NPI="" D ERR("Missing NPI value for provider in NM1 2010FA segment","2010FA") D ERR Q
"RTN","IBTRHLI2",317,0)
 .S PTR=$$FPRD($G(IBSEG(1)),NPI)
"RTN","IBTRHLI2",318,0)
 .S LEV="+3,"_SLIEN_","_RESIEN_","
"RTN","IBTRHLI2",319,0)
 .S FLD=356.22168
"RTN","IBTRHLI2",320,0)
 .S IBFDA(FLD,LEV,.01)=$P($G(IBSEG(1)),HLCMP) ;PROVIDER TYPE
"RTN","IBTRHLI2",321,0)
 .S IBFDA(FLD,LEV,.02)=$P($G(IBSEG(1)),HLCMP,2) ;PERSON/NON-PERSON
"RTN","IBTRHLI2",322,0)
 .S IBFDA(FLD,LEV,.04)=$E($P($G(IBSEG(1)),HLCMP,4),5,10) ;PER LOOP
"RTN","IBTRHLI2",323,0)
 .Q
"RTN","IBTRHLI2",324,0)
 I $P($G(IBSEG(1)),HLCMP,4)="NM1 2010FB" D  D UP("NM1","2010FB") Q
"RTN","IBTRHLI2",325,0)
 .S LEV=SLPIEN_","_SLIEN_","_RESIEN_","
"RTN","IBTRHLI2",326,0)
 .S FLD=356.22168
"RTN","IBTRHLI2",327,0)
 .S IBFDA(FLD,LEV,4.01)="2010FB"
"RTN","IBTRHLI2",328,0)
 .S IBFDA(FLD,LEV,4.02)="L5"
"RTN","IBTRHLI2",329,0)
 .S IBFDA(FLD,LEV,4.03)=$P($G(IBSEG(1)),HLCMP,2) ;PROVIDER TYPE
"RTN","IBTRHLI2",330,0)
 .S IBFDA(FLD,LEV,4.04)=$P($G(IBSEG(2)),HLCMP) ;CONTACT LAST
"RTN","IBTRHLI2",331,0)
 .S IBFDA(FLD,LEV,4.05)=$P($G(IBSEG(2)),HLCMP,2) ;CONTACT FIRST
"RTN","IBTRHLI2",332,0)
 .S IBFDA(FLD,LEV,4.06)=$P($G(IBSEG(2)),HLCMP,3) ;CONTACT MIDDLE
"RTN","IBTRHLI2",333,0)
 .S IBFDA(FLD,LEV,4.07)=$P($G(IBSEG(2)),HLCMP,4) ;CONTACT SUFFIX
"RTN","IBTRHLI2",334,0)
 .S IBFDA(FLD,LEV,4.08)=$P($G(IBSEG(7)),HLCMP,2) ;IDENT CODE QUAL
"RTN","IBTRHLI2",335,0)
 .S IBFDA(FLD,LEV,4.09)=$P($G(IBSEG(7)),HLCMP) ;IDENT CODE
"RTN","IBTRHLI2",336,0)
 .S IBFDA(FLD,LEV,5)=$P($G(IBSEG(3)),HLCMP) ;CONTACT ADDR LINE1
"RTN","IBTRHLI2",337,0)
 .S IBFDA(FLD,LEV,5.01)=$P($G(IBSEG(3)),HLCMP,2) ;CONTACT ADDR LINE2
"RTN","IBTRHLI2",338,0)
 .S IBFDA(FLD,LEV,5.02)=$P($G(IBSEG(3)),HLCMP,3) ;CONTACT CITY
"RTN","IBTRHLI2",339,0)
 .S IBFDA(FLD,LEV,5.03)=$P($G(IBSEG(3)),HLCMP,4) ;CONTACT STATE
"RTN","IBTRHLI2",340,0)
 .S IBFDA(FLD,LEV,5.04)=$P($G(IBSEG(3)),HLCMP,5) ;CONTACT ZIP
"RTN","IBTRHLI2",341,0)
 .S IBFDA(FLD,LEV,5.05)=$P($G(IBSEG(3)),HLCMP,6) ;CONTACT COUNTRY CODE
"RTN","IBTRHLI2",342,0)
 .S IBFDA(FLD,LEV,5.06)=$P($G(IBSEG(3)),HLCMP,8) ;CONTACT COUNTRY SUB-DIV
"RTN","IBTRHLI2",343,0)
 Q
"RTN","IBTRHLI2",344,0)
PRD1 ;
"RTN","IBTRHLI2",345,0)
 K ERROR
"RTN","IBTRHLI2",346,0)
 D UPDATE^DIE("E","IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",347,0)
 I $D(ERROR) D ERR("NM1 Loop 2010EA","2010EA") Q
"RTN","IBTRHLI2",348,0)
 S PEIEN=RIEN(2)
"RTN","IBTRHLI2",349,0)
 I $G(PTR) D
"RTN","IBTRHLI2",350,0)
 .K ERROR
"RTN","IBTRHLI2",351,0)
 .S IBFDA(FLD,PEIEN_","_RESIEN_",",.03)=PTR  ;PROVIDER EIN
"RTN","IBTRHLI2",352,0)
 .D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI2",353,0)
 .I $D(ERROR) D ERR("NM1 Loop 2010EA","2010EA")
"RTN","IBTRHLI2",354,0)
 Q
"RTN","IBTRHLI2",355,0)
PRD2 ;
"RTN","IBTRHLI2",356,0)
 K ERROR
"RTN","IBTRHLI2",357,0)
 D UPDATE^DIE("E","IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",358,0)
 I $D(ERROR) D ERR("NM1 Loop 2010FA","2010FA") Q
"RTN","IBTRHLI2",359,0)
 S SLPIEN=RIEN(3)
"RTN","IBTRHLI2",360,0)
 I $G(PTR) D
"RTN","IBTRHLI2",361,0)
 .K ERROR
"RTN","IBTRHLI2",362,0)
 .S IBFDA(FLD,SLPIEN_","_SLIEN_","_RESIEN_",",.03)=PTR  ;PROVIDER EIN
"RTN","IBTRHLI2",363,0)
 .D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI2",364,0)
 .I $D(ERROR) D ERR("NM1 Loop 2010FA","2010FA")
"RTN","IBTRHLI2",365,0)
 Q
"RTN","IBTRHLI2",366,0)
 ;
"RTN","IBTRHLI2",367,0)
UP(MSG,LOOP) ; perform database update
"RTN","IBTRHLI2",368,0)
 K ERROR
"RTN","IBTRHLI2",369,0)
 D UPDATE^DIE("E","IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",370,0)
 I $D(ERROR) D ERR("Problem loading "_MSG_" Loop "_LOOP_" segment data",LOOP)
"RTN","IBTRHLI2",371,0)
 Q
"RTN","IBTRHLI2",372,0)
 ;
"RTN","IBTRHLI2",373,0)
FPRD(PNP,NPI) ; obtain Variable Provider pointer
"RTN","IBTRHLI2",374,0)
 N SCRN,PTR
"RTN","IBTRHLI2",375,0)
 S SCRN=""
"RTN","IBTRHLI2",376,0)
 I $P(PNP,HLCMP,2)=2 D
"RTN","IBTRHLI2",377,0)
 .S PTR=$$FIND1^DIC(4,,"P",NPI,"ANPI",SCRN)
"RTN","IBTRHLI2",378,0)
 .S PTR=PTR_";DIC(4,"
"RTN","IBTRHLI2",379,0)
 I $P($G(IBSEG(1)),HLCMP,2)=1 D
"RTN","IBTRHLI2",380,0)
 .S PTR=$$FIND1^DIC(200,,"P",NPI,"ANPI",SCRN) I PTR S PTR=PTR_";VA(200,"
"RTN","IBTRHLI2",381,0)
 .I 'PTR S PTR=$$FIND1^DIC(355.93,,"P",NPI,"NPI",SCRN) I PTR S PTR=PTR_";IBA(355.93,"
"RTN","IBTRHLI2",382,0)
 Q PTR
"RTN","IBTRHLI2",383,0)
 ;
"RTN","IBTRHLI2",384,0)
ERR(MSG,LOOP) ;file error condition
"RTN","IBTRHLI2",385,0)
 N LEV,IBFDA,CT
"RTN","IBTRHLI2",386,0)
 I '$G(RESIEN) Q
"RTN","IBTRHLI2",387,0)
 S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI2",388,0)
 S CT=$O(^IBT(356.22,RESIEN,101,"A"),-1),CT=CT+1
"RTN","IBTRHLI2",389,0)
 S IBFDA(356.22101,LEV,.01)=CT
"RTN","IBTRHLI2",390,0)
 S IBFDA(356.22101,LEV,.02)=LOOP ;LOOP IDENTIFIER
"RTN","IBTRHLI2",391,0)
 S IBFDA(356.22101,LEV,1)=MSG_". "_$G(ERROR("DIERR",1,"TEXT",1)) ;ERROR TEXT
"RTN","IBTRHLI2",392,0)
 K ERROR
"RTN","IBTRHLI2",393,0)
 D UPDATE^DIE("E","IBFDA","RIEN","ERROR")
"RTN","IBTRHLI2",394,0)
 S STATUS="04"
"RTN","IBTRHLI2",395,0)
 ;I RESIEN S IBFDA(356.22,RESIEN_",",.08)="04" K ERROR D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI2",396,0)
 ;I REQIEN S IBFDA(356.22,REQIEN_",",.08)="04" K ERROR D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI2",397,0)
 Q
"RTN","IBTRHLI3")
0^20^B185121370^n/a
"RTN","IBTRHLI3",1,0)
IBTRHLI3 ;ALB/JWS - Receive and store 278 Response message ;05-JUN-2014
"RTN","IBTRHLI3",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLI3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLI3",4,0)
 ;
"RTN","IBTRHLI3",5,0)
 ;**Program Description**
"RTN","IBTRHLI3",6,0)
 ;  This pgm will process the indiv segments of the
"RTN","IBTRHLI3",7,0)
 ;  incoming 278 response msgs.
"RTN","IBTRHLI3",8,0)
 ;
"RTN","IBTRHLI3",9,0)
 ; * Each of these tags are called by IBTRHL2.
"RTN","IBTRHLI3",10,0)
 ; 
"RTN","IBTRHLI3",11,0)
 ;  This routine is based on IBCNEHL2 which was introduced with patch 300, and subsequently
"RTN","IBTRHLI3",12,0)
 ;  patched with patches 345, 416, and 438.
"RTN","IBTRHLI3",13,0)
 ;
"RTN","IBTRHLI3",14,0)
 ;  Variables
"RTN","IBTRHLI3",15,0)
 ;    SEG = HL7 Seg Name
"RTN","IBTRHLI3",16,0)
 ;    IBSEG = Array of the segment
"RTN","IBTRHLI3",17,0)
 ;
"RTN","IBTRHLI3",18,0)
 Q  ; No direct calls
"RTN","IBTRHLI3",19,0)
 ;
"RTN","IBTRHLI3",20,0)
ZTP(IBSEG,RESIEN,ERROR,SLIEN) ; Process ZTP Subscriber date seg (X12 DTP segs)
"RTN","IBTRHLI3",21,0)
 ;  Input:
"RTN","IBTRHLI3",22,0)
 ;  IBSEG,RESIEN,SLIEN
"RTN","IBTRHLI3",23,0)
 ;
"RTN","IBTRHLI3",24,0)
 ;  Output:
"RTN","IBTRHLI3",25,0)
 ;  ERROR
"RTN","IBTRHLI3",26,0)
 N FLD,LEV,IBFDA,RIEN,LEV1
"RTN","IBTRHLI3",27,0)
 I $G(IBSEG(4))="DTP 2000F" D  D UP^IBTRHLI2("DTP","2000F") Q
"RTN","IBTRHLI3",28,0)
 .D SLCHECK^IBTRHLI1
"RTN","IBTRHLI3",29,0)
 .I $G(IBSEG(2))=472 S IBFDA(356.2216,LEV1,.11)=$P($G(IBSEG(3)),HLCMP),IBFDA(356.2216,LEV1,.17)=$P($G(IBSEG(3)),HLCMP,2) Q  ;service date
"RTN","IBTRHLI3",30,0)
 .I $G(IBSEG(2))=102 S IBFDA(356.2216,LEV1,.12)=$P($G(IBSEG(3)),HLCMP) Q  ;cert issue date
"RTN","IBTRHLI3",31,0)
 .I $G(IBSEG(2))="036" S IBFDA(356.2216,LEV1,.13)=$P($G(IBSEG(3)),HLCMP) Q  ;cert expiration date
"RTN","IBTRHLI3",32,0)
 .I $G(IBSEG(2))="007" S IBFDA(356.2216,LEV1,.14)=$P($G(IBSEG(3)),HLCMP),IBFDA(356.2216,LEV1,.16)=$P($G(IBSEG(3)),HLCMP,2) Q  ;cert effective date
"RTN","IBTRHLI3",33,0)
 S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI3",34,0)
 I $G(IBSEG(2))=439 S FLD=2.18 G ZTP1 ;Accident Date
"RTN","IBTRHLI3",35,0)
 I $G(IBSEG(2))=484 S FLD=2.19 G ZTP1 ;Last Menstrual Period
"RTN","IBTRHLI3",36,0)
 I $G(IBSEG(2))="ABC" S FLD=2.2 G ZTP1 ;Estimated DOB
"RTN","IBTRHLI3",37,0)
 I $G(IBSEG(2))=431 S FLD=2.21 G ZTP1 ;Illness Date
"RTN","IBTRHLI3",38,0)
 I $G(IBSEG(2))="AAH"!($G(IBSEG(2)))=435 S FLD=".07" G ZTP1
"RTN","IBTRHLI3",39,0)
 I $G(IBSEG(2))="096" S FLD=2.22 G ZTP1  ;discharge date
"RTN","IBTRHLI3",40,0)
 I $G(IBSEG(2))=102 S FLD=2.23 G ZTP1 ;Cert Issue Date
"RTN","IBTRHLI3",41,0)
 I $G(IBSEG(2))="036" S FLD=2.24 G ZTP1 ;Cert Expiration Date
"RTN","IBTRHLI3",42,0)
 I $G(IBSEG(2))="007" S FLD=2.25,IBFDA(356.22,RESIEN_",",2.26)=$P($G(IBSEG(3)),HLCMP,2) G ZTP1 ;Cert Effective Date
"RTN","IBTRHLI3",43,0)
 Q
"RTN","IBTRHLI3",44,0)
ZTP1 ;
"RTN","IBTRHLI3",45,0)
 S IBFDA(356.22,RESIEN_",",FLD)=$P($G(IBSEG(3)),HLCMP)
"RTN","IBTRHLI3",46,0)
 D UP^IBTRHLI2("DTP","2000E")
"RTN","IBTRHLI3",47,0)
 Q
"RTN","IBTRHLI3",48,0)
 ;
"RTN","IBTRHLI3",49,0)
RXE(IBSEG,RESIEN,ERROR) ;RXE Pharmacy/Treatment Encoded Order seg
"RTN","IBTRHLI3",50,0)
 ;  Input:
"RTN","IBTRHLI3",51,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI3",52,0)
 ;
"RTN","IBTRHLI3",53,0)
 ;  Output:
"RTN","IBTRHLI3",54,0)
 ;  ERROR
"RTN","IBTRHLI3",55,0)
 N LEV,IBFDA,RIEN
"RTN","IBTRHLI3",56,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI3",57,0)
 S IBFDA(356.22,LEV,8.01)=$P($P($G(IBSEG(14)),HLREP),HLCMP)   ;CR503 OXY EQUIP TYPE
"RTN","IBTRHLI3",58,0)
 S IBFDA(356.22,LEV,8.02)=$P($P($G(IBSEG(14)),HLREP,2),HLCMP) ;CR504 OXY EQUIP TYPE
"RTN","IBTRHLI3",59,0)
 S IBFDA(356.22,LEV,8.05)=$G(IBSEG(23))                       ;CR506 OXY FLOW RATE
"RTN","IBTRHLI3",60,0)
 S IBFDA(356.22,LEV,8.06)=$P($G(IBSEG(19)),HLCMP)             ;CR507 DAILY OXY USE CNT
"RTN","IBTRHLI3",61,0)
 S IBFDA(356.22,LEV,8.07)=$P($P($G(IBSEG(1)),HLCMP),HLSCMP)   ;CR508 OXY USE PERIOD HR CNT
"RTN","IBTRHLI3",62,0)
 S IBFDA(356.22,LEV,8.08)=$P($G(IBSEG(1)),HLCMP,8)            ;CR509 RESP THERAPIST TEXT
"RTN","IBTRHLI3",63,0)
 S IBFDA(356.22,LEV,9.07)=$G(IBSEG(16))                       ;CR516 PORT OXY SYS FLOW
"RTN","IBTRHLI3",64,0)
 S IBFDA(356.22,LEV,9.08)=$P($G(IBSEG(29)),HLCMP)             ;CR517 OXY DEL SYS CODE
"RTN","IBTRHLI3",65,0)
 S IBFDA(356.22,LEV,8.03)=$P($G(IBSEG(31)),HLCMP,1)           ;CR518 OXY EQUIP TYPE
"RTN","IBTRHLI3",66,0)
 D UP^IBTRHLI2("CR5","2000E")
"RTN","IBTRHLI3",67,0)
 Q
"RTN","IBTRHLI3",68,0)
ZHS(IBSEG,RESIEN,ERROR,SLIEN) ; ZHS Healthcare services delivery seg
"RTN","IBTRHLI3",69,0)
 ;  Input:
"RTN","IBTRHLI3",70,0)
 ;  IBSEG,RESIEN,SLIEN
"RTN","IBTRHLI3",71,0)
 ;
"RTN","IBTRHLI3",72,0)
 ;  Output:
"RTN","IBTRHLI3",73,0)
 ;  ERROR
"RTN","IBTRHLI3",74,0)
 N CT,LEV,IBFDA,RIEN
"RTN","IBTRHLI3",75,0)
 I $G(IBSEG(1))="HSD 2000F" D  D UP^IBTRHLI2("HSD","2000F") Q
"RTN","IBTRHLI3",76,0)
 .S LEV=SLIEN_","_RESIEN_","
"RTN","IBTRHLI3",77,0)
 .S IBFDA(356.2216,LEV,5.01)=$G(IBSEG(2)) ;HCSD Quantity Qualifier
"RTN","IBTRHLI3",78,0)
 .S IBFDA(356.2216,LEV,5.02)=$G(IBSEG(3)) ;HCSD Service Unit Count
"RTN","IBTRHLI3",79,0)
 .S IBFDA(356.2216,LEV,5.03)=$G(IBSEG(4)) ;HCSD Units of Measurement
"RTN","IBTRHLI3",80,0)
 .S IBFDA(356.2216,LEV,5.04)=$G(IBSEG(5)) ;HCSD Sample Selection Modulus
"RTN","IBTRHLI3",81,0)
 .S IBFDA(356.2216,LEV,5.05)=$G(IBSEG(6)) ;HCSD Time Period Qualifier
"RTN","IBTRHLI3",82,0)
 .S IBFDA(356.2216,LEV,5.06)=$G(IBSEG(7)) ;HCSD Period Count
"RTN","IBTRHLI3",83,0)
 .S IBFDA(356.2216,LEV,5.07)=$G(IBSEG(8)) ;HCSD Delivery Frequency
"RTN","IBTRHLI3",84,0)
 .S IBFDA(356.2216,LEV,5.08)=$G(IBSEG(9)) ;HCSD Delivery Time Pattern
"RTN","IBTRHLI3",85,0)
 .Q
"RTN","IBTRHLI3",86,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI3",87,0)
 S IBFDA(356.22,LEV,4.01)=$G(IBSEG(2))  ; quantity qualifier
"RTN","IBTRHLI3",88,0)
 S IBFDA(356.22,LEV,4.02)=$G(IBSEG(3)) ; unit count
"RTN","IBTRHLI3",89,0)
 S IBFDA(356.22,LEV,4.03)=$G(IBSEG(4))  ;measurement code
"RTN","IBTRHLI3",90,0)
 S IBFDA(356.22,LEV,4.04)=$G(IBSEG(5))  ;selection modulus
"RTN","IBTRHLI3",91,0)
 S IBFDA(356.22,LEV,4.05)=$G(IBSEG(6))  ;period qualifier
"RTN","IBTRHLI3",92,0)
 S IBFDA(356.22,LEV,4.06)=$G(IBSEG(7))  ;period count
"RTN","IBTRHLI3",93,0)
 S IBFDA(356.22,LEV,4.07)=$G(IBSEG(8))  ;freq code
"RTN","IBTRHLI3",94,0)
 S IBFDA(356.22,LEV,4.08)=$G(IBSEG(9))  ;pattern
"RTN","IBTRHLI3",95,0)
 D UP^IBTRHLI2("HSD","2000E")
"RTN","IBTRHLI3",96,0)
 Q
"RTN","IBTRHLI3",97,0)
 ;
"RTN","IBTRHLI3",98,0)
CTD(IBSEG,RESIEN,ERROR,PEIEN,SLIEN,SLPIEN) ; CTD Contact Data seg
"RTN","IBTRHLI3",99,0)
 ;  Input:
"RTN","IBTRHLI3",100,0)
 ;  IBSEG,RESIEN,PEIEN,SLIEN,SLPIEN
"RTN","IBTRHLI3",101,0)
 ;
"RTN","IBTRHLI3",102,0)
 ;  Output:
"RTN","IBTRHLI3",103,0)
 ;  ERROR
"RTN","IBTRHLI3",104,0)
 N RIEN,LEV
"RTN","IBTRHLI3",105,0)
 I $G(IBSEG(1))="PER 2010EB" D  D UP^IBTRHLI2("PER","2010EB") Q
"RTN","IBTRHLI3",106,0)
 .S LEV=PEIEN_","_RESIEN_","
"RTN","IBTRHLI3",107,0)
 .S IBFDA(356.2213,LEV,.04)="2010EB"
"RTN","IBTRHLI3",108,0)
 .S IBFDA(356.2213,LEV,.05)="IC"
"RTN","IBTRHLI3",109,0)
 .S IBFDA(356.2213,LEV,.06)=$P($G(IBSEG(2)),HLCMP)  ;CONTACT NAME
"RTN","IBTRHLI3",110,0)
 .S IBFDA(356.2213,LEV,.07)=$P($P($G(IBSEG(5)),HLREP),HLCMP,2)  ;COMM NO QUAL1
"RTN","IBTRHLI3",111,0)
 .S IBFDA(356.2213,LEV,.08)=$P($P($G(IBSEG(5)),HLREP,2),HLCMP,2) ;COMM NO QUAL2
"RTN","IBTRHLI3",112,0)
 .S IBFDA(356.2213,LEV,.09)=$P($P($G(IBSEG(5)),HLREP,3),HLCMP,2) ;COMM NO QUAL3
"RTN","IBTRHLI3",113,0)
 .S IBFDA(356.2213,LEV,1)=$P($P($G(IBSEG(5)),HLREP),HLCMP,8) ;CONTACT COMM NUM1
"RTN","IBTRHLI3",114,0)
 .S IBFDA(356.2213,LEV,2)=$P($P($G(IBSEG(5)),HLREP,2),HLCMP,8) ;CONTACT COMM NUM2
"RTN","IBTRHLI3",115,0)
 .S IBFDA(356.2213,LEV,3)=$P($P($G(IBSEG(5)),HLREP,3),HLCMP,8) ;CONTACT COMM NUM3
"RTN","IBTRHLI3",116,0)
 .Q
"RTN","IBTRHLI3",117,0)
 I $G(IBSEG(1))="PER 2010FB" D  D UP^IBTRHLI2("PER","2010FB") Q
"RTN","IBTRHLI3",118,0)
 .S LEV=SLPIEN_","_SLIEN_","_RESIEN_","
"RTN","IBTRHLI3",119,0)
 .S IBFDA(356.22168,LEV,.04)="2010FB"  ;PER loop identifier
"RTN","IBTRHLI3",120,0)
 .S IBFDA(356.22168,LEV,.05)="IC"      ;CONTACT FUNCTION CODE
"RTN","IBTRHLI3",121,0)
 .S IBFDA(356.22168,LEV,.06)=$P($G(IBSEG(2)),HLCMP)  ;CONTACT NAME
"RTN","IBTRHLI3",122,0)
 .S IBFDA(356.22168,LEV,.07)=$P($P($G(IBSEG(5)),HLREP),HLCMP,2)  ;COMM NO QUAL1
"RTN","IBTRHLI3",123,0)
 .S IBFDA(356.22168,LEV,.08)=$P($P($G(IBSEG(5)),HLREP,2),HLCMP,2) ;COMM NO QUAL2
"RTN","IBTRHLI3",124,0)
 .S IBFDA(356.22168,LEV,.09)=$P($P($G(IBSEG(5)),HLREP,3),HLCMP,2) ;COMM NO QUAL3
"RTN","IBTRHLI3",125,0)
 .S IBFDA(356.22168,LEV,1)=$P($P($G(IBSEG(5)),HLREP),HLCMP,8) ;CONTACT COMM NUM1
"RTN","IBTRHLI3",126,0)
 .S IBFDA(356.22168,LEV,2)=$P($P($G(IBSEG(5)),HLREP,2),HLCMP,8) ;CONTACT COMM NUM2
"RTN","IBTRHLI3",127,0)
 .S IBFDA(356.22168,LEV,3)=$P($P($G(IBSEG(5)),HLREP,3),HLCMP,8) ;CONTACT COMM NUM3
"RTN","IBTRHLI3",128,0)
 .Q
"RTN","IBTRHLI3",129,0)
 Q
"RTN","IBTRHLI3",130,0)
NK1(IBSEG,RESIEN,ERROR,PEIEN) ;NK1 Next of Kin seg
"RTN","IBTRHLI3",131,0)
 ;  Input:
"RTN","IBTRHLI3",132,0)
 ;  IBSEG,RESIEN,PEIEN
"RTN","IBTRHLI3",133,0)
 ;
"RTN","IBTRHLI3",134,0)
 ;  Output:
"RTN","IBTRHLI3",135,0)
 ;  ERROR
"RTN","IBTRHLI3",136,0)
 N LEV,IBFDA,RIEN
"RTN","IBTRHLI3",137,0)
 S LEV=PEIEN_","_RESIEN_","
"RTN","IBTRHLI3",138,0)
 S IBFDA(356.2213,LEV,4.01)="2010EB"  ;NM1 loop ident
"RTN","IBTRHLI3",139,0)
 S IBFDA(356.2213,LEV,4.02)="L5"      ;Entity ident
"RTN","IBTRHLI3",140,0)
 S IBFDA(356.2213,LEV,4.03)=$P($P($G(IBSEG(2)),HLCMP,9),HLSCMP)  ;Entity type qual
"RTN","IBTRHLI3",141,0)
 S IBFDA(356.2213,LEV,4.04)=$P($G(IBSEG(2)),HLCMP)   ;Contact last or company name
"RTN","IBTRHLI3",142,0)
 S IBFDA(356.2213,LEV,4.05)=$P($G(IBSEG(2)),HLCMP,2) ;contact first
"RTN","IBTRHLI3",143,0)
 S IBFDA(356.2213,LEV,4.06)=$P($G(IBSEG(2)),HLCMP,3) ;contact middle
"RTN","IBTRHLI3",144,0)
 S IBFDA(356.2213,LEV,4.07)=$P($G(IBSEG(2)),HLCMP,4) ;contact suffix
"RTN","IBTRHLI3",145,0)
 S IBFDA(356.2213,LEV,4.08)=$P($G(IBSEG(7)),HLCMP)   ;ident code qualifier
"RTN","IBTRHLI3",146,0)
 S IBFDA(356.2213,LEV,4.09)=$P($G(IBSEG(7)),HLCMP,2) ;ident code
"RTN","IBTRHLI3",147,0)
 S IBFDA(356.2213,LEV,5)=$P($G(IBSEG(4)),HLCMP)      ;contact addr line 1
"RTN","IBTRHLI3",148,0)
 S IBFDA(356.2213,LEV,5.01)=$P($G(IBSEG(4)),HLCMP,2) ;contact addr line 2
"RTN","IBTRHLI3",149,0)
 S IBFDA(356.2213,LEV,5.02)=$P($G(IBSEG(4)),HLCMP,3) ;contact city 
"RTN","IBTRHLI3",150,0)
 S IBFDA(356.2213,LEV,5.03)=$P($G(IBSEG(4)),HLCMP,4) ;contact state
"RTN","IBTRHLI3",151,0)
 S IBFDA(356.2213,LEV,5.04)=$P($G(IBSEG(4)),HLCMP,5) ;contact zip
"RTN","IBTRHLI3",152,0)
 S IBFDA(356.2213,LEV,5.05)=$P($G(IBSEG(4)),HLCMP,6) ;contact country
"RTN","IBTRHLI3",153,0)
 S IBFDA(356.2213,LEV,5.06)=$P($G(IBSEG(4)),HLCMP,8) ;contact country subdivision
"RTN","IBTRHLI3",154,0)
 D UP^IBTRHLI2("NM1","2010EB")
"RTN","IBTRHLI3",155,0)
 Q
"RTN","IBTRHLI3",156,0)
 ;
"RTN","IBTRHLI3",157,0)
PSL(IBSEG,RESIEN,ERROR,SLIEN) ;PSL Product/Service Line Item seg
"RTN","IBTRHLI3",158,0)
 ;  Input:
"RTN","IBTRHLI3",159,0)
 ;  IBSEG,RESIEN,SLIEN
"RTN","IBTRHLI3",160,0)
 ;
"RTN","IBTRHLI3",161,0)
 ;  Output:
"RTN","IBTRHLI3",162,0)
 ;  ERROR
"RTN","IBTRHLI3",163,0)
 N LEV,IBFDA,CT,RIEN,LEV1
"RTN","IBTRHLI3",164,0)
 I $G(IBSEG(1))="SV1 2000F" D  D UP^IBTRHLI2("SV1","2000F"),PSL2("P") Q
"RTN","IBTRHLI3",165,0)
 .D SLCHECK^IBTRHLI1,PSL3("P")
"RTN","IBTRHLI3",166,0)
 .S IBFDA(356.2216,LEV1,1.01)=$P($G(IBSEG(7)),HLCMP)   ;SV101-1
"RTN","IBTRHLI3",167,0)
 .S IBFDA(356.2216,LEV1,1.04)=$P($G(IBSEG(8)),HLCMP)   ;SV101-3
"RTN","IBTRHLI3",168,0)
 .S IBFDA(356.2216,LEV1,1.05)=$P($G(IBSEG(8)),HLCMP,2) ;SV101-4
"RTN","IBTRHLI3",169,0)
 .S IBFDA(356.2216,LEV1,1.06)=$P($G(IBSEG(8)),HLCMP,4) ;SV101-5
"RTN","IBTRHLI3",170,0)
 .S IBFDA(356.2216,LEV1,1.07)=$P($G(IBSEG(8)),HLCMP,5) ;SV101-6
"RTN","IBTRHLI3",171,0)
 .S IBFDA(356.2216,LEV1,1.08)=$G(IBSEG(9))             ;SV101-7
"RTN","IBTRHLI3",172,0)
 .;S IBFDA(356.2216,LEV1,1.03)=$P($G(IBSEG(7)),HLCMP,5) ;SV101-8
"RTN","IBTRHLI3",173,0)
 .S IBFDA(356.2216,LEV1,1.09)=$G(IBSEG(15))            ;SV102
"RTN","IBTRHLI3",174,0)
 .;S IBFDA(356.2216,LEV1,1.1)=$P($G(IBSEG(12)),HLCMP,2) ;SV103
"RTN","IBTRHLI3",175,0)
 .S IBFDA(356.2216,LEV1,1.11)=$P($G(IBSEG(12)),HLCMP)  ;SV104
"RTN","IBTRHLI3",176,0)
 .S IBFDA(356.2216,LEV1,2.05)=$G(IBSEG(47))            ;SV111
"RTN","IBTRHLI3",177,0)
 .S IBFDA(356.2216,LEV1,2.09)=$G(IBSEG(48))            ;SV120
"RTN","IBTRHLI3",178,0)
 .Q
"RTN","IBTRHLI3",179,0)
 I $G(IBSEG(1))="SV2 2000F" D  D UP^IBTRHLI2("SV2","2000F"),PSL2("I") Q
"RTN","IBTRHLI3",180,0)
 .D SLCHECK^IBTRHLI1,PSL3("I")
"RTN","IBTRHLI3",181,0)
 .S IBFDA(356.2216,LEV1,2.06)=$G(IBSEG(17))            ;SV201
"RTN","IBTRHLI3",182,0)
 .S IBFDA(356.2216,LEV1,1.01)=$P($G(IBSEG(7)),HLCMP)   ;SV202-1
"RTN","IBTRHLI3",183,0)
 .S IBFDA(356.2216,LEV1,1.04)=$P($G(IBSEG(8)),HLCMP)   ;SV202-3
"RTN","IBTRHLI3",184,0)
 .S IBFDA(356.2216,LEV1,1.05)=$P($G(IBSEG(8)),HLCMP,2) ;SV202-4
"RTN","IBTRHLI3",185,0)
 .S IBFDA(356.2216,LEV1,1.06)=$P($G(IBSEG(8)),HLCMP,4) ;SV202-5
"RTN","IBTRHLI3",186,0)
 .S IBFDA(356.2216,LEV1,1.07)=$P($G(IBSEG(8)),HLCMP,5) ;SV202-6
"RTN","IBTRHLI3",187,0)
 .S IBFDA(356.2216,LEV1,1.08)=$G(IBSEG(9))             ;SV202-7
"RTN","IBTRHLI3",188,0)
 .;S IBFDA(356.2216,LEV1,1.03)=$P($G(IBSEG(7)),HLCMP,5) ;SV202-8
"RTN","IBTRHLI3",189,0)
 .S IBFDA(356.2216,LEV1,1.09)=$G(IBSEG(15))            ;SV203
"RTN","IBTRHLI3",190,0)
 .S IBFDA(356.2216,LEV1,1.11)=$P($G(IBSEG(12)),HLCMP)  ;SV205
"RTN","IBTRHLI3",191,0)
 .S IBFDA(356.2216,LEV1,2.07)=$G(IBSEG(13))            ;SV206
"RTN","IBTRHLI3",192,0)
 .S IBFDA(356.2216,LEV1,2.09)=$G(IBSEG(48))            ;SV210
"RTN","IBTRHLI3",193,0)
 .Q
"RTN","IBTRHLI3",194,0)
 I $G(IBSEG(1))="SV3 2000F" D  D UP^IBTRHLI2("SV3","2000F"),PSL2("D") Q
"RTN","IBTRHLI3",195,0)
 .D SLCHECK^IBTRHLI1,PSL3("D")
"RTN","IBTRHLI3",196,0)
 .S IBFDA(356.2216,LEV1,1.01)=$P($G(IBSEG(7)),HLCMP)   ;SV301-1
"RTN","IBTRHLI3",197,0)
 .S IBFDA(356.2216,LEV1,1.04)=$P($G(IBSEG(8)),HLCMP)   ;SV301-3
"RTN","IBTRHLI3",198,0)
 .S IBFDA(356.2216,LEV1,1.05)=$P($G(IBSEG(8)),HLCMP,2) ;SV301-4
"RTN","IBTRHLI3",199,0)
 .S IBFDA(356.2216,LEV1,1.06)=$P($G(IBSEG(8)),HLCMP,4) ;SV301-5
"RTN","IBTRHLI3",200,0)
 .S IBFDA(356.2216,LEV1,1.07)=$P($G(IBSEG(8)),HLCMP,5) ;SV301-6
"RTN","IBTRHLI3",201,0)
 .S IBFDA(356.2216,LEV1,1.08)=$G(IBSEG(9))             ;SV301-7
"RTN","IBTRHLI3",202,0)
 .;S IBFDA(356.2216,LEV1,1.03)=$P($G(IBSEG(7)),HLCMP,5) ;SV301-8
"RTN","IBTRHLI3",203,0)
 .S IBFDA(356.2216,LEV1,1.09)=$G(IBSEG(15))            ;SV302
"RTN","IBTRHLI3",204,0)
 .S IBFDA(356.2216,LEV1,1.11)=$P($G(IBSEG(12)),HLCMP) ;SV306
"RTN","IBTRHLI3",205,0)
 .S IBFDA(356.2216,LEV1,3.06)=$G(IBSEG(17))            ;SV305
"RTN","IBTRHLI3",206,0)
 .S IBFDA(356.2216,LEV1,3.01)=$P($G(IBSEG(33)),HLCMP)  ;SV304-1
"RTN","IBTRHLI3",207,0)
 .S IBFDA(356.2216,LEV1,3.02)=$P($G(IBSEG(33)),HLCMP,2) ;SV304-2
"RTN","IBTRHLI3",208,0)
 .S IBFDA(356.2216,LEV1,3.03)=$P($G(IBSEG(33)),HLCMP,4) ;SV304-3
"RTN","IBTRHLI3",209,0)
 .S IBFDA(356.2216,LEV1,3.04)=$P($G(IBSEG(33)),HLCMP,5) ;SV304-4
"RTN","IBTRHLI3",210,0)
 .S IBFDA(356.2216,LEV1,3.05)=$P($G(IBSEG(33)),HLCMP,9) ;SV304-5
"RTN","IBTRHLI3",211,0)
 .Q
"RTN","IBTRHLI3",212,0)
 I $G(IBSEG(1))="TOO 2000F" D  D UP^IBTRHLI2("TOO","2000F") Q
"RTN","IBTRHLI3",213,0)
 .S LEV="+3,"_SLIEN_","_RESIEN_","
"RTN","IBTRHLI3",214,0)
 .S IBFDA(356.22164,LEV,.01)=$P($G(IBSEG(7)),HLCMP,2)  ;TOO02
"RTN","IBTRHLI3",215,0)
 .S IBFDA(356.22164,LEV,.02)=$P($G(IBSEG(33)),HLCMP)   ;TOO03-1
"RTN","IBTRHLI3",216,0)
 .S IBFDA(356.22164,LEV,.03)=$P($G(IBSEG(33)),HLCMP,2) ;TOO03-2
"RTN","IBTRHLI3",217,0)
 .S IBFDA(356.22164,LEV,.04)=$P($G(IBSEG(33)),HLCMP,4) ;TOO03-3
"RTN","IBTRHLI3",218,0)
 .S IBFDA(356.22164,LEV,.05)=$P($G(IBSEG(33)),HLCMP,5) ;TOO03-4
"RTN","IBTRHLI3",219,0)
 .S IBFDA(356.22164,LEV,.06)=$P($G(IBSEG(33)),HLCMP,9) ;TOO03-5
"RTN","IBTRHLI3",220,0)
 .Q
"RTN","IBTRHLI3",221,0)
 I $G(IBSEG(1))="PWK 2000F" D  D UP^IBTRHLI2("PWK","2000F") Q
"RTN","IBTRHLI3",222,0)
 .S LEV="+3,"_SLIEN_","_RESIEN_","
"RTN","IBTRHLI3",223,0)
 .S IBFDA(356.22166,LEV,.01)=$P($G(IBSEG(19)),HLCMP) ;PWK01
"RTN","IBTRHLI3",224,0)
 .S IBFDA(356.22166,LEV,.02)=$G(IBSEG(20))           ;PWK02
"RTN","IBTRHLI3",225,0)
 .S IBFDA(356.22166,LEV,.03)=$P($G(IBSEG(19)),HLCMP,2) ;PWK03
"RTN","IBTRHLI3",226,0)
 .S IBFDA(356.22166,LEV,.04)=$P($G(IBSEG(19)),HLCMP,3) ;PWK04
"RTN","IBTRHLI3",227,0)
 .Q
"RTN","IBTRHLI3",228,0)
 I $G(IBSEG(1))="PWK 2000E" D  D UP^IBTRHLI2("PWK","2000E") Q
"RTN","IBTRHLI3",229,0)
 .S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI3",230,0)
 .S CT=$O(^IBT(356.22,RESIEN,11,"A"),-1)+1
"RTN","IBTRHLI3",231,0)
 .S IBFDA(356.2211,LEV,.01)=$P($G(IBSEG(19)),HLCMP) ;RPT TYPE CODE
"RTN","IBTRHLI3",232,0)
 .S IBFDA(356.2211,LEV,.02)=$G(IBSEG(20))           ;RPT TRANS CODE
"RTN","IBTRHLI3",233,0)
 .S IBFDA(356.2211,LEV,.03)=$P($G(IBSEG(19)),HLCMP,2) ;ATTACHMENT CTL #
"RTN","IBTRHLI3",234,0)
 .S IBFDA(356.2211,LEV,.04)=$P($G(IBSEG(19)),HLCMP,3) ;ATTACHMENT DESC
"RTN","IBTRHLI3",235,0)
 Q
"RTN","IBTRHLI3",236,0)
PSL2(TYPE) ;
"RTN","IBTRHLI3",237,0)
 N PTR
"RTN","IBTRHLI3",238,0)
 I $D(ERROR) Q
"RTN","IBTRHLI3",239,0)
 ; I National Drug code type (5-4-2 format) set NDC Code #1
"RTN","IBTRHLI3",240,0)
 I $P($G(IBSEG(7)),HLCMP)="N4" D
"RTN","IBTRHLI3",241,0)
 .S IBFDA(356.2216,LEV1,12.01)=$P($G(IBSEG(7)),HLCMP,2)
"RTN","IBTRHLI3",242,0)
 S PTR=$$CODE($P($G(IBSEG(7)),HLCMP),$P($G(IBSEG(7)),HLCMP,2))
"RTN","IBTRHLI3",243,0)
 S IBFDA(356.2216,LEV1,1.02)=PTR   ;SV101-2, SV201-2, SV301-2
"RTN","IBTRHLI3",244,0)
 I TYPE'="D" S IBFDA(356.2216,LEV1,1.1)=$P($G(IBSEG(12)),HLCMP,2) ;SV103, SV204
"RTN","IBTRHLI3",245,0)
 K ERROR
"RTN","IBTRHLI3",246,0)
 D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI3",247,0)
 I $D(ERROR) D ERR^IBTRHLI2($P(IBSEG(1)," ")_" Loop "_$P(IBSEG(1)," ",2),$P(IBSEG(1)," ",2))
"RTN","IBTRHLI3",248,0)
 I $P($G(IBSEG(7)),HLCMP,5)="" Q
"RTN","IBTRHLI3",249,0)
 S PTR=$$CODE($P($G(IBSEG(7)),HLCMP),$P($G(IBSEG(7)),HLCMP,5))  ;SV101-8, SV202-8, SV301-8
"RTN","IBTRHLI3",250,0)
 S IBFDA(356.2216,LEV1,1.03)=PTR
"RTN","IBTRHLI3",251,0)
 ; I National Drug code type (5-4-2 format) set NDC Code #2
"RTN","IBTRHLI3",252,0)
 I $P($G(IBSEG(7)),HLCMP)="N4" S IBFDA(356.2216,LEV1,12.02)=$P($G(IBSEG(7)),HLCMP,5)
"RTN","IBTRHLI3",253,0)
 K ERROR
"RTN","IBTRHLI3",254,0)
 D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI3",255,0)
 I $D(ERROR) D ERR^IBTRHLI2($P(IBSEG(1)," ")_" Loop "_$P(IBSEG(1)," ",2),$P(IBSEG(1)," ",2))
"RTN","IBTRHLI3",256,0)
 Q
"RTN","IBTRHLI3",257,0)
 ;
"RTN","IBTRHLI3",258,0)
PSL3(TYPE) ;
"RTN","IBTRHLI3",259,0)
 ; this is being created here due to file SCREENing on field 356.2216, 1.01 needs 1.12 set 1st
"RTN","IBTRHLI3",260,0)
 K ERROR
"RTN","IBTRHLI3",261,0)
 S IBFDA(356.2216,LEV1,1.12)=TYPE  ;Set service line type
"RTN","IBTRHLI3",262,0)
 D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI3",263,0)
 I $D(ERROR) D ERR^IBTRHLI2($P(IBSEG(1)," ")_" Loop "_$P(IBSEG(1)," ",2),$P(IBSEG(1)," ",2))
"RTN","IBTRHLI3",264,0)
 Q
"RTN","IBTRHLI3",265,0)
 ;
"RTN","IBTRHLI3",266,0)
CODE(TYPE,CODE) ; obtain Variable Procedure Code pointer
"RTN","IBTRHLI3",267,0)
 I $G(RIEN(2)),RIEN(2)'=$G(SLIEN) S SLIEN=RIEN(2),LEV=SLIEN_","_RESIEN_","
"RTN","IBTRHLI3",268,0)
 N SCRN,PTR
"RTN","IBTRHLI3",269,0)
 S (PTR,SCRN)=""
"RTN","IBTRHLI3",270,0)
 I TYPE="HC"!(TYPE="AD") D
"RTN","IBTRHLI3",271,0)
 .S PTR=$$FIND1^DIC(81,,"P",CODE,"B",SCRN)
"RTN","IBTRHLI3",272,0)
 .I PTR S PTR=PTR_";ICPT("
"RTN","IBTRHLI3",273,0)
 I TYPE="ID"!(PTR="ZZ") D
"RTN","IBTRHLI3",274,0)
 .S PTR=$$FIND1^DIC(80.1,,"P",CODE,"AB",SCRN)
"RTN","IBTRHLI3",275,0)
 .I PTR S PTR=PTR_";ICD0("
"RTN","IBTRHLI3",276,0)
 Q PTR
"RTN","IBTRHLI3",277,0)
 ;
"RTN","IBTRHLI3",278,0)
NTE(IBSEG,RESIEN,ERROR) ;NTE Notes seg
"RTN","IBTRHLI3",279,0)
 ;  Input:
"RTN","IBTRHLI3",280,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI3",281,0)
 ;
"RTN","IBTRHLI3",282,0)
 ;  Output:
"RTN","IBTRHLI3",283,0)
 ;  ERROR
"RTN","IBTRHLI3",284,0)
 N LEV,IBFDA,RIEN
"RTN","IBTRHLI3",285,0)
 I $G(IBSEG(4))="MSG 2000E" D  Q
"RTN","IBTRHLI3",286,0)
 .S LEV=RESIEN_","
"RTN","IBTRHLI3",287,0)
 .S IBFDA(1)=$G(IBSEG(3))
"RTN","IBTRHLI3",288,0)
 .D WP^DIE(356.22,LEV,12,"","IBFDA","ERROR")
"RTN","IBTRHLI3",289,0)
 .I $D(ERROR) D ERR^IBTRHLI2("Problem loading MSG Loop 2000E segment data","2000E")
"RTN","IBTRHLI3",290,0)
 .Q
"RTN","IBTRHLI3",291,0)
 I $G(IBSEG(4))="MSG 2000F" D  Q
"RTN","IBTRHLI3",292,0)
 .S LEV=SLIEN_","_RESIEN_","
"RTN","IBTRHLI3",293,0)
 .S IBFDA(1)=$G(IBSEG(3))
"RTN","IBTRHLI3",294,0)
 .D WP^DIE(356.2216,LEV,7,"","IBFDA","ERROR")
"RTN","IBTRHLI3",295,0)
 .I $D(ERROR) D ERR^IBTRHLI2("Problem loading MSG Loop 2000F segment data","2000F")
"RTN","IBTRHLI3",296,0)
 .Q
"RTN","IBTRHLI3",297,0)
 Q
"RTN","IBTRHLI3",298,0)
  ;
"RTN","IBTRHLI3",299,0)
DG1(IBSEG,RESIEN,ERROR,SLIEN) ;
"RTN","IBTRHLI3",300,0)
 ;  Input:
"RTN","IBTRHLI3",301,0)
 ;  IBSEG,RESIEN,SLIEN
"RTN","IBTRHLI3",302,0)
 ;
"RTN","IBTRHLI3",303,0)
 ;  Output:
"RTN","IBTRHLI3",304,0)
 ;  ERROR
"RTN","IBTRHLI3",305,0)
 N CT,LEV,IBFDA,RIEN,LEV1,LEV2,PTR
"RTN","IBTRHLI3",306,0)
 I $G(IBSEG(11))="HI 2000F" D  Q
"RTN","IBTRHLI3",307,0)
 .D SLCHECK^IBTRHLI1
"RTN","IBTRHLI3",308,0)
 .S LEV="+3,"_SLIEN_","_RESIEN_","
"RTN","IBTRHLI3",309,0)
 .S IBFDA(356.2316,LEV,.01)=$G(IBSEG(1)) ;HI sequence
"RTN","IBTRHLI3",310,0)
 .S IBFDA(356.2316,LEV,.02)=$G(IBSEG(17)) ;Code list qualifier
"RTN","IBTRHLI3",311,0)
 .D UP^IBTRHLI2("HI","2000F")
"RTN","IBTRHLI3",312,0)
 .I '$G(RIEN(3)) Q
"RTN","IBTRHLI3",313,0)
 .S LEV2=RIEN(3)_","_RESIEN_","
"RTN","IBTRHLI3",314,0)
 .S PTR=$$CODE1($G(IBSEG(17)),$P($G(IBSEG(3)),HLCMP))
"RTN","IBTRHLI3",315,0)
 .S IBFDA(356.2316,LEV2,.03)=PTR ;Code
"RTN","IBTRHLI3",316,0)
 .K ERROR
"RTN","IBTRHLI3",317,0)
 .D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI3",318,0)
 .I $D(ERROR) D ERR^IBTRHLI2("HI Loop 2000F","2000F") Q
"RTN","IBTRHLI3",319,0)
 .Q
"RTN","IBTRHLI3",320,0)
 S LEV="+2,"_RESIEN_","
"RTN","IBTRHLI3",321,0)
 S IBFDA(356.223,LEV,.01)=$G(IBSEG(17)) ;Code list qualifier
"RTN","IBTRHLI3",322,0)
 S IBFDA(356.223,LEV,.03)=$G(IBSEG(5)) ;Date
"RTN","IBTRHLI3",323,0)
 D UP^IBTRHLI2("HI","2000E")
"RTN","IBTRHLI3",324,0)
 S LEV2=RIEN(2)_","_RESIEN_","
"RTN","IBTRHLI3",325,0)
 S PTR=$$CODE1($G(IBSEG(17)),$P($G(IBSEG(3)),HLCMP))
"RTN","IBTRHLI3",326,0)
 S IBFDA(356.223,LEV2,.02)=PTR ;Code
"RTN","IBTRHLI3",327,0)
 K ERROR
"RTN","IBTRHLI3",328,0)
 D FILE^DIE("","IBFDA","ERROR")
"RTN","IBTRHLI3",329,0)
 I $D(ERROR) D ERR^IBTRHLI2("HI Loop 2000E","2000E") Q
"RTN","IBTRHLI3",330,0)
 Q
"RTN","IBTRHLI3",331,0)
CODE1(TYPE,CODE) ; obtain Variable Procedure Code pointer
"RTN","IBTRHLI3",332,0)
 N SCRN,PTR
"RTN","IBTRHLI3",333,0)
 S (PTR,SCRN)=""
"RTN","IBTRHLI3",334,0)
 I TYPE="DR" D
"RTN","IBTRHLI3",335,0)
 .S PTR=$$FIND1^DIC(80.2,,"P",CODE,"B",SCRN)
"RTN","IBTRHLI3",336,0)
 .I PTR S PTR=PTR_";ICD("
"RTN","IBTRHLI3",337,0)
 I TYPE="LOI" D
"RTN","IBTRHLI3",338,0)
 .S CODE=$P(CODE,"-")
"RTN","IBTRHLI3",339,0)
 .S PTR=$$FIND1^DIC(95.3,,"P",CODE,"B",SCRN)
"RTN","IBTRHLI3",340,0)
 E  D
"RTN","IBTRHLI3",341,0)
 .S CODE=$E(CODE,1,3)_"."_$E(CODE,4,99)  ;1/31/15 decimals stripped for transmitting
"RTN","IBTRHLI3",342,0)
 .S PTR=$$FIND1^DIC(80,,"P",CODE,"AB",SCRN)
"RTN","IBTRHLI3",343,0)
 .I PTR S PTR=PTR_";ICD9(" Q
"RTN","IBTRHLI3",344,0)
 .; IF xxx.xx is not found, try xxxx.xx if 1st char = 'E'
"RTN","IBTRHLI3",345,0)
 .I $E(CODE)'="E" Q
"RTN","IBTRHLI3",346,0)
 .S CODE=$E(CODE,1,4)_"."_$E(CODE,5,99)  ; 2/5/15 there are some 4 char 1st dec half of ICD9 codes
"RTN","IBTRHLI3",347,0)
 .S PTR=$$FIND1^DIC(80,,"P",CODE,"AB",SCRN)
"RTN","IBTRHLI3",348,0)
 .I PTR S PTR=PTR_";ICD9(" Q
"RTN","IBTRHLI3",349,0)
 Q PTR
"RTN","IBTRHLI3",350,0)
 ;
"RTN","IBTRHLI3",351,0)
RXA(IBSEG,RESIEN,ERROR) ;RXA Pharmacy/Treatment Admin seg
"RTN","IBTRHLI3",352,0)
 ;  Input:
"RTN","IBTRHLI3",353,0)
 ;  IBSEG,RESIEN
"RTN","IBTRHLI3",354,0)
 ;
"RTN","IBTRHLI3",355,0)
 ;  Output:
"RTN","IBTRHLI3",356,0)
 ;  ERROR 
"RTN","IBTRHLI3",357,0)
 N LEV,IBFDA,RIEN
"RTN","IBTRHLI3",358,0)
 S LEV=RESIEN_","
"RTN","IBTRHLI3",359,0)
 S IBFDA(356.22,LEV,7.05)=$G(IBSEG(1)) ;TREATMENT SERIES #
"RTN","IBTRHLI3",360,0)
 S IBFDA(356.22,LEV,7.06)=$G(IBSEG(2)) ;TREATMENT COUNT
"RTN","IBTRHLI3",361,0)
 S IBFDA(356.22,LEV,7.07)=$P($G(IBSEG(9)),HLREP) ;SUBLUXATION LEVEL CODE#1
"RTN","IBTRHLI3",362,0)
 S IBFDA(356.22,LEV,7.08)=$P($G(IBSEG(9)),HLREP,2) ;SUBLUXATION LEVEL CODE#2
"RTN","IBTRHLI3",363,0)
 D UP^IBTRHLI2("CR2","2000E")
"RTN","IBTRHLI3",364,0)
 Q
"RTN","IBTRHLI3",365,0)
 ;
"RTN","IBTRHLI3",366,0)
FNDCT(DFN,EVNTDT,RESIEN) ; find matching CT entry in file 356
"RTN","IBTRHLI3",367,0)
 ; DFN - file 2 ien
"RTN","IBTRHLI3",368,0)
 ; EVNTDT - event date from 356.22/.07
"RTN","IBTRHLI3",369,0)
 ; RESIEN - ien of the response in file 356.22
"RTN","IBTRHLI3",370,0)
 ;
"RTN","IBTRHLI3",371,0)
 ; returns file 356 ien of matching ct entry or null if no match found
"RTN","IBTRHLI3",372,0)
 ;
"RTN","IBTRHLI3",373,0)
 N CTIEN,EDT,EVTYPE,INPAT,RES,STOPFLG
"RTN","IBTRHLI3",374,0)
 S RES=""
"RTN","IBTRHLI3",375,0)
 I +$G(DFN)>0,+$G(EVNTDT)>0,+$G(RESIEN)>0 D
"RTN","IBTRHLI3",376,0)
 .S EDT=$P(EVNTDT,"-")
"RTN","IBTRHLI3",377,0)
 .S INPAT=$S($P($G(^IBT(356.22,RESIEN,0)),U,4)="I":1,1:0)
"RTN","IBTRHLI3",378,0)
 .I INPAT S STOPFLG=0 F EVTYPE=1,5 D  Q:STOPFLG
"RTN","IBTRHLI3",379,0)
 ..S CTIEN=+$O(^IBT(356,"APTY",DFN,EVTYPE,EDT,"")) I CTIEN>0 S RES=CTIEN,STOPFLG=1
"RTN","IBTRHLI3",380,0)
 ..Q
"RTN","IBTRHLI3",381,0)
 .I 'INPAT S EVTYPE=2,CTIEN=+$O(^IBT(356,"APTY",DFN,EVTYPE,EDT,"")) S:CTIEN>0 RES=CTIEN
"RTN","IBTRHLI3",382,0)
 .Q
"RTN","IBTRHLI3",383,0)
 Q RES
"RTN","IBTRHLO")
0^6^B150899426^n/a
"RTN","IBTRHLO",1,0)
IBTRHLO ;ALB/YMG - Create and send 278 inquiry ;02-JUN-2014
"RTN","IBTRHLO",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLO",4,0)
 ;
"RTN","IBTRHLO",5,0)
 Q
"RTN","IBTRHLO",6,0)
 ;
"RTN","IBTRHLO",7,0)
EN(IBTRIEN,MSGTYPE) ; entry point
"RTN","IBTRHLO",8,0)
 ; IBTRIEN - ien in file 356.22
"RTN","IBTRHLO",9,0)
 ; MSGTYPE - 1 for 215, 0 or null for 217
"RTN","IBTRHLO",10,0)
 ;
"RTN","IBTRHLO",11,0)
 I +$G(IBTRIEN)'>0 Q  ; not a valid file 356.22 ien
"RTN","IBTRHLO",12,0)
 ;
"RTN","IBTRHLO",13,0)
 N CERT,DFN,ERRMSG,EVNT,HCT,HL,HLECH,HLFS,HLP,HLREP,HLRESLT,GNUM,IBTRHLP,IEN312,IEN36,IEN3553,INPAT,INSNODE0,INSNODE3,MSGOK
"RTN","IBTRHLO",14,0)
 N NODE0,NODE2,NODE4,NODE5,NODE6,NODE7,NODE8,NODE9,NODE10,NODE17,NODE18,NOWDT,PREL,REQCAT,SITEIEN
"RTN","IBTRHLO",15,0)
 ;
"RTN","IBTRHLO",16,0)
 S MSGTYPE=+$G(MSGTYPE)
"RTN","IBTRHLO",17,0)
 S ERRMSG=""
"RTN","IBTRHLO",18,0)
 S SITEIEN=$P($$SITE^VASITE(),U)
"RTN","IBTRHLO",19,0)
 I SITEIEN'>0 S ERRMSG="Invalid IEN for the site in file 4: "_SITEIEN D HLER^IBTRHLO2(IBTRIEN,ERRMSG) Q
"RTN","IBTRHLO",20,0)
 S NODE0=$G(^IBT(356.22,IBTRIEN,0))
"RTN","IBTRHLO",21,0)
 I NODE0="" S ERRMSG="Blank node 0 in file 356.22, IEN: "_IBTRIEN D HLER^IBTRHLO2(IBTRIEN,ERRMSG) Q
"RTN","IBTRHLO",22,0)
 I +$P(NODE0,U,13)>0,'MSGTYPE S ERRMSG="This is a response entry in file 356.22, IEN: "_IBTRIEN D HLER^IBTRHLO2(IBTRIEN,ERRMSG) Q
"RTN","IBTRHLO",23,0)
 S DFN=+$P(NODE0,U,2)
"RTN","IBTRHLO",24,0)
 I DFN'>0 S ERRMSG="Invalid pointer to file 2: "_DFN D HLER^IBTRHLO2(IBTRIEN,ERRMSG) Q
"RTN","IBTRHLO",25,0)
 S IEN312=+$P(NODE0,U,3)
"RTN","IBTRHLO",26,0)
 I IEN312'>0 S ERRMSG="Invalid pointer to sub-file 2.312: "_IEN312 D HLER^IBTRHLO2(IBTRIEN,ERRMSG) Q
"RTN","IBTRHLO",27,0)
 S INSNODE0=$G(^DPT(DFN,.312,IEN312,0)) ; 0-node in file 2.312
"RTN","IBTRHLO",28,0)
 S INSNODE3=$G(^DPT(DFN,.312,IEN312,3)) ; 3-node in file 2.312
"RTN","IBTRHLO",29,0)
 S IEN3553=+$P(INSNODE0,U,18) ; file 355.3 ien
"RTN","IBTRHLO",30,0)
 S IEN36=+$P(INSNODE0,U)
"RTN","IBTRHLO",31,0)
 I IEN36'>0 S ERRMSG="Invalid pointer to file 36: "_IEN36 D HLER^IBTRHLO2(IBTRIEN,ERRMSG) Q
"RTN","IBTRHLO",32,0)
 S GNUM=$S(IEN3553>0:$$GET1^DIQ(355.3,IEN3553_",",.04),1:"") ; group number
"RTN","IBTRHLO",33,0)
 S PREL=$P($G(^DPT(DFN,.312,IEN312,4)),U,3) ; pat. relationship to insured
"RTN","IBTRHLO",34,0)
 ;
"RTN","IBTRHLO",35,0)
 S NODE2=$G(^IBT(356.22,IBTRIEN,2))
"RTN","IBTRHLO",36,0)
 S NODE4=$G(^IBT(356.22,IBTRIEN,4))
"RTN","IBTRHLO",37,0)
 S NODE5=$G(^IBT(356.22,IBTRIEN,5))
"RTN","IBTRHLO",38,0)
 S NODE6=$G(^IBT(356.22,IBTRIEN,6))
"RTN","IBTRHLO",39,0)
 S NODE7=$G(^IBT(356.22,IBTRIEN,7))
"RTN","IBTRHLO",40,0)
 S NODE8=$G(^IBT(356.22,IBTRIEN,8))
"RTN","IBTRHLO",41,0)
 S NODE9=$G(^IBT(356.22,IBTRIEN,9))
"RTN","IBTRHLO",42,0)
 S NODE10=$G(^IBT(356.22,IBTRIEN,10))
"RTN","IBTRHLO",43,0)
 S NODE17=$G(^IBT(356.22,IBTRIEN,17))
"RTN","IBTRHLO",44,0)
 S NODE18=$G(^IBT(356.22,IBTRIEN,18))
"RTN","IBTRHLO",45,0)
 ;
"RTN","IBTRHLO",46,0)
 S REQCAT=$$GET1^DIQ(356.001,+$P(NODE2,U)_",",.01) ; request category
"RTN","IBTRHLO",47,0)
 S CERT=$$GET1^DIQ(356.002,+$P(NODE2,U,2)_",",.01) ; certification type code
"RTN","IBTRHLO",48,0)
 S INPAT=$S($P(NODE0,U,4)="I":1,1:0) ; 1 if inpatient, 0 if outpatient
"RTN","IBTRHLO",49,0)
 ;  Initialize HL7 variables
"RTN","IBTRHLO",50,0)
 K ^TMP("HLS",$J)
"RTN","IBTRHLO",51,0)
 S IBTRHLP="IBTR HCSR OUT"
"RTN","IBTRHLO",52,0)
 D INIT^HLFNC2(IBTRHLP,.HL) ; HL7 init
"RTN","IBTRHLO",53,0)
 S HLFS=HL("FS"),HLECH=$E(HL("ECH"),1),HLREP=$E(HL("ECH"),2),HL("SAF")=$P($$SITE^VASITE,U,2,3),HCT=0
"RTN","IBTRHLO",54,0)
 ; determine event reason code
"RTN","IBTRHLO",55,0)
 I 'MSGTYPE D
"RTN","IBTRHLO",56,0)
 .I REQCAT'="IN" S EVNT="13" Q  ; request category = "HS" (Health Services), "AR" (Admission), or "SC" (Specialty Care) -> event code = 13 (Request)
"RTN","IBTRHLO",57,0)
 .I CERT=3 S EVNT="01" Q  ; request category = "IN" (Individual) and certification type = 3 (Cancel) -> event code = 01 (Cancel)
"RTN","IBTRHLO",58,0)
 .S EVNT=36 ; request category = "IN" (Individual) and certification type '= 3 (other than Cancel) -> event code = 36 (Authority To Deduct)
"RTN","IBTRHLO",59,0)
 .Q
"RTN","IBTRHLO",60,0)
 I MSGTYPE S EVNT="28" ; always 28 for 215 message
"RTN","IBTRHLO",61,0)
 S NOWDT=$$NOW^XLFDT()
"RTN","IBTRHLO",62,0)
 S MSGOK=1
"RTN","IBTRHLO",63,0)
 D EVN
"RTN","IBTRHLO",64,0)
 D IN1 I 'MSGOK D HLER^IBTRHLO2(IBTRIEN,ERRMSG) G ENX  ; failed to create IN1 segment
"RTN","IBTRHLO",65,0)
 D PRD I 'MSGOK D HLER^IBTRHLO2(IBTRIEN,ERRMSG) G ENX  ; failed to create PRD segment
"RTN","IBTRHLO",66,0)
 D CTD,PRD2
"RTN","IBTRHLO",67,0)
 D GT1 I 'MSGOK D HLER^IBTRHLO2(IBTRIEN,ERRMSG) G ENX  ; failed to create GT1 segment
"RTN","IBTRHLO",68,0)
 D PID I 'MSGOK D HLER^IBTRHLO2(IBTRIEN,ERRMSG) G ENX  ; failed to create PID segment
"RTN","IBTRHLO",69,0)
 D G2RPRB,AUT^IBTRHLO1,ZTP,DG1
"RTN","IBTRHLO",70,0)
 I 'MSGTYPE D ZHS^IBTRHLO2,PV1,OBR^IBTRHLO1,G2ORXA^IBTRHLO1,RXE^IBTRHLO1,PRB^IBTRHLO1,PSL^IBTRHLO1,NTE^IBTRHLO2
"RTN","IBTRHLO",71,0)
 D G3OPRD^IBTRHLO1,G5OPRB^IBTRHLO1
"RTN","IBTRHLO",72,0)
 D GENERATE^HLMA(IBTRHLP,"GM",1,.HLRESLT,"",.HLP)
"RTN","IBTRHLO",73,0)
 ; If not successful
"RTN","IBTRHLO",74,0)
 I $P(HLRESLT,U,2)]"" D HLER^IBTRHLO2(IBTRIEN,$P(HLRESLT,U,2,99)) Q
"RTN","IBTRHLO",75,0)
 ; If successful
"RTN","IBTRHLO",76,0)
 D HLSC^IBTRHLO2(IBTRIEN,NOWDT,HLRESLT)
"RTN","IBTRHLO",77,0)
 ;
"RTN","IBTRHLO",78,0)
ENX ;
"RTN","IBTRHLO",79,0)
 K ^TMP("HLS",$J)
"RTN","IBTRHLO",80,0)
 Q
"RTN","IBTRHLO",81,0)
 ;
"RTN","IBTRHLO",82,0)
EVN ; create EVN segment
"RTN","IBTRHLO",83,0)
 N EVN
"RTN","IBTRHLO",84,0)
 S EVN="EVN"_HLFS_HLFS_$$HLDATE^HLFNC(NOWDT)_HLFS_HLFS_EVNT
"RTN","IBTRHLO",85,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=EVN
"RTN","IBTRHLO",86,0)
 Q
"RTN","IBTRHLO",87,0)
 ;
"RTN","IBTRHLO",88,0)
IN1 ; create IN1 segment
"RTN","IBTRHLO",89,0)
 N IDTYPE,IENS,IN1,INSNAME,PAYER,PAYID,PNODE0,RELINFO,TMP
"RTN","IBTRHLO",90,0)
 S PAYID="",IENS=IEN36_","
"RTN","IBTRHLO",91,0)
 S INSNAME=$$GET1^DIQ(36,IENS,.01)
"RTN","IBTRHLO",92,0)
 S PAYER=+$$GET1^DIQ(36,IENS,3.1,"I") ; file 365.12 ien
"RTN","IBTRHLO",93,0)
 I PAYER'>0 S MSGOK=0,ERRMSG="Unable to create IN1 segment - insurance company "_INSNAME_" is not linked to a payer" Q
"RTN","IBTRHLO",94,0)
 ; get payer id from file 36
"RTN","IBTRHLO",95,0)
 S IDTYPE="PI",PAYID=$$GET1^DIQ(36,IENS,7.01)
"RTN","IBTRHLO",96,0)
 ; if no id in file 36, try to get VA national id
"RTN","IBTRHLO",97,0)
 I PAYID="" S PNODE0=$G(^IBE(365.12,PAYER,0)),PAYID=$P(PNODE0,U,2) ; VA national id
"RTN","IBTRHLO",98,0)
 ; if no VA national id either, try to get CMS national id
"RTN","IBTRHLO",99,0)
 I PAYID="" S PAYID=$P(PNODE0,U,3),IDTYPE="XV"
"RTN","IBTRHLO",100,0)
 ; if still no id, bail out
"RTN","IBTRHLO",101,0)
 I PAYID="" S MSGOK=0,ERRMSG="Unable to create IN1 segment - missing payer ID" Q
"RTN","IBTRHLO",102,0)
 S RELINFO=$P(NODE2,U,16)
"RTN","IBTRHLO",103,0)
 S TMP=$$ENCHL7^IBCNEHLQ(INSNAME)
"RTN","IBTRHLO",104,0)
 ; get HPID, relies on patch IB*2.0*519
"RTN","IBTRHLO",105,0)
 S $P(TMP,HLECH,3)=$$HPD^IBCNHUT1(IEN36)
"RTN","IBTRHLO",106,0)
 S IN1="IN1"_HLFS_"1"_HLFS_"PLAN ID"_HLFS_$$ENCHL7^IBCNEHLQ(PAYID)_HLECH_HLECH_HLECH_HLECH_IDTYPE_HLFS_TMP
"RTN","IBTRHLO",107,0)
 S $P(IN1,HLFS,28)=RELINFO
"RTN","IBTRHLO",108,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=IN1
"RTN","IBTRHLO",109,0)
 Q
"RTN","IBTRHLO",110,0)
 ;
"RTN","IBTRHLO",111,0)
PRD ; create PRD segment (X12: NM1, 2010B)
"RTN","IBTRHLO",112,0)
 N ADDR1,ADDR2,PRD,REQDATA
"RTN","IBTRHLO",113,0)
 S REQDATA=$$PRVDATA^IBTRHLO2(SITEIEN,4)
"RTN","IBTRHLO",114,0)
 I $TR(REQDATA,U)="" S MSGOK=0,ERRMSG="Unable to create prd segment - missing name/address data in INSTITUTION file." Q
"RTN","IBTRHLO",115,0)
 S ADDR1=$P(REQDATA,U,2,3),ADDR2=$P(REQDATA,U,4,6)
"RTN","IBTRHLO",116,0)
 S PRD="PRD"_HLFS_HLECH_HLECH_HLECH_"NM1 2010B"_HLFS_$$ENCHL7^IBCNEHLQ($P(REQDATA,U))
"RTN","IBTRHLO",117,0)
 S PRD=PRD_HLFS_$$ENCHL7^IBCNEHLQ($P($$HLADDR^HLFNC(ADDR1,ADDR2),HLECH,1,5))
"RTN","IBTRHLO",118,0)
 S $P(PRD,HLFS,8)=$$ENCHL7^IBCNEHLQ($P(REQDATA,U,7))
"RTN","IBTRHLO",119,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO",120,0)
 Q
"RTN","IBTRHLO",121,0)
 ;
"RTN","IBTRHLO",122,0)
CTD ; create CTD segment
"RTN","IBTRHLO",123,0)
 N CTD,COMMSTR,IEN200,NAME,NODE19,QUAL,TMP,VALUE,Z
"RTN","IBTRHLO",124,0)
 S IEN200=+$P(NODE0,U,11) I IEN200'>0 Q
"RTN","IBTRHLO",125,0)
 S NAME=$$GET1^DIQ(200,IEN200_",",.01) I NAME="" Q
"RTN","IBTRHLO",126,0)
 S NODE19=$G(^IBT(356.22,IBTRIEN,19))
"RTN","IBTRHLO",127,0)
 S COMMSTR="" F Z="20^2^19.01","21^3^19.02","22^4^19.03" D
"RTN","IBTRHLO",128,0)
 .S QUAL=$P(NODE19,U,$P(Z,U,2)) I QUAL="" Q
"RTN","IBTRHLO",129,0)
 .S QUAL=$$EXTERNAL^DILFD(356.22,$P(Z,U,3),,QUAL)
"RTN","IBTRHLO",130,0)
 .S VALUE=$G(^IBT(356.22,IBTRIEN,$P(Z,U))) I VALUE="" Q
"RTN","IBTRHLO",131,0)
 .I "^FX^HP^TE^WP^"[(U_QUAL_U) S VALUE=$$NOPUNCT^IBCEF(VALUE,1) ; strip punctuation if phone #
"RTN","IBTRHLO",132,0)
 .S $P(TMP,HLECH,2)=QUAL,$P(TMP,HLECH,8)=$$ENCHL7^IBCNEHLQ(VALUE)
"RTN","IBTRHLO",133,0)
 .S COMMSTR=$S(COMMSTR="":TMP,1:COMMSTR_HLREP_TMP)
"RTN","IBTRHLO",134,0)
 .Q
"RTN","IBTRHLO",135,0)
 S CTD="CTD"_HLFS_"PER 2010B"_HLFS_$$ENCHL7^IBCNEHLQ(NAME)
"RTN","IBTRHLO",136,0)
 S $P(CTD,HLFS,6)=COMMSTR
"RTN","IBTRHLO",137,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=CTD
"RTN","IBTRHLO",138,0)
 Q
"RTN","IBTRHLO",139,0)
 ;
"RTN","IBTRHLO",140,0)
PRD2 ; create PRD segment (X12: PRV, 2010B)
"RTN","IBTRHLO",141,0)
 N PRD,TXNM
"RTN","IBTRHLO",142,0)
 S TXNM=$P($$TAXORG^XUSTAX(SITEIEN),U) I TXNM="" Q
"RTN","IBTRHLO",143,0)
 S PRD="PRD"_HLFS_HLECH_HLECH_HLECH_"PRV 2010B"
"RTN","IBTRHLO",144,0)
 S $P(PRD,HLFS,8)=$$ENCHL7^IBCNEHLQ(TXNM)
"RTN","IBTRHLO",145,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO",146,0)
 Q
"RTN","IBTRHLO",147,0)
 ;
"RTN","IBTRHLO",148,0)
GT1 ; create GT1 segment
"RTN","IBTRHLO",149,0)
 N ADDR1,ADDR2,GT1,SID1,SID2,SIDSTR,NAME
"RTN","IBTRHLO",150,0)
 S SID1=$P(INSNODE0,U,2) I SID1=""  S MSGOK=0,ERRMSG="Unable to create GT1 segment - missing primary subscriber ID" Q
"RTN","IBTRHLO",151,0)
 S NAME=$P(INSNODE0,U,17) I NAME="" S MSGOK=0,ERRMSG="Unable to create GT1 segment - missing name of insured" Q
"RTN","IBTRHLO",152,0)
 S SID2=GNUM ; secondary subscriber id is a group number
"RTN","IBTRHLO",153,0)
 S SIDSTR=$$ENCHL7^IBCNEHLQ(SID1) I SID2'="" S SIDSTR=SIDSTR_HLREP_$$ENCHL7^IBCNEHLQ(SID2)_HLECH_HLECH_HLECH_HLECH_"6P"
"RTN","IBTRHLO",154,0)
 S GT1="GT1"_HLFS_"1"_HLFS_SIDSTR_HLFS_$$ENCHL7^IBCNEHLQ($$HLNAME^HLFNC(NAME))_HLFS_HLFS
"RTN","IBTRHLO",155,0)
 I 'MSGTYPE,$P(INSNODE3,U,6)'="",$P(INSNODE3,U,8)'="" D
"RTN","IBTRHLO",156,0)
 .S ADDR1=$P(INSNODE3,U,6,7),ADDR2=$P(INSNODE3,U,8,10)
"RTN","IBTRHLO",157,0)
 .S $P(GT1,HLFS,6)=$$ENCHL7^IBCNEHLQ($P($$HLADDR^HLFNC(ADDR1,ADDR2),HLECH,1,5)) ; subscriber address
"RTN","IBTRHLO",158,0)
 .Q
"RTN","IBTRHLO",159,0)
 S $P(GT1,HLFS,9)=$$HLDATE^HLFNC($P(INSNODE3,U)) ; subscriber dob
"RTN","IBTRHLO",160,0)
 I 'MSGTYPE S $P(GT1,HLFS,10)=$P(INSNODE3,U,12) ; subscriber sex
"RTN","IBTRHLO",161,0)
 I 'MSGTYPE,PREL'="18" S $P(GT1,HLFS,49)=$S(".01.19."[("."_PREL_"."):PREL,1:"G8") ; relationship to insured
"RTN","IBTRHLO",162,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=GT1
"RTN","IBTRHLO",163,0)
 Q
"RTN","IBTRHLO",164,0)
 ;
"RTN","IBTRHLO",165,0)
PID ; create PID segment
"RTN","IBTRHLO",166,0)
 N IDSTR,PID,TMP,VAFSTR
"RTN","IBTRHLO",167,0)
 I PREL="18" Q  ; patient relationship is "self"
"RTN","IBTRHLO",168,0)
 I GNUM="" S MSGOK=0,ERRMSG="Unable to create PID segment - missing group number" Q
"RTN","IBTRHLO",169,0)
 S VAFSTR="7,8,11,"
"RTN","IBTRHLO",170,0)
 S PID=$$EN^VAFHLPID(DFN,VAFSTR)
"RTN","IBTRHLO",171,0)
 S TMP=$P(PID,HLFS,12)
"RTN","IBTRHLO",172,0)
 I $P(TMP,HLECH,2)="""""" S $P(TMP,HLECH,2)="",$P(PID,HLFS,12)=TMP
"RTN","IBTRHLO",173,0)
 S IDSTR=$$ENCHL7^IBCNEHLQ(GNUM),$P(IDSTR,HLECH,4)="EJ"
"RTN","IBTRHLO",174,0)
 S $P(PID,HLFS,4)=IDSTR
"RTN","IBTRHLO",175,0)
 S $P(PID,HLFS,6)=$$ENCHL7^IBCNEHLQ($P(PID,HLFS,6))
"RTN","IBTRHLO",176,0)
 I MSGTYPE S $P(PID,HLFS,9)=""
"RTN","IBTRHLO",177,0)
 S $P(PID,HLFS,12)=$S('MSGTYPE:$$ENCHL7^IBCNEHLQ($P(PID,HLFS,12)),1:"")
"RTN","IBTRHLO",178,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=PID
"RTN","IBTRHLO",179,0)
 Q
"RTN","IBTRHLO",180,0)
 ;
"RTN","IBTRHLO",181,0)
G2RPRB ; create G2R.PRB segment (G2R segment group)
"RTN","IBTRHLO",182,0)
 N PRB,Z
"RTN","IBTRHLO",183,0)
 I CERT="" Q  ; missing certification type code
"RTN","IBTRHLO",184,0)
 S PRB="PRB"_HLFS_"CO"_HLFS_$$HLDATE^HLFNC(DT)_HLFS_CERT_HLFS_"1"_HLFS_"UM 2000E"
"RTN","IBTRHLO",185,0)
 S $P(PRB,HLFS,12)=REQCAT_HLREP_$$GET1^DIQ(365.013,+$P(NODE2,U,3)_",",.01)
"RTN","IBTRHLO",186,0)
 I 'MSGTYPE D
"RTN","IBTRHLO",187,0)
 .S $P(PRB,HLFS,11)=$P(NODE2,U,8)_HLECH_$P(NODE2,U,9)_HLECH_HLECH_$P(NODE2,U,10)
"RTN","IBTRHLO",188,0)
 .S $P(PRB,HLFS,15)=$$GET1^DIQ(356.003,+$P(NODE2,U,14)_",",.01)
"RTN","IBTRHLO",189,0)
 .S $P(PRB,HLFS,19)=$P(NODE2,U,13)
"RTN","IBTRHLO",190,0)
 .S Z=$$GET1^DIQ(356.004,+$P(NODE2,U,15)_",",.01)
"RTN","IBTRHLO",191,0)
 .S $P(Z,HLECH,5)=$$GET1^DIQ(356.005,+$P(NODE2,U,17)_",",.01)
"RTN","IBTRHLO",192,0)
 .S $P(PRB,HLFS,23)=Z
"RTN","IBTRHLO",193,0)
 .Q
"RTN","IBTRHLO",194,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRB
"RTN","IBTRHLO",195,0)
 D G2RPV1
"RTN","IBTRHLO",196,0)
 Q
"RTN","IBTRHLO",197,0)
 ;
"RTN","IBTRHLO",198,0)
G2RPV1 ; create G2R.PV1 segment (G2R segment group)
"RTN","IBTRHLO",199,0)
 N PV1,QUAL,Z
"RTN","IBTRHLO",200,0)
 S QUAL=$P(NODE2,U,4) I QUAL="" Q
"RTN","IBTRHLO",201,0)
 S Z=$S(QUAL="A":$P(NODE2,U,6)_$P(NODE2,U,7),1:$$GET1^DIQ(353.1,+$P(NODE2,U,5)_",",.01))
"RTN","IBTRHLO",202,0)
 S $P(Z,HLECH,6)=QUAL
"RTN","IBTRHLO",203,0)
 S PV1="PV1"_HLFS_HLFS_"U"_HLFS_Z
"RTN","IBTRHLO",204,0)
 I 'MSGTYPE D
"RTN","IBTRHLO",205,0)
 .S $P(PV1,HLFS,11)=$$GET1^DIQ(5,+$P(NODE2,U,11)_",",1)
"RTN","IBTRHLO",206,0)
 .S Z="",$P(Z,HLECH,9)=$$GET1^DIQ(779.004,+$P(NODE2,U,12)_",",.01)
"RTN","IBTRHLO",207,0)
 .S:$P(Z,HLECH,9)'="USA" $P(PV1,HLFS,12)=Z
"RTN","IBTRHLO",208,0)
 .Q
"RTN","IBTRHLO",209,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",210,0)
 Q
"RTN","IBTRHLO",211,0)
 ;
"RTN","IBTRHLO",212,0)
ZTP ; create ZTP segments
"RTN","IBTRHLO",213,0)
 N DATA,Z,Z1,ZTP
"RTN","IBTRHLO",214,0)
 S Z=$P(NODE0,U,7) I Z'="" D
"RTN","IBTRHLO",215,0)
 .S Z1="AAH" I INPAT,REQCAT="AR" S Z1="435"
"RTN","IBTRHLO",216,0)
 .S DATA(Z1)=$S(Z["-":$$HLDATE^HLFNC($P($P(Z,"-"),"."))_HLECH_$$HLDATE^HLFNC($P($P(Z,"-",2),".")),1:$$HLDATE^HLFNC($P(Z,"."))) ; admission / appointment date
"RTN","IBTRHLO",217,0)
 .Q
"RTN","IBTRHLO",218,0)
 S Z=$P(NODE2,U,18) I Z'="" S DATA("439")=$$HLDATE^HLFNC($P(Z,".")) ; accident date
"RTN","IBTRHLO",219,0)
 I 'MSGTYPE D
"RTN","IBTRHLO",220,0)
 .S Z=$P(NODE2,U,19) I Z'="" S DATA("484")=$$HLDATE^HLFNC($P(Z,".")) ; last menstrual period date
"RTN","IBTRHLO",221,0)
 .S Z=$P(NODE2,U,20) I Z'="" S DATA("ABC")=$$HLDATE^HLFNC(Z) ; estimated DOB
"RTN","IBTRHLO",222,0)
 .S Z=$P(NODE2,U,21) I Z'="" S DATA("431")=$$HLDATE^HLFNC(Z) ; illness date
"RTN","IBTRHLO",223,0)
 .Q
"RTN","IBTRHLO",224,0)
 ; the following date is for "Admission Review" request category only
"RTN","IBTRHLO",225,0)
 I INPAT,REQCAT="AR" S Z=$P(NODE2,U,22) S:Z'="" DATA("096")=$$HLDATE^HLFNC($P(Z,".")) ; discharge date
"RTN","IBTRHLO",226,0)
 ;
"RTN","IBTRHLO",227,0)
 S Z="" F  S Z=$O(DATA(Z)) Q:Z=""  D
"RTN","IBTRHLO",228,0)
 .S ZTP="ZTP"_HLFS_"1"_HLFS_Z_HLFS_DATA(Z)_HLFS_"DTP 2000E"
"RTN","IBTRHLO",229,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=ZTP
"RTN","IBTRHLO",230,0)
 .Q
"RTN","IBTRHLO",231,0)
 Q
"RTN","IBTRHLO",232,0)
 ;
"RTN","IBTRHLO",233,0)
DG1 ; create DG1 segments
"RTN","IBTRHLO",234,0)
 N DG1,DIAG,NODE0,SEQ,Z
"RTN","IBTRHLO",235,0)
 S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,3,Z)) Q:Z=""!(Z?1.A)  D
"RTN","IBTRHLO",236,0)
 .S NODE0=$G(^IBT(356.22,IBTRIEN,3,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.223
"RTN","IBTRHLO",237,0)
 .S SEQ=SEQ+1 I SEQ>12 Q  ; only allow up to 12 DG1 segments
"RTN","IBTRHLO",238,0)
 .I MSGTYPE,SEQ>1 Q  ; only allow 1 DG1 segment in 215 message
"RTN","IBTRHLO",239,0)
 .S DIAG=$TR($$EXTERNAL^DILFD(356.223,.02,,$P(NODE0,U,2)),".") I DIAG="" Q  ; invalid diagnosis code
"RTN","IBTRHLO",240,0)
 .S DG1="DG1"_HLFS_SEQ_HLFS_HLFS_$$ENCHL7^IBCNEHLQ(DIAG)_HLFS_HLFS_$S('MSGTYPE:$$HLDATE^HLFNC($P(NODE0,U,3)),1:"")_HLFS_"W"
"RTN","IBTRHLO",241,0)
 .S $P(DG1,HLFS,18)=$$GET1^DIQ(356.006,+$P(NODE0,U)_",",.01)
"RTN","IBTRHLO",242,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=DG1
"RTN","IBTRHLO",243,0)
 .Q
"RTN","IBTRHLO",244,0)
 Q
"RTN","IBTRHLO",245,0)
 ;
"RTN","IBTRHLO",246,0)
PV1 ; create PV1 segments
"RTN","IBTRHLO",247,0)
 N CNDSTR,PC,PV1,Z
"RTN","IBTRHLO",248,0)
 S PV1="PV1"_HLFS_HLFS_HLFS_"CRC 2000E",CNDSTR=""
"RTN","IBTRHLO",249,0)
 I +$P(NODE4,U,10) D  ; at least one ambulance cert. condition exists
"RTN","IBTRHLO",250,0)
 .S CNDSTR=$P(NODE4,U,9)
"RTN","IBTRHLO",251,0)
 .F PC=10:1:14 S Z=+$P(NODE4,U,PC) S:Z CNDSTR=CNDSTR_HLREP_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRHLO",252,0)
 .S $P(PV1,HLFS,3)="07"
"RTN","IBTRHLO",253,0)
 .S $P(PV1,HLFS,16)=CNDSTR
"RTN","IBTRHLO",254,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",255,0)
 .Q
"RTN","IBTRHLO",256,0)
 I +$P(NODE5,U,2) D  ; at least one chiropractic cert. condition exists
"RTN","IBTRHLO",257,0)
 .S CNDSTR=$P(NODE5,U)
"RTN","IBTRHLO",258,0)
 .F PC=2:1:6 S Z=+$P(NODE5,U,PC) S:Z CNDSTR=CNDSTR_HLREP_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRHLO",259,0)
 .S $P(PV1,HLFS,3)="08"
"RTN","IBTRHLO",260,0)
 .S $P(PV1,HLFS,16)=CNDSTR
"RTN","IBTRHLO",261,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",262,0)
 .Q
"RTN","IBTRHLO",263,0)
 I +$P(NODE5,U,8) D  ; at least one DME cert. condition exists
"RTN","IBTRHLO",264,0)
 .S CNDSTR=$P(NODE5,U,7)
"RTN","IBTRHLO",265,0)
 .F PC=8:1:12 S Z=+$P(NODE5,U,PC) S:Z CNDSTR=CNDSTR_HLREP_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRHLO",266,0)
 .S $P(PV1,HLFS,3)="09"
"RTN","IBTRHLO",267,0)
 .S $P(PV1,HLFS,16)=CNDSTR
"RTN","IBTRHLO",268,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",269,0)
 .Q
"RTN","IBTRHLO",270,0)
 I +$P(NODE5,U,14) D  ; at least one oxygen cert. condition exists
"RTN","IBTRHLO",271,0)
 .S CNDSTR=$P(NODE5,U,13)
"RTN","IBTRHLO",272,0)
 .F PC=14:1:18 S Z=+$P(NODE5,U,PC) S:Z CNDSTR=CNDSTR_HLREP_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRHLO",273,0)
 .S $P(PV1,HLFS,3)="11"
"RTN","IBTRHLO",274,0)
 .S $P(PV1,HLFS,16)=CNDSTR
"RTN","IBTRHLO",275,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",276,0)
 .Q
"RTN","IBTRHLO",277,0)
 I +$P(NODE6,U,2) D  ; at least one functional limit cert. condition exists
"RTN","IBTRHLO",278,0)
 .S CNDSTR=$P(NODE6,U)
"RTN","IBTRHLO",279,0)
 .F PC=2:1:6 S Z=+$P(NODE6,U,PC) S:Z CNDSTR=CNDSTR_HLREP_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRHLO",280,0)
 .S $P(PV1,HLFS,3)="75"
"RTN","IBTRHLO",281,0)
 .S $P(PV1,HLFS,16)=CNDSTR
"RTN","IBTRHLO",282,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",283,0)
 .Q
"RTN","IBTRHLO",284,0)
 I +$P(NODE6,U,8) D  ; at least one activities cert. condition exists
"RTN","IBTRHLO",285,0)
 .S CNDSTR=$P(NODE6,U,7)
"RTN","IBTRHLO",286,0)
 .F PC=8:1:12 S Z=+$P(NODE6,U,PC) S:Z CNDSTR=CNDSTR_HLREP_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRHLO",287,0)
 .S $P(PV1,HLFS,3)="76"
"RTN","IBTRHLO",288,0)
 .S $P(PV1,HLFS,16)=CNDSTR
"RTN","IBTRHLO",289,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",290,0)
 .Q
"RTN","IBTRHLO",291,0)
 I +$P(NODE6,U,14) D  ; at least one mental status cert. condition exists
"RTN","IBTRHLO",292,0)
 .S CNDSTR=$P(NODE6,U,13)
"RTN","IBTRHLO",293,0)
 .F PC=14:1:18 S Z=+$P(NODE6,U,PC) S:Z CNDSTR=CNDSTR_HLREP_$$GET1^DIQ(356.008,Z_",",.01)
"RTN","IBTRHLO",294,0)
 .S $P(PV1,HLFS,3)="77"
"RTN","IBTRHLO",295,0)
 .S $P(PV1,HLFS,16)=CNDSTR
"RTN","IBTRHLO",296,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",297,0)
 .Q
"RTN","IBTRHLO",298,0)
 I INPAT,$TR($P(NODE7,U,1,4),U)'="" D  ; inpatient, admission data exists
"RTN","IBTRHLO",299,0)
 .S PV1="PV1"_HLFS_HLFS_HLFS_"CL1 2000E"_HLFS_$P(NODE7,U)
"RTN","IBTRHLO",300,0)
 .S Z=+$P(NODE7,U,2) S:Z $P(PV1,HLFS,15)=$$GET1^DIQ(356.009,Z_",",.01)
"RTN","IBTRHLO",301,0)
 .S Z=+$P(NODE7,U,3) S:Z $P(PV1,HLFS,37)=$$GET1^DIQ(356.01,Z_",",.01)
"RTN","IBTRHLO",302,0)
 .S Z=+$P(NODE7,U,4) S:Z $P(PV1,HLFS,19)=$$GET1^DIQ(356.011,Z_",",.01)
"RTN","IBTRHLO",303,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PV1
"RTN","IBTRHLO",304,0)
 .Q
"RTN","IBTRHLO",305,0)
 Q
"RTN","IBTRHLO1")
0^5^B184271063^n/a
"RTN","IBTRHLO1",1,0)
IBTRHLO1 ;ALB/YMG - Create and send 278 inquiry cont. ;30 Apr 2015  12:29 PM
"RTN","IBTRHLO1",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLO1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLO1",4,0)
 ;
"RTN","IBTRHLO1",5,0)
 Q
"RTN","IBTRHLO1",6,0)
 ;
"RTN","IBTRHLO1",7,0)
AUT ; create AUT segment
"RTN","IBTRHLO1",8,0)
 N AUT,Z
"RTN","IBTRHLO1",9,0)
 S Z=""
"RTN","IBTRHLO1",10,0)
 I $P(NODE17,U)'="" S Z="REF 2000E"_HLECH_$P(NODE17,U),$P(Z,HLECH,5)="BB"
"RTN","IBTRHLO1",11,0)
 I Z="",$P(NODE17,U,2)'="" S Z="REF 2000E"_HLECH_$P(NODE17,U,2),$P(Z,HLECH,5)="NT"
"RTN","IBTRHLO1",12,0)
 I Z="" Q
"RTN","IBTRHLO1",13,0)
 S AUT="AUT"_HLFS_HLFS_Z
"RTN","IBTRHLO1",14,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=AUT
"RTN","IBTRHLO1",15,0)
 Q
"RTN","IBTRHLO1",16,0)
 ;
"RTN","IBTRHLO1",17,0)
G2ORXA ; create G2O.RXA segment (G2O segment group)
"RTN","IBTRHLO1",18,0)
 N RXA,SUBLSTR,TXNUM,TXCNT,Z
"RTN","IBTRHLO1",19,0)
 S TXNUM=$P(NODE7,U,5) I TXNUM="" Q  ; missing treatment series number
"RTN","IBTRHLO1",20,0)
 S TXCNT=$P(NODE7,U,6) I TXCNT="" Q  ; missing treatment count
"RTN","IBTRHLO1",21,0)
 S TXNUM=+TXNUM,TXCNT=+TXCNT,SUBLSTR=""
"RTN","IBTRHLO1",22,0)
 S Z=+$P(NODE7,U,7) I Z>0 S SUBLSTR=$$GET1^DIQ(356.012,Z_",",.01)
"RTN","IBTRHLO1",23,0)
 S Z=+$P(NODE7,U,8) I Z>0 S SUBLSTR=SUBLSTR_HLREP_$$GET1^DIQ(356.012,Z_",",.01)
"RTN","IBTRHLO1",24,0)
 S RXA="RXA"_HLFS_$$ENCHL7^IBCNEHLQ(TXNUM)_HLFS_$$ENCHL7^IBCNEHLQ(TXCNT)_HLFS_$$HLDATE^HLFNC(NOWDT)_HLFS_$$HLDATE^HLFNC(NOWDT)
"RTN","IBTRHLO1",25,0)
 S RXA=RXA_HLFS_"1"_HLFS_"0"_HLFS_HLFS_HLFS_SUBLSTR
"RTN","IBTRHLO1",26,0)
 S Z=$P(NODE7,U,10),$P(RXA,HLFS,20)=$P(NODE7,U,9)_$S(Z'="":HLREP_Z,1:"")
"RTN","IBTRHLO1",27,0)
 S $P(RXA,HLFS,21)=$P(NODE7,U,13)
"RTN","IBTRHLO1",28,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=RXA
"RTN","IBTRHLO1",29,0)
 D G2ONTE
"RTN","IBTRHLO1",30,0)
 Q
"RTN","IBTRHLO1",31,0)
 ;
"RTN","IBTRHLO1",32,0)
G2ONTE ; create G2O.NTE segments (G2O segment group)
"RTN","IBTRHLO1",33,0)
 N CMT,NTE,Z
"RTN","IBTRHLO1",34,0)
 F Z=11:1:12 S CMT=$P(NODE7,U,Z) I CMT'="" D
"RTN","IBTRHLO1",35,0)
 .S NTE="NTE"_HLFS_HLFS_HLFS_$$ENCHL7^IBCNEHLQ(CMT)_HLFS_"CR2 2000E"
"RTN","IBTRHLO1",36,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=NTE
"RTN","IBTRHLO1",37,0)
 .Q
"RTN","IBTRHLO1",38,0)
 Q
"RTN","IBTRHLO1",39,0)
 ;
"RTN","IBTRHLO1",40,0)
RXE ; create RXE segment
"RTN","IBTRHLO1",41,0)
 N BGAS,RXE,OXYTST,Z
"RTN","IBTRHLO1",42,0)
 S BGAS=+$P(NODE9,U) I 'BGAS Q  ; missing arterial blood gas quantity
"RTN","IBTRHLO1",43,0)
 S Z=$$ENCHL7^IBCNEHLQ($P(NODE8,U,7)),$P(Z,HLECH,8)=$$ENCHL7^IBCNEHLQ($P(NODE8,U,8))
"RTN","IBTRHLO1",44,0)
 S RXE="RXE"_HLFS_Z_HLFS_"1"_HLFS_$$ENCHL7^IBCNEHLQ(BGAS)_HLFS_HLFS_"1"_HLFS_HLFS_HLECH_$$ENCHL7^IBCNEHLQ($P(NODE8,U,4))
"RTN","IBTRHLO1",45,0)
 S $P(RXE,HLFS,11)=$$ENCHL7^IBCNEHLQ($P(NODE9,U,2))
"RTN","IBTRHLO1",46,0)
 S $P(RXE,HLFS,15)=$$GET1^DIQ(356.013,+$P(NODE8,U)_",",.01)_HLREP_$$GET1^DIQ(356.013,+$P(NODE8,U,2)_",",.01)
"RTN","IBTRHLO1",47,0)
 S $P(RXE,HLFS,17)=$$ENCHL7^IBCNEHLQ($P(NODE9,U,7))
"RTN","IBTRHLO1",48,0)
 S $P(RXE,HLFS,20)=$$ENCHL7^IBCNEHLQ($P(NODE8,U,6))
"RTN","IBTRHLO1",49,0)
 S $P(RXE,HLFS,24)=$$ENCHL7^IBCNEHLQ($P(NODE8,U,5))
"RTN","IBTRHLO1",50,0)
 S Z=+$P(NODE9,U,4) I Z>0 S OXYTST=$$GET1^DIQ(356.015,Z_",",.01)
"RTN","IBTRHLO1",51,0)
 S Z=+$P(NODE9,U,5) I Z>0 S OXYTST=$G(OXYTST)_HLREP_HLECH_HLECH_HLECH_$$GET1^DIQ(356.015,Z_",",.01)
"RTN","IBTRHLO1",52,0)
 S Z=+$P(NODE9,U,6) I Z>0 S OXYTST=$G(OXYTST)_HLREP_HLECH_HLECH_HLECH_$$GET1^DIQ(356.015,Z_",",.01)
"RTN","IBTRHLO1",53,0)
 S Z=$$GET1^DIQ(356.014,+$P(NODE9,U,3)_",",.01) I $G(OXYTST)'="" S $P(Z,HLECH,4)=OXYTST
"RTN","IBTRHLO1",54,0)
 S $P(RXE,HLFS,28)=Z
"RTN","IBTRHLO1",55,0)
 S $P(RXE,HLFS,30)=$$GET1^DIQ(356.016,+$P(NODE9,U,8)_",",.01)
"RTN","IBTRHLO1",56,0)
 S $P(RXE,HLFS,32)=$$GET1^DIQ(356.013,+$P(NODE8,U,3)_",",.01)
"RTN","IBTRHLO1",57,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=RXE
"RTN","IBTRHLO1",58,0)
 Q
"RTN","IBTRHLO1",59,0)
 ;
"RTN","IBTRHLO1",60,0)
PRB ; create PRB segment
"RTN","IBTRHLO1",61,0)
 N DATESTR,PRB,PROCSTR,Z
"RTN","IBTRHLO1",62,0)
 I $TR(NODE10,U)=""!(CERT="") Q
"RTN","IBTRHLO1",63,0)
 S PROCSTR=CERT
"RTN","IBTRHLO1",64,0)
 S Z=$P(NODE10,U,6) I Z'="" S $P(PROCSTR,HLECH,3)=Z
"RTN","IBTRHLO1",65,0)
 S Z=$P(NODE10,U,7) I Z'="" S $P(PROCSTR,HLECH,4)=$$EXTERNAL^DILFD(356.22,10.07,,Z)
"RTN","IBTRHLO1",66,0)
 S PRB="PRB"_HLFS_"UC"_HLFS_$$HLDATE^HLFNC(DT)_HLFS_PROCSTR_HLFS_"1"_HLFS_"CR6 2000E"_HLFS_HLFS_$$HLDATE^HLFNC($P(NODE10,U,8))
"RTN","IBTRHLO1",67,0)
 S PRB=PRB_HLFS_$$HLDATE^HLFNC($P(NODE10,U,5))_HLFS_$$HLDATE^HLFNC($P(NODE10,U,9))_HLFS_$$GET1^DIQ(356.017,+$P(NODE10,U,13)_",",.01)
"RTN","IBTRHLO1",68,0)
 S DATESTR="",Z=$P(NODE10,U,11) I Z'="" S DATESTR=HLECH_$$HLDATE^HLFNC(Z)
"RTN","IBTRHLO1",69,0)
 I DATESTR'="" S Z=$P(NODE10,U,12) S:Z'="" DATESTR=DATESTR_"-"_$$HLDATE^HLFNC(Z) S $P(PRB,HLFS,15)=DATESTR ; last admission date range
"RTN","IBTRHLO1",70,0)
 S $P(PRB,HLFS,16)=$$HLDATE^HLFNC($P(NODE10,U,10))
"RTN","IBTRHLO1",71,0)
 S $P(PRB,HLFS,17)=$$HLDATE^HLFNC($P(NODE10,U))
"RTN","IBTRHLO1",72,0)
 S DATESTR="",Z=$P(NODE10,U,2) I Z'="" S DATESTR=$$HLDATE^HLFNC(Z)
"RTN","IBTRHLO1",73,0)
 I DATESTR'="" S Z=$P(NODE10,U,3) S:Z'="" DATESTR=DATESTR_"-"_$$HLDATE^HLFNC(Z) S $P(PRB,HLFS,18)=DATESTR ; home health cert. date range
"RTN","IBTRHLO1",74,0)
 S $P(PRB,HLFS,23)=$$GET1^DIQ(356.004,+$P(NODE2,U,15)_",",.01)
"RTN","IBTRHLO1",75,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRB
"RTN","IBTRHLO1",76,0)
 Q
"RTN","IBTRHLO1",77,0)
 ;
"RTN","IBTRHLO1",78,0)
PSL ; create PSL segments
"RTN","IBTRHLO1",79,0)
 N NODE0,PSL,SEQ,Z,Z1
"RTN","IBTRHLO1",80,0)
 S SEQ=0,Z="" F  S Z=$O(^IBT(356.22,IBTRIEN,11,"B",Z)) Q:Z=""  D
"RTN","IBTRHLO1",81,0)
 .S Z1=+$O(^IBT(356.22,IBTRIEN,11,"B",Z,"")) I 'Z1 Q
"RTN","IBTRHLO1",82,0)
 .S NODE0=$G(^IBT(356.22,IBTRIEN,11,Z1,0)) I NODE0="" Q  ; 0-node of sub-file 356.2211
"RTN","IBTRHLO1",83,0)
 .S SEQ=SEQ+1 I SEQ>10 Q
"RTN","IBTRHLO1",84,0)
 .S PSL="PSL"_HLFS_"PWK 2000E"_HLFS_HLFS_SEQ_HLFS_HLFS_HLFS_"1"_HLFS_"1"
"RTN","IBTRHLO1",85,0)
 .S $P(PSL,HLFS,20)=$$GET1^DIQ(356.018,+$P(NODE0,U)_",",.01)_HLECH_$$ENCHL7^IBCNEHLQ($P(NODE0,U,3))_HLECH_$$ENCHL7^IBCNEHLQ($P(NODE0,U,4))
"RTN","IBTRHLO1",86,0)
 .S $P(PSL,HLFS,21)=$P(NODE0,U,2)
"RTN","IBTRHLO1",87,0)
 .S $P(PSL,HLFS,22)="NA"
"RTN","IBTRHLO1",88,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PSL
"RTN","IBTRHLO1",89,0)
 .Q
"RTN","IBTRHLO1",90,0)
 Q
"RTN","IBTRHLO1",91,0)
 ;
"RTN","IBTRHLO1",92,0)
G3OPRD ; create G3O.PRD segments (G3O segment group)
"RTN","IBTRHLO1",93,0)
 N ADDR1,ADDR2,NODE0,PCODEPRV,PERSON,PRD,PRVDATA,PRVPTR,SEQ,TMP,Z
"RTN","IBTRHLO1",94,0)
 ; create PRD segments for patient event providers
"RTN","IBTRHLO1",95,0)
 S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,13,Z)) Q:Z=""!(Z?1.A)  D
"RTN","IBTRHLO1",96,0)
 .S NODE0=$G(^IBT(356.22,IBTRIEN,13,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.2213
"RTN","IBTRHLO1",97,0)
 .S SEQ=SEQ+1 I SEQ>14 Q  ; only allow up to 14 providers
"RTN","IBTRHLO1",98,0)
 .S PRVPTR=$P(NODE0,U,3) I PRVPTR="" Q  ; missing provider pointer
"RTN","IBTRHLO1",99,0)
 .S PERSON=$P(NODE0,U,2) I 'PERSON Q  ; missing person / non-person indicator
"RTN","IBTRHLO1",100,0)
 .S PRVDATA=$$PRVDATA^IBTRHLO2(+$P(PRVPTR,";"),$P($P(PRVPTR,"(",2),","))
"RTN","IBTRHLO1",101,0)
 .S TMP=$$GET1^DIQ(365.022,+$P(NODE0,U)_",",.01)_HLECH_PERSON_HLECH_HLECH_"NM1 2010EA"
"RTN","IBTRHLO1",102,0)
 .S ADDR1=$P(PRVDATA,U,2,3),ADDR2=$P(PRVDATA,U,4,6)
"RTN","IBTRHLO1",103,0)
 .S PRD="PRD"_HLFS_TMP_HLFS_$$HLNAME^HLFNC($P(PRVDATA,U))_HLFS_$$ENCHL7^IBCNEHLQ($P($$HLADDR^HLFNC(ADDR1,ADDR2),HLECH,1,5))
"RTN","IBTRHLO1",104,0)
 .S $P(PRD,HLFS,8)=$P(PRVDATA,U,7)
"RTN","IBTRHLO1",105,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO1",106,0)
 .; create PRD segment for X12 PRV segment
"RTN","IBTRHLO1",107,0)
 .S PCODEPRV=$$PCODECNV^IBTRHLO2($P(TMP,HLECH)) I PCODEPRV'="" D
"RTN","IBTRHLO1",108,0)
 ..N XTAX
"RTN","IBTRHLO1",109,0)
 ..S XTAX=$P($$GTXNMY^IBTRH3(PRVPTR),"^") ;11/24/15 only code, not description
"RTN","IBTRHLO1",110,0)
 ..I XTAX="" Q
"RTN","IBTRHLO1",111,0)
 ..S TMP=PCODEPRV_HLECH_HLECH_HLECH_"PRV 2010EA"
"RTN","IBTRHLO1",112,0)
 ..S PRD="PRD"_HLFS_TMP
"RTN","IBTRHLO1",113,0)
 ..S $P(PRD,HLFS,8)=XTAX
"RTN","IBTRHLO1",114,0)
 ..S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO1",115,0)
 ..Q
"RTN","IBTRHLO1",116,0)
 .Q
"RTN","IBTRHLO1",117,0)
 ; create PRD segments for patient event transport
"RTN","IBTRHLO1",118,0)
 I 'MSGTYPE S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,14,Z)) Q:Z=""!(Z?1.A)  D
"RTN","IBTRHLO1",119,0)
 .S NODE0=$G(^IBT(356.22,IBTRIEN,14,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.2214
"RTN","IBTRHLO1",120,0)
 .S SEQ=SEQ+1 I SEQ>5 Q  ; only allow up to 5 transports
"RTN","IBTRHLO1",121,0)
 .S TMP=$P(NODE0,U)_HLECH_HLECH_HLECH_"NM1 2010EB"
"RTN","IBTRHLO1",122,0)
 .S (ADDR1,ADDR2)=""
"RTN","IBTRHLO1",123,0)
 .I $P(NODE0,U,3)'="",$P(NODE0,U,5)'="" S ADDR1=$P(NODE0,U,3,4),ADDR2=$P(NODE0,U,5,7)
"RTN","IBTRHLO1",124,0)
 .S PRD="PRD"_HLFS_TMP_HLFS_$$ENCHL7^IBCNEHLQ($P(NODE0,U,2))_HLFS_$$ENCHL7^IBCNEHLQ($P($$HLADDR^HLFNC(ADDR1,ADDR2),HLECH,1,5))
"RTN","IBTRHLO1",125,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO1",126,0)
 .Q
"RTN","IBTRHLO1",127,0)
 ; create PRD segments for other UMO
"RTN","IBTRHLO1",128,0)
 I 'MSGTYPE S (SEQ,Z)=0 F  S Z=$O(^IBT(356.22,IBTRIEN,15,Z)) Q:Z=""!(Z?1.A)  D
"RTN","IBTRHLO1",129,0)
 .S NODE0=$G(^IBT(356.22,IBTRIEN,15,Z,0)) I NODE0="" Q  ; 0-node of sub-file 356.2215
"RTN","IBTRHLO1",130,0)
 .S SEQ=SEQ+1 I SEQ>3 Q  ; only allow up to 3 other UMOs
"RTN","IBTRHLO1",131,0)
 .S TMP=$P(NODE0,U)_HLECH_HLECH_HLECH_"NM1 2010EC"
"RTN","IBTRHLO1",132,0)
 .S PRD="PRD"_HLFS_TMP_HLFS_$$EXTERNAL^DILFD(356.2215,.02,,+$P(NODE0,U,2))
"RTN","IBTRHLO1",133,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO1",134,0)
 .D G3OAUT
"RTN","IBTRHLO1",135,0)
 .Q
"RTN","IBTRHLO1",136,0)
 Q
"RTN","IBTRHLO1",137,0)
 ;
"RTN","IBTRHLO1",138,0)
G3OAUT ; create G3O.AUT segment (G3O segment group)
"RTN","IBTRHLO1",139,0)
 N AUT,R1,R2,R3,R4,Z
"RTN","IBTRHLO1",140,0)
 S R1=$P(NODE0,U,3),R2=$P(NODE0,U,4),R3=$P(NODE0,U,5),R4=$P(NODE0,U,6)
"RTN","IBTRHLO1",141,0)
 I R1="",R2="",R3="",R4="" Q  ; no UMO denial reasons to send
"RTN","IBTRHLO1",142,0)
 S Z="" I R3'=""!(R4'="") S $P(Z,HLECH,2)=$$ENCHL7^IBCNEHLQ(R3),$P(Z,HLECH,5)=$$ENCHL7^IBCNEHLQ(R4)
"RTN","IBTRHLO1",143,0)
 S AUT="AUT"_HLFS_Z_HLFS_"REF 2010EC"_HLECH_$$ENCHL7^IBCNEHLQ(R1)_HLECH_HLECH_HLECH_$$ENCHL7^IBCNEHLQ(R2)
"RTN","IBTRHLO1",144,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=AUT
"RTN","IBTRHLO1",145,0)
 D G3OZTP
"RTN","IBTRHLO1",146,0)
 Q
"RTN","IBTRHLO1",147,0)
 ;
"RTN","IBTRHLO1",148,0)
G3OZTP ; create G3O.ZTP segment (G3O segment group)
"RTN","IBTRHLO1",149,0)
 N DATE,ZTP
"RTN","IBTRHLO1",150,0)
 S DATE=$P($P(NODE0,U,7),".") I DATE="" Q  ; no date to send, date only 4/6/16
"RTN","IBTRHLO1",151,0)
 S ZTP="ZTP"_HLFS_HLFS_"598"_HLFS_$$HLDATE^HLFNC(DATE)_HLFS_"DTP 2010EC"
"RTN","IBTRHLO1",152,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=ZTP
"RTN","IBTRHLO1",153,0)
 Q
"RTN","IBTRHLO1",154,0)
 ;
"RTN","IBTRHLO1",155,0)
G5OPRB ; create G5O.PRB segments (G5O segment group)
"RTN","IBTRHLO1",156,0)
 N FQUAL,FTYPE,NODE160,PRB,REQCAT,Z1
"RTN","IBTRHLO1",157,0)
 S Z1="" F  S Z1=$O(^IBT(356.22,IBTRIEN,16,Z1)) Q:Z1=""!(Z1?1.A)  D
"RTN","IBTRHLO1",158,0)
 .S NODE160=$G(^IBT(356.22,IBTRIEN,16,Z1,0)) I NODE160="" Q  ; 0-node of sub-file 356.2216
"RTN","IBTRHLO1",159,0)
 .S REQCAT=$$GET1^DIQ(356.001,+$P(NODE160,U,15)_",",.01)
"RTN","IBTRHLO1",160,0)
 .I REQCAT'="" D
"RTN","IBTRHLO1",161,0)
 ..S REQCAT=$S(REQCAT="HS":"CO",REQCAT="SC":"AD",1:REQCAT)
"RTN","IBTRHLO1",162,0)
 ..S PRB="PRB"_HLFS_REQCAT_HLFS_$$HLDATE^HLFNC(DT)
"RTN","IBTRHLO1",163,0)
 ..S PRB=PRB_HLFS_$$GET1^DIQ(356.002,+$P(NODE160,U,2)_",",.01)_HLECH_$$GET1^DIQ(365.013,+$P(NODE160,U,3)_",",.01)
"RTN","IBTRHLO1",164,0)
 ..S PRB=PRB_HLFS_"1"_HLFS_"UM 2000F"
"RTN","IBTRHLO1",165,0)
 ..S FQUAL=$P(NODE160,U,4) I FQUAL'="" D
"RTN","IBTRHLO1",166,0)
 ...S FTYPE=$S(FQUAL="A":$P(NODE160,U,6)_$P(NODE160,U,7),1:$$EXTERNAL^DILFD(356.2216,.05,,+$P(NODE160,U,5)))
"RTN","IBTRHLO1",167,0)
 ...I FTYPE'="" S $P(PRB,HLFS,11)=$$ENCHL7^IBCNEHLQ(FTYPE)_HLECH_$P(NODE160,U,4)
"RTN","IBTRHLO1",168,0)
 ...Q
"RTN","IBTRHLO1",169,0)
 ..S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRB
"RTN","IBTRHLO1",170,0)
 ..Q
"RTN","IBTRHLO1",171,0)
 .D G5OAUT,G5OZTP,G5OPSL
"RTN","IBTRHLO1",172,0)
 .I 'MSGTYPE D G5OZHS,G5OPSL2,G5ONTE
"RTN","IBTRHLO1",173,0)
 .D G5OPRD
"RTN","IBTRHLO1",174,0)
 .Q
"RTN","IBTRHLO1",175,0)
 Q
"RTN","IBTRHLO1",176,0)
 ;
"RTN","IBTRHLO1",177,0)
G5OAUT ; create G5O.AUT segment (G5O segment group)
"RTN","IBTRHLO1",178,0)
 N AUT,NODE169,Z
"RTN","IBTRHLO1",179,0)
 S NODE169=$G(^IBT(356.22,IBTRIEN,16,Z1,9)) ; 9-node of sub-file 356.2216
"RTN","IBTRHLO1",180,0)
 S Z=""
"RTN","IBTRHLO1",181,0)
 I $P(NODE169,U)'="" S Z="REF 2000F"_HLECH_$P(NODE169,U),$P(Z,HLECH,5)="BB"
"RTN","IBTRHLO1",182,0)
 I Z="",$P(NODE169,U,2)'="" S Z="REF 2000F"_HLECH_$P(NODE169,U,2),$P(Z,HLECH,5)="NT"
"RTN","IBTRHLO1",183,0)
 I Z="" Q
"RTN","IBTRHLO1",184,0)
 S AUT="AUT"_HLFS_HLFS_Z
"RTN","IBTRHLO1",185,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=AUT
"RTN","IBTRHLO1",186,0)
 Q
"RTN","IBTRHLO1",187,0)
 ;
"RTN","IBTRHLO1",188,0)
G5OZTP ; create G5O.ZTP segment (G5O segment group)
"RTN","IBTRHLO1",189,0)
 N SRVDATE,ZTP
"RTN","IBTRHLO1",190,0)
 S SRVDATE=$P(NODE160,U,11) I SRVDATE="" Q
"RTN","IBTRHLO1",191,0)
 S ZTP="ZTP"_HLFS_HLFS_"472"_HLFS_$$HLDATE^HLFNC($P(SRVDATE,"."))_HLFS_"DTP 2000F"
"RTN","IBTRHLO1",192,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=ZTP
"RTN","IBTRHLO1",193,0)
 Q
"RTN","IBTRHLO1",194,0)
 ;
"RTN","IBTRHLO1",195,0)
G5OPSL ; create G5O.PSL segments (G5O segment group)
"RTN","IBTRHLO1",196,0)
 N NODE161,NODE162,NODE163,NODE1640,NODE1612,PSL,SEQ,SRVTYPE,TMP,Z2
"RTN","IBTRHLO1",197,0)
 S NODE161=$G(^IBT(356.22,IBTRIEN,16,Z1,1)) I NODE161="" Q  ; 1-node of sub-file 356.2216
"RTN","IBTRHLO1",198,0)
 S NODE162=$G(^IBT(356.22,IBTRIEN,16,Z1,2)) ; 2-node of sub-file 356.2216
"RTN","IBTRHLO1",199,0)
 S NODE163=$G(^IBT(356.22,IBTRIEN,16,Z1,3)) ; 3-node of sub-file 356.2216
"RTN","IBTRHLO1",200,0)
 S NODE1612=$G(^IBT(356.22,IBTRIEN,16,Z1,12)) ; 12-node of sub-file 356.2216
"RTN","IBTRHLO1",201,0)
 S SRVTYPE=$P(NODE161,U,12),SEQ=1
"RTN","IBTRHLO1",202,0)
 S PSL="PSL"_HLFS_HLFS_HLFS_SEQ
"RTN","IBTRHLO1",203,0)
 S $P(PSL,HLFS,7)="P"
"RTN","IBTRHLO1",204,0)
 S TMP=$S(SRVTYPE="D":"AD",1:$P(NODE161,U))
"RTN","IBTRHLO1",205,0)
 S $P(TMP,HLECH,2)=$$ENCHL7^IBCNEHLQ($S(TMP="N4":$P(NODE1612,U),1:$$EXTERNAL^DILFD(356.2216,1.02,,$P(NODE161,U,2))))
"RTN","IBTRHLO1",206,0)
 S $P(TMP,HLECH,5)=$$ENCHL7^IBCNEHLQ($S(TMP="N4":$P(NODE1612,U,2),1:$$EXTERNAL^DILFD(356.2216,1.03,,$P(NODE161,U,3))))
"RTN","IBTRHLO1",207,0)
 S $P(PSL,HLFS,8)=TMP
"RTN","IBTRHLO1",208,0)
 I 'MSGTYPE D
"RTN","IBTRHLO1",209,0)
 .S TMP=$$ENCHL7^IBCNEHLQ($$EXTERNAL^DILFD(356.2216,1.04,,$P(NODE161,U,4)))_HLECH
"RTN","IBTRHLO1",210,0)
 .S TMP=TMP_$$ENCHL7^IBCNEHLQ($$EXTERNAL^DILFD(356.2216,1.05,,$P(NODE161,U,5)))_HLECH_HLECH
"RTN","IBTRHLO1",211,0)
 .S TMP=TMP_$$ENCHL7^IBCNEHLQ($$EXTERNAL^DILFD(356.2216,1.06,,$P(NODE161,U,6)))_HLECH
"RTN","IBTRHLO1",212,0)
 .S TMP=TMP_$$ENCHL7^IBCNEHLQ($$EXTERNAL^DILFD(356.2216,1.07,,$P(NODE161,U,7)))
"RTN","IBTRHLO1",213,0)
 .S $P(PSL,HLFS,9)=TMP
"RTN","IBTRHLO1",214,0)
 .S $P(PSL,HLFS,10)=$$ENCHL7^IBCNEHLQ($P(NODE161,U,8))
"RTN","IBTRHLO1",215,0)
 .Q
"RTN","IBTRHLO1",216,0)
 S $P(PSL,HLFS,13)=$$ENCHL7^IBCNEHLQ($P(NODE161,U,11))_HLECH_$P(NODE161,U,10)
"RTN","IBTRHLO1",217,0)
 I 'MSGTYPE S $P(PSL,HLFS,16)=$$ENCHL7^IBCNEHLQ($P(NODE161,U,9))
"RTN","IBTRHLO1",218,0)
 I SRVTYPE="I" D
"RTN","IBTRHLO1",219,0)
 .S $P(PSL,HLFS,2)="SV2 2000F"
"RTN","IBTRHLO1",220,0)
 .S $P(PSL,HLFS,14)=$$ENCHL7^IBCNEHLQ($P(NODE162,U,7))
"RTN","IBTRHLO1",221,0)
 .S $P(PSL,HLFS,18)=$$ENCHL7^IBCNEHLQ($$GET1^DIQ(399.2,+$P(NODE162,U,6)_",",.01))
"RTN","IBTRHLO1",222,0)
 .I 'MSGTYPE S $P(PSL,HLFS,47)=$$GET1^DIQ(356.011,+$P(NODE162,U,8)_",",.01)
"RTN","IBTRHLO1",223,0)
 .Q
"RTN","IBTRHLO1",224,0)
 S $P(PSL,HLFS,22)="NA"
"RTN","IBTRHLO1",225,0)
 I SRVTYPE="P" D
"RTN","IBTRHLO1",226,0)
 .S $P(PSL,HLFS,2)="SV1 2000F"
"RTN","IBTRHLO1",227,0)
 .I 'MSGTYPE D
"RTN","IBTRHLO1",228,0)
 ..S TMP=$$ENCHL7^IBCNEHLQ($P(NODE162,U))_HLECH_$$ENCHL7^IBCNEHLQ($P(NODE162,U,2))_HLECH_HLECH
"RTN","IBTRHLO1",229,0)
 ..S TMP=TMP_$$ENCHL7^IBCNEHLQ($P(NODE162,U,3))_HLECH_$$ENCHL7^IBCNEHLQ($P(NODE162,U,4))
"RTN","IBTRHLO1",230,0)
 ..S $P(PSL,HLFS,23)=TMP
"RTN","IBTRHLO1",231,0)
 ..S $P(PSL,HLFS,48)=$P(NODE162,U,5)
"RTN","IBTRHLO1",232,0)
 ..Q
"RTN","IBTRHLO1",233,0)
 .Q
"RTN","IBTRHLO1",234,0)
 I SRVTYPE="I"!(SRVTYPE="P") S $P(PSL,HLFS,49)=$$GET1^DIQ(356.019,+$P(NODE162,U,9)_",",.01)
"RTN","IBTRHLO1",235,0)
 I SRVTYPE="D",$TR(NODE163,U)'="" D
"RTN","IBTRHLO1",236,0)
 .S $P(PSL,HLFS,2)="SV3 2000F"
"RTN","IBTRHLO1",237,0)
 .S $P(PSL,HLFS,18)=$$ENCHL7^IBCNEHLQ($P(NODE163,U,6))
"RTN","IBTRHLO1",238,0)
 .I 'MSGTYPE D
"RTN","IBTRHLO1",239,0)
 ..S TMP="",$P(TMP,HLECH,9)=$$ENCHL7^IBCNEHLQ($P(NODE163,U,7))
"RTN","IBTRHLO1",240,0)
 ..S $P(PSL,HLFS,23)=TMP
"RTN","IBTRHLO1",241,0)
 ..Q
"RTN","IBTRHLO1",242,0)
 .S TMP=$P(NODE163,U)_HLECH_$P(NODE163,U,2)_HLECH_HLECH_$P(NODE163,U,3)_HLECH_$P(NODE163,U,4)
"RTN","IBTRHLO1",243,0)
 .S $P(TMP,HLECH,9)=$P(NODE163,U,5)
"RTN","IBTRHLO1",244,0)
 .S $P(PSL,HLFS,34)=TMP
"RTN","IBTRHLO1",245,0)
 .Q
"RTN","IBTRHLO1",246,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=PSL
"RTN","IBTRHLO1",247,0)
 ; additional PSL segments for tooth information
"RTN","IBTRHLO1",248,0)
 I SRVTYPE="D" S Z2="" F  S Z2=$O(^IBT(356.22,IBTRIEN,16,Z1,4,Z2)) Q:Z2=""!(Z2?1.A)  D
"RTN","IBTRHLO1",249,0)
 .S NODE1640=$G(^IBT(356.22,IBTRIEN,16,Z1,4,Z2,0)) I NODE1640="" Q  ; 0-node of sub-file 356.22164
"RTN","IBTRHLO1",250,0)
 .S PSL="PSL"_HLFS_"TOO 2000F"
"RTN","IBTRHLO1",251,0)
 .S SEQ=SEQ+1,$P(PSL,HLFS,4)=SEQ
"RTN","IBTRHLO1",252,0)
 .S $P(PSL,HLFS,7)="P"
"RTN","IBTRHLO1",253,0)
 .S $P(PSL,HLFS,8)="JP"_HLECH_$$ENCHL7^IBCNEHLQ($$GET1^DIQ(356.022,+$P(NODE1640,U)_",",.01))
"RTN","IBTRHLO1",254,0)
 .S $P(PSL,HLFS,22)="NA"
"RTN","IBTRHLO1",255,0)
 .S TMP=$P(NODE1640,U,2)
"RTN","IBTRHLO1",256,0)
 .I 'MSGTYPE D
"RTN","IBTRHLO1",257,0)
 ..S TMP=TMP_HLECH_$P(NODE1640,U,3)_HLECH_HLECH_$P(NODE1640,U,4)_HLECH_$P(NODE1640,U,5)
"RTN","IBTRHLO1",258,0)
 ..S $P(TMP,HLECH,9)=$P(NODE1640,U,6)
"RTN","IBTRHLO1",259,0)
 ..Q
"RTN","IBTRHLO1",260,0)
 .S $P(PSL,HLFS,34)=TMP
"RTN","IBTRHLO1",261,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PSL
"RTN","IBTRHLO1",262,0)
 .Q
"RTN","IBTRHLO1",263,0)
 Q
"RTN","IBTRHLO1",264,0)
 ;
"RTN","IBTRHLO1",265,0)
G5OZHS ; create G5O.ZHS segment (G5O segment group)
"RTN","IBTRHLO1",266,0)
 N NODE165,ZHS
"RTN","IBTRHLO1",267,0)
 S NODE165=$G(^IBT(356.22,IBTRIEN,16,Z1,5)) I NODE165="" Q  ; 5-node of sub-file 356.2216
"RTN","IBTRHLO1",268,0)
 S ZHS="ZHS"_HLFS_"HSD 2000F"_HLFS_$$GET1^DIQ(365.016,+$P(NODE165,U)_",",.01)_HLFS
"RTN","IBTRHLO1",269,0)
 S ZHS=ZHS_$$ENCHL7^IBCNEHLQ($P(NODE165,U,2))_HLFS_$P(NODE165,U,3)_HLFS_$$ENCHL7^IBCNEHLQ($P(NODE165,U,4))_HLFS
"RTN","IBTRHLO1",270,0)
 S ZHS=ZHS_$$GET1^DIQ(365.015,+$P(NODE165,U,5)_",",.01)_HLFS_$$ENCHL7^IBCNEHLQ($P(NODE165,U,6))_HLFS
"RTN","IBTRHLO1",271,0)
 S ZHS=ZHS_$$GET1^DIQ(365.025,+$P(NODE165,U,7)_",",.01)_HLFS_$$GET1^DIQ(356.007,+$P(NODE165,U,8)_",",.01)
"RTN","IBTRHLO1",272,0)
 I $TR($P(ZHS,HLFS,3,99),HLFS)="" Q
"RTN","IBTRHLO1",273,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=ZHS
"RTN","IBTRHLO1",274,0)
 Q
"RTN","IBTRHLO1",275,0)
 ;
"RTN","IBTRHLO1",276,0)
G5OPSL2 ; create 2nd group of G5O.PSL segments (G5O segment group)
"RTN","IBTRHLO1",277,0)
 N NODE1660,PSL,SEQ,Z2,Z3
"RTN","IBTRHLO1",278,0)
 S SEQ=0,Z2="" F  S Z2=$O(^IBT(356.22,IBTRIEN,16,Z1,6,"B",Z2)) Q:Z2=""  D
"RTN","IBTRHLO1",279,0)
 .S Z3=+$O(^IBT(356.22,IBTRIEN,16,Z1,6,"B",Z2,"")) I 'Z3 Q
"RTN","IBTRHLO1",280,0)
 .S NODE1660=$G(^IBT(356.22,IBTRIEN,16,Z1,6,Z3,0)) I NODE1660="" Q  ; 0-node of sub-file 356.22166
"RTN","IBTRHLO1",281,0)
 .S SEQ=SEQ+1 I SEQ>10 Q
"RTN","IBTRHLO1",282,0)
 .S PSL="PSL"_HLFS_"PWK 2000F"_HLFS_HLFS_SEQ_HLFS_HLFS_HLFS_"P"_HLFS_"1"
"RTN","IBTRHLO1",283,0)
 .S $P(PSL,HLFS,20)=$$GET1^DIQ(356.018,+$P(NODE1660,U)_",",.01)_HLECH_$$ENCHL7^IBCNEHLQ($P(NODE1660,U,3))_HLECH_$$ENCHL7^IBCNEHLQ($P(NODE1660,U,4))
"RTN","IBTRHLO1",284,0)
 .S $P(PSL,HLFS,21)=$P(NODE1660,U,2)
"RTN","IBTRHLO1",285,0)
 .S $P(PSL,HLFS,22)="NA"
"RTN","IBTRHLO1",286,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PSL
"RTN","IBTRHLO1",287,0)
 .Q
"RTN","IBTRHLO1",288,0)
 Q
"RTN","IBTRHLO1",289,0)
 ;
"RTN","IBTRHLO1",290,0)
G5ONTE ; create G5O.NTE segment (G5O segment group)
"RTN","IBTRHLO1",291,0)
 N MSG,NTE
"RTN","IBTRHLO1",292,0)
 S MSG=$$WP2STR^IBTRHLO2(356.2216,7,Z1_","_IBTRIEN_",",264)
"RTN","IBTRHLO1",293,0)
 I MSG="" Q
"RTN","IBTRHLO1",294,0)
 S NTE="NTE"_HLFS_HLFS_HLFS_$$ENCHL7^IBCNEHLQ(MSG)_HLFS_"MSG 2000F"
"RTN","IBTRHLO1",295,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=NTE
"RTN","IBTRHLO1",296,0)
 Q
"RTN","IBTRHLO1",297,0)
 ;
"RTN","IBTRHLO1",298,0)
G5OPRD ; create G5O.PRD segments (G5O segment group)
"RTN","IBTRHLO1",299,0)
 N ADDR1,ADDR2,NODE1680,PCODEPRV,PERSON,PRD,PRVDATA,PRVPTR,SEQ,TMP,Z2,Z3
"RTN","IBTRHLO1",300,0)
 S SEQ=0,Z2="" F  S Z2=$O(^IBT(356.22,IBTRIEN,16,Z1,8,"B",Z2)) Q:Z2=""  D
"RTN","IBTRHLO1",301,0)
 .S Z3=+$O(^IBT(356.22,IBTRIEN,16,Z1,8,"B",Z2,"")) I 'Z3 Q
"RTN","IBTRHLO1",302,0)
 .S NODE1680=$G(^IBT(356.22,IBTRIEN,16,Z1,8,Z3,0)) I NODE1680="" Q  ; 0-node of sub-file 356.22168
"RTN","IBTRHLO1",303,0)
 .S SEQ=SEQ+1 I SEQ>14 Q  ; only allow up to 14 providers
"RTN","IBTRHLO1",304,0)
 .S PRVPTR=$P(NODE1680,U,3) I PRVPTR="" Q  ; missing provider pointer
"RTN","IBTRHLO1",305,0)
 .S PERSON=$P(NODE1680,U,2) I 'PERSON Q  ; missing person / non-person indicator
"RTN","IBTRHLO1",306,0)
 .S PRVDATA=$$PRVDATA^IBTRHLO2(+$P(PRVPTR,";"),$P($P(PRVPTR,"(",2),","))
"RTN","IBTRHLO1",307,0)
 .S TMP=$$GET1^DIQ(365.022,+$P(NODE1680,U)_",",.01)_HLECH_PERSON_HLECH_HLECH_"NM1 2010F"
"RTN","IBTRHLO1",308,0)
 .S ADDR1=$P(PRVDATA,U,2,3),ADDR2=$P(PRVDATA,U,4,6)
"RTN","IBTRHLO1",309,0)
 .S PRD="PRD"_HLFS_TMP_HLFS_$$HLNAME^HLFNC($P(PRVDATA,U))_HLFS_$$ENCHL7^IBCNEHLQ($P($$HLADDR^HLFNC(ADDR1,ADDR2),HLECH,1,5))
"RTN","IBTRHLO1",310,0)
 .S $P(PRD,HLFS,8)=$P(PRVDATA,U,7)
"RTN","IBTRHLO1",311,0)
 .S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO1",312,0)
 .; create PRD segment for X12 PRV segment
"RTN","IBTRHLO1",313,0)
 .S PCODEPRV=$$PCODECNV^IBTRHLO2($P(TMP,HLECH)) I PCODEPRV'="" D
"RTN","IBTRHLO1",314,0)
 ..I '$F(",AS,OP,OR,OT,PC,PE",","_PCODEPRV) Q
"RTN","IBTRHLO1",315,0)
 ..N XTAX
"RTN","IBTRHLO1",316,0)
 ..S XTAX=$P($$GTXNMY^IBTRH3(PRVPTR),"^")  ;11/24/15 only code, not description
"RTN","IBTRHLO1",317,0)
 ..I XTAX="" Q
"RTN","IBTRHLO1",318,0)
 ..S TMP=PCODEPRV_HLECH_HLECH_HLECH_"PRV 2010F"
"RTN","IBTRHLO1",319,0)
 ..S PRD="PRD"_HLFS_TMP
"RTN","IBTRHLO1",320,0)
 ..S $P(PRD,HLFS,8)=XTAX_HLECH_"PXC"
"RTN","IBTRHLO1",321,0)
 ..S HCT=HCT+1,^TMP("HLS",$J,HCT)=PRD
"RTN","IBTRHLO1",322,0)
 ..Q
"RTN","IBTRHLO1",323,0)
 .Q 
"RTN","IBTRHLO1",324,0)
 Q
"RTN","IBTRHLO1",325,0)
 ;
"RTN","IBTRHLO1",326,0)
OBR ; create OBR segment
"RTN","IBTRHLO1",327,0)
 N OBR,Z,Z1
"RTN","IBTRHLO1",328,0)
 I $TR(NODE18,U)="" Q
"RTN","IBTRHLO1",329,0)
 S OBR="OBR"
"RTN","IBTRHLO1",330,0)
 S $P(OBR,HLFS,5)="CR1 2000E"
"RTN","IBTRHLO1",331,0)
 S $P(OBR,HLFS,14)=$P(NODE18,U,4)
"RTN","IBTRHLO1",332,0)
 S $P(OBR,HLFS,19)=$$ENCHL7^IBCNEHLQ($P(NODE18,U,9))
"RTN","IBTRHLO1",333,0)
 S $P(OBR,HLFS,20)=$$ENCHL7^IBCNEHLQ($P(NODE18,U,10))
"RTN","IBTRHLO1",334,0)
 S Z1=""
"RTN","IBTRHLO1",335,0)
 S Z=$P(NODE18,U,2) I Z'="" S Z1=$$ENCHL7^IBCNEHLQ(Z)_HLECH_$P(NODE18,U)
"RTN","IBTRHLO1",336,0)
 S Z=$P(NODE18,U,6) I Z'="" S Z1=$G(Z1)_HLREP_$$ENCHL7^IBCNEHLQ(Z)_HLECH_$P(NODE18,U,5)
"RTN","IBTRHLO1",337,0)
 I Z1'="" S $P(OBR,HLFS,28)=Z1
"RTN","IBTRHLO1",338,0)
 S $P(OBR,HLFS,47)=$P(NODE18,U,3)
"RTN","IBTRHLO1",339,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=OBR
"RTN","IBTRHLO1",340,0)
 Q
"RTN","IBTRHLO2")
0^8^B22869624^n/a
"RTN","IBTRHLO2",1,0)
IBTRHLO2 ;ALB/YMG - Create and send 278 inquiry cont. ;02-JUN-2014
"RTN","IBTRHLO2",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLO2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLO2",4,0)
 ;
"RTN","IBTRHLO2",5,0)
 Q
"RTN","IBTRHLO2",6,0)
 ;
"RTN","IBTRHLO2",7,0)
HLSC(IEN,TSTAMP,HLRESLT) ; update entry in 356.22 on successful creation of HL7 message
"RTN","IBTRHLO2",8,0)
 ; called from EN^IBTRHLO
"RTN","IBTRHLO2",9,0)
 ; IEN - file 356.22 ien
"RTN","IBTRHLO2",10,0)
 ; TSTAMP - timestamp of message creation
"RTN","IBTRHLO2",11,0)
 ; HLRESLT - return value of GENERATE^HLMA() API call
"RTN","IBTRHLO2",12,0)
 ;
"RTN","IBTRHLO2",13,0)
 N IBTRFDA,IENS,MSGID
"RTN","IBTRHLO2",14,0)
 S MSGID=$P(HLRESLT,U)
"RTN","IBTRHLO2",15,0)
 S IENS=IEN_","
"RTN","IBTRHLO2",16,0)
 S IBTRFDA(356.22,IENS,.08)="02"
"RTN","IBTRHLO2",17,0)
 S IBTRFDA(356.22,IENS,.12)=MSGID
"RTN","IBTRHLO2",18,0)
 S IBTRFDA(356.22,IENS,.15)=TSTAMP
"RTN","IBTRHLO2",19,0)
 D FILE^DIE(,"IBTRFDA")
"RTN","IBTRHLO2",20,0)
 D CLEAN^DILF
"RTN","IBTRHLO2",21,0)
 Q
"RTN","IBTRHLO2",22,0)
 ;
"RTN","IBTRHLO2",23,0)
HLER(IEN,ERRMSG) ; process error on failure to create HL7 message
"RTN","IBTRHLO2",24,0)
 ; called from EN^IBTRHLO
"RTN","IBTRHLO2",25,0)
 ; IEN - file 356.22 ien
"RTN","IBTRHLO2",26,0)
 ; ERRMSG - error message string
"RTN","IBTRHLO2",27,0)
 ;
"RTN","IBTRHLO2",28,0)
 N IBTRFDA,IENS
"RTN","IBTRHLO2",29,0)
 S IENS=IEN_","
"RTN","IBTRHLO2",30,0)
 S IBTRFDA(356.22,IENS,.08)="03"
"RTN","IBTRHLO2",31,0)
 D FILE^DIE(,"IBTRFDA")
"RTN","IBTRHLO2",32,0)
 K IBTRFDA
"RTN","IBTRHLO2",33,0)
 S IENS="?+1,"_IEN_","
"RTN","IBTRHLO2",34,0)
 S IBTRFDA(356.22101,IENS,.01)=1
"RTN","IBTRHLO2",35,0)
 S IBTRFDA(356.22101,IENS,1)=$E(ERRMSG,1,250)
"RTN","IBTRHLO2",36,0)
 D UPDATE^DIE(,"IBTRFDA")
"RTN","IBTRHLO2",37,0)
 D CLEAN^DILF
"RTN","IBTRHLO2",38,0)
 Q
"RTN","IBTRHLO2",39,0)
 ;
"RTN","IBTRHLO2",40,0)
WP2STR(FILE,FIELD,IENS,LEN) ; convert word-processing field into a single string
"RTN","IBTRHLO2",41,0)
 ; FILE - file #
"RTN","IBTRHLO2",42,0)
 ; FIELD - WP field #
"RTN","IBTRHLO2",43,0)
 ; IENS - ien string of entry to process, including trailing comma
"RTN","IBTRHLO2",44,0)
 ; LEN - maximum length of the output string (if not specified - unlimited length)
"RTN","IBTRHLO2",45,0)
 ;
"RTN","IBTRHLO2",46,0)
 ; returns string containing data from specified WP field
"RTN","IBTRHLO2",47,0)
 ;
"RTN","IBTRHLO2",48,0)
 N DATA,STOPFLG,STR,STRLEN,Z
"RTN","IBTRHLO2",49,0)
 S STR="",LEN=+$G(LEN),STOPFLG=0
"RTN","IBTRHLO2",50,0)
 I $G(FILE),$G(FIELD),$G(IENS) D
"RTN","IBTRHLO2",51,0)
 .S Z=$$GET1^DIQ(FILE,IENS,FIELD,,"DATA")
"RTN","IBTRHLO2",52,0)
 .S Z="" F  S Z=$O(DATA(Z)) Q:Z=""!STOPFLG  D
"RTN","IBTRHLO2",53,0)
 ..S:STR'="" STR=STR_" "
"RTN","IBTRHLO2",54,0)
 ..S STRLEN=$L(STR)+$L(DATA(Z)) I LEN,STRLEN>LEN S STOPFLG=1
"RTN","IBTRHLO2",55,0)
 ..S STR=STR_$S('LEN:DATA(Z),STRLEN'>LEN:DATA(Z),1:$E(DATA(Z),1,LEN-$L(STR)))
"RTN","IBTRHLO2",56,0)
 ..Q
"RTN","IBTRHLO2",57,0)
 .Q
"RTN","IBTRHLO2",58,0)
 Q STR
"RTN","IBTRHLO2",59,0)
 ;
"RTN","IBTRHLO2",60,0)
PRVDATA(IEN,FILE) ; get provider data
"RTN","IBTRHLO2",61,0)
 ; IEN - ien for the entry
"RTN","IBTRHLO2",62,0)
 ; FILE - file number IEN is for
"RTN","IBTRHLO2",63,0)
 ;
"RTN","IBTRHLO2",64,0)
 ; returns the following string:
"RTN","IBTRHLO2",65,0)
 ;  name ^ address line 1 ^ address line 2 ^ city ^ state (file 5 ien) ^ zip ^ NPI
"RTN","IBTRHLO2",66,0)
 ;
"RTN","IBTRHLO2",67,0)
 N DATA,IENS,NPI,RES,Z
"RTN","IBTRHLO2",68,0)
 S RES=""
"RTN","IBTRHLO2",69,0)
 I $G(IEN),$G(FILE) D
"RTN","IBTRHLO2",70,0)
 .S IENS=IEN_","
"RTN","IBTRHLO2",71,0)
 .I FILE=4 D  ; pointer to file 4
"RTN","IBTRHLO2",72,0)
 ..D GETS^DIQ(FILE,IENS,".01;4.01:4.05;100","IE","DATA")
"RTN","IBTRHLO2",73,0)
 ..S NPI=$P($$NPI^XUSNPI("Organization_ID",IEN),U) S:NPI<1 NPI=""
"RTN","IBTRHLO2",74,0)
 ..S RES=$G(DATA(FILE,IENS,100,"E")) I RES="" S RES=$G(DATA(FILE,IENS,.01,"E"))
"RTN","IBTRHLO2",75,0)
 ..S RES=RES_U_$G(DATA(FILE,IENS,4.01,"E"))_U_$G(DATA(FILE,IENS,4.02,"E"))_U_$G(DATA(FILE,IENS,4.03,"E"))
"RTN","IBTRHLO2",76,0)
 ..S RES=RES_U_$G(DATA(FILE,IENS,4.04,"I"))_U_$G(DATA(FILE,IENS,4.05,"E"))_U_NPI
"RTN","IBTRHLO2",77,0)
 ..Q
"RTN","IBTRHLO2",78,0)
 .I FILE=200 D  ; pointer to file 200
"RTN","IBTRHLO2",79,0)
 ..D GETS^DIQ(FILE,IENS,".01;.111:.116","IE","DATA")
"RTN","IBTRHLO2",80,0)
 ..S NPI=$P($$NPI^XUSNPI("Individual_ID",IEN),U) S:NPI<1 NPI=""
"RTN","IBTRHLO2",81,0)
 ..S RES=$G(DATA(FILE,IENS,.01,"E"))_U_$G(DATA(FILE,IENS,.111,"E"))
"RTN","IBTRHLO2",82,0)
 ..S Z=$G(DATA(FILE,IENS,.113,"E")) ; addr. line 3
"RTN","IBTRHLO2",83,0)
 ..S RES=RES_U_$G(DATA(FILE,IENS,.112,"E"))_$S(Z'="":" "_Z,1:"")_U_$G(DATA(FILE,IENS,.114,"E"))
"RTN","IBTRHLO2",84,0)
 ..S RES=RES_U_$G(DATA(FILE,IENS,.115,"I"))_U_$TR($G(DATA(FILE,IENS,.116,"E")),"-")_U_NPI
"RTN","IBTRHLO2",85,0)
 ..Q
"RTN","IBTRHLO2",86,0)
 .I FILE=355.93 D  ; pointer to file 355.93
"RTN","IBTRHLO2",87,0)
 ..D GETS^DIQ(FILE,IENS,".01;.05:.08;.1","IE","DATA")
"RTN","IBTRHLO2",88,0)
 ..S NPI=$$NPIGET^IBCEP81(IEN)
"RTN","IBTRHLO2",89,0)
 ..S RES=$G(DATA(FILE,IENS,.01,"E"))_U_$G(DATA(FILE,IENS,.05,"E"))_U_$G(DATA(FILE,IENS,.1,"E"))
"RTN","IBTRHLO2",90,0)
 ..S RES=RES_U_$G(DATA(FILE,IENS,.06,"E"))_U_$G(DATA(FILE,IENS,.07,"I"))_U_$TR($G(DATA(FILE,IENS,.08,"E")),"-")_U_NPI
"RTN","IBTRHLO2",91,0)
 ..Q
"RTN","IBTRHLO2",92,0)
 .Q
"RTN","IBTRHLO2",93,0)
 ; check address integrity, line 1 and city are required
"RTN","IBTRHLO2",94,0)
 ; if either is missing, don't return any of the address fields
"RTN","IBTRHLO2",95,0)
 I $P(RES,U,2)=""!($P(RES,U,4)="") S $P(RES,U,2,6)="^^^^"
"RTN","IBTRHLO2",96,0)
 Q RES
"RTN","IBTRHLO2",97,0)
 ;
"RTN","IBTRHLO2",98,0)
PCODECNV(CODE) ; provider code conversion between NM1 and PRV X12 segments
"RTN","IBTRHLO2",99,0)
 ; CODE - code to convert
"RTN","IBTRHLO2",100,0)
 ; returns converted code (NM1 -> PRV), or null if no match found
"RTN","IBTRHLO2",101,0)
 N I,NM1STR,PRVSTR,RES
"RTN","IBTRHLO2",102,0)
 S NM1STR="71^72^73^AAJ^DD^DK^DN^P3^SJ"
"RTN","IBTRHLO2",103,0)
 S PRVSTR="AT^OP^OT^AD^AS^OR^RF^PC^PE"
"RTN","IBTRHLO2",104,0)
 S RES=""
"RTN","IBTRHLO2",105,0)
 F I=1:1:9 S:$P(NM1STR,U,I)=CODE RES=$P(PRVSTR,U,I) Q:RES'=""
"RTN","IBTRHLO2",106,0)
 Q RES
"RTN","IBTRHLO2",107,0)
 ;
"RTN","IBTRHLO2",108,0)
NTE ; create NTE segment
"RTN","IBTRHLO2",109,0)
 N MSG,NTE
"RTN","IBTRHLO2",110,0)
 S MSG=$$WP2STR(356.22,12,IBTRIEN_",",264)
"RTN","IBTRHLO2",111,0)
 I MSG="" Q
"RTN","IBTRHLO2",112,0)
 S NTE="NTE"_HLFS_HLFS_HLFS_$$ENCHL7^IBCNEHLQ(MSG)_HLFS_"MSG 2000E"
"RTN","IBTRHLO2",113,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=NTE
"RTN","IBTRHLO2",114,0)
 Q
"RTN","IBTRHLO2",115,0)
 ;
"RTN","IBTRHLO2",116,0)
ZHS ; create ZHS segment
"RTN","IBTRHLO2",117,0)
 N QUAL,VALUE,ZHS
"RTN","IBTRHLO2",118,0)
 S ZHS="ZHS"_HLFS_"HSD 2000E"  ;ZHS.1 = LOOP ID
"RTN","IBTRHLO2",119,0)
 S QUAL=$$GET1^DIQ(365.016,+$P(NODE4,U)_",",.01)
"RTN","IBTRHLO2",120,0)
 S VALUE=$P(NODE4,U,2)
"RTN","IBTRHLO2",121,0)
 I QUAL'="",VALUE'="" S $P(ZHS,HLFS,3)=QUAL,$P(ZHS,HLFS,4)=VALUE  ;ZHS.2=4.01, ZHS.3=4.02 
"RTN","IBTRHLO2",122,0)
 S QUAL=$P(NODE4,U,3)
"RTN","IBTRHLO2",123,0)
 S VALUE=$P(NODE4,U,4)
"RTN","IBTRHLO2",124,0)
 I QUAL'="",VALUE'="" S $P(ZHS,HLFS,5)=QUAL  ;ZHS.4=4.03
"RTN","IBTRHLO2",125,0)
 I VALUE'="" S $P(ZHS,HLFS,6)=VALUE  ;ZHS.5=4.04
"RTN","IBTRHLO2",126,0)
 S QUAL=$$GET1^DIQ(365.015,+$P(NODE4,U,5)_",",.01)
"RTN","IBTRHLO2",127,0)
 S VALUE=$P(NODE4,U,6)
"RTN","IBTRHLO2",128,0)
 I QUAL'="",VALUE'="" S $P(ZHS,HLFS,7)=QUAL,$P(ZHS,HLFS,8)=VALUE ;ZHS.6=4.05, ZHS.7=4.06
"RTN","IBTRHLO2",129,0)
 S $P(ZHS,HLFS,9)=$$GET1^DIQ(365.025,+$P(NODE4,U,7)_",",.01) ;ZHS.8=4.07
"RTN","IBTRHLO2",130,0)
 S $P(ZHS,HLFS,10)=$$GET1^DIQ(356.007,+$P(NODE4,U,8)_",",.01) ;ZHS.9=4.08
"RTN","IBTRHLO2",131,0)
 I $TR($P(ZHS,HLFS,3,99),HLFS)="" Q
"RTN","IBTRHLO2",132,0)
 S HCT=HCT+1,^TMP("HLS",$J,HCT)=ZHS
"RTN","IBTRHLO2",133,0)
 Q
"RTN","IBTRHLU")
0^15^B3594614^n/a
"RTN","IBTRHLU",1,0)
IBTRHLU ;ALB/JWS - Receive and store 278 Response message ;05-JUN-2014
"RTN","IBTRHLU",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHLU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHLU",4,0)
 ;
"RTN","IBTRHLU",5,0)
 ;
"RTN","IBTRHLU",6,0)
SPAR ; **Segment Parsing
"RTN","IBTRHLU",7,0)
 ;
"RTN","IBTRHLU",8,0)
 ; This tag will parse the current segment referenced by the HCT index
"RTN","IBTRHLU",9,0)
 ; and place the results in the IBSEG array.
"RTN","IBTRHLU",10,0)
 ;
"RTN","IBTRHLU",11,0)
 ; Input Variables
"RTN","IBTRHLU",12,0)
 ; HCT
"RTN","IBTRHLU",13,0)
 ;
"RTN","IBTRHLU",14,0)
 ; Output Variables
"RTN","IBTRHLU",15,0)
 ; IBSEG (ARRAY of fields in segment)
"RTN","IBTRHLU",16,0)
 ;
"RTN","IBTRHLU",17,0)
 N II,IJ,IK,IM,IS,ISBEG,ISCT,ISDATA,ISEND,ISPEC,LSDATA,NPC
"RTN","IBTRHLU",18,0)
 ;
"RTN","IBTRHLU",19,0)
 ;Reset IBSEG
"RTN","IBTRHLU",20,0)
 K IBSEG
"RTN","IBTRHLU",21,0)
 ;
"RTN","IBTRHLU",22,0)
 S ISCT="",II=-1,IS=0
"RTN","IBTRHLU",23,0)
 F  S ISCT=$O(^TMP($J,"IBTRHLI",HCT,ISCT)) Q:ISCT=""  D
"RTN","IBTRHLU",24,0)
 . S IS=IS+1
"RTN","IBTRHLU",25,0)
 . S ISDATA(IS)=$G(^TMP($J,"IBTRHLI",HCT,ISCT))
"RTN","IBTRHLU",26,0)
 . I $O(^TMP($J,"IBTRHLI",HCT,ISCT))="" S ISDATA(IS)=ISDATA(IS)_HLFS
"RTN","IBTRHLU",27,0)
 . S ISPEC(IS)=$L(ISDATA(IS),HLFS)
"RTN","IBTRHLU",28,0)
 . Q
"RTN","IBTRHLU",29,0)
 S IM=0,LSDATA=""
"RTN","IBTRHLU",30,0)
LP ;**
"RTN","IBTRHLU",31,0)
 S IM=IM+1 Q:IM>IS
"RTN","IBTRHLU",32,0)
 S LSDATA=LSDATA_ISDATA(IM),NPC=ISPEC(IM)
"RTN","IBTRHLU",33,0)
 F IJ=1:1:NPC-1 D
"RTN","IBTRHLU",34,0)
 . S II=II+1,IBSEG(II)=$$CLNSTR($P(LSDATA,HLFS,IJ),$E(HL("ECH"),1,2)_$E(HL("ECH"),4),$E(HL("ECH")))
"RTN","IBTRHLU",35,0)
 . I II=0,IBSEG(0)="MSH" S II=II+1,IBSEG(1)="|"
"RTN","IBTRHLU",36,0)
 S LSDATA=$P(LSDATA,HLFS,NPC)
"RTN","IBTRHLU",37,0)
 G LP
"RTN","IBTRHLU",38,0)
CLNSTR(STRING,CHARS,SUBSEP) ;** Remove extra trailing components and subcomponents in the HL7 seg
"RTN","IBTRHLU",39,0)
 N NUMPEC,PEC,RTSTRING
"RTN","IBTRHLU",40,0)
 S RTSTRING=$$RTRIMCH(STRING,CHARS)
"RTN","IBTRHLU",41,0)
 ; Now we have string w/o trailing chars, remove from subs
"RTN","IBTRHLU",42,0)
 S NUMPEC=$L(RTSTRING,SUBSEP)
"RTN","IBTRHLU",43,0)
 F PEC=1:1:NUMPEC S $P(RTSTRING,SUBSEP,PEC)=$$RTRIMCH($P(RTSTRING,SUBSEP,PEC),CHARS)
"RTN","IBTRHLU",44,0)
 Q RTSTRING
"RTN","IBTRHLU",45,0)
 ;
"RTN","IBTRHLU",46,0)
RTRIMCH(STR,CHRS) ;** Remove the trailing chars from string
"RTN","IBTRHLU",47,0)
 N R,L
"RTN","IBTRHLU",48,0)
 S L=1,CHRS=$G(CHRS," ")
"RTN","IBTRHLU",49,0)
 F R=$L(STR):-1:1 Q:CHRS'[$E(STR,R)
"RTN","IBTRHLU",50,0)
 I L=R,(CHRS[$E(STR)) S STR=""
"RTN","IBTRHLU",51,0)
 Q $E(STR,L,R)
"RTN","IBTRHLU",52,0)
 ;
"RTN","IBTRHRC")
0^50^B203075385^n/a
"RTN","IBTRHRC",1,0)
IBTRHRC ;ALB/JWS - CLAIMS TRACKING 278 CERTIFICATION REPORT ;24-AUG-2015
"RTN","IBTRHRC",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHRC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHRC",4,0)
 ;
"RTN","IBTRHRC",5,0)
% ;
"RTN","IBTRHRC",6,0)
 ;
"RTN","IBTRHRC",7,0)
 ; FILTERS array is built
"RTN","IBTRHRC",8,0)
 ; FILTERS(0)[1] = 1 if report by Payer (Insurance)
"RTN","IBTRHRC",9,0)
 ;                 2 if report by Staff
"RTN","IBTRHRC",10,0)
 ;                 3 if report by Patient
"RTN","IBTRHRC",11,0)
 ;                 4 if report by Date
"RTN","IBTRHRC",12,0)
 ; FILTERS(0)[2] = 0 (or null) if All Payer's, 1 if selected payers
"RTN","IBTRHRC",13,0)
 ; FILTERS(0)[3] = 0 (or null) if All staff, 1 if selected staff
"RTN","IBTRHRC",14,0)
 ; FILTERS(0)[4] = 0 (or null) if All Patients, 1 if selected patients
"RTN","IBTRHRC",15,0)
 ; FILTERS(0)[5] = 0 (No) to display decision reason code, 1 (Yes)
"RTN","IBTRHRC",16,0)
 ; FILTERS(0)[6] = sort, 1 = name, 2 = date
"RTN","IBTRHRC",17,0)
 ; FILTERS(0)[7] = 0 (No) to total by Date, 1 (Yes)
"RTN","IBTRHRC",18,0)
 ; FILTERS(1,payer name) = ien
"RTN","IBTRHRC",19,0)
 ; FILTERS(2,staff name) = ien
"RTN","IBTRHRC",20,0)
 ; FILTERS(3,patient name) = ien
"RTN","IBTRHRC",21,0)
 ; FILTERS(4)[1] = from date
"RTN","IBTRHRC",22,0)
 ; FILTERS(4)[2] = through date
"RTN","IBTRHRC",23,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,RPTDATE,IBQUIT,FILTERS,OK
"RTN","IBTRHRC",24,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRHRC",25,0)
 W !!,"278 Certification Report"
"RTN","IBTRHRC",26,0)
 ; selection filter
"RTN","IBTRHRC",27,0)
 S DIR(0)="S^1:Report by Payer;2:Report by Staff;3:Report by Patient;4:Report by Date Range^I '$F("",1,2,3,4"",X) K X"
"RTN","IBTRHRC",28,0)
 S DIR("A")="Select the type of report to generate"
"RTN","IBTRHRC",29,0)
 S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRC",30,0)
 S DIR("L",2)=""
"RTN","IBTRHRC",31,0)
 S DIR("L",3)="1    Report by Payer"
"RTN","IBTRHRC",32,0)
 S DIR("L",4)="2    Report by Staff"
"RTN","IBTRHRC",33,0)
 S DIR("L",5)="3    Report by Patient"
"RTN","IBTRHRC",34,0)
 S DIR("L",6)="4    Report by Date Range"
"RTN","IBTRHRC",35,0)
 S DIR("?",1)="Select how you wish to select the entries to display on the report."
"RTN","IBTRHRC",36,0)
 S DIR("?",2)=""
"RTN","IBTRHRC",37,0)
 S DIR("?",3)="1 will allow you to select one or more Payers to report on."
"RTN","IBTRHRC",38,0)
 S DIR("?",4)="2 will allow you to select one or more Staff members to report on."
"RTN","IBTRHRC",39,0)
 S DIR("?",5)="3 will allow you to select one or more Patients to report on."
"RTN","IBTRHRC",40,0)
 S DIR("?")="4 will allow you to select a Date Range of 278 transactions to report on."
"RTN","IBTRHRC",41,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRC",42,0)
 I $G(DIRUT) Q
"RTN","IBTRHRC",43,0)
 S FILTERS(0)=Y
"RTN","IBTRHRC",44,0)
 I Y=1 D PAY G 1
"RTN","IBTRHRC",45,0)
 I Y=2 D STAFF G 1
"RTN","IBTRHRC",46,0)
 I Y=4 G 1
"RTN","IBTRHRC",47,0)
 I Y=3 D PAT
"RTN","IBTRHRC",48,0)
 ;
"RTN","IBTRHRC",49,0)
1 ;
"RTN","IBTRHRC",50,0)
 S RPTDATE=$$FMDATES("") I RPTDATE="" Q
"RTN","IBTRHRC",51,0)
 S FILTERS(4)=RPTDATE
"RTN","IBTRHRC",52,0)
 S DIR(0)="Y",DIR("A")="Include Autho/Review Decision Code",DIR("B")="NO"
"RTN","IBTRHRC",53,0)
 S DIR("?",1)="     Enter:  'Y'  -  to include Authorization/Review Decision Reason Codes on report."
"RTN","IBTRHRC",54,0)
 S DIR("?",2)="             'N'  -  to exclude Authorization/Review Decision Reason Codes on report."
"RTN","IBTRHRC",55,0)
 S DIR("?")="             '^'  -  to exit this report."
"RTN","IBTRHRC",56,0)
 D ^DIR K DIR
"RTN","IBTRHRC",57,0)
 I $G(DIRUT) Q
"RTN","IBTRHRC",58,0)
 S $P(FILTERS(0),"^",5)=+Y
"RTN","IBTRHRC",59,0)
 I $P(FILTERS(0),"^")=4 S $P(FILTERS(0),"^",6)=2 G 4
"RTN","IBTRHRC",60,0)
 S DIR(0)="Y",DIR("A")="Total by Date",DIR("B")="NO"
"RTN","IBTRHRC",61,0)
 S DIR("?",1)="     Enter:  'Y'  -  to include totals for each date on report."
"RTN","IBTRHRC",62,0)
 S DIR("?",2)="             'N'  -  to NOT include totals for each date on report."
"RTN","IBTRHRC",63,0)
 S DIR("?")="             '^'  -  to exit this report."
"RTN","IBTRHRC",64,0)
 D ^DIR K DIR
"RTN","IBTRHRC",65,0)
 I $G(DIRUT) Q
"RTN","IBTRHRC",66,0)
 S $P(FILTERS(0),"^",7)=+Y
"RTN","IBTRHRC",67,0)
 I 'Y S $P(FILTERS(0),"^",6)=1 G 4
"RTN","IBTRHRC",68,0)
 I $P(FILTERS(0),"^")=2 G 2
"RTN","IBTRHRC",69,0)
 I $P(FILTERS(0),"^")=3 G 3
"RTN","IBTRHRC",70,0)
 S OK=1
"RTN","IBTRHRC",71,0)
 S X=$O(FILTERS(1,"")) I X,$O(FILTERS(1,X))="" S OK=0,$P(FILTERS(0),"^",6)=2
"RTN","IBTRHRC",72,0)
 I OK D  I $G(DIRUT) Q
"RTN","IBTRHRC",73,0)
 . S DIR(0)="S^1:Payer Name;2:Date^I '$F("",1,2"",X) K X"
"RTN","IBTRHRC",74,0)
 . S DIR("A")="Select the Primary Sort"
"RTN","IBTRHRC",75,0)
 . S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRC",76,0)
 . S DIR("L",2)=""
"RTN","IBTRHRC",77,0)
 . S DIR("L",3)="1    Payer Name"
"RTN","IBTRHRC",78,0)
 . S DIR("L",4)="2    Date"
"RTN","IBTRHRC",79,0)
 . S DIR("?",1)="Select how you wish to sort the entries on this report."
"RTN","IBTRHRC",80,0)
 . S DIR("?",2)=""
"RTN","IBTRHRC",81,0)
 . S DIR("?",3)="1 will sort the entries by Payer Name."
"RTN","IBTRHRC",82,0)
 . S DIR("?")="2 will sort the entries by 278 Transaction Date."
"RTN","IBTRHRC",83,0)
 . W ! D ^DIR K DIR
"RTN","IBTRHRC",84,0)
 . I $G(DIRUT) Q
"RTN","IBTRHRC",85,0)
 . S $P(FILTERS(0),"^",6)=Y
"RTN","IBTRHRC",86,0)
 . Q
"RTN","IBTRHRC",87,0)
 G 4
"RTN","IBTRHRC",88,0)
 ;
"RTN","IBTRHRC",89,0)
2 ;
"RTN","IBTRHRC",90,0)
 S OK=1,X=$P(FILTERS(0),"^",3)
"RTN","IBTRHRC",91,0)
 I X S X=$O(FILTERS(2,"")) I X,$O(FILTERS(2,X))="" S OK=0,$P(FILTERS(0),"^",6)=2
"RTN","IBTRHRC",92,0)
 I OK D  I $G(DIRUT) Q
"RTN","IBTRHRC",93,0)
 . S DIR(0)="S^1:Staff Name;2:Date^I '$F("",1,2"",X) K X"
"RTN","IBTRHRC",94,0)
 . S DIR("A")="Select the Primary Sort"
"RTN","IBTRHRC",95,0)
 . S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRC",96,0)
 . S DIR("L",2)=""
"RTN","IBTRHRC",97,0)
 . S DIR("L",3)="1    Staff Name"
"RTN","IBTRHRC",98,0)
 . S DIR("L",4)="2    Date"
"RTN","IBTRHRC",99,0)
 . S DIR("?",1)="Select how you wish to sort the entries on this report."
"RTN","IBTRHRC",100,0)
 . S DIR("?",2)=""
"RTN","IBTRHRC",101,0)
 . S DIR("?",3)="1 will sort the entries by Staff Name."
"RTN","IBTRHRC",102,0)
 . S DIR("?")="2 will sort the entries by 278 Transaction Date."
"RTN","IBTRHRC",103,0)
 . W ! D ^DIR K DIR
"RTN","IBTRHRC",104,0)
 . I $G(DIRUT) Q
"RTN","IBTRHRC",105,0)
 . S $P(FILTERS(0),"^",6)=Y
"RTN","IBTRHRC",106,0)
 . Q
"RTN","IBTRHRC",107,0)
 G 4
"RTN","IBTRHRC",108,0)
 ;
"RTN","IBTRHRC",109,0)
3 ;
"RTN","IBTRHRC",110,0)
 S OK=1,X=$P(FILTERS(0),"^",4)
"RTN","IBTRHRC",111,0)
 I X S X=$O(FILTERS(3,"")) I X,$O(FILTERS(3,X))="" S OK=0,$P(FILTERS(0),"^",6)=2
"RTN","IBTRHRC",112,0)
 I OK D  I $G(DIRUT) Q
"RTN","IBTRHRC",113,0)
 . S DIR(0)="S^1:Patient Name;2:Date^I '$F("",1,2"",X) K X"
"RTN","IBTRHRC",114,0)
 . S DIR("A")="Select the Primary Sort"
"RTN","IBTRHRC",115,0)
 . S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRC",116,0)
 . S DIR("L",2)=""
"RTN","IBTRHRC",117,0)
 . S DIR("L",3)="1    Patient Name"
"RTN","IBTRHRC",118,0)
 . S DIR("L",4)="2    Date"
"RTN","IBTRHRC",119,0)
 . S DIR("?",1)="Select how you wish to sort the entries on this report."
"RTN","IBTRHRC",120,0)
 . S DIR("?",2)=""
"RTN","IBTRHRC",121,0)
 . S DIR("?",3)="1 will sort the entries by Patient Name."
"RTN","IBTRHRC",122,0)
 . S DIR("?")="2 will sort the entries by 278 Transaction Date."
"RTN","IBTRHRC",123,0)
 . W ! D ^DIR K DIR
"RTN","IBTRHRC",124,0)
 . I $G(DIRUT) Q
"RTN","IBTRHRC",125,0)
 . S $P(FILTERS(0),"^",6)=Y
"RTN","IBTRHRC",126,0)
 . Q
"RTN","IBTRHRC",127,0)
4 ;
"RTN","IBTRHRC",128,0)
 D DEV
"RTN","IBTRHRC",129,0)
 Q
"RTN","IBTRHRC",130,0)
 ;
"RTN","IBTRHRC",131,0)
PAY ; Payer filter
"RTN","IBTRHRC",132,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRHRC",133,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Payer(s)",DIR("B")="All"
"RTN","IBTRHRC",134,0)
 S DIR("?",1)="Enter 'A' to select all Payers."
"RTN","IBTRHRC",135,0)
 S DIR("?")="Enter 'S' to select specific Payers."
"RTN","IBTRHRC",136,0)
 S $P(DIR(0),"^",2)="A:All Payers;S:Selected Payers"
"RTN","IBTRHRC",137,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRC",138,0)
 I $G(DIRUT) Q 0
"RTN","IBTRHRC",139,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRHRC",140,0)
 S $P(FILTERS(0),"^",2)=$S(Y="A":0,1:1)
"RTN","IBTRHRC",141,0)
 ; Set Payer
"RTN","IBTRHRC",142,0)
 I $P(FILTERS(0),"^",2)=1 D ASKPAY(.FILTERS)
"RTN","IBTRHRC",143,0)
 Q
"RTN","IBTRHRC",144,0)
 ;
"RTN","IBTRHRC",145,0)
STAFF ; Staff ( New Person file) filter
"RTN","IBTRHRC",146,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRHRC",147,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Staff",DIR("B")="All"
"RTN","IBTRHRC",148,0)
 S DIR("?",1)="Enter 'A' to select all Staff Members."
"RTN","IBTRHRC",149,0)
 S DIR("?")="Enter 'S' to select specific Staff Members."
"RTN","IBTRHRC",150,0)
 S $P(DIR(0),"^",2)="A:All Staff Members;S:Selected Staff Members"
"RTN","IBTRHRC",151,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRC",152,0)
 I $G(DIRUT) Q 0
"RTN","IBTRHRC",153,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRHRC",154,0)
 S $P(FILTERS(0),"^",3)=$S(Y="A":0,1:1)
"RTN","IBTRHRC",155,0)
 ; Set staff
"RTN","IBTRHRC",156,0)
 I $P(FILTERS(0),"^",3)=1 D ASKSTAFF(.FILTERS)
"RTN","IBTRHRC",157,0)
 Q
"RTN","IBTRHRC",158,0)
 ;
"RTN","IBTRHRC",159,0)
PAT ; Patient filter
"RTN","IBTRHRC",160,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRHRC",161,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Patient(s)",DIR("B")="All"
"RTN","IBTRHRC",162,0)
 S DIR("?",1)="Enter 'A' to select all Patients."
"RTN","IBTRHRC",163,0)
 S DIR("?")="Enter 'S' to select specific Patients."
"RTN","IBTRHRC",164,0)
 S $P(DIR(0),"^",2)="A:All Patients;S:Selected Patients"
"RTN","IBTRHRC",165,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRC",166,0)
 I $G(DIRUT) Q 0
"RTN","IBTRHRC",167,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRHRC",168,0)
 S $P(FILTERS(0),"^",4)=$S(Y="A":0,1:1)
"RTN","IBTRHRC",169,0)
 ; Set Patient
"RTN","IBTRHRC",170,0)
 I $P(FILTERS(0),"^",4)=1 D ASKPAT(.FILTERS)
"RTN","IBTRHRC",171,0)
 Q
"RTN","IBTRHRC",172,0)
 ;
"RTN","IBTRHRC",173,0)
DEV ; -- select device, run option
"RTN","IBTRHRC",174,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBTRHRC",175,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBTRHRC",176,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBTRHRC",ZTSAVE("IB*")="",ZTDESC="IB - 278 Certification Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
"RTN","IBTRHRC",177,0)
 U IO
"RTN","IBTRHRC",178,0)
 S X=132 X ^%ZOSF("RM")
"RTN","IBTRHRC",179,0)
DQ D PRINT G END
"RTN","IBTRHRC",180,0)
 Q
"RTN","IBTRHRC",181,0)
 ;
"RTN","IBTRHRC",182,0)
END ; -- Clean up
"RTN","IBTRHRC",183,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTRHRC",184,0)
 D ^%ZISC
"RTN","IBTRHRC",185,0)
 K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT
"RTN","IBTRHRC",186,0)
 Q
"RTN","IBTRHRC",187,0)
 ;
"RTN","IBTRHRC",188,0)
PRINT ; -- print one billing report from ct
"RTN","IBTRHRC",189,0)
 W !,"Compiling report data..."
"RTN","IBTRHRC",190,0)
 N SDT,EDT,IEN,NODE0,PATIEN,INSIEN,IBQUIT,IBPAG,CERT,AUTH,AUTH2,PATINS,STAFF,XREQ
"RTN","IBTRHRC",191,0)
 S IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0,IBPAG=0
"RTN","IBTRHRC",192,0)
 K ^TMP($J)
"RTN","IBTRHRC",193,0)
 S SDT=$P(FILTERS(4),"^"),EDT=$P(FILTERS(4),"^",2)
"RTN","IBTRHRC",194,0)
 F  S SDT=$O(^IBT(356.22,"AC",SDT)) Q:SDT=""  Q:$P(SDT,".")>EDT  D
"RTN","IBTRHRC",195,0)
 . S IEN=0 F  S IEN=$O(^IBT(356.22,"AC",SDT,IEN)) Q:IEN=""  Q:$G(IBQUIT)  D
"RTN","IBTRHRC",196,0)
 .. S NODE0=$G(^IBT(356.22,IEN,0)) I NODE0'="" D
"RTN","IBTRHRC",197,0)
 ... I $P(NODE0,"^",20)'=2 Q  ;response message
"RTN","IBTRHRC",198,0)
 ... S PATIEN=$P(NODE0,"^",2),INSIEN=$P(NODE0,"^",3)
"RTN","IBTRHRC",199,0)
 ... I PATIEN="" Q
"RTN","IBTRHRC",200,0)
 ... I INSIEN="" Q
"RTN","IBTRHRC",201,0)
 ... S PATINS=$P($G(^DPT(PATIEN,.312,INSIEN,0)),"^") I PATINS="" Q
"RTN","IBTRHRC",202,0)
 ... S OK=1
"RTN","IBTRHRC",203,0)
 ... I $P(FILTERS(0),"^")=1 D  I 'OK Q
"RTN","IBTRHRC",204,0)
 .... I $P(FILTERS(0),"^",2) D  I 'OK Q
"RTN","IBTRHRC",205,0)
 ..... I '$D(FILTERS(1,PATINS)) S OK=0 Q
"RTN","IBTRHRC",206,0)
 ..... Q
"RTN","IBTRHRC",207,0)
 .... Q
"RTN","IBTRHRC",208,0)
 ... I $P(FILTERS(0),"^")=2 D  I 'OK Q
"RTN","IBTRHRC",209,0)
 .... S XREQ=$P(NODE0,"^",13) I XREQ="" S OK=0 Q
"RTN","IBTRHRC",210,0)
 .... S STAFF=$P($G(^IBT(356.22,XREQ,0)),"^",11) I STAFF="" S OK=0 Q
"RTN","IBTRHRC",211,0)
 .... I $P(FILTERS(0),"^",3) D  I 'OK Q
"RTN","IBTRHRC",212,0)
 ..... I '$D(FILTERS(2,STAFF)) S OK=0 Q
"RTN","IBTRHRC",213,0)
 ..... Q
"RTN","IBTRHRC",214,0)
 .... Q
"RTN","IBTRHRC",215,0)
 ... I $P(FILTERS(0),"^")=3 D  I 'OK Q
"RTN","IBTRHRC",216,0)
 .... I $P(FILTERS(0),"^",4) D  I 'OK Q
"RTN","IBTRHRC",217,0)
 ..... I '$D(FILTERS(3,PATIEN)) S OK=0 Q
"RTN","IBTRHRC",218,0)
 ..... Q
"RTN","IBTRHRC",219,0)
 .... Q
"RTN","IBTRHRC",220,0)
 ... S CERT=$P($G(^IBT(356.22,IEN,103)),"^")
"RTN","IBTRHRC",221,0)
 ... S AUTH=$P($G(^IBT(356.22,IEN,103)),"^",3),AUTH2=$P($G(^(103)),"^",2)
"RTN","IBTRHRC",222,0)
 ... I CERT D SET
"RTN","IBTRHRC",223,0)
 .. Q
"RTN","IBTRHRC",224,0)
 . Q
"RTN","IBTRHRC",225,0)
 ;
"RTN","IBTRHRC",226,0)
PR ;
"RTN","IBTRHRC",227,0)
 D HDR
"RTN","IBTRHRC",228,0)
 I '$D(^TMP($J,"IBTRHRC")) W !!,"No 278 Transactions found in date range.",! G PR1
"RTN","IBTRHRC",229,0)
 N Z1,Z2,Z3,TOT1,TOT2,TOT3,TOT4,TOT5,TOT6,TOT7,TOT8,TOT9,DATA,DDATA
"RTN","IBTRHRC",230,0)
 N GTOT1,GTOT2,GTOT3,GTOT4,GTOT5,GTOT6,GTOT7,GTOT8,GTOT9,D1,D2,TAB,TOT
"RTN","IBTRHRC",231,0)
 S (Z1,Z2)=""
"RTN","IBTRHRC",232,0)
 F  S Z1=$O(^TMP($J,"IBTRHRC",Z1)) Q:Z1=""!($G(IBQUIT))  D  Q:IBQUIT
"RTN","IBTRHRC",233,0)
 . S Z2=""  F  S Z2=$O(^TMP($J,"IBTRHRC",Z1,Z2)) Q:Z2=""!($G(IBQUIT))  S DATA=$G(^(Z2)) I DATA'="" D
"RTN","IBTRHRC",234,0)
 .. I ($Y+5)>IOSL D HDR Q:IBQUIT
"RTN","IBTRHRC",235,0)
 .. I $P(FILTERS(0),"^",6)=1 W !,Z1 I $P(FILTERS(0),"^",7),$P(FILTERS(0),"^")'=4 W ?30,$E(Z2,4,5),"/",$E(Z2,6,7),"/",$S($E(Z2)=3:20,1:19),$E(Z2,2,3)
"RTN","IBTRHRC",236,0)
 .. I $P(FILTERS(0),"^",6)=2 D
"RTN","IBTRHRC",237,0)
 ... I $P(FILTERS(0),"^")=4 W !,$E(Z1,4,5),"/",$E(Z1,6,7),"/",$S($E(Z1)=3:20,1:19),$E(Z1,2,3) Q
"RTN","IBTRHRC",238,0)
 ... W !,Z2,?30,$E(Z1,4,5),"/",$E(Z1,6,7),"/",$S($E(Z1)=3:20,1:19),$E(Z1,2,3)
"RTN","IBTRHRC",239,0)
 .. W ?49,$J($P(DATA,"^"),3),?57,$J($P(DATA,"^",2),3)
"RTN","IBTRHRC",240,0)
 .. W ?67,$J($P(DATA,"^",3),3),?77,$J($P(DATA,"^",4),3),?87,$J($P(DATA,"^",5),3),?97,$J($P(DATA,"^",6),3)
"RTN","IBTRHRC",241,0)
 .. W ?107,$J($P(DATA,"^",7),3),?117,$J($P(DATA,"^",8),3),?126,$J($P(DATA,"^",9),4)
"RTN","IBTRHRC",242,0)
 .. I $P(FILTERS(0),"^",5),$O(^TMP($J,"IBTRHRC",Z1,Z2,""))'="" D
"RTN","IBTRHRC",243,0)
 ... W !?48,"Detail Autho/Review Decision Code:",?93,"----"
"RTN","IBTRHRC",244,0)
 ... S Z3="" F  S Z3=$O(^TMP($J,"IBTRHRC",Z1,Z2,1,Z3)) Q:Z3=""  S DDATA=$G(^(Z3)) I DDATA D
"RTN","IBTRHRC",245,0)
 .... S D1=$$GET1^DIQ(356.021,Z3_",",.01)
"RTN","IBTRHRC",246,0)
 .... S D2=$$GET1^DIQ(356.021,Z3_",",.02)
"RTN","IBTRHRC",247,0)
 .... W !?48,D1,"-",D2,?95,DDATA
"RTN","IBTRHRC",248,0)
 ... S Z3="" F  S Z3=$O(^TMP($J,"IBTRHRC",Z1,Z2,2,Z3)) Q:Z3=""  S DDATA=$G(^(Z3)) I DDATA D
"RTN","IBTRHRC",249,0)
 .... W !?48,Z3,?95,DDATA
"RTN","IBTRHRC",250,0)
 .... Q
"RTN","IBTRHRC",251,0)
 .. S TOT1=$G(TOT1)+$P(DATA,"^"),TOT2=$G(TOT2)+$P(DATA,"^",2)
"RTN","IBTRHRC",252,0)
 .. S TOT3=$G(TOT3)+$P(DATA,"^",3),TOT4=$G(TOT4)+$P(DATA,"^",4)
"RTN","IBTRHRC",253,0)
 .. S TOT5=$G(TOT5)+$P(DATA,"^",5),TOT6=$G(TOT6)+$P(DATA,"^",6)
"RTN","IBTRHRC",254,0)
 .. S TOT7=$G(TOT7)+$P(DATA,"^",7),TOT8=$G(TOT8)+$P(DATA,"^",8)
"RTN","IBTRHRC",255,0)
 .. S TOT9=$G(TOT9)+$P(DATA,"^",9)
"RTN","IBTRHRC",256,0)
 . I +$P(FILTERS(0),"^",7) D
"RTN","IBTRHRC",257,0)
 .. ;N CHK S CHK=$O(FILTERS(1,"")) I CHK'="",$O(FILTERS(1,CHK))="" Q
"RTN","IBTRHRC",258,0)
 .. ;S CHK=$O(FILTERS(2,"")) I CHK'="",$O(FILTERS(2,CHK))="" Q
"RTN","IBTRHRC",259,0)
 .. ;S CHK=$O(FILTERS(3,"")) I CHK'="",$O(FILTERS(2,CHK))="" Q
"RTN","IBTRHRC",260,0)
 .. W !?48,$TR($J(" ",84)," ","-")
"RTN","IBTRHRC",261,0)
 .. W !,"   Total"
"RTN","IBTRHRC",262,0)
 .. W ?48,$J(TOT1,4)
"RTN","IBTRHRC",263,0)
 .. F I=2:1:8 S TAB=36+(10*I),TAB="?"_TAB,TOT="TOT"_I W @TAB,$J(@TOT,4)
"RTN","IBTRHRC",264,0)
 .. W ?126,$J(TOT9,4)
"RTN","IBTRHRC",265,0)
 .. W !?29,$TR($J(" ",103)," ","-")
"RTN","IBTRHRC",266,0)
 . S GTOT1=$G(GTOT1)+$G(TOT1),GTOT2=$G(GTOT2)+$G(TOT2)
"RTN","IBTRHRC",267,0)
 . S GTOT3=$G(GTOT3)+$G(TOT3),GTOT4=$G(GTOT4)+$G(TOT4)
"RTN","IBTRHRC",268,0)
 . S GTOT5=$G(GTOT5)+$G(TOT5),GTOT6=$G(GTOT6)+$G(TOT6)
"RTN","IBTRHRC",269,0)
 . S GTOT7=$G(GTOT7)+$G(TOT7),GTOT8=$G(GTOT8)+$G(TOT8)
"RTN","IBTRHRC",270,0)
 . S GTOT9=$G(GTOT9)+$G(TOT9)
"RTN","IBTRHRC",271,0)
 . S (TOT1,TOT2,TOT3,TOT4,TOT5,TOT6,TOT7,TOT8,TOT9)=""
"RTN","IBTRHRC",272,0)
 . Q
"RTN","IBTRHRC",273,0)
 I '+$P(FILTERS(0),"^",7) W !?29,$TR($J(" ",103)," ","-")
"RTN","IBTRHRC",274,0)
 W !,"Grand Total"
"RTN","IBTRHRC",275,0)
 W ?48,$J(GTOT1,4)
"RTN","IBTRHRC",276,0)
 F I=2:1:9 S TAB=36+(10*I),TAB="?"_TAB,TOT="GTOT"_I W @TAB,$J(@TOT,4)
"RTN","IBTRHRC",277,0)
 W !?29,$TR($J(" ",103)," ","=")
"RTN","IBTRHRC",278,0)
 W !
"RTN","IBTRHRC",279,0)
PR1 ;
"RTN","IBTRHRC",280,0)
 W !?(132-$L("*** END OF REPORT ***")\2),"*** END OF REPORT ***"
"RTN","IBTRHRC",281,0)
 I $D(ZTQUEUED) G END
"RTN","IBTRHRC",282,0)
 Q
"RTN","IBTRHRC",283,0)
 ;
"RTN","IBTRHRC",284,0)
HDR ; -- Print header for billing report
"RTN","IBTRHRC",285,0)
 Q:IBQUIT
"RTN","IBTRHRC",286,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBTRHRC",287,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBTRHRC",288,0)
 S IBPAG=IBPAG+1
"RTN","IBTRHRC",289,0)
 W !," 278 Certification Report",?55,IBHDT,?125,"Page: ",IBPAG
"RTN","IBTRHRC",290,0)
 W !," Sort by: ",$S($P(FILTERS(0),"^",6)=1:$S($P(FILTERS(0),"^")=1:"Payer",$P(FILTERS(0),"^")=2:"Staff",1:"Patient"),1:"Date"),?116,"Detail: ",$S($P(FILTERS(0),"^",7)=1:"Included",1:"Excluded")
"RTN","IBTRHRC",291,0)
 W !?55,"Report Timeframe:"
"RTN","IBTRHRC",292,0)
 S SDT=$P(FILTERS(4),"^"),EDT=$P(FILTERS(4),"^",2)
"RTN","IBTRHRC",293,0)
 W !?52,$E(SDT,4,5),"/",$E(SDT,6,7),"/",$S($E(SDT)=3:20,1:19),$E(SDT,2,3)
"RTN","IBTRHRC",294,0)
 W " - ",$E(EDT,4,5),"/",$E(EDT,6,7),"/",$S($E(EDT)=3:20,1:19),$E(EDT,2,3)
"RTN","IBTRHRC",295,0)
 I $P(FILTERS(0),"^")=1 W !?55,$S($P(FILTERS(0),"^",2)=1:"Selected",1:"All")," Payer(s)"
"RTN","IBTRHRC",296,0)
 I $P(FILTERS(0),"^")=2 W !?55,$S($P(FILTERS(0),"^",3)=1:"Selected",1:"All")," Staff"
"RTN","IBTRHRC",297,0)
 I $P(FILTERS(0),"^")=3 W !?55,$S($P(FILTERS(0),"^",4)=1:"Selected",1:"All")," Patient(s)"
"RTN","IBTRHRC",298,0)
 I $P(FILTERS(0),"^")=4 W !?55,"Selected Dates"
"RTN","IBTRHRC",299,0)
 W !
"RTN","IBTRHRC",300,0)
 W !,$S($P(FILTERS(0),"^")=1:"Payer",$P(FILTERS(0),"^")=2:"Staff",$P(FILTERS(0),"^")=3:"Patient",1:"Date")
"RTN","IBTRHRC",301,0)
 W ?30
"RTN","IBTRHRC",302,0)
 I $P(FILTERS(0),"^",7),$P(FILTERS(0),"^")'=4 W "Date"
"RTN","IBTRHRC",303,0)
 W ?48,"#278s",?58,"#A1",?68,"#A2",?78,"#A6",?88,"#A4",?98,"#A3",?108,"#C",?118,"CT",?128,"NA"
"RTN","IBTRHRC",304,0)
 W !,$TR($J(" ",132)," ","=")
"RTN","IBTRHRC",305,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request"
"RTN","IBTRHRC",306,0)
 Q
"RTN","IBTRHRC",307,0)
 ;
"RTN","IBTRHRC",308,0)
SET ; -- set tmp array
"RTN","IBTRHRC",309,0)
 N PIECE,ST1,ST2,INS,DATE,AUTH1,COUNT
"RTN","IBTRHRC",310,0)
 I $P(FILTERS(0),"^")=1 D
"RTN","IBTRHRC",311,0)
 . I $D(FILTERS(1,PATINS)) S INS=FILTERS(1,PATINS)
"RTN","IBTRHRC",312,0)
 . E  S INS=$$GET1^DIQ(36,PATINS_",",.01),FILTERS(1,PATINS)=INS
"RTN","IBTRHRC",313,0)
 . I INS="" S INS="UNKNOWN" Q
"RTN","IBTRHRC",314,0)
 I $P(FILTERS(0),"^")=2 D
"RTN","IBTRHRC",315,0)
 . I $D(FILTERS(2,STAFF)) S INS=FILTERS(2,STAFF)
"RTN","IBTRHRC",316,0)
 . E  S INS=$$GET1^DIQ(200,STAFF_",",.01),FILTERS(2,STAFF)=INS
"RTN","IBTRHRC",317,0)
 . I INS="" S INS="UNKNOWN" Q
"RTN","IBTRHRC",318,0)
 I $P(FILTERS(0),"^")=3 D
"RTN","IBTRHRC",319,0)
 . I $D(FILTERS(3,PATIEN)) S INS=FILTERS(3,PATIEN)
"RTN","IBTRHRC",320,0)
 . E  S INS=$$GET1^DIQ(2,PATIEN_",",.01),FILTERS(3,PATIEN)=INS
"RTN","IBTRHRC",321,0)
 . I INS="" S INS="UNKNOWN" Q
"RTN","IBTRHRC",322,0)
 I $P(FILTERS(0),"^")=4 S INS=$P(SDT,".")
"RTN","IBTRHRC",323,0)
 I $P(FILTERS(0),"^",6)=1 S ST1=INS,ST2=$P(SDT,".") I '$P(FILTERS(0),"^",7) S ST2=ST1
"RTN","IBTRHRC",324,0)
 I $P(FILTERS(0),"^",6)=2 S ST1=$P(SDT,"."),ST2=INS
"RTN","IBTRHRC",325,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 D HDR W !!,"....task stopped at user request" Q
"RTN","IBTRHRC",326,0)
 S COUNT=$G(^TMP($J,"IBTRHRC",ST1,ST2)),$P(COUNT,"^")=$P(COUNT,"^")+1,^(ST2)=COUNT
"RTN","IBTRHRC",327,0)
 I CERT D
"RTN","IBTRHRC",328,0)
 . S CERT=$$GET1^DIQ(356.02,CERT_",",.01)
"RTN","IBTRHRC",329,0)
 . S PIECE=$S(CERT="A1":2,CERT="A2":3,CERT="A6":4,CERT="A4":5,CERT="A3":6,CERT="C":7,CERT="CT":8,1:"9")
"RTN","IBTRHRC",330,0)
 . S $P(COUNT,"^",PIECE)=$P(COUNT,"^",PIECE)+1
"RTN","IBTRHRC",331,0)
 . S ^TMP($J,"IBTRHRC",ST1,ST2)=COUNT
"RTN","IBTRHRC",332,0)
 I AUTH'="" D
"RTN","IBTRHRC",333,0)
 . S AUTH1=$$GET1^DIQ(356.021,AUTH_",",.01)
"RTN","IBTRHRC",334,0)
 . I AUTH1="" Q
"RTN","IBTRHRC",335,0)
 . S COUNT=$G(^TMP($J,"IBTRHRC",ST1,ST2,1,AUTH))
"RTN","IBTRHRC",336,0)
 . S COUNT=COUNT+1
"RTN","IBTRHRC",337,0)
 . S ^TMP($J,"IBTRHRC",ST1,ST2,1,AUTH)=COUNT
"RTN","IBTRHRC",338,0)
 I AUTH2'="" D
"RTN","IBTRHRC",339,0)
 . S COUNT=$G(^TMP($J,"IBTRHRC",ST1,ST2,2,AUTH2))
"RTN","IBTRHRC",340,0)
 . S COUNT=COUNT+1
"RTN","IBTRHRC",341,0)
 . S ^TMP($J,"IBTRHRC",ST1,ST2,2,AUTH2)=COUNT
"RTN","IBTRHRC",342,0)
 Q
"RTN","IBTRHRC",343,0)
 ;
"RTN","IBTRHRC",344,0)
FMDATES(PROMPT) ; ask for date range
"RTN","IBTRHRC",345,0)
 N %DT,X,Y,DT1,DT2,IB1,IB2
"RTN","IBTRHRC",346,0)
 S DT1="",IB1="Start Date: ",IB2="End Date: "
"RTN","IBTRHRC",347,0)
 I $G(PROMPT)'="" S IB1="Start with "_PROMPT_": ",IB2="Go to "_PROMPT_": "
"RTN","IBTRHRC",348,0)
FM1 ;
"RTN","IBTRHRC",349,0)
 S %DT="AEX",%DT("A")=IB1 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM1E:(Y<0&(X="")),FMDQ
"RTN","IBTRHRC",350,0)
 S (%DT(0),DT2)=$P(Y,".",1) I DT2'>DT S %DT("B")="Today"
"RTN","IBTRHRC",351,0)
FM2 ;
"RTN","IBTRHRC",352,0)
 S %DT="AEX",%DT("A")=IB2 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM2E:(Y<0&(X="")),FMDQ
"RTN","IBTRHRC",353,0)
 S DT1=DT2_"^"_$P(Y,".",1)
"RTN","IBTRHRC",354,0)
FMDQ ;
"RTN","IBTRHRC",355,0)
 Q DT1
"RTN","IBTRHRC",356,0)
FM1E ;
"RTN","IBTRHRC",357,0)
 W !,"A date must be entered." G FM1
"RTN","IBTRHRC",358,0)
FM2E ;
"RTN","IBTRHRC",359,0)
 W !,"A date must be entered." G FM2
"RTN","IBTRHRC",360,0)
 Q
"RTN","IBTRHRC",361,0)
 ;
"RTN","IBTRHRC",362,0)
ASKPAY(FILTERS)   ; Sets a list of patients
"RTN","IBTRHRC",363,0)
 ; the HCSR Worklist
"RTN","IBTRHRC",364,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRHRC",365,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRHRC",366,0)
 N CLINS,DIC,DIR,DIRUT,DIVS,DUOUT,IBIENS,IEN,N,NM,NODE,WARDS,X,XX,Y
"RTN","IBTRHRC",367,0)
 S DIC=36,DIC(0)="AEM"
"RTN","IBTRHRC",368,0)
 F  D  Q:+IEN<1
"RTN","IBTRHRC",369,0)
 . D ONE(.DIC,.IEN)               ; One patient
"RTN","IBTRHRC",370,0)
 . Q:+IEN<1
"RTN","IBTRHRC",371,0)
 . S FILTERS(1,$P(IEN,"^"))=$P(IEN,"^",2)
"RTN","IBTRHRC",372,0)
 Q
"RTN","IBTRHRC",373,0)
 ;
"RTN","IBTRHRC",374,0)
ASKSTAFF(FILTERS)   ; Sets a list of staff
"RTN","IBTRHRC",375,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRHRC",376,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRHRC",377,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,IBIENS,IEN,N,NM,NODE,X,XX,Y
"RTN","IBTRHRC",378,0)
 S DIC=200,DIC(0)="AEM"
"RTN","IBTRHRC",379,0)
 F  D  Q:+IEN<1
"RTN","IBTRHRC",380,0)
 . D ONE(.DIC,.IEN)
"RTN","IBTRHRC",381,0)
 . Q:+IEN<1
"RTN","IBTRHRC",382,0)
 . S FILTERS(2,$P(IEN,"^"))=$P(IEN,"^",2)
"RTN","IBTRHRC",383,0)
 Q
"RTN","IBTRHRC",384,0)
 ;
"RTN","IBTRHRC",385,0)
ONE(DIC,IEN)  ; Prompts the user for Payer
"RTN","IBTRHRC",386,0)
 ; Input:   DIC     - Variable/Array of settings needed for ^DIC call
"RTN","IBTRHRC",387,0)
 ;          
"RTN","IBTRHRC",388,0)
 ; Output:  IEN     - IEN of the selected Payer Entry
"RTN","IBTRHRC",389,0)
 ;                    null if no selection was made
"RTN","IBTRHRC",390,0)
 S DIC("A")="Select "_$S(DIC=200:"Staff Member: ",DIC="^VA(200,":"Staff Member: ",DIC=2:"Patient: ",DIC="^DPT(":"Patient: ",1:"Payer: ")
"RTN","IBTRHRC",391,0)
 D ^DIC
"RTN","IBTRHRC",392,0)
 S IEN=Y
"RTN","IBTRHRC",393,0)
 Q
"RTN","IBTRHRC",394,0)
 ;
"RTN","IBTRHRC",395,0)
ASKPAT(FILTERS) ; Sets a list of Patients
"RTN","IBTRHRC",396,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRHRC",397,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRHRC",398,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,IBIENS,IEN,N,NM,NODE,X,XX,Y
"RTN","IBTRHRC",399,0)
 S DIC=2,DIC(0)="AEM"
"RTN","IBTRHRC",400,0)
 F  D  Q:+IEN<1
"RTN","IBTRHRC",401,0)
 . D ONE(.DIC,.IEN)
"RTN","IBTRHRC",402,0)
 . Q:+IEN<1
"RTN","IBTRHRC",403,0)
 . S FILTERS(3,$P(IEN,"^"))=$P(IEN,"^",2)
"RTN","IBTRHRC",404,0)
 Q
"RTN","IBTRHRD")
0^51^B116950528^n/a
"RTN","IBTRHRD",1,0)
IBTRHRD ;ALB/JWS - CLAIMS TRACKING 278 DISPOSITION REPORT ;21-SEP-2015
"RTN","IBTRHRD",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHRD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHRD",4,0)
 ;
"RTN","IBTRHRD",5,0)
% ;
"RTN","IBTRHRD",6,0)
 ; FILTERS array is built
"RTN","IBTRHRD",7,0)
 ; FILTERS(0)[1] = 1 if report by Staff
"RTN","IBTRHRD",8,0)
 ;                 2 if report by Patient
"RTN","IBTRHRD",9,0)
 ;                 3 if report by Date
"RTN","IBTRHRD",10,0)
 ; FILTERS(0)[2] = 
"RTN","IBTRHRD",11,0)
 ; FILTERS(0)[3] = 0 (or null) if All staff, 1 if selected staff
"RTN","IBTRHRD",12,0)
 ; FILTERS(0)[4] = 0 (or null) if All Patients, 1 if selected patients
"RTN","IBTRHRD",13,0)
 ; FILTERS(0)[5] =
"RTN","IBTRHRD",14,0)
 ; FILTERS(0)[6] = sort, 1 = name, 2 = date
"RTN","IBTRHRD",15,0)
 ; FILTERS(2,staff name) = ien
"RTN","IBTRHRD",16,0)
 ; FILTERS(3,patient name) = ien
"RTN","IBTRHRD",17,0)
 ; FILTERS(4)[1] = from date
"RTN","IBTRHRD",18,0)
 ; FILTERS(4)[2] = through date
"RTN","IBTRHRD",19,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,RPTDATE,IBQUIT,FILTERS,OK
"RTN","IBTRHRD",20,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRHRD",21,0)
 W !!,"278 Deletion Disposition Report"
"RTN","IBTRHRD",22,0)
 ; selection filter
"RTN","IBTRHRD",23,0)
 S DIR(0)="S^1:Report by Staff;2:Report by Patient;3:Report by Date Range^I '$F("",1,2,3"","",""_X) K X"
"RTN","IBTRHRD",24,0)
 S DIR("A")="Select the type of report to generate"
"RTN","IBTRHRD",25,0)
 S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRD",26,0)
 S DIR("L",2)=""
"RTN","IBTRHRD",27,0)
 S DIR("L",3)="1    Report by Staff"
"RTN","IBTRHRD",28,0)
 S DIR("L",4)="2    Report by Patient"
"RTN","IBTRHRD",29,0)
 S DIR("L",5)="3    Report by Date Range"
"RTN","IBTRHRD",30,0)
 S DIR("?",1)="Select how you wish to select the entries to display on the report."
"RTN","IBTRHRD",31,0)
 S DIR("?",2)=""
"RTN","IBTRHRD",32,0)
 S DIR("?",3)="1 will allow you to select one or more Staff members to report on."
"RTN","IBTRHRD",33,0)
 S DIR("?",4)="2 will allow you to select one or more Patients to report on."
"RTN","IBTRHRD",34,0)
 S DIR("?")="3 will allow you to select a Date Range of 278 transactions to report on."
"RTN","IBTRHRD",35,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRD",36,0)
 I $G(DIRUT) Q
"RTN","IBTRHRD",37,0)
 S FILTERS(0)=Y
"RTN","IBTRHRD",38,0)
 I Y=1 D STAFF G 1
"RTN","IBTRHRD",39,0)
 I Y=3 G 1
"RTN","IBTRHRD",40,0)
 I Y=2 D PAT
"RTN","IBTRHRD",41,0)
 ;
"RTN","IBTRHRD",42,0)
1 ;
"RTN","IBTRHRD",43,0)
 S RPTDATE=$$FMDATES("") I RPTDATE="" Q
"RTN","IBTRHRD",44,0)
 S FILTERS(4)=RPTDATE
"RTN","IBTRHRD",45,0)
 S DIR(0)="Y",DIR("A")="Include Delete Reason",DIR("B")="NO"
"RTN","IBTRHRD",46,0)
 S DIR("?",1)="     Enter:  'Y'  -  to include the Delete Reason Codes on report."
"RTN","IBTRHRD",47,0)
 S DIR("?",2)="             'N'  -  to exclude the Delete Reason Codes on report."
"RTN","IBTRHRD",48,0)
 S DIR("?")="             '^'  -  to exit this report."
"RTN","IBTRHRD",49,0)
 D ^DIR K DIR
"RTN","IBTRHRD",50,0)
 I $G(DIRUT) Q
"RTN","IBTRHRD",51,0)
 S $P(FILTERS(0),"^",8)=+Y
"RTN","IBTRHRD",52,0)
 I $P(FILTERS(0),"^")=3 S $P(FILTERS(0),"^",6)=2 G 4
"RTN","IBTRHRD",53,0)
 ;I $P(FILTERS(0),"^")=1 G 2
"RTN","IBTRHRD",54,0)
 I $P(FILTERS(0),"^")=2 G 3
"RTN","IBTRHRD",55,0)
 ;
"RTN","IBTRHRD",56,0)
2 ;
"RTN","IBTRHRD",57,0)
 S OK=1,X=$P(FILTERS(0),"^",3)
"RTN","IBTRHRD",58,0)
 I X S X=$O(FILTERS(2,"")) I X,$O(FILTERS(2,X))="" S OK=0,$P(FILTERS(0),"^",6)=1
"RTN","IBTRHRD",59,0)
 I OK D  I $G(DIRUT) Q
"RTN","IBTRHRD",60,0)
 . S DIR(0)="S^1:Staff Name;2:Date^I '$F("",1,2"",X) K X"
"RTN","IBTRHRD",61,0)
 . S DIR("A")="Select the Primary Sort"
"RTN","IBTRHRD",62,0)
 . S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRD",63,0)
 . S DIR("L",2)=""
"RTN","IBTRHRD",64,0)
 . S DIR("L",3)="1    Staff Name"
"RTN","IBTRHRD",65,0)
 . S DIR("L",4)="2    Date"
"RTN","IBTRHRD",66,0)
 . S DIR("?",1)="Select how you wish to sort the entries on this report."
"RTN","IBTRHRD",67,0)
 . S DIR("?",2)=""
"RTN","IBTRHRD",68,0)
 . S DIR("?",3)="1 will sort the entries by Staff Name."
"RTN","IBTRHRD",69,0)
 . S DIR("?")="2 will sort the entries by 278 Transaction Date."
"RTN","IBTRHRD",70,0)
 . W ! D ^DIR K DIR
"RTN","IBTRHRD",71,0)
 . I $G(DIRUT) Q
"RTN","IBTRHRD",72,0)
 . S $P(FILTERS(0),"^",6)=Y
"RTN","IBTRHRD",73,0)
 . Q
"RTN","IBTRHRD",74,0)
 G 4
"RTN","IBTRHRD",75,0)
 ;
"RTN","IBTRHRD",76,0)
3 ;
"RTN","IBTRHRD",77,0)
 S OK=1,X=$P(FILTERS(0),"^",4)
"RTN","IBTRHRD",78,0)
 I X S X=$O(FILTERS(3,"")) I X,$O(FILTERS(3,X))="" S OK=0,$P(FILTERS(0),"^",6)=1
"RTN","IBTRHRD",79,0)
 I OK D  I $G(DIRUT) Q
"RTN","IBTRHRD",80,0)
 . S DIR(0)="S^1:Patient Name;2:Date^I '$F("",1,2"",X) K X"
"RTN","IBTRHRD",81,0)
 . S DIR("A")="Select the Primary Sort"
"RTN","IBTRHRD",82,0)
 . S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRD",83,0)
 . S DIR("L",2)=""
"RTN","IBTRHRD",84,0)
 . S DIR("L",3)="1    Patient Name"
"RTN","IBTRHRD",85,0)
 . S DIR("L",4)="2    Date"
"RTN","IBTRHRD",86,0)
 . S DIR("?",1)="Select how you wish to sort the entries on this report."
"RTN","IBTRHRD",87,0)
 . S DIR("?",2)=""
"RTN","IBTRHRD",88,0)
 . S DIR("?",3)="1 will sort the entries by Patient Name."
"RTN","IBTRHRD",89,0)
 . S DIR("?")="2 will sort the entries by 278 Transaction Date."
"RTN","IBTRHRD",90,0)
 . W ! D ^DIR K DIR
"RTN","IBTRHRD",91,0)
 . I $G(DIRUT) Q
"RTN","IBTRHRD",92,0)
 . S $P(FILTERS(0),"^",6)=Y
"RTN","IBTRHRD",93,0)
 . Q
"RTN","IBTRHRD",94,0)
4 ;
"RTN","IBTRHRD",95,0)
 D DEV
"RTN","IBTRHRD",96,0)
 Q
"RTN","IBTRHRD",97,0)
 ;
"RTN","IBTRHRD",98,0)
STAFF ; Staff ( New Person file) filter
"RTN","IBTRHRD",99,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRHRD",100,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Staff",DIR("B")="All"
"RTN","IBTRHRD",101,0)
 S DIR("?",1)="Enter 'A' to select all Staff Members."
"RTN","IBTRHRD",102,0)
 S DIR("?")="Enter 'S' to select specific Staff Members."
"RTN","IBTRHRD",103,0)
 S $P(DIR(0),"^",2)="A:All Staff Members;S:Selected Staff Members"
"RTN","IBTRHRD",104,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRD",105,0)
 I $G(DIRUT) Q 0
"RTN","IBTRHRD",106,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRHRD",107,0)
 S $P(FILTERS(0),"^",3)=$S(Y="A":0,1:1)
"RTN","IBTRHRD",108,0)
 ; Set staff
"RTN","IBTRHRD",109,0)
 I $P(FILTERS(0),"^",3)=1 D ASKSTAFF(.FILTERS)
"RTN","IBTRHRD",110,0)
 Q
"RTN","IBTRHRD",111,0)
 ;
"RTN","IBTRHRD",112,0)
PAT ; Patient filter
"RTN","IBTRHRD",113,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRHRD",114,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Patient(s)",DIR("B")="All"
"RTN","IBTRHRD",115,0)
 S DIR("?",1)="Enter 'A' to select all Patients."
"RTN","IBTRHRD",116,0)
 S DIR("?")="Enter 'S' to select specific Patients."
"RTN","IBTRHRD",117,0)
 S $P(DIR(0),"^",2)="A:All Patients;S:Selected Patients"
"RTN","IBTRHRD",118,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRD",119,0)
 I $G(DIRUT) Q 0
"RTN","IBTRHRD",120,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRHRD",121,0)
 S $P(FILTERS(0),"^",4)=$S(Y="A":0,1:1)
"RTN","IBTRHRD",122,0)
 ; Set Patient
"RTN","IBTRHRD",123,0)
 I $P(FILTERS(0),"^",4)=1 D ASKPAT(.FILTERS)
"RTN","IBTRHRD",124,0)
 Q
"RTN","IBTRHRD",125,0)
 ;
"RTN","IBTRHRD",126,0)
DEV ; -- select device, run option
"RTN","IBTRHRD",127,0)
 ;W !!,"You will need a 132 column printer for this report!",!
"RTN","IBTRHRD",128,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBTRHRD",129,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBTRHRD",ZTSAVE("IB*")="",ZTDESC="IB - 278 Statistical Volume Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
"RTN","IBTRHRD",130,0)
 ;
"RTN","IBTRHRD",131,0)
 U IO
"RTN","IBTRHRD",132,0)
 S X=80 X ^%ZOSF("RM")
"RTN","IBTRHRD",133,0)
DQ D PRINT G END
"RTN","IBTRHRD",134,0)
 Q
"RTN","IBTRHRD",135,0)
 ;
"RTN","IBTRHRD",136,0)
END ; -- Clean up
"RTN","IBTRHRD",137,0)
 ;;K ^TMP($J) W !
"RTN","IBTRHRD",138,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTRHRD",139,0)
 D ^%ZISC
"RTN","IBTRHRD",140,0)
 K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT
"RTN","IBTRHRD",141,0)
 Q
"RTN","IBTRHRD",142,0)
 ;
"RTN","IBTRHRD",143,0)
PRINT ; -- print one billing report from ct
"RTN","IBTRHRD",144,0)
 W !,"Compiling report data..."
"RTN","IBTRHRD",145,0)
 N SDT,EDT,IEN,NODE0,PATIEN,INSIEN,IBQUIT,IBPAG,CERT,PATINS,STAFF
"RTN","IBTRHRD",146,0)
 S IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0,IBPAG=0
"RTN","IBTRHRD",147,0)
 K ^TMP($J)
"RTN","IBTRHRD",148,0)
 S SDT=$P(FILTERS(4),"^"),EDT=$P(FILTERS(4),"^",2)
"RTN","IBTRHRD",149,0)
 F  S SDT=$O(^IBT(356.22,"F",SDT)) Q:SDT=""  Q:$P(SDT,".")>EDT  D
"RTN","IBTRHRD",150,0)
 . S IEN=0 F  S IEN=$O(^IBT(356.22,"F",SDT,IEN)) Q:IEN=""  Q:$G(IBQUIT)  D
"RTN","IBTRHRD",151,0)
 .. S NODE0=$G(^IBT(356.22,IEN,0)) I NODE0'="" D
"RTN","IBTRHRD",152,0)
 ... I $P(NODE0,"^",20)=2 Q  ;skip response entries 1/19/16
"RTN","IBTRHRD",153,0)
 ... ;;I $P(NODE0,"^",15)="" Q  ;must have been submitted
"RTN","IBTRHRD",154,0)
 ... ;I $P(NODE0,"^",11)="" Q  ;278 has not been 'worked' for submission
"RTN","IBTRHRD",155,0)
 ... S PATIEN=$P(NODE0,"^",2),INSIEN=$P(NODE0,"^",3)
"RTN","IBTRHRD",156,0)
 ... I PATIEN="" Q
"RTN","IBTRHRD",157,0)
 ... I INSIEN="" Q
"RTN","IBTRHRD",158,0)
 ... S PATINS=$P($G(^DPT(PATIEN,.312,INSIEN,0)),"^") I PATINS="" Q
"RTN","IBTRHRD",159,0)
 ... S OK=1
"RTN","IBTRHRD",160,0)
 ... I $P(FILTERS(0),"^")=1 D  I 'OK Q
"RTN","IBTRHRD",161,0)
 .... S STAFF=$P(NODE0,"^",24) I STAFF="" S OK=0 Q
"RTN","IBTRHRD",162,0)
 .... I $P(FILTERS(0),"^",3) D  I 'OK Q
"RTN","IBTRHRD",163,0)
 ..... I '$D(FILTERS(2,STAFF)) S OK=0 Q
"RTN","IBTRHRD",164,0)
 ..... Q
"RTN","IBTRHRD",165,0)
 .... Q
"RTN","IBTRHRD",166,0)
 ... I $P(FILTERS(0),"^")=2 D  I 'OK Q
"RTN","IBTRHRD",167,0)
 .... I $P(FILTERS(0),"^",4) D  I 'OK Q
"RTN","IBTRHRD",168,0)
 ..... I '$D(FILTERS(3,PATIEN)) S OK=0 Q
"RTN","IBTRHRD",169,0)
 ..... Q
"RTN","IBTRHRD",170,0)
 .... Q
"RTN","IBTRHRD",171,0)
 ... D SET
"RTN","IBTRHRD",172,0)
 .. Q
"RTN","IBTRHRD",173,0)
 . Q
"RTN","IBTRHRD",174,0)
 ;
"RTN","IBTRHRD",175,0)
PR ;
"RTN","IBTRHRD",176,0)
 D HDR
"RTN","IBTRHRD",177,0)
 I '$D(^TMP($J,"IBTRHRD")) W !!,"No 278 Transactions found in date range.",! G PR1
"RTN","IBTRHRD",178,0)
 N Z1,Z2,Z3,TOT1,TOT2,TOT3,TOT4,TOT5,TOT6,TOT7,TOT8,TOT9,DATA,DDATA
"RTN","IBTRHRD",179,0)
 N GTOT1,GTOT2,GTOT3,GTOT4,GTOT5,GTOT6,GTOT7,GTOT8,GTOT9,D1,D2
"RTN","IBTRHRD",180,0)
 S (Z1,Z2)=""
"RTN","IBTRHRD",181,0)
 F  S Z1=$O(^TMP($J,"IBTRHRD",Z1)) Q:Z1=""!($G(IBQUIT))  D  Q:IBQUIT
"RTN","IBTRHRD",182,0)
 . S Z2=""  F  S Z2=$O(^TMP($J,"IBTRHRD",Z1,Z2)) Q:Z2=""!($G(IBQUIT))  S DATA=$G(^(Z2)) I DATA'="" D
"RTN","IBTRHRD",183,0)
 .. I ($Y+5)>IOSL D HDR Q:IBQUIT
"RTN","IBTRHRD",184,0)
 .. I $P(FILTERS(0),"^",6)=1 W !,$E(Z1,1,23) I $P(FILTERS(0),"^")'=3 W ?25,$E(Z2,4,5),"/",$E(Z2,6,7),"/",$E(Z2,2,3)
"RTN","IBTRHRD",185,0)
 .. I $P(FILTERS(0),"^",6)=2 D
"RTN","IBTRHRD",186,0)
 ... I $P(FILTERS(0),"^")=3 W !,$E(Z1,4,5),"/",$E(Z1,6,7),"/",$S($E(Z1)=3:20,1:19),$E(Z1,2,3) Q
"RTN","IBTRHRD",187,0)
 ... W !,$E(Z2,1,23),?25,$E(Z1,4,5),"/",$E(Z1,6,7),"/",$E(Z1,2,3)
"RTN","IBTRHRD",188,0)
 .. W ?47,$J(+$P(DATA,"^"),3),?69,$J(+$P(DATA,"^",2),3)
"RTN","IBTRHRD",189,0)
 .. I $P(FILTERS(0),"^",8),$O(^TMP($J,"IBTRHRD",Z1,Z2,"")) D
"RTN","IBTRHRD",190,0)
 ... W !?10,"Detail Delete Reason:",?40,"---"
"RTN","IBTRHRD",191,0)
 ... S Z3="" F  S Z3=$O(^TMP($J,"IBTRHRD",Z1,Z2,Z3)) Q:Z3=""  S DDATA=$G(^(Z3)) I DDATA D
"RTN","IBTRHRD",192,0)
 .... S D1=$$GET1^DIQ(356.023,Z3_",",.01)
"RTN","IBTRHRD",193,0)
 .... S D2=$$GET1^DIQ(356.023,Z3_",",.02)
"RTN","IBTRHRD",194,0)
 .... W !?10,D1,"-",$E(D2,1,25),?41,DDATA
"RTN","IBTRHRD",195,0)
 .... Q
"RTN","IBTRHRD",196,0)
 .. S TOT1=$G(TOT1)+$P(DATA,"^"),TOT2=$G(TOT2)+$P(DATA,"^",2)
"RTN","IBTRHRD",197,0)
 . I +$G(TOT1)=0,+$G(TOT2)=0 Q
"RTN","IBTRHRD",198,0)
 . I $P(FILTERS(0),"^")'=3 D  ;don't print subtotals when selecting by date
"RTN","IBTRHRD",199,0)
 .. N CHK S CHK=$O(FILTERS(2,"")) I CHK'="",$O(FILTERS(2,CHK))="" Q
"RTN","IBTRHRD",200,0)
 .. S CHK=$O(FILTERS(3,"")) I CHK'="",$O(FILTERS(2,CHK))="" Q
"RTN","IBTRHRD",201,0)
 .. W !?38,$TR($J(" ",42)," ","-")
"RTN","IBTRHRD",202,0)
 .. W !,"   Total"
"RTN","IBTRHRD",203,0)
 .. W ?46,$J(TOT1,4),?68,$J(TOT2,4)
"RTN","IBTRHRD",204,0)
 .. W !
"RTN","IBTRHRD",205,0)
 . S GTOT1=$G(GTOT1)+$G(TOT1),GTOT2=$G(GTOT2)+$G(TOT2)
"RTN","IBTRHRD",206,0)
 . S (TOT1,TOT2)=""
"RTN","IBTRHRD",207,0)
 . Q
"RTN","IBTRHRD",208,0)
 I +$G(GTOT1)=0,+$G(GTOT2)=0 G PR1
"RTN","IBTRHRD",209,0)
 W !,?25,$TR($J(" ",55)," ","=")
"RTN","IBTRHRD",210,0)
 W !,"Grand Total"
"RTN","IBTRHRD",211,0)
 W ?46,$J(GTOT1,4),?68,$J(GTOT2,4)
"RTN","IBTRHRD",212,0)
 W !
"RTN","IBTRHRD",213,0)
PR1 ;
"RTN","IBTRHRD",214,0)
 W !,?(80-$L("*** END OF REPORT ***")\2),"*** END OF REPORT ***"
"RTN","IBTRHRD",215,0)
 I $D(ZTQUEUED) G END
"RTN","IBTRHRD",216,0)
 Q
"RTN","IBTRHRD",217,0)
 ;
"RTN","IBTRHRD",218,0)
HDR ; -- Print header for billing report
"RTN","IBTRHRD",219,0)
 Q:IBQUIT
"RTN","IBTRHRD",220,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBTRHRD",221,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBTRHRD",222,0)
 S IBPAG=IBPAG+1
"RTN","IBTRHRD",223,0)
 W !," 278 Deletion Disposition Report",?40,IBHDT,?72,"Page: ",IBPAG
"RTN","IBTRHRD",224,0)
 W !," Sort by: ",$S($P(FILTERS(0),"^",6)=1:$S($P(FILTERS(0),"^")=1:"Staff",1:"Patient"),1:"Date")
"RTN","IBTRHRD",225,0)
 W !,?30,"Report Timeframe:"
"RTN","IBTRHRD",226,0)
 S SDT=$P(FILTERS(4),"^"),EDT=$P(FILTERS(4),"^",2)
"RTN","IBTRHRD",227,0)
 W !,?27,$E(SDT,4,5),"/",$E(SDT,6,7),"/",$S($E(SDT)=3:20,1:19),$E(SDT,2,3)
"RTN","IBTRHRD",228,0)
 W " - ",$E(EDT,4,5),"/",$E(EDT,6,7),"/",$S($E(EDT)=3:20,1:19),$E(EDT,2,3)
"RTN","IBTRHRD",229,0)
 I $P(FILTERS(0),"^")=1 W !?31,$S($P(FILTERS(0),"^",3)=1:"Selected",1:"All")," Staff"
"RTN","IBTRHRD",230,0)
 I $P(FILTERS(0),"^")=2 W !?31,$S($P(FILTERS(0),"^",4)=1:"Selected",1:"All")," Patient(s)"
"RTN","IBTRHRD",231,0)
 I $P(FILTERS(0),"^")=3 W !?31,"Selected Dates"
"RTN","IBTRHRD",232,0)
 W !!,$S($P(FILTERS(0),"^")=1:"Staff",$P(FILTERS(0),"^")=2:"Patient",1:"Date")
"RTN","IBTRHRD",233,0)
 I $P(FILTERS(0),"^")'=3 W ?27,"Date"
"RTN","IBTRHRD",234,0)
 W ?43,"#278s Submitted",?64,"#Delete Reasons"
"RTN","IBTRHRD",235,0)
 W !,$TR($J(" ",80)," ","=")
"RTN","IBTRHRD",236,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request"
"RTN","IBTRHRD",237,0)
 Q
"RTN","IBTRHRD",238,0)
 ;
"RTN","IBTRHRD",239,0)
SET ; -- set tmp array
"RTN","IBTRHRD",240,0)
 N PIECE,ST1,ST2,INS,DATE,TRANST,DELETE,COUNT
"RTN","IBTRHRD",241,0)
 S TRANST=+$P(NODE0,"^",20)
"RTN","IBTRHRD",242,0)
 I $P(FILTERS(0),"^")=1 D
"RTN","IBTRHRD",243,0)
 . I $D(FILTERS(2,STAFF)) S INS=FILTERS(2,STAFF)
"RTN","IBTRHRD",244,0)
 . E  S INS=$$GET1^DIQ(200,STAFF_",",.01)
"RTN","IBTRHRD",245,0)
 . I INS="" S INS="UNKNOWN" Q
"RTN","IBTRHRD",246,0)
 I $P(FILTERS(0),"^")=2 D
"RTN","IBTRHRD",247,0)
 . I $D(FILTERS(3,PATIEN)) S INS=FILTERS(3,PATIEN)
"RTN","IBTRHRD",248,0)
 . E  S INS=$$GET1^DIQ(2,PATIEN_",",.01)
"RTN","IBTRHRD",249,0)
 . I INS="" S INS="INKNOWN" Q
"RTN","IBTRHRD",250,0)
 I $P(FILTERS(0),"^")=3 S INS=$P(SDT,".")
"RTN","IBTRHRD",251,0)
 I $P(FILTERS(0),"^",6)=1 S ST1=INS,ST2=$P(SDT,".")
"RTN","IBTRHRD",252,0)
 I $P(FILTERS(0),"^",6)=2 S ST1=$P(SDT,"."),ST2=INS
"RTN","IBTRHRD",253,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 D HDR W !!,"....task stopped at user request" Q
"RTN","IBTRHRD",254,0)
 S DELETE=$P(NODE0,"^",25)
"RTN","IBTRHRD",255,0)
 S COUNT=$G(^TMP($J,"IBTRHRD",ST1,ST2))
"RTN","IBTRHRD",256,0)
 ; count[1] = number of 278s submitted
"RTN","IBTRHRD",257,0)
 I +TRANST<2,$P(NODE0,"^",12)'="" S $P(COUNT,"^")=$P(COUNT,"^")+1
"RTN","IBTRHRD",258,0)
 ; count[2] = number of 278s deleted
"RTN","IBTRHRD",259,0)
 I DELETE D
"RTN","IBTRHRD",260,0)
 . S $P(COUNT,"^",2)=$P(COUNT,"^",2)+1
"RTN","IBTRHRD",261,0)
 . I +$P(FILTERS(0),"^",8) S ^(DELETE)=$G(^TMP($J,"IBTRHRD",ST1,ST2,DELETE))+1
"RTN","IBTRHRD",262,0)
 S ^TMP($J,"IBTRHRD",ST1,ST2)=COUNT
"RTN","IBTRHRD",263,0)
 Q
"RTN","IBTRHRD",264,0)
 ;
"RTN","IBTRHRD",265,0)
FMDATES(PROMPT) ; ask for date range
"RTN","IBTRHRD",266,0)
 N %DT,X,Y,DT1,DT2,IB1,IB2
"RTN","IBTRHRD",267,0)
 S DT1="",IB1="Start Date: ",IB2="End Date: "
"RTN","IBTRHRD",268,0)
 I $G(PROMPT)'="" S IB1="Start with "_PROMPT_": ",IB2="Go to "_PROMPT_": "
"RTN","IBTRHRD",269,0)
FM1 ;
"RTN","IBTRHRD",270,0)
 S %DT="AEX",%DT("A")=IB1 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM1E:(Y<0&(X="")),FMDQ
"RTN","IBTRHRD",271,0)
 S (%DT(0),DT2)=$P(Y,".",1) I DT2'>DT S %DT("B")="Today"
"RTN","IBTRHRD",272,0)
FM2 ;
"RTN","IBTRHRD",273,0)
 S %DT="AEX",%DT("A")=IB2 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM2E:(Y<0&(X="")),FMDQ
"RTN","IBTRHRD",274,0)
 S DT1=DT2_"^"_$P(Y,".",1)
"RTN","IBTRHRD",275,0)
FMDQ ;
"RTN","IBTRHRD",276,0)
 Q DT1
"RTN","IBTRHRD",277,0)
FM1E ;
"RTN","IBTRHRD",278,0)
 W !,"A date must be entered." G FM1
"RTN","IBTRHRD",279,0)
FM2E ;
"RTN","IBTRHRD",280,0)
 W !,"A date must be entered." G FM2
"RTN","IBTRHRD",281,0)
 Q
"RTN","IBTRHRD",282,0)
 ;
"RTN","IBTRHRD",283,0)
ASKSTAFF(FILTERS)   ; Sets a list of staff
"RTN","IBTRHRD",284,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRHRD",285,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRHRD",286,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,IBIENS,IEN,N,NM,NODE,X,XX,Y
"RTN","IBTRHRD",287,0)
 S DIC=200,DIC(0)="AEM"
"RTN","IBTRHRD",288,0)
 F  D  Q:+IEN<1
"RTN","IBTRHRD",289,0)
 . D ONE(.DIC,.IEN)
"RTN","IBTRHRD",290,0)
 . Q:+IEN<1
"RTN","IBTRHRD",291,0)
 . S FILTERS(2,$P(IEN,"^"))=$P(IEN,"^",2)
"RTN","IBTRHRD",292,0)
 Q
"RTN","IBTRHRD",293,0)
 ;
"RTN","IBTRHRD",294,0)
ONE(DIC,IEN)  ; Prompts the user for Payer
"RTN","IBTRHRD",295,0)
 ; Input:   DIC     - Variable/Array of settings needed for ^DIC call
"RTN","IBTRHRD",296,0)
 ;          
"RTN","IBTRHRD",297,0)
 ; Output:  IEN     - IEN of the selected Payer Entry
"RTN","IBTRHRD",298,0)
 ;                    null if no selection was made
"RTN","IBTRHRD",299,0)
 S DIC("A")="Select "_$S(DIC=200:"Staff Member: ",DIC="^VA(200,":"Staff Member: ",DIC=2:"Patient: ",DIC="^DPT(":"Patient: ",1:"Payer: ")
"RTN","IBTRHRD",300,0)
 D ^DIC
"RTN","IBTRHRD",301,0)
 S IEN=Y
"RTN","IBTRHRD",302,0)
 Q
"RTN","IBTRHRD",303,0)
 ;
"RTN","IBTRHRD",304,0)
ASKPAT(FILTERS) ; Sets a list of Patients
"RTN","IBTRHRD",305,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRHRD",306,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRHRD",307,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,IBIENS,IEN,N,NM,NODE,X,XX,Y
"RTN","IBTRHRD",308,0)
 S DIC=2,DIC(0)="AEM"
"RTN","IBTRHRD",309,0)
 F  D  Q:+IEN<1
"RTN","IBTRHRD",310,0)
 . D ONE(.DIC,.IEN)
"RTN","IBTRHRD",311,0)
 . Q:+IEN<1
"RTN","IBTRHRD",312,0)
 . S FILTERS(3,$P(IEN,"^"))=$P(IEN,"^",2)
"RTN","IBTRHRD",313,0)
 Q
"RTN","IBTRHRS")
0^52^B158405913^n/a
"RTN","IBTRHRS",1,0)
IBTRHRS ;ALB/JWS - CLAIMS TRACKING 278 STATISTICAL REPORT ;24-AUG-2015
"RTN","IBTRHRS",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRHRS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRHRS",4,0)
 ;
"RTN","IBTRHRS",5,0)
% ;
"RTN","IBTRHRS",6,0)
 ; FILTERS array is built
"RTN","IBTRHRS",7,0)
 ; FILTERS(0)[1] = 1 if report by Staff
"RTN","IBTRHRS",8,0)
 ;                 2 if report by Patient
"RTN","IBTRHRS",9,0)
 ;                 3 if report by Date
"RTN","IBTRHRS",10,0)
 ; FILTERS(0)[2] = 
"RTN","IBTRHRS",11,0)
 ; FILTERS(0)[3] = 0 (or null) if All staff, 1 if selected staff
"RTN","IBTRHRS",12,0)
 ; FILTERS(0)[4] = 0 (or null) if All Patients, 1 if selected patients
"RTN","IBTRHRS",13,0)
 ; FILTERS(0)[5] =
"RTN","IBTRHRS",14,0)
 ; FILTERS(0)[6] = sort, 1 = name, 2 = date
"RTN","IBTRHRS",15,0)
 ; FILTERS(2,staff name) = ien
"RTN","IBTRHRS",16,0)
 ; FILTERS(3,patient name) = ien
"RTN","IBTRHRS",17,0)
 ; FILTERS(4)[1] = from date
"RTN","IBTRHRS",18,0)
 ; FILTERS(4)[2] = through date
"RTN","IBTRHRS",19,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,RPTDATE,IBQUIT,FILTERS,OK
"RTN","IBTRHRS",20,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRHRS",21,0)
 W !!,"278 Statistical Volume Report"
"RTN","IBTRHRS",22,0)
 ; selection filter
"RTN","IBTRHRS",23,0)
 S DIR(0)="S^1:Report by Staff;2:Report by Patient;3:Report by Date Range^I '$F("",1,2,3"","",""_X) K X"
"RTN","IBTRHRS",24,0)
 S DIR("A")="Select the type of report to generate"
"RTN","IBTRHRS",25,0)
 S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRS",26,0)
 S DIR("L",2)=""
"RTN","IBTRHRS",27,0)
 S DIR("L",3)="1    Report by Staff"
"RTN","IBTRHRS",28,0)
 S DIR("L",4)="2    Report by Patient"
"RTN","IBTRHRS",29,0)
 S DIR("L",5)="3    Report by Date Range"
"RTN","IBTRHRS",30,0)
 S DIR("?",1)="Select how you wish to select the entries to display on the report."
"RTN","IBTRHRS",31,0)
 S DIR("?",2)=""
"RTN","IBTRHRS",32,0)
 S DIR("?",3)="1 will allow you to select one or more Staff members to report on."
"RTN","IBTRHRS",33,0)
 S DIR("?",4)="2 will allow you to select one or more Patients to report on."
"RTN","IBTRHRS",34,0)
 S DIR("?")="3 will allow you to select a Date Range of 278 transactions to report on."
"RTN","IBTRHRS",35,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRS",36,0)
 I $G(DIRUT) Q
"RTN","IBTRHRS",37,0)
 S FILTERS(0)=Y
"RTN","IBTRHRS",38,0)
 I Y=1 D STAFF G 1
"RTN","IBTRHRS",39,0)
 I Y=3 G 1
"RTN","IBTRHRS",40,0)
 I Y=2 D PAT
"RTN","IBTRHRS",41,0)
 ;
"RTN","IBTRHRS",42,0)
1 ;
"RTN","IBTRHRS",43,0)
 S RPTDATE=$$FMDATES("") I RPTDATE="" Q
"RTN","IBTRHRS",44,0)
 S FILTERS(4)=RPTDATE
"RTN","IBTRHRS",45,0)
 S DIR(0)="Y",DIR("A")="Include Rejection/Review Decision Code",DIR("B")="NO"
"RTN","IBTRHRS",46,0)
 S DIR("?",1)="     Enter:  'Y'  -  to include Rejection/Review Decision Reason Codes on report."
"RTN","IBTRHRS",47,0)
 S DIR("?",2)="             'N'  -  to exclude Rejection/Review Decision Reason Codes on report."
"RTN","IBTRHRS",48,0)
 S DIR("?")="             '^'  -  to exit this report."
"RTN","IBTRHRS",49,0)
 D ^DIR K DIR
"RTN","IBTRHRS",50,0)
 I $G(DIRUT) Q
"RTN","IBTRHRS",51,0)
 S $P(FILTERS(0),"^",5)=+Y
"RTN","IBTRHRS",52,0)
 I $P(FILTERS(0),"^")=3 S $P(FILTERS(0),"^",6)=2 G 4
"RTN","IBTRHRS",53,0)
 I $P(FILTERS(0),"^")=2 G 3
"RTN","IBTRHRS",54,0)
 ;
"RTN","IBTRHRS",55,0)
2 ;
"RTN","IBTRHRS",56,0)
 S OK=1,X=$P(FILTERS(0),"^",3)
"RTN","IBTRHRS",57,0)
 I X S X=$O(FILTERS(2,"")) I X,$O(FILTERS(2,X))="" S OK=0,$P(FILTERS(0),"^",6)=1
"RTN","IBTRHRS",58,0)
 I OK D  I $G(DIRUT) Q
"RTN","IBTRHRS",59,0)
 . S DIR(0)="S^1:Staff Name;2:Date^I '$F("",1,2"",X) K X"
"RTN","IBTRHRS",60,0)
 . S DIR("A")="Select the Primary Sort"
"RTN","IBTRHRS",61,0)
 . S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRS",62,0)
 . S DIR("L",2)=""
"RTN","IBTRHRS",63,0)
 . S DIR("L",3)="1    Staff Name"
"RTN","IBTRHRS",64,0)
 . S DIR("L",4)="2    Date"
"RTN","IBTRHRS",65,0)
 . S DIR("?",1)="Select how you wish to sort the entries on this report."
"RTN","IBTRHRS",66,0)
 . S DIR("?",2)=""
"RTN","IBTRHRS",67,0)
 . S DIR("?",3)="1 will sort the entries by Staff Name."
"RTN","IBTRHRS",68,0)
 . S DIR("?")="2 will sort the entries by 278 Transaction Date."
"RTN","IBTRHRS",69,0)
 . W ! D ^DIR K DIR
"RTN","IBTRHRS",70,0)
 . I $G(DIRUT) Q
"RTN","IBTRHRS",71,0)
 . S $P(FILTERS(0),"^",6)=Y
"RTN","IBTRHRS",72,0)
 . Q
"RTN","IBTRHRS",73,0)
 G 4
"RTN","IBTRHRS",74,0)
 ;
"RTN","IBTRHRS",75,0)
3 ;
"RTN","IBTRHRS",76,0)
 S OK=1,X=$P(FILTERS(0),"^",4)
"RTN","IBTRHRS",77,0)
 I X S X=$O(FILTERS(3,"")) I X,$O(FILTERS(3,X))="" S OK=0,$P(FILTERS(0),"^",6)=1
"RTN","IBTRHRS",78,0)
 I OK D  I $G(DIRUT) Q
"RTN","IBTRHRS",79,0)
 . S DIR(0)="S^1:Patient Name;2:Date^I '$F("",1,2"",X) K X"
"RTN","IBTRHRS",80,0)
 . S DIR("A")="Select the Primary Sort"
"RTN","IBTRHRS",81,0)
 . S DIR("L",1)="Select one of the following:"
"RTN","IBTRHRS",82,0)
 . S DIR("L",2)=""
"RTN","IBTRHRS",83,0)
 . S DIR("L",3)="1    Patient Name"
"RTN","IBTRHRS",84,0)
 . S DIR("L",4)="2    Date"
"RTN","IBTRHRS",85,0)
 . S DIR("?",1)="Select how you wish to sort the entries on this report."
"RTN","IBTRHRS",86,0)
 . S DIR("?",2)=""
"RTN","IBTRHRS",87,0)
 . S DIR("?",3)="1 will sort the entries by Patient Name."
"RTN","IBTRHRS",88,0)
 . S DIR("?")="2 will sort the entries by 278 Transaction Date."
"RTN","IBTRHRS",89,0)
 . W ! D ^DIR K DIR
"RTN","IBTRHRS",90,0)
 . I $G(DIRUT) Q
"RTN","IBTRHRS",91,0)
 . S $P(FILTERS(0),"^",6)=Y
"RTN","IBTRHRS",92,0)
 . Q
"RTN","IBTRHRS",93,0)
4 ;
"RTN","IBTRHRS",94,0)
 D DEV
"RTN","IBTRHRS",95,0)
 Q
"RTN","IBTRHRS",96,0)
 ;
"RTN","IBTRHRS",97,0)
STAFF ; Staff ( New Person file) filter
"RTN","IBTRHRS",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRHRS",99,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Staff",DIR("B")="All"
"RTN","IBTRHRS",100,0)
 S DIR("?",1)="Enter 'A' to select all Staff Members."
"RTN","IBTRHRS",101,0)
 S DIR("?")="Enter 'S' to select specific Staff Members."
"RTN","IBTRHRS",102,0)
 S $P(DIR(0),"^",2)="A:All Staff Members;S:Selected Staff Members"
"RTN","IBTRHRS",103,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRS",104,0)
 I $G(DIRUT) Q 0
"RTN","IBTRHRS",105,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRHRS",106,0)
 S $P(FILTERS(0),"^",3)=$S(Y="A":0,1:1)
"RTN","IBTRHRS",107,0)
 ; Set staff
"RTN","IBTRHRS",108,0)
 I $P(FILTERS(0),"^",3)=1 D ASKSTAFF(.FILTERS)
"RTN","IBTRHRS",109,0)
 Q
"RTN","IBTRHRS",110,0)
 ;
"RTN","IBTRHRS",111,0)
PAT ; Patient filter
"RTN","IBTRHRS",112,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRHRS",113,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Patient(s)",DIR("B")="All"
"RTN","IBTRHRS",114,0)
 S DIR("?",1)="Enter 'A' to select all Patients."
"RTN","IBTRHRS",115,0)
 S DIR("?")="Enter 'S' to select specific Patients."
"RTN","IBTRHRS",116,0)
 S $P(DIR(0),"^",2)="A:All Patients;S:Selected Patients"
"RTN","IBTRHRS",117,0)
 W ! D ^DIR K DIR
"RTN","IBTRHRS",118,0)
 I $G(DIRUT) Q 0
"RTN","IBTRHRS",119,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBTRHRS",120,0)
 S $P(FILTERS(0),"^",4)=$S(Y="A":0,1:1)
"RTN","IBTRHRS",121,0)
 ; Set Patient
"RTN","IBTRHRS",122,0)
 I $P(FILTERS(0),"^",4)=1 D ASKPAT(.FILTERS)
"RTN","IBTRHRS",123,0)
 Q
"RTN","IBTRHRS",124,0)
 ;
"RTN","IBTRHRS",125,0)
DEV ; -- select device, run option
"RTN","IBTRHRS",126,0)
 ;W !!,"You will need a 132 column printer for this report!",!
"RTN","IBTRHRS",127,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBTRHRS",128,0)
 I $D(IO("Q")) S ZTRTN="DQ^IBTRHRS",ZTSAVE("IB*")="",ZTDESC="IB - 278 Statistical Volume Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
"RTN","IBTRHRS",129,0)
 ;
"RTN","IBTRHRS",130,0)
 U IO
"RTN","IBTRHRS",131,0)
 S X=80 X ^%ZOSF("RM")
"RTN","IBTRHRS",132,0)
DQ D PRINT G END
"RTN","IBTRHRS",133,0)
 Q
"RTN","IBTRHRS",134,0)
 ;
"RTN","IBTRHRS",135,0)
END ; -- Clean up
"RTN","IBTRHRS",136,0)
 ;;K ^TMP($J) W !
"RTN","IBTRHRS",137,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTRHRS",138,0)
 D ^%ZISC
"RTN","IBTRHRS",139,0)
 K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT
"RTN","IBTRHRS",140,0)
 Q
"RTN","IBTRHRS",141,0)
 ;
"RTN","IBTRHRS",142,0)
PRINT ; -- print one billing report from ct
"RTN","IBTRHRS",143,0)
 W !,"Compiling report data..."
"RTN","IBTRHRS",144,0)
 N SDT,EDT,IEN,NODE0,PATIEN,INSIEN,IBQUIT,IBPAG,CERT,AUTH,PATINS,STAFF,XRESP
"RTN","IBTRHRS",145,0)
 S IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0,IBPAG=0
"RTN","IBTRHRS",146,0)
 K ^TMP($J)
"RTN","IBTRHRS",147,0)
 S SDT=$P(FILTERS(4),"^"),EDT=$P(FILTERS(4),"^",2)
"RTN","IBTRHRS",148,0)
 F  S SDT=$O(^IBT(356.22,"AC",SDT)) Q:SDT=""  Q:$P(SDT,".")>EDT  D
"RTN","IBTRHRS",149,0)
 . S IEN=0 F  S IEN=$O(^IBT(356.22,"AC",SDT,IEN)) Q:IEN=""  Q:$G(IBQUIT)  D
"RTN","IBTRHRS",150,0)
 .. S NODE0=$G(^IBT(356.22,IEN,0)) I NODE0'="" D
"RTN","IBTRHRS",151,0)
 ... I $P(NODE0,"^",15)="" Q  ;must have been submitted
"RTN","IBTRHRS",152,0)
 ... S PATIEN=$P(NODE0,"^",2),INSIEN=$P(NODE0,"^",3)
"RTN","IBTRHRS",153,0)
 ... I PATIEN="" Q
"RTN","IBTRHRS",154,0)
 ... I INSIEN="" Q
"RTN","IBTRHRS",155,0)
 ... S PATINS=$P($G(^DPT(PATIEN,.312,INSIEN,0)),"^") I PATINS="" Q
"RTN","IBTRHRS",156,0)
 ... S OK=1
"RTN","IBTRHRS",157,0)
 ... I $P(FILTERS(0),"^")=1 D  I 'OK Q
"RTN","IBTRHRS",158,0)
 .... S STAFF=$P(NODE0,"^",11) I STAFF="" S OK=0 Q
"RTN","IBTRHRS",159,0)
 .... I $P(FILTERS(0),"^",3) D  I 'OK Q
"RTN","IBTRHRS",160,0)
 ..... I '$D(FILTERS(2,STAFF)) S OK=0 Q
"RTN","IBTRHRS",161,0)
 ..... Q
"RTN","IBTRHRS",162,0)
 .... Q
"RTN","IBTRHRS",163,0)
 ... I $P(FILTERS(0),"^")=2 D  I 'OK Q
"RTN","IBTRHRS",164,0)
 .... I $P(FILTERS(0),"^",4) D  I 'OK Q
"RTN","IBTRHRS",165,0)
 ..... I '$D(FILTERS(3,PATIEN)) S OK=0 Q
"RTN","IBTRHRS",166,0)
 ..... Q
"RTN","IBTRHRS",167,0)
 .... Q
"RTN","IBTRHRS",168,0)
 ... S XRESP=$P(^IBT(356.22,IEN,0),"^",14)
"RTN","IBTRHRS",169,0)
 ... S CERT=$P($G(^IBT(356.22,+XRESP,103)),"^")
"RTN","IBTRHRS",170,0)
 ... S AUTH=$P($G(^IBT(356.22,+XRESP,103)),"^",3)
"RTN","IBTRHRS",171,0)
 ... D SET
"RTN","IBTRHRS",172,0)
 .. Q
"RTN","IBTRHRS",173,0)
 . Q
"RTN","IBTRHRS",174,0)
 ;
"RTN","IBTRHRS",175,0)
PR ;
"RTN","IBTRHRS",176,0)
 D HDR
"RTN","IBTRHRS",177,0)
 I '$D(^TMP($J,"IBTRHRS")) W !!,"No 278 Transactions found in date range.",! G PR1
"RTN","IBTRHRS",178,0)
 N Z1,Z2,Z3,TOT1,TOT2,TOT3,TOT4,TOT5,TOT6,TOT7,TOT8,TOT9,DATA,DDATA
"RTN","IBTRHRS",179,0)
 N GTOT1,GTOT2,GTOT3,GTOT4,GTOT5,GTOT6,GTOT7,GTOT8,GTOT9,D1,D2,TAB,TOT
"RTN","IBTRHRS",180,0)
 S (Z1,Z2)=""
"RTN","IBTRHRS",181,0)
 F  S Z1=$O(^TMP($J,"IBTRHRS",Z1)) Q:Z1=""!($G(IBQUIT))  D  Q:IBQUIT
"RTN","IBTRHRS",182,0)
 . S Z2=""  F  S Z2=$O(^TMP($J,"IBTRHRS",Z1,Z2)) Q:Z2=""!($G(IBQUIT))  S DATA=$G(^(Z2)) I DATA'="" D
"RTN","IBTRHRS",183,0)
 .. I ($Y+5)>IOSL D HDR Q:IBQUIT
"RTN","IBTRHRS",184,0)
 .. I $P(FILTERS(0),"^",6)=1 W !,$E(Z1,1,16) I $P(FILTERS(0),"^")'=3 W ?18,$E(Z2,4,5),"/",$E(Z2,6,7),"/",$E(Z2,2,3)
"RTN","IBTRHRS",185,0)
 .. I $P(FILTERS(0),"^",6)=2 D
"RTN","IBTRHRS",186,0)
 ... I $P(FILTERS(0),"^")=3 W !,$E(Z1,4,5),"/",$E(Z1,6,7),"/",$S($E(Z1)=3:20,1:19),$E(Z1,2,3) Q
"RTN","IBTRHRS",187,0)
 ... W !,$E(Z2,1,16),?18,$E(Z1,4,5),"/",$E(Z1,6,7),"/",$E(Z1,2,3)
"RTN","IBTRHRS",188,0)
 .. W ?27,$J($P(DATA,"^"),3),?33,$J($P(DATA,"^",2),3)
"RTN","IBTRHRS",189,0)
 .. W ?39,$J($P(DATA,"^",3),3),?45,$J($P(DATA,"^",4),3)
"RTN","IBTRHRS",190,0)
 .. W ?51,$J($P(DATA,"^",5),3),?57,$J($P(DATA,"^",6),3)
"RTN","IBTRHRS",191,0)
 .. W ?63,$J($P(DATA,"^",7),3),?69,$J($P(DATA,"^",8),3),?75,$J($P(DATA,"^",9),3)
"RTN","IBTRHRS",192,0)
 .. I $P(FILTERS(0),"^",5),$O(^TMP($J,"IBTRHRS",Z1,Z2,"")) D
"RTN","IBTRHRS",193,0)
 ... W !?18,"Detail Rejection/Review Decision Code:",?70,"----"
"RTN","IBTRHRS",194,0)
 ... S Z3="" F  S Z3=$O(^TMP($J,"IBTRHRS",Z1,Z2,1,Z3)) Q:Z3=""  S DDATA=$G(^(Z3)) I DDATA D
"RTN","IBTRHRS",195,0)
 .... S D1=$$GET1^DIQ(356.021,Z3_",",.01)
"RTN","IBTRHRS",196,0)
 .... S D2=$$GET1^DIQ(356.021,Z3_",",.02)
"RTN","IBTRHRS",197,0)
 .... W !?18,D1,"-",D2,?72,DDATA
"RTN","IBTRHRS",198,0)
 .... Q
"RTN","IBTRHRS",199,0)
 ... S Z3="" F  S Z3=$O(^TMP($J,"IBTRHRS",Z1,Z2,2,Z3)) Q:Z3=""  S DDATA=$G(^(Z3)) I DDATA D
"RTN","IBTRHRS",200,0)
 .... S D1=$$GET1^DIQ(365.017,Z3_",",.01)
"RTN","IBTRHRS",201,0)
 .... S D2=$$GET1^DIQ(365.017,Z3_",",.02)
"RTN","IBTRHRS",202,0)
 .... W !?18,D1,"-",D2,?72,DDATA
"RTN","IBTRHRS",203,0)
 .... Q
"RTN","IBTRHRS",204,0)
 .. S TOT1=$G(TOT1)+$P(DATA,"^"),TOT2=$G(TOT2)+$P(DATA,"^",2)
"RTN","IBTRHRS",205,0)
 .. S TOT3=$G(TOT3)+$P(DATA,"^",3),TOT4=$G(TOT4)+$P(DATA,"^",4)
"RTN","IBTRHRS",206,0)
 .. S TOT5=$G(TOT5)+$P(DATA,"^",5),TOT6=$G(TOT6)+$P(DATA,"^",6)
"RTN","IBTRHRS",207,0)
 .. S TOT7=$G(TOT7)+$P(DATA,"^",7),TOT8=$G(TOT8)+$P(DATA,"^",8)
"RTN","IBTRHRS",208,0)
 .. S TOT9=$G(TOT9)+$P(DATA,"^",9)
"RTN","IBTRHRS",209,0)
 . I +$G(TOT1)=0 Q
"RTN","IBTRHRS",210,0)
 . I $P(FILTERS(0),"^")'=3 D  ;don't print subtotals when selecting by date
"RTN","IBTRHRS",211,0)
 .. N CHK S CHK=$O(FILTERS(2,"")) I CHK'="",$O(FILTERS(2,CHK))="" Q
"RTN","IBTRHRS",212,0)
 .. S CHK=$O(FILTERS(3,"")) I CHK'="",$O(FILTERS(3,CHK))="" Q
"RTN","IBTRHRS",213,0)
 .. W !?26,$TR($J(" ",54)," ","-")
"RTN","IBTRHRS",214,0)
 .. W !,"   Total"
"RTN","IBTRHRS",215,0)
 .. F I=1:1:9 S TAB=20+(6*I),TAB="?"_TAB,TOT="TOT"_I W @TAB,$J(@TOT,4)
"RTN","IBTRHRS",216,0)
 .. W !
"RTN","IBTRHRS",217,0)
 . S GTOT1=$G(GTOT1)+$G(TOT1),GTOT2=$G(GTOT2)+$G(TOT2)
"RTN","IBTRHRS",218,0)
 . S GTOT3=$G(GTOT3)+$G(TOT3),GTOT4=$G(GTOT4)+$G(TOT4)
"RTN","IBTRHRS",219,0)
 . S GTOT5=$G(GTOT5)+$G(TOT5),GTOT6=$G(GTOT6)+$G(TOT6)
"RTN","IBTRHRS",220,0)
 . S GTOT7=$G(GTOT7)+$G(TOT7),GTOT8=$G(GTOT8)+$G(TOT8)
"RTN","IBTRHRS",221,0)
 . S GTOT9=$G(GTOT9)+$G(TOT9)
"RTN","IBTRHRS",222,0)
 . S (TOT1,TOT2,TOT3,TOT4,TOT5,TOT6,TOT7,TOT8,TOT9)=""
"RTN","IBTRHRS",223,0)
 . Q
"RTN","IBTRHRS",224,0)
 I +GTOT1=0 G PR1
"RTN","IBTRHRS",225,0)
 W !,?18,$TR($J(" ",62)," ","=")
"RTN","IBTRHRS",226,0)
 W !,"Grand Total"
"RTN","IBTRHRS",227,0)
 F I=1:1:9 S TAB=20+(6*I),TAB="?"_TAB,TOT="GTOT"_I W @TAB,$J(@TOT,4)
"RTN","IBTRHRS",228,0)
 W !
"RTN","IBTRHRS",229,0)
PR1 ;
"RTN","IBTRHRS",230,0)
 W !,?(80-$L("*** END OF REPORT ***")\2),"*** END OF REPORT ***"
"RTN","IBTRHRS",231,0)
 I $D(ZTQUEUED) G END
"RTN","IBTRHRS",232,0)
 Q
"RTN","IBTRHRS",233,0)
 ;
"RTN","IBTRHRS",234,0)
HDR ; -- Print header for billing report
"RTN","IBTRHRS",235,0)
 Q:IBQUIT
"RTN","IBTRHRS",236,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBTRHRS",237,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBTRHRS",238,0)
 S IBPAG=IBPAG+1
"RTN","IBTRHRS",239,0)
 W !," 278 Statistical Volume Report",?40,IBHDT,?72,"Page: ",IBPAG
"RTN","IBTRHRS",240,0)
 W !," Sort by: ",$S($P(FILTERS(0),"^",6)=1:$S($P(FILTERS(0),"^")=1:"Staff",1:"Patient"),1:"Date")
"RTN","IBTRHRS",241,0)
 W !,?30,"Report Timeframe:"
"RTN","IBTRHRS",242,0)
 S SDT=$P(FILTERS(4),"^"),EDT=$P(FILTERS(4),"^",2)
"RTN","IBTRHRS",243,0)
 W !,?27,$E(SDT,4,5),"/",$E(SDT,6,7),"/",$S($E(SDT)=3:20,1:19),$E(SDT,2,3)
"RTN","IBTRHRS",244,0)
 W " - ",$E(EDT,4,5),"/",$E(EDT,6,7),"/",$S($E(EDT)=3:20,1:19),$E(EDT,2,3)
"RTN","IBTRHRS",245,0)
 I $P(FILTERS(0),"^")=1 W !?31,$S($P(FILTERS(0),"^",3)=1:"Selected",1:"All")," Staff"
"RTN","IBTRHRS",246,0)
 I $P(FILTERS(0),"^")=2 W !?31,$S($P(FILTERS(0),"^",4)=1:"Selected",1:"All")," Patient(s)"
"RTN","IBTRHRS",247,0)
 I $P(FILTERS(0),"^")=3 W !?31,"Selected Dates"
"RTN","IBTRHRS",248,0)
 W !!,$S($P(FILTERS(0),"^")=1:"Staff",$P(FILTERS(0),"^")=2:"Patient",1:"Date")
"RTN","IBTRHRS",249,0)
 I $P(FILTERS(0),"^")'=3 W ?18,"Date"
"RTN","IBTRHRS",250,0)
 W ?27,"#278s",?33,"#217",?39,"#215",?45,"#215",?51,"#Auth",?57,"#Rej",?63,"#Pend",?69,"AAA",?75,"Await"
"RTN","IBTRHRS",251,0)
 W !?27,"Submitted",?39,"Man",?45,"Auto",?51,"Recd",?57,"Recd"
"RTN","IBTRHRS",252,0)
 W !,$TR($J(" ",80)," ","=")
"RTN","IBTRHRS",253,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stopped at user request"
"RTN","IBTRHRS",254,0)
 Q
"RTN","IBTRHRS",255,0)
 ;
"RTN","IBTRHRS",256,0)
SET ; -- set tmp array
"RTN","IBTRHRS",257,0)
 N PIECE,ST1,ST2,INS,DATE,AUTH1,TRANST,NODE103,COUNT,AUTH2,DATA,X,XRESP
"RTN","IBTRHRS",258,0)
 S TRANST=+$P(NODE0,"^",20)
"RTN","IBTRHRS",259,0)
 I $P(FILTERS(0),"^")=1 D
"RTN","IBTRHRS",260,0)
 . I $D(FILTERS(2,STAFF)) S INS=FILTERS(2,STAFF)
"RTN","IBTRHRS",261,0)
 . E  S INS=$$GET1^DIQ(200,STAFF_",",.01),FILTERS(2,STAFF)=INS
"RTN","IBTRHRS",262,0)
 . I INS="" S INS="UNKNOWN" Q
"RTN","IBTRHRS",263,0)
 I $P(FILTERS(0),"^")=2 D
"RTN","IBTRHRS",264,0)
 . I $D(FILTERS(3,PATIEN)) S INS=FILTERS(3,PATIEN)
"RTN","IBTRHRS",265,0)
 . E  S INS=$$GET1^DIQ(2,PATIEN_",",.01),FILTERS(3,PATIEN)=INS
"RTN","IBTRHRS",266,0)
 . I INS="" S INS="INKNOWN" Q
"RTN","IBTRHRS",267,0)
 I $P(FILTERS(0),"^")=3 S INS=$P(SDT,".")
"RTN","IBTRHRS",268,0)
 I $P(FILTERS(0),"^",6)=1 S ST1=INS,ST2=$P(SDT,".")
"RTN","IBTRHRS",269,0)
 I $P(FILTERS(0),"^",6)=2 S ST1=$P(SDT,"."),ST2=INS
"RTN","IBTRHRS",270,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 D HDR W !!,"....task stopped at user request" Q
"RTN","IBTRHRS",271,0)
 S COUNT=$G(^TMP($J,"IBTRHRS",ST1,ST2))
"RTN","IBTRHRS",272,0)
 ; count[1] = number of 278s submitted
"RTN","IBTRHRS",273,0)
 I TRANST<2 S $P(COUNT,"^")=$P(COUNT,"^")+1
"RTN","IBTRHRS",274,0)
 ; count[2] = number of 278x217s
"RTN","IBTRHRS",275,0)
 I TRANST=0 S $P(COUNT,"^",2)=$P(COUNT,"^",2)+1
"RTN","IBTRHRS",276,0)
 ; count[3] = number of manual 278x215s
"RTN","IBTRHRS",277,0)
 ; count[4] = number of auto 278x215s
"RTN","IBTRHRS",278,0)
 I TRANST=1 D
"RTN","IBTRHRS",279,0)
 . I +$P(NODE0,"^",26) S $P(COUNT,"^",3)=$P(COUNT,"^",3)+1
"RTN","IBTRHRS",280,0)
 . E  S $P(COUNT,"^",4)=$P(COUNT,"^",4)+1
"RTN","IBTRHRS",281,0)
 S XRESP=$P(^IBT(356.22,IEN,0),"^",14)
"RTN","IBTRHRS",282,0)
 S NODE103=$G(^IBT(356.22,+XRESP,103))
"RTN","IBTRHRS",283,0)
 ; count[5] = number of authorizations received
"RTN","IBTRHRS",284,0)
 I $P(NODE103,"^",2) S $P(COUNT,"^",5)=$P(COUNT,"^",5)+1
"RTN","IBTRHRS",285,0)
 I CERT D  ;;W !,IEN,?10,CERT H 2
"RTN","IBTRHRS",286,0)
 . S CERT=$$GET1^DIQ(356.02,CERT_",",.01)
"RTN","IBTRHRS",287,0)
 . ; count[6] = number of rejections received
"RTN","IBTRHRS",288,0)
 . I CERT="A3" S $P(COUNT,"^",6)=$P(COUNT,"^",6)+1
"RTN","IBTRHRS",289,0)
 . ; count[7] = number of pended transactions received
"RTN","IBTRHRS",290,0)
 . I CERT="A4" S $P(COUNT,"^",7)=$P(COUNT,"^",7)+1
"RTN","IBTRHRS",291,0)
 ; count[8] = number of AAA transactions received
"RTN","IBTRHRS",292,0)
 I $D(^IBT(356.22,+XRESP,101)) S $P(COUNT,"^",8)=$P(COUNT,"^",8)+1
"RTN","IBTRHRS",293,0)
 ; count[9] = number of 278s awaiting a response
"RTN","IBTRHRS",294,0)
 I TRANST<2,$P(NODE0,"^",14)="" S $P(COUNT,"^",9)=$P(COUNT,"^",9)+1
"RTN","IBTRHRS",295,0)
 S ^TMP($J,"IBTRHRS",ST1,ST2)=COUNT
"RTN","IBTRHRS",296,0)
 I AUTH D
"RTN","IBTRHRS",297,0)
 . S AUTH1=$$GET1^DIQ(356.021,AUTH_",",.01)
"RTN","IBTRHRS",298,0)
 . I AUTH1="" Q
"RTN","IBTRHRS",299,0)
 . S COUNT=$G(^TMP($J,"IBTRHRS",ST1,ST2,1,AUTH))
"RTN","IBTRHRS",300,0)
 . S COUNT=COUNT+1
"RTN","IBTRHRS",301,0)
 . S ^TMP($J,"IBTRHRS",ST1,ST2,1,AUTH)=COUNT
"RTN","IBTRHRS",302,0)
 S AUTH2=0 F  S AUTH2=$O(^IBT(356.22,+XRESP,101,AUTH2)) Q:AUTH2'=+AUTH2  D
"RTN","IBTRHRS",303,0)
 . S DATA=$G(^IBT(356.22,XRESP,101,AUTH2,0)) I DATA="" Q
"RTN","IBTRHRS",304,0)
 . I $P(DATA,"^",4)="" Q
"RTN","IBTRHRS",305,0)
 . S COUNT=$G(^TMP($J,"IBTRHRS",ST1,ST2,2,$P(DATA,"^",4)))
"RTN","IBTRHRS",306,0)
 . S COUNT=COUNT+1
"RTN","IBTRHRS",307,0)
 . S ^TMP($J,"IBTRHRS",ST1,ST2,2,$P(DATA,"^",4))=COUNT
"RTN","IBTRHRS",308,0)
 Q
"RTN","IBTRHRS",309,0)
 ;
"RTN","IBTRHRS",310,0)
FMDATES(PROMPT) ; ask for date range
"RTN","IBTRHRS",311,0)
 N %DT,X,Y,DT1,DT2,IB1,IB2
"RTN","IBTRHRS",312,0)
 S DT1="",IB1="Start Date: ",IB2="End Date: "
"RTN","IBTRHRS",313,0)
 I $G(PROMPT)'="" S IB1="Start with "_PROMPT_": ",IB2="Go to "_PROMPT_": "
"RTN","IBTRHRS",314,0)
FM1 ;
"RTN","IBTRHRS",315,0)
 S %DT="AEX",%DT("A")=IB1 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM1E:(Y<0&(X="")),FMDQ
"RTN","IBTRHRS",316,0)
 S (%DT(0),DT2)=$P(Y,".",1) I DT2'>DT S %DT("B")="Today"
"RTN","IBTRHRS",317,0)
FM2 ;
"RTN","IBTRHRS",318,0)
 S %DT="AEX",%DT("A")=IB2 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FM2E:(Y<0&(X="")),FMDQ
"RTN","IBTRHRS",319,0)
 S DT1=DT2_"^"_$P(Y,".",1)
"RTN","IBTRHRS",320,0)
FMDQ ;
"RTN","IBTRHRS",321,0)
 Q DT1
"RTN","IBTRHRS",322,0)
FM1E ;
"RTN","IBTRHRS",323,0)
 W !,"A date must be entered." G FM1
"RTN","IBTRHRS",324,0)
FM2E ;
"RTN","IBTRHRS",325,0)
 W !,"A date must be entered." G FM2
"RTN","IBTRHRS",326,0)
 Q
"RTN","IBTRHRS",327,0)
 ;
"RTN","IBTRHRS",328,0)
ASKSTAFF(FILTERS)   ; Sets a list of staff
"RTN","IBTRHRS",329,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRHRS",330,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRHRS",331,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,IBIENS,IEN,N,NM,NODE,X,XX,Y
"RTN","IBTRHRS",332,0)
 S DIC=200,DIC(0)="AEM"
"RTN","IBTRHRS",333,0)
 F  D  Q:+IEN<1
"RTN","IBTRHRS",334,0)
 . D ONE(.DIC,.IEN)
"RTN","IBTRHRS",335,0)
 . Q:+IEN<1
"RTN","IBTRHRS",336,0)
 . S FILTERS(2,$P(IEN,"^"))=$P(IEN,"^",2)
"RTN","IBTRHRS",337,0)
 Q
"RTN","IBTRHRS",338,0)
 ;
"RTN","IBTRHRS",339,0)
ONE(DIC,IEN)  ; Prompts the user for Payer
"RTN","IBTRHRS",340,0)
 ; Input:   DIC     - Variable/Array of settings needed for ^DIC call
"RTN","IBTRHRS",341,0)
 ;          
"RTN","IBTRHRS",342,0)
 ; Output:  IEN     - IEN of the selected Payer Entry
"RTN","IBTRHRS",343,0)
 ;                    null if no selection was made
"RTN","IBTRHRS",344,0)
 S DIC("A")="Select "_$S(DIC=200:"Staff Member: ",DIC="^VA(200,":"Staff Member: ",DIC=2:"Patient: ",DIC="^DPT(":"Patient: ",1:"Payer: ")
"RTN","IBTRHRS",345,0)
 D ^DIC
"RTN","IBTRHRS",346,0)
 S IEN=Y
"RTN","IBTRHRS",347,0)
 Q
"RTN","IBTRHRS",348,0)
 ;
"RTN","IBTRHRS",349,0)
ASKPAT(FILTERS) ; Sets a list of Patients
"RTN","IBTRHRS",350,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBTRHRS",351,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBTRHRS",352,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,IBIENS,IEN,N,NM,NODE,X,XX,Y
"RTN","IBTRHRS",353,0)
 S DIC=2,DIC(0)="AEM"
"RTN","IBTRHRS",354,0)
 F  D  Q:+IEN<1
"RTN","IBTRHRS",355,0)
 . D ONE(.DIC,.IEN)
"RTN","IBTRHRS",356,0)
 . Q:+IEN<1
"RTN","IBTRHRS",357,0)
 . S FILTERS(3,$P(IEN,"^"))=$P(IEN,"^",2)
"RTN","IBTRHRS",358,0)
 Q
"RTN","IBTRP")
0^37^B8798598^B4755209
"RTN","IBTRP",1,0)
IBTRP ;ALB/AAS - CLAIMS TRACKING PARAMETER EDIT ;23-OCT-2014
"RTN","IBTRP",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBTRP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRP",4,0)
 ;
"RTN","IBTRP",5,0)
% D DISP
"RTN","IBTRP",6,0)
 L +^IBE(350.9,1):5 I '$T D LOCKED^IBTRCD1 G END
"RTN","IBTRP",7,0)
 S DIE="^IBE(350.9,",DA=1,DR="4.01;6.01;6.02;6.03;6.04;6.05;6.23;6.06;I 'X S Y=""@50"";5.01;5.02;5.03;@50;6.08;6.09;6.13;6.14;6.18;6.19"
"RTN","IBTRP",8,0)
 ;
"RTN","IBTRP",9,0)
 ; IB*2.0*517 added If statement below for new parameter questions
"RTN","IBTRP",10,0)
 I $D(^XUSEC("IB HCSR PARAM EDIT",DUZ)) D
"RTN","IBTRP",11,0)
 . S DR=DR_";62.1Inquiry can be Triggered for Appointment"
"RTN","IBTRP",12,0)
 . S DR=DR_";62.11Inquiry can be Triggered for Admission;"
"RTN","IBTRP",13,0)
 . S DR=DR_"62.12Days to wait to purge entry on HCSR Response"
"RTN","IBTRP",14,0)
 ;
"RTN","IBTRP",15,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTRP",16,0)
 L -^IBE(350.9,1)
"RTN","IBTRP",17,0)
 D DISP,PAUSE^IBOUTL
"RTN","IBTRP",18,0)
END Q
"RTN","IBTRP",19,0)
 ;
"RTN","IBTRP",20,0)
DISP ; -- Display tracking parameters
"RTN","IBTRP",21,0)
 N IBTRKR
"RTN","IBTRP",22,0)
 I '$D(IOF) D HOME^%ZIS
"RTN","IBTRP",23,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRP",24,0)
 W @IOF,?22,"Claims Tracking Parameter Enter Edit"
"RTN","IBTRP",25,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBTRP",26,0)
 W !!,"Initialization Date: ",$$DAT1^IBOUTL(+IBTRKR)
"RTN","IBTRP",27,0)
 W !,"Use Admission Sheet: ",$$EXPAND^IBTRE(350.9,6.06,$P(IBTRKR,"^",6))
"RTN","IBTRP",28,0)
 W !,"      Header line 1: ",$P($G(^IBE(350.9,1,5)),"^")
"RTN","IBTRP",29,0)
 W !,"      Header line 2: ",$P($G(^IBE(350.9,1,5)),"^",2)
"RTN","IBTRP",30,0)
 W !,"      Header line 3: ",$P($G(^IBE(350.9,1,5)),"^",3)
"RTN","IBTRP",31,0)
 W !!,"    Track Inpatient: ",$$EXPAND^IBTRE(350.9,6.02,$P(IBTRKR,"^",2))
"RTN","IBTRP",32,0)
 W ?40,"    Track Outpatient: ",$$EXPAND^IBTRE(350.9,6.03,$P(IBTRKR,"^",3))
"RTN","IBTRP",33,0)
 W !,"           Track Rx: ",$$EXPAND^IBTRE(350.9,6.04,$P(IBTRKR,"^",4))
"RTN","IBTRP",34,0)
D W ?40,"   Track Prosthetics: ",$$EXPAND^IBTRE(350.9,6.05,$P(IBTRKR,"^",5))
"RTN","IBTRP",35,0)
 W !," Reports can Add CT: ",$$EXPAND^IBTRE(350.9,6.23,$P(IBTRKR,"^",23))
"RTN","IBTRP",36,0)
 W !!,"    Medicine Sample: ",$J($P(IBTRKR,"^",8),3)
"RTN","IBTRP",37,0)
 W ?40,"      Surgery Sample: ",$J($P(IBTRKR,"^",13),3)
"RTN","IBTRP",38,0)
 W !,"Medicine Admissions: ",$J($P(IBTRKR,"^",9),3)
"RTN","IBTRP",39,0)
 W ?40,"  Surgery Admissions: ",$J($P(IBTRKR,"^",14),3)
"RTN","IBTRP",40,0)
 W !!,"       Psych Sample: ",$J($P(IBTRKR,"^",18),3)
"RTN","IBTRP",41,0)
 W !,"   Psych Admissions: ",$J($P(IBTRKR,"^",19),3)
"RTN","IBTRP",42,0)
 ;
"RTN","IBTRP",43,0)
 ; IB*2.0*517 added next 3 lines for new parameter questions
"RTN","IBTRP",44,0)
 W !!,"    Inquiry can be Triggered for Appointment: ",$J($P($G(^IBE(350.9,1,62)),"^",10),3)," Days"
"RTN","IBTRP",45,0)
 W !,"      Inquiry can be Triggered for Admission: ",$J($P($G(^IBE(350.9,1,62)),"^",11),3)," Days"
"RTN","IBTRP",46,0)
 W !,"Days to wait to purge entry on HCSR Response: ",$J($P($G(^IBE(350.9,1,62)),"^",12),3)," Days"
"RTN","IBTRP",47,0)
 ;
"RTN","IBTRP",48,0)
 ; IB*2.0*517 added next two lines of warning text
"RTN","IBTRP",49,0)
 W !!,"Note: There are additional HCSR parameters that can be accessed"
"RTN","IBTRP",50,0)
 W !,"      through MCCR Site Parameter Display/Edit"
"RTN","IBTRP",51,0)
 Q
"RTN","IBTUTL")
0^44^B52307998^B16901114
"RTN","IBTUTL",1,0)
IBTUTL ;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ;21-JUN-93
"RTN","IBTUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**23,62,517**;21-MAR-94;Build 240
"RTN","IBTUTL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUTL",4,0)
 ;
"RTN","IBTUTL",5,0)
ADM(DGPMCA,VAINDT,RANDOM,IBVSIT) ; -- set up info for adding a current admission
"RTN","IBTUTL",6,0)
 ; -- Input DGPMCA   = pointer for an admission to patient movement file
"RTN","IBTUTL",7,0)
 ;          VAINDT   = optional date for admission (default is dt)
"RTN","IBTUTL",8,0)
 ;          RANDOM   = whether or not this is a random sample
"RTN","IBTUTL",9,0)
 ;          IBVSIT   = Pointer to visit file (optional)
"RTN","IBTUTL",10,0)
 ;
"RTN","IBTUTL",11,0)
 N DA,DIC,DIE,DR,X,VAIN,VA,IBSCHED,IBSCH,HCSRIEN
"RTN","IBTUTL",12,0)
 I '$G(VAINDT) K VAINDT
"RTN","IBTUTL",13,0)
 I '$G(DGPMCA) S VA200="" D INP^VADPT S DGPMCA=VAIN(1)
"RTN","IBTUTL",14,0)
 Q:DGPMCA=""
"RTN","IBTUTL",15,0)
 S RANDOM=$S($G(RANDOM):1,1:0)
"RTN","IBTUTL",16,0)
 S X=$O(^IBT(356,"ADM",DFN,DGPMCA,0)) I X S IBTRN=X G ADMQ
"RTN","IBTUTL",17,0)
 S IBADMDT=$P(^DGPM(DGPMCA,0),"^")
"RTN","IBTUTL",18,0)
 ;S IBETYP=+$O(^IBE(356.6,"B","INPATIENT ADMISSION",0))
"RTN","IBTUTL",19,0)
 S IBETYP=+$O(^IBE(356.6,"AC",1,0))
"RTN","IBTUTL",20,0)
 S (IBSCH,IBTRN)=$O(^IBT(356,"ASCH",+$$SCH^IBTRKR2(DGPMCA),0))
"RTN","IBTUTL",21,0)
 D:'IBTRN ADDT
"RTN","IBTUTL",22,0)
 I IBTRN<1 G ADMQ
"RTN","IBTUTL",23,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL",24,0)
 L +^IBT(356,+IBTRN):10 I '$T G ADMQ
"RTN","IBTUTL",25,0)
 S DR=$$ADMDR(IBADMDT,IBETYP,DGPMCA,RANDOM)
"RTN","IBTUTL",26,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL",27,0)
 I $P($G(^IBT(356,IBTRN,0)),"^",32) S DA=IBTRN,DR=".32///@",DIE="^IBT(356," D ^DIE K DA,DR,DIE
"RTN","IBTUTL",28,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL",29,0)
 I "^1^5^"[(U_IBETYP_U) S HCSRIEN=+$$FNDHCSR(DFN,IBADMDT) D:HCSRIEN HCSRCPY(HCSRIEN,IBTRN,DFN,IBADMDT)
"RTN","IBTUTL",30,0)
 ;
"RTN","IBTUTL",31,0)
 S IBSCHED=$S($P(^DGPM(DGPMCA,0),U,25):10,1:20)
"RTN","IBTUTL",32,0)
 ;
"RTN","IBTUTL",33,0)
 ; -- if random sample add hospital review
"RTN","IBTUTL",34,0)
 I $P(^IBT(356,IBTRN,0),U,25) D PRE^IBTUTL2(DT,IBTRN,IBSCHED)
"RTN","IBTUTL",35,0)
 ;
"RTN","IBTUTL",36,0)
 ; -- if scheduled admission entry converted to admission, don't add
"RTN","IBTUTL",37,0)
 ;    second insurance review
"RTN","IBTUTL",38,0)
 I $G(IBSCH) G ADMQ
"RTN","IBTUTL",39,0)
 ;
"RTN","IBTUTL",40,0)
 ; -- if insured add ins review
"RTN","IBTUTL",41,0)
 I $P(^IBT(356,IBTRN,0),U,24) D COM^IBTUTL3(DT,IBTRN,IBSCHED,$G(IBTRV))
"RTN","IBTUTL",42,0)
 ;
"RTN","IBTUTL",43,0)
ADMQ Q
"RTN","IBTUTL",44,0)
 ;
"RTN","IBTUTL",45,0)
ADDT ; -- add new entry to tracking, ibt(356
"RTN","IBTUTL",46,0)
 ;
"RTN","IBTUTL",47,0)
 N %DT,DD,DO,DIC,DR,DIE,DLAYGO,IBTR1,DINUM
"RTN","IBTUTL",48,0)
 L +^IBT(356,0):0 ;I '$T S Y="-1^IB085" G ADDTQ
"RTN","IBTUTL",49,0)
 ;I $G(^IBT(356,0))="" S Y="-1^IB086" G ADDTQ
"RTN","IBTUTL",50,0)
 S X=$P($G(^IBT(356,0)),"^",3)+1 L -^IBT(356,0)
"RTN","IBTUTL",51,0)
 S DIC="^IBT(356,",DIC(0)="L",DLAYGO=356
"RTN","IBTUTL",52,0)
 F X=X:1 L:$D(IBTR1) -^IBT(356,IBTR1) I X>0,'$D(^IBT(356,X)) S IBTR1=X L +^IBT(356,IBTR1):1 I $T,'$D(^IBT(356,X)) S DINUM=X,X=($$IBSITE())_X D FILE^DICN I +Y>0 Q
"RTN","IBTUTL",53,0)
 L -^IBT(356,IBTR1)
"RTN","IBTUTL",54,0)
 I +Y<1  S Y="-1^IB087"
"RTN","IBTUTL",55,0)
ADDTQ ;I +Y<0 D ^IBTERR
"RTN","IBTUTL",56,0)
 S IBTRN=+Y,IBNEW=1
"RTN","IBTUTL",57,0)
 Q
"RTN","IBTUTL",58,0)
 ;
"RTN","IBTUTL",59,0)
OTH(DFN,IBETYP,IBTDT) ; -- add miscellaneous entries, care may not be in data base
"RTN","IBTUTL",60,0)
 ; -- input   dfn  := patient pointer to 2
"RTN","IBTUTL",61,0)
 ;          ibetyp := pointer to type entry in 356.6
"RTN","IBTUTL",62,0)
 ;          ibtdt  := episode date
"RTN","IBTUTL",63,0)
 ;
"RTN","IBTUTL",64,0)
 N X,Y,DA,DR,DIE,DIC
"RTN","IBTUTL",65,0)
 S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G OTHQ
"RTN","IBTUTL",66,0)
 D ADDT
"RTN","IBTUTL",67,0)
 I IBTRN<1 G OTHQ
"RTN","IBTUTL",68,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL",69,0)
 S DR=".02////"_$G(DFN)_";.06////"_+$G(IBTDT)_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD(IBETYP,IBTDT)
"RTN","IBTUTL",70,0)
 L +^IBT(356,+IBTRN):10 I '$T G OTHQ
"RTN","IBTUTL",71,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL",72,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL",73,0)
OTHQ Q
"RTN","IBTUTL",74,0)
 ;
"RTN","IBTUTL",75,0)
IBSITE() ; -- calculate site from site parameters
"RTN","IBTUTL",76,0)
 ; --  output ibsite = station number
"RTN","IBTUTL",77,0)
 ;
"RTN","IBTUTL",78,0)
 N IBFAC,IBSITE
"RTN","IBTUTL",79,0)
 D SITE^IBAUTL
"RTN","IBTUTL",80,0)
 Q IBSITE
"RTN","IBTUTL",81,0)
 ;
"RTN","IBTUTL",82,0)
ADMDR(IBADMDT,IBETYP,DGPMCA,RANDOM) ; -- set up dr string for admissions
"RTN","IBTUTL",83,0)
 S DR=""
"RTN","IBTUTL",84,0)
 I '$G(IBETYP)!'$G(IBADMDT) G ADMDRQ
"RTN","IBTUTL",85,0)
 S DR=".02////"_$G(DFN)_";.03////"_$G(IBVSIT)_";.05////"_$G(DGPMCA)_";.06////"_+$G(IBADMDT)_";.18////"_$G(IBETYP)_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD(IBETYP,$G(IBADMDT)) D
"RTN","IBTUTL",86,0)
 .I $G(DGPMCA),$G(RANDOM) S DR=DR_";.25////1" Q
"RTN","IBTUTL",87,0)
ADMDRQ Q DR
"RTN","IBTUTL",88,0)
 ;
"RTN","IBTUTL",89,0)
EABD(IBETYP,IBTDT) ; -- compute earliest auto bill date: date entered plus days delay for event type
"RTN","IBTUTL",90,0)
 ; -- input   IBETYPE = pointer to type of entry file
"RTN","IBTUTL",91,0)
 ;            IBTDT   = episode date, if not passed in uses DT
"RTN","IBTUTL",92,0)
 ;
"RTN","IBTUTL",93,0)
 N X,X1,X2,Y,IBETYPD S Y="" I '$G(IBETYP) G EABDQ
"RTN","IBTUTL",94,0)
 S IBETYPD=$G(^IBE(356.6,+IBETYP,0)) I '$G(IBTDT) S IBTDT=DT
"RTN","IBTUTL",95,0)
 I '$P(IBETYPD,"^",4) G EABDQ ; automated billing turned off
"RTN","IBTUTL",96,0)
 S X2=+$P(IBETYPD,"^",6) ;set earliest autobill date to entered date plus days delay
"RTN","IBTUTL",97,0)
 S X1=IBTDT D C^%DTC S Y=X\1
"RTN","IBTUTL",98,0)
EABDQ Q Y
"RTN","IBTUTL",99,0)
 ;
"RTN","IBTUTL",100,0)
BILL(IBTRN) ;check if event is billable, return EABD if it is
"RTN","IBTUTL",101,0)
 N X,Y,Z,IBTRND S (X,Y)="" S IBTRND=$G(^IBT(356,+$G(IBTRN),0)) I IBTRND="" G BILLQ
"RTN","IBTUTL",102,0)
 ;
"RTN","IBTUTL",103,0)
 ; -- billed and bill not cancelled and not inpt interim first or continuous
"RTN","IBTUTL",104,0)
 I +$P(IBTRND,U,11) S Z=$$BILLED^IBCU8(IBTRN),Y=$P(Z,U,2) I +Z,'Y G BILLQ
"RTN","IBTUTL",105,0)
 ;
"RTN","IBTUTL",106,0)
 ; -- special type (not riem. ins), not billable, inactive
"RTN","IBTUTL",107,0)
 I +$P(IBTRND,U,12)!(+$P(IBTRND,U,19))!('$P(IBTRND,U,20)) G BILLQ
"RTN","IBTUTL",108,0)
 I 'Y S Y=+$G(^IBT(356,+$G(IBTRN),1)) I 'Y S Y=DT
"RTN","IBTUTL",109,0)
 S X=$$EABD(+$P(IBTRND,U,18),Y)
"RTN","IBTUTL",110,0)
BILLQ Q X
"RTN","IBTUTL",111,0)
 ;
"RTN","IBTUTL",112,0)
STOBIL Q
"RTN","IBTUTL",113,0)
KTOBIL Q
"RTN","IBTUTL",114,0)
 ;
"RTN","IBTUTL",115,0)
FNDHCSR(DFN,IBADMDT) ; find matching HCSR response in file 356.22
"RTN","IBTUTL",116,0)
 ; DFN - file 2 ien
"RTN","IBTUTL",117,0)
 ; IBADMDT - event date
"RTN","IBTUTL",118,0)
 ;
"RTN","IBTUTL",119,0)
 ; returns file 356.22 ien of matching response or null if no match found
"RTN","IBTUTL",120,0)
 ;
"RTN","IBTUTL",121,0)
 N EVDT,HCSRIEN,RES,STOPFLG
"RTN","IBTUTL",122,0)
 S RES=""
"RTN","IBTUTL",123,0)
 I +$G(DFN)>0,+$G(IBADMDT)>0 D
"RTN","IBTUTL",124,0)
 .; loop through D-xref (by patient and event date)
"RTN","IBTUTL",125,0)
 .S STOPFLG=0,EVDT="" F  S EVDT=$O(^IBT(356.22,"D",DFN,EVDT)) Q:EVDT=""!STOPFLG  D
"RTN","IBTUTL",126,0)
 ..; if match found, loop through entries for that patient and event date
"RTN","IBTUTL",127,0)
 ..I $P(EVDT,"-")=IBADMDT S HCSRIEN=0 F  S HCSRIEN=$O(^IBT(356.22,"D",DFN,EVDT,HCSRIEN)) Q:'HCSRIEN!STOPFLG  D
"RTN","IBTUTL",128,0)
 ...; check if this entry is a response
"RTN","IBTUTL",129,0)
 ...I $$GET1^DIQ(356.22,HCSRIEN_",",.13,"I") S RES=HCSRIEN,STOPFLG=1
"RTN","IBTUTL",130,0)
 ...Q
"RTN","IBTUTL",131,0)
 ..Q
"RTN","IBTUTL",132,0)
 .Q
"RTN","IBTUTL",133,0)
 Q RES
"RTN","IBTUTL",134,0)
 ;
"RTN","IBTUTL",135,0)
HCSRCPY(HCSRIEN,IBTRN,DFN,EVNTDT) ; copy ref. # and auth. # from file 356.22 into file 356.2
"RTN","IBTUTL",136,0)
 ; HCSRIEN - file 356.22 ien
"RTN","IBTUTL",137,0)
 ; IBTRN - file 356 ien
"RTN","IBTUTL",138,0)
 ; DFN - file 2 ien
"RTN","IBTUTL",139,0)
 ; EVNTDT - event date from 356.22/.07
"RTN","IBTUTL",140,0)
 ;
"RTN","IBTUTL",141,0)
 N CERT,FDA,FLD,HCSRIENS,IENS,IIEN,IMIEN,IRIEN,IRIENS,NUM
"RTN","IBTUTL",142,0)
 I +$G(HCSRIEN)>0,+$G(IBTRN)>0 D
"RTN","IBTUTL",143,0)
 .S HCSRIENS=HCSRIEN_","
"RTN","IBTUTL",144,0)
 .S CERT=$$GET1^DIQ(356.22,HCSRIENS,103.01)
"RTN","IBTUTL",145,0)
 .S NUM=$$GET1^DIQ(356.22,HCSRIENS,103.02,"I")
"RTN","IBTUTL",146,0)
 .S IMIEN=$$GET1^DIQ(356.22,HCSRIENS,.03) ;Insurance Multiple IEN
"RTN","IBTUTL",147,0)
 .S IENS=IMIEN_","_DFN_"," ; 
"RTN","IBTUTL",148,0)
 .S IIEN=$$GET1^DIQ(2.312,IENS,.01,"I")          ; Insurance Company IEN
"RTN","IBTUTL",149,0)
 .S FLD=2.01 ; default to ref. #, goes into 356.2/2.01
"RTN","IBTUTL",150,0)
 .I "^A1^A2^A6^"[(U_CERT_U) S FLD=2.02 ; it's an auth. #, goes into 356.2/2.02
"RTN","IBTUTL",151,0)
 .;
"RTN","IBTUTL",152,0)
 .;If there are no entries in 356.2 and it's outpatient, add an entry to 356.2 
"RTN","IBTUTL",153,0)
 .I '$D(^IBT(356.2,"C",IBTRN)),$P($G(^IBT(356.22,RESIEN,0)),U,4)'="I" D ADD(EVNTDT,IBTRN,DFN,NUM,FLD,IIEN) Q
"RTN","IBTUTL",154,0)
 .;
"RTN","IBTUTL",155,0)
 .; find appropriate entries in file 356.2
"RTN","IBTUTL",156,0)
 .S IRIEN=0 F  S IRIEN=$O(^IBT(356.2,"C",IBTRN,IRIEN)) Q:'IRIEN  D
"RTN","IBTUTL",157,0)
 ..S IRIENS=IRIEN_","
"RTN","IBTUTL",158,0)
 ..Q:IIEN'=$$GET1^DIQ(356.2,IRIENS,.08,"I")  ; don't set if it's not the correct insurance company 
"RTN","IBTUTL",159,0)
 ..S:$P($G(^IBT(356.2,IRIEN,2)),U,$S(FLD=2.02:2,1:1))="" FDA(356.2,IRIENS,FLD)=NUM
"RTN","IBTUTL",160,0)
 ..D FILE^DIE(,"FDA") K FDA
"RTN","IBTUTL",161,0)
 ..Q
"RTN","IBTUTL",162,0)
 .Q
"RTN","IBTUTL",163,0)
 Q
"RTN","IBTUTL",164,0)
 ;
"RTN","IBTUTL",165,0)
 ; add an entry to 365.2
"RTN","IBTUTL",166,0)
 ; for outpatient if there isn't one already
"RTN","IBTUTL",167,0)
ADD(EVNTDT,IBTRN,DFN,NUM,FLD,IIEN) ; -- add initial entry
"RTN","IBTUTL",168,0)
 ; EVNTDT - EVNTDT (in internal fileman format)
"RTN","IBTUTL",169,0)
 ; IBTRN - file 356 ien
"RTN","IBTUTL",170,0)
 ; DFN - file 2 ien
"RTN","IBTUTL",171,0)
 ; NUM - authorization or referral number
"RTN","IBTUTL",172,0)
 ; FLD - field to file it it.
"RTN","IBTUTL",173,0)
 ; IIEN - Insurance Company IEN
"RTN","IBTUTL",174,0)
 ;
"RTN","IBTUTL",175,0)
 N FDA,HIP,IBDD,IBNXRV,IBTOC,ORDER,STOP
"RTN","IBTUTL",176,0)
 I $G(NUM)]"",$G(FLD)]"",+$G(IIEN) D
"RTN","IBTUTL",177,0)
 .;
"RTN","IBTUTL",178,0)
 .D ALL^IBCNS1(DFN,"IBDD",1,EVNTDT,1) ; return active insurances in COB order
"RTN","IBTUTL",179,0)
 .Q:'$G(IBDD(0))  ; no active insurance on that date
"RTN","IBTUTL",180,0)
 .;
"RTN","IBTUTL",181,0)
 .; get first insurance company that matches
"RTN","IBTUTL",182,0)
 .S ORDER=0 F  S ORDER=$O(IBDD("S",ORDER)) Q:'ORDER  D  Q:HIP
"RTN","IBTUTL",183,0)
 ..S HIP=0 F  S HIP=$O(IBDD("S",ORDER,HIP)) Q:'HIP  Q:+$G(IBDD(HIP,0))=IIEN
"RTN","IBTUTL",184,0)
 .Q:'$G(HIP)  ; stop if none match
"RTN","IBTUTL",185,0)
 .;
"RTN","IBTUTL",186,0)
 .S FDA(356.2,"+1,",.01)=EVNTDT
"RTN","IBTUTL",187,0)
 .;
"RTN","IBTUTL",188,0)
 .;Pointer to claims tracking
"RTN","IBTUTL",189,0)
 .S FDA(356.2,"+1,",.02)=IBTRN
"RTN","IBTUTL",190,0)
 .S FDA(356.2,"+1,",.19)=1
"RTN","IBTUTL",191,0)
 .;
"RTN","IBTUTL",192,0)
 .;Type of Contact
"RTN","IBTUTL",193,0)
 .S IBTOC=$$FIND1^DIC(356.11,,"C","OUTPATIENT TREATMENT")
"RTN","IBTUTL",194,0)
 .S FDA(356.2,"+1,",.04)=IBTOC
"RTN","IBTUTL",195,0)
 .;
"RTN","IBTUTL",196,0)
 .;Patient
"RTN","IBTUTL",197,0)
 .S FDA(356.2,"+1,",.05)=DFN
"RTN","IBTUTL",198,0)
 .;
"RTN","IBTUTL",199,0)
 .; Health Insurance Policy
"RTN","IBTUTL",200,0)
 .S FDA(356.2,"+1,",1.05)=HIP
"RTN","IBTUTL",201,0)
 .;
"RTN","IBTUTL",202,0)
 .;File referal or authorization
"RTN","IBTUTL",203,0)
 .S FDA(356.2,"+1,",FLD)=NUM
"RTN","IBTUTL",204,0)
 .;
"RTN","IBTUTL",205,0)
 .; Next Review
"RTN","IBTUTL",206,0)
 .S IBNXRV=DT
"RTN","IBTUTL",207,0)
 .I EVNTDT>$$FMADD^XLFDT(DT,7) S IBNXRV=$$FMADD^XLFDT(EVNTDT,-7)
"RTN","IBTUTL",208,0)
 .S FDA(356.2,"+1,",.24)=IBNXRV
"RTN","IBTUTL",209,0)
 .;
"RTN","IBTUTL",210,0)
 .;Last Edit Date/By
"RTN","IBTUTL",211,0)
 .D NOW^%DTC
"RTN","IBTUTL",212,0)
 .S FDA(356.2,"+1,",1.01)=%
"RTN","IBTUTL",213,0)
 .S FDA(356.2,"+1,",1.02)=DUZ
"RTN","IBTUTL",214,0)
 .;
"RTN","IBTUTL",215,0)
 .D UPDATE^DIE(,"FDA") K FDA
"RTN","IBTUTL",216,0)
 Q
"RTN","IBTUTL1")
0^45^B61280810^B60382231
"RTN","IBTUTL1",1,0)
IBTUTL1 ;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ;21-JUN-93
"RTN","IBTUTL1",2,0)
 ;;2.0;INTEGRATED BILLING;**13,223,249,292,384,517**;21-MAR-94;Build 240
"RTN","IBTUTL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUTL1",4,0)
 ;
"RTN","IBTUTL1",5,0)
OPT(DFN,IBETYP,IBTDT,ENCTR,IBRMARK,IBVSIT) ; -- add outpatient care entries
"RTN","IBTUTL1",6,0)
 ; -- input   dfn  := patient pointer to 2
"RTN","IBTUTL1",7,0)
 ;          ibetyp := pointer to type entry in 356.6
"RTN","IBTUTL1",8,0)
 ;          ibtdt  := episode date
"RTN","IBTUTL1",9,0)
 ;          enctr  := pointer to opt. encounter file (optional)
"RTN","IBTUTL1",10,0)
 ;        ibrmark  := text of reason not billable (optional)
"RTN","IBTUTL1",11,0)
 ;         ibvsit  := pointer to visit file (optional)
"RTN","IBTUTL1",12,0)
 ;
"RTN","IBTUTL1",13,0)
 N X,Y,DA,DR,DIE,DIC,IBSCRN
"RTN","IBTUTL1",14,0)
 S IBSCRN=0
"RTN","IBTUTL1",15,0)
 ;Allow user inter-actions if not queued and IBTALK=1 or not exist. 
"RTN","IBTUTL1",16,0)
 I '$D(ZTQUEUED) D  I IBSCRN G OPTSCRN
"RTN","IBTUTL1",17,0)
 . I $D(IBTALK),'$G(IBTALK) Q
"RTN","IBTUTL1",18,0)
 . I IBTDT<3060101 Q  ;Don't use new code for claims prior to 1/1/2006
"RTN","IBTUTL1",19,0)
 . S IBSCRN=1
"RTN","IBTUTL1",20,0)
 I $G(IBETYP) S IBETYP=$O(^IBE(356.6,"AC",2,0))
"RTN","IBTUTL1",21,0)
 I IBTDT<3060101 S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G OPTQ ;Prevent duplicate date/time claims prior to 1/1/2006
"RTN","IBTUTL1",22,0)
 ;Check for encounter already in claims tracking.
"RTN","IBTUTL1",23,0)
 I $D(ENCTR),$D(^IBT(356,"AENC",+DFN,+ENCTR)) S IBTRN=$O(^IBT(356,"AENC",+DFN,+ENCTR,0)) G OPTQ
"RTN","IBTUTL1",24,0)
 D ADDT^IBTUTL
"RTN","IBTUTL1",25,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL1",26,0)
 I IBTRN<1 G OPTQ
"RTN","IBTUTL1",27,0)
 L +^IBT(356,+IBTRN):10 I '$T G OPTQ
"RTN","IBTUTL1",28,0)
 S DR=".02////"_$G(DFN)_";.03////"_$G(IBVSIT)_";.04////"_$G(ENCTR)_";.06////"_+IBTDT_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
"RTN","IBTUTL1",29,0)
 I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
"RTN","IBTUTL1",30,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL1",31,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL1",32,0)
 I IBETYP=2 S HCSRIEN=+$$FNDHCSR^IBTUTL(DFN,IBTDT) D:HCSRIEN HCSRCPY^IBTUTL(HCSRIEN,IBTRN,DFN,IBTDT)
"RTN","IBTUTL1",33,0)
OPTQ Q
"RTN","IBTUTL1",34,0)
 ;
"RTN","IBTUTL1",35,0)
REFILL(DFN,IBETYP,IBTDT,IBRXN,IBRXN1,IBRMARK,IBEABD,IBSCROI) ; -- add refill
"RTN","IBTUTL1",36,0)
 ; -- input   dfn   := patient pointer to 2
"RTN","IBTUTL1",37,0)
 ;          ibetyp  := pointer to type entry in 356.6
"RTN","IBTUTL1",38,0)
 ;          ibtdt   := episode date (refill date)
"RTN","IBTUTL1",39,0)
 ;          ibrxn   := pointer to 52
"RTN","IBTUTL1",40,0)
 ;          ibrxn1  := refill multiple entry
"RTN","IBTUTL1",41,0)
 ;          ibrmark := non billable reason if unsure
"RTN","IBTUTL1",42,0)
 ;          ibeabd  := optional, can specify an earliest auto bill date
"RTN","IBTUTL1",43,0)
 ;          ibscroi := special consent roi
"RTN","IBTUTL1",44,0)
 ;
"RTN","IBTUTL1",45,0)
 N X,Y,DA,DR,DIE,DIC
"RTN","IBTUTL1",46,0)
 ;S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G REFILLQ
"RTN","IBTUTL1",47,0)
 S X=$O(^IBT(356,"ARXFL",IBRXN,IBRXN1,0)) I X S IBTRN=X G REFILLQ
"RTN","IBTUTL1",48,0)
 D ADDT^IBTUTL
"RTN","IBTUTL1",49,0)
 I IBTRN<1 G REFILLQ
"RTN","IBTUTL1",50,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL1",51,0)
 L +^IBT(356,+IBTRN):10 I '$T G REFILLQ
"RTN","IBTUTL1",52,0)
 S DR=".02////"_$G(DFN)_";.06////"_+IBTDT_";.08////"_IBRXN_";.1////"_IBRXN1_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_$S($G(IBDUZ):IBDUZ,1:DUZ)_";.17////"_$S($G(IBEABD):IBEABD,1:$$EABD^IBTUTL(IBETYP))
"RTN","IBTUTL1",53,0)
 I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
"RTN","IBTUTL1",54,0)
 I $G(IBSCROI)'="" S DR=DR_";.31////"_IBSCROI ;IB*2*384
"RTN","IBTUTL1",55,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL1",56,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL1",57,0)
REFILLQ Q
"RTN","IBTUTL1",58,0)
 ;
"RTN","IBTUTL1",59,0)
PRO(DFN,IBTDT,IBPRO,IBRMARK) ; -- add prosthetic entries
"RTN","IBTUTL1",60,0)
 ; -- input   dfn  := patient pointer to 2
"RTN","IBTUTL1",61,0)
 ;          ibetyp := pointer to type entry in 356.6
"RTN","IBTUTL1",62,0)
 ;          ibtdt  := episode date
"RTN","IBTUTL1",63,0)
 ;
"RTN","IBTUTL1",64,0)
 N X,Y,DA,DR,DIE,DIC,IBETYP
"RTN","IBTUTL1",65,0)
 ;S IBETYP=$O(^IBE(356.6,"ACODE",4,0))
"RTN","IBTUTL1",66,0)
 S IBETYP=$O(^IBE(356.6,"AC",3,0)) ;prosthetics type
"RTN","IBTUTL1",67,0)
 S X=$O(^IBT(356,"APRO",IBPRO,0)) I X S IBTRN=X G PROQ
"RTN","IBTUTL1",68,0)
 D ADDT^IBTUTL
"RTN","IBTUTL1",69,0)
 I IBTRN<1 G PROQ
"RTN","IBTUTL1",70,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL1",71,0)
 L +^IBT(356,+IBTRN):10 I '$T G PROQ
"RTN","IBTUTL1",72,0)
 S DR=".02////"_$G(DFN)_";.06////"_+IBTDT_";.09////"_IBPRO_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
"RTN","IBTUTL1",73,0)
 I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
"RTN","IBTUTL1",74,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL1",75,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL1",76,0)
PROQ Q
"RTN","IBTUTL1",77,0)
 ;
"RTN","IBTUTL1",78,0)
PT(DFN) ; -- format patient name - last 4 for output
"RTN","IBTUTL1",79,0)
 S Y="" I '$G(DFN) G PTQ
"RTN","IBTUTL1",80,0)
 I '$D(VA("PID")) D PID^VADPT
"RTN","IBTUTL1",81,0)
 S Y=$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
"RTN","IBTUTL1",82,0)
PTQ Q Y
"RTN","IBTUTL1",83,0)
 ;
"RTN","IBTUTL1",84,0)
PRODATA(IBDA) ; -- return data from prosthetics file
"RTN","IBTUTL1",85,0)
 N IBDA0,DA,DIC,DIE,DR
"RTN","IBTUTL1",86,0)
 K IBRMPR ; only one array at a time
"RTN","IBTUTL1",87,0)
 I '$G(IBDA) G PRODAQ
"RTN","IBTUTL1",88,0)
 S IBDA0=$G(^RMPR(660,+IBDA,0))
"RTN","IBTUTL1",89,0)
 G:IBDA0="" PRODAQ
"RTN","IBTUTL1",90,0)
DIQ S DIC="^RMPR(660,",DR=".01;1:5;7;10;12:17;24"
"RTN","IBTUTL1",91,0)
 S DIQ="IBRMPR",DIQ(0)="E",DA=IBDA
"RTN","IBTUTL1",92,0)
 D EN^DIQ1
"RTN","IBTUTL1",93,0)
PRODAQ Q
"RTN","IBTUTL1",94,0)
 ;
"RTN","IBTUTL1",95,0)
OPTSCRN ; -- add outpatient care entries with user feedback
"RTN","IBTUTL1",96,0)
 ; called from OPT^IBTUTL1 which has following inputs
"RTN","IBTUTL1",97,0)
 ; -- input   dfn  := patient pointer to 2
"RTN","IBTUTL1",98,0)
 ;          ibetyp := pointer to type entry in 356.6
"RTN","IBTUTL1",99,0)
 ;          ibtdt  := episode date
"RTN","IBTUTL1",100,0)
 ;          enctr  := pointer to opt. encounter file (optional)
"RTN","IBTUTL1",101,0)
 ;        ibrmark  := text of reason not billable (optional)
"RTN","IBTUTL1",102,0)
 ;         ibvsit  := pointer to visit file (optional)
"RTN","IBTUTL1",103,0)
 ;
"RTN","IBTUTL1",104,0)
 N CNT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,IB3560,IBACT,IBDATE,IBENC,IBETYPNM
"RTN","IBTUTL1",105,0)
 N IBID,IBPATNM,IBQUIT,LINE,TEMP,TMP
"RTN","IBTUTL1",106,0)
 ;If encounter passed in already exists in claims Tracking, remove it.
"RTN","IBTUTL1",107,0)
 I $D(ENCTR),$D(^IBT(356,"AENC",+DFN,+ENCTR)) S ENCTR=""
"RTN","IBTUTL1",108,0)
 I $G(IBETYP) S IBETYP=$O(^IBE(356.6,"AC",2,0))
"RTN","IBTUTL1",109,0)
 S IBQUIT=0
"RTN","IBTUTL1",110,0)
 I $O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) D  I X S IBTRN=X G OPTSCRNQ
"RTN","IBTUTL1",111,0)
 . S (CNT,LINE)=1,(TEMP,TMP,X)=""
"RTN","IBTUTL1",112,0)
 . S Y=IBTDT D DD^%DT S IBDATE=$E(Y_"                  ",1,18) S Y=""
"RTN","IBTUTL1",113,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",114,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",115,0)
 . S TMP("DIMSG",LINE)="There are match(es) for the episode date you have entered:",LINE=LINE+1
"RTN","IBTUTL1",116,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",117,0)
 . S TMP("DIMSG",LINE)="   EPISODE DATE       PATIENT NAME    CT ID      TYPE     ENCOUNTER  ACTIVE",LINE=LINE+1
"RTN","IBTUTL1",118,0)
 . S TMP("DIMSG",LINE)="   ------------       ------------    -----      ----     ---------  ------",LINE=LINE+1
"RTN","IBTUTL1",119,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",120,0)
 . F  S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,X)) Q:X=""  D
"RTN","IBTUTL1",121,0)
 .. S IB3560=$G(^IBT(356,X,0)) I IB3560="" Q
"RTN","IBTUTL1",122,0)
 .. S IBID=$P($G(IB3560),U,1) S IBID=$S(IBID="":"ID_UNKNOWN",1:$E(IBID_"          ",1,10))
"RTN","IBTUTL1",123,0)
 .. S IBPATNM=$P($G(^DPT(DFN,0)),U,1) S IBPATNM=$S(IBPATNM="":"PATIENT_UNKNOWN",1:$E(IBPATNM_"               ",1,15))
"RTN","IBTUTL1",124,0)
 .. S IBENC=$P($G(IB3560),U,4) S IBENC=$S(IBENC="":"NONE      ",1:$E(IBENC_"          ",1,10))
"RTN","IBTUTL1",125,0)
 .. S IBACT=$S($P($G(IB3560),U,20)=1:"YES",1:"NO ")
"RTN","IBTUTL1",126,0)
 .. S IBETYPNM=$P($G(^IBE(356.6,IBETYP,0)),U,2) S IBETYPNM=$S(IBETYPNM="":"NONE    ",1:$E(IBETYPNM_"        ",1,8))
"RTN","IBTUTL1",127,0)
 .. S TMP("DIMSG",LINE)=$E(CNT_"  ",1,3)_IBDATE_" "_IBPATNM_" "_IBID_" "_IBETYPNM_" "_IBENC_" "_IBACT
"RTN","IBTUTL1",128,0)
 .. S TEMP(CNT)=X_"^"_$TR(IBENC," ",""),CNT=CNT+1
"RTN","IBTUTL1",129,0)
 .. S LINE=LINE+1
"RTN","IBTUTL1",130,0)
 . I CNT>0 D
"RTN","IBTUTL1",131,0)
 .. S TMP("DIMSG",LINE+1)=$E(CNT_"  ",1,3)_"*** CREATE A NEW CLAIMS TRACKING ENTRY ***"
"RTN","IBTUTL1",132,0)
 .. D MSG^DIALOG("WM",,,,"TMP")
"RTN","IBTUTL1",133,0)
 .. S DIR(0)="NA^1:"_CNT_":0"
"RTN","IBTUTL1",134,0)
 .. S DIR("A")="Select a Claims Tracking entry: "
"RTN","IBTUTL1",135,0)
 .. S DIR("?",1)="Choose a Claims Tracking entry from the previous list to continue processing."
"RTN","IBTUTL1",136,0)
 .. S DIR("?")="Valid responses are 1 thru "_CNT_" or ^ to exit."
"RTN","IBTUTL1",137,0)
 .. D ^DIR
"RTN","IBTUTL1",138,0)
 .. I ($G(DTOUT))!($G(DUOUT))!($G(DIRUT))!($G(DIROUT)) S IBQUIT=1
"RTN","IBTUTL1",139,0)
 .. I Y>0 S X=+$G(TEMP(Y)) I +$P($G(TEMP(Y)),U,2)>0 S ENCTR=$P($G(TEMP(Y)),U,2)
"RTN","IBTUTL1",140,0)
 I IBQUIT Q
"RTN","IBTUTL1",141,0)
 I '$G(ENCTR) D
"RTN","IBTUTL1",142,0)
 . N CNT,DIR,IBDATA,IBDATA1,IBDATA2,IBERR,IBMSG,IBSCRN,IBTMP,LINE,TMP,X
"RTN","IBTUTL1",143,0)
 . N DIOUT,DIROUT,DTOUT,DUOUT
"RTN","IBTUTL1",144,0)
 . S X(1)=IBTDT
"RTN","IBTUTL1",145,0)
 . S IBSCRN="I $P($G(^(0)),U,2)="_DFN
"RTN","IBTUTL1",146,0)
 . S IBMSG="IBTMP(""ENC"")"
"RTN","IBTUTL1",147,0)
 . S IBERR="IBTMP(""ERR"")"
"RTN","IBTUTL1",148,0)
 . D FIND^DIC(409.68,,,"PQX",.X,,"B",IBSCRN,,IBMSG,IBERR)
"RTN","IBTUTL1",149,0)
 . I +IBTMP("ENC","DILIST",0)=0 S ENCTR="" Q
"RTN","IBTUTL1",150,0)
 . S CNT=+IBTMP("ENC","DILIST",0)+1
"RTN","IBTUTL1",151,0)
 . S (LINE,X)=0
"RTN","IBTUTL1",152,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",153,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",154,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",155,0)
 . S TMP("DIMSG",LINE)="There are encounters for the episode date you have selected:",LINE=LINE+1
"RTN","IBTUTL1",156,0)
 . S TMP("DIMSG",LINE)=" ",LINE=LINE+1
"RTN","IBTUTL1",157,0)
 . F  S X=$O(IBTMP("ENC","DILIST",X)) Q:X=""  D
"RTN","IBTUTL1",158,0)
 .. S LINE=LINE+1
"RTN","IBTUTL1",159,0)
 .. S IBDATA1=$P($G(IBTMP("ENC","DILIST",X,0)),"^"_IBTDT,1)
"RTN","IBTUTL1",160,0)
 .. S IBDATA2=$P($G(IBTMP("ENC","DILIST",X,0)),"^"_IBTDT,2)
"RTN","IBTUTL1",161,0)
 .. S IBDATA=$TR(IBDATA1_IBDATA2,"^"," ")
"RTN","IBTUTL1",162,0)
 .. S TMP("DIMSG",LINE)=$E(X_"    ",1,4)_IBDATA
"RTN","IBTUTL1",163,0)
 . S TMP("DIMSG",LINE+1)=$E(+IBTMP("ENC","DILIST",0)+1_"    ",1,4)_"*** CREATE A NEW CLAIMS TRACKING ENTRY WITHOUT AN ENCOUNTER ***"
"RTN","IBTUTL1",164,0)
 . D MSG^DIALOG("WM",,,,"TMP")
"RTN","IBTUTL1",165,0)
 . S DIR(0)="NA^1:"_CNT_":0"
"RTN","IBTUTL1",166,0)
 . S DIR("A")="Select an Encounter for the Claims Tracking entry: "
"RTN","IBTUTL1",167,0)
 . S DIR("?",1)="Choose an Encounter from the previous list to continue processing."
"RTN","IBTUTL1",168,0)
 . S DIR("?")="Valid responses are 1 thru "_CNT_" or ^ to exit."
"RTN","IBTUTL1",169,0)
 . D ^DIR
"RTN","IBTUTL1",170,0)
 . I ($G(DTOUT))!($G(DUOUT))!($G(DIRUT))!($G(DIROUT)) S IBQUIT=1
"RTN","IBTUTL1",171,0)
 . I +$G(Y)<1 Q
"RTN","IBTUTL1",172,0)
 . S ENCTR=+$G(IBTMP("ENC","DILIST",+Y,0)) I 'ENCTR Q
"RTN","IBTUTL1",173,0)
 . I $D(^IBT(356,"AENC",+DFN,ENCTR)) S IBTRN=$O(^IBT(356,"AENC",+DFN,ENCTR,0)) Q
"RTN","IBTUTL1",174,0)
 I IBQUIT Q
"RTN","IBTUTL1",175,0)
 G:$G(IBTRN)'="" OPTSCRNQ
"RTN","IBTUTL1",176,0)
 D ADDT^IBTUTL
"RTN","IBTUTL1",177,0)
 S DA=IBTRN,DIE="^IBT(356,"
"RTN","IBTUTL1",178,0)
 I IBTRN<1 G OPTSCRNQ
"RTN","IBTUTL1",179,0)
 L +^IBT(356,+IBTRN):10 I '$T G OPTSCRNQ
"RTN","IBTUTL1",180,0)
 S DR=".02////"_$G(DFN)_";.03////"_$G(IBVSIT)_";.04////"_$G(ENCTR)_";.06////"_+IBTDT_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
"RTN","IBTUTL1",181,0)
 I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
"RTN","IBTUTL1",182,0)
 D ^DIE K DA,DR,DIE
"RTN","IBTUTL1",183,0)
 L -^IBT(356,+IBTRN)
"RTN","IBTUTL1",184,0)
OPTSCRNQ Q
"RTN","IBY517PO")
0^3^B30255307^n/a
"RTN","IBY517PO",1,0)
IBY517PO ;ALB/FA - Post-Install for IB patch 517 ;03-JUN-2014
"RTN","IBY517PO",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBY517PO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY517PO",4,0)
 ;
"RTN","IBY517PO",5,0)
EN ; Entry point
"RTN","IBY517PO",6,0)
 N IBXPD,IBPRD,XPDIDTOT
"RTN","IBY517PO",7,0)
 S XPDIDTOT=6
"RTN","IBY517PO",8,0)
 ;
"RTN","IBY517PO",9,0)
 ; Determine if we're in a TEST or a PRODUCTION environment.
"RTN","IBY517PO",10,0)
 S IBPRD=$S($$PROD^XUPROD(1)=1:"P",1:"T")
"RTN","IBY517PO",11,0)
 ;
"RTN","IBY517PO",12,0)
 ; Set the defaults for the new Health Care Services Review Section of the
"RTN","IBY517PO",13,0)
 ; Claims Tracking site parameters
"RTN","IBY517PO",14,0)
 D SETPARMS(1)
"RTN","IBY517PO",15,0)
 D SETFSC(2,IBPRD)
"RTN","IBY517PO",16,0)
 D SETNTJB(3,IBPRD)
"RTN","IBY517PO",17,0)
 D CLEARDUP(4)
"RTN","IBY517PO",18,0)
 D REINDEX(5)
"RTN","IBY517PO",19,0)
 D DISPROT(6)
"RTN","IBY517PO",20,0)
 D DONE
"RTN","IBY517PO",21,0)
 Q
"RTN","IBY517PO",22,0)
 ;
"RTN","IBY517PO",23,0)
SETPARMS(IBXPD) ; Set the defaults for the new Health Care Services
"RTN","IBY517PO",24,0)
 ; Review Section of the Claims Tracking site parameters
"RTN","IBY517PO",25,0)
 ; Input:   IBXPD       - Post-Installation step being performed
"RTN","IBY517PO",26,0)
 ;          XPDIDTOT    - Total Number of Post-Installation steps to perform
"RTN","IBY517PO",27,0)
 ; Output:  Health Care Services Review site parameter defaults are set
"RTN","IBY517PO",28,0)
 N IEN,SDATA
"RTN","IBY517PO",29,0)
 S IEN="1,"
"RTN","IBY517PO",30,0)
 D BMES^XPDUTL("STEP "_IBXPD_" of "_XPDIDTOT)
"RTN","IBY517PO",31,0)
 D MES^XPDUTL("-----------")
"RTN","IBY517PO",32,0)
 D MES^XPDUTL("  Sets HCS Review Site Parameter Defaults ... ")
"RTN","IBY517PO",33,0)
 ;
"RTN","IBY517PO",34,0)
 ; Set fields 62.01 - 62.08
"RTN","IBY517PO",35,0)
 S SDATA(350.9,IEN,62.13)=30        ; CPAC APPT FUTURE DAYS default
"RTN","IBY517PO",36,0)
 S SDATA(350.9,IEN,62.02)=30        ; CPAC ADM FUTURE DAYS default
"RTN","IBY517PO",37,0)
 S SDATA(350.9,IEN,62.03)=14        ; CPAC APPT PAST DAYS default
"RTN","IBY517PO",38,0)
 S SDATA(350.9,IEN,62.04)=14        ; CPAC ADM PAST DAYS default
"RTN","IBY517PO",39,0)
 S SDATA(350.9,IEN,62.05)=30        ; TRICARE APPT FUTURE DAYS default
"RTN","IBY517PO",40,0)
 S SDATA(350.9,IEN,62.06)=30        ; TRICARE ADM FUTURE DAYS default
"RTN","IBY517PO",41,0)
 S SDATA(350.9,IEN,62.07)=14        ; TRICARE APPT PAST DAYS default
"RTN","IBY517PO",42,0)
 S SDATA(350.9,IEN,62.08)=14        ; TRICARE ADM PAST DAYS default
"RTN","IBY517PO",43,0)
 S SDATA(350.9,IEN,62.09)=2555      ; PURGE DAYS Default
"RTN","IBY517PO",44,0)
 S SDATA(350.9,IEN,62.10)=0         ; INQUIRY TRIGGER APPT default
"RTN","IBY517PO",45,0)
 S SDATA(350.9,IEN,62.11)=0         ; INQUIRY TRIGGER ADM Default
"RTN","IBY517PO",46,0)
 S SDATA(350.9,IEN,62.12)=20        ; HSCR RESPONSE PURGE DAYS Default
"RTN","IBY517PO",47,0)
 D FILE^DIE(,"SDATA")
"RTN","IBY517PO",48,0)
 D MES^XPDUTL("  HCS default site parameters have been updated successfully.")
"RTN","IBY517PO",49,0)
 D MES^XPDUTL("STEP 1: Done.")
"RTN","IBY517PO",50,0)
 D MES^XPDUTL("")
"RTN","IBY517PO",51,0)
 Q
"RTN","IBY517PO",52,0)
 ;
"RTN","IBY517PO",53,0)
SETFSC(IBXPD,IBPRD) ; Stuff FSC domain into link.
"RTN","IBY517PO",54,0)
 ; Input:   IBXPD       - Post-Installation step being performed
"RTN","IBY517PO",55,0)
 ;          IBPRD       - "T"=Test Environment; "P"=Production Environment.
"RTN","IBY517PO",56,0)
 N DIC,X,Y,DIE,DR,DA,DLAYGO
"RTN","IBY517PO",57,0)
 D BMES^XPDUTL("STEP "_IBXPD_" of "_XPDIDTOT)
"RTN","IBY517PO",58,0)
 D MES^XPDUTL("-----------")
"RTN","IBY517PO",59,0)
 D MES^XPDUTL("  Stuff FSC domain into the link ... ")
"RTN","IBY517PO",60,0)
 ;
"RTN","IBY517PO",61,0)
 ;Stuff FSC domain into link
"RTN","IBY517PO",62,0)
 S DIC="^HLCS(870,",DLAYGO=870,DIC(0)="LS" S X="HCSR OUT" D ^DIC
"RTN","IBY517PO",63,0)
 ; For test environments, use the FSC test domain
"RTN","IBY517PO",64,0)
 I IBPRD="T",Y'=-1 S DIE=DIC,DA=+Y,DR=".08///ECOMMLLPTST.FSC.DOMAIN.EXT;400.02///54469;4.5///1" K DIC D ^DIE
"RTN","IBY517PO",65,0)
 ; For Production environments, use the FSC PRD domain
"RTN","IBY517PO",66,0)
 I IBPRD="P",Y'=-1 S DIE=DIC,DA=+Y,DR=".08///ECOMMLLPPRD.FSC.DOMAIN.EXT;400.02///9346;4.5///1" K DIC D ^DIE
"RTN","IBY517PO",67,0)
 ; Stuff FSC domain into table update link
"RTN","IBY517PO",68,0)
 S DIC="^HLCS(870,",DLAYGO=870,DIC(0)="LS" S X="IBTUPD OUT" D ^DIC
"RTN","IBY517PO",69,0)
 I Y'=-1 S DIE=DIC,DA=+Y,DR=".08///Revenue.FSC-EDI.X12CODESUPDATES.DOMAIN.EXT" K DIC D ^DIE
"RTN","IBY517PO",70,0)
 ;
"RTN","IBY517PO",71,0)
 D MES^XPDUTL("STEP 2: Done.")
"RTN","IBY517PO",72,0)
 D MES^XPDUTL("")
"RTN","IBY517PO",73,0)
 Q
"RTN","IBY517PO",74,0)
 ;
"RTN","IBY517PO",75,0)
SETNTJB(IBXPD,IBPRD) ; Schedule the HCSR Patient Events Search Criteria
"RTN","IBY517PO",76,0)
 ; as a Night Job using TaskMan.
"RTN","IBY517PO",77,0)
 ; Input:   IBXPD       - Post-Installation step being performed
"RTN","IBY517PO",78,0)
 ;          IBPRD       - "T"=Test Environment; "P"=Production Environment.
"RTN","IBY517PO",79,0)
 N DIC,DLAYGO,TSTAMP,X,Y
"RTN","IBY517PO",80,0)
 D BMES^XPDUTL("STEP "_IBXPD_" of "_XPDIDTOT)
"RTN","IBY517PO",81,0)
 D MES^XPDUTL("-----------")
"RTN","IBY517PO",82,0)
 D MES^XPDUTL("  Setting up IBT HCSR NIGHTLY PROCESS ... ")
"RTN","IBY517PO",83,0)
 I IBPRD'="P" D MES^XPDUTL("  Not a production account. No TaskMan job scheduled.") G SETNTJBX
"RTN","IBY517PO",84,0)
 ;
"RTN","IBY517PO",85,0)
 I $$FIND1^DIC(19.2,,"B","IBT HCSR NIGHTLY PROCESS","B") D MES^XPDUTL(" Already scheduled") G SETNTJBX  ; don't overwrite existing schedule
"RTN","IBY517PO",86,0)
 S (DLAYGO,DIC)=19.2,DIC(0)="L"
"RTN","IBY517PO",87,0)
 S X="IBT HCSR NIGHTLY PROCESS"
"RTN","IBY517PO",88,0)
 S TSTAMP=$$FMADD^XLFDT($$NOW^XLFDT(),1),$P(TSTAMP,".",2)="2100"
"RTN","IBY517PO",89,0)
 S DIC("DR")="2////"_TSTAMP_";6////D@9PM"
"RTN","IBY517PO",90,0)
 D ^DIC
"RTN","IBY517PO",91,0)
 D MES^XPDUTL("STEP 3: Done.")
"RTN","IBY517PO",92,0)
 D MES^XPDUTL("")
"RTN","IBY517PO",93,0)
SETNTJBX ;
"RTN","IBY517PO",94,0)
 Q
"RTN","IBY517PO",95,0)
 ;
"RTN","IBY517PO",96,0)
CLEARDUP(IBXPD) ; clear duplicate entries in dictionary files
"RTN","IBY517PO",97,0)
 N CODE,FILE,NEWDESC,NEWIEN,OLDIEN
"RTN","IBY517PO",98,0)
 N DA,DIE,DIK,DR,X,Y
"RTN","IBY517PO",99,0)
 D BMES^XPDUTL(" STEP "_IBXPD_" of "_XPDIDTOT)
"RTN","IBY517PO",100,0)
 D MES^XPDUTL("-------------")
"RTN","IBY517PO",101,0)
 D MES^XPDUTL("Cleaning dictionary files ... ")
"RTN","IBY517PO",102,0)
 F FILE=365.013,365.015,365.016,365.017,365.021,365.022,365.025,365.027 D
"RTN","IBY517PO",103,0)
 .I '$D(^DIC(FILE)) Q
"RTN","IBY517PO",104,0)
 .S CODE="" F  S CODE=$O(^IBE(FILE,"B",CODE)) Q:CODE=""  D
"RTN","IBY517PO",105,0)
 ..S OLDIEN=$O(^IBE(FILE,"B",CODE,"")),NEWIEN=$O(^IBE(FILE,"B",CODE,""),-1)
"RTN","IBY517PO",106,0)
 ..I OLDIEN=NEWIEN Q  ; only one entry, no duplicates
"RTN","IBY517PO",107,0)
 ..; replace description in the old entry
"RTN","IBY517PO",108,0)
 ..S NEWDESC=$P($G(^IBE(FILE,NEWIEN,0)),U,2) I NEWDESC="" Q
"RTN","IBY517PO",109,0)
 ..S DIE=FILE,DA=OLDIEN,DR=".02///"_NEWDESC D ^DIE
"RTN","IBY517PO",110,0)
 ..; delete duplicate entry
"RTN","IBY517PO",111,0)
 ..S DA=NEWIEN,DIK="^IBE("_FILE_"," D ^DIK
"RTN","IBY517PO",112,0)
 ..Q
"RTN","IBY517PO",113,0)
 .Q
"RTN","IBY517PO",114,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY517PO",115,0)
 D UPDATE^XPDID(IBXPD)
"RTN","IBY517PO",116,0)
 Q
"RTN","IBY517PO",117,0)
 ;
"RTN","IBY517PO",118,0)
REINDEX(IBXPD) ; Run new indices.  This is needed for entries at site not in file coming across.
"RTN","IBY517PO",119,0)
 N FILE,DIK,X,Y
"RTN","IBY517PO",120,0)
 D BMES^XPDUTL(" STEP "_IBXPD_" of "_XPDIDTOT)
"RTN","IBY517PO",121,0)
 D MES^XPDUTL("-------------")
"RTN","IBY517PO",122,0)
 D MES^XPDUTL("Running new indices ... ")
"RTN","IBY517PO",123,0)
 F FILE=365.013,365.015,365.016,365.021,365.022,365.025 D
"RTN","IBY517PO",124,0)
 .S DIK="^IBE("_FILE_","
"RTN","IBY517PO",125,0)
 .S DIK(1)=".02^C"
"RTN","IBY517PO",126,0)
 .D ENALL^DIK
"RTN","IBY517PO",127,0)
 .Q
"RTN","IBY517PO",128,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY517PO",129,0)
 D UPDATE^XPDID(IBXPD)
"RTN","IBY517PO",130,0)
 Q
"RTN","IBY517PO",131,0)
 ;
"RTN","IBY517PO",132,0)
DISPROT(IBXPD) ; disable action protocols IBT HCSR SEND 278 REQUEST and IBT HCSR COPY 278 REQUEST
"RTN","IBY517PO",133,0)
 N FDA,PRIEN,PRNAME
"RTN","IBY517PO",134,0)
 D BMES^XPDUTL(" STEP "_IBXPD_" of "_XPDIDTOT)
"RTN","IBY517PO",135,0)
 D MES^XPDUTL("-------------")
"RTN","IBY517PO",136,0)
 D MES^XPDUTL("Disabling out-of-order actions ... ")
"RTN","IBY517PO",137,0)
 F PRNAME="IBT HCSR SEND 278 REQUEST","IBT HCSR COPY 278 REQUEST","IBT HCSR RESPONSE EE SEND278" D
"RTN","IBY517PO",138,0)
 .S PRIEN=+$$FIND1^DIC(101,,"X",PRNAME,"B")
"RTN","IBY517PO",139,0)
 .I PRIEN S FDA(101,PRIEN_",",2)="This action is not currently available."
"RTN","IBY517PO",140,0)
 .Q
"RTN","IBY517PO",141,0)
 I $D(FDA) D FILE^DIE("E","FDA")
"RTN","IBY517PO",142,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY517PO",143,0)
 D UPDATE^XPDID(IBXPD)
"RTN","IBY517PO",144,0)
 Q
"RTN","IBY517PO",145,0)
 ;
"RTN","IBY517PO",146,0)
DONE ; Displays the 'Done' message and finishes the progress bar
"RTN","IBY517PO",147,0)
 D MES^XPDUTL("")
"RTN","IBY517PO",148,0)
 D MES^XPDUTL("POST-Install Completed.")
"RTN","IBY517PO",149,0)
 Q
"RTN","IBY517PO",150,0)
 ;
"RTN","IBY517PR")
0^42^B911220^n/a
"RTN","IBY517PR",1,0)
IBY517PR ;FA/ALB - Pre-Install for IB patch 517 ;01-Jan-2015
"RTN","IBY517PR",2,0)
 ;;2.0;INTEGRATED BILLING;**517**;21-MAR-94;Build 240
"RTN","IBY517PR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY517PR",4,0)
 ;
"RTN","IBY517PR",5,0)
EN ; Standard Entry Point
"RTN","IBY517PR",6,0)
 D CLEAR,DDFIX
"RTN","IBY517PR",7,0)
 Q
"RTN","IBY517PR",8,0)
 ;
"RTN","IBY517PR",9,0)
CLEAR ; Clear indices for 365* descriptions prior to installing new set and kills
"RTN","IBY517PR",10,0)
 N DIK,IX
"RTN","IBY517PR",11,0)
 F IX=365.013,365.015,365.016,365.021,365.022,365.025 D
"RTN","IBY517PR",12,0)
 . S DIK="^IBE("_IX_","
"RTN","IBY517PR",13,0)
 . S DIK(1)=".02^C"
"RTN","IBY517PR",14,0)
 . D ENALL2^DIK
"RTN","IBY517PR",15,0)
 ; clear out file 356.023 - values have changed
"RTN","IBY517PR",16,0)
 S DIK="^IBT(356.023,",DA=0
"RTN","IBY517PR",17,0)
 F  S DA=$O(^IBT(356.023,DA)) Q:DA'=+DA  D ^DIK
"RTN","IBY517PR",18,0)
 Q
"RTN","IBY517PR",19,0)
 ;
"RTN","IBY517PR",20,0)
DDFIX ; removed prior Mumps index definitions before installing patch with New Standard indexes
"RTN","IBY517PR",21,0)
 N I,FILE
"RTN","IBY517PR",22,0)
 F I=1:1:22 D
"RTN","IBY517PR",23,0)
 . I I<10 S FILE="356.00"_I
"RTN","IBY517PR",24,0)
 . I I=10!(I=20) S FILE="356.0"_$E(I)
"RTN","IBY517PR",25,0)
 . I I>10,I'=20 S FILE="356.0"_I
"RTN","IBY517PR",26,0)
 . D DELIX^DDMOD(FILE,.02,1,"K")
"RTN","IBY517PR",27,0)
 . Q
"RTN","IBY517PR",28,0)
 Q
"SEC","^DIC",356.001,356.001,0,"AUDIT")

"SEC","^DIC",356.001,356.001,0,"DD")
@
"SEC","^DIC",356.001,356.001,0,"DEL")
@
"SEC","^DIC",356.001,356.001,0,"LAYGO")
@
"SEC","^DIC",356.001,356.001,0,"RD")

"SEC","^DIC",356.001,356.001,0,"WR")

"SEC","^DIC",356.002,356.002,0,"AUDIT")

"SEC","^DIC",356.002,356.002,0,"DD")
@
"SEC","^DIC",356.002,356.002,0,"DEL")
@
"SEC","^DIC",356.002,356.002,0,"LAYGO")
@
"SEC","^DIC",356.002,356.002,0,"RD")

"SEC","^DIC",356.002,356.002,0,"WR")

"SEC","^DIC",356.003,356.003,0,"AUDIT")

"SEC","^DIC",356.003,356.003,0,"DD")
@
"SEC","^DIC",356.003,356.003,0,"DEL")
@
"SEC","^DIC",356.003,356.003,0,"LAYGO")
@
"SEC","^DIC",356.003,356.003,0,"RD")

"SEC","^DIC",356.003,356.003,0,"WR")

"SEC","^DIC",356.004,356.004,0,"AUDIT")

"SEC","^DIC",356.004,356.004,0,"DD")
@
"SEC","^DIC",356.004,356.004,0,"DEL")
@
"SEC","^DIC",356.004,356.004,0,"LAYGO")
@
"SEC","^DIC",356.004,356.004,0,"RD")

"SEC","^DIC",356.004,356.004,0,"WR")

"SEC","^DIC",356.005,356.005,0,"AUDIT")

"SEC","^DIC",356.005,356.005,0,"DD")
@
"SEC","^DIC",356.005,356.005,0,"DEL")
@
"SEC","^DIC",356.005,356.005,0,"LAYGO")
@
"SEC","^DIC",356.005,356.005,0,"RD")

"SEC","^DIC",356.005,356.005,0,"WR")

"SEC","^DIC",356.006,356.006,0,"AUDIT")

"SEC","^DIC",356.006,356.006,0,"DD")
@
"SEC","^DIC",356.006,356.006,0,"DEL")
@
"SEC","^DIC",356.006,356.006,0,"LAYGO")
@
"SEC","^DIC",356.006,356.006,0,"RD")

"SEC","^DIC",356.006,356.006,0,"WR")

"SEC","^DIC",356.007,356.007,0,"AUDIT")

"SEC","^DIC",356.007,356.007,0,"DD")
@
"SEC","^DIC",356.007,356.007,0,"DEL")
@
"SEC","^DIC",356.007,356.007,0,"LAYGO")
@
"SEC","^DIC",356.007,356.007,0,"RD")

"SEC","^DIC",356.007,356.007,0,"WR")

"SEC","^DIC",356.008,356.008,0,"AUDIT")

"SEC","^DIC",356.008,356.008,0,"DD")
@
"SEC","^DIC",356.008,356.008,0,"DEL")
@
"SEC","^DIC",356.008,356.008,0,"LAYGO")
@
"SEC","^DIC",356.008,356.008,0,"RD")

"SEC","^DIC",356.008,356.008,0,"WR")

"SEC","^DIC",356.009,356.009,0,"AUDIT")

"SEC","^DIC",356.009,356.009,0,"DD")
@
"SEC","^DIC",356.009,356.009,0,"DEL")
@
"SEC","^DIC",356.009,356.009,0,"LAYGO")
@
"SEC","^DIC",356.009,356.009,0,"RD")

"SEC","^DIC",356.009,356.009,0,"WR")

"SEC","^DIC",356.01,356.01,0,"AUDIT")

"SEC","^DIC",356.01,356.01,0,"DD")
@
"SEC","^DIC",356.01,356.01,0,"DEL")
@
"SEC","^DIC",356.01,356.01,0,"LAYGO")
@
"SEC","^DIC",356.01,356.01,0,"RD")

"SEC","^DIC",356.01,356.01,0,"WR")

"SEC","^DIC",356.011,356.011,0,"AUDIT")

"SEC","^DIC",356.011,356.011,0,"DD")
@
"SEC","^DIC",356.011,356.011,0,"DEL")
@
"SEC","^DIC",356.011,356.011,0,"LAYGO")
@
"SEC","^DIC",356.011,356.011,0,"RD")

"SEC","^DIC",356.011,356.011,0,"WR")

"SEC","^DIC",356.012,356.012,0,"AUDIT")

"SEC","^DIC",356.012,356.012,0,"DD")
@
"SEC","^DIC",356.012,356.012,0,"DEL")
@
"SEC","^DIC",356.012,356.012,0,"LAYGO")
@
"SEC","^DIC",356.012,356.012,0,"RD")

"SEC","^DIC",356.012,356.012,0,"WR")

"SEC","^DIC",356.013,356.013,0,"AUDIT")

"SEC","^DIC",356.013,356.013,0,"DD")
@
"SEC","^DIC",356.013,356.013,0,"DEL")
@
"SEC","^DIC",356.013,356.013,0,"LAYGO")
@
"SEC","^DIC",356.013,356.013,0,"RD")

"SEC","^DIC",356.013,356.013,0,"WR")

"SEC","^DIC",356.014,356.014,0,"AUDIT")

"SEC","^DIC",356.014,356.014,0,"DD")
@
"SEC","^DIC",356.014,356.014,0,"DEL")
@
"SEC","^DIC",356.014,356.014,0,"LAYGO")
@
"SEC","^DIC",356.014,356.014,0,"RD")

"SEC","^DIC",356.014,356.014,0,"WR")

"SEC","^DIC",356.015,356.015,0,"AUDIT")

"SEC","^DIC",356.015,356.015,0,"DD")
@
"SEC","^DIC",356.015,356.015,0,"DEL")
@
"SEC","^DIC",356.015,356.015,0,"LAYGO")
@
"SEC","^DIC",356.015,356.015,0,"RD")

"SEC","^DIC",356.015,356.015,0,"WR")

"SEC","^DIC",356.016,356.016,0,"AUDIT")

"SEC","^DIC",356.016,356.016,0,"DD")
@
"SEC","^DIC",356.016,356.016,0,"DEL")
@
"SEC","^DIC",356.016,356.016,0,"LAYGO")
@
"SEC","^DIC",356.016,356.016,0,"RD")

"SEC","^DIC",356.016,356.016,0,"WR")

"SEC","^DIC",356.017,356.017,0,"AUDIT")

"SEC","^DIC",356.017,356.017,0,"DD")
@
"SEC","^DIC",356.017,356.017,0,"DEL")
@
"SEC","^DIC",356.017,356.017,0,"LAYGO")
@
"SEC","^DIC",356.017,356.017,0,"RD")

"SEC","^DIC",356.017,356.017,0,"WR")

"SEC","^DIC",356.018,356.018,0,"AUDIT")

"SEC","^DIC",356.018,356.018,0,"DD")
@
"SEC","^DIC",356.018,356.018,0,"DEL")
@
"SEC","^DIC",356.018,356.018,0,"LAYGO")
@
"SEC","^DIC",356.018,356.018,0,"RD")

"SEC","^DIC",356.018,356.018,0,"WR")

"SEC","^DIC",356.019,356.019,0,"AUDIT")

"SEC","^DIC",356.019,356.019,0,"DD")
@
"SEC","^DIC",356.019,356.019,0,"DEL")
@
"SEC","^DIC",356.019,356.019,0,"LAYGO")
@
"SEC","^DIC",356.019,356.019,0,"RD")

"SEC","^DIC",356.019,356.019,0,"WR")

"SEC","^DIC",356.02,356.02,0,"AUDIT")
 
"SEC","^DIC",356.02,356.02,0,"DD")
@
"SEC","^DIC",356.02,356.02,0,"DEL")
@
"SEC","^DIC",356.02,356.02,0,"LAYGO")
@
"SEC","^DIC",356.02,356.02,0,"RD")
 
"SEC","^DIC",356.02,356.02,0,"WR")
 
"SEC","^DIC",356.021,356.021,0,"AUDIT")
 
"SEC","^DIC",356.021,356.021,0,"DD")
@
"SEC","^DIC",356.021,356.021,0,"DEL")
@
"SEC","^DIC",356.021,356.021,0,"LAYGO")
@
"SEC","^DIC",356.021,356.021,0,"RD")
 
"SEC","^DIC",356.021,356.021,0,"WR")
 
"SEC","^DIC",356.022,356.022,0,"AUDIT")

"SEC","^DIC",356.022,356.022,0,"DD")
@
"SEC","^DIC",356.022,356.022,0,"DEL")
@
"SEC","^DIC",356.022,356.022,0,"LAYGO")
@
"SEC","^DIC",356.022,356.022,0,"RD")
 
"SEC","^DIC",356.022,356.022,0,"WR")

"SEC","^DIC",356.023,356.023,0,"AUDIT")
@
"SEC","^DIC",356.023,356.023,0,"DD")
@
"SEC","^DIC",356.023,356.023,0,"DEL")
@
"SEC","^DIC",356.023,356.023,0,"LAYGO")
@
"SEC","^DIC",356.023,356.023,0,"RD")
@
"SEC","^DIC",356.023,356.023,0,"WR")
@
"SEC","^DIC",356.22,356.22,0,"AUDIT")
@
"SEC","^DIC",356.22,356.22,0,"DD")
@
"SEC","^DIC",356.22,356.22,0,"DEL")
@
"SEC","^DIC",356.22,356.22,0,"LAYGO")
@
"SEC","^DIC",356.22,356.22,0,"RD")
@
"SEC","^DIC",356.22,356.22,0,"WR")
@
"SEC","^DIC",365.013,365.013,0,"AUDIT")

"SEC","^DIC",365.013,365.013,0,"DD")
@
"SEC","^DIC",365.013,365.013,0,"DEL")
@
"SEC","^DIC",365.013,365.013,0,"LAYGO")
@
"SEC","^DIC",365.013,365.013,0,"RD")

"SEC","^DIC",365.013,365.013,0,"WR")

"SEC","^DIC",365.015,365.015,0,"AUDIT")

"SEC","^DIC",365.015,365.015,0,"DD")
@
"SEC","^DIC",365.015,365.015,0,"DEL")
@
"SEC","^DIC",365.015,365.015,0,"LAYGO")
@
"SEC","^DIC",365.015,365.015,0,"RD")

"SEC","^DIC",365.015,365.015,0,"WR")

"SEC","^DIC",365.016,365.016,0,"AUDIT")

"SEC","^DIC",365.016,365.016,0,"DD")
@
"SEC","^DIC",365.016,365.016,0,"DEL")
@
"SEC","^DIC",365.016,365.016,0,"LAYGO")
@
"SEC","^DIC",365.016,365.016,0,"RD")

"SEC","^DIC",365.016,365.016,0,"WR")

"SEC","^DIC",365.017,365.017,0,"AUDIT")

"SEC","^DIC",365.017,365.017,0,"DD")
@
"SEC","^DIC",365.017,365.017,0,"DEL")
@
"SEC","^DIC",365.017,365.017,0,"LAYGO")
@
"SEC","^DIC",365.017,365.017,0,"RD")

"SEC","^DIC",365.017,365.017,0,"WR")

"SEC","^DIC",365.021,365.021,0,"AUDIT")

"SEC","^DIC",365.021,365.021,0,"DD")
@
"SEC","^DIC",365.021,365.021,0,"DEL")
@
"SEC","^DIC",365.021,365.021,0,"LAYGO")
@
"SEC","^DIC",365.021,365.021,0,"RD")

"SEC","^DIC",365.021,365.021,0,"WR")

"SEC","^DIC",365.022,365.022,0,"AUDIT")

"SEC","^DIC",365.022,365.022,0,"DD")
@
"SEC","^DIC",365.022,365.022,0,"DEL")
@
"SEC","^DIC",365.022,365.022,0,"LAYGO")
@
"SEC","^DIC",365.022,365.022,0,"RD")

"SEC","^DIC",365.022,365.022,0,"WR")

"SEC","^DIC",365.025,365.025,0,"AUDIT")

"SEC","^DIC",365.025,365.025,0,"DD")
@
"SEC","^DIC",365.025,365.025,0,"DEL")
@
"SEC","^DIC",365.025,365.025,0,"LAYGO")
@
"SEC","^DIC",365.025,365.025,0,"RD")

"SEC","^DIC",365.025,365.025,0,"WR")

"SEC","^DIC",365.027,365.027,0,"AUDIT")

"SEC","^DIC",365.027,365.027,0,"DD")
@
"SEC","^DIC",365.027,365.027,0,"DEL")
@
"SEC","^DIC",365.027,365.027,0,"LAYGO")
@
"SEC","^DIC",365.027,365.027,0,"RD")

"SEC","^DIC",365.027,365.027,0,"WR")

"UP",350.9,350.963,-1)
350.9^63
"UP",350.9,350.963,0)
350.963
"UP",350.9,350.9631,-2)
350.9^63
"UP",350.9,350.9631,-1)
350.963^1
"UP",350.9,350.9631,0)
350.9631
"UP",350.9,350.964,-1)
350.9^64
"UP",350.9,350.964,0)
350.964
"UP",350.9,350.9641,-2)
350.9^64
"UP",350.9,350.9641,-1)
350.964^1
"UP",350.9,350.9641,0)
350.9641
"UP",350.9,350.965,-1)
350.9^65
"UP",350.9,350.965,0)
350.965
"UP",350.9,350.966,-1)
350.9^66
"UP",350.9,350.966,0)
350.966
"VER")
8.0^22.0
"^DD",350.9,350.9,62.02,0)
CPAC ADM FUTURE DAYS^NJ3,0^^62;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,62.02,3)
Type the number of days into the future (between 0 and 999) to search for CPAC Admissions.
"^DD",350.9,350.9,62.02,21,0)
^^3^3^3140924^
"^DD",350.9,350.9,62.02,21,1,0)
The number of days into the future the CPAC Scheduled Admissions search
"^DD",350.9,350.9,62.02,21,2,0)
should use when attempting to create HCSR Transmission entries for future
"^DD",350.9,350.9,62.02,21,3,0)
CPAC Admissions.
"^DD",350.9,350.9,62.02,"DT")
3140924
"^DD",350.9,350.9,62.03,0)
CPAC APPT PAST DAYS^NJ3,0^^62;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,62.03,3)
Type the number of days into the past (between 0 and 999) to search for CPAC Appointments.
"^DD",350.9,350.9,62.03,21,0)
^^3^3^3140924^
"^DD",350.9,350.9,62.03,21,1,0)
The number of days into the past the CPAC Scheduled Appointments search
"^DD",350.9,350.9,62.03,21,2,0)
should use when attempting to create HCSR Transmission entries for past
"^DD",350.9,350.9,62.03,21,3,0)
CPAC Appointments.
"^DD",350.9,350.9,62.03,"DT")
3140924
"^DD",350.9,350.9,62.04,0)
CPAC ADM PAST DAYS^NJ3,0^^62;4^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,62.04,3)
Type the number of days into the past (between 0 and 999) to search for CPAC Admissions.
"^DD",350.9,350.9,62.04,21,0)
^^3^3^3140924^
"^DD",350.9,350.9,62.04,21,1,0)
The number of days into the past the CPAC Scheduled Admissions search
"^DD",350.9,350.9,62.04,21,2,0)
should use when attempting to create HCSR Transmission entries for past
"^DD",350.9,350.9,62.04,21,3,0)
CPAC Admissions.
"^DD",350.9,350.9,62.04,"DT")
3140924
"^DD",350.9,350.9,62.05,0)
TRICARE APPT FUTURE DAYS^NJ3,0^^62;5^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,62.05,3)
Type the number of days into the future (between 0 and 999) to search for TRICARE/CHAMPVA Appointments.
"^DD",350.9,350.9,62.05,21,0)
^^3^3^3140924^
"^DD",350.9,350.9,62.05,21,1,0)
The number of days into the future the TRICARE/CHAMPVA Scheduled 
"^DD",350.9,350.9,62.05,21,2,0)
Appointments search should use when attempting to create HCSR Transmission
"^DD",350.9,350.9,62.05,21,3,0)
entries for future TRICARE/CHAMPVA Appointments.
"^DD",350.9,350.9,62.05,"DT")
3140924
"^DD",350.9,350.9,62.06,0)
TRICARE ADM FUTURE DAYS^NJ3,0^^62;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,62.06,3)
Type the number of days into the future (between 0 and 999) to search for TRICARE/CHAMPVA Admissions.
"^DD",350.9,350.9,62.06,21,0)
^^3^3^3140924^
"^DD",350.9,350.9,62.06,21,1,0)
The number of days into the future the TRICARE/CHAMPVA Scheduled 
"^DD",350.9,350.9,62.06,21,2,0)
Admissions search should use when trying to create HCSR Transmission
"^DD",350.9,350.9,62.06,21,3,0)
entries for future TRICARE/CHAMPVA Admissions.
"^DD",350.9,350.9,62.06,"DT")
3140924
"^DD",350.9,350.9,62.07,0)
TRICARE APPT PAST DAYS^NJ3,0^^62;7^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,62.07,3)
Type the number of days into the past (between 0 and 999) to search for TRICARE/CHAMPVA Appointments.
"^DD",350.9,350.9,62.07,21,0)
^^3^3^3140924^
"^DD",350.9,350.9,62.07,21,1,0)
The number of days into the past the TRICARE/CHAMPVA Scheduled 
"^DD",350.9,350.9,62.07,21,2,0)
Appointments search should use when trying to create HCSR Transmission
"^DD",350.9,350.9,62.07,21,3,0)
entries for past TRICARE/CHAMPVA Appointments.
"^DD",350.9,350.9,62.07,"DT")
3140924
"^DD",350.9,350.9,62.08,0)
TRICARE ADM PAST DAYS^NJ3,0^^62;8^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,62.08,3)
Type the number of days into the past (between 0 and 999) to search for TRICARE/CHAMPVA Admissions.
"^DD",350.9,350.9,62.08,21,0)
^^3^3^3140924^
"^DD",350.9,350.9,62.08,21,1,0)
The number of days into the past the TRICARE/CHAMPVA Scheduled 
"^DD",350.9,350.9,62.08,21,2,0)
Appointments search should use when trying to create HCSR Transmission
"^DD",350.9,350.9,62.08,21,3,0)
entries for past TRICARE/CHAMPVA Admissions.
"^DD",350.9,350.9,62.08,"DT")
3140924
"^DD",350.9,350.9,62.09,0)
PURGE DAYS^RNJ4,0^^62;9^K:+X'=X!(X>3000)!(X<365)!(X?.E1"."1.N) X
"^DD",350.9,350.9,62.09,3)
Type the number of days to retain HCSR Transmission entries (between 365 and 3000) before removing them from the file.
"^DD",350.9,350.9,62.09,21,0)
^.001^2^2^3141013^^
"^DD",350.9,350.9,62.09,21,1,0)
The number of days to retain events in the HCSR Worklist (file 356.22) 
"^DD",350.9,350.9,62.09,21,2,0)
before removing them from the file.
"^DD",350.9,350.9,62.09,"DT")
3140924
"^DD",350.9,350.9,62.1,0)
INQUIRY TRIGGER APPT^NJ2,0^^62;10^K:+X'=X!(X>14)!(X<0)!(X?.E1"."1.N) X
"^DD",350.9,350.9,62.1,.1)
Inquiry can be Triggered for Appointment
"^DD",350.9,350.9,62.1,3)
Type the number of days to wait (between 0 and 14) before triggering a 278 inquiry for HCSR Transmission entries created from appointments..
"^DD",350.9,350.9,62.1,21,0)
^^6^6^3141208^
"^DD",350.9,350.9,62.1,21,1,0)
The number of days after the creation of an HCSR Worklist entry from 
"^DD",350.9,350.9,62.1,21,2,0)
an appointment to wait before automatically triggering a 278 Inquiry.
"^DD",350.9,350.9,62.1,21,3,0)
Note, if the triggered inquiry does not generate a response, another 
"^DD",350.9,350.9,62.1,21,4,0)
inquiry will automatically be triggered again at a future date using
"^DD",350.9,350.9,62.1,21,5,0)
this parameter.  Inquiries will continue to be triggered until a
"^DD",350.9,350.9,62.1,21,6,0)
response is received or the entry is purged from the worklist.
"^DD",350.9,350.9,62.1,"DT")
3141208
"^DD",350.9,350.9,62.11,0)
INQUIRY TRIGGER ADM^NJ2,0^^62;11^K:+X'=X!(X>14)!(X<0)!(X?.E1"."1.N) X
"^DD",350.9,350.9,62.11,.1)
Inquiry can be Triggered for Admission
"^DD",350.9,350.9,62.11,3)
Type the number of days to wait (between 0 and 14) before triggering a 278 Inquiry for HCSR Transmission entries created from admissions.
"^DD",350.9,350.9,62.11,21,0)
^^6^6^3141208^
"^DD",350.9,350.9,62.11,21,1,0)
The number of days after the creation of an HCSR Worklist entry from 
"^DD",350.9,350.9,62.11,21,2,0)
an admission to wait before automatically triggering a 278 Inquiry.
"^DD",350.9,350.9,62.11,21,3,0)
Note, if the triggered inquiry does not generate a response, another 
"^DD",350.9,350.9,62.11,21,4,0)
inquiry will automatically be triggered again at a future date using
"^DD",350.9,350.9,62.11,21,5,0)
this parameter.  Inquiries will continue to be triggered until a
"^DD",350.9,350.9,62.11,21,6,0)
response is received or the entry is purged from the worklist.
"^DD",350.9,350.9,62.11,"DT")
3141208
"^DD",350.9,350.9,62.12,0)
HSCR RESPONSE PURGE DAYS^NJ2,0^^62;12^K:+X'=X!(X>45)!(X<1)!(X?.E1"."1.N) X
"^DD",350.9,350.9,62.12,.1)
Days to wait to purge entry on HCSR Response
"^DD",350.9,350.9,62.12,3)
Type the number of days (between 1 and 45) to display an entry with a completed response on the HCSR Response View before removing it. 
"^DD",350.9,350.9,62.12,21,0)
^^2^2^3140925^
"^DD",350.9,350.9,62.12,21,1,0)
This is the number of days an HCSR Transmission entry with a completed 
"^DD",350.9,350.9,62.12,21,2,0)
response status will be displayed on the HCSR Response Worklist.
"^DD",350.9,350.9,62.12,"DT")
3140925
"^DD",350.9,350.9,62.13,0)
CPAC APPT FUTURE DAYS^NJ3,0^^62;13^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",350.9,350.9,62.13,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",350.9,350.9,62.13,21,0)
^^3^3^3150210^
"^DD",350.9,350.9,62.13,21,1,0)
The number of days into the future the CPAC Scheduled Appointments
"^DD",350.9,350.9,62.13,21,2,0)
search should use when attempting to create HCSR Transmission entries
"^DD",350.9,350.9,62.13,21,3,0)
for future CPAC Appointments.
"^DD",350.9,350.9,62.13,"DT")
3150210
"^DD",350.9,350.9,63,0)
HCSR CLINIC LIST^350.963PA^^63;0
"^DD",350.9,350.9,63,21,0)
^.001^4^4^3150516^^
"^DD",350.9,350.9,63,21,1,0)
Contains all of the clinics to be included in the search when trying to 
"^DD",350.9,350.9,63,21,2,0)
create HCSR Transmission entries for past and future appointments. 
"^DD",350.9,350.9,63,21,3,0)
Entries will not be created for appointments if the appointment's clinic 
"^DD",350.9,350.9,63,21,4,0)
is not in this list.
"^DD",350.9,350.9,64,0)
HCSR WARD LIST^350.964PA^^64;0
"^DD",350.9,350.9,64,21,0)
^^4^4^3150930^
"^DD",350.9,350.9,64,21,1,0)
Contains all of the wards to be included in the search when trying to
"^DD",350.9,350.9,64,21,2,0)
create HCSR Transmission entries for past and future admissions.
"^DD",350.9,350.9,64,21,3,0)
Entries will not be created for admissions if the admission's ward
"^DD",350.9,350.9,64,21,4,0)
is not included in this list.
"^DD",350.9,350.9,65,0)
HCSR INSCO APPT LIST^350.965PA^^65;0
"^DD",350.9,350.9,65,21,0)
^^4^4^3140924^
"^DD",350.9,350.9,65,21,1,0)
Contains all of the insurance companies to be excluded from the search 
"^DD",350.9,350.9,65,21,2,0)
when trying to create HCSR Transmission entries for past and future
"^DD",350.9,350.9,65,21,3,0)
appointments. Entries will not be created if the insurance company of the
"^DD",350.9,350.9,65,21,4,0)
patient is included in this list.
"^DD",350.9,350.9,66,0)
HCSR INSCO ADM LIST^350.966PA^^66;0
"^DD",350.9,350.9,66,21,0)
^^4^4^3140924^
"^DD",350.9,350.9,66,21,1,0)
Contains all of the insurance companies to be excluded from the search 
"^DD",350.9,350.9,66,21,2,0)
when trying to create HCSR Transmission entries for past and future
"^DD",350.9,350.9,66,21,3,0)
admissions. Entries will not be created if the insurance company of the
"^DD",350.9,350.9,66,21,4,0)
patient is included in this list.
"^DD",350.9,350.963,0)
HCSR CLINIC LIST SUB-FIELD^^1^3
"^DD",350.9,350.963,0,"DT")
3150516
"^DD",350.9,350.963,0,"IX","B",350.963,.01)

"^DD",350.9,350.963,0,"NM","HCSR CLINIC LIST")

"^DD",350.9,350.963,0,"UP")
350.9
"^DD",350.9,350.963,.01,0)
NAME^P44'^SC(^0;1^Q
"^DD",350.9,350.963,.01,1,0)
^.1
"^DD",350.9,350.963,.01,1,1,0)
350.963^B
"^DD",350.9,350.963,.01,1,1,1)
S ^IBE(350.9,DA(1),63,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.963,.01,1,1,2)
K ^IBE(350.9,DA(1),63,"B",$E(X,1,30),DA)
"^DD",350.9,350.963,.01,3)
Enter a valid Clinic.
"^DD",350.9,350.963,.01,21,0)
^^2^2^3140924^
"^DD",350.9,350.963,.01,21,1,0)
The name of a clinic to search for when creating HCSR Transmission 
"^DD",350.9,350.963,.01,21,2,0)
entries for appointments.
"^DD",350.9,350.963,.01,"DT")
3140924
"^DD",350.9,350.963,.02,0)
INCLUDE FOR ALL PAYERS?^S^0:NO;1:YES;^0;2^Q
"^DD",350.9,350.963,.02,3)
Set this to YES if clinic should be included in HCSR search for all payers.
"^DD",350.9,350.963,.02,21,0)
^^3^3^3150516^
"^DD",350.9,350.963,.02,21,1,0)
If set to YES, this particular clinic will be included in HCSR search for 
"^DD",350.9,350.963,.02,21,2,0)
all payers. If set to NO, clinic will be included in HCSR search only for 
"^DD",350.9,350.963,.02,21,3,0)
payers listed in sub-file 350.9631.
"^DD",350.9,350.963,.02,"DT")
3150516
"^DD",350.9,350.963,1,0)
INCLUDE CLINIC FOR PAYERS^350.9631PA^^1;0
"^DD",350.9,350.963,1,21,0)
^^3^3^3151022^^
"^DD",350.9,350.963,1,21,1,0)
If field 350.963/.02 is set to NO, HCSR search for this particular clinic
"^DD",350.9,350.963,1,21,2,0)
will include only payers listed in this multiple. If field 350.963/.02 is 
"^DD",350.9,350.963,1,21,3,0)
set to YES, this list has no effect on how HCSR search works.
"^DD",350.9,350.963,1,"DT")
3151022
"^DD",350.9,350.9631,0)
INCLUDE CLINIC FOR PAYERS SUB-FIELD^^.01^1
"^DD",350.9,350.9631,0,"DT")
3150516
"^DD",350.9,350.9631,0,"IX","B",350.9631,.01)

"^DD",350.9,350.9631,0,"NM","INCLUDE CLINIC FOR PAYERS")

"^DD",350.9,350.9631,0,"UP")
350.963
"^DD",350.9,350.9631,.01,0)
PAYER^P365.12'^IBE(365.12,^0;1^Q
"^DD",350.9,350.9631,.01,1,0)
^.1
"^DD",350.9,350.9631,.01,1,1,0)
350.9631^B
"^DD",350.9,350.9631,.01,1,1,1)
S ^IBE(350.9,DA(2),63,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.9631,.01,1,1,2)
K ^IBE(350.9,DA(2),63,DA(1),1,"B",$E(X,1,30),DA)
"^DD",350.9,350.9631,.01,3)
Select a payer to be included in HCSR search for this clinic.
"^DD",350.9,350.9631,.01,21,0)
^^1^1^3150516^
"^DD",350.9,350.9631,.01,21,1,0)
This is a payer to be included in HCSR search.
"^DD",350.9,350.9631,.01,"DT")
3150516
"^DD",350.9,350.964,0)
HCSR WARD LIST SUB-FIELD^^1^3
"^DD",350.9,350.964,0,"DT")
3150930
"^DD",350.9,350.964,0,"IX","B",350.964,.01)

"^DD",350.9,350.964,0,"NM","HCSR WARD LIST")

"^DD",350.9,350.964,0,"UP")
350.9
"^DD",350.9,350.964,.01,0)
NAME^P42'^DIC(42,^0;1^Q
"^DD",350.9,350.964,.01,1,0)
^.1
"^DD",350.9,350.964,.01,1,1,0)
350.964^B
"^DD",350.9,350.964,.01,1,1,1)
S ^IBE(350.9,DA(1),64,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.964,.01,1,1,2)
K ^IBE(350.9,DA(1),64,"B",$E(X,1,30),DA)
"^DD",350.9,350.964,.01,3)
Enter a valid Ward.
"^DD",350.9,350.964,.01,21,0)
^^2^2^3150930^
"^DD",350.9,350.964,.01,21,1,0)
The name of a ward to include in the search when creating HCSR 
"^DD",350.9,350.964,.01,21,2,0)
Transmission entries for admissions.
"^DD",350.9,350.964,.01,"DT")
3150930
"^DD",350.9,350.964,.02,0)
INCLUDE FOR ALL PAYERS?^S^0:NO;1:YES;^0;2^Q
"^DD",350.9,350.964,.02,3)
Set this to YES if ward should be included in HCSR search for all payers.
"^DD",350.9,350.964,.02,21,0)
^^3^3^3150930^
"^DD",350.9,350.964,.02,21,1,0)
If set to YES, this particular ward will be included in HCSR search for 
"^DD",350.9,350.964,.02,21,2,0)
all payers. If set to NO, ward will be included in HCSR search only for 
"^DD",350.9,350.964,.02,21,3,0)
payers listed in sub-file 350.9641.
"^DD",350.9,350.964,.02,"DT")
3150930
"^DD",350.9,350.964,1,0)
INCLUDE WARD FOR PAYERS^350.9641PA^^1;0
"^DD",350.9,350.964,1,21,0)
^^3^3^3151022^^
"^DD",350.9,350.964,1,21,1,0)
If field 350.964/.02 is set to NO, HCSR search for this particular ward 
"^DD",350.9,350.964,1,21,2,0)
will include only payers listed in this multiple. If field 350.964/.02 is 
"^DD",350.9,350.964,1,21,3,0)
set to YES, this list has no effect on how HCSR search works.
"^DD",350.9,350.964,1,"DT")
3151022
"^DD",350.9,350.9641,0)
INCLUDE WARD FOR PAYERS SUB-FIELD^^.01^1
"^DD",350.9,350.9641,0,"DT")
3150516
"^DD",350.9,350.9641,0,"IX","B",350.9641,.01)

"^DD",350.9,350.9641,0,"NM","INCLUDE WARD FOR PAYERS")

"^DD",350.9,350.9641,0,"UP")
350.964
"^DD",350.9,350.9641,.01,0)
PAYER^P365.12'^IBE(365.12,^0;1^Q
"^DD",350.9,350.9641,.01,1,0)
^.1
"^DD",350.9,350.9641,.01,1,1,0)
350.9641^B
"^DD",350.9,350.9641,.01,1,1,1)
S ^IBE(350.9,DA(2),64,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.9641,.01,1,1,2)
K ^IBE(350.9,DA(2),64,DA(1),1,"B",$E(X,1,30),DA)
"^DD",350.9,350.9641,.01,3)
Select a payer to be included in HCSR search for this ward.
"^DD",350.9,350.9641,.01,21,0)
^^1^1^3150930^
"^DD",350.9,350.9641,.01,21,1,0)
This is a payer to be included in HCSR search.
"^DD",350.9,350.9641,.01,"DT")
3150930
"^DD",350.9,350.965,0)
HCSR INSCO APPT LIST SUB-FIELD^^.02^2
"^DD",350.9,350.965,0,"DT")
3140919
"^DD",350.9,350.965,0,"IX","B",350.965,.01)

"^DD",350.9,350.965,0,"NM","HCSR INSCO APPT LIST")

"^DD",350.9,350.965,0,"UP")
350.9
"^DD",350.9,350.965,.01,0)
NAME^P36'^DIC(36,^0;1^Q
"^DD",350.9,350.965,.01,1,0)
^.1
"^DD",350.9,350.965,.01,1,1,0)
350.965^B
"^DD",350.9,350.965,.01,1,1,1)
S ^IBE(350.9,DA(1),65,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.965,.01,1,1,2)
K ^IBE(350.9,DA(1),65,"B",$E(X,1,30),DA)
"^DD",350.9,350.965,.01,3)
Enter a valid Insurance Company Name.
"^DD",350.9,350.965,.01,21,0)
^^2^2^3140924^
"^DD",350.9,350.965,.01,21,1,0)
The name of an insurance company to exclude from the search for when 
"^DD",350.9,350.965,.01,21,2,0)
creating HCSR Transmission entries for appointments.
"^DD",350.9,350.965,.01,"DT")
3140924
"^DD",350.9,350.965,.02,0)
PROTECTED^NJ1,0^^0;2^K:+X'=X!(X>1)!(X<0)!(X?.E1"."1.N) X
"^DD",350.9,350.965,.02,3)
Enter '0' if the insurance was entered by a user. Enter 1 if it was automatically added by the system.
"^DD",350.9,350.965,.02,21,0)
^^2^2^3140924^
"^DD",350.9,350.965,.02,21,1,0)
This field is used to determine if the insurance was added automatically 
"^DD",350.9,350.965,.02,21,2,0)
by the system (1) or manually by the user (0).
"^DD",350.9,350.965,.02,"DT")
3140924
"^DD",350.9,350.966,0)
HCSR INSCO ADM LIST SUB-FIELD^^.02^2
"^DD",350.9,350.966,0,"DT")
3140919
"^DD",350.9,350.966,0,"IX","B",350.966,.01)

"^DD",350.9,350.966,0,"NM","HCSR INSCO ADM LIST")

"^DD",350.9,350.966,0,"UP")
350.9
"^DD",350.9,350.966,.01,0)
NAME^P36'^DIC(36,^0;1^Q
"^DD",350.9,350.966,.01,1,0)
^.1
"^DD",350.9,350.966,.01,1,1,0)
350.966^B
"^DD",350.9,350.966,.01,1,1,1)
S ^IBE(350.9,DA(1),66,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.966,.01,1,1,2)
K ^IBE(350.9,DA(1),66,"B",$E(X,1,30),DA)
"^DD",350.9,350.966,.01,3)
Enter a valid Insurance Company name.
"^DD",350.9,350.966,.01,21,0)
^^2^2^3140924^
"^DD",350.9,350.966,.01,21,1,0)
The name of an insurance company to exclude from the search for when 
"^DD",350.9,350.966,.01,21,2,0)
creating HCSR Transmission entries for admissions.
"^DD",350.9,350.966,.01,"DT")
3140924
"^DD",350.9,350.966,.02,0)
PROTECTED^NJ1,0^^0;2^K:+X'=X!(X>1)!(X<0)!(X?.E1"."1.N) X
"^DD",350.9,350.966,.02,3)
Enter '0' if the insurance was entered by a user.  Enter '1' if the insurance was entered automatically by the system.
"^DD",350.9,350.966,.02,21,0)
^^2^2^3140919^
"^DD",350.9,350.966,.02,21,1,0)
This field is used to determine if the insurance was added automatically 
"^DD",350.9,350.966,.02,21,2,0)
by the system (1) or manually by the user (0).
"^DD",350.9,350.966,.02,"DT")
3140919
"^DD",356.001,356.001,0)
FIELD^^.03^3
"^DD",356.001,356.001,0,"DDA")
N
"^DD",356.001,356.001,0,"DT")
3140406
"^DD",356.001,356.001,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.001,356.001,0,"IX","B",356.001,.01)

"^DD",356.001,356.001,0,"NM","X12 278 REQUEST CATEGORY")

"^DD",356.001,356.001,0,"PT",356.22,2.01)

"^DD",356.001,356.001,0,"PT",356.2216,.15)

"^DD",356.001,356.001,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",356.001,356.001,.01,1,0)
^.1
"^DD",356.001,356.001,.01,1,1,0)
356.001^B
"^DD",356.001,356.001,.01,1,1,1)
S ^IBT(356.001,"B",$E(X,1,30),DA)=""
"^DD",356.001,356.001,.01,1,1,2)
K ^IBT(356.001,"B",$E(X,1,30),DA)
"^DD",356.001,356.001,.01,3)
Answer must be 2 characters in length.
"^DD",356.001,356.001,.01,21,0)
^^1^1^3140406^
"^DD",356.001,356.001,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.001,356.001,.01,"DT")
3140406
"^DD",356.001,356.001,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",356.001,356.001,.02,1,0)
^.1^^0
"^DD",356.001,356.001,.02,3)
Answer must be 1-30 characters in length.
"^DD",356.001,356.001,.02,21,0)
^^1^1^3140406^
"^DD",356.001,356.001,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.001,356.001,.02,"DT")
3150325
"^DD",356.001,356.001,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.001,356.001,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.001,356.001,.03,21,0)
^^2^2^3140406^
"^DD",356.001,356.001,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.001,356.001,.03,21,2,0)
be used by X.12.
"^DD",356.001,356.001,.03,"DT")
3140406
"^DD",356.002,356.002,0)
FIELD^^.03^3
"^DD",356.002,356.002,0,"DDA")
N
"^DD",356.002,356.002,0,"DT")
3140827
"^DD",356.002,356.002,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.002,356.002,0,"IX","B",356.002,.01)

"^DD",356.002,356.002,0,"NM","X12 278 CERTIFICATION TYPE CODE")

"^DD",356.002,356.002,0,"PT",356.22,2.02)

"^DD",356.002,356.002,0,"PT",356.2216,.02)

"^DD",356.002,356.002,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.002,356.002,.01,1,0)
^.1
"^DD",356.002,356.002,.01,1,1,0)
356.002^B
"^DD",356.002,356.002,.01,1,1,1)
S ^IBT(356.002,"B",$E(X,1,30),DA)=""
"^DD",356.002,356.002,.01,1,1,2)
K ^IBT(356.002,"B",$E(X,1,30),DA)
"^DD",356.002,356.002,.01,3)
Answer must be 1 character in length.
"^DD",356.002,356.002,.01,21,0)
^^1^1^3140406^
"^DD",356.002,356.002,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.002,356.002,.01,"DT")
3140406
"^DD",356.002,356.002,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",356.002,356.002,.02,1,0)
^.1^^0
"^DD",356.002,356.002,.02,3)
Answer must be 1-30 characters in length.
"^DD",356.002,356.002,.02,21,0)
^.001^1^1^3140827^^^
"^DD",356.002,356.002,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.002,356.002,.02,"DT")
3150327
"^DD",356.002,356.002,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.002,356.002,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.002,356.002,.03,21,0)
^^2^2^3140406^
"^DD",356.002,356.002,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.002,356.002,.03,21,2,0)
be used by X.12.
"^DD",356.002,356.002,.03,"DT")
3140406
"^DD",356.003,356.003,0)
FIELD^^.03^3
"^DD",356.003,356.003,0,"DDA")
N
"^DD",356.003,356.003,0,"DT")
3140406
"^DD",356.003,356.003,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.003,356.003,0,"IX","B",356.003,.01)

"^DD",356.003,356.003,0,"NM","X12 278 CURRENT HEALTH CONDITION CODE")

"^DD",356.003,356.003,0,"PT",356.22,2.14)

"^DD",356.003,356.003,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.003,356.003,.01,1,0)
^.1
"^DD",356.003,356.003,.01,1,1,0)
356.003^B
"^DD",356.003,356.003,.01,1,1,1)
S ^IBT(356.003,"B",$E(X,1,30),DA)=""
"^DD",356.003,356.003,.01,1,1,2)
K ^IBT(356.003,"B",$E(X,1,30),DA)
"^DD",356.003,356.003,.01,3)
Answer must be 1 character in length.
"^DD",356.003,356.003,.01,21,0)
^^1^1^3140406^
"^DD",356.003,356.003,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.003,356.003,.01,"DT")
3140406
"^DD",356.003,356.003,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.003,356.003,.02,1,0)
^.1^^0
"^DD",356.003,356.003,.02,3)
Answer must be 1-60 characters in length.
"^DD",356.003,356.003,.02,21,0)
^^1^1^3140406^
"^DD",356.003,356.003,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.003,356.003,.02,"DT")
3150330
"^DD",356.003,356.003,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.003,356.003,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.003,356.003,.03,21,0)
^^2^2^3140406^
"^DD",356.003,356.003,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.003,356.003,.03,21,2,0)
be used by X.12.
"^DD",356.003,356.003,.03,"DT")
3140406
"^DD",356.004,356.004,0)
FIELD^^.03^3
"^DD",356.004,356.004,0,"DDA")
N
"^DD",356.004,356.004,0,"DT")
3140406
"^DD",356.004,356.004,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.004,356.004,0,"IX","B",356.004,.01)

"^DD",356.004,356.004,0,"NM","X12 278 PROGNOSIS CODE")

"^DD",356.004,356.004,0,"PT",356.22,2.15)

"^DD",356.004,356.004,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.004,356.004,.01,1,0)
^.1
"^DD",356.004,356.004,.01,1,1,0)
356.004^B
"^DD",356.004,356.004,.01,1,1,1)
S ^IBT(356.004,"B",$E(X,1,30),DA)=""
"^DD",356.004,356.004,.01,1,1,2)
K ^IBT(356.004,"B",$E(X,1,30),DA)
"^DD",356.004,356.004,.01,3)
Answer must be 1 character in length.
"^DD",356.004,356.004,.01,21,0)
^^1^1^3140406^
"^DD",356.004,356.004,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.004,356.004,.01,"DT")
3140406
"^DD",356.004,356.004,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",356.004,356.004,.02,1,0)
^.1^^0
"^DD",356.004,356.004,.02,3)
Answer must be 1-30 characters in length.
"^DD",356.004,356.004,.02,21,0)
^^1^1^3140406^
"^DD",356.004,356.004,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.004,356.004,.02,"DT")
3150327
"^DD",356.004,356.004,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.004,356.004,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.004,356.004,.03,21,0)
^^2^2^3140406^
"^DD",356.004,356.004,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.004,356.004,.03,21,2,0)
be used by X.12.
"^DD",356.004,356.004,.03,"DT")
3140406
"^DD",356.005,356.005,0)
FIELD^^.03^3
"^DD",356.005,356.005,0,"DDA")
N
"^DD",356.005,356.005,0,"DT")
3140406
"^DD",356.005,356.005,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.005,356.005,0,"IX","B",356.005,.01)

"^DD",356.005,356.005,0,"NM","X12 278 DELAY REASON CODE")

"^DD",356.005,356.005,0,"PT",356.22,2.17)

"^DD",356.005,356.005,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",356.005,356.005,.01,1,0)
^.1
"^DD",356.005,356.005,.01,1,1,0)
356.005^B
"^DD",356.005,356.005,.01,1,1,1)
S ^IBT(356.005,"B",$E(X,1,30),DA)=""
"^DD",356.005,356.005,.01,1,1,2)
K ^IBT(356.005,"B",$E(X,1,30),DA)
"^DD",356.005,356.005,.01,3)
Answer must be 1-2 characters in length.
"^DD",356.005,356.005,.01,21,0)
^^1^1^3140406^
"^DD",356.005,356.005,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.005,356.005,.01,"DT")
3140406
"^DD",356.005,356.005,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.005,356.005,.02,1,0)
^.1^^0
"^DD",356.005,356.005,.02,3)
Answer must be 1-60 characters in length.
"^DD",356.005,356.005,.02,21,0)
^^1^1^3140406^
"^DD",356.005,356.005,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.005,356.005,.02,"DT")
3150330
"^DD",356.005,356.005,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.005,356.005,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.005,356.005,.03,21,0)
^^2^2^3140406^
"^DD",356.005,356.005,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.005,356.005,.03,21,2,0)
be used by X.12.
"^DD",356.005,356.005,.03,"DT")
3140406
"^DD",356.006,356.006,0)
FIELD^^.03^3
"^DD",356.006,356.006,0,"DDA")
N
"^DD",356.006,356.006,0,"DT")
3140408
"^DD",356.006,356.006,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.006,356.006,0,"IX","B",356.006,.01)

"^DD",356.006,356.006,0,"NM","X12 278 DIAGNOSIS TYPE")

"^DD",356.006,356.006,0,"PT",356.22107,.02)

"^DD",356.006,356.006,0,"PT",356.223,.01)

"^DD",356.006,356.006,0,"PT",356.2316,.02)

"^DD",356.006,356.006,.01,0)
CODE^RF^^0;1^K:$L(X)>3!($L(X)<2)!'(X'?1P.E) X
"^DD",356.006,356.006,.01,1,0)
^.1
"^DD",356.006,356.006,.01,1,1,0)
356.006^B
"^DD",356.006,356.006,.01,1,1,1)
S ^IBT(356.006,"B",$E(X,1,30),DA)=""
"^DD",356.006,356.006,.01,1,1,2)
K ^IBT(356.006,"B",$E(X,1,30),DA)
"^DD",356.006,356.006,.01,3)
Answer must be 2-3 characters in length.
"^DD",356.006,356.006,.01,21,0)
^^1^1^3140408^
"^DD",356.006,356.006,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.006,356.006,.01,"DT")
3140408
"^DD",356.006,356.006,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",356.006,356.006,.02,1,0)
^.1^^0
"^DD",356.006,356.006,.02,3)
Answer must be 1-40 characters in length.
"^DD",356.006,356.006,.02,21,0)
^^1^1^3140408^
"^DD",356.006,356.006,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.006,356.006,.02,"DT")
3150330
"^DD",356.006,356.006,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.006,356.006,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.006,356.006,.03,21,0)
^^2^2^3140408^
"^DD",356.006,356.006,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.006,356.006,.03,21,2,0)
be used by X.12.
"^DD",356.006,356.006,.03,"DT")
3140408
"^DD",356.007,356.007,0)
FIELD^^.03^3
"^DD",356.007,356.007,0,"DDA")
N
"^DD",356.007,356.007,0,"DT")
3140408
"^DD",356.007,356.007,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.007,356.007,0,"IX","B",356.007,.01)

"^DD",356.007,356.007,0,"NM","X12 278 DELIVERY PATTERN TIME CODE")

"^DD",356.007,356.007,0,"PT",356.22,4.08)

"^DD",356.007,356.007,0,"PT",356.2216,5.08)

"^DD",356.007,356.007,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.007,356.007,.01,1,0)
^.1
"^DD",356.007,356.007,.01,1,1,0)
356.007^B
"^DD",356.007,356.007,.01,1,1,1)
S ^IBT(356.007,"B",$E(X,1,30),DA)=""
"^DD",356.007,356.007,.01,1,1,2)
K ^IBT(356.007,"B",$E(X,1,30),DA)
"^DD",356.007,356.007,.01,3)
Answer must be 1 character in length.
"^DD",356.007,356.007,.01,21,0)
^^1^1^3140408^
"^DD",356.007,356.007,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.007,356.007,.01,"DT")
3140408
"^DD",356.007,356.007,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.007,356.007,.02,1,0)
^.1^^0
"^DD",356.007,356.007,.02,3)
Answer must be 1-60 characters in length.
"^DD",356.007,356.007,.02,21,0)
^^1^1^3140408^
"^DD",356.007,356.007,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.007,356.007,.02,"DT")
3150330
"^DD",356.007,356.007,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.007,356.007,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.007,356.007,.03,21,0)
^^2^2^3140408^
"^DD",356.007,356.007,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.007,356.007,.03,21,2,0)
be used by X.12.
"^DD",356.007,356.007,.03,"DT")
3140408
"^DD",356.008,356.008,0)
FIELD^^.03^3
"^DD",356.008,356.008,0,"DDA")
N
"^DD",356.008,356.008,0,"DT")
3140409
"^DD",356.008,356.008,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.008,356.008,0,"IX","B",356.008,.01)

"^DD",356.008,356.008,0,"NM","X12 278 CONDITION CODE")

"^DD",356.008,356.008,0,"PT",356.22,4.1)

"^DD",356.008,356.008,0,"PT",356.22,4.11)

"^DD",356.008,356.008,0,"PT",356.22,4.12)

"^DD",356.008,356.008,0,"PT",356.22,4.13)

"^DD",356.008,356.008,0,"PT",356.22,4.14)

"^DD",356.008,356.008,0,"PT",356.22,5.02)

"^DD",356.008,356.008,0,"PT",356.22,5.03)

"^DD",356.008,356.008,0,"PT",356.22,5.04)

"^DD",356.008,356.008,0,"PT",356.22,5.05)

"^DD",356.008,356.008,0,"PT",356.22,5.06)

"^DD",356.008,356.008,0,"PT",356.22,5.08)

"^DD",356.008,356.008,0,"PT",356.22,5.09)

"^DD",356.008,356.008,0,"PT",356.22,5.1)

"^DD",356.008,356.008,0,"PT",356.22,5.11)

"^DD",356.008,356.008,0,"PT",356.22,5.12)

"^DD",356.008,356.008,0,"PT",356.22,5.14)

"^DD",356.008,356.008,0,"PT",356.22,5.15)

"^DD",356.008,356.008,0,"PT",356.22,5.16)

"^DD",356.008,356.008,0,"PT",356.22,5.17)

"^DD",356.008,356.008,0,"PT",356.22,5.18)

"^DD",356.008,356.008,0,"PT",356.22,6.02)

"^DD",356.008,356.008,0,"PT",356.22,6.03)

"^DD",356.008,356.008,0,"PT",356.22,6.04)

"^DD",356.008,356.008,0,"PT",356.22,6.05)

"^DD",356.008,356.008,0,"PT",356.22,6.06)

"^DD",356.008,356.008,0,"PT",356.22,6.08)

"^DD",356.008,356.008,0,"PT",356.22,6.09)

"^DD",356.008,356.008,0,"PT",356.22,6.1)

"^DD",356.008,356.008,0,"PT",356.22,6.11)

"^DD",356.008,356.008,0,"PT",356.22,6.12)

"^DD",356.008,356.008,0,"PT",356.22,6.14)

"^DD",356.008,356.008,0,"PT",356.22,6.15)

"^DD",356.008,356.008,0,"PT",356.22,6.16)

"^DD",356.008,356.008,0,"PT",356.22,6.17)

"^DD",356.008,356.008,0,"PT",356.22,6.18)

"^DD",356.008,356.008,.01,0)
CODE^RF^^0;1^K:$L(X)>3!($L(X)<2)!'(X'?1P.E) X
"^DD",356.008,356.008,.01,1,0)
^.1
"^DD",356.008,356.008,.01,1,1,0)
356.008^B
"^DD",356.008,356.008,.01,1,1,1)
S ^IBT(356.008,"B",$E(X,1,30),DA)=""
"^DD",356.008,356.008,.01,1,1,2)
K ^IBT(356.008,"B",$E(X,1,30),DA)
"^DD",356.008,356.008,.01,3)
Answer must be 2-3 characters in length.
"^DD",356.008,356.008,.01,21,0)
^^1^1^3140409^
"^DD",356.008,356.008,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.008,356.008,.01,"DT")
3140409
"^DD",356.008,356.008,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>140!($L(X)<1) X
"^DD",356.008,356.008,.02,1,0)
^.1^^0
"^DD",356.008,356.008,.02,3)
Answer must be 1-140 characters in length.
"^DD",356.008,356.008,.02,21,0)
^^1^1^3140409^
"^DD",356.008,356.008,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.008,356.008,.02,"DT")
3150330
"^DD",356.008,356.008,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.008,356.008,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.008,356.008,.03,21,0)
^^2^2^3140409^
"^DD",356.008,356.008,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.008,356.008,.03,21,2,0)
be used by X.12.
"^DD",356.008,356.008,.03,"DT")
3140409
"^DD",356.009,356.009,0)
FIELD^^.03^3
"^DD",356.009,356.009,0,"DDA")
N
"^DD",356.009,356.009,0,"DT")
3140415
"^DD",356.009,356.009,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.009,356.009,0,"IX","B",356.009,.01)

"^DD",356.009,356.009,0,"NM","X12 278 ADMISSION SOURCE")

"^DD",356.009,356.009,0,"PT",356.22,7.02)

"^DD",356.009,356.009,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.009,356.009,.01,1,0)
^.1
"^DD",356.009,356.009,.01,1,1,0)
356.009^B
"^DD",356.009,356.009,.01,1,1,1)
S ^IBT(356.009,"B",$E(X,1,30),DA)=""
"^DD",356.009,356.009,.01,1,1,2)
K ^IBT(356.009,"B",$E(X,1,30),DA)
"^DD",356.009,356.009,.01,3)
Answer must be 1 character in length.
"^DD",356.009,356.009,.01,21,0)
^^1^1^3140415^
"^DD",356.009,356.009,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.009,356.009,.01,"DT")
3140415
"^DD",356.009,356.009,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>45!($L(X)<1) X
"^DD",356.009,356.009,.02,1,0)
^.1^^0
"^DD",356.009,356.009,.02,3)
Answer must be 1-45 characters in length.
"^DD",356.009,356.009,.02,21,0)
^^1^1^3140415^
"^DD",356.009,356.009,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.009,356.009,.02,"DT")
3150330
"^DD",356.009,356.009,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.009,356.009,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.009,356.009,.03,21,0)
^^2^2^3140415^
"^DD",356.009,356.009,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.009,356.009,.03,21,2,0)
be used by X.12.
"^DD",356.009,356.009,.03,"DT")
3140415
"^DD",356.01,356.01,0)
FIELD^^.03^3
"^DD",356.01,356.01,0,"DDA")
N
"^DD",356.01,356.01,0,"DT")
3140415
"^DD",356.01,356.01,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.01,356.01,0,"IX","B",356.01,.01)

"^DD",356.01,356.01,0,"IX","C",356.01,.01)

"^DD",356.01,356.01,0,"NM","X12 278 PATIENT STATUS")

"^DD",356.01,356.01,0,"PT",356.22,7.03)

"^DD",356.01,356.01,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",356.01,356.01,.01,1,0)
^.1
"^DD",356.01,356.01,.01,1,1,0)
356.01^B
"^DD",356.01,356.01,.01,1,1,1)
S ^IBT(356.01,"B",$E(X,1,30),DA)=""
"^DD",356.01,356.01,.01,1,1,2)
K ^IBT(356.01,"B",$E(X,1,30),DA)
"^DD",356.01,356.01,.01,1,2,0)
356.01^C^MUMPS
"^DD",356.01,356.01,.01,1,2,1)
S ^IBT(356.01,"C"," "_$E(X,1,30),DA)=""
"^DD",356.01,356.01,.01,1,2,2)
K ^IBT(356.01,"C"," "_$E(X,1,30),DA)
"^DD",356.01,356.01,.01,1,2,"DT")
3141113
"^DD",356.01,356.01,.01,3)
Answer must be 2 characters in length.
"^DD",356.01,356.01,.01,21,0)
^^1^1^3140415^
"^DD",356.01,356.01,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.01,356.01,.01,"DT")
3141113
"^DD",356.01,356.01,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.01,356.01,.02,1,0)
^.1^^0
"^DD",356.01,356.01,.02,3)
Answer must be 1-60 characters in length.
"^DD",356.01,356.01,.02,21,0)
^^1^1^3140415^
"^DD",356.01,356.01,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.01,356.01,.02,"DT")
3150330
"^DD",356.01,356.01,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.01,356.01,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.01,356.01,.03,21,0)
^^2^2^3140415^
"^DD",356.01,356.01,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.01,356.01,.03,21,2,0)
be used by X.12.
"^DD",356.01,356.01,.03,"DT")
3140415
"^DD",356.011,356.011,0)
FIELD^^.03^3
"^DD",356.011,356.011,0,"DDA")
N
"^DD",356.011,356.011,0,"DT")
3140416
"^DD",356.011,356.011,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.011,356.011,0,"IX","B",356.011,.01)

"^DD",356.011,356.011,0,"NM","X12 278 NURSING HOME RESIDENTIAL STATUS")

"^DD",356.011,356.011,0,"PT",356.22,7.04)

"^DD",356.011,356.011,0,"PT",356.2216,2.08)

"^DD",356.011,356.011,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.011,356.011,.01,1,0)
^.1
"^DD",356.011,356.011,.01,1,1,0)
356.011^B
"^DD",356.011,356.011,.01,1,1,1)
S ^IBT(356.011,"B",$E(X,1,30),DA)=""
"^DD",356.011,356.011,.01,1,1,2)
K ^IBT(356.011,"B",$E(X,1,30),DA)
"^DD",356.011,356.011,.01,3)
Answer must be 1 character in length.
"^DD",356.011,356.011,.01,21,0)
^^1^1^3140416^
"^DD",356.011,356.011,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.011,356.011,.01,"DT")
3140416
"^DD",356.011,356.011,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>75!($L(X)<1) X
"^DD",356.011,356.011,.02,1,0)
^.1^^0
"^DD",356.011,356.011,.02,3)
Answer must be 1-75 characters in length.
"^DD",356.011,356.011,.02,21,0)
^^1^1^3140416^
"^DD",356.011,356.011,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.011,356.011,.02,"DT")
3150330
"^DD",356.011,356.011,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.011,356.011,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.011,356.011,.03,21,0)
^^2^2^3140416^
"^DD",356.011,356.011,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.011,356.011,.03,21,2,0)
be used by X.12.
"^DD",356.011,356.011,.03,"DT")
3140416
"^DD",356.012,356.012,0)
FIELD^^.03^3
"^DD",356.012,356.012,0,"DDA")
N
"^DD",356.012,356.012,0,"DT")
3140416
"^DD",356.012,356.012,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.012,356.012,0,"IX","B",356.012,.01)

"^DD",356.012,356.012,0,"NM","X12 278 SUBLUXATION LEVEL CODE")

"^DD",356.012,356.012,0,"PT",356.22,7.07)

"^DD",356.012,356.012,0,"PT",356.22,7.08)

"^DD",356.012,356.012,.01,0)
CODE^RF^^0;1^K:$L(X)>3!($L(X)<2)!'(X'?1P.E) X
"^DD",356.012,356.012,.01,1,0)
^.1
"^DD",356.012,356.012,.01,1,1,0)
356.012^B
"^DD",356.012,356.012,.01,1,1,1)
S ^IBT(356.012,"B",$E(X,1,30),DA)=""
"^DD",356.012,356.012,.01,1,1,2)
K ^IBT(356.012,"B",$E(X,1,30),DA)
"^DD",356.012,356.012,.01,3)
Answer must be 2-3 characters in length.
"^DD",356.012,356.012,.01,21,0)
^^1^1^3140416^
"^DD",356.012,356.012,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.012,356.012,.01,"DT")
3140416
"^DD",356.012,356.012,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",356.012,356.012,.02,1,0)
^.1^^0
"^DD",356.012,356.012,.02,3)
Answer must be 1-20 characters in length.
"^DD",356.012,356.012,.02,21,0)
^^1^1^3140416^
"^DD",356.012,356.012,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.012,356.012,.02,"DT")
3150330
"^DD",356.012,356.012,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.012,356.012,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.012,356.012,.03,21,0)
^^2^2^3140416^
"^DD",356.012,356.012,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.012,356.012,.03,21,2,0)
be used by X.12.
"^DD",356.012,356.012,.03,"DT")
3140416
"^DD",356.013,356.013,0)
FIELD^^.03^3
"^DD",356.013,356.013,0,"DDA")
N
"^DD",356.013,356.013,0,"DT")
3140420
"^DD",356.013,356.013,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.013,356.013,0,"IX","B",356.013,.01)

"^DD",356.013,356.013,0,"NM","X12 278 OXYGEN EQUIPMENT TYPE")

"^DD",356.013,356.013,0,"PT",356.22,8.01)

"^DD",356.013,356.013,0,"PT",356.22,8.02)

"^DD",356.013,356.013,0,"PT",356.22,8.03)

"^DD",356.013,356.013,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.013,356.013,.01,1,0)
^.1
"^DD",356.013,356.013,.01,1,1,0)
356.013^B
"^DD",356.013,356.013,.01,1,1,1)
S ^IBT(356.013,"B",$E(X,1,30),DA)=""
"^DD",356.013,356.013,.01,1,1,2)
K ^IBT(356.013,"B",$E(X,1,30),DA)
"^DD",356.013,356.013,.01,3)
Answer must be 1 character in length.
"^DD",356.013,356.013,.01,21,0)
^^1^1^3140420^
"^DD",356.013,356.013,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.013,356.013,.01,"DT")
3140420
"^DD",356.013,356.013,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",356.013,356.013,.02,1,0)
^.1^^0
"^DD",356.013,356.013,.02,3)
Answer must be 1-30 characters in length.
"^DD",356.013,356.013,.02,21,0)
^^1^1^3140420^
"^DD",356.013,356.013,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.013,356.013,.02,"DT")
3150327
"^DD",356.013,356.013,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.013,356.013,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.013,356.013,.03,21,0)
^^2^2^3140420^
"^DD",356.013,356.013,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.013,356.013,.03,21,2,0)
be used by X.12.
"^DD",356.013,356.013,.03,"DT")
3140420
"^DD",356.014,356.014,0)
FIELD^^.03^3
"^DD",356.014,356.014,0,"DDA")
N
"^DD",356.014,356.014,0,"DT")
3140420
"^DD",356.014,356.014,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.014,356.014,0,"IX","B",356.014,.01)

"^DD",356.014,356.014,0,"NM","X12 278 OXYGEN TEST CONDITION")

"^DD",356.014,356.014,0,"PT",356.22,9.03)

"^DD",356.014,356.014,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.014,356.014,.01,1,0)
^.1
"^DD",356.014,356.014,.01,1,1,0)
356.014^B
"^DD",356.014,356.014,.01,1,1,1)
S ^IBT(356.014,"B",$E(X,1,30),DA)=""
"^DD",356.014,356.014,.01,1,1,2)
K ^IBT(356.014,"B",$E(X,1,30),DA)
"^DD",356.014,356.014,.01,3)
Answer must be 1 character in length.
"^DD",356.014,356.014,.01,21,0)
^^1^1^3140420^
"^DD",356.014,356.014,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.014,356.014,.01,"DT")
3140420
"^DD",356.014,356.014,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",356.014,356.014,.02,1,0)
^.1^^0
"^DD",356.014,356.014,.02,3)
Answer must be 1-30 characters in length.
"^DD",356.014,356.014,.02,21,0)
^^1^1^3140420^
"^DD",356.014,356.014,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.014,356.014,.02,"DT")
3150327
"^DD",356.014,356.014,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.014,356.014,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.014,356.014,.03,21,0)
^^2^2^3140420^
"^DD",356.014,356.014,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.014,356.014,.03,21,2,0)
be used by X.12.
"^DD",356.014,356.014,.03,"DT")
3140420
"^DD",356.015,356.015,0)
FIELD^^.03^3
"^DD",356.015,356.015,0,"DDA")
N
"^DD",356.015,356.015,0,"DT")
3140420
"^DD",356.015,356.015,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.015,356.015,0,"IX","B",356.015,.01)

"^DD",356.015,356.015,0,"NM","X12 278 OXYGEN TEST FINDINGS")

"^DD",356.015,356.015,0,"PT",356.22,9.04)

"^DD",356.015,356.015,0,"PT",356.22,9.05)

"^DD",356.015,356.015,0,"PT",356.22,9.06)

"^DD",356.015,356.015,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.015,356.015,.01,1,0)
^.1
"^DD",356.015,356.015,.01,1,1,0)
356.015^B
"^DD",356.015,356.015,.01,1,1,1)
S ^IBT(356.015,"B",$E(X,1,30),DA)=""
"^DD",356.015,356.015,.01,1,1,2)
K ^IBT(356.015,"B",$E(X,1,30),DA)
"^DD",356.015,356.015,.01,3)
Answer must be 1 character in length.
"^DD",356.015,356.015,.01,21,0)
^^1^1^3140420^
"^DD",356.015,356.015,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.015,356.015,.01,"DT")
3140420
"^DD",356.015,356.015,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.015,356.015,.02,1,0)
^.1^^0
"^DD",356.015,356.015,.02,3)
Answer must be 1-60 characters in length.
"^DD",356.015,356.015,.02,21,0)
^^1^1^3140420^
"^DD",356.015,356.015,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.015,356.015,.02,"DT")
3150330
"^DD",356.015,356.015,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.015,356.015,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.015,356.015,.03,21,0)
^^2^2^3140420^
"^DD",356.015,356.015,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.015,356.015,.03,21,2,0)
be used by X.12.
"^DD",356.015,356.015,.03,"DT")
3140420
"^DD",356.016,356.016,0)
FIELD^^.03^3
"^DD",356.016,356.016,0,"DDA")
N
"^DD",356.016,356.016,0,"DT")
3140420
"^DD",356.016,356.016,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.016,356.016,0,"IX","B",356.016,.01)

"^DD",356.016,356.016,0,"NM","X12 278 OXYGEN DELIVERY SYSTEM CODE")

"^DD",356.016,356.016,0,"PT",356.22,9.08)

"^DD",356.016,356.016,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.016,356.016,.01,1,0)
^.1
"^DD",356.016,356.016,.01,1,1,0)
356.016^B
"^DD",356.016,356.016,.01,1,1,1)
S ^IBT(356.016,"B",$E(X,1,30),DA)=""
"^DD",356.016,356.016,.01,1,1,2)
K ^IBT(356.016,"B",$E(X,1,30),DA)
"^DD",356.016,356.016,.01,3)
Answer must be 1 character in length.
"^DD",356.016,356.016,.01,21,0)
^^1^1^3140420^
"^DD",356.016,356.016,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.016,356.016,.01,"DT")
3140420
"^DD",356.016,356.016,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.016,356.016,.02,1,0)
^.1^^0
"^DD",356.016,356.016,.02,3)
Answer must be 1-60 characters in length.
"^DD",356.016,356.016,.02,21,0)
^^1^1^3140420^
"^DD",356.016,356.016,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.016,356.016,.02,"DT")
3150330
"^DD",356.016,356.016,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.016,356.016,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.016,356.016,.03,21,0)
^^2^2^3140420^
"^DD",356.016,356.016,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.016,356.016,.03,21,2,0)
be used by X.12.
"^DD",356.016,356.016,.03,"DT")
3140420
"^DD",356.017,356.017,0)
FIELD^^.03^3
"^DD",356.017,356.017,0,"DDA")
N
"^DD",356.017,356.017,0,"DT")
3140421
"^DD",356.017,356.017,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.017,356.017,0,"IX","B",356.017,.01)

"^DD",356.017,356.017,0,"NM","X12 278 PATIENT LOCATION")

"^DD",356.017,356.017,0,"PT",356.22,10.13)

"^DD",356.017,356.017,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.017,356.017,.01,1,0)
^.1
"^DD",356.017,356.017,.01,1,1,0)
356.017^B
"^DD",356.017,356.017,.01,1,1,1)
S ^IBT(356.017,"B",$E(X,1,30),DA)=""
"^DD",356.017,356.017,.01,1,1,2)
K ^IBT(356.017,"B",$E(X,1,30),DA)
"^DD",356.017,356.017,.01,3)
Answer must be 1 character in length.
"^DD",356.017,356.017,.01,21,0)
^^1^1^3140421^
"^DD",356.017,356.017,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.017,356.017,.01,"DT")
3140421
"^DD",356.017,356.017,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",356.017,356.017,.02,1,0)
^.1^^0
"^DD",356.017,356.017,.02,3)
Answer must be 1-40 characters in length.
"^DD",356.017,356.017,.02,21,0)
^^1^1^3140421^
"^DD",356.017,356.017,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.017,356.017,.02,"DT")
3150330
"^DD",356.017,356.017,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.017,356.017,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.017,356.017,.03,21,0)
^^2^2^3140421^
"^DD",356.017,356.017,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.017,356.017,.03,21,2,0)
be used by X.12.
"^DD",356.017,356.017,.03,"DT")
3140421
"^DD",356.018,356.018,0)
FIELD^^.03^3
"^DD",356.018,356.018,0,"DDA")
N
"^DD",356.018,356.018,0,"DT")
3140421
"^DD",356.018,356.018,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.018,356.018,0,"IX","B",356.018,.01)

"^DD",356.018,356.018,0,"NM","X12 278 REPORT TYPE CODE")

"^DD",356.018,356.018,0,"PT",356.2211,.01)

"^DD",356.018,356.018,0,"PT",356.22166,.01)

"^DD",356.018,356.018,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",356.018,356.018,.01,1,0)
^.1
"^DD",356.018,356.018,.01,1,1,0)
356.018^B
"^DD",356.018,356.018,.01,1,1,1)
S ^IBT(356.018,"B",$E(X,1,30),DA)=""
"^DD",356.018,356.018,.01,1,1,2)
K ^IBT(356.018,"B",$E(X,1,30),DA)
"^DD",356.018,356.018,.01,3)
Answer must be 1-2 characters in length.
"^DD",356.018,356.018,.01,21,0)
^^1^1^3140421^
"^DD",356.018,356.018,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.018,356.018,.01,"DT")
3140421
"^DD",356.018,356.018,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>70!($L(X)<1) X
"^DD",356.018,356.018,.02,1,0)
^.1^^0
"^DD",356.018,356.018,.02,3)
Answer must be 1-70 characters in length.
"^DD",356.018,356.018,.02,21,0)
^^1^1^3140421^
"^DD",356.018,356.018,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.018,356.018,.02,"DT")
3150330
"^DD",356.018,356.018,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.018,356.018,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.018,356.018,.03,21,0)
^^2^2^3140421^
"^DD",356.018,356.018,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.018,356.018,.03,21,2,0)
be used by X.12.
"^DD",356.018,356.018,.03,"DT")
3140421
"^DD",356.019,356.019,0)
FIELD^^.03^3
"^DD",356.019,356.019,0,"DDA")
N
"^DD",356.019,356.019,0,"DT")
3140426
"^DD",356.019,356.019,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.019,356.019,0,"IX","B",356.019,.01)

"^DD",356.019,356.019,0,"NM","X12 278 NURSING HOME LEVEL OF CARE")

"^DD",356.019,356.019,0,"PT",356.2216,2.09)

"^DD",356.019,356.019,.01,0)
CODE^RF^^0;1^K:$L(X)>1!($L(X)<1)!'(X'?1P.E) X
"^DD",356.019,356.019,.01,1,0)
^.1
"^DD",356.019,356.019,.01,1,1,0)
356.019^B
"^DD",356.019,356.019,.01,1,1,1)
S ^IBT(356.019,"B",$E(X,1,30),DA)=""
"^DD",356.019,356.019,.01,1,1,2)
K ^IBT(356.019,"B",$E(X,1,30),DA)
"^DD",356.019,356.019,.01,3)
Answer must be 1 character in length.
"^DD",356.019,356.019,.01,21,0)
^^1^1^3140426^
"^DD",356.019,356.019,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.019,356.019,.01,"DT")
3140426
"^DD",356.019,356.019,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.019,356.019,.02,1,0)
^.1^^0
"^DD",356.019,356.019,.02,3)
Answer must be 1-60 characters in length.
"^DD",356.019,356.019,.02,21,0)
^^1^1^3140426^^
"^DD",356.019,356.019,.02,21,1,0)
This describes the code value in more detail.
"^DD",356.019,356.019,.02,"DT")
3150330
"^DD",356.019,356.019,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.019,356.019,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.019,356.019,.03,21,0)
^^2^2^3140426^
"^DD",356.019,356.019,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",356.019,356.019,.03,21,2,0)
be used by X.12.
"^DD",356.019,356.019,.03,"DT")
3140426
"^DD",356.02,356.02,0)
FIELD^^.03^3
"^DD",356.02,356.02,0,"DDA")
N
"^DD",356.02,356.02,0,"DT")
3140513
"^DD",356.02,356.02,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.02,356.02,0,"IX","B",356.02,.01)

"^DD",356.02,356.02,0,"NM","X12 278 CERTIFICATION ACTION CODES")

"^DD",356.02,356.02,0,"PT",356.22,103.01)

"^DD",356.02,356.02,0,"PT",356.2216,11.01)

"^DD",356.02,356.02,.01,0)
ACTION CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",356.02,356.02,.01,1,0)
^.1
"^DD",356.02,356.02,.01,1,1,0)
356.02^B
"^DD",356.02,356.02,.01,1,1,1)
S ^IBT(356.02,"B",$E(X,1,30),DA)=""
"^DD",356.02,356.02,.01,1,1,2)
K ^IBT(356.02,"B",$E(X,1,30),DA)
"^DD",356.02,356.02,.01,3)
Answer must be 1-2 characters in length.
"^DD",356.02,356.02,.01,21,0)
^^1^1^3140513^
"^DD",356.02,356.02,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",356.02,356.02,.01,"DT")
3140513
"^DD",356.02,356.02,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",356.02,356.02,.02,1,0)
^.1^^0
"^DD",356.02,356.02,.02,3)
Answer must be 1-30 characters in length.
"^DD",356.02,356.02,.02,21,0)
^^1^1^3140513^
"^DD",356.02,356.02,.02,21,1,0)
This field describes what the Action Code represents.
"^DD",356.02,356.02,.02,"DT")
3150327
"^DD",356.02,356.02,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.02,356.02,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.02,356.02,.03,21,0)
^^2^2^3140513^
"^DD",356.02,356.02,.03,21,1,0)
This field will be marked inactive if a code is determined to be no 
"^DD",356.02,356.02,.03,21,2,0)
longer used by X.12.
"^DD",356.02,356.02,.03,"DT")
3140919
"^DD",356.021,356.021,0)
FIELD^^.03^3
"^DD",356.021,356.021,0,"DDA")
N
"^DD",356.021,356.021,0,"DT")
3140513
"^DD",356.021,356.021,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.021,356.021,0,"IX","B",356.021,.01)

"^DD",356.021,356.021,0,"NM","X12 278 HCS DECISION REASON CODES")

"^DD",356.021,356.021,0,"PT",356.22,103.03)

"^DD",356.021,356.021,0,"PT",356.2215,.03)

"^DD",356.021,356.021,0,"PT",356.2215,.04)

"^DD",356.021,356.021,0,"PT",356.2215,.05)

"^DD",356.021,356.021,0,"PT",356.2215,.06)

"^DD",356.021,356.021,0,"PT",356.2216,11.03)

"^DD",356.021,356.021,.01,0)
DECISION REASON CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",356.021,356.021,.01,1,0)
^.1
"^DD",356.021,356.021,.01,1,1,0)
356.021^B
"^DD",356.021,356.021,.01,1,1,1)
S ^IBT(356.021,"B",$E(X,1,30),DA)=""
"^DD",356.021,356.021,.01,1,1,2)
K ^IBT(356.021,"B",$E(X,1,30),DA)
"^DD",356.021,356.021,.01,3)
Answer must be 1-2 characters in length.
"^DD",356.021,356.021,.01,21,0)
^^1^1^3140513^
"^DD",356.021,356.021,.01,21,1,0)
This is the Health Care Services Decision Reason Code in an X.12 message.
"^DD",356.021,356.021,.01,"DT")
3140513
"^DD",356.021,356.021,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>120!($L(X)<1) X
"^DD",356.021,356.021,.02,1,0)
^.1^^0
"^DD",356.021,356.021,.02,3)
Answer must be 1-120 characters in length.
"^DD",356.021,356.021,.02,21,0)
^^1^1^3140513^
"^DD",356.021,356.021,.02,21,1,0)
This fields describes what the Decision Reason Code represents.
"^DD",356.021,356.021,.02,"DT")
3150330
"^DD",356.021,356.021,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.021,356.021,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.021,356.021,.03,21,0)
^^2^2^3140513^
"^DD",356.021,356.021,.03,21,1,0)
This field will be marked inactive if a code is determined to be no 
"^DD",356.021,356.021,.03,21,2,0)
longer used by X.12.
"^DD",356.021,356.021,.03,"DT")
3140919
"^DD",356.022,356.022,0)
FIELD^^.03^3
"^DD",356.022,356.022,0,"DDA")
N
"^DD",356.022,356.022,0,"DT")
3150102
"^DD",356.022,356.022,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.022,356.022,0,"IX","B",356.022,.01)

"^DD",356.022,356.022,0,"NM","X12 278 DENTAL NUMBERING SYSTEM")

"^DD",356.022,356.022,0,"PT",356.22164,.01)

"^DD",356.022,356.022,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",356.022,356.022,.01,1,0)
^.1
"^DD",356.022,356.022,.01,1,1,0)
356.022^B
"^DD",356.022,356.022,.01,1,1,1)
S ^IBT(356.022,"B",$E(X,1,30),DA)=""
"^DD",356.022,356.022,.01,1,1,2)
K ^IBT(356.022,"B",$E(X,1,30),DA)
"^DD",356.022,356.022,.01,3)
Enter a number from 1-32 or a letter from 'A' to 'T'
"^DD",356.022,356.022,.01,21,0)
^^1^1^3141106^
"^DD",356.022,356.022,.01,21,1,0)
A designated code for a specified tooth.
"^DD",356.022,356.022,.01,"DT")
3141106
"^DD",356.022,356.022,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",356.022,356.022,.02,1,0)
^.1^^0
"^DD",356.022,356.022,.02,3)
Answer must be 1-40 characters in length.
"^DD",356.022,356.022,.02,21,0)
^^2^2^3150102^
"^DD",356.022,356.022,.02,21,1,0)
The physical location in either the Permanent Dentition or the Primary 
"^DD",356.022,356.022,.02,21,2,0)
Dentition of the tooth.
"^DD",356.022,356.022,.02,"DT")
3150330
"^DD",356.022,356.022,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",356.022,356.022,.03,3)
Set this to YES in order to deactivate the code.
"^DD",356.022,356.022,.03,21,0)
^^2^2^3150102^
"^DD",356.022,356.022,.03,21,1,0)
This field will be marked inactive if a code is determined to be longer 
"^DD",356.022,356.022,.03,21,2,0)
used by X12.
"^DD",356.022,356.022,.03,"DT")
3150102
"^DD",356.023,356.023,0)
FIELD^^.02^2
"^DD",356.023,356.023,0,"DDA")
N
"^DD",356.023,356.023,0,"DT")
3150515
"^DD",356.023,356.023,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",356.023,356.023,0,"IX","B",356.023,.01)

"^DD",356.023,356.023,0,"NM","HCSR WORKLIST DELETE REASON CODE")

"^DD",356.023,356.023,0,"PT",356.22,.25)

"^DD",356.023,356.023,.01,0)
CODE^RNJ2,0^^0;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.023,356.023,.01,1,0)
^.1
"^DD",356.023,356.023,.01,1,1,0)
356.023^B
"^DD",356.023,356.023,.01,1,1,1)
S ^IBT(356.023,"B",$E(X,1,30),DA)=""
"^DD",356.023,356.023,.01,1,1,2)
K ^IBT(356.023,"B",$E(X,1,30),DA)
"^DD",356.023,356.023,.01,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",356.023,356.023,.01,21,0)
^^2^2^3150928^
"^DD",356.023,356.023,.01,21,1,0)
This is the Delete Reason Code to be used when removing a 278 Request or 
"^DD",356.023,356.023,.01,21,2,0)
Inquiry from the HCSR Worklist.
"^DD",356.023,356.023,.01,"DT")
3150515
"^DD",356.023,356.023,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>50!($L(X)<1) X
"^DD",356.023,356.023,.02,3)
Answer must be 1-50 characters in length.
"^DD",356.023,356.023,.02,21,0)
^^1^1^3150928^
"^DD",356.023,356.023,.02,21,1,0)
This is the description of the Delete Reason Code.
"^DD",356.023,356.023,.02,"DT")
3150922
"^DD",356.22,356.22,0)
FIELD^^.27^185
"^DD",356.22,356.22,0,"DDA")
N
"^DD",356.22,356.22,0,"DT")
3160224
"^DD",356.22,356.22,0,"IX","AC",356.22,.15)

"^DD",356.22,356.22,0,"IX","B",356.22,.01)

"^DD",356.22,356.22,0,"IX","C",356.22,.12)

"^DD",356.22,356.22,0,"IX","F",356.22,.23)

"^DD",356.22,356.22,0,"NM","HCS REVIEW TRANSMISSION")

"^DD",356.22,356.22,0,"PT",356.22,.13)

"^DD",356.22,356.22,0,"PT",356.22,.14)

"^DD",356.22,356.22,.01,0)
DATE ENTERED^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,.01,1,0)
^.1
"^DD",356.22,356.22,.01,1,1,0)
356.22^B
"^DD",356.22,356.22,.01,1,1,1)
S ^IBT(356.22,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.22,.01,1,1,2)
K ^IBT(356.22,"B",$E(X,1,30),DA)
"^DD",356.22,356.22,.01,3)
Enter a valid date and time, no range limit on date.
"^DD",356.22,356.22,.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.22,.01,21,1,0)
The date and time of when the entry was added to the file.
"^DD",356.22,356.22,.01,"DT")
3150102
"^DD",356.22,356.22,.02,0)
PATIENT^P2'^DPT(^0;2^Q
"^DD",356.22,356.22,.02,3)
Enter a valid Patient.
"^DD",356.22,356.22,.02,21,0)
^^1^1^3150105^
"^DD",356.22,356.22,.02,21,1,0)
The Patient of this transmission entry.
"^DD",356.22,356.22,.02,"DT")
3150105
"^DD",356.22,356.22,.03,0)
INSURANCE POLICY^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1.N) X
"^DD",356.22,356.22,.03,3)
Type a number between 1 and 9999999, 0 decimal digits.
"^DD",356.22,356.22,.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,.03,21,1,0)
This field contains the IEN of the PATIENT INSURANCE multiple (file 2, 
"^DD",356.22,356.22,.03,21,2,0)
sub-file .312) this entry is for.
"^DD",356.22,356.22,.03,"DT")
3141231
"^DD",356.22,356.22,.04,0)
INPATIENT / OUTPATIENT^S^I:INPATIENT;O:OUTPATIENT;^0;4^Q
"^DD",356.22,356.22,.04,3)
Enter a valid Patient Status.
"^DD",356.22,356.22,.04,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,.04,21,1,0)
The status of the patient - inpatient or outpatient.
"^DD",356.22,356.22,.04,"DT")
3141231
"^DD",356.22,356.22,.05,0)
WARD^P42'^DIC(42,^0;5^Q
"^DD",356.22,356.22,.05,3)
Enter a valid Ward location.
"^DD",356.22,356.22,.05,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,.05,21,1,0)
The Ward location for inpatients, null for outpatients.
"^DD",356.22,356.22,.05,"DT")
3141231
"^DD",356.22,356.22,.06,0)
CLINIC^P44'^SC(^0;6^Q
"^DD",356.22,356.22,.06,3)
Enter a valid Clinic.
"^DD",356.22,356.22,.06,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,.06,21,1,0)
The Clinic for outpatients, null for inpatients.
"^DD",356.22,356.22,.06,"DT")
3141231
"^DD",356.22,356.22,.07,0)
EVENT DATE^F^^0;7^K:$L(X)>17!($L(X)<1) X
"^DD",356.22,356.22,.07,3)
Answer must be 1-17 characters in length.
"^DD",356.22,356.22,.07,21,0)
^.001^4^4^3140725^^
"^DD",356.22,356.22,.07,21,1,0)
Date of the event for this entry. Contains admission date/time (internal 
"^DD",356.22,356.22,.07,21,2,0)
FM format) for inpatients or appointment date/time (internal FM format)
"^DD",356.22,356.22,.07,21,3,0)
for outpatients. Can contain date range in [internal FM
"^DD",356.22,356.22,.07,21,4,0)
date/time]-[internal FM date/time] format.
"^DD",356.22,356.22,.07,"DT")
3140701
"^DD",356.22,356.22,.08,0)
STATUS^S^01:IN PROGRESS;02:AWAITING RESPONSE;03:UNABLE TO SEND;04:NEGATIVE RESPONSE RECEIVED;05:POSITIVE RESPONSE RECEIVED;06:MANUALLY REMOVED;07:PENDING RESPONSE RECEIVED;08:FLAGGED FOR NEXT REVIEW;0:INITIAL ENTRY;09:215 INQ SENT;^0;8^Q
"^DD",356.22,356.22,.08,3)
Enter a valid Status Code.
"^DD",356.22,356.22,.08,21,0)
^.001^1^1^3151210^^^
"^DD",356.22,356.22,.08,21,1,0)
The code describing current status of the entry.
"^DD",356.22,356.22,.08,"DT")
3150102
"^DD",356.22,356.22,.09,0)
MARKED 'IN PROGRESS' BY^P200'^VA(200,^0;9^Q
"^DD",356.22,356.22,.09,3)
Enter a valid user.
"^DD",356.22,356.22,.09,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,.09,21,1,0)
The User who marked this entry as "in progress".
"^DD",356.22,356.22,.09,"DT")
3141231
"^DD",356.22,356.22,.1,0)
DATE MARKED 'IN PROGRESS'^D^^0;10^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,.1,3)
Enter a valid date and time, no range limit on date.
"^DD",356.22,356.22,.1,21,0)
^^1^1^3150107^
"^DD",356.22,356.22,.1,21,1,0)
The Date/time this entry was marked as 'in progress'.
"^DD",356.22,356.22,.1,"DT")
3150107
"^DD",356.22,356.22,.11,0)
REQUESTED BY^P200'^VA(200,^0;11^Q
"^DD",356.22,356.22,.11,3)
Enter a valid User.
"^DD",356.22,356.22,.11,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,.11,21,1,0)
The name of the person who will be the Contact for
"^DD",356.22,356.22,.11,21,2,0)
any UMO questions.
"^DD",356.22,356.22,.11,"DT")
3141231
"^DD",356.22,356.22,.12,0)
MESSAGE CONTROL ID^F^^0;12^K:$L(X)>20!($L(X)<1) X
"^DD",356.22,356.22,.12,1,0)
^.1
"^DD",356.22,356.22,.12,1,1,0)
356.22^C
"^DD",356.22,356.22,.12,1,1,1)
S ^IBT(356.22,"C",$E(X,1,30),DA)=""
"^DD",356.22,356.22,.12,1,1,2)
K ^IBT(356.22,"C",$E(X,1,30),DA)
"^DD",356.22,356.22,.12,1,1,3)
This index is used to link the response message to the original request or inquiry.
"^DD",356.22,356.22,.12,1,1,"%D",0)
^^2^2^3140924^
"^DD",356.22,356.22,.12,1,1,"%D",1,0)
This cross reference is used to link the response messages with the 
"^DD",356.22,356.22,.12,1,1,"%D",2,0)
corresponding request/inquiry messages.
"^DD",356.22,356.22,.12,1,1,"DT")
3140625
"^DD",356.22,356.22,.12,3)
Answer must be 1-20 characters in length.
"^DD",356.22,356.22,.12,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,.12,21,1,0)
This is the HL7 message control number that is generated at the time the 
"^DD",356.22,356.22,.12,21,2,0)
HL7 message is created and placed in the outgoing HL7 message queue.
"^DD",356.22,356.22,.12,"DT")
3141231
"^DD",356.22,356.22,.13,0)
INQUIRY^P356.22'^IBT(356.22,^0;13^Q
"^DD",356.22,356.22,.13,3)
Select the inquiry this response corresponds to.
"^DD",356.22,356.22,.13,21,0)
^.001^2^2^3140623^^
"^DD",356.22,356.22,.13,21,1,0)
This field contains the pointer to the 278 inquiry this response 
"^DD",356.22,356.22,.13,21,2,0)
corresponds to. If this entry is an inquiry, this field should be blank.
"^DD",356.22,356.22,.13,"DT")
3140505
"^DD",356.22,356.22,.14,0)
RESPONSE^P356.22'^IBT(356.22,^0;14^Q
"^DD",356.22,356.22,.14,3)
Select the response for this inquiry.
"^DD",356.22,356.22,.14,21,0)
^.001^1^1^3140623^^
"^DD",356.22,356.22,.14,21,1,0)
This field contains the pointer to the 278 response for this inquiry.
"^DD",356.22,356.22,.14,"DT")
3140505
"^DD",356.22,356.22,.15,0)
TRANSMISSION DATE/TIME^D^^0;15^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,.15,1,0)
^.1
"^DD",356.22,356.22,.15,1,1,0)
356.22^AC
"^DD",356.22,356.22,.15,1,1,1)
S ^IBT(356.22,"AC",$E(X,1,30),DA)=""
"^DD",356.22,356.22,.15,1,1,2)
K ^IBT(356.22,"AC",$E(X,1,30),DA)
"^DD",356.22,356.22,.15,1,1,"%D",0)
^^2^2^3141230^
"^DD",356.22,356.22,.15,1,1,"%D",1,0)
Used to find HCS REVIEW TRANSMISSION entries by the date/time they were 
"^DD",356.22,356.22,.15,1,1,"%D",2,0)
transmitted.
"^DD",356.22,356.22,.15,1,1,"DT")
3140722
"^DD",356.22,356.22,.15,3)
Enter a valid date and time, no range on date.
"^DD",356.22,356.22,.15,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,.15,21,1,0)
This is the date and time response was received (if this entry is a 
"^DD",356.22,356.22,.15,21,2,0)
response) or inquiry was sent out (if this entry is an inquiry).
"^DD",356.22,356.22,.15,"DT")
3141231
"^DD",356.22,356.22,.16,0)
SOURCE^D^^0;16^S %DT="ETXR" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,.16,1,0)
^.1^^0
"^DD",356.22,356.22,.16,3)
Enter the date/time of the entry's associated appointment or the date of the entry's associated admission.
"^DD",356.22,356.22,.16,21,0)
^.001^3^3^3150225^^^
"^DD",356.22,356.22,.16,21,1,0)
If the source of the event is an appointment, this is internal FileMan 
"^DD",356.22,356.22,.16,21,2,0)
date/time of the appointment.  If the source of the event is an 
"^DD",356.22,356.22,.16,21,3,0)
admission, this is the internal FileMan date of the admission.
"^DD",356.22,356.22,.16,"DT")
3141230
"^DD",356.22,356.22,.17,0)
TICKLER^F^^0;17^K:$L(X)>12!($L(X)<1) X
"^DD",356.22,356.22,.17,3)
Enter 'D' to delay review until time of discharge or enter a valid date.
"^DD",356.22,356.22,.17,21,0)
^^5^5^3141230^
"^DD",356.22,356.22,.17,21,1,0)
A value of 'D' will prevent this entry from being shown on the HCSR 
"^DD",356.22,356.22,.17,21,2,0)
worklist until the admission related to the entry has been discharged.  
"^DD",356.22,356.22,.17,21,3,0)
The 'D' option is only valid for entries with an Input/Output value of 
"^DD",356.22,356.22,.17,21,4,0)
'I'. Otherwise this is an internal FileMan date and the entry will begin
"^DD",356.22,356.22,.17,21,5,0)
to appear on the worklist on this date.
"^DD",356.22,356.22,.17,"DT")
3141231
"^DD",356.22,356.22,.18,0)
FROM RESPONSE^NJ1,0^^0;18^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1.N) X
"^DD",356.22,356.22,.18,3)
Enter 1 if the entry was created from the Response Worklist.
"^DD",356.22,356.22,.18,21,0)
^^2^2^3141218^
"^DD",356.22,356.22,.18,21,1,0)
If the entry was created from the Response Worklist, the value of this 
"^DD",356.22,356.22,.18,21,2,0)
field is 1.
"^DD",356.22,356.22,.18,"DT")
3141218
"^DD",356.22,356.22,.19,0)
215 TRIGGERED^S^0:NO;1:YES;^0;19^Q
"^DD",356.22,356.22,.19,3)
Enter 1 if a 215 transaction has been generated for this entry or 0 otherwise.
"^DD",356.22,356.22,.19,21,0)
^^5^5^3141231^
"^DD",356.22,356.22,.19,21,1,0)
A flag that determines if a 278X215 Inquiry transaction has been generated
"^DD",356.22,356.22,.19,21,2,0)
for this entry. This 215 version of the 278 transaction could have been
"^DD",356.22,356.22,.19,21,3,0)
generated manually or via the auto-trigger controlled by the IB SITE
"^DD",356.22,356.22,.19,21,4,0)
PARAMETERS definition for auto trigger of 215 for appointments or
"^DD",356.22,356.22,.19,21,5,0)
admissions.
"^DD",356.22,356.22,.19,"DT")
3141231
"^DD",356.22,356.22,.2,0)
TRANSACTION TYPE^S^0:X12 217 TRANSACTION;1:X12 215 TRANSACTION;2:X12 RESPONSE MESSAGE;^0;20^Q
"^DD",356.22,356.22,.2,3)
Enter 0 if the entry is a 217 transaction, 1 if the entry is a 215 transaction or 2 if the entry is an X12 Response.
"^DD",356.22,356.22,.2,21,0)
^^2^2^3141218^
"^DD",356.22,356.22,.2,21,1,0)
This field value identifies the entry as either an X12 278X217 transaction,
"^DD",356.22,356.22,.2,21,2,0)
or an X12 278X215 transaction, or an X12 278 response.
"^DD",356.22,356.22,.2,"DT")
3141218
"^DD",356.22,356.22,.21,0)
RESPONSE STATUS^S^0:Not In-Progress;1:In Progress;^0;21^Q
"^DD",356.22,356.22,.21,3)
Enter 1 to Mark the Response Entry as In progress or 0 to remove the In Progress mark.
"^DD",356.22,356.22,.21,21,0)
^^3^3^3141218^
"^DD",356.22,356.22,.21,21,1,0)
This field is set to 1 when a user marks the Response on the Response 
"^DD",356.22,356.22,.21,21,2,0)
Worklist as In-Progress.  It is set to 0 when a user removes the 
"^DD",356.22,356.22,.21,21,3,0)
In-Progress mark.
"^DD",356.22,356.22,.21,"DT")
3141218
"^DD",356.22,356.22,.22,0)
DELETED RESPONSE^S^1:DELETED;^0;22^Q
"^DD",356.22,356.22,.22,3)
Enter 1 to manually remove this response from the Response Worklist.
"^DD",356.22,356.22,.22,21,0)
^^2^2^3150218^
"^DD",356.22,356.22,.22,21,1,0)
Determines if a response entry was manually removed from the
"^DD",356.22,356.22,.22,21,2,0)
Response Worklist and should not be displayed.
"^DD",356.22,356.22,.22,"DT")
3150218
"^DD",356.22,356.22,.23,0)
DATE MANUALLY REMOVED^D^^0;23^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,.23,1,0)
^.1
"^DD",356.22,356.22,.23,1,1,0)
356.22^F
"^DD",356.22,356.22,.23,1,1,1)
S ^IBT(356.22,"F",$E(X,1,30),DA)=""
"^DD",356.22,356.22,.23,1,1,2)
K ^IBT(356.22,"F",$E(X,1,30),DA)
"^DD",356.22,356.22,.23,1,1,"%D",0)
^^2^2^3151029^
"^DD",356.22,356.22,.23,1,1,"%D",1,0)
This cross reference will be used for the generation of the 278 Deletion 
"^DD",356.22,356.22,.23,1,1,"%D",2,0)
Disposition Report.
"^DD",356.22,356.22,.23,1,1,"DT")
3151029
"^DD",356.22,356.22,.23,3)
Enter the date/time the entry was manually removed (No range limit on date).
"^DD",356.22,356.22,.23,21,0)
^.001^3^3^3151029^^
"^DD",356.22,356.22,.23,21,1,0)
The timestamp of when an entry was manually removed from the worklist.
"^DD",356.22,356.22,.23,21,2,0)
A manually removed entry will no longer appear on the HCSR Worklist or
"^DD",356.22,356.22,.23,21,3,0)
the HCSR Response Worklist.
"^DD",356.22,356.22,.23,"DT")
3151029
"^DD",356.22,356.22,.24,0)
MANUALLY REMOVED BY^P200'^VA(200,^0;24^Q
"^DD",356.22,356.22,.24,3)
Enter a valid user.
"^DD",356.22,356.22,.24,21,0)
^^2^2^3150218^
"^DD",356.22,356.22,.24,21,1,0)
The user who manually removed an entry from the HCSR
"^DD",356.22,356.22,.24,21,2,0)
Worklist or the HCSR Response Worklist.
"^DD",356.22,356.22,.24,"DT")
3150218
"^DD",356.22,356.22,.25,0)
DELETE REASON^P356.023'^IBT(356.023,^0;25^Q
"^DD",356.22,356.22,.25,3)
Enter one of the Delete Reason Codes on file.
"^DD",356.22,356.22,.25,21,0)
^.001^2^2^3150928^^
"^DD",356.22,356.22,.25,21,1,0)
The Delete Reason Code is the reason for which the 278 request or inquiry 
"^DD",356.22,356.22,.25,21,2,0)
was removed from the HCSR Worklist.
"^DD",356.22,356.22,.25,"DT")
3150515
"^DD",356.22,356.22,.26,0)
MANUAL 215^S^0:NOT A MANUAL 215;1:MANUAL 215;^0;26^Q
"^DD",356.22,356.22,.26,3)
Set value to 0 for 'non-manual' 278x215 or 1 for 'manual' 278x215 generation.
"^DD",356.22,356.22,.26,21,0)
^.001^2^2^3150928^^^
"^DD",356.22,356.22,.26,21,1,0)
This flag is set automatically when a 278x215 Authorization Inquiry is 
"^DD",356.22,356.22,.26,21,2,0)
generated manually.
"^DD",356.22,356.22,.26,"DT")
3150921
"^DD",356.22,356.22,.27,0)
REQ FROM RESP^S^0:NO REQUEST CREATED FROM RESPONSE;1:REQUEST CREATED FROM THIS RESPONSE;^0;27^Q
"^DD",356.22,356.22,.27,3)
Select 1 if this 278 Response message has had a 278 Request generated from it.  Otherwise, enter 0 to indicate no 278 Request message has been generated from this 278 Response message.
"^DD",356.22,356.22,.27,21,0)
^.001^3^3^3151210^^^
"^DD",356.22,356.22,.27,21,1,0)
This field indicates whether a request message was created from this 
"^DD",356.22,356.22,.27,21,2,0)
response message.  This is required in order to prevent duplicate 
"^DD",356.22,356.22,.27,21,3,0)
requests being generated from one response message.
"^DD",356.22,356.22,.27,"DT")
3151209
"^DD",356.22,356.22,1,0)
COMMENTS^356.221DA^^1;0
"^DD",356.22,356.22,1,21,0)
^.001^1^1^3141231^^
"^DD",356.22,356.22,1,21,1,0)
User comments for this entry.
"^DD",356.22,356.22,2.01,0)
REQUEST CATEGORY^*P356.001'O^IBT(356.001,^2;1^S DIC("S")="I $$REQCAT^IBTRH5C()" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,2.01,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.001,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.001,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.01,2.1)
REQUEST CATEGORY:DESCRIPTION
"^DD",356.22,356.22,2.01,3)
Enter a valid Request Type for this Patient Event review.
"^DD",356.22,356.22,2.01,12)
Only allows Request Category that are valid for the status of the entry.
"^DD",356.22,356.22,2.01,12.1)
S DIC("S")="I $$REQCAT^IBTRH5C()"
"^DD",356.22,356.22,2.01,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,2.01,21,1,0)
The Request Type for this Patient Event review that is being submitted 
"^DD",356.22,356.22,2.01,21,2,0)
for approval (e.g. Admission Review, Health Services Review, Individual 
"^DD",356.22,356.22,2.01,21,3,0)
or Specialty Care Review).
"^DD",356.22,356.22,2.01,"DT")
3141231
"^DD",356.22,356.22,2.02,0)
CERTIFICATION TYPE CODE^*P356.002'O^IBT(356.002,^2;2^S DIC("S")="I $$CERTCD^IBTRH5C()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,2.02,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.002,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.002,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.02,2.1)
CERTIFICATION TYPE CODE:DESCRIPTION
"^DD",356.22,356.22,2.02,3)
Enter a valid Certification Type Code.
"^DD",356.22,356.22,2.02,12)
If a 278 Request is being created from a Response, 'I' is not a valid selection.
"^DD",356.22,356.22,2.02,12.1)
S DIC("S")="I $$CERTCD^IBTRH5C()"
"^DD",356.22,356.22,2.02,21,0)
^^1^1^3140924^^
"^DD",356.22,356.22,2.02,21,1,0)
This is Certification Type of the HCSR Transmission entry.
"^DD",356.22,356.22,2.02,"DT")
3141231
"^DD",356.22,356.22,2.03,0)
SERVICE TYPE CODE^*P365.013'O^IBE(365.013,^2;3^S DIC("S")="I $$SVCTYPE^IBTRH5I()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,2.03,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.013,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.013,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.03,2.1)
SERVICE TYPE CODE:DESCRIPTION
"^DD",356.22,356.22,2.03,3)
Enter a valid Service Type.
"^DD",356.22,356.22,2.03,12)
Select a valid Service Type
"^DD",356.22,356.22,2.03,12.1)
S DIC("S")="I $$SVCTYPE^IBTRH5I()"
"^DD",356.22,356.22,2.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.03,21,1,0)
The Service Type field is REQUIRED unless you plan
"^DD",356.22,356.22,2.03,21,2,0)
to enter Service Detail information.
"^DD",356.22,356.22,2.03,"DT")
3141231
"^DD",356.22,356.22,2.04,0)
FACILITY TYPE QUALIFIER^S^A:Uniform Billing Claim Form Bill Type;B:Place of Service Codes for Professional or Dental Services;^2;4^Q
"^DD",356.22,356.22,2.04,3)
Enter a valid Service Location Qualifier code.
"^DD",356.22,356.22,2.04,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,2.04,21,1,0)
The Service Location Qualifier field is REQUIRED
"^DD",356.22,356.22,2.04,21,2,0)
unless you plan to enter Service Detail
"^DD",356.22,356.22,2.04,21,3,0)
information.
"^DD",356.22,356.22,2.04,"DT")
3141231
"^DD",356.22,356.22,2.05,0)
FACILITY TYPE^P353.1'O^IBE(353.1,^2;5^Q
"^DD",356.22,356.22,2.05,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353.1,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(353.1,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.05,2.1)
FACILITY TYPE:NAME
"^DD",356.22,356.22,2.05,3)
Enter a valid Service Location.
"^DD",356.22,356.22,2.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.05,21,1,0)
Select the Service Location where this patient event
"^DD",356.22,356.22,2.05,21,2,0)
will be performed.
"^DD",356.22,356.22,2.05,"DT")
3141231
"^DD",356.22,356.22,2.06,0)
LOCATION OF CARE^S^1:Hospital - Inpt or Opt (includes clinics);2:Skilled Nursing (NHCU);3:Home Health Agency;7:Clinic (only independent/satellite);8:Spec. Facility Hosp/Amb Surg Ctr;^2;6^Q
"^DD",356.22,356.22,2.06,3)
Enter a valid Location of Care.
"^DD",356.22,356.22,2.06,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.06,21,1,0)
This is location of care code for the 278 inquiry. This field is
"^DD",356.22,356.22,2.06,21,2,0)
only populated if the FACILITY TYPE QUALIFIER field is set to A.
"^DD",356.22,356.22,2.06,"DT")
3141231
"^DD",356.22,356.22,2.07,0)
BILL CLASSIFICATION^S^8:Swingbed;1:Inpatient (Medicare-A);2:Humanit. Emerg. (Inpatient/Medicare-B);3:Outpatient;4:Humanit. Emerg. (Outpatient/ESRD);^2;7^Q
"^DD",356.22,356.22,2.07,3)
Enter a valid Bill Classification code.
"^DD",356.22,356.22,2.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.07,21,1,0)
This is Bill Classification code for the 278 inquiry. This field is only
"^DD",356.22,356.22,2.07,21,2,0)
populated if the FACILITY TYPE QUALIFIER field is set to A.
"^DD",356.22,356.22,2.07,"DT")
3141231
"^DD",356.22,356.22,2.08,0)
RELATED CAUSES #1^*S^AA:Auto Accident;AP:Another Party Responsible;EM:Employment;^2;8^Q
"^DD",356.22,356.22,2.08,3)
Enter a valid Related Cause. The entered Related Cause must not already be present in Related Causes #2 or #3.
"^DD",356.22,356.22,2.08,12)
Only allows Related Causes that are not already present in in Related Causes #2 or #3.
"^DD",356.22,356.22,2.08,12.1)
S DIC("S")="I $$RCAUSE^IBTRH5A(2.08)"
"^DD",356.22,356.22,2.08,21,0)
^^1^1^3141118^
"^DD",356.22,356.22,2.08,21,1,0)
Select a cause related to this patient care event.
"^DD",356.22,356.22,2.08,"DT")
3141231
"^DD",356.22,356.22,2.09,0)
RELATED CAUSES #2^*S^AP:Another Party Responsible;EM:Employment;^2;9^Q
"^DD",356.22,356.22,2.09,3)
Enter a valid Related Cause. The entered Related Cause must not already be present in Related Causes #1 or #3.
"^DD",356.22,356.22,2.09,12)
Only allows Related Causes that are not already present in in Related Causes #1 or #3.
"^DD",356.22,356.22,2.09,12.1)
S DIC("S")="I $$RCAUSE^IBTRH5A(2.09)"
"^DD",356.22,356.22,2.09,21,0)
^^1^1^3141118^
"^DD",356.22,356.22,2.09,21,1,0)
Select a cause related to this patient care event.
"^DD",356.22,356.22,2.09,"DT")
3150127
"^DD",356.22,356.22,2.1,0)
RELATED CAUSES #3^*S^AP:Another Party Responsible;EM:Employment;^2;10^Q
"^DD",356.22,356.22,2.1,3)
Enter a valid Related Cause. The entered Related Cause must not already be present in Related Causes #1 or #2.
"^DD",356.22,356.22,2.1,12)
Only allows Related Causes that are not already present in in Related Causes #1 or #2.
"^DD",356.22,356.22,2.1,12.1)
S DIC("S")="I $$RCAUSE^IBTRH5A(2.1)"
"^DD",356.22,356.22,2.1,21,0)
^^1^1^3141118^
"^DD",356.22,356.22,2.1,21,1,0)
Select a cause related to this patient care event.
"^DD",356.22,356.22,2.1,"DT")
3150127
"^DD",356.22,356.22,2.11,0)
STATE^P5'^DIC(5,^2;11^Q
"^DD",356.22,356.22,2.11,3)
Enter a valid state.
"^DD",356.22,356.22,2.11,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.11,21,1,0)
The state in which the auto accident occurred.  This
"^DD",356.22,356.22,2.11,21,2,0)
is REQUIRED if the accident occurred out of this state.
"^DD",356.22,356.22,2.11,"DT")
3141231
"^DD",356.22,356.22,2.12,0)
COUNTRY^P779.004'O^HL(779.004,^2;12^Q
"^DD",356.22,356.22,2.12,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^HL(779.004,+D0,0)) D0=-1 S Y(101)=$S($D(^HL(779.004,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.12,2.1)
COUNTRY:DESCRIPTION
"^DD",356.22,356.22,2.12,3)
Enter a valid country.
"^DD",356.22,356.22,2.12,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.12,21,1,0)
The country in which the auto accident occurred if
"^DD",356.22,356.22,2.12,21,2,0)
outside the US.
"^DD",356.22,356.22,2.12,"DT")
3141231
"^DD",356.22,356.22,2.13,0)
LEVEL OF SERVICE^S^03:Emergency;E:Elective;U:Urgent;^2;13^Q
"^DD",356.22,356.22,2.13,3)
Enter a valid Level of Service.
"^DD",356.22,356.22,2.13,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.13,21,1,0)
The Level of Service if care is other than Routine.
"^DD",356.22,356.22,2.13,21,2,0)
This is REQUIRED if this request is an Appeal.
"^DD",356.22,356.22,2.13,"DT")
3141231
"^DD",356.22,356.22,2.14,0)
CURRENT HEALTH CONDITION^P356.003'O^IBT(356.003,^2;14^Q
"^DD",356.22,356.22,2.14,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.003,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.003,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.14,2.1)
CURRENT HEALTH CONDITION:DESCRIPTION
"^DD",356.22,356.22,2.14,3)
Enter an optional Health Condition Code.
"^DD",356.22,356.22,2.14,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,2.14,21,1,0)
The Health Condition Code is only entered if it is a
"^DD",356.22,356.22,2.14,21,2,0)
factor in choosing services that are not typical for the
"^DD",356.22,356.22,2.14,21,3,0)
patient's diagnoses.
"^DD",356.22,356.22,2.14,"DT")
3141231
"^DD",356.22,356.22,2.15,0)
PROGNOSIS CODE^P356.004'O^IBT(356.004,^2;15^Q
"^DD",356.22,356.22,2.15,1,0)
^.1^^0
"^DD",356.22,356.22,2.15,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.004,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.004,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.15,2.1)
PROGNOSIS CODE:DESCRIPTION
"^DD",356.22,356.22,2.15,3)
Enter an optional Prognosis Code.
"^DD",356.22,356.22,2.15,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,2.15,21,1,0)
The Prognosis Code is only entered if it is a factor in
"^DD",356.22,356.22,2.15,21,2,0)
choosing services that are not typical for the patient's
"^DD",356.22,356.22,2.15,21,3,0)
diagnoses.
"^DD",356.22,356.22,2.15,"DT")
3150102
"^DD",356.22,356.22,2.16,0)
RELEASE OF INFORMATION CODE^S^M:Prov has Limited or Restricted Ability to Release Data Related to Clm;Y:Prov has a Signed Statement Permitting Release of Medical Billing Data;^2;16^Q
"^DD",356.22,356.22,2.16,3)
Enter a valid ROI code.
"^DD",356.22,356.22,2.16,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.16,21,1,0)
The ROI code which determines how information of
"^DD",356.22,356.22,2.16,21,2,0)
this patient event will be released.
"^DD",356.22,356.22,2.16,"DT")
3150106
"^DD",356.22,356.22,2.17,0)
DELAY REASON^P356.005'O^IBT(356.005,^2;17^Q
"^DD",356.22,356.22,2.17,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.005,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.005,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,2.17,2.1)
DELAY REASON:DESCRIPTION
"^DD",356.22,356.22,2.17,3)
Enter a valid Delay Reason.
"^DD",356.22,356.22,2.17,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,2.17,21,1,0)
The Delay Reason code.  This information is REQUIRED
"^DD",356.22,356.22,2.17,21,2,0)
if this request is outside of the normal timeframe for this
"^DD",356.22,356.22,2.17,21,3,0)
UMO.
"^DD",356.22,356.22,2.17,"DT")
3141231
"^DD",356.22,356.22,2.18,0)
ACCIDENT DATE^D^^2;18^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,2.18,3)
Enter a valid date (no range limit).
"^DD",356.22,356.22,2.18,21,0)
^^1^1^3150106^
"^DD",356.22,356.22,2.18,21,1,0)
Enter the date on which the accident occurred.
"^DD",356.22,356.22,2.18,"DT")
3150106
"^DD",356.22,356.22,2.19,0)
LAST MENSTRUAL PERIOD DATE^D^^2;19^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,2.19,3)
Enter a valid date (no range limit).
"^DD",356.22,356.22,2.19,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.19,21,1,0)
The Date of Last Menstrual Period if this request is
"^DD",356.22,356.22,2.19,21,2,0)
related to pregnancy.
"^DD",356.22,356.22,2.19,"DT")
3150106
"^DD",356.22,356.22,2.2,0)
ESTIMATED DOB^D^^2;20^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,2.2,3)
Enter a valid estimated date of birth.
"^DD",356.22,356.22,2.2,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,2.2,21,1,0)
The Estimated Date of Birth if this request is
"^DD",356.22,356.22,2.2,21,2,0)
related to an estimated date of birth (due date).
"^DD",356.22,356.22,2.2,"DT")
3141231
"^DD",356.22,356.22,2.21,0)
ILLNESS DATE^D^^2;21^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,2.21,3)
Enter a valid date.
"^DD",356.22,356.22,2.21,21,0)
^.001^2^2^3150408^^
"^DD",356.22,356.22,2.21,21,1,0)
The date when the current symptoms or illness first
"^DD",356.22,356.22,2.21,21,2,0)
began.
"^DD",356.22,356.22,2.21,"DT")
3150408
"^DD",356.22,356.22,2.22,0)
DISCHARGE DATE^D^^2;22^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,2.22,3)
Enter a valid date and optional time of discharge for this patient.
"^DD",356.22,356.22,2.22,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,2.22,21,1,0)
The patient discharge date/time for the 278 inquiry. Time is optional.
"^DD",356.22,356.22,2.22,"DT")
3141231
"^DD",356.22,356.22,2.23,0)
CERTIFICATION ISSUE DATE^D^^2;23^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,2.23,3)
Enter a valid Certification Issue Date.
"^DD",356.22,356.22,2.23,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,2.23,21,1,0)
The Certification Issue Date for this authorization.
"^DD",356.22,356.22,2.23,"DT")
3141231
"^DD",356.22,356.22,2.24,0)
CERTIFICATION EXPIRATION DATE^D^^2;24^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,2.24,3)
Enter a valid Certification Expiration Date.
"^DD",356.22,356.22,2.24,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,2.24,21,1,0)
The authorization expiration date.
"^DD",356.22,356.22,2.24,"DT")
3141231
"^DD",356.22,356.22,2.25,0)
CERTIFICATION EFFECTIVE DATE^D^^2;25^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,2.25,3)
Enter a valid Certification Effective Date.
"^DD",356.22,356.22,2.25,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,2.25,21,1,0)
The Certification Effective Date for the authorization provided.
"^DD",356.22,356.22,2.25,"DT")
3141231
"^DD",356.22,356.22,2.26,0)
CERT EFFECTIVE THRU DATE^D^^2;26^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,2.26,3)
Enter a valid date.
"^DD",356.22,356.22,2.26,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,2.26,21,1,0)
The date for which the authorization is still in effect.
"^DD",356.22,356.22,2.26,"DT")
3141231
"^DD",356.22,356.22,3,0)
PATIENT DIAGNOSIS^356.223PA^^3;0
"^DD",356.22,356.22,3,21,0)
^.001^1^1^3141121^^^
"^DD",356.22,356.22,3,21,1,0)
This multiple contains patient diagnosis codes for 278 inquiry.
"^DD",356.22,356.22,4.01,0)
HCSD QUANTITY QUALIFIER^*P365.016'O^IBE(365.016,^4;1^S DIC("S")="I $$HCSDQQ^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.01,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.016,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.016,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.01,2.1)
HCSD QUANTITY QUALIFIER:DESCRIPTION
"^DD",356.22,356.22,4.01,3)
Enter a valid Service Quantity Qualifier.
"^DD",356.22,356.22,4.01,12)
Enter a valid Quantity Qualifier code.
"^DD",356.22,356.22,4.01,12.1)
S DIC("S")="I $$HCSDQQ^IBTRH5H()"
"^DD",356.22,356.22,4.01,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,4.01,21,1,0)
If the Certification Type is 4 - Extension, this is the
"^DD",356.22,356.22,4.01,21,2,0)
number of additional visits. If the Certification Type
"^DD",356.22,356.22,4.01,21,3,0)
is S - Revised, it is the new total.
"^DD",356.22,356.22,4.01,"DT")
3141231
"^DD",356.22,356.22,4.02,0)
HCSD SERVICE UNIT COUNT^NJ15,0^^4;2^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,4.02,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,4.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.02,21,1,0)
The service unit count for the Health Care Services
"^DD",356.22,356.22,4.02,21,2,0)
Delivery segment of the 278 inquiry.
"^DD",356.22,356.22,4.02,"DT")
3141231
"^DD",356.22,356.22,4.03,0)
HCSD UNITS OF MEASUREMENT^S^DA:Days;MO:Months;WK:Weeks;^4;3^Q
"^DD",356.22,356.22,4.03,3)
Enter a valid Units of Measurement code.
"^DD",356.22,356.22,4.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.03,21,1,0)
The Unit of Measurement for the Sample Selection
"^DD",356.22,356.22,4.03,21,2,0)
Modulus.
"^DD",356.22,356.22,4.03,"DT")
3141231
"^DD",356.22,356.22,4.04,0)
HCSD SAMPLE SELECTION MODULUS^NJ6,2^^4;4^K:+X'=X!(X>999)!(X<0)!(X?.E1"."3.N) X
"^DD",356.22,356.22,4.04,3)
Type a number between 0 and 999, 2 decimal digits.
"^DD",356.22,356.22,4.04,21,0)
^^3^3^3141119^
"^DD",356.22,356.22,4.04,21,1,0)
Enter a number with up to 2 decimal points that represents
"^DD",356.22,356.22,4.04,21,2,0)
the sampling frequency in terms of the Unit of Measurement
"^DD",356.22,356.22,4.04,21,3,0)
(e.g. 1.5 weeks).
"^DD",356.22,356.22,4.04,"DT")
3141119
"^DD",356.22,356.22,4.05,0)
HCSD TIME PERIOD QUALIFIER^*P365.015'O^IBE(365.015,^4;5^S DIC("S")="I $$TIMEPDQ^IBTRH5I()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.05,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.015,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.015,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.05,2.1)
HCSD TIME PERIOD QUALIFIER:DESCRIPTION
"^DD",356.22,356.22,4.05,3)
Enter a valid Time Period Qualifier.
"^DD",356.22,356.22,4.05,12)
Select a valid Time Period Qualifier
"^DD",356.22,356.22,4.05,12.1)
S DIC("S")="I $$TIMEPDQ^IBTRH5I()"
"^DD",356.22,356.22,4.05,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,4.05,21,1,0)
The Time Period Qualifier for the Period Count when
"^DD",356.22,356.22,4.05,21,2,0)
patient events must be rendered within a specific time
"^DD",356.22,356.22,4.05,21,3,0)
frame.
"^DD",356.22,356.22,4.05,"DT")
3141231
"^DD",356.22,356.22,4.06,0)
HCSD PERIOD COUNT^NJ3,0^^4;6^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,4.06,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",356.22,356.22,4.06,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.06,21,1,0)
Enter a whole number between 1 and 999 when patient events
"^DD",356.22,356.22,4.06,21,2,0)
must be rendered within a specific time frame.
"^DD",356.22,356.22,4.06,"DT")
3141231
"^DD",356.22,356.22,4.07,0)
HCSD DELIVERY FREQUENCY^*P365.025'^IBE(365.025,^4;7^S DIC("S")="I $$HCSDFC^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.07,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.025,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.025,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.07,2.1)
HCSD DELIVERY FREQUENCY:DESCRIPTION
"^DD",356.22,356.22,4.07,3)
Enter a valid Delivery Frequency Code.
"^DD",356.22,356.22,4.07,12)
The code identify a specific calendar delivery pattern.
"^DD",356.22,356.22,4.07,12.1)
S DIC("S")="I $$HCSDFC^IBTRH5H()"
"^DD",356.22,356.22,4.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.07,21,1,0)
The Delivery Frequency Code when patient events must
"^DD",356.22,356.22,4.07,21,2,0)
be rendered within a specific time frame.
"^DD",356.22,356.22,4.07,"DT")
3150114
"^DD",356.22,356.22,4.08,0)
HCSD DELIVERY TIME PATTERN^P356.007'O^IBT(356.007,^4;8^Q
"^DD",356.22,356.22,4.08,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.007,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.007,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.08,2.1)
HCSD DELIVERY TIME PATTERN:DESCRIPTION
"^DD",356.22,356.22,4.08,3)
Enter an optional Delivery Pattern Time Code.
"^DD",356.22,356.22,4.08,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.08,21,1,0)
The optional Delivery Pattern Time Code of
"^DD",356.22,356.22,4.08,21,2,0)
when the services will be provided.
"^DD",356.22,356.22,4.08,"DT")
3141231
"^DD",356.22,356.22,4.09,0)
AMBULANCE CERT. CONDITION^S^N:No;Y:Yes;^4;9^Q
"^DD",356.22,356.22,4.09,3)
Enter 'Y' if the Ambulance Cert. Condition exists, or 'N' otherwise. 
"^DD",356.22,356.22,4.09,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.09,21,1,0)
This field indicates existence of Ambulance Certification
"^DD",356.22,356.22,4.09,21,2,0)
Condition(s).
"^DD",356.22,356.22,4.09,"DT")
3141231
"^DD",356.22,356.22,4.1,0)
AMBULANCE CONDITION #1^*P356.008'O^IBT(356.008,^4;10^S DIC("S")="I $$CERTCOND^IBTRH5A(4.1)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.1,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.1,2.1)
AMBULANCE CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,4.1,3)
Enter a valid Ambulance Certification Code. The entered code must not already be present in Ambulance Conditions #2, #3, #4 or #5.
"^DD",356.22,356.22,4.1,12)
Only allows X12 278 Condition Codes that are valid for Ambulance Certification.
"^DD",356.22,356.22,4.1,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(4.1)"
"^DD",356.22,356.22,4.1,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.1,21,1,0)
The first of 5 possible Ambulance Certification
"^DD",356.22,356.22,4.1,21,2,0)
Conditions.
"^DD",356.22,356.22,4.1,"DT")
3141231
"^DD",356.22,356.22,4.11,0)
AMBULANCE CONDITION #2^*P356.008'O^IBT(356.008,^4;11^S DIC("S")="I $$CERTCOND^IBTRH5A(4.11)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.11,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.11,2.1)
AMBULANCE CONDITION #2:DESCRIPTION
"^DD",356.22,356.22,4.11,3)
Enter a valid Ambulance Certification Code. The entered code must not already be present in Ambulance Conditions #1, #3, #4 or #5.
"^DD",356.22,356.22,4.11,12)
Only allows X12 278 Condition Codes that are valid for Ambulance Certification.
"^DD",356.22,356.22,4.11,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(4.11)"
"^DD",356.22,356.22,4.11,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.11,21,1,0)
The second of 5 possible Ambulance Certification
"^DD",356.22,356.22,4.11,21,2,0)
Conditions.
"^DD",356.22,356.22,4.11,"DT")
3141231
"^DD",356.22,356.22,4.12,0)
AMBULANCE CONDITION #3^*P356.008'O^IBT(356.008,^4;12^S DIC("S")="I $$CERTCOND^IBTRH5A(4.12)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.12,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.12,2.1)
AMBULANCE CONDITION #3:DESCRIPTION
"^DD",356.22,356.22,4.12,3)
Enter a valid Ambulance Certification Code. The entered code must not already be present in Ambulance Conditions #1, #2, #4 or #5.
"^DD",356.22,356.22,4.12,12)
Only allows X12 278 Condition Codes that are valid for Ambulance Certification.
"^DD",356.22,356.22,4.12,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(4.12)"
"^DD",356.22,356.22,4.12,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.12,21,1,0)
The third of 5 possible Ambulance Certification
"^DD",356.22,356.22,4.12,21,2,0)
Conditions.
"^DD",356.22,356.22,4.12,"DT")
3141231
"^DD",356.22,356.22,4.13,0)
AMBULANCE CONDITION #4^*P356.008'O^IBT(356.008,^4;13^S DIC("S")="I $$CERTCOND^IBTRH5A(4.13)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.13,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.13,2.1)
AMBULANCE CONDITION #4:DESCRIPTION
"^DD",356.22,356.22,4.13,3)
Enter a valid Ambulance Certification Code. The entered code must not already be present in Ambulance Conditions #1, #2, #3 or #5.
"^DD",356.22,356.22,4.13,12)
Only allows X12 278 Condition Codes that are valid for Ambulance Certification.
"^DD",356.22,356.22,4.13,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(4.13)"
"^DD",356.22,356.22,4.13,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.13,21,1,0)
The fourth of 5 possible Ambulance Certification
"^DD",356.22,356.22,4.13,21,2,0)
Conditions.
"^DD",356.22,356.22,4.13,"DT")
3141231
"^DD",356.22,356.22,4.14,0)
AMBULANCE CONDITION #5^*P356.008'O^IBT(356.008,^4;14^S DIC("S")="I $$CERTCOND^IBTRH5A(4.14)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,4.14,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,4.14,2.1)
AMBULANCE CONDITION #5:DESCRIPTION
"^DD",356.22,356.22,4.14,3)
Enter a valid Ambulance Certification Code. The entered code must not already be present in Ambulance Conditions #1, #2, #3 or #4.
"^DD",356.22,356.22,4.14,12)
Only allows X12 278 Condition Codes that are valid for Ambulance Certification.
"^DD",356.22,356.22,4.14,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(4.14)"
"^DD",356.22,356.22,4.14,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,4.14,21,1,0)
The fifth of 5 possible Ambulance Certification
"^DD",356.22,356.22,4.14,21,2,0)
Conditions.
"^DD",356.22,356.22,4.14,"DT")
3141231
"^DD",356.22,356.22,5.01,0)
CHIROPRACTIC CERT. CONDITION^S^N:No;Y:Yes;^5;1^Q
"^DD",356.22,356.22,5.01,3)
Enter 'Y' if Chiropractic Cert. condition exists, or 'N' otherwise.
"^DD",356.22,356.22,5.01,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.01,21,1,0)
This field indicates existence of Chiropractic
"^DD",356.22,356.22,5.01,21,2,0)
Certification Condition(s).
"^DD",356.22,356.22,5.01,"DT")
3141231
"^DD",356.22,356.22,5.02,0)
CHIROPRACTIC CONDITION #1^*P356.008'O^IBT(356.008,^5;2^S DIC("S")="I $$CERTCOND^IBTRH5A(5.02)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.02,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.02,2.1)
CHIROPRACTIC CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,5.02,3)
Enter a valid Chiropracatic Certification Condition. The entered code must not already be present in Chiropractic Conditions #2, #3, #4 or #5.
"^DD",356.22,356.22,5.02,12)
Only allows X12 278 Condition Codes that are valid for Chiropractic Certification.
"^DD",356.22,356.22,5.02,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.02)"
"^DD",356.22,356.22,5.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.02,21,1,0)
The first of 5 possible Chiropractic Certification
"^DD",356.22,356.22,5.02,21,2,0)
Conditions.
"^DD",356.22,356.22,5.02,"DT")
3141231
"^DD",356.22,356.22,5.03,0)
CHIROPRACTIC CONDITION #2^*P356.008'O^IBT(356.008,^5;3^S DIC("S")="I $$CERTCOND^IBTRH5A(5.03)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.03,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.03,2.1)
CHIROPRACTIC CONDITION #2:DESCRIPTION
"^DD",356.22,356.22,5.03,3)
Enter a valid Chiropractic Certification Condition. The entered code must not already be present in Chiropractic Conditions #1, #3, #4 or #5.
"^DD",356.22,356.22,5.03,12)
Only allows X12 278 Condition Codes that are valid for Chiropractic Certification.
"^DD",356.22,356.22,5.03,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.03)"
"^DD",356.22,356.22,5.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.03,21,1,0)
The Second of 5 possible Chiropractic Certification
"^DD",356.22,356.22,5.03,21,2,0)
Conditions.
"^DD",356.22,356.22,5.03,"DT")
3141231
"^DD",356.22,356.22,5.04,0)
CHIROPRACTIC CONDITION #3^*P356.008'O^IBT(356.008,^5;4^S DIC("S")="I $$CERTCOND^IBTRH5A(5.04)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.04,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.04,2.1)
CHIROPRACTIC CONDITION #3:DESCRIPTION
"^DD",356.22,356.22,5.04,3)
Enter a valid Chiropractic Certification Condition. The entered code must not already be present in Chiropractic Conditions #1, #2, #4 or #5.
"^DD",356.22,356.22,5.04,12)
Only allows X12 278 Condition Codes that are valid for Chiropractic Certification.
"^DD",356.22,356.22,5.04,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.04)"
"^DD",356.22,356.22,5.04,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.04,21,1,0)
The third of 5 possible Chiropractic Certification
"^DD",356.22,356.22,5.04,21,2,0)
Conditions.
"^DD",356.22,356.22,5.04,"DT")
3141231
"^DD",356.22,356.22,5.05,0)
CHIROPRACTIC CONDITION #4^*P356.008'O^IBT(356.008,^5;5^S DIC("S")="I $$CERTCOND^IBTRH5A(5.05)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.05,2)
S Y(0)=Y X ^DD(356.22,5.05,2,9.2) S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.05,2,9.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBT(356.22,D0,5)):^(5),1:""),D0=$P(Y(1),U,6) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"")
"^DD",356.22,356.22,5.05,2.1)
CHIROPRACTIC CONDITION #5:DESCRIPTION
"^DD",356.22,356.22,5.05,3)
Enter a valid Chiropractic Certification Condition. The entered code must not already be present in Chiropractic Conditions #1, #2, #3 or #5.
"^DD",356.22,356.22,5.05,12)
Only allows X12 278 Condition Codes that are valid for Chiropractic Certification.
"^DD",356.22,356.22,5.05,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.05)"
"^DD",356.22,356.22,5.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.05,21,1,0)
The fourth of 5 possible Chiropractic Certification
"^DD",356.22,356.22,5.05,21,2,0)
Conditions.
"^DD",356.22,356.22,5.05,"DT")
3141231
"^DD",356.22,356.22,5.06,0)
CHIROPRACTIC CONDITION #5^*P356.008'O^IBT(356.008,^5;6^S DIC("S")="I $$CERTCOND^IBTRH5A(5.06)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,5.06,2)
S Y(0)=Y X ^DD(356.22,5.06,2,9.2) S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.06,2,9.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBT(356.22,D0,5)):^(5),1:""),D0=$P(Y(1),U,2) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"")
"^DD",356.22,356.22,5.06,2.1)
CHIROPRACTIC CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,5.06,3)
Enter a valid Chiropractic Certification Condition. The entered code must not already be present in Chiropractic Conditions #1, #2, #3 or #4.
"^DD",356.22,356.22,5.06,12)
Only allows X12 278 Condition Codes that are valid for Chiropractic Certification.
"^DD",356.22,356.22,5.06,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.06)"
"^DD",356.22,356.22,5.06,21,0)
^.001^2^2^3150408^^
"^DD",356.22,356.22,5.06,21,1,0)
The fifth of 5 possible Chiropractic Certification
"^DD",356.22,356.22,5.06,21,2,0)
Conditions.
"^DD",356.22,356.22,5.06,"DT")
3150408
"^DD",356.22,356.22,5.07,0)
DME CERT. CONDITION^S^N:No;Y:Yes;^5;7^Q
"^DD",356.22,356.22,5.07,3)
Enter 'Y' if the DME Cert. condition exists, or 'N' otherwise.
"^DD",356.22,356.22,5.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.07,21,1,0)
This field indicates existence of Durable Medical Equipment
"^DD",356.22,356.22,5.07,21,2,0)
(DME) Certification Condition(s).
"^DD",356.22,356.22,5.07,"DT")
3141231
"^DD",356.22,356.22,5.08,0)
DME CONDITION #1^*P356.008'O^IBT(356.008,^5;8^S DIC("S")="I $$CERTCOND^IBTRH5A(5.08)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,5.08,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.08,2.1)
DME CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,5.08,3)
Enter a valid DME Certification Condition. The entered code must not already be present in DME Conditions #2, #3, #4 or #5.
"^DD",356.22,356.22,5.08,12)
Only allows X12 278 Condition Codes that are valid for DME Certification.
"^DD",356.22,356.22,5.08,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.08)"
"^DD",356.22,356.22,5.08,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.08,21,1,0)
The first of 5 possible DME Certification
"^DD",356.22,356.22,5.08,21,2,0)
Conditions.
"^DD",356.22,356.22,5.08,"DT")
3141231
"^DD",356.22,356.22,5.09,0)
DME CONDITION #2^*P356.008'O^IBT(356.008,^5;9^S DIC("S")="I $$CERTCOND^IBTRH5A(5.09)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.09,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.09,2.1)
DME CONDITION #2:DESCRIPTION
"^DD",356.22,356.22,5.09,3)
Enter a valid DME Certification Condition. The entered code must not already be present in DME Conditions #1, #3, #4 or #5.
"^DD",356.22,356.22,5.09,12)
Only allows X12 278 Condition Codes that are valid for DME Certification.
"^DD",356.22,356.22,5.09,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.09)"
"^DD",356.22,356.22,5.09,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.09,21,1,0)
The second of 5 possible DME Certification
"^DD",356.22,356.22,5.09,21,2,0)
Conditions.
"^DD",356.22,356.22,5.09,"DT")
3141231
"^DD",356.22,356.22,5.1,0)
DME CONDITION #3^*P356.008'O^IBT(356.008,^5;10^S DIC("S")="I $$CERTCOND^IBTRH5A(5.1)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.1,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.1,2.1)
DME CONDITION #3:DESCRIPTION
"^DD",356.22,356.22,5.1,3)
Enter a valid DME Certification Condition. The entered code must not already be present in DME Conditions #1, #2, #4 or #5.
"^DD",356.22,356.22,5.1,12)
Only allows X12 278 Condition Codes that are valid for DME Certification.
"^DD",356.22,356.22,5.1,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.1)"
"^DD",356.22,356.22,5.1,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.1,21,1,0)
The third of 5 possible DME Certification
"^DD",356.22,356.22,5.1,21,2,0)
Conditions.
"^DD",356.22,356.22,5.1,"DT")
3141231
"^DD",356.22,356.22,5.11,0)
DME CONDITION #4^*P356.008'O^IBT(356.008,^5;11^S DIC("S")="I $$CERTCOND^IBTRH5A(5.11)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.11,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.11,2.1)
DME CONDITION #4:DESCRIPTION
"^DD",356.22,356.22,5.11,3)
Enter a valid DME Certification Condition. The entered code must not already be present in DME Certification Conditions #1, #2, #3 or #5.
"^DD",356.22,356.22,5.11,12)
Only allows X12 278 Condition Codes that are valid for DME Certification.
"^DD",356.22,356.22,5.11,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.11)"
"^DD",356.22,356.22,5.11,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.11,21,1,0)
The fourth of 5 possible DME Certification
"^DD",356.22,356.22,5.11,21,2,0)
Conditions.
"^DD",356.22,356.22,5.11,"DT")
3141231
"^DD",356.22,356.22,5.12,0)
DME CONDITION #5^*P356.008'O^IBT(356.008,^5;12^S DIC("S")="I $$CERTCOND^IBTRH5A(5.12)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.12,2)
S Y(0)=Y X ^DD(356.22,5.12,2,9.2) S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.12,2,9.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBT(356.22,D0,5)):^(5),1:""),D0=$P(Y(1),U,8) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"")
"^DD",356.22,356.22,5.12,2.1)
DME CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,5.12,3)
Enter a valid DME Certification Condition. The entered code must not already be present in DME Conditions #1, #2, #3 or #4.
"^DD",356.22,356.22,5.12,12)
Only allows X12 278 Condition Codes that are valid for DME Certification.
"^DD",356.22,356.22,5.12,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.12)"
"^DD",356.22,356.22,5.12,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,5.12,21,1,0)
The fifth of 5 possible DME Certification
"^DD",356.22,356.22,5.12,21,2,0)
Conditions.
"^DD",356.22,356.22,5.12,"DT")
3141231
"^DD",356.22,356.22,5.13,0)
OXYGEN CERT. CONDITION^S^N:No;Y:Yes;^5;13^Q
"^DD",356.22,356.22,5.13,3)
Enter 'Y' if Oxygen Cert. condition exists, or 'N' otherwise.
"^DD",356.22,356.22,5.13,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,5.13,21,1,0)
This field indicates existence of Oxygen Therapy
"^DD",356.22,356.22,5.13,21,2,0)
Certification condition(s).
"^DD",356.22,356.22,5.13,"DT")
3150102
"^DD",356.22,356.22,5.14,0)
OXYGEN CONDITION #1^*P356.008'O^IBT(356.008,^5;14^S DIC("S")="I $$CERTCOND^IBTRH5A(5.14)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.14,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.14,2.1)
OXYGEN CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,5.14,3)
Enter a valid Oxygen Certification Condition. The entered code must not already be present in Oxygen Conditions #2, #3, #4 or #5.
"^DD",356.22,356.22,5.14,12)
Only allows X12 278 Condition Codes that are valid for Oxygen Certification.
"^DD",356.22,356.22,5.14,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.14)"
"^DD",356.22,356.22,5.14,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,5.14,21,1,0)
The Certification Condition code that describes the need
"^DD",356.22,356.22,5.14,21,2,0)
for Oxygen Therapy.  You can enter up to five Condition
"^DD",356.22,356.22,5.14,21,3,0)
codes.
"^DD",356.22,356.22,5.14,"DT")
3141231
"^DD",356.22,356.22,5.15,0)
OXYGEN CONDITION #2^*P356.008'O^IBT(356.008,^5;15^S DIC("S")="I $$CERTCOND^IBTRH5A(5.15)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.15,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.15,2.1)
OXYGEN CONDITION #2:DESCRIPTION
"^DD",356.22,356.22,5.15,3)
Enter a valid Oxygen Certification Condition. The entered code must not already be present in Oxygen Conditions #1, #3, #4 or #5.
"^DD",356.22,356.22,5.15,12)
Only allows X12 278 Condition Codes that are valid for Oxygen Certification.
"^DD",356.22,356.22,5.15,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.15)"
"^DD",356.22,356.22,5.15,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,5.15,21,1,0)
The Certification Condition code that describes the
"^DD",356.22,356.22,5.15,21,2,0)
need for Oxygen Therapy.  You can enter up to five
"^DD",356.22,356.22,5.15,21,3,0)
Condition codes.
"^DD",356.22,356.22,5.15,"DT")
3141231
"^DD",356.22,356.22,5.16,0)
OXYGEN CONDITION #3^*P356.008'O^IBT(356.008,^5;16^S DIC("S")="I $$CERTCOND^IBTRH5A(5.16)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.16,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.16,2.1)
OXYGEN CONDITION #3:DESCRIPTION
"^DD",356.22,356.22,5.16,3)
Enter a valid Oxygen Certification Condition. The entered code must not already be present in Oxygen Conditions #1, #2, #4 or #5.
"^DD",356.22,356.22,5.16,12)
Only allows X12 278 Condition Codes that are valid for Oxygen Certification.
"^DD",356.22,356.22,5.16,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.16)"
"^DD",356.22,356.22,5.16,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,5.16,21,1,0)
The Certification Condition code that describes
"^DD",356.22,356.22,5.16,21,2,0)
the need for Oxygen Therapy.  You can enter up to
"^DD",356.22,356.22,5.16,21,3,0)
five Condition codes.
"^DD",356.22,356.22,5.16,"DT")
3141231
"^DD",356.22,356.22,5.17,0)
OXYGEN CONDITION #4^*P356.008'O^IBT(356.008,^5;17^S DIC("S")="I $$CERTCOND^IBTRH5A(5.17)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,5.17,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.17,2.1)
OXYGEN CONDITION #4:DESCRIPTION
"^DD",356.22,356.22,5.17,3)
Enter a valid Oxygen Certification Condition. The entered code must not already be present in Oxygen Conditions #1, #2, #3 or #5.
"^DD",356.22,356.22,5.17,12)
Only allows X12 278 Condition Codes that are valid for Oxygen Certification.
"^DD",356.22,356.22,5.17,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.17)"
"^DD",356.22,356.22,5.17,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,5.17,21,1,0)
The Cerfication Condition code that describes the
"^DD",356.22,356.22,5.17,21,2,0)
need for Oxygen Therapy.  You can enter up to five
"^DD",356.22,356.22,5.17,21,3,0)
Condition codes.
"^DD",356.22,356.22,5.17,"DT")
3141231
"^DD",356.22,356.22,5.18,0)
OXYGEN CONDITION #5^*P356.008'O^IBT(356.008,^5;18^S DIC("S")="I $$CERTCOND^IBTRH5A(5.18)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,5.18,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,5.18,2.1)
OXYGEN CONDITION #5:DESCRIPTION
"^DD",356.22,356.22,5.18,3)
Enter a valid Oxygen Certification Condition. The entered code must not already be present in Oxygen Conditions #1, #2, #3 or #4.
"^DD",356.22,356.22,5.18,12)
Only allows X12 278 Condition Codes that are valid for Oxygen Certification.
"^DD",356.22,356.22,5.18,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(5.18)"
"^DD",356.22,356.22,5.18,21,0)
^.001^3^3^3150218^^^
"^DD",356.22,356.22,5.18,21,1,0)
The Certification Condition code that describes the
"^DD",356.22,356.22,5.18,21,2,0)
need for Oxygen Therapy.  You can enter up to five
"^DD",356.22,356.22,5.18,21,3,0)
Condition codes.
"^DD",356.22,356.22,5.18,"DT")
3150218
"^DD",356.22,356.22,6.01,0)
FUNCT. LIMIT CERT. CONDITION^S^N:No;Y:Yes;^6;1^Q
"^DD",356.22,356.22,6.01,3)
Enter 'Y' if the Funct. Limit Cert. condition exists, or 'N' otherwise.
"^DD",356.22,356.22,6.01,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,6.01,21,1,0)
This field indicates existence of Functional
"^DD",356.22,356.22,6.01,21,2,0)
Limitation Certification Condition(s).
"^DD",356.22,356.22,6.01,"DT")
3141231
"^DD",356.22,356.22,6.02,0)
FUNCT. LIMIT CONDITION #1^*P356.008'O^IBT(356.008,^6;2^S DIC("S")="I $$CERTCOND^IBTRH5A(6.02)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.02,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.02,2.1)
FUNCT. LIMIT CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,6.02,3)
Enter a valid Funct. Limit Certification Condition. The entered code must not already be present in Funct Limit Conditions #2, #3, #4 or #5.
"^DD",356.22,356.22,6.02,12)
Only allows X12 278 Condition Codes that are valid for Functional Limits Certification.
"^DD",356.22,356.22,6.02,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.02)"
"^DD",356.22,356.22,6.02,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.02,21,1,0)
The Certification Condition code that describes
"^DD",356.22,356.22,6.02,21,2,0)
the patient's Functional Limitations.  You can
"^DD",356.22,356.22,6.02,21,3,0)
enter up to five Condition Codes.
"^DD",356.22,356.22,6.02,"DT")
3141231
"^DD",356.22,356.22,6.03,0)
FUNCT. LIMIT CONDITION #2^*P356.008'O^IBT(356.008,^6;3^S DIC("S")="I $$CERTCOND^IBTRH5A(6.03)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.03,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.03,2.1)
FUNCT. LIMIT CONDITION #2:DESCRIPTION
"^DD",356.22,356.22,6.03,3)
Enter a valid Funct. Limit Certification Condition. The entered code must not already be present in Funct. Limit Conditions #1, #3, #4 or #5.
"^DD",356.22,356.22,6.03,12)
Only allows X12 278 Condition Codes that are valid for Functional Limits Certification.
"^DD",356.22,356.22,6.03,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.03)"
"^DD",356.22,356.22,6.03,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.03,21,1,0)
The Certification Condition code that describes
"^DD",356.22,356.22,6.03,21,2,0)
the patient's Functional Limitations.  You can
"^DD",356.22,356.22,6.03,21,3,0)
enter up to five Condition Codes.
"^DD",356.22,356.22,6.03,"DT")
3141231
"^DD",356.22,356.22,6.04,0)
FUNCT. LIMIT CONDITION #3^*P356.008'O^IBT(356.008,^6;4^S DIC("S")="I $$CERTCOND^IBTRH5A(6.04)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.04,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.04,2.1)
FUNCT. LIMIT CONDITION #3:DESCRIPTION
"^DD",356.22,356.22,6.04,3)
Enter a valid Funct. Limit Certification Condition. The entered code must not already be present in Funct. Limit Conditions #1, #2, #4 or #5.
"^DD",356.22,356.22,6.04,12)
Only allows X12 278 Condition Codes that are valid for Functional Limits Certification.
"^DD",356.22,356.22,6.04,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.04)"
"^DD",356.22,356.22,6.04,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.04,21,1,0)
The Certification Condition code that describes
"^DD",356.22,356.22,6.04,21,2,0)
the patient's Functional Limitations.  You can
"^DD",356.22,356.22,6.04,21,3,0)
enter up to five Condition Codes.
"^DD",356.22,356.22,6.04,"DT")
3141231
"^DD",356.22,356.22,6.05,0)
FUNCT. LIMIT CONDITION #4^*P356.008'O^IBT(356.008,^6;5^S DIC("S")="I $$CERTCOND^IBTRH5A(6.05)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.05,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.05,2.1)
FUNCT. LIMIT CONDITION #4:DESCRIPTION
"^DD",356.22,356.22,6.05,3)
Enter a valid Funct. Limit Certification Condition. The entered code must not already be present in Funct. Limit Conditions #1, #2, #3 or #5.
"^DD",356.22,356.22,6.05,12)
Only allows X12 278 Condition Codes that are valid for Functional Limits Certification.
"^DD",356.22,356.22,6.05,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.05)"
"^DD",356.22,356.22,6.05,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.05,21,1,0)
The Certification Condition code that describes
"^DD",356.22,356.22,6.05,21,2,0)
the patient's Functional Limitations.  You can
"^DD",356.22,356.22,6.05,21,3,0)
enter up to five Condition Codes.
"^DD",356.22,356.22,6.05,"DT")
3141231
"^DD",356.22,356.22,6.06,0)
FUNCT. LIMIT CONDITION #5^*P356.008'O^IBT(356.008,^6;6^S DIC("S")="I $$CERTCOND^IBTRH5A(6.06)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.06,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.06,2.1)
FUNCT. LIMIT CONDITION #5:DESCRIPTION
"^DD",356.22,356.22,6.06,3)
Enter a valid Funct. Limit Certification Condition. The entered code must not already be present in Funct. Limit Conditions #1, #2, #3 or #4.
"^DD",356.22,356.22,6.06,12)
Only allows X12 278 Condition Codes that are valid for Functional Limits Certification.
"^DD",356.22,356.22,6.06,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.06)"
"^DD",356.22,356.22,6.06,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.06,21,1,0)
The Certification Condition code that describes
"^DD",356.22,356.22,6.06,21,2,0)
the patient's Functional Limitations.  You can
"^DD",356.22,356.22,6.06,21,3,0)
enter up to five Condition Codes.
"^DD",356.22,356.22,6.06,"DT")
3141231
"^DD",356.22,356.22,6.07,0)
ACTIVITIES CERT. CONDITION^S^N:No;Y:Yes;^6;7^Q
"^DD",356.22,356.22,6.07,3)
Enter 'Y' if the Activities Cert. condition exists, or 'N' otherwise.
"^DD",356.22,356.22,6.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,6.07,21,1,0)
This field indicates existence of Activities
"^DD",356.22,356.22,6.07,21,2,0)
permitted certification condition(s).
"^DD",356.22,356.22,6.07,"DT")
3141231
"^DD",356.22,356.22,6.08,0)
ACTIVITIES CONDITION #1^*P356.008'O^IBT(356.008,^6;8^S DIC("S")="I $$CERTCOND^IBTRH5A(6.08)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.08,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.08,2.1)
ACTIVITIES CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,6.08,3)
Enter a valid Activities Certifcation Condition. The entered code must not already be present in Activities Condditons #2, #3, #4 or #5.
"^DD",356.22,356.22,6.08,12)
Only allows X12 278 Condition Codes that are valid for Activities Certification.
"^DD",356.22,356.22,6.08,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.08)"
"^DD",356.22,356.22,6.08,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.08,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.08,21,2,0)
the defined patient activities permitted.  You
"^DD",356.22,356.22,6.08,21,3,0)
can enter up to five Condition Codes.
"^DD",356.22,356.22,6.08,"DT")
3141231
"^DD",356.22,356.22,6.09,0)
ACTIVITIES CONDITION #2^*P356.008'O^IBT(356.008,^6;9^S DIC("S")="I $$CERTCOND^IBTRH5A(6.09)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.09,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.09,2.1)
ACTIVITIES CONDITION #2:DESCRIPTION
"^DD",356.22,356.22,6.09,3)
Enter a valid Activities Certification Condition. The entered code must not already be present in Activities Conditions #1, #3, #4 or #5.
"^DD",356.22,356.22,6.09,12)
Only allows X12 278 Condition Codes that are valid for Activities Certification.
"^DD",356.22,356.22,6.09,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.09)"
"^DD",356.22,356.22,6.09,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.09,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.09,21,2,0)
the defined patient activities permitted.  You
"^DD",356.22,356.22,6.09,21,3,0)
can add up to five Condition Codes.
"^DD",356.22,356.22,6.09,"DT")
3141231
"^DD",356.22,356.22,6.1,0)
ACTIVITIES CONDITION #3^*P356.008'O^IBT(356.008,^6;10^S DIC("S")="I $$CERTCOND^IBTRH5A(6.1)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.1,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.1,2.1)
ACTIVITIES CONDITION #3:DESCRIPTION
"^DD",356.22,356.22,6.1,3)
Enter a valid Activities Certifiction Condition. The entered code must not already be present in Activities Conditions #1, #2, #4 or #5.
"^DD",356.22,356.22,6.1,12)
Only allows X12 278 Condition Codes that are valid for Activities Certification.
"^DD",356.22,356.22,6.1,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.1)"
"^DD",356.22,356.22,6.1,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.1,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.1,21,2,0)
the defined patient activities permitted.  You
"^DD",356.22,356.22,6.1,21,3,0)
can add up to five Condition Codes.
"^DD",356.22,356.22,6.1,"DT")
3141231
"^DD",356.22,356.22,6.11,0)
ACTIVITIES CONDITION #4^*P356.008'O^IBT(356.008,^6;11^S DIC("S")="I $$CERTCOND^IBTRH5A(6.11)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.11,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.11,2.1)
ACTIVITIES CONDITION #4:DESCRIPTION
"^DD",356.22,356.22,6.11,3)
Enter a valid Activities Certification Condition. The entered code must not already be present in Activities Conditions #1, #2, #3 or #5.
"^DD",356.22,356.22,6.11,12)
Only allows X12 278 Condition Codes that are valid for Activities Certification.
"^DD",356.22,356.22,6.11,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.11)"
"^DD",356.22,356.22,6.11,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.11,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.11,21,2,0)
the defined patient activities permitted.  You
"^DD",356.22,356.22,6.11,21,3,0)
can add up to five Condition Codes.
"^DD",356.22,356.22,6.11,"DT")
3141231
"^DD",356.22,356.22,6.12,0)
ACTIVITIES CONDITION #5^*P356.008'O^IBT(356.008,^6;12^S DIC("S")="I $$CERTCOND^IBTRH5A(6.12)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.12,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.12,2.1)
ACTIVITIES CONDITION #5:DESCRIPTION
"^DD",356.22,356.22,6.12,3)
Enter a valid Activities Certification Condition. The entered code must not already be present in Activities Conditions #1, #2, #3 or #4.
"^DD",356.22,356.22,6.12,12)
Only allows X12 278 Condition Codes that are valid for Activities Certification.
"^DD",356.22,356.22,6.12,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.12)"
"^DD",356.22,356.22,6.12,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.12,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.12,21,2,0)
the defined patient activities permitted.  You
"^DD",356.22,356.22,6.12,21,3,0)
can add up to five Condition Codes.
"^DD",356.22,356.22,6.12,"DT")
3141231
"^DD",356.22,356.22,6.13,0)
MENTAL STATUS CERT. CONDITION^S^N:No;Y:Yes;^6;13^Q
"^DD",356.22,356.22,6.13,3)
Enter 'Y' if the Mental Status Cert. condition exists, or 'N' otherwise.
"^DD",356.22,356.22,6.13,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,6.13,21,1,0)
This field indicates existence of Mental Status
"^DD",356.22,356.22,6.13,21,2,0)
Certification Condition(s).
"^DD",356.22,356.22,6.13,"DT")
3141231
"^DD",356.22,356.22,6.14,0)
MENTAL STATUS CONDITION #1^*P356.008'O^IBT(356.008,^6;14^S DIC("S")="I $$CERTCOND^IBTRH5A(6.14)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.14,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.14,2.1)
MENTAL STATUS CONDITION #1:DESCRIPTION
"^DD",356.22,356.22,6.14,3)
Enter a valid Mental Status Certification Condition. The entered code must not already be present in Mental Status Conditions #2, #3, #4 or #5.
"^DD",356.22,356.22,6.14,12)
Only allows X12 278 Condition Codes that are valid for Mental Status Certification.
"^DD",356.22,356.22,6.14,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.14)"
"^DD",356.22,356.22,6.14,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.14,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.14,21,2,0)
the patient's mental status.  You can add up to
"^DD",356.22,356.22,6.14,21,3,0)
five Condition Codes.
"^DD",356.22,356.22,6.14,"DT")
3141231
"^DD",356.22,356.22,6.15,0)
MENTAL STATUS CONDITION #2^*P356.008'O^IBT(356.008,^6;15^S DIC("S")="I $$CERTCOND^IBTRH5A(6.15)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.15,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.15,2.1)
MENTAL STATUS CONDITION #2:DESCRIPTION
"^DD",356.22,356.22,6.15,3)
Enter a valid Mental Status Certification Condition. The entered code must not already be present in Mental Status Conditions #1, #3, #4 or #5.
"^DD",356.22,356.22,6.15,12)
Only allows X12 278 Condition Codes that are valid for Mental Status Certification.
"^DD",356.22,356.22,6.15,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.15)"
"^DD",356.22,356.22,6.15,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.15,21,1,0)
The Certificaton Condition Code that represents
"^DD",356.22,356.22,6.15,21,2,0)
the patient's mental status.  You can add up to
"^DD",356.22,356.22,6.15,21,3,0)
five Condition Codes.
"^DD",356.22,356.22,6.15,"DT")
3141231
"^DD",356.22,356.22,6.16,0)
MENTAL STATUS CONDITION #3^*P356.008'O^IBT(356.008,^6;16^S DIC("S")="I $$CERTCOND^IBTRH5A(6.16)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.16,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.16,2.1)
MENTAL STATUS CONDITION #3:DESCRIPTION
"^DD",356.22,356.22,6.16,3)
Enter a valid Mental Status Certification Condition. The entered code must not already be present in Mental Status Conditions #1, #2, #4 or #5.
"^DD",356.22,356.22,6.16,12)
Only allows X12 278 Condition Codes that are valid for Mental Status Certification.
"^DD",356.22,356.22,6.16,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.16)"
"^DD",356.22,356.22,6.16,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.16,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.16,21,2,0)
the patient's mental status.  You can add up to
"^DD",356.22,356.22,6.16,21,3,0)
five Condition Codes.
"^DD",356.22,356.22,6.16,"DT")
3141231
"^DD",356.22,356.22,6.17,0)
MENTAL STATUS CONDITION #4^*P356.008'O^IBT(356.008,^6;17^S DIC("S")="I $$CERTCOND^IBTRH5A(6.17)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.17,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.17,2.1)
MENTAL STATUS CONDITION #4:DESCRIPTION
"^DD",356.22,356.22,6.17,3)
Enter a valid Mental Status Certification Condition. The entered code must not already be present in Mental Status Conditions #1, #2, #3 or #5.
"^DD",356.22,356.22,6.17,12)
Only allows X12 278 Condition Codes that are valid for Mental Status Certification.
"^DD",356.22,356.22,6.17,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.17)"
"^DD",356.22,356.22,6.17,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.17,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.17,21,2,0)
the patient's mental status.  You can add up to
"^DD",356.22,356.22,6.17,21,3,0)
five Condition Codes.
"^DD",356.22,356.22,6.17,"DT")
3141231
"^DD",356.22,356.22,6.18,0)
MENTAL STATUS CONDITION #5^*P356.008'O^IBT(356.008,^6;18^S DIC("S")="I $$CERTCOND^IBTRH5A(6.18)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,6.18,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.008,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.008,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,6.18,2.1)
MENTAL STATUS CONDITION #5:DESCRIPTION
"^DD",356.22,356.22,6.18,3)
Enter a valid Mental Status Certification Condition. The entered code must not already be present in Mental Status Conditions #1, #2, #3 or #4.
"^DD",356.22,356.22,6.18,12)
Only allows X12 278 Condition Codes that are valid for Mental Status Certification.
"^DD",356.22,356.22,6.18,12.1)
S DIC("S")="I $$CERTCOND^IBTRH5A(6.18)"
"^DD",356.22,356.22,6.18,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,6.18,21,1,0)
The Certification Condition Code that represents
"^DD",356.22,356.22,6.18,21,2,0)
the patient's mental status.  You can add up to
"^DD",356.22,356.22,6.18,21,3,0)
five Condition Codes.
"^DD",356.22,356.22,6.18,"DT")
3141231
"^DD",356.22,356.22,7.01,0)
ADMISSION TYPE^S^1:Emergency;2:Urgent;3:Elective;4:Newborn;5:Trauma;9:Information not available;^7;1^Q
"^DD",356.22,356.22,7.01,3)
Enter an optional Admission Type.
"^DD",356.22,356.22,7.01,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,7.01,21,1,0)
The optional Admission Type that describes the
"^DD",356.22,356.22,7.01,21,2,0)
type of inpatient admission.
"^DD",356.22,356.22,7.01,"DT")
3141231
"^DD",356.22,356.22,7.02,0)
ADMISSION SOURCE^P356.009'O^IBT(356.009,^7;2^Q
"^DD",356.22,356.22,7.02,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.009,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.009,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,7.02,2.1)
ADMISSION SOURCE:DESCRIPTION
"^DD",356.22,356.22,7.02,3)
Enter an optional Admission Source.
"^DD",356.22,356.22,7.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,7.02,21,1,0)
The an optional Admission Source that
"^DD",356.22,356.22,7.02,21,2,0)
decribes the source of the inpatient admission.
"^DD",356.22,356.22,7.02,"DT")
3141231
"^DD",356.22,356.22,7.03,0)
PATIENT STATUS^P356.01'O^IBT(356.01,^7;3^Q
"^DD",356.22,356.22,7.03,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.01,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.01,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,7.03,2.1)
PATIENT STATUS:DESCRIPTION
"^DD",356.22,356.22,7.03,3)
Enter an optional Patient Status.
"^DD",356.22,356.22,7.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,7.03,21,1,0)
The optional Patient Status which describes
"^DD",356.22,356.22,7.03,21,2,0)
the current status of the patient.
"^DD",356.22,356.22,7.03,"DT")
3141231
"^DD",356.22,356.22,7.04,0)
NURSING HOME STATUS^P356.011'^IBT(356.011,^7;4^Q
"^DD",356.22,356.22,7.04,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.011,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.011,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,7.04,2.1)
NURSING HOME STATUS:DESCRIPTION
"^DD",356.22,356.22,7.04,3)
Enter a REQUIRED Nursing Home (SNF) Residential status.
"^DD",356.22,356.22,7.04,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,7.04,21,1,0)
The Nursing Home (SNF) Residential status is required
"^DD",356.22,356.22,7.04,21,2,0)
when the patient is currently in or eligible for a 
"^DD",356.22,356.22,7.04,21,3,0)
nursing home.
"^DD",356.22,356.22,7.04,"DT")
3141231
"^DD",356.22,356.22,7.05,0)
TREATMENT SERIES NUMBER^NJ9,0^^7;5^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,7.05,3)
Type a number between 0 and 999999999, 0 decimal digits.
"^DD",356.22,356.22,7.05,21,0)
^^3^3^3141121^
"^DD",356.22,356.22,7.05,21,1,0)
Enter a 1-9 digit whole number.  This is REQUIRED when
"^DD",356.22,356.22,7.05,21,2,0)
requesting certification for a specific number in a series
"^DD",356.22,356.22,7.05,21,3,0)
of treatments.
"^DD",356.22,356.22,7.05,"DT")
3141121
"^DD",356.22,356.22,7.06,0)
TREATMENT COUNT^NJ15,0^^7;6^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,7.06,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,7.06,21,0)
^^3^3^3141121^
"^DD",356.22,356.22,7.06,21,1,0)
Enter a 1-15 digit number.  This is REQUIRED when
"^DD",356.22,356.22,7.06,21,2,0)
requesting certification for a specific number in a series
"^DD",356.22,356.22,7.06,21,3,0)
of treatments.
"^DD",356.22,356.22,7.06,"DT")
3141121
"^DD",356.22,356.22,7.07,0)
SUBLUXATION LEVEL CODE #1^P356.012'^IBT(356.012,^7;7^Q
"^DD",356.22,356.22,7.07,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.012,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.012,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,7.07,2.1)
SUBLUXATION LEVEL CODE #1:DESCRIPTION
"^DD",356.22,356.22,7.07,3)
Enter a valid Subluxation Level Code.
"^DD",356.22,356.22,7.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,7.07,21,1,0)
The Subluxation Level code is REQUIRED if
"^DD",356.22,356.22,7.07,21,2,0)
the treatment includes subluxation.
"^DD",356.22,356.22,7.07,"DT")
3150106
"^DD",356.22,356.22,7.08,0)
SUBLUXATION LEVEL CODE #2^P356.012'^IBT(356.012,^7;8^Q
"^DD",356.22,356.22,7.08,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.012,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.012,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,7.08,2.1)
SUBLUXATION LEVEL CODE #2:DESCRIPTION
"^DD",356.22,356.22,7.08,3)
Enter a valid Subluxation Level Code.
"^DD",356.22,356.22,7.08,21,0)
^^2^2^3150106^
"^DD",356.22,356.22,7.08,21,1,0)
The Subluxation Level code is REQUIRED if
"^DD",356.22,356.22,7.08,21,2,0)
treatment includes subluxation.
"^DD",356.22,356.22,7.08,"DT")
3150106
"^DD",356.22,356.22,7.09,0)
PATIENT CONDITION CODE^S^A:Acute Condition;C:Chronic Condition;D:Non-acute Condition;E:Non-Life Threatening;F:Routine;G:Symptomatic;M:Acute Manifestation of a Chronic Condition;^7;9^Q
"^DD",356.22,356.22,7.09,3)
Enter a valid Patient Condition code.
"^DD",356.22,356.22,7.09,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,7.09,21,1,0)
The REQUIRED code that describes the current
"^DD",356.22,356.22,7.09,21,2,0)
condition of the patient.
"^DD",356.22,356.22,7.09,"DT")
3150102
"^DD",356.22,356.22,7.1,0)
COMPLICATION INDICATOR^S^N:No;Y:Yes;^7;10^Q
"^DD",356.22,356.22,7.1,3)
Enter Y to indicate the existence of complications or N otherwise.
"^DD",356.22,356.22,7.1,21,0)
^^1^1^3150106^
"^DD",356.22,356.22,7.1,21,1,0)
Determines whether or not complications indicators exist.
"^DD",356.22,356.22,7.1,"DT")
3150106
"^DD",356.22,356.22,7.11,0)
PAT. COND. DESCRIPTION LINE 1^F^^7;11^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.22,7.11,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.22,7.11,21,0)
^^2^2^3141121^
"^DD",356.22,356.22,7.11,21,1,0)
Enter a 1-80 character, free text description of the
"^DD",356.22,356.22,7.11,21,2,0)
patient's condition.
"^DD",356.22,356.22,7.11,"DT")
3141121
"^DD",356.22,356.22,7.12,0)
PAT. COND. DESCRIPTION LINE 2^F^^7;12^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.22,7.12,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.22,7.12,21,0)
^^2^2^3141121^
"^DD",356.22,356.22,7.12,21,1,0)
Enter a 1-80 character, free text description of the
"^DD",356.22,356.22,7.12,21,2,0)
patient's condition.
"^DD",356.22,356.22,7.12,"DT")
3141121
"^DD",356.22,356.22,7.13,0)
X-RAY AVAILABLE?^S^N:No;Y:Yes;^7;13^Q
"^DD",356.22,356.22,7.13,3)
Enter Y to indicate that there are related X-Rays available or N otherwise..
"^DD",356.22,356.22,7.13,21,0)
^^1^1^3150106^
"^DD",356.22,356.22,7.13,21,1,0)
Determines wheter or not related X-Rays are available.
"^DD",356.22,356.22,7.13,"DT")
3150106
"^DD",356.22,356.22,8.01,0)
OXYGEN EQUIPMENT TYPE #1^*P356.013'O^IBT(356.013,^8;1^S DIC("S")="I $$OXYTTYPE^IBTRH5B(8.01)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,8.01,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.013,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.013,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,8.01,2.1)
OXYGEN EQUIPMENT TYPE #1:DESCRIPTION
"^DD",356.22,356.22,8.01,3)
Enter a valid Oxygen Equipment type. The entered code must not already be present in Oxygen Equipment Types #2 or #3.
"^DD",356.22,356.22,8.01,12)
Only allows Oxygen Equipment Types that are not already present in in Oxygen Equipment Types #2 or #3.
"^DD",356.22,356.22,8.01,12.1)
S DIC("S")="I $$OXYTTYPE^IBTRH5B(8.01)"
"^DD",356.22,356.22,8.01,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,8.01,21,1,0)
Select the type of Oxygen Equipment.  You can
"^DD",356.22,356.22,8.01,21,2,0)
enter up to three Oxygen Equipment Types.
"^DD",356.22,356.22,8.01,"DT")
3141231
"^DD",356.22,356.22,8.02,0)
OXYGEN EQUIPMENT TYPE #2^*P356.013'O^IBT(356.013,^8;2^S DIC("S")="I $$OXYTTYPE^IBTRH5B(8.02)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,8.02,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.013,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.013,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,8.02,2.1)
OXYGEN EQUIPMENT TYPE #2:DESCRIPTION
"^DD",356.22,356.22,8.02,3)
Enter a valid Oxygen Equipment Type. The entered code must not already be present in Oxygen Equipment Types #1 or #3.
"^DD",356.22,356.22,8.02,12)
Only allows Oxygen Equipment Types that are not already present in in Oxygen Equipment Types #1 or #3.
"^DD",356.22,356.22,8.02,12.1)
S DIC("S")="I $$OXYTTYPE^IBTRH5B(8.02)"
"^DD",356.22,356.22,8.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,8.02,21,1,0)
Select the type of Oxygen Equipment.  You can
"^DD",356.22,356.22,8.02,21,2,0)
enter up to three Oxygen Equipment Types.
"^DD",356.22,356.22,8.02,"DT")
3141231
"^DD",356.22,356.22,8.03,0)
OXYGEN EQUIPMENT TYPE #3^*P356.013'O^IBT(356.013,^8;3^S DIC("S")="I $$OXYTTYPE^IBTRH5B(8.03)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,8.03,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.013,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.013,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,8.03,2.1)
OXYGEN EQUIPMENT TYPE #3:DESCRIPTION
"^DD",356.22,356.22,8.03,3)
Enter a valid Oxygen Equipment Type. The entered code must not already be present in Oxygen Equipment Types #1 or #2.
"^DD",356.22,356.22,8.03,12)
Only allows Oxygen Equipment Types that are not already present in in Oxygen Equipment Types #1 or #2.
"^DD",356.22,356.22,8.03,12.1)
S DIC("S")="I $$OXYTTYPE^IBTRH5B(8.03)"
"^DD",356.22,356.22,8.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,8.03,21,1,0)
Select the type of Oxygen Equipment.  You can
"^DD",356.22,356.22,8.03,21,2,0)
enter up to three Oxygen Equipment Types.
"^DD",356.22,356.22,8.03,"DT")
3141231
"^DD",356.22,356.22,8.04,0)
OXYGEN EQUIPMENT REASON^F^^8;4^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.22,8.04,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.22,8.04,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,8.04,21,1,0)
Enter an optional 1-80 character, free text
"^DD",356.22,356.22,8.04,21,2,0)
description of why the oxygen equipment is
"^DD",356.22,356.22,8.04,21,3,0)
needed.
"^DD",356.22,356.22,8.04,"DT")
3141231
"^DD",356.22,356.22,8.05,0)
OXYGEN FLOW RATE^NJ18,2^^8;5^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."3.N) X
"^DD",356.22,356.22,8.05,3)
Type a number between 0 and 999999999999999, 2 decimal digits.
"^DD",356.22,356.22,8.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,8.05,21,1,0)
Enter a numeric value representing the Oxygen Flow rate in
"^DD",356.22,356.22,8.05,21,2,0)
liters/minute.
"^DD",356.22,356.22,8.05,"DT")
3141231
"^DD",356.22,356.22,8.06,0)
DAILY OXYGEN USE COUNT^NJ15,0^^8;6^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,8.06,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,8.06,21,0)
^^2^2^3141124^
"^DD",356.22,356.22,8.06,21,1,0)
Enter a numeric value representing the number of times per
"^DD",356.22,356.22,8.06,21,2,0)
day that the patient must use oxygen.
"^DD",356.22,356.22,8.06,"DT")
3141124
"^DD",356.22,356.22,8.07,0)
OXYGEN USE PERIOD HOUR COUNT^NJ15,0^^8;7^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,8.07,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,8.07,21,0)
^^2^2^3141124^
"^DD",356.22,356.22,8.07,21,1,0)
Enter a numeric value representing the number of hours per
"^DD",356.22,356.22,8.07,21,2,0)
period of oxygen use.
"^DD",356.22,356.22,8.07,"DT")
3141124
"^DD",356.22,356.22,8.08,0)
RESPIRATORY THERAPIST ORDER^F^^8;8^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.22,8.08,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.22,8.08,21,0)
^^2^2^3141124^
"^DD",356.22,356.22,8.08,21,1,0)
Enter a 1-80 character, free text description of special
"^DD",356.22,356.22,8.08,21,2,0)
orders for the Respiratory Therapist.
"^DD",356.22,356.22,8.08,"DT")
3141124
"^DD",356.22,356.22,9.01,0)
ARTERIAL BLOOD GAS QUANTITY^NJ15,0^^9;1^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,9.01,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,9.01,21,0)
^^2^2^3141124^
"^DD",356.22,356.22,9.01,21,1,0)
Enter a numerical value representing Arterial Blood Gas
"^DD",356.22,356.22,9.01,21,2,0)
Quantity.
"^DD",356.22,356.22,9.01,"DT")
3141124
"^DD",356.22,356.22,9.02,0)
OXYGEN SATURATION QUANTITY^NJ15,0^^9;2^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,9.02,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,9.02,21,0)
^^2^2^3141124^
"^DD",356.22,356.22,9.02,21,1,0)
Enter a numerical value representing Oxygen Saturation
"^DD",356.22,356.22,9.02,21,2,0)
Quantity.
"^DD",356.22,356.22,9.02,"DT")
3141124
"^DD",356.22,356.22,9.03,0)
OXYGEN TEST CONDITION^P356.014'O^IBT(356.014,^9;3^Q
"^DD",356.22,356.22,9.03,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.014,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.014,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,9.03,2.1)
OXYGEN TEST CONDITION:DESCRIPTION
"^DD",356.22,356.22,9.03,3)
Enter a valid Oxygen Test Condition.
"^DD",356.22,356.22,9.03,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,9.03,21,1,0)
The conditions under which the patient was tested.
"^DD",356.22,356.22,9.03,"DT")
3141231
"^DD",356.22,356.22,9.04,0)
OXYGEN TEST FINDINGS #1^*P356.015'^IBT(356.015,^9;4^S DIC("S")="I $$OXYTFIND^IBTRH5B(9.04)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,9.04,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.015,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.015,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,9.04,2.1)
OXYGEN TEST FINDINGS #1:DESCRIPTION
"^DD",356.22,356.22,9.04,3)
Enter a valid Oxygen Test Findings. The entered code must not already be present in Oxygen Test Findings #2 or #3.
"^DD",356.22,356.22,9.04,12)
Only allows Oxygen Test Finding Codes that are not already present in Oxygen Test Findings #2 or #3.
"^DD",356.22,356.22,9.04,12.1)
S DIC("S")="I $$OXYTFIND^IBTRH5B(9.04)"
"^DD",356.22,356.22,9.04,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,9.04,21,1,0)
The patient's Oxygen Test Findings.  You can
"^DD",356.22,356.22,9.04,21,2,0)
enter up to three findings.
"^DD",356.22,356.22,9.04,"DT")
3150122
"^DD",356.22,356.22,9.05,0)
OXYGEN TEST FINDINGS #2^*P356.015'^IBT(356.015,^9;5^S DIC("S")="I $$OXYTFIND^IBTRH5B(9.05)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,9.05,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.015,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.015,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,9.05,2.1)
OXYGEN TEST FINDINGS #2:DESCRIPTION
"^DD",356.22,356.22,9.05,3)
Enter a valid Oxygen Test Findings. The entered code must not already be present in Oxygen Test Findings #1 or #3.
"^DD",356.22,356.22,9.05,12)
Only allows Oxygen Test Finding Codes that are not already present in Oxygen Test Findings #1 or #3.
"^DD",356.22,356.22,9.05,12.1)
S DIC("S")="I $$OXYTFIND^IBTRH5B(9.05)"
"^DD",356.22,356.22,9.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,9.05,21,1,0)
The patient's Oxygen Test Findings.  You can
"^DD",356.22,356.22,9.05,21,2,0)
enter up to three findings.
"^DD",356.22,356.22,9.05,"DT")
3150112
"^DD",356.22,356.22,9.06,0)
OXYGEN TEST FINDINGS #3^*P356.015'^IBT(356.015,^9;6^S DIC("S")="I $$OXYTFIND^IBTRH5B(9.06)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22,9.06,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.015,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.015,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,9.06,2.1)
OXYGEN TEST FINDINGS #3:DESCRIPTION
"^DD",356.22,356.22,9.06,3)
Enter a valid Oxygen Test Findings. The entered code must not already be present in Oxygen Test Findings #1 or #2.
"^DD",356.22,356.22,9.06,12)
Only allows Oxygen Test Finding Codes that are not already present in Oxygen Test Findings #1 or #2.
"^DD",356.22,356.22,9.06,12.1)
S DIC("S")="I $$OXYTFIND^IBTRH5B(9.06)"
"^DD",356.22,356.22,9.06,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,9.06,21,1,0)
The patient's Oxygen Test Findings.  You can
"^DD",356.22,356.22,9.06,21,2,0)
enter up to three findings.
"^DD",356.22,356.22,9.06,"DT")
3150122
"^DD",356.22,356.22,9.07,0)
PORTABLE OXYGEN SYSTEM FLOW^NJ15,0^^9;7^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,9.07,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,9.07,21,0)
^^2^2^3150106^
"^DD",356.22,356.22,9.07,21,1,0)
Enter a numeric value representing the Flow Rate for
"^DD",356.22,356.22,9.07,21,2,0)
portable oxygen in liter/minute.
"^DD",356.22,356.22,9.07,"DT")
3150106
"^DD",356.22,356.22,9.08,0)
OXYGEN DELIVERY SYSTEM^P356.016'O^IBT(356.016,^9;8^Q
"^DD",356.22,356.22,9.08,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.016,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.016,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,9.08,2.1)
OXYGEN DELIVERY SYSTEM:DESCRIPTION
"^DD",356.22,356.22,9.08,3)
Enter a valid Oxygen Delivery System Code.
"^DD",356.22,356.22,9.08,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,9.08,21,1,0)
The prescribed form of Oxygen Delivery.
"^DD",356.22,356.22,9.08,"DT")
3141231
"^DD",356.22,356.22,10.01,0)
HOME HEALTH START DATE^D^^10;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,10.01,3)
Enter a valid date.
"^DD",356.22,356.22,10.01,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.01,21,1,0)
The date when the home health, private duty or
"^DD",356.22,356.22,10.01,21,2,0)
nursing agency services started.
"^DD",356.22,356.22,10.01,"DT")
3150102
"^DD",356.22,356.22,10.02,0)
HOME HEALTH CERT. START^DX^^10;2^N %DT S %DT="EX" S:+$P($G(^IBT(356.22,DA,10)),U,3) %DT(0)=-$P($G(^IBT(356.22,DA,10)),U,3) D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,10.02,1,0)
^.1
"^DD",356.22,356.22,10.02,1,1,0)
^^TRIGGER^356.22^10.03
"^DD",356.22,356.22,10.02,1,1,1)
Q
"^DD",356.22,356.22,10.02,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBT(356.22,D0,10)):^(10),1:"") S X=$P(Y(1),U,2)="" I X S X=DIV S Y(1)=$S($D(^IBT(356.22,D0,10)):^(10),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(356.22,10.02,1,1,2.4)
"^DD",356.22,356.22,10.02,1,1,2.4)
S DIH=$G(^IBT(356.22,DIV(0),10)),DIV=X S $P(^(10),U,3)=DIV,DIH=356.22,DIG=10.03 D ^DICR
"^DD",356.22,356.22,10.02,1,1,"CREATE VALUE")
NO EFFECT
"^DD",356.22,356.22,10.02,1,1,"DELETE CONDITION")
HOME HEALTH CERT. START=""
"^DD",356.22,356.22,10.02,1,1,"DELETE VALUE")
@
"^DD",356.22,356.22,10.02,1,1,"FIELD")
#10.03
"^DD",356.22,356.22,10.02,3)
Enter a valid date.
"^DD",356.22,356.22,10.02,21,0)
^^1^1^3150102^
"^DD",356.22,356.22,10.02,21,1,0)
The date when home health care will start.
"^DD",356.22,356.22,10.02,"DT")
3150102
"^DD",356.22,356.22,10.03,0)
HOME HEALTH CERT. END^DX^^10;3^N %DT S %DT="EX",%DT(0)=$G(DG("10;2")) S:%DT(0)="" %DT(0)=$P($G(^IBT(356.22,DA,10)),U,2) D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,10.03,3)
Enter a valid date.
"^DD",356.22,356.22,10.03,5,1,0)
356.22^10.02^1
"^DD",356.22,356.22,10.03,21,0)
^^1^1^3150102^
"^DD",356.22,356.22,10.03,21,1,0)
The Date when home health care will end.
"^DD",356.22,356.22,10.03,"DT")
3150102
"^DD",356.22,356.22,10.04,0)
COVERED BY MEDICARE?^S^W:Not applicable;Y:Yes;N:No;^10;4^Q
"^DD",356.22,356.22,10.04,3)
Enter a valid Medicare Coverage Indicator Code.
"^DD",356.22,356.22,10.04,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.04,21,1,0)
The Medicare coverage indicator for the
"^DD",356.22,356.22,10.04,21,2,0)
278 inquiry.
"^DD",356.22,356.22,10.04,"DT")
3150102
"^DD",356.22,356.22,10.05,0)
SURGERY DATE^D^^10;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,10.05,3)
Enter a valid date.
"^DD",356.22,356.22,10.05,21,0)
^^3^3^3150102^
"^DD",356.22,356.22,10.05,21,1,0)
The date on which surgery was performed.  This
"^DD",356.22,356.22,10.05,21,2,0)
date should be entered if there was a surgery related to
"^DD",356.22,356.22,10.05,21,3,0)
this home health care.
"^DD",356.22,356.22,10.05,"DT")
3150102
"^DD",356.22,356.22,10.06,0)
SURGICAL PROCEDURE CODE TYPE^S^HC:CPT/HCPCS;ID:ICD-9-CM;^10;6^Q
"^DD",356.22,356.22,10.06,3)
Enter a valid Procedure Coding Method. 
"^DD",356.22,356.22,10.06,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.06,21,1,0)
The Procedure Coding Method for the related
"^DD",356.22,356.22,10.06,21,2,0)
surgical procedures.
"^DD",356.22,356.22,10.06,"DT")
3150102
"^DD",356.22,356.22,10.07,0)
SURGICAL PROCEDURE CODE^V^^10;7^
"^DD",356.22,356.22,10.07,3)
Enter a Surgical Procedure.
"^DD",356.22,356.22,10.07,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.07,21,1,0)
The Surgical Procedure associated with this home
"^DD",356.22,356.22,10.07,21,2,0)
health care.
"^DD",356.22,356.22,10.07,"DT")
3150102
"^DD",356.22,356.22,10.07,"V",0)
^.12P^2^2
"^DD",356.22,356.22,10.07,"V",1,0)
81^HCPCS procedure code^1^C^y^n
"^DD",356.22,356.22,10.07,"V",1,1)
S DIC("S")="I $$PROC^IBTRH5B(10.07)"
"^DD",356.22,356.22,10.07,"V",1,2)
Restricts look-ups based on the Procedure Code Type.
"^DD",356.22,356.22,10.07,"V",2,0)
80.1^ICD-9 procedure code^2^I^y^n
"^DD",356.22,356.22,10.07,"V",2,1)
S DIC("S")="I $$PROC^IBTRH5B(10.07)"
"^DD",356.22,356.22,10.07,"V",2,2)
Restricts look-ups based upon the Procedure Code Type.
"^DD",356.22,356.22,10.08,0)
PHYSICIAN ORDER DATE^D^^10;8^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,10.08,3)
Enter a valid date.
"^DD",356.22,356.22,10.08,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.08,21,1,0)
The date on which the physician issued verbal
"^DD",356.22,356.22,10.08,21,2,0)
orders for the start of home health care.
"^DD",356.22,356.22,10.08,"DT")
3150102
"^DD",356.22,356.22,10.09,0)
LAST VISIT DATE^D^^10;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,10.09,3)
Enter a valid date.
"^DD",356.22,356.22,10.09,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.09,21,1,0)
The date on which the patient was last seen by
"^DD",356.22,356.22,10.09,21,2,0)
the physician.
"^DD",356.22,356.22,10.09,"DT")
3150102
"^DD",356.22,356.22,10.1,0)
PHYSICIAN CONTACT DATE^D^^10;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.22,10.1,3)
Enter a valid date.
"^DD",356.22,356.22,10.1,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.1,21,1,0)
The date on which the physician was last contacted
"^DD",356.22,356.22,10.1,21,2,0)
by the home health services provider.
"^DD",356.22,356.22,10.1,"DT")
3150102
"^DD",356.22,356.22,10.11,0)
LAST ADMISSION START DATE^DX^^10;11^N %DT S %DT="EX" S:+$P($G(^IBT(356.22,DA,10)),U,12) %DT(0)=-$P($G(^IBT(356.22,DA,10)),U,12) D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,10.11,1,0)
^.1
"^DD",356.22,356.22,10.11,1,1,0)
^^TRIGGER^356.22^10.12
"^DD",356.22,356.22,10.11,1,1,1)
Q
"^DD",356.22,356.22,10.11,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBT(356.22,D0,10)):^(10),1:"") S X=$P(Y(1),U,11)="" I X S X=DIV S Y(1)=$S($D(^IBT(356.22,D0,10)):^(10),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(356.22,10.11,1,1,2.4)
"^DD",356.22,356.22,10.11,1,1,2.4)
S DIH=$G(^IBT(356.22,DIV(0),10)),DIV=X S $P(^(10),U,12)=DIV,DIH=356.22,DIG=10.12 D ^DICR
"^DD",356.22,356.22,10.11,1,1,"CREATE VALUE")
NO EFFECT
"^DD",356.22,356.22,10.11,1,1,"DELETE CONDITION")
LAST ADMISSION START DATE=""
"^DD",356.22,356.22,10.11,1,1,"DELETE VALUE")
@
"^DD",356.22,356.22,10.11,1,1,"FIELD")
#10.12
"^DD",356.22,356.22,10.11,3)
Enter a valid date.
"^DD",356.22,356.22,10.11,21,0)
^^1^1^3150102^
"^DD",356.22,356.22,10.11,21,1,0)
The Start Date of the last inpatient admission.
"^DD",356.22,356.22,10.11,"DT")
3150102
"^DD",356.22,356.22,10.12,0)
LAST ADMISSION END DATE^DX^^10;12^N %DT S %DT="EX",%DT(0)=$G(DG("10;11")) S:%DT(0)="" %DT(0)=$P($G(^IBT(356.22,DA,10)),U,11) D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22,10.12,3)
Enter a valid date.
"^DD",356.22,356.22,10.12,5,1,0)
356.22^10.11^1
"^DD",356.22,356.22,10.12,21,0)
^^1^1^3150102^
"^DD",356.22,356.22,10.12,21,1,0)
The End Date of the last inpatient admission.
"^DD",356.22,356.22,10.12,"DT")
3150102
"^DD",356.22,356.22,10.13,0)
PATIENT LOCATION^P356.017'O^IBT(356.017,^10;13^Q
"^DD",356.22,356.22,10.13,2)
S Y(0)=Y S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.017,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.017,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S Y=X
"^DD",356.22,356.22,10.13,2.1)
PATIENT LOCATION:DESCRIPTION
"^DD",356.22,356.22,10.13,3)
Enter a valid Facility Type. 
"^DD",356.22,356.22,10.13,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,10.13,21,1,0)
The Facility Type that represents the location of
"^DD",356.22,356.22,10.13,21,2,0)
the patient's last inpatient admission.
"^DD",356.22,356.22,10.13,"DT")
3150102
"^DD",356.22,356.22,11,0)
ATTACHMENTS^356.2211PA^^11;0
"^DD",356.22,356.22,11,21,0)
^.001^2^2^3141231^^^
"^DD",356.22,356.22,11,21,1,0)
This multiple contains additional patient information (attachments) for 
"^DD",356.22,356.22,11,21,2,0)
patient event level.
"^DD",356.22,356.22,12,0)
MESSAGE TEXT^356.2212^^12;0
"^DD",356.22,356.22,12,21,0)
^.001^1^1^3141231^^
"^DD",356.22,356.22,12,21,1,0)
This is a free form message for 278 inquiry.
"^DD",356.22,356.22,13,0)
PATIENT EVENT PROVIDER^356.2213PA^^13;0
"^DD",356.22,356.22,13,21,0)
^.001^2^2^3141231^^^^
"^DD",356.22,356.22,13,21,1,0)
This multiple holds data related to patient event providers for 278 
"^DD",356.22,356.22,13,21,2,0)
inquiry.
"^DD",356.22,356.22,14,0)
PATIENT EVENT TRANSPORT^356.2214SA^^14;0
"^DD",356.22,356.22,14,21,0)
^^2^2^3140423^
"^DD",356.22,356.22,14,21,1,0)
This multiple holds data related to patient event transport information 
"^DD",356.22,356.22,14,21,2,0)
for 278 inquiry.
"^DD",356.22,356.22,15,0)
OTHER UMO^356.2215SA^^15;0
"^DD",356.22,356.22,15,21,0)
^^2^2^3140424^
"^DD",356.22,356.22,15,21,1,0)
This multiple holds data related to patient event other UMO for 278 
"^DD",356.22,356.22,15,21,2,0)
inquiry.
"^DD",356.22,356.22,16,0)
SERVICE LINE^356.2216A^^16;0
"^DD",356.22,356.22,16,11,0)
^.2LAP
"^DD",356.22,356.22,16,21,0)
^.001^1^1^3150504^^^^
"^DD",356.22,356.22,16,21,1,0)
This multiple holds data related to each service line.
"^DD",356.22,356.22,17.01,0)
PREV. AUTHORIZATION #^F^^17;1^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.22,17.01,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.22,17.01,21,0)
^^2^2^3141118^
"^DD",356.22,356.22,17.01,21,1,0)
Enter the previous Authorization Number from the UMO that
"^DD",356.22,356.22,17.01,21,2,0)
is associated with this patient event.
"^DD",356.22,356.22,17.01,"DT")
3141118
"^DD",356.22,356.22,17.02,0)
PREV. ADMIN. REFERENCE #^F^^17;2^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.22,17.02,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.22,17.02,21,0)
^^2^2^3141118^
"^DD",356.22,356.22,17.02,21,1,0)
Enter the previous Administrative Reference Number from the
"^DD",356.22,356.22,17.02,21,2,0)
UMO that is associated with this patient event.
"^DD",356.22,356.22,17.02,"DT")
3141118
"^DD",356.22,356.22,18.01,0)
WEIGHT UNITS^S^KG:KILOGRAM;LB:POUND;^18;1^Q
"^DD",356.22,356.22,18.01,.1)
Weight Units
"^DD",356.22,356.22,18.01,3)
Enter the Unit of Measurement Code for Weight (CR101).
"^DD",356.22,356.22,18.01,21,0)
^^2^2^3150102^
"^DD",356.22,356.22,18.01,21,1,0)
THE code specifying the units in which a value is being expressed, or
"^DD",356.22,356.22,18.01,21,2,0)
manner in which a measurement has been taken. (CR101)
"^DD",356.22,356.22,18.01,23,0)
^^1^1^3140508^
"^DD",356.22,356.22,18.01,23,1,0)
Required when CR102 (Patient Weight) is present.
"^DD",356.22,356.22,18.01,"DT")
3150102
"^DD",356.22,356.22,18.02,0)
PATIENT WEIGHT^NJ10,0^^18;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,18.02,.1)
Weight
"^DD",356.22,356.22,18.02,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",356.22,356.22,18.02,21,0)
^^1^1^3141231^
"^DD",356.22,356.22,18.02,21,1,0)
Enter the patient's weight in pounds.
"^DD",356.22,356.22,18.02,23,0)
^.001^2^2^3141231^^
"^DD",356.22,356.22,18.02,23,1,0)
Required when patient weight information is needed to justify the medical 
"^DD",356.22,356.22,18.02,23,2,0)
necessity of the level of ambulance services.
"^DD",356.22,356.22,18.02,"DT")
3141231
"^DD",356.22,356.22,18.03,0)
AMBULANCE TRANSPORT CODE^S^I:INITIAL TRIP;R:RETURN TRIP;T:TRANSFER TRIP;X:ROUND TRIP;^18;3^Q
"^DD",356.22,356.22,18.03,3)
Enter a valid Ambulance Transportation Code.
"^DD",356.22,356.22,18.03,21,0)
^^1^1^3150102^
"^DD",356.22,356.22,18.03,21,1,0)
The type of ambulance transportation trip.
"^DD",356.22,356.22,18.03,"DT")
3150102
"^DD",356.22,356.22,18.04,0)
AMBULANCE TRANSPORT REASON^S^A:NEAREST FACILITY;B:PREFERRED PHYSICIAN;C:NEARNESS OF FAMILY;D:SPECIALIST OR SPECIAL EQUIP.;E:REHABILITATION FACILITY;F:RESIDENTIAL FACILITY;^18;4^Q
"^DD",356.22,356.22,18.04,3)
Select the most appropriate Ambulance Transport Reason.
"^DD",356.22,356.22,18.04,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,18.04,21,1,0)
Enter a code here to indicate the reason why the patient
"^DD",356.22,356.22,18.04,21,2,0)
was transported to a particular location.
"^DD",356.22,356.22,18.04,23,0)
^.001^2^2^3141231^^
"^DD",356.22,356.22,18.04,23,1,0)
Required when ambulance transport reason is required to determine medical 
"^DD",356.22,356.22,18.04,23,2,0)
necessity.
"^DD",356.22,356.22,18.04,"DT")
3141119
"^DD",356.22,356.22,18.05,0)
DISTANCE UNITS^S^DH:MILES;DK:KILOMETERS;^18;5^Q
"^DD",356.22,356.22,18.05,.1)
Distance Units
"^DD",356.22,356.22,18.05,3)
Enter the Unit of Measurement Code for Transport (CR105).
"^DD",356.22,356.22,18.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,18.05,21,1,0)
This field indicates the units of the value expressed in
"^DD",356.22,356.22,18.05,21,2,0)
the field Transport Distance.
"^DD",356.22,356.22,18.05,23,0)
^.001^1^1^3141231^^
"^DD",356.22,356.22,18.05,23,1,0)
Required when distance of transportation is known.
"^DD",356.22,356.22,18.05,"DT")
3140509
"^DD",356.22,356.22,18.06,0)
TRANSPORT DISTANCE^NJ15,0^^18;6^K:+X'=X!(X>999999999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",356.22,356.22,18.06,3)
Type a number between 1 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.22,18.06,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,18.06,21,1,0)
This field represents the distance the patient was
"^DD",356.22,356.22,18.06,21,2,0)
transported.
"^DD",356.22,356.22,18.06,23,0)
^.001^1^1^3141231^^
"^DD",356.22,356.22,18.06,23,1,0)
Required when distance of transportation is known.
"^DD",356.22,356.22,18.06,"DT")
3141231
"^DD",356.22,356.22,18.09,0)
ROUND TRIP PURPOSE DESCRIPTION^F^^18;9^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.22,18.09,3)
Enter a 1-80 character, free text description.
"^DD",356.22,356.22,18.09,21,0)
^^3^3^3141231^
"^DD",356.22,356.22,18.09,21,1,0)
The text entered here should explain why a round trip was
"^DD",356.22,356.22,18.09,21,2,0)
needed.  This field is REQUIRED when the Transport Code
"^DD",356.22,356.22,18.09,21,3,0)
is Round Trip.
"^DD",356.22,356.22,18.09,23,0)
^.001^1^1^3141231^^^
"^DD",356.22,356.22,18.09,23,1,0)
Required when CR103 (Ambulance Transport Code) equals 'X Round Trip'.
"^DD",356.22,356.22,18.09,"DT")
3141119
"^DD",356.22,356.22,18.1,0)
STRETCHER PURPOSE DESCRIPTION^F^^18;10^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.22,18.1,3)
Enter a 1-80 character, free text description.
"^DD",356.22,356.22,18.1,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,18.1,21,1,0)
The text entered here should explain why a stretcher was
"^DD",356.22,356.22,18.1,21,2,0)
needed.
"^DD",356.22,356.22,18.1,23,0)
^.001^1^1^3141231^^
"^DD",356.22,356.22,18.1,23,1,0)
Required when CR103 (Ambulance Transport Code) equals 'X Round Trip'.
"^DD",356.22,356.22,18.1,"DT")
3141119
"^DD",356.22,356.22,19,0)
UMO CONTACT NAME^F^^19;1^K:$L(X)>60!($L(X)<1) X
"^DD",356.22,356.22,19,3)
Answer must be 1-60 characters in length.
"^DD",356.22,356.22,19,21,0)
^^1^1^3150102^
"^DD",356.22,356.22,19,21,1,0)
The name of the UMO contact person.
"^DD",356.22,356.22,19,"DT")
3150102
"^DD",356.22,356.22,19.01,0)
COMMUNICATION NO. QUALIFIER-1^*P365.021'^IBE(365.021,^19;2^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,19.01,3)
Select a Communication Qualifier.
"^DD",356.22,356.22,19.01,12)
To only select valid Communication Qualifiers.
"^DD",356.22,356.22,19.01,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.22,19.01,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,19.01,21,1,0)
The value entered here identifies the type of number
"^DD",356.22,356.22,19.01,21,2,0)
entered in the field Contact Communication Number-1.
"^DD",356.22,356.22,19.01,"DT")
3141231
"^DD",356.22,356.22,19.02,0)
COMMUNICATION NO. QUALIFIER-2^*P365.021'^IBE(365.021,^19;3^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,19.02,3)
Select a Communication Qualifier.
"^DD",356.22,356.22,19.02,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.22,19.02,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.22,19.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,19.02,21,1,0)
The value entered here identifies the type of number
"^DD",356.22,356.22,19.02,21,2,0)
entered in the field Contact Communication Number-2.
"^DD",356.22,356.22,19.02,"DT")
3141231
"^DD",356.22,356.22,19.03,0)
COMMUNICATION NO. QUALIFIER-3^*P365.021'^IBE(365.021,^19;4^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.22,19.03,3)
Select a Communication Qualifier.
"^DD",356.22,356.22,19.03,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.22,19.03,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.22,19.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22,19.03,21,1,0)
The value entered here identifies the type of number
"^DD",356.22,356.22,19.03,21,2,0)
entered in the field Contact Communication Number-3.
"^DD",356.22,356.22,19.03,"DT")
3141231
"^DD",356.22,356.22,20,0)
CONTACT COMMUNICATION NUMBER-1^FX^^20;1^K:'$$CONTPH^IBTRH5C(20) X
"^DD",356.22,356.22,20,3)
Enter a valid Phone Number, Email or Phone Number Extension.
"^DD",356.22,356.22,20,21,0)
^^2^2^3150204^
"^DD",356.22,356.22,20,21,1,0)
This is a 10 digit phone/FAX number (format: nnnnnnnnnn 
"^DD",356.22,356.22,20,21,2,0)
or nnn-nnn-nnnn) or an email/URL address.
"^DD",356.22,356.22,20,"DT")
3150204
"^DD",356.22,356.22,21,0)
CONTACT COMMUNICATION NUMBER-2^FX^^21;1^K:'$$CONTPH^IBTRH5C(21) X
"^DD",356.22,356.22,21,3)
Enter a valid Phone Number, Email or Phone Number Extension.
"^DD",356.22,356.22,21,21,0)
^^2^2^3150204^
"^DD",356.22,356.22,21,21,1,0)
This is a 10 digit phone/FAX number (format: nnnnnnnnnn 
"^DD",356.22,356.22,21,21,2,0)
or nnn-nnn-nnnn) or an email/URL address.
"^DD",356.22,356.22,21,"DT")
3150204
"^DD",356.22,356.22,22,0)
CONTACT COMMUNICATION NUMBER-3^FX^^22;1^K:'$$CONTPH^IBTRH5C(22) X
"^DD",356.22,356.22,22,3)
Enter a valid Phone Number, Email or Phone Number Extension.
"^DD",356.22,356.22,22,21,0)
^^2^2^3150204^
"^DD",356.22,356.22,22,21,1,0)
This is a 10 digit phone/FAX number (format: nnnnnnnnnn 
"^DD",356.22,356.22,22,21,2,0)
or nnn-nnn-nnnn) or an email/URL address.
"^DD",356.22,356.22,22,"DT")
3150204
"^DD",356.22,356.22,23,0)
DELETE REASON NOTE^356.2223^^23;0
"^DD",356.22,356.22,23,21,0)
^^2^2^3150928^
"^DD",356.22,356.22,23,21,1,0)
This note is available to provide additional information pertaining to 
"^DD",356.22,356.22,23,21,2,0)
the removal of a 278 Request(217) or Inquiry(215) from the HCSR Worklist.
"^DD",356.22,356.22,101,0)
AAA SEGMENTS^356.22101A^^101;0
"^DD",356.22,356.22,101,21,0)
^.001^1^1^3150202^^^
"^DD",356.22,356.22,101,21,1,0)
This multiple contains AAA segments data from 278 response.
"^DD",356.22,356.22,103.01,0)
CERTIFICATION ACTION CODE^P356.02'^IBT(356.02,^103;1^Q
"^DD",356.22,356.22,103.01,3)
Answer must be a valid X12 278 Certification Action Code.
"^DD",356.22,356.22,103.01,21,0)
^.001^1^1^3140722^^
"^DD",356.22,356.22,103.01,21,1,0)
Code indicating type of action.
"^DD",356.22,356.22,103.01,"DT")
3141113
"^DD",356.22,356.22,103.02,0)
REVIEW IDENTIFICATION NUMBER^F^^103;2^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.22,103.02,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.22,103.02,21,0)
^.001^2^2^3140707^^
"^DD",356.22,356.22,103.02,21,1,0)
Reference information as defined for a particular Transaction
"^DD",356.22,356.22,103.02,21,2,0)
Set or as specified by the Reference Identification Qualifier.
"^DD",356.22,356.22,103.02,23,0)
^^2^2^3140707^
"^DD",356.22,356.22,103.02,23,1,0)
HCR02 is the number assigned by the information source to this review
"^DD",356.22,356.22,103.02,23,2,0)
outcome.  Required when HCR02 equals A1, A2 or A6.
"^DD",356.22,356.22,103.02,"DT")
3140707
"^DD",356.22,356.22,103.03,0)
REVIEW DECISION REASON CODE^P356.021'^IBT(356.021,^103;3^Q
"^DD",356.22,356.22,103.03,3)
Answer must be a valid X12 278 HCS Decision Reason Code.
"^DD",356.22,356.22,103.03,21,0)
^.001^1^1^3140707^^
"^DD",356.22,356.22,103.03,21,1,0)
Code indicating a code from a specific industry code list.
"^DD",356.22,356.22,103.03,23,0)
^^4^4^3140707^
"^DD",356.22,356.22,103.03,23,1,0)
HCR03 is the code assigned by the information source to identify
"^DD",356.22,356.22,103.03,23,2,0)
the reason for the health care service review outcome indicated in
"^DD",356.22,356.22,103.03,23,3,0)
HCR01.  See Code Source 886.
"^DD",356.22,356.22,103.03,23,4,0)
Required when HCR01 equals A3 or A4.
"^DD",356.22,356.22,103.03,"DT")
3141210
"^DD",356.22,356.22,103.04,0)
SECOND SURGICAL OPINION FLAG^S^Y:YES;N:NO;^103;4^Q
"^DD",356.22,356.22,103.04,3)
Enter 'YES' if second surgical opinion is required, 'NO' otherwise.
"^DD",356.22,356.22,103.04,21,0)
^^1^1^3140924^
"^DD",356.22,356.22,103.04,21,1,0)
This field should be set to 'YES' if second surgical opinion is required.
"^DD",356.22,356.22,103.04,23,0)
^^4^4^3140707^
"^DD",356.22,356.22,103.04,23,1,0)
HCR04 is the second surgical opinion indicator.
"^DD",356.22,356.22,103.04,23,2,0)
A 'Y' value indicates a second surgical opinion is required;
"^DD",356.22,356.22,103.04,23,3,0)
an 'N' value indicates a second surgical opinion is not required
"^DD",356.22,356.22,103.04,23,4,0)
for this request.
"^DD",356.22,356.22,103.04,"DT")
3140924
"^DD",356.22,356.22,105,0)
TRN SEGMENTS^356.22105A^^105;0
"^DD",356.22,356.22,105,21,0)
^.001^1^1^3141231^^
"^DD",356.22,356.22,105,21,1,0)
This multiple contains TRN segments data.
"^DD",356.22,356.22,107,0)
HI SEGMENTS^356.22107A^^107;0
"^DD",356.22,356.22,107,21,0)
^.001^1^1^3141231^^
"^DD",356.22,356.22,107,21,1,0)
This multiple contains data for HI segments.
"^DD",356.22,356.221,0)
COMMENTS SUB-FIELD^^.03^3
"^DD",356.22,356.221,0,"DT")
3140924
"^DD",356.22,356.221,0,"IX","B",356.221,.01)

"^DD",356.22,356.221,0,"NM","COMMENTS")

"^DD",356.22,356.221,0,"UP")
356.22
"^DD",356.22,356.221,.01,0)
DATE ENTERED^D^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.221,.01,1,0)
^.1
"^DD",356.22,356.221,.01,1,1,0)
356.221^B
"^DD",356.22,356.221,.01,1,1,1)
S ^IBT(356.22,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.221,.01,1,1,2)
K ^IBT(356.22,DA(1),1,"B",$E(X,1,30),DA)
"^DD",356.22,356.221,.01,3)
Enter the date and time this comment was added, no range limit on date.
"^DD",356.22,356.221,.01,21,0)
^^1^1^3140322^
"^DD",356.22,356.221,.01,21,1,0)
Date/time this comment was entered.
"^DD",356.22,356.221,.01,"DT")
3150107
"^DD",356.22,356.221,.02,0)
ENTERED BY^P200'^VA(200,^0;2^Q
"^DD",356.22,356.221,.02,3)
Select a user.
"^DD",356.22,356.221,.02,21,0)
^^1^1^3141231^
"^DD",356.22,356.221,.02,21,1,0)
This field is the user who entered this comment.
"^DD",356.22,356.221,.02,"DT")
3140322
"^DD",356.22,356.221,.03,0)
COMMENT^356.231^^1;0
"^DD",356.22,356.221,.03,21,0)
^^2^2^3141119^
"^DD",356.22,356.221,.03,21,1,0)
Enter up to 250 characters of additional information
"^DD",356.22,356.221,.03,21,2,0)
related to this request.
"^DD",356.22,356.22101,0)
AAA SEGMENTS SUB-FIELD^^1^6
"^DD",356.22,356.22101,0,"DT")
3140512
"^DD",356.22,356.22101,0,"IX","B",356.22101,.01)

"^DD",356.22,356.22101,0,"NM","AAA SEGMENTS")

"^DD",356.22,356.22101,0,"UP")
356.22
"^DD",356.22,356.22101,.01,0)
AAA SEQUENCE^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",356.22,356.22101,.01,1,0)
^.1
"^DD",356.22,356.22101,.01,1,1,0)
356.22101^B
"^DD",356.22,356.22101,.01,1,1,1)
S ^IBT(356.22,DA(1),101,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.22101,.01,1,1,2)
K ^IBT(356.22,DA(1),101,"B",$E(X,1,30),DA)
"^DD",356.22,356.22101,.01,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",356.22,356.22101,.01,21,0)
^^1^1^3140924^
"^DD",356.22,356.22101,.01,21,1,0)
Sequential number of AAA segment.
"^DD",356.22,356.22101,.01,"DT")
3140924
"^DD",356.22,356.22101,.02,0)
AAA LOOP IDENTIFIER^P365.027'^IBE(365.027,^0;2^Q
"^DD",356.22,356.22101,.02,3)
Enter an X12 271 Loop ID.
"^DD",356.22,356.22101,.02,21,0)
^^1^1^3150102^
"^DD",356.22,356.22101,.02,21,1,0)
The loop identifier for the AAA segment.
"^DD",356.22,356.22101,.02,"DT")
3150102
"^DD",356.22,356.22101,.03,0)
VALID REQUEST INDICATOR^S^Y:YES;N:NO;^0;3^Q
"^DD",356.22,356.22101,.03,.1)
Valid Request Indicator
"^DD",356.22,356.22101,.03,3)
Enter Y to indicate that the 278 request is valid and the rejection is caused by something other than errors in the request. Enter N to indicate an invalid request.
"^DD",356.22,356.22101,.03,21,0)
^.001^1^1^3150202^^
"^DD",356.22,356.22101,.03,21,1,0)
Determines if the 278 request is valid or or invalid.
"^DD",356.22,356.22101,.03,23,0)
^.001^3^3^3150202^^
"^DD",356.22,356.22101,.03,23,1,0)
AAA01 designates whether the request is valid or invalid.  Code 'Y' 
"^DD",356.22,356.22101,.03,23,2,0)
indicates that the code is valid; code 'N' indicates that the code is 
"^DD",356.22,356.22101,.03,23,3,0)
invalid.
"^DD",356.22,356.22101,.03,"DT")
3150106
"^DD",356.22,356.22101,.04,0)
REJECT REASON CODE^P365.017'^IBE(365.017,^0;4^Q
"^DD",356.22,356.22101,.04,.1)
Reject Reason Code
"^DD",356.22,356.22101,.04,3)
Enter the 2-digit Reason Code for Rejection (AAA04).
"^DD",356.22,356.22101,.04,21,0)
^^1^1^3150102^
"^DD",356.22,356.22101,.04,21,1,0)
The code assigned by issuer to identify reason for rejection.
"^DD",356.22,356.22101,.04,"DT")
3150102
"^DD",356.22,356.22101,.05,0)
FOLLOW-UP ACTION CODE^P365.018'^IBE(365.018,^0;5^Q
"^DD",356.22,356.22101,.05,.1)
Follow-up Action Code
"^DD",356.22,356.22101,.05,3)
Enter the 1-character code for the Follow-up Action (AAA04).
"^DD",356.22,356.22101,.05,21,0)
^^1^1^3150102^
"^DD",356.22,356.22101,.05,21,1,0)
The code identifying follow-up actions allowed.
"^DD",356.22,356.22101,.05,"DT")
3150102
"^DD",356.22,356.22101,1,0)
FSC ERROR MESSAGE^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",356.22,356.22101,1,3)
Enter 1-250 characters for the FSC Error Message.
"^DD",356.22,356.22101,1,21,0)
^^2^2^3140512^
"^DD",356.22,356.22101,1,21,1,0)
This the field to store the FSC Error message that was not reported by 
"^DD",356.22,356.22101,1,21,2,0)
the HCCH via the X12 AAA segment.
"^DD",356.22,356.22101,1,"DT")
3140512
"^DD",356.22,356.22105,0)
TRN SEGMENTS SUB-FIELD^^.06^6
"^DD",356.22,356.22105,0,"DT")
3140512
"^DD",356.22,356.22105,0,"IX","B",356.22105,.01)

"^DD",356.22,356.22105,0,"NM","TRN SEGMENTS")

"^DD",356.22,356.22105,0,"UP")
356.22
"^DD",356.22,356.22105,.01,0)
TRN SEQUENCE^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",356.22,356.22105,.01,1,0)
^.1
"^DD",356.22,356.22105,.01,1,1,0)
356.22105^B
"^DD",356.22,356.22105,.01,1,1,1)
S ^IBT(356.22,DA(1),105,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.22105,.01,1,1,2)
K ^IBT(356.22,DA(1),105,"B",$E(X,1,30),DA)
"^DD",356.22,356.22105,.01,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",356.22,356.22105,.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.22105,.01,21,1,0)
The sequential number of the TRN segment.
"^DD",356.22,356.22105,.01,"DT")
3150102
"^DD",356.22,356.22105,.02,0)
TRN LOOP IDENTIFIER^P365.027'^IBE(365.027,^0;2^Q
"^DD",356.22,356.22105,.02,3)
Enter an X12 271 Loop ID.
"^DD",356.22,356.22105,.02,21,0)
^^1^1^3150102^
"^DD",356.22,356.22105,.02,21,1,0)
The loop identifier for the TRN segment.
"^DD",356.22,356.22105,.02,"DT")
3150102
"^DD",356.22,356.22105,.03,0)
TRACE TYPE CODE^S^1:CURRENT TRX TRACE NOS.;2:REFERENCED TRX TRACE NOS.;^0;3^Q
"^DD",356.22,356.22105,.03,.1)
Trace Type Code
"^DD",356.22,356.22105,.03,3)
Enter the 1-2 character Transaction Trace Type Code (TRN01).
"^DD",356.22,356.22105,.03,21,0)
^^1^1^3150102^
"^DD",356.22,356.22105,.03,21,1,0)
The code identifying which transaction is being referenced.
"^DD",356.22,356.22105,.03,"DT")
3150102
"^DD",356.22,356.22105,.04,0)
TRACE NUMBER^F^^0;4^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.22105,.04,.1)
Reference Identification
"^DD",356.22,356.22105,.04,3)
Enter the 1-50 character Trace Number (TRN02).
"^DD",356.22,356.22105,.04,21,0)
^^2^2^3140509^
"^DD",356.22,356.22105,.04,21,1,0)
Reference information as defined for a particular Transaction Set or as 
"^DD",356.22,356.22105,.04,21,2,0)
specified by the Reference Identification Qualifier.
"^DD",356.22,356.22105,.04,23,0)
^^1^1^3140509^
"^DD",356.22,356.22105,.04,23,1,0)
TRN02 provides unique identification for the transaction.
"^DD",356.22,356.22105,.04,"DT")
3140509
"^DD",356.22,356.22105,.05,0)
TRACE ASSIGNING ENTITY ID^F^^0;5^K:$L(X)>10!($L(X)<10) X
"^DD",356.22,356.22105,.05,.1)
Originating Company Identifier
"^DD",356.22,356.22105,.05,3)
Enter a 10-character Trace Assigning Entity Identifier (TRN03).
"^DD",356.22,356.22105,.05,21,0)
^^3^3^3140522^^
"^DD",356.22,356.22105,.05,21,1,0)
A unique identifier designating the company initiating the funds transfer 
"^DD",356.22,356.22105,.05,21,2,0)
instructions, business transaction or assigning tracking reference 
"^DD",356.22,356.22105,.05,21,3,0)
identification.
"^DD",356.22,356.22105,.05,23,0)
^^1^1^3140509^
"^DD",356.22,356.22105,.05,23,1,0)
TRN03 identifies an organization.
"^DD",356.22,356.22105,.05,"DT")
3140522
"^DD",356.22,356.22105,.06,0)
TRACE ASSIGNING ENTITY ID-2^F^^0;6^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.22105,.06,.1)
Additional Reference Identification
"^DD",356.22,356.22105,.06,3)
Enter 1-50 characters to further identify the organization (TRN04).
"^DD",356.22,356.22105,.06,21,0)
^^2^2^3140509^
"^DD",356.22,356.22105,.06,21,1,0)
Reference information as defined for a particular Transaction Set or as 
"^DD",356.22,356.22105,.06,21,2,0)
specified by the Reference Identification Qualifier.
"^DD",356.22,356.22105,.06,23,0)
^^1^1^3140509^
"^DD",356.22,356.22105,.06,23,1,0)
TRN04 identifies a further subdivision within the organization.
"^DD",356.22,356.22105,.06,"DT")
3140509
"^DD",356.22,356.22107,0)
HI SEGMENTS SUB-FIELD^^.04^4
"^DD",356.22,356.22107,0,"DT")
3150106
"^DD",356.22,356.22107,0,"IX","B",356.22107,.01)

"^DD",356.22,356.22107,0,"NM","HI SEGMENTS")

"^DD",356.22,356.22107,0,"UP")
356.22
"^DD",356.22,356.22107,.01,0)
HI SEQUENCE^MNJ2,0^^0;1^K:+X'=X!(X>12)!(X<1)!(X?.E1"."1.N) X
"^DD",356.22,356.22107,.01,1,0)
^.1
"^DD",356.22,356.22107,.01,1,1,0)
356.22107^B
"^DD",356.22,356.22107,.01,1,1,1)
S ^IBT(356.22,DA(1),107,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.22107,.01,1,1,2)
K ^IBT(356.22,DA(1),107,"B",$E(X,1,30),DA)
"^DD",356.22,356.22107,.01,3)
Type a number between 1 and 12, 0 decimal digits.
"^DD",356.22,356.22107,.01,21,0)
^^1^1^3140924^
"^DD",356.22,356.22107,.01,21,1,0)
This is a sequential number of the HI segment.
"^DD",356.22,356.22107,.01,"DT")
3140924
"^DD",356.22,356.22107,.02,0)
CODE LIST QUALIFIER CODE^P356.006'^IBT(356.006,^0;2^Q
"^DD",356.22,356.22107,.02,.1)
Code List Qualifier Code
"^DD",356.22,356.22107,.02,3)
Enter 1-3 characters for the Code List Qualifier Code (HI##-1).
"^DD",356.22,356.22107,.02,21,0)
^^1^1^3140924^^
"^DD",356.22,356.22107,.02,21,1,0)
Code identifying a specific industry code list.
"^DD",356.22,356.22107,.02,"DT")
3140924
"^DD",356.22,356.22107,.03,0)
INDUSTRY CODE^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",356.22,356.22107,.03,.1)
Industry Code
"^DD",356.22,356.22107,.03,3)
Enter 1-30 characters for the Industry Code (HI##-2).
"^DD",356.22,356.22107,.03,21,0)
^^1^1^3140509^
"^DD",356.22,356.22107,.03,21,1,0)
Code indicating a code from a specific industry code list.
"^DD",356.22,356.22107,.03,23,0)
^^2^2^3140509^
"^DD",356.22,356.22107,.03,23,1,0)
If C022-08 is used, then C022-02 represents the beginning value in a 
"^DD",356.22,356.22107,.03,23,2,0)
range of codes.
"^DD",356.22,356.22107,.03,"DT")
3140522
"^DD",356.22,356.22107,.04,0)
DATE^D^^0;4^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.22107,.04,3)
Enter a valid date (it may be imprecise).
"^DD",356.22,356.22107,.04,21,0)
^^2^2^3150106^
"^DD",356.22,356.22107,.04,21,1,0)
This field contains diagnosis date (it may be imprecise)
"^DD",356.22,356.22107,.04,21,2,0)
for the HI segment.
"^DD",356.22,356.22107,.04,"DT")
3150106
"^DD",356.22,356.2211,0)
ATTACHMENTS SUB-FIELD^^.04^4
"^DD",356.22,356.2211,0,"DT")
3140701
"^DD",356.22,356.2211,0,"IX","B",356.2211,.01)

"^DD",356.22,356.2211,0,"NM","ATTACHMENTS")

"^DD",356.22,356.2211,0,"UP")
356.22
"^DD",356.22,356.2211,.01,0)
REPORT TYPE CODE^MP356.018'XO^IBT(356.018,^0;1^I $P($G(^IBT(356.22,DA(1),11,0)),"^",3)=10 K X
"^DD",356.22,356.2211,.01,1,0)
^.1
"^DD",356.22,356.2211,.01,1,1,0)
356.2211^B
"^DD",356.22,356.2211,.01,1,1,1)
S ^IBT(356.22,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.2211,.01,1,1,2)
K ^IBT(356.22,DA(1),11,"B",$E(X,1,30),DA)
"^DD",356.22,356.2211,.01,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.018,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.018,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2211,.01,2.1)
REPORT TYPE CODE:DESCRIPTION
"^DD",356.22,356.2211,.01,3)
Enter a valid Report Type Code.
"^DD",356.22,356.2211,.01,21,0)
^^2^2^3150102^
"^DD",356.22,356.2211,.01,21,1,0)
The Report Type code that describes the type of
"^DD",356.22,356.2211,.01,21,2,0)
additional information available.
"^DD",356.22,356.2211,.01,"DT")
3150102
"^DD",356.22,356.2211,.02,0)
REPORT TRANSMISSION CODE^S^AA:Available on request at provider site;BM:By mail;EL:Electronically only;EM:E-mail;FX:By fax;VO:Voice;^0;2^Q
"^DD",356.22,356.2211,.02,3)
Enter a valid Report Transmission Code.
"^DD",356.22,356.2211,.02,21,0)
^^2^2^3150102^
"^DD",356.22,356.2211,.02,21,1,0)
The code which indicates the method by which the
"^DD",356.22,356.2211,.02,21,2,0)
additional information will be delivered.
"^DD",356.22,356.2211,.02,"DT")
3150102
"^DD",356.22,356.2211,.03,0)
ATTACHMENT CONTROL NUMBER^F^^0;3^K:$L(X)>80!($L(X)<2) X
"^DD",356.22,356.2211,.03,3)
Answer must be 2-80 characters in length.
"^DD",356.22,356.2211,.03,21,0)
^^3^3^3141231^
"^DD",356.22,356.2211,.03,21,1,0)
This field is the number used to correctly identify the
"^DD",356.22,356.2211,.03,21,2,0)
attachment.  This identifier is REQUIRED when the
"^DD",356.22,356.2211,.03,21,3,0)
Delivery Method is BM, EL, EM or FX.
"^DD",356.22,356.2211,.03,"DT")
3141119
"^DD",356.22,356.2211,.04,0)
ATTACHMENT DESCRIPTION^F^^0;4^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.2211,.04,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.2211,.04,21,0)
^^1^1^3141231^
"^DD",356.22,356.2211,.04,21,1,0)
This is a description of the attachment.
"^DD",356.22,356.2211,.04,"DT")
3140701
"^DD",356.22,356.2212,0)
MESSAGE TEXT SUB-FIELD^^.01^1
"^DD",356.22,356.2212,0,"DT")
3141231
"^DD",356.22,356.2212,0,"NM","MESSAGE TEXT")

"^DD",356.22,356.2212,0,"UP")
356.22
"^DD",356.22,356.2212,.01,0)
MESSAGE TEXT^Wx^^0;1^Q
"^DD",356.22,356.2212,.01,3)
Enter a free form message of up to 264 characters.
"^DD",356.22,356.2212,.01,"DT")
3141231
"^DD",356.22,356.2213,0)
PATIENT EVENT PROVIDER SUB-FIELD^^5.06^28
"^DD",356.22,356.2213,0,"DT")
3160224
"^DD",356.22,356.2213,0,"IX","B",356.2213,.01)

"^DD",356.22,356.2213,0,"NM","PATIENT EVENT PROVIDER")

"^DD",356.22,356.2213,0,"UP")
356.22
"^DD",356.22,356.2213,.01,0)
PROVIDER TYPE^M*P365.022'O^IBE(365.022,^0;1^S DIC("S")="I $$PROVTYPE^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2213,.01,1,0)
^.1
"^DD",356.22,356.2213,.01,1,1,0)
356.2213^B
"^DD",356.22,356.2213,.01,1,1,1)
S ^IBT(356.22,DA(1),13,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.2213,.01,1,1,2)
K ^IBT(356.22,DA(1),13,"B",$E(X,1,30),DA)
"^DD",356.22,356.2213,.01,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.022,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.022,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2213,.01,2.1)
PROVIDER TYPE:DESCRIPTION
"^DD",356.22,356.2213,.01,3)
Enter a valid Provider Type Qualifier.
"^DD",356.22,356.2213,.01,12)
The code identifying an organization entity, a physical location, or an individual.
"^DD",356.22,356.2213,.01,12.1)
S DIC("S")="I $$PROVTYPE^IBTRH5H()"
"^DD",356.22,356.2213,.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,.01,21,1,0)
This field indicates the type of provider.
"^DD",356.22,356.2213,.01,"DT")
3150220
"^DD",356.22,356.2213,.02,0)
PERSON / NON-PERSON^S^1:Person;2:Non-person;^0;2^Q
"^DD",356.22,356.2213,.02,3)
Enter 1 if the provider is a person or 2 otherwise.
"^DD",356.22,356.2213,.02,21,0)
^^2^2^3150106^
"^DD",356.22,356.2213,.02,21,1,0)
Determines whether or not the selected Provider is a
"^DD",356.22,356.2213,.02,21,2,0)
Person or a Non-person (e.g. a Facility).
"^DD",356.22,356.2213,.02,"DT")
3150106
"^DD",356.22,356.2213,.03,0)
PROVIDER^V^^0;3^
"^DD",356.22,356.2213,.03,3)
Enter a valid Provider.
"^DD",356.22,356.2213,.03,21,0)
^^3^3^3150102^
"^DD",356.22,356.2213,.03,21,1,0)
The Health Care Services Provider.  This
"^DD",356.22,356.2213,.03,21,2,0)
field is REQUIRED for admission reviews or when there is
"^DD",356.22,356.2213,.03,21,3,0)
no primary ID available for the provider.
"^DD",356.22,356.2213,.03,"DT")
3160224
"^DD",356.22,356.2213,.03,"V",0)
^.12P^3^3
"^DD",356.22,356.2213,.03,"V",1,0)
200^VA providers^1^V^y^n
"^DD",356.22,356.2213,.03,"V",1,1)
S DIC("S")="I $O(^(""USC1"",0)),+$P($$NPI^XUSNPI(""Individual_ID"",Y),U)>0"
"^DD",356.22,356.2213,.03,"V",1,2)
Enter a valid VA Provider with valid NPI
"^DD",356.22,356.2213,.03,"V",2,0)
355.93^Non-VA providers^2^N^y^n
"^DD",356.22,356.2213,.03,"V",2,1)
S DIC("S")="I +$$NPIGET^IBCEP81(Y)>0"
"^DD",356.22,356.2213,.03,"V",2,2)
Enter a valid non-VA provider with valid NPI
"^DD",356.22,356.2213,.03,"V",3,0)
4^Institutions^3^F^y^n
"^DD",356.22,356.2213,.03,"V",3,1)
S DIC("S")="I +$P($$NPI^XUSNPI(""Organization_ID"",Y),U)>0"
"^DD",356.22,356.2213,.03,"V",3,2)
Enter a valid institution with valid NPI
"^DD",356.22,356.2213,.04,0)
PER LOOP IDENTIFIER^P365.027'^IBE(365.027,^0;4^Q
"^DD",356.22,356.2213,.04,.1)
PER Loop Identifier
"^DD",356.22,356.2213,.04,3)
Select an X12 271 loop ID.
"^DD",356.22,356.2213,.04,21,0)
^.001^1^1^3141231^^^
"^DD",356.22,356.2213,.04,21,1,0)
This is the PER Loop Identifier.
"^DD",356.22,356.2213,.04,"DT")
3140924
"^DD",356.22,356.2213,.05,0)
CONTACT FUNCTION CODE^F^^0;5^K:$L(X)>2!($L(X)<2) X
"^DD",356.22,356.2213,.05,.1)
Contact Function Code
"^DD",356.22,356.2213,.05,3)
Enter the 2-character Contact Function Code (PER01).
"^DD",356.22,356.2213,.05,21,0)
^^2^2^3150102^
"^DD",356.22,356.2213,.05,21,1,0)
The code identifying the major duty or
"^DD",356.22,356.2213,.05,21,2,0)
responsibility of the person or group named.
"^DD",356.22,356.2213,.05,"DT")
3150102
"^DD",356.22,356.2213,.06,0)
CONTACT NAME^F^^0;6^K:$L(X)>60!($L(X)<1) X
"^DD",356.22,356.2213,.06,.1)
Contact Name
"^DD",356.22,356.2213,.06,3)
Enter 1-60 characters.
"^DD",356.22,356.2213,.06,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,.06,21,1,0)
The name of the Contact.
"^DD",356.22,356.2213,.06,23,0)
^.001^3^3^3141231^^^
"^DD",356.22,356.2213,.06,23,1,0)
Required when the response must be directed to a particular contact and 
"^DD",356.22,356.2213,.06,23,2,0)
when the name of the entity to contact is not already defined or is 
"^DD",356.22,356.2213,.06,23,3,0)
different than the name within the prior name segment (e.g., N1 or NM1).
"^DD",356.22,356.2213,.06,"DT")
3150102
"^DD",356.22,356.2213,.07,0)
COMMUNICATION NO. QUALIFIER-1^*P365.021'^IBE(365.021,^0;7^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.2213,.07,.1)
Communication Number Qualifier-1
"^DD",356.22,356.2213,.07,3)
Enter a valid Communication Qualifier.
"^DD",356.22,356.2213,.07,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.2213,.07,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.2213,.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.2213,.07,21,1,0)
The value entered here identifies the type of number
"^DD",356.22,356.2213,.07,21,2,0)
entered in the field Contact Communication Number-1.
"^DD",356.22,356.2213,.07,23,0)
^.001^2^2^3141231^^
"^DD",356.22,356.2213,.07,23,1,0)
Required when PER02 is not valued in order to transmit a contact 
"^DD",356.22,356.2213,.07,23,2,0)
communication number.
"^DD",356.22,356.2213,.07,"DT")
3150102
"^DD",356.22,356.2213,.08,0)
COMMUNICATION NO. QUALIFIER-2^*P365.021'^IBE(365.021,^0;8^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.2213,.08,.1)
Communication Number Qualifier-2
"^DD",356.22,356.2213,.08,3)
Enter a valid Communication Qualifier.
"^DD",356.22,356.2213,.08,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.2213,.08,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.2213,.08,21,0)
^^2^2^3141231^
"^DD",356.22,356.2213,.08,21,1,0)
The value entered here identifies the type of number
"^DD",356.22,356.2213,.08,21,2,0)
entered in the field Contact Communication Number-2.
"^DD",356.22,356.2213,.08,23,0)
^.001^2^2^3141231^^
"^DD",356.22,356.2213,.08,23,1,0)
Required when a telephone extension or multiple commmunication types are 
"^DD",356.22,356.2213,.08,23,2,0)
available.
"^DD",356.22,356.2213,.08,"DT")
3150102
"^DD",356.22,356.2213,.09,0)
COMMUNICATION NO. QUALIFIER-3^*P365.021'^IBE(365.021,^0;9^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356.22,356.2213,.09,.1)
Communication Number Qualifier-3
"^DD",356.22,356.2213,.09,3)
Enter a valid Communication Qualifier.
"^DD",356.22,356.2213,.09,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.2213,.09,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.2213,.09,21,0)
^^2^2^3141231^
"^DD",356.22,356.2213,.09,21,1,0)
The value entered here identifies the type of number
"^DD",356.22,356.2213,.09,21,2,0)
entered in the field Contact Communication Number-3.
"^DD",356.22,356.2213,.09,23,0)
^.001^2^2^3141231^^
"^DD",356.22,356.2213,.09,23,1,0)
Required when a telephone extension or multiple communication types are 
"^DD",356.22,356.2213,.09,23,2,0)
available.
"^DD",356.22,356.2213,.09,"DT")
3150102
"^DD",356.22,356.2213,1,0)
CONTACT COMMUNICATION NUMBER-1^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",356.22,356.2213,1,.1)
Contact Communication Number-1
"^DD",356.22,356.2213,1,3)
Enter the 1-250 character Communication Number (PER04).
"^DD",356.22,356.2213,1,21,0)
^^2^2^3150102^
"^DD",356.22,356.2213,1,21,1,0)
The complete communications number including country
"^DD",356.22,356.2213,1,21,2,0)
or area code when applicable.
"^DD",356.22,356.2213,1,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,1,23,1,0)
Required when PER02 is not valued to transmit a contact communication 
"^DD",356.22,356.2213,1,23,2,0)
number.
"^DD",356.22,356.2213,1,"DT")
3150102
"^DD",356.22,356.2213,2,0)
CONTACT COMMUNICATION NUMBER-2^F^^2;1^K:$L(X)>250!($L(X)<1) X
"^DD",356.22,356.2213,2,.1)
Contact Communication Number-2
"^DD",356.22,356.2213,2,3)
Enter the 1-250 character Communication Number (PER06).
"^DD",356.22,356.2213,2,21,0)
^^2^2^3150102^
"^DD",356.22,356.2213,2,21,1,0)
The complete communications number including country
"^DD",356.22,356.2213,2,21,2,0)
or area code when applicable.
"^DD",356.22,356.2213,2,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,2,23,1,0)
Required when the telephone extension or multiple communication numbers 
"^DD",356.22,356.2213,2,23,2,0)
are available.
"^DD",356.22,356.2213,2,"DT")
3150102
"^DD",356.22,356.2213,3,0)
CONTACT COMMUNICATION NUMBER-3^F^^3;1^K:$L(X)>250!($L(X)<1) X
"^DD",356.22,356.2213,3,.1)
Contact Communication Number-3
"^DD",356.22,356.2213,3,3)
Enter the 1-250 character Communication Number (PER08).
"^DD",356.22,356.2213,3,21,0)
^^2^2^3150102^
"^DD",356.22,356.2213,3,21,1,0)
The complete communications number including country
"^DD",356.22,356.2213,3,21,2,0)
or area code when applicable.
"^DD",356.22,356.2213,3,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,3,23,1,0)
Requied when the telephone extension or multiple communication numbers 
"^DD",356.22,356.2213,3,23,2,0)
are available.
"^DD",356.22,356.2213,3,"DT")
3150102
"^DD",356.22,356.2213,4.01,0)
NM1 LOOP IDENTIFIER^P365.027'^IBE(365.027,^4;1^Q
"^DD",356.22,356.2213,4.01,.1)
NM1 Loop Identifier
"^DD",356.22,356.2213,4.01,3)
Enter an X12 271 Loop ID.
"^DD",356.22,356.2213,4.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,4.01,21,1,0)
The Loop Identifier for the NM1 segment.
"^DD",356.22,356.2213,4.01,"DT")
3150102
"^DD",356.22,356.2213,4.02,0)
ENTITY IDENTIFIER CODE^P365.022'^IBE(365.022,^4;2^Q
"^DD",356.22,356.2213,4.02,.1)
Entity Identifier Code
"^DD",356.22,356.2213,4.02,3)
Enter the 2-3 character identifier code (NM101).
"^DD",356.22,356.2213,4.02,21,0)
^^2^2^3150102^
"^DD",356.22,356.2213,4.02,21,1,0)
The code identifying an organizational entity, a
"^DD",356.22,356.2213,4.02,21,2,0)
physical location, property or an individual.
"^DD",356.22,356.2213,4.02,"DT")
3150102
"^DD",356.22,356.2213,4.03,0)
ENTITY TYPE QUALIFIER^S^1:PERSON;2:NON-PERSON ENTITY;^4;3^Q
"^DD",356.22,356.2213,4.03,.1)
Entity Type Qualifier
"^DD",356.22,356.2213,4.03,3)
Enter the 1-digit code to qualify the Entity type (NM102).
"^DD",356.22,356.2213,4.03,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,4.03,21,1,0)
The code qualifying the type of entity.
"^DD",356.22,356.2213,4.03,23,0)
^.001^1^1^3140715^^
"^DD",356.22,356.2213,4.03,23,1,0)
NM102 qualifies NM103.
"^DD",356.22,356.2213,4.03,"DT")
3150102
"^DD",356.22,356.2213,4.04,0)
CONTACT LAST OR COMPANY NAME^F^^4;4^K:$L(X)>60!($L(X)<1) X
"^DD",356.22,356.2213,4.04,.1)
Contact Last or Company Name
"^DD",356.22,356.2213,4.04,3)
Enter 1-60 characters.
"^DD",356.22,356.2213,4.04,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,4.04,21,1,0)
The individual Last name or organizational name.
"^DD",356.22,356.2213,4.04,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,4.04,23,1,0)
Required when name information is used by the UMO to identify the 
"^DD",356.22,356.2213,4.04,23,2,0)
requester.
"^DD",356.22,356.2213,4.04,"DT")
3150102
"^DD",356.22,356.2213,4.05,0)
CONTACT FIRST NAME^F^^4;5^K:$L(X)>35!($L(X)<1) X
"^DD",356.22,356.2213,4.05,.1)
Contact First Name
"^DD",356.22,356.2213,4.05,3)
Enter 1-35 characters.
"^DD",356.22,356.2213,4.05,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,4.05,21,1,0)
The individual first name.
"^DD",356.22,356.2213,4.05,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,4.05,23,1,0)
Required when name information is used by the UMO to identify the 
"^DD",356.22,356.2213,4.05,23,2,0)
requester and the requester is a person.
"^DD",356.22,356.2213,4.05,"DT")
3150102
"^DD",356.22,356.2213,4.06,0)
CONTACT MIDDLE NAME^F^^4;6^K:$L(X)>25!($L(X)<1) X
"^DD",356.22,356.2213,4.06,.1)
Contact Middle Name
"^DD",356.22,356.2213,4.06,3)
Enter 1-25 characters.
"^DD",356.22,356.2213,4.06,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,4.06,21,1,0)
The individual middle name or initial.
"^DD",356.22,356.2213,4.06,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,4.06,23,1,0)
Required when NM104 is present and the middle name/initial of the person 
"^DD",356.22,356.2213,4.06,23,2,0)
is known.
"^DD",356.22,356.2213,4.06,"DT")
3150102
"^DD",356.22,356.2213,4.07,0)
CONTACT NAME SUFFIX^F^^4;7^K:$L(X)>10!($L(X)<1) X
"^DD",356.22,356.2213,4.07,.1)
Contact Name Suffix
"^DD",356.22,356.2213,4.07,3)
Enter 1-10 characters.
"^DD",356.22,356.2213,4.07,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,4.07,21,1,0)
The suffix to individual name.
"^DD",356.22,356.2213,4.07,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,4.07,23,1,0)
Required when NM104 is valued and the suffix of the individual's name is 
"^DD",356.22,356.2213,4.07,23,2,0)
known; e.g., Sr., Jr., or III.
"^DD",356.22,356.2213,4.07,"DT")
3150102
"^DD",356.22,356.2213,4.08,0)
IDENTIFICATION CODE QUALIFIER^P365.023'^IBE(365.023,^4;8^Q
"^DD",356.22,356.2213,4.08,.1)
Identification Code Qualifier
"^DD",356.22,356.2213,4.08,3)
Enter 1-2 characters for the Identification Code Qualifier (NM108).
"^DD",356.22,356.2213,4.08,21,0)
^^2^2^3150102^
"^DD",356.22,356.2213,4.08,21,1,0)
The code designating the system/method of code
"^DD",356.22,356.2213,4.08,21,2,0)
structure used for Identification Code (67).
"^DD",356.22,356.2213,4.08,"DT")
3150102
"^DD",356.22,356.2213,4.09,0)
IDENTIFICATION CODE^F^^4;9^K:$L(X)>80!($L(X)<2) X
"^DD",356.22,356.2213,4.09,.1)
Identification Code
"^DD",356.22,356.2213,4.09,3)
Enter 2-80 characters for the Identification Code (NM109).
"^DD",356.22,356.2213,4.09,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,4.09,21,1,0)
The code identifying a party or other code.
"^DD",356.22,356.2213,4.09,"DT")
3150102
"^DD",356.22,356.2213,5,0)
CONTACT ADDRESS LINE-1^F^^5;1^K:$L(X)>55!($L(X)<1) X
"^DD",356.22,356.2213,5,.1)
Contact Address Line-1
"^DD",356.22,356.2213,5,3)
Enter 1-55 characters.
"^DD",356.22,356.2213,5,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,5,21,1,0)
The first line of the address information.
"^DD",356.22,356.2213,5,23,0)
^.001^1^1^3140821^^
"^DD",356.22,356.2213,5,23,1,0)
Use this element for the first line of the requester's address.
"^DD",356.22,356.2213,5,"DT")
3150102
"^DD",356.22,356.2213,5.01,0)
CONTACT ADDRESS LINE-2^F^^5;2^K:$L(X)>55!($L(X)<1) X
"^DD",356.22,356.2213,5.01,.1)
Contact Address Line-2
"^DD",356.22,356.2213,5.01,3)
Enter 1-55 characters.
"^DD",356.22,356.2213,5.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,5.01,21,1,0)
The second line of the address information.
"^DD",356.22,356.2213,5.01,23,0)
^^1^1^3140514^
"^DD",356.22,356.2213,5.01,23,1,0)
Use this element for the second line of the requester's address.
"^DD",356.22,356.2213,5.01,"DT")
3150102
"^DD",356.22,356.2213,5.02,0)
CONTACT CITY NAME^F^^5;3^K:$L(X)>30!($L(X)<2) X
"^DD",356.22,356.2213,5.02,.1)
Contact City Name
"^DD",356.22,356.2213,5.02,3)
Enter 2-30 characters.
"^DD",356.22,356.2213,5.02,21,0)
^^1^1^3140514^
"^DD",356.22,356.2213,5.02,21,1,0)
Free-form text for city name.
"^DD",356.22,356.2213,5.02,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,5.02,23,1,0)
A combination of either N401 through N404, or N405 and N406 may be 
"^DD",356.22,356.2213,5.02,23,2,0)
adequate to specify a location.
"^DD",356.22,356.2213,5.02,"DT")
3141231
"^DD",356.22,356.2213,5.03,0)
CONTACT STATE OR PROVINCE^P5'^DIC(5,^5;4^Q
"^DD",356.22,356.2213,5.03,.1)
Contact State or Province
"^DD",356.22,356.2213,5.03,3)
Enter a valid state or province.
"^DD",356.22,356.2213,5.03,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,5.03,21,1,0)
The state or province of the contact.
"^DD",356.22,356.2213,5.03,23,0)
^^2^2^3140514^
"^DD",356.22,356.2213,5.03,23,1,0)
Required when the address is in the United States of America, including 
"^DD",356.22,356.2213,5.03,23,2,0)
its territories or Canada.
"^DD",356.22,356.2213,5.03,"DT")
3150102
"^DD",356.22,356.2213,5.04,0)
CONTACT ZIP CODE^F^^5;5^K:$L(X)>15!($L(X)<3) X
"^DD",356.22,356.2213,5.04,.1)
Contact Zip Code
"^DD",356.22,356.2213,5.04,3)
Enter 3-15 characters for the Zip Code (N403).
"^DD",356.22,356.2213,5.04,21,0)
^^2^2^3150102^
"^DD",356.22,356.2213,5.04,21,1,0)
The code defining international postal zone code excluding
"^DD",356.22,356.2213,5.04,21,2,0)
punctuation and blanks (zip code for United States).
"^DD",356.22,356.2213,5.04,23,0)
^^3^3^3140514^^
"^DD",356.22,356.2213,5.04,23,1,0)
Required when the address is in the United States of America including 
"^DD",356.22,356.2213,5.04,23,2,0)
its territories or Canada, or when a postal code exists for the country 
"^DD",356.22,356.2213,5.04,23,3,0)
in N404.
"^DD",356.22,356.2213,5.04,"DT")
3150102
"^DD",356.22,356.2213,5.05,0)
CONTACT COUNTRY CODE^P779.004'^HL(779.004,^5;6^Q
"^DD",356.22,356.2213,5.05,.1)
Contact Country Code
"^DD",356.22,356.2213,5.05,3)
Enter 2-3 characters.
"^DD",356.22,356.2213,5.05,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,5.05,21,1,0)
The code identifying the country.
"^DD",356.22,356.2213,5.05,23,0)
^^1^1^3140514^
"^DD",356.22,356.2213,5.05,23,1,0)
Required when the address is outside the United States of America.
"^DD",356.22,356.2213,5.05,"DT")
3150102
"^DD",356.22,356.2213,5.06,0)
CONTACT COUNTRY SUBDIVISION^F^^5;7^K:$L(X)>3!($L(X)<1) X
"^DD",356.22,356.2213,5.06,.1)
Contact Country Subdivision Code
"^DD",356.22,356.2213,5.06,3)
Enter 1-3 characters.
"^DD",356.22,356.2213,5.06,21,0)
^^1^1^3150102^
"^DD",356.22,356.2213,5.06,21,1,0)
The code identifying the country subdivision.
"^DD",356.22,356.2213,5.06,23,0)
^^4^4^3140514^^
"^DD",356.22,356.2213,5.06,23,1,0)
Required when the address is not in the United States of America, 
"^DD",356.22,356.2213,5.06,23,2,0)
including its territories, or Canada, and the country in N404 has 
"^DD",356.22,356.2213,5.06,23,3,0)
administrative subdivisions such as but not limited to states, provinces, 
"^DD",356.22,356.2213,5.06,23,4,0)
cantons, etc. Use the country subdivision codes from Part 2 of ISO 3166.
"^DD",356.22,356.2213,5.06,"DT")
3150102
"^DD",356.22,356.2214,0)
PATIENT EVENT TRANSPORT SUB-FIELD^^.07^7
"^DD",356.22,356.2214,0,"DT")
3140423
"^DD",356.22,356.2214,0,"IX","B",356.2214,.01)

"^DD",356.22,356.2214,0,"NM","PATIENT EVENT TRANSPORT")

"^DD",356.22,356.2214,0,"UP")
356.22
"^DD",356.22,356.2214,.01,0)
LOCATION TYPE^MS^45:Drop-off location;FS:Final scheduled destination;ND:Next destination;PW:Pickup address;R3:Next scheduled destination;^0;1^Q
"^DD",356.22,356.2214,.01,1,0)
^.1
"^DD",356.22,356.2214,.01,1,1,0)
356.2214^B
"^DD",356.22,356.2214,.01,1,1,1)
S ^IBT(356.22,DA(1),14,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.2214,.01,1,1,2)
K ^IBT(356.22,DA(1),14,"B",$E(X,1,30),DA)
"^DD",356.22,356.2214,.01,3)
Enter a valid Location Type.
"^DD",356.22,356.2214,.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.2214,.01,21,1,0)
The Patient Event Transport code.
"^DD",356.22,356.2214,.01,"DT")
3150102
"^DD",356.22,356.2214,.02,0)
LOCATION NAME^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",356.22,356.2214,.02,3)
Enter 1-60 characters.
"^DD",356.22,356.2214,.02,21,0)
^^1^1^3150102^
"^DD",356.22,356.2214,.02,21,1,0)
The name of the location.
"^DD",356.22,356.2214,.02,"DT")
3150102
"^DD",356.22,356.2214,.03,0)
ADDRESS LINE 1^F^^0;3^K:$L(X)>55!($L(X)<1) X
"^DD",356.22,356.2214,.03,3)
Enter 1-55 characters.
"^DD",356.22,356.2214,.03,21,0)
^^1^1^3150102^
"^DD",356.22,356.2214,.03,21,1,0)
The first line of the location address.
"^DD",356.22,356.2214,.03,"DT")
3150102
"^DD",356.22,356.2214,.04,0)
ADDRESS LINE 2^F^^0;4^K:$L(X)>55!($L(X)<1) X
"^DD",356.22,356.2214,.04,3)
Enter 1-55 characters.
"^DD",356.22,356.2214,.04,21,0)
^^1^1^3150102^
"^DD",356.22,356.2214,.04,21,1,0)
The second line of the location address.
"^DD",356.22,356.2214,.04,"DT")
3150102
"^DD",356.22,356.2214,.05,0)
CITY^F^^0;5^K:$L(X)>30!($L(X)<2) X
"^DD",356.22,356.2214,.05,3)
Enter 2-30 characters.
"^DD",356.22,356.2214,.05,21,0)
^^1^1^3150102^
"^DD",356.22,356.2214,.05,21,1,0)
The city of the location.
"^DD",356.22,356.2214,.05,"DT")
3150102
"^DD",356.22,356.2214,.06,0)
STATE / PROVINCE^P5'^DIC(5,^0;6^Q
"^DD",356.22,356.2214,.06,3)
Select state / province code.
"^DD",356.22,356.2214,.06,21,0)
^^1^1^3150102^
"^DD",356.22,356.2214,.06,21,1,0)
The state or province of the location.
"^DD",356.22,356.2214,.06,"DT")
3150102
"^DD",356.22,356.2214,.07,0)
ZIP / POSTAL CODE^F^^0;7^K:$L(X)>15!($L(X)<3) X
"^DD",356.22,356.2214,.07,3)
Answer must be 3-15 characters in length.
"^DD",356.22,356.2214,.07,21,0)
^^2^2^3141119^
"^DD",356.22,356.2214,.07,21,1,0)
Note:  HIPAA is very intolerant of incomplete addresses, so
"^DD",356.22,356.2214,.07,21,2,0)
this needs to be correct.
"^DD",356.22,356.2214,.07,"DT")
3141119
"^DD",356.22,356.2215,0)
OTHER UMO SUB-FIELD^^.07^7
"^DD",356.22,356.2215,0,"DT")
3141203
"^DD",356.22,356.2215,0,"IX","B",356.2215,.01)

"^DD",356.22,356.2215,0,"NM","OTHER UMO")

"^DD",356.22,356.2215,0,"UP")
356.22
"^DD",356.22,356.2215,.01,0)
UMO TYPE^MS^00:Alternate insurer (commercial);CA:Carrier (Medicare Part B);GG:Intermediary (Medicare Part A);^0;1^Q
"^DD",356.22,356.2215,.01,1,0)
^.1
"^DD",356.22,356.2215,.01,1,1,0)
356.2215^B
"^DD",356.22,356.2215,.01,1,1,1)
S ^IBT(356.22,DA(1),15,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.2215,.01,1,1,2)
K ^IBT(356.22,DA(1),15,"B",$E(X,1,30),DA)
"^DD",356.22,356.2215,.01,3)
Enter a valid UMO Qualifier.
"^DD",356.22,356.2215,.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.2215,.01,21,1,0)
The Utilizaton Managment Organization Qualifier.
"^DD",356.22,356.2215,.01,"DT")
3150102
"^DD",356.22,356.2215,.02,0)
UMO NAME^P36'^DIC(36,^0;2^Q
"^DD",356.22,356.2215,.02,3)
Enter a valid UMO Name.
"^DD",356.22,356.2215,.02,21,0)
^^3^3^3141231^
"^DD",356.22,356.2215,.02,21,1,0)
The name of the payer who previously denied this request.
"^DD",356.22,356.2215,.02,21,2,0)
This is a REQUIRED field if the request has been denied
"^DD",356.22,356.2215,.02,21,3,0)
by another UMO.
"^DD",356.22,356.2215,.02,"DT")
3150102
"^DD",356.22,356.2215,.03,0)
UMO DENIAL REASON #1^*P356.021'O^IBT(356.021,^0;3^S DIC("S")="I $$UDREASN^IBTRH5I(.03)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2215,.03,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.021,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.021,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2215,.03,2.1)
UMO DENIAL REASON #1:DESCRIPTION
"^DD",356.22,356.2215,.03,3)
Enter a valid UMO Denial Reason. The entered code must not already be present in Denial Reasons #2, #3 or #4.
"^DD",356.22,356.2215,.03,12)
Select a valid UMO Denial Reason
"^DD",356.22,356.2215,.03,12.1)
S DIC("S")="I $$UDREASN^IBTRH5I(.03)"
"^DD",356.22,356.2215,.03,21,0)
^^3^3^3141231^
"^DD",356.22,356.2215,.03,21,1,0)
The Denial Reason for which the request was
"^DD",356.22,356.2215,.03,21,2,0)
previously denied. Up to 4 Denial Reasons 
"^DD",356.22,356.2215,.03,21,3,0)
are allowed.
"^DD",356.22,356.2215,.03,"DT")
3141231
"^DD",356.22,356.2215,.04,0)
UMO DENIAL REASON #2^*P356.021'O^IBT(356.021,^0;4^S DIC("S")="I $$UDREASN^IBTRH5I(.04)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2215,.04,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.021,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.021,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2215,.04,2.1)
UMO DENIAL REASON #2:DESCRIPTION
"^DD",356.22,356.2215,.04,3)
Enter a valid UMO Denial Reason. The entered code must not already be present in Denial Reasons #1, #3 or #4.
"^DD",356.22,356.2215,.04,12)
Select a valid UMO Denial Reason
"^DD",356.22,356.2215,.04,12.1)
S DIC("S")="I $$UDREASN^IBTRH5I(.04)"
"^DD",356.22,356.2215,.04,21,0)
^^3^3^3141231^
"^DD",356.22,356.2215,.04,21,1,0)
The Denial Reason for which the request was
"^DD",356.22,356.2215,.04,21,2,0)
previously denied. Up to 4 Denial Reasons
"^DD",356.22,356.2215,.04,21,3,0)
are allowed.
"^DD",356.22,356.2215,.04,"DT")
3141231
"^DD",356.22,356.2215,.05,0)
UMO DENIAL REASON #3^*P356.021'O^IBT(356.021,^0;5^S DIC("S")="I $$UDREASN^IBTRH5I(.05)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2215,.05,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.021,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.021,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2215,.05,2.1)
UMO DENIAL REASON #3:DESCRIPTION
"^DD",356.22,356.2215,.05,3)
Enter a valid UMO Denial Reason. The entered code must not already be present in Denial Reasons #1, #2, or #4.
"^DD",356.22,356.2215,.05,12)
Select a valid UMO Denial Reason
"^DD",356.22,356.2215,.05,12.1)
S DIC("S")="I $$UDREASN^IBTRH5I(.05)"
"^DD",356.22,356.2215,.05,21,0)
^^3^3^3141231^
"^DD",356.22,356.2215,.05,21,1,0)
The Denial Reason for which the request was
"^DD",356.22,356.2215,.05,21,2,0)
previously denied. Up to 4 Denial Reasons
"^DD",356.22,356.2215,.05,21,3,0)
are allowed.
"^DD",356.22,356.2215,.05,"DT")
3141231
"^DD",356.22,356.2215,.06,0)
UMO DENIAL REASON #4^*P356.021'O^IBT(356.021,^0;6^S DIC("S")="I $$UDREASN^IBTRH5I(.06)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2215,.06,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.021,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.021,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2215,.06,2.1)
UMO DENIAL REASON #4:DESCRIPTION
"^DD",356.22,356.2215,.06,3)
Enter a valid UMO Denial Reason. The entered code must not already be present in Denial Reasons #1, #2 or #3.
"^DD",356.22,356.2215,.06,12)
Select a valid UMO Denial Reason
"^DD",356.22,356.2215,.06,12.1)
S DIC("S")="I $$UDREASN^IBTRH5I(.06)"
"^DD",356.22,356.2215,.06,21,0)
^^3^3^3141231^
"^DD",356.22,356.2215,.06,21,1,0)
The Denial Reason for which the request was
"^DD",356.22,356.2215,.06,21,2,0)
previously denied. Up to 4 Denial Reasons
"^DD",356.22,356.2215,.06,21,3,0)
are allowed.
"^DD",356.22,356.2215,.06,"DT")
3141231
"^DD",356.22,356.2215,.07,0)
UMO DENIAL DATE^D^^0;7^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.2215,.07,3)
Enter a valid date.
"^DD",356.22,356.2215,.07,21,0)
^^1^1^3141231^
"^DD",356.22,356.2215,.07,21,1,0)
The Date on which this request was previously denied.
"^DD",356.22,356.2215,.07,"DT")
3141231
"^DD",356.22,356.2216,0)
SERVICE LINE SUB-FIELD^^12.02^66
"^DD",356.22,356.2216,0,"DT")
3160223
"^DD",356.22,356.2216,0,"IX","B",356.2216,.01)

"^DD",356.22,356.2216,0,"NM","SERVICE LINE")

"^DD",356.22,356.2216,0,"UP")
356.22
"^DD",356.22,356.2216,.01,0)
SEQUENCE^MNJ6,0^^0;1^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1.N) X
"^DD",356.22,356.2216,.01,1,0)
^.1
"^DD",356.22,356.2216,.01,1,1,0)
356.2216^B
"^DD",356.22,356.2216,.01,1,1,1)
S ^IBT(356.22,DA(1),16,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.2216,.01,1,1,2)
K ^IBT(356.22,DA(1),16,"B",$E(X,1,30),DA)
"^DD",356.22,356.2216,.01,3)
Type a number between 1 and 999999, 0 decimal digits.
"^DD",356.22,356.2216,.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,.01,21,1,0)
The Sequence number for this service line.
"^DD",356.22,356.2216,.01,"DT")
3141231
"^DD",356.22,356.2216,.02,0)
CERTIFICATION TYPE CODE^P356.002'O^IBT(356.002,^0;2^Q
"^DD",356.22,356.2216,.02,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.002,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.002,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2216,.02,2.1)
CERTIFICATION TYPE CODE:DESCRIPTION
"^DD",356.22,356.2216,.02,3)
Enter a valid Certification Type code.
"^DD",356.22,356.2216,.02,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,.02,21,1,0)
The Certification Type code for this service line.
"^DD",356.22,356.2216,.02,"DT")
3141231
"^DD",356.22,356.2216,.03,0)
SERVICE TYPE CODE^*P365.013'O^IBE(365.013,^0;3^S DIC("S")="I $$SVCTYPE^IBTRH5I()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,.03,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.013,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.013,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2216,.03,2.1)
SERVICE TYPE CODE:DESCRIPTION
"^DD",356.22,356.2216,.03,3)
Enter a valid Service Type.
"^DD",356.22,356.2216,.03,12)
Select a valid Service Type from the list
"^DD",356.22,356.2216,.03,12.1)
S DIC("S")="I $$SVCTYPE^IBTRH5I()"
"^DD",356.22,356.2216,.03,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,.03,21,1,0)
The Service Type of the Service Line.  Enter 
"^DD",356.22,356.2216,.03,21,2,0)
Service Line data ONLY if it differs from the
"^DD",356.22,356.2216,.03,21,3,0)
Patient Event data.
"^DD",356.22,356.2216,.03,"DT")
3141231
"^DD",356.22,356.2216,.04,0)
FACILITY TYPE QUALIFIER^S^A:Uniform Billing Claim Form Bill Type;B:Place of Service Codes for Professional or Dental Services;^0;4^Q
"^DD",356.22,356.2216,.04,3)
Enter a valid Service Location Qualifier.
"^DD",356.22,356.2216,.04,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,.04,21,1,0)
The Service Location Qualifier of the Service Line.
"^DD",356.22,356.2216,.04,21,2,0)
Enter Service Line data ONLY if it differs from the
"^DD",356.22,356.2216,.04,21,3,0)
Patient Event data.
"^DD",356.22,356.2216,.04,"DT")
3141231
"^DD",356.22,356.2216,.05,0)
FACILITY TYPE^P353.1'^IBE(353.1,^0;5^Q
"^DD",356.22,356.2216,.05,3)
Enter a valid Facility Type code.
"^DD",356.22,356.2216,.05,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,.05,21,1,0)
The Facility Type code for this service line. This
"^DD",356.22,356.2216,.05,21,2,0)
field is only populated if the FACILITY TYPE QUALIFIER
"^DD",356.22,356.2216,.05,21,3,0)
field for this service line is set to A.
"^DD",356.22,356.2216,.05,"DT")
3141231
"^DD",356.22,356.2216,.06,0)
LOCATION OF CARE^S^1:Hospital - Inpt or Opt (includes clinics);2:Skilled Nursing (NHCU);3:Home Health Agency;7:Clinic (only independent/satellite);8:Spec. Facility Hosp/Amb Surg Ctr;^0;6^Q
"^DD",356.22,356.2216,.06,3)
Enter a valid Service Location.
"^DD",356.22,356.2216,.06,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,.06,21,1,0)
The Service Location for this Service Line.  Enter
"^DD",356.22,356.2216,.06,21,2,0)
Service Line data ONLY if it differs from the
"^DD",356.22,356.2216,.06,21,3,0)
Patient Event data.
"^DD",356.22,356.2216,.06,"DT")
3141231
"^DD",356.22,356.2216,.07,0)
BILL CLASSIFICATION^S^8:Swingbed;1:Inpatient (Medicare-A);2:Humanit. Emerg. (Inpatient/Medicare-B);3:Outpatient;4:Humanit. Emerg. (Outpatient/ESRD);^0;7^Q
"^DD",356.22,356.2216,.07,3)
Enter a valid Bill Classification.
"^DD",356.22,356.2216,.07,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,.07,21,1,0)
The Bill Classification code for this service line.
"^DD",356.22,356.2216,.07,21,2,0)
This field is only populated if FACILITY TYPE QUALIFIER
"^DD",356.22,356.2216,.07,21,3,0)
field for this service line is set to B.
"^DD",356.22,356.2216,.07,"DT")
3141231
"^DD",356.22,356.2216,.08,0)
TRACE NUMBER^F^^0;8^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.2216,.08,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.2216,.08,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,.08,21,1,0)
The trace number for this service line.
"^DD",356.22,356.2216,.08,"DT")
3141231
"^DD",356.22,356.2216,.09,0)
TRACE ASSIGNING ENTITY^F^^0;9^K:$L(X)>10!($L(X)<10) X
"^DD",356.22,356.2216,.09,3)
Answer must be 10 characters in length.
"^DD",356.22,356.2216,.09,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,.09,21,1,0)
The identifier of the trace assigning entity
"^DD",356.22,356.2216,.09,21,2,0)
for this service line.
"^DD",356.22,356.2216,.09,"DT")
3141231
"^DD",356.22,356.2216,.1,0)
TRACE ASSIGNING ENTITY DESC.^F^^0;10^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.2216,.1,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.2216,.1,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,.1,21,1,0)
The additional identifier of the trace assigning
"^DD",356.22,356.2216,.1,21,2,0)
entity for this service line.
"^DD",356.22,356.2216,.1,"DT")
3141231
"^DD",356.22,356.2216,.11,0)
SERVICE DATE^D^^0;11^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.2216,.11,3)
Enter a valid Service Date.
"^DD",356.22,356.2216,.11,21,0)
^.001^3^3^3150225^^
"^DD",356.22,356.2216,.11,21,1,0)
The Service Date of this service line.  Enter
"^DD",356.22,356.2216,.11,21,2,0)
Service Line data ONLY if it differs from the
"^DD",356.22,356.2216,.11,21,3,0)
Patient Event data.
"^DD",356.22,356.2216,.11,"DT")
3141231
"^DD",356.22,356.2216,.12,0)
CERTIFICATION ISSUE DATE^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.2216,.12,3)
Enter a valid Date.
"^DD",356.22,356.2216,.12,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,.12,21,1,0)
The date when the UMO issued the authorization.
"^DD",356.22,356.2216,.12,"DT")
3141231
"^DD",356.22,356.2216,.13,0)
CERTIFICATION EXPIRATION DATE^D^^0;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.2216,.13,3)
Enter a valid Date.
"^DD",356.22,356.2216,.13,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,.13,21,1,0)
The expiration date on which the authorization will expire.
"^DD",356.22,356.2216,.13,"DT")
3141231
"^DD",356.22,356.2216,.14,0)
CERTIFICATION EFFECTIVE DATE^D^^0;14^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.2216,.14,3)
Enter a valid Date.
"^DD",356.22,356.2216,.14,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,.14,21,1,0)
The effective date for this authorization.
"^DD",356.22,356.2216,.14,"DT")
3141231
"^DD",356.22,356.2216,.15,0)
REQUEST CATEGORY^*P356.001'^IBT(356.001,^0;15^S DIC("S")="I $$REQCAT^IBTRH5C(.15)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,.15,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.001,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.001,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2216,.15,2.1)
REQUEST CATEGORY:DESCRIPTION
"^DD",356.22,356.2216,.15,3)
Enter a valid Request Type code.
"^DD",356.22,356.2216,.15,12)
Only allows Request Categories that are valid for a service line.
"^DD",356.22,356.2216,.15,12.1)
S DIC("S")="I $$REQCAT^IBTRH5C(.15)"
"^DD",356.22,356.2216,.15,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,.15,21,1,0)
The Request Type for this Service Line.
"^DD",356.22,356.2216,.15,"DT")
3150202
"^DD",356.22,356.2216,.16,0)
CERTIFICATION THRU DATE^D^^0;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.2216,.16,3)
Enter a valid date.
"^DD",356.22,356.2216,.16,21,0)
^^4^4^3141231^
"^DD",356.22,356.2216,.16,21,1,0)
The certification effective through date, provided by a
"^DD",356.22,356.2216,.16,21,2,0)
278 Response message via X12 segment DTP Certification
"^DD",356.22,356.2216,.16,21,3,0)
Effective Date. Field DTP03 may contain a date range.
"^DD",356.22,356.2216,.16,21,4,0)
The through date of this date range is placed in this field.
"^DD",356.22,356.2216,.16,"DT")
3141231
"^DD",356.22,356.2216,.17,0)
SERVICE THRU DATE^D^^0;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.2216,.17,3)
Enter a valid date.
"^DD",356.22,356.2216,.17,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,.17,21,1,0)
The through date of service, as reported in a 278 Response
"^DD",356.22,356.2216,.17,21,2,0)
message in the DTP Service Level 12 segment (Loop 2000F)
"^DD",356.22,356.2216,.17,21,3,0)
in field DTP03 when DTP02 equals RD8.
"^DD",356.22,356.2216,.17,"DT")
3141231
"^DD",356.22,356.2216,1.01,0)
PROCEDURE CODE TYPE^*S^HC:CPT/HCPCS Code;N4:NDC Code;ZZ:ICD-10-PCS;AD:CPT/HCPCS Dental Code;^1;1^Q
"^DD",356.22,356.2216,1.01,3)
Enter a valid Procedure Coding Method.
"^DD",356.22,356.2216,1.01,12)

"^DD",356.22,356.2216,1.01,12.1)
S DIC("S")="I $$PROCTYPE^IBTRH5B()"
"^DD",356.22,356.2216,1.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,1.01,21,1,0)
The Procedure Coding Method for the related procedure.
"^DD",356.22,356.2216,1.01,"DT")
3151223
"^DD",356.22,356.2216,1.02,0)
PROCEDURE #1^V^^1;2^
"^DD",356.22,356.2216,1.02,3)
Enter a valid Procedure.
"^DD",356.22,356.2216,1.02,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,1.02,21,1,0)
The Procedure associated with this Service Line.  You may
"^DD",356.22,356.2216,1.02,21,2,0)
enter a beginning Procedure code if you want to enter a
"^DD",356.22,356.2216,1.02,21,3,0)
range of codes.
"^DD",356.22,356.2216,1.02,"DT")
3150109
"^DD",356.22,356.2216,1.02,"V",0)
^.12P^2^2
"^DD",356.22,356.2216,1.02,"V",1,0)
81^HCPCS (CPT) Procedure Codes^1^C^y^n
"^DD",356.22,356.2216,1.02,"V",1,1)
S DIC("S")="I $$PROC^IBTRH5B(1.02)"
"^DD",356.22,356.2216,1.02,"V",1,2)
Restricts look-ups based upon the Procedure Code Type.
"^DD",356.22,356.2216,1.02,"V",2,0)
80.1^ICD OPERATION/PROCEDURE^2^I^y^n
"^DD",356.22,356.2216,1.02,"V",2,1)
S DIC("S")="I $$PROC^IBTRH5B(1.02)"
"^DD",356.22,356.2216,1.02,"V",2,2)
Restricts look-ups based upon the Procedure Code Type.
"^DD",356.22,356.2216,1.03,0)
PROCEDURE CODE #2^V^^1;3^
"^DD",356.22,356.2216,1.03,3)
Enter a valid Procedure Code (last in range).
"^DD",356.22,356.2216,1.03,21,0)
^^4^4^3141231^
"^DD",356.22,356.2216,1.03,21,1,0)
The Procedure associated with this Service Line.  You may
"^DD",356.22,356.2216,1.03,21,2,0)
enter an ending Procedure code if you want to enter a
"^DD",356.22,356.2216,1.03,21,3,0)
range of codes.  All associated data will apply to the
"^DD",356.22,356.2216,1.03,21,4,0)
range of codes.
"^DD",356.22,356.2216,1.03,"DT")
3150109
"^DD",356.22,356.2216,1.03,"V",0)
^.12P^2^2
"^DD",356.22,356.2216,1.03,"V",1,0)
81^HCPCS (CPT) Procedure Codes^1^C^y^n
"^DD",356.22,356.2216,1.03,"V",1,1)
S DIC("S")="I $$PROC^IBTRH5B(1.03)"
"^DD",356.22,356.2216,1.03,"V",1,2)
Restricts look-ups based upon the Procedure Code Type.
"^DD",356.22,356.2216,1.03,"V",2,0)
80.1^ICD OPERATION/PROCEDURE^2^I^y^n
"^DD",356.22,356.2216,1.03,"V",2,1)
S DIC("S")="I $$PROC^IBTRH5B(1.03)"
"^DD",356.22,356.2216,1.03,"V",2,2)
Restricts look-ups based upon the Procedure Code Type.
"^DD",356.22,356.2216,1.04,0)
PROCEDURE MODIFIER #1^*P81.3'^DIC(81.3,^1;4^S DIC("S")="I $$PROCMOD^IBTRH5B(1.04)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,1.04,3)
Enter a valid Procedure Modifier. The entered code must not already be present in Procedure Modifiers #2, #3 or #4.
"^DD",356.22,356.2216,1.04,12)
Only allows Procedure Modifier Codes that are not already present in in Procedure Modifiers #2, #3 or #4.
"^DD",356.22,356.2216,1.04,12.1)
S DIC("S")="I $$PROCMOD^IBTRH5B(1.04)"
"^DD",356.22,356.2216,1.04,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,1.04,21,1,0)
The Procedure Modifier used to further clarify the
"^DD",356.22,356.2216,1.04,21,2,0)
procedure.  You can enter up to four modifiers.
"^DD",356.22,356.2216,1.04,"DT")
3141231
"^DD",356.22,356.2216,1.05,0)
PROCEDURE MODIFIER #2^*P81.3'^DIC(81.3,^1;5^S DIC("S")="I $$PROCMOD^IBTRH5B(1.05)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,1.05,3)
Enter a valid Procedure Modifier. The entered code must not already be present in Procedure Modifiers #1, #3 or #4.
"^DD",356.22,356.2216,1.05,12)
Only allows Procedure Modifier Codes that are not already present in in Procedure Modifiers #1, #3 or #4.
"^DD",356.22,356.2216,1.05,12.1)
S DIC("S")="I $$PROCMOD^IBTRH5B(1.05)"
"^DD",356.22,356.2216,1.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,1.05,21,1,0)
The Procedure Modifier used to further clarify the
"^DD",356.22,356.2216,1.05,21,2,0)
procedure.  You can enter up to four modifiers.
"^DD",356.22,356.2216,1.05,"DT")
3141231
"^DD",356.22,356.2216,1.06,0)
PROCEDURE MODIFIER #3^*P81.3'^DIC(81.3,^1;6^S DIC("S")="I $$PROCMOD^IBTRH5B(1.06)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,1.06,3)
Enter a valid Procedure Modifier. The entered code must not already be present on Procedure Modifiers #1, #2 or #4.
"^DD",356.22,356.2216,1.06,12)
Only allows Procedure Modifier Codes that are not already present in in Procedure Modifiers #1, #2 or #4.
"^DD",356.22,356.2216,1.06,12.1)
S DIC("S")="I $$PROCMOD^IBTRH5B(1.06)"
"^DD",356.22,356.2216,1.06,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,1.06,21,1,0)
The Procedure Modifier used to further clarify the
"^DD",356.22,356.2216,1.06,21,2,0)
procedure.  You can enter up to four modifiers.
"^DD",356.22,356.2216,1.06,"DT")
3141231
"^DD",356.22,356.2216,1.07,0)
PROCEDURE MODIFIER #4^*P81.3'^DIC(81.3,^1;7^S DIC("S")="I $$PROCMOD^IBTRH5B(1.07)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,1.07,3)
Enter a valid Procedure Modifier. The entered code must not already be present on Procedure Modifiers #1, #2 or #3.
"^DD",356.22,356.2216,1.07,12)
Only allows Procedure Modifier Codes that are not already present in in Procedure Modifiers #1, #2 or #3.
"^DD",356.22,356.2216,1.07,12.1)
S DIC("S")="I $$PROCMOD^IBTRH5B(1.07)"
"^DD",356.22,356.2216,1.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,1.07,21,1,0)
The Procedure Modifier used to further clarify the
"^DD",356.22,356.2216,1.07,21,2,0)
procedure.  You can enter up to four modifiers.
"^DD",356.22,356.2216,1.07,"DT")
3141231
"^DD",356.22,356.2216,1.08,0)
PROCEDURE DESCRIPTION^F^^1;8^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.2216,1.08,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.2216,1.08,21,0)
^^5^5^3141231^
"^DD",356.22,356.2216,1.08,21,1,0)
The 1-80 character, free text description of when a
"^DD",356.22,356.2216,1.08,21,2,0)
procedure is a NOC procedure, or, if Dental, enter the
"^DD",356.22,356.2216,1.08,21,3,0)
Date of Initial Impression, Date of Initial Preparation
"^DD",356.22,356.2216,1.08,21,4,0)
Crown, Initial Preparation Tooth Number or Initial
"^DD",356.22,356.2216,1.08,21,5,0)
Endodontic TX.
"^DD",356.22,356.2216,1.08,"DT")
3141231
"^DD",356.22,356.2216,1.09,0)
SERVICE LINE AMOUNT^NJ18,2^^1;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999999999)!(X<0) X
"^DD",356.22,356.2216,1.09,3)
Type a dollar amount between 0 and 999999999999999, 2 decimal digits.
"^DD",356.22,356.2216,1.09,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,1.09,21,1,0)
The dollar amount associated with this service line.
"^DD",356.22,356.2216,1.09,"DT")
3141231
"^DD",356.22,356.2216,1.1,0)
UNITS CODE^*S^F2:International unit;MJ:Minutes;UN:Unit;DA:Days;^1;10^Q
"^DD",356.22,356.2216,1.1,3)
Enter a valid Basis of Measurement code.
"^DD",356.22,356.2216,1.1,12)
'F2' is used to indicate dosage amount for NDC code.
"^DD",356.22,356.2216,1.1,12.1)
S DIC("S")="I $$UNITS^IBTRH5H()"
"^DD",356.22,356.2216,1.1,21,0)
^^2^2^3150106^
"^DD",356.22,356.2216,1.1,21,1,0)
The Basis of Measurement for how many times a
"^DD",356.22,356.2216,1.1,21,2,0)
procedure is done.
"^DD",356.22,356.2216,1.1,"DT")
3150106
"^DD",356.22,356.2216,1.11,0)
UNIT COUNT^NJ2,0^^1;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1.N) X
"^DD",356.22,356.2216,1.11,3)
Enter a whole number between 1 and 15.
"^DD",356.22,356.2216,1.11,21,0)
^^2^2^3150113^
"^DD",356.22,356.2216,1.11,21,1,0)
The number which indicates how many times this
"^DD",356.22,356.2216,1.11,21,2,0)
procedure was performed.
"^DD",356.22,356.2216,1.11,"DT")
3150113
"^DD",356.22,356.2216,1.12,0)
SERVICE LINE TYPE^RS^P:Professional;I:Institutional;D:Dental;^1;12^Q
"^DD",356.22,356.2216,1.12,3)
Enter a valid Service Line Type Code.
"^DD",356.22,356.2216,1.12,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,1.12,21,1,0)
This determines if this service line is for a
"^DD",356.22,356.2216,1.12,21,2,0)
professional, institutional, or dental service.
"^DD",356.22,356.2216,1.12,"DT")
3141231
"^DD",356.22,356.2216,2.01,0)
DIAGNOSIS #1^*S^1:1st Diagnosis;2:2nd Diagnosis;3:3rd Diagnosis;4:4th Diagnosis;5:5th Diagnosis;6:6th Diagnosis;7:7th Diagnosis;8:8th Diagnosis;9:9th Diagnosis;10:10th Diagnosis;11:11th Diagnosis;12:12th Diagnosis;^2;1^Q
"^DD",356.22,356.2216,2.01,3)
Enter a number between 1 and 12 that corresponds to the appropriate Diagnosis Code Line.
"^DD",356.22,356.2216,2.01,12)
The selected Diagnosis must have already been entered in the entry's Diagnoses and must not already be entered for Diagnosis #2, #3 or #4.
"^DD",356.22,356.2216,2.01,12.1)
S DIC("S")="I $$SLDXDUP^IBTRH5C(2.01)"
"^DD",356.22,356.2216,2.01,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,2.01,21,1,0)
The diagnosis that is directly related to this
"^DD",356.22,356.2216,2.01,21,2,0)
procedure.  You can link each procedure to a maximum
"^DD",356.22,356.2216,2.01,21,3,0)
of four pointers.
"^DD",356.22,356.2216,2.01,"DT")
3141231
"^DD",356.22,356.2216,2.02,0)
DIAGNOSIS #2^*S^1:1st Diagnosis;2:2nd Diagnosis;3:3rd Diagnosis;4:4th Diagnosis;5:5th Diagnosis;6:6th Diagnosis;7:7th Diagnosis;8:8th Diagnosis;9:9th Diagnosis;10:10th Diagnosis;11:11th Diagnosis;12:12th Diagnosis;^2;2^Q
"^DD",356.22,356.2216,2.02,3)
Enter a number between 1 and 12 that corresponds to the appropriate Diagnosis Code Line.
"^DD",356.22,356.2216,2.02,12)
The selected Diagnosis must have already been entered in the entry's Diagnoses and must not already be entered for Diagnosis #1, #3 or #4.
"^DD",356.22,356.2216,2.02,12.1)
S DIC("S")="I $$SLDXDUP^IBTRH5C(2.02)"
"^DD",356.22,356.2216,2.02,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,2.02,21,1,0)
The diagnoses that is directly related to this
"^DD",356.22,356.2216,2.02,21,2,0)
procedure.  You can link each procedure to a maximum
"^DD",356.22,356.2216,2.02,21,3,0)
of four pointers.
"^DD",356.22,356.2216,2.02,"DT")
3141231
"^DD",356.22,356.2216,2.03,0)
DIAGNOSIS #3^*S^1:1st Diagnosis;2:2nd Diagnosis;3:3rd Diagnosis;4:4th Diagnosis;5:5th Diagnosis;6:6th Diagnosis;7:7th Diagnosis;8:8th Diagnosis;9:9th Diagnosis;10:10th Diagnosis;11:11th Diagnosis;12:12th Diagnosis;^2;3^Q
"^DD",356.22,356.2216,2.03,3)
Enter a number between 1 and 12 that corresponds to the appropriate Diagnosis Code Line.
"^DD",356.22,356.2216,2.03,12)
The selected Diagnosis must have already been entered in the entry's Diagnoses and must not already be entered for Diagnosis #1, #2 or #4.
"^DD",356.22,356.2216,2.03,12.1)
S DIC("S")="I $$SLDXDUP^IBTRH5C(2.03)"
"^DD",356.22,356.2216,2.03,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,2.03,21,1,0)
The diagnoses that is directly related to this
"^DD",356.22,356.2216,2.03,21,2,0)
procedure.  You can link each procedure to a maximum
"^DD",356.22,356.2216,2.03,21,3,0)
of four pointers.
"^DD",356.22,356.2216,2.03,"DT")
3141231
"^DD",356.22,356.2216,2.04,0)
DIAGNOSIS #4^*S^1:1st Diagnosis;2:2nd Diagnosis;3:3rd Diagnosis;4:4th Diagnosis;5:5th Diagnosis;6:6th Diagnosis;7:7th Diagnosis;8:8th Diagnosis;9:9th Diagnosis;10:10th Diagnosis;11:11th Diagnosis;12:12th Diagnosis;^2;4^Q
"^DD",356.22,356.2216,2.04,3)
Enter a number between 1 and 12 that corresponds to the appropriate Diagnosis Code Line.
"^DD",356.22,356.2216,2.04,12)
The selected Diagnosis must have already been entered in the entry's Diagnoses and must not already be entered for Diagnosis #1, #2 or #3.
"^DD",356.22,356.2216,2.04,12.1)
S DIC("S")="I $$SLDXDUP^IBTRH5C(2.04)"
"^DD",356.22,356.2216,2.04,21,0)
^.001^3^3^3150413^^
"^DD",356.22,356.2216,2.04,21,1,0)
The diagnoses that is directly related to this
"^DD",356.22,356.2216,2.04,21,2,0)
procedure.  You can link each procedure to a maximum
"^DD",356.22,356.2216,2.04,21,3,0)
of four pointers.
"^DD",356.22,356.2216,2.04,"DT")
3150413
"^DD",356.22,356.2216,2.05,0)
EPSDT?^S^N:No;Y:Yes;^2;5^Q
"^DD",356.22,356.2216,2.05,3)
Enter Y if this procedure is associated with early and periodic screening for diagnosis and treatment of children (EPSDT).
"^DD",356.22,356.2216,2.05,21,0)
^^3^3^3150106^
"^DD",356.22,356.2216,2.05,21,1,0)
Determines whether or not the selected procedure
"^DD",356.22,356.2216,2.05,21,2,0)
is associated with early and periodic screening for
"^DD",356.22,356.2216,2.05,21,3,0)
diagnosis and treatment of children (EPSDT).
"^DD",356.22,356.2216,2.05,"DT")
3150106
"^DD",356.22,356.2216,2.06,0)
REVENUE CODE^P399.2'O^DGCR(399.2,^2;6^Q
"^DD",356.22,356.2216,2.06,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^DGCR(399.2,+D0,0)) D0=-1 S Y(101)=$S($D(^DGCR(399.2,D0,0)):^(0),1:"") S X=$P(Y(101),U,4) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2216,2.06,2.1)
REVENUE CODE:DESCRIPTION
"^DD",356.22,356.2216,2.06,3)
Enter a valid Revenue Code.
"^DD",356.22,356.2216,2.06,21,0)
^^4^4^3141231^
"^DD",356.22,356.2216,2.06,21,1,0)
The Revenue Code for this service line if you are
"^DD",356.22,356.2216,2.06,21,2,0)
requesting approval based on a specific revenue code.
"^DD",356.22,356.2216,2.06,21,3,0)
Enter Service Line data ONLY if it differs from the Patient
"^DD",356.22,356.2216,2.06,21,4,0)
Event data.
"^DD",356.22,356.2216,2.06,"DT")
3141231
"^DD",356.22,356.2216,2.07,0)
RATE^NJ13,2^^2;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999999)!(X<0) X
"^DD",356.22,356.2216,2.07,3)
Type a dollar amount between 0 and 9999999999, 2 decimal digits.
"^DD",356.22,356.2216,2.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,2.07,21,1,0)
Enter the monetary amount of the per unit rate of the
"^DD",356.22,356.2216,2.07,21,2,0)
associated hospital accommodation revenue code.
"^DD",356.22,356.2216,2.07,"DT")
3141231
"^DD",356.22,356.2216,2.08,0)
NURSING HOME STATUS^*P356.011'^IBT(356.011,^2;8^S DIC("S")="I $$NHOME^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,2.08,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.011,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.011,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2216,2.08,2.1)
NURSING HOME STATUS:DESCRIPTION
"^DD",356.22,356.2216,2.08,3)
Enter a valid Nursing Home Status code.
"^DD",356.22,356.2216,2.08,12)
Valid codes specifying the status of a nursing home resident at the time of service.
"^DD",356.22,356.2216,2.08,12.1)
S DIC("S")="I $$NHOME^IBTRH5H()"
"^DD",356.22,356.2216,2.08,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,2.08,21,1,0)
The REQUIRED Nursing Home (SNF) Residential status.
"^DD",356.22,356.2216,2.08,21,2,0)
Enter Service Line data ONLY if it differs from the
"^DD",356.22,356.2216,2.08,21,3,0)
Patient Event data.
"^DD",356.22,356.2216,2.08,"DT")
3150106
"^DD",356.22,356.2216,2.09,0)
NURSING HOME LEVEL OF CARE^P356.019'O^IBT(356.019,^2;9^Q
"^DD",356.22,356.2216,2.09,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.019,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.019,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2216,2.09,2.1)
NURSING HOME LEVEL OF CARE:DESCRIPTION
"^DD",356.22,356.2216,2.09,3)
Enter a valid Nursing Home Level of Care code.
"^DD",356.22,356.2216,2.09,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,2.09,21,1,0)
The Level of Care provided by the Nursing Home. Enter
"^DD",356.22,356.2216,2.09,21,2,0)
Service Line data ONLY if it differs from the Patient
"^DD",356.22,356.2216,2.09,21,3,0)
Event data.
"^DD",356.22,356.2216,2.09,"DT")
3141231
"^DD",356.22,356.2216,3.01,0)
ORAL CAVITY DESIGNATION #1^*S^00:Entire Oral Cavity;01:Maxillary Arch;02:Mandibular Arch;10:Upper Right Quadrant;20:Upper Left Quadrant;30:Lower Left Quadrant;40:Lower Right Quadrant;^3;1^Q
"^DD",356.22,356.2216,3.01,3)
Enter a valid Oral Cavity Designation code. The entered code must not already be present in Oral Cavity Designations #2, #3, #4 or #5.
"^DD",356.22,356.2216,3.01,12)
Only allows Oral Cavity Designation Codes that are not already present in in Oral Cavity Designations #2, #3, #4 or #5.
"^DD",356.22,356.2216,3.01,12.1)
S DIC("S")="I $$ORALCAV^IBTRH5B(3.01)"
"^DD",356.22,356.2216,3.01,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,3.01,21,1,0)
The first Oral Cavity Designation code.  You can
"^DD",356.22,356.2216,3.01,21,2,0)
enter up to five codes.
"^DD",356.22,356.2216,3.01,"DT")
3141231
"^DD",356.22,356.2216,3.02,0)
ORAL CAVITY DESIGNATION #2^*S^00:Entire Oral Cavity;01:Maxillary Arch;02:Mandibular Arch;10:Upper Right Quadrant;20:Upper Left Quadrant;30:Lower Left Quadrant;40:Lower Right Quadrant;^3;2^Q
"^DD",356.22,356.2216,3.02,3)
Enter a valid Oral Cavity Designation Code. The entered code must not already be present in Oral Cavity Designations #1, #3, #4 or #5.
"^DD",356.22,356.2216,3.02,12)
Only allows Oral Cavity Designation Codes that are not already present in in Oral Cavity Designations #1, #3, #4 or #5.
"^DD",356.22,356.2216,3.02,12.1)
S DIC("S")="I $$ORALCAV^IBTRH5B(3.02)"
"^DD",356.22,356.2216,3.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,3.02,21,1,0)
The second Oral Cavity Designation code. You can
"^DD",356.22,356.2216,3.02,21,2,0)
enter up to five codes.
"^DD",356.22,356.2216,3.02,"DT")
3150102
"^DD",356.22,356.2216,3.03,0)
ORAL CAVITY DESIGNATION #3^*S^00:Entire Oral Cavity;01:Maxillary Arch;02:Mandibular Arch;10:Upper Right Quadrant;20:Upper Left Quadrant;30:Lower Left Quadrant;40:Lower Right Quadrant;^3;3^Q
"^DD",356.22,356.2216,3.03,3)
Enter a valid Oral Cavity Designation Code. The entered code must not already be present in Oral Cavity Designations #1, #2, #4 or #5.
"^DD",356.22,356.2216,3.03,12)
Only allows Oral Cavity Designation Codes that are not already present in in Oral Cavity Designations #1, #2, #4 or #5.
"^DD",356.22,356.2216,3.03,12.1)
S DIC("S")="I $$ORALCAV^IBTRH5B(3.03)"
"^DD",356.22,356.2216,3.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,3.03,21,1,0)
The third Oral Cavity Designation code. You can
"^DD",356.22,356.2216,3.03,21,2,0)
enter up to five codes.
"^DD",356.22,356.2216,3.03,"DT")
3141231
"^DD",356.22,356.2216,3.04,0)
ORAL CAVITY DESIGNATION #4^*S^00:Entire Oral Cavity;01:Maxillary Arch;02:Mandibular Arch;10:Upper Right Quadrant;20:Upper Left Quadrant;30:Lower Left Quadrant;40:Lower Right Quadrant;^3;4^Q
"^DD",356.22,356.2216,3.04,3)
Enter a valid Oral Cavity Designation code. The entered code must not already be present in Oral Cavity Designations #1, #2, #3 or #5.
"^DD",356.22,356.2216,3.04,12)
Only allows Oral Cavity Designation Codes that are not already present in in Oral Cavity Designations #1, #2, #3 or #5.
"^DD",356.22,356.2216,3.04,12.1)
S DIC("S")="I $$ORALCAV^IBTRH5B(3.04)"
"^DD",356.22,356.2216,3.04,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,3.04,21,1,0)
The fourth Oral Cavity Designation code. You can
"^DD",356.22,356.2216,3.04,21,2,0)
enter up to five codes.
"^DD",356.22,356.2216,3.04,"DT")
3150106
"^DD",356.22,356.2216,3.05,0)
ORAL CAVITY DESIGNATION #5^*S^00:Entire Oral Cavity;01:Maxillary Arch;02:Mandibular Arch;10:Upper Right Quadrant;20:Upper Left Quadrant;30:Lower Left Quadrant;40:Lower Right Quadrant;^3;5^Q
"^DD",356.22,356.2216,3.05,3)
Enter a valid Oral Cavity Designation code. The entered code must not already be present in Oral Cavity Designations #1, #2, #3 or #4.
"^DD",356.22,356.2216,3.05,12)
Only allows Oral Cavity Designation Codes that are not already present in in Oral Cavity Designations #1, #2, #3 or #4.
"^DD",356.22,356.2216,3.05,12.1)
S DIC("S")="I $$ORALCAV^IBTRH5B(3.05)"
"^DD",356.22,356.2216,3.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,3.05,21,1,0)
The fifth Oral Cavity Designation code. You can
"^DD",356.22,356.2216,3.05,21,2,0)
enter up to five codes.
"^DD",356.22,356.2216,3.05,"DT")
3141231
"^DD",356.22,356.2216,3.06,0)
PLACEMENT STATUS^S^I:Initial placement;R:Replacement;^3;6^Q
"^DD",356.22,356.2216,3.06,3)
Enter a valid Placement Status code.
"^DD",356.22,356.2216,3.06,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,3.06,21,1,0)
The code that indicates the placement status of the
"^DD",356.22,356.2216,3.06,21,2,0)
prosthetic.
"^DD",356.22,356.2216,3.06,"DT")
3141231
"^DD",356.22,356.2216,3.07,0)
DENTAL WORK DESCRIPTION^F^^3;7^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.2216,3.07,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.2216,3.07,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,3.07,21,1,0)
The free-form description of dental work for this service line. 
"^DD",356.22,356.2216,3.07,21,2,0)
This field should be populated when necessary to describe
"^DD",356.22,356.2216,3.07,21,3,0)
the reason for prosthesis, crown, or inlay replacement.
"^DD",356.22,356.2216,3.07,"DT")
3141231
"^DD",356.22,356.2216,4,0)
TOOTH INFORMATION^356.22164PA^^4;0
"^DD",356.22,356.2216,4,21,0)
^.001^1^1^3150504^^
"^DD",356.22,356.2216,4,21,1,0)
This multiple holds tooth information for the dental service line.
"^DD",356.22,356.2216,5.01,0)
HCSD QUANTITY QUALIFIER^*P365.016'^IBE(365.016,^5;1^S DIC("S")="I $$HCSDQQ^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,5.01,3)
Enter a valid quantity qualifier for this service line.
"^DD",356.22,356.2216,5.01,12)
Enter a valid Quantity Qualifier Code.
"^DD",356.22,356.2216,5.01,12.1)
S DIC("S")="I $$HCSDQQ^IBTRH5H()"
"^DD",356.22,356.2216,5.01,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,5.01,21,1,0)
The Health Care Services Delivery quantity qualifier for this service
"^DD",356.22,356.2216,5.01,21,2,0)
line.
"^DD",356.22,356.2216,5.01,"DT")
3141231
"^DD",356.22,356.2216,5.02,0)
HCSD SERVICE UNIT COUNT^NJ15,0^^5;2^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",356.22,356.2216,5.02,3)
Enter a number between 0 and 999999999999999, 0 decimal digits.
"^DD",356.22,356.2216,5.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,5.02,21,1,0)
The Health Care Services Delivery service unit
"^DD",356.22,356.2216,5.02,21,2,0)
count for this service line.
"^DD",356.22,356.2216,5.02,"DT")
3141231
"^DD",356.22,356.2216,5.03,0)
HCSD UNITS OF MEASUREMENT^S^DA:Days;MO:Months;WK:Weeks;^5;3^Q
"^DD",356.22,356.2216,5.03,3)
Enter a valid Units of Measurement code for this service line.
"^DD",356.22,356.2216,5.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,5.03,21,1,0)
The Health Care Services Delivery Unit or Basis for
"^DD",356.22,356.2216,5.03,21,2,0)
Measurement code for this service line.
"^DD",356.22,356.2216,5.03,"DT")
3141231
"^DD",356.22,356.2216,5.04,0)
HCSD SAMPLE SELECTION MODULUS^NJ6,2^^5;4^K:+X'=X!(X>999)!(X<0)!(X?.E1"."3.N) X
"^DD",356.22,356.2216,5.04,3)
Type a number between 0 and 999, 2 decimal digits.
"^DD",356.22,356.2216,5.04,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,5.04,21,1,0)
The Health Care Services Delivery Sample Selection
"^DD",356.22,356.2216,5.04,21,2,0)
Modulus for this service line.
"^DD",356.22,356.2216,5.04,"DT")
3141231
"^DD",356.22,356.2216,5.05,0)
HCSD TIME PERIOD QUALIFIER^*P365.015'^IBE(365.015,^5;5^S DIC("S")="I $$TIMEPDQ^IBTRH5I()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,5.05,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.015,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.015,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.2216,5.05,2.1)
HCSD TIME PERIOD QUALIFIER:DESCRIPTION
"^DD",356.22,356.2216,5.05,3)
Enter a valid Time Period Qualifier for this service line.
"^DD",356.22,356.2216,5.05,12)
Select a valid Time Period Qualifier
"^DD",356.22,356.2216,5.05,12.1)
S DIC("S")="I $$TIMEPDQ^IBTRH5I()"
"^DD",356.22,356.2216,5.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,5.05,21,1,0)
The Health Care Services Delivery Time Period
"^DD",356.22,356.2216,5.05,21,2,0)
Qualifier for this service line.
"^DD",356.22,356.2216,5.05,"DT")
3141231
"^DD",356.22,356.2216,5.06,0)
HCSD PERIOD COUNT^NJ3,0^^5;6^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",356.22,356.2216,5.06,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",356.22,356.2216,5.06,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,5.06,21,1,0)
The Health Care Services Delivery Period Count
"^DD",356.22,356.2216,5.06,21,2,0)
for this service line.
"^DD",356.22,356.2216,5.06,"DT")
3141231
"^DD",356.22,356.2216,5.07,0)
HCSD DELIVERY FREQUENCY^*P365.025'^IBE(365.025,^5;7^S DIC("S")="I $$HCSDFC^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.2216,5.07,3)
Enter a valid Delivery Frequency Code for this service line.
"^DD",356.22,356.2216,5.07,12)
Enter a valid Delivery Frequency Code.
"^DD",356.22,356.2216,5.07,12.1)
S DIC("S")="I $$HCSDFC^IBTRH5H()"
"^DD",356.22,356.2216,5.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,5.07,21,1,0)
The Health Care Services Delivery Frequency code
"^DD",356.22,356.2216,5.07,21,2,0)
for this service line.
"^DD",356.22,356.2216,5.07,"DT")
3141231
"^DD",356.22,356.2216,5.08,0)
HCSD DELIVERY TIME PATTERN^P356.007'^IBT(356.007,^5;8^Q
"^DD",356.22,356.2216,5.08,3)
Enter a valid Delivery Pattern Time Code for this service line.
"^DD",356.22,356.2216,5.08,21,0)
^^2^2^3150102^
"^DD",356.22,356.2216,5.08,21,1,0)
The Health Care Services Delivery Pattern Time code
"^DD",356.22,356.2216,5.08,21,2,0)
for this service line.
"^DD",356.22,356.2216,5.08,"DT")
3150102
"^DD",356.22,356.2216,6,0)
ATTACHMENTS^356.22166PA^^6;0
"^DD",356.22,356.2216,6,21,0)
^^2^2^3140701^
"^DD",356.22,356.2216,6,21,1,0)
This multiple contains additional patient information (attachments) for 
"^DD",356.22,356.2216,6,21,2,0)
service line level.
"^DD",356.22,356.2216,7,0)
MESSAGE TEXT^356.22167^^7;0
"^DD",356.22,356.2216,7,21,0)
^^1^1^3150106^
"^DD",356.22,356.2216,7,21,1,0)
An additional free text comment for this service line.
"^DD",356.22,356.2216,8,0)
SERVICE PROVIDER^356.22168PA^^8;0
"^DD",356.22,356.2216,8,21,0)
^^1^1^3140427^
"^DD",356.22,356.2216,8,21,1,0)
This multiple holds data related to providers for this service line.
"^DD",356.22,356.2216,9.01,0)
PREV. AUTHORIZATION #^F^^9;1^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.2216,9.01,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.2216,9.01,21,0)
^^3^3^3141231^
"^DD",356.22,356.2216,9.01,21,1,0)
Th Previous Authorization Number from the UMO that
"^DD",356.22,356.2216,9.01,21,2,0)
is associated with this service line.  Enter Service Line
"^DD",356.22,356.2216,9.01,21,3,0)
data ONLY if it differs from the Patient Event data.
"^DD",356.22,356.2216,9.01,"DT")
3141231
"^DD",356.22,356.2216,9.02,0)
PREV. ADMIN. REFERENCE #^F^^9;2^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.2216,9.02,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.2216,9.02,21,0)
^^4^4^3141231^
"^DD",356.22,356.2216,9.02,21,1,0)
The previous Administrative Reference Number from the
"^DD",356.22,356.2216,9.02,21,2,0)
UMO that is associated with this service line.  Enter
"^DD",356.22,356.2216,9.02,21,3,0)
Service Line data ONLY if it differs from the Patient Event
"^DD",356.22,356.2216,9.02,21,4,0)
data.
"^DD",356.22,356.2216,9.02,"DT")
3141231
"^DD",356.22,356.2216,10,0)
HI SEGMENTS^356.2316A^^10;0
"^DD",356.22,356.2216,10,21,0)
^^1^1^3140924^
"^DD",356.22,356.2216,10,21,1,0)
This multiple contains data for HI segments.
"^DD",356.22,356.2216,10,"DT")
3140924
"^DD",356.22,356.2216,11.01,0)
CERTIFICATION ACTION CODE^P356.02'^IBT(356.02,^11;1^Q
"^DD",356.22,356.2216,11.01,3)
Answer must be a valid X12 278 Certification Action Code.
"^DD",356.22,356.2216,11.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,11.01,21,1,0)
The code indicating the type of action.
"^DD",356.22,356.2216,11.01,"DT")
3141231
"^DD",356.22,356.2216,11.02,0)
REVIEW IDENTIFICATION NUMBER^F^^11;2^K:$L(X)>50!($L(X)<1) X
"^DD",356.22,356.2216,11.02,3)
Answer must be 1-50 characters in length.
"^DD",356.22,356.2216,11.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.2216,11.02,21,1,0)
The Reference information as defined for a particular Transaction
"^DD",356.22,356.2216,11.02,21,2,0)
Set or as specified by the Reference Identification Qualifier.
"^DD",356.22,356.2216,11.02,23,0)
^^3^3^3140707^
"^DD",356.22,356.2216,11.02,23,1,0)
HCR02 is the number assigned by the information source this this
"^DD",356.22,356.2216,11.02,23,2,0)
review outcome.
"^DD",356.22,356.2216,11.02,23,3,0)
Required when HCR01 = A1 or A6
"^DD",356.22,356.2216,11.02,"DT")
3141231
"^DD",356.22,356.2216,11.03,0)
REVIEW DECISION REASON CODE^P356.021'^IBT(356.021,^11;3^Q
"^DD",356.22,356.2216,11.03,3)
Answer must be a valid X12 278 HCS Decision Reason Code.
"^DD",356.22,356.2216,11.03,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,11.03,21,1,0)
The code indicating a code from a specific industry code list.
"^DD",356.22,356.2216,11.03,23,0)
^^3^3^3141118^
"^DD",356.22,356.2216,11.03,23,1,0)
HCR03 is the code assigned by the information source to identify the 
"^DD",356.22,356.2216,11.03,23,2,0)
reason for the health care service review outcome indicated in HCR01.  
"^DD",356.22,356.2216,11.03,23,3,0)
See Code Source 886.  Required when HCR01=A3 or A4.
"^DD",356.22,356.2216,11.03,"DT")
3141231
"^DD",356.22,356.2216,11.04,0)
SECOND SURGICAL OPINION FLAG^S^Y:YES;N:NO;^11;4^Q
"^DD",356.22,356.2216,11.04,3)
Enter 'YES' to indicate that a second surgical opinion is required.
"^DD",356.22,356.2216,11.04,21,0)
^^1^1^3141231^
"^DD",356.22,356.2216,11.04,21,1,0)
This field indicates whether a second surgical opinion is required.
"^DD",356.22,356.2216,11.04,23,0)
^^3^3^3140707^
"^DD",356.22,356.2216,11.04,23,1,0)
HCR04 is the second surgical opinion indicator.  A 'Y' value indicates
"^DD",356.22,356.2216,11.04,23,2,0)
a second surgical opinion is required; an 'N' value indicates a second
"^DD",356.22,356.2216,11.04,23,3,0)
surgical opinion is not required for this request.
"^DD",356.22,356.2216,11.04,"DT")
3141231
"^DD",356.22,356.2216,12.01,0)
NDC CODE #1^F^^12;1^K:$L(X)>13!($L(X)<13)!'(X?5N1"-"4N1"-"2N) X
"^DD",356.22,356.2216,12.01,3)
Answer must be 13 characters in length.
"^DD",356.22,356.2216,12.01,21,0)
^^1^1^3150109^
"^DD",356.22,356.2216,12.01,21,1,0)
Enter a National Drug Code in a 5-4-2 format (nnnnn-nnnn-nn).
"^DD",356.22,356.2216,12.01,23,0)
^^2^2^3150109^
"^DD",356.22,356.2216,12.01,23,1,0)
The National Drug Code must be 13 characters in length and have a format 
"^DD",356.22,356.2216,12.01,23,2,0)
of 5-4-2 (nnnnn-nnnn-nn).
"^DD",356.22,356.2216,12.01,"DT")
3150112
"^DD",356.22,356.2216,12.02,0)
NDC CODE #2^F^^12;2^K:$L(X)>13!($L(X)<13)!'(X?5N1"-"4N1"-"2N) X
"^DD",356.22,356.2216,12.02,3)
Answer must be 13 characters in length.
"^DD",356.22,356.2216,12.02,21,0)
^^1^1^3150109^
"^DD",356.22,356.2216,12.02,21,1,0)
Enter a National Drug Code in a 5-4-2 format (nnnnn-nnnn-nn).
"^DD",356.22,356.2216,12.02,23,0)
^^2^2^3150109^
"^DD",356.22,356.2216,12.02,23,1,0)
The National Drug Code must be 13 characters in length and have a format 
"^DD",356.22,356.2216,12.02,23,2,0)
of 5-4-2 (nnnnn-nnnn-nn).
"^DD",356.22,356.2216,12.02,"DT")
3150112
"^DD",356.22,356.22164,0)
TOOTH INFORMATION SUB-FIELD^^.06^6
"^DD",356.22,356.22164,0,"DT")
3141219
"^DD",356.22,356.22164,0,"IX","B",356.22164,.01)

"^DD",356.22,356.22164,0,"NM","TOOTH INFORMATION")

"^DD",356.22,356.22164,0,"UP")
356.2216
"^DD",356.22,356.22164,.01,0)
TOOTH CODE^MP356.022'O^IBT(356.022,^0;1^Q
"^DD",356.22,356.22164,.01,1,0)
^.1
"^DD",356.22,356.22164,.01,1,1,0)
356.22164^B
"^DD",356.22,356.22164,.01,1,1,1)
S ^IBT(356.22,DA(2),16,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.22164,.01,1,1,2)
K ^IBT(356.22,DA(2),16,DA(1),4,"B",$E(X,1,30),DA)
"^DD",356.22,356.22164,.01,2)
S Y(0)=Y S I(2,0)=$G(D2),I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.022,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.022,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S D2=I(2,0) S Y=X
"^DD",356.22,356.22164,.01,2.1)
TOOTH CODE:DESCRIPTION
"^DD",356.22,356.22164,.01,3)
Enter a valid Tooth Code.
"^DD",356.22,356.22164,.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.22164,.01,21,1,0)
The tooth that requires work.
"^DD",356.22,356.22164,.01,"DT")
3141231
"^DD",356.22,356.22164,.02,0)
TOOTH SURFACE #1^*S^B:Buccal;D:Distal;F:Facial;I:Incisal;L:Lingual;M:Mesial;O:Occlusal;^0;2^Q
"^DD",356.22,356.22164,.02,3)
Enter a valid Tooth Surface code. The entered code must not already be present in Tooth Surfaces #2, #3, #4 or #5.
"^DD",356.22,356.22164,.02,12)
Only allows Tooth Surface Codes that are not already present in Tooth Surfaces #2, #3, #4 or #5.
"^DD",356.22,356.22164,.02,12.1)
S DIC("S")="I $$TOOTHS^IBTRH5B(.02)"
"^DD",356.22,356.22164,.02,21,0)
^^3^3^3141231^
"^DD",356.22,356.22164,.02,21,1,0)
The code that best describes the area of the tooth
"^DD",356.22,356.22164,.02,21,2,0)
that was treated. Up to five Tooth Surfaces are
"^DD",356.22,356.22164,.02,21,3,0)
allowed.
"^DD",356.22,356.22164,.02,"DT")
3141231
"^DD",356.22,356.22164,.03,0)
TOOTH SURFACE #2^*S^B:Buccal;D:Distal;F:Facial;I:Incisal;L:Lingual;M:Mesial;O:Occlusal;^0;3^Q
"^DD",356.22,356.22164,.03,3)
Enter a valid Tooth Surface code. The entered code must not already be present in Tooth Surfaces #1, #3, #4 or #5.
"^DD",356.22,356.22164,.03,12)
Only allows Tooth Surface Codes that are not already present in Tooth Surfaces #1, #3, #4 or #5.
"^DD",356.22,356.22164,.03,12.1)
S DIC("S")="I $$TOOTHS^IBTRH5B(.03)"
"^DD",356.22,356.22164,.03,21,0)
^^3^3^3141231^
"^DD",356.22,356.22164,.03,21,1,0)
The code that best describes the area of the tooth
"^DD",356.22,356.22164,.03,21,2,0)
that was treated. Up to five Tooth Surfaces are
"^DD",356.22,356.22164,.03,21,3,0)
allowed.
"^DD",356.22,356.22164,.03,"DT")
3141231
"^DD",356.22,356.22164,.04,0)
TOOTH SURFACE #3^*S^B:Buccal;D:Distal;F:Facial;I:Incisal;L:Lingual;M:Mesial;O:Occlusal;^0;4^Q
"^DD",356.22,356.22164,.04,3)
Enter a valid Tooth Surface code. The entered code must not already be present in Tooth Surfaces #1, #2, #4 or #5.
"^DD",356.22,356.22164,.04,12)
Only allows Tooth Surface Codes that are not already present in Tooth Surfaces #1, #2, #4 or #5.
"^DD",356.22,356.22164,.04,12.1)
S DIC("S")="I $$TOOTHS^IBTRH5B(.04)"
"^DD",356.22,356.22164,.04,21,0)
^.001^3^3^3150504^^
"^DD",356.22,356.22164,.04,21,1,0)
The code that best describes the area of the tooth
"^DD",356.22,356.22164,.04,21,2,0)
that was treated. Up to five Tooth Surfaces are
"^DD",356.22,356.22164,.04,21,3,0)
allowed.
"^DD",356.22,356.22164,.04,"DT")
3141231
"^DD",356.22,356.22164,.05,0)
TOOTH SURFACE #4^*S^B:Buccal;D:Distal;F:Facial;I:Incisal;L:Lingual;M:Mesial;O:Occlusal;^0;5^Q
"^DD",356.22,356.22164,.05,3)
Enter a valid Tooth Surface code. The entered code must not already be present in Tooth Surfaces #1, #2, #3 or #5.
"^DD",356.22,356.22164,.05,12)
Only allows Tooth Surface Codes that are not already present in Tooth Surfaces #1, #2, #3 or #5.
"^DD",356.22,356.22164,.05,12.1)
S DIC("S")="I $$TOOTHS^IBTRH5B(.05)"
"^DD",356.22,356.22164,.05,21,0)
^^3^3^3141231^
"^DD",356.22,356.22164,.05,21,1,0)
The code that best describes the area of the tooth
"^DD",356.22,356.22164,.05,21,2,0)
that was treated. Up to five Tooth Surfaces are
"^DD",356.22,356.22164,.05,21,3,0)
allowed.
"^DD",356.22,356.22164,.05,"DT")
3141231
"^DD",356.22,356.22164,.06,0)
TOOTH SURFACE #5^*S^B:Buccal;D:Distal;F:Facial;I:Incisal;L:Lingual;M:Mesial;O:Occlusal;^0;6^Q
"^DD",356.22,356.22164,.06,3)
Enter a valid Tooth Surface code. The entered code must not already be present in Tooth Surfaces #1, #2, #3 or #4.
"^DD",356.22,356.22164,.06,12)
Only allows Tooth Surface Codes that are not already present in Tooth Surfaces #1, #2, #3 or #4.
"^DD",356.22,356.22164,.06,12.1)
S DIC("S")="I $$TOOTHS^IBTRH5B(.06)"
"^DD",356.22,356.22164,.06,21,0)
^^3^3^3141231^
"^DD",356.22,356.22164,.06,21,1,0)
The code that best describes the area of the tooth
"^DD",356.22,356.22164,.06,21,2,0)
that was treated. Up to five Tooth Surfaces are
"^DD",356.22,356.22164,.06,21,3,0)
allowed.
"^DD",356.22,356.22164,.06,"DT")
3141231
"^DD",356.22,356.22166,0)
ATTACHMENTS SUB-FIELD^^.04^4
"^DD",356.22,356.22166,0,"DT")
3140701
"^DD",356.22,356.22166,0,"IX","B",356.22166,.01)

"^DD",356.22,356.22166,0,"NM","ATTACHMENTS")

"^DD",356.22,356.22166,0,"UP")
356.2216
"^DD",356.22,356.22166,.01,0)
REPORT TYPE CODE^MP356.018'^IBT(356.018,^0;1^Q
"^DD",356.22,356.22166,.01,1,0)
^.1
"^DD",356.22,356.22166,.01,1,1,0)
356.22166^B
"^DD",356.22,356.22166,.01,1,1,1)
S ^IBT(356.22,DA(2),16,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.22166,.01,1,1,2)
K ^IBT(356.22,DA(2),16,DA(1),6,"B",$E(X,1,30),DA)
"^DD",356.22,356.22166,.01,3)
Enter a valid Report Type code.
"^DD",356.22,356.22166,.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.22166,.01,21,1,0)
The Report Type code for this service line.
"^DD",356.22,356.22166,.01,"DT")
3141231
"^DD",356.22,356.22166,.02,0)
REPORT TRANSMISSION CODE^S^AA:Available on request at provider site;BM:By mail;EL:Electronically only;EM:E-mail;FX:By fax;VO:Voice;^0;2^Q
"^DD",356.22,356.22166,.02,3)
Enter a valid Report Transmission code.
"^DD",356.22,356.22166,.02,21,0)
^^1^1^3141231^
"^DD",356.22,356.22166,.02,21,1,0)
The Report Transmission code for this service line.
"^DD",356.22,356.22166,.02,"DT")
3141231
"^DD",356.22,356.22166,.03,0)
ATTACHMENT CONTROL NUMBER^F^^0;3^K:$L(X)>80!($L(X)<2) X
"^DD",356.22,356.22166,.03,3)
Answer must be 2-80 characters in length.
"^DD",356.22,356.22166,.03,21,0)
^^1^1^3141231^
"^DD",356.22,356.22166,.03,21,1,0)
The Attachment Control Number for this service line.
"^DD",356.22,356.22166,.03,"DT")
3141231
"^DD",356.22,356.22166,.04,0)
ATTACHMENT DESCRIPTION^F^^0;4^K:$L(X)>80!($L(X)<1) X
"^DD",356.22,356.22166,.04,3)
Answer must be 1-80 characters in length.
"^DD",356.22,356.22166,.04,21,0)
^^1^1^3141231^
"^DD",356.22,356.22166,.04,21,1,0)
The description of attachment for this service line.
"^DD",356.22,356.22166,.04,"DT")
3141231
"^DD",356.22,356.22167,0)
MESSAGE TEXT SUB-FIELD^^.01^1
"^DD",356.22,356.22167,0,"DT")
3140427
"^DD",356.22,356.22167,0,"NM","MESSAGE TEXT")

"^DD",356.22,356.22167,0,"UP")
356.2216
"^DD",356.22,356.22167,.01,0)
MESSAGE TEXT^Wx^^0;1^Q
"^DD",356.22,356.22167,.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.22167,.01,21,1,0)
The free text message associated with this service line.
"^DD",356.22,356.22167,.01,"DT")
3141231
"^DD",356.22,356.22168,0)
SERVICE PROVIDER SUB-FIELD^^5.06^28
"^DD",356.22,356.22168,0,"DT")
3160223
"^DD",356.22,356.22168,0,"IX","B",356.22168,.01)

"^DD",356.22,356.22168,0,"NM","SERVICE PROVIDER")

"^DD",356.22,356.22168,0,"UP")
356.2216
"^DD",356.22,356.22168,.01,0)
PROVIDER TYPE^M*P365.022'O^IBE(365.022,^0;1^S DIC("S")="I $$SPROVTYP^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22168,.01,1,0)
^.1
"^DD",356.22,356.22168,.01,1,1,0)
356.22168^B
"^DD",356.22,356.22168,.01,1,1,1)
S ^IBT(356.22,DA(2),16,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.22168,.01,1,1,2)
K ^IBT(356.22,DA(2),16,DA(1),8,"B",$E(X,1,30),DA)
"^DD",356.22,356.22168,.01,2)
S Y(0)=Y S I(2,0)=$G(D2),I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(365.022,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(365.022,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S D2=I(2,0) S Y=X
"^DD",356.22,356.22168,.01,2.1)
PROVIDER TYPE:DESCRIPTION
"^DD",356.22,356.22168,.01,3)
Enter a valid Provider Type code.
"^DD",356.22,356.22168,.01,12)
Enter a valid Provider Type.
"^DD",356.22,356.22168,.01,12.1)
S DIC("S")="I $$SPROVTYP^IBTRH5H()"
"^DD",356.22,356.22168,.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,.01,21,1,0)
The Provider Type (entity identifier code) for this service line.
"^DD",356.22,356.22168,.01,"DT")
3150220
"^DD",356.22,356.22168,.02,0)
PERSON / NON-PERSON^S^1:Person;2:Non-person;^0;2^Q
"^DD",356.22,356.22168,.02,3)
Enter 1 if the selected Provider is a Person or N otherwise.
"^DD",356.22,356.22168,.02,21,0)
^^3^3^3150106^
"^DD",356.22,356.22168,.02,21,1,0)
Determines whether or not the selected Provider for
"^DD",356.22,356.22168,.02,21,2,0)
this service line is a Person or a Non-Person
"^DD",356.22,356.22168,.02,21,3,0)
(e.g. a Facility).
"^DD",356.22,356.22168,.02,"DT")
3150106
"^DD",356.22,356.22168,.03,0)
PROVIDER^V^^0;3^
"^DD",356.22,356.22168,.03,3)
Enter a valid Provider.
"^DD",356.22,356.22168,.03,21,0)
^^1^1^3150102^
"^DD",356.22,356.22168,.03,21,1,0)
The Provider for this service line.
"^DD",356.22,356.22168,.03,"DT")
3160223
"^DD",356.22,356.22168,.03,"V",0)
^.12P^3^3
"^DD",356.22,356.22168,.03,"V",1,0)
200^VA providers^1^V^y^n
"^DD",356.22,356.22168,.03,"V",1,1)
S DIC("S")="I $O(^(""USC1"",0)),+$P($$NPI^XUSNPI(""Individual_ID"",Y),U)>0"
"^DD",356.22,356.22168,.03,"V",1,2)
Enter a valid VA Provider with valid NPI
"^DD",356.22,356.22168,.03,"V",2,0)
355.93^Non-VA providers^2^N^y^n
"^DD",356.22,356.22168,.03,"V",2,1)
S DIC("S")="I +$$NPIGET^IBCEP81(Y)>0"
"^DD",356.22,356.22168,.03,"V",2,2)
Enter a valid non-VA provider with valid NPI
"^DD",356.22,356.22168,.03,"V",3,0)
4^Institutions^3^F^y^n
"^DD",356.22,356.22168,.03,"V",3,1)
S DIC("S")="I +$P($$NPI^XUSNPI(""Organization_ID"",Y),U)>0"
"^DD",356.22,356.22168,.03,"V",3,2)
Enter a valid institution with valid NPI
"^DD",356.22,356.22168,.04,0)
PER LOOP IDENTIFIER^P365.027'^IBE(365.027,^0;4^Q
"^DD",356.22,356.22168,.04,.1)
PER Loop Identifier
"^DD",356.22,356.22168,.04,3)
Enter a valid Per Loop Identifier.
"^DD",356.22,356.22168,.04,21,0)
^^1^1^3150102^
"^DD",356.22,356.22168,.04,21,1,0)
The PER Loop Identifier for this Service Line.
"^DD",356.22,356.22168,.04,"DT")
3150102
"^DD",356.22,356.22168,.05,0)
CONTACT FUNCTION CODE^F^^0;5^K:$L(X)>2!($L(X)<2) X
"^DD",356.22,356.22168,.05,.1)
Contact Function Code
"^DD",356.22,356.22168,.05,3)
Enter the 2-character Contact Function Code (PER01).
"^DD",356.22,356.22168,.05,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,.05,21,1,0)
The code identifying the major duty or responsibility
"^DD",356.22,356.22168,.05,21,2,0)
of the person or group named.
"^DD",356.22,356.22168,.05,"DT")
3141231
"^DD",356.22,356.22168,.06,0)
CONTACT NAME^F^^0;6^K:$L(X)>60!($L(X)<1) X
"^DD",356.22,356.22168,.06,.1)
Contact Name
"^DD",356.22,356.22168,.06,3)
Enter the 1-60 character free-form name (PER02).
"^DD",356.22,356.22168,.06,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,.06,21,1,0)
The Free-form name of the Contact.
"^DD",356.22,356.22168,.06,23,0)
^^3^3^3140514^
"^DD",356.22,356.22168,.06,23,1,0)
Required when the response must be directed to a particular contact and 
"^DD",356.22,356.22168,.06,23,2,0)
when the name of the entity to contact is not already defined or is 
"^DD",356.22,356.22168,.06,23,3,0)
different than the name within the prior name segment (e.g., N1 or NM1).
"^DD",356.22,356.22168,.06,"DT")
3141231
"^DD",356.22,356.22168,.07,0)
COMMUNICATION NO. QUALIFIER-1^*P365.021'^IBE(365.021,^0;7^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22168,.07,.1)
Communication Number Qualifier-1
"^DD",356.22,356.22168,.07,3)
Enter a valid Communication Qualifier code.
"^DD",356.22,356.22168,.07,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.22168,.07,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.22168,.07,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,.07,21,1,0)
The Communication Qualifier to identify what kind of reference the
"^DD",356.22,356.22168,.07,21,2,0)
related Contact Communication Number is.
"^DD",356.22,356.22168,.07,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,.07,23,1,0)
Required when PER02 is not valued in order to transmit a contact 
"^DD",356.22,356.22168,.07,23,2,0)
communication number.
"^DD",356.22,356.22168,.07,"DT")
3141231
"^DD",356.22,356.22168,.08,0)
COMMUNICATION NO. QUALIFIER-2^*P365.021'^IBE(365.021,^0;8^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22168,.08,.1)
Communication Number Qualifier-2
"^DD",356.22,356.22168,.08,3)
Enter a valid Communication Qualifier code.
"^DD",356.22,356.22168,.08,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.22168,.08,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.22168,.08,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,.08,21,1,0)
The Communication Qualifier to identify what kind of reference the
"^DD",356.22,356.22168,.08,21,2,0)
related Contact Communication Number is.
"^DD",356.22,356.22168,.08,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,.08,23,1,0)
Required when a telephone extension or multiple communication types are 
"^DD",356.22,356.22168,.08,23,2,0)
available.
"^DD",356.22,356.22168,.08,"DT")
3141231
"^DD",356.22,356.22168,.09,0)
COMMUNICATION NO. QUALIFIER-3^*P365.021'^IBE(365.021,^0;9^S DIC("S")="I $$COMQUAL^IBTRH5I()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.22168,.09,.1)
Communication Number Qualifier-3
"^DD",356.22,356.22168,.09,3)
Enter a valid Communication Qualifier code.
"^DD",356.22,356.22168,.09,12)
To screen for valid Communication Qualifiers.
"^DD",356.22,356.22168,.09,12.1)
S DIC("S")="I $$COMQUAL^IBTRH5I()"
"^DD",356.22,356.22168,.09,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,.09,21,1,0)
The Communication Qualifier to identify what kind of reference the
"^DD",356.22,356.22168,.09,21,2,0)
related Contact Communication Number is.
"^DD",356.22,356.22168,.09,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,.09,23,1,0)
Required when a telephone extension or multiple communicaton types are 
"^DD",356.22,356.22168,.09,23,2,0)
available.
"^DD",356.22,356.22168,.09,"DT")
3141231
"^DD",356.22,356.22168,1,0)
CONTACT COMMUNICATION NUMBER-1^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",356.22,356.22168,1,.1)
Contact Communication Number-1
"^DD",356.22,356.22168,1,3)
Enter the 1-250 character Communication Number (PER04).
"^DD",356.22,356.22168,1,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,1,21,1,0)
The Complete communications number including country
"^DD",356.22,356.22168,1,21,2,0)
or area code when applicable.
"^DD",356.22,356.22168,1,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,1,23,1,0)
Required when PER02 is not valued to transmit a contact communication 
"^DD",356.22,356.22168,1,23,2,0)
number.
"^DD",356.22,356.22168,1,"DT")
3141231
"^DD",356.22,356.22168,2,0)
CONTACT COMMUNICATION NUMBER-2^F^^2;1^K:$L(X)>250!($L(X)<1) X
"^DD",356.22,356.22168,2,.1)
Contact Communication Number-2
"^DD",356.22,356.22168,2,3)
Enter the 1-250 character Communication Number (PER06).
"^DD",356.22,356.22168,2,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,2,21,1,0)
The Complete communications number including country
"^DD",356.22,356.22168,2,21,2,0)
or area code when applicable.
"^DD",356.22,356.22168,2,23,0)
^^2^2^3140514^^
"^DD",356.22,356.22168,2,23,1,0)
Required when the telephone extension or multiple communication numbers 
"^DD",356.22,356.22168,2,23,2,0)
are available.
"^DD",356.22,356.22168,2,"DT")
3141231
"^DD",356.22,356.22168,3,0)
CONTACT COMMUNICATION NUMBER-3^F^^3;1^K:$L(X)>250!($L(X)<1) X
"^DD",356.22,356.22168,3,.1)
Contact Communication Number-3
"^DD",356.22,356.22168,3,3)
Enter the 1-250 character Communication Number (PER08).
"^DD",356.22,356.22168,3,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,3,21,1,0)
The Complete communications number including country
"^DD",356.22,356.22168,3,21,2,0)
or area code when applicable.
"^DD",356.22,356.22168,3,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,3,23,1,0)
Required when the telephone extension or multiple communication numbers 
"^DD",356.22,356.22168,3,23,2,0)
are available.
"^DD",356.22,356.22168,3,"DT")
3141231
"^DD",356.22,356.22168,4.01,0)
NM1 LOOP IDENTIFIER^P365.027'^IBE(365.027,^4;1^Q
"^DD",356.22,356.22168,4.01,.1)
NM1 Loop Identifier
"^DD",356.22,356.22168,4.01,3)
Enter a valid NM1 Loop Identifier code.
"^DD",356.22,356.22168,4.01,21,0)
^^1^1^3150102^
"^DD",356.22,356.22168,4.01,21,1,0)
The NM1 Loop Identifier.
"^DD",356.22,356.22168,4.01,"DT")
3150102
"^DD",356.22,356.22168,4.02,0)
ENTITY IDENTIFIER CODE^P365.022'^IBE(365.022,^4;2^Q
"^DD",356.22,356.22168,4.02,.1)
Entity Identifier Code
"^DD",356.22,356.22168,4.02,3)
Enter the 2-3 character identifier code (NM101).
"^DD",356.22,356.22168,4.02,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,4.02,21,1,0)
The code identifying an organizational entity, a physical location,
"^DD",356.22,356.22168,4.02,21,2,0)
property or an individual.
"^DD",356.22,356.22168,4.02,"DT")
3141231
"^DD",356.22,356.22168,4.03,0)
ENTITY TYPE QUALIFIER^S^1:PERSON;2:NON-PERSON ENTITY;^4;3^Q
"^DD",356.22,356.22168,4.03,.1)
Entity Type Qualifier
"^DD",356.22,356.22168,4.03,3)
Enter the 1-digit code to qualify the Entity Type (NM102).
"^DD",356.22,356.22168,4.03,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,4.03,21,1,0)
The code qualifying the type of entity.
"^DD",356.22,356.22168,4.03,23,0)
^^1^1^3140514^
"^DD",356.22,356.22168,4.03,23,1,0)
NM102 qualifies NM103.
"^DD",356.22,356.22168,4.03,"DT")
3141231
"^DD",356.22,356.22168,4.04,0)
CONTACT LAST OR COMPANY NAME^F^^4;4^K:$L(X)>60!($L(X)<1) X
"^DD",356.22,356.22168,4.04,.1)
Contact Last or Company Name
"^DD",356.22,356.22168,4.04,3)
Enter 1-60 characters for the Contact Last/Company Name (NM103).
"^DD",356.22,356.22168,4.04,21,0)
^^1^1^3150102^
"^DD",356.22,356.22168,4.04,21,1,0)
The individual last name or organizational name.
"^DD",356.22,356.22168,4.04,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,4.04,23,1,0)
Required when name information is used by the UMO to identify the 
"^DD",356.22,356.22168,4.04,23,2,0)
requester.
"^DD",356.22,356.22168,4.04,"DT")
3150102
"^DD",356.22,356.22168,4.05,0)
CONTACT FIRST NAME^F^^4;5^K:$L(X)>35!($L(X)<1) X
"^DD",356.22,356.22168,4.05,.1)
Contact First Name
"^DD",356.22,356.22168,4.05,3)
Enter 1-35 characters for the Contact First Name (NM104).
"^DD",356.22,356.22168,4.05,21,0)
^^1^1^3150102^
"^DD",356.22,356.22168,4.05,21,1,0)
The individual first name.
"^DD",356.22,356.22168,4.05,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,4.05,23,1,0)
Required when name information is used by the UMO to identify the 
"^DD",356.22,356.22168,4.05,23,2,0)
requester and the requester is a person.
"^DD",356.22,356.22168,4.05,"DT")
3150102
"^DD",356.22,356.22168,4.06,0)
CONTACT MIDDLE NAME^F^^4;6^K:$L(X)>25!($L(X)<1) X
"^DD",356.22,356.22168,4.06,.1)
Contact Middle Name
"^DD",356.22,356.22168,4.06,3)
Enter 1-25 characters for the Contact Middle Name (NM105).
"^DD",356.22,356.22168,4.06,21,0)
^^1^1^3150102^
"^DD",356.22,356.22168,4.06,21,1,0)
The individual middle name or initial.
"^DD",356.22,356.22168,4.06,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,4.06,23,1,0)
Required when NM104 is present and the middle name/initial of the person 
"^DD",356.22,356.22168,4.06,23,2,0)
is known.
"^DD",356.22,356.22168,4.06,"DT")
3150102
"^DD",356.22,356.22168,4.07,0)
CONTACT NAME SUFFIX^F^^4;7^K:$L(X)>10!($L(X)<1) X
"^DD",356.22,356.22168,4.07,.1)
Contact Name Suffix
"^DD",356.22,356.22168,4.07,3)
Enter 1-10 characters for the Contact Name Suffix (NM107).
"^DD",356.22,356.22168,4.07,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,4.07,21,1,0)
The Suffix to the individual name.
"^DD",356.22,356.22168,4.07,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,4.07,23,1,0)
Required when NM104 is valued and the suffix of the individual's name is 
"^DD",356.22,356.22168,4.07,23,2,0)
known; e.g., Sr., Jr., or III.
"^DD",356.22,356.22168,4.07,"DT")
3141231
"^DD",356.22,356.22168,4.08,0)
IDENTIFICATION CODE QUALIFIER^P365.023'^IBE(365.023,^4;8^Q
"^DD",356.22,356.22168,4.08,.1)
Identification Code Qualifier
"^DD",356.22,356.22168,4.08,3)
Enter 1-2 characters for the Identification Code Qualifier (NM108).
"^DD",356.22,356.22168,4.08,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,4.08,21,1,0)
The code designating the system/method of code
"^DD",356.22,356.22168,4.08,21,2,0)
structure used for Identification Code (67).
"^DD",356.22,356.22168,4.08,"DT")
3141231
"^DD",356.22,356.22168,4.09,0)
IDENTIFICATION CODE^F^^4;9^K:$L(X)>80!($L(X)<2) X
"^DD",356.22,356.22168,4.09,.1)
Identification Code
"^DD",356.22,356.22168,4.09,3)
Enter 2-80 characters for the Identification Code (NM109).
"^DD",356.22,356.22168,4.09,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,4.09,21,1,0)
The code identifying a party or other code.
"^DD",356.22,356.22168,4.09,"DT")
3141231
"^DD",356.22,356.22168,5,0)
CONTACT ADDRESS LINE-1^F^^5;1^K:$L(X)>55!($L(X)<1) X
"^DD",356.22,356.22168,5,.1)
Contact Address Line-1
"^DD",356.22,356.22168,5,3)
Enter 1-55 characters of Line 1 of Address (N301).
"^DD",356.22,356.22168,5,21,0)
^^1^1^3150102^
"^DD",356.22,356.22168,5,21,1,0)
The first line of Address Information.
"^DD",356.22,356.22168,5,23,0)
^^1^1^3140514^
"^DD",356.22,356.22168,5,23,1,0)
Use this element for the first line of the requester's address.
"^DD",356.22,356.22168,5,"DT")
3150102
"^DD",356.22,356.22168,5.01,0)
CONTACT ADDRESS LINE-2^F^^5;2^K:$L(X)>55!($L(X)<1) X
"^DD",356.22,356.22168,5.01,.1)
Contact Address Line-2
"^DD",356.22,356.22168,5.01,3)
Enter 1-55 characters of Line 2 of Address (N302).
"^DD",356.22,356.22168,5.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,5.01,21,1,0)
The second line of Address Information.
"^DD",356.22,356.22168,5.01,23,0)
^^1^1^3140514^
"^DD",356.22,356.22168,5.01,23,1,0)
Use this element for the second line of the requester's address.
"^DD",356.22,356.22168,5.01,"DT")
3141231
"^DD",356.22,356.22168,5.02,0)
CONTACT CITY NAME^F^^5;3^K:$L(X)>30!($L(X)<2) X
"^DD",356.22,356.22168,5.02,.1)
Contact City Name
"^DD",356.22,356.22168,5.02,3)
Enter 2-30 characters for the City Name (N401).
"^DD",356.22,356.22168,5.02,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,5.02,21,1,0)
The Free-form text for the city name.
"^DD",356.22,356.22168,5.02,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,5.02,23,1,0)
A combination of either N401 through N404, or N405 and N406 may be 
"^DD",356.22,356.22168,5.02,23,2,0)
adequate to specify a location.
"^DD",356.22,356.22168,5.02,"DT")
3141231
"^DD",356.22,356.22168,5.03,0)
CONTACT STATE OR PROVINCE^P5'^DIC(5,^5;4^Q
"^DD",356.22,356.22168,5.03,.1)
Contact State or Province
"^DD",356.22,356.22168,5.03,3)
Enter 2 characters to identify the State or Province (N402).
"^DD",356.22,356.22168,5.03,21,0)
^^2^2^3141231^
"^DD",356.22,356.22168,5.03,21,1,0)
The code (Standard or State/Province) as defined by
"^DD",356.22,356.22168,5.03,21,2,0)
the appropriate government agency.
"^DD",356.22,356.22168,5.03,23,0)
^^2^2^3140514^
"^DD",356.22,356.22168,5.03,23,1,0)
Required when the address is in the United States of America, including 
"^DD",356.22,356.22168,5.03,23,2,0)
its territories, or Canada.
"^DD",356.22,356.22168,5.03,"DT")
3141231
"^DD",356.22,356.22168,5.04,0)
CONTACT ZIP CODE^F^^5;5^K:$L(X)>15!($L(X)<3) X
"^DD",356.22,356.22168,5.04,.1)
Contact Zip Code
"^DD",356.22,356.22168,5.04,3)
Enter 3-15 characters for the Zip Code (N403).
"^DD",356.22,356.22168,5.04,21,0)
^^3^3^3141231^
"^DD",356.22,356.22168,5.04,21,1,0)
The code defining international postal zone code
"^DD",356.22,356.22168,5.04,21,2,0)
excluding punctuation and blanks (zip code for
"^DD",356.22,356.22168,5.04,21,3,0)
United States).
"^DD",356.22,356.22168,5.04,23,0)
^^3^3^3140514^
"^DD",356.22,356.22168,5.04,23,1,0)
Required when the address is in the United States of America, including 
"^DD",356.22,356.22168,5.04,23,2,0)
its territories, or Canada, or when a postal code exists for the country 
"^DD",356.22,356.22168,5.04,23,3,0)
in N404.
"^DD",356.22,356.22168,5.04,"DT")
3141231
"^DD",356.22,356.22168,5.05,0)
CONTACT COUNTRY CODE^P779.004'^HL(779.004,^5;6^Q
"^DD",356.22,356.22168,5.05,.1)
Contact Country Code
"^DD",356.22,356.22168,5.05,3)
Enter 2-3 characters for the Country Code (NM404).
"^DD",356.22,356.22168,5.05,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,5.05,21,1,0)
The Code identifying the country.
"^DD",356.22,356.22168,5.05,23,0)
^^1^1^3140514^
"^DD",356.22,356.22168,5.05,23,1,0)
Required when the address is outside the United States of America.
"^DD",356.22,356.22168,5.05,"DT")
3141231
"^DD",356.22,356.22168,5.06,0)
CONTACT COUNTRY SUBDIVISION^F^^5;7^K:$L(X)>3!($L(X)<1) X
"^DD",356.22,356.22168,5.06,.1)
Contact Country Subdivision Code
"^DD",356.22,356.22168,5.06,3)
Enter 1-3 characters for the Country Subdivision Code (NM407).
"^DD",356.22,356.22168,5.06,21,0)
^^1^1^3141231^
"^DD",356.22,356.22168,5.06,21,1,0)
The code identifying the country subdivision.
"^DD",356.22,356.22168,5.06,23,0)
^^4^4^3140514^
"^DD",356.22,356.22168,5.06,23,1,0)
Required when the address is not in the United States of America, 
"^DD",356.22,356.22168,5.06,23,2,0)
including its territories, or Canada, and the country in N404 has 
"^DD",356.22,356.22168,5.06,23,3,0)
administrative subdivisions such as but not limited to states, provinces, 
"^DD",356.22,356.22168,5.06,23,4,0)
cantons, etc. Use the country subdivision codes from Part 2 of ISO 3166.
"^DD",356.22,356.22168,5.06,"DT")
3141231
"^DD",356.22,356.2223,0)
DELETE REASON NOTE SUB-FIELD^^.01^1
"^DD",356.22,356.2223,0,"DT")
3150515
"^DD",356.22,356.2223,0,"NM","DELETE REASON NOTE")

"^DD",356.22,356.2223,0,"UP")
356.22
"^DD",356.22,356.2223,.01,0)
DELETE REASON NOTE^Wx^^0;1^Q
"^DD",356.22,356.2223,.01,3)
Please enter a note to describe the reason for removal from the HCSR Worklist.
"^DD",356.22,356.2223,.01,21,0)
^^1^1^3150928^
"^DD",356.22,356.2223,.01,21,1,0)
This is the word processing note field for the Delete Reason.
"^DD",356.22,356.2223,.01,"DT")
3150515
"^DD",356.22,356.223,0)
PATIENT DIAGNOSIS SUB-FIELD^^.02^3
"^DD",356.22,356.223,0,"DT")
3151123
"^DD",356.22,356.223,0,"IX","B",356.223,.01)

"^DD",356.22,356.223,0,"NM","PATIENT DIAGNOSIS")

"^DD",356.22,356.223,0,"UP")
356.22
"^DD",356.22,356.223,.01,0)
DIAGNOSIS TYPE^M*P356.006'O^IBT(356.006,^0;1^S DIC("S")="I $$DXTYPE^IBTRH5H()" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",356.22,356.223,.01,1,0)
^.1
"^DD",356.22,356.223,.01,1,1,0)
356.223^B
"^DD",356.22,356.223,.01,1,1,1)
S ^IBT(356.22,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.223,.01,1,1,2)
K ^IBT(356.22,DA(1),3,"B",$E(X,1,30),DA)
"^DD",356.22,356.223,.01,2)
S Y(0)=Y S I(1,0)=$G(D1),I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBT(356.006,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356.006,D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0) S D1=I(1,0) S Y=X
"^DD",356.22,356.223,.01,2.1)
DIAGNOSIS TYPE:DESCRIPTION
"^DD",356.22,356.223,.01,3)
Enter a REQUIRED Diagnosis Type Code.
"^DD",356.22,356.223,.01,12)
Enter a valid Diagnosis Type.
"^DD",356.22,356.223,.01,12.1)
S DIC("S")="I $$DXTYPE^IBTRH5H()"
"^DD",356.22,356.223,.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.223,.01,21,1,0)
The REQUIRED code that describes the Diagnosis Type.
"^DD",356.22,356.223,.01,"DT")
3141231
"^DD",356.22,356.223,.02,0)
DIAGNOSIS CODE^V^^0;2^
"^DD",356.22,356.223,.02,3)
Enter a valid Diagnosis Code.
"^DD",356.22,356.223,.02,21,0)
^^1^1^3151123^^
"^DD",356.22,356.223,.02,21,1,0)
The Diagnosis Code for the 278 inquiry.
"^DD",356.22,356.223,.02,"DT")
3151123
"^DD",356.22,356.223,.02,"V",0)
^.12P^3^3
"^DD",356.22,356.223,.02,"V",1,0)
80^ICD-10 Diagnosis^1^I^y^n
"^DD",356.22,356.223,.02,"V",1,1)
S DIC("S")="I $$DXCODE^IBTRH5A()"
"^DD",356.22,356.223,.02,"V",1,2)
The selected Diagnosis must be valid for the selected Diagnosis Type and must not be a duplicate.
"^DD",356.22,356.223,.02,"V",2,0)
80.2^DRG Diagnosis^2^D^y^n
"^DD",356.22,356.223,.02,"V",2,1)
S DIC("S")="I $$DXCODE^IBTRH5A()"
"^DD",356.22,356.223,.02,"V",2,2)
The selected Diagnosis must be valid for the selected Diagnosis Type and must not be a duplicate.
"^DD",356.22,356.223,.02,"V",3,0)
95.3^LOINC Diagnosis^3^L^n^n
"^DD",356.22,356.223,.03,0)
DIAGNOSIS DATE^D^^0;3^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",356.22,356.223,.03,3)
Enter the optional date that the diagnosis was known.
"^DD",356.22,356.223,.03,21,0)
^^1^1^3141231^
"^DD",356.22,356.223,.03,21,1,0)
The optional date of when the diagnosis was determined.
"^DD",356.22,356.223,.03,"DT")
3141231
"^DD",356.22,356.231,0)
COMMENT SUB-FIELD^^.01^1
"^DD",356.22,356.231,0,"DT")
3140322
"^DD",356.22,356.231,0,"NM","COMMENT")

"^DD",356.22,356.231,0,"UP")
356.221
"^DD",356.22,356.231,.01,0)
COMMENT^Wx^^0;1
"^DD",356.22,356.231,.01,3)
Enter the comment text.
"^DD",356.22,356.231,.01,21,0)
^^1^1^3140322^
"^DD",356.22,356.231,.01,21,1,0)
Comment text.
"^DD",356.22,356.231,.01,"DT")
3140322
"^DD",356.22,356.2316,0)
HI SEGMENTS SUB-FIELD^^.04^4
"^DD",356.22,356.2316,0,"DT")
3140707
"^DD",356.22,356.2316,0,"IX","B",356.2316,.01)

"^DD",356.22,356.2316,0,"NM","HI SEGMENTS")

"^DD",356.22,356.2316,0,"UP")
356.2216
"^DD",356.22,356.2316,.01,0)
HI SEQUENCE^MNJ2,0^^0;1^K:+X'=X!(X>12)!(X<1)!(X?.E1"."1N.N) X
"^DD",356.22,356.2316,.01,1,0)
^.1
"^DD",356.22,356.2316,.01,1,1,0)
356.2316^B
"^DD",356.22,356.2316,.01,1,1,1)
S ^IBT(356.22,DA(2),16,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",356.22,356.2316,.01,1,1,2)
K ^IBT(356.22,DA(2),16,DA(1),10,"B",$E(X,1,30),DA)
"^DD",356.22,356.2316,.01,3)
Enter a number between 1 and 12, 0 decimal digits.
"^DD",356.22,356.2316,.01,21,0)
^^1^1^3141231^
"^DD",356.22,356.2316,.01,21,1,0)
The sequential number of the HI segment.
"^DD",356.22,356.2316,.01,"DT")
3141231
"^DD",356.22,356.2316,.02,0)
CODE LIST QUALIFIER CODE^P356.006'^IBT(356.006,^0;2^Q
"^DD",356.22,356.2316,.02,3)
Enter the code for the Diagnosis Type.
"^DD",356.22,356.2316,.02,21,0)
^^1^1^3141231^
"^DD",356.22,356.2316,.02,21,1,0)
The code identifying a specific industry code list.
"^DD",356.22,356.2316,.02,"DT")
3141231
"^DD",356.22,356.2316,.03,0)
INDUSTRY CODE^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",356.22,356.2316,.03,3)
Answer must be 1-30 characters in length.
"^DD",356.22,356.2316,.03,21,0)
^^1^1^3141231^
"^DD",356.22,356.2316,.03,21,1,0)
The code indicating a code from a specific industry code list.
"^DD",356.22,356.2316,.03,23,0)
^^3^3^3140707^
"^DD",356.22,356.2316,.03,23,1,0)
The UMO can use each occurrence of the Health Care Code Information
"^DD",356.22,356.2316,.03,23,2,0)
composite (C022) to specify codes that identify the specific information
"^DD",356.22,356.2316,.03,23,3,0)
that the UMO requires from the provider to complete the medical review.
"^DD",356.22,356.2316,.03,"DT")
3141231
"^DD",356.22,356.2316,.04,0)
DATE^D^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",356.22,356.2316,.04,3)
Enter the a valid date.
"^DD",356.22,356.2316,.04,21,0)
^^1^1^3141231^
"^DD",356.22,356.2316,.04,21,1,0)
The Diagnosis Date for HI segment.
"^DD",356.22,356.2316,.04,"DT")
3141231
"^DD",365.013,365.013,0)
FIELD^^.03^3
"^DD",365.013,365.013,0,"DDA")
N
"^DD",365.013,365.013,0,"DT")
3020603
"^DD",365.013,365.013,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.013,365.013,0,"IX","B",365.013,.01)

"^DD",365.013,365.013,0,"IX","C",365.013,.02)

"^DD",365.013,365.013,0,"NM","X12 271 SERVICE TYPE")

"^DD",365.013,365.013,0,"PT",2.312,8.02)

"^DD",365.013,365.013,0,"PT",2.322,.04)

"^DD",365.013,365.013,0,"PT",2.32292,.01)

"^DD",365.013,365.013,0,"PT",350.9,60.01)

"^DD",365.013,365.013,0,"PT",350.9,60.02)

"^DD",365.013,365.013,0,"PT",350.9,60.03)

"^DD",365.013,365.013,0,"PT",350.9,60.04)

"^DD",365.013,365.013,0,"PT",350.9,60.05)

"^DD",365.013,365.013,0,"PT",350.9,60.06)

"^DD",365.013,365.013,0,"PT",350.9,60.07)

"^DD",365.013,365.013,0,"PT",350.9,60.08)

"^DD",365.013,365.013,0,"PT",350.9,60.09)

"^DD",365.013,365.013,0,"PT",350.9,60.1)

"^DD",365.013,365.013,0,"PT",350.9,60.11)

"^DD",365.013,365.013,0,"PT",350.9,61.01)

"^DD",365.013,365.013,0,"PT",350.9,61.02)

"^DD",365.013,365.013,0,"PT",350.9,61.03)

"^DD",365.013,365.013,0,"PT",350.9,61.04)

"^DD",365.013,365.013,0,"PT",350.9,61.05)

"^DD",365.013,365.013,0,"PT",350.9,61.06)

"^DD",365.013,365.013,0,"PT",350.9,61.07)

"^DD",365.013,365.013,0,"PT",350.9,61.08)

"^DD",365.013,365.013,0,"PT",350.9,61.09)

"^DD",365.013,365.013,0,"PT",355.33,80.01)

"^DD",365.013,365.013,0,"PT",355.33,80.02)

"^DD",365.013,365.013,0,"PT",355.33,80.03)

"^DD",365.013,365.013,0,"PT",355.33,80.04)

"^DD",365.013,365.013,0,"PT",355.33,80.05)

"^DD",365.013,365.013,0,"PT",355.33,80.06)

"^DD",365.013,365.013,0,"PT",355.33,80.07)

"^DD",365.013,365.013,0,"PT",355.33,80.08)

"^DD",365.013,365.013,0,"PT",355.33,80.09)

"^DD",365.013,365.013,0,"PT",355.33,80.1)

"^DD",365.013,365.013,0,"PT",355.33,80.11)

"^DD",365.013,365.013,0,"PT",355.33,80.12)

"^DD",365.013,365.013,0,"PT",355.33,80.13)

"^DD",365.013,365.013,0,"PT",355.33,80.14)

"^DD",365.013,365.013,0,"PT",355.33,80.15)

"^DD",365.013,365.013,0,"PT",355.33,80.16)

"^DD",365.013,365.013,0,"PT",355.33,80.17)

"^DD",365.013,365.013,0,"PT",355.33,80.18)

"^DD",365.013,365.013,0,"PT",355.33,80.19)

"^DD",365.013,365.013,0,"PT",355.33,80.2)

"^DD",365.013,365.013,0,"PT",356.22,2.03)

"^DD",365.013,365.013,0,"PT",356.2216,.03)

"^DD",365.013,365.013,0,"PT",365.02,.04)

"^DD",365.013,365.013,0,"PT",365.1,.2)

"^DD",365.013,365.013,0,"PT",365.292,.01)

"^DD",365.013,365.013,0,"VRPK")
IB
"^DD",365.013,365.013,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1) X
"^DD",365.013,365.013,.01,1,0)
^.1
"^DD",365.013,365.013,.01,1,1,0)
365.013^B
"^DD",365.013,365.013,.01,1,1,1)
S ^IBE(365.013,"B",$E(X,1,30),DA)=""
"^DD",365.013,365.013,.01,1,1,2)
K ^IBE(365.013,"B",$E(X,1,30),DA)
"^DD",365.013,365.013,.01,1,1,"%D",0)
^^1^1^3020612^
"^DD",365.013,365.013,.01,1,1,"%D",1,0)
Standard "B" cross-reference
"^DD",365.013,365.013,.01,3)
Answer must be 1-2 characters in length
"^DD",365.013,365.013,.01,21,0)
^.001^1^1^3020612^^
"^DD",365.013,365.013,.01,21,1,0)
This is the code value sent in an X.12 271 EB03.
"^DD",365.013,365.013,.01,"DT")
3020517
"^DD",365.013,365.013,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>75!($L(X)<1) X
"^DD",365.013,365.013,.02,1,0)
^.1
"^DD",365.013,365.013,.02,1,1,0)
365.013^C^MUMPS
"^DD",365.013,365.013,.02,1,1,1)
S ^IBE(365.013,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",365.013,365.013,.02,1,1,2)
K ^IBE(365.013,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",365.013,365.013,.02,1,1,"%D",0)
^.101^1^1^3150127^^^^
"^DD",365.013,365.013,.02,1,1,"%D",1,0)
This index is used to provide a Service Type look-up by Description.
"^DD",365.013,365.013,.02,1,1,"DT")
3150127
"^DD",365.013,365.013,.02,3)
Answer must be 1-75 characters in length
"^DD",365.013,365.013,.02,21,0)
^^1^1^3020612^
"^DD",365.013,365.013,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.013,365.013,.02,"DT")
3150127
"^DD",365.013,365.013,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.013,365.013,.03,21,0)
^^2^2^3020612^
"^DD",365.013,365.013,.03,21,1,0)
This field will be marked inactive if a code is
"^DD",365.013,365.013,.03,21,2,0)
determined to no longer be used by X.12.
"^DD",365.013,365.013,.03,"DT")
3020603
"^DD",365.015,365.015,0)
FIELD^^.03^3
"^DD",365.015,365.015,0,"DDA")
N
"^DD",365.015,365.015,0,"DT")
3020603
"^DD",365.015,365.015,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.015,365.015,0,"IX","B",365.015,.01)

"^DD",365.015,365.015,0,"IX","C",365.015,.02)

"^DD",365.015,365.015,0,"NM","X12 271 TIME PERIOD QUALIFIER")

"^DD",365.015,365.015,0,"PT",2.322,.07)

"^DD",365.015,365.015,0,"PT",2.3227,.07)

"^DD",365.015,365.015,0,"PT",356.22,4.05)

"^DD",365.015,365.015,0,"PT",356.2216,5.05)

"^DD",365.015,365.015,0,"PT",365.02,.07)

"^DD",365.015,365.015,0,"PT",365.27,.07)

"^DD",365.015,365.015,0,"VRPK")
IB
"^DD",365.015,365.015,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1) X
"^DD",365.015,365.015,.01,1,0)
^.1
"^DD",365.015,365.015,.01,1,1,0)
365.015^B
"^DD",365.015,365.015,.01,1,1,1)
S ^IBE(365.015,"B",$E(X,1,30),DA)=""
"^DD",365.015,365.015,.01,1,1,2)
K ^IBE(365.015,"B",$E(X,1,30),DA)
"^DD",365.015,365.015,.01,1,1,"%D",0)
^^1^1^3020612^
"^DD",365.015,365.015,.01,1,1,"%D",1,0)
Standard "B" cross-reference
"^DD",365.015,365.015,.01,3)
Answer must be 1-2 characters in length
"^DD",365.015,365.015,.01,21,0)
^.001^1^1^3030320^^
"^DD",365.015,365.015,.01,21,1,0)
This is the code value sent in an X.12 271 EB06.
"^DD",365.015,365.015,.01,"DT")
3020517
"^DD",365.015,365.015,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",365.015,365.015,.02,1,0)
^.1
"^DD",365.015,365.015,.02,1,1,0)
365.015^C^MUMPS
"^DD",365.015,365.015,.02,1,1,1)
S ^IBE(365.015,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",365.015,365.015,.02,1,1,2)
K ^IBE(365.015,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",365.015,365.015,.02,1,1,"%D",0)
^.101^1^1^3150127^^
"^DD",365.015,365.015,.02,1,1,"%D",1,0)
This index is used to provide a lookup by description.
"^DD",365.015,365.015,.02,1,1,"DT")
3150127
"^DD",365.015,365.015,.02,3)
Answer must be 1-30 characters in length
"^DD",365.015,365.015,.02,21,0)
^^1^1^3020612^
"^DD",365.015,365.015,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.015,365.015,.02,"DT")
3150127
"^DD",365.015,365.015,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.015,365.015,.03,21,0)
^^2^2^3020612^
"^DD",365.015,365.015,.03,21,1,0)
This field will be marked inactive if a code is
"^DD",365.015,365.015,.03,21,2,0)
determined to no longer be used by X.12.
"^DD",365.015,365.015,.03,"DT")
3020603
"^DD",365.016,365.016,0)
FIELD^^.03^3
"^DD",365.016,365.016,0,"DDA")
N
"^DD",365.016,365.016,0,"DT")
3020603
"^DD",365.016,365.016,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.016,365.016,0,"IX","B",365.016,.01)

"^DD",365.016,365.016,0,"IX","C",365.016,.02)

"^DD",365.016,365.016,0,"NM","X12 271 QUANTITY QUALIFIER")

"^DD",365.016,365.016,0,"PT",2.322,.1)

"^DD",365.016,365.016,0,"PT",2.3227,.03)

"^DD",365.016,365.016,0,"PT",356.22,4.01)

"^DD",365.016,365.016,0,"PT",356.2216,5.01)

"^DD",365.016,365.016,0,"PT",365.02,.1)

"^DD",365.016,365.016,0,"PT",365.27,.03)

"^DD",365.016,365.016,0,"VRPK")
IB
"^DD",365.016,365.016,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1) X
"^DD",365.016,365.016,.01,1,0)
^.1
"^DD",365.016,365.016,.01,1,1,0)
365.016^B
"^DD",365.016,365.016,.01,1,1,1)
S ^IBE(365.016,"B",$E(X,1,30),DA)=""
"^DD",365.016,365.016,.01,1,1,2)
K ^IBE(365.016,"B",$E(X,1,30),DA)
"^DD",365.016,365.016,.01,1,1,"%D",0)
^^1^1^3020612^
"^DD",365.016,365.016,.01,1,1,"%D",1,0)
Standard "B" cross-reference
"^DD",365.016,365.016,.01,3)
Answer must be 1-2 characters in length
"^DD",365.016,365.016,.01,21,0)
^.001^1^1^3030318^^^^
"^DD",365.016,365.016,.01,21,1,0)
This is the code value sent in an X.12 271 EB09.
"^DD",365.016,365.016,.01,"DT")
3020517
"^DD",365.016,365.016,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",365.016,365.016,.02,1,0)
^.1
"^DD",365.016,365.016,.02,1,1,0)
365.016^C^MUMPS
"^DD",365.016,365.016,.02,1,1,1)
S ^IBE(365.016,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",365.016,365.016,.02,1,1,2)
K ^IBE(365.016,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",365.016,365.016,.02,1,1,"%D",0)
^.101^1^1^3150127^^
"^DD",365.016,365.016,.02,1,1,"%D",1,0)
This index is used to provide a lookup by description.
"^DD",365.016,365.016,.02,1,1,"DT")
3150127
"^DD",365.016,365.016,.02,3)
Answer must be 1-30 characters in length
"^DD",365.016,365.016,.02,21,0)
^^1^1^3020612^
"^DD",365.016,365.016,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.016,365.016,.02,"DT")
3150127
"^DD",365.016,365.016,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.016,365.016,.03,21,0)
^^2^2^3020612^
"^DD",365.016,365.016,.03,21,1,0)
This field will be marked inactive if a code is
"^DD",365.016,365.016,.03,21,2,0)
determined to no longer be used by X.12.
"^DD",365.016,365.016,.03,"DT")
3020603
"^DD",365.017,365.017,0)
FIELD^^.03^3
"^DD",365.017,365.017,0,"DDA")
N
"^DD",365.017,365.017,0,"DT")
3020603
"^DD",365.017,365.017,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.017,365.017,0,"IX","B",365.017,.01)

"^DD",365.017,365.017,0,"NM","X12 271 ERROR CONDITION")

"^DD",365.017,365.017,0,"PT",356.22101,.04)

"^DD",365.017,365.017,0,"PT",365,1.14)

"^DD",365.017,365.017,0,"PT",365.06,.03)

"^DD",365.017,365.017,0,"VRPK")
IB
"^DD",365.017,365.017,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",365.017,365.017,.01,1,0)
^.1
"^DD",365.017,365.017,.01,1,1,0)
365.017^B
"^DD",365.017,365.017,.01,1,1,1)
S ^IBE(365.017,"B",$E(X,1,30),DA)=""
"^DD",365.017,365.017,.01,1,1,2)
K ^IBE(365.017,"B",$E(X,1,30),DA)
"^DD",365.017,365.017,.01,1,1,"%D",0)
^^1^1^3020612^
"^DD",365.017,365.017,.01,1,1,"%D",1,0)
Standard "B" cross-reference
"^DD",365.017,365.017,.01,3)
Answer must be 1-2 characters in length.
"^DD",365.017,365.017,.01,21,0)
^.001^1^1^3140910^^
"^DD",365.017,365.017,.01,21,1,0)
This is the code value sent in an X.12 271 AAA03 as an error.
"^DD",365.017,365.017,.01,"DT")
3020517
"^DD",365.017,365.017,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>75!($L(X)<1) X
"^DD",365.017,365.017,.02,3)
Answer must be 1-75 characters in length
"^DD",365.017,365.017,.02,21,0)
^^1^1^3020612^
"^DD",365.017,365.017,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.017,365.017,.02,"DT")
3020517
"^DD",365.017,365.017,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.017,365.017,.03,21,0)
^^2^2^3020612^
"^DD",365.017,365.017,.03,21,1,0)
This field will be marked inactive if a code is
"^DD",365.017,365.017,.03,21,2,0)
determined to no longer be used by X.12.
"^DD",365.017,365.017,.03,"DT")
3020603
"^DD",365.021,365.021,0)
FIELD^^.03^3
"^DD",365.021,365.021,0,"DDA")
N
"^DD",365.021,365.021,0,"DT")
3020603
"^DD",365.021,365.021,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.021,365.021,0,"IX","B",365.021,.01)

"^DD",365.021,365.021,0,"IX","C",365.021,.02)

"^DD",365.021,365.021,0,"NM","X12 271 CONTACT QUALIFIER")

"^DD",365.021,365.021,0,"PT",2.3226,.04)

"^DD",365.021,365.021,0,"PT",356.22,19.01)

"^DD",365.021,365.021,0,"PT",356.22,19.02)

"^DD",365.021,365.021,0,"PT",356.22,19.03)

"^DD",365.021,365.021,0,"PT",356.2213,.07)

"^DD",365.021,365.021,0,"PT",356.2213,.08)

"^DD",365.021,365.021,0,"PT",356.2213,.09)

"^DD",365.021,365.021,0,"PT",356.22168,.07)

"^DD",365.021,365.021,0,"PT",356.22168,.08)

"^DD",365.021,365.021,0,"PT",356.22168,.09)

"^DD",365.021,365.021,0,"PT",365.03,.02)

"^DD",365.021,365.021,0,"PT",365.03,.04)

"^DD",365.021,365.021,0,"PT",365.03,.06)

"^DD",365.021,365.021,0,"PT",365.26,.04)

"^DD",365.021,365.021,0,"VRPK")
IB
"^DD",365.021,365.021,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",365.021,365.021,.01,1,0)
^.1
"^DD",365.021,365.021,.01,1,1,0)
365.021^B
"^DD",365.021,365.021,.01,1,1,1)
S ^IBE(365.021,"B",$E(X,1,30),DA)=""
"^DD",365.021,365.021,.01,1,1,2)
K ^IBE(365.021,"B",$E(X,1,30),DA)
"^DD",365.021,365.021,.01,1,1,"%D",0)
^^1^1^3020612^
"^DD",365.021,365.021,.01,1,1,"%D",1,0)
Standard "B" cross-reference
"^DD",365.021,365.021,.01,3)
Answer must be 2 characters in length.
"^DD",365.021,365.021,.01,21,0)
^^1^1^3020612^
"^DD",365.021,365.021,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",365.021,365.021,.01,"DT")
3020517
"^DD",365.021,365.021,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",365.021,365.021,.02,1,0)
^.1
"^DD",365.021,365.021,.02,1,1,0)
365.021^C^MUMPS
"^DD",365.021,365.021,.02,1,1,1)
S ^IBE(365.021,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",365.021,365.021,.02,1,1,2)
K ^IBE(365.021,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",365.021,365.021,.02,1,1,"%D",0)
^.101^1^1^3150127^^
"^DD",365.021,365.021,.02,1,1,"%D",1,0)
This index provides a lookup by Description.
"^DD",365.021,365.021,.02,1,1,"DT")
3150127
"^DD",365.021,365.021,.02,3)
Answer must be 1-30 characters in length.
"^DD",365.021,365.021,.02,21,0)
^^1^1^3020612^
"^DD",365.021,365.021,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.021,365.021,.02,"DT")
3150127
"^DD",365.021,365.021,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.021,365.021,.03,21,0)
^^2^2^3020612^
"^DD",365.021,365.021,.03,21,1,0)
This field will be marked inactive if a code is
"^DD",365.021,365.021,.03,21,2,0)
determined to no longer be used by X.12.
"^DD",365.021,365.021,.03,"DT")
3020603
"^DD",365.022,365.022,0)
FIELD^^.03^3
"^DD",365.022,365.022,0,"DDA")
N
"^DD",365.022,365.022,0,"DT")
3090710
"^DD",365.022,365.022,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.022,365.022,0,"IX","B",365.022,.01)

"^DD",365.022,365.022,0,"IX","C",365.022,.02)

"^DD",365.022,365.022,0,"NM","X12 271 ENTITY IDENTIFIER CODE")

"^DD",365.022,365.022,0,"PT",2.322,3.01)

"^DD",365.022,365.022,0,"PT",356.2213,.01)

"^DD",365.022,365.022,0,"PT",356.2213,4.02)

"^DD",365.022,365.022,0,"PT",356.22168,.01)

"^DD",365.022,365.022,0,"PT",356.22168,4.02)

"^DD",365.022,365.022,0,"PT",365.02,3.01)

"^DD",365.022,365.022,0,"VRPK")
IB
"^DD",365.022,365.022,.01,0)
CODE^RF^^0;1^K:$L(X)>3!($L(X)<2)!'(X'?1P.E) X
"^DD",365.022,365.022,.01,1,0)
^.1
"^DD",365.022,365.022,.01,1,1,0)
365.022^B
"^DD",365.022,365.022,.01,1,1,1)
S ^IBE(365.022,"B",$E(X,1,30),DA)=""
"^DD",365.022,365.022,.01,1,1,2)
K ^IBE(365.022,"B",$E(X,1,30),DA)
"^DD",365.022,365.022,.01,3)
Answer must be 2-3 characters in length.
"^DD",365.022,365.022,.01,21,0)
^^1^1^3090710^
"^DD",365.022,365.022,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",365.022,365.022,.01,"DT")
3090710
"^DD",365.022,365.022,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",365.022,365.022,.02,1,0)
^.1
"^DD",365.022,365.022,.02,1,1,0)
365.022^C^MUMPS
"^DD",365.022,365.022,.02,1,1,1)
S ^IBE(365.022,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",365.022,365.022,.02,1,1,2)
K ^IBE(365.022,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",365.022,365.022,.02,1,1,"%D",0)
^.101^1^1^3150127^^
"^DD",365.022,365.022,.02,1,1,"%D",1,0)
This index is used to provide a lookup by description.
"^DD",365.022,365.022,.02,1,1,"DT")
3150127
"^DD",365.022,365.022,.02,3)
Answer must be 1-40 characters in length.
"^DD",365.022,365.022,.02,21,0)
^^1^1^3090710^
"^DD",365.022,365.022,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.022,365.022,.02,"DT")
3150127
"^DD",365.022,365.022,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.022,365.022,.03,3)
Set this to YES in order to deactivate the code.
"^DD",365.022,365.022,.03,21,0)
^^2^2^3090710^
"^DD",365.022,365.022,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer be
"^DD",365.022,365.022,.03,21,2,0)
used by X.12.
"^DD",365.022,365.022,.03,"DT")
3090710
"^DD",365.025,365.025,0)
FIELD^^.03^3
"^DD",365.025,365.025,0,"DDA")
N
"^DD",365.025,365.025,0,"DT")
3090713
"^DD",365.025,365.025,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.025,365.025,0,"IX","B",365.025,.01)

"^DD",365.025,365.025,0,"IX","C",365.025,.02)

"^DD",365.025,365.025,0,"NM","X12 271 DELIVERY FREQUENCY CODE")

"^DD",365.025,365.025,0,"PT",2.3227,.08)

"^DD",365.025,365.025,0,"PT",356.22,4.07)

"^DD",365.025,365.025,0,"PT",356.2216,5.07)

"^DD",365.025,365.025,0,"PT",365.27,.08)

"^DD",365.025,365.025,0,"VRPK")
IB
"^DD",365.025,365.025,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",365.025,365.025,.01,1,0)
^.1
"^DD",365.025,365.025,.01,1,1,0)
365.025^B
"^DD",365.025,365.025,.01,1,1,1)
S ^IBE(365.025,"B",$E(X,1,30),DA)=""
"^DD",365.025,365.025,.01,1,1,2)
K ^IBE(365.025,"B",$E(X,1,30),DA)
"^DD",365.025,365.025,.01,3)
Answer must be 1-2 characters in length.
"^DD",365.025,365.025,.01,21,0)
^^1^1^3090713^
"^DD",365.025,365.025,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",365.025,365.025,.01,"DT")
3090713
"^DD",365.025,365.025,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>35!($L(X)<1) X
"^DD",365.025,365.025,.02,1,0)
^.1
"^DD",365.025,365.025,.02,1,1,0)
365.025^C^MUMPS
"^DD",365.025,365.025,.02,1,1,1)
S ^IBE(365.025,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",365.025,365.025,.02,1,1,2)
K ^IBE(365.025,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",365.025,365.025,.02,1,1,"%D",0)
^.101^1^1^3150127^^
"^DD",365.025,365.025,.02,1,1,"%D",1,0)
This index is used to provide a lookup by description.
"^DD",365.025,365.025,.02,1,1,"DT")
3150127
"^DD",365.025,365.025,.02,3)
Answer must be 1-35 characters in length.
"^DD",365.025,365.025,.02,21,0)
^^1^1^3090713^
"^DD",365.025,365.025,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.025,365.025,.02,"DT")
3150127
"^DD",365.025,365.025,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.025,365.025,.03,3)
Set this to YES in order to deactivate the code.
"^DD",365.025,365.025,.03,21,0)
^^2^2^3090713^
"^DD",365.025,365.025,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer 
"^DD",365.025,365.025,.03,21,2,0)
be used by X.12.
"^DD",365.025,365.025,.03,"DT")
3090713
"^DD",365.027,365.027,0)
FIELD^^.03^3
"^DD",365.027,365.027,0,"DDA")
N
"^DD",365.027,365.027,0,"DT")
3140911
"^DD",365.027,365.027,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",365.027,365.027,0,"IX","B",365.027,.01)

"^DD",365.027,365.027,0,"NM","X12 271 LOOP ID")

"^DD",365.027,365.027,0,"PT",356.22101,.02)

"^DD",365.027,365.027,0,"PT",356.22105,.02)

"^DD",365.027,365.027,0,"PT",356.2213,.04)

"^DD",365.027,365.027,0,"PT",356.2213,4.01)

"^DD",365.027,365.027,0,"PT",356.22168,.04)

"^DD",365.027,365.027,0,"PT",356.22168,4.01)

"^DD",365.027,365.027,0,"PT",365.06,.05)

"^DD",365.027,365.027,0,"PT",365.07,.04)

"^DD",365.027,365.027,0,"VRPK")
IB
"^DD",365.027,365.027,.01,0)
CODE^RF^^0;1^K:$L(X)>6!($L(X)<1)!'(X'?1P.E) X
"^DD",365.027,365.027,.01,1,0)
^.1
"^DD",365.027,365.027,.01,1,1,0)
365.027^B
"^DD",365.027,365.027,.01,1,1,1)
S ^IBE(365.027,"B",$E(X,1,30),DA)=""
"^DD",365.027,365.027,.01,1,1,2)
K ^IBE(365.027,"B",$E(X,1,30),DA)
"^DD",365.027,365.027,.01,3)
Answer must be 1-6 characters in length.
"^DD",365.027,365.027,.01,21,0)
^.001^1^1^3140911^^
"^DD",365.027,365.027,.01,21,1,0)
This is the code value sent in an X.12 message.
"^DD",365.027,365.027,.01,"DT")
3140911
"^DD",365.027,365.027,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",365.027,365.027,.02,3)
Answer must be 1-30 characters in length.
"^DD",365.027,365.027,.02,21,0)
^^1^1^3100806^
"^DD",365.027,365.027,.02,21,1,0)
This describes the code value in more detail.
"^DD",365.027,365.027,.02,"DT")
3100806
"^DD",365.027,365.027,.03,0)
INACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",365.027,365.027,.03,3)
Set this to YES in order to deactivate the code.
"^DD",365.027,365.027,.03,21,0)
^^2^2^3100806^
"^DD",365.027,365.027,.03,21,1,0)
This field will be marked inactive if a code is determined to no longer be
"^DD",365.027,365.027,.03,21,2,0)
used by X.12.
"^DD",365.027,365.027,.03,"DT")
3100806
"^DD",399,399,112,0)
PRIMARY INSURANCE POLICY^FXO^^M;12^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<1) X D:$D(X) DD^IBCNS2(X,DA,1)
"^DD",399,399,112,1,0)
^.1
"^DD",399,399,112,1,1,0)
^^TRIGGER^399^101
"^DD",399,399,112,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y X ^DD(399,112,1,1,1.1) X ^DD(399,112,1,1,1.4)
"^DD",399,399,112,1,1,1.1)
S X=DIV S X=+$$INSCO^IBCNS2(DA,$P(^DGCR(399,DA,"M"),U,12))
"^DD",399,399,112,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,1)=DIV,DIH=399,DIG=101 D ^DICR
"^DD",399,399,112,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" X ^DD(399,112,1,1,2.4)
"^DD",399,399,112,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,1)=DIV,DIH=399,DIG=101 D ^DICR
"^DD",399,399,112,1,1,"CREATE VALUE")
S X=+$$INSCO^IBCNS2(DA,$P(^DGCR(399,DA,"M"),U,12))
"^DD",399,399,112,1,1,"DELETE VALUE")
@
"^DD",399,399,112,1,1,"DT")
3000124
"^DD",399,399,112,1,1,"FIELD")
#101
"^DD",399,399,112,1,2,0)
399^AI11^MUMPS
"^DD",399,399,112,1,2,1)
D IX^IBCNS2(DA,"I1")
"^DD",399,399,112,1,2,2)
D KIX^IBCNS2(DA,"I1")
"^DD",399,399,112,1,2,"%D",0)
^^2^2^2931220^^
"^DD",399,399,112,1,2,"%D",1,0)
Sets "I1" x-ref and "aic" x-ref for bill/claims file.  These indexes 
"^DD",399,399,112,1,2,"%D",2,0)
previously were set by field #101.
"^DD",399,399,112,1,2,"DT")
2931220
"^DD",399,399,112,1,3,0)
^^TRIGGER^399^136
"^DD",399,399,112,1,3,1)
X ^DD(399,112,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$BPP^IBCNS2(DA,1) X ^DD(399,112,1,3,1.4)
"^DD",399,399,112,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,.21,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,21)_":",2),$C(59),1)="PRIMARY INSURANCE"
"^DD",399,399,112,1,3,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR
"^DD",399,399,112,1,3,2)
X ^DD(399,112,1,3,2.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(399,112,1,3,2.4)
"^DD",399,399,112,1,3,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,.21,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,21)_":",2),$C(59),1)="PRIMARY INSURANCE"
"^DD",399,399,112,1,3,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR
"^DD",399,399,112,1,3,"%D",0)
^^1^1^2990503^^
"^DD",399,399,112,1,3,"%D",1,0)
If this is a Primary Bill then set Bill Payer to the Primary Payer.
"^DD",399,399,112,1,3,"CREATE CONDITION")
CURRENT BILL PAYER SEQUENCE="PRIMARY INSURANCE"
"^DD",399,399,112,1,3,"CREATE VALUE")
S X=$$BPP^IBCNS2(DA,1)
"^DD",399,399,112,1,3,"DELETE CONDITION")
CURRENT BILL PAYER SEQUENCE="PRIMARY INSURANCE"
"^DD",399,399,112,1,3,"DELETE VALUE")
@
"^DD",399,399,112,1,3,"DT")
2970821
"^DD",399,399,112,1,3,"FIELD")
BILL PAYER POLICY
"^DD",399,399,112,1,4,0)
^^TRIGGER^399^163
"^DD",399,399,112,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=$$AUTH^IBCNS4(D0,X) S DIH=$G(^DGCR(399,DIV(0),"U")),DIV=X S $P(^("U"),U,13)=DIV,DIH=399,DIG=163 D ^DICR
"^DD",399,399,112,1,4,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"U")),DIV=X S $P(^("U"),U,13)=DIV,DIH=399,DIG=163 D ^DICR
"^DD",399,399,112,1,4,"CREATE VALUE")
S X=$$AUTH^IBCNS4(D0,X)
"^DD",399,399,112,1,4,"DELETE VALUE")
@
"^DD",399,399,112,1,4,"DT")
3140903
"^DD",399,399,112,1,4,"FIELD")
TREATMENT AUTH
"^DD",399,399,112,1,5,0)
^^TRIGGER^399^253
"^DD",399,399,112,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"UF32")):^("UF32"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X=$$REF^IBCNS4(D0,X) X ^DD(399,112,1,5,1.4)
"^DD",399,399,112,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"UF32")),DIV=X S $P(^("UF32"),U,1)=DIV,DIH=399,DIG=253 D ^DICR
"^DD",399,399,112,1,5,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"UF32")):^("UF32"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"UF32")),DIV=X S $P(^("UF32"),U,1)=DIV,DIH=399,DIG=253 D ^DICR
"^DD",399,399,112,1,5,"CREATE VALUE")
S X=$$REF^IBCNS4(D0,X)
"^DD",399,399,112,1,5,"DELETE VALUE")
@
"^DD",399,399,112,1,5,"DT")
3140903
"^DD",399,399,112,1,5,"FIELD")
PRIMARY REF
"^DD",399,399,112,2)
S Y(0)=Y S Y=$$TRANS^IBCNS2($G(DA,D0),Y)
"^DD",399,399,112,2.1)
S Y=$$TRANS^IBCNS2($G(DA,D0),Y)
"^DD",399,399,112,3)
Select this patient's insurance policy that is the primary policy to be billed.  Enter the name of the Ins. Company or its internal entry number.
"^DD",399,399,112,4)
D DDHELP^IBCNS2(DA,1)
"^DD",399,399,112,5,1,0)
399^.11^1
"^DD",399,399,112,21,0)
^.001^1^1^3001030^^^^
"^DD",399,399,112,21,1,0)
The policy to be billed for this episode of care.
"^DD",399,399,112,"DT")
3140903
"^DD",399,399,113,0)
SECONDARY INSURANCE POLICY^FOX^^M;13^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<1) X D:$D(X) DD^IBCNS2(X,DA,2)
"^DD",399,399,113,1,0)
^.1
"^DD",399,399,113,1,1,0)
^^TRIGGER^399^102
"^DD",399,399,113,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(399,113,1,1,1.1) X ^DD(399,113,1,1,1.4)
"^DD",399,399,113,1,1,1.1)
S X=DIV S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,13))
"^DD",399,399,113,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,2)=DIV,DIH=399,DIG=102 D ^DICR
"^DD",399,399,113,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(399,113,1,1,2.4)
"^DD",399,399,113,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,2)=DIV,DIH=399,DIG=102 D ^DICR
"^DD",399,399,113,1,1,"CREATE VALUE")
S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,13))
"^DD",399,399,113,1,1,"DELETE VALUE")
@
"^DD",399,399,113,1,1,"DT")
2931203
"^DD",399,399,113,1,1,"FIELD")
SECONDARY INSURANCE CARRIER
"^DD",399,399,113,1,2,0)
399^AI21^MUMPS
"^DD",399,399,113,1,2,1)
D IX^IBCNS2(DA,"I2")
"^DD",399,399,113,1,2,2)
D KIX^IBCNS2(DA,"I2")
"^DD",399,399,113,1,2,"%D",0)
^^2^2^2931220^
"^DD",399,399,113,1,2,"%D",1,0)
Sets "I2" x-ref and "aic" x-ref for bill/claims file.  These indexes 
"^DD",399,399,113,1,2,"%D",2,0)
previously were set by field #102.
"^DD",399,399,113,1,2,"DT")
2931220
"^DD",399,399,113,1,3,0)
^^TRIGGER^399^136
"^DD",399,399,113,1,3,1)
X ^DD(399,113,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$BPP^IBCNS2(DA,1) X ^DD(399,113,1,3,1.4)
"^DD",399,399,113,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,.21,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,21)_":",2),$C(59),1)="SECONDARY INSURANCE"
"^DD",399,399,113,1,3,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR
"^DD",399,399,113,1,3,2)
X ^DD(399,113,1,3,2.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(399,113,1,3,2.4)
"^DD",399,399,113,1,3,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,.21,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,21)_":",2),$C(59),1)="SECONDARY INSURANCE"
"^DD",399,399,113,1,3,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR
"^DD",399,399,113,1,3,"%D",0)
^^1^1^2970821^
"^DD",399,399,113,1,3,"%D",1,0)
If this is a Secondary Bill then set the Bill Payer to the Secondary Payer.
"^DD",399,399,113,1,3,"CREATE CONDITION")
CURRENT BILL PAYER SEQUENCE="SECONDARY INSURANCE"
"^DD",399,399,113,1,3,"CREATE VALUE")
S X=$$BPP^IBCNS2(DA,1)
"^DD",399,399,113,1,3,"DELETE CONDITION")
CURRENT BILL PAYER SEQUENCE="SECONDARY INSURANCE"
"^DD",399,399,113,1,3,"DELETE VALUE")
@
"^DD",399,399,113,1,3,"DT")
2970821
"^DD",399,399,113,1,3,"FIELD")
BILL PAYER POLICY
"^DD",399,399,113,1,4,0)
^^TRIGGER^399^230
"^DD",399,399,113,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=$$AUTH^IBCNS4(D0,X) S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,8)=DIV,DIH=399,DIG=230 D ^DICR
"^DD",399,399,113,1,4,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,8)=DIV,DIH=399,DIG=230 D ^DICR
"^DD",399,399,113,1,4,"CREATE VALUE")
S X=$$AUTH^IBCNS4(D0,X)
"^DD",399,399,113,1,4,"DELETE VALUE")
@
"^DD",399,399,113,1,4,"DT")
3140903
"^DD",399,399,113,1,4,"FIELD")
SECONDARY AUTH
"^DD",399,399,113,1,5,0)
^^TRIGGER^399^254
"^DD",399,399,113,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"UF32")):^("UF32"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$REF^IBCNS4(D0,X) X ^DD(399,113,1,5,1.4)
"^DD",399,399,113,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"UF32")),DIV=X S $P(^("UF32"),U,2)=DIV,DIH=399,DIG=254 D ^DICR
"^DD",399,399,113,1,5,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"UF32")):^("UF32"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"UF32")),DIV=X S $P(^("UF32"),U,2)=DIV,DIH=399,DIG=254 D ^DICR
"^DD",399,399,113,1,5,"CREATE VALUE")
S X=$$REF^IBCNS4(D0,X)
"^DD",399,399,113,1,5,"DELETE VALUE")
@
"^DD",399,399,113,1,5,"DT")
3140903
"^DD",399,399,113,1,5,"FIELD")
SECONDARY REF
"^DD",399,399,113,2)
S Y(0)=Y S Y=$$TRANS^IBCNS2($G(DA,D0),Y)
"^DD",399,399,113,2.1)
S Y=$$TRANS^IBCNS2($G(DA,D0),Y)
"^DD",399,399,113,3)
Select this patient's insurance policy that is the secondary policy to be billed.  Enter the name of the Ins. Company or its internal entry number.
"^DD",399,399,113,4)
D DDHELP^IBCNS2(DA,2)
"^DD",399,399,113,21,0)
^^1^1^2940214^
"^DD",399,399,113,21,1,0)
The secondary policy to be billed for this episode of care.
"^DD",399,399,113,"DT")
3140903
"^DD",399,399,114,0)
TERTIARY INSURANCE POLICY^FOX^^M;14^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<1) X D:$D(X) DD^IBCNS2(X,DA,3)
"^DD",399,399,114,1,0)
^.1
"^DD",399,399,114,1,1,0)
^^TRIGGER^399^103
"^DD",399,399,114,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y X ^DD(399,114,1,1,1.1) X ^DD(399,114,1,1,1.4)
"^DD",399,399,114,1,1,1.1)
S X=DIV S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,14))
"^DD",399,399,114,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,3)=DIV,DIH=399,DIG=103 D ^DICR
"^DD",399,399,114,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(399,114,1,1,2.4)
"^DD",399,399,114,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,3)=DIV,DIH=399,DIG=103 D ^DICR
"^DD",399,399,114,1,1,"CREATE VALUE")
S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,14))
"^DD",399,399,114,1,1,"DELETE VALUE")
@
"^DD",399,399,114,1,1,"DT")
2931203
"^DD",399,399,114,1,1,"FIELD")
TERTIARY INSURANCE CARRIER
"^DD",399,399,114,1,2,0)
399^AI31^MUMPS
"^DD",399,399,114,1,2,1)
D IX^IBCNS2(DA,"I3")
"^DD",399,399,114,1,2,2)
D KIX^IBCNS2(DA,"I3")
"^DD",399,399,114,1,2,"%D",0)
^^2^2^2931220^
"^DD",399,399,114,1,2,"%D",1,0)
Sets "I3" x-ref and "aic" x-ref for bill/claims file.  These indexes 
"^DD",399,399,114,1,2,"%D",2,0)
previously were set by field #103.
"^DD",399,399,114,1,2,"DT")
2931220
"^DD",399,399,114,1,3,0)
^^TRIGGER^399^136
"^DD",399,399,114,1,3,1)
X ^DD(399,114,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$BPP^IBCNS2(DA) X ^DD(399,114,1,3,1.4)
"^DD",399,399,114,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,.21,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,21)_":",2),$C(59),1)="TERTIARY INSURANCE"
"^DD",399,399,114,1,3,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR
"^DD",399,399,114,1,3,2)
X ^DD(399,114,1,3,2.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(399,114,1,3,2.4)
"^DD",399,399,114,1,3,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,.21,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,21)_":",2),$C(59),1)="TERTIARY INSURANCE"
"^DD",399,399,114,1,3,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"MP")):^("MP"),1:""),DIV=X S $P(^("MP"),U,2)=DIV,DIH=399,DIG=136 D ^DICR
"^DD",399,399,114,1,3,"%D",0)
^^1^1^2970821^
"^DD",399,399,114,1,3,"%D",1,0)
If this is a Tertiary Bill then set the Bill Payer to the Tertiary Payer.
"^DD",399,399,114,1,3,"CREATE CONDITION")
CURRENT BILL PAYER SEQUENCE="TERTIARY INSURANCE"
"^DD",399,399,114,1,3,"CREATE VALUE")
S X=$$BPP^IBCNS2(DA)
"^DD",399,399,114,1,3,"DELETE CONDITION")
CURRENT BILL PAYER SEQUENCE="TERTIARY INSURANCE"
"^DD",399,399,114,1,3,"DELETE VALUE")
@
"^DD",399,399,114,1,3,"DT")
2970821
"^DD",399,399,114,1,3,"FIELD")
BILL PAYER POLICY
"^DD",399,399,114,1,4,0)
^^TRIGGER^399^231
"^DD",399,399,114,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=$$AUTH^IBCNS4(D0,X) S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,9)=DIV,DIH=399,DIG=231 D ^DICR
"^DD",399,399,114,1,4,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,9)=DIV,DIH=399,DIG=231 D ^DICR
"^DD",399,399,114,1,4,"CREATE VALUE")
S X=$$AUTH^IBCNS4(D0,X)
"^DD",399,399,114,1,4,"DELETE VALUE")
@
"^DD",399,399,114,1,4,"DT")
3140903
"^DD",399,399,114,1,4,"FIELD")
TERTIARY AUTH
"^DD",399,399,114,1,5,0)
^^TRIGGER^399^255
"^DD",399,399,114,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"UF32")):^("UF32"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$REF^IBCNS4(D0,X) X ^DD(399,114,1,5,1.4)
"^DD",399,399,114,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"UF32")),DIV=X S $P(^("UF32"),U,3)=DIV,DIH=399,DIG=255 D ^DICR
"^DD",399,399,114,1,5,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"UF32")):^("UF32"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"UF32")),DIV=X S $P(^("UF32"),U,3)=DIV,DIH=399,DIG=255 D ^DICR
"^DD",399,399,114,1,5,"CREATE VALUE")
S X=$$REF^IBCNS4(D0,X)
"^DD",399,399,114,1,5,"DELETE VALUE")
@
"^DD",399,399,114,1,5,"DT")
3140903
"^DD",399,399,114,1,5,"FIELD")
TERTIARY REF
"^DD",399,399,114,2)
S Y(0)=Y S Y=$$TRANS^IBCNS2($G(DA,D0),Y)
"^DD",399,399,114,2.1)
S Y=$$TRANS^IBCNS2($G(DA,D0),Y)
"^DD",399,399,114,3)
Select this patient's insurance policy that is the tertiary policy to be billed.  Enter the name of the Ins. Company or its internal entry number.
"^DD",399,399,114,4)
D DDHELP^IBCNS2(DA,3)
"^DD",399,399,114,21,0)
^^1^1^2940214^
"^DD",399,399,114,21,1,0)
The tertiary policy to be billed for this episode of care.
"^DD",399,399,114,"DT")
3140903
"^DIC",356.001,356.001,0)
X12 278 REQUEST CATEGORY^356.001
"^DIC",356.001,356.001,0,"GL")
^IBT(356.001,
"^DIC",356.001,356.001,"%",0)
^1.005^^
"^DIC",356.001,356.001,"%D",0)
^^4^4^3140406^
"^DIC",356.001,356.001,"%D",1,0)
This file contains all the corresponding X.12 codes for request 
"^DIC",356.001,356.001,"%D",2,0)
categories.
"^DIC",356.001,356.001,"%D",3,0)
 
"^DIC",356.001,356.001,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.001,"B","X12 278 REQUEST CATEGORY",356.001)

"^DIC",356.002,356.002,0)
X12 278 CERTIFICATION TYPE CODE^356.002
"^DIC",356.002,356.002,0,"GL")
^IBT(356.002,
"^DIC",356.002,356.002,"%",0)
^1.005^^
"^DIC",356.002,356.002,"%D",0)
^^4^4^3140406^
"^DIC",356.002,356.002,"%D",1,0)
This file contains all the corresponding X.12 codes for certification 
"^DIC",356.002,356.002,"%D",2,0)
type codes.
"^DIC",356.002,356.002,"%D",3,0)
 
"^DIC",356.002,356.002,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.002,"B","X12 278 CERTIFICATION TYPE CODE",356.002)

"^DIC",356.003,356.003,0)
X12 278 CURRENT HEALTH CONDITION CODE^356.003
"^DIC",356.003,356.003,0,"GL")
^IBT(356.003,
"^DIC",356.003,356.003,"%",0)
^1.005^^
"^DIC",356.003,356.003,"%D",0)
^^4^4^3140406^
"^DIC",356.003,356.003,"%D",1,0)
This file contains all the corresponding X.12 codes for current health 
"^DIC",356.003,356.003,"%D",2,0)
condition.
"^DIC",356.003,356.003,"%D",3,0)
 
"^DIC",356.003,356.003,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.003,"B","X12 278 CURRENT HEALTH CONDITION CODE",356.003)

"^DIC",356.004,356.004,0)
X12 278 PROGNOSIS CODE^356.004
"^DIC",356.004,356.004,0,"GL")
^IBT(356.004,
"^DIC",356.004,356.004,"%",0)
^1.005^^
"^DIC",356.004,356.004,"%D",0)
^^3^3^3140406^
"^DIC",356.004,356.004,"%D",1,0)
This file contains all the corresponding X.12 codes for prognosis.
"^DIC",356.004,356.004,"%D",2,0)
 
"^DIC",356.004,356.004,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.004,"B","X12 278 PROGNOSIS CODE",356.004)

"^DIC",356.005,356.005,0)
X12 278 DELAY REASON CODE^356.005
"^DIC",356.005,356.005,0,"GL")
^IBT(356.005,
"^DIC",356.005,356.005,"%",0)
^1.005^^
"^DIC",356.005,356.005,"%D",0)
^^3^3^3140406^
"^DIC",356.005,356.005,"%D",1,0)
This file contains all the corresponding X.12 codes for delay reasons.
"^DIC",356.005,356.005,"%D",2,0)
 
"^DIC",356.005,356.005,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.005,"B","X12 278 DELAY REASON CODE",356.005)

"^DIC",356.006,356.006,0)
X12 278 DIAGNOSIS TYPE^356.006
"^DIC",356.006,356.006,0,"GL")
^IBT(356.006,
"^DIC",356.006,356.006,"%",0)
^1.005^^
"^DIC",356.006,356.006,"%D",0)
^^3^3^3140408^
"^DIC",356.006,356.006,"%D",1,0)
This file contains all the corresponding X.12 codes for diagnosis types.
"^DIC",356.006,356.006,"%D",2,0)
 
"^DIC",356.006,356.006,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.006,"B","X12 278 DIAGNOSIS TYPE",356.006)

"^DIC",356.007,356.007,0)
X12 278 DELIVERY PATTERN TIME CODE^356.007
"^DIC",356.007,356.007,0,"GL")
^IBT(356.007,
"^DIC",356.007,356.007,"%",0)
^1.005^^
"^DIC",356.007,356.007,"%D",0)
^^4^4^3140408^
"^DIC",356.007,356.007,"%D",1,0)
This file contains all the corresponding X.12 codes for delivery time 
"^DIC",356.007,356.007,"%D",2,0)
pattern.
"^DIC",356.007,356.007,"%D",3,0)
 
"^DIC",356.007,356.007,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.007,"B","X12 278 DELIVERY PATTERN TIME CODE",356.007)

"^DIC",356.008,356.008,0)
X12 278 CONDITION CODE^356.008
"^DIC",356.008,356.008,0,"GL")
^IBT(356.008,
"^DIC",356.008,356.008,"%",0)
^1.005^^
"^DIC",356.008,356.008,"%D",0)
^^3^3^3140409^
"^DIC",356.008,356.008,"%D",1,0)
This file contains all the corresponding X.12 codes for condition.
"^DIC",356.008,356.008,"%D",2,0)
 
"^DIC",356.008,356.008,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.008,"B","X12 278 CONDITION CODE",356.008)

"^DIC",356.009,356.009,0)
X12 278 ADMISSION SOURCE^356.009
"^DIC",356.009,356.009,0,"GL")
^IBT(356.009,
"^DIC",356.009,356.009,"%",0)
^1.005^^
"^DIC",356.009,356.009,"%D",0)
^^3^3^3140415^
"^DIC",356.009,356.009,"%D",1,0)
This file contains all the corresponding X.12 codes for admission source.
"^DIC",356.009,356.009,"%D",2,0)
 
"^DIC",356.009,356.009,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.009,"B","X12 278 ADMISSION SOURCE",356.009)

"^DIC",356.01,356.01,0)
X12 278 PATIENT STATUS^356.01
"^DIC",356.01,356.01,0,"GL")
^IBT(356.01,
"^DIC",356.01,356.01,"%",0)
^1.005^^
"^DIC",356.01,356.01,"%D",0)
^^3^3^3140415^
"^DIC",356.01,356.01,"%D",1,0)
This file contains all the corresponding X.12 codes for patient status.
"^DIC",356.01,356.01,"%D",2,0)
 
"^DIC",356.01,356.01,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.01,"B","X12 278 PATIENT STATUS",356.01)

"^DIC",356.011,356.011,0)
X12 278 NURSING HOME RESIDENTIAL STATUS^356.011
"^DIC",356.011,356.011,0,"GL")
^IBT(356.011,
"^DIC",356.011,356.011,"%",0)
^1.005^^
"^DIC",356.011,356.011,"%D",0)
^^4^4^3140416^
"^DIC",356.011,356.011,"%D",1,0)
This file contains all the corresponding X.12 codes for nursing home 
"^DIC",356.011,356.011,"%D",2,0)
residential status.
"^DIC",356.011,356.011,"%D",3,0)
 
"^DIC",356.011,356.011,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.011,"B","X12 278 NURSING HOME RESIDENTIAL STATUS",356.011)

"^DIC",356.012,356.012,0)
X12 278 SUBLUXATION LEVEL CODE^356.012
"^DIC",356.012,356.012,0,"GL")
^IBT(356.012,
"^DIC",356.012,356.012,"%",0)
^1.005^^
"^DIC",356.012,356.012,"%D",0)
^^3^3^3140416^
"^DIC",356.012,356.012,"%D",1,0)
This file contains all the corresponding X.12 codes for subluxation level.
"^DIC",356.012,356.012,"%D",2,0)
 
"^DIC",356.012,356.012,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.012,"B","X12 278 SUBLUXATION LEVEL CODE",356.012)

"^DIC",356.013,356.013,0)
X12 278 OXYGEN EQUIPMENT TYPE^356.013
"^DIC",356.013,356.013,0,"GL")
^IBT(356.013,
"^DIC",356.013,356.013,"%",0)
^1.005^^
"^DIC",356.013,356.013,"%D",0)
^^4^4^3140420^
"^DIC",356.013,356.013,"%D",1,0)
This file contains all the corresponding X.12 codes for oxygen equipment 
"^DIC",356.013,356.013,"%D",2,0)
types.
"^DIC",356.013,356.013,"%D",3,0)
 
"^DIC",356.013,356.013,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.013,"B","X12 278 OXYGEN EQUIPMENT TYPE",356.013)

"^DIC",356.014,356.014,0)
X12 278 OXYGEN TEST CONDITION^356.014
"^DIC",356.014,356.014,0,"GL")
^IBT(356.014,
"^DIC",356.014,356.014,"%",0)
^1.005^^
"^DIC",356.014,356.014,"%D",0)
^^4^4^3140420^
"^DIC",356.014,356.014,"%D",1,0)
This file contains all the corresponding X.12 codes for oxygen test 
"^DIC",356.014,356.014,"%D",2,0)
conditions.
"^DIC",356.014,356.014,"%D",3,0)
 
"^DIC",356.014,356.014,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.014,"B","X12 278 OXYGEN TEST CONDITION",356.014)

"^DIC",356.015,356.015,0)
X12 278 OXYGEN TEST FINDINGS^356.015
"^DIC",356.015,356.015,0,"GL")
^IBT(356.015,
"^DIC",356.015,356.015,"%",0)
^1.005^^
"^DIC",356.015,356.015,"%D",0)
^^4^4^3140420^
"^DIC",356.015,356.015,"%D",1,0)
This file contains all the corresponding X.12 codes for oxygen test 
"^DIC",356.015,356.015,"%D",2,0)
findings.
"^DIC",356.015,356.015,"%D",3,0)
 
"^DIC",356.015,356.015,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.015,"B","X12 278 OXYGEN TEST FINDINGS",356.015)

"^DIC",356.016,356.016,0)
X12 278 OXYGEN DELIVERY SYSTEM CODE^356.016
"^DIC",356.016,356.016,0,"GL")
^IBT(356.016,
"^DIC",356.016,356.016,"%",0)
^1.005^^
"^DIC",356.016,356.016,"%D",0)
^^4^4^3140420^
"^DIC",356.016,356.016,"%D",1,0)
This file contains all the corresponding X.12 codes for oxygen delivery 
"^DIC",356.016,356.016,"%D",2,0)
systems.
"^DIC",356.016,356.016,"%D",3,0)
 
"^DIC",356.016,356.016,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.016,"B","X12 278 OXYGEN DELIVERY SYSTEM CODE",356.016)

"^DIC",356.017,356.017,0)
X12 278 PATIENT LOCATION^356.017
"^DIC",356.017,356.017,0,"GL")
^IBT(356.017,
"^DIC",356.017,356.017,"%",0)
^1.005^^
"^DIC",356.017,356.017,"%D",0)
^^3^3^3140421^
"^DIC",356.017,356.017,"%D",1,0)
This file contains all the corresponding X.12 codes for patient locations.
"^DIC",356.017,356.017,"%D",2,0)
 
"^DIC",356.017,356.017,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.017,"B","X12 278 PATIENT LOCATION",356.017)

"^DIC",356.018,356.018,0)
X12 278 REPORT TYPE CODE^356.018
"^DIC",356.018,356.018,0,"GL")
^IBT(356.018,
"^DIC",356.018,356.018,"%",0)
^1.005^^
"^DIC",356.018,356.018,"%D",0)
^^3^3^3140421^
"^DIC",356.018,356.018,"%D",1,0)
This file contains all the corresponding X.12 codes for report types.
"^DIC",356.018,356.018,"%D",2,0)
 
"^DIC",356.018,356.018,"%D",3,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.018,"B","X12 278 REPORT TYPE CODE",356.018)

"^DIC",356.019,356.019,0)
X12 278 NURSING HOME LEVEL OF CARE^356.019
"^DIC",356.019,356.019,0,"GL")
^IBT(356.019,
"^DIC",356.019,356.019,"%",0)
^1.005^^
"^DIC",356.019,356.019,"%D",0)
^^4^4^3140426^
"^DIC",356.019,356.019,"%D",1,0)
This file contains all the corresponding X.12 codes for nursing home 
"^DIC",356.019,356.019,"%D",2,0)
level of care.
"^DIC",356.019,356.019,"%D",3,0)
 
"^DIC",356.019,356.019,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.019,"B","X12 278 NURSING HOME LEVEL OF CARE",356.019)

"^DIC",356.02,356.02,0)
X12 278 CERTIFICATION ACTION CODES^356.02
"^DIC",356.02,356.02,0,"GL")
^IBT(356.02,
"^DIC",356.02,356.02,"%",0)
^1.005^^
"^DIC",356.02,356.02,"%D",0)
^^4^4^3140919^
"^DIC",356.02,356.02,"%D",1,0)
This file contains all of the corresponding X.12 codes for the 
"^DIC",356.02,356.02,"%D",2,0)
Certification Action Codes.
"^DIC",356.02,356.02,"%D",3,0)
 
"^DIC",356.02,356.02,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.02,"B","X12 278 CERTIFICATION ACTION CODES",356.02)

"^DIC",356.021,356.021,0)
X12 278 HCS DECISION REASON CODES^356.021
"^DIC",356.021,356.021,0,"GL")
^IBT(356.021,
"^DIC",356.021,356.021,"%",0)
^1.005^^
"^DIC",356.021,356.021,"%D",0)
^^5^5^3140513^
"^DIC",356.021,356.021,"%D",1,0)
This file contains all of the corresponding X.12 codes for the Health 
"^DIC",356.021,356.021,"%D",2,0)
Care Services Decision Reason Codes according to the ASC X12 External 
"^DIC",356.021,356.021,"%D",3,0)
Code Source 886.
"^DIC",356.021,356.021,"%D",4,0)
 
"^DIC",356.021,356.021,"%D",5,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.021,"B","X12 278 HCS DECISION REASON CODES",356.021)

"^DIC",356.022,356.022,0)
X12 278 DENTAL NUMBERING SYSTEM^356.022
"^DIC",356.022,356.022,0,"GL")
^IBT(356.022,
"^DIC",356.022,356.022,"%",0)
^1.005^^
"^DIC",356.022,356.022,"%D",0)
^^3^3^3150106^
"^DIC",356.022,356.022,"%D",1,0)
This file contains all of the corresponding x12 codes for
"^DIC",356.022,356.022,"%D",2,0)
dental work on a tooth. Per VHA Directive 10-93-142, this file
"^DIC",356.022,356.022,"%D",3,0)
should not be modified.
"^DIC",356.022,"B","X12 278 DENTAL NUMBERING SYSTEM",356.022)

"^DIC",356.023,356.023,0)
HCSR WORKLIST DELETE REASON CODE^356.023
"^DIC",356.023,356.023,0,"GL")
^IBT(356.023,
"^DIC",356.023,356.023,"%",0)
^1.005^^
"^DIC",356.023,356.023,"%D",0)
^^2^2^3150515^
"^DIC",356.023,356.023,"%D",1,0)
Reason for removal of an entry from the HCSR 278 Request/Inquiry for
"^DIC",356.023,356.023,"%D",2,0)
Authorization for service.
"^DIC",356.023,"B","HCSR WORKLIST DELETE REASON CODE",356.023)

"^DIC",356.22,356.22,0)
HCS REVIEW TRANSMISSION^356.22
"^DIC",356.22,356.22,0,"GL")
^IBT(356.22,
"^DIC",356.22,356.22,"%",0)
^1.005^^
"^DIC",356.22,356.22,"%D",0)
^1.001^2^2^3141125^^^
"^DIC",356.22,356.22,"%D",1,0)
This file contains information related to Healthcare Services Review 
"^DIC",356.22,356.22,"%D",2,0)
worklist and corresponding HL7 messages (message type 278).
"^DIC",356.22,"B","HCS REVIEW TRANSMISSION",356.22)

"^DIC",365.013,365.013,0)
X12 271 SERVICE TYPE^365.013I
"^DIC",365.013,365.013,0,"GL")
^IBE(365.013,
"^DIC",365.013,365.013,"%",0)
^1.005^^0
"^DIC",365.013,365.013,"%D",0)
^1.001^4^4^3141001^^
"^DIC",365.013,365.013,"%D",1,0)
This file contains all the corresponding X.12 271 EB03 codes (Service 
"^DIC",365.013,365.013,"%D",2,0)
Type).
"^DIC",365.013,365.013,"%D",3,0)
 
"^DIC",365.013,365.013,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",365.013,"B","X12 271 SERVICE TYPE",365.013)

"^DIC",365.015,365.015,0)
X12 271 TIME PERIOD QUALIFIER^365.015I
"^DIC",365.015,365.015,0,"GL")
^IBE(365.015,
"^DIC",365.015,365.015,"%",0)
^1.005^^0
"^DIC",365.015,365.015,"%D",0)
^^4^4^3030418^
"^DIC",365.015,365.015,"%D",1,0)
This file contains all the corresponding X.12 271 EB06 codes (Time 
"^DIC",365.015,365.015,"%D",2,0)
Period Qualifier).
"^DIC",365.015,365.015,"%D",3,0)
 
"^DIC",365.015,365.015,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",365.015,"B","X12 271 TIME PERIOD QUALIFIER",365.015)

"^DIC",365.016,365.016,0)
X12 271 QUANTITY QUALIFIER^365.016I
"^DIC",365.016,365.016,0,"GL")
^IBE(365.016,
"^DIC",365.016,365.016,"%",0)
^1.005^^0
"^DIC",365.016,365.016,"%D",0)
^^4^4^3030418^
"^DIC",365.016,365.016,"%D",1,0)
This file contains all the corresponding X.12 271 EB09 codes (Quantity 
"^DIC",365.016,365.016,"%D",2,0)
Qualifier).
"^DIC",365.016,365.016,"%D",3,0)
 
"^DIC",365.016,365.016,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",365.016,"B","X12 271 QUANTITY QUALIFIER",365.016)

"^DIC",365.017,365.017,0)
X12 271 ERROR CONDITION^365.017I
"^DIC",365.017,365.017,0,"GL")
^IBE(365.017,
"^DIC",365.017,365.017,"%",0)
^1.005^^0
"^DIC",365.017,365.017,"%D",0)
^^5^5^3030418^
"^DIC",365.017,365.017,"%D",1,0)
This file contains all the corresponding X.12 271 AAA03 codes (Error 
"^DIC",365.017,365.017,"%D",2,0)
Conditions).
"^DIC",365.017,365.017,"%D",3,0)
These values are returned because of an error in processing.
"^DIC",365.017,365.017,"%D",4,0)
 
"^DIC",365.017,365.017,"%D",5,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",365.017,"B","X12 271 ERROR CONDITION",365.017)

"^DIC",365.021,365.021,0)
X12 271 CONTACT QUALIFIER^365.021
"^DIC",365.021,365.021,0,"GL")
^IBE(365.021,
"^DIC",365.021,365.021,"%",0)
^1.005^^0
"^DIC",365.021,365.021,"%D",0)
^^4^4^3030418^
"^DIC",365.021,365.021,"%D",1,0)
This file contains all the corresponding X.12 codes which
"^DIC",365.021,365.021,"%D",2,0)
identify a method for contact.
"^DIC",365.021,365.021,"%D",3,0)
 
"^DIC",365.021,365.021,"%D",4,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",365.021,"B","X12 271 CONTACT QUALIFIER",365.021)

"^DIC",365.022,365.022,0)
X12 271 ENTITY IDENTIFIER CODE^365.022
"^DIC",365.022,365.022,0,"GL")
^IBE(365.022,
"^DIC",365.022,365.022,"%",0)
^1.005^^0
"^DIC",365.022,365.022,"%D",0)
^^5^5^3090710^
"^DIC",365.022,365.022,"%D",1,0)
This file contains all the corresponding X.12 codes which identify an 
"^DIC",365.022,365.022,"%D",2,0)
eligibility/benefit entity.
"^DIC",365.022,365.022,"%D",3,0)
 
"^DIC",365.022,365.022,"%D",4,0)
 
"^DIC",365.022,365.022,"%D",5,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",365.022,"B","X12 271 ENTITY IDENTIFIER CODE",365.022)

"^DIC",365.025,365.025,0)
X12 271 DELIVERY FREQUENCY CODE^365.025
"^DIC",365.025,365.025,0,"GL")
^IBE(365.025,
"^DIC",365.025,365.025,"%",0)
^1.005^^0
"^DIC",365.025,365.025,"%D",0)
^^7^7^3090713^
"^DIC",365.025,365.025,"%D",1,0)
This file contains all the corresponding X.12 codes for delivery 
"^DIC",365.025,365.025,"%D",2,0)
frequency.
"^DIC",365.025,365.025,"%D",3,0)
 
"^DIC",365.025,365.025,"%D",4,0)
 
"^DIC",365.025,365.025,"%D",5,0)
 
"^DIC",365.025,365.025,"%D",6,0)
Per VHA Directive 10-93-142, this file definition should not be 
"^DIC",365.025,365.025,"%D",7,0)
modified.  
"^DIC",365.025,"B","X12 271 DELIVERY FREQUENCY CODE",365.025)

"^DIC",365.027,365.027,0)
X12 271 LOOP ID^365.027
"^DIC",365.027,365.027,0,"GL")
^IBE(365.027,
"^DIC",365.027,365.027,"%",0)
^1.005^^0
"^DIC",365.027,365.027,"%D",0)
^^8^8^3100916^
"^DIC",365.027,365.027,"%D",1,0)
This file contains all the corresponding X.12 codes for loop IDs.
"^DIC",365.027,365.027,"%D",2,0)
It is a dictionary to map X12 codes to their corresponding values. 
"^DIC",365.027,365.027,"%D",3,0)
The codes are used to parse inbound type 271 messages, among others.
"^DIC",365.027,365.027,"%D",4,0)
HIPAA loop IDs come from FSC as part of 271 response message.
"^DIC",365.027,365.027,"%D",5,0)
 
"^DIC",365.027,365.027,"%D",6,0)
 
"^DIC",365.027,365.027,"%D",7,0)
Per VHA Directive 10-93-142, this file definition should not be 
"^DIC",365.027,365.027,"%D",8,0)
modified.
"^DIC",365.027,"B","X12 271 LOOP ID",365.027)

"BLD",8615,6)
^523
**END**
**END**

