Released IB*2*399 SEQ #380
Extracted from mail message
**KIDS**:IB*2.0*399^

**INSTALL NAME**
IB*2.0*399
"BLD",7319,0)
IB*2.0*399^INTEGRATED BILLING^0^3090605^y
"BLD",7319,1,0)
^^1^1^3090310^
"BLD",7319,1,1,0)
Reasonable Charges Billing Enhancements II
"BLD",7319,4,0)
^9.64PA^362.5^6
"BLD",7319,4,36,0)
36
"BLD",7319,4,36,2,0)
^9.641^36^1
"BLD",7319,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",7319,4,36,2,36,1,0)
^9.6411^.19^2
"BLD",7319,4,36,2,36,1,.18,0)
STANDARD FTF
"BLD",7319,4,36,2,36,1,.19,0)
STANDARD FTF VALUE
"BLD",7319,4,36,222)
y^n^p^^^^n^^n
"BLD",7319,4,36,224)

"BLD",7319,4,355.13,0)
355.13
"BLD",7319,4,355.13,222)
y^y^f^^^^n
"BLD",7319,4,355.3,0)
355.3
"BLD",7319,4,355.3,2,0)
^9.641^355.3^1
"BLD",7319,4,355.3,2,355.3,0)
GROUP INSURANCE PLAN  (File-top level)
"BLD",7319,4,355.3,2,355.3,1,0)
^9.6411^.17^2
"BLD",7319,4,355.3,2,355.3,1,.16,0)
PLAN STANDARD FTF
"BLD",7319,4,355.3,2,355.3,1,.17,0)
PLAN STANDARD FTF VALUE
"BLD",7319,4,355.3,222)
y^n^p^^^^n^^n
"BLD",7319,4,355.3,224)

"BLD",7319,4,356,0)
356
"BLD",7319,4,356,2,0)
^9.641^356^1
"BLD",7319,4,356,2,356,0)
CLAIMS TRACKING  (File-top level)
"BLD",7319,4,356,2,356,1,0)
^9.6411^.19^1
"BLD",7319,4,356,2,356,1,.19,0)
REASON NOT BILLABLE
"BLD",7319,4,356,222)
y^n^p^^^^n^^n
"BLD",7319,4,356,224)

"BLD",7319,4,356.8,0)
356.8
"BLD",7319,4,356.8,222)
y^n^f^^^^n^^n
"BLD",7319,4,356.8,224)

"BLD",7319,4,362.5,0)
362.5
"BLD",7319,4,362.5,2,0)
^9.641^362.5^1
"BLD",7319,4,362.5,2,362.5,0)
IB BILL/CLAIMS PROSTHETICS  (File-top level)
"BLD",7319,4,362.5,2,362.5,1,0)
^9.6411^.04^1
"BLD",7319,4,362.5,2,362.5,1,.04,0)
RECORD
"BLD",7319,4,362.5,222)
y^n^p^^^^n^^n
"BLD",7319,4,362.5,224)

"BLD",7319,4,"APDD",36,36)

"BLD",7319,4,"APDD",36,36,.18)

"BLD",7319,4,"APDD",36,36,.19)

"BLD",7319,4,"APDD",355.3,355.3)

"BLD",7319,4,"APDD",355.3,355.3,.16)

"BLD",7319,4,"APDD",355.3,355.3,.17)

"BLD",7319,4,"APDD",356,356)

"BLD",7319,4,"APDD",356,356,.19)

"BLD",7319,4,"APDD",362.5,362.5)

"BLD",7319,4,"APDD",362.5,362.5,.04)

"BLD",7319,4,"B",36,36)

"BLD",7319,4,"B",355.13,355.13)

"BLD",7319,4,"B",355.3,355.3)

"BLD",7319,4,"B",356,356)

"BLD",7319,4,"B",356.8,356.8)

"BLD",7319,4,"B",362.5,362.5)

"BLD",7319,6.3)
8
"BLD",7319,"INIT")
POST^IBY399P
"BLD",7319,"KRN",0)
^9.67PA^779.2^20
"BLD",7319,"KRN",.4,0)
.4
"BLD",7319,"KRN",.4,"NM",0)
^9.68A^^
"BLD",7319,"KRN",.401,0)
.401
"BLD",7319,"KRN",.402,0)
.402
"BLD",7319,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",7319,"KRN",.402,"NM",1,0)
IBT BILLING INFO    FILE #356^356^0
"BLD",7319,"KRN",.402,"NM",2,0)
IBT QUICK EDIT    FILE #356^356^0
"BLD",7319,"KRN",.402,"NM",3,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",7319,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",3)

"BLD",7319,"KRN",.402,"NM","B","IBT BILLING INFO    FILE #356",1)

"BLD",7319,"KRN",.402,"NM","B","IBT QUICK EDIT    FILE #356",2)

"BLD",7319,"KRN",.403,0)
.403
"BLD",7319,"KRN",.403,"NM",0)
^9.68A^^
"BLD",7319,"KRN",.5,0)
.5
"BLD",7319,"KRN",.84,0)
.84
"BLD",7319,"KRN",3.6,0)
3.6
"BLD",7319,"KRN",3.8,0)
3.8
"BLD",7319,"KRN",9.2,0)
9.2
"BLD",7319,"KRN",9.8,0)
9.8
"BLD",7319,"KRN",9.8,"NM",0)
^9.68A^25^23
"BLD",7319,"KRN",9.8,"NM",1,0)
IBCC1^^0^B52622675
"BLD",7319,"KRN",9.8,"NM",2,0)
IBCNS^^0^B27665348
"BLD",7319,"KRN",9.8,"NM",3,0)
IBCNS3^^0^B55507373
"BLD",7319,"KRN",9.8,"NM",4,0)
IBCNSP0^^0^B33094001
"BLD",7319,"KRN",9.8,"NM",5,0)
IBCNSP11^^0^B11695386
"BLD",7319,"KRN",9.8,"NM",6,0)
IBCNSU31^^0^B8416261
"BLD",7319,"KRN",9.8,"NM",7,0)
IBCRBG2^^0^B7812503
"BLD",7319,"KRN",9.8,"NM",8,0)
IBCRU6^^0^B11770100
"BLD",7319,"KRN",9.8,"NM",9,0)
IBCU3^^0^B26112094
"BLD",7319,"KRN",9.8,"NM",10,0)
IBCU4^^0^B20382256
"BLD",7319,"KRN",9.8,"NM",11,0)
IBJDB21^^0^B54088092
"BLD",7319,"KRN",9.8,"NM",12,0)
IBJDB22^^0^B49159652
"BLD",7319,"KRN",9.8,"NM",15,0)
IBTRKR41^^0^B35256445
"BLD",7319,"KRN",9.8,"NM",16,0)
IBTUBO1^^0^B47180115
"BLD",7319,"KRN",9.8,"NM",17,0)
IBTUTL5^^0^B53886235
"BLD",7319,"KRN",9.8,"NM",18,0)
IBY399P^^0^B7558055
"BLD",7319,"KRN",9.8,"NM",19,0)
IBY399P1^^0^B40098573
"BLD",7319,"KRN",9.8,"NM",20,0)
IBY399P2^^0^B20211575
"BLD",7319,"KRN",9.8,"NM",21,0)
IBY399P3^^0^B5389442
"BLD",7319,"KRN",9.8,"NM",22,0)
IBCNSC01^^0^B55064562
"BLD",7319,"KRN",9.8,"NM",23,0)
IBCNSM3^^0^B14041849
"BLD",7319,"KRN",9.8,"NM",24,0)
IBCNSUR2^^0^B18995204
"BLD",7319,"KRN",9.8,"NM",25,0)
IBY399P4^^0^B24305575
"BLD",7319,"KRN",9.8,"NM","B","IBCC1",1)

"BLD",7319,"KRN",9.8,"NM","B","IBCNS",2)

"BLD",7319,"KRN",9.8,"NM","B","IBCNS3",3)

"BLD",7319,"KRN",9.8,"NM","B","IBCNSC01",22)

"BLD",7319,"KRN",9.8,"NM","B","IBCNSM3",23)

"BLD",7319,"KRN",9.8,"NM","B","IBCNSP0",4)

"BLD",7319,"KRN",9.8,"NM","B","IBCNSP11",5)

"BLD",7319,"KRN",9.8,"NM","B","IBCNSU31",6)

"BLD",7319,"KRN",9.8,"NM","B","IBCNSUR2",24)

"BLD",7319,"KRN",9.8,"NM","B","IBCRBG2",7)

"BLD",7319,"KRN",9.8,"NM","B","IBCRU6",8)

"BLD",7319,"KRN",9.8,"NM","B","IBCU3",9)

"BLD",7319,"KRN",9.8,"NM","B","IBCU4",10)

"BLD",7319,"KRN",9.8,"NM","B","IBJDB21",11)

"BLD",7319,"KRN",9.8,"NM","B","IBJDB22",12)

"BLD",7319,"KRN",9.8,"NM","B","IBTRKR41",15)

"BLD",7319,"KRN",9.8,"NM","B","IBTUBO1",16)

"BLD",7319,"KRN",9.8,"NM","B","IBTUTL5",17)

"BLD",7319,"KRN",9.8,"NM","B","IBY399P",18)

"BLD",7319,"KRN",9.8,"NM","B","IBY399P1",19)

"BLD",7319,"KRN",9.8,"NM","B","IBY399P2",20)

"BLD",7319,"KRN",9.8,"NM","B","IBY399P3",21)

"BLD",7319,"KRN",9.8,"NM","B","IBY399P4",25)

"BLD",7319,"KRN",19,0)
19
"BLD",7319,"KRN",19.1,0)
19.1
"BLD",7319,"KRN",101,0)
101
"BLD",7319,"KRN",409.61,0)
409.61
"BLD",7319,"KRN",771,0)
771
"BLD",7319,"KRN",779.2,0)
779.2
"BLD",7319,"KRN",870,0)
870
"BLD",7319,"KRN",8989.51,0)
8989.51
"BLD",7319,"KRN",8989.52,0)
8989.52
"BLD",7319,"KRN",8994,0)
8994
"BLD",7319,"KRN","B",.4,.4)

"BLD",7319,"KRN","B",.401,.401)

"BLD",7319,"KRN","B",.402,.402)

"BLD",7319,"KRN","B",.403,.403)

"BLD",7319,"KRN","B",.5,.5)

"BLD",7319,"KRN","B",.84,.84)

"BLD",7319,"KRN","B",3.6,3.6)

"BLD",7319,"KRN","B",3.8,3.8)

"BLD",7319,"KRN","B",9.2,9.2)

"BLD",7319,"KRN","B",9.8,9.8)

"BLD",7319,"KRN","B",19,19)

"BLD",7319,"KRN","B",19.1,19.1)

"BLD",7319,"KRN","B",101,101)

"BLD",7319,"KRN","B",409.61,409.61)

"BLD",7319,"KRN","B",771,771)

"BLD",7319,"KRN","B",779.2,779.2)

"BLD",7319,"KRN","B",870,870)

"BLD",7319,"KRN","B",8989.51,8989.51)

"BLD",7319,"KRN","B",8989.52,8989.52)

"BLD",7319,"KRN","B",8994,8994)

"BLD",7319,"QUES",0)
^9.62^^
"BLD",7319,"REQB",0)
^9.611^4^4
"BLD",7319,"REQB",1,0)
IB*2.0*238^1
"BLD",7319,"REQB",2,0)
IB*2.0*364^1
"BLD",7319,"REQB",3,0)
IB*2.0*377^1
"BLD",7319,"REQB",4,0)
IB*2.0*405^1
"BLD",7319,"REQB","B","IB*2.0*238",1)

"BLD",7319,"REQB","B","IB*2.0*364",2)

"BLD",7319,"REQB","B","IB*2.0*377",3)

"BLD",7319,"REQB","B","IB*2.0*405",4)

"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^n^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,.18)

"FIA",36,36,.19)

"FIA",355.13)
INSURANCE FILING TIME FRAME
"FIA",355.13,0)
^IBE(355.13,
"FIA",355.13,0,0)
355.13
"FIA",355.13,0,1)
y^y^f^^^^n
"FIA",355.13,0,10)

"FIA",355.13,0,11)

"FIA",355.13,0,"RLRO")

"FIA",355.13,0,"VR")
2.0^IB
"FIA",355.13,355.13)
0
"FIA",355.3)
GROUP INSURANCE PLAN
"FIA",355.3,0)
^IBA(355.3,
"FIA",355.3,0,0)
355.3IP
"FIA",355.3,0,1)
y^n^p^^^^n^^n
"FIA",355.3,0,10)

"FIA",355.3,0,11)

"FIA",355.3,0,"RLRO")

"FIA",355.3,0,"VR")
2.0^IB
"FIA",355.3,355.3)
1
"FIA",355.3,355.3,.16)

"FIA",355.3,355.3,.17)

"FIA",356)
CLAIMS TRACKING
"FIA",356,0)
^IBT(356,
"FIA",356,0,0)
356I
"FIA",356,0,1)
y^n^p^^^^n^^n
"FIA",356,0,10)

"FIA",356,0,11)

"FIA",356,0,"RLRO")

"FIA",356,0,"VR")
2.0^IB
"FIA",356,356)
1
"FIA",356,356,.19)

"FIA",356.8)
CLAIMS TRACKING NON-BILLABLE REASONS
"FIA",356.8,0)
^IBE(356.8,
"FIA",356.8,0,0)
356.8I
"FIA",356.8,0,1)
y^n^f^^^^n^^n
"FIA",356.8,0,10)

"FIA",356.8,0,11)

"FIA",356.8,0,"RLRO")

"FIA",356.8,0,"VR")
2.0^IB
"FIA",356.8,356.8)
0
"FIA",362.5)
IB BILL/CLAIMS PROSTHETICS
"FIA",362.5,0)
^IBA(362.5,
"FIA",362.5,0,0)
362.5D
"FIA",362.5,0,1)
y^n^p^^^^n^^n
"FIA",362.5,0,10)

"FIA",362.5,0,11)

"FIA",362.5,0,"RLRO")

"FIA",362.5,0,"VR")
2.0^IB
"FIA",362.5,362.5)
1
"FIA",362.5,362.5,.04)

"INIT")
POST^IBY399P
"KRN",.402,1257,-1)
0^1
"KRN",.402,1257,0)
IBT BILLING INFO^3090223.1251^@^356^^@^3090529
"KRN",.402,1257,"DIAB",1,1,356.03,0)
ALL
"KRN",.402,1257,"DR",1,356)
.19;I X S IBRNB=X,Y="@993";.17;.12;.21;.22;.23;.28;.29;1.08;W !,"Current BILLABLE FINDINGS:" I '$P($G(^IBT(356,DA,3,0)),"^",3) W " <none existing>";
"KRN",.402,1257,"DR",1,356,1)
S IBX=0 F  S IBX=$O(^IBT(356,DA,3,IBX)) Q:'IBX  S IBY($P($G(^IBT(356.85,+$G(^IBT(356,DA,3,IBX,0)),0)),"^"))="";S IBX="" F  S IBX=$O(IBY(IBX)) Q:IBX=""  W !?5,IBX;K IBY,IBX;
"KRN",.402,1257,"DR",1,356,2)
W !,"Do you wish to Add or Change Findings" D YN^DICN I %'=1 S Y="@994";3;2.03////^S X=DUZ;2.04////^S X=$$NOW^XLFDT;W !,"BILLABLE FINDINGS after edit:" I '$P($G(^IBT(356,DA,3,0)),"^",3) W " <none existing>";
"KRN",.402,1257,"DR",1,356,3)
S IBX=0 F  S IBX=$O(^IBT(356,DA,3,IBX)) Q:'IBX  S IBY($P($G(^IBT(356.85,+$G(^IBT(356,DA,3,IBX,0)),0)),"^"))="";S IBX="" F  S IBX=$O(IBY(IBX)) Q:IBX=""  W !?5,IBX;K IBY,IBX;S Y="@994";@993;
"KRN",.402,1257,"DR",1,356,4)
W !," ADDITIONAL COMMENTS: ",$P($G(^IBT(356,DA,1)),"^",8),!;I $O(^IBE(356.8,"B","GLOBAL SURGERY",0))'=+$G(IBRNB) S Y="@9932";I $P($G(^IBT(356,DA,1)),"^",8)["Global Surgery: " S Y="@9933";
"KRN",.402,1257,"DR",1,356,5)
W !!," For the RNB of GLOBAL SURGERY, enter the related Surgery Date:";N %DT,Y S %DT("A")=" Enter Surgery Date: ",%DT="AEX" D ^%DT S IBX=+Y;I IBX'?7N S Y="@9939";
"KRN",.402,1257,"DR",1,356,6)
S IBX="Global Surgery: "_$$FMTE^XLFDT(IBX,2)_"  "_$P($G(^IBT(356,DA,1)),"^",8),IBX=$E(IBX,1,80);1.08////^S X=IBX;K IBX W !;S Y="@9939";@9932;I $O(^IBE(356.8,"B","OTHER",0))'=+$G(IBRNB) S Y="@9933";
"KRN",.402,1257,"DR",1,356,7)
W !!,"The RNB of OTHER requires a Comment of at least 15 characters",!;S Y="@9939";@9933;W !,"Do you wish to edit Additional Comments" D YN^DICN I %'=1 S Y="@994";@9939;1.08;
"KRN",.402,1257,"DR",1,356,8)
I $L(X)<15,$O(^IBE(356.8,"B","OTHER",0))=+$G(IBRNB) S Y="@9932";2.01////^S X=DUZ;2.05////^S X=$$NOW^XLFDT;@994;2.02////^S X=DUZ;I $G(IBRNB) S DFN=$P(^IBT(356,DA,0),"^",2),IBTRN=DA D FIND^IBOHCT(DFN,IBTRN) K IBRNB;
"KRN",.402,1257,"DR",2,356.03)
.01
"KRN",.402,1276,-1)
0^3
"KRN",.402,1276,0)
IBEDIT INS CO1^3090401.1027^^36^^^3090602
"KRN",.402,1276,"DIAB",1,0,36,5)
EDI INST SECONDARY ID(1);"EDI - 1ST Inst Payer Sec. ID"
"KRN",.402,1276,"DIAB",1,0,36,14)
EDI PROF SECONDARY ID(2);"EDI - 2ND Prof Payer Sec. ID"
"KRN",.402,1276,"DIAB",1,0,36,15)
ELECTRONIC INSURANCE TYPE;"EDI - Insurance Type"
"KRN",.402,1276,"DIAB",1,0,36,16)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,1276,"DIAB",1,0,36,17)
REF PROV SEC ID DEF CMS-1500//UPIN;"Default ID (1500)"
"KRN",.402,1276,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,1276,"DIAB",2,0,36,6)
EDI INST SECONDARY ID QUAL(2);"EDI - 2ND Inst Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",2,0,36,17)
REF PROV SEC ID REQ ON CLAIMS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",2,0,36,18)
SEND LAB OR FAC IDS FOR VAMC//YES;"Send VA Lab/Facility IDs or Facility Data for VAMC?"
"KRN",.402,1276,"DIAB",2,0,36,22)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,1276,"DIAB",3,0,36,1)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,1276,"DIAB",3,0,36,23)
INS COMPANY LINK TYPE;T
"KRN",.402,1276,"DIAB",4,0,36,17)
ATT/REND ID BILL SEC ID PROF//NO;"Use Att/Rend ID as Billing Provider Sec. ID (1500)?"
"KRN",.402,1276,"DIAB",4,0,36,19)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,1276,"DIAB",5,0,36,3)
EDI INST SECONDARY ID QUAL(1);"EDI - 1ST Inst Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",5,0,36,11)
EDI PROF SECONDARY ID(1);"EDI - 1ST Prof Payer Sec. ID"
"KRN",.402,1276,"DIAB",5,0,36,16)
PERF PROV SECOND ID TYPE 1500;"Default ID (1500)"
"KRN",.402,1276,"DIAB",5,0,36,17)
ATT/REND ID BILL SEC ID INST//NO;"Use Att/Rend ID as Billing Provider Sec. ID (UB)?"
"KRN",.402,1276,"DIAB",6,0,36,2)
EDI ID NUMBER - INST;"EDI - Inst Payer Primary ID"
"KRN",.402,1276,"DIAB",6,0,36,12)
EDI PROF SECONDARY ID QUAL(2);"EDI - 2ND Prof Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",6,0,36,16)
PERF PROV SECOND ID TYPE UB;"Default ID (UB)"
"KRN",.402,1276,"DIAB",6,0,36,24)
INS COMPANY LINK PARENT;T
"KRN",.402,1276,"DIAB",7,0,36,7)
EDI INST SECONDARY ID(2);"EDI - 2ND Inst Payer Sec. ID"
"KRN",.402,1276,"DIAB",7,0,36,8)
EDI ID NUMBER - PROF;"EDI - Prof Payer Primary ID"
"KRN",.402,1276,"DIAB",7,0,36,9)
EDI PROF SECONDARY ID QUAL(1);"EDI - 1ST Prof Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",7,0,36,16)
SECONDARY ID REQUIREMENTS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",8,0,36,15)
BIN NUMBER;"EDI - Bin Number"
"KRN",.402,1276,"DIAB",11,0,36,1)
TRANSMIT ELECTRONICALLY;"EDI - Transmit?"
"KRN",.402,1276,"DIAB",12,0,36,21)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,1276,"DIAB",13,0,36,0)
STANDARD FTF;"STANDARD FILING TIME FRAME"
"KRN",.402,1276,"DIAB",16,0,36,0)
STANDARD FTF VALUE;"STANDARD FILING TIME FRAME VALUE"
"KRN",.402,1276,"DIAB",20,0,36,20)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,1276,"DIAB",24,0,36,19)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,1276,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;.18STANDARD FILING TIME FRAME~;I 'X S Y="@016";I '$$FTFV^IBCNSU31(X) S Y="@016";.19STANDARD FILING TIME FRAME VALUE~;@016;.12;.13;
"KRN",.402,1276,"DR",1,36,1)
.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@171";3.01EDI - Transmit?~;S DIPA("IBTX")=X;I X=$G(IBEDIKEY(1))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1721";
"KRN",.402,1276,"DR",1,36,2)
3.01////^S X=$G(IBEDIKEY(1));I $$EDIKEY^IBCNSC();S Y="@171";@1721;I '$G(DIPA("IBTX")) S Y="@17";3.04EDI - Inst Payer Primary ID~;I X=$G(IBEDIKEY(4))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17211";3.04////^S X=$G(IBEDIKEY(4));
"KRN",.402,1276,"DR",1,36,3)
I $$EDIKEY^IBCNSC();S Y="@171";@17211;I '$G(DIPA("IBTX")) S Y="@17";6.01EDI - 1ST Inst Payer Sec. ID Qualifier~;I X=""&($G(IBEDIKEY(3,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";
"KRN",.402,1276,"DR",1,36,4)
I X=$G(IBEDIKEY(1,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17212";6.01////^S X=$G(IBEDIKEY(1,6));6.02////^S X=$G(IBEDIKEY(2,6));I $$EDIKEY^IBCNSC();S Y="@171";@17212;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,1276,"DR",1,36,5)
6.02EDI - 1ST Inst Payer Sec. ID~;I X=$G(IBEDIKEY(2,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17213";6.02////^S X=$G(IBEDIKEY(2,6));6.01////^S X=$G(IBEDIKEY(1,6));I $$EDIKEY^IBCNSC();S Y="@171";@17213;
"KRN",.402,1276,"DR",1,36,6)
I '$G(DIPA("IBTX")) S Y="@17";6.03EDI - 2ND Inst Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";I X=$G(IBEDIKEY(3,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17214";
"KRN",.402,1276,"DR",1,36,7)
6.03////^S X=$G(IBEDIKEY(3,6));6.04////^S X=$G(IBEDIKEY(4,6));I $$EDIKEY^IBCNSC();S Y="@171";@17214;I '$G(DIPA("IBTX")) S Y="@17";6.04EDI - 2ND Inst Payer Sec. ID~;
"KRN",.402,1276,"DR",1,36,8)
I X=$G(IBEDIKEY(4,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";6.04////^S X=$G(IBEDIKEY(4,6));6.03////^S X=$G(IBEDIKEY(3,6));I $$EDIKEY^IBCNSC();S Y="@171";@1722;3.02EDI - Prof Payer Primary ID~;
"KRN",.402,1276,"DR",1,36,9)
I X=$G(IBEDIKEY(2))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17221";3.02////^S X=$G(IBEDIKEY(2));I $$EDIKEY^IBCNSC();S Y="@171";@17221;I '$G(DIPA("IBTX")) S Y="@17";6.05EDI - 1ST Prof Payer Sec. ID Qualifier~;
"KRN",.402,1276,"DR",1,36,10)
I X=""&($G(IBEDIKEY(7,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";I X=$G(IBEDIKEY(5,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17222";6.05////^S X=$G(IBEDIKEY(5,6));6.06////^S X=$G(IBEDIKEY(6,6));
"KRN",.402,1276,"DR",1,36,11)
I $$EDIKEY^IBCNSC();S Y="@171";@17222;I '$G(DIPA("IBTX")) S Y="@17";6.06EDI - 1ST Prof Payer Sec. ID~;I X=$G(IBEDIKEY(6,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17223";6.06////^S X=$G(IBEDIKEY(6,6));
"KRN",.402,1276,"DR",1,36,12)
6.05////^S X=$G(IBEDIKEY(5,6));I $$EDIKEY^IBCNSC();S Y="@171";@17223;I '$G(DIPA("IBTX")) S Y="@17";6.07EDI - 2ND Prof Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";
"KRN",.402,1276,"DR",1,36,13)
I X=$G(IBEDIKEY(7,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17224";6.07////^S X=$G(IBEDIKEY(7,6));6.08////^S X=$G(IBEDIKEY(8,6));I $$EDIKEY^IBCNSC();S Y="@171";@17224;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,1276,"DR",1,36,14)
6.08EDI - 2ND Prof Payer Sec. ID~;I X=$G(IBEDIKEY(8,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";6.08////^S X=$G(IBEDIKEY(8,6));6.07////^S X=$G(IBEDIKEY(7,6));I $$EDIKEY^IBCNSC();S Y="@171";@1723;@17;
"KRN",.402,1276,"DR",1,36,15)
3.09EDI - Insurance Type~;I X=$G(IBEDIKEY(9))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1724";3.09////^S X=$G(IBEDIKEY(9));I $$EDIKEY^IBCNSC();S Y="@171";@1724;@171;3.03EDI - Bin Number~;I $G(DIPA("IBTX"))'=2 S Y="@18";
"KRN",.402,1276,"DR",1,36,16)
3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@18;S:",6,12,"'[IBY Y="@181";W !!,"Attending/Rendering Provider Secondary ID";4.01Default ID (1500)~;4.02Default ID (UB)~;4.03Require ID on Claim~;W !!,"Referring Provider Secondary ID";
"KRN",.402,1276,"DR",1,36,17)
4.04Default ID (1500)~//UPIN;4.05Require ID on Claim~;W !!,"Billing Provider Secondary IDs";4.06Use Att/Rend ID as Billing Provider Sec. ID (1500)?~//NO;4.08Use Att/Rend ID as Billing Provider Sec. ID (UB)?~//NO;
"KRN",.402,1276,"DR",1,36,18)
W !!,"VA-Laboratory or Facility IDs";4.07Send VA Lab/Facility IDs or Facility Data for VAMC?~//YES;@181;S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";.112;S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;
"KRN",.402,1276,"DR",1,36,19)
S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;
"KRN",.402,1276,"DR",1,36,20)
S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";
"KRN",.402,1276,"DR",1,36,21)
.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;
"KRN",.402,1276,"DR",1,36,22)
S:",5,6,"'[IBY Y="@55";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@55;S:",13,6,"'[IBY Y="@60";
"KRN",.402,1276,"DR",1,36,23)
I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@551";I $D(^DIC(36,"APC",+$G(DA))),$P($G(^DIC(36,+$G(DA),3)),U,13)="P" S Y="@551";3.13T~;S DIPA("IBLNK")=X;I X=$G(IBEDIKEY(13))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@552";
"KRN",.402,1276,"DR",1,36,24)
3.13////^S X=$G(IBEDIKEY(13));I $$EDIKEY^IBCNSC();S Y="@551";@552;I $G(DIPA("IBLNK"))'="C" S Y="@551";3.14T~;I X=$G(IBEDIKEY(14))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@553";3.14////^S X=$G(IBEDIKEY(14));I $$EDIKEY^IBCNSC();
"KRN",.402,1276,"DR",1,36,25)
S Y="@551";@553;D COPY^IBCEPCID(+$G(DA));@551;S:IBY=",13," Y="@99";@60;S:",7,6,"'[IBY Y="@50";3.1;@50;S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,1276,"DR",2,36.03)
.01
"KRN",.402,1327,-1)
0^2
"KRN",.402,1327,0)
IBT QUICK EDIT^3090223.133^@^356^^@^3090529
"KRN",.402,1327,"DR",1,356)
S IBTRTP=$$TRTP^IBTRE1(DA) I IBTRTP'=1 S Y="@10";.07;@10;.24;I 'X S Y="@20";1.07;.31;.14;I 'X S Y="@20";.15;@20;N IBX S IBX=$G(^IBT(356,DA,0)) I '$$INSURED^IBCNS1($P(IBX,U,2),$P(IBX,U,6)) S Y="@21";.19;S IBRNB=X I 'X S Y="@22";
"KRN",.402,1327,"DR",1,356,1)
I $O(^IBE(356.8,"B","GLOBAL SURGERY",0))'=+$G(IBRNB) S Y="@202";I $P($G(^IBT(356,DA,1)),"^",8)["Global Surgery: " S Y="@209";W !!," For the RNB of GLOBAL SURGERY, enter the related Surgery Date:";
"KRN",.402,1327,"DR",1,356,2)
N %DT,Y S %DT("A")=" Enter Surgery Date: ",%DT="AEX" D ^%DT S IBX=+Y;I IBX'?7N S Y="@209";S IBX="Global Surgery: "_$$FMTE^XLFDT(IBX,2)_"  "_$P($G(^IBT(356,DA,1)),"^",8),IBX=$E(IBX,1,80);1.08////^S X=IBX;K IBX W !;S Y="@209";@202;
"KRN",.402,1327,"DR",1,356,3)
I $O(^IBE(356.8,"B","OTHER",0))'=+$G(IBRNB) S Y="@209";W !!,"The RNB of OTHER requires a Comment of at least 15 characters",!;@209;1.08;I $L(X)<15,$O(^IBE(356.8,"B","OTHER",0))=+$G(IBRNB) S Y="@202";S Y="@22";@21;.19///NOT INSURED;
"KRN",.402,1327,"DR",1,356,4)
@22;I IBTRTP'=1!($G(IBTRPRF)'[1) S Y="@90";Q;.25//NO;.26//NONE;Q;.27//NO;@90;N X S X=$G(^IBT(356,DA,0)) I '$P(X,"^",25),'$P(X,"^",26),'$P(X,"^",27) S Y="@105";1.05;@105;I '$P(^IBT(356,DA,0),U,24) S Y="@106";1.06;@106;
"KRN",.402,1327,"DR",1,356,5)
I $G(IBTATRK) S Y="@999";I $P(^IBT(356,DA,0),U,19)!($G(IBTRPRF)'[3) S IBRNB=1,Y="@999";.12;.17;.21;.22;.23;.28;.29;@999;I $G(IBRNB) S DFN=$P(^IBT(356,DA,0),U,2),IBTRN=DA D FIND^IBOHCT(DFN,IBTRN) K IBRNB;
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
399^3090605
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3090605
"PKG",200,22,1,"PAH",1,1,1,0)
Reasonable Charges Billing Enhancements II
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
23
"RTN","IBCC1")
0^1^B52622675^B38579110
"RTN","IBCC1",1,0)
IBCC1 ;ALB/MJB - CANCEL THIRD PARTY BILL ;10-OCT-94
"RTN","IBCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,95,160,159,320,347,377,399**;21-MAR-94;Build 8
"RTN","IBCC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCC1",4,0)
 ;
"RTN","IBCC1",5,0)
RNB ; -- Add a reason not billable to claims tracking
"RTN","IBCC1",6,0)
 N X,Y,DIC,DIE,I,J,DA,DR,IBTYP,IBTRE,IB,IBAPPT,IBDT,IBTALK,IBCODE,IBTRED,IBTSAV,FILL,IBRX,IBDATA,IBD,IBDT,IBQUIT,IBPRO,IBDD
"RTN","IBCC1",7,0)
 N ZT,TCNT,CNT
"RTN","IBCC1",8,0)
 Q:'$G(IBIFN)
"RTN","IBCC1",9,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IBTYP=$P(IB(0),"^",5),IBQUIT=0
"RTN","IBCC1",10,0)
 I '$D(DFN) S DFN=$P(IB(0),"^",2)
"RTN","IBCC1",11,0)
 KILL ^TMP($J,"IBCC1")
"RTN","IBCC1",12,0)
 ;
"RTN","IBCC1",13,0)
 ; -- is inpt find entry in dgpm, then in ibt(356, s da=ibtre then edit
"RTN","IBCC1",14,0)
INPT I IBTYP<3 D
"RTN","IBCC1",15,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",16,0)
 .S DGPM=$O(^DGPM("APTT1",DFN,DATE,0)) ; double check for asih
"RTN","IBCC1",17,0)
 .I DGPM S (IBTRE,IBTSAV)=$O(^IBT(356,"AD",DGPM,0))
"RTN","IBCC1",18,0)
 .I $G(IBTRE) D CTSET(IBTRE)
"RTN","IBCC1",19,0)
 .Q:IBQUIT
"RTN","IBCC1",20,0)
 .;
"RTN","IBCC1",21,0)
 .; -- alternate inpt method
"RTN","IBCC1",22,0)
 .S IBCODE=$O(^IBE(356.6,"ACODE",1,0))
"RTN","IBCC1",23,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",24,0)
 .S IBDT=(DATE-.25) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(DATE+.24))  D
"RTN","IBCC1",25,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D:$G(IBTSAV)'=IBTRE CTSET(IBTRE)
"RTN","IBCC1",26,0)
 .Q
"RTN","IBCC1",27,0)
 ;
"RTN","IBCC1",28,0)
OPT ; -- is opt-find entries in IBT(356, for opt dates and then edit
"RTN","IBCC1",29,0)
 I IBTYP>2 S IBCODE=$O(^IBE(356.6,"ACODE",2,0)) D
"RTN","IBCC1",30,0)
 .S IBAPPT=0 F  S IBAPPT=$O(^DGCR(399,IBIFN,"OP",IBAPPT)) Q:'IBAPPT!(IBQUIT)  D
"RTN","IBCC1",31,0)
 ..S IBDT=(IBAPPT-.01) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(IBAPPT+.24))  D
"RTN","IBCC1",32,0)
 ...S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D CTSET(IBTRE)
"RTN","IBCC1",33,0)
 .Q
"RTN","IBCC1",34,0)
 ;
"RTN","IBCC1",35,0)
RX ; -- find rx's on bill
"RTN","IBCC1",36,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",37,0)
 .S IBDATA=$G(^IBA(362.4,IBD,0)),IBRX=$P(IBDATA,"^",5),IBDT=$P(IBDATA,"^",3)
"RTN","IBCC1",38,0)
 .I '$G(IBRX) S DIC=52,DIC(0)="BO",X=$P(IBDATA,"^",1) D DIC^PSODI(52,.DIC,X) S IBRX=+Y K DIC,X,Y Q:IBRX=-1
"RTN","IBCC1",39,0)
 .S FILL="" F  S FILL=$O(^IBT(356,"ARXFL",IBRX,FILL)) Q:FILL=""!(IBQUIT)  D
"RTN","IBCC1",40,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"ARXFL",IBRX,FILL,IBTRE)) Q:'IBTRE!(IBQUIT)  I $P(^IBT(356,+IBTRE,0),"^",6)=IBDT D CTSET(IBTRE)
"RTN","IBCC1",41,0)
 ;
"RTN","IBCC1",42,0)
PRO ; -- find prosthetics on bill
"RTN","IBCC1",43,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",44,0)
 .S IBDATA=$G(^IBA(362.5,IBD,0)),IBPRO=$P(IBDATA,"^",4)
"RTN","IBCC1",45,0)
 .Q:'$G(IBPRO)
"RTN","IBCC1",46,0)
 .S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APRO",+IBPRO,IBTRE)) Q:'IBTRE!(IBQUIT)  D CTSET(IBTRE)
"RTN","IBCC1",47,0)
 ;
"RTN","IBCC1",48,0)
 ; ----- Finished with the gathering of the CT data entries -----
"RTN","IBCC1",49,0)
 ;
"RTN","IBCC1",50,0)
 ; count up the total number of CT entries recorded in the scratch global
"RTN","IBCC1",51,0)
 S ZT="",TCNT=0
"RTN","IBCC1",52,0)
 F  S ZT=$O(^TMP($J,"IBCC1",ZT)) Q:ZT=""  S IBTRE=0 F  S IBTRE=$O(^TMP($J,"IBCC1",ZT,IBTRE)) Q:'IBTRE  S TCNT=TCNT+1
"RTN","IBCC1",53,0)
 ;
"RTN","IBCC1",54,0)
 ; loop thru all of the associated CT entries and call the RNBEDIT procedure for each one
"RTN","IBCC1",55,0)
 S ZT="",CNT=0
"RTN","IBCC1",56,0)
 F  S ZT=$O(^TMP($J,"IBCC1",ZT)) Q:ZT=""!IBQUIT  D  Q:IBQUIT
"RTN","IBCC1",57,0)
 . S IBTRE=0 F  S IBTRE=$O(^TMP($J,"IBCC1",ZT,IBTRE)) Q:'IBTRE!IBQUIT  S CNT=CNT+1 D RNBEDIT(IBTRE,ZT,TCNT,CNT)
"RTN","IBCC1",58,0)
 . Q
"RTN","IBCC1",59,0)
 ;
"RTN","IBCC1",60,0)
 ; clean-up the scratch global when completed
"RTN","IBCC1",61,0)
 KILL ^TMP($J,"IBCC1")
"RTN","IBCC1",62,0)
 Q
"RTN","IBCC1",63,0)
 ;
"RTN","IBCC1",64,0)
CTSET(IBTRE) ; procedure to store this CT entry in the scratch global
"RTN","IBCC1",65,0)
 Q:'$G(IBTRE)
"RTN","IBCC1",66,0)
 S ^TMP($J,"IBCC1",$$TYPE(IBTRE),IBTRE)=""
"RTN","IBCC1",67,0)
CTSETX ;
"RTN","IBCC1",68,0)
 Q
"RTN","IBCC1",69,0)
 ;
"RTN","IBCC1",70,0)
RNBEDIT(IBTRE,CTTYPE,TCNT,CNT) ; CT entry display and capture RNB data and additional comment data
"RTN","IBCC1",71,0)
 Q:IBQUIT
"RTN","IBCC1",72,0)
 I '$D(IBTALK) D
"RTN","IBCC1",73,0)
 . N CTZ
"RTN","IBCC1",74,0)
 . W !!,"Since you have canceled this bill, you may enter a Reason Not Billable and"
"RTN","IBCC1",75,0)
 . W !,"an Additional Comment into Claims Tracking."
"RTN","IBCC1",76,0)
 . W !,"This will take the care off of the UNBILLED lists."
"RTN","IBCC1",77,0)
 . I TCNT=1 S CTZ="Note:  There is 1 associated Claims Tracking entry."
"RTN","IBCC1",78,0)
 . E  S CTZ="Note:  There are "_TCNT_" associated Claims Tracking entries."
"RTN","IBCC1",79,0)
 . W !!,CTZ
"RTN","IBCC1",80,0)
 . Q
"RTN","IBCC1",81,0)
 ;
"RTN","IBCC1",82,0)
 S IBTALK=1
"RTN","IBCC1",83,0)
 ;
"RTN","IBCC1",84,0)
 N %,IBTRED,IBTRED1 S IBTRED=$G(^IBT(356,IBTRE,0)),IBTRED1=$G(^IBT(356,IBTRE,1))
"RTN","IBCC1",85,0)
 ;
"RTN","IBCC1",86,0)
 W !!,"Claims Tracking Entry [",CNT," of ",TCNT,"]"
"RTN","IBCC1",87,0)
 W !?7,"Entry ID#: ",+IBTRED
"RTN","IBCC1",88,0)
 W !?12,"Type: ",$$EXPAND^IBTRE(356,.18,$P(IBTRED,U,18))
"RTN","IBCC1",89,0)
 ;
"RTN","IBCC1",90,0)
 I CTTYPE=1 D     ; inpatient admission or scheduled admission
"RTN","IBCC1",91,0)
 . W !?2,"Admission Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",92,0)
 . Q
"RTN","IBCC1",93,0)
 ;
"RTN","IBCC1",94,0)
 I CTTYPE=2 D     ; outpatient visit
"RTN","IBCC1",95,0)
 . N IBOE,IBOE0
"RTN","IBCC1",96,0)
 . W !?6,"Visit Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",97,0)
 . S IBOE=+$P(IBTRED,U,4),IBOE0=$$SCE^IBSDU(IBOE)
"RTN","IBCC1",98,0)
 . W !?10,"Clinic: ",$$GET1^DIQ(44,+$P(IBOE0,U,4)_",",.01)
"RTN","IBCC1",99,0)
 . Q
"RTN","IBCC1",100,0)
 ;
"RTN","IBCC1",101,0)
 I CTTYPE=3 D     ; prescription refill
"RTN","IBCC1",102,0)
 . N PSONTALK,PSOTMP,X
"RTN","IBCC1",103,0)
 . S PSONTALK=1
"RTN","IBCC1",104,0)
 . S X=+$P(IBTRED,U,8)_U_+$P(IBTRED,U,10) D EN^PSOCPVW
"RTN","IBCC1",105,0)
 . ;if refill was deleted and EN^PSOCPVW doesn't return any data use IB API
"RTN","IBCC1",106,0)
 . I '$D(PSOTMP) D PSOCPVW^IBNCPDPC(+$P(IBTRED,U,2),+$P(IBTRED,U,8),.PSOTMP)
"RTN","IBCC1",107,0)
 . W !?3,"Prescription#: ",$G(PSOTMP(52,+$P(IBTRED,U,8),.01,"E"))
"RTN","IBCC1",108,0)
 . I '$P(IBTRED,U,10) W !?7,"Fill Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",109,0)
 . I $P(IBTRED,U,10) W !?5,"Refill Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",110,0)
 . W !?12,"Drug: ",$G(PSOTMP(52,+$P(IBTRED,U,8),6,"E"))
"RTN","IBCC1",111,0)
 . Q
"RTN","IBCC1",112,0)
 ;
"RTN","IBCC1",113,0)
 I CTTYPE=4 D     ; prosthetic item
"RTN","IBCC1",114,0)
 . N IBDA,IBRMPR
"RTN","IBCC1",115,0)
 . S IBDA=$P(IBTRED,U,9)
"RTN","IBCC1",116,0)
 . D PRODATA^IBTUTL1(IBDA)
"RTN","IBCC1",117,0)
 . W !?3,"Delivery Date: ",$$FMTE^XLFDT($P(IBTRED,U,6),"1P")
"RTN","IBCC1",118,0)
 . W !?12,"Item: ",$G(IBRMPR(660,+IBDA,4,"E"))
"RTN","IBCC1",119,0)
 . W !?5,"Description: ",$G(IBRMPR(660,+IBDA,24,"E"))
"RTN","IBCC1",120,0)
 . Q
"RTN","IBCC1",121,0)
 ;
"RTN","IBCC1",122,0)
 I $G(IBMCSRNB)'="",$P(IBTRED,U,19) W !," Note:  A Reason Not Billable has been previously entered",!?8,"for this Claims Tracking record."
"RTN","IBCC1",123,0)
 I $G(IBMCSCAC)'="",$P(IBTRED1,U,8)'="" W !," Note:  An Additional Comment has been previously entered",!?8,"for this Claims Tracking record."
"RTN","IBCC1",124,0)
 ;
"RTN","IBCC1",125,0)
 S DA=IBTRE,DIE="^IBT(356,",DR=".19"
"RTN","IBCC1",126,0)
 I $G(IBMCSRNB)'="" S DR=".19//"_$P(IBMCSRNB,U,2)    ; IB*320 MCS cancel - reason not billable
"RTN","IBCC1",127,0)
 I $G(IBMCSCAC)'="" S DR=DR_";1.08//^S X=IBMCSCAC"   ; IB*377 MCS cancel - additional comment
"RTN","IBCC1",128,0)
 I $G(IBMCSCAC)="" S DR=DR_";1.08"                   ; IB*377 additional comment field SRS 3.3.2.1
"RTN","IBCC1",129,0)
 D ^DIE
"RTN","IBCC1",130,0)
 ;
"RTN","IBCC1",131,0)
 ; - if the RNB or additional comment changed, update the user and date/time last edited
"RTN","IBCC1",132,0)
 I $P(IBTRED,U,19)'=$P($G(^IBT(356,IBTRE,0)),U,19)!($P(IBTRED1,U,8)'=$P($G(^IBT(356,IBTRE,1)),U,8)) D NOW^%DTC S DR="1.03///"_%_";1.04////"_DUZ D ^DIE
"RTN","IBCC1",133,0)
 ;
"RTN","IBCC1",134,0)
 ; $D(Y) indicates an up-arrow exit from the DIE call (??)
"RTN","IBCC1",135,0)
 I $D(Y) S DFN=+$P(^IBT(356,IBTRE,0),"^",2) D FIND^IBOHCT(DFN,IBTRE) S IBQUIT=1
"RTN","IBCC1",136,0)
 ;
"RTN","IBCC1",137,0)
 D RNBC(IBTRE)
"RTN","IBCC1",138,0)
 Q
"RTN","IBCC1",139,0)
 ;
"RTN","IBCC1",140,0)
TYPE(Z) ; function to get the type of claims tracking entry
"RTN","IBCC1",141,0)
 ; Z is the ien to file 356
"RTN","IBCC1",142,0)
 Q +$P($G(^IBE(356.6,+$P($G(^IBT(356,+Z,0)),U,18),0)),U,3)
"RTN","IBCC1",143,0)
 ;
"RTN","IBCC1",144,0)
 ;
"RTN","IBCC1",145,0)
RNBC(IBTRN) ; check comments (#356,1.08), certain RNBs have certain Additional Comments requirements
"RTN","IBCC1",146,0)
 N IBRNB,IBCOMM,DR,DA,DIE,DIC,DIR,D0,X,Y,DIRUT,DUOUT Q:'$G(IBTRN)
"RTN","IBCC1",147,0)
 S IBRNB=+$P($G(^IBT(356,+IBTRN,0)),U,19),IBRNB=$P($G(^IBE(356.8,+IBRNB,0)),U,1) Q:IBRNB=""
"RTN","IBCC1",148,0)
 S IBCOMM=$P($G(^IBT(356,+IBTRN,1)),U,8)
"RTN","IBCC1",149,0)
 ;
"RTN","IBCC1",150,0)
 I IBRNB="OTHER",$L(IBCOMM)<15 D  ; Require Additional Comments at least 15 characters
"RTN","IBCC1",151,0)
 . W !!,"The RNB of OTHER requires a Comment of at least 15 characters",!
"RTN","IBCC1",152,0)
 . S DR="S Y=""@6"";.19;I X'=999 S Y=0;@6;1.08;I $L(X)<15 W !,""Length of 15 characters required"" S Y=""@6"""
"RTN","IBCC1",153,0)
 . S DA=IBTRN,DIE="^IBT(356," D ^DIE I $G(IBMCSCAC)'="" S IBMCSCAC=$P($G(^IBT(356,IBTRN,1)),U,8)
"RTN","IBCC1",154,0)
 ;
"RTN","IBCC1",155,0)
 I IBRNB="GLOBAL SURGERY",IBCOMM'["Global Surgery: " D  ; Add Global Surgery Date to Additional Comments
"RTN","IBCC1",156,0)
 . W !!,"For the RNB of GLOBAL SURGERY, add the related Surgery Date to the CT comments:",!,IBCOMM,!
"RTN","IBCC1",157,0)
 . S DIR(0)="DAO",DIR("A")="Enter Surgery Date: " D ^DIR Q:Y'?7N  W !
"RTN","IBCC1",158,0)
 . S IBCOMM="Global Surgery: "_$$FMTE^XLFDT(Y,2)_" "_IBCOMM,IBCOMM=$E(IBCOMM,1,80)
"RTN","IBCC1",159,0)
 . S DA=IBTRN,DIE="^IBT(356,",DR="1.08///^S X=IBCOMM" D ^DIE S DR="S Y=""@6"";.19;@6;1.08" D ^DIE
"RTN","IBCC1",160,0)
 Q
"RTN","IBCNS")
0^2^B27665348^B27231717
"RTN","IBCNS",1,0)
IBCNS ;ALB/AAS - IS INSURANCE ACTIVE ; 22-JULY-91
"RTN","IBCNS",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,80,82,133,399**;21-MAR-94;Build 8
"RTN","IBCNS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNS",4,0)
 ;
"RTN","IBCNS",5,0)
 ;MAP TO DGCRNS
"RTN","IBCNS",6,0)
 ;
"RTN","IBCNS",7,0)
 ;Input   -  DFN       = patient
"RTN","IBCNS",8,0)
 ;        -  IBINDT  = (optional) date to check ins active for or today if not defined
"RTN","IBCNS",9,0)
 ;        -  IBOUTP  = (optional) 1 if want active insurance returned in IBDD(insurance company)=node in patient file
"RTN","IBCNS",10,0)
 ;        -            = 2 if want all ins returned
"RTN","IBCNS",11,0)
 ;
"RTN","IBCNS",12,0)
 ;Output  -  IBINS   = 1 if has active ins., 0 if no active ins.
"RTN","IBCNS",13,0)
 ;        -  IBDD()  = internal node in patient file of valid ins.
"RTN","IBCNS",14,0)
 ;        -  IBDDI() = internal node in patient file of invalid ins.
"RTN","IBCNS",15,0)
 ;
"RTN","IBCNS",16,0)
% N J,X S IBINS=0 K IBDD,IBDDI
"RTN","IBCNS",17,0)
 S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I $D(^DPT(DFN,.312,J,0)) S X=^(0) D CHK
"RTN","IBCNS",18,0)
 Q
"RTN","IBCNS",19,0)
 ;
"RTN","IBCNS",20,0)
CHK ;
"RTN","IBCNS",21,0)
 ;Input   -  IBI  = entry in insurance multiple
"RTN","IBCNS",22,0)
 ;
"RTN","IBCNS",23,0)
 S Z=$S($D(IBINDT):IBINDT,1:DT),Z1=$S($D(IBOUTP):IBOUTP,1:0)
"RTN","IBCNS",24,0)
 G:'$D(^DIC(36,+X,0)) CHKQ S X1=^(0) ;insurance company entry doesn't exist
"RTN","IBCNS",25,0)
 I $P(X,"^",8) G:Z<$P(X,"^",8) CHKQ ;effective date later than care
"RTN","IBCNS",26,0)
 I $P(X,"^",4) G:Z>$P(X,"^",4) CHKQ ;care after expiration date
"RTN","IBCNS",27,0)
 I $P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",11) G CHKQ ;plan is inactive
"RTN","IBCNS",28,0)
 G:$P(X1,"^",5) CHKQ ;insurance company inactive
"RTN","IBCNS",29,0)
 I '$G(IBWNR) G:$P(X1,"^",2)="N" CHKQ ;insurance company will not reimburse
"RTN","IBCNS",30,0)
 S IBINS=1 I Z1 D
"RTN","IBCNS",31,0)
 .S IBDD(+X)=X
"RTN","IBCNS",32,0)
 .Q:'$P(IBDD(+X),"^",18)
"RTN","IBCNS",33,0)
 .S Y=$G(^IBA(355.3,+$P(IBDD(+X),"^",18),0))
"RTN","IBCNS",34,0)
 .I $P(Y,"^",4)'="" S $P(IBDD(+X),"^",3)=$P(Y,"^",4) ; move group number
"RTN","IBCNS",35,0)
 .I $P(Y,"^",3)'="" S $P(IBDD(+X),"^",15)=$P(Y,"^",3) ; move group name
"RTN","IBCNS",36,0)
CHKQ I Z1=2&('$D(IBDD(+X))) D
"RTN","IBCNS",37,0)
 .S IBDDI(+X)=X
"RTN","IBCNS",38,0)
 .Q:'$P(IBDDI(+X),"^",18)
"RTN","IBCNS",39,0)
 .S Y=$G(^IBA(355.3,+$P(IBDDI(+X),"^",18),0))
"RTN","IBCNS",40,0)
 .I $P(Y,"^",4)'="" S $P(IBDDI(+X),"^",3)=$P(Y,"^",4) ; move group number
"RTN","IBCNS",41,0)
 .I $P(Y,"^",3)'="" S $P(IBDDI(+X),"^",15)=$P(Y,"^",3) ; move group name
"RTN","IBCNS",42,0)
 K X,X1,Z,Z1,Y Q
"RTN","IBCNS",43,0)
 ;
"RTN","IBCNS",44,0)
DD ;  - called from input transform and x-refs for field 101,102,103
"RTN","IBCNS",45,0)
 ;  - input requires da=internal entry number in 399
"RTN","IBCNS",46,0)
 ;  - outputs IBdd(ins co.) array
"RTN","IBCNS",47,0)
 ; patch 80 - Companies that Will Not Reimburse should be included so they can be added to the bill
"RTN","IBCNS",48,0)
 N DFN,IBWNR S DFN=$P(^DGCR(399,DA,0),"^",2),IBOUTP=1,IBINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT),IBWNR=1
"RTN","IBCNS",49,0)
 D %
"RTN","IBCNS",50,0)
DDQ K IBOUTP,IBINDT Q
"RTN","IBCNS",51,0)
 ;
"RTN","IBCNS",52,0)
 ;
"RTN","IBCNS",53,0)
DISP ;  -Display all insurance company information
"RTN","IBCNS",54,0)
 ;  -input DFN
"RTN","IBCNS",55,0)
 ;
"RTN","IBCNS",56,0)
 N IBDTIN
"RTN","IBCNS",57,0)
DISPDT ; Entrypoint if IBDTIN is to be used to display coverage
"RTN","IBCNS",58,0)
 Q:'$D(DFN)  D:'$D(IOF) HOME^%ZIS
"RTN","IBCNS",59,0)
 N X,IBINS,IBX
"RTN","IBCNS",60,0)
 D ALL^IBCNS1(DFN,"IBINS")
"RTN","IBCNS",61,0)
 ;
"RTN","IBCNS",62,0)
 D HDR
"RTN","IBCNS",63,0)
 I '$D(IBINS) W !,"    No Insurance Information" G DISPQ
"RTN","IBCNS",64,0)
 ;
"RTN","IBCNS",65,0)
 S X=0 F  S X=$O(IBINS(X)) Q:'X  S IBINS=IBINS(X,0) D D1 I +$G(IBCOVEXT) D D2EXT ; display
"RTN","IBCNS",66,0)
 ;
"RTN","IBCNS",67,0)
DISPQ W ! S X=+$G(^IBA(354,DFN,60)) I +X W !,?16,"*** Verification of No Coverage ",$$FMTE^XLFDT(X)," ***"
"RTN","IBCNS",68,0)
 I $$BUFFER^IBCNBU1(DFN) W !,?17,"***  Patient has Insurance Buffer entries  ***"
"RTN","IBCNS",69,0)
 Q
"RTN","IBCNS",70,0)
 ;
"RTN","IBCNS",71,0)
OLDISP ;  -Display all insurance company information
"RTN","IBCNS",72,0)
 ;  -input DFN
"RTN","IBCNS",73,0)
 ;
"RTN","IBCNS",74,0)
 Q:'$D(DFN)  D:'$D(IOF) HOME^%ZIS
"RTN","IBCNS",75,0)
 ;
"RTN","IBCNS",76,0)
 S IBOUTP=2 D IBCNS
"RTN","IBCNS",77,0)
 ;
"RTN","IBCNS",78,0)
 N IBDTIN
"RTN","IBCNS",79,0)
 D HDR
"RTN","IBCNS",80,0)
 I '$D(IBDD),'$D(IBDDI) W !,"    No Insurance Information" G DISPQ
"RTN","IBCNS",81,0)
 ;
"RTN","IBCNS",82,0)
 S X="" F  S X=$O(IBDD(X)) Q:X=""  S IBINS=IBDD(X) D D1 ;active insurance
"RTN","IBCNS",83,0)
 S X="" F  S X=$O(IBDDI(X)) Q:X=""  S IBINS=IBDDI(X) D D1 ;inactive ins
"RTN","IBCNS",84,0)
 ;
"RTN","IBCNS",85,0)
OLDISPQ K IBDD,IBDDI,IBX
"RTN","IBCNS",86,0)
 Q
"RTN","IBCNS",87,0)
 ;
"RTN","IBCNS",88,0)
HDR ; -- print standard header
"RTN","IBCNS",89,0)
 D HDR1("=",IOM-$S($G(IBDTIN):1,1:4))
"RTN","IBCNS",90,0)
 Q
"RTN","IBCNS",91,0)
 ;
"RTN","IBCNS",92,0)
HDR1(CHAR,LENG) ; -- print header, specify character
"RTN","IBCNS",93,0)
 N OFF
"RTN","IBCNS",94,0)
 S OFF=$S($G(IBDTIN):0,1:2)
"RTN","IBCNS",95,0)
 W !?(1+OFF),"Insurance",?(13+OFF),"COB",?(17+OFF),"Subscriber ID",?(35+OFF),"Group",?(47+OFF),"Holder",?(55+OFF),"Effect"_$S('OFF:"",1:"i")_"ve",?(65+OFF+$S('OFF:0,1:1)),"Expires" W:'OFF ?75,"Only"
"RTN","IBCNS",96,0)
 I $G(CHAR)'="",LENG S X="",$P(X,CHAR,LENG)="" W !?(1+OFF),X
"RTN","IBCNS",97,0)
 Q
"RTN","IBCNS",98,0)
 ;
"RTN","IBCNS",99,0)
D1 ; If IBDTIN is defined, this date is used for displaying insurance
"RTN","IBCNS",100,0)
 ; coverage if plan does not provide not full coverage for all categories
"RTN","IBCNS",101,0)
 N X,Y,Z,CAT,OFF Q:'$D(IBINS)
"RTN","IBCNS",102,0)
 S OFF=$S($G(IBDTIN):0,1:2)
"RTN","IBCNS",103,0)
 W !?(1+OFF),$S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,10),1:"UNKNOWN")
"RTN","IBCNS",104,0)
 S X=$P(IBINS,U,20) I X'="" S X=$S(X=1:"p",X=2:"s",X=3:"t",1:"")
"RTN","IBCNS",105,0)
 W ?(14+OFF),X
"RTN","IBCNS",106,0)
 W ?(17+OFF),$E($P(IBINS,"^",2),1,16)
"RTN","IBCNS",107,0)
 ;W ?40,$E($S($P(IBINS,"^",15)'="":$P(IBINS,"^",15),1:$P(IBINS,"^",3)),1,10)
"RTN","IBCNS",108,0)
 W ?(35+OFF),$E($$GRP($P(IBINS,"^",18)),1,10)
"RTN","IBCNS",109,0)
 S X=$P(IBINS,"^",6) W ?(47+OFF),$S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")
"RTN","IBCNS",110,0)
 W ?(55+OFF),$$DAT1^IBOUTL($P(IBINS,"^",8)),?(65+OFF+$S(OFF:1,1:0)),$$DAT1^IBOUTL($P(IBINS,"^",4))
"RTN","IBCNS",111,0)
 I 'OFF D
"RTN","IBCNS",112,0)
 .I $P($G(^DIC(36,+IBINS,0)),U,2)="N" W ?74,"*WNR*" Q
"RTN","IBCNS",113,0)
 .S X="" F CAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS",114,0)
 .. S Y=$$PLCOV^IBCNSU3(+$P(IBINS,"^",18),$G(IBDTIN),+$O(^IBE(355.31,"B",CAT,"")))
"RTN","IBCNS",115,0)
 .. I +Y S Z=$S(CAT="PHARMACY":"R",1:$E(CAT)) S:Y>1 Z=$C($A(Z)+32) S X=X_Z
"RTN","IBCNS",116,0)
 .S:X="" X="no CV" I X'?6U W ?74,X
"RTN","IBCNS",117,0)
 Q
"RTN","IBCNS",118,0)
 ;
"RTN","IBCNS",119,0)
GRP(IBCPOL) ; -- return group name/group policy
"RTN","IBCNS",120,0)
 ;     input:   IBCPOL = pointer to entry in 355.3
"RTN","IBCNS",121,0)
 ;    output:   group name or group number, if both group NUMBER
"RTN","IBCNS",122,0)
 ;              if neither 'Individual PLAN'
"RTN","IBCNS",123,0)
 ;
"RTN","IBCNS",124,0)
 N X,Y S X=""
"RTN","IBCNS",125,0)
 S X=$G(^IBA(355.3,+$G(IBCPOL),0))
"RTN","IBCNS",126,0)
 S Y=$S($P(X,"^",4)'="":$P(X,"^",4),1:$P(X,"^",3))
"RTN","IBCNS",127,0)
 I $P(X,"^",10) S Y="Ind. Plan "_Y
"RTN","IBCNS",128,0)
GRPQ Q Y
"RTN","IBCNS",129,0)
 ;
"RTN","IBCNS",130,0)
D2EXT ; display Conditional Coverage Comments and Riders (DFN,IBINS,X required)
"RTN","IBCNS",131,0)
 N Y,CAT,IBX,IBY,IBZ,ARR,IBCDFN S IBCDFN=X,IBZ=0 N X
"RTN","IBCNS",132,0)
 F CAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS",133,0)
 . S Y=$$PLCOV^IBCNSU3(+$P(IBINS,"^",18),$G(IBDTIN),+$O(^IBE(355.31,"B",CAT,"")),.ARR)
"RTN","IBCNS",134,0)
 . S IBY=CAT_" Conditional: "
"RTN","IBCNS",135,0)
 . I +Y>1 S IBX=0 F  S IBX=$O(ARR(IBX)) Q:'IBX  W !,?17,IBY,?47,ARR(IBX) S IBY="",IBZ=1
"RTN","IBCNS",136,0)
 ;
"RTN","IBCNS",137,0)
 K ARR D RIDERS^IBCNSU3(DFN,IBCDFN,.ARR)
"RTN","IBCNS",138,0)
 S IBY="Policy Riders: " S IBX=0 F  S IBX=$O(ARR(IBX)) Q:'IBX  W !,?17,IBY,?35,ARR(IBX) S IBY="",IBZ=1
"RTN","IBCNS",139,0)
 I +IBZ W !
"RTN","IBCNS",140,0)
 Q
"RTN","IBCNS3")
0^3^B55507373^B53375755
"RTN","IBCNS3",1,0)
IBCNS3 ;ALB/ARH - DISPLAY EXTENDED INSURANCE ; 01-DEC-04
"RTN","IBCNS3",2,0)
 ;;2.0;INTEGRATED BILLING;**287,399**;21-MAR-94;Build 8
"RTN","IBCNS3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNS3",4,0)
 ;
"RTN","IBCNS3",5,0)
DISP(DFN,DATE,DISPLAY) ;  Display all insurance company information
"RTN","IBCNS3",6,0)
 ;    input: DFN     = pointer to patient
"RTN","IBCNS3",7,0)
 ;           DATE    = date to check for coverage and riders
"RTN","IBCNS3",8,0)
 ;           DISPLAY = contain indicators of data to display (123)
"RTN","IBCNS3",9,0)
 ;
"RTN","IBCNS3",10,0)
 Q:'$G(DFN)  D:'$D(IOF) HOME^%ZIS
"RTN","IBCNS3",11,0)
 N IBINS,IBPOLFN,IBPOL0,IBPLNFN S DISPLAY=$G(DISPLAY) I '$G(DATE) S DATE=DT
"RTN","IBCNS3",12,0)
 K ^TMP($J,"IBCNS3")
"RTN","IBCNS3",13,0)
 ;
"RTN","IBCNS3",14,0)
 D ALL^IBCNS1(DFN,"IBINS")
"RTN","IBCNS3",15,0)
 ;
"RTN","IBCNS3",16,0)
 I '$D(IBINS) D SETLN(" "),SETLN("No Insurance Information")
"RTN","IBCNS3",17,0)
 ;
"RTN","IBCNS3",18,0)
 ;
"RTN","IBCNS3",19,0)
 S IBPOLFN=0 F  S IBPOLFN=$O(IBINS(IBPOLFN)) Q:'IBPOLFN  D
"RTN","IBCNS3",20,0)
 . S IBPOL0=IBINS(IBPOLFN,0),IBPLNFN=$P(IBPOL0,U,18)
"RTN","IBCNS3",21,0)
 . S ^TMP($J,"IBCNS3")=IBPOLFN
"RTN","IBCNS3",22,0)
 . ;
"RTN","IBCNS3",23,0)
 . D GETLN(IBPOL0,DATE)
"RTN","IBCNS3",24,0)
 . I DISPLAY[2 D GETEXT(DFN,IBPOLFN,IBPOL0,DATE) ; display extended
"RTN","IBCNS3",25,0)
 . I DISPLAY[3 D GETCOM(IBPLNFN,$G(IBINS(IBPOLFN,1))) ; display extended 3, comments
"RTN","IBCNS3",26,0)
 ;
"RTN","IBCNS3",27,0)
 S ^TMP($J,"IBCNS3")="" D GETNOTES(DFN)
"RTN","IBCNS3",28,0)
 ;
"RTN","IBCNS3",29,0)
 D PRINT
"RTN","IBCNS3",30,0)
 ;
"RTN","IBCNS3",31,0)
DISPQ K ^TMP($J,"IBCNS3")
"RTN","IBCNS3",32,0)
 Q
"RTN","IBCNS3",33,0)
 ;
"RTN","IBCNS3",34,0)
PRINT ; display compiled array of patient insurance information in ^TMP($J,"IBCNS3")
"RTN","IBCNS3",35,0)
 N IBSUB,IBCOUNT,IBQUIT,IBLEVEL,IBLNX,IBDASH,IBLINE,IBCNTLN S $P(IBDASH,"-",80)="-" S DISPLAY=+$G(DISPLAY)
"RTN","IBCNS3",36,0)
 ;
"RTN","IBCNS3",37,0)
 D HDR S IBSUB="IBCNS3",IBCOUNT=3,IBQUIT=0
"RTN","IBCNS3",38,0)
 ;
"RTN","IBCNS3",39,0)
 S IBLEVEL=0 F  S IBLEVEL=$O(^TMP($J,IBSUB,IBLEVEL)) Q:'IBLEVEL  D  Q:IBQUIT
"RTN","IBCNS3",40,0)
 . S IBCNTLN=+$G(^TMP($J,IBSUB,IBLEVEL))+1
"RTN","IBCNS3",41,0)
 . ;
"RTN","IBCNS3",42,0)
 . I IBCOUNT>10,(IBCNTLN+IBCOUNT)>(IOSL-3) S IBQUIT=$$EOP Q:IBQUIT  D HDR S IBCOUNT=3
"RTN","IBCNS3",43,0)
 . ;
"RTN","IBCNS3",44,0)
 . S IBLNX=0 F  S IBLNX=$O(^TMP($J,IBSUB,IBLEVEL,IBLNX)) Q:'IBLNX  D  Q:IBQUIT
"RTN","IBCNS3",45,0)
 .. ;
"RTN","IBCNS3",46,0)
 .. S IBLINE=$G(^TMP($J,IBSUB,IBLEVEL,IBLNX))
"RTN","IBCNS3",47,0)
 .. ;
"RTN","IBCNS3",48,0)
 .. W !,IBLINE S IBCOUNT=IBCOUNT+1 I IBCOUNT>(IOSL-3) S IBQUIT=$$EOP Q:IBQUIT  W @IOF S IBCOUNT=2
"RTN","IBCNS3",49,0)
 . ;
"RTN","IBCNS3",50,0)
 . I 'IBQUIT,DISPLAY>1 W !,IBDASH S IBCOUNT=IBCOUNT+1
"RTN","IBCNS3",51,0)
 ;
"RTN","IBCNS3",52,0)
 I 'IBQUIT,IBCOUNT>2 S IBQUIT=$$EOP
"RTN","IBCNS3",53,0)
 Q
"RTN","IBCNS3",54,0)
 ;
"RTN","IBCNS3",55,0)
SETLN(LINE) ; set line as next line for current policy
"RTN","IBCNS3",56,0)
 N CNT,POL S LINE=$G(LINE)
"RTN","IBCNS3",57,0)
 S POL=+$G(^TMP($J,"IBCNS3"))
"RTN","IBCNS3",58,0)
 I 'POL S POL=$O(^TMP($J,"IBCNS3","~"),-1)+1 S ^TMP($J,"IBCNS3")=POL
"RTN","IBCNS3",59,0)
 ;
"RTN","IBCNS3",60,0)
 S CNT=+$G(^TMP($J,"IBCNS3",POL))+1
"RTN","IBCNS3",61,0)
 S ^TMP($J,"IBCNS3",POL)=CNT
"RTN","IBCNS3",62,0)
 S ^TMP($J,"IBCNS3",POL,CNT)=LINE
"RTN","IBCNS3",63,0)
 Q
"RTN","IBCNS3",64,0)
 ;
"RTN","IBCNS3",65,0)
 ;
"RTN","IBCNS3",66,0)
 ;
"RTN","IBCNS3",67,0)
GETLN(IBPOL0,IBDATE) ; get single line of primary data on insurance policy
"RTN","IBCNS3",68,0)
 ;     input:   IBPOL0 = line from array, zero node of patient policy (2,.312)
"RTN","IBCNS3",69,0)
 ;              IBDATE = date to check coverage, default today
"RTN","IBCNS3",70,0)
 ;    output:   formatted line of data for insurance policy in TMP($J,"IBCNS")
"RTN","IBCNS3",71,0)
 ;
"RTN","IBCNS3",72,0)
 N IBX,IBLINE S IBLINE=" " S IBPOL0=$G(IBPOL0)
"RTN","IBCNS3",73,0)
 ;
"RTN","IBCNS3",74,0)
 S IBX=$G(^DIC(36,+IBPOL0,0)),IBX=$S($P(IBX,U,1)'="":$P(IBX,U,1),1:"UNKNOWN") S IBLINE=$$FRMLN(IBX,IBLINE,11,0)
"RTN","IBCNS3",75,0)
 S IBX=$P(IBPOL0,U,20),IBX=$S(IBX=1:"p",IBX=2:"s",IBX=3:"t",1:"") S IBLINE=$$FRMLN(IBX,IBLINE,1,14)
"RTN","IBCNS3",76,0)
 S IBX=$P(IBPOL0,U,2) S IBLINE=$$FRMLN(IBX,IBLINE,16,17)
"RTN","IBCNS3",77,0)
 S IBX=$$FNDGRP($P(IBPOL0,U,18)) S IBLINE=$$FRMLN(IBX,IBLINE,10,35)
"RTN","IBCNS3",78,0)
 S IBX=$P(IBPOL0,U,6),IBX=$S(IBX="v":"SELF",IBX="s":"SPOUSE",1:"OTHER") S IBLINE=$$FRMLN(IBX,IBLINE,7,47)
"RTN","IBCNS3",79,0)
 S IBX=$$DAT1^IBOUTL($P(IBPOL0,U,8)) S IBLINE=$$FRMLN(IBX,IBLINE,8,55)
"RTN","IBCNS3",80,0)
 S IBX=$$DAT1^IBOUTL($P(IBPOL0,U,4)) S IBLINE=$$FRMLN(IBX,IBLINE,8,65)
"RTN","IBCNS3",81,0)
 S IBX=$$FNDCOV(+IBPOL0,+$P(IBPOL0,U,18),$G(IBDATE)) S IBLINE=$$FRMLN(IBX,IBLINE,6,74)
"RTN","IBCNS3",82,0)
 ;
"RTN","IBCNS3",83,0)
 D SETLN(IBLINE)
"RTN","IBCNS3",84,0)
GETLNQ Q
"RTN","IBCNS3",85,0)
 ;
"RTN","IBCNS3",86,0)
 ;
"RTN","IBCNS3",87,0)
GETEXT(DFN,IBPOLFN,IBPOL0,DATE) ; display extended insurance information
"RTN","IBCNS3",88,0)
 ; Plan Filing Timeframe, Plan Coverage, Conditional Coverage Comments, and Riders
"RTN","IBCNS3",89,0)
 ;     input:   DFN     = pointer to patient (2)
"RTN","IBCNS3",90,0)
 ;              IBPOLFN = pointer to patient insurance policy in 2.312
"RTN","IBCNS3",91,0)
 ;              IBPOL0  = line from array, zero node of patient policy (2,.312)
"RTN","IBCNS3",92,0)
 ;              DATE    = date to check coverage, default today
"RTN","IBCNS3",93,0)
 ;              DISPARR = array to pass data back in, pass by reference
"RTN","IBCNS3",94,0)
 ;    output:   array of extended data in TMP($J,"IBCNS")
"RTN","IBCNS3",95,0)
 ;
"RTN","IBCNS3",96,0)
 N IBX,IBY,IBZ,IBC,IBINSFN,IBPLNFN,IBPLN0,IBLINE,IBCAT,IBCATFN,IBCOVRD,IBU,ARR,ARR1 S:'$G(DATE) DATE=DT
"RTN","IBCNS3",97,0)
 S IBINSFN=+$G(IBPOL0) Q:'IBINSFN  S IBPLNFN=+$P(IBPOL0,U,18),IBPLN0=$G(^IBA(355.3,IBPLNFN,0)) Q:IBPLN0=""
"RTN","IBCNS3",98,0)
 ;
"RTN","IBCNS3",99,0)
 S IBLINE="Last Verified:   ",(IBY,IBX)=""
"RTN","IBCNS3",100,0)
 S IBY=$P($G(^DPT(DFN,.312,IBPOLFN,1)),U,3) I IBY'="" S IBX=$$DAT1^IBOUTL(IBY) S IBLINE=IBLINE_IBX D SETLN(" "),SETLN(IBLINE)
"RTN","IBCNS3",101,0)
 ;
"RTN","IBCNS3",102,0)
 S IBLINE="Plan Filing Time Frame: "
"RTN","IBCNS3",103,0)
 S IBY=$P(IBPLN0,U,13) S:IBY'="" IBY=IBY_"  " I +$P(IBPLN0,U,16) S IBY=IBY_"("_$$FTFN^IBCNSU31(IBPLNFN)_")"
"RTN","IBCNS3",104,0)
 I IBY'="" S IBLINE=IBLINE_IBY D:IBX="" SETLN(" ") D SETLN(IBLINE)
"RTN","IBCNS3",105,0)
 ;
"RTN","IBCNS3",106,0)
 S IBLINE="Insurance Comp:  "
"RTN","IBCNS3",107,0)
 I $P($G(^DIC(36,IBINSFN,0)),U,2)="N" S IBLINE=IBLINE_"Will Not Reimburse" D SETLN(" "),SETLN(IBLINE)
"RTN","IBCNS3",108,0)
 ;
"RTN","IBCNS3",109,0)
 S IBLINE="Conditional: ",IBCOVRD="",IBU=""
"RTN","IBCNS3",110,0)
 K ARR F IBCAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS3",111,0)
 . S IBCATFN=+$O(^IBE(355.31,"B",IBCAT,"")) Q:'IBCATFN
"RTN","IBCNS3",112,0)
 . S IBY=$$PLCOV^IBCNSU3(+IBPLNFN,DATE,IBCATFN,.ARR) Q:IBY'>0
"RTN","IBCNS3",113,0)
 . I IBY=1 S IBCOVRD=$G(IBCOVRD)_IBU_$S(IBCAT["PATIENT":$P(IBCAT,"IENT",1),1:IBCAT),IBU=", " Q
"RTN","IBCNS3",114,0)
 . S IBX=IBCAT_": ",IBC=$G(IBC)+100 S IBLINE=$$FRMLN(IBX,IBLINE,15,17)
"RTN","IBCNS3",115,0)
 . S IBZ=0 F  S IBZ=$O(ARR(IBZ)) Q:'IBZ  S IBX=ARR(IBZ) D  S IBLINE=""
"RTN","IBCNS3",116,0)
 .. S IBLINE=$$FRMLN(IBX,IBLINE,46,33) S ARR1(IBC+IBZ)=IBLINE
"RTN","IBCNS3",117,0)
 I IBCOVRD'="" S IBLINE="Plan Coverage:   "_$G(IBCOVRD) D SETLN(" "),SETLN(IBLINE)
"RTN","IBCNS3",118,0)
 I $O(ARR1("")) D:IBCOVRD="" SETLN(" ") S IBZ=0 F  S IBZ=$O(ARR1(IBZ)) Q:'IBZ  S IBX=ARR1(IBZ) D SETLN(IBX)
"RTN","IBCNS3",119,0)
 ;
"RTN","IBCNS3",120,0)
 S IBLINE="Policy Riders: "
"RTN","IBCNS3",121,0)
 K ARR D RIDERS^IBCNSU3(+$G(DFN),+$G(IBPOLFN),.ARR) I $O(ARR("")) D SETLN(" ")
"RTN","IBCNS3",122,0)
 S IBZ=0 F  S IBZ=$O(ARR(IBZ)) Q:'IBZ  S IBX=ARR(IBZ) D  S IBLINE=""
"RTN","IBCNS3",123,0)
 . S IBLINE=$$FRMLN(IBX,IBLINE,62,17) D SETLN(IBLINE)
"RTN","IBCNS3",124,0)
 Q
"RTN","IBCNS3",125,0)
 ;
"RTN","IBCNS3",126,0)
 ;
"RTN","IBCNS3",127,0)
GETCOM(IBPLNFN,IBPOL1) ; get patient insurance and plan insurance comments in TMP($J,"IBCNS")
"RTN","IBCNS3",128,0)
 N IBX,IBY
"RTN","IBCNS3",129,0)
 ;
"RTN","IBCNS3",130,0)
 S IBX=$P($G(IBPOL1),U,8) I IBX'="" S IBY="Patient Policy Comments: " D SETLN(" "),SETLN(IBY),SETLN(IBX)
"RTN","IBCNS3",131,0)
 ;
"RTN","IBCNS3",132,0)
 I +$G(IBPLNFN),$O(^IBA(355.3,+IBPLNFN,11,0)) S IBX="Group/Plan Comments:" D SETLN(" "),SETLN(IBX) D
"RTN","IBCNS3",133,0)
 . S IBX=0 F  S IBX=$O(^IBA(355.3,+IBPLNFN,11,IBX)) Q:'IBX  S IBY=$G(^IBA(355.3,+IBPLNFN,11,IBX,0)) D SETLN(IBY)
"RTN","IBCNS3",134,0)
 Q
"RTN","IBCNS3",135,0)
 ;
"RTN","IBCNS3",136,0)
 ;
"RTN","IBCNS3",137,0)
GETNOTES(DFN) ; get final notes/warnings in TMP($J,"IBCNS")
"RTN","IBCNS3",138,0)
 N IBX,IBY,IBLINE1,IBLINE2,IBFND S (IBFND,IBLINE1,IBLINE2)=""  Q:'$G(DFN)
"RTN","IBCNS3",139,0)
 ;
"RTN","IBCNS3",140,0)
 S IBX=+$G(^IBA(354,DFN,60)) I +IBX S IBY="*** Verification of No Coverage "_$$FMTE^XLFDT(IBX)_" ***" S IBLINE1=$$FRMLN(IBY,"",60,16),IBFND=1
"RTN","IBCNS3",141,0)
 I $$BUFFER^IBCNBU1(DFN) S IBY="***  Patient has Insurance Buffer entries  ***" S IBLINE2=$$FRMLN(IBY,"",50,17),IBFND=1
"RTN","IBCNS3",142,0)
 ;
"RTN","IBCNS3",143,0)
 I +IBFND D SETLN(" ") D:IBLINE1'="" SETLN(IBLINE1) D:IBLINE2'="" SETLN(IBLINE2) D SETLN(" ")
"RTN","IBCNS3",144,0)
 ;
"RTN","IBCNS3",145,0)
 Q
"RTN","IBCNS3",146,0)
 ;
"RTN","IBCNS3",147,0)
 ;
"RTN","IBCNS3",148,0)
 ;
"RTN","IBCNS3",149,0)
 ;
"RTN","IBCNS3",150,0)
FRMLN(FIELD,IBLINE,FLNG,COL) ; format line data fields, returns IBLINE with FIELD of length FLNG at column COL
"RTN","IBCNS3",151,0)
 N IBNEW,IBL S FIELD=$G(FIELD),IBLINE=$G(IBLINE),FLNG=$G(FLNG),COL=$G(COL)
"RTN","IBCNS3",152,0)
 ;
"RTN","IBCNS3",153,0)
 S IBNEW=$E(IBLINE,1,COL),IBL=$L(IBNEW),IBNEW=IBNEW_$J("",COL-IBL)
"RTN","IBCNS3",154,0)
 S IBNEW=IBNEW_$E(FIELD,1,FLNG),IBL=$L(FIELD),IBNEW=IBNEW_$J("",FLNG-IBL)
"RTN","IBCNS3",155,0)
 S IBNEW=IBNEW_$E(IBLINE,COL+FLNG+1,9999)
"RTN","IBCNS3",156,0)
 Q IBNEW
"RTN","IBCNS3",157,0)
 ;
"RTN","IBCNS3",158,0)
 ;
"RTN","IBCNS3",159,0)
 ;
"RTN","IBCNS3",160,0)
FNDCOV(IBINSFN,IBPLNFN,IBDATE) ; -- return group/plan coverage limitations indications
"RTN","IBCNS3",161,0)
 ;     input:   IBINSFN = pointer to insurance company entry in 36
"RTN","IBCNS3",162,0)
 ;              IBPLNFN = pointer to insurance plan entry in 355.3
"RTN","IBCNS3",163,0)
 ;              IBDATE  = date to check coverage, default today
"RTN","IBCNS3",164,0)
 ;    output:   if insurance company will not reimburse = WNR, if all covered then returns null
"RTN","IBCNS3",165,0)
 ;              otherwise list of first characters of types covered, if conditional then character in lower case
"RTN","IBCNS3",166,0)
 ;              
"RTN","IBCNS3",167,0)
 N IBOUT,IBX,IBY,IBCAT,IBCATFN S IBOUT="" S:'$G(IBDATE) IBDATE=DT I '$G(IBINSFN)!'$G(IBPLNFN) G FNDCOVQ
"RTN","IBCNS3",168,0)
 ;
"RTN","IBCNS3",169,0)
 I $P($G(^DIC(36,+IBINSFN,0)),U,2)="N" S IBOUT="*WNR*" G FNDCOVQ
"RTN","IBCNS3",170,0)
 F IBCAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS3",171,0)
 . S IBCATFN=+$O(^IBE(355.31,"B",IBCAT,"")) Q:'IBCATFN
"RTN","IBCNS3",172,0)
 . S IBY=$$PLCOV^IBCNSU3(+IBPLNFN,IBDATE,+IBCATFN) Q:'IBY
"RTN","IBCNS3",173,0)
 . S IBX=$S(IBCAT="PHARMACY":"R",1:$E(IBCAT)) S:IBY>1 IBX=$C($A(IBX)+32) S IBOUT=IBOUT_IBX
"RTN","IBCNS3",174,0)
 S:IBOUT="" IBOUT="no CV" I IBOUT?6U S IBOUT=""
"RTN","IBCNS3",175,0)
FNDCOVQ Q IBOUT
"RTN","IBCNS3",176,0)
 ;
"RTN","IBCNS3",177,0)
 ;
"RTN","IBCNS3",178,0)
FNDGRP(IBPLNFN) ; -- return group name/group policy
"RTN","IBCNS3",179,0)
 ;     input:   IBPLNFN = pointer to insurance plan entry in 355.3
"RTN","IBCNS3",180,0)
 ;    output:   group name or group number, if both group NUMBER, check for Individual plans
"RTN","IBCNS3",181,0)
 ;
"RTN","IBCNS3",182,0)
 N IBX,IBOUT S IBOUT=""
"RTN","IBCNS3",183,0)
 S IBX=$G(^IBA(355.3,+$G(IBPLNFN),0))
"RTN","IBCNS3",184,0)
 S IBOUT=$S($P(IBX,U,4)'="":$P(IBX,U,4),1:$P(IBX,U,3))
"RTN","IBCNS3",185,0)
 I $P(IBX,U,10) S IBOUT="Ind. Plan "_IBOUT
"RTN","IBCNS3",186,0)
FNDGRPQ Q IBOUT
"RTN","IBCNS3",187,0)
 ;
"RTN","IBCNS3",188,0)
 ;
"RTN","IBCNS3",189,0)
 ;
"RTN","IBCNS3",190,0)
 ;
"RTN","IBCNS3",191,0)
HDR ; -- print header
"RTN","IBCNS3",192,0)
 N IBX W @IOF
"RTN","IBCNS3",193,0)
 W !,"Insurance",?13,"COB",?17,"Subscriber ID",?35,"Group",?47,"Holder",?55,"Effectve",?65,"Expires",?75,"Only"
"RTN","IBCNS3",194,0)
 S IBX="",$P(IBX,"=",80)="=" W !,IBX
"RTN","IBCNS3",195,0)
 Q
"RTN","IBCNS3",196,0)
 ;
"RTN","IBCNS3",197,0)
EOP() ; ask user for return at end of page, return 1 if '^' entered
"RTN","IBCNS3",198,0)
 N IBQ,DIR,DIRUT,DUOUT,DTOUT,X,Y W ! S IBQ=0,DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBQ=1
"RTN","IBCNS3",199,0)
 Q IBQ
"RTN","IBCNSC01")
0^22^B55064562^B54638863
"RTN","IBCNSC01",1,0)
IBCNSC01 ;ALB/NLR - INSURANCE COMPANY EDIT ;6/1/05 10:06am
"RTN","IBCNSC01",2,0)
 ;;2.0;INTEGRATED BILLING;**52,137,191,184,232,320,349,371,399**;21-MAR-94;Build 8
"RTN","IBCNSC01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSC01",4,0)
 ;
"RTN","IBCNSC01",5,0)
PARAM ; -- Insurance company parameters region
"RTN","IBCNSC01",6,0)
 N OFFSET,START,IBCNS0,IBCNS03,IBCNS06,IBCNS08,IBCNS13,IBCNS3
"RTN","IBCNSC01",7,0)
 S IBCNS0=$G(^DIC(36,+IBCNS,0)),IBCNS3=$G(^(3))
"RTN","IBCNSC01",8,0)
 S IBCNS03=$P(IBCNS0,"^",3),IBCNS06=$P(IBCNS0,"^",6),IBCNS08=$P(IBCNS0,"^",8)
"RTN","IBCNSC01",9,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",10,0)
 S START=1,OFFSET=2
"RTN","IBCNSC01",11,0)
 D SET^IBCNSP(START,OFFSET+25," Billing Parameters ",IORVON,IORVOFF)
"RTN","IBCNSC01",12,0)
 ;
"RTN","IBCNSC01",13,0)
 D SET^IBCNSP(START+1,OFFSET+1,"Signature Required?: "_$S(+IBCNS03:"YES",1:"NO"))
"RTN","IBCNSC01",14,0)
 D SET^IBCNSP(START+2,OFFSET+10,"Reimburse?: "_$E($$EXPAND^IBTRE(36,1,$P(IBCNS0,"^",2)),1,21))
"RTN","IBCNSC01",15,0)
 D SET^IBCNSP(START+3,OFFSET+3,"Mult. Bedsections: "_$S(+IBCNS06:"YES",IBCNS06=0:"NO",1:""))
"RTN","IBCNSC01",16,0)
 D SET^IBCNSP(START+4,OFFSET+6,"One Opt. Visit: "_$S(+IBCNS08:"YES",1:"NO"))
"RTN","IBCNSC01",17,0)
 D SET^IBCNSP(START+5,OFFSET+4,"Diff. Rev. Codes: "_$P(IBCNS0,"^",7))
"RTN","IBCNSC01",18,0)
 D SET^IBCNSP(START+6,OFFSET+1,"Amb. Sur. Rev. Code: "_$P(IBCNS0,"^",9))
"RTN","IBCNSC01",19,0)
 D SET^IBCNSP(START+7,OFFSET+1,"Rx Refill Rev. Code: "_$P(IBCNS0,"^",15))
"RTN","IBCNSC01",20,0)
 D SET^IBCNSP(START+8,OFFSET+3,"Filing Time Frame: "_$P(IBCNS0,"^",12)_$S(+$P(IBCNS0,"^",18):" ("_$$FTFN^IBCNSU31(,+IBCNS)_")",1:""))
"RTN","IBCNSC01",21,0)
 ;
"RTN","IBCNSC01",22,0)
 S OFFSET=45
"RTN","IBCNSC01",23,0)
 D SET^IBCNSP(START+1,OFFSET+4,"Type Of Coverage: "_$$EXPAND^IBTRE(36,.13,+$P(IBCNS0,U,13)))
"RTN","IBCNSC01",24,0)
 D SET^IBCNSP(START+2,OFFSET+7,"Billing Phone: "_$P(IBCNS13,"^",2))
"RTN","IBCNSC01",25,0)
 D SET^IBCNSP(START+3,OFFSET+2,"Verification Phone: "_$P(IBCNS13,"^",4))
"RTN","IBCNSC01",26,0)
 D SET^IBCNSP(START+4,OFFSET+2,"Precert Comp. Name: "_$P($G(^DIC(36,+$P(IBCNS13,"^",9),0)),"^",1))
"RTN","IBCNSC01",27,0)
 D SET^IBCNSP(START+5,OFFSET+7,"Precert Phone: "_$$PHONE(IBCNS13))
"RTN","IBCNSC01",28,0)
 I +IBCNS3=2 D SET^IBCNSP(START+6,OFFSET,"Max # Test Bills/Day: "_$P(IBCNS3,U,6))
"RTN","IBCNSC01",29,0)
 ;
"RTN","IBCNSC01",30,0)
 S START=11,OFFSET=2
"RTN","IBCNSC01",31,0)
 D SET^IBCNSP(START,OFFSET+28," EDI Parameters ",IORVON,IORVOFF)
"RTN","IBCNSC01",32,0)
 D SET^IBCNSP(START+1,OFFSET+13,"Transmit?: "_$S(+IBCNS3=1:"YES-LIVE",+IBCNS3=2:"TEST ONLY",1:"NO"))
"RTN","IBCNSC01",33,0)
 D SET^IBCNSP(START+2,OFFSET+1,"Inst Payer Primary ID: "_$P(IBCNS3,U,4))
"RTN","IBCNSC01",34,0)
 D SET^IBCNSP(START+3,OFFSET,"Inst Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.01))
"RTN","IBCNSC01",35,0)
 D SET^IBCNSP(START+4,OFFSET+5,"Inst Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.02))
"RTN","IBCNSC01",36,0)
 D SET^IBCNSP(START+5,OFFSET,"Inst Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.03))
"RTN","IBCNSC01",37,0)
 D SET^IBCNSP(START+6,OFFSET+5,"Inst Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.04))
"RTN","IBCNSC01",38,0)
 D SET^IBCNSP(START+7,OFFSET+12,"Bin Number: "_$P($G(^DIC(36,+IBCNS,3)),"^",3)) ;
"RTN","IBCNSC01",39,0)
 ;
"RTN","IBCNSC01",40,0)
 S OFFSET=41
"RTN","IBCNSC01",41,0)
 D SET^IBCNSP(START+1,OFFSET+8," Insurance Type: "_$$EXPAND^IBTRE(36,3.09,+$P(IBCNS3,U,9)))
"RTN","IBCNSC01",42,0)
 D SET^IBCNSP(START+2,OFFSET+1," Prof Payer Primary ID: "_$P(IBCNS3,U,2))
"RTN","IBCNSC01",43,0)
 D SET^IBCNSP(START+3,OFFSET," Prof Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.05))
"RTN","IBCNSC01",44,0)
 D SET^IBCNSP(START+4,OFFSET+5," Prof Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.06))
"RTN","IBCNSC01",45,0)
 D SET^IBCNSP(START+5,OFFSET," Prof Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.07))
"RTN","IBCNSC01",46,0)
 D SET^IBCNSP(START+6,OFFSET+5," Prof Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.08))
"RTN","IBCNSC01",47,0)
 Q
"RTN","IBCNSC01",48,0)
 ;
"RTN","IBCNSC01",49,0)
PHONE(IBCNS13) ; -- Compute precert company phone
"RTN","IBCNSC01",50,0)
 N IBX,IBSAVE,IBCNT S IBX=""
"RTN","IBCNSC01",51,0)
 I '$P(IBCNS13,"^",9) S IBX=$P(IBCNS13,"^",3) G PHONEQ
"RTN","IBCNSC01",52,0)
REDOX S IBSAVE=+$P(IBCNS13,"^",9)
"RTN","IBCNSC01",53,0)
 S IBCNT=$G(IBCNT)+1
"RTN","IBCNSC01",54,0)
 ; -- if you process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",55,0)
 I $D(IBCNT(IBCNS)) G PHONEQ
"RTN","IBCNSC01",56,0)
 S IBCNT(IBCNS)=""
"RTN","IBCNSC01",57,0)
 S IBCNS13=$G(^DIC(36,+$P(IBCNS13,"^",9),.13))
"RTN","IBCNSC01",58,0)
 S IBX=$P(IBCNS13,"^") S:$L($P(IBCNS13,"^",3)) IBX=$P(IBCNS13,"^",3)
"RTN","IBCNSC01",59,0)
 ; -- if process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",60,0)
 I $P(IBCNS13,"^",9),$P(IBCNS13,"^",9)'=IBSAVE G REDOX
"RTN","IBCNSC01",61,0)
PHONEQ Q IBX
"RTN","IBCNSC01",62,0)
 ;
"RTN","IBCNSC01",63,0)
MAIN ; -- Insurance company main address
"RTN","IBCNSC01",64,0)
 N OFFSET,START,IBCNS11,IBCNS13,IBADD
"RTN","IBCNSC01",65,0)
 S IBCNS11=$G(^DIC(36,+IBCNS,.11))
"RTN","IBCNSC01",66,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",67,0)
 S START=21,OFFSET=25
"RTN","IBCNSC01",68,0)
 D SET^IBCNSP(START,OFFSET," Main Mailing Address ",IORVON,IORVOFF)
"RTN","IBCNSC01",69,0)
 N OFFSET S OFFSET=2
"RTN","IBCNSC01",70,0)
 D SET^IBCNSP(START+1,OFFSET,"       Street: "_$P(IBCNS11,"^",1)) S IBADD=1
"RTN","IBCNSC01",71,0)
 D SET^IBCNSP(START+2,OFFSET,"     Street 2: "_$P(IBCNS11,"^",2)) S IBADD=2
"RTN","IBCNSC01",72,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 3: "_$P(IBCNS11,"^",3)) S IBADD=3
"RTN","IBCNSC01",73,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS11,U,11))
"RTN","IBCNSC01",74,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC01",75,0)
 D SET^IBCNSP(START+1,OFFSET,"   City/State: "_$E($P(IBCNS11,"^",4),1,15)_$S($P(IBCNS11,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS11,"^",5),0)),"^",2)_" "_$E($P(IBCNS11,"^",6),1,5))
"RTN","IBCNSC01",76,0)
 D SET^IBCNSP(START+2,OFFSET,"        Phone: "_$P(IBCNS13,"^",1))
"RTN","IBCNSC01",77,0)
 D SET^IBCNSP(START+3,OFFSET,"          Fax: "_$P(IBCNS11,"^",9))
"RTN","IBCNSC01",78,0)
 Q
"RTN","IBCNSC01",79,0)
 ;
"RTN","IBCNSC01",80,0)
 ;
"RTN","IBCNSC01",81,0)
PAYER ; This procedure builds the display for the payer associated with
"RTN","IBCNSC01",82,0)
 ; this insurance company.
"RTN","IBCNSC01",83,0)
 ; ESG - 7/29/02 - IIV project
"RTN","IBCNSC01",84,0)
 ;
"RTN","IBCNSC01",85,0)
 NEW PAYERIEN,PAYR,APPDATA,APP,DATA,APPNAME,A1,A2,A3,A4,A5,A6,A7,A8
"RTN","IBCNSC01",86,0)
 NEW START,TITLE,OFFSET,IBLINE
"RTN","IBCNSC01",87,0)
 S PAYERIEN=$P($G(^DIC(36,+IBCNS,3)),U,10),PAYR="",APPDATA=0
"RTN","IBCNSC01",88,0)
 I PAYERIEN D
"RTN","IBCNSC01",89,0)
 . S PAYR=$G(^IBE(365.12,PAYERIEN,0))
"RTN","IBCNSC01",90,0)
 . S APP=0
"RTN","IBCNSC01",91,0)
 . F  S APP=$O(^IBE(365.12,PAYERIEN,1,APP)) Q:'APP  D
"RTN","IBCNSC01",92,0)
 .. S DATA=$G(^IBE(365.12,PAYERIEN,1,APP,0))
"RTN","IBCNSC01",93,0)
 .. S APPNAME=$$EXTERNAL^DILFD(365.121,.01,"",$P(DATA,U,1))
"RTN","IBCNSC01",94,0)
 .. I APPNAME="" Q
"RTN","IBCNSC01",95,0)
 .. I $D(APPDATA(APPNAME)) Q
"RTN","IBCNSC01",96,0)
 .. S (A1,A2,A3,A4,A5,A6,A7)="NO",A8=""
"RTN","IBCNSC01",97,0)
 .. I $P(DATA,U,2) S A1="YES"      ; national active
"RTN","IBCNSC01",98,0)
 .. I $P(DATA,U,3) S A2="YES"      ; local active
"RTN","IBCNSC01",99,0)
 .. I $P(DATA,U,7) S A3="YES"      ; auto-accept
"RTN","IBCNSC01",100,0)
 .. I $P(DATA,U,8) S A4="YES"      ; ident inquiries require subscr ID
"RTN","IBCNSC01",101,0)
 .. I $P(DATA,U,9) S A5="YES"      ; use SSN for subscriber ID
"RTN","IBCNSC01",102,0)
 .. I $P(DATA,U,10) S A6="YES"     ; transmit SSN
"RTN","IBCNSC01",103,0)
 .. I $P(DATA,U,11) S A7="YES"     ; deactivated?
"RTN","IBCNSC01",104,0)
 .. ; A8 = deactivation date
"RTN","IBCNSC01",105,0)
 .. I $P(DATA,U,12) S A8=$P($$FMTE^XLFDT($P(DATA,U,12),"5Z"),"@",1)
"RTN","IBCNSC01",106,0)
 .. S APPDATA(APPNAME)=A1_U_A2_U_A3_U_A4_U_A5_U_A6_U_A7_U_A8
"RTN","IBCNSC01",107,0)
 .. S APPDATA=APPDATA+1
"RTN","IBCNSC01",108,0)
 .. Q
"RTN","IBCNSC01",109,0)
 . Q
"RTN","IBCNSC01",110,0)
 ;
"RTN","IBCNSC01",111,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC01",112,0)
 S IB1ST("PAYER")=START
"RTN","IBCNSC01",113,0)
 S TITLE=" Payer Information/Electronic Insurance Verification "
"RTN","IBCNSC01",114,0)
 S OFFSET=(40-($L(TITLE)/2))\1+1
"RTN","IBCNSC01",115,0)
 D SET^IBCNSP(START,OFFSET,TITLE,IORVON,IORVOFF)
"RTN","IBCNSC01",116,0)
 D SET^IBCNSP(START+1,9,"Payer Name: "_$P(PAYR,U,1))
"RTN","IBCNSC01",117,0)
 D SET^IBCNSP(START+2,5,"VA National ID: "_$P(PAYR,U,2))
"RTN","IBCNSC01",118,0)
 D SET^IBCNSP(START+2,51,"CMS National ID: "_$P(PAYR,U,3))
"RTN","IBCNSC01",119,0)
 S IBLINE=START+2
"RTN","IBCNSC01",120,0)
 ;
"RTN","IBCNSC01",121,0)
 ; Handle the case where no application data is defined
"RTN","IBCNSC01",122,0)
 I 'APPDATA D  G PAYERX
"RTN","IBCNSC01",123,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",124,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",125,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",126,0)
 . D SET^IBCNSP(IBLINE,16,"Payer Application data is not defined!")
"RTN","IBCNSC01",127,0)
 . Q
"RTN","IBCNSC01",128,0)
 ;
"RTN","IBCNSC01",129,0)
 ; Display all the applications
"RTN","IBCNSC01",130,0)
 S APPNAME=""
"RTN","IBCNSC01",131,0)
 F  S APPNAME=$O(APPDATA(APPNAME)) Q:APPNAME=""  D
"RTN","IBCNSC01",132,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",133,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",134,0)
 . ;
"RTN","IBCNSC01",135,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",136,0)
 . D SET^IBCNSP(IBLINE,2,"Payer Application: "_APPNAME)
"RTN","IBCNSC01",137,0)
 . D SET^IBCNSP(IBLINE,50,"Auto-Accept Info: "_$P(APPDATA(APPNAME),U,3))
"RTN","IBCNSC01",138,0)
 . ;
"RTN","IBCNSC01",139,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",140,0)
 . D SET^IBCNSP(IBLINE,4,"National Active: "_$P(APPDATA(APPNAME),U,1))
"RTN","IBCNSC01",141,0)
 . D SET^IBCNSP(IBLINE,47,"Ident Req Subscr ID: "_$P(APPDATA(APPNAME),U,4))
"RTN","IBCNSC01",142,0)
 . ;
"RTN","IBCNSC01",143,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",144,0)
 . D SET^IBCNSP(IBLINE,7,"Local Active: "_$P(APPDATA(APPNAME),U,2))
"RTN","IBCNSC01",145,0)
 . D SET^IBCNSP(IBLINE,51,"SSN = Subscr ID: "_$P(APPDATA(APPNAME),U,5))
"RTN","IBCNSC01",146,0)
 . ;
"RTN","IBCNSC01",147,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",148,0)
 . D SET^IBCNSP(IBLINE,8,"Deactivated: "_$P(APPDATA(APPNAME),U,7))
"RTN","IBCNSC01",149,0)
 . D SET^IBCNSP(IBLINE,54,"Transmit SSN: "_$P(APPDATA(APPNAME),U,6))
"RTN","IBCNSC01",150,0)
 . ;
"RTN","IBCNSC01",151,0)
 . ; If no deactivated date, then exit
"RTN","IBCNSC01",152,0)
 . I $P(APPDATA(APPNAME),U,8)="" Q
"RTN","IBCNSC01",153,0)
 . ;
"RTN","IBCNSC01",154,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",155,0)
 . D SET^IBCNSP(IBLINE,13,"D-Date: "_$P(APPDATA(APPNAME),U,8))
"RTN","IBCNSC01",156,0)
 . ;
"RTN","IBCNSC01",157,0)
 . Q
"RTN","IBCNSC01",158,0)
PAYERX ;
"RTN","IBCNSC01",159,0)
 ; Two trailing blank lines after payer information display
"RTN","IBCNSC01",160,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",161,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",162,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",163,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",164,0)
 Q
"RTN","IBCNSC01",165,0)
 ;
"RTN","IBCNSC01",166,0)
 ;
"RTN","IBCNSC01",167,0)
REMARKS ;
"RTN","IBCNSC01",168,0)
 ;
"RTN","IBCNSC01",169,0)
 N OFFSET,START,IBLCNT,IBI
"RTN","IBCNSC01",170,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",171,0)
 S IB1ST("REM")=START
"RTN","IBCNSC01",172,0)
 ;
"RTN","IBCNSC01",173,0)
 D SET^IBCNSP(START,OFFSET," Remarks ",IORVON,IORVOFF)
"RTN","IBCNSC01",174,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^DIC(36,+IBCNS,11,IBI)) Q:IBI<1  D
"RTN","IBCNSC01",175,0)
 . S IBLCNT=IBLCNT+1
"RTN","IBCNSC01",176,0)
 . D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^DIC(36,+IBCNS,11,IBI,0)),1,80))
"RTN","IBCNSC01",177,0)
 . Q
"RTN","IBCNSC01",178,0)
 D SET^IBCNSP(START+IBLCNT+1,OFFSET," ")   ; blank line after remarks
"RTN","IBCNSC01",179,0)
 Q
"RTN","IBCNSC01",180,0)
 ;
"RTN","IBCNSC01",181,0)
SYN ;
"RTN","IBCNSC01",182,0)
 N OFFSET,START,SYN,SYNOI
"RTN","IBCNSC01",183,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",184,0)
 S IB1ST("SYN")=START
"RTN","IBCNSC01",185,0)
 D SET^IBCNSP(START,OFFSET," Synonyms ",IORVON,IORVOFF)
"RTN","IBCNSC01",186,0)
 S SYN="" F SYNOI=1:1:8 S SYN=$O(^DIC(36,+IBCNS,10,"B",SYN)) Q:SYN=""  D SET^IBCNSP(START+SYNOI,OFFSET,$S(SYNOI>7:"  ...edit to see more...",1:"  "_SYN))
"RTN","IBCNSC01",187,0)
 Q
"RTN","IBCNSC01",188,0)
 ;
"RTN","IBCNSM3")
0^23^B14041849^B13886577
"RTN","IBCNSM3",1,0)
IBCNSM3 ;ALB/AAS - INSURANCE MANAGEMENT - OUTPUTS ; 4/7/03 9:56am
"RTN","IBCNSM3",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,85,211,251,399**;21-MAR-94;Build 8
"RTN","IBCNSM3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSM3",4,0)
 ;
"RTN","IBCNSM3",5,0)
% G EN^IBCNSM
"RTN","IBCNSM3",6,0)
 ;
"RTN","IBCNSM3",7,0)
AD ; -- Add new insurance policy
"RTN","IBCNSM3",8,0)
 N X,Y,DO,DD,DA,DR,DIC,DIE,DIK,DIR,DIRUT,IBCNSP,IBCPOL,IBQUIT,IBOK,IBCDFN,IBAD,IBGRP,IBADPOL,IBCOVP,ANS,IBGNA,IBGNU
"RTN","IBCNSM3",9,0)
 S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1),IBQUIT=0,IBADPOL=1
"RTN","IBCNSM3",10,0)
 D FULL^VALM1
"RTN","IBCNSM3",11,0)
 S IBCOVP=$P($G(^DPT(DFN,.31)),"^",11)
"RTN","IBCNSM3",12,0)
 I '$D(^DPT(DFN,.312,0)) S ^DPT(DFN,.312,0)="^2.312PAI^^"
"RTN","IBCNSM3",13,0)
 ;
"RTN","IBCNSM3",14,0)
 D INS^IBCNSEH
"RTN","IBCNSM3",15,0)
 ; -- Select insurance company
"RTN","IBCNSM3",16,0)
 ;    If one already exists for same co. ask are you sure you are
"RTN","IBCNSM3",17,0)
 ;    adding a new one
"RTN","IBCNSM3",18,0)
 S DIR(0)="350.9,4.06"
"RTN","IBCNSM3",19,0)
 S DIR("A")="Select INSURANCE COMPANY",DIR("??")="^D ADH^IBCNSM3"
"RTN","IBCNSM3",20,0)
 S DIR("?")="Select the Insurance Company for the policy you are entering"
"RTN","IBCNSM3",21,0)
 D ^DIR K DIR S IBCNSP=+Y I Y<1 G ADQ
"RTN","IBCNSM3",22,0)
 I $P($G(^DIC(36,+IBCNSP,0)),"^",2)="N" W !,"This company does not reimburse.  "
"RTN","IBCNSM3",23,0)
 I $P($G(^DIC(36,+IBCNSP,0)),"^",5) W !,*7,"Warning: Inactive Company" H 3 K IBCNSP G ADQ
"RTN","IBCNSM3",24,0)
 I $$DUPCO^IBCNSOK1(DFN,IBCNSP,"",1) H 3
"RTN","IBCNSM3",25,0)
 ;
"RTN","IBCNSM3",26,0)
 ; -- see if can use existing policy
"RTN","IBCNSM3",27,0)
 D SEL^IBCNSEH
"RTN","IBCNSM3",28,0)
 S IBCPOL=$$LK^IBCNSM31(IBCNSP)
"RTN","IBCNSM3",29,0)
 I IBCPOL<1 D NEW^IBCNSJ3(IBCNSP,.IBCPOL)
"RTN","IBCNSM3",30,0)
 I IBCPOL<1 G ADQ
"RTN","IBCNSM3",31,0)
 ;
"RTN","IBCNSM3",32,0)
 ; -- file new patient policy
"RTN","IBCNSM3",33,0)
 S DIC("DR")=".18////"_IBCPOL_";1.09////1;1.05///NOW;1.06////"_DUZ
"RTN","IBCNSM3",34,0)
 K DD,DO S DA(1)=DFN,DIC="^DPT("_DFN_",.312,",DIC(0)="L",X=IBCNSP D FILE^DICN K DIC S IBCDFN=+Y,IBNEW=1 I +Y<1 G ADQ
"RTN","IBCNSM3",35,0)
 D BEFORE^IBCNSEVT
"RTN","IBCNSM3",36,0)
 ;
"RTN","IBCNSM3",37,0)
 ; -- Edit patient policy data
"RTN","IBCNSM3",38,0)
 D PAT^IBCNSEH,PATPOL^IBCNSM32(IBCDFN)
"RTN","IBCNSM3",39,0)
 ;
"RTN","IBCNSM3",40,0)
 ; -- edit PLAN data if hold key
"RTN","IBCNSM3",41,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) G ADQ
"RTN","IBCNSM3",42,0)
 I '$G(IBQUIT) D POL^IBCNSEH,EDPOL(IBCDFN)
"RTN","IBCNSM3",43,0)
 I '$G(IBNEW) D AI^IBCNSP1
"RTN","IBCNSM3",44,0)
 G ADQ
"RTN","IBCNSM3",45,0)
 ;
"RTN","IBCNSM3",46,0)
ADQ D COVERED^IBCNSM31(DFN,IBCOVP)
"RTN","IBCNSM3",47,0)
 I $G(IBCDFN)>0 D AFTER^IBCNSEVT,^IBCNSEVT
"RTN","IBCNSM3",48,0)
 I $G(IBCPOL)>0 D BLD^IBCNSM
"RTN","IBCNSM3",49,0)
 S VALMBCK="R"
"RTN","IBCNSM3",50,0)
 Q
"RTN","IBCNSM3",51,0)
 ;
"RTN","IBCNSM3",52,0)
EDPOL(IBCDFN) ; -- Edit GROUP PLAN specific info
"RTN","IBCNSM3",53,0)
 I '$G(IBCDFN) G EDPOLQ
"RTN","IBCNSM3",54,0)
 N DA,DR,DIE,DIC,IBAD,IBCPOL,IBDIF
"RTN","IBCNSM3",55,0)
 S IBCPOL=$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)
"RTN","IBCNSM3",56,0)
 L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G EDPOLQ
"RTN","IBCNSM3",57,0)
 I IBCPOL D
"RTN","IBCNSM3",58,0)
 .D SAVE^IBCNSP3(IBCPOL)
"RTN","IBCNSM3",59,0)
 .S DIE="^IBA(355.3,",DA=IBCPOL
"RTN","IBCNSM3",60,0)
 .;
"RTN","IBCNSM3",61,0)
 .S DR="S IBAD=$P($G(^IBA(355.3,DA,0)),U,2),Y=$S(IBAD=0:""@55"",IBAD="""":""@1"",1:""@25"");@1;.02;@25;.03;.04;@55;6.02;6.03;.09;"
"RTN","IBCNSM3",62,0)
 .S DR=DR_".15;S Y=$S($$CATOK^IBCEMRA($P(^(0),U,14)):""@60"",1:""@65"");@60;.14;@65;.16;I '$$FTFV^IBCNSU31(X) S Y=""@66"";.17;@66;.13;.05;.12;.06;.07;.08//YES;"
"RTN","IBCNSM3",63,0)
 .;
"RTN","IBCNSM3",64,0)
 .I $D(IBREG),'$G(IBNEWP) S DR="S IBAD=$P($G(^IBA(355.3,DA,0)),U,2),Y=$S(IBAD=0:""@55"",IBAD="""":""@1"",1:""@25"");@1;.02;@25;D 3^IBCNSM31;D 4^IBCNSM31;@55;6.02;6.03;.09;"
"RTN","IBCNSM3",65,0)
 .I $D(IBREG),'$G(IBNEWP) S DR=DR_".15;S Y=$S($$CATOK^IBCEMRA($P(^(0),U,14)):""@60"",1:""@65"");@60;.14;@65;.16;I '$$FTFV^IBCNSU31(X) S Y=""@66"";.17;@66;.13;.05;.12;.06;.07;.08//YES;"
"RTN","IBCNSM3",66,0)
 .;
"RTN","IBCNSM3",67,0)
 .D ^DIE
"RTN","IBCNSM3",68,0)
 .D COMP^IBCNSP3(IBCPOL)
"RTN","IBCNSM3",69,0)
 .I IBDIF D UPDATE^IBCNSP3(IBCPOL),UPDATPT^IBCNSP3(DFN,IBCDFN) I $$DUPPOL^IBCNSOK1(IBCPOL,1)
"RTN","IBCNSM3",70,0)
 L -^IBA(355.3,+IBCPOL)
"RTN","IBCNSM3",71,0)
EDPOLQ Q
"RTN","IBCNSM3",72,0)
 ;
"RTN","IBCNSM3",73,0)
OK ; -- ask okay
"RTN","IBCNSM3",74,0)
 S IBQUIT=0,DIR(0)="Y",DIR("A")="       ...OK",DIR("B")="YES" D ^DIR K DIR
"RTN","IBCNSM3",75,0)
 I $D(DIRUT) S IBQUIT=1
"RTN","IBCNSM3",76,0)
 S IBOK=Y
"RTN","IBCNSM3",77,0)
 Q
"RTN","IBCNSM3",78,0)
 ;
"RTN","IBCNSM3",79,0)
ADH ; -- show existing policies for help
"RTN","IBCNSM3",80,0)
 N DIR,DA,%A
"RTN","IBCNSM3",81,0)
 W !!,"The patient currently has the following Insurance Policies"
"RTN","IBCNSM3",82,0)
 D DISP^IBCNS
"RTN","IBCNSM3",83,0)
 Q
"RTN","IBCNSP0")
0^4^B33094001^B32537201
"RTN","IBCNSP0",1,0)
IBCNSP0 ;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY ;05-MAR-1993
"RTN","IBCNSP0",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,52,85,93,103,137,229,251,363,371,399**;21-MAR-94;Build 8
"RTN","IBCNSP0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSP0",4,0)
 ;
"RTN","IBCNSP0",5,0)
 ;
"RTN","IBCNSP0",6,0)
CONTACT ; -- Insurance Contact Information
"RTN","IBCNSP0",7,0)
 N OFFSET,START
"RTN","IBCNSP0",8,0)
 ;
"RTN","IBCNSP0",9,0)
 ; The start of this section is designed to start on the same line
"RTN","IBCNSP0",10,0)
 ; as the User Information section (see VER^IBCNSP01).
"RTN","IBCNSP0",11,0)
 ;
"RTN","IBCNSP0",12,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)-8
"RTN","IBCNSP0",13,0)
 S IB1ST("CONTACT")=START
"RTN","IBCNSP0",14,0)
 S OFFSET=42
"RTN","IBCNSP0",15,0)
 N IBTRC,IBTRCD,IBTCOD
"RTN","IBCNSP0",16,0)
 S IBTCOD=$O(^IBE(356.11,"ACODE",85,0))
"RTN","IBCNSP0",17,0)
 ;
"RTN","IBCNSP0",18,0)
 S IBTRC=0,IBTRCD=""
"RTN","IBCNSP0",19,0)
 F  S IBTRC=$O(^IBT(356.2,"D",DFN,IBTRC)) Q:'IBTRC  D
"RTN","IBCNSP0",20,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,1)),"^",5)'=IBCDFN  ; must be same policy
"RTN","IBCNSP0",21,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,0)),"^",4)'=IBTCOD  ; must be ins. ver. type
"RTN","IBCNSP0",22,0)
 .S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBCNSP0",23,0)
 ;
"RTN","IBCNSP0",24,0)
 D SET(START,OFFSET," Insurance Contact (last) ",IORVON,IORVOFF)
"RTN","IBCNSP0",25,0)
 D SET(START+1,OFFSET," Person Contacted: "_$$EXPAND^IBTRE(356.2,.06,$P(IBTRCD,"^",6)))
"RTN","IBCNSP0",26,0)
 D SET(START+2,OFFSET,"Method of Contact: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
"RTN","IBCNSP0",27,0)
 D SET(START+3,OFFSET,"  Contact's Phone: "_$$EXPAND^IBTRE(356.2,.07,$P(IBTRCD,"^",7)))
"RTN","IBCNSP0",28,0)
 D SET(START+4,OFFSET,"    Call Ref. No.: "_$$EXPAND^IBTRE(356.2,.09,$P(IBTRCD,"^",9)))
"RTN","IBCNSP0",29,0)
 D SET(START+5,OFFSET,"     Contact Date: "_$$EXPAND^IBTRE(356.2,.01,$P(IBTRCD,"^")))
"RTN","IBCNSP0",30,0)
 ; no blank lines here because the User Information section is on the
"RTN","IBCNSP0",31,0)
 ; left and it is bigger than this section
"RTN","IBCNSP0",32,0)
 Q
"RTN","IBCNSP0",33,0)
 ;
"RTN","IBCNSP0",34,0)
POLICY ; -- Policy Region
"RTN","IBCNSP0",35,0)
 ; -- if pointer to policy file exists get data from policy file
"RTN","IBCNSP0",36,0)
 N OFFSET,START,IBP,IBX,IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA
"RTN","IBCNSP0",37,0)
 S (IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA)=""
"RTN","IBCNSP0",38,0)
 S START=1,OFFSET=2
"RTN","IBCNSP0",39,0)
 D GPLAN(+IBCPOLD2)
"RTN","IBCNSP0",40,0)
 D SET(START,OFFSET," Plan Information ",IORVON,IORVOFF)
"RTN","IBCNSP0",41,0)
 D SET(START+1,OFFSET,"   Is Group Plan: "_$S($P(IBCPOLD,"^",2)=1:"YES",1:"NO"))
"RTN","IBCNSP0",42,0)
 D SET(START+2,OFFSET,"      Group Name: "_$P(IBCPOLD,"^",3))
"RTN","IBCNSP0",43,0)
 D SET(START+3,OFFSET,"    Group Number: "_$P(IBCPOLD,"^",4))
"RTN","IBCNSP0",44,0)
 D SET(START+4,OFFSET,"             BIN: "_$P(IBCPOLD2,"^",2)) ;;Daou/EEN
"RTN","IBCNSP0",45,0)
 D SET(START+5,OFFSET,"             PCN: "_$P(IBCPOLD2,"^",3)) ;;04/09/04
"RTN","IBCNSP0",46,0)
 D SET(START+6,OFFSET,"    Type of Plan: "_$E($P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^"),1,23))
"RTN","IBCNSP0",47,0)
 S IBX=7
"RTN","IBCNSP0",48,0)
 I $P(IBCPOLD,U,14)]"" D
"RTN","IBCNSP0",49,0)
 . D SET(START+IBX,OFFSET,"   Plan Category: "_$$EXPAND^IBTRE(355.3,.14,$P(IBCPOLD,"^",14))) S IBX=IBX+1
"RTN","IBCNSP0",50,0)
 I $P(IBCPOLD,U,15)]"" D
"RTN","IBCNSP0",51,0)
 . D SET(START+IBX,OFFSET," Electronic Type: "_$$EXPAND^IBTRE(355.3,.15,$P(IBCPOLD,"^",15))) S IBX=IBX+1
"RTN","IBCNSP0",52,0)
 D SET(START+IBX,OFFSET,"  Plan Filing TF: "_$P(IBCPOLD,"^",13)_$S($P(IBCPOLD,U,16):" ("_$$FTFN^IBCNSU31(IBCPOL)_")",1:"")) S IBX=IBX+1
"RTN","IBCNSP0",53,0)
 ;
"RTN","IBCNSP0",54,0)
 D SET(START+IBX,OFFSET,"      ePharmacy Plan ID: "_IBPLNID) S IBX=IBX+1
"RTN","IBCNSP0",55,0)
 D SET(START+IBX,OFFSET,"    ePharmacy Plan Name: "_IBPLNNM) S IBX=IBX+1
"RTN","IBCNSP0",56,0)
 D SET(START+IBX,OFFSET,"  ePharmacy Natl Status: "_IBPLNNA) S IBX=IBX+1
"RTN","IBCNSP0",57,0)
 D SET(START+IBX,OFFSET," ePharmacy Local Status: "_IBPLNLA) S IBX=IBX+1
"RTN","IBCNSP0",58,0)
 ;
"RTN","IBCNSP0",59,0)
 ; -- in case pointer is missing
"RTN","IBCNSP0",60,0)
 I '$G(^IBA(355.3,+$P(IBCDFND,"^",18),0)) D
"RTN","IBCNSP0",61,0)
 .D SET(START+1,OFFSET,"Insurance Number: "_$P(IBCDFND,"^",2))
"RTN","IBCNSP0",62,0)
 .D SET(START+2,OFFSET,"      Group Name: "_$P(IBCDFND,"^",15))
"RTN","IBCNSP0",63,0)
 .D SET(START+3,OFFSET,"    Group Number: "_$P(IBCDFND,"^",3))
"RTN","IBCNSP0",64,0)
 .Q
"RTN","IBCNSP0",65,0)
 Q
"RTN","IBCNSP0",66,0)
 ;
"RTN","IBCNSP0",67,0)
INS ; -- Insurance Co. Region
"RTN","IBCNSP0",68,0)
 N OFFSET,START,IBADD,IBCDFNDA,IBCDFNDB
"RTN","IBCNSP0",69,0)
 S START=1,OFFSET=45
"RTN","IBCNSP0",70,0)
 D SET(START,OFFSET," Insurance Company ",IORVON,IORVOFF)
"RTN","IBCNSP0",71,0)
 D SET(START+1,OFFSET,"   Company: "_$P($G(^DIC(36,+IBCDFND,0)),"^"))
"RTN","IBCNSP0",72,0)
 S IBCDFNDA=$G(^DIC(36,+IBCDFND,.11)),IBCDFNDB=$G(^(.13))
"RTN","IBCNSP0",73,0)
 G:IBCDFNDA="" INSQ
"RTN","IBCNSP0",74,0)
 D SET(START+2,OFFSET,"    Street: "_$P(IBCDFNDA,"^")) S IBADD=1
"RTN","IBCNSP0",75,0)
 I $P(IBCDFNDA,"^",2)'="" D SET(START+3,OFFSET,"  Street 2: "_$P(IBCDFNDA,"^",2)) S IBADD=2
"RTN","IBCNSP0",76,0)
 I $P(IBCDFNDA,"^",3)'="" D SET(START+4,OFFSET,"  Street 3: "_$P(IBCDFNDA,"^",3)) S IBADD=3
"RTN","IBCNSP0",77,0)
 D SET(START+2+IBADD,OFFSET,"City/State: "_$E($P(IBCDFNDA,"^",4),1,15)_$S($P(IBCDFNDA,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFNDA,"^",5),0)),"^",2)_" "_$E($P(IBCDFNDA,"^",6),1,5))
"RTN","IBCNSP0",78,0)
 D SET(START+3+IBADD,OFFSET,"Billing Ph: "_$P(IBCDFNDB,"^",2))
"RTN","IBCNSP0",79,0)
 D SET(START+4+IBADD,OFFSET,"Precert Ph: "_$$PHONE^IBCNSC01(IBCDFNDB))
"RTN","IBCNSP0",80,0)
 ;
"RTN","IBCNSP0",81,0)
INSQ Q
"RTN","IBCNSP0",82,0)
 ;
"RTN","IBCNSP0",83,0)
SPON ; -- Sponsor (Insured Person) Region
"RTN","IBCNSP0",84,0)
 N IBC3,IBZIP,START,OFFSET,IBA,DA,DR,DIC,DIQ
"RTN","IBCNSP0",85,0)
 S IBC3=$G(^DPT(DFN,.312,IBCDFN,3))
"RTN","IBCNSP0",86,0)
 S DA=+$P(IBC3,"^",2),DR=.01,DIQ(0)="E",DIC="^DIC(23,",DIQ="IBA" D EN^DIQ1
"RTN","IBCNSP0",87,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=4
"RTN","IBCNSP0",88,0)
 D SET(START,OFFSET," Insured Person's Information (use Subscriber Update Action) ",IORVON,IORVOFF)
"RTN","IBCNSP0",89,0)
 D SET(START+1,OFFSET,"    Insured's DOB: "_$$DAT3^IBOUTL($P(IBC3,"^")))
"RTN","IBCNSP0",90,0)
 D SET(START+2,OFFSET,"    Insured's Sex: "_$$EXTERNAL^DILFD(2.312,3.12,,$P(IBC3,U,12)))
"RTN","IBCNSP0",91,0)
 D SET(START+3,OFFSET," Insured's Branch: "_$G(IBA(23,DA,.01,"E")))
"RTN","IBCNSP0",92,0)
 D SET(START+4,OFFSET,"   Insured's Rank: "_$P(IBC3,"^",3))
"RTN","IBCNSP0",93,0)
 ;
"RTN","IBCNSP0",94,0)
 S OFFSET=43
"RTN","IBCNSP0",95,0)
 S Y=$P(IBC3,"^",10) D ZIPOUT^VAFADDR S IBZIP=Y
"RTN","IBCNSP0",96,0)
 D SET(START+1,OFFSET," Str 1: "_$P(IBC3,"^",6))
"RTN","IBCNSP0",97,0)
 D SET(START+2,OFFSET," Str 2: "_$P(IBC3,"^",7))
"RTN","IBCNSP0",98,0)
 D SET(START+3,OFFSET,"  City: "_$P(IBC3,"^",8))
"RTN","IBCNSP0",99,0)
 D SET(START+4,OFFSET,"St/Zip: "_$P($G(^DIC(5,+$P(IBC3,"^",9),0)),"^",2)_"  "_IBZIP)
"RTN","IBCNSP0",100,0)
 D SET(START+5,OFFSET," Phone: "_$P(IBC3,"^",11))
"RTN","IBCNSP0",101,0)
 ;
"RTN","IBCNSP0",102,0)
 ; blank lines at end of section
"RTN","IBCNSP0",103,0)
 D SET(START+6,2," ")
"RTN","IBCNSP0",104,0)
 D SET(START+7,2," ")
"RTN","IBCNSP0",105,0)
 Q
"RTN","IBCNSP0",106,0)
 ;
"RTN","IBCNSP0",107,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSP0",108,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSP0",109,0)
 Q
"RTN","IBCNSP0",110,0)
 ;
"RTN","IBCNSP0",111,0)
SET(LINE,COL,TEXT,ON,OFF) ; -- set display info in array
"RTN","IBCNSP0",112,0)
 D:'$D(@VALMAR@(LINE,0)) BLANK(.LINE)
"RTN","IBCNSP0",113,0)
 D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
"RTN","IBCNSP0",114,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBCNSP0",115,0)
 W:'(LINE#5) "."
"RTN","IBCNSP0",116,0)
 Q
"RTN","IBCNSP0",117,0)
 ;
"RTN","IBCNSP0",118,0)
GPLAN(IBPLDA) ; get data from PLAN file (#366.03) related to the
"RTN","IBCNSP0",119,0)
 ; GROUP INSURANCE PLAN file (#355.3) and the INSURANCE COMPANY file (#36)
"RTN","IBCNSP0",120,0)
 ; that is associated with the PATIENT
"RTN","IBCNSP0",121,0)
 ; input - IBPLDA - ien of the PLAN file (#366.03)
"RTN","IBCNSP0",122,0)
 N IBPLN0,IBAIEN,IBAPIEN,IBAP0
"RTN","IBCNSP0",123,0)
 S IBPLN0=$G(^IBCNR(366.03,IBPLDA,0)) ;; Q:'$P(IBPLN0,"^",3) ;quit if payer not defined 
"RTN","IBCNSP0",124,0)
 S IBPLNID=$P(IBPLN0,"^"),IBPLNNM=$P(IBPLN0,"^",2)
"RTN","IBCNSP0",125,0)
 S IBAIEN=$O(^IBCNR(366.13,"B","E-PHARM","")) Q:'IBAIEN
"RTN","IBCNSP0",126,0)
 S IBAPIEN=$O(^IBCNR(366.03,IBPLDA,3,"B",IBAIEN,"")) Q:'IBAPIEN
"RTN","IBCNSP0",127,0)
 S IBAP0=$G(^IBCNR(366.03,IBPLDA,3,IBAPIEN,0))
"RTN","IBCNSP0",128,0)
 S IBPLNNA=$S($P(IBAP0,"^",2)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",129,0)
 S IBPLNLA=$S($P(IBAP0,"^",3)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",130,0)
 Q
"RTN","IBCNSP0",131,0)
 ;
"RTN","IBCNSP0",132,0)
 ;IBCNSP0
"RTN","IBCNSP11")
0^5^B11695386^B11397293
"RTN","IBCNSP11",1,0)
IBCNSP11 ;ALB/AAS - INSURANCE MANAGEMENT - EDIT PLAN ;23-JAN-95
"RTN","IBCNSP11",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,85,103,137,251,399**;21-MAR-94;Build 8
"RTN","IBCNSP11",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSP11",4,0)
 ;
"RTN","IBCNSP11",5,0)
PI ; -- edit plan information from policy edit
"RTN","IBCNSP11",6,0)
 D FULL^VALM1
"RTN","IBCNSP11",7,0)
 N IBCDFN,IBCPOL
"RTN","IBCNSP11",8,0)
 S IBCDFN=$P($G(IBPPOL),"^",4)
"RTN","IBCNSP11",9,0)
 ;
"RTN","IBCNSP11",10,0)
 ; - build a plan on the fly if there is not one present
"RTN","IBCNSP11",11,0)
 S IBCPOL=$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)
"RTN","IBCNSP11",12,0)
 I IBCPOL="" S IBCPOL=$$CHIP^IBCNSU($G(^DPT(DFN,.312,IBCDFN,0))) I IBCPOL D  ;Stuff in file
"RTN","IBCNSP11",13,0)
 .S DIE="^DPT("_DFN_",.312,",DR=".18////"_IBCPOL
"RTN","IBCNSP11",14,0)
 .S DA=IBCDFN,DA(1)=DFN
"RTN","IBCNSP11",15,0)
 .D ^DIE
"RTN","IBCNSP11",16,0)
 .K DA,DR,DIE,DIC
"RTN","IBCNSP11",17,0)
 .Q
"RTN","IBCNSP11",18,0)
 D PIEDIT(IBCPOL,DFN,IBCDFN)
"RTN","IBCNSP11",19,0)
 Q
"RTN","IBCNSP11",20,0)
 ;
"RTN","IBCNSP11",21,0)
PI1 ; -- edit plan information from plan edit
"RTN","IBCNSP11",22,0)
 D FULL^VALM1
"RTN","IBCNSP11",23,0)
 D PIEDIT(IBCPOL,"","")
"RTN","IBCNSP11",24,0)
 Q
"RTN","IBCNSP11",25,0)
 ;
"RTN","IBCNSP11",26,0)
PIEDIT(IBCPOL,IBDFN,IBCDFN) ;Entrypoint if already have the plan (IBCPOL)
"RTN","IBCNSP11",27,0)
 ; -- Edit the plan specific info
"RTN","IBCNSP11",28,0)
 ; The following parameters are only used when editing plan via the patient policy
"RTN","IBCNSP11",29,0)
 ; IBDFN = DFN of patient
"RTN","IBCNSP11",30,0)
 ; IBCDFN = entry # of multiple for policy in .312 nodes of ^DPT
"RTN","IBCNSP11",31,0)
 N DIRUT,DTOUT,DUOUT,DIROUT,IBDIF,DA,DR,DIC,DIE,IBCPOLD,IBGRP,IBTL,IBCNSEH,IBSUB
"RTN","IBCNSP11",32,0)
 D SAVE^IBCNSP3(IBCPOL)
"RTN","IBCNSP11",33,0)
 L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G PIQ
"RTN","IBCNSP11",34,0)
 S IBCNSEH=$S($G(IBDFN):+$G(^IBE(350.9,1,4)),1:0) D POL^IBCNSEH
"RTN","IBCNSP11",35,0)
 S IBCPOLD=$G(^IBA(355.3,IBCPOL,0)),IBGRP=$P(IBCPOLD,"^",2)
"RTN","IBCNSP11",36,0)
 I $P(IBCPOLD,"^",11) W !?2,*7,"Please note that this plan is inactive!",!
"RTN","IBCNSP11",37,0)
 W !,"This plan is currently defined as a",$S(IBGRP:" Group",1:"n Individual")," Plan."
"RTN","IBCNSP11",38,0)
 S IBSUB=$$SUBS^IBCNSJ(+$G(^IBA(355.3,IBCPOL,0)),IBCPOL,0,"",1)
"RTN","IBCNSP11",39,0)
 I 'IBGRP,IBSUB>1 W !!,"This Individual Plan has more than one subscriber!" G CHG
"RTN","IBCNSP11",40,0)
 I IBGRP,IBSUB>1 W !!,"There is more than one subscriber to this Group Plan.  The plan cannot",!,"be changed to an individual plan.",! G PIC
"RTN","IBCNSP11",41,0)
 ;
"RTN","IBCNSP11",42,0)
 ; - switch the plan to group/individual
"RTN","IBCNSP11",43,0)
 S DIR("A")="Do you wish to change this plan to a"_$S(IBGRP:"n Individual",1:" Group")_" Plan"
"RTN","IBCNSP11",44,0)
 S DIR(0)="Y",DIR("?")="Enter 'YES' to change this plan, or enter 'NO' to leave it as is."
"RTN","IBCNSP11",45,0)
 D ^DIR K DIR I $D(DIRUT) G PIQ1
"RTN","IBCNSP11",46,0)
 I 'Y W !,"No change was made.",! G PIC
"RTN","IBCNSP11",47,0)
 ;
"RTN","IBCNSP11",48,0)
CHG ; - change the plan type
"RTN","IBCNSP11",49,0)
 W !,"Changing the plan to a",$S(IBGRP:"n Individual",1:" Group")," Plan... "
"RTN","IBCNSP11",50,0)
 S DIE="^IBA(355.3,",DA=IBCPOL,DR=".02////"_$S(IBGRP:0,1:1)_";.1////"_$S(IBGRP&$G(IBDFN):IBDFN,1:"@")
"RTN","IBCNSP11",51,0)
 D ^DIE K DIE,DA,DR W "done.",!
"RTN","IBCNSP11",52,0)
 ;
"RTN","IBCNSP11",53,0)
PIC ; - edit name/number/type
"RTN","IBCNSP11",54,0)
 S IBTL=$S($P($G(^IBA(355.3,IBCPOL,0)),"^",2):"GROUP",1:"INDIVIDUAL")_" PLAN"
"RTN","IBCNSP11",55,0)
 S DIE="^IBA(355.3,",DA=IBCPOL
"RTN","IBCNSP11",56,0)
 ;
"RTN","IBCNSP11",57,0)
 S DR=".03"_IBTL_" NAME;.04"_IBTL_" NUMBER;6.02;6.03;.09;.15;S Y=$S($$CATOK^IBCEMRA($P(^IBA(355.3,IBCPOL,0),U,14)):""@1"",1:""@10"");@1;.14;@10;.16;I '$$FTFV^IBCNSU31(X) S Y=""@13"";.17;@13;.13"
"RTN","IBCNSP11",58,0)
 ;
"RTN","IBCNSP11",59,0)
 D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSP11",60,0)
 D COMP^IBCNSP3(IBCPOL)
"RTN","IBCNSP11",61,0)
 I IBDIF D UPDATE^IBCNSP3(IBCPOL) D:$G(IBDFN) UPDATPT^IBCNSP3(IBDFN,IBCDFN),BLD^IBCNSP D:'$G(IBDFN) INIT^IBCNSC4
"RTN","IBCNSP11",62,0)
PIQ1 L -^IBA(355.3,+IBCPOL)
"RTN","IBCNSP11",63,0)
PIQ S VALMBCK="R"
"RTN","IBCNSP11",64,0)
 Q
"RTN","IBCNSU31")
0^6^B8416261^n/a
"RTN","IBCNSU31",1,0)
IBCNSU31 ;ALB/ARH - INSURANCE UTILITY FILING TIME FRAME ; 09-FEB-09
"RTN","IBCNSU31",2,0)
 ;;2.0;INTEGRATED BILLING;**399**;21-MAR-94;Build 8
"RTN","IBCNSU31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSU31",4,0)
 ;
"RTN","IBCNSU31",5,0)
PTFTF(DFN,IBSDT) ; Patient Filing Time Frame: check if service date is within the Filing Time Frame of the patients insurance
"RTN","IBCNSU31",6,0)
 ; returns true if the date of service is within the FTF of any of the patients active policies
"RTN","IBCNSU31",7,0)
 ; medicare is included because some secondaries allow their FTF from the MRA submission rather than DOS
"RTN","IBCNSU31",8,0)
 N IBDD,IBPOL,IBPLN,IBCOV S IBCOV=0 G:'$G(DFN) PTFTFQ  S IBSDT=$G(IBSDT)\1 I IBSDT'?7N S IBSDT=DT
"RTN","IBCNSU31",9,0)
 D ALL^IBCNS1(DFN,"IBDD",4,IBSDT) ; all active insurance policies and medicare
"RTN","IBCNSU31",10,0)
 ;
"RTN","IBCNSU31",11,0)
 S IBPOL=0 F  S IBPOL=$O(IBDD(IBPOL)) Q:'IBPOL  D  Q:IBCOV
"RTN","IBCNSU31",12,0)
 . S IBPLN=+$P($G(IBDD(IBPOL,0)),U,18) Q:'IBPLN
"RTN","IBCNSU31",13,0)
 . I +$$PLFTF(IBPLN,IBSDT) S IBCOV=1
"RTN","IBCNSU31",14,0)
 ;
"RTN","IBCNSU31",15,0)
PTFTFQ Q IBCOV
"RTN","IBCNSU31",16,0)
 ;
"RTN","IBCNSU31",17,0)
PLFTF(IBPLN,IBSDT,IBINS) ; Plan/Company Filing Time Frame: check if service date is within Plan or Company Filing Time Frame and Today
"RTN","IBCNSU31",18,0)
 ; if both the plan and company have a FTF then plan FTF has precedence and is used
"RTN","IBCNSU31",19,0)
 ; IBPLN - pointer to plan (355.3), will check both the plan and company FTF
"RTN","IBCNSU31",20,0)
 ; IBSDT - date of service to determine if FTF has expired, ie. FTF plus the service date is before today
"RTN","IBCNSU31",21,0)
 ; IBINS - optional, if passed only used if there is no plan company
"RTN","IBCNSU31",22,0)
 ; returns COV ^ DATE where COV is true if the date is covered, DATE of FTF applied, if any
"RTN","IBCNSU31",23,0)
 ;
"RTN","IBCNSU31",24,0)
 N IBPLN0,IBINS0,IBFDT,IBX,IBCOV S IBFDT="",IBCOV=1
"RTN","IBCNSU31",25,0)
 S IBPLN0=$G(^IBA(355.3,+$G(IBPLN),0)) I +IBPLN0 S IBINS=+IBPLN0
"RTN","IBCNSU31",26,0)
 S IBINS0=$G(^DIC(36,+$G(IBINS),0)) S IBSDT=$G(IBSDT)\1 I IBSDT'?7N S IBSDT=DT
"RTN","IBCNSU31",27,0)
 ;
"RTN","IBCNSU31",28,0)
 I +$P(IBINS0,U,18) S IBX=$$FTF(+$P(IBINS0,U,18),+$P(IBINS0,U,19),IBSDT) S IBFDT=IBX
"RTN","IBCNSU31",29,0)
 I +$P(IBPLN0,U,16) S IBX=$$FTF(+$P(IBPLN0,U,16),+$P(IBPLN0,U,17),IBSDT) S IBFDT=IBX
"RTN","IBCNSU31",30,0)
 ; 
"RTN","IBCNSU31",31,0)
 I +IBFDT S IBCOV="1^"_IBFDT I DT>IBFDT S IBCOV="0^"_IBFDT
"RTN","IBCNSU31",32,0)
 ;
"RTN","IBCNSU31",33,0)
 Q IBCOV
"RTN","IBCNSU31",34,0)
 ;
"RTN","IBCNSU31",35,0)
FTF(IBFTF,IBVAL,IBSDT) ; Filing Time Frame: return date at end of Filing Time Frame from Service Date OR null if none/not known
"RTN","IBCNSU31",36,0)
 ; IBFTF - pointer to standard FTF in 355.13
"RTN","IBCNSU31",37,0)
 ; IBVAL - value associated with the FTF
"RTN","IBCNSU31",38,0)
 ; IBSDT - service date
"RTN","IBCNSU31",39,0)
 N IBX,IBYR,IBFYR,IBEND S IBFTF=+$G(IBFTF),IBVAL=+$G(IBVAL),IBSDT=$G(IBSDT)\1 I IBSDT'?7N S IBSDT=DT
"RTN","IBCNSU31",40,0)
 S IBFYR=$E(IBSDT,1,3)+1,IBEND="" I 'IBVAL,+$$FTFV(IBFTF) S IBFTF=0
"RTN","IBCNSU31",41,0)
 ;
"RTN","IBCNSU31",42,0)
 I IBFTF=1 S IBX=IBVAL,IBEND=$$FMADD^XLFDT(IBSDT,IBX)
"RTN","IBCNSU31",43,0)
 I IBFTF=2 S IBX=IBVAL*30,IBEND=$$FMADD^XLFDT(IBSDT,IBX)
"RTN","IBCNSU31",44,0)
 I IBFTF=3 S IBX=IBVAL*365,IBEND=$$FMADD^XLFDT(IBSDT,IBX)
"RTN","IBCNSU31",45,0)
 I IBFTF=4 S IBX=IBVAL+365,IBEND=$$FMADD^XLFDT(IBSDT,IBX)
"RTN","IBCNSU31",46,0)
 I IBFTF=5 S IBX=IBVAL,IBYR=IBFYR_"0101",IBEND=$$FMADD^XLFDT(IBYR,IBX)
"RTN","IBCNSU31",47,0)
 I IBFTF=6 S IBX=IBVAL*30,IBYR=IBFYR_"0101",IBEND=$$FMADD^XLFDT(IBYR,IBX)
"RTN","IBCNSU31",48,0)
 I IBFTF=7 S IBYR=IBFYR_"1231",IBEND=IBYR
"RTN","IBCNSU31",49,0)
 ;
"RTN","IBCNSU31",50,0)
 Q IBEND
"RTN","IBCNSU31",51,0)
 ;
"RTN","IBCNSU31",52,0)
FTFN(IBPLN,IBINS) ; Plan/Company Filing Time Frame Name: return plan or companies standard filing time frame for display
"RTN","IBCNSU31",53,0)
 N IBX,IBFTF,IBVAL,IBFTFN S (IBFTFN,IBFTF)=""
"RTN","IBCNSU31",54,0)
 I +$G(IBINS) S IBX=$G(^DIC(36,+IBINS,0)) I +$P(IBX,U,18) S IBFTF=+$P(IBX,U,18),IBVAL=+$P(IBX,U,19)
"RTN","IBCNSU31",55,0)
 I +$G(IBPLN) S IBX=$G(^IBA(355.3,+IBPLN,0)) I +$P(IBX,U,16) S IBFTF=+$P(IBX,U,16),IBVAL=+$P(IBX,U,17)
"RTN","IBCNSU31",56,0)
 ;
"RTN","IBCNSU31",57,0)
 I +IBFTF S IBFTF=$G(^IBE(355.13,+IBFTF,0)) S IBFTFN=$S(+$P(IBFTF,U,2):IBVAL_" ",1:"")_$P(IBFTF,U,1)
"RTN","IBCNSU31",58,0)
 Q IBFTFN
"RTN","IBCNSU31",59,0)
 ;
"RTN","IBCNSU31",60,0)
FTFV(IBFTF) ; return true if a Standard Filing Time Frame requires a Value
"RTN","IBCNSU31",61,0)
 Q +$P($G(^IBE(355.13,+$G(IBFTF),0)),U,2)
"RTN","IBCNSUR2")
0^24^B18995204^B18290866
"RTN","IBCNSUR2",1,0)
IBCNSUR2 ;ALB/CPM/CMS - MOVE SUBSCRIBERS TO DIFFERENT PLAN (CON'T) ; 09-SEP-96
"RTN","IBCNSUR2",2,0)
 ;;2.0;INTEGRATED BILLING;**103,238,399**;21-MAR-94;Build 8
"RTN","IBCNSUR2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSUR2",4,0)
 Q
"RTN","IBCNSUR2",5,0)
 ;
"RTN","IBCNSUR2",6,0)
PL ; Display old plan attributes; allow new plan to be edited
"RTN","IBCNSUR2",7,0)
 N IBP0,DA
"RTN","IBCNSUR2",8,0)
 W @IOF,!!,"Now you may edit specific Plan attributes and Coverage Limitations."
"RTN","IBCNSUR2",9,0)
 W !,"(Plan 1 is the plan subscribers moved from.)"
"RTN","IBCNSUR2",10,0)
 W !,"(Plan 2 is the plan subscribers moved to.)"
"RTN","IBCNSUR2",11,0)
 W !,$TR($J("",71)," ","=")
"RTN","IBCNSUR2",12,0)
 W !,"'Plan 1' Attributes for: ",IBC1N
"RTN","IBCNSUR2",13,0)
 S IBP0=$G(^IBA(355.3,IBP1,0)),DA=+IBP1
"RTN","IBCNSUR2",14,0)
 W !?9,"Plan Name: ",IBP1N,?43,"Plan Number: ",IBP1X
"RTN","IBCNSUR2",15,0)
 W !,$TR($J("",71)," ","-")
"RTN","IBCNSUR2",16,0)
 W !,?19,"TYPE OF PLAN:  ",$S($P(IBP0,"^",9):$P($G(^IBE(355.1,+$P(IBP0,"^",9),0)),"^"),1:"<Not Specified")
"RTN","IBCNSUR2",17,0)
 W !,?11,"ELECTRONIC PLAN TYPE:  ",$$EXPAND^IBTRE(355.3,.15,$P(IBP0,U,15)) ; TJH *238
"RTN","IBCNSUR2",18,0)
 I $P(IBP0,U,14)]"" W !,?18,"PLAN CATEGORY:  ",$$EXPAND^IBTRE(355.3,.14,$P(IBP0,U,14))
"RTN","IBCNSUR2",19,0)
 W !,?9,"PLAN FILING TIME FRAME:  ",$P(IBP0,U,13) I +$P(IBP0,U,16) W "  (",$$FTFN^IBCNSU31(IBP1),")"
"RTN","IBCNSUR2",20,0)
 W !," IS UTILIZATION REVIEW REQUIRED:  ",$$YN($P(IBP0,"^",5))
"RTN","IBCNSUR2",21,0)
 W !,"  AMBULATORY CARE CERTIFICATION:  ",$$EXPAND^IBTRE(355.3,.12,$P(IBP0,U,12))
"RTN","IBCNSUR2",22,0)
 W !,"  IS PRE-CERTIFICATION REQUIRED:  ",$$YN($P(IBP0,"^",6))
"RTN","IBCNSUR2",23,0)
 W !,"EXCLUDE PRE-EXISTING CONDITIONS:  ",$$YN($P(IBP0,"^",7))
"RTN","IBCNSUR2",24,0)
 W !?12,"BENEFITS ASSIGNABLE:  ",$$YN($P(IBP0,"^",8))
"RTN","IBCNSUR2",25,0)
 W !,$TR($J("",71)," ","=")
"RTN","IBCNSUR2",26,0)
 ;
"RTN","IBCNSUR2",27,0)
 W !!,"Editing 'Plan 2' Attributes for: ",IBC2N
"RTN","IBCNSUR2",28,0)
 S IBP0=$G(^IBA(355.3,IBP2,0))
"RTN","IBCNSUR2",29,0)
 W !?9,"Plan Name: ",IBP2N,?43,"Plan Number: ",IBP2X,!
"RTN","IBCNSUR2",30,0)
 ;
"RTN","IBCNSUR2",31,0)
 S DIE="^IBA(355.3,",DA=IBP2
"RTN","IBCNSUR2",32,0)
 S DR=".09;.15;I $P($G(^IBE(355.1,+$P($G(^IBA(355.3,DA,0)),U,9),0)),U,3)'=5 S Y=""@10"";.14;@10;.16;I '$$FTFV^IBCNSU31(X) S Y=""@13"";.17;@13;.13;.05;.12;.06:.08"
"RTN","IBCNSUR2",33,0)
 D ^DIE K DA,DIE,DR
"RTN","IBCNSUR2",34,0)
 ;
"RTN","IBCNSUR2",35,0)
 Q
"RTN","IBCNSUR2",36,0)
 ;
"RTN","IBCNSUR2",37,0)
 ;
"RTN","IBCNSUR2",38,0)
YN(X) ; Resolve the 'Yes/No' value.
"RTN","IBCNSUR2",39,0)
 Q $S($G(X)="":"<Not Specified>",X:"YES",X=0:"NO",1:"<Not Specified>")
"RTN","IBCNSUR2",40,0)
 ;
"RTN","IBCNSUR2",41,0)
 ;
"RTN","IBCNSUR2",42,0)
LIM ; Display/Edit Coverage Limitations.
"RTN","IBCNSUR2",43,0)
 W @IOF,!,$TR($J("",71)," ","=")
"RTN","IBCNSUR2",44,0)
 D LIMDSP(IBC1,IBP1,1)
"RTN","IBCNSUR2",45,0)
 W !,$TR($J("",71)," ","-")
"RTN","IBCNSUR2",46,0)
 D LIMDSP(IBC2,IBP2,2)
"RTN","IBCNSUR2",47,0)
 W !,$TR($J("",71)," ","=")
"RTN","IBCNSUR2",48,0)
 ;
"RTN","IBCNSUR2",49,0)
 ; - does the user wish to edit the plan coverage limitations?
"RTN","IBCNSUR2",50,0)
 S DIR(0)="Y",DIR("A")="Do you wish to edit the 'Plan 2' Coverage Limitations"
"RTN","IBCNSUR2",51,0)
 S DIR("?")="If you wish to edit the coverage limitations for the new plan, enter 'Yes.'"
"RTN","IBCNSUR2",52,0)
 D ^DIR K DIR,DIRUT,DIROUT,DUOUT,DTOUT I 'Y G LIMQ
"RTN","IBCNSUR2",53,0)
 ;
"RTN","IBCNSUR2",54,0)
 ; - allow the edit of coverage limitations for plan 2
"RTN","IBCNSUR2",55,0)
 W !!,"Editing 'Plan 2' Coverage Limitations for: ",IBC2N
"RTN","IBCNSUR2",56,0)
 S IBX=$G(^IBA(355.3,IBP2,0))
"RTN","IBCNSUR2",57,0)
 W !?9,"Plan Name: ",IBP2N,?43,"Plan Number: ",IBP2X
"RTN","IBCNSUR2",58,0)
 ;
"RTN","IBCNSUR2",59,0)
 S IBCPOL=IBP2 D EDCOV^IBCNSJ51 K VALMBCK
"RTN","IBCNSUR2",60,0)
 ; The call below is to clean up List Man variables from IBCNSJ51
"RTN","IBCNSUR2",61,0)
 ; the call to FULL^VALM sets variables. Or modify IBCNSJ51
"RTN","IBCNSUR2",62,0)
 S IBROU="IBCNSJ51",IBTOP="T" D EN^VALM(IBROU,IBTOP) K IBROU,IBTOP
"RTN","IBCNSUR2",63,0)
 ;
"RTN","IBCNSUR2",64,0)
LIMQ Q
"RTN","IBCNSUR2",65,0)
 ;
"RTN","IBCNSUR2",66,0)
 ;
"RTN","IBCNSUR2",67,0)
LIMDSP(IBC,IBP,IBPNUM) ; Display coverage limitations for a company/plan.
"RTN","IBCNSUR2",68,0)
 N IBCOV,IBCOVD,IBCOVFN,IBCNT,IBP0,IBLEDT,IBLIM,IBLINE,IBX,IB0,IBS
"RTN","IBCNSUR2",69,0)
 W !!," 'Plan ",IBPNUM,"' Coverage Limitations for ",$S(IBPNUM=1:IBC1N,1:IBC2N)
"RTN","IBCNSUR2",70,0)
 S IBP0=$G(^IBA(355.3,IBP,0))
"RTN","IBCNSUR2",71,0)
 W !?9,"Plan Name: ",$S($P(IBP0,U,3)]"":$P(IBP0,U,3),1:"<Not Specified>")
"RTN","IBCNSUR2",72,0)
 W ?43,"Plan Number: ",$S($P(IBP0,U,4)]"":$P(IBP0,U,4),1:"<Not Specified>")
"RTN","IBCNSUR2",73,0)
 W !!,"  Coverage            Effective Date   Covered?       Limit Comments"
"RTN","IBCNSUR2",74,0)
 W !,"  --------            --------------   --------       --------------"
"RTN","IBCNSUR2",75,0)
 ;
"RTN","IBCNSUR2",76,0)
 ; - display limitation for each type of coverage
"RTN","IBCNSUR2",77,0)
 S IBLIM=0 F  S IBLIM=$O(^IBE(355.31,IBLIM)) Q:'IBLIM  S IBCOV=$P($G(^(IBLIM,0)),U) D
"RTN","IBCNSUR2",78,0)
 .S IBCNT=0
"RTN","IBCNSUR2",79,0)
 .S IBLEDT="" F  S IBLEDT=$O(^IBA(355.32,"APCD",IBP,IBLIM,IBLEDT)) Q:$S(IBLEDT="":IBCNT,1:0)  D  Q:IBLEDT=""
"RTN","IBCNSUR2",80,0)
 ..S IBCOVFN=+$O(^IBA(355.32,"APCD",IBP,IBLIM,+IBLEDT,"")),IBCOVD=$G(^IBA(355.32,+IBCOVFN,0))
"RTN","IBCNSUR2",81,0)
 ..S IBCNT=IBCNT+1
"RTN","IBCNSUR2",82,0)
 ..I IBCOVD="" S IBW="  "_$E(IBCOV_$J("",18),1,18)_$J("",19)_"BY DEFAULT" W !,IBW Q
"RTN","IBCNSUR2",83,0)
 ..S IBX="  "_$E($S(IBCNT=1:IBCOV,1:"")_$J("",18),1,18) ;Don't dup category
"RTN","IBCNSUR2",84,0)
 ..S IBX=IBX_"  "_$E($$DAT1^IBOUTL($P(IBLEDT,"-",2))_$J("",8),1,8)_$J("",9)_$S($P(IBCOVD,U,4):$S($P(IBCOVD,U,4)<2:"YES"_$J("",8),$P(IBCOVD,U,4)=2:"CONDITIONAL",1:"UNKNOWN    "),1:"NO"_$J("",9))_$J("",4)
"RTN","IBCNSUR2",85,0)
 ..W !,IBX
"RTN","IBCNSUR2",86,0)
 ..S (IBS,IB0)=0 F  S IB0=$O(^IBA(355.32,IBCOVFN,2,IB0)) Q:'IB0  W:IBS ! W ?54,$G(^(IB0,0)) S IBS=1
"RTN","IBCNSUR2",87,0)
 ;
"RTN","IBCNSUR2",88,0)
 Q
"RTN","IBCRBG2")
0^7^B7812503^B7401317
"RTN","IBCRBG2",1,0)
IBCRBG2 ;ALB/ARH - RATES: BILL SOURCE EVENTS (INPT CONT) ; 01-OCT-03
"RTN","IBCRBG2",2,0)
 ;;2.0;INTEGRATED BILLING;**245,175,332,364,399**;21-MAR-94;Build 8
"RTN","IBCRBG2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRBG2",4,0)
 ;
"RTN","IBCRBG2",5,0)
INPTRSET(IBIFN,CS) ; reset Inpatient data due to bedsection Tort 03 and Other Type of Care RC v2.0
"RTN","IBCRBG2",6,0)
 ; (based on INPTPTF since that deals with timeframe and end of bill)
"RTN","IBCRBG2",7,0)
 N IBRC S IBRC=1 I +$G(CS),$E($G(^IBE(363.1,+CS,0)),1,2)'="RC" S IBRC=0
"RTN","IBCRBG2",8,0)
 ;
"RTN","IBCRBG2",9,0)
 D INPTBS(IBIFN,IBRC)
"RTN","IBCRBG2",10,0)
 D INPTOTH(IBIFN,IBRC)
"RTN","IBCRBG2",11,0)
 Q
"RTN","IBCRBG2",12,0)
 ;
"RTN","IBCRBG2",13,0)
INPTBS(IBIFN,RC) ; with output from INPTPTF^IBCRBG, reset bedsections due to changes with Tort 03 and RC
"RTN","IBCRBG2",14,0)
 ; - Some Specialties are changed to PRRTP bedsection (beginning with Tort 03)
"RTN","IBCRBG2",15,0)
 ; - Some Specialties are changed to ICU bedsection for RC only (beginning with RC v2.0)
"RTN","IBCRBG2",16,0)
 ; - Nursing Home Care and Observation bedsections are not billable with RC DRG (per diem) so remove DRG
"RTN","IBCRBG2",17,0)
 ; (based on INPTPTF since that deals with timeframe and end of bill)
"RTN","IBCRBG2",18,0)
 ;
"RTN","IBCRBG2",19,0)
 N IBDT,IBLN,IBSPCLTY,IBNLN,IBNBS,IBNDRG,IBCGTY
"RTN","IBCRBG2",20,0)
 ;
"RTN","IBCRBG2",21,0)
 S IBDT=0 F  S IBDT=$O(^TMP($J,"IBCRC-INDT",IBDT)) Q:'IBDT  D
"RTN","IBCRBG2",22,0)
 . S IBLN=$G(^TMP($J,"IBCRC-INDT",IBDT)) Q:'IBLN
"RTN","IBCRBG2",23,0)
 . S IBSPCLTY=$P(IBLN,U,6) Q:'IBSPCLTY
"RTN","IBCRBG2",24,0)
 . ;
"RTN","IBCRBG2",25,0)
 . S IBNLN=IBLN
"RTN","IBCRBG2",26,0)
 . S IBNBS=$$BSUPD(IBSPCLTY,IBDT,+$G(RC)) I +IBNBS S $P(IBNLN,U,2)=+IBNBS
"RTN","IBCRBG2",27,0)
 . S IBNDRG=$$NODRG(IBSPCLTY) I +IBNDRG S $P(IBNLN,U,4)=""
"RTN","IBCRBG2",28,0)
 . I 'IBNBS,'IBNDRG Q
"RTN","IBCRBG2",29,0)
 . S ^TMP($J,"IBCRC-INDT",IBDT)=IBNLN
"RTN","IBCRBG2",30,0)
 Q
"RTN","IBCRBG2",31,0)
 ; 
"RTN","IBCRBG2",32,0)
INPTOTH(IBIFN,RC) ; with output from INPTPTF^IBCRBG, reset Other type of care and Tort 03 changes
"RTN","IBCRBG2",33,0)
 ; - If type of care is Other then bedsection is replaced and DRG deleted (began with RC v2.0)
"RTN","IBCRBG2",34,0)
 ; (based on INPTPTF since that deals with timeframe and end of bill)
"RTN","IBCRBG2",35,0)
 ;
"RTN","IBCRBG2",36,0)
 N IBOT,IBOTLN,IBBS,IBDT1,IBDT2,IBDT,IBLN,IBNLN Q:'$G(RC)
"RTN","IBCRBG2",37,0)
 I +$G(IBIFN) S IBOT=0 F  S IBOT=$O(^DGCR(399,IBIFN,"OT",IBOT)) Q:'IBOT  D
"RTN","IBCRBG2",38,0)
 . S IBOTLN=$G(^DGCR(399,IBIFN,"OT",IBOT,0)) Q:'IBOTLN
"RTN","IBCRBG2",39,0)
 . S IBDT1=+$P(IBOTLN,U,2) Q:'IBDT1  S IBDT2=+$P(IBOTLN,U,3) Q:'IBDT2
"RTN","IBCRBG2",40,0)
 . I (IBDT1\1)=(IBDT2\1) S IBDT2=IBDT2+.3 ; allow for 1 day SNF stay
"RTN","IBCRBG2",41,0)
 . S IBBS=+IBOTLN Q:'IBOTLN
"RTN","IBCRBG2",42,0)
 . ;
"RTN","IBCRBG2",43,0)
 . S IBDT=IBDT1-.1 F  S IBDT=$O(^TMP($J,"IBCRC-INDT",IBDT)) Q:('IBDT)!(IBDT'<IBDT2)  D
"RTN","IBCRBG2",44,0)
 .. S IBLN=$G(^TMP($J,"IBCRC-INDT",IBDT)) Q:'IBLN
"RTN","IBCRBG2",45,0)
 .. I IBDT<$$RC20 Q
"RTN","IBCRBG2",46,0)
 .. ;
"RTN","IBCRBG2",47,0)
 .. S IBNLN=IBLN
"RTN","IBCRBG2",48,0)
 .. S $P(IBNLN,U,2)=+IBBS,$P(IBNLN,U,4)=""
"RTN","IBCRBG2",49,0)
 .. S ^TMP($J,"IBCRC-INDT",IBDT)=IBNLN
"RTN","IBCRBG2",50,0)
 Q
"RTN","IBCRBG2",51,0)
 ;
"RTN","IBCRBG2",52,0)
 ;
"RTN","IBCRBG2",53,0)
BSUPD(SPCLTY,DATE,RC) ; return updated bedsection name for specialty passed in (42.4 ifn)
"RTN","IBCRBG2",54,0)
 ; beginning with TORT 2003 some specialties were moved to new PRRTP bedsection
"RTN","IBCRBG2",55,0)
 ; beginning with RC v2.0 some specialties were moved to a new ICU bedsection, only applies to RC charges
"RTN","IBCRBG2",56,0)
 N IBX,IBY,IBZ S (IBZ,IBX)="",SPCLTY=","_+$G(SPCLTY)_",",DATE=$S(+$G(DATE):(DATE\1),1:DT)
"RTN","IBCRBG2",57,0)
 I DATE'<$$TORT03,",25,26,27,28,29,38,39,"[SPCLTY S IBX="PRRTP"
"RTN","IBCRBG2",58,0)
 I +$G(RC),DATE'<$$RC20,",12,13,16,17,63,"[SPCLTY S IBX="ICU"
"RTN","IBCRBG2",59,0)
 I IBX'="" S IBY=$O(^DGCR(399.1,"B",IBX,0)) I +IBY S IBZ=IBY_U_IBX
"RTN","IBCRBG2",60,0)
 Q IBZ
"RTN","IBCRBG2",61,0)
 ;
"RTN","IBCRBG2",62,0)
TORT03() ; return effective date of TORT 2003, date when PRRTP bedsection specialties changed
"RTN","IBCRBG2",63,0)
 Q 3040107
"RTN","IBCRBG2",64,0)
 ;
"RTN","IBCRBG2",65,0)
RC20() ; return effective date of RC v2.0, date when ICU bedsection specialties changed
"RTN","IBCRBG2",66,0)
 Q 3031219
"RTN","IBCRBG2",67,0)
 ;
"RTN","IBCRBG2",68,0)
NODRG(SPCLTY) ; return specialty ifn followed by bedsection name if the specialty should not be charged a DRG charge
"RTN","IBCRBG2",69,0)
 N IBX,IBS S IBX=0,IBS=","_+$G(SPCLTY)_","
"RTN","IBCRBG2",70,0)
 I ",80,81,96,42,43,44,45,46,64,66,67,68,69,95,100,101,102,"[IBS S IBX=+SPCLTY_"^Nursing Home Care"
"RTN","IBCRBG2",71,0)
 I ",18,23,24,36,41,65,94,"[IBS S IBX=+SPCLTY_"^Observation"
"RTN","IBCRBG2",72,0)
 Q IBX
"RTN","IBCRU6")
0^8^B11770100^B8897462
"RTN","IBCRU6",1,0)
IBCRU6 ;ALB/ARH - RATES: UTILITIES (SPECIAL GROUPS); 10-OCT-1998
"RTN","IBCRU6",2,0)
 ;;2.0;INTEGRATED BILLING;**106,138,399**;21-MAR-94;Build 8
"RTN","IBCRU6",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRU6",4,0)
 ;
"RTN","IBCRU6",5,0)
CSSG(CS,BR,TYPE,ARR) ; search for special group(s) of TYPE this CS belongs, returns IFN of first group found TYPE
"RTN","IBCRU6",6,0)
 ; outputs ARR(order)=group ifn ^ groups 0 node, if passed by reference
"RTN","IBCRU6",7,0)
 N IBBR,IBSGFN,IBSG0,IBSGFN1,IBSG10,IBORDER,IBFND,ARR1 K ARR,ARR1 S IBFND=""
"RTN","IBCRU6",8,0)
 S IBBR=$G(BR) I 'IBBR S IBBR=+$P($G(^IBE(363.1,+$G(CS),0)),U,2) I 'IBBR G CSSGQ
"RTN","IBCRU6",9,0)
 ;
"RTN","IBCRU6",10,0)
 I +IBBR S IBSGFN=0 F  S IBSGFN=$O(^IBE(363.32,IBSGFN)) Q:'IBSGFN  D
"RTN","IBCRU6",11,0)
 . S IBSG0=$G(^IBE(363.32,IBSGFN,0)) I +$G(TYPE),+$P(IBSG0,U,2)'=TYPE Q
"RTN","IBCRU6",12,0)
 . S IBSGFN1=0 F  S IBSGFN1=$O(^IBE(363.32,IBSGFN,11,"B",IBBR,IBSGFN1)) Q:'IBSGFN1  D
"RTN","IBCRU6",13,0)
 .. S IBSG10=$G(^IBE(363.32,IBSGFN,11,IBSGFN1,0)) I +$P(IBSG10,U,2),+$G(CS)'=+$P(IBSG10,U,2) Q
"RTN","IBCRU6",14,0)
 .. S IBORDER=+$P(IBSG10,U,3) I +IBORDER,+$G(ARR(IBORDER)) S IBORDER=$O(ARR((IBORDER+1)),-1)+.01
"RTN","IBCRU6",15,0)
 .. I 'IBORDER S IBORDER=1000 I +$G(ARR(IBORDER)) S IBORDER=$O(ARR(99999),-1)+1
"RTN","IBCRU6",16,0)
 .. I '$G(ARR1(+IBSGFN)) S ARR(IBORDER)=IBSGFN_U_IBSG0,ARR1(+IBSGFN)=1
"RTN","IBCRU6",17,0)
 S IBORDER=$O(ARR(0)) I +IBORDER S IBFND=+ARR(IBORDER)
"RTN","IBCRU6",18,0)
CSSGQ Q IBFND
"RTN","IBCRU6",19,0)
 ;
"RTN","IBCRU6",20,0)
RVLNK(ITM,BR,CS,ARR) ; return the ifn^revenue code for a particular ITEM as defined by the Billing Rates Revenue Code links
"RTN","IBCRU6",21,0)
 N IBBR,IBORDER,IBSGFN,IBRV,IBRVD,IBALL,SGARR S IBALL=+$G(ARR),IBRVD="" I '$G(ITM) G RVLNKQ
"RTN","IBCRU6",22,0)
 S IBBR=$G(BR) I 'IBBR S IBBR=$P($G(^IBE(363.1,+$G(CS),0)),U,2) I 'IBBR G RVLNKQ
"RTN","IBCRU6",23,0)
 I $P($G(^IBE(363.3,+IBBR,0)),U,4)'=2 G RVLNKQ
"RTN","IBCRU6",24,0)
 ;
"RTN","IBCRU6",25,0)
 I +$$CSSG(+$G(CS),IBBR,1,.SGARR) S IBORDER=0 F  S IBORDER=$O(SGARR(IBORDER)) Q:'IBORDER  D  I +IBRVD,'IBALL Q
"RTN","IBCRU6",26,0)
 . S IBSGFN=+SGARR(IBORDER) I +IBSGFN S IBRV=$$GRVLNK(ITM,IBSGFN,.ARR) I +IBRV,'IBRVD S IBRVD=IBRV
"RTN","IBCRU6",27,0)
RVLNKQ Q IBRVD
"RTN","IBCRU6",28,0)
 ;
"RTN","IBCRU6",29,0)
GRVLNK(ITM,GRP,ARR) ; return the ifn^revenue code for a particular ITEM as defined in a single group
"RTN","IBCRU6",30,0)
 ; Output:  if ARR=1 on entry and passed by reference, then the array ARR will be defined on output
"RTN","IBCRU6",31,0)
 ;          ARR(IFN of Rv Cd link in 363.33) = IFN of Rv Cd link in 363.33 ^ revenue code
"RTN","IBCRU6",32,0)
 ;  (since ranges and specific individual ITEMs can be defined, one ITEM may be set up for more than one revenue
"RTN","IBCRU6",33,0)
 ;   code, the one used on the bills will be the return value, any others will be in the array)
"RTN","IBCRU6",34,0)
 ;
"RTN","IBCRU6",35,0)
 N IBALL,IBRVD,IBXRF,IBRV,IBEND,IBX,IBY,IBC,IBC1,IBC2
"RTN","IBCRU6",36,0)
 S IBALL=+$G(ARR),IBRVD="",GRP=+$G(GRP),ITM=+$G(ITM) I 'ITM!'GRP G GRVLNKQ
"RTN","IBCRU6",37,0)
 ;
"RTN","IBCRU6",38,0)
 S IBXRF="AGP",IBX=$O(^IBE(363.33,IBXRF,GRP,+ITM,0))
"RTN","IBCRU6",39,0)
 I +IBX S IBRV=+IBX_U_+$G(^IBE(363.33,+IBX,0)),ARR(+IBX)=IBRV,IBRVD=IBRV I 'IBALL G GRVLNKQ
"RTN","IBCRU6",40,0)
 ;
"RTN","IBCRU6",41,0)
 I ITM<100000 S IBXRF="AGPE" D  G GRVLNKQ
"RTN","IBCRU6",42,0)
 . S IBEND=ITM-.1 F  S IBEND=$O(^IBE(363.33,IBXRF,GRP,+IBEND)) Q:'IBEND  D  I +IBRVD,'IBALL Q
"RTN","IBCRU6",43,0)
 .. S IBX=0 F  S IBX=$O(^IBE(363.33,IBXRF,GRP,+IBEND,IBX)) Q:'IBX  D  I +IBRVD,'IBALL Q
"RTN","IBCRU6",44,0)
 ... S IBY=$G(^IBE(363.33,IBX,0))
"RTN","IBCRU6",45,0)
 ... I +$P(IBY,U,3),$P(IBY,U,3)'>ITM S IBRV=+IBX_U_+IBY,ARR(+IBX)=IBRV I 'IBRVD S IBRVD=IBRV
"RTN","IBCRU6",46,0)
 ;
"RTN","IBCRU6",47,0)
 I ITM>99999 S IBXRF="AGPE",IBC=$$CODEC^ICPTCOD(ITM) D  G GRVLNKQ
"RTN","IBCRU6",48,0)
 . S IBEND=99999 F  S IBEND=$O(^IBE(363.33,IBXRF,GRP,+IBEND)) Q:'IBEND  D  I +IBRVD,'IBALL Q
"RTN","IBCRU6",49,0)
 .. S IBX=0 F  S IBX=$O(^IBE(363.33,IBXRF,GRP,+IBEND,IBX)) Q:'IBX  D  I +IBRVD,'IBALL Q
"RTN","IBCRU6",50,0)
 ... S IBY=$G(^IBE(363.33,IBX,0))
"RTN","IBCRU6",51,0)
 ... S IBC1=$$CODEC^ICPTCOD(+$P(IBY,U,3)),IBC2=IBC1 I +$P(IBY,U,4) S IBC2=$$CODEC^ICPTCOD(+$P(IBY,U,4))
"RTN","IBCRU6",52,0)
 ... I IBC]IBC1,IBC']IBC2 S IBRV=+IBX_U_+IBY,ARR(+IBX)=IBRV I 'IBRVD S IBRVD=IBRV
"RTN","IBCRU6",53,0)
 ;
"RTN","IBCRU6",54,0)
GRVLNKQ Q IBRVD
"RTN","IBCRU6",55,0)
 ;
"RTN","IBCRU6",56,0)
PRVTYP(PRV,IBDT) ; find the provider type/discount group of a provider on a given date
"RTN","IBCRU6",57,0)
 ; returns prv type ifn (363.34) ^ provider person class ifn ^ provider type ^ special group ^ percent
"RTN","IBCRU6",58,0)
 N IBPC,IBPDIFN,IBPD0,IBPT S IBPT="",IBDT=$G(IBDT) I 'IBDT S IBDT=DT
"RTN","IBCRU6",59,0)
 I +$G(PRV) S IBPC=$$GET^XUA4A72(PRV,IBDT)
"RTN","IBCRU6",60,0)
 I +$G(IBPC)>0 S IBPDIFN=$O(^IBE(363.34,"D",+IBPC,0)) I +IBPDIFN D
"RTN","IBCRU6",61,0)
 . S IBPD0=$G(^IBE(363.34,+IBPDIFN,0))
"RTN","IBCRU6",62,0)
 . S IBPT=+IBPDIFN_U_+IBPC_U_IBPD0
"RTN","IBCRU6",63,0)
 Q IBPT
"RTN","IBCU3")
0^9^B26112094^B25333825
"RTN","IBCU3",1,0)
IBCU3 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ; 4/4/03 8:49am
"RTN","IBCU3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,211,245,348,399**;21-MAR-94;Build 8
"RTN","IBCU3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU3",4,0)
 ;
"RTN","IBCU3",5,0)
 ;MAP TO DGCRU3
"RTN","IBCU3",6,0)
SC(DFN) ; returns 1 if service connection indicated, 0 otherwise (based on VAEL(3))
"RTN","IBCU3",7,0)
 N X,VAEL,VAERR S X=0
"RTN","IBCU3",8,0)
 I +$G(DFN) D ELIG^VADPT S X=+$G(VAEL(3))
"RTN","IBCU3",9,0)
 Q X
"RTN","IBCU3",10,0)
 ;
"RTN","IBCU3",11,0)
APPT(DATE,DFN,DISP) ;Check date to see if patient has any visit data
"RTN","IBCU3",12,0)
 ;input:   DATE - required, date to check for appointments
"RTN","IBCU3",13,0)
 ;         DFN  - required, patient to check for appointments on date
"RTN","IBCU3",14,0)
 ;         DISP - if true then error message will be printed before exit, if any
"RTN","IBCU3",15,0)
 ;returns: 1 - if appt visit found
"RTN","IBCU3",16,0)
 ;         2 - if unscheduled add/edit clinic stop entry found
"RTN","IBCU3",17,0)
 ;         3 - if only disposition found
"RTN","IBCU3",18,0)
 ;         "0^error message" if no valid visit data/disposition found
"RTN","IBCU3",19,0)
 ;
"RTN","IBCU3",20,0)
 N Y,X,X1,X2 S DATE=$P(DATE,".",1),Y="0^* Patient has no Visits for this date..."
"RTN","IBCU3",21,0)
 I 'DATE!'$D(^DPT(DFN,0)) S Y="0^Unable to check for appointments on this date!" G APPTE
"RTN","IBCU3",22,0)
 N IBVAL,IBCBK,IBVTYP
"RTN","IBCU3",23,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DATE,IBVAL("EDT")=DATE+.9
"RTN","IBCU3",24,0)
 S IBCBK="I '$P(Y0,U,6) S IBVTYP=+$P(Y0,U,8) I $S(IBVTYP=2:1,IBVTYP=1:$$APPTCT^IBEFUNC(Y0),IBVTYP=3:$$DISCT^IBEFUNC(Y,Y0),1:0) S IBVTYP(IBVTYP)="""" S:$D(IBVTYP(1)) SDSTOP=1"
"RTN","IBCU3",25,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCU3",26,0)
 S IBVTYP=$O(IBVTYP(0))
"RTN","IBCU3",27,0)
 S:IBVTYP Y=IBVTYP
"RTN","IBCU3",28,0)
 ;
"RTN","IBCU3",29,0)
APPTE I +$G(DISP),'Y W !,?10,*7,$P(Y,U,2)
"RTN","IBCU3",30,0)
 Q Y
"RTN","IBCU3",31,0)
 ;
"RTN","IBCU3",32,0)
BDT(DFN,DATE) ; returns primary bill defined for an event date, "" if none
"RTN","IBCU3",33,0)
 N X,Y S X="" I '$O(^DGCR(399,"C",+$G(DFN),0))!'$G(DATE) G BDTE
"RTN","IBCU3",34,0)
 S Y="",DATE=9999999-DATE F  S Y=$O(^DGCR(399,"APDT",+DFN,Y)) Q:'Y  D
"RTN","IBCU3",35,0)
 . I $O(^DGCR(399,"APDT",+DFN,Y,0))=DATE,'$P($G(^DGCR(399,Y,"S")),U,16) S X=$P($G(^DGCR(399,Y,0)),U,17) Q
"RTN","IBCU3",36,0)
BDTE Q X
"RTN","IBCU3",37,0)
 ;
"RTN","IBCU3",38,0)
BILLED(PTF) ;returns bill "IFN^^rate group" if PTF record is already associated with an uncancelled final bill
"RTN","IBCU3",39,0)
 ;returns "bill IFN ^ bill date (stm to) ^ bill rate group" if inpatients interim with no final bill, 0 otherwise
"RTN","IBCU3",40,0)
 N IFN,Y,X S Y=0 I '$D(^DGCR(399,"APTF",+$G(PTF))) G BILLEDQ
"RTN","IBCU3",41,0)
 S IFN=0 F  S IFN=$O(^DGCR(399,"APTF",PTF,IFN)) Q:'IFN  D  I +Y,'$P(Y,U,2) Q
"RTN","IBCU3",42,0)
 . S X=$G(^DGCR(399,IFN,0)) I $P(X,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",43,0)
 . S Y=IFN_"^^"_$P(X,U,7) I $P(X,U,6)=2!($P(X,U,6)=3) S Y=IFN_"^"_$P($G(^DGCR(399,IFN,"U")),U,2)_"^"_$P(X,U,7)
"RTN","IBCU3",44,0)
BILLEDQ Q Y
"RTN","IBCU3",45,0)
 ;
"RTN","IBCU3",46,0)
FTN(FT) ;returns name of the form type passed in, "" if not defined
"RTN","IBCU3",47,0)
 N X S X=$P($G(^IBE(353,+$G(FT),0)),U,1)
"RTN","IBCU3",48,0)
 Q X
"RTN","IBCU3",49,0)
 ;
"RTN","IBCU3",50,0)
FT(IFN,IBRESET) ;return the correct form type for a bill (trigger code in 399 to set .19)
"RTN","IBCU3",51,0)
 ; if IBRESET is not a positive value ('IBRESET), returns the bills current form type (if defined)
"RTN","IBCU3",52,0)
 ; if IBRESET is a positive value (+IBRESET), interpret form type according to following rules (for triggers):
"RTN","IBCU3",53,0)
 ;    first use ins co default (36,.14), then bill is inst (UB) or prof (1500) (399,.27),
"RTN","IBCU3",54,0)
 ;    then current (399,.19), then UB
"RTN","IBCU3",55,0)
 N X,Y,FTC,FTN,FTI,FTT,INS S X="",IFN=+$G(IFN),Y=$G(^DGCR(399,IFN,0))
"RTN","IBCU3",56,0)
 S FTC=$P(Y,U,19) I FTC=1 S FTC=3
"RTN","IBCU3",57,0)
 I '$G(IBRESET),+FTC S X=FTC G FTQ
"RTN","IBCU3",58,0)
 S FTT=$S($P(Y,U,27)=1:3,$P(Y,U,27)=2:2,1:"")
"RTN","IBCU3",59,0)
 S INS=+$G(^DGCR(399,IFN,"MP"))
"RTN","IBCU3",60,0)
 I 'INS,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IFN)) S INS=+$$CURR^IBCEF2(IFN)
"RTN","IBCU3",61,0)
 S FTI=$P($G(^DIC(36,+INS,0)),U,14)
"RTN","IBCU3",62,0)
 S X=$S(+FTI:FTI,+FTT:FTT,+FTC:FTC,1:3)
"RTN","IBCU3",63,0)
FTQ Q X
"RTN","IBCU3",64,0)
 ;
"RTN","IBCU3",65,0)
FNT(FTN) ;returns the ifn of the form type name passed in, must be exact match, 0 if none found
"RTN","IBCU3",66,0)
 N X,Y S X=0 I $G(FTN)'="" S X=$O(^IBE(353,"B",FTN,0))
"RTN","IBCU3",67,0)
 Q X
"RTN","IBCU3",68,0)
 ;
"RTN","IBCU3",69,0)
BILLDEV(IFN,PRT) ;returns the default device for a bill's form type, if PRT is passed as true then returns the AR follow up device, otherwise the billing device
"RTN","IBCU3",70,0)
 N X,Y S X=0 I $D(^DGCR(399,+$G(IFN),0)) S PRT=$S(+$G(PRT):3,1:2),Y=$$FT(IFN),X=$P($G(^IBE(353,+Y,0)),U,PRT)
"RTN","IBCU3",71,0)
 Q X
"RTN","IBCU3",72,0)
 ;
"RTN","IBCU3",73,0)
RXDUP(RX,DATE,IFN,DISP,DFN,RTG) ;returns bill ifn if rx # exists on another bill
"RTN","IBCU3",74,0)
 ;input:  rx # - required, rx # to check for
"RTN","IBCU3",75,0)
 ;        date - required, date of refill
"RTN","IBCU3",76,0)
 ;ifn, dfn, rtg are optional - if not passed then not used to specify rx
"RTN","IBCU3",77,0)
 ;(if ifn not passed then returns true if on any bill same or dfn and rtgetc.)
"RTN","IBCU3",78,0)
 ;if ifn passed the dfn and rtg do not need to be
"RTN","IBCU3",79,0)
 N X,LN,RIFN,BIFN,RLN,BLN S (RIFN,X)=0,DATE=$G(DATE),RX=$G(RX),IFN=$G(IFN) I RX=""!('DATE) G RXDUPE
"RTN","IBCU3",80,0)
 S LN=$G(^DGCR(399,+IFN,0)),DFN=$S(+$G(DFN):DFN,1:+$P(LN,U,2)),RTG=$S(+$G(RTG):RTG,1:+$P(LN,U,7))
"RTN","IBCU3",81,0)
 F  S RIFN=$O(^IBA(362.4,"B",RX,RIFN)) Q:'RIFN  S RLN=$G(^IBA(362.4,+RIFN,0)) I +DATE=+$P(RLN,U,3) D  Q:+X
"RTN","IBCU3",82,0)
 . S BIFN=+$P(RLN,U,2),BLN=$G(^DGCR(399,BIFN,0)) Q:(BLN="")!(BIFN=+$G(IFN))
"RTN","IBCU3",83,0)
 . I $P(BLN,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",84,0)
 . I +DFN,$P(BLN,U,2)'=DFN Q  ; different patient
"RTN","IBCU3",85,0)
 . I +RTG,+RTG'=$P(BLN,U,7) Q  ; different rate group
"RTN","IBCU3",86,0)
 . S X=BIFN_"^A "_$P($G(^DGCR(399.3,+$P(BLN,U,7),0)),U,1)_" bill ("_$P(BLN,U,1)_") exists for Rx # "_RX_" and refill date "_$$DAT1^IBOUTL(DATE)_"."
"RTN","IBCU3",87,0)
RXDUPE I +$G(DISP),+X W !,?10,$P(X,U,2)
"RTN","IBCU3",88,0)
 Q X
"RTN","IBCU3",89,0)
 ;
"RTN","IBCU3",90,0)
BCOB(IBIFN,IBCOB) ; returns an array of all bills related COB to the bill passed in
"RTN","IBCU3",91,0)
 ; includes prior bills defined on this bill then checks the Primary, Secondary and Tertiary Bills and adds
"RTN","IBCU3",92,0)
 ; all the prior bills defined on them
"RTN","IBCU3",93,0)
 ; ARR(BILL SEQUENCE (1,2,3), INSURANCE CO, BILL #)=""
"RTN","IBCU3",94,0)
 ;
"RTN","IBCU3",95,0)
 N IBM1,IBI,IBIFN1,IBM,IBM11,IBSEQ,IBSEQN,IBJ K IBCOB
"RTN","IBCU3",96,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCU3",97,0)
 F IBI=IBIFN,+$P(IBM1,U,5),+$P(IBM1,U,6),+$P(IBM1,U,7) I +IBI S IBIFN1=+IBI D
"RTN","IBCU3",98,0)
 . ;
"RTN","IBCU3",99,0)
 . S IBM=$G(^DGCR(399,IBIFN1,"M")),IBM11=$G(^DGCR(399,IBIFN1,"M1")) I IBIFN=IBIFN1,'$P(IBM,U,2),'$P(IBM,U,3) Q
"RTN","IBCU3",100,0)
 . S IBSEQ=$P($G(^DGCR(399,IBIFN1,0)),U,21),IBSEQN=$S(IBSEQ="P":1,IBSEQ="S":2,IBSEQ="T":3,1:"") Q:'IBSEQN
"RTN","IBCU3",101,0)
 . ;
"RTN","IBCU3",102,0)
 . F IBJ=1:1:3 I +$P(IBM,U,IBJ) S IBCOB(IBJ,+$P(IBM,U,IBJ),+$P(IBM11,U,(IBJ+4)))=""
"RTN","IBCU3",103,0)
 . I +$P(IBM,U,IBSEQN) S IBCOB(IBSEQN,$P(IBM,U,IBSEQN),+IBIFN1)=""
"RTN","IBCU3",104,0)
 ;
"RTN","IBCU3",105,0)
 S IBI=0 F  S IBI=$O(IBCOB(IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  I +$O(IBCOB(IBI,IBJ,0)) K IBCOB(IBI,IBJ,0)
"RTN","IBCU3",106,0)
 Q
"RTN","IBCU3",107,0)
 ;
"RTN","IBCU3",108,0)
BINS(IBIFN) ; return list of billable insurance carriers on a bill (COB)
"RTN","IBCU3",109,0)
 ; output:  sequence:carrier:policy ^ sequence:carrier:policy ^ sequence:carrier:policy
"RTN","IBCU3",110,0)
 N IBM0,IBI,IBS,IBC,IBP,IBX S IBI=0,IBX="",IBM0=$G(^DGCR(399,+$G(IBIFN),"M"))
"RTN","IBCU3",111,0)
 F IBS="P","S","T" S IBI=IBI+1,IBC=+$P(IBM0,U,IBI) I +IBC D
"RTN","IBCU3",112,0)
 . S IBP=+$P(IBM0,U,(11+IBI)) I $P($G(^DIC(36,+IBC,0)),U,2)'="N" S IBX=IBX_IBS_":"_IBC_":"_IBP_U
"RTN","IBCU3",113,0)
 Q IBX
"RTN","IBCU3",114,0)
 ;
"RTN","IBCU3",115,0)
BOTHER(IBIFN,IBDT) ; return Bedsection of Type of Care if date is Other Type of care, based on "OT" multiple
"RTN","IBCU3",116,0)
 ; Other care is not inpatient or outpatient, SNF and Sub-Acute became distinct with RC v2.0
"RTN","IBCU3",117,0)
 ; as with all other bedsection movements, the last date is not included since that is the date they left
"RTN","IBCU3",118,0)
 N IBX,IBY,IBFND S IBFND=0,IBDT=$G(IBDT)\1
"RTN","IBCU3",119,0)
 I +$G(IBIFN),+IBDT S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCU3",120,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCU3",121,0)
 . I IBDT'<$P(IBY,U,2),IBDT<$P(IBY,U,3) S IBFND=+IBY
"RTN","IBCU3",122,0)
 . I IBDT=($P(IBY,U,2)\1),IBDT=($P(IBY,U,3)\1) S IBFND=+IBY ; 1 day SNF stay
"RTN","IBCU3",123,0)
 Q IBFND
"RTN","IBCU4")
0^10^B20382256^B20355514
"RTN","IBCU4",1,0)
IBCU4 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ;12-FEB-90
"RTN","IBCU4",2,0)
 ;;2.0;INTEGRATED BILLING;**109,122,137,245,349,371,399**;21-MAR-94;Build 8
"RTN","IBCU4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU4",4,0)
 ;
"RTN","IBCU4",5,0)
 ;MAP TO DGCRU4
"RTN","IBCU4",6,0)
 ;
"RTN","IBCU4",7,0)
DDAT ;Input transform for Statement Covers From field
"RTN","IBCU4",8,0)
 I '$D(DA) G TO
"RTN","IBCU4",9,0)
 S IB00=+$P(^DGCR(399,+DA,0),"^",3) I +X<$P(IB00,".",1) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X G DDAT4
"RTN","IBCU4",10,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",11,0)
 D PROCDT
"RTN","IBCU4",12,0)
 I DGPRDTB,X>DGPRDTB K X W !?4,"Can't be greater than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",13,0)
 G DDAT4
"RTN","IBCU4",14,0)
DDAT1 ;Input transform for Statement covers to
"RTN","IBCU4",15,0)
 I '$D(DA) G FROM
"RTN","IBCU4",16,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):$P(^("U"),"^",1),1:"") I 'IB00 W !?4,"'Start Date' must be specified first!",*7 K X G DDAT4
"RTN","IBCU4",17,0)
 I +X>DT W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",18,0)
 I +X<IB00 W !?4,"Cannot preceed the 'Start Date'!",*7 K X G DDAT4
"RTN","IBCU4",19,0)
 ;I $S($E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",20,0)
 ;I $$FY(+IB00)'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",21,0)
 ;I $E(IB00,1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 G DDAT4
"RTN","IBCU4",22,0)
 D PROCDT
"RTN","IBCU4",23,0)
 I DGPRDTE,X<DGPRDTE K X W !?4,"Can't be less than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",24,0)
 G DDAT4
"RTN","IBCU4",25,0)
 ;
"RTN","IBCU4",26,0)
 ;DDAT2   ;Input transform for OP VISITS DATE(S) field  REPLACED WITH IBCU41 6/15/93
"RTN","IBCU4",27,0)
 ;S IB00=$G(^DGCR(399,IBIFN,"U")) I $P(IB00,"^",1)']"" W !?4,*7,"No 'Start Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",28,0)
 ;I $P(IB00,"^",2)']"" W !?4,*7,"No 'End Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",29,0)
 ;I X<$P(IB00,"^",1) W !?4,*7,"Can't enter a visit date prior to 'Start Date'..." K X G DDAT4
"RTN","IBCU4",30,0)
 ;I X>$P(IB00,"^",2) W !?4,*7,"Can't enter a visit date later than 'End Date'..." K X G DDAT4
"RTN","IBCU4",31,0)
 ;I $P(^DGCR(399,IBIFN,0),"^",19)'=2,$D(^DGCR(399,"ASC2",IBIFN)),$O(^DGCR(399,IBIFN,"OP",0)) W !?4,*7,"Only 1 visit date allowed on bills with Amb. Surg. Codes!" K X G DDAT4
"RTN","IBCU4",32,0)
 ;D APPT^IBCU3,DUPCHK^IBCU3
"RTN","IBCU4",33,0)
 G DDAT4
"RTN","IBCU4",34,0)
 ;
"RTN","IBCU4",35,0)
DDAT3 ; - x-ref call for to and from dates, REPLACED BY TRIGGERS ON .08, 151, 152 ON 10/18/93
"RTN","IBCU4",36,0)
 ;if inpatient bill return DGNEWLOS to cause recalc of los in IBSC6
"RTN","IBCU4",37,0)
 G DDAT4:'$D(X)
"RTN","IBCU4",38,0)
 I $D(^DGCR(399,DA,0)),$P(^(0),"^",5)<3 S DGNEWLOS=1
"RTN","IBCU4",39,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):^("U"),1:"") I IB00']"" K X G DDAT4
"RTN","IBCU4",40,0)
 S IB02=$S(+$E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1),IB01=$E(IB00,1)_IB02_"0930",$P(^DGCR(399,DA,"U1"),"^",9)=IB02 ;,$P(^DGCR(399,DA,"U1"),"^",11)=$S($P(IB00,"^",2)>IB01:IB02+1,1:"")
"RTN","IBCU4",41,0)
 ;I $P(^DGCR(399,DA,"U1"),"^",11)="" S $P(^("U1"),"^",12)=""
"RTN","IBCU4",42,0)
 ;
"RTN","IBCU4",43,0)
DDAT4 K IB00,IB01,IB02,IB03,DGX,DGNOAP,DGJ,DGPROC,DGPRDT,DGPRDTE,DGPRDTB Q
"RTN","IBCU4",44,0)
 ;
"RTN","IBCU4",45,0)
OTDAT ; Input transform for Other Care Start Date (399,48,.02)
"RTN","IBCU4",46,0)
 I ('$G(DA(1)))!('$G(X)) Q
"RTN","IBCU4",47,0)
 N IBX S IBX=$G(^DGCR(399,DA(1),"U"))
"RTN","IBCU4",48,0)
 I +X<+IBX W !,?4,"Can Not Precede Bill Start Date!",!,*7 K X Q
"RTN","IBCU4",49,0)
 I +X>(+$P(IBX,U,2)+1) W !,?4,"Can not be after Bill End Date!",!,*7 K X Q
"RTN","IBCU4",50,0)
 Q
"RTN","IBCU4",51,0)
 ;
"RTN","IBCU4",52,0)
CHDAT ; Input transform for chiropractics-related dates (399/245,246,247)
"RTN","IBCU4",53,0)
 ; Make sure that date entered is not after end date of the bill
"RTN","IBCU4",54,0)
 Q:'$D(X)
"RTN","IBCU4",55,0)
 N IBX,Y
"RTN","IBCU4",56,0)
 S IBX=$P($G(^DGCR(399,+DA,"U")),U,2)
"RTN","IBCU4",57,0)
 I IBX="" W !?4,*7,"No end date of the bill on file - can't enter chiropractics-related dates " K X Q
"RTN","IBCU4",58,0)
 I X>+IBX S Y=IBX D DD^%DT W !,?4,*7,"This date can not be after the end date of the claim ("_Y_") " K X Q
"RTN","IBCU4",59,0)
 Q
"RTN","IBCU4",60,0)
 ;
"RTN","IBCU4",61,0)
TO ;151 pseudo input x-form
"RTN","IBCU4",62,0)
 I +X_.9<IBIDS(.03) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X Q
"RTN","IBCU4",63,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X
"RTN","IBCU4",64,0)
 Q
"RTN","IBCU4",65,0)
FROM ;152 pseudo input x-form
"RTN","IBCU4",66,0)
 I '$D(IBIDS(151)) W !?4,"'Start Date' must be specified first!",*7 K X Q
"RTN","IBCU4",67,0)
 I +X<IBIDS(151) W !?4,"Cannot preceed the 'Start Date'!",*7 K X Q
"RTN","IBCU4",68,0)
 ;I $S($E(IBIDS(151),4,5)<10:$E(IBIDS(151),2,3),1:$E(IBIDS(151),2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",69,0)
 ;I $$FY(IBIDS(151))'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",70,0)
 ;I $E(IBIDS(151),1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 Q
"RTN","IBCU4",71,0)
 Q
"RTN","IBCU4",72,0)
 ;
"RTN","IBCU4",73,0)
FY(DATE) ; return a dates Fiscal Year
"RTN","IBCU4",74,0)
 N IBYR,IBFY S IBFY=""
"RTN","IBCU4",75,0)
 I $G(DATE)?7N.E S IBYR=$S($E(DATE,4,5)<10:$E(DATE,1,3),1:$E(DATE,1,3)+1),IBFY=$E(IBYR,2,3)
"RTN","IBCU4",76,0)
 Q IBFY
"RTN","IBCU4",77,0)
 ;
"RTN","IBCU4",78,0)
SPEC ;  - calculate discharge specialty
"RTN","IBCU4",79,0)
 ;  - input  IBids(.08) = ptf record number
"RTN","IBCU4",80,0)
 ;  - output IBids(161) = pointer to billing specialty in 399.1
"RTN","IBCU4",81,0)
 K IBIDS(161)
"RTN","IBCU4",82,0)
 Q:$S('$D(IBIDS(.08)):1,'$D(^DGPT(+IBIDS(.08),70)):1,'$P(^(70),"^",2):1,'$D(^DIC(42.4,+$P(^(70),"^",2),0)):1,1:0)  S IBIDS(161)=$P(^DGPT(IBIDS(.08),70),"^",2)
"RTN","IBCU4",83,0)
 S IBIDS(161)=$P($G(^DIC(42.4,+IBIDS(161),0)),"^",5) I IBIDS(161)="" K IBIDS(161) Q
"RTN","IBCU4",84,0)
 S IBIDS(161)=$O(^DGCR(399.1,"B",IBIDS(161),0))
"RTN","IBCU4",85,0)
 I '$D(^DGCR(399.1,+IBIDS(161),0)) K IBIDS(161)
"RTN","IBCU4",86,0)
 Q
"RTN","IBCU4",87,0)
 ;
"RTN","IBCU4",88,0)
PROCDT ;  - find first and last dates of procedures
"RTN","IBCU4",89,0)
 ;    can't set from and to date inside of this range
"RTN","IBCU4",90,0)
 S (DGPRDT,DGPROC,DGPRDTE,DGPRDTB)=0
"RTN","IBCU4",91,0)
 F  S DGPROC=$O(^DGCR(399,+DA,"CP",DGPROC)) Q:'DGPROC  S DGPRDT=$P($G(^DGCR(399,+DA,"CP",DGPROC,0)),"^",2) D
"RTN","IBCU4",92,0)
 . I DGPRDTB=0!(DGPRDTB>DGPRDT) S DGPRDTB=DGPRDT
"RTN","IBCU4",93,0)
 . I DGPRDTE=0!(DGPRDTE<DGPRDT) S DGPRDTE=DGPRDT
"RTN","IBCU4",94,0)
 . Q
"RTN","IBCU4",95,0)
 Q
"RTN","IBCU4",96,0)
 ;
"RTN","IBCU4",97,0)
TOBIN(Y,DA) ; Screen for UB-04 bill classification based on UB-04 location of care
"RTN","IBCU4",98,0)
 ; Y = internal value of code for field .25 (UB-04 BILL CLASSIFICATION)
"RTN","IBCU4",99,0)
 ; DA = bill ien in file 399
"RTN","IBCU4",100,0)
 N IB0
"RTN","IBCU4",101,0)
 S IB0=$P($G(^DGCR(399,DA,0)),U,24) ; Get UB-04 LOCATION OF CARE value
"RTN","IBCU4",102,0)
 Q $S('IB0:0,(","_$P($G(^DGCR(399.1,+Y,0)),U,24)_",")'[(","_IB0_","):0,1:1)
"RTN","IBCU4",103,0)
 ;
"RTN","IBCU4",104,0)
TRIG05(X,D0) ; Trigger executed on field .05 of file 399 to set field .25
"RTN","IBCU4",105,0)
 ; Find the correct entry in file 399.1 that corresponds to the value in .05
"RTN","IBCU4",106,0)
 ; X = value of field .05, location of care
"RTN","IBCU4",107,0)
 ; D0 = IEN of bill entry in file 399
"RTN","IBCU4",108,0)
 N Z,Z0,IEN,LOC
"RTN","IBCU4",109,0)
 S LOC=$P($G(^DGCR(399,D0,0)),U,4)
"RTN","IBCU4",110,0)
 S IEN="",Z=0
"RTN","IBCU4",111,0)
 I LOC'="" F  S Z=$O(^DGCR(399.1,"C",X,Z)) Q:'Z  S Z0=$P($G(^DGCR(399.1,Z,0)),U,23,24) I +Z0,(","_$P(Z0,U,2)_",")[(","_LOC_",") S IEN=Z Q
"RTN","IBCU4",112,0)
 Q IEN
"RTN","IBCU4",113,0)
 ;
"RTN","IBCU4",114,0)
TOB(IBIFN,POS) ;Function returns the 3 digit type of bill from UB-04
"RTN","IBCU4",115,0)
 ;  fields or the position (1-3) as determined by POS (optional)
"RTN","IBCU4",116,0)
 N Z
"RTN","IBCU4",117,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,24,26),Z=$P(Z,U)_$P($G(^DGCR(399.1,+$P(Z,U,2),0)),U,2)_$P(Z,U,3)
"RTN","IBCU4",118,0)
 Q $S('$G(POS):Z,1:$E(Z,+POS))
"RTN","IBCU4",119,0)
 ;
"RTN","IBJDB21")
0^11^B54088092^B47981210
"RTN","IBJDB21",1,0)
IBJDB21 ;ALB/RB - REASONS NOT BILLABLE REPORT (COMPILE) ;19-JUN-00
"RTN","IBJDB21",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,185,399**;21-MAR-94;Build 8
"RTN","IBJDB21",3,0)
 ;
"RTN","IBJDB21",4,0)
EN ; - Entry point from IBJDB2.
"RTN","IBJDB21",5,0)
 K ^TMP("IBJDB2",$J),IB,IBE,ENCTYP,EPIEN,IBADMDT,RELBILL
"RTN","IBJDB21",6,0)
 I '$G(IBXTRACT) D
"RTN","IBJDB21",7,0)
 . F X=1:1:4 I IBSEL[X S IBE(X)=IBEPS(X) ; Set episodes for report.
"RTN","IBJDB21",8,0)
 ;
"RTN","IBJDB21",9,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",10,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDB21",11,0)
 ;
"RTN","IBJDB21",12,0)
 ; - Compile reason not billable (RNB) data for episode.
"RTN","IBJDB21",13,0)
 S IBRNB=0 F  S IBRNB=$S(IBSRNB'="A":$O(IBSRNB(IBRNB)),1:$O(^IBE(356.8,IBRNB))) Q:'IBRNB  D
"RTN","IBJDB21",14,0)
 .S IB0=0 F  S IB0=$O(^IBT(356,"AR",IBRNB,IB0)) Q:'IB0  D
"RTN","IBJDB21",15,0)
 ..S IBN0=$G(^IBT(356,IB0,0)),IBN1=$G(^IBT(356,IB0,1)) Q:'IBN0!('IBN1)
"RTN","IBJDB21",16,0)
 ..S IBEP=+$P(IBN0,U,18) I IBSEL'[IBEP Q  ; Get episode.
"RTN","IBJDB21",17,0)
 ..S (IBRNB1,IBSORT1)=$P($G(^IBE(356.8,IBRNB,0)),U)
"RTN","IBJDB21",18,0)
 ..;
"RTN","IBJDB21",19,0)
 ..; - Get valid date entered/episode date and amount for report.
"RTN","IBJDB21",20,0)
 ..S IBEPD=+$P(IBN0,U,6)\1,IBDEN=+IBN1\1
"RTN","IBJDB21",21,0)
 ..S IBDT=$S($E(IBD)="D":IBDEN,1:IBEPD)
"RTN","IBJDB21",22,0)
 ..Q:IBDT<IBBDT!(IBDT>IBEDT)
"RTN","IBJDB21",23,0)
 ..S IBAMT=$$AMOUNT(IBEP,IB0)
"RTN","IBJDB21",24,0)
 ..;
"RTN","IBJDB21",25,0)
 ..; - Get division, if necessary.
"RTN","IBJDB21",26,0)
 ..I IBSD D  Q:'VAUTD&('$D(VAUTD(IBDIV)))
"RTN","IBJDB21",27,0)
 ...S IBDIV=$$DIV^IBJD1(IB0)
"RTN","IBJDB21",28,0)
 ..E  S IBDIV=$S($G(IBEXCEL):+$$PRIM^VASITE(),1:0)
"RTN","IBJDB21",29,0)
 ..;
"RTN","IBJDB21",30,0)
 ..; - Provider & Specialty
"RTN","IBJDB21",31,0)
 ..S (IBPRV,IBSPC)="",IBQT=0
"RTN","IBJDB21",32,0)
 ..I IBEP=1!(IBEP=2) D  I IBQT Q
"RTN","IBJDB21",33,0)
 ...S IBPRSP=$$PRVSPC(IBEP,IB0)
"RTN","IBJDB21",34,0)
 ...I IBSPRV'="A",'$D(IBSPRV(+IBPRSP)) S IBQT=1 Q
"RTN","IBJDB21",35,0)
 ...I IBEP=1,IBSISP'="A",'$D(IBSISP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",36,0)
 ...I IBEP=2,IBSOSP'="A",'$D(IBSOSP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",37,0)
 ...S IBPRV=$S($P(IBPRSP,U,2)'="":$P(IBPRSP,U,2),1:"** UNKNOWN **")
"RTN","IBJDB21",38,0)
 ...S IBSPC=$S($P(IBPRSP,U,4)'="":$P(IBPRSP,U,4),1:"** UNKNOWN **")
"RTN","IBJDB21",39,0)
 ..;
"RTN","IBJDB21",40,0)
 ..; - Get remaining data for detailed report.
"RTN","IBJDB21",41,0)
 ..S DFN=+$P(IBN0,U,2)
"RTN","IBJDB21",42,0)
 ..D DEM^VADPT S IBPT=$E(VADM(1),1,25),IBSSN=$P(VADM(2),U)
"RTN","IBJDB21",43,0)
 ..S DIC="^VA(200,",DA=+$P(IBN1,U,4),DR=".01",DIQ="IBCLK" D EN^DIQ1
"RTN","IBJDB21",44,0)
 ..S IBCLK=$E($G(IBCLK(200,DA,.01)),1,20)
"RTN","IBJDB21",45,0)
 ..I ($P(IBN0,U,18)=2)&($$EXTERNAL^DILFD(356,.19,"",$P(IBN0,U,19))["72 HOUR RULE") D
"RTN","IBJDB21",46,0)
 ...S IBADMDT=$$ADMDT^IBTUTL5(DFN,$P(IBN0,U,6))
"RTN","IBJDB21",47,0)
 ..E  S IBADMDT=""
"RTN","IBJDB21",48,0)
 ..S ENCTYP=$P(^IBE(356.6,$P(IBN0,U,18),0),U,3) S EPDT=$E($P(IBN0,U,6),1,7)
"RTN","IBJDB21",49,0)
 ..S EPIEN=$S(ENCTYP=3:$P(IBN0,U,8),ENCTYP=4:$P(IBN0,U,9),1:"")
"RTN","IBJDB21",50,0)
 ..S RELBILL=$$RELBIL^IBTUTL5(EPIEN,EPDT,DFN,ENCTYP)
"RTN","IBJDB21",51,0)
 ..;
"RTN","IBJDB21",52,0)
 ..; - Get totals for summary.
"RTN","IBJDB21",53,0)
 ..I '$D(IB(IBDIV,IBEP,IBRNB)) S IB(IBDIV,IBEP,IBRNB)="0^0"
"RTN","IBJDB21",54,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U)=$P(IB(IBDIV,IBEP,IBRNB),U)+1
"RTN","IBJDB21",55,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U,2)=$P(IB(IBDIV,IBEP,IBRNB),U,2)+IBAMT
"RTN","IBJDB21",56,0)
 ..I IBRPT="S" Q
"RTN","IBJDB21",57,0)
 ..;
"RTN","IBJDB21",58,0)
 ..S IBSORT1=$S(IBSORT="P":IBPRV,IBSORT="S":IBSPC,1:IBSORT1)
"RTN","IBJDB21",59,0)
 ..S:IBSORT1="" IBSORT1=" "
"RTN","IBJDB21",60,0)
 ..;
"RTN","IBJDB21",61,0)
 ..I $G(IBEXCEL) D  Q
"RTN","IBJDB21",62,0)
 ...W !,$E($P($G(^DG(40.8,IBDIV,0)),U),1,25),U
"RTN","IBJDB21",63,0)
 ...W $S(IBEP<4:$E(IBE(IBEP)),1:"H"),U,IBPT,U,$E(IBSSN,6,10),U
"RTN","IBJDB21",64,0)
 ...W $E($$INS^IBJD1(+$P(IBN0,U,2),IBEPD),1,25),U
"RTN","IBJDB21",65,0)
 ...W $$DT^IBJD(IBEPD,1),U,$$DT^IBJD(IBDEN,1),U
"RTN","IBJDB21",66,0)
 ...W $$DT^IBJD($P(IBN1,U,3),1),U,IBCLK,U,IBADMDT,U,$E(IBRNB1,1,25),U
"RTN","IBJDB21",67,0)
 ...W $E(IBPRV,1,25),U,$E(IBSPC,1,25),U,IBAMT,U
"RTN","IBJDB21",68,0)
 ...I RELBILL>0 F X=2:1:$P(RELBILL,";",1)+1 W $P(RELBILL,";",X)_" "
"RTN","IBJDB21",69,0)
 ...I RELBILL<0 W ""
"RTN","IBJDB21",70,0)
 ...W U,$P(IBN1,U,8)
"RTN","IBJDB21",71,0)
 ..;
"RTN","IBJDB21",72,0)
 ..S X=IBEPD_U_IBDEN_U_$P(IBN1,U,3)_U_IBCLK_U_IBRNB1
"RTN","IBJDB21",73,0)
 ..S X=X_U_IBPRV_U_IBSPC_U_IBAMT_U_$E($P(IBN1,U,8),1,50)_U_IBADMDT_U_RELBILL
"RTN","IBJDB21",74,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10))=$$INS^IBJD1(+$P(IBN0,U,2),IBEPD)
"RTN","IBJDB21",75,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10),+IBN0)=X
"RTN","IBJDB21",76,0)
 ;
"RTN","IBJDB21",77,0)
 I '$G(IBEXCEL) D EN^IBJDB22 ; Print report(s).
"RTN","IBJDB21",78,0)
 ;
"RTN","IBJDB21",79,0)
ENQ K ^TMP("IBJDB2")
"RTN","IBJDB21",80,0)
 K DA,DIC,DIQ,DR,IB,IB0,IBAMT,IBCLK,IBDEN,IBDIV,IBDT,IBE,IBEP,IBEPD,IBI
"RTN","IBJDB21",81,0)
 K IBN0,IBN1,IBN2,IBPRSP,IBPRV,IBPT,IBQT,IBRNB,IBRNB1,IBSORT1,IBSPC
"RTN","IBJDB21",82,0)
 K IBSSN,VADM,X1,X2
"RTN","IBJDB21",83,0)
 Q
"RTN","IBJDB21",84,0)
 ;
"RTN","IBJDB21",85,0)
AMOUNT(EPS,CLM) ; Return the Amount not billed 
"RTN","IBJDB21",86,0)
 ; Input: EPS - Episode(1=Inpatient,2=Outpatient,3=Prosthet.,4=Prescr.)
"RTN","IBJDB21",87,0)
 ;        CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",88,0)
 ;Output: AMOUNT not billed
"RTN","IBJDB21",89,0)
 ;
"RTN","IBJDB21",90,0)
 N ADM,ADMDT,AMOUNT,BLBS,BLDT,CPT,CPTLST,DA,DR,DCHD,DFN,DIC,DIQ,DIV,DRG
"RTN","IBJDB21",91,0)
 N IBRX,ENC,ENCDT,EPDT,PFT,PRST,PTF,RIMB,VCPT,TTCST,X
"RTN","IBJDB21",92,0)
 ;
"RTN","IBJDB21",93,0)
 S AMOUNT=0,X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",94,0)
 S ENC=+$P(X,U,4)     ; Encounter    (Pointer to #409.68)
"RTN","IBJDB21",95,0)
 S ADM=+$P(X,U,5)     ; Admission    (Pointer to #405)
"RTN","IBJDB21",96,0)
 S PRST=+$P(X,U,9)    ; Prothetics   (Pointer to #660)
"RTN","IBJDB21",97,0)
 S EPDT=$P(X,U,6)     ; Episode Date (FM format)
"RTN","IBJDB21",98,0)
 S IBRX=+$P(X,U,8)
"RTN","IBJDB21",99,0)
 ;
"RTN","IBJDB21",100,0)
 ; - Assumes REIMBURSABLE INS. as the RATE TYPE
"RTN","IBJDB21",101,0)
 S RIMB=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) I 'RIMB S RIMB=8
"RTN","IBJDB21",102,0)
 ;
"RTN","IBJDB21",103,0)
 G @("AMT"_EPS)
"RTN","IBJDB21",104,0)
 ;
"RTN","IBJDB21",105,0)
AMT1 ; - Inpatient Charges
"RTN","IBJDB21",106,0)
 I 'ADM G QAMT
"RTN","IBJDB21",107,0)
 S X=$G(^DGPM(ADM,0)) G QAMT:X="" S PTF=$P(X,U,16) G QAMT:'PTF
"RTN","IBJDB21",108,0)
 S ADMDT=$P(X,U)\1,DFN=+$P(X,U,3)
"RTN","IBJDB21",109,0)
 I $P(X,U,17) S DCHD=$P($G(^DGPM(+$P(X,U,17),0)),U)\1
"RTN","IBJDB21",110,0)
 I '$G(DCHD) S DCHD=$$DT^XLFDT()
"RTN","IBJDB21",111,0)
 ;
"RTN","IBJDB21",112,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",113,0)
 D PTF^IBCRBG(PTF) G QAMT:'$D(^TMP($J,"IBCRC-PTF"))
"RTN","IBJDB21",114,0)
 D PTFDV^IBCRBG(PTF) G QAMT:'$D(^TMP($J,"IBCRC-DIV"))
"RTN","IBJDB21",115,0)
 D BSLOS^IBCRBG(ADMDT,DCHD,1,ADM,0) G QAMT:'$D(^TMP($J,"IBCRC-INDT"))
"RTN","IBJDB21",116,0)
 ;
"RTN","IBJDB21",117,0)
 S BLDT=""
"RTN","IBJDB21",118,0)
 F  S BLDT=$O(^TMP($J,"IBCRC-INDT",BLDT)) Q:BLDT=""  D
"RTN","IBJDB21",119,0)
 .S X=^TMP($J,"IBCRC-INDT",BLDT)
"RTN","IBJDB21",120,0)
 .S BLBS=$P(X,U,2),DRG=$P(X,U,4),DIV=$P(X,U,5)
"RTN","IBJDB21",121,0)
 .;
"RTN","IBJDB21",122,0)
 .; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",123,0)
 .I BLDT<2990901 D  Q
"RTN","IBJDB21",124,0)
 ..S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT BEDSECTION STAY",BLBS)
"RTN","IBJDB21",125,0)
 .;
"RTN","IBJDB21",126,0)
 .; - Reasonable Charges (on 09/01/99 or later)
"RTN","IBJDB21",127,0)
 .S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT DRG",DRG,"",DIV,"",1)
"RTN","IBJDB21",128,0)
 ;
"RTN","IBJDB21",129,0)
 ; - Add the Professional Average Amount per Episode (Reason.Chg only)
"RTN","IBJDB21",130,0)
 I EPDT'<2990901 S AMOUNT=AMOUNT+$$AVG(EPDT)
"RTN","IBJDB21",131,0)
 ;
"RTN","IBJDB21",132,0)
 ; - Subtract the amount billed for this Episode
"RTN","IBJDB21",133,0)
 S AMOUNT=AMOUNT-$$CLAMT(DFN,EPDT,1)
"RTN","IBJDB21",134,0)
 ;
"RTN","IBJDB21",135,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",136,0)
 ;
"RTN","IBJDB21",137,0)
 G QAMT
"RTN","IBJDB21",138,0)
 ;
"RTN","IBJDB21",139,0)
AMT2 ; - Outpatient Charges
"RTN","IBJDB21",140,0)
 S X=$$GETOE^SDOE(ENC),ENCDT=+$P(X,U),DFN=+$P(X,U,2),DIV=$P(X,U,11)
"RTN","IBJDB21",141,0)
 ;
"RTN","IBJDB21",142,0)
 ; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",143,0)
 I ENCDT<2990901 D  G QAMT
"RTN","IBJDB21",144,0)
 . S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,ENCDT,"OUTPATIENT VISIT DATE")
"RTN","IBJDB21",145,0)
 ;
"RTN","IBJDB21",146,0)
 S AMOUNT=$$OPT^IBTUTL5(ENC,EPDT) G QAMT
"RTN","IBJDB21",147,0)
 ;
"RTN","IBJDB21",148,0)
AMT3 ; Prosthetic Charges
"RTN","IBJDB21",149,0)
 S AMOUNT=$$PRSAMT^IBTUTL5(EPDT,PRST) G:AMOUNT=0 QAMT
"RTN","IBJDB21",150,0)
 ;
"RTN","IBJDB21",151,0)
 S DIC="^RMPR(660,",DA=PRST,DR="14",DIQ="TTCST" D EN^DIQ1
"RTN","IBJDB21",152,0)
 S AMOUNT=+$G(TTCST(660,DA,14))
"RTN","IBJDB21",153,0)
 G QAMT
"RTN","IBJDB21",154,0)
 ;
"RTN","IBJDB21",155,0)
AMT4 ; - Prescription Charges 
"RTN","IBJDB21",156,0)
 ; - Tort Liable Charge & Reasonable Charge (same source)
"RTN","IBJDB21",157,0)
 S AMOUNT=$$RXAMT^IBTUTL5(EPDT,IBRX) G:AMOUNT=0 QAMT
"RTN","IBJDB21",158,0)
 ;
"RTN","IBJDB21",159,0)
 S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,EPDT,"PRESCRIPTION FILL")
"RTN","IBJDB21",160,0)
 ;
"RTN","IBJDB21",161,0)
QAMT I AMOUNT<0 S AMOUNT=0
"RTN","IBJDB21",162,0)
 Q AMOUNT
"RTN","IBJDB21",163,0)
 ;
"RTN","IBJDB21",164,0)
CLAMT(DFN,EPDT,PT) ; Returns the Total Amount of Claims for Patient/Episode
"RTN","IBJDB21",165,0)
 ;
"RTN","IBJDB21",166,0)
 ; Input:  DFN - Pointer to the Patient File #2
"RTN","IBJDB21",167,0)
 ;        EPDT - Episode Date
"RTN","IBJDB21",168,0)
 ;          PT - 0=Outpatient, 1=Inpatient
"RTN","IBJDB21",169,0)
 ;
"RTN","IBJDB21",170,0)
 N CLAMT,CLM,DAY,IBD,X
"RTN","IBJDB21",171,0)
 S CLAMT=0,DAY=EPDT-1,CLM=""
"RTN","IBJDB21",172,0)
 F  S CLM=$O(^DGCR(399,"C",DFN,CLM)) Q:'CLM  D
"RTN","IBJDB21",173,0)
 .S X=$G(^DGCR(399,CLM,0))
"RTN","IBJDB21",174,0)
 .I $P($P(X,U,3),".")=$P(EPDT,".") D
"RTN","IBJDB21",175,0)
 ..S IBD=$$CKBIL^IBTUBOU(CLM,PT) Q:IBD=""
"RTN","IBJDB21",176,0)
 ..I '$P(IBD,U,3) Q  ; Not authorized
"RTN","IBJDB21",177,0)
 ..S CLAMT=CLAMT+$G(^DGCR(399,CLM,"U1"))
"RTN","IBJDB21",178,0)
 ;
"RTN","IBJDB21",179,0)
QCLAMT Q CLAMT
"RTN","IBJDB21",180,0)
 ;
"RTN","IBJDB21",181,0)
AVG(EPDT) ; Returns the Average Amount of Inpatient Professional per
"RTN","IBJDB21",182,0)
 ;         Number of Episodes for the previous 12 months
"RTN","IBJDB21",183,0)
 N AVG,M,Z
"RTN","IBJDB21",184,0)
 S AVG=0,M=EPDT\100*100
"RTN","IBJDB21",185,0)
 I '$D(^IBE(356.19,M,1)) S M=$O(^IBE(356.19,M),-1) I 'M G QAVG
"RTN","IBJDB21",186,0)
 S Z=$G(^IBE(356.19,M,1)) I $P(Z,U,12) S AVG=$P(Z,U,11)/$P(Z,U,12)
"RTN","IBJDB21",187,0)
QAVG Q $J(AVG,0,2)
"RTN","IBJDB21",188,0)
 ;
"RTN","IBJDB21",189,0)
PRVSPC(EPS,CLM) ; Return the Provider and the Specialty
"RTN","IBJDB21",190,0)
 ;  Input: EPS - Episode(1 = Inpatient OR 2 = Outpatient)
"RTN","IBJDB21",191,0)
 ;         CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",192,0)
 ; Output: Provider Code (Pointer to #200) ^ Provider Name ^
"RTN","IBJDB21",193,0)
 ;         Specialty Code (Pointer to #40.7 or #45.7) ^ Specialty Name
"RTN","IBJDB21",194,0)
 ;
"RTN","IBJDB21",195,0)
 N ADM,DFN,ENC,PRI,PRS,PRV,PRVLST,SPC,STP,X,VAIN,VAINDT
"RTN","IBJDB21",196,0)
 ;
"RTN","IBJDB21",197,0)
 S X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",198,0)
 S DFN=$P(X,U,2),ENC=$P(X,U,4),ADM=$P(X,U,5),PRS=$P(X,U,8)
"RTN","IBJDB21",199,0)
 ;
"RTN","IBJDB21",200,0)
 S (PRV,SPC)="^"
"RTN","IBJDB21",201,0)
 I EPS=1,ADM D  G QPS  ; Inpatient
"RTN","IBJDB21",202,0)
 .S X=$G(^DGPM(ADM,0)),VAINDT=$P(X,U)\1 I 'VAINDT Q
"RTN","IBJDB21",203,0)
 .D INP^VADPT S PRV=$G(VAIN(11)),SPC=$G(VAIN(3))
"RTN","IBJDB21",204,0)
 .S:PRV="" PRV="^" S:SPC="" SPC="^"
"RTN","IBJDB21",205,0)
 ;
"RTN","IBJDB21",206,0)
 I EPS=2,ENC D  G QPS  ; Outpatient
"RTN","IBJDB21",207,0)
 .D GETPRV^SDOE(ENC,"PRVLST")
"RTN","IBJDB21",208,0)
 .S (X,PRI)=""
"RTN","IBJDB21",209,0)
 .F  S X=$O(PRVLST(X),-1) Q:X=""!PRI  D
"RTN","IBJDB21",210,0)
 ..N IBX S PRV=+PRVLST(X)
"RTN","IBJDB21",211,0)
 ..I $P(PRVLST(X),U,4)="P" S PRI=1 ; Primary provider
"RTN","IBJDB21",212,0)
 ..I PRV S PRV=PRV_U_$P($G(^VA(200,+PRV,0)),U)
"RTN","IBJDB21",213,0)
 ..S IBX=$$GETOE^SDOE(ENC),STP=$P(IBX,U,3)
"RTN","IBJDB21",214,0)
 ..I STP'="" S SPC=STP_U_$P($G(^DIC(40.7,STP,0)),U)
"RTN","IBJDB21",215,0)
 ;
"RTN","IBJDB21",216,0)
QPS Q (PRV_U_SPC)
"RTN","IBJDB21",217,0)
 ;
"RTN","IBJDB21",218,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",219,0)
 N X
"RTN","IBJDB21",220,0)
 S X="Division^Svc^Patient^SSN^Insurance^Episode Dt^Dt Entered^Dt Lst Edit^"
"RTN","IBJDB21",221,0)
 S X=X_"Lst Edited By^Next Admission^RNB Cat^Provider^Specialty^Entry Amt^Related Bills^Comments"
"RTN","IBJDB21",222,0)
 W !,X
"RTN","IBJDB21",223,0)
 Q
"RTN","IBJDB22")
0^12^B49159652^B44469351
"RTN","IBJDB22",1,0)
IBJDB22 ;ALB/RB - REASONS NOT BILLABLE REPORT (PRINT) ;19-JUN-00
"RTN","IBJDB22",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,399**;21-MAR-94;Build 8
"RTN","IBJDB22",3,0)
 ;
"RTN","IBJDB22",4,0)
EN ; - Entry point from IBJDB21.
"RTN","IBJDB22",5,0)
 ;
"RTN","IBJDB22",6,0)
 ; - Extract summary data.
"RTN","IBJDB22",7,0)
 I $G(IBXTRACT) D EXTMO(.IB) G ENQ
"RTN","IBJDB22",8,0)
 ;
"RTN","IBJDB22",9,0)
 S (IBQ,ECNT,ETOT,SCNT,STOT)=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDB22",10,0)
 ;
"RTN","IBJDB22",11,0)
 S IBDIV="" I 'IBSD S VAUTD(0)=""
"RTN","IBJDB22",12,0)
 F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  D  I IBQ Q
"RTN","IBJDB22",13,0)
 . F IBEP=1:1:4 I IBSEL[IBEP D  I IBQ Q
"RTN","IBJDB22",14,0)
 . . D @($S(IBRPT="D":"DET",1:"SUM"))
"RTN","IBJDB22",15,0)
 ;
"RTN","IBJDB22",16,0)
 I IBQ G ENQ
"RTN","IBJDB22",17,0)
 ;
"RTN","IBJDB22",18,0)
 I 'IBQ,IBRPT="D" D
"RTN","IBJDB22",19,0)
 . S IBDIV="" I 'IBSD S VAUTD(0)=""
"RTN","IBJDB22",20,0)
 . F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  D  I IBQ Q
"RTN","IBJDB22",21,0)
 . . F IBEP=1:1:4 I IBSEL[IBEP D SUM I IBQ Q
"RTN","IBJDB22",22,0)
 ;
"RTN","IBJDB22",23,0)
ENQ K %,IB0,IBDH,IBDIV,IBEP,IBEPH,IBN,IBP,IBPAG,IBPT,IBQ,IBRT,IBRUN,IBSORT
"RTN","IBJDB22",24,0)
 K IBT1,IBU,GTOT,ECNT,ETOT,SCNT,STOT
"RTN","IBJDB22",25,0)
 Q
"RTN","IBJDB22",26,0)
 ;
"RTN","IBJDB22",27,0)
DET ; - Print detailed report.
"RTN","IBJDB22",28,0)
 I '$D(^TMP("IBJDB2",$J,IBDIV,IBEP)) D  D PAUSE Q
"RTN","IBJDB22",29,0)
 . D HDR Q:IBQ  W !!,"No entries for this episode.",!
"RTN","IBJDB22",30,0)
 S IBT1=0,(IBSORT1,IBPT,IB0)=""
"RTN","IBJDB22",31,0)
 F  S IBSORT1=$O(^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1)) Q:IBSORT1=""  D  Q:IBQ
"RTN","IBJDB22",32,0)
 . D HDR Q:IBQ
"RTN","IBJDB22",33,0)
 . F  S IBPT=$O(^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT)) Q:IBPT=""  S IBP=$G(^(IBPT)) D  Q:IBQ
"RTN","IBJDB22",34,0)
 . . I $Y>(IOSL-8) D PAUSE Q:IBQ  D HDR Q:IBQ
"RTN","IBJDB22",35,0)
 . . D WPAT
"RTN","IBJDB22",36,0)
 . . F  S IB0=$O(^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT,IB0)) Q:IB0=""  S IBN=$G(^(IB0)) D  Q:IBQ
"RTN","IBJDB22",37,0)
 . . . I $Y>(IOSL-8) D PAUSE Q:IBQ  D HDR Q:IBQ  D WPAT
"RTN","IBJDB22",38,0)
 . . . W ?45,$$DTE(+IBN),?55,$$DTE($P(IBN,U,2))
"RTN","IBJDB22",39,0)
 . . . I $P(IBN,U,4)'="" W ?65,$$DTE($P(IBN,U,3)),?76,$E($P(IBN,U,4),1,19)
"RTN","IBJDB22",40,0)
 . . . E  W ?65,$$DTE($P(IBN,U,2)) W ?76,"POSTMASTER"
"RTN","IBJDB22",41,0)
 . . . S IBU=5 S:12[IBEP IBU=$S(IBSORT="R":6,1:IBU)
"RTN","IBJDB22",42,0)
 . . . I 12[IBEP W ?97,$E($P(IBN,U,IBU),1,25),?124,$J($P(IBN,U,8),8,2),!
"RTN","IBJDB22",43,0)
 . . . I 34[IBEP,+$P(IBN,U,11)>0 W ?99,$J($P(IBN,U,8),8,2) F X=2:1:$P($P(IBN,U,11),";",1)+1 W ?114,$P($P(IBN,U,11),";",X)_" "
"RTN","IBJDB22",44,0)
 . . . I 34[IBEP,+$P(IBN,U,11)<0 W ?99,$J($P(IBN,U,8),8,2),!
"RTN","IBJDB22",45,0)
 . . . I 34[IBEP,+$P(IBN,U,11)>0 W !
"RTN","IBJDB22",46,0)
 . . . I $P(IBN,U,9)]"" W ?15,"Comments: ",$P(IBN,U,9) W:12'[IBEP !
"RTN","IBJDB22",47,0)
 . . . I 12[IBEP,+$P(IBN,U,11)>0,$P(IBN,U,9)="" W ?27,"Related Bills: " F X=2:1:$P($P(IBN,U,11),";",1)+1 W ?41,$P($P(IBN,U,11),";",X)_" "
"RTN","IBJDB22",48,0)
 . . . I 2[IBEP,$P(IBN,U,10)'="" W ?76,"Nx Adm:",?85,$P(IBN,U,10)
"RTN","IBJDB22",49,0)
 . . . I 12[IBEP,+$P(IBN,U,11)>0,$P(IBN,U,9)'="" W !,?27,"Related Bills: " F X=2:1:$P($P(IBN,U,11),";",1)+1 W ?41,$P($P(IBN,U,11),";",X)_" "
"RTN","IBJDB22",50,0)
 . . . I 12[IBEP W ?97,$E($P(IBN,U,$S("PR"[IBSORT:7,1:6)),1,25),!
"RTN","IBJDB22",51,0)
 . . . S SCNT=SCNT+1,ECNT=ECNT+1
"RTN","IBJDB22",52,0)
 . . . S STOT=STOT+$P(IBN,U,8),ETOT=ETOT+$P(IBN,U,8)
"RTN","IBJDB22",53,0)
 . I 'IBQ D TOT2 I $O(^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1))'="" D PAUSE Q
"RTN","IBJDB22",54,0)
 I 'IBQ D TOT1,PAUSE
"RTN","IBJDB22",55,0)
 ;
"RTN","IBJDB22",56,0)
DETQ Q
"RTN","IBJDB22",57,0)
 ;
"RTN","IBJDB22",58,0)
EXTMO(IBSM) ; Extract/transmit data to DM Extract Module
"RTN","IBJDB22",59,0)
 ; IBSM - Array containing the summary information
"RTN","IBJDB22",60,0)
 ;
"RTN","IBJDB22",61,0)
 N I,IB,IBI,IBJ,IBLST,IBR,IBRNB,IBSQ,IBTR,IBTP,IBZ,RNBC,RNBN
"RTN","IBJDB22",62,0)
 ;
"RTN","IBJDB22",63,0)
 F I=1:1 S RNBN=$P($T(RNB+I),";;",2,99) Q:RNBN=""  D
"RTN","IBJDB22",64,0)
 . S RNBC=$O(^IBE(356.8,"B",RNBN,0)) Q:'RNBC
"RTN","IBJDB22",65,0)
 . S IBTR(RNBC)=I
"RTN","IBJDB22",66,0)
 ;
"RTN","IBJDB22",67,0)
 S IBRNB="",IBLST=$O(^IBE(356.8,999),-1)*2
"RTN","IBJDB22",68,0)
 F IBTP=1:1:4 D
"RTN","IBJDB22",69,0)
 . F IBJ=1:1:IBLST,999,1000 S IB(IBTP,IBJ)=$S(IBJ#2:0,1:"0.00")
"RTN","IBJDB22",70,0)
 . F  S IBRNB=$O(IBSM(0,IBTP,IBRNB)) Q:IBRNB=""  D
"RTN","IBJDB22",71,0)
 . . I '$D(IBTR(IBRNB)) Q
"RTN","IBJDB22",72,0)
 . . S IBSQ=$S(IBRNB<999:IBTR(IBRNB)*2-1,1:999)
"RTN","IBJDB22",73,0)
 . . S IBZ=$G(IBSM(0,IBTP,IBRNB))
"RTN","IBJDB22",74,0)
 . . S IB(IBTP,IBSQ)=+IBZ
"RTN","IBJDB22",75,0)
 . . S IB(IBTP,IBSQ+1)=$FN(+$P(IBZ,"^",2),"",2)
"RTN","IBJDB22",76,0)
 . F I=1:1:3 D E^IBJDE(21+(IBTP*3)+I,0)
"RTN","IBJDB22",77,0)
 . K IB(IBTP)
"RTN","IBJDB22",78,0)
 ;
"RTN","IBJDB22",79,0)
 Q
"RTN","IBJDB22",80,0)
 ;
"RTN","IBJDB22",81,0)
SUM ; - Print summary line(s).
"RTN","IBJDB22",82,0)
 I '$D(IB(IBDIV,IBEP)) D  D PAUSE Q
"RTN","IBJDB22",83,0)
 . D SUMH W !!?14,"No statistics available."
"RTN","IBJDB22",84,0)
 D SUMH Q:IBQ
"RTN","IBJDB22",85,0)
 S IBRNB=0 F  S IBRNB=$O(IB(IBDIV,IBEP,IBRNB)) Q:'IBRNB  D  Q:IBQ
"RTN","IBJDB22",86,0)
 . S IBN=IB(IBDIV,IBEP,IBRNB)
"RTN","IBJDB22",87,0)
 . W !?14,$P($G(^IBE(356.8,IBRNB,0)),U),?48,$J(+IBN,5),?57,$J($P(IBN,U,2),9,2)
"RTN","IBJDB22",88,0)
 . S $P(GTOT,U)=$P(GTOT,U)+IBN,$P(GTOT,U,2)=$P(GTOT,U,2)+$P(IBN,U,2)
"RTN","IBJDB22",89,0)
 D SUMT
"RTN","IBJDB22",90,0)
 ;
"RTN","IBJDB22",91,0)
 Q
"RTN","IBJDB22",92,0)
 ;
"RTN","IBJDB22",93,0)
SUMH ; - Print summary header.
"RTN","IBJDB22",94,0)
 I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBJDB22",95,0)
 S IBPAG=$G(IBPAG)+1 W ?68,"Page: ",IBPAG
"RTN","IBJDB22",96,0)
 S IBEPH="REASONS NOT BILLABLE SUMMARY/"_IBEPS(IBEP)
"RTN","IBJDB22",97,0)
 W !!?(80-$L(IBEPH))\2,IBEPH
"RTN","IBJDB22",98,0)
 I IBDIV D
"RTN","IBJDB22",99,0)
 .S IBDH="Division: "_$P($G(^DG(40.8,IBDIV,0)),U)
"RTN","IBJDB22",100,0)
 .W !?(80-$L(IBDH)\2),IBDH
"RTN","IBJDB22",101,0)
 ;
"RTN","IBJDB22",102,0)
 W !?22,"Period : from ",$$DTE(IBBDT)," thru ",$$DTE(IBEDT),!
"RTN","IBJDB22",103,0)
 W !?24,"Run Date: ",IBRUN
"RTN","IBJDB22",104,0)
 W !!?46,"No. of",?61,"Total",!?14,"RNB Category",?46,"Entries"
"RTN","IBJDB22",105,0)
 W ?60,"Amount",!?14,$$DASH(52)
"RTN","IBJDB22",106,0)
 S GTOT="0^0",IBQ=$$STOP^IBOUTL("Reasons Not Billable Summary")
"RTN","IBJDB22",107,0)
 Q
"RTN","IBJDB22",108,0)
 ;
"RTN","IBJDB22",109,0)
SUMT ; - Print summary totals.
"RTN","IBJDB22",110,0)
 W !?47,"-------------------"
"RTN","IBJDB22",111,0)
 W !?33,"Grand Totals:",?47,$J(+GTOT,6),?56,$J($P(GTOT,U,2),10,2) D PAUSE
"RTN","IBJDB22",112,0)
 Q
"RTN","IBJDB22",113,0)
 ;
"RTN","IBJDB22",114,0)
HDR ; - Write the detailed report header.
"RTN","IBJDB22",115,0)
 I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBJDB22",116,0)
 S IBPAG=$G(IBPAG)+1 W "Reasons Not Billable (RNB) Report "
"RTN","IBJDB22",117,0)
 W ?88,"Run Date: ",IBRUN,?123,"Page: ",$J(IBPAG,3)
"RTN","IBJDB22",118,0)
 S X=IBE(IBEP)_" events by "
"RTN","IBJDB22",119,0)
 I 1234[IBEP D
"RTN","IBJDB22",120,0)
 . S X=X_$S(IBSORT="P":"provider",IBSORT="S":"specialty",1:"RNB category")
"RTN","IBJDB22",121,0)
 . I $G(IBSORT1)'="" S X=X_" ("_IBSORT1_")"
"RTN","IBJDB22",122,0)
 E  S X=X_"RNB category"
"RTN","IBJDB22",123,0)
 S X=X_" from "_$$DTE(IBBDT)_" thru "_$$DTE(IBEDT)_" ("_IBD_")"
"RTN","IBJDB22",124,0)
 I 12[IBEP D
"RTN","IBJDB22",125,0)
 . I IBSORT'="R" D
"RTN","IBJDB22",126,0)
 . . S X=X_" / "_$S(IBSRNB="S":"SPECIFIC",1:"ALL")_" REASONS NOT BILLABLE"
"RTN","IBJDB22",127,0)
 . I IBSORT'="P" D
"RTN","IBJDB22",128,0)
 . . S X=X_" / "_$S(IBSPRV="S":"SPECIFIC",1:"ALL")_" PROVIDERS"
"RTN","IBJDB22",129,0)
 . I IBSORT'="S",IBEP=1 D
"RTN","IBJDB22",130,0)
 . . S X=X_" / "_$S(IBSISP="S":"SPECIFIC",1:"ALL")_" SPECIALTIES"
"RTN","IBJDB22",131,0)
 . I IBSORT'="S",IBEP=2 D
"RTN","IBJDB22",132,0)
 . . S X=X_" / "_$S(IBSOSP="S":"SPECIFIC",1:"ALL")_" SPECIALTIES"
"RTN","IBJDB22",133,0)
 F I=1:1 W !,$E(X,1,132) S X=$E(X,133,999) I X="" Q
"RTN","IBJDB22",134,0)
 ;
"RTN","IBJDB22",135,0)
 I IBDIV W !,"Division: ",$P($G(^DG(40.8,IBDIV,0)),U)
"RTN","IBJDB22",136,0)
 W !!?26,"Last",?32,"Insurance",?45,"Episode   Date      Dte Last"
"RTN","IBJDB22",137,0)
 I 12[IBEP W ?97,$S("PS"[IBSORT:"RNB Category",1:"Provider")
"RTN","IBJDB22",138,0)
 W !,"Patient",?26,"4SSN",?32,"Carrier"
"RTN","IBJDB22",139,0)
 W ?45,"Date      Entered   Edited     Last Edited By"
"RTN","IBJDB22",140,0)
 I 12[IBEP W ?97,$S("PR"[IBSORT:"Specialty",1:"Provider")
"RTN","IBJDB22",141,0)
 ;
"RTN","IBJDB22",142,0)
 I 34[IBEP W ?101,"Amount",?114,"Related Bills",!,$$DASH(IOM),!
"RTN","IBJDB22",143,0)
 E  W ?126,"Amount",!,$$DASH(IOM),!
"RTN","IBJDB22",144,0)
 S IBQ=$$STOP^IBOUTL("Reasons Not Billable Report")
"RTN","IBJDB22",145,0)
 Q
"RTN","IBJDB22",146,0)
 ;
"RTN","IBJDB22",147,0)
WPAT ; - Write patient data.
"RTN","IBJDB22",148,0)
 W $P(IBPT,"@@"),?26,$P(IBPT,"@@",2),?32,$E($P(IBP,U),1,12)
"RTN","IBJDB22",149,0)
 Q
"RTN","IBJDB22",150,0)
 ;
"RTN","IBJDB22",151,0)
TOT1 ; - Print episode totals.
"RTN","IBJDB22",152,0)
 I 34[IBEP W !?97,"----------",!
"RTN","IBJDB22",153,0)
 E  W !?122,"----------",!
"RTN","IBJDB22",154,0)
 I 34[IBEP W ?55
"RTN","IBJDB22",155,0)
 E  W ?80
"RTN","IBJDB22",156,0)
 W "TOTAL FOR EPISODE - Count: ",$J(ECNT,5),"  Amount: ",$J(ETOT,10,2)
"RTN","IBJDB22",157,0)
 S (ECNT,ETOT)=0
"RTN","IBJDB22",158,0)
 Q
"RTN","IBJDB22",159,0)
 ;
"RTN","IBJDB22",160,0)
TOT2 ; - Print sub-totals.
"RTN","IBJDB22",161,0)
 I 34[IBEP W ?98,"---------",!
"RTN","IBJDB22",162,0)
 E  W ?123,"---------",!
"RTN","IBJDB22",163,0)
 I 34[IBEP W ?60
"RTN","IBJDB22",164,0)
 E  W ?85
"RTN","IBJDB22",165,0)
 W "TOTAL EVENTS - Count:  ",$J(SCNT,4),"  Amount:  ",$J(STOT,9,2),!
"RTN","IBJDB22",166,0)
 S (SCNT,STOT)=0
"RTN","IBJDB22",167,0)
 Q
"RTN","IBJDB22",168,0)
 ;
"RTN","IBJDB22",169,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDB22",170,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDB22",171,0)
 ;
"RTN","IBJDB22",172,0)
PAUSE ; - Page break.
"RTN","IBJDB22",173,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDB22",174,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDB22",175,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDB22",176,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQ=1
"RTN","IBJDB22",177,0)
 Q
"RTN","IBJDB22",178,0)
 ;
"RTN","IBJDB22",179,0)
DTE(X) ; - Format the date.
"RTN","IBJDB22",180,0)
 Q $S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:"")
"RTN","IBJDB22",181,0)
 ;
"RTN","IBJDB22",182,0)
RNB ; - Reasons Not Billable 
"RTN","IBJDB22",183,0)
 ;;NOT INSURED
"RTN","IBJDB22",184,0)
 ;;SC TREATMENT
"RTN","IBJDB22",185,0)
 ;;AGENT ORANGE
"RTN","IBJDB22",186,0)
 ;;IONIZING RADIATION
"RTN","IBJDB22",187,0)
 ;;ENV. CONTAM.
"RTN","IBJDB22",188,0)
 ;;SERVICE NOT COVERED
"RTN","IBJDB22",189,0)
 ;;COVERAGE CANCELED
"RTN","IBJDB22",190,0)
 ;;NEEDS SC DETERMINATION
"RTN","IBJDB22",191,0)
 ;;NON-BILLABLE APPOINTMENT TYPE
"RTN","IBJDB22",192,0)
 ;;INVALID PRESCRIPTION ENTRY
"RTN","IBJDB22",193,0)
 ;;REFILL ON VISIT DATE
"RTN","IBJDB22",194,0)
 ;;PRESCRIPTION DELETED
"RTN","IBJDB22",195,0)
 ;;PRESCRIPTION NOT RELEASED
"RTN","IBJDB22",196,0)
 ;;DRUG NOT BILLABLE
"RTN","IBJDB22",197,0)
 ;;HMO POLICY
"RTN","IBJDB22",198,0)
 ;;REFUSES TO SIGN RELEASE (ROI)
"RTN","IBJDB22",199,0)
 ;;NON-BILLABLE STOP CODE
"RTN","IBJDB22",200,0)
 ;;RESEARCH VISIT
"RTN","IBJDB22",201,0)
 ;;BILL PURGED
"RTN","IBJDB22",202,0)
 ;;NON-BILLABLE CLINIC
"RTN","IBJDB22",203,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBJDB22",204,0)
 ;;CREDENTIALING ISSUE
"RTN","IBJDB22",205,0)
 ;;INSUFFICIENT DOCUMENTATION
"RTN","IBJDB22",206,0)
 ;;NO DOCUMENTATION
"RTN","IBJDB22",207,0)
 ;;NON-BILLABLE PROVIDER (RESID.)
"RTN","IBJDB22",208,0)
 ;;NON-BILLABLE PROVIDER (OTHER)
"RTN","IBJDB22",209,0)
 ;;OTHER COMPLIANCE
"RTN","IBJDB22",210,0)
 ;;OUT OF NETWORK (PPO)
"RTN","IBTRKR41")
0^15^B35256445^B32576267
"RTN","IBTRKR41",1,0)
IBTRKR41 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK OUTPATIENT ENCOUNTERS ;13-AUG-93
"RTN","IBTRKR41",2,0)
 ;;2.0;INTEGRATED BILLING;**43,55,91,132,174,247,260,315,292,312,339,399**;21-MAR-94;Build 8
"RTN","IBTRKR41",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR41",4,0)
 ;
"RTN","IBTRKR41",5,0)
OPCHK ; -- check and add rx
"RTN","IBTRKR41",6,0)
 N Y,Y0,IBSERV,IBAPPT
"RTN","IBTRKR41",7,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR41",8,0)
 ; IBDT is set from IBTRKR4
"RTN","IBTRKR41",9,0)
 ; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date        ;CCR-930
"RTN","IBTRKR41",10,0)
 I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q                 ;IB*2.0*312
"RTN","IBTRKR41",11,0)
 ;
"RTN","IBTRKR41",12,0)
 K IBRMARK
"RTN","IBTRKR41",13,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR41",14,0)
 ;
"RTN","IBTRKR41",15,0)
 S IBOEDATA=$$SCE^IBSDU(IBOE),IBOESTAT=$P(IBOEDATA,"^",15)
"RTN","IBTRKR41",16,0)
 S IBSERV=$S(+$P($G(^DIC(40.7,+$P(IBOEDATA,"^",3),0)),"^",2)=180:"DENTAL",1:"OUTPATIENT")
"RTN","IBTRKR41",17,0)
 S IBAPPT=$P($G(^SD(409.1,+$P(IBOEDATA,"^",10),0)),"^",1)
"RTN","IBTRKR41",18,0)
 S DFN=$P(IBOEDATA,"^",2)
"RTN","IBTRKR41",19,0)
 I 'DFN G OPCHKQ
"RTN","IBTRKR41",20,0)
 I $P(IBOEDATA,"^",5) S IBVSIT=$P(IBOEDATA,"^",5) I '$$BDSRC^IBEFUNC3(IBVSIT) G OPCHKQ ;non-billable data sources
"RTN","IBTRKR41",21,0)
 ; -- do not allow date/time duplicate claims before Jan. 1, 2006
"RTN","IBTRKR41",22,0)
 I $O(^IBT(356,"APTY",DFN,IBOETYP,IBDT,0)),IBDT<3060101 G OPCHKQ
"RTN","IBTRKR41",23,0)
 ;
"RTN","IBTRKR41",24,0)
 ; -- see if tracking only insured and pt is insured/insured for outpt visits
"RTN","IBTRKR41",25,0)
 I $P(IBTRKR,"^",3)=1,'$$INSURED^IBCNS1(DFN,IBDT) G OPCHKQ ; patient not insured
"RTN","IBTRKR41",26,0)
 ;
"RTN","IBTRKR41",27,0)
 I '$$PTFTF^IBCNSU31(DFN,IBDT) S IBRMARK="FILING TIMEFRAME NOT MET"
"RTN","IBTRKR41",28,0)
 ;
"RTN","IBTRKR41",29,0)
 ; -- see if outpatient services are covered
"RTN","IBTRKR41",30,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,IBSERV,.IBANY) S IBRMARK=$S($G(IBANY)&(IBSERV="DENTAL"):"NO DENTAL COVERAGE",$G(IBANY):"NO OUTPATIENT COVERAGE",1:"NOT INSURED")
"RTN","IBTRKR41",31,0)
 ;
"RTN","IBTRKR41",32,0)
 ; -- see if appointment type is billable
"RTN","IBTRKR41",33,0)
 I '$$RPT^IBEFUNC($P(IBOEDATA,"^",10),+IBOEDATA) S IBRMARK=$S(IBAPPT="RESEARCH":"RESEARCH VISIT",1:"NON-BILLABLE APPOINTMENT TYPE")
"RTN","IBTRKR41",34,0)
 ;
"RTN","IBTRKR41",35,0)
 ; -- check sc status, special conditions etc.
"RTN","IBTRKR41",36,0)
 I $G(IBRMARK)="" S IBRMARK=$$CL(IBOEDATA)
"RTN","IBTRKR41",37,0)
 ;
"RTN","IBTRKR41",38,0)
 ; -- check for non-billable stops or clinic
"RTN","IBTRKR41",39,0)
 S X=$P(IBOEDATA,"^",4) I X,$$NBCT^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE CLINIC"
"RTN","IBTRKR41",40,0)
 S X=$P(IBOEDATA,"^",3) I X,$$NBST^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE STOP CODE"
"RTN","IBTRKR41",41,0)
 ;
"RTN","IBTRKR41",42,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR41",43,0)
 D OPT^IBTUTL1(DFN,IBOETYP,IBDT,IBOE,IBRMARK,$G(IBVSIT)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR41",44,0)
 I IBRMARK'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR41",45,0)
 I IBRMARK="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR41",46,0)
OPCHKQ K IBANY,IBRMARK,VAEL,VA,IBOEDATA,IBVSIT,DFN,X,Y
"RTN","IBTRKR41",47,0)
 Q
"RTN","IBTRKR41",48,0)
 ;
"RTN","IBTRKR41",49,0)
BULL ; -- send bulletin
"RTN","IBTRKR41",50,0)
 ;
"RTN","IBTRKR41",51,0)
 S XMSUB="Outpatient Encounters added to Claims Tracking Complete"
"RTN","IBTRKR41",52,0)
 S IBT(1)="The process to automatically add Opt Encounters has successfully completed."
"RTN","IBTRKR41",53,0)
 S IBT(1.1)=""
"RTN","IBTRKR41",54,0)
 S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR41",55,0)
 S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR41",56,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR41",57,0)
 S IBT(4)=""
"RTN","IBTRKR41",58,0)
 S IBT(5)="            Total Encounters Checked: "_$G(IBCNT)
"RTN","IBTRKR41",59,0)
 S IBT(6)="              Total Encounters Added: "_$G(IBCNT1)
"RTN","IBTRKR41",60,0)
 S IBT(7)=" Total Non-billable Encounters Added: "_$G(IBCNT2)
"RTN","IBTRKR41",61,0)
 S IBT(8)=""
"RTN","IBTRKR41",62,0)
 S IBT(9)="*The SC, Agent Orange, Southwest Asia, Ionizing Radiation,"
"RTN","IBTRKR41",63,0)
 S IBT(10)="Military Sexual Trauma, Head Neck Cancer, Combat Veteran and Project 112/SHAD"
"RTN","IBTRKR41",64,0)
 S IBT(11)="status visits have been added for insured patients but automatically"
"RTN","IBTRKR41",65,0)
 S IBT(12)="indicated as not billable."
"RTN","IBTRKR41",66,0)
 D SEND^IBTRKR31
"RTN","IBTRKR41",67,0)
BULLQ Q
"RTN","IBTRKR41",68,0)
 ;
"RTN","IBTRKR41",69,0)
CL(IBOEDATA,IBR) ; check out classification questions for encounter
"RTN","IBTRKR41",70,0)
 ; this new check will look at the V POV level then to the Visit level
"RTN","IBTRKR41",71,0)
 ; as necessary to determine if it relates or not.  This will indicate
"RTN","IBTRKR41",72,0)
 ; if the WHOLE visit is not billable, otherwise it will say it is
"RTN","IBTRKR41",73,0)
 ; (even if just part is billable).
"RTN","IBTRKR41",74,0)
 ; call with the zero node of 409.68 in IBOEDATA
"RTN","IBTRKR41",75,0)
 ; assumes DFN and IBDT defined
"RTN","IBTRKR41",76,0)
 ; pass in IBR by ref to get values back
"RTN","IBTRKR41",77,0)
 ;
"RTN","IBTRKR41",78,0)
 N IBRMARK,IBPCEX,IBCPT,IBARR,IBP,IBDX,IBVRNB,IBENCL
"RTN","IBTRKR41",79,0)
 S IBRMARK="",IBPCEX=$P(IBOEDATA,"^",5)
"RTN","IBTRKR41",80,0)
 ;
"RTN","IBTRKR41",81,0)
 ; look up classification info needed (if any)
"RTN","IBTRKR41",82,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR) I '$D(IBARR) G CLQ
"RTN","IBTRKR41",83,0)
 ;
"RTN","IBTRKR41",84,0)
 ; if no PCE event use old approach
"RTN","IBTRKR41",85,0)
 I 'IBPCEX D:$G(IBOE)  G CLQ
"RTN","IBTRKR41",86,0)
 . S IBENCL=$$ENCL^IBAMTS2(IBOE) I IBENCL["1" D  ; return 1 in string if true "ao^ir^sc^swa^mst^hnc^cv^shad"
"RTN","IBTRKR41",87,0)
 . I $P(IBENCL,"^",3) S IBRMARK="SC TREATMENT" Q
"RTN","IBTRKR41",88,0)
 . I $P(IBENCL,"^",1) S IBRMARK="AGENT ORANGE" Q
"RTN","IBTRKR41",89,0)
 . I $P(IBENCL,"^",2) S IBRMARK="IONIZING RADIATION" Q
"RTN","IBTRKR41",90,0)
 . I $P(IBENCL,"^",4) S IBRMARK="SOUTHWEST ASIA" Q
"RTN","IBTRKR41",91,0)
 . I $P(IBENCL,"^",5) S IBRMARK="MILITARY SEXUAL TRAUMA" Q
"RTN","IBTRKR41",92,0)
 . I $P(IBENCL,"^",6) S IBRMARK="HEAD/NECK CANCER" Q
"RTN","IBTRKR41",93,0)
 . I $P(IBENCL,"^",7) S IBRMARK="COMBAT VETERAN" Q
"RTN","IBTRKR41",94,0)
 . I $P(IBENCL,"^",8) S IBRMARK="PROJECT 112/SHAD" Q
"RTN","IBTRKR41",95,0)
 ;
"RTN","IBTRKR41",96,0)
 ; look up PCE info
"RTN","IBTRKR41",97,0)
 D ENCEVENT^PXKENC(IBPCEX)
"RTN","IBTRKR41",98,0)
 ;
"RTN","IBTRKR41",99,0)
 S IBVRNB=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"VST",IBPCEX,800)),.IBARR)
"RTN","IBTRKR41",100,0)
 ;
"RTN","IBTRKR41",101,0)
 ; find dx rnb's
"RTN","IBTRKR41",102,0)
 S IBDX=0 F  S IBDX=$O(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX)) Q:'IBDX  S IBDX(+$G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,0)))=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,800)),.IBARR)
"RTN","IBTRKR41",103,0)
 ;
"RTN","IBTRKR41",104,0)
 ; look for v cpt's with IBDX
"RTN","IBTRKR41",105,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  F IBP=5,9,10,11 Q:'$D(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0))  D
"RTN","IBTRKR41",106,0)
 . ;
"RTN","IBTRKR41",107,0)
 . ; dx exists in v cpt but not v pov use visit level determination
"RTN","IBTRKR41",108,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP),'$D(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) D:IBVRNB REL(IBVRNB) Q
"RTN","IBTRKR41",109,0)
 . ;
"RTN","IBTRKR41",110,0)
 . ; use dx determination (where dx exists on v cpt)
"RTN","IBTRKR41",111,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP) D:$G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) REL($G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP)))) Q
"RTN","IBTRKR41",112,0)
 ;
"RTN","IBTRKR41",113,0)
 ; check for no assoc dx and apply visit level determination
"RTN","IBTRKR41",114,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  D
"RTN","IBTRKR41",115,0)
 . S IBDX=0 F IBP=5,9,10,11 Q:IBDX  I +$P($G(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0)),"^",IBP) S IBDX=1
"RTN","IBTRKR41",116,0)
 . I 'IBDX,IBVRNB D REL(IBVRNB)
"RTN","IBTRKR41",117,0)
 ;
"RTN","IBTRKR41",118,0)
 ; if some procedures left, then we need to bill, set return array
"RTN","IBTRKR41",119,0)
 I $D(^TMP("PXKENC",$J,IBPCEX,"CPT")) S IBRMARK="" M IBR=^TMP("PXKENC",$J,IBPCEX)
"RTN","IBTRKR41",120,0)
 ;
"RTN","IBTRKR41",121,0)
CLQ K ^TMP("PXKENC",$J)
"RTN","IBTRKR41",122,0)
 Q IBRMARK
"RTN","IBTRKR41",123,0)
 ;
"RTN","IBTRKR41",124,0)
RNB(IBDATA,IBARR) ; find rnb's
"RTN","IBTRKR41",125,0)
 ; pass in PCE 800 data (visit or v pov) to find any reasons not billalbe
"RTN","IBTRKR41",126,0)
 ; IBARR = classifications that could apply to patient
"RTN","IBTRKR41",127,0)
 ; the RNB number returned is from the IBARR number (SDCO21 array)
"RTN","IBTRKR41",128,0)
 N IBX,IBR S IBR=""
"RTN","IBTRKR41",129,0)
 S IBX=0 F  S IBX=$O(IBARR(IBX)) Q:'IBX!(IBR)  I $P(IBDATA,"^",$P($T(CLDATA+(IBX+1)),"^",2)) S IBR=IBX
"RTN","IBTRKR41",130,0)
 Q IBR
"RTN","IBTRKR41",131,0)
 ;
"RTN","IBTRKR41",132,0)
REL(IBRNB) ; kills of tmp if related and set IBRMARK
"RTN","IBTRKR41",133,0)
 K ^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)
"RTN","IBTRKR41",134,0)
 S IBRMARK=$P($T(CLDATA+(IBRNB+1)),"^",3)
"RTN","IBTRKR41",135,0)
 Q
"RTN","IBTRKR41",136,0)
 ;
"RTN","IBTRKR41",137,0)
CLDATA ; classification data
"RTN","IBTRKR41",138,0)
 ; format is:  SCDO21 array^vpov/vcpt/visit 800 piece^reason not billable
"RTN","IBTRKR41",139,0)
 ;;1^2^AGENT ORANGE
"RTN","IBTRKR41",140,0)
 ;;2^3^IONIZING RADIATION
"RTN","IBTRKR41",141,0)
 ;;3^1^SC TREATMENT
"RTN","IBTRKR41",142,0)
 ;;4^4^SOUTHWEST ASIA
"RTN","IBTRKR41",143,0)
 ;;5^5^MILITARY SEXUAL TRAUMA
"RTN","IBTRKR41",144,0)
 ;;6^6^HEAD/NECK CANCER
"RTN","IBTRKR41",145,0)
 ;;7^7^COMBAT VETERAN
"RTN","IBTRKR41",146,0)
 ;;8^8^PROJECT 112/SHAD
"RTN","IBTRKR41",147,0)
 ;
"RTN","IBTUBO1")
0^16^B47180115^B45713033
"RTN","IBTUBO1",1,0)
IBTUBO1 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,247,155,277,339,399**;21-MAR-94;Build 8
"RTN","IBTUBO1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTUBO1",4,0)
 ;
"RTN","IBTUBO1",5,0)
OPT(IBOE,IBQUERY) ; - Has the outpatient encounter been billed?
"RTN","IBTUBO1",6,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBTUBO1",7,0)
 ;               (NOTE: this value may be null)
"RTN","IBTUBO1",8,0)
 ;          IBQUERY (Passed by reference)=flag that is incremented when
"RTN","IBTUBO1",9,0)
 ;                  the Scheduling query API is invoked
"RTN","IBTUBO1",10,0)
 ;  *Pre-set variables: DFN=patient IEN, IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO1",11,0)
 ;                      IBEDT=End of reporting period date.
"RTN","IBTUBO1",12,0)
 ;                      IBX=ien of CLAIMS TRACKING entry file 356
"RTN","IBTUBO1",13,0)
 ;
"RTN","IBTUBO1",14,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!'$G(IBX) G OPTQ
"RTN","IBTUBO1",15,0)
 N IBCN,IBCPT,IBCT,IBDATA,IBDAY,IBDIV,IBFL,IBNAME,IBQUIT,IBNCF,IBXX,IBYD,IBYY,IBZ,IBMRA
"RTN","IBTUBO1",16,0)
 N IBCPTSUM,IBTCHRG
"RTN","IBTUBO1",17,0)
 ; - Check to be sure the encounter is billable.
"RTN","IBTUBO1",18,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) G OPTQ ;  Became inpatient same day.
"RTN","IBTUBO1",19,0)
 I $G(IBOE),$$ENCL^IBAMTS2(IBOE)["1" G OPTQ ; "ao^ir^sc^swa^mst^hnc^cv^shad" encounter.
"RTN","IBTUBO1",20,0)
 S IBDAY=$E(IBDT,1,7),IBNAME=$P($G(^DPT(DFN,0)),U),IBQUIT="",IBNCF=0
"RTN","IBTUBO1",21,0)
 ;
"RTN","IBTUBO1",22,0)
 ; - If no encounter, see if add/edits or registrations are not billable.
"RTN","IBTUBO1",23,0)
 I '$G(IBOE) D NOOE G:IBQUIT OPTQ
"RTN","IBTUBO1",24,0)
 ;
"RTN","IBTUBO1",25,0)
 ; - If encounter was dated prior to Reasonable Charges (9/1/99) and
"RTN","IBTUBO1",26,0)
 ;   the claim was not authorized before end of reporting period, add
"RTN","IBTUBO1",27,0)
 ;   encounter Tort Rate to Unbilled Outpatient Amount
"RTN","IBTUBO1",28,0)
 I IBDAY<2990901 D PRERC,SETUB:'IBQUIT G OPTQ
"RTN","IBTUBO1",29,0)
 I '$G(IBOE) G OPTQ ; If still no encounter, quit.
"RTN","IBTUBO1",30,0)
 ;
"RTN","IBTUBO1",31,0)
 ; - If encounter was made after start of Reasonable Charges (9/1/99)
"RTN","IBTUBO1",32,0)
 ;   and any of the encounter's procedure codes have no corresponding
"RTN","IBTUBO1",33,0)
 ;   inst. or prof. claims that were not authorized before end of the
"RTN","IBTUBO1",34,0)
 ;   reporting period, add the charges for the procedures to the
"RTN","IBTUBO1",35,0)
 ;   Unbilled Outpatient Amount.
"RTN","IBTUBO1",36,0)
 ;
"RTN","IBTUBO1",37,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBTUBO1",38,0)
 D GETCPT^SDOE(IBOE,"IBYY") G:'$G(IBYY) OPTQ ; Check CPT qty.
"RTN","IBTUBO1",39,0)
 ;
"RTN","IBTUBO1",40,0)
 ; - Determine the encounter division.
"RTN","IBTUBO1",41,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBTUBO1",42,0)
 ;
"RTN","IBTUBO1",43,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBTUBO1",44,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",45,0)
 . ;
"RTN","IBTUBO1",46,0)
 . ; - Get procedure pointer and code.
"RTN","IBTUBO1",47,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBTUBO1",48,0)
 . ;
"RTN","IBTUBO1",49,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBTUBO1",50,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBTUBO1",51,0)
 . ;
"RTN","IBTUBO1",52,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBTUBO1",53,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBTUBO1",54,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBTUBO1",55,0)
 . ;
"RTN","IBTUBO1",56,0)
 . ; - Eliminate components without a charge.
"RTN","IBTUBO1",57,0)
 . S IBCPTSUM(IBZ)=+$G(IBCPT(IBZ,1))+$G(IBCPT(IBZ,2))
"RTN","IBTUBO1",58,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBTUBO1",59,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBTUBO1",60,0)
 ;
"RTN","IBTUBO1",61,0)
 I '$D(IBCPT) G OPTQ ; Quit if no billable procedures remain.
"RTN","IBTUBO1",62,0)
 ;
"RTN","IBTUBO1",63,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBTUBO1",64,0)
 ;   from the array those procedures that have been billed.
"RTN","IBTUBO1",65,0)
 S IBXX=0
"RTN","IBTUBO1",66,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",67,0)
 . ;
"RTN","IBTUBO1",68,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",69,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBTUBO1",70,0)
 . I $P(IBDATA,U,2)=2 S IBMRA(IBXX)=IBDATA ; MRA request
"RTN","IBTUBO1",71,0)
 . S IBNCF=IBNCF+1
"RTN","IBTUBO1",72,0)
 . ;
"RTN","IBTUBO1",73,0)
 . ; If Compile/Store & Not authorized/MRA requested before reporting period - Quit.
"RTN","IBTUBO1",74,0)
 . I $G(IBCOMP),$S('$G(IBMRA(IBXX)):$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO1",75,0)
 . ;
"RTN","IBTUBO1",76,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBTUBO1",77,0)
 . ;   all procedures billed on the claim.
"RTN","IBTUBO1",78,0)
 . S IBYY=0
"RTN","IBTUBO1",79,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBTUBO1",80,0)
 . . ;
"RTN","IBTUBO1",81,0)
 . . ; - Get the procedure code and charge type for the revenue code.
"RTN","IBTUBO1",82,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBTUBO1",83,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBTUBO1",84,0)
 . . S IBTCHRG=$P(IBYD,U,4)
"RTN","IBTUBO1",85,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBTUBO1",86,0)
 . . I $G(IBMRA(IBXX))'="" S:$D(IBCPT(IBZ)) IBCPT("MRA",IBZ,IBCT)=1 Q
"RTN","IBTUBO1",87,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBTUBO1",88,0)
 . . I $G(IBTCHRG)'<$G(IBCPTSUM(IBZ)) K IBCPT(IBZ) Q
"RTN","IBTUBO1",89,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT) Q
"RTN","IBTUBO1",90,0)
 . . K IBCPT(IBZ)
"RTN","IBTUBO1",91,0)
 ;
"RTN","IBTUBO1",92,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBTUBO1",93,0)
 I '$D(IBCPT) G OPTQ
"RTN","IBTUBO1",94,0)
 ;
"RTN","IBTUBO1",95,0)
 ; - The encounter has unbilled procedure codes. Increment the counters
"RTN","IBTUBO1",96,0)
 ;   as per the extract specification.
"RTN","IBTUBO1",97,0)
 ;
"RTN","IBTUBO1",98,0)
 ; - Count the encounter (element 37N).
"RTN","IBTUBO1",99,0)
 S IBMRA=$S($D(IBCPT("MRA")):1,1:0)
"RTN","IBTUBO1",100,0)
 S:'IBMRA IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",101,0)
 S:$G(IBXTRACT) IB(14)=IB(14)+1
"RTN","IBTUBO1",102,0)
 ;
"RTN","IBTUBO1",103,0)
 ; - Look at all the unbilled procedures.
"RTN","IBTUBO1",104,0)
 S IBZ=0 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBTUBO1",105,0)
 . ;
"RTN","IBTUBO1",106,0)
 . S IBMRA=$S($D(IBCPT("MRA",IBZ)):1,1:0)
"RTN","IBTUBO1",107,0)
 . ; - Count the procedure (element 37M).
"RTN","IBTUBO1",108,0)
 . I $G(IBXTRACT) S IB(13)=IB(13)+1
"RTN","IBTUBO1",109,0)
 . ;
"RTN","IBTUBO1",110,0)
 . ; - Count the institutional component (element 37I) and its
"RTN","IBTUBO1",111,0)
 . ;   corresponding charge amount (element 37J).
"RTN","IBTUBO1",112,0)
 . I $G(IBCPT(IBZ,1)) D
"RTN","IBTUBO1",113,0)
 . . S:'IBMRA IBUNB("CPTMS-I")=IBUNB("CPTMS-I")+1
"RTN","IBTUBO1",114,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,1)
"RTN","IBTUBO1",115,0)
 . . S:IBMRA IBUNB("CPTMS-I-MRA")=IBUNB("CPTMS-I-MRA")+1
"RTN","IBTUBO1",116,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,1)
"RTN","IBTUBO1",117,0)
 . . I $G(IBXTRACT) S IB(9)=IB(9)+1,IB(10)=IB(10)+IBCPT(IBZ,1)
"RTN","IBTUBO1",118,0)
 . ;
"RTN","IBTUBO1",119,0)
 . ; - Count the professional component (element 37K) and its
"RTN","IBTUBO1",120,0)
 . ;   corresponding charge amount (element 37L).
"RTN","IBTUBO1",121,0)
 . I $G(IBCPT(IBZ,2)) D
"RTN","IBTUBO1",122,0)
 . . S:'IBMRA IBUNB("CPTMS-P")=IBUNB("CPTMS-P")+1
"RTN","IBTUBO1",123,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,2)
"RTN","IBTUBO1",124,0)
 . . S:IBMRA IBUNB("CPTMS-P-MRA")=IBUNB("CPTMS-P-MRA")+1
"RTN","IBTUBO1",125,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,2)
"RTN","IBTUBO1",126,0)
 . . I $G(IBXTRACT) S IB(11)=IB(11)+1,IB(12)=IB(12)+IBCPT(IBZ,2)
"RTN","IBTUBO1",127,0)
 ;
"RTN","IBTUBO1",128,0)
 D SETUB
"RTN","IBTUBO1",129,0)
 ;
"RTN","IBTUBO1",130,0)
OPTQ Q
"RTN","IBTUBO1",131,0)
 ;
"RTN","IBTUBO1",132,0)
PRERC ; - Determine if a pre-9/1/99 visit has been billed.
"RTN","IBTUBO1",133,0)
 ;   Output: IBQUIT will be set to 1 if the visit has been billed.
"RTN","IBTUBO1",134,0)
 ;   *Pre-set variables DFN,IBDAY,IBDET,IBNAME,IBNCF,IBQUIT,IBRT,IBEDT
"RTN","IBTUBO1",135,0)
 ;    and IB/IBUNB arrays required.
"RTN","IBTUBO1",136,0)
 ; NO MRA Extract code needed for pre-RC processes
"RTN","IBTUBO1",137,0)
 I $D(^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY)) S IBQUIT=1 G PRCQ
"RTN","IBTUBO1",138,0)
 ;
"RTN","IBTUBO1",139,0)
 ; - Check all outpatient claims on event date.
"RTN","IBTUBO1",140,0)
 N IBXX S IBXX=0
"RTN","IBTUBO1",141,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D  Q:IBQUIT
"RTN","IBTUBO1",142,0)
 . ;
"RTN","IBTUBO1",143,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",144,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""  S IBNCF=IBNCF+1
"RTN","IBTUBO1",145,0)
 . ;
"RTN","IBTUBO1",146,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO1",147,0)
 . I $G(IBCOMP),$P(IBDATA,U,3)>IBEDT Q
"RTN","IBTUBO1",148,0)
 . ;
"RTN","IBTUBO1",149,0)
 . S IBQUIT=1 ; Episode has been billed-set flag.
"RTN","IBTUBO1",150,0)
 ;
"RTN","IBTUBO1",151,0)
 I IBQUIT G PRCQ ; Episode was billed.
"RTN","IBTUBO1",152,0)
 ;
"RTN","IBTUBO1",153,0)
 ; - The episode was not billed; determine the tort rate for a visit
"RTN","IBTUBO1",154,0)
 ;   and increment the number and amount of unbilled pre-9/1/99 visits.
"RTN","IBTUBO1",155,0)
 S IBXX=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"OUTPATIENT VISIT DATE")
"RTN","IBTUBO1",156,0)
 S IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBXX
"RTN","IBTUBO1",157,0)
 S IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",158,0)
 ;
"RTN","IBTUBO1",159,0)
 I $G(IBXTRACT) S IB(7)=IB(7)+1,IB(8)=IB(8)+IBXX ; For DM extract.
"RTN","IBTUBO1",160,0)
 ;
"RTN","IBTUBO1",161,0)
PRCQ Q
"RTN","IBTUBO1",162,0)
 ;
"RTN","IBTUBO1",163,0)
NOOE ; - If there is no encounter, look for add/edits or registrations.
"RTN","IBTUBO1",164,0)
 ;   Output: IBQUIT will be set to 1 if the visit is non-billable.
"RTN","IBTUBO1",165,0)
 ;   *Pre-set variable IBQUIT required.
"RTN","IBTUBO1",166,0)
 N IBDATA,IBSC,IBSDV,IBXX,IBZERR
"RTN","IBTUBO1",167,0)
 ;
"RTN","IBTUBO1",168,0)
 ; - Check if for a visit at the visit date/time.
"RTN","IBTUBO1",169,0)
 S IBXX=$$EXOE^SDOE(DFN,IBDT,IBDT,"","IBZERR")
"RTN","IBTUBO1",170,0)
 I IBXX D CKENC^IBTUBOU(IBXX,"",.IBQUIT) G NOOEQ
"RTN","IBTUBO1",171,0)
 ;
"RTN","IBTUBO1",172,0)
 ; - Find next add/edit stop code encounter after IBDT.
"RTN","IBTUBO1",173,0)
 D SCAN^IBTUBOU(DFN,IBDT,.IBQUERY)
"RTN","IBTUBO1",174,0)
 ;
"RTN","IBTUBO1",175,0)
NOOEQ Q
"RTN","IBTUBO1",176,0)
 ;
"RTN","IBTUBO1",177,0)
SETUB ; Set array elements for the detail report.
"RTN","IBTUBO1",178,0)
 ; Array element format:
"RTN","IBTUBO1",179,0)
 ; NON-MRA:
"RTN","IBTUBO1",180,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX)=bill status^claim type
"RTN","IBTUBO1",181,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX,CPT no)=inst rate^prof rate
"RTN","IBTUBO1",182,0)
 ; MRA:
"RTN","IBTUBO1",183,0)
 ;  ^TMP($J,"IBTUB-OPT_MRA",NAME@@DFN,DATE,IBX,CPT no)=1 if MRA req
"RTN","IBTUBO1",184,0)
 ;
"RTN","IBTUBO1",185,0)
 N IBCTF,IBCPTNM
"RTN","IBTUBO1",186,0)
 I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX)=IBNCF
"RTN","IBTUBO1",187,0)
 I $G(IBINMRA),$O(IBCPT("MRA","")) S ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX)=1
"RTN","IBTUBO1",188,0)
 G:'IBDET SETUBQ
"RTN","IBTUBO1",189,0)
 I $D(IBCPT) S IBXX=0 F  S IBXX=$O(IBCPT(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",190,0)
 . S IBCPTNM=$$CODEC^ICPTCOD(IBXX) I IBCPTNM=-1 S IBCPTNM="UNK"
"RTN","IBTUBO1",191,0)
 . S IBCTF=$S($G(IBCPT(IBXX,1)):"I",1:"")
"RTN","IBTUBO1",192,0)
 . S IBCTF=$S($G(IBCPT(IBXX,2)):$S(IBCTF="I":"I,P",1:"P"),1:IBCTF)
"RTN","IBTUBO1",193,0)
 . I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=+$G(IBCPT(IBXX,1))_U_+$G(IBCPT(IBXX,2))_U_IBCTF
"RTN","IBTUBO1",194,0)
 . I $G(IBINMRA) S:$G(IBCPT("MRA",IBXX)) ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=1
"RTN","IBTUBO1",195,0)
 ;
"RTN","IBTUBO1",196,0)
SETUBQ Q
"RTN","IBTUTL5")
0^17^B53886235^n/a
"RTN","IBTUTL5",1,0)
IBTUTL5 ;ALB/OEC - CLAIMS TRACKING UTILITY ROUTINE ;16-JAN-09
"RTN","IBTUTL5",2,0)
 ;;2.0;INTEGRATED BILLING;**399**;21-MAR-94;Build 8
"RTN","IBTUTL5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTUTL5",4,0)
 ;
"RTN","IBTUTL5",5,0)
OPT(IBOE,IBDT) ; - Has the outpatient encounter been billed?
"RTN","IBTUTL5",6,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBTUTL5",7,0)
 ;          IBDT=event date CLAIMS TRACKING(#356)
"RTN","IBTUTL5",8,0)
 ;       
"RTN","IBTUTL5",9,0)
 ;   ;  *Pre-set variables: DFN=patient IEN, RIMB=bill rate
"RTN","IBTUTL5",10,0)
 ;                         
"RTN","IBTUTL5",11,0)
 ;
"RTN","IBTUTL5",12,0)
 I '$G(DFN)!('$G(IBDT))!('$G(RIMB))!('$G(IBOE)) S IBRTN=0 G OPTQ
"RTN","IBTUTL5",13,0)
 N IBCN,IBCPT,IBCT,IBDATA,IBDAY,IBDIV,IBXX,IBYD,IBYY,IBZ,IBMRA,IBCPTSUM,IBTCHRG,IBRTN,IBAUTH
"RTN","IBTUTL5",14,0)
 ; - Check to be sure the encounter is billable.
"RTN","IBTUTL5",15,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) S IBRTN=0 G OPTQ ;  Became inpatient same day.
"RTN","IBTUTL5",16,0)
 I $$ENCL^IBAMTS2(IBOE)["1"  S IBRTN=0 G OPTQ ; "ao^ir^sc^swa^mst^hnc^cv^shad" encounter.
"RTN","IBTUTL5",17,0)
 ;
"RTN","IBTUTL5",18,0)
 ;
"RTN","IBTUTL5",19,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBTUTL5",20,0)
 D GETCPT^SDOE(IBOE,"IBYY") I '$G(IBYY) S IBRTN=0 G OPTQ ; Check CPT qty.
"RTN","IBTUTL5",21,0)
 ;
"RTN","IBTUTL5",22,0)
 ; - Determine the encounter division.
"RTN","IBTUTL5",23,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBTUTL5",24,0)
 ;
"RTN","IBTUTL5",25,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBTUTL5",26,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBTUTL5",27,0)
 . ;
"RTN","IBTUTL5",28,0)
 . ; - Get procedure pointer and code.
"RTN","IBTUTL5",29,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBTUTL5",30,0)
 . ;
"RTN","IBTUTL5",31,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBTUTL5",32,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBTUTL5",33,0)
 . ;
"RTN","IBTUTL5",34,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBTUTL5",35,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(RIMB,3,IBDT,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBTUTL5",36,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(RIMB,3,IBDT,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBTUTL5",37,0)
 . ;
"RTN","IBTUTL5",38,0)
 . ; - Eliminate components without a charge.
"RTN","IBTUTL5",39,0)
 . S IBCPTSUM(IBZ)=+$G(IBCPT(IBZ,1))+$G(IBCPT(IBZ,2))
"RTN","IBTUTL5",40,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBTUTL5",41,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBTUTL5",42,0)
 ;
"RTN","IBTUTL5",43,0)
 I '$D(IBCPT) S IBRTN=0 G OPTQ ; Quit if no billable procedures remain.
"RTN","IBTUTL5",44,0)
 ;
"RTN","IBTUTL5",45,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBTUTL5",46,0)
 ;   from the array those procedures that have been billed.
"RTN","IBTUTL5",47,0)
 S IBXX=0 S IBDAY=$E(IBDT,1,7)
"RTN","IBTUTL5",48,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBTUTL5",49,0)
 . ;
"RTN","IBTUTL5",50,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUTL5",51,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBTUTL5",52,0)
 . S IBAUTH=$P($G(IBDATA),U,2)
"RTN","IBTUTL5",53,0)
 . I $G(IBAUTH)<2&($G(IBAUTH)>5) Q
"RTN","IBTUTL5",54,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBTUTL5",55,0)
 . ;   all procedures billed on the claim.
"RTN","IBTUTL5",56,0)
 . S IBYY=0
"RTN","IBTUTL5",57,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBTUTL5",58,0)
 . . ;
"RTN","IBTUTL5",59,0)
 . . ; - Get the procedure code,charge type and total charges for the revenue code.
"RTN","IBTUTL5",60,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBTUTL5",61,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBTUTL5",62,0)
 . . S IBTCHRG=$P(IBYD,U,4)
"RTN","IBTUTL5",63,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBTUTL5",64,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBTUTL5",65,0)
 . . I $G(IBTCHRG)'<$G(IBCPTSUM(IBZ)) K IBCPT(IBZ)
"RTN","IBTUTL5",66,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT)
"RTN","IBTUTL5",67,0)
 ;
"RTN","IBTUTL5",68,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBTUTL5",69,0)
 I '$D(IBCPT) S IBRTN=0 G OPTQ
"RTN","IBTUTL5",70,0)
 ; - If there are billable procedures return TOTAL AMOUNT
"RTN","IBTUTL5",71,0)
 I $D(IBCPT) S (IBZ,IBCT,IBRTN)=0
"RTN","IBTUTL5",72,0)
 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBTUTL5",73,0)
 .F  S IBCT=$O(IBCPT(IBZ,IBCT)) Q:'IBCT  D
"RTN","IBTUTL5",74,0)
 ..S IBRTN=IBRTN+IBCPT(IBZ,IBCT)
"RTN","IBTUTL5",75,0)
 ;
"RTN","IBTUTL5",76,0)
OPTQ K IBCPT Q IBRTN
"RTN","IBTUTL5",77,0)
 ;
"RTN","IBTUTL5",78,0)
 ;
"RTN","IBTUTL5",79,0)
ADMDT(DFN,EPDT) ;
"RTN","IBTUTL5",80,0)
 ;
"RTN","IBTUTL5",81,0)
 ;Returns the next Admission dt for CLAIMS TRACKING entry with RNB 72 HR Rule
"RTN","IBTUTL5",82,0)
 ;      input : DFN (required) := Pointer to PATIENT file (#2)
"RTN","IBTUTL5",83,0)
 ;                                from CLAIMS TRACKING file (#356)
"RTN","IBTUTL5",84,0)
 ;              EPDT (required): = Episode dt field (.06) from
"RTN","IBTUTL5",85,0)
 ;                                 CLAIMS TRAKCING file (#356)
"RTN","IBTUTL5",86,0)
 ;
"RTN","IBTUTL5",87,0)
 ;      output : If patient has an admission after episode dt
"RTN","IBTUTL5",88,0)
 ;               IBADMDT := ADMISSION DT
"RTN","IBTUTL5",89,0)
 ;               IF NO ADMISSION DT IBADMDT := NULL
"RTN","IBTUTL5",90,0)
 ;
"RTN","IBTUTL5",91,0)
 K IBADMDT,ADMID,EPID,ADMIFN
"RTN","IBTUTL5",92,0)
 I '$G(DFN)!('$G(EPDT)) S IBADMDT="" G ADMDTQ
"RTN","IBTUTL5",93,0)
 I '$D(^DGPM("ATID1",DFN)) S IBADMDT="" G ADMDTQ ; REF DBIA419
"RTN","IBTUTL5",94,0)
 S ADMID=9999999.999999-EPDT,EPID=ADMID,ADMIFN=0,X=0
"RTN","IBTUTL5",95,0)
 F X=1:1:1 S ADMID=$O(^DGPM("ATID1",DFN,ADMID),-1) Q:'ADMID  D
"RTN","IBTUTL5",96,0)
 .S ADMIFN=+$O(^DGPM("ATID1",DFN,ADMID,0))
"RTN","IBTUTL5",97,0)
 .I $D(^DGPM(ADMIFN,0)) S IBADMDT=$E($P(^(0),U),1,7)
"RTN","IBTUTL5",98,0)
 ; 
"RTN","IBTUTL5",99,0)
 ;Format date for PRINTED and EXCEL RNB report
"RTN","IBTUTL5",100,0)
 ;
"RTN","IBTUTL5",101,0)
 I $G(IBEXCEL) S IBADMDT=$$DT^IBJD($G(IBADMDT),1)
"RTN","IBTUTL5",102,0)
 I '$G(IBEXCEL) S IBADMDT=$$DTE^IBJDB22($G(IBADMDT))
"RTN","IBTUTL5",103,0)
 ;
"RTN","IBTUTL5",104,0)
ADMDTQ ;
"RTN","IBTUTL5",105,0)
 ;
"RTN","IBTUTL5",106,0)
 S:'$D(IBADMDT) IBADMDT=""
"RTN","IBTUTL5",107,0)
 Q IBADMDT
"RTN","IBTUTL5",108,0)
 ;
"RTN","IBTUTL5",109,0)
 ;
"RTN","IBTUTL5",110,0)
RXAMT(EPDT,RXIEN) ;
"RTN","IBTUTL5",111,0)
 ;
"RTN","IBTUTL5",112,0)
 ; -- input epdt  := episode date from CLAIMS TRACKING(#356)
"RTN","IBTUTL5",113,0)
 ;          RXIEN  := RX field from CLAIMS TRACKING(#356)
"RTN","IBTUTL5",114,0)
 ;          
"RTN","IBTUTL5",115,0)
 ; -- output 0 if RX billed or -1 if RX not billed
"RTN","IBTUTL5",116,0)
 ; 
"RTN","IBTUTL5",117,0)
 I '$G(EPDT)!('$G(IBRX)) S IBRTN=-1 G RXAMTQ
"RTN","IBTUTL5",118,0)
 N IBRXCLM,IBCLM,IBRTN,IBAUTH,IBMRA
"RTN","IBTUTL5",119,0)
 S IBRX=$$FILE^IBRXUTL(RXIEN,.01)
"RTN","IBTUTL5",120,0)
 S IBRXCLM=0
"RTN","IBTUTL5",121,0)
 F  S IBRXCLM=$O(^IBA(362.4,"B",IBRX,IBRXCLM)) Q:'IBRXCLM  D
"RTN","IBTUTL5",122,0)
 .I $P(^IBA(362.4,IBRXCLM,0),U,3)=EPDT S IBCLM=$P(^(0),U,2)
"RTN","IBTUTL5",123,0)
 I '$G(IBCLM) S IBRTN=-1 G RXAMTQ
"RTN","IBTUTL5",124,0)
 I $G(IBCLM) S IBAUTH=$P($$CKBIL^IBTUBOU(IBCLM),U,2)
"RTN","IBTUTL5",125,0)
 I $G(IBAUTH)>2!($G(IBAUTH)<5) S IBRTN=0 G RXAMTQ
"RTN","IBTUTL5",126,0)
 E  S IBRTN=-1 G RXAMTQ
"RTN","IBTUTL5",127,0)
 ;
"RTN","IBTUTL5",128,0)
RXAMTQ Q IBRTN
"RTN","IBTUTL5",129,0)
 ;
"RTN","IBTUTL5",130,0)
 ;
"RTN","IBTUTL5",131,0)
PRSAMT(EPDT,PRST) ;
"RTN","IBTUTL5",132,0)
 ;
"RTN","IBTUTL5",133,0)
 ;    input epdt := episode date from CLAIMS TRACKING(#356)
"RTN","IBTUTL5",134,0)
 ;          prst := prosthetic item from CLAIMS TRACKING(#356)
"RTN","IBTUTL5",135,0)
 ;          
"RTN","IBTUTL5",136,0)
 ;    ouptut 0 if prosthetics item billed or -1 if item not billed
"RTN","IBTUTL5",137,0)
 ;
"RTN","IBTUTL5",138,0)
 I '$G(EPDT)!('$G(PRST)) S IBRTN=-1 G PRSAMTQ
"RTN","IBTUTL5",139,0)
 N IBPRCLM,IBCLM,IBRTN,IBAUTH,IBMRA
"RTN","IBTUTL5",140,0)
 S IBPRCLM=0
"RTN","IBTUTL5",141,0)
 F  S IBPRCLM=$O(^IBA(362.5,"AE",PRST,IBPRCLM)) Q:'IBPRCLM  D
"RTN","IBTUTL5",142,0)
 .S IBCLM=$P(^IBA(362.5,IBPRCLM,0),U,2)
"RTN","IBTUTL5",143,0)
 I '$G(IBCLM) S IBRTN=-1 G PRSAMTQ
"RTN","IBTUTL5",144,0)
 I $G(IBCLM) S IBAUTH=$P(^DGCR(399,IBCLM,0),U,13)
"RTN","IBTUTL5",145,0)
 I $G(IBAUTH)'<2&($G(IBAUTH)'>5) S IBRTN=0 G PRSAMTQ
"RTN","IBTUTL5",146,0)
 E  S IBRTN=-1 G PRSAMTQ
"RTN","IBTUTL5",147,0)
 ;
"RTN","IBTUTL5",148,0)
 ;
"RTN","IBTUTL5",149,0)
PRSAMTQ Q IBRTN
"RTN","IBTUTL5",150,0)
 ;
"RTN","IBTUTL5",151,0)
 ;
"RTN","IBTUTL5",152,0)
RELBIL(IEN,EPDT,DFN,ENCTYP) ;
"RTN","IBTUTL5",153,0)
 ;
"RTN","IBTUTL5",154,0)
 ; ---- Input IEN    := IEN of encounter
"RTN","IBTUTL5",155,0)
 ;            epdt   := Episode Date from CLAIMS TRACKING
"RTN","IBTUTL5",156,0)
 ;            DFN    := Patient file (#2) IEN
"RTN","IBTUTL5",157,0)
 ;            ENCTYP := Type of encounter 1=inpatient 2=Outpatient
"RTN","IBTUTL5",158,0)
 ;                      3=Prosthetics 4=Prescription
"RTN","IBTUTL5",159,0)
 ;                      
"RTN","IBTUTL5",160,0)
 ;      Output Related Bills IF NO RELATED BILL IBRTN=""
"RTN","IBTUTL5",161,0)
 ;                           IF RELATED BILLS 
"RTN","IBTUTL5",162,0)
 ;                           IBRTN= #OF RELATED BILLS;RELATED BILL
"RTN","IBTUTL5",163,0)
 ;      
"RTN","IBTUTL5",164,0)
 I '$G(EPDT)!('$G(DFN))!('$G(ENCTYP)) S IBRTN=-1 G RELBILQ
"RTN","IBTUTL5",165,0)
 ;
"RTN","IBTUTL5",166,0)
 I ENCTYP=1 S IBRTN=$$INPTREL(DFN,EPDT) G RELBILQ
"RTN","IBTUTL5",167,0)
 ;
"RTN","IBTUTL5",168,0)
 I ENCTYP=2 S IBRTN=$$OPTREL(DFN,EPDT) G RELBILQ
"RTN","IBTUTL5",169,0)
 ;
"RTN","IBTUTL5",170,0)
 I ENCTYP=3 S IBRTN=$$RXREL(IEN,EPDT) G RELBILQ
"RTN","IBTUTL5",171,0)
 ;
"RTN","IBTUTL5",172,0)
 I ENCTYP=4 S IBRTN=$$PROSREL(IEN,EPDT) G RELBILQ
"RTN","IBTUTL5",173,0)
 ;
"RTN","IBTUTL5",174,0)
RELBILQ Q IBRTN
"RTN","IBTUTL5",175,0)
 ;
"RTN","IBTUTL5",176,0)
 ;
"RTN","IBTUTL5",177,0)
INPTREL(DFN,EPDT) ;
"RTN","IBTUTL5",178,0)
 ;
"RTN","IBTUTL5",179,0)
 ;
"RTN","IBTUTL5",180,0)
 I '$G(DFN)!('$G(EPDT)) S IBRTN=-1 Q IBRTN
"RTN","IBTUTL5",181,0)
 N IBCLM,IBDATA,IBN0,IBCLM,IBCNT,IBRTN
"RTN","IBTUTL5",182,0)
 S (IBCLM,IBCNT,IBRTN)=0
"RTN","IBTUTL5",183,0)
 F  S IBCLM=$O(^DGCR(399,"C",DFN,IBCLM)) Q:'IBCLM  D
"RTN","IBTUTL5",184,0)
 .Q:$P($G(^DGCR(399,IBCLM,0)),U,5)'=1
"RTN","IBTUTL5",185,0)
 .Q:$E($P($G(^DGCR(399,IBCLM,0)),U,3),1,7)'=EPDT  S IBDATA=$$CKBIL^IBTUBOU(IBCLM,1) Q:'+IBDATA
"RTN","IBTUTL5",186,0)
 .S IBN0=^DGCR(399,IBCLM,0) Q:IBRTN[$P(^(0),U)
"RTN","IBTUTL5",187,0)
 .S IBCNT=IBCNT+1,$P(IBRTN,";",1)=IBCNT
"RTN","IBTUTL5",188,0)
 .S $P(IBRTN,";",IBCNT+1)=$P(IBN0,U)_$S($P(IBN0,U,27)=1:"i",$P(IBN0,U,27)=2:"p",1:"")
"RTN","IBTUTL5",189,0)
 I IBRTN=0 S IBRTN=-1
"RTN","IBTUTL5",190,0)
 Q IBRTN
"RTN","IBTUTL5",191,0)
 ;
"RTN","IBTUTL5",192,0)
 ;
"RTN","IBTUTL5",193,0)
OPTREL(DFN,EPDT) ;
"RTN","IBTUTL5",194,0)
 ;
"RTN","IBTUTL5",195,0)
 ;
"RTN","IBTUTL5",196,0)
 I '$G(DFN)!('$G(EPDT)) S IBRTN=-1 Q IBRTN
"RTN","IBTUTL5",197,0)
 N IBXX,IBCNT,IBN0,IBDATA,IBXX,IBCNT,IBRTN
"RTN","IBTUTL5",198,0)
 S (IBXX,IBCNT,IBRTN)=0
"RTN","IBTUTL5",199,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,EPDT,IBXX)) Q:'IBXX  D
"RTN","IBTUTL5",200,0)
 .S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:'+IBDATA
"RTN","IBTUTL5",201,0)
 .S IBN0=^DGCR(399,IBXX,0)
"RTN","IBTUTL5",202,0)
 .Q:IBRTN[$P(^(0),U)
"RTN","IBTUTL5",203,0)
 .S IBCNT=IBCNT+1,$P(IBRTN,";",1)=IBCNT
"RTN","IBTUTL5",204,0)
 .S $P(IBRTN,";",IBCNT+1)=$P(IBN0,U)_$S($P(IBN0,U,27)=1:"i",$P(IBN0,U,27)=2:"p",1:"")
"RTN","IBTUTL5",205,0)
 I IBRTN=0 S IBRTN=-1
"RTN","IBTUTL5",206,0)
 Q IBRTN
"RTN","IBTUTL5",207,0)
 ;
"RTN","IBTUTL5",208,0)
 ;
"RTN","IBTUTL5",209,0)
PROSREL(IEN,EPDT) ;
"RTN","IBTUTL5",210,0)
 ;
"RTN","IBTUTL5",211,0)
 ;INPUT     IEN=POINTER TO FILE 660
"RTN","IBTUTL5",212,0)
 ;          EPDT=DATE PROS ITEM ISSUED
"RTN","IBTUTL5",213,0)
 ;
"RTN","IBTUTL5",214,0)
 ;OUTPUT    IBRTN=-1 IF NOT BILL FOUND OR
"RTN","IBTUTL5",215,0)
 ;                 # OF RELATED;RELATED BILLS
"RTN","IBTUTL5",216,0)
 ;
"RTN","IBTUTL5",217,0)
 N IBXX,IBCLM,IBYY,IBCNT,IBRTN,IBDATA,IBN0
"RTN","IBTUTL5",218,0)
 I '$G(IEN) S IBRTN=-1 Q IBRTN
"RTN","IBTUTL5",219,0)
 S (IBXX,IBYY,IBCNT,IBRTN)=0
"RTN","IBTUTL5",220,0)
 F  S IBXX=$O(^IBA(362.5,"AE",IEN,IBXX)) Q:'IBXX  D
"RTN","IBTUTL5",221,0)
 .S IBCLM=$P(^IBA(362.5,IBXX,0),U,2)
"RTN","IBTUTL5",222,0)
 .I '$D(^DGCR(399,IBCLM,0)) Q
"RTN","IBTUTL5",223,0)
 .S IBN0=^DGCR(399,IBCLM,0) Q:IBRTN[$P(^(0),U)
"RTN","IBTUTL5",224,0)
 .I $P(IBN0,U,13)<2!($P(IBN0,U,13)>5) Q
"RTN","IBTUTL5",225,0)
 .S IBCNT=IBCNT+1,$P(IBRTN,";",1)=IBCNT
"RTN","IBTUTL5",226,0)
 .S $P(IBRTN,";",IBCNT+1)=$P(IBN0,U)_$S($P(IBN0,U,27)=1:"i",$P(IBN0,U,27)=2:"p",1:"")
"RTN","IBTUTL5",227,0)
 I IBRTN=0 S IBRTN=-1
"RTN","IBTUTL5",228,0)
 Q IBRTN
"RTN","IBTUTL5",229,0)
 ;
"RTN","IBTUTL5",230,0)
 ;
"RTN","IBTUTL5",231,0)
RXREL(IEN,EPDT) ;
"RTN","IBTUTL5",232,0)
 ;
"RTN","IBTUTL5",233,0)
 ;
"RTN","IBTUTL5",234,0)
 N IBCLM,IBYY,IBRX,IBRTN,IBCNT
"RTN","IBTUTL5",235,0)
 I '$G(IEN) S IBRTN=-1 Q IBRTN
"RTN","IBTUTL5",236,0)
 S IBRX=$$FILE^IBRXUTL(IEN,.01)
"RTN","IBTUTL5",237,0)
 S (IBYY,IBCNT,IBRTN)=0
"RTN","IBTUTL5",238,0)
 F  S IBYY=$O(^IBA(362.4,"B",IBRX,IBYY)) Q:'IBYY  D
"RTN","IBTUTL5",239,0)
 .Q:$P(^IBA(362.4,IBYY,0),U,3)'=EPDT  S IBCLM=$P(^(0),U,2)
"RTN","IBTUTL5",240,0)
 .S IBDATA=$$CKBIL^IBTUBOU(IBCLM) Q:'+IBDATA
"RTN","IBTUTL5",241,0)
 .S IBN0=^DGCR(399,IBCLM,0) Q:IBRTN[$P(^(0),U)
"RTN","IBTUTL5",242,0)
 .S IBCNT=IBCNT+1,$P(IBRTN,";",1)=IBCNT
"RTN","IBTUTL5",243,0)
 .S $P(IBRTN,";",IBCNT+1)=$P(IBN0,U)_$S($P(IBN0,U,27)=1:"i",$P(IBN0,U,27)=2:"p",1:"")
"RTN","IBTUTL5",244,0)
 I IBRTN=0 S IBRTN=-1
"RTN","IBTUTL5",245,0)
 Q IBRTN
"RTN","IBTUTL5",246,0)
 ;
"RTN","IBTUTL5",247,0)
 ;
"RTN","IBY399P")
0^18^B7558055^n/a
"RTN","IBY399P",1,0)
IBY399P ;ALB/ARH - IB*2*399 POST-INSTALL ; 2/27/09
"RTN","IBY399P",2,0)
 ;;2.0;INTEGRATED BILLING;**399**;21-MAR-94;Build 8
"RTN","IBY399P",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY399P",4,0)
 ;
"RTN","IBY399P",5,0)
 Q
"RTN","IBY399P",6,0)
POST ;
"RTN","IBY399P",7,0)
 N IBA S IBA="IB*2*399 Post-Install .....",IBA(3)="" D MSG(IBA) K IBA
"RTN","IBY399P",8,0)
 ;
"RTN","IBY399P",9,0)
 D RIDER ; add LTC rider (#355.6)
"RTN","IBY399P",10,0)
 D CV ;    add LTC coverage (#355.31)
"RTN","IBY399P",11,0)
 ;
"RTN","IBY399P",12,0)
 D FTF^IBY399P3 ;   add and convert FTFs (#355.13)
"RTN","IBY399P",13,0)
 ;
"RTN","IBY399P",14,0)
 D RNB^IBY399P1 ;   add and update RNBs (#356.8)
"RTN","IBY399P",15,0)
 ;
"RTN","IBY399P",16,0)
 D XREF ; index new AE xref (#362.5,.04)
"RTN","IBY399P",17,0)
 ;
"RTN","IBY399P",18,0)
 S IBA="IB*2*399 Post-Install Complete",IBA(3)="" D MSG(IBA) K IBA
"RTN","IBY399P",19,0)
 Q
"RTN","IBY399P",20,0)
 ;
"RTN","IBY399P",21,0)
 ;
"RTN","IBY399P",22,0)
RIDER ; add LONG TERM CARE Insurance Rider (#355.6)
"RTN","IBY399P",23,0)
 N IBA,IBNAME,DD,DO,DLAYGO,DIC,X,Y,IBDA,IBARR,IBX
"RTN","IBY399P",24,0)
 ;
"RTN","IBY399P",25,0)
 S IBNAME="LONG TERM CARE COVERAGE"
"RTN","IBY399P",26,0)
 I $O(^IBE(355.6,"B",IBNAME,0)) S IBA=">> "_IBNAME_" Insurance Rider (355.6) exists, no change" D MSG(IBA) Q
"RTN","IBY399P",27,0)
 ;
"RTN","IBY399P",28,0)
 K DD,DO S DLAYGO=355.6,DIC="^IBE(355.6,",DIC(0)="L",X=IBNAME D FILE^DICN K DIC S IBDA=+Y I Y<1 K X,Y Q
"RTN","IBY399P",29,0)
 ;
"RTN","IBY399P",30,0)
 S IBA=">> "_IBNAME_" Insurance Rider (#355.6) added" D MSG(IBA)
"RTN","IBY399P",31,0)
 Q
"RTN","IBY399P",32,0)
 ;
"RTN","IBY399P",33,0)
 ;
"RTN","IBY399P",34,0)
CV ; add LONG TERM CARE Coverage (#355.31)
"RTN","IBY399P",35,0)
 N IBA,IBNAME,IBRIDER,IBRDA,IBX,DD,DO,DLAYGO,DIC,X,Y,IBDA,DIE,DA,DR,IBFILE
"RTN","IBY399P",36,0)
 S IBFILE=" Plan Limitation Category (#355.31) "
"RTN","IBY399P",37,0)
 ;
"RTN","IBY399P",38,0)
 S IBNAME="LONG TERM CARE",IBRIDER="LONG TERM CARE COVERAGE"
"RTN","IBY399P",39,0)
 S IBRDA=$O(^IBE(355.6,"B",IBRIDER,0)) I 'IBRDA S IBA="=> "_IBNAME_IBFILE_"Not Added, Rider Missing" D MSG(IBA) Q
"RTN","IBY399P",40,0)
 ;
"RTN","IBY399P",41,0)
 I $O(^IBE(355.31,"B",IBNAME,0)) S IBA=">> "_IBNAME_IBFILE_"exists, no change" D MSG(IBA) Q
"RTN","IBY399P",42,0)
 ;
"RTN","IBY399P",43,0)
 K DD,DO S DLAYGO=355.31,DIC="^IBE(355.31,",DIC(0)="L",X=IBNAME D FILE^DICN K DIC S IBDA=+Y I Y<1 K X,Y Q
"RTN","IBY399P",44,0)
 ;
"RTN","IBY399P",45,0)
 S DIE="^IBE(355.31,",DA=+IBDA,DR=".02////Long Term Care coverage;.03////"_IBRDA D ^DIE K DIE,DA,DR,X,Y
"RTN","IBY399P",46,0)
 ;
"RTN","IBY399P",47,0)
 S IBA=">> "_IBNAME_IBFILE_"added" D MSG(IBA)
"RTN","IBY399P",48,0)
 ;
"RTN","IBY399P",49,0)
 Q
"RTN","IBY399P",50,0)
 ;
"RTN","IBY399P",51,0)
XREF ; re-index new AE cross reference on IB BILL/CLAIMS PROSTHETICS (#362.5), RECORD (.04)
"RTN","IBY399P",52,0)
 N DIK,DIC,X,Y D MSG(">> Indexing new 'AE' xref IB BILL/CLAIMS PROSTHETICS, RECORD (#362.5,.04)")
"RTN","IBY399P",53,0)
 S DIK="^IBA(362.5,",DIK(1)=".04^AE" D ENALL^DIK
"RTN","IBY399P",54,0)
 Q
"RTN","IBY399P",55,0)
 ;
"RTN","IBY399P",56,0)
MSG(IBA) ;
"RTN","IBY399P",57,0)
 N IBM S IBM(1)="     ",IBM(2)="     "_$G(IBA)
"RTN","IBY399P",58,0)
 D MES^XPDUTL(.IBM)
"RTN","IBY399P",59,0)
 Q
"RTN","IBY399P1")
0^19^B40098573^n/a
"RTN","IBY399P1",1,0)
IBY399P1 ;ALB/ARH - IB*2*399 POST-INSTALL - RNB UPDATE ; 16-OCT-2008
"RTN","IBY399P1",2,0)
 ;;2.0;INTEGRATED BILLING;**399**;21-MAR-94;Build 8
"RTN","IBY399P1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY399P1",4,0)
 ;
"RTN","IBY399P1",5,0)
 ; Update and Add to Reasons Not Billable List (356.8)
"RTN","IBY399P1",6,0)
 ; This is the post-init routine to update the Reasons Not Billable, it checks that all standard RNBs exist, 
"RTN","IBY399P1",7,0)
 ; inactivates all non-standard RNBs and some selected standard RNBs, updates some ECME flags,
"RTN","IBY399P1",8,0)
 ; adds the Code field to existing RNBs and adds many new RNBs with their related Code and ECME flags
"RTN","IBY399P1",9,0)
 ;
"RTN","IBY399P1",10,0)
 Q
"RTN","IBY399P1",11,0)
 ;
"RTN","IBY399P1",12,0)
RNB ; Update and Add to Reasons Not Billable (356.8)
"RTN","IBY399P1",13,0)
 ;
"RTN","IBY399P1",14,0)
 D OLDCHK ; check that all standard RNBs exist (39)
"RTN","IBY399P1",15,0)
 D NONSTD ; inactivate all existing non-standard RNBs
"RTN","IBY399P1",16,0)
 ;
"RTN","IBY399P1",17,0)
 D INAC ; inactivate existing RNBs (5)
"RTN","IBY399P1",18,0)
 D ECME ; update ECME Paper Flag on existing RNBs (2)
"RTN","IBY399P1",19,0)
 D CODE ; add Code field data to existing RNBs (33)
"RTN","IBY399P1",20,0)
 D NEWR ; add new RNBs (51)
"RTN","IBY399P1",21,0)
 Q
"RTN","IBY399P1",22,0)
 ;
"RTN","IBY399P1",23,0)
OLDCHK ; check that standard RNB's exist on the site's system (set INCLUDE to check old and new RNBs)
"RTN","IBY399P1",24,0)
 N IBI,IBLN,IBNM,IBTOT,IBTNF S (IBTOT,IBTNF)=0
"RTN","IBY399P1",25,0)
 ;
"RTN","IBY399P1",26,0)
 D MSG(" "),MSG("Check for the 39 Standard Reasons Not Billable (#356.8)...",1)
"RTN","IBY399P1",27,0)
 ;
"RTN","IBY399P1",28,0)
 F IBI=1:1 S IBLN=$P($T(RNB+IBI^IBY399P2),";;",2,999) Q:IBLN=""  I +IBLN D
"RTN","IBY399P1",29,0)
 . S IBNM=$P(IBLN,U,6) I $P(IBLN,U,2)="NEW",'$G(INCLUDE) Q
"RTN","IBY399P1",30,0)
 . ;
"RTN","IBY399P1",31,0)
 . S IBTOT=IBTOT+1 I '$O(^IBE(356.8,"B",IBNM,0)) S IBTNF=IBTNF+1 D MSG(IBNM_" not found")
"RTN","IBY399P1",32,0)
 ;
"RTN","IBY399P1",33,0)
 I 'IBTNF D MSG("No Errors: All "_IBTOT_" Standard RNBs Found",2)
"RTN","IBY399P1",34,0)
 I +IBTNF D MSG("ERRORS Found: "_IBTNF_" of "_IBTOT_" Standard RNBs Not Found",2)
"RTN","IBY399P1",35,0)
 Q
"RTN","IBY399P1",36,0)
 ;
"RTN","IBY399P1",37,0)
NONSTD ; check site for any active Non-Standard RNB's and Inactivate them (356.8, .05)
"RTN","IBY399P1",38,0)
 N IBI,IBLN,IBNM,RNBS,IBRNB0,IBTOT,IBTCH S (IBTOT,IBTCH)=0
"RTN","IBY399P1",39,0)
 ;
"RTN","IBY399P1",40,0)
 D MSG("Inactivate Any Active Non-Standard Reasons Not Billable (#356.8,.05)...",1)
"RTN","IBY399P1",41,0)
 ;
"RTN","IBY399P1",42,0)
 ; get list of all standard RNB's
"RTN","IBY399P1",43,0)
 F IBI=1:1 S IBLN=$P($T(RNB+IBI^IBY399P2),";;",2,999) Q:IBLN=""  S IBNM=$P(IBLN,U,6) I IBNM'="" S RNBS(IBNM)=""
"RTN","IBY399P1",44,0)
 ;
"RTN","IBY399P1",45,0)
 ; compare standard RNB's with sites RNB's, inactivate any non-standard
"RTN","IBY399P1",46,0)
 S IBI=0 F  S IBI=$O(^IBE(356.8,IBI)) Q:'IBI  D
"RTN","IBY399P1",47,0)
 . S IBRNB0=$G(^IBE(356.8,IBI,0)),IBNM=$P(IBRNB0,U,1) I +$P(IBRNB0,U,5) Q
"RTN","IBY399P1",48,0)
 . ;
"RTN","IBY399P1",49,0)
 . S IBTOT=IBTOT+1 I $D(RNBS(IBNM)) Q
"RTN","IBY399P1",50,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" not standard and has been inactivated") D EDIT(IBI,".02////@;.03////@;.05////1")
"RTN","IBY399P1",51,0)
 ;
"RTN","IBY399P1",52,0)
 I 'IBTCH D MSG("No Change: No Active Non-Standard RNBs Found",2)
"RTN","IBY399P1",53,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" Active Non-Standard RNBs Found and Inactivated",2)
"RTN","IBY399P1",54,0)
 Q
"RTN","IBY399P1",55,0)
 ;
"RTN","IBY399P1",56,0)
INAC ; Inactivate existing standard RNB's (356.8, .05) also remove ECME flags (356.8, .02, .03)
"RTN","IBY399P1",57,0)
 N IBI,IBLN,IBNM,IBRNB,IBRNB0,IBTOT,IBTNC,IBTNF,IBTCH S (IBTOT,IBTNC,IBTNF,IBTCH)=0
"RTN","IBY399P1",58,0)
 ;
"RTN","IBY399P1",59,0)
 D MSG("Inactivate 5 Active Standard Reasons Not Billable (#356.8,.05)...",1)
"RTN","IBY399P1",60,0)
 ;
"RTN","IBY399P1",61,0)
 F IBI=1:1 S IBLN=$P($T(INA+IBI^IBY399P2),";;",2,999) Q:'IBLN  I $P(IBLN,U,2)="INA" D
"RTN","IBY399P1",62,0)
 . S IBNM=$P(IBLN,U,6) S IBRNB=$O(^IBE(356.8,"B",IBNM,0)),IBRNB0=$G(^IBE(356.8,+IBRNB,0))
"RTN","IBY399P1",63,0)
 . ;
"RTN","IBY399P1",64,0)
 . S IBTOT=IBTOT+1 I +$P(IBRNB0,U,5) S IBTNC=IBTNC+1 Q
"RTN","IBY399P1",65,0)
 . I 'IBRNB S IBTNF=IBTNF+1 D MSG(IBNM_" not found") Q
"RTN","IBY399P1",66,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" has been inactivated") D EDIT(IBRNB,".02////@;.03////@;.05////1")
"RTN","IBY399P1",67,0)
 ;
"RTN","IBY399P1",68,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" RNBs Already Inactive"_$$LN(IBTNF,"Not Found"),2)
"RTN","IBY399P1",69,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" RNBs Inactivated"_$$LN(IBTNC,"Already Inactive")_$$LN(IBTNF,"Not Found"),2)
"RTN","IBY399P1",70,0)
 Q
"RTN","IBY399P1",71,0)
 ;
"RTN","IBY399P1",72,0)
ECME ; Reset ECME flags (356.8, .03)
"RTN","IBY399P1",73,0)
 N IBI,IBLN,IBNM,IBRNB,IBRNB0,IBTOT,IBTNC,IBTNF,IBTCH S (IBTOT,IBTNC,IBTNF,IBTCH)=0
"RTN","IBY399P1",74,0)
 ;
"RTN","IBY399P1",75,0)
 D MSG("Reset 2 Reason Not Billable ECME Paper Flags (#356.8,.03)...",1)
"RTN","IBY399P1",76,0)
 ;
"RTN","IBY399P1",77,0)
 F IBI=1:1 S IBLN=$P($T(OLD+IBI^IBY399P2),";;",2,999) Q:'IBLN  I $P(IBLN,U,2)="OLD",$P(IBLN,U,5)'="" D
"RTN","IBY399P1",78,0)
 . S IBNM=$P(IBLN,U,6) S IBRNB=$O(^IBE(356.8,"B",IBNM,0)),IBRNB0=$G(^IBE(356.8,+IBRNB,0))
"RTN","IBY399P1",79,0)
 . ;
"RTN","IBY399P1",80,0)
 . S IBTOT=IBTOT+1 I $P(IBRNB0,U,3)=$P(IBLN,U,5) S IBTNC=IBTNC+1 Q
"RTN","IBY399P1",81,0)
 . I 'IBRNB S IBTNF=IBTNF+1 D MSG(IBNM_" not found") Q
"RTN","IBY399P1",82,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" ECME Paper Flag to "_$$YN($P(IBLN,U,5))) D EDIT(IBRNB,".03////"_+$P(IBLN,U,5))
"RTN","IBY399P1",83,0)
 ;
"RTN","IBY399P1",84,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" RNB ECME Paper Flags Already Reset"_$$LN(IBTNF,"Not Found"),2)
"RTN","IBY399P1",85,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" RNB ECME Paper Flags Reset"_$$LN(IBTNC,"Already Reset")_$$LN(IBTNF,"Not Found"),2)
"RTN","IBY399P1",86,0)
 Q
"RTN","IBY399P1",87,0)
 ;
"RTN","IBY399P1",88,0)
 ;
"RTN","IBY399P1",89,0)
CODE ; Set Code on Existing RNB's (356.8,.04)
"RTN","IBY399P1",90,0)
 N IBI,IBLN,IBNM,IBRNB,IBRNB0,IBTOT,IBTNC,IBTNF,IBTCH S (IBTOT,IBTNC,IBTNF,IBTCH)=0
"RTN","IBY399P1",91,0)
 ;
"RTN","IBY399P1",92,0)
 D MSG("Add Code to 33 Existing RNBs (#356.8,.04)...",1)
"RTN","IBY399P1",93,0)
 ;
"RTN","IBY399P1",94,0)
 F IBI=1:1 S IBLN=$P($T(OLD+IBI^IBY399P2),";;",2,999) Q:'IBLN  I $P(IBLN,U,2)="OLD",$P(IBLN,U,3)'="" D
"RTN","IBY399P1",95,0)
 . S IBNM=$P(IBLN,U,6) S IBRNB=$O(^IBE(356.8,"B",IBNM,0)),IBRNB0=$G(^IBE(356.8,+IBRNB,0))
"RTN","IBY399P1",96,0)
 . ;
"RTN","IBY399P1",97,0)
 . S IBTOT=IBTOT+1 I $P(IBRNB0,U,4)=$P(IBLN,U,3) S IBTNC=IBTNC+1 Q
"RTN","IBY399P1",98,0)
 . I 'IBRNB S IBTNF=IBTNF+1 D MSG(IBNM_" not found") Q
"RTN","IBY399P1",99,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" code added "_$P(IBLN,U,3)) D EDIT(IBRNB,".04///"_$P(IBLN,U,3))
"RTN","IBY399P1",100,0)
 ;
"RTN","IBY399P1",101,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" Existing RNB Codes Already Set"_$$LN(IBTNF,"Not Found"),2)
"RTN","IBY399P1",102,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" RNBs Code Set"_$$LN(IBTNC,"Codes Already Set")_$$LN(IBTNF,"Not Found"),2)
"RTN","IBY399P1",103,0)
 Q
"RTN","IBY399P1",104,0)
 ;
"RTN","IBY399P1",105,0)
 ;
"RTN","IBY399P1",106,0)
NEWR ; Add new RNBs (if RNB already exists ensure Code is set)
"RTN","IBY399P1",107,0)
 N IBI,IBJ,IBLN,IBNM,IBRNB,IBRNB0,IBTOT,IBTNC,IBTCH,DIE,DIC,DR,DA,DD,DO,X,Y,DLAYGO,DINUM
"RTN","IBY399P1",108,0)
 S (IBTOT,IBTNC,IBTCH)=0 S DLAYGO=356.8
"RTN","IBY399P1",109,0)
 ;
"RTN","IBY399P1",110,0)
 D MSG("Add 58 New Reasons Not Billable (#356.8)...",1)
"RTN","IBY399P1",111,0)
 ;
"RTN","IBY399P1",112,0)
 F IBI=1:1 S IBLN=$P($T(NEW+IBI^IBY399P2),";;",2,999) Q:'IBLN  I $P(IBLN,U,2)="NEW" D
"RTN","IBY399P1",113,0)
 . S IBNM=$P(IBLN,U,6) S IBRNB=$O(^IBE(356.8,"B",IBNM,0)),IBRNB0=$G(^IBE(356.8,+IBRNB,0))
"RTN","IBY399P1",114,0)
 . F IBJ=39:1 I '$D(^IBE(356.8,IBJ,0)),IBJ'=72,IBJ'=90 Q
"RTN","IBY399P1",115,0)
 . ;
"RTN","IBY399P1",116,0)
 . S IBTOT=IBTOT+1 I +IBRNB S IBTNC=IBTNC+1 D:$P(IBRNB0,U,4)'=$P(IBLN,U,3) EDIT(IBRNB,".04///"_$P(IBLN,U,3)) Q
"RTN","IBY399P1",117,0)
 . ;
"RTN","IBY399P1",118,0)
 . S DIC("DR")=".02////"_$P(IBLN,U,4)_";.03////"_$P(IBLN,U,5)_";.04///"_$P(IBLN,U,3)
"RTN","IBY399P1",119,0)
 . S DIC="^IBE(356.8,",DIC(0)="L",X=IBNM,DINUM=IBJ D FILE^DICN K DIC I 'Y D MSG(IBNM_" Not Added, ERROR ****") Q
"RTN","IBY399P1",120,0)
 . S IBTCH=IBTCH+1 D MSG(IBNM_" added")
"RTN","IBY399P1",121,0)
 ;
"RTN","IBY399P1",122,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" New RNBs Already Exist",2)
"RTN","IBY399P1",123,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" New RNBs Added"_$$LN(IBTNC,"Already Exist"),2)
"RTN","IBY399P1",124,0)
 Q
"RTN","IBY399P1",125,0)
 ;
"RTN","IBY399P1",126,0)
 ;
"RTN","IBY399P1",127,0)
 ;
"RTN","IBY399P1",128,0)
MSG(X,Y) ; set lines into patch install message, X is message, Y is line type (1-header, 2-result line)
"RTN","IBY399P1",129,0)
 N CNT,IBA S CNT=1,IBA(1)="        " I +$G(Y) S CNT=2,IBA(2)=IBA(1) I +$G(Y)=1 S IBA(2)="     >> "
"RTN","IBY399P1",130,0)
 S IBA(CNT)=IBA(CNT)_$G(X) D MES^XPDUTL(.IBA) K IBA
"RTN","IBY399P1",131,0)
 Q
"RTN","IBY399P1",132,0)
 ;
"RTN","IBY399P1",133,0)
LN(NUM,TXT) Q $S('$G(NUM):"",1:", "_$G(NUM)_" "_$G(TXT))
"RTN","IBY399P1",134,0)
 ;
"RTN","IBY399P1",135,0)
YN(X) Q $S(+$G(X):"Yes",1:"No")
"RTN","IBY399P1",136,0)
 ;
"RTN","IBY399P1",137,0)
EDIT(DA,DR) ; edit RNB field
"RTN","IBY399P1",138,0)
 N DIE,DIC,X,Y I +$G(DA),$G(DR)'="" S DIE="^IBE(356.8," D ^DIE K DA,DR
"RTN","IBY399P1",139,0)
 Q
"RTN","IBY399P2")
0^20^B20211575^n/a
"RTN","IBY399P2",1,0)
IBY399P2 ;ALB/ARH - IB*2*399 POST-INSTALL - RNB LIST ; 16-OCT-2008
"RTN","IBY399P2",2,0)
 ;;2.0;INTEGRATED BILLING;**399**;21-MAR-94;Build 8
"RTN","IBY399P2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY399P2",4,0)
 ;
"RTN","IBY399P2",5,0)
 ;
"RTN","IBY399P2",6,0)
RNB ;;#^Status^Code^ECME Flag^ECME Paper Flag^RNB Name
"RTN","IBY399P2",7,0)
INA ;; 
"RTN","IBY399P2",8,0)
 ;;6^INA^^^^SERVICE NOT COVERED
"RTN","IBY399P2",9,0)
 ;;19^INA^^^^BILL PURGED
"RTN","IBY399P2",10,0)
 ;;23^INA^^^^INSUFFICIENT DOCUMENTATION
"RTN","IBY399P2",11,0)
 ;;25^INA^^^^NON-BILLABLE PROVIDER (RESID.)
"RTN","IBY399P2",12,0)
 ;;26^INA^^^^NON-BILLABLE PROVIDER (OTHER)
"RTN","IBY399P2",13,0)
OLD ;; 
"RTN","IBY399P2",14,0)
 ;;1^OLD^CV01^^^NOT INSURED
"RTN","IBY399P2",15,0)
 ;;2^OLD^VA01^^^SC TREATMENT
"RTN","IBY399P2",16,0)
 ;;3^OLD^VA02^^^AGENT ORANGE
"RTN","IBY399P2",17,0)
 ;;4^OLD^VA03^^^IONIZING RADIATION
"RTN","IBY399P2",18,0)
 ;;5^OLD^VA04^^^SOUTHWEST ASIA
"RTN","IBY399P2",19,0)
 ;;7^OLD^CV02^^^COVERAGE CANCELED
"RTN","IBY399P2",20,0)
 ;;8^OLD^VA05^^^NEEDS SC DETERMINATION
"RTN","IBY399P2",21,0)
 ;;9^OLD^MC01^^^NON-BILLABLE APPOINTMENT TYPE
"RTN","IBY399P2",22,0)
 ;;10^OLD^RX01^^^INVALID PRESCRIPTION ENTRY
"RTN","IBY399P2",23,0)
 ;;11^OLD^RX02^^^REFILL ON VISIT DATE
"RTN","IBY399P2",24,0)
 ;;12^OLD^RX03^^^PRESCRIPTION DELETED
"RTN","IBY399P2",25,0)
 ;;13^OLD^RX04^^^PRESCRIPTION NOT RELEASED
"RTN","IBY399P2",26,0)
 ;;14^OLD^RX05^^^DRUG NOT BILLABLE
"RTN","IBY399P2",27,0)
 ;;15^OLD^CV03^^^HMO POLICY
"RTN","IBY399P2",28,0)
 ;;16^OLD^MC02^^^REFUSES TO SIGN RELEASE (ROI)
"RTN","IBY399P2",29,0)
 ;;17^OLD^MC03^^^NON-BILLABLE STOP CODE
"RTN","IBY399P2",30,0)
 ;;18^OLD^MC04^^^RESEARCH VISIT
"RTN","IBY399P2",31,0)
 ;;20^OLD^MC05^^^NON-BILLABLE CLINIC
"RTN","IBY399P2",32,0)
 ;;21^OLD^VA06^^^MILITARY SEXUAL TRAUMA
"RTN","IBY399P2",33,0)
 ;;22^OLD^MC06^^^CREDENTIALING ISSUE
"RTN","IBY399P2",34,0)
 ;;24^OLD^DC01^^^NO DOCUMENTATION
"RTN","IBY399P2",35,0)
 ;;27^OLD^MC07^^^OTHER COMPLIANCE
"RTN","IBY399P2",36,0)
 ;;28^OLD^CV04^^^OUT OF NETWORK (PPO)
"RTN","IBY399P2",37,0)
 ;;29^OLD^VA07^^^HEAD/NECK CANCER
"RTN","IBY399P2",38,0)
 ;;30^OLD^VA08^^^COMBAT VETERAN
"RTN","IBY399P2",39,0)
 ;;31^OLD^CV05^^^MRA REC'D. NO SEC RESP EXISTS
"RTN","IBY399P2",40,0)
 ;;32^OLD^CV06^^^MRA REC'D. SEC NOT BILLED
"RTN","IBY399P2",41,0)
 ;;33^OLD^RX06^^0^90 DAY RX FILL NOT COVERED
"RTN","IBY399P2",42,0)
 ;;34^OLD^RX07^^0^NOT A CONTRACTED PROVIDER
"RTN","IBY399P2",43,0)
 ;;35^OLD^RX08^^^INVALID MULTIPLES PER DAY SUPP
"RTN","IBY399P2",44,0)
 ;;36^OLD^RX09^^^REFILL TOO SOON
"RTN","IBY399P2",45,0)
 ;;37^OLD^RX10^^^INVALID NDC FROM CMOP
"RTN","IBY399P2",46,0)
 ;;38^OLD^VA09^^^PROJECT 112/SHAD
"RTN","IBY399P2",47,0)
 ;;999^OLD^^^^OTHER
"RTN","IBY399P2",48,0)
NEW ;; 
"RTN","IBY399P2",49,0)
 ;;39^NEW^RX11^1^0^NON COVERED DRUG PER PLAN
"RTN","IBY399P2",50,0)
 ;;40^NEW^CV07^1^0^FILING TIMEFRAME NOT MET
"RTN","IBY399P2",51,0)
 ;;41^NEW^MC08^^^GLOBAL SURGERY
"RTN","IBY399P2",52,0)
 ;;42^NEW^BL01^^^CHARGES SPLIT
"RTN","IBY399P2",53,0)
 ;;43^NEW^MC09^^^PRE-CERT NOT OBTAINED
"RTN","IBY399P2",54,0)
 ;;44^NEW^MC10^^^DUPLICATE ENCOUNTER
"RTN","IBY399P2",55,0)
 ;;45^NEW^CV08^^^MEDICARE REPLACEMENT POLICY
"RTN","IBY399P2",56,0)
 ;;46^NEW^CV09^^^COVERED BY MEDICARE AT 100%
"RTN","IBY399P2",57,0)
 ;;47^NEW^CV10^^^BENEFITS MAXED
"RTN","IBY399P2",58,0)
 ;;48^NEW^VA10^^^C&P EXAM/REGISTRY EXAM
"RTN","IBY399P2",59,0)
 ;;49^NEW^MC11^^^TELEPHONE ENCOUNTER
"RTN","IBY399P2",60,0)
 ;;50^NEW^DC02^^^NO TX PROVIDED/ADVICE ONLY
"RTN","IBY399P2",61,0)
 ;;51^NEW^MC12^^^ROI NOT OBTAINED
"RTN","IBY399P2",62,0)
 ;;52^NEW^DC03^^^UNSIGNED DOCUMENT
"RTN","IBY399P2",63,0)
 ;;53^NEW^CV11^^^CONCURRENT CARE
"RTN","IBY399P2",64,0)
 ;;54^NEW^MC13^^^72 HOUR RULE
"RTN","IBY399P2",65,0)
 ;;55^NEW^CV12^^^CUSTODIAL/RESIDENTIAL CARE
"RTN","IBY399P2",66,0)
 ;;56^NEW^BL02^^^OBSERVATION-OP BILLED
"RTN","IBY399P2",67,0)
 ;;57^NEW^BL03^^^BILLED INSTITUTIONAL ONLY
"RTN","IBY399P2",68,0)
 ;;58^NEW^BL04^^^BILLED PROFESSIONAL ONLY
"RTN","IBY399P2",69,0)
 ;;59^NEW^CV13^^^NO OUTPATIENT COVERAGE
"RTN","IBY399P2",70,0)
 ;;60^NEW^CV14^^^NO INPATIENT COVERAGE
"RTN","IBY399P2",71,0)
 ;;61^NEW^CV15^1^0^NO PHARMACY COVERAGE
"RTN","IBY399P2",72,0)
 ;;62^NEW^CV16^^^NO DENTAL COVERAGE
"RTN","IBY399P2",73,0)
 ;;63^NEW^CV17^^^NO MENTAL HEALTH COVERAGE
"RTN","IBY399P2",74,0)
 ;;64^NEW^CV18^^^NO LTC COVERAGE
"RTN","IBY399P2",75,0)
 ;;65^NEW^MN01^^^MED NEC-DX NOT COVERED
"RTN","IBY399P2",76,0)
 ;;66^NEW^MN02^^^MED NEC-CPT NOT COVERED
"RTN","IBY399P2",77,0)
 ;;67^NEW^MN03^^^MED NEC-LCD EDIT
"RTN","IBY399P2",78,0)
 ;;68^NEW^MN04^^^MED NEC-OTHER
"RTN","IBY399P2",79,0)
 ;;69^NEW^CV19^^^MEDICARE EXCLUDED SERVICE
"RTN","IBY399P2",80,0)
 ;;70^NEW^MC14^^^RESIDENT SUPERVISION NOT MET
"RTN","IBY399P2",81,0)
 ;;71^NEW^MC15^^^ANCILLARY PROVIDER AT CBOC
"RTN","IBY399P2",82,0)
 ;;72^NEW^CV20^^^NON-COVERED PROVIDER
"RTN","IBY399P2",83,0)
 ;;73^NEW^DC04^^^NO DIAGNOSIS/SYMPTOMS IN NOTE
"RTN","IBY399P2",84,0)
 ;;74^NEW^DC05^^^NO CHIEF COMPLAINT
"RTN","IBY399P2",85,0)
 ;;75^NEW^DC06^^^NOTE NOT WRITTEN TIMELY
"RTN","IBY399P2",86,0)
 ;;76^NEW^DC07^^^NO PHYSICIAN ORDER
"RTN","IBY399P2",87,0)
 ;;77^NEW^DC08^^^NO PLAN OF CARE
"RTN","IBY399P2",88,0)
 ;;78^NEW^DC09^^^STUDENT NOTE ONLY
"RTN","IBY399P2",89,0)
 ;;79^NEW^BL05^^^ALL BILLABLE CPT CODES BILLED
"RTN","IBY399P2",90,0)
 ;;80^NEW^BL06^^^NO INPT PROF FEES BILLED
"RTN","IBY399P2",91,0)
 ;;81^NEW^BL07^^^REPETITIVE SERVICES
"RTN","IBY399P2",92,0)
 ;;82^NEW^MC16^^^PENDING CODE SET UPDATE
"RTN","IBY399P2",93,0)
 ;;83^NEW^MC17^^^PENDING RC CHARGE UPDATE
"RTN","IBY399P2",94,0)
 ;;84^NEW^MC18^1^0^NPI/TAXONOMY ISSUES
"RTN","IBY399P2",95,0)
 ;;85^NEW^RX12^1^0^RX DUR REJECT
"RTN","IBY399P2",96,0)
 ;;86^NEW^RX13^1^0^RX PRIOR AUTH NOT OBTAINED
"RTN","IBY399P2",97,0)
 ;;87^NEW^RX14^1^0^RX MEDICARE PART D
"RTN","IBY399P2",98,0)
 ;;88^NEW^RX15^1^0^RX DISCOUNT CARD
"RTN","IBY399P2",99,0)
 ;;89^NEW^MC19^1^0^DATE OF BIRTH MISMATCH
"RTN","IBY399P2",100,0)
 ;;90^NEW^DC10^^^NEW PT/NO HX
"RTN","IBY399P2",101,0)
 ;;91^NEW^DC11^^^NEW PT/NO EXAM
"RTN","IBY399P2",102,0)
 ;;92^NEW^DC12^^^NEW PT/NO COMPLEXITY
"RTN","IBY399P2",103,0)
 ;;93^NEW^DC13^^^EST PT/NO HX/NO EXAM
"RTN","IBY399P2",104,0)
 ;;94^NEW^DC14^^^EST PT/NO HX/NO COMPLEXITY
"RTN","IBY399P2",105,0)
 ;;95^NEW^DC15^^^EST PT/NO EXAM/NO COMPLEXITY
"RTN","IBY399P2",106,0)
 ;;96^NEW^CV21^^^NO VISION COVERAGE
"RTN","IBY399P2",107,0)
 ;;
"RTN","IBY399P2",108,0)
 Q
"RTN","IBY399P3")
0^21^B5389442^n/a
"RTN","IBY399P3",1,0)
IBY399P3 ;ALB/ARH - IB*2*399 POST-INSTALL - FTF UPDATE ; 09-MAR-2009
"RTN","IBY399P3",2,0)
 ;;2.0;INTEGRATED BILLING;**399**;21-MAR-94;Build 8
"RTN","IBY399P3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY399P3",4,0)
 ;
"RTN","IBY399P3",5,0)
 ; Add Standard Filing Time Frames to file #355.13
"RTN","IBY399P3",6,0)
 ; Convert Insurance and Plan Filing Time Frames to Standard Filing Time Frames
"RTN","IBY399P3",7,0)
 ;
"RTN","IBY399P3",8,0)
 Q
"RTN","IBY399P3",9,0)
FTF ; Add and Convert to Standard Filing Time Frames
"RTN","IBY399P3",10,0)
 ;
"RTN","IBY399P3",11,0)
 D NEWF ; add Standard Filing Time Frames (#355.13)
"RTN","IBY399P3",12,0)
 D CONVF^IBY399P4 ; Convert Company (#36) and Plan (#355.3) Filing Time Frames
"RTN","IBY399P3",13,0)
 ;
"RTN","IBY399P3",14,0)
 Q
"RTN","IBY399P3",15,0)
 ;
"RTN","IBY399P3",16,0)
NEWF ; Add Standard Filing Time Frames to the new file INSURANCE FILING TIME FRAME (#355.13)
"RTN","IBY399P3",17,0)
 N IBI,IBLN,IBNAME,IBVAL,IBDA,DIC,DIE,DR,DA,DD,DO,X,Y,DLAYGO,IBTOT,IBTNC,IBTCH S (IBTOT,IBTNC,IBTCH)=0
"RTN","IBY399P3",18,0)
 ;
"RTN","IBY399P3",19,0)
 D MSG(" "),MSG("Add 8 Standard Filing Time Frames (#355.13)...",1)
"RTN","IBY399P3",20,0)
 ;
"RTN","IBY399P3",21,0)
 F IBI=1:1 S IBLN=$P($T(NEW+IBI),";;",2,999) Q:IBLN=""  D
"RTN","IBY399P3",22,0)
 . S IBNAME=$P(IBLN,U,1),IBVAL=+$P(IBLN,U,2)
"RTN","IBY399P3",23,0)
 . ;
"RTN","IBY399P3",24,0)
 . S IBTOT=IBTOT+1 I $O(^IBE(355.13,"B",IBNAME,0)) S IBTNC=IBTNC+1 Q
"RTN","IBY399P3",25,0)
 . ;
"RTN","IBY399P3",26,0)
 . K DD,DO S DLAYGO=355.13,DIC="^IBE(355.13,",DIC(0)="L",X=IBNAME D FILE^DICN K DIC S IBDA=+Y I Y<1 K X,Y Q
"RTN","IBY399P3",27,0)
 . ;
"RTN","IBY399P3",28,0)
 . I +IBVAL S DIE="^IBE(355.13,",DA=+IBDA,DR=".02////"_IBVAL D ^DIE K DIE,DA,DR,X,Y
"RTN","IBY399P3",29,0)
 . ;
"RTN","IBY399P3",30,0)
 . S IBTCH=IBTCH+1 D MSG(IBNAME_" added")
"RTN","IBY399P3",31,0)
 ;
"RTN","IBY399P3",32,0)
 I 'IBTCH D MSG("No Change: "_IBTNC_" of "_IBTOT_" New FTFs Already Exist",2)
"RTN","IBY399P3",33,0)
 I +IBTCH D MSG("Updated: "_IBTCH_" of "_IBTOT_" New FTFs Added"_$S(+IBTNC:", "_IBTNC_" Already Exist",1:""),2)
"RTN","IBY399P3",34,0)
 Q
"RTN","IBY399P3",35,0)
 ;
"RTN","IBY399P3",36,0)
 ;
"RTN","IBY399P3",37,0)
MSG(X,Y) ; set lines into patch install message, X is message, Y is line type (1-header, 2-result line)
"RTN","IBY399P3",38,0)
 N CNT,IBA S CNT=1,IBA(1)="        " I +$G(Y) S CNT=2,IBA(2)=IBA(1) I +$G(Y)=1 S IBA(2)="     >> "
"RTN","IBY399P3",39,0)
 S IBA(CNT)=IBA(CNT)_$G(X) D MES^XPDUTL(.IBA) K IBA
"RTN","IBY399P3",40,0)
 Q
"RTN","IBY399P3",41,0)
 ;
"RTN","IBY399P3",42,0)
 ;
"RTN","IBY399P3",43,0)
NEW ; List of Standard Filing Time Frames to be added (#355.31)
"RTN","IBY399P3",44,0)
 ;;DAYS^1
"RTN","IBY399P3",45,0)
 ;;MONTH(S)^1
"RTN","IBY399P3",46,0)
 ;;YEAR(S)^1
"RTN","IBY399P3",47,0)
 ;;DAYS PLUS ONE YEAR^1
"RTN","IBY399P3",48,0)
 ;;DAYS OF FOLLOWING YEAR^1
"RTN","IBY399P3",49,0)
 ;;MONTHS OF FOLLOWING YEAR^1
"RTN","IBY399P3",50,0)
 ;;END OF FOLLOWING YEAR
"RTN","IBY399P3",51,0)
 ;;NO FILING TIME FRAME LIMIT
"RTN","IBY399P3",52,0)
 ;;
"RTN","IBY399P4")
0^25^B24305575^n/a
"RTN","IBY399P4",1,0)
IBY399P4 ;ALB/ARH - IB*2*399 POST-INSTALL - FTF CONVERSION ; 2/27/09
"RTN","IBY399P4",2,0)
 ;;2.0;INTEGRATED BILLING;**399**;21-MAR-94;Build 8
"RTN","IBY399P4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY399P4",4,0)
 ;
"RTN","IBY399P4",5,0)
 Q
"RTN","IBY399P4",6,0)
 ;
"RTN","IBY399P4",7,0)
CONVF ; Convert free text Filing Time Frames to Standard Filing Time Frames
"RTN","IBY399P4",8,0)
 ; if the free text Filing Time Frame exactly matchs a pre-defined text then it is deleted and 
"RTN","IBY399P4",9,0)
 ; the corresponding Standard Filing Time Frame and Value is added, 
"RTN","IBY399P4",10,0)
 ; both Insurance Company and Group Plan Filing Time Frames are converted, active and non-medicare only
"RTN","IBY399P4",11,0)
 N IBA,IBC,IBINS,IBINS0,IBFTF,IBSFTF,DIE,DIC,DA,DR,X,Y S IBC=0
"RTN","IBY399P4",12,0)
 ;
"RTN","IBY399P4",13,0)
 ; Insurance Company Filing Time Frame (#36,.12) converted to Standard Filing Time Frame (.18) and Value (.19)
"RTN","IBY399P4",14,0)
 S (IBC,IBINS)=0 F  S IBINS=$O(^DIC(36,IBINS)) Q:'IBINS  D
"RTN","IBY399P4",15,0)
 . S IBINS0=$G(^DIC(36,IBINS,0)) I '$$ACTIVE(IBINS) Q
"RTN","IBY399P4",16,0)
 . I +$P(IBINS0,U,18) Q
"RTN","IBY399P4",17,0)
 . S IBFTF=$P(IBINS0,U,12) I IBFTF="" Q
"RTN","IBY399P4",18,0)
 . S IBSFTF=$$STND(IBFTF) I 'IBSFTF Q
"RTN","IBY399P4",19,0)
 . ;
"RTN","IBY399P4",20,0)
 . S DR=".12////@;.18////"_+IBSFTF I +$P(IBSFTF,U,3) S DR=DR_";.19////"_+$P(IBSFTF,U,3)
"RTN","IBY399P4",21,0)
 . S DIE="^DIC(36,",DA=IBINS D ^DIE K DIE S IBC=IBC+1
"RTN","IBY399P4",22,0)
 ;
"RTN","IBY399P4",23,0)
 S IBA=">> Insurance Companies (#36) Converted to Standard Filing Time Frames, "_IBC D MSG(IBA)
"RTN","IBY399P4",24,0)
 ;
"RTN","IBY399P4",25,0)
 ; Insurance Plan Filing Time Frame (#355.3,.13) converted to Standard Filing Time Frame (.16) and Value (.17)
"RTN","IBY399P4",26,0)
 S (IBC,IBINS)=0 F  S IBINS=$O(^IBA(355.3,IBINS)) Q:'IBINS  D
"RTN","IBY399P4",27,0)
 . S IBINS0=$G(^IBA(355.3,IBINS,0)) I '$$ACTIVE(+IBINS0,IBINS) Q
"RTN","IBY399P4",28,0)
 . I +$P(IBINS0,U,16) Q
"RTN","IBY399P4",29,0)
 . S IBFTF=$P(IBINS0,U,13) I IBFTF="" Q
"RTN","IBY399P4",30,0)
 . S IBSFTF=$$STND(IBFTF) I 'IBSFTF Q
"RTN","IBY399P4",31,0)
 . ;
"RTN","IBY399P4",32,0)
 . S DR=".13////@;.16////"_+IBSFTF I +$P(IBSFTF,U,3) S DR=DR_";.17////"_+$P(IBSFTF,U,3)
"RTN","IBY399P4",33,0)
 . S DIE="^IBA(355.3,",DA=IBINS D ^DIE K DIE S IBC=IBC+1
"RTN","IBY399P4",34,0)
 ;
"RTN","IBY399P4",35,0)
 S IBA=">> Insurance Plan (#355.3) Converted to Standard Filing Time Frames, "_IBC D MSG(IBA)
"RTN","IBY399P4",36,0)
 ;
"RTN","IBY399P4",37,0)
 Q
"RTN","IBY399P4",38,0)
 ;
"RTN","IBY399P4",39,0)
ACTIVE(IBINS,IBPLN) ; check if the insurance should have the Standard FTF added, active and not medicare
"RTN","IBY399P4",40,0)
 N IBACT,IBINS0,IBPLN0 S IBACT=1
"RTN","IBY399P4",41,0)
 S IBINS0=$G(^DIC(36,+$G(IBINS),0)),IBPLN0=$G(^IBA(355.3,+$G(IBPLN),0))
"RTN","IBY399P4",42,0)
 ;
"RTN","IBY399P4",43,0)
 I +$P(IBINS0,U,5) S IBACT=0
"RTN","IBY399P4",44,0)
 I $P(IBINS0,U,1)["MEDICARE" S IBACT=0
"RTN","IBY399P4",45,0)
 I $G(^IBE(355.2,+$P(IBINS0,U,13),0))["MEDICARE" S IBACT=0
"RTN","IBY399P4",46,0)
 ;
"RTN","IBY399P4",47,0)
 I +$P(IBPLN0,U,11) S IBACT=0
"RTN","IBY399P4",48,0)
 I $P($G(^IBE(355.1,+$P(IBPLN0,U,9),0)),U,3)=5 S IBACT=0
"RTN","IBY399P4",49,0)
 ;
"RTN","IBY399P4",50,0)
 Q IBACT
"RTN","IBY399P4",51,0)
 ;
"RTN","IBY399P4",52,0)
 ;
"RTN","IBY399P4",53,0)
STND(IBFTF) ; return the Standard Filing Time Frame and Value that correspond to the Free Text Filing Time Frame
"RTN","IBY399P4",54,0)
 ; Input:   Filing Time Frame Free Text
"RTN","IBY399P4",55,0)
 ; Returns: Standard FTF pointer (#355.13) ^ Standard FTF Name ^ Standard FTF Value (from input IBFTF)
"RTN","IBY399P4",56,0)
 ; 
"RTN","IBY399P4",57,0)
 N IBSFTF,IBFTV,IBFTU S IBSFTF="" I '$G(IBFTF) G STNDQ
"RTN","IBY399P4",58,0)
 ;
"RTN","IBY399P4",59,0)
 S IBFTF=$$UP^XLFSTR(IBFTF),IBFTV=+IBFTF,IBFTU=$P(IBFTF,IBFTV,2,999) I $E(IBFTU)=" " S IBFTU=$E(IBFTU,2,999)
"RTN","IBY399P4",60,0)
 ;
"RTN","IBY399P4",61,0)
 I IBFTU="D" S IBSFTF="DAYS"_U_IBFTV G STNDQ
"RTN","IBY399P4",62,0)
 I IBFTU="DAYS" S IBSFTF="DAYS"_U_IBFTV G STNDQ
"RTN","IBY399P4",63,0)
 I IBFTU="DAYS DOS" S IBSFTF="DAYS"_U_IBFTV G STNDQ
"RTN","IBY399P4",64,0)
 I IBFTU="DAYS FROM DOS" S IBSFTF="DAYS"_U_IBFTV G STNDQ
"RTN","IBY399P4",65,0)
 ;
"RTN","IBY399P4",66,0)
 I IBFTU="M" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",67,0)
 I IBFTU="MO" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",68,0)
 I IBFTU="MOS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",69,0)
 I IBFTU="MTHS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",70,0)
 I IBFTU="MONTHS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",71,0)
 I IBFTU="MO DOS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",72,0)
 I IBFTU="MOS DOS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",73,0)
 I IBFTU="MONTHS DOS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",74,0)
 I IBFTU="MOS FROM DOS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",75,0)
 I IBFTU="MONTHS FROM DOS" S IBSFTF="MONTH(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",76,0)
 ;
"RTN","IBY399P4",77,0)
 I IBFTU="YR" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",78,0)
 I IBFTU="YRS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",79,0)
 I IBFTU="YEAR" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",80,0)
 I IBFTU="YEARS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",81,0)
 I IBFTU="YR DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",82,0)
 I IBFTU="YRS DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",83,0)
 I IBFTU="YEAR DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",84,0)
 I IBFTU="YEARS DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",85,0)
 I IBFTU="YR FROM DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",86,0)
 I IBFTU="YRS FROM DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",87,0)
 I IBFTU="YEAR FROM DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",88,0)
 I IBFTU="YEARS FROM DOS" S IBSFTF="YEAR(S)"_U_IBFTV G STNDQ
"RTN","IBY399P4",89,0)
 ;
"RTN","IBY399P4",90,0)
 I IBFTF="3-31 FOL YR" S IBSFTF="MONTHS OF FOLLOWING YEAR^3" G STNDQ
"RTN","IBY399P4",91,0)
 I IBFTF="3/31 FOL YR" S IBSFTF="MONTHS OF FOLLOWING YEAR^3" G STNDQ
"RTN","IBY399P4",92,0)
 I IBFTF="3-31 FOLLOWING YR" S IBSFTF="MONTHS OF FOLLOWING YEAR^3" G STNDQ
"RTN","IBY399P4",93,0)
 I IBFTF="3/31 FOLLOWING YR" S IBSFTF="MONTHS OF FOLLOWING YEAR^3" G STNDQ
"RTN","IBY399P4",94,0)
 I IBFTF="3-31 FOLLOWING YEAR" S IBSFTF="MONTHS OF FOLLOWING YEAR^3" G STNDQ
"RTN","IBY399P4",95,0)
 I IBFTF="3/31 FOLLOWING YEAR" S IBSFTF="MONTHS OF FOLLOWING YEAR^3" G STNDQ
"RTN","IBY399P4",96,0)
 ;
"RTN","IBY399P4",97,0)
 I IBFTF="12-31 FOL YR" S IBSFTF="END OF FOLLOWING YEAR" G STNDQ
"RTN","IBY399P4",98,0)
 I IBFTF="12/31 FOL YR" S IBSFTF="END OF FOLLOWING YEAR" G STNDQ
"RTN","IBY399P4",99,0)
 I IBFTF="12-31 FOLLOWING YR" S IBSFTF="END OF FOLLOWING YEAR" G STNDQ
"RTN","IBY399P4",100,0)
 I IBFTF="12/31 FOLLOWING YR" S IBSFTF="END OF FOLLOWING YEAR" G STNDQ
"RTN","IBY399P4",101,0)
 I IBFTF="12-31 FOLLOWING YEAR" S IBSFTF="END OF FOLLOWING YEAR" G STNDQ
"RTN","IBY399P4",102,0)
 I IBFTF="12/31 FOLLOWING YEAR" S IBSFTF="END OF FOLLOWING YEAR" G STNDQ
"RTN","IBY399P4",103,0)
 ;
"RTN","IBY399P4",104,0)
STNDQ I IBSFTF'="" S IBSFTF=$O(^IBE(355.13,"B",$P(IBSFTF,U,1),0))_U_IBSFTF
"RTN","IBY399P4",105,0)
 Q IBSFTF
"RTN","IBY399P4",106,0)
 ;
"RTN","IBY399P4",107,0)
MSG(IBA) ;
"RTN","IBY399P4",108,0)
 N IBM S IBM(1)="     ",IBM(2)="     "_$G(IBA)
"RTN","IBY399P4",109,0)
 D MES^XPDUTL(.IBM)
"RTN","IBY399P4",110,0)
 Q
"SEC","^DIC",355.13,355.13,0,"AUDIT")
@
"SEC","^DIC",355.13,355.13,0,"DD")
@
"SEC","^DIC",355.13,355.13,0,"DEL")
@
"SEC","^DIC",355.13,355.13,0,"LAYGO")
@
"SEC","^DIC",355.13,355.13,0,"RD")
@
"SEC","^DIC",355.13,355.13,0,"WR")
@
"VER")
8.0^22.0
"^DD",36,36,.18,0)
STANDARD FTF^P355.13'^IBE(355.13,^0;18^Q
"^DD",36,36,.18,1,0)
^.1
"^DD",36,36,.18,1,1,0)
^^TRIGGER^36^.19
"^DD",36,36,.18,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,0)):^(0),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X="" S DIH=$G(^DIC(36,DIV(0),0)),DIV=X S $P(^(0),U,19)=DIV,DIH=36,DIG=.19 D ^DICR
"^DD",36,36,.18,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,0)):^(0),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X="" S DIH=$G(^DIC(36,DIV(0),0)),DIV=X S $P(^(0),U,19)=DIV,DIH=36,DIG=.19 D ^DICR
"^DD",36,36,.18,1,1,"%D",0)
^.101^2^2^3090311^^
"^DD",36,36,.18,1,1,"%D",1,0)
When changing or deleting Standard Filing Time Frame delete the 
"^DD",36,36,.18,1,1,"%D",2,0)
corresponding Value.
"^DD",36,36,.18,1,1,"CREATE VALUE")
@
"^DD",36,36,.18,1,1,"DELETE VALUE")
@
"^DD",36,36,.18,1,1,"DT")
3090311
"^DD",36,36,.18,1,1,"FIELD")
STANDARD FTF VALUE
"^DD",36,36,.18,3)
Enter the maximum standard filing time frame for this insurance company.
"^DD",36,36,.18,21,0)
^.001^2^2^3090309^^^^
"^DD",36,36,.18,21,1,0)
This is the standard filing time frame for the insurance company.  
"^DD",36,36,.18,21,2,0)
It may be automatically applied to dates of service.
"^DD",36,36,.18,"DT")
3090311
"^DD",36,36,.19,0)
STANDARD FTF VALUE^NJ8,1^^0;19^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."2N.N) X
"^DD",36,36,.19,3)
Type a Number between 0 and 999999, 1 Decimal Digit
"^DD",36,36,.19,5,1,0)
36^.18^1
"^DD",36,36,.19,21,0)
^.001^2^2^3090313^^^
"^DD",36,36,.19,21,1,0)
Enter the value corresponding to the Standard Filing Time Frame. 
"^DD",36,36,.19,21,2,0)
For example, for the time frame of Days, enter the number of days.
"^DD",36,36,.19,"DT")
3090313
"^DD",355.13,355.13,0)
FIELD^^.02^2
"^DD",355.13,355.13,0,"DDA")
N
"^DD",355.13,355.13,0,"DT")
3090309
"^DD",355.13,355.13,0,"IX","B",355.13,.01)

"^DD",355.13,355.13,0,"NM","INSURANCE FILING TIME FRAME")

"^DD",355.13,355.13,0,"PT",36,.18)

"^DD",355.13,355.13,0,"PT",355.3,.16)

"^DD",355.13,355.13,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",355.13,355.13,.01,1,0)
^.1
"^DD",355.13,355.13,.01,1,1,0)
355.13^B
"^DD",355.13,355.13,.01,1,1,1)
S ^IBE(355.13,"B",$E(X,1,30),DA)=""
"^DD",355.13,355.13,.01,1,1,2)
K ^IBE(355.13,"B",$E(X,1,30),DA)
"^DD",355.13,355.13,.01,3)
Answer must be 3-30 characters in length.
"^DD",355.13,355.13,.01,21,0)
^^3^3^3090309^
"^DD",355.13,355.13,.01,21,1,0)
The standard filing time frame that applies to the insurance.  These are
"^DD",355.13,355.13,.01,21,2,0)
the maximum amount of time from the date of service that the insurance 
"^DD",355.13,355.13,.01,21,3,0)
allows for submitting claims.
"^DD",355.13,355.13,.01,23,0)
^^2^2^3090309^
"^DD",355.13,355.13,.01,23,1,0)
These time frames will attempt to be automatically applied so the code to 
"^DD",355.13,355.13,.01,23,2,0)
apply the time frame must be defined.
"^DD",355.13,355.13,.01,"DT")
3090309
"^DD",355.13,355.13,.02,0)
VALUE^S^1:YES;0:NO;^0;2^Q
"^DD",355.13,355.13,.02,3)
Enter Yes if the Standard Filing Time Frame requires a number to fully define the time frame.
"^DD",355.13,355.13,.02,21,0)
^.001^3^3^3090309^^^
"^DD",355.13,355.13,.02,21,1,0)
This identifies those Standard Filing Time Frames that require a numeric 
"^DD",355.13,355.13,.02,21,2,0)
value to complete the time frame.  For example: the time frame of Month(s) 
"^DD",355.13,355.13,.02,21,3,0)
requires a value to identify the number of months.
"^DD",355.13,355.13,.02,"DT")
3090309
"^DD",355.3,355.3,.16,0)
PLAN STANDARD FTF^P355.13'^IBE(355.13,^0;16^Q
"^DD",355.3,355.3,.16,1,0)
^.1
"^DD",355.3,355.3,.16,1,1,0)
^^TRIGGER^355.3^.17
"^DD",355.3,355.3,.16,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,17)=DIV,DIH=355.3,DIG=.17 D ^DICR
"^DD",355.3,355.3,.16,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,17)=DIV,DIH=355.3,DIG=.17 D ^DICR
"^DD",355.3,355.3,.16,1,1,"%D",0)
^.101^2^2^3090311^^
"^DD",355.3,355.3,.16,1,1,"%D",1,0)
When changing or deleting Standard Filing Time Frame delete the
"^DD",355.3,355.3,.16,1,1,"%D",2,0)
corresponding Value.
"^DD",355.3,355.3,.16,1,1,"CREATE VALUE")
@
"^DD",355.3,355.3,.16,1,1,"DELETE VALUE")
@
"^DD",355.3,355.3,.16,1,1,"DT")
3090311
"^DD",355.3,355.3,.16,1,1,"FIELD")
PLAN STANDARD FTF VALUE
"^DD",355.3,355.3,.16,3)
Enter the maximum standard filing time frame for this plan.
"^DD",355.3,355.3,.16,21,0)
^^2^2^3090309^
"^DD",355.3,355.3,.16,21,1,0)
This is the standard filing time frame for the insurance plan.  It may be 
"^DD",355.3,355.3,.16,21,2,0)
automatically applied to dates of service.
"^DD",355.3,355.3,.16,"DT")
3090311
"^DD",355.3,355.3,.17,0)
PLAN STANDARD FTF VALUE^NJ8,1^^0;17^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."2N.N) X
"^DD",355.3,355.3,.17,3)
Type a Number between 0 and 999999, 1 Decimal Digit
"^DD",355.3,355.3,.17,5,1,0)
355.3^.16^1
"^DD",355.3,355.3,.17,21,0)
^.001^2^2^3090313^^^^
"^DD",355.3,355.3,.17,21,1,0)
Enter the value corresponding to the Standard Filing Time Frame. 
"^DD",355.3,355.3,.17,21,2,0)
For example, for the time frame of Days, enter the number of days.
"^DD",355.3,355.3,.17,"DT")
3090313
"^DD",356,356,.19,0)
REASON NOT BILLABLE^*P356.8'^IBE(356.8,^0;19^S DIC("S")="I '$P(^(0),U,5)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356,356,.19,.1)
NOT BILLABLE REASON
"^DD",356,356,.19,1,0)
^.1
"^DD",356,356,.19,1,1,0)
356^AR
"^DD",356,356,.19,1,1,1)
S ^IBT(356,"AR",$E(X,1,30),DA)=""
"^DD",356,356,.19,1,1,2)
K ^IBT(356,"AR",$E(X,1,30),DA)
"^DD",356,356,.19,1,1,"%D",0)
^^1^1^2930709^
"^DD",356,356,.19,1,1,"%D",1,0)
Regular cross reference of reason not billable
"^DD",356,356,.19,1,1,"DT")
2930709
"^DD",356,356,.19,1,3,0)
^^TRIGGER^356^.17
"^DD",356,356,.19,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$G(^IBT(356,DIV(0),0)),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR
"^DD",356,356,.19,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV S X=$$BILL^IBTUTL(DA) S DIH=$G(^IBT(356,DIV(0),0)),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR
"^DD",356,356,.19,1,3,"%D",0)
^^2^2^3040610^
"^DD",356,356,.19,1,3,"%D",1,0)
Deletes the Earliest Auto Bill Date (.17) when Reason Not Billable is set,
"^DD",356,356,.19,1,3,"%D",2,0)
event is no longer billable.  Re-sets EABD if Reason Not Billable is deleted.
"^DD",356,356,.19,1,3,"CREATE VALUE")
@
"^DD",356,356,.19,1,3,"DELETE VALUE")
S X=$$BILL^IBTUTL(DA)
"^DD",356,356,.19,1,3,"DT")
3040610
"^DD",356,356,.19,1,3,"FIELD")
EARLIEST AUTO BILL DATE
"^DD",356,356,.19,3)
Enter the primary reason this episode of care should not be billed to an insurance company.
"^DD",356,356,.19,12)
Only Active Reasons Allowed.
"^DD",356,356,.19,12.1)
S DIC("S")="I '$P(^(0),U,5)"
"^DD",356,356,.19,21,0)
^.001^6^6^3090323^^^^
"^DD",356,356,.19,21,1,0)
This is the primary reason this episode of care should not be billed to 
"^DD",356,356,.19,21,2,0)
an insurance company.
"^DD",356,356,.19,21,3,0)
 
"^DD",356,356,.19,21,4,0)
If a reason not billable is entered, then this episode will no longer
"^DD",356,356,.19,21,5,0)
appear on reports as billable and will not be used by the automated
"^DD",356,356,.19,21,6,0)
biller as a billable event.
"^DD",356,356,.19,"DT")
3081114
"^DD",356.8,356.8,0)
FIELD^^.05^6
"^DD",356.8,356.8,0,"DDA")
N
"^DD",356.8,356.8,0,"DT")
3090323
"^DD",356.8,356.8,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",356.8,356.8,0,"ID",.05)
W "   ",@("$P($P($C(59)_$S($D(^DD(356.8,.05,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,5)_"":"",2),$C(59),1)")
"^DD",356.8,356.8,0,"IX","B",356.8,.01)

"^DD",356.8,356.8,0,"IX","C",356.8,.04)

"^DD",356.8,356.8,0,"NM","CLAIMS TRACKING NON-BILLABLE REASONS")

"^DD",356.8,356.8,0,"PT",356,.19)

"^DD",356.8,356.8,0,"PT",366.141,.307)

"^DD",356.8,356.8,0,"PT",9002313.02,904)

"^DD",356.8,356.8,.001,0)
NUMBER^NJ4,0^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",356.8,356.8,.001,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",356.8,356.8,.001,21,0)
^^2^2^2931128^
"^DD",356.8,356.8,.001,21,1,0)
This is the number of the reason not billable.  It is used for look-up
"^DD",356.8,356.8,.001,21,2,0)
purposes only.
"^DD",356.8,356.8,.001,"DT")
2930930
"^DD",356.8,356.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",356.8,356.8,.01,1,0)
^.1
"^DD",356.8,356.8,.01,1,1,0)
356.8^B
"^DD",356.8,356.8,.01,1,1,1)
S ^IBE(356.8,"B",$E(X,1,30),DA)=""
"^DD",356.8,356.8,.01,1,1,2)
K ^IBE(356.8,"B",$E(X,1,30),DA)
"^DD",356.8,356.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",356.8,356.8,.01,21,0)
^^5^5^2940213^^^^
"^DD",356.8,356.8,.01,21,1,0)
Enter the name of the reason that a visit is not billable.  This is the name
"^DD",356.8,356.8,.01,21,2,0)
that will appear on displays and outputs.  If a claims tracking entry is 
"^DD",356.8,356.8,.01,21,3,0)
assigned a reaon not billable then it will be considered to not be 
"^DD",356.8,356.8,.01,21,4,0)
billable.  Users may select whether visits that have a reason not billable
"^DD",356.8,356.8,.01,21,5,0)
assigned should appear on the patients with visits and insurance reports.
"^DD",356.8,356.8,.02,0)
ECME FLAG^S^0:NO;1:YES;^0;2^Q
"^DD",356.8,356.8,.02,3)
Enter 'Yes' if the record may be used as ECME Close Claim Reason.
"^DD",356.8,356.8,.02,21,0)
^^3^3^3050224^
"^DD",356.8,356.8,.02,21,1,0)
This field is flagging the record to be used as ECME CLOSE CLAIM REASON. 
"^DD",356.8,356.8,.02,21,2,0)
The default value is 'NO'. If the field is set to 'YES' the NON-BILLABLE 
"^DD",356.8,356.8,.02,21,3,0)
REASON will appear as an option in the ECME CLOSE CLAIM SCREEN.
"^DD",356.8,356.8,.02,"DT")
3050224
"^DD",356.8,356.8,.03,0)
ECME PAPER FLAG^S^0:NO;1:YES;^0;3^Q
"^DD",356.8,356.8,.03,3)
Enter 'YES' if the closed ECME claim may be paper-billable.
"^DD",356.8,356.8,.03,21,0)
^^7^7^3050224^
"^DD",356.8,356.8,.03,21,1,0)
This flag is related to NON-BILLABLE REASONs that are marked with 
"^DD",356.8,356.8,.03,21,2,0)
ECME FLAG to be used as ECME CLOSE CLAIM REASON. If this field
"^DD",356.8,356.8,.03,21,3,0)
'ECME PAPER FLAG' is set to 'YES', it indicates that the NON BILLABLE
"^DD",356.8,356.8,.03,21,4,0)
REASON may be potentially billable "on paper". When the ECME user (OPECC)
"^DD",356.8,356.8,.03,21,5,0)
is closing the e-Pharmacy claim and enters the NON BILLABLE REASON as a
"^DD",356.8,356.8,.03,21,6,0)
CLOSE CLAIM REASON, the additional prompt will be issued to the user -
"^DD",356.8,356.8,.03,21,7,0)
should the claim be billed "on paper"?
"^DD",356.8,356.8,.03,"DT")
3050224
"^DD",356.8,356.8,.04,0)
CODE^F^^0;4^K:$L(X)>5!($L(X)<3) X
"^DD",356.8,356.8,.04,1,0)
^.1
"^DD",356.8,356.8,.04,1,1,0)
356.8^C
"^DD",356.8,356.8,.04,1,1,1)
S ^IBE(356.8,"C",$E(X,1,30),DA)=""
"^DD",356.8,356.8,.04,1,1,2)
K ^IBE(356.8,"C",$E(X,1,30),DA)
"^DD",356.8,356.8,.04,1,1,"DT")
3081021
"^DD",356.8,356.8,.04,3)
Answer must be 3-5 characters in length.
"^DD",356.8,356.8,.04,21,0)
^.001^4^4^3081021^^^^
"^DD",356.8,356.8,.04,21,1,0)
This code uniquely identifies a particular RNB by group and number.
"^DD",356.8,356.8,.04,21,2,0)
Format is Group_# where group sorts like RNBs into the following:
"^DD",356.8,356.8,.04,21,3,0)
BL-Billing, CV-Insurance Coverage, DC-Documentation, MC-Miscellaneous,
"^DD",356.8,356.8,.04,21,4,0)
MN-Medical Necessity, RX-Pharmacy, VA-VA Specific.
"^DD",356.8,356.8,.04,"DT")
3081021
"^DD",356.8,356.8,.05,0)
INACTIVE^S^0:ACTIVE;1:INACTIVE;^0;5^Q
"^DD",356.8,356.8,.05,3)
Enter INACTIVE to Inactivate this Reason Not Billable.
"^DD",356.8,356.8,.05,21,0)
^.001^1^1^3090323^^^^
"^DD",356.8,356.8,.05,21,1,0)
This indicates if the RNB is inactive and should no longer be used.
"^DD",356.8,356.8,.05,"DT")
3090323
"^DD",362.5,362.5,.04,0)
RECORD^P660'^RMPR(660,^0;4^Q
"^DD",362.5,362.5,.04,1,0)
^.1
"^DD",362.5,362.5,.04,1,1,0)
362.5^AE^MUMPS
"^DD",362.5,362.5,.04,1,1,1)
I X'<1 S ^IBA(362.5,"AE",$E(X,1,30),DA)=""
"^DD",362.5,362.5,.04,1,1,2)
K ^IBA(362.5,"AE",$E(X,1,30),DA)
"^DD",362.5,362.5,.04,1,1,"%D",0)
^.101^1^1^3090601^^^
"^DD",362.5,362.5,.04,1,1,"%D",1,0)
Cross reference for Prosthetics record pointer.
"^DD",362.5,362.5,.04,1,1,"DT")
3090601
"^DD",362.5,362.5,.04,3)
Enter the record for this prosthetic item transaction.
"^DD",362.5,362.5,.04,5,1,0)
362.5^.01^3
"^DD",362.5,362.5,.04,21,0)
^^1^1^2931229^^^^
"^DD",362.5,362.5,.04,21,1,0)
This is the Prosthetic record for this item transaction.
"^DD",362.5,362.5,.04,23,0)
^^3^3^2931229^^^^
"^DD",362.5,362.5,.04,23,1,0)
This should be automatically set by the system if a prosthetic record
"^DD",362.5,362.5,.04,23,2,0)
is chosen.  This is not required because not all items may be from
"^DD",362.5,362.5,.04,23,3,0)
prosthetics, such as fee basis charges.
"^DD",362.5,362.5,.04,"DT")
3090601
"^DIC",355.13,355.13,0)
INSURANCE FILING TIME FRAME^355.13
"^DIC",355.13,355.13,0,"GL")
^IBE(355.13,
"^DIC",355.13,355.13,"%D",0)
^1.001^11^11^3090309^^
"^DIC",355.13,355.13,"%D",1,0)
This file contains the list of valid Standard Insurance Filing Time Frames. 
"^DIC",355.13,355.13,"%D",2,0)
The time frame is the maximum amount of time from the date of service that 
"^DIC",355.13,355.13,"%D",3,0)
the Insurance Company or Plan allows for submitting claims.  
"^DIC",355.13,355.13,"%D",4,0)
 
"^DIC",355.13,355.13,"%D",5,0)
The time frames in this file are those that may be automatically applied 
"^DIC",355.13,355.13,"%D",6,0)
and therefore have a corresponding function to calculate the time frame 
"^DIC",355.13,355.13,"%D",7,0)
relative to a date of service.
"^DIC",355.13,355.13,"%D",8,0)
 
"^DIC",355.13,355.13,"%D",9,0)
Do NOT add, edit, or delete entries in this file.
"^DIC",355.13,355.13,"%D",10,0)
 
"^DIC",355.13,355.13,"%D",11,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",355.13,"B","INSURANCE FILING TIME FRAME",355.13)

"^DIC",356.8,356.8,0)
CLAIMS TRACKING NON-BILLABLE REASONS^356.8
"^DIC",356.8,356.8,0,"GL")
^IBE(356.8,
"^DIC",356.8,356.8,"%D",0)
^^7^7^2940214^^
"^DIC",356.8,356.8,"%D",1,0)
This is a file of reasons that may be entered into the claims tracking 
"^DIC",356.8,356.8,"%D",2,0)
module to specify why a potential claim isn't billable.
"^DIC",356.8,356.8,"%D",3,0)
 
"^DIC",356.8,356.8,"%D",4,0)
Do NOT add, edit, or delete entries in this file without instructions
"^DIC",356.8,356.8,"%D",5,0)
from your ISC.
"^DIC",356.8,356.8,"%D",6,0)
 
"^DIC",356.8,356.8,"%D",7,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",356.8,"B","CLAIMS TRACKING NON-BILLABLE REASONS",356.8)

"BLD",7319,6)
^380
**END**
**END**
