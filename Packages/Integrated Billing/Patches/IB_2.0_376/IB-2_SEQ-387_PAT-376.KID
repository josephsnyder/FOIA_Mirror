Released IB*2*376 SEQ #387
Extracted from mail message
**KIDS**:IB*2.0*376^

**INSTALL NAME**
IB*2.0*376
"BLD",7362,0)
IB*2.0*376^INTEGRATED BILLING^0^3090112^y
"BLD",7362,1,0)
^^4^4^3090108^
"BLD",7362,1,1,0)
This patch modifies the extract code for the Date Of Similar
"BLD",7362,1,2,0)
Illness and adds a cross reference to update the "ON
"BLD",7362,1,3,0)
HOLD DATE" cross reference after a patient merge to stay
"BLD",7362,1,4,0)
consistent with the new patients info.
"BLD",7362,4,0)
^9.64PA^350^2
"BLD",7362,4,350,0)
350
"BLD",7362,4,350,2,0)
^9.641^350^1
"BLD",7362,4,350,2,350,0)
INTEGRATED BILLING ACTION  (File-top level)
"BLD",7362,4,350,2,350,1,0)
^9.6411^.02^1
"BLD",7362,4,350,2,350,1,.02,0)
PATIENT
"BLD",7362,4,350,222)
y^n^p^^^^n^^n
"BLD",7362,4,350,224)

"BLD",7362,4,364.5,0)
364.5
"BLD",7362,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",7362,4,364.5,224)
I Y=90
"BLD",7362,4,"APDD",350,350)

"BLD",7362,4,"APDD",350,350,.02)

"BLD",7362,4,"B",350,350)

"BLD",7362,4,"B",364.5,364.5)

"BLD",7362,6.3)
3
"BLD",7362,"KRN",0)
^9.67PA^8989.52^19
"BLD",7362,"KRN",.4,0)
.4
"BLD",7362,"KRN",.401,0)
.401
"BLD",7362,"KRN",.402,0)
.402
"BLD",7362,"KRN",.403,0)
.403
"BLD",7362,"KRN",.5,0)
.5
"BLD",7362,"KRN",.84,0)
.84
"BLD",7362,"KRN",3.6,0)
3.6
"BLD",7362,"KRN",3.8,0)
3.8
"BLD",7362,"KRN",9.2,0)
9.2
"BLD",7362,"KRN",9.8,0)
9.8
"BLD",7362,"KRN",9.8,"NM",0)
^9.68A^^0
"BLD",7362,"KRN",19,0)
19
"BLD",7362,"KRN",19,"NM",0)
^9.68A^^
"BLD",7362,"KRN",19.1,0)
19.1
"BLD",7362,"KRN",101,0)
101
"BLD",7362,"KRN",409.61,0)
409.61
"BLD",7362,"KRN",771,0)
771
"BLD",7362,"KRN",870,0)
870
"BLD",7362,"KRN",8989.51,0)
8989.51
"BLD",7362,"KRN",8989.52,0)
8989.52
"BLD",7362,"KRN",8994,0)
8994
"BLD",7362,"KRN","B",.4,.4)

"BLD",7362,"KRN","B",.401,.401)

"BLD",7362,"KRN","B",.402,.402)

"BLD",7362,"KRN","B",.403,.403)

"BLD",7362,"KRN","B",.5,.5)

"BLD",7362,"KRN","B",.84,.84)

"BLD",7362,"KRN","B",3.6,3.6)

"BLD",7362,"KRN","B",3.8,3.8)

"BLD",7362,"KRN","B",9.2,9.2)

"BLD",7362,"KRN","B",9.8,9.8)

"BLD",7362,"KRN","B",19,19)

"BLD",7362,"KRN","B",19.1,19.1)

"BLD",7362,"KRN","B",101,101)

"BLD",7362,"KRN","B",409.61,409.61)

"BLD",7362,"KRN","B",771,771)

"BLD",7362,"KRN","B",870,870)

"BLD",7362,"KRN","B",8989.51,8989.51)

"BLD",7362,"KRN","B",8989.52,8989.52)

"BLD",7362,"KRN","B",8994,8994)

"BLD",7362,"QUES",0)
^9.62^^
"BLD",7362,"REQB",0)
^9.611^^0
"DATA",364.5,90,0)
N-SIMILAR ILLNESS DATE^N^E^I^399^^^
"DATA",364.5,90,1)
N IBZ S IBXDATA=$$EVENT^IBCF22(IBXIEN,.IBXSAVE,,.IBZ) I $D(IBZ) M IBXSAVE("DATE")=IBZ
"DATA",364.5,90,3,0)
^364.53^4^4^3070815^^^^
"DATA",364.5,90,3,1,0)
Fileman formatted date.  The data for box 15 on HCFA-1500 for bill entry
"DATA",364.5,90,3,2,0)
IBXIEN.  Check first for occurrence codes for illness date, or for accident
"DATA",364.5,90,3,3,0)
date or for last menstrual period, then event date on bill.  When one of
"DATA",364.5,90,3,4,0)
these is found, use it.
"FIA",350)
INTEGRATED BILLING ACTION
"FIA",350,0)
^IB(
"FIA",350,0,0)
350
"FIA",350,0,1)
y^n^p^^^^n^^n
"FIA",350,0,10)

"FIA",350,0,11)

"FIA",350,0,"RLRO")

"FIA",350,0,"VR")
2.0^IB
"FIA",350,350)
1
"FIA",350,350,.02)

"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I Y=90
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
376^3090112
"PKG",200,22,1,"PAH",1,1,0)
^^4^4^3090112
"PKG",200,22,1,"PAH",1,1,1,0)
This patch modifies the extract code for the Date Of Similar
"PKG",200,22,1,"PAH",1,1,2,0)
Illness and adds a cross reference to update the "ON
"PKG",200,22,1,"PAH",1,1,3,0)
HOLD DATE" cross reference after a patient merge to stay
"PKG",200,22,1,"PAH",1,1,4,0)
consistent with the new patients info.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
"^DD",350,350,.02,0)
PATIENT^P2'I^DPT(^0;2^Q
"^DD",350,350,.02,1,0)
^.1
"^DD",350,350,.02,1,1,0)
350^C
"^DD",350,350,.02,1,1,1)
S ^IB("C",$E(X,1,30),DA)=""
"^DD",350,350,.02,1,1,2)
K ^IB("C",$E(X,1,30),DA)
"^DD",350,350,.02,1,2,0)
350^AFDT^MUMPS
"^DD",350,350,.02,1,2,1)
I $D(^IB(DA,0)),$P(^(0),"^",17) S ^IB("AFDT",X,-$P(^(0),"^",17),DA)=""
"^DD",350,350,.02,1,2,2)
I $D(^IB(DA,0)),$P(^(0),"^",17) K ^IB("AFDT",X,-$P(^(0),"^",17),DA)
"^DD",350,350,.02,1,2,"%D",0)
^.101^5^5^3020301^^
"^DD",350,350,.02,1,2,"%D",1,0)
Cross-reference of all IB ACTION entries which represent inpatient/NHCU
"^DD",350,350,.02,1,2,"%D",2,0)
admissions by the patient field and the minus (negative or inverse) event
"^DD",350,350,.02,1,2,"%D",3,0)
date (#.17) field.  A billable event may be located for a patient using
"^DD",350,350,.02,1,2,"%D",4,0)
this cross-reference.  The "AFDT1" cross-reference on the event date (#.17)
"^DD",350,350,.02,1,2,"%D",5,0)
field is the companion to this cross-reference.
"^DD",350,350,.02,1,2,"DT")
2911101
"^DD",350,350,.02,1,3,0)
350^APTDT^MUMPS
"^DD",350,350,.02,1,3,1)
I $D(^IB(DA,1)),$P(^(1),"^",2) S ^IB("APTDT",X,$P(^(1),"^",2),DA)=""
"^DD",350,350,.02,1,3,2)
I $D(^IB(DA,1)),$P(^(1),"^",2) K ^IB("APTDT",X,$P(^(1),"^",2),DA)
"^DD",350,350,.02,1,3,"%D",0)
^^3^3^2920226^^^^
"^DD",350,350,.02,1,3,"%D",1,0)
Cross-reference of all IB ACTION entries by patient (#.02) and date entry added
"^DD",350,350,.02,1,3,"%D",2,0)
(#12) fields.  The "APTDT1" cross-reference on the date entry added field is
"^DD",350,350,.02,1,3,"%D",3,0)
the companion to this cross-reference.
"^DD",350,350,.02,1,4,0)
350^AH1^MUMPS
"^DD",350,350,.02,1,4,1)
I $D(^IB(DA,0)),$P(^(0),U,5)=8 S ^IB("AH",X,DA)=""
"^DD",350,350,.02,1,4,2)
I $D(^IB(DA,0)),$P(^(0),U,5)=8 K ^IB("AH",X,DA)
"^DD",350,350,.02,1,4,"%D",0)
^^1^1^2920302^
"^DD",350,350,.02,1,4,"%D",1,0)
All mt bills in a hold status
"^DD",350,350,.02,1,4,"DT")
2920302
"^DD",350,350,.02,1,5,0)
350^AI1^MUMPS
"^DD",350,350,.02,1,5,1)
I $D(^IB(DA,0)),$P(^(0),U,5)=99 S ^IB("AI",X,DA)=""
"^DD",350,350,.02,1,5,2)
I $D(^IB(DA,0)),$P(^(0),U,5)=99 K ^IB("AI",X,DA)
"^DD",350,350,.02,1,5,"%D",0)
^^1^1^2920430^
"^DD",350,350,.02,1,5,"%D",1,0)
COMPANION TO AI X-REF ON FIELD .05
"^DD",350,350,.02,1,5,"DT")
2920430
"^DD",350,350,.02,1,6,0)
350^ACVA^MUMPS
"^DD",350,350,.02,1,6,1)
I X,$D(^IB(DA,1)),$P(^(1),"^",5) S ^IB("ACVA",X,$P(^(1),"^",5),DA)=""
"^DD",350,350,.02,1,6,2)
I X,$D(^IB(DA,1)),$P(^(1),"^",5) K ^IB("ACVA",X,$P(^(1),"^",5),DA)
"^DD",350,350,.02,1,6,"%D",0)
^^4^4^2930728^^
"^DD",350,350,.02,1,6,"%D",1,0)
This cross-reference is used in conjunction with the ACVA1 cross
"^DD",350,350,.02,1,6,"%D",2,0)
reference on the CHAMPVA ADM DATE (#15) field to cross reference
"^DD",350,350,.02,1,6,"%D",3,0)
all CHAMPVA inpatient subsistence charges by patient and admission
"^DD",350,350,.02,1,6,"%D",4,0)
date.
"^DD",350,350,.02,1,6,"DT")
2930728
"^DD",350,350,.02,1,7,0)
350^AJ1^MUMPS
"^DD",350,350,.02,1,7,1)
I $D(^IB(DA,0)),$P(^(0),U,5)=21 S ^IB("AJ",X,DA)=""
"^DD",350,350,.02,1,7,2)
K ^IB("AJ",X,DA)
"^DD",350,350,.02,1,7,"%D",0)
^^8^8^2940601^
"^DD",350,350,.02,1,7,"%D",1,0)
Cross-reference of all IB ACTIONS for Means Test/Category C charges
"^DD",350,350,.02,1,7,"%D",2,0)
which have a STATUS (#.05) of HOLD - REVIEW.
"^DD",350,350,.02,1,7,"%D",3,0)
 
"^DD",350,350,.02,1,7,"%D",4,0)
This cross-reference is used to generate a list of all patients, and
"^DD",350,350,.02,1,7,"%D",5,0)
all charges for those patients, who have had Means Test charges
"^DD",350,350,.02,1,7,"%D",6,0)
back-billed which need to be reviewed before being passed to the
"^DD",350,350,.02,1,7,"%D",7,0)
Accounts Receivable package.  The "AJ" cross-reference on the
"^DD",350,350,.02,1,7,"%D",8,0)
STATUS (#.05) field is the companion to this cross-reference.
"^DD",350,350,.02,1,7,"DT")
2940601
"^DD",350,350,.02,1,8,0)
350^AHDT2^MUMPS
"^DD",350,350,.02,1,8,1)
I $D(^IB(DA,1)),$P(^IB(DA,1),U,6) S ^IB("AHDT",X,+$P(^IB(DA,0),U,5),$P(^IB(DA,1),U,6),DA)=""
"^DD",350,350,.02,1,8,2)
I $D(^IB(DA,1)),$P(^IB(DA,1),U,6) K ^IB("AHDT",X,+$P(^IB(DA,0),U,5),$P(^IB(DA,1),U,6),DA)
"^DD",350,350,.02,1,8,"%D",0)
^^1^1^3070815^
"^DD",350,350,.02,1,8,"%D",1,0)
Companion to 'AHDT' cross-reference on ON HOLD DATE (#16) field.
"^DD",350,350,.02,1,8,"DT")
3070815
"^DD",350,350,.02,21,0)
^^3^3^2910301^
"^DD",350,350,.02,21,1,0)
This is the patient that received services, care, or medications that
"^DD",350,350,.02,21,2,0)
caused this entry to be created.  If the debtor is the patient, this
"^DD",350,350,.02,21,3,0)
patient is the debtor.
"^DD",350,350,.02,"DT")
3070815
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"BLD",7362,6)
^387
**END**
**END**
