Released IB*2*419 SEQ #383
Extracted from mail message
**KIDS**:IB*2.0*419^

**INSTALL NAME**
IB*2.0*419
"BLD",7418,0)
IB*2.0*419^INTEGRATED BILLING^0^3090728^y
"BLD",7418,1,0)
^^1^1^3090728^
"BLD",7418,1,1,0)
Fee Basis Billing Provider
"BLD",7418,4,0)
^9.64PA^^
"BLD",7418,6.3)
1
"BLD",7418,"ABPKG")
n
"BLD",7418,"KRN",0)
^9.67PA^779.2^20
"BLD",7418,"KRN",.4,0)
.4
"BLD",7418,"KRN",.401,0)
.401
"BLD",7418,"KRN",.402,0)
.402
"BLD",7418,"KRN",.403,0)
.403
"BLD",7418,"KRN",.5,0)
.5
"BLD",7418,"KRN",.84,0)
.84
"BLD",7418,"KRN",3.6,0)
3.6
"BLD",7418,"KRN",3.8,0)
3.8
"BLD",7418,"KRN",9.2,0)
9.2
"BLD",7418,"KRN",9.8,0)
9.8
"BLD",7418,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7418,"KRN",9.8,"NM",1,0)
IBCEF79^^0^B126776634
"BLD",7418,"KRN",9.8,"NM","B","IBCEF79",1)

"BLD",7418,"KRN",19,0)
19
"BLD",7418,"KRN",19.1,0)
19.1
"BLD",7418,"KRN",101,0)
101
"BLD",7418,"KRN",409.61,0)
409.61
"BLD",7418,"KRN",771,0)
771
"BLD",7418,"KRN",779.2,0)
779.2
"BLD",7418,"KRN",870,0)
870
"BLD",7418,"KRN",8989.51,0)
8989.51
"BLD",7418,"KRN",8989.52,0)
8989.52
"BLD",7418,"KRN",8994,0)
8994
"BLD",7418,"KRN","B",.4,.4)

"BLD",7418,"KRN","B",.401,.401)

"BLD",7418,"KRN","B",.402,.402)

"BLD",7418,"KRN","B",.403,.403)

"BLD",7418,"KRN","B",.5,.5)

"BLD",7418,"KRN","B",.84,.84)

"BLD",7418,"KRN","B",3.6,3.6)

"BLD",7418,"KRN","B",3.8,3.8)

"BLD",7418,"KRN","B",9.2,9.2)

"BLD",7418,"KRN","B",9.8,9.8)

"BLD",7418,"KRN","B",19,19)

"BLD",7418,"KRN","B",19.1,19.1)

"BLD",7418,"KRN","B",101,101)

"BLD",7418,"KRN","B",409.61,409.61)

"BLD",7418,"KRN","B",771,771)

"BLD",7418,"KRN","B",779.2,779.2)

"BLD",7418,"KRN","B",870,870)

"BLD",7418,"KRN","B",8989.51,8989.51)

"BLD",7418,"KRN","B",8989.52,8989.52)

"BLD",7418,"KRN","B",8994,8994)

"BLD",7418,"QUES",0)
^9.62^^
"BLD",7418,"REQB",0)
^9.611^1^1
"BLD",7418,"REQB",1,0)
IB*2.0*400^2
"BLD",7418,"REQB","B","IB*2.0*400",1)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
419^3090728
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3090728
"PKG",200,22,1,"PAH",1,1,1,0)
Fee Basis Billing Provider
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IBCEF79")
0^1^B126776634^B127493813
"RTN","IBCEF79",1,0)
IBCEF79 ;ALB/ESG - Billing Provider functions ;13-Aug-2008
"RTN","IBCEF79",2,0)
 ;;2.0;INTEGRATED BILLING;**400,419**;21-MAR-94;Build 1
"RTN","IBCEF79",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF79",4,0)
 ;
"RTN","IBCEF79",5,0)
 Q
"RTN","IBCEF79",6,0)
 ;
"RTN","IBCEF79",7,0)
B(IBIFN,COB) ; Determine Billing Provider and Service Facility information
"RTN","IBCEF79",8,0)
 ; This function returns a string in the following format:
"RTN","IBCEF79",9,0)
 ;  [1] billing provider Institution file pointer (IEN to file 4) or "0"
"RTN","IBCEF79",10,0)
 ;      if the billing provider cannot be determined
"RTN","IBCEF79",11,0)
 ;  [2] billing provider name (.01 field in file 4) or Error reason why
"RTN","IBCEF79",12,0)
 ;      the billing provider cannot be determined - used when piece [1]=0
"RTN","IBCEF79",13,0)
 ;  [3] 0 if the service facility is a VA institution in file 4
"RTN","IBCEF79",14,0)
 ;      1 if the service facility is a non-VA facility in file 355.93
"RTN","IBCEF79",15,0)
 ;      "" if the service facility is blank - when there is no service facility
"RTN","IBCEF79",16,0)
 ;  [4] service facility IEN - either an IEN to file 4 or to file 355.93
"RTN","IBCEF79",17,0)
 ;      or "" if the service facility is blank
"RTN","IBCEF79",18,0)
 ;
"RTN","IBCEF79",19,0)
 ; Input parameters
"RTN","IBCEF79",20,0)
 ;   IBIFN - claim# required
"RTN","IBCEF79",21,0)
 ;     COB - payer sequence# - optional - defaults to current payer sequence# if not passed in
"RTN","IBCEF79",22,0)
 ;
"RTN","IBCEF79",23,0)
 NEW %,Z,IBU2,NVAFAC,BP,IB0,EVDT,IBDIV,BPDIV,BPDIVCHK,RXFLG,D,D0,DI,DIQ2,X,Y
"RTN","IBCEF79",24,0)
 S Z=""
"RTN","IBCEF79",25,0)
 S IBIFN=+$G(IBIFN)
"RTN","IBCEF79",26,0)
 I 'IBIFN S Z="0^Invalid claim.^^" G BX
"RTN","IBCEF79",27,0)
 I '$D(^DGCR(399,IBIFN,0)) S Z="0^Claim doesn't exist.^^" G BX
"RTN","IBCEF79",28,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)    ; current payer sequence default
"RTN","IBCEF79",29,0)
 I '$F(".1.2.3.","."_COB_".") S Z="0^Invalid Payer Sequence#: """_COB_"""^^" G BX
"RTN","IBCEF79",30,0)
 ;
"RTN","IBCEF79",31,0)
 ; set some initial variables for all claims
"RTN","IBCEF79",32,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF79",33,0)
 S EVDT=$P(IB0,U,3)                      ; claim event date
"RTN","IBCEF79",34,0)
 I 'EVDT S EVDT=DT                       ;   - default today if undefined
"RTN","IBCEF79",35,0)
 S IBDIV=+$P(IB0,U,22)                   ; division ptr file 40.8
"RTN","IBCEF79",36,0)
 I 'IBDIV S IBDIV=$$PRIM^VASITE(EVDT)    ;   - default primary division as of event date
"RTN","IBCEF79",37,0)
 I IBDIV'>0 S $P(Z,U,1,2)="0^Invalid Division for Event Date "_$$FMTE^XLFDT(EVDT,"5Z")_"." G BX
"RTN","IBCEF79",38,0)
 S BPDIV=+$$SITE^VASITE(EVDT,IBDIV)      ; division institution ptr file 4
"RTN","IBCEF79",39,0)
 I BPDIV'>0 S $P(Z,U,1,2)="0^Invalid Institution for Event Date "_$$FMTE^XLFDT(EVDT,"5Z")_"." G BX
"RTN","IBCEF79",40,0)
 ;
"RTN","IBCEF79",41,0)
 ; check ins co switchback flag
"RTN","IBCEF79",42,0)
 I $$INSFLGS(IBIFN,COB)>0 D  G BX
"RTN","IBCEF79",43,0)
 . N IBZ,SVCIEN,SVCTYP
"RTN","IBCEF79",44,0)
 . ; revert billing provider and service facility calculation to pre-patch 400 methods
"RTN","IBCEF79",45,0)
 . ;
"RTN","IBCEF79",46,0)
 . ; service facility is legacy N-RENDERING INSTITUTION data
"RTN","IBCEF79",47,0)
 . D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,IBIFN)
"RTN","IBCEF79",48,0)
 . S SVCIEN=+IBZ              ; service facility ien
"RTN","IBCEF79",49,0)
 . S SVCTYP=+$P(IBZ,U,2)      ; service facility type - 0=VA inst, 1=non-VA facility
"RTN","IBCEF79",50,0)
 . ;
"RTN","IBCEF79",51,0)
 . I 'SVCIEN S $P(Z,U,3)="",$P(Z,U,4)=""          ;  no svc fac
"RTN","IBCEF79",52,0)
 . I SVCIEN S $P(Z,U,3)=SVCTYP,$P(Z,U,4)=SVCIEN   ; yes svc fac
"RTN","IBCEF79",53,0)
 . ;
"RTN","IBCEF79",54,0)
 . ; billing provider = institution of main division in the database
"RTN","IBCEF79",55,0)
 . S BP=+$$SITE^VASITE
"RTN","IBCEF79",56,0)
 . I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) Q
"RTN","IBCEF79",57,0)
 . S $P(Z,U,1,2)="0^Facility Type of Main Division Institution is invalid."
"RTN","IBCEF79",58,0)
 . Q
"RTN","IBCEF79",59,0)
 ;
"RTN","IBCEF79",60,0)
 S IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEF79",61,0)
 S NVAFAC=+$P(IBU2,U,10)          ; non-VA facility
"RTN","IBCEF79",62,0)
 I NVAFAC D  G BX
"RTN","IBCEF79",63,0)
 . S $P(Z,U,3)=1                  ; service facility is the non-VA facility
"RTN","IBCEF79",64,0)
 . S $P(Z,U,4)=NVAFAC             ; ien to file 355.93
"RTN","IBCEF79",65,0)
 . S BP=BPDIV                     ; institution of division on claim (IB*2*419)
"RTN","IBCEF79",66,0)
 . I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) Q
"RTN","IBCEF79",67,0)
 . S $P(Z,U,1,2)="0^Facility Type of Claim's Division is invalid for the Billing Provider."
"RTN","IBCEF79",68,0)
 . Q
"RTN","IBCEF79",69,0)
 ;
"RTN","IBCEF79",70,0)
 S BPDIVCHK=0                            ; flag indicating if the div inst has been checked
"RTN","IBCEF79",71,0)
 S RXFLG=$$ISRX^IBCEF1(IBIFN)            ; pharmacy flag
"RTN","IBCEF79",72,0)
 ;
"RTN","IBCEF79",73,0)
 I RXFLG D
"RTN","IBCEF79",74,0)
 . S BP=+$$RXSITE^IBCEF73A(IBIFN)        ; dispensing pharmacy ien for pharmacy claims
"RTN","IBCEF79",75,0)
 . I 'BP S BP=BPDIV,BPDIVCHK=1           ; use division institution if pharmacy not found
"RTN","IBCEF79",76,0)
 . Q
"RTN","IBCEF79",77,0)
 ;
"RTN","IBCEF79",78,0)
 I 'RXFLG S BP=BPDIV,BPDIVCHK=1          ; non-Rx claims use division institution
"RTN","IBCEF79",79,0)
 ;
"RTN","IBCEF79",80,0)
 I BP,$$BPFACTYP(BP) D  G BX             ; billing provider type is valid
"RTN","IBCEF79",81,0)
 . S $P(Z,U,1,2)=$$CHK(BP)
"RTN","IBCEF79",82,0)
 . ;
"RTN","IBCEF79",83,0)
 . ; 3/27/09 - Special Case
"RTN","IBCEF79",84,0)
 . ;   If we are printing the CMS-1500 claim form, then populate the service facility with the billing provider.
"RTN","IBCEF79",85,0)
 . ;   For any other calculation, the service facility is blank here.
"RTN","IBCEF79",86,0)
 . ;
"RTN","IBCEF79",87,0)
 . I $G(^TMP("IB 1500 PRINT",$J,IBIFN)) D
"RTN","IBCEF79",88,0)
 .. S $P(Z,U,3)=0           ; service facility is in file 4
"RTN","IBCEF79",89,0)
 .. S $P(Z,U,4)=$P(Z,U,1)   ; move billing provider ien over
"RTN","IBCEF79",90,0)
 .. Q
"RTN","IBCEF79",91,0)
 . Q
"RTN","IBCEF79",92,0)
 ;
"RTN","IBCEF79",93,0)
 ; here, the BP has an invalid billing provider facility type
"RTN","IBCEF79",94,0)
 ; move this BP over to the service facility
"RTN","IBCEF79",95,0)
 S $P(Z,U,3)=0    ; service facility is in file 4
"RTN","IBCEF79",96,0)
 S $P(Z,U,4)=BP   ; move this BP over to the service facility
"RTN","IBCEF79",97,0)
 ;
"RTN","IBCEF79",98,0)
 I BPDIVCHK G B1  ; the division institution has already been checked...skip down to tag B1 to check the parent
"RTN","IBCEF79",99,0)
 ;
"RTN","IBCEF79",100,0)
 ; check the division institution
"RTN","IBCEF79",101,0)
 S BP=BPDIV,BPDIVCHK=1
"RTN","IBCEF79",102,0)
 I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) G BX
"RTN","IBCEF79",103,0)
 ;
"RTN","IBCEF79",104,0)
B1 ;
"RTN","IBCEF79",105,0)
 ; check the parent
"RTN","IBCEF79",106,0)
 S BP=$$BPPAR(BPDIV)    ; institution of the parent of the division
"RTN","IBCEF79",107,0)
 I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) G BX
"RTN","IBCEF79",108,0)
 ;
"RTN","IBCEF79",109,0)
 ; here, the facility type of the parent is also not valid, so it is an error
"RTN","IBCEF79",110,0)
 S $P(Z,U,1,2)="0^Facility Type of Division and the Division's Parent Institution are Invalid."
"RTN","IBCEF79",111,0)
BX ;
"RTN","IBCEF79",112,0)
 Q Z
"RTN","IBCEF79",113,0)
 ;
"RTN","IBCEF79",114,0)
CHK(IEN) ; Perform final billing provider checks on passed in Institution
"RTN","IBCEF79",115,0)
 ; file pointer - File 4 ien
"RTN","IBCEF79",116,0)
 ; Function returns final pieces 1 and 2 of $$B function as described above
"RTN","IBCEF79",117,0)
 NEW BP
"RTN","IBCEF79",118,0)
 S IEN=+$G(IEN)
"RTN","IBCEF79",119,0)
 I 'IEN S BP="0^Invalid Institution pointer IEN." G CHKX
"RTN","IBCEF79",120,0)
 I '$$BPCHKN(IEN) S BP="0^Not a National Institution." G CHKX
"RTN","IBCEF79",121,0)
 I '$$BPCHKA(IEN) S BP="0^Not an Active Institution." G CHKX
"RTN","IBCEF79",122,0)
 ;
"RTN","IBCEF79",123,0)
 S BP=IEN_U_$P($$NS^XUAF4(IEN),U,1)    ; ien^name  DBIA# 2171
"RTN","IBCEF79",124,0)
CHKX ;
"RTN","IBCEF79",125,0)
 Q BP
"RTN","IBCEF79",126,0)
 ;
"RTN","IBCEF79",127,0)
BPCHKN(IEN) ; Is this a national Institution?
"RTN","IBCEF79",128,0)
 N Z S Z=0
"RTN","IBCEF79",129,0)
 I $$STATUS^XUAF4(+IEN)="N" S Z=1    ; DBIA# 2171
"RTN","IBCEF79",130,0)
BPCHKNX ;
"RTN","IBCEF79",131,0)
 Q Z
"RTN","IBCEF79",132,0)
 ;
"RTN","IBCEF79",133,0)
BPCHKA(IEN) ; Is this an active Institution?
"RTN","IBCEF79",134,0)
 N Z S Z=0
"RTN","IBCEF79",135,0)
 I $$ACTIVE^XUAF4(+IEN) S Z=1        ; DBIA# 2171
"RTN","IBCEF79",136,0)
BPCHKAX ;
"RTN","IBCEF79",137,0)
 Q Z
"RTN","IBCEF79",138,0)
 ;
"RTN","IBCEF79",139,0)
BPFACTYP(IEN) ; Is the facility type of this Institution a valid Billing Provider facility type?
"RTN","IBCEF79",140,0)
 N Z S Z=0
"RTN","IBCEF79",141,0)
 I $D(^IBE(350.9,1,20,"B",+$$GET1^DIQ(4,+IEN_",",13,"I"))) S Z=1
"RTN","IBCEF79",142,0)
BPFACTPX ;
"RTN","IBCEF79",143,0)
 Q Z
"RTN","IBCEF79",144,0)
 ;
"RTN","IBCEF79",145,0)
BPPAR(IEN) ; Who is the parent for this Institution?
"RTN","IBCEF79",146,0)
 ; Function returns the IEN to file 4 of the parent institution as defined in File 4
"RTN","IBCEF79",147,0)
 N Z,PIA
"RTN","IBCEF79",148,0)
 D PARENT^XUAF4($NA(PIA),("`"_+IEN),"PARENT FACILITY")    ; DBIA# 2171
"RTN","IBCEF79",149,0)
 S Z=+$O(PIA("P",""))
"RTN","IBCEF79",150,0)
BPPARX ;
"RTN","IBCEF79",151,0)
 Q Z
"RTN","IBCEF79",152,0)
 ;
"RTN","IBCEF79",153,0)
TAX(IBIFN) ; Update default billing provider and service facility taxonomy codes
"RTN","IBCEF79",154,0)
 ; and billing provider secondary IDs and Qualifiers.
"RTN","IBCEF79",155,0)
 ; This is called via new style xrefs to update the default value of these fields
"RTN","IBCEF79",156,0)
 ;
"RTN","IBCEF79",157,0)
 N BPZ,BPTAX,SFTAX,IENS,IBTAXO,IBU3,IBM1,BPID1,BPQL1,BPID2,BPQL2,BPID3,BPQL3
"RTN","IBCEF79",158,0)
 N D,D0,DI,DIQ2,X,Y
"RTN","IBCEF79",159,0)
 ;
"RTN","IBCEF79",160,0)
 I '$G(IBIFN) G TAXQ
"RTN","IBCEF79",161,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=1 G TAXQ      ; claim is not editable
"RTN","IBCEF79",162,0)
 ;
"RTN","IBCEF79",163,0)
 S BPZ=$$B(IBIFN)     ; billing provider/service facility string
"RTN","IBCEF79",164,0)
 ;
"RTN","IBCEF79",165,0)
 ; billing provider taxonomy
"RTN","IBCEF79",166,0)
 S BPTAX=""
"RTN","IBCEF79",167,0)
 I +BPZ S BPTAX=+$P($$TAXORG^XUSTAX(+BPZ),U,2)      ; ien to file 8932.1 for VA billing provider
"RTN","IBCEF79",168,0)
 I 'BPTAX S BPTAX=""
"RTN","IBCEF79",169,0)
 ;
"RTN","IBCEF79",170,0)
 ; service facility taxonomy
"RTN","IBCEF79",171,0)
 S SFTAX=""
"RTN","IBCEF79",172,0)
 I $P(BPZ,U,3)=0,+$P(BPZ,U,4) S SFTAX=+$P($$TAXORG^XUSTAX(+$P(BPZ,U,4)),U,2)     ; ien to file 8932.1 for VA svc fac
"RTN","IBCEF79",173,0)
 I $P(BPZ,U,3)=1,+$P(BPZ,U,4) S SFTAX=+$P($$TAXGET^IBCEP81(+$P(BPZ,U,4)),U,2)    ; ien to file 8932.1 for non-VA svc fac
"RTN","IBCEF79",174,0)
 I 'SFTAX S SFTAX=""
"RTN","IBCEF79",175,0)
 ;
"RTN","IBCEF79",176,0)
 ; billing provider secondary ID#2 and qualifier#2 for each payer on the claim
"RTN","IBCEF79",177,0)
 S BPID1=$$PRVNUM^IBCU(IBIFN,,1)    ; #122
"RTN","IBCEF79",178,0)
 S BPQL1=$$PRVQUAL^IBCU(IBIFN,,1)   ; #128
"RTN","IBCEF79",179,0)
 S BPID2=$$PRVNUM^IBCU(IBIFN,,2)    ; #123
"RTN","IBCEF79",180,0)
 S BPQL2=$$PRVQUAL^IBCU(IBIFN,,2)   ; #129
"RTN","IBCEF79",181,0)
 S BPID3=$$PRVNUM^IBCU(IBIFN,,3)    ; #124
"RTN","IBCEF79",182,0)
 S BPQL3=$$PRVQUAL^IBCU(IBIFN,,3)   ; #130
"RTN","IBCEF79",183,0)
 ;
"RTN","IBCEF79",184,0)
 ; Use FileMan DBS call to update these fields if changes are necessary
"RTN","IBCEF79",185,0)
 S IENS=IBIFN_","
"RTN","IBCEF79",186,0)
 S IBU3=$G(^DGCR(399,IBIFN,"U3"))
"RTN","IBCEF79",187,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCEF79",188,0)
 I SFTAX'=$P(IBU3,U,2) S IBTAXO(399,IENS,243)=SFTAX        ; service facility taxonomy
"RTN","IBCEF79",189,0)
 I BPTAX'=$P(IBU3,U,11) S IBTAXO(399,IENS,252)=BPTAX       ; billing provider taxonomy
"RTN","IBCEF79",190,0)
 I BPID1'=$P(IBM1,U,2) S IBTAXO(399,IENS,122)=BPID1        ; primary ID
"RTN","IBCEF79",191,0)
 I BPQL1'=$P(IBM1,U,10) S IBTAXO(399,IENS,128)=BPQL1       ; primary Qual
"RTN","IBCEF79",192,0)
 I BPID2'=$P(IBM1,U,3) S IBTAXO(399,IENS,123)=BPID2        ; secondary ID
"RTN","IBCEF79",193,0)
 I BPQL2'=$P(IBM1,U,11) S IBTAXO(399,IENS,129)=BPQL2       ; secondary Qual
"RTN","IBCEF79",194,0)
 I BPID3'=$P(IBM1,U,4) S IBTAXO(399,IENS,124)=BPID3        ; tertiary ID
"RTN","IBCEF79",195,0)
 I BPQL3'=$P(IBM1,U,12) S IBTAXO(399,IENS,130)=BPQL3       ; tertiary Qual
"RTN","IBCEF79",196,0)
 ;
"RTN","IBCEF79",197,0)
 I '$D(IBTAXO) G TAXQ    ; no changes necessary
"RTN","IBCEF79",198,0)
 ;
"RTN","IBCEF79",199,0)
 D FILE^DIE(,"IBTAXO")   ; update fields
"RTN","IBCEF79",200,0)
TAXQ ;
"RTN","IBCEF79",201,0)
 Q
"RTN","IBCEF79",202,0)
 ;
"RTN","IBCEF79",203,0)
INSFLGS(IBIFN,COB) ; get insurance company flags for a given claim
"RTN","IBCEF79",204,0)
 ; returns string of flags in the following format:
"RTN","IBCEF79",205,0)
 ; switchback flag ^ send service facility flag ^ institution file address flag ^ error
"RTN","IBCEF79",206,0)
 ; switchback flag: field 36/4.11 or 36/4.12, depending on form type. "-1" if error has occurred.
"RTN","IBCEF79",207,0)
 ; send service facility flag: field 36/4.07, empty if error has occurred or switchback flag is not set.
"RTN","IBCEF79",208,0)
 ; institution file address flag: field 36/4.13, empty if error has occurred or switchback flag is not set.
"RTN","IBCEF79",209,0)
 ; 
"RTN","IBCEF79",210,0)
 N FLGS,FT,INSIEN,INS4
"RTN","IBCEF79",211,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN Q "-1^^^Invalid claim."
"RTN","IBCEF79",212,0)
 I '$D(^DGCR(399,IBIFN,0)) Q "-1^^^Claim doesn't exist."
"RTN","IBCEF79",213,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)    ; current payer sequence default
"RTN","IBCEF79",214,0)
 I '(".1.2.3."[("."_COB_".")) Q "-1^^^Invalid Payer Sequence#: """_COB_"""."
"RTN","IBCEF79",215,0)
 S INSIEN=$$POLICY^IBCEF(IBIFN,1,COB) I 'INSIEN Q "-1^^^No insurance company associated with the claim."
"RTN","IBCEF79",216,0)
 S INS4=$G(^DIC(36,INSIEN,4)),FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF79",217,0)
 S FLGS=$P(INS4,U,$S(FT=2:11,1:12)) I '+FLGS Q FLGS ; we are done if switchback flag is not set
"RTN","IBCEF79",218,0)
 S $P(FLGS,U,2)=$P(INS4,U,7),$P(FLGS,U,3)=$P(INS4,U,13) ; if switchback is set, get the other 2 flags
"RTN","IBCEF79",219,0)
 Q FLGS
"RTN","IBCEF79",220,0)
 ;
"RTN","IBCEF79",221,0)
GETBP(IBIFN,COB,INST,SUB,IBXSAVE) ; Get billing provider data for claim output
"RTN","IBCEF79",222,0)
 ; Used to extract billing provider name, address, and phone# for PRV segment and for CMS-1500, Box 33
"RTN","IBCEF79",223,0)
 ;   IBIFN - claim ien required
"RTN","IBCEF79",224,0)
 ;     COB - payer sequence (optional, defaults to current payer seq)
"RTN","IBCEF79",225,0)
 ;    INST - billing provider VA file 4 ien required
"RTN","IBCEF79",226,0)
 ;     SUB - subscript to use in IBXSAVE local array required
"RTN","IBCEF79",227,0)
 ; IBXSAVE - pass by reference
"RTN","IBCEF79",228,0)
 ;           Returns IBXSAVE(SUB,"NAME")
"RTN","IBCEF79",229,0)
 ;                   IBXSAVE(SUB,"ADDR1")
"RTN","IBCEF79",230,0)
 ;                   IBXSAVE(SUB,"ADDR2")
"RTN","IBCEF79",231,0)
 ;                   IBXSAVE(SUB,"CITY")
"RTN","IBCEF79",232,0)
 ;                   IBXSAVE(SUB,"ST")
"RTN","IBCEF79",233,0)
 ;                   IBXSAVE(SUB,"ZIP")
"RTN","IBCEF79",234,0)
 ;                   IBXSAVE(SUB,"PHONE")
"RTN","IBCEF79",235,0)
 NEW INSFLGS,SWBFLG,BPTP,MAINPTP,IBZ
"RTN","IBCEF79",236,0)
 K IBXSAVE(SUB)
"RTN","IBCEF79",237,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF79",238,0)
 ;
"RTN","IBCEF79",239,0)
 S INSFLGS=$$INSFLGS(IBIFN,COB)           ; all ins co flags
"RTN","IBCEF79",240,0)
 S SWBFLG=(+INSFLGS>0)                    ; main switchback flag
"RTN","IBCEF79",241,0)
 S (BPTP,MAINPTP)=""                      ; initialize vars used only in switchback mode
"RTN","IBCEF79",242,0)
 I SWBFLG D
"RTN","IBCEF79",243,0)
 . S BPTP=$$MAINPRV^IBJPS3                ; main division pay-to provider data string
"RTN","IBCEF79",244,0)
 . S MAINPTP=($P(BPTP,U,10)'["IB177")     ; flag that says whether main div exists as a pay-to
"RTN","IBCEF79",245,0)
 . Q
"RTN","IBCEF79",246,0)
 ;
"RTN","IBCEF79",247,0)
 ; If Switchback is ON and the ins. company parameter Use billing provider VAMC address is not on and
"RTN","IBCEF79",248,0)
 ; main div pay-to exists, then use the pay-to provider data for the main division in the database.
"RTN","IBCEF79",249,0)
 ; This is the "normal" switchback data.
"RTN","IBCEF79",250,0)
 I SWBFLG,'$P(INSFLGS,U,3),MAINPTP D  G GETBPX    ; switchback + billing provider address flag + main ptp exists
"RTN","IBCEF79",251,0)
 . S IBXSAVE(SUB,"NAME")=$P(BPTP,U,1)
"RTN","IBCEF79",252,0)
 . S IBXSAVE(SUB,"ADDR1")=$P(BPTP,U,5)
"RTN","IBCEF79",253,0)
 . S IBXSAVE(SUB,"ADDR2")=$P(BPTP,U,6)
"RTN","IBCEF79",254,0)
 . S IBXSAVE(SUB,"CITY")=$P(BPTP,U,7)
"RTN","IBCEF79",255,0)
 . S IBXSAVE(SUB,"ST")=$P(BPTP,U,8)
"RTN","IBCEF79",256,0)
 . S IBXSAVE(SUB,"ZIP")=$P(BPTP,U,9)
"RTN","IBCEF79",257,0)
 . S IBXSAVE(SUB,"PHONE")=$P(BPTP,U,4)
"RTN","IBCEF79",258,0)
 . Q
"RTN","IBCEF79",259,0)
 ;
"RTN","IBCEF79",260,0)
 ; Special Case:  Switchback is ON, the ins. company parameter Use billing provider VAMC address
"RTN","IBCEF79",261,0)
 ; is not on, but the main division is NOT defined as a Pay-To provider.
"RTN","IBCEF79",262,0)
 ; Get the name from the Institution File, but everything else from the claim's Pay-to provider
"RTN","IBCEF79",263,0)
 I SWBFLG,'$P(INSFLGS,U,3),'MAINPTP D  G GETBPX
"RTN","IBCEF79",264,0)
 . S IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)   ; Inst name
"RTN","IBCEF79",265,0)
 . S IBZ=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCEF79",266,0)
 . S IBXSAVE(SUB,"ADDR1")=$P(IBZ,U,5)
"RTN","IBCEF79",267,0)
 . S IBXSAVE(SUB,"ADDR2")=$P(IBZ,U,6)
"RTN","IBCEF79",268,0)
 . S IBXSAVE(SUB,"CITY")=$P(IBZ,U,7)
"RTN","IBCEF79",269,0)
 . S IBXSAVE(SUB,"ST")=$P(IBZ,U,8)
"RTN","IBCEF79",270,0)
 . S IBXSAVE(SUB,"ZIP")=$P(IBZ,U,9)
"RTN","IBCEF79",271,0)
 . S IBXSAVE(SUB,"PHONE")=$P(IBZ,U,4)
"RTN","IBCEF79",272,0)
 . Q
"RTN","IBCEF79",273,0)
 ;
"RTN","IBCEF79",274,0)
 ; At this point, we want to get the billing provider data from the Institution file
"RTN","IBCEF79",275,0)
 S IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)
"RTN","IBCEF79",276,0)
 S IBXSAVE(SUB,"ADDR1")=$$GETFAC^IBCEP8(INST,0,1)
"RTN","IBCEF79",277,0)
 S IBXSAVE(SUB,"ADDR2")=$$GETFAC^IBCEP8(INST,0,2)
"RTN","IBCEF79",278,0)
 S IBXSAVE(SUB,"CITY")=$$GETFAC^IBCEP8(INST,0,"3C")
"RTN","IBCEF79",279,0)
 S IBXSAVE(SUB,"ST")=$$GETFAC^IBCEP8(INST,0,"3S")
"RTN","IBCEF79",280,0)
 S IBXSAVE(SUB,"ZIP")=$$GETFAC^IBCEP8(INST,0,"3Z")
"RTN","IBCEF79",281,0)
 S IBXSAVE(SUB,"PHONE")=$$PRVPHONE^IBJPS3(IBIFN)        ; pay-to phone for claim
"RTN","IBCEF79",282,0)
 I SWBFLG,MAINPTP S IBXSAVE(SUB,"PHONE")=$P(BPTP,U,4)   ; switchback: pay-to phone for main division
"RTN","IBCEF79",283,0)
 ;
"RTN","IBCEF79",284,0)
 ; 3/30/09 - new requirement - for locally printed CMS-1500 claims, use the pay-to provider address information - Box 33
"RTN","IBCEF79",285,0)
 I 'SWBFLG,SUB="BOX33" D
"RTN","IBCEF79",286,0)
 . S IBZ=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCEF79",287,0)
 . S IBXSAVE(SUB,"ADDR1")=$P(IBZ,U,5)
"RTN","IBCEF79",288,0)
 . S IBXSAVE(SUB,"ADDR2")=$P(IBZ,U,6)
"RTN","IBCEF79",289,0)
 . S IBXSAVE(SUB,"CITY")=$P(IBZ,U,7)
"RTN","IBCEF79",290,0)
 . S IBXSAVE(SUB,"ST")=$P(IBZ,U,8)
"RTN","IBCEF79",291,0)
 . S IBXSAVE(SUB,"ZIP")=$P(IBZ,U,9)
"RTN","IBCEF79",292,0)
 . Q
"RTN","IBCEF79",293,0)
 ;
"RTN","IBCEF79",294,0)
GETBPX ;
"RTN","IBCEF79",295,0)
 Q
"RTN","IBCEF79",296,0)
 ;
"RTN","IBCEF79",297,0)
SENDSF(IBIFN,COB) ; Send service facility information for the EDI claim?
"RTN","IBCEF79",298,0)
 ; Function value returns 1 (send service facility information) or 0 (don't send it)
"RTN","IBCEF79",299,0)
 ; The only time this function returns 0 is when the pre-patch 400 switchback flag is set, and
"RTN","IBCEF79",300,0)
 ; care was provided at the main division (VAMC) in the database, and the 36,4.07 ins. co. flag is set to NO.
"RTN","IBCEF79",301,0)
 ; This function is used in the EDI claim (segments SUB, SUB2, NPI-16, and NPI-17).
"RTN","IBCEF79",302,0)
 ; IBIFN required
"RTN","IBCEF79",303,0)
 ; COB optional, defaults to current payer sequence
"RTN","IBCEF79",304,0)
 NEW SEND,INSFLGS,IBDIV,MAIN
"RTN","IBCEF79",305,0)
 S SEND=1
"RTN","IBCEF79",306,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)       ; current payer sequence default
"RTN","IBCEF79",307,0)
 S INSFLGS=$$INSFLGS(IBIFN,COB)             ; all ins co flags
"RTN","IBCEF79",308,0)
 I +INSFLGS'>0 G SENDSFX                    ; switchback is OFF...get out
"RTN","IBCEF79",309,0)
 ;
"RTN","IBCEF79",310,0)
 I $P($G(^DGCR(399,IBIFN,"U2")),U,10) G SENDSFX    ; if we have a non-VA facility on the claim, always send it
"RTN","IBCEF79",311,0)
 ;
"RTN","IBCEF79",312,0)
 S IBDIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)   ; division on claim
"RTN","IBCEF79",313,0)
 S MAIN=$$MAIN^IBCEP2B()                    ; main division in database
"RTN","IBCEF79",314,0)
 I IBDIV'=MAIN G SENDSFX                    ; care was not provided at the main division - always send it
"RTN","IBCEF79",315,0)
 ;
"RTN","IBCEF79",316,0)
 I $P(INSFLGS,U,2) G SENDSFX                ; ins. co. flag is ON so send it
"RTN","IBCEF79",317,0)
 ;
"RTN","IBCEF79",318,0)
 S SEND=0                                   ; otherwise, do not send service facility data
"RTN","IBCEF79",319,0)
 ;
"RTN","IBCEF79",320,0)
SENDSFX ;
"RTN","IBCEF79",321,0)
 Q SEND
"RTN","IBCEF79",322,0)
 ;
"VER")
8.0^22.0
"BLD",7418,6)
^383
**END**
**END**
