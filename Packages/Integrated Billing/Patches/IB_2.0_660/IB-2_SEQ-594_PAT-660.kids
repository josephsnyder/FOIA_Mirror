Released IB*2*660 SEQ #594
Extracted from mail message
**KIDS**:IB*2.0*660^

**INSTALL NAME**
IB*2.0*660
"BLD",11424,0)
IB*2.0*660^INTEGRATED BILLING^0^3191003^y
"BLD",11424,4,0)
^9.64PA^^
"BLD",11424,6.3)
4
"BLD",11424,"ABPKG")
n
"BLD",11424,"INIT")
POSTINIT^IB20P660
"BLD",11424,"KRN",0)
^9.67PA^1.5^24
"BLD",11424,"KRN",.4,0)
.4
"BLD",11424,"KRN",.401,0)
.401
"BLD",11424,"KRN",.402,0)
.402
"BLD",11424,"KRN",.403,0)
.403
"BLD",11424,"KRN",.5,0)
.5
"BLD",11424,"KRN",.84,0)
.84
"BLD",11424,"KRN",1.5,0)
1.5
"BLD",11424,"KRN",1.6,0)
1.6
"BLD",11424,"KRN",1.61,0)
1.61
"BLD",11424,"KRN",1.62,0)
1.62
"BLD",11424,"KRN",3.6,0)
3.6
"BLD",11424,"KRN",3.8,0)
3.8
"BLD",11424,"KRN",9.2,0)
9.2
"BLD",11424,"KRN",9.8,0)
9.8
"BLD",11424,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",11424,"KRN",9.8,"NM",1,0)
IBAECU^^0^B60478212
"BLD",11424,"KRN",9.8,"NM",2,0)
IB20P660^^0^B4960367
"BLD",11424,"KRN",9.8,"NM","B","IB20P660",2)

"BLD",11424,"KRN",9.8,"NM","B","IBAECU",1)

"BLD",11424,"KRN",19,0)
19
"BLD",11424,"KRN",19.1,0)
19.1
"BLD",11424,"KRN",101,0)
101
"BLD",11424,"KRN",409.61,0)
409.61
"BLD",11424,"KRN",771,0)
771
"BLD",11424,"KRN",779.2,0)
779.2
"BLD",11424,"KRN",870,0)
870
"BLD",11424,"KRN",8989.51,0)
8989.51
"BLD",11424,"KRN",8989.52,0)
8989.52
"BLD",11424,"KRN",8994,0)
8994
"BLD",11424,"KRN","B",.4,.4)

"BLD",11424,"KRN","B",.401,.401)

"BLD",11424,"KRN","B",.402,.402)

"BLD",11424,"KRN","B",.403,.403)

"BLD",11424,"KRN","B",.5,.5)

"BLD",11424,"KRN","B",.84,.84)

"BLD",11424,"KRN","B",1.5,1.5)

"BLD",11424,"KRN","B",1.6,1.6)

"BLD",11424,"KRN","B",1.61,1.61)

"BLD",11424,"KRN","B",1.62,1.62)

"BLD",11424,"KRN","B",3.6,3.6)

"BLD",11424,"KRN","B",3.8,3.8)

"BLD",11424,"KRN","B",9.2,9.2)

"BLD",11424,"KRN","B",9.8,9.8)

"BLD",11424,"KRN","B",19,19)

"BLD",11424,"KRN","B",19.1,19.1)

"BLD",11424,"KRN","B",101,101)

"BLD",11424,"KRN","B",409.61,409.61)

"BLD",11424,"KRN","B",771,771)

"BLD",11424,"KRN","B",779.2,779.2)

"BLD",11424,"KRN","B",870,870)

"BLD",11424,"KRN","B",8989.51,8989.51)

"BLD",11424,"KRN","B",8989.52,8989.52)

"BLD",11424,"KRN","B",8994,8994)

"BLD",11424,"QDEF")
^^^^NO^^^^^^NO
"BLD",11424,"QUES",0)
^9.62^^
"BLD",11424,"REQB",0)
^9.611^2^2
"BLD",11424,"REQB",1,0)
IB*2.0*618^1
"BLD",11424,"REQB",2,0)
IB*2.0*454^1
"BLD",11424,"REQB","B","IB*2.0*454",2)

"BLD",11424,"REQB","B","IB*2.0*618",1)

"INIT")
POSTINIT^IB20P660
"MBREQ")
0
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
660^3191003
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IB20P660")
0^2^B4960367^n/a
"RTN","IB20P660",1,0)
IB20P660 ;/Albany - IB*2.0*660 POST INSTALL;07/25/19 2:10pm
"RTN","IB20P660",2,0)
 ;;2.0;Integrated Billing;**660**;Mar 20, 1995;Build 4
"RTN","IB20P660",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IB20P660",4,0)
 Q
"RTN","IB20P660",5,0)
 ;
"RTN","IB20P660",6,0)
POSTINIT ;Post Install for IB*2.0*660
"RTN","IB20P660",7,0)
 D BMES^XPDUTL(" >>  Starting the Post-Initialization routine for IB*2.0*660 ")
"RTN","IB20P660",8,0)
 ; Adding BILLING GROUP(s)
"RTN","IB20P660",9,0)
 D IBUPD
"RTN","IB20P660",10,0)
 D BMES^XPDUTL(" >>  End of the Post-Initialization routine for IB*2.0*660")
"RTN","IB20P660",11,0)
 Q
"RTN","IB20P660",12,0)
 ;
"RTN","IB20P660",13,0)
IBUPD ; CC URGENT CARE Category
"RTN","IB20P660",14,0)
 N LOOP,LIEN,IBDATA
"RTN","IB20P660",15,0)
 N X,Y,DIE,DA,DR,DTOUT
"RTN","IB20P660",16,0)
 ; 
"RTN","IB20P660",17,0)
 ; Grab all of the entries to update
"RTN","IB20P660",18,0)
 D MES^XPDUTL("     -> Adding BILLING GROUP(s) for CC CANCEL Action Types (file 350.1).")
"RTN","IB20P660",19,0)
 S Y=-1
"RTN","IB20P660",20,0)
 F LOOP=1:1 S IBDATA=$T(IBDDAT+LOOP) Q:$P(IBDATA,";",3)="END"  D
"RTN","IB20P660",21,0)
 . Q:IBDATA=""    ;go to next entry if Category is not to be updated.
"RTN","IB20P660",22,0)
 . S LIEN=$O(^IBE(350.1,"B",$P(IBDATA,";",3),"")) Q:LIEN=""
"RTN","IB20P660",23,0)
 . S DR=".11///"_$P(IBDATA,";",4)  ; BILLING GROUP
"RTN","IB20P660",24,0)
 . ;
"RTN","IB20P660",25,0)
 . S DIE="^IBE(350.1,",DA=LIEN
"RTN","IB20P660",26,0)
 . D ^DIE
"RTN","IB20P660",27,0)
 Q
"RTN","IB20P660",28,0)
 ;
"RTN","IB20P660",29,0)
IBDDAT ; Fee Service to inactivate
"RTN","IB20P660",30,0)
 ;;CHOICE (INPT) CANCEL;1
"RTN","IB20P660",31,0)
 ;;CHOICE (PER DIEM) CANCEL;3
"RTN","IB20P660",32,0)
 ;;CHOICE (OPT) CANCEL;4
"RTN","IB20P660",33,0)
 ;;CHOICE (RX) CANCEL;5
"RTN","IB20P660",34,0)
 ;;CC (INPT) CANCEL;1
"RTN","IB20P660",35,0)
 ;;CC (PER DIEM) CANCEL;3
"RTN","IB20P660",36,0)
 ;;CC (OPT) CANCEL;4
"RTN","IB20P660",37,0)
 ;;CC (RX) CANCEL;5
"RTN","IB20P660",38,0)
 ;;CCN (INPT) CANCEL;1
"RTN","IB20P660",39,0)
 ;;CCN (PER DIEM) CANCEL;3
"RTN","IB20P660",40,0)
 ;;CCN (OPT) CANCEL;4
"RTN","IB20P660",41,0)
 ;;CCN (RX) CANCEL;5
"RTN","IB20P660",42,0)
 ;;CC MTF (INPT) CANCEL;1
"RTN","IB20P660",43,0)
 ;;CC MTF (PER DIEM) CANCEL;3
"RTN","IB20P660",44,0)
 ;;CC MTF (OPT) CANCEL;1
"RTN","IB20P660",45,0)
 ;;CC MTF (RX) CANCEL;5
"RTN","IB20P660",46,0)
 ;;LTC CC INPT CNH CANCEL;9
"RTN","IB20P660",47,0)
 ;;LTC CC INPT RESPITE CANCEL;9
"RTN","IB20P660",48,0)
 ;;LTC CC OPT ADHC CANCEL;8
"RTN","IB20P660",49,0)
 ;;LTC CC OPT RESPITE CANCEL;8
"RTN","IB20P660",50,0)
 ;;LTC CCN INPT CNH CANCEL;9
"RTN","IB20P660",51,0)
 ;;LTC CCN INPT RESPITE CANCEL;9
"RTN","IB20P660",52,0)
 ;;LTC CCN OPT ADHC CANCEL;8
"RTN","IB20P660",53,0)
 ;;LTC CCN OPT RESPITE CANCEL;8
"RTN","IB20P660",54,0)
 ;;LTC CHOICE INPT CNH CANCEL;9
"RTN","IB20P660",55,0)
 ;;LTC CHOICE INPT RESPITE CANCEL;9
"RTN","IB20P660",56,0)
 ;;LTC CHOICE OPT ADHC CANCEL;8
"RTN","IB20P660",57,0)
 ;;LTC CHOICE OPT RESPITE CANCEL;8
"RTN","IB20P660",58,0)
 ;;CC URGENT CARE (OPT) CANCEL;4
"RTN","IB20P660",59,0)
 ;;END
"RTN","IBAECU")
0^1^B60478212^B55994641
"RTN","IBAECU",1,0)
IBAECU ;ALB/BGA-LTC UTILITIES DETERMINE LTC ELIG ; 25-SEPT-01
"RTN","IBAECU",2,0)
 ;;2.0;INTEGRATED BILLING;**164,171,176,198,188,454,660**;21-MAR-94;Build 4
"RTN","IBAECU",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAECU",4,0)
 ;
"RTN","IBAECU",5,0)
 ; This routine contains the following utilities in support of the
"RTN","IBAECU",6,0)
 ; LTC initiative:
"RTN","IBAECU",7,0)
 ; 1. Determine if a patient is ELIGIBLE for the LTC COPAY
"RTN","IBAECU",8,0)
 ; 2. Determine if a inpatient episode is related to LTC
"RTN","IBAECU",9,0)
 ;
"RTN","IBAECU",10,0)
 ;LTCST(DFN,IBDT); - Returns '2' if LTC Eligible or else '1' Not Eligible
"RTN","IBAECU",11,0)
 ;       ; -- Returns '-1' and a second piece if there is an ERROR
"RTN","IBAECU",12,0)
 ;       ; -- If 2 LTC VET's Income Exceeds Pension Level <LTC ELIG>
"RTN","IBAECU",13,0)
 ;       ; -- If 1 Not LTC Eligible = Exempt
"RTN","IBAECU",14,0)
 ;
"RTN","IBAECU",15,0)
LTCST(DFN,IBDT,LOS) ; returns LTC status from API
"RTN","IBAECU",16,0)
 ;  input:  Patient's DFN, Date of Care, Length of stay
"RTN","IBAECU",17,0)
 ;
"RTN","IBAECU",18,0)
 ; format:  exemption flag ^ exemption reason (714.1 pointer)
"RTN","IBAECU",19,0)
 ;          ^ <181 $ amount ^ >180 $ amount ^ opt $ amount
"RTN","IBAECU",20,0)
 Q $$COPAY^EASECCAL(DFN,$$LASTDT(IBDT),LOS)
"RTN","IBAECU",21,0)
 ;
"RTN","IBAECU",22,0)
 ;
"RTN","IBAECU",23,0)
MAXRATE(IBDT) ; returns the max rates for the effective date
"RTN","IBAECU",24,0)
 ; the rates retuned are the max daily rates for any and all LTC
"RTN","IBAECU",25,0)
 ; copayments.  The return is:  outpatient^inpatient
"RTN","IBAECU",26,0)
 ;
"RTN","IBAECU",27,0)
 N IBATYP,IBR,IBL,IBT,IBCHG
"RTN","IBAECU",28,0)
 ;
"RTN","IBAECU",29,0)
 S IBR=""
"RTN","IBAECU",30,0)
 ;
"RTN","IBAECU",31,0)
 ; if IBDT less than the starting date of LTC set to the starting date
"RTN","IBAECU",32,0)
 I IBDT<3020726 S IBDT=3020726
"RTN","IBAECU",33,0)
 ;
"RTN","IBAECU",34,0)
 F IBL=1:1 S IBT=$P($T(STOP+IBL^IBAECU1),";",3) Q:IBT=""  S IBATYP=$O(^IBE(350.1,"B",IBT,0)) I IBATYP D COST^IBAUTL2 I IBCHG>IBR S IBR=IBCHG
"RTN","IBAECU",35,0)
 F IBL=1:1 S IBT=$P($T(SPEC+IBL^IBAECU1),";",3) Q:IBT=""  S IBATYP=$O(^IBE(350.1,"B",IBT,0)) I IBATYP D COST^IBAUTL2 I IBCHG>$P(IBR,"^",2) S $P(IBR,"^",2)=IBCHG
"RTN","IBAECU",36,0)
 Q IBR
"RTN","IBAECU",37,0)
 ;
"RTN","IBAECU",38,0)
FACSPEC(IBSPEC) ; returns the treating specialty for 42.4 from a facility sp
"RTN","IBAECU",39,0)
 ;
"RTN","IBAECU",40,0)
 Q $P($G(^DIC(45.7,+$G(IBSPEC),0)),"^",2)
"RTN","IBAECU",41,0)
 ;
"RTN","IBAECU",42,0)
 ;
"RTN","IBAECU",43,0)
LTCSPEC(IBSPEC)   ; Determine if INPT Specialty is related to LTC.
"RTN","IBAECU",44,0)
 ;       -- Input the ien of #42.4 Specialty
"RTN","IBAECU",45,0)
 ;
"RTN","IBAECU",46,0)
 ;       -- Output: Piece 1:  If a LTC Specialty Bedsection Pointer 399.1
"RTN","IBAECU",47,0)
 ;                            If not LTC Spec Return 0
"RTN","IBAECU",48,0)
 ;                  Piece 2:  If LTC, type of LTC
"RTN","IBAECU",49,0)
 ;
"RTN","IBAECU",50,0)
 N IBTS
"RTN","IBAECU",51,0)
 ;
"RTN","IBAECU",52,0)
 ;  get the LTC Treating Specialty type
"RTN","IBAECU",53,0)
 S IBTS=$T(@("T"_IBSPEC)^IBAECU1)
"RTN","IBAECU",54,0)
 ;
"RTN","IBAECU",55,0)
 Q $S($L(IBTS):+$E(IBTS,2,99)_"^"_$P(IBTS,";",3),1:0)
"RTN","IBAECU",56,0)
 ;
"RTN","IBAECU",57,0)
 ;
"RTN","IBAECU",58,0)
LTCSTOP(IB407)   ; Determine if the 'STOP CODE' is related to LTC.
"RTN","IBAECU",59,0)
 ;
"RTN","IBAECU",60,0)
 ;       -- Input the ien of #40.7 Clinic Stop Code
"RTN","IBAECU",61,0)
 ;
"RTN","IBAECU",62,0)
 ;       -- Output: 1st piece 1 -  LTC STOP CODE
"RTN","IBAECU",63,0)
 ;                            0 -  Not LTC STOP CODE
"RTN","IBAECU",64,0)
 ;
"RTN","IBAECU",65,0)
 ;                  2nd piece = if LTC, type of LTC
"RTN","IBAECU",66,0)
 ;
"RTN","IBAECU",67,0)
 N IBSTOP,IBSCDATA
"RTN","IBAECU",68,0)
 ;
"RTN","IBAECU",69,0)
 ;  get the stop code in IBSCDATA(40.7,IB407,1,"E")
"RTN","IBAECU",70,0)
 D DIQ407^IBEMTSCU(IB407,1)
"RTN","IBAECU",71,0)
 I $G(IBSCDATA(40.7,IB407,1,"E"))="" Q 0
"RTN","IBAECU",72,0)
 ;
"RTN","IBAECU",73,0)
 ;  get the LTC stop type
"RTN","IBAECU",74,0)
 S IBSTOP=$T(@("C"_IBSCDATA(40.7,IB407,1,"E"))^IBAECU1)
"RTN","IBAECU",75,0)
 ;
"RTN","IBAECU",76,0)
 Q $S($L(IBSTOP):+$E(IBSTOP,2,99)_"^"_$P(IBSTOP,";",3),1:0)
"RTN","IBAECU",77,0)
 ;
"RTN","IBAECU",78,0)
 ;
"RTN","IBAECU",79,0)
CLOCK(DFN,IBDATE) ; verfiy a clock exists, if not, one will be added
"RTN","IBAECU",80,0)
 N X,Y,IBCL,IBX,DA,DIE,DR,IBFLG
"RTN","IBAECU",81,0)
 ;
"RTN","IBAECU",82,0)
 ; get last clock for patient
"RTN","IBAECU",83,0)
 S IBX=9999999,IBFLG=0
"RTN","IBAECU",84,0)
 F  S IBX=$O(^IBA(351.81,"AE",DFN,IBX),-1) Q:+IBX=0!(IBFLG>0)  D
"RTN","IBAECU",85,0)
 . S IBCL=0
"RTN","IBAECU",86,0)
 . F  S IBCL=$O(^IBA(351.81,"AE",DFN,IBX,IBCL)) Q:+IBCL=0!(IBFLG>0)  D
"RTN","IBAECU",87,0)
 . . Q:+$P(^IBA(351.81,IBCL,0),"^",5)'=1  ;if it is not OPEN
"RTN","IBAECU",88,0)
 . . S IBFLG=IBCL
"RTN","IBAECU",89,0)
 ;
"RTN","IBAECU",90,0)
 ; if has an OPEN clock already
"RTN","IBAECU",91,0)
 I IBFLG>0 D  Q 1
"RTN","IBAECU",92,0)
 . I +$P(^IBA(351.81,IBFLG,0),"^",7)>0 Q  ;already flagged - quit
"RTN","IBAECU",93,0)
 . S DIE="^IBA(351.81,",DR=".07////^S X=IBDATE",DA=IBFLG D ^DIE
"RTN","IBAECU",94,0)
 ; if there is no OPEN clock the add a new clock, and set CURRENT EVENTS DATE
"RTN","IBAECU",95,0)
 S DIE="^IBA(351.81,",DA=+$$ADDCL(DFN,IBDATE),DR=".07////^S X=IBDATE" X $S(DA>0:"D ^DIE S Y=DA",1:"S Y=-1")
"RTN","IBAECU",96,0)
 Q +Y
"RTN","IBAECU",97,0)
 ;
"RTN","IBAECU",98,0)
 ;
"RTN","IBAECU",99,0)
YR(IBRTED,IBFR) ; is the effective date of the clock too old?
"RTN","IBAECU",100,0)
 ;  Input:   IBRTED  --  Effective Date
"RTN","IBAECU",101,0)
 ;             IBFR  --  Event Date
"RTN","IBAECU",102,0)
 ;  Output:       1  --  Effective Date is too old
"RTN","IBAECU",103,0)
 ;                0  --  Not
"RTN","IBAECU",104,0)
 N IBNUM,IBYR
"RTN","IBAECU",105,0)
 S IBNUM=$$FMDIFF^XLFDT(IBFR,IBRTED),IBYR=$E(IBFR,1,3)
"RTN","IBAECU",106,0)
 Q IBYR#4&(IBNUM>364)!(IBYR#4=0&(IBNUM>365))
"RTN","IBAECU",107,0)
 ;
"RTN","IBAECU",108,0)
ADDCL(DFN,IBADT) ; adds a LTC clock, returns LTC Clock IEN
"RTN","IBAECU",109,0)
 ; needs DFN and IBADT (clock begin date)
"RTN","IBAECU",110,0)
 ;
"RTN","IBAECU",111,0)
 N %DT,DD,DO,DIC,DR,X,Y,DA,DR,DIE,IBN,IBN1,IBSITE,IBFAC,DINUM,DLAYGO
"RTN","IBAECU",112,0)
 L +^IBA(351.81,0):10 I '$T S Y="-1^IB014" G ADDCLQ
"RTN","IBAECU",113,0)
 S X=$P($S($D(^IBA(351.81,0)):^(0),1:"^^-1"),"^",3)+1 L -^IBA(351.81,0) I 'X S Y="-1^IB015" G ADDCLQ
"RTN","IBAECU",114,0)
 D SITE^IBAUTL
"RTN","IBAECU",115,0)
 N IBAEXDT S IBAEXDT=$$GETEXPDT^IBAECU4(IBADT\1) ;expiration date
"RTN","IBAECU",116,0)
 S DIC="^IBA(351.81,",DIC(0)="L",DLAYGO=351.81
"RTN","IBAECU",117,0)
 F X=X:1 L:$D(IBN1) -^IBA(351.81,IBN1) I X>0,'$D(^IBA(351.81,X)) S IBN1=X L +^IBA(351.81,IBN1):1 I $T,'$D(^IBA(351.81,X)) S DINUM=X,X=+IBSITE_X D FILE^DICN I +Y>0 Q
"RTN","IBAECU",118,0)
 S IBN=+Y,DIE="^IBA(351.81,",DA=IBN,DR=".02////"_$S($D(DFN):DFN,1:"")_";.03////"_$S($D(IBADT):IBADT,1:"")_";.04////"_$S($D(IBAEXDT):IBAEXDT,1:"")_";.05////1;.06////21;"_$S(DUZ:"4.01///"_DUZ_";",1:"")_"4.02///NOW" D ^DIE
"RTN","IBAECU",119,0)
 L -^IBA(351.81,IBN1)
"RTN","IBAECU",120,0)
 S Y=$S('$D(Y):1,1:"-1^IB028")
"RTN","IBAECU",121,0)
 ;
"RTN","IBAECU",122,0)
ADDCLQ Q $S($G(IBN):IBN,1:Y)
"RTN","IBAECU",123,0)
 ;
"RTN","IBAECU",124,0)
LTCENC(DFN,DATE) ; Did the patient have LTC on a specified date?
"RTN","IBAECU",125,0)
 ; Input:    DFN  --  Pointer to the patient in file #2
"RTN","IBAECU",126,0)
 ;          DATE  --  Date of the Outpatient Visit
"RTN","IBAECU",127,0)
 ; Output:     0  --  Patient did not have a LTC on the visit date
"RTN","IBAECU",128,0)
 ;             1  --  Patient had a LTC on the visit date
"RTN","IBAECU",129,0)
 N X,Y,Y0,IBVAL,IBCBK,IBFILTER,IBLTC
"RTN","IBAECU",130,0)
 I '$G(DFN)!('$G(DATE)) G LTCENCQ
"RTN","IBAECU",131,0)
 ; - check appts, stop codes
"RTN","IBAECU",132,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DATE,IBVAL("EDT")=DATE+.9999
"RTN","IBAECU",133,0)
 ; Only parent appt or add/edit encounters
"RTN","IBAECU",134,0)
 S IBFILTER=""
"RTN","IBAECU",135,0)
 S IBCBK="I '$P(Y0,U,6),$P(Y0,U,8)<3,$P(Y0,U,3),$$LTCSTOP^IBAECU($P(Y0,U,3)),$P(Y0,U)'<$$STDATE^IBAECU1 S (IBLTC,SDSTOP)=1"
"RTN","IBAECU",136,0)
 S IBLTC=0
"RTN","IBAECU",137,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBAECU",138,0)
 I IBLTC S Y=1
"RTN","IBAECU",139,0)
LTCENCQ Q +$G(Y)
"RTN","IBAECU",140,0)
 ;
"RTN","IBAECU",141,0)
 ;
"RTN","IBAECU",142,0)
XMBACK(DFN,IBM) ; send a message saying LTC processing has stoped for an event
"RTN","IBAECU",143,0)
 ;
"RTN","IBAECU",144,0)
 N XMSUB,XMTEXT,XMY,XMZ,XMMG,IBL,IBX,IBT,XMDUZ
"RTN","IBAECU",145,0)
 ;
"RTN","IBAECU",146,0)
 D XMDEM(DFN,.IBT,.IBL)
"RTN","IBAECU",147,0)
 ;
"RTN","IBAECU",148,0)
 S XMSUB="LTC Copayment Back Billing/Error",XMY("G.IB LTC BACK BILLING")="",XMTEXT="IBT(",XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IBAECU",149,0)
 ;
"RTN","IBAECU",150,0)
 S IBX=0 F  S IBX=$O(IBM(IBX)) Q:IBX<1  S IBL=IBL+1,IBT(IBL,0)=IBM(IBX)
"RTN","IBAECU",151,0)
 ;
"RTN","IBAECU",152,0)
 D ^XMD
"RTN","IBAECU",153,0)
 ;
"RTN","IBAECU",154,0)
 Q
"RTN","IBAECU",155,0)
 ;
"RTN","IBAECU",156,0)
XMNOEC(DFN,IBDT,IBE) ; send a message saying no 1010EC on file for LTC pt.
"RTN","IBAECU",157,0)
 ; IBE is optional additional text
"RTN","IBAECU",158,0)
 ;
"RTN","IBAECU",159,0)
 N XMSUB,XMTEXT,XMY,XMZ,XMMG,IBL,IBT,XMDUZ,X
"RTN","IBAECU",160,0)
 ;
"RTN","IBAECU",161,0)
 ; if already done for this patient and month, quit
"RTN","IBAECU",162,0)
 I $D(^XTMP("IB1010EC",DFN)) Q
"RTN","IBAECU",163,0)
 S ^XTMP("IB1010EC",DFN)=""
"RTN","IBAECU",164,0)
 ;
"RTN","IBAECU",165,0)
 D XMDEM(DFN,.IBT,.IBL)
"RTN","IBAECU",166,0)
 ;
"RTN","IBAECU",167,0)
 S XMSUB="1010EC Missing for LTC Patient",XMY("G.IB LTC 1010EC MISSING")="",XMTEXT="IBT(",XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IBAECU",168,0)
 ;
"RTN","IBAECU",169,0)
 S IBL=IBL+1,IBT(IBL,0)="The above patient has received LTC services on "_$$FMTE^XLFDT(IBDT)_" and"
"RTN","IBAECU",170,0)
 S IBL=IBL+1,IBT(IBL,0)="does not have a LTC Copayment Test on file.  A LTC Copayment test needs to"
"RTN","IBAECU",171,0)
 S IBL=IBL+1,IBT(IBL,0)="be completed as soon as possible to determine the patient's eligibility"
"RTN","IBAECU",172,0)
 S IBL=IBL+1,IBT(IBL,0)="for exemption and/or copayment obligation.  Billing cannot be processed"
"RTN","IBAECU",173,0)
 S IBL=IBL+1,IBT(IBL,0)="until this information is entered."
"RTN","IBAECU",174,0)
 S IBL=IBL+1,IBT(IBL,0)=""
"RTN","IBAECU",175,0)
 I $D(IBE)>9 S X=0 F  S X=$O(IBE(X)) Q:'X  S IBL=IBL+1,IBT(IBL,0)=IBE(X)
"RTN","IBAECU",176,0)
 ;
"RTN","IBAECU",177,0)
 D ^XMD
"RTN","IBAECU",178,0)
 ;
"RTN","IBAECU",179,0)
 Q
"RTN","IBAECU",180,0)
 ;
"RTN","IBAECU",181,0)
XMDEM(DFN,IBT,IBL) ; Sets basic demographics in text
"RTN","IBAECU",182,0)
 ;
"RTN","IBAECU",183,0)
 N VADM,VA,VAERR
"RTN","IBAECU",184,0)
 ;
"RTN","IBAECU",185,0)
 D DEM^VADPT
"RTN","IBAECU",186,0)
 ;
"RTN","IBAECU",187,0)
 S IBT(1,0)="  Patient: "_VADM(1)
"RTN","IBAECU",188,0)
 S IBT(3,0)="      SSN: "_$P(VADM(2),"^",2)
"RTN","IBAECU",189,0)
 S (IBT(2,0),IBT(4,0))=" "
"RTN","IBAECU",190,0)
 S IBL=4
"RTN","IBAECU",191,0)
 ;
"RTN","IBAECU",192,0)
 Q
"RTN","IBAECU",193,0)
 ;
"RTN","IBAECU",194,0)
LASTDT(X) ; compute the last day of the month in X
"RTN","IBAECU",195,0)
 N XM,X1,X2
"RTN","IBAECU",196,0)
 I $E(X,4,5)=12 Q $E(X,1,5)_"31"
"RTN","IBAECU",197,0)
 S XM=$E(X,4,5)+1
"RTN","IBAECU",198,0)
 S:XM<10 XM="0"_XM
"RTN","IBAECU",199,0)
 S X1=$E(X,1,3)_XM_"01"
"RTN","IBAECU",200,0)
 S X2=-1
"RTN","IBAECU",201,0)
 D C^%DTC
"RTN","IBAECU",202,0)
 Q X
"RTN","IBAECU",203,0)
 ;
"RTN","IBAECU",204,0)
TOT ; calculates the total charged for a patient (for the month)
"RTN","IBAECU",205,0)
 ; requires IBFR, IBLTCST, DFN
"RTN","IBAECU",206,0)
 ; returns IBT (total amount already billed), IBTYP (inpt or opt)
"RTN","IBAECU",207,0)
 ;
"RTN","IBAECU",208,0)
 N IBDT,IBX,IBZ,IBAT
"RTN","IBAECU",209,0)
 S IBTYP="O",IBT=0
"RTN","IBAECU",210,0)
 ;
"RTN","IBAECU",211,0)
 ;IB*2.0*660 - Modify LTC Screen to look at Billing groups instead of Action Type Name in new LTCCHK function.
"RTN","IBAECU",212,0)
 S IBDT=-$E(IBFR,1,5)_"00" F  S IBDT=$O(^IB("AFDT",DFN,IBDT),-1) Q:IBDT=""!($E(IBDT,2,6)'=$E(IBFR,1,5))  S IBX=0 F  S IBX=$O(^IB("AFDT",DFN,IBDT,IBX)) Q:IBX<1  S IBZ=$G(^IB(IBX,0)),IBAT=+$P(IBZ,"^",3) I $$LTCCHK(IBAT) D
"RTN","IBAECU",213,0)
 . ;
"RTN","IBAECU",214,0)
 . ; don't use bills that are cancelled.
"RTN","IBAECU",215,0)
 . I $P($G(^IBE(350.21,+$P(IBZ,"^",5),0)),"^",5) Q
"RTN","IBAECU",216,0)
 . ;
"RTN","IBAECU",217,0)
 . ; don't use cancellation action types either
"RTN","IBAECU",218,0)
 . I $P($G(^IBE(350.1,+$P(IBZ,"^",3),0)),"^",5)=2 Q
"RTN","IBAECU",219,0)
 . ;
"RTN","IBAECU",220,0)
 . S IBT=IBT+$P(^IB(IBX,0),"^",7)
"RTN","IBAECU",221,0)
 . I $E(^IBE(350.1,$P(IBZ,"^",3),0),8,11)="INPT" S IBTYP="I"
"RTN","IBAECU",222,0)
 ;
"RTN","IBAECU",223,0)
 Q
"RTN","IBAECU",224,0)
 ;
"RTN","IBAECU",225,0)
LASTMJ() ; function to return when the Monthly Job was last run or 0
"RTN","IBAECU",226,0)
 N IBLSTDT
"RTN","IBAECU",227,0)
 S IBLSTDT=$P($G(^IBE(350.9,1,0)),"^",16)
"RTN","IBAECU",228,0)
 Q $S(IBLSTDT>3:IBLSTDT,1:0)
"RTN","IBAECU",229,0)
 ;
"RTN","IBAECU",230,0)
CDEXMPT(DFN,IBDT) ; determine if the patient is exempt from non-institutional
"RTN","IBAECU",231,0)
 ; ltc charges because of Catastrophically Disabled status
"RTN","IBAECU",232,0)
 ; 0 - not exempt from LTC, 1 - exempt from LTC
"RTN","IBAECU",233,0)
 N IBDG
"RTN","IBAECU",234,0)
 S IBDG=$$GET^DGENCDA(DFN,.IBDG)  ; IA# 4969
"RTN","IBAECU",235,0)
 I $G(IBDG("VCD"))'="Y" Q 0 ; cd indicator
"RTN","IBAECU",236,0)
 Q $S(IBDT<$G(IBDG("DATE")):0,1:1)
"RTN","IBAECU",237,0)
 ;
"RTN","IBAECU",238,0)
 ;IB*2.0*660  - Check to see if Action Type is an LTC Action Type.
"RTN","IBAECU",239,0)
LTCCHK(IBAT) ; Check to see if the action type is an LTC Action Type
"RTN","IBAECU",240,0)
 ;  Input: IBZ - Action type data from IBE(350.1,,0)
"RTN","IBAECU",241,0)
 N IBATDT,IBBG
"RTN","IBAECU",242,0)
 Q:IBAT="" 0      ;Improperly defined Action Type, not an LTC
"RTN","IBAECU",243,0)
 S IBATDT=$G(^IBE(350.1,IBAT,0))
"RTN","IBAECU",244,0)
 S IBBG=$P(IBATDT,U,11)
"RTN","IBAECU",245,0)
 Q:IBBG=9 1  ;LTC INPT Billing Group
"RTN","IBAECU",246,0)
 Q:IBBG=8 1  ;LTC OPT Billing Group
"RTN","IBAECU",247,0)
 Q 0         ;A non LTC Billing Group
"RTN","IBAECU",248,0)
 ;
"VER")
8.0^22.2
"BLD",11424,6)
^594
**END**
**END**

